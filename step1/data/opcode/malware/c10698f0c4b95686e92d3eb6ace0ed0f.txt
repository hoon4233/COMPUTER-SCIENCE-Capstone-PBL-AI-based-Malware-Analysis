mov
push
push
mov
xor
mov
push
inc
inc
outs
ins
jo
arpl
add
movs
and
add
add
add
add
inc
cmp
push
ds
mov
add
test
je
cmp
jmp
add
add
push
xsaves
addr16
add
mov
mov
fs
or
inc
call
jbe
fld
sub
add
mov
mov
mov
push
jmp
adc
mov
adc
push
loopne
cwde
jo
cmp
inc
hlt
mov
push
cli
dec
lock
shr
add
add
inc
cld
adc
push
cmp
sbb
adc
(bad)
or
sahf
push
cwde
push
mov
jne
mov
add
push
jmp
mov
sahf
mov
icebp
in
iret
sbb
or
add
add
push
nop
or
popa
enter
or
ret
sbb
inc
cmp
pop
repnz
add
add
scas
rcr
mov
ret
cmps
push
test
pop
inc
mov
add
add
mov
sar
or
add
add
sub
retf
xor
adc
inc
adc
sbb
add
add
push
imul
or
mov
and
xor
sbb
sbb
daa
loopne
in
xor
lods
aaa
push
(bad)
inc
push
mov
xchg
clc
push
push
popf
rcr
test
and
sub
add
add
push
mov
dec
or
ja
push
int3
add
sar
in
xchg
stos
pusha
sbb
add
adc
and
retf
jle
or
push
lea
jne
push
in
repnz
jnp
add
add
(bad)
cmp
add
int3
inc
enter
rol
dec
inc
adc
dec
cmp
push
call
cwde
xchg
pop
add
add
popa
and
sahf
or
dec
cwde
jb
cmp
or
ja
push
cmps
adc
dec
fisttp
mov
retf
add
mov
push
arpl
push
push
and
jne
push
mov
or
or
add
add
sbb
call
inc
ror
push
jne
push
jne
mov
rcl
jb
sbb
add
add
adc
pop
retf
imul
jge
jecxz
jmp
inc
enter
or
scas
loopne
add
add
mov
aam
sbb
add
pop
test
repz
inc
fld
add
add
and
and
popf
in
mov
cmp
jle
push
xor
push
test
add
add
sub
jg
mov
mov
jns
sub
(bad)
xchg
push
enter
sub
add
add
int
jnp
aaa
nop
(bad)
imul
into
mov
mov
jl
push
push
das
push
fstp
cmp
je
add
add
addr16
test
pop
push
xor
add
aaa
stos
ds
or
and
outs
fidivr
add
add
enter
bound
sbb
mov
xor
jb
mov
mov
add
add
adc
mov
xchg
push
or
leave
ja
adc
push
push
xor
push
sbb
and
div
xchg
jnp
sub
mov
inc
sti
push
out
fbstp
and
adc
add
add
inc
ins
mov
and
mov
fimul
adc
popa
inc
add
leave
push
cwde
adc
pop
pop
mov
ret
dec
xchg
leave
pop
hlt
and
dec
imul
add
jmp
sub
cdq
repnz
sbb
lds
cmp
jge
add
add
sbb
lea
ins
or
adc
pop
jmp
dec
scas
into
nop
adc
pop
add
add
add
push
clc
loop
sbb
pop
mov
rcr
xchg
sub
dec
adc
(bad)
and
or
jle
add
add
dec
cmps
adc
adc
jge
inc
push
test
rol
es
pop
sub
mov
add
cli
add
add
push
pop
push
push
mov
pop
je
xor
pusha
and
or
(bad)
dec
in
lock
pop
or
add
pop
sbb
mov
fstp
mov
ret
retf
add
jbe
dec
add
stc
add
add
adc
lock
or
mov
push
sub
jmp
cmp
rol
out
test
push
rcl
add
add
ins
xchg
stos
xor
pop
dec
sbb
sbb
mov
push
pop
mov
dec
cmp
retf
and
push
add
add
pop
adc
mov
jb
sti
push
and
mov
cmp
sbb
getsec
(bad)
adc
add
add
adc
and
shr
mov
mul
leave
jmp
inc
jmp
dec
rol
add
and
ja
and
sbb
in
clc
add
dec
dec
adc
xor
fcomp
adc
xor
add
add
fld
(bad)
mov
inc
fst
dec
or
pop
es
jge
sbb
sbb
ret
mov
add
add
xor
jbe
and
inc
or
push
push
lds
dec
dec
and
xchg
push
retf
add
imul
(bad)
test
sbb
dec
in
inc
leave
inc
xchg
(bad)
mov
fiadd
les
jne
mov
add
add
dec
or
sub
add
inc
sbb
addr16
push
sbb
lahf
(bad)
xchg
or
ret
lods
imul
mov
push
jo
cmp
jle
jge
vmread
pop
sub
cs
pop
sti
enter
inc
add
add
outs
ja
jge
cmp
pop
add
add
sub
mov
pusha
fst
push
add
add
stos
push
jbe
mov
mov
sub
repnz
push
rcr
or
mov
add
sbb
ret
jae
inc
jle
push
inc
inc
or
xor
cmp
retf
sbb
pop
neg
addr16
sbb
xor
add
add
adc
mov
or
cmp
scas
out
adc
cdq
and
or
or
add
push
push
xchg
mov
shl
mov
bound
inc
ds
mov
sub
or
jne
add
add
mov
dec
dec
add
mov
cmp
xchg
pop
cmp
scas
mov
pop
and
outs
xor
add
add
iret
push
ror
bound
mov
fisub
cmps
xchg
pusha
pop
inc
cmp
inc
push
scas
div
push
add
or
inc
push
pusha
fldenv
mov
icebp
push
ja
inc
ror
mov
pop
xchg
xchg
push
mov
adc
movs
pop
push
addr16
sti
cmps
imul
enter
in
xor
add
jne
adc
xchg
inc
or
lea
adc
movs
push
int
mov
add
in
inc
pop
mov
or
adc
xchg
mov
inc
adc
pop
or
jne
add
add
add
add
cwde
jne
dec
imul
or
cmp
loop
pushaw
xchg
in
js
fs
add
add
push
imul
loope
sub
mov
je
mov
lea
add
add
xchg
pop
loop
fwait
inc
(bad)
out
cmc
out
pop
add
push
add
push
leave
retf
cli
je
or
leave
movs
sbb
add
add
sbb
cmp
dec
call
xchg
xchg
cmps
push
cs
or
add
add
cmp
or
or
and
(bad)
and
(bad)
scas
mov
icebp
retf
adc
push
leave
jne
sub
add
add
sub
mov
jns
and
ds
jae
jo
xor
xchg
lea
cs
jp
add
add
pop
jmp
cdq
mov
push
jl
mov
jns
xor
jmp
pop
dec
and
cmp
jmp
cdq
add
add
add
cli
cmp
jbe
sub
fwait
and
in
and
pop
in
adc
mov
add
add
ins
push
loope
sub
adc
jl
pop
test
pop
pushf
sbb
pushf
jo
push
clc
add
add
pop
sbb
retf
sub
or
jg
push
dec
jp
pop
inc
adc
pop
mov
sbb
lock
add
lods
scas
jle
add
movs
push
cmp
sar
mov
cmp
dec
shr
mov
fnstenv
add
mov
mov
adc
cwde
imul
xor
iret
or
adc
cmps
mov
add
add
(bad)
test
xchg
movs
sub
push
data16
adc
loopne
jle
das
nop
pushf
or
imul
add
inc
es
sbb
adc
mov
xchg
mov
push
mov
jle
adc
add
add
or
dec
xchg
mov
add
movs
bound
mov
ret
sbb
fist
add
push
push
xor
lds
lods
lods
cmp
mov
add
mov
inc
add
add
add
pop
push
push
sbb
xchg
dec
lahf
rcr
scas
push
jno
or
test
mov
add
add
fs
and
cmc
xchg
xchg
lea
addr16
in
nop
or
fisttp
mov
loope
push
cld
sbb
add
dec
xor
shl
pop
lea
loop
les
jle
xor
cmp
xor
int3
jne
add
add
mov
cs
(bad)
adc
popa
pushf
push
aam
push
or
add
imul
sbb
inc
jmp
push
dec
push
loope
jle
sub
bound
add
add
or
sub
dec
sar
adc
(bad)
ja
(bad)
pop
or
xor
pushf
adc
cld
mov
add
out
lock
call
fidivr
xor
in
mov
add
add
icebp
ror
mov
shr
pop
jle
and
cmps
test
xor
icebp
dec
nop
push
add
add
or
adc
sar
je
aas
xor
pusha
or
pop
aaa
mov
aaa
or
lods
add
add
mov
stc
pop
daa
and
push
arpl
jbe
push
xchg
xchg
and
inc
sub
add
add
les
retf
or
call
std
xor
pop
pop
mov
add
add
pop
and
or
fcomp
ror
push
ret
xor
pop
adc
mov
loop
add
add
or
push
lea
div
and
xor
fldpi
push
repz
jp
pop
jecxz
sbb
add
add
lds
add
xor
mov
jne
inc
add
cmp
jb
jbe
cmp
or
add
add
lods
mov
movs
jb
add
loopne
add
xchg
xor
sub
cmps
jb
dec
in
ins
jno
add
add
iret
movs
adc
loopne
mov
push
and
or
push
jb
outs
xchg
push
cmp
aaa
add
add
pusha
arpl
es
lea
jno
mov
sub
cmp
push
shl
push
push
ret
mov
add
sahf
(bad)
lock
ret
loop
push
push
hlt
enter
ss
loop
sub
enter
xlat
add
add
jnp
fld
loop
movs
rol
jbe
lock
push
cmp
pop
je
push
xor
sbb
fcomp
add
add
dec
push
ds
ss
cli
clc
movs
sti
jns
pop
jns
cli
ret
lds
ret
mov
hlt
cmp
add
xchg
jo
aas
and
stos
lahf
daa
or
stos
fwait
nop
fscale
dec
and
jmp
sub
jl
add
add
inc
adc
or
cmp
jbe
push
mov
es
inc
imul
add
leave
add
sbb
cs
pop
mov
push
adc
inc
cwde
test
jge
push
fadd
adc
cmp
je
add
add
dec
xor
stc
lahf
fstp
adc
push
fstp
call
push
or
cs
movzx
add
add
mov
xchg
fistp
jae
sub
sbb
add
pop
test
comiss
add
add
icebp
jo
or
mul
nop
daa
cli
cld
shl
mov
sub
sub
adc
add
add
pop
in
xor
push
sub
cmp
and
sub
fcomp
and
or
loopne
add
add
scas
enter
xchg
and
cli
mov
loop
sub
fsub
sub
push
push
jge
sar
je
jl
add
add
or
push
pop
and
lock
jae
or
ret
and
(bad)
add
add
cwde
add
test
add
adc
cmps
pop
jle
push
push
and
cmps
loopne
ret
pushf
add
add
jecxz
inc
pusha
push
mov
sub
(bad)
loopne
fsub
std
inc
and
enter
and
jg
in
loopne
add
add
fild
or
loope
mov
or
jns
sub
cmp
add
add
xchg
mov
inc
or
adc
aas
jo
or
xor
lds
mov
fldenv
dec
or
add
add
ret
jbe
out
fidiv
loopne
adc
cwde
mov
sbb
pop
add
or
fs
sub
add
add
and
inc
push
jbe
aam
jg
push
and
mov
cmp
je
dec
loopne
test
add
adc
mov
rol
jb
cmp
daa
or
or
sbb
cmp
add
dec
test
scas
inc
sti
cs
push
das
add
sub
inc
movs
and
ror
add
add
cmc
jb
in
add
sbb
dec
aad
cmp
mov
sub
add
add
sbb
and
imul
or
push
mov
bound
add
add
pusha
push
inc
and
fdiv
inc
sub
push
jg
retf
mov
dec
jge
push
or
ret
bound
add
add
fwait
xchg
mov
and
push
sbb
dec
sti
push
mov
push
test
and
and
add
shl
adc
loop
imul
inc
adc
and
jge
iret
jo
mov
repz
add
add
or
push
jbe
xchg
push
xlat
push
adc
nop
es
inc
inc
pop
sti
cmp
les
jnp
add
add
imul
js
inc
jne
xor
inc
stos
(bad)
(bad)
outs
push
sbb
push
or
les
add
add
cdq
sub
sub
mov
cs
loopne
mov
jns
or
push
clc
lea
add
add
dec
cld
push
hlt
jle
ins
sub
sbb
adc
(bad)
call
dec
addr16
movs
xchg
data16
add
ds
lock
jl
inc
xchg
xchg
mov
sbb
into
sbb
dec
sbb
push
int
add
add
adc
(bad)
jns
std
inc
inc
push
fild
je
mov
xor
or
jb
xor
ins
add
add
adc
sti
or
add
adc
test
xchg
bound
jmp
retf
or
add
add
dec
test
sbb
adc
inc
lds
adc
xchg
adc
push
rol
or
add
add
pop
das
xor
mov
dec
and
push
in
jbe
or
jnp
adc
add
add
add
xchg
adc
push
outs
mov
jmp
mov
dec
adc
pop
push
add
rcr
pop
mov
add
idiv
jo
jbe
pop
stos
shl
lock
movs
mov
pop
repz
bound
push
inc
jle
jp
adc
add
inc
cmp
leave
retf
cmps
shl
dec
(bad)
repnz
mov
and
adc
inc
cmp
jmp
add
push
jp
sub
jmp
pop
dec
lds
cmp
mov
cmp
iret
nop
add
stc
add
add
and
sti
inc
leave
bnd
sbb
aas
fwait
xchg
adc
adc
mov
or
inc
mov
enter
add
mov
sbb
sub
popf
add
sbb
das
inc
jo
enter
mov
cmovae
imul
mov
mov
xor
fild
add
jne
data16
add
cld
mov
jns
add
xchg
mov
add
push
xor
repz
add
add
test
xor
lds
(bad)
push
mov
cmp
mov
xor
cmp
add
add
sbb
and
push
push
sub
add
cmovbe
nop
arpl
daa
cmp
jb
les
add
add
ds
push
or
push
push
jp
lods
ss
aas
std
ret
daa
sbb
sub
add
shr
pop
mov
jge
and
inc
(bad)
sub
sbb
mov
leave
add
add
cwde
pop
jne
cmc
into
ins
cmp
cmp
push
or
retf
fwait
cmp
or
add
add
adc
pop
dec
cmp
mov
or
push
xor
sbb
repnz
and
in
hlt
mov
add
add
mov
loopne
pop
push
xor
push
add
cmc
dec
mov
push
push
sbb
add
add
lods
scas
inc
loop
cmp
mov
leave
test
inc
cli
push
inc
or
lahf
in
pop
add
add
xor
cmp
and
inc
xchg
lock
les
and
popa
cs
outs
xchg
mov
lods
add
add
cli
in
dec
es
jle
push
inc
adc
sbb
mov
push
loop
add
add
push
push
iret
loope
sbb
cmp
shl
ret
add
cmp
je
test
mov
add
bound
adc
adc
xchg
mov
repz
add
(bad)
mov
push
stos
add
add
sub
jge
jbe
dec
cmc
mov
pop
cmps
cdq
xchg
aaa
or
and
jmp
dec
call
xor
icebp
cmp
cmp
or
inc
xchg
pop
and
mov
add
add
xor
jg
push
or
fbld
add
por
popa
inc
adc
ret
push
mov
cmp
add
add
pop
mov
fnstcw
shl
call
push
retf
and
rol
add
add
xor
cmp
jae
imul
rol
add
push
push
(bad)
push
popf
mov
push
repnz
add
add
and
shl
add
mov
retf
movs
mov
cvttps2pi
inc
out
push
dec
add
add
sub
aaa
inc
inc
fist
pop
into
adc
xchg
jmp
or
push
and
cld
push
jge
aaa
add
add
dec
nop
pushf
add
sar
add
jle
adc
clc
scas
mov
fs
sbb
fwait
mov
add
add
bound
sub
xor
ret
pop
dec
ds
retf
jae
std
or
sti
add
add
dec
popf
mov
sub
in
sti
test
cli
or
xchg
out
sub
fld
adc
add
sahf
pusha
imul
xor
sbb
lock
test
call
add
in
xchg
adc
sub
push
lds
outs
add
or
and
xor
add
mov
fwait
nop
mov
sbb
sahf
pop
mov
daa
inc
in
gs
jo
dec
or
rol
add
add
and
sub
jge
mov
sub
add
push
call
into
fld
add
add
cli
inc
ret
dec
xchg
mov
out
int
mov
cwde
gs
xchg
xchg
repnz
retf
push
push
jno
add
add
xchg
xchg
into
mov
mov
or
frstor
or
or
iret
adc
pop
in
jo
retf
daa
or
add
mov
sub
or
stos
xchg
les
inc
stos
cmc
into
inc
adc
fwait
add
add
mov
lock
aaa
ret
jo
mov
add
pusha
ins
jg
repnz
xchg
into
inc
add
add
xchg
cli
add
ja
pop
dec
addr16
test
movs
push
mov
jbe
push
xor
add
add
mov
addr16
jbe
jo
cmp
aaa
test
mov
and
inc
aam
or
add
add
adc
jmp
cmp
popf
jae
repnz
dec
mov
xor
push
test
add
add
sub
mov
arpl
push
test
mov
mov
jne
nop
retf
add
into
add
add
push
mov
cli
adc
fsub
inc
mov
and
dec
imul
das
jp
cwde
jmp
rol
add
add
add
mov
(bad)
shr
xor
jne
inc
aaa
sub
push
xacquire
test
je
add
add
jecxz
dec
inc
mov
jo
jle
popf
adc
pushf
daa
call
es
sti
imul
add
sub
daa
mov
or
push
fidiv
ficomp
sub
lahf
mov
mov
lds
add
jae
movs
clc
mov
mov
xor
jno
jbe
push
push
add
add
lock
fisttp
and
lea
ins
push
fwait
call
push
or
daa
dec
mov
cmp
add
add
jae
xchg
xor
and
push
inc
clc
mov
dec
sub
bound
push
fwait
dec
sti
clc
out
and
add
sti
dec
cmp
add
add
jb
xchg
push
cld
test
enter
pop
stos
test
lock
daa
adc
sbb
add
add
std
inc
mov
cmp
xor
out
jno
and
push
xor
jae
fsub
and
add
add
lahf
mov
inc
xchg
mov
cmp
or
dec
pop
dec
and
jns
loope
sub
adc
pop
sbb
movs
add
add
dec
in
add
(bad)
jle
mov
in
mov
adc
ret
es
fistp
lahf
inc
xchg
add
add
pop
xlat
mov
xchg
dec
push
jle
pushf
add
pop
cmp
dec
and
pop
cmp
mov
adc
add
add
inc
sub
dec
pop
push
test
aad
loopne
mov
sub
push
dec
mov
lods
rcr
add
add
mov
or
jb
dec
adc
dec
rcl
icebp
mov
push
cmp
rol
add
add
retf
add
xchg
xchg
mov
xor
add
lods
ins
jle
pop
mov
mov
nop
icebp
rol
add
sub
shr
pop
jl
push
stc
xchg
cli
ret
cmp
jae
push
pushf
daa
in
ds
cmp
adc
inc
jmp
jle
loop
sbb
gs
pop
inc
or
test
mov
mov
add
add
mov
loopne
loopne
int
fsubp
out
or
inc
jle
mov
dec
inc
inc
nop
add
add
inc
cmp
lahf
push
xchg
ret
sbb
mov
bnd
cmp
push
dec
shr
add
add
or
inc
xor
daa
neg
pop
and
sub
cmp
inc
add
add
or
dec
adc
jmp
and
sbb
and
lock
je
jl
add
add
in
adc
jmp
addr16
jge
cmp
xchg
into
inc
lahf
adc
add
add
in
das
mov
sub
int3
lock
and
rcl
mov
push
add
push
pop
sub
add
add
push
or
lock
rcl
dec
cmp
movsx
cld
adc
jnp
jecxz
nop
add
add
bnd
into
test
out
xchg
fwait
imul
pop
es
scas
dec
mov
js
push
push
movs
jo
cmp
sub
shl
and
add
retf
repz
popa
sbb
add
add
dec
and
bound
mov
and
inc
cmp
sub
xchg
sbb
jg
add
add
mov
pusha
cld
xor
sub
sahf
xchg
dec
out
mov
xchg
or
add
add
sbb
div
dec
(bad)
cmp
pop
xchg
adc
cmp
add
les
xchg
retf
add
add
rcl
inc
jno
mov
je
xchg
addr16
mov
dec
sbb
jmp
scas
fisttp
add
add
fcomp
mov
mov
add
jne
cmc
cld
pop
rcl
mov
les
rol
add
add
mov
aas
and
lock
sar
inc
es
pop
ret
add
add
adc
addr16
push
mov
xchg
adc
mov
push
or
int3
sub
pop
push
add
add
dec
lea
push
enter
jg
jmp
ds
add
int3
in
add
pop
xor
add
add
fild
adc
out
int
sub
add
enter
or
inc
mov
adc
jne
mov
movs
sub
push
sub
pop
fmul
pop
leave
test
push
or
add
sbb
cmp
es
nop
pop
or
xor
cmp
add
cmp
jo
fistp
mov
dec
clc
pusha
xchg
test
and
ins
pop
ds
push
or
add
add
and
pop
pop
mov
mov
sub
mov
lahf
lea
fmul
imul
add
and
daa
add
add
addr16
mov
push
push
(bad)
or
into
pop
into
shr
push
xchg
or
xor
(bad)
imul
mov
add
add
jo
je
jle
lods
add
je
call
(bad)
mov
dec
dec
push
push
mov
push
inc
jecxz
add
add
std
push
and
mov
ins
repnz
shl
lods
retf
add
add
out
inc
inc
imul
xor
inc
in
int3
jb
cld
icebp
lods
and
fsub
retf
add
lock
push
loop
inc
movs
xor
aam
loopne
or
push
(bad)
dec
adc
jnp
jns
add
add
cmp
pop
test
loopne
in
adc
sub
loopne
in
push
push
or
add
add
repz
cli
pusha
mov
inc
cmp
mov
movs
aaa
imul
call
aas
push
add
add
xor
fdivp
cmp
es
mov
dec
add
in
jae
daa
nop
in
sbb
add
add
ficom
pushf
cwde
or
dec
mov
stos
adc
pop
xchg
add
or
pop
and
adc
add
add
add
xor
jne
stos
ja
pop
repnz
mov
inc
adc
and
add
add
out
imul
jbe
ret
jae
nop
sbb
add
cmp
(bad)
jne
xor
add
popf
sbb
add
add
or
and
add
jbe
in
pop
test
rol
jbe
in
add
sub
xor
pop
or
add
add
mov
xchg
dec
fist
ja
or
cmp
add
add
add
and
sub
psubsw
inc
jnp
add
and
sbb
inc
push
jo
add
mov
or
add
add
add
das
into
(bad)
add
push
mov
jle
or
pop
or
jge
add
add
mov
mov
ins
sub
scas
xchg
repz
push
adc
and
jp
mov
daa
adc
and
jne
xor
sbb
fsubrp
sub
mov
mov
mov
add
pop
inc
pcmpeqd
inc
pusha
(bad)
lock
leave
jmp
call
mov
jb
pop
dec
test
add
add
mov
in
and
lea
xor
inc
dec
enter
push
retf
add
add
jnp
pop
and
scas
dec
inc
or
jecxz
lods
lods
push
push
lea
jg
push
push
dec
push
cld
xor
add
add
outs
mov
mov
and
adc
fist
cdq
mov
(bad)
call
loopne
xchg
add
add
repnz
adc
mov
inc
mov
cs
leave
push
rcl
add
add
cli
pop
test
inc
mov
clc
dec
mov
adc
nop
push
ficom
pop
inc
add
add
add
jne
mov
cmp
sbb
inc
(bad)
and
arpl
push
dec
loopne
pop
add
add
popf
push
and
jbe
or
imul
mov
push
movs
mov
inc
sbb
add
add
adc
jecxz
jge
ja
loope
dec
inc
test
lock
or
cmp
add
add
mov
and
je
xor
cmp
jnp
pop
pop
cmp
xor
add
jmp
mov
dec
fsubr
or
xor
fild
push
dec
lods
and
add
add
cmp
xor
das
or
imul
or
ins
nop
mov
rol
add
push
popa
push
imul
imul
cld
jmp
inc
adc
push
adc
add
add
mov
or
push
mov
popa
fisttp
cmp
in
or
inc
add
add
add
rcpps
pop
push
or
push
in
or
push
and
or
mov
je
pop
add
add
jo
sub
xchg
xor
xchg
jne
iret
sub
mov
ret
imul
push
push
push
mov
and
lea
mov
in
add
add
(bad)
sqrtps
push
mov
fs
add
sbb
inc
in
cwde
and
adc
add
add
add
add
mov
mov
hlt
jmp
sub
test
adc
mov
mov
mul
in
add
add
xor
cs
cli
push
jbe
lock
push
push
mov
ins
clc
xchg
and
inc
adc
pushf
add
add
cmps
push
mov
and
jnp
push
cld
pop
pop
inc
nop
enter
xor
lea
and
add
add
popf
mov
gs
inc
add
cld
ror
sbb
and
test
les
enter
add
int3
or
xchg
and
xchg
fcom
repnz
and
sets
jns
fadd
add
add
sbb
sbb
push
jnp
aam
dec
ins
fmul
es
add
add
sbb
mov
jmp
sbb
cmp
push
adc
inc
add
adc
add
add
sub
xchg
ins
push
xchg
xchg
stos
rol
mov
xor
aam
clc
icebp
push
icebp
add
add
sub
(bad)
and
dec
and
or
push
and
test
loope
fild
add
fisttp
add
add
mov
mov
pop
scas
and
xchg
(bad)
inc
clc
inc
push
call
jl
add
add
or
sbb
pop
and
hlt
repnz
sbb
popf
and
push
adc
adc
pushf
add
add
jp
jo
cmps
xchg
sbb
shl
sbb
movs
push
and
mov
cmp
or
and
dec
cmp
sbb
cmp
es
and
ret
fldenv
push
or
outs
add
add
dec
xchg
pop
xor
push
adc
inc
or
add
dec
pop
mov
add
add
add
or
stos
jo
inc
cld
pusha
push
add
inc
or
adc
ss
dec
add
sub
test
sub
add
add
fisubr
clc
popf
shl
mov
mov
enter
ss
xchg
fisttp
sbb
and
add
add
pop
mov
out
push
xor
jmp
adc
in
add
add
add
dec
aas
das
retf
mov
fistp
fsub
icebp
sub
add
sub
cmps
and
add
add
xor
xor
adc
and
xor
fnstenv
and
xchg
inc
push
ror
jnp
pop
shl
nop
add
add
sub
(bad)
push
mov
push
cld
(bad)
pop
add
stc
and
(bad)
cmp
xor
adc
adc
add
add
xor
and
(bad)
adc
mov
shl
pusha
movs
cmc
test
repz
and
add
add
adc
shr
in
ins
add
sbb
sbb
and
inc
inc
push
mov
add
adc
sub
xor
fucomip
out
inc
push
adc
adc
or
xor
ret
ins
loopne
mov
add
add
mov
out
iret
std
movs
out
mov
stc
(bad)
sbb
push
or
jb
je
pop
add
add
dec
xchg
dec
or
popa
lds
push
push
lock
cdq
in
scas
push
add
add
setge
and
ja
add
lods
imul
stos
dec
stc
jo
cmp
cwde
rcl
sbb
add
add
sub
xor
ds
adc
jne
sbb
getsec
or
add
add
jmp
sub
mov
les
shl
aam
rcl
enter
mov
add
add
pushf
xor
int3
mov
mov
das
pushf
jecxz
arpl
jb
and
iret
add
add
loopne
out
mov
push
pop
dec
sub
jmp
xor
adc
or
add
add
nop
adc
mov
retf
inc
adc
int3
fimul
pop
popa
ror
test
add
add
neg
xor
and
repnz
sbb
test
inc
fs
ds
sub
cdq
inc
das
pusha
add
add
sbb
fsub
push
inc
out
retf
les
ja
adc
adc
cmp
je
retf
sub
add
add
and
call
cmp
sub
popa
stos
mov
adc
add
add
fsub
jnp
jne
and
es
adc
(bad)
jmp
and
lods
push
jo
add
mov
leave
cdq
inc
adc
add
add
mov
shl
pop
jnp
dec
pop
repz
and
xchg
mov
pop
(bad)
cli
sub
dec
and
dec
add
add
xchg
dec
mov
cmp
les
aad
add
or
sbb
pop
daa
push
jns
mov
aam
add
add
ror
pop
or
sub
shr
fnsave
out
in
and
icebp
cmp
cs
add
add
pop
or
jl
and
add
adc
(bad)
jge
adc
rol
xor
add
add
add
add
clc
mov
push
push
iret
leave
mov
sub
push
adc
ror
cld
xchg
dec
add
add
ret
add
push
xchg
sub
mov
(bad)
adc
xchg
imul
push
inc
enter
add
add
je
cs
fcomp
push
jns
xchg
xor
aaa
push
dec
cmp
pop
and
jo
pop
add
add
adc
(bad)
and
stc
(bad)
cld
dec
push
nop
adc
sub
cld
iret
mov
sbb
add
and
add
mov
push
and
mov
imul
pop
jno
stos
add
add
call
jp
or
xchg
scas
inc
fnstsw
test
inc
imul
loopne
pushf
jo
je
add
add
jle
jae
push
push
xchg
loopne
xchg
fndisi(8087
outs
jmp
and
add
add
addr16
or
icebp
retf
inc
iret
fist
xor
mov
xchg
adc
add
add
icebp
hlt
push
cwde
js
or
enter
sti
mov
sbb
stos
dec
mov
dec
out
ret
add
add
dec
push
push
add
dec
mov
aam
inc
inc
clc
das
or
hlt
stos
xchg
(bad)
add
xchg
sti
push
test
popa
mov
and
cmps
jge
cli
pop
stos
cmp
pop
or
add
add
aas
xor
adc
stc
adc
inc
mov
cmp
adc
ret
outs
and
imul
add
add
sbb
or
loope
pop
sub
sbb
shl
setne
mov
mov
shl
nop
or
add
add
mov
loop
push
add
lock
or
cmps
rcl
daa
aam
aam
add
add
loope
xor
add
cmp
adc
(bad)
mov
mov
jg
adc
mov
add
add
cmp
push
push
fsub
dec
clc
mov
xchg
fstp
out
or
xor
add
add
mov
lea
inc
push
push
xor
test
inc
add
repz
adc
add
add
adc
mov
and
add
scas
bound
mov
(bad)
jp
dec
jle
imul
xchg
add
add
retf
das
enter
bound
xchg
sub
cs
pop
inc
mov
mov
lahf
dec
in
movs
lock
add
add
and
push
cmp
pop
dec
lock
cmp
je
dec
icebp
jge
int
clc
or
stos
push
jbe
xchg
or
cmp
mov
mov
loop
or
mov
mov
add
add
sbb
repnz
aas
jle
push
loopne
or
rcl
mov
jns
xchg
add
dec
or
pop
pusha
or
add
push
jne
repz
pop
adc
cmp
add
xor
and
ret
add
add
or
aas
adc
lods
push
push
mov
cmp
xor
test
mov
mov
mov
push
cs
cmp
fs
mov
push
jg
stos
test
pop
mov
stc
add
add
fs
imul
mov
jle
mov
rcl
push
push
ins
sub
fldenv
add
add
push
mov
sbb
xchg
std
arpl
movs
test
cmps
xchg
ror
mov
mov
add
inc
stos
inc
mov
adc
mov
jmp
je
clc
popf
inc
jl
cmp
sub
inc
mov
add
add
lea
adc
jo
inc
or
ins
push
iret
test
and
dec
push
aaa
rcl
add
push
jp
mov
push
sub
scas
shl
pop
ret
xlat
lds
fadd
add
add
cmp
daa
je
jno
or
pop
mov
sbb
cmp
jae
xchg
jae
inc
(bad)
mov
add
add
scas
mov
inc
mul
sub
jmp
fadd
loop
adc
add
add
inc
push
out
(bad)
out
cmp
and
mov
inc
ds
inc
inc
in
mov
mov
add
idiv
jne
add
add
xor
mov
pop
in
enter
xor
cmps
dec
xchg
mov
mov
dec
repz
add
add
dec
movs
shl
scas
and
pusha
sbb
and
sbb
and
bound
jle
les
sbb
add
adc
repz
mov
jo
push
xor
push
and
xchg
int
bound
add
add
mov
jne
pushw
push
mov
nop
mov
and
inc
cwde
mov
nop
xchg
fadd
add
add
repnz
les
jnp
sub
sar
pusha
out
and
jl
cmp
repnz
add
pop
fild
sub
jno
push
mov
out
mov
sbb
xchg
mov
jp
in
sbb
add
add
push
mov
mov
jl
mov
in
push
lea
push
push
lahf
add
add
xchg
mov
sub
pop
adc
clc
pop
mov
xor
sub
xchg
mov
xchg
lahf
sub
add
add
in
aaa
imul
cmp
dec
lock
addr16
and
call
push
cwde
sbb
add
add
xor
push
cmp
mov
cmp
fidiv
stc
xor
cld
jmp
inc
xchg
fimul
iret
and
je
add
add
inc
push
mov
inc
not
jg
pop
mov
push
mov
enter
sub
test
add
add
or
push
push
push
push
out
pop
and
inc
jb
xor
or
sub
mov
ret
pop
push
push
lahf
ins
xchg
xchg
add
add
xchg
adc
or
inc
mov
adc
xor
ret
add
mov
mov
add
call
jb
cdq
and
les
fisubr
xchg
mov
adc
movs
inc
add
add
push
adc
cmp
cmp
je
push
push
lea
mov
jp
clc
mov
push
in
xchg
imul
add
add
xor
push
mov
jne
ds
and
sbb
or
rol
add
add
aaa
add
scas
jg
(bad)
xor
jne
mov
pop
xlat
rcl
xor
pop
rol
in
and
add
add
adc
mov
xchg
adc
add
cs
push
stos
ret
scas
das
ror
fsubr
xchg
push
or
add
movs
pop
push
fnstsw
lods
inc
jbe
popa
dec
sbb
cmc
inc
pusha
cs
nop
(bad)
sub
push
add
add
add
xchg
iret
jnp
aam
sub
or
inc
mov
lea
enter
out
loope
hlt
outs
add
add
sub
retf
pop
inc
(bad)
pop
fwait
mov
les
out
ds
dec
mov
add
ficom
jmp
add
sar
add
mov
or
cmp
push
adc
inc
inc
or
and
stc
ret
jne
test
sbb
ret
ja
das
push
mov
inc
lock
loop
pop
xor
add
push
add
add
jns
gs
xor
add
test
sub
pop
popa
sub
add
das
add
js
mov
add
add
cmp
mov
mov
mov
sub
cmc
jo
dec
int3
rcl
push
test
or
add
jno
xchg
push
push
xchg
or
in
pop
dec
adc
movs
test
sbb
or
cmp
sti
mov
dec
cmp
ins
add
jmp
sub
adc
adc
add
add
cli
xor
push
std
xor
jmp
fsub
fmul
inc
mov
(bad)
add
add
scas
cli
add
add
sub
dec
add
xlat
fs
ficomp
ins
mov
out
xor
fiadd
rcl
add
add
adc
or
jmp
jo
div
push
cmps
jbe
pop
mov
sub
pop
add
add
sbb
sbb
push
mov
daa
or
popf
jl
pop
cdq
test
outs
cmp
add
rcl
and
adc
or
push
into
pop
adc
xor
lock
ins
ins
lahf
mov
add
popf
and
lea
pop
call
lock
nop
inc
and
push
push
hlt
add
add
add
dec
mov
push
sbb
push
dec
outs
adc
xor
pop
push
aas
dec
arpl
test
and
repnz
fidiv
(bad)
xlat
loop
call
mov
aam
sub
(bad)
or
(bad)
(bad)
cmc
jle
lea
mov
cmp
retf
xor
dec
add
add
add
(bad)
shl
sti
aad
sub
lds
jae
push
adc
ja
inc
pop
sbb
add
add
xlat
add
scas
xor
les
pop
mov
mov
cs
pop
outs
add
add
sub
jmp
mov
sbb
sbb
fcomip
ret
shl
mov
adc
loope
cs
add
add
call
xor
jne
ds
dec
pop
jno
and
ret
fcmovu
jecxz
fucomp
pop
add
add
movs
push
les
push
ror
mov
aaa
pop
xor
shl
inc
(bad)
jle
movs
lods
and
add
add
cmp
sbb
push
lea
push
push
jmp
scas
xor
mov
add
add
(bad)
fbld
sbb
push
aaa
rol
xchg
enter
adc
rol
add
add
cdq
inc
xor
sub
lds
call
(bad)
outs
mov
xchg
movs
sub
add
add
dec
xor
push
data16
icebp
icebp
jb
inc
aam
xchg
call
add
iret
cmp
mov
push
xor
xor
mov
xor
cmc
and
add
add
fcomip
shl
add
xchg
(bad)
mov
je
add
and
loope
add
add
dec
adc
in
outs
cmps
jo
add
arpl
scas
ins
mov
iret
movs
sbb
add
add
movs
sub
pop
or
push
pop
pop
push
mov
inc
jecxz
push
add
pop
xchg
mov
add
and
xchg
inc
push
inc
add
and
jge
and
pop
mov
cmp
add
add
push
mov
cmovle
in
push
stos
xlat
sub
fnstenv
fwait
pop
outs
jecxz
pop
and
add
add
mov
push
hlt
push
or
push
icebp
adc
lock
cmp
(bad)
mov
sub
mov
cld
stos
ins
jb
push
cmp
xor
lea
clc
out
adc
jo
(bad)
inc
das
shl
dec
sub
add
add
mov
imul
xchg
and
cmc
ins
nop
fdiv
lea
ror
add
add
in
pop
mov
xchg
scas
and
mov
(bad)
push
fcom
out
dec
cmp
jg
jae
data16
mov
sbb
or
sbb
or
fs
xacquire
sub
add
add
and
popf
cmps
and
imul
sbb
loop
xchg
sbb
sti
stc
dec
retf
add
add
sbb
sbb
jl
inc
mov
adc
mov
movs
jmp
push
aam
or
add
add
sti
xor
(bad)
fs
scas
xchg
or
fnstcw
cmc
sub
ror
add
add
add
enter
shr
sbb
and
sbb
pop
in
mov
pop
movs
retf
add
add
inc
sbb
and
jo
adc
lock
dec
mov
pop
pop
mov
add
add
xchg
sub
pop
mov
and
push
mov
and
je
lods
adc
in
add
add
mov
dec
call
inc
mov
imul
add
mov
jo
hlt
add
mov
add
inc
out
loopne
cld
jg
and
xor
pop
rcl
or
into
popa
mov
add
lock
add
add
ret
xchg
mov
dec
mov
push
pop
leave
cmps
pop
add
je
adc
add
scas
data16
add
add
add
sub
sar
scas
add
cli
repnz
nop
xlat
sbb
push
pushf
xor
push
jp
sbb
jl
das
push
add
add
push
pop
retf
es
add
std
add
dec
add
push
xlat
(bad)
dec
es
dec
mov
add
add
jne
fwait
add
push
in
lock
push
hlt
ret
jo
push
inc
inc
addr16
xor
jb
add
cmp
je
aad
loope
inc
out
mov
mov
sbb
sub
add
add
jmp
dec
repnz
lods
cmp
mov
cmp
push
sti
jle
ficom
add
add
mov
repz
push
adc
adc
je
mov
adc
jge
rcl
aad
add
add
jmp
and
pop
rcl
test
das
add
xor
mov
data16
test
mov
add
fstp
pop
lock
or
and
ds
cwde
cmp
(bad)
mov
add
add
lea
mov
xchg
adc
cmp
mov
fcom
mov
mov
retf
jg
nop
dec
and
mov
call
mov
inc
hlt
xor
pop
jecxz
popf
shr
push
movs
pop
xchg
add
add
sbb
aam
(bad)
push
inc
xchg
sar
rcpps
or
add
mov
add
add
jo
popa
enter
retf
push
in
mov
test
push
mov
test
cmc
and
add
add
adc
retf
push
cmp
ja
add
into
dec
test
push
repnz
xor
sub
adc
add
add
jns
daa
pusha
mov
dec
lock
inc
inc
les
shr
jmp
adc
add
add
js
addr16
sbb
xchg
loope
push
xchg
ins
shr
int3
sub
sbb
sub
add
add
cld
mul
pop
movs
xchg
cmp
add
sbb
or
into
add
add
xchg
fist
mov
xchg
mov
mov
and
lahf
cdq
add
jmp
add
add
lock
jns
hlt
cs
shr
mov
push
lods
dec
nop
retf
pushf
fidiv
jg
push
add
add
mov
test
mov
and
cmc
jg
enter
add
mov
adc
mov
add
rol
or
sub
jo
(bad)
xchg
(bad)
mov
enter
sbb
pop
lods
pop
daa
and
add
add
test
pop
rcl
jbe
leave
pop
inc
jecxz
fisttp
mov
cmp
push
cmc
adc
fs
add
push
adc
ja
scas
rcl
xor
and
push
cmp
jecxz
and
ds
inc
repz
add
add
stos
or
push
push
adc
xor
sub
cs
mov
das
dec
clc
and
rcr
lds
pop
dec
add
add
sub
push
xor
in
cmc
xor
ins
jo
int
ror
xor
pop
sub
sbb
add
push
add
adc
pop
shr
mov
dec
out
enter
les
or
add
add
sub
add
jne
push
(bad)
icebp
push
mov
je
xchg
push
dec
inc
scas
add
add
and
push
mov
adc
clc
dec
sbb
pop
int3
cmp
xchg
ror
leave
(bad)
or
pop
cld
add
add
loope
sbb
mov
inc
outs
push
push
jmp
arpl
mov
fsin
mov
add
add
dec
mov
push
cld
xor
cmp
fadd
test
inc
mov
adc
xchg
jge
add
add
scas
inc
push
xchg
mov
rol
mov
cmp
mov
cmp
lahf
add
add
icebp
dec
stc
inc
xchg
mov
mov
cmp
sub
(bad)
fwait
pop
into
pop
xor
add
add
sar
adc
push
and
sbb
fist
pop
sar
cmps
dec
mov
es
add
add
xchg
or
sub
mov
push
aad
mov
in
imul
inc
fiadd
leave
pop
rol
add
bound
sbb
mov
cmp
cld
mov
test
sub
test
out
leave
aaa
and
add
add
push
in
cmps
sbb
dec
js
xor
data16
sbb
and
adc
add
add
add
add
adc
je
stos
add
xchg
and
pop
or
or
add
sbb
cmp
lock
mov
pop
mov
sub
call
jnp
push
add
add
or
pop
stos
pusha
inc
loope
and
jb
add
sbb
iret
mov
push
fmul
and
add
add
sbb
sbb
and
popa
sub
test
mov
scas
fs
sbb
test
add
pop
icebp
in
cmps
ret
test
xor
outs
pop
cmp
ja
jg
cdq
sub
adc
inc
dec
stos
add
add
dec
adc
movs
je
loop
sub
mov
add
mov
mov
das
jle
xchg
fldenv
add
mov
sti
aaa
rcl
lahf
rol
jne
lods
mov
std
and
and
jg
ret
lods
add
add
leave
pop
push
xchg
cmp
or
sbb
adc
push
pop
mov
mov
mov
xchg
loopne
add
add
mov
in
or
and
push
adc
or
xchg
push
lahf
mov
cmp
mov
add
add
adc
cwde
mul
add
sub
mov
sbb
pop
inc
push
push
fist
add
add
dec
aam
push
(bad)
push
test
imul
add
mov
xor
cmp
add
add
sub
sti
es
cmps
sbb
push
ffreep
mov
enter
mov
add
add
add
pop
and
nop
push
sbb
and
or
icebp
ret
pop
or
jge
loop
loope
sbb
add
add
mov
lahf
mov
cmps
cmp
dec
shl
inc
sub
push
cmps
and
mov
sti
push
mov
loopne
or
jge
mov
add
leave
cmp
setne
jmp
in
mov
add
add
rcl
and
repnz
mov
int3
movs
pop
push
dec
call
fs
test
call
jle
add
add
pop
das
mov
push
ja
mov
loope
dec
lea
int3
sub
stos
mov
xchg
pop
push
add
add
adc
bound
add
call
lock
push
jg
sub
xor
adc
adc
add
add
pop
jge
adc
cmp
sub
sub
adc
test
mov
fcom
xor
add
add
fs
enter
dec
fisubr
xchg
adc
xchg
sub
xor
pop
sbb
jmp
dec
add
add
test
pop
xchg
jns
jno
js
fmul
adc
test
popa
dec
hlt
push
sub
push
xor
xchg
push
shr
push
or
outs
lea
add
shl
cmps
into
std
and
inc
rol
add
add
cdq
inc
pop
sbb
mov
adc
data16
adc
push
dec
cs
sub
leave
call
add
adc
dec
push
push
xchg
mov
inc
repnz
cmps
pop
ins
push
xchg
repz
rol
add
add
cld
ja
or
sbb
jle
es
fidiv
jl
in
cli
pop
mov
add
shl
xchg
mov
daa
popf
push
mov
dec
in
pop
in
mov
add
add
fisttp
jge
pop
mov
dec
sbb
sbb
hlt
pushf
and
popf
aad
test
add
add
cli
push
sub
and
jmp
cmps
pop
in
icebp
lods
sbb
xchg
jle
imul
add
add
ds
clc
cmp
push
loopne
or
cdq
push
mov
mov
add
add
movs
test
loopne
xchg
inc
mul
scas
xchg
jns
jp
add
lds
ret
xlat
add
add
outs
push
call
cld
push
pop
in
jno
mov
mov
push
pop
mov
add
test
ins
movs
mov
arpl
mov
fisttp
(bad)
iret
stos
add
add
adc
and
and
adc
into
lods
inc
int3
call
shl
mov
add
add
xchg
xchg
sti
jno
push
(bad)
jne
xor
and
call
ret
cld
xor
(bad)
retf
jns
add
add
pop
std
sbb
add
push
cmc
xor
pop
adc
ds
xchg
add
add
xlat
(bad)
inc
fsub
test
inc
sti
test
xchg
adc
jmp
(bad)
int
in
push
pop
add
add
adc
loopne
push
xchg
stc
lea
aaa
and
adc
mov
jbe
stos
(bad)
add
add
add
popf
inc
test
repz
ret
ror
jge
pop
mov
push
pop
sbb
adc
sar
add
add
xchg
xchg
arpl
push
pop
or
out
pusha
xchg
test
xor
sbb
add
add
mov
mov
lock
sub
imul
adc
xchg
or
mov
add
add
out
and
fwait
pop
xchg
pop
stos
inc
outs
add
jmp
lock
push
in
add
inc
add
popf
dec
mov
add
add
in
or
mov
mov
loop
push
pop
(bad)
mov
add
jle
dec
in
dec
xlat
xor
sbb
(bad)
jle
sbb
dec
jns
push
fimul
test
add
add
or
mov
lahf
jl
xchg
sub
and
cmp
je
scas
mov
(bad)
dec
fimul
dec
xor
sub
jne
mov
mov
xchg
aam
add
add
in
jns
mov
jnp
dec
xor
dec
push
aad
or
sub
retf
imul
add
add
sub
dec
sbb
dec
les
gs
mov
push
xchg
add
xchg
pop
enterw
icebp
ds
cwde
add
mov
adc
lea
js
jge
or
pop
mov
or
jg
gs
mov
xchg
test
dec
fisttp
into
xchg
fs
add
or
ret
test
sub
dec
push
(bad)
lock
xchg
aaa
dec
add
add
add
in
pop
in
loop
mov
lock
movs
or
dec
fimul
jge
add
call
sar
in
sub
or
fbld
push
hlt
fst
fcom
or
mov
add
add
jbe
push
cbw
dec
xor
mov
mov
xchg
or
and
mov
hlt
daa
pop
movs
stc
loopne
add
add
sar
cmc
outs
and
fisttp
dec
mov
add
or
sub
xor
daa
iret
dec
pop
enter
xchg
xor
inc
imul
jmp
dec
mov
jg
add
add
mov
add
inc
inc
mul
jg
std
adc
shl
xchg
cli
dec
add
std
call
add
add
fdivr
dec
std
in
add
rol
dec
jmp
std
mov
ret
dec
dec
leave
cmp
and
add
inc
or
lods
and
pop
mov
rol
scas
fistp
inc
add
mov
add
jmp
leave
pop
sub
and
and
cld
jne
adc
and
dec
push
jbe
inc
jmp
and
dec
xchg
jmp
inc
mul
adc
mov
jns
ins
xchg
sub
cmp
(bad)
push
pop
sbb
xor
jb
pop
add
add
push
jmp
cmp
push
loope
jae
add
push
mov
cld
mov
out
jge
push
push
inc
add
add
cmp
adc
sti
inc
cdq
push
xchg
dec
arpl
bound
push
pop
(bad)
test
rol
add
add
or
inc
je
push
call
mov
retf
test
and
ret
add
add
pop
jl
push
popf
jmp
cmp
jne
sub
add
xor
sbb
cmps
icebp
adc
add
movs
mov
rcr
jmp
mov
mov
mov
fwait
add
add
mov
rcr
mov
inc
jo
jo
mov
ins
add
add
les
push
jns
mov
add
or
daa
dec
and
adc
call
jnp
pop
or
mov
retf
and
add
add
add
xchg
(bad)
and
stc
adc
pop
in
jmp
lock
jl
fist
fwait
pop
pusha
dec
cmp
add
add
and
jno
or
and
or
sbb
das
dec
dec
mov
lods
push
mov
jl
jg
nop
sbb
add
jae
jns
inc
add
shrd
sbb
je
jl
mov
adc
xchg
dec
add
add
lods
push
out
add
and
jo
add
mov
sub
cmp
in
movs
movs
push
lds
add
inc
pushf
push
jne
jmp
shr
adc
jle
mov
mov
pop
xchg
mov
add
add
add
cs
div
cdq
inc
cld
stc
das
test
mov
pop
pushf
inc
mov
cld
popa
lods
add
add
jbe
rcl
mov
aam
rcr
(bad)
leave
inc
shr
push
push
mov
fs
or
jl
aad
call
arpl
neg
enter
rol
cmp
lea
pop
dec
mov
add
fadd
push
mov
out
pop
mov
add
sub
jle
fdiv
repnz
mov
push
pushf
cmp
in
adc
add
add
dec
inc
add
jmp
mov
adc
or
out
inc
mov
jmp
loop
push
and
add
add
xchg
or
push
arpl
mov
sub
dec
push
test
add
sbb
xchg
push
in
xchg
clc
retf
add
add
rcr
not
jmp
rol
xchg
pop
push
pop
test
mov
add
add
les
mov
hlt
jmp
xchg
lahf
or
dec
ret
and
adc
push
sbb
add
add
pop
pop
cmp
sbb
bound
test
aad
cmp
add
pop
data16
(bad)
xor
mov
xchg
aas
stc
jl
(bad)
jmp
cmp
imul
add
add
imul
(bad)
out
pop
jne
sub
inc
lods
cmp
push
int
jnp
add
add
adc
push
movs
repz
mul
gs
mov
mov
sub
leave
mov
dec
adc
add
add
(bad)
push
inc
adc
aam
repnz
imul
test
test
aaa
jno
add
add
fld
or
nop
mov
(bad)
push
push
inc
shl
pop
push
hlt
push
out
sbb
add
add
and
sbb
dec
aaa
lea
inc
mov
(bad)
je
fimul
push
jl
mov
and
add
add
movs
jmp
add
jg
rcr
add
pop
ret
add
pop
pop
jmp
sub
xchg
inc
add
add
cld
and
xchg
sub
out
repz
adc
fwait
add
mov
mov
test
loopne
and
fwait
in
push
test
sub
das
in
cmp
in
retf
pop
add
add
sub
pop
sub
and
(bad)
sub
sbb
les
xor
pop
adc
int3
cmps
add
add
out
add
cld
mov
or
dec
les
jle
jl
xchg
adc
cmp
add
add
cmps
mov
mov
movs
push
pushf
lods
sbb
add
das
or
int3
jno
test
xchg
cdq
jecxz
add
add
push
push
mov
adc
push
cmp
lods
cmp
mov
adc
retf
dec
add
add
mov
inc
cmp
and
push
jnp
int3
jecxz
das
ret
dec
jnp
ret
push
mov
fldcw
nop
loope
mov
nop
leave
sbb
push
cli
push
mov
jo
sub
xchg
mov
jno
add
add
inc
in
stos
loop
popa
xor
sbb
scas
mov
pusha
dec
push
dec
scas
jne
into
jne
test
jle
add
les
jmp
mov
test
cld
pop
sahf
sub
push
fsub
pop
add
add
push
(bad)
cmp
push
addr16
adc
inc
jle
xor
in
(bad)
xchg
fisub
push
pop
mov
adc
add
add
out
imul
adc
jmp
addr16
es
pop
push
or
mov
add
fstp
scas
jo
jl
pop
cmp
or
add
stos
mov
je
push
add
add
mov
arpl
(bad)
push
push
pop
test
jmp
mov
in
js
cwde
or
sbb
loopne
add
add
ror
cmp
cmps
cmp
cwde
jl
mov
lea
mov
cwde
add
add
es
movs
mov
dec
dec
or
add
loop
mov
aas
daa
jno
push
push
add
add
add
cs
and
add
test
push
sbb
cmps
sbb
imul
mov
shl
push
cs
cmp
pop
adc
lods
add
xor
(bad)
enter
aas
jp
in
add
add
scas
mov
sar
(bad)
retf
push
or
shr
jmp
ret
mov
loopne
mov
add
or
nop
leave
ror
(bad)
repnz
add
icebp
retf
or
or
jo
add
add
in
fcom
push
add
inc
mov
add
add
lahf
sub
mov
add
add
lods
fisttp
fnstenv
adc
push
push
bound
mov
sub
and
iret
push
mov
add
add
inc
stc
mov
adc
ret
mov
and
adc
cld
fcom
and
pop
scas
cdq
mov
add
add
sbb
inc
inc
pop
lods
popf
add
add
sub
push
jne
and
sbb
or
mov
lahf
les
adc
arpl
mov
lahf
pop
xchg
add
and
es
or
fucomi
daa
adc
pop
cmps
add
add
call
add
idiv
and
dec
sbb
xor
xchg
call
push
je
mov
mov
dec
sbb
fsubp
pushf
mov
sub
outs
xchg
add
add
je
shr
loopne
pop
enter
inc
test
inc
outs
jl
add
add
repz
jae
and
xor
mov
fisttp
inc
xchg
scas
cmp
fcom
or
jo
dec
test
add
add
mov
push
adc
xor
or
push
aaa
les
dec
cld
and
pusha
add
add
pushf
push
cmps
cmp
mov
pop
mov
and
(bad)
or
jg
add
add
fcom
ins
add
(bad)
(bad)
jg
movs
(bad)
rcl
push
(bad)
aad
push
fimul
add
add
addr16
fsubr
inc
xchg
in
ds
inc
add
sti
retf
int3
das
sbb
push
add
add
(bad)
setae
(bad)
sbb
mov
mov
cdq
(bad)
push
xor
enter
add
add
dec
add
loopne
adc
cmp
inc
mov
int3
and
and
fadd
std
xor
push
add
cmp
je
fcomp
inc
add
adc
leave
jno
loopne
pop
in
out
sub
mov
add
add
inc
adc
adc
lea
add
and
push
push
repnz
es
inc
fmul
and
and
add
add
or
adc
and
nop
adc
out
push
mov
sbb
inc
(bad)
push
jp
pop
push
add
add
and
pop
(bad)
in
loopne
push
pop
jb
loopne
adc
mov
mov
in
jno
jae
cld
jecxz
jns
add
add
stos
dec
imul
or
adc
mov
mov
mov
jno
adc
add
inc
repnz
psubsw
cdq
cwde
jmp
test
or
sbb
aam
add
add
sub
add
jnp
sbb
push
inc
adc
sbb
pop
lods
cwde
sub
add
add
les
or
test
or
shr
loop
pop
xchg
push
rcl
add
add
call
cmps
cdq
jmp
cmp
push
sub
repnz
cmp
nop
add
add
sbb
punpckhbw
inc
sti
jb
pop
mov
push
lods
ins
mov
mov
movs
sbb
add
cdq
push
enter
outs
jmp
loope
or
mov
push
adc
sbb
pop
test
outs
pop
cmp
add
add
les
and
movs
sbb
cld
inc
or
loopne
adc
enter
jo
add
add
je
mov
pop
scas
and
adc
or
call
out
sbb
add
add
retf
xchg
mov
sbb
sbb
shl
sbb
dec
add
add
adc
fnstcw
adc
push
pop
push
push
inc
call
push
adc
add
add
jg
pusha
xor
dec
loop
mov
popa
mov
xchg
icebp
add
cmp
add
add
sub
xor
sub
aad
xchg
stc
shr
adc
and
test
cli
push
ret
(bad)
mov
cmp
push
add
dec
dec
mov
lock
stc
add
dec
ficom
add
add
clc
loope
jmp
lock
mov
cmp
dec
inc
inc
push
push
sbb
pop
dec
cli
pop
retf
fild
pop
add
rcr
leave
jns
xor
sbb
shl
push
repz
push
add
add
shl
sbb
xor
add
or
pop
mov
sbb
loope
jmp
add
jmp
ds
lock
pop
adc
xor
mov
inc
dec
push
fdivr
xor
xor
add
add
dec
push
retf
xor
mov
lahf
mov
fld
cld
dec
data16
xor
add
add
rcr
push
pushf
push
push
xor
cld
xchg
dec
cmp
push
std
jne
add
outs
pop
sar
inc
sbb
jno
xor
sbb
fcom
mov
sbb
push
add
add
add
pop
cmps
push
int3
pop
sbb
add
push
add
inc
mov
inc
add
or
add
pushf
popf
cmps
jne
inc
push
push
push
sti
xor
cld
xchg
mov
add
dec
dec
add
add
add
cmps
or
pop
or
and
inc
adc
xor
(bad)
adc
sar
and
add
add
dec
ret
cmps
adc
push
lea
loope
inc
test
mov
pushf
or
or
dec
xor
ret
or
fnstcw
(bad)
and
and
daa
add
rol
and
dec
add
neg
sbb
cmp
jmp
leave
push
xchg
sbb
jno
pop
push
popf
cdq
add
add
test
jo
adc
repz
push
inc
mov
mov
pop
rcl
adc
push
sbb
add
add
adc
or
or
nop
pop
jp
or
or
sbb
out
pop
and
pop
pusha
mov
add
fld
inc
cld
call
mov
mov
mov
or
test
add
add
in
pmulhuw
dec
enter
adc
push
cmps
call
sar
test
out
mov
and
js
jb
(bad)
dec
jnp
ja
jmp
nop
stos
mov
out
and
lods
sub
leave
adc
scas
add
add
rol
xchg
ret
retf
pop
push
xor
mov
cmp
loopne
cmp
add
pusha
mov
test
jmp
or
(bad)
mov
pop
loope
test
xor
mov
add
jmp
out
enter
mov
push
inc
adc
add
cmp
add
add
ss
jbe
inc
jp
mov
cli
inc
pusha
push
mov
mov
inc
mov
jmp
add
add
fucomp
das
cli
dec
mov
ffree
or
jmp
fld
jle
nop
lea
add
add
lahf
dec
lds
mov
ret
xchg
sub
ss
push
mov
cmc
ins
stos
and
dec
pop
add
add
popa
gs
jae
sbb
cmp
cmp
mov
test
push
add
add
daa
shl
mov
aas
or
push
fimul
lock
xchg
movs
xor
out
mov
or
add
add
inc
pop
push
cmps
bound
cld
cmp
dec
push
inc
jle
cmp
push
in
push
jmp
pop
or
or
call
jl
inc
xor
nop
push
sub
(bad)
jnp
sbb
mov
mov
jle
add
add
jmp
popf
cmovo
mov
or
scas
cs
sub
cmp
adc
dec
or
add
add
push
and
or
sub
retf
pop
test
or
add
loope
sar
loop
les
add
add
mov
out
and
sahf
adc
repnz
ins
pop
(bad)
popf
(bad)
dec
adc
shr
and
dec
sub
add
add
loope
fild
xor
mov
call
gs
xchg
leave
in
fnstenv
jmp
(bad)
mov
lock
jmp
pop
sbb
cmp
inc
push
adc
xor
xor
add
add
pop
cmp
xor
shr
rcr
test
mov
dec
ror
jl
jl
push
mov
add
cmp
jae
in
fsubr
push
ins
and
push
dec
pop
cmp
mov
cmp
add
add
or
mov
rep
mov
mov
loopne
inc
mov
push
sbb
mov
adc
add
add
dec
inc
cdq
add
mov
fwait
xor
xor
push
jnp
ja
xor
mov
inc
mov
adc
mov
dec
xor
pop
stos
mov
enter
adc
int3
daa
cdq
clc
and
add
add
xlat
pushf
cs
jnp
daa
and
inc
in
jg
mov
xchg
dec
sub
mov
add
add
add
ins
dec
stos
mov
hlt
and
xor
cmps
inc
enter
adc
enter
add
add
cmp
add
pop
jl
es
ds
test
xor
add
cmp
mov
add
add
mov
add
xchg
adc
outs
jo
scas
mov
clc
add
add
cmp
push
jl
retf
aad
ror
(bad)
scas
add
and
rcpps
in
shl
adc
add
add
ins
hlt
push
movs
sub
or
mov
pop
std
(bad)
addr16
dec
add
add
cmc
aaa
bound
neg
in
popf
push
dec
push
fs
int
dec
or
ficom
add
add
mov
dec
ror
xor
pop
test
push
and
and
mov
fwait
pop
push
add
add
adc
sar
dec
and
shl
mov
(bad)
int3
push
sub
add
add
sub
xchg
sbb
cdq
adc
add
mov
mov
add
test
and
test
pop
out
dec
sub
sub
and
movs
mov
scas
dec
and
mov
add
add
mov
inc
and
push
mov
imul
adc
lahf
adc
xor
add
add
int3
inc
pop
fist
sbb
mov
fcom
adc
enter
sbb
loopne
add
add
in
push
call
or
ss
ins
and
jl
xchg
add
push
push
enter
retf
cld
das
or
sub
iret
sbb
inc
mov
add
test
dec
mov
clc
cmp
arpl
mov
retf
xor
or
fisubr
add
add
push
pop
adc
clc
mov
out
aad
fisubr
inc
and
or
imul
add
dec
inc
inc
push
and
jbe
push
inc
or
push
loopne
mov
or
cmp
add
add
dec
cmc
inc
cmp
or
and
cli
daa
sub
add
or
add
add
lahf
or
jnp
lea
jmp
xor
or
cmp
inc
enter
out
add
add
fimul
sbb
mov
popa
push
sbb
xor
sbb
(bad)
icebp
add
add
inc
sbb
fisub
and
pusha
and
sti
or
inc
mov
push
ret
push
enter
add
fwait
push
ret
cdq
into
fsub
push
mov
xor
into
stos
sub
or
retf
xchg
mov
add
add
adc
adc
sbb
or
sbb
sbb
dec
push
and
mov
or
add
add
xchg
retf
inc
call
fs
int
cmps
cmp
push
or
rcr
cs
addr16
add
add
sbb
cdq
cmc
enter
dec
push
xchg
sbb
dec
adc
dec
bound
add
add
dec
push
sub
cmp
and
inc
inc
xor
outs
dec
(bad)
dec
and
fwait
push
ds
(bad)
or
add
add
sub
pusha
je
mov
inc
push
cmp
dec
lds
jle
xor
ret
adc
mov
inc
and
lds
retf
jmp
outs
xchg
mov
shl
inc
lea
cmp
leave
xchg
xor
nop
mov
clc
xor
and
pop
scas
sar
jge
stos
dec
ins
add
add
das
and
mov
inc
and
xor
mov
lds
sub
push
push
add
jmp
push
sub
xor
ds
les
or
sub
add
add
or
xor
xor
int3
adc
dec
mov
cmps
in
jle
cmp
retf
add
add
int
lods
push
dec
outs
and
xor
add
out
xor
mov
dec
add
add
or
sbb
push
or
pop
je
mov
pop
ret
jbe
push
test
test
in
mov
push
mov
adc
mov
test
and
cwde
add
add
adc
mov
fsub
push
pop
popf
or
aas
push
jg
sub
arpl
mov
add
add
fs
jbe
lds
dec
(bad)
jno
mov
ja
jge
retf
add
fnstcw
cld
ja
out
xchg
cmps
ja
dec
and
scas
dec
(bad)
jb
aas
ja
mov
ja
add
add
test
cli
and
leave
in
ja
test
jnp
mov
hlt
jmp
(bad)
mov
(bad)
leave
fdivr
lahf
test
and
add
and
add
daa
dec
or
jae
push
xchg
jb
popf
add
add
sbb
jl
push
inc
js
je
dec
xchg
inc
adc
or
in
sub
(bad)
ins
mov
add
add
popf
mov
daa
test
(bad)
cld
in
es
out
inc
stc
cmp
sub
fs
in
mov
jmp
add
loopne
push
cmp
sbb
push
mov
(bad)
xchg
adc
adc
pop
adc
pop
add
add
data16
xor
xor
mov
popf
jo
fdiv
cmp
adc
sbb
(bad)
ds
or
inc
aaa
pop
cmps
add
add
inc
jnp
pop
push
movs
mul
outs
or
dec
mov
clc
inc
xor
xor
repnz
sbb
add
fld
add
mov
add
sbb
loop
xor
rcl
pop
call
inc
inc
push
add
add
add
cmp
jl
(bad)
fmul
icebp
repz
arpl
mov
(bad)
dec
or
(bad)
cdq
not
dec
jp
xchg
add
add
rol
push
dec
ror
shl
fcomp
inc
dec
popf
fld
add
mov
pop
jmp
fninit
adc
push
and
xchg
sbb
fidiv
repz
retf
adc
jmp
or
push
jle
sar
jne
add
add
dec
push
ret
xor
popf
arpl
push
or
retf
mov
les
inc
adc
(bad)
lods
pop
in
jo
mov
mov
xchg
retf
je
push
mov
cmp
mov
in
adc
and
inc
jmp
ss
add
push
stc
push
inc
or
out
adc
add
add
xchg
retf
and
in
jmp
adc
mov
push
in
and
pop
test
call
add
inc
or
and
in
or
sbb
shl
xor
sbb
sbb
push
adc
jge
add
add
mov
lea
shl
nop
adc
ins
push
or
in
jmp
push
or
(bad)
out
push
mov
add
add
popa
es
pushf
mov
sub
hlt
or
or
xor
push
sbb
adc
mov
add
add
dec
jns
sbb
pop
enter
call
mov
mov
ret
push
aad
xor
add
add
inc
sub
popf
int3
sar
jae
adc
jmp
and
fcmovbe
add
add
je
mov
stc
pop
pop
dec
rcl
pushf
push
repz
jle
cmp
xchg
aaa
jo
mov
stos
add
add
or
push
adc
dec
cli
aam
fs
fnop
jp
test
xchg
push
xor
add
add
fst
les
loop
jle
xchg
pushf
jecxz
jg
push
dec
xchg
nop
push
xor
idiv
xor
in
add
add
jge
cwde
xor
xchg
cmp
pop
rol
test
push
imul
mov
popf
xor
cmp
dec
add
add
fs
ds
xor
ds
ret
xor
cmp
mov
call
addr16
mov
add
add
pushf
sub
adc
cld
retf
aam
cmp
pushf
jns
cmp
cli
cmp
cld
sub
mov
add
add
fnstenv
ds
pop
sahf
xchg
ficomp
test
add
cmps
mov
data16
add
add
jb
dec
mov
dec
lods
sbb
or
repnz
pop
adc
xchg
test
or
cdq
adc
add
add
mov
gs
or
sar
dec
push
sti
repnz
adc
inc
mov
push
stos
add
add
loop
xor
stos
aaa
adc
aam
xlat
adc
ins
and
aam
or
(bad)
nop
shl
fadd
add
add
push
es
jbe
jb
aaa
inc
call
cs
push
(bad)
cs
sub
inc
lock
out
jo
add
add
add
pop
cmp
icebp
add
or
adc
sub
or
sbb
ja
stos
fisub
pop
add
add
inc
adc
sbb
adc
lock
add
push
loopne
fisttp
inc
mov
add
add
adc
cmp
dec
xor
jl
cmc
jge
cmps
ins
loop
push
jae
dec
sbb
adc
sti
adc
add
add
cmp
adc
adc
sti
adc
cmp
cmp
std
dec
sbb
sub
or
inc
adc
add
add
or
xchg
xchg
mov
mov
out
ret
add
loope
iret
lods
jmp
add
jmp
adc
pop
and
mov
jno
sbb
test
addr16
add
lock
and
int3
loope
fs
xor
add
es
xchg
xor
sub
imul
add
add
adc
cmps
gs
inc
xor
test
retfw
push
movs
push
imul
(bad)
es
rol
adc
repz
xor
fistp
cmps
mov
inc
sub
mov
cmps
retf
add
add
mov
sbb
test
xlat
mov
leave
add
jnp
inc
mov
and
dec
push
add
add
and
add
mov
inc
inc
loop
sbb
dec
and
inc
push
loop
inc
or
pop
add
add
enter
ins
xchg
in
dec
(bad)
mov
and
inc
pusha
and
mov
pop
ds
out
add
add
dec
mov
ins
pop
cwde
dec
ins
and
jle
mov
cmp
xchg
mov
mov
push
fnsave
imul
dec
jge
je
lahf
xchg
fisub
addr16
daa
(bad)
push
or
xchg
adc
clc
into
sub
add
cmp
getsec
inc
dec
and
push
and
sbb
push
add
test
add
or
sub
xchg
jo
adc
movsx
add
push
jl
das
repz
sbb
pusha
clc
add
add
push
pusha
push
sbb
pop
daa
push
sub
mov
call
push
sbb
push
test
add
add
push
out
push
sbb
adc
lock
sub
push
push
fcom
add
add
fwait
mov
pop
pop
loop
mov
mov
or
adc
das
push
mov
loop
cwde
add
add
cmp
push
enter
lahf
dec
add
jae
cli
mov
nop
cli
les
jle
add
add
add
mov
add
mov
push
dec
(bad)
fcmove
inc
dec
jbe
lahf
stc
sub
mov
mov
dec
inc
add
add
mov
cmc
or
or
nop
jp
jnp
cld
adc
add
int
daa
retf
add
add
mov
int
sbb
xchg
cmps
pop
cmp
sub
jecxz
std
(bad)
je
nop
inc
lock
mov
adc
add
add
iret
int
add
pop
fsubr
jg
int3
cmps
inc
push
pop
mov
mov
div
add
add
pop
adc
inc
xchg
xor
or
movsx
push
or
loopne
sbb
add
add
push
inc
adc
or
add
sbb
jae
pop
xor
jp
enter
loope
in
pop
sti
xabort
add
add
out
xchg
push
inc
jge
jg
inc
inc
mov
nop
jnp
stc
inc
(bad)
mov
mov
add
add
xlat
popf
add
jmp
jmp
xor
call
jl
mov
sub
ret
mov
mov
sub
add
add
(bad)
out
push
sti
cmp
mov
nop
popa
and
push
or
aaa
adc
popa
je
push
and
fist
fcomp
xor
pop
push
add
xor
nop
jo
or
add
add
pop
dec
out
jle
dec
out
outs
and
mov
jne
push
mov
sbb
leave
loopne
xor
(bad)
data16
add
add
sbb
cli
pushf
adc
dec
push
std
adc
push
call
jo
add
push
xor
mov
add
add
loope
push
(bad)
mov
in
jnp
lea
cdq
add
xor
cmp
ja
mov
sub
add
inc
cmp
retf
(bad)
pop
outs
std
sbb
out
movs
inc
aas
repnz
adc
rol
add
sub
cmps
cmp
hlt
sete
mov
pop
push
and
and
call
add
add
into
jnp
adc
add
jo
pop
adc
sub
add
add
adc
pusha
or
adc
mov
adc
push
add
sub
or
dec
popf
and
(bad)
add
lahf
adc
add
sub
cmp
mov
adc
add
sub
add
add
pop
lahf
adc
add
and
out
adc
sbb
ja
cli
or
loop
nop
frstor
push
add
add
fisttp
retf
aad
rol
dec
cmp
das
jo
jge
fild
aad
jo
dec
cmps
cmp
add
add
movmskps
(bad)
cmovle
push
or
xchg
xchg
scas
imul
iret
add
inc
pop
sbb
xor
cmp
add
add
jae
add
jle
pop
or
sub
in
push
test
sbb
mov
push
inc
adc
jl
add
add
jle
add
cmp
stos
cmp
and
cld
or
call
mov
push
and
push
add
add
(bad)
call
inc
lods
sub
pop
and
dec
call
out
dec
or
rcl
add
and
push
stos
mov
xor
and
xchg
je
fadd
or
add
add
pop
leave
not
add
cmps
jne
push
adc
dec
dec
les
pop
dec
jno
sbb
add
add
pop
add
sbb
cli
adc
test
xchg
push
sbb
add
add
inc
aam
and
in
in
out
cmp
pop
push
adc
jl
push
and
and
mov
jo
add
add
push
stos
cmp
ret
sti
sbb
lds
ds
and
add
add
lock
xor
pop
mov
jmp
or
jle
push
mov
push
sbb
add
add
fwait
push
and
and
jl
inc
(bad)
lock
div
(bad)
sbb
xor
add
add
mov
sbb
xchg
ds
rcr
daa
fdiv
ficomp
dec
push
ss
nop
out
lods
adc
add
cmp
adc
inc
cmp
stos
and
inc
dec
into
adc
push
jo
xor
pop
or
mov
xor
add
add
inc
mov
fst
or
pop
pop
loop
sbb
adc
and
push
cli
sar
sbb
add
add
xor
dec
das
pop
dec
jp
and
sbb
mov
push
adc
adc
add
add
adc
and
sbb
fs
inc
jmp
sbb
outs
out
stc
adc
add
add
add
mov
(bad)
mov
shl
xchg
xchg
(bad)
in
neg
xchg
cmc
cmp
add
add
push
xor
aas
mov
dec
push
add
xchg
mov
movs
mov
add
add
jno
xor
call
fidiv
dec
sbb
push
mov
jnp
adc
neg
add
(bad)
aad
fsub
push
mov
push
jae
dec
or
mov
and
in
add
add
push
push
mov
mov
jg
push
(bad)
jns
pop
stc
push
nop
scas
inc
test
add
add
push
or
sub
std
xor
adc
mov
test
lea
pop
mov
add
add
into
mov
scas
inc
rol
or
test
mov
inc
dec
movs
sub
fld
add
add
adc
fisttp
into
sar
jmp
ins
fwait
cmc
outs
cmc
test
pushf
mov
hlt
es
sub
addr16
adc
jns
dec
data16
mov
cmps
sbb
xchg
push
fdiv
cmps
mov
clc
add
add
mov
pop
aam
dec
in
push
xchg
call
and
mov
lock
add
add
adc
rol
mov
iret
bsr
and
and
mov
lea
clc
cwde
add
add
sar
pop
push
jge
jl
cmp
nop
fs
dec
sbb
add
pop
mov
add
in
test
lea
jbe
adc
push
xor
add
les
push
adc
jp
fcomp
mov
loop
adc
fs
mov
clc
inc
cmp
xchg
jo
(bad)
adc
add
add
iret
dec
mov
adc
add
add
lea
pop
mov
add
push
inc
dec
les
fcom
lods
mov
cli
aas
mov
pushf
loop
int
add
add
rcr
in
mov
out
and
dec
rcr
pop
sub
shl
popf
add
add
(bad)
aas
in
shl
fmul
and
inc
sub
add
add
pop
cmp
add
add
sub
sar
adc
sbb
(bad)
sub
adc
adc
add
add
sbb
leave
jle
push
jne
(bad)
mov
add
push
mov
inc
scas
and
push
add
add
cmp
sbb
add
cs
lods
xor
xchg
jp
adc
ror
jo
add
add
clc
outs
push
jns
pop
out
mov
lds
sub
mov
push
xor
add
add
adc
cmp
mov
or
push
loope
dec
xor
push
xor
out
jo
cmp
sbb
(bad)
imul
into
dec
or
add
lock
arpl
ins
psrld
out
fist
or
mov
pusha
dec
sbb
inc
mov
movzx
pop
push
mov
or
inc
push
mov
mov
add
in
jmp
inc
sub
lea
or
test
or
jmp
dec
push
mov
add
add
add
pop
mov
sub
push
nop
sbb
(bad)
push
shr
dec
in
push
pop
mov
lock
popf
clc
adc
rcr
scas
jb
xor
pop
jo
pop
adc
mov
leave
scas
in
jo
pop
jae
pushf
jo
mov
add
add
sar
push
xchg
xor
in
mov
xchg
cmp
sub
dec
push
xchg
jbe
add
add
mov
movs
and
aam
mov
out
in
mov
and
dec
pushf
push
push
jle
jmp
xchg
repnz
ret
pop
fist
mov
mov
nop
mov
xchg
inc
push
aas
pop
mov
fistp
add
add
sbb
inc
mov
mov
loopne
ret
push
ret
ret
inc
rcl
ror
inc
mov
add
fistp
adc
popf
mov
stos
add
mov
sbb
stc
push
jecxz
daa
cmp
les
cmp
js
pushf
jae
dec
lods
cdq
jo
fmul
adc
inc
or
cmp
push
inc
fs
mov
add
add
or
mov
fist
pop
xchg
and
push
push
sub
int3
pop
xchg
inc
in
cld
cmp
add
add
sar
push
iret
scas
cdq
push
lds
stc
retf
pop
push
jnp
mov
mov
ret
add
shr
or
jmp
xor
or
add
clc
xor
cmp
das
ror
or
add
add
or
inc
or
lock
dec
or
adc
adc
xor
add
or
pop
gs
repnz
loope
pusha
sub
fs
adc
push
push
sub
add
add
xchg
inc
pop
and
dec
sbb
in
in
mov
pop
in
add
or
mov
push
sti
add
add
xchg
xchg
sbb
sub
sbb
push
mov
mov
mov
aam
test
xor
add
add
fwait
clc
ret
cmp
daa
retf
xchg
in
push
add
mov
pop
cwde
rep
adc
inc
add
add
imul
cmp
xchg
add
cmp
or
cmp
test
mov
push
stos
into
or
lock
inc
add
add
fs
mov
adc
daa
mov
mov
leave
movs
stc
and
and
inc
add
add
sub
sahf
movs
lds
por
cmp
jl
inc
jmp
add
add
popa
call
dec
cdq
in
jbe
fsubr
int
or
ret
sbb
xor
add
push
sub
data16
push
inc
adc
pop
sbb
inc
pusha
and
add
add
push
pop
or
lea
sbb
mov
sbb
inc
mov
inc
and
add
push
sbb
add
inc
jmp
sbb
inc
adc
add
add
adc
lods
pop
data16
imul
and
inc
inc
add
les
add
add
sub
mov
cmp
fwait
aaa
inc
dec
jno
pop
or
lea
inc
das
aam
test
sahf
sahf
jp
add
add
add
inc
sub
dec
or
sbb
aas
push
dec
cmps
(bad)
lahf
enter
add
add
jmp
jg
into
popf
(bad)
fsub
loope
enter
cdq
push
adc
xchg
adc
pusha
add
add
ss
dec
adc
pop
sbb
adc
or
inc
push
jno
or
in
add
add
xchg
pop
mov
or
pop
push
cwde
lods
fist
inc
sbb
add
add
retf
push
xchg
scas
sub
push
adc
aaa
jecxz
arpl
jp
or
add
add
inc
shr
xchg
mov
sub
add
and
lods
mov
into
leave
sahf
pop
outs
ins
xchg
push
mov
add
dec
add
aas
mov
jl
jmp
pop
pop
pop
enter
or
pop
inc
in
or
cmc
outs
cmp
add
add
imul
or
pop
call
shl
jnp
fwait
xor
add
mov
aaa
xchg
jo
and
les
and
nop
not
ja
pushf
shr
(bad)
adc
add
add
mov
push
jg
jno
(bad)
xchg
gs
adc
rol
xchg
mov
jae
add
add
unpcklps
ret
sbb
es
sub
sub
or
push
inc
loopne
es
add
add
repnz
fwait
add
or
mov
loope
push
push
or
mov
cdq
add
add
aaa
or
and
or
gs
xor
inc
inc
or
add
add
or
adc
mov
pop
or
adc
fcom
mov
jno
xchg
mov
add
add
int
xor
rcl
in
push
arpl
pop
sbb
and
out
inc
in
add
add
jmp
push
stc
mov
mov
stos
xor
pop
jnp
sbb
push
push
add
mov
sub
xchg
retf
adc
jo
mov
mov
aad
add
add
or
mov
jae
(bad)
and
xacquire
loope
or
add
add
loop
add
das
pushf
inc
test
inc
adc
or
dec
int3
retf
inc
les
xchg
out
out
loope
mov
add
add
mov
xchg
or
pusha
movs
lods
mov
dec
jl
xchg
adc
add
add
mov
(bad)
cmp
mov
bound
or
pop
sbb
mov
std
rol
jo
mov
add
add
(bad)
xchg
inc
mov
push
xchg
aas
jg
call
add
push
add
sbb
jne
dec
add
or
cmps
gs
add
mov
dec
rol
add
xor
xchg
jno
ins
dec
adc
add
add
push
icebp
sub
outs
sub
fst
push
pusha
and
inc
xor
mov
loope
add
add
or
or
mov
mov
or
les
xor
add
add
fiadd
jne
or
xchg
pusha
sbb
push
pop
imul
add
add
push
mov
adc
les
mov
push
out
ror
mov
in
add
add
test
push
cld
je
or
pop
adc
push
call
xor
pop
not
popa
add
add
ja
mov
add
mov
jo
lahf
inc
jp
add
fmul
mov
or
add
add
jnp
mov
cli
mov
or
push
push
push
cli
mov
adc
or
sub
lea
inc
add
add
lds
cmp
jne
retf
jmp
cmp
ja
adc
adc
mov
add
adc
jb
lahf
dec
es
lods
sbb
fist
add
add
add
test
ss
test
call
jo
stos
mov
pop
(bad)
(bad)
sbb
stos
add
add
(bad)
sar
sbb
mov
jmp
or
mov
jge
mov
jg
mov
add
push
mov
cmp
jge
cmp
add
push
jne
jmp
sti
das
inc
adc
add
add
jmp
ret
inc
adc
jnp
movs
pop
stc
loopne
pop
adc
jmp
or
cmp
jo
mov
add
add
pop
cwde
pop
push
sbb
sbb
les
adc
repnz
adc
cdq
std
inc
std
add
add
push
pushf
dec
cmp
add
pop
mov
outs
adc
(bad)
cmp
jl
mov
in
pmuludq
or
or
add
push
sub
lock
lock
les
ss
dec
dec
sub
and
and
mov
add
jno
xchg
rcl
(bad)
movs
pop
cmp
adc
pop
xor
jnp
or
and
add
add
sar
ret
lds
retf
out
outs
lods
dec
or
mov
mov
mov
mov
test
inc
push
mov
cmps
push
add
push
add
pop
nop
psrlw
movs
in
cmp
rol
xchg
jno
add
add
mov
hlt
push
jg
inc
push
sbb
arpl
jne
xchg
add
pusha
add
js
fbstp
add
add
add
push
popf
and
loop
push
push
(bad)
add
aas
test
or
add
add
sbb
test
cmp
jl
icebp
push
repnz
xchg
lea
add
add
(bad)
jge
daa
and
fwait
adc
enter
test
pop
jmp
xchg
pop
data16
push
xchg
out
add
add
xchg
pusha
push
push
jnp
rol
mov
xchg
pop
pop
add
jae
rsqrtps
imul
sub
add
dec
in
inc
cmp
(bad)
retf
cmps
cmc
popf
xor
push
push
sub
rcr
in
push
pop
mov
add
out
push
dec
test
stc
push
mov
int
dec
bound
cs
adc
jnp
add
add
fcomp
stos
cmp
jo
loope
daa
jge
shl
add
mov
add
add
xor
lea
lock
mov
pop
mov
add
pop
hlt
retf
adc
add
add
repz
pop
add
mov
lahf
mov
cld
cwde
cmps
sub
dec
dec
and
cmp
add
add
push
inc
inc
jno
into
xchg
inc
adc
xchg
je
jl
dec
mov
mov
pop
icebp
retf
dec
dec
adc
jl
adc
push
(bad)
shr
(bad)
aas
add
add
addr16
sub
pop
lahf
xor
sub
or
cmps
jmp
clc
pop
mov
pop
call
in
jns
pop
dec
in
mov
sbb
sub
jbe
je
dec
xor
(bad)
loop
lods
pop
add
add
adc
lea
sub
sbb
dec
add
daa
cdq
mov
and
in
cmp
add
add
xchg
cwde
daa
and
push
(bad)
in
and
(bad)
fucomi
pop
(bad)
cmp
push
scas
xor
add
add
jnp
sub
mov
push
movs
adc
xor
push
adc
loop
and
add
stos
add
add
jge
mov
mov
cmp
inc
mov
add
jnp
add
lods
fstp
lods
lds
add
add
aas
sub
or
push
scas
test
test
inc
inc
and
add
xor
call
and
dec
sbb
and
popf
jbe
and
leave
pop
push
add
and
add
add
jno
jg
loopne
scas
call
sbb
push
lods
and
std
je
mov
ror
xor
not
add
and
adc
(bad)
sahf
mov
cmp
sub
cmps
popf
add
add
jne
jb
xor
cmp
add
(bad)
stc
mov
leave
aas
movs
push
rol
add
add
mov
push
sbb
adc
adc
jb
jmp
dec
mov
inc
add
add
xchg
inc
mov
push
or
adc
jg
data16
ss
xor
add
add
inc
stos
in
movs
dec
(bad)
addr16
xchg
hlt
and
rcr
jl
cmp
nop
movs
add
add
cs
outs
inc
mov
js
cmps
lock
xchg
pop
xchg
(bad)
and
repnz
gs
and
cli
add
add
mov
jne
xchg
sbb
sub
sbb
add
lods
mov
mov
stos
arpl
adc
aam
add
add
movups
sbb
push
sbb
ja
push
daa
inc
dec
stos
push
jae
je
and
add
add
cmc
repz
xchg
lods
clc
test
mov
int3
mov
xlat
push
fldenv
adc
add
add
aaa
clc
ja
jno
cmp
and
lea
cmp
loop
mov
into
mov
loop
cmp
dec
xchg
jo
add
add
out
adc
jl
jno
and
sbb
push
inc
add
nop
fisub
adc
add
add
call
jge
adc
jne
or
mov
lahf
mov
jmp
mov
pop
xchg
mov
push
xchg
xchg
out
cmp
adc
shl
add
and
pop
xchg
adc
add
add
call
retf
mov
cmc
fdivr
std
adc
mov
mov
mov
xor
add
add
ins
mov
mov
out
sub
cmp
cmp
or
add
adc
mov
cmpps
add
int3
sub
or
add
add
add
mov
cmp
shl
sbb
or
mov
push
repnz
lods
(bad)
pop
aad
add
add
outs
pop
add
adc
inc
add
or
je
mov
pop
dec
push
adc
rol
add
add
cmp
pop
and
pop
inc
retf
sbb
sbb
push
scas
pop
and
add
add
sub
push
cwde
jno
jo
add
ins
pop
mov
jnp
sub
nop
mov
loope
dec
inc
inc
add
add
and
mov
adc
pop
add
xor
adc
adc
add
add
add
out
in
nop
das
loopne
push
dec
adc
mov
push
popa
leave
sub
clc
xor
fwait
shr
push
adc
(bad)
jne
add
add
dec
pop
mov
jnp
loop
dec
cli
push
mov
xchg
xor
push
scas
adc
push
stc
add
add
sub
adc
fs
adc
dec
ret
or
out
or
add
lods
cli
dec
dec
add
add
or
adc
xor
test
cs
or
push
daa
push
add
mov
jp
sbb
and
dec
inc
dec
pop
mov
mov
cmp
jns
push
add
add
sbb
cmp
repnz
adc
push
add
adc
in
lock
loopne
test
rcl
add
add
jne
rcl
push
inc
inc
jp
mov
sbb
cmp
stos
out
hlt
and
push
add
add
mov
jle
mov
push
jne
leave
lock
(bad)
call
push
xchg
stc
mov
add
add
xchg
lock
ja
pmuludq
fnstenv
mov
dec
mov
push
sbb
add
mov
add
add
or
mov
pop
test
adc
outs
or
xor
shr
ja
add
add
mov
inc
sub
cld
mov
lods
(bad)
jl
adc
out
enter
push
mov
pop
lds
add
add
mov
or
pop
adc
data16
ret
add
sbb
adc
add
add
sbb
adc
add
jb
mov
movzx
jmp
inc
sub
adc
rcl
add
add
rol
mov
mov
sub
lahf
jne
inc
adc
popf
jg
add
add
nop
bound
or
mov
dec
inc
jmp
cmps
push
pop
gs
mov
push
lods
and
hlt
add
add
cmp
or
mov
jmp
(bad)
ins
xchg
or
push
jge
sti
sub
dec
add
add
cmp
push
js
jge
fcomi
ret
test
popa
or
div
ror
(bad)
add
add
xchg
cmp
adc
lea
rol
mov
xor
and
jecxz
inc
adc
ja
add
add
pushf
push
aad
pop
in
loope
and
adc
mov
jnp
xor
bound
repz
add
fild
stos
ja
add
std
jmp
dec
pop
cwde
sahf
adc
sub
or
adc
dec
add
add
dec
and
leave
int
adc
xchg
movs
retf
inc
ss
sbb
dec
enter
cmp
add
jmp
fisttp
cmp
and
push
sahf
pusha
frstor
into
xor
add
add
sub
inc
loope
inc
loop
inc
dec
and
mov
outs
shl
inc
adc
add
add
in
movs
(bad)
neg
mov
mov
(bad)
pop
aaa
dec
imul
jmp
icebp
push
add
add
fwait
imul
jmp
jo
icebp
dec
sub
jbe
jne
cmc
stc
cmp
rcr
cwde
mov
add
mov
cmp
lock
mov
push
popf
aad
loop
std
inc
and
loop
pop
add
add
hlt
add
clc
push
mov
lea
lahf
je
shr
data16
mov
jae
pop
out
sub
add
add
dec
xor
cmp
mov
mov
retf
pop
cmp
or
fnsave
add
add
xchg
adc
push
stc
jno
stos
ins
sub
or
ins
movs
push
mov
add
add
jne
pop
mov
and
mov
aas
pop
pop
dec
xchg
dec
mov
add
add
push
adc
addr16
adc
daa
push
pop
pop
in
sub
jmp
sbb
mov
add
add
ja
sub
enter
pop
popf
aad
mov
push
fst
(bad)
popf
push
adc
enter
add
add
fsubrp
das
imul
lods
dec
into
bound
scas
imul
scas
pop
inc
push
add
(bad)
jp
pop
iret
cwde
movs
ins
dec
mov
push
sbb
sti
cmp
cmc
loop
add
add
pop
and
push
xlat
adc
rol
loope
pop
int
in
xor
add
adc
in
add
add
sbb
pop
sub
adc
inc
push
sar
test
outs
or
push
push
mul
lods
stc
mov
add
add
mov
int
pop
push
xchg
in
nop
push
fwait
jp
push
cld
mov
out
enter
inc
mov
xor
adc
push
in
nop
dec
xchg
adc
inc
bound
inc
or
sbb
push
push
adc
cld
dec
pop
test
add
pusha
xor
push
push
push
xchg
loope
nop
daa
cmp
sti
adc
sar
add
call
add
rcl
jmp
out
jmp
xchg
add
jp
iret
jl
jb
jmp
mov
push
les
and
xchg
adc
lock
div
ret
movs
out
call
inc
daa
sub
add
fwait
sbb
push
jmp
push
push
or
pop
push
mov
push
pop
pop
rcl
cmc
xchg
sub
add
add
xor
(bad)
push
mov
ja
lock
push
or
in
jb
and
out
and
add
and
jmp
fstp
mov
lahf
sti
loope
aaa
(bad)
jmp
jmp
pop
inc
add
add
adc
or
push
sar
fbstp
xor
test
push
or
shr
data16
add
add
and
xor
add
xor
jge
dec
leave
ret
xchg
jnp
call
out
mov
inc
mov
dec
mov
add
add
lahf
dec
sbb
add
(bad)
repnz
cmp
mov
xchg
dec
and
pusha
sbb
add
add
fnsave
mov
hlt
xchg
dec
test
jmp
ins
dec
jmp
les
mov
test
add
add
add
stos
pop
cli
pusha
jo
repz
imul
movs
(bad)
xlat
push
mov
rol
add
shl
frstor
sub
pop
adc
pop
outs
add
scas
push
add
mov
fnsave
in
adc
add
sbb
cld
lahf
hlt
enter
jne
mov
mov
daa
retf
cmp
push
add
add
call
and
xchg
std
or
push
mov
add
cmps
cmp
and
add
add
(bad)
mov
stc
sub
push
cmp
je
xor
adc
pop
gs
ret
aad
add
add
fdivrp
std
pop
repnz
fisttp
out
adc
jo
adc
push
inc
sub
mov
sbb
push
xor
add
add
ins
iret
adc
(bad)
aaa
sbb
cwde
xor
jl
push
pop
mov
popf
jbe
jb
xor
fnsave
add
in
jmp
pop
ret
rcl
imul
out
into
add
cld
push
fchs
add
add
pop
aas
clc
pusha
cmc
scas
mov
test
inc
cmp
adc
mov
mov
hlt
xchg
adc
cld
adc
add
add
(bad)
call
movs
xchg
pusha
cmp
push
into
jo
push
fucomp
or
mov
add
or
add
or
dec
clc
jmp
and
into
aad
clc
push
pop
fimul
lahf
mov
add
add
and
retf
mov
jge
daa
push
and
dec
jmp
std
push
xor
and
inc
dec
add
add
pop
jmp
stos
xchg
jo
sub
hlt
and
out
dec
(bad)
sub
or
jmp
add
add
sub
shl
add
jne
mov
dec
std
jne
xchg
ror
push
bound
or
add
add
je
inc
pop
jnp
retf
jmp
inc
push
enter
inc
mov
sbb
jo
sbb
add
and
inc
ret
outs
pop
call
in
push
dec
or
push
rol
loop
repnz
add
popa
sbb
in
sub
lahf
imul
and
std
push
ret
cs
xlat
sbb
ss
add
add
dec
xor
dec
in
jl
xlat
push
loopne
push
sbb
ror
ds
sub
add
add
pop
push
jmp
sbb
add
jne
jne
push
add
mov
aas
stc
outs
add
add
in
push
mov
or
dec
retf
aas
in
inc
push
retf
data16
cmps
enter
lods
add
add
stc
data16
(bad)
fisttp
or
xlat
(bad)
out
xchg
mov
call
xor
inc
into
ins
and
add
add
cmp
mov
or
cmp
jge
mov
pop
add
fwait
mov
mov
xor
add
add
add
jge
lea
cmp
pusha
daa
dec
inc
cmp
call
push
cmp
add
add
jmp
nop
clc
xchg
add
jge
push
dec
sbb
jmp
adc
mov
in
mov
add
popf
into
fwait
shr
pop
outs
dec
lods
aas
loop
pop
into
pop
daa
je
jae
mov
sbb
pusha
mov
add
add
or
sbb
enter
push
add
push
test
push
adc
add
add
mov
dec
mov
mov
mov
or
sbb
fdivrp
xor
lods
cmc
sahf
jecxz
add
add
xchg
jle
sub
mov
cmp
enter
push
xor
repz
push
adc
popa
clc
xchg
add
add
pop
xor
sub
mov
(bad)
adc
test
jle
and
scas
in
cmp
and
pushf
jp
nop
call
add
and
mov
adc
movs
stos
mov
test
add
add
add
push
mov
cld
scas
mov
test
xchg
or
ds
test
cmp
add
add
jmp
and
push
xor
fdivr
mov
push
lock
int3
pop
test
call
dec
push
mov
dec
add
add
in
loopne
add
imul
or
inc
push
stos
adc
mov
dec
jo
jmp
sub
push
ins
add
add
dec
mov
inc
mov
popf
mov
and
pop
adc
not
push
leave
add
add
sbb
daa
push
dec
movs
out
(bad)
popa
and
jmp
cs
aas
sub
lods
or
seto
fcmovu
pop
and
add
add
addr16
iret
jo
rcr
mov
daa
fwait
mov
jmp
cdq
add
add
sub
retf
push
jmp
ss
(bad)
push
push
xor
stos
fwait
stos
shl
add
add
xlat
xor
add
in
mov
add
adc
mov
nop
and
fs
add
add
add
(bad)
jmp
sub
shl
mov
pop
push
neg
sar
mov
cmp
add
add
xchg
fst
xor
je
mov
ja
gs
jnp
call
add
sti
dec
out
add
add
in
mov
es
ror
jge
adc
and
(bad)
pause
mov
mov
add
add
mov
jmp
lods
add
jo
fsub
pushf
mov
add
jo
test
das
inc
movs
lods
cdq
add
add
mov
push
scas
dec
lock
lock
sub
jb
and
sub
push
nop
mov
jno
add
add
sbb
mov
cmp
inc
lock
sar
inc
and
add
add
movs
cmp
or
fidiv
jne
sti
stc
fmul
fucomi
movs
in
int3
xchg
outs
xchg
cmc
and
jns
or
sahf
add
add
xchg
aam
and
nop
sbb
jne
daa
je
and
push
cmps
cmc
inc
(bad)
xchg
(bad)
and
enter
add
add
jmp
xlat
pop
sub
(bad)
mov
fiadd
sti
ret
jle
pop
add
je
inc
push
dec
retf
add
mov
fadd
mov
loopne
pop
out
sub
out
retf
int3
jmp
ja
leave
das
inc
adc
add
add
and
stc
add
inc
or
int3
sub
cmp
ja
jl
push
pusha
push
add
add
in
scas
sub
pop
leave
jo
fadd
adc
(bad)
mov
leave
adc
ret
and
add
add
mov
(bad)
daa
test
aad
xor
(bad)
lock
jl
retf
jo
add
add
dec
inc
cld
loope
stc
pop
mov
je
test
xor
(bad)
stos
mov
mov
fst
xchg
add
add
or
sar
jl
or
shl
mov
ja
cmp
lock
jmp
add
add
mov
(bad)
dec
(bad)
or
and
sahf
mov
add
pop
repnz
adc
or
sti
imul
rcl
int3
xor
out
aam
add
add
cmc
stos
add
rcr
fmul
push
sub
xchg
mov
xor
add
dec
outs
mov
das
popf
adc
js
xor
push
fdiv
sbb
loope
popf
sbb
add
add
xchg
push
std
jne
and
adc
mov
dec
(bad)
hlt
jae
mov
xchg
xor
add
sar
cmp
sbb
push
inc
ins
movs
cmc
sbb
mov
mov
mov
add
add
xchg
xchg
cwde
lods
jge
jo
ret
dec
data16
pop
pushf
and
pusha
and
jg
fnstcw
mov
add
add
mov
dec
sub
push
push
inc
cmc
retf
nop
mov
mov
and
psubusb
fld
add
add
jmp
pop
cmp
je
popf
and
test
mov
push
push
add
add
sbb
jecxz
or
clc
push
or
jmp
cmps
add
add
push
fcom
int3
xchg
ret
jp
mov
jg
test
push
adc
mov
add
push
add
add
push
and
cld
cs
test
sub
sub
push
adc
pusha
jo
lods
jmp
(bad)
or
mov
add
xor
push
(bad)
sbb
sbb
push
sub
not
push
pop
mov
push
gs
test
inc
jmp
mov
add
add
ds
stos
push
es
lds
cmovo
sub
adc
cmp
add
and
and
add
add
lahf
ret
sub
mov
xchg
leave
hlt
or
mov
inc
sub
cmp
test
jle
or
sub
add
add
invd
inc
cmp
jae
mov
add
test
in
inc
bound
push
add
add
push
xchg
sti
mov
shr
mov
xchg
ins
mov
xchg
xchg
add
sub
push
dec
sbb
ret
add
add
cmp
and
sub
xor
inc
add
js
inc
enter
push
movs
stos
lods
push
je
int3
add
add
jl
mov
xchg
test
xchg
xor
mov
popf
ins
retw
jmp
xchg
movs
add
ja
add
add
nop
sub
sub
sbb
ret
or
popa
xor
dec
sbb
jmp
add
add
fmul
pushf
aam
push
es
push
adc
add
or
stos
cwde
push
adc
add
add
mov
push
and
xchg
mov
inc
jmp
pushf
jno
aad
mov
shl
add
(bad)
mov
adc
or
mov
call
jmp
adc
ja
cwde
sbb
sti
mov
add
add
push
sub
test
call
or
nop
or
dec
inc
ins
cwde
outs
add
add
push
shl
jecxz
leave
mov
imul
mov
ja
push
add
add
add
pop
test
sbb
nop
xchg
mov
stos
dec
push
jns
jb
dec
mov
inc
clc
shl
xchg
push
ficom
mov
movs
rcl
push
mov
adc
lock
add
cmp
lahf
in
cmps
adc
mov
mov
stos
cmps
(bad)
jecxz
mov
add
add
xlat
in
daa
clc
dec
mov
iret
inc
push
xchg
out
fldenv
repnz
mov
out
daa
mov
add
add
(bad)
and
xor
lock
add
add
sub
jmp
jo
test
add
add
pusha
cmp
test
ja
cmovl
xor
jb
and
pop
jmp
fdivr
add
add
(bad)
into
mov
mov
cmps
repz
test
xchg
int3
sub
cmp
push
rol
add
add
lea
fwait
cmp
xor
jnp
xor
xor
mov
leave
imul
inc
sbb
or
inc
add
add
mov
mov
je
mov
push
cmp
sbb
dec
or
sti
mov
pop
shl
pop
pop
loop
add
add
adc
cdq
cli
sub
call
icebp
rol
add
add
jo
xor
sbb
sub
xor
sub
ds
mov
dec
mov
and
add
repz
push
push
enter
mov
xor
shl
dec
mov
hlt
mov
mov
add
add
dec
jo
lahf
mov
pop
scas
sti
into
(bad)
pop
add
popa
sar
aas
cmp
dec
add
add
imul
out
dec
mov
push
cdq
push
out
test
arpl
out
in
aad
cwde
aam
call
push
mov
cmp
pop
pushf
mov
or
aam
(bad)
out
pop
add
mov
jp
jp
push
mov
jo
jge
jo
inc
cmps
ror
xchg
sub
pop
nop
rcl
bound
idiv
adc
add
add
cmc
(bad)
jp
pop
shl
dec
xchg
das
pop
push
pop
adc
mov
adc
xchg
test
add
outs
add
cmp
cld
dec
push
shr
inc
adc
fldenv
mov
adc
mov
hlt
cdq
jbe
add
add
dec
or
sub
dec
(bad)
mov
loop
mov
leave
pop
or
popa
cmp
add
add
pop
es
sar
mov
push
jo
aas
adc
sub
add
add
and
test
dec
and
addr16
push
mov
inc
out
clc
inc
lea
pop
add
add
loop
pop
jb
fist
lea
sub
push
sub
test
jg
push
test
xchg
xor
pop
jne
mov
sub
and
mov
add
adc
fld
add
and
sub
xor
ret
xor
inc
fld
leave
sub
loopne
or
add
add
inc
jnp
out
fcom
sysret
inc
jne
mov
add
jmp
mov
fistp
pop
add
add
aam
cmp
dec
jnp
mov
jmp
xor
sti
mov
add
repnz
add
outs
fcom
add
add
inc
xchg
(bad)
or
call
inc
jmp
dec
test
add
add
add
adc
or
aad
aam
retf
jge
mov
adc
fnstenv
loopne
adc
and
add
test
stc
pop
mov
add
std
push
icebp
push
and
inc
sub
and
add
add
stc
adc
or
cld
sbb
mov
clc
or
push
jns
lea
add
add
and
fstp
push
dec
mov
div
xchg
les
push
pop
mov
cmp
sbb
or
arpl
mov
add
add
xor
push
fimul
xchg
js
sbb
xchg
jl
sbb
inc
pop
out
mov
add
add
je
call
ins
and
mov
or
xchg
shr
loop
mov
in
outs
mov
add
jmp
adc
xchg
or
add
sbb
shr
arpl
add
add
pop
mov
push
clc
xchg
cld
pop
mov
js
mov
jnp
sar
hlt
std
inc
mov
add
add
jle
rcr
lods
inc
fiadd
adc
xor
add
add
lea
jle
mov
cmp
sbb
mov
inc
jge
add
add
or
in
(bad)
mov
test
dec
aas
xchg
scas
xor
bound
xchg
pop
push
leave
cmps
jne
mov
xchg
mov
inc
(bad)
cli
pop
(bad)
sub
enter
popf
inc
inc
add
add
inc
mov
xchg
repz
scas
repnz
leave
fbstp
cmps
jge
ja
aas
and
add
add
jns
sub
imul
add
aas
jle
inc
xchg
push
jns
les
mov
add
add
iret
xchg
and
inc
xchg
jg
mov
mov
sub
cmc
jmp
dec
add
add
pop
in
iret
fld
add
in
aaa
push
std
xchg
repnz
dec
adc
push
sub
add
add
xor
ja
xchg
dec
sbb
lahf
imul
dec
pop
loop
ret
cmc
inc
mov
addr16
sbb
add
add
cmp
popf
fld
push
(bad)
lahf
popa
in
jmp
jle
xchg
mov
pop
jo
lea
jg
nop
cmps
pusha
or
cmp
dec
dec
das
mov
jne
js
adc
add
add
lea
or
mov
adc
cmp
inc
pop
and
retf
push
add
add
imul
jecxz
fscale
shl
loopne
mov
mov
xor
ss
les
xchg
mov
pop
rcl
sub
sar
sar
xchg
leave
xchg
mov
add
add
xlat
lock
das
add
sar
xlat
ja
and
cmp
fiadd
sub
shr
lea
add
add
and
cmp
add
fcomp
mov
rcl
shl
sar
repz
rol
stos
je
test
dec
pop
dec
in
stos
pop
mov
sbb
cmp
and
add
add
add
arpl
add
lods
lock
and
leave
jecxz
and
(bad)
dec
ja
outs
sbb
and
add
add
imul
shl
fild
in
fs
pop
fnsave
or
mov
add
add
aas
cmp
jle
adc
js
mov
dec
pop
pop
xor
sbb
femms
shl
xlat
add
add
push
jmp
push
popf
(bad)
ds
std
lods
cmp
les
mov
inc
xchg
mov
adc
xchg
adc
xchg
cli
mov
sub
fsub
shr
mov
add
add
dec
pop
leave
xchg
call
push
(bad)
xor
jg
js
repz
fwait
gs
stos
jmp
add
add
jne
adc
(bad)
mov
push
leave
rcl
repnz
in
ret
mov
test
xchg
movs
(bad)
imul
push
add
add
fdivr
sub
jno
push
push
xchg
dec
(bad)
(bad)
xor
outs
enter
inc
int3
push
cdq
das
rol
add
add
sbb
stos
mov
or
inc
aaa
retf
mov
test
add
add
mov
jge
dec
retf
in
sub
jo
out
stos
cmp
add
imul
push
out
add
add
cmps
inc
mov
lods
jno
adc
in
stos
cmp
add
xchg
mov
xchg
call
add
add
push
add
in
xor
fsubr
pop
push
fcomp
lock
xchg
add
add
in
jno
inc
xchg
jnp
repz
xchg
ror
stos
das
inc
les
jo
daa
pop
or
fmul
in
sub
push
fsub
push
fcomp
mov
mov
push
sbb
mov
add
add
je
mov
xor
fsub
sbb
push
dec
imul
xchg
mov
das
inc
jnp
cmp
inc
test
jmp
or
push
daa
push
movs
xor
rcl
adc
push
push
daa
or
or
ret
jbe
jle
or
outs
push
lds
xchg
mov
add
add
test
mov
push
loope
clc
addr16
clc
or
into
jo
push
push
rol
add
add
push
jno
mov
out
in
stos
retf
pop
cmps
push
mov
jae
dec
into
or
jge
outs
add
add
lds
iret
and
das
jmp
push
xlat
lods
sbb
push
stos
xor
das
test
add
fisttp
and
movzx
cld
rcl
rol
or
std
lock
cmp
push
sub
mov
add
add
push
pop
adc
mov
inc
jmp
cli
pop
(bad)
adc
push
pop
dec
dec
inc
dec
jne
ficom
add
add
mov
xor
jne
mov
je
lahf
add
leave
xor
adc
lods
ds
mov
xor
add
add
daa
jne
pop
mov
int3
(bad)
pop
add
stc
pop
je
cmp
inc
imul
add
out
(bad)
ja
mov
xor
cmp
ds
pop
clc
std
inc
or
sub
inc
cdq
add
and
add
add
mov
ror
pop
cmovp
out
mov
ins
imul
add
leave
and
push
sbb
or
jmp
dec
lahf
call
mov
xor
loopne
fadd
jmp
std
add
add
ret
xchg
cwde
and
cmp
push
cmps
push
adc
adc
xchg
push
or
in
add
add
shr
pop
lock
xor
push
dec
sbb
add
adc
hlt
inc
(bad)
test
add
add
add
xor
jmp
jb
sub
dec
inc
inc
adc
dec
push
stos
(bad)
hlt
aas
(bad)
cwde
xchg
xchg
inc
int
add
add
hlt
sub
inc
fimul
movs
and
jge
mov
sub
in
jo
cwde
pop
push
mov
jmp
adc
add
add
push
adc
pushf
mov
jns
cmps
and
in
push
ror
dec
adc
enter
and
adc
xor
sbb
sub
adc
and
mov
inc
es
popf
icebp
add
add
add
test
sub
mov
mov
jno
movs
loopne
jmp
cmp
add
add
pop
or
adc
sbb
dec
jmp
shl
sub
(bad)
mov
push
call
push
lods
jmp
jmp
aam
je
icebp
push
push
lods
and
inc
in
mov
add
add
lock
int
lock
int3
adc
or
sbb
xchg
xor
dec
push
retf
xor
jg
or
push
mov
push
mov
sub
lock
jg
or
jnp
jle
mov
add
add
jmp
cld
lahf
ret
jnp
test
test
je
dec
call
sub
mov
push
js
push
bound
add
add
cmps
test
push
push
stos
sbb
cmp
in
push
push
push
int3
adc
lods
mov
sub
mov
icebp
sub
fidivr
mov
lock
inc
cmc
or
lds
pop
add
hlt
xchg
shl
repnz
add
xor
in
fwait
dec
adc
not
popf
push
popf
mov
push
mov
or
jmp
jns
add
add
sti
adc
mov
ret
cmps
adc
add
or
xchg
mov
mov
add
add
daa
ja
pusha
adc
lock
pop
sub
loopne
jns
push
dec
in
inc
test
mov
pop
in
cmp
add
das
mov
push
mov
mov
cld
call
jo
mov
add
add
and
cmp
mov
sub
jmp
(bad)
jmp
mov
sbb
add
add
add
sub
jge
repz
mov
gs
push
scas
iret
xchg
jle
inc
pop
cli
add
add
retf
fmulp
in
add
adc
or
mov
push
cmps
pop
add
add
add
sbb
sbb
cmps
push
(bad)
nop
pop
adc
test
daa
push
ret
xchg
pop
sbb
or
add
add
jns
mov
stos
mov
test
and
dec
test
jmp
push
push
lahf
pop
add
add
add
and
hlt
mov
mov
in
ds
xchg
and
(bad)
jmp
add
add
sahf
pop
dec
cwde
iret
jl
mov
cli
je
jmp
loopne
mov
loopne
ja
push
xchg
add
add
jns
das
dec
in
adc
sub
cld
pop
adc
add
hlt
mov
je
aam
add
add
sar
push
addr16
test
jp
adc
jmp
loopne
mov
add
add
(bad)
rol
mov
cmp
dec
mov
das
jl
xchg
stc
sbb
add
add
cmps
xlat
add
xor
in
movs
faddp
inc
adc
(bad)
ja
sub
adc
cmc
jno
movs
add
add
push
or
cmps
mov
mov
scas
and
pop
stc
push
out
imul
int3
sbb
add
add
sub
fst
cmps
dec
push
adc
bound
mov
(bad)
pop
outs
lods
aaa
push
cmp
mov
std
add
add
cmp
in
jno
and
push
scas
xchg
add
adc
xchg
out
xor
cmp
xchg
add
add
jo
add
jge
test
mov
mov
not
add
sahf
sti
mov
(bad)
mov
dec
mov
xchg
push
out
xor
pop
cmp
ret
add
add
jmp
and
sbb
push
jae
aam
xor
pop
dec
(bad)
aam
jmp
sub
add
add
and
pop
test
jbe
stc
push
dec
mov
rcr
jae
mov
add
xchg
push
sbb
pop
cwde
jb
sub
cmp
shl
imul
daa
cmp
add
and
daa
shl
outs
or
adc
mov
add
and
push
add
add
add
inc
add
les
sbb
in
cli
cmp
push
xor
inc
dec
xor
mov
jp
add
jle
cmp
jae
cli
clc
add
or
mov
push
push
xor
and
ja
je
add
add
loopne
stc
adc
outs
sahf
xchg
adc
into
and
adc
mov
pop
push
mov
fadd
add
add
mov
mov
and
xchg
sbb
je
movs
jmp
add
add
xor
fadd
loop
sbb
push
int
and
test
adc
mov
add
enter
cmp
cmp
mov
pop
jge
test
jno
sbb
add
cdq
and
pop
sar
or
sbb
sbb
jl
xor
test
cmp
icebp
popa
push
adc
add
add
rcl
push
push
mov
mov
and
inc
xchg
sub
cmps
(bad)
jmp
add
add
retf
shl
in
push
jl
adc
test
lock
sbb
scas
mov
hlt
sti
add
add
mov
or
dec
ins
stos
movs
aaa
out
mov
jne
pusha
push
push
aas
mov
adc
add
add
lods
mov
nop
pusha
dec
fldcw
arpl
mov
xor
adc
pop
test
pop
test
xchg
in
(bad)
jg
cmc
dec
(bad)
adc
les
push
sub
rol
dec
sub
lea
add
sbb
add
add
or
push
lahf
push
mov
xchg
ja
sbb
mov
adc
fistp
add
add
aaa
retf
xlat
adc
test
pop
jnp
xor
pop
hlt
sub
dec
add
add
add
jp
mov
mov
stc
jg
inc
sar
mov
aaa
ss
add
add
pop
xor
xchg
pop
sbb
movs
mov
sub
test
fs
mov
call
xchg
xchg
movs
xchg
pop
mov
loop
mov
jne
add
fwait
nop
mov
add
add
fisttp
mov
fadd
mov
mov
movs
or
push
cs
js
rol
add
sbb
pop
push
or
mov
or
lods
les
test
out
arpl
add
add
xchg
lock
shl
and
ror
xchg
jbe
push
and
xchg
out
popf
jmp
adc
dec
dec
sbb
dec
pop
push
mov
ret
dec
clc
retf
nop
fadd
add
add
fmul
add
fcomp
xchg
out
and
pop
sbb
push
ins
push
xor
dec
mov
add
dec
ret
jg
iret
lock
add
xchg
movs
fdiv
cmc
imul
add
lea
add
add
lock
inc
in
push
xor
mov
xor
mov
mov
dec
test
adc
(bad)
or
add
test
adc
cmp
push
les
rol
jne
call
arpl
rcr
mov
adc
cmp
bound
adc
sbb
sub
add
or
or
inc
in
call
fcom
sbb
cdq
pusha
movs
adc
add
add
push
lock
adc
push
mov
push
xchg
and
or
frstpm(287
scas
imul
inc
cmps
sub
add
add
call
mov
retf
push
mov
mov
or
pop
ret
add
add
mov
xor
and
into
fbld
cld
jmp
stos
or
pop
pop
mov
add
icebp
pushf
(bad)
pop
push
enter
mov
mov
popa
add
push
mov
shl
aas
sahf
aas
add
cmp
jmp
push
sub
in
mov
add
add
scas
shr
int3
gs
ret
les
add
sub
ficom
ja
push
inc
add
add
lds
dec
jmp
ja
mov
sub
add
or
ret
popf
lds
mov
sbb
push
rol
cmc
adc
push
jno
fs
stos
mov
add
out
imul
mov
or
jns
lods
or
sub
push
push
add
add
add
test
ror
lods
pop
pop
xor
fld
cmp
lods
fist
lods
lea
add
add
pop
add
lods
fstp
add
mov
push
enter
xchg
jae
mov
push
add
push
sti
in
cmp
sbb
jb
out
dec
mov
mov
adc
mov
xor
add
add
mov
lds
or
lods
add
cs
das
push
add
add
mov
rol
add
add
cmp
jecxz
imul
(bad)
and
mov
jo
mov
je
cmp
cwde
add
add
mov
push
bound
xchg
(bad)
pop
jecxz
mov
out
std
pop
jmp
mov
add
add
xchg
out
adc
mov
or
inc
mov
in
push
je
sub
js
push
adc
aas
mov
pop
pop
lea
js
mov
pop
int3
outs
shl
dec
clc
(bad)
cld
xchg
dec
out
repnz
add
(bad)
(bad)
clc
lods
inc
out
enter
push
jo
mov
mov
shr
out
out
pop
adc
add
add
dec
pop
xor
adc
xchg
or
jl
inc
ret
push
and
add
fdiv
sahf
add
add
in
inc
mov
in
sub
xor
mov
pushf
movs
adc
or
mov
add
add
jae
imul
push
mov
jmp
push
pop
mov
add
sub
mov
jecxz
inc
mov
pop
push
dec
push
adc
mov
cmp
xor
add
add
inc
add
push
imul
xchg
push
fs
mov
mov
pop
in
fdiv
add
add
and
or
sbb
cmps
jnp
scas
jo
xchg
mov
popf
out
sub
movs
or
test
daa
add
add
xchg
fldcw
sub
pop
sbb
mov
rcl
mov
inc
inc
mov
test
add
iret
retf
dec
or
add
add
(bad)
jge
pushw
retf
mov
mov
xor
cli
or
add
add
test
add
mov
mov
push
loopne
movs
push
add
add
mov
jmp
sbb
or
mov
fxch
loopne
mov
pop
test
add
popf
cmc
sbb
mov
dec
cli
and
add
cmp
or
jp
add
add
adc
jnp
sar
(bad)
dec
jmp
jmp
ret
leave
push
sbb
mov
add
cmps
rcl
jbe
cmp
fwait
pop
or
jns
mov
mov
push
and
sub
add
add
xchg
xor
xor
dec
std
test
mov
inc
adc
add
mov
in
mov
add
inc
push
imul
pusha
leave
je
jmp
add
xchg
add
sub
dec
push
repz
jmp
cli
mov
fs
add
add
or
lock
inc
cld
fsub
lods
pop
mov
or
push
lds
push
movs
in
or
mov
lock
movs
pop
popf
cld
push
mov
pop
dec
movs
mov
push
jl
mov
pop
iret
nop
test
add
dec
dec
push
mov
stos
dec
sti
cmps
lods
adc
ret
inc
in
add
mov
mov
add
add
sbb
mov
mov
ins
push
pop
cmp
or
mov
adc
call
add
add
inc
movs
adc
adc
push
lods
or
adc
mov
ror
ja
add
add
mov
adc
xchg
and
mov
adc
inc
mov
mov
(bad)
jp
nop
adc
jo
out
repnz
add
add
or
push
or
mov
enter
xor
pop
mov
les
dec
adc
dec
sbb
add
add
jmp
es
imul
add
push
push
cmps
or
push
or
add
add
sbb
pop
scas
test
pushf
test
xchg
pop
mov
xchg
jle
pop
jae
pop
and
cmps
add
add
inc
movs
int3
push
mov
and
mov
sub
sti
mov
fxch
pop
pop
and
enter
add
inc
inc
mov
push
lea
adc
clc
fs
mov
jmp
(bad)
js
xchg
in
daa
rcr
inc
add
add
les
cmp
xchg
or
fcmovnu
inc
mov
push
xchg
outs
add
add
in
sub
arpl
push
mov
imul
mov
sbb
sahf
addr16
pusha
sub
add
add
(bad)
movs
sbb
data16
mov
inc
daa
sub
test
add
cdq
lea
add
add
sub
(bad)
scas
nop
mov
sub
cmp
sub
xor
inc
add
push
add
add
mov
sub
dec
cs
outs
xchg
mov
in
(bad)
sbb
imul
cwde
(bad)
cld
data16
add
jle
xor
xor
inc
(bad)
mov
dec
push
enter
cld
push
mov
add
add
push
jb
push
push
add
nop
call
(bad)
out
xchg
mov
xor
call
add
or
or
xchg
adc
mov
xchg
fcom
popa
inc
or
mov
add
add
sub
das
and
xor
push
xchg
sub
mov
js
aaa
push
repz
aaa
xor
add
add
sub
retf
cmp
stos
adc
dec
push
mov
sub
mov
test
add
add
test
or
adc
retf
lods
fstp
mov
add
add
popf
jle
scas
mul
push
xchg
xchg
ror
pop
cmp
inc
mov
cmc
push
mov
add
(bad)
push
sbb
int3
stos
dec
ja
je
and
mov
nop
dec
stos
mov
inc
aam
add
add
push
repnz
push
xchg
pop
sub
or
and
push
jp
popf
xchg
addr16
add
add
push
in
add
das
std
rcl
dec
stc
add
mov
out
add
inc
fsubr
adc
add
add
mov
aam
dec
pop
xchg
pushf
jmp
ret
(bad)
retf
in
mov
add
add
mov
mov
sti
mov
jne
add
xor
popa
ja
pop
jl
int3
sub
cmp
add
add
sti
and
hlt
inc
int3
les
adc
xchg
cwde
dec
add
pop
icebp
sub
or
imul
add
add
aam
or
std
push
les
outs
inc
leave
jnp
inc
ins
jmp
jmp
add
add
adc
in
mov
mov
out
cwde
jl
sub
inc
dec
mov
jp
cmps
ss
add
add
test
retf
(bad)
jmp
addr16
movs
fdivr
aaa
jp
jnp
movs
push
and
add
mov
jge
dec
or
ja
enter
lahf
shr
xchg
call
pushf
(bad)
mov
imul
xchg
aas
add
add
and
movs
aam
adc
or
adc
mov
les
xlat
add
add
mov
push
loop
pop
dec
xchg
xor
adc
mov
fwait
ins
push
adc
movs
push
add
dec
in
add
add
lea
xlat
(bad)
sbb
and
push
ja
add
push
test
dec
shr
add
add
scas
mov
sub
xchg
aas
push
xor
pop
and
inc
je
sub
xchg
add
add
push
std
mov
dec
fnstcw
aam
(bad)
out
in
add
out
ret
xor
add
add
push
cmp
int3
push
pushf
jmp
and
mov
add
push
push
clc
shl
or
add
add
xchg
jb
cmp
inc
or
sbb
and
sub
add
add
bound
sub
adc
cmps
dec
bound
cwde
adc
das
pop
jp
out
iret
mov
sar
dec
mov
add
loopne
inc
clc
cdq
enter
call
dec
and
mov
add
add
sti
jno
sahf
out
jmp
sbb
movs
adc
adc
and
enter
jmp
pop
arpl
xchg
add
add
mov
das
lock
add
jbe
imul
std
shl
(bad)
(bad)
mov
in
or
add
add
push
push
add
test
aas
jne
test
cmps
and
mov
add
loop
mov
add
sahf
(bad)
cwde
and
dec
stos
cmps
mov
out
mov
jbe
aaa
mov
inc
fstp
popf
inc
cmp
add
xchg
sub
pop
pop
or
retf
sti
push
nop
push
cmp
push
jg
mov
cld
jae
outs
add
add
ficom
lock
out
std
jo
or
add
inc
or
add
jnp
div
movs
xor
mov
cmp
mov
sub
xchg
jns
adc
je
jmp
in
push
xchg
add
add
push
dec
sub
jge
push
je
je
cmp
sub
adc
add
fcom
and
sbb
js
add
add
add
scas
retf
or
mov
or
iret
popf
cs
add
push
dec
leave
or
add
add
mov
xor
bound
push
sar
enter
stos
jb
jns
in
adc
add
add
mov
mov
xor
rcr
dec
iret
dec
xor
push
inc
stc
pop
das
stos
aaa
sbb
icebp
add
add
or
add
jmp
inc
adc
and
jg
das
stos
das
mov
mov
add
add
sbb
inc
xchg
pop
ret
test
(bad)
aas
(bad)
jmp
inc
adc
dec
loope
das
scas
and
mov
add
add
retf
ja
jge
xchg
in
dec
(bad)
mov
(bad)
adc
loopne
rcr
xchg
xor
add
add
test
outs
and
cdq
add
je
sub
in
xchg
rol
add
(bad)
stc
out
shr
mov
dec
retf
lods
mov
dec
leave
mov
add
call
pop
lahf
jge
loopne
stc
jge
mov
mov
scas
fadd
cld
cmp
in
add
add
lea
and
pop
into
imul
jecxz
call
push
es
cld
pop
xchg
sub
add
add
inc
loop
imul
out
dec
loopne
dec
mov
dec
add
jge
rcr
add
call
jae
xor
sbb
sbb
mov
jne
inc
inc
in
dec
dec
jecxz
bound
add
add
iret
test
xchg
or
(bad)
stos
and
pop
mov
jecxz
adc
adc
scas
les
add
add
shl
inc
inc
dec
(bad)
push
sbb
outs
imul
jge
push
add
out
sub
pop
or
add
mov
and
iret
dec
push
pop
adc
add
add
xor
outs
mov
inc
push
or
call
int3
mov
test
inc
jmp
or
add
cmp
bound
xor
ret
inc
push
ret
clc
pop
adc
push
pop
sub
shr
add
add
xor
or
mov
mov
push
xor
daa
mul
sbb
add
cwde
inc
cmp
jne
push
push
add
push
push
out
xlat
scas
push
lock
test
cmps
mov
add
add
push
popa
mov
ror
in
xchg
mov
add
push
adc
add
aam
push
xor
add
imul
jo
cwde
adc
cmp
rol
nop
stc
inc
cs
lock
add
lock
and
outs
or
push
clc
mov
add
push
xchg
dec
ss
push
add
add
and
pushf
push
or
lea
mov
call
push
ror
xchg
pusha
enter
add
push
xchg
aas
fcmovne
push
lds
outs
sti
xchg
aas
in
and
and
daa
pusha
mov
xor
adc
nop
add
add
cli
dec
mov
(bad)
imul
sbb
scas
shl
cmp
(bad)
cmp
test
and
cmp
(bad)
dec
adc
inc
mov
into
cdq
xor
mov
inc
sub
pusha
add
add
mov
into
mov
loopne
add
inc
pop
jns
iret
fwait
movs
mov
and
pusha
not
add
add
add
arpl
int3
pop
lock
retf
adc
leave
push
or
int3
lahf
adc
scas
add
add
daa
mov
xlat
sub
or
inc
repnz
dec
push
ror
push
ret
mov
add
add
(bad)
cld
push
popf
cld
nop
dec
fiadd
pop
mov
push
cmp
shr
add
add
cmp
dec
xor
ins
out
cmp
test
add
rol
pop
mov
add
add
cmps
into
xor
inc
push
and
fwait
mov
push
xchg
icebp
fisttp
pop
dec
cmc
push
inc
adc
add
add
stos
adc
mov
pop
add
sub
sbb
add
ss
mov
dec
cmp
loop
add
add
jbe
(bad)
les
push
out
adc
es
(bad)
fdivr
fmul
pop
pop
push
movs
sub
add
add
fild
stos
mov
aad
(bad)
lds
dec
fsubr
nop
pop
cs
pusha
add
add
dec
cmp
jne
or
xchg
or
dec
retf
fidivr
adc
xlat
cmps
call
mov
mov
mov
cmp
or
(bad)
cs
mov
mov
and
dec
ror
mov
add
add
push
xor
jmp
clc
mov
(bad)
and
or
in
cmps
daa
push
je
pop
lods
adc
add
lods
dec
mov
or
push
cmps
xchg
imul
pop
inc
dec
stos
cwde
sbb
push
pop
jg
(bad)
jne
xchg
dec
fs
mov
mov
push
(bad)
leave
outs
pusha
inc
add
add
add
sbb
dec
adc
and
cmp
add
enter
lods
ror
mov
adc
pop
push
push
add
add
dec
push
idiv
out
or
sbb
adc
int
loop
imul
adc
add
add
adc
lea
sbb
or
mov
sbb
ficomp
inc
mov
mov
add
jmp
push
les
pop
pushf
xor
inc
in
push
icebp
and
sti
lods
lods
sbb
add
aam
push
retf
and
ret
cmp
pop
aam
mov
in
sbb
or
add
add
add
hlt
out
adc
pop
jne
cmp
jecxz
jno
movs
mul
push
inc
fiadd
add
add
adc
jmp
(bad)
cmps
je
fs
icebp
(bad)
imul
icebp
imul
sbb
aam
sbb
add
add
sub
and
mov
xchg
sbb
aad
in
cmp
sbb
ret
push
mov
pop
hlt
mov
mov
fld
push
ins
xchg
out
je
rol
or
add
add
adc
push
adc
aaa
cmp
nop
loope
lods
imul
repnz
test
xchg
add
add
not
mov
fstp
ds
pop
fbld
enter
or
ret
add
add
out
mov
pop
in
fadd
out
inc
cmp
add
fisub
pop
(bad)
or
add
add
sub
int
(bad)
add
push
and
mov
pushf
add
push
push
inc
dec
add
add
push
and
imul
pop
push
dec
mov
add
mov
mov
jo
and
add
add
loop
mov
fimul
lahf
jmp
and
pop
add
pop
rcl
mov
dec
sbb
jb
in
add
add
lods
mov
sbb
jne
mov
push
fdivr
retf
mov
and
push
mov
add
add
or
fiadd
inc
add
jne
ret
rcr
and
xor
xchg
aam
repz
add
jbe
or
or
ret
jge
cmp
cmp
pcmpeqw
jmp
in
mov
aaa
pop
add
add
xlat
(bad)
std
inc
or
not
mov
ror
or
lods
dec
or
adc
or
dec
loope
add
add
adc
pop
ins
mov
push
mov
and
adc
jp
add
pop
pop
add
add
push
popa
ss
inc
daa
mov
std
mov
ret
cmp
push
lea
je
mov
daa
or
inc
popf
add
add
inc
shr
inc
pop
sub
mov
push
(bad)
cld
cmp
enter
push
sbb
dec
hlt
ror
add
add
xor
mov
shl
jl
dec
cdq
pop
or
mov
dec
in
xchg
out
ficom
out
add
add
dec
inc
jmp
in
hlt
stos
mov
mov
mov
push
jl
add
xchg
mov
add
push
or
inc
adc
gs
fdiv
es
or
add
loopne
ja
inc
rol
jae
add
add
pop
or
sar
mov
or
in
mov
add
fbld
push
inc
sbb
add
add
inc
loopne
push
daa
dec
or
lea
xor
push
unpckhps
cmps
je
dec
mov
add
add
cmp
mul
mov
push
add
jnp
mov
in
and
mov
jo
cmp
or
jne
adc
add
add
scas
adc
cmp
jle
not
push
push
inc
pop
loop
jp
or
jmp
fsubrp
mov
add
ret
xchg
and
pop
pop
jns
or
loop
mov
mov
mov
inc
add
add
push
mul
test
cmp
gs
inc
les
and
test
ins
lods
pop
ret
push
lods
ins
fs
add
add
jns
ja
scas
pop
cmp
sbb
inc
push
fist
adc
(bad)
or
or
inc
inc
push
add
sbb
div
mov
jb
cld
push
stos
call
je
pop
sub
push
ret
cwde
adc
add
pop
movs
jae
dec
fldcw
mov
xchg
cmp
loope
je
xchg
push
dec
jmp
pusha
in
in
fwait
push
enter
in
imul
add
cmp
lods
sub
adc
sub
push
aas
fs
scas
repnz
add
push
push
in
mov
add
cli
mov
int
sub
or
sar
sbb
pop
xchg
test
add
out
add
add
dec
push
outs
adc
test
push
xchg
pop
dec
inc
add
pop
jle
rol
daa
sub
ja
adc
scas
pop
pop
add
add
loopne
mov
lahf
in
out
mov
or
pop
or
adc
mov
jne
add
add
adc
out
sub
sbb
push
xor
jmp
cmc
push
xlat
add
add
repz
sbb
or
lea
das
add
jne
cmp
gs
cmp
add
inc
xor
cmp
sbb
out
jecxz
or
push
iret
mov
outs
xchg
fnstsw
sbb
add
add
jmp
push
xor
mov
jne
daa
or
inc
add
add
sub
and
adc
shl
test
pop
cmp
jo
(bad)
lock
add
jmp
push
pop
adc
dec
cdq
cmp
push
or
sbb
add
add
jmp
shl
adc
mov
mov
repz
outs
mov
je
xchg
or
adc
fwait
add
add
outs
loop
popa
nop
cmp
jno
iret
push
sbb
pop
jbe
clc
sbb
inc
jo
add
add
repnz
(bad)
retf
in
inc
sbb
neg
ja
fs
jge
retf
mov
adc
add
push
adc
inc
adc
inc
inc
or
xor
(bad)
mov
xchg
add
arpl
add
add
push
mov
jnp
xchg
adc
popf
bound
or
sub
push
movs
lods
dec
(bad)
mov
add
test
or
jmp
stos
jle
mov
push
movs
jle
adc
retf
retf
inc
dec
and
add
add
bound
mov
(bad)
mov
imul
gs
in
xchg
push
add
add
or
push
loope
ret
outs
(bad)
rol
push
fucomp
aaa
xchg
mov
add
and
pop
aam
stos
cmps
add
add
fisttp
mov
cmp
xchg
pop
push
in
and
(bad)
into
repz
add
xor
test
fild
pop
dec
jae
(bad)
mov
test
dec
push
test
out
mov
add
add
imul
lds
lods
idiv
or
pop
mov
add
inc
add
add
jb
push
dec
mov
push
ret
or
adc
out
mov
test
add
and
mov
repz
jge
inc
in
gs
out
cmp
in
mov
das
scas
or
repz
test
movs
retf
add
add
stos
cwde
jl
push
add
and
dec
js
in
cmps
push
lahf
aaa
adc
push
jg
cwde
mov
sbb
add
mov
pop
in
cmp
adc
mov
js
je
adc
jns
adc
cli
push
push
add
add
push
movs
dec
jmp
push
sahf
pop
and
dec
sub
movs
mov
retf
jnp
shl
cmps
loopne
add
add
sbb
iret
lds
and
in
fcom
dec
sar
or
es
mov
add
into
dec
mov
or
sbb
xchg
inc
cmp
retf
sahf
or
add
add
fstp
(bad)
vmread
jne
shr
outs
leave
push
fmul
mov
add
inc
sub
add
add
sbb
mov
lock
sub
in
xchg
sbb
jne
repnz
mov
sub
seto
add
add
daa
mov
add
sbb
out
jecxz
shr
jns
dec
mov
and
jecxz
add
add
inc
cmc
clc
ds
mov
add
stos
sub
add
cmp
inc
xchg
add
lock
inc
and
xor
aas
push
es
or
cdq
sbb
push
pop
push
pop
sbb
add
add
push
fld
xchg
push
pusha
pop
or
inc
mov
xor
pop
push
fs
call
jmp
dec
dec
enter
fmul
dec
jmp
adc
push
sub
and
fdiv
sbb
add
add
add
out
loop
mov
in
dec
and
or
adc
add
add
pusha
adc
stc
loope
out
into
in
sub
int
xchg
stc
repnz
or
add
add
ror
fucomp
shr
jne
adc
out
(bad)
(bad)
jg
mov
cmp
add
repnz
daa
or
imul
or
sub
add
lods
adc
stc
retf
repnz
gs
jno
push
imul
jle
adc
cwde
adc
add
add
(bad)
dec
stos
leave
push
fwait
jnp
push
daa
sub
ficom
push
fdivr
or
or
add
add
mov
das
adc
or
lods
sbb
and
add
xchg
jg
add
add
dec
sbb
fstp
ret
or
jbe
mov
and
add
add
xchg
inc
xlat
dec
ret
pop
mov
addr16
push
ja
mov
cmp
rol
es
ret
add
add
nop
lahf
dec
mov
fsub
les
movs
(bad)
dec
into
(bad)
adc
js
add
add
cmp
cmp
mov
jg
add
mov
sbb
and
add
add
xor
and
push
das
movs
xchg
das
nop
and
inc
or
test
xchg
jle
add
add
lahf
adc
add
sbb
or
mov
fsub
inc
sti
and
add
xchg
test
adc
push
inc
or
mov
in
and
cwde
mov
push
in
add
add
movs
push
nop
inc
jbe
push
fs
mov
fcom
mov
push
es
test
adc
add
cs
push
inc
(bad)
pop
jo
adc
push
push
and
cmp
push
or
push
int
out
add
add
adc
or
pusha
out
push
add
out
push
inc
and
(bad)
dec
mov
lods
push
pop
and
add
add
in
adc
xor
lea
adc
push
push
iret
sub
dec
(bad)
scas
jb
add
add
jno
icebp
jo
cmp
in
leave
jbe
daa
mov
loop
cs
mov
jns
mov
add
add
dec
cdq
mov
adc
pushf
addr16
push
inc
fdiv
les
push
mov
pop
rcr
retf
pop
push
pop
fwait
rol
add
add
rcl
add
jne
push
movs
adc
adc
lahf
inc
jmp
sub
add
add
xor
hlt
add
fnsave
dec
hlt
aad
(bad)
sbb
test
add
add
inc
stos
mov
adc
and
sub
mov
lods
stc
dec
or
or
stc
aam
sub
add
add
cwde
out
xlat
pop
jbe
rcl
aad
fcom
mov
push
loopne
xor
(bad)
int
into
into
scas
loope
add
add
xor
and
lods
mov
push
mov
pop
cmp
dec
pop
or
xlat
or
cmc
add
add
nop
jns
stc
popf
jne
lds
fnstenv
nop
call
aaa
ret
sbb
add
add
(bad)
in
sub
fcomp
push
xchg
loope
or
ror
and
inc
jae
sbb
push
das
push
or
lds
add
add
adc
jmp
cmp
lock
loopne
mov
dec
mov
lock
jmp
add
bswap
mov
xchg
push
sub
enter
aam
pop
or
sbb
jmp
add
xor
adc
mov
sub
mov
push
in
sub
inc
xchg
ret
add
add
pop
mov
jmp
xchg
push
popa
leave
mul
fcomp
cmp
mov
stc
popa
test
add
sub
and
and
push
or
dec
or
enter
dec
sub
pop
xor
call
add
clc
jmp
adc
adc
jne
test
inc
enter
in
push
out
adc
add
add
or
nop
ret
lods
adc
or
mov
adc
cs
mov
add
add
xchg
push
xor
je
and
bound
pop
dec
pop
(bad)
daa
push
push
xchg
rol
add
add
xchg
push
cmp
push
retf
jecxz
call
sub
push
jns
fs
dec
aam
dec
jmp
add
test
pop
or
imul
in
xlat
stc
xor
scas
not
pop
call
add
add
inc
adc
gs
mov
push
sbb
repnz
mov
loope
mov
sub
mov
adc
sahf
dec
inc
adc
add
add
jl
mov
sub
mov
jne
dec
loop
jmp
(bad)
xchg
mov
xor
add
add
cmp
jle
je
fild
fsubr
inc
push
sub
jge
mov
and
add
(bad)
es
xchg
mov
das
data16
arpl
and
push
stos
arpl
or
push
push
sub
add
push
mov
pushf
mov
xchg
push
mov
dec
inc
add
adc
xchg
jmp
add
add
in
add
data16
inc
push
pop
push
ret
and
in
lods
push
cld
sbb
nop
or
add
add
jmp
std
ss
mov
mov
add
jmp
xor
bound
scas
retf
add
add
adc
add
xor
repnz
push
or
ins
loopne
push
cdq
lods
jge
(bad)
add
out
popf
addr16
adc
add
add
add
sub
fisttp
movs
dec
push
xor
push
outs
cs
into
mov
add
add
lods
sub
call
jmp
imul
lock
out
mov
sbb
add
add
fild
dec
or
dec
push
je
xor
fsubr
dec
das
or
inc
movs
push
repz
add
or
sahf
sbb
cmp
dec
push
test
adc
out
fld
add
mov
add
add
sbb
mov
sti
mov
ins
and
mov
inc
push
sub
or
arpl
add
in
shr
add
dec
retf
shl
push
cdq
mov
push
test
enter
jmp
add
add
sbb
mov
xchg
or
or
aam
ror
jge
add
push
sahf
loop
adc
add
add
test
mov
mov
or
into
xor
sub
cld
push
mov
add
sub
adc
sub
icebp
lahf
mov
cmp
je
cmp
mov
dec
cld
movs
mov
cmps
(bad)
(bad)
(bad)
dec
inc
sub
adc
daa
icebp
ja
fwait
and
dec
xchg
ret
cmp
add
add
cmp
jp
and
aad
rcr
jmp
mov
mov
add
mov
add
inc
mov
icebp
mov
xchg
mov
dec
mov
mov
jle
movs
xchg
mov
add
add
push
mov
js
or
pop
push
das
repnz
add
icebp
xor
ds
adc
movs
retf
je
add
add
jo
and
mov
push
pop
sbb
lock
test
nop
icebp
shl
pop
sbb
push
mov
add
add
adc
out
(bad)
fbld
or
push
(bad)
jmp
mov
ret
dec
xchg
xchg
data16
add
adc
push
jo
xchg
mov
fld
xchg
mov
enter
scas
fsub
test
push
add
in
test
repnz
out
pop
cmps
bound
or
jne
cmc
pop
mov
xchg
jnp
adc
add
add
lods
lods
adc
lock
mov
xchg
xlat
dec
shl
adc
xlat
mov
(bad)
lock
add
add
mov
imul
jns
rep
jae
out
pop
pop
test
pop
cvtpi2ps
adc
clc
push
sub
add
aaa
mov
popa
add
sbb
sub
cmps
popf
call
add
mov
addps
ret
and
or
movs
and
mov
or
lahf
mov
inc
jmp
or
mov
fisttp
jle
nop
outs
(bad)
in
lea
inc
popa
or
leave
retf
push
dec
add
add
retf
movs
pop
(bad)
mov
imul
je
push
jns
jle
test
jnp
xchg
add
add
popa
xor
push
mov
push
dec
adc
(bad)
sub
xchg
stos
fs
out
mov
add
add
jle
les
test
inc
in
sbb
(bad)
jmp
xor
or
cmc
(bad)
sti
add
add
xor
(bad)
add
int
mov
adc
mov
mov
data16
add
add
jmp
or
inc
pop
and
fstp
aam
cmps
sti
fwait
sub
dec
mov
inc
add
add
add
add
inc
or
fmul
jmp
loopne
sbb
and
sub
lahf
jne
icebp
dec
pusha
inc
xchg
mov
add
add
and
mov
xor
pop
out
adc
scas
fdiv
inc
retf
add
push
add
add
or
sub
sbb
jge
dec
stos
add
outs
mov
and
or
add
add
cmp
je
inc
and
mov
stc
mov
or
adc
inc
add
add
stos
pop
inc
jmp
test
cli
mov
loopne
inc
test
xor
mov
add
add
out
loop
mov
sub
and
mov
ret
rcr
sbb
pop
mov
add
add
adc
add
mov
xor
pop
sar
test
dec
mov
add
add
inc
inc
xchg
inc
and
mov
xor
xor
(bad)
ret
add
push
fwait
and
mov
fist
or
push
push
jnp
inc
push
cdq
push
fist
pushf
mov
or
sahf
push
sbb
push
adc
add
(bad)
and
shr
or
or
test
enter
add
or
or
leave
jge
cmp
ret
cmps
or
mov
dec
es
push
stc
cmp
add
bound
pop
lock
push
push
jns
cmps
cmc
sbb
stos
adc
mov
add
add
mov
sbb
clts
enter
fst
sbb
test
lods
pop
jle
test
add
add
loopne
add
dec
outs
jecxz
hlt
test
lds
pop
hlt
and
fild
xor
add
(bad)
bound
pop
cmp
dec
dec
xchg
add
dec
xor
cmp
ret
cmc
fistp
mov
add
add
je
mov
push
adc
mov
adc
jnp
inc
hlt
add
add
std
dec
and
and
mov
dec
push
add
push
mov
pusha
or
push
jns
or
add
in
icebp
retf
dec
jg
push
or
cli
pop
push
aam
inc
or
retf
cmp
pop
(bad)
or
adc
dec
sbb
add
add
shl
push
push
mov
pop
mov
xchg
push
add
outs
test
aaa
sar
add
shl
and
scas
aaa
mov
and
inc
mov
mov
clc
sub
add
add
aaa
ins
or
js
je
push
xchg
mov
mov
dec
xor
mov
add
add
hlt
cmp
push
cmp
cmp
in
xor
dec
jmp
test
inc
inc
out
add
add
adc
inc
or
(bad)
jmp
outs
je
jmp
cs
repz
mov
add
add
sub
cs
adc
lods
idiv
jmp
add
add
movs
imul
(bad)
mov
mov
or
pop
aas
imul
mov
lds
stos
call
or
add
jl
adc
shl
inc
sbb
dec
push
or
dec
ret
in
add
add
lods
xchg
mov
push
xor
outs
mov
sub
out
cmp
dec
enter
add
add
sbb
(bad)
repz
enter
or
xor
inc
idiv
dec
push
in
add
adc
add
inc
jmp
xchg
and
test
push
lahf
pop
push
daa
ins
mul
std
or
hlt
inc
add
add
fsubr
and
ja
xor
icebp
nop
sub
call
xlat
cmp
add
add
push
jmp
das
and
mov
add
fwait
out
dec
pop
xchg
inc
pusha
sbb
xor
mov
mov
cli
ud2
or
jns
mov
adc
and
add
jae
cmp
loope
mov
jne
sbb
cli
push
xchg
lock
add
stc
cmp
push
ins
push
stc
pushf
int
pop
add
retf
sbb
mov
or
mov
add
add
daa
mov
(bad)
adc
or
pushf
cmps
nop
jae
or
mov
cmp
and
fwait
mul
mov
rcl
pop
or
xor
sub
add
jne
cwde
dec
mov
jae
repnz
push
xlat
lds
push
jbe
inc
inc
adc
imul
add
add
or
das
or
std
inc
or
repnz
push
cs
out
jmp
sahf
addr16
pop
mov
add
mov
and
mov
jp
loopne
out
stos
or
pop
add
add
mov
mov
mov
and
dec
push
lea
jle
sbb
(bad)
pop
add
add
add
ins
fwait
push
aaa
daa
mov
int
push
push
dec
add
pop
cmp
inc
xor
add
add
cmp
in
movups
and
sti
(bad)
push
sbb
push
push
and
ret
inc
push
add
add
cmp
jge
jp
ja
mov
(bad)
xor
cmp
jne
fcomip
pop
rol
psubb
add
add
jae
mov
shl
ret
xchg
cld
pop
mov
mov
push
xor
sbb
jne
push
inc
add
or
add
add
cs
and
inc
add
icebp
rol
pop
adc
enter
mov
loopne
call
dec
mov
mov
push
sub
retf
adc
fisubr
mov
aam
scas
lock
add
push
pushf
js
xchg
pop
sub
and
mul
push
push
dec
mov
inc
stos
mov
add
add
outs
pusha
pop
in
mov
mov
popa
pop
out
push
mov
hlt
movs
and
sbb
add
pushf
test
cmp
ret
js
cmp
mov
(bad)
mov
xchg
jmp
sldt
add
test
nop
cmp
shl
inc
daa
sbb
push
xchg
xlat
nop
jge
je
or
mov
add
add
and
mov
ins
lahf
pop
adc
adc
(bad)
dec
dec
movs
mov
adc
mov
scas
sar
cwde
(bad)
mov
call
dec
sub
push
and
push
fdivr
mov
add
add
dec
or
push
in
ds
out
arpl
xor
test
adc
aam
add
add
inc
cmp
int3
dec
adc
push
push
mov
jae
add
add
mov
jl
imul
shl
lea
hlt
aaa
add
das
adc
pop
mov
or
movs
cdq
adc
inc
jmp
mov
sbb
mov
or
test
or
add
add
out
mov
push
dec
cmps
fmul
(bad)
sbb
mov
adc
add
jno
jns
cmp
jp
add
sbb
ins
sbb
xlat
sahf
fisub
in
(bad)
pop
jl
ret
mov
rol
add
add
inc
adc
mov
or
call
cmps
data16
dec
mov
sub
pop
les
mov
xlat
add
add
adc
xchg
xor
and
and
fisttp
mov
dec
mov
cmp
ja
mov
push
pop
loopne
sahf
and
and
push
add
mov
mov
add
add
pop
or
fisubr
repz
sahf
xchg
addr16
jmp
add
ins
cmp
add
add
xchg
push
pop
push
call
dec
xor
ss
clc
sbb
add
add
add
xor
adc
mov
movs
mov
add
inc
cmp
fadd
js
add
add
add
lods
push
pushf
and
mov
ficom
jle
test
cmp
pop
add
push
dec
jns
jmp
std
or
push
lock
add
test
push
pop
pop
mov
jno
fdivr
cmp
and
xchg
add
add
loop
mov
mov
jp
adc
mov
pop
daa
jno
stc
pop
pop
sub
add
loopne
push
jle
sub
xor
ja
inc
sbb
pop
cld
add
jns
add
add
or
mov
sub
fiadd
loopne
adc
dec
loopne
pop
or
adc
add
add
in
or
dec
retf
cs
test
or
mov
ins
int
add
pop
or
add
add
push
push
not
or
ror
cmps
xor
fwait
mov
or
mov
jns
rcr
push
sbb
pop
ficom
fisub
jle
jo
cmp
sub
fbld
jmp
or
jne
push
pop
test
push
add
add
std
cmp
das
(bad)
inc
sub
ficomp
xor
jae
adc
dec
xlat
sbb
inc
push
in
jo
and
sbb
mov
ja
jo
add
cmp
jo
add
add
mov
or
dec
jnp
push
add
jb
inc
cmp
jne
clc
inc
int3
push
push
add
add
inc
inc
mul
mov
jno
sub
add
pop
shl
imul
mov
jl
les
add
add
cmp
inc
adc
neg
fld1
lahf
pop
jp
pusha
test
je
jp
xor
leave
pop
shr
add
add
lock
fsub
adc
jmp
(bad)
push
add
push
fdivp
pop
sub
mov
pop
mov
add
add
push
retf
paddq
adc
and
sbb
push
pop
xchg
adc
xor
jb
(bad)
addr16
or
adc
xchg
jne
in
jne
daa
sbb
adc
jne
mov
add
sbb
and
mov
loopne
sub
sbb
(bad)
fsub
push
sub
aad
push
sub
(bad)
fdiv
sbb
or
fsubr
aaa
add
inc
add
push
push
or
add
sbb
and
fldenv
or
inc
inc
mov
add
add
adc
scas
sbb
jl
hlt
jns
mov
out
loope
jge
push
add
add
dec
pop
bound
fnstenv
adc
into
inc
xchg
inc
xor
xchg
push
stos
mul
add
in
dec
push
aas
jmp
pop
das
add
pop
push
mov
mov
add
cli
sbb
inc
and
adc
and
xchg
std
shl
aam
push
xchg
sub
and
push
add
add
test
push
dec
mov
(bad)
mov
pop
jmp
mov
cld
mov
pusha
std
addps
retf
pop
add
add
and
dec
pusha
inc
mov
mov
and
ret
dec
mov
stos
mov
xor
add
sar
dec
nop
ja
push
(bad)
mov
icebp
add
cmp
shl
push
xchg
sbb
add
xchg
idiv
ror
add
mov
cmp
sub
and
inc
add
add
mov
fmul
fsubr
in
not
fmulp
jo
and
stc
or
lea
loopne
push
xchg
mov
add
pop
fisttp
push
push
lds
js
mov
test
mov
data16
push
push
add
add
adc
movs
add
inc
push
sbb
daa
inc
stos
jns
add
shr
pop
pop
add
add
mov
adc
stos
adc
mov
inc
cmp
and
and
inc
xchg
scas
mov
add
add
dec
sub
(bad)
jno
mov
add
cmp
test
sub
add
add
jbe
push
and
adc
dec
clc
push
call
adc
fdivr
add
add
les
cmps
mov
cmp
js
sbb
push
mov
pop
add
add
xchg
pop
(bad)
adc
or
sti
sbb
stc
dec
daa
jle
call
pop
(bad)
sub
add
add
fs
loope
ds
jmp
sub
mov
aas
jmp
add
inc
jmp
or
add
add
xor
pop
(bad)
adc
fwait
stos
adc
and
push
sub
in
js
stos
xchg
pop
cmp
add
mov
dec
lods
mov
lock
mov
push
push
pop
cmp
adc
dec
pop
jge
add
pop
aas
in
xor
(bad)
aad
push
dec
repnz
(bad)
jns
sar
movs
adc
cli
add
and
add
add
fdivr
daa
test
cld
jmp
repz
int3
jg
test
in
lahf
test
aam
push
or
or
add
add
inc
fdiv
sub
push
adc
mov
aaa
fiadd
pushf
in
xor
lock
mov
add
add
jb
or
in
jne
xchg
xchg
inc
adc
repz
les
pushf
mov
inc
mov
add
add
mov
push
jne
stos
pop
fwait
push
push
sub
jle
stc
enter
mov
cmp
add
lock
add
lods
or
jmp
push
scas
pop
lds
push
sbb
xor
cmp
sbb
out
fdiv
push
push
add
fmul
int3
inc
push
and
test
or
retf
push
aad
sbb
add
add
mov
ins
pop
hlt
jg
gs
ins
inc
and
jb
jmp
jns
jno
or
push
add
add
add
addr16
dec
dec
ins
jge
ins
inc
dec
and
cmp
pop
add
dec
jmp
xor
add
add
dec
push
cwde
sub
test
mov
push
dec
dec
push
es
test
add
add
daa
(bad)
xlat
ins
adc
push
mov
loope
cmp
or
test
inc
push
inc
ldmxcsr
inc
sub
add
add
and
int3
ja
je
add
int3
ins
xor
inc
dec
hlt
fwait
inc
push
aad
mov
add
add
aaa
inc
adc
scas
push
and
out
cs
add
adc
push
inc
jmp
shl
lea
add
add
and
add
xor
pop
and
xchg
jae
sti
(bad)
inc
cld
and
icebp
and
mov
add
add
rcr
and
jns
cmp
js
dec
xor
jl
(bad)
xchg
mov
ror
add
add
movs
ins
adc
imul
and
les
call
jg
dec
mov
add
add
dec
jge
retf
adc
in
in
nop
inc
pop
adc
sub
(bad)
out
frstor
jno
or
add
inc
push
enter
add
test
test
adc
fcom
inc
lahf
les
add
add
int3
xchg
mul
mov
or
adc
jmp
add
add
mov
je
das
out
jnp
pop
nop
mov
inc
shl
div
add
add
xchg
in
aas
scas
adc
mov
cmp
cmp
lock
cmp
add
mov
test
cmp
in
inc
push
retf
inc
jmp
xchg
lods
sub
in
push
sub
aam
jl
loopne
jae
xor
cmc
leave
stc
pop
into
hlt
mov
retf
aad
cmps
ins
adc
add
aam
adc
mov
(bad)
dec
dec
test
cmps
fld
or
push
cmc
ss
dec
add
add
les
fmul
jmp
sub
aad
out
test
or
sub
add
add
mov
adc
test
idiv
pop
mov
xchg
cmp
add
add
mov
add
mov
push
mov
(bad)
jns
or
test
add
add
push
mov
inc
retf
adc
lods
aam
jmp
loop
sub
push
mov
add
add
psraw
fwait
stos
inc
mov
fild
hlt
xchg
test
hlt
das
add
jno
push
ss
jge
cmp
gs
pop
add
add
push
push
push
in
shl
mov
mov
outs
ja
inc
dec
out
or
das
mov
xchg
add
add
mov
mov
jne
mov
ins
cmp
mov
pushf
cmp
add
out
mov
aad
adc
das
je
rol
popf
jae
outs
and
imul
add
jns
add
add
push
add
in
push
movs
cmp
adc
mov
scas
pop
sub
dec
dec
and
add
add
bound
ss
jnp
das
mov
adc
test
adc
add
push
push
test
add
mov
add
frstor
stc
jne
pusha
and
clc
push
inc
sbb
dec
jo
xchg
push
cmp
jo
xor
add
add
shld
call
stos
cmp
inc
mov
pop
inc
pop
fdivrp
ret
add
add
xor
mov
sub
mov
pop
out
jo
adc
push
sti
cli
xchg
fwait
shl
add
add
mov
mov
retf
xchg
sbb
icebp
popf
(bad)
cmp
sbb
dec
sbb
add
add
lahf
mov
sar
pop
int3
call
jns
test
shl
jmp
mov
add
add
sub
or
pop
and
xor
jbe
ret
not
gs
stos
cmps
and
sub
dec
nop
add
add
scas
jmp
jne
pop
push
push
dec
sbb
aas
sahf
inc
pop
sub
inc
push
in
or
adc
add
add
adc
nop
stos
call
sar
cmp
test
div
xchg
shr
pop
retf
add
add
adc
stc
sub
pop
loope
or
mov
pop
retf
lahf
jns
adc
rcl
add
add
push
jg
sar
push
or
(bad)
aas
rol
das
mov
jge
and
aas
loopne
test
cld
fadd
add
add
xlat
fmul
stos
clc
mov
comiss
fist
dec
fmul
or
push
xchg
add
add
mov
dec
enter
stc
loop
or
dec
packssdw
jge
iret
mov
add
(bad)
jmp
add
xor
fucomi
movs
sub
pop
mov
mov
enter
das
adc
and
inc
jp
add
add
cmp
mov
jb
popf
gs
sub
xor
int3
ja
icebp
or
jmp
add
dec
pop
xor
aas
icebp
mov
and
mov
jnp
enter
pop
dec
xchg
xchg
add
add
fdivr
push
and
ds
push
inc
jp
sbb
xor
inc
mov
push
movs
outs
mov
(bad)
sbb
add
add
adc
hlt
sti
lss
adc
inc
adc
adc
adc
add
add
icebp
ins
or
jnp
push
mov
test
aas
and
fadd
movs
adc
mov
adc
loop
rol
add
add
pop
mov
lock
pop
dec
dec
sub
lock
add
aaa
loope
jno
add
add
jl
xor
push
add
stos
cmps
push
dec
fistp
outs
imul
fist
xor
sti
adc
add
add
shr
push
xchg
enter
int
fs
int3
push
push
mov
dec
sbb
add
add
mov
push
retf
stc
fisttp
pop
or
mov
add
sub
dec
dec
imul
out
in
cmp
mov
xchg
push
cmp
inc
add
add
jns
jno
xor
repz
cmp
test
(bad)
push
adc
out
aas
pop
or
push
call
jge
or
xchg
adc
dec
out
imul
pop
xchg
fwait
sbb
ror
jl
mov
lods
in
cmp
fs
mov
add
add
nop
cmp
(bad)
and
or
lahf
fsub
cmp
loop
test
add
add
sahf
(bad)
clc
sub
popf
push
adc
movs
call
ret
add
js
jo
retf
mov
push
sbb
popf
push
add
add
out
push
push
imul
add
mov
dec
ss
jno
out
jbe
addr16
or
add
add
pop
aas
or
xchg
(bad)
fisttp
movs
dec
mov
movs
sbb
sub
add
add
or
fmul
jmp
push
iret
xor
xor
dec
loope
xor
stc
push
in
das
dec
add
add
add
cmp
sahf
sbb
xchg
rol
push
and
push
jl
dec
lahf
es
call
jbe
in
loopne
add
add
inc
ror
shr
push
cs
mov
and
call
pusha
js
add
add
shl
fld
dec
inc
pop
mov
je
stos
mov
sbb
dec
push
test
add
add
pop
stos
fimul
or
and
and
dec
cmp
jmp
jns
jb
pop
sub
add
shl
lods
mov
cmp
adc
mov
cmp
sbb
xor
push
push
sahf
add
add
lfs
cmp
jo
xchg
icebp
je
mov
mov
jne
jbe
push
cmp
mov
add
fs
cmp
adc
sub
sub
outs
(bad)
or
idiv
jmp
pop
nop
mov
aam
or
add
add
jnp
add
xchg
dec
clc
fldcw
enter
pop
jnp
xchg
adc
gs
pop
and
fadd
add
add
push
and
lds
fwait
or
fld
jg
push
sti
sbb
mov
sub
inc
xor
add
sbb
(bad)
inc
clc
ret
and
mov
popfw
cmc
xchg
cmps
inc
or
sub
add
cmp
cdq
daa
cmp
call
pop
xor
daa
push
xchg
and
cmp
add
add
test
int3
sbb
xchg
inc
retf
aas
mov
jmp
xor
in
pop
mov
sub
add
add
in
jge
or
std
and
inc
add
add
dec
xchg
add
add
adc
(bad)
mov
mov
mov
(bad)
mov
xor
sub
add
adc
dec
aaa
push
enter
imul
int
ret
adc
addr16
mov
add
add
sub
bound
add
mov
mov
adc
or
add
add
or
mov
in
mov
mov
adc
mov
and
mov
mov
retf
adc
sub
jle
xchg
add
add
lea
and
jo
cmp
ret
aaa
daa
not
daa
xchg
sub
push
mov
lahf
cmp
add
jno
sbb
sbb
mov
xchg
or
mov
imul
sbb
add
add
sub
test
or
inc
cmp
jmp
les
out
add
push
add
add
add
push
scas
fadd
dec
sub
movs
les
and
inc
jle
rep
shl
aas
add
add
mov
xor
and
and
leave
inc
mov
push
jb
ficom
xor
add
add
xchg
ins
xor
adc
fsub
sbb
cmp
pop
loop
xchg
adc
test
xor
aam
call
(bad)
call
aas
lds
xor
add
add
les
loope
xchg
pinsrw
test
mov
inc
sbb
adc
add
add
nop
push
loop
loope
add
mov
imul
icebp
mov
and
sub
or
mov
add
add
add
outs
imul
in
cld
and
mov
dec
repz
and
xor
add
add
das
mov
and
ret
pop
pop
xchg
push
lea
das
mov
imul
nop
sub
add
add
push
bound
sbb
sub
jle
pop
pop
arpl
xchg
sub
mov
add
add
clc
xor
mov
std
dec
(bad)
push
sub
imul
jecxz
mov
repz
add
(bad)
and
adc
sbb
mov
dec
xor
movs
inc
jge
add
add
add
pushf
lock
mov
fs
jnp
sub
pushf
leave
jl
sbb
js
imul
jns
add
add
clc
or
xor
push
or
mov
fwait
inc
pop
push
ret
test
call
and
dec
outs
mov
(bad)
dec
or
test
popa
fldcw
hlt
xchg
inc
add
add
jo
mov
mov
fisub
mov
mov
test
add
fwait
aad
add
add
and
lds
adc
push
xchg
scas
mov
add
aad
test
jg
shl
bound
add
add
push
xchg
or
loop
in
int3
inc
call
lock
mov
inc
push
sti
mov
add
add
xor
cwde
call
pop
js
push
push
popf
std
mov
lock
add
add
xchg
retf
mov
iret
ins
xchg
retf
sbb
push
push
mov
sbb
inc
loopne
jnp
jae
adc
loopne
sub
sub
sbb
inc
xlat
dec
ret
push
ret
add
pop
fcomp
add
mov
and
add
add
pop
lock
push
inc
push
in
xchg
fmul
cmp
push
aas
imul
jne
add
add
mov
out
hlt
fdivr
test
cmp
mov
pusha
(bad)
push
xor
fwait
mul
pop
hlt
jne
push
and
fwait
jb
in
repz
push
or
mov
cmc
ins
adc
outs
or
sbb
add
push
aam
lods
loope
nop
add
xor
add
inc
jnp
pushf
pop
mov
cld
push
fcmovu
cld
mov
add
inc
fcmovnu
add
(bad)
jmp
push
adc
mov
call
pop
test
sbb
test
push
les
add
add
jae
scas
xchg
adc
(bad)
sbb
clc
(bad)
mov
aas
pop
fmul
add
jno
inc
fadd
add
add
lods
inc
fnstcw
inc
scas
mov
loopne
inc
or
or
pop
inc
test
add
add
push
lods
aas
mov
add
and
or
mul
or
push
stc
fmul
je
inc
fsubr
add
inc
aam
add
add
add
push
out
fdivrp
and
scas
push
inc
out
mov
ret
push
mov
pop
adc
and
mov
inc
int3
les
(bad)
rcl
repnz
in
mov
and
in
sub
xchg
add
add
fwait
xchg
jle
sar
xchg
inc
mov
mov
pop
dec
inc
adc
pop
push
into
je
add
add
adc
pop
adc
rol
push
mov
adc
cdq
adc
jg
mov
mov
add
adc
mov
mov
push
pusha
out
adc
enter
mov
ret
inc
add
add
test
push
shl
jl
xchg
dec
jbe
enter
leave
pusha
inc
mov
inc
pop
push
add
add
call
push
jg
or
sub
out
jle
pop
scas
cmp
jmp
add
add
and
pop
inc
pop
cmp
aad
xchg
test
mov
push
(bad)
mov
add
add
popa
dec
or
push
mov
or
fnsave
leave
(bad)
jo
jb
add
hlt
cmp
jl
add
add
in
or
out
mov
push
sub
lea
pop
in
or
call
cli
cmps
pusha
leave
push
sbb
pop
add
add
and
(bad)
call
hlt
push
push
xor
stos
mov
or
add
inc
(bad)
cmc
push
cmp
sbb
(bad)
mov
pop
sbb
jge
aad
pop
mov
scas
call
mov
test
mov
push
inc
xor
ss
lods
jo
ret
retf
test
add
lahf
jle
popf
rcl
stos
mov
xchg
enter
sbb
adc
dec
and
and
add
add
mov
or
out
movs
(bad)
mov
or
push
ror
bound
or
enter
sbb
add
add
xor
or
xchg
jmp
jo
cmp
imul
movs
call
lock
mov
add
add
cmc
dec
stc
xchg
adc
lock
shl
shl
pop
pop
dec
push
dec
xor
push
add
add
lods
mov
push
or
add
popa
fcmovbe
pop
adc
dec
daa
cmp
jmp
cwde
inc
sub
add
add
pop
mov
push
in
adc
jmp
pusha
test
das
push
aad
mov
add
add
xchg
push
mov
loope
jnp
fs
mov
push
idiv
popf
fdivr
call
add
add
les
mov
ror
add
push
adc
stos
out
mov
es
cli
jmp
add
xchg
or
arpl
inc
lds
xchg
push
adc
bound
bound
inc
pop
stc
ret
add
add
fcom
stos
pop
ins
pusha
mov
idiv
or
fistp
add
add
leave
fstp
mov
cmps
cmps
fadd
fidivr
cdq
mov
jo
jmp
cmp
adc
add
add
add
stc
cmp
push
repnz
mov
sbb
push
aas
ret
adc
repnz
call
xor
xor
lods
retf
pushf
aad
jle
mov
or
push
push
dec
mov
add
pusha
sub
pushf
mov
dec
cs
mov
rol
push
call
add
sbb
shl
and
les
and
and
and
adc
push
std
fld
pusha
add
add
mov
pop
adc
or
jo
push
push
rcl
inc
mov
cli
push
lods
or
dec
retf
inc
call
rol
push
adc
sbb
sub
adc
push
inc
in
ret
push
add
add
push
dec
or
nop
mov
mov
xor
js
xchg
xor
int3
adc
mov
xchg
add
add
adc
xchg
add
mov
cmp
push
js
fild
adc
mov
ins
inc
sub
cmps
or
add
add
inc
jae
adc
std
dec
inc
inc
es
fild
gs
popa
pushf
xchg
mov
pop
mov
add
add
pop
pop
and
fdivr
inc
xchg
inc
sbb
pushf
scas
pop
nop
sbb
add
add
and
or
sbb
fadd
dec
sbb
in
sbb
bound
pop
call
add
add
push
push
retf
pop
adc
je
stos
enter
push
add
ins
fwait
jne
dec
fild
add
add
inc
cwde
pop
mov
push
sub
arpl
mov
pop
clc
and
inc
mov
cld
jae
and
add
add
imul
das
push
adc
and
dec
inc
fild
nop
pusha
and
inc
lods
sbb
add
add
pushf
mov
adc
mov
add
movs
jg
cmc
dec
stc
sbb
or
cmp
add
add
push
jnp
sub
ins
xchg
adc
fwait
dec
and
cwde
and
xchg
imul
adc
or
add
add
jo
cmp
test
fs
or
imul
out
cmp
add
adc
stc
adc
ret
add
jno
sbb
mov
inc
hlt
mov
mov
(bad)
pop
rol
iret
shl
les
add
mov
push
mov
add
sub
push
ins
sub
mov
or
dec
push
test
add
add
push
retf
nop
sub
pop
cmp
test
xchg
jne
mov
push
push
push
mov
(bad)
xor
xchg
jmp
test
in
cmp
scas
loop
mov
push
mov
dec
repnz
je
jns
push
add
add
(bad)
cmp
sub
push
mov
mov
adc
out
(bad)
ins
add
or
add
mov
(bad)
out
pop
or
cmp
jl
mov
mov
or
add
add
je
cmp
stc
lods
pop
sbb
mov
jb
stos
int
jle
and
mov
or
push
mov
xor
mov
push
les
adc
push
or
out
shl
test
cmp
sub
mov
or
xor
out
enter
add
add
leave
jp
pop
xor
lods
daa
pop
add
mov
or
les
pop
add
add
adc
adc
cdq
sub
push
(bad)
test
add
add
jmp
scas
adc
sbb
dec
xor
imul
lock
add
add
imul
sub
pop
pop
int
lds
cwde
jo
inc
leave
loop
cmp
xor
add
or
dec
adc
sbb
loopne
push
jg
test
add
jg
mov
les
push
push
or
push
jbe
loope
les
xor
sbb
add
popa
add
adc
cli
inc
add
sti
push
mov
cs
pop
add
add
mov
dec
mov
pop
push
loope
cmp
adc
cmp
pop
fld
add
add
jmp
stos
lods
ret
xor
sbb
js
aad
push
sub
icebp
fmul
ret
push
popa
pop
push
or
por
mov
and
mov
adc
sub
jns
imul
or
cmp
sbb
test
enter
xchg
pusha
cmp
push
repz
into
sub
cmp
add
pop
test
cwde
pop
lahf
adc
pop
ds
and
adc
je
mov
add
(bad)
or
cmp
push
cmps
(bad)
ds
mov
dec
sbb
xchg
lahf
and
add
add
repz
push
or
mov
and
icebp
hlt
mov
call
xchg
leave
push
mov
add
add
push
sub
xchg
mov
sbb
jae
es
sub
mov
add
add
add
pushf
mov
cmps
xchg
and
or
xchg
mov
lods
mov
dec
out
aam
dec
add
add
push
repnz
xor
and
lods
rep
xchg
and
in
aas
inc
and
pop
adc
add
add
inc
inc
enter
enter
es
pusha
test
daa
fs
and
or
sub
xchg
jmp
add
add
cmc
inc
fist
sub
dec
call
mov
repz
and
inc
inc
nop
push
dec
repnz
add
add
cmp
stos
mov
cmovo
and
mov
sub
fadd
hlt
xchg
add
add
fisub
je
(bad)
lds
push
std
mov
jo
cmp
je
add
add
jne
push
icebp
push
rol
inc
movs
mov
pop
clc
jnp
or
adc
mov
or
add
add
dec
cmp
call
dec
pop
test
(bad)
outs
jo
adc
test
xchg
adc
fmul
add
add
retf
sub
inc
xlat
or
jae
retf
xor
xchg
xor
add
ins
inc
xor
arpl
cmps
inc
add
add
mov
xor
mov
xor
cmp
or
mov
add
add
sub
shl
push
pop
sti
fiadd
test
jbe
pop
sub
ins
cld
add
add
inc
(bad)
retf
mov
(bad)
xchg
call
aad
jno
mov
popf
mov
sub
add
pushf
out
sub
add
pop
push
push
xchg
jns
xchg
or
repnz
rcl
enter
add
add
ja
enter
js
sub
addr16
inc
out
inc
add
push
add
add
xlat
pop
hlt
adc
jmp
and
test
test
loopne
mov
movs
push
les
add
add
sti
pop
push
and
fdivr
pop
xchg
pop
sbb
pop
push
and
fld
dec
or
mov
add
adc
pop
in
push
xchg
add
push
les
push
rcl
and
loop
sbb
add
add
mov
outs
cmp
sbb
push
dec
sub
sbb
add
cli
jecxz
add
add
adc
fist
hlt
lahf
add
adc
sti
jo
in
pop
mov
repnz
sbb
daa
inc
(bad)
aas
ret
outs
xor
mov
add
rcr
lahf
mov
xchg
clc
adc
pop
add
add
les
stc
add
push
mov
sbb
pop
push
and
nop
sbb
pusha
add
add
jns
ds
daa
push
les
jne
enter
mov
pop
adc
inc
cli
iret
js
add
add
push
cmp
and
sar
test
jmp
inc
add
mov
mov
add
add
and
iret
or
in
gs
cmps
xchg
sahf
pusha
or
in
das
fistp
add
add
xor
adc
pop
leave
add
stc
jge
mov
repnz
(bad)
adc
mov
add
xchg
add
add
in
sub
mov
sbb
sar
inc
mov
xchg
cli
and
push
or
out
add
add
les
repz
nop
mov
lds
jecxz
xchg
xchg
mov
stos
dec
dec
sar
add
sbb
or
inc
std
xchg
lds
or
mov
pop
test
adc
jle
jno
or
add
add
das
mov
mov
lahf
jle
ror
cvtps2pd
sbb
and
jge
add
add
ret
push
mov
cmps
or
mov
sub
add
pop
push
push
cld
add
and
add
add
clc
or
shl
ins
clc
mov
adc
jmp
cld
mov
fbld
add
add
pop
jle
add
loopne
mov
xor
xchg
dec
inc
pusha
ret
mov
cdq
xor
add
push
clc
cmp
pop
cmp
(bad)
cmovnp
cmp
push
or
mov
rcl
and
add
jne
mov
adc
add
xchg
out
fild
nop
mov
adc
mov
add
push
dec
sub
dec
adc
cmc
and
rcr
or
fs
pop
call
and
inc
jg
adc
fwait
pusha
dec
das
movs
or
fiadd
add
add
pop
hlt
mov
imul
lds
fdiv
lods
pusha
mov
pop
lahf
or
add
add
xor
in
adc
imul
cmp
adc
add
leave
iret
push
sahf
dec
mov
add
add
inc
es
sbb
add
lods
fld
fadd
and
jp
nop
and
loopne
add
add
jne
or
mov
std
push
xchg
(bad)
xor
(bad)
cmps
dec
pop
mov
call
add
add
out
addr16
push
frstor
test
jnp
ds
dec
cld
repnz
enter
or
mov
arpl
jge
xor
pop
sbb
jmp
xor
inc
inc
xchg
test
fs
dec
pushf
add
dec
add
jmp
fmul
mov
addr16
add
pop
and
addr16
adc
add
add
sub
ins
rol
das
mov
fmul
adc
jne
lea
adc
mov
fcomp
or
mov
xchg
add
fwait
sub
jns
cmp
fbstp
sub
push
xchg
test
add
add
mov
jmp
or
arpl
fwait
mov
sub
dec
add
lds
mov
add
or
adc
fimul
xchg
scas
imul
push
push
outs
mov
cli
xlat
add
add
add
mov
movs
int3
push
fcmovbe
mov
and
add
gs
mov
lods
inc
leave
add
add
stos
mov
adc
aam
pop
stos
das
jo
sar
popf
out
and
add
jne
in
mov
add
add
movs
cmp
mov
cmp
lahf
shr
lods
jg
sbb
sub
enter
(bad)
adc
xor
add
mov
pop
mov
cli
(bad)
fcomp
dec
cmp
sbb
shl
and
mov
add
push
test
cwde
rol
cmps
add
inc
ds
das
fwait
pop
xchg
divps
jmp
sub
clc
inc
or
cdq
jne
or
sub
das
dec
bound
pop
aam
je
push
xor
iret
hlt
add
add
mov
je
push
call
sete
daa
imul
mov
xchg
xchg
add
pop
add
add
pop
rol
or
push
push
mov
mov
fadd
aad
and
inc
test
jge
outs
pop
add
add
jae
jno
das
ins
stos
pop
fdivr
and
xchg
pop
adc
adc
sub
add
add
xor
mov
push
movs
or
mov
sub
add
add
lods
fisub
adc
jb
push
push
add
fcom
mov
lahf
mov
scas
add
add
retf
je
mov
pusha
xlat
jle
push
push
push
lods
test
dec
jl
xchg
mov
add
add
mov
push
mov
enter
cmp
push
xor
jb
and
mov
add
add
pop
ss
mov
cmps
mov
mov
mov
cmc
sbb
into
jp
adc
pop
mov
add
add
mov
sub
retf
jg
sbb
lds
sub
push
retf
cmps
push
adc
push
test
add
add
in
dec
cmp
and
int3
sub
adc
mov
mov
push
push
mov
add
add
jge
shl
and
adc
or
pusha
push
mov
cld
rol
add
add
mov
cmp
push
xchg
xchg
lods
stc
add
inc
or
clc
enter
sbb
pushf
push
pop
shr
rcr
add
add
xor
les
adc
ss
pushf
movs
add
mov
inc
sbb
add
lea
mov
aad
loop
in
shl
dec
sub
daa
out
je
cmp
add
xor
or
lods
dec
aaa
out
adc
pop
pop
dec
popf
and
and
rcr
push
add
add
push
and
jns
dec
jp
fdiv
jno
xchg
mov
mov
call
repnz
add
mov
lahf
vpsrad
jbe
and
and
add
lods
push
cli
cs
and
add
add
movs
push
inc
and
jp
(bad)
outs
xor
mov
push
loope
ror
mov
and
add
add
xchg
mov
and
jge
inc
mov
push
sbb
xchg
stc
(bad)
test
add
ret
cmp
cli
add
shr
ret
mov
test
seto
cmp
inc
mov
add
add
(bad)
dec
mov
cmps
cdq
pop
and
cli
pop
pop
jl
jns
pusha
and
add
add
retf
and
je
je
dec
push
out
ret
or
mov
dec
data16
pop
sbb
add
add
stos
jbe
mov
pusha
out
je
adc
pushf
or
add
dec
das
(bad)
xor
cmps
vpmaddwd
mov
add
mov
or
jmp
mov
iret
pop
pop
dec
mov
xor
fcomp
rcr
push
adc
add
jmp
pop
inc
mov
sub
cmp
popa
push
xor
ss
inc
les
add
add
inc
jl
mov
mov
repnz
test
fs
sbb
xor
push
push
stos
adc
add
push
pop
fcom
push
push
push
jnp
bnd
mov
sub
call
mov
cs
add
add
ss
sbb
lock
div
pop
ror
and
(bad)
cmp
or
dec
pop
mov
push
arpl
rcr
enter
cmp
add
sbb
xchg
movs
add
add
sbb
cli
xlat
das
pop
arpl
stc
pop
jmp
pop
push
(bad)
xor
fcomp
in
inc
dec
cmp
add
add
add
ret
push
push
rcl
push
lea
xor
leave
mov
icebp
jle
(bad)
inc
inc
jb
jnp
dec
rcl
add
add
js
jo
push
add
push
pop
or
or
bnd
cmp
in
inc
iret
stos
sub
iret
jl
pop
push
xor
add
add
mov
ret
into
shl
sub
mov
xchg
ret
shr
jbe
push
add
add
pop
stos
add
cs
ss
or
cmp
and
hlt
mov
movs
adc
rol
dec
jbe
bound
adc
cmps
lock
out
push
inc
adc
mov
pusha
or
dec
push
add
add
add
ret
leave
jle
pop
cmp
pusha
add
xor
pop
or
aam
nop
push
inc
ret
add
add
inc
sub
outs
adc
push
push
or
retf
mov
adc
push
mov
std
test
add
add
push
sti
test
adc
adc
movs
or
arpl
and
test
add
add
add
neg
outs
in
push
add
adc
je
and
into
jl
neg
mov
dec
mov
sbb
add
xchg
push
loop
inc
lea
sar
sub
js
sahf
cmp
xor
sbb
add
add
retf
adc
scas
and
mov
shl
mov
push
ja
dec
arpl
sbb
add
add
mov
es
pop
test
mov
shl
mov
mov
je
add
add
add
mov
sbb
(bad)
jp
push
fs
repnz
pop
add
add
nop
pop
mov
(bad)
jle
jns
jnp
push
push
repz
repz
inc
pusha
adc
cmp
add
mov
add
add
jmp
xchg
push
cmp
call
push
inc
enter
and
mov
test
mov
cwde
int
and
add
add
xchg
pop
leave
lods
sbb
or
rcr
or
and
aam
and
push
enter
shl
sub
xchg
add
inc
les
jmp
xchg
push
push
cs
je
add
add
push
sub
clc
sub
pop
push
iret
neg
xor
dec
mov
fmul
stc
sub
add
add
dec
adc
cli
hlt
mov
shl
adc
adc
bound
xor
aaa
cmps
int3
test
int
add
add
add
shr
jb
jge
mov
cld
jmp
inc
lahf
sub
fild
add
add
lods
mov
dec
cs
leave
nop
in
push
jmp
cmp
mov
sub
aas
hlt
add
add
pop
and
sbb
push
nop
cld
lahf
sbb
adc
adc
(bad)
push
or
push
data16
inc
add
add
aas
ins
stos
out
aad
rcr
push
ins
repz
jo
pop
adc
xchg
adc
mov
nop/reserved
add
add
push
or
ficom
lock
jno
pop
adc
clc
loope
pop
push
xor
xor
add
add
and
js
jg
inc
push
push
cwde
loopne
pop
and
popf
jge
sahf
push
add
add
sbb
inc
inc
sbb
sti
push
iret
adc
push
xchg
in
xor
rcr
cmps
fbld
add
add
test
(bad)
nop
or
(bad)
(bad)
in
sbb
pop
pop
mov
shl
outs
fwait
rcl
add
sub
and
adc
bound
xchg
dec
dec
fld
sbb
leave
jne
dec
and
and
add
in
dec
or
mov
jo
in
mov
mov
add
or
mov
add
add
xchg
les
and
jne
mov
mov
out
mov
fist
add
add
dec
dec
mov
outs
xchg
and
cdq
ja
cmp
lock
(bad)
rol
scas
clc
mov
sar
aaa
fsubr
sti
mov
fimul
hlt
inc
sbb
cmc
cmp
xchg
out
cmp
enter
add
test
xchg
cmp
fnstenv
cmp
dec
sub
add
add
add
dec
push
inc
mov
jae
jmp
push
inc
xor
or
add
add
test
push
mov
mov
sub
jb
xchg
pop
adc
mov
loop
mov
add
add
xor
cmp
mov
fisttp
jmp
push
dec
jp
inc
cli
mov
mov
add
add
push
jmp
mov
push
in
and
adc
out
or
sbb
and
xchg
and
add
add
cwde
aas
push
adc
loope
int3
jmp
sbb
popf
inc
out
(bad)
fmul
xor
add
add
jge
add
inc
pop
jg
adc
mov
pop
jne
sub
dec
test
add
add
pop
inc
(bad)
leave
gs
sti
popf
mov
shr
leave
or
dec
dec
clc
ds
cld
scas
std
in
std
fidivr
int
add
add
lea
sub
pushf
(bad)
xor
cmp
add
cmps
movs
push
push
add
loop
adc
dec
leave
or
ins
sbb
das
mov
add
es
cli
fild
or
loope
push
mov
add
pop
and
cmps
daa
push
sbb
mov
add
add
or
leave
in
cwde
jnp
push
sbb
(bad)
jge
push
popf
inc
xchg
fistp
pusha
mov
add
mov
push
nop
ret
pop
bound
sar
test
pop
adc
cmps
rcl
cmp
jecxz
xlat
clc
mov
clc
cmp
scas
sub
nop
nop
popf
xchg
adc
or
sar
pop
sub
mov
mul
mov
add
jo
dec
aad
dec
inc
je
in
or
test
jne
sbb
jo
cdq
and
pop
ins
mov
add
add
adc
test
pop
aad
shl
mov
xor
adc
stos
mov
dec
jmp
add
add
sar
pop
nop
inc
add
dec
push
movs
push
mov
mov
jo
inc
cpuid
rcr
adc
add
add
shl
ret
imul
cli
inc
push
push
adc
and
sar
or
push
mov
add
add
shl
ror
push
rcr
(bad)
sub
or
fs
sub
iret
add
add
repz
adc
dec
sbb
inc
enter
inc
sbb
aad
xchg
inc
adc
fcom
clc
movzx
lods
neg
sbb
xor
fldcw
adc
out
sbb
push
mov
loopne
add
add
sbb
clc
adc
sub
xor
cmp
inc
push
cs
sti
add
add
xor
into
aaa
add
test
push
xchg
cmps
sub
mov
sbb
frstor
mov
pop
add
add
lods
push
fmul
out
or
jle
add
cmp
adc
stos
add
add
cmps
mov
jmp
or
jns
fcmovne
adc
mov
pop
push
adc
inc
and
cmp
adc
add
add
stos
rcr
xchg
jg
pusha
imul
das
call
push
xor
mov
xor
add
add
sbb
scas
inc
das
lock
mov
cmp
dec
call
cli
add
add
pop
xchg
pop
jns
pop
xlat
jne
lea
sbb
mov
push
mov
inc
icebp
pop
jne
sub
cs
xor
cmp
mov
push
or
in
fs
mov
mov
enter
and
jns
es
sub
push
or
xor
test
add
pusha
inc
add
add
push
(bad)
outs
inc
sbb
jl
movs
xchg
fidiv
add
jbe
je
jne
mov
add
bound
call
mov
sbb
adc
mov
jae
cmp
int
aas
push
mov
fwait
mov
xchg
fwait
in
mov
xchg
aaa
call
xor
sub
add
mov
mov
adc
pop
mov
pusha
or
cmp
add
add
sbb
inc
push
scas
lods
fwait
dec
jb
jno
dec
dec
rcr
rcl
jo
mov
test
enter
or
add
add
pushf
cmp
mov
mov
jmp
cmp
add
scas
push
adc
shl
out
mov
test
ret
jno
push
and
outs
add
or
aas
add
add
pop
arpl
retf
dec
pop
sbb
ja
aaa
and
cmp
jae
fnstsw
(bad)
in
imul
retf
push
ret
test
jecxz
pop
adc
div
inc
pop
dec
movs
mov
add
add
aaa
aas
or
sbb
xchg
fdiv
test
jo
mov
arpl
cmp
or
mov
dec
inc
mov
ret
jle
xchg
loope
inc
lds
pop
jne
sub
(bad)
jb
add
add
mov
loop
pop
dec
push
pusha
les
test
clc
mov
in
sbb
and
add
push
mov
adc
inc
or
inc
or
inc
mov
sar
loopne
push
pop
mov
aaa
xchg
mov
add
popf
ret
retf
outs
xor
cmp
sbb
clc
dec
jae
std
push
mov
sti
xor
and
lds
or
test
sti
mov
mov
in
dec
add
xor
adc
jmp
sar
add
dec
retf
loopne
inc
sbb
inc
or
push
inc
adc
fist
xor
push
add
add
repnz
mov
mov
pop
loopne
xor
cmp
and
sar
jbe
add
add
xor
and
cmp
cmp
jb
movs
jae
js
mov
fucomip
add
add
fldcw
jl
adc
xchg
(bad)
sub
test
xchg
push
dec
ret
rcl
inc
aam
mov
mov
or
jnp
js
push
call
div
dec
or
jg
sbb
or
mov
add
add
add
arpl
jecxz
adc
sub
pop
sbb
inc
jno
inc
adc
sti
movs
add
add
ds
adc
mov
call
adc
dec
ds
adc
sbb
add
add
dec
adc
retf
dec
xchg
push
iret
sbb
xchg
fwait
adc
inc
pop
inc
stc
jge
and
add
add
adc
xor
ret
dec
pop
or
out
sub
dec
and
inc
add
add
add
jg
iret
push
xor
das
out
xor
push
lock
hlt
and
add
jo
leave
inc
fdiv
add
add
test
mov
fidiv
adc
push
sbb
ret
mov
push
sub
push
xchg
and
add
dec
popa
add
ret
push
lock
or
add
int3
pop
bound
mov
int3
sub
add
add
jle
sbb
sbb
cmp
xor
mov
sbb
rcl
add
pop
movs
dec
mov
add
add
test
leave
xchg
pop
adc
or
sub
shl
and
dec
sub
add
sub
add
jne
mov
inc
push
inc
mov
les
mov
fs
add
add
js
mov
push
and
or
xor
imul
pop
js
mov
sbb
xlat
(bad)
jo
add
add
not
jge
adc
stc
imul
add
je
push
call
push
setne
or
add
add
into
rcr
out
xor
inc
jnp
movs
xlat
xor
mov
sub
push
push
dec
add
add
test
dec
ja
mov
push
push
xchg
push
push
or
dec
xchg
or
dec
push
xchg
xchg
cmp
or
ds
add
add
inc
popf
cmc
lahf
mov
fcmovnbe
out
idiv
mov
cmp
mov
add
pop
jle
and
aas
lahf
push
adc
lods
cli
dec
aam
lods
movs
mov
cmp
hlt
mov
jne
push
imul
add
add
aam
add
adc
pop
aad
sar
test
sbb
adc
(bad)
add
add
lahf
adc
leave
aad
(bad)
or
xor
or
jle
dec
call
sbb
add
add
rcl
ja
jmp
adc
push
aaa
out
aam
lods
jmp
add
add
mov
cs
mov
mov
jbe
cmc
cmp
and
imul
es
push
add
add
dec
dec
xor
add
mov
ret
pop
out
push
loopne
enter
fldenv
mov
jge
mov
add
cmp
ds
ds
fst
pusha
je
sbb
push
add
add
fdivr
sahf
aas
xchg
jae
mov
xchg
pusha
dec
adc
les
(bad)
test
add
add
xor
cmp
jae
pop
seto
adc
mov
jnp
mov
adc
ds
add
add
je
imul
push
sar
cdq
jp
ins
sbb
sub
pop
inc
push
pop
sbb
popf
pop
xchg
pop
add
add
and
into
or
xchg
adc
adc
adc
pop
(bad)
jne
and
dec
cmp
dec
add
mov
xchg
popa
aas
dec
jmp
push
xchg
jecxz
repnz
and
fild
mov
add
add
add
push
fstp
and
lea
add
add
retf
cdq
push
xor
shl
icebp
mov
jae
add
add
movs
leave
hlt
stos
rol
mov
cmc
push
mov
jo
adc
jecxz
loope
or
add
add
sbb
push
and
inc
call
into
add
jp
jle
jmp
mov
add
push
and
popf
push
sbb
cld
call
and
mov
movs
xor
fs
inc
adc
sub
xor
mov
sub
shl
pop
test
or
movs
add
add
push
push
sub
stc
and
xchg
pop
xor
jmp
fdivr
rcl
sbb
add
xchg
add
mov
int3
fwait
add
call
mov
stos
and
imul
sar
mov
push
rol
add
call
int3
stos
call
jns
sbb
shl
jmp
add
add
aam
pop
call
popf
loopne
inc
pop
jb
fldcw
jne
jecxz
ret
add
add
add
sbb
adc
push
add
or
mov
adc
mov
xchg
call
or
add
add
out
pop
jmp
stos
test
jmp
loop
jne
ffree
inc
add
pusha
test
pop
cmp
emms
add
add
pop
push
jne
add
or
inc
cmp
cmp
pop
add
pop
push
add
add
add
mov
cmp
jle
cmps
mov
pop
les
ja
xor
or
mov
(bad)
xchg
nop
dec
mov
sub
push
xchg
sub
jp
sbb
ds
mov
or
add
sub
pop
or
dec
mov
adc
push
push
xor
mov
shr
and
das
sbb
cmp
mov
add
add
pop
jge
mov
test
test
popf
sbb
(bad)
jae
rsqrtps
jno
push
add
add
or
cmp
xchg
adc
in
cmp
js
xchg
jns
and
inc
pop
daa
add
add
popf
adc
pushf
cmp
add
mov
jne
pop
icebp
aaa
das
pop
sub
adc
add
add
inc
fld
ficom
or
inc
sbb
xor
cmp
inc
enter
add
pop
xor
mov
mov
jg
aam
in
adc
gs
ds
repnz
add
add
inc
inc
shl
inc
add
push
out
jno
push
mov
mov
dec
add
xchg
mov
push
mov
xchg
xor
(bad)
jmp
lock
mov
adc
dec
pop
adc
push
or
iret
je
pop
add
add
out
popf
add
mov
enter
inc
cmp
jne
xor
out
fisub
pop
mov
add
add
push
mov
popa
add
imul
es
mov
xor
ret
adc
test
je
ins
mov
jne
enter
mov
movs
and
sti
repnz
adc
adc
dec
add
add
lock
out
jle
mov
xchg
dec
pop
(bad)
inc
(bad)
mov
cmps
fld
cld
popf
and
add
add
inc
outs
ror
jb
or
dec
jae
xlat
retf
int3
or
lea
aad
sub
out
lar
add
add
sub
adc
adc
mov
in
adc
and
pop
adc
push
sub
dec
ret
int3
je
push
push
add
add
jne
push
or
loope
stos
cmp
jbe
ret
mov
inc
sub
dec
ret
push
daa
jecxz
lds
imul
and
dec
or
inc
adc
inc
in
and
ins
shl
xor
push
rcl
js
push
imul
(bad)
fadd
jnp
push
cwde
sbb
push
cmp
lock
add
push
not
stos
lahf
inc
xchg
lock
cmp
or
push
push
call
jmp
add
push
imul
mov
push
ja
cmp
ja
lea
movs
adc
and
push
push
add
xchg
add
add
fdivr
add
inc
pop
ds
mov
mov
adc
cmp
dec
cmp
add
add
call
or
dec
adc
sbb
sbb
fsubp
fcmovb
cmp
out
cmps
add
aaa
(bad)
sub
push
es
bound
add
add
movs
inc
ins
sbb
popf
xlat
pop
lods
adc
cmp
lea
test
ins
mov
add
ja
ja
ja
and
xlat
mov
add
fcomi
nop
pusha
mov
pop
sub
add
add
xor
lahf
je
(bad)
mov
adc
jno
push
adc
rcr
mov
push
int
fisttp
add
add
cmp
or
push
push
(bad)
dec
xor
xchg
push
mov
inc
inc
sbb
jo
sub
adc
lea
add
or
call
and
add
add
add
shl
xor
add
sub
push
dec
jmp
icebp
pusha
(bad)
fmul
imul
add
xchg
jo
inc
fcom
push
xor
pop
in
in
add
or
adc
cli
sbb
add
add
add
pop
mov
nop
inc
pusha
inc
push
or
(bad)
adc
add
cmps
sti
test
out
dec
call
add
dec
int3
jne
adc
scas
sbb
xchg
pop
add
jmp
sbb
pusha
stc
stc
jo
add
add
lock
add
inc
push
add
(bad)
hlt
sti
pop
mov
shl
call
sbb
loope
cli
into
jbe
add
add
cmp
enter
ja
(bad)
push
push
dec
dec
xor
adc
cmp
jbe
push
cmp
dec
mov
add
add
aaa
sbb
jnp
leave
repnz
sahf
adc
mov
ror
inc
jg
loopne
scas
fdiv
add
add
stc
jo
jo
loope
add
push
inc
xor
mov
lods
(bad)
neg
xchg
add
add
out
ror
adc
daa
std
sahf
adc
add
sub
retf
icebp
push
add
add
arpl
adc
in
or
repnz
fild
adc
cmc
test
pop
jo
add
add
jle
adc
jge
xor
push
dec
repz
jnp
adc
leave
adc
xchg
pop
lahf
sbb
add
and
test
sar
test
push
fstp
or
add
add
cli
icebp
xor
mov
mov
jns
jl
fist
retf
push
pop
xchg
or
add
sbb
inc
jno
cmp
rcl
cmc
push
data16
mov
add
add
and
jmp
inc
mov
cmp
xchg
(bad)
push
push
cdq
jmp
sbb
add
adc
fbstp
mov
jmp
sbb
mov
sub
dec
add
or
xchg
push
cs
or
lds
mov
push
jne
push
dec
cmps
imul
xchg
xor
or
inc
test
jle
das
bound
xchg
sbb
jno
aam
mov
cdq
or
cmp
jne
sbb
add
add
pop
add
inc
inc
pop
add
add
mov
jl
and
not
cmp
gs
add
add
arpl
imul
adc
push
dec
adc
and
adc
adc
and
ror
cmc
xchg
inc
adc
jl
movs
sub
pop
sbb
mov
add
mov
and
inc
push
stos
mov
repz
dec
mov
jb
mov
dec
in
pop
pop
sti
in
jle
add
add
inc
mov
jnp
pop
jl
xor
out
jg
jae
jb
into
ror
and
add
add
retf
out
imul
out
clc
call
sub
push
push
in
jno
inc
push
ins
lock
add
loop
inc
mov
cdq
loop
ret
and
pop
or
inc
lsl
jge
call
in
sub
pop
sbb
jo
or
cmp
jg
xchg
retf
and
dec
ss
and
add
add
sbb
out
add
loopne
mov
loopne
sbb
or
inc
mov
out
dec
push
ret
rol
add
in
sbb
mov
xchg
daa
nop
(bad)
cmp
mov
dec
jmp
movs
inc
mov
add
jne
xor
test
add
nop
mov
push
and
sub
add
add
or
stos
and
mov
mov
dec
bound
adc
in
push
aad
js
add
add
mov
ret
inc
and
push
icebp
sti
jae
jns
dec
mov
fild
add
add
shl
jno
js
je
adc
cli
icebp
lock
sbb
loop
or
add
add
adc
xor
mov
add
mov
int
or
mov
in
data16
sar
add
lock
xor
push
add
inc
add
cmp
sbb
sub
adc
add
add
add
or
outs
int3
mov
rcr
loopne
mov
adc
xor
push
nop
daa
add
add
sub
mov
pop
movs
sbb
jae
dec
sar
push
xchg
mov
loopne
shl
add
add
jne
cmps
jb
mov
fisubr
adc
sahf
mov
ins
xor
cmps
add
mov
add
add
dec
push
mov
mov
push
das
popf
mov
fcmovne
pusha
repnz
pop
mov
stos
add
add
ja
out
xor
cmp
sbb
jbe
dec
inc
or
xor
ror
cmp
jno
pop
add
add
mov
inc
sub
inc
add
imul
add
cli
(bad)
jecxz
das
push
in
mov
add
imul
add
add
stc
mov
add
(bad)
rol
mov
int3
push
inc
xor
fwait
cld
or
ret
je
push
sar
leave
push
add
add
add
cmps
mov
xor
and
push
xor
xor
adc
mov
iret
adc
cmp
pushf
daa
pop
fld
add
add
add
movsx
dec
mov
dec
add
push
setne
mov
jns
movs
ins
dec
loopne
dec
add
add
and
out
mov
ffreep
mov
or
icebp
das
jge
adc
fist
popf
add
add
adc
cmc
mov
popf
push
and
outs
fist
push
mov
mov
cwde
push
or
lock
add
add
sub
shl
test
sub
cmp
cmp
jae
mov
inc
or
cmp
jne
inc
xor
pop
add
add
(bad)
xlat
or
retf
je
arpl
sub
sub
pop
es
lea
sbb
add
add
push
or
dec
icebp
(bad)
or
imul
cs
mov
shr
dec
adc
and
add
add
ret
xchg
jp
jecxz
adc
cmc
sbb
jmp
shl
(bad)
aad
add
add
push
movs
pop
ins
shl
jne
std
test
inc
add
cs
sub
xchg
or
add
add
inc
mov
xchg
mov
hlt
jmp
jmp
push
adc
in
add
add
and
push
and
xor
push
xor
dec
jmp
ds
je
dec
push
test
test
jg
add
add
cmp
xlat
xchg
mov
das
arpl
xor
mov
movs
div
push
xchg
adc
out
rol
add
in
ja
dec
jb
in
cmp
daa
jae
mov
dec
pop
mov
imul
inc
loope
pushf
sub
ret
cmp
push
xchg
clc
or
xchg
(bad)
jmp
jmp
fsubr
add
add
inc
inc
fsubr
xchg
pop
xor
push
into
jp
or
(bad)
ret
inc
cli
clc
pusha
adc
cmp
jbe
sub
add
add
dec
inc
sbb
sti
das
daa
jmp
cmp
and
add
add
lea
(bad)
in
cld
sub
ret
popa
and
or
push
sub
ss
sub
add
add
das
retf
outs
leave
jmp
sbb
jb
mov
faddp
(bad)
into
push
movs
iret
push
clc
cwde
xchg
rcl
mov
add
add
lahf
jp
call
lock
push
sbb
(bad)
or
add
int3
jp
jbe
test
cmp
add
dec
cli
rcl
push
jl
xchg
cmps
xor
ja
js
call
(bad)
push
push
add
add
xchg
cmp
inc
popa
mov
daa
pop
push
inc
adc
and
adc
or
outs
std
rcl
jb
inc
add
add
dec
rol
lods
repz
adc
aam
sub
aam
mov
add
push
adc
mov
int
push
js
ins
repz
icebp
or
and
add
jno
icebp
jno
(bad)
mov
ss
cmps
add
mov
adc
jg
fwait
xchg
retf
test
stos
sub
in
push
cmp
test
and
or
rol
add
test
jnp
fld
xchg
aas
sbb
lods
lds
gs
pop
jmp
in
mov
mov
pusha
enter
jg
xor
xor
stos
adc
add
add
ja
int
jle
push
ret
mov
jno
sub
xchg
cmp
sbb
inc
sub
push
add
add
sub
(bad)
pop
sub
push
dec
ror
push
jnp
popf
loopne
dec
mov
rcl
lds
and
xchg
add
add
add
xor
inc
stos
adc
shr
xchg
std
jp
loopne
or
scas
loop
mov
aam
cli
mov
add
or
xchg
jno
push
inc
add
cmp
mov
and
add
add
xchg
scas
enter
push
jle
and
pop
or
(bad)
jl
inc
loope
add
jne
rcl
add
sub
cmc
not
pop
into
loopne
imul
je
inc
xchg
xchg
mov
add
push
out
dec
jnp
mov
(bad)
mov
jne
rcl
inc
jg
retf
jb
add
add
cmps
inc
or
cmps
or
push
ins
pop
stos
inc
out
(bad)
fnsave
in
pop
lods
cmp
in
add
add
test
and
clc
mov
in
and
aad
add
sub
jne
push
out
add
add
cmp
les
jmp
add
inc
sub
rcr
push
push
jle
jmp
lock
add
out
adc
mov
pop
push
mov
and
mov
out
or
add
add
loop
clc
lock
lahf
and
jno
fs
pop
sub
div
push
and
add
and
and
push
push
dec
jo
es
inc
sub
out
inc
mov
adc
movs
retf
add
je
stc
add
mov
push
mov
jl
test
mov
push
pop
ret
lods
add
add
sub
enter
push
mov
pop
or
mov
ret
loope
mov
mov
mov
or
push
xchg
add
add
and
jne
or
popf
mov
int3
mov
and
lock
add
inc
adc
push
popf
ret
adc
and
(bad)
inc
adc
cld
xchg
mov
xchg
adc
movs
inc
xchg
adc
enter
sub
sbb
mov
jmp
push
sbb
add
add
mov
sbb
sub
cld
test
mov
aam
push
loope
test
mov
add
adc
jmp
and
add
mov
pop
or
test
and
lods
inc
test
test
add
add
push
(bad)
inc
and
jne
cld
mov
stc
nop
ds
shl
jg
daa
clc
movs
dec
add
add
inc
jmp
les
dec
dec
jle
ds
dec
pop
imul
adc
mov
dec
pop
(bad)
bnd
add
add
cmp
and
lock
cmps
jg
ins
add
call
std
call
and
cwde
xor
sub
jge
and
lock
sbb
enter
xor
or
clc
add
add
jo
pop
xor
nop
ss
sbb
in
jg
cmp
call
cmp
es
fldcw
or
cmp
rol
les
inc
mov
add
push
xchg
jns
push
fistp
aam
jo
loope
sbb
enter
call
loopne
pop
inc
cmp
and
add
add
pop
ja
fs
cmp
jo
lock
fisttp
dec
mov
iret
daa
lock
add
add
je
bound
and
mov
loop
fisttp
sub
add
retf
call
add
cli
scas
add
add
and
clc
xlat
adc
data16
das
sub
inc
dec
sbb
data16
pop
shl
add
dec
push
int3
loopne
jl
dec
jle
enter
cmp
adc
sub
mov
stc
outs
add
add
retf
sbb
loopne
clc
retf
mov
sbb
pop
jge
xlat
sbb
mov
adc
add
add
(bad)
jmp
imul
clc
pop
xor
sti
popf
ret
xor
(bad)
in
inc
data16
add
add
add
inc
popa
je
adc
jb
inc
mov
pop
push
xor
push
jne
xor
stos
xchg
push
sbb
add
add
sbb
push
shl
mov
cs
das
fnstsw
push
out
jmp
sti
test
xchg
ja
mov
add
add
imul
clc
sbb
out
das
pusha
add
mov
frstor
rol
popf
iret
pusha
add
add
jmp
daa
fs
or
add
mov
push
pop
repz
add
mov
loop
cdq
add
add
(bad)
cdq
adc
jmp
jbe
mov
fs
jbe
pop
in
hlt
xor
(bad)
sbb
add
add
mov
adc
or
in
push
call
push
xchg
push
mov
add
add
sti
popf
aam
retf
xor
aaa
cli
pop
stos
outs
inc
pop
(bad)
add
fist
sbb
dec
add
add
xor
daa
rcr
mov
stos
jmp
sub
xor
(bad)
ret
jo
clc
fiadd
add
add
je
fsubr
mov
stos
sub
stos
xchg
outs
inc
pop
mov
nop
or
add
add
adc
in
icebp
xor
adc
mov
das
push
rol
(bad)
cmp
xchg
xchg
pop
add
in
cmp
mov
push
fnstcw
hlt
jbe
in
adc
shl
push
fwait
sbb
(bad)
sub
add
add
pop
or
and
cmp
jecxz
pusha
imul
je
mov
pusha
pop
inc
add
add
sti
adc
cmp
hlt
lea
push
icebp
sbb
mov
js
adc
push
sub
add
add
dec
cli
push
and
jl
gs
sbb
pop
mov
jo
adc
cld
ins
clc
ja
cmp
add
add
push
pop
shr
jnp
icebp
sub
dec
pop
push
ret
(bad)
movs
mov
add
add
hlt
mov
xor
sub
sub
and
and
and
and
add
add
push
lea
jl
fcom
jmp
sar
fisttp
mov
add
add
cmps
fbld
movs
or
adc
ror
mov
test
jecxz
mov
mov
xlat
add
add
push
outs
shl
shl
and
or
push
pop
fs
ins
lods
dec
jb
and
adc
add
add
xchg
add
xchg
mov
jae
lods
stc
enter
int
mov
in
mov
leave
(bad)
sub
jmp
icebp
in
mov
push
jns
xor
loope
and
inc
sbb
vinsertf64x2
les
add
add
and
lock
jb
add
adc
ret
and
lahf
(bad)
imul
jmp
stos
jne
jg
add
add
cmp
lea
mov
sbb
add
pop
stos
mov
rcr
jmp
mov
inc
add
add
add
(bad)
popa
sar
jae
lds
jo
mov
push
push
dec
or
inc
add
add
sbb
out
xchg
sbb
or
or
pop
sub
xor
retf
add
add
sbb
cmp
sub
inc
mov
adc
mov
or
pop
adc
add
add
test
or
mov
xlat
out
leave
or
pop
xchg
and
bound
int
mov
lock
add
add
and
adc
jmp
pop
ret
arpl
dec
or
es
and
les
add
add
aam
dec
call
loopne
mov
ror
mov
add
and
add
push
mov
sub
cli
retf
or
test
add
and
test
(bad)
xor
push
pop
cli
cmp
pop
cmp
dec
jmp
push
inc
loope
sar
and
retf
add
add
mov
and
jecxz
mov
mov
movs
arpl
mov
add
add
je
les
loopne
mov
in
(bad)
mov
adc
das
push
lock
std
add
add
fiadd
lea
scas
loop
cdq
sbb
popf
cld
pop
push
inc
loopne
in
mov
xchg
das
scas
jbe
add
add
mov
jnp
inc
xor
mov
lods
ror
aad
push
call
lock
add
add
fcomp
adc
xchg
pop
jbe
and
add
sub
ja
jg
pop
add
add
out
loopne
ds
idiv
push
ss
mov
dec
je
jp
sub
mov
inc
nop
xchg
fwait
add
add
and
call
std
ja
and
push
pop
fild
and
imul
std
dec
nop
add
add
(bad)
push
movs
xchg
in
movs
jns
sub
das
icebp
cmp
sbb
adc
mov
lock
pop
add
add
call
push
leave
sub
dec
fild
and
xor
in
mul
jg
and
loope
add
add
sub
lahf
dec
and
cwde
cmps
ja
loop
jl
push
and
inc
enter
mov
add
and
add
add
stc
retf
pop
adc
retf
jg
mov
and
in
and
js
push
ins
xchg
jp
test
push
imul
add
add
fadd
add
sbb
in
or
add
mov
rol
push
dec
rcr
sbb
add
add
shl
pop
cmps
test
push
cmp
add
sub
mov
adc
xchg
xor
sti
int3
add
add
xor
xchg
mov
adc
push
sub
cmp
test
ror
push
xchg
popa
sub
add
add
mov
xchg
clc
scas
out
dec
lods
jge
pop
hlt
iret
ror
xchg
repz
cmp
adc
add
add
shl
dec
enter
add
ficom
cmp
jnp
push
add
mov
mov
add
add
adc
adc
mov
jnp
retf
mov
add
add
dec
or
mov
(bad)
jb
je
adc
push
mov
push
xchg
jle
sub
add
sbb
jne
push
xor
cmp
addr16
ja
jne
(bad)
sub
add
add
shr
js
sub
or
inc
dec
lods
jge
push
dec
push
dec
gs
ins
loop
sbb
add
add
mov
retf
dec
out
test
(bad)
sub
add
xchg
imul
jg
add
add
inc
sbb
rol
mov
dec
push
push
jbe
in
cmp
out
adc
xor
mov
jg
mov
sbb
shr
dec
sbb
xor
push
sub
fsubr
daa
inc
or
jg
and
and
aam
shl
stc
lods
mov
in
loopne
pusha
aas
dec
jmp
mov
add
jno
arpl
stos
cmp
adc
adc
cdq
and
pop
push
stc
or
lods
sbb
pop
ins
add
add
cld
mov
cwde
sbb
mov
dec
xor
cmp
test
add
add
xchg
mov
sub
or
push
and
add
cmp
cmp
push
outs
add
add
mov
cdq
movs
popa
les
lock
jo
pop
xor
sub
or
lods
xor
add
add
push
push
and
jnp
cmp
xlat
push
aaa
loope
test
je
cmp
rol
dec
(bad)
inc
sub
pop
inc
je
mov
cli
shl
lds
mov
jno
add
add
popf
adc
call
push
push
(bad)
xor
mov
jmp
fimul
stos
fadd
add
add
jle
jno
outs
sub
retf
adc
bnd
(bad)
into
adc
sti
mov
lods
arpl
add
add
ins
retf
adc
sbb
aas
bound
sub
mov
ficom
xlat
lods
int
scas
outs
ror
add
jnp
fisttp
sub
stos
lods
jae
xchg
mov
mov
or
jbe
sub
ins
loopne
mov
out
add
add
(bad)
xchg
es
cmp
pop
cwde
les
or
and
aaa
sar
mov
pop
int3
sub
add
add
into
movs
and
pop
pop
dec
push
lahf
in
jge
xchg
adc
aad
mov
fisub
cmps
sub
add
add
mov
xchg
pop
das
pop
das
or
test
test
and
inc
push
les
add
add
sub
loope
push
sub
or
push
mov
ja
mov
jp
adc
add
add
fstp
stos
jle
pop
jmp
add
or
sbb
add
add
add
call
stc
xchg
movs
inc
adc
pop
xor
jne
xchg
imul
add
lods
repnz
add
dec
push
fiadd
fsub
pop
and
jl
ficom
and
mov
add
add
lods
add
call
scas
hlt
iret
or
mov
push
push
and
add
and
loopne
mov
add
add
in
mov
fsub
or
pop
mov
jge
cli
daa
std
movs
xor
into
test
add
add
je
mov
push
repnz
outs
rol
and
stc
pop
or
cmps
pop
pop
jnp
mov
add
add
push
cmp
bound
sbb
and
sbb
(bad)
aam
sub
cmp
jne
add
add
fs
and
and
adc
shl
mov
(bad)
fwait
mov
adc
fstp
push
add
add
dec
sbb
in
and
lea
mov
out
xor
or
imul
out
add
add
pop
std
sbb
cmp
sbb
mov
movs
ja
(bad)
into
mov
mov
add
add
xor
cmp
cmp
xchg
lock
test
clc
test
sti
dec
data16
mov
cmp
ins
and
add
rcr
sub
xor
add
dec
sbb
or
push
push
pushf
sbb
add
add
adc
sub
repnz
mov
enter
adc
mov
dec
mov
fadd
syscall
stos
iret
inc
les
add
add
dec
retf
fbld
icebp
aaa
add
test
lods
aad
pop
mov
add
in
or
add
add
push
cmp
or
xchg
inc
repz
cdq
out
push
in
push
xor
mov
cmp
in
inc
rol
add
add
cmps
das
fcom
or
inc
mov
daa
call
add
pop
jnp
pop
and
add
add
pop
mov
daa
test
loope
cmp
(bad)
adc
inc
enter
int3
and
mov
add
add
jge
push
jbe
or
lods
stc
mov
or
imul
clc
in
cs
jl
out
inc
pusha
add
add
in
or
push
rol
aam
cs
jbe
shr
iret
pusha
leave
rcl
xor
not
xchg
mov
add
adc
xor
repnz
aaa
cmps
dec
sub
cmp
add
sbb
push
add
push
jnp
aam
inc
push
sub
dec
scas
dec
call
ret
push
neg
push
popf
add
add
adc
cmp
jmp
gs
stos
movs
call
pushf
frstor
add
add
aaa
dec
dec
add
push
pop
into
sbb
lods
adc
xchg
out
das
popa
outs
add
test
and
add
sub
test
(bad)
std
xor
jl
cs
or
pop
dec
hlt
and
adc
mov
and
add
add
movs
stc
sti
inc
and
mov
or
(bad)
push
mov
push
add
add
add
int
dec
push
mov
adc
add
lahf
ret
jnp
add
add
lods
(bad)
add
jmp
or
pop
and
nop
adc
or
mov
adc
add
xor
dec
or
and
pop
or
add
add
add
add
add
add
add
pop
or
push
ror
add
mov
jne
adc
jp
cli
mov
xchg
add
add
xchg
pop
nop
xchg
jae
ins
and
inc
(bad)
adc
gs
bound
dec
mov
add
jne
adc
pop
jmp
pop
pop
xchg
adc
outs
dec
sbb
loope
cs
dec
add
add
mov
and
loop
mov
imul
imul
inc
sub
(bad)
int
add
add
mov
dec
inc
push
inc
or
pop
and
adc
mov
in
xchg
sbb
add
add
jo
pop
bound
js
add
dec
sub
add
test
xor
aas
jne
add
add
ret
jnp
fwait
mov
inc
adc
inc
or
hlt
mov
and
jne
fs
add
add
push
pop
push
and
push
cmp
push
pop
imul
push
pop
add
iret
or
stos
add
add
xor
imul
sub
push
xor
add
mov
test
pop
dec
rcl
jg
add
add
push
mov
xchg
and
pop
add
cmp
jl
sar
jle
sub
adc
test
mov
cmp
popa
add
add
test
add
add
push
jmp
mov
stc
jmp
sbb
xchg
inc
das
push
in
adc
add
add
inc
add
or
cmps
stos
and
sbb
rol
call
hlt
pop
hlt
dec
add
add
inc
inc
sbb
and
clc
cmp
pop
sub
ret
pop
stos
cmp
dec
loopne
push
jmp
mov
mov
adc
mov
call
loope
and
mov
jp
add
add
inc
mov
les
inc
(bad)
cmp
pop
jae
rcl
jo
jne
xor
add
cmp
inc
sub
(bad)
mov
or
mov
inc
imul
add
add
add
pop
mov
pop
out
xor
push
lahf
and
nop
or
dec
xor
les
push
ret
xchg
lock
add
pop
cdq
adc
popf
push
push
imul
or
inc
fwait
jecxz
inc
mov
push
xchg
mov
push
push
adc
add
add
mov
xor
or
mov
div
je
sbb
ja
or
push
sbb
add
add
stc
sub
cmps
iret
and
inc
add
shl
jmp
mov
xor
add
add
mov
sti
(bad)
adc
jb
pop
push
ja
inc
and
xor
or
add
cmp
add
add
jae
adc
pushf
pop
lea
or
mov
or
popa
dec
cmp
jo
std
test
cmp
add
add
cmp
test
mov
fcom
sub
mov
mov
nop
movs
add
add
loop
xor
push
retf
or
add
adc
pop
mov
add
add
add
call
push
movs
addr16
push
cmp
jns
(bad)
popa
adc
cwde
push
(bad)
lock
mov
sub
push
loop
push
mov
icebp
enter
mov
and
repnz
mov
add
add
retf
call
ja
mov
lods
lea
add
movs
xchg
fsub
out
xchg
stos
sar
dec
imul
lock
xchg
cli
lods
or
add
lods
xor
sub
sbb
add
add
add
lock
(bad)
mov
adc
cld
push
call
div
add
cmp
add
add
jne
dec
rol
or
xor
cmp
cmp
dec
pop
ss
cmp
jecxz
test
add
add
inc
pop
sub
adc
dec
push
push
daa
mov
imul
ret
jne
div
ret
movs
push
adc
add
add
pop
cwde
sub
cmp
arpl
adc
inc
inc
push
pop
cwde
add
sub
add
add
or
and
dec
inc
dec
pop
mov
dec
dec
pop
adc
xor
add
add
pop
mov
ds
mov
shl
rcl
lock
inc
adc
leave
int3
mov
das
jle
dec
iret
adc
inc
or
inc
mov
ret
jne
pop
mov
sbb
test
push
sahf
fst
add
add
frstor
aam
mov
or
jne
ficomp
int
inc
leave
sbb
add
fld
xchg
std
test
(bad)
mov
xchg
pop
adc
outs
retf
add
mov
add
and
cmp
pop
dec
je
cmp
jne
and
or
stos
xchg
test
sub
daa
add
add
into
je
jno
mov
or
mov
cmp
add
lock
mov
inc
xchg
mov
repnz
(bad)
jmp
pop
loopne
cmp
push
jae
push
mov
push
or
xchg
aam
adc
add
(bad)
sub
ret
xor
sbb
lahf
jne
xor
loop
(bad)
dec
add
popf
inc
add
jge
sub
mov
(bad)
out
dec
inc
and
xor
push
add
add
pop
push
nop
add
iret
mov
ror
enter
or
inc
call
mov
add
add
pop
sbb
lahf
push
and
in
les
push
out
imul
jecxz
lods
gs
retf
add
add
xlat
mov
pop
test
jmp
or
sbb
jecxz
inc
out
sar
add
dec
cmp
lods
push
inc
lock
out
cli
sub
or
retf
push
sbb
push
sbb
add
add
and
retf
and
out
push
sub
xor
outs
mov
ror
add
retf
cmp
add
aas
gs
int3
jle
mov
es
cwde
mov
jmp
xchg
sbb
sbb
add
add
xor
and
pop
mov
or
xchg
or
sbb
dec
and
add
add
enter
or
pop
ja
enter
lahf
inc
mov
shl
into
repz
add
xchg
sbb
iret
retf
retf
and
loopne
inc
dec
mov
retf
and
mov
imul
add
add
das
(bad)
cld
pop
into
mov
test
or
add
dec
dec
sub
mov
add
sahf
inc
pushf
cmp
fdiv
dec
loopne
adc
adc
adc
rcr
enter
add
test
sub
sub
push
lods
les
add
popa
xchg
sbb
push
icebp
xchg
aaa
sbb
js
pop
and
ficomp
pop
dec
xor
add
dec
rcl
in
imul
aam
sbb
xchg
pusha
inc
xchg
xchg
std
mov
mov
add
add
stos
xchg
dec
in
adc
add
sub
jg
or
das
push
or
ds
add
je
dec
shl
dec
movs
fbld
push
es
xchg
outs
jne
inc
pop
daa
and
cmp
inc
add
add
xor
dec
adc
mov
(bad)
jge
dec
retf
hlt
ret
shl
mov
push
dec
loope
add
add
outs
leave
add
inc
fld
ds
test
test
in
lock
mov
jno
bound
add
ins
je
add
push
mov
stos
cmp
sbb
test
jg
mov
dec
movs
test
add
fld
pop
sub
fimul
scas
cmc
dec
push
imul
add
add
cli
test
pop
(bad)
pop
adc
fldl2e
mov
sub
dec
cmp
in
add
pusha
or
add
add
pop
lea
mov
and
and
dec
add
push
add
lock
shl
jno
rcl
stc
sub
add
int
dec
add
add
xchg
or
add
fisub
iret
icebp
pop
adc
sub
and
and
cli
sub
or
xor
enter
add
stc
test
jmp
les
ficomp
sbb
cmp
dec
dec
add
add
leave
leave
push
jne
sbb
sti
adc
add
push
sub
xchg
test
fdivr
xlat
cmps
and
add
add
add
leave
adc
sbb
addr16
mov
icebp
push
test
test
sub
ins
xor
inc
cmp
add
add
cs
pop
lods
mov
hlt
and
sbb
sub
arpl
or
xor
add
add
enter
push
jl
mov
cmp
hlt
mov
adc
and
add
add
xor
dec
xchg
test
(bad)
ror
push
add
jg
push
ret
and
jns
add
add
and
sub
fwait
mov
dec
sahf
push
mov
xchg
pop
and
out
cmp
mov
pop
mov
jae
add
add
stos
sbb
dec
mov
loope
lods
push
test
sub
adc
punpckhdq
mov
pop
xchg
mov
add
add
jbe
pop
cmc
icebp
cmp
add
aad
xor
shr
fbld
add
add
or
and
fld
nop
mov
test
push
cld
mov
repz
add
add
sti
xchg
add
mov
loopne
fwait
test
sbb
or
adc
retf
add
add
mov
repnz
aaa
les
adc
cwde
in
mov
or
cmp
push
scas
imul
cmc
or
add
add
rcl
jo
cwde
push
aaa
pop
sub
adc
ror
pop
adc
loop
add
add
push
pop
jmp
push
sbb
(bad)
ficom
mov
fimul
out
pop
sar
mov
ret
jmp
add
add
sub
xor
fwait
inc
xlat
jmp
loopne
mov
lods
push
mov
mov
jo
add
add
jle
add
es
imul
sti
outs
in
sub
pop
stos
mov
mov
mov
xor
cli
imul
add
push
adc
repnz
stos
cmp
jge
rcr
scas
shr
sub
push
xor
add
mov
push
mov
data16
adc
pop
pop
mov
hlt
(bad)
shl
pop
add
add
sub
loop
fild
daa
jecxz
and
xchg
cs
(bad)
stos
sub
in
fcom
maxps
add
add
fsub
out
push
jmp
adc
push
or
lea
push
(bad)
rol
ins
xchg
leave
fdiv
add
add
int3
dec
mov
ja
mov
int3
push
cli
pushf
ins
add
out
(bad)
shr
fadd
add
add
jns
or
out
rcr
sti
push
or
retf
mov
mov
add
add
jb
mov
cmps
jne
cdq
or
ins
div
adc
(bad)
jns
xor
lods
add
add
dec
test
push
add
jnp
sub
xchg
das
stos
cld
ja
inc
lea
add
mov
add
add
dec
jmp
push
ds
xchg
xchg
push
mov
or
jns
mov
add
add
movs
aam
fmul
inc
and
adc
fcomp
cmc
imul
mov
mov
es
bound
fld
or
xchg
adc
mov
add
adc
dec
add
add
mov
mov
mov
add
adc
sahf
loope
cld
repnz
out
push
push
stc
add
add
add
cmp
or
fiadd
test
push
nop
mov
hlt
mov
dec
nop
push
adc
add
add
xor
sub
mov
les
pop
cmp
push
in
add
jle
push
jl
and
loopne
add
add
add
jle
mov
jge
sub
jl
(bad)
jo
dec
push
dec
aaa
mov
cmp
add
add
add
lds
jle
and
mov
mov
or
sti
pop
cmp
add
add
adc
mov
pop
xchg
ret
in
cmp
je
push
pop
mov
add
inc
jne
(bad)
pusha
pop
mov
and
and
and
push
dec
or
jge
jne
add
add
test
cmp
push
pop
push
fsub
(bad)
and
repnz
add
add
inc
in
aad
mov
(bad)
mov
lea
ja
bound
mov
mov
stos
pop
mov
mov
add
(bad)
or
dec
adc
push
scas
popf
xchg
add
push
popa
adc
cmp
jo
popf
ins
(bad)
jmp
add
popa
sub
out
cmp
repnz
pop
mov
sub
cmp
sbb
mov
add
add
jle
retf
lods
and
call
push
inc
cmc
xchg
movs
es
and
stc
add
retf
add
add
lods
test
push
stos
(bad)
mov
dec
cmp
push
or
jp
mov
sbb
inc
xlat
sti
add
add
cwde
fild
mov
sbb
dec
lock
add
sub
add
add
into
les
pop
cwde
and
or
push
scas
leave
and
jb
push
and
add
add
imul
dec
in
jmp
mov
dec
jge
dec
in
and
js
mul
out
daa
pop
add
add
push
cmp
scas
pop
(bad)
sub
push
inc
adc
loope
cmp
movs
jnp
add
add
or
mov
fidivr
push
cmp
jg
std
arpl
out
add
add
cmps
ins
jg
pop
out
jo
add
std
dec
inc
mov
jg
push
jmp
js
(bad)
xor
add
add
pop
mov
mov
mov
dec
sub
mov
xchg
je
jmp
(bad)
mov
dec
inc
dec
jg
mov
data16
outs
xor
mov
jl
or
push
pop
arpl
add
add
adc
imul
fmul
xor
pop
dec
inc
aad
add
mov
dec
loopne
daa
add
add
cmp
je
push
out
dec
or
add
mov
xchg
cli
xchg
mov
jnp
push
xchg
sti
or
add
add
mov
dec
or
push
sti
movzx
dec
push
jg
sub
daa
jmp
les
jnp
inc
or
add
add
test
and
aaa
xlat
test
pop
scas
sbb
jne
mov
or
pop
rol
jmp
stos
js
adc
ret
mov
sub
or
mov
mov
mov
add
add
jecxz
fs
in
xchg
jmp
jbe
jl
inc
xchg
push
or
mov
add
pop
idiv
sub
je
add
mov
retf
sub
add
rcl
(bad)
out
cdq
test
stc
xchg
jns
rcl
jmp
stos
sub
add
add
sub
fadd
push
xchg
jle
inc
mov
jb
ins
pop
xor
mul
dec
je
or
add
add
push
jne
sub
lods
add
mov
sbb
jbe
mov
adc
mov
add
add
adc
xchg
jnp
or
sub
imul
gs
out
and
add
add
add
mov
pusha
shr
push
push
or
imul
retf
or
push
rol
add
shr
call
xchg
or
loopne
mov
jmp
add
mov
fst
xor
pop
hlt
or
add
add
jmp
punpckhbw
fcmovb
jmp
iret
mov
or
push
ret
add
xchg
out
and
add
add
les
js
mov
dec
fld
pop
mov
or
lea
mov
adc
mov
add
add
retf
mov
leave
clc
imul
or
cs
sbb
or
mov
jg
add
add
pusha
adc
shl
cmp
mov
movs
(bad)
fcom
cmp
add
nop
or
mov
inc
inc
inc
push
in
jg
push
mov
add
push
push
mov
add
add
sub
sub
test
test
inc
sbb
pop
inc
pop
call
sub
lea
add
add
loop
push
mov
xchg
pop
adc
hlt
dec
xchg
cmp
(bad)
jge
adc
cmp
add
add
pop
cmps
ficom
push
outs
xor
inc
dec
dec
imul
cmp
mov
mov
mov
push
fst
loopne
add
add
aad
adc
pop
mov
mov
stos
sub
pop
test
test
push
push
push
cli
outs
dec
xchg
mov
add
add
mov
sub
outs
mov
nop
clc
lods
mov
sub
cmp
daa
adc
add
mov
lea
add
pop
add
dec
mov
fs
mov
lea
add
add
xchg
pop
aas
mov
popf
sbb
leave
xor
ins
push
shl
fnsave
sbb
add
mov
push
add
add
add
add
add
scas
jns
mov
cmp
pop
popa
pusha
xor
inc
sub
add
add
je
mov
pop
(bad)
fisttp
jl
ds
pop
(bad)
cmp
sbb
add
add
sub
daa
mov
sub
pop
(bad)
aas
es
jnp
pop
clc
jge
mov
xor
add
add
fld
das
jne
data16
pop
push
push
mov
push
div
stos
push
and
nop
jnp
clc
scas
outs
add
add
or
dec
imul
xor
dec
jo
je
or
js
or
pop
add
push
adc
push
pop
jae
xchg
dec
and
add
add
adc
and
out
retf
adc
jne
cld
xor
pop
mov
pop
daa
js
inc
call
or
std
xor
fbstp
mov
daa
push
hlt
test
cld
pop
imul
sub
movs
add
add
inc
pop
loopne
xor
fsubrp
jge
push
dec
pop
sbb
fadd
xchg
inc
sbb
in
hlt
inc
add
inc
mov
(bad)
adc
cs
cmp
cmp
or
fucompp
pop
and
xchg
cmp
add
add
(bad)
xlat
in
pop
and
shl
dec
ss
repnz
mov
add
add
inc
and
rcl
xchg
push
test
sub
xchg
pop
inc
adc
adc
push
or
outs
add
add
adc
push
mov
adc
and
mov
inc
enter
scas
mov
test
retf
and
add
sub
push
mov
xchg
aas
push
add
xor
jns
gs
loop
xchg
mov
add
popa
dec
mov
call
mov
sar
ds
or
test
stc
mov
add
add
mov
push
pusha
shr
(bad)
push
aam
mov
sti
enter
fsubr
int
jg
mov
add
add
lea
push
jmp
inc
fs
jge
mov
pop
dec
adc
lea
add
add
xor
and
adc
xchg
fwait
mov
mov
mov
fwait
scas
mov
add
xchg
jb
and
push
push
xchg
cmps
xor
loopne
push
mov
add
add
inc
stc
dec
das
xchg
sti
hlt
mov
movs
in
iret
xor
jmp
jmp
pop
adc
stos
inc
imul
push
sti
out
in
inc
mov
icebp
adc
sbb
push
push
cmp
fmul
add
add
push
retf
icebp
push
pop
fdiv
enter
xchg
xor
retf
pop
add
add
adc
cdq
push
dec
fwait
xor
rcl
repz
hlt
loope
and
push
mov
ins
mov
xchg
shl
cmp
jmp
movs
xchg
mov
mul
jp
add
add
ficom
ror
inc
push
push
bnd
or
add
shl
xchg
cmp
xchg
(bad)
ins
imul
stos
add
add
retf
shl
xchg
cmp
nop
out
call
cmp
inc
nop
out
add
add
mov
xor
mov
mov
fwait
repnz
dec
test
scas
push
leave
mov
mov
add
add
xchg
cmp
fst
arpl
xchg
sub
shr
leave
inc
nop
and
inc
pop
jo
ficom
das
lods
add
add
aas
fs
aam
cmps
mov
jae
imul
aam
add
jmp
fstp
add
add
push
dec
aad
sti
mov
mov
aaa
sub
cmp
je
jp
mov
loope
push
jne
add
add
and
movs
jmp
mov
push
cwde
rol
pop
das
imul
scas
test
lock
sldt
add
ror
test
mov
push
mov
adc
mov
push
mov
add
add
ret
repnz
rcl
push
mov
ins
pop
sbb
arpl
(bad)
imul
add
fs
push
xchg
rcl
sbb
mov
nop
inc
fst
pop
mov
div
mov
mov
add
add
cmc
pop
mov
add
sub
xchg
movs
sbb
fstp
and
add
test
sbb
pcmpeqd
add
add
lods
mov
push
scas
lods
inc
mov
xchg
loope
sub
cmp
push
pop
push
mov
add
add
add
jne
cmc
data16
or
jp
mov
mov
nop
sbb
cmp
call
inc
add
add
push
bound
mov
in
jmp
js
icebp
sub
mov
test
add
add
cdq
cmp
test
push
(bad)
repz
aam
fs
jmp
add
add
inc
gs
dec
shr
ja
jp
adc
add
movs
mov
sti
mov
(bad)
fst
popf
cwde
mov
sar
inc
xchg
adc
xchg
add
add
add
xor
inc
sub
jae
pop
popf
out
mov
lahf
mov
mov
dec
dec
mov
add
add
mov
fnsave
mov
cs
bound
addr16
mov
add
add
pop
nop
xchg
xchg
(bad)
push
in
scas
std
sub
test
or
mov
out
pop
test
add
add
inc
outs
pop
pushf
stc
cs
push
not
or
or
add
add
or
std
push
loope
xchg
sbb
sahf
and
lahf
or
xchg
jmp
add
add
add
inc
xor
adc
imul
cmp
or
add
add
pop
loopne
add
add
dec
lods
push
rol
dec
xor
out
pop
les
adc
push
stos
push
pop
mov
mov
cmp
add
add
mov
mov
add
or
out
data16
sub
daa
add
fs
nop
(bad)
pop
pop
out
add
add
and
cld
out
mov
pop
jmp
(bad)
rol
in
jne
push
cwde
adc
add
add
inc
hlt
inc
and
retf
je
or
ds
cmp
lahf
repnz
mov
arpl
add
add
sbb
clc
jb
fcomi
cli
push
sbb
add
jo
jo
int
daa
add
add
fisub
jbe
fcom
cmp
mov
and
adc
fs
mov
dec
fdivr
add
nop
and
inc
mov
outs
add
mov
push
or
outs
jmp
add
add
push
inc
clc
xchg
sahf
sti
pop
jno
ss
ret
stos
cli
xchg
les
std
dec
pop
iret
mov
add
add
fsub
lock
std
stos
fidiv
cmps
or
pop
or
retf
dec
dec
and
xchg
leave
cmc
jmp
add
add
inc
repz
push
cmp
les
(bad)
ins
adc
lock
nop
lock
pop
xor
mov
add
add
sahf
pop
push
out
movs
jmp
loop
in
movs
test
in
int3
ror
fiadd
add
add
and
jl
push
je
call
popf
fist
jmp
sahf
and
mov
mov
ja
push
cmc
(bad)
pusha
mov
or
jae
xlat
aaa
sbb
mov
sahf
add
sub
je
ja
sbb
adc
add
add
clc
in
sbb
test
jne
pop
das
mov
int3
inc
(bad)
mov
test
jae
stos
mov
jne
jnp
fdivr
mov
push
jne
jno
jne
or
mov
dec
fst
loopne
or
add
mov
(bad)
repz
(bad)
mov
fmul
out
retf
and
in
push
(bad)
ffreep
push
jnp
add
add
cmps
bound
mov
test
jmp
aas
fsub
add
mov
add
add
xchg
sub
mov
pop
pop
outs
push
xor
jmp
ss
cs
xor
xchg
(bad)
or
dec
jmp
popf
and
add
xor
shl
push
cmp
inc
shl
xchg
fsub
jge
(bad)
outs
lods
push
lahf
dec
nop
xor
inc
adc
scas
bound
ins
or
xchg
pusha
enter
add
adc
and
mov
inc
retf
pop
(bad)
adc
int3
and
aas
test
xchg
nop
sub
add
mov
jo
sub
inc
cli
stos
loop
push
in
mov
xchg
fldenv
add
add
fxch
icebp
inc
retf
loopne
rcl
inc
jo
push
(bad)
(bad)
leave
pop
shr
aas
mov
or
sbb
add
add
jne
(bad)
fneni(8087
mov
mov
les
outs
into
pusha
or
mov
fs
add
or
fsub
(bad)
add
xchg
dec
ret
clc
jbe
aad
pop
push
add
add
retf
push
in
dec
adc
fwait
imul
ja
push
inc
in
rep
cmp
or
adc
aas
or
push
push
push
push
push
mov
fstp
add
dec
jmp
or
ror
fbstp
popf
jae
add
add
imul
or
pop
push
retf
test
mov
or
mov
adc
add
add
int3
retf
jg
mov
inc
fdivr
icebp
jnp
push
loop
aas
jmp
adc
push
add
imul
add
add
jno
xor
je
push
daa
push
popa
jne
mov
and
call
bound
add
add
mov
mov
push
mov
sbb
in
jecxz
or
das
out
add
mov
dec
push
stos
(bad)
popf
repnz
dec
or
inc
data16
sar
pop
inc
inc
jmp
cmp
jne
and
add
adc
fstp
cli
or
pop
inc
jmp
cmp
push
adc
or
test
add
fisub
inc
add
add
and
clc
add
or
je
data16
jle
push
lods
xchg
mov
inc
push
jae
adc
add
fnstenv
and
jge
sar
mov
pop
push
test
ror
jno
xor
jmp
add
add
in
dec
call
mov
(bad)
or
das
jle
int
pop
data16
add
add
nop
rol
mov
and
push
jge
mov
mov
jge
xchg
adc
cmp
add
add
fmul
jmp
add
mov
mov
dec
jl
mov
add
add
mov
test
ret
mov
ds
pop
je
or
mov
leave
inc
cli
es
add
add
or
jmp
(bad)
jge
jo
pop
mov
(bad)
and
xchg
add
pop
xchg
inc
shr
pop
pop
fbld
xor
and
or
cs
sub
add
ret
sub
outs
lock
loopne
retf
mov
scas
out
or
adc
push
(bad)
out
add
add
sub
dec
imul
xchg
lods
(bad)
shr
inc
aas
sbb
pop
std
repz
add
add
loopne
addr16
push
sbb
in
inc
loopne
mov
jle
dec
loop
stos
dec
mov
aas
and
lods
jg
aam
add
add
scas
cmp
add
and
fwait
call
jae
imul
inc
push
adc
in
bound
add
add
dec
test
push
out
and
pop
fld
imul
cmps
pushf
xchg
jns
push
adc
jo
add
add
jb
jge
or
cmp
xor
push
adc
sub
add
dec
jo
mov
jg
bound
idiv
xor
push
sahf
fadd
pop
xor
add
clc
sub
pushf
mov
or
stos
(bad)
jmp
mov
mov
fld
mov
mov
pop
mov
adc
(bad)
daa
les
or
push
mov
movs
aam
jmp
cmps
add
add
cs
or
in
test
pop
mov
fs
pop
loop
retf
add
add
add
sbb
dec
mov
mov
push
pop
out
mov
xchg
hlt
icebp
rol
pop
icebp
dec
(bad)
cdq
repnz
add
add
add
jmp
ret
xchg
cmc
popf
sbb
cli
outs
icebp
or
inc
xor
sti
test
add
or
mov
or
gs
test
fst
pop
jle
jle
pop
inc
add
add
add
inc
xchg
repz
or
xchg
push
xor
or
adc
adc
adc
add
add
out
stc
ret
dec
adc
(bad)
push
pop
push
push
cdq
mov
pop
rol
retf
cmp
add
add
push
dec
mov
jns
je
ret
test
push
cli
repnz
add
inc
lock
add
add
inc
mov
mov
mov
adc
lods
jge
mov
xor
adc
add
add
ds
cli
fstp
or
push
sbb
push
fidivr
dec
mov
sahf
dec
aad
enter
add
rcl
jnp
fild
movs
mov
sub
add
lahf
cwde
ins
push
and
add
add
cmps
or
dec
shl
or
repz
jg
dec
push
jo
sub
test
shl
add
add
les
sbb
pop
and
jg
ss
sbb
int3
and
mov
xchg
add
add
jnp
push
cmp
ror
jae
mov
pop
mov
mov
sbb
test
call
add
call
sub
jne
pop
mov
jmp
movs
sub
push
outs
jp
(bad)
xor
push
lea
add
add
jno
data16
cmp
mov
lock
push
scas
mov
and
mov
mov
add
dec
or
or
adc
out
jbe
data16
push
sub
sub
xor
xor
cmp
xor
jmp
inc
pop
stos
dec
add
xchg
dec
xchg
retf
xchg
fisttp
jle
xchg
push
add
add
aad
shl
aam
stc
imul
sub
shl
inc
cmp
add
add
dec
out
mov
imul
ja
cmp
xchg
imul
adc
pop
ror
dec
addr16
pop
out
add
add
xchg
mov
enter
nop
lods
fs
add
neg
cs
xchg
daa
jnp
dec
sub
leave
rcr
add
add
retf
push
sti
cmp
sub
ret
inc
mov
test
je
jecxz
daa
retf
add
add
mov
test
lahf
lds
jmp
pop
push
out
add
adc
mov
add
add
pop
pop
mov
dec
push
sbb
xor
int
jg
adc
add
jmp
movzx
add
add
std
push
inc
mov
dec
sub
and
or
gs
inc
pop
call
adc
add
add
sti
xor
mov
and
or
repnz
popa
adc
pop
mov
add
add
push
test
inc
adc
cmps
ds
call
mov
add
add
ror
enter
pop
or
jno
sub
clc
imul
dec
call
push
add
add
mov
lea
mov
cmp
xor
inc
loope
adc
call
outs
cmp
in
push
add
add
xchg
pop
sub
cwde
inc
clc
test
arpl
pop
jle
retf
adc
and
add
add
mov
jno
jg
shr
jmp
xchg
or
rcl
lods
adc
add
add
fcmovu
jno
jnp
lods
mov
xor
call
pop
xchg
cmp
add
add
add
mov
call
inc
jmp
xchg
cmp
enter
or
xchg
fstp
add
mov
sub
je
enter
and
fimul
(bad)
pop
adc
mov
adc
add
add
js
inc
sbb
loop
scas
shl
mov
dec
sub
in
jmp
add
add
or
cmp
popa
xor
cdq
retf
cmps
in
jecxz
cvtdq2ps
jno
push
mov
push
add
add
fisubr
out
and
out
test
shr
sub
pop
jg
jecxz
or
add
add
not
or
fnsave
fld
mov
push
pop
mov
mov
xlat
sub
add
add
push
push
pop
inc
inc
cmp
and
int3
pop
movs
or
and
clc
mov
add
add
int3
push
jne
idiv
mov
or
test
cmps
pop
fdiv
and
jmp
test
imul
sub
mov
sub
movs
and
add
add
push
mov
test
push
js
ds
pop
pop
lahf
push
cmps
inc
mov
push
stos
xchg
pop
scas
push
add
add
xchg
mov
xor
or
add
dec
test
inc
sbb
mov
test
pop
add
add
push
mov
retf
pop
add
addr16
xchg
xor
sbb
(bad)
mov
pop
addr16
stos
xlat
dec
aas
sub
add
push
xchg
jg
push
int3
inc
push
mov
xchg
sti
scas
fist
inc
dec
sub
inc
jp
or
add
or
pusha
mov
push
jne
test
push
and
inc
int3
push
push
or
enter
pop
sub
xor
add
add
pop
cmp
xchg
hlt
adc
test
mov
jle
rol
test
adc
pop
and
dec
push
movs
(bad)
xchg
add
add
mov
ds
dec
cmp
mov
fwait
mov
fs
in
pop
push
gs
in
add
add
cmp
push
(bad)
nop
lock
jo
dec
adc
xor
pop
or
repnz
repnz
add
add
inc
ds
cwde
pop
leave
jo
fwait
daa
xor
enter
cmp
fstp
sbb
leave
mov
add
sbb
dec
pop
adc
enter
hlt
sbb
mov
xlat
mov
nop
add
add
inc
inc
push
and
dec
in
push
push
mov
fld
push
mov
retf
add
test
add
add
cmps
inc
mov
lds
cdq
daa
test
xor
ins
outs
cld
movs
movs
stos
jne
jmp
enter
sbb
cdq
(bad)
lock
inc
adc
adc
pop
push
adc
dec
(bad)
add
add
sbb
out
add
movzx
test
in
ss
jo
sub
ja
push
outs
leave
data16
add
std
ins
cwde
imul
jo
mov
inc
mov
fs
cwde
or
stos
xchg
aam
pop
mov
add
add
dec
rcl
inc
imul
sahf
rcl
loop
pop
pop
pop
or
pop
push
test
scas
jbe
push
stos
add
add
outs
sub
pushf
aam
mov
inc
add
fidiv
jge
sbb
xchg
push
cmps
(bad)
add
add
and
and
jg
add
stos
(bad)
cmp
and
pop
mov
xchg
add
add
test
in
sub
or
das
stos
jmp
xor
loop
push
in
(bad)
les
or
add
test
ror
les
dec
out
call
jle
add
inc
mov
dec
or
add
add
jmp
call
ds
jns
repnz
and
aad
movs
les
add
add
inc
loope
sbb
xchg
xchg
add
pop
xor
fwait
add
dec
jo
add
push
lods
add
add
or
or
mov
movs
mov
idiv
mov
mul
in
cld
lock
jmp
xor
add
or
inc
stos
stc
push
jmp
sbb
add
je
bound
bound
dec
or
add
cmovnp
repnz
add
sbb
pop
sub
ret
add
jnp
add
add
test
cli
xor
dec
fwait
aas
mov
dec
cmps
test
inc
movs
pop
or
sub
test
add
add
popf
sub
and
pop
push
and
call
and
add
add
cmp
push
dec
shl
lods
rcr
xchg
sbb
xchg
mov
repnz
dec
add
add
add
add
scas
cdq
nop
dec
mov
or
xor
mov
mov
add
dec
fsub
push
jmp
sbb
fmulp
pop
or
dec
add
push
scas
div
repnz
push
sbb
sub
cld
je
or
push
xor
sub
push
rcl
jp
xor
pop
mov
and
clc
add
and
add
loopne
xchg
popf
(bad)
xchg
cmp
sahf
jb
mov
hlt
add
xor
sbb
add
add
add
cmp
jg
add
js
or
mov
ja
or
mov
cdq
adc
add
add
scas
sub
dec
adc
inc
stos
lds
in
xor
nop
inc
call
enter
add
add
pop
pop
cld
pop
dec
mov
mov
loopne
sbb
add
add
xor
add
add
je
cs
fidiv
push
mov
call
xchg
ret
out
mov
or
add
add
repnz
sbb
imul
stos
and
test
imul
mov
add
add
popa
inc
(bad)
jp
pop
cld
cmp
mov
lock
mov
retf
add
add
dec
loop
pop
jne
cmova
mov
cmp
js
pop
lods
(bad)
in
and
add
jp
test
add
add
int
sub
stos
jmp
pop
(bad)
repz
or
leave
push
xlat
pop
mov
add
stos
lods
lock
fwait
xchg
push
adc
out
xchg
mov
(bad)
movs
lds
add
add
pop
cmp
cmp
mov
rol
aas
stc
pop
addr16
push
lock
sub
and
imul
add
cld
and
call
lods
inc
and
das
popf
aam
mov
or
les
add
add
push
mov
out
loop
mov
test
adc
shl
lea
sub
add
add
add
jl
bound
cmp
pop
loope
test
and
sar
cwde
mov
push
add
add
call
dec
xchg
in
rcl
and
into
sbb
popf
mov
inc
sub
add
aad
push
or
xchg
mov
xor
pop
mov
add
xchg
mov
out
mov
add
add
mov
mov
sub
mov
and
mov
jb
dec
sar
movs
jecxz
adc
add
add
mov
xchg
push
jge
lods
ficom
sbb
dec
jbe
add
test
add
jb
xchg
sub
or
mov
xor
cmc
(bad)
inc
inc
call
pop
cs
ja
pop
jmp
add
add
dec
push
mov
scas
loop
or
mov
xchg
push
add
add
cmp
jmpw
js
or
fiadd
not
xchg
inc
shl
das
in
pop
scas
dec
inc
and
je
mov
mov
adc
dec
xchg
in
mov
lods
sub
shr
adc
add
add
(bad)
loop
repnz
and
jae
jno
call
out
cmp
dec
and
into
add
add
inc
inc
sbb
and
inc
pop
jg
lods
or
add
stos
sti
mov
sbb
add
loopne
xlat
and
adc
cmp
sbb
jge
xchg
push
fcomp
sbb
add
add
push
out
jge
ss
sbb
xchg
xlat
xchg
pop
mov
test
mov
add
add
add
mov
fcom
clc
and
ins
xchg
dec
(bad)
in
pop
add
add
pushf
cli
shl
stos
inc
jl
retf
dec
lods
ins
test
mov
stos
jbe
pop
xor
or
add
add
aas
sbb
retf
push
lods
stos
test
adc
xchg
push
jno
adc
sar
add
add
ins
or
cmp
add
and
xor
cmp
and
jnp
push
xor
add
add
cmp
jne
div
scas
and
add
test
jecxz
es
add
jge
ficomp
dec
xor
jg
add
add
pop
in
mov
xor
ja
into
lods
push
adc
add
pop
ret
mov
mov
enter
push
xchg
add
add
push
mov
cmp
push
lods
dec
in
popa
outs
pop
xchg
jl
test
movs
pop
sbb
jnp
add
add
fs
(bad)
xchg
hlt
pop
and
pusha
push
inc
push
leave
sub
mov
lods
xchg
ds
or
ins
into
stos
push
nop
xchg
scas
cmp
js
and
enter
mov
and
out
and
add
add
add
imul
and
hlt
ds
pop
dec
mov
das
repz
jmp
aam
shl
push
adc
dec
add
add
mov
cli
enter
call
out
dec
in
add
and
push
and
add
or
cli
stos
dec
lock
adc
sti
dec
pop
adc
sahf
cdq
mov
xor
pop
add
add
jb
in
mov
mov
mov
loop
adc
push
test
add
add
sub
pushf
stos
mov
xor
idiv
clc
xor
sub
popf
add
pop
fmul
nop
outs
fwait
inc
repz
inc
push
lea
ja
lods
jmp
cld
xor
push
aad
stos
pop
or
adc
sub
aaa
test
add
leave
add
jg
sti
adc
stos
fisttp
sbb
cmp
add
cmp
add
add
cmp
mov
jnp
test
mov
adc
sbb
sbb
add
add
mov
adc
inc
dec
and
push
lea
adc
mov
sbb
add
sbb
add
add
add
retf
stos
mov
js
and
push
int3
(bad)
mov
rep
iret
stos
and
mov
add
cmp
mov
mov
pop
outs
mov
add
mov
and
add
or
test
add
add
push
jne
(bad)
cmp
jecxz
cmps
jbe
data16
mov
lock
and
jbe
or
add
add
pop
(bad)
inc
adc
adc
mov
push
outs
mov
adc
leave
xor
add
add
mov
mov
cmp
data16
out
mov
push
popf
aam
pop
xchg
pop
sti
add
add
jns
imul
add
add
out
movs
inc
cld
add
mov
push
leavew
or
inc
and
sldt
add
mov
and
dec
mov
pop
ret
sbb
add
mov
aad
jb
push
and
pop
add
add
neg
sub
or
test
jecxz
add
add
inc
leave
sar
test
add
or
fwait
pop
repz
pop
aam
jp
rcr
loopne
xchg
popf
lock
cmp
add
add
cdq
retf
imul
cmps
adc
push
pop
sub
mov
add
add
xor
sbb
jl
xlat
dec
pushf
mov
mov
jno
mov
and
scas
sub
add
add
dec
mov
imul
mov
pop
or
push
or
dec
or
mov
add
add
cmp
pop
or
or
jb
sbb
in
ss
stc
and
lea
add
add
jmp
iret
xor
sbb
daa
sub
mov
pushf
pop
lds
add
add
das
push
movs
mov
test
mov
cmp
mov
sub
dec
loop
retf
push
add
add
lock
pop
out
jno
outs
cmp
inc
cmp
lds
pushf
js
test
adc
add
add
cwde
dec
shr
mov
or
mov
jne
rol
dec
mov
shl
and
dec
sar
or
int3
test
adc
pop
adc
jnp
and
sub
add
mov
cmp
mov
dec
add
inc
and
push
dec
int3
mov
push
test
add
add
sub
sahf
shr
movs
and
test
jne
dec
and
and
dec
(bad)
sub
add
add
push
cmps
push
stos
jb
icebp
or
stos
(bad)
movs
push
push
pop
or
out
into
or
sub
fst
or
add
add
pop
inc
sbb
add
les
mov
int3
(bad)
int
sti
and
test
jecxz
xlat
call
and
aas
cs
inc
sbb
pushf
push
cmps
xor
or
add
add
js
pop
movs
sub
inc
scas
imul
dec
dec
cmp
imul
aaa
out
push
mov
lahf
leave
dec
dec
outs
jno
cli
loope
cmc
shr
imul
jmp
les
in
push
pop
adc
push
sbb
inc
test
jmp
jns
add
add
iret
repnz
fs
push
lock
(bad)
pop
pop
mov
dec
repnz
xchg
out
and
ret
push
add
add
nop
sbb
ja
push
sahf
jp
je
sub
cmp
xchg
jns
adc
inc
enter
add
add
call
jmp
retf
shl
stos
mov
(bad)
sub
ret
fs
int3
arpl
add
add
popf
loop
aas
aaa
sub
lea
sub
lock
jne
and
dec
mov
push
test
adc
add
push
les
mov
adc
jo
sub
push
pop
add
push
pusha
fild
add
add
inc
sti
test
ror
aad
mov
shl
mov
push
lea
add
add
out
and
dec
js
adc
jmp
or
sbb
pop
nop
push
stos
daa
pop
xor
add
add
add
je
or
mov
sub
aad
std
jl
movs
fadd
cmps
imul
add
add
sahf
aas
int3
movs
dec
mov
mov
lahf
xlat
mov
adc
add
sub
jno
add
add
shl
push
and
movsx
test
sbb
push
cmp
ret
jmp
adc
add
fsubr
mov
cdq
fmul
retf
and
jnp
pop
sahf
push
xchg
je
push
add
add
retf
xor
test
adc
jnp
mov
pop
out
and
push
jne
fcom
and
add
shr
and
retf
jge
or
jle
xchg
jge
add
add
in
push
and
sbb
test
cmps
ret
adc
jge
add
inc
mov
add
add
fdiv
dec
push
jmp
fs
shl
add
push
cmp
mov
inc
mov
mov
add
sub
cmp
bound
jmp
fucom
ret
imul
mov
lds
push
enter
add
mov
adc
jle
add
add
(bad)
clc
cmps
nop
pop
xlat
xchg
fldcw
fsub
loopne
add
add
dec
adc
je
or
fst
adc
push
adc
cld
je
imul
into
push
mov
add
add
cmc
mov
sbb
mov
icebp
jmp
das
lods
dec
jl
inc
add
jge
(bad)
gs
xor
add
add
add
add
jg
cmp
loopne
add
sbb
mov
sbb
jmp
retf
lods
add
add
sub
inc
nop
dec
add
sar
push
sub
or
jmp
add
add
push
(bad)
inc
movzx
adc
push
mov
in
inc
nop
push
xor
nop
sub
cmp
sbb
push
cli
and
add
add
aad
fist
and
push
xchg
push
(bad)
loop
cmp
jne
outs
mov
inc
hlt
clc
mov
mov
aam
fisubr
mov
cmps
lock
mov
push
loopne
mov
leave
sbb
mov
add
add
push
dec
cs
ins
outs
mov
push
or
mov
and
add
add
push
push
sti
inc
or
sub
aam
push
mov
mov
test
and
lods
add
add
add
dec
and
push
push
push
add
pop
in
mov
and
out
mov
cmp
adc
xor
adc
adc
mov
add
add
cmc
push
mov
sub
mov
lock
clc
loopne
inc
adc
test
adc
jne
inc
add
add
pop
in
push
jmp
jge
push
neg
adc
dec
cld
cmp
adc
pop
scas
add
add
add
xchg
inc
cli
add
dec
cmp
ja
cmp
in
pop
js
cmp
test
add
jmp
push
add
fadd
and
(bad)
cdq
cli
ins
push
dec
pusha
add
add
add
jne
cmc
mov
loop
nop
xor
aas
nop
ds
idiv
or
and
add
and
imul
sub
ja
push
hlt
dec
cmps
or
loope
pop
(bad)
add
add
inc
outs
and
sti
dec
sbb
pcmpeqw
(bad)
adc
pop
mov
pop
mov
pop
mov
add
add
bound
push
push
jb
(bad)
into
repnz
fcom
cmps
ds
cld
test
add
add
mov
fstp
push
xchg
ss
mov
inc
fsub
sbb
push
fimul
xor
add
add
cmp
jb
mov
nop
inc
mov
push
inc
dec
mov
add
xor
dec
sbb
xchg
mov
sbb
pushf
pushf
add
add
mov
adc
xchg
inc
nop
dec
and
or
jne
and
push
das
add
add
fdivrp
dec
jmp
push
test
aad
mov
jle
jmp
jne
aam
pop
loope
add
add
jmp
jmp
inc
inc
nop
fadd
and
in
or
movs
and
add
sub
lock
int3
or
add
add
or
fisttp
clc
jns
int3
mov
push
jg
(bad)
cmp
dec
add
test
test
lahf
dec
inc
nop
add
add
mov
ja
mov
xchg
and
pop
mov
ins
push
add
push
mov
sbb
xchg
adc
sub
adc
cmp
sbb
mov
push
add
add
cmp
sti
pop
or
jg
push
adc
int3
mov
icebp
adc
add
je
sub
add
add
push
and
push
cld
or
push
pop
add
jne
adc
or
pop
call
add
adc
(bad)
fdiv
out
mov
jno
cmp
push
and
dec
or
add
add
pop
dec
xchg
push
inc
mov
cmp
scas
dec
inc
mov
and
or
add
add
pop
lock
sbb
inc
cmc
mov
out
mov
ret
xchg
sub
add
xlat
pop
add
add
(bad)
push
sub
out
leave
jg
movs
dec
mov
enter
push
enter
cmp
mov
call
xor
or
outs
mov
stc
stc
test
(bad)
or
hlt
popa
(bad)
cli
aas
add
add
sub
or
retf
mov
xor
adc
retf
retf
or
cmp
add
add
ds
mov
push
pop
sub
ror
dec
cmp
dec
ret
or
aas
cmp
xor
pop
add
add
add
push
dec
xor
mov
push
loop
sbb
add
add
gs
xchg
scas
sub
mov
test
loop
and
test
(bad)
jmp
cwde
or
add
add
inc
pop
sub
mov
xchg
cmp
aaa
or
inc
adc
jne
cmp
mov
add
add
mov
popa
mov
mov
xchg
adc
xor
mov
cmp
rcl
inc
add
add
add
or
adc
jge
cmps
push
cdq
call
nop
xor
retf
(bad)
call
punpcklwd
lea
inc
add
add
mov
mov
and
add
test
sub
sbb
or
mov
mov
or
add
add
scas
pop
jmp
inc
xchg
mov
daa
inc
call
fidiv
test
es
mov
add
add
pop
ins
mov
test
rcl
push
or
add
lock
add
cmps
pop
cmp
retf
out
or
(bad)
not
inc
out
aas
enter
add
add
mov
or
sub
inc
enter
xor
ror
or
mov
add
add
rcl
pop
aam
or
add
add
call
call
sub
cmp
add
add
mov
xlat
(bad)
mov
int3
xor
shl
in
jle
xchg
shr
push
ins
outs
add
inc
cmp
add
add
push
sar
mov
les
aam
or
loop
inc
sbb
in
add
add
ret
jae
movs
mov
pop
pop
mov
xchg
mov
mov
vcvttpd2dq
mov
xchg
add
add
cmp
adc
rcr
movs
repnz
nop
or
aad
xor
add
add
cmp
(bad)
lock
cmp
dec
inc
repz
push
or
xchg
lods
loopne
and
cmp
pop
push
pop
jge
add
add
mov
sub
or
int3
inc
mov
xchg
inc
scas
jecxz
push
repnz
nop
test
mov
add
add
(bad)
sar
dec
or
add
or
mov
repnz
pop
loopne
ja
mov
add
add
retf
enter
dec
(bad)
out
cmp
xchg
sub
mov
dec
movs
push
fcom
xlat
jge
jp
and
add
add
mov
push
aas
xchg
js
mov
mov
mov
sti
xchg
add
int
mov
add
add
sbb
les
push
into
test
enter
stos
cmovl
or
push
push
add
add
out
inc
cmp
inc
rcl
leave
inc
mov
sub
ret
sub
mov
cmp
add
add
fmul
mov
fs
add
lea
xchg
jl
retf
pop
adc
mov
adc
enter
add
sbb
adc
ja
pop
cmp
sub
retf
or
sti
dec
fdivr
sub
xchg
jle
leave
jae
dec
pop
adc
add
add
cmpps
fs
mov
mov
loope
shr
js
mov
sbb
add
add
jge
int3
xor
enter
enter
and
and
ins
push
popf
pop
stos
ss
add
mov
sbb
out
ror
out
and
icebp
loope
sbb
std
pop
sub
gs
pusha
in
add
add
xchg
fild
jecxz
mov
mov
mov
pop
sub
sub
pop
mov
add
add
fldcw
cli
push
inc
adc
sbb
movzx
jp
lahf
retf
call
add
sub
mov
cwde
or
mov
jg
or
js
mov
push
dec
add
add
test
lods
ja
in
sub
push
cdq
mov
and
test
jmp
sub
add
xor
mov
mov
inc
xchg
inc
cmp
jb
das
push
adc
add
prefetch
or
push
add
(bad)
sbb
sub
cmp
push
or
sbb
sub
test
push
xor
add
add
dec
and
inc
xor
pop
mov
int
sub
sbb
mov
scas
add
add
push
add
sti
lds
pop
adc
shl
sti
and
movs
sub
movs
aas
add
add
cmp
inc
lahf
and
pop
ret
std
(bad)
jg
dec
and
test
idiv
jle
aas
jne
add
add
(bad)
jne
pop
adc
das
push
into
pop
pushf
lods
cmp
fucomip
inc
out
or
fdivr
add
add
cmp
xchg
push
cld
jns
ret
fnsave
adc
jge
test
loopne
push
push
xor
pop
jg
push
adc
jmp
aam
cmp
sti
mov
xor
(bad)
sbb
jecxz
sub
cmp
adc
add
add
test
test
sbb
adc
loope
imul
scas
mov
scas
mov
bnd
jo
add
add
sub
add
mov
jge
test
inc
push
push
push
push
mov
(bad)
jae
mov
add
add
not
inc
dec
test
push
jnp
and
mov
inc
test
and
mov
add
add
mov
gs
ja
xor
pop
mov
cdq
push
lods
pushf
xchg
outs
scas
add
inc
sbb
ja
add
add
dec
dec
loopne
add
jae
fbld
push
push
inc
push
pop
sub
or
lock
sub
sub
add
adc
sub
push
push
jno
out
and
adc
fild
push
sbb
or
outs
and
add
add
mov
cmp
rcr
outs
dec
and
pop
xlat
les
popf
push
or
es
pop
pop
pop
pop
add
add
xchg
add
or
repz
sbb
daa
add
pop
daa
pop
xor
sbb
xor
add
add
xor
push
xor
mov
dec
stos
mov
ret
mov
int3
and
and
fprem1
xor
add
add
pop
adc
arpl
pop
das
inc
pop
push
xchg
inc
inc
cmps
inc
push
dec
sub
dec
out
aam
add
add
push
pop
or
retf
pop
mov
je
ins
or
push
je
and
ins
retf
ret
and
add
add
repnz
mov
mov
cdq
loop
jno
mov
add
es
jae
mov
scas
pminsw
js
or
and
mov
push
adc
add
add
add
xchg
call
das
test
xchg
xchg
mov
jmp
adc
and
stc
in
add
add
sub
mov
cmp
jge
dec
inc
dec
in
das
push
ja
int3
rol
imul
mov
add
add
push
sar
mov
jg
jnp
dec
cmp
and
add
add
mov
push
div
push
jnp
or
daa
pop
pop
(bad)
jns
inc
loope
(bad)
xor
jg
adc
add
or
xchg
push
push
or
mov
test
push
xor
aaa
pop
cli
sub
pop
and
add
add
(bad)
stc
pusha
aas
lea
jmp
xchg
jne
dec
jecxz
pop
add
shl
pop
out
add
add
lods
xor
je
inc
mov
pop
jne
jb
and
pop
add
popf
pushf
cmps
push
xchg
and
lea
add
add
retf
xor
inc
sbb
int3
imul
sub
mov
jnp
push
jl
mov
adc
add
add
jne
jmp
push
xor
adc
push
sahf
jl
icebp
stos
sbb
xor
add
add
mov
inc
lods
cmps
inc
movs
jge
ficom
cld
mov
xchg
nop
stos
je
mov
into
bound
add
add
push
mov
cmps
xchg
mov
cli
mov
jne
orps
push
leave
push
sub
clc
jmp
jl
add
add
iret
lahf
repnz
pop
out
fistp
mov
jne
xchg
mov
sub
imul
push
mov
mov
sub
test
add
adc
add
add
jmp
xor
fsubr
and
popf
sub
or
jmp
dec
add
adc
jmp
add
add
cmc
and
lea
pop
cld
inc
push
popa
jge
ins
add
(bad)
jmp
sub
add
add
and
js
leave
dec
out
fadd
lahf
call
push
nop
dec
dec
xor
inc
adc
add
mov
imul
dec
and
loopne
or
in
xor
add
lahf
inc
stc
lea
int3
repnz
iret
jmp
pushf
and
xchg
pop
mov
add
das
pusha
(bad)
out
inc
clc
push
sub
into
sbb
stc
popf
(bad)
inc
mov
add
add
sub
push
popf
jl
lds
mov
lods
mov
inc
jl
sbb
xor
add
add
shl
imul
jp
add
rcl
adc
xor
pop
or
(bad)
and
add
add
fs
add
push
int3
cmc
mov
jno
or
fwait
out
daa
out
gs
sbb
cmps
add
add
cdq
loope
ds
aas
add
sti
mov
jge
push
popa
ss
push
cmovnp
add
add
add
pop
push
cli
mov
jbe
loope
mov
jle
push
out
xchg
pop
je
jge
cmps
les
add
add
adc
add
mov
sub
adc
dec
mov
repz
xlat
sti
js
push
mov
loop
push
push
std
jp
dec
movs
sub
xlat
add
mov
push
push
push
(bad)
hlt
jnp
ret
add
add
je
cmp
addr16
push
jo
nop
mov
inc
or
and
add
sub
das
or
add
add
dec
xchg
in
jmp
aaa
cld
jnp
inc
or
dec
xor
and
stos
ins
retf
sub
add
shr
sbb
xchg
sbb
pop
mov
xor
pop
add
add
sub
sbb
out
inc
pusha
cwde
push
push
jp
mov
jns
xor
sbb
add
xchg
sbb
and
sbb
adc
adc
or
add
(bad)
pop
mov
push
adc
or
pop
rcr
jge
loope
add
idiv
fcomp
adc
jl
cmp
in
push
jbe
xchg
add
add
int3
dec
sbb
pushf
pop
nop
(bad)
into
ja
or
retf
adc
in
rcl
add
neg
call
add
xor
cmp
loopne
mov
pusha
jne
mul
fidivr
ds
xor
adc
add
add
mov
test
ret
repnz
push
push
lahf
shl
aas
xor
sbb
cmp
add
jecxz
fcmove
inc
fiadd
les
cs
js
adc
les
fst
pop
sub
pop
test
add
add
push
imul
jns
jne
loope
push
push
add
inc
or
je
icebp
cmp
add
add
xchg
sbb
add
sub
retf
repnz
scas
call
je
mov
push
(bad)
out
add
add
jno
mov
or
fwait
lahf
adc
pushf
iret
cmp
inc
pop
add
dec
or
jbe
mov
add
mov
dec
mov
push
jmp
in
stc
sbb
mov
rcr
pop
add
add
nop
mov
cmps
inc
or
jnp
movs
cs
pop
xchg
mov
sbb
push
push
daa
aam
out
adc
fld
add
add
pop
jbe
adc
pop
or
fimul
xchg
jo
pop
jb
jno
cli
ja
or
test
jb
mov
add
add
jns
mov
dec
shr
jo
jge
pop
dec
dec
dec
add
add
mov
into
jge
das
call
jge
adc
loopne
push
xlat
add
mov
or
jg
add
add
and
lods
dec
lods
cs
imul
inc
icebp
aaa
sbb
mov
loope
loop
push
inc
or
and
add
add
les
or
adc
xchg
sub
mov
push
mov
jp
sbb
xchg
or
add
add
xchg
push
and
cmc
xchg
outs
(bad)
clc
sbb
clc
cmp
test
jne
mov
cs
(bad)
add
add
pop
or
add
adc
cmps
dec
mov
jle
inc
ds
pop
pop
cld
dec
inc
mov
jae
out
ds
add
add
or
jge
inc
fild
pop
inc
mov
dec
jmp
sbb
test
adc
add
add
inc
adc
call
std
dec
into
fbstp
repnz
push
push
add
add
dec
sbb
jmp
xchg
pop
test
and
inc
call
call
mov
add
inc
adc
mov
mov
adc
or
xor
fsub
movs
push
inc
add
cmps
aad
add
add
and
bound
movs
jo
inc
clc
clc
mov
dec
cld
xor
or
push
loop
cmp
cmp
jge
push
and
add
test
jge
push
inc
inc
add
(bad)
sbb
add
inc
add
(bad)
jnp
leave
inc
lock
jo
(bad)
adc
test
add
add
je
adc
inc
fld
xchg
mov
movs
mov
jne
fst
add
add
call
retf
and
mov
fs
mov
in
mov
cwde
jo
fnsetpm(287
not
add
add
pop
les
int3
adc
jne
(bad)
pop
js
add
mov
dec
in
cmp
fucom
add
ja
add
add
pop
cmp
push
sar
ja
add
jmp
sub
cli
repnz
cmp
or
inc
and
sbb
and
dec
sub
lods
dec
clc
add
push
adc
inc
add
add
xchg
jmp
scas
loop
and
shl
rol
or
sub
inc
pop
inc
and
add
loop
add
add
stc
jne
cmp
shl
pop
jge
jg
pop
sub
sbb
sub
push
retf
dec
(bad)
dec
sbb
add
cmps
mov
ss
clc
or
(bad)
ficom
and
test
or
iret
add
and
lea
cli
push
jg
add
adc
push
sub
sbb
inc
xchg
mov
and
cmp
add
add
and
jl
jno
test
dec
pop
test
pop
mov
xchg
in
fwait
add
add
and
aad
or
fcomp
pusha
sub
test
mov
mov
les
add
add
aas
adc
inc
or
add
sbb
cmp
xor
loope
sbb
mov
mov
mov
les
add
add
xor
or
cmps
jne
pop
inc
add
mov
cld
mov
jg
add
nop
sbb
add
add
push
mov
mov
mov
xlat
outs
aad
mov
mov
inc
jmp
inc
add
add
popf
pop
call
retf
jp
mov
and
mov
dec
jmp
xchg
pop
add
add
jecxz
ret
push
mov
xor
jne
pop
lock
add
and
idiv
lock
add
stos
rcl
sbb
mov
pop
mov
and
xchg
xchg
or
jg
mov
push
scas
popf
and
stc
(bad)
jns
ja
push
in
mov
add
add
pop
push
push
stos
inc
out
push
sub
daa
mov
sbb
jne
das
(bad)
mov
sub
or
or
push
jmp
and
pusha
push
in
add
add
sub
jg
dec
sbb
jo
push
adc
push
cs
add
aas
data16
inc
push
icebp
jbe
mov
and
add
add
cmp
mov
push
mov
out
leave
hlt
adc
and
mov
jb
jmp
cmp
add
add
or
aaa
push
add
(bad)
add
jge
les
and
mov
sbb
xor
add
add
jmp
dec
push
adc
sub
xor
lods
add
mov
dec
sub
mov
int3
push
dec
add
add
jne
jp
imul
pop
out
and
sti
fwait
xchg
xchg
rol
jo
(bad)
out
or
stos
shr
mov
pop
push
add
add
jne
ret
outs
pop
sbb
inc
lds
stc
push
push
push
mov
cs
add
add
or
rol
sar
or
push
int3
push
pusha
cmp
jne
sub
(bad)
cmps
add
ja
(bad)
out
cmps
stos
add
adc
fxam
cmp
fidiv
pusha
(bad)
in
push
loopne
mov
cmp
and
push
mov
sub
add
es
daa
xchg
test
cmp
lock
mov
es
mov
sbb
es
xchg
mov
dec
cdq
sahf
loopne
jp
xchg
mov
pushf
inc
leave
dec
das
and
test
add
fcomp
xchg
cmp
(bad)
out
sbb
add
add
pop
pop
mov
pop
pop
icebp
or
jo
pop
xchg
dec
sbb
mov
mov
out
inc
mov
add
jmp
jge
cld
mov
leave
(bad)
push
dec
adc
fs
jae
add
add
and
outs
or
mov
pop
dec
repz
add
push
mov
jnp
inc
adc
xor
push
ins
rcr
mov
and
pop
mov
and
cmp
xor
jmp
xor
jg
and
add
add
adc
retf
sub
jmp
in
push
jno
sahf
or
jge
add
and
(bad)
mov
in
fdivr
into
mov
push
add
add
push
push
jns
jnp
jle
jnp
cmp
test
dec
xchg
shl
fmul
add
add
popf
out
push
or
rcl
pop
jmp
mov
call
repz
add
add
loope
or
xchg
maskmovq
div
mov
adc
mov
scas
call
xchg
das
js
add
or
cs
mov
push
call
add
pop
dec
add
sbb
mov
sub
mov
dec
cmp
fld
inc
sub
adc
add
add
imul
inc
push
jnp
pop
clc
aam
xor
mov
or
push
daa
movs
retf
ja
std
dec
pop
sbb
add
add
mov
(bad)
mov
cs
sbb
daa
or
daa
sub
in
das
push
mov
add
add
jl
icebp
repnz
lds
push
retf
fmul
mov
sub
aad
les
add
add
adc
mov
ret
push
test
cmps
jmp
loop
mov
xor
push
or
inc
cmps
mov
or
and
cmp
inc
ja
shl
nop
call
pop
cmps
call
add
add
cmps
jne
adc
mov
mov
int3
sub
mov
ret
sar
add
add
add
push
dec
adc
adc
clc
sar
add
push
push
sbb
xchg
(bad)
cmp
adc
add
add
sbb
or
sbb
push
push
mov
test
adc
add
add
sbb
movs
enter
fdivr
cmp
push
push
sbb
pusha
dec
cli
imul
add
add
ds
xchg
fs
push
shl
add
xchg
jnp
mov
adc
add
add
sar
push
push
ficom
sub
and
and
movs
lea
add
add
adc
and
pushf
mov
push
dec
push
stos
mov
mov
jl
inc
enter
test
xlat
movs
lahf
add
add
dec
outs
and
test
test
inc
jbe
sbb
scas
repz
push
ins
add
add
bound
fcomp
jns
sub
adc
and
(bad)
lods
sar
cmp
in
pop
add
add
jo
push
xchg
inc
fist
adc
mov
popf
cmc
pushf
mov
add
add
dec
test
les
xor
inc
sbb
cmp
aas
push
adc
rol
hlt
and
jns
dec
or
add
add
mov
inc
add
mov
xchg
jo
js
push
push
pop
nop
pop
mov
adc
push
cmc
sub
dec
add
add
pop
sti
cmp
pushf
lods
inc
adc
fwait
push
mov
sub
add
adc
bound
pop
mov
add
rcr
lds
add
mov
call
(bad)
inc
inc
cmp
add
add
inc
into
xchg
sbb
xlat
out
dec
inc
cmp
and
inc
dec
sub
icebp
sub
add
add
inc
mov
jo
setl
movs
sub
and
movs
push
popf
xor
mov
push
add
add
bound
cmp
mov
aad
mov
scas
and
mov
jb
scas
xchg
inc
add
add
pusha
and
cmp
mov
jmp
inc
movs
fwait
les
and
scas
repnz
add
add
or
cmp
inc
das
jo
pop
test
push
test
call
add
add
clc
adc
retf
nop
inc
cld
cld
xor
test
and
inc
adc
push
add
add
add
push
lods
sbb
dec
mov
and
enter
add
add
add
imul
and
or
add
mov
push
movs
aad
pop
icebp
loope
sub
shl
add
add
cli
mov
sbb
add
ja
mov
sub
mov
pop
jge
add
add
test
sbb
iret
sbb
jne
repnz
inc
and
clc
bound
inc
xchg
mov
lea
add
xor
push
ins
push
xchg
repnz
(bad)
mov
and
leave
test
add
out
push
push
fucomi
adc
gs
out
mov
shl
sbb
xor
push
inc
mov
neg
add
add
je
popa
jne
fs
and
and
pop
mov
shr
jbe
lods
in
adc
add
dec
add
cmps
jmp
inc
dec
sbb
push
inc
loopne
dec
mov
add
leave
lahf
cld
dec
push
hlt
dec
jmp
or
pop
mov
in
xchg
xor
cli
clc
shl
loop
hlt
out
test
mov
rcr
dec
std
and
ror
loope
mov
inc
hlt
popa
add
add
sbb
mov
aam
bound
cmp
(bad)
sti
or
lock
daa
out
push
inc
sbb
and
add
add
lods
(bad)
mov
xlat
jnp
test
test
and
stos
jae
std
sub
push
inc
jecxz
add
sbb
arpl
push
dec
lahf
pusha
ret
add
add
lods
pop
int
das
hlt
arpl
jle
fild
das
test
pop
dec
lahf
push
cmp
sub
mov
add
fwait
inc
movs
fsubr
and
retf
or
inc
pop
arpl
cmp
daa
push
sbb
and
add
add
or
sbb
add
sub
adc
lods
out
js
lods
pushf
push
jle
or
lods
(bad)
xor
add
add
or
stc
shl
fcomp
sub
inc
xchg
pop
push
push
lods
push
push
fsubr
add
add
mov
cmc
popa
(bad)
adc
mov
jmp
pop
aaa
cmp
out
add
add
retf
out
cs
test
test
icebp
adc
loope
lods
js
test
and
sti
sysret
push
mov
add
add
or
mov
das
inc
fnsave
jae
xor
cmps
(bad)
or
scas
ss
adc
add
add
or
pushf
adc
pop
sub
js
scas
fld
movs
fiadd
in
outs
and
add
add
cmps
popa
push
fwait
or
js
mov
push
add
pop
ror
add
loop
mov
stc
jo
cmp
retf
push
xchg
ror
add
add
loopne
inc
xor
cli
enter
rcr
jge
cdq
movs
int
adc
mov
add
mov
add
jp
add
add
test
or
pop
scas
out
test
adc
scas
idiv
mov
or
jne
or
inc
add
add
scas
out
in
loope
div
test
pop
mov
mov
fidiv
sub
loopne
jmp
add
add
xor
dec
in
fcmovnu
jge
sbb
stos
into
cmp
cmc
scas
popf
outs
jle
mov
mov
add
add
cmp
jb
xor
popa
xchg
sub
stos
(bad)
xchg
ja
or
jno
jne
mov
add
sbb
jg
add
push
lahf
(bad)
inc
in
scas
push
aaa
add
add
cmp
je
inc
outs
jbe
jns
jmp
add
push
mov
mov
add
add
mov
adc
ds
or
inc
cmp
test
enter
dec
push
sbb
adc
test
mov
iret
das
in
dec
inc
das
test
mov
popf
shr
dec
push
dec
sbb
das
les
add
add
mov
leave
mov
addr16
xchg
fadd
adc
adc
stos
fstp
adc
movs
add
add
inc
in
sub
adc
jnp
loope
lods
dec
pop
pop
push
adc
scas
add
add
add
mov
pop
jecxz
ins
dec
xor
ds
push
push
call
rcr
rol
add
add
movs
loop
lahf
pop
push
ds
or
aam
mov
push
inc
packsswb
and
mov
add
add
ffree
xchg
jg
test
cli
ret
mov
jae
les
push
aaa
in
cmp
es
iret
inc
lods
in
test
adc
sub
adc
dec
pop
adc
or
cmp
sub
dec
loopne
xchg
jno
jnp
and
add
rcr
fcom
add
add
add
(bad)
push
jmp
daa
pop
cmp
pop
or
nop
adc
adc
stos
stc
ret
cs
sti
inc
add
add
xchg
pop
pushf
and
enter
js
dec
sbb
push
mov
xor
add
add
mov
clc
xor
mov
and
daa
mov
inc
aam
sbb
add
add
scas
ss
cmps
stc
js
xchg
cdq
push
sbb
shr
mov
(bad)
inc
pop
inc
jge
adc
add
push
fisttp
sbb
fxch
dec
jle
push
repnz
adc
fist
or
ficom
ror
adc
mov
jnp
aam
cmp
cs
std
call
call
add
add
gs
sbb
out
pop
mov
xchg
(bad)
mov
lods
out
test
cmp
test
add
xor
add
add
xor
and
push
(bad)
cmp
adc
cmc
cmp
jae
sub
mov
add
add
or
fisttp
pusha
cmps
das
inc
dec
or
inc
sub
add
add
ja
ffreep
jle
inc
mov
jb
sti
imul
inc
inc
pop
leave
sub
push
test
add
add
push
xchg
fcom
rcl
mov
cmp
push
loopne
push
(bad)
sbb
push
nop
add
add
or
mov
xor
cmp
push
pop
imul
mov
loopne
mov
add
inc
stc
imul
or
inc
adc
mov
mov
add
inc
lods
call
and
inc
into
enter
jle
push
cld
mov
ror
xor
mov
mov
add
mul
cmp
enter
fistp
(bad)
cmc
repnz
cmps
loop
pop
daa
xor
add
add
mov
jl
fs
jne
mov
xchg
push
jge
aad
xor
inc
repz
cmp
dec
imul
add
stos
pusha
outs
push
scas
fstp
jmp
mov
mov
jge
adc
add
add
add
outs
les
cmp
mov
imul
clc
mov
mov
call
add
add
dec
dec
push
loope
or
(bad)
repnz
pop
and
imul
push
test
sub
add
add
pop
push
test
fild
jge
ret
add
loopne
lock
pusha
pushf
add
add
out
nop
pop
mov
lahf
je
ja
test
imul
jge
hlt
pusha
pop
or
sub
push
add
add
push
xchg
xor
ret
fsub
jmp
iret
push
ds
mov
(bad)
xor
mov
sbb
sub
imul
xchg
fcom
adc
icebp
pop
xchg
jbe
add
add
bound
(bad)
sbb
push
sbb
lds
sub
cmp
lea
add
add
sub
jnp
push
adc
mov
mov
pop
pop
es
and
adc
add
add
test
jmp
lods
mov
(bad)
ins
fcom
es
adc
sub
fisubr
adc
add
neg
adc
call
test
mov
mov
dec
sub
scas
retf
mov
xor
aad
push
add
add
or
in
mov
mov
or
push
cmps
ror
mov
fst
push
push
add
add
bound
jno
push
(bad)
in
dec
adc
jl
aam
nop
adc
in
mov
mov
add
add
mov
jb
mov
mov
sbb
sub
mov
js
(bad)
fiadd
outs
movs
inc
add
add
(bad)
jecxz
push
sub
mov
cmp
mov
adc
add
inc
jp
nop
add
add
xchg
fsub
xchg
add
fdiv
enter
mov
cmp
sbb
push
lods
inc
outs
inc
add
add
fisttp
xchg
dec
push
loope
hlt
aas
fld
mov
pop
adc
fsubp
or
add
add
push
jo
pop
xchg
test
inc
daa
mov
call
mov
jb
nop
cli
pop
je
add
add
mov
adc
and
mov
add
nop
mov
fidiv
add
add
xor
mov
sub
mov
adc
or
adc
add
add
shl
adc
pop
jmp
shl
jp
daa
mov
es
cmp
rcr
add
xchg
arpl
mov
and
popa
pusha
add
or
cmp
cdq
xchg
xchg
repnz
adc
in
test
add
add
and
cld
sahf
inc
push
lahf
jecxz
push
dec
mov
mov
imul
ja
add
add
cmp
mov
das
sar
mov
jb
les
cmp
dec
pusha
and
cmp
add
push
cmp
pop
movs
and
push
xchg
add
adc
xchg
push
add
add
loope
ret
and
inc
cli
push
push
mov
pop
pop
push
hlt
or
add
add
ret
mov
add
sbb
lahf
push
dec
fucomip
imul
cmps
mov
test
and
add
add
cmp
pop
or
push
sbb
or
ret
lahf
pop
jb
cwde
ret
mov
add
add
fisub
cmc
push
(bad)
mov
inc
cmp
lock
nop
hlt
stos
sub
mov
add
add
xchg
fwait
shl
xchg
or
aas
retf
pop
pop
lds
add
adc
pop
retf
add
mov
fiadd
or
xor
ret
and
pop
and
cmp
bound
mov
add
daa
inc
ja
mov
inc
inc
cmp
mov
cwde
inc
movs
dec
pop
cld
ror
add
mov
mov
add
add
sti
not
pop
movs
movs
adc
clc
shl
push
xchg
push
push
aam
xor
cmp
jno
jle
mov
xor
(bad)
pop
daa
mov
cmps
(bad)
clc
or
or
add
add
leave
mov
cmp
aas
inc
je
push
mov
cmp
ror
mov
add
push
add
inc
adc
push
dec
xor
sub
pushf
inc
mov
add
add
sbb
push
gs
pop
sahf
mov
cwde
ret
sub
test
or
add
add
jp
dec
xor
mov
call
jmp
or
inc
imul
add
ja
jb
or
out
adc
lea
push
push
adc
add
add
fwait
leave
adc
jg
xchg
(bad)
or
shl
jns
popa
mov
test
mov
pop
adc
add
mov
in
cmc
sbb
fs
nop
jno
ins
jne
inc
adc
loop
(bad)
cmps
pop
jne
out
aaa
inc
add
add
or
pop
pop
and
shl
xchg
shr
lods
pop
idiv
out
dec
popa
xchg
imul
add
add
dec
or
cmp
test
pop
mov
jo
mov
jno
and
fsub
add
sub
add
mov
loop
adc
ret
idiv
lods
inc
cmp
add
add
jge
lock
xchg
fdivr
out
jae
sbb
sub
int3
lock
and
add
mov
lock
call
pop
movs
jge
jecxz
bound
push
dec
std
push
or
and
add
push
dec
adc
pop
movs
scas
jl
or
and
(bad)
(bad)
aas
sbb
xchg
fdivr
mov
imul
inc
lods
mov
leave
pop
adc
repz
leave
mov
push
mov
add
jmp
iret
or
daa
jae
das
inc
in
or
dec
jmp
les
mov
add
add
enter
mov
pop
mov
ins
inc
cmps
adc
sbb
push
xchg
packssdw
push
test
sbb
add
add
mov
and
sbb
push
dec
sub
xor
rcl
jg
jge
fadd
mov
push
add
sahf
mul
adc
mov
stc
das
mov
add
add
sbb
aas
xchg
and
add
(bad)
dec
adc
div
push
out
call
add
pop
push
pop
jge
mov
lahf
jle
nop
nop
mov
dec
in
push
mov
dec
mov
loopne
sbb
sahf
cmp
repnz
jmp
add
in
leave
add
add
sub
add
clc
mov
repnz
jg
mov
mov
enter
add
add
add
test
outs
mov
pop
and
push
das
in
or
jmp
inc
or
and
lahf
xchg
add
add
sbb
ror
and
in
dec
sbb
loope
push
or
sahf
cmp
fisttp
stos
movs
out
xchg
add
add
add
or
mov
xchg
jmp
mov
rol
(bad)
aaa
mov
loop
xlat
push
mov
or
add
add
push
mov
push
movd
pop
adc
rcl
fs
adc
push
adc
mov
add
add
call
cmp
inc
cmp
pop
mov
gs
dec
in
jmp
fwait
sahf
xchg
cdq
rol
test
dec
scas
retf
idiv
(bad)
mov
and
add
cmp
je
jbe
sbb
jmp
test
push
sub
add
add
scas
mov
shl
dec
into
mul
hlt
xor
dec
lods
jnp
test
cmp
add
add
jg
leave
out
push
je
push
push
push
mov
sub
xchg
stos
jmp
jge
xor
adc
add
add
push
adc
jmp
stos
sbb
mov
mov
push
push
cmps
dec
and
loope
add
add
inc
or
push
fs
push
push
push
adc
jmp
add
add
mov
mov
mov
xor
mov
adc
sbb
shr
add
add
mov
fcomip
movs
cs
sub
or
lods
daa
dec
lds
mov
stos
push
inc
cmp
in
add
add
xchg
inc
and
push
fs
stos
rcl
jp
ret
xchg
mov
pop
add
mov
aas
es
mov
dec
dec
push
(bad)
es
xchg
sub
and
in
add
add
inc
mov
inc
mov
adc
and
xchg
cwde
dec
stos
ins
movs
adc
add
dec
adc
sub
cwde
mov
int
adc
into
jge
cdq
inc
and
mov
and
add
icebp
xlat
and
jmp
aam
scas
sub
mov
mov
fmul
adc
icebp
push
add
add
outs
mov
adc
call
mov
rcl
jo
es
mov
inc
sbb
add
inc
sbb
test
js
sub
mov
ins
pop
aas
pusha
imul
mov
cmp
ja
mov
add
add
test
inc
add
out
(bad)
retf
sub
test
cs
ret
jge
add
add
mul
pop
jge
mov
or
and
pop
lahf
jns
jge
or
bound
pop
push
add
add
fimul
cld
pop
leave
call
sub
xlat
dec
pop
or
add
mov
daa
ret
jne
and
movs
dec
ret
out
sub
pop
and
push
popa
les
jl
daa
lock
pop
les
inc
add
add
sahf
push
or
jl
std
xor
je
adc
sub
mov
ficom
add
add
lods
jns
outs
add
fadd
std
out
ret
jle
add
mov
adc
add
add
mov
es
sub
das
push
push
fs
les
or
dec
cmovle
add
add
ins
pop
int3
sub
pop
jp
mov
mov
adc
cmp
mov
dec
mov
push
(bad)
adc
add
add
sbb
xchg
icebp
mov
push
add
call
push
in
and
add
add
xchg
mov
call
inc
push
cli
xor
add
mov
fst
sub
sbb
and
add
dec
inc
mov
jmp
imul
mov
ds
and
or
add
add
sahf
rol
push
or
push
in
call
std
iret
daa
rcl
mov
adc
inc
fdiv
ja
jg
add
inc
sub
dec
std
stos
cwde
xor
rol
jb
loop
push
add
add
add
adc
add
xchg
push
adc
or
push
push
popf
dec
gs
or
cmp
out
push
jg
add
add
dec
lahf
add
mov
out
sub
rol
push
in
inc
pop
daa
inc
div
das
ficomp
outs
ja
add
add
add
jnp
inc
pop
or
sub
pop
or
pop
jno
mov
add
add
not
cmp
loope
fdiv
in
stos
cmp
push
xor
push
adc
pop
fmul
add
sar
jnp
aam
jp
jnp
repnz
js
pop
push
pop
jno
les
into
xor
stos
jae
in
add
add
sub
shl
and
pop
mov
fadd
addr16
ficomp
adc
sahf
es
push
push
xchg
jno
add
add
getsec
test
inc
frstor
jp
fcom
adc
jl
mov
jle
adc
pop
jmp
add
adc
or
ret
(bad)
sbb
adc
pop
xchg
test
mov
adc
mov
add
adc
inc
mov
adc
push
out
and
sbb
loopne
mov
pop
or
pusha
jnp
js
add
add
mov
jle
inc
mov
sbb
out
mov
aam
jbe
out
pusha
cdq
in
lods
pop
lahf
cdq
add
add
push
or
mov
mov
xor
add
loopne
pop
mov
or
push
and
pop
add
adc
push
cmp
icebp
push
mov
add
add
adc
cs
adc
xchg
rcl
push
retf
and
dec
ret
sub
and
adc
add
push
call
adc
lock
lods
or
mov
dec
or
add
mov
mov
add
jl
push
icebp
(bad)
and
sbb
mul
std
add
add
int3
or
or
or
test
pushf
dec
dec
adc
cmp
das
inc
imul
sbb
and
inc
je
setne
movs
or
pop
mov
adc
add
add
inc
js
ins
jl
lds
add
xor
jmp
push
push
pusha
push
push
pop
(bad)
add
add
enter
in
push
add
cmp
dec
mov
(bad)
std
mov
inc
add
sbb
movs
fsubr
(bad)
add
adc
aam
mov
cmp
mov
push
popf
test
add
xor
ret
add
outs
bound
sub
je
js
arpl
mov
cmp
sbb
inc
int3
mov
add
fs
mov
lds
push
in
mov
adc
les
ret
add
fmul
adc
jmp
fwait
inc
shr
sub
retf
stc
push
adc
cmp
je
push
sti
inc
dec
sub
jecxz
add
cmp
inc
fiadd
fwait
or
add
add
or
movzx
cmps
jb
mov
sbb
add
add
jge
or
pop
(bad)
loope
push
xchg
sub
(bad)
jmp
push
(bad)
cwde
mov
retf
add
add
in
or
pop
sahf
loopne
sti
sub
mov
mov
jae
js
sti
sub
push
mov
add
add
or
cmp
cli
fcmovbe
xchg
mov
inc
pop
in
pop
pop
pop
arpl
add
cmps
(bad)
pop
loope
stos
pop
js
jge
push
xchg
loop
push
mov
and
jns
dec
jmp
add
add
ja
ins
adc
and
mov
push
imul
and
push
les
js
mov
jne
push
(bad)
add
add
test
or
or
clc
and
adc
push
icebp
or
das
or
inc
or
push
add
add
iret
jmp
pop
pop
or
out
mov
jp
xchg
out
add
xor
add
add
dec
fstp
dec
sbb
push
repz
dec
in
(bad)
in
dec
and
scas
leave
pop
loope
loop
push
cs
rol
add
add
enter
cmp
cmp
outs
in
and
nop
push
pushf
cmp
jecxz
and
add
add
fcom
mov
out
mov
adc
pop
push
dec
sbb
mov
loopne
add
add
add
mov
cld
outs
mov
adc
imul
hlt
icebp
loop
xchg
scas
vpsubd
add
add
inc
xor
nop
sub
daa
sbb
popa
jle
push
mov
or
(bad)
stc
lock
sub
add
add
in
mov
jp
shl
or
and
jae
cs
add
add
add
or
mov
mov
pop
push
hlt
pop
sub
repnz
aas
add
push
loopne
lock
mov
add
add
out
adc
and
push
pusha
xchg
bound
push
pop
iret
sbb
adc
shr
pop
add
add
call
inc
in
sub
div
dec
add
idiv
add
sub
int
xchg
jne
call
clc
mov
cmp
pop
mov
call
lods
pop
(bad)
add
mov
inc
das
lods
jnp
pop
out
add
aaa
inc
mov
rcl
add
add
inc
add
xchg
pop
fidiv
or
sub
daa
mov
add
add
add
lea
out
loop
adc
pop
and
lods
mov
pop
fcom
or
test
add
lods
not
retf
in
inc
in
or
adc
push
fdiv
cmp
add
xchg
inc
push
sbb
push
adc
je
mov
or
fcom
out
(bad)
clc
(bad)
sar
add
add
out
jecxz
xor
dec
add
or
cmp
call
push
adc
add
sbb
add
add
add
(bad)
pop
inc
in
lock
add
sbb
push
sub
cld
inc
add
add
pop
push
sub
shl
aaa
mov
xchg
in
adc
xor
add
and
xchg
push
std
xchg
enter
add
add
pop
dec
push
retf
mov
sub
mov
cmp
das
or
int3
mov
add
add
jl
pop
icebp
mov
pop
add
out
inc
sbb
and
lds
stos
add
add
push
jne
mov
mov
pop
jo
or
loopne
sbb
xchg
adc
pop
cmp
add
pop
push
and
mov
or
test
and
mov
icebp
and
add
add
mov
cmps
mov
mov
sbb
loop
cmps
adc
inc
lods
and
add
mov
add
idiv
and
sub
jnp
daa
lock
out
in
mov
jne
push
adc
lods
into
push
inc
sub
add
add
test
jmp
lock
sub
shl
test
js
add
dec
pop
jo
add
add
fs
dec
and
pop
in
and
jbe
movs
adc
in
or
je
sub
inc
adc
clc
add
add
jns
push
enter
nop
mov
cs
mov
gs
fidiv
push
call
mov
mov
mov
and
push
jne
adc
or
mov
push
sbb
push
mov
lea
mov
sbb
sub
or
sahf
jecxz
mov
sbb
fadd
pop
stos
add
add
xor
stos
mov
stos
and
daa
mov
xlat
(bad)
fidivr
jg
das
dec
mov
add
push
xor
add
add
push
test
pop
sbb
xchg
push
pop
dec
cmp
mov
mov
mov
add
repz
fdiv
inc
jmp
push
xor
or
mov
leave
add
add
fmulp
mov
mov
cs
inc
popa
cmc
jmp
es
add
adc
mov
add
add
inc
dec
or
scas
call
sbb
inc
sbb
pop
test
xchg
xchg
mov
mov
add
add
mov
mov
in
mov
retf
jle
call
adc
sti
mov
add
add
(bad)
lods
stos
pop
out
mov
dec
test
popf
out
xor
add
add
add
pop
mov
scas
jne
lahf
out
and
fs
dec
cmp
call
sub
add
mov
add
add
ja
or
or
fwait
(bad)
fwait
repnz
hlt
jnp
inc
or
add
add
push
jbe
xchg
cmps
adc
or
ss
adc
(bad)
retf
mov
scas
jp
mov
into
add
add
jnp
in
inc
aad
scas
jnp
adc
dec
(bad)
and
push
popa
loope
jne
aas
lock
add
ins
xchg
dec
in
inc
iret
add
enter
mov
nop/reserved
mov
jle
lock
mov
xchg
jno
das
clc
sub
add
add
cli
test
inc
stos
xchg
shrd
gs
das
out
test
call
add
int3
stos
xchg
add
xchg
jge
dec
inc
adc
push
or
or
push
stos
sahf
jns
rcl
cmps
call
fwait
cli
(bad)
(bad)
cmps
fiadd
add
add
inc
nop
or
inc
adc
push
rol
mov
push
sbb
ins
add
add
add
push
(bad)
loope
adc
inc
push
(bad)
aad
je
pop
xchg
xor
fsub
retf
mov
(bad)
sti
xor
repnz
sub
cmp
pop
mov
push
add
add
pop
and
cmp
push
or
and
dec
and
iret
sub
dec
push
or
add
je
xchg
movs
dec
or
out
das
or
pusha
pop
xchg
add
cdq
xchg
scas
add
sbb
or
add
add
xor
and
push
add
into
push
pop
test
out
retf
add
inc
popf
mov
add
xchg
cmp
mov
stos
fisttp
or
sbb
aad
aad
(bad)
out
cmps
sar
stos
cmc
call
lar
and
retf
aam
push
cmps
sti
ss
mov
cmc
iret
mov
inc
(bad)
push
sub
popf
add
add
outs
test
(bad)
and
and
pusha
call
jne
inc
stos
jne
in
or
add
inc
sbb
mov
add
arpl
loopne
mov
repz
fdivp
int
jg
mov
add
add
das
jb
mov
cmp
imul
imul
fwait
stos
add
add
dec
outs
jns
rcr
mov
repz
dec
rol
fst
js
jb
add
add
push
lds
and
movs
push
stos
out
cmc
xor
sbb
add
mov
inc
je
or
mov
outs
jo
adc
adc
(bad)
loop
mov
and
test
sub
add
add
lock
mov
and
in
jb
sbb
push
dec
mov
in
cmps
push
add
add
mov
aam
je
cmc
mov
push
sub
mov
shr
add
add
push
cmp
push
push
fbstp
scas
stos
xchg
dec
sub
retf
mov
sub
pop
outs
enter
add
add
mov
dec
mov
das
cmc
sub
pusha
push
and
ror
mov
add
add
dec
je
gs
movs
fcomp
push
mov
dec
dec
std
sbb
push
push
add
add
mov
xchg
fstp
js
push
das
jnp
pop
loopne
jbe
mov
outs
add
add
add
push
push
cmp
mov
inc
and
xchg
loop
push
pop
fcom
stos
sub
hlt
cmc
push
add
add
das
jo
push
pushf
js
jmp
push
pop
cs
pop
(bad)
dec
pop
test
iret
das
jmp
dec
pop
sbb
add
add
cmc
mov
push
sbb
xchg
sar
shl
xchg
into
adc
pop
sub
sbb
add
add
xlat
fadd
add
dec
(bad)
mov
mov
fs
add
jne
mov
fxsave
add
sbb
notrack
popa
mov
cmp
dec
daa
test
dec
in
nop
arpl
scas
iret
or
add
add
les
js
add
jbe
sar
outs
imul
add
jne
mov
jmp
dec
xor
add
add
sub
gs
push
xchg
popa
sub
and
cmp
mov
movs
jmp
add
add
adc
or
in
push
or
jp
jle
pushf
and
add
mov
mov
add
add
nop
jne
push
add
xchg
xchg
add
sub
paddb
add
add
or
pop
jne
jne
inc
sub
xchg
adc
mov
mov
mov
fild
add
out
push
inc
pop
or
jo
pop
js
dec
sbb
fistp
mov
ret
mov
inc
mov
ins
push
dec
out
cdq
fisub
test
xor
mov
cmc
inc
mov
inc
or
sbb
and
add
add
push
enter
sub
inc
push
jmp
fimul
mov
jae
test
add
add
jp
or
std
inc
and
push
push
push
mov
xor
add
arpl
jge
shl
in
test
xchg
xor
pusha
add
ret
sbb
pop
dec
adc
add
add
add
test
jne
(bad)
es
jmp
jp
lods
fmul
mov
fcom
add
jne
dec
scas
cmp
nop
ret
lods
inc
inc
cmp
es
dec
jne
add
add
or
and
xor
xor
add
cmp
mov
mov
cmp
add
add
adc
or
or
and
jmp
and
or
xor
add
add
sub
repnz
enter
movs
xchg
cmc
aas
jmp
imul
test
sbb
nop
add
add
lahf
rcr
jmp
mov
shl
jbe
xchg
xor
adc
mov
xchg
shl
out
enter
add
add
loope
call
pop
mov
rcl
inc
popf
addr16
sub
in
(bad)
cli
bound
cwde
push
pushf
dec
cwde
mov
fadd
adc
mov
add
add
and
inc
cdq
adc
adc
xor
push
push
xor
jbe
add
add
sar
ficomp
nop
(bad)
dec
mov
and
inc
jl
mov
pushf
jmp
add
add
in
add
jne
dec
adc
imul
or
loope
mov
arpl
pop
push
jmp
add
add
sbb
xchg
retf
or
sbb
cmp
adc
je
int3
dec
inc
mov
add
add
test
or
je
jne
jle
sub
cmps
jmp
or
add
add
dec
aas
mov
xor
jmp
jne
xor
sbb
cmp
adc
inc
jne
cmp
add
adc
adc
loop
xchg
inc
push
push
test
fdivr
outs
loope
and
xchg
jnp
enter
pop
cmp
icebp
outs
jno
sub
xor
je
jmp
popa
dec
or
sub
xor
dec
mov
call
ins
sbb
xor
aas
imul
and
and
lods
add
add
xor
popf
popf
jmp
jmp
jl
pop
sub
push
cmp
add
inc
sbb
inc
fs
mov
out
fld
mov
xor
dec
inc
mov
add
add
inc
pusha
fs
xchg
xchg
shl
adc
jmp
and
sbb
and
add
jno
or
or
fimul
minps
jbe
retf
mov
mov
push
add
pop
add
jne
add
add
xor
icebp
into
push
or
push
jp
cmps
(bad)
xchg
dec
pop
test
cmps
or
add
add
or
xchg
daa
daa
push
sbb
add
mov
sbb
xor
add
add
push
nop
mov
pop
ss
inc
pop
push
test
pop
dec
cmc
xor
cmp
add
add
or
fldcw
jp
mov
cpuid
jmp
pop
adc
lods
inc
mov
ret
dec
test
add
add
sbb
in
nop
shl
mov
sub
mov
cmp
inc
shl
jg
add
pop
sub
add
add
out
(bad)
dec
stos
cmc
dec
bound
mov
(bad)
mov
sbb
inc
inc
mov
outs
shl
xchg
call
and
sbb
ins
je
xor
inc
mov
inc
rol
test
xor
add
add
add
loope
push
les
out
mul
retf
pushf
std
mov
jmp
je
aas
inc
mov
jne
inc
clc
add
gs
inc
fst
xor
dec
mov
mov
push
lds
rcl
add
cmp
std
out
mov
ficom
pop
mov
addr16
jge
les
pop
arpl
inc
and
push
xchg
add
add
jmp
cmp
inc
dec
outs
xchg
dec
sub
adc
jne
mov
movs
adc
add
inc
dec
dec
test
je
sub
aad
mov
mov
test
fsub
push
cmp
inc
test
add
add
jb
xchg
sub
dec
sub
gs
and
ins
lahf
ds
lahf
ds
in
add
add
dec
(bad)
mov
xor
dec
pop
aas
popf
mov
cli
sbb
or
cmp
mov
add
add
mov
mov
fisub
rcl
cs
cld
mov
add
add
call
or
mov
retf
mov
xchg
add
ins
fwait
mov
pop
or
inc
clc
and
imul
mul
add
add
jecxz
test
push
mov
xchg
mov
and
(bad)
ds
jae
js
retf
jo
add
add
mov
cmp
mov
sbb
mov
or
mov
add
add
pop
int3
add
xchg
mov
ja
mov
das
push
sub
(bad)
in
dec
xlat
add
add
mov
fisubr
jmp
cwde
add
mov
or
inc
inc
sub
lock
mov
add
add
sbb
test
or
add
xchg
in
add
jns
cmp
sub
test
retf
cld
or
push
lods
ins
and
push
pop
shl
add
mov
cdq
jmp
or
int3
fbld
pushf
or
jle
push
lds
add
add
adc
xor
fs
idiv
or
xchg
mov
fdiv
les
je
and
push
ret
push
add
add
and
retf
jo
retf
(bad)
iret
push
mov
jle
clc
jo
pop
push
jmp
and
add
fild
add
add
stc
or
clc
das
push
adc
push
jne
push
jns
data16
cmps
and
shl
adc
add
add
mov
fdiv
test
(bad)
fcomp
call
fcomp
mov
add
add
adc
xchg
mov
cdq
inc
cwde
stos
daa
inc
ret
adc
or
add
inc
outs
cmp
(bad)
cmp
and
lahf
xor
inc
mov
(bad)
stos
daa
fcom
add
retf
sbb
add
add
fsubr
jns
sub
sbb
test
int3
ja
out
les
mov
push
push
inc
adc
add
add
push
repz
add
outs
stos
jle
lahf
(bad)
test
mov
aam
daa
mov
add
add
out
je
mov
dec
call
add
dec
cwde
cwde
cs
add
add
add
inc
in
test
xchg
retf
push
ds
push
inc
adc
scas
xor
mov
inc
or
add
add
add
dec
sub
addr16
or
adc
mov
adc
sahf
enter
add
fstp
or
xor
adc
lock
add
imul
push
mov
push
and
adc
add
dec
add
fwait
push
xchg
clc
mov
sub
leave
cmp
icebp
jge
dec
lahf
xchg
mov
scas
push
jb
lahf
arpl
add
add
cmps
rol
push
jns
test
movs
mov
movs
stos
push
test
clc
sub
add
add
add
movs
cmp
test
int3
and
push
sub
dec
mov
and
push
push
add
add
xor
cmp
les
pop
sbb
mov
sar
(bad)
mov
add
mov
setb
jb
int3
dec
shl
mov
movs
push
add
std
and
mov
add
add
mov
cs
loop
sbb
fiadd
ja
dec
lods
stos
lods
xchg
aad
rcl
test
enter
and
add
add
(bad)
mov
dec
(bad)
iret
pop
pop
scas
adc
loop
adc
sbb
dec
adc
cwde
lea
xchg
les
add
add
dec
adc
cmp
xchg
in
cmp
stc
push
xchg
cmc
sub
mov
inc
add
add
lods
mov
adc
cmp
out
push
xchg
(bad)
and
jmp
sbb
mov
add
add
stos
jge
fidiv
xor
mov
and
stos
jne
mov
movs
popf
jge
fwait
movs
pop
mov
div
mov
sbb
jmp
mov
push
mov
loopne
push
cmp
je
adc
add
mov
xor
call
push
mov
add
fwait
and
add
ds
mov
daa
inc
lods
push
fwait
in
sbb
aaa
mov
test
loopne
lahf
adc
add
adc
pop
cwde
stos
mov
inc
cwde
cmp
xor
pop
bound
xor
add
add
inc
inc
mov
int3
add
ja
enter
cld
add
bound
repnz
pop
xchg
shl
repz
add
das
loop
mov
mov
xor
pushf
push
shl
cld
pop
mov
sbb
mov
add
add
sub
cmp
enter
pop
imul
and
lods
xchg
cld
adc
add
add
and
push
loopne
cmp
jns
adc
das
or
ja
pop
or
add
(bad)
sub
add
add
lahf
jns
shl
or
lods
mov
in
stos
mov
mov
xor
cmp
add
add
(bad)
in
xor
mov
pop
inc
mov
fs
mov
push
add
pop
inc
or
scas
lods
or
mov
cwde
imul
and
cmc
scas
fisubr
inc
add
add
add
test
aas
inc
mov
add
loope
xor
into
lock
stos
add
add
sub
pop
out
xor
pop
mov
inc
add
hlt
das
pop
pop
or
daa
enter
push
add
add
mov
or
cmp
or
push
test
test
adc
repnz
xor
loop
add
add
xchg
stos
or
add
pop
mov
pop
enter
cmps
fdivr
fs
add
add
or
sbb
arpl
sbb
out
mov
fsubr
lea
aam
add
add
push
cmps
push
out
mov
mov
pop
hlt
push
mov
mov
sub
sar
adc
lock
add
add
push
dec
jnp
pop
pop
mov
outs
je
adc
out
adc
retf
mov
mov
jno
out
jle
add
add
aad
aas
loop
test
pushf
add
and
(bad)
xor
and
sbb
add
add
or
mov
cmp
xchg
add
xchg
pop
aaa
in
jg
add
add
cmp
les
mov
jo
xchg
dec
add
retf
sbb
lahf
pop
add
add
inc
add
add
jmp
xchg
stos
adc
jg
cmps
fs
xchg
cmp
inc
or
popa
fadd
add
push
pop
sub
sahf
movs
add
hlt
sti
xor
imul
mov
jb
add
add
adc
mov
test
dec
and
dec
clc
loop
sbb
push
xor
call
add
add
(bad)
xchg
sbb
sub
and
addr16
push
mov
mov
nop
push
sub
lahf
add
push
add
add
lea
jns
sar
inc
xchg
adc
push
mov
add
mov
ins
jmp
add
add
add
xchg
and
jmp
jmp
push
call
shl
xchg
arpl
add
add
fild
jg
xor
add
add
xchg
inc
sti
xchg
rcr
dec
fsub
(bad)
fucomp
mov
cmp
xor
jns
out
call
add
call
call
idiv
jmp
inc
(bad)
jle
inc
add
add
xor
inc
jmp
sbb
pop
hlt
adc
xor
out
movs
imul
out
je
sbb
sti
popf
ficomp
mov
stc
jmp
sbb
dec
into
stos
imul
gs
vmread
xor
les
add
pop
arpl
mov
fs
push
pop
int3
xchg
mov
ja
add
add
cdq
dec
pop
std
jns
cmp
or
fist
fistp
stos
sti
pop
call
add
add
sub
movs
inc
adc
xchg
pop
lahf
js
cmp
mov
cmc
xchg
add
out
test
mov
add
add
cmp
outs
cmps
and
ret
ja
imul
into
push
pop
push
mov
push
fs
aas
sub
inc
adc
mov
retf
jo
pusha
xor
xor
add
add
mov
jnp
add
sub
pushf
shr
stc
adc
jbe
enter
add
add
(bad)
jmp
push
nop
push
xchg
fist
mov
xchg
push
inc
enter
and
push
mov
cmp
mov
dec
imul
push
mov
xchg
or
or
push
das
daa
(bad)
add
add
mov
mov
inc
push
mov
mov
xchg
js
retf
sti
sub
add
add
sub
xchg
pop
out
pop
or
add
dec
adc
pop
ret
in
idiv
add
add
movs
lods
jle
gs
out
adc
daa
cld
xchg
dec
scas
jo
push
push
mov
dec
out
add
add
les
mov
or
stos
jl
stos
mov
jmp
adc
xchg
into
pop
add
add
inc
or
adc
leave
inc
inc
loopne
jge
(bad)
fdivr
xchg
jno
pop
add
add
add
jge
adc
mov
push
and
mov
pop
popf
inc
pop
outs
dec
mov
repnz
and
mov
mov
mov
cmp
pop
and
jl
call
add
add
and
in
add
(bad)
adc
scas
pushf
push
test
add
mov
fsubr
fsubr
ror
adc
jns
add
add
add
pop
and
or
mov
or
mov
inc
mov
fs
shr
sub
add
add
ffree
pop
das
push
jp
imul
push
add
cmp
and
rcr
add
add
daa
ins
(bad)
loop
or
sbb
mov
cmps
ja
nop
push
add
dec
lods
cdq
add
add
pop
pusha
mov
adc
test
mul
enter
sbb
mov
fisub
dec
repz
add
add
or
pop
mov
inc
popa
pop
dec
dec
out
cmp
xchg
add
sbb
test
add
add
int3
sar
adc
sbb
shr
jg
lds
out
fs
inc
call
add
add
or
loop
loope
mov
xor
jle
jl
fsubr
ja
adc
jno
add
add
push
cmp
or
xor
sub
mov
loope
xor
mov
lahf
push
sti
mov
add
add
std
xchg
xchg
clc
loope
pop
push
lods
stos
ins
jle
clc
aas
add
fwait
mov
push
push
dec
addr16
(bad)
fnstsw
cs
test
iret
and
imul
add
add
arpl
mov
popf
loopne
call
mov
adc
jmp
in
pusha
in
inc
mov
cs
test
push
and
nop
enter
shl
aam
fcom
dec
inc
es
fwait
inc
mov
inc
sub
add
add
inc
sub
ret
and
lds
pop
(bad)
and
mul
add
add
fs
xor
mov
xchg
mov
call
in
adc
sbb
adc
add
add
ror
aam
es
fnstcw
das
rcl
mov
add
daa
jle
imul
loop
push
ja
sub
jno
add
add
jmp
jge
xor
push
inc
xor
sub
inc
mov
mov
sub
test
add
add
fcomp
movs
adc
cmp
and
mov
pop
(bad)
mov
scas
mov
add
lock
in
xchg
out
fs
out
xchg
scas
popf
pop
cmp
out
hlt
and
jmp
loopne
pop
add
jb
push
push
stc
sub
ins
lock
adc
lea
add
pusha
es
test
inc
or
mov
arpl
pop
cmp
fs
mov
jle
or
nop
mov
add
jmp
in
xchg
fmul
pop
or
xchg
push
js
test
dec
(bad)
cmps
mov
and
add
add
loop
add
in
xor
push
inc
mov
inc
stos
jne
jg
jb
les
retf
mov
adc
out
je
shr
adc
adc
bound
add
scas
inc
and
add
add
mov
cdq
movs
add
mov
test
sub
movs
sar
cmp
add
add
jae
pushf
jl
push
pop
push
jg
test
add
jnp
mov
jmp
add
add
mov
and
adc
not
movs
pop
inc
xchg
sbb
add
push
sahf
mov
rol
add
add
movs
jl
xchg
push
jmp
clc
shr
push
adc
add
add
retf
push
repnz
mov
(bad)
in
cmp
(bad)
int3
sub
aas
adc
mov
add
inc
arpl
lds
push
(bad)
sbb
loop
add
shr
les
add
jge
pop
and
aas
and
push
int
adc
push
sar
sbb
dec
mov
iret
or
daa
fwait
enter
cmp
mov
push
cwde
pop
adc
iret
test
add
add
iret
stc
mov
das
adc
or
gs
bound
inc
add
imul
add
add
pop
xor
ins
fist
bound
jns
mov
popf
push
mov
or
add
or
add
add
sub
and
outs
test
aad
pop
push
mov
pop
add
add
add
add
nop
(bad)
pop
adc
or
fst
sahf
lock
lods
add
add
mov
jmp
push
cmp
fcomp
push
int3
daa
stc
mov
scas
or
add
add
xchg
mov
cmp
ror
mov
mov
fs
lea
mov
add
xor
fsub
add
add
push
xchg
aam
jle
repnz
stc
sahf
es
adc
std
shr
les
cmps
jecxz
pop
or
sub
sbb
clc
test
enter
cwde
add
fsincos
cli
fld
add
add
test
xchg
dec
xor
jae
fist
jmp
add
test
mov
sar
mov
add
add
js
cs
bound
(bad)
popf
iret
xchg
or
iret
enter
push
or
add
add
aad
xchg
or
call
call
inc
ss
hlt
cwde
hlt
cmps
mov
hlt
fild
add
add
cmp
pop
mov
movs
sub
pop
sti
jbe
fdivr
cdq
leave
sbb
ret
add
add
fwait
push
add
js
push
les
ds
pop
fstp
les
add
add
mov
(bad)
fs
retf
int
xor
xor
punpckhbw
mov
repnz
jo
add
add
inc
lock
jmp
adc
sub
repnz
mov
mov
sti
cmp
pop
xor
pop
add
add
movs
xlat
jg
test
mov
aas
call
scas
pop
(bad)
mov
adc
inc
in
add
pop
add
add
pop
inc
out
add
mov
push
pop
xchg
shl
xor
sbb
je
or
loopne
add
add
push
loopne
xchg
mov
adc
or
jne
mov
mov
push
data16
call
pop
ret
xor
add
add
fidivr
shl
movs
or
add
aad
pusha
and
sti
xchg
inc
stc
in
xlat
repnz
add
add
push
and
xor
ret
inc
nop
jne
mov
call
ror
or
add
add
mov
pop
pop
data16
add
cmp
push
cmps
call
adc
popa
arpl
xchg
add
add
int
mov
add
push
pop
mov
push
mov
inc
pop
neg
pop
mov
cmp
je
mov
shl
sub
xor
push
pop
jo
xor
sbb
data16
adc
add
add
push
test
scas
mov
mov
cmp
call
pop
fadd
dec
cmp
retf
push
movs
bound
sub
jb
mov
mov
xchg
imul
xchg
div
adc
add
push
test
or
push
fnstcw
push
fimul
cmp
mov
add
add
xor
push
adc
fstp
rcl
mov
add
imul
dec
jl
sar
add
add
fiadd
loopne
push
push
ficom
pop
div
in
push
ret
dec
add
add
pop
adc
retf
call
fnstcw
adc
mov
mov
lods
fadd
add
add
pop
xchg
icebp
cmps
not
mov
dec
pusha
inc
rol
fnstcw
pop
adc
test
out
or
add
add
psrlq
push
mov
sub
add
xor
and
pop
and
inc
or
cmp
add
add
and
adc
inc
inc
adc
dec
inc
pop
and
and
pop
and
and
sub
pop
add
add
inc
sub
pusha
inc
das
and
and
cmp
ins
inc
cmp
and
and
dec
and
add
inc
dec
and
inc
pop
and
inc
and
inc
imul
inc
ins
and
jno
mov
inc
and
inc
mov
lods
inc
xchg
and
inc
popf
and
add
add
inc
cmps
and
inc
lods
and
inc
mov
enter
int3
inc
mov
and
inc
lds
fsubr
or
mov
add
add
or
mov
or
mov
or
mov
or
mov
or
hlt
and
xor
and
xor
daa
add
add
add
dec
or
adc
enter
enter
enter
enter
enter
enter
enter
add
xor
and
cmp
sub
dec
enter
enter
enter
enter
add
popa
enter
enter
enter
enter
enter
enter
and
lea
add
add
pop
inc
xchg
and
cdq
and
and
movs
and
and
mov
je
mov
js
mov
add
and
inc
int
mov
and
fbld
xchg
inc
out
cwde
inc
jmp
add
add
pushf
inc
repz
inc
std
and
lods
and
xchg
mov
sbb
xchg
mov
add
xchg
mov
and
xchg
les
cmp
int3
and
shl
push
xchg
aam
push
xchg
fsub
pop
add
add
xchg
fsub
pop
xchg
loopne
gs
in
imul
lock
xchg
clc
and
xchg
cld
and
xchg
and
xchg
and
inc
mov
and
inc
stos
and
mov
sbb
add
add
and
inc
iret
and
xlat
and
inc
frstor
sub
jecxz
xor
and
out
and
inc
add
add
cmc
and
stc
and
add
adc
xchg
dec
and
xchg
dec
and
xchg
push
and
xchg
pop
add
add
and
xchg
pusha
and
xchg
and
xchg
ins
and
jo
pop
xchg
je
pop
xchg
js
add
add
pop
xchg
jl
ins
xchg
and
xchg
test
jae
mov
ja
mov
mov
xchg
and
add
and
xchg
mov
and
xchg
lods
jbe
inc
mov
xchg
xchg
add
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
inc
add
add
add
fadd
and
inc
mov
inc
sbb
in
sbb
call
inc
daa
and
inc
sub
and
add
add
inc
inc
and
inc
inc
jo
repz
xchg
adc
or
pop
sbb
arpl
adc
imul
add
add
sbb
sbb
and
xchg
sbb
popf
sbb
adc
sbb
adc
sbb
add
add
adc
sbb
push
fs
dec
iret
fs
dec
aad
dec
dec
loope
push
dec
jmp
push
dec
std
add
add
pop
pop
and
mov
or
fs
or
push
nop
adc
enter
add
add
enter
enter
enter
enter
enter
enter
enter
enter
add
add
enter
enter
enter
enter
enter
enter
enter
enter
add
add
enter
enter
enter
enter
enter
enter
enter
enter
add
add
enter
enter
enter
and
inc
sti
and
and
push
adc
and
xchg
hlt
and
add
add
xchg
clc
and
xchg
cld
and
mov
and
das
and
inc
cmp
and
inc
inc
and
add
add
and
inc
dec
and
push
and
inc
push
and
pop
and
inc
and
jns
xor
and
add
add
and
dec
mov
or
mov
or
mov
or
mov
add
add
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
add
add
or
mov
pop
test
xchg
xchg
xchg
xchg
xchg
xchg
add
xchg
dec
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
aam
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
adc
(bad)
cld
mov
and
add
and
cld
dec
daa
fs
sub
xor
add
add
aas
sbb
fs
push
and
fs
pop
sub
fs
pop
xor
add
add
fs
jno
cmp
fs
fwait
fs
dec
lahf
fs
dec
movs
fs
dec
lods
fs
dec
mov
add
add
fs
dec
ret
fs
dec
retf
fs
dec
(bad)
frstor
loope
push
dec
out
fs
popa
add
add
xchg
je
stc
xchg
js
add
pop
enter
enter
enter
enter
enter
add
add
enter
enter
enter
enter
enter
enter
enter
enter
add
add
mov
imul
nop
jno
mov
mov
mov
enter
int3
inc
fwait
and
inc
add
aam
test
and
in
or
mov
or
or
mov
or
add
add
mov
xor
and
xor
and
xor
and
or
xor
pop
xor
and
or
xor
cmp
add
add
adc
xor
and
xor
popa
xor
and
xor
xor
and
xor
jne
add
add
xor
xor
jg
cmp
xor
lock
enter
enter
enter
add
add
enter
enter
enter
enter
enter
enter
enter
enter
add
add
enter
enter
enter
enter
enter
enter
or
adc
add
add
adc
fs
dec
and
sub
sub
movs
dec
inc
fs
push
lods
dec
add
add
push
fs
pop
fs
gs
dec
jnp
ror
les
fs
int3
dec
add
add
cdq
ror
fs
mov
fmul
fmul
fs
retf
fs
iret
fs
dec
add
add
loope
lock
jmp
fs
dec
sti
fs
inc
pop
or
add
or
fs
adc
and
add
and
xchg
adc
xor
sbb
pop
xchg
sbb
pop
xchg
and
popa
xchg
and
ins
xchg
sub
jae
add
add
sub
ja
xor
adc
and
xchg
inc
and
xchg
dec
and
add
xchg
push
and
inc
pop
jecxz
inc
pop
in
inc
pusha
jmp
inc
fs
xchg
neg
ins
add
add
adc
sbb
add
or
mov
or
mov
or
mov
or
mov
or
mov
or
add
add
cmp
or
mov
pushf
mov
mov
mov
test
or
mov
xor
and
xor
and
xor
and
xor
and
xor
and
xor
add
add
cs
rcl
int
fcom
aad
loopne
fcmovne
in
in
call
add
add
nop
repz
enter
and
and
push
adc
and
mov
and
and
or
add
add
and
das
and
inc
xor
and
inc
dec
and
push
and
inc
pop
and
pop
and
inc
add
add
imul
inc
jno
xor
and
jge
cmp
and
(bad)
and
xchg
and
and
add
dec
inc
mov
push
inc
mov
shl
pop
inc
aad
pusha
inc
(bad)
add
add
inc
in
and
out
and
and
pop
movups
xchg
js
or
xchg
and
xchg
add
add
test
sub
mov
inc
xchg
nop
and
xchg
and
cwde
and
pushf
and
mov
add
add
addr16
lods
and
mov
jg
mov
xchg
xchg
mov
and
xchg
add
add
les
lods
xchg
enter
int3
and
xchg
aam
rcl
fsub
fst
add
add
in
out
xchg
call
and
xchg
lock
adc
bound
and
inc
and
stc
and
xchg
xchg
xchg
xchg
adc
sbb
push
sbb
adc
sbb
jae
and
jns
add
add
and
jnp
sub
clc
fs
xchg
xchg
fs
xchg
cmp
fs
mov
add
add
fs
dec
scas
fs
dec
mov
dec
dec
mov
fs
dec
leave
fs
dec
out
pop
dec
icebp
fs
dec
repz
add
fs
std
fs
ins
and
xor
adc
xor
sub
xor
add
test
xor
and
xor
and
xor
and
xor
add
xor
and
xor
and
xor
and
xor
and
add
add
xor
and
xor
and
xor
and
xor
and
xor
and
xor
and
xor
and
add
add
sbb
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
add
add
cli
add
xor
push
xor
and
xor
jno
adc
xor
jns
sbb
xor
add
add
and
xor
scas
xor
and
xor
mov
xor
xor
mov
xor
int
add
add
inc
and
xor
xor
std
xor
adc
push
adc
sbb
daa
sbb
add
add
sbb
aaa
sbb
sbb
inc
sbb
sbb
dec
sbb
sbb
pop
sbb
add
add
sbb
adc
mov
jnp
mov
sbb
xchg
adc
sbb
add
mov
adc
sbb
ret
sbb
fstp
mov
add
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
pop
enter
sbb
fsub
xor
and
add
add
xor
and
xor
and
xor
and
xor
and
xor
and
xor
and
xor
and
xor
and
add
add
add
or
add
lea
cdq
fs
lahf
adc
outs
icebp
and
xchg
sbb
add
add
mov
xchg
and
aad
sub
jecxz
sub
out
xor
add
or
cmp
add
cmp
pop
enter
enter
enter
enter
enter
enter
enter
enter
add
enter
enter
enter
enter
enter
enter
enter
enter
add
enter
enter
enter
enter
enter
enter
enter
enter
add
int
movs
nop
xlat
enter
enter
push
inc
mov
or
pcmpgtb
add
fs
dec
sbb
sbb
and
ror
fs
cmp
add
add
fmul
fs
push
fs
imul
outs
fs
jne
hlt
dec
xchg
fs
dec
xchg
add
add
fs
dec
lahf
outs
push
loopne
test
and
inc
mov
or
mov
and
iret
and
inc
add
add
shl
sbb
fldenv
and
and
loope
sub
and
jmp
xor
and
mul
cmp
add
add
and
or
adc
setno
xchg
dec
and
xchg
dec
and
xchg
push
and
push
and
pop
add
add
and
pop
and
pusha
and
and
xchg
ins
and
xchg
je
movs
xchg
js
add
add
mov
jl
mov
xchg
test
leave
xchg
mov
retf
xchg
mov
aad
nop
and
xchg
xchg
and
xchg
cwde
add
add
and
xchg
pushf
and
xchg
mov
pop
inc
sbb
test
adc
lods
inc
sbb
and
add
mov
inc
inc
and
inc
dec
and
inc
dec
and
inc
push
and
inc
addr16
inc
jno
aam
ja
add
add
fadd
and
inc
jg
loopne
or
mov
or
mov
or
mov
add
mov
aaa
add
or
fs
mov
xchg
or
xlat
xchg
adc
fst
add
add
(bad)
in
inc
sbb
xchg
xchg
neg
sub
adc
sbb
mov
or
mov
or
add
add
mov
cmp
dec
or
mov
inc
mov
dec
mov
dec
mov
or
mov
add
cdq
or
mov
or
mov
or
mov
xor
xor
pusha
adc
js
(bad)
jl
in
xor
inc
mov
mov
fs
dec
add
add
fs
dec
and
and
das
movs
dec
xor
lods
dec
add
mov
push
fs
imul
les
fs
add
mov
xchg
ror
fs
stos
fmul
fmul
fs
mov
fs
add
fs
dec
aad
lock
xlat
fs
dec
jecxz
clc
dec
repz
dec
sti
outs
or
ds
and
add
add
or
and
adc
das
xchg
adc
xor
sbb
cmp
and
inc
xchg
add
add
sub
dec
xchg
sub
push
xchg
xor
pop
xchg
xor
gs
cmp
imul
and
inc
and
add
xchg
xchg
dec
and
xchg
push
and
xchg
pop
and
xchg
pusha
and
xchg
fs
xchg
add
add
push
and
xchg
jo
or
je
adc
js
sbb
jl
daa
enter
enter
add
add
enter
enter
enter
enter
enter
enter
enter
enter
or
add
enter
enter
enter
enter
enter
enter
enter
add
add
enter
enter
enter
sbb
fmul
fs
add
add
and
xor
fs
dec
aas
fs
inc
fs
dec
dec
fs
dec
push
fs
dec
pop
outs
push
pusha
add
add
inc
arpl
add
imul
or
jne
adc
and
jge
sbb
and
mov
and
add
add
and
cdq
and
inc
lahf
and
movs
and
inc
cmps
and
mov
cmp
and
lds
inc
add
add
inc
xlat
and
and
loope
dec
inc
cmc
and
stc
and
push
push
push
pop
and
add
add
push
pop
test
adc
mov
or
mov
or
mov
or
mov
add
add
jl
dec
or
or
test
mov
mov
and
pushf
add
add
lods
sbb
ror
bound
xchg
mov
xchg
call
add
add
pop
ins
inc
push
icebp
jno
add
sbb
dec
cmp
pop
jnp
rdtsc
push
es
add
or
outs
or
push
out
div
xchg
jp
or
mov
xor
das
jne
add
add
jl
sbb
or
pusha
(bad)
outs
sar
enter
mov
cmp
aad
mul
shr
imul
add
add
xchg
mov
sbb
pusha
dec
(bad)
les
icebp
inc
clc
(bad)
mov
add
add
rol
adc
xor
mov
mov
jb
jg
(bad)
pop
(bad)
out
in
xor
add
add
jl
movhps
shr
mov
bound
inc
jmp
jmp
sbb
ret
add
push
push
icebp
fwait
test
sbb
addr16
jb
mov
cwde
mov
scas
cmp
das
push
xchg
es
add
add
and
clc
out
dec
mov
push
push
adc
pop
sub
dec
sbb
xbegin
add
add
cli
call
cdq
and
stc
pushf
(bad)
sbb
test
lea
push
push
add
add
add
jl
movs
dec
mov
push
xchg
test
push
push
lods
mov
mov
cmp
movs
add
add
lahf
mov
arpl
mov
adc
xchg
jmp
jge
ss
pop
loopne
ror
test
add
add
add
sbb
xor
cmps
or
pop
int3
pop
jae
mov
add
jle
in
loope
jge
xchg
mov
loopne
outs
(bad)
xlat
addr16
daa
mov
mov
push
nop
and
add
push
sbb
add
add
push
and
sbb
jle
mov
dec
pop
xchg
jmp
push
push
sbb
(bad)
das
repnz
push
stos
add
add
call
lods
aad
fwait
add
fimul
movs
add
in
sti
in
add
add
jbe
je
xor
in
aam
pop
and
mov
jecxz
inc
sbb
jo
add
add
mov
mov
mov
inc
rcr
mov
mov
sub
push
pusha
add
add
rcl
xchg
cwde
shr
(bad)
push
sub
xor
inc
and
das
mov
retf
add
add
jg
test
cmp
sub
or
jmp
fs
mov
pop
sahf
add
add
mov
add
pop
stos
add
inc
hlt
lea
push
push
push
dec
fist
inc
push
push
or
add
add
cdq
adc
(bad)
jno
or
shl
pop
sbb
cld
imul
push
aad
mov
pop
lods
add
add
mov
(bad)
arpl
cmp
push
pop
dec
sub
pop
add
jl
mov
and
cs
add
add
push
push
push
clc
adc
call
or
das
test
sbb
and
push
pop
jmp
and
add
add
and
adc
frstor
adc
adc
sub
push
jns
jg
push
dec
add
add
call
addr16
mov
cwde
push
sub
(bad)
adc
dec
clc
or
push
add
add
sar
lock
push
ss
paddusw
push
xor
inc
(bad)
cs
adc
scas
inc
shr
add
add
repz
test
test
nop
daa
pop
sbb
dec
or
lahf
push
add
add
inc
xchg
sahf
mov
repz
sbb
push
push
mov
icebp
outs
retf
xor
inc
test
add
add
hlt
fcomp
dec
add
mov
sar
lahf
jne
sub
call
add
add
xchg
pop
(bad)
sbb
jg
retf
fsub
push
(bad)
cmp
call
mov
in
mov
add
add
cmp
mov
inc
call
fild
sbb
rcl
cmp
out
leave
mov
add
ret
repz
adc
mov
mov
jno
add
loopne
adc
dec
or
adc
add
add
and
push
test
in
pushf
sbb
sub
enter
(bad)
stc
mov
imul
add
add
adc
dec
jnp
and
pop
cmp
mov
dec
cwde
scas
ss
fld
add
add
(bad)
ja
sub
mov
cdq
fs
stos
fisttp
push
mov
dec
call
jecxz
add
add
mov
or
imul
movs
pop
(bad)
and
cmc
and
fdiv
add
add
add
push
int3
adc
es
cmp
push
mov
mov
loop
nop
rcl
push
enter
inc
add
call
dec
cmp
mov
sub
test
into
add
add
pop
mov
pop
fiadd
test
lock
push
xchg
mov
mov
mov
add
add
xchg
leave
fcomp
jmp
mov
aam
and
inc
pushf
mov
test
lods
add
add
dec
mov
icebp
dec
cld
(bad)
mov
jne
cdq
xchg
fsubr
div
xchg
or
cmp
lock
add
dec
loopne
jns
call
mov
dec
ins
bound
or
push
dec
add
add
lods
push
div
push
or
add
sub
imul
dec
mov
imul
or
push
lea
fnsave
cld
xchg
aam
adc
push
lods
pop
and
push
add
add
push
cs
fistp
fmul
xor
outs
sub
pop
and
add
add
aam
in
imul
pop
pop
push
setne
add
int
jp
ins
cs
pop
pop
xor
jecxz
push
loopne
add
add
inc
xor
and
inc
fdivr
lahf
sti
mov
pop
in
mov
dec
arpl
les
lods
fst
adc
inc
push
push
mov
dec
jae
dec
mov
add
les
movs
xchg
repnz
push
mov
sbb
sub
pop
jae
sub
add
add
outs
mov
in
dec
dec
sbb
je
or
sbb
pop
pop
mov
sbb
mov
add
xchg
add
loope
inc
pop
mov
mov
push
or
jb
xor
sbb
add
nop
adc
dec
hlt
push
xchg
mov
inc
sub
lahf
pop
mov
sub
add
cmp
xchg
daa
pop
add
add
inc
loop
(bad)
int
dec
mov
scas
sbb
xor
imul
and
sbb
lock
mov
add
jnp
call
fnstsw
in
mov
sub
repnz
adc
je
mov
add
add
shl
mov
push
xchg
xchg
push
jmp
aam
rcl
les
add
add
repnz
sub
inc
dec
loop
sbb
pop
xchg
aad
dec
scas
out
imul
or
int3
add
add
mov
pop
lods
fbstp
int
or
jbe
imul
frstor
mov
or
add
add
test
clc
outs
clc
or
push
stos
les
or
inc
mov
cmp
add
xchg
lea
imul
aam
nop
sti
test
jl
test
cmp
add
add
imul
mov
mov
mov
int3
push
push
mov
or
push
cld
jmp
add
add
add
repnz
jg
lahf
rcr
out
cmps
jp
sbb
outs
icebp
shr
mov
add
add
xchg
push
dec
sbb
inc
out
loope
in
setae
xchg
mov
ins
cmp
and
adc
add
push
or
imul
call
jge
add
xchg
jae
and
lock
xchg
adc
adc
mov
dec
call
stos
mov
push
je
loopne
mov
mov
aas
call
fnstenv
into
push
push
addr16
loopne
jns
push
sbb
call
cmp
add
mov
add
push
jle
bound
(bad)
jne
pop
fldcw
leave
xlat
pop
add
add
pop
jb
dec
jge
inc
dec
xlat
cdq
out
adc
leave
punpckhdq
or
mov
sub
jns
add
add
cmp
sbb
bound
mov
xchg
push
xor
mov
add
add
retf
cmp
push
nop
xchg
dec
icebp
scas
das
aas
daa
add
adc
push
add
add
mov
stc
cmp
mov
jmp
push
inc
push
dec
jl
cmp
pop
xchg
pop
mov
add
and
call
pusha
xor
lahf
fdiv
push
push
retf
or
and
add
add
jns
cmps
jne
enter
and
cdq
push
cwde
ret
push
std
adc
adc
mov
add
mov
repnz
ds
push
xchg
enter
out
bound
enter
add
ja
inc
inc
or
add
pushf
push
sub
out
cmps
fnclex
ret
pop
pusha
cli
fbstp
push
cmp
adc
stos
retf
add
or
repnz
or
add
add
pop
test
nop
scas
fwait
aas
les
sar
inc
std
out
call
adc
push
add
add
add
adc
mov
std
das
jmp
mov
rol
aam
fst
lea
jmp
add
add
mov
stc
cmp
dec
dec
out
fwait
jb
push
or
inc
xor
out
in
and
adc
dec
inc
add
add
mov
sub
mov
fwait
xchg
data16
inc
stos
popa
mov
test
and
adc
add
add
dec
pop
add
or
jl
lock
cmp
sub
jne
mov
data16
inc
stc
add
add
clc
or
push
xchg
enter
or
adc
out
mov
push
repz
(bad)
jo
xor
add
cmp
cld
add
adc
or
add
or
gs
mov
mov
inc
adc
add
(bad)
push
mov
mov
sub
cld
xor
cwde
icebp
pop
jmp
push
add
push
stc
cmp
aaa
out
sub
pop
add
and
cwde
dec
add
add
and
add
inc
jo
push
push
js
pop
push
dec
sbb
add
add
std
cmp
mov
mov
dec
ret
jno
xor
cwde
mov
shl
add
add
test
mov
push
or
mov
fld
xor
inc
mov
sti
push
dec
into
jno
add
add
test
test
pushf
sbb
ror
adc
cli
push
push
lds
mov
add
add
adc
clc
call
sbb
sbb
push
push
fs
pop
adc
add
add
stc
mov
adc
sbb
fs
sbb
push
and
cmps
gs
dec
lock
add
sbb
inc
clc
enter
jo
mul
sbb
dec
lods
lods
sbb
push
push
add
add
sub
pop
mov
dec
mov
mov
in
and
out
sub
and
aaa
mov
add
add
and
outs
mov
and
inc
into
frstor
and
adc
inc
jl
and
int3
test
es
add
add
fs
cmp
adc
hlt
mov
adc
sub
sbb
push
dec
sub
and
add
add
pop
cmp
mov
mov
and
mov
jge
nop
cmp
jae
mov
add
or
imul
sbb
xor
sub
xchg
mov
(bad)
sub
sub
cs
mov
sbb
add
add
and
fwait
xchg
cmc
or
inc
mov
add
add
pmaxub
add
add
inc
add
movs
mov
and
mov
dec
mov
and
test
jno
add
add
or
pop
inc
or
and
imul
je
adc
or
push
test
inc
and
sub
arpl
adc
cwde
xchg
pusha
adc
loop
sbb
sbb
add
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
mov
dec
and
repnz
cmp
sbb
sub
data16
or
test
add
add
fcom
aas
dec
and
bound
push
mov
pushf
dec
data16
pop
dec
lods
movs
arpl
and
add
add
cmp
dec
jl
cld
sub
test
inc
and
push
mov
outs
add
add
sub
nop
sub
mov
pop
xchg
inc
cmps
leave
in
cmp
xchg
inc
push
aam
mov
add
add
xchg
cs
imul
and
sbb
std
jns
add
icebp
js
pop
mov
inc
sldt
add
scas
shl
sub
and
cmp
sub
xlat
inc
sub
rcr
sub
movs
clc
rol
add
add
lahf
sub
and
in
and
gs
and
ds
sbb
adc
add
add
(bad)
and
jo
mov
jl
cli
je
xchg
pop
push
push
sbb
repnz
add
xor
sbb
jmp
sbb
repnz
add
xchg
add
add
push
out
cmp
adc
pop
gs
hlt
loop
shr
mov
and
mov
add
add
jo
cdq
or
mov
(bad)
or
or
loop
adc
repz
adc
or
add
add
cwde
test
or
and
mov
lods
or
rcr
dec
ret
pop
adc
movq
add
add
push
mov
call
cli
push
push
popf
push
out
dec
ret
stos
retf
add
add
add
in
inc
das
push
pop
add
push
adc
xor
repnz
cld
and
add
add
xor
sti
xchg
scas
mov
adc
mov
das
jne
stos
mov
bound
adc
add
add
push
pop
jbe
das
daa
aad
fldl2t
pop
pusha
inc
jmp
push
pop
js
lods
mov
test
and
pop
xchg
push
mov
ins
add
sub
adc
and
fdivr
test
xor
add
add
add
pop
call
mov
mov
test
lahf
cmp
xor
add
mov
mov
push
scas
js
mov
or
leave
std
les
mov
add
add
out
cmp
cwde
add
xchg
jmp
clc
mov
and
test
xchg
adc
add
jg
or
inc
or
ds
pop
mov
out
call
dec
fisttp
repnz
add
add
xchg
add
test
hlt
adc
ror
movs
cli
in
test
or
push
ss
mov
(bad)
gs
xchg
jae
add
add
push
iret
stos
cmp
or
movs
xlat
imul
stos
sub
jle
mov
add
add
or
cmp
sbb
sub
int3
lds
idiv
add
add
jge
stos
inc
movs
mov
adc
dec
sub
shl
add
add
or
dec
or
int3
adc
mov
or
sbb
adc
xchg
mov
adc
add
add
sub
cmp
jmp
dec
jae
dec
inc
mov
test
arpl
imul
adc
add
mov
mov
xchg
adc
ss
aaa
test
lea
movs
push
add
xchg
lea
jno
mov
push
push
and
xchg
cmp
inc
sbb
enter
lock
or
add
add
int3
add
or
mov
sbb
ret
out
mov
adc
add
mov
xlat
or
adc
(bad)
jp
mul
or
adc
fs
pop
dec
inc
add
add
mov
mov
inc
sbb
and
cmp
test
and
pop
mov
add
loop
dec
(bad)
cmps
mov
xlat
cmp
and
and
shl
mov
or
mov
push
and
sub
cmp
lea
add
add
ss
dec
shr
and
mov
pop
sub
and
fs
pushf
in
inc
adc
push
adc
jecxz
es
das
shl
xor
cmp
mov
and
in
cmp
add
add
enter
adc
push
and
inc
mov
xor
inc
push
adc
mov
add
add
ror
repz
mov
and
sbb
or
aas
push
enter
push
cmps
push
and
add
add
pop
jno
cmp
nop
out
mov
lds
out
cmp
cmp
test
xchg
add
add
cmp
into
repnz
push
ds
jp
les
sub
out
scas
hlt
loope
inc
inc
push
xor
test
add
add
mov
(bad)
and
push
fsub
mov
push
dec
sbb
mov
push
sahf
loop
inc
hlt
sub
add
enter
mov
mov
adc
fsub
mov
sti
mov
mov
inc
dec
in
inc
mov
or
mov
mov
aad
loope
pop
push
add
add
and
push
jle
je
dec
jmp
push
inc
dec
mov
gs
mov
mov
add
pop
inc
dec
loop
and
xor
inc
dec
leave
inc
gs
and
daa
jo
pop
mov
mov
add
add
xchg
cmps
sbb
dec
retf
push
sub
cmc
or
dec
adc
out
das
js
das
mov
mov
add
add
mov
push
pop
mov
dec
push
sub
and
pop
sub
add
add
test
test
test
inc
dec
push
xchg
imul
add
xchg
cmp
xchg
mov
cmp
xchg
pop
pop
sbb
inc
pop
sub
pop
pop
add
add
repz
repz
mov
sub
or
das
ds
fdiv
mov
add
add
stos
mov
sub
dec
mov
sub
add
inc
pop
test
dec
or
test
bound
add
dec
out
mov
pop
mov
mov
lds
jae
dec
fs
add
mov
add
add
jo
fdiv
dec
jnp
leave
fsubr
popa
cmp
aam
stos
jnp
adc
jne
add
add
sahf
push
dec
mov
push
inc
mov
xchg
jbe
pop
shl
jb
add
add
sar
push
push
mov
les
stos
aas
adc
data16
add
add
shr
test
imul
pop
mov
mov
enter
ins
ins
xchg
(bad)
mov
jns
add
add
movd
pop
mov
ja
into
outs
and
or
pop
inc
outs
in
pop
pop
cmp
outs
and
add
add
in
sub
inc
call
movs
sub
retf
inc
les
pushf
cmp
nop
jo
push
stos
xor
lea
sub
fstp
outs
in
cmps
lods
inc
outs
ja
xchg
jno
movs
jmp
les
add
add
enter
push
xor
xchg
dec
jne
add
retf
pop
enter
imul
nop
xchg
jmp
add
add
xor
fs
or
ret
leave
push
sub
dec
xchg
add
add
pop
mov
jp
aad
xor
mov
icebp
add
or
loop
aam
gs
adc
add
add
leave
ds
in
and
inc
push
push
and
pop
leave
les
jp
xor
push
cmp
and
dec
add
add
inc
adc
push
push
sahf
add
pusha
push
or
jbe
dec
movs
sbb
add
or
adc
add
and
inc
test
push
pop
jnp
mov
mov
mov
or
xchg
enter
pusha
fldenv
pop
mov
cdq
lock
(bad)
push
sub
out
add
add
add
and
gs
or
sub
sub
xchg
add
or
imul
add
xor
in
les
mov
sti
mov
adc
jns
sbb
inc
add
add
sub
xchg
clc
in
push
and
dec
mov
jne
dec
scas
or
add
mov
call
sub
xchg
adc
jp
cs
mov
inc
test
add
add
xchg
sub
xchg
jno
or
xor
inc
xchg
jmp
fstp
ins
sub
test
sahf
inc
push
jmp
add
pushf
pop
inc
popf
fwait
test
add
or
sbb
sub
cdq
shr
mov
mov
loop
cmp
add
add
cwde
mov
mov
dec
cmp
jo
pop
in
mov
fld
mov
add
mov
sti
les
cwde
mov
loope
cmp
nop
mov
push
add
sahf
xor
add
add
mov
adc
xor
inc
inc
jne
int3
or
imul
arpl
mov
es
inc
daa
loopne
sub
inc
adc
xor
mov
add
cmp
sbb
sub
add
add
adc
adc
xor
xlat
xor
adc
cmp
jns
or
xor
enter
mov
push
cdq
rol
leave
mov
inc
sub
mov
adc
mov
(bad)
jge
jne
out
pop
loopne
add
add
add
inc
popa
mov
or
cmp
pop
addr16
mov
mov
fld
pop
add
stos
mov
xor
add
sub
mov
idiv
ret
mov
mov
add
add
push
into
jmp
and
jg
sbb
add
cmp
jb
jmp
hlt
fstp
add
or
adc
aad
xchg
sbb
xchg
and
push
adc
jnp
add
nop
xchg
add
add
mov
sub
jo
xchg
cmp
js
or
adc
add
xor
dec
add
add
push
test
or
test
or
outs
adc
in
or
out
adc
add
add
dec
inc
or
lea
sub
daa
cmp
and
cmp
jae
sbb
daa
add
add
test
mov
pop
xor
and
xchg
pop
jne
fs
inc
jae
test
popw
xor
add
xor
push
add
add
rol
loop
inc
inc
sbb
inc
xor
mov
(bad)
inc
cmp
leave
je
add
add
cmp
xor
cmp
add
add
mov
jg
or
add
add
cmp
inc
xor
add
lahf
mov
adc
or
mov
mov
cs
jne
jae
add
shl
cdq
iret
and
stos
and
inc
outs
or
hlt
iret
inc
add
add
int3
pop
nop
pushf
or
shr
jmp
nop
gs
jp
and
add
add
add
mov
(bad)
in
or
ffreep
add
jo
push
test
mov
adc
jge
pusha
icebp
dec
popf
fild
add
add
adc
into
sub
and
mov
xor
nop
mov
sub
(bad)
ret
add
add
add
repz
je
mov
test
add
test
inc
or
push
adc
xchg
scas
and
add
add
push
not
(bad)
adc
inc
pop
dec
(bad)
stc
mov
inc
cmp
add
or
rol
jnp
es
ret
adc
push
aaa
dec
mov
add
sub
sub
adc
add
mov
or
sbb
ds
je
add
add
ror
dec
cli
jmp
in
jmp
cld
push
je
hlt
aaa
ret
mov
xchg
hlt
jmp
mov
add
pop
inc
mov
rol
inc
loop
dec
or
cld
scas
or
cmp
or
add
add
xchg
out
mov
rcl
or
push
(bad)
or
or
ins
pop
cmps
test
or
shr
pop
sar
loopne
je
or
jmp
mov
ja
gs
adc
add
push
add
add
add
xchg
retf
push
add
sub
or
leave
jge
jmp
mov
outs
jp
add
add
(bad)
into
(bad)
jl
int
push
mov
push
xchg
je
push
or
or
add
add
mov
push
in
or
aas
shl
and
sub
dec
jb
mul
add
add
and
movs
push
lods
push
dec
adc
in
sbb
mov
dec
xchg
sbb
inc
or
pop
test
std
inc
sbb
add
add
dec
mov
add
(bad)
push
jo
nop
add
add
add
xor
mov
dec
pop
or
adc
push
icebp
add
cld
test
fld
add
ffreep
add
mov
je
dec
scas
inc
xor
or
mov
test
imul
ror
fadd
dec
hlt
inc
icebp
lock
jg
inc
push
pop
push
stos
cmp
test
add
adc
and
pop
pop
rcl
pop
jmp
fbld
test
add
add
outs
ins
std
mov
movsx
inc
retf
or
ror
adc
adc
add
add
push
sub
push
push
test
pop
clc
fld
adc
xor
cmp
and
add
add
or
push
mov
adc
sar
push
test
jo
or
push
add
sub
add
retf
and
add
iret
pusha
add
enter
xchg
iret
push
xor
mov
add
push
xchg
mov
xchg
inc
push
aam
and
add
or
pop
sti
call
push
ds
add
add
inc
cli
sub
push
pushf
add
mov
je
repnz
jo
xor
out
cmp
lods
in
cmp
add
add
jge
hlt
cld
cs
and
mov
mov
cmp
and
add
sbb
retf
fdivr
cmp
dec
cmp
jl
(bad)
hlt
(bad)
popa
inc
inc
cmp
cmp
or
add
add
sbb
xchg
sbb
add
push
lea
mov
push
adc
add
cmp
dec
outs
or
add
add
(bad)
ins
xchg
push
lds
stos
adc
xor
inc
hlt
stos
mov
mov
sbb
rol
mov
add
in
and
adc
push
mov
mov
fwait
imul
pop
add
and
add
add
fcmovnb
test
or
mov
push
jnp
push
adc
lods
fld
stos
push
pop
test
mov
xor
test
popf
xlat
sub
sbb
lods
cmp
fbld
pop
jl
mov
or
add
add
pop
leave
mov
clc
mov
iret
es
gs
jle
push
sahf
push
movs
pop
lahf
inc
and
and
add
jl
dec
add
push
jle
jo
sub
pop
adc
mov
rcr
push
mov
push
inc
add
add
fs
sbb
inc
pop
xchg
daa
js
out
mov
test
mov
test
inc
adc
add
add
imul
pop
ss
retf
inc
xchg
imul
es
stos
jno
dec
sti
lds
add
add
fstp
push
pop
test
stos
enter
cmp
jmp
daa
outs
fiadd
cld
test
add
mov
ror
push
fnstenv
mov
js
mov
and
addr16
inc
adc
iret
mov
add
and
std
jbe
xchg
stc
shl
inc
bound
jo
inc
sub
pop
dec
add
and
or
cs
fstp
(bad)
cli
loopne
pop
popf
add
push
or
lods
scas
xchg
add
add
pop
stos
lods
(bad)
loop
push
and
push
dec
mov
cmp
ror
add
add
nop
cmp
nop
jb
daa
pop
retf
add
cmp
in
or
mov
add
xchg
add
in
mov
sub
sub
cs
push
sub
fwait
push
aam
cmp
inc
int3
mov
add
add
pop
pop
enter
(bad)
sub
cli
sub
sub
mov
push
add
add
xchg
pop
xchg
aad
imul
sbb
jp
xchg
pop
test
fld
mov
aaa
nop
add
add
and
xchg
adc
loope
jge
inc
adc
mov
add
fs
push
add
add
xchg
or
mov
and
sbb
push
movs
sahf
ffreep
adc
dec
or
call
add
add
mov
sbb
dec
sbb
aad
ficomp
jge
sbb
or
dec
add
nop
mov
fild
add
add
mov
xor
add
lods
mov
ret
push
mov
in
dec
jb
add
add
push
and
xchg
push
push
out
xlat
test
repz
dec
jne
xchg
add
mov
scas
outs
xchg
daa
jne
jne
add
add
pop
mov
push
(bad)
and
mov
xlat
push
add
or
push
push
pop
add
jnp
pusha
test
inc
ret
add
dec
jno
sbb
add
add
and
push
pop
jb
sbb
nop
mov
popf
pop
mov
das
jge
mov
enter
inc
or
add
add
loopne
or
jle
add
add
pop
(bad)
adc
ror
mov
xor
add
or
push
and
stos
hlt
mov
add
mov
mov
mov
mov
cmc
stc
fisttp
bound
leave
jbe
mov
add
add
sar
js
jne
add
jmp
xchg
or
adc
jne
ja
and
add
add
sbb
fadd
es
dec
push
mov
mov
push
xchg
in
push
push
add
add
or
push
iret
ja
push
and
dec
stos
lods
add
cmp
mov
and
add
dec
add
add
add
out
push
push
xor
jne
ret
and
cld
lds
mov
add
ins
mov
push
and
imul
push
xchg
add
add
inc
mov
xchg
pusha
adc
sub
ja
and
add
loop
(bad)
cmps
fcmovnu
add
ja
add
(bad)
cmp
stc
jb
dec
jb
jle
loopne
lsl
add
add
ja
lea
lds
fs
xchg
adc
je
hlt
bound
jae
les
add
add
ds
mov
(bad)
xchg
push
cdq
jmp
(bad)
jmp
xchg
scas
cdq
and
add
add
fldenv
icebp
sub
cmp
jo
pop
outs
movs
(bad)
repnz
sbb
xor
add
add
adc
push
dec
test
daa
call
sbb
gs
repz
test
cmp
std
xlat
repz
add
add
mov
nop
adc
or
bound
inc
cmp
inc
cli
xchg
stos
mov
mov
add
push
ror
aad
rcr
adc
pusha
adc
test
add
pop
dec
arpl
aad
rol
add
add
adc
push
cmps
xchg
push
push
dec
mov
xchg
sub
es
or
js
sbb
add
pop
in
repnz
call
adc
enter
dec
stos
and
sbb
leave
add
add
shl
dec
les
xor
cmp
jnp
xchg
out
pop
lock
add
add
add
cli
mov
(bad)
cmp
es
ror
inc
sub
jge
sub
rol
loope
add
add
cmp
stc
pop
xlat
push
sar
inc
and
cld
in
adc
xor
cmp
mov
add
add
add
mov
mov
ret
jae
cmp
dec
cdq
sbb
adc
inc
mov
sbb
add
add
xchg
mov
jmp
sbb
pop
cmp
fsub
or
add
add
add
cmp
cvtps2pd
ret
or
aam
or
ins
sbb
add
add
pop
mov
xchg
xadd
(bad)
lea
ja
aas
or
cmps
leave
sbb
adc
dec
push
and
mov
sub
jp
inc
cmp
repz
jge
out
repnz
xchg
sbb
pop
pop
add
dec
xor
lea
push
add
add
mov
jno
xchg
mov
mov
ror
ja
adc
jl
nop
mov
add
mov
call
inc
jae
mov
aas
mov
mov
test
sub
inc
mov
add
add
into
mov
push
and
retf
pushf
les
dec
rcl
inc
xor
(bad)
arpl
add
ror
push
mov
adc
push
mov
sub
xchg
cwde
pop
mov
xchg
mov
push
add
xchg
data16
dec
xchg
or
sub
fbstp
jbe
add
add
in
scas
cdq
push
inc
mov
adc
add
jmp
hlt
xchg
test
xchg
mov
add
mov
dec
add
scas
jo
sbb
rcr
lahf
dec
xchg
ja
pop
cdq
loopne
push
and
add
dec
bound
dec
rol
dec
lahf
dec
je
add
xchg
add
mov
dec
sbb
ror
mov
push
push
add
add
dec
mov
mov
add
jle
rol
in
ror
idiv
push
add
add
jb
arpl
iret
dec
ss
adc
cdq
pop
adc
lea
push
jae
int3
loope
dec
jnp
add
add
inc
test
mov
dec
mov
or
push
hlt
daa
jo
pop
in
pop
jae
daa
sub
add
add
mov
mov
je
das
jmp
inc
or
or
adc
adc
push
push
jmp
sar
out
xor
imul
adc
push
pusha
mov
cli
add
js
add
add
scas
adc
test
jmp
or
outs
cmp
push
inc
in
xchg
add
out
int
and
add
dec
retf
jmp
inc
scas
cwde
adc
inc
not
loope
call
pop
pop
xchg
inc
lods
add
add
imul
push
ret
mov
popf
mov
call
mov
add
add
xor
inc
das
sub
call
sub
aaa
adc
or
sbb
icebp
pop
xrelease
add
add
xor
mov
out
jle
or
cmp
inc
pop
into
adc
pop
pop
add
add
mov
ror
adc
adc
jo
pop
rcr
fwait
dec
bound
and
loopne
pop
cmp
add
add
fstp
mov
mov
movs
sbb
dec
dec
ja
xor
out
jmp
pop
outs
xchg
adc
aad
jmp
add
add
(bad)
jp
nop
jno
into
or
inc
or
or
xchg
xor
repnz
cmp
jmp
jl
add
add
mov
add
mov
add
(bad)
pop
push
pop
jecxz
or
icebp
iret
or
push
fucomip
add
pop
add
add
or
mov
leave
in
and
fisttp
pop
push
and
dec
fwait
lods
loope
inc
pusha
mov
add
add
mov
dec
(bad)
and
or
mov
cmps
arpl
sub
sbb
cmp
dec
sti
add
add
dec
adc
lock
arpl
stos
jnp
adc
ret
inc
add
add
fstp
sub
scas
xchg
mov
(bad)
dec
add
sbb
bound
stos
mov
sbb
add
add
push
sbb
xlat
jns
pop
or
popf
aam
inc
retf
xchg
adc
mov
(bad)
(bad)
add
add
dec
cmp
pop
mov
and
or
lods
push
dec
iret
or
push
push
data16
cwde
mov
add
add
dec
mov
push
test
ja
sbb
pop
jecxz
inc
rcl
dec
out
in
mov
and
sbb
inc
aad
add
push
and
inc
adc
mov
rol
cmc
jnp
mov
add
pop
mov
das
dec
popa
and
aam
inc
mov
pusha
sbb
mov
add
add
fisub
jl
xor
push
dec
test
jb
sbb
and
add
add
repz
(bad)
pop
mov
inc
and
test
gs
pop
and
push
out
ins
add
add
inc
jnp
jne
or
in
iret
xor
xchg
pop
cmp
inc
push
retf
mov
add
add
adc
push
cmp
and
div
push
add
mov
mov
test
lds
add
add
sti
push
gs
push
and
or
push
jmp
and
dec
or
inc
jl
jge
add
add
jbe
leave
(bad)
rol
mov
or
pop
out
int
hlt
or
pop
jmp
dec
stos
sub
add
add
and
inc
test
sbb
mov
pop
xchg
and
in
or
test
inc
add
add
aas
enter
popf
jl
push
pusha
push
push
xor
je
pop
cmp
pop
or
sti
nop
and
mov
add
add
stos
and
mov
fld
mov
pop
shr
sub
or
jnp
dec
leave
add
add
aaa
loop
(bad)
out
mov
(bad)
stos
mov
push
sbb
pop
dec
scas
push
(bad)
ret
pop
mov
add
arpl
push
sbb
loopne
and
lds
loope
fwait
(bad)
mov
or
add
add
dec
ins
adc
sbb
out
mov
push
and
rcl
out
in
add
add
iret
cdq
popf
lock
and
sub
outs
nop
push
aad
xchg
(bad)
cmp
push
inc
popf
mov
fadd
add
add
ds
jmp
jg
inc
xchg
in
add
dec
das
lods
xor
add
sbb
daa
pop
retf
mov
js
mov
xor
mul
add
mov
stos
int
add
add
or
inc
push
cmp
(bad)
repz
dec
pop
movs
push
fs
pop
dec
out
repz
dec
cmp
loopne
add
add
data16
test
push
pop
inc
and
(bad)
and
cmp
cmp
pop
sub
inc
push
je
es
addr16
add
add
add
ds
mov
stos
adc
(bad)
iret
mov
or
jo
imul
fs
adc
daa
add
add
sbb
gs
push
and
inc
(bad)
or
jno
cmp
mov
lahf
cdq
jno
(bad)
fimul
add
add
xchg
arpl
dec
bnd
or
pusha
cmp
stos
cmp
jns
mov
push
mov
push
lahf
retf
call
pop
pop
fist
dec
push
mov
dec
loope
repz
and
imul
push
push
sbb
add
ins
stc
shl
(bad)
jo
(bad)
sub
or
cmp
xchg
stos
or
adc
add
add
out
mov
sbb
fs
cmp
aaa
das
mov
jne
push
sbb
adc
scas
gs
mov
call
add
pusha
inc
jmp
jmp
or
aad
or
push
lahf
jl
jp
xchg
mov
jmp
inc
std
and
sub
push
test
add
pop
add
push
add
or
mov
dec
dec
lods
pusha
mov
add
push
loopne
adc
add
mov
out
mov
in
mov
aad
fs
cmp
gs
data16
add
add
xlat
dec
xchg
or
fwait
adc
push
adc
leave
imul
ja
das
(bad)
jmp
push
fimul
add
add
push
shl
stos
fwait
xchg
pop
jmp
pop
xor
push
dec
mov
(bad)
adc
jmp
mov
add
add
ins
mov
out
pop
xchg
cmc
dec
loopne
in
push
and
fldenv
pushf
add
add
xchg
idiv
mov
cld
fdivr
call
fs
add
(bad)
in
dec
add
add
add
inc
fwait
adc
mov
or
rol
lahf
ficomp
cmps
sub
pop
jnp
mov
add
add
mov
rcl
cmps
pop
retf
dec
xlat
xchg
jp
dec
in
movs
and
scas
std
sbb
and
add
sti
sbb
dec
adc
inc
mov
test
rcl
daa
cmp
add
add
push
hlt
imul
mov
and
sti
or
pand
add
add
fbstp
jmp
mov
loop
push
and
jmp
pop
loop
mov
aam
jb
les
adc
add
add
jg
js
adc
sub
jl
mov
inc
adc
enter
addr16
leave
fistp
or
cs
xchg
mov
adc
fisttp
test
nop
pushf
add
add
push
or
std
push
jnp
leave
out
dec
or
lods
pop
and
loopne
inc
cmp
add
loope
xor
cli
mov
test
dec
lods
clc
imul
pop
add
add
xchg
push
adc
inc
pop
test
mov
int3
inc
aaa
test
push
(bad)
in
add
add
mov
aas
shl
(bad)
jg
enter
add
jmp
(bad)
and
jp
add
add
or
push
dec
jo
cmp
shl
adc
ret
ret
jne
movs
add
add
inc
push
push
test
and
dec
leave
aad
or
sbb
xor
jmp
xor
mov
mov
lods
cmc
fs
xchg
push
add
dec
xlat
stc
and
out
inc
enter
cld
imul
adc
add
mov
dec
pop
pop
inc
es
movs
dec
mov
push
ins
(bad)
dec
add
pop
push
cmc
add
add
lds
sbb
arpl
cmp
rcl
sub
dec
scas
cmp
add
stos
push
jmp
aaa
bound
add
add
iret
imul
dec
add
xor
cmc
mov
mov
jno
dec
and
push
mov
scas
jmp
push
shl
pop
add
mov
mov
ss
mov
push
or
lock
add
or
int
inc
mov
aam
pop
sbb
(bad)
dec
(bad)
ins
mov
dec
jg
xor
adc
add
add
and
mov
pushf
in
pop
xchg
xchg
or
sbb
inc
sbb
inc
or
add
add
or
inc
inc
cmps
leave
mov
or
or
jp
mov
js
mov
add
add
(bad)
test
ror
lea
lahf
cld
or
add
sub
sbb
cmp
mov
add
mov
test
jnp
into
icebp
bound
cmp
inc
outs
mov
call
mov
add
add
jg
pop
dec
clc
fsub
push
lahf
jbe
rol
or
test
out
std
mov
add
loopne
dec
and
jmp
cmc
in
iret
and
out
out
mov
or
adc
into
test
add
add
adc
lea
sbb
adc
jmp
mov
in
and
icebp
mov
adc
shl
inc
mov
icebp
enter
ja
mov
xor
adc
les
sbb
add
add
stos
xchg
or
pusha
cmp
sbb
push
mov
dec
in
jmp
xchg
push
lea
jae
mov
add
add
add
or
or
inc
pop
push
mov
dec
dec
test
dec
(bad)
mov
repnz
add
add
cs
ins
or
and
repz
sub
cmp
add
dec
push
mov
jmp
inc
add
add
jae
mov
or
xchg
mov
movs
push
jg
sub
add
int
into
shl
cmp
cmp
xor
xchg
mov
sahf
and
add
adc
stos
fst
outs
fist
movs
call
loop
mov
ds
add
add
daa
or
xor
push
dec
fcomi
push
mov
nop
push
sub
pusha
mov
mov
add
test
test
loop
add
test
dec
retf
xor
fsub
icebp
add
add
add
or
sub
les
test
push
inc
and
push
add
adc
pop
jmp
rol
jl
add
add
retf
push
and
or
inc
xor
dec
dec
jnp
dec
add
test
xchg
pop
add
add
xchg
jp
repnz
daa
jo
sub
lahf
dec
xchg
adc
xor
pop
or
enter
add
adc
jge
adc
xor
push
aaa
cmp
std
and
or
call
xchg
add
add
ja
lds
repz
and
dec
xor
cmp
pop
ror
mov
xlat
xchg
xchg
fist
nop
(bad)
mov
in
imul
mov
icebp
enter
call
inc
pop
add
or
mov
push
mov
pop
inc
cmps
out
sub
push
repz
pop
in
retf
mov
cmp
add
add
pop
stos
xchg
data16
lock
sub
dec
adc
inc
cld
les
xchg
pop
jge
cmps
xor
pop
add
add
xlat
push
(bad)
xor
lahf
call
and
sbb
push
push
in
xor
mov
xor
push
add
pop
mov
or
and
or
fcom
stc
scas
stc
or
stos
mov
add
add
repnz
inc
pop
test
mov
push
sub
or
or
push
mov
lds
add
or
and
and
mov
push
aad
mov
add
add
repnz
sbb
shl
lock
jmp
add
cmp
inc
mov
inc
and
xchg
(bad)
inc
add
add
xor
mov
movs
popf
jp
ds
mov
sbb
ins
loopne
pop
aas
add
add
and
retf
sub
adc
or
fsubr
or
dec
add
add
ss
cmp
push
push
cmp
mov
fdiv
mov
dec
or
dec
adc
add
add
outs
retf
push
out
mov
cmp
and
push
mov
jg
xlat
(bad)
jmp
xchg
daa
adc
sub
adc
cmc
nop
lods
mov
cmc
jo
icebp
xchg
adc
sbb
jmp
jns
add
add
xchg
adc
movs
sub
mov
fcom
jae
push
sti
and
add
add
or
or
fsubr
jle
stc
cld
pop
jl
mov
fist
fwait
cs
imul
mov
inc
jle
stc
xor
jmp
inc
adc
add
xchg
cmps
pop
push
into
cmp
imul
add
add
pushf
mov
outs
lds
fs
jne
jecxz
and
fs
dec
(bad)
into
push
or
push
push
inc
add
add
in
int3
lea
sbb
int3
adc
sbb
xchg
leave
adc
or
sbb
add
add
movs
loop
sub
mov
rol
das
cmp
push
mov
(bad)
inc
mov
add
lahf
sbb
add
fs
stos
les
cs
std
fcomp
pop
dec
stc
and
cmps
add
add
add
adc
das
jmp
sar
sbb
or
ret
mov
jno
mov
sub
add
add
xchg
add
add
push
mov
mov
cmp
sub
ja
pop
imul
imul
jb
hlt
mov
cwde
xchg
fmul
mov
int
nop
or
stos
xor
lea
fmul
int3
je
add
add
and
jo
push
mov
adc
movs
add
sar
or
add
add
ret
sti
mov
mov
pop
ins
ins
in
sub
idiv
cmp
ds
daa
add
add
les
jmp
cmp
dec
enter
fprem
mov
call
loope
add
add
dec
sar
mov
jle
jno
add
in
xor
add
jge
ja
jbe
outs
test
xor
test
push
dec
inc
scas
add
add
jle
mov
inc
add
fst
mov
movs
sub
push
mov
add
jo
test
xor
daa
or
cwde
push
jne
xchg
cmp
test
add
lods
push
sbb
mov
jmp
ret
jns
jle
mov
lds
das
push
leave
add
add
les
rcl
add
xchg
pop
fnstsw
pop
mov
fnstenv
inc
adc
sub
add
add
pop
push
cmp
xor
push
lock
jge
les
cmps
dec
cmp
sar
dec
add
add
mov
mov
pop
hlt
test
jae
and
xchg
mov
(bad)
jnp
std
xor
rol
add
push
aad
das
gs
push
cwde
lods
mov
mov
mov
xchg
movs
test
call
retf
rcr
add
add
dec
adc
sub
mov
(bad)
add
rcl
cs
clc
xchg
test
add
add
adc
push
mov
movs
test
or
sbb
pop
(bad)
add
add
movzx
add
adc
lds
sbb
push
mov
ror
mov
imul
aam
push
jns
shr
fs
sub
jmp
(bad)
jns
add
add
add
nop
adc
and
pop
and
dec
(bad)
mov
test
inc
xchg
push
loop
(bad)
add
add
xchg
mov
dec
cmp
loopne
int
dec
mov
mov
inc
and
cmps
push
cmp
shl
rol
add
add
test
mov
dec
dec
jnp
out
dec
mov
sub
stc
arpl
add
add
push
mov
xchg
push
bound
push
test
inc
dec
dec
push
and
test
test
add
add
mov
pop
inc
dec
add
arpl
ins
addr16
xchg
jno
xchg
inc
add
add
sbb
sar
or
adc
and
lods
mov
fs
dec
lds
add
add
and
push
in
inc
dec
dec
ins
xor
adc
lods
bswap
adc
pop
jge
or
add
add
push
xor
adc
and
into
pop
mov
mov
aam
in
imul
imul
add
adc
and
mov
mov
dec
or
xchg
rcl
mov
sub
inc
pop
shr
add
mov
jecxz
fdiv
xchg
jl
push
inc
retf
mov
popf
jo
mov
mov
xchg
mov
add
push
inc
jg
xor
xchg
das
mov
add
shr
dec
mov
test
mov
mov
and
enter
pop
adc
test
sub
fidivr
aaa
xor
adc
fst
inc
sbb
add
add
mov
sbb
cmp
mov
push
cs
std
push
cs
add
add
adc
push
mov
in
in
cmp
dec
mov
inc
push
movs
push
adc
ja
add
xchg
test
in
jle
cmp
push
sti
popf
xchg
rol
int3
dec
stc
and
rcr
sub
cli
test
pop
mov
test
test
push
jl
jmp
aaa
pop
inc
xor
inc
pop
push
inc
sbb
test
enter
cmp
sub
jmp
push
or
into
add
add
adc
arpl
cmp
add
sbb
inc
rcl
sbb
or
push
cmp
cwde
(bad)
pop
mov
fchs
loopne
adc
fsub
aad
adc
loopne
fsub
enter
add
add
adc
xor
jno
adc
jbe
aam
not
pop
fstp
sbb
sub
add
add
push
mov
enter
fistp
add
push
cmp
mov
push
inc
inc
mov
add
mov
in
cmp
mov
sbb
loop
push
jl
or
push
jge
push
cmp
add
add
inc
dec
cmp
adc
adc
push
cmps
ins
rcr
mov
call
add
add
xor
mov
scas
fisub
outs
xchg
mov
jne
inc
and
sbb
xchg
fsub
outs
add
add
imul
cmps
fcom
jnp
or
mov
dec
jg
push
int3
cmp
in
(bad)
test
add
add
xor
push
loopne
adc
sub
adc
cmp
cld
add
pop
hlt
ins
mov
push
(bad)
add
jg
mov
fld
mov
jno
inc
adc
push
and
in
les
add
add
mov
mov
cmp
test
push
les
adc
add
jb
mov
add
add
dec
pop
rcl
out
andnps
iret
setg
sbb
jp
loopne
loopne
in
push
inc
in
add
add
mov
cld
xchg
dec
cmp
jmp
add
pop
and
shl
sbb
loopne
add
add
sbb
xchg
(bad)
scas
mov
mov
and
pop
shr
mov
or
add
add
iret
test
and
push
jae
xchg
sbb
int3
scas
cmp
or
sbb
mov
xor
fadd
pusha
pop
fisttp
aad
int3
aaa
adc
mov
add
popf
mov
in
sub
pop
and
inc
retf
mov
add
int3
clc
sbb
add
je
pop
call
mov
adc
movs
outs
mov
push
pop
sti
sub
rol
add
add
fdivr
shl
inc
push
mov
add
mov
inc
sbb
add
add
sbb
arpl
or
push
xchg
xchg
(bad)
pop
dec
call
aam
sbb
sar
imul
add
add
shr
jle
bound
add
std
xchg
repnz
xchg
adc
in
mov
or
add
add
in
cld
retf
jb
sbb
or
jns
sahf
sbb
cmps
sbb
cmp
jae
pop
mov
sub
add
pop
push
push
xchg
lods
mov
add
outs
(bad)
js
jne
ja
call
dec
mov
add
add
inc
xchg
pop
or
or
or
mov
sar
or
pop
out
adc
push
push
and
test
add
add
mov
ret
sub
fwait
loopne
pop
add
into
(bad)
xor
xor
jne
int3
(bad)
scas
add
add
call
push
push
adc
sbb
cmp
div
std
shr
mov
sub
nop
add
add
mov
cmp
push
mov
mov
xchg
cmp
pop
es
daa
jmp
push
and
add
add
leave
mov
cmp
bswap
pop
test
jne
push
sbb
lods
add
mov
daa
mov
push
add
add
and
xchg
leave
push
pusha
dec
pop
pop
push
jmp
arpl
cmp
je
and
add
pop
fdivrp
gs
sub
popf
push
push
sbb
dec
retf
sbb
das
mov
sub
sbb
add
add
shl
pop
cmp
jne
xchg
dec
stos
inc
adc
jae
push
jno
xor
add
add
inc
ins
push
popa
dec
gs
pushf
lods
adc
pop
inc
sbb
in
adc
rol
jecxz
repnz
cmp
add
out
push
add
mov
dec
or
stc
push
xor
inc
fwait
add
sbb
pop
xlat
jl
cmp
je
scas
add
add
movs
shr
es
and
retf
xchg
jne
leave
ja
imul
pusha
dec
mov
push
cmp
add
dec
les
adc
mov
into
push
mov
aam
pop
push
out
mov
xlat
or
xchg
scas
or
mov
movs
lods
cli
mov
ret
in
loopne
mov
jns
sub
push
or
bound
add
pop
jnp
push
retf
fs
sub
rcl
(bad)
dec
movs
jge
push
imul
nop
mov
nop
adc
mov
xchg
fldcw
stc
or
leave
or
jbe
mov
pop
sti
ja
add
add
jbe
inc
push
push
or
scas
call
xor
scas
inc
pusha
movs
dec
or
pop
mov
cmc
add
add
push
inc
sub
pop
sar
and
out
(bad)
pop
mov
xor
jmp
movs
push
xor
jmp
into
add
adc
sub
xchg
retf
ja
(bad)
and
dec
dec
add
or
add
add
mov
dec
aad
mov
xor
mov
pop
jno
je
mov
push
jo
mov
add
out
jnp
movs
pop
xchg
sub
sub
movs
movs
jle
outs
retf
jne
lea
or
into
mov
add
add
mov
push
sub
xchg
cli
cmps
or
add
jns
mov
adc
add
aam
xchg
test
add
div
aaa
xor
pop
or
retf
or
add
add
jmp
idiv
(bad)
mov
lahf
pop
std
sub
pop
sub
dec
enter
or
add
add
cmp
jne
mov
add
mov
pop
xchg
mov
sbb
adc
jo
add
add
add
leave
iret
(bad)
sbb
lods
dec
dec
jb
inc
add
jg
outs
lea
shl
icebp
add
add
sti
sub
mov
push
jp
push
adc
add
dec
in
jmp
cmps
outs
lds
enter
jmp
add
pop
jmp
clc
sti
ins
cmps
sbb
movs
jae
std
adc
int
xor
add
add
mov
je
aam
push
push
(bad)
call
and
inc
xchg
in
add
add
out
cmps
jg
repnz
jle
dec
mov
mov
xor
dec
cld
pusha
fistp
jne
imul
add
mov
xchg
cmc
test
mov
adc
out
mov
sbb
jle
add
add
adc
pop
(bad)
ss
xor
push
mov
in
inc
dec
or
jnp
jbe
push
mov
jp
mov
add
mov
and
bound
jg
retf
adc
jmp
imul
sub
add
add
and
adc
jns
hlt
je
cld
repnz
test
mov
aaa
xor
add
add
mov
adc
xchg
mov
xchg
mov
leave
cmp
lock
cmp
test
das
mov
add
add
mov
gs
test
pushf
cli
loop
add
dec
movs
adc
adc
push
add
add
and
pop
ja
mov
into
sub
adc
cmc
jnp
mov
add
add
push
xchg
xor
xlat
lds
mov
or
cmc
inc
fst
and
(bad)
cwde
loop
add
add
inc
ret
rol
pushf
sbb
adc
mov
repz
push
push
add
add
cmc
ds
sub
mov
(bad)
das
enter
sub
sbb
mov
add
add
das
cmp
cs
inc
popf
ja
add
imul
dec
inc
test
or
add
add
je
lea
aad
aad
xor
stos
and
mov
adc
dec
adc
add
push
pop
jmp
sub
outs
push
enter
or
inc
hlt
mov
and
add
add
mov
mov
shr
retf
call
xchg
push
test
push
push
add
add
xchg
inc
adc
fnstenv
and
movd
aaa
fsubr
movs
std
xchg
lahf
push
add
add
rcr
dec
jmp
adc
pop
inc
loope
fdivr
les
xor
sahf
fild
sar
sub
inc
sub
test
inc
clc
dec
mov
or
xor
push
sub
xchg
xchg
out
test
add
add
call
jg
(bad)
jo
and
push
mov
sub
jo
and
jns
add
add
fcomi
retf
inc
dec
pop
mov
gs
jmp
inc
out
adc
sbb
dec
inc
test
sub
out
xchg
daa
dec
shr
fbld
dec
dec
xchg
cmp
(bad)
add
rcl
adc
and
mov
dec
fbld
sub
pushf
stc
jno
ss
jecxz
dec
push
pop
add
add
mov
cmc
or
fistp
add
push
in
clc
dec
(bad)
jmp
or
inc
idiv
int
mov
test
mov
jo
je
push
or
dec
je
or
je
jo
mov
cmp
add
add
push
pop
or
loop
sbb
and
push
mov
sub
push
nop
ins
pushf
sub
fs
add
add
sti
icebp
or
dec
out
ja
repnz
sub
pop
sbb
sbb
dec
mov
leave
add
add
adc
cmp
cmp
or
mov
xchg
mov
pop
shl
rol
mov
add
add
jl
adc
gs
pop
push
jl
ficom
sub
addr16
sbb
enter
add
add
and
retf
push
mov
sti
jecxz
enter
pusha
fs
lds
or
sbb
repz
xchg
pop
adc
nop
sbb
addr16
pop
mov
out
add
adc
sbb
add
jp
mov
shl
cli
push
and
mov
push
mov
cmps
add
add
mov
push
cli
mov
bound
sbb
and
mov
mov
add
add
jp
add
jge
jne
push
and
and
or
sub
mov
push
add
popf
mov
test
sahf
push
dec
cmp
mov
mov
mov
cmp
push
add
add
sar
les
das
cmc
pop
sbb
out
mov
mov
push
inc
lock
rol
add
mov
mov
and
loopne
cmp
(bad)
sub
fldcw
add
add
add
mov
sub
retf
inc
and
call
shr
mov
xchg
mov
add
add
daa
icebp
in
or
push
xchg
adc
repz
xchg
loopne
sub
fdiv
not
add
test
jbe
or
cdq
mov
shl
cmp
cmp
lods
dec
leave
or
add
add
xchg
add
in
paddsb
adc
push
cmp
push
scas
inc
pop
je
jb
add
add
dec
xchg
mov
lea
fsubp
les
adc
bnd
xchg
mov
test
cmp
mov
add
add
or
xchg
les
ds
cmp
xchg
jne
lock
mov
retf
(bad)
push
sldt
add
mov
push
xchg
mov
jle
push
pop
(bad)
(bad)
rol
sbb
inc
loope
add
add
ds
(bad)
mov
xor
adc
mov
sbb
pop
adc
scas
retf
add
add
shl
mov
inc
rcl
test
addr16
(bad)
(bad)
jmp
ret
add
add
xchg
or
adc
aam
cmp
and
pop
in
outs
dec
jmp
add
and
out
int
fnstsw
or
push
mov
xchg
sub
(bad)
ret
add
add
pop
aaa
adc
loope
ja
scas
cdq
sbb
int3
jnp
cmps
fstp
retf
push
jp
pop
ret
add
add
or
je
les
jmp
lods
cmp
push
inc
pusha
or
cmps
dec
or
and
add
add
das
pop
mov
fst
or
pop
mov
push
mov
(bad)
outs
add
add
dec
mov
jle
xor
and
ror
pop
imul
popa
cmp
add
add
outs
imul
pop
pop
imul
in
mov
addr16
and
clc
hlt
add
add
movs
iret
cmp
mov
and
mov
add
stos
out
lods
enter
ja
add
add
dec
mov
xor
ror
test
movs
mov
inc
adc
ins
(bad)
adc
and
add
add
inc
int3
int3
adc
cmps
sbb
outs
adc
mov
les
(bad)
mov
dec
add
add
mov
push
and
sbb
in
inc
test
xor
call
gs
movs
sbb
xchg
add
add
xchg
dec
pop
or
adc
or
jmp
ds
test
test
shr
hlt
pop
add
add
in
aas
inc
stc
fsubr
test
and
cmp
pop
inc
jle
lock
add
add
outs
dec
inc
in
in
cmp
mov
and
ud0
mov
fcom
addr16
in
mov
xor
mov
enter
(bad)
and
jb
test
cmp
cmp
rol
add
xchg
sub
add
movs
inc
lods
out
adc
and
xor
and
leave
sti
pop
and
add
add
inc
scas
jp
test
(bad)
and
loope
xchg
shr
xor
in
sub
add
add
and
outs
mov
add
mov
dec
cmp
aaa
sub
add
push
repz
cs
nop
das
hlt
stos
sahf
mov
lods
jno
les
push
pushf
inc
dec
xor
add
add
push
int
and
mov
push
adc
sub
xor
adc
ror
scas
aam
xor
add
add
mov
sub
xchg
push
xchg
(bad)
int3
mov
pop
pop
adc
jecxz
adc
stos
xor
add
jmp
stos
das
rcl
push
loopne
xor
mov
daa
fldenv
mov
scas
ins
rol
add
add
mov
sbb
adc
dec
add
jmp
inc
mov
jnp
mov
and
add
add
dec
fist
or
bound
cmp
sub
and
test
sub
add
add
in
push
mov
cmps
mov
dec
mov
jb
leave
in
mov
pop
sub
sar
cmps
sub
aas
dec
cdq
mov
mov
or
cmp
scas
pushf
ret
sub
add
add
cmp
dec
idiv
pop
mov
mov
cmp
or
or
sbb
or
in
mov
add
add
arpl
pop
icebp
mov
sub
xchg
fdiv
xchg
add
xor
(bad)
sub
push
popf
pop
mov
add
add
xor
cmp
and
push
add
push
outs
jo
dec
scas
into
aad
xor
rol
add
add
pop
mov
xor
or
jp
or
loop
mov
push
mov
add
add
jg
mov
ja
nop
mov
scas
std
xchg
dec
adc
outs
mov
jnp
mov
movs
cli
pop
xchg
add
xchg
mov
call
iret
adc
push
mov
sbb
add
int3
inc
add
add
std
xchg
xchg
jb
rcl
mov
mov
cmp
pop
lods
push
pop
push
xchg
pushf
push
dec
mov
into
add
add
daa
sbb
or
mov
repnz
xor
movs
sbb
sbb
xor
sbb
pop
int3
xor
popf
pop
adc
adc
sbb
mov
mov
leave
adc
push
repz
add
sub
mov
rol
out
xchg
in
rcr
cmp
(bad)
fadd
add
add
popf
std
xor
in
dec
xor
aam
mov
ficomp
or
leave
jle
adc
dec
add
add
stos
xor
mov
adc
lea
and
rcl
and
adc
jns
int3
pop
and
push
out
out
loop
add
add
xchg
adc
jb
cdq
adc
mov
adc
cmp
jg
in
out
push
out
pop
aam
and
add
add
lds
xor
shl
ret
dec
stc
stc
push
or
xchg
sub
mov
das
sub
add
add
mov
inc
js
jp
jge
xchg
xor
retf
inc
lds
add
add
xchg
and
test
mov
push
dec
sub
mov
fnsave
fs
add
add
ss
das
sub
adc
xor
mov
jae
sbb
retf
adc
sbb
or
test
(bad)
sub
aam
xchg
cmp
popf
gs
jo
sbb
lods
aam
push
daa
push
inc
adc
add
add
loop
xchg
mov
mov
inc
sti
push
mov
sub
pop
dec
xor
inc
mov
cmps
add
add
inc
pop
loope
imul
cmp
rcl
mov
push
call
ret
loopne
je
sar
mov
add
add
add
mov
jae
mov
ror
les
mov
cmc
int
and
mov
mov
add
add
jmp
lock
(bad)
scas
repnz
add
sbb
bnd
jle
push
xchg
pop
inc
call
add
jge
(bad)
jmp
cs
sbb
enter
sbb
bound
and
push
imul
add
add
push
pop
mov
mov
push
push
jmp
lock
pop
je
jne
jbe
xchg
mov
add
xchg
and
adc
or
imul
cmp
(bad)
jmp
pop
out
and
cli
test
add
add
sbb
xchg
jb
pop
and
inc
rol
call
adc
add
or
test
xchg
mov
mov
rol
xlat
sbb
mov
add
add
or
pop
(bad)
shl
push
cmp
fild
or
stos
push
fsubr
retf
leave
(bad)
stos
push
xor
in
aam
mov
pop
sub
push
les
pop
xchg
leave
jge
push
xchg
lock
(bad)
add
add
(bad)
in
(bad)
jmp
mov
pop
push
sub
mov
add
add
je
(bad)
loopne
inc
aad
lahf
adc
jle
inc
or
push
xlat
dec
jns
dec
add
inc
popf
add
add
(bad)
rcr
jge
adc
xlat
inc
push
push
push
int3
clc
retf
pop
mov
dec
or
pop
test
add
jmp
cmp
fnstsw
jo
push
lds
bound
add
add
push
xchg
sub
xchg
push
push
mov
(bad)
dec
push
cli
jae
lea
xchg
push
and
add
xchg
or
add
adc
aas
mov
inc
pop
and
aas
cmps
fst
add
or
push
imul
rol
mov
test
cli
push
inc
push
mov
ds
pushf
test
add
lds
cmp
or
inc
or
cmps
pushf
test
adc
fcmovnbe
xchg
sub
lods
nop
test
add
add
rol
jg
psrlq
push
sub
fwait
sub
push
push
add
add
and
add
xor
je
mov
cld
or
push
jne
adc
add
add
xlat
and
inc
and
cs
movs
inc
push
pusha
inc
mov
scas
mov
fild
add
add
iret
(bad)
xchg
mov
sbb
adc
add
mov
inc
cmp
popf
mov
add
mov
in
dec
xchg
sbb
repnz
or
push
jbe
movs
frstor
popf
fcomp
add
add
je
jmp
dec
inc
sub
in
es
hlt
add
cdq
icebp
pop
fcom
popf
pop
aaa
inc
push
and
add
add
lea
cmp
add
jo
icebp
shl
cmp
inc
sub
mov
push
daa
inc
fst
add
add
sti
pusha
jne
mov
enter
dec
add
lods
cli
div
out
add
cmps
pop
rcr
add
add
(bad)
pushf
or
and
push
call
aaa
rcr
and
mov
add
pop
sti
adc
loop
test
push
adc
dec
mov
dec
es
jle
xor
adc
add
add
push
imul
mov
js
and
or
popa
add
add
popf
dec
dec
pop
enter
adc
enter
and
pop
adc
enter
mov
movs
jl
push
xor
add
add
and
pop
push
adc
je
test
sbb
sbb
in
loopne
push
add
add
sub
sbb
enter
sbb
push
pop
pop
sbb
in
loopne
push
sub
and
lock
add
pop
shl
adc
add
add
repnz
push
aas
mov
push
aam
daa
mov
xor
xor
cld
sub
push
add
add
or
sub
mov
ret
xchg
xor
mov
cld
das
jno
lea
and
or
pop
add
add
add
push
pop
xor
std
mov
and
shr
ss
aaa
iret
lock
push
add
add
jg
add
push
cmp
sbb
cmp
inc
pop
repnz
xchg
cmp
add
add
push
pop
inc
sbb
inc
pusha
mov
adc
mov
xor
mov
add
inc
xor
pop
and
call
nop
mov
popa
push
rcl
mov
add
add
mov
push
stos
leave
(bad)
jl
vphaddubd
add
add
and
jae
popa
add
add
add
jnp
add
mov
movs
lods
xlat
adc
mov
clc
push
jg
adc
sar
add
add
mov
dec
inc
mov
mov
call
cmp
mov
sar
add
cld
shl
inc
pop
and
sub
adc
dec
and
mov
repz
add
mov
lods
in
mov
sbb
lea
mov
test
scas
icebp
outs
sub
push
adc
mov
add
dec
jmp
xor
shl
push
push
mov
sbb
shl
aad
clc
add
add
inc
jae
call
sar
sbb
push
outs
lahf
rcr
mov
(bad)
fiadd
add
add
call
pop
test
cmp
or
push
ja
mov
jnp
mov
add
add
and
inc
inc
(bad)
outs
cmps
adc
pop
ja
jo
dec
addr16
jnp
nop
clc
mov
mov
sti
cli
inc
ror
in
shl
push
jno
jle
adc
clc
(bad)
jmp
add
add
mov
adc
scas
(bad)
add
push
xlat
inc
stos
xchg
in
adc
add
add
mov
and
fwait
(bad)
shr
iret
xchg
clc
and
adc
pop
add
add
add
adc
rol
jg
lods
lods
jg
add
not
(bad)
in
inc
mov
add
add
aas
lods
lock
das
dec
inc
inc
push
add
mov
in
jb
sbb
ret
and
cld
adc
add
shr
mov
cdq
shl
gs
ret
clc
xchg
jp
push
lock
ror
or
add
add
arpl
call
or
gs
inc
jo
shl
push
xlat
call
sub
add
add
inc
mov
sbb
jge
xchg
les
test
out
dec
(bad)
mov
in
pop
add
shl
add
cmp
adc
or
mov
cmp
lds
and
iret
add
add
xchg
mov
or
xor
inc
or
dec
push
and
inc
or
mov
mov
sub
add
or
out
xchg
push
and
test
pop
js
mov
in
inc
inc
and
cdq
jo
push
add
add
loop
adc
mov
and
and
mov
mov
pusha
jbe
sahf
add
pushw
je
xchg
jb
xchg
icebp
movs
shl
add
add
xchg
fldenv
out
into
push
into
stos
adc
inc
mov
push
adc
add
jl
push
xchg
adc
movs
scas
fisub
add
adc
dec
stc
pusha
scas
ret
stos
add
aaa
push
add
movs
repnz
pusha
retf
sub
popf
adc
xor
(bad)
ds
push
push
mov
add
cmps
jmp
clc
stc
aam
push
push
fnstenv
add
push
adc
push
or
push
adc
add
add
sbb
ins
and
(bad)
jno
jp
sbb
enter
loope
repz
mov
xchg
mov
add
add
dec
std
bound
jle
cmc
adc
shl
and
imul
sub
add
pop
int3
push
mov
stos
push
mov
fstp
jno
nop
jmp
popf
mov
push
mov
add
add
lds
push
push
and
int3
pop
icebp
ds
inc
(bad)
inc
(bad)
psrlq
or
mov
call
add
out
jle
dec
xor
mov
into
push
in
enter
mov
and
xor
adc
sar
sbb
(bad)
ins
pop
push
inc
xchg
lea
sub
sub
lock
jb
dec
mov
dec
jnp
fistp
jbe
mov
sbb
add
add
sub
inc
call
cmp
jle
inc
mov
pop
jnp
fimul
add
nop
pop
jp
inc
cdq
fs
scas
aas
aas
pop
cld
push
enter
dec
jp
xor
cmp
nop
or
add
add
jae
jb
xchg
lods
xor
mov
push
out
mov
mov
movs
or
jne
adc
pop
add
add
xchg
pop
mov
imul
mov
dec
cld
stos
push
mov
xchg
shl
add
add
xchg
lods
push
cmc
xor
icebp
jne
mov
mov
inc
xor
add
das
cwde
jp
or
ja
add
add
ds
pop
ds
or
mov
mov
lock
aaa
add
iret
and
add
add
cmp
jbe
mov
dec
xchg
cli
push
movzx
mov
mov
xchg
adc
mov
add
lods
sbb
xchg
adc
inc
cmp
jb
enter
jno
sahf
push
bound
xor
movs
add
add
clc
outs
mov
test
push
mov
popf
ror
jmp
ret
xor
mov
pop
add
stos
fwait
test
add
sub
mov
ss
dec
add
sbb
stc
jo
cmps
adc
pop
add
add
ins
mov
push
mov
adc
je
mov
stc
or
push
push
and
or
push
repz
jae
add
add
jae
pushf
jnp
dec
in
loopne
push
popf
cmps
and
mov
scas
mov
push
fld
mov
add
add
sub
cmps
inc
add
jmp
ss
and
or
adc
ds
cs
icebp
enter
add
add
sub
mov
shl
mov
cmps
jnp
cmp
push
sar
(bad)
fild
dec
adc
push
je
jmp
add
ss
mov
(bad)
bound
jecxz
jl
jmp
or
add
add
push
call
(bad)
xchg
stos
(bad)
cmc
add
mov
je
mov
stc
xor
mov
xor
lock
jle
(bad)
rol
shr
repnz
stc
cmps
aad
scas
add
add
sbb
movs
push
cmps
cmp
dec
and
call
clc
cmp
rcl
add
add
shl
stc
movs
pop
or
pop
and
pop
push
mov
movs
push
push
dec
mov
cmp
add
add
jae
mov
lea
pop
fiadd
xor
rcr
xor
bound
enter
jae
clc
jmp
in
add
add
fdivr
dec
push
mov
mov
mov
retf
add
jns
mov
call
fidivr
add
add
add
mov
iret
jnp
cmp
test
xchg
imul
sbb
or
pop
add
mov
and
mov
and
sub
sub
nop
xor
add
movs
std
and
mov
xchg
add
add
xor
push
fist
mov
mov
xlat
inc
movs
jno
cwde
cdq
pop
pushf
cdq
daa
mov
sti
add
add
add
les
int
js
adc
test
jle
sbb
(bad)
push
shl
xlat
pop
push
popf
jbe
not
add
add
daa
pop
inc
jb
sbb
sub
xchg
fisub
pop
mov
adc
retf
xor
add
or
push
mov
xlat
and
sub
inc
and
sbb
enter
add
add
xlat
and
add
ror
cmps
push
sbb
pop
sar
xor
and
pop
int
enter
retf
add
inc
adc
mov
rcl
push
cmp
ret
add
pop
addr16
adc
push
ret
sti
sub
push
mov
xchg
push
mov
adc
adc
add
add
fld
rcr
popa
push
push
cmps
ja
sbb
sub
add
rol
add
add
inc
pop
ins
jnp
dec
pop
fpatan
rcr
pop
or
leave
mov
sbb
dec
sbb
add
add
add
in
cli
mov
and
cmp
dec
loope
xor
cmp
or
pusha
mov
add
mov
push
popa
sbb
nop
cmp
pop
rol
loopne
push
lea
add
add
pop
jo
add
and
data16
push
inc
or
mov
push
pop
pop
mov
std
ins
mov
add
adc
pop
push
ret
fwait
sub
jmp
push
pushf
push
loopne
les
add
add
add
sub
mov
loop
mov
daa
popf
ins
in
pusha
pop
lea
and
test
add
add
push
push
mov
mov
movs
adc
mov
(bad)
pop
adc
pop
add
add
aam
and
sub
push
enter
lock
push
or
outs
sbb
(bad)
and
add
add
push
jg
shr
add
adc
push
mov
loopne
push
(bad)
lods
jl
cdq
call
ret
add
or
jbe
and
popf
and
cmp
adc
jg
or
repnz
dec
or
je
add
add
aaa
push
outs
sub
enter
add
test
jl
push
loope
add
add
int
lahf
sub
je
dec
mov
lea
pop
push
xchg
push
popf
or
push
adc
add
add
xchg
test
sub
inc
cmp
cmps
sub
push
std
ret
cmp
adc
adc
add
add
dec
push
pop
jp
mov
lds
or
call
test
ins
test
std
add
add
cmp
test
std
inc
mov
dec
pop
std
pop
mov
push
xchg
adc
add
dec
into
or
push
mov
mov
adc
test
xchg
cs
add
add
test
jmp
sbb
(bad)
and
mov
cmp
test
dec
push
and
enter
add
add
retf
mov
dec
call
inc
sbb
push
icebp
sbb
std
std
mov
add
add
inc
enter
pop
push
jo
push
ins
sub
in
enter
test
add
add
sub
push
and
and
call
and
sub
inc
sub
or
push
push
test
push
aaa
mov
sub
nop
inc
enter
les
add
add
sub
pop
jmp
jbe
cmp
push
push
and
in
mov
jmp
sub
mov
dec
loope
push
add
add
and
sub
inc
push
dec
adc
aad
adc
call
push
mov
xor
adc
xor
push
ja
cmp
sub
xor
jmp
add
add
add
add
mov
je
out
js
mov
dec
sub
xchg
cmovp
jmp
cmc
mov
add
add
sub
sub
mov
sub
xchg
push
inc
and
sbb
and
add
add
(bad)
push
inc
and
inc
cli
mov
icebp
std
xchg
and
push
pop
push
push
adc
cmp
shl
push
mov
add
add
push
mov
sbb
sbb
push
pop
sbb
xchg
shld
cmp
xchg
push
mov
push
add
add
sub
and
sub
out
jnp
inc
push
jns
mov
jne
(bad)
aas
xchg
lds
add
add
(bad)
push
(bad)
mov
punpckhbw
ja
pop
or
mov
pop
or
push
test
fnsave
add
jns
punpckhdq
pop
sub
ins
in
sti
adc
cmp
pop
clc
jb
add
imul
mov
jno
add
add
push
mov
jno
clc
test
test
add
mov
xor
add
add
or
add
xchg
cmp
push
sub
xor
xor
add
test
jbe
pop
sub
adc
add
add
stos
jo
push
mov
and
mov
aas
xor
bound
sbb
xchg
or
dec
aaa
adc
add
cli
xchg
xchg
int3
push
jb
retf
xor
test
call
mov
je
inc
xor
mov
add
pextrw
xor
mov
fwait
(bad)
cld
and
mov
rol
imul
xchg
(bad)
mov
add
add
je
cld
jg
add
pop
imul
add
dec
rcl
mov
cs
add
jmp
mov
cmps
shr
fisubr
loopne
jle
add
xlat
add
push
dec
aam
mov
add
add
scas
xor
jne
int3
push
in
adc
jb
mov
jbe
push
je
and
inc
xchg
je
jp
daa
add
add
cs
(bad)
bound
push
jmp
xchg
add
sar
out
(bad)
bnd
xchg
lods
cld
or
shl
sbb
add
add
scas
push
dec
aam
mov
jl
lods
loopne
mov
test
adc
rcl
stc
add
add
inc
adc
and
lods
out
cmp
cmp
jae
dec
push
popf
fidiv
pusha
mov
add
add
call
add
in
sbb
dec
sbb
ds
mov
push
fdiv
mov
stos
js
mov
add
add
jne
hlt
imul
in
sub
sbb
daa
aam
rol
pusha
in
cmp
test
add
push
cmp
adc
and
adc
mov
push
fadd
fmul
loopne
add
add
cmp
xchg
outs
sub
out
push
add
cmp
xor
mov
xor
push
mov
mov
hlt
xchg
mov
inc
add
cmp
mov
mov
xchg
push
or
cmc
mov
jmp
xchg
mov
xor
mov
loop
inc
sbb
inc
or
int
stos
pop
and
add
add
out
xchg
in
mov
hlt
xchg
clc
push
mov
xchg
or
inc
push
jb
ret
add
add
sub
(bad)
enter
pop
adc
out
cmp
sub
js
push
out
push
jne
push
bnd
ret
movs
mov
add
jb
push
loopne
add
and
xchg
push
adc
push
adc
cmp
inc
add
add
add
sbb
xchg
add
sub
add
push
int3
adc
add
xchg
or
push
ja
add
add
clc
add
les
std
hlt
jbe
push
(bad)
pop
or
loopne
enter
popa
bound
pop
mov
push
or
mov
mov
xor
sub
pop
or
and
(bad)
mov
aam
iret
mov
idiv
les
dec
sub
or
add
push
push
cmp
adc
mov
test
mov
add
add
lahf
inc
push
adc
and
mov
dec
jge
clc
ss
push
push
sbb
lods
sbb
cmp
add
add
inc
add
sbb
add
nop
cmc
cmp
inc
add
sub
jmp
sbb
aad
add
add
mov
xor
enter
mov
mov
adc
push
push
fcomip
mov
add
push
int3
pop
jbe
(bad)
movs
cmp
push
sbb
fs
popf
jae
sbb
fst
add
std
mov
push
cwde
push
push
movs
push
inc
fadd
rol
arpl
and
in
imul
add
add
(bad)
std
cli
xor
mov
mov
in
xor
in
and
jl
xchg
mov
add
clc
add
sar
std
mov
push
les
stos
in
cmp
imul
add
add
dec
or
add
xchg
iret
push
or
std
push
leave
mov
or
add
add
fsubr
sub
cwde
test
inc
(bad)
inc
cmp
out
push
push
adc
stc
sti
add
add
and
mov
pop
fnstcw
add
in
and
inc
mov
add
stos
and
sahf
sub
push
mov
inc
loop
jl
shl
xchg
add
add
mov
mov
fsubr
sub
push
mov
repz
add
fs
add
add
add
xchg
jb
or
and
mov
aas
jno
xchg
sbb
repnz
adc
add
aam
sub
push
mov
jnp
movs
xchg
les
pop
cmp
add
dec
push
movs
stos
test
inc
test
mov
js
sub
inc
push
cmp
add
add
adc
xchg
retf
pop
je
hlt
cld
in
xchg
in
in
and
loope
add
enter
add
add
mov
test
inc
jo
cli
mov
clc
dec
aam
mov
lahf
inc
add
add
and
add
enter
lahf
popf
stc
dec
mov
mov
fdivr
xor
push
jmp
add
add
std
sbb
inc
sub
adc
pop
pop
add
or
xor
push
dec
xchg
les
mov
add
add
add
in
jg
jo
call
xchg
js
nop
xchg
(bad)
dec
daa
mov
lods
retf
adc
cmp
lods
add
add
das
lods
aam
push
(bad)
jb
cmp
mov
daa
hlt
add
ja
inc
inc
add
add
das
int3
icebp
in
lods
mov
out
fld
xor
out
pop
xor
bound
mov
push
add
adc
movs
dec
xchg
push
inc
repnz
das
and
movs
pop
ret
daa
js
pusha
dec
inc
add
add
cmc
or
pop
loop
jmp
adc
inc
in
adc
jno
jl
add
add
hlt
jmp
fld
or
mov
pop
mov
push
xchg
mov
and
loope
pop
sub
cmp
add
in
nop
leave
or
and
sar
mov
fucomi
add
out
xor
and
data16
push
movzx
add
add
push
dec
aad
mov
add
pop
jbe
sbb
xchg
or
pushf
ins
cmps
add
add
sahf
push
push
push
dec
fld
xor
and
imul
rep
hlt
xor
cmp
xor
add
add
push
push
ret
add
inc
cld
sbb
mov
into
adc
lods
cmp
add
add
push
xchg
nop
or
add
enter
(bad)
div
pusha
push
add
rep
movhlps
mov
add
add
rcl
inc
pop
inc
loope
gs
inc
dec
daa
stc
loop
div
and
lock
xor
add
add
fdiv
mov
or
sub
pop
and
mov
mov
idiv
add
add
je
lahf
and
repz
sub
in
jmp
sti
shl
jne
jae
adc
inc
in
dec
fwait
aam
add
add
mov
inc
sub
aas
and
push
jecxz
mov
ret
mov
mov
sub
xchg
adc
add
add
jge
inc
nop
pop
mov
ds
dec
inc
jle
test
xchg
jp
popa
pop
clc
pop
inc
cmps
sbb
fidiv
add
add
mov
inc
push
mov
out
add
add
rcl
and
ret
or
xor
push
add
add
call
xor
mov
dec
inc
add
cmp
jb
scas
cmps
push
pop
jmp
xchg
cmp
add
add
test
iret
mov
sub
jp
daa
fild
and
or
add
add
jge
push
clc
cmp
cmp
test
sub
jne
test
add
cmp
clc
mov
nop
push
jne
add
add
xor
movs
cmps
xor
inc
mov
cwde
adc
dec
aam
jge
adc
or
sub
add
add
and
ss
imul
sub
xor
or
test
push
add
add
test
adc
mov
dec
push
adc
cmp
out
daa
add
mov
mov
add
add
add
int3
out
div
mov
jns
jmp
in
cli
mov
cmps
sbb
or
add
add
daa
jl
push
push
sub
or
loope
and
hlt
das
iret
(bad)
mov
inc
les
test
add
pop
jnp
mov
jne
sub
jmp
jno
sub
fistp
pop
(bad)
daa
lods
xchg
and
(bad)
push
add
add
stos
sbb
into
push
movs
ja
imul
ja
inc
jne
xchg
inc
ret
mov
in
and
add
add
ret
cmp
push
cmp
imul
retf
mov
stos
sbb
call
cwde
xchg
add
add
or
cmps
dec
cmps
mov
push
mov
xchg
mov
xor
jae
inc
nop
loop
test
imul
jne
add
add
popf
call
cmc
inc
lea
dec
and
push
dec
dec
shl
iret
retf
add
add
imul
frstor
out
add
cmp
pop
inc
aam
inc
pop
mov
push
cmp
or
dec
mov
les
daa
or
imul
inc
mov
push
xchg
mov
add
add
mov
push
inc
je
call
repz
fs
lods
pop
push
inc
jnp
xlat
jnp
test
add
sbb
nop
les
jno
add
(bad)
bnd
aas
adc
lods
add
add
test
rol
mov
dec
lds
sbb
(bad)
jns
and
add
add
push
dec
push
mov
mov
xchg
inc
mov
dec
lods
ss
enter
mov
enter
mov
jb
out
ds
add
add
inc
mov
arpl
or
adc
fs
mov
mov
in
xor
or
add
add
test
adc
or
jae
bnd
jnp
shr
xchg
stc
out
imul
shr
add
add
sub
pop
cmp
call
mov
jnp
fld
and
inc
mov
add
add
outs
jne
movs
lock
div
cmp
and
push
or
pop
hlt
cmp
add
or
push
jno
cmp
repz
je
outs
push
retf
push
push
inc
inc
push
push
inc
add
add
cvtdq2ps
int
jmp
aam
cmps
ds
pop
inc
loop
push
mov
int3
in
sbb
add
add
cli
ficom
or
imul
jmp
or
push
pop
pop
jne
fsubp
add
add
call
sar
sbb
sar
add
pop
aas
pop
cwde
jo
es
xchg
aam
add
add
sar
add
ds
add
and
lea
pop
mov
shl
add
add
add
jb
in
ret
xor
dec
or
inc
and
or
lock
test
or
pop
mov
cmp
cli
adc
lods
outs
ret
cmps
in
or
dec
xor
push
ror
or
in
cmp
fist
pop
pushf
ds
out
mov
mov
sbb
outs
fstp
xchg
int3
and
add
add
inc
add
mov
dec
dec
out
cwde
dec
add
adc
add
adc
pavgw
mov
add
hlt
addr16
ja
push
xchg
into
lock
jl
ror
in
inc
test
and
add
add
xlat
test
inc
jmp
(bad)
fnstsw
cmp
mov
dec
push
dec
cmp
lea
add
add
mov
inc
fs
sub
movnti
dec
xor
nop
fmul
add
ror
add
and
or
and
cmp
test
push
inc
push
rol
add
add
add
add
dec
cmp
push
sbb
sbb
xchg
js
mov
add
pop
cmp
add
add
in
add
clc
femms
jns
mov
or
add
std
rol
(bad)
and
add
add
add
sahf
mov
xor
icebp
jno
popa
call
jno
popa
sti
lods
xchg
sti
inc
test
add
add
mov
lds
sbb
xchg
(bad)
scas
mov
cmp
dec
add
add
cmps
xchg
add
add
loope
or
in
inc
push
test
ret
mov
imul
sbb
adc
add
add
cld
fstp
xchg
shl
push
dec
adc
dec
scas
xor
adc
cmp
xchg
loope
push
add
add
popa
stos
movs
and
fdiv
xlat
adc
in
xor
pop
dec
inc
and
pop
inc
xor
outs
rcl
sub
add
add
movs
mov
xchg
lods
ss
adc
test
cmp
pcmpeqb
add
add
push
mov
mov
add
mov
adc
dec
pop
and
add
adc
test
mov
loopne
in
dec
push
mov
dec
and
mov
cwde
push
or
push
add
and
ficomp
mov
ret
adc
nop
xchg
xchg
add
ret
mov
xchg
adc
adc
push
dec
push
push
and
pushf
retf
mov
dec
add
dec
dec
mov
mov
jge
and
rcl
and
push
idiv
and
mov
jle
test
add
and
stc
test
ins
test
mov
mov
and
add
pop
inc
out
and
push
push
outs
inc
pop
and
aaa
dec
pop
in
sbb
jmp
test
pop
out
add
add
jo
inc
movs
push
nop
repnz
in
mov
push
pop
dec
or
add
add
xor
imul
popf
cmp
adc
arpl
push
sub
sub
add
inc
pop
lock
xor
xor
mov
sub
dec
xchg
test
cli
add
add
add
ret
pop
pop
ret
mov
sbb
inc
lods
jo
xchg
data16
sti
xor
and
add
add
jb
sub
mov
daa
push
shl
scas
call
inc
pop
movs
jmp
cmp
add
and
xlat
pop
hlt
add
nop
out
imul
adc
jmp
inc
inc
sub
add
add
mov
retf
mov
push
lea
xchg
push
add
mov
add
add
sub
(bad)
mov
sbb
dec
rcl
js
daa
adc
xor
or
xor
add
add
fld
rol
(bad)
ja
(bad)
or
push
inc
pop
sbb
out
std
and
inc
xor
add
rol
jo
and
js
sbb
jne
ins
rcr
add
add
add
add
ror
test
jmp
sub
rol
inc
aam
dec
jo
adc
push
adc
add
fmul
rol
lods
pusha
jmp
fcom
pop
pop
pop
pop
and
js
xlat
dec
(bad)
cmc
rol
add
add
push
aam
jne
xchg
push
and
jmp
cmp
cmp
ret
add
add
es
or
xchg
sub
fwait
cmc
jmp
push
retf
sub
xchg
mov
add
pushf
test
mov
xor
movs
inc
movs
leave
push
pop
push
mov
mov
test
add
add
add
mov
fwait
dec
adc
adc
sub
outs
fxch
sub
xor
mov
add
and
xchg
int
or
xchg
imul
adc
pushf
xchg
sub
pop
stos
inc
repnz
shl
add
sbb
mov
and
ins
xor
mov
repnz
popa
out
enter
add
add
nop
and
neg
enter
jo
jb
retf
mul
in
mov
mov
add
pop
leave
jmp
mov
add
inc
mov
mov
xor
add
add
add
xor
inc
inc
lea
ins
(bad)
and
dec
inc
enter
in
and
add
dec
int3
add
add
mov
imul
pop
pop
rol
jne
scas
cmps
xor
movlps
fwait
test
add
add
xor
gs
ja
sub
jmp
push
test
pushf
xor
test
add
add
sub
inc
push
imul
jmp
fmul
test
inc
vmptrst
add
mov
mov
lods
fs
inc
pop
ror
hlt
repnz
test
add
add
push
dec
js
lock
aad
sub
or
xchg
stc
pop
or
add
add
rep
das
pop
add
sub
push
retf
cmp
aam
in
out
or
out
add
add
dec
loope
cmp
push
icebp
mov
clc
mov
popa
int
pop
jl
dec
cld
mov
pop
add
add
add
or
add
icebp
add
push
cdq
xchg
fucom
adc
leave
and
mov
add
mov
or
mov
jbe
jmp
pop
xchg
ds
ins
adc
push
pop
dec
or
add
add
add
inc
and
sbb
adc
in
inc
movs
pextrw
dec
adc
adc
add
add
bound
xchg
jl
repnz
dec
jl
push
sbb
push
inc
(bad)
mov
(bad)
dec
inc
shr
add
daa
je
jle
js
(bad)
push
xor
or
push
test
add
icebp
xchg
rol
add
add
inc
or
imul
and
retf
inc
lock
add
sar
mov
or
popf
and
pop
fwait
push
mov
add
sbb
neg
outs
mov
nop
push
or
rol
ror
add
fistp
call
add
imul
inc
je
retf
adc
mov
movs
(bad)
and
sbb
push
xchg
xchg
and
cmp
(bad)
aam
ins
imul
add
add
and
popf
push
sbb
test
xlat
(bad)
call
or
fbstp
aam
adc
ins
cmps
add
add
xchg
pop
bound
loop
push
call
or
adc
jne
(bad)
inc
add
add
cli
adc
movs
test
mov
mov
push
xchg
mov
add
(bad)
mov
add
mov
add
or
fist
add
(bad)
and
cdq
adc
or
jns
movs
(bad)
mov
push
iret
popf
inc
mov
outs
sub
add
add
data16
jno
dec
popf
sti
inc
test
mov
(bad)
mov
adc
add
add
adc
fsubp
rcr
push
fs
fwait
xchg
xchg
jmp
adc
fisubr
push
out
jmp
add
add
(bad)
inc
dec
mov
jg
xor
mov
test
jae
ja
add
add
outs
call
xchg
mov
loope
jns
cmp
add
add
add
xor
and
push
lea
push
mov
and
or
sub
fwait
add
add
mov
mov
outs
mov
popf
xor
push
gs
sti
outs
sbb
jne
and
inc
inc
add
add
add
repnz
pusha
jo
fcom
sub
sahf
rcl
mov
ds
sub
jb
sbb
push
mov
adc
and
mov
push
cmps
in
push
pop
dec
jbe
int
fs
add
add
fs
and
jmp
pusha
pop
jne
lahf
jmp
fwait
mov
xchg
(bad)
add
add
jge
mov
(bad)
leave
scas
inc
xchg
add
ret
sbb
mov
or
add
adc
out
(bad)
shr
fisubr
rol
inc
or
sbb
rcr
add
add
shl
jle
push
adc
or
mov
sub
mov
add
pop
sahf
push
pop
xchg
shl
add
fdivr
sahf
add
mov
nop
pusha
sti
adc
mov
test
fyl2xp1
jmp
add
add
sti
(bad)
sub
aam
and
dec
test
inc
cmc
push
sub
dec
add
or
rcr
add
add
push
sbb
les
jnp
inc
int3
daa
and
inc
loop
icebp
loopne
mov
sldt
add
mov
jno
pushf
scas
fbstp
mov
or
dec
adc
fwait
add
sub
add
daa
mov
cmp
mov
out
les
retf
into
aad
xor
int3
push
sub
push
and
xor
dec
jb
in
inc
cwde
and
lock
retf
add
add
mov
lock
in
ds
mov
(bad)
jae
push
jae
cmp
je
pop
sub
add
add
sbb
inc
ret
cs
(bad)
retf
or
nop
dec
mov
out
scas
popa
sbb
retf
jge
jl
fimul
add
add
bound
sbb
rcr
mov
cld
cmps
xchg
stc
cmp
cmp
add
add
fs
loop
leave
loopne
mov
retf
call
push
push
inc
dec
mov
clc
jo
stos
add
add
call
js
jmp
out
stc
jae
mov
clc
cmps
ror
rol
retf
push
iret
sbb
dec
cmp
add
add
cli
jno
or
and
or
jo
push
sbb
or
sub
push
push
sbb
pop
add
add
and
lock
jle
mov
push
les
pop
(bad)
inc
scas
movs
jno
mov
and
add
je
shl
aad
pop
pop
pop
pop
jmp
and
pop
test
scas
retf
mov
add
and
sub
into
adc
cmp
(bad)
or
shl
and
ret
shr
xchg
and
cmp
add
add
jae
jo
and
mov
or
dec
add
dec
mov
dec
mov
cwde
pop
out
add
add
add
jae
out
adc
scas
lods
sbb
sti
or
(bad)
in
cmp
add
scas
xor
dec
mov
cmp
in
dec
mov
sbb
call
mov
shl
adc
jle
and
dec
mov
inc
add
out
add
add
retf
cmp
add
pop
cmps
clc
shl
dec
fdivp
adc
(bad)
cmp
mov
xchg
add
add
jmp
sub
jecxz
add
lea
xlat
lea
inc
dec
sbb
aas
gs
add
add
add
xlat
add
and
scas
retf
inc
mov
lds
stos
cmp
xchg
fnstenv
sub
push
and
(bad)
sub
sub
adc
sbb
leave
pop
pop
and
fiadd
pop
sbb
dec
add
add
push
jmp
inc
test
mov
push
loop
scas
adc
ss
adc
add
add
add
scas
inc
stos
push
push
aaa
push
dec
cmc
mov
pop
ins
adc
sub
lds
xchg
stc
add
add
or
push
cmp
popa
pop
mov
sub
loope
mov
xchg
push
add
add
pop
cdq
out
xchg
and
inc
jnp
mov
fld
retf
pop
(bad)
jo
inc
adc
add
add
add
fmul
jg
push
pop
fadd
mov
mov
dec
dec
stos
outs
test
jo
sti
add
add
out
leave
in
arpl
int3
stc
sub
daa
shr
mov
ret
sbb
mov
mov
inc
fwait
add
add
push
out
mov
ret
xchg
movs
and
jmp
pop
ror
cwde
aam
mov
sbb
adc
mov
pushf
fs
push
rcl
xor
lea
bound
aam
adc
add
add
or
xchg
and
inc
xchg
inc
sbb
jle
push
js
jo
je
push
add
add
dec
fsubr
stos
sub
movs
inc
pop
repnz
adc
inc
cmp
(bad)
xor
(bad)
push
cmp
push
(bad)
jmp
mov
jne
mov
dec
push
pusha
lods
adc
sub
ror
fnstenv
add
add
sbb
sbb
inc
mov
add
xchg
jg
je
jnp
push
jmp
stos
and
xlat
inc
cmc
add
add
fidiv
xchg
or
push
std
xlat
rcr
je
lea
push
int3
or
pop
fwait
in
xor
cmp
enter
adc
add
or
inc
push
js
mov
or
or
xchg
add
add
daa
test
adc
repnz
add
dec
mov
cs
jmp
hlt
test
jl
lods
add
dec
rcl
jno
or
scas
scas
fcomp
inc
add
add
imul
jo
fwait
xchg
aad
sub
xor
inc
mov
dec
ins
inc
add
add
leave
nop
mov
push
jae
push
xor
jle
inc
(bad)
lock
and
stos
adc
cli
push
aaa
add
add
outs
retf
icebp
repz
push
repz
push
pop
inc
fmul
inc
mov
fcmovnb
pop
push
adc
add
add
out
or
dec
fcmovnu
and
jge
jns
cmp
cwde
mov
jo
sbb
add
add
gs
xor
adc
sbb
cdq
push
mov
mov
cmp
(bad)
push
into
push
cmc
dec
je
add
add
inc
mov
pop
cmp
mov
int3
push
or
pop
inc
je
mov
adc
scas
cmp
out
sbb
add
add
adc
inc
mov
cmp
les
cmc
add
push
cmp
ret
and
push
(bad)
mov
lea
push
mov
add
dec
dec
mov
adc
sub
add
add
loopne
add
inc
mov
les
add
xchg
and
or
rol
add
loope
add
retf
cmp
enter
das
sbb
or
add
add
add
lds
pop
stos
(bad)
adc
xor
jge
adc
cmp
jne
es
inc
and
add
pop
push
or
pop
sar
or
xlat
dec
mov
or
push
push
add
movs
xor
fmul
adc
rcr
int3
ret
pop
call
push
imul
mov
add
add
xchg
test
sbb
add
sar
(bad)
std
icebp
rcl
add
je
jo
add
add
or
(bad)
cmc
adc
rcl
or
xor
jmp
mov
scas
fdivr
fwait
lahf
and
add
jmp
or
sub
hlt
jp
adc
xchg
dec
push
push
(bad)
call
test
add
add
retf
or
and
js
dec
push
and
xchg
std
adc
mov
mov
push
je
mov
add
add
cmp
xchg
push
jl
cmp
popf
xlat
pop
std
cmp
retf
sbb
pop
iret
int3
scas
or
mov
add
inc
cs
add
cmp
adc
addr16
push
adc
push
sbb
push
add
sub
jmp
pusha
lds
jge
mov
hlt
jmp
jo
stc
test
mov
xchg
stos
add
add
sub
add
les
scas
xchg
js
adc
lock
or
adc
cs
mov
add
add
adc
retf
cmps
repz
adc
test
mov
jnp
xlat
mov
push
popa
inc
adc
xlat
jns
add
add
inc
add
ds
mov
jmp
push
ja
and
xor
jecxz
add
add
xchg
cli
and
popa
sbb
push
jbe
inc
xchg
je
cmp
xor
popa
stc
or
ss
(bad)
aas
repnz
add
xchg
adc
push
or
imul
pop
les
enter
push
or
xchg
jno
dec
add
add
imul
cmp
and
mov
outs
dec
dec
inc
fdiv
enter
add
enter
out
out
call
cmp
push
push
in
sub
add
add
and
inc
adc
jne
fistp
push
mov
xchg
push
inc
sbb
sub
cmp
je
mov
add
add
enter
repnz
cmp
ret
mov
mov
or
mov
add
add
jg
lock
dec
inc
jecxz
mov
mov
imul
mov
imul
scas
(bad)
mov
jo
in
mov
cwde
and
pop
adc
mov
push
jne
pop
and
add
add
jmp
mov
in
mov
add
add
jns
mov
push
(bad)
dec
ins
jge
and
add
adc
mov
pop
call
arpl
or
inc
push
out
aam
mov
add
add
shl
adc
nop
or
add
cmp
cmp
push
cmps
add
add
dec
out
test
xchg
sub
adc
stos
jae
or
mov
add
int3
adc
inc
mov
mov
adc
push
cmp
mov
inc
sub
add
pop
mov
inc
mov
and
or
jnp
pusha
mov
jmp
lods
adc
add
add
lods
cmp
mov
jl
pop
sub
push
fild
outs
cmps
xor
push
je
xor
add
add
enter
push
leave
repz
lock
add
stos
popf
pop
shl
add
xor
add
dec
and
in
clc
xor
js
add
add
loopne
fmul
or
xor
sub
imul
shl
jb
mov
add
add
popf
in
stos
into
inc
xlat
xor
mov
jp
dec
fldcw
cmp
add
add
add
add
xor
mov
test
jle
jmp
push
mov
push
pop
cmp
jo
push
cmp
add
add
cdq
daa
push
add
push
sub
push
inc
mov
or
(bad)
push
inc
jge
mov
fadd
add
add
fmul
or
jmp
add
add
(bad)
cmp
jl
mov
sub
mov
add
clc
cmp
mov
fwait
or
or
mov
lods
mov
mov
mov
dec
cld
(bad)
xlat
or
add
add
inc
(bad)
push
jge
xchg
or
adc
sar
or
ret
cmc
jb
jbe
mov
add
add
or
out
jne
je
sub
add
cli
lea
mov
sbb
inc
pop
int3
jae
dec
sbb
add
add
loopne
popf
xor
jne
into
mov
xbegin
out
add
rcl
xor
stc
add
add
cwde
adc
dec
adc
and
(bad)
mov
mov
dec
sub
mov
add
add
ret
xlat
movs
push
sar
hlt
out
in
push
pushf
or
pop
in
test
push
add
add
pop
jl
out
or
inc
pop
enter
or
sub
and
test
or
or
add
sub
pop
inc
or
xor
xchg
ds
cmp
push
or
add
int3
inc
push
add
add
jno
arpl
test
inc
loop
mov
fcmovne
push
inc
mov
push
lahf
cli
jmp
sub
add
add
imul
or
outs
inc
jp
cs
jne
in
push
popf
push
pop
add
pop
lods
popa
dec
cmp
scas
dec
scas
xchg
mov
and
dec
add
or
addr16
add
add
xlat
push
or
push
xor
pop
sbb
call
cli
jmp
fincstp
shl
cmp
cmp
test
in
add
mov
cli
pop
mov
inc
sub
dec
xchg
call
add
xchg
and
jnp
pop
ror
dec
adc
xlat
push
or
xor
pop
jae
add
mov
add
in
cmp
je
mov
sbb
icebp
rol
sbb
push
arpl
inc
fsub
les
add
add
out
dec
pop
xchg
dec
sti
into
and
mov
cmps
pushf
icebp
aad
ret
imul
push
add
add
fwait
pop
pop
sbb
aam
mov
dec
or
loope
js
mov
std
or
pusha
popa
out
or
je
add
add
test
push
fs
or
jo
enter
cmc
pop
mov
push
jns
add
add
push
push
sar
pop
lds
add
add
out
mov
(bad)
mov
add
add
inc
imul
dec
or
jmp
gs
outs
dec
shl
popa
sub
mov
sub
add
mov
pusha
sub
push
xlat
xchg
dec
das
pop
dec
jmp
mov
cs
add
sahf
add
jnp
add
es
jns
imul
sub
cmp
test
add
add
xchg
push
cmp
cdq
aad
sbb
mov
xchg
inc
xchg
sbb
imul
add
adc
retf
or
and
adc
movs
mov
jl
imul
inc
repz
cmp
mov
test
xor
js
test
das
add
and
and
xor
bound
out
cmp
fidiv
jne
js
or
jp
push
(bad)
out
add
add
jne
imul
ret
sub
sar
fwait
xchg
shl
mov
xor
pop
add
add
nop
mov
cwde
retf
into
inc
inc
mov
adc
ds
enter
sub
add
add
jle
scas
cmc
xchg
les
lahf
sti
or
mov
adc
add
add
nop
jmp
enter
push
push
movs
inc
retf
(bad)
data16
add
stos
mov
scas
imul
add
add
jge
(bad)
or
add
and
xor
test
xchg
pop
adc
fstp
add
add
clc
xchg
sub
cdq
mov
dec
imul
xchg
inc
mov
inc
mov
inc
or
push
bound
cs
out
pop
lds
sbb
fisub
pushf
xchg
mov
sbb
jns
add
add
shr
lods
pop
mov
(bad)
inc
push
xchg
xor
ins
cmps
or
cli
loop
iret
add
add
add
mov
fs
push
dec
and
lods
xor
jmp
loop
add
add
add
jge
jle
stc
xchg
sub
mov
aad
xchg
neg
das
sub
jl
jmp
push
add
mov
push
(bad)
jmp
nop
xchg
dec
test
(bad)
adc
inc
shl
test
add
add
push
lods
inc
das
dec
popa
stos
fsubp
rcl
movs
jb
xor
sub
lods
repnz
jp
sub
add
add
add
add
push
in
or
leave
xor
jnp
call
fucomp
pop
adc
inc
or
mov
sub
inc
jp
sbb
(bad)
adc
or
push
adc
add
add
dec
sub
adc
mov
xchg
pushf
shr
loopne
sub
mov
inc
adc
add
add
dec
nop
cmp
xor
mov
and
js
(bad)
mov
nop
add
add
push
les
add
outs
dec
xor
inc
push
adc
push
cdq
xor
std
mov
add
add
test
jge
xor
cdq
lds
retf
adc
dec
dec
push
xchg
ins
scas
push
daa
test
es
addr16
add
stos
stc
push
lds
xchg
arpl
nop
lods
repz
mov
inc
cmp
add
add
cmp
or
(bad)
mov
push
out
pop
pop
add
popa
movq
add
rol
add
add
xor
nop
test
and
adc
scas
cmp
mov
popf
je
xchg
mov
add
add
add
punpckhbw
pop
lods
fstp
jmp
shr
clc
mov
add
xor
xchg
cmp
mov
imul
into
loop
push
cs
or
jae
add
inc
int3
stos
mov
add
add
jno
ret
sbb
je
or
ins
mov
jbe
dec
jp
cs
push
or
add
add
and
ins
test
dec
fld
repnz
adc
jne
jae
sbb
or
sbb
add
add
pop
mov
cmp
jge
fsubr
dec
das
neg
mov
xchg
add
add
push
imul
xor
or
jl
dec
dec
push
xor
or
test
push
fist
add
add
and
mov
cmp
mov
call
es
xor
xchg
push
pop
in
xor
repz
add
and
ins
dec
mov
movs
or
push
rol
out
xchg
ds
sub
test
add
add
and
mov
sub
int
dec
sbb
and
jle
cmp
add
add
loopne
cmp
jg
mov
in
mov
add
inc
in
in
inc
in
jg
and
add
add
outs
or
cli
cmp
inc
add
push
cld
in
rcl
add
ins
push
or
das
lahf
pop
xchg
jne
jmp
add
dec
fmul
add
add
jae
mov
nop
les
mov
loop
les
pop
fcom
sbb
sbb
add
add
inc
add
pop
mov
dec
mov
push
cwde
and
mov
sbb
or
and
add
add
inc
or
or
or
inc
movs
clc
sbb
loopne
js
or
ins
mov
scas
add
add
mov
std
push
dec
and
inc
or
push
and
in
jl
loope
jmp
add
add
push
pop
stos
jno
jmp
cdq
arpl
adc
push
(bad)
sub
fnstenv
push
shl
add
add
in
lea
movs
pop
shr
inc
mov
leave
add
sub
add
jge
outs
pushf
sbb
add
add
xchg
jl
jmp
loopne
sbb
imul
imul
mov
jb
xchg
sbb
add
mov
sub
or
add
fstp
mov
daa
or
xchg
push
pop
push
add
add
jbe
push
or
sbb
xchg
fistp
and
rcr
imul
dec
add
add
adc
mov
dec
les
aaa
movs
adc
cmp
shr
and
fs
and
push
add
add
clc
push
mov
hlt
inc
or
or
pop
push
adc
sub
lds
add
add
js
add
stc
and
push
lock
lahf
dec
and
jecxz
mov
nop
or
add
add
leave
inc
loop
std
lds
push
xchg
je
jmp
nop
and
push
ja
add
add
outs
inc
popa
push
jnp
movs
or
and
in
adc
mov
add
add
retf
mov
nop
add
imul
mov
sbb
adc
je
bound
add
add
in
jecxz
mov
fs
in
cmp
(bad)
imul
jmp
add
add
mov
sbb
dec
into
jo
fisttp
push
and
pop
nop
or
xor
cmc
hlt
add
add
dec
or
repz
or
xchg
jmp
or
or
and
xchg
arpl
cmp
add
add
imul
and
sub
xor
mov
mov
adc
add
add
jne
mov
(bad)
(bad)
fucomp
arpl
dec
or
daa
sbb
xchg
xchg
das
pushf
push
gs
add
add
mov
jg
leave
and
pop
sub
add
jmp
jbe
enter
cmp
sub
or
or
mov
mov
inc
movs
xchg
test
push
push
sbb
add
add
push
inc
dec
xchg
inc
or
jge
adc
cmp
or
sbb
add
add
jne
shl
int3
sub
(bad)
push
retf
inc
add
leave
jl
push
pop
and
push
mov
dec
mov
cdq
push
mov
imul
jae
pushf
es
mov
mov
bound
mov
inc
in
mov
je
jno
and
mov
push
jbe
jo
adc
call
add
add
adc
dec
mov
push
jmp
inc
call
mov
test
sub
mov
add
add
dec
sahf
pop
dec
fst
icebp
or
xchg
mov
int3
add
xor
int3
test
push
lds
add
add
fs
mov
test
jg
xchg
pop
xchg
in
and
push
dec
push
bound
adc
add
or
sub
mov
sbb
mov
jno
addr16
sbb
cmp
test
add
add
ins
xchg
and
mov
les
push
cmp
add
add
and
sbb
jbe
(bad)
xchg
call
movs
ret
and
or
add
add
(bad)
popf
xchg
ret
scas
jge
in
cmp
inc
push
imul
inc
pop
cmp
and
aad
add
add
xchg
mov
jns
mov
mov
jns
mov
sub
xor
cs
dec
sbb
push
or
add
add
inc
xchg
cmc
nop
pop
lods
jnp
jle
add
push
push
dec
inc
inc
or
and
and
sar
add
add
jg
clc
jae
lods
(bad)
pop
ror
ss
iret
mov
inc
ror
add
add
jl
lahf
mov
movs
popf
jo
or
addr16
xor
xchg
out
or
inc
add
add
jae
sub
mov
and
popf
dec
dec
test
xlat
jno
imul
sbb
add
dec
add
add
push
adc
pop
dec
mov
jle
adc
inc
lods
ror
mov
shl
cli
rcr
jbe
add
add
mov
jmp
push
push
fistp
cld
xor
aas
aas
fild
popf
mov
fiadd
add
add
(bad)
sub
mov
fldenv
pop
sub
add
pop
bnd
pop
mov
add
movs
das
jg
push
test
test
sub
sbb
pop
(bad)
adc
add
mov
aas
sbb
push
or
mov
outs
jo
sbb
push
cmp
daa
and
add
add
push
adc
in
inc
push
adc
mov
pop
or
adc
aad
scas
xchg
add
add
scas
mov
lds
jnp
and
(bad)
(bad)
and
shl
jb
push
add
add
xlat
stc
xor
test
daa
add
push
clc
cmp
xchg
das
lock
sbb
fstp
adc
add
add
inc
mov
jl
xor
xor
dec
(bad)
adc
sub
stos
loopne
push
push
lahf
inc
fwait
lock
add
xor
jg
mov
jae
jg
xchg
nop
pop
repnz
push
repnz
push
add
add
inc
add
inc
and
cmp
mov
ja
(bad)
pop
mov
lods
shr
mov
push
jo
add
in
rol
sub
mov
inc
add
mov
and
add
lods
mov
stos
sub
add
mov
xchg
mov
(bad)
das
cmc
pop
pop
mov
fiadd
add
add
out
xchg
mov
dec
in
pushf
xchg
inc
push
push
add
es
inc
jle
and
add
sbb
mov
sub
or
mov
mov
mov
cmp
add
dec
std
add
add
ret
add
in
std
adc
aad
xchg
cmps
adc
adc
push
push
add
add
push
xlat
(bad)
pop
(bad)
or
leave
or
sbb
sub
sub
push
xchg
mov
sub
add
cmps
fild
retf
ins
pop
push
or
cmp
jns
xchg
add
add
xor
mov
sub
mov
adc
scas
loope
cmp
and
mov
ja
add
add
add
push
(bad)
xchg
pop
mov
and
aas
gs
push
push
mov
xor
xchg
test
add
add
cmps
adc
fisttp
inc
sub
popa
jge
xchg
pop
pop
push
sub
je
out
repz
add
scas
int3
and
jae
cmps
imul
adc
out
dec
or
loope
cmp
cmc
jo
repz
push
push
lds
add
add
into
sbb
xor
movs
xchg
mov
test
and
or
xchg
add
inc
dec
fwait
lock
in
(bad)
cmp
les
push
inc
js
and
add
add
xchg
std
xchg
mov
mov
mov
les
sbb
repnz
shld
xchg
inc
mov
dec
hlt
and
add
add
mov
adc
cmp
push
adc
sahf
sti
and
in
mov
add
xor
and
adc
dec
mov
pop
stc
hlt
pop
add
stos
xchg
fisub
out
add
add
lods
nop
shr
(bad)
dec
jae
cmc
mov
in
ficomp
xchg
(bad)
mov
test
clc
mov
cdq
add
add
std
lods
xor
push
je
cwde
fcomp
call
mov
add
push
jmp
and
add
add
mov
xor
xchg
aad
cmp
je
mov
mov
mov
add
add
add
inc
xor
and
imul
lea
test
push
push
push
push
sub
mov
push
jne
xchg
fsub
jne
ja
push
push
xchg
adc
mov
inc
mov
mov
add
add
cmp
push
in
and
inc
and
xchg
adc
je
adc
lahf
pusha
mov
lahf
ret
add
jle
mov
repz
int
cmps
add
fsub
fdivr
or
add
add
add
and
dec
jo
sar
adc
std
repnz
xchg
push
(bad)
std
repnz
add
std
add
add
sbb
add
jge
rcr
(bad)
dec
mov
test
mov
sub
add
mov
sub
mov
dec
or
adc
pop
cmp
(bad)
dec
or
push
mov
add
gs
jle
dec
bound
adc
mov
cld
xor
cli
(bad)
and
xlat
adc
push
ror
mov
dec
mov
adc
add
add
outs
mov
das
mov
sub
add
and
or
gs
adc
retf
add
add
gs
xchg
push
lahf
and
call
(bad)
add
adc
add
add
cld
mov
nop
jmp
icebp
sar
cli
mov
test
add
add
inc
jl
or
rcl
jmp
lds
inc
adc
inc
push
push
jae
dec
(bad)
xchg
add
add
mov
ret
inc
loope
sub
xor
into
pusha
pop
test
push
pop
repz
rol
add
add
scas
and
push
ret
jns
call
push
gs
push
mov
fistp
xor
mov
test
push
imul
sub
add
add
sub
push
outs
movs
pop
and
daa
jne
ja
les
sbb
adc
movs
std
jg
sbb
push
add
add
jae
mov
imul
cli
jecxz
inc
jg
jns
mov
cdq
sub
add
add
add
aaa
push
and
movs
jnp
je
loopne
add
and
sub
or
imul
repz
jne
add
add
sub
fistp
and
cmps
jnp
push
clc
mov
repnz
imul
add
ret
inc
ret
fcom
cmc
inc
mov
dec
adc
push
scas
test
cmps
pop
jne
and
add
or
in
pop
sbb
mov
sub
cmps
test
mov
in
add
add
loop
test
mov
or
xchg
inc
popf
jnp
adc
jmp
loope
loop
fidivr
stc
in
loop
add
add
push
push
clc
fwait
loop
invd
aam
dec
enter
xchg
test
mov
sahf
loop
nop
in
add
add
icebp
or
stos
aas
pop
dec
bound
daa
mov
xlat
addr16
retf
lahf
sub
sahf
adc
xchg
js
add
add
jg
xor
mov
das
pop
inc
jp
adc
push
cmp
or
add
add
add
jno
mov
inc
mov
xor
shr
dec
xor
in
add
inc
add
add
aam
and
or
inc
retf
or
adc
xchg
push
cmp
cmps
div
adc
pop
cmp
mov
leave
and
fistp
cmp
jns
ror
ja
dec
shl
mov
add
dec
lahf
adc
ret
push
pop
cmp
std
shl
gs
mov
stos
cwde
push
add
fwait
dec
add
gs
jmp
or
push
div
pop
repnz
xor
push
push
mov
aaa
add
add
cmp
and
xor
aam
pop
or
fst
loopne
or
adc
mov
xchg
dec
add
add
(bad)
adc
push
adc
in
lea
out
or
push
push
cs
fild
add
fs
lahf
lock
xor
jnp
scas
imul
(bad)
shr
add
div
xor
fs
enter
mov
ds
adc
js
loopne
sub
jle
add
add
shl
push
rol
cdq
movs
popf
icebp
in
and
in
or
in
shl
add
sahf
es
popf
je
inc
adc
push
movs
adc
xor
cmp
or
jp
add
add
xchg
fs
mov
push
daa
xchg
mov
xor
or
add
ss
outs
shr
push
fist
and
cmps
icebp
test
cli
pop
aam
jne
add
add
and
jecxz
lahf
push
pop
adc
and
inc
cdq
xor
sbb
add
and
xor
xchg
and
push
jne
das
dec
or
mov
xchg
out
test
add
add
outs
or
dec
loopne
lea
or
xchg
ror
pop
mov
in
loope
mov
add
dec
pop
stc
lds
xor
sub
push
adc
inc
add
retf
loop
ret
add
add
mov
bound
pop
and
adc
pop
test
add
nop
retf
ror
jbe
in
push
cli
pop
movs
rol
xchg
icebp
nop
js
mov
push
push
cmp
jns
add
les
add
add
retf
push
mov
pop
cmc
jb
xchg
movs
jmp
in
dec
mov
call
test
mov
add
add
jnp
(bad)
retf
push
les
mov
mov
shl
xor
or
das
xor
gs
les
add
add
adc
add
push
sbb
pop
fsubr
call
cli
call
mov
aaa
xor
push
add
add
outs
stos
and
and
loope
call
inc
mov
mov
push
mov
pop
push
imul
push
call
push
test
inc
sub
clc
add
add
push
sbb
pop
cmps
loopne
sbb
les
cmp
inc
ss
dec
inc
(bad)
test
add
add
push
sub
cmp
retf
push
sub
aam
jbe
jp
mov
and
dec
sbb
add
add
cld
push
add
dec
scas
xlat
pop
mov
enter
out
outs
xchg
jo
aam
bswap
or
add
add
xchg
fld
cmp
stos
pop
mov
test
mov
adc
add
loop
adc
sbb
cmp
ss
sub
mov
popf
add
add
retf
(bad)
pop
and
xchg
fwait
std
pop
add
or
pusha
in
sbb
add
or
ret
add
xor
stos
cmp
sub
mov
ss
push
sqrtps
mov
ror
sbb
add
add
inc
in
lahf
jb
cdq
push
lea
not
cld
mov
jle
retf
cmp
retf
push
push
add
add
mov
lahf
mov
inc
sahf
xchg
add
loop
dec
mov
sub
mov
add
add
int3
xlat
dec
outs
std
push
clc
mov
xchg
pusha
xchg
bnd
push
cmp
dec
and
add
add
sub
push
test
or
jmp
lock
xor
test
add
add
pop
pop
in
sahf
(bad)
in
adc
pop
(bad)
cmp
jne
xor
sub
jge
jo
xor
das
ret
add
add
add
pop
mov
ficomp
fnsave
nop
sub
xor
xor
xchg
sti
mov
sbb
mov
add
add
mov
jns
loopne
nop
je
cld
dec
push
(bad)
lock
or
adc
adc
(bad)
add
add
aaa
and
push
adc
pop
test
xlat
cs
pop
and
fbstp
ror
clc
pop
jne
add
add
xchg
retf
ins
xchg
cmp
jge
push
and
jne
jle
jne
or
and
jecxz
inc
outs
add
add
and
adc
pop
and
cli
or
test
ins
bound
enter
add
sbb
push
mov
sbb
div
jb
ret
das
adc
fisubr
sbb
or
cmp
push
call
je
mov
add
fxch
(bad)
mov
lea
mov
add
adc
sub
fbstp
add
add
add
out
or
test
idiv
lock
and
inc
or
cmp
es
sub
dec
add
add
inc
inc
inc
and
push
fld
es
jmp
pusha
in
repnz
cmp
add
mov
loopne
rcl
sbb
jle
loope
jne
bound
(bad)
enter
idiv
add
add
adc
xchg
dec
adc
sti
cmp
pusha
mov
ficom
aaa
je
iret
pop
ret
adc
out
cmp
cmp
pop
rol
mov
cdq
and
hlt
cmp
xchg
fldcw
adc
cwde
scas
xor
mov
and
add
add
xor
bound
mov
inc
repnz
xchg
fs
dec
or
add
add
adc
ret
push
fldenv
cmp
lods
call
mov
jae
pop
mov
pop
sub
push
xchg
mov
test
jnp
(bad)
lods
and
xchg
pop
scas
push
push
popf
pop
push
pushf
add
add
lea
add
rcl
mov
test
add
xor
int
pop
ja
nop
add
add
jb
cli
and
fprem
div
push
sub
sub
movs
add
dec
(bad)
je
add
add
sub
adc
nop
jle
push
das
push
shl
retf
jge
jmp
fstp
xchg
sbb
and
add
add
mov
or
sbb
mov
mov
xchg
test
sub
ds
nop
jmp
mov
in
dec
imul
cmp
cmp
add
add
test
shr
xchg
lahf
pop
mov
mov
jns
ror
xchg
mov
cld
mov
call
add
add
movs
push
das
jne
repz
xor
jl
movs
adc
retf
js
sbb
add
add
xor
clc
xchg
xchg
cmp
add
ja
inc
cli
cmc
jb
addr16
sub
into
cmp
add
add
add
rcl
stos
outs
fist
mov
dec
pop
aam
mov
inc
jmp
test
jne
aad
adc
add
add
adc
addr16
popf
aad
inc
pop
scas
pop
jne
and
in
scas
mov
jmp
dec
cs
add
add
test
pop
xchg
mov
retf
(bad)
cli
in
jns
cmps
mov
and
fcom
mov
add
add
int3
adc
sub
sub
clc
sub
jbe
aad
jmp
xchg
mov
add
sbb
add
or
sub
add
std
movs
or
add
fs
cdq
je
int3
stc
inc
mov
xor
es
loopne
adc
push
(bad)
jg
daa
fld
cld
mov
adc
stos
pop
mov
mov
inc
inc
add
add
push
and
sahf
dec
in
sub
bound
push
xchg
push
mov
scas
jg
movd
jmp
out
push
add
jmp
mov
add
repnz
jne
sub
popf
cmps
mov
add
xor
ja
dec
aas
sbb
aas
js
jmp
sahf
dec
add
jge
js
(bad)
xchg
jmp
sbb
add
add
adc
cmc
mov
or
test
or
push
mov
(bad)
jle
scas
add
ins
sub
popa
add
ins
or
stos
sbb
fbstp
jo
mov
ins
es
dec
or
or
scas
lock
es
jno
inc
and
add
add
push
jmp
shl
adc
mov
mov
push
repz
mov
mov
mov
adc
es
or
icebp
test
add
loopne
jo
lock
mov
ds
jo
lahf
inc
adc
and
add
add
mov
and
sbb
sub
fld
cdq
pop
jge
repnz
xchg
push
pop
pop
adc
add
fwait
xchg
cwde
jmp
adc
jae
add
sti
jmp
loope
dec
push
add
push
inc
and
add
cmp
add
shr
(bad)
push
and
sub
or
inc
(bad)
xchg
mov
sub
adc
add
add
xor
mov
push
jle
adc
mov
stos
mov
sbb
inc
add
add
mov
mov
jle
(bad)
hlt
xchg
pop
gs
stos
mov
shl
cmp
ret
clc
add
add
lock
sti
push
mov
push
adc
cdq
jl
add
inc
(bad)
daa
lods
and
push
sbb
cmp
add
add
lods
shl
cmp
xor
or
cmp
sbb
repnz
jge
frstor
xor
jmp
adc
xchg
stos
jg
dec
push
pop
test
cmp
cs
hlt
push
fdiv
dec
add
pop
mov
push
jns
add
add
inc
cli
push
mov
shr
push
jne
push
inc
and
dec
aas
movs
sub
rcr
pop
cmc
add
dec
mov
add
jne
mov
add
adc
es
cwde
push
shr
loopne
add
dec
dec
loopne
clc
imul
in
mov
aad
cmp
scas
aas
sub
hlt
adc
pusha
and
add
add
dec
inc
push
adc
sub
jno
test
push
out
mov
aad
ds
jl
jo
lods
jp
add
pop
pop
jle
push
and
mov
add
add
stos
and
int
dec
push
cmps
and
jns
scas
dec
(bad)
retf
xor
add
add
sbb
stc
xchg
inc
push
or
dec
dec
push
ja
or
and
loope
lea
(bad)
mov
push
jmp
add
add
imul
jge
cmps
dec
(bad)
sub
movs
in
fs
sub
das
scas
and
call
jb
sbb
idiv
cmp
pop
or
fist
(bad)
out
ds
xlat
(bad)
adc
add
xchg
pop
sbb
jae
xor
mov
adc
sub
call
xor
add
add
mov
xchg
scas
lahf
push
(bad)
scas
dec
or
(bad)
mov
in
push
call
in
lods
retf
dec
in
add
add
adc
jmp
shl
jne
and
mov
jae
into
ror
add
add
add
add
jp
ret
leave
jbe
sbb
push
pusha
jbe
loopne
stos
mov
or
add
add
or
and
cmp
mov
adc
mov
std
imul
call
add
add
xor
fisubr
cmp
test
inc
lock
out
and
add
add
into
mov
stos
loop
xor
adc
sub
ret
jl
ret
push
mov
mov
xchg
and
add
add
push
sbb
test
bound
or
or
adc
or
fild
add
add
pop
ins
sub
je
(bad)
retf
es
movs
push
dec
stc
and
adc
and
fadd
add
add
jmp
mov
xor
test
or
ds
movs
mov
add
add
dec
xor
enter
sbb
push
mov
inc
in
and
shr
xchg
sub
add
add
xor
jo
pop
inc
into
push
clc
sub
push
jnp
hlt
aam
dec
loopne
test
or
pop
or
add
add
add
mov
push
mov
adc
sahf
and
ja
and
daa
jp
add
add
dec
stc
mov
sub
xor
in
xchg
pop
adc
inc
das
(bad)
push
xchg
ror
jg
add
add
add
or
sub
ja
lea
sub
scas
cmp
ja
sbb
add
add
sbb
imul
adc
mov
adc
mov
mov
cmp
add
add
xlat
add
(bad)
out
xchg
adc
inc
add
mov
sbb
jge
jle
imul
mov
ins
push
inc
sub
cmps
rcr
ins
dec
mov
mov
ret
int
scas
iret
nop
pop
pop
mov
add
mov
sbb
fcom
sbb
push
and
sub
stos
inc
sub
shr
sti
clc
push
and
add
add
sbb
inc
jge
adc
sub
jle
add
das
in
jmp
leave
add
pop
aam
scas
cwde
or
push
lock
push
mov
add
or
add
add
add
or
xchg
sti
sahf
pop
and
leave
pop
nop
les
jp
push
push
cld
add
add
cs
mov
inc
stos
pop
and
mov
fcmovu
xchg
mov
mov
push
add
add
sbb
adc
sbb
ins
mov
ds
and
jne
and
cli
add
add
xor
jp
cmp
mov
pop
xor
mov
lahf
je
push
js
push
dec
dec
fmul
add
add
inc
push
sub
sub
test
dec
int
dec
and
test
arpl
ja
add
add
test
xchg
cmp
push
lods
jl
iret
mov
mov
sub
adc
mov
mov
nop
add
push
and
mov
fnstenv
inc
xchg
push
push
mov
cmp
imul
call
cli
xchg
fwait
jg
aas
scas
mov
add
add
cmp
adc
pop
nop
mov
test
pop
lock
shl
xchg
std
lock
jne
pop
sub
add
add
jb
sub
cli
sbb
inc
and
cmps
xor
push
xor
add
cli
pop
cwde
dec
push
aaa
sbb
and
cdq
xchg
pop
adc
add
mov
adc
xor
or
add
add
or
pop
ins
call
adc
aam
lahf
loop
aam
leave
imul
call
add
add
sbb
or
out
movs
lods
iret
jmp
lea
add
lods
(bad)
into
(bad)
aaa
cli
(bad)
ss
mov
add
add
call
lock
clc
xchg
mov
pusha
jb
xor
sbb
inc
xor
push
or
add
add
call
fwait
and
fs
jb
dec
push
mov
adc
(bad)
push
cmp
fistp
aas
add
add
inc
dec
mov
or
cmp
jne
mov
inc
sbb
or
movs
adc
adc
add
rcl
sub
mov
push
clc
inc
or
push
mov
add
fwait
sub
call
mov
mov
dec
jmp
sahf
mov
xchg
add
add
repnz
mov
push
ret
cmc
pop
mov
and
sar
pop
mov
pop
cmc
add
add
cmp
test
mov
mov
(bad)
or
test
add
adc
jbe
int
neg
jbe
daa
sbb
scas
mov
push
xchg
or
(bad)
adc
jno
xlat
test
push
push
inc
fiadd
add
sbb
sbb
inc
push
jbe
std
aam
bound
xchg
xor
mov
add
add
into
pop
stc
mov
ret
cmps
rcl
jo
jmp
lea
mov
pop
mov
add
add
shl
jl
and
sti
scas
sub
in
dec
dec
inc
add
add
dec
push
sub
pop
lods
jmp
xchg
mov
repnz
xchg
mov
cdq
dec
sub
add
add
leave
pmulhw
imul
sub
sbb
cmp
xchg
add
fxch
pop
add
add
adc
push
stos
in
into
repz
pushf
les
add
sbb
ins
add
inc
inc
cmp
add
in
or
movs
add
add
or
arpl
or
out
push
mov
add
dec
and
and
(bad)
cmp
adc
add
jno
cdq
pop
out
dec
xchg
movs
pop
ret
and
out
movs
stos
xor
add
sbb
and
adc
dec
out
inc
popa
enter
loopne
dec
mov
push
xor
sbb
add
mov
mov
fwait
dec
js
mov
xor
and
dec
jecxz
pop
mov
jmp
xor
add
add
lods
je
pop
sub
sti
push
jns
sub
(bad)
int
adc
jmp
or
inc
jnp
add
add
mov
ss
mov
pushf
xchg
add
inc
pop
and
(bad)
in
jle
ds
add
add
test
or
dec
fyl2xp1
push
mov
mov
test
fcom
out
mov
add
add
ror
cwde
lahf
push
adc
xchg
in
sub
xor
dec
sti
loop
jmp
mov
xor
add
jns
pop
in
push
(bad)
cmps
xchg
xor
push
ds
or
mov
test
mov
add
add
push
and
ret
inc
out
lock
pop
or
lds
dec
test
add
add
inc
sbb
int
cmps
ins
lds
and
daa
mov
push
pop
pop
mov
jmp
adc
add
add
mov
stos
sub
mov
dec
fmul
mov
mov
add
add
sbb
ret
and
sti
push
cmc
out
and
xchg
pop
sti
test
dec
dec
(bad)
cli
lea
add
push
mov
and
adc
dec
xchg
repz
call
mov
ins
icebp
cmp
xchg
add
add
stc
pop
xchg
xor
inc
test
lds
loop
call
inc
mov
fs
add
add
test
hlt
shr
pop
and
and
call
xchg
(bad)
loopne
add
add
inc
dec
add
scas
pop
and
mov
xor
push
cli
cmp
cli
into
lods
out
lds
add
add
cmp
dec
mov
(bad)
out
mov
adc
loop
test
mov
outs
jle
add
add
enter
or
aaa
dec
add
dec
loope
push
push
aas
push
jno
push
pusha
in
mov
mov
add
add
movs
pop
sub
inc
sub
push
xor
dec
adc
and
scas
push
daa
mov
adc
ret
jmp
add
add
cmp
sub
or
mov
ins
fiadd
push
les
add
add
jnp
xchg
push
xor
retf
or
fcompp
aas
(bad)
movzx
inc
(bad)
cwde
cmp
add
add
push
repnz
mov
sub
jnp
pop
lods
and
lock
inc
jb
test
cmp
add
add
(bad)
and
xor
mov
aas
xor
or
jg
jbe
and
mov
stc
add
add
add
aad
cmp
jne
pop
xchg
ficom
adc
iret
mov
mov
imul
push
add
add
pop
push
call
mov
fs
xor
pop
mov
sbb
mul
cmp
jge
sub
pusha
cmp
pop
sub
ret
imul
dec
pop
cmp
mov
out
lods
push
or
pop
dec
jbe
mov
add
add
je
jnp
push
dec
cmp
call
ins
in
jmp
outs
mov
mov
jb
dec
add
add
push
scas
bnd
and
xchg
xchg
sbb
or
cmp
xor
mov
fstp
aad
push
mov
add
add
sahf
mov
mov
rol
adc
cmp
dec
and
sbb
dec
ins
imul
add
add
pop
push
shl
clc
add
push
or
xchg
ror
mov
add
add
sub
push
adc
push
adc
xor
test
call
sbb
adc
nop
cld
xchg
mov
add
add
inc
pop
xor
stos
fcmovb
nop
pop
inc
rol
jge
push
lock
div
push
sub
adc
push
add
cmps
push
inc
repz
inc
and
mov
xor
xchg
push
call
repnz
push
sub
add
inc
mov
mov
push
mov
pop
cmp
push
jmp
add
add
and
retf
mov
jns
adc
cmp
fwait
xlat
jp
mov
retf
push
(bad)
mov
add
add
push
(bad)
(bad)
xlat
xor
aas
cmp
pop
add
add
pusha
sub
mov
mov
xchg
sbb
std
add
mov
mov
lock
pop
pop
xchg
stos
add
add
sbb
shr
jne
cmp
inc
std
sbb
aam
mov
pop
call
sub
jne
add
add
xchg
push
jmp
lea
add
inc
cmp
jbe
sbb
int
sbb
jae
push
arpl
add
add
mov
and
push
dec
loopne
outs
add
(bad)
jbe
cmp
shl
cmp
and
jae
jns
inc
sub
popf
cmp
rol
jb
lea
mov
add
add
loopne
mov
sub
xchg
push
enter
add
xor
ror
inc
lods
idiv
test
dec
cmp
add
aad
adc
xor
xchg
add
les
je
sub
add
add
add
sub
mov
aas
mov
push
in
and
dec
cmp
and
nop
xor
mov
add
add
ins
sub
int
leave
into
adc
fsubr
lea
int3
mov
fstp
in
in
mov
or
add
add
add
pop
mov
xchg
lea
cmp
push
fisub
fmul
lock
sbb
test
add
dec
test
test
test
mov
jmp
pop
mov
rol
add
add
push
loopne
jge
jg
mov
in
enter
aam
xchg
cmp
mov
add
push
mov
retf
jg
add
inc
mov
fadd
jge
add
cmp
jae
sbb
add
add
ret
inc
push
ret
int
xchg
mov
dec
clc
movs
mov
fnstcw
add
add
cli
adc
push
xchg
cwde
add
lea
push
test
les
pop
push
cwde
fmul
xchg
lds
add
add
not
adc
(bad)
je
mov
loop
dec
aam
cmp
(bad)
shr
push
(bad)
jmp
mov
int3
mov
add
add
sub
icebp
mov
(bad)
jnp
sbb
cmps
je
or
add
jns
and
add
add
sbb
xchg
outs
add
inc
pop
pop
out
pop
adc
jb
add
add
add
shr
cmc
xor
std
icebp
inc
mov
mov
icebp
jmp
(bad)
mov
add
add
add
or
push
sub
mov
xor
clc
rol
clc
retf
mov
xchg
packsswb
and
add
add
xor
inc
clc
das
mov
and
cmp
or
jno
cmp
xor
inc
jb
add
add
push
loopne
dec
rcl
test
je
aaa
mov
xor
shr
push
xor
push
mov
int3
pop
add
add
add
and
cmp
sub
scas
and
sbb
or
psraw
add
xchg
cmp
jns
call
xchg
and
iret
mov
or
pop
cwde
push
push
in
in
sbb
add
add
and
dec
xchg
cmp
cmps
xchg
and
sbb
adc
mov
fcmovnu
lahf
test
add
sbb
pop
lea
cld
fst
push
push
lea
pop
inc
(bad)
xchg
jns
call
add
cmp
cwde
(bad)
std
ins
mov
push
jmp
sbb
sti
je
jno
cmp
add
sub
cdq
mov
inc
(bad)
pop
dec
pop
stos
retf
push
xlat
sbb
dec
and
mov
add
clc
adc
add
and
cmc
bound
mov
lock
jl
add
add
add
scas
in
pop
pop
fstp
add
je
or
dec
mov
sbb
scas
dec
add
add
fs
(bad)
jno
lock
cwde
push
dec
bound
push
push
popa
adc
jne
imul
xor
cmps
mov
loopne
adc
sbb
ss
(bad)
push
sbb
dec
adc
add
jne
movs
and
daa
or
je
aas
mov
daa
retf
dec
jl
jmp
mov
pop
add
add
or
dec
inc
push
sub
push
xchg
xchg
out
xor
push
dec
push
pop
mov
clc
inc
sbb
add
add
push
and
or
cmc
add
or
xlat
dec
(bad)
sbb
jmp
cmp
cmc
push
push
or
adc
xor
push
cmp
adc
mov
mov
(bad)
popf
sar
enter
pop
or
repnz
jb
out
inc
jb
into
cmp
retf
sahf
push
or
shr
inc
add
add
push
add
shl
adc
xchg
or
sbb
popf
popa
test
add
xor
bound
jecxz
cmp
sub
dec
ror
xchg
(bad)
sbb
mov
inc
push
add
add
xchg
mov
cld
or
aaa
jb
in
call
rol
dec
add
adc
or
add
add
ret
das
or
inc
xchg
or
add
dec
rol
push
sub
call
add
add
ret
inc
pop
inc
sbb
jecxz
repz
jb
call
(bad)
dec
add
cli
sub
add
add
hlt
fnstcw
retf
ret
push
push
bsf
pop
and
mov
mov
push
pop
sub
mov
sbb
add
add
jb
inc
dec
push
and
push
or
cmp
shl
mov
pop
inc
inc
or
jne
add
add
and
dec
sub
sub
pop
cmc
jmp
xchg
sbb
pop
hlt
inc
inc
movs
push
push
add
mov
pop
adc
add
push
cmp
jmp
adc
add
or
mov
inc
test
hlt
xchg
xor
inc
jb
ret
xchg
clc
add
add
mov
jb
inc
call
fadd
jmp
cmp
fnstenv
adc
sub
and
xor
(bad)
(bad)
sbb
inc
clc
cs
cmc
mov
sub
sti
xchg
int3
xor
rol
add
add
call
pop
iret
or
je
pop
push
dec
xchg
mov
out
cmps
in
sbb
mov
add
add
or
inc
aad
rol
push
sub
neg
clc
imul
leave
add
leave
std
fdiv
add
add
rcr
mov
sub
shl
push
jmp
addr16
and
ins
add
xor
add
add
and
call
adc
push
push
leave
mov
push
lds
pop
retf
je
pop
jno
add
add
icebp
clc
or
xchg
das
mov
cmp
pushf
push
and
push
and
pop
das
mov
add
add
nop
aas
dec
in
daa
pop
fsubp
dec
enter
dec
mov
inc
and
lea
and
add
add
add
inc
add
dec
or
add
imul
inc
int
mov
xor
push
pop
add
add
add
mov
cwde
mov
mov
push
inc
(bad)
std
dec
or
add
repnz
or
test
sub
inc
or
push
loopne
xor
cli
sbb
mov
(bad)
xor
(bad)
add
push
imul
add
add
in
jmp
xchg
adc
in
mov
push
iret
shr
loopne
pop
pop
xchg
mov
add
add
and
add
cmp
add
pop
fsub
adc
add
mov
sbb
push
(bad)
fstp
loopne
xchg
pop
push
(bad)
pop
add
stc
movs
or
add
add
ja
in
jb
cmp
sbb
mov
and
xchg
or
or
or
or
adc
mov
add
add
lods
or
jne
into
and
push
add
inc
xchg
aaa
call
jno
pop
in
push
loope
add
add
seto
out
add
out
cli
xchg
add
xchg
shl
pop
or
pop
cmp
add
add
sub
mov
cmp
pop
add
stc
add
push
xor
sub
mov
sbb
retf
push
mov
ret
mov
dec
push
add
call
out
iret
xor
mov
inc
adc
push
popf
xchg
jl
test
add
add
jge
nop
dec
push
cmp
sbb
push
xor
sub
or
hlt
dec
pop
enter
add
sbb
push
test
and
adc
xchg
leave
jnp
xor
lea
inc
(bad)
pop
pop
mov
cmp
and
add
add
or
jo
call
ss
push
jmp
push
lods
test
add
add
mov
jge
jp
cmc
test
mov
movs
xor
idiv
loopne
add
add
out
xchg
mov
inc
lea
hlt
jne
adc
fdivr
dec
dec
pop
add
add
mov
adc
sahf
nop
stos
mov
sbb
or
test
push
add
add
add
inc
add
and
enter
jecxz
fistp
mov
mov
shr
in
push
sub
add
add
adc
pushf
scas
rcr
or
jne
pop
jo
inc
add
xchg
stos
test
rol
add
ins
jmp
fwait
or
hlt
sub
inc
adc
jmp
mov
imul
add
add
push
push
out
loop
push
sub
rcl
cmp
push
loopne
push
adc
aas
or
sub
add
add
add
dec
outs
bound
or
lods
push
adc
pusha
and
(bad)
push
cwde
mov
and
and
pop
push
cmp
cmp
add
inc
add
icebp
sbb
sub
add
nop
retf
xor
test
aas
dec
jp
dec
sub
hlt
cdq
push
xor
jbe
and
jmp
inc
or
stos
retf
push
and
repz
loop
inc
fld
adc
add
sub
clc
std
icebp
add
add
add
sub
push
xor
(bad)
and
mov
lock
sbb
movs
sbb
loopne
movs
or
inc
add
add
fisttp
(bad)
dec
(bad)
shl
fisttp
jmp
xchg
inc
push
push
jg
pop
and
jne
mov
adc
fiadd
add
add
dec
and
push
push
shl
push
add
repz
mov
in
jno
dec
addr16
bswap
add
add
xchg
repz
dec
jb
mov
gs
inc
(bad)
add
fisub
add
cmps
daa
lods
adc
fldenv
and
push
push
add
bound
sbb
call
adc
mov
stos
mov
stos
das
dec
pop
add
add
pop
mov
mov
mov
je
add
sub
inc
inc
test
sbb
add
call
add
xchg
fstp
sbb
push
cmp
push
jle
pop
sahf
(bad)
dec
and
mov
sbb
add
add
jb
cdq
xchg
daa
jge
shl
pop
cmp
scas
add
xor
push
and
push
xor
cmps
sbb
add
add
sub
push
add
mov
in
jmp
seta
pop
push
dec
adc
popa
dec
mov
add
add
imul
push
cli
push
adc
push
mov
jge
cmp
je
and
jno
lahf
daa
or
aam
stos
in
xor
or
pop
pop
inc
or
and
cmp
jbe
or
add
add
hlt
mov
rol
mov
jecxz
sti
sub
jne
cld
mov
add
add
add
fdivr
sbb
icebp
dec
or
push
jle
add
sub
push
les
ret
sbb
pop
add
add
test
inc
lea
add
jl
dec
sbb
xor
adc
dec
mov
lar
stc
pop
adc
push
and
inc
jge
(bad)
ins
dec
(bad)
fisubr
mov
lea
sub
add
fwait
out
sbb
imul
push
sbb
pop
or
aam
jnp
retf
in
call
add
add
push
stos
or
cmps
add
je
shl
mov
sar
dec
adc
sub
fsubr
add
add
(bad)
cs
push
out
pusha
sbb
mov
xchg
pop
fild
jmp
push
push
dec
add
je
add
add
aas
inc
cdq
xchg
xor
push
mov
retf
movs
cmp
add
imul
push
scas
push
xor
mov
push
push
add
add
enter
inc
mov
dec
mov
adc
cld
fst
sbb
in
loopne
in
add
add
jmp
mov
cmovns
dec
movs
dec
dec
and
nop
cmp
cmp
mov
clc
pop
lea
cmp
or
xor
push
inc
in
pop
fsubrp
mov
inc
push
xchg
mov
enter
clc
enter
add
jbe
aam
fcom
in
clc
xchg
lock
aas
enter
pop
ins
daa
and
add
add
cmp
fwait
dec
add
mov
and
jmp
mov
leave
inc
sbb
mov
fld
add
add
dec
xor
or
arpl
mov
cmp
push
fistp
stc
jb
inc
fnstenv
xchg
add
add
out
or
sbb
sbb
push
push
push
in
pop
xor
imul
push
add
inc
andps
test
add
out
and
call
lock
add
mov
call
inc
retf
test
jbe
test
add
add
and
add
invd
fist
xchg
mov
sbb
fwait
push
add
add
xchg
inc
xchg
mov
ror
and
mov
adc
in
(bad)
cdq
test
mov
add
(bad)
jecxz
rep
sub
and
les
pop
cmps
adc
mov
gs
add
add
nop
add
push
push
push
sub
fidivr
xor
fadd
fisttp
popa
push
(bad)
lock
cmovl
sbb
outs
jno
jb
push
cld
cmp
push
inc
je
push
add
out
inc
dec
push
add
add
add
dec
repnz
dec
xchg
imul
or
add
adc
js
adc
sub
stos
ins
jp
add
adc
add
add
jg
jo
or
rcl
xchg
dec
cld
sub
retf
dec
scas
mov
into
cmp
add
add
cmps
scas
enter
adc
call
adc
loop
nop
xlat
shl
jae
add
add
inc
dec
push
push
clc
pop
(bad)
test
(bad)
adc
test
scas
or
sub
hlt
mov
add
add
adc
adc
adc
(bad)
xchg
ins
push
sub
lahf
sar
jae
fisub
in
inc
jmp
sbb
add
add
aad
shl
push
bound
sub
inc
in
add
ja
mov
xchg
and
add
add
repz
mov
mov
retf
push
icebp
cmp
adc
mov
in
call
add
fwait
push
sbb
js
push
cmp
cmps
jns
test
mov
pop
sbb
and
inc
pop
or
add
add
jmp
jo
aam
pop
xchg
out
lock
pop
push
dec
add
and
stos
push
pop
jns
add
add
imul
jns
sbb
mov
sbb
xor
cmp
add
add
mov
repz
pop
adc
imul
mov
dec
dec
and
pop
adc
push
cmp
jnp
push
ret
mov
dec
imul
inc
inc
in
(bad)
les
sub
push
mov
cmp
pop
dec
int
add
add
call
shr
xor
fsub
or
std
xchg
lods
jne
mov
add
add
jns
and
jmp
inc
call
jl
mov
and
xchg
jb
dec
cmc
std
push
pusha
add
add
mov
xchg
pop
stos
dec
jge
pop
or
test
or
xchg
push
push
in
add
add
ret
xor
adc
add
or
pop
cld
inc
push
jle
inc
or
enter
or
add
add
pop
adc
icebp
and
adc
nop
stos
std
xor
xor
add
add
ss
ins
xor
or
hlt
pop
pop
int3
aas
repnz
lock
xor
rcl
mul
clc
or
add
aad
dec
inc
sub
lea
pop
mov
outs
add
std
popf
cmp
push
add
add
xlat
pop
xor
and
in
inc
aaa
mov
push
cwde
xchg
mov
mov
inc
inc
xchg
shr
add
add
ds
aas
inc
dec
nop
repnz
lea
add
adc
out
test
add
add
jo
adc
adc
sub
xor
clc
inc
test
data16
je
into
or
(bad)
inc
add
add
nop
arpl
ins
push
push
in
adc
pop
xchg
mov
mov
add
add
push
scas
jbe
or
cld
add
mov
repnz
rcl
mov
add
add
retf
mov
mov
es
retf
or
adc
repz
movs
int
data16
add
xchg
test
bound
pop
ja
test
mov
push
stc
fadd
adc
xchg
add
add
and
and
and
sub
sub
pop
cli
adc
jb
and
cmps
pop
or
push
inc
or
add
shr
jp
jl
xlat
adc
test
inc
test
push
repz
dec
fbld
sub
fdiv
stos
call
aam
setae
mov
mov
pop
dec
mov
ret
and
add
add
mov
add
out
sbb
mov
dec
push
inc
ror
add
add
adc
lods
(bad)
xchg
ror
adc
dec
xchg
je
and
pop
inc
je
adc
or
pop
fcom
add
pop
push
dec
in
push
or
mov
lea
pop
and
call
jle
add
add
cmp
in
leave
pop
add
add
loope
das
pusha
(bad)
push
push
mov
fwait
cmp
add
add
cs
or
xchg
push
jo
add
int
retf
sub
push
or
add
add
inc
mov
ja
lds
add
retf
das
mov
jl
push
clc
add
pop
push
inc
push
not
cmp
add
out
or
in
aaa
dec
(bad)
(bad)
pop
shl
out
xor
adc
nop
xor
pop
sbb
add
add
push
jne
mov
xor
push
push
out
lods
pop
and
imul
add
add
add
jmp
or
xchg
push
jbe
dec
mov
push
adc
add
pop
jmp
add
add
or
mov
add
out
xor
mov
xor
xchg
or
mov
push
mov
or
out
pop
inc
and
aam
mov
test
test
adc
add
or
xor
cmp
push
mov
stc
(bad)
test
jbe
inc
jmp
and
ds
dec
aaa
nop
adc
test
mov
xor
mov
test
add
add
add
movzx
push
add
mov
xor
xor
bound
inc
outs
adc
jo
rol
add
add
into
push
adc
in
add
int
adc
daa
add
dec
mov
in
push
loopne
add
add
or
or
dec
push
cdq
mov
sub
mov
sbb
add
add
push
jno
mov
rcl
dec
and
in
push
sti
xchg
mov
push
mov
or
add
add
bound
out
inc
adc
shl
sub
mov
pop
cmps
xchg
test
pop
adc
add
add
test
push
sbb
add
and
mov
daa
mov
mov
add
add
std
inc
lods
dec
dec
adc
or
dec
ja
cld
pop
adc
adc
dec
icebp
mov
push
mov
add
add
push
xor
pop
cmp
pusha
bound
xchg
ret
push
adc
stos
popf
inc
aaa
push
cmp
hlt
mov
mov
push
push
pop
push
mov
sub
inc
add
jne
lock
push
add
add
xchg
ja
jge
mov
leave
inc
adc
stos
sub
mov
add
sub
add
add
xchg
lock
adc
jl
in
je
adc
xor
inc
cmps
sbb
xchg
add
add
test
repnz
jb
shl
mov
je
xchg
daa
inc
add
test
mov
out
jl
push
add
add
xor
adc
add
mov
neg
inc
xchg
xchg
(bad)
imul
mov
loope
mov
add
add
mov
or
shl
pop
std
mov
xor
dec
add
mov
sub
outs
inc
loopne
or
mov
xchg
inc
add
add
push
ret
fdivrp
jp
or
test
lea
loope
cmp
add
leave
sub
add
add
outs
test
cmp
add
mov
mov
and
push
jmp
add
xchg
mov
shr
iret
or
pop
xchg
shl
dec
sbb
in
cmps
jae
jp
add
add
add
lds
lock
add
adc
out
mov
or
add
add
xor
out
retf
pop
rcl
pop
aam
xor
sahf
inc
mov
imul
xor
sbb
pop
jp
pop
add
add
mov
mov
pusha
leave
inc
and
push
xor
or
cmp
jae
add
ins
sti
sub
add
add
popa
or
hlt
cmp
ja
mov
sub
inc
adc
adc
sbb
das
add
aad
sbb
mov
das
loope
wrmsr
aam
arpl
cld
add
add
push
into
shr
jp
movs
dec
add
xchg
adc
nop
hlt
dec
push
and
inc
xchg
and
stos
dec
add
add
cmps
dec
xchg
push
jl
pop
xor
sub
rcl
dec
jecxz
xor
sub
add
add
add
dec
and
hlt
sub
pop
mov
adc
or
(bad)
jmp
pop
or
inc
or
lock
fdiv
mov
mov
cmp
sub
(bad)
fadd
add
add
retf
rcl
and
add
add
or
mov
shr
cli
loop
push
xchg
mov
out
add
add
push
mov
fild
aaa
shr
popf
mov
sub
xchg
push
mov
and
add
test
or
sbb
and
loopne
push
inc
lea
mov
mov
push
test
jne
add
add
and
loopne
iret
cmovb
lds
mov
pop
mov
loopne
jmp
inc
out
push
add
or
sbb
scas
pop
sub
loop
sub
jmp
adc
pop
sbb
add
add
add
jmp
call
adc
add
pop
fwait
bound
or
repz
add
inc
cmp
mov
stos
or
leave
inc
pop
push
dec
cmp
push
jle
dec
adc
sub
test
add
add
out
icebp
add
dec
imul
jae
adc
cs
xchg
push
call
add
add
enter
jb
call
add
enter
cmps
in
scas
push
ret
inc
imul
add
add
fwait
sub
lods
repnz
outs
pop
bound
mov
xor
retf
mov
mov
add
add
fdiv
les
fld
push
jne
mov
inc
mov
push
adc
sbb
add
add
mov
cmovno
inc
sti
inc
mov
inc
xchg
xor
push
lea
jmp
adc
add
repnz
add
add
shr
dec
push
or
js
inc
dec
ror
test
xchg
pusha
ret
push
add
add
mov
xor
and
push
aad
or
test
popf
push
xor
sub
pop
sub
add
dec
sub
pop
cmp
test
mov
push
js
push
std
jmp
xor
stos
add
jbe
add
add
mov
(bad)
jmp
sub
add
push
push
dec
nop
push
sub
xor
push
lock
add
add
sub
push
add
jg
push
xadd
pop
cmc
adc
add
push
ror
add
jmp
add
cli
mov
or
or
adc
pop
retf
add
add
and
test
mov
pop
cdq
push
and
inc
inc
or
out
or
add
push
and
lods
sub
aaa
push
and
jbe
cmp
mov
mov
inc
imul
jmp
push
sub
add
push
(bad)
adc
shl
add
inc
lea
into
in
add
add
cld
adc
iret
and
loop
fild
or
retf
and
in
jb
mov
shr
xchg
into
add
add
sbb
shr
push
ret
adc
mov
inc
rol
(bad)
sub
add
cmp
add
add
push
push
and
inc
cmp
pop
hlt
push
popf
or
test
add
lahf
sub
(bad)
shr
add
or
xchg
outs
cs
xchg
not
(bad)
sub
push
and
enter
and
add
add
jle
lods
mov
popa
xor
xchg
fld
inc
daa
dec
test
mov
push
ins
mov
add
add
not
inc
adc
xor
jecxz
push
mov
mov
test
je
loope
add
add
cmp
mov
shl
dec
in
xor
fs
ins
fisub
push
cld
and
add
add
xchg
mov
adc
push
adc
sub
dec
popa
jmp
or
retf
shl
pop
cmp
add
add
mov
xor
adc
std
push
inc
xchg
jmp
pusha
outs
jbe
xchg
add
add
mov
add
xor
dec
and
shl
or
clc
or
adc
inc
add
add
call
add
sbb
test
or
push
inc
jae
imul
add
inc
push
and
add
shl
cmc
add
sbb
mov
std
mov
pop
fisttp
lea
add
ja
scas
push
pop
cdq
addr16
(bad)
int3
test
popf
movs
out
movs
(bad)
push
ins
push
sub
add
add
jmp
cmp
out
sbb
in
add
push
cld
loop
es
push
mov
out
add
add
add
mov
and
add
add
jmp
clc
push
xchg
or
add
sub
add
add
aas
jb
cmp
adc
int3
mov
(bad)
je
pop
add
jb
ror
add
add
clc
inc
rol
push
push
bnd
movs
adc
iret
xor
adc
mov
inc
add
add
cmp
fld
mov
and
in
lahf
setns
and
stc
jae
pop
repnz
add
ds
add
mov
and
mov
sar
hlt
pop
aaa
dec
cmp
lds
jb
jbe
retfw
add
add
and
neg
test
aad
clc
xchg
add
(bad)
xlat
mov
fnstenv
add
push
jmp
inc
adc
or
mov
pop
sub
mov
lea
pop
add
stos
popa
mov
fstp
inc
xor
lock
call
add
add
dec
in
out
adc
rol
xor
and
call
shl
loopne
test
adc
mov
add
add
add
and
(bad)
in
jne
adc
ror
add
inc
mov
jmp
outs
push
add
add
mov
test
psllq
sub
mov
aam
inc
loope
push
add
cmp
or
add
add
dec
and
and
data16
dec
lock
fsubrp
jmp
or
rol
outs
push
mov
add
aam
sub
pop
es
add
and
xchg
xchg
xchg
jg
in
jl
inc
push
call
or
add
add
or
mov
xchg
push
arpl
xchg
clc
repz
mov
cdq
pop
push
daa
jp
xchg
add
add
inc
adc
cdq
add
sub
push
add
std
xor
or
pop
inc
xchg
add
add
out
mov
scas
mov
call
and
xchg
adc
enter
inc
pop
xor
mov
push
mov
add
add
add
lock
sahf
mov
pop
in
imul
dec
push
and
lods
mov
stc
add
add
(bad)
sub
movs
xor
adc
mov
mov
cmps
sar
test
sbb
add
add
mov
clc
ret
xchg
(bad)
daa
mov
mov
lds
jmp
jb
test
sbb
cmps
in
movs
add
add
(bad)
xchg
push
mov
pop
and
and
adc
sub
repnz
inc
push
outs
enter
add
add
mov
mov
sub
and
cwde
test
add
and
sub
add
dec
push
dec
jae
jno
imul
push
lods
cmp
xchg
pop
push
mov
add
add
rcr
mov
jns
lds
mov
fs
pop
nop
hlt
in
imul
retf
daa
xchg
leave
and
add
add
dec
pusha
in
xor
jo
adc
aaa
shl
or
jl
and
or
add
add
inc
xchg
lock
inc
or
or
or
ret
or
jmp
or
add
jecxz
je
xor
arpl
or
loopne
inc
ins
mov
add
fnstcw
enter
add
add
movs
(bad)
adc
push
xor
push
jge
add
popf
rcl
outs
sar
pop
or
add
add
mov
arpl
add
inc
outs
sbb
mov
cmp
sbb
add
add
xchg
push
stc
or
repnz
or
and
rol
add
add
je
add
add
push
jbe
mov
pop
push
enter
fs
inc
iret
push
icebp
add
dec
add
add
mov
pop
div
dec
loopne
fist
hlt
pop
je
push
sub
aam
arpl
add
add
sbb
mov
and
clc
pop
fst
xor
push
aad
add
or
retf
add
add
lock
ins
add
inc
fs
movs
dec
cld
push
sub
push
neg
xor
inc
js
pop
add
add
(bad)
popa
dec
bound
add
push
push
shl
test
push
cmp
add
push
xchg
add
add
add
or
adc
push
sub
gs
push
mov
inc
sti
sldt
add
sahf
mov
push
fmul
adc
inc
xchg
jl
or
cld
pop
jmp
add
mov
add
rol
push
xchg
icebp
dec
or
mov
push
mov
cli
add
mov
add
push
add
adc
add
out
icebp
sub
cwde
xor
xor
mov
pop
std
inc
add
add
cmc
clc
inc
aas
daa
add
in
(bad)
sbb
jmp
or
cmp
imul
leave
mov
add
add
lock
mov
inc
fisttp
adc
push
adc
ret
and
dec
sbb
popf
xor
add
add
inc
mov
xlat
mov
push
xor
(bad)
(bad)
fwait
mov
adc
dec
cmps
add
add
or
mov
sbb
hlt
test
ret
push
xor
or
mov
stc
pop
repz
push
add
add
mov
loope
push
sub
hlt
push
or
xchg
js
out
pop
stc
inc
jmp
add
add
sub
call
mov
xchg
pop
inc
cwde
inc
adc
jmp
xor
add
add
pop
inc
loopne
push
cwde
lea
mov
cmp
shl
lods
js
cli
jl
sub
repnz
add
add
or
inc
xchg
(bad)
test
pop
clc
inc
sbb
and
nop
clc
movs
(bad)
push
dec
or
adc
add
add
mov
push
inc
dec
push
repz
movs
cmps
fisttp
pop
in
ror
frstor
clc
lock
leave
dec
in
test
add
add
jg
lods
jno
push
out
xor
push
sbb
xchg
push
push
or
mov
movs
push
lahf
push
add
add
add
cmp
add
call
je
retf
pop
pop
xchg
mov
push
add
add
clc
push
push
push
sbb
cdq
or
push
push
cmc
stos
sbb
pop
adc
add
add
in
push
pusha
add
and
or
ret
jne
mov
cwde
cdq
cmp
dec
cmp
stos
push
add
add
test
addr16
sbb
out
xchg
sete
ins
jns
out
call
push
and
add
push
and
sub
dec
das
int
push
inc
inc
push
ficomp
or
pop
add
add
and
mov
fisubr
add
jmp
rol
push
cmp
jmp
cmp
in
xchg
add
add
mov
or
jmp
or
push
xor
push
je
and
cli
nop
lds
test
add
add
stc
(bad)
and
adc
inc
cwde
stc
(bad)
imul
jne
loopne
jo
or
dec
add
add
add
jle
xchg
xor
retf
jmp
stos
push
das
in
daa
popa
push
cld
cmp
xor
dec
add
movs
call
mov
pop
dec
fiadd
jo
cmp
inc
mov
cmp
mov
dec
hlt
hlt
xchg
iret
add
add
adc
dec
push
fidiv
adc
enter
neg
push
cmp
jbe
outs
add
add
in
ucomiss
mov
mov
daa
jae
fist
leave
sbb
add
add
pusha
add
enter
hlt
sahf
pop
arpl
(bad)
dec
sbb
bound
jmp
ss
add
add
xor
and
sub
ror
adc
add
jbe
popf
loop
cld
add
add
clc
or
push
dec
dec
mov
cmova
inc
xchg
adc
jbe
push
mov
add
add
and
cmp
mov
or
enter
xchg
sub
dec
cmp
ftst
fimul
add
add
arpl
aas
xor
(bad)
jae
mov
adc
test
or
adc
jbe
out
add
add
(bad)
ss
mov
mov
mov
aad
sub
and
or
adc
cmps
push
jbe
nop
lahf
sub
pop
fistp
push
dec
pusha
push
mov
add
dec
mov
(bad)
test
add
movs
aam
xor
call
sti
push
stc
or
push
push
push
pop
xchg
pop
or
sar
test
or
add
add
cmp
cmp
mov
add
inc
aam
mov
or
fild
pop
and
call
add
add
adc
xor
je
mov
jo
push
mov
add
add
cmp
sbb
test
jnp
call
adc
mov
clc
(bad)
xchg
enter
imul
add
add
dec
ret
and
and
xchg
mov
or
jo
(bad)
jecxz
push
lods
dec
fild
add
add
rol
dec
cmps
es
mov
add
repz
dec
adc
push
xchg
xchg
inc
fimul
out
cwde
add
add
push
pop
and
jo
sti
inc
mov
mov
add
adc
dec
add
mov
add
or
push
lock
fadd
icebp
mov
mov
hlt
push
or
and
pop
sub
add
add
inc
jg
mov
add
clc
je
stos
mov
push
pop
pop
add
rcr
adc
add
add
cmp
sbb
or
push
jl
outs
nop
mov
mov
and
(bad)
sub
jno
xchg
mov
mov
add
or
lea
push
and
xchg
test
sbb
lock
ds
sub
clc
add
add
push
inc
nop
jno
ret
test
mov
inc
sub
es
push
fdiv
add
add
push
inc
push
nop
xchg
inc
std
dec
cmc
and
arpl
ret
jp
adc
jmp
loopne
inc
jns
add
add
xchg
mov
push
mov
imul
push
adc
je
cmp
lock
sub
ins
mov
cdq
push
add
add
xchg
or
call
push
push
mov
daa
or
jb
cmps
push
add
push
add
and
ror
aad
sti
mov
mov
stos
push
mov
or
inc
ja
pop
add
add
sub
sub
sbb
fst
rol
ror
xchg
adc
je
test
sub
daa
mov
add
movs
xor
push
pop
mov
lds
icebp
imul
adc
stos
bound
xchg
enter
add
icebp
push
outs
mov
ss
push
jmp
fadd
call
add
add
add
cli
or
mov
sbb
xlat
inc
pop
inc
cmp
add
add
movs
dec
sub
mov
push
rol
push
mov
je
cmovl
mov
add
add
and
jmp
push
mov
nop
jbe
shl
das
push
sahf
loopne
add
add
adc
jl
jle
dec
sub
push
popa
or
xchg
call
and
add
add
fst
lods
popa
ret
xor
or
(bad)
loop
cdq
or
adc
add
fdivr
or
cwde
int3
out
adc
lock
add
aam
bound
mov
not
sub
inc
sub
movs
jnp
pop
pop
in
adc
sub
add
add
push
mov
cmp
mov
ror
adc
mov
jae
out
loop
rcr
mov
add
mov
or
call
jno
mov
pop
inc
loopne
sub
mov
sahf
mov
add
add
pop
clc
push
movs
movs
and
jo
mov
mov
pop
add
pop
adc
add
cmp
call
push
stos
jmp
dec
mov
addr16
push
movs
movs
idiv
enter
add
mov
out
retf
mov
push
pop
cmp
pop
push
add
add
inc
sbb
pop
mov
dec
call
cdq
inc
out
add
pop
add
add
mov
xchg
xor
or
mov
pop
sub
sub
in
or
add
add
das
aas
mov
sbb
inc
popf
jnp
jo
push
lahf
pop
add
sbb
lahf
pop
pop
test
ficomp
add
add
mov
jmp
mov
gs
scas
push
aad
or
mov
adc
xor
lock
sbb
adc
call
jge
push
or
cli
add
add
mov
rcl
or
push
mov
daa
in
xor
mov
repz
lock
hlt
jg
add
add
dec
adc
xchg
or
sub
or
xlat
cdq
jge
adc
pop
xchg
add
add
bound
push
fild
sbb
sbb
and
inc
adc
sahf
mov
nop
mov
cdq
sub
enter
in
mov
cdq
push
xchg
pop
jmp
mov
shr
sub
pop
test
std
inc
scas
ds
add
add
mov
add
rcl
xlat
or
adc
pop
and
ror
sbb
add
add
pop
shr
add
sub
sar
cmp
pop
jo
test
std
inc
jo
cmp
jle
adc
inc
add
add
xchg
cli
xor
dec
push
aas
lods
adc
iret
mov
dec
lds
retf
push
fs
mov
add
push
and
jae
sub
mov
add
ja
je
jmp
xor
and
add
xor
add
dec
pop
out
dec
aad
mov
xchg
das
jno
add
add
or
mov
push
bound
std
push
add
enter
jg
jnp
stos
retf
add
add
jmp
std
leave
push
mov
pop
dec
js
sub
into
aaa
push
xor
pop
cmp
add
add
lea
add
lock
push
xchg
lods
fldcw
cmp
sbb
call
add
add
xlat
cmp
push
push
sub
or
mov
outs
jne
and
xchg
add
movs
add
add
xor
push
inc
push
addr16
inc
push
jns
sbb
test
mov
xor
sub
in
push
and
adc
push
add
mov
mov
xchg
add
xor
add
add
pusha
mov
sti
cmp
pushf
je
call
fcomi
inc
stos
mov
add
add
shl
or
xchg
push
push
mov
mov
ins
adc
push
sbb
push
add
add
xchg
inc
repnz
sbb
mov
loope
loopne
inc
xchg
push
or
es
repz
pop
add
add
add
adc
jno
or
lock
popf
in
movs
pop
outs
popa
leave
xor
dec
popf
aad
add
add
jns
push
shl
cmp
pusha
and
bound
fstp
fiadd
stos
push
repnz
mov
fmul
add
mov
dec
pop
lock
lock
add
add
add
lods
inc
std
aas
pop
pop
xlat
movs
mov
inc
pop
jge
push
dec
inc
add
jge
mov
add
add
dec
dec
les
jmp
loopne
stc
call
cmp
popf
jp
or
add
add
sahf
and
hlt
nop
ret
xlat
inc
and
in
or
add
add
mov
pop
push
cld
clc
and
ja
(bad)
sbb
loopne
scas
pop
stos
push
push
xchg
inc
add
add
aad
adc
mov
pop
push
adc
sub
lahf
test
xor
push
jns
adc
movs
inc
sti
and
sbb
lds
loopne
inc
cmp
clc
je
pop
mov
add
add
push
jo
fsub
jl
aam
je
jns
cs
cmp
pop
push
and
add
add
add
les
xchg
adc
or
movs
cmp
dec
pop
push
adc
or
mov
call
add
sub
push
mov
mov
jnp
jne
xor
mov
mov
add
add
xchg
and
cmc
mov
dec
repnz
add
dec
fisttp
sub
push
push
pop
add
add
or
pop
adc
sub
xor
test
sbb
fdivr
pop
movs
inc
and
dec
sbb
dec
test
add
add
cmp
ja
fnsave
pop
and
or
pusha
rcl
into
cmp
xchg
xor
dec
push
add
add
mov
or
js
ja
push
movd
xor
mov
or
dec
pop
movsx
add
enter
add
push
or
jmp
cld
xor
popf
cmc
sahf
pushf
inc
(bad)
jle
pop
and
aaa
das
adc
push
in
add
add
jmp
shl
das
jne
(bad)
push
push
daa
jge
call
adc
retf
inc
adc
sbb
popf
cmc
add
add
xchg
add
pop
fidivr
push
fisttp
into
call
(bad)
cmp
add
add
idiv
adc
fimul
dec
or
scas
loop
mov
push
loope
cs
push
sub
jmp
inc
push
pop
add
add
xchg
fwait
sbb
or
sub
sar
mov
jbe
adc
mov
fwait
retf
push
in
std
daa
popf
jmp
pushf
aad
xor
lods
xchg
pop
pusha
pop
or
daa
add
add
add
fisttp
xchg
sub
and
sub
shl
addr16
jp
pop
sbb
add
pop
(bad)
pop
mov
cs
in
adc
fstp
lods
cs
add
aam
add
add
mov
in
cmp
stc
push
stc
fdiv
jmp
jle
ss
ins
dec
test
ror
pusha
add
add
mov
lds
mov
(bad)
iret
dec
fdiv
adc
add
add
and
add
jnp
jl
dec
popa
push
mov
pop
outs
inc
mov
sbb
add
add
add
jo
cld
add
imul
mov
inc
ror
fsub
add
add
inc
loopne
movs
inc
mov
pop
inc
fwait
int3
fsub
test
test
xor
jp
sub
dec
sti
sub
add
enter
xor
adc
push
cmp
dec
push
mov
pop
shl
pop
call
add
push
mov
add
push
xor
cmps
not
or
jge
mov
add
jo
imul
imul
mov
inc
mov
mov
add
add
stc
lods
push
cmp
mov
push
mov
dec
mov
mov
sahf
call
add
lahf
sub
jle
adc
jp
add
or
call
inc
int3
xor
lock
push
inc
test
add
add
popf
hlt
into
add
xor
cmp
or
inc
aam
enter
test
korw
add
add
frstor
add
gs
dec
test
loopne
mov
push
call
jo
or
ror
push
push
add
add
inc
adc
mov
fadd
sbb
jne
add
into
daa
inc
stos
mov
lods
adc
add
add
ss
pushf
xor
push
xchg
push
inc
mov
daa
add
mov
mov
add
xadd
sub
movs
jle
cmp
sbb
sub
sub
add
add
std
push
stos
mov
mov
dec
test
iret
fldenv
push
jp
add
add
or
out
pop
add
cmp
fbstp
dec
sub
pushf
test
adc
dec
retf
pop
adc
add
add
or
in
mov
pop
sub
push
test
(bad)
and
jecxz
pop
add
add
pop
out
fs
sub
fcomp
retf
jmp
pop
mov
dec
mov
shr
add
mov
movs
repz
or
call
(bad)
xchg
push
dec
cmp
add
pushf
in
adc
push
retf
js
adc
jo
scas
aad
jg
and
scas
xchg
fsubr
push
add
add
inc
pop
daa
jl
das
dec
stc
mov
scas
into
or
cwde
mov
mov
test
test
or
add
add
push
lds
fdiv
push
or
test
mov
mov
popf
rol
cli
push
cwde
push
in
add
add
fdiv
mov
xchg
xlat
mov
add
xchg
fnsave
(bad)
sub
not
add
and
mov
pop
mov
push
(bad)
adc
daa
and
js
xchg
add
add
mov
lock
(bad)
out
xchg
mov
sbb
jmp
in
and
sub
sti
fistp
pop
sub
jae
add
add
inc
push
div
das
out
imul
in
inc
loopne
add
push
ins
scas
or
add
add
mov
push
rsqrtps
aad
inc
or
mov
mov
sub
scas
add
add
pop
mov
ror
xchg
test
dec
adc
cmp
out
call
jmp
call
add
mov
push
or
sbb
fcomip
and
shr
shl
aam
mov
imul
add
add
jge
jbe
inc
bound
cmc
enter
aaa
mov
fisttp
cdq
and
add
add
iret
pop
in
cmp
cmp
mov
push
shl
add
add
das
jmp
fstp
and
lods
test
push
pop
dec
and
aad
popa
movs
ja
cmp
daa
add
add
push
arpl
jnp
and
les
push
inc
sbb
push
loop
pusha
adc
and
add
add
nop
nop
repnz
sbb
shl
push
sbb
mov
mov
xor
push
and
pop
adc
add
and
mov
jo
and
cmp
shl
adc
lock
pop
sahf
sar
loop
sbb
add
add
mov
nop
push
bnd
jo
sub
adc
mov
imul
std
cld
pop
in
mov
add
add
and
xchg
xchg
rol
sub
xchg
push
xchg
imul
push
dec
ret
mov
add
add
jb
sbb
mov
mov
xchg
push
mov
fucomi
scas
mov
mov
cmc
add
add
repnz
outs
or
test
and
adc
jae
stos
adc
mov
popf
jg
scas
or
add
add
stos
mov
inc
push
test
pop
inc
add
xor
pop
mov
jl
pop
das
add
add
cmp
mov
or
mov
and
and
mov
add
add
inc
mov
lods
in
loopne
mov
clc
int3
inc
cld
sub
jbe
mov
inc
rcl
push
add
add
jbe
adc
push
cmp
inc
stos
mov
or
inc
cmp
and
mov
imul
mov
add
adc
in
lock
add
dec
mov
and
movs
or
ret
add
add
sub
scas
fisubr
aad
xchg
add
push
push
jl
bound
xor
xchg
(bad)
add
sbb
mov
xchg
mov
inc
jnp
inc
lods
outs
mov
movlps
adc
cwde
ss
push
les
push
sahf
jno
push
int3
xchg
test
add
add
dec
lock
nop
cs
push
push
test
imul
pop
les
pop
adc
add
push
push
mov
in
fwait
mov
and
cmp
mov
js
fs
add
add
shl
pusha
sub
or
mov
mov
push
inc
lahf
push
movs
push
inc
inc
cmp
add
add
xchg
idiv
and
or
or
push
retf
call
enter
or
(bad)
pop
add
add
inc
adc
or
adc
inc
arpl
adc
aam
adc
rol
add
movs
push
inc
mov
les
outs
or
push
adc
push
push
fild
add
in
pop
cmp
pop
pop
das
adc
jnp
and
jno
(bad)
sbb
pop
inc
sbb
push
push
add
or
bound
or
push
int3
cmp
movs
lock
outs
sbb
push
add
add
cmp
sbb
popf
jmp
stc
adc
add
pop
bound
loop
fadd
add
add
in
and
(bad)
jecxz
lock
les
sbb
lods
cmp
push
dec
pop
stos
(bad)
cmp
pop
sub
add
mov
inc
and
dec
rcr
jno
sub
aas
inc
adc
test
add
add
fwait
ds
outs
addr16
jo
outs
mov
adc
js
and
mov
jb
les
add
add
push
push
pop
or
push
adc
and
dec
or
adc
add
add
dec
movs
mov
or
sbb
lock
sub
stos
repz
xor
addr16
pop
mov
add
add
cli
jg
push
fs
in
dec
push
leave
jmp
out
mov
cmp
add
add
mov
push
sub
xor
xchg
mov
cmp
or
push
pop
and
add
test
inc
mov
loop
nop
mov
mov
cld
xor
fiadd
pop
cmp
and
or
mov
or
inc
adc
sub
mov
mov
adc
out
ret
add
movs
je
jle
icebp
adc
xor
test
adc
repnz
test
das
dec
push
add
add
mov
shl
aam
push
mov
es
cmp
sub
mov
in
adc
pop
add
add
inc
push
enter
es
daa
or
jg
lahf
dec
movs
nop
mov
cdq
jo
aad
add
add
xor
push
test
fmul
mov
lahf
push
imul
out
loop
jno
add
add
sub
daa
push
scas
xchg
ja
test
cmp
add
adc
jp
sub
jmp
add
add
ret
xor
shl
xchg
xchg
pusha
or
inc
xchg
nop
jns
movs
add
add
stos
mov
scas
dec
xor
adc
sbb
imul
jg
mov
jmp
test
mov
add
push
sbb
xchg
stos
mov
aas
js
test
inc
hlt
mov
bound
test
add
add
ror
push
enter
xor
dec
dec
xchg
stc
adc
lahf
std
dec
or
push
ret
add
add
mov
or
pop
push
jne
mov
dec
dec
sub
das
add
dec
add
add
cmp
gs
dec
mov
fld
sbb
and
push
call
inc
jno
sub
dec
xor
cmp
hlt
adc
push
jl
or
outs
cld
inc
jecxz
add
add
test
and
ins
and
dec
or
xor
adc
mov
sbb
mov
add
add
out
push
inc
loop
nop
sbb
arpl
sbb
and
pop
pop
push
jns
lahf
cmp
push
add
xor
push
mov
sti
mov
mov
les
cli
mov
das
mov
mov
add
and
xchg
sahf
cli
push
dec
and
dec
nop
sub
pop
jne
push
aam
test
bound
add
add
inc
add
mov
adc
sub
rcr
mov
fwait
push
fst
add
add
add
jmp
cdq
mov
pusha
adc
xchg
sub
jnp
add
add
push
inc
pusha
test
test
dec
inc
and
les
cmp
popf
jge
push
cdq
fstp
push
enter
stos
add
add
and
sbb
jne
or
fs
jmp
dec
xchg
pop
int
jl
mov
add
push
add
push
xchg
dec
in
xchg
and
mov
adc
sub
cwde
inc
push
movs
pop
inc
sbb
add
add
or
mov
jno
imul
jmp
mov
push
xor
sti
add
shl
add
add
jno
nop
sti
and
and
sbb
or
xchg
adc
movs
(bad)
movs
xchg
adc
add
popa
sub
and
inc
pop
(bad)
xchg
or
aas
rol
ror
test
add
or
add
cmp
je
icebp
push
add
cmp
sbb
dec
(bad)
fisttp
and
jge
push
je
add
add
mov
adc
test
movsx
lods
adc
adc
dec
stos
jmp
add
add
leave
adc
adc
jle
(bad)
xlat
test
nop
(bad)
rcr
std
dec
ficom
dec
cmp
add
add
xchg
cmp
add
inc
jmp
pop
rcl
ins
or
retf
add
add
add
push
cwde
jp
add
or
int
push
sti
dec
or
adc
fld
add
add
or
inc
or
fdivr
shl
push
push
add
add
push
lea
mov
enter
sti
add
rcl
dec
and
or
mov
add
pop
adc
inc
jnp
pusha
das
push
je
dec
js
jae
into
mov
or
xchg
inc
add
mov
add
inc
call
sbb
push
fld
inc
aas
push
js
int
hlt
cmp
cdq
rol
add
add
pop
int3
hlt
or
out
cdq
mov
sti
pop
adc
add
sar
add
add
sbb
cmp
or
(bad)
sbb
enter
push
xor
jmp
or
rol
add
fucom
mov
shl
movs
retf
mov
sbb
mov
js
icebp
retf
add
add
fisub
push
clc
push
call
test
test
cli
sub
inc
lea
add
add
or
jnp
icebp
push
mov
jmp
mov
and
pop
mov
retf
sbb
add
add
xchg
push
or
fs
rol
and
inc
inc
repnz
aas
xchg
js
and
adc
add
add
add
push
add
stos
repz
sub
adc
dec
cmp
outs
loope
or
add
and
(bad)
popa
test
and
or
(bad)
shl
push
inc
mov
jmp
outs
add
add
cmp
or
ret
mov
xchg
sbb
stos
mov
jmp
add
mov
add
xor
mov
mov
lock
clc
cmp
sti
mov
and
cwde
inc
test
mov
loopne
xchg
je
xor
cmp
cmp
test
add
add
sbb
clc
jae
loope
or
fnstenv
mov
adc
repnz
or
aam
push
loop
test
or
stos
fisub
xor
push
xor
or
jnp
mov
inc
nop
retf
push
cmp
push
sti
xor
add
add
or
sub
jae
in
ja
cmp
xchg
int
push
add
push
add
add
sbb
out
leave
shl
arpl
and
popa
xor
push
xchg
js
mov
add
das
imul
enter
loop
jg
dec
loopne
rol
and
mov
sar
enter
add
test
jg
sub
push
neg
mov
or
mov
ror
stc
add
add
adc
je
in
fiadd
or
cwde
in
dec
mov
mov
inc
ror
add
add
inc
test
(bad)
fs
mov
jbe
mov
mov
jl
imul
cli
popf
and
add
add
dec
or
lods
dec
jmp
push
fsub
pop
popa
fmul
xor
add
add
les
xchg
repz
cmps
pop
or
inc
and
fcomi
test
xchg
pop
add
add
or
mov
jo
mov
inc
sbb
sub
mov
cwde
fcmovnb
adc
add
add
push
or
add
rol
les
push
adc
add
dec
(bad)
loopne
fdivp
or
add
daa
pop
mov
in
pop
push
mov
shl
xor
or
add
add
pusha
sbb
fsubr
icebp
mov
cmp
pop
sti
imul
lock
mov
movs
fcmovbe
pop
add
add
shl
mov
mov
mov
adc
jnp
xor
xchg
push
cmp
mov
daa
add
add
leave
and
lods
push
adc
daa
loopne
pop
inc
lahf
xchg
dec
push
test
xchg
out
push
stos
inc
dec
add
add
dec
int
or
out
jb
jl
nop
push
pushf
pop
sub
add
xor
mov
mov
bound
add
jns
push
add
mul
(bad)
push
in
call
ds
in
inc
push
adc
add
add
pusha
mov
push
pop
movs
push
adc
jnp
loope
cdq
nop
bnd
xor
push
ja
rol
add
add
add
rcr
mov
mov
push
sar
sbb
push
or
or
pop
into
fld
add
add
cdq
arpl
or
add
pop
or
shr
mov
xor
add
lods
jo
mov
xor
dec
jnp
fild
and
loop
add
add
and
js
xchg
sbb
push
sub
leave
jo
xor
xchg
pop
pop
imul
add
jge
out
sub
fsubr
or
pop
pop
adc
or
dec
mov
cdq
rol
add
add
cmp
xor
lea
imul
push
jmp
inc
jne
add
test
add
add
push
pusha
jb
add
xchg
xlat
test
xor
mov
mov
xor
xchg
add
add
in
cmp
mov
fadd
data16
addr16
xor
push
ins
cld
adc
xor
add
add
sub
fldcw
sub
nop
out
or
sar
sub
dec
aas
into
inc
sub
nop
stc
or
loop
add
add
jno
cdq
or
lods
jg
sub
add
jnp
ror
mov
repnz
clc
pop
add
add
adc
sbb
push
dec
(bad)
pop
stos
jo
mov
clc
fneni(8087
lock
jg
lahf
sti
ret
add
add
mov
sbb
add
dec
adc
stc
mov
sqrtps
in
xor
add
mov
enter
push
les
sub
repnz
push
jb
mov
mov
add
add
or
add
mov
sar
test
mov
mov
add
bound
ins
test
add
add
pushf
dec
cwde
xor
dec
add
mov
cmp
aam
mov
mov
mov
adc
enter
add
dec
dec
mov
inc
es
jmp
adc
xchg
push
enter
or
inc
ja
push
mov
loop
pusha
jnp
cmp
adc
lods
pop
dec
mov
and
add
mov
adc
in
imul
(bad)
rcr
pop
push
pop
gs
or
push
push
add
add
ror
fwait
dec
aas
mov
mov
cmp
mov
(bad)
push
inc
inc
das
jp
add
add
add
test
pop
mov
sbb
shl
or
add
pop
xor
mov
add
add
xchg
retf
mov
lods
push
std
mov
xchg
inc
enter
jmp
jg
cmp
mov
add
mov
test
inc
test
or
inc
loop
xchg
mov
lahf
aaa
out
push
les
sub
fmul
add
add
mov
or
mov
cmc
mov
pop
int3
dec
push
ins
add
add
mov
cli
inc
inc
mov
pop
sti
push
pushf
shr
add
push
mov
and
mov
add
add
jmp
push
enter
mov
adc
add
ret
push
and
lea
push
sbb
popf
cmp
push
add
add
icebp
pop
call
or
add
jnp
mov
mov
leave
jge
imul
movs
add
add
push
adc
add
xlat
stos
push
dec
xchg
lock
mov
inc
ja
retf
jmp
push
and
add
add
loopne
les
push
push
les
repnz
ror
into
mov
popf
xchg
xor
add
or
lods
cmp
push
sub
fisub
adc
mov
test
sub
mov
add
and
adc
add
jo
mov
lea
mov
js
fadd
add
add
push
dec
les
std
push
jb
inc
push
not
sub
push
clc
(bad)
(bad)
std
in
cmp
add
pop
jmp
sbb
adc
push
aas
(bad)
xchg
sub
dec
int
sub
repnz
push
add
add
dec
jmp
clc
mov
iret
push
retf
or
sbb
or
pop
jbe
(bad)
cdq
adc
pop
movs
fsub
add
pop
push
or
push
sub
or
sar
push
adc
mov
sub
xchg
xlat
cmps
enter
cmp
mov
inc
adc
inc
lock
sbb
pop
xor
mov
xor
push
add
add
sub
repz
jns
mov
sub
mov
lahf
jo
mov
xchg
xor
sbb
add
add
cs
mov
add
test
das
(bad)
les
les
xor
mov
add
add
sbb
nop
dec
outs
imul
push
mov
fwait
inc
pop
fcomp
and
or
fisttp
mov
add
add
nop
sbb
adc
xchg
or
jbe
icebp
push
jmp
add
ficom
push
and
add
add
cmp
jb
sub
repz
test
push
mov
inc
xchg
popa
or
fs
out
add
add
mov
fs
cmp
scas
or
and
cmp
leave
in
std
dec
repz
sti
sub
add
add
in
or
push
mov
dec
out
lods
fnstcw
loope
aam
inc
test
stc
push
lahf
xchg
inc
jg
or
pop
dec
and
dec
sbb
in
add
mov
jmp
add
dec
bound
add
mov
adc
push
pusha
jnp
add
lock
int
add
add
adc
mov
lea
pusha
imul
pop
mov
hlt
popf
stos
mov
pop
popf
add
add
pop
cmps
mov
mov
mov
mov
xor
fs
mov
je
popaw
xchg
add
add
popf
xor
leave
mov
mov
std
push
mov
mov
daa
sub
int3
xor
popa
and
cmp
shr
xchg
add
add
add
hlt
add
push
or
adc
add
add
add
push
and
push
jo
mov
jns
nop
inc
mov
inc
dec
pop
hlt
push
push
add
add
xor
scas
clc
in
xchg
lahf
dec
stos
sub
and
inc
js
imul
xchg
sub
inc
retf
adc
add
add
lock
adc
push
fxam
sub
xor
cwde
daa
ins
pushf
test
shl
rcl
add
add
pop
mov
pop
iret
xchg
mov
cmps
dec
inc
add
pushf
lods
gs
clc
push
xchg
inc
leave
repnz
add
add
pop
cwde
ret
mov
sub
ins
pop
xchg
push
(bad)
fld
cwde
inc
push
loop
cmps
xchg
dec
add
add
inc
in
test
ror
test
popf
fwait
test
popf
shl
ss
or
ss
add
add
les
mov
fdivr
ror
xchg
lahf
data16
dec
out
cmp
add
add
sub
jg
adc
fs
jmp
and
sbb
mov
add
sub
add
pop
sub
add
jne
outs
push
jae
cmp
inc
imul
ror
add
add
sbb
movs
loop
outs
icebp
xlat
add
shr
setb
push
retf
jmp
inc
mov
add
je
dec
fidiv
pop
retf
pop
imul
sti
lahf
cdq
pop
and
loop
jle
add
add
xlat
and
and
xor
xchg
int3
push
loopne
fwait
(bad)
cli
xchg
or
js
je
dec
call
add
push
add
rcl
loopne
adc
inc
pusha
cmp
sub
xchg
pop
test
jl
add
add
imul
and
xchg
adc
sub
add
dec
adc
jb
dec
add
add
or
adc
pusha
inc
dec
add
dec
dec
push
mov
pop
movs
sub
mov
cmp
add
add
xchg
bound
jno
cmps
imul
mov
jp
aam
and
or
fst
jno
sar
pop
sub
rol
nop
xchg
shl
in
sub
jo
sub
add
add
add
adc
aad
adc
push
test
push
mov
jns
dec
dec
into
test
xchg
inc
in
add
add
dec
jmp
mov
jbe
push
call
cwde
pop
sbb
add
add
lock
shl
movs
or
and
adc
call
push
add
add
cmp
scas
pusha
xchg
loopne
jne
cmps
sub
xor
call
push
inc
xchg
xchg
out
test
sbb
add
add
inc
jmp
mov
into
pushf
into
inc
cld
dec
and
into
push
inc
and
or
daa
pop
lea
mov
fldenv
adc
dec
jg
shl
bound
mov
push
add
shl
pop
and
add
inc
shl
mov
lods
push
add
add
or
loopne
outs
inc
ret
or
or
mov
sub
and
mov
cmp
out
movs
jb
int3
push
jbe
mov
adc
adc
add
sub
daa
jmp
add
movs
push
xlat
in
jle
xchg
enter
or
push
stos
jmp
adc
inc
xchg
jg
cmp
add
add
(bad)
call
shl
xor
clc
sar
out
push
fistp
adc
enter
add
push
hlt
or
cmp
test
dec
sbb
mov
inc
loopne
aam
mov
mov
add
pop
xchg
fwait
dec
mov
mov
mov
mov
and
movs
pop
adc
inc
mov
add
cmp
je
pop
in
call
repz
cmps
adc
loopne
in
cmovg
add
add
out
movs
int3
or
daa
lea
mov
cmps
scas
cmps
xor
or
add
add
dec
xor
xor
fs
iret
cli
dec
ja
xor
pop
or
sub
movs
and
xor
out
add
add
shl
xor
int3
adc
inc
cmp
bnd
aam
jle
pusha
sub
inc
es
and
sahf
add
add
mov
xor
and
shl
pushw
ror
and
add
add
sub
dec
xor
cmc
ret
inc
fsub
cmc
dec
scas
out
xor
xchg
adc
xor
add
add
or
lds
shl
ss
xchg
mov
mov
or
add
sub
aam
gs
xchg
(bad)
mov
adc
push
loopne
and
or
in
add
add
xor
or
push
ficomp
rcr
mov
sub
dec
sub
jbe
add
add
lea
add
out
cdq
cmps
sbb
clc
xchg
mov
jnp
add
cmps
shl
loop
add
dec
add
add
cmps
xchg
repnz
or
push
dec
adc
push
adc
dec
mov
cmc
in
push
scas
add
leave
add
mov
addr16
int3
mul
adc
ins
popf
test
or
adc
add
xor
or
xchg
out
adc
out
inc
xor
push
push
and
hlt
leave
call
je
add
add
stos
xor
sub
dec
nop
xor
shl
cmp
add
add
xor
mov
inc
mov
xchg
and
inc
rol
jmp
mov
mov
push
cld
xor
adc
add
add
in
in
into
pop
xchg
push
mov
push
pop
pop
push
lods
pusha
pop
sub
or
movs
mov
add
add
and
div
dec
mov
lods
cmp
in
xor
dec
xchg
inc
pop
cmp
add
add
pop
inc
xor
pop
push
push
xchg
xchg
pop
ins
sub
mov
pop
push
mov
add
add
fs
xor
inc
bound
jmp
call
je
xchg
in
mov
add
add
or
movs
mov
xor
push
outs
cmp
pop
inc
sub
and
lahf
popa
dec
ret
lods
mov
add
add
loope
or
jns
fdivr
pop
js
into
out
pushf
mov
pusha
in
push
daa
jno
add
add
imul
add
push
cwde
pop
and
dec
icebp
xchg
jg
das
and
aas
add
add
jns
adc
repz
retf
cs
push
out
and
fstp
add
add
xchg
xor
retf
imul
enter
cmps
je
add
or
dec
repz
add
test
add
add
jp
sbb
leave
sbb
push
and
not
dec
std
add
inc
lds
stos
xlat
add
add
or
xchg
sub
cmps
mov
into
lock
cld
xchg
jle
xchg
or
add
add
in
cmp
stos
jbe
aad
ds
ins
and
adc
sub
dec
call
shl
add
add
inc
dec
xor
add
(bad)
inc
int
test
setl
dec
ror
adc
add
add
adc
xor
imul
mov
(bad)
pop
lahf
push
cmps
mov
push
cmp
jecxz
add
add
and
loopne
jae
in
jmp
ja
push
push
sti
pop
pop
jnp
jmp
jmp
xchg
add
add
jae
push
sbb
sub
scas
push
mov
pop
cld
repnz
add
xchg
cmp
addr16
push
and
jmp
call
mov
and
imul
aaa
add
add
daa
push
push
fld
or
(bad)
hlt
sub
mov
sub
sbb
dec
retf
mov
add
add
sbb
in
ret
dec
xchg
sahf
or
and
cmp
and
in
add
add
sub
adc
jmp
cmps
aam
sbb
or
js
shl
scas
sub
sub
add
add
add
or
or
scas
mov
mov
mov
add
pushf
dec
add
add
aas
repnz
push
push
nop
adc
sub
enter
pushf
rcl
sub
add
je
add
add
or
and
fs
sar
push
das
gs
inc
jne
pop
imul
add
add
mov
dec
sti
pop
fs
inc
push
(bad)
cli
xor
cwde
pusha
pop
ins
dec
imul
add
frstor
stos
mov
add
test
test
imul
scas
inc
mov
dec
arpl
sbb
add
add
and
ret
shl
ins
adc
jp
inc
jb
test
xchg
add
rol
xchg
mov
cmp
xchg
nop
shl
and
aad
push
inc
ror
retf
stos
fiadd
mov
add
add
mov
lock
inc
adc
mov
dec
rep
clc
inc
jl
and
imul
fwait
xchg
sub
pop
es
int3
or
and
jle
mov
lds
mov
adc
(bad)
pop
pop
jg
inc
push
arpl
cld
or
cmp
fsubr
push
and
inc
int3
clc
push
test
add
add
sbb
cmp
imul
loopne
pop
mov
or
xor
retf
test
add
add
icebp
mov
inc
rol
inc
les
dec
cmp
les
mov
fwait
xor
inc
add
add
sub
push
test
ss
adc
mov
cdq
inc
pop
nop
mov
add
add
sbb
and
sub
imul
jb
xlat
push
nop
shl
add
jnp
add
add
push
push
cmp
add
cmp
in
cmps
and
loopne
icebp
dec
jo
inc
pop
inc
jmp
jmp
xchg
xchg
daa
sti
in
fild
push
dec
adc
lds
cmp
loopne
mov
add
add
movs
jl
jmp
mov
dec
fidiv
and
inc
call
lods
pop
sbb
push
add
add
ds
retf
mov
movs
std
shr
and
sahf
mov
lock
push
cld
lods
fadd
add
add
sub
test
xchg
sbb
aad
loop
pop
mov
xchg
int
xchg
push
adc
add
add
mov
jbe
sbb
mov
in
xchg
jmp
sub
repnz
xor
add
fld
sahf
xor
in
or
dec
adc
sub
ror
mov
in
push
add
add
and
push
and
je
pop
lock
jnp
push
call
xchg
imul
and
add
add
nop
inc
hlt
les
adc
jmp
sbb
std
xor
nop
mov
xor
inc
add
add
and
shl
inc
sub
cmp
pusha
inc
test
sub
lahf
cmp
or
mov
add
add
pop
clc
sub
retf
jnp
sub
fwait
fwait
retf
xor
lock
jmp
xor
adc
sar
mov
or
je
ja
test
adc
mov
inc
lods
or
add
pop
fldcw
mov
fxch
or
aam
lahf
ins
in
mov
nop
dec
mov
add
jmp
and
(bad)
and
or
js
fwait
stos
push
or
add
addr16
inc
dec
imul
jb
add
or
or
xor
mov
mov
add
add
cmps
and
mov
push
lods
push
nop
repnz
jle
mov
and
cmp
cdq
push
ret
jg
add
add
mov
call
jecxz
je
shl
es
loop
jo
add
loopne
and
xchg
push
retf
push
add
add
shl
jnp
loopne
mov
inc
loopne
sbb
adc
in
sub
pop
ins
mov
or
add
add
retf
dec
jae
in
or
cdq
jb
jmp
inc
or
or
adc
sbb
jmp
rcl
xor
in
add
xor
mov
and
jp
add
add
or
add
add
sbb
es
cld
xchg
pop
xchg
gs
cmps
loopne
xchg
add
add
je
add
in
shl
fstp
cld
lods
pushf
ror
mov
mov
inc
or
(bad)
(bad)
dec
not
movs
test
mov
adc
sub
jmp
lods
mov
test
add
add
iret
imul
(bad)
fidiv
push
push
(bad)
shl
rcl
sti
call
imul
add
add
mov
pop
mov
jle
dec
adc
jmp
adc
fidiv
xor
add
or
cdq
mov
dec
pushf
cmps
icebp
adc
js
mov
mov
adc
loopne
or
add
add
clc
sbb
(bad)
shr
xchg
sub
dec
mov
sbb
test
add
add
(bad)
pusha
les
xchg
mov
mov
sub
xchg
dec
pusha
push
nop
jns
inc
shl
fistp
push
jno
pop
xchg
xchg
mov
mov
dec
mov
dec
mov
loopne
xchg
add
add
push
mov
and
sti
ret
rcr
rcl
xor
test
retf
cmp
add
add
dec
test
std
or
enter
jne
push
dec
adc
das
mov
or
push
dec
mov
nop
adc
add
add
sbb
dec
pop
and
push
in
sub
scas
dec
fisttp
adc
add
stos
sub
push
jo
and
cld
jbe
stos
mov
test
xchg
in
lock
cmps
xchg
in
sub
add
add
push
mov
test
push
lods
xchg
in
shl
add
pop
lods
or
adc
xchg
xor
loope
push
sub
test
dec
inc
dec
jb
sub
push
push
mov
pop
lahf
add
add
and
push
out
hlt
call
or
call
sbb
loopne
add
add
lock
mov
push
in
inc
icebp
pop
lods
or
inc
sti
xchg
call
cmp
aam
add
add
adc
inc
adc
bswap
ud2
dec
jbe
inc
in
mov
push
out
rol
add
add
daa
add
add
int3
inc
or
cwde
test
pop
jmp
(bad)
push
or
cld
inc
add
add
mov
xchg
loop
shl
int
cmps
push
mov
xchg
in
add
mov
add
add
push
jg
(bad)
mov
out
jp
imul
std
jecxz
xchg
and
jecxz
add
add
mov
fldcw
retf
xor
sub
mov
(bad)
cmp
shl
mov
add
add
add
or
cmp
sbb
int3
call
push
mov
inc
jmp
mov
add
add
pop
push
mov
and
dec
cwde
bound
adc
pop
mov
push
push
xchg
data16
add
test
aas
dec
inc
retf
mov
fisubr
aad
icebp
cmc
bound
mov
jp
pop
add
add
lds
lods
aas
jbe
xchg
outs
clc
push
lods
mov
push
add
in
push
in
cdq
jbe
add
add
add
xor
mov
dec
nop
dec
sbb
mov
xor
cmp
jg
xchg
and
add
add
add
and
or
cmp
xchg
or
sub
cmp
jle
sti
ficomp
add
add
jne
jns
adc
sbb
(bad)
jb
cmp
inc
call
add
sar
sbb
add
add
add
mov
adc
sbb
push
sbb
jle
dec
fdivr
xor
inc
and
add
add
mov
xchg
fs
fsubr
test
jge
mov
loope
int3
clc
jmp
add
add
sub
pusha
cmp
jge
push
add
dec
and
mov
pushf
pop
aas
add
add
stos
sahf
adc
outs
clc
shl
add
jb
stos
jb
mov
mov
push
dec
sub
mov
add
aam
cmps
ss
inc
movs
in
pop
sub
inc
dec
fmul
xchg
push
xchg
xchg
nop
in
lea
add
add
xchg
aaa
mov
xchg
or
inc
ror
adc
or
mov
or
mov
mov
add
add
fstp
into
pop
je
clc
xor
jae
pop
mov
push
mov
pop
call
(bad)
fadd
add
add
cmc
or
pop
mov
jmp
jl
mov
push
mov
dec
inc
dec
xchg
push
cwde
add
add
add
xchg
sahf
jb
mov
nop
adc
push
and
stc
clc
sbb
stos
in
data16
or
sub
cmp
out
sar
bound
or
add
push
adc
add
add
add
cld
mov
jmp
clc
jnp
push
add
in
rol
push
sti
sub
or
or
adc
xor
je
bnd
les
xchg
stc
aas
fs
or
xor
add
add
and
mov
sbb
sbb
xchg
pop
aad
push
ds
sbb
add
add
xchg
or
sahf
jl
cld
mov
mov
adc
xchg
sbb
add
add
pop
push
cmp
jns
jg
mov
or
fld
push
xchg
ds
pop
or
fsubr
in
outs
hlt
push
nop
push
add
add
adc
jle
jmp
xchg
pop
push
cmc
and
(bad)
push
xchg
int3
push
add
add
arpl
pop
(bad)
icebp
jmp
jle
inc
dec
aas
xor
stos
xchg
mov
cs
mov
jmp
dec
or
and
adc
mov
lods
add
imul
shl
mov
add
mov
mov
leave
jge
xchg
or
loop
cmp
pextrw
mov
push
pop
retf
in
aas
push
adc
add
push
scas
gs
in
stos
mov
or
rol
and
add
sub
add
mov
ror
jmp
fsub
jno
imul
sbb
jge
add
add
jno
and
in
into
in
cmp
push
retf
out
xchg
unpcklps
cmp
lods
jns
loope
fwait
jl
add
add
mov
daa
push
dec
shr
sbb
cli
cs
push
xor
xor
add
add
adc
mov
xchg
jns
jmp
cwde
pop
pop
add
cmp
add
add
fst
das
int3
out
popf
pop
imul
hlt
pop
sbb
or
adc
sbb
and
int3
add
add
and
sbb
enter
and
push
dec
and
sub
push
add
add
dec
sbb
push
aam
dec
repnz
cmp
popf
data16
pop
cmps
sub
pop
cs
test
xor
add
xchg
lods
fldenv
adc
dec
mov
popf
ins
inc
dec
add
sub
cdq
out
dec
jo
xchg
(bad)
rol
add
add
and
scas
pop
xlat
push
imul
hlt
scas
imul
xor
sub
ins
es
add
add
inc
shl
cmps
lea
sub
sub
cmp
mov
retf
xchg
pop
or
pop
jae
mov
in
push
add
cmp
(bad)
push
push
lods
movs
cmp
dec
add
add
mov
xchg
pop
into
mov
and
push
push
retf
xchg
ins
pop
pop
(bad)
dec
fmul
dec
or
add
add
cmp
icebp
push
and
mov
or
int3
hlt
and
jb
add
add
ret
jno
jae
xchg
nop
test
adc
pop
not
shl
ss
mov
dec
in
ins
les
add
add
inc
pop
ficom
xchg
mov
xor
movs
inc
xor
adc
or
add
inc
mov
push
fptan
aas
dec
mov
sbb
xchg
sbb
enter
test
add
gs
xchg
lods
and
inc
loopne
enter
loopne
and
sub
jle
enter
pop
add
add
movs
sub
inc
xor
aam
cwde
mov
sti
mov
movs
or
add
add
adc
das
fisub
xchg
aam
mov
imul
mov
lock
add
adc
not
mov
inc
and
xchg
push
inc
mov
(bad)
std
sub
sbb
add
add
push
xchg
cmp
nop
mov
sub
jo
mov
mov
js
jl
push
add
add
loopne
test
lea
dec
push
inc
lds
pop
adc
cwde
cmp
add
mov
add
add
mov
movs
aaa
nop
lods
in
jl
pop
out
inc
inc
mov
les
push
les
add
add
mov
pop
(bad)
pop
imul
inc
mov
aas
nop
mov
ret
aaa
retf
in
rol
add
add
xchg
and
jg
rol
adc
dec
xchg
pusha
jb
push
stos
add
add
add
cs
jb
ror
sahf
fs
mov
push
les
and
lods
test
add
add
(bad)
fbstp
mov
cs
jl
add
push
pop
push
in
fwait
and
mov
add
add
arpl
and
inc
sbb
push
push
pop
repnz
daa
pusha
repnz
aad
out
sub
bound
lea
add
add
mov
sbb
rcr
sbb
pop
dec
shl
shl
push
int3
push
and
xchg
and
add
add
or
ja
mov
adc
in
adc
jbe
mov
mov
add
add
xchg
enter
cmps
add
push
fistp
dec
xlat
jnp
sub
repnz
popa
dec
mov
add
add
push
mov
cmc
into
add
aam
adc
inc
adc
pop
or
mov
nop
sbb
add
adc
jae
add
sbb
adc
pop
mov
test
cmp
jo
xchg
or
add
mov
cli
pop
add
mov
stc
mov
aas
sub
sub
sti
bound
add
add
aaa
das
mov
push
cmps
jo
sub
rcl
cs
xchg
and
aaa
pushf
and
test
add
push
fld
pop
loopne
dec
adc
dec
dec
mov
loop
cmp
cs
inc
xchg
push
add
add
mov
cmp
lds
inc
out
and
rcr
and
jns
pop
inc
and
rcr
pop
add
add
push
cld
and
push
push
mov
loopne
mov
adc
adc
cmp
sub
and
mov
add
add
fadd
iret
clc
push
jo
xchg
clc
int3
inc
test
enter
add
loope
shl
loope
in
ds
je
adc
imul
lods
je
fstp
mov
add
add
ror
push
mov
shl
sub
loop
popf
push
ret
mov
mov
add
add
adc
lods
dec
fdivr
fmul
pop
dec
add
(bad)
push
mov
add
add
test
aam
jae
xchg
xor
ins
and
sti
fnstcw
push
push
push
test
jl
add
add
inc
fsubr
jne
movs
dec
sbb
sub
and
mov
pop
adc
jmp
add
jno
pop
add
sub
pop
inc
inc
mov
fmul
jne
lock
pop
(bad)
and
mov
pop
add
add
shl
fsub
jmp
test
nop
add
xor
adc
lahf
sete
mov
mov
add
scas
pushf
ret
les
jmp
je
int
repz
mov
in
sub
(bad)
shl
ret
add
add
lods
(bad)
ds
jae
(bad)
sbb
std
ds
mov
mov
mov
test
add
add
das
lods
(bad)
fucomp
daa
add
btc
ins
out
aad
test
or
and
(bad)
cld
stos
pop
fld
add
add
pop
lock
jne
add
push
and
(bad)
ror
jl
stos
inc
shr
inc
jmp
rcr
push
sub
xchg
mov
fsqrt
push
pusha
pop
cmp
add
add
jne
in
xchg
test
sbb
test
popa
das
stc
or
and
mov
adc
xchg
or
xlat
xor
add
add
jne
stc
(bad)
mov
lods
or
fnstenv
adc
push
add
add
lahf
fwait
inc
sub
lods
ror
push
scas
bound
adc
int
adc
mov
or
add
icebp
mov
ja
stos
add
les
add
push
sti
xor
mov
push
adc
add
dec
ins
fldcw
cmps
neg
or
fwait
test
ds
repnz
and
push
jbe
in
push
(bad)
in
add
add
daa
leave
dec
sbb
add
out
and
ret
xchg
mov
cmp
push
add
fsubr
add
lds
jmp
repnz
pop
cdq
mov
pop
and
sbb
sub
mov
xor
adc
clc
add
add
inc
dec
cmp
sbb
xchg
fs
inc
xchg
sar
mov
xchg
add
add
mov
outs
cmp
movs
mov
push
adc
sti
cmp
daa
pop
mov
adc
add
lods
add
add
outs
mov
(bad)
clc
dec
addr16
clc
or
adc
test
cdq
or
mov
adc
push
je
loopne
in
sbb
sub
lock
scas
fild
test
pop
adc
add
add
repnz
out
pop
mov
and
bound
mov
fld
out
or
jo
enter
add
mov
mov
(bad)
pop
movs
(bad)
ds
lods
jo
test
sar
dec
icebp
ficomp
shl
nop
out
add
add
and
mov
ret
push
nop
sub
mov
mov
inc
xlat
adc
or
fistp
add
add
fidiv
div
xchg
push
scas
jl
pop
ror
xchg
call
cmps
cmp
test
inc
popa
add
add
in
dec
mov
cs
jbe
cmp
xchg
stc
xchg
adc
out
push
and
je
sbb
add
mov
cmp
scas
mov
cmps
pop
inc
adc
popf
shl
mov
xchg
sbb
add
add
xchg
push
retf
test
dec
and
cmps
xlat
mov
pop
mov
push
mov
add
add
jnp
mov
add
fcom
sbb
sub
cmp
pop
pusha
shl
jp
add
add
lods
inc
sbb
nop
clc
jb
mov
adc
and
out
and
or
nop
push
addr16
add
add
mov
sbb
int3
test
adc
jne
xchg
sti
fwait
cmp
xchg
push
test
js
imul
add
mov
cli
dec
shl
call
or
mov
in
pop
add
add
je
push
push
repnz
and
ds
adc
sbb
and
adc
out
pop
mov
call
mov
int3
xchg
cld
icebp
pop
push
push
or
bound
add
add
jle
add
cmp
mov
adc
mov
out
push
jnp
adc
sub
push
and
je
push
call
jmp
sbb
nop
cmp
call
enter
rcl
in
push
xchg
add
add
loopne
(bad)
push
xchg
and
std
push
push
int
adc
sub
lea
push
xor
dec
pop
daa
rol
add
push
retf
bound
ins
mov
pusha
mov
jo
loope
mov
and
out
inc
xchg
jb
add
add
mov
imul
sub
add
and
sub
or
inc
mov
add
add
stc
lods
mov
mov
scas
int
mov
inc
inc
call
cmp
or
add
add
daa
mov
cmps
pop
dec
pop
jmp
enter
js
and
xor
add
add
dec
in
mov
in
stc
retf
int3
cmc
cdq
push
les
dec
dec
cld
mov
inc
out
ffree
and
add
add
mov
es
out
test
fnstsw
cmps
mov
sub
or
add
add
push
ficomp
mov
inc
add
mov
pcmpgtb
or
stc
push
adc
mov
add
add
(bad)
movs
inc
mov
movs
dec
or
sbb
xor
and
dec
adc
sub
add
add
call
push
dec
and
and
lea
adc
fistp
adc
test
add
add
js
sar
ins
xor
mov
or
pop
mov
adc
cwde
ds
mov
add
add
adc
aaa
scas
daa
int3
hlt
loopne
(bad)
pop
cmp
xchg
les
adc
add
pop
cmp
je
push
dec
shl
jmp
xchg
mov
dec
and
inc
jo
jae
add
add
stc
fdivr
sub
and
out
retf
neg
push
inc
push
retf
mov
add
push
adc
or
ret
int
cmp
cmp
sub
add
add
jle
sti
push
or
lahf
and
hlt
push
pop
leave
sti
push
jmp
stos
das
dec
or
daa
fiadd
add
add
dec
ins
push
xchg
das
add
stos
and
push
lahf
ins
sar
mov
popf
xlat
add
add
add
sti
push
or
shr
std
mov
neg
les
fcom
add
pop
sbb
lar
pusha
mov
xor
adc
or
ret
in
add
add
adc
pop
cmp
sbb
or
add
add
fsubr
ret
push
mov
mov
xor
mov
pop
and
add
and
outs
imul
pusha
jnp
pop
push
sub
push
xor
shl
mov
add
add
or
lock
sbb
nop
dec
xor
adc
sbb
cmps
mov
mov
add
add
mov
loopne
mov
jmp
fnsave
aaa
sub
icebp
aaa
xor
mov
push
mov
mov
add
xor
test
sbb
je
nop
int3
add
and
movs
int
mov
inc
add
add
add
int3
or
mov
inc
bound
ss
push
inc
je
adc
add
add
dec
mov
popa
xor
pop
push
icebp
dec
push
dec
imul
enter
add
enter
add
mov
movs
or
(bad)
movs
xchg
ins
(bad)
mul
or
and
push
cdq
or
add
sbb
les
inc
and
dec
push
in
inc
xor
mov
push
cmp
ror
add
add
sub
dec
cmp
sbb
aam
xor
inc
inc
jne
or
jl
fld
add
add
bound
std
and
sub
adc
mov
into
xchg
adc
call
add
add
int3
lahf
cdq
mov
pop
lods
fcmovb
fistp
mov
jb
rcr
and
lahf
je
sahf
add
add
and
fs
hlt
inc
dec
or
nop
in
jo
nop
bound
js
inc
sub
inc
ss
jo
add
add
inc
dec
fs
and
pop
mov
and
and
(bad)
sub
cmp
retf
add
add
or
inc
clc
push
sbb
or
cli
mov
cmp
add
add
cmp
or
enter
cmp
jnp
jno
mov
cdq
add
add
jg
fidivr
stos
dec
fst
mov
add
push
jmp
neg
and
push
scas
add
add
and
ins
imul
lea
test
adc
out
fidiv
mov
add
add
mov
dec
pop
inc
sbb
adc
push
jmp
push
dec
hlt
test
cs
cmps
pop
dec
and
add
add
loop
pop
xlat
inc
(bad)
and
xchg
test
push
xor
call
adc
bound
add
sub
cmps
jl
sub
lahf
fldenv
jp
push
lods
add
mov
mov
mov
add
add
js
or
lahf
loopne
inc
xchg
inc
or
movs
jb
sub
dec
push
dec
dec
pusha
add
add
mov
pop
mov
xlat
repz
sub
adc
push
jne
out
sbb
in
not
dec
dec
mov
dec
xor
scas
fsubr
stos
add
mov
hlt
add
cli
xchg
dec
jne
cmp
mov
sti
int3
inc
data16
adc
jnp
imul
inc
mov
add
add
dec
or
and
adc
call
add
test
sbb
mov
and
inc
add
add
imul
out
mov
xchg
cld
les
push
nop
repnz
jb
push
xchg
stos
pop
push
rcr
(bad)
je
sti
add
add
xor
sub
pop
test
sbb
and
push
dec
add
add
add
scas
or
or
jge
push
jnp
or
repz
mov
and
ja
mov
push
ss
sbb
add
add
push
mov
lock
pause
pop
aad
xor
dec
pop
push
out
add
pop
add
add
shr
xchg
dec
sbb
ds
jmp
lss
jmp
sbb
jmp
xlat
add
add
pop
pop
sbb
jne
clc
int3
mov
jl
xlat
popf
clc
mov
pop
shl
push
daa
pop
add
add
mov
jmp
dec
mov
retf
call
ins
mov
cmps
dec
(bad)
cmp
add
outs
jbe
xor
cdq
test
add
jge
xchg
and
pop
sbb
or
or
add
ds
jno
fsubr
cmp
push
lahf
xchg
adc
xchg
hlt
je
pop
(bad)
idiv
push
and
and
adc
repnz
dec
cmp
or
div
jmp
or
mov
out
xor
mov
and
sub
xchg
mov
sbb
add
add
out
xchg
sub
loop
inc
sub
jo
inc
xchg
jp
mov
xor
add
cwde
sbb
mov
loop
ret
les
mov
dec
add
call
add
lods
mov
add
add
dec
mov
mov
jge
pusha
nop
and
lods
popa
and
add
int3
dec
add
add
push
xor
sub
jmp
or
xchg
mov
add
stos
push
dec
push
sub
mov
mov
add
add
shr
push
or
ds
inc
xor
rcl
scas
adc
inc
pop
test
add
add
stc
push
push
and
(bad)
cmp
push
mov
and
sbb
(bad)
aam
mov
add
add
into
dec
xor
xor
adc
or
icebp
pop
or
and
fsub
aaa
adc
add
add
push
pusha
rcl
jbe
or
push
jg
adc
aam
push
and
std
ror
mov
add
mov
in
mov
mov
adc
inc
and
add
add
lods
xor
push
and
xchg
shl
and
add
add
push
push
add
cmp
dec
mov
jns
seto
mov
movs
cmp
movs
add
add
xchg
aad
lods
cmp
ins
jmp
(bad)
dec
test
stos
bound
add
jno
mov
add
add
vmovlpd
xor
push
dec
xor
sub
push
pop
pushf
push
fld
pop
rcl
xchg
sbb
add
add
repnz
outs
nop
inc
(bad)
push
xchg
popf
xchg
pop
push
mov
add
dec
pusha
mov
aaa
les
cmp
mov
dec
into
add
add
scas
adc
jp
and
rcr
and
mov
push
cmp
test
add
add
dec
inc
mov
lods
shl
fidiv
test
xor
fldcw
pop
add
add
mov
push
push
mov
jge
and
and
and
pop
call
ret
sub
add
add
mov
cmp
jbe
xchg
mov
xor
imul
out
or
mov
add
add
movs
push
retf
rep
cmp
and
xor
add
(bad)
cmp
add
movs
rol
sub
lods
adc
fadd
pop
and
mov
sub
add
test
mov
test
iret
rol
jo
test
xor
cmc
mov
add
add
sub
aam
sti
mov
and
pop
cmp
or
sub
or
add
add
mov
pusha
and
mov
xor
mov
jmp
mov
aam
inc
add
add
lods
test
push
mov
inc
icebp
movs
stos
mov
mov
inc
icebp
js
mov
aad
add
add
mov
push
inc
xchg
in
xchg
popf
cmp
mov
xchg
push
jmp
push
mov
add
add
and
in
cmps
push
movs
stos
mov
inc
inc
lahf
dec
scas
xor
mov
pusha
dec
cs
add
add
fs
jge
cmc
call
icebp
add
xor
xchg
(bad)
mov
add
add
add
lock
mov
or
test
and
aam
mov
or
push
add
add
push
sbb
cli
sub
adc
push
sbb
push
cdq
xor
mov
mov
test
xchg
mov
inc
and
add
add
push
mov
jbe
inc
shl
aam
xchg
cld
push
enter
mov
sbb
in
sbb
add
mov
rol
pop
pop
and
mov
adc
or
shl
add
pop
xchg
sub
and
adc
mov
call
sti
sahf
add
adc
sub
test
sub
pop
mov
add
add
xchg
mov
adc
sbb
jmp
inc
std
scas
add
add
cli
aaa
and
jle
dec
cmp
test
mov
jp
cmp
jge
jmp
add
pop
mov
adc
add
add
out
push
xchg
and
sub
adc
pop
mov
dec
push
neg
(bad)
mov
adc
sti
dec
mov
add
ins
and
adc
adc
into
pop
push
adc
push
sbb
push
inc
sbb
jl
mov
dec
mov
f2xm1
push
and
sub
and
add
push
ficom
shr
add
add
sbb
adc
xchg
push
mov
dec
in
fist
fcom
xor
imul
add
add
daa
inc
sub
sbb
ja
push
push
es
icebp
sahf
dec
push
out
int
dec
add
add
arpl
mov
mov
inc
xlat
mov
adc
repz
hlt
(bad)
mov
movs
clc
ja
pop
xor
or
add
add
mov
cmp
and
mov
or
jb
sahf
repnz
add
add
add
or
add
retf
fnstcw
or
fwait
sub
mov
xor
inc
add
add
sub
adc
dec
sub
inc
cmp
jmp
nop
inc
mov
push
inc
dec
retf
push
jg
mov
add
add
out
lods
inc
sti
push
je
jmp
popf
and
adc
xchg
push
(bad)
adc
push
add
add
jge
loopne
ja
adc
mov
inc
in
xor
out
not
and
lea
add
add
jae
in
jg
adc
pushf
sbb
test
(bad)
or
push
pop
inc
jb
mov
inc
pop
aas
sub
adc
jge
in
sub
push
lock
cli
adc
pop
mov
call
push
add
add
int
hlt
jmp
xor
inc
jle
mov
push
or
add
and
add
add
xchg
dec
fdiv
sub
add
jno
pop
inc
pop
sbb
or
push
es
add
cmp
add
add
jne
lahf
dec
add
xor
popa
inc
jns
movs
and
into
fwait
inc
push
aad
push
push
inc
pop
add
add
and
ss
or
sbb
or
cmps
mov
dec
pop
in
rcl
mov
or
and
fcomip
aam
cmp
pop
repz
scas
inc
test
and
jbe
push
icebp
jl
shr
inc
lea
add
sub
pop
sub
clc
sub
push
jmp
movs
lock
push
sbb
mov
add
add
test
(bad)
jne
bound
je
adc
pop
and
and
inc
jne
sub
push
jmp
add
add
xor
lea
xchg
sub
fcmovnu
xchg
inc
cmp
jl
ror
xlat
add
add
stos
cmp
nop
pop
das
(bad)
pop
push
inc
(bad)
int3
and
push
pop
daa
dec
pop
repnz
nop
pslld
pusha
pop
pop
add
add
push
adc
push
sbb
add
push
or
or
jmp
loop
add
add
dec
mov
adc
dec
enter
xlat
(bad)
mov
sti
gs
sbb
add
adc
add
add
mov
aaa
call
sub
das
mov
test
sbb
jae
call
add
push
mov
sar
fist
bound
mov
nop
jne
mov
add
add
sahf
sti
pushf
aad
fidivr
lods
ss
stc
cmp
rcr
push
add
jp
add
add
xchg
ins
jne
dec
call
sub
pop
stos
popa
test
jbe
enter
add
add
lods
enter
inc
add
sbb
cmp
sub
jo
or
clc
push
jmp
add
add
mov
adc
fs
mov
inc
and
scas
lahf
loopne
jo
xchg
mov
jg
add
add
mov
push
inc
adc
fmul
test
test
inc
retf
jo
push
or
add
in
scas
test
addr16
inc
and
icebp
xchg
cs
shl
cmps
inc
outs
cs
nop
or
add
sub
loopne
mov
jmp
test
mov
jge
rol
stos
add
add
ins
xchg
out
push
pusha
cmp
cli
call
jno
stos
scas
mov
into
mov
stos
popa
aas
test
(bad)
push
repz
lods
fld
sbb
dec
fmul
ds
add
add
call
out
cmp
xor
jns
outs
dec
cmp
out
and
push
inc
inc
jg
lods
push
add
add
repnz
dec
test
pop
lods
ss
sbb
leave
mov
sub
push
neg
fist
jmp
mov
jb
mov
enter
ror
imul
(bad)
mov
aad
add
add
mov
jle
enter
dec
(bad)
bound
inc
mov
push
mov
sbb
add
add
das
popf
xchg
add
jle
pop
int3
fadd
movs
sub
cs
dec
jecxz
movs
jmp
cmp
add
jp
stos
push
js
mov
add
in
cli
int
fs
retf
(bad)
sbb
and
add
add
jmp
outs
retf
in
nop
test
js
mov
sbb
repz
daa
dec
and
add
add
inc
(bad)
mov
push
push
and
into
mov
or
popf
in
daa
in
push
out
push
fiadd
add
add
stc
cmp
sbb
fadd
or
fist
sub
and
dec
add
add
ret
in
pop
dec
adc
jmp
xchg
sbb
les
mov
popa
movs
push
arpl
icebp
iret
mov
pop
test
sar
call
jp
sub
(bad)
test
scas
not
rol
out
aam
int3
xor
add
add
bound
gs
popf
imul
xchg
jg
mov
iret
je
add
cmp
nop
ret
jmp
add
add
or
mov
mov
cs
xchg
adc
jmp
xchg
push
push
mov
add
add
bound
push
push
enter
lods
xchg
adc
int3
push
sbb
xor
add
mov
gs
dec
aam
sub
mov
mov
dec
mov
enter
add
add
push
inc
movs
movs
cli
jge
sub
cmp
and
adc
inc
fadd
add
add
stc
mov
pop
lods
loopne
hlt
or
add
sbb
rcr
pop
sub
mov
jns
add
add
mov
mov
xor
stos
mov
pop
(bad)
popf
cld
fsubr
in
dec
(bad)
push
retf
pop
lahf
inc
rol
add
jne
loopne
and
pop
mov
movlps
retf
xchg
adc
add
shl
out
mov
add
add
ins
daa
es
ret
jne
dec
jns
pop
xchg
dec
or
xor
enter
and
fwait
add
add
add
push
(bad)
cmps
pop
xchg
loopne
add
(bad)
rcl
and
loopne
cmps
fldenv
mov
mov
add
add
push
dec
les
test
xchg
mov
outs
mov
test
push
mov
sbb
enter
push
and
or
add
add
sub
mov
popf
test
lahf
inc
sbb
pop
inc
or
daa
call
fld
add
add
outs
adc
into
aaa
mov
and
fs
xchg
mov
xchg
push
xchg
fcom
leave
sub
inc
add
add
mov
arpl
inc
outs
lock
mov
add
add
adc
cmp
xor
mov
nop
pop
adc
test
jne
push
add
adc
add
jae
inc
lea
test
sub
add
mov
xor
cmp
inc
xor
pop
data16
cmp
push
and
jle
rsm
cld
les
repnz
push
pop
mov
add
add
icebp
dec
hlt
inc
lea
imul
sub
jne
xchg
movs
mov
xchg
add
add
xor
je
jbe
inc
nop
and
jne
pop
push
pop
arpl
inc
cmp
es
mov
add
add
cmp
dec
lock
xchg
pop
sbb
lock
jb
cs
jg
repz
add
repnz
fnstcw
push
jmp
in
and
push
rcl
jo
fnstcw
pop
adc
(bad)
dec
cmc
add
add
leave
jmp
leave
idiv
movs
and
and
sub
jnp
jle
js
rol
add
add
jl
sub
push
pop
sub
jle
test
xlat
in
enter
xchg
mov
adc
mov
add
mov
mov
inc
push
pop
retf
dec
retf
mov
xor
lock
and
mov
test
push
dec
or
jbe
and
or
add
add
loop
ja
push
lds
in
mov
ret
and
xchg
xor
call
mov
add
addr16
push
adc
movs
mov
icebp
or
popa
mov
add
mov
nop
mov
adc
lods
pop
mov
dec
cmps
push
hlt
mov
stc
jmp
in
add
add
mov
clc
cld
xchg
call
fldenv
fadd
sub
or
inc
bound
xor
add
add
pop
lea
dec
mov
ins
mov
das
fldenv
and
out
gs
mov
xor
fcomp
fsub
call
lock
xchg
jl
imul
pop
add
add
xor
ror
call
add
push
pop
mov
retf
adc
sahf
mov
sbb
add
add
dec
cmc
movs
cmp
mov
mov
sub
cdq
inc
xchg
dec
aad
out
adc
int
fld
add
add
and
ss
(bad)
popa
fnstcw
out
call
push
in
cmp
add
add
adc
push
(bad)
out
(bad)
mov
xlat
push
pop
and
sti
and
movs
stc
pop
adc
ficomp
adc
add
add
daa
inc
xchg
dec
jo
xchg
jbe
jp
ins
mov
nop
hlt
xchg
pop
pusha
mov
push
push
pop
cmp
inc
loope
in
nop
adc
mov
mov
xor
inc
std
cmp
mov
add
xchg
pop
push
dec
les
dec
(bad)
loopne
es
sbb
sub
mov
xchg
mov
and
add
push
inc
scas
push
repz
cmp
and
or
pop
inc
pause
loopne
sub
dec
push
add
add
jns
(bad)
(bad)
data16
adc
jge
xchg
xchg
dec
sub
xchg
sub
mov
fiadd
add
add
les
test
and
jmp
jb
ret
xchg
nop
inc
push
mov
shl
inc
push
mov
add
mov
xor
ror
and
jb
adc
xor
jnp
pop
jb
cld
dec
dec
sti
(bad)
cmp
loopne
in
and
xchg
push
adc
ror
mov
pop
in
xchg
or
cli
(bad)
(bad)
sbb
add
add
sbb
out
adc
xchg
mov
lods
data16
inc
dec
pusha
mov
cmp
add
add
pop
mov
xchg
jle
leave
sub
test
inc
enter
les
mov
push
enter
add
pop
jp
or
sar
push
adc
cld
movs
push
dec
push
sub
cld
lahf
add
add
sbb
cmp
or
mov
cmp
xor
mov
xchg
fwait
dec
or
sar
adc
or
call
movs
and
sub
das
dec
and
or
or
add
add
mov
cvttps2pi
scas
psrlq
inc
hlt
scas
retf
rcl
retf
add
add
add
and
pop
jno
cdq
jb
sub
lock
and
jp
inc
dec
xlat
xor
add
add
xor
mov
test
in
scas
mov
xchg
call
add
jb
sub
outs
sbb
pop
or
cs
enter
mov
shl
cmp
add
add
xchg
or
cli
fist
mov
mov
mov
loop
and
sub
mov
add
add
push
mov
or
and
inc
les
idiv
adc
nop
pop
shl
mov
out
add
add
or
cmp
push
or
xor
mov
pop
or
mov
add
add
cmps
adc
push
inc
cld
push
adc
lea
or
cmps
jnp
sbb
cmp
into
add
add
leave
jle
fcom
and
xchg
push
push
scas
jmp
jnp
xor
adc
add
nop
sbb
adc
inc
cld
(bad)
loop
popf
not
test
sbb
and
add
add
iret
mov
mov
sub
ror
ror
dec
adc
test
hlt
jecxz
jo
inc
je
into
mov
add
add
ds
or
outs
mov
fwait
stos
dec
loopne
sbb
call
ret
jo
add
add
ins
pop
dec
clc
clc
stos
sub
adc
out
fdivr
or
je
push
icebp
imul
add
add
and
add
xor
xchg
leave
aam
pop
lock
mov
inc
clc
and
inc
ins
pop
dec
add
add
jb
xor
pop
dec
mov
pop
push
lock
movs
out
dec
dec
push
cmp
or
fmul
out
jne
cli
add
add
fs
ficom
adc
inc
sbb
je
lods
mov
std
lahf
pop
sub
daa
xchg
sbb
pop
push
inc
add
add
add
in
cli
pop
pop
jmp
aam
inc
inc
or
in
adc
dec
inc
repz
mov
add
add
push
jnp
jno
aaa
push
adc
cmp
pop
xchg
sbb
inc
xchg
inc
xlat
adc
add
add
nop
push
push
adc
and
je
push
fisubr
ror
xor
stos
aas
add
add
pusha
das
or
push
pushf
aad
cmp
je
mov
adc
bound
add
jae
or
imul
out
bound
add
add
sti
adc
dec
movs
jb
jl
add
jmp
nop
and
pop
nop
jle
jno
add
add
les
cmp
call
retf
jp
in
xor
imul
dec
bound
add
add
cmp
pop
fucomp
js
shl
leave
inc
or
cmp
cli
sbb
add
add
ret
inc
and
out
fdiv
mov
stos
and
std
mov
push
mov
or
add
mov
ins
(bad)
and
daa
jns
jp
xor
ins
or
add
xchg
sbb
cmp
add
add
pop
sbb
loopne
add
bound
in
mov
sub
mov
sbb
data16
cmp
add
add
adc
mov
xchg
(bad)
outs
add
test
add
scas
inc
push
push
adc
push
adc
mov
add
add
hlt
dec
shl
bnd
push
mov
or
add
sub
inc
xor
add
add
push
push
add
add
mov
or
stc
dec
outs
sub
cmp
hlt
xor
je
cmps
jbe
ss
dec
add
add
jb
dec
dec
jo
ss
ja
imul
call
cwde
mov
push
jl
pop
pop
push
adc
add
add
sbb
fs
jl
ins
fwait
ins
adc
lods
dec
fwait
aaa
daa
in
jle
fs
mov
dec
add
add
push
lock
js
cs
in
leave
dec
jl
arpl
test
add
xlat
xchg
lea
add
movs
in
mov
jmp
xor
and
add
xor
mov
call
add
add
jg
dec
cmp
mov
cmp
or
int3
fldpi
push
dec
mov
clc
cmp
cld
stos
gs
pop
pop
dec
jmp
dec
and
xchg
sti
inc
xchg
in
rcl
inc
loop
pop
xchg
int
leave
push
cmp
inc
nop
adc
test
test
mov
sub
add
push
sar
push
js
push
or
add
add
sbb
dec
test
inc
retf
xor
je
and
inc
rcl
dec
add
add
and
les
xor
dec
or
pop
imul
stc
loope
lods
mov
inc
add
add
add
add
mov
jmp
push
dec
fs
outs
sbb
gs
push
loop
push
xchg
xchg
aad
add
add
inc
shl
pop
mov
and
fst
mov
xchg
retf
add
add
(bad)
cmp
mov
jg
add
mov
mov
dec
sub
loope
bound
mov
adc
add
add
jbe
dec
sub
icebp
xchg
mov
popf
lea
or
or
add
scas
cmp
rcr
push
jbe
mov
add
mov
pop
dec
pop
retf
jmp
mov
and
bound
add
add
cmp
jg
inc
popf
push
add
adc
xchg
(bad)
xchg
(bad)
xor
push
cmp
sbb
add
add
jbe
(bad)
(bad)
mov
jne
fs
add
xor
daa
sti
movs
push
int3
push
or
bound
add
add
ror
leave
pusha
jle
pusha
push
jns
sbb
js
scas
adc
cmp
call
and
jmp
add
add
nop
adc
daa
mov
shl
jmp
push
cmp
cs
xchg
push
add
add
add
and
mov
(bad)
mov
xor
cwde
xchg
(bad)
xchg
clc
mov
cmp
and
mov
push
aad
cdq
add
add
jp
sbb
jp
mov
jmp
ss
in
in
call
add
and
popf
jbe
in
xchg
fwait
mov
dec
test
loop
ret
aad
lock
add
hlt
retf
lock
daa
pusha
sub
mov
jbe
mov
or
push
xchg
sbb
sub
sbb
jae
or
iret
add
fsubr
aam
fnstenv
fadd
mov
add
or
adc
or
sbb
jnp
and
aam
push
adc
les
cmps
iret
add
add
adc
adc
(bad)
dec
test
gs
nop
call
jo
ins
mov
mov
fnstsw
add
jg
fs
lock
(bad)
inc
pop
dec
push
mov
icebp
les
or
add
adc
mov
push
cmc
jno
cmp
jmp
nop
in
scas
popf
mov
add
psadbw
and
mov
jmp
das
in
(bad)
nop
dec
mov
add
(bad)
pop
int
sub
add
add
or
dec
lahf
inc
or
xor
add
sub
jno
xchg
out
in
sbb
add
add
jp
push
jmp
push
adc
mov
cli
cmps
inc
loope
sar
pop
mov
add
add
add
and
dec
lahf
in
inc
mov
or
sub
mov
add
cmps
or
jo
out
out
adc
and
(bad)
or
add
add
jns
enter
jecxz
inc
push
sub
in
dec
mov
or
sbb
push
sbb
hlt
test
add
pop
xchg
mov
sub
shl
push
xor
push
add
cld
push
mov
add
add
and
jne
imul
xor
or
or
dec
pop
and
inc
mov
das
inc
add
add
sgdtd
mov
xchg
leave
push
ret
or
sbb
cli
into
mov
push
adc
add
add
imul
pusha
adc
das
imul
jnp
mov
sbb
add
jmp
add
add
enter
jle
sbb
jb
test
ja
bound
pop
ror
pop
sti
ds
inc
add
add
dec
in
xchg
add
push
sbb
jne
dec
and
jle
jb
rcl
loope
add
add
ret
mov
clc
daa
mov
xchg
jg
mov
mov
shl
add
xchg
cmp
adc
aad
pop
adc
rol
test
cmps
rcl
mov
sbb
or
pop
icebp
out
adc
jae
cmp
push
in
jle
add
add
cld
mov
ret
push
jne
rep
dec
loope
or
jecxz
popa
inc
and
adc
and
add
add
jp
les
pop
les
cs
in
icebp
aam
xchg
inc
push
xor
add
add
inc
clc
lods
ds
pop
add
jle
addr16
movs
xchg
jb
or
xchg
adc
jo
add
cmp
les
add
add
mov
or
xchg
xchg
adc
push
add
push
adc
into
enter
push
test
cmp
add
push
xchg
sub
aad
mov
cmp
out
imul
lock
pop
xor
add
leave
inc
imul
add
(bad)
fdivr
adc
cmc
inc
or
mov
mov
add
add
cmp
xor
jb
jl
bound
inc
mov
inc
test
pop
sbb
add
add
stos
retf
mov
push
or
add
je
outs
lock
add
dec
add
ss
sub
daa
xor
icebp
inc
dec
aad
cmp
push
lock
je
xchg
les
mov
(bad)
xor
jg
in
and
or
aad
je
iret
xchg
cld
mov
or
add
dec
pop
and
out
sub
sub
and
or
ror
jmp
sbb
add
add
mov
jmp
mov
iret
loop
and
xor
stc
test
es
mov
test
das
add
adc
fmul
pop
add
(bad)
cmc
push
inc
add
stos
mov
mov
or
add
cmp
sub
in
mov
arpl
xor
push
arpl
ins
add
add
jno
lods
(bad)
mov
and
je
xchg
sbb
mov
popf
inc
and
jbe
push
inc
adc
add
add
test
sar
xchg
jno
ins
ins
cmp
push
pop
mov
jl
adc
adc
rol
pop
scas
or
mov
repz
pop
mov
lods
nop
xchg
add
add
dec
dec
push
fs
xor
sbb
test
ror
and
cld
or
imul
pushf
add
add
mov
push
es
xchg
push
mov
test
loopne
or
sub
aaa
push
add
or
jecxz
vorps
pop
pop
int
add
lods
(bad)
adc
psrlq
add
jo
test
cmps
jp
test
test
mov
cmp
repnz
and
xchg
mov
pop
and
nop
cmp
sub
add
inc
sub
test
int3
cmp
jbe
cmps
inc
sub
stos
add
add
sub
mov
xchg
sub
dec
ds
gs
cmp
pop
dec
fidivr
out
cmps
stc
sahf
add
add
imul
cmp
fidiv
dec
cs
popf
adc
outs
dec
popf
push
add
lea
enter
mov
mov
sub
cmps
fdiv
add
add
jbe
into
and
sub
pop
in
shr
cmp
jns
mov
add
add
nop
dec
mov
mov
pop
cmc
imul
lods
or
rcr
mov
dec
add
add
xor
xchg
xor
call
addr16
lds
adc
add
add
adc
mov
adc
shl
pop
and
push
mov
inc
sbb
sar
cmp
inc
pop
add
add
xor
jg
fstp
adc
jne
mov
push
sbb
mov
pop
cli
adc
retf
add
add
pop
je
scas
push
push
bound
mov
cli
mov
loop
mov
add
push
loop
mov
add
nop
mov
xor
repz
xchg
adc
sbb
(bad)
adc
cli
imul
add
add
sub
aad
retf
lock
(bad)
lods
aas
lds
push
les
pop
test
fisttp
add
(bad)
rol
or
adc
adc
test
ds
or
retf
jbe
add
add
push
xchg
dec
xchg
jbe
lods
outs
jl
inc
cli
int
movs
aaa
shl
inc
lock
fdiv
add
add
jmp
stos
std
adc
inc
mov
cmp
int
jmp
push
(bad)
(bad)
add
add
outs
add
push
imul
(bad)
and
movzx
sbb
adc
(bad)
jmp
add
add
push
pop
jmp
(bad)
aaa
(bad)
enter
sub
enter
add
and
addr16
add
add
dec
xor
sub
sbb
or
or
mov
sbb
and
dec
jmp
add
add
(bad)
or
inc
aas
push
mov
movs
and
dec
int3
xchg
loop
lock
and
mov
fwait
es
add
add
fs
or
ins
cdq
retf
mov
adc
adc
inc
inc
js
mov
and
sub
add
add
adc
add
and
sbb
dec
dec
xchg
and
mov
and
and
and
add
add
cld
and
es
adc
jp
xchg
mov
dec
cld
mov
adc
mov
add
add
ins
sub
or
jl
lock
jmp
fst
xchg
(bad)
jmp
shr
sbb
mov
stos
stos
(bad)
jmp
add
add
fist
mov
pop
fnop
inc
dec
push
pop
enter
adc
aas
jecxz
imul
mov
add
add
jne
push
or
pop
enter
dec
jp
jb
cmc
shl
daa
push
lea
int3
jg
xor
add
add
push
or
or
pop
jne
into
and
mov
mov
clc
add
add
mov
out
lahf
push
jo
and
mov
or
(bad)
js
not
push
add
add
pop
arpl
dec
sahf
in
xchg
dec
or
xor
xor
ds
ins
mov
mov
add
xlat
and
add
inc
adc
lock
fmul
inc
or
jmp
das
add
add
test
shr
(bad)
adc
enter
ds
or
push
lock
sub
in
cs
add
add
es
pop
sub
xor
pop
call
adc
in
sub
movs
xchg
push
dec
in
mov
add
add
ror
jl
push
cwde
or
stos
xchg
out
popf
and
es
sahf
pop
mov
add
add
dec
repnz
daa
paddusb
pop
xor
mov
je
outs
arpl
jmp
add
add
das
push
fstp
pop
push
imul
retf
push
jns
mov
jb
sar
add
add
sbb
aas
push
push
jge
inc
push
movs
call
adc
scas
popa
push
loopne
add
add
pusha
mov
push
fstp
imul
jne
stos
cmp
movs
mov
add
lods
out
imul
mov
stos
sahf
push
fisubr
dec
xchg
xchg
pop
clc
mov
sbb
add
add
adc
add
mov
cmc
sti
sub
clc
dec
push
in
aas
mov
cmp
movs
stos
and
add
add
pop
cmp
and
gs
lds
xor
push
sahf
cmp
sub
push
mov
add
loope
push
cmps
xor
into
jnp
sbb
sub
ins
sbb
xchg
enter
call
sub
fs
ins
fs
mov
ror
stos
jns
outs
fstp
dec
mov
dec
or
fnstsw
jmp
add
add
pop
push
das
cld
int3
dec
xchg
stc
shl
aad
(bad)
sub
sbb
test
pop
and
add
rol
and
sbb
shl
jne
movs
and
and
rol
add
add
mov
cmp
stos
fld
and
rcr
out
and
sbb
call
add
or
in
jmp
push
jecxz
in
adc
sub
mov
or
sbb
push
mov
jae
mov
movs
add
add
enter
loope
nop
jg
test
aam
pushf
push
frstor
adc
add
add
jmp
mov
and
lds
inc
sbb
sbb
jns
adc
ja
popa
add
jae
or
add
add
adc
jmp
mov
int3
pop
and
or
xor
mov
call
outs
and
add
add
sbb
xor
or
or
mov
inc
test
xchg
xor
add
cmps
inc
int3
pop
mov
adc
les
or
test
push
and
(bad)
cmps
push
mov
lea
xchg
in
clc
push
dec
or
push
pop
fimul
push
jne
movs
call
loopne
jl
pop
jo
lea
inc
inc
xchg
jne
mov
movs
dec
cli
and
push
fucom
xchg
inc
sbb
jne
adc
add
add
cmp
ss
adc
cmp
sbb
cmps
xor
or
add
add
scas
dec
out
sub
inc
jno
imul
in
cld
and
xchg
mov
pop
xchg
adc
add
add
movs
stos
mov
les
cmp
aad
sub
adc
and
aaa
(bad)
jl
jmp
jnp
inc
add
add
sub
rol
push
pop
or
or
xchg
dec
push
push
add
fstp
add
mov
jmp
jl
and
bnd
or
and
lds
(bad)
mov
add
lock
dec
outs
mov
std
dec
scas
xor
cs
push
xchg
xor
sub
add
add
imul
neg
movs
xor
ja
and
and
add
add
scas
lea
mov
jae
xchg
addr16
push
adc
je
out
xor
arpl
pop
mov
add
add
sar
push
daa
aam
les
xor
push
sbb
sub
clc
add
add
bnd
lods
pop
push
dec
(bad)
jg
mov
jbe
lock
dec
mov
ficomp
add
call
and
dec
jp
dec
xchg
cmps
clc
push
sub
fisttp
shl
sbb
cmp
sbb
add
mov
out
and
(bad)
dec
cmc
push
mov
xchg
pop
mov
or
add
add
lods
or
and
add
dec
test
inc
mov
cwde
movs
test
jmp
test
add
add
repz
cmc
int
imul
push
pop
test
add
aad
daa
cmc
pop
test
add
add
or
add
jb
adc
adc
js
mov
dec
pop
sub
loop
mov
mov
mov
das
mov
xor
fnstcw
adc
sub
push
cmp
sub
inc
or
add
and
xchg
mov
push
xor
loopne
push
adc
or
ret
add
add
adc
cmp
add
or
sub
jmp
sar
fld
inc
sub
add
push
movs
repz
in
jo
push
test
dec
int3
retf
pop
mov
call
or
mov
xchg
ja
push
add
pop
scas
enter
aas
push
inc
pop
out
xor
jge
jnp
dec
and
add
add
dec
mov
jae
arpl
mov
jbe
les
ret
sub
call
adc
add
add
pop
mov
movs
push
and
inc
push
adc
rcr
in
mov
nop
cmp
add
add
nop
push
fs
repz
add
add
mov
inc
hlt
test
dec
adc
pop
add
add
jl
adc
dec
mov
dec
mov
cmp
es
or
adc
add
add
sub
xor
pop
sbb
pop
clc
hlt
mov
xor
repnz
inc
cmc
je
sbb
add
add
sub
test
and
cmp
pop
mov
ds
xor
rol
add
out
sub
popf
push
jl
adc
sub
enter
jo
mov
add
neg
sbb
aas
call
stos
outs
xchg
push
imul
aad
cmp
lock
hlt
add
add
mov
pop
push
hlt
jne
or
pusha
mov
push
mov
sub
push
and
jp
adc
add
sub
popa
leave
dec
stos
sub
inc
std
retf
push
aad
xor
in
ins
leave
cwde
or
jmp
sahf
jp
sub
(bad)
sar
pop
or
jbe
call
jp
add
add
cmp
xchg
sub
adc
inc
cld
ja
std
sbb
xor
pop
mov
or
add
add
enter
pop
cld
xor
push
outs
lahf
jo
hlt
repnz
movzx
and
sub
xor
jmp
add
add
push
dec
out
cmp
ror
lahf
jecxz
and
xchg
cmp
push
pop
fisub
daa
jle
jp
adc
push
mov
dec
mov
stos
dec
push
stos
jne
pusha
jmp
xor
rcr
enter
sbb
or
xchg
push
enter
add
cld
lods
cmps
jo
mov
and
xchg
shl
aas
jb
cmp
sub
outs
inc
mov
add
add
inc
stos
stc
push
ja
sub
in
mov
mov
gs
out
test
mov
add
add
pop
clc
jo
rol
xor
jge
jmp
test
sbb
adc
add
xchg
add
add
add
adc
(bad)
push
mov
rcr
cmp
jae
sub
add
add
mov
cmp
mov
or
shl
aaa
add
xor
fist
cwde
lock
add
add
in
jmp
mov
sub
or
jae
sub
loopne
mov
add
add
ret
add
mov
mov
mov
add
(bad)
add
mov
add
add
out
imul
jae
xchg
inc
stos
aam
add
add
mov
cmp
add
add
push
lea
dec
push
jp
add
int
inc
lds
add
add
mov
ror
fs
das
in
les
inc
shl
xchg
fld
add
add
pop
jo
inc
dec
fs
and
dec
sub
add
push
in
and
repnz
jle
push
das
add
add
push
aam
stos
mov
fist
mov
pushf
ror
push
sbb
call
push
lock
add
xchg
adc
test
inc
mov
push
inc
inc
imul
fadd
add
add
lods
push
cmps
mov
movs
lods
(bad)
ficomp
sbb
mov
cwde
sbb
pushf
lahf
xor
movs
add
add
inc
aam
jg
xchg
aas
pop
xchg
mov
pop
mov
xor
pop
test
(bad)
ds
stos
add
add
push
mov
out
je
test
add
xchg
xor
test
xor
je
add
add
dec
adc
jne
stos
add
aas
sbb
add
jmp
stos
xchg
es
inc
loop
call
add
add
push
pop
jns
or
and
mov
mov
popa
push
and
add
and
mov
lods
fs
sbb
push
aam
sub
add
sbb
adc
iret
out
mov
inc
dec
or
test
add
add
cmp
and
sbb
xchg
jl
call
je
xor
pushf
push
add
add
dec
pop
jmp
and
dec
repz
pop
lods
sub
pusha
dec
or
push
call
add
add
icebp
mov
jns
stos
and
push
push
cwde
adc
(bad)
shl
(bad)
mov
pop
dec
add
or
or
push
inc
push
xor
sub
push
add
add
push
fadd
lea
fisubr
or
adc
lea
xchg
or
mov
push
inc
jl
mov
add
add
pop
popf
out
jge
dec
mov
ror
push
xchg
ror
mov
push
xchg
adc
add
add
test
push
sbb
lea
mov
xchg
outs
or
sub
test
push
push
cmp
add
add
test
cmp
inc
inc
inc
shl
mov
xor
popa
xchg
sbb
imul
or
mov
or
inc
adc
and
scas
sbb
dec
arpl
add
add
lds
cli
in
mov
imul
or
push
xchg
add
retf
inc
ins
xor
add
add
mov
sub
pop
adc
mov
adc
movs
adc
jb
and
push
addr16
sub
inc
int
test
xchg
popaw
cdq
mov
fwait
and
dec
rol
add
mov
jae
cmp
(bad)
cld
(bad)
daa
outs
shl
or
add
repnz
or
cmp
mov
add
add
out
hlt
out
xchg
xor
mov
loop
xor
adc
mov
add
jge
fsub
mov
in
sub
test
in
xor
icebp
enter
inc
shr
aam
stos
xchg
add
add
jg
adc
and
int3
and
popa
push
xor
rcl
std
sti
ret
call
add
add
iret
xor
(bad)
cmp
mov
test
ficomp
mov
js
mov
mov
add
add
test
or
imul
loope
add
mov
lea
out
mov
out
movs
out
lock
pushf
stos
adc
xor
pop
pushf
in
push
add
mov
or
les
add
add
in
and
sub
ins
xchg
movs
pop
xor
xchg
xor
add
add
adc
pop
addr16
jl
popf
mov
pop
mov
add
add
or
push
cmp
adc
nop
add
push
jo
inc
je
xor
or
imul
and
adc
je
push
fadd
mov
add
add
or
pop
in
aaa
push
test
pop
mov
mov
ins
push
push
dec
or
add
add
pop
and
mov
xor
jbe
inc
fstp
and
imul
add
add
lea
js
push
stos
dec
inc
or
pop
inc
inc
mov
inc
inc
int3
mov
add
add
add
pop
sub
adc
shl
dec
and
dec
and
inc
xchg
cs
push
mov
(bad)
nop
adc
add
add
clc
or
je
pop
repnz
adc
jae
(bad)
fdivr
daa
fst
inc
push
ins
mov
adc
add
add
mov
mov
pop
daa
sub
mov
mov
add
sbb
add
lea
jmp
jne
mov
jmp
setne
mov
push
loope
mov
add
add
fdivr
add
add
sub
leave
push
out
ret
mov
(bad)
mov
mov
adc
add
add
or
ret
outs
dec
retf
adc
ret
mov
sbb
push
or
add
add
pop
mov
adc
adc
icebp
push
or
jmp
nop
mov
or
add
add
mov
inc
lods
mov
sbb
or
mov
(bad)
ins
sub
and
add
and
sbb
sbb
jle
aam
loopne
enter
call
cmp
int3
enter
add
add
push
rol
leave
popa
cmp
mov
jne
fmul
popf
sub
imul
inc
adc
sbb
sbb
add
add
retf
test
and
sbb
sub
mov
cmp
add
add
test
sar
in
inc
jmp
inc
test
test
scas
lock
or
xchg
add
add
and
mov
jmp
jnp
lock
lea
inc
cmp
loopne
add
add
out
xchg
test
sub
pusha
adc
stos
leave
xor
jo
clc
rol
mov
repnz
add
cmp
xor
or
adc
stos
data16
xor
pusha
rcr
mov
add
add
or
das
daa
jae
pop
sub
sub
push
mov
test
adc
add
add
call
pop
(bad)
jp
pop
std
add
outs
xchg
out
fldcw
lods
add
add
js
sbb
shl
inc
call
enter
ret
mov
dec
or
inc
or
adc
adc
ins
mov
xor
xchg
pusha
nop
rep
fbld
jns
jb
xchg
cli
retf
pop
adc
enter
outs
add
add
xchg
adc
mov
mov
push
pop
push
test
pusha
mov
add
add
inc
cmp
adc
enter
sbb
iret
call
inc
mov
stos
sub
rcl
pop
add
add
xchg
mov
movs
push
(bad)
cmp
pop
out
enter
in
dec
mov
and
rcl
enter
add
add
push
imul
jno
sbb
loope
xor
leave
xchg
mov
push
sbb
sub
rol
add
push
add
rcl
push
xchg
pop
imul
or
or
adc
ins
pusha
mov
mov
add
pop
inc
push
repnz
mov
xor
xchg
out
cmp
out
jae
add
add
jecxz
mov
lods
pop
daa
add
cld
cmovle
fadd
dec
cwde
mov
pop
repnz
add
add
jl
sub
stos
xor
sti
ret
stos
push
xchg
rcr
ret
test
(bad)
cmps
push
in
daa
xchg
or
add
add
push
pop
or
push
sti
mov
inc
push
es
dec
sub
fisttp
lods
sti
jno
add
add
xor
ret
mov
dec
fmul
test
dec
or
in
lahf
es
sub
imul
add
add
lahf
and
add
or
ss
(bad)
je
sub
shl
mov
add
jne
and
add
add
mov
dec
call
pop
int
scas
ja
push
and
adc
add
cli
out
add
add
je
movs
das
push
call
gs
(bad)
pusha
neg
push
fsub
xchg
fimul
jo
add
add
(bad)
repz
stc
in
(bad)
xchg
push
in
cmp
fisubr
aad
nop
in
sbb
pop
(bad)
lock
jne
add
pusha
enter
mov
stos
addr16
inc
add
in
sub
mov
dec
ficomp
xlat
popa
xor
outs
xchg
pop
mov
push
push
adc
inc
sbb
push
inc
jmp
add
push
cmp
xchg
std
push
mov
movs
mov
mov
pushf
dec
mov
pop
daa
add
add
test
cmp
icebp
xchg
in
jecxz
aam
mul
stos
adc
pop
out
add
add
test
push
push
mov
fwait
imul
in
mov
xchg
push
sbb
push
add
add
lods
dec
xchg
bound
push
fidivr
push
jl
popf
jmp
fist
add
add
cdq
or
sub
into
xchg
mov
gs
mov
mov
jp
push
add
add
add
jb
mov
sbb
pop
and
test
imul
fs
push
pop
lea
mov
add
add
jle
test
adc
in
mov
mov
push
mov
pop
mov
popf
leave
sub
inc
fcmovnb
push
push
fistp
add
add
mov
jmp
std
push
das
and
pop
frstor
or
and
add
add
sbb
int
mov
sti
stc
mov
movs
push
cmps
jle
jbe
inc
stc
sub
add
add
std
mov
sub
xor
cmp
adc
sub
jl
add
add
mov
mov
adc
adc
shl
outs
push
mov
es
adc
add
add
gs
inc
inc
in
adc
and
(bad)
jne
or
mov
add
add
jne
aaa
call
or
xor
dec
hlt
cmp
les
pop
adc
cli
shr
enter
jae
add
add
sub
inc
inc
fs
clc
or
pop
fild
fadd
loopne
shl
push
jno
add
add
cmps
add
jb
hlt
jmp
pop
mov
fdiv
lock
sbb
xchg
cli
addr16
or
add
add
add
data16
fdivr
xchg
sub
test
das
jno
adc
retf
jg
lods
mov
pop
aad
add
add
sub
pop
and
mov
cld
or
inc
cmp
adc
sbb
cmp
add
add
das
shr
adc
stos
fucom
sub
ror
and
daa
test
add
add
xlat
pushaw
into
ss
adc
mov
dec
ret
(bad)
mov
adc
push
adc
add
add
jne
mov
cs
sub
push
mov
cli
add
pop
mov
inc
adc
or
and
inc
and
pop
or
pop
sbb
pop
and
pop
push
adc
add
add
add
inc
adc
or
aaa
and
or
sub
inc
jnp
and
js
pop
and
adc
inc
sbb
or
add
add
and
test
call
mov
jns
sbb
leave
xchg
push
push
int3
add
or
add
add
adc
and
inc
loopne
xchg
pop
sbb
and
mov
inc
xor
cli
or
add
add
or
adc
shl
int3
repz
or
mov
fwait
push
add
add
jmp
mov
retf
nop
push
les
or
push
sub
dec
mov
fidiv
add
add
out
adc
fs
int
(bad)
dec
xchg
(bad)
es
push
je
je
outs
fisub
jnp
jmp
add
add
in
leave
pop
mov
pop
lds
in
jbe
sbb
popf
jp
rol
sbb
sbb
add
add
fstp
mov
xchg
movs
sbb
push
dec
push
inc
sti
push
rol
cmp
loope
call
add
adc
xchg
jmp
dec
add
sbb
fist
shr
dec
lods
xchg
pop
mov
dec
add
add
mov
pop
scas
xchg
fs
jne
aam
sbb
out
push
jle
adc
and
pop
lahf
adc
add
add
cwde
in
and
fcom
pop
jge
ja
sbb
bswap
div
outs
mov
add
add
adc
les
das
pop
mov
sbb
les
pop
cmps
enter
gs
(bad)
pop
jle
add
add
add
mov
push
mov
dec
push
(bad)
cmps
js
xchg
ins
retf
add
add
std
add
add
cld
clc
push
fadd
add
push
and
(bad)
xor
xlat
ret
imul
xchg
movs
dec
mov
fstp
inc
cwde
hlt
int3
add
add
ret
fs
cs
popa
sbb
(bad)
out
dec
cli
inc
aaa
or
cdq
lds
xor
mov
add
add
sahf
into
xchg
jne
fmul
jecxz
fs
cmp
inc
ret
add
aas
xchg
cmp
add
add
pop
scas
repnz
adc
cli
dec
je
cmp
arpl
adc
inc
inc
mov
add
sti
cmps
push
movs
lahf
mov
cmp
enter
sbb
out
dec
jns
sbb
out
cmp
add
add
cmp
das
in
push
test
mov
xor
fst
pop
jne
ds
or
and
lock
add
mov
movs
dec
adc
or
rcl
inc
icebp
xor
jp
cli
xchg
cmc
jg
push
(bad)
and
push
jnp
add
add
(bad)
fcomi
and
sub
js
jne
bound
movs
push
js
fsubrp
push
retfw
hlt
enter
add
add
or
imul
lods
mov
cld
jmp
jne
loope
sar
cmp
jne
in
xchg
add
add
test
adc
jns
jb
rol
lock
stc
adc
jnp
dec
ja
rcl
mov
add
add
outs
jecxz
xchg
stos
jne
add
sbb
shl
and
cmp
jmp
sbb
add
add
or
push
outs
imul
mov
push
ror
push
int
je
push
add
add
enter
das
in
hlt
sub
(bad)
push
mov
loopne
or
mov
je
icebp
add
out
ficomp
adc
push
sbb
push
retf
mov
data16
sbb
test
sub
add
jmp
je
cs
stc
push
inc
push
mov
fucomip
jb
add
out
add
add
mov
and
adc
in
repnz
adc
pop
clc
call
xchg
jmp
dec
or
add
xchg
stos
rol
aas
sar
mov
je
xchg
adc
sbb
je
inc
add
push
mov
push
sub
es
add
add
in
psrlw
mov
out
jo
push
add
add
add
popf
out
add
add
cmc
cmp
mov
jle
les
jb
sbb
aas
and
nop
sbb
stc
inc
add
add
sbb
jl
xor
jle
out
or
into
or
dec
pop
mov
add
ret
hlt
cmp
add
add
and
mov
adc
mov
push
xlat
test
sub
into
retf
pop
add
add
jne
test
test
adc
mov
movs
pop
je
enter
mov
cmp
xor
jnp
adc
scas
add
add
call
jg
mov
cs
sub
inc
inc
jne
add
add
in
clc
jecxz
push
inc
call
sbb
addr16
icebp
mov
ins
rcl
xor
add
inc
test
mov
jb
push
or
retf
xor
xlat
adc
retf
add
adc
xchg
lahf
test
popf
aam
ret
xchg
fldenv
adc
cmp
mov
add
inc
(bad)
and
xchg
push
je
pop
loope
add
cwde
test
or
add
dec
imul
adc
push
push
imul
pop
dec
mov
adc
add
add
xchg
cmp
jne
or
push
push
sbb
nop
cli
enter
dec
(bad)
mul
clc
ins
adc
add
add
xor
sub
adc
cmps
(bad)
hlt
mov
aad
xchg
cmp
cwde
push
xor
fdivr
retf
lahf
stos
dec
in
cmp
cmps
js
sbb
push
jo
loopne
jo
jae
pushf
retfw
inc
test
add
pusha
scas
jbe
push
and
ret
test
pop
jmp
lds
fs
cmp
cmp
add
add
mul
in
mov
mov
loop
adc
or
push
add
or
add
add
mov
jns
pop
cmp
pop
imul
dec
push
lahf
ror
inc
ret
push
push
scas
imul
add
add
fcomp
pop
ret
pop
mov
jno
jg
sub
sub
and
hlt
lahf
loope
sub
add
ficomp
jle
dec
(bad)
ficom
sahf
xchg
sbb
jo
jnp
mov
lock
sub
add
add
sbb
(bad)
call
inc
and
arpl
out
jl
xchg
call
jle
add
add
jns
sub
mov
and
mov
mov
pop
mov
or
or
cld
dec
sbb
sub
(bad)
sbb
xchg
dec
add
in
mov
pop
sbb
mov
add
xor
mov
mov
scas
mov
or
ret
or
add
add
adc
adc
pusha
or
mov
dec
cld
mov
push
scas
adc
retf
push
or
add
ja
or
pop
lea
popf
jo
xchg
pop
cli
outs
jo
or
into
dec
pop
inc
stos
das
xchg
lock
add
imul
fadd
mov
dec
pusha
or
inc
xchg
dec
clc
inc
dec
mov
adc
add
scas
xor
or
jnp
dec
sbb
clc
sar
mov
add
add
mov
or
mov
push
inc
mov
sub
scas
addr16
or
add
add
push
jbe
or
sti
stos
mov
pusha
adc
push
sub
jo
sti
test
or
les
and
inc
or
fist
pop
sti
gs
mov
js
jno
adc
jmp
test
repnz
repz
movs
sub
adc
sbb
clc
push
mov
inc
mov
hlt
inc
inc
sbb
add
add
nop
xor
dec
push
test
jo
lods
loopne
pusha
std
nop
sub
enter
xor
repnz
stc
mov
add
cmp
cld
cmp
push
push
ss
inc
mov
cmp
jbe
or
add
scas
sub
shl
in
inc
xor
mov
stos
dec
mov
add
add
jno
lock
out
and
pop
xor
xchg
push
lock
addr16
add
add
pop
adc
dec
add
sub
or
xchg
and
xchg
sbb
nop
pop
test
movs
add
add
mov
pusha
jno
pop
(bad)
daa
and
repnz
nop
pusha
pop
push
mov
lahf
add
add
add
xor
test
inc
push
mov
jg
ficomp
dec
ror
mov
pop
in
add
add
or
inc
push
xor
jg
push
or
mov
gs
xor
sbb
and
in
mov
add
add
inc
adc
dec
sbb
(bad)
adc
mov
aas
inc
stos
mov
adc
inc
inc
and
jl
jnp
add
add
loopne
adc
mov
jae
jge
test
sar
jg
mov
add
data16
and
dec
mov
movs
jne
nop
iret
inc
jnp
stos
addr16
mov
add
or
adc
pop
add
jge
std
lds
jb
sbb
fidiv
arpl
data16
add
sbb
jle
stos
mov
repz
je
stos
in
loopne
dec
mov
dec
sti
mov
lahf
jle
imul
add
shl
xlat
ret
pop
(bad)
popf
or
cmp
jmp
push
in
pop
push
retf
dec
add
add
or
sub
cli
jo
jl
xor
adc
adc
push
inc
and
imul
add
pusha
addr16
(bad)
push
push
(bad)
loopne
pop
mov
sar
cmps
ja
test
cmc
movs
xor
mov
add
sub
add
jg
jmp
xor
inc
sub
add
mov
mov
mov
inc
movs
xor
in
add
add
lods
neg
mov
lds
mov
fist
lock
ror
outs
cld
cmp
add
add
jns
lock
cld
loope
test
div
call
cmp
jl
cld
add
push
cmp
add
add
jno
dec
lock
jg
cld
mov
fild
adc
cmp
dec
add
add
and
sub
mov
cmp
inc
mov
icebp
sub
and
add
add
pop
out
mov
or
push
sub
es
dec
push
jo
icebp
clc
daa
adc
add
add
cmps
add
pop
adc
mov
mov
lock
add
add
test
mov
or
mov
add
lea
push
fcomp
sbb
add
add
mov
inc
fmul
and
in
sub
dec
dec
loopne
out
jmp
adc
and
add
add
ret
es
mov
xor
and
leave
stc
adc
jnp
dec
pop
pop
or
fs
or
add
add
push
pusha
add
in
xchg
mov
shl
imul
jle
(bad)
cld
add
or
loope
cmp
xor
bound
or
loopne
push
in
in
loopne
ret
add
add
dec
shr
cdq
rcr
or
xchg
rcl
popf
pusha
lods
mov
and
pop
std
add
add
scas
pop
mov
push
xchg
jbe
jle
adc
jnp
cmp
imul
add
add
hlt
cmp
and
pop
loopne
or
xchg
push
mov
or
mov
je
outs
add
nop
dec
jg
or
js
stos
lds
cmp
jl
sti
mov
adc
add
and
pop
xchg
sbb
stos
or
(bad)
adc
sbb
test
out
cdq
lea
add
add
add
mov
fsubr
test
push
rcl
pop
inc
clc
enter
call
add
add
je
jbe
mov
adc
shr
push
xlat
test
mov
cmc
or
sbb
jl
daa
std
adc
add
cs
and
pop
retf
enter
or
and
adc
add
add
stos
adc
and
cmp
in
mov
jbe
retf
inc
movs
(bad)
int3
push
pop
add
add
cmp
sar
cmp
shr
pop
pusha
adc
stos
pop
clc
add
mov
jmp
add
add
lock
sbb
pop
shr
lock
or
pop
mov
cmp
gs
aam
or
dec
cli
jns
or
lea
xor
cli
mov
pop
mov
add
add
inc
inc
inc
int
fwait
fwait
nop
or
mov
jne
stos
in
add
push
cwde
cli
inc
int
inc
jne
mov
add
mov
shl
push
jo
test
adc
push
sbb
test
in
adc
jnp
push
out
adc
cmp
add
add
je
fnstcw
cmc
mov
lods
bound
js
lods
jle
(bad)
sub
push
sbb
xchg
mov
pop
cmp
aaa
fwait
cs
fdivrp
lods
aad
xor
push
scas
(bad)
in
adc
add
add
sub
inc
add
into
retf
daa
xchg
test
test
sub
into
or
ja
mov
add
add
mov
push
repz
movs
push
out
inc
push
xchg
cmps
pop
or
clc
pushf
and
mov
add
add
dec
test
dec
push
inc
movs
in
hlt
inc
dec
xchg
in
inc
mov
mov
aad
mov
int
xchg
jbe
imul
popf
jbe
pop
into
add
cmp
sub
retf
hlt
jmp
push
ins
jge
mov
add
movs
imul
sub
(bad)
xor
or
cmp
dec
in
les
and
nop
ja
in
xchg
push
push
or
in
mov
int
xchg
mov
lods
loopne
or
in
add
add
adc
fsub
in
cmp
mov
scas
mov
fdivr
adc
add
pop
jmp
out
nop
sahf
aaa
(bad)
popa
retf
scas
fadd
pop
mov
imul
push
pop
mov
add
add
movs
or
daa
into
jmp
loope
sbb
loope
cmp
inc
sub
xor
mov
in
ins
mov
mov
leave
sbb
push
sub
sbb
push
repz
add
repz
lea
mov
call
aad
cmps
aad
dec
fld
retf
add
add
loop
dec
jmp
popa
or
cmps
cmps
pushf
dec
outs
js
mov
arpl
out
in
add
add
mov
outs
mov
fwait
xchg
fst
ret
fs
and
mov
mov
mov
inc
xor
or
mov
adc
(bad)
xor
and
js
add
add
cmc
movs
mov
clc
sub
sti
aas
lods
cs
mov
jl
es
in
add
add
push
lock
std
cmovnp
mov
jge
leave
adc
and
fld
adc
jnp
add
add
xor
xchg
mov
icebp
adc
in
hlt
pop
call
xchg
cmp
adc
add
add
test
test
inc
retf
frstor
cmp
mov
pop
daa
lds
dec
jns
add
add
or
pop
or
jne
and
(bad)
cmp
fidiv
push
cmp
xor
cmp
sub
add
add
and
mov
test
(bad)
pop
not
std
and
add
xchg
or
add
sub
dec
cmps
and
mov
retf
jg
xor
jg
mov
mov
add
mov
inc
hlt
jmp
js
xchg
in
repnz
jo
cmp
add
cmp
stos
pop
add
add
cld
jl
pop
xchg
jge
sub
xchg
scas
xor
inc
(bad)
repnz
jne
les
call
add
add
ror
mov
jle
or
mov
sub
enter
int3
mov
out
add
add
inc
pop
adc
mov
ja
imul
mov
xchg
xchg
mov
not
add
add
pop
js
add
js
dec
in
mov
cld
mov
daa
jns
movs
or
in
add
add
xchg
mov
mov
xchg
retf
cs
into
retf
mov
adc
pop
add
add
and
mov
xchg
xlat
adc
push
xchg
sbb
push
mov
cli
cmp
push
imul
add
mov
loop
shl
movs
out
loop
and
cmp
dec
loop
icebp
mov
fsub
hlt
mov
add
and
sar
(bad)
repnz
pop
in
and
scas
cld
cmps
mov
sbb
sbb
and
add
add
fisttp
xor
sbb
call
dec
ja
dec
and
shl
ficom
and
ret
mov
jne
movs
push
enter
or
loop
test
add
(bad)
not
call
repnz
or
push
movs
imul
sub
mov
pusha
mov
inc
jne
enter
mov
add
add
sbb
adc
adc
jne
xchg
mov
adc
iret
cmc
in
enter
mov
ins
sub
call
push
dec
je
dec
adc
imul
arpl
in
aam
sbb
imul
add
add
sbb
mov
repnz
xchg
pop
sbb
icebp
sub
gs
jmp
rcl
loopne
add
add
mov
cli
adc
inc
xchg
jle
and
test
jmp
mov
xchg
aas
push
or
daa
cmp
add
add
xchg
add
rol
repnz
adc
push
je
mov
mov
(bad)
xchg
add
add
aad
push
cmc
(bad)
jle
jle
dec
mov
push
fist
stos
cs
js
adc
int
or
add
add
add
or
mov
hlt
add
mov
mov
mov
add
add
and
mov
pusha
and
pop
ds
daa
cmps
cmp
add
hlt
test
add
add
add
dec
sub
in
mov
sbb
or
jmp
stos
call
idiv
jge
add
jns
popf
jl
(bad)
retf
fbld
pop
stos
jb
add
push
aaa
cdq
in
sbb
push
add
add
add
jne
sub
push
xchg
(bad)
xchg
jae
push
dec
test
out
in
js
outs
pop
stos
sub
sub
add
jns
imul
dec
popf
jnp
ins
inc
jne
jb
hlt
cmps
jne
lods
mov
xor
add
xchg
mov
call
dec
sbb
ds
and
add
adc
arpl
xlat
sbb
add
add
aas
test
rcl
adc
jo
lock
nop
shl
jb
(bad)
add
add
retf
mov
dec
enter
add
adc
add
dec
adc
mov
or
sub
push
lea
cmp
int
push
or
out
inc
ds
inc
sbb
arpl
jle
popf
or
add
add
add
add
xchg
stc
add
lds
std
call
mov
loop
aad
movhps
lahf
out
add
add
adc
jle
or
push
cmp
dec
lea
stos
lea
inc
bound
add
add
(bad)
sar
scas
retf
push
or
cwde
cmps
hlt
loopne
xor
loopne
add
mov
mov
add
movzx
add
shl
adc
shl
jecxz
pop
out
dec
popf
sub
pop
fwait
mov
jae
mov
and
lea
add
add
mov
adc
adc
lea
push
adc
mov
jmp
jne
out
mov
outs
mov
push
add
add
add
jle
adc
push
inc
push
or
pop
retf
inc
jno
cmp
jl
push
cmp
add
add
push
dec
pop
stos
sub
pop
repnz
std
cwde
bnd
adc
iret
mov
and
add
xchg
xchg
or
iret
pop
sti
inc
push
cld
arpl
or
and
mov
cmp
data16
add
push
or
pop
dec
fistp
into
stos
cs
dec
es
stos
call
retf
xor
call
xchg
xlat
adc
pop
iret
xchg
repz
ror
mov
ja
pop
jo
hlt
add
add
aam
fcomp
xchg
(bad)
and
xor
add
fwait
push
rol
addr16
cli
leave
(bad)
cmp
add
mov
inc
sbb
pop
retf
aas
pop
mov
lock
and
jmp
retf
clc
add
add
ja
cmp
jmp
sub
jge
jl
mov
jo
data16
mov
add
dec
add
add
sbb
call
jo
adc
jmp
push
sub
mov
rcr
or
add
add
dec
cmp
inc
pop
and
retf
clc
push
in
out
sub
sub
mov
mov
hlt
movs
mov
add
add
in
ror
sbb
push
daa
or
sbb
add
push
inc
mov
mov
dec
ins
rcl
or
add
sub
xlat
hlt
inc
in
lods
test
sbb
gs
add
add
pop
(bad)
lds
mov
dec
mov
nop
inc
jmp
fild
test
add
add
(bad)
dec
icebp
push
lods
xor
pop
mov
hlt
pop
(bad)
and
inc
hlt
pop
mov
movs
pop
add
add
(bad)
clc
cmp
mov
rcr
jmp
dec
sbb
jmp
adc
push
shr
add
add
sar
pop
pop
and
ja
stos
test
and
sbb
jecxz
rol
add
add
arpl
xchg
jb
pop
arpl
stos
frstor
(bad)
xchg
and
xchg
ror
xchg
push
push
or
add
add
stc
lock
in
adc
dec
mov
dec
stos
ret
jg
imul
add
add
add
xchg
cwde
imul
adc
scas
repz
and
inc
jmp
das
pop
inc
xchg
enter
or
add
add
nop
pop
xchg
ds
retf
jg
adc
xchg
xor
push
xchg
out
cdq
push
cmp
add
add
ret
adc
adc
adc
jmp
leave
sbb
or
xchg
add
add
cld
push
cdq
xor
enter
pop
lock
push
sbb
lock
js
pop
add
add
not
pop
mov
inc
ins
into
pop
mov
add
cmp
xor
movs
cwde
ret
add
add
imul
mov
mov
lods
adc
sbb
inc
add
add
iret
push
retf
out
sub
loopne
or
inc
or
ins
popa
inc
inc
enter
leave
add
add
std
in
or
jo
jecxz
mov
push
dec
movs
cmp
pop
sti
jl
(bad)
dec
add
dec
sub
sbb
add
add
out
sub
jae
adc
jmp
iret
xchg
jl
or
je
sbb
int3
aaa
stc
add
add
in
mov
adc
inc
sbb
add
mov
mov
push
test
mov
daa
add
add
jmp
fbld
fsubr
popa
sar
push
xchg
inc
movs
or
pop
jecxz
push
movups
add
add
push
popf
jmp
test
mov
stc
int
mov
pop
inc
or
rcr
xor
add
add
dec
sub
mov
bound
and
sbb
lods
dec
dec
pop
daa
fcom
cmp
mov
inc
add
sub
je
das
leave
mov
in
mov
les
mov
cmp
push
add
add
fucom
xchg
cli
xor
jmp
daa
pop
jge
adc
je
fst
pusha
mov
dec
sahf
inc
mov
imul
or
adc
mov
in
int
ins
sbb
or
das
inc
jo
cmp
add
loope
jmp
mov
mov
adc
lea
adc
dec
sub
adc
add
add
xchg
pop
enter
mov
mov
loope
outs
ins
repz
loop
pop
mov
inc
lods
je
add
add
add
cmp
jne
fidiv
adc
sub
push
in
or
add
add
dec
jne
jmp
and
test
pushf
dec
jmp
cmps
es
imul
xchg
inc
movs
ror
rol
sub
hlt
jmp
mov
or
aam
adc
add
jl
push
push
in
call
jmp
mov
jg
inc
lock
sbb
rol
add
add
loope
adc
ins
dec
inc
in
mov
div
dec
jmp
add
and
xchg
mov
mov
lock
jecxz
mov
test
mov
add
add
or
mov
cmp
lock
stos
mov
ficomp
outs
lock
xor
out
add
add
xchg
jg
pop
push
shl
daa
add
mov
test
rcr
add
add
lods
sub
movaps
mov
cmps
out
and
loopne
into
or
nop
test
push
mov
jecxz
mov
add
add
adc
push
mov
dec
xlat
push
inc
adc
pop
int
leave
and
mov
xchg
sbb
add
add
xchg
addr16
jge
jae
imul
test
lods
or
aas
push
pop
nop
cli
sub
movs
add
add
lods
cmps
cli
add
cmp
cs
in
test
xchg
push
repnz
xchg
icebp
mov
add
add
add
je
mov
jmp
mov
addr16
pop
and
sbb
sti
fist
add
add
mov
push
mov
jg
ds
cmps
inc
not
and
push
jo
sbb
mov
add
inc
mov
add
add
push
sbb
iret
sub
inc
icebp
jne
dec
daa
imul
int3
(bad)
shl
push
xchg
addr16
add
add
daa
xor
cmp
and
jb
shl
mov
push
cdq
inc
pop
inc
or
xor
or
adc
push
mov
shr
das
imul
pop
dec
sub
add
add
mov
loop
sbb
ds
adc
cld
push
cdq
push
in
jo
jmp
rcl
stc
add
add
mov
shr
inc
dec
mov
mov
shr
gs
inc
(bad)
retf
sub
add
add
push
int
les
mov
pop
icebp
xor
cmp
pop
mov
dec
add
add
xchg
push
add
sub
xchg
add
jo
mov
cs
jmp
xchg
sbb
xlat
cmp
adc
add
aas
mov
call
fisub
call
hlt
scas
ins
or
add
add
sub
sub
mov
cdq
push
xor
and
fs
cmp
adc
add
add
neg
add
mov
mov
repnz
or
stc
movs
fst
dec
cld
mov
ret
push
icebp
lea
lds
mov
and
xor
adc
cmp
mov
add
inc
jl
jmp
xor
xor
mov
test
cmp
pusha
in
addr16
mov
add
add
repnz
dec
mov
neg
inc
mov
adc
fisubr
pop
pop
cmp
ret
aas
add
add
xchg
lds
leave
push
aad
xor
div
and
xchg
std
cmp
dec
add
xor
loop
mov
add
(bad)
cmp
push
sub
add
fld
xor
pop
push
mov
cmp
add
imul
sbb
leave
addr16
sub
mov
dec
adc
add
add
sub
imul
sbb
xlat
xchg
inc
stos
jo
adc
fs
lahf
ins
xchg
mov
add
scas
fs
out
mov
mov
scas
inc
das
not
pop
(bad)
hlt
sub
cmp
add
add
jns
test
les
sbb
inc
clc
stc
xor
add
ret
add
mov
pusha
jno
ins
sub
stc
enter
pop
iret
sahf
stc
jge
daa
mov
add
add
inc
lods
and
sub
cmp
fwait
jno
mov
into
leave
mov
mov
adc
test
add
add
aaa
jmp
xchg
inc
imul
out
mov
fcom
xchg
mov
mov
xchg
rol
add
add
in
push
leave
lahf
das
cmp
push
test
jne
out
movs
ret
ds
mov
mov
or
add
dec
cdq
and
xchg
jb
jae
test
and
dec
jmp
sub
mov
jle
push
out
cmp
add
dec
dec
sub
loope
lock
je
dec
es
jl
jns
in
shr
scas
add
add
outs
fiadd
xchg
pause
movs
xor
lock
fistp
loopne
rcr
and
push
sar
push
add
add
out
hlt
movs
ins
fidivr
mov
pusha
fcom
xchg
(bad)
ds
xchg
rcl
ret
loopne
add
add
stos
imul
fadd
mov
mov
movs
sub
and
inc
mov
push
lods
jg
add
add
pop
pushf
pusha
mov
xor
mov
loope
test
adc
dec
push
add
add
pushf
add
inc
aam
cmp
sbb
sub
shl
jno
into
movs
mov
cmp
add
add
sar
sbb
rcl
xchg
mulps
scas
jle
jnp
xlat
pop
add
jbe
adc
daa
mov
and
mov
ss
cmc
jae
dec
or
jge
mov
clc
push
test
add
aad
cmps
xchg
adc
je
jmp
push
mov
add
and
add
mov
aas
test
add
mov
call
add
adc
icebp
add
mov
pop
jbe
pop
adc
add
add
cmp
inc
dec
fld
stc
or
jae
jne
ret
push
jle
sti
push
fwait
add
add
bound
fsubrp
mov
aas
xor
lock
push
sbb
jp
mov
and
add
add
adc
xchg
dec
pop
mov
movs
sar
enter
lahf
dec
retf
xchg
dec
dec
add
add
fdiv
mov
inc
adc
cmp
lahf
mov
cmc
xchg
ss
outs
call
and
add
add
jb
pusha
dec
sbb
ret
popf
test
into
mov
push
pop
push
or
out
pop
call
fdivr
add
outs
retf
jge
imul
ficom
dec
popf
rcr
stc
mov
push
mov
add
call
mov
loopne
(bad)
std
test
mov
pop
jecxz
aad
add
add
in
aad
cmp
(bad)
jb
jo
inc
(bad)
and
cmp
mov
sbb
icebp
gs
hlt
jb
in
outs
adc
jno
cs
sub
clc
lods
mov
cld
mov
inc
and
and
add
add
and
stc
scas
icebp
add
and
xchg
push
(bad)
imul
(bad)
leave
shl
into
xor
jae
adc
and
stc
push
and
shl
lss
add
aam
add
add
mov
jge
mov
in
(bad)
js
scas
movs
or
lahf
mov
sbb
xchg
xor
add
add
not
mov
repnz
fwait
sahf
inc
je
sub
call
sub
icebp
add
add
or
add
je
cmp
and
mov
rol
and
test
add
lock
or
sar
cmp
jle
hlt
(bad)
imul
jp
lahf
and
add
add
or
and
shl
int
inc
dec
shl
adc
mul
nop
in
clc
test
sti
stos
inc
cmp
add
add
nop
dec
add
push
inc
cld
sub
inc
add
sbb
or
jge
add
lar
add
add
push
shl
jo
add
cmc
inc
les
repz
sbb
xchg
and
add
add
or
pop
hlt
loopne
mov
and
jns
sbb
cs
sbb
add
add
add
mov
mov
dec
jb
adc
push
(bad)
lods
xchg
pop
xchg
xchg
add
mov
xchg
cwde
sub
cwde
sbb
dec
mov
out
sub
sbb
add
add
loopne
cmp
dec
add
adc
mov
inc
in
clc
inc
add
add
stc
cmpxchg
mov
test
hlt
xlat
daa
inc
push
add
cmp
xchg
aad
adc
push
add
add
or
clc
mov
lea
pop
shr
ret
jl
stos
fisttp
add
cmp
pop
mov
pop
mov
push
sub
xor
lods
(bad)
mov
jne
test
push
iret
jl
mov
add
add
adc
xchg
xor
xchg
leave
pop
mov
mov
mov
add
add
mov
call
sub
dec
ret
sar
push
popf
jne
dec
movs
and
xchg
add
add
in
pop
xchg
push
test
and
fstp
in
daa
lea
xchg
hlt
mov
loopne
int3
add
add
scas
xchg
adc
imul
push
and
inc
sbb
aam
mov
push
(bad)
int
add
add
or
fbstp
mov
mov
inc
dec
(bad)
pop
loop
xchg
imul
add
add
push
and
mov
fld
dec
and
ret
push
popf
mov
outs
jb
dec
jo
xlat
dec
pop
inc
add
add
pushf
aam
nop
dec
mov
dec
dec
and
jbe
imul
mov
dec
fwait
mov
add
mov
sbb
or
xlat
rol
pop
pop
jbe
pop
mov
mov
xchg
loopne
lods
(bad)
sar
or
add
add
inc
sar
enter
mov
lods
fadd
xchg
sbb
rol
pop
cmp
push
jge
or
mov
test
sub
sti
fnstcw
not
movs
pop
into
add
add
repnz
mov
mov
mov
mov
xchg
jne
xor
pop
bsr
add
rol
push
push
sub
daa
fmul
repz
and
mov
mov
mul
lea
add
add
mov
loop
jnp
mov
cmp
xchg
fwait
cdq
int
arpl
gs
inc
mov
in
add
add
cli
das
call
cld
cdq
and
cmp
scas
inc
jbe
call
add
xchg
xor
sti
xchg
pop
mov
push
or
jg
xchg
fnstsw
rol
adc
add
add
push
inc
add
cmp
cld
push
cwde
sbb
push
mov
jns
add
add
bound
mov
mov
stc
xor
push
add
adc
(bad)
cmp
or
cwde
sbb
fld
add
add
mov
cmp
lock
cmp
(bad)
(bad)
gs
sbb
inc
movs
nop
add
add
cwde
xchg
sbb
pop
add
mov
lods
sub
lods
retf
sbb
scas
xchg
push
sbb
nop
scas
and
mov
and
nop
mov
or
lods
add
aad
and
push
repnz
int3
mov
add
scas
jmp
xchg
inc
dec
push
call
pop
loopne
xchg
out
pop
pusha
inc
xlat
fimul
and
add
add
dec
out
inc
shl
sbb
xlat
das
sahf
and
push
inc
sbb
xor
push
cdq
or
add
add
test
dec
push
cmp
jle
adc
push
push
(bad)
sbb
mov
and
add
add
mul
pop
and
out
jp
push
push
xchg
pop
mov
inc
ss
fmul
add
add
imul
mov
repnz
cld
inc
sub
sub
enter
mov
add
loope
sub
add
sar
pop
and
jl
inc
cwde
repnz
xchg
sar
and
popa
fcomp
pop
outs
in
loopne
mov
add
and
fadd
in
and
lods
jg
mov
dec
dec
or
sub
add
add
jp
and
jl
idiv
jmp
jge
push
mov
cmp
sbb
ds
(bad)
add
add
inc
in
adc
dec
and
(bad)
xchg
fisttp
add
add
or
pop
call
je
push
nop
adc
adc
test
fcmove
dec
dec
lock
inc
mov
add
add
out
adc
cmp
add
jge
daa
xchg
aam
adc
add
enter
inc
cli
cmp
aas
sbb
pavgb
mov
cmp
pop
add
add
inc
and
inc
frstor
aam
pop
xchg
sbb
cmc
mov
mov
cmp
sub
mov
add
add
adc
out
adc
or
or
(bad)
stos
and
or
retf
cmps
jmp
add
sbb
addr16
cmps
add
les
sub
loope
dec
adc
inc
rol
add
inc
pop
pop
inc
aam
movs
or
(bad)
lods
dec
xor
out
imul
and
push
outs
dec
(bad)
out
xor
add
add
mov
inc
inc
sar
int3
ss
inc
out
push
lods
jne
push
loopne
mov
add
add
mul
movs
retf
mov
loope
inc
loop
les
aam
lods
or
ficom
add
pop
pop
repnz
jmp
mov
pop
mov
stos
adc
lods
pop
cwde
arpl
xchg
push
add
lds
push
enter
dec
pushf
xchg
cwde
mov
add
push
lea
mov
adc
add
add
fwait
les
jp
inc
shr
fwait
imul
fsub
aam
bsr
jb
arpl
add
add
mov
adc
jmp
cmove
sub
mov
xor
add
jb
call
les
jns
inc
lock
shr
les
hlt
in
sbb
add
add
inc
mov
xor
sub
popf
call
popf
xor
cli
xor
add
add
sub
cwde
push
in
add
dec
repnz
pop
mov
popf
pop
jae
adc
leave
mov
add
add
adc
pushf
lods
fwait
mov
push
cmp
dec
and
xchg
inc
cld
(bad)
hlt
xor
push
add
add
and
cdq
push
nop
xor
lods
sbb
std
aaa
add
push
jmp
sub
daa
mov
sub
loope
(bad)
xchg
idiv
add
pop
or
das
hlt
sbb
add
add
mov
repz
or
cmps
shl
jae
push
lods
aas
mov
jle
add
add
pop
in
pop
pusha
mov
pop
mov
cs
hlt
xor
push
or
ret
xor
add
add
por
cmp
scas
fisttp
cmp
adc
cdq
push
inc
clc
sub
imul
sub
aaa
add
add
stos
retf
xor
cmp
push
mov
jae
std
dec
pop
loop
movs
stos
movs
js
stos
outs
test
stc
outs
add
add
dec
or
pop
loopne
xor
pusha
dec
jmp
cmp
cmp
cmp
je
push
add
add
xchg
add
cli
cmc
pusha
jle
ror
or
or
sti
fstp
test
cdq
add
add
mov
mov
aas
cmp
cmps
xchg
ds
rcr
cmps
fld
pop
xor
fisub
add
add
aam
je
mov
jae
push
mov
pop
retf
stos
xor
fild
adc
add
add
lds
adc
aas
push
mov
aad
pop
and
test
sahf
ins
and
add
add
add
sbb
movs
fwait
popf
icebp
sar
pop
pusha
and
nop
nop
call
dec
xchg
add
add
fldcw
and
adc
repnz
rol
jmp
mov
add
add
adc
aam
adc
mov
mov
sahf
ins
ds
fs
and
sbb
jne
jno
add
add
jg
mov
and
add
adc
hlt
jmp
inc
sub
std
clc
push
imul
add
inc
cmp
and
xchg
adc
mov
in
imul
aad
sub
add
add
xchg
hlt
sbb
out
xchg
in
add
sub
shl
add
jae
jl
and
lea
mov
add
sbb
mov
std
dec
mov
adc
test
dec
or
cmps
arpl
add
add
add
push
outs
(bad)
and
lock
push
iret
cmp
sub
enter
dec
scas
inc
mov
dec
and
mov
add
add
stc
ror
test
mov
imul
mov
lods
pop
cmc
push
add
fsubr
lock
mov
dec
fisttp
nop
and
nop
in
cmp
into
adc
push
icebp
add
add
das
inc
daa
pop
(bad)
std
(bad)
outs
mov
into
push
sub
adc
xchg
add
jns
sbb
add
add
adc
mov
(bad)
hlt
jg
stos
out
push
dec
xchg
cmp
and
push
bound
add
add
pop
jo
fadd
cmp
data16
mov
add
enter
fcomp
(bad)
mov
neg
add
add
adc
sub
movs
fnsave
push
cmp
mov
jb
or
or
test
sub
inc
stos
fcomp
(bad)
out
push
add
imul
dec
aam
pop
out
arpl
dec
add
add
out
scas
std
dec
das
mov
and
mov
adc
add
push
stos
sbb
and
add
add
jmp
xchg
setg
cmps
(bad)
mov
add
inc
mov
test
add
call
inc
push
sbb
mov
test
es
jbe
jo
jnp
lods
test
add
add
dec
popa
pop
and
fsub
aaa
or
add
cld
pop
and
mov
inc
mov
cmp
pop
add
add
mov
push
push
scas
lea
mov
sub
cmp
sbb
jp
mov
add
add
mov
jo
std
push
mov
add
std
ficom
test
ret
(bad)
mov
xlat
fild
add
add
mov
jle
lock
imul
addr16
imul
inc
mov
pop
xchg
pop
sbb
clc
add
add
mov
jns
dec
repnz
dec
jp
mov
in
pop
gs
push
sub
and
add
add
gs
adc
aas
in
dec
xchg
cdq
sub
pop
mov
pop
inc
enter
mov
fs
jno
push
pop
adc
add
add
je
pop
cmc
ret
push
cmc
jbe
nop
and
pop
adc
mov
adc
add
add
cmp
aad
dec
stc
loop
fs
push
xchg
jmp
out
daa
(bad)
stos
imul
nop
add
add
mov
daa
jb
pop
hlt
in
mov
pop
je
popf
rcr
dec
int3
popf
and
mov
add
add
cwde
push
sub
mov
fnsave
dec
jmp
sub
movs
stos
fcmovnb
pop
xor
adc
pop
add
add
add
dec
lods
out
retf
call
xchg
fdivr
mov
cmp
out
add
add
jle
push
xor
pop
(bad)
fsubr
cs
sti
mov
neg
add
add
or
xchg
imul
test
xor
inc
ds
test
add
cdq
add
fstp
lods
fimul
cwde
repnz
movs
inc
(bad)
fcmove
mov
push
cmps
jmp
add
add
mov
movs
sbb
outs
test
(bad)
stc
mov
push
xor
imul
ror
test
add
add
icebp
add
xchg
mov
cli
adc
in
jl
movs
and
jns
add
add
cmp
mov
and
fadd
jmp
pop
imul
dec
mov
and
xchg
shl
xor
add
add
xchg
xchg
mov
test
inc
leave
push
inc
dec
or
les
stos
and
add
add
scas
adc
cmc
pop
xor
add
sbb
pop
jl
dec
cmp
push
aad
leave
jp
repz
movs
add
add
rcl
sbb
adc
lods
ins
out
shl
das
push
std
pushf
lea
xor
sub
xchg
or
add
jbe
in
jno
xor
xchg
mov
cwde
or
adc
pop
push
gs
hlt
mov
ds
pop
cmp
adc
(bad)
loop
jae
(bad)
push
jb
movs
add
std
adc
push
or
cmp
add
add
push
push
push
adc
sub
and
rol
cmp
into
pop
mov
push
add
add
add
jne
dec
or
je
or
inc
push
xchg
dec
adc
in
jnp
add
add
push
lock
mov
ror
mov
mov
mov
movs
lock
mov
dec
repnz
add
add
nop
cmc
stos
mov
cdq
cwde
inc
pop
dec
jmp
add
rol
push
cmps
inc
rcl
stos
add
add
push
mov
sbb
stos
mov
xchg
je
inc
jo
stos
or
ins
loop
or
and
bound
add
add
in
xchg
(bad)
stos
and
push
aas
rol
mov
or
or
add
sub
or
add
jne
jmp
sbb
test
arpl
cs
adc
hlt
shr
inc
call
test
add
push
adc
fisttp
pop
das
sbb
outs
ficomp
add
add
mov
mov
daa
cld
pop
nop
repnz
mov
cmp
add
jb
bnd
add
add
dec
xchg
std
shl
stos
and
or
mov
add
add
add
sbb
fisubr
mov
data16
rep
les
sbb
mov
sahf
outs
inc
or
add
add
fucomip
push
and
xchg
out
clc
lea
pop
popf
call
nop
cmps
jg
arpl
loopne
lods
add
add
mov
and
push
lods
push
pop
dec
jne
xchg
adc
stos
cmp
mov
add
mov
jl
ja
icebp
or
icebp
push
xchg
adc
sub
cmp
iret
dec
jnp
sbb
push
add
add
mov
test
mov
xchg
push
jmp
push
sbb
mov
fadd
add
add
mov
push
test
mov
and
aam
xor
xor
add
xchg
shr
or
push
push
and
fs
xchg
gs
xor
mov
sbb
in
outs
and
or
mov
adc
ror
pop
mov
add
fsubr
push
leave
stos
retf
pop
dec
lods
mul
sbb
(bad)
enter
cmp
add
add
mov
sahf
xchg
(bad)
ror
xchg
jno
mov
pop
sub
add
add
cmp
xor
ja
or
sti
lods
repnz
adc
and
xchg
push
pop
pop
dec
ret
add
inc
or
push
je
fsub
in
dec
or
mov
popa
fimul
add
add
movs
fs
fcom
scas
and
rcr
daa
shl
in
lods
inc
jecxz
cli
or
add
and
add
jp
push
inc
sar
adc
push
xchg
jp
add
fmul
int3
int3
jmp
add
add
push
gs
scas
and
(bad)
rcr
adc
out
push
and
clc
adc
js
sbb
push
jle
imul
xor
push
dec
jge
pusha
inc
dec
or
and
out
call
add
add
dec
sbb
push
push
stc
mov
mov
mov
inc
xchg
pop
jns
push
daa
inc
(bad)
mov
add
cmp
cmp
(bad)
pop
adc
daa
stos
dec
leave
jp
sbb
in
dec
dec
jo
loopne
fcom
add
add
pop
leave
lea
pop
and
stos
dec
xor
sub
outs
cwde
sti
jmp
xchg
les
xchg
mov
add
add
and
sbb
push
ds
fdivr
in
and
xchg
int3
sbb
(bad)
sti
pushf
jb
xor
add
add
arpl
daa
in
hlt
faddp
rcl
fsubrp
dec
or
adc
and
push
sbb
add
jno
ret
daa
test
mov
xchg
inc
fadd
mov
in
movs
adc
push
and
in
mov
mov
ror
test
add
mov
add
jmp
xchg
mov
add
enter
mov
jge
sub
jae
inc
dec
in
(bad)
sti
scas
lods
and
enter
add
dec
out
enter
jle
aas
es
adc
mov
jge
(bad)
hlt
dec
out
mov
fcomp
dec
add
add
cdq
mov
std
add
pushf
pop
inc
adc
scas
and
(bad)
pop
jo
popf
add
add
aam
icebp
or
out
dec
jmp
clc
xor
push
outs
inc
add
loopne
mov
push
add
add
rcr
and
jmp
jp
mov
add
std
inc
call
add
add
das
push
xchg
fsub
jmp
mov
or
mov
ins
sub
lea
add
add
and
sub
sbb
cmps
ficom
dec
pop
cmps
hlt
xchg
les
jo
add
add
test
mov
sbb
or
fucomi
xlat
inc
fidiv
add
add
fldenv
pop
loope
push
add
sub
mov
xchg
inc
mov
cmp
mov
cs
add
imul
out
test
mov
pop
xchg
xchg
add
mov
test
enter
push
cmp
push
fld
add
add
mov
fsubr
mov
popf
(bad)
adc
jecxz
data16
mov
dec
pop
and
add
add
daa
jne
nop
or
(bad)
inc
ja
adc
and
js
add
lds
add
add
inc
dec
enter
push
and
adc
call
scas
xor
sub
add
lahf
mov
inc
daa
aam
lahf
das
and
jne
sub
in
pop
nop
je
pmaxsw
add
push
adc
add
xchg
fcomp
pushf
xchg
daa
cmps
clc
pop
xchg
and
std
std
pop
(bad)
cdq
loope
cmp
ror
stos
mov
dec
adc
jns
leave
jmp
sbb
pop
inc
jbe
and
sub
enter
loopne
dec
rcl
add
add
and
jb
sbb
dec
hlt
xchg
sbb
scas
repz
daa
call
ror
stos
sub
add
add
dec
shr
jle
xor
jmp
loope
sub
aas
cmps
pop
fcomp
call
add
retf
or
fdiv
je
and
jns
stos
leave
aad
mov
dec
fld
mov
add
add
jge
push
ja
lock
add
call
call
imul
ss
add
add
movs
out
sahf
loop
fwait
mov
cmc
stos
es
out
pop
call
xor
ret
add
add
inc
je
or
mov
add
leave
je
xchg
adc
out
jne
js
mov
fisub
add
lock
push
adc
sbb
push
fs
or
and
mov
adc
add
add
xchg
cwde
stos
nop
mov
adc
stc
xchg
retf
pop
les
jns
and
pop
lods
push
pop
add
add
int3
push
imul
inc
mov
cmp
xor
inc
mov
add
add
add
cmc
or
or
xchg
add
or
shl
fist
test
std
jno
and
add
add
test
adc
arpl
xor
sbb
mov
mov
mov
test
or
add
add
jo
movs
das
retf
add
xor
lods
push
pop
sub
adc
add
add
fiadd
call
pop
or
sub
adc
pop
add
add
dec
fisttp
aam
xchg
dec
fmul
xchg
(bad)
sub
push
fsubr
test
sbb
add
add
sub
fs
nop
mov
movsx
jmp
fmul
(bad)
dec
sbb
add
add
add
push
sbb
push
jno
and
mov
fidiv
sbb
(bad)
mov
jb
add
add
sbb
cmc
inc
dec
fiadd
and
pop
call
sbb
fwait
push
inc
and
mov
jg
push
mov
shl
sub
shl
leave
and
cmc
ret
fcomp
sbb
add
add
sbb
mov
lods
std
xchg
jp
scas
pushf
outs
mov
(bad)
xchg
bound
sub
outs
or
add
add
mov
sbb
cmp
ficom
ja
push
jae
mov
mov
add
add
sbb
sbb
imul
stos
dec
add
cli
or
add
add
mov
cmps
add
mov
or
sub
pop
repnz
add
inc
jb
push
and
loope
mov
test
js
dec
scas
call
sub
adc
and
add
add
jmp
and
pusha
and
pop
push
es
cmp
xchg
pop
test
add
add
mov
cmps
std
dec
push
and
or
clc
xor
nop
dec
mov
sbb
pop
stos
add
add
mov
adc
push
push
mov
jmp
ret
push
retf
push
xlat
cdq
add
cmc
adc
add
add
rcr
mov
les
or
mov
xchg
dec
cmc
in
and
mov
dec
cmovle
add
add
cdq
dec
and
call
cli
xchg
pop
jnp
push
scas
dec
and
or
add
add
jmp
pop
lea
clc
mov
enter
mov
call
add
scas
pop
add
inc
mov
add
jl
mov
out
inc
or
mov
and
push
adc
jp
inc
xchg
out
mov
or
inc
sub
add
add
sbb
xchg
jbe
add
xor
mov
pop
cwde
daa
xchg
loopne
mov
(bad)
inc
add
add
nop
or
test
shl
mov
sar
ins
dec
xchg
add
add
pop
inc
adc
push
loopne
and
cmp
loope
sub
xchg
test
add
add
js
cwde
wbinvd
cmc
jnp
adc
pop
call
cwde
das
inc
and
xor
dec
inc
sbb
add
add
call
movs
mov
lods
jnp
sbb
mov
dec
jl
sub
pushf
add
add
pop
ins
sbb
mov
pop
(bad)
in
adc
add
xchg
je
xchg
inc
and
pop
call
add
add
sub
(bad)
fisub
push
fs
cli
sub
pushf
mov
mov
push
xor
jne
loop
pop
(bad)
sub
add
add
sbb
enter
outs
and
or
or
or
and
add
mov
adc
dec
push
or
inc
adc
(bad)
add
add
add
inc
fs
add
nop
sbb
lea
in
aas
dec
mov
into
xor
add
add
add
stc
or
sbb
jmp
out
dec
fistp
lds
iret
mov
add
add
(bad)
inc
cmps
inc
dec
and
and
hlt
cld
outs
mov
into
jae
fadd
dec
jge
xor
add
adc
sbb
fisub
lock
jno
in
sub
or
jmp
jmp
add
add
sub
push
add
push
inc
and
dec
or
jae
ins
jo
add
add
ins
push
out
call
stos
leave
dec
ins
jb
mov
(bad)
push
xor
pop
mov
and
add
add
mov
and
ds
mov
jno
movs
push
dec
jae
xchg
push
fisub
sbb
or
fwait
mov
mov
push
mov
fistp
out
add
sub
mov
mov
add
aad
int3
daa
aas
add
stos
leave
pop
jns
call
sub
push
icebp
sldt
add
imul
mov
mov
dec
out
cmp
sbb
pusha
in
or
inc
popf
jle
push
mov
dec
imul
xor
ror
jge
movs
inc
cmps
out
jnp
sub
lods
push
cmp
or
add
add
xchg
jnp
sbb
in
sar
xor
cmp
add
nop
mov
or
add
add
inc
adc
stc
mov
pop
push
adc
xchg
inc
sbb
fisttp
push
jecxz
add
add
xchg
mov
ds
bound
push
aad
cdq
lods
dec
cmp
scas
ss
outs
cld
(bad)
in
or
add
add
push
dec
je
xchg
repnz
cdq
nop
jo
jg
or
or
xor
retf
jmp
jl
and
add
add
ja
retf
xchg
and
int
pop
(bad)
div
movs
call
cli
ret
or
add
push
sbb
in
jg
add
or
je
jl
daa
aad
lahf
and
sub
pop
(bad)
jnp
mov
in
and
cdq
dec
xor
and
mov
(bad)
leave
add
add
cmp
imul
lock
xchg
xor
xor
push
pusha
je
dec
lds
cld
shl
add
add
mov
dec
ror
sub
sar
push
movs
adc
adc
(bad)
inc
inc
fiadd
add
add
fdivr
jg
jl
or
push
lea
ja
adc
std
mov
push
dec
dec
adc
add
add
idiv
xchg
push
je
jbe
pop
or
dec
jmp
push
sbb
jbe
icebp
jne
xchg
not
dec
add
add
shr
add
push
call
push
fsubr
movs
jb
or
inc
ftst
scas
add
add
retf
and
xor
sbb
cs
mov
and
jmp
xchg
fnstcw
fs
mov
add
push
mov
pop
aam
gs
cmp
mov
pusha
fisubr
(bad)
cmc
jmp
add
add
add
les
imul
jg
push
iret
loopne
sub
jne
loopne
repnz
push
cmp
add
scas
jmp
or
test
fwait
sbb
push
sahf
clc
cmp
or
mov
inc
adc
frstor
push
jmp
add
add
mov
sub
inc
dec
outs
lea
add
daa
jle
sub
les
inc
call
jns
add
add
stos
pop
cld
jae
std
out
inc
pop
ins
loopne
in
cmp
push
fidiv
sti
adc
cld
cmps
and
add
add
test
lea
stos
dec
xchg
pop
(bad)
add
imul
mov
hlt
addr16
add
add
or
jge
movs
push
ins
ficom
cmp
jo
cwde
add
and
mov
add
add
dec
and
push
imul
jg
xchg
(bad)
sar
or
cmp
and
mov
add
add
sub
or
sbb
jle
(bad)
sub
adc
ja
xor
add
add
mov
and
enter
leave
daa
inc
inc
mov
jns
jno
das
mov
dec
jmp
loope
push
add
fld
ret
mov
scas
inc
dec
cmp
xchg
push
push
dec
mov
add
add
into
sub
gs
push
and
jmp
dec
pop
sbb
dec
add
int
jne
inc
adc
push
add
add
sti
popa
or
jmp
aaa
je
int
repnz
scas
sub
dec
enter
add
mov
dec
shr
add
add
movs
cwde
adc
mov
add
test
inc
adc
stos
fwait
add
add
add
pop
pop
mov
add
jmp
inc
push
push
mov
mov
dec
push
not
js
add
add
repz
or
cld
pushf
out
jmp
nop
je
or
mov
dec
mov
dec
mov
cs
inc
out
add
add
cld
iret
sti
dec
cmc
hlt
cmp
xchg
test
sahf
adc
cmp
jmp
sbb
add
add
cmps
cmp
mov
jge
cld
adc
call
in
daa
cmc
or
ja
jmp
jle
pop
inc
in
dec
(bad)
into
xor
or
aam
inc
jp
in
mov
jne
rcl
test
add
adc
jno
and
ins
sub
test
push
mov
popf
das
lea
add
add
ret
cmps
mov
jle
ss
pushf
and
outs
mov
in
dec
and
aam
xchg
add
add
and
push
push
mov
sub
add
mov
aad
sub
fimul
add
add
pop
add
push
push
aas
sub
sub
fsub
sbb
lock
mov
cmc
add
add
mov
dec
outs
inc
pop
and
je
jne
xchg
ins
pop
xchg
inc
cld
sbb
add
add
jb
pop
fistp
adc
adc
bound
(bad)
xor
push
and
je
das
add
add
rcl
clc
pop
xchg
test
(bad)
cdq
fisubr
ror
cmp
push
push
cbw
dec
push
xor
add
add
jno
jns
inc
fsubr
xor
or
dec
or
mov
fisubr
xor
and
add
add
jmp
sub
mov
push
es
mul
push
pop
sbb
daa
aam
sar
imul
in
add
add
enter
mov
repz
xor
jne
ins
add
je
push
cld
cmps
jle
imul
mov
add
jecxz
je
sub
push
jo
mov
lock
xor
pop
and
add
add
cmp
ror
outs
cdq
jne
jno
xchg
pop
push
ret
out
mov
cdq
dec
hlt
jle
adc
add
add
mov
mov
jo
adc
and
cmp
jne
or
es
add
add
daa
xchg
push
imul
sar
inc
test
test
js
sub
call
sbb
push
xchg
ss
push
or
xchg
not
jns
xchg
mov
or
add
add
(bad)
into
mov
jo
lds
mov
jns
mov
je
xchg
jns
mov
add
add
pop
mov
in
lods
xor
movs
rcl
loopne
addr16
stos
pop
ja
inc
inc
adc
push
push
add
add
push
sub
sub
mov
sub
loop
pop
out
dec
repz
add
add
pop
dec
test
jne
mov
jmp
push
xor
xchg
and
jmp
mov
cmp
int3
fstp
shl
scas
je
jmp
jmp
inc
adc
fldenv
data16
add
hlt
rcl
mov
ds
or
movs
fstp
xor
pop
mov
jb
or
add
add
ficom
mov
shr
mov
cmp
inc
pop
mov
xchg
dec
mov
add
add
in
dec
and
retf
sbb
out
cdq
adc
test
repnz
push
lds
xchg
push
add
add
mov
adc
ret
mov
test
(bad)
loopne
cmp
push
ss
jno
add
add
add
and
inc
ja
pop
in
ins
sub
cmp
cmp
scas
call
add
add
popa
retf
mov
or
xchg
ins
inc
or
in
loope
nop
jae
dec
and
je
aam
add
add
jg
pop
add
push
push
out
push
push
jp
inc
imul
pop
jmp
add
add
in
ror
fstp
mov
push
adc
add
xchg
or
mov
add
add
push
add
cmp
cmp
retf
test
fdivr
push
pop
imul
imul
add
cmc
out
ins
js
mov
int3
mov
push
xor
mov
push
loope
call
add
add
dec
push
fnstsw
xor
aaa
dec
dec
jecxz
sub
call
or
add
add
and
scas
test
sahf
pop
sub
fild
pop
addr16
push
loope
je
and
inc
ins
loop
sti
add
add
jnp
mov
dec
outs
xchg
cmc
js
mov
popa
inc
push
cli
mov
dec
adc
jmp
inc
add
add
jmp
pop
cmp
xchg
cmps
scas
dec
adc
test
bound
add
add
inc
popf
mov
sbb
or
clc
ins
jecxz
xor
xchg
(bad)
in
add
add
popf
xlat
xchg
jo
add
mov
add
cmp
je
or
aam
add
add
adc
mov
mov
call
jge
xlat
in
pusha
repz
sbb
mov
sbb
or
or
or
mov
cmp
xor
jmp
sbb
and
repz
mov
add
add
repnz
call
shl
cmps
sub
mul
xor
cmp
mov
pop
mov
add
xchg
or
or
popf
gs
xor
lea
mov
xor
add
jne
bound
add
or
mov
movs
jb
scas
and
js
add
add
dec
je
push
idiv
adc
cmp
popf
vunpcklps
pop
test
add
cmp
mov
add
add
adc
adc
xchg
and
xor
adc
sbb
int
sub
add
add
sub
and
sbb
and
icebp
fucomp
dec
push
jnp
inc
je
or
lods
das
add
add
mov
and
inc
add
or
cli
les
shr
or
dec
sti
mov
dec
xchg
add
ret
sti
sub
addr16
hlt
xchg
sbb
mov
mov
dec
mov
and
add
add
or
push
fstp
mov
jno
dec
dec
mov
bndstx
in
add
add
leave
js
adc
(bad)
lds
push
dec
and
daa
cli
push
iret
or
add
add
les
jmp
and
les
out
stos
enter
arpl
jnp
sub
add
add
(bad)
daa
es
inc
test
inc
jo
fldcw
adc
xor
sub
ficomp
add
add
dec
stos
(bad)
jnp
add
lods
push
bswap
test
popa
(bad)
sti
dec
fsub
add
add
scas
adc
jns
sub
sahf
cld
ret
xchg
in
inc
and
jno
jmp
dec
hlt
enter
or
sbb
add
add
xchg
out
hlt
and
push
and
or
in
in
pop
jmp
push
add
pop
add
add
in
mov
repz
in
push
loop
pop
dec
cwde
or
ror
ja
add
push
inc
and
xchg
jne
movs
push
fbstp
in
neg
or
std
retf
jae
cmps
mov
and
add
add
dec
fld
pushf
jbe
dec
cmp
mov
sbb
pop
mov
test
add
dec
test
pop
aas
enter
hlt
out
mov
pop
push
push
cmp
stc
cmp
sbb
add
add
push
push
or
repz
xchg
mov
test
sbb
dec
lea
test
retf
add
add
push
rcl
mov
aam
jno
js
retf
mov
inc
or
gs
or
add
add
add
add
add
cmp
ret
add
add
dec
cmp
cmp
pop
stc
shl
add
add
fimul
scas
mov
in
mov
mov
mov
jae
daa
test
inc
adc
add
add
test
dec
xor
push
adc
mov
and
(bad)
jo
pop
push
pop
add
add
jmp
xchg
adc
xor
sub
arpl
xchg
or
int
mov
or
jne
add
add
into
xchg
stc
or
push
xchg
pop
shl
or
or
int3
or
xor
adc
add
add
and
lea
inc
add
out
sub
sub
xchg
push
and
add
add
lds
push
and
mov
xor
sbb
js
push
sti
pop
lahf
aas
ret
fwait
mov
clc
add
add
and
nop
push
and
test
retf
jg
aaa
sub
inc
jne
test
add
add
dec
mov
movs
inc
mov
push
data16
enter
adc
xchg
xor
jmp
enter
add
outs
xor
push
inc
cli
xchg
mov
and
inc
dec
loop
shl
xchg
xchg
dec
push
push
sbb
add
add
mov
mov
pop
lods
scas
and
stc
xchg
adc
repnz
add
add
xor
cmp
and
xlat
gs
sbb
xchg
or
call
fadd
add
add
ror
mov
call
sub
push
inc
in
push
or
add
add
adc
pop
std
jecxz
jmp
loopne
or
(bad)
aad
enter
sub
shl
push
mov
add
add
inc
push
repz
cmp
inc
mov
or
xlat
sub
movs
repz
add
add
sbb
and
xchg
iret
imul
jmp
sub
jle
sar
dec
repnz
hlt
add
adc
push
add
lea
lea
push
test
jmp
cmps
and
mov
repnz
add
add
mov
push
mov
test
cmp
xchg
cmp
int3
dec
xor
mov
add
mov
in
pop
jns
push
cli
das
jmp
(bad)
out
pop
adc
adc
add
add
or
jb
pop
xchg
push
dec
in
scas
cwde
aam
adc
sbb
xchg
dec
xchg
cld
xor
or
add
add
call
sub
aad
push
sbb
xor
push
into
ja
cmp
adc
jae
add
add
leave
std
push
lock
push
push
jno
mov
dec
add
cli
xchg
sub
out
sub
xchg
aaa
pop
add
add
push
pop
fiadd
enter
hlt
jmp
fdivr
mov
mov
add
add
jle
jns
inc
adc
(bad)
test
repnz
adc
and
cmp
mov
pop
adc
and
add
add
inc
cmp
adc
daa
or
dec
and
cmp
fst
out
cmp
leave
fs
jmp
mov
pop
test
adc
stos
jb
mov
mov
add
add
add
in
mov
shr
xor
std
aam
add
add
push
je
les
inc
add
add
dec
mov
fs
imul
push
add
pop
dec
xchg
ds
stc
clc
xchg
dec
add
add
mov
outs
xor
xor
test
dec
adc
ret
cmp
enter
jo
stos
pop
push
rcl
add
add
inc
rol
test
aad
pop
adc
mov
test
inc
(bad)
das
sbb
add
add
mov
dec
out
xor
mov
call
cmp
sub
retf
and
add
add
push
pop
aaa
test
dec
jo
add
fstp
jp
repnz
dec
arpl
and
loopne
add
add
dec
fsub
icebp
mov
popa
push
mov
icebp
dec
lock
adc
jmp
and
pop
std
call
popf
add
add
arpl
es
mov
jns
and
stc
xor
(bad)
out
mov
je
stc
jb
add
add
jmp
movs
inc
(bad)
jmp
xor
pop
sub
add
cmp
add
add
jle
push
push
js
xchg
popf
fist
(bad)
push
das
push
xor
push
div
pop
push
add
add
pop
nop
inc
fld
test
jb
sub
cdq
mov
fs
add
mov
inc
push
add
add
or
or
xor
add
mov
pop
sbb
test
add
cmp
mov
push
test
jo
and
cmp
push
pushf
dec
lds
sub
ins
test
add
inc
add
cmp
xchg
jns
jb
jo
inc
pop
push
in
cli
and
inc
mov
or
rcl
add
add
inc
lds
hlt
add
jbe
stos
lds
and
js
pop
jge
or
or
fcmove
jno
add
add
bound
mov
stos
std
fidiv
inc
dec
push
loop
ss
test
add
jg
cmp
aam
scas
clc
jmp
add
mov
arpl
ins
mov
pop
loope
add
add
inc
mov
cmc
mov
jmp
mov
nop
daa
and
movs
or
cmp
add
add
dec
add
mov
ret
cmc
pop
mov
popf
leave
add
shr
pop
pop
lea
add
xlat
cmp
sub
cs
in
add
or
rcl
mov
xor
add
mov
add
pop
stos
jecxz
jnp
in
add
test
mov
push
je
xchg
popf
jl
lea
adc
imul
add
ds
sub
jl
fiadd
pop
xchg
dec
outs
sub
adc
add
sub
push
not
and
dec
xchg
lea
push
fld
dec
hlt
test
pop
scas
and
add
add
into
inc
push
mov
rol
cmp
je
or
sbb
sar
cmps
xchg
xor
ins
and
add
add
or
sbb
popf
add
dec
sbb
add
test
or
add
or
in
adc
and
nop
mov
jo
in
pushf
sbb
stos
cmp
push
aaa
mov
sub
jge
sbb
lock
adc
cmp
ins
mov
pushf
sti
add
add
retf
push
cs
imul
dec
repz
icebp
xchg
push
sub
xchg
pop
or
lea
xor
add
add
sub
jl
pop
sub
dec
xchg
mov
js
mov
ja
bound
cwde
test
push
xor
xchg
sub
add
add
sub
movs
sub
inc
mov
pop
data16
imul
inc
and
add
add
adc
fisub
movs
sbb
push
add
mov
adc
shl
add
or
add
add
mov
(bad)
xchg
adc
and
add
add
leave
xchg
addr16
pop
test
ror
xchg
rcr
test
inc
or
sub
push
jl
jbe
push
js
js
xchg
sub
inc
xchg
or
jo
pcmpgtb
(bad)
cs
jne
mov
add
jnp
push
cmps
dec
mov
sub
inc
xlat
int3
adc
xor
sub
into
mov
xor
add
adc
ror
mov
dec
pop
loop
sbb
add
les
push
xchg
fstp
wrmsr
(bad)
or
dec
push
jne
add
in
jmp
cmp
add
add
sahf
xor
push
mov
shl
push
push
pop
adc
push
mov
ss
add
repz
jecxz
test
jbe
dec
push
push
push
mov
jg
pop
xlat
and
add
loopne
and
add
add
jl
mov
stos
or
call
cmps
push
sbb
aas
add
add
js
js
inc
test
and
inc
(bad)
out
leave
shr
das
mov
mov
movs
add
add
mov
mov
lea
dec
push
dec
dec
in
loope
addr16
mov
add
add
cmps
inc
test
fs
lahf
mov
push
push
bound
xchg
mov
mov
add
add
lods
ficom
cvtps2pd
or
and
inc
sbb
or
sub
(bad)
pop
mov
add
add
(bad)
jno
or
sti
test
pusha
es
mov
mov
push
(bad)
and
aaa
ror
lahf
fistp
add
add
dec
pop
movs
aas
pushf
xor
and
shl
inc
add
dec
pop
shl
test
adc
push
fwait
fs
jl
imul
adc
add
add
or
mov
retf
push
push
cli
cmp
dec
cli
mov
xor
or
test
add
add
mov
cmps
jge
(bad)
xchg
(bad)
(bad)
and
sbb
rcl
cli
xor
mov
gs
add
add
or
int
idiv
jno
daa
(bad)
ds
push
lods
ss
mov
popa
sub
mov
mov
add
add
sbb
out
mov
loope
loop
sar
nop
jo
test
add
add
movs
mov
pusha
test
cmp
jecxz
loop
shl
mov
sahf
add
add
add
cmp
(bad)
leave
add
jbe
inc
add
or
adc
stos
and
dec
lods
fadd
add
add
cmp
icebp
pop
sub
or
cmp
pop
pop
not
or
data16
add
add
gs
mov
scas
inc
movs
push
test
mov
push
pop
jne
das
and
add
add
adc
mov
mov
jb
mov
aas
cmovg
sub
test
add
and
mul
mov
arpl
dec
les
clc
pusha
fs
push
mov
add
jb
hlt
mov
jo
jmp
in
test
add
and
xchg
mov
add
add
and
shr
jl
mov
shl
nop
in
in
into
(bad)
dec
mov
push
mov
imul
(bad)
xchg
loope
mov
retf
and
lods
jmp
push
jne
inc
jae
icebp
xor
adc
add
add
mov
in
in
lahf
arpl
repnz
call
push
cdq
shl
jae
add
add
lock
mov
inc
in
loopne
mov
mov
mov
pop
gs
sub
movs
mov
add
ins
push
jnp
imul
push
sbb
jg
mov
lods
mov
or
pop
mov
or
add
add
test
cld
dec
pop
dec
sti
in
call
inc
dec
sbb
test
push
pop
in
add
add
xchg
dec
add
or
jae
fs
lods
adc
and
mov
xlat
adc
add
dec
loope
push
ret
push
inc
pushf
ss
inc
push
push
jmp
loop
dec
cmp
xor
add
jmp
or
add
mov
movs
ss
push
adc
stc
push
nop
jo
clc
rcr
in
push
je
mul
shl
mov
add
push
xchg
pushf
aas
loope
push
imul
lahf
and
add
add
cmp
add
jge
sti
repnz
mov
push
dec
mov
movs
mul
mov
add
add
fidivr
jo
(bad)
(bad)
sub
test
jae
jbe
popf
js
or
(bad)
sub
adc
pop
inc
push
cmp
pushf
movs
pop
pop
popf
fbstp
cmp
add
xor
fcom
and
cld
add
add
test
and
inc
cmp
pop
cmps
test
mov
in
cmps
clc
add
add
inc
and
xchg
jne
mov
test
test
xchg
adc
cmp
repnz
fadd
add
add
adc
cmps
jmp
mov
and
pop
pop
jbe
ror
jle
jo
sti
mov
add
dec
sar
out
mov
shr
bound
sub
imul
(bad)
repnz
clc
add
add
pop
nop
daa
jl
fadd
cmp
movs
aad
pop
adc
mov
push
loope
jns
dec
mov
add
add
and
(bad)
fild
mov
adc
test
inc
loop
test
fcomp
add
add
pop
mov
xor
sbb
adc
pop
repnz
inc
adc
xchg
add
add
add
loop
and
aam
lock
ret
sbb
adc
mov
adc
add
pop
jle
call
movs
xchg
and
sub
ror
mov
inc
mov
mov
add
add
inc
shr
or
push
pop
add
sahf
test
inc
int3
mov
add
add
dec
ror
or
sahf
mov
shl
push
push
lock
pop
pop
repnz
lods
aas
js
push
dec
add
add
or
(bad)
sar
add
add
pop
inc
scas
jp
lods
adc
add
lea
sbb
adc
cmp
daa
jne
and
mov
addr16
sbb
add
in
xor
daa
jbe
mov
cmp
jmp
dec
add
push
icebp
mov
push
jae
add
add
movs
ror
movs
or
sub
adc
shr
inc
fnstcw
mov
jno
fidivr
add
sar
jbe
inc
enter
mov
or
inc
addr16
add
add
xchg
push
inc
shl
les
pop
sub
fwait
pop
std
push
rcr
inc
cmp
sub
outs
push
mov
loope
mov
mov
cmp
sub
ja
xor
or
cmp
pusha
push
push
add
add
dec
push
xchg
mul
sub
add
popa
cmp
mov
daa
inc
pusha
push
sbb
add
add
outs
mov
dec
pop
pusha
push
mov
cli
shl
pushf
mov
fsub
mov
add
add
out
adc
mov
loope
iret
inc
shr
fadd
or
jnp
adc
cmp
add
add
je
lea
or
dec
jmp
jmp
add
daa
xor
add
add
mov
jo
xchg
jg
in
push
mov
jg
lock
xor
add
push
adc
adc
es
pop
aam
jmp
add
aaa
adc
adc
jmp
xchg
lds
add
add
or
jmp
shr
sub
pop
mov
stc
cdq
mov
add
add
adc
loop
je
sahf
sti
inc
sub
inc
lods
cmp
cmp
add
and
inc
xchg
xor
fadd
pop
mov
movs
add
add
bound
and
movs
jl
sbb
and
(bad)
retf
mov
or
jp
mov
fild
add
add
jbe
or
pop
and
mov
dec
out
mov
outs
or
pop
mov
jg
add
add
dec
inc
popa
mov
adc
push
jae
or
ja
inc
pop
loop
sbb
push
and
sub
in
add
add
jle
je
aam
push
xchg
mov
pop
call
adc
add
retf
add
outs
lahf
test
add
cmp
shr
pop
mov
gs
adc
hlt
sbb
jg
add
add
add
dec
inc
imul
push
and
or
or
fwait
ja
pusha
daa
aad
and
xor
add
push
add
(bad)
std
push
add
les
jne
in
or
(bad)
fs
add
mov
add
sar
loope
push
sbb
adc
adc
add
add
push
xchg
or
pop
xor
(bad)
cmp
imul
inc
dec
push
fisttp
(bad)
fsub
and
push
mov
aaa
shl
and
adc
jbe
loopne
lods
add
add
dec
dec
adc
fild
(bad)
push
jp
push
nop
pop
xor
ins
popf
movs
sub
lahf
and
add
add
dec
dec
or
jmp
jg
lods
pop
leave
add
call
jge
push
cli
mov
or
and
add
add
push
lods
and
enter
and
movs
xor
lock
mov
pop
mov
add
add
lahf
jmp
sbb
test
add
adc
inc
adc
add
add
dec
or
shl
lock
daa
inc
xchg
fist
inc
lock
adc
jns
dec
xchg
inc
add
add
sbb
jg
mul
(bad)
xchg
mov
pop
scas
or
fdiv
pop
hlt
cmps
arpl
add
adc
sbb
rcr
push
loop
pop
lods
shl
sbb
xchg
mov
add
add
pop
ins
adc
mov
cs
jecxz
mov
mov
bound
add
add
aam
enter
lods
call
rcr
dec
mov
jecxz
push
sahf
outs
icebp
add
add
jae
push
mov
pop
loope
sbb
inc
dec
inc
or
xchg
sub
xor
adc
mov
int3
shl
dec
call
dec
jge
adc
push
sub
sbb
or
add
add
dec
aad
push
mov
dec
dec
(bad)
cmp
scas
sub
cmps
dec
add
sbb
cmps
addr16
add
add
mov
lahf
and
pop
outs
and
mov
inc
out
adc
nop
(bad)
shl
add
add
outs
outs
mov
stos
pop
cdq
add
repnz
xchg
cmp
xchg
(bad)
xchg
les
xchg
repz
mov
xor
add
push
xchg
mov
mov
add
add
std
mov
(bad)
stc
jge
xchg
and
arpl
push
ds
or
mov
dec
das
(bad)
xchg
or
add
add
cmp
and
cs
push
mov
(bad)
add
sub
sbb
mov
add
jne
stos
popf
cmps
and
sbb
pop
mov
mov
xor
add
jne
lds
aad
push
cmp
leave
sub
xor
pop
dec
cdq
cld
push
popf
dec
and
(bad)
(bad)
int
add
add
jmp
push
fistp
stc
add
adc
push
popa
out
adc
jecxz
add
add
add
or
bnd
sub
inc
xor
je
jle
popa
sbb
cmp
sub
add
add
cwde
sbb
add
mov
stos
dec
xor
pop
mov
mov
lahf
fsin
out
push
and
add
add
clc
jge
inc
shl
repz
xor
xchg
call
jmp
stos
or
das
lea
jmp
(bad)
mov
mov
enter
movs
adc
cmp
inc
fidiv
or
add
add
inc
rcr
imul
inc
outs
sub
pushf
jne
add
clc
iret
sbb
mov
dec
repnz
add
jmp
dec
mov
and
ds
sub
sub
mov
arpl
movs
push
push
add
add
stos
mov
push
lods
pushf
sub
imul
popa
shl
push
and
xor
xchg
adc
clc
sub
lock
add
add
and
mov
push
sbb
add
shl
jb
lahf
pop
push
rcl
sub
repz
add
adc
test
cmp
or
mov
inc
je
cwde
stos
in
push
or
(bad)
push
mov
(bad)
mov
add
clc
loop
inc
mov
leave
outs
dec
add
call
je
repnz
jnp
jl
add
add
jne
pop
jo
inc
mov
das
cmp
cld
xor
cmp
sbb
sub
add
jns
sbb
jmp
adc
jp
cmp
xchg
das
cli
push
mov
add
add
sub
dec
mov
mov
ds
sar
xor
sub
test
add
cmp
push
pop
adc
sub
loopne
fld
movs
sub
sub
add
add
inc
inc
jnp
fisttp
sub
mov
das
popa
dec
mov
mov
dec
xlat
pop
sub
cdq
push
sub
xchg
add
add
lods
sub
mov
test
inc
push
stos
into
je
js
add
jne
nop
loop
add
add
push
ror
push
xchg
lea
and
push
push
outs
or
xor
add
add
push
out
mov
or
or
dec
add
(bad)
xchg
fwait
mov
jle
fs
es
pusha
add
add
and
(bad)
in
lahf
(bad)
cwde
not
scas
aam
leave
or
mov
or
add
add
add
test
clc
xor
popa
icebp
ins
add
enter
dec
and
xor
inc
pop
outs
sbb
add
add
clc
(bad)
scas
je
pop
gs
adc
jnp
pusha
and
les
and
push
and
cwde
add
add
das
mov
shl
ficom
pop
mov
lods
push
sar
mov
add
add
cmps
fadd
(bad)
cmc
retf
aas
icebp
and
enter
fimul
fs
pop
mov
and
xor
add
add
or
and
mov
and
push
fwait
icebp
das
xor
sar
add
push
sahf
mov
jmp
dec
add
jnp
(bad)
and
call
retf
add
add
fwait
pop
mov
movs
(bad)
adc
adc
mov
lock
stos
imul
push
jne
add
add
jge
mov
inc
jl
inc
mov
push
je
adc
dec
sub
add
add
add
inc
bound
pop
cmp
sti
mov
adc
jmp
fs
pushf
inc
(bad)
or
add
mov
retf
adc
sub
mov
mov
xchg
mov
xor
push
push
sbb
add
mov
push
pushf
fbld
inc
ins
mov
ret
sub
adc
add
add
sbb
mov
dec
in
pop
outs
mov
and
dec
cmp
add
add
add
rcl
inc
mov
mov
mov
das
add
lods
test
and
repnz
call
add
add
pop
(bad)
push
jmp
stos
and
and
inc
or
adc
sbb
sbb
push
add
add
push
and
pop
jmp
ret
test
and
inc
fdivp
mov
or
jnp
add
add
out
add
stos
mov
adc
repnz
dec
dec
mov
jg
imul
add
add
rcl
push
js
dec
in
push
mov
sub
or
out
nop
mov
ins
add
add
add
fadd
inc
jae
dec
jns
and
pop
mov
cmp
cmp
bound
aad
pop
add
add
or
jns
les
stc
in
pop
call
pop
mov
aad
inc
or
add
add
inc
retf
inc
mov
loopne
inc
push
imul
gs
dec
add
add
add
adc
popa
and
or
or
pop
fucomip
fwait
nop
jecxz
adc
rcl
add
add
jmp
push
inc
ds
add
xchg
aam
adc
mov
sub
je
paddb
add
add
fsub
xor
movs
imul
xor
outs
mov
daa
add
add
jae
fnstcw
and
sbb
mov
sub
mov
ja
ret
or
add
add
mov
pop
xor
test
cmps
xor
loope
or
and
xlat
and
add
add
das
dec
pop
dec
sbb
push
rcl
dec
mov
out
mov
dec
rol
test
cli
enter
add
add
ds
popf
mov
mov
sbb
jmp
aaa
add
lods
pushf
and
add
add
mov
call
pushf
gs
addr16
cmps
outs
add
mov
mov
add
out
add
inc
pop
je
int
loope
pop
sbb
test
sub
inc
das
inc
push
sub
add
add
cmp
daa
popf
jbe
inc
cmp
jne
ret
push
js
mov
sahf
push
cwde
jno
dec
add
add
xchg
pop
push
shl
add
int3
scas
repnz
je
or
adc
push
jo
add
add
aas
jne
nop
popf
fistp
sub
xor
out
cmp
cmps
lock
fadd
jae
scas
mov
add
(bad)
sbb
fdivr
ret
loope
add
arpl
cmp
pop
inc
loopne
test
add
add
xchg
aam
or
sbb
add
hlt
jne
popf
fistp
add
add
dec
and
push
mov
nop
in
(bad)
mov
and
jb
add
add
cmp
and
jae
xchg
push
mov
rcr
(bad)
cwde
cmp
jnp
push
test
inc
loop
add
add
mov
outs
sub
fcom
rol
xchg
mov
xchg
cli
add
add
in
dec
daa
sbb
stos
and
pop
cdq
in
jo
xchg
lahf
pop
jo
imul
hlt
xchg
xor
add
add
jne
and
and
cli
call
mov
stos
inc
fld
push
push
outs
xchg
mov
add
dec
push
mov
jmp
or
pop
push
imul
rol
outs
sub
cmc
push
ja
add
add
jns
push
test
xor
jmp
fbld
add
dec
xor
cmp
out
xor
add
mov
test
movs
pop
cmp
mov
inc
mov
and
xchg
pop
dec
lods
sbb
mov
repnz
add
add
in
(bad)
shl
unpckhps
enter
popf
hlt
add
aad
fs
add
add
inc
push
scas
sti
retf
test
and
pop
and
cmp
and
mov
mov
add
add
je
mov
nop
jle
adc
push
hlt
adc
push
(bad)
push
adc
push
mov
and
add
add
and
inc
pop
es
pop
push
mov
adc
add
dec
xor
loop
pop
pop
mov
stc
jne
mov
add
add
dec
and
ja
or
dec
dec
pop
jecxz
xchg
xor
jo
std
cs
add
add
pop
in
push
repz
nop
enter
es
cwde
and
ror
cs
add
add
into
push
push
repnz
jle
sbb
jmp
adc
inc
out
retf
sbb
add
add
xchg
adc
add
add
lea
cmp
push
add
inc
shl
inc
lock
jl
push
pop
adc
cmp
add
add
cmps
js
icebp
mov
(bad)
mov
add
xchg
std
xchg
push
aaa
sbb
jno
mov
add
dec
push
mov
adc
lds
into
jg
xor
dec
mov
mov
fnsave
dec
out
adc
(bad)
loope
jmp
dec
dec
and
retf
add
imul
add
ret
enter
push
sbb
mov
clc
mov
cwde
ins
and
jne
sub
add
add
test
imul
aam
call
sub
lds
cmp
test
push
sub
or
push
xchg
and
add
inc
push
lods
cmp
shl
enter
add
out
data16
add
jae
inc
les
fisttp
push
inc
xchg
enter
xchg
cmps
cwde
pop
xchg
add
add
loopne
adc
jbe
sub
sub
push
dec
push
inc
les
push
aam
loop
mov
add
add
pusha
and
cmp
mov
mov
or
call
aad
mov
add
add
lods
push
mov
jno
pop
jmp
std
pop
dec
mov
mov
adc
jmp
mov
aad
add
add
retf
scas
adc
xor
dec
xchg
xor
or
lea
add
mov
push
dec
sbb
or
retf
mov
push
dec
or
aas
dec
call
add
movs
push
mov
pop
movs
mov
(bad)
mov
mov
cmps
pop
test
dec
pop
int3
imul
mov
or
rep
sub
mov
js
stc
jle
jo
stc
xor
ins
add
add
add
cmp
arpl
fld
sub
imul
cdq
dec
loope
add
add
jge
or
mov
sub
loop
push
mov
inc
adc
es
jbe
adc
mov
add
rcl
adc
ja
call
icebp
stc
sub
jg
inc
push
push
movs
cli
call
add
add
and
int
pusha
out
adc
push
xlat
repnz
adc
or
add
cmps
mov
test
neg
iret
and
add
hlt
xchg
scas
pop
adc
das
sub
add
add
pop
lahf
push
cmp
add
pop
mov
xchg
popf
push
xchg
mov
push
adc
add
add
mov
movs
mov
addr16
push
pop
cdq
mov
aas
das
or
jae
out
fld
add
add
adc
pop
lock
cli
mov
out
mov
or
push
je
inc
add
add
mov
mov
in
int
repz
cmp
pop
pop
nop
lea
or
(bad)
sbb
add
add
dec
dec
inc
aas
xor
pusha
cwde
bt
adc
pop
sbb
add
add
add
dec
pop
xchg
rcr
mov
pop
add
push
int3
dec
es
retf
add
add
stos
fist
rcl
sbb
mov
xchg
xor
shr
out
popf
add
add
repz
jl
dec
cmp
push
pop
sbb
xchg
cwde
outs
mov
inc
add
add
add
xor
fbstp
cmp
add
or
clc
inc
dec
add
add
mov
in
sbb
mov
xchg
repnz
push
mov
jbe
fs
xor
scas
add
add
popa
cmp
and
push
adc
ret
imul
dec
and
lock
test
add
add
jg
int3
add
jge
push
std
in
add
and
cmp
lods
push
imul
or
retf
mov
add
add
out
pop
movs
mov
dec
dec
scas
adc
fwait
inc
xchg
cmp
jns
aas
add
add
test
stos
mov
dec
or
aam
inc
mov
xchg
stos
ror
push
xchg
push
daa
cmps
add
add
sbb
dec
sbb
je
stos
fisttp
lea
rcl
or
cmp
adc
add
add
mov
push
fs
xchg
xor
add
int
and
push
cmp
imul
push
jne
add
add
sbb
inc
stos
sub
ret
lds
push
in
sbb
jmp
dec
les
xor
test
inc
add
jg
test
xchg
rcl
adc
popa
add
add
fidiv
cli
push
sbb
push
adc
push
ja
or
test
inc
test
dec
add
add
and
hlt
imul
dec
sti
ret
movs
ss
or
push
sar
jmp
dec
or
lods
add
add
scas
xor
leave
out
dec
jae
mov
out
mov
pop
leave
stos
xor
jg
in
cwde
and
add
add
mov
test
rcr
and
and
and
lea
neg
xor
bound
mov
hlt
push
add
add
pop
rep
(bad)
or
add
jo
dec
mov
cmps
sbb
dec
adc
adc
and
xchg
add
add
jp
xor
fwait
push
adc
icebp
add
leave
repz
add
or
sub
mov
add
add
mov
jb
(bad)
mov
sbb
and
pop
movs
mov
pop
out
das
add
add
or
cdq
bound
xchg
retf
inc
pop
cwde
cmps
neg
and
fldcw
add
add
adc
lea
inc
adc
jnp
movs
add
mov
pop
mov
or
and
mov
add
popf
inc
or
jb
sahf
outs
das
das
jae
mov
xor
jnp
adc
add
add
leave
hlt
push
jb
push
movs
jne
movs
jnp
adc
inc
inc
scas
xchg
pop
(bad)
sub
ins
or
add
add
les
dec
mov
fisub
adc
inc
mov
add
add
add
loop
les
pop
in
cmp
and
push
lds
jmp
add
add
and
hlt
mov
out
or
in
test
push
jg
ins
sub
les
jno
add
add
pop
jmp
inc
sub
inc
mov
repnz
dec
into
mov
in
stos
imul
add
add
inc
imul
loopne
mov
inc
daa
mov
and
jmp
and
add
popa
dec
call
stos
cs
pop
out
cmp
pop
sahf
add
and
stc
imul
xor
add
sbb
mov
add
cmp
mov
mov
push
jmp
add
mov
and
pushf
popa
sub
mov
mov
fsubr
mov
pop
mov
add
cli
mov
sub
popa
pop
jg
sub
pushf
aas
xchg
js
mov
popf
pusha
add
add
inc
js
sub
pop
xchg
inc
jo
or
stos
jmp
adc
sbb
or
sub
add
add
push
imul
mov
inc
jns
or
jle
pushf
or
mov
add
add
lahf
jle
jno
dec
mov
cdq
aam
sbb
popf
je
sbb
add
add
add
or
sbb
push
sbb
bound
fadd
cvttps2pi
lock
push
jo
add
add
das
inc
mov
add
sub
test
cwde
stos
xor
add
and
mov
add
shl
ins
int
lea
daa
das
outs
pop
in
(bad)
push
mov
movs
add
add
in
cmp
xchg
sub
shr
aaa
jmp
daa
cmp
aas
ror
loopne
mov
add
mov
outs
mov
mov
dec
mov
stos
sub
int3
jne
xchg
shr
fs
jmp
mov
test
add
add
mov
pop
(bad)
sub
pop
cli
js
xchg
(bad)
loopne
sub
jg
pop
inc
shr
inc
add
add
sub
and
xchg
loopne
mov
enter
mov
in
push
jle
in
cmp
mov
add
sbb
xchg
sbb
xchg
jo
sbb
jb
iret
sbb
out
dec
jl
add
add
xchg
in
jmp
push
dec
pop
lock
ror
jle
mov
dec
adc
jne
mov
add
add
xchg
sbb
call
addr16
xor
ins
stos
ja
stc
in
xchg
repz
and
add
cmps
adc
jne
jne
dec
sar
jno
aam
xor
nop
dec
data16
mov
add
add
xchg
inc
loop
in
jne
push
xchg
xor
js
mov
test
mov
cmp
test
add
add
mov
sti
mov
dec
adc
dec
iret
jmp
jmp
add
add
add
int3
lahf
jae
in
cmp
xchg
cmc
adc
mov
push
js
stos
test
xchg
mov
shl
pop
add
add
xchg
xor
or
(bad)
(bad)
cld
pop
retf
cld
mov
repz
sub
icebp
mov
add
add
dec
popa
adc
dec
(bad)
mov
jmp
pop
adc
and
adc
call
add
mov
dec
pop
jecxz
hlt
retf
jmp
mov
and
pop
adc
add
add
xlat
and
jb
out
in
dec
test
or
mov
inc
mov
rcr
das
pop
out
jg
jns
add
add
jle
sbb
test
mov
mov
sahf
addr16
outs
movs
xchg
cmp
pop
lods
cmp
add
add
mov
ins
push
inc
mov
mov
and
sbb
cmps
(bad)
sti
or
xchg
jmp
xlat
add
add
or
or
(bad)
and
xchg
pop
mov
xor
jle
das
jge
cmp
adc
add
inc
xor
dec
dec
scas
xor
add
jmp
ja
cwde
adc
add
add
mov
dec
lods
mov
ds
jl
adc
xor
jb
test
pop
sahf
ja
lods
fwait
jmp
add
add
dec
test
push
fs
dec
jg
ds
and
dec
and
das
pop
ins
idiv
push
movs
mov
add
add
test
cmp
push
mov
pop
xchg
int3
mov
popa
and
pop
retf
jnp
cli
in
jmp
add
ins
sub
push
in
stos
pop
dec
add
adc
push
xchg
dec
add
add
push
cmps
mov
mov
je
lahf
sbb
cmp
push
repz
fs
xchg
into
dec
int3
imul
add
lds
cmp
cmc
jmp
push
lock
arpl
pop
adc
or
add
add
aas
fdivrp
sub
lock
inc
add
and
pop
and
xor
in
mov
enter
loop
dec
test
mov
enter
or
jge
test
nop
js
adc
add
add
cmp
dec
fst
dec
xlat
in
mov
inc
in
dec
push
jecxz
sbb
ret
and
fsub
add
gs
cmps
or
pop
mov
in
xor
add
add
push
fwait
sti
mov
icebp
xchg
inc
stos
out
pushf
pop
sub
in
mov
enter
int3
test
push
add
add
mov
add
je
cs
add
leave
jmp
mov
pop
mov
in
and
add
add
xor
mov
pusha
inc
adc
pop
xor
adc
xor
mov
cmp
add
add
xchg
mov
ret
shl
jmp
jne
scas
clc
lock
sub
cmp
add
add
xor
dec
sub
push
(bad)
push
jbe
xchg
adc
cwde
rcl
mov
sbb
add
add
and
in
mov
pushf
mov
jmp
fsub
ds
cmp
daa
add
add
push
cdq
retf
push
cmps
daa
push
push
(bad)
jmp
test
add
xor
mov
call
add
add
add
ss
mov
in
ins
cmp
and
paddsw
and
jns
add
add
xchg
pop
fdivr
or
mov
ror
sub
mov
(bad)
aaa
jmp
add
add
arpl
add
mov
pop
adc
add
xor
adc
fnclex
test
fcmovnu
retf
add
push
add
fmulp
and
std
ret
imul
sbb
leave
cs
add
add
sub
or
push
cmp
and
ror
sbb
pop
sub
fistp
add
xchg
repz
mov
in
fwait
pop
mov
sub
sbb
in
fadd
add
add
jg
js
jne
xor
retf
mov
cmp
sbb
jne
or
add
add
call
jg
pop
mov
and
mov
dec
loope
and
outs
inc
aaa
fs
push
inc
and
sub
add
add
sar
push
test
adc
clc
ins
movs
in
push
push
pusha
adc
push
or
mov
add
xor
and
and
mov
pop
inc
add
neg
fsub
push
and
loopne
add
add
inc
(bad)
mov
idiv
or
mov
push
retf
mov
dec
add
add
or
fsub
jle
scas
gs
inc
and
pop
push
stos
in
sbb
push
push
pop
daa
daa
push
ret
in
add
add
in
sbb
sbb
adc
popa
sti
xor
popa
xor
or
and
sub
jb
add
add
sbb
(bad)
cs
sub
mov
les
jge
jg
sbb
dec
dec
stos
add
add
test
cdq
fsub
cmp
inc
jp
and
sub
out
mov
or
add
retf
jle
jmp
in
mov
adc
sub
adc
das
mov
lahf
add
add
inc
push
mov
inc
cmc
movs
mov
push
inc
sbb
or
dec
pop
addr16
repnz
aad
push
add
add
and
or
inc
sub
dec
test
inc
adc
adc
dec
xchg
sub
inc
adc
pop
test
add
or
mov
div
int
nop
ror
dec
lods
test
repnz
adc
add
add
lea
lahf
adc
or
or
cmp
jmp
cld
cli
clc
inc
dec
call
add
add
or
add
test
or
mov
mov
ror
dec
add
loope
add
add
xor
jmp
and
in
or
xchg
adc
loope
pop
inc
enter
dec
cmp
add
add
nop
(bad)
push
fwait
push
imul
xchg
out
xchg
dec
cs
xchg
pop
pop
push
out
sub
add
add
dec
xchg
cmc
xchg
sub
inc
lock
mov
das
inc
push
lds
lock
add
sahf
adc
(bad)
push
mov
push
sub
call
(bad)
movs
pop
xor
add
add
into
loope
loop
jmp
dec
enter
aad
add
cmc
jmp
and
adc
cmp
push
stc
mov
xor
mov
ja
outs
mov
dec
orps
xor
push
push
(bad)
push
sti
repnz
ins
xor
pusha
stos
dec
hlt
push
outs
or
jmp
add
or
retf
cdq
pop
inc
pop
movs
inc
aad
mov
add
retf
push
push
dec
mov
ror
and
cmp
add
add
jae
outs
fsub
enter
cld
ffreep
or
mov
cmc
jne
add
add
xchg
(bad)
fmul
mov
dec
push
les
mov
ins
inc
xlat
daa
mov
mov
jmp
or
fild
add
add
pop
adc
sub
push
sub
push
xchg
loope
mov
cli
lea
add
add
cmp
and
icebp
rcl
pop
ror
cmp
mov
and
push
sub
add
add
aam
mov
and
sub
popa
inc
pop
mov
sbb
inc
sub
or
add
add
inc
cdq
addr16
pop
cmp
mov
cld
sbb
jp
xchg
push
inc
les
lods
dec
imul
movs
sbb
xchg
mov
clc
inc
cdq
sbb
mov
push
or
push
push
mov
fwait
shr
lock
add
ret
aad
add
(bad)
pop
inc
xor
or
dec
rol
adc
enter
aas
cmc
mov
add
add
pop
test
lods
or
mov
xor
xlat
mov
jecxz
movs
adc
repnz
sbb
pop
jp
popf
les
dec
fdivr
mov
sbb
inc
mov
and
or
add
add
push
dec
nop
jnp
sub
cmps
push
imul
and
stos
pop
xchg
out
inc
cmc
lock
adc
add
add
iret
popa
loop
div
and
or
mov
jle
adc
fdiv
aad
lods
add
add
in
push
xor
pop
push
cmp
xor
cmps
in
or
xchg
pusha
and
xchg
pop
imul
add
add
loop
jecxz
and
sub
in
xor
shl
(bad)
mov
cmps
sti
test
cmp
add
add
mov
xchg
cmovb
fst
add
addr16
pop
cld
test
mov
push
mov
add
sbb
xchg
mov
jnp
dec
stos
cmp
retf
mov
jmp
add
mov
add
add
retf
push
in
push
or
dec
pop
jnp
ror
jmp
jmp
(bad)
add
add
scas
xor
or
or
movs
adc
nop
or
or
or
sbb
jl
add
add
sbb
add
cmp
mov
into
or
pop
adc
jge
and
sub
add
add
sti
fs
sbb
push
stos
mov
bnd
dec
loopne
push
dec
jae
xchg
add
add
push
push
lahf
jae
leave
jge
mov
pop
xchg
and
pop
or
push
push
(bad)
jp
add
add
xchg
mov
cli
mov
jne
imul
push
push
lds
add
add
scas
sub
imul
or
cmp
repnz
fist
pop
or
push
movs
mov
repnz
hlt
loope
cmps
jmp
push
je
scas
sahf
sbb
cld
jp
or
mov
ja
jmp
cmps
test
sub
cmp
inc
inc
xchg
inc
add
add
mov
hlt
call
xchg
std
call
dec
rcl
xchg
test
pop
mov
add
sub
adc
xchg
pop
movlhps
or
pop
out
fs
mov
fld
add
add
rcl
push
aam
je
ins
retf
or
retf
inc
lahf
pop
add
add
rcl
retf
inc
pop
out
adc
cmp
repnz
mov
or
les
imul
and
retf
add
add
cwde
push
inc
mov
aam
push
mov
push
sub
add
add
mov
mov
mov
sub
aas
in
xor
push
stos
inc
dec
dec
mov
add
aam
fistp
aam
dec
retf
(bad)
(bad)
jmp
pushf
inc
push
(bad)
push
cmp
add
je
pop
push
cld
popf
push
scas
dec
push
stos
mov
mov
cld
mov
pop
es
add
add
push
jmp
dec
dec
(bad)
and
cmp
out
push
lds
dec
fdiv
cmps
popf
popf
push
aaa
add
add
nop
mov
retf
sbb
(bad)
mov
iret
xchg
retf
inc
loop
or
adc
add
add
shr
mov
retf
jno
pop
xchg
lahf
das
jle
push
mov
ret
adc
les
add
add
scas
mov
cmc
sub
push
jns
scas
dec
and
loopne
inc
and
rcr
add
add
cdq
pop
fs
add
push
das
or
ror
and
je
fsub
outs
sbb
add
sahf
lahf
hlt
scas
add
jmp
scas
jmp
das
mov
xchg
sti
mov
mul
std
push
push
add
add
loopne
push
loopne
or
xlat
push
mov
dec
xor
daa
dec
jmp
sbb
add
add
ja
gs
xchg
sub
scas
jg
mov
mov
or
jmp
lock
jmp
jo
call
add
pusha
inc
or
and
mov
daa
pop
mov
adc
fidivr
push
mov
and
add
add
lods
push
fistp
repz
or
jge
scas
adc
or
icebp
lock
pop
stc
add
add
add
in
cmc
adc
adc
xchg
add
mov
mov
sti
or
xchg
mov
cmps
mov
aas
xchg
jl
push
cmp
mov
clc
jl
xchg
div
inc
les
clc
pop
hlt
mov
add
cmp
repnz
xchg
repnz
push
mov
jne
or
mov
(bad)
add
add
pop
shl
rcr
add
dec
mov
das
mov
xor
add
add
(bad)
mov
jl
rcl
sbb
adc
push
jne
lods
test
inc
mov
push
retf
add
add
fwait
shr
call
xchg
fwait
shr
sub
dec
push
shl
add
imul
repnz
cmovp
add
add
ja
dec
or
jbe
adc
and
adc
mov
or
out
add
add
sub
dec
mov
fisttp
xlat
fiadd
test
dec
dec
add
add
stos
sub
sbb
xchg
daa
aaa
in
jmp
sar
fstp
adc
adc
xchg
sahf
add
add
fist
or
or
movs
stos
mov
cmc
out
mov
sub
sub
add
add
mov
lock
popa
mov
pop
cmp
jle
call
add
pop
xchg
cmps
je
and
and
pop
jo
and
sbb
add
fbld
mov
ret
or
inc
jge
movs
sub
pop
add
add
movs
out
int
push
in
cmp
dec
xor
jle
sbb
adc
add
add
inc
mov
mov
(bad)
scas
push
enter
add
push
sbb
es
add
add
and
mov
and
jb
pop
xchg
mov
cmp
pop
sti
bnd
gs
sub
inc
add
add
fistp
es
in
sbb
push
push
gs
ds
ret
ins
mov
add
add
inc
mov
ret
adc
or
inc
and
xor
xchg
pop
add
add
add
jmp
fst
in
push
sub
push
jnp
mov
xlat
jmp
lock
dec
call
test
push
add
add
inc
daa
push
jbe
les
add
jmp
jp
ret
(bad)
jle
mov
adc
add
add
idiv
call
lock
jno
test
sbb
adc
adc
sbb
add
and
mov
sbb
bound
ja
xor
lods
enter
imul
jne
jp
jbe
shr
lods
gs
pushf
setp
push
test
rcr
rol
add
add
jns
leave
pop
jl
and
mov
add
repnz
(bad)
sti
mov
int3
pop
cld
stos
jge
sbb
add
add
dec
mov
mov
adc
stc
inc
out
pop
jg
sahf
daa
nop
mov
push
jecxz
add
add
mov
mov
jge
pop
stos
push
mov
pop
dec
(bad)
mov
mov
or
pop
xor
push
imul
pop
cld
push
add
add
les
fist
stos
mov
push
xlat
jl
out
mov
cmps
mov
mov
jmp
add
add
aad
mov
dec
push
push
or
in
shr
sub
xchg
sub
sub
add
sub
test
push
add
add
xchg
bound
mov
add
mov
or
inc
jo
xchg
push
add
add
in
push
je
clc
jbe
cmp
cmp
mov
adc
dec
push
in
(bad)
das
out
add
add
mov
aam
imul
push
and
sub
cmp
add
lea
push
movs
and
pop
and
mov
fistp
adc
inc
or
cmp
add
add
fiadd
add
daa
push
frstor
in
(bad)
adc
add
add
into
inc
lea
les
adc
push
test
ds
push
pop
sbb
les
add
add
mov
adc
mov
push
jge
mov
lods
and
test
in
rcr
test
sub
shl
inc
jno
inc
push
ror
test
(bad)
mov
test
add
fist
and
and
xchg
jl
lock
push
aad
push
test
xor
push
cmp
pop
add
add
mov
data16
sub
mul
les
out
mov
shr
popf
or
add
mov
sub
mov
aam
ss
xor
push
xchg
mov
or
lds
add
add
mov
(bad)
adc
inc
add
loopne
and
in
test
jecxz
cmp
pop
inc
pop
in
add
add
sti
enter
inc
sbb
pusha
adc
enter
add
mov
aam
aam
add
add
push
lods
jnp
add
xchg
popf
ret
and
call
movs
add
add
mov
push
gs
mov
and
add
xchg
dec
shr
add
adc
add
daa
xchg
mov
stc
cmp
(bad)
(bad)
dec
xor
xchg
scas
loope
mov
inc
push
scas
or
push
mov
jmp
xchg
and
(bad)
int3
inc
int3
dec
mov
mov
and
stos
sar
add
add
or
or
outs
das
repnz
and
cld
enter
and
mov
add
add
xchg
les
dec
mov
shl
xchg
(bad)
nop
jle
rol
and
add
add
cmp
mov
nop
shr
nop
pop
push
pop
sbb
cmp
hlt
jmp
mov
add
retf
jmp
sahf
dec
mov
lods
aad
stc
dec
and
retf
enter
sbb
add
add
mul
mov
movs
mov
fld
mov
(bad)
pop
xchg
out
inc
dec
add
add
add
iret
ror
adc
jmp
in
dec
xor
sub
std
mov
sbb
add
add
sahf
push
enter
inc
clc
ret
add
mov
add
stc
push
add
add
jge
(bad)
pop
ret
jle
loop
test
scas
int
aas
out
sbb
push
call
and
mov
mov
add
add
mov
dec
out
jne
inc
inc
inc
jne
dec
sub
adc
cmp
sub
jne
adc
add
add
test
xchg
data16
dec
nop
jmp
xor
nop
dec
pop
into
enter
cs
add
mov
mov
jbe
jnp
cmp
mov
jp
fsubr
mov
add
retf
fstp
(bad)
fst
and
movs
sahf
pop
mov
xor
sub
jge
add
add
and
pop
bound
lea
jl
shr
mov
jl
jecxz
ficomp
mov
add
jb
pop
pop
sar
sbb
hlt
mov
mov
repz
sbb
add
repz
scas
adc
outs
cmc
cs
inc
and
adc
sar
ss
hlt
push
pop
iret
add
add
pop
mov
mov
stos
int3
fdiv
enter
mov
mov
sub
sbb
add
add
enter
sbb
cld
jmp
xchg
in
aad
push
jo
mov
add
add
aas
cmp
bound
pop
dec
xchg
jmp
xchg
or
ror
cs
cmp
int3
sub
xchg
pop
xor
add
add
mov
leave
lods
(bad)
ss
xor
dec
sub
jne
test
add
push
add
add
sub
inc
adc
lock
daa
pop
call
stc
sti
test
jmp
nop
dec
add
add
dec
inc
adc
or
adc
inc
sbb
xchg
inc
iret
loope
adc
jmp
pop
leave
stos
add
add
mov
test
cmp
stos
ret
rcr
mov
test
mov
add
add
inc
push
scas
mov
adc
ds
xchg
scas
xor
mov
arpl
jbe
adc
add
add
jmp
fwait
jbe
xchg
or
andnps
and
or
and
add
inc
push
add
or
adc
data16
adc
pop
mov
inc
mov
add
add
dec
cmp
ss
lea
retf
imul
mul
fs
add
add
dec
pusha
pop
or
mov
or
or
sub
inc
jb
test
inc
inc
sub
rcl
add
add
xchg
lock
mov
cwde
and
xchg
or
mov
push
lea
sti
mov
add
add
pop
dec
cmp
or
push
gs
std
sbb
xor
push
cmp
dec
imul
xchg
pop
add
add
out
ret
inc
daa
sbb
icebp
inc
dec
inc
push
cmp
adc
adc
push
jecxz
jmp
add
add
call
or
or
jge
loopne
xlat
xchg
add
adc
dec
mov
and
add
add
stos
shr
xchg
mov
mov
xchg
fdiv
outs
rcr
(bad)
std
add
add
lods
shr
pushw
lods
test
mov
ins
and
cmp
cmc
adc
add
add
movs
ret
(bad)
jbe
outs
xor
jne
mov
enter
xchg
push
mov
push
add
add
dec
mov
imul
xor
xchg
retf
not
dec
loope
out
fstp
xchg
clc
xor
add
add
cdq
pusha
and
(bad)
push
clc
call
jae
pop
sbb
jl
mov
daa
fcom
mov
dec
mov
add
add
pop
xchg
push
xor
and
add
setb
fisttp
ficomp
adc
and
pop
sub
and
push
rol
adc
pop
fisubr
cdq
cmp
add
add
mov
popf
leave
adc
mov
and
clc
out
mov
mov
repnz
add
out
push
mul
sub
aad
mov
xor
stos
ss
sub
add
add
or
sub
pop
in
(bad)
mov
push
and
sub
test
or
add
nop
jae
dec
xchg
inc
cwde
push
call
movs
sti
mov
adc
add
add
push
mov
adc
ret
sub
rcr
mov
jmp
add
add
xor
cmp
in
inc
jnp
test
cli
sbb
adc
loop
xchg
adc
mov
adc
scas
dec
push
pop
iret
mov
stc
cmp
xor
xor
cmp
(bad)
add
add
pop
(bad)
test
fdivr
add
mov
icebp
cld
inc
cmp
pop
test
test
pusha
add
add
jge
pushf
mov
lods
dec
not
push
loopne
stos
fs
jle
pusha
and
pop
adc
lock
add
add
mov
das
(bad)
(bad)
retf
push
xor
lock
cmp
jecxz
ins
cmp
jne
push
xchg
jmp
add
add
cmp
stc
mov
sbb
ror
(bad)
push
imul
ss
add
add
and
and
sti
and
push
push
loope
adc
xor
push
push
mov
add
cmp
sub
inc
dec
repz
xchg
cwde
or
xchg
push
or
mov
xor
add
popa
or
add
sar
xchg
data16
jp
adc
push
push
and
(bad)
data16
add
add
sub
xchg
mov
push
cmp
push
and
scas
push
aam
enter
(bad)
push
nop
sbb
shl
add
jmp
inc
call
out
xor
and
or
xor
out
sbb
push
out
push
dec
cmp
xchg
or
out
sub
nop
xchg
push
sbb
push
adc
nop
jmp
and
cmp
das
js
scas
add
add
icebp
xchg
mov
sbb
jge
add
jle
loopne
scas
ins
cmp
sar
mov
or
pusha
sbb
push
add
add
(bad)
fcomp
test
test
repnz
jne
push
sbb
sar
jnp
pop
or
add
add
rcr
dec
loop
pop
ret
movs
inc
push
add
push
mov
and
mov
add
stos
out
imul
or
movs
and
jmp
jl
stc
enter
bound
add
add
ficomp
std
gs
xchg
mov
jl
mov
mov
dec
and
sub
add
jge
jg
jne
push
test
or
call
jne
loop
cdq
stos
dec
test
sub
add
add
int3
mov
xchg
in
inc
cmp
addr16
push
add
scas
xor
out
call
add
mov
mov
inc
xor
popa
pusha
pop
mov
push
sysenter
add
xor
mov
add
setge
jnp
scas
dec
push
int3
cmc
jae
rcr
push
shl
dec
sbb
xor
jg
add
add
mov
stos
(bad)
repnz
xchg
sub
sti
pop
retf
lock
jnp
mov
cwde
lods
pop
xor
add
mov
lods
xchg
loop
add
push
and
and
loopne
nop
inc
or
lods
add
add
sub
push
(bad)
sahf
sbb
mov
in
mov
(bad)
nop
int3
or
pop
leave
stc
loopne
sub
pop
idiv
dec
add
add
mov
addr16
add
pop
mov
fnstsw
movs
scas
fbld
imul
jns
outs
add
add
inc
call
shl
jno
inc
fs
push
jns
sti
mov
mov
inc
add
add
xor
(bad)
(bad)
stc
add
stc
sbb
mov
dec
adc
sbb
pusha
into
inc
mov
add
add
and
mov
pop
sbb
sahf
mov
ins
sub
mov
in
in
xor
add
push
xchg
leave
adc
nop
shl
rcr
cmp
mov
add
test
test
in
mov
add
add
sbb
in
mov
sub
mov
int3
push
xchg
push
add
push
xlat
xlat
push
add
add
(bad)
(bad)
xor
in
sbb
or
cli
repnz
sub
dec
(bad)
push
leave
jg
jnp
add
add
lea
lods
push
xchg
add
mov
retf
push
adc
mov
and
push
sahf
or
or
add
add
loope
or
(bad)
in
arpl
enter
out
xchg
repnz
xchg
inc
or
mov
not
mov
inc
jo
adc
(bad)
mov
and
add
inc
push
call
cmp
add
add
stos
xor
adc
xor
push
dec
sub
add
sub
mov
add
and
cwde
out
sub
into
or
enter
push
cmp
fmul
and
add
add
mov
fistp
push
dec
pushf
pop
mov
jb
addr16
les
and
scas
jb
add
add
dec
dec
inc
cdq
pop
xor
fwait
adc
and
add
sub
cs
pop
xor
std
xchg
mov
mov
mov
lea
or
sub
dec
push
or
add
add
and
(bad)
enter
sbb
ja
mov
jmp
and
shr
dec
add
add
xor
nop
enter
popa
pusha
repnz
adc
js
addr16
sub
jg
mov
add
add
test
ret
nop
inc
in
sti
test
fs
xchg
jmp
xchg
mov
movs
mov
fwait
cmp
inc
fisub
leave
out
std
sbb
test
pop
pushf
push
cmp
aaa
movaps
jmp
or
mov
mov
or
push
sub
and
push
jl
push
adc
add
add
push
dec
and
pop
out
and
xchg
and
outs
std
sub
pop
dec
and
xchg
mov
add
dec
pop
in
imul
jle
imul
mov
inc
mov
into
inc
cmp
jne
or
add
add
adc
mov
push
or
cmp
ins
adc
jae
ja
jge
iret
add
add
mov
test
hlt
jmp
or
pop
cmp
push
fild
nop
add
cmp
add
call
loope
cmp
movs
jmp
and
mov
add
xor
pop
push
add
add
data16
or
out
mov
push
(bad)
cmp
pop
xchg
test
or
out
jbe
adc
mul
sub
add
add
cld
sar
fs
jmp
cmp
test
push
loop
pop
int3
clc
push
xchg
jo
sbb
add
add
aad
test
pop
mov
retf
pop
cmps
out
cld
sti
lea
sub
dec
cli
popf
shl
sti
mov
movs
mov
add
xchg
rcr
pop
lock
add
add
pop
hlt
cli
fldcw
add
jmp
test
imul
pop
fldenv
pop
add
add
push
lahf
sub
popa
mov
or
fidiv
dec
shr
int
mov
add
inc
mov
gs
adc
mov
data16
and
lea
add
add
inc
adc
sub
fldcw
pushf
repz
xor
mov
loop
mov
out
add
add
fdivr
dec
movs
push
pop
sar
and
test
movs
in
sbb
xchg
les
mov
fisubr
add
add
mov
dec
test
xchg
sbb
xchg
add
test
stos
sub
adc
or
mov
dec
(bad)
into
push
pop
ins
(bad)
cmp
mov
or
sldt
add
mov
adc
add
or
call
test
push
push
add
add
inc
fbstp
or
arpl
push
push
cmp
gs
adc
sub
clc
test
inc
xchg
add
add
or
xor
test
push
test
sub
sub
and
stc
mov
add
and
or
hlt
stos
push
imul
jge
xchg
lods
popa
pop
rcr
or
push
fild
add
add
fwait
jmp
add
mov
outs
(bad)
pusha
(bad)
dec
repnz
xor
cmps
mov
add
mov
mov
push
out
enter
stc
(bad)
mov
fnstenv
mov
bnd
lock
add
add
dec
sub
or
scas
sub
pop
sub
lods
xor
pushf
inc
(bad)
push
sub
xchg
add
add
push
xor
pop
adc
sbb
test
fisubr
add
push
adc
push
add
add
sti
ss
dec
cli
in
nop
mov
lea
push
mov
add
or
add
add
jne
push
mov
sub
inc
(bad)
cmps
xor
mov
push
mov
xchg
nop
mov
mov
xor
push
pslld
sub
push
out
dec
retf
add
adc
xchg
adc
add
add
enter
leave
or
mov
mov
inc
retf
xor
les
sbb
add
add
and
cmp
or
ja
xor
push
pushf
cwde
out
push
mov
mov
sbb
call
add
push
mov
xchg
push
jns
push
jbe
push
inc
xor
mov
jae
or
add
les
add
add
repz
inc
or
sub
jo
aaa
mov
(bad)
jb
imul
add
add
test
mov
(bad)
pop
pop
dec
push
push
lds
mov
cs
mov
adc
push
les
add
add
out
(bad)
sbb
mov
sub
test
jns
or
in
test
cmp
add
add
mov
das
call
test
adc
lock
jmp
add
dec
cwde
scas
mov
jmp
mov
xchg
pop
jne
repnz
cwde
jne
and
nop
sbb
pop
push
add
add
cli
pop
xchg
aam
dec
mov
or
sub
xchg
xchg
push
xor
(bad)
jns
outs
test
add
add
add
es
imul
xchg
pop
rcl
clc
popf
bound
daa
pop
dec
scas
test
add
add
fdivr
pop
in
cmp
cdq
pop
repnz
sub
fild
les
enter
adc
add
add
inc
mov
test
out
mov
push
movs
push
imul
lahf
mov
mov
add
add
jae
pop
out
retf
enter
jmp
mov
sahf
mov
and
inc
jns
mov
add
add
movs
mov
(bad)
cld
add
jo
mov
or
jge
and
dec
mov
add
add
test
mov
xchg
adc
stc
push
push
add
jb
mov
outs
add
add
mov
mov
in
push
sub
inc
je
jg
test
stos
sbb
or
push
mov
mov
pushf
lock
rcr
pop
inc
inc
outs
cmps
pop
and
add
cmp
jmp
add
add
sbb
inc
mov
inc
ja
xchg
enter
jb
sbb
push
(bad)
call
add
xchg
and
or
lahf
or
inc
nop
xlat
and
test
push
std
dec
add
add
mov
mov
pop
dec
mov
inc
es
push
adc
mov
rol
add
add
pop
pop
mov
dec
inc
or
loop
xor
sub
les
xor
add
dec
(bad)
mov
clc
dec
mov
push
test
(bad)
cmp
or
mov
mov
pop
mov
adc
xchg
cmp
and
dec
jge
test
add
add
cmp
sbb
push
sub
sbb
outs
mov
push
and
adc
stos
add
add
mov
sti
fs
call
mov
push
fdivr
jns
or
add
add
sub
call
ins
jmp
xor
icebp
test
pushf
test
mov
add
add
ror
or
stc
add
ins
pop
stos
and
fcmovnb
push
aas
repnz
lock
add
jmp
xor
fadd
inc
in
repz
and
or
retf
cmp
test
add
add
add
call
in
pushf
std
add
push
mov
dec
cld
xchg
mov
add
add
scas
cmc
rcr
add
jb
push
xchg
dec
aas
scas
aaa
mov
scas
sar
xor
add
sub
loopne
jmp
movs
push
dec
xlat
inc
daa
sub
cwde
fs
xor
sbb
add
xchg
dec
jb
push
pop
sub
lea
into
dec
outs
mov
dec
adc
in
mov
jnp
adc
inc
add
add
test
jecxz
nop
loope
mov
push
mov
and
test
popf
push
cmp
xor
add
add
retf
out
ror
jmp
jmp
push
jne
hlt
call
add
cmp
in
arpl
dec
cmps
add
add
adc
fcomip
scas
ins
mov
and
fmul
or
xor
adc
add
movs
and
and
test
inc
(bad)
daa
imul
dec
rcl
or
jl
call
inc
and
push
jno
add
add
dec
retf
nop
sti
cmp
std
mov
push
mov
add
jmp
dec
sub
or
add
add
fst
dec
pop
sar
enter
cdq
ret
enterw
(bad)
inc
clc
and
add
add
movs
ror
pop
or
cmp
imul
jp
xor
or
test
add
add
cld
sub
and
outs
mov
in
fst
sbb
pop
push
movzx
cmp
out
cmp
add
add
(bad)
aad
ja
and
fimul
loope
iret
stc
add
test
pop
mov
lock
in
jle
add
add
jno
ss
sub
xor
cmp
dec
hlt
sti
lds
loopne
jne
add
add
dec
fsubr
mov
inc
jp
cs
fsub
fisub
xchg
dec
daa
daa
call
add
add
sub
int
adc
test
sbb
xor
aas
lock
inc
xchg
cld
nop
xchg
add
add
inc
sar
sbb
mov
or
sbb
cdq
aaa
rol
xchg
ret
add
add
sub
loop
in
in
sti
mov
inc
sub
iret
push
or
cmp
outs
jno
add
add
sub
ins
and
inc
add
mov
mov
ss
in
fs
pop
xchg
and
jg
add
add
push
pop
jl
addr16
push
mov
jae
cmp
xor
mov
stc
adc
cmp
push
(bad)
jmp
add
add
mov
call
mov
mov
sti
jl
or
push
sub
xchg
loopne
repnz
add
call
outs
lods
ret
imul
nop
inc
movzx
inc
loop
cmp
es
movs
adc
add
or
mov
xchg
cld
movs
mov
sub
outs
inc
jae
add
add
adc
push
sbb
cmp
retf
cdq
pop
into
pop
dec
push
mov
or
push
int
add
add
sub
jbe
or
into
lods
xchg
push
gs
(bad)
mov
ds
xchg
imul
inc
lods
add
add
or
enter
shl
out
and
push
mov
ficom
rcl
out
hlt
pushf
jbe
push
aaa
add
add
imul
mov
jp
push
aaa
and
add
sbb
mov
xchg
add
add
je
scas
push
aaa
mov
xchg
jp
cmp
fs
and
aad
dec
sub
push
adc
mov
daa
add
add
push
imul
sub
push
mov
and
xchg
sub
mov
add
add
pop
stc
mov
adc
adc
mov
add
push
aas
cli
cmp
je
adc
push
das
mov
and
dec
bound
outs
jg
arpl
test
sub
jmp
or
fbstp
inc
xchg
sub
retf
add
(bad)
sub
clc
inc
adc
cld
cmp
sub
les
add
sub
or
dec
jo
add
add
ja
ror
mov
dec
mov
mov
leave
mov
or
movs
nop
add
add
ss
xor
jmp
jmp
jg
cwde
inc
das
sub
inc
ds
xchg
fistp
add
sub
push
movzx
jecxz
jge
mov
jnp
xchg
es
ja
mov
adc
pop
and
data16
or
retf
fisubr
and
add
clc
dec
xchg
add
add
jg
jno
sub
sbb
or
jae
jmp
mov
or
(bad)
jo
add
add
popf
inc
popa
imul
mov
jecxz
hlt
call
(bad)
push
in
out
lods
cmp
add
add
mov
xchg
scas
imul
cmps
mov
push
add
adc
or
ins
cli
push
add
add
sbb
push
rol
mov
pop
dec
dec
cmc
dec
outs
(bad)
in
add
stos
mov
add
add
add
mov
push
or
jg
sub
push
out
rol
push
loopne
dec
mov
or
loop
test
add
add
jmp
dec
inc
ror
ror
push
aas
xchg
adc
sbb
push
adc
and
push
add
add
xchg
or
popf
(bad)
push
push
mov
(bad)
xchg
or
std
sti
aad
sti
mov
add
add
jnp
leave
in
lods
mov
test
inc
xor
ja
std
icebp
hlt
xor
loop
pop
add
add
xor
aam
push
or
cld
imul
cmp
mov
movs
mov
add
add
loopne
loopne
adc
add
movs
(bad)
sub
test
fsub
mov
adc
mov
or
sub
add
mov
in
cmp
outs
in
data16
call
std
or
test
or
call
add
add
in
and
push
push
or
xlat
push
cmps
jge
push
xchg
not
cmp
sbb
fsub
add
add
mov
or
aaa
je
mov
or
push
sub
and
add
add
dec
and
addr16
cmps
call
adc
cmp
push
adc
lea
add
add
jg
jae
clc
imul
and
cli
lahf
dec
pop
mov
push
xchg
out
mov
cmp
add
add
add
jne
xchg
mov
loop
push
xchg
mov
sbb
inc
jl
xchg
and
add
add
cmp
or
adc
js
xchg
cmp
js
and
bound
mov
add
add
add
rcl
push
mov
mov
adc
and
and
add
add
das
je
fimul
cs
xchg
mov
jp
mov
mov
in
or
add
push
push
push
add
add
mov
dec
fmul
mov
stc
mov
mov
push
sbb
cdq
cs
cwde
add
add
les
add
inc
pop
jp
pusha
fisubr
dec
lea
adc
or
cmps
fsubp
std
shl
add
add
inc
sub
call
mov
(bad)
in
mov
push
mov
das
cmps
push
and
add
add
push
imul
jns
mov
cs
and
shl
and
outs
repnz
and
push
in
add
add
pop
lods
das
dec
add
and
push
hlt
mov
sub
or
pusha
ror
add
add
div
and
pop
pop
aas
dec
in
or
js
cld
cmp
or
add
add
xchg
js
popf
mov
sbb
mov
retf
lods
mov
fcomp
mov
and
cmp
mov
xor
and
mov
fcmovne
cmps
jno
inc
sbb
loope
popf
and
imul
add
adc
cmp
xor
mov
inc
dec
xor
sub
adc
inc
ret
lds
add
add
add
dec
cmp
cld
xor
imul
mov
jge
fdivr
add
add
mov
add
test
sbb
push
add
push
in
add
add
adc
(bad)
xchg
dec
out
imul
fs
je
mov
add
fld
cmp
mov
std
adc
dec
test
sub
dec
pop
xchg
cdq
jno
or
add
add
pusha
inc
loopne
test
add
test
retf
jmp
pop
mov
jbe
add
add
test
xchg
pop
call
jns
jl
mov
(bad)
sbb
add
add
mov
test
mov
push
mov
addr16
sbb
fild
add
add
cmp
jne
push
pop
adc
cmp
and
cdq
call
aaa
or
add
cmp
sub
pop
movs
add
shl
in
xchg
pop
pop
xchg
mov
fld
add
add
(bad)
enter
xlat
imul
cvtdq2ps
(bad)
and
pop
xchg
and
mov
aad
mov
push
dec
xchg
sub
xor
xchg
mov
mov
clc
inc
xchg
add
add
xor
xchg
cmp
shl
mov
in
add
or
add
arpl
inc
fwait
or
mul
pop
das
fnsave
push
(bad)
or
mov
jno
add
mov
add
add
jecxz
popa
pop
call
pop
stos
clc
adc
in
retf
sub
add
add
bound
pop
(bad)
sub
or
sbb
or
mov
dec
mov
add
add
int3
je
push
push
cmp
mov
stos
cmp
jmp
mov
fsubr
push
mov
add
cmp
xchg
pushf
sbb
mov
xlat
sbb
dec
add
loope
fisub
add
(bad)
cmp
retf
push
and
dec
shr
(bad)
and
mov
sub
retf
aam
das
adc
add
add
add
lahf
ret
rcl
push
mov
outs
mov
aam
add
add
and
jg
add
sub
sub
in
pop
aam
fcom
xchg
fstp
adc
add
add
jecxz
dec
outs
aaa
jmp
ds
dec
mov
xor
scas
add
add
inc
xchg
mov
adc
xor
sub
and
push
int
jmp
inc
outs
repnz
je
cmp
sahf
ins
pop
gs
fld
add
xor
cmp
or
add
add
inc
cmp
rcr
pushf
not
popf
inc
shr
xor
movs
mov
add
inc
and
mov
pop
add
inc
popf
push
int3
test
push
out
or
and
add
add
int3
outs
sub
jmp
jmp
sbb
icebp
mov
push
sbb
add
add
enter
in
std
fcomp
push
and
retf
jb
or
sub
pop
das
mov
add
lea
fs
and
jg
add
retf
sub
mov
jno
add
add
add
fisubr
cli
mov
rcl
adc
xchg
imul
lock
cmp
add
jecxz
fdivr
add
add
xchg
push
mov
inc
sar
rep
dec
lea
add
add
hlt
add
add
div
add
inc
dec
leave
adc
cmp
jns
xchg
push
outs
jp
pop
and
cld
pop
inc
and
and
in
icebp
add
add
adc
sar
push
lock
jo
lea
push
cmps
push
rcl
scas
push
out
les
add
add
jbe
icebp
lahf
dec
scas
xchg
push
push
sub
xchg
adc
dec
and
add
and
stos
cmc
or
stos
or
sub
adc
add
add
add
and
jmp
jge
or
ror
(bad)
jmp
ins
or
pop
pushf
push
pop
add
add
adc
call
clc
hlt
adc
dec
std
(bad)
rcl
dec
and
daa
daa
imul
add
add
repz
sti
cld
adc
xchg
inc
xchg
xchg
nop
repz
fst
cmp
push
dec
jmp
add
pop
adc
mov
dec
add
outs
adc
imul
mov
inc
mov
cmp
push
jns
das
add
add
cld
stos
retf
mov
push
(bad)
daa
push
je
dec
and
mov
ficom
jbe
iret
jb
and
add
add
push
js
test
push
popf
dec
shl
jo
xor
jo
maskmovq
mul
jne
icebp
popf
dec
add
add
in
stc
mov
pop
and
push
les
push
cli
(bad)
addr16
stos
push
add
xchg
stos
pop
dec
pop
and
push
push
or
jbe
inc
fdiv
fcomp
loopne
sub
and
add
add
sub
jno
leave
jl
cli
inc
xor
sub
adc
loop
xchg
js
and
pop
inc
add
pusha
cmp
pop
push
push
inc
xchg
lahf
jbe
xchg
dec
xchg
jne
xchg
popa
adc
add
add
and
es
test
rol
iret
sar
push
cwde
rcl
adc
add
xor
xchg
mov
sbb
cmp
fs
jns
jbe
adc
hlt
add
add
cmps
inc
mov
ins
cmp
jne
movs
inc
jmp
xchg
adc
pop
retf
sahf
dec
push
or
add
ins
loopne
into
xor
and
std
hlt
retf
or
imul
aam
out
push
add
add
inc
pop
repnz
adc
les
neg
retf
icebp
inc
loopne
mov
sub
pop
xchg
mov
add
loopne
fcom
enter
xchg
fsubr
mov
sbb
add
add
adc
int3
xor
les
xor
mov
or
aaa
in
or
jmp
add
add
dec
arpl
xor
and
test
jmp
push
cmc
inc
lods
sub
add
sar
pop
call
inc
enter
inc
mov
cmp
enter
mov
and
add
add
sub
adc
xor
ficom
std
outs
(bad)
push
xchg
inc
add
add
or
test
add
cmp
inc
xchg
jg
add
in
push
das
retf
adc
and
and
iret
cli
ins
or
inc
cdq
js
lock
sbb
inc
fadd
add
add
dec
fdivr
shl
leave
das
pop
cmp
cld
shr
ror
call
cmp
add
add
call
js
(bad)
dec
in
lea
sbb
adc
push
sub
add
aas
sbb
pop
das
and
mov
cld
(bad)
mov
rol
adc
xchg
mov
xor
in
and
add
add
mov
jge
mov
push
xor
inc
cli
(bad)
pusha
push
popf
jmp
xor
jecxz
cmp
and
add
add
fwait
mov
cs
pop
sub
xchg
jmp
test
mov
adc
add
add
adc
pop
shl
sti
or
dec
ins
lods
add
mov
add
add
aas
mov
cdq
in
mov
or
push
mov
add
lahf
mov
sar
push
push
dec
call
mov
xor
mov
sbb
aaa
ret
add
or
mov
sub
shl
sub
mov
and
add
in
add
add
adc
fs
test
and
shr
fstp
test
fnstcw
pop
add
add
mov
pop
fstp
jmp
repnz
data16
sbb
push
in
sub
sahf
pop
push
icebp
add
add
(bad)
push
jmp
or
or
or
or
push
push
mov
add
add
add
inc
sub
dec
pusha
mov
sti
int3
add
and
cmps
ret
add
add
jnp
daa
jg
rcr
call
aam
add
aam
leave
aam
mov
add
lock
sub
push
add
xchg
sub
adc
jl
mov
xlat
cmp
mov
or
mov
fs
mov
test
pop
xlat
scas
or
and
sar
and
int3
in
sub
add
std
icebp
retf
dec
xchg
pop
xchg
mov
and
loop
and
(bad)
sbb
out
push
add
add
or
mov
out
shl
adc
jmp
lock
sub
add
or
xchg
add
add
mov
dec
cld
add
fidivr
dec
ds
(bad)
jns
pusha
iret
test
jp
jne
(bad)
add
add
mov
ja
pop
and
or
fistp
sar
or
or
add
add
mov
xchg
push
jmp
out
and
jmp
jg
nop
sbb
or
enter
add
data16
out
in
cmp
or
dec
test
push
repz
add
adc
mov
sti
and
pop
mov
cwde
mov
xchg
je
mov
retf
out
shr
call
mov
xchg
xchg
arpl
xchg
scas
gs
cli
mov
idiv
aas
lods
cdq
jbe
push
push
sbb
add
add
push
push
mov
push
in
push
mov
push
or
lea
in
sbb
test
and
add
add
push
xchg
hlt
mov
rcl
dec
push
es
ja
adc
mov
repz
add
stc
jmp
xor
cmp
sbb
adc
in
jmp
jne
push
les
jmp
les
add
add
fdiv
cmp
xor
xchg
rcr
xchg
push
pushf
fisttp
adc
xchg
test
and
cmp
lahf
(bad)
mov
and
and
and
cli
icebp
add
add
sub
pop
or
sbb
pushf
push
je
push
loope
push
and
and
jle
int3
add
add
sahf
out
rcr
fiadd
call
xchg
and
ret
not
mov
add
add
rcr
sub
xor
cmp
pop
push
out
push
inc
inc
enter
or
add
add
add
or
das
dec
lods
cmps
test
retf
enter
sbb
add
test
cli
fcmovnu
mov
pop
jge
test
adc
pushf
clc
das
push
jecxz
add
add
or
mov
mov
push
push
dec
cwde
jne
lds
add
repnz
and
stos
les
scas
data16
enter
jl
jb
xchg
inc
lock
jne
mov
add
add
xchg
xchg
dec
xchg
punpckhwd
fstp
repnz
or
cs
aas
mov
add
add
push
jne
hlt
jle
mov
das
add
push
leave
push
adc
push
in
sub
mov
cmp
adc
add
add
mov
and
cmp
sub
loope
and
add
fdiv
cmp
add
add
adc
(bad)
xlat
stos
cmp
sub
cld
inc
jmp
mov
adc
push
and
push
add
add
imul
inc
jns
stos
and
mov
adc
sub
lods
repnz
jge
lahf
xchg
fistp
inc
mov
dec
or
repz
inc
(bad)
das
sub
imul
pop
push
add
add
adc
rep
dec
movs
(bad)
(bad)
dec
sub
xchg
dec
sub
(bad)
adc
pop
jp
and
mov
add
mov
xor
lods
jmp
mov
dec
add
clc
lods
dec
ja
pop
inc
fidiv
je
or
es
dec
and
dec
push
cmc
sbb
dec
push
adc
add
add
sub
ror
adc
int
shr
daa
and
out
stos
mov
test
imul
add
add
repnz
push
mov
push
pushf
ja
inc
jnp
movs
dec
mov
and
dec
xor
jecxz
xor
add
movs
jmp
ja
adc
loopne
sub
std
xchg
fadd
in
push
outs
loopne
add
add
xor
and
and
adc
repz
daa
or
pop
sub
add
add
mov
mov
stos
and
std
or
push
sub
or
dec
test
(bad)
loopne
cs
or
add
cdq
out
pop
loopne
sub
and
lea
dec
or
jb
add
add
cs
les
lods
mov
pop
(bad)
push
xchg
in
cmp
pop
addr16
xor
add
jmp
rol
add
push
mov
and
jmp
stos
cdq
cmc
adc
ror
sar
aam
jae
cmp
add
add
sar
cli
mov
push
fwait
popf
lods
dec
xchg
out
or
dec
pop
jge
xchg
or
out
call
test
popf
data16
out
sbb
hlt
jg
gs
or
push
push
inc
adc
out
loop
in
mov
add
add
add
hlt
push
or
lea
xchg
cld
out
ss
pop
mov
mov
sub
call
add
add
pop
imul
retf
daa
xchg
stc
dec
int3
or
xchg
add
or
in
cmps
xchg
into
dec
sti
add
add
mov
add
xchg
test
je
dec
pop
in
je
push
mov
add
ret
add
add
shl
xor
inc
pop
add
les
imul
leave
jg
in
and
add
adc
add
add
inc
and
and
jg
es
cmp
jnp
sbb
mov
add
add
adc
movzx
add
cli
or
push
adc
jne
push
inc
sbb
add
add
sub
add
lock
mov
imul
pop
inc
test
dec
pusha
cmp
add
add
in
sub
lods
sub
outs
lock
mov
adc
sub
sub
movsx
adc
add
add
mov
pop
mov
fld
loope
or
mov
and
mov
add
sub
add
es
mov
les
add
retf
add
add
add
test
add
lock
js
fild
ret
jmp
dec
das
jae
imul
sbb
add
add
sub
movs
bound
inc
jne
scas
dec
dec
mov
cmps
or
scas
and
add
add
enter
push
sahf
cmp
inc
nop
jns
xchg
and
adc
jne
xor
rol
add
add
test
shl
out
xor
rcl
dec
and
rol
loop
mov
add
add
mov
mov
mov
out
lock
leave
sbb
int3
push
push
aas
dec
xchg
dec
add
rol
add
mov
mov
pop
ss
mov
std
ins
pop
mov
popf
fist
mov
mov
adc
or
dec
add
add
pop
dec
sub
jle
adc
leave
inc
cmc
inc
sar
cs
pop
add
add
shr
aas
imul
or
movs
cmp
fsubr
repnz
sub
xor
add
add
fcmovnbe
rcl
jae
lods
xchg
adc
push
icebp
sub
adc
imul
add
add
test
sbb
jno
aam
int3
int3
cdq
call
push
xor
sbb
cmp
or
or
add
add
add
push
push
imul
fisub
sub
push
scas
pop
xor
add
js
add
xchg
pop
fcomip
push
stos
sub
ret
int
sub
popa
push
das
cmp
std
mov
add
add
scas
mov
int
dec
ret
sub
imul
clc
jle
lock
mov
add
add
das
pop
aaa
push
test
push
call
jl
inc
out
in
ret
sub
or
mov
rol
add
add
cmp
adc
push
cld
dec
fidivr
in
rcl
stos
fld
cs
daa
les
add
add
cmp
push
push
les
cmp
fs
cmp
and
bound
xor
add
int3
imul
cs
into
mov
outs
loop
inc
xchg
mul
mov
popf
nop
and
add
push
add
es
or
mov
xchg
push
inc
dec
sub
jmp
stos
pop
sub
pop
pop
add
add
lea
dec
retf
pop
out
adc
adc
jmp
xor
xor
jmp
outs
icebp
dec
sub
sub
lods
ror
imul
dec
or
and
mov
pop
in
out
and
(bad)
mov
ror
hlt
add
add
adc
pop
adc
dec
scas
and
xchg
cmps
or
imul
push
cmp
adc
add
add
add
into
pop
test
and
xchg
dec
cs
data16
arpl
mov
xchg
loopne
je
add
add
mov
or
call
jb
int3
sbb
in
add
adc
cwde
loop
add
add
or
and
push
ret
test
pop
fadd
adc
inc
fmul
push
shr
fs
scas
mov
jle
push
push
xlat
in
adc
cmps
cmp
mov
aam
aad
add
add
mov
test
iret
jmp
(bad)
or
or
retf
cmp
test
sub
add
add
inc
test
or
sbb
or
push
cmp
inc
add
dec
sbb
and
gs
add
add
and
mov
imul
cmp
sub
or
push
sub
adc
xchg
fmul
pop
mov
add
dec
mov
cmp
lock
jmp
mov
es
dec
sbb
jbe
movs
pop
aas
cmp
xor
add
xor
push
mov
gs
movs
(bad)
jo
and
adc
sbb
imul
xchg
cs
or
xchg
jnp
call
shr
push
push
cmps
gs
or
dec
jmp
add
add
cmp
xchg
push
adc
dec
in
test
mov
lods
test
popf
add
add
mov
es
aaa
lea
push
adc
mov
mov
in
jecxz
and
pusha
xor
add
add
pop
mov
cmc
jmp
mov
or
mov
adc
scas
push
inc
js
inc
add
add
add
add
cmps
adc
mov
xchg
sbb
push
mov
and
pushf
inc
cld
movs
movs
adc
add
add
dec
mov
pop
or
popa
mov
jge
or
enter
jbe
adc
add
mov
jo
lds
std
adc
in
lds
sub
add
add
push
ins
sbb
xchg
xchg
movd
sub
pop
adc
repz
and
mov
cmp
add
add
push
dec
mov
lea
xchg
jecxz
or
std
sbb
stc
or
adc
or
add
add
cmp
dec
jge
push
inc
adc
pop
push
loope
jmp
jno
lahf
test
lea
repnz
add
add
test
jle
or
inc
and
pop
mov
or
xchg
xchg
das
add
add
call
sbb
test
inc
push
cmp
dec
in
andps
push
adc
add
mov
test
cdq
sar
xchg
out
push
popf
push
mov
mov
add
and
shr
test
xchg
ret
sub
sbb
add
add
adc
lock
popf
rol
inc
sbb
push
icebp
or
xor
cmp
imul
jae
movs
and
push
xchg
shr
lock
sub
inc
sub
daa
add
add
mov
cli
or
fidiv
loopne
dec
adc
cmps
mov
sbb
jp
mov
push
add
stc
lock
adc
inc
or
mov
icebp
cwde
mov
mov
cmp
test
test
add
add
inc
mov
fcom
or
jno
adc
aam
loopne
mov
(bad)
outs
mov
out
cmp
add
movs
or
pop
or
inc
imul
rol
in
daa
inc
fcom
add
add
(bad)
jmp
aad
(bad)
cmps
cmp
es
ins
bnd
cmp
push
mov
mov
and
(bad)
leave
clc
jmp
movs
fs
pop
mov
inc
jnp
das
imul
mov
add
add
call
je
sar
adc
adc
adc
and
and
aaa
add
add
sub
popf
(bad)
and
dec
adc
dec
push
inc
mov
pushf
xor
mov
add
add
and
mov
xchg
(bad)
inc
inc
test
clts
lahf
adc
mov
add
add
pop
test
jmp
aad
or
xor
out
lock
aam
sub
add
cmps
jge
dec
xchg
or
adc
hlt
and
and
add
add
loopne
push
cmps
mov
nop
pop
shl
xchg
or
mov
les
fisttp
mul
add
add
mov
retf
push
pop
and
sub
or
push
iret
mov
mov
add
add
mov
push
sbb
sub
sub
push
or
push
adc
rol
test
add
add
adc
mov
inc
jmp
or
dec
push
jmp
push
add
add
aad
xor
or
ins
push
loop
pop
add
push
inc
and
and
test
mov
add
add
mov
xchg
out
jne
arpl
push
cld
cld
mov
jecxz
mov
mov
add
add
movs
push
loop
xchg
dec
push
adc
or
add
fs
jbe
dec
repz
or
aaa
add
add
xchg
or
add
push
das
daa
mov
rcl
cmp
rcl
ja
rcl
pop
and
add
add
mov
lock
(bad)
cmc
test
and
cmc
mov
adc
push
add
add
repz
dec
movs
sub
rcl
pop
push
push
fld
and
push
daa
ret
and
add
sbb
clc
mov
out
call
push
xor
ror
inc
and
add
inc
push
add
add
addr16
bound
mov
jbe
push
mov
xchg
jae
mov
adc
inc
and
add
ja
fdivr
lahf
or
add
sbb
add
(bad)
rep
test
enter
fidiv
movs
or
add
ja
cmc
fwait
inc
or
push
inc
or
or
jb
inc
lods
aas
push
dec
or
pop
push
mov
add
pop
jb
adc
icebp
mov
pop
push
mov
fs
or
cmp
mov
in
int
add
add
adc
sbb
add
das
or
in
lods
pop
mov
mov
test
add
add
sub
and
call
pop
push
pushf
(bad)
mov
add
add
cmp
pushf
jmp
add
xor
gs
push
and
(bad)
push
and
inc
add
add
pop
ja
icebp
mov
push
mov
(bad)
jne
adc
sbb
out
sbb
mov
(bad)
hlt
sub
add
add
mov
push
mov
inc
out
sbb
jbe
xor
movs
loope
fdivrp
mov
push
cld
pop
add
add
and
jo
ror
call
mov
xchg
imul
pop
xchg
ror
les
sbb
xor
and
xor
jae
and
jae
inc
xor
pop
inc
or
add
add
in
adc
repnz
test
retf
retf
adc
sbb
pop
addr16
mov
mov
fadd
inc
xchg
push
cwde
fisubr
shl
sar
dec
dec
aam
jmp
or
add
add
out
mov
addr16
aaa
(bad)
enter
scas
fwait
jbe
push
mul
retf
xor
jns
rcl
pop
lods
add
add
jb
out
push
or
add
jl
gs
test
aam
test
cmp
add
add
xchg
retf
jp
pop
in
lods
inc
cmp
mov
inc
push
mov
test
inc
daa
dec
lahf
pop
out
daa
add
and
xchg
jmp
or
test
test
enter
adc
fwait
push
adc
jl
imul
movs
neg
daa
scas
or
loope
add
add
xor
aad
xor
adc
les
add
push
retf
cli
daa
mov
shr
(bad)
cli
test
in
add
add
mov
dec
add
add
mov
add
and
and
push
adc
or
nop
clc
mov
stc
sub
inc
mov
mov
push
mov
add
add
jmp
leave
or
mov
sub
push
adc
dec
add
add
inc
mov
lea
pop
(bad)
call
mov
xchg
push
sub
add
add
fst
aas
mov
sub
retf
dec
jnp
jge
mov
jl
test
add
add
adc
xor
inc
and
inc
or
dec
adc
pop
inc
in
aaa
push
movs
mov
dec
dec
add
add
jnp
and
mov
add
das
inc
sbb
cmp
add
add
sbb
pushf
xchg
xchg
inc
mov
push
cmps
(bad)
out
jmp
push
aas
push
mov
rcr
cdq
pop
jp
push
inc
sub
scas
inc
repz
cmps
cdq
jno
enter
sub
and
fstp
xchg
das
push
add
sub
add
sub
cmc
mov
fs
xchg
aaa
push
xor
jno
nop
mov
repnz
add
add
call
push
dec
push
cmps
dec
push
cs
push
mov
jne
dec
call
inc
add
add
rcl
mov
cmps
inc
xchg
push
push
push
pop
fdivr
add
imul
add
das
mov
and
iret
add
pop
xchg
lahf
icebp
sub
repnz
popf
sbb
leave
push
scas
add
add
pushf
jns
cmps
adc
in
jmp
std
adc
jne
jp
dec
jmp
push
xor
pop
int
add
add
jbe
jmp
fprem
inc
pop
add
nop
in
lock
xor
push
(bad)
movs
lods
mov
add
add
pusha
aaa
adc
in
sbb
inc
inc
popa
loop
adc
sub
lea
add
add
add
sar
fldcw
or
sahf
adc
jmp
or
lock
sbb
cmc
adc
add
adc
stos
cmps
pop
sub
sub
das
test
xchg
push
push
es
mov
cmp
add
add
add
inc
out
imul
clc
neg
jae
fisttp
mov
sbb
pushf
popf
add
add
aad
pop
mov
push
dec
fwait
cld
enter
push
dec
pushf
test
jecxz
aam
call
(bad)
sar
add
jne
jnp
jo
xchg
mov
nop
push
adc
retf
repnz
or
pusha
inc
and
add
add
pop
or
push
jecxz
ins
jnp
jecxz
dec
xor
sbb
inc
adc
add
sbb
cmp
dec
mov
sbb
(bad)
sbb
sahf
popa
cmp
inc
sub
ficomp
bound
add
fistp
mov
mov
scas
xor
sub
mov
pop
mov
add
add
lock
xor
sub
sub
test
add
test
fs
mov
add
add
dec
or
and
inc
adc
repnz
push
and
das
jmp
and
add
add
pop
mov
adc
jns
and
dec
adc
pop
pop
in
sub
test
in
add
add
adc
scas
sub
nop
sbb
movzx
test
add
and
add
dec
jae
inc
cmp
add
add
add
jae
mov
add
add
nop
sub
or
mov
pop
dec
retf
loopne
rcl
add
add
mov
fstp
cdq
jmp
pop
out
lea
ficom
inc
jne
retf
or
stc
push
inc
js
add
add
loope
and
adc
add
or
mov
mov
fst
jnp
pop
cld
push
jle
jbe
adc
add
add
push
test
dec
loopne
pushf
shr
repz
retf
jl
enter
call
add
add
adc
fiadd
mov
add
sub
xor
xchg
in
add
add
cld
mov
call
sar
je
or
mov
pop
xchg
add
add
jge
cmp
test
push
xchg
sbb
and
cli
movs
inc
inc
enter
add
pop
or
and
retf
or
add
adc
pop
jnp
fidiv
add
add
(bad)
jo
jp
pushf
repz
sbb
pop
cdq
ror
les
or
stc
pop
mov
add
add
fmulp
lds
js
push
and
xchg
mov
(bad)
ja
add
ja
fsub
call
or
inc
add
or
mov
add
add
cmp
push
mov
and
jl
jp
or
jno
dec
xchg
push
push
aam
sbb
add
push
or
mov
and
inc
fiadd
in
cmp
xor
xor
adc
sbb
add
add
pop
or
jle
and
cmc
data16
or
dec
and
add
add
dec
pop
mov
jl
mov
xchg
test
retf
adc
and
dec
out
xchg
div
push
add
adc
sbb
dec
sub
add
add
or
or
or
adc
add
add
jmp
(bad)
lock
aas
push
pop
mov
sbb
xchg
shl
xor
std
adc
xchg
retf
xor
(bad)
jle
add
add
push
nop
in
inc
fwait
jge
lock
pusha
test
xchg
mov
leave
push
dec
int3
add
add
stos
mov
xor
or
add
dec
sar
pop
cwde
mov
loope
dec
add
pop
or
or
add
add
push
jl
jae
lods
dec
inc
adc
arpl
xchg
mov
inc
hlt
push
jle
and
dec
mov
inc
add
add
sub
xchg
adc
and
dec
jnp
mov
(bad)
mov
pop
cmps
inc
xchg
aad
add
add
mov
or
outs
cmp
pusha
lods
repnz
or
mov
aam
add
add
push
outs
push
test
ror
nop
imul
test
or
fadd
jge
sub
aam
add
add
jae
bound
dec
adc
mov
pop
sti
xchg
fadd
dec
add
fwait
mov
push
mov
movs
add
add
mov
xchg
out
mov
pop
xchg
cmps
mov
imul
aam
test
scas
pop
out
jmp
pop
dec
inc
dec
mov
stc
or
inc
sub
add
add
add
jmp
xor
push
add
out
test
test
jno
call
jno
mov
add
lahf
push
or
sti
pop
adc
jp
and
pushf
arpl
pop
mov
xchg
in
and
add
add
or
in
xor
stc
das
xchg
int
dec
sub
mov
and
not
(bad)
dec
dec
add
add
jg
dec
aad
pop
cmc
scas
mov
dec
cli
ror
adc
lods
or
xor
pop
in
sbb
add
add
pusha
(bad)
fist
adc
sti
cld
test
or
add
add
sub
mov
push
in
mov
jg
(bad)
push
sbb
fs
stc
aam
clc
outs
int3
jge
pop
add
add
and
mov
cmp
jne
test
mov
jmp
loop
xor
fld
add
add
or
dec
aad
lea
dec
cmp
mov
retf
sbb
enter
mov
add
add
repnz
pusha
and
or
mov
clc
call
scas
push
adc
ss
into
add
add
test
push
xchg
mov
pop
xor
call
adc
nop
lahf
xchg
js
add
add
xlat
repnz
add
popa
mov
adc
jne
mov
mov
inc
inc
outs
cmc
stc
cld
jno
cmp
add
dec
js
ret
sub
loop
add
push
out
sub
add
cmp
das
inc
not
add
add
data16
xchg
loope
inc
cmp
push
add
adc
and
add
add
popf
jecxz
or
add
sub
leave
in
xchg
xor
xor
cmp
mov
push
(bad)
jbe
dec
dec
cmp
inc
test
lea
sbb
fwait
and
dec
add
add
fiadd
clc
addr16
shl
jmp
dec
adc
sub
es
and
add
add
ja
hlt
dec
cmp
dec
shl
lods
cs
movs
mov
ins
adc
popf
adc
add
add
adc
and
sub
pop
cmp
stos
xchg
cmc
pop
fdiv
lods
movs
xchg
pop
pusha
or
or
add
add
inc
shl
add
aam
cmp
mov
repz
sbb
adc
adc
xchg
add
add
fdiv
push
mov
or
and
cmc
les
shl
cmp
fldcw
add
add
loope
imul
or
mov
mov
inc
xor
pause
cmps
and
add
adc
jg
daa
bound
pop
sti
dec
cmc
or
inc
cld
sub
sbb
addr16
cmp
or
add
add
pop
rol
jge
mul
jnp
sti
shr
je
pop
cmc
out
retf
loopne
mov
add
add
push
push
push
push
jo
jbe
sub
pop
shr
or
sub
fucomi
add
add
stos
movs
sbb
xchg
hlt
mov
adc
dec
arpl
fisttp
mov
movs
(bad)
add
add
loop
or
adc
mov
lock
xchg
pop
jg
xchg
ins
jmp
inc
or
add
add
jne
(bad)
aad
mov
and
inc
repz
xor
push
fwait
jne
addr16
add
add
fisttp
push
fisttp
inc
ins
sbb
mov
cmp
xchg
or
add
add
push
xchg
xchg
adc
or
paddsb
lea
ins
dec
stos
jge
popf
dec
fwait
sub
add
add
dec
mov
inc
jb
add
or
xchg
imul
inc
test
add
add
sti
push
or
mov
popf
fnstsw
test
or
push
lods
pop
adc
xchg
in
add
add
(bad)
imul
imul
popf
inc
std
or
add
xchg
xchg
or
jno
add
add
xchg
nop
out
call
mov
enter
push
test
sub
add
rcr
mov
mov
repz
sub
inc
inc
fs
and
add
push
cld
sahf
inc
xchg
jbe
inc
sbb
pop
cmc
and
in
sbb
mov
jb
leave
add
add
mov
xor
or
test
and
dec
lahf
mov
enter
adc
add
call
dec
and
add
icebp
push
fld
xchg
sbb
fadd
and
add
add
sbb
add
js
cmc
dec
mov
in
pop
rcl
push
out
pop
and
nop
pop
jo
add
add
mov
adc
sub
xchg
aam
jno
icebp
(bad)
sbb
or
inc
frstor
add
add
mov
jmp
popa
or
dec
stos
mov
repnz
pop
push
into
add
add
retf
inc
or
push
js
xchg
cmp
(bad)
fld
mov
xor
add
add
push
xlat
add
jl
in
imul
lods
mov
pop
movs
cmc
lods
popf
inc
sti
add
add
add
ins
cmps
fstp
pushf
sbb
mov
sub
add
ds
fld
loope
mov
add
add
jmp
cmp
arpl
sub
adc
int
xchg
sahf
frstor
cmp
add
pushf
ds
xchg
mov
jnp
(bad)
leave
cmp
push
mov
xchg
push
call
add
add
lock
icebp
fs
mov
fsub
push
ds
test
adc
adc
add
add
bound
pop
in
inc
lock
xlat
nop
xchg
inc
test
dec
cmp
jae
pop
sub
scas
add
mov
outs
shr
push
mov
add
add
test
cmp
dec
sahf
mov
ror
xchg
push
mov
outs
inc
mov
adc
add
add
lea
sbb
push
mov
xor
rcr
inc
enter
les
adc
or
ins
push
lock
dec
cmp
xchg
nop
sti
push
push
and
or
jno
pop
scas
js
sbb
add
test
lds
mov
xor
in
mov
js
cmps
ja
jmp
add
(bad)
jae
jg
push
and
jne
sbb
fstp
dec
or
or
or
add
add
jnp
lods
add
pop
or
or
ret
inc
pusha
lds
retf
pop
push
dec
sub
mov
add
add
or
hlt
xchg
and
mov
or
data16
(bad)
icebp
(bad)
push
ror
ins
ror
add
add
mov
adc
or
fucom
pop
imul
nop
cmp
into
inc
test
add
add
mov
jns
dec
(bad)
and
or
test
hlt
or
xor
fist
and
add
add
cli
and
and
pop
inc
inc
add
cli
outs
dec
xchg
out
and
add
repnz
add
sbb
test
sub
pop
imul
jmp
jge
repnz
ins
in
lods
arpl
add
scas
out
lock
xchg
into
jb
not
add
jmp
daa
inc
mov
inc
xor
lods
popa
add
add
push
popa
in
sub
imul
sti
dec
mov
push
es
mov
pop
mov
std
cmp
punpckldq
stc
bound
out
enter
aam
fcomp
fsubr
push
js
mov
add
add
adc
dec
xlat
inc
popf
adc
inc
daa
jl
pop
adc
rcl
push
sbb
add
cmp
shl
dec
add
mov
cmp
(bad)
sbb
jne
into
xchg
pop
mov
add
xchg
inc
push
or
cld
pop
mov
mov
xchg
or
xor
add
add
ins
jmp
mov
lds
scas
mov
cmp
sub
mov
ins
repnz
add
push
jns
das
nop
mov
mov
and
pusha
ins
ins
xchg
scas
cmp
fucomip
xor
add
jns
mov
es
fimul
adc
sbb
loop
dec
lahf
mov
sbb
rcr
dec
push
cdq
add
add
mov
cli
(bad)
fiadd
cli
sbb
fadd
xor
xchg
push
jne
sbb
add
add
fwait
test
popf
repnz
jbe
aam
and
push
sub
add
add
push
jne
and
in
mov
jbe
push
sub
mov
jnp
add
add
mov
fs
inc
sub
movs
push
jl
mov
mov
mov
adc
jno
xor
add
add
fucomi
and
test
scas
mov
jl
in
dec
inc
sbb
addr16
rcl
dec
or
add
add
stos
jge
xor
ror
push
push
sub
xlat
pushf
cld
add
and
jle
test
inc
add
add
dec
mov
and
mov
cmc
pop
add
or
cmp
test
push
pop
mov
mov
add
add
inc
cmc
je
ud1
or
xchg
jmp
push
pushf
or
lahf
jnp
cmp
push
enter
add
add
and
and
sti
inc
push
sub
xchg
cld
mov
xchg
mov
sub
add
add
push
lods
push
test
inc
or
mov
jno
mov
aad
inc
inc
cmp
add
add
in
cmp
or
test
jmp
sub
add
add
lds
dec
pop
adc
or
adc
push
sub
mov
add
adc
mov
inc
mov
mov
inc
mov
push
pop
clc
adc
icebp
or
dec
ins
shr
inc
dec
lock
repz
mov
add
push
adc
cmp
add
add
push
loop
loop
sbb
sub
pop
inc
movs
movs
pushf
movs
pop
pusha
out
shr
jnp
mov
pushf
sbb
add
add
dec
inc
fadd
repz
jns
fs
sub
xchg
mov
int
scas
mov
std
add
add
jle
dec
push
(bad)
dec
inc
mov
clc
into
and
icebp
push
sub
rcl
or
add
add
jl
and
imul
gs
out
cld
sub
adc
xchg
inc
jbe
add
add
push
sub
xor
push
xchg
fadd
xor
ds
sub
push
add
mov
push
add
add
stc
imul
jb
mov
pusha
fwait
jne
adc
(bad)
jmp
mov
add
add
pushf
xor
xchg
je
cmps
outs
lock
dec
in
cmp
rcl
or
inc
add
add
pop
mov
pushf
push
dec
dec
js
imul
pop
jmp
add
add
add
add
movzx
mov
call
mov
retf
aaa
xor
mov
mov
add
add
mov
add
test
sbb
sti
cdq
icebp
or
fs
pusha
scas
mov
xor
add
add
sub
push
xlat
mov
lahf
sub
int
sub
jecxz
loop
mov
push
dec
xchg
call
pusha
add
add
int3
test
xor
mov
adc
leave
idiv
pop
pop
jae
daa
call
popf
ja
les
jbe
retf
sbb
or
sub
sub
sbb
inc
cmp
push
or
int3
lea
mov
in
sbb
sbb
or
mov
add
add
loope
and
cmp
jmp
dec
movs
test
test
in
mov
or
add
add
jle
clc
and
xor
les
or
jns
jae
das
push
in
add
add
xchg
mov
sbb
sahf
mov
fldcw
call
fs
pop
das
dec
mov
adc
jmp
js
test
dec
xor
push
or
adc
dec
rcl
iret
and
add
add
push
dec
ja
sahf
mov
and
dec
cwde
daa
psrad
into
push
or
stc
or
add
and
add
add
or
add
xor
xchg
and
push
arpl
div
out
inc
inc
and
mov
add
push
cmps
jp
popf
(bad)
pop
shl
mov
lods
jnp
push
sub
jns
push
jo
pusha
pop
mov
add
enter
loopne
push
imul
pop
pop
inc
sbb
sub
mov
dec
outs
popf
fmul
fld
add
add
out
out
into
and
or
sub
xor
ja
pusha
ins
jecxz
test
jle
add
add
lea
or
jg
loopne
adc
call
adc
shl
push
add
int3
mov
call
mov
sahf
sar
cli
xchg
loopne
scas
cmp
add
sub
push
inc
and
outs
push
add
add
mov
sub
jge
or
imul
xchg
cli
push
test
(bad)
daa
in
test
dec
mov
adc
add
add
inc
pop
sub
jbe
xor
push
pop
clc
shl
cli
cmps
add
repnz
add
add
fnstcw
jg
adc
(bad)
jge
xor
jae
mov
push
jp
sti
push
xchg
adc
add
in
jmp
xchg
mov
jp
dec
das
scas
xor
cmps
cwde
ds
iret
ja
ret
add
mov
sbb
mov
and
(bad)
data16
hlt
add
inc
pop
mov
push
movs
adc
mov
das
add
add
cli
scas
std
les
lahf
hlt
nop
push
out
fnsave
and
xlat
jno
dec
adc
imul
adc
push
sub
add
add
sbb
xchg
jl
jmp
dec
push
adc
inc
or
pop
sub
add
add
cli
not
add
or
(bad)
stos
popa
and
repnz
xchg
add
add
add
push
mov
xchg
aad
jmp
in
and
or
add
add
push
jle
imul
scas
sub
or
(bad)
jno
je
jnp
cmp
add
add
jle
dec
leave
or
push
sbb
push
and
push
cmp
aad
shr
mov
add
add
xchg
ins
adc
push
arpl
div
sbb
or
and
add
add
jns
ins
sbb
aam
add
mov
loop
ficomp
std
(bad)
inc
popf
fstp
add
test
add
dec
inc
clc
cli
(bad)
sub
cmp
add
or
imul
inc
ror
stos
adc
inc
fcomi
cmc
add
add
sar
cli
sub
retf
loopne
aas
mov
sub
cmps
mov
enter
aad
xchg
stos
cdq
xchg
add
add
adc
stos
or
ds
mov
push
cmp
inc
jns
imul
icebp
fcom
add
add
jmp
jb
std
jo
hlt
sbb
cmp
inc
or
jae
push
pop
mov
add
add
imul
pop
sbb
adc
dec
or
je
or
add
clc
cmp
inc
xor
add
add
icebp
mov
sub
nop
es
jmp
loope
or
adc
repnz
aaa
lahf
retf
test
add
add
or
repz
mov
retf
pop
ins
cmp
(bad)
aas
xchg
jmp
cli
mov
(bad)
mov
add
add
gs
imul
inc
in
push
and
loop
push
jb
and
sbb
lds
adc
inc
test
fwait
jmp
aad
adc
add
mov
and
rcl
or
adc
lods
cmc
or
jbe
loopne
jg
add
add
(bad)
xchg
stc
cmp
repz
jne
pushf
lea
stc
cs
xor
jp
mov
add
sar
pusha
fs
les
stos
and
jle
nop
push
inc
push
mov
mov
add
add
add
enter
push
dec
add
pop
retf
push
sbb
add
add
add
dec
push
enter
enter
inc
mov
fwait
daa
fsub
fcos
jecxz
sbb
add
add
rcr
nop
mov
mov
jb
adc
sbb
dec
jmp
add
imul
fucomi
fs
in
mov
fstp
jge
xor
add
add
fdiv
sti
repnz
fild
adc
loope
pop
fst
loop
adc
test
in
add
add
add
jg
pop
mov
psubd
jge
or
push
xchg
mov
add
add
inc
lahf
or
push
push
ja
xor
outs
add
int3
call
enter
pop
xchg
sub
inc
add
add
pop
inc
or
sbb
adc
inc
adc
ja
cmc
inc
add
mov
mov
fstp
add
call
rcr
sbb
or
inc
out
cmc
and
push
and
add
add
inc
or
aaa
adc
dec
dec
xchg
imul
pop
mov
jbe
out
mov
add
mov
cmp
test
or
loopne
call
push
lods
sbb
pop
jo
bound
add
add
push
and
cmp
xor
mov
fs
dec
xor
add
add
test
int
int3
adc
jne
aad
push
jg
mov
inc
add
add
or
int
divps
enter
fisub
repz
sbb
add
sbb
cld
jne
mov
in
push
inc
push
int3
idiv
test
jmp
mov
loop
or
add
hlt
sbb
and
push
jl
pop
xchg
push
push
les
mov
mov
sbb
inc
inc
cmps
push
repz
(bad)
stc
mov
add
add
add
add
ja
mov
int3
sahf
retf
mov
pop
dec
outs
sub
out
xor
jno
stc
add
add
outs
stos
pushf
inc
mov
xchg
or
xchg
in
cs
xchg
add
dec
pxor
test
add
add
ins
test
pop
jne
add
jp
pop
into
and
jp
or
mov
fldcw
add
add
loop
jl
in
adc
loope
aaa
xor
sub
adc
inc
add
add
adc
in
mov
mov
adc
repz
mov
jle
mov
out
leave
add
add
adc
cmovne
inc
sti
enter
enter
push
and
inc
push
pop
mov
outs
and
add
add
pop
dec
add
add
push
xchg
jb
and
push
mov
inc
mov
pushf
xchg
in
or
pushf
add
add
and
into
mov
pushf
dec
mov
mov
test
stos
adc
add
add
or
ds
add
stos
mov
iret
nop
out
jb
and
or
add
add
or
je
push
call
adc
adc
loop
lahf
gs
inc
mov
and
adc
add
add
out
push
inc
fwait
into
and
shl
out
cmp
cmp
jns
outs
out
lds
add
add
xchg
stos
cmp
or
mov
fsub
cli
(bad)
leave
fstp
aaa
icebp
add
add
je
or
std
add
jne
add
je
leave
cmc
xchg
xor
sub
leave
push
mov
out
jns
mov
add
pushf
pusha
mov
arpl
scas
rol
vcvtps2dq
movs
dec
dec
adc
mov
rcr
pop
aaa
shr
cwde
cmp
test
fist
nop
xchg
fcom
and
les
add
add
outs
pop
mov
data16
adc
shr
push
xchg
(bad)
retf
add
jmp
or
sub
push
lods
add
push
push
cs
jmp
xor
add
add
mov
loop
add
cwde
cli
sbb
mov
jmp
xor
sub
add
add
xor
pop
jo
add
jb
adc
sub
push
sub
(bad)
push
inc
hlt
jg
and
or
add
add
gs
rcr
dec
sub
push
nop
mov
in
adc
adc
xchg
stos
fidiv
add
popf
push
dec
out
push
int
jmp
sub
sub
in
or
fisttp
mov
mov
push
fadd
add
add
push
cs
pop
or
leave
and
popa
cld
jae
cmp
ror
dec
retf
jecxz
sub
inc
add
add
xchg
inc
mov
push
add
mov
add
stos
mov
cmp
into
pop
cld
mov
adc
push
mov
cld
div
add
add
fiadd
mov
mov
add
sar
mov
push
xchg
add
add
pusha
les
dec
adc
xchg
cld
pusha
jae
or
cdq
outs
adc
je
test
ins
add
add
mov
pop
scas
xor
movs
enter
push
ja
inc
mov
(bad)
cmp
add
add
movs
mov
mov
pop
bound
push
jae
push
or
sete
add
add
(bad)
mov
add
mov
in
sti
mov
xlat
adc
add
sub
clc
pusha
in
adc
push
mov
xor
pmulhuw
sub
out
adc
call
add
cmps
xchg
pop
mov
dec
jmp
dec
mov
lds
loop
cmp
sub
add
add
fisub
sbb
push
fwait
jo
test
pushf
cmp
lds
jmp
pop
and
test
add
add
jns
push
or
or
hlt
les
imul
inc
shl
ret
dec
or
fmul
into
add
add
test
test
sbb
repz
xchg
out
mov
shl
(bad)
jo
sbb
inc
xor
mov
add
add
out
and
enter
cmp
nop
aad
mov
push
sub
xchg
add
inc
je
mov
add
das
xor
sub
dec
cmp
icebp
sub
xchg
fs
add
shl
add
add
inc
loop
jnp
out
fstp
pop
aad
pusha
push
lds
sbb
push
mov
ds
add
add
bnd
rol
jne
mov
push
test
mov
xchg
imul
xor
stos
in
and
push
sub
add
add
or
ds
mov
push
ret
push
adc
adc
adc
call
fs
add
pop
in
pop
jle
jae
push
and
hlt
jmp
or
loop
jmp
or
add
add
add
push
rcl
jp
adc
jl
push
add
inc
add
add
add
xchg
cmp
ret
dec
movs
add
adc
stos
fst
push
push
das
jne
nop
xchg
(bad)
mov
mov
into
and
cld
loopne
repz
xor
cld
imul
shl
ret
add
add
shl
movs
outs
mov
mov
fst
jecxz
ret
fwait
xlat
mov
add
add
pop
lds
cmp
call
rcl
cmp
cmc
cmp
sti
add
add
dec
movs
imul
inc
aam
movs
fcmovnu
and
(bad)
inc
cmps
in
shl
jmp
mov
loope
xchg
xchg
or
dec
mov
sbb
mov
adc
je
mov
(bad)
std
add
add
fcomi
lods
clc
inc
mov
movs
fsub
push
stc
pop
into
ins
pushw
cmp
ror
push
call
add
in
sub
push
xchg
mov
mov
fs
push
push
jae
add
add
fild
das
clc
pop
xor
push
loop
xor
mov
jns
push
es
add
pop
add
add
add
lods
push
jo
add
push
fld
dec
sbb
nop
push
test
jb
(bad)
xchg
add
add
add
arpl
mov
retf
or
test
test
add
jne
lock
mov
lea
push
dec
cli
pop
ss
sbb
sbb
call
sbb
ins
sub
dec
jb
cmp
add
add
lock
enter
xchg
jle
jb
add
add
pop
daa
ins
shl
imul
add
inc
or
scas
adc
adc
in
dec
hlt
mov
xchg
or
out
xchg
sub
xchg
adc
add
add
sub
dec
or
xchg
sbb
mov
cmp
push
sbb
sbb
jo
pop
sbb
and
adc
add
add
cmp
jmp
iret
nop
sub
test
fist
popf
jl
bnd
or
add
add
push
adc
cld
mov
js
add
cld
mov
movs
pop
inc
cmp
add
add
push
dec
mov
xor
test
pop
xor
mov
jecxz
add
add
sub
cdq
in
sbb
dec
dec
iret
jnp
(bad)
out
(bad)
sti
pop
call
jp
pop
mov
cmp
and
stos
movs
lods
neg
stc
ins
fs
mov
dec
sub
jne
push
sub
mov
add
add
fcomp
js
repz
adc
gs
push
dec
mov
aaa
jne
pop
test
popf
add
add
and
jge
adc
pop
in
inc
mov
daa
fnsave
inc
inc
add
add
or
mov
inc
or
adc
sbb
jge
repnz
inc
lahf
fs
dec
cmp
xchg
bound
add
add
cmp
xor
or
jmp
iret
test
push
and
pop
imul
or
add
xchg
je
dec
jg
lahf
ja
popf
jl
cld
cdq
pusha
arpl
add
pop
scas
and
add
add
and
shr
out
retf
push
xor
adc
cmp
mov
fs
lods
int
stos
loop
dec
jmp
push
mov
hlt
loope
pop
data16
inc
and
add
add
pop
fisubr
inc
cmp
iret
retf
xor
pop
sti
pushf
ins
pusha
popf
cmc
mov
inc
lods
dec
dec
inc
jmp
out
test
test
cmc
push
or
jp
mov
shr
add
add
ret
jmp
movs
std
test
sub
or
inc
in
jp
nop
or
into
sti
and
push
mov
add
add
mov
cs
adc
fsub
enter
push
add
repz
je
push
dec
lods
add
add
aam
and
sub
lods
push
mov
test
sub
dec
stos
xchg
mov
aaa
cdq
pop
in
add
add
add
mov
dec
pusha
in
fwait
inc
pushf
mov
aaa
mov
les
shl
add
jae
leave
pop
les
or
retf
mov
fucom
mov
scas
mov
mov
jne
add
add
add
fdivr
mov
jbe
movs
rcr
rep
pop
jmp
retf
data16
outs
test
add
add
inc
sar
push
mov
bound
fmul
fstp
pop
mov
repz
out
xchg
xchg
out
mov
add
enter
sub
xor
in
das
fsub
pop
in
sub
pop
sub
(bad)
push
cmps
es
add
add
lds
mov
inc
call
push
add
sub
stos
cmps
adc
pop
xchg
shl
add
add
dec
inc
push
sbb
sub
(bad)
dec
and
jmp
into
jmp
pop
xchg
dec
scas
mov
add
add
push
ss
push
push
sub
shl
enter
and
sbb
jp
add
add
icebp
and
std
xchg
les
push
nop
xchg
push
mov
nop
mov
adc
xchg
in
add
add
and
mov
xchg
and
and
sbb
cld
dec
and
adc
cmp
add
add
and
mov
cmp
xlat
and
cmp
cmp
mov
mov
sub
or
push
pop
add
xchg
pop
mov
(bad)
ror
fmul
mov
mov
dec
cmp
les
push
adc
add
lods
push
out
cmp
mov
sub
and
add
mov
inc
clc
rcr
push
add
add
out
je
mov
cmc
dec
retf
pmulhw
inc
shr
cwde
push
adc
adc
and
xor
add
add
dec
setge
push
push
jmp
xor
xor
cmp
xchg
mov
inc
push
neg
fidiv
add
repnz
adc
ficom
jg
sbb
cmp
lods
adc
push
ja
inc
pop
shr
std
add
add
(bad)
and
leave
pop
call
push
in
push
jno
xor
fisub
lock
sub
add
add
jnp
das
sub
adc
inc
and
push
pop
jl
and
ficomp
call
add
aaa
dec
xchg
(bad)
sub
cs
in
sti
sub
lock
xor
add
add
inc
or
push
in
xlat
mov
jno
and
hlt
inc
or
dec
cmp
pop
sub
dec
stos
imul
mov
add
add
or
mov
sub
mov
jne
iret
fwait
pushf
pushf
dec
mov
sar
add
add
xchg
stos
cwde
push
pusha
dec
add
mov
hlt
icebp
aad
retf
scas
and
(bad)
fld
dec
sti
adc
ret
add
add
int
add
add
fs
mov
push
je
or
add
add
and
xchg
out
mov
lods
adc
adc
sbb
or
pop
adc
push
add
add
or
mov
dec
mov
mov
mov
add
pop
xor
mov
add
add
dec
and
into
sbb
push
and
mov
sub
aam
(bad)
push
dec
aad
adc
add
add
js
mov
jg
xor
fwait
(bad)
repnz
sub
push
call
mov
add
add
mov
cmp
nop
jae
pop
add
pusha
mov
movs
mov
add
dec
sbb
mov
iret
out
and
(bad)
or
popa
std
mov
dec
shl
loop
cld
cmp
cmp
add
add
inc
int3
xchg
mov
adc
push
cmps
mov
and
dec
out
enter
add
jmp
jp
cdq
imul
ins
adc
imul
idiv
shl
adc
mov
add
mov
fwait
xor
inc
ds
(bad)
fsubr
shl
adc
mov
dec
add
add
in
cmp
fsubr
imul
push
daa
ret
mov
dec
add
inc
(bad)
pop
stc
push
jo
push
mov
test
pop
mov
xchg
adc
or
lahf
and
rol
loop
xor
inc
push
add
mov
push
mov
push
adc
adc
or
add
add
xchg
cmovo
jmp
and
push
rol
mov
loop
shl
retf
dec
mov
inc
cwde
rol
cwde
add
add
and
dec
jb
mov
lock
adc
or
or
pop
ret
add
add
mov
xchg
push
lds
dec
or
pop
or
or
mov
add
ins
(bad)
lods
mov
push
cmp
popa
push
inc
mov
add
mov
add
call
imul
cdq
idiv
xchg
call
pop
mov
je
add
add
mov
in
adc
rol
ds
jb
aaa
add
cld
mov
add
add
lds
cmp
push
or
sbb
dec
in
and
das
push
add
add
ret
push
cmp
mov
mov
xchg
dec
mov
mov
pop
and
add
sub
add
add
push
jge
or
adc
mov
mov
je
(bad)
loopne
lea
sbb
aam
push
add
add
or
push
js
xchg
gs
add
mov
fs
fs
loop
inc
(bad)
cmovne
add
add
mov
or
fdivr
mov
inc
mov
addr16
xchg
cmp
neg
add
add
stos
inc
frstor
cwde
push
sbb
dec
shl
push
daa
push
ds
dec
ins
or
push
ror
jo
add
add
mov
sar
sbb
sub
and
adc
adc
icebp
xchg
ins
and
adc
pop
mov
push
gs
adc
sub
or
dec
jo
stos
mov
adc
push
cmp
cmp
cmp
pop
cdq
dec
jge
imul
jg
(bad)
rol
in
adc
add
add
xchg
ret
arpl
and
jmp
je
aam
jae
mov
stos
fwait
mov
cli
mov
fild
add
add
jmp
and
jg
mov
lods
or
fst
and
fsub
or
add
and
imul
jge
cmp
jo
popf
pop
sbb
mov
stos
push
dec
mov
cdq
cmp
nop
push
mov
call
or
repnz
xlat
or
add
xor
dec
fs
out
ret
mov
xchg
xor
fimul
or
sahf
push
adc
cli
sub
add
pop
(bad)
outs
dec
and
or
mov
fwait
aam
adc
cld
sub
add
jp
push
xchg
and
pop
sti
add
xchg
aam
das
pusha
jnp
push
xor
repz
mov
mov
add
add
or
xlat
inc
cmp
and
sub
adc
dec
imul
nop
das
push
push
add
add
adc
and
or
lea
jg
mov
mov
mov
sub
pop
adc
add
add
mov
ja
lods
es
or
jmp
mov
rol
ret
lock
xchg
aad
add
add
and
adc
or
mov
fwait
xchg
push
xchg
lock
add
mov
test
add
add
or
cmp
inc
daa
ja
mov
sbb
adc
add
push
jns
jle
retf
call
push
data16
or
mov
repnz
mov
cmp
add
inc
rol
add
add
sar
xchg
and
shr
sbb
loopne
jo
or
mov
add
inc
hlt
mov
push
adc
(bad)
mov
or
fcomp
fmul
pop
ja
enter
fwait
add
add
or
cmp
mov
jecxz
pop
ja
pop
mov
nop
shr
outs
mov
push
add
add
dec
dec
sub
xchg
movs
sub
inc
aam
jl
inc
xchg
js
ins
shr
xchg
ins
iret
ret
xchg
add
add
sahf
out
nop
and
fwait
inc
scas
ret
cmps
mov
jl
inc
xlat
ins
sub
stos
loop
dec
scas
add
add
and
fdiv
jmp
cmp
mov
xchg
cmp
sbb
mov
dec
add
add
call
call
push
aaa
loopne
(bad)
loop
jg
add
clc
jae
xchg
add
add
push
popa
push
hlt
jmp
dec
into
xor
xor
pop
(bad)
in
std
rcl
in
or
and
sbb
xchg
dec
shr
and
mov
jo
dec
or
neg
sbb
or
dec
fild
add
add
(bad)
and
ins
daa
aas
cmp
das
add
fucomp
add
sub
popf
jge
pop
pop
pop
add
loope
add
add
(bad)
push
adc
jmp
add
fs
sub
sbb
aad
dec
xchg
add
(bad)
xor
add
add
cld
push
out
sub
scas
popf
pop
sub
pusha
mov
std
push
cmp
push
mov
das
inc
daa
add
add
mov
cli
into
pusha
adc
sub
sbb
jle
popf
jne
pop
or
call
add
test
mov
mov
fistp
int3
lock
inc
and
add
add
int
cld
cs
jns
out
sub
ds
ins
push
pop
fdivr
jge
sub
and
adc
add
add
mov
mov
stc
and
pop
arpl
out
mov
(bad)
adc
adc
add
add
(bad)
cmp
sub
sub
pusha
inc
sar
(bad)
test
adc
add
add
or
aas
outs
mov
push
mov
ins
mov
inc
inc
xchg
in
sub
and
or
add
add
xchg
(bad)
dec
sub
adc
(bad)
xlat
jb
inc
retf
jno
ds
lods
adc
push
mov
push
je
cmc
test
stos
popf
test
mul
repz
pop
ret
aam
or
stos
sbb
cld
add
add
sbb
push
ss
ins
test
dec
vmread
adc
jbe
imul
adc
add
add
hlt
test
xchg
call
xchg
xlat
(bad)
loop
dec
or
push
scas
ret
mov
add
add
loopne
xchg
push
mov
movs
sti
adc
lods
stos
loope
add
jle
xchg
xchg
pop
std
add
pushf
xchg
sub
add
fsubr
push
jmp
mov
ret
ds
jg
enter
cmc
sub
dec
mov
lahf
nop
and
(bad)
int
dec
or
out
pop
fsubr
jnp
mov
add
movaps
adc
jb
(bad)
mov
pop
jo
push
movs
sbb
dec
js
sub
add
add
ja
push
call
retf
jp
rcr
dec
or
jg
inc
scas
jne
shl
iret
in
push
add
add
sbb
or
jle
ret
cmc
(bad)
push
out
sub
push
pop
stc
mov
add
add
fcmovu
pop
dec
adc
cmp
jo
mov
pusha
jo
mov
loop
(bad)
push
xchg
enter
add
add
jne
xor
retf
lds
jae
test
shr
add
xchg
add
add
and
mov
nop
or
adc
mov
mov
stc
sbb
mov
ret
and
lock
retf
add
add
stc
ret
jmp
mov
popf
xchg
mov
test
std
data16
push
sub
add
add
jmp
jo
cwde
xor
dec
cmp
fwait
rcr
nop
nop
adc
dec
loopne
in
adc
push
std
add
add
sbb
adc
dec
add
jno
int3
jb
mov
mov
(bad)
(bad)
hlt
add
and
je
add
lods
ins
shl
cmp
test
pop
mov
(bad)
pop
sub
sbb
dec
xchg
xchg
or
add
retf
push
cs
imul
scas
in
dec
in
dec
scas
xchg
pop
outs
mov
adc
dec
fsub
jle
ret
add
add
lods
sbb
pop
or
(bad)
adc
and
test
loope
and
jne
add
add
out
pop
and
xchg
xchg
dec
mov
add
adc
pop
out
in
test
int3
icebp
push
add
add
cmp
stc
jmp
inc
movs
push
into
jo
lahf
sub
je
jbe
and
xor
iret
sbb
mov
add
add
dec
ins
lods
addr16
je
out
test
in
cmp
add
add
pop
mov
les
repz
mov
je
in
cmp
adc
test
add
cmp
repnz
push
fbld
add
add
imul
mov
sub
dec
jo
loopne
xchg
jmp
push
mov
mov
add
add
xor
pop
xchg
dec
xchg
add
fmul
jle
(bad)
out
sub
ja
pop
movs
repz
add
add
add
inc
add
pop
xor
cli
mov
fwait
and
loope
push
adc
lods
add
add
pop
sti
jge
imul
and
retf
add
test
imul
das
add
add
or
push
call
lds
dec
push
popw
jbe
xchg
std
mov
pushf
mov
add
add
aas
out
std
sti
jmp
movs
neg
retf
mov
jmp
das
in
jl
das
dec
jnp
xor
lock
add
add
rcr
push
push
mov
xor
aam
push
fdivrp
sbb
test
cmp
jo
sub
sub
lock
movs
rcl
mov
add
shl
stos
call
or
add
movs
xchg
add
pop
ficomp
pop
clc
enter
xchg
(bad)
repnz
or
adc
pop
pop
push
add
add
push
cwde
xor
push
and
call
ins
mov
pop
xlat
stos
jbe
fs
and
mov
add
add
mov
sub
mov
fs
cmps
xchg
stos
cmps
in
jae
clc
push
pusha
into
push
add
sbb
stos
push
or
enter
les
xor
mov
mov
add
jno
push
iret
or
jle
push
add
add
cmp
imul
test
add
add
fidiv
call
mov
shl
push
sub
sub
call
and
mov
mov
sub
retfw
ja
(bad)
aad
adc
pop
in
or
xor
ins
dec
mov
adc
fs
fdiv
les
call
(bad)
daa
ins
jo
add
add
adc
sti
xor
add
jmp
pushf
test
push
sbb
in
add
add
jnp
lea
mov
adc
xchg
jmp
add
mov
call
add
pop
aaa
stos
js
adc
push
out
mov
push
mov
loopne
add
add
add
stc
push
adc
retf
in
push
repnz
dec
mov
mov
xchg
mov
popa
mov
pop
add
add
jmp
cmc
mov
pop
(bad)
shr
or
push
dec
es
loop
mov
add
add
mov
clc
jo
sub
pusha
ja
inc
jmp
das
(bad)
es
hlt
adc
adc
jne
add
add
adc
in
add
and
adc
xchg
fwait
pop
icebp
or
js
mov
add
add
(bad)
int3
popf
dec
and
popf
and
push
push
std
push
cmp
jl
fadd
add
add
pop
jne
daa
popf
sub
or
mov
sub
sbb
add
jb
in
scas
xor
stos
push
mov
mov
test
nop
(bad)
loop
cmp
ror
dec
add
add
lock
retf
mov
movs
leave
enter
movs
or
adc
sar
cmp
add
add
xchg
and
(bad)
retf
imul
test
adc
shl
cmp
inc
ins
inc
add
add
add
es
shr
pop
jmp
rol
sbb
dec
ins
iret
sbb
mov
adc
add
add
in
ret
outs
idiv
or
mov
inc
jle
int3
sbb
movs
add
add
adc
cmps
fidiv
leave
aad
(bad)
ins
and
mov
neg
inc
inc
and
clc
pop
xor
add
add
shl
gs
push
(bad)
aam
add
icebp
std
xchg
je
popf
loop
push
push
sahf
mov
mov
or
inc
mov
pop
dec
push
dec
loopne
cld
popf
sti
push
stos
aaa
mov
pop
adc
add
add
or
add
ja
cld
jb
push
and
add
jae
dec
jl
add
add
aam
sub
dec
cwde
and
xor
jbe
dec
mov
mov
and
fdivr
fcmovu
sti
cmp
aam
push
pusha
inc
xlat
jl
xor
jno
push
adc
xor
cmp
mov
inc
call
add
xchg
test
jmp
mov
sahf
push
pop
inc
lods
loopne
and
push
jle
jnp
add
add
mov
sti
cmps
rol
movs
sub
push
jae
in
dec
pop
(bad)
jmp
add
add
push
push
jecxz
dec
scas
add
push
or
mov
jmp
or
add
and
cli
inc
pop
movs
js
mov
xchg
daa
push
in
add
add
add
and
mov
mov
jno
push
lods
or
and
cli
pushf
pusha
inc
fxch
pop
pop
add
add
mov
pusha
test
mov
out
or
jo
lods
ror
mov
hlt
dec
adc
add
add
jne
mov
popf
jo
mul
fisubr
and
xor
push
retf
sti
add
add
and
or
adc
adc
xchg
popa
push
fcomp
pop
cld
leave
shr
out
and
enter
add
in
cmp
outs
fwait
dec
pop
out
jns
cmp
jno
add
jl
mov
add
add
dec
ins
push
sub
inc
xor
out
push
sbb
mov
cmp
xchg
pop
push
aaa
mov
jle
add
add
dec
mov
shl
sbb
and
adc
fstp
jg
nop
push
mov
cmp
add
add
adc
or
mov
push
sub
push
out
pop
inc
mov
add
add
test
push
mov
inc
pushf
mov
xor
mov
pop
inc
out
in
scas
jg
add
add
sub
(bad)
fidiv
mov
push
pop
lock
jl
xlat
lds
out
xchg
and
jmp
mov
sub
nop
sbb
or
or
or
nop
inc
jecxz
sbb
out
stos
cmp
add
add
push
and
invd
sti
fld
scas
pop
jns
dec
push
xor
bound
push
sbb
add
add
inc
retf
jg
xchg
xchg
fwait
das
jmp
sbb
mov
retf
jmp
cmc
lods
add
add
add
cmp
push
stos
xor
in
and
or
imul
icebp
icebp
add
add
add
push
xor
movs
push
rcl
in
call
js
mov
push
in
add
add
stos
sub
push
mov
out
repz
dec
dec
loopne
dec
add
ins
jbe
cmc
mov
add
add
cs
cmp
mov
fstenv
push
add
sbb
bound
arpl
add
add
int3
mov
xor
sti
adc
sti
add
push
inc
dec
xchg
sbb
mov
fimul
inc
add
into
inc
outs
add
add
jecxz
add
xor
fidiv
jnp
movs
jno
or
ds
jo
and
add
push
fld
fcom
push
clc
mov
pop
xchg
scas
into
dec
sub
push
je
cld
ret
enter
add
sub
mov
mov
or
sub
push
nop
and
cld
mov
adc
add
enter
push
inc
repnz
jge
nop
and
dec
scas
int
lods
sbb
jmp
inc
out
imul
addr16
and
inc
or
ja
cdq
shr
adc
movs
movs
or
jl
movs
pop
add
add
nop
mov
sub
dec
pop
sbb
mov
inc
or
adc
mov
pop
in
sti
leave
add
add
jecxz
repnz
mov
aad
xor
push
jmp
mov
hlt
into
imul
add
(bad)
movs
clc
and
shr
push
mov
push
std
mov
rcl
aas
mov
add
add
sar
cmp
adc
dec
and
push
inc
daa
imul
dec
dec
add
add
jle
inc
loopne
xchg
cwde
cmc
xchg
push
inc
or
inc
mov
cld
cmps
enter
add
add
add
(bad)
lods
rcr
xor
fiadd
mov
bound
cmp
or
call
xchg
adc
cmc
jge
call
enter
lods
and
shr
call
test
loop
dec
mov
push
cld
fs
repz
add
fs
lahf
cmc
out
sub
mov
push
call
push
adc
mov
(bad)
in
bound
add
add
fcmovnu
daa
sbb
gs
mul
arpl
fst
das
fimul
add
add
adc
pop
sub
sbb
mov
mov
loop
hlt
add
xchg
add
add
cmc
xor
dec
int3
jp
dec
cmp
fiadd
pop
out
lock
mov
pop
cli
pop
imul
mov
add
mov
aad
pop
mov
sub
(bad)
shl
sub
inc
loope
scas
imul
sti
cld
call
add
test
push
ret
repz
test
cmp
push
repz
add
add
or
xchg
inc
adc
lahf
and
out
shl
sub
(bad)
and
scas
pop
xchg
add
add
test
mov
hlt
in
rcl
or
das
mov
sbb
xchg
mov
call
das
mov
sbb
sub
cmps
cs
das
jnp
sti
sbb
and
fs
add
add
add
icebp
or
bound
cmp
cmp
fcomip
push
dec
mov
icebp
fwait
cmp
add
add
stos
mov
aad
fs
(bad)
loop
pop
shl
int3
push
test
(bad)
xor
add
add
(bad)
xlat
mov
inc
retf
fstp
scas
mov
(bad)
xchg
ret
inc
cmp
shl
pop
repnz
add
gs
xor
mov
iret
cmp
(bad)
xchg
inc
mov
ror
mov
repnz
xor
add
add
addr16
stos
adc
retf
lods
retf
hlt
int
cmps
jns
xchg
or
sub
(bad)
mov
add
add
push
jno
jns
mov
sub
cmps
mov
imul
(bad)
add
add
mov
jg
inc
std
in
dec
mov
mov
push
dec
sub
scas
int
push
dec
add
add
repnz
cmp
push
int3
das
popf
scas
cmp
stos
mov
mov
test
add
rol
popf
popf
shr
pop
adc
imul
out
int3
or
stc
jmp
jl
add
add
mov
inc
push
mov
cmps
jmp
sbb
and
sub
add
add
ret
xchg
(bad)
xchg
adc
(bad)
loopne
popf
xchg
cmp
or
out
div
nop
hlt
mov
daa
dec
add
add
xor
into
push
add
lahf
(bad)
fisubr
lods
dec
jmp
and
push
fs
add
add
cs
inc
daa
hlt
pop
push
inc
lock
sub
add
movs
pusha
shl
pop
or
adc
add
add
sbb
sbb
adc
loop
sbb
sub
and
cmp
cmp
adc
inc
sbb
dec
mov
add
add
push
and
cmp
pusha
loop
sbb
push
push
and
cmp
add
test
push
push
test
and
lea
inc
pushf
enter
sbb
test
lods
ins
mov
add
add
ss
mov
sbb
enter
ror
ss
fmul
loopne
in
add
add
jp
xchg
push
mov
push
mov
push
jns
sbb
clc
fs
ins
rol
and
or
xchg
add
add
adc
enter
sbb
and
sub
xchg
xor
enter
sbb
inc
fdivr
add
dec
lea
inc
fld
add
add
and
ins
ins
lea
inc
js
jl
sbb
test
in
jmp
push
nop
push
add
add
in
adc
push
fsub
inc
or
test
mov
and
mov
pop
add
add
in
loope
(bad)
push
adc
shl
or
xor
adc
add
add
iret
jnp
icebp
imul
pop
rcl
xchg
rol
xor
sbb
leave
mov
add
add
fild
(bad)
retf
nop
sub
and
xchg
dec
imul
mov
add
add
adc
mov
mov
aad
scas
adc
add
std
adc
fdivr
cmp
cmp
add
add
xchg
call
fdivr
out
mov
call
loopne
mov
push
mov
add
add
lock
push
push
(bad)
pop
into
cli
inc
ins
inc
lock
adc
bound
cli
push
jl
jmp
add
add
stc
dec
mov
das
sub
inc
fs
stos
sub
jmp
rcr
aas
pop
movs
sub
aas
cwde
and
add
outs
pop
and
repnz
inc
push
sti
cmps
loopne
dec
nop
imul
add
add
movs
jne
stos
and
xchg
add
test
inc
add
out
outs
imul
add
add
push
cmp
adc
pop
cmc
inc
push
inc
jmp
imul
test
add
add
mov
ds
and
loopne
adc
or
scas
adc
jmp
shr
mov
add
hlt
jge
cmp
and
dec
dec
movs
pop
jle
call
push
mov
xchg
pop
mov
mov
add
in
adc
bound
jo
push
push
inc
hlt
xchg
mov
(bad)
popa
movs
repz
sub
push
or
add
add
ds
pop
push
dec
adc
push
das
fdiv
cmp
adc
gs
jle
inc
cmp
ret
jecxz
add
add
adc
jmp
sti
jl
fcom
mov
cmp
or
nop
dec
xchg
xchg
stos
cmps
or
add
add
mov
das
scas
jno
jmp
das
jmp
dec
or
or
std
sti
dec
sub
retf
and
int3
push
ja
add
add
movs
mov
mov
test
cs
shl
push
das
pop
pop
nop
jmp
dec
jns
add
add
dec
pop
and
fldcw
and
mov
sbb
jne
push
sub
fsubp
jl
add
add
daa
jne
adc
jmp
repz
loope
js
call
adc
dec
adc
outs
inc
mov
add
add
cld
jo
mov
xchg
inc
mov
push
mov
out
inc
loopne
sub
inc
push
push
add
push
xlat
push
jne
dec
and
(bad)
push
(bad)
jb
fisttp
adc
push
iret
cld
rcr
sub
add
push
pop
mov
test
and
nop
mov
fs
push
and
rol
add
add
das
daa
mov
outs
imul
icebp
in
je
mov
das
scas
popa
add
add
pop
mov
mov
repz
fwait
clc
nop
loopne
adc
std
push
mov
in
out
cmc
clc
add
add
in
mov
nop
dec
mov
or
fs
out
mov
les
leave
mov
cmc
pop
add
add
add
jo
js
fwait
cmps
jae
dec
sbb
(bad)
add
and
cmovl
add
add
pop
and
mov
test
add
cmc
test
loopne
jmp
mov
or
xor
popf
jae
add
add
cmovg
jmp
sti
test
inc
inc
dec
scas
and
add
sub
pop
sub
cmc
cli
lea
cmp
add
add
jnp
stos
or
stos
sub
fld
pop
adc
mov
dec
popf
pop
sub
add
add
jmp
in
mov
lods
inc
jg
and
xchg
push
adc
add
and
inc
add
in
ror
jle
int3
push
or
mov
in
and
push
add
add
fs
dec
(bad)
mov
or
outs
cmp
dec
mov
push
jle
jae
stos
cdq
lds
add
dec
cmp
aas
(bad)
dec
mov
pop
aam
xchg
pop
pop
leave
jge
xchg
adc
mov
mov
aam
jle
add
add
adc
push
dec
adc
adc
jne
shl
call
adc
mov
add
je
and
and
pop
bound
and
add
call
sti
(bad)
(bad)
cmc
imul
xchg
cmp
inc
loopne
nop
clc
inc
xor
jp
or
stos
scas
cdq
adc
xchg
jp
mov
dec
add
add
pop
pop
xor
fst
xor
pop
cmp
adc
ins
adc
rcl
leave
rol
(bad)
dec
aad
add
add
mov
mov
push
test
leave
inc
sbb
mov
push
repnz
repz
call
mov
add
xchg
int3
repz
or
enter
or
mov
cmp
jne
mov
add
add
and
mov
std
lods
jae
cmp
addr16
mov
adc
push
outs
call
add
add
adc
mov
rcl
movs
push
mov
push
mov
test
test
mov
cmp
add
add
push
cmp
adc
jne
dec
mov
cmp
dec
scas
loopne
add
add
mov
push
cmp
xlat
or
mov
fistp
int3
dec
push
xor
jmp
test
dec
(bad)
xchg
lock
(bad)
in
jmp
iret
jp
cld
test
and
push
push
ins
ror
xor
cdq
cmps
cdq
enter
xchg
cmp
or
stos
(bad)
and
fadd
add
call
out
add
mov
jmp
xor
pop
jmp
lea
add
add
fist
imul
xchg
pushf
ret
inc
test
xor
push
xor
sub
add
add
shr
jbe
xor
imul
pop
or
add
inc
cmp
int3
add
add
popf
sub
retf
push
dec
push
inc
loopne
je
test
xchg
fcomi
dec
out
xor
mov
lock
in
in
inc
push
cmps
popf
dec
jne
jb
test
pop
xor
inc
add
xor
(bad)
add
add
ficom
add
push
pusha
jo
mov
push
adc
sbb
imul
add
add
push
adc
inc
cld
jo
mov
xchg
ret
cmp
test
sub
add
add
aaa
inc
inc
sbb
test
mov
xchg
jecxz
nop
out
out
adc
fcmovu
jo
add
add
sbb
mov
jnp
cmp
sbb
inc
int
js
outs
inc
dec
pop
sbb
jo
or
enter
pop
data16
xor
sahf
lods
mov
push
xchg
imul
add
cmp
fs
and
loopne
es
loope
or
jmp
test
jne
mov
sub
sar
push
(bad)
stos
push
cdq
pop
and
test
cli
xchg
ret
xor
popf
pop
add
add
jmp
cmp
push
retf
jge
pop
and
cmp
push
inc
movs
push
or
add
add
adc
jmp
pop
jmp
inc
rcl
mov
mov
lds
add
add
fld
in
xchg
lock
out
bswap
rcl
scas
adc
add
imul
add
add
cdq
and
call
je
adc
adc
or
mov
add
sub
loopne
fmul
(bad)
xor
mov
add
inc
leave
push
dec
fsub
or
push
cmp
xchg
clc
cli
pop
add
add
fcomp
ror
dec
mov
sub
pop
push
cmc
mov
in
lods
std
sub
es
and
add
add
mov
mov
gs
adc
mov
sbb
and
mov
enter
and
or
xor
mov
fistp
ds
push
adc
je
mov
push
fidivr
xor
add
add
scas
je
stos
ret
push
lahf
add
fimul
jl
push
mov
cmp
mov
call
xchg
jl
sbb
pushf
bound
les
dec
xor
jo
(bad)
cmps
ja
add
add
loop
sub
sub
lahf
test
push
push
(bad)
hlt
add
adc
add
aad
push
push
and
leave
push
inc
push
(bad)
mov
and
cmp
add
in
push
jmp
fst
cs
test
mov
shr
inc
add
add
xchg
inc
adc
push
daa
dec
fcmovnb
dec
cmp
dec
call
lods
adc
add
add
das
xchg
mov
jmp
or
dec
out
inc
ret
and
mov
add
outs
pop
cwde
push
sbb
fst
or
adc
jmp
aam
retf
lock
mov
stos
fadd
add
add
aas
mov
in
or
sub
test
pusha
mov
test
je
mov
or
adc
pop
mov
jecxz
push
or
nop
stos
mov
push
cmp
jp
in
das
retf
add
add
mov
lock
jo
dec
stos
into
push
mov
loope
jmp
mov
stos
add
add
push
cmps
arpl
push
mov
xchg
mov
jne
xor
xchg
cli
sub
mov
nop
mov
add
add
inc
dec
sub
mov
outs
out
or
and
adc
mov
jmp
add
pop
jp
test
sbb
sar
adc
out
dec
sti
add
call
xor
add
add
cmp
dec
inc
jns
stc
or
test
jmp
pop
or
aas
push
sbb
cmp
add
add
pop
jmp
in
stc
inc
jge
jl
mov
and
jmp
aad
lock
das
stos
push
ja
or
lock
ret
test
push
aam
and
sbb
and
js
mov
inc
or
add
mov
jae
push
mov
inc
out
adc
sbb
movs
jge
jl
ds
add
add
popa
add
ret
sar
sub
sub
div
leave
push
pop
mov
add
add
dec
mov
shr
(bad)
dec
xor
mov
pop
lahf
outs
pop
cdq
push
movs
ds
cwde
ds
and
add
add
dec
adc
neg
and
in
jmp
outs
or
xchg
in
pop
or
iret
cmps
push
or
pop
pop
mov
pop
fldenv
or
lock
fimul
mov
stos
inc
adc
add
add
mov
push
mov
or
mov
shl
inc
dec
add
ret
add
add
cmp
add
popf
cli
ins
das
push
shr
es
(bad)
mov
xchg
daa
hlt
ja
add
add
fmul
not
push
stos
adc
dec
xchg
or
pop
mov
or
add
add
push
sbb
leave
rol
push
push
aad
mov
lds
sub
jno
sub
mov
jmp
out
pushf
das
and
dec
out
sub
inc
cdq
cwde
cmc
cmp
int3
xlat
neg
xchg
add
add
jae
sub
xor
into
xchg
fild
scas
fmul
je
scas
or
add
add
ins
adc
dec
adc
bound
es
push
das
mov
lods
sub
sbb
push
mov
add
add
dec
jmp
add
jbe
pop
rcl
cli
repnz
fmul
and
fldcw
push
mov
add
mov
mov
test
push
push
ins
and
adc
mov
push
sbb
add
add
aad
jae
cmp
jnp
and
xchg
or
dec
scas
test
mov
add
jl
enter
push
cld
sub
nop
stc
inc
rol
dec
xchg
mov
cmps
adc
add
mov
pop
dec
push
mov
sub
loop
xchg
xor
or
int3
popa
add
add
sbb
push
sbb
hlt
cmp
(bad)
jg
ss
or
sub
(bad)
dec
pop
or
xor
xchg
add
add
aad
push
xor
xchg
jg
add
ficomp
enter
and
sbb
loop
mov
add
add
mov
jnp
or
(bad)
not
stos
xchg
loopne
and
pusha
cli
jg
loopne
fmul
add
add
pop
xchg
jns
sub
fs
mov
pop
push
stc
add
sub
into
mov
inc
dec
pop
add
add
lds
jp
dec
push
sub
dec
out
xor
inc
cwde
sub
or
jno
and
mov
add
add
sbb
lods
sbb
inc
stos
push
jno
movs
jl
mov
call
sbb
xor
dec
add
add
call
dec
jl
das
xchg
(bad)
sub
test
repnz
lahf
sbb
aam
jge
add
add
sbb
and
pop
pop
adc
cmp
dec
push
aam
pop
test
movs
add
add
inc
cmp
(bad)
add
daa
loop
clc
jb
dec
pop
sub
sub
pop
sti
icebp
pusha
das
lahf
mov
add
cmp
cli
xor
cmp
into
stos
sub
mov
add
inc
not
xchg
add
add
(bad)
jo
adc
xor
add
xchg
cli
sub
ja
ror
xor
add
add
dec
cld
sub
and
and
mov
loope
jnp
inc
pop
push
cmp
rcl
sbb
das
mov
xchg
retf
and
scas
in
cmps
in
xchg
dec
xor
bound
add
add
push
jae
not
dec
fsubr
push
jg
scas
lods
cmps
rcl
sub
shr
jge
pop
enter
add
and
repz
pop
int
(bad)
push
sub
aad
je
and
adc
inc
add
add
sub
xchg
lea
shl
jno
test
scas
mov
out
je
sti
pushf
mov
fwait
xor
add
add
xor
clc
cmp
scas
icebp
or
mov
sbb
and
add
add
add
aad
dec
ja
or
inc
xchg
enter
dec
cmp
or
fxch
xchg
push
mov
add
adc
push
and
cmps
aam
sahf
cli
lods
lods
xchg
call
lea
add
add
jbe
out
cwde
jmp
or
ret
push
stc
pop
cmp
cmp
dec
add
bound
push
dec
xchg
or
icebp
int3
call
push
and
dec
or
sti
lahf
call
xchg
add
add
push
dec
loop
(bad)
jb
cmp
dec
mov
dec
sub
mov
popa
sub
pusha
dec
lods
ret
stos
add
add
and
pushf
shl
push
xchg
mov
mov
xlat
adc
jne
push
les
and
add
add
mov
jae
or
jmp
xchg
je
xor
pop
outs
fst
sub
xor
int
push
cmp
add
add
add
ins
dec
add
or
fs
dec
aam
adc
add
push
(bad)
mov
add
and
pop
inc
(bad)
and
mov
je
lock
arpl
test
cmc
lea
add
add
(bad)
push
xlat
sub
jecxz
lock
sbb
xchg
lds
mov
je
sbb
push
out
cmc
mov
mov
push
sub
or
push
or
jmp
jmp
push
in
cmp
add
add
mov
repnz
or
stc
or
pop
fcmovb
leave
imul
imul
add
out
inc
les
dec
outs
fs
xchg
into
push
aaa
cld
xchg
pop
daa
mov
jp
rol
add
sub
push
sub
xor
adc
lods
les
imul
inc
sar
inc
and
sbb
leave
pop
xchg
add
add
adc
sbb
call
aaa
das
inc
lds
cmp
sbb
neg
mov
add
add
sub
sub
xchg
mov
ffree
pop
add
hlt
leave
jp
sub
(bad)
rol
add
add
adc
lock
lar
(bad)
inc
icebp
jbe
dec
cdq
pop
adc
add
add
test
cmc
mov
xor
xchg
pusha
je
outs
lock
dec
pusha
and
sbb
add
add
ins
dec
adc
jae
ds
inc
cmp
xor
push
dec
add
fcomp
shr
sub
add
add
test
xor
jge
aas
cmp
mov
je
pop
push
ins
xor
fbld
mov
adc
data16
inc
inc
es
inc
sahf
xchg
mov
mov
add
add
mov
xor
sub
sbb
imul
test
sbb
or
daa
in
lods
add
add
lock
push
push
imul
add
loopne
and
sub
xor
cmp
lds
cmp
gs
cmp
add
lods
daa
aas
pop
mov
std
xchg
sbb
loope
add
enter
sub
add
rcr
ja
out
in
cmp
xchg
vpaddusb
cmps
nop
pushf
lods
mov
dec
popa
mov
dec
add
add
adc
add
call
mov
ss
sub
(bad)
or
adc
xchg
dec
add
jle
call
fcomp
int
or
imul
daa
rcr
hlt
cdq
add
add
mov
das
repnz
daa
or
push
sub
push
retf
aas
push
xor
ja
loopne
fiadd
add
add
inc
call
and
dec
shl
adc
adc
mov
push
dec
out
stc
cwde
inc
xchg
data16
add
add
xor
or
int3
jp
sbb
sbb
cmp
jno
dec
jp
outs
add
add
mov
xchg
mov
jae
xchg
add
ds
es
cmp
cmp
add
add
sub
or
adc
fisub
or
hlt
test
nop
cmp
lea
add
jmp
test
repz
in
out
rol
jg
cmp
cmps
add
add
popf
mov
mov
pop
adc
ret
or
(bad)
jp
mov
lds
add
add
dec
add
adc
sub
sub
xchg
in
jge
add
add
mov
adc
pop
adc
cmp
je
and
or
or
pop
or
xor
add
add
and
pop
lea
pop
popf
nop
int3
or
push
in
mov
xlat
jae
test
popf
adc
jl
mov
add
add
sbb
pop
cmp
iret
sub
fiadd
movs
mov
rol
add
add
push
seta
stc
jne
lahf
cmps
aad
aas
jne
leave
hlt
sub
cmp
movs
inc
test
add
add
ret
pop
jo
mov
outs
cmp
adc
pushf
cmp
fmul
lods
and
add
(bad)
mov
adc
xor
mov
hlt
out
jo
movs
jnp
ins
jnp
cld
add
add
push
xor
sub
push
in
inc
push
jl
in
push
and
inc
jge
imul
sub
add
add
sub
imul
xchg
pop
ret
push
enter
pushf
inc
pop
mov
jge
add
add
push
inc
add
(bad)
push
or
cmp
or
and
mov
dec
add
add
in
fld
xchg
lock
add
add
jmp
imul
mov
add
add
inc
xchg
or
jns
push
mov
adc
adc
test
sub
jecxz
xchg
add
add
ins
sbb
nop
sub
inc
test
iret
mul
bound
adc
and
add
or
ret
sbb
test
cwde
dec
mov
or
sbb
add
add
je
ja
(bad)
sub
hlt
or
sub
adc
mov
sbb
xchg
add
add
mov
(bad)
cmp
push
mov
in
cmp
mov
xor
adc
add
add
sbb
das
sbb
dec
into
dec
mov
pop
lods
(bad)
in
test
ins
adc
inc
xchg
out
add
add
lea
inc
mov
les
dec
xchg
nop
dec
mov
nop
dec
rcl
add
add
jp
xchg
enter
xchg
xor
push
std
cmp
pop
dec
push
and
and
gs
stc
add
add
fisttp
es
mov
sbb
sub
mov
popf
xchg
sub
inc
xchg
add
cmp
test
push
push
adc
dec
push
stos
mov
and
add
rcl
data16
js
cli
sub
add
and
xchg
lea
nop
add
add
imul
push
pop
fiadd
or
dec
push
ficomp
sub
inc
or
repnz
add
add
in
xor
dec
sub
or
pop
and
or
and
or
movs
cdq
mov
lock
add
add
popa
adc
sub
cli
cmp
adc
or
inc
xor
retf
inc
xlat
fwait
in
dec
mov
add
test
call
jmp
ficomp
pop
jns
dec
jmp
jg
pop
push
aam
adc
sbb
fmul
sbb
jne
or
and
in
push
xor
inc
ret
add
add
push
sbb
inc
sbb
adc
cmp
and
add
outs
jge
sbb
and
add
push
int3
sub
adc
(bad)
in
and
jmp
leave
add
mov
mov
ins
jae
xchg
or
add
add
push
pop
mov
push
adc
mov
daa
cmc
adc
add
or
in
add
pop
sldt
add
xchg
or
lods
test
ins
inc
and
or
adc
aam
rol
push
push
cmp
add
add
mov
stc
mov
sub
mov
loop
fbstp
movs
sub
add
add
ss
cmp
scas
(bad)
and
and
shl
inc
jl
xchg
jne
push
add
add
imul
xor
sbb
push
and
sar
push
test
mov
and
mov
add
add
and
pop
jns
and
pop
and
mov
cmps
push
xchg
cwde
jmp
xor
push
test
or
add
sbb
jne
gs
outs
xor
call
inc
add
add
pop
mov
and
push
nop
jno
sbb
adc
xor
jle
push
or
add
add
out
mov
xor
nop
add
cmp
cmps
inc
dec
inc
or
cdq
out
jl
scas
es
and
add
add
inc
data16
dec
adc
stc
pop
or
or
aam
add
(bad)
cmp
pop
call
jg
add
add
mov
test
or
ror
loop
movs
mov
cmp
mov
mov
or
add
add
or
push
loop
retf
jle
jmp
in
pop
and
push
repz
push
fwait
cmp
add
clc
popf
in
ficom
push
push
shl
push
inc
hlt
mov
adc
fild
add
add
dec
cli
pop
push
movs
(bad)
in
mov
jne
lds
mov
add
rol
sbb
and
pop
add
je
(bad)
ss
cmp
in
push
cmp
and
mov
add
shr
mov
sub
xchg
xchg
ficom
scas
jns
sub
enter
stos
adc
adc
add
add
jno
adc
(bad)
sti
and
daa
xchg
loop
xchg
out
ss
ror
sbb
mov
mov
fisub
add
add
cld
sti
pop
cmp
fcmovnu
mov
jb
sbb
mov
or
cmp
add
add
dec
dec
dec
dec
into
xchg
sbb
inc
stos
leave
stos
jge
test
mov
loopne
popf
pushf
pushf
add
jo
and
add
add
imul
xchg
loop
in
inc
leave
sti
in
pop
test
mov
rcr
dec
mov
test
jg
add
add
pop
sub
xchg
mov
push
pop
sub
add
mov
mov
aam
add
add
push
pop
test
rcl
sbb
js
nop
or
mov
sbb
mov
add
add
test
xchg
and
in
sub
add
jne
pop
jle
xor
cmp
std
add
sub
movs
jns
or
jne
mov
stc
jp
loope
cmp
cli
retf
add
add
xchg
adc
and
push
js
sahf
movs
out
mov
mov
je
mov
dec
scas
jmp
test
div
mov
sbb
cs
mov
mov
mov
sbb
lahf
sub
mov
push
add
adc
or
aam
push
icebp
adc
add
inc
ja
sub
inc
mov
mov
call
jmp
scas
gs
xor
add
retf
mov
mov
xor
or
jg
pop
outs
nop
movs
push
mov
push
jge
fcomip
adc
add
add
push
outs
or
mov
push
sti
rcl
daa
movs
mov
xor
and
jno
or
add
add
xchg
das
das
sbb
xchg
pop
nop
inc
nop
int3
adc
lods
aas
(bad)
push
push
rcl
rol
add
add
scas
popa
imul
dec
adc
mov
bound
ja
mov
xchg
push
mov
adc
inc
jmp
xor
or
add
int3
cmp
mov
or
dec
sub
add
add
push
mov
cmp
jae
and
ror
mov
pusha
add
add
inc
sbb
ins
sub
push
mov
mov
call
rcl
add
add
scas
outs
inc
inc
and
xor
gs
jb
in
xor
aas
jp
and
add
add
adc
push
push
lods
push
jl
icebp
leave
test
dec
xchg
mov
cmp
add
add
and
stos
addr16
mov
mov
mov
or
xchg
add
add
ror
lock
push
push
push
dec
out
into
shr
xchg
aad
sbb
push
sti
jne
add
add
rcl
push
inc
shr
cdq
or
das
mov
xchg
lods
pop
jg
xor
push
scas
push
loop
iret
mov
mov
inc
sbb
scas
push
cmp
xchg
adc
add
fidiv
dec
jne
xchg
mov
lea
inc
mov
inc
dec
pop
icebp
sub
enter
add
cmp
jge
fmul
sbb
cmc
push
sub
jmp
outs
shl
cmp
mov
or
daa
mov
lods
inc
cli
inc
arpl
sub
push
or
fistp
add
add
repz
ret
aad
fild
scas
sbb
mov
pop
xor
ret
cmp
imul
test
push
sbb
mov
jo
jae
or
test
sbb
or
and
add
add
(bad)
idiv
xor
nop
frstor
mov
lea
pop
jbe
push
xchg
jbe
les
add
add
mov
xchg
dec
sbb
and
inc
mov
sub
push
sub
push
nop
sub
jmp
add
add
rol
sti
pop
mov
xchg
aaa
jns
(bad)
adc
daa
jns
push
jo
loop
push
and
mov
push
xchg
mov
xchg
pop
mov
movs
lahf
gs
and
inc
pop
xchg
jmp
add
sti
push
sahf
mov
mov
es
or
pop
inc
sbb
sbb
and
mov
and
lea
adc
mov
or
add
dec
push
add
add
mov
sahf
cmps
jns
dec
push
and
cmp
enter
int
in
outs
mov
iret
mov
add
add
push
dec
or
test
xor
adc
dec
cmp
mov
push
or
add
add
iret
push
retf
and
out
pop
cmp
xor
pop
sub
mov
xor
inc
call
stc
out
loopne
cmp
std
dec
mov
cmp
adc
xor
add
inc
fsubr
push
add
add
xor
stos
xor
add
push
int3
cmp
dec
ss
bound
mov
add
add
or
and
jmp
dec
inc
daa
jp
ret
loop
adc
xchg
xchg
jecxz
mov
sar
add
xchg
test
cld
out
repnz
loope
mov
jo
arpl
sub
rol
xchg
mov
nop
retf
call
add
or
and
jp
and
nop
push
adc
push
or
or
inc
xor
add
add
movs
imul
ja
mov
cmps
or
add
push
iret
sub
int3
das
adc
add
add
test
mov
in
sub
push
lea
pop
or
jl
jg
mov
inc
xor
add
retf
mov
fadd
adc
popa
dec
pop
stos
adc
dec
and
dec
add
add
mov
rcl
pop
jo
cmp
xchg
mov
popa
daa
in
add
add
loop
ret
std
sbb
retf
lds
and
pop
ins
test
popaw
movs
push
dec
adc
js
sahf
add
add
mov
add
leave
inc
mov
and
fwait
clc
adc
xor
mov
add
test
xor
xor
cdq
xchg
and
daa
(bad)
cs
inc
popa
dec
aas
imul
fcmove
inc
pop
mov
add
xor
fcom
and
sub
push
mov
mov
data16
jne
inc
call
add
add
outs
pusha
lea
push
(bad)
rol
adc
xor
loop
(bad)
jae
leave
push
mov
inc
xor
add
add
pop
(bad)
push
loopne
jo
or
push
rol
loopne
test
push
push
adc
and
add
add
lods
loopne
scas
clc
pop
in
ret
xor
stc
sbb
mov
mov
rcl
jns
hlt
out
add
add
bnd
dec
cmp
xor
scas
(bad)
and
movq
xor
inc
mov
push
dec
mov
push
(bad)
lock
add
add
arpl
mov
ror
ds
int3
stos
cmp
test
and
inc
xchg
push
pop
add
add
in
or
add
mov
aam
push
rol
(bad)
aas
adc
add
add
mov
mov
dec
adc
mov
push
les
dec
xor
jb
push
dec
inc
add
sub
jns
out
adc
(bad)
in
stc
jle
add
ja
jg
loop
cmp
jbe
add
add
add
push
pop
in
cs
gs
add
inc
adc
xor
mov
mov
mov
mov
add
fild
pop
mov
sbb
cmp
cmp
cmp
sub
xchg
adc
cmps
sub
xchg
loopne
add
add
pop
mov
fisttp
cmp
mov
xchg
or
dec
cmp
scas
sahf
clc
sub
add
add
sub
xor
mov
repz
inc
push
call
jae
ret
mov
sbb
jbe
add
add
sub
push
test
xor
sbb
fsubp
pop
retf
stc
mov
xor
xchg
popa
add
add
add
pop
mov
xchg
cmp
add
cmp
xchg
adc
xor
mov
and
scas
jae
pop
(bad)
and
add
add
push
les
sub
inc
lods
dec
mov
bnd
daa
mov
dec
addr16
movs
sbb
repnz
add
inc
mov
inc
lea
xchg
stc
mov
xor
mov
stos
ficomp
cmp
fwait
xchg
add
add
es
mov
stos
push
test
dec
nop
mov
enter
jb
(bad)
jmp
adc
xchg
add
add
pop
dec
push
repnz
mov
dec
test
inc
jp
shr
jmp
outs
das
xlat
test
add
add
test
push
sub
pushf
cmp
cmp
sub
imul
jb
mov
push
push
mov
add
add
in
lods
push
and
cmps
ins
in
scas
and
rep
ja
scas
retf
pop
push
jnp
pop
inc
pop
and
and
add
add
ins
jp
retf
push
xor
clc
cmp
mul
pop
(bad)
and
push
add
add
adc
sbb
test
pop
mov
mov
stos
or
outs
out
jle
pop
add
add
inc
imul
dec
push
jnp
sub
xchg
fnstenv
mov
les
mov
repz
fiadd
sahf
mov
out
add
add
mov
fwait
mov
mov
sub
inc
adc
mov
in
sub
add
xchg
inc
pop
cmp
inc
dec
(bad)
mov
mov
xor
cmc
loope
clc
ror
leave
push
jnp
xor
imul
sti
xchg
sbb
or
imul
adc
mov
sbb
add
add
pushw
jge
sub
pop
retf
enter
loope
popa
cmp
mov
ins
add
lods
ret
cdq
add
add
or
das
xchg
loope
jl
dec
inc
sbb
loop
add
add
push
gs
loop
pop
hlt
lock
clc
add
add
test
mov
jne
in
jb
(bad)
push
mov
enter
add
add
add
mov
hlt
mov
jbe
hlt
call
sub
mov
inc
mov
inc
dec
pop
add
add
test
or
mov
lahf
jne
rdpmc
(bad)
cmp
call
pop
or
add
add
push
pusha
jl
loopne
push
add
pop
cli
cmps
call
cmc
jns
retf
test
ss
mov
sbb
xor
pop
ja
jb
rcr
rcr
add
test
scas
cmp
nop
inc
push
add
add
(bad)
in
sub
xchg
sbb
aas
pop
fsub
and
adc
inc
test
rcl
add
add
xchg
xchg
xchg
and
push
fs
sub
and
loope
mov
add
add
push
inc
ds
es
dec
xchg
or
inc
(bad)
movs
mov
push
adc
fst
add
add
or
or
inc
inc
(bad)
enter
push
sub
aas
push
pop
or
xchg
enter
or
add
leave
xor
arpl
lahf
mov
or
das
push
pop
add
add
add
push
lahf
xchg
add
pop
into
loopne
ins
movs
pop
or
int3
mov
xchg
test
rcl
adc
(bad)
add
mov
retf
jle
dec
pop
test
repnz
mov
outs
xchg
or
test
add
jne
ficom
pushf
push
std
and
mov
mov
adc
inc
mov
xchg
das
les
add
loop
lods
pop
adc
sub
in
add
outs
addr16
addr16
rcl
outs
xor
mov
les
or
adc
sub
or
xlat
jmp
adc
pop
adc
add
add
pusha
jg
iret
sbb
mov
lahf
pusha
sti
sbb
mov
jg
mov
nop
add
sbb
jge
push
add
add
adc
lock
sbb
imul
inc
imul
cdq
loopne
clc
sbb
push
movzx
cmp
das
mov
lahf
repz
imul
mov
mov
(bad)
inc
add
add
movs
lods
and
pop
mov
dec
movs
scas
dec
inc
push
xchg
mov
mov
fs
cmp
add
add
dec
or
add
push
mov
out
push
sahf
scas
cs
inc
add
add
mov
rol
test
fiadd
int
fcom
jnp
mov
push
cmp
add
push
pop
test
loopne
or
dec
scas
push
pop
(bad)
mov
adc
scas
imul
add
add
mov
fs
adc
sub
(bad)
mov
pop
sti
cmp
in
sub
loopne
call
add
pop
fld
es
jge
popf
loope
outs
push
scas
jb
or
jne
sbb
cmp
mov
mov
add
inc
pop
mov
adc
pop
test
pop
lahf
pop
and
out
cmp
jp
fimul
mov
dec
jge
stos
add
add
mov
jle
inc
jmp
aaa
jg
call
jnp
loop
xor
push
cmp
cmp
and
push
test
dec
test
push
pop
movs
test
mov
fs
sub
mov
outs
pop
das
dec
cmp
and
add
adc
adc
add
rcl
push
pop
adc
jge
daa
sbb
adc
ds
adc
push
add
pop
inc
adc
pop
add
add
daa
inc
adc
popf
inc
inc
pop
sbb
mov
sbb
adc
and
fisub
add
adc
add
adc
retf
out
clc
adc
retf
(bad)
(bad)
adc
adc
clc
jp
xchg
add
add
clc
xchg
in
sbb
out
ja
pushf
fwait
sub
sbb
adc
push
or
inc
dec
in
or
add
add
push
xor
mov
inc
dec
xchg
retf
dec
cmp
cmp
mov
shr
add
add
push
in
aaa
cwde
js
movs
fisttp
(bad)
xlat
in
dec
jne
adc
je
mov
and
add
add
xchg
imul
ds
inc
push
push
sahf
movs
xchg
mov
mov
das
je
add
add
lods
adc
pop
(bad)
mov
dec
retf
enter
xchg
jg
jo
mov
repz
add
add
mov
xor
mov
pop
movs
das
pop
jecxz
push
sub
in
ss
inc
add
add
test
pop
push
jmp
cmp
push
clc
push
pop
cmps
cdq
sub
mov
mov
add
add
rcl
(bad)
cmps
jo
jmp
fwait
adc
icebp
nop
mov
mov
int
add
add
cmp
mov
xchg
mov
jmp
or
popf
aam
adc
add
add
cmp
ins
enter
test
mov
inc
sub
or
sar
and
sahf
cmp
repnz
ds
les
add
ret
add
adc
cmp
int
add
jno
rcr
xchg
xrelease
push
pop
test
adc
shl
mov
adc
dec
add
add
and
push
xor
cdq
dec
xchg
adc
test
mov
imul
sahf
test
xor
add
add
add
in
cmp
and
xchg
push
pop
cdq
rcl
xlat
jl
add
add
inc
stos
cld
test
js
push
popf
adc
mov
push
sub
fmul
add
add
pop
popa
stc
lock
adc
dec
nop
push
mov
test
(bad)
retf
stc
xor
sub
ja
mov
add
stc
jg
dec
or
xchg
xchg
popf
cmp
je
lods
ja
or
push
ja
push
cmp
add
imul
lock
shr
std
cmp
dec
fwait
sar
or
dec
lock
add
or
or
add
add
(bad)
push
test
xchg
in
xchg
lock
jns
mov
je
mov
adc
(bad)
mov
sub
sub
add
stos
jp
push
mov
jae
loopne
inc
dec
fs
adc
adc
cmp
sbb
imul
sbb
cmc
sbb
(bad)
xchg
or
jge
stc
pop
adc
repz
jmp
scas
add
add
cdq
ret
push
push
loope
out
lods
push
fsub
(bad)
xchg
or
mov
add
add
retf
test
movs
push
pop
cmp
movs
cmp
sbb
dec
scas
mov
cmp
hlt
inc
mov
add
ret
xchg
repz
dec
stos
xor
push
jo
retf
push
scas
lahf
cmp
daa
aas
jbe
add
add
cmp
or
clc
and
not
push
and
push
and
push
adc
dec
or
push
add
add
push
adc
or
dec
je
mov
add
cmp
fst
outs
mov
add
add
xlat
mov
mov
pop
sbb
les
int
jnp
jge
jne
mov
shl
mov
mov
jne
add
add
mov
adc
inc
cmp
(bad)
std
sub
jb
dec
dec
dec
xor
retf
cli
dec
add
add
inc
movq
stc
inc
leave
lock
(bad)
loopne
test
adc
sub
and
adc
push
sbb
add
add
sbb
xor
pop
inc
aaa
jo
push
cmp
xchg
out
movs
jge
xor
sbb
cmps
dec
add
add
push
repz
movs
int3
pusha
dec
sub
cmp
les
outs
dec
fisub
and
cmp
in
ins
mov
add
add
pop
mov
or
adc
shl
mov
add
mov
int
add
add
in
jnp
and
pop
enter
mov
clc
fsubr
inc
or
pop
cmp
les
add
add
mov
xor
fcomi
sbb
std
xchg
xchg
int3
scas
jmp
pop
scas
sub
mov
adc
pop
call
test
jno
xchg
or
push
mov
jno
add
jmp
or
je
or
call
popa
bound
inc
leave
rcr
pop
xchg
dec
mov
jb
jnp
mov
aam
add
add
stos
movs
out
ret
(bad)
dec
lock
mov
sbb
mov
lock
jb
push
or
add
add
ror
call
xor
enter
mov
push
or
test
mov
add
add
fsubr
sub
inc
mov
add
cmp
dec
scas
int3
loopne
add
add
dec
pop
push
shr
sar
cwde
(bad)
push
lods
stos
xor
mov
stos
iret
pop
push
and
push
add
add
das
enter
in
das
sub
(bad)
dec
call
int3
sti
not
push
sbb
inc
sbb
cs
xchg
or
jp
sub
sbb
xchg
dec
jne
stc
adc
ins
add
lea
add
add
aas
adc
sbb
sbb
mov
jne
mov
push
or
data16
add
add
std
enter
shl
and
cmp
and
fmul
mov
sub
pop
pop
test
loope
psraw
add
add
xor
xchg
shl
pop
push
cmp
aam
cmp
out
xor
mov
add
enter
and
mov
push
out
sub
lods
ins
push
cmps
xchg
dec
pop
add
add
cli
loop
arpl
sbb
imul
rcr
pop
and
mov
rep
fadd
cmp
int3
adc
pop
clc
in
xchg
or
push
push
adc
loope
or
retf
or
mov
lea
add
add
in
dec
add
sub
(bad)
push
repz
or
pusha
sti
xor
loopne
add
add
xchg
fstp
aaa
jl
jmp
daa
jg
inc
mov
in
mov
add
add
ja
sub
push
fldcw
xchg
mov
loopne
and
add
jae
xchg
pop
and
push
add
push
dec
sbb
cs
mov
retf
push
lahf
push
cmp
push
ret
adc
and
sub
add
add
pop
test
mov
xlat
mov
inc
(bad)
and
inc
and
sub
dec
add
add
or
mov
data16
jae
sub
scas
cmps
fiadd
or
adc
jl
out
add
add
lea
jns
mov
adc
sbb
and
pop
sbb
add
add
xor
cmp
cmp
add
xchg
sub
ror
or
cmp
test
add
push
inc
push
and
mov
inc
pop
and
enter
adc
adc
or
add
add
add
mov
dec
adc
nop
jmp
mov
mov
aam
inc
add
add
add
jecxz
pop
or
xor
push
pushf
daa
push
outs
lods
mov
aad
cmp
fst
and
xor
add
inc
repz
dec
out
or
cmp
in
mov
adc
pushf
pop
add
arpl
add
add
or
mov
push
adc
pop
adc
retf
or
sbb
or
mov
add
add
fldcw
sbb
inc
or
xor
xchg
xor
xchg
pop
repnz
and
xchg
push
push
add
add
repz
sub
or
push
cdq
xor
jmp
or
loopne
inc
mov
mov
aam
les
int
(bad)
adc
dec
adc
add
daa
add
or
inc
add
add
xchg
cmc
cmps
clc
mov
or
xchg
fs
stc
mov
adc
out
cmps
or
mov
xlat
cmp
popf
xor
add
add
mov
and
push
ja
fnstcw
(bad)
movzx
test
pop
scas
aam
adc
ja
or
jmp
add
jmp
fdivr
pop
xchg
sbb
loopne
pop
or
aad
in
dec
or
jne
mov
add
add
ds
nop
clc
push
push
hlt
adc
jmp
test
jns
mov
xor
(bad)
test
ds
ror
daa
push
loope
fwait
pusha
dec
jmp
inc
in
pusha
adc
test
and
sub
add
(bad)
sub
sar
psrld
cmp
shl
and
and
(bad)
and
adc
jmp
add
add
sub
cmp
or
mov
nop
or
hlt
push
sub
cmp
push
xchg
dec
xor
add
add
add
mov
xchg
cld
dec
xor
test
movs
mov
jg
adc
xor
add
data16
mov
hlt
psubusw
in
rol
inc
mov
and
cwde
push
push
mov
int3
mov
das
into
pusha
mov
jb
push
pusha
mov
dec
test
cld
add
add
imul
push
dec
cli
push
js
dec
mov
test
dec
sub
rol
fisttp
jmp
cld
xchg
xchg
jb
pop
add
push
or
icebp
(bad)
retf
pop
cmp
add
lahf
inc
adc
cmps
js
mov
dec
or
mov
es
nop
mov
add
add
inc
mov
(bad)
pushf
in
lea
out
enter
outs
and
push
nop
add
add
and
into
leave
sar
fidiv
or
jae
xor
mov
enter
add
add
sub
adc
pop
add
mov
jne
popf
(bad)
mov
call
mov
add
add
mov
into
xchg
stos
jno
imul
mov
xchg
out
mov
cmp
push
xor
(bad)
loopne
popa
scas
ins
xor
cmps
dec
sub
push
xlat
jno
xor
and
jmp
shr
jno
add
add
sub
add
arpl
cwde
sub
push
lods
outs
bnd
pop
(bad)
les
mov
add
add
mov
iret
imul
pusha
push
jb
lods
ds
push
add
add
daa
ds
jne
push
jle
mov
or
or
out
les
inc
int
ins
out
test
ror
add
add
pop
dec
push
add
sar
inc
mov
add
popa
pop
fcom
pop
fcom
push
rol
add
add
les
pop
adc
cwde
or
mov
or
push
sbb
mov
dec
jb
pop
mov
mov
jne
lock
(bad)
mov
and
lods
jne
loope
sbb
loop
add
add
lea
dec
movs
adc
and
push
ja
dec
cmp
inc
jge
loop
dec
jp
fcom
test
add
mov
cwde
sbb
push
push
sub
stos
js
adc
call
stc
jg
pop
rol
add
add
or
push
cli
jno
push
and
sub
push
aam
fcomp
adc
inc
add
add
dec
call
sbb
dec
leave
cs
les
push
popf
and
xor
pop
inc
dec
and
cmp
add
add
push
dec
cld
or
js
hlt
xlat
xor
pop
cdq
sub
cmp
jecxz
cld
loope
dec
lock
add
or
and
in
inc
inc
pop
movs
adc
inc
mov
jo
push
int
xchg
clc
xor
aaa
fadd
add
add
add
ja
push
add
inc
mov
push
(bad)
lds
mov
mov
test
cmp
test
jg
cwde
sub
jo
sub
jmp
sub
rcl
and
test
add
add
std
cmp
ins
(bad)
adc
clc
aad
add
cmc
lds
imul
xchg
jo
fmul
push
add
add
push
push
mov
cs
push
push
lock
test
daa
jge
add
test
add
xrelease
push
addr16
scas
xchg
mov
xor
cmp
icebp
addr16
and
add
add
pop
aas
pusha
scas
scas
popa
adc
xchg
js
out
jge
fld
outs
mov
lea
dec
add
sub
icebp
cmc
inc
adc
sub
inc
mov
dec
in
(bad)
je
pop
or
or
fld
add
add
jo
or
jno
mov
jb
shr
rol
jnp
std
mov
dec
mov
add
add
xchg
cmp
jp
enter
mov
cmp
and
mov
adc
push
jp
out
add
add
and
popa
(bad)
sbb
scas
xor
adc
sar
dec
push
sub
getsec
pop
hlt
mov
add
add
push
dec
clc
mov
fwait
sub
dec
mov
push
popf
lds
(bad)
in
into
gs
and
push
(bad)
cli
mov
add
add
or
add
sub
xchg
out
cmp
lods
cmp
pop
iret
test
jno
sti
jg
es
sbb
push
leave
imul
mov
xlat
or
push
and
add
in
cmp
dec
sbb
ds
push
or
addr16
mov
mov
inc
mov
add
add
or
test
jne
pushf
sbb
and
xchg
in
mov
mov
xchg
rcr
xchg
mov
or
add
add
fcom
add
dec
out
ss
les
ror
and
fs
add
add
push
sub
inc
cmp
pop
adc
push
add
mov
xchg
or
sub
adc
add
add
mov
and
gs
lock
inc
stos
mov
cmps
imul
push
jnp
add
add
xchg
test
retf
push
push
push
inc
mov
mov
xchg
or
jne
add
add
cld
outs
movs
push
push
addr16
sub
mov
sub
cld
dec
movs
push
inc
inc
sub
add
add
mov
pop
inc
sub
fwait
xchg
repnz
movs
aas
jmp
call
xchg
cwde
in
cmps
or
dec
mov
inc
fsub
mov
adc
or
inc
push
sub
inc
dec
push
xchg
add
add
pop
and
js
adc
and
dec
mov
inc
mov
fsub
dec
lock
cli
adc
add
add
and
inc
sbb
mov
ss
dec
dec
xchg
push
and
push
xchg
dec
call
and
int3
adc
and
dec
jmp
xchg
inc
or
mov
adc
and
dec
das
xchg
add
add
and
push
dec
jl
adc
or
movs
or
stos
and
adc
add
add
adc
sbb
mov
sub
pusha
sbb
and
and
and
and
sub
add
add
hlt
sub
sbb
clc
cs
or
xor
xor
add
xor
ror
xor
cmp
or
add
add
cmp
or
ds
lods
or
pop
and
inc
push
inc
dec
adc
inc
jmp
add
dec
imul
pusha
fcomp
in
ror
fwait
nop
adc
lods
cmp
push
ja
add
add
cmc
mov
jbe
xchg
and
and
cld
scas
mov
and
or
mov
push
sub
scas
je
fnstcw
push
test
repnz
add
add
xor
inc
jne
sub
xchg
test
js
mov
dec
jns
or
mov
add
add
adc
xor
lods
fidiv
in
repz
and
sub
add
add
cmp
dec
call
adc
adc
ins
(bad)
add
adc
in
add
add
push
movs
movsx
movs
(bad)
stos
fs
mov
inc
ja
fld
jg
add
add
cli
or
inc
sub
push
dec
xchg
jg
push
and
sub
(bad)
adc
test
(bad)
fadd
add
add
popa
or
mov
movs
in
test
push
xchg
int3
or
sbb
(bad)
pop
cs
pop
adc
add
add
inc
loopne
cmp
jp
rcr
mov
cmp
movs
in
inc
jge
and
add
add
inc
jmp
inc
int
int
adc
add
std
inc
sbb
cmps
les
add
int
daa
or
pop
retf
ins
retf
push
and
es
dec
cmp
bound
in
xchg
inc
add
add
xor
and
adc
push
pop
dec
rcl
inc
mov
or
mov
push
pop
mov
cmps
jp
arpl
xchg
jmp
dec
inc
cli
popa
ret
add
add
test
mov
xchg
fdiv
mov
xor
inc
add
push
push
sub
push
jnp
add
add
mov
xchg
jns
enter
loop
sti
sub
loopne
adc
and
push
add
sbb
fmul
movs
sbb
test
mov
cld
pop
cmp
mov
sub
add
add
or
cmp
shr
xor
push
sub
sar
add
add
pop
cmp
push
xchg
sbb
imul
push
sbb
mov
add
add
mov
retf
int3
stc
lods
cs
fs
push
inc
test
shl
out
adc
push
add
pop
test
mov
pop
cmps
jb
enter
jb
lea
arpl
test
xor
add
add
mov
and
pop
pop
(bad)
in
iret
shr
add
aad
push
adc
fdivp
and
jno
mov
in
push
add
add
adc
jecxz
pop
cmp
outs
repz
repnz
sub
push
xchg
push
imul
jns
add
add
push
mov
daa
jmp
and
repnz
xor
mov
repnz
and
in
jmp
add
add
rol
jmp
cmps
mov
mov
adc
sbb
mov
add
add
and
sub
call
adc
nop
mov
mov
adc
xchg
sub
add
add
test
push
adc
shr
adc
push
adc
add
add
imul
(bad)
shr
adc
push
inc
sbb
test
jmp
inc
mov
push
adc
add
add
inc
pop
loope
pop
repz
ret
dec
xor
push
inc
ror
lock
add
inc
daa
xchg
push
push
dec
lods
js
pop
pop
imul
dec
jle
dec
xor
add
xchg
cmp
dec
repz
in
cmp
fsubr
es
test
push
lahf
inc
add
add
cmp
into
cmps
dec
and
lea
xchg
mov
adc
cmps
cmps
lock
stos
(bad)
fcom
add
cmp
add
push
push
push
adc
sub
adc
sub
adc
sbb
xor
add
add
adc
xor
push
cmp
mov
and
fs
ins
sub
and
scas
add
add
mov
push
mov
fmul
or
or
fs
cmovb
and
push
add
add
sub
les
retf
cmps
fs
push
jl
dec
pop
int3
pop
jl
adc
cs
jge
and
add
add
sbb
mov
sub
jo
jmp
sbb
sbb
in
imul
xchg
and
add
add
dec
(bad)
loop
hlt
(bad)
mov
pop
stc
and
adc
retf
mov
mov
cmp
scas
add
add
cmp
clc
ss
sti
inc
repz
je
test
fist
or
and
add
add
jmp
aaa
fist
push
fwait
xchg
out
neg
jbe
stc
or
xchg
(bad)
lea
add
add
add
xchg
dec
fcomip
mov
mov
std
inc
or
les
sti
lods
push
arpl
stc
or
scas
fs
add
add
or
or
jne
push
sbb
cld
adc
mov
jne
or
adc
or
add
add
nop
sbb
push
mov
sub
xor
or
je
nop
(bad)
or
add
inc
push
cli
mov
pop
repnz
mov
inc
es
mov
(bad)
or
jne
add
add
retf
pop
pushf
dec
fs
cld
pcmpeqw
mov
sbb
(bad)
or
add
add
jne
mov
jno
inc
pop
ds
xchg
or
aaa
sub
push
mov
ds
jbe
add
add
push
xor
outs
mov
mov
adc
push
mov
cmps
pop
mov
add
add
push
mov
mov
push
adc
imul
xor
xchg
clc
lock
pushf
jno
out
cmps
aas
add
add
cld
fwait
inc
pushf
adc
xor
mov
xor
cmp
pop
add
add
rol
sti
sbb
dec
sbb
dec
add
add
add
add
je
(bad)
push
test
push
add
pop
xchg
std
pop
cwde
stc
sbb
add
imul
test
jne
je
push
not
in
or
shl
push
xchg
add
add
add
aas
shl
jnp
mov
push
addr16
push
retf
and
or
loop
xchg
or
add
add
mov
and
and
mov
stos
inc
xchg
jl
jle
mov
and
push
cmp
jg
add
add
jl
jo
call
in
xchg
stos
xchg
fsubr
xchg
and
or
pop
add
add
add
sbb
xchg
cld
or
push
cmp
sub
pop
xchg
out
out
dec
add
add
or
adc
or
rcr
in
push
add
adc
add
sbb
jnp
adc
sub
aam
xchg
call
push
stc
lock
add
add
inc
hlt
and
cmp
or
or
pop
(bad)
test
add
cld
iret
dec
mov
cmps
fcom
out
aam
ficom
lock
sbb
dec
add
add
fbld
in
pop
or
adc
push
pop
mov
adc
xor
jmp
sbb
fwait
mov
mov
jle
shr
and
ret
lods
int3
inc
or
mov
pop
aas
int
loop
add
add
sub
mov
imul
sub
inc
cld
xchg
adc
xchg
cmp
add
add
leave
push
or
movs
repnz
or
jp
xchg
std
mov
cmps
ds
loopne
out
push
inc
loope
add
add
or
lock
inc
add
out
loopne
mov
and
inc
cmp
sti
adc
add
add
(bad)
daa
shl
popa
loope
push
sub
xchg
mov
dec
ins
div
add
add
or
stos
or
fcomp
inc
clc
les
loop
pop
imul
fsubr
outs
jmp
hlt
dec
and
or
add
add
add
push
sub
ds
int
mov
shr
out
mov
inc
xlat
dec
scas
and
inc
cmp
mov
pop
cmp
scas
sub
imul
push
call
ret
adc
mov
add
add
mov
lods
adc
pop
iret
push
xchg
lock
nop
(bad)
push
(bad)
out
or
mov
add
add
push
push
adc
inc
adc
adc
in
dec
(bad)
push
xor
cmp
adc
add
pop
sub
ror
dec
imul
test
lock
(bad)
das
icebp
xchg
pop
mov
loopne
add
add
mov
pop
test
je
sub
aas
jmp
dec
loop
outs
jecxz
movs
lods
adc
(bad)
jne
add
add
dec
inc
mov
xor
push
sti
sub
into
call
add
adc
add
add
mov
mov
pop
or
sub
inc
xor
and
or
movs
dec
push
add
add
xor
movs
and
xor
inc
adc
mov
les
and
mov
or
in
sbb
add
add
mov
pop
mov
push
jo
inc
shl
push
xchg
test
mov
fistp
sbb
add
add
sub
inc
dec
sbb
push
daa
pop
outs
shr
or
pop
pop
jns
test
(bad)
push
mov
add
add
xchg
(bad)
push
out
xor
pop
cmp
pop
push
ins
ja
sbb
mov
mov
scas
les
add
add
adc
and
mov
imul
je
popa
push
loopne
test
add
nop
out
sahf
dec
adc
xchg
fsub
push
dec
inc
into
cs
fwait
cld
test
add
add
adc
data16
mov
dec
sbb
jle
mov
ja
push
mov
aas
aam
mov
add
cmc
mov
cmp
xchg
pop
mov
fld
inc
add
dec
hlt
hlt
add
add
loop
call
or
icebp
cmp
mul
inc
(bad)
fs
cmp
sbb
addr16
add
add
xor
jno
movs
gs
ror
mov
mov
sub
pop
movs
dec
imul
mov
dec
lds
in
pop
aas
push
rol
adc
sbb
push
mov
jp
and
xchg
add
add
les
popf
push
and
push
mov
mov
imul
mov
sbb
js
mov
add
add
mov
movzx
movs
repnz
das
sub
(bad)
mov
inc
xor
add
sub
test
test
sbb
test
add
test
add
add
lea
sub
pop
cdq
xchg
xchg
adc
xor
adc
int3
pop
mov
lea
add
mov
add
cmp
loop
adc
push
add
mov
test
mov
mov
add
add
jmp
(bad)
retf
pushf
adc
shr
mul
into
popa
or
add
add
jnp
(bad)
adc
fst
into
(bad)
stos
call
or
retf
dec
adc
add
mov
push
push
nop
call
movs
sbb
test
out
fmulp
int3
retf
push
add
add
sub
push
ja
(bad)
jns
and
pusha
or
adc
retf
adc
add
add
lods
adc
not
cmp
dec
or
push
jmp
dec
and
lea
sbb
cwde
ret
dec
sbb
and
scas
in
or
adc
or
hlt
and
mov
in
nop
cmp
add
add
sbb
pop
and
push
cmp
ja
sbb
dec
cmp
adc
or
rdmsr
outs
add
add
and
jbe
ds
stos
pop
cs
inc
shl
push
out
add
add
push
fsubr
inc
in
jbe
dec
jae
mov
outs
push
xchg
mov
cmps
and
das
fsub
(bad)
add
add
outs
pop
jne
dec
mov
mov
popa
cdq
pushf
bound
jb
jno
adc
jbe
pop
shl
jne
add
add
and
cmps
pop
sbb
clc
sub
fcom
movs
push
sub
shl
mov
add
add
pop
(bad)
push
inc
adc
into
push
scas
(bad)
loope
sub
dec
ret
clc
lock
push
int3
adc
inc
add
add
cmp
in
xchg
div
push
adc
sbb
xchg
test
cmp
imul
push
int3
out
dec
inc
add
add
and
mov
in
test
mov
gs
mov
sti
inc
add
add
push
sbb
push
xor
jae
outs
sub
(bad)
(bad)
fistp
hlt
out
push
mov
icebp
or
repnz
add
dec
push
sbb
aaa
inc
pop
sbb
or
adc
out
ds
or
push
add
add
aaa
rcl
and
and
test
sbb
push
fs
dec
ds
adc
add
add
ret
ja
cmp
je
les
leave
or
push
imul
xchg
pop
add
add
mov
jl
and
pop
ins
dec
ja
setns
rcr
or
add
add
xor
xor
sub
jb
(bad)
hlt
sbb
inc
add
xchg
sbb
test
add
xchg
sub
pop
loopne
fidiv
dec
inc
or
jge
loop
mov
pop
fwait
call
add
add
dec
push
bound
sbb
mov
out
pushf
fbstp
mov
add
add
into
sbb
adc
fcom
adc
shr
mov
sar
imul
aaa
ds
mov
add
nop
repnz
pop
dec
lods
adc
cmc
loope
or
push
pop
loopne
movs
mov
add
add
dec
pop
mov
sub
xchg
jns
js
adc
inc
in
scas
mov
xchg
push
cld
ja
add
add
sbb
repz
dec
sti
rcr
cld
call
fist
sub
rcl
fwait
pop
and
add
add
cmp
clc
cmp
fbld
fsubr
lock
mov
inc
les
int3
inc
outs
and
add
add
inc
sub
(bad)
lahf
and
fs
sbb
add
loopne
push
and
scas
inc
add
add
lahf
(bad)
leave
ret
mov
je
xchg
jmp
and
or
imul
xchg
ss
jns
enter
xchg
push
clc
lods
and
out
hlt
nop
sbb
inc
xor
lock
cmp
pop
add
add
jne
mov
and
hlt
adc
retf
je
inc
add
lods
hlt
out
or
daa
push
pop
clc
mov
add
cli
adc
stc
adc
cmp
fcomp
mov
sar
aaa
loopne
stc
out
test
add
cmp
and
add
pop
(bad)
in
and
push
dec
lock
jmp
add
add
stos
sbb
and
pop
dec
push
jmp
fwait
or
jnp
fnstenv
rcr
(bad)
lock
inc
fadd
add
add
and
sub
test
cmc
mov
pop
cdq
jne
scas
inc
mov
xor
add
add
jge
or
pop
mov
push
mov
mov
in
xlat
imul
add
add
jnp
add
jmp
lock
jae
adc
pop
inc
movs
inc
pop
bound
pop
mov
add
add
or
std
sub
mov
sysenter
test
and
sub
add
add
push
sbb
cmp
or
xor
fnstcw
jb
movs
test
inc
adc
adc
mov
add
add
push
inc
and
adc
sbb
or
mov
sar
add
add
test
sub
push
jmp
mov
sub
cmp
mov
fnstsw
xchg
add
or
movzx
mov
and
adc
cld
cli
movs
dec
mov
add
add
jbe
pop
xchg
mov
mov
mov
hlt
imul
or
push
and
push
ja
add
add
data16
shl
ficom
inc
icebp
push
dec
push
into
or
repnz
rdmsr
add
add
outs
in
sub
lea
cmc
psrld
out
(bad)
adc
xor
adc
add
add
and
loopne
push
in
pop
mov
shl
cmp
mov
xchg
pop
or
dec
add
add
add
xor
push
dec
cmp
jmp
jecxz
lahf
gs
cdq
adc
or
mov
ja
xchg
pusha
rol
add
add
push
inc
lock
or
cmp
push
jle
scas
jb
pop
jne
inc
ja
mov
add
cmps
fcom
jns
jae
inc
shl
in
jle
adc
icebp
fdivr
and
add
add
jnp
dec
in
push
(bad)
lock
mov
daa
mov
add
call
dec
pushf
add
add
jmp
das
mov
sub
fadd
add
sti
pop
leave
gs
adc
scas
mov
inc
add
add
push
pop
mov
push
sub
push
int
je
dec
inc
mov
add
add
add
xor
test
mov
mov
adc
or
inc
add
jnp
sti
sbb
inc
inc
push
cdq
dec
jne
pop
retf
js
popf
mov
sbb
inc
je
test
out
add
add
(bad)
loopne
pop
pop
cmps
adc
xor
xchg
pop
mov
add
(bad)
and
imul
iret
or
add
add
cmp
dec
movs
cmp
sub
jg
dec
xchg
aaa
push
dec
dec
adc
add
jbe
cli
loop
(bad)
inc
add
add
mov
pop
push
inc
sbb
ret
dec
cmp
mov
push
bound
pop
inc
scas
inc
xchg
rcl
pop
cmps
add
add
xor
addr16
push
push
or
dec
cmp
mov
popf
das
hlt
in
popf
icebp
add
add
dec
mov
xchg
data16
sub
out
jge
dec
dec
ins
clc
push
fwait
mov
mov
add
xchg
lock
mov
mov
int3
jg
jne
mov
jne
add
add
mov
add
xor
add
mov
xchg
or
aad
adc
pushf
add
add
ins
or
ret
out
mov
sar
push
mov
popa
xor
jo
cmp
xchg
imul
sub
add
add
in
mov
rol
ja
mov
hlt
and
bound
jg
icebp
(bad)
cmp
in
add
add
popf
push
div
pop
mov
test
jge
loopne
mov
add
add
xor
xchg
cmp
(bad)
and
adc
dec
lea
dec
sbb
loopne
popa
lahf
add
add
push
sub
ja
into
jl
xchg
jl
pop
cld
or
das
std
push
nop
mov
inc
push
add
add
idiv
in
jl
stc
push
das
mov
mov
push
xchg
mov
xor
jle
cmc
push
xor
mov
add
add
movzx
pop
push
pop
push
push
int3
pop
test
jmp
jle
out
sar
add
add
add
add
push
xchg
sub
or
outs
aas
pop
ja
mov
outs
pop
mov
add
add
jo
and
jg
mov
icebp
lods
push
jno
dec
sar
xor
fs
les
dec
das
in
sub
add
pop
sub
pop
ja
mov
xchg
pop
mov
pusha
les
icebp
add
add
mov
inc
sub
or
nop
pusha
fisub
loopne
cld
xor
sti
leave
add
add
loopne
dec
cmc
cmp
test
shl
in
push
les
jnp
push
inc
mov
mov
and
popf
push
add
mov
fidiv
outs
lock
cwde
pop
sub
dec
jnp
jnp
mov
jnp
add
add
test
push
pop
and
lea
scas
push
mov
add
scas
dec
xchg
stc
lds
(bad)
fsubr
loopne
add
add
pushf
push
in
jbe
push
inc
inc
enter
rcl
fild
cld
dec
mov
inc
jns
add
add
fstp
push
mov
clc
jmp
jle
repnz
mov
push
inc
pusha
xchg
sbb
loop
fwait
add
add
jge
mov
inc
clc
fisub
mov
push
xor
jg
cld
fnclex
loopne
sbb
add
add
xor
lea
push
int
adc
mov
mov
and
dec
(bad)
dec
call
add
add
popa
mov
test
and
pusha
push
jb
xchg
pop
mov
lock
and
inc
sub
and
aas
ret
enter
sbb
inc
ret
(bad)
lock
fnsave
aam
cmps
add
add
cmp
sti
aad
or
out
add
mov
ins
pushw
inc
pop
cmp
gs
dec
in
add
add
xchg
jae
shl
jne
sub
hlt
adc
hlt
pop
and
inc
mov
xor
add
add
mov
push
ja
ret
pusha
shl
test
jg
pusha
pop
enter
mov
jb
pusha
sbb
add
add
pushf
push
xchg
pushf
jo
nop
pusha
stos
adc
loop
sbb
les
nop
mov
add
scas
adc
sbb
mov
shl
pushf
jno
shl
retf
jb
enter
add
push
and
daa
sub
adc
sti
enter
aas
enter
mov
std
add
add
movs
aaa
pushf
jne
sbb
jl
xchg
mov
mov
or
mov
add
add
xor
sbb
push
lahf
cmp
jno
nop
clc
mov
xchg
cmp
pop
mov
mov
add
add
loope
mov
and
mov
mov
jmp
in
xchg
or
push
inc
clc
xchg
jnp
inc
or
add
add
nop
pop
enter
cli
xor
mov
mov
adc
mov
gs
shl
dec
leave
outs
add
add
sbb
push
mov
pop
iret
push
xchg
jecxz
mov
jg
pop
adc
mov
retf
and
mov
jp
mov
push
mov
or
mov
sub
adc
add
add
out
adc
sub
loope
sub
aas
xor
call
xor
call
adc
call
add
les
cs
call
les
cmp
sub
adc
cli
xchg
xchg
add
add
push
push
repz
shl
sub
pop
mov
pop
mov
loopne
clc
sbb
add
add
xchg
stos
jmp
pop
cmp
rcr
dec
jo
and
add
loope
test
cmps
fist
add
add
movs
inc
push
sub
mov
movs
jb
cmp
cmps
into
xchg
push
inc
jp
ret
add
add
xchg
cmp
dec
or
in
int
push
mov
into
aad
(bad)
repz
and
inc
xlat
mov
sub
lahf
leave
jmp
add
add
pop
fld
pop
mov
adc
inc
sub
ds
sbb
mov
aas
add
add
lods
sub
mov
sahf
mov
mov
mov
pop
mov
mov
test
test
add
add
and
dec
jg
jl
nop
sbb
nop
aad
(bad)
mov
nop
test
and
mov
add
add
xchg
and
in
sub
ss
rol
cmp
sahf
and
inc
cld
lahf
popa
fs
add
add
sub
nop
nop
cld
call
(bad)
clc
pop
nop
nop
mov
clc
mov
xor
mov
add
add
stos
mov
dec
xor
jg
out
sub
(bad)
out
and
push
push
dec
dec
add
add
pop
in
add
push
jge
xchg
pop
mov
or
sub
cmp
inc
clc
push
inc
lock
mov
add
add
dec
dec
sar
xchg
test
dec
sbb
or
cmp
aam
dec
sub
add
add
mov
mov
ja
lds
push
xchg
mov
lea
cmp
mov
add
add
sbb
(bad)
addr16
and
add
adc
retf
and
pop
sbb
loop
and
sub
add
add
dec
sub
pop
movs
pop
jmp
and
movs
push
imul
lds
inc
test
shr
inc
retf
test
daa
aas
test
imul
pusha
les
sub
and
push
jg
add
add
or
aaa
add
or
out
cmps
outs
xchg
(bad)
(bad)
jae
adc
mov
mov
add
add
sar
inc
push
stos
mov
dec
jge
je
inc
aaa
das
into
xor
cmp
lods
ficom
mov
add
push
jae
mov
cmp
pop
aam
je
push
dec
cmps
pop
inc
lds
add
add
jl
cdq
jg
xor
pop
mov
(bad)
jno
movs
std
inc
rol
push
leave
sub
add
add
in
test
mov
mov
mov
aam
mov
cmp
or
push
xchg
cmps
add
add
xchg
dec
popf
fdiv
ja
xor
cli
aad
mov
jb
popa
ds
fmul
mov
mov
cmc
mov
cmc
add
add
xor
adc
adc
dec
mov
sub
push
clc
and
je
dec
rol
add
add
pop
das
sbb
jne
cmp
gs
xor
and
jl
push
and
in
add
add
ror
push
imul
push
sar
lds
mov
jno
pcmpgtw
iret
dec
adc
add
add
xor
into
pop
clc
jp
bound
(bad)
lods
mov
lahf
inc
xor
outs
sub
or
add
call
jo
xchg
loope
hlt
push
and
or
jo
or
sub
dec
shl
mov
test
arpl
jl
imul
or
add
add
test
dec
sub
stos
xor
pop
jmp
and
scas
cld
hlt
test
call
cmc
rcl
jmp
dec
sbb
sti
mov
enter
fs
repnz
fisubr
fsub
dec
ret
add
adc
test
(bad)
and
je
out
xchg
jge
and
push
and
xchg
pop
lds
sub
push
hlt
mov
jg
dec
pop
pop
data16
(bad)
aam
dec
test
cmps
leave
pop
add
push
dec
in
xchg
xchg
dec
mov
in
cmp
out
inc
or
dec
sub
daa
lock
adc
add
add
xchg
or
mov
adc
std
movs
sub
add
dec
mov
jne
pop
mov
push
add
add
repnz
xchg
jle
dec
push
fisubr
call
jmp
and
xor
add
add
jne
idiv
push
(bad)
cdq
lods
add
sub
push
jmp
cmp
je
xchg
ja
add
sbb
inc
adc
loop
cmps
fmul
mov
xchg
jge
sub
pop
adc
mov
jb
aad
push
or
add
ins
xchg
clc
cld
mov
jnp
pop
imul
and
jae
sbb
fxam
add
add
mov
inc
add
and
shr
dec
ins
mov
push
inc
xor
aad
pop
dec
clc
add
add
cmp
clc
retf
leave
adc
jmp
out
test
push
test
hlt
lahf
in
stos
mov
or
add
add
dec
out
and
cli
or
retf
xchg
mov
fmul
mov
call
add
add
mov
jnp
jae
retf
aam
repnz
ins
sub
cdq
sub
adc
mov
cmp
add
add
add
push
(bad)
sar
lods
pop
(bad)
dec
(bad)
jne
mov
shl
inc
stos
leave
mov
adc
add
add
lods
push
movs
dec
push
mov
aaa
and
xchg
movs
std
gs
mov
shl
add
add
pop
or
imul
sub
push
sub
push
sub
push
or
fst
or
sub
xchg
inc
movs
out
mov
scas
adc
mov
popa
add
add
push
call
push
mov
dec
or
imul
shl
pusha
add
add
inc
ret
sub
and
jmp
push
push
in
test
jmp
out
mov
arpl
add
xchg
pusha
movs
cwde
shl
movs
mov
punpcklwd
(bad)
adc
mov
pop
shl
and
add
add
movs
mov
sub
bound
add
out
adc
inc
jmp
iret
data16
add
add
pop
movs
loop
enter
adc
adc
cs
or
inc
mov
hlt
cld
and
add
leave
je
jae
sbb
outs
(bad)
jmp
cmp
mov
xor
mul
gs
in
popa
jae
out
test
pop
shr
and
and
iret
shl
test
jb
repz
fiadd
add
add
pop
stc
mov
sub
je
loope
jnp
sub
fld
push
mov
or
daa
call
add
add
(bad)
jmp
mov
lock
ret
push
sbb
cmp
add
add
out
loop
mov
ins
sub
dec
bnd
test
pop
mov
push
jl
pop
adc
push
add
add
jecxz
adc
sub
in
pop
or
bnd
push
icebp
xor
cmp
(bad)
mov
stos
movs
adc
adc
add
add
sub
shl
mov
jecxz
dec
das
retf
dec
rcr
nop
xchg
leave
mov
sbb
add
mov
adc
call
xor
std
sub
and
adc
lock
add
mov
data16
sbb
jmp
loope
mov
add
icebp
movs
je
jb
jmp
add
inc
pop
cmp
movs
push
pop
push
out
imul
not
sbb
leave
icebp
cmp
add
add
std
sbb
xor
add
shl
imul
(bad)
call
mov
imul
add
test
in
ret
jns
call
out
inc
imul
add
dec
inc
push
mov
in
jno
leave
fisttp
push
cmps
jns
inc
arpl
cmp
repnz
jnp
push
test
add
add
or
adc
pop
jmp
pop
xchg
std
cmp
mov
iret
add
add
rcr
sub
xchg
dec
mov
add
add
lods
rcl
or
jmp
out
add
add
stc
and
mov
leave
shl
adc
out
std
sbb
stos
or
cld
movs
(bad)
adc
repz
add
add
frstor
ds
dec
push
dec
popf
pop
sti
jle
lock
mov
inc
or
push
dec
xor
or
push
add
add
mov
rcl
mov
inc
and
dec
add
mov
xchg
and
in
jg
sub
add
add
cmp
das
ret
movs
mov
std
xchg
(bad)
rol
scas
pop
dec
cmc
cdq
push
ins
add
add
xchg
jecxz
mov
(bad)
shl
inc
add
iret
neg
clc
je
add
add
cli
imul
push
jle
mov
neg
icebp
jp
jle
(bad)
jl
lock
out
xor
out
stc
mov
lods
outs
jb
ja
jmp
outs
inc
in
jne
mov
adc
imul
sahf
and
mov
push
mov
jmp
shl
imul
adc
cmps
xlat
clc
icebp
xchg
mov
cmps
aaa
mov
dec
mov
cmp
push
in
neg
lahf
inc
cmp
inc
pusha
push
xchg
add
shr
sub
mov
add
add
jp
mov
in
adc
das
call
mov
sub
cli
(bad)
imul
add
add
je
jl
xchg
in
and
and
sbb
pop
sub
mov
adc
(bad)
sub
mov
outs
add
add
mov
adc
fcomp
and
movs
imul
in
sub
add
add
or
fwait
jo
sub
push
inc
sub
sbb
cmpxchg
sub
les
sub
adc
add
add
sub
test
sub
loope
sub
enter
mov
push
adc
jmp
add
add
xchg
mov
dec
jmp
adc
mov
test
scas
cmp
add
add
and
cli
cmp
jae
push
adc
(bad)
in
nop
jmp
add
add
adc
jb
test
(bad)
aas
out
emms
adc
sbb
out
pop
xchg
pop
fmul
inc
fsub
add
add
aas
and
cmp
jnp
in
or
pop
in
pop
fadd
inc
or
inc
ja
inc
push
sar
mov
repnz
sub
imul
imul
inc
fisub
fimul
mov
add
xor
xlat
retf
ds
std
iret
mov
sub
mov
sub
dec
pop
inc
or
add
add
or
sub
push
xchg
or
sbb
popf
dec
nop
(bad)
movs
mov
or
lock
sub
add
test
dec
pop
mov
(bad)
sti
retf
cli
loop
imul
in
push
or
out
repnz
loopne
add
add
dec
mov
pop
(bad)
xor
js
imul
jno
dec
and
into
mov
add
pop
mov
cld
push
retw
movs
xchg
int3
mov
fcmovbe
fmulp
jbe
push
fs
pop
stos
retf
add
add
dec
adc
shl
fdiv
dec
loopne
mov
push
push
and
adc
inc
aas
mov
add
add
sub
cmp
mov
dec
lock
fstp
in
jecxz
add
add
xchg
stos
test
(bad)
ret
cwde
xor
loope
push
push
scas
or
xor
loop
add
f2xm1
add
add
bound
xlat
jo
xchg
or
push
jns
hlt
mov
dec
jle
add
add
add
adc
jg
xchg
pop
in
fcomp
(bad)
(bad)
mov
push
daa
out
lock
add
add
pusha
(bad)
retf
stc
es
xchg
and
mov
popf
push
mov
cld
and
imul
dec
sldt
add
mov
in
ror
stos
out
dec
and
add
fwait
jmp
lock
adc
add
add
rol
nop
cld
mov
xor
pusha
stc
mov
call
add
je
or
add
add
push
adc
das
push
pop
iret
jne
xchg
scas
mov
(bad)
pop
cmp
pop
pop
pop
lock
adc
push
jg
or
cmp
in
add
and
mov
add
add
nop
fdiv
adc
dec
xchg
(bad)
jge
je
mov
push
and
xor
js
in
and
add
add
cmps
daa
adc
loopne
lea
push
xor
mov
pop
add
out
test
xor
add
add
pop
pop
push
jge
aad
adc
ret
mov
hlt
dec
sub
jbe
fwait
add
add
or
fistp
pushf
or
jle
xor
mov
xchg
in
and
shl
add
add
or
aaa
pop
ds
cmps
jno
jb
add
cmp
push
fisttp
dec
xor
add
add
das
scas
xor
add
adc
imul
inc
int
ficom
(bad)
loopne
pop
add
add
add
xor
out
mov
and
pop
sub
sbb
addr16
pop
xchg
jle
in
mov
add
add
mov
dec
or
and
mov
cli
loope
or
std
sub
add
add
(bad)
into
daa
add
fst
imul
mov
mov
lock
xor
daa
test
add
add
imul
mov
in
nop
dec
add
xchg
ins
and
outs
push
daa
and
mov
scas
cs
add
scas
push
cwde
movs
or
ror
call
add
add
sti
jle
and
popf
cmp
sti
jae
adc
stos
cmps
movs
movs
mov
cs
clc
add
add
nop
cld
or
or
(bad)
popf
push
adc
and
and
xchg
cmps
pop
test
jnp
and
push
adc
inc
xchg
fwait
mov
pop
inc
and
std
(bad)
mov
inc
adc
and
mov
in
add
mov
aad
push
ffreep
cmp
outs
add
add
imul
or
jno
imul
pop
in
or
cmp
jp
pmaxsw
lods
dec
add
add
mov
jo
jae
cmp
or
lods
jmp
add
ja
add
and
mov
test
sub
dec
xor
push
xlat
stc
push
jbe
add
inc
das
add
add
mov
jle
dec
mov
add
jne
mov
lds
dec
inc
loopne
test
shl
add
add
push
jne
lods
mov
stos
(bad)
mov
sub
cld
cmp
adc
das
dec
stos
iret
add
add
loopne
scas
lds
push
push
pop
cdq
cwde
sbb
mov
mov
add
add
mov
ds
mov
inc
and
ret
pusha
ret
fild
fmul
push
xchg
jp
add
add
or
sub
or
adc
push
mov
adc
call
loope
jns
das
cld
xchg
push
mov
dec
add
add
leave
ror
add
push
test
sub
ins
xor
adc
push
mov
sti
daa
repnz
or
add
add
call
push
int3
lahf
push
adc
and
and
xchg
fwait
push
cli
out
icebp
cmp
inc
inc
dec
mov
add
add
iret
add
add
cmp
pushf
mov
mov
frstor
fs
loope
ja
repz
add
add
lahf
stc
cmps
shl
mov
aam
rcl
stos
ds
shl
sbb
mov
push
dec
das
cli
popa
add
add
dec
test
repnz
mov
mov
or
pop
gs
mov
add
mov
add
sbb
xchg
xchg
push
leave
mov
in
fadd
xchg
push
adc
add
add
xor
sbb
dec
cpuid
fst
scas
std
push
inc
clc
dec
xor
nop
bound
add
add
test
fsub
and
pop
aam
out
or
or
mov
mov
and
cli
test
ror
loope
adc
inc
dec
repnz
mov
sti
pop
lods
jg
sub
add
add
push
(bad)
scas
pop
mov
stos
pop
mov
dec
nop
dec
stos
(bad)
lock
xchg
lods
das
mov
xchg
jb
add
add
popf
ja
add
aas
pusha
or
fist
punpcklwd
stos
fs
xchg
pop
xchg
jno
rcl
adc
(bad)
push
add
add
inc
add
push
mov
test
test
adc
add
xchg
nop
and
scas
and
add
add
xchg
cmp
inc
mov
push
add
leave
and
cld
add
dec
sub
xchg
add
add
hlt
pop
sti
icebp
imul
sub
mov
mov
cs
aam
xchg
push
dec
bnd
arpl
mov
add
mov
jge
sahf
jp
add
push
inc
add
sbb
xchg
adc
call
in
loop
fs
cmp
add
add
adc
inc
daa
daa
adc
out
nop
dec
lea
xchg
push
push
jb
aam
in
sub
sbb
rol
add
mov
int3
xchg
jge
xchg
ins
dec
fs
xchg
adc
hlt
mov
push
xor
fadd
add
shl
dec
mov
sub
retf
cmps
push
fwait
xchg
movs
push
bound
add
test
mov
movs
cld
rcr
shr
or
dec
add
add
lods
mov
pusha
sbb
push
mov
pop
idiv
pop
xchg
les
mov
mov
lods
add
add
rol
add
add
dec
jbe
cwde
jge
enter
repnz
adc
test
or
push
xor
push
add
add
stc
fisubr
sbb
push
les
or
cdq
sub
mov
ret
outs
les
add
add
scas
add
lea
scas
cld
mov
std
mov
call
jae
add
shl
push
call
push
add
repnz
push
sub
(bad)
lds
or
mov
and
add
call
xchg
and
shl
mov
add
xchg
adc
dec
mov
push
mov
cs
int
add
add
push
popa
adc
dec
jle
sbb
imul
push
lods
cmp
push
inc
jmp
push
or
mov
push
and
jg
fild
push
or
mov
aad
retf
loop
jne
push
aaa
cs
adc
add
add
rcr
fldenv
test
mov
adc
popf
sub
jb
out
sub
xor
add
add
adc
adc
je
cmc
and
mov
or
jmp
push
adc
dec
or
rol
es
retf
jno
add
add
add
add
or
add
adc
push
and
pushf
stos
push
mov
jno
lahf
mov
add
add
jae
push
not
xor
add
mov
adc
inc
and
inc
add
add
adc
xchg
jmp
cmc
das
sahf
xchg
push
xor
mov
push
movs
arpl
dec
into
adc
push
imul
idiv
movs
lds
push
in
icebp
cmp
pusha
sar
adc
enter
mov
add
add
inc
add
push
jmp
cwde
jmp
sti
scas
ss
add
add
cmp
sbb
repnz
fisttp
loop
popa
xor
(bad)
and
dec
xor
add
add
xchg
xor
sbb
and
adc
setnp
mov
adc
add
ror
mov
xchg
xor
arpl
in
movs
out
jmp
lds
sahf
xor
jno
ret
add
add
add
iret
xchg
and
(bad)
inc
sub
dec
adc
stos
loop
mov
loop
mov
add
add
mov
and
jo
lahf
jbe
pop
push
mov
adc
push
push
aaa
adc
js
mov
mov
out
test
pushf
push
push
and
cdq
ins
lods
daa
movs
jns
push
in
mov
add
sbb
jmp
add
add
jge
sahf
aaa
(bad)
xor
in
mov
dec
imul
mov
mov
add
add
sub
icebp
dec
xchg
push
push
xchg
xor
fsubr
lods
push
sar
stc
xchg
add
add
ss
call
jge
add
sub
cmp
movs
sub
dec
pop
adc
(bad)
sbb
add
imul
push
push
stos
sbb
sub
xchg
mov
dec
adc
cld
aam
popf
add
add
xor
fld
invd
mov
add
jle
mov
and
in
xchg
mov
or
add
add
pop
jl
xchg
test
dec
(bad)
jns
jnp
jo
test
out
mov
inc
(bad)
and
mov
push
pop
add
add
sbb
bound
jp
call
mov
cmp
mov
xor
fild
mov
jno
imul
inc
push
jmp
daa
loopne
jge
push
add
mov
add
add
cmp
sub
xor
lods
inc
imul
mov
dec
mov
mov
add
add
push
adc
push
(bad)
ins
cli
mov
push
cmp
mov
xchg
adc
add
add
(bad)
in
inc
mov
dec
lea
in
add
or
punpckhdq
sub
sub
add
add
repz
hlt
push
xor
daa
cmp
xchg
sub
cld
(bad)
mov
(bad)
(bad)
(bad)
push
xchg
dec
add
add
pop
retf
in
pop
mov
ja
xlat
dec
je
ret
xchg
xor
out
clc
lock
cld
std
lds
xchg
add
add
stc
jmp
dec
or
popa
xor
das
push
inc
sbb
jecxz
mov
not
jle
test
cmp
sbb
test
add
add
adc
jmp
dec
and
pop
mov
(bad)
clc
sbb
mov
adc
daa
add
add
stc
or
ja
xor
cmp
dec
xor
dec
lahf
jne
jne
sbb
push
inc
push
add
add
mov
xchg
lock
cmp
and
adc
nop
push
imul
into
in
mov
push
mov
add
adc
adc
pop
cld
push
test
leave
inc
cwde
pushf
add
inc
mov
sti
and
push
add
add
xchg
sbb
or
dec
sub
sub
lds
jno
push
push
xor
and
je
mov
loop
add
add
adc
adc
sbb
inc
cdq
lock
adc
(bad)
arpl
add
adc
aam
lds
add
add
shr
and
bound
dec
xor
add
push
out
cwde
adc
in
push
sub
iret
add
add
mov
ja
cmp
add
and
add
in
push
and
sbb
pop
sub
cld
push
adc
and
xchg
cli
test
(bad)
mov
ss
inc
fild
jg
out
enter
add
add
adc
push
mov
in
mov
lds
daa
jae
or
jae
adc
add
add
loop
pop
movs
inc
sub
jmp
jns
je
mov
jb
retf
out
fisttp
xchg
push
add
add
js
mov
dec
sbb
pop
ret
cmp
aam
sub
fdivr
jns
add
add
dec
(bad)
pop
mov
mov
adc
dec
push
cwde
test
test
push
outs
xlat
psubw
mov
add
add
xor
sub
lds
loopne
clc
loopne
and
pop
push
cmps
inc
in
and
add
add
call
jnp
push
daa
mov
xor
(bad)
sti
retf
clc
push
dec
inc
cmps
rol
add
add
cmp
dec
xchg
or
clc
sub
cmp
jae
fwait
je
mov
sbb
xor
add
add
sub
retf
xor
stos
cmps
adc
push
push
push
cli
clc
push
movs
cdq
push
or
sub
sub
sub
add
leave
pop
xchg
push
cmps
dec
sub
ja
jmp
add
add
add
lods
mov
pop
(bad)
adc
popa
shl
data16
ret
mov
xchg
pop
mov
sbb
jne
mov
jmp
sbb
adc
dec
leave
mov
(bad)
mov
enter
add
add
pop
mov
clc
jns
mov
push
ret
inc
movs
mov
mov
inc
dec
add
add
add
ds
and
pusha
mov
shr
fwait
push
icebp
cmp
out
xor
add
add
xor
out
adc
and
push
dec
fwait
retf
(bad)
mov
mov
cwde
shl
loope
mov
clc
maskmovq
sbb
add
add
movs
loop
xchg
sub
pop
stos
stos
and
sbb
adc
daa
mov
dec
push
adc
add
mov
mov
dec
js
xchg
pop
and
xchg
adc
jmp
xor
ficomp
lods
xchg
call
ret
test
push
rcr
add
add
pop
repnz
ja
lock
or
and
fsub
cli
pushf
push
sbb
(bad)
cld
add
add
fist
pop
mov
popf
mov
push
xchg
leave
cld
cmc
in
xchg
jmp
pop
or
xor
js
add
add
sub
xchg
xor
jp
sub
dec
pop
fwait
hlt
scas
mov
jp
mov
add
add
push
mov
xlat
adc
and
cvtps2pd
jmp
inc
inc
adc
or
add
add
xchg
add
sub
test
jl
jp
and
in
adc
mov
sub
es
es
jge
add
add
push
pop
jns
jnp
and
rdpmc
loopne
push
cdq
xchg
push
jmp
lock
and
xor
add
add
inc
sbb
mov
ret
in
ja
mov
pop
lock
imul
add
in
jle
rcl
jl
cdq
enter
retf
push
aaa
sbb
cmp
les
ror
test
add
add
bnd
(bad)
xor
xchg
popa
or
cmps
add
inc
in
inc
fsub
or
sub
add
add
sub
push
pop
fisubr
sub
pop
retf
mov
js
lods
sub
add
add
sahf
pop
mov
mov
push
or
das
mov
cmp
push
cmp
je
add
add
pop
lea
push
push
jmp
retf
dec
stos
ret
pop
jns
inc
mov
nop
adc
jmp
add
aaa
neg
retf
loopne
mov
pop
dec
dec
inc
nop
lods
mov
mov
add
add
jl
xor
shl
mov
cmp
ins
dec
mov
test
scas
jecxz
mov
jle
add
add
(bad)
clc
xor
mov
in
cli
sub
jg
push
neg
add
jecxz
movs
(bad)
rol
add
add
sub
mov
fdiv
jns
jno
or
sub
imul
out
adc
and
add
add
xor
mov
ss
mov
pop
adc
xor
out
pop
retf
jle
add
add
repz
push
stc
xchg
pop
bound
shr
mov
jle
cmps
dec
mov
jbe
add
add
dec
mov
jne
mov
enter
xor
lahf
fcom
or
sbb
add
add
mov
pop
xor
je
(bad)
pop
push
retf
sbb
(bad)
and
and
loopne
push
add
add
lahf
pop
hlt
mov
adc
jo
mov
outs
push
add
daa
or
add
adc
lock
add
add
sbb
je
leave
cmps
fidiv
lods
mov
daa
pop
jne
(bad)
dec
aaa
cmp
jne
enter
shr
add
dec
(bad)
movs
aaa
dec
push
cmp
ja
cld
jne
es
or
fld
jp
iret
bsr
xchg
jae
or
add
add
or
les
mov
js
push
popa
inc
or
adc
in
push
hlt
add
add
cmp
shl
jae
je
int
pop
outs
push
or
jae
adc
les
add
add
cmp
cld
pop
fs
xchg
xchg
sub
sbb
sar
sub
lods
or
xlat
or
add
add
fbstp
es
mov
mov
sub
mov
cld
test
ficomp
loope
jne
ss
add
dec
lods
je
push
mov
add
dec
or
push
cmp
pushf
shl
mov
scas
in
cmp
add
add
jge
das
lods
cmc
mov
(bad)
popf
or
scas
mov
loope
pop
and
hlt
sti
out
and
jmp
add
add
mov
gs
mov
jmp
out
clc
and
ror
daa
cmp
(bad)
stc
or
fild
add
add
lds
cmp
jnp
lea
mov
sbb
in
ret
add
into
xlat
pop
pop
push
dec
pop
loopne
mov
cld
ror
sbb
jno
dec
sbb
jb
add
add
push
movs
push
loop
pop
and
nop
or
xchg
pop
and
mov
lods
and
xor
add
add
jmp
cs
cmc
dec
cs
aad
mov
and
mov
or
mov
add
add
adc
push
adc
mov
dec
or
dec
pop
nop
ja
dec
sti
mov
pusha
popf
hlt
add
add
mov
push
xor
sub
sar
shl
add
sub
popf
not
jge
add
add
mov
popf
ja
xchg
inc
sub
inc
stos
or
dec
jne
add
mov
clc
dec
clc
mov
add
add
mov
dec
push
jnp
xor
jns
sub
in
and
retf
jne
push
ja
dec
pop
add
add
jmp
jp
jge
xor
and
sahf
rcl
cmp
xchg
mov
mov
xlat
bound
push
fst
xor
adc
inc
inc
or
add
add
or
adc
and
loop
sub
or
adc
inc
ja
cmp
cmp
test
inc
cmp
add
add
inc
sub
fstp
xor
imul
xor
push
call
cmp
inc
pop
icebp
push
xchg
aas
add
add
mov
sub
mov
push
inc
lock
dec
repnz
imul
add
js
sbb
and
pop
xchg
jmp
outs
dec
cmc
push
test
daa
adc
and
add
add
inc
jne
popa
in
xor
adc
ret
test
fcom
je
cwde
push
push
mov
fsubrp
mov
popa
dec
test
pop
push
popf
(bad)
jo
in
mov
push
cmp
nop
rol
add
add
push
and
cli
xchg
xchg
xchg
(bad)
adc
sbb
add
add
push
je
stos
das
and
pop
stos
out
movs
(bad)
neg
lds
and
mov
ds
fnsave
mov
push
add
jg
bound
sbb
xor
mov
inc
repz
mov
cmp
test
(bad)
jmp
sub
fs
add
add
(bad)
repnz
cmp
imul
mov
test
and
pop
push
xor
add
js
adc
xor
loop
test
or
adc
sbb
repnz
add
add
inc
add
or
cwde
push
sbb
cmp
jle
daa
pusha
dec
sbb
inc
jl
scas
and
pop
jg
test
push
jmp
jmp
lods
daa
div
xchg
pop
mov
inc
(bad)
cmp
adc
jl
jbe
push
add
add
jmp
xchg
jne
push
inc
sub
push
xchg
or
adc
dec
jmp
adc
cmp
add
add
mov
movs
pop
cwde
aas
xlat
sbb
sub
test
hlt
out
retf
mov
sub
test
ja
ss
lea
fmul
jae
fld
jmp
jl
inc
add
push
push
cmp
pop
fdivr
cmp
add
push
xchg
jbe
add
add
dec
inc
adc
dec
in
mov
rol
inc
loopne
adc
jle
mov
or
add
add
inc
mov
fsubr
neg
push
push
xor
leave
je
jmp
aam
push
mov
dec
jmp
add
daa
scas
push
call
test
push
stos
mov
adc
jo
push
(bad)
cmc
addr16
add
add
mov
and
dec
or
inc
and
lds
jmp
pushf
or
fdivp
add
add
int
lods
or
add
std
lods
rcl
shr
call
js
nop
sbb
add
add
inc
dec
inc
push
dec
retf
in
inc
lods
xchg
std
xor
push
dec
jp
inc
sti
hlt
cli
pop
movs
or
mov
add
das
mov
pop
ins
cmp
je
test
(bad)
nop
sbb
in
or
pop
fstp
rol
add
adc
sbb
sbb
inc
pop
adc
xlat
jge
mov
cs
and
adc
call
aas
inc
jbe
push
push
push
or
inc
movs
inc
push
inc
inc
hlt
mov
pusha
mov
add
add
lods
xor
lock
mov
aaa
jae
pop
enter
pop
out
sub
xor
add
add
fmul
mov
xor
(bad)
js
sub
add
push
stos
(bad)
push
add
add
loopne
xchg
mov
loope
add
or
push
xchg
movs
or
add
ror
adc
xor
xlat
jae
and
mov
nop
mov
push
add
add
(bad)
aas
daa
jb
dec
pop
jmp
push
pop
jmp
fsub
mov
inc
jmp
add
add
call
sbb
mov
dec
fld
ins
bound
mov
ficom
pop
jno
add
add
stc
test
retf
loopne
leave
mov
inc
inc
xchg
dec
push
pop
hlt
mov
dec
fiadd
je
add
add
cmps
mov
cmp
or
add
jmp
cdq
(bad)
jne
add
add
mov
and
adc
adc
inc
test
mov
adc
dec
addr16
add
add
test
xor
or
fdivr
cwde
mov
adc
push
mov
xchg
or
sti
and
hlt
push
dec
loope
lods
ret
or
imul
imul
push
jne
out
mov
dec
add
add
dec
int3
mov
dec
in
push
push
mov
and
retf
push
lods
ret
call
sub
lods
(bad)
stos
int
xor
loopne
loop
imul
mov
add
add
mov
inc
pop
test
xchg
fst
mov
jmp
mov
add
add
push
test
int
sub
imul
push
and
and
mov
add
je
mov
pop
push
test
add
fiadd
popa
push
jnp
sbb
neg
add
stos
xchg
rcr
dec
sbb
mov
into
dec
test
mov
cmps
lahf
int3
xchg
lds
add
add
dec
mov
push
lods
and
aad
repnz
or
push
mov
test
daa
sahf
adc
adc
movs
add
add
lea
mov
pusha
or
mov
mov
cmp
or
add
les
in
push
ja
push
(bad)
dec
cwde
lea
cwde
mov
xchg
push
jmp
xor
push
push
stc
sub
adc
test
cmp
jmp
add
and
pop
push
test
push
rcr
nop
nop
in
mov
das
cmps
div
add
add
cmp
(bad)
xchg
(bad)
pop
mov
mov
je
xchg
call
sub
add
add
mov
add
add
sbb
(bad)
and
imul
(bad)
push
sbb
fidiv
or
cmc
imul
fdiv
aam
nop
xchg
push
call
add
xlat
mov
dec
lods
adc
mov
add
popf
std
ds
popf
pop
cwde
cli
inc
inc
popf
jne
sti
or
rcr
clc
push
enter
outs
pop
mov
add
add
sub
sbb
mov
imul
dec
push
cmp
in
aas
push
and
xor
add
add
dec
je
dec
rcl
adc
lock
sub
das
inc
and
ja
popf
test
and
sbb
add
add
xchg
stc
cwde
rol
inc
popw
fild
inc
sti
fst
jnp
rcr
add
add
push
inc
cmp
xor
popf
push
xchg
das
jbe
in
mov
push
or
mov
out
add
add
jecxz
call
(bad)
aam
gs
and
mov
das
sbb
mov
and
cli
(bad)
loope
add
add
ds
popf
mov
pusha
ret
xor
adc
dec
stos
test
test
add
add
push
push
pop
out
mov
cwde
mov
out
inc
inc
sbb
mov
cmp
sbb
dec
aad
add
add
inc
mov
daa
push
inc
adc
lea
mov
adc
hlt
add
push
add
add
inc
imul
push
mov
retf
repz
loop
xchg
and
ins
adc
jge
mov
stc
lods
mov
fild
mov
lods
or
jno
repnz
xor
leave
mov
add
add
scas
fcomip
rcr
jl
xor
jmp
ret
pop
cld
jo
sbb
xchg
mov
add
add
gs
mov
mov
clc
rcl
bound
xchg
hlt
jb
add
test
add
add
fisttp
pop
sbb
lods
mov
xchg
dec
sbb
adc
cmc
add
add
and
into
sbb
movs
ret
test
push
fs
(bad)
loopne
push
xchg
sbb
mov
or
add
add
xor
mov
test
xor
mov
shl
or
ja
adc
add
add
or
fimul
ins
fstp
push
adc
xor
fdiv
inc
jb
in
jae
jg
adc
mov
push
sbb
mov
xchg
or
das
or
adc
out
jb
cmp
dec
idiv
add
add
xchg
repz
xchg
mov
fldenv
xchg
mov
pusha
push
dec
adc
dec
sub
popa
and
add
add
inc
(bad)
ror
ror
jae
add
sbb
dec
cli
std
ins
out
pop
or
sbb
add
add
clc
and
add
dec
adc
push
add
fs
mov
imul
add
add
dec
scas
retf
fld
leave
test
dec
pop
cmp
loop
mov
adc
inc
test
add
add
sar
rcr
jecxz
lds
mov
sbb
sbb
data16
in
bnd
sahf
add
add
pop
les
ret
add
adc
fs
pop
call
inc
nop
leave
push
add
add
or
pop
pop
and
inc
clc
mov
push
pushf
adc
test
shr
xor
add
add
inc
pop
or
fsubr
or
and
cmp
jne
adc
out
shl
pop
adc
add
add
aas
mov
enter
jg
call
(bad)
fcomip
add
ret
jecxz
or
sub
push
and
sbb
jg
jl
and
jae
cmp
jge
adc
add
add
xchg
xchg
sbb
inc
inc
jmp
ja
pop
and
pop
add
mov
js
in
inc
loope
or
sub
add
add
add
adc
push
xchg
repz
and
adc
arpl
bound
mov
add
movs
and
das
mov
sahf
mov
adc
sbb
aam
sbb
jno
adc
mov
mov
add
add
add
or
sub
ficomp
lock
xchg
sub
push
mov
inc
or
xor
push
pop
adc
add
test
adc
and
pop
and
fbstp
sbb
or
js
push
cs
sub
add
add
dec
sbb
int
xor
dec
add
sbb
pop
fs
test
mov
add
add
adc
cmps
lods
mov
int3
aaa
(bad)
(bad)
cmp
xchg
push
dec
mov
push
add
mov
push
add
add
imul
in
das
push
xchg
dec
pop
popf
and
sub
adc
xlat
add
add
and
mov
dec
in
xor
imul
jae
xor
add
add
dec
rcl
addr16
leave
retf
push
add
mov
mov
and
sub
add
add
call
scas
imul
retf
xor
adc
add
add
xor
sbb
xchg
or
or
pop
inc
mov
sub
pop
test
push
push
adc
add
add
xor
push
idiv
inc
enter
inc
adc
xchg
adc
lods
pop
and
out
and
jle
add
add
xchg
js
outs
test
pop
dec
and
popf
xor
mov
outs
test
movs
fcom
add
add
adc
nop
pop
jmp
xor
leave
ja
cmc
or
push
adc
sbb
add
inc
dec
scas
mov
mov
add
push
std
pop
xlat
mov
jae
and
inc
daa
jno
add
add
dec
pop
loope
sub
ficom
jb
xor
xor
pop
jmp
imul
add
add
push
ja
aam
sub
cmp
adc
xor
int
dec
cmc
mov
std
jp
jo
pop
add
add
add
push
pusha
fistp
jne
cmp
or
sub
mov
sbb
sub
in
push
add
add
pop
push
mov
sub
sub
movs
pop
mov
sub
inc
add
push
lahf
jbe
ins
push
dec
add
movs
cmp
add
add
push
adc
adc
push
sbb
jmp
push
xchg
mov
push
xchg
push
push
push
xchg
scas
add
add
or
or
aas
adc
adc
mov
jne
sbb
fadd
add
add
inc
lea
nop
xor
mov
scas
jmp
ret
jnp
lods
cmp
push
scas
adc
add
add
dec
and
inc
scas
pop
sbb
xchg
pusha
dec
in
test
cld
pop
mov
add
add
jmp
jne
nop
add
mov
rol
daa
out
popf
inc
xchg
mov
mov
inc
sub
add
jge
pusha
pop
xor
adc
sub
loop
in
push
cmp
mov
add
add
movs
imul
jns
push
aam
sbb
push
cmps
loopne
mov
cmp
add
cmp
add
add
adc
std
sub
or
or
xlat
in
popf
jg
jbe
push
stos
mov
ja
fld
arpl
push
cmp
jge
nop
shld
or
adc
push
jmp
add
add
add
or
ds
dec
add
add
or
jge
sub
adc
inc
cmp
add
add
inc
jae
push
push
xchg
pop
test
pop
jnp
or
cmp
push
popa
push
dec
in
mov
cmps
aad
or
out
add
and
leave
jmp
push
aaa
mov
(bad)
mov
add
add
cmc
dec
fmul
retf
rol
add
mov
lea
enter
add
test
in
adc
push
scas
test
call
loopne
inc
inc
jmp
scas
out
(bad)
test
add
add
jp
inc
push
ja
pushf
and
xchg
mov
(bad)
dec
mov
je
aam
dec
push
out
push
dec
add
add
jle
inc
and
jb
adc
dec
add
outs
push
push
call
and
pop
mov
and
leave
popa
add
aam
repz
cmp
mov
mov
daa
nop
ss
es
xchg
into
jno
dec
fs
add
data16
jecxz
or
into
mov
adc
or
add
inc
test
add
jmp
clc
xchg
stos
and
std
not
jns
pushf
loopne
je
pop
jg
js
dec
into
cmp
ja
add
add
cmp
xor
add
je
(bad)
aaa
pop
shl
fld
add
add
cld
fsub
test
mov
mov
stos
leave
loope
mov
add
add
cmp
inc
mov
mov
inc
scas
and
cmp
pop
pop
in
icebp
jge
pop
xchg
add
add
movs
jns
cmp
repnz
and
adc
loop
lods
jnp
lock
das
or
add
add
jae
scas
mov
adc
jg
sub
test
pop
popf
mov
and
dec
pop
adc
add
add
cmove
ja
in
and
add
xor
test
add
adc
inc
add
inc
loopne
dec
cld
mov
inc
(bad)
int
cli
cmc
xchg
fwait
jnp
sbb
ds
add
add
adc
push
and
xchg
inc
inc
mov
or
pop
inc
xabort
jl
bound
inc
add
add
or
lea
test
repnz
inc
clc
mov
sbb
mov
aas
sbb
add
add
pop
retf
and
mov
or
test
push
push
mov
mov
(bad)
stc
in
cmp
jnp
add
add
sbb
jl
retf
sbb
pop
fsubr
push
gs
ds
adc
lods
ins
dec
stos
add
add
or
mov
sub
cdq
rcr
xchg
stc
xor
sub
fs
mov
jnp
add
add
pop
mov
jae
call
adc
mov
imul
push
xchg
add
add
jmp
pop
(bad)
mov
xchg
mov
lods
or
xor
jmp
inc
mov
mov
add
(bad)
xlat
int
cmp
mov
nop
add
cmps
call
data16
fisttp
add
lods
ds
out
and
push
popa
mov
push
retf
and
jno
cmp
out
fadd
inc
add
add
rcl
imul
das
push
push
sbb
pop
or
adc
dec
push
lds
add
sub
je
outs
cmp
push
shl
or
in
inc
dec
lock
sbb
sbb
add
add
push
mov
pop
push
and
mov
mov
mov
add
xor
add
add
lea
fld
js
in
inc
or
dec
lods
adc
test
ficom
xchg
jmp
add
add
nop
mov
and
push
push
push
xor
pop
scas
push
mov
fist
enter
add
mov
push
(bad)
pop
cwd
and
dec
xlat
rol
mov
sbb
and
xchg
sbb
add
add
pop
and
cmc
icebp
or
in
dec
movs
aas
nop
push
jp
cdq
movs
jno
ins
nop
add
add
inc
mov
xor
cmp
cmp
or
enter
adc
cmc
cmp
push
not
add
add
bound
movs
aad
push
call
mov
push
inc
rcr
mov
adc
out
popf
push
add
add
pop
jle
lods
mov
dec
out
inc
and
pop
push
xchg
inc
or
mov
adc
add
add
(bad)
fldenv
mov
jb
xor
adc
xchg
inc
push
jne
fst
add
add
inc
push
fld
test
sub
ja
fisttp
cs
and
add
add
mov
push
dec
mov
add
test
aaa
je
and
mov
push
xchg
add
add
mov
dec
rcl
mov
and
jmp
movs
or
rol
dec
cwde
loope
add
add
sbb
push
cmp
fnstenv
push
sbb
lods
dec
or
push
pop
enter
add
mov
xor
jmp
lods
sub
pop
lahf
adc
pop
adc
or
sub
ins
or
mov
add
ds
nop
add
pop
or
and
adc
movs
hlt
ins
imul
add
adc
push
adc
(bad)
cmp
imul
enter
loop
push
outs
add
add
add
dec
jae
lea
lods
inc
fnstenv
inc
jb
ds
into
ins
add
xor
add
mov
ret
add
add
mov
adc
jno
mul
adc
fs
or
jns
add
sbb
xchg
dec
pop
dec
repz
add
add
or
mov
jne
sub
sub
and
dec
fs
jge
xchg
mov
add
add
cdq
jno
or
adc
sbb
inc
fidivr
std
sub
add
movs
inc
cli
into
arpl
xchg
test
stc
adc
mov
(bad)
sub
cmp
stos
std
pop
mov
test
or
fisub
xchg
scas
add
add
cmp
ror
jmp
sar
repz
pop
mov
movs
lds
jmp
add
and
movs
daa
jb
mov
hlt
nop
loop
add
add
push
bswap
leave
sub
add
add
add
pop
repnz
push
les
ins
sub
mov
push
sar
jp
nop
mov
je
adc
out
mov
add
add
pusha
popa
cmp
jge
neg
xchg
mov
adc
cld
and
add
add
dec
xor
push
jge
push
sub
add
jns
or
movs
sahf
push
int3
mov
cwde
inc
xor
add
jg
or
mov
pop
mov
outs
add
add
nop
pop
in
ins
movs
clc
rcl
push
and
popf
or
loopne
sub
jae
dec
call
sbb
jecxz
(bad)
sbb
in
loop
inc
call
or
leave
or
add
add
inc
lahf
jl
add
add
push
popf
std
xchg
adc
or
in
sub
xchg
mov
sar
scas
cld
ss
ja
add
add
or
sbb
inc
pop
cld
push
call
outs
in
loopne
add
mov
or
dec
fwait
pusha
mov
add
outs
jge
jle
jne
and
mov
mov
outs
jmp
or
lahf
push
sbb
add
add
mov
dec
mov
push
movs
les
stos
in
and
push
cmp
out
add
add
test
ds
retf
out
cmp
jne
pop
sbb
jne
test
jae
retf
push
mov
adc
ret
ins
push
xor
cmp
cmp
add
sbb
jmp
xlat
and
pop
rol
add
add
test
pop
out
mov
fbld
inc
loop
sbb
xchg
add
add
add
mov
inc
lods
jle
sub
jmp
cmps
rcr
mul
pop
sbb
jmp
add
add
xchg
or
jg
(bad)
dec
rcr
int3
aaa
shr
xchg
mov
mov
cli
(bad)
gs
mov
stos
add
add
popf
jne
cwde
leave
sbb
mov
jge
sub
out
pop
push
push
jnp
loopne
and
aaa
or
add
add
sbb
mov
in
enter
movs
xchg
push
xchg
fimul
mov
enter
jg
cli
aam
daa
es
aas
xchg
mov
sub
jp
movs
jle
and
mov
shl
adc
inc
add
add
add
mov
or
fndisi(8087
jge
dec
cmp
sbb
sar
in
sbb
dec
add
add
mov
fwait
shl
dec
out
push
dec
dec
pop
push
sub
imul
test
mov
inc
sub
ss
pop
cmp
add
dec
mov
(bad)
retf
add
cdq
or
adc
xchg
clc
aas
jnp
adc
push
out
aas
iret
cli
imul
xchg
push
add
xchg
cld
std
les
and
add
cld
mov
test
mov
jle
leave
dec
fdivr
add
add
aam
and
movs
inc
shr
pop
xchg
(bad)
(bad)
imul
inc
(bad)
icebp
inc
fsub
add
add
(bad)
mov
fmul
lds
sub
retf
fcom
jb
adc
jg
mov
xor
or
push
dec
gs
inc
fcmovnu
push
into
adc
aam
adc
adc
inc
push
jge
add
add
movs
(bad)
push
add
retf
mov
icebp
(bad)
mov
frstor
mov
push
add
add
dec
mov
mov
inc
lods
sbb
pushf
test
jmp
lock
or
fcomp
movs
add
add
jmp
and
pusha
cli
jge
loopne
inc
or
or
or
add
sbb
add
add
outs
mov
outs
adc
add
das
clc
loopne
sub
popf
push
push
jbe
test
mov
adc
shr
add
add
and
imul
jg
into
mov
dec
popf
movs
pop
mov
push
pop
add
add
add
xor
sub
push
shl
ret
xchg
outs
xor
push
cmc
repz
jns
or
inc
add
add
push
adc
or
js
inc
ror
and
pop
arpl
inc
or
not
test
or
loop
pop
clc
into
rcl
dec
push
sahf
xchg
lock
add
add
ds
das
mov
or
mov
sbb
arpl
mov
out
or
jnp
push
inc
add
add
mov
rcl
cmp
js
fld
xor
dec
fwait
xchg
imul
cmps
xlat
out
jle
mov
aaa
mov
stc
retf
test
push
add
add
pusha
punpckhbw
and
aaa
dec
and
or
adc
and
adc
(bad)
and
add
add
adc
push
loopne
push
push
push
cmc
lds
dec
loope
add
add
rcr
sub
sub
test
sub
push
je
aad
adc
add
add
pop
adc
or
js
shr
in
pop
xor
add
cmp
add
add
lods
aam
dec
cmp
cmps
les
test
lahf
or
and
mov
add
add
push
xchg
dec
push
dec
call
mov
xchg
pop
inc
test
push
xor
std
cmp
add
add
mov
push
fmul
and
push
dec
sbb
jg
stos
mov
mov
xor
and
or
dec
and
or
pop
mov
pop
shl
arpl
push
lds
mov
add
les
jbe
xor
retf
cmp
mov
test
scas
cs
dec
jl
adc
push
test
add
cld
fs
daa
pop
sbb
inc
cmp
clc
mov
inc
jne
jnp
mov
or
jl
retf
mov
or
jge
lock
jns
mov
cmp
sbb
mov
add
adc
fisttp
add
(bad)
jmp
xor
pusha
(bad)
adc
add
add
lods
or
call
hlt
dec
jb
dec
mov
push
lahf
add
movs
mov
add
add
test
and
jg
mov
jb
shl
mov
add
push
fdiv
jl
xor
mov
scas
mov
jl
xchg
jmp
mov
adc
add
add
pop
js
xor
pop
xor
std
adc
imul
mov
(bad)
rol
add
xor
call
(bad)
dec
cmp
or
push
cmp
or
xor
lahf
jbe
mov
add
rol
or
in
ret
scas
inc
xlat
test
mov
fwait
add
add
jo
dec
retf
or
fs
imul
nop
dec
(bad)
sbb
sbb
mov
xchg
push
lods
pop
inc
(bad)
mov
add
add
(bad)
mov
and
rcl
mov
or
dec
push
call
add
mov
push
and
jp
into
cmp
lods
jl
or
js
xchg
aaa
mov
add
test
and
sbb
fsubr
(bad)
pop
xor
fmul
or
cmp
fmul
add
add
mov
imul
inc
in
and
jl
jb
adc
jnp
nop
loop
add
add
cmc
xchg
loopne
or
fnsave
jle
cs
jmp
jmp
xor
fbld
push
les
mov
cmps
in
mov
add
jg
cmp
add
lock
cmp
adc
fidiv
fsub
mov
and
add
push
enter
hlt
or
or
retf
test
cmp
in
sub
pop
jns
cmp
std
xor
add
and
inc
xor
nop
dec
sub
out
mul
ret
cmp
adc
mov
mov
add
add
mov
jb
xor
sti
xor
jmp
scas
inc
retf
lahf
ror
push
scas
sbb
mov
cmp
push
dec
sub
push
sahf
pop
mov
in
jmp
sbb
pop
or
push
ficomp
mov
add
add
fs
sub
pop
mov
shl
jg
xor
jb
push
adc
cmp
mov
add
add
mov
cli
inc
in
imul
pop
mov
dec
or
dec
call
shl
in
adc
cmps
add
add
add
fcom
rol
ficom
pop
enter
lock
xchg
sbb
call
mov
add
repnz
sub
mov
mov
ror
sbb
into
jo
jo
add
add
and
push
pop
stos
inc
stc
imul
pop
push
and
pop
inc
jg
scas
loop
add
add
adc
daa
out
(bad)
mov
push
lahf
inc
test
or
jge
fiadd
add
add
sar
cmc
xchg
(bad)
in
sub
je
out
cld
out
nop
nop
sub
add
jae
retf
adc
add
add
psllw
lea
adc
or
sub
pop
repnz
rol
jg
push
add
add
fsubr
or
xchg
jmp
outs
jle
mov
mov
(bad)
rcl
add
add
scas
push
fild
cmp
mov
nop
xchg
loopne
and
in
push
mov
add
es
fcomp
movs
imul
or
into
dec
and
arpl
shl
add
add
fmul
and
les
fcom
test
cmc
xor
aam
daa
icebp
and
adc
cli
hlt
add
add
mov
sbb
xchg
push
sub
xchg
mov
pop
ins
mov
sub
xchg
in
add
add
and
jg
jne
(bad)
call
push
and
imul
adc
inc
pop
cmc
pop
imul
add
add
sbb
sar
movs
push
adc
jb
pop
fs
push
dec
outs
dec
fild
add
add
adc
mov
xor
cmp
mov
cmp
das
mov
into
pop
and
mov
paddsb
add
add
or
mov
das
and
(bad)
loopne
and
pop
popf
ror
arpl
aad
add
add
sub
inc
into
mov
pushf
mov
jmp
mov
sub
jno
adc
jmp
mov
loop
lods
jo
test
in
movs
or
push
sub
call
lods
jnp
mov
test
popf
xor
add
add
data16
cwde
fwait
cmp
xchg
jge
mov
fcom
mov
adc
mov
add
loop
jge
jmp
test
jns
cdq
and
or
imul
add
add
lds
into
jno
jne
mov
mov
dec
mov
push
mov
push
mov
cmp
add
sub
push
in
or
jb
popf
fst
jo
inc
cmp
scas
adc
stos
sahf
add
add
inc
ficom
mov
fild
movs
cld
movs
push
pop
mov
mov
lods
sti
sub
push
add
add
inc
cs
iret
adc
movs
pop
imul
jle
ja
lea
pop
out
adc
jle
and
push
jmp
add
add
lahf
mov
ds
(bad)
push
fdiv
jnp
and
add
add
inc
cmp
sub
fst
retf
and
test
clc
js
push
sbb
adc
add
pop
mov
inc
or
cmp
ins
pop
dec
cmp
mov
rol
ficomp
inc
js
jmp
add
pop
pop
(bad)
call
fwait
scas
(bad)
dec
ret
jnp
sbb
loopne
jmp
add
add
fmul
mov
stos
push
dec
test
cs
pop
rep
sub
fnstenv
add
jmp
dec
push
out
add
adc
lahf
or
das
push
repnz
add
or
fwait
mov
sub
inc
xchg
and
fbld
pushf
loop
loope
xor
add
add
mov
push
and
mov
jge
sub
inc
inc
inc
test
add
cdq
sbb
add
add
sub
fnclex
fnstenv
sbb
sbb
jae
es
push
movsx
jb
or
add
add
and
clc
jb
sbb
jne
xor
push
xchg
retf
cmps
(bad)
aam
and
je
add
add
aas
daa
or
movs
or
bound
xor
jbe
and
aaa
movs
or
jl
add
add
dec
mov
popf
xlat
mov
push
cs
xor
and
add
fs
popf
test
int3
mov
cmp
sti
and
daa
or
adc
xchg
lods
fsub
add
fdiv
or
push
out
inc
xchg
and
std
out
out
call
inc
or
(bad)
push
adc
stos
loop
mov
add
cs
in
and
ins
mov
mov
out
sub
add
fwait
cs
lahf
fcom
lods
stos
mov
xchg
nop
cmc
cmps
jl
pop
mov
inc
lods
sub
add
add
je
cmps
arpl
(bad)
sub
pop
adc
xchg
mov
push
cmp
add
add
push
jb
jle
pop
imul
(bad)
dec
cmp
mov
arpl
add
mov
jge
outs
lahf
loopne
mov
std
dec
nop
loop
inc
dec
inc
stos
out
in
push
jne
add
add
aam
mov
xchg
mov
mov
lock
and
int
push
inc
pop
push
into
mov
pop
shr
add
inc
scas
xchg
pop
or
in
and
jmp
loopne
loope
jae
fs
loopne
add
add
in
and
mov
or
sub
inc
in
loop
cmp
sbb
stos
add
add
loop
xchg
dec
outs
and
push
call
jmp
cmp
shl
push
inc
add
add
push
add
push
in
jns
xchg
test
aad
pop
mov
fidiv
lds
mov
out
add
add
inc
cld
or
hlt
push
pop
push
int
or
cmp
mul
(bad)
dec
fstp
add
add
pop
and
and
and
sbb
hlt
xchg
xchg
mov
push
xor
and
mov
cs
and
mov
lock
icebp
int
cmp
pop
je
dec
fcomi
add
add
test
push
xor
(bad)
or
xchg
dec
aaa
je
movs
and
cld
sbb
sti
test
mov
mov
stos
inc
and
add
add
aas
das
out
les
push
scas
jp
lock
dec
add
retf
add
add
or
test
imul
adc
or
ret
cmp
push
lods
loopne
push
cs
stos
into
nop
inc
xchg
mov
add
sbb
lods
mov
pop
xlat
xchg
inc
shr
fcom
adc
xor
add
xchg
sbb
sbb
pop
pcmpeqw
je
ss
xor
(bad)
and
ficomp
push
push
xchg
push
shl
push
add
cmp
jb
add
pop
and
jns
and
ret
js
mov
add
add
sub
xor
and
jne
and
push
dec
mov
call
js
dec
add
add
inc
sti
cvtdq2ps
mov
cmps
lock
jmp
jne
or
les
hlt
add
add
cli
cmp
adc
mov
mov
es
popf
test
xchg
mov
cmps
xor
add
add
adc
rcl
xchg
cdq
leave
or
push
cdq
ja
sub
lock
add
add
mov
xchg
aam
aas
enter
adc
push
jge
push
leave
pop
addr16
fist
and
add
add
sbb
loopne
pop
ret
or
ins
pop
xchg
test
jmp
pop
push
inc
add
add
stos
loop
pop
test
imul
jbe
fild
sbb
int3
sbb
jmp
or
sbb
add
add
pop
pushf
(bad)
xchg
pusha
inc
call
cmp
and
pushf
mov
xor
add
adc
jno
xchg
neg
push
adc
cmp
ror
in
and
leave
add
add
jbe
fiadd
test
sub
loop
adc
xchg
(bad)
adc
je
mov
add
add
lock
cmp
retf
jmp
adc
push
adc
mov
add
add
cmps
call
pop
movs
xor
(bad)
push
adc
push
enter
test
clc
xor
mov
add
add
into
lea
popf
jnp
or
pusha
mov
adc
leave
aad
xchg
add
add
add
(bad)
fdivrp
int3
lahf
or
mov
int3
jg
jo
mov
dec
in
add
or
add
add
(bad)
jl
or
jns
js
dec
pop
retf
lahf
movs
bound
adc
dec
scas
into
inc
push
and
add
inc
jge
inc
loop
cld
xchg
rol
jb
push
inc
enter
shl
add
add
mov
dec
pop
sub
push
aas
jo
jo
mov
inc
test
movs
pop
add
add
and
mov
sahf
ins
push
push
les
mov
jbe
push
je
push
add
add
loopne
test
enter
mov
in
jo
mov
sbb
and
sbb
dec
lahf
call
add
push
sbb
movs
mov
add
popa
mov
enter
std
adc
jne
add
add
add
push
fmul
and
sub
cmp
out
popa
xchg
jge
or
add
add
cs
ret
dec
mov
dec
(bad)
jge
das
aaa
dec
int3
and
ins
(bad)
adc
xchg
les
pop
and
test
adc
adc
outs
or
inc
shr
sub
add
add
lods
inc
aas
les
inc
movs
jge
sbb
push
cld
push
outs
pushf
sbb
or
add
add
inc
push
dec
or
adc
dec
aam
xor
nop
push
xchg
sub
repz
xchg
add
add
jne
repz
mov
mov
imul
mov
adc
nop
(bad)
ror
cmps
enter
add
or
push
adc
sbb
fiadd
add
push
fsub
lock
adc
rcr
and
sub
hlt
xchg
push
jecxz
xchg
and
jae
sbb
jae
out
cs
add
add
push
mov
ins
pop
mov
sub
jae
dec
sbb
cli
cdq
sar
jb
mov
jle
je
adc
add
add
fbld
fild
leave
or
xchg
mov
pop
sti
push
dec
outs
cld
inc
mov
dec
xchg
test
dec
les
mov
pop
cld
mov
cli
or
adc
imul
test
and
scas
rol
add
add
icebp
adc
call
add
sub
cwde
out
fdivr
or
adc
js
ret
add
add
jg
stos
nop
jne
xchg
inc
call
cdq
mov
or
test
and
rol
add
sti
sub
push
dec
jg
push
daa
scas
call
jns
mov
mov
jae
jb
add
add
dec
xor
or
movs
scas
adc
mov
pop
or
out
add
add
xor
sub
mov
or
adc
mov
push
mov
xor
sub
xor
jle
jle
out
int
xlat
xchg
xchg
add
cmc
inc
sahf
dec
mov
cmp
add
add
mov
or
shl
je
gs
movs
sbb
aam
idiv
arpl
inc
adc
dec
add
add
lods
in
or
sub
lock
push
mov
jns
dec
cmp
outs
shr
jl
jmp
mov
add
dec
cwde
push
sar
nop
pusha
lods
add
dec
test
sbb
or
inc
add
add
sbb
pop
inc
xor
mov
xor
adc
stc
push
or
adc
cli
or
jne
outs
add
add
pop
pop
gs
int3
ins
inc
or
sbb
pushf
or
push
inc
or
xchg
loopne
bound
add
add
cwde
xchg
outs
aaa
inc
aas
imul
test
xor
xor
xchg
pop
fmul
add
cli
(bad)
fs
inc
leave
adc
adc
adc
loope
or
xor
bnd
add
xor
fdivr
mov
cld
pop
das
add
rcr
dec
(bad)
dec
out
les
sub
add
add
ret
ret
ss
inc
loopne
and
xchg
xor
pushf
mov
mov
retf
add
add
fsub
repz
add
dec
aaa
jge
mov
in
fcom
jg
imul
cmp
add
outs
arpl
pop
or
sub
jl
mov
mov
out
add
add
hlt
xchg
add
jmp
mov
and
xchg
push
in
sti
jb
in
xlat
mov
cmps
test
add
dec
or
clc
jmp
or
cmp
rcl
ror
add
xchg
cwde
fadd
xor
add
add
sub
enter
cmp
sahf
pop
scas
and
inc
xchg
xor
add
add
inc
stos
das
mov
div
fiadd
mov
data16
daa
cmp
rol
rcr
add
test
dec
cmp
fdivr
mov
adc
sub
ja
add
fsubr
fimul
mov
add
add
inc
and
das
push
inc
pop
sub
jmp
xor
cdq
stc
mov
cmps
pop
dec
(bad)
add
add
mov
or
xchg
mov
bnd
mov
fcomp
fwait
daa
sub
add
fidiv
dec
mov
fs
(bad)
or
inc
cmp
pop
jb
adc
in
xchg
sub
add
jle
pop
xor
jns
cli
mov
sbb
fld
xor
fld
add
add
sbb
pop
fsubr
adc
fdivr
jmp
lahf
movs
sub
jmp
pop
daa
cmp
add
add
cdq
inc
pop
pop
adc
inc
dec
xchg
cmp
jmp
cs
repnz
bound
add
push
fwait
or
add
jnp
cs
push
mov
test
sbb
jecxz
sub
fbstp
add
add
ret
retf
mov
sbb
push
and
inc
popf
mov
ror
add
add
cmps
add
inc
imul
fist
(bad)
sub
in
cmp
ret
lock
loop
dec
repnz
add
mov
inc
xor
mov
jne
cld
bound
ret
adc
mov
fwait
sub
add
add
pop
lea
sub
arpl
and
jg
popf
jns
imul
push
data16
add
into
pop
or
sub
cmp
or
icebp
xor
std
adc
jne
add
add
sti
mov
sub
int3
popf
(bad)
push
mov
mov
call
push
call
add
add
push
lea
dec
mov
das
(bad)
jmp
mov
iret
ret
(bad)
mov
push
pop
pushf
xor
jl
jecxz
int
cwde
and
xor
mov
lahf
push
iret
pop
pusha
and
mov
add
add
mov
adc
(bad)
stc
add
jne
inc
push
rcr
movs
mov
push
in
or
push
add
add
and
adc
rcl
je
mov
sbb
xchg
popa
jo
jo
cdq
dec
fiadd
loopne
add
add
push
and
xchg
or
lea
test
push
sub
xor
add
lea
and
and
(bad)
mov
adc
ficom
ins
lea
add
add
add
jb
push
adc
or
xchg
nop
mov
dec
jnp
jle
clc
push
popf
stc
mov
jge
mov
add
add
test
js
push
test
enter
mov
(bad)
push
pusha
add
add
add
nop
rcr
loope
in
das
mov
lds
jge
adc
adc
xchg
or
add
sub
cmp
enter
add
inc
push
test
pop
push
test
add
add
mov
sbb
ret
inc
cs
mov
jmp
pop
and
cmp
inc
and
fstp
pop
mov
cmp
add
add
pop
maxps
pop
gs
inc
inc
addr16
movs
push
movs
das
xor
push
mov
push
add
add
shl
mov
sub
inc
shr
adc
outs
lock
cmp
jmp
xor
add
int3
sbb
out
daa
and
xchg
ror
sub
adc
cli
clc
add
add
cmp
dec
cmps
sbb
mov
push
lods
dec
movs
mov
add
aam
fwait
lock
cmp
push
mov
test
mov
outs
cmc
mov
popf
pop
cmp
add
jo
test
sbb
inc
ret
sub
push
mov
xchg
dec
cld
or
imul
add
add
mov
and
jnp
cmp
and
adc
fnstenv
or
or
jnp
fstp
push
add
add
rcr
jo
xor
mov
sub
movs
pop
and
movs
inc
mov
jnp
fnstcw
add
add
data16
sub
add
pop
mov
and
mov
movs
xchg
ret
scas
(bad)
add
xchg
mov
sbb
pop
sti
and
mov
or
cmp
ret
or
add
add
xchg
lods
test
xor
jnp
ficomp
cmp
stos
jmp
add
add
mov
movs
sbb
mov
dec
into
xchg
aaa
adc
repnz
mov
add
add
inc
mov
mov
rol
cmp
loop
push
rol
or
mov
inc
add
add
add
sbb
adc
sub
out
xchg
or
inc
shl
cdq
add
cdq
cmp
push
mov
add
add
adc
cwde
and
or
mov
push
out
cmp
das
sub
bound
add
add
test
lea
sub
pop
(bad)
shr
stos
add
push
add
in
mov
add
stos
dec
shl
gs
shr
in
int
outs
jb
sub
sbb
add
add
pop
sub
repz
loope
sub
sahf
lea
mov
cmp
outs
ins
add
add
inc
mov
into
jo
in
sbb
das
adc
xchg
add
or
dec
popf
aad
nop
mov
and
clc
jge
and
mov
push
sub
test
xchg
push
add
add
xor
jmp
std
stos
dec
sar
cdq
leave
or
add
adc
nop
popf
ror
jb
add
add
push
push
pop
mov
push
js
push
adc
addr16
adc
push
push
aas
sbb
add
add
push
ds
xor
mov
lahf
mov
pop
push
adc
add
add
inc
sub
jno
adc
sbb
fdiv
inc
add
sub
or
mov
mov
clc
or
xchg
jge
cmp
leave
jmp
dec
and
or
mov
into
out
mov
je
adc
add
add
repz
pop
data16
movs
pop
adc
sub
pop
mov
adc
mov
in
add
add
or
fwait
xchg
xchg
push
mov
call
or
mov
ret
je
pop
cdq
nop
fisttp
add
add
loopne
dec
int3
xchg
and
push
xchg
fist
(bad)
dec
les
imul
or
add
lea
aad
nop
xchg
add
sub
push
dec
xchg
shr
add
add
xchg
mov
adc
out
mov
int
fst
lea
inc
and
add
inc
popa
jnp
dec
and
push
mov
cmp
push
mov
movs
jmp
add
add
mov
sbb
xor
jns
sbb
mov
and
inc
lock
sub
sbb
pop
retf
or
aad
out
sbb
clc
inc
daa
add
push
out
inc
mov
sar
push
push
push
add
add
ds
(bad)
pusha
test
jmp
jmp
clc
push
in
daa
pop
imul
add
add
sbb
loope
xor
(bad)
jl
ja
fst
test
loop
mov
jnp
iret
mov
enter
add
mov
and
retf
sub
mov
push
add
or
daa
out
and
jb
mov
cmp
ret
sub
dec
inc
jecxz
xchg
mov
mov
test
test
inc
sub
stos
push
and
int
jg
shr
add
(bad)
xor
cmp
inc
inc
lds
add
add
(bad)
ja
fwait
rol
xor
mov
and
retf
stos
ficomp
clc
push
movs
add
add
inc
and
scas
pop
imul
mov
inc
mov
pop
mov
jl
in
dec
and
pusha
add
add
ret
cmps
pusha
nop
pop
clc
adc
pop
mov
dec
and
leave
add
popa
add
leave
xstore-rng
cmps
add
aad
sahf
jo
in
xor
pop
xchg
std
(bad)
sub
stos
dec
pop
loopne
mov
and
adc
add
add
xor
stos
movhps
push
hlt
adc
inc
or
or
push
out
and
push
popa
xor
add
add
jns
push
or
or
rcl
or
mov
xchg
cdq
mov
lahf
jle
add
add
xchg
xor
xor
in
sar
dec
mov
cmp
sti
jno
into
sbb
add
add
shl
jecxz
inc
and
iret
cmp
jne
sbb
mov
add
inc
xchg
fwait
dec
out
(bad)
mov
cmp
and
into
cmovae
out
add
add
inc
xchg
shl
test
stc
dec
and
imul
scas
and
jg
nop
push
ins
inc
add
add
lea
sbb
inc
sub
nop
inc
jmp
mov
push
push
pop
mov
push
iret
or
add
add
loopne
sbb
and
push
adc
mov
jo
pop
mov
fiadd
add
add
or
fmul
out
or
jecxz
mov
inc
cmps
sub
xor
add
add
sar
sbb
clc
sbb
rcl
cld
aas
add
cmp
ja
mov
and
out
add
add
ins
mov
cmp
pushf
cld
int3
pop
add
jge
mov
icebp
je
popf
or
add
add
sub
inc
test
jmp
cmps
mov
xor
xchg
or
jnp
rol
jp
lock
add
xor
inc
fmul
lock
shl
fldcw
mov
cmp
(bad)
das
fs
adc
jle
pop
mov
ret
sub
stos
jecxz
push
(bad)
and
imul
add
add
fidivr
retf
ins
push
rcl
inc
xor
push
adc
add
cld
jmp
mov
and
je
add
add
jnp
out
adc
test
sub
jb
out
out
int3
pop
cmps
stc
pop
addr16
aad
add
add
inc
popf
pop
aas
loopne
nop
mov
rol
mov
int
dec
and
and
jp
cwde
js
test
add
add
sbb
mov
push
xor
js
xor
fs
cmp
push
sbb
push
cmp
inc
add
add
xchg
sbb
pop
pusha
jle
loop
push
adc
inc
or
jne
jle
pop
inc
sbb
fild
add
add
repz
outs
sub
mov
(bad)
in
test
pop
adc
add
add
pop
push
shl
push
ja
leave
and
fcom
xor
push
clc
and
sbb
add
add
dec
lods
ins
loopne
mov
sub
pop
jnp
daa
jne
dec
push
outs
xor
mov
add
add
(bad)
test
aad
stos
cld
or
mov
push
loop
fld
xchg
push
nop
js
add
add
(bad)
pop
sbb
add
out
nop
adc
stc
jmp
(bad)
push
outs
mov
fiadd
fiadd
push
jp
add
add
cld
aam
je
or
push
in
in
stos
aas
mov
sti
test
int
mov
add
add
lock
push
mov
add
sahf
mov
fsub
add
cmp
add
add
mov
push
leave
push
cld
sbb
cmp
ret
jecxz
mov
xchg
loope
aaa
add
add
jp
scas
lea
fs
push
mov
jmp
rcr
xor
enter
add
mov
in
adc
jno
je
imul
out
jmp
adc
imul
imul
std
sti
hlt
pop
icebp
add
iret
shl
adc
push
jge
lock
lea
add
add
mov
xchg
push
(bad)
ins
or
inc
xchg
push
test
inc
mov
fs
add
add
push
mov
lahf
push
retf
sub
or
mov
pop
xchg
xchg
lods
ds
pop
aad
dec
test
add
add
fisub
or
(bad)
push
nop
add
mov
inc
push
enter
jl
xor
add
add
adc
adc
scas
aas
jl
fcomp
pop
lock
je
cwde
inc
aam
out
pop
jl
dec
add
and
dec
inc
pop
adc
pop
and
pop
or
dec
adc
xchg
sbb
mov
add
add
add
dec
dec
add
inc
xlat
dec
pop
cwde
and
mov
add
inc
fld
xchg
sub
int3
clc
jmp
fsubr
(bad)
push
mov
and
pause
cld
or
add
add
retf
or
addr16
mov
dec
or
ins
fwait
je
scas
mov
cdq
repnz
add
loope
fist
and
adc
mov
and
les
sbb
sahf
mov
add
add
lock
fsub
daa
retf
fcmovnbe
cdq
pop
nop
dec
pop
xchg
movs
sbb
nop
test
and
pop
add
add
add
enter
lea
pop
add
mov
sub
pop
push
cmp
dec
in
xchg
adc
add
add
add
jne
xor
pop
leave
inc
pop
lods
push
cmp
adc
or
cmp
jne
clc
add
add
cmp
inc
loope
inc
pop
scas
cld
movs
les
mov
xor
sub
bound
add
add
xchg
gs
fldcw
jmp
ror
aad
dec
jae
enter
inc
add
add
add
and
xor
je
push
xchg
jmp
or
add
add
and
fs
out
sub
cmc
nop
sbb
js
hlt
ins
pop
aas
cmp
sub
mov
add
add
adc
jl
mov
dec
lds
leave
or
or
rol
or
pushf
add
add
and
pop
push
pop
mov
not
jge
fs
ins
mov
xchg
pop
ror
mov
add
add
pop
add
cwde
dec
push
cwde
or
pop
stos
mov
push
outs
and
add
jmp
add
adc
jg
daa
sub
sub
or
and
call
dec
div
pop
sbb
add
add
lods
cvtdq2ps
xor
movs
and
nop
push
and
ja
inc
add
mov
add
add
popa
inc
mov
(bad)
stos
mov
cdq
dec
retf
xor
js
je
jo
dec
mov
add
add
lds
not
push
sti
adc
fs
dec
test
add
add
and
test
movs
push
push
hlt
dec
sub
inc
pop
cwde
xchg
loopne
rol
add
push
jmp
or
sub
movs
ficomp
repz
mov
add
add
and
push
mov
movs
mov
mov
dec
ror
push
inc
mov
repz
xor
add
aam
add
lods
shr
inc
test
pop
loop
mov
dec
ror
outs
adc
add
add
sub
add
pop
test
lahf
adc
jo
movs
out
jge
loopne
adc
lfs
dec
add
add
dec
jmp
cmp
jne
sub
pop
test
mov
push
mov
pop
mov
aad
jl
add
add
jno
xor
jne
ds
jae
push
in
test
inc
lahf
cmp
and
xchg
mov
add
mov
push
pushf
scas
mov
data16
fmul
aam
xchg
repnz
push
rcr
cli
add
add
movs
sub
mov
xchg
adc
fwait
inc
ficomp
js
xchg
push
add
loopne
into
sahf
add
add
xor
push
and
jae
pop
sar
or
pop
jg
adc
and
add
(bad)
outs
add
call
mov
pop
and
addr16
aad
ret
sti
ret
imul
add
add
push
ja
and
or
jne
add
stos
ficom
popa
fs
outs
call
dec
add
add
mov
ffree
call
fldcw
xor
jl
fs
ss
call
imul
add
rcl
dec
sbb
cmc
push
pop
mov
aad
lahf
push
xchg
mov
out
push
mov
add
add
les
pushf
mov
fld
gs
sub
dec
jmp
lds
fs
add
add
loop
mov
fistp
ror
sub
test
dec
scas
cdq
xor
mov
dec
mov
call
jo
jl
popf
aam
dec
or
push
cmc
add
out
inc
add
sbb
xor
add
add
jmp
push
dec
xchg
jle
mov
test
mov
mov
adc
add
cmp
mov
jmp
loope
dec
outs
in
adc
stc
ret
adc
fiadd
retf
test
add
add
std
mov
mov
adc
xchg
(bad)
popf
mov
push
inc
aas
pop
adc
add
push
das
mov
or
sub
add
add
nop
sub
adc
mov
fs
clc
out
adc
mov
pop
xlat
mov
add
add
and
and
cwde
pop
sbb
jl
daa
pop
jg
adc
and
add
add
leave
push
in
sbb
sbb
jae
pop
mov
inc
dec
and
in
pop
push
add
add
adc
mov
xor
mov
and
sar
mov
xor
adc
add
add
dec
sbb
xor
dec
and
sar
and
xchg
add
ja
push
mov
cmc
pop
add
add
sbb
jp
sar
loope
dec
mov
popa
stc
mov
in
lock
mov
xchg
add
add
mov
add
cmp
imul
cdq
pop
push
aas
and
fild
add
add
and
in
and
enter
pop
ret
adc
movs
or
or
add
pop
test
mov
das
ret
inc
xchg
push
jbe
adc
les
leave
fadd
add
add
aas
call
imul
lods
cwde
mov
sbb
in
pop
lock
mov
add
add
and
mov
ss
mov
mov
cwde
add
stc
and
fisub
nop
loope
add
add
cmp
cmp
ret
mov
inc
sbb
or
les
retf
jnp
add
add
inc
push
ret
cmc
pop
sar
gs
push
push
and
push
push
adc
sub
ror
add
add
dec
or
aad
in
(bad)
xchg
loop
jno
and
or
push
test
add
add
adc
sub
adc
push
sub
fild
pop
popf
jb
xchg
mov
add
or
add
push
(bad)
or
push
push
adc
jmp
or
xor
add
add
sbb
mov
push
mov
or
leave
or
les
dec
add
add
dec
stos
jmp
(bad)
pop
scas
adc
push
adc
mov
pop
adc
cmp
das
mov
add
add
mov
jnp
xor
into
add
fstp
pop
xor
mov
in
(bad)
cmp
xor
add
add
in
push
dec
mov
push
retf
or
mov
jo
stos
mov
(bad)
iret
lock
add
jns
or
ja
sbb
pop
scas
xor
loop
dec
add
or
xchg
stos
loope
aaa
(bad)
loopne
add
add
jmp
mov
mov
in
mov
pop
or
inc
adc
add
add
mov
dec
xchg
mov
push
jns
jae
mov
sub
xchg
or
adc
jge
sar
add
add
ins
pop
add
push
clc
push
xchg
xor
fwait
inc
daa
pop
push
mov
or
call
add
add
mov
adc
daa
mov
ror
xchg
or
mov
pushf
lods
xor
or
add
sahf
loopne
icebp
mov
loope
pusha
pop
es
xor
mov
push
int
dec
jle
lahf
loop
add
add
pop
(bad)
(bad)
bound
pop
pop
mov
dec
cmc
sbb
(bad)
xchg
mov
in
(bad)
out
and
jmp
sbb
add
add
mov
and
adc
jnp
ins
outs
int
in
jecxz
lahf
jno
dec
aad
add
add
xor
arpl
pop
mov
xor
sbb
dec
adc
cmp
call
add
ja
gs
pop
cmp
fldenv
sar
rol
and
push
scas
jno
dec
out
sub
add
pop
iret
lahf
inc
fldl2e
int3
cmp
add
sti
ja
or
in
call
das
jecxz
cmc
mov
rol
add
add
in
imul
xlat
xor
nop
inc
dec
sub
jo
jg
lock
push
sbb
sar
add
add
mov
aas
cmp
sub
pop
in
dec
sub
test
sub
cmp
add
add
lods
adc
fwait
adc
mov
cmc
stos
fstp
push
and
add
cmps
push
jmp
add
add
push
pop
push
xchg
dec
sbb
fistp
or
stos
popf
dec
push
call
add
cwde
add
add
inc
jmp
cdq
jmp
dec
popf
inc
cmps
jbe
push
lds
inc
mov
push
mov
add
add
or
sbb
sub
mov
or
sub
pusha
push
dec
jecxz
mov
add
jns
adc
inc
mov
and
sbb
lods
mov
push
stos
mov
add
add
mov
int
push
call
arpl
pop
hlt
or
pop
sub
adc
add
add
ror
imul
mov
scas
push
push
popa
jmp
mov
icebp
add
add
sbb
outs
dec
mov
call
add
mov
push
jmp
push
and
ficom
add
add
sub
das
cld
shr
cmp
inc
pop
sub
sbb
ror
sbb
add
add
xlat
out
popa
call
sub
add
sub
cmp
sbb
xchg
sbb
dec
add
add
and
ds
movs
das
(bad)
lock
fadd
mov
je
push
stos
push
jnp
add
add
adc
test
ret
mov
add
fsubr
adc
adc
add
add
xor
add
xchg
ret
mov
adc
jae
fsub
repnz
out
dec
cld
add
add
scas
addr16
jmp
dec
add
(bad)
or
xchg
sahf
inc
xor
pop
in
jmp
add
add
test
cli
mov
inc
popa
dec
mov
adc
out
mov
(bad)
and
mov
add
add
cmp
mov
mov
inc
sub
sahf
dec
adc
aas
ins
sub
(bad)
shr
jle
add
add
inc
inc
leave
in
jae
repz
jg
jmp
rol
shr
test
sub
div
or
rol
add
jae
sbb
jb
out
call
adc
les
xor
dec
add
shl
add
add
push
jmp
push
push
and
frstor
in
jmp
xchg
inc
jns
loop
inc
sub
fmul
jo
and
inc
in
loop
cmps
add
imul
inc
sbb
and
inc
mov
add
inc
ins
imul
jae
or
call
outs
div
fld
dec
jle
pop
add
add
pop
and
mov
adc
sub
mov
rcr
push
mov
add
push
aas
out
pop
je
mov
sub
sub
mov
sbb
retf
lock
and
dec
popf
add
add
shl
mov
pop
mov
add
xor
or
clc
or
pop
mov
add
and
or
push
mov
and
add
test
popf
jno
mov
ds
mov
inc
adc
mov
loopne
add
sub
pop
mov
jg
lahf
sbb
add
add
in
cmp
imul
dec
mov
mov
push
addr16
add
add
inc
xlat
mov
cmp
add
adc
add
mov
movsx
or
pusha
test
add
sbb
out
retf
lods
arpl
push
and
(bad)
popf
stos
fild
imul
add
jbe
add
ds
adc
repz
popa
(bad)
or
cmp
jmp
cmps
pop
push
mov
add
add
movs
jno
push
push
test
xchg
push
fwait
mov
dec
add
fsub
jle
xor
add
add
ret
xchg
jmp
call
dec
mov
and
push
push
mov
add
add
add
aam
repz
and
lahf
hlt
jae
es
pushf
cwde
xor
adc
add
xchg
inc
adc
ret
ja
sbb
mov
sar
or
fidivr
xor
add
add
cwde
or
sbb
inc
dec
in
mov
xor
sub
mov
push
add
add
nop
dec
push
push
pop
rcl
fidiv
xor
movs
neg
outs
hlt
stc
jo
and
jp
jmp
mov
dec
lds
add
sbb
das
jo
jo
or
ud2
cmp
add
add
loopne
shl
nop
xchg
clc
enter
popf
mov
push
jne
nop
push
mov
xchg
stc
mov
cld
add
add
cdq
les
push
test
adc
mov
sbb
pushf
arpl
das
jmp
add
add
les
aad
es
fwait
imul
aam
std
popa
dec
or
sbb
adc
scas
mov
call
outs
inc
add
mov
lock
and
or
inc
push
add
add
mov
sti
or
dec
push
inc
fld
mov
sbb
pop
test
dec
mov
add
xchg
ror
cli
sub
nop
push
out
mov
or
push
mov
push
cmp
cdq
or
add
add
lea
sub
cmp
pop
and
std
add
adc
mov
or
pop
jg
sbb
add
add
ds
xor
mov
mov
fnstsw
adc
dec
mov
add
jmp
xchg
shl
mov
call
xchg
mov
pop
sbb
test
add
add
mov
sub
cld
lds
sub
pop
cmps
pop
mov
add
jne
jb
push
add
add
sbb
aas
mov
fmul
jb
fs
and
popaw
push
jmp
int
sub
add
mov
and
xlat
mov
je
das
sti
and
pusha
adc
je
or
dec
push
jp
jns
imul
add
inc
or
dec
adc
jbe
xor
pop
dec
add
cld
jle
lahf
fsub
inc
xlat
fiadd
test
out
(bad)
(bad)
adc
mov
retf
and
data16
lahf
out
sar
lods
pop
scas
sbb
add
add
add
in
cld
mov
or
sar
pop
pop
sti
aaa
gs
dec
or
and
add
add
cmps
pop
push
mov
add
cmp
adc
int
push
cmp
jmp
fsubr
add
add
(bad)
push
jg
push
jecxz
adc
jecxz
call
pop
sbb
jle
jmp
inc
iret
into
cmp
add
add
cmp
and
push
lds
jge
(bad)
sub
je
pusha
mov
icebp
lea
add
jmp
pop
stos
sub
sub
pop
xor
in
out
inc
rcl
cmp
rol
jo
mov
add
add
sbb
nop
jnp
fistp
data16
cmps
test
stc
in
jmp
cwde
gs
add
add
mov
push
enter
call
pop
out
pop
bound
cmp
mov
aas
lock
std
aaa
addr16
add
add
adc
pop
dec
xor
inc
cmp
or
les
adc
dec
add
add
adc
sbb
jo
jne
and
clc
dec
mov
cwde
fsubr
push
or
jecxz
fld
add
add
adc
adc
es
add
test
(bad)
fist
sub
jo
mov
pop
add
add
pop
cli
loopne
sbb
in
call
clc
pushf
ror
mov
(bad)
hlt
and
add
add
sub
xchg
jns
push
xor
jo
sub
(bad)
int
cmps
xchg
jge
mov
add
add
rcr
cmovbe
test
push
adc
idiv
adc
sar
add
je
cld
mov
jmp
push
retf
mov
stos
mov
cmc
(bad)
mov
or
popf
dec
shl
add
add
(bad)
cmp
imul
add
add
stos
xor
adc
lea
push
xchg
leave
or
add
add
adc
daa
jmp
inc
mov
or
push
sbb
add
mov
pusha
imul
fild
add
add
ja
aam
sbb
repz
jo
fdiv
fsub
sub
push
add
add
jle
mov
sub
cmp
fnstcw
in
push
int
push
sub
pop
iret
and
dec
inc
cmp
add
add
(bad)
repz
fs
xor
xor
clc
mov
loope
mov
add
add
jg
adc
lock
out
lea
mov
xor
sub
std
fwait
loop
dec
adc
add
out
xchg
pop
adc
jl
retf
test
lods
test
mov
adc
cmp
add
enter
xlat
jmp
enter
mov
mov
xor
adc
or
add
add
rcl
jmp
push
xchg
out
mov
test
and
aaa
adc
or
add
add
and
and
sbb
call
std
mov
clc
mov
push
shr
add
fwait
(bad)
mov
and
and
and
rcr
adc
shl
icebp
outs
rol
add
inc
loopne
arpl
xlat
scas
xchg
cmps
jmp
addr16
and
das
push
lea
or
add
add
adc
inc
xor
xchg
dec
inc
xchg
psadbw
movs
or
jae
add
or
pusha
sub
add
add
inc
add
inc
or
xchg
or
cwde
mov
js
add
inc
add
add
ror
loope
jmp
cmp
ficomp
scas
jmp
pop
or
add
add
or
mov
mov
add
cmp
cmp
in
xchg
(bad)
daa
adc
sbb
add
add
fst
jmp
repz
hlt
push
enter
cmp
pop
xchg
push
jl
pop
popf
pop
or
lea
mov
addr16
cmc
dec
push
es
mov
add
add
adc
sti
mov
repnz
retf
call
cmp
add
and
or
add
test
bound
nop
push
pushf
sahf
inc
push
cmp
inc
jbe
dec
inc
les
dec
in
enter
xchg
jb
or
push
mov
add
add
mov
cmc
enter
enter
jmp
or
cli
inc
inc
add
je
add
add
loopne
inc
mov
and
add
fpatan
in
mov
(bad)
xchg
test
loopne
add
add
pminsw
sub
mov
outs
or
jle
and
movs
or
add
jle
and
push
mov
mov
leave
inc
call
push
and
xchg
jl
pop
inc
jl
or
add
add
add
inc
inc
sti
add
xor
add
jp
fs
lahf
es
into
les
add
add
addr16
shr
inc
add
mov
ds
hlt
xor
js
mov
add
jmp
pop
xor
xchg
and
ret
xchg
pushf
out
gs
sbb
mov
push
ds
add
add
sub
ins
call
sbb
jbe
mov
adc
ret
jg
sbb
movs
movs
pop
mov
add
mov
xchg
sbb
sub
in
mov
loope
jmp
fistp
add
add
sbb
loope
outs
clc
out
xchg
(bad)
das
nop
das
push
div
cmp
push
add
add
add
mov
leave
jecxz
sub
into
icebp
loope
das
pop
sub
in
ds
add
cwde
push
jmp
cld
xchg
das
mov
add
adc
or
add
dec
outs
adc
push
fstp
mov
stos
add
add
fwait
xchg
inc
mov
inc
push
jp
aas
adc
(bad)
xor
mov
push
jmp
fucom
das
inc
out
pop
add
add
inc
pop
mov
dec
xchg
leave
test
cmp
ds
mov
ret
add
add
xchg
movs
push
fidiv
and
adc
cmp
stos
push
pushf
pop
cdq
add
pop
mov
lods
retf
adc
add
add
mov
shl
cmp
mov
je
xchg
lods
movs
lods
adc
adc
add
adc
cmp
push
and
sahf
cmp
pop
dec
mov
cmp
sbb
sbb
xchg
push
add
add
pop
push
and
add
mov
shl
mov
mov
stc
fsub
retf
add
add
inc
cmp
or
(bad)
(bad)
icebp
or
push
cmp
jp
sbb
add
add
dec
clc
xchg
stc
sub
or
nop
mov
ffree
jmp
xor
push
add
adc
sub
repnz
mov
aam
pop
gs
add
mov
jne
add
add
imul
ss
mov
jl
pop
or
adc
rcr
ret
rcl
add
add
pop
sbb
pop
popf
not
dec
or
test
cmc
ss
int3
test
add
push
cmp
adc
push
mov
dec
rol
dec
cmp
or
and
add
repnz
xor
dec
xchg
stos
loop
ret
lods
push
mov
sbb
jg
xor
sbb
push
jne
mov
add
add
mov
cmp
dec
xchg
or
pushf
lea
repz
jne
mov
enter
add
add
addr16
inc
jle
mov
imul
cmp
mov
les
and
pop
mov
or
jmp
add
add
dec
pop
stc
and
mov
test
(bad)
cli
cmps
inc
inc
movs
mov
push
fstp
add
les
inc
or
mov
push
adc
(bad)
movs
call
adc
dec
xchg
add
add
jb
cmps
or
xchg
cmp
sub
addr16
dec
mov
jo
cmp
add
add
xor
jecxz
sub
sbb
and
ins
pushf
sbb
pop
mov
(bad)
push
mov
add
icebp
adc
leave
push
jne
fcom
nop
(bad)
dec
(bad)
dec
or
ret
cmps
xlat
cmp
add
add
lea
retf
loopne
stos
push
jo
shl
sbb
dec
xchg
adc
imul
movs
or
jbe
and
add
add
adc
jbe
sub
push
ss
sbb
lods
ja
mov
pop
mov
pop
fidiv
pop
bound
add
add
pop
sar
mov
jmp
dec
xchg
and
ret
sbb
addr16
and
add
add
push
pop
push
movs
jnp
and
inc
jmp
push
stc
sub
add
sahf
and
lahf
mov
add
sub
mov
sar
jl
pop
cmp
dec
in
pop
in
imul
add
add
and
sbb
pop
dec
pop
pop
ds
lock
stos
pop
mov
(bad)
std
mov
add
add
outs
repnz
sbb
ins
imul
mov
push
fcom
in
stc
and
pop
adc
add
loop
cmp
lods
pop
enter
and
mov
fstp
or
or
ret
xchg
push
add
add
call
adc
dec
mov
dec
xchg
lea
repnz
shl
adc
(bad)
stos
retf
adc
add
add
xchg
mov
sbb
xchg
jne
sub
jge
shl
jle
mov
pop
popf
add
add
mov
retf
mov
arpl
inc
or
dec
pop
icebp
jo
adc
mov
adc
add
add
clc
sub
push
dec
and
or
in
mov
fidiv
sar
dec
(bad)
in
loope
xchg
mov
add
je
in
scas
cwde
cmp
xchg
mov
push
mov
lods
dec
or
add
add
retf
or
mov
daa
cmp
das
push
retf
aam
jg
pusha
inc
adc
add
add
add
and
and
(bad)
xchg
imul
lea
sub
inc
xor
jle
push
sub
add
jp
retf
pop
push
(bad)
adc
push
add
cmp
jge
mov
call
(bad)
clc
push
cmp
xor
dec
rcr
jae
pop
mov
adc
and
mov
movs
call
rol
add
add
and
pop
push
cmp
push
dec
jle
mov
in
push
jmp
call
dec
jl
add
add
nop
icebp
dec
xor
jo
jecxz
and
call
lock
loop
shl
pop
or
and
mov
add
add
fcomp
cld
or
push
fstp
cmp
dec
ret
add
add
add
mov
dec
aas
adc
sub
fs
outs
inc
dec
mov
scas
dec
push
int
int
add
add
outs
out
sub
cld
mov
retf
or
dec
pop
ins
cmp
dec
and
add
add
adc
sbb
mov
das
jg
mov
lock
stc
iret
jo
mov
mov
add
add
and
dec
fldenv
icebp
xchg
adc
add
mov
sahf
jmp
cmps
ins
sub
add
or
push
sub
adc
bound
push
inc
inc
ret
and
jecxz
pop
xor
daa
enter
add
fs
inc
clc
sub
sbb
adc
cmc
ins
push
enter
movs
push
cmp
add
sub
jmp
push
pop
add
bound
inc
push
sbb
add
add
push
add
xchg
ret
xor
or
das
mov
jp
jno
outs
retf
pusha
(bad)
add
add
inc
aam
dec
rcr
xor
mov
leave
mov
sub
cwde
cmp
add
add
add
mov
jae
and
or
inc
xchg
popf
rol
loop
push
adc
add
es
jo
mov
stos
bound
scas
dec
dec
pop
dec
sbb
xchg
pop
add
add
dec
fisub
and
shl
pop
sbb
ret
test
sbb
fild
add
add
pop
sbb
repnz
adc
jnp
les
add
rcr
movs
aad
add
add
popf
jmp
xchg
pop
fidivr
push
out
leave
or
fs
adc
ret
cvtps2pi
out
add
add
and
and
and
sub
sub
xor
loope
cdq
(bad)
popa
sub
inc
adc
test
stos
stc
add
add
inc
cmc
out
loop
shr
jns
inc
mov
sbb
sbb
and
inc
xor
sbb
xor
jge
jbe
add
add
xchg
and
retf
or
jne
xor
xor
(bad)
adc
shl
nop
push
and
adc
call
loop
cmp
inc
pop
mov
in
jo
cdq
out
ret
jne
popa
mov
lea
add
add
hlt
gs
or
push
imul
jl
and
rcr
test
iret
add
add
or
cdq
push
test
(bad)
jmp
and
or
mov
mov
pop
add
add
mov
test
cli
enter
jbe
pop
rol
cmc
adc
jnp
enter
push
pop
cld
cmovg
cs
add
add
pop
mov
dec
mov
icebp
shl
and
push
sbb
fstp
push
add
add
sub
add
xor
nop
xchg
scas
neg
dec
mov
iret
(bad)
or
cmp
pop
dec
sub
add
xor
xchg
mov
movs
leave
jle
mov
mov
lea
test
sar
lahf
and
and
add
add
add
jg
in
inc
fisub
pusha
das
push
inc
dec
dec
sbb
pop
add
dec
add
add
loopne
je
aad
inc
or
xchg
test
loop
nop
jae
loope
bound
add
fs
hlt
mov
add
add
and
push
scas
fild
xor
cmp
repz
adc
adc
mov
add
add
or
jae
in
out
jmp
jnp
dec
mov
bound
(bad)
dec
adc
dec
jecxz
add
add
pop
adc
push
mov
push
movs
in
sbb
fisub
imul
xor
mov
push
pop
add
add
and
sub
mov
clc
adc
ror
dec
adc
xchg
sbb
inc
sub
or
add
add
adc
sub
rcl
push
push
dec
jnp
sbb
pop
jg
sub
push
(bad)
je
or
add
dec
adc
xchg
popa
pop
jnp
jnp
in
cmc
pop
and
jle
aad
adc
rol
add
add
add
vmovlhps
mov
movs
adc
mov
cmp
sbb
jmp
add
add
sbb
and
lock
xor
test
pop
add
mov
add
mov
sub
jg
mov
std
xor
and
stos
mov
fdivr
dec
and
add
add
add
push
cld
out
sar
movs
push
or
icebp
sbb
test
cs
lea
js
add
add
jno
movs
arpl
and
mov
jge
div
imul
add
and
mov
(bad)
fwait
je
sbb
cdq
sti
cmps
ins
mov
adc
pushf
mov
hlt
adc
add
add
add
das
int
add
test
test
or
cld
push
mov
lahf
inc
retf
pushf
push
inc
clc
add
add
add
cmp
jmp
mov
xor
adc
scas
mov
pop
pop
dec
xor
daa
adc
jmp
adc
add
add
cmc
clc
xor
in
cli
xor
add
scas
xchg
jge
push
fdivr
push
add
add
add
adc
pop
and
push
pop
cld
mov
imul
rcr
xchg
repz
dec
imul
add
add
jl
dec
stos
int
add
std
je
fst
in
arpl
add
add
and
lods
xchg
inc
add
in
adc
ins
int3
cdq
add
ret
les
sbb
add
and
das
and
out
fwait
push
test
shl
retf
mov
mov
sti
stos
mov
add
add
mov
inc
or
shr
jno
add
push
fst
adc
add
add
stc
shl
aas
scas
sbb
fdivp
mov
mov
(bad)
mov
xor
add
mov
add
mov
fistp
jo
sub
shl
dec
enter
mov
push
pop
or
add
test
in
rcr
pop
call
and
pushf
sbb
jmp
dec
movs
add
add
cmp
push
daa
or
loopne
add
adc
sbb
cmp
aam
ret
xchg
sldt
add
adc
add
jmp
call
push
xchg
or
fist
xchg
test
add
add
push
mov
and
dec
add
and
push
mov
dec
add
add
push
and
or
cmp
mov
add
add
xchg
jge
push
in
sub
stos
adc
add
add
inc
js
xchg
push
cmps
lea
dec
jmp
push
pop
rcr
call
add
add
cli
cmp
jmp
sub
push
cmc
cs
sub
pop
or
add
add
add
popf
pop
scas
mov
movs
cmp
(bad)
adc
add
test
rol
and
popa
sub
add
add
or
or
stc
clc
or
add
(bad)
js
xchg
or
clc
out
adc
out
mov
add
add
movs
and
aam
hlt
hlt
aaa
push
sahf
aas
(bad)
mov
and
frndint
push
jg
icebp
sldt
add
dec
sti
das
mov
das
test
adc
fld
aaa
push
lahf
jmp
add
add
aad
test
retf
in
std
adc
test
inc
lock
mov
retf
add
add
push
lods
and
sub
xor
test
popf
jbe
mov
add
add
mov
das
cld
std
(bad)
hlt
fild
pop
cld
ds
push
popa
mov
add
call
add
add
cmps
repz
push
pop
int3
jp
xchg
jne
int
add
inc
pop
inc
add
inc
or
or
pushf
add
add
hlt
jnp
inc
jp
sub
push
mov
test
int3
ror
pop
dec
sub
sbb
add
add
xor
push
push
nop
sbb
and
shr
mov
jne
xor
and
fld
mov
add
add
pop
pop
imul
dec
xor
sti
and
shr
daa
or
mov
jge
mov
add
add
mov
loopne
not
lahf
pop
sbb
dec
sub
dec
out
jmp
xor
sbb
inc
ror
add
add
imul
in
repnz
int3
(bad)
and
lock
ja
lahf
cdq
loope
jle
push
add
add
loop
pop
in
and
push
pop
lds
les
xchg
dec
mov
add
inc
call
rcr
or
cmp
hlt
(bad)
cmp
cmp
aam
retf
push
outs
addr16
inc
dec
inc
xlat
and
xchg
and
movs
push
lds
fbld
or
sub
inc
or
xor
adc
xchg
sahf
dec
int
jg
call
add
pusha
adc
inc
je
or
push
and
sbb
popa
sbb
sub
add
add
dec
add
cmp
xchg
aam
sub
or
test
int
add
add
movs
push
mov
jbe
test
xchg
ficomp
das
xor
popf
dec
pop
sub
add
add
pushf
mov
int3
pop
push
and
stos
(bad)
mov
jae
inc
cli
sub
imul
dec
sub
add
add
xchg
pop
push
xchg
push
xchg
jne
and
adc
das
scas
rol
cdq
add
pop
add
add
mov
and
or
inc
ret
sbb
adc
mov
mov
add
add
and
pop
inc
(bad)
cmp
clc
sub
pop
adc
push
fsubr
adc
add
add
mov
mov
jmp
push
jl
test
and
pop
fist
out
lock
add
add
cmp
adc
jle
xor
jne
xchg
dec
loope
xor
and
inc
add
add
or
push
push
sbb
pop
jne
inc
lahf
les
(bad)
xor
int3
dec
push
stc
shr
add
add
fldcw
mov
jl
sbb
or
dec
popf
punpckhwd
pop
mov
mov
dec
jmp
dec
hlt
in
inc
out
lock
out
sub
add
push
mov
enter
add
ret
or
outs
hlt
dec
and
sub
sub
push
inc
iret
jbe
gs
xchg
push
add
add
jmp
lea
loopne
cwde
xor
dec
sub
int
int
fiadd
test
adc
mov
add
inc
sub
sub
enter
adc
push
dec
push
xor
div
stos
adc
je
fadd
add
add
mov
xchg
add
push
dec
adc
sub
push
mov
scas
mov
add
add
adc
jg
loopne
rol
xchg
push
test
int
outs
aam
push
xchg
fbld
sahf
loope
in
sub
add
add
xchg
pop
inc
mov
ss
mov
pop
retf
out
dec
jmp
jne
xor
add
add
dec
and
push
sti
ror
adc
mov
ja
and
jne
and
ret
jbe
inc
pop
les
add
mov
sub
sub
jmp
xchg
sbb
cdq
or
popf
add
add
sub
loope
mov
dec
pushf
push
dec
sub
mov
mov
std
and
mov
add
add
bound
mov
jg
inc
push
and
mul
in
adc
stos
xchg
in
push
(bad)
add
add
stc
es
or
dec
out
out
inc
and
jb
sahf
clc
cld
and
es
not
add
add
jb
push
ja
loopne
dec
dec
xor
sbb
push
pop
push
xchg
in
cmp
idiv
lahf
lods
cld
add
add
pushf
fs
repnz
jmp
xor
gs
test
xchg
pop
mov
mov
adc
add
cld
movs
fist
mov
and
inc
pop
push
loope
rol
call
mov
push
ror
pop
test
je
(bad)
lods
sbb
mov
jns
jecxz
shl
mov
add
add
sbb
fbld
jno
or
aam
les
out
das
dec
xor
sti
fld
add
add
cmps
cmp
movs
xchg
lock
mov
ror
lods
lea
das
imul
add
add
in
jg
mov
or
mov
(bad)
mov
sbb
inc
add
enter
add
bnd
push
cdq
add
data16
lods
jne
adc
jp
pop
xchg
push
movs
add
add
sub
jb
aam
adc
or
in
add
mov
pop
push
test
sub
inc
test
add
add
ret
(bad)
out
push
rcr
or
add
cmp
or
rol
xor
repnz
adc
fiadd
add
add
jnp
mov
fiadd
jle
int3
cs
xor
cmps
dec
das
xor
adc
add
add
adc
cmp
adc
cs
cmp
pusha
sbb
adc
mov
push
js
mov
add
adc
xchg
repnz
loope
mov
jae
dec
jne
jo
fisub
retf
fldz
fstp
add
add
outs
mov
adc
jmp
lods
push
popf
stos
test
hlt
inc
ins
bound
(bad)
mov
add
add
fld
stc
inc
sbb
jecxz
inc
add
push
rcr
loope
xor
pusha
lea
add
xor
out
xor
lods
nop
in
or
movs
(bad)
in
jg
cwde
pop
cmp
mov
sbb
add
add
ud0
ret
mov
adc
adc
adc
cli
iret
push
xchg
inc
or
jae
add
add
cmp
cmp
mov
(bad)
mov
mov
enter
mov
add
add
add
sbb
adc
push
es
mov
enter
retf
jne
push
jp
repz
add
leave
ins
pop
arpl
test
xor
push
push
(bad)
push
sub
popa
jae
dec
call
add
mov
sbb
shl
cmp
push
dec
repnz
add
add
push
xor
push
jno
sub
jg
xor
enter
pushf
ret
xor
add
add
mov
in
mov
loopne
sbb
sub
push
push
push
sar
add
nop
enter
bound
jne
lods
adc
jns
arpl
loope
cmp
loope
mov
add
add
sub
rol
outs
icebp
add
sbb
and
push
or
cmp
sub
cdq
sbb
add
add
add
and
and
inc
mov
mov
mov
out
adc
popf
cld
add
add
adc
sbb
(bad)
mov
pop
test
fistp
(bad)
dec
jmp
mov
cmps
pop
clc
add
add
mov
gs
hlt
ret
test
cs
mov
arpl
jge
add
and
xor
sub
mov
pop
push
lods
test
ins
sub
in
add
add
out
or
mov
popf
push
mov
dec
lea
lock
dec
ss
jp
add
add
mov
add
shl
jne
mov
cli
dec
iret
cmp
inc
or
add
add
test
sub
call
scas
and
into
xchg
hlt
adc
enter
pop
dec
xor
cmp
push
push
fsubr
test
mov
test
inc
cmc
or
cmc
adc
out
icebp
xor
add
add
xor
or
inc
ja
cmc
fs
jb
loopne
enter
loopne
xchg
mov
sub
into
add
add
fdivr
fnstcw
mov
adc
(bad)
fcom
cmp
neg
sbb
mov
add
add
push
dec
cld
or
or
sbb
inc
adc
push
sti
mov
shr
xor
inc
sub
add
add
das
push
xor
mov
lock
push
push
repnz
dec
out
icebp
(bad)
push
nop
test
add
add
mov
dec
dec
xchg
clc
adc
mov
mul
fbstp
nop
and
push
add
add
shr
enter
cmps
imul
jne
cdq
movs
push
(bad)
call
or
add
aaa
jle
xchg
call
imul
jae
in
idiv
ret
lahf
ds
add
add
cmp
inc
jl
or
fcom
nop
enter
hlt
fsubr
dec
imul
add
add
mov
pushf
xchg
lock
sbb
adc
fcom
mov
push
xchg
cmps
pop
test
pop
jb
push
fdiv
test
ins
cmc
mov
imul
sbb
enter
add
aad
test
adc
pop
inc
aam
imul
and
mov
adc
nop
mov
add
add
cmp
jne
adc
sti
sahf
mov
loopne
push
push
aas
sub
add
add
imul
popa
push
imul
cmp
inc
dec
sub
mov
adc
inc
div
add
add
cvtps2pi
inc
mov
and
pop
les
push
into
sti
lahf
(bad)
mov
mov
adc
add
add
inc
(bad)
les
icebp
fs
mov
cmps
cmp
pop
fwait
clc
mov
retf
cs
mov
push
mov
add
jo
push
push
daa
mov
mov
or
sub
mov
enter
je
and
add
add
xchg
lock
scas
and
adc
xchg
arpl
ja
or
jmp
dec
push
mov
push
data16
add
mov
jecxz
push
cmp
es
and
cmp
ja
inc
sbb
jne
enter
add
add
inc
sub
add
stos
mov
sub
icebp
or
add
add
sub
(bad)
jo
mov
dec
sub
xor
scas
retf
gs
inc
add
add
movs
enter
fist
add
mov
adc
mov
mov
add
add
daa
test
dec
fcomp
push
sahf
sub
icebp
cmp
fmul
add
add
repz
dec
or
sar
jns
lods
mov
cmp
(bad)
and
adc
add
add
rol
cwde
ins
hlt
cmps
pop
inc
lock
mov
inc
pop
cmp
adc
and
ja
inc
add
add
pop
(bad)
or
push
je
xchg
fst
lods
inc
in
jp
dec
pop
mov
push
push
add
add
mov
scas
mov
push
std
(bad)
lea
movs
pop
add
loop
push
dec
je
add
add
mov
out
rcr
xchg
and
jae
jb
lock
push
mov
fucomp
ja
call
add
mov
jb
xchg
inc
enter
push
leave
adc
jo
inc
in
aas
and
pop
aad
outs
or
add
add
dec
adc
pop
add
popa
inc
call
push
movs
adc
(bad)
dec
sbb
pop
adc
fbstp
ins
sbb
xchg
cmp
mov
or
sub
sub
add
add
retf
(bad)
cmp
add
sub
dec
clc
sub
in
inc
(bad)
shl
xchg
adc
add
or
int
cmovae
add
mov
(bad)
icebp
xchg
sbb
inc
(bad)
adc
add
add
pop
ret
out
test
dec
add
add
loop
cmps
adc
dec
fwait
xchg
std
pushf
sbb
add
add
push
movs
mov
xlat
push
stos
cwde
in
retf
jl
mov
push
inc
jne
fwait
hlt
and
add
add
pop
inc
test
pop
mov
mov
mov
xchg
jns
cli
(bad)
lock
test
out
mov
sub
add
add
mov
iret
loope
aam
repnz
xor
mov
mov
jo
ret
test
dec
add
das
inc
sbb
or
mov
repz
je
imul
xor
pop
pop
sti
push
call
jae
dec
out
clc
pop
push
dec
fistp
nop
gs
push
push
cli
fucomp
aam
jb
mov
jecxz
add
add
jle
ret
mov
cld
addr16
(bad)
imul
mov
pusha
pop
add
add
sbb
adc
cmp
add
jmp
ja
leave
xchg
jnp
fs
lock
std
lods
pop
cmc
pop
ja
add
add
cmp
aas
mov
lock
rcr
gs
mov
adc
pop
push
or
pushf
and
dec
xor
mov
adc
and
mov
dec
ret
add
cmp
popf
fidivr
pop
push
add
add
or
jmp
jnp
cvtdq2ps
lock
popa
mov
pop
popf
clc
cdq
jg
cmp
cwde
add
add
dec
pop
dec
dec
jmp
scas
and
aad
movs
clc
inc
or
jge
lods
das
dec
fstp
not
add
add
pop
adc
push
sub
or
movs
add
mov
jnp
mov
mov
js
and
add
(bad)
dec
mov
or
fcomip
push
dec
add
add
push
cmp
mov
movs
sub
fbld
or
stc
clc
or
test
je
out
test
add
or
add
jge
es
xor
sbb
ins
out
adc
or
adc
mov
add
push
nop
jb
xchg
dec
push
sub
pop
mov
add
add
or
mov
inc
and
sbb
adc
adc
int3
jp
mov
add
add
mov
adc
push
bound
mov
and
ret
push
mov
dec
or
imul
pop
inc
add
add
imul
ins
pop
or
inc
inc
fmul
xor
test
pusha
repnz
and
add
add
out
das
mov
enter
or
mov
xor
mov
test
add
add
pop
or
mov
push
sbb
test
pop
test
sahf
add
add
arpl
into
mov
mov
into
jo
sbb
mov
arpl
ror
pushf
cmp
(bad)
(bad)
enter
add
and
inc
and
les
outs
jp
ins
sbb
aas
dec
sbb
add
adc
in
dec
pop
call
or
sub
inc
and
cld
jge
(bad)
jbe
pop
stos
and
add
add
adc
jb
push
adc
jg
mov
push
adc
and
in
xchg
mul
push
pop
ret
add
or
or
aad
jb
nop
push
add
fs
jle
push
mov
push
and
mov
inc
mov
add
mov
jge
sub
sub
stc
dec
jmp
pop
push
xchg
dec
add
add
sub
cdq
add
dec
jle
or
jl
cmps
sbb
and
ss
rcl
add
add
sub
mov
daa
aam
lds
jne
push
inc
lea
mov
fcom
repz
add
add
daa
jmp
aad
xor
push
mov
dec
push
out
int
or
mov
sbb
aam
push
leave
add
add
pop
add
push
pop
jp
cs
stos
sahf
inc
aad
dec
mov
enter
add
add
add
push
mov
pop
adc
mov
xlat
int
in
cmp
fwait
push
jnp
shr
scas
and
ror
pop
add
add
rcl
pop
fimul
fcom
inc
in
mov
enter
pop
mov
add
add
add
dec
mov
jo
cmp
(bad)
cmc
jg
pusha
in
pusha
push
add
cmps
aad
add
add
inc
xchg
aad
cli
jne
dec
mov
add
inc
or
add
or
aad
and
add
add
rol
push
or
adc
jbe
or
dec
mov
xor
add
add
std
ins
out
xchg
pop
loopne
push
out
test
lahf
lock
fistp
in
and
repnz
add
cli
aad
(bad)
push
and
mov
nop
aam
mov
loop
add
add
mov
pusha
inc
push
clc
test
mov
pop
lahf
loopne
inc
adc
cmp
sbb
out
add
add
movs
shr
fs
stc
or
call
pop
pop
sub
nop
push
or
adc
enter
add
add
fidiv
add
xor
stos
clc
cmp
jns
pop
test
shl
cld
dec
test
in
sti
xor
ror
push
mov
adc
sbb
hlt
mov
cwde
add
add
pushf
je
test
xchg
mov
push
pop
retf
nop
jnp
or
gs
cmp
addr16
aaa
cmp
cmp
jo
add
add
mov
dec
mov
mov
or
sub
add
cld
scas
dec
jmp
cmc
fnstcw
les
jns
or
leave
(bad)
jle
lds
test
jp
stos
mov
add
add
jne
mov
mov
or
aas
dec
repz
fwait
daa
aam
ins
movs
sub
sbb
add
dec
movs
cmp
xlat
cmp
out
sub
mov
pop
adc
lods
aaa
fild
add
or
outs
add
mov
cmp
pop
lock
push
push
jge
sub
loopne
shr
add
add
jecxz
mov
repnz
sub
pushf
in
call
daa
jmp
std
cmp
dec
add
add
pop
jmp
(bad)
repnz
mov
sub
popf
pop
mov
or
inc
sar
add
add
add
ret
push
push
pop
dec
add
dec
ja
call
adc
lea
add
add
dec
fdivr
sbb
leave
push
or
jmp
push
pop
adc
and
push
push
add
add
adc
repnz
adc
popa
mov
fwait
push
popf
jbe
outs
dec
sub
popa
retf
adc
mov
stos
sub
or
or
sub
adc
mov
add
add
fneni(8087
inc
inc
sub
add
adc
mov
jl
test
out
add
add
inc
in
or
cmc
addr16
retf
xchg
adc
test
sbb
ss
push
push
pop
xor
pop
add
add
das
jae
sbb
out
ror
not
mov
dec
adc
adc
les
add
nop
jmp
sahf
mov
adc
(bad)
cli
ins
adc
push
movs
scas
cwde
xor
adc
add
stos
xlat
jg
aaa
mov
enter
sbb
cli
inc
sbb
inc
and
push
sti
pop
jo
push
add
add
out
inc
inc
push
enter
loopne
add
sub
jo
push
in
push
xor
add
add
shl
cs
sub
(bad)
(bad)
test
mov
add
shl
mov
push
dec
mov
adc
add
add
and
jno
(bad)
fcom
int
mov
add
sbb
pop
adc
add
add
in
int3
xor
out
in
das
mov
js
push
pushf
cmp
das
jne
cdq
sahf
add
inc
push
add
add
repnz
sbb
and
dec
daa
les
dec
not
clc
fs
sub
(bad)
mov
cld
sub
mov
add
add
adc
xor
adc
or
(bad)
mov
nop
adc
cmp
mov
add
add
inc
add
cld
jae
aam
scas
aaa
test
mov
lods
mov
inc
pop
and
add
xchg
imul
push
sbb
sub
xor
shl
push
js
push
call
push
cmp
add
pop
push
xchg
adc
dec
and
cmp
inc
pcmpeqd
mov
adc
ret
ja
add
add
pop
pop
movs
hlt
inc
adc
iret
push
es
loope
sub
push
cli
add
adc
add
add
arpl
xor
mov
sti
scas
loop
mov
mov
or
add
mov
mov
pop
add
test
enter
sub
mov
push
pop
inc
adc
pop
push
lods
inc
add
add
adc
(bad)
div
inc
repz
nop
movs
dec
aam
outs
repnz
and
add
add
mov
jb
sub
adc
sbb
dec
and
sub
add
add
fwait
add
sub
adc
dec
ins
xor
add
pushf
cmp
add
cmps
push
inc
xor
lods
ja
inc
nop
xor
mov
dec
out
adc
pause
loop
mov
ja
in
leave
out
add
add
adc
lods
mov
inc
dec
test
push
call
and
and
cld
adc
add
sbb
cmp
mov
addr16
ror
push
xchg
js
and
pop
mov
push
add
add
adc
xchg
sub
dec
call
mov
repnz
inc
dec
add
jne
or
add
pop
fdivp
add
add
cmc
dec
dec
in
adc
dec
jne
mov
ins
mov
push
add
add
mov
push
mov
loope
or
jge
push
and
xor
xchg
add
add
mov
fcomp
data16
les
adc
sbb
jp
mov
scas
and
push
test
add
add
cmp
dec
mov
inc
sbb
and
dec
retf
outs
je
xlat
les
add
mul
sub
dec
add
mov
outs
or
mov
repnz
(bad)
jmp
ficomp
add
add
popa
ds
push
sbb
stos
lock
add
ins
popa
les
inc
aaa
dec
ret
pop
imul
jnp
mov
add
sti
xchg
sub
test
sti
or
xchg
int
movs
repnz
and
add
add
or
les
or
cmps
rcr
repnz
adc
add
push
mov
stc
in
cmp
adc
push
add
call
mov
mov
pop
ret
fistp
cmp
ret
aam
fisubr
jae
mov
test
sub
test
int3
ret
xor
xchg
fld
add
add
mov
dec
out
push
inc
or
(bad)
mov
bound
add
add
inc
(bad)
dec
or
push
lahf
cli
jmp
mov
sub
aad
mov
push
loop
test
add
add
lods
sub
jnp
xor
icebp
inc
scas
push
ds
popa
cmp
jge
out
bound
add
add
and
cli
out
retf
aam
mov
mov
dec
cmp
pop
popf
pop
inc
inc
add
add
xchg
not
daa
sahf
add
cli
cmp
sub
fbstp
ficom
cmps
arpl
aas
add
add
or
jno
jne
pop
adc
lea
inc
fs
mov
mov
push
pop
scas
lahf
add
add
aam
dec
xlat
and
rcr
ret
or
stos
sbb
xor
inc
loopne
add
add
xor
aam
ds
cs
cmp
(bad)
ss
push
mov
sub
inc
jmp
push
loope
push
add
add
lods
dec
push
test
fwait
cmp
xor
lea
xchg
icebp
sub
push
je
bound
popf
dec
mov
add
inc
je
call
pop
mov
inc
out
push
les
xor
sub
mov
call
add
add
push
cmp
fwait
stos
lahf
push
out
sub
nop
push
mov
mov
push
and
add
add
jmp
inc
push
mov
in
and
or
jbe
imul
add
jmp
sub
mov
outs
les
ror
dec
or
add
add
fist
add
dec
shl
or
add
inc
xor
sub
dec
mov
xchg
ds
add
add
add
inc
ret
scas
cmp
add
push
cmp
nop
nop
fs
xchg
jle
push
mov
cmps
inc
add
add
dec
fild
aas
shl
xor
sar
xchg
mov
repz
retf
jge
add
add
xor
out
cmp
cmovp
or
test
in
add
add
add
add
div
xchg
movs
xchg
mov
fidiv
gs
es
xchg
in
push
push
add
add
xchg
mov
and
mov
adc
mov
das
sub
gs
add
add
scas
mov
push
cmp
pop
leave
jne
int
cld
data16
les
add
cmp
add
add
stos
movs
ret
dec
dec
fist
loopne
mov
loope
sub
(bad)
lock
dec
push
xchg
and
xlat
movs
push
rol
add
add
out
popf
movq
and
test
in
in
int3
push
push
adc
jae
add
add
add
adc
mov
dec
fwait
cdq
imul
std
sub
hlt
inc
jle
ror
add
add
loop
dec
ret
xchg
jle
xchg
fnstcw
out
xor
sbb
movs
(bad)
das
repz
dec
inc
jnp
adc
add
add
jne
xor
cmp
mov
jnp
jp
out
pop
push
xchg
push
fmul
add
les
rcr
cdq
loopne
adc
cmp
mov
jmp
cwde
pop
add
add
adc
stos
imul
mov
ret
shl
or
mov
fwait
into
imul
scas
iret
mov
inc
loope
jle
(bad)
or
scas
fwait
(bad)
jbe
mov
jmp
add
jno
daa
(bad)
mov
fidiv
ror
mov
stos
out
lods
sbb
add
pushf
add
add
lahf
or
sub
inc
adc
or
scas
xor
ds
nop
add
add
push
jge
sbb
out
mov
add
fwait
mov
sbb
sub
pop
or
cmp
daa
inc
or
add
add
cmp
adc
push
and
imul
adc
push
sub
aaa
xchg
int3
dec
cwde
fwait
das
int3
(bad)
cmp
add
add
out
test
cli
push
or
in
lock
push
jne
aas
pop
or
loop
in
stos
mov
add
add
sub
jns
push
dec
or
mov
push
in
mov
mov
int3
xor
retf
add
push
inc
push
fucom
in
inc
sub
imul
nop
jmp
movs
xlat
mov
cmps
xor
add
add
mov
dec
mov
dec
fiadd
fadd
and
sub
retf
pop
aas
dec
add
add
dec
clc
dec
pop
dec
cmp
inc
mov
sbb
inc
or
sbb
add
add
ja
mov
push
sti
mov
mov
jp
shl
mov
stos
lahf
lods
rol
add
sbb
push
or
repnz
xor
jne
mov
xchg
adc
add
add
int3
xchg
fnstcw
iret
pop
(bad)
inc
retf
pop
in
jno
xor
imul
cli
jno
mov
add
add
xchg
dec
sub
repz
jl
dec
jle
popf
lahf
dec
sbb
fs
bound
add
add
pop
nop
hlt
loop
xor
mov
inc
and
sbb
fwait
sub
xchg
xor
nop
test
outs
add
add
cmp
mov
sub
xor
inc
nop
in
int3
pop
ins
(bad)
aaa
and
data16
mov
pop
xchg
ins
adc
add
add
cmp
ret
ins
mov
ins
pop
scas
gs
movups
test
(bad)
ret
dec
dec
fs
sbb
add
in
pop
xor
adc
loopne
mov
mov
pop
xchg
and
call
add
jno
nop
xchg
xor
mov
lahf
cmp
dec
mov
jge
dec
arpl
adc
jecxz
or
add
pop
or
mov
cmp
cmp
pop
in
inc
mov
mov
mov
add
add
fld
clc
sbb
cmp
jo
sbb
ins
aaa
jo
push
xlat
adc
sub
add
add
xor
(bad)
lock
dec
or
scas
xor
mov
lea
sbb
push
sbb
add
add
(bad)
push
dec
jge
std
sbb
adc
cmp
mov
retf
popa
or
dec
fidivr
inc
push
fnstenv
add
inc
adc
pop
popf
jg
aaa
pop
int3
dec
sbb
inc
ret
rol
mov
mov
nop
jmp
push
dec
push
mov
jg
or
xlat
push
fsubr
sbb
or
jle
inc
add
add
or
sbb
xchg
int3
jae
dec
lock
cmp
fwait
daa
push
mov
gs
clc
sub
fadd
enter
add
push
int
jle
pop
xchg
xor
push
aam
int3
pop
jbe
int
sub
out
xor
add
iret
pop
cdq
fs
push
fmul
addr16
cwde
adc
mov
or
loop
je
add
add
movs
xor
and
dec
inc
jbe
je
hlt
mov
mov
adc
iret
push
cli
retf
sbb
ins
and
cmps
daa
fs
dec
or
jmp
pop
add
fidiv
mov
xchg
nop
es
add
add
cwde
arpl
imul
cld
mov
outs
call
aad
pop
stos
fbstp
push
xchg
loopne
lock
add
cmp
nop
and
mov
lea
cmp
out
retf
mov
loop
(bad)
add
add
xchg
pop
cmp
call
dec
and
inc
mov
inc
cmp
js
ja
add
div
add
add
mov
sbb
pop
or
(bad)
or
dec
jne
and
xchg
ret
adc
stos
push
ret
add
mov
mov
sahf
mov
xlat
sbb
cmovo
cmp
add
add
mov
dec
les
stos
dec
ret
adc
les
mov
daa
shr
and
cmp
sub
ror
add
add
rol
test
mov
push
out
push
repz
lods
or
repz
and
sti
cmps
pusha
mov
out
nop
jge
jne
pause
in
or
cmp
repnz
movs
and
shr
adc
add
add
mov
sbb
jne
mov
pop
sbb
es
dec
jl
push
push
retf
add
add
(bad)
scas
je
lock
cwde
das
in
enter
imul
dec
je
push
push
rol
add
add
mov
xchg
jecxz
xlat
dec
or
cwde
pop
sbb
xchg
test
and
pop
outs
popf
xchg
pop
(bad)
xchg
fs
sti
daa
outs
leave
cld
mov
mov
xchg
and
dec
add
add
scas
lahf
mov
je
popa
in
(bad)
stos
inc
idiv
out
mov
adc
ins
add
add
xor
out
fwait
inc
fwait
pop
xchg
out
mov
mov
pusha
fild
sbb
mov
sub
movs
and
repz
add
xorps
push
mov
cmp
push
xor
cmp
shl
xchg
mov
das
retf
jmp
adc
and
rcl
lea
daa
rep
cmp
or
lods
or
mov
and
add
add
hlt
sub
cdq
add
push
adc
pop
pop
mov
lahf
push
sbb
pushf
repz
add
sbb
outs
int
das
mov
(bad)
je
scas
cmp
mov
mov
jo
mov
pop
and
clc
xlat
mov
jmp
aad
jae
mov
push
pop
inc
call
jno
add
add
lods
ret
pop
int
jo
cmp
sbb
xor
dec
retf
and
add
add
xchg
or
xchg
jle
mov
(bad)
jnp
jmp
sub
xchg
push
jle
xchg
inc
pusha
inc
adc
add
add
sbb
enter
adc
in
leave
adc
imul
mov
add
shr
push
pop
daa
hlt
fs
inc
daa
mov
push
ja
push
jnp
ja
in
xchg
cld
add
add
stos
sub
fisttp
(bad)
aam
aam
sub
mov
adc
dec
sbb
test
add
add
adc
int3
jmp
pop
mov
inc
enter
and
add
or
popa
outs
adc
out
inc
shl
push
test
test
enter
add
xchg
loopne
and
clc
adc
cdq
out
(bad)
(bad)
mov
inc
sub
add
add
inc
cmp
data16
and
dec
sbb
xchg
int3
jo
and
inc
int3
xchg
and
add
push
int3
push
sub
mov
and
adc
lods
xor
cli
inc
aam
xor
add
popa
mov
ret
adc
fsub
inc
ins
push
clc
sub
or
add
add
and
or
adc
and
mov
sbb
or
or
jne
add
add
loopne
adc
(bad)
shr
ins
mov
maxps
mov
mov
adc
add
add
dec
pop
movs
in
test
cld
jne
pop
scas
sub
push
xor
ret
pop
gs
ror
add
add
cmp
push
jmp
je
fcmovnbe
adc
(bad)
and
pop
jbe
and
imul
add
add
inc
call
js
dec
cmc
adc
leave
clc
inc
sar
or
push
inc
mov
and
add
add
ins
pop
xchg
cs
nop
sub
pop
xchg
xchg
inc
sahf
pop
imul
inc
inc
add
add
stos
fwait
es
repnz
xlat
iret
and
or
xchg
push
js
push
dec
jl
xor
add
add
sub
cmp
adc
and
mov
repnz
scas
mov
int
sbb
cmp
add
add
push
push
push
mov
or
test
mov
aam
into
or
xchg
scas
mul
add
add
add
aas
jbe
jge
xchg
jmp
mov
loop
push
lds
ja
into
sar
add
add
push
inc
loop
add
adc
out
adc
fimul
adc
(bad)
repnz
sar
add
mov
push
enter
mov
push
or
adc
sub
inc
push
enter
mov
pop
cld
test
add
add
xchg
test
push
rol
(bad)
aam
(bad)
adc
dec
les
adc
fbld
add
add
nop
ja
add
bound
pop
fadd
push
sub
cdq
daa
les
pop
mov
add
add
rcr
stos
jg
outs
pop
fsub
test
sub
adc
out
and
fs
xchg
add
xchg
add
or
xor
in
add
push
xchg
sub
and
jno
or
and
and
add
add
dec
das
mov
mov
jge
jns
mov
pop
xchg
pop
and
out
or
add
or
xchg
inc
xchg
inc
pop
adc
jbe
mov
add
cdq
jae
or
jmp
fistp
add
add
and
pop
xchg
jne
or
(bad)
inc
jl
cmp
ret
sbb
add
dec
add
add
dec
fidiv
pop
add
lock
retf
inc
jl
cdq
rcr
and
cmp
add
add
repnz
cmp
adc
add
or
jmp
movs
push
cmps
icebp
js
jl
and
and
add
dec
push
add
faddp
dec
(bad)
jge
xor
jg
test
mov
mov
cmps
add
add
inc
adc
iret
push
dec
cmps
mov
addr16
sar
or
movs
cmps
jl
test
cmovb
pop
mov
pop
mov
add
movs
xor
repz
outs
or
addr16
fisttp
daa
shl
test
pop
cmps
add
add
les
mov
icebp
xchg
push
repnz
out
xchg
fnstenv
cmovle
pushf
add
add
mov
adc
cli
lock
aas
ror
jmp
jmp
sahf
and
push
pop
movs
retf
movs
es
add
add
lods
in
mov
sti
sub
xchg
and
retf
and
jmp
arpl
mov
add
add
rcr
imul
dec
sbb
icebp
push
add
inc
lds
mov
cmps
add
add
int3
xlat
adc
out
aas
inc
mov
jns
out
mov
sub
es
sub
in
xchg
add
add
and
test
adc
pop
jl
mov
sbb
jp
(bad)
jo
fcmovbe
mov
add
add
ror
dec
(bad)
push
outs
shl
push
retf
fadd
sbb
mov
cmp
mov
mov
add
add
mov
add
inc
fwait
out
mov
leave
sbb
mov
add
jmp
mov
pop
mov
test
in
push
into
add
mov
jno
xchg
dec
scas
dec
cdq
int3
shl
add
add
(bad)
aam
and
std
ficom
hlt
jle
loope
sbb
dec
outs
mov
int3
mov
add
add
adc
and
xchg
push
call
adc
xor
lods
add
add
pushf
adc
outs
and
xor
or
add
inc
aaa
aaa
lea
inc
in
push
xor
cld
in
add
add
cmc
mov
add
shl
push
aam
sbb
rcl
xchg
mov
clc
add
add
push
sbb
adc
sbb
pop
jne
inc
or
retf
push
lock
fs
imul
add
add
push
gs
cmp
je
xchg
(bad)
pop
and
inc
or
and
sbb
cmp
fld
cmp
mov
adc
pop
lea
test
or
bound
add
add
psllq
pop
data16
sub
adc
enter
sbb
xor
jle
(bad)
or
jo
add
add
cli
rol
ror
test
or
cmp
arpl
repz
or
jg
push
xor
add
add
dec
nop
fnsave
cdq
ret
push
cs
jnp
mov
mov
push
div
aam
repnz
or
mov
sbb
mov
inc
mov
adc
mov
cmc
fmul
rol
add
sub
add
add
mov
add
ffree
sbb
dec
xor
sub
or
add
sbb
xchg
mov
dec
and
adc
retf
pusha
rol
fsub
dec
or
add
add
fmul
loopne
inc
test
in
adc
mov
or
scas
xor
inc
mov
and
add
add
adc
cmps
daa
jae
inc
lea
addr16
retf
rcl
push
adc
lock
popa
sbb
add
add
retf
les
sbb
pusha
jmp
inc
iret
sbb
pop
xchg
xor
mov
xor
add
add
outs
cmps
mov
mov
or
xchg
push
lahf
xor
jle
imul
add
add
add
(bad)
jmp
cwde
jb
add
xchg
cmp
dec
loop
cs
or
add
add
std
push
sahf
test
test
pushf
xor
lds
adc
adc
lock
push
inc
add
add
adc
(bad)
out
and
jbe
pop
mov
mov
push
xchg
and
fsub
cmc
add
add
push
shr
mov
aas
or
pushf
xor
xchg
test
ror
xor
add
fmul
sub
add
add
mul
or
ror
std
pop
xlat
lock
dec
and
cld
in
test
mov
mov
add
add
jmp
aam
add
inc
ret
call
xchg
dec
mov
sbb
aam
add
add
test
enter
addr16
push
test
lahf
jmp
xchg
push
stc
call
lock
add
movs
push
add
and
and
jmp
enter
pop
xchg
fidivr
clc
fadd
push
mov
add
add
jmp
and
xchg
loope
sbb
or
popa
imul
adc
add
add
mov
mov
test
add
cli
xlat
mov
cmp
test
mov
push
mov
add
add
xor
fst
or
ret
pop
repnz
dec
add
jne
mov
shl
add
add
je
mov
and
or
add
gs
mov
and
jmp
add
rol
add
test
mov
pusha
lock
or
mov
mov
add
rcr
mov
xor
test
add
add
movs
jge
sub
push
ds
push
ins
std
int3
dec
mov
push
adc
adc
add
dec
sbb
push
jo
adc
int
fstp
push
neg
in
pop
cmp
add
add
add
ins
mov
push
inc
adc
inc
retf
and
dec
add
loope
jne
dec
push
aas
leave
push
or
mov
add
add
push
mov
jmp
out
cld
dec
mov
lahf
jbe
fidiv
adc
push
xchg
add
add
ficomp
pusha
mov
cwde
mov
pop
pop
xor
push
mov
jle
mov
add
add
xlat
mov
stos
mov
in
(bad)
jmp
cmp
cmp
sti
mov
arpl
(bad)
hlt
sbb
cmp
les
aas
sbb
movs
int
out
xchg
push
clc
scas
mov
add
add
fs
enter
add
add
jno
or
lods
xchg
inc
sub
add
add
pop
loop
aaa
adc
mov
ficomp
cli
adc
jne
xor
imul
add
add
add
adc
fwait
jge
jp
sub
jl
sbb
xor
add
add
js
popf
jnp
sub
mov
jo
xor
fs
rcr
add
add
stc
int
outs
inc
aam
push
jmp
cwde
shl
inc
or
mov
mov
add
and
and
sub
or
add
sub
jne
out
lods
jmp
adc
or
enter
in
hlt
inc
add
add
xlat
inc
pop
sbb
je
bnd
inc
pop
adc
sub
or
pop
test
add
add
jmp
cmp
out
pop
sub
pop
mov
mov
imul
add
add
jns
mov
and
push
pop
sbb
inc
adc
push
mov
pushf
leave
cld
xchg
jl
cli
adc
add
add
mov
xchg
cmp
dec
cmps
inc
dec
xor
push
sub
test
add
scas
xor
jmp
aaa
movs
adc
add
add
mov
fs
and
adc
cs
test
push
and
cli
cmc
xchg
adc
add
add
cli
popa
sbb
pop
sub
imul
push
mov
sbb
jne
test
add
add
stos
jmp
(bad)
and
fs
mov
stc
or
popa
jnp
push
adc
mov
or
mov
int3
or
adc
pop
daa
mov
ins
jno
shl
jno
mov
mov
add
add
dec
adc
scas
and
fidiv
and
les
gs
mov
pop
add
add
and
mov
and
sbb
push
rol
cmp
je
adc
add
add
xchg
jmp
fldcw
fimul
mov
(bad)
and
add
cs
stc
(bad)
adc
and
add
add
loope
stc
add
pop
cmp
xchg
xor
repz
add
inc
(bad)
mov
and
inc
xchg
add
add
scas
adc
sub
and
xchg
cmp
je
inc
bound
push
lock
dec
call
cs
add
add
aam
out
push
sbb
cmp
daa
adc
pop
xor
loope
pop
arpl
or
or
add
add
push
adc
push
shl
adc
or
stc
or
sbb
add
inc
or
add
add
adc
out
je
mov
shl
push
bnd
or
xchg
cli
pop
add
and
cdq
ds
adc
xchg
or
mov
dec
cmps
adc
loopne
rcl
mov
push
add
add
adc
inc
xor
add
pop
jmp
adc
dec
mov
pop
sbb
jl
sbb
dec
xchg
clc
pop
cmp
mov
add
xchg
push
xchg
xor
jmp
add
add
lods
sbb
inc
mov
retf
call
inc
jo
imul
cmp
adc
add
add
(bad)
fdivrp
leave
bound
cli
push
sub
inc
lods
ins
in
(bad)
dec
cmp
add
add
jb
mov
pop
or
cs
jp
aam
leave
xlat
out
pop
mov
shr
push
jne
add
add
cmp
push
push
inc
mov
lock
pop
lods
hlt
xchg
xchg
add
pop
add
add
pop
and
call
mov
repnz
mov
adc
cmp
add
add
sbb
dec
mov
mov
icebp
pop
sbb
pushf
push
popf
pop
xchg
push
add
mov
sub
cs
je
or
pop
lods
mov
inc
clc
add
add
cmp
leave
jns
add
retf
ret
shl
mov
sub
sub
add
add
jbe
mov
mov
sub
nop
mov
sub
and
add
mov
shl
fs
data16
xchg
sbb
aas
add
pop
nop
xchg
and
push
dec
fld
add
add
jp
push
xchg
cs
cld
cs
mov
pop
pop
sti
push
jb
mov
dec
cmp
add
mov
popa
int3
mov
cmp
ror
adc
aas
dec
sti
bound
push
jle
add
add
adc
jne
fsub
cmp
fs
and
pop
sbb
into
stos
lock
add
add
enter
jmp
stc
aam
xchg
or
jne
inc
leave
fs
add
cmp
sub
mov
ds
mov
xor
and
push
fistp
push
pop
or
dec
retf
(bad)
jmp
add
add
fxch
or
(bad)
xchg
add
and
lds
and
jl
cli
mov
add
add
add
mov
sub
mov
cld
push
jnp
(bad)
mov
xchg
and
mov
add
add
sub
imul
adc
and
cmp
xor
xchg
(bad)
mov
push
sub
and
xor
div
xor
ror
scas
cwde
or
cmp
add
add
gs
int3
xlat
sub
pop
test
push
push
daa
and
cmp
stc
inc
pop
and
xchg
push
push
add
add
cmp
xchg
mov
cmp
mov
mov
add
out
pop
or
pop
and
add
add
xor
outs
fs
out
retf
ja
iret
repz
push
add
das
aaa
icebp
dec
sbb
in
inc
jae
lahf
rol
add
add
dec
bound
cmps
push
nop
xchg
call
xor
or
outs
jno
aas
and
xor
xor
add
add
in
jmp
inc
imul
adc
iret
dec
hlt
mov
lahf
pusha
inc
adc
lock
mov
(bad)
inc
add
or
or
xchg
adc
lods
daa
pop
out
sub
mov
add
add
dec
mov
mov
into
jns
call
and
clc
cmp
jae
pushf
inc
sub
fcmovne
add
add
add
jae
repnz
sahf
xor
in
dec
in
bound
sar
and
cli
fistp
add
add
cmp
jl
cmps
fcomp
neg
shr
aad
cmp
arpl
mov
mov
add
add
ret
in
scas
sub
mov
adc
cwde
push
in
or
in
jmp
pop
inc
test
mov
pop
sub
lea
or
test
push
xor
add
add
test
or
bound
jb
das
pop
adc
and
xor
inc
cs
mov
mov
cmp
and
mov
neg
push
and
add
inc
add
and
das
mov
mov
sub
add
cmp
rol
je
sub
xor
add
add
lahf
pop
xchg
adc
xor
test
movs
cdq
cmp
sbb
inc
stos
dec
or
inc
xchg
dec
add
add
adc
cmp
dec
xor
pop
and
nop
mov
loop
js
inc
jp
add
add
pushf
jae
and
mov
pop
repnz
push
push
jle
mov
aad
add
add
push
shl
adc
cli
adc
jmp
adc
sbb
inc
js
fs
(bad)
xchg
pushf
stos
stos
add
dec
mov
inc
movs
pminub
clc
push
xchg
push
jns
xchg
jne
sbb
xor
add
add
sbb
icebp
cmp
(bad)
clc
ja
inc
jb
loop
xor
out
out
dec
mov
add
pop
mov
add
add
mov
test
jmp
mov
and
int3
adc
add
mov
add
add
xchg
setb
xor
xchg
mov
add
jmp
mov
xlat
pop
sub
add
add
xor
rcl
ja
jo
add
or
pop
mov
push
adc
mov
add
mov
nop
mov
(bad)
adc
hlt
fmul
jns
das
mov
stos
dec
jg
jmp
fld
add
mov
arpl
mov
and
xchg
in
cdq
pop
dec
xor
cli
inc
leave
xor
mov
add
cmp
sbb
enter
inc
loopne
jbe
loopne
test
test
pop
mov
add
add
daa
add
mov
movs
and
xchg
lock
enter
push
pusha
mov
retf
push
add
rcl
jle
inc
inc
fdiv
mov
push
inc
mov
dec
mov
icebp
call
test
add
in
dec
lahf
pop
(bad)
adc
es
jmp
pop
ret
das
push
add
add
or
ja
jmp
mov
dec
jle
jmp
and
add
fs
cmovb
cld
and
push
push
xchg
pop
add
cdq
ins
ins
jl
enter
add
jmp
scas
xchg
ficom
in
add
cmps
push
push
xor
dec
adc
push
mov
leave
dec
jp
jb
add
add
imul
sbb
add
movs
scas
pop
mov
(bad)
mov
jl
inc
nop
adc
jne
loopne
dec
add
int3
mov
ja
xor
imul
add
add
jmp
jnp
push
and
sti
xor
aam
loope
pop
das
and
sbb
ret
add
add
jmp
idiv
sbb
sahf
test
or
push
sahf
and
add
add
ret
and
or
jp
ret
loope
cld
mov
push
xchg
add
js
xchg
xor
pusha
sub
jl
outs
ret
dec
imul
jl
mov
add
jp
adc
mov
fwait
adc
cmp
mov
adc
add
add
adc
lods
dec
lahf
jo
adc
jo
sub
mov
stos
adc
clc
add
add
into
mov
stos
mov
leave
fwait
pop
mov
nop
enter
hlt
dec
push
scas
mov
jge
test
add
add
aaa
je
jp
xor
sub
movs
xchg
mov
xchg
or
aaa
add
add
in
(bad)
sub
rol
add
sahf
pop
adc
sub
fstp
add
add
pushf
popa
dec
mov
add
or
lds
stc
inc
add
and
add
pop
imul
jmp
ret
mov
cmp
xor
paddusw
mov
add
add
xor
sbb
add
mov
jns
adc
imul
pop
add
add
sbb
push
daa
pop
sub
aad
add
into
outs
pop
cld
xor
mov
push
pop
or
adc
add
fneni(8087
and
dec
cs
mov
jp
cs
movs
xchg
jb
jbe
add
add
pop
jne
aad
icebp
dec
xchg
cmps
add
sub
add
sbb
fnstsw
adc
add
push
sub
loopne
popa
and
popa
je
pop
pop
sti
mov
cmps
mov
popa
scas
loopne
push
mov
jmp
icebp
pop
mov
mov
add
add
add
out
call
inc
push
adc
dec
movs
sbb
mov
or
loopne
sub
mov
add
add
xor
data16
jae
jo
jg
cmps
lahf
adc
mov
sub
icebp
movs
add
add
cmp
adc
cli
movs
jmp
cs
and
scas
adc
or
xchg
cs
add
add
jmp
and
add
cmp
call
test
jnp
sar
(bad)
xchg
aam
add
add
loopne
and
sub
add
retf
sbb
cmp
cmp
daa
je
sahf
push
mov
cmp
add
add
sahf
fsubp
gs
daa
mov
cmp
ja
aaa
loopne
jne
mov
stos
adc
push
add
add
(bad)
xor
cmp
jno
push
pop
sub
je
dec
xor
add
dec
std
cmp
add
sar
fist
or
jg
mov
and
add
jecxz
lock
fnstenv
jne
repz
sbb
xlat
xor
and
add
sbb
cmp
ds
or
sub
sub
fdivr
mov
lea
add
add
das
test
shl
das
test
pushf
or
push
xchg
je
sub
add
mov
mov
mov
clc
or
adc
jge
repz
dec
rcl
jbe
aas
add
add
test
lea
add
in
add
push
dec
and
out
outs
push
xor
mov
cmp
add
and
jae
clc
std
jp
popf
inc
jae
nop
jmp
ss
nop
mov
lods
dec
mov
sbb
add
add
(bad)
sbb
ds
lahf
sti
int
dec
mov
and
pop
mov
mov
fist
dec
cwde
lods
mov
add
add
push
gs
xor
sub
das
pop
iret
ror
outs
les
inc
add
add
push
loop
adc
cmp
dec
cwde
mov
mov
and
(bad)
and
ja
loop
add
add
jl
cmp
jb
test
stc
push
stc
push
push
aad
add
gs
fld
add
add
pop
icebp
sub
adc
je
aaa
pop
dec
test
push
adc
jg
pop
in
rol
add
add
test
stc
add
sar
enter
mov
sbb
test
add
add
inc
cwde
mov
fnsave
dec
add
std
mov
add
shl
sbb
add
mov
jnp
ins
xor
mov
sar
fwait
push
(bad)
jb
xlat
add
add
mov
or
cmp
mov
outs
push
movs
jae
mov
add
jnp
jae
aad
add
add
test
add
movs
xchg
repnz
stos
and
jmp
or
cmp
cmp
jge
mov
jae
add
add
push
push
cmps
jge
or
mov
adc
pop
test
and
push
aam
ins
lods
mov
add
add
cmp
push
(bad)
bound
jge
jmp
popf
or
mov
call
add
add
sub
sbb
mov
cld
lea
or
stos
adc
enter
add
dec
shr
fbstp
mov
mov
cmc
jno
mov
movs
pop
(bad)
add
add
push
popf
add
and
xchg
push
mov
pop
mov
add
add
lahf
push
mov
shl
mov
js
test
mov
xor
fldenv
or
add
add
and
es
add
sbb
shr
adc
jg
ins
rcl
jl
add
add
adc
jge
hlt
sar
add
(bad)
cmp
jbe
add
jb
stc
loope
or
add
add
push
pop
mul
cwde
add
ror
jne
movs
or
sbb
add
sbb
mov
add
imul
or
add
movs
jmp
nop
adc
(bad)
mov
jb
aad
out
add
add
jecxz
or
test
int3
xor
(bad)
hlt
inc
and
inc
js
or
xor
or
and
mov
mov
mov
add
aad
iret
ss
mov
enter
(bad)
pop
and
bound
es
mov
xchg
add
add
nop
and
ss
and
(bad)
aaa
cmp
cdq
bswap
or
adc
xchg
mov
inc
add
add
mov
mov
dec
adc
mov
mov
mov
add
rol
add
add
lock
clc
call
or
or
inc
sbb
pop
inc
dec
leave
ret
nop
movs
mov
and
add
add
mov
jl
xor
jl
jmp
ret
xchg
cld
icebp
and
add
neg
daa
push
mov
stc
sbb
test
test
mov
mov
fadd
xchg
add
add
loopne
movs
out
sbb
out
or
movs
pop
mov
jne
cmp
ret
retf
pop
push
dec
mov
out
add
add
mov
jbe
push
repnz
pop
mov
cmp
or
and
mov
dec
ins
sbb
add
add
adc
pop
and
shl
pop
and
shl
pop
and
ror
sub
nop
or
add
add
mov
mov
adc
mov
dec
cmp
nop
clc
push
mov
jo
add
add
sub
clc
ins
mov
add
(bad)
stc
push
sbb
enter
jae
add
add
mov
and
or
sbb
fstp
scas
jmp
mov
in
sahf
or
mov
add
add
jns
cmp
fnstcw
mov
push
mov
je
push
xchg
shl
push
xchg
shl
add
add
jl
sub
jecxz
movs
adc
nop
xor
mov
adc
lods
jmp
nop
mov
inc
mov
in
mov
add
and
or
repnz
add
push
inc
das
neg
xlat
sbb
(bad)
mov
add
sub
dec
cmp
retf
fcom
add
dec
jmp
popa
or
test
push
int3
sub
mov
pushf
imul
xchg
shr
sub
push
sbb
cld
push
loope
cdq
adc
push
mov
xor
rol
and
add
jne
sub
lock
loopne
fnstenv
lock
loopne
(bad)
(bad)
clc
cmp
ret
ror
add
add
cdq
in
js
cmc
or
pop
imul
jle
add
push
in
sub
dec
pop
jmp
pop
sub
test
shr
push
outs
sub
mov
std
inc
leave
push
or
inc
call
mov
xchg
add
add
mov
sbb
dec
shr
and
fimul
push
repnz
ins
add
in
mov
leave
inc
mov
add
add
inc
add
cld
cmp
xor
jno
pop
cmp
or
xchg
dec
jmp
add
dec
cmp
inc
imul
jno
mov
out
test
add
add
je
pop
jmp
and
or
rcr
add
xor
add
add
ins
sub
je
adc
inc
and
retf
xchg
jb
lock
adc
xchg
sbb
add
adc
sti
shl
add
add
adc
ror
pop
xor
jne
sub
sub
in
or
retf
mov
(bad)
(bad)
loop
lsl
xor
sbb
inc
add
jo
nop
ss
je
jnp
or
add
add
shr
pop
or
add
mov
jl
dec
or
std
fs
push
scas
iret
jo
push
add
int3
add
add
cwde
dec
pop
ins
(bad)
in
cwde
inc
push
test
jo
pop
or
hlt
inc
xor
push
pop
cdq
stos
sub
add
add
fs
push
or
call
add
mov
or
add
jmp
imul
add
sbb
add
add
mov
cmp
mov
cs
call
in
add
add
sub
repnz
mov
aaa
loopne
addr16
retf
cmp
in
xor
enter
dec
add
add
mov
and
push
xchg
aas
xchg
ret
or
fistp
pop
jl
daa
(bad)
fst
push
shrd
add
add
and
dec
loop
ins
or
retf
push
adc
test
or
adc
sub
test
add
add
and
hlt
pop
add
and
mov
sbb
and
add
add
rcl
iret
imul
push
cmp
pop
mov
sub
aad
add
add
inc
add
shr
loop
jne
aas
cmp
mov
nop
test
add
add
nop
test
push
test
sub
inc
movs
retf
pop
or
xor
push
fs
add
add
cs
dec
retf
and
dec
jnp
sub
jne
pop
dec
add
test
mov
add
add
or
adc
jnp
pop
lea
loopne
dec
adc
cs
sbb
clts
sldt
add
montmul
cmps
inc
add
jmp
fisubr
dec
enter
mov
jmp
sub
inc
add
add
rol
adc
mov
in
add
or
lock
and
pop
sar
and
sar
das
sar
adc
test
and
repz
mov
sub
test
push
nop
aam
mov
mov
sbb
mov
out
jbe
add
push
add
arpl
adc
loopne
sbb
and
inc
and
mov
ficomp
sbb
pop
inc
sti
sub
add
add
adc
sub
push
sub
mov
and
daa
(bad)
data16
cdq
aad
lea
add
popf
cld
sub
and
push
adc
pop
shr
jno
xchg
push
cmc
xchg
movs
pop
inc
daa
add
add
pushf
xor
cmp
or
aas
xor
test
push
add
inc
jbe
jb
jo
add
add
test
mov
clc
dec
mov
lods
shl
mov
mov
adc
add
inc
test
(bad)
adc
mov
adc
shr
push
cmps
pop
(bad)
rol
and
adc
add
js
jbe
jb
sbb
int
shl
or
sub
xchg
sub
inc
add
add
lds
adc
mov
jnp
jl
push
mov
push
adc
mov
push
push
test
jns
add
add
rcr
jge
out
retf
adc
out
jae
dec
leave
cmps
pop
sbb
or
mov
sbb
add
pusha
gs
out
iret
int
mov
aad
cdq
cmps
cld
cli
pop
ja
sahf
les
stc
das
les
jp
add
add
int
ss
adc
push
int3
sbb
cmp
pop
inc
xchg
movs
pop
sub
lods
inc
mov
cmp
add
add
push
xchg
es
sbb
out
movs
jge
jmp
push
push
aam
dec
add
add
stos
sub
or
xchg
daa
sbb
call
enter
dec
mov
push
mov
imul
(bad)
push
dec
clc
out
sub
push
das
adc
xchg
and
sub
xor
jmp
and
add
add
push
mov
inc
daa
fst
popf
fst
jmp
pusha
test
ret
daa
pusha
add
add
pop
pop
and
imul
pop
(bad)
gs
mov
and
inc
repnz
loopne
cmp
fwait
xlat
movs
or
add
add
repz
jg
les
aas
inc
leave
movs
jmp
imul
push
mov
pop
jnp
adc
add
add
push
add
rcl
cmps
jp
xchg
jno
inc
(bad)
outs
stc
mov
jae
pop
mov
jns
rol
add
add
push
push
jo
test
aas
push
adc
sub
adc
imul
add
retf
adc
jbe
sbb
or
(bad)
jne
loopne
retf
xchg
adc
mov
cmp
mov
mov
sub
add
nop
push
popa
ss
push
in
add
mov
add
popf
mov
shl
add
add
add
sbb
dec
lods
fdivr
test
or
mov
out
add
add
jns
sub
repnz
nop
imul
fucomip
out
mov
movs
push
inc
iret
cmps
pop
pop
lods
fmul
push
xor
add
add
push
inc
xor
fadd
mov
stc
dec
jns
jp
xchg
dec
xchg
jne
jmp
and
add
add
cdq
dec
test
pop
jg
mov
pop
in
shr
jmp
and
lock
ins
inc
or
loopne
xor
add
add
int3
adc
aaa
mov
hlt
jns
or
stc
ins
inc
xchg
and
adc
adc
mov
add
add
imul
dec
out
les
int3
xor
push
retf
stos
rcl
stos
cmps
pop
imul
cld
pop
jmp
aad
add
add
inc
sub
push
pcmpgtb
or
jmp
push
jl
iret
call
aaa
add
add
and
sub
retf
inc
stc
mov
xor
mov
lea
aaa
outs
add
imul
xor
add
add
movs
adc
xchg
xor
jl
mov
and
cmps
push
sub
and
pop
cmc
add
add
retf
pop
pop
mov
dec
into
jbe
into
jae
stos
into
xchg
push
xchg
sar
or
jmp
and
xchg
add
add
inc
ror
jmp
test
jnp
cld
lea
or
ins
inc
scas
xchg
add
add
pushf
adc
sub
xchg
sub
sub
jmp
xchg
adc
pop
mov
sub
lock
jle
pusha
retf
and
add
add
push
fisub
repnz
ja
adc
pusha
test
rol
dec
mov
rol
add
fsubr
(bad)
das
hlt
fs
xchg
ja
and
clc
cmps
in
in
jle
cmp
jb
xor
add
add
jae
lea
fdivr
sub
sub
stc
ror
cdq
jmp
dec
pop
ds
add
add
pop
mov
call
jne
sub
mov
pop
sub
in
shl
cmp
add
add
test
pop
push
or
nop
dec
call
repnz
ss
push
xchg
cmp
popf
pop
add
add
mov
mov
jmp
repz
sbb
xor
jg
inc
mov
cs
inc
push
mov
add
add
xor
ss
retf
ss
mov
mov
movs
imul
jno
or
jbe
add
gs
repz
add
add
dec
or
leave
push
adc
inc
and
jae
(bad)
cdq
retf
adc
lods
out
mov
add
add
or
jmp
mov
push
push
pusha
cmps
or
dec
sub
ins
mov
stc
in
jp
clc
mov
ins
(bad)
movs
xchg
stc
xchg
add
loopne
scas
mov
xchg
or
fisubr
std
add
add
lds
sub
aas
cli
lds
adc
mov
push
adc
pop
lock
push
shl
pop
out
sub
add
add
in
loop
pushf
jl
push
cmp
xchg
pop
enter
fsubr
dec
jp
jge
lods
enter
add
add
mov
add
adc
mov
stc
lods
cmps
mul
add
add
cmp
das
jle
jne
imul
jb
(bad)
fwait
cmp
popa
or
add
push
add
add
inc
mov
mov
xchg
imul
das
xchg
scas
xchg
adc
ss
jno
mov
retf
and
add
add
xor
add
movs
shr
retf
mov
cmp
pop
push
lods
test
pop
add
add
cmp
mov
jge
cmps
fild
fcom
xor
xchg
add
add
add
add
sbb
popf
xor
cmp
sbb
jmp
stc
ds
mul
adc
mov
add
add
inc
aad
sti
leave
enter
pop
xchg
sbb
fadd
mov
inc
pop
daa
mov
je
mov
add
add
sbb
not
daa
push
mov
cs
add
push
add
add
push
jg
je
mov
cmc
cmps
fstp
bound
lahf
loope
pop
xchg
jo
mov
jbe
sub
add
xlat
and
popf
lds
cs
hlt
jge
cdq
mov
dec
add
add
add
into
pop
je
or
jae
xor
mov
(bad)
cmps
and
loopne
xchg
out
push
inc
mov
cmps
add
add
jae
adc
enter
fldpi
je
push
test
push
loop
inc
xchg
adc
leave
pop
pop
repnz
push
add
add
and
fs
jns
jmp
cdq
nop
inc
xchg
sub
in
jmp
scas
or
shl
xchg
test
add
jge
mov
pop
mov
jmp
push
les
dec
pop
sub
(bad)
js
mov
push
mov
rcr
dec
mov
pop
mov
setne
movs
je
jmp
in
sub
add
add
fidivr
rcr
jg
out
pop
jecxz
push
xchg
jae
clc
xchg
ds
push
add
rcr
lea
out
jge
and
enter
inc
adc
aas
ret
jg
inc
adc
and
add
add
or
mov
ficomp
stc
dec
sbb
lahf
mov
imul
jb
mov
add
cmps
out
in
repnz
lods
and
jno
or
aas
icebp
lods
push
shr
jmp
lods
popf
xlat
mov
add
add
es
fadd
cmps
ins
push
mov
mov
loopne
je
and
xchg
add
add
data16
sub
inc
add
add
adc
aas
dec
test
jg
lahf
jb
adc
sub
and
inc
add
add
cmp
fidivr
inc
xchg
outs
fcomp
inc
xchg
xchg
mov
outs
adc
mov
inc
jmp
hlt
clc
and
push
ret
mov
scas
xor
scas
repz
dec
mov
jo
xor
add
add
or
rcl
stc
daa
cmp
cwde
add
add
adc
rol
add
add
mov
push
add
out
adc
sbb
rcl
sub
cmp
sub
add
add
lahf
mov
into
fisub
addr16
sbb
sbb
fbld
mov
and
enter
and
add
add
sub
hlt
cmp
les
loop
jns
xchg
in
inc
fistp
daa
inc
bound
add
add
fmul
xor
jae
cmps
lahf
jmp
fcom
fs
add
add
sub
push
scas
xor
out
sub
xor
inc
test
push
mov
aam
add
add
sub
pop
jne
pop
inc
outs
xor
adc
sub
and
cmp
cs
clc
add
add
sub
sub
and
pop
scas
outs
in
inc
xchg
xchg
bound
pop
jae
push
cmp
repnz
add
mov
or
mov
or
out
imul
or
mov
add
add
cli
and
cmp
scas
cld
outs
ror
xor
sub
jmp
add
add
xchg
lock
xor
fucomp
bound
sbb
push
shl
jmp
jge
add
add
push
mov
or
adc
inc
sbb
cli
sub
sub
adc
cmps
(bad)
push
and
sub
add
adc
addr16
jno
push
mov
bswap
xor
mov
js
push
ret
and
ja
mov
hlt
mov
jno
test
(bad)
add
add
sub
sub
add
test
jmp
xchg
sbb
mov
scas
pop
push
jp
in
in
stos
les
rcr
add
add
or
inc
cmp
out
(bad)
jns
or
sti
pop
popf
rcr
push
add
add
in
jge
and
(bad)
retf
aad
pusha
inc
adc
adc
in
in
jnp
and
nop
or
test
cmp
add
add
fidivr
dec
lds
loope
hlt
cmp
nop
movs
fs
lahf
into
loopne
or
add
lahf
gs
mov
ja
add
push
lds
stos
sbb
inc
shl
add
add
inc
xchg
les
cmp
jb
or
rcr
inc
ret
pop
sub
jmp
jmp
add
call
mov
or
jmp
adc
sub
fmul
ret
int3
adc
add
add
pusha
gs
fnsave
sbb
or
and
or
call
mov
fwait
inc
sbb
test
push
or
hlt
ret
push
add
push
dec
stos
repnz
or
sub
and
pop
mov
loope
push
std
mov
add
add
sbb
sub
ret
sbb
outs
and
(bad)
push
and
dec
push
add
add
call
sti
loopne
pusha
cdq
pop
pop
mov
jmp
retf
ror
add
add
add
ret
cmps
push
jmp
jge
mov
jmp
and
popa
adc
add
add
int3
lds
mov
movs
lahf
jecxz
mov
sbb
push
sub
xchg
push
add
add
xchg
out
push
push
inc
mov
and
xor
scas
pop
repz
jne
cmp
adc
je
gs
punpckhbw
or
repz
dec
(bad)
push
push
inc
cwde
mov
not
add
add
add
test
xchg
mov
sub
or
std
add
add
add
div
cs
mov
(bad)
cmps
daa
shl
les
loopne
ss
add
add
inc
movs
jle
cmp
test
dec
push
aas
xor
push
cmp
xor
ins
or
add
sbb
aas
add
add
cmp
mov
fsub
sub
dec
add
jge
xchg
in
shr
mov
int3
add
add
push
fs
shr
ror
jne
ret
fsub
stc
ja
int3
mov
jl
adc
icebp
ret
sub
add
add
fadd
pop
sbb
cli
xor
adc
divps
and
loopne
and
add
add
dec
enter
(bad)
retf
or
or
shr
or
push
pop
add
inc
loopne
enter
add
add
xor
cwde
xchg
add
sahf
mov
loop
shl
mov
das
clc
sbb
add
add
cmp
sub
mov
xor
mov
xchg
repz
adc
pop
pop
jmp
add
add
or
je
cmp
dec
cmp
jnp
std
pop
ror
das
mov
movups
fistp
test
mov
add
xor
xchg
and
sbb
and
xor
push
fwait
mov
fcomp
adc
add
sar
(bad)
sub
sub
or
dec
sar
pusha
icebp
push
jl
mov
cmp
outs
push
add
add
sbb
fild
dec
stos
imul
(bad)
jge
inc
push
movs
cmp
xor
mov
add
fild
add
or
or
pop
fstp
imul
pop
add
call
add
add
or
adc
push
(bad)
fcomp
sub
outs
lea
jmp
add
add
pop
cmp
jnp
wrmsr
(bad)
popa
mov
sar
push
push
adc
rol
add
add
sbb
mov
out
jmp
mov
shl
and
add
mov
add
add
dec
push
sub
jle
cmp
loopne
sub
pop
mov
push
or
add
add
mov
mov
mov
sbb
add
movs
dec
adc
gs
add
iret
adc
ror
sbb
lods
inc
ret
dec
pushf
push
xchg
cmc
add
add
jle
dec
es
dec
mov
sbb
push
bound
(bad)
xchg
stos
sbb
cmc
add
add
jge
add
stos
call
cmp
dec
fidiv
and
sbb
add
add
inc
cmc
in
sub
(bad)
cld
sub
setb
mov
pop
in
inc
movs
mov
sti
mov
add
add
jmp
adc
loope
mov
(bad)
lock
add
and
in
push
mov
cmc
mov
add
call
mov
fst
mov
out
ret
aad
sbb
adc
push
loope
loop
add
add
iret
movs
stos
xor
enter
xlat
jg
in
fstp
mov
sub
adc
adc
dec
add
add
pop
and
test
sub
shr
pop
sbb
jl
adc
or
sbb
jecxz
add
add
cmp
jmp
fldcw
pop
icebp
sbb
sub
movs
cmp
adc
shr
add
add
sub
mov
fidivr
ror
not
push
jne
mov
add
(bad)
fwait
inc
adc
mov
add
jecxz
xchg
out
ins
jo
mov
mov
mov
inc
cld
mov
sub
add
add
jp
jne
(bad)
pop
push
push
mov
sub
pop
out
mov
cwde
fdiv
dec
pop
nop
fsubr
xchg
xchg
lahf
call
pop
jl
addr16
cmp
jae
xchg
dec
lea
nop
aam
mov
add
add
jl
and
jmp
xchg
jbe
xor
mov
sub
dec
pushf
sbb
inc
lea
add
mov
dec
stos
pop
dec
push
push
mov
and
lods
sub
push
sub
add
sub
rol
cmp
xchg
ja
xchg
test
mov
xor
and
cdq
add
add
shr
inc
add
sbb
mov
pop
icebp
sti
test
scas
test
in
or
add
fdivr
cmp
int3
mov
push
mov
sub
mov
inc
and
add
jmp
aad
jne
and
cli
retf
hlt
bnd
mov
mov
mov
mov
popf
(bad)
push
inc
add
add
popa
jmp
sbb
sub
and
push
xchg
cmp
pushf
cli
arpl
xor
popf
xlat
mov
cmp
jge
mov
add
adc
inc
or
push
sar
sub
dec
mov
add
lods
inc
sub
dec
mov
jle
add
add
or
mov
arpl
sbb
int
jge
nop
iretw
dec
xor
in
into
pop
add
add
adc
xor
jo
popa
dec
lock
mov
inc
out
mov
fidivr
add
add
jg
enter
shl
pop
sbb
rcr
idiv
or
add
inc
add
add
cmovs
loop
dec
rdtsc
(bad)
mov
or
into
test
jo
shr
inc
add
add
add
pop
push
xlat
mov
repz
das
pop
jecxz
xor
call
lea
add
add
iret
push
mov
adc
pop
int
pusha
sub
in
shld
add
test
add
sub
addr16
mov
sar
cmps
inc
adc
dec
mov
sbb
inc
add
add
adc
cmps
sub
iret
hlt
cld
and
fidiv
push
push
mov
add
dec
dec
push
jg
cmp
pop
mov
(bad)
jbe
jo
inc
push
and
add
add
shl
xlat
movs
mov
daa
aam
lods
stc
pusha
pop
or
jne
js
popf
fs
ror
ror
add
add
xchg
out
test
pop
adc
and
dec
sbb
das
jbe
popa
push
mov
jnp
inc
jnp
add
add
adc
test
cli
push
movs
adc
fcom
ret
jnp
repnz
js
pop
or
add
add
aam
std
in
xor
test
out
iret
jecxz
repnz
not
adc
sbb
pop
adc
add
add
(bad)
cmp
add
pop
pop
push
inc
cld
cmp
ss
mov
in
ret
in
add
add
out
jecxz
and
adc
aam
das
xchg
pop
jns
dec
push
mov
cld
dec
push
mov
or
add
add
cs
aam
div
mov
xor
push
mov
repz
(bad)
and
cmp
add
or
inc
mov
rcr
cmp
add
cmp
test
lock
sub
add
add
adc
stos
xchg
lea
daa
(bad)
sbb
stc
add
pop
repz
push
add
adc
add
add
movs
call
in
jp
mov
das
sbb
sahf
aas
inc
add
add
inc
clc
or
or
les
daa
pop
addr16
ror
cdq
clc
pop
cmps
adc
add
add
rol
inc
out
imul
addr16
jge
sub
iret
sub
and
aad
add
add
push
push
mov
ja
dec
sub
sti
loopne
ja
ins
cmp
jl
mov
xchg
aas
pop
mov
jl
icebp
adc
add
add
dec
bound
adc
daa
in
out
das
mov
(bad)
jmp
cmp
shl
inc
clc
outs
add
add
mov
les
retf
or
nop
sub
loopne
push
add
test
ja
add
push
sti
das
push
mov
xor
xchg
push
cli
rcl
or
push
add
add
(bad)
nop
es
mov
adc
(bad)
idiv
les
jg
and
in
add
add
mov
lahf
fnstenv
lea
out
pop
test
sar
dec
push
mov
lock
xor
add
enter
cld
mov
cdq
test
inc
iret
inc
xchg
icebp
ret
sti
sbb
jmp
push
rcl
imul
inc
rcr
fwait
mov
jns
pop
cmp
(bad)
mov
mov
and
add
add
call
and
mov
cwde
pop
xchg
iret
and
xchg
cwde
add
add
es
nop
lea
ja
push
xor
sub
pop
mov
or
or
add
add
stos
ror
and
push
mov
adc
mov
test
cmp
or
add
add
imul
add
cmp
mov
mov
(bad)
ins
or
xor
data16
add
aas
sub
loop
mov
aad
pop
adc
dec
dec
pop
adc
call
inc
push
and
add
cs
retf
mov
(bad)
cmp
sbb
jg
cdq
mov
outs
adc
cmp
add
lods
popf
icebp
push
pop
or
loope
or
add
inc
jbe
leave
rcl
dec
add
add
mov
or
enter
sbb
xchg
inc
sub
rol
call
add
mov
adc
xor
stos
outs
std
sbb
or
bndldx
mov
sbb
add
add
scas
loope
add
sti
repz
add
sub
(bad)
mov
pop
jle
sahf
push
(bad)
retf
dec
or
loope
add
add
jbe
xor
je
nop
inc
sub
inc
and
unpcklps
(bad)
std
fst
jmp
dec
adc
inc
and
add
add
leave
xor
mov
adc
sub
cmp
call
add
add
fsub
fdiv
cli
ficom
dec
jmp
inc
mov
(bad)
hlt
lea
xchg
add
add
cmp
adc
mov
enter
ret
lock
nop
push
ja
add
add
add
cwde
sub
xchg
push
push
and
stos
xlat
xor
push
jno
xor
add
add
(bad)
into
out
sub
jmp
cmp
retf
pop
call
sub
imul
jle
mov
fild
or
inc
jmp
das
neg
pop
push
sub
xor
loopne
or
cli
cmp
add
add
pop
in
jmp
movs
in
mov
mov
xor
std
xchg
daa
daa
adc
jns
daa
or
add
add
sub
lock
js
adc
je
push
add
pop
and
dec
xor
add
add
inc
mov
mov
cmp
or
xor
imul
aam
adc
jb
add
add
adc
inc
mov
add
mov
mov
cmp
test
cmp
jmp
(bad)
or
jae
fs
ret
in
movs
nop
cmps
push
aad
adc
and
das
sahf
mov
push
mov
xchg
hlt
mov
leave
mov
mov
pop
rcl
lock
add
add
(bad)
dec
push
push
mov
xchg
push
push
or
sbb
jmp
ror
pop
scas
xor
sub
pusha
or
adc
or
call
add
add
mov
out
int
loop
ret
rcr
push
leave
int3
in
pop
test
std
and
add
add
jge
dec
push
push
push
ins
(bad)
cmp
and
popa
sub
add
add
in
fidivr
mov
sub
jb
jae
enter
and
dec
enter
mov
add
and
push
and
jmp
inc
jno
fdiv
lea
sub
shl
rol
add
add
test
nop
xor
xor
int3
jmp
ficom
leave
xchg
xchg
add
add
int
cwde
and
aam
enter
or
std
ret
je
adc
mov
adc
sub
add
add
pushf
(bad)
add
inc
sbb
lock
enter
inc
daa
push
je
adc
sub
or
add
add
and
icebp
retf
push
repnz
ret
cmps
mov
imul
mov
cmp
add
test
retf
xchg
mov
dec
in
sub
cld
xchg
or
mov
or
add
add
and
shl
das
cmp
loop
out
popf
xor
fcmovnb
cld
sub
mov
mov
add
add
ror
xchg
add
mov
scas
ja
mov
push
add
loop
lock
xor
xchg
add
outs
jno
add
add
adc
je
div
jge
xchg
ret
adc
adc
mov
xchg
loope
add
add
jg
ret
sbb
call
push
mov
push
pop
mov
sub
add
add
cmp
enter
jne
je
out
xor
sub
loop
clc
in
cs
add
add
mov
pop
xchg
cvtps2pd
popf
in
sub
cmp
and
cld
add
add
push
xor
lock
retf
xor
les
retf
and
dec
in
(bad)
lock
adc
push
adc
daa
or
add
add
xchg
xchg
cmps
mov
xchg
sbb
nop
sub
mov
sbb
popf
aam
ret
add
adc
out
xchg
sub
cs
fs
lea
adc
inc
cmp
pop
out
xor
add
add
scas
lods
push
(bad)
lds
sti
dec
jmp
daa
push
rol
call
xchg
cmp
add
add
daa
dec
xchg
inc
test
cmp
repnz
adc
add
fmul
jns
out
add
fdiv
inc
xchg
xor
mov
icebp
gs
and
stc
dec
sbb
pop
mov
cmps
stos
mov
test
push
pop
inc
push
mov
daa
pop
daa
push
rcr
mov
adc
dec
mov
into
out
mov
add
add
jns
adc
sbb
popa
push
and
adc
loop
jns
pop
adc
dec
mov
mov
add
and
loop
dec
ja
adc
pop
sub
arpl
or
pop
xor
adc
jne
push
mov
or
cld
sar
or
aam
pop
inc
jl
call
sahf
xor
pusha
mov
xchg
add
add
repnz
sub
jmp
int
(bad)
sub
cdq
pop
jl
dec
popa
dec
pop
test
add
add
add
fwait
sbb
loopne
xor
inc
(bad)
das
and
xchg
in
cmps
mov
add
jne
sbb
and
jle
cmp
cli
jecxz
push
jmp
jecxz
mov
push
sbb
add
add
mov
(bad)
xchg
pushf
mov
scas
jb
loopne
out
bswap
hlt
xchg
sub
nop
fistp
out
add
add
sbb
pop
lods
inc
je
push
out
in
sti
dec
inc
mov
sar
enter
inc
add
add
clc
sbb
and
sbb
sbb
jecxz
xchg
inc
sti
push
dec
jo
inc
or
adc
add
adc
xor
sub
ins
popa
lds
fdivr
inc
out
ret
push
mov
cmc
sub
dec
pop
xchg
sbb
ror
aad
(bad)
icebp
push
in
dec
xlat
lds
enter
add
cmp
sbb
or
test
xor
sub
fist
or
xchg
mov
add
int3
nop
xor
enter
dec
xchg
loop
not
movs
push
das
je
xor
jbe
add
cli
fs
stc
or
dec
mov
push
push
dec
and
mov
js
inc
add
add
mov
jb
cmp
fcomp
xchg
xor
pushf
(bad)
mov
(bad)
stos
jmp
in
add
add
call
xchg
add
sbb
cmp
sub
push
add
add
int3
js
cmps
ret
pushf
jmp
stos
inc
sbb
adc
mov
inc
sbb
add
(bad)
aad
mov
xchg
leave
in
mov
pop
leave
push
rol
add
mov
jbe
add
add
loop
xchg
sbb
es
sbb
and
ret
cmp
dec
mov
add
sbb
mov
add
sub
ret
daa
mov
shl
pop
dec
add
or
add
in
add
jp
test
add
add
jne
int
ds
jb
cdq
retf
xor
inc
pop
adc
push
mov
mov
add
add
or
jmp
in
inc
inc
clc
gs
bound
or
dec
repz
lahf
and
sbb
push
push
add
add
je
mov
mov
fstp
(bad)
sub
loope
hlt
or
loop
mov
(bad)
add
sbb
cli
dec
(bad)
clc
leave
bound
dec
mov
pop
arpl
and
pop
inc
and
push
cmps
and
stos
mov
add
add
or
leave
inc
mov
out
fs
inc
retf
loop
aad
fsubr
neg
dec
add
add
pop
cmp
cdq
scas
dec
and
add
dec
sub
dec
push
jmp
xchg
mov
mov
mov
sub
add
add
test
lock
fs
mov
push
bound
fist
and
xchg
xor
sbb
add
add
test
pop
xor
xchg
test
retf
adc
out
arpl
shl
and
pusha
add
add
div
jl
mov
(bad)
jno
pop
in
je
stc
push
test
iret
gs
xchg
or
add
add
jne
add
sub
ins
ror
mov
int
lds
test
test
add
add
push
loop
xchg
mov
mov
bound
mov
and
sub
loopne
inc
xor
add
fbld
sub
push
mov
(bad)
and
adc
lods
add
add
jge
push
dec
or
(bad)
mov
or
and
(bad)
push
pop
addr16
cmp
jnp
add
add
lods
pop
fild
jne
ja
or
sub
bound
sbb
push
add
add
sub
push
push
hlt
push
jns
or
je
adc
lods
xor
mov
jnp
add
add
dec
adc
mul
mov
add
daa
std
cli
int
or
or
sbb
add
add
xlat
xchg
and
jbe
xchg
adc
mov
sub
jnp
call
add
repnz
dec
cmp
xchg
test
push
in
mov
shr
xchg
mov
adc
add
add
aas
mov
test
lock
in
pop
loop
call
imul
add
add
mov
mov
je
int
aad
mov
outs
lock
mov
test
lods
add
add
dec
adc
sub
movs
lods
je
adc
and
adc
push
pop
and
inc
cli
inc
sbb
add
add
and
mov
lea
inc
icebp
test
in
aas
and
pop
push
add
xor
stc
pusha
jle
nop
das
dec
cmps
outs
sub
mov
hlt
or
sub
add
pop
retf
in
aam
addr16
xchg
or
arpl
jmp
(bad)
movs
jns
test
fs
add
add
movs
loope
movs
bound
repnz
nop
cmp
lods
pop
sub
sub
sbb
cmp
and
jmp
add
add
mov
test
test
xchg
mov
fs
xchg
sbb
mov
jmp
fld
add
add
bound
ficom
lods
out
sub
xlat
cli
ja
mul
inc
adc
cwde
xchg
adc
add
add
aas
in
xchg
scas
inc
sub
imul
ds
jnp
jnp
mov
dec
repz
in
dec
mov
pop
mov
hlt
sbb
retf
ror
sub
adc
and
dec
add
add
or
xor
mov
inc
pop
or
cdq
bound
and
xchg
addr16
in
ins
or
xchg
add
add
iret
cmp
pop
ins
sub
cs
mov
mov
xchg
jns
sbb
mov
rcr
add
add
mov
jo
push
mov
ror
and
ror
enter
cwde
lea
mov
add
imul
into
aam
add
test
cdq
data16
jo
fmul
jmp
test
dec
adc
add
add
stos
pop
inc
movs
cmp
(bad)
into
or
sub
mov
sub
into
cmp
pop
into
xchg
lea
add
add
jo
xchg
(bad)
adc
mov
cmp
daa
dec
pop
cli
xor
retf
les
cmp
and
mov
add
add
sub
adc
cli
and
jmp
not
fwait
pop
in
push
adc
imul
add
add
aad
out
aad
jo
push
lods
pop
xor
push
xchg
rol
mov
je
adc
sti
pusha
dec
popa
out
add
add
mov
xor
cwde
fs
adc
sub
cwde
mov
sub
stos
fisub
add
add
push
cld
cmp
retf
or
lods
sub
clc
mov
and
adc
and
add
add
test
add
cs
rcl
adc
ja
mov
lahf
(bad)
jg
(bad)
(bad)
push
dec
xlat
and
add
add
jmp
inc
in
dec
fnstenv
sbb
add
adc
repnz
cmp
cmp
push
mov
add
jl
imul
pand
or
adc
fld
test
js
xor
aaa
call
adc
push
jmp
add
test
add
add
lea
popf
xchg
xor
repnz
hlt
sub
cmp
jge
cmps
movs
test
scas
and
add
add
mov
mov
jp
nop
cmps
mov
js
movs
push
int3
xor
mov
add
add
and
jno
or
cmp
fisubr
push
xor
pop
cmps
push
add
iret
test
pop
fild
pop
sbb
mov
enter
or
test
add
jg
mov
test
pushf
cs
in
enter
pop
add
push
nop
lahf
aam
movs
bound
pushf
adc
or
inc
scas
js
test
dec
loop
adc
dec
rol
mov
adc
and
add
nop
push
and
std
push
sbb
push
inc
and
pushf
(bad)
mov
add
lgs
cwde
test
mov
cmps
xor
xchg
jne
std
popf
pop
cs
add
add
or
xchg
ficom
mov
inc
mov
sub
and
iret
les
cli
mov
xchg
paddq
loope
add
add
add
addr16
jmp
mov
mov
gs
mov
test
push
and
sbb
dec
daa
add
add
ds
inc
sbb
jo
mov
pop
test
sahf
arpl
retf
mov
fwait
sub
enter
add
add
fwait
test
or
loop
adc
sbb
push
fnstcw
dec
cmps
in
outs
and
pop
call
jp
add
add
mov
(bad)
movs
retf
sub
aas
clc
push
ret
or
adc
jns
test
lds
add
mov
out
push
fcompp
outs
gs
(bad)
lds
movs
(bad)
adc
dec
pop
and
push
arpl
dec
add
inc
add
pop
daa
loop
pusha
xlat
mov
scas
mov
scas
adc
add
adc
add
cmps
xchg
cmp
test
fmul
sub
mov
add
add
jmp
jmp
push
retf
pop
inc
or
repz
out
inc
cmps
cmps
mov
fadd
add
add
or
mov
int
jno
ins
push
xchg
mov
cs
loop
adc
sbb
add
cmp
pop
adc
mov
add
mov
stos
or
gs
or
jg
sub
add
add
mov
and
in
jns
xchg
push
mov
adc
mov
imul
add
add
dec
pushf
lahf
(bad)
shr
test
xchg
mov
cmp
add
test
add
add
push
jo
fdiv
adc
lods
fadd
add
xchg
mov
mov
mov
xchg
xchg
jne
in
push
mov
fwait
imul
jmp
cmp
cmp
add
nop
ins
test
dec
mov
mov
fadd
mov
adc
cmp
add
test
gs
(bad)
mov
adc
or
mov
(bad)
and
clc
add
add
sahf
popf
dec
inc
mov
mov
sub
push
fninit
daa
pop
dec
jmp
popf
cmp
add
add
inc
mov
ret
call
pop
push
and
add
arpl
cmps
aaa
inc
fld
fs
dec
add
add
sub
xchg
call
daa
mov
mov
push
test
push
mov
jo
add
add
rcr
mov
and
cld
enter
adc
fstp
xchg
(bad)
mov
mov
add
jmp
xchg
fst
sbb
daa
xchg
and
xchg
ret
nop
mov
pop
jmp
add
add
jo
and
and
add
daa
xchg
mov
jmp
sub
inc
sahf
adc
js
inc
sbb
add
add
xchg
push
push
fs
lods
mov
aas
add
inc
add
inc
add
and
inc
add
add
add
add
add
add
add
dec
push
add
and
ds
es
inc
nop
inc
inc
mov
popa
sahf
add
add
inc
or
fwait
or
adc
add
(bad)
ret
mov
push
dec
or
add
add
out
or
or
or
and
or
adc
adc
adc
push
mov
pusha
fs
je
cmp
leave
shl
pop
ror
dec
mov
and
add
add
mov
pop
xchg
inc
dec
dec
push
retf
retf
leave
aas
sbb
cmp
jae
push
fld
add
add
repnz
fsubp
hlt
stos
bound
pushf
inc
dec
or
jnp
or
adc
dec
sbb
add
add
xchg
stos
retf
mov
add
test
mov
sub
neg
jmp
scas
sub
adc
add
leave
les
aas
add
jns
cld
mov
jge
pop
enter
mov
inc
inc
ja
cdq
push
hlt
add
add
push
sar
add
cmp
push
or
xchg
and
mov
xor
adc
and
add
add
int3
scas
call
aaa
je
cdq
add
adc
sbb
or
jp
les
add
add
movs
and
or
or
test
les
aad
call
or
add
adc
add
push
xor
inc
or
mov
or
ret
xchg
ffree
movs
aam
xor
pop
xchg
sbb
add
add
mov
mov
inc
ins
ficom
push
or
pop
push
dec
add
inc
fidiv
rol
aam
add
add
xchg
loop
(bad)
inc
call
mov
rcl
jmp
pusha
and
loope
add
add
mov
in
adc
dec
ja
push
dec
inc
ss
(bad)
sbb
jb
aam
push
add
add
out
push
inc
push
pop
mov
aas
int
and
gs
cmp
xchg
and
jbe
xor
cli
add
add
lods
xor
mov
mov
fs
inc
inc
mov
mov
mov
add
add
fwait
or
sbb
neg
das
mov
sub
(bad)
or
push
js
add
add
xlat
test
fsubr
mov
daa
xor
push
ja
sti
in
add
add
xchg
daa
rcl
xchg
xchg
out
push
ror
inc
shr
dec
sahf
push
add
mov
mov
adc
and
mov
call
bound
test
inc
lea
add
add
pop
sub
adc
or
xchg
and
add
(bad)
in
mov
and
dec
jae
add
add
int
or
or
jmp
push
inc
icebp
dec
dec
and
push
adc
jo
adc
add
add
and
cmp
dec
xchg
ins
inc
test
sbb
cmp
pop
push
xchg
push
nop
or
add
add
adc
pop
pop
or
push
mov
add
dec
hlt
push
xchg
add
jo
add
add
jge
push
or
xchg
xchg
jle
xchg
push
push
xchg
fwait
lods
loope
add
add
sub
and
outs
xor
sub
mov
mov
add
add
test
imul
es
mov
adc
stc
sub
xchg
dec
cdq
add
or
lock
shl
add
jno
not
adc
stos
adc
cmp
cmp
mov
test
cmps
pop
mov
in
cmp
ror
daa
jne
mov
inc
dec
xchg
inc
dec
jge
lahf
add
add
and
sbb
rcr
hlt
mov
mov
pop
mov
daa
pop
test
mov
xchg
call
jnp
cmp
fsubr
fadd
xchg
stos
movs
push
cmp
add
add
push
inc
or
imul
sbb
mov
or
push
add
add
in
je
xchg
cmp
ficomp
stc
ja
shl
push
loopne
push
les
(bad)
push
or
add
add
jl
fisub
sub
inc
mov
les
xchg
push
sbb
or
clc
add
or
call
add
add
add
add
or
or
or
jae
fwait
and
dec
test
scas
cmp
retf
mov
add
jmp
sbb
jg
add
popf
fstp
fbstp
and
add
add
mov
and
cmp
cmp
ins
cs
jb
cs
sbb
or
and
out
add
add
xor
mov
hlt
scas
retf
mov
cld
daa
pop
add
add
mov
repz
mov
mov
cli
les
xor
leave
mov
xchg
and
add
add
lea
adc
lods
leave
push
adc
mov
mov
push
mov
add
mov
or
nop
sar
sub
inc
add
daa
dec
shl
daa
pop
dec
pop
dec
add
add
add
leave
cli
pusha
gs
push
inc
aas
enter
and
(bad)
fs
sbb
add
add
loope
xchg
stc
pop
mov
ror
push
add
fimul
shl
je
push
inc
and
imul
add
add
xchg
mov
mov
xchg
jno
movs
imul
fsubr
or
push
sbb
bound
add
push
les
fcom
mov
les
mov
fsubr
nop
retf
xor
cdq
and
cmp
xor
add
jg
lods
outs
nop
mov
je
int3
mov
push
mov
inc
je
xchg
dec
in
pop
rol
add
add
jle
mov
scas
cmp
mov
dec
jmp
xor
xchg
sbb
or
add
add
mov
sar
dec
repnz
scas
jno
lock
mov
in
mov
hlt
xchg
add
add
pop
jecxz
cmp
hlt
mov
or
add
cld
pop
push
xor
clc
hlt
out
lods
add
add
sahf
inc
fadd
push
adc
inc
add
cdq
not
cs
aam
call
sub
add
add
lock
movs
sbb
sbb
or
dec
test
mov
push
lock
rol
add
add
test
lods
arpl
xchg
dec
add
xor
ja
mov
xchg
dec
pop
sti
and
add
add
mov
mov
jle
and
pusha
movs
adc
fst
xchg
pop
mov
add
add
add
inc
sub
arpl
cmps
dec
dec
xor
xchg
inc
sub
mov
add
mov
push
sbb
push
fs
(bad)
mov
lds
loope
jb
push
push
adc
or
add
jno
jbe
xor
or
hlt
cmp
or
jle
push
inc
(bad)
mov
adc
add
add
adc
push
push
jnp
push
test
and
das
jmp
std
mov
or
imul
fist
and
or
ja
mov
and
sub
retf
nop
movs
aaa
test
or
jne
aas
fs
pushf
mov
jne
ss
add
add
add
adc
dec
jnp
mov
xor
xchg
add
sbb
sbb
test
cmp
add
add
in
shl
fmul
and
fst
mov
imul
lods
push
fs
add
add
dec
cdq
xchg
jle
ret
jns
xor
ficom
fs
gs
call
xor
and
shl
add
add
and
mov
ret
jmp
mov
aad
sbb
add
sbb
das
pop
or
mov
mov
or
jle
mov
inc
iret
add
add
sub
rol
aaa
les
stc
es
ins
cmp
neg
xchg
push
ss
or
push
add
add
dec
pop
cmp
repnz
xor
and
ss
add
fimul
xor
dec
out
xor
add
add
push
bnd
inc
adc
push
mov
pushf
and
adc
jmp
inc
add
add
imul
fisubr
mov
mov
ins
cdq
aad
sar
retf
jp
adc
add
add
jmp
push
sub
cmp
fs
cli
mov
inc
sbb
pop
jne
das
add
add
adc
sub
cmp
cmc
mov
imul
cmp
add
stc
lods
(bad)
sub
sbb
sub
pop
xchg
test
ror
sahf
jno
mov
je
aam
inc
add
add
sub
sub
sub
cmps
jnp
nop
push
push
push
push
xchg
jmp
mov
cmp
add
sub
loopne
inc
jo
jbe
xchg
vpsrlq
cmc
les
jl
in
xchg
(bad)
mov
and
out
and
push
jl
imul
cmp
push
je
leave
push
dec
xlat
adc
mov
add
push
pop
jg
and
data16
das
aam
sub
inc
or
dec
cmp
mov
(bad)
jns
daa
rcr
bound
pop
pop
cmp
dec
fs
repz
cli
outs
mov
add
add
pop
sub
fcomp
movs
push
pop
mov
out
add
sub
and
jo
call
jmp
and
sub
int3
pop
scas
in
mov
xor
jle
out
cmps
adc
add
add
jb
neg
jge
mov
or
retf
fld
xor
fcom
out
mov
dec
add
add
adc
outs
sub
rcl
push
jmp
nop
sbb
adc
cmps
push
aad
adc
push
test
lock
cmp
add
add
jle
inc
dec
pop
hlt
jmp
mov
pop
jge
push
bound
sub
xchg
cld
loopne
jne
icebp
xchg
push
add
add
scas
test
mov
sbb
or
fdivr
pusha
ret
repnz
push
add
add
bound
xchg
dec
imul
push
push
imul
outs
movs
imul
outs
adc
add
test
lods
jmp
add
cli
xor
mov
xor
add
add
adc
mov
cld
test
jg
mov
sbb
sub
lods
inc
sar
add
sahf
in
push
lock
mov
and
cmp
call
add
add
and
jmp
fs
and
push
xchg
push
dec
xlat
or
jle
pop
les
add
add
outs
pop
cld
mov
push
and
or
jle
sub
pop
aaa
xor
inc
mov
bound
add
add
sbb
inc
pop
jl
push
pop
jmp
and
iret
jo
lea
mov
inc
adc
mov
mov
xchg
adc
clc
call
repz
dec
mov
add
fist
add
add
mov
shr
mov
adc
mov
push
sbb
retf
jmp
xor
add
add
addr16
pop
jmp
das
push
fdivr
dec
out
cmp
or
jmp
and
std
dec
jl
xor
add
in
scas
iret
adc
leave
fsubr
and
pop
rcr
jmp
in
mov
std
pop
add
add
sbb
mov
shl
add
mov
inc
gs
inc
je
cmc
push
xor
mov
add
add
cmc
pushf
push
xchg
out
mov
addr16
xchg
sub
inc
mov
sub
mov
inc
xchg
test
cmps
aam
into
dec
pop
pusha
imul
add
and
fld
aam
push
add
shl
pop
bound
imul
push
test
xor
scas
out
dec
test
mov
add
aad
out
leave
ins
fistp
lds
mov
pop
fwait
cmp
mov
or
add
scas
jecxz
or
iret
dec
sar
sub
sbb
xchg
add
add
sbb
dec
jmp
push
adc
jne
dec
das
and
mov
and
inc
or
(bad)
repnz
add
in
or
cmp
jne
adc
ja
xchg
or
inc
mov
sbb
xor
cmp
mov
lods
adc
retf
push
jp
inc
sbb
add
push
test
inc
dec
stc
adc
and
nop
sbb
inc
xor
adc
add
add
or
das
dec
lods
mov
and
xchg
adc
add
jmp
lods
push
jb
adc
dec
add
add
or
shl
adc
adc
adc
cmp
xchg
shr
xchg
push
mov
add
pop
ret
lea
fisttp
aaa
pop
shl
out
jmp
and
add
jne
sbb
sub
cmp
add
push
sub
pop
loop
push
xchg
adc
add
add
or
jne
lods
and
jbe
out
mov
sbb
jmp
pop
or
nop
add
add
mov
mov
pusha
mov
xor
neg
pop
pop
js
mov
daa
mov
add
add
stc
add
mov
pop
sub
(bad)
and
jo
sbb
test
jns
inc
cwde
std
or
aad
test
jae
call
mov
push
jns
inc
cwde
cld
pop
cmps
add
add
xchg
lods
shl
xchg
mov
push
pop
and
add
xor
popf
div
fstp
add
add
outs
fdivp
dec
popa
mov
sbb
dec
out
dec
and
push
mov
cmp
nop
push
pop
(bad)
pop
je
add
add
enter
stos
add
xchg
hlt
nop
xor
dec
dec
add
sub
mov
jl
add
add
je
dec
cs
enter
sub
or
mov
adc
pop
add
add
cli
int3
inc
js
je
dec
popf
inc
mov
xchg
mov
cmp
xor
pop
sub
imul
sbb
mov
sub
out
xchg
jnp
scas
(bad)
xchg
mov
adc
add
add
jmp
jmp
xor
cdq
push
xor
jno
sbb
jno
dec
sbb
gs
lods
adc
pop
add
add
add
popfw
adc
jmp
mov
scas
js
test
lods
pop
pusha
stc
pop
add
add
clc
dec
test
adc
(bad)
push
mov
push
xor
stos
inc
mov
add
add
imul
call
sbb
out
les
push
adc
fsub
shl
add
add
dec
fxch
lods
add
mov
jmp
mov
mov
adc
jno
mov
or
add
add
loope
push
in
xchg
sub
and
xor
push
jae
jl
add
add
adc
icebp
dec
test
fist
leave
inc
push
ins
xlat
jnp
or
movs
jge
mov
push
add
add
imul
repz
ret
sbb
push
lea
sub
inc
ja
test
out
add
out
mov
call
test
xchg
test
icebp
mov
add
add
add
and
into
add
das
sub
fs
lock
add
add
push
push
pop
or
adc
xor
popf
bound
push
jo
add
jge
add
add
mov
cdq
cmp
push
pop
push
test
mov
pop
rcr
xlat
add
add
retf
(bad)
pusha
push
mov
mov
iret
or
sbb
dec
mov
rcr
push
stos
push
aad
std
adc
cs
push
xor
loopne
or
sub
and
add
inc
and
out
adc
dec
retf
jne
je
fdivr
das
dec
retf
aam
push
xchg
imul
add
xor
pop
(bad)
sbb
cwde
mov
repz
cmp
cmps
cmp
mov
(bad)
loopne
add
add
bnd
out
and
cs
add
push
push
dec
dec
(bad)
jecxz
ja
or
enter
or
add
add
dec
xchg
sub
push
xchg
(bad)
push
mov
jae
cmp
inc
fs
add
add
ret
and
(bad)
mov
cmp
call
inc
frstor
xor
add
add
dec
jnp
out
adc
xor
addr16
jmp
imul
loop
fisub
adc
cmp
add
add
scas
pop
ret
xchg
adc
adc
add
adc
or
in
jmp
mov
pop
jmp
add
add
and
and
ins
mov
xchg
pop
out
jle
leave
pop
sub
daa
cmp
add
add
sahf
inc
pop
or
rcr
adc
fcom
sub
push
neg
retf
add
add
and
add
mov
leave
ja
cmps
jne
xchg
icebp
call
cli
pop
mov
call
cmp
adc
mov
outs
sub
pushf
fs
out
push
rcl
(bad)
in
dec
sub
jae
xor
add
add
add
or
dec
in
ss
adc
ror
jnp
xchg
mul
xor
mov
jne
jg
add
add
int
push
inc
stos
inc
loop
mov
xchg
ror
add
mov
add
add
popa
aas
mov
dec
adc
bound
dec
add
jne
lods
sub
xor
xor
add
add
mov
push
retf
xlat
sub
in
sub
sub
and
jns
pop
hlt
dec
dec
ftst
les
add
add
jg
xchg
cld
jecxz
in
cmp
scas
(bad)
lods
xor
or
mov
xor
addr16
add
add
and
mov
push
push
ret
xchg
(bad)
jmp
and
add
add
mov
sbb
jmp
ins
shl
push
mov
cmps
push
and
pushf
aas
pop
les
push
mov
adc
movs
enter
leave
push
(bad)
cmp
xchg
sub
adc
xor
leave
pop
push
in
cmp
add
add
mov
adc
or
mov
outs
jo
xchg
or
scas
mov
or
call
fwait
jmp
sbb
les
jbe
int3
retf
dec
popa
sbb
out
and
imul
lds
add
jg
sub
jo
call
fsubr
fsubr
xchg
repnz
and
sub
xlat
mov
adc
ins
adc
call
scas
sub
push
lds
jne
xchg
xor
add
stos
int3
fiadd
xchg
xor
sbb
sub
cli
mov
add
add
mov
lods
jmp
dec
ror
cdq
sub
retf
out
mov
daa
std
sbb
push
rcl
in
or
int
in
push
sar
sub
pop
mov
stc
shr
cld
xor
clc
dec
icebp
in
into
fnsave
add
add
fcom
and
in
or
cmp
sahf
xchg
cmp
and
push
or
add
add
pop
shl
imul
sti
cmps
mov
cli
sub
in
les
push
enter
imul
in
add
add
xor
cmp
push
(bad)
cwde
dec
or
or
or
and
loope
add
add
ret
push
or
fcomp
push
popf
or
or
adc
dec
aaa
cs
dec
mov
cmps
cmp
add
add
mov
cmp
sub
pusha
mov
mov
jg
(bad)
test
nop
sub
xchg
add
add
mov
hlt
cwde
mov
xor
cmp
loope
repnz
jmp
mov
mov
xchg
inc
xchg
repz
inc
lahf
je
mov
sbb
and
fild
int3
aas
and
or
repnz
stos
add
add
leave
xchg
and
sbb
xchg
cmps
xchg
sar
scas
nop
push
ficom
and
add
add
cmps
inc
enter
jge
jl
xchg
idiv
lock
(bad)
jns
clc
add
inc
int
mov
fwait
xchg
or
add
add
jl
xor
out
mov
sbb
cmp
jne
(bad)
cmp
add
mov
stos
mov
mov
les
push
jnp
xor
pop
inc
das
add
xor
add
sub
xchg
fcomp
pop
and
jae
jbe
and
iret
jmp
aad
jo
push
adc
pop
test
add
add
jle
lods
push
mov
or
div
jb
gs
test
cmp
cmps
std
inc
test
or
daa
add
add
sub
sbb
in
in
mov
stc
movs
add
cmp
cs
sbb
add
add
push
loopne
sahf
loope
jmp
mov
push
movs
std
cdq
xchg
jl
push
dec
popf
sub
test
add
add
test
pop
je
mov
xchg
and
fdivr
jmp
aam
stos
adc
loope
(bad)
or
nop
and
add
add
and
inc
jmp
inc
leave
or
inc
jge
popf
retf
or
cmp
or
out
dec
add
add
push
cmp
push
cmp
cmps
stc
aas
mov
je
push
mov
test
mov
ret
add
add
xchg
les
jge
sub
push
adc
push
(bad)
adc
pop
in
xor
in
add
add
mov
sbb
mov
xchg
stc
sti
jo
sub
mov
inc
cmp
inc
add
add
dec
retf
xor
and
xchg
call
mov
lods
and
add
mov
push
call
sub
in
je
mov
andps
rcr
add
add
mov
shl
lods
cwde
outs
lock
sub
jns
das
es
jae
jb
add
add
js
inc
loopne
mov
in
jb
dec
adc
mov
mov
pop
push
out
fimul
push
add
add
push
shl
and
enter
les
(bad)
or
cmp
sub
or
push
jl
or
push
jns
xor
in
cmp
jl
sbb
dec
inc
test
add
add
jne
test
xchg
pusha
lods
jg
and
leave
jg
ret
ss
leave
aas
mov
add
fistp
cld
and
xchg
dec
test
les
(bad)
adc
jmp
scas
and
add
add
jne
aaa
stos
and
jmp
mov
ret
mov
mov
xchg
jge
mov
add
add
sub
(bad)
and
cmp
jo
sub
push
sbb
int
jne
in
int3
sar
add
add
and
ins
loop
or
popf
mov
rol
or
out
pop
lock
add
add
les
push
loop
push
xchg
in
popf
(bad)
xchg
(bad)
dec
pusha
out
das
or
leave
ds
add
add
ret
popf
aam
push
movs
jae
cmps
jb
dec
push
jmp
jnp
ds
sub
and
call
je
add
add
fsub
jg
pop
and
in
jmp
inc
mov
stos
xor
mov
add
add
stos
call
add
sbb
sub
cmps
add
adc
xor
inc
add
add
lds
jmp
leave
aam
mov
and
adc
mov
sbb
sbb
adc
add
add
retf
aaa
test
scas
sub
mov
(bad)
fs
fwait
lds
dec
push
jmp
add
mov
mov
iret
jae
jmp
mov
pop
xchg
loope
cmps
sbb
in
push
xchg
std
jo
and
and
fwait
cli
ja
add
lahf
je
mov
pop
add
add
mov
jb
sar
jg
pop
cmp
cmp
cli
pop
mov
jge
cld
stc
fadd
add
add
mov
cmp
jmp
mov
add
sti
fnstsw
jmp
aas
add
add
jmp
or
jmp
mov
xor
lods
std
mov
ja
jmp
unpcklps
add
add
mov
mov
xchg
dec
adc
fxch
push
dec
adc
pop
or
je
les
in
jmp
add
add
mov
and
daa
popa
call
mov
psrlq
sub
daa
xchg
add
push
jle
add
add
push
xlat
scas
xchg
movs
xor
pop
dec
sub
enter
pop
ss
cmps
mov
daa
jbe
fadd
add
add
daa
xchg
add
ins
xchg
xor
call
ins
stc
cmp
sub
jmp
add
add
cmp
push
adc
ins
or
nop
addr16
push
enter
stos
xchg
adc
dec
(bad)
sub
push
add
add
rcr
jle
dec
jmp
(bad)
loopne
je
jmp
push
lahf
jge
fwait
ins
xchg
pusha
mov
add
add
jg
jb
push
dec
imul
test
out
stos
jns
mov
jbe
add
nop
outs
jmp
add
rcl
in
dec
push
daa
aam
add
lods
jb
jmp
stc
adc
fidivr
xchg
sbb
jecxz
sbb
fidivr
repz
fiadd
repz
sti
mov
iret
int3
fs
xor
add
add
shl
mov
call
mov
lods
std
mov
aam
sbb
add
pop
call
push
lahf
popf
(bad)
call
call
jne
mov
pop
fbld
add
add
inc
add
js
add
and
cmp
repnz
mov
and
add
repnz
add
adc
mov
sar
jne
or
adc
call
enter
dec
jmp
mov
and
imul
test
push
popf
loopne
pop
add
jns
sbb
add
mov
add
add
pop
enter
adc
add
add
enter
mov
adc
popf
loopne
add
add
jge
sbb
mov
pop
ja
fsubp
adc
cmp
rdpmc
mov
and
cmp
jne
add
add
xchg
dec
rol
jb
into
lock
(bad)
stc
push
mov
fimul
hlt
jmp
add
add
mov
inc
add
inc
or
mov
or
add
cs
xchg
cld
add
add
or
xchg
or
inc
cwde
inc
push
and
inc
inc
pop
mov
dec
xor
pusha
and
add
add
cmp
out
adc
ds
cmps
xchg
mov
and
add
add
add
push
sbb
mov
je
dec
sbb
xchg
mov
sub
add
add
dec
lock
hlt
cmp
pop
fnstcw
jb
and
xor
sbb
xchg
arpl
cmp
add
add
je
js
xchg
pop
jnp
xor
jns
dec
lds
mov
push
daa
or
add
add
jmp
add
jle
loopne
sbb
add
lock
mov
loope
(bad)
fcmovbe
mov
sub
add
add
imul
jle
cmps
push
xchg
cmc
cmp
test
mov
adc
sti
mov
movs
adc
add
add
xchg
das
ins
jg
mov
je
retf
fld
cld
(bad)
repnz
xor
and
jl
sub
add
mov
fbstp
jnp
jb
ficomp
adc
mov
adc
jne
xchg
xchg
retf
rcl
(bad)
repnz
add
jmp
and
jo
xchg
fild
add
add
pusha
adc
or
mov
cmp
cli
repz
sbb
out
mov
inc
stos
push
jmp
add
add
jp
adc
or
cmp
cli
mov
in
xor
pop
scas
rol
and
cli
add
add
push
mov
inc
aam
das
jns
and
mov
and
or
leave
xchg
arpl
push
lds
imul
add
stos
jge
mov
jnp
pop
rol
outs
ins
test
adc
repnz
lods
jl
add
add
jo
fcom
lods
inc
test
and
dec
repz
and
dec
les
add
in
mov
dec
ins
shr
dec
mov
jle
hlt
or
mov
or
pop
mov
add
add
jmp
test
xchg
and
jbe
sar
mov
out
xchg
mov
scas
imul
in
or
rol
mov
jmp
push
les
dec
mov
lods
and
scas
and
jmp
cdq
or
in
mov
lock
adc
jmp
add
pushf
push
cmp
in
aas
mov
ror
shld
gs
push
mov
xlat
sub
add
add
or
repz
push
dec
in
imul
mov
mov
(bad)
sbb
cmp
add
add
xchg
clc
scas
retf
iret
movs
and
or
jp
adc
xchg
jns
gs
shl
bound
add
add
shl
or
outs
ret
pop
idiv
aad
or
pop
mov
add
cwde
fs
mov
cmovp
pop
push
shl
das
pop
add
cmovle
fild
add
add
pop
xchg
repz
pop
add
jnp
(bad)
(bad)
ds
sub
lods
pop
add
add
jle
jbe
loop
xor
xor
movs
pop
sbb
push
imul
jmp
pop
cmps
retf
or
add
add
cmp
pmaddwd
loope
cmp
repz
lods
fist
cdq
retf
daa
aad
pop
int3
popf
xor
add
add
(bad)
jmp
sbb
test
adc
push
imul
scas
add
add
icebp
or
jmp
dec
pop
les
mov
mov
out
dec
mov
pop
cld
add
add
add
fldenv
adc
call
mov
je
push
adc
push
add
out
test
out
mov
fnstsw
or
out
cmps
jne
dec
sar
inc
lods
cmp
xor
add
add
dec
jne
sub
xchg
sbb
dec
push
(bad)
xchg
fs
cmc
lahf
sbb
jo
lea
inc
add
add
add
inc
mov
mov
mov
xchg
hlt
xchg
clc
popf
sub
mov
jg
(bad)
add
add
xchg
call
je
push
mov
xchg
popf
std
cmp
pop
or
add
test
xchg
call
enter
xor
aam
(bad)
xor
mulps
push
pop
and
pop
inc
aam
mov
add
cwde
sbb
aas
pop
sbb
adc
or
inc
or
mov
stc
or
or
rcl
cmps
aaa
icebp
dec
sbb
dec
test
add
or
nop
mov
adc
adc
das
mov
mov
adc
std
or
add
add
push
jl
xchg
adc
and
mov
xchg
dec
dec
or
xor
aam
add
add
sub
(bad)
int3
(bad)
enter
ror
shl
xchg
sbb
xchg
movs
setns
push
and
lock
xor
jne
or
inc
outs
cmc
jae
cli
inc
and
add
add
or
cmp
pop
mov
mov
adc
cmp
xor
xchg
add
add
sub
addr16
xchg
mov
or
in
idiv
lods
xchg
cmp
or
add
xor
push
cmp
or
cmp
jne
retf
test
fist
bnd
cmp
xor
add
add
or
test
shld
ret
or
loope
hlt
loop
mov
and
add
add
add
inc
sub
call
push
push
(bad)
mov
out
push
inc
pop
push
inc
adc
fsub
mov
(bad)
retf
sub
mov
cmp
inc
sbb
jne
fisub
push
inc
mov
inc
adc
add
add
sbb
jmp
sbb
push
adc
shr
popf
fstp
(bad)
popf
inc
lock
enter
add
xor
jb
push
cmp
or
pop
jecxz
pop
jbe
dec
call
(bad)
je
loopne
add
add
pop
pop
jns
inc
push
lea
lods
or
enter
add
rcr
or
push
push
enter
add
rcr
rcr
inc
pop
inc
mov
adc
pushf
pushf
or
adc
lds
(bad)
push
mov
xchg
into
pusha
nop
jo
pop
xchg
das
sbb
cs
push
mov
popa
jg
xor
inc
pop
xchg
add
push
and
cmp
mov
cdq
push
sub
(bad)
and
jnp
push
sub
movs
add
add
les
dec
dec
jmp
cld
adc
(bad)
and
cmp
xchg
dec
jecxz
add
add
push
popf
cdq
repnz
daa
test
scas
cmc
xchg
stos
adc
adc
retf
push
pop
in
inc
mov
popf
adc
add
add
jg
in
jmp
gs
test
outs
stc
cmps
mov
push
pop
xor
sub
icebp
push
cs
pop
cmps
add
add
bswap
adc
adc
jns
pop
leave
pop
lea
test
dec
scas
sti
sub
jnp
add
add
ror
lea
daa
js
cld
adc
mov
pop
mov
add
add
out
mov
lods
into
mov
cwde
scas
jmp
in
xchg
ss
and
sbb
dec
dec
shr
ret
add
pmuludq
shl
adc
rcr
scas
add
(bad)
or
pop
push
int3
gs
add
add
(bad)
hlt
mov
or
lea
mov
sahf
cmp
loopne
enter
add
add
add
out
pushf
or
retf
addr16
adc
sbb
push
or
cmp
jae
adc
add
lahf
add
fisub
dec
xchg
add
daa
icebp
and
xor
jl
add
add
jmp
and
mov
rcl
movs
fst
sub
or
add
adc
jne
nop
shl
out
jmp
sahf
dec
xor
sub
mov
pop
mov
in
sub
or
sub
cwde
vpsubd
adc
jmp
cmp
add
add
ja
je
sub
push
scas
adc
in
pop
push
dec
call
add
mov
adc
mov
mov
js
jne
ret
mov
add
add
cmp
into
popf
pop
sbb
add
inc
or
int
or
loope
pop
stc
add
add
pop
daa
jle
dec
aaa
out
push
add
pop
fsub
movs
mov
aas
call
int
add
add
mov
cmp
ror
mov
(bad)
xor
add
mov
in
jg
add
add
push
xchg
adc
gs
mov
inc
dec
lahf
pop
jae
push
or
or
add
add
sub
scas
pop
adc
inc
cmc
aaa
push
mov
xchg
push
inc
ret
lock
mov
add
add
mov
mov
nop
dec
pop
sbb
out
retf
pop
dec
and
nop
mov
shl
dec
add
add
and
mov
jno
xchg
or
push
push
pop
cmp
adc
sbb
repnz
add
push
rcr
lock
inc
sbb
enter
and
loope
add
adc
add
out
xchg
sti
add
add
loop
ror
jne
outs
lods
xor
inc
mov
adc
adc
sahf
xchg
hlt
cmps
cmp
add
add
mov
push
scas
xchg
cmp
and
scas
stc
cmp
jb
cmp
movs
enter
pop
pop
cli
or
add
add
inc
or
popf
cdq
test
adc
into
cld
cmp
cmp
pushf
inc
aam
dec
jg
add
or
daa
shl
pop
mov
(bad)
fucom
outs
mov
jg
out
xchg
jno
add
add
push
leave
and
f2xm1
sub
push
mov
imul
add
ror
dec
inc
pop
scas
push
sbb
pop
sbb
test
inc
jmp
adc
add
add
gs
stos
fcmovne
test
push
dec
push
dec
stos
mov
dec
(bad)
or
add
add
xchg
dec
add
mov
aad
retf
adc
and
retf
mov
jno
or
add
add
cmp
mov
add
in
pushf
mov
loop
sbb
ficom
and
ins
stc
shl
add
add
in
xor
imul
icebp
add
mov
or
repz
xchg
je
scas
add
add
div
jmp
mov
sub
fwait
push
jmp
cmp
and
add
add
popa
push
ds
jle
and
fs
ret
mov
loopne
jecxz
mov
daa
cmps
ins
cmp
lds
and
cmp
push
int3
mov
xor
in
test
mov
add
add
inc
xor
push
jne
cs
sub
cs
sub
mov
sub
xor
push
mov
add
add
mov
xor
daa
mov
push
cmp
xor
xchg
sub
xchg
xor
add
lea
adc
rcr
movs
rcl
push
add
sub
jmp
pusha
add
add
dec
test
xor
leave
dec
mov
leave
sub
cmp
rol
(bad)
sbb
in
add
add
pop
inc
enter
imul
cmc
or
inc
jp
test
jb
add
or
add
jbe
jmp
sub
cmp
xor
jb
stos
ds
adc
fs
add
add
add
jno
bound
(bad)
aad
inc
dec
into
aad
mov
dec
sti
aam
(bad)
jnp
cs
add
add
test
repz
inc
cmp
or
mov
mov
rcr
pop
dec
lods
arpl
jge
jmp
xor
stc
popa
enter
push
stos
adc
arpl
out
inc
dec
mov
xor
std
mov
outs
push
push
cld
jnp
stos
cs
pop
push
sub
fmul
and
add
add
leave
mov
adc
outs
daa
popa
in
(bad)
mov
push
loop
jmp
fs
sbb
jbe
loop
add
add
mov
xchg
das
mov
jle
adc
test
stc
xor
cmp
pop
neg
add
add
std
jo
mov
(bad)
fmul
retf
pop
popa
scas
fwait
adc
cmc
add
add
(bad)
and
mov
add
mov
push
pusha
and
test
outs
loope
ret
mov
xor
cmp
xchg
lods
inc
rol
add
sbb
push
add
pop
sar
add
shl
les
or
rol
add
add
inc
inc
adc
mov
inc
and
leave
in
inc
add
mov
xchg
and
add
sub
inc
mov
cmp
scas
cmp
xor
out
out
inc
data16
add
add
xchg
out
aas
shl
push
mov
pop
aad
scas
loop
mov
fucom
and
je
lods
push
jge
iret
add
add
add
fistp
xchg
(bad)
jecxz
ret
push
movzx
movs
push
pop
shl
pusha
enter
fs
jne
push
mov
add
add
add
mov
adc
neg
loopne
(bad)
rcl
or
mov
fcom
mov
push
add
xchg
push
ja
xchg
fisttp
or
add
add
pop
jp
repz
stos
cwde
outs
popf
xchg
jle
in
(bad)
fmul
data16
pushf
jne
xchg
cmp
fsubr
add
add
pushf
inc
mov
idiv
push
inc
cmp
mov
xor
clc
xchg
dec
stos
sub
sub
add
add
xchg
jmp
popa
imul
fcmovnu
dec
in
cli
adc
pop
sbb
inc
mov
int3
sbb
adc
cmp
add
add
leave
jmp
adc
push
fsub
dec
fcomp
pop
jmp
mov
or
or
mov
mov
into
dec
adc
hlt
mov
pusha
pop
pop
push
adc
push
pop
cmps
and
cld
retf
add
pop
fsubr
sub
mov
jmp
xchg
jmp
pusha
xor
push
mov
adc
inc
pop
adc
lock
add
add
pusha
adc
jl
sbb
jns
xchg
pop
ret
pop
pop
jge
or
add
add
mov
add
lods
pop
dec
cmps
or
pop
enter
mov
addr16
cwde
jmp
add
mov
adc
stc
xor
mov
push
scas
add
add
je
jmp
mov
pop
xor
xchg
and
(bad)
mov
cld
and
sahf
and
add
and
push
adc
inc
pop
hlt
jmp
xchg
xchg
sbb
call
shl
mov
xchg
add
add
sub
out
push
cmp
jae
jp
pop
loopne
dec
fs
jmp
(bad)
mov
add
add
or
out
daa
push
(bad)
cmp
retf
jae
jno
cmp
(bad)
dec
and
scas
adc
mov
sub
call
and
adc
gs
retf
lea
dec
nop
ja
sub
xchg
stos
imul
pop
mov
or
lock
das
pop
jne
or
mov
mov
je
jo
adc
mov
push
xchg
inc
jbe
cs
stos
dec
add
sbb
mov
clc
cld
mov
add
add
dec
movs
loop
xchg
pop
nop
in
cmps
cwde
ins
push
outs
je
add
jo
xor
xchg
hlt
mov
mov
add
add
mov
mov
das
jge
jne
push
jg
mov
cmp
mov
sbb
clc
inc
add
add
cld
add
in
or
jp
pop
or
pop
pushf
or
fucomip
popa
push
aam
sbb
add
add
hlt
shr
adc
pop
lea
outs
mov
fmul
(bad)
imul
mov
add
add
xor
pop
movs
cmp
loop
mov
scas
rcl
cli
push
xchg
add
xchg
mov
add
add
jne
mov
add
repnz
(bad)
or
sbb
and
and
bound
add
add
or
push
mov
sar
and
out
xchg
mov
push
pushf
repz
cmp
mov
mov
or
xor
lea
xor
(bad)
dec
add
push
call
(bad)
mov
les
xor
popf
lahf
adc
xchg
call
scas
cld
pop
loop
jmp
push
jle
add
add
shr
adc
inc
mov
test
call
inc
scas
inc
inc
and
inc
xor
add
add
rol
movs
scas
and
mov
mov
inc
or
mov
add
add
mov
xchg
push
fisub
mov
aaa
cmp
adc
mov
cmp
cs
add
add
daa
jg
inc
aad
das
sub
jge
dec
sbb
jb
mov
aaa
dec
daa
ja
dec
test
cmp
add
in
inc
mov
dec
out
fmul
push
and
out
repnz
loope
pop
mov
add
add
fadd
or
push
mov
and
push
cmp
jl
adc
add
add
and
retf
mov
into
or
loop
iret
sbb
fs
jae
add
add
xor
fist
and
scas
or
call
cmp
mov
sub
add
add
dec
in
pop
cmps
cld
inc
push
test
movs
and
jmp
jmp
jne
adc
and
add
and
mov
das
pxor
add
xor
shl
inc
add
add
je
xchg
sub
pushf
mov
push
cmp
icebp
jg
sar
popf
mov
inc
cs
adc
add
inc
mov
jne
out
or
add
pop
test
test
test
loopne
push
inc
mov
test
mov
xor
dec
nop
out
leave
add
add
test
and
xchg
movs
ja
stos
out
out
retf
and
push
hlt
push
sub
inc
jb
push
add
add
out
shl
retf
sbb
ds
pop
cmp
fistp
shl
scas
pop
jg
pusha
dec
mov
add
push
mov
sub
and
xor
aaa
pop
retf
inc
sbb
or
pop
popf
inc
add
add
cmp
pop
and
or
pop
inc
movs
adc
scas
enter
cmc
mov
add
and
add
lods
ret
data16
test
mov
pop
mov
adc
or
pop
rcl
ret
and
movs
dec
aam
add
add
push
cld
in
jp
pushf
xor
test
les
mov
push
popf
jne
or
and
sti
cmp
add
fmul
(bad)
fcmovb
(bad)
loopne
push
adc
(bad)
repz
cmp
inc
jmp
add
add
popf
xor
scas
or
push
and
inc
push
adc
adc
jg
or
add
add
sub
sub
scas
xor
lods
je
xor
out
(bad)
mov
shr
add
add
fmul
enter
fidivr
retf
jb
xchg
out
sub
out
dec
add
imul
ret
xor
loop
push
or
adc
jmp
xchg
fwait
sub
nop
jg
in
nop
or
add
add
ror
push
sti
push
sub
xchg
xor
enter
mov
cmp
jnp
ret
jns
jb
add
add
cmps
sbb
adc
(bad)
pop
ror
dec
mov
adc
test
jno
sub
add
out
rcr
xchg
hlt
out
movs
mov
push
mov
lock
enter
mov
add
add
and
(bad)
and
scas
cmps
mov
push
loopne
jmp
cmp
mov
add
add
gs
sub
loop
sub
imul
fstp
dec
add
add
fs
adc
jp
in
or
sub
add
retf
adc
cmps
pop
adc
mov
mov
rcr
pop
mov
dec
pop
mov
cmp
jmp
(bad)
cmp
sar
add
adc
lods
fisub
mov
pushf
adc
or
fldcw
add
add
out
pushf
adc
adc
jb
jb
adc
int
sub
out
inc
dec
dec
cmp
add
add
hlt
mov
pop
and
sub
je
daa
dec
push
lahf
(bad)
cmp
inc
xchg
jne
cdq
das
add
add
add
add
call
scas
and
cmps
push
sub
adc
mov
mov
mov
add
jg
inc
cmp
ret
jns
dec
lods
add
or
out
pop
ret
mov
arpl
add
add
(bad)
in
push
ror
inc
jl
sahf
mov
cli
push
or
dec
dec
test
bound
add
add
lods
outs
daa
mov
jnp
inc
int
sbb
add
jns
ret
dec
sub
pushf
dec
add
add
add
dec
ja
les
jp
jmp
mov
and
push
cli
cmp
inc
sub
add
add
loop
rcr
nop
out
scas
dec
out
xor
add
mov
mov
les
pop
dec
add
add
stc
(bad)
push
test
or
push
mov
adc
(bad)
xchg
clc
push
adc
add
add
xchg
adc
mov
lahf
shl
adc
push
xor
xchg
adc
add
add
mov
cmp
dec
stos
mov
cmps
jo
push
inc
sub
jne
add
add
aam
fdivr
xchg
or
sbb
jg
mov
fwait
jmp
push
pop
lods
lock
jp
test
add
add
adc
adc
xor
or
xor
add
mov
mov
add
cmp
aas
xor
mov
mov
mov
out
and
pop
ja
add
add
scas
stos
icebp
add
call
not
adc
mov
dec
fdivr
shr
add
data16
add
mov
pop
cld
out
sub
adc
cmp
(bad)
and
xor
mov
add
mov
sar
or
movsx
add
ret
or
adc
xchg
mov
add
add
pop
ins
cmps
in
movs
cld
cmp
ror
xor
xor
ja
sub
sub
push
out
xchg
out
add
add
imul
jo
pop
or
push
stc
outs
and
scas
in
lods
dec
mov
pop
iret
jo
scas
mov
mov
push
add
add
dec
mov
in
mov
aaa
mov
call
sar
mov
sub
add
add
outs
xchg
xchg
dec
loop
ds
inc
fcmovb
repnz
cmp
add
jne
add
add
inc
movs
and
pop
adc
pushf
shl
xor
ret
test
call
xor
add
add
in
mov
mov
adc
movups
call
inc
sub
ret
enter
std
or
cld
scas
add
add
fidiv
mov
dec
push
jmp
mov
sti
retf
fisttp
push
int3
cmp
and
mov
add
add
(bad)
fdiv
jae
in
jns
lahf
push
daa
sub
push
adc
xor
rcl
add
xor
cmp
js
addr16
inc
add
popa
addr16
aas
out
push
push
imul
jge
add
add
mov
dec
jbe
push
sahf
sub
or
rol
in
ds
mov
add
aad
jmp
push
sbb
add
hlt
stos
xor
adc
cdq
pop
call
add
add
cmc
cmp
and
sub
not
lods
adc
bound
ds
mov
add
add
and
test
jo
out
jnp
nop
xor
mov
imul
inc
add
inc
sbb
add
add
test
(bad)
int3
sub
mov
dec
push
jmp
test
mov
aaa
or
add
add
xchg
jp
ret
call
adc
add
mov
pusha
into
es
cdq
xor
sbb
popa
in
dec
clc
lahf
pusha
lock
retf
icebp
jb
xor
aaa
adc
sti
dec
out
in
in
mov
add
inc
jmp
add
das
test
jl
call
mov
mov
adc
daa
add
add
sbb
je
sub
push
rcl
xor
adc
add
push
add
push
mov
jb
clc
xchg
push
add
add
repnz
test
xchg
ror
sub
mov
(bad)
out
add
add
cmp
xchg
test
and
pop
fs
fdivr
movs
add
add
in
jae
or
push
and
xchg
push
inc
je
scas
xor
sub
retf
out
loopne
add
add
je
dec
mov
fdiv
and
pop
aam
fsub
xchg
je
hlt
xor
fdiv
add
add
xchg
movs
pop
leave
cmp
xchg
adc
push
or
popa
cmp
ds
dec
test
stos
pop
push
add
add
imul
mov
push
push
enter
push
popf
mov
xchg
cli
out
push
or
add
add
dec
and
mov
sar
and
push
shl
add
add
jne
xchg
push
sbb
adc
jae
dec
add
sahf
jge
push
int
dec
cmp
stc
rol
add
jg
sahf
dec
mov
cmp
pop
mov
add
adc
sub
adc
add
add
xor
dec
or
sbb
pop
adc
(bad)
pop
xor
push
sub
sub
push
into
pop
dec
xor
push
sbb
add
enter
add
push
add
sbb
hlt
push
inc
je
push
pop
movs
pop
adc
sar
or
adc
pop
mov
add
hlt
mov
jl
loop
or
test
cs
adc
mov
mov
mov
add
fisttp
dec
cmc
leave
xchg
push
inc
push
dec
cs
jbe
dec
icebp
into
bnd
scas
add
add
add
push
repnz
loop
pop
pop
mov
cmp
sub
scas
push
cmc
push
loop
sub
cmp
add
add
jg
or
add
(bad)
shl
jmp
leave
mov
lea
popa
xor
add
sbb
add
add
xor
adc
sahf
push
inc
fs
fmul
xor
dec
ja
jb
add
add
inc
jp
mov
mov
inc
inc
repnz
push
int3
mov
cmp
add
add
jg
ja
inc
cmovge
add
pop
cwde
imul
adc
add
add
jmp
dec
movs
fiadd
movs
fstp
mov
pop
popa
cmp
jg
mov
or
add
inc
jmp
xchg
stos
push
ret
push
cs
test
jg
xchg
pop
call
add
add
mov
mov
cmc
data16
push
dec
mov
es
pop
fdivr
adc
std
push
xchg
jmp
pop
in
jne
and
push
sbb
clc
push
lods
sub
sub
add
add
repnz
push
and
dec
adc
pop
push
add
jmp
dec
push
rol
add
add
mov
leave
sti
mov
sti
add
enter
(bad)
and
nop
les
add
add
int3
stos
sbb
xor
xor
les
sub
call
add
add
test
int3
pop
lods
sub
shl
cmp
hlt
test
push
add
ror
add
add
outs
xchg
pop
mov
and
ja
push
imul
add
in
adc
add
add
adc
ret
push
enter
jle
xchg
or
mov
pop
xchg
(bad)
xor
and
add
add
stos
mov
ror
imul
xlat
cmp
in
lods
mov
sub
add
add
cld
lock
sbb
call
dec
movs
push
mov
cmp
inc
loope
add
inc
adc
pop
mov
mov
xchg
retf
mov
loop
adc
loopne
jne
mov
add
add
mov
jb
mov
fs
cmc
xchg
push
or
add
es
adc
mov
push
mov
add
(bad)
mov
sbb
pop
xchg
lds
xchg
add
add
inc
test
popa
xchg
les
sub
fs
sub
sar
fidivr
shl
or
add
add
xchg
jo
je
and
sbb
addr16
push
cmps
ds
adc
aam
rcr
je
add
add
inc
sub
push
jl
dec
xor
shl
pop
sbb
and
das
and
add
add
add
jge
or
data16
sbb
xchg
mov
push
ins
je
inc
dec
adc
retf
add
add
pop
jae
inc
jne
xor
inc
int3
and
or
xchg
cmp
je
or
dec
adc
add
add
stos
nop
adc
sub
pop
jae
and
sbb
and
mov
nop
mov
into
add
add
push
jg
or
sbb
mov
push
stc
pop
and
out
nop
in
clc
repnz
ins
(bad)
add
add
and
adc
or
adc
push
push
imul
movs
xor
adc
add
add
jno
jmp
xor
add
pushf
pop
mov
add
sub
adc
add
adc
or
adc
out
adc
pop
and
adc
adc
mov
out
push
in
stos
add
add
inc
loopne
push
xchg
inc
je
not
push
(bad)
xchg
mov
mov
ins
dec
xor
add
add
xchg
lock
test
or
scas
sbb
shr
pop
ins
add
mov
daa
std
adc
fld
add
add
cmp
(bad)
jb
(bad)
jnp
dec
cli
retf
mov
sub
pop
mov
fsubr
add
sbb
jne
sbb
int3
mov
adc
sub
test
push
jle
add
add
cmp
push
sub
mov
loope
lahf
es
mov
add
add
xor
in
adc
icebp
mov
je
pop
lods
mov
xor
add
or
imul
out
xchg
mov
or
arpl
xor
add
cwde
nop
daa
retf
movs
movs
push
sbb
outs
cmp
inc
push
pop
sub
test
sub
add
or
popa
sub
or
mov
fistp
xor
or
ret
xlat
pushf
dec
or
add
add
loope
ins
fcmovbe
and
call
mov
setne
cmps
push
and
dec
into
fcom
mov
(bad)
add
add
sti
cdq
scas
or
and
or
ja
and
cmp
jmp
dec
pop
repz
xor
add
add
movs
popa
mov
shl
cmc
jp
div
mov
ret
pop
je
inc
xor
data16
add
add
cld
add
xchg
movs
out
retf
push
push
lods
inc
leave
or
sahf
je
push
xor
add
add
sbb
sbb
sti
adc
mov
sbb
loopne
or
inc
inc
xor
sub
jne
add
add
mov
mov
frstor
in
movs
sub
jo
inc
cmp
mov
add
or
dec
mov
adc
into
les
cli
mov
movs
clc
(bad)
add
add
xor
in
dec
in
pop
fsub
jo
or
pop
xor
dec
outs
mov
add
add
sub
mov
dec
ins
mov
dec
loop
vzeroall
fwait
scas
inc
inc
xor
ins
add
add
mov
outs
adc
xchg
jae
xor
fadd
shl
pop
inc
sub
xchg
mov
fmul
aam
add
add
pusha
inc
(bad)
enter
dec
daa
fsubr
cmc
mov
fidiv
mov
cmp
in
loop
add
add
push
xor
mov
mov
aam
xchg
in
xor
in
loope
les
add
add
lahf
adc
je
push
(bad)
ret
add
mov
adc
mov
dec
and
out
mov
add
add
pop
mov
sbb
push
or
mov
mov
bound
call
sahf
inc
mov
and
mov
pop
lods
or
imul
(bad)
xor
clc
add
add
xor
sbb
mov
test
sub
lods
inc
adc
adc
mov
mov
add
add
popf
(bad)
out
inc
jmp
pop
sar
and
dec
dec
add
sub
inc
add
add
inc
and
cmp
inc
and
and
inc
fwait
push
pop
pop
and
popa
pop
mov
pop
add
add
iret
in
out
fcom
mov
jnp
or
push
jo
or
(bad)
fimul
add
add
jp
lea
jb
pop
or
jmp
mov
test
push
mov
shl
add
add
sub
mov
loop
lock
mov
jmp
push
mov
xchg
movs
sbb
or
add
add
push
cmp
call
push
test
mov
jne
sbb
add
add
call
mov
or
call
movs
pop
lods
and
adc
sub
add
mov
mov
mov
lods
mul
push
nop
or
and
and
retf
fisttp
push
cs
sub
sbb
loop
push
add
adc
test
pop
sub
push
mov
jo
mov
inc
push
sahf
sar
aam
idiv
add
add
daa
repnz
and
lods
cmc
or
cmc
inc
in
sub
pop
jl
or
je
lods
hlt
mov
push
dec
push
xchg
xor
add
add
mov
jo
add
pop
adc
xchg
sbb
pop
cwde
dec
lds
cmp
add
add
int
es
clc
fs
adc
add
sbb
or
dec
mov
xor
lods
inc
movs
add
add
mov
pop
and
fadd
jns
xchg
sahf
pop
fst
sbb
inc
xor
push
push
add
add
add
enter
add
and
xchg
test
push
xchg
xchg
lods
je
out
sub
aaa
dec
push
jno
add
add
gs
adc
mov
rol
pop
fisttp
and
mov
xor
add
mov
(bad)
pusha
mov
inc
cmp
adc
push
push
and
lea
dec
and
xor
call
or
sbb
xchg
and
push
push
add
add
mov
scas
adc
jge
xor
adc
mov
inc
dec
mov
mov
xchg
lea
stc
and
jnp
xchg
pop
xchg
cmp
xchg
pop
mov
lock
nop
xchg
out
dec
dec
add
add
xchg
adc
sar
nop
outs
call
push
int
lahf
sub
or
out
nop
movs
int3
stos
add
add
lea
icebp
mov
sbb
push
add
adc
and
dec
pusha
and
cmp
add
xor
mov
mov
mov
xor
push
mov
sbb
adc
add
push
cmps
and
add
add
fs
sub
dec
pusha
jns
push
inc
int
enter
fld
push
lea
add
add
nop
inc
sbb
cmc
in
or
cmp
cli
mov
mov
adc
mov
dec
add
add
retf
sub
dec
jge
test
xchg
sbb
pop
push
jg
lds
add
add
mov
dec
and
add
add
in
test
jne
adc
dec
add
add
(bad)
inc
rdtsc
mov
push
sbb
mov
popf
mov
gs
cmp
add
add
mov
mov
adc
push
sar
or
lahf
clc
mov
rcl
add
add
mov
push
cmp
xor
pop
cmps
int3
(bad)
xchg
cli
cmps
and
adc
pop
mov
pushf
pop
adc
ds
and
jnp
ret
push
push
repnz
ret
leave
hlt
jp
fs
or
pop
hlt
and
add
add
adc
in
push
xor
mov
repz
or
xchg
popf
inc
sbb
adc
add
add
cdq
jb
jl
dec
mov
movs
out
clc
jo
rcr
pop
xchg
cdq
dec
lock
cmps
je
in
jge
add
add
das
in
movs
jns
lods
mov
repnz
ja
jns
ret
bound
ret
jle
dec
xchg
add
add
scas
ror
hlt
mov
lds
lock
push
push
xor
loop
lds
scas
add
add
int3
(bad)
test
hlt
sti
dec
sbb
shl
xchg
outs
mov
loopne
cmps
adc
lock
mov
add
add
mov
outs
pop
xor
xchg
adc
cmc
out
sub
xchg
pop
cmp
sar
push
add
add
add
jno
(bad)
int3
fadd
(bad)
jmp
jnp
call
push
dec
enter
outs
add
add
and
dec
push
(bad)
xchg
call
pop
dec
or
xchg
sub
xchg
retf
dec
mov
add
xor
and
fist
mov
sub
adc
push
and
xchg
inc
push
add
adc
adc
sub
fsub
or
pushf
scas
sub
imul
add
add
and
mov
ret
jp
or
adc
sub
xor
or
add
hlt
add
add
loop
outs
and
cmp
jne
push
rol
adc
jnp
mov
rcl
fcom
adc
add
add
dec
adc
jmp
mov
xchg
jge
inc
inc
add
push
add
and
add
add
or
xchg
mov
inc
mov
mov
push
loopne
jge
mov
mov
out
dec
test
add
fiadd
test
add
jne
jge
push
cmps
sbb
jmp
sub
inc
sbb
xchg
dec
sbb
push
add
add
cmc
test
lea
dec
int3
push
in
movs
and
movs
xchg
pop
sub
leave
push
fsub
dec
xchg
dec
add
add
adc
xor
clc
aam
ret
push
test
sbb
mov
cdq
cmp
push
add
add
adc
(bad)
adc
pop
mov
mov
mov
and
repnz
push
add
add
shl
in
dec
mov
xchg
xchg
sbb
sub
sbb
loope
cmp
or
dec
loop
xchg
retf
add
and
cmp
daa
icebp
mov
aad
jo
adc
mov
mov
push
sti
adc
add
add
lods
rol
push
movs
jo
std
out
scas
push
(bad)
(bad)
cmp
or
mov
sub
add
push
and
sar
mov
pop
test
jne
push
jmp
xor
add
(bad)
and
aad
push
jne
jle
outs
inc
mov
xchg
fistp
pop
jle
in
(bad)
outs
add
add
sub
sbb
pushf
pop
imul
cwde
push
jge
cmp
sub
aas
and
dec
add
add
or
inc
jae
mov
cs
je
adc
scas
mov
sbb
(bad)
pop
push
adc
add
add
mov
lahf
add
inc
push
push
pop
enter
ror
dec
lahf
in
fst
push
je
add
add
pop
lahf
add
adc
jae
or
and
sub
cmp
rcl
jp
je
pop
add
add
jno
sub
sbb
pop
xchg
adc
pop
adc
test
adc
lods
jo
nop
stc
add
add
pop
mov
adc
(bad)
adc
rol
dec
jb
push
inc
ret
push
mov
push
push
dec
add
add
movs
mov
daa
adc
push
xchg
mov
dec
repz
and
ss
mov
xchg
das
dec
inc
add
add
xor
lods
rcr
mov
jne
les
xor
fnstcw
es
sub
add
add
add
and
adc
sub
xchg
imul
stc
push
lds
add
add
sbb
push
mov
and
and
mov
adc
jnp
adc
dec
add
js
add
mov
pop
adc
cli
and
sub
mov
test
xchg
pop
add
add
mov
jb
adc
daa
jbe
adc
mov
xor
mov
mov
hlt
add
add
pushf
jle
mov
scas
xor
inc
shr
jge
xor
sub
enter
add
add
sar
sbb
inc
sti
xor
cli
xchg
mov
or
sahf
out
repz
ret
fwait
add
add
push
jnp
cmc
pusha
mov
jl
mov
xchg
out
shr
add
mov
add
fs
std
sbb
jne
cmp
jns
or
add
mov
mov
push
mov
mov
mov
push
adc
add
add
and
mov
jmp
and
pop
add
pop
out
fs
popf
jne
cmp
add
xor
push
adc
imul
je
ja
call
dec
sbb
add
add
add
or
pop
xchg
outs
in
stos
or
sub
popf
popa
test
jp
mov
add
add
or
push
push
and
rol
(bad)
sbb
or
xchg
jl
push
add
cmp
gs
push
inc
sbb
push
push
xor
adc
or
add
add
test
mov
dec
mov
sbb
div
mov
jno
les
mov
fistp
ret
mov
pushf
ds
psllq
rcl
push
jmp
ins
jle
jmp
add
and
push
loopne
push
data16
in
xchg
fist
sbb
mov
xchg
add
add
fs
paddsw
popa
mov
lahf
push
push
push
ja
add
cdq
pop
add
add
pop
mov
loopne
sahf
mov
adc
dec
call
dec
and
jne
add
into
out
add
add
ret
sti
add
(bad)
jmp
pop
inc
test
jge
test
sbb
add
gs
mov
sub
add
add
lahf
sub
jl
imul
call
and
mov
test
nop
cwde
out
add
add
mov
adc
ror
xchg
lock
cli
clc
nop
mov
xor
or
or
add
jmp
mov
test
mov
out
inc
mov
mov
adc
inc
cwde
or
jbe
aaa
or
xlat
outs
idiv
mov
mov
push
lahf
popf
inc
nop
imul
add
jg
pop
inc
mov
mov
pop
sbb
add
xor
aaa
(bad)
push
and
xor
add
add
pop
add
jp
push
shr
cld
xlat
inc
and
push
pop
push
add
cmp
add
add
cs
imul
or
jmp
lock
dec
lock
jnp
xchg
je
add
add
sub
popf
pop
dec
inc
loopne
sub
retf
dec
les
adc
pop
inc
inc
pop
push
test
mov
pop
das
add
add
cmp
ins
mov
sub
xchg
lods
sahf
adc
and
rol
jg
scas
pop
int
add
add
or
mul
inc
add
push
mov
add
dec
sbb
adc
jl
add
add
add
push
dec
pop
inc
inc
add
jne
dec
push
ficomp
add
sub
add
add
add
jo
lea
add
push
inc
add
mov
and
pop
mov
out
cmp
add
add
pop
sbb
inc
dec
cld
adc
sbb
adc
push
fidiv
in
(bad)
(bad)
call
rcl
add
add
jecxz
das
and
int3
pop
loop
jmp
shl
add
dec
add
add
inc
sbb
sub
cmp
mov
xor
sub
or
pop
pop
inc
dec
adc
add
add
push
nop
mov
jle
push
lahf
add
pushf
jmp
ret
push
icebp
outs
jp
add
add
mov
dec
mov
or
out
adc
loop
adc
or
in
xchg
inc
fmul
jg
add
add
mov
dec
out
add
adc
test
(bad)
jle
movs
or
sub
push
jb
pop
test
add
add
loopne
sub
adc
adc
daa
and
lock
dec
add
ja
add
add
mov
adc
mov
pop
mov
dec
(bad)
sti
jge
in
lahf
fcom
pop
push
add
add
or
sbb
(bad)
aam
out
clc
jle
loopne
cwde
test
nop
mov
jne
jno
or
jo
test
push
in
sbb
jle
pop
dec
mov
or
or
cmp
xchg
shl
add
mov
shr
bound
lods
wrmsr
and
(bad)
jge
mov
in
sub
das
std
xor
xor
add
add
sub
fs
call
mov
aaa
sub
pop
into
sbb
add
inc
xor
shl
dec
shr
je
aad
out
sub
mov
sbb
lea
add
add
xor
shl
inc
enter
xchg
loopne
nop
xchg
popf
pop
dec
pop
fmul
adc
dec
mov
mov
pop
push
add
add
dec
and
xchg
sbb
cli
add
leave
push
dec
aaa
sbb
sbb
mov
add
add
sar
inc
mov
jns
mov
xchg
and
sub
mov
dec
push
out
sldt
add
fnstsw
adc
mov
jns
jmp
sbb
sub
repz
inc
sbb
imul
push
rol
add
lds
mov
jle
pop
adc
or
jae
inc
iret
mov
retf
stos
sbb
and
out
ret
jmp
shr
stos
daa
cmp
xchg
test
push
sub
xchg
daa
ficomp
add
popa
ja
jae
cmp
mov
ss
int3
pop
sub
pop
test
push
scas
das
das
push
and
sub
jb
and
add
add
outs
jle
add
mov
xor
nop
shl
mov
cs
jb
sbb
inc
push
js
add
add
adc
adc
adc
add
xchg
jae
imul
add
lods
push
jle
jle
and
add
clc
lods
lock
shl
mov
dec
cmps
pop
clc
dec
cdq
add
add
cmps
aas
sub
jne
mov
push
xor
push
sbb
adc
je
rol
add
loopne
adc
sbb
mov
mov
xchg
lds
push
sub
out
sub
add
add
pop
daa
clc
push
xor
popa
adc
icebp
dec
xor
stc
lea
jmp
inc
xor
rol
add
add
popf
test
js
jno
or
inc
scas
outs
aam
fucomp
cmp
clc
call
add
adc
mov
add
lea
push
pop
and
mov
cld
or
xor
sub
and
pop
pop
jno
or
das
push
cmc
push
add
sbb
inc
jns
mov
add
add
add
xor
and
fnstsw
adc
pushw
pop
mov
sub
test
dec
xor
out
dec
add
add
and
and
adc
jno
shl
pop
imul
or
add
add
mov
pusha
pusha
adc
jmp
sub
inc
pop
loop
sbb
aas
ror
sub
add
add
in
dec
cmpnltps
push
cdq
neg
jne
add
mov
pop
xchg
je
or
inc
dec
add
add
push
cs
mov
sbb
call
xchg
adc
cmps
xchg
add
xor
scas
and
outs
jecxz
add
add
inc
mov
pop
cmc
mov
movs
add
fldenv
jl
adc
dec
push
sbb
add
add
xchg
loope
dec
and
cmovno
stos
fldenv
cmps
xor
gs
ret
add
add
jmp
jo
sub
add
mov
jne
out
pop
pop
gs
dec
cld
mov
adc
add
add
mov
jns
xor
cld
push
clc
pop
pmulhw
jl
(bad)
mov
and
shl
push
add
add
or
lea
sbb
bound
or
dec
push
mov
and
inc
or
adc
cmp
popf
cld
add
push
xchg
(bad)
mov
aam
and
cmc
jns
dec
cmp
add
add
and
into
pop
xchg
jp
push
dec
leave
dec
sub
rol
mov
ja
or
mov
add
add
sub
pop
daa
push
leave
and
daa
push
clc
ins
mov
push
or
add
neg
or
add
(bad)
xor
cs
and
stos
fisub
pop
and
in
into
test
prefetchwt1
loopne
jge
add
add
into
cli
mov
push
mov
bound
xchg
lock
pop
test
pushf
mov
or
mov
push
sbb
sbb
out
mov
pop
push
repz
mov
xor
std
inc
and
or
mov
mov
jne
and
dec
jmp
shl
test
push
rol
femms
add
add
inc
retf
mov
in
inc
outs
loope
(bad)
jb
clc
rcl
xchg
lds
cli
aas
mov
aam
add
cmp
enter
push
rcl
(bad)
jl
add
add
rcl
jns
pop
cmp
rcl
pop
xor
and
adc
jne
inc
push
sub
add
add
push
or
pop
dec
jbe
cs
pop
aaa
fcomp
push
mov
jmp
movs
push
xor
add
add
shr
push
sub
adc
adc
push
jns
jge
rcl
jbe
inc
div
add
add
mov
or
in
cmps
or
loope
cmp
je
movs
pushf
mov
cmp
pop
add
add
jb
stos
cmps
sub
push
shr
sub
adc
jne
fst
ds
stc
outs
jns
xor
add
add
je
in
sub
mov
test
and
aad
push
popf
xor
push
add
cmp
pop
int3
adc
in
or
dec
enter
aaa
mov
push
inc
adc
rcl
sbb
fld
(bad)
xchg
stos
mov
mov
repnz
sub
cmps
mov
enter
add
or
loope
test
aam
inc
adc
add
add
(bad)
ins
cs
mov
daa
push
sbb
out
(bad)
fld
or
neg
(bad)
xchg
dec
stos
xchg
imul
add
add
and
and
fisubr
outs
mov
or
ja
mov
loope
jb
or
jle
add
add
bound
sbb
dec
mov
cli
out
aad
xchg
xchg
pop
mov
xchg
xor
cmp
mov
add
add
mov
cmp
xchg
or
jmp
hlt
(bad)
fst
imul
jmp
add
add
fdiv
mov
mov
les
or
push
fdivr
data16
add
add
add
rcl
sub
mov
repz
and
push
dec
sbb
and
fdivr
or
add
add
or
cmp
push
or
cld
call
mov
jl
xchg
xlat
xchg
xor
aam
imul
dec
mov
push
addr16
inc
in
mov
add
add
inc
mov
dec
xchg
gs
sub
jg
xor
jb
push
add
add
sbb
mov
adc
jecxz
sbb
push
or
test
leave
stos
icebp
pop
adc
or
add
add
fmul
(bad)
fwait
iret
pop
push
test
sti
cmps
sub
push
xchg
adc
push
pop
test
mov
add
add
mov
fcomi
and
cmps
inc
inc
xchg
sub
lds
jge
mov
sbb
push
or
in
adc
add
hlt
adc
mov
inc
sbb
cld
inc
pop
dec
push
out
mov
pop
mov
add
add
leave
add
or
xor
cmp
jmp
xlat
push
xchg
sbb
adc
or
add
add
gs
test
xchg
rcl
(bad)
jmp
dec
adc
fimul
adc
add
add
jmp
inc
xor
clc
lock
(bad)
ss
xlat
aas
and
mov
jmp
add
add
out
mov
shl
jb
jmp
jmp
sahf
pushf
and
leave
test
and
add
cmp
add
mov
adc
xlat
mov
in
xchg
jmp
(bad)
add
add
dec
adc
jmp
retf
repz
call
fld
stos
dec
(bad)
test
test
into
jae
add
add
pop
icebp
retf
ret
push
mov
mov
and
inc
in
outs
dec
clc
mov
cdq
add
add
xchg
push
adc
mov
push
adc
xor
add
jae
(bad)
mov
dec
add
add
rol
cmp
adc
xchg
dec
mov
dec
ror
sbb
mov
add
loope
aam
jae
mov
add
push
pinsrw
fs
stos
inc
adc
add
mov
add
add
adc
add
in
xchg
xchg
push
mov
mov
clc
xor
in
adc
cmps
fsubrp
pusha
cmp
add
add
je
mov
imul
mov
dec
xor
sahf
inc
imul
jl
and
add
jno
push
pusha
(bad)
xor
sub
lock
or
int
mov
add
add
xor
jae
loop
(bad)
fldenv
sbb
test
icebp
mov
jge
and
add
add
sub
push
retf
dec
mov
adc
test
mov
push
cwde
fdiv
clc
push
fnstcw
loop
clc
fmul
jg
out
and
pop
and
adc
push
hlt
mov
jl
rcl
add
add
and
out
aad
sub
adc
pop
les
lods
addr16
inc
xor
daa
pop
stc
jge
jg
jbe
add
add
leave
jne
inc
push
cmp
sar
inc
call
dec
out
jb
jno
daa
xlat
xchg
leave
push
out
add
add
sub
mov
call
pop
or
mov
inc
int3
mov
push
jae
fdivr
add
inc
push
je
fadd
cld
(bad)
lock
std
dec
test
inc
out
movs
out
add
dec
mov
and
rol
add
add
push
push
retf
imul
es
les
movs
in
mov
lods
push
add
and
lods
pop
adc
add
add
push
outs
retf
dec
or
loop
fwait
and
mov
add
and
lock
aam
cmp
add
mov
jge
cmps
mov
rol
mov
and
icebp
fcomp
and
pushf
aaa
(bad)
out
add
add
out
and
rcl
movs
sub
and
cmps
enter
adc
inc
add
add
dec
adc
cmc
cmp
adc
add
jmp
rcr
bound
add
add
je
dec
jmp
dec
cld
mov
dec
test
mov
in
push
daa
aam
jns
pop
cmp
adc
add
sbb
mov
adc
lock
lahf
push
jmp
adc
hlt
or
(bad)
ss
mov
cmp
daa
cmp
fstp
dec
add
inc
in
push
cmp
jmp
push
jno
adc
lds
cmp
inc
add
add
push
xchg
daa
add
sbb
add
dec
sbb
sbb
or
xlat
pushf
out
test
xchg
call
add
je
sub
or
push
test
je
xor
or
push
jae
push
add
add
or
ds
mov
sbb
cmp
jl
or
and
cmp
push
add
add
jg
(bad)
jmp
mov
inc
add
add
sbb
imul
dec
add
add
add
mov
(bad)
sbb
shl
push
out
ret
shr
cmp
jecxz
shl
sldt
add
mov
call
call
mov
push
shr
dec
lods
cmp
add
add
inc
sbb
jmp
cmp
sub
sbb
inc
mov
out
xor
add
dec
in
xlat
imul
gs
ja
lahf
rcl
push
cli
fmul
add
xor
lods
sbb
jmp
or
push
lock
rcl
mov
ja
add
add
xor
les
das
or
sub
xor
add
ret
pop
mov
scas
repnz
dec
stos
mov
mov
lds
add
add
mov
loope
cmp
fs
and
mov
sub
neg
pop
inc
add
add
sub
cmp
add
add
aad
rcl
pushf
add
jg
inc
xor
rcr
or
aad
ror
and
test
xchg
adc
adc
enter
adc
adc
shr
xchg
fistp
leave
adc
sbb
or
test
add
or
or
les
add
stos
mov
sub
sti
retf
add
add
xor
mov
mov
inc
nop
pop
fld1
mov
adc
stos
inc
lods
mov
lea
add
add
fdivr
jnp
cs
fdiv
xchg
inc
stc
or
and
inc
movs
into
sbb
or
ficom
fcomp
and
dec
mov
sar
inc
in
mov
push
mov
dec
add
xor
add
add
out
sub
loop
inc
in
je
aad
lock
dec
syscall
jmp
pop
and
mov
add
sub
add
fchs
adc
jmp
or
jo
xor
es
rol
add
mov
loopne
test
jp
ror
in
fnsave
dec
push
mov
inc
pop
cmp
into
mov
pushf
dec
daa
sub
neg
and
lods
jbe
jmp
xchg
push
imul
and
add
add
inc
cmp
shl
and
mov
(bad)
jns
pop
or
jmp
or
retf
add
add
or
fs
rol
mov
xchg
(bad)
call
retf
ins
mov
aaa
outs
xchg
adc
add
add
loope
gs
test
test
sbb
cmps
jb
or
ret
xchg
or
inc
nop
add
add
scas
mov
imul
jmp
mov
in
add
pusha
xor
jmp
mov
rdpmc
cld
push
dec
out
cmp
movs
add
add
jae
repnz
mov
cmp
loopne
cmp
and
std
jns
sahf
lock
jge
sub
(bad)
jg
add
add
jl
inc
push
cmc
out
pop
(bad)
mov
fsubr
pop
jl
and
iret
es
xchg
jbe
cwde
(bad)
push
add
add
jmp
cdq
fwait
add
push
xchg
arpl
retf
pop
push
mov
sub
add
add
pop
sbb
push
mov
fadd
add
sub
sar
add
pop
mov
in
add
add
and
ficom
lea
stc
inc
jne
inc
push
push
mov
sub
call
mov
add
mov
sub
repz
ja
xor
loope
nop
inc
jns
dec
or
push
sbb
cmp
add
add
sti
jo
add
ins
pop
adc
cwde
retf
or
shr
add
add
repnz
or
loop
add
retf
test
or
call
jmp
add
add
pop
ja
pop
mov
lods
lock
movs
or
clc
sub
test
bound
mov
push
cmps
pop
inc
add
add
retf
jg
jo
add
sbb
or
push
and
mov
xchg
xchg
jmp
add
add
sub
cdq
xchg
cmp
retf
xchg
cmc
adc
inc
call
fisubr
daa
add
pushf
enter
test
inc
enter
push
xchg
cmp
add
add
add
fist
xor
dec
das
je
leave
adc
rcl
in
mov
daa
dec
inc
(bad)
lahf
jmp
add
cs
sub
jnp
loopne
dec
sti
sar
push
sub
push
inc
cdq
or
add
add
outs
xchg
or
mov
pop
cmp
clc
jno
ret
fcmove
add
add
add
inc
mov
pop
and
adc
ror
sub
add
add
sub
outs
int3
xchg
xor
sbb
jl
clc
mov
adc
and
add
inc
cmp
inc
in
adc
stc
retf
jne
in
mov
jmp
pop
xchg
inc
mov
add
add
sbb
adc
inc
mov
jbe
cwde
mov
fwait
mov
sar
fsub
jns
add
add
inc
sub
out
adc
pop
mov
mov
mov
mov
cmp
add
add
sbb
mov
dec
or
mov
arpl
cmps
push
(bad)
add
add
mov
test
addr16
pop
ror
gs
test
add
add
jge
pop
fisub
lods
add
jo
rol
es
xchg
xchg
jo
enter
add
(bad)
adc
inc
xor
nop
test
cli
test
jno
and
xchg
pop
inc
add
test
add
add
pop
mov
adc
inc
push
inc
lea
inc
and
nop
(bad)
xacquire
adc
or
add
add
mov
dec
dec
call
inc
inc
les
and
xor
out
cdq
into
pop
and
add
add
sub
(bad)
and
inc
lods
jns
(bad)
scas
xor
xor
adc
add
add
imul
add
cmp
jae
pop
dec
fisub
adc
adc
pusha
push
cli
add
add
ins
or
stos
jge
cmp
or
and
loope
and
add
pushf
cmp
add
je
mov
add
add
jge
mov
sub
pop
and
jne
sub
sahf
inc
clc
or
shr
add
add
ret
xor
ja
xor
cli
add
adc
dec
jl
dec
mov
pushf
jne
push
call
add
sub
cmp
mov
lea
push
inc
outs
add
push
push
(bad)
mov
add
add
cs
jne
lods
fist
and
xchg
adc
or
inc
push
adc
jp
scas
mov
test
dec
fimul
(bad)
cmp
lock
call
mov
xchg
mov
(bad)
pop
dec
sbb
in
add
add
mov
mov
leave
xlat
jns
dec
mov
stc
or
ficom
inc
add
add
cmps
or
xchg
mov
ret
mov
cmp
enter
cld
je
mov
ss
es
pop
pop
add
add
in
ret
sar
dec
pop
ror
call
cmps
dec
lods
loopne
imul
adc
add
cmp
es
in
adc
mov
mov
in
pushf
dec
mov
sub
push
into
add
add
mov
stos
xor
movs
lods
adc
adc
pop
aas
pop
jae
inc
adc
xchg
mov
add
add
add
cli
mov
or
cmp
jae
cmp
jmp
jns
xchg
nop
xor
loopne
jns
mov
add
mov
pop
xchg
cs
inc
clc
and
nop
lods
lock
mov
mov
cwde
add
add
movs
lods
fidivr
push
adc
cld
lock
mov
pop
sbb
ja
iret
sub
fild
add
add
add
or
shl
mov
push
gs
cmc
mov
dec
imul
add
add
shr
inc
imul
xchg
mov
ds
sub
adc
enter
adc
cmp
add
sbb
sar
and
or
clc
or
test
add
mov
or
add
add
pop
xor
dec
scas
bound
and
add
or
repnz
inc
das
stc
jae
add
add
cmp
add
push
cmp
pop
jmp
sbb
fs
xchg
xor
ins
add
add
add
sub
in
int
and
xchg
aas
(bad)
dec
push
dec
in
inc
daa
mov
mov
adc
mov
inc
add
add
fld
jmp
adc
gs
ins
jae
sub
add
jmp
adc
mov
aaa
push
mov
nop
fsubr
(bad)
movs
in
sub
sbb
xchg
sub
add
jmp
and
add
add
shl
addr16
(bad)
fild
push
mov
ss
adc
std
cmps
rol
add
js
add
sbb
ja
mov
fistp
sahf
call
retf
pop
lock
adc
fnstsw
imul
sub
nop
aad
jbe
jno
sub
add
pop
jne
test
mov
hlt
and
add
add
xchg
pop
(bad)
(bad)
jmp
and
ss
xchg
test
dec
adc
add
add
adc
dec
sub
mov
jo
xor
sti
sub
mov
pushf
cmp
mov
add
add
jmp
out
sub
stos
adc
adc
inc
cmp
hlt
fist
ret
jae
add
add
bound
pusha
int3
cli
loop
pop
cli
jae
dec
xchg
and
inc
jbe
mov
jae
leave
add
add
pop
(bad)
fisttp
pop
cwde
and
imul
push
mov
sub
and
push
inc
add
add
jg
mov
or
les
jbe
gs
mov
push
clc
add
out
cld
add
add
adc
mov
cdq
sub
jmp
mov
cmp
(bad)
and
add
add
fist
icebp
out
or
(bad)
out
xchg
cmp
int3
aaa
stc
aad
lods
imul
push
add
add
repnz
xor
mov
mov
or
jns
mov
mov
add
mov
jnp
inc
cmp
punpckhbw
mov
dec
sbb
mov
add
add
dec
and
ins
aaa
cmp
push
in
mov
cmp
test
dec
sbb
inc
movs
repnz
add
sub
lahf
js
pop
pop
movs
or
push
pop
jl
add
int
xchg
das
jmp
(bad)
fisubr
add
add
push
inc
rcr
inc
or
add
sbb
test
dec
jnp
adc
scas
fld
out
sub
add
add
pop
ror
sub
mov
shl
movs
je
mov
pop
cmp
add
cmp
clc
mov
xchg
hlt
mov
sub
xor
push
push
jb
sbb
xchg
xchg
push
nop
ret
inc
cwde
jae
mov
add
dec
loope
xchg
and
jl
xor
adc
enter
mov
push
cwde
jecxz
add
add
cmp
es
inc
inc
inc
dec
leave
push
push
sbb
and
sbb
add
jmp
add
add
shl
es
and
inc
and
and
add
adc
cmp
add
add
dec
inc
out
jecxz
mov
out
loopne
mov
jo
cmp
or
push
add
add
sub
add
inc
(bad)
mov
pop
imul
lock
inc
lock
mov
add
add
aam
xchg
push
popf
mov
std
and
or
aam
sbb
add
add
push
sub
pop
fdivr
inc
ss
dec
mov
inc
push
sbb
jno
inc
jmp
cli
fistp
add
xchg
aas
xchg
scas
cdq
(bad)
xor
or
inc
sbb
scas
aas
lock
popf
xlat
sahf
sub
mov
mov
out
jbe
lods
jg
nop
popf
xlat
cmp
cli
sbb
fisub
cld
int
test
cs
add
add
fwait
sub
mov
lods
das
cld
lock
xchg
xchg
out
test
lock
dec
hlt
and
add
push
inc
nop
mov
(bad)
push
adc
in
inc
inc
xchg
or
and
adc
mov
sbb
add
fcomp
mov
fdivr
mov
adc
lock
add
xchg
cmp
clc
adc
pusha
sbb
adc
adc
hlt
or
clc
inc
jne
mov
fs
jp
lea
in
frstor
mov
fmul
push
add
add
leave
sbb
inc
inc
push
mov
scas
cmp
add
nop
mov
mov
xor
in
adc
jne
add
add
dec
or
jge
sahf
cmp
jmp
ret
iret
xchg
lea
mov
add
add
jne
cmps
xor
jmp
push
pusha
fcomp
adc
out
rcl
xchg
inc
movs
addr16
hlt
push
add
add
cmps
clc
test
push
clc
push
(bad)
mov
(bad)
clc
sbb
cmc
jns
cmps
push
xchg
repnz
adc
add
repnz
push
xchg
arpl
inc
in
jbe
repnz
sub
add
add
hlt
cli
dec
call
cmp
inc
push
adc
pop
call
mov
test
mov
clc
pop
ficom
aam
(bad)
jo
rol
enter
cmp
or
out
push
jecxz
add
add
cmp
jae
dec
push
sub
daa
dec
pop
dec
mov
adc
ins
inc
cmp
add
imul
test
fs
test
push
in
outs
mov
nop
push
mov
fbld
jp
shl
ja
add
ret
fiadd
add
add
jnp
adc
add
popf
gs
mov
adc
inc
inc
test
add
add
push
lea
push
call
popa
and
jmp
mov
in
push
aad
add
add
and
pusha
ror
adc
push
leave
cld
xlat
icebp
nop
fdivr
mov
mov
test
add
add
je
sbb
mov
enter
mov
xor
les
out
cmp
add
add
sahf
jecxz
inc
or
les
out
xor
cmp
mov
mov
pop
inc
add
add
pop
push
adc
daa
mov
and
(bad)
cmovl
add
add
xor
test
cdq
test
(bad)
or
stc
jnp
out
sbb
and
jp
loopne
add
add
or
add
ins
out
or
mov
add
shr
rcr
leave
sub
xor
add
iret
sub
cmp
push
jl
jle
jmp
lock
ret
mov
jne
shr
xchg
repz
jle
out
add
add
or
jle
push
xchg
fbstp
inc
adc
push
inc
sub
out
sub
cwde
add
add
or
push
paddusb
mov
cld
outs
xchg
adc
add
call
lock
adc
fdivr
pop
shl
pop
dec
pcmpgtb
adc
push
inc
cmp
add
add
dec
pop
mov
ret
adc
jnp
mov
sahf
lods
aam
xchg
ficomp
cmp
scas
push
jae
add
add
je
enter
daa
add
mul
mov
or
(bad)
push
push
push
fisubr
add
xchg
mov
retf
mov
adc
dec
push
fisttp
or
aad
sahf
cmp
add
add
(bad)
mov
pop
(bad)
aad
int3
add
hlt
mov
add
call
mov
sub
adc
xchg
sub
mov
xchg
imul
pop
scas
cmp
cmp
add
call
shl
add
cmp
push
jmp
inc
xor
lods
push
sbb
add
std
call
mov
movs
scas
mov
and
sub
cmp
push
mov
lock
pop
jns
add
add
mov
adc
stos
pusha
or
sub
daa
jbe
dec
rcr
cdq
jge
push
sbb
jecxz
xchg
lods
scas
icebp
and
out
cmps
or
sub
pop
push
add
add
push
fs
loop
pop
mov
rol
push
push
dec
xchg
ins
adc
inc
(bad)
jmp
clc
rol
(bad)
push
cmp
jbe
sub
mov
stc
loope
or
dec
sbb
add
out
sahf
out
push
aad
pop
pop
add
add
call
mov
mov
jb
sub
add
push
bound
or
aad
sub
jb
cld
jmp
test
adc
and
call
add
or
add
rol
jmp
fwait
or
mov
adc
nop
int3
mov
dec
dec
sub
fimul
sar
inc
cmps
retf
dec
xor
add
ss
and
in
or
pushf
inc
dec
psignw
mov
adc
and
dec
or
aad
(bad)
shl
adc
jmp
and
jmp
and
jmp
adc
xchg
add
in
cmps
ins
mov
test
fs
or
mov
leave
ret
add
add
nop
and
cmp
dec
adc
sub
je
(bad)
sar
cmp
std
add
add
in
cld
icebp
lock
test
lock
xchg
mov
les
and
bound
inc
arpl
or
add
add
or
and
add
ss
dec
out
ds
sub
test
stc
or
push
push
add
add
nop
sub
dec
pushf
mov
out
mov
jbe
pop
call
shrd
(bad)
int3
mov
add
add
adc
sub
je
adc
mov
dec
adc
dec
or
sahf
pushf
add
add
push
and
dec
fs
dec
sub
nop
push
mov
adc
mov
add
add
mov
cli
repnz
push
push
mov
fiadd
(bad)
push
push
call
pop
pop
clc
fstp
add
add
sub
data16
pop
inc
add
pop
leave
ret
xor
shl
add
add
dec
call
push
jne
hlt
add
inc
dec
js
mov
pop
mov
add
mov
sbb
or
repz
push
pop
out
sub
call
add
add
cli
sub
neg
test
mov
test
in
mov
sbb
add
int3
sub
push
and
inc
xor
mov
sub
sub
sbb
add
add
and
test
pushf
(bad)
xor
(bad)
scas
and
or
(bad)
or
xor
adc
add
add
imul
push
loopne
mov
jae
sbb
or
adc
sbb
add
add
mul
ret
xlat
mov
call
fcomp
js
and
xor
push
and
add
add
pusha
mov
fs
push
pop
xor
add
dec
adc
push
push
push
js
add
add
sub
xlat
sti
lock
loopne
not
std
(bad)
ss
je
inc
in
mov
pop
mov
(bad)
loopne
adc
mov
push
ffreep
jnp
adc
lods
(bad)
inc
scas
popf
and
jne
add
das
das
jne
add
pop
popf
pusha
add
out
jns
jns
test
jmp
std
lds
add
add
repz
neg
lock
push
retf
sti
sbb
dec
cmp
gs
stos
sar
cmp
add
or
je
loope
sahf
adc
mov
add
adc
icebp
cdq
jnp
out
add
add
mov
or
rol
js
repz
sbb
outs
out
stc
add
add
imul
xor
and
xchg
sub
pusha
mov
int3
mov
adc
add
add
clc
push
in
add
pop
push
and
cmp
mov
mov
mov
rcr
add
inc
clc
mov
add
add
push
loop
mov
sti
and
mov
cmp
adc
mov
push
sbb
add
add
xchg
xchg
call
add
mov
data16
inc
out
or
push
sbb
cmps
xchg
cli
xor
add
add
mov
pushf
icebp
cld
cmps
or
in
into
xor
add
add
push
dec
adc
std
std
adc
dec
repz
sub
or
mov
xchg
jno
scas
cmp
add
or
push
out
sub
or
pop
das
push
out
push
inc
sbb
add
add
jge
cmps
arpl
adc
push
inc
jne
dec
rcr
adc
dec
shl
pop
add
add
dec
cmps
ja
mov
test
pop
inc
aad
xor
out
iret
mov
cmps
pop
push
stos
inc
test
adc
stc
addr16
das
mov
rol
or
out
inc
inc
dec
sbb
push
mul
rol
add
in
inc
mov
mov
push
or
sub
mov
and
push
dec
shl
add
add
lods
sub
sub
mov
into
xlat
lock
or
xchg
inc
sbb
nop
mov
aam
mov
add
add
test
popf
out
jmp
or
rcr
cmp
add
add
(bad)
popf
xor
jg
sbb
add
pop
out
dec
pop
mov
adc
shr
add
jle
dec
js
dec
stos
mov
outs
fbld
mov
inc
nop
cld
xor
out
dec
add
add
loopne
adc
or
loop
(bad)
xchg
int
xor
jge
jle
iret
stos
fsubr
add
daa
std
fldcw
or
je
into
or
add
sub
repnz
jg
icebp
repnz
jns
lods
and
add
add
inc
fs
xchg
mov
shr
ret
inc
adc
add
inc
jecxz
add
add
push
jne
popf
bound
popa
enter
in
or
mov
cld
aam
add
add
add
sub
adc
fs
jb
inc
in
adc
or
add
lods
sbb
add
add
inc
pusha
test
pop
mov
jo
dec
ins
popa
jbe
xchg
or
mov
add
leave
add
add
fst
(bad)
nop
iret
imul
mov
jo
mov
add
pop
stos
imul
iret
jns
retf
jge
jo
cmp
push
xchg
dec
fucomi
addr16
adc
fsubr
cmp
xor
(bad)
push
push
adc
jmp
xor
punpcklwd
sbb
add
add
(bad)
pop
dec
rcr
xchg
test
mov
push
fcom
fadd
pop
enter
sahf
dec
add
add
test
add
push
ja
and
sub
lock
mov
test
add
add
push
add
inc
xor
xchg
popa
mov
aaa
aam
cmp
cli
rol
add
add
jg
scas
dec
xor
mov
mov
pop
lea
retf
dec
or
repnz
in
call
add
add
pop
std
inc
sub
xchg
adc
and
(bad)
enter
pop
mov
xchg
push
outs
movs
jmp
sar
lods
push
sub
call
lahf
jnp
pushf
sub
imul
add
and
mov
movs
lock
popf
shl
jmp
les
push
add
add
pop
or
in
push
ret
popa
imul
cs
mov
cmp
lock
add
xchg
adc
jg
imul
cmp
(bad)
shl
cmps
sbb
loopne
aam
pop
push
or
add
add
scas
fld
out
das
enter
pop
je
push
loope
pop
sbb
aam
or
lods
mov
add
add
loope
ret
ja
push
adc
adc
leave
and
xor
add
xor
out
pop
punpckhbw
aad
add
add
push
pushf
and
ds
pop
fimul
mov
jne
fimul
xor
(bad)
push
add
add
sub
cmp
loope
test
movs
mov
in
xchg
push
jb
mov
add
add
das
jmp
and
and
stos
or
jle
inc
jmp
push
sbb
pop
stos
sbb
add
popa
hlt
jmp
xchg
inc
lock
movs
or
aaa
leave
(bad)
pop
jb
adc
loope
sub
add
add
xchg
pop
dec
inc
lock
(bad)
push
adc
mov
int3
or
dec
mov
add
add
fsubr
scas
popf
xchg
cmc
or
sahf
push
fsubr
in
and
inc
test
or
stc
movs
test
add
add
in
jnp
add
sti
jno
mov
push
fs
fdivr
out
iret
add
add
aam
stos
or
shr
in
pusha
ror
mov
add
jmp
in
sub
stos
push
jmp
mov
mov
add
xchg
mov
jae
add
add
cld
add
cwde
cmps
mov
sbb
inc
outs
and
jno
push
mov
lock
lea
inc
lods
inc
test
cmp
push
nop
fadd
test
mov
test
aas
movzx
pop
imul
rol
add
add
repz
dec
ror
mov
and
js
sbb
sbb
inc
or
sub
cmp
test
push
test
sub
mov
lds
add
add
push
imul
add
inc
movs
inc
push
repz
inc
inc
add
(bad)
xchg
sti
pusha
or
push
and
and
and
sti
and
adc
or
pop
inc
loope
inc
pop
add
add
adc
out
mov
jnp
daa
es
pop
sar
mov
hlt
mov
bound
je
or
sub
add
add
cli
or
add
adc
mov
and
aas
and
test
add
dec
add
sub
and
push
pop
inc
lahf
inc
pop
sub
enter
jb
dec
sub
add
add
jmp
sbb
in
pop
adc
loop
mov
mov
imul
add
sub
or
or
push
mov
inc
xchg
sbb
mov
push
movs
pop
and
cmc
scas
mov
aas
lahf
dec
xchg
imul
xchg
mov
xor
adc
xchg
or
cmp
or
add
add
add
cwde
push
dec
mov
daa
or
add
mov
push
or
adc
add
and
scas
add
hlt
xchg
js
xor
sbb
or
inc
xchg
inc
and
xor
and
jl
inc
push
xchg
or
push
push
sub
data16
imul
add
outs
push
and
jne
push
sub
or
out
dec
and
sub
nop
and
add
or
in
aaa
fs
lea
clc
push
cmp
dec
xchg
mov
cmp
test
cmps
and
or
push
sub
dec
retf
and
dec
push
rol
add
inc
cvtpi2ps
sbb
test
jle
loopne
or
push
lea
popf
push
retf
add
add
test
inc
pop
leave
ror
push
sub
lea
(bad)
and
bound
dec
adc
add
add
fld
in
jno
ss
lds
push
sti
dec
xor
jns
jo
and
add
add
mov
jle
pop
(bad)
fsubr
(bad)
outs
adc
je
adc
xor
jno
mov
add
add
add
aad
add
adc
sub
fcom
jmp
xlat
mov
inc
add
add
inc
pop
jg
in
pmaxsw
push
mov
adc
mov
(bad)
cld
loop
aas
and
add
add
outs
xchg
test
xor
pop
inc
mov
mov
popa
mov
dec
xchg
jge
xor
dec
in
add
add
inc
leave
aas
push
mov
loop
daa
mov
addr16
mov
adc
inc
and
or
mov
add
ror
cmp
test
mov
add
sbb
add
add
cdq
mov
dec
xchg
inc
or
push
leave
push
xor
mov
cli
push
mov
mov
add
add
wbinvd
or
je
and
aad
jmp
enter
mov
rcr
jns
add
add
mov
xchg
push
cmp
xchg
push
ror
inc
jmp
cmp
cmp
dec
add
add
adc
mov
and
xor
push
nop
add
rcl
adc
int
mov
add
pushf
repnz
sub
xchg
mov
dec
or
stos
test
push
sub
jne
adc
add
addr16
aas
repnz
adc
in
mov
mov
(bad)
mov
jp
add
add
or
arpl
stos
sub
ds
bound
mov
mov
inc
and
popf
mov
mov
clc
dec
push
and
movs
or
retf
cwde
mov
lea
add
push
jo
adc
and
mov
adc
sub
dec
dec
sub
add
adc
sub
fadd
test
outs
inc
add
add
or
inc
add
mov
cs
xor
loope
lock
add
push
xchg
or
ins
or
or
mov
cdq
and
je
sbb
mov
push
sub
add
outs
mov
xor
arpl
ss
and
add
sbb
test
add
jo
mov
push
sub
pop
push
dec
mov
inc
cdq
add
add
jbe
loope
xchg
jmp
sbb
movs
or
push
sar
and
inc
sbb
inc
add
add
xor
sbb
pop
xchg
mov
hlt
and
jl
or
pusha
and
popa
cmp
loop
add
add
sub
daa
imul
cmp
push
jmp
movs
sub
pop
shl
in
ss
sub
int3
add
add
adc
sbb
inc
daa
sub
psrlw
dec
sbb
retf
imul
mov
add
add
or
jo
lea
movs
mov
stos
popf
mov
test
xor
push
(bad)
push
bound
je
mov
setns
aas
lea
ror
clc
push
ror
adc
xchg
ins
pop
sbb
sub
push
lahf
stc
add
add
pop
xchg
test
add
sub
jle
ja
or
retf
mov
lea
or
cmp
add
fisubr
and
shl
xor
and
mov
repz
push
xor
sbb
cmp
in
rol
add
xor
test
pop
xor
jge
popf
xchg
(bad)
mov
ss
hlt
adc
mov
in
fucomp
add
add
not
and
adc
sub
inc
pop
sbb
popa
add
je
mov
sbb
pushf
call
add
add
in
or
push
out
jge
or
mov
dec
dec
jno
mov
dec
in
jne
dec
adc
add
add
cld
mov
adc
data16
je
inc
inc
add
xor
push
add
mov
mov
mov
add
test
dec
sub
xchg
push
and
mov
add
inc
add
add
cdq
sahf
dec
and
jbe
jmp
ins
push
ss
mov
xor
dec
es
cmc
outs
xchg
pusha
add
add
aad
mov
mov
shl
cld
inc
add
and
push
xchg
add
repz
mov
sbb
and
add
add
mov
adc
pop
arpl
jbe
cmp
mov
push
aam
add
add
mov
or
mov
adc
js
dec
jns
dec
sbb
inc
aas
xor
arpl
add
add
ins
cs
mov
mov
jp
inc
sub
adc
dec
inc
or
add
add
add
add
pfcmpge
lods
jge
test
jno
jp
and
jle
xor
cdq
lods
les
or
jg
add
add
(bad)
sbb
int3
cmp
rol
rol
dec
add
add
iret
add
add
pop
dec
aas
cmc
call
or
or
or
mov
or
xor
leave
push
lods
adc
or
pop
add
add
out
fisttp
sti
cmp
ret
cli
sbb
push
jo
cdq
sbb
addr16
mov
add
add
gs
sub
and
mov
aaa
sub
mov
inc
add
add
in
pop
push
mov
adc
dec
cmp
lods
fs
push
mov
jae
mov
sbb
add
pop
inc
mul
ja
jbe
dec
inc
cmp
scas
repnz
cmp
es
ss
inc
nop
mov
jmp
mov
test
scas
fwait
xor
mov
call
sbb
mov
and
sub
in
or
test
adc
push
inc
mov
adc
pop
ret
add
add
or
icebp
fist
adc
fisub
outs
push
lock
popf
mov
mov
adc
fdiv
imul
add
ins
test
add
add
dec
jmp
sub
(bad)
xchg
stos
xor
and
xchg
push
mov
add
add
shr
inc
cmp
mov
sti
sbb
cld
xchg
sbb
inc
sbb
add
add
mov
push
cld
popa
mov
mov
jbe
fcom
out
adc
icebp
xchg
lods
inc
ja
add
and
mov
cmp
mov
xchg
add
add
lea
std
xchg
jnp
(bad)
cld
and
rol
frstor
dec
mov
and
xor
xchg
or
nop
xchg
test
test
test
mov
push
mov
sub
add
add
xchg
cmps
mov
or
mov
aaa
adc
mov
adc
cmp
lea
add
add
daa
mov
enter
cmps
clc
pop
sbb
test
js
or
loope
lock
add
mov
fs
push
inc
js
adc
mov
test
xchg
add
mov
and
push
fisubr
mov
jnp
inc
add
ret
aas
fnstsw
cdq
(bad)
test
add
add
aam
ja
in
rol
mov
leave
movs
or
cdq
test
or
or
sub
cmp
in
rol
add
add
repz
or
out
(bad)
cmc
or
xor
inc
xor
lea
add
add
std
sub
push
jmp
dec
or
or
jge
clc
xchg
int3
adc
mov
add
add
or
adc
or
inc
repz
and
sub
mov
enter
not
add
add
jno
retf
or
fldcw
pop
dec
imul
inc
mov
int3
adc
add
add
cwde
cdq
or
imul
pusha
sub
xchg
shl
jmp
ins
mov
scas
iret
lock
pusha
add
add
aad
pop
push
mov
or
mov
adc
and
inc
loop
add
jg
in
or
xchg
out
out
add
add
mov
out
sub
in
xchg
or
and
inc
lock
mov
adc
and
dec
test
add
add
scas
cdq
shr
and
inc
idiv
mov
adc
xor
sti
adc
xor
or
add
add
and
dec
aam
aad
(bad)
sub
adc
dec
add
mov
cvtps2pd
add
add
push
pop
and
mov
call
cmps
or
je
in
(bad)
cmc
ret
add
add
movs
into
(bad)
xchg
dec
lea
enter
dec
mov
fisubr
sub
add
add
lea
add
push
or
pop
(bad)
sbb
push
jecxz
adc
add
add
push
adc
add
or
lea
faddp
adc
mov
adc
mov
sbb
add
mov
(bad)
adc
add
inc
pop
or
mov
or
and
sbb
cwde
add
add
inc
aam
add
add
es
push
push
cwde
loop
sbb
pop
sub
in
inc
and
add
add
add
rcr
mov
dec
mov
in
aad
int3
xchg
adc
call
inc
mov
rol
add
add
push
cmp
cmp
add
cmc
and
aad
sub
and
add
add
sbb
jl
inc
dec
sub
pusha
push
inc
add
pop
in
sub
adc
add
add
ja
rcr
and
push
pop
inc
shr
dec
clc
mov
nop
movs
sti
enter
int3
mov
add
add
mov
clc
mov
in
xchg
cmc
jge
mov
jmp
movs
push
add
add
push
mov
jmp
pop
mov
cld
call
call
fwait
add
rol
add
inc
or
or
adc
xchg
xchg
or
adc
in
mov
add
add
inc
add
add
add
add
xchg
addr16
or
push
loope
int
add
adc
inc
lahf
and
inc
std
pop
inc
mov
or
dec
mov
mov
add
add
push
mov
scas
cmp
push
aam
fsub
out
sub
dec
dec
mov
loope
add
add
jg
fyl2xp1
inc
push
jne
mov
and
sbb
jnp
dec
dec
mov
inc
or
add
add
je
jmp
stos
push
push
sub
dec
ins
and
xchg
dec
and
mov
loopne
cmp
sbb
add
add
cwde
xor
add
inc
sub
sti
cli
jmp
jnp
(bad)
loopne
pop
cld
repz
cmp
add
add
sbb
or
jmp
dec
inc
push
loopne
push
je
push
leave
and
pop
add
add
stos
jge
adc
das
(bad)
jge
enter
jo
cli
leave
add
add
aam
add
add
out
stos
push
out
movs
(bad)
xor
sbb
add
clc
and
fsub
jne
xor
add
add
cld
call
pop
inc
add
out
mov
imul
xor
push
pop
pop
int3
add
add
mov
push
mov
call
repz
xchg
sub
stos
add
add
cmp
pop
mov
pusha
cmp
ja
in
sub
popa
jmp
xchg
gs
pop
pop
retf
jb
hlt
adc
add
add
in
and
xor
js
or
out
imul
cs
sub
mov
add
add
leave
jge
mov
and
fdivrp
pop
adc
sbb
pop
lea
add
loopne
xlat
xchg
jge
xor
aam
push
loope
xchg
sub
xchg
xor
add
add
sar
icebp
jmp
cmp
push
stos
push
jl
cmps
pop
mov
and
jne
mov
sbb
push
mov
popf
in
and
pop
cmp
cmp
pusha
dec
jne
scas
adc
jmp
xchg
push
and
add
add
retf
ja
push
dec
mov
sub
sbb
adc
pop
pop
out
cmp
test
sbb
add
add
pop
pop
pop
dec
cli
call
leave
push
or
mov
lock
test
xchg
add
and
hlt
and
fwait
or
pop
pop
xor
jne
sbb
sets
lods
loopne
inc
das
sub
add
repz
fmul
stc
int
sub
lock
push
fimul
mov
sbb
fld
sub
xor
add
int3
fdiv
stos
xchg
aad
inc
dec
inc
in
repnz
sub
lods
ret
in
call
xor
scas
mov
jp
rcl
in
enter
shl
dec
jb
and
or
add
add
push
loopne
push
or
xor
sub
lahf
rcr
inc
jnp
inc
imul
add
add
repnz
push
cmp
add
and
sub
sar
or
stos
jg
xor
add
add
sub
sbb
bound
cmps
lods
call
sti
sub
push
shl
jp
add
add
inc
xchg
cli
cmp
call
mov
in
out
jge
call
add
add
ror
sahf
dec
adc
cmp
aaa
adc
cmp
adc
jmp
add
add
push
push
call
sub
test
adc
or
(bad)
(bad)
aam
and
mov
add
add
mov
mov
adc
sub
add
popf
lahf
in
mov
lods
adc
in
sbb
add
add
movs
jae
xor
xor
addr16
leave
sub
xor
retf
jp
in
ds
and
dec
jne
mov
sar
mov
or
into
push
in
test
add
add
lods
inc
xchg
mov
out
mov
or
xchg
std
xor
pop
out
es
fadd
add
add
fdiv
inc
stos
mov
and
dec
or
stos
xor
xor
clc
jns
jmp
add
add
inc
inc
out
mov
fs
sub
jge
aad
test
inc
(bad)
add
ja
jb
ds
add
add
and
mov
rol
fmul
adc
mov
je
jp
xor
shr
add
add
lods
pop
add
mov
popa
movmskps
add
ror
std
iret
repz
mov
fabs
add
add
sets
cli
adc
dec
pushf
pop
mov
mov
enter
(bad)
sahf
jno
mov
add
add
mov
iret
loope
jle
loop
xor
data16
sub
pop
lods
std
mov
movs
add
add
mov
dec
add
ds
es
add
mov
and
movs
add
add
adc
(bad)
and
inc
lods
mov
jne
inc
lods
mov
cmp
and
mov
movs
mov
scas
add
add
bound
push
jl
in
pop
adc
retf
aam
test
lods
das
lods
jg
jne
or
add
add
dec
mov
xchg
or
jnp
stos
inc
mov
clc
add
add
jne
add
add
adc
mov
imul
iret
xor
popa
sahf
imul
call
jnp
adc
cwde
(bad)
iret
jno
dec
movs
push
mov
push
xchg
aas
dec
sbb
and
mov
xor
retf
shl
add
push
and
mov
push
inc
inc
leave
mov
imul
sbb
and
ret
add
jo
je
push
add
xchg
sahf
in
icebp
aas
or
jge
xchg
push
sub
and
add
add
or
sbb
jo
cmp
test
stos
leave
(bad)
mov
add
add
xor
add
dec
sbb
loope
(bad)
mov
jo
mov
cld
add
add
retf
or
dec
adc
(bad)
xor
sub
bswap
nop
xor
(bad)
(bad)
mov
popf
add
add
sbb
cmp
mov
sbb
push
mov
hlt
retf
xchg
adc
shr
retf
(bad)
dec
out
xor
add
add
ja
aas
call
jo
ja
adc
xchg
and
jmp
mov
add
mov
sbb
mov
xchg
ss
gs
and
test
ins
xlat
loop
add
add
fisttp
xor
outs
push
lock
cmp
adc
jecxz
call
mov
dec
add
add
add
inc
je
add
inc
jbe
adc
or
adc
daa
inc
imul
mov
add
add
movs
push
jle
in
test
pop
xlat
mov
inc
je
pop
test
add
mov
sub
and
pusha
mov
and
nop
cmp
cli
or
add
mov
jmp
add
add
inc
sub
adc
call
or
push
dec
fs
xor
sbb
add
jne
cmp
mov
and
add
push
pop
mov
sbb
out
add
add
jg
cmp
mov
popa
nop
sub
sub
aam
sub
test
sbb
add
add
jno
adc
dec
jg
add
or
cld
and
xchg
add
add
fwait
mov
push
test
in
int3
loop
sub
cmp
sub
add
add
push
xchg
sub
fisttp
or
daa
xor
scas
test
mul
jecxz
add
add
or
push
push
and
add
mov
int3
inc
push
ins
push
push
or
ror
loope
add
add
in
cmps
stc
push
jno
pop
jae
mov
cmc
xlat
test
stc
adc
mov
ja
sub
add
add
pop
adc
push
mov
call
adc
inc
add
add
add
js
mov
add
hlt
mov
repnz
(bad)
ret
imul
xchg
push
jnp
add
retf
popf
mov
std
pop
(bad)
jmp
dec
dec
(bad)
and
jno
cmp
add
mov
push
lods
fmul
push
cs
dec
add
add
nop
and
sub
pop
pushf
pop
(bad)
(bad)
jne
(bad)
xor
mov
and
std
xor
lds
add
add
push
dec
out
mov
jle
rol
dec
and
push
daa
xchg
mov
loop
add
add
fnstcw
jmp
mov
xchg
dec
cs
push
int
jge
xchg
add
add
sub
stc
sub
push
imul
cmps
mov
fincstp
jo
add
add
adc
or
(bad)
frstor
test
push
ds
sbb
je
(bad)
jg
jns
add
add
adc
es
sub
test
jge
cwde
int3
sub
or
dec
push
aam
cmp
add
add
xor
mov
(bad)
add
dec
push
mov
adc
fmul
add
add
lods
pop
mov
jmp
pop
jge
mov
pop
enter
mov
(bad)
les
add
add
nop
cmp
push
fs
mov
adc
mov
imul
xor
fdivr
pop
add
add
in
cmc
mov
dec
out
mov
shl
movs
call
push
jnp
mov
jb
pop
add
add
je
fstp
mov
and
jmp
ror
or
inc
add
add
or
xchg
adc
es
not
add
movs
push
xchg
mov
push
in
pop
add
add
push
mov
(bad)
sub
cmps
xchg
rcl
mov
movs
clc
add
dec
stos
sub
gs
je
add
add
or
jnp
dec
(bad)
gs
int
xor
leave
push
or
dec
lods
or
add
inc
and
inc
movs
ja
popf
xchg
mov
imul
and
and
mov
jmp
retf
dec
scas
inc
popa
das
mov
cmps
outs
add
add
xchg
xlat
xor
pop
and
test
xchg
jmp
jle
jle
sub
add
jae
(bad)
std
adc
mov
bound
adc
and
std
mov
add
add
cwde
jns
push
lea
das
in
inc
adc
test
mov
sbb
jbe
dec
push
xchg
test
sub
add
pop
inc
enter
jge
xchg
xchg
push
and
push
std
pop
repnz
and
xchg
push
add
add
(bad)
jo
push
movs
push
test
clc
add
xor
lea
js
push
xchg
mov
xchg
add
add
clc
pop
push
lods
enter
test
std
cli
cmp
push
cmc
or
jne
loopne
enter
nop
add
add
mov
mov
and
xchg
mov
lea
adc
mov
lock
add
add
and
cmp
std
mov
aam
jns
lea
push
pop
retf
scas
add
add
or
std
xor
push
sub
rol
cli
jle
adc
test
inc
mov
add
add
and
lea
add
cmp
mov
xchg
mov
adc
lea
(bad)
cli
add
add
add
movs
xchg
xor
pop
push
mov
lea
ret
mov
lahf
enter
add
add
cmps
mov
mov
or
pop
shr
setno
sar
add
jl
mov
mov
xchg
mov
xchg
cmp
lahf
mov
lea
add
add
mov
mov
and
test
cmp
push
cmp
mov
aaa
xchg
mov
lods
test
jno
add
add
test
and
adc
push
or
ja
or
xor
xchg
lock
lahf
inc
pop
ja
test
add
sub
adc
jnp
and
push
xlat
inc
scas
push
xor
and
add
add
mov
adc
or
add
lds
out
dec
cmp
ror
inc
push
or
add
add
sub
cli
cmp
stos
mov
test
mov
or
add
out
aaa
add
add
xchg
cmp
inc
clc
jbe
inc
dec
(bad)
sbb
push
mov
popa
adc
out
or
xchg
sub
add
push
dec
jb
test
call
dec
lods
dec
ret
es
add
xor
sbb
add
add
mul
or
mov
and
xor
mov
pusha
add
add
cs
xchg
and
push
jne
push
mov
mov
les
add
add
sub
in
or
mov
mov
mov
xchg
in
or
jg
repz
add
add
or
fidivr
adc
pop
test
and
or
push
adc
add
push
mov
test
in
imul
das
cli
mov
pop
cmc
jns
pop
lea
or
push
xchg
dec
fdivr
pushf
add
add
mov
xchg
je
and
bound
push
mov
mov
or
pop
repz
pop
mov
pop
pop
mov
push
mov
std
out
xchg
std
or
add
add
xchg
ja
mov
sub
(bad)
clc
dec
frstor
mov
jle
add
add
xor
mov
push
jo
sub
call
mov
mov
add
add
fmul
mov
push
inc
sub
jmp
std
xor
sahf
xor
push
js
push
je
add
add
fst
adc
leave
push
pop
dec
jecxz
addr16
ja
rcr
cmp
nop
push
mov
xor
pop
test
std
jmp
in
cld
xchg
jl
mov
and
push
retf
push
adc
add
sbb
or
mov
jne
gs
and
test
lea
or
mov
adc
mov
ror
ins
push
pushf
test
and
inc
cld
out
lahf
add
test
or
mov
add
add
ret
inc
push
sub
xlat
out
mov
call
ret
dec
push
aas
dec
clc
cmps
push
imul
add
xchg
pusha
pop
mov
push
lahf
(bad)
and
xchg
adc
mov
std
pop
sub
add
add
movs
stc
sbb
retf
add
fidivr
lods
psubd
adc
jnp
inc
dec
fcomp
push
and
ins
jno
jb
sub
inc
add
cmp
mov
mov
push
xchg
outs
or
data16
mulps
(bad)
(bad)
and
pop
loop
cli
and
pop
in
cmps
or
push
inc
std
add
add
cmp
mov
pop
test
retf
or
push
mov
aas
or
xlat
mov
add
add
pop
repnz
mov
fidivr
push
inc
retf
xchg
dec
xchg
mov
pop
push
add
add
xchg
or
mov
cld
and
dec
std
and
fnsave
sub
add
add
xchg
lea
enter
jb
std
mov
daa
push
lahf
lock
add
add
inc
inc
pop
icebp
push
out
sub
repnz
and
les
sub
call
sub
add
add
adc
dec
xor
rcl
lods
inc
inc
std
fbld
rcr
std
mov
add
add
or
xchg
inc
icebp
xor
pop
loop
adc
mov
in
inc
sti
sbb
repz
add
add
push
xchg
adc
aas
ret
outs
xchg
mov
sub
mov
lea
inc
cmp
push
push
stc
test
add
add
lods
xor
rcr
or
push
add
xlat
adc
leave
add
and
add
sbb
shl
sub
mov
mov
or
call
add
add
and
and
and
imul
and
and
push
cmp
and
mov
xchg
in
add
add
out
sbb
std
adc
inc
rol
ret
or
or
les
aas
lds
add
add
inc
sbb
or
inc
sub
mov
out
das
xor
and
inc
adc
stc
jnp
fs
add
add
enter
jno
(bad)
or
out
xchg
adc
and
(bad)
xor
adc
mov
add
add
adc
fbld
repnz
jo
xor
and
cmps
inc
dec
lock
add
add
mov
mov
adc
pop
push
inc
xchg
repz
mov
xchg
dec
pop
or
inc
adc
add
add
add
or
loop
fiadd
pop
int
inc
mov
sar
and
push
fs
add
add
push
mov
clc
xor
sub
pop
test
shl
jg
jne
pop
cmp
add
add
je
sub
and
ret
sbb
shr
push
js
mov
fs
repz
stos
add
add
cmp
cs
xor
pop
lock
sti
ds
add
sub
mov
les
ror
add
add
mov
xchg
or
shr
pxor
jmp
cs
push
int3
nop
sbb
frstor
or
add
inc
inc
and
pusha
or
lea
shr
lahf
inc
int
add
add
inc
and
push
imul
pop
mov
imul
scas
imul
stc
push
aam
xchg
or
xlat
xchg
lods
mov
mov
add
add
dec
push
loope
cmp
leave
daa
pop
sub
test
sbb
inc
inc
int3
movs
push
out
dec
add
add
cmp
out
retf
sub
pushf
call
aas
adc
sbb
sub
test
pop
and
ret
inc
and
sub
add
pop
out
jb
les
pop
push
xchg
fiadd
add
add
jb
cmp
and
jg
clc
stos
mov
mov
in
faddp
nop
in
out
clc
add
cmp
add
out
enter
jge
ror
lods
sub
push
and
sub
jge
fild
stc
add
add
dec
sub
(bad)
repnz
sar
xchg
add
ret
jo
ret
fmul
in
pop
(bad)
add
inc
ss
lock
jbe
and
call
add
pop
mov
adc
add
add
pop
mov
shl
mov
xor
aad
or
mov
pushf
ss
add
add
or
pop
test
sub
mov
das
pop
adc
nop
es
rcl
js
loopne
add
add
les
enter
in
nop
adc
test
cmp
aas
push
test
stc
call
push
outs
dec
repz
out
call
(bad)
sub
movs
mov
cmps
and
sub
add
add
test
push
mov
cmp
pop
xchg
(bad)
out
scas
dec
pusha
jg
cli
pop
cli
add
add
jne
jmp
jmp
out
add
or
stos
int3
aam
push
hlt
or
add
add
push
xor
ja
sub
add
ror
and
push
shr
adc
and
add
add
(bad)
mov
adc
add
sbb
sub
pop
inc
ficom
pop
add
add
adc
bound
sub
and
xlat
mov
dec
push
daa
mov
cmp
adc
ja
cld
(bad)
adc
sbb
(bad)
adc
jmp
mov
add
sti
popa
jmp
push
dec
xlat
push
mov
push
dec
add
and
neg
mov
add
xchg
dec
inc
loopne
gs
popf
fild
repnz
sub
add
or
ret
cmc
add
add
fisttp
xchg
loopne
push
dec
jge
arpl
(bad)
adc
jmp
xchg
xor
cld
jne
jae
aas
inc
add
add
inc
ss
aam
mov
aas
adc
jl
push
lahf
je
aam
adc
push
arpl
add
xlat
(bad)
and
adc
dec
int
xchg
aad
jne
int3
sar
shr
fnstcw
mov
(bad)
inc
aaa
add
add
ds
mov
xchg
in
mov
sub
push
mov
push
xchg
jnp
xor
adc
add
add
add
inc
sbb
loop
cld
jmp
jnp
imul
test
lea
hlt
dec
cmp
add
add
loop
jnp
hlt
jmp
push
xor
daa
jmp
push
pop
stos
push
jo
or
add
sar
adc
ja
add
add
mov
xor
sbb
or
in
mov
inc
cmp
retf
jmp
daa
popf
add
add
push
cmps
arpl
dec
aaa
cli
lea
push
pop
int3
fcomi
test
das
or
jae
cmp
add
add
jns
popf
jne
movs
push
test
jmp
test
cmp
or
adc
add
add
sub
adc
daa
paddusw
push
mov
add
fsubr
add
add
lods
(bad)
adc
cmp
xchg
xchg
lods
sub
mov
stos
xchg
add
add
outs
lods
ins
icebp
stos
daa
ins
nop
cmp
in
sub
movs
outs
lds
dec
sbb
adc
dec
push
ror
pop
jae
and
dec
movs
pushf
jmp
dec
sbb
or
mov
dec
(bad)
add
add
mov
jg
stos
mov
enter
dec
push
in
inc
xchg
maxps
xlat
mov
out
mov
or
loop
ins
cs
xchg
jmp
lods
cmp
pop
mov
cmp
jmp
xchg
jo
pop
outs
in
mov
outs
loopne
jmp
rcl
shl
jmp
retf
xor
(bad)
adc
add
add
stos
ja
adc
push
or
mov
push
push
or
add
add
adc
add
mov
or
pmulhuw
inc
mov
push
stc
and
add
int3
add
add
push
scas
rol
loop
cmp
xchg
int
jb
cmp
cdq
leave
or
mov
adc
test
add
add
and
les
mov
nop
or
(bad)
mov
jmp
mov
add
mov
repz
xchg
add
test
inc
cmps
add
add
in
xor
add
xchg
ror
adc
retf
jae
mov
mov
or
(bad)
push
test
add
add
and
mov
sti
mov
mov
adc
aam
push
pop
cli
and
sbb
push
mov
add
add
jb
and
adc
sbb
iret
mov
or
pushfw
lahf
test
add
add
and
test
xor
enter
popa
and
cld
adc
or
sub
es
inc
add
add
(bad)
das
std
xchg
pop
(bad)
aaa
nop
sti
lods
add
or
or
outs
mov
add
add
add
shr
loope
dec
ror
push
push
rcr
cmp
retf
inc
sbb
jmp
pop
ins
bound
add
inc
and
jmp
stos
xlat
test
test
sub
add
add
add
retf
jns
shl
xchg
(bad)
movs
pop
push
adc
jb
or
add
ss
adc
xor
popa
inc
and
inc
lea
pop
aas
adc
stos
add
add
les
ins
sbb
mov
lods
rcr
mov
icebp
cmp
or
std
retf
inc
inc
add
add
pop
pop
mov
aam
pop
adc
nop
pop
push
mov
lds
out
lea
sub
add
add
lods
jmp
test
ja
cmp
cmp
ja
push
std
lds
inc
add
add
adc
mov
(bad)
mov
add
lods
or
out
nop
add
adc
sub
lock
add
add
sub
pop
daa
or
adc
(bad)
sar
pop
mov
dec
sar
add
add
mov
push
adc
jne
or
mov
mov
not
mov
add
mov
jb
mov
jmp
xchg
xor
push
js
call
or
adc
jb
dec
and
(bad)
jmp
call
add
leave
add
sbb
add
lock
mov
add
push
fs
repz
push
adc
fist
addr16
xchg
inc
cwde
pop
and
cmp
cmp
add
add
(bad)
aad
test
loopne
dec
or
stos
inc
retfw
fmul
not
pop
jo
add
add
xor
or
popf
fisttp
pop
jmp
imul
idiv
and
(bad)
pushf
adc
or
add
push
sti
loop
outs
dec
(bad)
fldenv
xor
loop
adc
pushf
add
adc
mov
sub
es
mov
add
mov
lods
sti
hlt
and
hlt
pop
arpl
pop
shl
pop
outs
int
push
dec
fdiv
push
adc
push
add
add
adc
and
ja
push
jae
stc
loope
push
rcl
or
cmp
jmp
mov
outs
and
add
add
div
out
out
cmp
retf
pop
sbb
dec
fist
or
add
add
pop
jmp
gs
adc
or
stc
jecxz
dec
xor
jns
out
cmc
jb
xchg
fist
add
call
jl
push
mov
cdq
inc
adc
mov
jnp
call
fld
add
add
push
pop
push
dec
xor
in
jns
xor
pushf
jmp
and
add
add
xor
pop
out
retf
out
and
xchg
popf
imul
push
push
push
in
jecxz
dec
add
add
mov
sub
dec
lahf
jnp
mov
jae
and
dec
adc
mov
aas
mov
(bad)
add
add
js
xchg
dec
pop
dec
icebp
pop
paddusw
jne
xchg
cli
pop
mov
loopne
aam
imul
add
daa
cld
sti
retf
mov
sbb
mov
sbb
fadd
add
add
cmp
fsub
xor
dec
push
ja
fwait
push
loop
xchg
and
mov
add
or
push
cmp
or
jmp
jo
sbb
and
in
pop
cmps
sub
add
add
xor
mov
xor
pop
adc
sub
test
xchg
loop
adc
mov
mov
retf
add
gs
and
jmp
cmp
cdq
rol
stc
inc
jmp
add
add
aaa
scas
cmp
cli
fcomp
jne
pop
fld
jl
mov
adc
fs
fdivp
push
xchg
pop
ret
add
(bad)
ds
loopne
fwait
inc
out
mov
retf
xor
mov
das
rol
aaa
mov
add
add
cmp
leave
cmp
cmp
and
in
aad
jno
(bad)
ss
int3
int
lahf
add
add
fdivrp
push
sbb
out
aaa
mov
and
cld
mov
shr
xor
mov
mov
lods
aad
mov
push
xchg
int
adc
mov
sub
(bad)
faddp
adc
add
add
sub
shl
sub
add
or
add
add
shl
jae
vmread
sub
or
daa
int3
or
jae
add
inc
inc
adc
rcl
mov
add
in
repz
sbb
push
shr
punpcklbw
mov
lock
mov
inc
cdq
jne
inc
dec
add
add
loop
loope
(bad)
mov
call
cmp
sub
cmp
xor
mov
or
inc
imul
lods
adc
jmp
imul
aam
mov
inc
add
mov
mov
cmp
add
dec
or
nop
les
jae
push
xor
dec
jecxz
pushf
xor
rol
stos
mov
icebp
adc
call
jns
add
add
pop
mov
sbb
clc
add
iret
mov
cmp
or
mov
or
jg
mov
add
add
(bad)
xor
pop
mov
jmp
or
push
add
add
push
mov
inc
add
add
leave
retf
out
nop
adc
mov
push
inc
ror
adc
add
add
data16
xsaves
cwde
ret
pop
xchg
xchg
scas
in
or
arpl
or
add
int3
push
add
addr16
push
clc
mov
mov
jl
push
dec
adc
les
sar
add
add
jb
sbb
xchg
cmp
sub
std
dec
mov
pop
cmp
add
add
fwait
mov
push
sar
int
sbb
fs
adc
test
jbe
fwait
adc
add
add
and
and
cmp
neg
inc
mov
and
rol
or
add
mov
dec
adc
dec
leave
jne
rcl
adc
test
jae
sub
add
add
dec
dec
xor
xchg
or
jg
leave
in
add
add
xchg
jne
ins
mov
jno
or
sub
add
jl
dec
inc
mov
fsub
or
mov
add
add
pop
sbb
fisub
and
or
sbb
rcr
add
scas
int3
and
ret
add
add
add
into
(bad)
mov
les
daa
dec
mov
cmp
adc
fwait
lock
jmp
xchg
add
add
push
inc
sbb
sbb
fwait
popf
and
sbb
pop
push
jge
pop
sar
add
dec
add
call
stos
and
or
pop
cmp
cmp
cwde
call
xadd
add
add
ficom
pop
add
(bad)
cld
push
and
movs
or
or
movs
or
add
lahf
retf
and
test
je
cmp
xor
mov
add
add
sbb
enter
mov
push
or
add
add
add
xchg
push
push
or
lahf
sbb
xor
test
(bad)
das
bound
push
add
add
cmp
push
mov
xor
adc
add
jbe
jge
dec
dec
pop
pop
xchg
xchg
jnp
inc
mov
jl
outs
push
mov
dec
sti
jge
enter
cmp
pop
ins
mov
enter
mov
add
add
jb
(bad)
sbb
stc
popa
into
mov
das
adc
sahf
xor
sbb
leave
retf
test
dec
add
add
mov
sbb
cmp
addr16
add
jb
ror
rcr
jmp
and
add
add
das
push
sub
sbb
cmp
pop
sbb
add
cmp
test
adc
and
inc
rcl
shl
mov
inc
jnp
push
add
add
xchg
push
xor
inc
loop
jne
imul
mov
adc
jle
shr
add
add
popa
mov
jnp
adc
dec
das
test
or
push
or
jmp
jb
lea
cdq
jmp
(bad)
in
add
add
call
mov
adc
mov
out
mov
dec
or
div
popf
fiadd
add
add
dec
nop
test
into
fistp
imul
daa
jmp
sbb
inc
fcom
loopne
int3
scas
dec
cmps
arpl
sbb
and
xlat
jae
adc
jns
shl
jns
push
int3
loop
jbe
jmp
std
lods
jecxz
add
add
inc
retf
mov
sub
enter
mov
inc
jle
pop
cmp
call
in
xor
add
add
ins
mov
jnp
nop
fdiv
int3
mov
adc
mov
inc
xchg
in
cmp
(bad)
int3
and
jae
and
dec
mov
jnp
sub
dec
aas
ret
fs
cmp
call
cmp
add
loopne
mov
or
sub
sbb
cmp
dec
ss
(bad)
into
pop
sub
lahf
add
add
int3
mov
push
aad
or
sub
cld
and
adc
fisub
sbb
add
add
mov
sub
cmp
xchg
ins
test
fsubr
xlat
xor
xor
add
add
shr
xor
push
stc
mov
(bad)
aas
mov
xchg
jg
imul
add
add
and
stc
or
out
cmp
mov
scas
shl
imul
pop
ret
call
pop
add
add
sbb
mov
push
or
xor
jecxz
jge
cmps
out
and
add
add
cmp
out
inc
or
push
cmp
test
mov
movs
or
cmps
js
jl
add
add
leave
jbe
clc
stc
dec
and
adc
mov
add
dec
jp
pop
sbb
add
add
add
mov
cmp
dec
pop
lahf
jbe
scas
lds
mov
cmp
stos
lahf
add
add
daa
jg
nop
pop
sub
lock
inc
sub
sub
sbb
sti
pop
or
sti
mov
sbb
add
add
imul
cs
add
das
push
adc
aas
(bad)
and
sbb
mov
mov
mov
jbe
(bad)
mov
mov
loop
psrld
hlt
(bad)
mov
dec
xor
mov
ins
add
add
fisub
inc
hlt
add
xchg
inc
retf
push
xor
fld
fild
cmp
xor
pop
cmp
add
add
cld
retf
outs
sub
cld
cmovne
cdq
imul
dec
cmp
add
add
xor
inc
adc
fdivr
shl
push
jmp
pop
push
push
call
add
add
in
push
pop
xchg
pushf
add
lods
push
stc
or
fcom
in
mov
add
mov
cmp
or
shl
and
adc
not
scas
cmc
mov
add
mov
xchg
mov
leave
push
add
stos
xlat
cmp
dec
xor
pop
adc
loop
jg
inc
add
add
fisubr
jo
mov
fcomp
ds
pushf
call
push
adc
fild
add
add
imul
and
mov
add
hlt
cmp
add
ret
int3
dec
add
add
sub
das
sahf
xchg
dec
out
lock
mov
xlat
mov
mov
hlt
sbb
adc
add
add
xabort
fmul
jo
xchg
clc
bnd
clc
adc
mov
dec
pusha
movs
cmp
jmp
add
cmp
mov
in
in
xchg
aaa
clc
push
rcl
add
mov
mov
dec
mov
mov
jnp
or
sbb
lock
or
add
add
imul
or
or
sub
dec
fs
int
xor
push
push
mov
(bad)
jl
add
add
das
or
cmps
mov
push
push
dec
sbb
lds
and
dec
xor
pop
fwait
jbe
add
add
and
addr16
jo
in
push
pop
lock
stos
out
push
cld
xor
inc
add
add
test
sahf
test
cmc
stos
jp
dec
inc
xor
repz
lahf
imul
inc
in
sbb
mov
add
add
rol
xchg
cs
jge
pop
jnp
fistp
mov
fcomp
in
cmp
add
mul
pop
mov
cmp
jne
jle
and
or
or
rol
add
xchg
push
cmps
shl
mov
sub
mov
xchg
ror
nop
mov
test
sub
aam
aam
add
add
outs
push
test
stos
dec
sbb
stos
and
inc
sar
xchg
das
dec
leave
push
popf
inc
pushf
add
add
sbb
mul
mov
mov
or
test
push
add
add
dec
cmp
jbe
add
or
jne
jmp
dec
dec
test
cld
dec
inc
mov
add
stc
imul
imul
call
and
add
clc
jnp
jecxz
add
add
cdq
xor
cmps
cwde
sbb
xchg
xchg
pop
mov
int3
xor
push
inc
jge
mov
mov
add
jl
mov
adc
adc
ins
dec
mov
repnz
mov
cmp
cdq
or
add
add
out
and
stos
adc
or
xor
add
mov
(bad)
cmp
fidiv
stc
sub
add
add
je
sti
xchg
(bad)
fcmovnb
push
je
and
mov
cs
iret
in
cmp
add
out
and
imul
lds
(bad)
fucom
aas
push
pop
add
xor
mov
mov
add
add
push
sub
mov
ins
lahf
xchg
or
ja
xchg
xchg
push
fsub
fwait
add
add
push
mov
shl
sub
add
push
ret
outs
cmp
add
add
repnz
or
and
cmp
pushf
cmp
mov
mov
add
add
push
lods
jmp
(bad)
jl
leave
in
shr
nop
pushf
cdq
push
cmp
sub
xor
add
lock
aad
shl
test
inc
neg
mov
push
mov
push
cwde
add
add
imul
inc
retf
out
jg
jmp
je
nop
clc
call
adc
add
add
gs
pop
sbb
ss
cmc
mov
rol
test
inc
bound
adc
add
add
fsubr
inc
repz
sbb
lods
xor
les
repz
xchg
xor
and
add
add
dec
shr
aad
mov
jmp
jmp
and
inc
push
lea
mov
or
add
add
adc
sbb
pop
outs
adc
popa
jne
mov
sahf
and
(bad)
(bad)
cmp
mov
add
add
icebp
bound
pop
jp
sahf
mov
mov
cmp
rcr
movs
je
pop
add
add
(bad)
lock
push
icebp
adc
iret
retf
cwde
and
loopne
sub
cmps
icebp
(bad)
dec
int3
add
add
cmp
cs
jb
scas
mov
stos
fs
out
and
pushf
cmp
imul
mov
jge
and
push
pop
mov
outs
or
ret
cdq
ins
add
xor
sub
xchg
pop
sub
add
add
ror
xlat
push
out
out
into
inc
pop
jg
stos
stos
pop
sub
sub
push
cld
mov
neg
jle
int
add
add
cmp
add
sub
cld
in
ja
jbe
enter
jmp
jge
jnp
rep
push
jmp
add
add
add
fcos
mov
in
cmp
imul
adc
dec
xchg
jae
test
aaa
sahf
imul
sub
shr
mov
stos
push
aad
retf
cmp
add
add
xchg
inc
or
mov
inc
add
push
lea
movq
or
add
add
mov
jle
les
push
adc
outs
in
pop
push
outs
jp
jbe
jle
int
addr16
fcomp
ja
add
add
jo
lea
std
mov
add
and
pop
xor
test
add
add
lahf
hlt
test
or
jecxz
jecxz
sub
fsubr
mov
sub
add
add
mov
hlt
cld
push
jl
or
push
mov
stos
iret
jae
jne
mov
repnz
add
add
adc
mov
repnz
cmp
ret
iret
add
mov
sbb
les
jmp
js
and
add
hlt
mov
mov
or
inc
icebp
fucomi
mov
scas
cwde
ret
rcl
(bad)
rol
add
add
push
and
test
std
adc
das
cmps
pop
adc
cld
popf
mov
into
adc
loop
add
add
sbb
ins
pop
jl
test
repnz
xchg
add
cmp
jecxz
call
in
adc
frstor
(bad)
dec
icebp
cmp
push
adc
fistp
mul
jnp
add
add
shl
rcl
jecxz
test
mov
loope
(bad)
lahf
arpl
sbb
or
ss
or
xchg
jg
(bad)
jl
loop
push
aaa
push
sub
mov
add
add
jge
jle
inc
push
jne
ficom
inc
cmp
outs
sar
jl
in
sbb
adc
fnstsw
js
test
add
add
(bad)
test
xchg
xchg
cli
xor
push
xchg
cli
jnp
and
iret
lock
ins
nop
jo
add
(bad)
shl
jns
icebp
or
sub
add
xchg
fstp
xchg
cmps
fcom
ja
js
pop
inc
fisttp
inc
enter
add
add
loopne
add
pop
adc
mov
test
not
dec
call
nop
push
add
push
pop
cs
xchg
cli
sub
pop
jge
adc
inc
(bad)
shr
sub
sub
add
add
mov
movs
jns
das
cmps
pop
in
das
das
mov
das
mov
das
mov
and
jmp
pop
lahf
mov
cmp
inc
nop
inc
mov
sub
jge
pop
nop
inc
enter
sub
jge
pop
adc
inc
fcomi
bound
sub
mov
movs
hlt
pop
nop
push
add
add
repnz
xor
inc
std
xchg
sti
adc
jnp
sub
adc
in
pop
jmp
add
add
and
cmp
xor
xchg
or
nop
cmp
sub
cmp
add
add
out
and
and
stc
xor
sub
out
and
and
push
fld
(bad)
adc
inc
add
add
out
xchg
iret
lea
in
and
retf
ins
loope
std
push
arpl
add
test
add
add
std
inc
out
loop
nop
sbb
or
or
nop
and
sbb
or
mov
and
adc
sahf
clts
mov
xchg
dec
mov
(bad)
jns
xchg
imul
add
or
adc
sbb
adc
sti
adc
test
add
and
adc
cmp
add
add
xor
es
and
loop
dec
mov
mov
pusha
ds
push
test
add
add
outs
ds
push
mov
je
jmp
mov
and
add
add
sar
outs
(bad)
pop
and
repnz
mov
loop
push
icebp
cmp
jmp
push
out
mov
lahf
mov
add
inc
in
push
cld
adc
jb
sbb
push
inc
add
xor
mov
push
or
loop
add
add
inc
je
and
nop
cmps
cmp
sub
fs
adc
push
test
lahf
dec
mov
mov
and
add
add
add
sbb
mov
mov
out
sub
jl
or
add
inc
outs
inc
inc
add
add
add
xor
das
jl
jp
inc
imul
popa
add
mov
adc
add
add
add
ficomp
dec
das
out
imul
aad
cmp
in
test
lea
test
add
or
dec
xor
mov
cmp
adc
or
retf
pushf
jmp
add
add
jl
pop
or
adc
sbb
gs
jns
add
jne
xor
pop
(bad)
popa
add
add
pop
je
sbb
cli
das
dec
jne
aad
dec
add
mov
pop
scas
xor
or
add
inc
jecxz
data16
jmp
push
loopne
fimul
push
add
sbb
or
cmp
or
add
add
mov
sbb
cmp
repz
pop
xor
out
movs
call
add
or
adc
dec
cdq
inc
adc
mov
jne
js
jbe
add
and
add
add
sar
xchg
sbb
and
ror
adc
stc
push
and
or
rcl
mov
add
pop
std
div
sub
inc
adc
adc
or
stc
dec
push
add
add
add
mov
dec
push
adc
inc
jmp
jmp
or
or
add
add
cmp
and
pop
sbb
fadd
jbe
out
mov
cs
xchg
into
(bad)
adc
and
add
add
mov
cmp
add
dec
push
inc
cs
push
xor
add
add
test
test
out
adc
inc
test
xchg
and
mov
imul
movlps
sub
loop
sub
mov
sub
leave
repnz
cmp
rcl
add
add
clc
sar
adc
push
clc
pusha
fld
adc
inc
pop
out
push
add
adc
lock
add
add
push
push
pop
adc
pop
xor
jne
xchg
cmp
ja
dec
aas
push
je
sbb
les
add
add
mov
adc
sub
mov
inc
add
jnp
adc
mov
aad
add
add
mov
xor
cdq
adc
mov
dec
sub
push
add
shl
stos
push
pop
adc
mov
fsubr
jg
add
sbb
and
add
add
cmc
dec
xchg
into
or
xlat
sub
and
mov
inc
and
adc
sub
add
add
push
xchg
jo
adc
push
popa
out
inc
retf
mov
adc
in
add
add
dec
(bad)
aad
sbb
add
cmp
cmp
xor
int3
push
add
add
add
mov
mov
pop
and
rcr
mov
pop
aas
mov
jmp
dec
jnp
add
add
mov
je
sbb
and
clc
fild
sub
sub
add
add
lea
gs
enter
dec
pop
out
inc
mov
push
sti
or
ins
das
scas
cmp
inc
leave
jmp
psubw
mov
dec
gs
jmp
out
popf
sar
sub
add
scas
and
xor
lahf
inc
jl
enter
stc
pop
jg
add
or
push
sub
jmp
push
pop
add
add
sbb
xchg
dec
mov
jmp
xor
sub
cli
hlt
in
push
bound
cld
cmps
pop
sti
bound
adc
sbb
repnz
and
sbb
inc
jmp
dec
xchg
inc
fidiv
add
add
and
add
push
out
outs
test
ins
out
mov
dec
test
imul
fild
fcomp
in
mov
inc
lock
jmp
icebp
push
mov
in
pop
loope
adc
sahf
in
and
push
add
add
inc
shr
fisub
sub
xor
aam
fbld
in
sbb
add
add
adc
ret
and
lods
jmp
and
movs
loop
nop
inc
adc
scas
push
xchg
push
mov
add
dec
cmc
movs
pop
adc
and
inc
sbb
sub
rcl
push
pusha
int
sub
jge
into
rol
add
aad
xor
scas
jb
cmps
mov
jecxz
adc
adc
retf
or
inc
inc
jmp
fild
add
add
xor
sbb
cmp
ja
push
mov
sbb
cmps
pop
sub
dec
cmp
add
add
xchg
sbb
push
in
leave
pop
inc
lods
idiv
pop
adc
fwait
test
mov
add
add
add
adc
cwde
cmp
and
inc
call
push
out
das
rcl
add
add
dec
sub
pop
inc
inc
pop
lea
nop
mov
shl
jmp
(bad)
add
add
jae
xchg
femms
or
push
data16
stc
mov
and
cmp
or
add
pop
mov
add
mov
or
push
pop
fdivr
pop
sti
or
mov
pop
sbb
retf
push
std
add
add
adc
xchg
aad
inc
cmc
xchg
xchg
sbb
push
fsubrp
adc
xor
aad
push
pop
cmp
cmp
stos
add
add
cmp
loop
bound
imul
mov
test
xchg
std
xor
jp
jmp
or
scas
aaa
jge
xchg
add
add
cld
test
push
jecxz
add
xchg
sbb
movs
jne
adc
pop
or
pop
push
push
(bad)
fiadd
add
add
(bad)
sub
nop
inc
jne
test
and
add
add
mov
xchg
sti
mov
adc
stc
push
lods
(bad)
pop
jmp
sbb
ret
add
add
xor
jb
jp
and
adc
int3
cmp
xor
das
cmp
jne
cs
clc
add
xchg
add
add
je
lea
sbb
jnp
enter
fldcw
movs
jg
adc
ins
xor
pop
adc
add
add
loopne
pop
stos
mov
fst
add
fsubr
pop
push
retf
jl
and
add
dec
jge
hlt
adc
jmp
sbb
push
xchg
push
add
xchg
(bad)
hlt
push
pop
add
add
add
or
adc
outs
adc
pop
mov
cld
adc
test
sub
stos
dec
in
scas
fiadd
add
out
mov
jnp
mov
stos
cmp
xchg
xchg
add
add
dec
mov
mov
pop
sbb
les
adc
scas
retf
and
je
sti
out
add
add
or
and
loope
or
dec
add
cli
das
(bad)
mov
inc
cmp
add
inc
push
call
shr
test
sbb
lods
adc
retf
fstp
push
enter
add
add
jbe
dec
je
pop
jmp
pop
jle
ss
jl
or
push
sub
jb
mov
repz
stc
jge
ja
data16
add
call
push
repz
push
push
push
jno
sbb
mov
push
mov
add
add
enter
push
xor
pop
std
xchg
xor
shl
cmp
je
cmp
jp
add
add
pslld
lea
inc
sbb
add
or
push
or
add
add
mov
jmp
mov
pop
es
ret
scas
sbb
test
je
mov
add
add
fimul
test
lea
push
push
push
adc
adc
repz
and
jg
xchg
sbb
add
add
push
pop
and
push
push
inc
sbb
scas
sub
mov
repnz
mov
cmp
sar
add
add
popf
shr
jmp
mov
inc
cmp
xchg
enter
or
add
add
iret
sbb
stos
xor
ins
add
and
lods
stc
dec
cli
jl
and
scas
add
add
jnp
pop
enter
pop
aas
adc
dec
inc
mov
dec
sub
inc
inc
push
add
add
push
enter
adc
iret
pop
retf
mov
dec
adc
mov
jne
add
add
add
adc
aam
cmp
aam
push
stos
cld
mov
push
sub
pop
mov
add
add
mov
pop
div
xchg
cmp
and
dec
push
(bad)
(bad)
adc
aam
push
popa
pop
push
add
add
nop
sub
rcl
push
adc
add
mov
enter
add
add
or
bound
jno
fs
pop
gs
fnstsw
clc
inc
or
add
add
cvttps2pi
in
mov
dec
(bad)
adc
retf
mov
xchg
icebp
das
stos
xor
dec
jns
mov
add
add
inc
leave
shl
adc
mov
mov
cmp
mov
loop
leave
mov
add
lock
sub
pop
mov
adc
in
push
xor
inc
mov
jmp
push
mov
cli
xchg
pop
shl
aas
xlat
adc
add
add
push
aas
mov
cli
xor
out
mov
stos
mov
jne
or
(bad)
cmp
and
add
add
mov
test
inc
fcom
ds
scas
enter
push
loopne
or
adc
sbb
add
cdq
sub
sti
adc
push
and
add
mov
les
sub
inc
pop
inc
add
add
push
add
pop
nop
dec
les
push
add
sti
jge
mov
jne
push
cmps
fisub
sahf
add
add
sbb
jns
mov
mov
rcr
inc
cmp
ja
push
daa
and
add
add
push
dec
mov
addr16
aas
xchg
and
test
push
mov
sub
add
add
add
mov
jl
sti
sub
outs
cmp
ret
xor
xor
sub
fxam
mov
mov
jbe
add
add
adc
rcl
push
push
shl
enter
je
ror
cli
xor
dec
cmp
add
add
lock
not
(bad)
jmp
mov
cmp
out
loope
sbb
pop
and
test
add
pop
test
aad
pop
mov
loopne
fsubr
lahf
push
xchg
mov
daa
dec
popf
arpl
shl
add
add
mov
or
mov
jbe
jb
pop
sar
sub
test
in
lods
pop
inc
out
add
add
stos
hlt
jmp
jo
into
shl
loope
or
fcmovnu
cmp
leave
and
ins
sbb
jg
mov
cmc
in
sub
add
jg
inc
clc
push
adc
cmp
sub
out
enter
add
cmp
push
inc
dec
movs
inc
sbb
or
jecxz
aaa
hlt
adc
sbb
test
add
add
add
icebp
in
es
aaa
inc
jmp
sub
in
xchg
out
loop
jb
pop
add
add
mov
nop
retf
inc
scas
dec
int3
xor
test
adc
lods
inc
daa
dec
cdq
aaa
mov
add
add
and
in
sub
mov
and
dec
xor
and
je
add
add
sub
mov
mov
daa
mov
out
xchg
jne
mov
enter
add
add
add
mov
add
xor
mov
daa
hlt
stos
mov
(bad)
scas
ret
add
dec
cmps
minps
test
add
push
push
push
sbb
add
fs
and
jle
xor
or
sub
inc
cmp
inc
sub
inc
loope
adc
add
scas
in
push
add
add
gs
cmp
inc
sub
add
stos
and
mov
cmp
call
pop
mov
leave
(bad)
xchg
add
add
mov
jmp
test
mov
mov
cmp
in
mov
pusha
xor
cmp
aad
jge
mov
adc
mov
adc
lods
pop
iret
dec
sbb
mov
ret
popa
add
add
jb
adc
push
dec
fdivr
adc
jmp
dec
pop
add
push
mov
add
add
imul
lock
push
adc
lea
repz
mov
idiv
mov
cmp
add
add
push
push
sub
add
sbb
pop
mov
jge
fidiv
or
imul
add
shl
ret
(bad)
clc
add
outs
xor
std
rcr
in
or
loopne
sar
cmp
add
add
jle
std
xchg
in
dec
and
jg
xor
cmp
pop
cmp
shl
aad
add
add
ds
xor
stos
lea
adc
ret
dec
call
mov
mov
add
add
push
or
fwait
sub
dec
xor
hlt
inc
cmp
in
add
dec
cld
push
sub
cld
imul
add
push
jns
mov
pop
movs
dec
push
mov
or
jb
or
sub
cmp
pop
push
mov
push
jmp
lock
icebp
dec
shl
dec
pop
mov
cmp
add
add
cmp
and
push
hlt
(bad)
and
dec
xor
cld
test
dec
stos
sub
cmp
add
cli
inc
sbb
std
shl
sbb
sub
aam
lock
dec
xchg
clc
xchg
add
add
lods
mov
xor
jne
xchg
and
sbb
ja
and
mov
jl
test
add
call
add
or
jge
inc
xchg
cmp
sub
into
sub
sub
add
add
nop
aaa
adc
sbb
clc
cs
xchg
pop
push
test
mov
or
or
dec
jns
push
cld
sbb
cmp
add
add
mov
leave
(bad)
mov
dec
enter
xchg
and
test
adc
aaa
and
add
add
adc
cdq
adc
movs
sar
cli
idiv
fidiv
das
pop
push
or
cmp
fcmovb
dec
add
add
mov
and
sbb
mov
cld
jge
and
mov
push
add
inc
pop
sbb
mov
add
dec
xchg
dec
mov
push
clc
xchg
(bad)
shl
push
xchg
iret
daa
hlt
(bad)
repnz
stc
cmp
mov
add
add
das
mov
dec
fimul
inc
sub
test
movs
jp
lahf
xchg
mov
push
adc
adc
push
out
add
add
cdq
aaa
sub
in
loope
sub
mov
or
sar
mov
dec
mov
pop
movs
sub
pop
gs
rcl
mov
xchg
inc
add
pop
call
(bad)
movs
jmp
out
sti
dec
jmp
rcl
or
add
add
stos
jb
cmp
jge
retf
jg
test
inc
cld
lea
ja
(bad)
call
adc
call
add
add
jne
iret
lods
mov
push
inc
cs
jle
cld
mov
loop
(bad)
sub
inc
xchg
idiv
add
add
inc
cld
mov
test
test
sbb
push
jmp
ins
adc
sub
add
js
sbb
cmp
or
xchg
xor
xor
mov
aas
pop
pop
out
push
add
add
pop
pop
jb
bound
mov
sbb
jg
inc
and
les
mov
xchg
out
add
add
jle
dec
xchg
add
cmp
stc
mov
outs
dec
cld
jg
sbb
stc
or
add
add
mov
push
and
or
adc
and
sub
stc
add
mov
add
add
pop
jb
call
outs
xacquire
lods
push
xor
xor
jl
jne
pop
and
out
sub
jae
(bad)
ficom
out
shl
cli
stc
cs
fs
sub
push
add
jp
jle
fld
repz
jmp
mov
hlt
adc
add
inc
or
mov
push
mov
sub
xchg
fsubr
and
mov
and
and
fstp
pop
xlat
add
add
or
jne
not
xlat
adc
stos
fisttp
mov
aas
add
mov
pushf
fimul
add
add
lods
lds
(bad)
and
sub
or
pop
movs
cld
xchg
and
cmp
add
add
fs
sti
(bad)
sbb
sub
ss
pop
ret
sbb
sbb
xor
add
add
push
nop
mov
test
ss
aaa
xchg
inc
icebp
pushf
scas
or
push
leave
sbb
add
add
dec
dec
mov
je
movs
cmp
jp
cmp
leave
jno
in
push
les
cmp
inc
sub
add
add
jno
loop
cmp
int
in
fist
dec
adc
mov
in
jmp
mov
retf
add
add
and
adc
mov
add
mov
inc
and
and
shl
nop
clc
mov
sti
jb
dec
or
dec
sti
push
out
outs
adc
int
add
add
pushf
push
sti
enter
push
mov
jnp
pop
pop
inc
push
cli
add
or
or
push
add
add
add
jl
movs
into
add
test
push
into
out
retf
adc
lods
outs
fadd
mov
xor
add
add
dec
ins
xor
rol
dec
pop
in
out
out
xchg
mov
iret
call
mov
add
add
add
mov
je
adc
dec
scas
and
les
mov
xchg
mov
or
fs
sub
cmp
pop
or
and
sub
or
xchg
add
add
mov
lods
jge
jl
cmp
lods
mov
fnstenv
out
sub
dec
sti
data16
cmps
mov
xor
add
dec
mov
add
push
cwde
scas
add
popf
and
cmp
add
rcl
push
adc
push
cli
scas
leave
push
or
les
sbb
add
stc
or
jbe
cmc
icebp
lea
dec
ror
repnz
stc
test
adc
add
add
cmp
(bad)
sub
push
jmp
push
movs
mov
int3
sub
sub
call
push
add
add
add
cmp
jmp
pop
cli
and
mov
xchg
add
mov
fcmovnb
xchg
add
add
rcr
outs
xor
mov
inc
xchg
xor
cmp
push
and
ds
add
add
dec
cdq
pop
or
mov
and
sbb
in
cld
mov
jge
ret
cmp
add
add
hlt
adc
ins
outs
bound
test
and
sar
push
push
shr
push
pop
cmp
add
and
ds
retf
out
stc
mov
inc
cmp
jne
stos
sub
ficom
mov
add
add
mov
inc
push
sub
sub
shl
jecxz
xchg
out
je
sub
bound
inc
or
in
enter
adc
pop
xchg
imul
fs
iret
sbb
add
leave
lods
jmp
pushf
push
test
add
add
or
lea
or
xchg
inc
mov
in
inc
sub
adc
sub
cmp
mov
or
mov
jle
jle
stos
inc
push
arpl
rcl
add
add
mov
popa
(bad)
out
sub
adc
add
mov
or
xor
mov
add
add
sbb
xor
inc
sahf
xchg
test
mov
imul
add
add
and
push
sub
cmp
adc
and
sub
les
das
clc
add
add
(bad)
mov
push
or
popf
pushf
mov
shld
inc
sbb
mov
add
add
aam
enter
inc
cmp
dec
sar
test
inc
jne
test
xor
add
add
cwde
jno
push
(bad)
and
adc
or
lea
cs
jne
cdq
enter
fs
test
ins
call
add
adc
enter
shl
jge
fstp
lock
sahf
pop
xchg
push
add
add
mov
push
jo
sub
mov
inc
adc
cmp
push
adc
inc
xchg
aam
or
in
xor
iret
aam
popf
mov
mov
mov
or
loopne
and
add
add
sbb
pushf
push
xchg
add
push
push
test
sub
call
xchg
pop
add
add
or
shr
lea
nop
xchg
fcom
adc
mov
aas
cmp
lea
push
add
add
lahf
nop
xchg
leave
ret
push
push
and
hlt
pop
push
test
(bad)
cmp
lea
sub
jo
adc
sub
ficomp
jmp
dec
add
add
add
push
jmp
test
jg
imul
adc
fs
xchg
scas
mov
add
add
adc
retf
xor
mov
xor
push
or
xchg
addr16
stc
cmps
xor
add
add
test
xor
mov
ja
push
sbb
mov
mov
jns
call
add
not
adc
sbb
sbb
sbb
lea
loop
call
stos
mov
cli
(bad)
les
dec
test
mov
cmp
xchg
test
test
jmp
mov
shl
jnp
add
add
inc
jmp
inc
jmp
cwde
jg
mov
cmc
push
std
iret
das
inc
xchg
mov
outs
mov
add
mov
xchg
push
call
xor
sbb
rcl
aad
out
loopne
sub
add
add
retf
sti
mov
(bad)
pop
mov
adc
push
mov
push
add
add
push
pop
scas
jge
jmp
dec
fdivr
je
dec
jb
fwait
xchg
repz
pop
test
dec
fsubr
mov
pop
adc
or
loope
or
mov
dec
outs
mov
xor
jbe
addr16
idiv
add
or
sar
cdq
sub
ds
jg
fcomp
repnz
rcl
xchg
stos
mov
dec
lods
add
add
and
pusha
fild
je
lea
js
nop
loop
sbb
sahf
cmps
cmps
outs
shl
add
add
lea
cli
iret
or
shr
scas
daa
xlat
fcmovnu
jmp
fcom
or
mov
add
add
shr
jne
and
push
or
xchg
xor
out
sub
jp
adc
cmp
pop
mov
add
adc
mov
cmp
jne
mov
inc
les
sub
imul
add
add
push
clc
cmp
ds
sbb
imul
jne
inc
pop
mov
sub
ret
or
xchg
in
xor
add
add
(bad)
dec
push
mov
fld
jbe
push
mov
push
jge
add
add
dec
repz
mov
shl
sub
xchg
push
or
and
or
sbb
add
add
and
and
dec
push
jmp
dec
adc
pop
mov
xor
and
sbb
cmp
mov
add
call
pusha
sub
add
push
inc
les
rcr
inc
dec
and
add
add
xor
fs
shl
clc
iret
cmp
or
mov
scas
cmps
scas
sbb
xlat
xchg
and
add
add
and
cmp
or
fdiv
inc
es
rcr
lds
jl
(bad)
dec
bnd
add
add
(bad)
pop
dec
add
pop
add
loope
in
xor
enter
test
sub
or
add
clc
in
shl
daa
fisub
test
lods
aaa
pop
enter
jne
test
sub
lea
add
add
test
aad
or
push
in
pop
xlat
ins
pop
stos
sahf
fst
(bad)
je
sbb
push
sub
mov
mov
mov
ficomp
mov
mov
add
add
aam
scas
adc
(bad)
aam
pop
mov
mov
and
mov
xor
icebp
add
add
rcr
push
ds
adc
popf
xlat
adc
aam
icebp
call
xor
xchg
xchg
outs
push
xchg
add
add
and
in
es
pop
sbb
add
fcom
adc
push
rcr
shr
xor
mov
add
add
mov
inc
repnz
cld
lods
or
push
je
mov
push
inc
dec
test
aad
inc
add
add
dec
shl
push
stos
adc
stos
cmp
xchg
test
call
outs
les
add
add
cmp
ret
xor
and
std
nop
ins
in
pop
sbb
dec
mov
ins
cli
add
add
lock
cld
mov
or
ffree
push
jns
sub
fwait
es
popa
das
std
add
add
and
or
mov
pusha
cmp
mov
shl
pop
cmp
sub
aad
stos
add
add
and
push
jb
dec
sub
das
jmp
cmp
(bad)
push
xchg
movs
pop
add
add
add
xchg
and
or
adc
or
movs
xor
ss
mov
repz
inc
add
add
cs
and
add
fdivp
mov
adc
icebp
cld
dec
push
lods
out
movs
in
not
mov
adc
mov
adc
test
sub
enter
push
push
dec
mov
fisub
ret
and
call
pop
lock
mov
dec
jmp
ror
add
ret
aaa
addr16
xchg
sar
push
mov
adc
xor
mov
add
add
pushf
scas
jp
adc
outs
popa
inc
dec
stos
mov
ja
shl
in
std
pop
xchg
add
add
xchg
jmp
std
movs
push
push
xchg
push
imul
pop
nop
mov
movs
and
loop
add
add
adc
jbe
sub
mov
ja
loope
push
popa
cmp
or
loope
pop
daa
or
add
add
je
scas
frstor
call
sub
jmp
push
add
pop
fldcw
sbb
pop
retf
test
inc
in
push
inc
stc
repnz
inc
add
call
loopne
inc
(bad)
addr16
mov
aad
jmp
add
loopne
push
cmp
pushf
inc
scas
loop
imul
xchg
and
and
(bad)
xchg
push
outs
in
fdivr
add
add
mov
aam
dec
sub
push
or
mov
leave
push
(bad)
push
test
cs
cwde
mov
fs
jb
and
add
add
hlt
sbb
and
nop
dec
and
sbb
aad
mov
pushf
or
out
mul
test
and
icebp
nop
cmp
jp
nop
daa
cmp
fnstcw
pushf
scas
add
add
xchg
mov
mov
pushf
scas
or
add
push
or
mov
and
xor
jne
add
add
mov
das
int3
inc
xchg
cmc
test
dec
add
push
inc
pop
fadd
add
add
nop
(bad)
les
fsubr
dec
cmps
fs
dec
lahf
outs
arpl
(bad)
add
add
add
stc
push
inc
sub
lods
jne
push
ins
into
(bad)
jmp
jno
push
mov
add
pop
cmps
lods
push
sar
stc
add
in
mov
or
(bad)
push
mov
mov
inc
lods
add
add
push
jge
mov
sbb
pop
cmp
push
popf
mov
aas
or
push
mov
inc
int
add
add
jne
sbb
sub
push
call
dec
lahf
or
test
mov
mov
add
push
mov
mov
cwde
fwait
jp
dec
and
je
add
jb
mov
add
mov
arpl
mov
mov
out
hlt
std
out
retf
cwde
cmp
ret
inc
push
add
add
jmp
leave
add
push
lahf
jns
and
adc
jecxz
pop
into
arpl
add
add
mov
jp
inc
push
or
lock
shr
push
pop
xchg
xchg
jnp
add
add
aas
loop
div
je
sbb
push
sub
rcl
test
es
aam
cmp
jg
inc
push
push
adc
add
add
jbe
mov
sub
in
sbb
(bad)
bound
push
jg
or
mov
pop
jbe
pop
je
add
add
std
jmp
jns
pop
fadd
pop
dec
jmp
push
ins
jne
push
cld
inc
mov
lahf
loope
add
add
fsubr
pop
push
cs
fiadd
(bad)
in
xchg
or
xchg
cs
retf
test
add
mov
jne
cmp
mov
push
or
jmp
fwait
loopne
sti
sub
add
add
das
aam
xchg
imul
cmp
popf
int3
cmp
add
(bad)
arpl
sbb
test
add
add
loop
mov
enter
or
mov
sbb
mov
ds
adc
add
add
xchg
fst
mov
sbb
or
(bad)
mov
push
push
jnp
ja
add
add
retf
and
inc
aam
cmp
cmp
and
inc
push
dec
ja
pop
push
arpl
test
fdivr
add
add
push
or
xchg
push
add
scas
dec
shr
popf
mov
push
or
call
add
repz
jno
mov
les
mov
int3
or
fld
sub
or
ins
sbb
dec
je
add
add
xor
sub
sub
imul
xchg
jae
dec
aam
dec
add
add
xchg
and
adc
inc
jmp
push
imul
add
test
shl
(bad)
stc
mov
add
add
lea
fs
push
int3
test
mov
fdivr
sub
mov
nop
lock
pop
jmp
add
add
pop
cwde
jno
inc
or
pop
movs
enter
mov
dec
xchg
fdiv
lods
rcl
and
int3
add
add
das
cmp
jb
or
or
xor
xchg
sar
shr
add
inc
cmp
cwde
movs
jne
mov
iret
les
sar
dec
push
xor
fmul
dec
mov
add
add
push
and
and
add
sar
or
push
ins
add
add
movs
cdq
shl
in
push
(bad)
test
mov
popa
sub
aam
jae
cld
shr
jbe
iret
mov
add
add
movs
loop
mov
call
loopne
sbb
mov
dec
cwde
aaa
push
xor
adc
loop
add
add
xchg
ret
and
cli
xchg
and
lods
in
in
adc
jp
ds
(bad)
in
add
add
in
ficomp
retf
sti
mov
xor
into
jne
ret
ret
in
pushf
sbb
jns
cmps
cwde
mov
mov
add
add
popf
out
dec
inc
inc
cmps
test
add
nop
push
jl
fnstcw
sbb
mov
xchg
sub
add
add
add
pop
mov
arpl
fild
das
fsub
inc
adc
mov
xchg
cs
iret
mov
add
add
mov
and
inc
add
jnp
add
rcr
movs
sub
mov
mov
jl
add
add
nop
rcl
mov
adc
jmp
sbb
retf
sahf
test
fnsave
and
push
add
add
mov
add
sbb
jmp
(bad)
imul
pushf
dec
bound
mov
fwait
sbb
call
pushf
fs
pop
push
(bad)
rcl
mov
pop
(bad)
lahf
add
mov
in
push
adc
add
add
ror
xchg
adc
mov
pop
mov
dec
scas
popf
cmps
push
sti
inc
add
add
int3
int3
add
icebp
mov
xchg
rol
daa
cmps
mov
mov
add
add
jle
sub
jmp
xchg
pop
cwde
pop
xchg
push
cwde
adc
test
and
fcmovu
gs
add
add
sub
dec
pop
push
cmp
stos
sub
mov
pop
mov
je
or
ja
pop
jmp
outs
loop
nop
enter
test
aaa
arpl
sub
add
adc
push
cs
push
adc
bound
jno
(bad)
arpl
std
xor
add
add
dec
mov
jns
and
jl
sub
inc
mov
push
lahf
shr
xchg
idiv
add
add
rcr
test
cs
xchg
mov
sub
and
cdq
push
pop
ja
xchg
leave
or
les
ins
nop
lgs
sbb
mov
rol
daa
push
icebp
les
add
add
add
mov
jns
das
or
cld
int
lods
cmp
sub
inc
push
or
mov
add
daa
call
xor
add
mov
dec
adc
xchg
sar
inc
inc
add
add
inc
daa
mov
adc
mov
mov
in
int3
xchg
gs
bswap
pop
jmp
jg
and
add
add
xor
or
fbld
aas
and
xor
scas
sbb
leave
and
xor
add
add
xor
pusha
das
ja
shl
sahf
popa
mov
stos
test
dec
mov
dec
jmp
jg
add
add
push
dec
sub
add
arpl
jbe
lock
loopne
ds
mov
add
add
or
add
push
adc
and
aas
adc
adc
mov
es
les
jecxz
inc
mov
fld
add
add
inc
aam
fnstsw
cld
add
dec
jmp
adc
cmp
sahf
arpl
shr
pop
add
cld
jmp
add
add
add
rcr
fs
retf
ffreep
pop
inc
add
popf
int3
mov
or
or
add
add
add
sar
or
add
lods
dec
xor
push
cli
dec
jns
test
add
add
(bad)
out
into
add
stos
push
mov
enter
jg
aaa
adc
lahf
inc
push
sbb
add
push
fs
xor
or
push
xchg
fadd
and
push
xchg
fs
adc
add
add
dec
or
(bad)
sbb
dec
jns
mov
sbb
cmc
mov
mov
aad
test
add
jne
imul
enter
adc
xlat
and
add
add
add
add
in
sub
or
pop
push
js
or
and
cmp
scas
cmp
add
add
shr
cmp
sti
test
push
pop
jo
lea
test
mov
mov
add
add
and
add
icebp
sbb
aad
pop
xor
mov
mov
add
out
xor
add
iret
or
mov
push
pop
jno
imul
pop
jb
rcl
add
add
jno
push
(bad)
cld
or
popf
fstp
fwait
push
lea
add
add
or
push
es
cmp
mov
add
push
or
ja
push
pmovmskb
add
add
out
or
pop
jns
fs
push
sbb
rcl
mov
mov
out
add
add
movs
mov
leave
aad
push
sub
add
je
repnz
xchg
bound
jns
cmp
cmps
add
add
push
mov
shl
cmp
and
pop
mov
popf
add
xor
add
add
cmp
mov
adc
loop
mov
data16
repnz
push
xchg
cmp
(bad)
in
lods
jp
add
add
stc
pop
(bad)
mov
imul
outs
dec
sbb
mov
xor
lods
xor
xchg
or
cs
and
xchg
and
sub
sub
add
add
and
and
xor
jmp
pop
and
movzx
sub
sbb
ja
repnz
sub
cld
mov
add
add
outs
in
cdq
mov
and
enter
adc
push
clc
push
xchg
clc
mov
enter
std
jecxz
ret
add
add
mov
iret
les
pop
and
mov
mov
(bad)
cmp
jl
add
add
or
shl
sbb
stc
test
dec
jmp
mov
add
cld
mov
jo
or
fs
repz
sub
scas
in
xor
in
mov
shr
fst
add
add
sub
pop
mov
cmp
sub
dec
and
arpl
js
test
movs
data16
add
jmp
xchg
(bad)
jge
add
jmp
xchg
adc
sbb
ins
jge
xchg
pop
pusha
daa
jne
xor
dec
sahf
mov
xchg
add
add
imul
jge
sub
scas
cli
pop
xchg
and
jo
add
jge
adc
test
sbb
fdivr
add
add
mov
shl
jle
and
test
mov
stc
adc
adc
xchg
leave
fsub
xchg
loop
daa
pop
mov
add
add
in
fdivr
push
add
push
aas
ret
dec
mov
xchg
sub
inc
add
add
pop
mov
sub
mov
test
dec
and
ficomp
or
add
sbb
and
les
add
pushf
lahf
fxch
push
mov
fmul
cmp
stc
nop
cmp
int
loopne
mov
pop
clc
jmp
add
add
pop
xchg
or
and
inc
or
loopne
add
xchg
or
adc
mov
add
call
cmp
ret
jl
jnp
repz
je
stc
clc
iret
or
dec
mov
add
add
or
or
es
jp
fwait
jae
out
and
fwait
test
inc
add
inc
daa
lea
mov
xchg
xor
adc
clc
cmp
and
add
add
aas
call
daa
xor
mov
add
shl
pop
add
mov
pusha
popa
mov
mov
mov
sbb
and
xor
lods
sbb
pop
add
add
add
xor
adc
push
data16
jg
and
and
test
or
fcomi
and
and
jns
or
and
add
sub
std
and
mov
cmp
add
or
cld
mov
mov
je
or
and
inc
push
add
fs
out
std
mov
mov
shr
retf
sbb
sub
daa
jmp
dec
and
sahf
mov
add
js
adc
dec
retf
add
push
add
push
or
movs
xchg
xor
jmp
fcomip
out
xor
add
add
sbb
inc
push
xor
daa
jae
inc
fld
and
adc
adc
out
dec
add
add
out
sub
cmp
lods
sub
or
shl
inc
inc
mov
fisubr
add
add
out
sub
cmp
add
inc
int3
adc
sbb
jmp
add
add
test
mov
icebp
fdiv
inc
ret
dec
dec
and
jge
cmps
xchg
sbb
cmps
add
add
push
das
and
dec
xchg
push
mov
rol
out
(bad)
xchg
ins
test
lods
cmc
inc
add
test
(bad)
pop
out
inc
cmc
cmp
(bad)
call
add
add
scas
adc
sub
adc
push
jno
pop
cmp
fs
add
movs
xchg
jbe
or
push
sbb
pusha
cmc
pop
add
or
iret
clc
addr16
arpl
shl
and
int
enter
push
cmps
adc
mov
jb
mov
into
xor
(bad)
add
add
dec
mov
movs
ins
sbb
lea
xchg
pop
frstor
andnps
adc
into
in
inc
jno
or
mov
repnz
xchg
adc
add
(bad)
push
adc
jle
dec
push
push
stc
adc
sub
add
add
or
xchg
pusha
fld
outs
adc
fs
jmp
pop
outs
shl
ret
sbb
lahf
lock
add
sbb
mov
fimul
gs
jno
dec
pop
enter
retf
icebp
fisub
les
test
into
jg
and
test
aam
sub
mov
jl
(bad)
lock
shl
bound
call
add
es
jbe
ror
das
pushf
xchg
pop
dec
sub
pop
hlt
cld
into
test
mov
jmp
(bad)
add
test
sbb
dec
or
add
jbe
mov
fidiv
icebp
mov
es
add
dec
push
outs
sbb
mov
sub
sbb
jg
repz
xor
pop
mov
add
int3
sbb
aas
mov
clc
push
push
jne
ficom
jnp
dec
data16
movs
lods
(bad)
mov
add
add
adc
lea
mov
sub
or
mov
cmps
and
sbb
push
shr
add
dec
stos
mov
hlt
sbb
and
or
mov
cmp
dec
push
fs
mov
std
(bad)
inc
inc
add
and
ja
mov
inc
inc
or
cmps
inc
movs
movs
mov
add
mov
fadd
mov
inc
inc
or
sar
jnp
xchg
pop
cli
add
(bad)
cmps
or
add
test
aam
xor
mov
shl
adc
add
add
dec
sub
or
jb
add
dec
add
sbb
xchg
(bad)
sbb
add
add
test
cld
jnp
inc
nop
mov
popf
push
dec
mov
nop
and
clc
mov
add
add
or
call
pop
or
pop
test
mov
jmp
add
or
sub
xchg
add
adc
push
push
mov
mov
loopne
popa
call
lods
jne
lahf
loope
add
add
xlat
sub
inc
inc
add
jle
rol
jle
shl
dec
adc
or
dec
call
add
add
cdq
push
xchg
out
aaa
ds
lahf
aam
imul
pop
jl
ja
call
dec
loopne
add
add
mov
fsub
pop
fdivr
jns
retf
rcl
cdq
and
scas
retf
nop
lock
add
add
cmp
mov
lahf
xchg
loope
fbstp
fisub
shl
lock
add
pop
inc
cmp
inc
lock
adc
mov
in
aas
push
sub
aaa
aas
retw
dec
mov
add
add
sub
stos
leave
adc
jl
ret
adc
xchg
lock
and
dec
cmc
gs
cmp
add
add
jne
jp
or
push
test
jg
pop
out
cld
inc
ficom
add
add
pop
jmp
es
bound
mov
pop
jle
push
dec
pop
jl
rcl
daa
aad
push
and
add
add
js
sub
cmps
push
rcl
mov
pop
test
and
sub
rol
add
add
mov
pop
sub
pop
fwait
sbb
movs
aaa
jle
js
add
fld
pop
nop
int3
and
or
lea
ds
sub
iret
or
es
ret
mov
mov
add
ficom
xor
add
or
push
hlt
jmp
pop
out
mov
int3
cmp
pop
jle
sbb
std
sbb
fcmovbe
fcom
aas
and
add
add
add
dec
loopne
and
jne
loope
fcom
fadd
add
lea
jmp
rol
add
and
push
(bad)
(bad)
jmp
sub
jle
lahf
jmp
movs
call
sbb
dec
(bad)
sar
and
fs
leave
inc
fisubr
fadd
jle
mov
idiv
add
cmp
add
xor
pop
(bad)
fs
xchg
adc
or
cmp
and
jne
pop
mov
add
loop
imul
ficomp
mov
aam
enter
stc
nop
in
jl
cdq
loope
and
add
and
inc
loopne
lock
cmp
in
add
mov
pop
push
repz
ds
add
jb
adc
shl
adc
xchg
adc
inc
jg
sub
cld
xchg
dec
add
add
push
and
fdiv
loop
daa
adc
jecxz
sbb
cwde
scas
xchg
push
inc
jns
mov
add
pop
clc
cmp
dec
call
push
ja
xchg
lods
mov
push
jmp
add
add
leave
jne
add
adc
ficomp
rol
sub
lock
popf
cmp
cld
add
add
sub
in
add
test
nop
mov
mov
cmp
xchg
out
cwde
xlat
jae
add
add
movs
in
fs
push
rcr
mov
mov
sub
xchg
add
add
popa
inc
leave
cwde
mov
xchg
sahf
popa
dec
xor
shl
out
(bad)
jmp
add
add
sub
add
sbb
adc
pop
inc
shr
xchg
and
adc
and
add
add
xchg
retf
dec
jge
or
rol
mov
pop
into
icebp
mov
add
add
pop
xchg
push
rol
xchg
mov
xchg
fisttp
retf
xchg
loope
pushf
or
out
or
add
add
push
pop
xchg
jns
pop
repz
repz
int
push
cmp
jb
cwde
xor
cmp
call
neg
add
adc
fst
and
jnp
inc
add
push
add
and
call
pop
movs
jecxz
int3
sub
aas
dec
enter
jb
hlt
add
add
sar
pop
cmps
and
push
xchg
or
pop
fisttp
sahf
mov
shr
dec
add
add
inc
call
mov
scas
and
or
mov
mov
add
out
push
movs
in
and
in
mov
xor
inc
xor
push
pop
pop
add
xchg
add
xchg
push
add
add
clc
or
ins
xchg
and
and
mov
cwde
adc
add
rcl
mov
add
add
movs
out
movs
jns
cdq
fldenv
or
adc
movs
out
sub
aaa
push
mul
jecxz
add
add
push
xor
popa
imul
cmp
xor
dec
add
adc
mov
add
adc
and
add
or
sub
adc
push
cli
sub
mov
jb
inc
or
scas
cs
test
mov
lock
inc
add
add
data16
les
sub
neg
aas
out
loop
xchg
cs
out
(bad)
or
push
jnp
add
add
(bad)
adc
or
cmp
or
jnp
nop
or
mov
push
sub
pop
push
mov
fadd
add
add
or
push
addr16
and
pop
ja
test
test
push
dec
adc
stos
sub
or
idiv
add
cmp
pop
mov
inc
inc
adc
bound
ss
cmp
add
add
sbb
pop
inc
sbb
xchg
inc
mov
add
xchg
pop
mov
mov
add
add
mov
adc
scas
mov
test
mov
mov
into
std
sti
or
add
add
mov
sbb
jne
fdiv
inc
pop
ja
ficomp
enter
mov
push
add
add
adc
xchg
sbb
(bad)
cmp
mov
xchg
jbe
xchg
loopne
pushf
mov
mov
hlt
push
add
add
sar
push
mov
bnd
adc
test
je
inc
jno
ja
jp
sbb
xor
add
add
jb
cmp
jecxz
test
mov
or
pop
sbb
ret
adc
add
add
inc
popa
add
xchg
les
xchg
inc
add
ins
sbb
and
fbstp
jmp
add
add
outs
and
ret
inc
add
sbb
mov
or
aam
cmps
xlat
out
inc
adc
add
add
sbb
and
adc
xchg
or
enter
sub
les
push
adc
mov
movs
sub
je
(bad)
adc
xchg
dec
test
mov
push
mov
adc
adc
push
push
aas
jge
shr
out
fsubp
out
(bad)
in
or
mov
add
adc
out
popf
mov
or
mov
adc
or
out
sbb
(bad)
lock
add
stc
adc
out
test
out
fbld
shl
das
adc
push
lock
pop
lods
push
pop
(bad)
and
add
add
inc
xchg
mov
dec
test
nop
(bad)
popf
xchg
jbe
cs
mov
add
add
in
push
std
cmp
pop
je
adc
and
in
push
cld
sub
add
add
dec
lods
imul
and
add
in
jmp
stc
ds
cvtps2pi
add
add
add
add
int
or
cli
sbb
xchg
leave
fwait
jg
daa
mov
add
add
imul
xor
imul
jns
mov
sub
add
mov
xchg
test
add
mov
or
hlt
mov
ret
cs
inc
or
jmp
mov
add
hlt
fsqrt
adc
pop
adc
hlt
mov
push
mov
fisub
hlt
ja
add
add
inc
sbb
repnz
cmp
push
std
inc
fidiv
adc
jle
push
xor
aam
push
cmps
lds
add
add
cs
jns
sub
outs
hlt
lahf
imul
out
mov
popf
mov
pop
add
add
mov
xchg
adc
js
jl
sub
pop
mov
pop
lahf
movs
nop
pop
sar
xor
add
add
mov
or
cmc
and
push
add
mov
adc
add
add
jmp
cmc
stos
mov
std
ins
push
jnp
es
les
add
add
stos
popf
mov
push
sub
mov
inc
(bad)
dec
sub
lock
add
and
cli
mov
dec
add
cld
addr16
pop
jmp
pmaddwd
add
add
cs
dec
cld
inc
mov
fisttp
push
pushf
popa
lock
cmp
fsub
add
add
xchg
or
jle
lods
pop
mov
push
xchg
pop
push
test
mov
cld
adc
add
inc
call
add
sbb
stos
jmp
aas
cdq
mov
ds
clc
pop
out
dec
add
add
jmp
fimul
dec
fld
jl
pop
add
mov
cmps
pop
mov
test
sar
add
add
mov
jmp
or
dec
mov
mov
clc
inc
cld
xor
scas
ds
(bad)
lods
nop
mov
add
jns
inc
cwde
push
pop
adc
sub
imul
push
xchg
inc
xor
push
and
add
add
enter
adc
jl
(bad)
retf
lods
inc
cmps
xor
stos
retf
in
inc
sbb
add
add
adc
(bad)
fcmovnb
cdq
(bad)
pop
add
mov
mov
xchg
nop
xchg
adc
mul
add
add
lock
and
add
xor
dec
add
xor
pushf
dec
stos
test
cld
ficom
jmp
and
adc
mov
imul
sbb
mov
add
sub
je
inc
ret
cmp
push
sub
in
xor
test
je
and
add
add
cmp
adc
sti
mov
pop
scas
enter
mov
jno
and
inc
push
stos
popf
add
add
jp
ror
arpl
xor
sbb
or
and
push
test
push
or
das
or
test
dec
ror
or
iret
aaa
ret
out
outs
mov
add
add
jno
shl
push
stc
loop
std
shr
out
push
mov
xlat
test
std
call
xor
add
add
sbb
mov
xchg
push
inc
lahf
push
cmps
fs
jmp
mov
add
mov
je
retf
pop
cmp
out
je
aaa
push
add
sub
jle
push
dec
dec
add
add
xor
dec
pop
jne
mov
fnsave
cdq
jmp
fld
add
add
pop
div
fst
xor
jb
(bad)
pusha
pop
mov
nop
jo
push
mov
in
add
add
movs
ja
dec
mov
mov
jecxz
in
xor
sub
rol
add
js
out
inc
jecxz
ins
jae
or
add
adc
or
pop
add
inc
dec
push
adc
add
jne
jl
mov
fwait
call
hlt
or
push
add
in
push
outs
mov
call
(bad)
pushf
nop
call
fistp
mov
mov
dec
out
dec
cmp
retf
add
movs
inc
xor
mov
mov
add
shl
movs
loopne
out
std
nop
movs
push
jmp
add
add
arpl
xor
add
mov
test
leave
cld
call
mov
mov
cmp
(bad)
in
push
mov
add
add
xor
xchg
in
shr
pop
loopne
inc
in
cdq
sbb
pop
sbb
ins
stc
sbb
sbb
sub
jmp
cs
std
sbb
dec
popf
(bad)
jle
jmp
sbb
mov
push
add
add
push
jns
out
dec
shr
jns
jle
mov
mov
out
jge
or
jae
add
add
cld
or
adc
mov
lds
cmp
sub
inc
cld
jo
mov
jo
cmp
je
fdiv
add
data16
mov
jg
push
add
add
push
jns
jns
mov
push
xor
inc
sub
aad
and
fld
cmps
leave
inc
jl
ins
add
add
adc
inc
jge
xchg
mov
sub
cmc
mov
add
and
lea
add
add
out
mov
sbb
mov
jo
xor
or
xor
fnsetpm(287
or
lea
add
add
cmp
lods
aas
in
or
and
inc
and
(bad)
sub
sub
inc
sub
(bad)
xor
test
add
add
(bad)
fs
xor
inc
cmp
cmp
arpl
inc
add
nop
inc
and
dec
pop
cmp
inc
dec
dec
pop
add
add
dec
test
(bad)
fs
or
pop
dec
(bad)
fs
or
inc
fs
(bad)
fs
add
add
cmp
test
(bad)
fs
cmp
inc
jl
(bad)
jmp
mov
and
pop
and
add
add
test
and
xchg
mov
sbb
enter
jnp
cwde
xchg
sub
pushf
xchg
add
add
mov
sbb
repz
cld
aaa
adc
pop
push
daa
and
jbe
aaa
push
add
add
sub
mov
rcl
inc
push
mov
daa
imul
and
dec
adc
add
add
push
hlt
or
adc
mov
xor
and
pop
adc
sub
adc
test
add
add
test
and
push
cmp
mov
inc
inc
cmps
sbb
mov
test
test
and
add
add
or
mov
test
test
xchg
mov
mov
add
add
out
cmp
mov
enter
xchg
repnz
pop
nop
pushf
mov
das
and
push
push
ficom
add
add
inc
stos
pop
pop
fldcw
or
jns
pop
or
mov
push
push
rol
add
add
fstp
dec
mov
push
lods
push
mov
mov
cmp
movs
push
bound
add
add
add
in
movs
inc
xchg
pop
sbb
imul
mov
sbb
test
test
add
add
imul
push
es
call
dec
pop
mov
xor
jbe
inc
in
pop
push
mov
repz
add
add
lock
cmp
btc
psubusw
add
xor
(bad)
push
lods
sub
cmps
add
add
pop
adc
getsec
dec
ret
mov
push
addr16
retf
in
and
mov
mov
add
add
sub
sub
aaa
enter
dec
or
(bad)
sub
scas
fdivr
push
stos
add
add
jmp
mov
je
pop
outs
nop
xchg
retf
sub
push
inc
js
pusha
das
sbb
add
add
xchg
outs
xchg
call
retf
ror
mov
xchg
or
push
in
add
add
push
xor
sub
jbe
aam
lock
jmp
mov
adc
adc
add
add
adc
push
inc
mov
movs
mov
sub
enter
push
dec
fisubr
xchg
add
add
in
dec
js
movs
enter
adc
ins
add
push
push
stc
sub
dec
or
add
add
jecxz
and
shl
add
cmc
cld
dec
fisubr
lock
sbb
mov
add
add
es
dec
ret
inc
hlt
inc
jmp
shl
jl
daa
cmp
cmp
jnp
add
add
xchg
call
push
leave
into
jecxz
xor
pop
out
jmp
sbb
add
add
sbb
and
adc
sub
nop
inc
sub
sbb
sub
push
cmp
add
add
fldcw
cs
fs
or
xor
inc
inc
ret
push
retf
cmp
and
les
popa
imul
sub
sar
movs
jb
fild
add
add
adc
mov
add
or
sbb
xchg
dec
stc
jae
and
inc
in
push
jae
stos
imul
mov
mov
nop
les
mov
add
mov
dec
int
xchg
in
jmp
les
dec
imul
mov
and
add
add
jg
dec
and
leave
and
hlt
aaa
mov
cmp
jp
test
dec
mov
inc
add
add
add
xchg
fstp
mov
fdivrp
dec
(bad)
sub
mov
jmp
leave
cmp
add
add
push
add
sub
adc
push
and
inc
adc
adc
sbb
mov
sbb
add
add
inc
sbb
sbb
and
inc
shl
push
and
sbb
and
push
int
adc
and
adc
add
add
or
dec
adc
jb
adc
jbe
mov
jmp
and
inc
(bad)
jnp
dec
cmps
pop
dec
inc
add
add
jno
sbb
dec
test
mov
jne
add
sub
xchg
or
icebp
add
mov
jl
xchg
pop
push
mov
mov
mov
sbb
mov
pop
add
scas
cmc
xchg
loopne
add
jle
add
add
push
or
stos
pop
cmps
xor
add
push
jmp
fidiv
add
test
loopne
jnp
hlt
ds
popa
mov
push
push
call
and
stc
lock
pop
jns
add
add
(bad)
out
jb
or
sub
in
mov
aas
adc
movs
pop
cmps
push
adc
sub
add
add
mov
xchg
cmps
cld
loope
int
jns
mov
es
nop
mov
call
add
add
dec
pop
leave
adc
fwait
push
das
leave
adc
jmp
sar
psubb
mov
add
push
lds
add
xchg
jp
mov
shufps
mov
add
pop
inc
into
mov
lahf
in
or
adc
fsubr
mov
dec
push
lahf
dec
fdiv
add
add
push
adc
movs
loopne
push
mov
scas
push
pop
xor
les
(bad)
mov
dec
sub
aaa
add
add
jo
and
jo
leave
inc
push
sub
and
add
add
sub
das
idiv
xlat
mov
retf
aam
adc
loope
add
add
sbb
dec
in
cs
imul
add
pop
jge
lods
les
or
or
jmp
push
mov
test
aas
fs
sub
add
add
inc
and
and
dec
or
inc
mov
jb
scas
fst
mov
add
ret
imul
add
dec
icebp
pushf
mov
mov
outs
call
add
add
out
push
les
cmp
dec
or
jle
adc
inc
cmp
iret
mov
add
jle
lds
sbb
fidivr
scas
push
inc
jne
nop
sti
retf
jle
(bad)
mov
call
inc
mov
jo
sub
or
jne
movs
mov
mov
mov
add
add
inc
ret
cmps
sbb
arpl
mov
fs
in
movs
clc
adc
add
add
and
sbb
aas
ret
dec
push
pop
xor
add
mov
add
add
inc
leave
dec
es
mov
mov
or
add
or
sbb
test
add
xor
add
jne
add
and
(bad)
cmovbe
push
or
jp
or
xchg
add
add
(bad)
(bad)
push
call
cmp
push
dec
sbb
or
push
and
add
add
and
pop
push
leave
adc
cwde
jecxz
push
inc
imul
(bad)
scas
cli
cmc
icebp
pusha
ret
(bad)
xor
add
add
mov
fbld
sbb
add
repz
xor
rol
retf
(bad)
stos
mov
outs
add
add
xchg
jl
sbb
adc
pop
xchg
add
push
rcl
adc
jmp
mov
outs
scas
pop
or
cdq
mov
add
add
ficom
sete
jmp
loopne
jns
out
je
mov
xchg
ret
js
adc
add
add
into
dec
xchg
add
dec
adc
mov
adc
cld
add
xchg
adc
add
adc
and
jmp
out
or
add
retf
push
jg
jl
adc
mov
movs
inc
and
add
jo
fild
scas
loop
jne
xchg
push
sti
leave
cmc
stc
shl
(bad)
nop
cs
or
add
add
push
ins
fmul
xchg
mov
lea
test
xchg
inc
push
inc
adc
and
add
out
add
add
push
ficom
dec
sub
cmps
rcr
mov
sbb
and
shr
add
add
xchg
pop
adc
stos
int
retf
and
add
or
push
movs
xchg
(bad)
enter
push
sbb
add
add
movs
inc
test
sub
mov
ds
mov
pop
rcr
sub
adc
add
jmp
(bad)
xor
(bad)
mov
loop
mov
pop
adc
add
add
jne
scas
adc
jns
adc
cmp
jne
movntps
daa
test
add
add
add
sbb
in
adc
jnp
mov
retf
retf
cld
popf
and
lds
xor
mov
add
out
cdq
lea
int3
adc
stos
xor
adc
inc
push
xchg
(bad)
out
mov
inc
push
xchg
add
add
aaa
leave
or
repnz
adc
movs
jg
mov
leave
aaa
sbb
loopne
test
push
mov
add
add
test
dec
xchg
mov
push
pop
and
sbb
bound
les
add
add
mov
inc
jmp
mov
(bad)
shr
add
jne
dec
clc
js
mov
jne
dec
pop
sub
fld
add
add
mov
leave
add
retf
mov
pop
and
xor
sub
shr
push
aad
add
(bad)
fldenv
jmp
aad
push
gs
lods
in
jmp
add
add
rcl
add
(bad)
mov
jne
xchg
pop
inc
adc
sbb
call
add
add
(bad)
cmps
mov
add
(bad)
shl
adc
and
jns
pop
xchg
mov
xlat
loope
mov
mov
add
jo
add
cmp
adc
add
addr16
adc
hlt
jo
or
mov
xor
add
add
mov
inc
adc
adc
jae
lods
les
mov
pop
fisub
cs
jno
or
cmp
leave
movs
into
add
in
inc
xchg
fisub
and
xor
sub
mov
sub
int3
sbb
pop
mov
inc
push
add
add
call
xchg
mov
push
push
imul
push
xor
adc
dec
loope
das
add
add
inc
xchg
cmp
xchg
pop
adc
popf
xchg
or
adc
aaa
out
loop
dec
scas
jne
push
adc
daa
add
add
or
sbb
clc
jg
sbb
sbb
mov
inc
sti
popf
push
or
call
push
popa
pop
xchg
fadd
add
add
fs
cmp
sbb
and
enter
inc
or
dec
in
xor
sbb
add
add
or
dec
push
inc
mov
cmp
in
icebp
mov
jle
jecxz
push
and
push
sub
add
add
cmp
mov
icebp
movs
jle
push
popf
pop
add
cli
adc
cli
mov
scas
mov
add
popa
jl
shl
sub
mov
push
sbb
or
adc
inc
jg
sbb
mov
jecxz
add
add
loope
sbb
pop
fs
jmp
clc
jne
das
scas
jns
pop
or
movs
dec
dec
clc
mov
movs
arpl
add
add
pop
jle
nop
mov
and
sbb
mov
sti
lahf
push
mov
shr
call
xor
add
add
sar
movs
loopne
dec
inc
enter
jmp
loop
push
rcr
xor
xchg
add
push
dec
add
xlat
add
sbb
push
or
mov
and
add
cmc
fstp
cmps
jmp
call
shl
inc
add
add
imul
inc
mov
jle
inc
sub
sbb
imul
imul
sub
cld
add
add
sub
mov
in
xchg
sti
or
call
push
or
in
push
cmp
add
sub
pop
cmps
xlat
movs
aad
add
aas
xlat
in
or
les
add
add
add
push
or
mov
nop
jge
pushf
dec
repnz
mov
jbe
out
call
add
and
out
mov
cmp
stos
adc
jbe
push
xchg
adc
dec
lock
mov
add
ror
push
lock
xchg
das
std
xchg
dec
cmp
das
and
outs
add
add
inc
int3
jns
jmp
xchg
(bad)
ror
push
jnp
jmp
cmc
sbb
jmp
dec
and
inc
repz
stos
test
add
push
sti
sahf
adc
mov
out
leave
mul
or
jo
retf
jns
jno
add
add
xchg
dec
mov
sbb
cmc
out
daa
xlat
in
out
cmps
hlt
mov
xchg
jmp
cmps
add
add
sbb
loopne
je
jg
daa
jmp
xor
sbb
add
shl
adc
add
add
push
push
mov
test
outs
(bad)
iret
dec
and
leave
and
or
sbb
add
cmp
add
fcmovbe
pop
icebp
dec
les
aad
mov
adc
push
dec
movs
cld
or
cmc
jne
repz
lock
and
fsubr
xor
mov
sub
out
(bad)
je
sbb
add
add
mov
in
or
sub
and
outs
add
retf
movs
jmp
pop
loopne
das
add
test
add
add
cwde
xchg
or
xchg
jae
inc
lock
or
fbld
outs
in
out
mov
pop
push
add
add
add
loope
and
pop
mov
dec
stos
sub
mov
iret
outs
loope
push
add
add
and
movs
jmp
push
and
mov
jmp
in
sbb
pop
cld
mov
add
add
dec
inc
mov
cld
fadd
fadd
clc
outs
xchg
or
push
imul
cmp
add
in
dec
and
push
test
mov
adc
lock
sahf
xchg
mov
sub
sti
xchg
xchg
sbb
sub
add
std
xchg
scas
mov
mov
add
xor
inc
hlt
mov
or
add
add
retf
not
or
test
inc
lea
cld
add
sub
push
push
mov
cmp
adc
inc
dec
xor
add
int3
test
sahf
retf
or
sub
xchg
je
imul
out
add
jns
add
add
cli
adc
sbb
imul
adc
pop
es
pusha
push
dec
and
gs
pop
jns
(bad)
adc
add
add
(bad)
and
xor
loope
aas
dec
dec
adc
cs
mov
loop
add
add
add
shl
cmp
mov
mov
retf
sub
or
mov
inc
leave
hlt
add
add
or
pop
xlat
pushf
loopne
mov
cmp
outs
cmc
loop
sahf
les
cmp
add
add
adc
mov
adc
cmp
ret
sub
(bad)
xor
or
push
movs
pop
scas
mov
add
add
mov
push
xchg
jb
cmc
xchg
inc
in
add
inc
and
dec
ret
cmps
(bad)
xor
adc
add
outs
loope
jno
mov
sahf
into
jmp
dec
popa
push
std
mov
mov
pusha
inc
xchg
sub
jb
add
add
loopne
mov
lock
jmp
mov
cld
out
xchg
(bad)
out
cmps
ret
ds
add
add
pop
xchg
and
or
mov
dec
sub
xchg
sbb
lods
mov
ret
push
pop
mov
rol
sbb
xchg
mov
adc
test
inc
mov
add
or
aam
or
dec
mov
aam
add
shl
lea
and
aam
mov
cld
add
add
push
or
cld
mul
aam
in
and
loope
or
adc
and
mov
mov
out
xor
xchg
adc
add
add
push
fwait
pop
xlat
leave
mov
and
fs
sub
call
(bad)
mov
adc
add
add
cmp
and
pop
xlat
jae
test
xor
or
jae
mov
pop
push
lods
loope
xchg
add
add
and
cs
int3
adc
jo
sbb
push
jecxz
sbb
or
or
imul
mov
adc
and
pop
mov
movs
push
pop
or
add
add
add
mov
je
push
mov
push
pop
mov
or
jns
stos
adc
dec
add
add
outs
inc
mov
push
int3
addr16
xchg
sub
ins
adc
cmp
or
cld
sub
in
dec
jnp
add
add
ror
daa
add
cmp
call
push
mov
les
jmp
or
dec
or
ins
rcr
add
add
cmp
push
sub
or
or
and
or
mov
stc
push
push
sub
add
add
jns
pop
jmp
aas
xchg
cmp
data16
adc
sub
js
loopne
push
jg
arpl
add
add
push
cmp
add
lea
mov
mov
nop
jmp
jle
xor
add
sub
add
or
ror
or
jmp
mov
push
mov
jg
and
and
lods
cmps
dec
add
add
xchg
push
mov
lea
cmps
mov
push
cmps
or
ins
dec
nop
scas
cmp
cmp
add
add
adc
leave
pop
outs
add
call
mov
cmp
in
cmp
or
add
add
and
xchg
jbe
inc
fnsave
push
fst
push
scas
sbb
mov
scas
mov
hlt
aaa
add
add
xor
fcom
cli
adc
xchg
hlt
xchg
pop
cmp
mov
jle
fsub
scas
repnz
shr
add
add
dec
stos
retf
cli
adc
loop
test
inc
scas
mov
in
mov
cld
cwde
loop
popf
(bad)
add
add
pop
xchg
push
cwde
cli
pop
rcr
pop
cmp
add
call
push
leave
push
cmp
cmp
add
add
and
cmp
aaa
test
das
or
mov
movs
aas
inc
into
add
add
add
sub
jecxz
dec
jne
xchg
jbe
jae
mov
ds
ficomp
retf
add
pop
add
dec
add
inc
lods
fisttp
mov
lahf
je
in
sub
add
sbb
les
out
out
nop
add
add
out
fwait
out
in
cld
jmp
inc
cs
or
adc
adc
je
mov
es
add
add
outs
test
adc
sbb
and
cdq
and
adc
sbb
and
add
add
popf
rcr
je
push
icebp
mov
mov
call
lock
jnp
sub
fs
mov
retf
and
adc
fild
inc
add
pop
aaa
and
jo
push
pop
in
out
imul
cmc
and
movapd
mov
mov
cmp
adc
inc
add
add
sbb
sbb
push
ret
sub
es
aad
(bad)
fidivr
and
jne
add
add
xchg
or
mov
frndint
xlat
lock
xlat
rol
mov
dec
rcl
test
add
call
adc
das
fucomi
ret
mov
jmp
leave
pop
cmp
sbb
add
jns
outs
and
fdiv
sub
lock
ins
and
jg
inc
nop
fmul
add
add
daa
dec
rcl
stc
add
cwde
sub
inc
je
je
push
cdq
and
push
sbb
add
add
test
sub
adc
jmp
push
dec
xchg
inc
out
(bad)
push
ds
mov
xor
add
adc
inc
sbb
dec
mov
cmps
sub
and
or
call
add
add
mov
stc
test
cs
das
add
shr
cli
mov
je
and
(bad)
aam
add
add
xor
mov
sar
loope
nop
xchg
mov
inc
mov
bound
xchg
add
add
and
mov
push
in
(bad)
xchg
enter
std
add
clc
imul
add
add
or
or
pop
cmp
xor
add
push
and
pushf
or
or
mov
add
add
mov
and
adc
sti
jg
mov
mov
jle
inc
adc
std
stc
and
add
add
inc
outs
and
dec
pushf
mov
jmp
and
repnz
je
inc
mov
imul
cmps
and
add
add
add
dec
cs
cwde
xor
loop
push
dec
jle
inc
dec
xor
add
xchg
add
add
push
daa
(bad)
push
add
sbb
or
jbe
push
dec
(bad)
mov
jmp
dec
or
add
add
add
inc
inc
popa
add
pusha
or
cmovb
cld
fwait
jb
and
les
bound
sub
add
add
jge
xchg
sub
and
mov
or
xchg
sbb
sub
fs
xor
push
sub
movs
fstp
push
and
add
add
inc
in
fs
cmp
sbb
adc
pop
test
inc
add
mov
mov
add
add
inc
mov
(bad)
push
sbb
fld
xchg
pop
pop
pop
dec
pusha
(bad)
cdq
iret
out
psraw
sbb
add
add
dec
sbb
add
push
jmp
mov
out
pavgb
call
enter
adc
add
add
pusha
or
rol
andnps
mov
lea
(bad)
push
movs
test
add
add
adc
popa
mov
call
mov
inc
pop
bound
jmp
retf
sti
pop
jle
add
add
or
shr
mov
cld
fmul
int
jge
out
jae
shr
push
(bad)
out
cmp
ins
sbb
add
add
jne
sbb
mov
sub
sbb
mov
fdivrp
sbb
mov
xchg
xor
add
add
inc
sbb
add
adc
hlt
sub
mov
jne
ins
lods
or
push
or
add
add
cmp
nop
sub
xlat
(bad)
jmp
pushf
push
icebp
or
bswap
adc
(bad)
jae
pop
add
add
sbb
jns
inc
out
xor
mov
lea
sbb
aam
inc
cmps
jne
and
add
add
loopne
and
mov
pop
ror
sbb
mov
(bad)
pop
fs
xchg
sahf
stos
add
add
mov
jmp
pop
enter
add
je
sub
sbb
push
xchg
xor
add
add
addr16
out
sbb
push
sub
adc
jbe
call
or
push
add
fisttp
fldz
fcomp
fstp
(bad)
push
or
sub
xchg
fsubr
dec
or
push
sbb
cmp
add
add
push
sbb
jp
inc
sbb
rol
ror
outs
jmp
jbe
sbb
and
enter
add
add
xchg
sbb
sub
lea
jae
aaa
lea
sub
(bad)
mov
je
add
add
inc
sub
push
dec
mov
leave
inc
xchg
and
or
xchg
mov
add
add
retf
or
pop
cmc
aas
pop
faddp
out
dec
mov
into
sti
sbb
inc
call
push
ret
inc
add
add
inc
push
inc
xchg
lods
out
in
fild
int3
jecxz
ja
enter
push
out
mov
out
add
add
push
push
dec
add
adc
push
pop
push
xor
add
(bad)
leave
cmp
int
or
mov
add
add
mov
test
shl
fs
cmp
mov
cmp
xor
sbb
or
add
add
inc
enter
mov
std
shr
dec
sbb
and
adc
and
adc
add
add
xor
cs
adc
out
into
fldenv
pop
xchg
hlt
adc
and
add
add
add
mov
jno
adc
mov
into
les
sub
popf
jne
xor
sbb
daa
mov
adc
push
lock
and
and
and
xor
cmp
jle
add
add
jbe
push
por
into
push
jge
push
push
and
jnp
div
out
jae
in
inc
mov
add
add
push
or
test
pop
jmp
xchg
aam
ss
lock
push
cdq
call
pop
dec
inc
rol
add
add
inc
int3
dec
add
movs
retf
nop
add
add
add
jp
dec
jmp
mov
add
les
cmp
(bad)
jg
popf
sbb
sbb
or
call
das
add
add
nop
adc
add
jg
or
shr
pop
push
adc
mov
test
push
clc
jg
cmp
lea
movs
outs
pop
clc
stos
jno
jne
xor
mov
adc
dec
daa
mov
add
add
cmp
and
push
inc
jp
sbb
sub
push
and
shl
add
loope
inc
jmp
call
inc
cmps
stos
imul
outs
in
inc
xchg
cmc
rol
dec
xchg
ss
scas
lea
cmps
test
jmp
inc
enter
sbb
cld
loopne
jmp
add
add
dec
test
inc
push
dec
push
hlt
daa
leave
aam
iret
retf
push
int
pop
or
imul
add
add
dec
js
xor
cli
mov
jmp
xchg
adc
int3
(bad)
ins
dec
cmp
add
add
mov
fnclex
and
fnstcw
aad
and
in
not
clc
retf
add
add
ror
clc
fldcw
cmp
mov
fld
or
fwait
mov
pop
add
add
adc
sbb
adc
sub
test
in
or
icebp
fstp
cmp
clts
add
add
cmc
jmp
pop
scas
retf
xor
nop
cmp
dec
cmp
test
sbb
jo
test
mov
add
add
outs
cmp
stmxcsr
xchg
pop
pop
loope
push
add
xor
loopne
cwde
into
add
add
lock
xchg
add
adc
mov
or
xchg
sbb
and
add
add
sar
or
(bad)
mov
adc
cld
lock
test
mov
push
dec
in
mov
mov
sub
fsub
xor
add
add
mov
push
das
mov
pop
push
(bad)
mov
jmp
mov
inc
inc
mov
jp
cli
aam
mov
fdivr
and
pop
lods
pop
loop
and
stos
bnd
das
add
add
in
mov
test
add
cmp
mov
mov
shl
and
out
and
jmp
leave
sbb
add
add
add
cld
jmp
in
xchg
adc
aad
enter
jmp
in
xchg
adc
add
retf
pop
sar
jmp
sub
xchg
in
popf
fimul
jle
and
call
sbb
out
add
add
dec
dec
adc
repz
mov
lods
add
les
sbb
test
adc
stos
fs
or
add
ret
dec
jne
xchg
pop
lock
push
jb
cmp
lock
in
push
xchg
stos
xor
out
lods
add
add
cld
imul
in
xchg
icebp
clc
arpl
fsub
and
cmp
cld
std
fidiv
fidivr
xchg
inc
add
add
xor
stc
jno
and
fcom
ds
call
std
(bad)
ficomp
punpckhbw
jbe
cld
xor
add
in
inc
pop
shr
rcr
(bad)
adc
ror
lods
cmps
dec
leave
xor
movs
mov
mov
fwait
cmp
call
mov
adc
mov
xor
scas
dec
push
ins
aas
dec
cmp
add
add
mov
mov
fnstsw
dec
(bad)
arpl
xor
imul
lods
jns
cmp
shr
sub
add
add
push
cmps
pop
pop
ins
test
fnsave
dec
jns
push
dec
scas
push
int
je
or
inc
lds
add
mov
(bad)
adc
pop
test
xchg
mov
clc
jo
add
fmul
cdq
ds
add
add
mov
push
cmc
sti
add
aas
pop
cmps
nop
dec
mov
adc
inc
outs
jo
add
add
imul
mov
out
cs
stos
imul
jnp
js
(bad)
push
dec
lods
add
add
inc
push
sbb
jecxz
dec
outs
je
imul
and
jmp
fiadd
cld
cmp
xor
fs
sti
add
add
fwait
pusha
push
add
mov
imul
lahf
jae
mov
rcl
add
add
retf
adc
movs
hlt
pop
jns
mov
cmps
cmp
jmp
xor
sbb
cmps
retf
jmp
cs
js
je
cmp
adc
test
hlt
push
push
sahf
inc
and
std
sbb
jmp
(bad)
test
cmp
mov
cmc
cmp
inc
clc
(bad)
stc
mov
pop
and
mov
cwde
adc
add
dec
fwait
movs
inc
pop
adc
dec
sub
cmp
imul
xor
cmp
add
enter
jnp
xor
dec
adc
cmp
cmc
adc
jg
add
add
jle
inc
jnp
push
push
add
dec
jns
inc
add
xchg
retf
jp
cmp
imul
add
add
lahf
nop
sbb
or
inc
add
jmp
adc
repz
jp
data16
lods
adc
add
add
pop
in
pop
cmp
jae
and
fwait
adc
mov
(bad)
call
clc
stc
mov
add
add
mov
adc
ins
cmp
mov
add
loop
add
aaa
inc
add
add
dec
sub
sub
adc
bound
aad
sbb
pop
shl
inc
aam
mov
je
add
add
inc
lea
dec
shr
jno
sbb
push
jns
mov
and
add
add
push
sbb
xlat
into
xchg
pushf
push
push
popf
loope
test
jle
xor
jge
xchg
pop
adc
add
add
push
and
pushf
pop
jb
cmp
add
jne
(bad)
(bad)
fsubr
and
inc
test
add
add
jp
loop
mov
inc
aam
sub
mov
mov
xlat
adc
dec
sbb
jnp
add
add
pop
mov
cld
dec
out
sbb
xor
or
out
pop
icebp
jmp
push
mov
mov
add
in
leave
adc
push
add
scas
and
adc
and
mov
and
pop
outs
push
inc
sbb
add
add
mov
mov
int3
out
(bad)
out
out
xchg
icebp
ds
aam
push
jns
dec
pop
fisub
adc
add
add
or
call
xor
push
and
adc
dec
fild
add
add
dec
adc
and
das
inc
pop
add
add
(bad)
out
xor
jle
and
add
add
inc
push
retf
adc
sbb
or
mov
ss
imul
push
cwde
inc
add
add
int
xchg
xchg
pop
and
inc
sub
cmp
add
stos
or
mov
rcr
pop
and
add
add
mov
add
inc
shl
dec
pop
repz
mov
sbb
sub
pushf
or
add
add
ja
cwde
(bad)
aas
sub
sbb
imul
(bad)
xor
mov
push
or
ds
xchg
add
push
push
and
fdivr
push
jae
pop
add
push
fwait
ret
test
cwde
addr16
jp
daa
jge
add
add
push
and
add
inc
mov
in
fiadd
pop
xchg
test
jg
shl
push
aaa
or
je
mov
and
jbe
xor
add
or
add
add
daa
dec
mov
and
push
nop
das
mov
test
jmp
test
cmp
sbb
add
fst
add
push
inc
add
mov
mov
enter
mov
(bad)
inc
add
add
or
arpl
mov
shl
inc
pop
sbb
les
push
and
scas
into
test
add
sbb
add
call
sahf
xor
call
push
dec
and
pop
or
cli
aaa
das
mov
xchg
add
add
and
cmp
or
adc
lods
xchg
fs
pop
test
add
push
add
add
(bad)
push
adc
cmp
inc
jmp
sbb
dec
cmp
push
js
inc
add
call
xlat
xlat
push
jecxz
aam
add
add
mov
xchg
adc
fsubr
sbb
mov
cmp
out
push
ficom
xchg
and
shl
jg
iret
or
jne
jle
or
dec
mov
cmp
pop
xchg
scas
mov
add
add
adc
and
mov
shl
in
movs
xlat
lock
mov
dec
pusha
in
jp
mov
add
push
out
out
icebp
scas
aas
retf
movs
adc
dec
mov
das
popf
bound
fdivr
add
and
jl
pop
cs
xor
xchg
mov
push
cmp
test
in
add
jge
adc
(bad)
inc
jmp
jmp
add
add
movs
or
sub
pop
in
pop
inc
popf
xor
mov
mov
rcl
add
cmp
mov
sbb
mov
sbb
and
pop
not
loop
dec
xor
clc
test
add
add
push
and
inc
fnstsw
mov
in
lods
jp
nop
cmp
das
icebp
mov
add
dec
push
ds
test
jbe
push
lods
or
or
(bad)
jmp
test
push
push
pop
or
push
add
iret
in
stc
sbb
ss
mov
and
inc
dec
pop
in
push
pusha
xchg
cmps
sub
push
dec
add
add
sbb
add
mov
add
mov
jne
sbb
aad
or
add
add
adc
adc
cmovbe
xor
pop
mov
out
inc
daa
jnp
nop
mov
std
sbb
add
add
pop
(bad)
clc
cld
mov
inc
dec
jg
sub
inc
imul
add
cmp
sub
dec
add
add
push
xor
cmp
inc
or
and
mov
call
push
or
add
add
add
add
jmp
push
stc
adc
pop
nop
and
xor
shl
xchg
lods
pop
mov
add
add
cwde
das
cs
add
sub
adc
xchg
js
frstor
pop
or
clc
adc
int
retf
add
les
xchg
out
mov
lock
repnz
lea
das
adc
mov
add
xchg
add
add
inc
push
add
push
sbb
jp
arpl
or
call
aaa
mov
sahf
cs
scas
retf
add
aam
pop
or
and
cmp
sub
mov
push
mov
xchg
mov
mov
add
sbb
pop
xor
aaa
enter
and
push
fbld
mov
or
and
add
add
stc
sub
inc
pop
push
or
jle
mov
pop
jne
ds
add
add
imul
dec
adc
push
inc
rcl
movs
or
inc
cmp
fwait
sub
add
add
jmp
es
aaa
add
test
ins
sbb
mov
add
mov
mov
xchg
mov
adc
pushf
arpl
aas
dec
es
xchg
(bad)
sbb
push
push
popf
add
add
mov
jmp
rol
fs
pop
cmp
jp
retf
retf
xlat
sbb
popf
pushf
add
add
cwde
and
mov
mov
sbb
xchg
push
callw
cmp
xor
pop
jmp
into
fldenv
add
xchg
ja
cmp
pushf
jle
jmp
and
icebp
mov
add
add
and
nop
cwde
jae
push
sbb
pushf
add
cwde
mov
jmp
sub
loop
jg
add
add
inc
add
adc
ret
mov
mov
aad
sbb
shl
dec
xchg
loope
add
add
enter
clc
push
jl
inc
mov
dec
jne
ds
dec
aad
out
xchg
loop
and
sub
add
add
pop
inc
sub
nop
fisttp
shl
adc
sahf
xchg
jp
lea
xchg
call
dec
add
add
cmc
sub
push
and
test
iret
movs
and
push
mov
stos
int
hlt
jmp
pop
push
mov
cmp
inc
and
dec
pop
xchg
jge
push
add
jecxz
cld
js
call
in
mov
push
add
add
add
inc
fbld
and
and
sbb
push
and
xchg
cli
out
les
loopne
add
add
dec
push
mov
cmp
call
mov
cmp
sub
(bad)
and
test
adc
div
add
add
xor
test
scas
ins
aas
cmp
or
mov
mov
xchg
adc
stos
cwde
add
and
push
push
aas
dec
fsub
cmc
mov
cmp
add
mov
mov
fcom
inc
stc
loopne
enter
jmp
add
add
daa
clc
push
cmps
cmc
cmp
mov
mov
pop
lods
dec
cld
mov
mov
test
add
add
imul
jmp
test
jmp
test
loope
push
xchg
inc
pop
add
into
add
add
mov
adc
inc
adc
arpl
jmp
sbb
aas
sbb
mov
fldcw
pop
loope
or
adc
inc
jmp
in
xchg
push
test
xchg
jae
cmp
push
sbb
add
add
cmp
jl
mov
add
dec
mov
or
bnd
adc
out
jae
ins
es
push
add
lods
or
shl
xor
pop
pop
push
or
icebp
jl
pop
les
or
adc
add
add
movs
xchg
pop
xor
or
mov
inc
inc
sbb
and
xchg
lock
sbb
and
adc
mov
dec
test
(bad)
push
mov
sbb
or
push
xchg
xor
mov
add
add
xor
push
or
mov
xchg
int
dec
jle
xor
dec
aas
lods
std
aad
dec
cld
pop
imul
add
pop
sub
pop
sbb
or
add
xchg
bnd
and
jb
push
adc
xor
mov
add
add
push
lock
jb
push
adc
clc
sbb
mov
xor
pop
pushaw
in
adc
push
mov
jmp
mov
push
cmp
jb
pop
pushf
sbb
dec
push
dec
inc
add
add
mov
cdq
scas
pop
mov
mov
retf
and
aaa
js
push
retf
pop
rol
add
retf
dec
add
jle
adc
add
add
popf
jg
xchg
ja
push
jmp
inc
inc
or
fs
aaa
stc
ja
loopne
push
add
add
xor
inc
stos
leave
inc
pop
xchg
push
adc
sub
das
inc
jge
or
jbe
mov
push
add
add
pop
fistp
out
mov
jo
repnz
stos
push
lods
retf
fcom
jge
and
out
add
add
jecxz
leave
jo
or
aas
xchg
jae
jp
and
stc
jl
out
scas
push
jae
aaa
cmp
jo
je
add
add
push
fsubr
in
jns
cs
les
loope
(bad)
aam
sbb
or
sbb
ret
add
add
cmp
mul
mov
dec
clc
stos
je
and
or
dec
nop
or
add
add
or
aas
jmp
xchg
or
enter
or
mov
jmp
out
lds
rol
retf
jl
adc
cmp
rcl
nop
jnp
loope
inc
leave
test
jno
je
add
add
push
leave
nop
add
stos
mov
into
and
jnp
stos
mov
xchg
sub
jno
imul
mov
(bad)
dec
cmp
add
arpl
in
jmp
or
jmp
movs
scas
mov
fucomp
mov
add
push
add
push
push
aad
lock
adc
lahf
jmp
adc
xlat
cmp
add
mov
arpl
sbb
mov
or
push
inc
inc
add
dec
pop
sub
ret
jge
add
add
sbb
stc
mov
mov
inc
fdiv
(bad)
fcmovne
or
hlt
aaa
je
add
add
jb
push
inc
push
add
inc
or
push
sub
js
idiv
sub
jg
add
add
inc
fistp
jno
fadd
xor
pushf
or
cmp
xchg
fstp
inc
into
adc
push
(bad)
add
sub
test
jle
jbe
jl
mov
fild
push
shr
and
outs
dec
daa
add
add
add
dec
cmp
data16
(bad)
dec
in
mov
adc
in
repz
mov
push
sbb
add
add
mov
shr
mov
shl
or
jo
in
pop
push
cmps
inc
or
pop
xchg
lahf
pop
add
add
dec
pop
inc
jne
xchg
inc
dec
stc
mov
cmp
jmp
enter
and
add
add
add
xchg
dec
lods
loopne
sbb
lds
xchg
adc
mov
pop
add
lock
push
mov
add
xor
xchg
idiv
push
pop
xchg
mov
mov
enter
cmp
dec
jge
adc
and
add
add
sbb
es
cdq
adc
sti
mov
repz
call
cmp
add
and
adc
hlt
jmp
dec
xchg
in
int
(bad)
data16
adc
add
ss
ja
lock
add
add
in
adc
cmp
and
jl
sub
(bad)
mov
jbe
not
mov
mov
add
add
(bad)
iret
xchg
in
mov
or
std
add
std
and
or
or
fnstcw
fild
add
add
xlat
in
add
cld
lock
push
mov
adc
scas
pop
pop
mov
add
add
dec
gs
scas
mov
mov
mov
pop
mov
sub
push
add
fild
inc
add
add
jmp
inc
pop
xchg
and
jge
hlt
mov
add
mul
mov
adc
add
add
lds
scas
mov
mov
add
jg
lock
inc
test
add
add
or
dec
hlt
mov
push
or
mov
jge
add
add
in
pop
sysret
inc
sub
inc
mov
or
adc
pop
mov
dec
sub
movs
sub
add
add
shr
lods
imul
icebp
dec
dec
jne
mov
or
add
add
adc
ret
pop
inc
jo
push
adc
mov
jno
xchg
adc
outs
xor
add
div
push
dec
cld
sbb
in
jbe
je
add
mov
mov
mov
add
add
adc
and
push
add
or
sbb
pop
sbb
aam
ins
xchg
das
mov
sub
add
add
dec
xor
inc
and
adc
or
sub
fcom
xchg
lock
jmp
push
ret
test
sbb
add
cmp
in
mov
ja
jne
mov
pushf
add
add
loop
cld
and
scas
adc
fdiv
movs
push
or
cmc
loopne
cmps
call
add
add
xor
dec
add
dec
movs
and
aas
mov
iret
xchg
xor
mov
sbb
std
jae
xlat
mov
fs
add
jg
xchg
retf
mov
dec
cmc
mov
add
add
mov
call
xchg
adc
(bad)
pop
das
(bad)
(bad)
call
icebp
push
add
add
push
xchg
or
rcl
js
sub
adc
(bad)
movs
mov
mov
push
add
add
xchg
shl
adc
inc
adc
and
inc
ret
les
(bad)
and
inc
leave
retf
add
add
retf
dec
aas
div
push
mov
and
or
nop
inc
aad
and
mov
nop
dec
popf
add
add
pop
ds
push
or
(bad)
pop
inc
add
adc
and
in
pop
jne
jbe
inc
add
add
inc
mov
shl
cmp
popa
mov
jmp
repz
ret
push
add
add
add
push
mov
push
dec
loope
and
push
jnp
adc
test
sub
xor
add
add
adc
imul
pop
xchg
out
fld
pop
inc
add
jl
xor
adc
add
add
add
push
iret
movs
std
xchg
aam
push
cmp
popf
xor
adc
pop
mov
out
sub
add
jne
add
add
daa
dec
mov
sub
add
mov
mov
out
inc
push
sahf
mov
add
mov
rol
and
inc
(bad)
jmp
stos
mov
loopne
adc
lods
xor
jne
jnp
add
add
cmps
add
dec
or
mov
mov
call
mov
scas
shl
mov
enter
inc
xchg
mov
sub
stc
adc
add
add
shl
scas
xor
mov
mov
cmc
sbb
adc
dec
xchg
leave
mov
popf
aas
cmp
into
jae
dec
mov
adc
movs
push
dec
cdq
mov
mov
outs
jmp
test
jge
inc
and
leave
sub
mov
test
add
add
jle
inc
test
xor
inc
cmps
nop
test
lea
or
and
xchg
(bad)
jmp
sbb
adc
or
inc
jmp
jg
fld
enter
add
dec
cld
out
mov
mov
addr16
out
or
in
xor
and
jge
or
add
add
mov
test
jle
inc
test
jb
jbe
out
xor
push
test
or
push
add
add
int3
xlat
add
test
add
push
dec
mov
dec
jle
clc
mov
inc
lahf
sub
adc
shr
add
or
dec
jecxz
adc
dec
fisub
cmp
mov
jb
pop
int3
jp
add
add
jns
pusha
call
inc
cmp
sbb
gs
mov
aas
pop
mov
add
mov
je
adc
xor
cmp
inc
xchg
inc
dec
cmp
es
add
cmp
push
lea
pop
rol
sub
add
retf
out
cld
ja
sar
mov
hlt
aas
add
dec
fdivr
inc
imul
jp
cmp
call
add
add
(bad)
jg
jp
fsubr
daa
dec
ins
pushf
inc
and
jp
cmp
call
jae
mov
add
add
inc
aam
mov
jmp
out
sub
fcom
test
retf
jbe
fdiv
mov
inc
add
add
imul
out
adc
idiv
fsubr
sub
fwait
adc
jbe
inc
or
and
jmp
jg
add
add
adc
sbb
das
test
push
dec
push
jmp
hlt
das
jne
test
movs
or
add
in
je
add
add
je
cli
int3
jne
sbb
lahf
fdiv
bound
add
das
adc
add
add
or
mov
and
movs
sbb
je
sbb
lahf
(bad)
xchg
add
add
es
sbb
ja
cmp
mov
dec
ds
hlt
mov
add
add
ins
movs
mov
ins
rol
ins
test
cs
fucomi
dec
seta
mov
jmp
adc
add
add
jg
mov
lock
inc
repz
adc
stc
cmps
jmp
mov
jl
add
add
jmp
mov
or
daa
je
stc
mov
inc
movs
in
cmps
push
icebp
mov
mov
add
cmp
jl
dec
cmp
mov
cmps
and
push
inc
jmp
clc
imul
or
add
add
sub
test
cmp
in
cmps
sbb
mov
add
xor
repz
pop
bound
xchg
add
mov
add
add
mov
cld
mov
and
in
sub
sbb
or
(bad)
push
xchg
mov
(bad)
xchg
add
add
neg
cs
jg
mov
mov
dec
(bad)
out
in
movs
jo
cdq
loope
add
add
sti
cli
push
or
or
and
inc
adc
fistp
mov
into
add
add
jae
in
mov
xchg
aas
(bad)
dec
repnz
and
and
add
add
aas
xchg
fwait
cmp
stc
cmp
inc
inc
add
jg
mov
or
sahf
mov
lahf
out
lock
add
xor
xchg
aaa
xchg
xchg
xchg
and
xchg
mov
lock
pop
xchg
rcr
push
add
nop
frstor
sbb
stc
or
sub
mov
xchg
clc
mov
add
dec
mov
repnz
mov
inc
mov
add
mov
fidivr
dec
out
enter
rol
mov
xor
add
add
ja
fwait
mov
jg
mov
lahf
int
sti
dec
(bad)
sti
xchg
clc
mov
xlat
jns
aas
mov
add
add
cmps
jl
mov
aaa
out
sar
nop
dec
jae
and
pop
adc
add
add
mov
cmp
mov
mov
and
push
dec
sub
mov
add
add
add
aad
lea
dec
cwde
add
sbb
mov
add
or
pop
jmp
jb
mov
dec
cld
mov
add
sbb
mov
fmul
and
mov
push
(bad)
mov
sahf
daa
stc
lahf
leave
aad
xchg
jmp
stc
xor
cs
neg
cmp
dec
addr16
enter
lahf
call
retf
adc
pop
stos
leave
ja
pop
pop
cmp
xor
or
and
dec
dec
mul
inc
add
add
or
in
enter
inc
add
mov
mov
xchg
sub
mov
pop
xchg
addr16
add
or
cmc
stc
inc
pop
sbb
mov
jne
and
jle
div
add
xor
jnp
mov
cmp
cmp
push
dec
adc
int3
jne
cli
pop
rcl
adc
add
add
pop
call
adc
mov
mov
fcomp
pop
jg
push
scas
dec
add
add
adc
ja
ret
adc
jmp
and
loope
jp
outs
out
mov
cmp
adc
aam
xchg
pop
add
add
clc
movs
rcl
pop
test
movs
cld
fnsave
(bad)
test
mov
(bad)
sub
add
add
push
mov
sti
sub
xchg
retf
mov
ficom
in
cmp
cdq
adc
ficom
or
ins
loop
adc
sub
push
ja
je
jb
jl
sbb
xchg
push
inc
add
add
nop
es
sub
ins
pop
nop
lock
ins
mov
cmp
movs
pop
mov
dec
add
rol
inc
outs
repnz
adc
pop
leave
cli
sub
adc
stos
call
or
call
add
and
mov
jle
push
in
lods
xchg
or
cmps
mov
test
or
scas
mov
out
push
in
add
add
stos
push
xchg
imul
adc
xchg
pop
cli
es
cmp
cmp
add
xchg
push
mov
dec
xor
lock
and
jmp
out
adc
scas
add
add
mov
push
out
sbb
push
push
push
lahf
jns
test
test
push
jae
add
add
sar
movs
mov
ja
fsubp
test
and
daa
mov
add
adc
je
movs
push
xor
imul
pop
outs
mov
push
mov
mov
mov
das
sar
adc
dec
push
adc
pop
or
jne
jge
std
adc
(bad)
icebp
mov
or
add
stos
rcl
test
scas
and
test
retf
xor
and
fistp
add
add
pop
dec
ret
jbe
mov
add
cmps
sbb
mov
push
(bad)
rcl
mov
int3
ror
add
call
movs
mov
mov
dec
mov
and
loopne
or
test
push
push
jmp
inc
add
add
inc
in
mov
and
xor
scas
mov
cmp
test
jne
test
xchg
add
add
add
jmp
fst
push
cmp
inc
and
mov
sti
ja
push
xchg
cs
movs
adc
test
std
push
clc
ret
add
add
push
sti
loop
push
or
sbb
movs
in
dec
call
push
push
cmp
loopne
add
add
mov
xlat
mov
cmp
shr
inc
push
aam
dec
dec
outs
add
add
ror
popf
mov
xchg
loopne
mov
arpl
adc
and
adc
test
mov
add
add
push
push
dec
or
sub
std
and
inc
cld
and
adc
add
add
add
inc
cmp
outs
xlat
imul
sbb
adc
jnp
xchg
jno
or
add
add
dec
mov
push
mov
jecxz
adc
jmp
fs
xchg
inc
mov
add
add
lea
ret
jl
adc
shl
cs
jp
sub
ja
and
(bad)
imul
add
add
fs
mov
mov
pop
mov
mov
inc
xchg
leave
push
adc
add
ret
and
inc
xor
clc
test
xchg
push
repnz
cmps
adc
jns
mov
test
mov
inc
add
add
adc
ror
rcl
mov
mov
mov
push
add
add
push
adc
xor
xchg
daa
stos
add
xor
jne
gs
add
add
add
mov
mov
sub
int3
fidiv
adc
cmps
aad
cmp
and
or
add
add
and
cmp
lods
dec
push
data16
push
js
lea
jle
jns
pop
out
add
add
adc
jg
rcl
or
cmp
shl
sub
adc
mov
sub
pop
add
add
xor
ror
or
mov
cmp
fwait
mov
and
nop
mov
push
adc
inc
test
xchg
adc
sub
adc
xchg
inc
mov
adc
fadd
add
add
xchg
xor
push
xor
test
imul
adc
mov
mov
add
mov
nop
movs
xchg
adc
add
mov
push
test
and
add
pop
add
or
push
inc
inc
jmp
mov
lahf
movs
jle
lea
mov
pushf
or
sub
adc
adc
mov
add
add
rcr
daa
lock
daa
pushf
pop
leave
or
in
pop
cmp
aaa
je
ss
push
cmp
add
add
mov
test
sar
push
xchg
inc
dec
in
test
cli
cmp
xchg
cmc
adc
mov
and
add
jo
in
inc
or
icebp
bswap
sbb
aad
pop
popa
sbb
not
cwde
mov
add
add
mov
daa
or
push
in
sti
fldenv
adc
and
jae
adc
int
ds
add
add
push
sub
retf
call
pop
and
test
xchg
test
add
sbb
and
in
push
mov
jmp
mov
fld
outs
aad
or
add
add
dec
inc
add
dec
int
(bad)
add
imul
inc
nop
pop
mov
sub
mov
add
add
adc
jg
xor
jns
aaa
sbb
or
dec
aam
mov
ins
pop
outs
or
cld
shl
add
add
jg
pushf
call
push
push
sub
test
dec
add
mov
bound
cmps
arpl
add
add
and
scas
retf
lods
adc
add
and
and
ja
cwde
or
add
add
push
les
pop
enter
add
imul
xchg
sub
or
mov
call
add
add
sbb
push
mov
and
mov
push
jns
push
sbb
add
add
add
aas
and
xchg
sbb
add
or
pop
sub
je
adc
call
dec
lock
add
add
add
fisubr
scas
pop
jne
arpl
std
into
dec
or
sbb
loopne
add
jne
jmp
pop
mov
inc
sub
(bad)
push
das
clc
xchg
push
mov
retf
sub
jmp
add
add
movs
icebp
mov
or
loop
shr
pop
xchg
adc
iret
xor
dec
(bad)
dec
xor
call
add
inc
cmp
adc
push
lods
fidivr
inc
ds
mov
fs
mov
jns
cmp
and
pusha
(bad)
ficomp
xchg
add
add
inc
jle
xor
scas
jle
je
adc
dec
and
outs
adc
xchg
or
aas
stos
neg
inc
call
shl
mul
fstp
into
or
mov
pop
inc
add
adc
add
add
sbb
ds
mov
in
sub
fs
push
add
pop
add
dec
xor
and
stos
push
gs
add
add
push
pop
inc
sbb
and
pop
pmuludq
xor
(bad)
test
test
sub
and
add
add
adc
aaa
and
push
push
aad
push
in
cmp
mov
and
in
mov
mov
add
add
jae
sbb
ret
(bad)
push
xchg
test
cmp
lahf
ror
push
sub
lock
sub
add
add
test
addr16
leave
(bad)
arpl
mov
ds
out
sbb
jae
jno
shl
jae
xor
add
add
js
loopne
aam
xchg
out
sbb
jae
jp
retf
arpl
imul
(bad)
and
add
frstor
outs
inc
test
pop
jmp
lods
sbb
int3
cmp
gs
jne
mov
clc
mov
add
add
mov
movs
(bad)
sbb
jnp
sahf
out
into
loope
and
dec
and
(bad)
aas
xchg
jmp
scas
fdivr
les
add
add
xor
mov
cmps
call
int3
cmps
cmp
cmp
and
add
add
shr
pop
cmp
outs
dec
scas
and
adc
call
add
add
add
fdiv
lds
jb
adc
cmps
nop
test
xchg
std
fsubr
sbb
push
xchg
push
adc
add
add
cmp
adc
or
sbb
daa
adc
(bad)
adc
mov
add
add
sbb
add
push
test
xchg
popa
fcom
add
adc
lds
add
(bad)
loope
mov
mov
cmp
mov
mov
sub
dec
push
add
add
aas
mul
jmp
cli
sahf
dec
dec
mov
jb
lahf
imul
mov
cdq
inc
add
add
rol
aam
cmps
and
mov
je
or
aam
push
xchg
pop
jb
dec
shr
inc
xchg
adc
jp
sldt
add
mov
call
std
sbb
dec
adc
or
(bad)
scas
cld
add
add
sub
test
mov
inc
pop
mov
dec
shl
clc
int3
mov
inc
in
ins
jl
inc
test
or
(bad)
clc
inc
adc
add
outs
mov
and
inc
cs
cmp
sbb
jg
call
pop
mov
add
add
jle
sti
cmp
hlt
pop
cmps
jns
or
cdq
call
mov
sub
adc
sbb
add
add
ret
les
ret
or
adc
sub
or
push
mov
and
add
add
movs
pop
push
pop
ds
jle
push
cmp
jae
jmp
push
jle
in
and
fiadd
dec
stos
add
add
fild
jae
adc
repz
cld
and
imul
xchg
jecxz
adc
lock
add
sub
cdq
adc
jnp
mov
xor
and
mov
jmp
add
add
jl
jbe
jns
cli
jns
and
mov
sti
cdq
call
stos
cwde
inc
jg
and
add
add
dec
test
xchg
jae
or
adc
mov
fs
cmp
pop
mov
add
scas
ds
mov
xchg
jg
mov
inc
inc
(bad)
or
jb
fcom
je
add
add
jbe
and
lods
leave
mov
icebp
adc
inc
mov
add
xchg
std
mov
add
add
adc
xchg
mov
out
fmul
lock
leave
push
add
icebp
stc
rol
or
add
add
dec
sbb
pop
adc
and
push
push
dec
jmp
call
add
clc
jne
call
push
jo
out
xchg
mov
add
add
outs
ror
add
mov
mov
mov
sub
or
push
pop
sbb
add
add
and
cwde
cmp
jb
push
sbb
ja
pop
out
in
ret
dec
mov
ret
xchg
rol
add
add
xor
push
je
mov
add
rcr
leave
arpl
loope
imul
inc
push
in
add
add
mov
mov
push
sar
sti
je
int
outs
repnz
add
add
push
push
jmp
adc
jne
sbb
cmp
or
dec
inc
cmp
jle
iret
add
add
push
inc
add
aas
clc
(bad)
sbb
or
adc
lea
sub
xor
in
add
add
add
rol
cmp
jb
or
(bad)
sub
pshufw
or
jns
js
arpl
or
cmp
mov
hlt
mov
ds
retf
mov
sub
add
sub
add
push
xor
cmp
je
sbb
adc
lods
cmp
jmp
aaa
or
sar
shl
test
add
add
pop
pop
dec
into
cmp
scas
add
call
sar
popa
cmp
inc
sbb
test
add
add
push
push
jbe
shr
jne
jae
jne
xor
and
push
ret
xor
add
add
xchg
cld
test
push
and
sub
push
and
mov
or
cli
or
or
add
add
ret
adc
xchg
dec
call
cmps
cmp
cmp
jne
jmp
mov
(bad)
loopne
add
frstpm(287
shl
mov
fist
push
call
cmp
pop
add
add
lea
lds
push
ror
cmp
xor
cmp
push
je
add
add
jge
adc
jb
sub
enter
xchg
out
cmp
(bad)
jb
inc
scas
shl
add
add
adc
and
push
jno
sub
or
push
fst
dec
daa
jnp
xchg
push
fmulp
inc
add
add
push
mov
push
inc
or
call
adc
push
jl
mov
and
add
add
shl
fs
jle
dec
rcr
xlat
adc
mov
mov
js
ss
inc
add
add
js
sbb
repz
pop
nop
adc
push
pop
cmp
push
adc
xor
shl
ins
dec
jae
adc
add
add
fcom
push
les
jge
xchg
add
fadd
lea
and
add
add
mov
mov
xchg
xchg
push
pop
(bad)
loopne
adc
xchg
hlt
or
call
add
push
jo
pop
push
test
daa
inc
mov
adc
add
cli
or
dec
inc
jns
cmp
add
out
sub
sbb
mov
mov
sahf
adc
pop
inc
push
and
jo
push
mov
test
stos
add
add
adc
jne
fisubr
add
neg
push
xor
pop
dec
mov
add
dec
push
dec
imul
mov
push
mov
add
lock
hlt
out
rcl
sub
add
xchg
pop
jbe
test
cwde
cmp
mov
or
mov
sub
mov
add
push
xor
mov
pop
xor
inc
scas
dec
inc
cs
xchg
call
and
sub
add
add
lock
xor
inc
in
out
lds
jae
jp
mov
out
cs
add
add
cmps
adc
out
mov
sub
les
lods
mov
movs
out
push
adc
call
push
sub
add
add
and
mov
in
or
ss
ss
inc
cs
mov
dec
pop
cmps
xlat
xchg
mov
mov
dec
mov
xchg
add
lock
mov
ror
adc
iret
pop
and
add
add
das
aas
and
enter
enter
stos
stc
jl
adc
xchg
cld
xchg
cmp
add
add
leave
pop
cmp
pop
xchg
call
or
dec
sub
jl
and
jl
lahf
xchg
das
sbb
add
add
(bad)
mov
ret
hlt
push
fdivr
mov
xchg
add
mov
mov
add
add
sbb
add
mov
movs
push
add
mov
push
pop
or
ret
out
cwde
sti
sub
add
add
movs
cmp
bound
pop
pop
pop
jle
dec
jge
adc
inc
jne
push
adc
cmc
add
add
ins
cmps
and
jne
inc
sbb
nop
xor
aaa
push
lods
sbb
add
add
and
push
xor
sar
or
test
mov
ds
add
and
cmp
mul
jnp
jb
popf
sub
jmp
pop
mov
pop
nop
punpckhwd
imul
add
or
out
xor
movs
lds
jne
or
xchg
mov
(bad)
loop
push
add
jae
xor
out
cmps
pop
dec
push
adc
jmp
loop
xchg
sbb
cdq
inc
jmp
push
in
rcl
mov
pop
push
adc
pop
hlt
mov
lea
adc
cmp
add
push
loope
push
inc
xchg
mov
jg
add
inc
int
mov
add
add
clc
mov
imul
cdq
mov
test
add
sub
add
add
mov
repnz
xchg
int3
pop
fwait
xor
and
icebp
jo
add
outs
popf
sub
leave
add
add
pop
jb
or
mov
mov
daa
call
das
call
dec
mov
add
cdq
fwait
call
xor
mov
mov
inc
gs
inc
inc
dec
adc
add
jle
pop
sbb
out
inc
push
mov
jmp
(bad)
mov
jns
js
adc
out
pop
add
add
lods
cmps
retf
das
data16
ds
add
add
lahf
adc
adc
jbe
adc
add
add
add
scas
sbb
mov
fsubr
and
(bad)
adc
int
add
add
cs
bound
sub
push
inc
cmp
mov
into
gs
add
add
or
ss
xor
shl
or
mov
bswap
push
push
jbe
add
add
fld
aaa
push
nop
lds
lods
push
push
dec
adc
xchg
fnstenv
arpl
add
add
lock
fist
xchg
shl
cmp
pusha
pop
arpl
and
xchg
fs
sar
push
add
add
daa
hlt
(bad)
mov
das
pop
les
fwait
cmp
inc
cmps
push
pop
ret
or
(bad)
out
xlat
jno
push
cmp
pushf
bound
add
add
lea
mov
sub
dec
stos
mov
stos
cmps
jb
aad
sbb
test
add
leave
xchg
pusha
and
daa
sbb
sahf
je
mov
imul
scas
and
push
popf
or
add
add
push
inc
ins
sub
sub
arpl
add
aaa
xor
xchg
shl
and
and
mov
push
jb
fs
lea
fcmovnu
sub
ror
cmp
inc
and
xor
mov
jmp
add
add
retf
enter
xchg
mov
xchg
dec
adc
test
mov
push
adc
add
add
add
add
call
imul
sub
xor
mov
and
lock
add
add
ds
mov
aas
add
cmp
sub
int3
dec
dec
jle
and
jg
movs
or
popf
lods
int3
fmul
add
add
int
or
or
les
imul
pop
pop
lea
pop
cmp
cld
in
pop
sar
pop
add
add
adc
cmp
jmp
aaa
int3
pop
sbb
mov
sbb
inc
ins
inc
outs
arpl
push
in
in
add
add
add
jae
test
dec
pop
mov
xor
out
jne
in
into
sub
push
loopne
xchg
gs
add
add
ret
mov
test
pusha
mov
xor
(bad)
jae
not
lock
add
add
push
xor
mov
and
stc
jp
mov
fist
push
les
jmp
pop
jle
sar
add
add
mov
scas
out
cmp
scas
hlt
jl
push
inc
neg
jns
lods
into
sbb
stc
loop
cdq
mov
add
fmul
push
call
cmc
call
popf
scas
loop
imul
dec
and
loop
mov
mov
call
jbe
pop
bound
movs
cmc
cdq
into
in
xor
enter
inc
aad
add
add
ins
mov
jae
and
dec
aad
xchg
repnz
adc
dec
mov
add
add
hlt
pop
inc
cmp
adc
or
je
in
js
ja
or
push
pop
or
ins
add
add
inc
xchg
push
je
cdq
push
test
push
loope
mov
scas
jmp
mov
pop
mov
add
add
mov
or
cmc
loope
sbb
xor
or
out
push
fcomp
sub
shr
mov
pop
add
add
dec
or
jg
mov
rol
push
dec
addr16
cdq
cs
jl
mov
lea
inc
or
movs
jmp
add
add
or
lahf
cmp
pop
(bad)
das
mov
int
les
xchg
rcl
add
add
shr
clc
mov
adc
in
xchg
ins
cmp
adc
xor
sub
adc
cmp
add
int
xor
or
fisubr
or
inc
mov
inc
and
call
add
jo
or
adc
test
adc
mov
imul
pusha
int3
and
sbb
pop
mov
add
add
es
mov
mov
call
jl
xchg
sub
push
neg
lock
add
stc
retf
add
add
arpl
add
mov
sti
inc
dec
or
push
sub
cmp
call
sbb
add
add
sub
fisttp
jmp
mov
or
movs
push
stos
add
add
add
mov
repnz
lahf
sub
pop
push
jge
fst
sbb
inc
pop
ds
pop
push
sbb
add
add
das
hlt
xor
pop
stos
mov
sub
add
or
jae
imul
sbb
sbb
push
mov
test
in
movs
adc
add
add
pop
rcr
pop
clc
sbb
fdiv
push
or
cmps
push
jne
ss
sbb
adc
or
add
pop
adc
cdq
into
test
(bad)
and
adc
cmp
push
pop
bound
add
(bad)
adc
xchg
in
pop
inc
stos
sbb
daa
push
and
mov
ret
add
aaa
mov
add
pop
adc
fiadd
add
add
call
lds
push
fs
dec
jl
popa
cmp
add
add
aas
xlat
fwait
(bad)
fcmovnb
adc
mov
inc
retf
popa
add
mov
mov
fcomip
add
add
pusha
repnz
mov
sar
pop
cmp
je
cmp
mov
jle
dec
lea
or
cmp
add
add
(bad)
mov
sbb
inc
hlt
jge
outs
add
not
sbb
dec
cmp
push
cmps
push
nop
movs
add
add
inc
or
inc
add
or
push
dec
cmp
add
mov
xchg
add
add
sbb
cmp
cmp
sbb
mov
or
and
add
cli
push
enter
add
add
or
inc
sbb
xor
cmps
sbb
cmps
add
xchg
and
mov
scas
ret
loopne
mov
pop
jo
add
add
push
jno
or
and
lea
out
dec
dec
clc
mov
mov
adc
outs
retf
jns
push
add
add
xor
hlt
inc
sub
dec
inc
xor
sub
dec
xor
loopne
aam
add
les
in
add
add
adc
push
jmp
mov
xchg
lock
rcr
sub
add
add
add
mov
mov
or
add
pop
movs
or
xor
enter
add
add
add
in
popa
push
adc
or
js
daa
mov
adc
add
xchg
stos
movs
cmp
add
add
mov
movs
add
xor
loop
sbb
call
jmp
fmul
xchg
add
add
test
out
and
pop
out
adc
and
loopne
push
mov
add
sub
loopne
scas
and
pop
add
add
(bad)
sbb
loopne
pop
ret
xor
in
mov
cdq
clc
mov
adc
loop
add
add
xor
sbb
enter
sbb
movs
sub
sbb
pop
movs
pop
and
mov
add
add
mov
sbb
icebp
daa
imul
or
cwde
mov
xor
dec
push
sar
jae
add
add
sbb
ja
icebp
in
jg
(bad)
xchg
daa
pusha
and
ret
mov
xchg
add
add
popa
adc
or
ret
and
xor
rcl
enter
fsub
les
add
add
xchg
sar
push
push
push
xchg
clc
ror
mov
and
add
in
and
mov
enter
add
cmp
nop
xchg
ret
test
dec
add
add
add
dec
or
mov
(bad)
mov
data16
sbb
xchg
add
add
shl
loope
sub
xor
xchg
loope
fwait
or
jb
mov
and
adc
add
add
sub
pop
mov
add
inc
in
or
or
xchg
dec
nop
or
and
add
xchg
lock
rcl
xchg
call
rcr
xchg
xchg
jle
dec
inc
inc
and
add
add
cld
sub
loop
cmp
lock
sub
stos
and
inc
loopne
cmp
jo
es
mov
adc
add
add
sub
push
sub
inc
and
inc
test
pop
mov
jmp
push
mov
cwde
rol
add
hlt
push
mov
dec
mov
dec
adc
cmp
pop
xor
mov
xor
add
leave
jno
sub
inc
or
or
rcr
jge
bnd
xor
mov
add
add
xchg
nop
adc
in
sub
push
xor
inc
into
cmp
repnz
and
push
pop
pop
cs
or
add
add
adc
xchg
mov
pusha
dec
sub
sub
push
pop
cmp
jecxz
scas
add
add
cmp
pop
hlt
or
ret
push
repz
int3
push
mov
xor
lea
jg
pop
outs
mov
add
add
inc
jmp
pop
mov
or
push
cmps
inc
mov
fcomp
and
adc
add
add
push
mov
push
adc
movs
mov
or
(bad)
aam
mov
inc
fcom
stos
mov
add
and
sub
stc
pop
push
cdq
mov
je
call
dec
adc
cmps
popf
clc
and
sbb
in
scas
push
inc
cmp
xor
sbb
iret
dec
adc
mov
cmp
imul
pop
jo
cwde
call
repz
daa
call
mov
pusha
(bad)
add
add
dec
xor
cmp
rol
jo
mov
cmp
inc
or
jmp
inc
jnp
add
add
mov
xor
ror
(bad)
jl
hlt
test
and
inc
or
test
add
add
mov
inc
int3
aad
push
les
and
fs
enter
adc
test
pushf
retf
adc
adc
cmp
fisub
or
js
in
mov
pushf
inc
icebp
jmp
adc
add
add
cmps
push
stos
push
dec
test
loopne
fmul
jl
and
rol
add
add
mov
retf
in
push
push
inc
adc
fmul
gs
fcomp
inc
dec
cwde
dec
inc
rcr
and
add
add
gs
bound
ret
inc
mov
mov
xchg
sub
scas
dec
rcl
mov
and
add
add
fcomp
int3
pop
push
adc
and
in
cmp
test
rcl
pop
cmc
retf
int3
popf
add
add
out
aam
test
retf
fiadd
mov
pop
loop
cld
sub
movs
xor
inc
sub
add
add
or
and
leave
fcom
xor
add
mov
sar
shl
or
dec
xchg
and
inc
scas
hlt
sti
add
lahf
pop
pop
or
or
add
and
movs
or
and
sub
sub
xor
push
and
les
inc
xchg
inc
loop
sbb
dec
mov
add
add
push
and
pop
cmp
adc
xchg
fdivr
lahf
rcr
shl
cdq
sbb
or
add
add
lods
adc
das
add
cld
rol
xchg
sbb
ret
or
mov
out
leave
sbb
dec
mov
add
push
mov
adc
je
sub
mov
mov
lock
loop
pop
xchg
cmp
add
add
out
sbb
sbb
ss
and
push
add
lock
jp
or
mov
and
icebp
push
je
scas
inc
mov
and
adc
adc
dec
dec
mov
nop
cmp
int3
xor
fbld
pop
mov
push
in
inc
dec
call
std
push
add
in
loopne
inc
out
sbb
push
jnp
cmp
jo
add
scas
data16
outs
shl
pop
or
loop
jns
add
add
mov
mov
jno
out
(bad)
arpl
movs
adc
jns
(bad)
jmp
sub
mov
or
add
add
out
fistp
mov
ins
mov
sub
push
and
cmps
pushf
rol
add
xchg
mov
pop
inc
stc
imul
out
cmps
mov
mov
icebp
or
loopne
retf
cmps
add
add
addr16
scas
and
pop
jo
out
in
sub
cmps
cs
adc
(bad)
test
add
add
xor
adc
jmp
or
mov
jo
into
dec
pushf
adc
add
mov
jo
(bad)
mov
movs
lods
movs
push
test
mov
into
rcr
mov
test
imul
push
add
add
dec
fld
or
adc
inc
dec
out
xor
lods
jl
out
adc
loop
hlt
fcmovnbe
mov
lahf
add
add
jno
mov
mov
arpl
mov
jl
jb
and
add
or
or
adc
loop
sbb
add
add
cmp
das
dec
sbb
dec
inc
dec
loope
inc
enter
fst
pop
movs
stos
mov
sbb
add
add
das
fsubr
sti
out
pop
inc
cmp
test
mov
jmp
retf
retf
adc
mov
add
add
cmp
ret
mov
xchg
pop
call
adc
xchg
cmp
add
or
mov
aaa
sbb
and
inc
push
lods
push
adc
jo
in
pop
xor
add
jmp
imul
inc
outs
ins
sbb
test
and
jno
bound
stos
add
add
add
clc
sahf
push
mov
or
sbb
lahf
fstp
sub
pushf
lods
sub
push
cld
jp
xchg
lock
nop
cli
adc
scas
mov
jb
ins
clc
test
das
out
add
out
dec
add
add
or
sbb
or
sub
adc
and
xchg
call
adc
push
push
add
add
and
scas
repnz
jo
and
cld
hlt
test
adc
jecxz
clc
push
dec
add
add
adc
loop
pop
or
sar
shr
push
dec
pushf
mov
sbb
cs
add
add
and
mov
and
pusha
test
xchg
ins
mov
inc
lods
test
movs
das
pop
add
add
(bad)
retf
or
cdq
call
mov
cmps
in
jo
add
mov
sub
add
add
retf
in
js
int3
sub
pop
mov
adc
push
jnp
push
jne
ins
jb
inc
add
add
loop
movs
push
movs
jno
imul
pusha
les
cmp
pop
cmp
ret
add
add
cs
mov
(bad)
ins
xchg
ds
popa
adc
xchg
call
loope
mov
and
sub
adc
add
jo
jns
push
in
sub
pop
sub
test
mov
shr
test
or
jb
sub
adc
ins
loopne
add
loop
loop
xchg
xor
ins
(bad)
ror
add
add
jl
mov
xchg
loope
mov
pusha
in
push
inc
sar
aam
fsub
dec
out
jl
mov
mov
lock
shl
clc
test
mov
mov
pusha
mov
iret
xor
retf
add
add
inc
js
xchg
mov
adc
js
movs
xor
iret
dec
jl
mov
sar
(bad)
cmp
add
add
inc
rcl
jo
sub
push
xchg
cs
push
mov
out
in
out
(bad)
loopne
push
sub
and
add
add
jecxz
pop
cmp
mov
hlt
jecxz
add
jne
push
cwde
retf
loopne
cmps
inc
fadd
add
add
call
dec
shl
mov
jb
mov
das
adc
ins
or
add
loop
(bad)
xlat
mov
aam
dec
pop
mov
gs
ss
and
(bad)
sar
mov
add
add
cmps
sub
xor
cli
xchg
mov
clc
into
hlt
je
ret
push
inc
jbe
ret
and
cdq
add
add
sbb
dec
jmp
sbb
xchg
pop
xor
or
fst
std
cld
adc
add
cmp
fdiv
dec
mov
movs
mov
jae
fwait
out
mov
cs
les
adc
lods
add
add
cmps
or
sub
bound
pushf
cdq
or
and
stc
mov
push
add
add
enter
mov
retf
stos
mov
(bad)
jnp
or
leave
in
hlt
rol
push
add
add
(bad)
ins
mov
test
or
sbb
inc
push
aam
mov
lods
fcmovb
rol
add
das
ss
adc
in
xor
add
inc
or
(bad)
cld
fild
(bad)
adc
add
cmc
(bad)
jmp
fcomip
and
inc
sub
xor
jns
add
add
loop
pusha
xor
imul
dec
mov
call
inc
mov
cmp
add
xor
aam
sbb
sbb
scas
jno
push
and
sub
shl
add
jb
xor
cwde
cld
les
cmps
or
leave
int3
push
sbb
clc
or
adc
in
push
imul
in
jno
sbb
add
retf
push
jns
sub
inc
push
ror
mov
mov
add
add
xchg
adc
int3
(bad)
div
mov
inc
mov
push
inc
pusha
and
add
gs
rcl
dec
popa
sub
sub
add
push
mov
xor
xor
xacquire
add
in
add
lds
in
outs
sub
or
pop
fnstenv
inc
call
lods
cwde
cmc
add
add
stos
aas
pop
dec
sahf
jns
loopne
sub
cmp
sub
loope
jae
icebp
mov
push
sti
adc
fsubr
jg
dec
mov
cwde
add
xlat
dec
add
je
ror
mov
fs
mov
jo
add
add
push
test
loop
loop
fsubr
repnz
inc
xor
lods
ffree
pop
loopne
inc
in
loopne
test
add
add
cwde
ror
imul
inc
les
test
mov
rcr
xor
mov
add
arpl
in
nop
clc
push
test
mov
jo
or
xchg
dec
mov
retf
inc
mov
test
stos
call
iret
push
and
and
xchg
or
in
cmp
sahf
sbb
into
inc
lea
dec
fld
add
add
xchg
ficomp
push
pop
mov
in
push
mov
pop
and
lahf
pop
lds
add
add
stos
mov
and
clc
cmp
retf
mov
add
or
pushf
adc
in
add
push
add
add
sub
and
jge
mov
into
cdq
push
outs
iret
cwde
xchg
mov
or
(bad)
add
add
popa
fnstcw
and
sbb
(bad)
mov
adc
push
mov
adc
scas
fisttp
add
je
sbb
dec
iret
add
pop
sub
into
push
call
xchg
enter
add
add
add
jnp
adc
or
push
mov
es
xchg
or
std
fs
aam
mov
add
add
mov
jne
pop
cmp
sbb
mov
sbb
cmps
sbb
scas
xor
imul
mov
pop
xchg
mov
retf
push
mov
or
mov
add
add
or
cmp
jnp
jge
mov
in
cwde
rcl
mov
das
loopne
add
add
adc
sbb
adc
std
out
or
jae
in
xor
add
fsubr
add
add
adc
or
add
fdivr
int3
rcl
sbb
rcl
xchg
sub
add
add
lock
fcom
ds
sbb
sbb
mov
test
mov
aam
pusha
imul
push
mov
xchg
pop
adc
mov
jo
inc
and
shl
loope
aad
mov
add
call
mov
cmp
mov
inc
mov
xlat
outs
mov
add
add
std
dec
cld
jl
xlat
(bad)
test
xlat
repnz
fmul
aam
push
sub
jno
pop
add
add
jo
sub
inc
fsub
js
inc
loopne
ds
sar
or
add
jmp
in
xor
es
xor
scas
sbb
test
and
add
add
ins
fst
test
inc
fwait
call
mov
pop
or
aas
ror
add
add
and
xlat
xchg
jo
inc
fcmovbe
xor
repz
iret
and
lock
sub
inc
xchg
add
add
jnp
ficom
dec
in
cwde
mov
in
cmp
add
cli
or
ret
in
test
inc
fistp
mov
popf
out
loop
(bad)
lods
add
mov
inc
movs
adc
mov
add
add
sub
inc
dec
je
test
add
lods
mov
mov
inc
pop
jne
mov
add
add
sti
pop
sbb
cmps
ficom
push
cmps
sti
loop
mov
sahf
ret
outs
jno
test
mov
les
add
fwait
test
pop
fsubp
mov
xchg
add
ds
push
xchg
(bad)
and
add
add
or
mov
push
daa
mov
sub
adc
ret
add
add
push
das
in
inc
sbb
leave
cwde
cmps
push
out
(bad)
or
rcr
aas
sahf
rcl
stos
les
sub
cmp
inc
mov
and
ds
js
out
mov
add
add
mov
loop
shr
cmp
fdivr
rcr
xor
lahf
inc
dec
sar
add
add
push
lahf
test
shl
dec
(bad)
pop
push
clc
mov
xor
pusha
mov
in
add
add
nop
cmc
mov
sar
in
nop
push
(bad)
sar
in
and
out
pusha
add
add
jmp
or
dec
movs
out
sar
mov
out
mov
push
out
cmps
add
add
add
add
cmp
inc
dec
gs
push
out
iret
or
mov
xchg
test
add
add
adc
sti
call
or
clc
out
mov
cmp
cmp
jmp
add
add
push
cmp
mov
popf
xor
ds
jmp
daa
movs
jmp
fcmovbe
cmp
inc
loopne
fsubr
mov
xchg
test
or
and
out
mov
rcr
icebp
aam
add
add
mov
inc
mov
sahf
mov
dec
addps
xchg
shr
add
add
push
mov
and
add
mov
in
pop
add
dec
test
ins
in
aaa
or
add
add
xor
les
mov
bound
mov
pop
jl
cmp
add
xor
sbb
das
and
add
adc
mov
mov
je
and
mov
add
xchg
inc
int3
das
dec
adc
lock
cs
pop
movs
outs
and
pop
aas
fist
adc
add
add
test
jno
and
cmp
pusha
xlat
test
ret
in
jl
mov
push
js
lahf
xchg
call
jp
adc
movs
out
scas
mov
mov
jg
and
or
movs
xchg
add
add
pushf
call
push
nop
cmps
or
inc
and
adc
mov
test
jbe
inc
add
add
cwde
fiadd
int
dec
dec
mov
add
enter
mov
test
adc
add
add
call
fisubr
sub
shl
push
xchg
or
mov
push
add
add
or
js
and
movs
push
test
test
gs
cld
push
cmp
ret
xchg
xchg
stc
repnz
add
add
imul
push
sbb
int
sbb
rcr
es
test
adc
scas
loope
cmp
das
push
push
shl
push
or
outs
fld
inc
xchg
repz
add
dec
pusha
inc
lods
inc
xchg
icebp
aad
xor
cmps
cmp
mov
adc
add
add
es
daa
cmps
jns
lds
pop
mov
lds
mov
retf
pop
fcomp
pusha
add
add
push
cwde
mov
outs
sub
dec
inc
imul
jp
popa
add
pop
cmps
adc
add
add
add
lods
add
adc
lock
rcl
test
mov
jg
add
clc
call
not
xchg
jo
push
test
add
add
sub
fbstp
dec
mov
xchg
pop
mov
fcom
inc
pop
loope
imul
lods
mov
add
add
pop
not
mov
xchg
aam
add
pusha
scas
test
adc
mov
lea
mov
add
add
mov
sub
adc
cmp
cmp
data16
dec
shl
rol
add
add
sahf
mov
push
nop
and
lods
mov
mov
mov
cmp
scas
push
xor
add
add
add
dec
call
movs
cs
xor
les
retf
lods
lods
and
imul
sub
arpl
mov
dec
stc
fist
mov
xlat
xchg
test
xor
ds
sub
add
add
cld
fidivr
inc
ja
and
adc
fnstsw
test
nop
mov
jb
mov
pop
scas
ins
clc
das
add
in
into
aam
adc
adc
pop
adc
sti
imul
pop
lds
add
aam
add
stos
mov
adc
das
mov
mov
int3
sti
je
inc
or
add
add
add
and
repnz
fistp
mov
and
jb
mov
fadd
add
add
repnz
sar
xchg
mov
cld
loope
call
std
(bad)
mov
add
add
jb
clc
(bad)
sub
jno
(bad)
loopne
std
push
xchg
and
sub
clc
pop
lods
js
xor
sbb
add
add
and
mov
hlt
std
je
pop
and
cmp
jo
(bad)
lock
add
test
movs
xor
xchg
rcr
clc
loop
(bad)
jge
push
jo
call
sub
add
add
call
push
outs
pop
je
std
pop
pusha
and
call
push
dec
mov
fdivr
pop
add
add
lds
push
repz
pop
sub
jmp
pusha
dec
pusha
add
add
mov
jecxz
dec
jp
lock
and
dec
stos
sub
call
adc
pop
call
xor
add
add
sar
or
ins
fdiv
cwde
jle
pusha
retf
fist
in
cmps
add
cmp
mov
add
add
ss
clc
sub
shr
mov
dec
pop
test
test
in
mov
add
add
bnd
push
pop
mov
lods
mov
inc
xor
call
pop
retf
push
mov
add
add
push
rol
adc
mov
pop
sub
pop
loop
xchg
mov
add
add
pop
movs
and
add
repnz
mov
sbb
xchg
add
movs
rol
sar
mov
add
add
adc
aaa
mov
popa
mov
dec
ss
sub
lods
sar
mov
push
mov
add
add
jo
clc
sub
xor
iret
inc
sub
mov
mov
jg
add
add
inc
xchg
sbb
xor
dec
cwde
mov
mov
sub
xor
inc
and
inc
mov
add
add
push
int3
jge
pusha
mov
les
xor
and
jl
adc
pop
jmp
adc
jb
lock
add
add
xor
mov
xchg
inc
daa
jmp
adc
fsubr
add
pop
pop
(bad)
xor
mov
add
add
jmp
int
pop
lock
adc
js
lock
dec
and
mov
repnz
adc
cld
pusha
mov
fld
add
add
pusha
jne
call
js
or
enter
push
pop
sub
rcr
fst
add
add
movs
je
push
push
les
mov
(bad)
pop
or
push
xchg
add
add
mov
ret
mov
rol
fimul
push
mov
mov
add
add
dec
mov
or
xchg
ds
mov
inc
leave
mov
nop
push
add
add
add
or
lock
call
or
mov
inc
xchg
add
mov
js
sbb
lock
or
inc
add
jl
add
add
push
cdq
fmul
inc
shl
arpl
xchg
gs
or
clc
mov
or
jl
sub
and
jp
add
add
jo
loopne
push
sub
cmp
sub
xchg
mov
inc
sub
lahf
jns
lock
mov
add
and
fsubr
mov
dec
jo
in
adc
mov
mov
sahf
sub
add
jmp
xor
mov
and
inc
js
mov
jno
pop
mov
add
add
loopne
clc
push
fs
sbb
les
or
pop
rol
adc
sub
mov
movs
adc
rcr
pop
mov
loop
in
xor
loop
inc
fcom
shl
ret
call
add
mov
or
jns
enter
fs
enter
mov
(bad)
cwde
push
xor
add
add
and
cdq
daa
xor
mov
sub
lds
pop
addr16
push
setl
hlt
and
add
lock
lock
lods
ins
and
or
sub
inc
push
inc
lock
mov
sub
enter
out
cmps
test
or
mov
push
mov
(bad)
add
xchg
mov
fmulp
cwde
cmp
icebp
sub
add
mov
ja
out
adc
mov
or
sti
pop
adc
adc
add
add
(bad)
aam
into
test
mov
push
stc
jge
test
mov
inc
push
rcr
add
add
mov
popf
inc
xor
adc
cli
pop
and
int3
dec
iret
adc
iret
hlt
out
jp
dec
add
add
jecxz
movs
retf
adc
jo
in
loopne
sti
mov
adc
mov
sub
in
pop
add
add
add
in
pop
pop
idiv
jmp
add
ds
pop
cld
fsub
mov
jno
je
add
add
push
xchg
and
jne
xor
sub
adc
push
mov
adc
add
pop
adc
call
inc
push
pop
mov
pop
inc
push
xlat
mov
test
push
pop
add
add
mov
jg
nop
push
movs
adc
test
jns
and
mov
xchg
ds
inc
into
xchg
movs
jmp
adc
sub
xchg
jmp
pop
(bad)
adc
lock
sbb
enter
add
add
outs
mov
das
mul
int3
jge
in
inc
pop
cmp
fsub
test
ja
sub
add
add
(bad)
fdivr
cwde
fadd
push
xor
enter
mov
sub
add
jae
lds
cmps
test
mov
pusha
js
sub
leave
popa
ret
dec
pop
mov
pop
rol
add
ror
iret
inc
test
mov
cs
xor
xor
or
add
push
pusha
clc
pop
in
arpl
mov
xchg
push
mov
lods
and
jge
xor
shl
or
icebp
jg
loopne
sub
(bad)
mov
inc
in
test
das
or
add
mov
pop
adc
mov
add
add
jmp
into
adc
test
adc
adc
loopne
xor
std
pop
loopne
fsubr
test
mov
add
std
out
pop
enter
or
pop
fnstsw
and
pop
adc
inc
popa
stos
and
add
xchg
push
lds
pusha
retf
push
mov
inc
add
add
mov
jg
pushf
push
push
and
push
adc
push
mov
mov
loopne
add
add
dec
cmps
popa
add
jl
in
sub
sbb
adc
sbb
jb
adc
add
add
pushf
cmp
jo
pop
sahf
rcr
out
dec
jl
clc
test
lods
xor
add
add
test
jmp
fsubr
push
not
sbb
mov
(bad)
sbb
ficom
mov
std
je
lods
mov
xchg
hlt
xchg
pop
sbb
daa
pop
mov
cdq
cdq
add
add
pop
pusha
and
adc
in
out
push
xor
cmp
mov
sbb
add
add
data16
pop
test
imul
mov
cli
adc
and
add
add
dec
mov
not
std
and
mov
punpcklbw
mov
jg
hlt
mov
add
pop
xchg
(bad)
jnp
jo
call
mov
inc
pushf
and
xor
into
push
dec
push
jg
jecxz
add
add
popa
dec
xor
xchg
scas
or
and
adc
mov
jo
rcl
mov
push
imul
add
add
pop
cld
mov
cmc
scas
pusha
jle
and
int3
fwait
rcr
jmp
and
sub
add
add
and
out
xchg
and
mov
out
xchg
sar
sub
inc
mov
mov
fdiv
sar
daa
mov
movs
stos
mov
shr
pusha
mov
add
add
xor
int3
sub
pop
shr
jl
rol
and
aam
cmp
pop
sbb
adc
adc
add
add
jno
aad
in
mov
rcl
test
lock
and
push
fmul
or
pop
xlat
mov
lock
pop
call
and
retf
out
sar
inc
out
test
sahf
rcl
add
add
fldenv
mov
aad
lods
loopne
adc
mov
call
rcr
mov
add
mov
dec
sub
adc
lock
das
outs
fbld
mov
ficom
daa
add
add
jl
sti
dec
mov
pop
movs
dec
or
test
add
and
jl
mov
iret
inc
enter
add
std
cmc
repnz
jns
shl
pop
pop
out
movs
stos
cmps
fsub
inc
jge
inc
adc
dec
movs
mov
int
add
add
rol
xor
mov
mov
aam
icebp
inc
push
sbb
out
dec
sub
add
test
mov
lds
lock
inc
mov
out
hlt
and
gs
xor
in
add
add
loopne
imul
adc
fisub
dec
loopne
adc
sbb
add
add
and
int3
or
sub
pop
(bad)
js
das
lock
dec
mov
add
add
jnp
enter
xor
pop
mov
cmp
xor
add
add
xchg
out
in
mov
lock
nop
and
rcr
sub
xor
loopne
pusha
or
add
push
adc
mov
xor
call
xor
icebp
jge
sahf
das
mov
movs
mov
add
call
pop
and
iret
push
pusha
xor
loopne
mov
sub
dec
mov
add
add
xchg
jecxz
daa
or
nop
shr
(bad)
adc
cmp
cmp
lods
hlt
(bad)
fldcw
cmc
adc
push
add
add
pop
jns
rol
repnz
mov
scas
ins
out
sub
sub
dec
xor
loopne
inc
imul
mov
push
add
add
mov
std
js
js
mov
arpl
add
add
fcmovnb
dec
pusha
push
in
aas
bound
xchg
push
ret
xchg
push
dec
xchg
fdivr
stc
add
add
movs
mov
lock
cld
cdq
sbb
in
add
mov
xchg
test
out
pop
pushf
xor
inc
movs
mov
add
jecxz
push
mov
in
push
ror
push
(bad)
push
in
mov
in
nop
mov
mov
add
adc
mov
push
in
cmp
(bad)
push
pop
loopne
(bad)
hlt
pop
(bad)
push
loopne
jnp
add
add
popf
mov
jmp
cmp
cld
cmp
sub
mov
xchg
jmp
scas
add
add
mov
mov
push
sub
or
icebp
inc
or
xor
add
and
add
add
aaa
or
enter
jge
fsub
ret
popf
pop
nop
pop
int3
aaa
lahf
inc
ror
mov
inc
pop
enter
add
inc
jmp
cwde
dec
jne
lods
adc
add
ins
and
inc
je
inc
cmp
mov
mov
stc
xor
add
add
das
sub
in
sbb
ror
lock
pop
call
ins
cmp
add
add
mov
push
hlt
mov
into
or
lock
js
inc
in
test
adc
test
retf
test
mov
cmp
repnz
push
or
bound
sti
jmp
cmp
add
add
lahf
mov
adc
cmps
mov
or
and
cmp
fist
add
add
lods
test
dec
clc
cmp
mov
or
loopne
in
(bad)
je
cmp
shl
add
lods
xor
test
sub
xor
cmp
mov
les
push
cmp
ror
add
jecxz
movs
mov
mov
inc
out
sub
mov
xchg
in
jno
or
cmp
add
add
ins
sti
jmp
fild
rcr
adc
pop
pop
in
jmp
or
les
add
add
scas
jle
fcmovu
(bad)
into
ja
mov
mov
les
cmp
fwait
sbb
jb
(bad)
icebp
enter
add
add
enter
fwait
pop
push
cmp
mov
jo
adc
xchg
in
addr16
lds
or
add
add
std
inc
add
mov
std
arpl
push
xchg
mov
popf
shr
adc
add
adc
inc
mov
in
ds
pop
loope
jle
or
rcl
push
pop
mov
add
sub
cmp
dec
mov
jecxz
nop
into
shl
cmp
imul
mov
add
add
fs
or
int
mov
pop
xchg
push
loopne
and
sahf
out
into
jo
sub
add
add
nop
adc
and
repnz
pop
push
shr
loop
movs
sub
xor
lock
stos
(bad)
push
in
pop
mov
lock
inc
cmp
ds
shr
retf
add
add
enter
nop
movs
mov
(bad)
sbb
in
nop
hlt
cmp
adc
mov
enter
pushf
inc
enter
add
add
pop
imul
gs
adc
pop
dec
imul
mov
out
aas
jno
inc
push
add
popf
icebp
add
pop
in
dec
inc
dec
clc
add
and
xchg
mov
mov
add
add
adc
and
int3
nop
cmp
sub
fistp
(bad)
in
lahf
inc
or
add
add
movs
nop
fnsave
je
fldcw
mov
jmp
dec
mov
lock
add
add
lahf
repz
ror
outs
mov
xchg
mov
pop
call
in
mov
inc
sub
add
ret
mov
data16
movs
imul
xchg
fmul
inc
cld
fadd
add
dec
pop
sti
retf
mov
mov
mov
jns
cmps
retf
cld
shl
mov
add
in
jmp
jne
cmp
into
mov
test
test
rcl
jp
dec
inc
test
adc
add
add
adc
pop
icebp
mov
dec
pop
xchg
jl
push
adc
mul
or
bound
dec
add
add
push
mov
lahf
jae
dec
mov
sub
xor
fst
fsubp
imul
add
sbb
test
cmp
jmp
fiadd
mov
dec
pop
mov
cmp
add
add
cmp
dec
shr
jnp
mov
out
add
nop
cdq
ss
movs
(bad)
nop
jge
push
data16
adc
(bad)
jl
push
jo
xchg
jle
aad
xchg
dec
aad
loopne
push
das
add
jge
das
retf
rcr
movs
add
add
or
cmp
mov
and
cli
and
mov
or
push
sbb
dec
xchg
xor
fmul
mov
loopne
fisub
(bad)
in
cmps
mov
pushf
dec
seta
mov
pop
jp
loopne
or
imul
or
add
add
xchg
fstp
lds
jb
in
fmul
mov
pop
jg
add
add
xor
in
mov
pop
mov
js
dec
pop
xchg
retf
push
dec
mov
pop
mov
push
jmp
add
add
and
mov
mov
push
lahf
lock
add
add
xchg
(bad)
sldt
add
adc
pop
pop
adc
test
push
dec
int
fsub
and
pop
and
add
add
push
adc
icebp
sbb
loopne
fcomp
lock
arpl
rcl
in
dec
mov
xor
add
add
inc
adc
scas
pop
mov
adc
or
mov
add
add
xor
xor
scas
cs
sub
or
fistp
adc
mov
cs
rcr
shl
popf
aam
imul
xor
loopne
leave
scas
inc
hlt
pop
add
add
pop
rol
mov
mov
ins
pop
cmp
push
inc
push
xchg
ror
retf
jge
int3
add
add
cli
sahf
and
int3
aam
repnz
pop
dec
xchg
shl
fmul
mov
int3
pop
cli
jle
add
add
mov
and
xor
enter
push
fmul
mov
push
mov
mov
sub
or
xchg
enter
add
or
inc
inc
cmc
sub
rol
xchg
mov
xchg
jb
pop
mov
in
sti
outs
push
or
pop
pop
add
add
ja
rcr
bound
jge
icebp
call
sbb
mov
xor
xchg
inc
pop
and
add
add
pop
leave
jns
push
movs
adc
shl
pop
inc
loopne
fcomp
mov
loopne
enter
nop
mov
add
add
add
out
jno
add
in
imul
dec
mov
dec
xor
add
pop
add
add
cmps
rcl
adc
ss
dec
clc
clc
mov
add
add
repnz
fsubr
fidiv
inc
(bad)
adc
add
call
add
add
retf
push
xchg
inc
movs
js
and
in
jb
add
(bad)
hlt
aaa
popa
add
pop
cld
add
add
lock
aas
sub
sbb
pop
jbe
test
in
sub
pop
test
push
add
add
mov
push
rol
sub
jl
popf
(bad)
outs
pop
inc
xchg
loope
popa
jle
mov
add
mov
or
test
call
(bad)
int3
popa
in
shr
push
jo
add
add
xchg
sub
sub
stos
and
inc
nop
(bad)
out
mov
push
xchg
daa
jl
shl
jp
add
add
stos
lea
xchg
mov
clc
adc
out
lea
adc
ret
ss
nop
nop
mov
add
add
hlt
lea
or
gs
inc
cwde
loop
ss
ror
or
je
lock
add
add
in
(bad)
xor
jmp
aad
or
cli
mov
push
outs
mov
jnp
pusha
pop
test
mov
add
add
enter
pop
xchg
int3
daa
dec
mov
and
les
push
jnp
dec
add
add
jno
mov
movs
fs
scas
idiv
xchg
scas
into
mov
push
in
jmp
mov
out
dec
mov
add
sti
pop
fild
enter
sub
pusha
mov
inc
or
push
sub
pop
add
add
push
xchg
in
adc
in
jecxz
loop
mov
sbb
inc
enter
in
jge
hlt
add
add
sub
retf
outs
xor
les
in
add
or
out
call
add
ds
icebp
cs
push
std
dec
mov
xchg
jge
out
inc
fdivrp
aam
lock
inc
mov
mov
add
mov
stos
sub
mov
test
jnp
outs
icebp
mov
ror
inc
add
add
in
xchg
mov
xor
ins
mov
nop
or
sti
or
jne
xchg
push
ds
add
add
add
les
push
imul
inc
cmp
push
(bad)
or
mov
and
inc
add
add
jns
in
sub
inc
mov
shl
mov
ins
clc
dec
pop
sub
add
or
mov
call
inc
pop
outs
jne
and
or
aad
nop
cmp
sub
add
add
mov
enter
test
dec
push
sub
or
mov
jecxz
loopne
adc
add
add
mov
push
mov
push
adc
outs
sar
mov
mov
jecxz
xlat
mov
pop
add
add
mov
dec
outs
cmps
push
cmps
pusha
xchg
jl
push
sub
inc
add
imul
iret
das
loop
xchg
add
add
push
cmps
xchg
pop
jnp
push
mov
mov
cwde
and
shl
int3
lods
hlt
add
add
mov
adc
mov
pop
adc
jns
cmp
xchg
mov
mov
mov
add
and
fwait
jge
adc
cdq
adc
in
cs
je
and
sbb
xchg
add
add
repnz
mov
push
xchg
retf
retf
ss
cmp
mov
and
retf
mov
add
push
xchg
inc
jb
pushf
mov
mov
inc
cwde
test
into
inc
shr
xor
fcom
adc
pop
mov
std
sub
mov
mov
pop
pop
jne
mov
enter
add
pusha
das
inc
add
mov
dec
fucomip
push
adc
mov
sar
rol
cld
sub
in
jae
add
add
movs
in
shr
cmp
pusha
pop
test
addr16
push
dec
xor
mov
add
add
pop
and
sar
cmp
mov
enter
fcom
or
add
add
inc
icebp
jb
xlat
sahf
loop
adc
movs
mov
mov
jno
pop
xor
add
add
loop
iret
loopne
push
scas
pop
adc
fbld
das
jmp
ins
mov
cmps
js
pop
xchg
add
add
clc
loop
adc
push
retf
xchg
push
push
jbe
call
dec
ja
push
and
jbe
mov
mov
mov
fld
add
add
push
sub
push
test
leave
enter
jo
mov
aad
dec
repnz
add
sar
loop
repz
outs
dec
push
pushf
sub
mov
pop
icebp
pop
add
add
js
push
cmp
mov
stos
inc
cmp
dec
add
test
scas
rcr
cmp
enter
add
add
sbb
cmp
(bad)
js
inc
push
and
lds
clc
nop
xchg
call
repz
add
xor
adc
dec
pop
mov
jne
js
js
popa
or
pop
das
lods
sar
add
add
in
gs
je
stos
jl
sar
stc
in
dec
inc
loop
test
aas
pop
push
adc
add
add
sub
sar
lods
sub
in
bnd
xchg
xchg
lods
jmp
sar
add
add
cmp
stos
push
nop
sub
jo
or
cmc
inc
inc
sub
retf
dec
shl
add
sbb
call
mov
inc
nop
js
xor
add
add
cli
cmps
(bad)
cmps
add
cli
retf
lock
lahf
mov
cmp
enter
cmp
add
add
sub
jmp
test
sbb
xchg
nop
hlt
mov
jae
ins
xor
clc
clc
test
add
repnz
or
mov
mov
mov
inc
loop
mov
sub
test
add
xor
rcr
sub
call
stos
js
fcom
lahf
pop
imul
push
out
mov
fbstp
push
and
and
jg
hlt
leave
dec
stos
sub
push
xor
stos
mov
or
in
fmul
test
and
mov
inc
lods
push
push
add
add
xchg
xchg
mov
lods
hlt
test
xchg
xchg
sti
add
in
xchg
mov
shr
sub
nop
mov
retf
add
or
xchg
fld
ins
xor
mov
jmp
push
aaa
test
dec
mov
loopne
pop
lahf
lods
aam
mov
add
add
bound
scas
fdiv
adc
pop
and
xor
xor
add
add
add
sub
aam
jl
jle
push
sub
mov
rcl
sahf
js
add
add
ror
xor
fsub
xchg
mov
fdivr
call
clc
daa
aam
mov
add
pop
loop
enter
fdiv
js
lahf
fidiv
das
cld
add
in
das
(bad)
dec
stos
add
add
fs
(bad)
push
(bad)
mov
daa
in
jnp
(bad)
adc
mov
sbb
add
add
js
clc
inc
(bad)
xchg
scas
cmp
inc
and
push
inc
shr
fstp
loopne
sbb
add
add
adc
aas
adc
repnz
fsubr
call
gs
test
add
add
and
inc
clc
popf
(bad)
(bad)
call
mov
adc
mov
xchg
scas
aam
add
add
mov
shr
test
push
ret
rcl
cmps
mov
adc
jmp
add
into
pop
test
and
mov
inc
das
dec
test
sub
rol
add
sbb
mov
or
loopne
retf
sbb
cmps
or
adc
add
add
fs
jmp
cmp
cmp
lock
mov
xchg
retf
popa
mov
add
test
lahf
inc
xor
inc
xchg
xchg
mov
inc
(bad)
rcl
jmp
mov
test
retf
push
add
add
push
outs
imul
xchg
mov
push
adc
inc
jae
and
adc
add
add
fst
aad
inc
dec
out
lods
mov
bound
jnp
xchg
add
add
sti
out
and
cli
scas
popf
sti
int
aas
mov
(bad)
adc
and
mov
enter
add
ins
push
test
push
inc
dec
or
mov
inc
stc
retf
push
pop
dec
or
add
add
fdiv
push
sub
push
jns
dec
pop
and
neg
cli
cmps
test
cmp
add
add
cmc
enter
push
adc
mov
pop
push
and
ins
cmp
adc
std
loop
sbb
add
add
sar
pusha
dec
aaa
sub
pop
pop
cli
push
push
outs
repnz
popf
call
test
add
add
sub
neg
inc
sti
mov
repz
sub
jnp
push
dec
dec
pop
fiadd
add
add
adc
repz
fisub
mov
inc
sub
inc
mov
jno
adc
add
ret
ds
dec
mov
cmc
mov
stos
mov
mov
sbb
sbb
xchg
inc
mov
add
add
jg
pop
mov
sub
test
and
pusha
and
cmp
xchg
inc
push
movs
dec
leave
int3
je
jb
add
add
pop
add
in
adc
push
push
enter
cmps
ds
sbb
sahf
dec
cmp
push
int3
fadd
add
add
mov
outs
sbb
adc
jo
loopne
pushf
out
or
daa
loop
jae
dec
aad
add
add
inc
js
aam
push
imul
icebp
ret
shl
mov
add
add
(bad)
jo
xor
or
les
in
cmp
pushf
leave
cli
stos
call
add
add
add
mov
push
adc
add
addr16
pop
push
imul
mov
jecxz
add
add
out
fimul
and
int3
cdq
inc
ds
and
enter
(bad)
add
add
dec
adc
mov
sub
mov
ja
pushf
mov
mov
xchg
pop
rol
add
add
cdq
ss
or
gs
mov
call
rcl
daa
adc
add
xor
stos
mov
mov
stos
lock
das
push
mov
movs
je
pop
popf
xchg
xor
push
add
add
mov
pusha
push
adc
mov
push
loopne
push
push
clc
dec
adc
adc
adc
out
ret
add
add
in
cmc
pop
lock
sub
lahf
mul
mov
adc
mov
inc
inc
xor
add
add
cmp
inc
or
sub
cs
mov
lock
jl
sbb
jae
mov
add
add
mov
mov
push
push
and
and
jle
cli
dec
repnz
mov
add
cmp
repz
xlat
gs
sub
dec
mov
adc
or
add
test
fs
retf
inc
out
push
mov
(bad)
inc
mov
or
(bad)
fsubr
adc
add
add
mov
scas
push
cmps
scas
push
lods
sbb
les
mov
jmp
sub
aam
and
retf
repnz
repnz
nop
nop
test
movs
cmp
or
adc
push
adc
jmp
mov
xchg
adc
add
mov
xor
out
aad
inc
and
jp
mov
adc
outs
push
mov
add
add
sub
test
jl
inc
mov
mov
mov
adc
inc
mov
or
add
add
adc
repnz
inc
je
lods
inc
enter
ror
and
gs
inc
jbe
or
sti
call
imul
and
push
loope
movs
pop
sub
inc
xchg
pusha
or
je
aaa
adc
fcom
add
add
pop
and
and
movs
xchg
cld
jo
mov
fisub
enter
lock
add
add
inc
push
inc
lock
mov
addr16
and
or
movs
push
adc
cwde
add
add
push
jo
lock
sub
add
stos
sub
inc
enter
add
add
lods
ds
push
mov
mov
(bad)
mov
repnz
cmp
adc
dec
aad
add
add
inc
retf
pop
in
xor
jl
pop
adc
out
pop
inc
hlt
test
aas
sbb
imul
adc
cmp
mov
iret
adc
and
and
mov
cli
sub
add
add
mov
dec
jg
jo
jl
pop
das
dec
mov
jmp
or
xlat
add
mov
test
push
aas
jo
inc
mov
add
add
rcl
adc
inc
loopne
ret
int3
mov
popa
add
in
stos
cli
in
add
add
xor
call
mov
or
rol
enter
lods
xchg
add
add
xor
add
stc
lahf
xchg
pop
inc
enter
sub
push
xchg
sti
sub
xchg
add
mov
mov
scas
push
push
push
movs
sub
std
dec
pop
sub
inc
add
add
sub
or
mov
dec
cmp
inc
les
std
sub
inc
sti
enter
cli
add
add
test
or
sub
sub
or
movs
out
xchg
jns
push
mov
push
dec
dec
cld
scas
jns
add
add
adc
sub
push
push
call
adc
enter
xchg
xchg
call
add
adc
mov
sar
stc
sub
dec
test
cmc
mov
dec
scas
pop
aam
loopne
cmp
add
add
sbb
les
int3
or
pop
jl
sub
or
mov
repnz
dec
lods
pop
inc
fild
add
add
cmp
bound
mov
mov
(bad)
(bad)
sub
ret
pop
and
lea
std
mov
gs
add
add
std
movs
cmp
and
dec
jbe
jmp
add
test
xor
mov
push
sub
add
add
and
rcl
bnd
(bad)
mov
rcl
mov
mov
aam
jg
test
add
add
out
dec
bound
cmp
ins
jno
dec
or
pop
les
or
adc
call
rol
add
add
push
mov
fsubr
mov
push
or
mov
mov
or
aaa
adc
add
loope
movups
mov
pop
sub
add
ret
xchg
dec
loope
repz
or
add
add
inc
and
out
cmp
test
es
daa
sub
or
xlat
adc
and
ret
add
add
sti
nop
les
sbb
inc
rcr
inc
mov
and
(bad)
scas
fisubr
les
add
add
dec
mov
mov
mov
mov
mov
out
cmp
mov
icebp
pop
std
mov
icebp
outs
sahf
add
add
cmps
das
mov
mov
or
mov
or
mov
out
xchg
or
rol
add
movs
xchg
enter
adc
mov
mov
shl
jle
(bad)
push
jl
xchg
ins
outs
das
inc
or
add
call
mov
js
mov
nop
(bad)
fdiv
lods
mov
pop
add
add
scas
outs
shr
mov
ftst
pop
into
cmp
clc
xchg
lea
call
mov
mov
add
movs
and
cld
xchg
mov
push
inc
mov
lods
in
pusha
add
pop
and
test
mov
fmul
and
idiv
js
clc
pushf
or
leave
push
int
stc
hlt
add
add
or
and
stos
pop
sar
retf
loope
cmp
outs
jmp
call
add
add
call
mov
stc
enter
(bad)
push
daa
std
mov
pop
sar
lods
lahf
pop
pushf
add
add
mov
lods
mov
lods
adc
push
cmp
dec
test
add
add
sub
inc
adc
retf
xor
(bad)
fwait
das
sub
inc
imul
retf
rcl
inc
mov
cmp
shr
adc
sar
shr
add
add
mov
shr
mov
sbb
jbe
pop
movs
push
bound
mov
xlat
(bad)
add
add
in
sahf
push
sub
ficom
dec
retf
mov
dec
inc
out
xchg
pusha
cli
not
cmp
xor
add
add
add
xchg
pusha
push
xchg
dec
pop
sbb
cld
movs
(bad)
push
aam
les
add
add
and
aam
mov
and
pop
test
mov
push
lods
mov
inc
fsubr
(bad)
rcr
rol
add
add
mov
cmp
sbb
jno
dec
xor
xchg
jno
dec
adc
inc
hlt
add
add
outs
adc
(bad)
mov
xor
push
jo
(bad)
popf
repz
push
and
add
xor
xchg
cmp
jmp
inc
(bad)
repz
mov
push
(bad)
mov
dec
add
add
mov
cli
in
fidivr
pop
loop
mov
js
popf
jno
push
std
in
rol
inc
stos
fist
iret
add
add
inc
pop
cmps
push
movs
inc
shl
xchg
fiadd
call
aam
test
jb
aaa
add
add
sub
call
sbb
jmp
mov
pop
cmps
jns
lahf
mov
aad
inc
out
dec
dec
mov
jmp
bound
dec
mov
fs
push
jmp
ret
dec
mov
inc
movs
fstp
dec
cwde
stc
pusha
ds
cmc
call
leave
mov
rcr
xchg
xchg
icebp
pusha
jo
retf
std
outs
jo
push
and
lds
inc
mov
or
add
add
repnz
sub
std
lods
ret
jmp
aad
je
push
and
cli
mov
ds
dec
mov
add
add
mov
dec
fsubp
push
fwait
push
fadd
pushf
test
stc
adc
in
or
add
add
xlat
cli
sub
or
and
call
inc
cmp
sbb
sti
in
mov
xchg
ds
add
or
adc
cld
cli
and
in
sbb
retf
mov
push
test
mov
add
add
addr16
cdq
scas
mov
fistp
jb
popf
inc
mov
std
push
rcl
add
add
clc
stc
in
mov
push
push
cdq
inc
fcom
or
imul
xor
mov
add
dec
clc
mov
push
adc
cmps
not
stc
jns
dec
iret
and
xchg
icebp
cmp
add
add
js
pop
pop
enter
or
cmp
mov
fdivr
push
lahf
add
add
mov
rcl
sub
pop
jge
shl
jno
mov
fisub
jl
jns
jns
add
add
lods
pop
pop
sbb
mov
xor
push
les
mov
(bad)
mov
xchg
and
add
daa
push
movs
sti
push
out
fistp
cwde
or
nop
lods
loop
fist
add
enter
cld
loop
ins
sar
xchg
push
arpl
fmul
cmp
(bad)
std
cmp
adc
cmp
add
add
push
inc
xchg
mov
nop
adc
cld
rol
lock
nop
in
(bad)
loop
sar
add
add
add
test
rcr
sub
sub
outs
repz
movs
add
iret
(bad)
adc
fdiv
shl
(bad)
push
test
pop
sub
pop
imul
aam
jmp
jno
icebp
ror
jo
aad
cmc
mov
add
add
vcomiss
pop
loop
xchg
out
(bad)
mov
repnz
or
aad
shr
mov
push
in
mov
into
or
add
add
rcl
push
xor
jo
fld
xchg
cli
das
adc
ret
pop
push
not
test
in
lods
outs
test
mov
test
test
and
mov
push
(bad)
loopne
and
add
add
jo
fnstcw
fwait
pop
adc
xor
shr
jo
pop
xchg
sbb
xchg
imul
add
std
push
fldcw
sub
stc
push
dec
imul
in
into
pushf
enter
fidivr
xor
cmps
add
add
jae
push
pop
dec
ss
jmp
enter
mov
jecxz
out
paddusw
imul
add
add
imul
pop
dec
stos
xchg
jae
dec
adc
mov
sar
fucomi
adc
aad
add
add
sbb
mov
and
lock
rcl
jae
lahf
inc
ror
mov
fstp
mov
add
add
add
popf
jbe
jle
mov
add
or
or
dec
fcomp
add
and
add
add
imul
bnd
sbb
push
pop
and
not
ja
cmps
mov
fucomp
ja
cmp
add
add
adc
call
hlt
out
mov
loope
(bad)
repnz
out
repnz
add
add
scas
retf
or
xor
sub
add
cli
into
push
mov
xchg
mov
push
mov
in
lock
sub
shl
adc
jb
adc
add
add
scas
inc
out
xadd
adc
xlat
les
sti
mov
movs
in
jo
out
push
in
mov
nop
add
add
ficom
sar
cmps
sub
mov
and
dec
cmp
cmp
je
and
mov
add
inc
jl
mov
les
mov
test
dec
loope
loopne
xor
loope
add
add
add
push
mov
sub
jmp
adc
div
push
repnz
mov
jge
add
add
pop
mov
mov
pop
inc
les
mov
repnz
popf
xor
push
das
rol
add
add
cmp
out
add
in
bound
jecxz
jns
in
ror
in
push
pop
lods
pop
push
pop
lock
jecxz
add
add
gs
nop
hlt
popf
fld1
fimul
sub
push
jmp
add
inc
inc
in
movhps
(bad)
xor
or
icebp
lods
fs
cmp
jo
add
add
mov
cmp
cli
call
addr16
cmc
mov
push
fmul
mov
push
mov
mov
add
add
mov
jne
rcr
mov
fstp
jne
push
out
popf
mov
in
pusha
xchg
scas
aas
jmp
add
out
push
pushf
push
aam
clc
mov
push
daa
test
rol
outs
icebp
mov
mov
in
mov
or
add
add
mov
hlt
(bad)
push
inc
mov
add
mov
lds
pushf
jns
ret
xor
mov
add
add
bound
xor
pop
test
inc
in
js
jmp
loop
and
pop
outs
mov
sbb
jmp
pop
pop
push
dec
rcl
adc
pusha
and
fstp
loopne
jns
daa
pop
mov
add
add
mov
mov
in
enter
and
loopne
cli
cmc
push
stos
and
cld
outs
jmp
add
add
popf
(bad)
out
loopne
push
cmp
push
and
xchg
push
and
pop
lds
add
inc
cld
push
outs
and
in
mov
test
push
std
inc
xlat
sub
sbb
add
add
cld
mov
mov
inc
mov
dec
stos
test
lods
inc
pusha
sub
in
lahf
rcl
stos
div
xchg
add
add
add
jns
push
adc
mov
mov
xchg
and
add
mov
jmp
add
add
lea
mov
push
mov
cmp
repnz
addr16
retf
jns
in
jne
pop
pop
retf
add
add
mov
or
cmc
in
adc
and
and
mov
mov
xor
pop
sub
add
add
into
inc
inc
sub
out
sub
dec
mov
dec
jecxz
iret
jno
movs
jns
(bad)
in
fbld
add
add
add
push
and
rcr
mov
push
out
test
mov
sub
(bad)
les
push
add
add
mov
and
jns
sbb
loop
sbb
xchg
and
add
add
pop
sbb
stos
add
jne
sbb
ret
std
xchg
ret
or
push
fisttp
push
pop
push
mov
add
add
daa
enter
int3
inc
push
les
lock
xor
dec
adc
dec
add
add
iret
jo
pop
in
sti
mov
dec
jmp
push
call
pop
stos
hlt
jmp
add
push
and
push
or
pop
repz
fld
(bad)
pop
pop
jmp
add
repz
inc
jl
pop
jae
jmp
repz
ss
popa
mov
inc
fsqrt
inc
add
add
(bad)
jl
cs
sti
inc
scas
mov
je
push
lods
adc
jg
fcom
add
pop
out
das
mov
mov
lea
jo
cmc
movs
mov
call
daa
daa
fadd
push
lds
shl
cmc
jnp
inc
sar
pusha
mov
and
add
add
test
cld
sbb
pop
pop
mul
push
mov
call
aas
mov
add
add
inc
mov
imul
bound
pop
popf
sub
sahf
sub
add
add
xchg
lock
nop
fsub
cmps
xor
push
xor
cmp
clc
or
add
imul
adc
pop
sub
cmp
cmp
sub
hlt
clc
and
and
bound
add
add
(bad)
push
sub
mov
sub
pop
repnz
loop
popf
xor
in
or
add
add
stos
loopne
and
stc
xor
inc
les
ret
adc
loope
in
pop
xor
add
add
cdq
inc
jns
or
and
lods
shr
sub
xor
test
jl
add
add
das
lea
cmp
fild
pop
push
lock
mov
nop
call
add
xchg
jmp
push
dec
cld
xchg
adc
and
aas
shl
rol
dec
or
(bad)
fadd
add
add
pop
sbb
popa
mov
pusha
inc
dec
aam
or
sub
cli
hlt
add
add
jmp
or
ins
std
jnp
and
inc
in
std
ss
(bad)
dec
shl
push
enter
dec
out
call
jo
cmp
(bad)
mov
xlat
cmp
and
inc
pushf
je
out
jo
push
pop
test
dec
add
add
mov
cmc
fadd
mov
xlat
jmp
lock
fadd
adc
dec
add
sbb
add
add
push
nop
call
dec
push
jmp
mov
bnd
cmp
inc
add
add
(bad)
scas
and
and
dec
das
mov
daa
ficomp
rol
adc
popa
xor
add
add
adc
repnz
sub
ins
add
and
movs
mov
mov
sti
mov
add
add
pop
jecxz
pop
outs
out
mov
in
xor
push
les
pop
jns
stc
hlt
pop
dec
cmp
xlat
sti
ins
or
test
xchg
adc
popf
mov
mov
pop
dec
mov
pop
scas
cmp
add
add
fcom
in
jmp
jo
push
or
not
ja
lock
pusha
leave
fdiv
lock
add
add
add
stos
imul
lods
jl
xor
or
adc
mov
add
dec
in
fld
add
add
xor
mov
pop
xor
test
or
cld
scas
ins
add
add
jle
test
loop
mov
add
push
adc
out
test
or
add
mov
sahf
xor
push
lock
pop
and
add
lock
xchg
mov
mov
add
add
jg
std
fdivrp
sub
jbe
mov
cmovno
add
cs
enter
test
add
add
sub
jmp
retf
jo
xchg
in
lods
shl
into
loopne
fadd
adc
add
or
imul
cmp
loopne
shr
fdivr
cdq
shl
enter
add
xor
xchg
inc
push
ds
cdq
mov
xchg
fwait
inc
sub
bound
ss
into
xchg
cmp
pop
pop
mov
jecxz
add
add
inc
in
fmul
push
pop
fdiv
inc
rcr
inc
std
mov
jmp
pop
and
js
mov
xor
inc
push
loopne
icebp
xchg
fwait
jo
in
inc
pop
or
sub
mov
add
ds
lods
mov
adc
mov
loop
gs
mov
xor
sub
add
add
mov
js
push
and
mov
ins
dec
mov
and
add
add
sbb
movs
xor
in
and
into
popf
es
sar
nop
inc
or
loopne
or
iret
rol
add
add
(bad)
aas
sub
movs
mov
cmp
mov
dec
div
mov
(bad)
mov
push
add
test
(bad)
sbb
or
or
cld
(bad)
push
inc
in
lahf
loope
int3
cmp
adc
mov
or
sbb
pop
adc
or
test
adc
dec
xor
movs
or
xchg
movs
xor
dec
popf
out
inc
js
or
cmp
add
add
aas
sbb
outs
and
in
inc
and
rcl
nop
cmps
or
stos
mov
jno
(bad)
push
mov
fadd
add
add
outs
adc
scas
sub
pusha
gs
add
and
sar
test
inc
jmp
(bad)
fbstp
pop
and
fs
xor
cmps
add
add
mov
call
push
jp
push
nop
nop
sub
push
nop
les
rol
add
add
rcl
stc
mov
push
cmp
cmp
or
add
in
div
cwde
push
dec
jne
and
pop
and
clc
sbb
mov
movs
test
jecxz
mov
push
pusha
iret
adc
loop
add
add
or
cmp
movs
(bad)
pop
out
dec
aam
in
test
push
ins
fs
adc
pusha
add
add
(bad)
iret
jo
mov
inc
test
xchg
nop
test
mov
add
add
cmp
dec
hlt
repnz
dec
jo
fbstp
cmp
clc
sub
rcl
dec
push
add
add
push
push
push
in
fdivr
push
cdq
adc
and
mov
adc
mov
adc
add
add
test
add
je
push
jg
push
xor
aam
icebp
enter
adc
add
xor
dec
hlt
add
add
sar
push
or
mov
mov
adc
sbb
icebp
push
stc
rol
add
add
sub
jo
add
lea
les
loopne
movs
neg
ds
add
add
mov
adc
mov
inc
pop
mov
mov
test
mov
add
add
mov
sbb
adc
inc
xchg
in
xor
and
test
cld
lods
pop
adc
push
sub
inc
add
add
mov
in
or
rol
retf
fcomi
sub
xor
pop
adc
out
bound
push
inc
dec
jo
mov
push
pop
in
nop
fnstenv
xor
and
add
cmc
out
push
mov
push
es
test
dec
cmp
and
inc
out
pop
mov
add
add
fst
mov
das
or
pop
(bad)
repnz
add
add
mov
or
ja
lock
or
in
fadd
pop
lock
xor
add
add
call
pop
faddp
js
jg
aaa
mov
sbb
cs
bound
aam
pop
imul
add
and
stc
in
pop
xor
lea
push
or
mov
mov
mov
cwde
imul
add
movs
push
jmp
jb
inc
xor
jmp
mov
cmp
adc
ins
movs
add
add
stos
cmp
or
pop
pop
pop
adc
les
xchg
in
fmul
jnp
or
mov
cdq
mov
push
fmul
enter
sbb
add
add
and
inc
ins
cmp
dec
js
pusha
add
and
and
inc
pusha
repnz
inc
mov
add
add
adc
lods
rol
sbb
addr16
data16
nop
sub
dec
sbb
adc
pusha
mov
je
push
sub
and
mov
int3
cmp
xchg
adc
sbb
add
jmp
and
jbe
(bad)
mov
clc
and
sbb
add
sbb
icebp
test
add
add
dec
dec
nop
jo
cs
xchg
outs
and
mov
pop
push
shr
cmp
or
xor
adc
cmp
test
jmp
push
push
lods
mov
pusha
daa
add
add
aam
leave
clc
mov
adc
outs
sub
clc
xchg
push
or
out
mov
sub
test
mov
add
add
jo
sub
(bad)
pop
les
sub
adc
loopne
pop
pop
test
xor
(bad)
je
add
add
mov
push
das
aas
or
dec
shl
movs
mov
push
inc
lock
pop
sub
aas
cld
pop
ficom
inc
add
add
push
mov
mov
pop
retf
mov
in
dec
call
ss
sar
or
add
add
or
push
arpl
inc
test
dec
jae
leave
xor
push
adc
add
dec
in
fld
add
add
dec
mov
fdivr
aam
rcl
retf
inc
pop
mov
dec
fild
push
push
add
push
xor
rol
and
jp
pop
push
and
and
cli
adc
add
inc
push
push
push
pop
cmp
xchg
xchg
pop
les
mov
push
and
enter
and
pop
pusha
test
add
add
cld
rcl
hlt
in
xor
cmp
in
data16
test
cmp
mov
data16
add
ja
and
sbb
ror
mov
pop
sbb
push
mov
(bad)
idiv
icebp
dec
and
jns
add
add
xor
sub
lods
xchg
dec
and
add
fdivr
call
cmps
pusha
dec
repnz
add
xor
call
jecxz
movs
test
loope
and
cmc
jecxz
xchg
push
mov
icebp
lods
aam
and
mul
int
mov
icebp
jo
dec
or
sub
sbb
inc
shl
clc
ror
fisttp
dec
mov
in
lock
ja
sub
daa
xchg
xor
(bad)
mov
and
adc
add
dec
sahf
mov
nop
cmp
push
js
xor
mov
add
add
(bad)
into
mov
mov
ret
pop
push
xchg
ja
or
jge
xchg
in
rcl
cmp
cmp
retf
hlt
mov
mov
or
outs
fdivr
data16
add
jb
loopne
in
mov
xchg
icebp
aad
dec
push
cdq
ds
enter
sub
add
add
shl
in
ins
and
out
or
sub
xor
push
pop
outs
pop
adc
add
push
in
cs
stos
sub
pushf
or
add
sbb
enter
cmps
or
mov
adc
mov
add
add
stos
sub
movs
cmps
push
mov
daa
(bad)
out
mov
sub
popa
or
add
add
dec
or
scas
not
mov
nop
hlt
fs
xlat
pushf
add
add
mov
push
and
rcr
push
sbb
xor
push
add
add
or
cmp
inc
inc
call
sbb
iret
test
xchg
mov
shl
repz
out
into
add
lds
jmp
in
stos
call
call
div
mov
xchg
pop
jge
mov
sbb
movs
(bad)
fwait
mov
add
popa
mov
ss
adc
cmp
test
test
dec
mov
popa
add
add
cmp
lods
in
daa
cmp
xor
cmp
leave
cmc
pop
inc
mov
ds
jge
sub
in
out
or
xor
test
ror
sar
add
add
push
in
loop
aaa
int3
sbb
mov
jnp
adc
add
lahf
xchg
inc
add
rcl
add
jb
je
sar
rol
daa
scas
pop
aad
jb
push
or
add
add
sbb
stos
je
out
call
mov
imul
or
or
mov
pop
add
add
ret
lods
loopne
mov
push
fldz
lods
inc
dec
and
jbe
jge
push
mov
add
add
xor
pop
sub
and
mov
and
xchg
and
add
cmp
cmp
mov
dec
add
add
push
sbb
iret
out
dec
ss
adc
shr
add
add
add
stos
and
add
mov
add
and
inc
inc
jo
add
add
shl
ins
push
dec
mov
pop
inc
jo
mov
or
jmp
mov
add
add
rcl
fwait
dec
jle
shl
test
nop
enter
sub
and
or
add
add
and
push
bound
mov
push
adc
call
(bad)
dec
mov
add
add
cmp
add
retf
cwde
adc
push
dec
dec
push
popa
je
or
pop
dec
std
popa
imul
add
add
add
sub
dec
cmp
inc
push
mov
and
pop
add
add
or
movs
bound
add
add
xchg
jo
shl
jne
rcr
pushf
loopne
sbb
mov
add
add
add
push
or
pop
jb
lods
sub
and
(bad)
sub
rcr
(bad)
data16
add
add
and
rol
fs
sqrtps
(bad)
adc
inc
push
push
fucomp
sbb
mov
jns
add
add
dec
loop
adc
or
adc
bound
loopne
aas
rol
add
add
jo
adc
adc
iret
and
aas
adc
cmp
mov
inc
xor
xor
nop
jg
add
add
(bad)
mov
mov
pop
mov
out
cwde
lahf
adc
add
add
jle
or
jo
(bad)
sar
mov
or
mov
inc
sar
inc
add
or
loopne
shl
ds
or
and
add
test
cmp
mov
cmp
add
jo
jno
psrad
pop
les
ret
mov
adc
(bad)
adc
gs
mov
add
psrad
ret
cmp
jno
psrad
inc
test
enter
add
test
mov
or
repz
hlt
cmp
icebp
jle
loope
mov
sbb
repz
cmp
test
test
and
pop
ret
repz
cld
iret
add
add
mov
(bad)
nop
loop
push
call
cmp
mov
aam
inc
shl
fadd
add
add
jae
sbb
xor
mov
bound
sbb
loopne
stos
sub
push
or
mov
add
or
pshufw
mov
cli
adc
mov
sbb
stos
add
add
adc
mov
dec
push
push
mov
jp
mov
mov
push
push
mov
add
xchg
adc
loopne
pushf
cmp
and
jo
retf
in
jge
and
out
add
add
mov
push
inc
fisubr
sub
mov
jns
or
movq
push
pushf
push
les
push
cmp
call
jnp
enter
mov
add
add
or
lock
mov
movups
or
jmp
adc
cld
sbb
stos
and
add
add
shr
jo
and
pop
push
inc
xor
je
inc
push
adc
stos
mov
add
add
or
dec
xchg
push
adc
adc
push
aad
add
add
xchg
or
lock
pop
je
stos
push
mov
xor
add
add
cmp
cld
inc
and
retf
push
call
jge
xchg
mov
dec
add
add
mov
add
and
lock
inc
and
or
sub
cmp
mov
mov
add
add
fldcw
jb
and
mov
pop
jmp
or
mov
add
add
or
and
and
fldenv
enter
xchg
sub
mov
loop
add
add
mov
push
add
or
inc
les
or
xor
and
add
or
dec
push
add
jl
push
xor
push
mov
and
mov
add
inc
nop
loop
adc
outs
and
adc
loop
adc
test
add
add
inc
and
lods
jno
or
mov
adc
mov
mov
sbb
and
add
add
je
push
adc
imul
and
loop
adc
sbb
inc
push
and
add
add
jno
or
(bad)
(bad)
les
sbb
push
sbb
jnp
loopne
nop
or
or
add
add
scas
stos
jge
and
fadd
pusha
enter
rcl
inc
fisub
in
add
add
test
fndisi(8087
mov
mov
pop
dec
ins
and
inc
sbb
dec
push
add
add
fwait
loopne
inc
inc
ins
bnd
xchg
js
push
loope
loopne
xor
mul
add
enter
and
add
add
push
adc
adc
fistp
xchg
push
leave
test
sub
xlat
inc
loopne
or
xor
add
push
pop
or
sub
jle
push
mov
mov
scas
xor
test
add
add
mov
inc
sbb
cmp
or
lock
cmp
inc
or
pop
add
add
jbe
or
loop
add
movs
dec
xor
dec
sbb
adc
pop
sub
add
add
xchg
jnp
lock
and
loop
adc
test
mov
adc
mov
mov
add
add
inc
nop
outs
and
xchg
mov
loop
adc
outs
and
inc
test
add
add
mov
test
loop
adc
test
loope
pop
adc
add
add
aaa
adc
mov
fadd
jg
les
shl
adc
fadd
and
jno
or
(bad)
les
add
and
pop
mov
push
or
jmp
(bad)
lods
mov
movs
add
cs
add
add
rol
or
scas
sub
mov
sbb
push
ret
adc
mov
daa
add
add
cmp
adc
mov
cmp
or
movs
adc
pop
mov
lock
add
mov
bound
pushf
rcl
jmp
rcr
repz
scas
and
add
add
or
inc
cmp
dec
push
out
hlt
(bad)
jno
xchg
jmp
mov
cmps
repz
add
leave
or
scas
and
pop
std
mov
retf
imul
adc
jnp
stos
and
pop
dec
add
add
and
adc
retf
add
mov
add
es
pusha
icebp
sbb
ins
in
add
add
nop
(bad)
xchg
test
movs
jno
push
push
sbb
mov
fidiv
(bad)
sti
adc
add
add
jl
mov
rcl
lock
enter
mov
out
adc
push
sub
in
mov
pusha
test
add
add
loopne
mov
hlt
or
mov
jmp
jge
sar
add
add
dec
mov
and
test
and
mov
or
or
mov
or
cmp
push
mov
(bad)
adc
dec
mov
fldcw
pop
adc
loope
mov
xchg
add
add
inc
mov
rol
test
or
test
test
sbb
cld
sbb
adc
clc
adc
mov
fcomp
and
in
jl
inc
mov
mov
add
add
add
jo
mov
enter
adc
mov
mov
ins
mov
inc
add
add
js
jo
pop
pop
and
jl
(bad)
xchg
fs
repz
xchg
jmp
adc
add
add
fidivr
dec
or
jbe
mov
pop
aas
dec
cwde
ds
push
cmp
mov
aas
xchg
lock
dec
inc
add
add
xlat
loop
xor
sub
(bad)
loop
mov
dec
aad
popa
push
add
add
add
fistp
mov
or
and
rol
pusha
call
jae
mov
add
add
outs
or
and
and
or
repnz
aaa
popa
or
shl
daa
adc
retf
test
in
pusha
and
add
jl
mov
iret
ror
jl
cmp
add
xor
aas
dec
ffree
add
add
cmovo
pop
xchg
in
inc
sar
lock
dec
cmp
repz
push
stos
xor
add
add
add
stos
icebp
cld
dec
adc
push
cmc
push
adc
js
sti
lock
cld
add
dec
jo
nop
and
add
add
std
push
add
xor
push
and
jo
nop
mov
push
cdq
cdq
jo
nop
adc
lea
add
xchg
or
sbb
adc
and
stc
ss
sub
push
loopne
dec
or
xchg
inc
add
add
and
and
or
adc
pop
and
pop
enter
enter
pusha
add
add
and
loopne
push
add
push
or
mov
adc
xor
nop
and
dec
add
add
rcl
and
inc
push
jo
nop
adc
xlat
mov
or
mov
or
add
sbb
and
inc
loopne
fidiv
inc
fistp
nop
inc
mov
ins
fcomp
or
add
add
fnsave
push
fisub
or
fbld
or
loopne
imul
mov
sub
adc
cs
and
jmp
adc
or
jno
or
out
and
shl
call
add
add
imul
jmp
cdq
or
and
inc
adc
icebp
(bad)
or
in
imul
shr
pop
inc
jmp
lock
lea
pusha
icebp
imul
test
cmc
(bad)
nop
dec
mov
shl
lock
push
or
mov
add
xchg
and
cli
fs
or
nop
sub
xor
add
add
imul
fs
test
mov
sbb
or
dec
int3
lock
pusha
add
add
sub
push
int3
outs
or
pop
in
out
ret
pop
push
dec
enter
into
inc
push
gs
or
add
add
dec
outs
loopne
int3
sbb
jbe
adc
inc
jb
arpl
sbb
mov
and
add
dec
add
add
add
mov
fs
ins
loop
js
cmp
outs
and
or
add
add
dec
fs
push
and
dec
jo
inc
mov
xor
dec
loopne
mov
adc
add
pop
add
add
sub
shl
cmps
xchg
into
xor
or
sub
mov
or
stos
adc
into
int3
jae
sub
js
add
add
cmp
ss
int3
push
dec
xor
sub
xchg
or
inc
push
sub
sbb
les
jb
cdq
sbb
add
add
pushf
sbb
cmp
mov
jge
ins
and
and
je
push
adc
add
add
or
adc
or
pop
push
jb
jae
add
and
ins
gs
add
add
sub
js
sub
arpl
in
push
je
push
mov
mov
clc
cmp
add
add
push
xor
jb
xor
arpl
imul
pminsw
loope
fsubr
push
add
add
fcmove
fs
add
lods
or
cmp
cdq
and
stos
sub
cdq
ins
add
add
jno
and
hlt
and
jae
xor
std
mov
jl
shr
push
push
data16
and
mov
add
add
jne
test
mov
ins
pop
mov
xor
cmp
leave
in
fwait
cmps
not
retf
and
inc
mov
es
popf
icebp
mov
test
fwait
mov
cmp
mov
push
add
add
jae
mov
test
in
jns
inc
stos
aaa
ds
jo
js
xor
mov
lea
add
add
fs
inc
test
imul
xchg
bound
fimul
movs
test
dec
fwait
or
push
in
mov
add
add
sub
retf
push
outs
and
inc
sub
jbe
or
fisub
add
add
pop
xor
loope
xor
pop
sar
jo
je
retf
into
and
or
adc
cmp
add
add
adc
sub
mov
inc
xor
or
jns
and
inc
push
sub
mov
add
add
je
es
ds
stos
jle
fdivr
and
and
push
outs
push
xor
add
add
mov
addr16
loope
mov
(bad)
jecxz
cmp
jbe
xchg
xor
dec
inc
ds
add
add
cmp
dec
push
cdq
sbb
dec
sahf
jmp
(bad)
xchg
gs
sbb
xor
outs
movs
inc
push
mov
inc
add
add
dec
cwde
xchg
or
jbe
dec
push
inc
out
ss
dec
cs
push
je
sub
xor
add
add
dec
jno
lahf
mov
fs
mov
mov
or
or
push
mov
into
dec
or
add
adc
jmp
leave
lahf
jl
adc
dec
pop
test
add
(bad)
push
or
cmc
sahf
je
fs
ds
xor
push
sbb
push
inc
sbb
and
add
sahf
dec
push
repz
sahf
jmp
xchg
cmp
add
sub
add
add
pop
jp
(bad)
ins
movs
data16
nop
and
mov
add
arpl
cmp
aaa
add
add
and
mov
or
xlat
push
fs
stc
call
jb
add
add
repz
lock
push
add
add
jne
arpl
adc
cdq
retf
sbb
mov
add
add
push
jl
loopne
mov
leave
mov
mov
pop
sub
push
test
xchg
jo
dec
les
add
add
(bad)
fcom
call
inc
int
(bad)
(bad)
loop
fstp
icebp
sub
dec
jae
retf
add
add
in
pop
stos
aam
test
retf
jge
sub
mov
retf
cli
imul
add
add
pop
cmps
mov
in
pusha
mov
popf
fisub
dec
gs
out
lods
aas
dec
add
add
lahf
and
push
std
in
lods
cs
mov
lahf
and
ins
sbb
pop
test
push
add
add
sub
and
jg
mov
movs
pop
add
imul
jne
xchg
gs
fnstsw
adc
arpl
add
add
or
jb
xor
and
and
push
enter
inc
arpl
inc
jb
add
add
jne
jp
outs
imul
ja
stos
or
pusha
cmps
add
in
xor
add
or
add
add
or
add
fcomp
or
mov
adc
and
dec
enter
adc
int3
pop
cmp
add
add
mov
or
and
test
adc
mov
push
or
sbb
adc
sbb
push
and
add
add
mov
dec
ds
sbb
sub
loopne
enter
mov
add
add
inc
adc
dec
push
inc
push
inc
mov
inc
pop
fldenv
xor
ds
jns
jmp
or
inc
add
add
fbld
push
push
js
xor
sub
push
dec
ja
jg
push
arpl
add
jne
add
add
push
xor
push
popa
jb
sub
mov
dec
outs
add
sbb
and
add
add
adc
lock
cmp
xor
inc
jne
div
fucomp
cmp
ss
push
jle
add
add
int
jbe
push
movs
jmp
(bad)
or
push
adc
dec
pop
inc
xor
outs
cwde
ins
xor
cmp
add
add
mul
dec
mov
lds
outs
outs
pop
dec
ja
mov
mov
dec
inc
add
add
dec
jmp
outs
xor
jb
push
in
std
cld
outs
mov
xor
mov
addr16
push
add
add
daa
outs
sub
outs
sub
push
mov
or
mov
push
leave
jbe
out
jb
ret
push
pop
adc
add
add
dec
push
bound
bound
sub
iret
fs
inc
pop
xchg
inc
dec
movups
sub
sbb
add
add
in
ins
jmp
outs
xor
or
mov
or
jae
push
or
adc
add
add
inc
je
mov
or
cli
push
push
xchg
jbe
(bad)
bound
push
cmp
jo
mov
mov
add
add
pusha
outs
cmp
adc
enter
loopne
sar
dec
add
or
add
add
adc
dec
cs
inc
leave
bound
enter
dec
cmp
arpl
add
add
inc
cmp
and
and
ds
out
ss
call
add
stos
add
add
inc
and
push
arpl
dec
xchg
and
sub
test
mov
dec
pop
movs
les
(bad)
fs
pop
leave
add
add
mov
and
jns
inc
and
xchg
sar
and
lock
jp
pusha
and
jo
add
add
or
adc
arpl
shr
lods
xchg
cmps
sbb
inc
mov
or
jae
adc
add
add
std
mov
test
dec
add
repz
xchg
adc
jmp
push
sub
add
add
sub
or
cwde
mov
or
mov
dec
dec
push
pop
xor
inc
jns
mov
add
push
dec
dec
fst
shl
pop
cmp
push
dec
inc
jno
fmul
add
add
dec
outs
aad
dec
arpl
push
loopne
call
and
and
fs
cmp
inc
ficom
add
sub
inc
xchg
pop
les
mov
push
jle
jno
ins
jne
hlt
push
cli
add
add
je
adc
jmp
call
aaa
loopne
jnp
adc
or
push
mul
add
add
pop
adc
and
inc
sbb
iret
mov
cmp
and
shl
add
add
scas
mov
mov
sub
mov
add
inc
jno
mov
adc
or
add
add
xor
and
sbb
dec
loop
mov
sbb
setb
sbb
cmp
add
add
adc
xor
out
stc
and
inc
les
popa
xchg
ins
pop
and
cmp
xchg
fs
add
fwait
jnp
and
std
mov
jae
jnp
jmp
ins
repz
add
pushf
sub
jmp
sbb
cdq
or
dec
xor
std
mov
jmp
add
add
sub
and
rcl
jmp
rol
movs
in
test
add
xchg
(bad)
(bad)
xor
inc
movs
jae
ret
or
dec
inc
cs
daa
das
fiadd
xor
fild
add
add
(bad)
jo
add
jno
ja
push
fs
mov
cmp
mov
mov
leave
mov
add
add
push
jae
xchg
inc
inc
inc
xor
xor
or
out
or
sub
sub
add
add
fdiv
dec
aad
hlt
and
or
lods
inc
ins
or
mov
inc
stc
dec
and
imul
add
add
inc
mov
inc
popf
inc
mov
(bad)
jo
dec
push
xor
push
mov
and
add
add
js
and
inc
bnd
inc
push
inc
mov
inc
xor
and
jns
sub
add
add
adc
outs
loope
push
imul
sbb
in
and
and
mov
add
add
jp
sub
or
sub
and
js
push
jp
and
imul
add
add
pop
push
or
push
adc
inc
and
sub
pop
jae
je
xchg
cmp
add
add
sub
inc
xchg
lds
adc
ror
inc
pop
fs
push
adc
cmp
xchg
add
add
and
test
mov
lods
arpl
cmp
jb
mov
and
inc
out
pop
pop
mov
inc
add
add
push
xor
xchg
es
sbb
or
mov
test
dec
jmp
jne
das
xlat
into
push
add
add
(bad)
jo
movs
inc
jl
loopne
mov
cmp
or
sub
inc
fwait
test
idiv
push
push
push
shl
add
add
sbb
fwait
and
and
push
cmp
ss
push
cmp
mov
or
add
add
push
push
cmp
fs
push
cwde
gs
add
sub
mov
dec
jp
nop
daa
xor
add
add
movs
(bad)
aam
ins
and
imul
pop
pop
xor
mov
cld
mov
gs
add
add
mov
fs
fstp
xor
jge
pop
xor
inc
fld
add
add
cmps
sub
mov
arpl
dec
xor
dec
sub
les
push
fisttp
pop
lds
ja
and
mov
adc
lods
sbb
xor
xor
dec
push
inc
js
sub
popf
xchg
mov
pop
inc
retf
xchg
pop
fdivr
and
cdq
mov
leave
inc
add
add
sbb
sub
sub
jns
arpl
inc
sbb
push
ins
xor
sbb
pop
dec
mov
movs
push
add
add
cmp
jb
mov
dec
add
push
data16
push
cmps
leave
inc
nop
lock
jnp
imul
add
add
add
addr16
xlat
stos
jbe
add
jge
pop
inc
lock
aam
mov
shl
add
add
aas
test
icebp
jno
xor
ret
sbb
add
jne
add
add
add
sbb
mov
mov
jecxz
test
loopne
add
cld
mov
push
mov
add
add
pop
iret
shr
stos
sti
add
xor
add
lahf
test
mov
popf
cmp
mov
add
and
adc
repz
or
in
add
inc
pop
les
pop
sbb
or
add
add
mov
mov
or
loopne
cmp
add
and
ret
bound
xchg
xchg
in
out
aaa
ins
add
add
add
push
hlt
jmp
js
add
mov
call
dec
mov
add
jo
mov
add
test
xor
rcr
add
mov
add
add
into
push
sub
mov
out
push
add
or
add
movs
cmp
inc
mov
xlat
sti
jl
cmp
xchg
inc
inc
add
fsubrp
retf
push
jnp
xor
cmps
add
add
ret
out
dec
xchg
or
inc
cli
ret
dec
or
mov
and
jbe
mov
shl
add
mul
push
pop
int3
add
mov
ins
jo
push
add
in
mov
push
add
add
and
in
add
push
shr
(bad)
lar
scas
mov
add
adc
mov
xchg
adc
addr16
jmp
add
jae
lods
je
out
add
test
stc
aaa
call
outs
inc
icebp
sbb
sub
lds
stos
sbb
mov
dec
add
add
(bad)
rol
jns
call
pop
hlt
pop
(bad)
(bad)
xor
adc
add
jg
sbb
in
lahf
xchg
leave
pushf
out
add
sub
mov
enter
add
add
push
cdq
popa
add
sub
mov
loope
adc
push
and
arpl
jl
ja
jnp
add
add
dec
imul
fnstenv
dec
(bad)
or
mov
adc
xchg
and
and
adc
inc
dec
lock
lods
xor
or
xchg
movs
and
shl
es
add
add
xchg
aas
and
inc
int3
xor
movs
adc
and
dec
jno
fsub
xor
fmul
or
xchg
ret
and
inc
add
add
xchg
add
and
std
loopne
loop
jmp
daa
fs
jne
or
enter
outs
add
add
and
mov
(bad)
and
dec
sub
test
in
test
mov
add
add
retf
dec
mov
inc
dec
pop
mov
adc
and
dec
stos
xchg
sti
sub
xor
add
add
test
inc
and
jg
push
mov
lahf
and
dec
push
xchg
mov
xchg
mov
add
add
dec
mov
pop
and
and
enter
shr
adc
es
or
mov
and
add
add
inc
les
cmp
sbb
fsub
pusha
or
mov
adc
and
dec
nop
xchg
mov
add
add
inc
inc
out
mov
and
dec
or
xor
mov
jae
jo
xchg
nop
and
pop
and
add
add
dec
rcr
xchg
and
dec
in
jns
out
enter
adc
xchg
test
add
inc
push
hlt
mov
adc
jp
scas
xchg
or
mov
adc
cmps
dec
mov
(bad)
and
inc
fld
add
add
adc
mov
and
ds
data16
arpl
or
inc
push
popa
mov
add
and
dec
xchg
sahf
loope
clc
adc
xchg
fldenv
mov
mov
adc
add
dec
into
xchg
push
and
inc
fisttp
or
mov
inc
and
dec
add
add
mov
pushf
gs
stos
scas
sub
add
push
xor
movs
jb
mov
lods
add
add
cmp
jl
or
fwait
into
sbb
mov
xor
xchg
inc
jb
les
pop
jmp
add
push
mov
and
icebp
in
fsubr
mov
xchg
xchg
jb
inc
out
popa
dec
ret
loope
or
mov
add
add
daa
jge
sub
jbe
test
dec
mov
jb
jge
aaa
fldenv
xor
in
cmps
push
cs
in
fmul
mov
imul
std
mov
add
add
pop
movs
in
fadd
cmps
fwait
mov
nop
out
int
stos
inc
retf
mov
mov
addr16
pop
fadd
add
add
mov
jb
shr
mov
retf
pop
rdtsc
leave
ror
xchg
retf
add
jmp
mov
in
cmp
push
adc
sub
addr16
iret
aaa
jns
lock
out
std
xchg
add
add
mov
xchg
je
stc
out
icebp
pop
xor
aaa
addr16
and
sub
inc
dec
aad
sbb
add
add
sbb
jb
outs
pop
and
bound
stos
push
loope
mov
fst
out
aad
add
add
bound
shl
out
icebp
pop
pop
adc
pop
cmp
test
jno
mov
(bad)
bound
add
add
fcom
daa
xchg
dec
retf
mov
mov
ins
sbb
sub
(bad)
in
mov
and
add
mov
cmp
mov
add
push
cmc
adc
test
mov
add
add
mov
cs
pop
in
out
and
cmp
mov
int3
dec
pop
loope
leave
adc
jmp
or
add
add
cmp
push
(bad)
arpl
movs
clc
jno
sbb
out
ja
cdq
idiv
(bad)
push
les
add
add
xchg
lds
push
pusha
xor
push
add
sbb
into
addr16
test
out
les
mov
add
add
sbb
dec
stos
inc
out
jbe
call
sbb
jge
xchg
scas
popa
add
add
adc
mov
sbb
sti
lock
or
adc
mov
les
jno
sbb
inc
scas
inc
jmp
adc
in
jb
xchg
fwait
rol
mov
ret
les
dec
es
add
add
push
adc
aas
les
jno
sbb
or
dec
push
movs
(bad)
hlt
shl
hlt
stc
jno
add
add
sbb
loop
inc
xchg
stos
fcom
jae
xor
push
sub
sbb
or
or
(bad)
adc
and
add
add
popf
jno
sbb
xor
inc
sub
xchg
adc
das
jno
sbb
push
pop
inc
or
adc
sbb
les
cmp
dec
daa
adc
mov
fldl2e
jne
lahf
adc
sbb
sbb
add
add
adc
lds
mov
outs
and
pop
mov
push
mov
jbe
and
add
add
(bad)
mov
mov
into
(bad)
sub
jnp
fucom
mov
pop
das
and
test
cmc
cmp
rcr
mov
sbb
in
inc
sub
and
pusha
jecxz
les
jns
mov
enter
in
aam
adc
add
les
in
(bad)
jb
cmp
xchg
dec
inc
ficomp
pop
(bad)
call
mov
add
add
(bad)
sub
adc
in
sti
les
xchg
(bad)
call
inc
push
adc
les
add
add
jmp
add
inc
push
(bad)
jg
and
and
test
jecxz
add
add
push
(bad)
repz
jno
sbb
add
add
xchg
les
mov
icebp
cmc
adc
add
add
xlat
mov
ja
(bad)
ficomp
and
inc
xor
call
sbb
repz
mov
add
sbb
or
adc
adc
xor
das
mov
xchg
inc
mov
add
add
cs
les
xchg
jno
sbb
push
cmps
inc
repnz
jle
cmp
inc
enter
lods
mov
sbb
add
add
sub
jae
xchg
shl
mov
sahf
dec
inc
shl
and
push
jno
sbb
add
add
cmp
adc
(bad)
jno
sbb
imul
cmp
faddp
jns
jno
add
add
sbb
push
or
lods
fist
jbe
loopne
cmp
push
je
cmp
adc
inc
push
xchg
dec
adc
or
add
add
(bad)
ror
les
pop
sbb
lahf
ret
mov
lods
(bad)
out
les
sbb
cmp
add
shl
les
bnd
adc
aad
mov
enter
jg
pop
fisubr
mov
lea
add
add
mov
jno
sbb
dec
test
adc
jno
sbb
iret
jmp
retf
scas
mov
sbb
adc
les
outs
jno
dec
aad
jno
mov
jge
pop
cs
add
add
jb
sbb
and
cmps
(bad)
icebp
jae
mov
(bad)
xchg
mov
call
lds
les
add
sbb
xchg
dec
jg
popa
mov
adc
loopne
jo
nop
jl
inc
inc
jno
adc
add
add
int3
lds
push
jno
sbb
div
inc
add
adc
ret
mov
pop
scas
push
add
add
inc
stc
imul
rcr
sbb
inc
mov
jmp
les
sub
add
add
sbb
and
inc
xor
imul
jo
jno
jge
jno
sbb
sub
push
adc
add
add
adc
jno
ja
jno
sbb
stos
push
inc
call
adc
ffreep
jp
jno
sbb
pop
add
add
mov
adc
gs
sbb
xlat
out
xor
les
add
add
ret
sub
adc
pinsrw
cmc
in
retf
test
push
sbb
ins
mov
adc
movs
jmp
add
or
inc
push
push
mov
adc
xchg
bound
out
call
add
inc
and
dec
adc
or
in
and
dec
std
xchg
jmp
pop
adc
and
dec
scas
add
add
xchg
push
pop
inc
inc
add
hlt
pop
mov
jae
push
and
dec
or
push
and
pop
add
add
sub
mov
or
cmp
js
lahf
and
inc
sahf
je
adc
add
and
inc
dec
popa
mov
adc
ds
jno
xchg
and
inc
push
pusha
xchg
pop
and
add
add
std
adc
xchg
dec
and
inc
aam
mov
dec
imul
out
and
dec
push
xchg
xchg
add
add
and
inc
adc
mov
dec
mov
inc
inc
mov
dec
dec
xchg
add
fild
add
add
mov
dec
xor
ins
dec
mov
xor
xchg
mov
push
mov
adc
add
add
xchg
out
sub
mov
dec
xchg
jle
stos
inc
or
sub
shl
add
add
jns
loop
sbb
push
adc
push
pop
loop
adc
dec
pop
xchg
outs
and
inc
cmps
test
add
add
mov
xchg
inc
and
mov
mov
and
dec
mov
cli
and
inc
and
add
add
jmp
xchg
mov
jb
and
icebp
dec
(bad)
xchg
push
and
inc
jl
mov
pop
test
fsub
xchg
mov
mov
adc
and
dec
fcom
add
add
mov
stc
and
dec
xchg
xchg
pop
and
std
adc
and
dec
mov
xor
mov
cmps
adc
add
add
xchg
and
dec
inc
(bad)
js
jp
(bad)
and
dec
adc
(bad)
mov
add
add
and
inc
cld
(bad)
mov
adc
jl
ja
jnp
repnz
imul
adc
and
dec
add
add
addr16
sub
inc
mov
retf
dec
leave
xchg
jge
mov
inc
and
dec
lods
xchg
aam
mov
add
jb
ror
std
and
aas
adc
and
dec
xor
movs
and
inc
icebp
jno
add
add
adc
and
inc
ret
sbb
call
inc
loop
mov
add
add
adc
xchg
and
inc
sbb
and
dec
pop
xchg
mov
(bad)
mov
dec
das
repz
add
rol
and
dec
and
pop
push
retf
pop
js
add
sar
test
inc
and
dec
add
cmp
mov
dec
inc
xchg
add
and
(bad)
and
cmc
pop
mov
mov
adc
and
dec
int
or
add
add
adc
mov
dec
les
cmp
sbb
dec
pusha
xchg
and
add
mov
adc
xchg
out
and
pop
adc
and
dec
loopne
xor
cmp
add
add
push
adc
pop
dec
ret
and
adc
and
dec
out
enter
loopne
mov
dec
and
dec
not
xor
xchg
dec
add
add
sbb
inc
clc
cwde
mov
adc
(bad)
xchg
xchg
and
jmp
dec
sub
fbld
mov
mov
dec
inc
xchg
push
sub
xchg
push
and
add
add
jnp
repnz
imul
inc
lds
mov
adc
sub
xchg
xlat
and
add
add
adc
and
pop
bound
mov
adc
xchg
scas
and
adc
pop
add
add
aas
test
icebp
and
fdiv
mov
dec
add
or
adc
mov
jne
or
dec
sub
sbb
outs
or
add
adc
mov
and
inc
mov
mov
adc
and
dec
push
xchg
rcr
(bad)
dec
add
dec
mov
test
xchg
mov
test
push
add
add
add
cmps
push
jle
gs
sbb
pop
movs
ret
and
xchg
cmp
popf
inc
icebp
lods
cli
pop
hlt
dec
pop
jecxz
add
add
xchg
and
nop
push
lods
jbe
sbb
xchg
cmc
add
add
xlat
cld
lds
retf
stos
es
and
add
bound
dec
and
inc
jmp
loope
das
jne
add
add
add
inc
xchg
mov
mov
pop
out
add
jp
aam
pop
add
aam
sub
add
add
dec
loopne
sub
jne
mov
enter
add
imul
jno
mov
add
dec
mov
mov
lods
data16
cmp
in
xor
pusha
bound
add
add
inc
mov
fs
mov
add
sub
pop
sbb
fisubr
add
add
stos
jae
add
jb
add
jecxz
(bad)
pop
push
push
sub
jmp
pop
das
add
add
xchg
jnp
ror
aaa
or
and
add
in
push
sbb
sbb
cmps
add
add
jns
xchg
repz
repnz
imul
hlt
int
add
xor
pop
les
add
add
push
add
add
add
jmp
or
pusha
out
stos
pop
jno
push
mov
add
adc
and
cmp
dec
add
mov
mov
les
add
aam
add
add
pusha
push
adc
sti
and
mov
inc
inc
int3
fstp
mov
inc
iret
pop
mov
add
add
pop
add
jns
out
(bad)
add
jmp
adc
add
add
add
add
dec
add
jo
ins
pop
jb
std
add
(bad)
sti
jne
scas
aad
ss
fld
add
add
push
pop
push
add
and
cmp
add
out
mov
xchg
add
sbb
add
add
lds
dec
popa
fsub
mov
imul
mov
sub
cmp
loopne
inc
or
add
add
pop
sbb
repnz
add
adc
test
sbb
dec
out
cdq
add
add
fnstsw
std
test
cmc
add
sti
jle
xor
inc
sub
and
add
add
or
mov
cld
or
arpl
jnp
cmp
inc
add
inc
test
(bad)
adc
or
add
add
sar
stc
xor
sbb
fdiv
xchg
ja
jecxz
sub
add
add
mov
ins
test
add
and
mov
pop
jge
fadd
add
add
nop
out
xchg
add
fnstcw
rol
mov
mov
or
cmps
cmc
add
sub
mov
add
add
mov
add
push
js
or
fwait
push
jle
(bad)
test
add
add
mov
add
ret
scas
cmc
lahf
pop
add
imul
sub
adc
add
add
cmp
sbb
call
fild
mov
or
pop
sbb
hlt
in
call
add
add
out
xchg
sbb
jle
mov
adc
(bad)
ss
jmp
add
mov
add
xor
out
mov
xchg
xor
add
aaa
cld
or
loopne
add
add
nop
shl
icebp
add
dec
inc
in
(bad)
jg
int
push
pop
xchg
imul
jbe
dec
(bad)
lea
add
add
mov
int3
stos
in
in
xchg
add
sahf
shl
mov
shr
inc
add
jg
pop
jmp
add
jae
add
inc
cs
sbb
rcl
adc
ins
add
inc
add
add
adc
add
adc
jmp
cmp
mov
test
leave
add
add
add
jp
mov
cmp
rcr
pop
push
bnd
aas
sbb
jns
(bad)
aaa
mov
jmp
add
add
cmp
fild
cmp
ret
pop
push
add
add
add
and
dec
mov
or
test
jno
shl
pushf
fs
rcl
add
add
ins
pop
je
or
add
ret
xchg
xchg
and
inc
icebp
fisub
dec
add
add
push
xchg
mul
xchg
inc
and
adc
cwde
mov
adc
and
dec
mov
inc
add
add
xchg
jmp
ficom
sub
xchg
inc
and
js
mov
adc
xchg
mov
sbb
add
add
mov
loopne
test
xchg
xchg
and
sbb
and
dec
push
xchg
sub
pop
inc
add
add
adc
and
dec
mov
inc
xchg
lock
dec
pop
xchg
mov
popf
inc
mov
cmp
add
add
dec
push
xchg
push
and
inc
cmp
mov
xor
outs
inc
jmp
xchg
adc
and
pop
mov
add
cmp
jmp
or
dec
sti
xchg
push
jg
daa
adc
dec
rcl
cmp
mov
psrld
mov
and
inc
in
mov
dec
mov
add
add
std
adc
xchg
xor
jbe
fsubr
arpl
retf
dec
inc
xchg
and
jge
add
add
clc
out
ins
dec
dec
xchg
repz
inc
shr
adc
and
dec
les
out
(bad)
mov
adc
add
add
and
dec
iret
xchg
sub
es
movs
in
or
dec
ret
and
cmc
mov
and
add
add
dec
cmp
jnp
mov
adc
and
dec
gs
jle
or
adc
and
dec
aam
(bad)
and
out
xor
dec
aaa
xchg
cmps
and
not
push
and
dec
lea
adc
and
dec
add
add
mov
inc
pop
jae
adc
push
dec
xor
jp
mov
dec
in
mov
les
aas
adc
mov
jle
xchg
and
and
or
mov
jno
add
add
dec
pushf
xchg
nop
and
jo
mov
cmps
and
dec
movs
xchg
pop
and
inc
pop
mov
pop
pop
xchg
ins
add
add
jno
dec
adc
and
dec
inc
xchg
mov
push
mov
adc
lock
xchg
xchg
stc
and
pushf
jp
add
add
pop
adc
xchg
enter
jns
mov
dec
and
dec
lods
xchg
cmp
dec
inc
xor
mov
add
add
ja
scas
dec
mov
inc
std
ins
mov
adc
and
dec
(bad)
mov
adc
or
mov
les
adc
and
dec
repnz
loop
hlt
inc
mov
push
and
dec
loope
jmp
in
inc
out
lahf
add
add
mov
adc
std
adc
xchg
adc
inc
mov
dec
pop
xchg
out
add
add
and
inc
nop
in
and
jb
mov
adc
and
dec
fst
mov
add
add
adc
xchg
and
dec
inc
sbb
and
dec
or
inc
test
add
add
frstor
dec
es
cmc
and
inc
jle
mov
adc
and
pop
loop
test
mov
adc
cmp
add
add
push
mov
adc
and
dec
dec
xchg
and
adc
ror
xchg
or
add
add
add
and
dec
int3
xchg
inc
and
inc
mov
and
sub
inc
add
add
jge
mov
and
inc
iret
mov
adc
xchg
jl
mov
and
data16
fsub
cwde
inc
ficom
not
(bad)
and
pop
bound
mov
dec
add
add
jmp
sbb
and
dec
popa
xchg
or
adc
cmp
mov
adc
and
dec
fist
jae
into
inc
aaa
int
stos
adc
fisttp
xchg
les
xor
inc
ret
mov
dec
add
add
in
rol
dec
hlt
xchg
inc
and
inc
daa
stos
mov
dec
xor
add
add
add
mov
adc
xchg
mov
das
mov
and
dec
(bad)
xchg
xchg
and
push
mov
mov
and
dec
ret
pop
mov
dec
and
sbb
push
adc
add
add
dec
adc
adc
dec
dec
pop
xchg
push
and
inc
mov
mov
pop
clc
xchg
mov
add
inc
push
iret
mov
pop
and
dec
ficom
cmps
cs
pop
test
mul
add
outs
adc
add
add
and
pop
bound
mov
adc
and
dec
cwde
xchg
mov
call
xchg
enter
add
add
inc
test
sub
adc
mov
pop
bound
mov
pop
bound
mov
add
add
dec
ja
adc
xchg
inc
mov
or
dec
mov
push
and
inc
jne
mov
add
rol
add
dec
dec
and
mov
adc
shl
xchg
inc
(bad)
dec
mov
add
add
dec
sahf
xchg
mov
xchg
mov
xchg
and
dec
cld
xchg
lock
xor
cmp
retf
dec
add
add
cmc
xchg
jp
mov
lods
cmp
jle
lea
ret
pop
mov
adc
and
dec
lods
xchg
add
add
sbb
pushf
cmc
adc
and
dec
call
mov
and
dec
lahf
xchg
mov
movs
inc
aas
movs
inc
sbb
add
or
cmps
and
in
int
xchg
adc
xchg
and
inc
add
add
push
mov
pop
and
dec
xchg
fist
mov
adc
and
dec
clc
mov
adc
add
add
dec
rcl
(bad)
test
push
sbb
and
add
add
dec
test
inc
mov
push
adc
and
dec
ins
xchg
mov
adc
push
sub
and
dec
xchg
push
add
pop
push
or
movs
mov
push
adc
dec
xchg
fs
sbb
push
cmp
and
pop
pop
add
add
push
push
cmp
pushf
cmc
lods
jge
pop
push
loopne
mov
add
in
mov
jl
push
movs
xchg
nop
add
add
test
lods
mov
mov
shr
xchg
call
push
mov
add
add
push
push
dec
xchg
cmp
shr
jo
jl
push
les
in
sub
aad
cmc
add
add
inc
cs
pop
movs
xor
push
sub
fsubr
push
clc
in
cs
lods
pop
dec
aam
test
mov
add
push
shl
aam
mov
lods
hlt
dec
xchg
add
in
jge
dec
xchg
xchg
lods
add
add
lock
aam
test
mov
mov
test
test
in
add
add
push
pusha
in
sub
in
jge
dec
aam
lods
mov
xchg
jo
les
cmp
sbb
xchg
jl
cmp
add
add
mov
test
lods
or
xchg
cmp
clc
add
add
int3
cmc
aam
push
mov
xchg
mov
das
push
or
shr
adc
cmc
add
add
cmp
push
mov
aam
jo
push
shl
das
push
or
fsubr
push
enter
push
sbb
cmp
add
inc
add
movs
lods
sub
movs
sbb
cld
cmp
mov
sub
cmc
mov
fs
push
and
add
ins
movs
jl
push
or
sub
push
cwde
mov
sub
cmc
and
push
ins
in
push
fsubr
push
and
add
add
cmc
sbb
push
pushf
mov
das
push
mov
xor
mov
push
sbb
cmc
or
add
add
push
inc
movs
fsubr
push
sbb
and
push
je
push
cmp
in
cs
dec
in
sub
mov
das
push
add
add
pop
movs
mov
push
add
cmc
adc
push
and
mov
push
xor
mov
add
add
push
fsub
in
das
push
pop
in
cmp
cmc
add
push
cld
mov
das
push
sub
add
push
in
in
das
push
pusha
cmc
dec
das
push
xor
sub
push
mov
or
push
js
pusha
cmp
push
and
add
nop
cmc
inc
das
push
movs
mov
cs
aam
cmp
push
shl
cmc
cmp
xor
xor
add
add
mov
bound
dec
xchg
adc
sub
xchg
and
dec
sub
movs
pop
jge
dec
aam
mov
add
xchg
mov
xchg
fdiv
mov
push
fs
test
movs
pop
jns
test
add
add
push
pushf
aad
cmc
adc
loopne
push
mov
add
dec
xchg
mov
jl
movs
pop
push
nop
movs
cmp
push
hlt
mov
add
add
sub
xchg
mov
shl
push
call
dec
aam
mov
cmc
test
add
add
push
cmp
sar
les
je
les
pushf
test
aam
mov
lods
add
add
sub
fsubr
mov
sub
movs
pushf
sub
in
jge
dec
xchg
pusha
mov
add
push
test
jl
push
sub
hlt
sub
cmc
dec
jge
dec
xchg
shl
sub
mov
sub
movs
cmp
add
add
push
jo
mov
push
sbb
movs
loopne
mov
pusha
dec
xchg
int3
lods
mov
add
add
mov
shr
mov
jo
les
push
cmp
sbb
push
jl
cmp
push
enter
push
add
add
jbe
movs
or
push
lock
sub
cmc
push
clc
test
test
int3
dec
aam
mov
mov
mov
lods
adc
mov
mov
or
sar
inc
mov
mov
mov
mov
add
lods
lods
mov
sbb
cld
jmp
lods
add
mov
fs
add
xchg
jl
or
sub
cwde
dec
aam
lods
clc
dec
aam
mov
push
fsubr
add
add
mov
mov
mov
lods
sbb
inc
mov
mov
inc
dec
xchg
fdivr
jmp
jmp
mov
lods
or
mov
add
mov
add
dec
aam
mov
mov
jmp
lods
or
add
add
mov
jmp
mov
in
add
aam
lods
cld
ja
dec
aam
mov
in
dec
xchg
xor
mov
mov
mov
in
sbb
add
add
inc
mov
mov
jmp
jmp
in
xor
aam
mov
add
add
mov
sub
movs
sub
push
and
pop
cmc
or
push
pusha
in
sub
add
add
push
fcom
mov
movs
cmp
and
xchg
pop
in
test
pushf
add
add
pop
push
lods
aad
cmc
loopne
mov
xchg
add
in
push
mov
jl
movs
jns
dec
xchg
cmp
hlt
dec
aam
lods
add
add
cwde
pop
push
mov
dec
xchg
adc
adc
call
push
sub
in
cs
mov
test
cmp
add
add
shl
sub
in
sub
in
cs
pushf
movs
call
inc
in
sub
mov
add
add
cs
fsub
out
dec
aam
lods
mov
xchg
pushf
lods
fmul
cmp
shr
push
pusha
in
jge
add
add
hlt
test
cmc
cwde
cs
rcl
fs
lods
mov
inc
add
test
ins
inc
mov
jge
dec
xchg
loopne
mov
pusha
cs
int3
dec
add
daa
mov
daa
sar
jo
xchg
les
add
mov
cmp
lods
mov
dec
xchg
or
test
mov
add
push
clc
movs
sub
push
mov
int3
das
push
aam
mov
xchg
sub
cmc
or
push
rol
add
stos
mov
cmp
mov
aam
shr
inc
cmc
or
add
add
push
fdiv
enter
in
cs
cmp
dec
sub
mov
cmp
movs
clc
cs
cld
movs
dec
add
add
push
add
push
mov
fs
ins
cmp
movs
or
push
sub
cwde
sub
mov
das
push
adc
inc
add
push
fdiv
cmc
in
das
push
sbb
pushf
sub
into
add
add
cmp
xor
push
mov
cmc
pop
das
push
or
inc
cmp
in
das
push
and
je
push
push
movs
add
add
mov
dec
cs
add
sub
mov
pop
cmp
movs
add
das
push
adc
cmp
add
add
in
das
push
mov
xor
push
dec
mov
cmp
cmc
fdivr
push
nop
movs
or
push
mov
pop
cs
jo
daa
add
mov
das
push
add
cld
ja
cmp
cmc
in
enter
dec
cmc
xor
add
add
push
sub
mov
push
or
js
push
pusha
mov
push
nop
das
push
inc
cmc
movs
cmp
in
cs
add
add
cmp
sar
push
cmp
fsubr
push
xor
xor
push
movs
cmc
or
push
movs
mov
adc
add
add
mov
and
inc
pop
mov
and
dec
nop
xchg
cdq
and
add
add
scas
jge
rcl
cwde
xchg
ret
and
in
adc
and
dec
cmp
and
mov
adc
add
add
xchg
jp
popa
inc
push
inc
and
dec
stos
xchg
mov
(bad)
popf
and
add
add
mov
adc
and
dec
aad
fsub
jbe
jg
mov
pop
pop
xchg
test
add
add
mov
pop
mov
xchg
test
sub
jp
mov
add
add
cli
fs
sub
push
cmp
xchg
sub
inc
xchg
sub
push
inc
scas
test
add
add
pop
pusha
movs
retf
mov
xchg
test
sub
les
add
add
xchg
sub
xchg
sub
pop
nop
xchg
test
sub
push
or
xchg
sub
add
add
mov
clc
push
sub
dec
mov
int3
movs
jmp
pop
xchg
movs
push
pop
or
movs
push
add
add
cmp
retf
aam
retf
shl
dec
fcomp
movs
jmp
sbb
movs
dec
lods
push
mov
movs
retf
dec
movs
push
push
add
cmps
add
add
dec
fs
ins
cmps
dec
jl
or
movs
push
push
clc
movs
jmp
push
sub
add
push
and
push
pop
in
movs
jmp
pop
mov
xor
movs
push
pop
pop
add
add
movs
jmp
pop
sbb
cmps
dec
push
je
movs
retf
dec
movs
retf
and
mov
pop
cmps
dec
mov
add
jmp
pop
je
jmp
adc
add
push
and
dec
nop
je
movs
retf
pop
movs
retf
add
jmp
add
sub
movs
retf
pusha
movs
jmp
pop
mov
cmps
dec
pusha
jbe
add
add
push
nop
movs
jmp
pop
aam
retf
shl
movs
jmp
add
add
movs
pop
or
imul
mov
or
jmp
pop
and
add
add
xor
xor
add
inc
inc
inc
inc
test
cs
mov
retf
push
pop
mov
add
pop
mov
mov
mov
jns
test
aaa
arpl
bound
add
add
jns
cmp
dec
lods
pushw
ss
xor
shr
bound
xor
mov
pushf
cld
mov
xor
call
sahf
fbstp
repz
scas
(bad)
cmp
sbb
add
add
pop
fidivr
fs
popa
jne
and
cmp
sbb
sub
add
add
add
jb
ja
daa
sub
sub
cmp
push
pop
data16
jnp
xor
inc
dec
push
push
pop
les
add
add
loope
addr16
jo
cmp
jecxz
test
cs
out
gs
push
je
ret
jg
add
add
push
das
mov
fdivr
pop
dec
push
sub
add
imul
add
inc
dec
dec
push
add
add
pop
pop
pop
or
imul
sub
das
add
inc
dec
dec
pop
pop
fild
xchg
test
outs
sbb
sub
add
inc
push
push
fs
fdiv
xor
xchg
lods
jb
or
sub
xor
dec
pop
sub
add
add
sbb
sub
dec
cmp
pop
bound
jb
and
sti
pop
add
call
add
lds
inc
or
push
add
pop
fs
outs
leave
adc
in
push
sub
add
dec
pop
popa
add
add
jno
add
jp
cs
push
or
je
cmp
dec
push
add
pop
addr16
rol
add
mov
cmp
xchg
inc
dec
dec
sub
fisubr
js
hlt
cmp
inc
cmps
push
pop
retf
dec
dec
push
pop
mov
add
add
rol
fistp
push
dec
add
push
pop
data16
push
jl
and
sub
xor
pusha
outs
add
add
(bad)
movs
pop
jae
hlt
mov
sub
inc
inc
dec
pop
addr16
jp
jnp
cmp
gs
add
add
jne
xor
cmp
adc
pop
add
jge
cmp
lds
and
xor
enter
add
add
aam
sub
inc
dec
jno
adc
sub
ret
pop
pusha
mov
inc
iret
and
dec
fldenv
loope
jns
jecxz
add
dec
pop
xchg
sbb
jo
jo
imul
jns
das
ss
add
add
and
sub
call
pop
arpl
and
jmp
cmp
inc
enter
add
add
jns
cmp
push
mov
dec
stos
add
aaa
cmp
xchg
or
ins
mov
imul
add
repz
je
mov
ins
xchg
dec
jmp
ret
push
add
nop
add
add
(bad)
fsubr
add
add
jo
and
bound
mov
cmp
aam
push
pop
popa
sub
ja
daa
pop
sub
add
inc
inc
push
pop
inc
int3
inc
popa
jp
mov
dec
dec
push
adc
mov
es
add
add
add
add
and
inc
dec
and
pop
mov
and
sub
add
add
jmp
and
cmp
dec
push
pop
ins
sbb
jne
inc
and
sub
and
dec
mov
aas
cmp
jae
(bad)
jnp
xor
mov
fadd
sub
inc
dec
mov
shl
cmp
add
sub
cmp
stos
mov
add
jbe
js
jbe
add
inc
inc
inc
dec
shr
ins
jbe
and
add
add
stos
mov
pop
mov
push
lods
and
sub
or
inc
(bad)
jp
(bad)
das
mov
add
add
mov
xchg
jae
sub
out
fwait
or
shl
inc
sbb
sbb
je
mov
add
add
xor
xor
jbe
test
jo
mov
sub
aas
aas
cmp
push
push
jbe
add
add
add
das
cmp
pusha
shl
idiv
jno
loope
addr16
push
pop
imul
cwde
add
add
dec
nop
jns
pop
sub
ja
mov
mov
sub
push
aas
jo
or
xchg
ins
and
add
add
out
sub
xor
inc
and
mov
sbb
ret
xchg
add
gs
add
add
adc
pop
pop
or
inc
dec
shl
jo
or
sub
cmp
bound
pusha
xchg
xor
add
popa
xchg
adc
cmp
test
mov
cmc
add
add
xor
and
cmps
rcl
push
mov
xor
dec
or
or
or
ret
add
add
imul
jbe
cmp
push
lock
xchg
mov
xchg
or
cmp
push
loopne
es
xor
stos
dec
leave
dec
mov
sub
xor
nop
bound
xor
xor
adc
out
dec
cmp
add
push
(bad)
loopne
jns
loopne
push
inc
dec
test
xor
inc
inc
mov
inc
pop
jno
dec
and
push
inc
add
add
xchg
or
dec
mov
dec
and
pusha
inc
(bad)
and
push
xor
sub
push
mov
add
add
sbb
add
push
mov
adc
inc
sbb
adc
or
add
add
push
jb
outs
ja
and
cwde
ffreep
dec
ja
in
fs
jle
cwde
sub
dec
jno
bound
add
dec
outs
pop
nop
scas
gs
mov
cli
leave
jmp
cmps
push
mov
sub
inc
dec
xor
pushf
add
add
push
mov
adc
xor
sub
lds
arpl
sahf
sub
cmp
retf
mov
add
add
and
pop
aas
inc
push
pop
imul
lea
cmp
sub
add
add
pop
bound
push
jl
cmp
lods
div
icebp
xor
inc
push
fwait
cmp
dec
bound
xchg
and
add
add
pop
and
and
xor
push
iret
sbb
(bad)
xor
jne
test
adc
add
add
(bad)
bound
cwde
imul
popa
mov
in
std
inc
cmp
add
add
dec
xor
pop
aas
inc
xor
movs
cmp
sahf
pop
xchg
cmc
xchg
inc
push
push
cmp
add
add
sub
inc
push
pop
loop
add
cmp
sub
js
push
je
sub
pusha
push
add
add
jo
sub
mov
pop
inc
dec
es
mov
xor
dec
push
adc
ss
lea
add
add
test
jo
fld
shl
int3
sbb
jne
sbb
pop
dec
cmps
popa
adc
add
add
enter
imul
and
xor
cmp
popa
test
inc
xchg
cs
jo
js
sub
inc
adc
sub
pop
dec
je
(bad)
fdiv
pop
popa
je
add
jge
mov
pop
pop
add
add
mov
mov
stos
push
pop
or
ret
mul
cmp
cmp
pop
mov
add
and
jl
in
inc
out
jle
in
or
loopne
gs
inc
lds
or
or
push
add
add
pop
gs
xor
xor
sub
adc
mov
and
sub
cmp
fadd
jge
add
add
push
sub
pop
ins
je
sbb
and
cmp
mov
nop
inc
sub
aam
arpl
pop
sub
add
add
pop
push
pop
push
lods
or
into
xor
loopne
sub
nop
dec
jecxz
outs
push
add
add
dec
and
mov
es
test
data16
adc
pop
enter
pop
add
add
push
es
cmp
pop
std
cs
sub
inc
dec
push
or
and
sub
add
add
ds
movs
sbb
sub
push
and
push
repnz
xor
sub
pusha
fmul
and
add
jbe
ret
mov
cmp
pop
lock
popa
xchg
das
xor
and
push
inc
add
jae
add
add
ret
loop
inc
aad
cli
test
cli
xor
cmp
mov
mov
add
add
and
hlt
rcr
movs
sbb
and
cmp
sub
and
xor
fdiv
add
add
push
jge
lods
pop
ret
addr16
scas
es
and
and
pop
aaa
cmp
sbb
jmp
js
add
add
mov
outs
test
cli
ds
jmp
mov
add
add
rcr
mov
stos
loopne
repnz
jmp
mov
xchg
mov
repnz
add
add
popa
push
jns
jmp
cmp
jecxz
scas
dec
scas
imul
sub
fistp
add
add
sbb
jns
(bad)
jmp
cwde
pop
jnp
pop
pop
jno
aam
or
or
push
sub
ds
pop
dec
add
add
or
call
stos
xor
sub
cli
pushf
mov
mov
cld
cdq
inc
inc
sub
push
rol
add
and
or
lock
or
aaa
xchg
adc
xchg
adc
ins
jae
into
je
add
add
jb
fild
mov
shl
push
cli
pop
push
jo
pop
push
sbb
ins
and
loope
outs
mov
call
dec
jne
xchg
push
adc
mov
fimul
scas
je
imul
or
jns
adc
and
pop
rcr
push
push
out
pop
les
icebp
movs
loopne
je
cs
cmp
add
add
arpl
jae
and
sub
cmp
inc
push
pop
push
xor
dec
push
pop
pop
jl
aas
ins
add
add
outs
sbb
jp
and
xor
adc
pop
gs
outs
cmp
inc
jno
adc
jno
mov
rcr
ins
je
jnp
and
outs
push
das
jbe
mov
cmp
loope
mov
add
repz
inc
popa
outs
ja
xor
pop
dec
rcl
in
push
pop
pop
sbb
fsub
xor
add
add
daa
inc
push
(bad)
in
and
jp
sub
cmp
popf
dec
pop
dec
clc
add
xor
mov
add
jno
dec
sub
mov
jge
sub
push
cmp
push
and
outs
fldcw
sub
add
add
mov
and
mov
inc
daa
push
pop
jecxz
jns
dec
xor
push
sbb
outs
jne
add
add
ss
push
pop
pop
jns
xchg
sub
xchg
cwde
pop
fist
ret
pop
jge
xor
add
add
in
cdq
ds
and
add
push
pop
cmp
jge
add
data16
mov
adc
pop
ds
jb
jbe
cmp
enter
iret
xor
dec
push
push
push
cwde
push
add
mov
cmp
ins
ja
push
and
sbb
daa
jbe
les
ins
fs
fidiv
dec
add
add
adc
loopne
jp
mov
movs
xchg
stos
hlt
jo
add
add
dec
mov
cmp
loopne
add
add
and
and
in
adc
xor
xor
cs
add
add
inc
jno
adc
retf
inc
dec
push
pop
outs
cmp
das
cmp
push
lds
or
sti
or
add
jmp
xor
cmp
test
test
jp
call
ss
add
add
imul
js
xchg
aaa
lods
xor
add
imul
or
popa
imul
daa
add
add
pop
xor
push
pop
xor
and
js
add
inc
inc
dec
pop
lahf
test
mov
add
add
movs
outs
pop
sti
pop
and
icebp
push
aas
and
rcr
push
jns
and
daa
and
add
add
popf
push
shr
cmp
push
xor
fs
mov
sub
push
mov
test
inc
inc
dec
push
pop
add
add
xchg
shl
xor
pop
mul
xchg
mov
and
xor
inc
jo
add
xor
add
add
(bad)
or
xor
hlt
cmp
jle
pop
in
push
jae
xchg
es
and
pop
xor
lds
push
jl
or
data16
mov
call
adc
ret
rol
add
cmp
pop
arpl
lea
sar
cs
cmp
mov
retf
sti
jno
add
add
rcl
push
sbb
lods
in
mov
fstp
lds
sub
mov
ins
sub
in
sub
add
adc
out
adc
call
js
mov
aas
das
dec
push
bound
sub
add
add
pusha
cmp
add
cmp
sub
and
cmp
cmp
inc
xchg
mov
je
add
add
div
ss
sbb
das
icebp
xchg
and
sub
and
sub
pop
add
add
pop
nop
icebp
imul
add
dec
int3
scas
das
jnp
sti
aaa
aas
mov
mov
rcl
xor
inc
and
les
ret
inc
mov
and
dec
cs
push
(bad)
lahf
ja
lock
repnz
shl
je
add
add
fs
push
in
scas
push
mov
inc
adc
push
push
mov
jbe
pop
adc
add
add
xor
fidivr
inc
icebp
push
jno
popa
in
and
mov
outs
das
pop
loopne
jbe
lds
dec
adc
adc
fisubr
and
and
(bad)
es
mov
sub
push
cmp
push
push
add
add
lock
rcr
lods
xor
pop
bound
sub
adc
push
fwait
mov
add
or
test
js
adc
sbb
jae
dec
mov
mov
jns
push
mov
scas
jge
adc
add
add
inc
jno
les
add
xor
mov
cli
and
frstor
sub
mov
pop
nop
push
sub
add
loop
push
sbb
push
jno
mov
dec
div
fs
xor
daa
pop
sub
inc
ins
out
jo
add
add
add
and
xor
inc
pop
inc
(bad)
xchg
retf
js
xchg
ror
imul
test
loopne
sbb
add
add
mov
movs
and
xor
xor
pop
xor
mov
div
xor
mov
add
cs
imul
pop
imul
push
dec
dec
pusha
dec
jmp
lods
inc
add
add
sbb
inc
sbb
lods
ins
inc
sub
and
shl
dec
and
and
dec
push
scas
enter
add
add
mov
sbb
nop
inc
or
aas
(bad)
mov
jo
test
and
add
add
pop
xchg
(bad)
mov
cmps
dec
pusha
mov
xor
sbb
mov
test
loopne
add
add
sbb
ret
outs
call
inc
nop
(bad)
jmp
push
cld
sbb
push
sub
add
add
ja
mov
or
mov
or
enter
nop
push
cmp
rcl
or
add
add
inc
pusha
xor
stc
adc
mov
and
mov
inc
arpl
fs
push
lods
gs
lea
and
xchg
or
sbb
addr16
and
mov
outs
test
in
sub
xchg
or
xor
sub
jb
arpl
and
sbb
sub
aaa
in
add
nop
jle
lock
jne
sbb
js
xor
xor
fcom
xchg
cwde
stos
add
add
push
rcl
mov
or
mov
cdq
cdq
adc
add
arpl
icebp
loopne
add
add
cmp
add
mov
mov
bound
xchg
mov
pop
xor
test
loope
add
add
inc
loopne
call
and
inc
jg
push
pop
mov
xchg
test
pop
sub
movs
add
add
jge
shl
ja
mov
inc
jo
push
pushf
shl
push
jo
adc
aad
pusha
rol
push
rol
add
add
inc
pop
mov
or
xor
inc
loopne
push
mov
or
adc
loopne
add
add
jo
mov
and
or
adc
inc
mov
mov
pusha
cdq
or
inc
mov
add
add
clc
adc
cld
mov
ja
ins
rcl
push
rcl
add
inc
ret
lock
xor
lock
add
and
add
add
and
aaa
(bad)
loopne
jo
and
cmp
xchg
inc
cmp
add
add
or
mov
sbb
xor
or
scas
mov
inc
add
add
inc
push
fdiv
and
aam
mov
mov
inc
fimul
sub
in
mov
add
add
shr
loopne
adc
dec
cwde
sbb
or
xor
or
fwait
add
add
rdtsc
adc
adc
mov
lock
and
inc
loopne
inc
adc
test
dec
add
add
or
sbb
in
and
loope
or
jb
and
xor
push
push
add
add
sbb
xor
pusha
pusha
imul
inc
shr
in
jp
cmp
inc
push
in
add
add
shl
push
int3
daa
xor
push
int
pop
add
and
sub
lock
pop
outs
jne
es
ret
add
add
push
cmp
or
and
inc
dec
jb
push
cmp
push
pop
shr
and
add
add
sahf
pop
arpl
ja
and
xor
cmp
push
ds
imul
dec
push
pusha
mov
add
xor
sbb
daa
adc
and
add
jae
sub
cmp
rcl
add
add
imul
pop
cmp
push
and
adc
pusha
pop
mov
data16
pop
pop
add
add
bound
je
jl
pop
inc
inc
push
pop
push
jae
pop
adc
bound
jne
sub
fild
add
add
std
cld
cmp
cmp
mov
and
shr
jno
scas
jo
mov
add
pop
jecxz
imul
sub
xor
arpl
sub
xchg
inc
pop
dec
add
and
add
add
and
mov
cmp
daa
inc
push
cli
clc
(bad)
je
and
inc
mov
daa
xor
cmp
add
add
clc
jns
dec
imul
ds
dec
lea
inc
dec
jmp
push
ins
(bad)
sub
retf
iret
add
add
add
push
das
ss
lods
dec
adc
fwait
mov
mov
add
add
add
and
push
inc
push
dec
pusha
popa
jb
jg
sub
or
push
mov
imul
push
lods
add
add
mov
push
pusha
inc
(bad)
and
dec
cmp
(bad)
gs
loop
add
aaa
inc
dec
mov
jnp
add
add
daa
cs
cmps
xor
jbe
sub
adc
inc
push
movs
push
bound
jl
xor
add
add
pop
pop
mov
and
cmp
imul
inc
and
xor
add
push
fisttp
push
jp
loope
cmp
push
mov
outs
ins
xchg
es
retf
sbb
dec
push
pop
add
add
pusha
movs
cmp
sbb
das
xor
mov
ret
xor
bound
es
cmp
sub
add
add
popf
dec
or
daa
nop
nop
mov
push
ds
mov
retf
add
xchg
clc
sub
add
add
es
addr16
and
jl
fdiv
ja
mov
mov
mov
add
inc
mov
dec
xor
ins
xor
lock
and
push
jmp
or
jg
add
add
xor
push
push
pop
gs
push
lds
mov
nop
lock
xchg
xor
test
xchg
int
popa
int3
sub
add
add
(bad)
sbb
and
mov
cld
inc
repz
sbb
mov
out
jns
mov
sub
add
add
jle
ret
add
ret
mov
sar
or
leave
mov
add
add
pop
push
adc
jnp
das
cmp
and
nop
inc
pop
inc
dec
push
shl
(bad)
bound
inc
add
add
pop
ja
sub
dec
dec
mov
sahf
cld
add
xor
cmp
and
adc
test
dec
ficomp
addr16
jmp
test
adc
cld
xchg
dec
jge
pop
xchg
es
sub
popf
inc
xchg
push
test
pop
pop
leave
mov
loope
inc
dec
dec
inc
f2xm1
mov
add
jbe
cmp
bound
inc
(bad)
dec
push
rol
and
cmp
adc
and
add
cmp
std
add
push
or
mov
inc
or
push
push
mov
add
add
popa
adc
(bad)
push
outs
xchg
push
push
popf
jmp
movs
sub
mov
cwde
pop
sub
add
add
lahf
xchg
dec
hlt
mov
jns
or
das
cmp
mov
xchg
cwde
jae
push
fs
les
add
add
je
fnstenv
xor
imul
test
mov
sub
dec
fwait
aaa
mov
add
retf
pop
sub
cmp
sub
sub
or
fmul
sub
sub
add
add
mov
fadd
push
and
push
ret
cld
ins
jno
das
mov
dec
push
cmp
add
add
mov
ret
bound
inc
aad
jmp
adc
or
dec
dec
dec
fisub
movs
cwde
fistp
add
xor
push
rcr
or
jl
in
test
xchg
add
cmp
push
cs
js
dec
xor
and
in
inc
push
push
pop
nop
sahf
daa
sub
cmp
inc
xor
repnz
dec
dec
sbb
and
add
add
dec
sub
inc
lods
inc
mov
loopne
jl
xchg
loope
dec
xchg
shl
and
in
dec
xor
add
jne
inc
popa
dec
popa
adc
in
xor
jne
test
sbb
cwde
mov
add
add
aas
dec
inc
jno
gs
popa
xor
push
add
daa
sub
cmp
test
sbb
ins
icebp
es
add
add
and
dec
jo
cli
sub
mov
adc
gs
outs
div
aam
aaa
pop
jne
or
das
add
add
ds
mov
leave
clc
xor
inc
mov
in
js
lods
movs
or
data16
ja
and
xchg
pop
add
pop
(bad)
cdq
add
mov
or
pop
add
jo
jmp
(bad)
mov
push
icebp
sub
retf
imul
stc
cmp
mov
sub
aas
test
adc
mov
add
adc
mov
jge
and
push
pop
push
mov
rol
add
lods
inc
add
add
xor
jl
push
aaa
xor
xor
popa
push
dec
movs
and
outs
xchg
xor
inc
push
dec
push
xchg
add
add
push
sub
dec
aaa
sub
or
daa
ss
ror
pop
dec
dec
dec
pop
repz
add
xchg
aam
lds
or
pop
push
xor
das
cmp
cs
(bad)
cmp
outs
add
add
test
ret
bound
adc
ret
cmp
dec
push
lods
mov
scas
pusha
mov
pop
ss
dec
sub
add
add
push
call
push
dec
push
into
imul
call
daa
push
inc
xor
add
leave
or
inc
push
adc
ret
and
pusha
and
jo
aas
cs
dec
add
add
push
and
add
dec
test
test
dec
xor
ins
adc
out
adc
add
add
cmps
sbb
hlt
inc
cwde
(bad)
in
jo
leave
push
outs
or
mov
dec
ins
hlt
xor
sub
or
ds
add
add
dec
pop
mov
sub
adc
dec
cmp
mov
les
les
cmp
and
add
add
adc
addr16
jae
sbb
das
pop
cld
inc
(bad)
data16
imul
fisub
add
add
jno
lods
and
ret
adc
jl
jae
mov
dec
and
mov
popa
fbstp
and
add
add
mov
jae
das
shr
bound
movs
(bad)
iret
shr
les
xor
and
add
stos
movs
or
jo
adc
pop
push
test
jb
dec
and
dec
mov
cmp
dec
es
dec
add
add
ins
popf
popaw
movs
les
dec
mul
xchg
mov
xchg
dec
adc
(bad)
push
jl
nop
xchg
add
add
test
or
sar
movaps
cmp
pop
(bad)
jno
add
add
div
imul
xchg
bound
aas
jnp
jo
jo
mov
(bad)
(bad)
test
jle
fiadd
add
add
adc
(bad)
and
popa
sbb
dec
push
les
bound
pop
xor
mov
add
add
mov
cmp
pushf
sub
pop
xor
push
icebp
jo
and
aas
adc
shr
pusha
enter
add
pusha
jno
mov
jnp
mov
and
mov
shr
retf
nop
sub
add
mov
or
xchg
pop
and
pushf
sub
inc
test
sub
rol
jge
add
add
add
adc
das
or
pop
pop
nop
(bad)
daa
ja
adc
fs
lods
sbb
and
retf
les
aaa
jp
mov
cmp
call
cld
pop
jge
scas
ins
cmp
jns
mov
add
add
ins
dec
sbb
sub
arpl
(bad)
ror
dec
pop
pop
jp
push
add
add
pop
dec
adc
cs
pusha
jl
jp
inc
xor
bound
popa
outs
xchg
scas
rcl
push
add
add
jo
mov
xor
les
test
call
int
ss
pop
imul
add
add
rol
and
or
les
cli
push
cdq
xchg
cmp
or
add
add
pop
jl
sbb
xor
call
gs
and
pusha
jno
cmp
stc
pop
popa
pop
add
add
xor
xlat
or
push
(bad)
adc
in
rcr
push
pusha
imul
movs
dec
dec
inc
add
add
pushf
inc
test
dec
pop
lock
pop
mov
test
dec
test
or
inc
arpl
arpl
add
add
pop
pop
fistp
adc
mov
outs
jno
mov
cmp
retf
add
add
lods
js
push
mov
xor
cmp
js
push
pop
lods
sahf
and
or
sbb
add
add
mov
dec
xor
pop
mul
mov
mov
shr
pmaxsw
add
cmp
cmp
jno
loop
nop
dec
mov
dec
cmp
outs
aas
add
add
add
push
test
sub
xchg
fs
jnp
xchg
xor
jns
mov
add
push
push
loopne
jne
add
add
or
xor
mov
xor
clc
rcl
cmp
xor
test
mov
push
jbe
add
add
addps
jno
and
and
pop
call
add
outs
clc
mov
sub
add
add
pop
imul
ds
sbb
outs
jl
mov
lods
ror
mov
sub
jge
add
add
sbb
popa
ins
inc
icebp
jle
ds
cwde
cli
repnz
(bad)
rol
not
add
add
shl
ret
inc
and
dec
adc
int
out
jmp
mov
cmps
ror
sub
push
xchg
or
and
cdq
mov
test
jo
dec
aas
or
add
add
dec
mov
bound
dec
lock
fs
mov
daa
bound
or
test
mov
add
add
inc
dec
dec
hlt
cmps
ins
mov
in
es
mov
mov
js
and
pusha
push
push
fs
add
add
dec
and
sub
ins
cli
sub
les
js
sub
sub
ror
add
add
div
dec
xor
stos
pop
jp
sbb
mov
mov
mov
jge
cs
and
add
add
ret
dec
pop
cs
out
xchg
jno
pop
pop
movs
movs
and
inc
dec
ins
xor
xor
add
xor
dec
pop
push
and
adc
imul
ins
and
jns
push
jo
add
add
loope
inc
inc
cmp
stos
not
js
or
or
(bad)
adc
stc
pop
push
push
push
add
add
push
cs
loope
cmp
inc
fisub
popf
inc
int3
and
adc
pop
ins
outs
jae
movs
pop
inc
outs
add
add
je
mov
pusha
cmp
fld
jo
fcomp
pop
jmp
outs
and
push
xor
add
add
cwde
or
mov
inc
sbb
push
push
mov
jno
sbb
xor
pusha
cmp
add
jnp
daa
cmc
mov
sbb
xchg
push
sbb
push
sub
sbb
les
cmp
add
(bad)
cmp
loopne
mov
cld
leave
adc
out
pop
inc
mov
bnd
and
imul
add
inc
add
pop
bound
push
mov
mov
mov
sahf
sub
jns
mov
xchg
(bad)
mov
pop
xchg
aad
leave
cs
push
mov
pop
or
xchg
sub
lods
dec
dec
push
add
add
push
pop
xor
mov
(bad)
enter
adc
fild
loop
sub
add
add
mov
xchg
sub
and
dec
fucomip
scas
or
add
inc
test
test
add
add
adc
xor
inc
adc
dec
dec
test
ficom
xor
inc
adc
inc
add
add
xor
ret
data16
mov
inc
and
outs
mov
inc
enter
cmps
xor
add
stos
and
push
dec
pop
jle
outs
sbb
pop
movs
adc
push
lods
cmp
and
adc
popa
shr
pop
cmc
and
pushf
daa
add
jo
es
jecxz
sub
xchg
add
and
push
inc
inc
dec
dec
loop
jo
cli
xor
add
add
outs
or
and
fistp
xchg
lea
and
sbb
pop
inc
inc
dec
(bad)
lds
add
add
push
pop
fisttp
mov
lock
pop
jbe
add
jo
imul
push
or
add
add
add
loopne
scas
mov
imul
aaa
inc
push
xchg
add
xchg
adc
or
push
push
test
add
add
xor
pop
push
or
daa
mov
daa
gs
pop
sbb
add
add
and
mov
xchg
or
pop
lds
(bad)
dec
cs
les
add
and
xor
loope
and
xor
jle
test
fsub
and
dec
rcr
xor
bound
add
add
sbb
dec
push
sbb
arpl
xchg
jno
jno
inc
stc
addr16
(bad)
(bad)
jns
add
add
mov
ret
push
add
jle
call
jbe
pop
aam
dec
dec
cmps
pop
sub
add
add
imul
in
xor
inc
dec
(bad)
popa
jecxz
out
dec
movs
push
call
and
cli
or
ja
pop
or
add
add
test
sub
lds
or
cs
bound
push
sbb
ins
pop
and
inc
push
gs
add
(bad)
push
dec
mov
push
dec
bound
dec
pop
inc
aaa
push
inc
fs
aaa
add
mov
add
xor
and
test
pop
fld
xchg
jge
cs
dec
mov
jb
cmp
sahf
cwde
or
add
push
lds
mov
xor
dec
push
mov
jmp
test
pop
stos
and
add
add
loop
sub
and
das
push
cli
xor
test
adc
pop
push
int3
add
add
popa
lods
gs
outs
add
jl
inc
popf
(bad)
repnz
js
pop
test
je
pop
pop
sub
add
outs
inc
add
xor
lea
sub
inc
inc
pop
jge
in
sub
das
sbb
inc
dec
mov
add
add
test
cmp
enter
cmp
lea
push
and
push
jb
adc
add
add
lahf
inc
in
inc
jns
ret
mov
push
das
ins
jb
dec
sub
pop
rcl
cld
in
loope
add
add
nop
dec
mov
sub
or
clc
js
stos
rcl
pop
mov
pop
cmp
add
add
jmp
into
pop
popa
bound
lock
idiv
test
aas
push
pop
imul
out
dec
mov
add
add
cmps
popa
test
mov
add
push
minps
cmps
dec
push
cvtps2pi
add
add
dec
pop
or
dec
inc
add
adc
lock
xchg
loopne
jne
mov
and
inc
jecxz
add
add
pusha
shr
dec
pusha
cmp
arpl
pop
lahf
and
sbb
push
je
xor
ss
adc
add
add
movs
js
and
cmp
lahf
or
cmp
jno
inc
adc
add
add
add
jp
std
and
cmp
(bad)
jle
in
inc
test
sub
push
jecxz
and
pop
inc
pop
jl
add
add
and
js
dec
pop
pop
rol
pop
mov
nop
xchg
add
add
fcomp
vpmacssww
dec
ja
cmp
imul
sbb
inc
push
dec
mov
push
jbe
jns
dec
inc
gs
push
push
push
push
jnp
sub
mov
or
add
add
push
push
and
mov
cmp
sbb
jl
or
push
popa
js
je
inc
xchg
add
arpl
test
imul
pop
xchg
pop
loope
js
jge
fs
xor
pop
lods
stos
add
add
jno
push
mov
int
adc
fidiv
push
ret
clc
add
ficom
inc
scas
sbb
add
add
dec
lods
les
xlat
es
adc
mov
dec
jo
xchg
push
sub
pop
cmp
add
add
movs
adc
add
js
mov
lds
push
add
adc
pusha
pop
dec
and
jo
dec
retf
aad
add
add
test
pop
addr16
cmp
imul
push
lock
jne
add
add
dec
add
outs
lock
fsub
push
ss
inc
and
push
imul
dec
cmp
add
add
fmul
pushf
cmp
fisttp
pusha
fiadd
adc
sub
inc
push
sub
and
add
add
sub
jo
mov
out
or
fdivr
or
inc
cld
or
and
dec
add
add
popf
jo
jno
xchg
push
dec
les
or
inc
mov
lock
lea
inc
in
cmp
sbb
add
add
push
sbb
inc
sbb
adc
je
adc
or
lea
push
mov
sbb
int3
add
add
add
fsub
sbb
js
das
rol
inc
bnd
iret
mov
push
sbb
loopne
mov
fadd
add
add
int3
pop
push
add
or
fadd
push
pop
dec
jne
shr
ins
xor
cmp
repnz
shl
jg
add
add
inc
sub
fdiv
loopne
nop
adc
stos
cwde
pop
and
fadd
adc
cmovge
or
add
add
adc
xlat
add
ins
lds
out
pop
jo
daa
pushw
pop
push
add
inc
dec
pop
jo
outs
mov
ds
inc
rcr
(bad)
hlt
lods
data16
push
imul
jmp
lock
mov
rol
cmps
pop
fs
push
and
dec
jo
sub
add
fwait
xor
and
leave
fisub
daa
pop
xor
cdq
(bad)
sbb
lahf
push
jo
mov
mov
jb
push
cmp
test
xor
mov
dec
mov
hlt
(bad)
cmp
sti
xor
cmp
das
jns
add
add
mov
test
std
adc
(bad)
xor
jbe
lds
mov
mov
and
add
add
inc
inc
repz
fnstsw
aas
pushf
xchg
sub
(bad)
retfw
jl
fnsave
pop
pop
pop
mov
add
add
ds
test
js
cmp
inc
ja
jo
inc
inc
arpl
jp
mov
add
jo
inc
outs
std
jle
sbb
dec
in
neg
mov
das
jae
je
push
mov
inc
add
add
jb
inc
out
push
cmp
(bad)
sti
cmp
js
jne
push
jmp
daa
jns
xchg
or
add
add
sub
inc
mov
daa
push
mov
movs
and
push
or
pop
adc
cmp
add
add
push
mov
cmp
inc
xchg
test
push
call
xor
add
daa
sub
xor
add
imul
inc
dec
pop
push
xor
xor
bound
add
add
test
dec
or
push
and
outs
jae
dec
cs
pop
or
add
mov
add
add
ins
or
jp
xor
dec
popf
inc
xor
jle
mov
nop
xchg
add
(bad)
mov
add
add
ins
pop
pusha
inc
xor
inc
push
shl
jne
int
pop
shl
loopne
cmp
inc
push
add
add
push
mov
fwait
clc
jge
jno
sub
cmp
xor
test
cmps
add
jne
sub
cmp
add
add
inc
dec
add
push
pop
mov
inc
inc
ds
rol
ins
cmps
mov
imul
add
add
pop
inc
loop
mov
jno
and
pop
call
push
mov
imul
cmp
dec
add
add
repnz
js
sub
pop
stos
push
bound
sub
sahf
or
fnsetpm(287
dec
lds
test
push
add
add
xor
mov
jg
mov
pop
cmp
(bad)
test
mov
add
je
shr
add
sahf
and
jno
mov
mov
sub
mov
fnstenv
xchg
add
add
push
(bad)
sub
xchg
ja
clc
rcl
cmp
sti
push
jge
imul
daa
sub
pop
xor
pop
xlat
add
add
add
cli
cs
dec
jge
mov
and
xchg
aad
test
adc
mov
shr
adc
loopne
cs
add
add
aaa
cmp
jb
and
xor
xchg
sub
xor
pop
ja
jl
lods
inc
sbb
add
pop
dec
data16
jns
fwait
xor
js
add
addr16
jns
jl
cmp
imul
add
add
mov
mov
arpl
push
mov
mov
jge
and
add
add
add
outs
jno
loopne
adc
test
sub
pop
xor
inc
loopne
arpl
mov
mov
add
hlt
and
pop
cmp
call
xchg
sub
hlt
xchg
xchg
es
inc
add
jle
add
add
or
dec
das
in
add
mov
ret
inc
inc
push
push
add
add
jns
xor
jbe
dec
push
mov
xchg
mov
test
and
inc
push
clc
fs
aad
imul
mov
clc
dec
jge
popf
inc
xor
adc
mov
jge
sbb
add
add
push
aaa
icebp
test
and
shl
inc
inc
dec
push
xchg
cmp
adc
push
imul
add
add
outs
call
jp
loope
aas
xor
bound
fwait
inc
dec
es
pusha
add
add
stos
sub
and
es
lahf
mov
xor
cmp
jl
mov
mov
add
add
lods
jns
pop
cmp
push
das
mov
mov
xor
test
push
xchg
xchg
ins
add
add
es
pop
outs
adc
addr16
mov
jmp
call
pop
inc
pusha
inc
arpl
xor
cld
ins
call
dec
jmp
pop
and
adc
and
lock
daa
xor
push
dec
lods
add
add
dec
push
imul
push
jbe
cli
mov
mov
or
sbb
pusha
ret
add
add
sar
jo
push
mov
or
repnz
lods
pop
and
mov
add
add
lds
push
shl
xor
sbb
test
mov
jne
add
xchg
sbb
je
mov
add
add
sub
push
fld
adc
mov
and
mov
mov
add
add
add
xor
cld
dec
or
cmp
loop
mov
cmp
inc
xor
in
mov
aas
or
add
add
aam
loop
test
jo
dec
pop
mov
data16
adc
rcr
adc
jne
pop
add
add
or
scas
pop
pusha
fs
push
je
mov
and
and
sbb
jl
xchg
push
and
pop
jo
daa
adc
in
add
mov
mov
xor
inc
add
add
pop
fbld
ins
mov
dec
xchg
inc
add
and
mov
xchg
adc
cmps
dec
rcl
arpl
add
add
mov
pushf
ss
lods
mov
xor
mov
dec
faddp
pushf
lods
sub
addr16
add
add
and
daa
ret
shl
cs
ss
dec
fs
cmp
shl
inc
add
add
pop
cs
push
push
sub
js
fisttp
in
xchg
mov
test
aas
adc
adc
add
add
ins
das
xor
adc
outs
outs
ret
pop
(bad)
stc
inc
pop
dec
xchg
jge
add
popa
fs
dec
add
add
mov
call
xchg
jno
sti
call
mov
add
lds
add
dec
popf
dec
or
jno
pop
es
push
or
aas
in
xor
jb
sub
xor
add
fisub
in
fisttp
dec
push
jne
or
jne
jbe
push
cwde
xchg
aam
xchg
fs
xchg
les
add
hlt
sub
dec
(bad)
retf
adc
inc
sbb
xlat
push
out
mov
mov
add
pop
push
jp
(bad)
adc
push
loope
bound
aas
(bad)
xor
ror
dec
fs
xor
jl
add
add
cmps
inc
les
xchg
sub
sbb
pop
pop
sbb
cmp
inc
mov
lea
jl
dec
push
dec
sahf
outs
adc
mov
(bad)
ins
sbb
and
mov
inc
push
and
and
daa
loopne
xor
mov
cmp
sbb
cmp
not
add
add
jae
mov
or
das
arpl
cli
cld
bound
inc
xchg
inc
mov
(bad)
mul
imul
add
add
out
or
rcl
jae
and
jp
bound
dec
push
cmp
popf
or
xor
add
add
pop
dec
fdivp
test
sbb
mov
push
test
or
stos
hlt
test
add
adc
lea
adc
add
push
pop
mov
and
push
pop
pop
cmp
add
dec
push
push
imul
pop
ret
adc
imul
fsub
add
jno
ror
dec
fstp
gs
lods
xor
scas
imul
push
in
mov
add
mov
out
aam
out
xchg
cmp
call
test
test
push
xchg
sub
rol
add
add
pusha
xor
retf
pop
cmp
mov
and
cli
dec
sbb
mov
add
add
rcr
jmp
shr
lds
pushaw
mov
mov
les
mov
add
jl
and
cmp
or
imul
and
adc
jg
mov
pop
xor
add
add
sub
mov
ja
nop
stc
dec
inc
adc
sub
push
(bad)
sub
inc
add
add
loop
sub
cmp
mov
pop
dec
and
and
test
dec
test
retf
sub
add
add
ds
scas
add
je
and
cmp
retf
cwde
xchg
dec
daa
(bad)
dec
cld
fisub
add
add
mov
xchg
or
ins
and
cmp
test
in
push
bswap
jbe
mul
adc
lods
add
add
add
inc
dec
call
inc
inc
in
adc
std
ins
push
lock
lods
ins
sub
add
add
js
bound
bound
inc
lds
cmps
pop
or
inc
add
add
add
mov
jbe
mov
dec
push
sbb
outs
lock
test
sbb
nop
inc
ins
sub
outs
jp
(bad)
xor
xchg
leave
(bad)
imul
xchg
pop
xor
mov
shl
or
scas
jo
adc
add
add
js
xchg
pushf
pop
inc
leave
sahf
ins
mov
loopne
cmp
xchg
inc
mov
jnp
inc
add
add
xchg
mov
xchg
cli
stos
push
push
(bad)
or
cs
push
or
scas
mov
test
add
push
sub
int3
push
or
fadd
add
inc
ret
inc
add
add
adc
mov
xchg
imul
shl
xor
movs
pop
xchg
fs
inc
push
ds
imul
mov
push
or
xor
pop
lock
into
cli
sub
jge
outs
pop
loop
test
sti
add
add
sub
dec
cs
retf
das
jl
aad
inc
aas
das
shl
pop
push
xor
dec
and
add
popf
bound
adc
dec
lea
lods
push
inc
or
adc
add
add
add
add
jo
push
shr
movs
repnz
mov
popf
inc
inc
push
pop
retf
sbb
(bad)
std
in
loopne
or
add
add
cmps
mov
sub
and
test
cmp
add
add
or
add
outs
js
adc
aaa
pusha
or
mov
pusha
sub
lock
jp
push
add
nop
mov
test
jo
ror
or
jno
shl
ret
jo
add
add
sub
push
lock
iret
xor
inc
repnz
test
cld
jecxz
jo
lds
sub
inc
or
add
add
push
add
jno
sub
aas
dec
inc
loopne
jb
jne
movs
sub
mov
je
push
add
cwde
les
jmp
and
push
adc
add
mov
xor
xor
sub
add
add
sub
adc
mov
sub
icebp
jmp
outs
cwde
jle
dec
nop
add
add
mov
pop
pusha
gs
sub
xor
pop
data16
aaa
inc
inc
stos
or
addr16
pop
les
aas
add
add
inc
inc
xlat
dec
jecxz
push
mov
retf
push
xor
lahf
(bad)
(bad)
adc
mov
push
add
add
stos
inc
lds
jmp
pusha
pop
fisttp
sub
inc
jmp
ret
xchg
or
cld
pop
scas
ficom
add
add
js
push
inc
rol
inc
inc
push
dec
push
pop
(bad)
jl
(bad)
pop
stos
or
inc
push
jns
add
add
repz
xor
cmp
dec
push
jle
xchg
in
popa
dec
icebp
pop
ds
xor
and
movs
cmp
mov
add
pop
js
jno
push
es
aas
test
loopne
aam
push
ins
leave
das
je
cmc
daa
ds
add
ins
jl
add
add
inc
mov
popa
into
jno
mov
pusha
pop
push
orps
push
js
xor
inc
in
add
add
add
imul
cmp
out
xor
cmp
push
pop
movs
loopne
adc
add
into
loop
sub
movs
inc
dec
push
add
dec
xor
jo
pop
or
daa
sub
jnp
xor
add
ret
clc
sar
xor
int3
push
cs
or
push
bound
push
jbe
jo
add
add
xor
dec
mov
cmp
mov
bound
inc
mov
add
add
lods
outs
mov
leave
cmp
les
sti
les
mov
ins
jge
movs
mov
popa
fadd
inc
dec
imul
push
jl
or
inc
jle
xchg
popa
jmp
mov
and
adc
inc
aam
cmp
add
xchg
dec
daa
jl
sub
fild
(bad)
jle
popa
adc
enter
das
cs
loopne
inc
inc
add
add
jecxz
mov
mov
fidiv
mov
jns
clc
sbb
xor
ds
add
push
and
les
jno
test
jg
ficom
mov
gs
aas
stos
add
pop
pusha
jmp
mov
add
add
mov
fdiv
jns
pop
out
inc
adc
or
jnp
sub
xor
int3
inc
arpl
add
add
pop
call
inc
inc
es
or
dec
pop
xchg
pop
adc
mov
test
add
add
daa
dec
xor
frstor
and
outs
ja
xchg
sub
cmp
jo
adc
add
clc
jo
cmp
add
int3
xor
sub
add
inc
push
dec
push
shr
push
movhps
add
add
repnz
sbb
aaa
pusha
adc
cmp
ror
and
add
add
adc
(bad)
xchg
or
adc
xor
or
and
jp
inc
and
add
add
add
xor
inc
daa
adc
stc
cmp
gs
xchg
mov
pop
sub
sub
add
add
sar
sub
movs
les
and
gs
ret
add
add
push
nop
pop
cwde
xchg
add
pushw
daa
ds
dec
popf
push
pop
or
lahf
inc
add
add
push
push
push
xor
xor
and
pop
je
sub
mov
add
add
cmc
das
dec
mov
arpl
jno
addr16
add
mov
call
jb
add
add
xor
stc
cli
or
cmc
mov
pop
sbb
pop
xor
jae
and
dec
add
add
pushf
pop
push
pop
mov
jge
ret
fwait
or
aas
(bad)
(bad)
jb
push
or
dec
dec
jbe
add
add
cmps
(bad)
sbb
jge
test
aas
ret
inc
xor
mov
or
ins
fidivr
mov
xor
push
add
add
je
and
xor
mov
xor
(bad)
lock
jp
inc
add
add
daa
cmp
jmp
cmp
cmps
xor
je
sub
mov
add
add
xchg
adc
cmp
inc
cld
pop
data16
add
es
clc
and
sub
fld
add
add
loop
inc
das
cmp
pop
mov
les
sbb
les
es
adc
add
add
daa
stos
sbb
je
ds
add
jge
addr16
daa
xor
ins
jbe
add
add
das
ss
sbb
xor
(bad)
imul
pop
gs
inc
sbb
jge
sub
adc
add
add
push
mov
and
xchg
cmp
les
or
jmp
sub
mov
add
add
sub
mov
xchg
ret
and
je
js
das
aas
inc
sar
pop
addr16
sub
in
add
add
out
sub
and
xor
mov
fs
into
cmp
in
add
add
add
sub
inc
mov
jo
xchg
xor
inc
scas
inc
xchg
xchg
push
mov
push
dec
add
add
mov
sub
mov
mov
and
mov
push
add
add
push
mov
mov
add
jge
ss
retf
jle
mov
add
add
or
popa
sar
dec
xor
sub
sub
in
cmp
pop
imul
mov
add
icebp
sub
or
xchg
js
movs
pop
inc
arpl
xor
out
loope
sub
(bad)
rol
add
add
mov
mov
lock
jmp
xchg
cmp
add
add
mov
inc
dec
mov
pop
pop
adc
mov
out
push
and
std
add
add
push
aam
pop
popa
ss
xchg
jo
loopne
xor
inc
pop
pushf
xchg
push
push
dec
xlat
cmp
in
popa
inc
add
add
add
lock
or
jns
inc
push
das
aaa
xor
mov
jno
add
add
pop
movs
dec
fadd
jno
and
mov
jg
movs
rcr
cs
cmc
xor
mov
add
add
and
xor
jl
test
sbb
adc
imul
pop
add
add
sub
lds
scas
cmp
gs
lds
and
xchg
test
dec
retf
pusha
add
add
fidivr
push
inc
and
mov
lahf
loop
(bad)
movs
sub
aad
and
lock
add
add
or
addr16
fimul
dec
out
or
jbe
iret
mov
lods
jmp
sub
add
add
push
xor
pop
loopne
and
or
das
jae
clc
shl
cmp
add
add
jg
pop
push
bound
aaa
in
xor
mov
mov
mov
pop
pop
mov
add
add
xor
scas
sbb
inc
mov
or
loope
and
mov
xor
mov
cdq
test
int
pop
imul
adc
mov
movs
test
mov
shl
add
add
or
aaa
cmp
pop
popf
test
jmp
loope
cdq
jmp
test
adc
add
lods
fisttp
xor
(bad)
clc
mov
xchg
mov
jp
mov
xchg
and
(bad)
xor
add
add
mov
xor
mov
pusha
les
jecxz
push
cmp
dec
mov
outs
jbe
xchg
or
add
add
jo
daa
pusha
(bad)
pop
inc
out
push
sbb
sub
lds
mov
add
inc
push
dec
jo
push
inc
icebp
jl
loop
pop
cmp
pop
fsubr
loope
and
cmp
push
add
add
xchg
clc
mov
xor
retf
rcr
add
inc
and
test
xor
call
push
std
push
outs
jae
ja
xchg
sub
push
xchg
sub
mov
push
pop
pop
add
add
sbb
mov
stos
mov
aas
stos
imul
ds
jg
ds
lods
xchg
call
push
push
btc
movs
cdq
ds
push
nop
xchg
jnp
jb
addr16
or
hlt
int
inc
and
sahf
pop
xor
ja
jo
cmp
(bad)
rcr
xor
test
retf
and
cmp
outs
adc
add
add
mov
fstp
push
sub
jb
pop
inc
or
bound
adc
out
mov
add
add
add
dec
mov
dec
cmp
push
sub
or
push
or
sub
lahf
add
add
add
xor
dec
loopne
test
push
lods
inc
add
je
mov
sbb
sbb
add
add
sub
jo
outs
add
rcl
cld
lods
push
sbb
dec
call
jo
cmp
add
add
lahf
dec
retf
js
adc
or
inc
and
pop
loope
xor
inc
outs
test
stos
mov
add
push
jbe
sbb
les
jmp
es
ins
fidivr
bound
add
add
icebp
pop
js
fs
stos
aad
scas
add
stos
dec
ret
mov
les
and
add
add
pop
jmp
jp
push
repnz
mov
dec
jo
dec
test
scas
aad
test
aad
pop
pop
test
add
add
imul
inc
loop
add
sub
cmp
sub
add
add
bound
xor
jb
sub
rcr
pop
and
movd
add
add
add
xor
cld
push
daa
pop
pusha
or
call
jecxz
in
test
sbb
add
add
movs
daa
dec
push
ret
push
xor
add
inc
dec
in
outs
sub
aaa
notrack
jp
add
add
arpl
scas
cmp
(bad)
enter
sub
cmp
add
pop
pop
loop
jl
daa
loop
jg
add
add
ss
popf
or
nop
push
(bad)
nop
clc
es
enter
xor
sti
test
or
add
add
cmp
pop
pop
arpl
idiv
and
sahf
movs
and
scas
leave
pop
sub
add
add
aas
inc
out
push
test
jnp
add
rol
lods
adc
mov
mov
add
add
dec
cli
push
dec
pop
dec
push
test
fidiv
dec
mov
pop
test
inc
push
pop
imul
sub
inc
push
add
add
push
es
outs
inc
pop
adc
pop
sbb
jmp
test
cmp
add
add
and
loop
dec
mov
test
das
sbb
pop
fisub
test
mov
test
sub
pop
mov
push
jecxz
gs
mov
push
xchg
or
sbb
jmp
xor
add
add
or
jl
add
aam
jb
cmp
xor
loop
mov
jnp
fcom
imul
add
add
fisubr
mov
fist
cs
and
das
xor
dec
pop
adc
or
pop
cs
lods
loop
rol
add
add
inc
fwait
icebp
and
sub
(bad)
push
adc
pop
inc
call
adc
(bad)
or
dec
adc
add
add
xor
push
addr16
je
push
movs
cmp
push
or
mov
sub
iret
add
add
pop
xchg
or
pop
sub
bound
inc
pusha
popf
test
icebp
push
push
popa
xchg
add
sbb
add
add
or
jbe
sub
push
mov
xor
nop
cmp
xor
push
mov
add
sub
daa
test
outs
lock
sub
adc
aad
in
ret
pop
test
(bad)
dec
std
or
add
add
aad
dec
out
adc
or
shl
cmp
ret
test
movs
add
add
pop
loope
sub
xor
xlat
aas
ficomp
je
mov
jge
push
pop
popa
mov
add
add
sub
sbb
adc
pop
loope
imul
call
imul
add
mov
or
jg
add
nop
and
scas
cs
cs
and
test
les
stos
push
and
xchg
add
outs
jge
fdiv
xor
dec
cmp
pop
sti
jne
int
dec
push
mov
cdq
pop
add
add
and
int3
(bad)
sub
les
outs
dec
jne
dec
mov
lods
mov
pop
inc
lock
arpl
add
add
les
lds
push
and
stos
dec
pop
icebp
jecxz
daa
jns
or
popa
mov
repz
imul
add
add
add
pop
pop
ret
and
dec
or
popf
push
adc
out
push
idiv
push
add
add
loope
icebp
xor
(bad)
pop
cli
outs
mov
xor
cmp
lea
xchg
add
add
fsub
inc
add
mov
add
inc
or
test
bound
add
add
dec
scas
lock
jns
mov
and
or
inc
or
xchg
cli
sbb
add
add
jae
add
sub
jns
xchg
pop
mov
or
jns
je
xchg
and
rol
add
add
es
clc
pusha
adc
dec
outs
(bad)
scas
pop
clc
xchg
push
dec
push
call
add
jge
mov
gs
push
rol
and
cs
inc
mov
cmc
and
xor
mov
add
outs
jbe
(bad)
lods
js
mov
in
mov
dec
jns
cmp
pop
jmp
add
add
retf
in
pop
push
lds
aad
or
sbb
div
adc
cwde
xchg
and
lahf
pop
test
cmp
mov
sub
add
add
dec
dec
popa
mov
shl
cmp
or
pop
or
ficomp
sub
add
stos
adc
push
loop
test
mov
inc
inc
push
pop
xor
add
mov
push
push
loop
pop
and
test
xchg
mov
jns
jmp
daa
adc
retf
pop
inc
pop
push
dec
dec
xor
inc
hlt
call
jmp
inc
or
scas
add
add
pop
pop
dec
mov
inc
scas
xor
ins
jno
dec
cmp
jae
push
xchg
jb
sar
sub
retf
ins
xchg
mov
or
stos
cmp
mov
push
lahf
add
popf
in
bound
neg
jge
add
add
iret
add
dec
(bad)
jge
lds
int
retf
js
shl
out
cmc
jns
sub
jmp
add
add
cmp
jo
xlat
jle
sub
sbb
add
bound
or
inc
jno
jne
movs
add
add
pop
inc
pop
push
call
ss
ins
pop
fst
scas
lods
xchg
cmp
pop
loop
ins
and
fldenv
push
add
add
fisub
jg
(bad)
imul
push
push
pop
js
hlt
push
cmp
ins
jb
sub
sub
in
add
add
test
scas
ret
push
jne
and
cs
ror
mov
dec
dec
pop
pop
mov
add
add
add
cmp
push
mov
xchg
jp
and
outs
lock
xchg
clc
and
mov
aaa
add
add
add
xor
cmp
mov
data16
push
scas
imul
inc
das
dec
pop
jle
add
add
sub
aaa
fsubrp
sub
lock
xor
in
jo
mov
jnp
inc
xchg
xlat
bound
add
add
fisttp
jge
mov
cmp
minps
imul
les
scas
ret
dec
push
ds
sub
add
add
cld
mov
add
and
aaa
inc
push
das
aam
jl
push
sub
lea
sub
ds
stos
and
loop
ret
xor
aad
mov
(bad)
daa
pushf
adc
ins
inc
jp
js
fdiv
sbb
add
add
mov
cwde
cmps
cli
pop
inc
das
js
retf
mov
je
stc
pop
imul
jbe
rcr
add
add
clc
das
sub
xchg
xchg
xor
mov
dec
pop
jecxz
pop
xchg
loope
cmp
jg
in
jge
add
add
pop
inc
mov
fmul
test
pop
mov
movs
lods
xchg
pop
xor
and
daa
add
add
ss
aas
xor
xor
sbb
sub
mov
rcr
popa
jmp
and
add
add
mov
nop
or
scas
in
clc
outs
xchg
clc
lods
pop
dec
loopne
push
and
push
icebp
sar
add
add
icebp
push
add
sub
jnp
sbb
mov
cs
retf
xchg
push
je
or
mov
add
mov
cmp
call
cmp
out
pop
push
xchg
jge
and
push
add
jbe
ss
and
cmp
push
xor
xor
push
pop
test
je
jns
add
add
leave
fdivr
aaa
lock
jmp
pop
add
mov
adc
adc
dec
add
add
jno
mov
mov
jnp
push
inc
or
mov
dec
mov
add
xor
sub
movs
dec
cmp
xor
or
push
pop
pop
jae
loopne
sbb
shr
jecxz
add
add
jb
add
aam
sub
sbb
xor
xchg
stos
push
retfw
mov
add
add
push
call
ins
test
jmp
aaa
aaa
test
dec
mov
movs
adc
scas
inc
in
jo
add
add
xchg
xor
(bad)
and
mov
add
mov
dec
ins
lods
int3
sbb
mov
cmc
ins
add
add
add
dec
adc
aas
(bad)
adc
mov
lds
mov
jbe
jl
and
add
das
xor
cmp
push
push
aam
popf
pop
and
inc
and
and
and
mov
add
pusha
sub
loop
bound
cs
pusha
mov
and
xor
add
add
jo
je
imul
pusha
popa
call
and
mov
ror
jae
inc
xchg
add
add
adc
stc
jge
inc
add
inc
push
pusha
bound
ret
mov
sub
int
sub
add
add
cwde
call
push
jo
jl
retf
test
pop
mov
inc
daa
repz
inc
add
add
jmp
(bad)
add
ins
mov
leave
pop
inc
lods
cmp
jbe
ret
sub
test
pop
mov
add
add
sub
mov
pop
in
inc
pop
mov
ds
add
add
cmp
enter
cwde
add
push
lock
xor
in
js
and
lods
add
add
add
sub
cs
(bad)
retf
rcr
jo
sbb
push
adc
or
and
add
add
les
and
pop
fiadd
inc
dec
pop
imul
lock
movs
or
add
add
dec
test
dec
jmp
pop
dec
btc
lahf
push
data16
or
add
shl
dec
mov
mov
add
add
iret
jbe
mov
imul
repz
ins
pop
ss
call
add
add
cld
scas
in
adc
es
sub
mov
mov
cmp
rcr
dec
gs
dec
sub
add
add
xor
pop
data16
xchg
pop
or
aad
int3
xor
xchg
leave
dec
ja
sbb
mov
add
add
add
adc
loop
jne
repz
icebp
inc
pushf
shl
movs
fsub
test
pop
add
add
jl
xor
or
nop
dec
scas
adc
imul
push
and
add
sbb
xor
cmp
pop
push
add
inc
pop
imul
mov
add
pop
aam
and
adc
push
push
and
cs
and
cs
xor
add
add
sar
leave
xor
cwde
lds
mov
push
rep
cwde
dec
sbb
adc
dec
xor
jg
ret
aas
dec
inc
(bad)
lds
pop
mov
xor
fbstp
add
add
sar
and
and
cmp
mov
shl
outs
jnp
in
inc
jmp
test
add
add
push
fiadd
and
mov
mov
cs
sub
out
add
add
and
arpl
mov
cmps
xor
test
loopne
jns
cld
xor
add
add
ins
jl
jp
mov
scas
mov
das
outs
sar
sub
push
cmp
pop
jae
dec
fbld
add
les
mov
dec
shr
add
jbe
jmp
pop
inc
in
mov
push
cmp
js
add
add
xor
sbb
scas
push
fidiv
and
cmps
push
and
xchg
push
sbb
add
add
xor
xchg
popa
lea
call
inc
dec
bound
jmp
sti
push
add
add
cli
push
imul
out
(bad)
les
mov
xchg
in
icebp
addr16
xchg
(bad)
add
add
mov
es
das
js
cmc
sub
shl
and
dec
js
jp
add
add
cmp
nop
and
and
(bad)
adc
ins
push
jae
adc
scas
or
add
add
in
popa
stos
out
das
sub
fiadd
push
inc
dec
push
pop
pop
mov
add
add
jecxz
jnp
(bad)
out
test
vrsqrtps
je
adc
cmp
shl
add
mov
es
mov
stc
pop
enter
cwde
sub
cmp
aam
mov
add
ds
popa
pushf
inc
mov
cmp
push
lods
push
pop
add
fist
pop
add
add
push
push
pushf
sub
cmp
popa
in
and
fwait
sar
adc
add
add
push
inc
push
movs
mov
pop
imul
mov
int3
add
add
mov
and
xor
jo
hlt
inc
sub
jl
mov
movs
sub
add
add
fs
jg
xor
fmul
das
mov
pop
add
xor
dec
jecxz
jp
jno
add
add
xlat
cmps
mov
(bad)
dec
clc
xchg
push
or
shl
test
add
add
push
je
dec
sub
pop
push
cmp
and
add
xor
add
add
mov
imul
or
mov
es
jecxz
mov
add
add
sub
in
lock
std
or
mov
fsub
dec
push
popa
add
add
mov
sbb
inc
cmp
push
imul
aas
loopne
dec
nop
or
add
adc
pop
loopne
and
push
push
das
js
adc
das
imul
pusha
add
add
jno
clc
imul
add
cmp
stos
xchg
pop
xor
inc
cmp
addr16
movs
cmps
inc
add
add
lahf
lock
int
fsubr
sub
pop
popa
mov
inc
cwde
(bad)
(bad)
stc
hlt
inc
fidiv
int
add
add
mov
aaa
inc
add
dec
xchg
cmp
arpl
dec
mov
ss
stc
xchg
jno
ins
cmp
clc
dec
sub
mov
add
inc
push
pop
push
cmp
aaa
nop
outs
mov
adc
out
outs
mov
aaa
sub
shl
jmp
(bad)
jnp
cmp
aam
push
and
sar
aad
add
add
nop
stc
sub
cmp
mov
call
push
daa
push
adc
push
dec
test
add
jge
dec
mul
xchg
sub
cmc
mov
mov
ins
jl
mov
mov
mov
add
(bad)
dec
inc
mov
push
(bad)
xchg
mov
cmp
inc
dec
pop
movs
and
jmp
or
push
sub
add
add
adc
or
push
aas
xor
inc
stc
ja
in
jl
inc
ds
sbb
mov
add
add
loopne
xchg
sub
push
test
fs
es
pop
inc
pop
jne
or
jl
repnz
out
add
add
inc
in
add
push
push
dec
arpl
push
dec
jg
sbb
(bad)
sub
nop
pop
jge
add
add
xor
jbe
sub
mov
cmp
cmp
sbb
xor
cmp
hlt
ret
rcr
daa
cmp
dec
jge
and
addr16
and
adc
push
(bad)
or
bound
adc
inc
dec
shl
add
add
and
jo
js
cmp
mov
in
aam
adc
push
adc
in
or
ror
add
add
ret
pop
ins
and
jmp
sub
mov
push
sub
shr
add
add
lds
repnz
cmp
mov
loopne
cmp
cmp
and
add
int
fild
add
add
stos
xor
push
(bad)
cdq
mov
rcl
cmp
adc
and
add
sbb
jno
mov
cwde
pop
nop
xchg
sti
cmp
pop
push
adc
out
imul
popa
push
pusha
inc
loopne
test
pop
push
add
adc
arpl
lods
out
or
add
add
inc
mov
mov
nop
push
nop
pop
dec
xor
cmovl
imul
sub
add
add
sbb
xchg
lds
sub
mov
rcr
or
and
add
inc
push
jne
jle
sbb
add
add
test
daa
loope
ins
dec
dec
or
(bad)
dec
pop
and
sbb
shrd
add
add
inc
stc
jo
push
jne
xor
dec
xchg
mov
popa
push
in
adc
jmp
cmp
and
add
add
adc
test
call
xchg
pop
pushf
sub
push
or
push
mov
cmp
les
bound
xor
sti
ja
mov
dec
test
xchg
sub
mov
add
shl
lea
inc
(bad)
jge
adc
pop
dec
add
jno
jl
dec
cmp
add
add
cs
out
cmc
shr
inc
mov
call
xchg
fst
add
add
and
cmp
xchg
jbe
test
xchg
gs
nop
xor
and
add
add
add
push
push
test
lds
pop
test
dec
test
add
cs
push
cmps
or
add
add
sub
pop
jbe
and
and
sbb
nop
mov
sub
or
popa
lods
mov
add
add
repz
xchg
xlat
and
imul
xchg
adc
inc
cld
push
fisttp
jge
add
add
add
mov
adc
jns
push
mov
dec
inc
mov
pop
ins
add
aad
add
sub
xor
movs
or
pop
arpl
add
add
jbe
or
add
inc
popa
lahf
addr16
jno
xchg
movs
cmp
ret
sub
jle
add
and
and
dec
ins
cmp
add
add
rol
pop
stos
scas
fist
xor
mov
leave
pop
jne
jl
das
sbb
add
add
mov
adc
push
daa
dec
or
mov
pop
ret
inc
add
add
test
xor
and
out
test
leave
shl
popa
es
lods
dec
mov
gs
and
add
add
mov
cmps
repnz
cmp
int
fldenv
es
and
xor
add
cmp
sub
aad
add
sbb
cwde
mov
aam
mov
retf
pop
loope
jo
add
add
out
dec
cmp
dec
xor
das
mov
mov
outs
jb
rcr
test
add
add
add
mov
addr16
xor
es
(bad)
jb
mov
(bad)
lods
fisub
cwde
stos
add
add
pop
sub
inc
repnz
rcl
shl
push
adc
or
mov
add
inc
les
xchg
sub
outs
das
ja
mov
cmps
imul
pop
jl
inc
fwait
add
inc
mov
bound
ins
sub
fsubr
mov
pusha
push
dec
push
mov
inc
ss
inc
or
add
add
js
sub
lods
int3
dec
adc
push
pop
dec
xchg
jno
mov
inc
add
add
inc
daa
mov
nop
cmp
and
js
hlt
cmp
adc
ficom
inc
dec
mov
add
add
push
aas
dec
nop
xchg
jae
sub
ja
repnz
push
jo
cmp
out
xor
call
add
sti
test
mov
xchg
or
mov
shl
movs
stos
inc
xchg
adc
xor
sub
jo
add
add
add
int
scas
push
dec
pop
push
inc
lea
call
test
imul
add
add
cdq
sbb
jmp
dec
inc
in
dec
inc
lock
sub
imul
in
cmp
add
add
add
adc
pop
pop
or
pop
cs
(bad)
pop
leave
jmp
loopne
jle
add
add
or
adc
(bad)
and
inc
push
pusha
icebp
outs
imul
jmp
dec
push
arpl
jmp
nop
js
push
aam
push
stos
ins
pushf
aad
pusha
mov
lahf
ficomp
add
dec
(bad)
push
call
call
shl
cmp
xchg
add
add
push
add
(bad)
(bad)
xor
inc
popf
pop
inc
xchg
jle
sar
nop
es
sbb
data16
add
mov
popa
cli
push
das
mov
lods
dec
movs
add
dec
and
adc
cmp
inc
or
add
add
inc
push
pop
fcmovb
adc
retf
xor
dec
stc
pop
mov
sbb
daa
cmp
cmps
pop
dec
or
add
add
cmp
cmp
scas
dec
jmp
outs
cs
push
adc
jno
cmp
push
pop
adc
add
add
mov
sub
xchg
xor
ds
movs
push
gs
mov
mov
out
adc
das
add
add
adc
outs
nop
pop
dec
and
mov
int
pop
inc
dec
pop
push
pushf
jno
ins
add
add
clc
das
push
xor
aam
sub
and
movs
jecxz
pop
sbb
xor
jnp
xor
add
add
add
push
add
and
dec
sub
dec
out
sub
inc
nop
jno
jge
mov
add
add
jp
pushf
ins
sub
outs
and
push
cmp
ds
cmp
fsub
sbb
outs
add
add
adc
jnp
add
(bad)
xchg
js
nop
enter
cmp
gs
xor
cmp
add
add
shr
push
pop
add
and
cld
fild
retf
and
jb
repz
add
push
mov
sbb
in
fs
mov
xor
jl
cmp
dec
mov
icebp
stc
add
add
cmp
call
inc
dec
push
leave
inc
or
shl
cmp
dec
inc
pop
mov
add
add
pop
fs
push
dec
ret
rcr
jno
mov
pop
mov
cld
lea
add
add
jl
popf
out
mov
js
dec
and
mov
fist
ins
push
hlt
bound
mov
xlat
push
add
add
push
pusha
inc
popa
icebp
cwde
and
add
test
test
pop
pusha
js
and
add
add
and
mul
jg
out
mov
pop
js
push
mov
aam
dec
jns
dec
mov
jp
add
add
inc
inc
leave
pop
js
mov
and
pop
mov
test
add
add
js
dec
mov
add
xor
outs
test
mov
push
or
sub
mov
ds
adc
dec
push
jo
and
xor
pop
pop
and
mov
add
add
add
rcr
mov
xchg
pop
and
xor
pop
pusha
in
or
js
xor
out
test
add
add
mov
push
jge
add
iret
imul
and
fdivp
daa
ret
adc
add
add
xlat
mov
cmp
and
fsub
xchg
cmp
adc
test
jmp
add
push
fs
push
xchg
mov
adc
retf
push
jne
data16
adc
add
add
add
and
dec
ja
je
cmp
push
in
addr16
lahf
pop
adc
add
add
jmp
xchg
cmp
or
push
pop
or
popf
cmp
and
lea
push
sub
add
push
pop
xchg
fs
rol
rol
and
push
imul
cmp
add
add
xchg
loope
and
(bad)
xor
push
(bad)
push
mov
cmps
xor
add
add
js
movs
add
xchg
inc
les
sub
push
fist
stc
and
movs
test
add
add
sti
les
sahf
cwde
pop
xchg
add
push
adc
test
test
jl
push
add
mov
fiadd
pop
sahf
rcl
sub
pushf
push
jmp
lahf
push
xor
jb
and
add
xor
mov
rcl
sub
and
ret
add
mov
test
add
add
jbe
es
popa
leave
pop
lods
sbb
xlat
enter
mov
inc
sub
jno
mov
and
hlt
xor
xor
pop
ffree
test
mov
pop
inc
fs
dec
lds
pop
dec
xchg
js
dec
and
add
stos
adc
or
mov
nop
and
mov
mov
mov
push
fdivrp
test
add
add
jge
xchg
jge
test
loopne
sahf
jecxz
fst
and
jo
xchg
add
add
or
dec
gs
gs
mov
cmp
pop
push
shl
adc
test
call
mov
add
pop
ss
and
icebp
dec
mov
pop
xchg
repnz
add
mov
push
cmp
add
add
mov
cmp
jnp
sub
xchg
pop
or
and
dec
mov
nop
add
add
sar
bound
push
mov
inc
cdq
test
aam
sbb
jle
(bad)
rcr
shr
add
add
add
daa
lods
mov
pop
int
fadd
stos
sbb
cwde
jge
jle
sbb
pusha
mov
xchg
add
add
(bad)
retf
add
dec
jle
mov
aas
out
sahf
or
shl
sar
ror
rol
add
add
push
call
push
pop
jmp
sub
movs
mov
and
adc
icebp
out
pop
mov
adc
push
into
sbb
xchg
mov
outs
jl
sbb
mov
mov
mov
pop
cld
dec
inc
dec
fmul
sbb
movs
dec
les
dec
icebp
xchg
mov
and
and
push
push
pusha
outs
in
add
add
and
add
inc
inc
nop
inc
pop
data16
into
loop
xchg
xchg
inc
dec
in
pop
push
xchg
push
dec
sti
or
aas
call
mov
mov
das
mov
adc
outs
(bad)
leave
dec
pop
scas
popf
push
pop
pop
jp
fadd
add
add
test
cwde
and
popa
pop
addr16
shl
mov
sahf
dec
daa
loop
pop
out
add
add
dec
dec
in
inc
gs
inc
rol
cmp
mov
out
push
adc
jge
stos
icebp
jp
add
add
mov
fsubp
cmp
aas
dec
pop
push
push
push
push
(bad)
pop
ret
in
bound
fisub
add
dec
dec
ret
mov
ror
sbb
mov
pusha
pop
outs
pop
jne
dec
xchg
mov
xchg
add
add
xor
adc
sbb
bound
push
adc
dec
lods
mov
clc
aas
and
loopne
pop
add
add
mov
cmp
bound
xor
mov
inc
adc
lock
arpl
add
jno
xchg
pop
adc
dec
imul
and
dec
loop
mov
cmp
retf
add
inc
int
push
jbe
loope
pop
xor
mov
sub
les
repnz
cdq
add
cmp
add
add
mov
les
lock
xor
call
in
ja
pusha
in
push
add
dec
ins
jns
imul
js
xchg
jl
sub
mov
stc
dec
and
retf
sbb
add
add
push
int
aaa
xchg
adc
enter
pop
xlat
nop
sub
mov
xor
and
add
add
ins
jo
xchg
xor
js
sub
mov
and
jo
jge
add
add
sti
sub
outs
dec
cwde
movs
dec
gs
cmp
mov
ja
in
mov
jmp
add
add
push
or
jle
sub
dec
cmp
mov
add
mov
dec
fidiv
push
add
add
jno
and
or
sbb
dec
mov
and
addr16
adc
push
adc
add
adc
push
mov
shr
aas
adc
and
scas
push
and
sbb
add
push
jmp
pop
push
arpl
cmp
push
xor
ds
rol
sahf
push
or
add
add
ret
ret
dec
mov
ins
fild
inc
sub
pop
mov
jmp
mov
inc
test
pop
add
add
popa
nop
or
cmp
fs
sub
loopne
jno
enter
add
arpl
pusha
add
add
lock
push
add
lods
mov
dec
pop
mov
add
push
push
sbb
inc
add
add
inc
sub
adc
loope
xchg
push
push
push
pop
movs
mov
xor
ret
mov
add
add
sub
dec
sub
push
sbb
fiadd
pop
pop
pop
lods
sub
retf
pop
push
adc
(bad)
add
fs
es
aas
push
lahf
scas
push
mov
pop
pop
push
inc
dec
jmp
cmp
outs
mov
add
add
aad
add
jb
mov
pop
out
pop
imul
mov
sub
dec
pop
or
add
push
pusha
xchg
ss
js
or
mov
pop
sub
inc
dec
dec
push
call
add
add
movs
dec
cmp
sub
dec
add
push
shr
and
leave
inc
scas
sbb
inc
push
aam
push
jnp
aas
jo
add
add
or
and
mov
jb
push
sub
sub
cwde
pop
or
and
xor
add
add
pusha
pcmpeqd
retf
mov
pop
sub
mov
push
and
dec
(bad)
sub
pop
movs
add
add
fwait
push
(bad)
shl
fs
xor
jg
stos
dec
hlt
cmp
shl
nop
xchg
add
add
rcr
int3
and
imul
rol
and
test
dec
scas
xchg
out
adc
(bad)
push
test
mov
add
add
mov
sub
dec
or
daa
or
js
dec
push
data16
jl
sub
pop
xor
lahf
push
add
add
pop
sbb
sub
(bad)
jbe
shl
and
imul
call
add
add
nop
mov
xor
push
pop
ror
fld
arpl
add
add
data16
push
scas
out
sbb
jno
movhps
adc
xchg
push
(bad)
sub
push
xor
std
jecxz
add
add
push
pop
gs
cs
or
jbe
dec
cmp
cmp
shr
add
add
mov
or
repnz
pushf
sub
(bad)
xor
loop
mov
xchg
dec
js
lods
cmp
add
add
clc
les
or
xor
adc
add
rol
jbe
push
nop
fbstp
add
sbb
xchg
sbb
lds
push
popa
inc
xor
mov
push
shr
pop
sub
add
add
jp
pushf
adc
jno
popa
pushf
add
adc
add
daa
ss
fist
add
add
xor
cmp
jecxz
sbb
out
cmc
loope
dec
add
gs
cmp
bound
and
add
add
(bad)
xchg
outs
adc
clc
sub
sub
fnstcw
movs
adc
inc
lock
dec
add
add
mov
jl
les
outs
mov
retf
and
cmp
jne
cmp
mov
add
add
jl
loope
and
lahf
cld
dec
mov
cmc
pop
jb
adc
rol
xchg
mov
pop
bound
jge
xor
add
add
mov
dec
add
dec
push
pop
loopne
jp
mov
ret
(bad)
jg
push
or
jns
nop
ss
adc
adc
mov
lods
dec
xor
or
(bad)
nop
dec
rcr
add
add
inc
and
nop
sub
mov
xor
les
(bad)
(bad)
cmp
imul
add
mov
adc
call
pop
mov
dec
js
mov
pop
and
loopne
add
add
pop
cld
ja
addr16
xchg
div
cmp
inc
adc
into
movs
bound
clc
xor
scas
pop
add
add
clc
sub
adc
xor
mov
dec
movs
arpl
mov
nop
mov
add
add
test
(bad)
mov
push
dec
retf
mov
cs
rol
pop
jnp
jmp
sub
scas
or
out
inc
mov
push
daa
push
push
ret
mov
lods
mov
and
mov
dec
stos
add
add
or
add
mov
and
xor
dec
icebp
sub
call
add
or
js
daa
daa
das
ret
push
mov
sti
test
cld
test
or
fisub
dec
add
add
add
ds
dec
lds
and
jl
mov
cmp
icebp
repz
pop
das
cmp
lea
daa
arpl
cmps
lock
das
sbb
mov
xor
push
and
add
xchg
mov
(bad)
sti
aad
add
cmp
nop
pop
dec
adc
add
leave
inc
cmp
mov
inc
add
add
sub
or
imul
test
jno
inc
popf
and
push
lods
jno
mov
int
mov
add
pop
dec
pop
and
cs
or
pop
pop
addr16
cmps
sbb
adc
arpl
add
dec
mov
mov
test
mov
sub
fidiv
add
add
inc
or
xlat
adc
xor
scas
dec
push
pop
push
cmp
imul
loope
xor
add
add
inc
dec
dec
(bad)
push
call
addr16
lds
sub
pop
push
hlt
or
lods
add
add
sub
sbb
lods
and
test
scas
pop
mov
data16
cmp
call
and
add
add
ret
fst
stos
es
fs
jne
(bad)
jl
sub
push
and
add
mov
test
jl
xchg
cld
pop
test
test
mov
daa
cld
add
add
je
jne
popa
mov
(bad)
push
ja
aas
push
jp
aas
fdiv
dec
push
pop
add
add
pusha
movs
pop
sub
cs
sub
jbe
adc
pusha
jg
mov
jmp
add
fisub
jp
xor
or
pop
add
push
or
ins
test
jno
sub
add
add
rep
mov
and
pop
aas
aad
test
mov
shl
add
mov
xor
push
mov
jo
mov
addr16
fadd
and
xor
out
add
add
add
outs
js
sub
ja
inc
adc
or
shl
and
add
add
mov
ds
push
or
aaa
cmp
test
mov
add
add
repnz
inc
mov
xchg
lods
mov
inc
dec
outs
mov
test
push
add
add
ins
or
or
or
outs
lock
push
dec
dec
test
mov
sbb
xor
pusha
push
add
add
push
nop
mov
pop
icebp
daa
push
add
jge
aaa
mov
popf
or
or
jle
xor
push
dec
push
aad
add
add
loopne
cmp
in
push
pop
push
mov
popf
data16
loope
mov
bound
bnd
cmp
movs
inc
cmps
cwde
push
pop
jbe
xchg
mul
shl
sar
hlt
sub
loopne
imul
add
dec
inc
fs
cld
outs
dec
out
xchg
cli
pop
and
adc
scas
jb
dec
push
dec
add
push
adc
pop
and
cmp
imul
lahf
test
add
add
sti
(bad)
dec
sbb
push
mov
cmp
and
and
xchg
outs
add
or
xlat
pop
mov
add
add
imul
pop
popf
mov
cli
ds
inc
push
shl
cmps
sub
sub
add
add
(bad)
cmc
imul
or
cmp
enter
pop
push
adc
hlt
pop
pop
inc
(bad)
jnp
and
jg
cdq
add
add
sub
je
mov
mov
or
and
adc
test
ss
add
add
xchg
bound
xchg
ja
daa
(bad)
mov
pop
push
push
dec
test
pusha
jl
sub
daa
add
add
bound
dec
sub
adc
retf
lds
in
dec
jl
xor
mov
test
fidiv
sub
adc
add
add
cmps
dec
lods
fwait
gs
movs
cmp
and
cwde
xlat
call
add
mov
loopne
inc
inc
jno
imul
push
dec
mov
add
daa
mov
add
add
mov
lahf
mov
fstp
and
aas
inc
dec
push
mov
and
cmp
jae
ds
inc
neg
adc
(bad)
mov
sub
cdq
es
dec
push
add
add
xor
int3
lds
jmp
cmp
pop
pop
cmps
addr16
jbe
retf
cmp
mov
add
add
mov
cld
dec
inc
jmp
dec
aas
cwde
nop
cs
jo
sub
call
add
add
mov
aam
es
jmp
pop
das
pop
xchg
movs
pop
sbb
add
add
pusha
push
and
push
pop
fdiv
adc
data16
or
jne
cmps
movs
shr
add
fdivr
dec
pushf
cmp
arpl
adc
jo
jns
loop
imul
jbe
mov
and
add
add
call
push
mov
sub
aas
shr
pop
sub
push
and
or
or
dec
movs
add
adc
sbb
loope
les
xor
nop
adc
inc
add
xchg
rcl
shl
add
add
inc
adc
ja
inc
add
out
dec
mov
pop
push
popa
pop
fs
add
add
mov
dec
dec
loope
das
adc
pop
mov
sub
mov
mov
pop
add
add
push
test
es
sub
ror
inc
sub
fisttp
adc
mov
mov
pop
or
loopne
dec
push
imul
popf
loop
stos
inc
fisttp
mov
xchg
mov
pop
add
add
mov
inc
dec
mov
pop
pop
sti
ds
sbb
pusha
xchg
ss
dec
xchg
or
add
add
inc
jno
xchg
add
es
adc
shl
icebp
dec
jle
sbb
ror
push
add
add
test
ins
sub
mov
or
fcomp
xor
jnp
push
ficom
scas
cmps
add
add
and
inc
mov
cmp
push
call
pushf
jmp
ficom
add
add
hlt
mov
push
test
and
hlt
mov
jl
ficom
jle
in
mov
mov
call
call
xchg
je
cld
fsubr
pop
stos
das
xor
xchg
das
repnz
cmps
mov
or
add
add
fiadd
pushf
inc
cmc
jbe
in
int
imul
fsub
mov
push
add
add
add
aad
xor
fcom
jp
mov
cwde
test
inc
pop
mov
test
add
xor
les
mov
popa
(bad)
hlt
or
data16
or
push
retf
cmp
jne
add
add
cmc
push
cld
sub
mov
movs
dec
(bad)
push
out
in
push
pop
pop
pop
pop
stos
retf
pop
add
add
and
lods
push
pop
icebp
in
add
xor
inc
push
inc
std
jl
sub
push
cmc
scas
test
add
add
or
mov
movs
add
shl
mov
enter
xlat
stc
pop
rcr
dec
sub
add
inc
mov
pop
and
daa
dec
xor
popf
push
pushf
jbe
pusha
push
addr16
setno
push
cmc
add
add
xchg
int3
inc
xor
push
push
fidiv
pop
out
cmp
nop
add
xchg
bound
jnp
push
mov
out
push
lock
in
call
test
dec
shl
xchg
jo
inc
mov
enter
add
add
mov
or
or
ror
mov
inc
ret
mov
sbb
xor
aad
pusha
sbb
add
add
xor
lea
rcr
pop
cmp
dec
xor
jae
addr16
and
push
(bad)
push
add
add
sar
xchg
mov
shr
jmp
mov
mov
jo
arpl
out
and
inc
dec
add
add
push
popa
data16
scas
xchg
jne
imul
shl
stc
enter
lahf
xor
jle
jecxz
add
add
ret
push
leave
jecxz
hlt
dec
pop
and
scas
bound
xor
fs
scas
ret
fisttp
cli
cli
jmp
jo
and
add
pop
xchg
shr
mov
movs
jnp
cmp
dec
imul
movs
sub
push
aam
and
pusha
fidivr
call
cmp
add
add
dec
pusha
mov
xor
sbb
dec
fs
call
arpl
jb
jge
and
mov
add
dec
dec
test
xor
and
cmp
dec
and
dec
pop
(bad)
fbld
jne
push
sar
add
add
mov
push
push
pusha
gs
sub
pop
push
mov
jns
and
xor
sbb
xor
add
add
jns
test
ror
shl
cmp
js
jno
(bad)
cli
cmp
add
add
cmps
outs
fdiv
das
cmc
mov
(bad)
cmp
dec
mov
mov
das
and
push
add
add
std
mov
popa
mul
push
push
mov
in
clc
jo
jp
fdivrp
sub
mov
add
xchg
ret
or
jns
loopne
pop
add
ins
js
and
shr
push
push
add
add
nop
imul
fdiv
sub
fs
dec
and
cmp
std
mov
add
add
movs
das
(bad)
pop
jbe
into
push
movs
(bad)
pop
ret
sbb
add
jo
ins
jno
stos
stc
jbe
add
add
and
das
pop
ins
ror
sub
les
imul
push
and
xor
ss
or
sub
bound
ret
push
jo
xchg
dec
nop
adc
mov
in
sub
add
add
shr
xor
push
sub
jmp
and
popa
pop
cmp
outs
mov
mov
add
add
test
loopne
neg
jp
xchg
call
stos
lock
lea
das
mov
add
add
xchg
fsubr
pandn
dec
jmp
shr
mov
jg
jle
ret
mov
add
add
test
inc
dec
sub
push
movs
das
sub
pop
cmps
jecxz
out
jb
adc
mov
add
add
inc
inc
push
les
or
adc
lods
dec
mov
dec
and
pop
js
jno
sub
cmp
and
add
add
or
je
or
cs
mov
jle
cwde
adc
sar
and
add
add
jge
mov
stc
es
mov
or
sub
mov
jno
(bad)
lock
xchg
js
into
add
add
and
fdiv
pop
imul
pop
ret
xor
dec
dec
pop
loopne
imul
sbb
add
add
mov
adc
push
fcomp
les
je
xchg
out
fidivr
xlat
clc
and
add
lahf
hlt
retf
adc
fisubr
(bad)
cmp
dec
jnp
adc
push
stos
pop
mov
inc
push
add
add
pop
test
(bad)
sub
dec
jns
sub
(bad)
adc
or
fucom
and
jp
xor
sbb
add
add
addr16
in
mov
xor
dec
dec
mov
sbb
and
sub
mov
xor
add
add
(bad)
fcomp
dec
nop
add
push
xor
xchg
(bad)
loop
ins
xor
sti
add
add
das
lods
je
jp
sub
ins
gs
push
pop
lds
mov
add
add
movs
jl
sub
cmp
aaa
and
push
mov
shr
pop
outs
loope
inc
xchg
inc
push
pop
ins
inc
push
add
add
cwde
cmp
dec
mov
stc
inc
sub
and
mov
cmp
add
add
fcom
test
pop
in
mov
xor
lahf
push
or
mov
movs
in
out
sub
and
add
add
add
pop
addr16
movs
ret
daa
clc
xchg
xchg
xchg
jno
pop
add
add
in
jecxz
jbe
adc
shr
sub
add
sub
inc
shl
inc
xchg
add
call
lods
adc
jmp
or
pop
mov
(bad)
add
add
xchg
call
dec
jmp
inc
in
arpl
and
cld
aad
mov
xchg
in
sbb
and
das
js
mov
mul
mov
pop
mov
mov
shl
daa
dec
add
add
nop
jne
std
nop
fcomp
arpl
sar
das
call
pop
xor
cmps
dec
and
add
add
push
sbb
pop
cmp
inc
dec
jo
call
dec
test
js
in
inc
(bad)
ret
add
add
push
dec
sbb
mov
imul
xchg
sub
loope
xchg
add
inc
nop
mov
xor
das
pusha
mov
add
add
dec
add
cld
jg
pop
or
or
pop
or
sbb
add
add
mov
pop
test
cmp
jnp
arpl
dec
and
fs
mov
leave
sub
sbb
fs
add
add
sbb
psubb
fs
imul
or
xor
push
pop
ins
lds
add
add
xchg
imul
pushf
dec
jne
jl
data16
and
add
xchg
ss
add
add
icebp
xor
fs
jne
jg
xlat
out
or
pop
jne
mov
jp
pop
adc
add
add
imul
adc
jb
stos
or
inc
aam
adc
loope
and
sub
cmp
add
add
sub
push
push
popf
sar
cwde
cwde
(bad)
pop
cmp
pop
mov
push
mov
and
dec
adc
les
pop
xchg
test
push
dec
clc
les
jo
je
add
add
add
test
dec
jno
sub
dec
fwait
addr16
dec
stc
arpl
cmp
dec
xchg
dec
cld
push
add
and
xchg
jns
cmp
scas
push
aam
adc
push
jmp
imul
loope
stos
add
adc
mov
add
add
pop
pusha
sbb
(bad)
dec
jmp
lds
jp
dec
pop
sbb
mov
add
add
mov
imul
jmp
imul
mov
adc
js
add
add
xor
pop
sbb
mov
cs
adc
dec
add
ins
lods
jno
pop
lods
add
add
stc
dec
imul
ror
cmp
mov
arpl
mov
push
add
add
cmp
ja
jl
aad
imul
fs
push
pop
test
inc
cld
mov
js
popa
lea
add
add
adc
test
inc
adc
loopne
arpl
fcom
mov
test
add
inc
and
push
mov
sub
dec
out
or
(bad)
pop
xor
push
cmp
fs
add
push
dec
stos
js
sub
pusha
stos
dec
pop
dec
pop
fdiv
push
shr
adc
add
add
bswap
nop
xchg
xchg
push
loop
ficom
enter
(bad)
cld
ins
dec
add
(bad)
pop
cwde
loope
sub
mov
cmp
push
adc
lds
rol
outs
outs
adc
push
xchg
pusha
ror
add
add
add
arpl
dec
and
dec
pusha
dec
mov
fisttp
dec
pop
pop
mov
test
inc
popf
pusha
add
add
cmp
jg
gs
je
mov
lahf
xchg
outs
adc
sub
scas
dec
cmp
push
pop
and
js
pop
add
add
loopne
xchg
mov
jae
dec
fcom
jno
ret
(bad)
pop
add
dec
jge
lea
mov
add
add
push
xor
mov
xor
push
xor
xor
ins
jg
mov
sub
lds
add
add
and
test
stos
and
push
inc
pop
push
cmps
(bad)
dec
adc
push
adc
xor
add
add
ins
imul
sahf
and
mov
mov
test
jne
dec
sbb
add
mov
pop
gs
and
ds
push
push
ja
mov
jmp
xor
and
add
out
fimul
arpl
mov
jp
mov
cmps
inc
fist
addr16
lahf
fs
add
mov
add
add
rcl
push
pop
mov
dec
mov
packssdw
inc
push
nop
arpl
add
add
add
add
cmp
mov
jp
dec
xor
adc
dec
mov
loopne
add
add
xor
test
iret
mov
push
adc
das
loope
dec
movs
mov
es
add
fnstsw
ins
add
add
and
and
or
jb
movs
cld
cmp
push
in
inc
call
pop
lds
add
add
push
rol
dec
lds
scas
mov
xchg
js
popf
push
enter
fld
pop
aaa
push
pop
or
dec
push
xor
push
outs
fist
outs
xor
jg
mov
jmp
scas
(bad)
leave
add
add
fbld
std
nop
ficomp
imul
ss
cmp
icebp
bound
pop
add
add
fs
dec
mov
nop
mov
pop
dec
mov
in
jmp
pop
or
daa
pop
test
jno
add
add
push
leave
dec
xor
push
push
out
push
leave
stos
add
sub
xor
outs
push
push
add
add
inc
imul
inc
add
sar
cwde
add
push
pop
push
xchg
stos
or
add
dec
test
cli
les
sti
and
mov
push
(bad)
sub
xor
add
add
adc
dec
push
inc
cld
pop
fs
imul
lods
movs
pop
test
push
push
gs
sub
mov
ror
add
add
mov
jns
sub
test
pop
xor
xor
sbb
pop
imul
pop
mov
cld
add
add
and
sub
dec
pop
imul
push
or
movs
inc
add
mov
in
daa
jns
add
add
push
jle
pop
ja
in
sub
fnstsw
movs
xchg
fs
pop
pop
lock
imul
xor
jbe
mov
cmp
ins
mov
bound
enter
mov
leave
inc
add
add
pop
jne
push
or
nop
inc
dec
push
push
(bad)
inc
sbb
mov
jmp
ss
loop
and
popa
int3
inc
add
add
and
sub
fimul
push
mov
(bad)
das
clc
test
sub
add
nop
jcxz
jne
and
adc
xor
data16
and
sub
cwde
data16
sub
mov
cwde
lods
nop
mov
add
add
mov
pop
mov
out
push
in
pop
daa
xor
push
push
xchg
or
dec
in
nop
add
add
xor
jns
xchg
or
pop
(bad)
call
or
or
int
lods
dec
sub
and
add
add
cmp
mov
sub
gs
ja
xchg
aaa
cmp
in
adc
loope
jle
retf
add
add
scas
adc
adc
popa
xchg
inc
arpl
sub
ds
repz
pushf
cs
mov
add
add
es
mov
test
imul
test
cli
(bad)
call
cmp
(bad)
xor
add
add
xchg
and
imul
push
add
ror
dec
in
jns
add
add
push
inc
mov
out
xor
push
ja
cmc
dec
dec
xor
outs
mov
or
add
retf
jb
mov
mov
mov
mov
push
cmp
xor
scas
mov
add
add
cmp
xlat
sub
or
pushw
gs
pusha
and
es
or
mov
call
add
xchg
and
sub
or
or
pop
and
lds
scas
push
pop
scas
inc
push
jge
add
add
sub
cmp
and
add
mov
lea
adc
mov
mov
mov
add
add
sti
das
lock
push
call
dec
popf
shl
nop
mov
fwait
push
inc
sahf
mov
add
add
mov
inc
mov
call
loop
dec
lods
sub
push
outs
jns
fsubr
add
add
int3
int3
push
dec
pop
and
test
sbb
add
mov
push
bound
add
add
outs
xor
jge
jmp
dec
movs
mov
(bad)
aas
sahf
fs
mov
stos
adc
jmp
rol
add
add
call
pushf
or
sbb
jecxz
fadd
sar
push
adc
xchg
cli
mov
cmp
inc
xchg
push
xchg
dec
xchg
dec
jae
lahf
das
xor
add
add
gs
dec
icebp
in
sahf
pop
mov
mov
xor
daa
jno
mov
add
add
cmp
dec
pop
(bad)
dec
jbe
or
sub
pop
pop
and
push
xor
jg
cmps
sub
dec
push
and
ret
pop
jecxz
cmp
or
push
nop
das
mov
aad
add
add
pop
jb
lods
jno
mov
mov
add
fisttp
push
and
jp
inc
scas
cmp
cld
scas
xor
add
add
shr
clc
xchg
adc
jno
push
sub
cmp
daa
xchg
sbb
iret
xlat
or
outs
ins
je
add
add
inc
shl
cmp
dec
cld
and
jge
mov
or
and
mov
add
add
ins
nop
dec
pop
push
stc
jno
repnz
inc
daa
dec
pop
push
pusha
dec
pop
push
push
ret
dec
rol
add
add
rol
mov
test
stos
lds
mov
inc
mov
or
and
jbe
rcl
add
inc
xor
dec
jnp
sbb
push
mov
cwde
loopne
enter
sub
(bad)
fsub
add
add
cmp
ret
retf
xchg
js
dec
xor
pop
in
repz
adc
dec
xchg
add
add
or
xor
sbb
jecxz
push
aad
sub
mov
sbb
push
ret
mov
add
mov
xor
xlat
or
cwde
inc
lods
shr
jae
gs
sub
imul
add
add
sbb
jp
cmp
xchg
or
fdivr
dec
jne
add
and
movs
inc
jge
inc
push
jmp
add
add
push
push
pop
add
sbb
pop
xor
jmp
imul
and
xor
pop
sub
and
add
and
pop
leave
sub
jo
xor
mov
out
or
push
xchg
daa
jb
adc
push
cmp
jbe
xor
mov
pop
out
dec
mov
add
add
inc
dec
cmp
sbb
mov
jmp
pushf
rol
jecxz
das
fisttp
inc
frndint
and
arpl
add
add
add
or
jne
push
fcmove
mov
xor
fbld
test
add
add
test
push
jecxz
dec
shr
pop
lock
popf
js
sahf
add
jmp
and
cmp
movs
adc
and
cmp
sbb
dec
dec
sbb
xchg
movs
ret
enter
add
add
adc
popf
pop
loope
push
or
shr
mov
out
(bad)
sub
pop
loope
aas
sub
retf
jo
add
add
daa
and
mov
call
push
mov
xor
aam
sub
rcl
add
add
iret
jo
ds
imul
imul
add
jmp
sub
push
xchg
pop
(bad)
jo
fs
pusha
add
add
mov
test
pop
pop
scas
mov
xchg
jmp
fs
cmp
aas
mov
add
add
or
push
retf
add
mov
pop
dec
jno
into
sbb
push
pop
mov
mov
add
dec
(bad)
jne
jne
sar
in
popa
sub
pop
pop
idiv
iret
(bad)
hlt
(bad)
adc
retf
add
add
jo
inc
rcr
loope
outs
ret
(bad)
fnstsw
mov
test
jnp
mov
mov
add
je
and
jge
pop
arpl
mov
gs
inc
pop
dec
sbb
mov
add
add
add
outs
cmc
pop
enter
pushw
xor
xchg
push
xchg
mov
sbb
pop
add
add
mov
push
fidiv
in
imul
push
or
cld
cli
(bad)
aam
mov
adc
add
add
rol
or
sub
mov
sub
lock
shl
jo
je
jnp
mov
add
and
pop
dec
dec
inc
or
cmp
gs
pop
inc
inc
out
cld
add
fs
add
add
or
rol
dec
push
in
fcomp
sub
scas
xchg
(bad)
cmp
add
add
stc
outs
repnz
add
mov
or
or
lods
xchg
adc
cmps
and
movs
and
add
add
mov
pushf
or
loopne
jno
scas
cmp
jne
push
pop
cmp
js
retf
mov
inc
std
test
push
test
dec
mov
cs
add
push
mov
aaa
pop
les
lds
push
test
inc
dec
inc
clc
jb
addr16
mov
pop
jecxz
add
jp
mov
outs
je
or
imul
ins
jb
add
add
sub
cmp
pop
cld
xchg
or
push
mul
add
inc
inc
dec
pop
movs
inc
fadd
add
add
rol
daa
dec
jg
mov
cmp
pushf
sub
or
je
cdq
xor
push
outs
mov
add
add
dec
rol
mov
mov
pop
pusha
xlat
inc
sub
mov
ror
add
push
pop
mov
add
dec
push
mov
addr16
push
dec
jo
add
xor
pushf
inc
das
mov
xchg
mov
add
test
sahf
push
fld
sbb
sub
loope
mov
stc
sub
data16
sub
sub
aas
add
add
dec
mov
and
retf
jne
rcl
retf
xor
movs
fs
add
add
and
bound
sub
jge
and
ds
dec
jmp
add
jnp
daa
into
mov
dec
pop
add
add
xlat
push
mov
sub
add
pop
(bad)
sar
inc
(bad)
mov
inc
imul
jecxz
test
imul
dec
ss
dec
ins
dec
push
mov
cmc
dec
outs
loope
sbb
add
das
les
fmulp
lea
push
sub
sbb
scas
(bad)
addr16
push
arpl
jp
xor
add
add
inc
cmps
dec
xor
les
mov
movs
test
cmp
inc
shl
add
jl
add
add
rol
ret
inc
pop
add
inc
inc
push
pop
lds
xchg
lods
daa
sbb
pop
jne
push
push
add
xor
dec
add
add
push
mov
sub
mov
ror
ja
lock
das
aaa
inc
dec
sub
push
(bad)
mov
mov
add
add
inc
vrsqrtss
lds
mov
inc
outs
in
mov
dec
add
mov
add
add
cdq
and
dec
cmp
iret
jnp
icebp
out
push
jg
inc
inc
mov
pop
imul
dec
ret
aas
push
sti
sub
add
add
sbb
fs
push
mov
lods
sub
aaa
adc
pop
in
jecxz
inc
fldcw
loope
cmps
add
add
pop
inc
xor
hlt
arpl
loopne
ja
jl
and
pushf
add
pop
xchg
xor
add
add
ins
mov
fiadd
popa
outs
ins
sub
outs
lods
xor
sti
push
out
inc
outs
mov
add
rcr
sbb
cmp
and
push
xor
jne
std
sub
mov
dec
push
xlat
push
xlat
add
add
jle
add
dec
enter
fmul
pop
add
sti
dec
call
loope
add
add
add
sub
cmp
imul
dec
sub
push
add
add
cmp
lahf
or
in
shl
or
xor
push
out
adc
mov
add
add
adc
in
sub
push
stos
sbb
mov
out
pop
(bad)
push
inc
js
xor
add
add
push
inc
test
dec
mov
inc
and
mov
fisttp
jge
adc
out
adc
and
add
add
adc
push
lahf
dec
popa
jl
or
xor
dec
xor
adc
add
bound
sbb
arpl
jo
pop
cwde
movs
gs
je
push
jb
dec
cld
add
add
sub
push
shr
aaa
push
imul
adc
mov
jecxz
mov
pop
(bad)
outs
adc
mov
add
xchg
cld
dec
push
data16
adc
dec
cwde
pop
(bad)
jno
pop
fstp
dec
movs
jmp
jp
icebp
add
add
aad
mov
push
pop
pop
test
xor
shl
mov
fisubr
push
fistp
in
inc
loopne
cmp
push
ds
out
sub
cmps
adc
sub
scas
rol
xlat
mov
sbb
cmp
add
jg
pop
pop
pop
pop
push
(bad)
push
cli
ins
xchg
ret
arpl
stc
pop
test
dec
retf
add
and
movs
cmps
inc
das
dec
dec
aas
repnz
adc
inc
inc
div
sub
add
add
jnp
popf
rcr
sar
sbb
inc
pop
repnz
dec
dec
xchg
push
pop
jmp
add
add
ror
pop
(bad)
cmc
fisttp
dec
push
lds
jp
mov
add
out
test
dec
xchg
add
add
inc
das
ret
dec
xchg
jo
test
std
pop
aas
daa
inc
jl
mov
xlat
add
arpl
aaa
ret
fiadd
add
add
sub
mov
repnz
push
std
push
dec
and
lds
sbb
dec
clc
and
sub
dec
lahf
in
add
daa
aam
mov
inc
mov
(bad)
or
mov
push
mov
or
add
add
sub
das
popa
and
mov
push
or
sub
das
ss
clc
push
dec
add
add
mov
add
rcr
mov
mov
jmp
mov
xor
add
add
jno
mov
add
imul
mov
cmp
pop
mov
xor
add
add
ret
imul
and
pop
cmp
pop
pop
fnstsw
imul
add
add
xor
movs
adc
es
sub
xor
outs
jae
xor
xchg
mul
add
sbb
and
das
cmp
inc
inc
les
aaa
inc
adc
loope
imul
inc
test
mov
add
add
pop
pop
dec
addr16
and
mov
push
nop
iret
push
dec
stos
bound
lahf
ret
ret
jmp
add
xor
inc
dec
pop
dec
mov
outs
push
xor
nop
push
or
(bad)
mov
mov
pop
(bad)
fcom
adc
dec
xchg
pop
cmp
mov
into
sub
sbb
aas
enter
add
add
mov
adc
push
sbb
ja
inc
or
xor
dec
adc
bound
das
dec
add
add
mov
aas
mov
mov
and
or
les
adc
or
add
push
inc
lock
push
fs
cwde
data16
sbb
pop
clc
adc
push
push
data16
mov
add
add
push
sub
or
xlat
and
jl
cmp
push
mov
ins
sbb
popa
enter
add
add
cmp
adc
add
test
jbe
sbb
dec
bound
pop
fild
bound
push
add
add
fcmove
cwde
mov
cli
imul
lods
push
pop
fisub
dec
sub
add
inc
and
push
pop
inc
scas
test
cli
les
mov
popa
sub
imul
add
sub
pop
in
lds
and
(bad)
push
fwait
adc
aaa
jl
jo
jecxz
imul
aas
or
push
jnp
pop
mov
jmp
pop
jg
jo
mov
add
add
jmp
aam
scas
or
pop
es
pop
call
cli
add
add
add
ss
test
mov
inc
jno
cmp
sub
pop
and
neg
sbb
add
add
add
enter
inc
dec
test
mov
fisub
add
outs
pop
push
add
add
dec
mov
cmp
dec
pop
std
icebp
jl
mov
(bad)
shl
daa
cmp
add
add
add
lds
pop
adc
pusha
bound
xor
jle
ins
cmp
ds
clc
pop
imul
dec
je
cvtpi2ps
repz
cmp
pusha
mov
adc
pop
shr
ja
add
add
xor
cmc
cmp
imul
cmps
xor
cmps
pop
pop
or
pop
int
ja
mov
add
add
inc
xchg
mov
xlat
push
add
push
ins
inc
fdivr
dec
sbb
push
std
bound
add
add
mov
sbb
(bad)
pusha
jmp
push
mov
cli
(bad)
pop
sbb
lods
test
add
add
das
je
and
mov
popf
fcom
out
add
cmp
mov
pop
inc
add
add
jne
jge
add
sar
pop
fucom
mov
mov
xchg
and
add
add
add
jmp
cmp
addr16
mov
sbb
dec
shl
jnp
add
add
dec
std
or
aad
dec
fld
sbb
pop
test
jmp
jns
inc
add
add
(bad)
das
ins
or
adc
inc
or
les
inc
sub
arpl
pop
je
loope
add
add
or
xor
jmp
out
xchg
push
aaa
lds
pop
imul
int
mov
daa
mov
pop
iret
mov
or
xchg
jne
cmc
aas
add
add
scas
(bad)
sti
nop
or
outs
cmp
push
es
dec
sub
jecxz
adc
dec
xlat
retf
sub
mov
cli
push
adc
xor
std
inc
ins
gs
aad
pop
mov
xchg
mov
add
add
scas
inc
arpl
jne
ror
cs
and
jmp
jno
imul
nop
add
add
dec
hlt
dec
add
and
and
push
pop
mov
adc
mov
dec
mov
push
data16
or
jne
add
pop
pop
shl
xor
and
cld
xchg
add
adc
lds
xchg
add
add
push
or
sti
retf
inc
das
std
loop
inc
jmp
pop
nop
pop
nop
popa
jle
mov
cwde
push
mov
inc
test
adc
lds
adc
ins
inc
addr16
rcl
test
adc
xchg
sub
test
add
add
add
(bad)
fdiv
adc
sub
push
xor
mov
nop
add
es
xchg
add
add
mov
push
push
sub
(bad)
sub
or
mov
mov
es
add
add
aas
and
mov
mov
sar
js
and
push
repz
bound
iret
cmp
fs
aam
add
add
cmp
mov
das
jp
inc
aas
ret
push
lea
es
inc
pop
or
jmp
sub
or
enter
xlat
and
fs
rcl
pop
std
scas
leave
sbb
lock
test
stos
add
add
test
jmp
push
lds
(bad)
mov
int
and
pop
push
adc
lds
mov
pop
test
add
add
cmp
js
mov
adc
fstp
bound
aad
push
mov
imul
add
ret
scas
es
pop
rcl
push
ss
cmp
rol
xchg
add
add
sbb
imul
xor
daa
pusha
ins
push
cwde
push
rol
push
popa
ja
add
add
xchg
cwde
ja
sbb
inc
fs
push
retf
xor
xor
mov
pop
mov
pop
add
add
mov
xchg
adc
inc
ret
mov
leave
sub
cmp
pop
cmps
daa
hlt
adc
mov
add
add
je
sub
imul
shl
ret
loope
dec
sub
cmp
in
mov
add
add
push
addr16
sub
movs
bound
fdivr
pusha
pop
cmp
mov
sbb
outs
push
xor
add
and
mov
cmps
js
imul
or
inc
movs
mov
ret
add
add
mov
in
sbb
add
jmp
jle
aam
inc
and
xchg
dec
jge
add
add
aad
pushf
aaa
jo
dec
push
push
test
xchg
inc
daa
push
jmp
and
inc
inc
mov
test
add
add
jb
jp
mov
cs
and
or
add
mov
lods
clc
jo
xor
push
add
add
popa
push
mov
aas
(bad)
frstor
pop
call
sub
mov
dec
xchg
jp
add
add
fisubr
je
pushf
rol
push
push
xchg
xor
ins
jle
ret
inc
(bad)
in
test
pop
push
add
add
or
pop
ins
mov
jbe
bound
aad
jmp
mov
adc
mov
jae
push
lods
out
add
dec
dec
add
add
mov
stos
push
loopne
push
pop
cmp
sbb
push
imul
es
sub
sub
fs
mov
add
add
cmp
neg
pusha
addr16
loop
inc
ret
popa
or
je
adc
ins
mov
add
mov
pop
pop
inc
mov
xor
mov
js
rol
add
add
xor
bound
ret
fsubrp
mov
std
lods
and
inc
daa
inc
dec
test
imul
add
add
adc
sbb
iret
dec
adc
xor
ins
dec
scas
fwait
push
jne
xor
cmp
add
add
std
imul
bound
xchg
fcomp
pop
push
jnp
push
xor
or
inc
dec
add
add
push
mov
jmp
aaa
cs
inc
in
sub
sub
xor
dec
pop
pop
bound
add
add
adc
and
dec
cmp
je
inc
adc
out
add
dec
pop
pop
sub
xor
inc
jmp
ins
xor
imul
repnz
pop
fnsavew
mov
cwde
add
add
fwait
dec
inc
adc
sar
pop
(bad)
jno
(bad)
xor
sub
push
pop
cwde
add
add
pushw
inc
dec
push
mov
push
gs
test
push
add
daa
push
jne
inc
inc
push
add
add
pusha
cli
push
scas
sbb
outs
pusha
fimul
dec
aas
in
inc
cmp
leave
pop
cmp
mov
(bad)
out
and
add
add
mov
pop
push
inc
sti
push
jno
cwde
cmp
xchg
add
clc
push
mov
jno
cwde
mov
add
add
xchg
cmp
sub
or
jo
pop
inc
mov
sti
jge
dec
push
push
adc
push
sbb
cmc
fld
add
add
jnp
(bad)
sti
or
or
stos
in
lods
push
mov
add
jno
cli
imul
jl
loope
dec
push
pop
mov
stos
xchg
imul
cmp
retf
add
add
add
fs
daa
jbe
pusha
lods
or
pop
sub
cs
jb
icebp
(bad)
jp
add
add
lahf
push
cmps
xor
push
pop
movs
xchg
sbb
ja
loope
(bad)
aad
jno
mov
push
outs
push
pop
aaa
add
add
les
test
xor
test
mov
mov
mov
inc
add
add
mov
repz
fsubr
hlt
gs
xchg
jb
in
dec
add
dec
aaa
repz
pop
nop
mov
inc
mov
jmp
outs
push
jg
sbb
clc
add
add
sub
int
je
sub
mov
inc
dec
cld
xchg
stos
cli
sbb
add
jne
and
add
add
retf
pop
mov
and
mov
int
out
sub
xor
xor
cmps
hlt
rcl
inc
or
add
add
inc
xchg
push
lock
scas
test
push
call
jle
dec
lahf
dec
js
pop
pop
or
add
add
adc
push
dec
adc
clc
xor
sub
(bad)
out
js
test
inc
xchg
mov
add
dec
es
movs
jno
rcl
imul
lods
movs
loope
sub
sbb
nop
stos
das
and
add
xchg
xor
push
(bad)
jge
push
test
imul
fwait
inc
sub
loope
xchg
iret
mov
push
dec
add
add
push
xor
das
imul
push
fcom
cmp
and
or
mov
inc
popf
(bad)
cld
clc
add
add
jl
in
iret
push
aas
push
sub
pop
push
mov
pop
pop
mov
clc
sbb
add
lds
(bad)
cld
sbb
jo
dec
and
inc
and
sub
mov
add
add
dec
mov
dec
push
cmp
xchg
and
mov
dec
test
cmp
add
add
shr
(bad)
cmp
inc
dec
dec
call
dec
mov
cs
cmp
add
add
lods
or
sub
inc
das
sub
pop
ja
dec
scas
dec
xchg
jo
mov
icebp
imul
add
add
(bad)
mov
xor
mov
mov
(bad)
dec
and
inc
jp
jmp
repnz
add
add
outs
lds
jno
mov
jnp
bound
sar
cmp
enter
xor
add
add
dec
dec
pop
lods
mov
mov
ins
call
cmp
sbb
sub
add
add
shl
rcl
jge
sbb
mov
(bad)
cld
call
push
add
push
pusha
add
add
bound
mov
stc
pusha
mov
les
out
dec
push
push
inc
mov
add
add
add
neg
or
icebp
xchg
cmp
push
arpl
sub
mov
nop
jl
pop
add
add
xor
or
aaa
mov
inc
xchg
fimul
outs
or
call
cwde
add
add
fldcw
add
sub
dec
dec
pop
lds
jge
mov
in
ds
inc
inc
dec
mov
add
add
jne
inc
push
xor
aas
mov
outs
or
cmp
push
fisubr
add
add
inc
xlat
mov
lahf
jle
xlat
cmp
jp
add
lds
dec
push
loop
enter
dec
add
add
inc
adc
jae
int
std
dec
ret
(bad)
sti
cmp
or
scas
cmp
add
add
mov
sub
test
xor
and
in
dec
jo
dec
jle
ss
pop
inc
in
dec
bound
add
add
pop
ss
mov
rol
mov
inc
inc
dec
inc
(bad)
mov
adc
pop
rcl
pop
push
sbb
imul
add
add
ret
sub
pop
dec
xchg
aas
and
jo
mov
inc
outs
(bad)
push
adc
add
add
cwde
mov
sti
and
and
mov
arpl
sub
(bad)
jge
mov
gs
add
add
les
aas
push
repnz
xchg
dec
sti
imul
push
inc
movs
or
neg
add
sub
not
sub
pop
jl
mov
add
mov
jns
neg
shl
fiadd
push
add
add
mov
sub
or
pop
mov
aas
adc
inc
es
fcom
mov
add
add
(bad)
and
add
pop
xor
lea
adc
call
fadd
stos
xor
inc
add
add
add
push
pop
inc
mov
(bad)
std
(bad)
jmp
jp
loop
mov
and
cwde
dec
pop
sub
mov
add
pop
pop
xchg
jge
stos
dec
in
les
adc
xchg
inc
stos
pcmpeqd
daa
fmul
dec
cmp
add
add
push
jnp
inc
and
xchg
sbb
xor
add
push
pop
or
test
js
add
add
adc
push
and
push
mov
cmps
mov
push
mov
xor
(bad)
push
pop
test
add
add
push
mov
bound
push
adc
imul
push
(bad)
js
in
ins
mov
pushf
inc
add
add
cmp
pop
mov
cmps
std
jno
xor
dec
aas
test
scas
or
pusha
imul
add
cmp
add
add
sub
repnz
js
push
cmp
js
xor
out
(bad)
xor
popa
cs
rcl
add
add
or
sub
aam
adc
xchg
jle
or
nop
retf
xchg
pop
mov
cmp
test
add
add
jno
xor
enter
cmp
xor
fisttp
retf
push
dec
jne
bound
add
add
jno
inc
or
ret
cmp
xor
cmps
mov
and
and
add
add
loope
cmp
push
test
bound
ins
push
mov
sbb
jl
jl
loopne
add
add
dec
add
pop
ret
cmc
or
imul
xor
imul
sub
push
loopne
mov
add
add
bound
das
idiv
adc
into
push
sub
pop
jle
outs
cs
mov
add
daa
pop
lock
mov
clc
inc
dec
xchg
jmp
or
rcl
dec
add
add
jl
bound
jmp
je
xchg
data16
mov
rcl
add
sub
or
add
add
je
sub
sub
fcom
pop
jae
je
sub
push
inc
inc
inc
add
adc
retf
jl
test
jmp
ins
fdivr
jne
or
aas
jno
dec
dec
test
data16
add
add
in
nop
sub
mov
pop
adc
push
cs
inc
ins
xor
sahf
add
add
stos
adc
hlt
cmc
ja
or
sar
xchg
inc
push
fild
push
or
sbb
outs
mov
cmc
xor
sti
nop
dec
pop
(bad)
push
and
je
jl
inc
das
push
cdq
inc
inc
ret
inc
cmp
add
add
jge
dec
mov
push
and
and
xlat
scas
shr
sub
pop
push
mov
add
add
ins
and
adc
xchg
adc
cmps
fistp
inc
shr
push
pop
lods
shl
add
add
mov
pop
xchg
jb
pop
xchg
jno
int3
sub
pop
inc
sbb
(bad)
nop
mov
es
add
add
fidivr
sub
dec
sub
ins
js
fisttp
popa
jl
jns
movs
push
cmp
aas
rol
add
mov
popa
adc
jge
stos
cwde
retf
xor
or
sub
xor
xchg
or
adc
sahf
dec
scas
add
add
xchg
xor
sbb
gs
(bad)
and
xchg
jl
sub
mov
pop
cmp
stos
inc
stos
jb
add
add
sub
xchg
inc
and
sbb
dec
call
inc
shl
lahf
or
jecxz
fisttp
add
fbld
lea
cmc
jmp
sbb
outs
popa
add
adc
add
add
pop
mov
and
cs
stc
or
push
push
je
cmp
cmp
mov
adc
push
popa
clc
and
add
add
stos
pop
dec
stos
imul
xchg
xor
fist
aam
test
das
inc
dec
(bad)
cld
push
jmp
add
js
das
sub
pop
fnstcw
aam
adc
ret
sub
mov
xlat
in
cwde
ret
jo
add
add
mov
ins
dec
out
mov
and
jge
rcl
sub
nop
das
inc
les
mov
into
add
add
lahf
or
mov
sbb
icebp
pusha
mov
sub
cmp
arpl
add
add
pop
pop
and
and
jns
sbb
clc
mov
imul
jmp
add
add
push
add
xchg
stos
dec
ret
xchg
dec
push
test
sbb
aam
test
add
add
push
xchg
fs
jmp
push
xchg
loopne
dec
dec
push
and
add
popa
dec
xchg
or
cs
jbe
dec
inc
mov
test
call
cs
adc
clc
das
push
xor
movs
push
sub
push
pop
jl
push
cs
sbb
call
or
add
add
dec
pop
dec
mov
(bad)
lock
jb
sbb
mov
ja
inc
jmp
pop
out
or
inc
add
add
ss
mov
and
push
push
jmp
imul
ret
push
jle
mov
add
add
in
ss
and
adc
xchg
outs
es
sub
add
push
pop
bound
test
pop
jno
mov
add
or
loopne
sar
cmp
shr
lock
xor
ret
add
add
jle
inc
pop
fwait
jnp
and
pop
test
sub
push
and
sub
add
cmp
pop
arpl
test
stc
cmp
dec
push
dec
dec
jg
shl
sbb
add
add
outs
and
mov
lods
mov
pop
sbb
sub
and
add
add
jmp
add
and
test
bound
xchg
xor
cmp
dec
xor
pusha
fs
add
add
mov
ins
jp
lock
daa
ret
pop
retf
sbb
movs
or
leave
data16
add
add
xor
add
cmc
xchg
cmp
pop
test
push
pop
jle
vandps
xlat
jns
adc
xor
mov
dec
push
gs
inc
ja
lds
adc
mov
mov
add
cs
xchg
xor
ret
inc
test
test
rcr
pop
loope
sub
add
cmp
push
js
adc
ja
in
cmp
pop
pop
out
outs
ror
and
jns
dec
push
test
add
add
push
out
cmp
outs
stos
mov
push
and
sbb
pop
je
pop
ja
push
xchg
fnsave
ds
lds
add
add
lods
fimul
mov
xor
dec
sar
fsub
fisub
sbb
and
pop
push
imul
add
ins
push
jp
mov
arpl
jmp
data16
jns
cmp
imul
mov
add
add
inc
repnz
sbb
add
xor
xchg
(bad)
dec
imul
dec
into
inc
add
add
xlat
jle
sub
cmc
ror
call
(bad)
bound
dec
dec
pop
pop
bound
add
adc
in
inc
and
test
out
inc
pusha
mov
int3
test
mov
and
push
sahf
jbe
add
add
ds
or
xor
dec
bound
in
push
(bad)
pop
and
imul
add
add
les
test
jno
arpl
mov
xlat
push
inc
clc
sbb
das
movs
(bad)
mov
jge
add
(bad)
dec
in
mov
pop
popf
add
add
xchg
mov
jecxz
mov
inc
jg
add
add
inc
cld
xor
js
rcr
test
dec
and
sbb
pop
cmp
add
add
sub
imul
cmps
mov
out
push
lea
and
out
les
add
add
xor
pop
sub
dec
ins
jne
adc
sbb
jmp
inc
in
adc
add
add
add
sub
or
cmps
xor
fldcw
add
jne
inc
das
add
push
add
add
lock
xor
pushf
cmp
push
inc
clc
jns
adc
ja
sbb
sub
inc
mov
inc
mov
inc
and
jmp
add
es
daa
push
arpl
xchg
loope
jl
add
add
mov
xchg
push
call
push
xchg
inc
dec
jle
loopne
movs
pop
cld
push
pop
lods
pop
mov
push
add
add
repnz
push
pop
cs
xchg
cmp
scas
sbb
add
jmp
ins
pop
in
and
add
add
xor
cmc
or
(bad)
push
popa
ins
je
mov
push
retf
cmp
push
push
add
add
jne
inc
sar
sahf
inc
mov
cwde
xchg
xchg
fcom
test
push
rcr
nop
add
cli
or
js
or
cmp
inc
or
jge
jge
hlt
xchg
sti
js
clc
loop
or
lock
add
add
addr16
cmp
dec
cs
pop
mov
push
jno
daa
mov
(bad)
dec
test
jge
add
add
xor
push
adc
xchg
fwait
pop
aaa
icebp
mov
icebp
mov
jnp
pushf
inc
jmp
add
add
mov
ret
dec
les
push
pop
sub
mov
inc
add
add
out
test
mov
xchg
add
sbb
inc
dec
push
xchg
imul
inc
dec
add
add
jecxz
pop
in
test
pop
adc
mov
jns
xor
ret
dec
jl
sub
push
add
add
and
inc
test
pop
popa
sbb
cmps
pop
or
sbb
gs
(bad)
cli
add
add
lds
xor
fld
pop
(bad)
pop
add
adc
sub
lock
pop
xor
add
add
pop
cdq
dec
pop
sub
ror
push
push
test
xchg
and
mov
sub
cmps
add
add
dec
mov
add
xor
lds
sar
lock
adc
jl
mov
add
add
xbegin
pop
and
mov
std
xchg
ror
ret
or
jl
add
add
push
shl
jns
sub
mov
ret
pop
in
call
scas
icebp
add
add
inc
rcl
mov
dec
push
clc
(bad)
pop
sub
retf
mov
adc
dec
mov
add
add
mov
in
ja
and
cmp
shl
popf
imul
add
pop
fs
popf
add
push
pop
stos
test
pop
stc
mov
dec
bound
xchg
add
add
push
cmp
pusha
fadd
cbw
jp
inc
xor
fs
shl
jns
cmp
mov
ret
hlt
call
jge
sub
lock
and
or
dec
ret
pop
and
fadd
mov
add
add
ret
dec
push
rol
xor
mov
mov
xor
mov
cs
ss
fnstcw
movs
add
add
es
fidiv
dec
mov
leave
pop
dec
dec
push
sbb
sbb
inc
jecxz
xchg
inc
push
icebp
das
add
add
add
icebp
aas
das
sub
sub
lods
sub
inc
movs
cmp
outs
cmc
es
scas
(bad)
push
add
cwde
sub
xchg
out
mov
data16
and
sub
adc
out
adc
add
add
add
scas
or
cs
test
mov
call
mov
xchg
enter
add
add
inc
cmp
(bad)
fsubr
adc
loopne
and
sbb
(bad)
adc
jno
cmp
add
add
test
and
sbb
js
xor
std
cs
and
jle
or
add
add
ret
in
and
and
xchg
mov
xor
test
popa
jg
ficomp
push
add
add
test
stos
fwait
add
outs
fisubr
cmp
inc
stos
push
fisttp
outs
jl
jge
imul
add
add
and
mov
dec
bound
push
sub
cmp
bound
pop
ror
add
add
(bad)
sub
test
ss
rcl
sub
pop
and
ins
ins
test
sub
add
add
hlt
movs
scas
cwde
or
sub
push
jo
(bad)
cs
daa
das
popf
test
test
mov
add
add
jmp
mov
push
dec
pop
or
js
stc
xor
sahf
hlt
sub
add
add
daa
jecxz
dec
cwde
(bad)
(bad)
jmp
inc
sub
movs
mov
jo
nop
lock
scas
adc
add
add
dec
mov
pop
or
cmp
loopne
in
loopne
stos
cmp
pop
add
add
sbb
lods
ins
mov
mov
test
ins
stos
xchg
mov
cmp
test
mov
add
add
xchg
or
adc
movs
pop
test
js
xor
and
sbb
ret
ins
inc
pop
cmp
add
push
mov
and
cmps
sub
add
dec
lea
dec
dec
retf
push
add
in
add
add
repz
fsubr
es
mov
adc
dec
ret
push
ret
push
add
add
mov
jg
or
xchg
sbb
sub
mov
dec
dec
hlt
scas
scas
push
cmp
icebp
and
inc
adc
add
add
push
popf
pop
leave
dec
sbb
fild
add
xchg
aaa
js
rcr
push
in
push
hlt
adc
jp
add
add
pop
pusha
push
outs
adc
dec
leave
sar
(bad)
adc
pop
in
push
lods
inc
ret
ds
sub
es
push
add
dec
jg
push
fwait
retf
inc
pop
cmc
add
ins
aad
scas
mov
dec
mov
movs
ret
jecxz
clc
push
add
add
mov
push
sub
popa
xchg
cmp
repnz
loope
test
or
xor
repz
or
add
push
test
(bad)
dec
jb
pop
out
xchg
ja
les
adc
or
pop
sub
add
add
inc
jp
xor
test
pop
and
daa
retf
mov
bnd
push
mov
sbb
add
add
push
or
lahf
imul
adc
call
aas
sub
repz
jae
in
add
neg
aas
pop
inc
jno
jnp
imul
jp
jno
popf
fisub
fisub
mov
add
lahf
or
or
mov
imul
in
and
and
dec
dec
cmp
mov
add
jp
pop
cmp
shl
xor
cmps
or
movs
lea
sar
cmps
mov
add
add
rep
dec
shr
cli
or
xchg
pop
sub
lods
scas
sbb
mov
add
add
push
inc
pop
sbb
mov
lea
sub
or
shl
mov
mov
das
cmp
imul
dec
sahf
jnp
leave
shr
and
push
add
add
stc
mov
icebp
sub
sub
sub
daa
ins
rcr
aad
ins
jno
and
add
add
dec
aad
and
sub
inc
test
sar
call
or
add
add
add
add
xor
and
sub
cs
xor
mov
xchg
call
xor
add
add
inc
inc
mov
push
mov
sub
jg
fld
fidivr
inc
rol
and
cmp
sbb
aam
add
add
and
cmps
cmp
inc
dec
ja
xor
xlat
pop
inc
inc
aam
dec
ins
ss
inc
mov
add
push
sub
xor
dec
add
mov
bound
clc
loop
ins
bound
adc
xor
add
add
dec
push
mov
rol
addr16
fiadd
and
xchg
and
mov
add
add
inc
xor
inc
ret
popa
jb
movs
cmp
dec
pop
arpl
lods
xchg
xor
popa
sub
add
add
fs
lods
dec
push
push
fild
cdq
(bad)
mov
cld
cmp
mov
jmp
add
add
mov
xor
lods
or
sbb
mov
jmp
fisubr
mov
add
add
rcl
inc
push
imul
inc
sbb
jns
iret
jo
in
push
xor
and
pop
mov
add
ja
adc
xor
arpl
dec
sub
and
sub
dec
les
add
add
jne
xor
imul
push
dec
loope
outs
or
test
outs
call
cld
or
add
add
push
scas
xchg
pop
sub
and
std
cmp
jp
mov
add
add
bound
dec
ja
pop
sub
adc
adc
mov
jecxz
int
ret
ja
addr16
fild
and
add
add
xor
jmp
sub
movs
cmp
mov
pop
cmp
mov
cs
add
inc
clc
imul
add
push
push
outs
or
dec
test
imul
and
(bad)
pop
cmp
add
add
mov
xor
xor
cmps
pop
dec
pop
out
pop
adc
add
add
test
dec
ds
pop
inc
push
pop
add
dec
jbe
xchg
ins
icebp
fisttp
pop
push
loope
js
add
add
dec
mov
sub
cmp
aam
je
(bad)
fistp
dec
daa
push
pusha
xchg
jae
pop
and
mov
dec
cmps
mov
je
lods
cmps
fs
sbb
popa
jno
fist
aas
mov
push
pop
add
add
fild
outs
jbe
push
and
jno
mov
add
inc
je
daa
loope
jne
jge
pop
cld
push
mov
cmps
inc
add
add
inc
pop
jae
cld
xor
push
push
sub
fs
popf
daa
sub
mov
inc
lds
add
test
retf
inc
ret
je
push
jne
push
cmp
fsubp
sub
and
jo
or
add
add
and
mov
sub
and
adc
fcmovbe
sub
dec
and
jnp
add
add
ret
daa
cmp
xor
xchg
push
push
aad
xchg
js
ins
cmp
test
js
inc
add
add
push
sar
aad
stos
push
fdivr
(bad)
cmp
push
dec
(bad)
in
inc
dec
call
nop
cmps
add
add
jno
stc
sub
dec
std
es
add
mov
sub
jge
push
cmp
xchg
ds
add
add
mov
clc
movs
rcl
jmp
js
dec
sub
xchg
adc
jl
pop
fild
add
add
je
mov
arpl
(bad)
sub
jnp
xor
pop
pop
and
xchg
add
add
ds
pop
xchg
sub
xlat
and
nop
mov
cmc
repnz
jge
add
pop
pop
sbb
dec
adc
add
add
sub
or
fs
in
jp
fisubr
xor
jl
test
add
add
test
adc
aad
and
push
adc
push
add
xor
stos
mov
jae
add
add
sub
jg
inc
in
jecxz
mov
out
pop
outs
adc
loope
inc
dec
inc
jmp
(bad)
cmps
mov
add
dec
repz
test
push
add
sub
add
cmp
test
bound
add
add
fcom
in
shl
adc
test
and
mov
jle
pminub
add
add
add
or
cmc
stc
jl
jmp
popf
stos
jecxz
and
mov
std
cmp
add
add
(bad)
xchg
test
jecxz
mov
mov
clc
inc
pusha
scas
adc
and
push
mov
inc
and
add
add
int3
mov
imul
adc
add
push
dec
aam
or
push
xchg
adc
add
add
jle
mov
ss
push
adc
and
adc
bound
ret
pop
and
dec
push
add
add
dec
pushf
in
test
pop
sahf
test
les
jp
stos
and
jl
dec
sub
sub
add
inc
sbb
xor
enter
loope
test
les
popa
or
sub
add
add
fmul
dec
out
rcr
sub
sub
(bad)
dec
adc
in
imul
add
mov
sub
fstp
nop
gs
movs
add
pop
mov
xor
add
add
mov
and
in
gs
retf
sub
retf
jae
push
sub
out
loope
add
adc
cmp
test
mov
or
add
add
rcr
pop
jnp
lock
push
inc
push
cwde
enter
push
xchg
test
inc
add
or
mov
shr
(bad)
lods
lods
mov
in
pop
cli
jmp
pop
popf
jmp
add
fdiv
leave
and
mov
das
das
call
sub
das
jmp
add
add
and
push
fild
jae
lds
dec
inc
es
aaa
cmp
cmp
cld
fsub
sar
add
add
inc
daa
jo
pop
pop
xor
into
data16
inc
inc
fs
pop
sub
sub
add
inc
nop
mov
pop
std
das
xor
mov
lods
mov
loopne
mov
inc
ds
push
(bad)
loop
call
add
add
inc
and
bound
(bad)
xor
push
sub
dec
mov
add
add
add
xor
jl
jne
popa
xchg
pusha
in
dec
mov
xchg
dec
pop
jg
movs
jecxz
mov
nop
sub
popf
inc
sub
lds
adc
push
xchg
xchg
retf
jp
xor
pop
test
add
jp
and
pop
ss
and
loope
dec
imul
inc
sti
adc
add
add
add
dec
repz
(bad)
aas
(bad)
mov
es
gs
shr
push
xchg
imul
add
add
push
fadd
adc
sbb
inc
cmp
dec
inc
les
adc
lods
ret
dec
xor
add
add
icebp
and
nop
outs
xchg
vmwrite
out
les
(bad)
push
lods
lock
gs
jo
xor
test
and
push
dec
push
or
push
or
ja
mov
adc
(bad)
daa
sub
push
lods
add
add
js
cwde
sub
mov
xchg
lods
dec
sub
dec
mov
push
gs
add
adc
or
add
add
sub
mov
mov
pop
aas
aas
retf
lds
xor
(bad)
fs
arpl
cwde
xchg
add
add
and
jmp
jne
shl
inc
mov
xor
mov
xchg
and
add
add
mov
dec
pop
loopne
ja
dec
stc
jo
dec
mov
and
ins
mov
aam
out
or
add
add
adc
or
shl
stc
das
(bad)
movs
push
arpl
ffreep
daa
xor
cwde
and
add
add
push
mov
dec
popf
push
adc
mov
pop
sub
mov
add
add
dec
rcr
xchg
or
xlat
jno
mov
fwait
pop
dec
dec
fnstenv
pop
sub
dec
inc
inc
add
add
sub
push
or
sar
mov
and
dec
outs
ret
jge
sbb
add
add
and
pop
pop
popa
sub
pop
sbb
add
dec
dec
ret
xchg
pop
mov
mov
loop
inc
mov
add
add
push
test
test
and
or
inc
jo
popf
add
and
pop
sub
sbb
add
add
loopne
call
imul
or
mov
add
fs
das
dec
cmp
inc
push
and
add
add
xchg
rcr
mov
jmp
nop
add
dec
sub
call
retf
lea
xor
sub
sub
pop
inc
test
mov
ror
cwde
add
add
mov
inc
fstp
mov
and
jecxz
test
adc
fwait
ins
jo
fs
imul
add
add
sub
test
mov
outs
jnp
aad
movs
hlt
pop
dec
gs
popa
shr
inc
mov
mov
add
das
push
cmpxchg
clc
jmp
lahf
jo
mov
and
inc
xchg
jge
add
add
cmp
in
add
inc
push
push
lock
daa
push
or
rol
add
add
add
xchg
imul
push
test
mov
push
push
push
mov
subps
add
add
pusha
jo
in
xchg
jle
push
js
pop
pop
repnz
dec
mov
aas
mov
pop
xchg
dec
cli
or
push
inc
mov
add
and
mov
ret
cmp
pop
ins
popf
mov
lods
fmulp
aaa
add
outs
jb
add
add
test
pop
retf
retf
mov
add
call
pop
jl
push
cmps
mov
(bad)
jnp
add
add
sub
lock
pop
xchg
mov
inc
daa
loop
dec
(bad)
add
add
mov
mov
lock
cmp
in
pop
add
or
not
push
push
in
add
add
test
add
xchg
inc
sub
jno
in
dec
aas
cmp
cmp
std
or
mov
add
add
les
pop
scas
sbb
xor
std
mov
call
inc
xor
inc
add
add
(bad)
loopne
in
inc
sbb
popa
cs
and
inc
push
fidiv
cwde
popf
gs
iret
das
mov
add
add
mov
hlt
push
adc
xor
inc
jno
jnp
and
fidiv
stos
dec
mov
push
adc
pop
add
add
loop
cmp
mov
xor
jl
sub
shl
pop
adc
push
add
les
sub
dec
inc
add
add
dec
dec
push
(bad)
mov
ret
test
inc
adc
mov
sub
xchg
cmp
adc
add
add
xor
jecxz
cld
sub
cmp
sti
sub
mov
in
or
jle
movs
call
rcr
xor
call
shr
cs
add
add
imul
and
inc
faddp
sbb
jl
sub
cmc
popw
or
sbb
mov
add
dec
push
dec
mov
js
fcom
and
adc
mov
adc
push
pop
popf
pop
(bad)
xchg
add
add
int3
ss
and
mov
dec
(bad)
nop
pop
cmp
add
or
mov
add
add
sub
push
ss
cld
or
cmp
cli
jle
adc
and
hlt
shl
dec
outs
loopne
cmp
xchg
mov
pop
push
and
or
outs
dec
das
shl
movs
cli
aad
inc
mov
add
add
or
and
rol
stos
xchg
xor
mov
or
push
sub
pop
add
add
imul
cdq
jg
out
addr16
mov
(bad)
dec
cld
call
dec
cmp
dec
add
add
add
sub
or
fldcw
mov
fs
push
in
sub
es
(bad)
jl
pop
jp
dec
out
adc
add
add
dec
out
adc
pop
loop
mov
call
je
mov
call
add
or
stos
sbb
pop
pop
das
cmp
xor
jno
(bad)
jp
pop
daa
movs
in
inc
fs
jmp
add
add
mov
das
inc
js
mov
ins
xlat
push
imul
popf
or
add
add
popf
and
leave
sbb
test
inc
mov
xor
aam
adc
mov
dec
jae
imul
add
and
shl
retfw
es
pop
inc
inc
das
push
jge
jbe
fild
add
add
pop
(bad)
clc
iret
dec
sub
or
jb
jnp
jl
mov
dec
and
inc
jl
cmps
pop
aaa
push
add
add
js
jg
jl
movs
retf
and
loope
push
hlt
popa
in
dec
and
dec
out
push
xchg
(bad)
jle
adc
add
cli
ret
pop
inc
cmc
inc
xchg
add
repnz
ja
and
test
icebp
add
add
inc
pusha
into
inc
call
loopne
ret
pop
pop
pusha
push
daa
imul
cli
add
add
jbe
pusha
jne
ds
inc
push
mov
jne
pop
cmps
inc
cmp
adc
adc
sbb
inc
push
push
into
add
add
stos
push
scas
mov
pop
je
movs
aam
ins
mov
popa
jne
les
stos
les
jle
fwait
xchg
add
add
pop
mov
pop
cwde
imul
push
dec
jo
jecxz
push
ss
stos
push
test
add
dec
sub
sub
jmp
xchg
or
ins
pop
inc
dec
bnd
mov
test
push
bound
add
inc
dec
dec
push
test
xor
fiadd
mov
sahf
(bad)
lock
push
mov
mov
ret
ficom
add
in
inc
mov
(bad)
pop
sbb
in
pop
rcl
test
and
xchg
mov
add
add
aad
dec
xor
and
push
out
or
jo
jge
wbinvd
call
push
add
add
pop
scas
inc
mul
cmp
enter
and
loopne
inc
adc
aaa
aam
sub
adc
aam
adc
add
add
and
shr
xchg
adc
js
mov
fld
sar
adc
aam
add
add
or
gs
xor
or
pop
clc
cmp
dec
add
adc
add
add
je
ins
add
js
jbe
push
jnp
mov
sub
add
jo
imul
add
add
sub
scas
cld
js
xor
hlt
cmps
mov
je
dec
mov
cmp
add
imul
mov
(bad)
imul
fwait
adc
ret
jg
adc
jge
test
mov
stos
add
add
sub
sahf
xor
push
pusha
dec
outs
call
push
sbb
cmp
cmc
jg
and
add
add
arpl
push
mov
pop
mov
mov
pop
fsub
dec
add
je
sub
add
add
sar
xor
inc
inc
xchg
les
les
jo
mov
int3
pop
aas
or
pop
add
add
add
jns
call
inc
inc
push
test
mov
dec
push
and
aad
popa
cmp
fcomp
add
add
jnp
daa
push
inc
dec
mov
ins
call
and
dec
and
push
pop
lods
lods
push
add
add
test
cmp
out
pop
pop
popa
movs
lahf
sub
xor
lock
pop
je
(bad)
xor
jg
or
add
add
or
xor
inc
dec
repnz
push
dec
ror
cld
pop
jns
mov
iret
dec
add
add
add
mov
bound
pop
jo
xchg
nop
lahf
bound
fwait
popf
jmp
push
test
pusha
lds
icebp
repz
jmp
iret
in
inc
push
jo
adc
lock
jmp
sub
add
add
enter
das
jp
pop
mov
jecxz
mov
sub
rol
pop
nop
sar
scas
xor
jbe
add
add
sar
and
jmp
shr
dec
js
sub
cwde
(bad)
mov
sbb
add
push
mov
dec
ror
xchg
fsub
and
or
mov
aas
loopne
cmp
add
xlat
or
push
test
ds
or
jo
sti
dec
cmps
xor
push
mov
(bad)
js
adc
add
add
addr16
jge
dec
jbe
cmps
xor
pusha
adc
jae
cli
cld
int
je
gs
daa
pop
sub
add
add
je
daa
push
add
and
aaa
inc
sub
lea
and
or
cs
sub
pop
add
add
loope
sub
mov
push
stos
pop
js
dec
sbb
cmc
xor
imul
add
add
jg
xchg
jmp
pop
lods
push
dec
mov
popa
sub
cs
or
xor
xor
push
add
add
and
cmp
shl
fsubr
xor
xor
push
loopne
imul
gs
dec
pop
dec
mov
mov
and
rcr
lods
scas
popf
add
add
and
and
fwait
lods
lea
mov
in
pop
loope
jnp
fild
mov
out
or
je
xor
add
cmp
push
daa
push
mov
push
cld
adc
mov
inc
std
ins
popa
inc
add
add
jl
pop
adc
and
lds
retf
jb
movs
add
les
add
add
lods
out
ret
xchg
dec
sbb
pop
push
int3
ss
ins
loope
jle
imul
cmp
scas
mov
mov
gs
jg
push
dec
pop
aaa
les
popa
daa
and
mov
add
add
adc
sbb
pop
icebp
fdivr
dec
mov
fisttp
pop
dec
jo
push
push
add
add
test
icebp
push
sub
add
adc
dec
std
ds
push
cmp
push
and
push
add
add
push
bound
pusha
mov
aaa
inc
icebp
sub
add
leave
ins
jg
(bad)
sub
add
add
dec
icebp
das
and
cmp
xchg
mov
les
pop
xor
ret
inc
mov
mov
add
add
xor
sub
shl
dec
or
push
mov
inc
movs
pop
arpl
ror
mov
aad
add
add
xchg
les
(bad)
mov
rcr
jl
and
inc
inc
(bad)
lock
mov
add
add
(bad)
mov
ins
jmp
sub
(bad)
mov
scas
jnp
sub
add
add
push
jno
jnp
cmp
or
jns
cmp
and
call
popf
frstor
add
add
mov
mov
and
mov
and
fcmovb
push
clc
outs
dec
xchg
pop
or
push
add
add
push
pop
jge
retf
adc
xchg
jl
fmul
ja
(bad)
jae
fsubr
dec
add
add
adc
xchg
bound
(bad)
jp
jecxz
sbb
push
jp
inc
fwait
xor
add
add
add
test
arpl
outs
ret
xlat
dec
daa
push
mov
xchg
pop
mov
jo
mov
mov
add
add
(bad)
adc
mov
popa
outs
outs
inc
xchg
stos
retf
test
inc
mov
mov
push
inc
xor
sub
out
and
add
add
cmp
dec
xchg
stc
or
mov
mov
ret
sub
jl
cmp
push
jbe
and
add
add
dec
cmp
pop
cdq
and
sub
mov
and
das
std
sub
add
add
inc
and
movs
push
sub
test
call
mov
pop
add
add
fsubr
push
sub
daa
push
lods
mov
push
pop
mov
js
sbb
mov
push
add
add
mov
loop
push
inc
and
or
pop
outs
jns
sbb
inc
sbb
(bad)
and
sbb
add
add
cmps
js
daa
test
adc
movs
cmp
into
cmp
(bad)
cli
imul
lds
mov
mov
push
cmp
inc
out
push
es
and
dec
push
cmp
out
test
xor
add
add
inc
in
inc
xor
scas
mov
mov
add
ss
adc
inc
add
add
pusha
cmp
push
adc
and
mov
das
imul
xor
inc
sub
add
add
sbb
cmps
pop
sub
shl
xor
mov
jp
xor
push
mov
add
or
mov
in
call
push
pop
cmps
bound
mov
fistp
sub
add
add
daa
jg
es
mov
daa
inc
scas
fbld
dec
loopne
loope
test
ss
add
ins
bound
and
inc
cmp
outs
cli
push
jmp
jmp
and
push
arpl
pop
push
push
add
add
movs
mov
add
pop
xchg
add
inc
inc
pusha
push
pop
mov
cmp
jno
mov
add
add
outs
les
stos
test
sub
loop
bound
mov
push
imul
test
stc
in
add
add
push
jmp
xor
dec
fcom
jno
push
cmp
or
daa
clc
arpl
add
add
cmp
add
pusha
xchg
sbb
dec
add
stos
sbb
cmp
mov
add
add
outs
sub
push
sub
jg
test
mov
sub
adc
pop
push
pop
call
add
add
aaa
les
in
pushf
imul
inc
cmp
frstor
dec
ds
pop
add
add
cmc
outs
(bad)
les
mov
push
push
and
push
in
pop
into
dec
test
bound
ins
outs
fist
cwde
push
pop
adc
outs
fnstsw
hlt
inc
add
arpl
sub
add
add
jp
mov
adc
mov
jle
jmp
fisub
popa
pop
xor
mov
add
add
sub
mov
xor
jl
mov
sbb
inc
mov
mov
add
xor
ss
mov
jbe
sub
push
fs
inc
std
dec
lock
dec
pop
pop
out
cmps
shl
add
ds
dec
pop
pop
loopne
test
push
ret
dec
jmp
cmps
push
bound
mov
add
in
and
stos
movs
in
fidivr
lahf
inc
sub
shl
jno
arpl
add
pop
adc
add
jle
and
frstor
cmp
inc
xchg
sub
dec
gs
and
xlat
add
add
pop
adc
cld
xchg
and
or
inc
clc
jb
xchg
or
jecxz
int3
test
add
add
push
sub
test
dec
inc
add
clc
nop
mov
push
xchg
test
xor
mov
add
movs
lock
push
bound
mov
push
adc
and
xchg
push
dec
push
sub
jno
addr16
and
add
mov
dec
call
test
ficomp
arpl
hlt
mov
push
adc
add
add
test
xchg
int
fdiv
xchg
jb
pop
jp
dec
push
das
inc
jbe
adc
cmp
adc
dec
sub
jl
sbb
dec
inc
dec
mov
cmp
mov
xchg
sbb
xchg
aad
or
add
add
mov
sub
and
push
pop
push
retf
mov
push
push
imul
add
add
scas
arpl
mov
fild
cmp
jle
daa
fidivr
mov
dec
pop
pop
cli
add
add
popa
sar
shl
jnp
sbb
or
(bad)
(bad)
xlat
jmp
int3
add
add
sub
(bad)
ja
jmp
mov
aas
ret
inc
shl
mov
add
add
mov
daa
mov
(bad)
push
mov
sbb
add
idiv
add
add
push
sahf
and
push
stc
out
push
mov
xchg
mov
pop
sub
or
push
mov
pop
ud2
mov
inc
or
adc
dec
dec
outs
and
(bad)
sub
mov
add
add
pop
icebp
lods
popa
inc
xor
xchg
or
mov
repz
inc
push
pop
loope
inc
xor
(bad)
add
add
cld
push
daa
push
or
push
mov
pop
xor
dec
test
mov
imul
jb
add
add
adc
xchg
test
jp
das
xor
ret
fwait
cmc
inc
sbb
add
add
popf
in
shl
stos
push
in
jb
imul
int
pop
xor
mov
loopne
(bad)
mov
dec
add
add
jg
lds
mov
aas
add
loopne
push
bound
cmp
and
lods
adc
add
add
jo
je
inc
ins
dec
pop
mov
cwde
inc
pop
inc
mov
mov
sub
mov
add
add
or
je
and
xor
fs
clc
jo
outs
aam
inc
sub
mov
add
add
(bad)
jo
xchg
xchg
mov
xor
cmps
pop
dec
call
jmp
pop
pop
add
add
fs
shl
clc
aad
fisub
aam
push
rcl
add
xor
les
outs
xor
add
add
xor
retf
not
rcr
cli
lds
adc
push
sbb
or
pop
fld
add
add
push
sub
and
sub
push
adc
add
inc
adc
call
add
add
sub
push
xor
pop
lds
(bad)
retf
pop
mov
xchg
sbb
add
inc
add
add
leave
jbe
add
outs
je
jne
mov
jb
mov
dec
pusha
aaa
imul
jg
push
push
lods
jg
je
loope
inc
cmp
imul
add
push
lock
add
add
retf
cmp
call
push
pop
data16
popa
jb
inc
cdq
call
dec
in
inc
pop
pop
add
add
mov
and
popf
push
call
popf
rcl
dec
cld
push
sub
and
ins
dec
or
add
add
xor
or
es
and
dec
sub
iret
cmp
movs
mov
lods
bound
add
add
mov
lock
mov
or
sub
push
outs
jmp
xchg
pop
inc
add
add
in
test
add
fadd
inc
add
jne
fsubr
test
mov
add
jmp
sub
dec
inc
jle
movs
js
loop
cmp
jp
jne
pop
leave
shl
add
add
dec
sbb
loope
jmp
ja
and
sub
jp
dec
pop
mov
imul
inc
dec
inc
mov
or
mov
movs
rol
push
fisubr
add
add
inc
dec
fild
cmps
fiadd
inc
inc
adc
mov
dec
push
pop
enter
sub
mov
sbb
ss
out
(bad)
les
cs
call
xchg
pop
icebp
dec
adc
add
add
adc
mov
popa
mov
mov
ds
lock
es
xlat
mov
and
and
or
jo
xchg
daa
daa
fmul
and
data16
ficomp
xchg
push
cmps
aad
jnp
and
mov
lods
test
adc
dec
xor
inc
out
inc
mov
add
add
dec
gs
aas
test
cmp
push
adc
add
ret
test
add
test
add
ret
dec
push
sub
jns
cmps
push
dec
nop
sub
repz
inc
push
loop
xchg
loop
aam
add
add
das
push
cmp
clc
lea
clc
ja
pop
cmp
mov
jge
aam
inc
jl
mov
add
add
cmp
movs
or
shl
loope
cmp
mov
pop
pusha
(bad)
jl
nop
adc
jp
add
add
mov
xor
inc
iret
scas
les
adc
dec
shr
or
js
loope
dec
xchg
or
jmp
add
gs
loop
pop
test
or
dec
fbld
jp
mov
cmp
inc
add
add
popf
dec
repz
test
repnz
jge
xor
imul
mov
sub
test
int
add
add
in
adc
inc
mov
mov
iret
push
push
xor
movs
inc
mov
aad
pop
add
add
mov
imul
mov
push
pop
mov
mov
loop
jge
jg
lds
pusha
mov
mov
lds
push
or
xor
cmp
pop
mov
pop
sti
or
pusha
lods
jne
retf
add
add
test
xchg
cmp
cli
push
xchg
mov
sbb
or
adc
jae
imul
add
inc
dec
jnp
daa
inc
loop
jmp
gs
jno
xor
stc
pop
sub
sub
fbld
inc
cli
rol
add
add
inc
dec
pop
bound
daa
ror
mov
data16
cs
adc
push
mov
mov
add
jmp
jle
pop
dec
jmp
inc
nop
cmp
mov
imul
push
xlat
mov
pop
jno
fisttp
sub
into
cmps
bound
(bad)
mov
jo
cld
bound
add
add
jae
sub
push
(bad)
enter
(bad)
dec
push
test
loopne
gs
iret
dec
jl
push
add
add
hlt
cli
ds
dec
pop
sub
aam
jmp
fld
(bad)
mov
scas
test
add
add
pop
pop
retf
add
jge
jmp
sub
ret
jo
sub
and
arpl
add
pop
xor
loopne
dec
jmp
mov
retf
rol
push
fdivr
stc
push
inc
cmp
add
add
add
add
dec
cdq
mov
inc
pop
loopne
sbb
and
and
xchg
(bad)
fsubr
add
add
out
or
cs
mov
mov
inc
inc
xor
dec
stc
add
add
inc
pop
mov
out
and
and
fist
mov
inc
add
add
cmp
pop
pop
adc
sbb
int3
sbb
push
inc
mov
mov
sbb
cmp
xchg
and
cs
push
iret
stos
add
jns
out
mov
cmp
and
mov
(bad)
jmp
das
aaa
jno
add
add
aas
std
cld
js
jns
jnp
push
dec
jg
retf
push
repz
fcomp
stc
jle
adc
add
clc
hlt
imul
mov
mov
and
sub
pop
adc
sub
xchg
add
add
cmp
dec
inc
pop
pop
inc
xor
mov
mov
lock
or
inc
adc
sub
movs
mov
dec
jmp
(bad)
dec
(bad)
lahf
inc
popf
jae
arpl
ror
pop
(bad)
xlat
xchg
dec
ret
inc
out
ja
sti
mov
add
add
out
pop
inc
or
jbe
and
adc
xchg
sbb
dec
data16
add
test
jle
sbb
push
push
mov
(bad)
int3
aad
rcl
outs
jp
or
ret
add
add
or
fisttp
mov
push
js
push
gs
xor
cmps
not
loopne
inc
clc
push
pop
sbb
ins
jbe
add
add
sbb
clc
lds
and
or
pop
jmp
and
sub
mov
add
add
cmp
mov
pop
dec
pop
add
ins
jo
inc
mov
outs
test
cli
mov
push
add
add
mov
das
xlat
mov
dec
push
ja
test
push
xchg
jmp
mov
test
movs
push
add
add
cmp
outs
or
repnz
loop
jg
imul
inc
lds
in
cmp
add
add
xor
imul
xchg
cmp
icebp
pop
push
pop
xor
cmp
cmps
ret
in
je
add
add
addr16
push
sahf
sub
sti
adc
loope
add
xor
inc
fiadd
pop
loope
cmp
or
mov
inc
push
test
xor
inc
scas
les
add
repz
test
mov
add
add
js
(bad)
mov
jno
and
add
inc
ds
sbb
and
inc
sub
cmc
sbb
add
add
test
clc
(bad)
ds
lods
dec
lahf
pop
mov
mov
imul
loope
(bad)
(bad)
and
rcr
xchg
xor
cmp
sub
mov
inc
xchg
pop
pop
daa
cld
leave
cmp
shr
add
add
sub
jp
pop
retf
sub
push
push
lea
sub
and
jne
jmp
add
add
test
imul
in
lea
scas
jg
sub
inc
inc
mov
imul
add
add
mov
or
std
and
cmp
jmp
sub
xor
dec
std
(bad)
pop
scas
add
add
push
jno
push
call
imul
cs
mov
cmps
test
add
movs
jo
mov
sub
ins
repnz
mov
sti
jle
push
jne
and
add
add
mov
pop
sbb
xor
mov
adc
cmp
repnz
adc
dec
loope
movs
add
add
xchg
popa
mov
(bad)
inc
inc
stos
sub
xchg
cli
popaw
cs
cmp
cs
outs
mov
(bad)
jg
add
add
dec
mov
loope
sub
das
test
sub
retf
lock
daa
daa
dec
add
popf
sub
sub
inc
popf
or
div
adc
out
xchg
js
pop
xor
add
add
sub
aad
adc
cmp
dec
xor
loope
out
adc
and
fistp
dec
add
add
jne
cwde
sub
or
or
jno
sub
pop
sub
mov
outs
(bad)
aam
add
add
retf
or
rcr
dec
aad
aad
and
inc
sub
mov
in
add
add
js
add
aaa
sub
pusha
sub
daa
(bad)
call
nop
dec
addr16
daa
add
add
ss
add
sbb
dec
push
lods
and
dec
cld
leave
adc
inc
lds
and
add
add
ja
psubusb
push
or
adc
jg
push
push
pop
test
ficom
xor
xor
mov
ds
inc
xor
adc
je
sbb
and
sub
repnz
push
push
lock
push
add
add
bound
jg
cli
mov
jbe
mov
ret
jl
inc
push
push
jmp
xchg
ss
add
add
shr
and
sub
sub
popf
or
push
cwde
movs
dec
jp
dec
ret
inc
and
add
add
cmc
inc
and
mov
adc
les
push
add
mov
rcr
pop
aas
lods
add
add
cmp
jb
and
add
pop
inc
cli
out
mov
inc
imul
sbb
ja
jo
add
add
sub
pop
push
mov
lods
pusha
xchg
ds
test
ins
mov
sub
add
add
cdq
gs
push
iret
xor
mov
and
add
out
xchg
cmp
mov
add
add
outs
adc
dec
ror
mov
pop
loope
jle
push
inc
fsubr
push
jg
push
retf
add
add
mov
add
call
sub
cmps
and
rcr
add
dec
push
jg
loop
jno
and
hlt
mov
pop
pop
sbb
pop
pop
adc
xlat
ins
les
add
add
dec
mov
mov
es
adc
scas
inc
jbe
push
aad
mov
dec
dec
cmp
inc
enter
add
push
cmp
push
mov
sbb
aas
stc
push
pop
xchg
ja
test
add
adc
add
add
loope
inc
jae
mov
sahf
dec
or
adc
and
(bad)
lock
outs
adc
add
add
pop
bound
add
pop
sub
retf
or
stos
adc
adc
fwait
es
rcr
push
jo
adc
cwde
movs
mov
dec
hlt
pop
mov
adc
mov
xchg
pop
add
add
ja
sbb
test
push
mul
ret
shr
test
xchg
add
add
push
or
xor
js
mov
ds
out
xchg
loope
xor
daa
mov
pop
arpl
add
add
and
cmc
mov
add
dec
dec
std
scas
pop
mov
inc
xchg
cld
dec
pop
jno
and
add
add
shr
mov
cmp
pop
ins
dec
stos
mov
xor
shl
loope
push
add
add
frstor
push
jmp
dec
loopne
je
jo
inc
sub
pushw
add
add
inc
icebp
push
and
and
popa
popf
cmp
fidivr
sub
popa
loop
cmps
aam
sub
and
dec
xor
gs
dec
outs
in
(bad)
pop
or
test
clc
push
pop
mov
hlt
inc
push
nop
add
add
cmp
pop
mov
and
mov
rol
sub
mov
xor
retf
ret
iret
movs
add
add
hlt
sub
push
ja
shl
fs
call
jle
push
mov
dec
xchg
loopne
bound
add
add
lock
mov
scas
test
xor
leave
xor
cmp
push
cli
mov
and
add
push
mov
xchg
and
mov
push
pop
push
ja
xchg
dec
and
cld
cmc
mov
add
add
inc
and
sub
mov
cmp
test
pop
aam
out
adc
add
inc
sub
cs
inc
outs
push
lds
push
mov
shr
add
mov
or
dec
or
push
ds
pushf
xor
pop
shl
xchg
pop
aam
mov
add
add
lock
and
sub
icebp
mov
mov
cmp
loop
std
mov
push
add
add
push
xchg
loop
mov
movs
push
push
mov
dec
gs
(bad)
xchg
adc
lds
or
inc
mov
test
add
add
cmp
fistp
jb
ja
and
test
icebp
dec
icebp
fwait
sub
or
cmp
push
icebp
nop
call
mov
mov
cmp
call
test
mov
arpl
mov
cdq
add
add
popa
mov
mov
adc
mov
lds
test
lock
or
js
cmp
repz
add
add
retf
retf
add
mov
leave
ins
sbb
test
sub
or
add
add
mov
ds
les
mov
(bad)
xor
lea
push
jl
aas
loopne
and
add
add
inc
shr
cli
dec
xchg
stc
aas
add
jl
loop
movs
push
fsubr
push
add
add
dec
adc
jae
lahf
xchg
push
cld
pop
ins
mov
cmps
push
fadd
test
clc
sbb
add
cs
dec
sub
dec
movs
out
cli
test
sub
jecxz
dec
sbb
pop
sahf
fwait
dec
add
inc
push
add
add
stc
dec
dec
add
cmp
stos
add
xor
push
inc
or
mov
outs
add
add
jnp
or
push
cli
inc
dec
lods
test
xor
adc
lahf
mov
dec
pop
inc
add
add
dec
pop
mov
push
xor
icebp
fld
fwait
push
add
adc
inc
jnp
js
in
inc
mov
add
add
call
jb
and
pop
mov
lds
test
sub
cld
or
rcr
cld
jbe
sbb
pop
xchg
adc
add
mov
mov
xchg
add
add
dec
xor
xor
jmp
jl
das
cmp
xchg
push
test
and
add
add
call
sub
sub
bound
xor
xor
ret
les
add
add
add
pop
(bad)
enter
pop
lds
shr
lock
xchg
nop
pop
xor
scas
fadd
xor
add
add
outs
loop
pop
jmp
sub
jp
pop
ds
xor
loope
add
add
aam
fbld
xor
rcr
xor
mov
jp
sub
cmc
add
add
das
pop
push
loope
outs
ins
test
cli
les
ret
cld
cmp
cmp
ret
bound
imul
cmc
xor
inc
pop
movs
sub
xchg
lock
inc
cmp
mov
pop
sti
loop
add
add
jns
pop
pop
xor
daa
ins
pop
xor
pop
movs
xor
mov
mov
sbb
pop
mov
add
adc
div
cmp
test
mov
idiv
dec
(bad)
fdivr
add
add
fisttp
test
rcl
pop
lods
jbe
inc
xchg
push
test
lods
pop
adc
xor
add
ins
je
add
add
ror
pop
pop
jl
xchg
repnz
pop
jno
jl
jge
or
mov
xchg
add
add
mov
(bad)
retf
sar
shr
push
jnp
and
xor
pop
add
add
xor
mov
int3
sub
aaa
dec
test
sub
xchg
lods
mov
pop
jg
sbb
dec
in
sub
pop
in
pop
add
add
stc
xor
imul
add
lds
ss
rcr
shl
inc
push
dec
lods
inc
push
fild
add
add
test
push
mov
and
fs
adc
dec
adc
add
add
jp
mov
cmps
sbb
inc
fwait
and
aad
mov
lods
xor
call
add
add
mov
xor
xchg
dec
call
leave
movs
dec
daa
jp
push
dec
mov
add
and
into
xlat
dec
loopne
je
and
ret
xor
sbb
mov
and
add
add
dec
aaa
push
push
dec
push
pop
xlat
rol
retf
xor
inc
mov
rol
sub
clc
push
ins
jns
push
add
add
sub
cli
sub
mov
dec
adc
shl
dec
jne
pusha
fs
add
add
ret
inc
in
fwait
push
inc
sub
sti
lds
push
mov
pop
pop
bound
jnp
cmp
dec
add
add
push
out
adc
inc
pusha
cld
pop
mov
push
push
ins
enter
mov
lahf
push
imul
jp
add
add
or
xchg
sub
sub
push
aam
adc
paddsw
mov
dec
test
push
add
add
jmp
test
push
(bad)
mov
dec
rcr
adc
daa
push
or
jnp
stc
imul
aas
add
add
jb
push
push
in
jb
(bad)
mov
pop
es
and
js
cmps
or
inc
cmc
jl
add
add
imul
jp
mov
loope
and
retf
sub
pop
sub
add
add
or
das
clc
in
loop
mov
xchg
mov
movs
pop
mov
jae
fadd
xor
and
dec
and
xor
sbb
cwde
and
and
movs
rol
retf
add
add
inc
movs
aas
daa
fmul
sti
and
mov
mov
push
add
test
pop
pop
pop
stos
dec
mov
add
xor
mov
mov
dec
jge
cdq
or
shl
jecxz
lea
add
add
mov
ret
jecxz
push
dec
sub
pop
push
loope
ret
jg
xlat
add
add
add
cmp
lock
clc
push
mov
loope
and
adc
mov
jns
scas
and
add
add
ins
inc
sbb
ja
jp
adc
mov
mov
xor
xor
cwde
mov
add
add
les
mov
xchg
jae
jne
dec
std
sbb
dec
push
call
add
add
cmp
(bad)
sbb
(bad)
push
add
pop
dec
push
int
mov
das
push
inc
rol
mov
add
add
movs
cmp
mov
repnz
ds
push
bound
test
xchg
xchg
jmp
mov
xchg
stos
xor
xchg
pop
sub
and
stos
jnp
mov
sub
and
sub
add
add
std
popa
sub
mov
xlat
outs
shl
shr
daa
xor
cmp
loop
xor
add
push
cmp
jns
pop
xchg
enter
enterw
mov
xor
mov
inc
xchg
xor
add
add
dec
or
sub
addr16
pop
loope
popa
and
dec
sti
aad
mov
jle
inc
imul
add
mov
sub
lahf
xor
shl
ins
xor
cmps
and
pop
cli
push
push
push
or
jo
outs
dec
and
jns
in
and
and
dec
or
adc
inc
cmp
dec
je
add
add
icebp
mov
push
and
ins
js
fldenv
inc
xor
add
dec
xor
inc
sbb
pop
js
(bad)
and
add
dec
add
push
mov
les
add
retf
adc
das
adc
jle
iret
xchg
and
data16
dec
repz
add
push
add
add
xchg
inc
cld
fs
dec
data16
retf
push
jne
cmp
push
dec
outs
aam
movs
xor
add
add
and
cmp
jo
stos
push
xchg
cld
shr
ret
enter
ins
call
imul
lea
loop
push
jae
imul
loope
mov
or
adc
mov
add
add
or
inc
inc
inc
jo
push
pop
pop
mov
adc
mov
sbb
adc
lds
add
add
sub
jmp
jb
pusha
arpl
test
pushf
pop
fsub
jg
jg
pop
sub
mov
js
add
add
scas
cmp
pop
je
test
mov
jbe
sub
mov
ins
add
add
ja
add
xchg
(bad)
pop
jge
dec
aam
and
sub
pop
pop
lock
add
add
dec
push
push
call
(bad)
pop
dec
test
or
jmp
push
ret
add
add
jo
jp
popf
jge
js
pand
nop
jno
outs
or
inc
int
das
jo
xchg
fild
add
add
sub
test
cmc
push
and
lahf
loop
aad
add
push
test
sub
add
add
popa
(bad)
cmp
dec
inc
mov
add
inc
push
mov
je
cwde
cmpxchg8b
imul
add
add
or
xor
clc
mov
scas
jmp
sub
das
xor
push
test
pop
repnz
add
add
add
int
fadd
or
inc
mov
xlat
mov
in
hlt
jmp
jg
add
add
and
ins
jl
pop
ins
jb
or
fisubr
xchg
xor
add
add
jecxz
fist
push
pop
fnstenv
das
dec
jl
or
inc
jbe
add
add
mov
jp
sub
addr16
jp
xchg
mov
add
das
pusha
xor
pop
add
add
jb
jae
sub
mov
push
mov
arpl
cld
call
out
cld
push
hlt
sbb
xor
jb
add
add
add
cmp
sub
popf
ja
gs
fild
dec
test
add
push
fsubr
dec
mov
inc
mov
cli
(bad)
hlt
scas
ret
mov
jecxz
push
movs
mov
add
add
out
or
jne
pop
fst
sar
dec
mov
inc
mov
shl
nop
cmps
nop
test
ret
dec
dec
add
add
push
add
dec
add
sub
ds
lods
fsubr
loop
js
sub
mov
popa
add
add
imul
ret
cli
or
pop
xchg
jbe
pushf
fldcw
out
jg
les
dec
add
add
rcl
call
ins
inc
das
xchg
lea
sub
loop
popf
push
(bad)
xchg
loop
pop
jo
add
add
cmc
cmp
ins
sbb
popa
repnz
imul
dec
jge
sbb
mov
popa
sub
xchg
add
add
(bad)
mov
mov
dec
js
or
and
fs
jae
jge
pop
mov
popa
adc
add
add
cmp
mov
bound
inc
rol
push
in
shr
jbe
das
adc
xor
add
pushf
fisttp
std
imul
(bad)
push
mov
adc
jne
jno
in
or
add
add
rcr
int3
add
and
and
test
test
cmp
push
adc
xor
add
out
cmc
in
or
mov
jl
jmp
cmp
mov
mov
add
add
mov
xlat
leave
push
in
xchg
cmc
sub
sti
xchg
into
clc
sti
dec
mov
xchg
mov
je
popa
aaa
jbe
mov
mov
data16
jo
push
xchg
push
and
push
add
add
mov
fist
and
bound
sbb
adc
outs
sbb
adc
bnd
loop
mov
add
add
jne
inc
inc
addr16
mov
and
sub
punpckhwd
or
mov
xor
adc
icebp
add
add
jae
dec
mov
inc
jo
gs
gs
jnp
and
ds
sub
xchg
push
jo
add
add
cmp
and
lahf
jne
ins
or
ins
jo
cmp
icebp
fs
sbb
jnp
add
add
imul
push
and
push
ins
test
and
xchg
dec
je
add
add
lea
dec
xor
xchg
dec
loop
ficomp
out
mov
adc
das
or
jae
jo
add
add
inc
mov
push
daa
jo
push
inc
outs
push
aaa
hlt
movs
cli
mov
dec
loopne
stos
or
fs
mov
fdivr
xchg
loope
das
mov
or
lods
inc
inc
mov
ja
mov
adc
add
sbb
pop
xchg
imul
or
adc
push
and
dec
pop
outs
add
add
mov
inc
mov
jne
loopne
inc
add
or
xor
gs
xor
inc
add
add
pop
mov
fdivr
inc
lock
ficomp
and
xchg
cmp
dec
in
add
add
sub
sub
stc
aaa
jnp
adc
or
adc
jns
xlat
inc
xor
in
sbb
add
add
inc
push
call
fmul
pushf
jmp
mov
inc
pop
nop
push
inc
or
retf
add
cdq
ins
dec
mov
push
pop
fiadd
pusha
sub
xchg
and
daa
idiv
fdivr
popf
mov
aad
call
bound
pop
cwde
arpl
push
push
dec
sbb
fisttp
bound
add
add
pop
xchg
and
dec
popf
sbb
push
add
je
jb
inc
js
int3
jmp
outs
ss
add
add
add
xor
inc
sub
dec
aas
mov
outs
loopne
dec
push
and
add
add
add
ins
outs
sub
jno
jae
scas
fs
xchg
xor
cli
bound
jb
arpl
add
add
aaa
jmp
shl
adc
dec
loopne
and
ins
xor
add
add
cmp
je
lea
lahf
xor
xor
adc
cmp
hlt
jo
in
sbb
cmp
add
jmp
jmp
sbb
jae
outs
pop
imul
loope
cs
push
push
jg
sub
xor
outs
(bad)
repnz
fmul
jne
mov
inc
mov
xchg
and
add
add
sahf
ret
gs
je
inc
push
inc
jmp
sbb
mov
or
add
add
push
adc
cs
xchg
test
and
jne
cmp
pop
lods
jae
ins
aaa
or
add
add
pop
push
xor
gs
mov
retf
fs
mov
fistp
(bad)
sti
cmp
add
cmp
xor
mov
sar
fnstenv
fbstp
cmp
jge
xor
add
push
cmp
inc
sub
shl
cmp
loope
jns
jle
jge
adc
dec
dec
(bad)
push
or
push
add
add
jnp
adc
jae
mov
jnp
ins
in
jne
les
inc
jl
xor
in
imul
rol
add
add
data16
jnp
push
jae
xor
je
test
loop
pushf
xor
jo
jns
dec
add
add
adc
pop
jge
(bad)
add
mov
or
test
and
shl
dec
jb
mov
sbb
dec
or
sub
and
sbb
js
inc
sbb
outs
adc
push
sub
add
add
push
pop
daa
sar
jne
arpl
xchg
sar
inc
icebp
gs
(bad)
out
mov
add
mov
xor
popa
bound
dec
jo
sub
xor
in
ins
aad
mov
add
xchg
fidivr
push
adc
shl
and
adc
xor
sbb
push
add
add
leave
sbb
adc
test
ins
xchg
or
inc
jae
ror
or
add
add
(bad)
es
cs
add
and
jae
sub
and
enter
add
add
popa
addr16
mov
gs
sub
cmps
sbb
ins
jns
js
sbb
inc
adc
add
add
and
add
and
and
xor
cdq
pop
sar
jo
or
add
out
pop
cmp
jmp
movs
xor
push
cdq
fidiv
mov
add
je
adc
mov
add
cmp
mov
call
cmps
add
push
or
jo
add
add
add
dec
hlt
hlt
dec
loop
and
or
dec
or
in
inc
push
movs
or
push
(bad)
je
and
or
pop
add
jbe
(bad)
jne
mov
retf
es
push
dec
outs
inc
mov
add
sbb
and
and
ds
jbe
sub
addr16
dec
mov
inc
mov
jg
cmp
add
add
jns
or
mov
sbb
and
fs
dec
mov
imul
mov
push
adc
add
cmps
test
cmp
inc
lea
and
push
jge
sbb
ja
xor
das
jb
arpl
add
add
jns
jle
jl
xor
mov
or
inc
jne
and
adc
add
pop
loopne
push
mov
lods
jno
js
mov
dec
mov
(bad)
inc
pop
bound
add
add
test
or
ds
dec
mov
push
inc
(bad)
movs
mov
cmp
mov
test
sub
dec
inc
outs
dec
xchg
and
sbb
les
dec
leave
add
add
adc
xchg
xor
mov
push
(bad)
inc
dec
push
jmp
sbb
inc
inc
jge
inc
pop
sldt
add
dec
inc
dec
fst
mov
jle
push
push
jg
pop
mov
inc
fmulp
dec
inc
xchg
rcr
add
daa
mov
xchg
or
js
int
inc
scas
push
cmps
loopne
imul
mov
and
add
add
mov
outs
hlt
sub
je
bound
repz
mov
repz
mov
and
and
mov
(bad)
sbb
sub
test
outs
stos
and
(bad)
mov
movs
in
push
sbb
outs
out
add
add
sti
jp
imul
push
in
or
fdiv
(bad)
data16
ror
inc
les
add
adc
add
inc
add
mov
adc
hlt
ins
(bad)
jg
inc
jmp
add
and
add
add
dec
jg
inc
and
pop
jp
pusha
pop
xor
xor
jns
hlt
addr16
mov
add
add
cli
inc
mov
outs
retf
loope
pop
pusha
pop
dec
jno
adc
push
and
dec
push
add
add
inc
pop
cmps
sbb
or
xor
or
shl
pop
push
or
sub
xchg
and
retf
outs
adc
enter
add
loopne
inc
push
sbb
mov
and
jb
cmp
sbb
mov
adc
push
sbb
mov
adc
or
sub
xchg
lock
in
jb
es
adc
and
xchg
add
add
je
xor
enter
fs
mov
inc
pusha
and
and
jb
cmp
and
add
add
cmp
mov
mov
jb
cmp
or
sub
add
add
clc
or
in
jb
dec
add
and
xchg
jb
xor
les
cmp
and
xchg
add
add
or
in
ja
in
jb
cmp
and
xchg
aam
adc
push
sub
mov
or
add
add
xchg
hlt
enter
jb
and
fdivr
in
jb
cdq
inc
int3
daa
add
sldt
add
xchg
enterw
jb
cmp
in
jnp
inc
pop
and
xchg
pushf
enter
jb
cmp
sbb
add
add
mov
and
xchg
mov
jb
cmp
adc
xchg
adc
sub
xchg
jno
xor
add
add
ret
mov
and
in
jb
ds
pop
and
xchg
xchg
bnd
cmp
(bad)
xchg
add
add
imul
mov
cmp
pop
and
adc
add
jne
xor
add
add
xchg
and
jb
cmp
jmp
call
(bad)
ins
jb
cmp
sbb
mov
and
cli
hlt
bound
outs
add
add
jae
xor
(bad)
xchg
arpl
and
cmps
je
add
add
cmp
dec
and
mov
sbb
xchg
pop
and
cmp
(bad)
stc
imul
inc
mov
or
add
add
idiv
inc
pop
bnd
aaa
sbb
(bad)
xchg
addr16
jb
cmp
add
add
out
enter
jb
ds
jg
aas
xchg
fdivp
outs
cmp
sbb
mov
and
cli
jno
add
add
inc
repnz
xchg
(bad)
in
jg
mov
icebp
pop
repnz
aas
xchg
test
cdq
jg
fld
add
add
mov
xchg
(bad)
(bad)
in
jg
xchg
stc
aad
enter
cmc
cld
int
in
jg
in
add
add
stc
popf
pop
enter
mov
ret
jg
mov
xchg
inc
repnz
xchg
repz
retf
add
add
stc
stos
pop
enter
repnz
xchg
mov
(bad)
pop
enter
out
xchg
aas
xchg
xlat
cld
mov
add
add
in
jg
iret
inc
repnz
aas
xchg
lahf
cld
fisttp
jmp
add
or
push
loop
add
add
push
push
pop
adc
adc
add
push
and
pop
sub
adc
and
add
push
inc
add
add
and
and
or
pop
adc
push
pop
or
inc
mov
and
jb
adc
sbb
add
add
pop
inc
push
bound
xchg
add
mov
les
sub
mov
mov
sar
jns
add
add
lods
(bad)
int
es
imul
push
nop
mov
movs
fs
and
imul
and
xor
add
xor
mov
jb
icebp
inc
fs
cmp
jae
sbb
add
add
cmps
jl
or
or
in
mov
adc
pop
test
movs
cmp
add
add
pop
sub
push
adc
jae
cwde
je
loope
int3
pop
jo
aam
add
repnz
inc
add
add
add
add
out
adc
mov
or
sub
and
mov
and
add
xor
test
fld
std
add
sub
lock
adc
addr16
les
fst
and
add
add
sub
inc
enter
test
lods
dec
mov
xchg
mov
mov
and
xor
ja
popa
add
add
push
add
mov
les
pop
hlt
push
xor
add
fisttp
movs
(bad)
add
add
fdivr
(bad)
aad
mov
rcl
or
add
mov
mov
add
add
repnz
add
fiadd
test
fiadd
sbb
in
ins
push
mov
hlt
mov
add
add
ins
adc
add
(bad)
std
in
add
mov
add
sbb
push
arpl
psubd
add
add
or
and
pop
adc
dec
in
pusha
aad
jno
cmp
rol
add
std
add
add
add
or
xor
(bad)
leave
mov
mov
xor
pop
add
add
fild
or
cmp
fldenv
cmp
fidivr
push
add
enter
mov
add
add
and
les
mov
mov
sub
mov
add
and
or
xchg
das
adc
stos
sbb
sub
fadd
jbe
jno
add
add
add
adc
out
mov
mov
push
movs
in
lahf
xor
aam
call
xor
stc
out
add
test
xchg
sbb
or
ins
add
xchg
ins
fs
add
out
push
imul
popa
add
add
rcr
xor
test
pslld
xchg
push
mov
rol
or
mov
mov
add
add
jmp
mov
mov
frstor
sub
rol
mov
aam
add
add
pop
popa
mov
dec
into
sub
mov
add
inc
movs
fisttp
xchg
fadd
(bad)
(bad)
shl
add
(bad)
shr
imul
inc
mov
sar
sub
add
xor
add
add
or
fnstsw
add
daa
jno
add
mov
and
mov
outs
add
add
mov
add
stc
ficomp
cwde
leave
fldcw
and
mov
test
xlat
(bad)
pop
cmp
add
or
ins
mov
mov
call
shl
add
inc
aad
cmp
ja
popf
adc
push
add
jae
or
test
add
push
or
add
jmp
popf
dec
xchg
daa
scas
cwde
push
pop
mov
pop
jge
mov
add
xchg
add
add
add
inc
add
imul
add
jno
ins
sbb
(bad)
cmc
sub
aam
loopne
sub
mov
add
add
ficom
int3
add
outs
fistp
cmp
aad
mov
call
add
add
add
fdivr
push
add
fisttp
addr16
cmps
fld
push
mov
dec
ss
fiadd
sub
add
add
scas
idiv
dec
add
pusha
jp
inc
ret
out
fcomp
push
in
ja
add
imul
add
mov
shr
ss
push
xchg
add
int3
add
mov
and
add
add
es
mov
mov
pop
mov
sub
mov
cmps
call
add
xor
shl
add
scas
ficomp
lock
es
arpl
pushf
mov
xchg
ins
add
add
add
push
add
test
jb
push
pusha
arpl
adc
mov
mov
cmp
mov
fwait
add
rcl
mov
out
fdivr
fisttp
aam
rcr
icebp
clc
mov
push
add
add
pop
int
mov
mov
outs
int3
inc
mov
sbb
pop
add
push
dec
add
push
data16
add
pop
or
adc
sahf
add
ror
imul
ins
add
js
or
xlat
push
add
add
add
mov
add
popa
cmps
not
pusha
add
dec
inc
imul
dec
push
scas
fcomp
add
add
add
or
inc
lock
aas
aaa
push
add
jg
iret
mov
jmp
cmp
add
add
mov
retf
mov
cmps
add
shr
mov
xlat
int
add
push
mov
add
add
add
mov
dec
popa
les
add
push
sub
add
or
cld
fild
add
(bad)
out
add
gs
fs
jns
sub
loope
shr
int
icebp
fsubr
stc
outs
push
add
add
inc
mov
jne
cld
arpl
imul
nop
dec
mov
cmp
and
add
add
das
and
fild
xor
adc
lods
push
mov
push
pop
fs
and
add
add
stos
cdq
mov
fs
sbb
xor
push
push
cmp
xchg
int3
call
pop
add
add
test
ror
out
sbb
pop
popa
mov
mov
ret
iret
jmp
add
add
bound
outs
ins
xlat
inc
ins
cs
enter
arpl
add
pusha
mov
mov
jb
pop
jmp
add
add
shl
and
cmp
push
sbb
sbb
mov
sbb
add
add
enter
jae
push
xchg
mov
fs
dec
cmc
add
add
xor
inc
push
sub
and
fs
adc
push
repnz
and
nop
push
and
xchg
outs
int3
in
out
jecxz
jbe
xor
add
add
scas
dec
add
push
or
mov
out
mov
sbb
test
dec
add
add
pop
sub
mov
test
sbb
fsubr
mov
push
jle
lods
pop
cdq
mov
add
jle
fs
mul
call
test
xor
into
pop
cwde
mov
fsub
dec
inc
xor
add
add
ss
xor
dec
jae
fisttp
clc
je
ins
jg
mov
lods
sbb
mov
inc
add
add
sbb
adc
or
adc
sbb
clc
push
inc
adc
outs
push
mov
add
add
add
outs
pop
adc
lods
xchg
jnp
xor
jne
fs
xor
jo
int3
sbb
push
add
add
add
rcl
or
jbe
and
cmc
pushf
ins
test
cmps
and
and
mov
or
add
dec
or
push
mov
inc
mov
sub
inc
js
push
jne
fild
add
add
mov
xchg
clc
push
xchg
cmp
dec
sub
dec
push
leave
jl
xchg
add
add
jo
dec
push
test
sahf
xor
inc
and
sub
push
sub
arpl
adc
push
aad
add
add
int
inc
inc
sub
xor
adc
retf
int3
push
sbb
mov
pop
push
stos
xor
add
add
xchg
jle
xor
dec
loop
xchg
ror
push
jp
push
dec
loopne
addr16
iret
int3
fiadd
test
add
push
xor
dec
or
push
inc
cmps
shl
rcl
inc
sbb
dec
and
rol
add
add
fisubr
mov
add
jnp
pop
add
cmps
add
add
pop
fild
add
add
test
sub
sub
cmp
xor
inc
dec
inc
scas
xor
cwde
xor
aaa
sti
std
add
add
xor
cld
or
sti
push
sub
xchg
add
nop
sub
add
add
add
add
mov
xchg
adc
and
push
xor
ins
inc
add
add
add
xor
movs
add
add
sub
sub
and
inc
xor
mov
enter
add
cmp
inc
xor
inc
xor
inc
sbb
inc
ss
inc
std
mov
stc
add
add
out
dec
sub
xchg
popf
xor
stos
inc
fwait
jl
xchg
dec
fstp
or
inc
xchg
jbe
sub
ss
add
add
xor
into
xor
mov
xor
add
popa
inc
pusha
cmp
xor
mov
add
out
mov
lock
xor
ss
mov
push
jb
in
jmp
add
add
mov
jmp
cmp
and
aas
cmp
xor
xor
add
cmp
inc
nop
retf
add
push
sub
test
and
add
cdq
add
add
mov
adc
cs
mov
enter
fcomp
(bad)
push
fs
cdq
jmp
add
dec
mov
sbb
cmps
ins
mov
dec
adc
ss
fs
sub
pop
push
cs
add
add
sub
in
js
mov
retf
fisttp
mov
inc
ins
and
pop
xchg
cmp
cmp
mov
add
add
adc
mov
jle
(bad)
jb
stc
cmp
mov
bound
fsub
xor
test
adc
lods
call
add
add
cmp
and
sub
jmp
test
jmp
add
add
fsub
xchg
and
inc
jb
mov
sbb
sbb
xchg
ror
stos
xchg
sub
add
add
add
leave
inc
rcl
pop
xor
sbb
adc
mov
call
push
inc
dec
inc
inc
push
add
add
and
enter
dec
dec
lock
mov
imul
ins
xlat
or
adc
jmp
enter
add
inc
jle
push
imul
add
arpl
push
inc
imul
movs
or
add
add
jae
and
pop
inc
push
inc
fistp
dec
dec
dec
mov
sbb
clc
dec
dec
test
cwde
add
add
sub
into
js
outs
or
daa
xor
fadd
cli
data16
sbb
sahf
sbb
add
add
dec
jecxz
or
addr16
rol
mov
out
into
in
fs
inc
dec
dec
mov
inc
add
add
sub
push
xor
push
iret
cld
cs
or
mov
jo
test
call
add
add
add
push
sub
(bad)
nop
and
mov
in
cmp
mov
int
and
mov
xchg
bound
add
add
hlt
push
dec
je
sbb
sbb
or
mov
mov
jae
test
add
add
add
jmp
push
mov
push
les
pop
stos
pop
out
addr16
mov
jae
pop
add
add
cs
inc
dec
cmp
sub
lods
jo
xchg
adc
cdq
xor
in
lods
xor
adc
icebp
cmp
outs
adc
add
add
inc
dec
jb
push
xor
or
xchg
adc
add
mov
add
and
dec
in
les
out
aam
mov
jno
out
cmp
add
js
test
xchg
add
adc
adc
and
add
jo
out
inc
jl
fadd
add
add
inc
inc
les
loopne
lock
inc
sbb
fcomp
adc
adc
adc
push
xor
adc
add
add
cmp
add
xor
or
js
adc
xchg
adc
fadd
inc
je
mov
adc
add
add
and
dec
rcl
mov
mov
adc
and
jne
cmc
dec
sub
mul
push
stos
ds
je
adc
add
add
and
inc
repz
mov
mov
sbb
mul
cmp
stc
pop
mov
adc
dec
pushf
xchg
add
add
cld
and
inc
std
loopne
sti
adc
dec
loopne
mov
pop
and
dec
jl
add
fsub
cli
and
xor
ret
dec
rcl
(bad)
mov
add
dec
js
add
add
and
adc
mov
xchg
or
and
or
push
inc
or
adc
add
dec
les
or
dec
jnp
adc
dec
setno
inc
xchg
add
in
dec
push
add
add
mov
call
push
nop
es
push
test
fcom
sbb
ins
add
add
mov
fs
dec
push
inc
lods
addr16
adc
lock
imul
add
add
loopne
push
leave
adc
das
inc
cmp
or
test
adc
cdq
jmp
sbb
and
inc
dec
loope
add
add
test
out
clc
and
jp
mov
mov
xor
and
add
add
and
inc
lock
jmp
dec
push
xchg
jecxz
push
enter
add
add
fmul
mov
adc
and
adc
dec
jo
add
nop
inc
lfs
add
fsub
dec
cld
mov
adc
pusha
dec
add
mov
or
ror
mov
add
add
inc
je
mov
and
in
mov
test
add
cmp
dec
pop
test
repz
inc
or
adc
and
xchg
mov
add
add
or
add
add
adc
pushw
xor
or
nop
dec
or
ror
add
add
xor
or
and
add
xchg
or
lods
adc
and
push
or
xchg
or
add
adc
pop
lds
or
dec
or
adc
loop
adc
and
dec
add
add
movs
cdq
or
xchg
adc
adc
and
pusha
dec
setno
dec
push
and
mov
add
add
mov
pusha
mov
xor
mov
xchg
and
or
mov
adc
adc
adc
lock
add
cdq
adc
or
jo
adc
and
lods
push
mov
adc
or
inc
push
dec
add
add
mov
adc
dec
test
jo
rol
mov
mov
rcl
add
and
add
add
push
aam
add
and
nop
test
adc
and
mov
add
(bad)
and
dec
std
xchg
lock
sub
sbb
adc
push
and
and
add
add
or
cwde
test
sbb
inc
adc
cdq
popa
js
sub
inc
shl
inc
add
add
or
or
adc
mov
sbb
sub
xor
mov
adc
cmp
add
add
adc
daa
xor
inc
sbb
inc
xchg
sub
call
leave
adc
ins
pop
dec
fldcw
dec
inc
push
sahf
mov
push
pop
sbb
mov
dec
int
add
add
push
sub
pop
in
cmp
and
jge
xchg
inc
out
and
pop
sub
dec
add
add
stc
push
pop
pushw
fs
inc
bound
mov
push
sbb
jbe
clc
ficom
cs
jecxz
sub
mov
add
add
push
movs
ss
pop
xor
inc
mov
mov
and
inc
push
xor
inc
call
add
cli
xor
pop
and
xchg
inc
mov
adc
fs
pop
push
dec
rcr
add
add
cmp
xchg
cmp
in
mov
imul
adc
ins
adc
add
add
mov
and
pushf
dec
and
retf
or
pop
jmp
into
sub
mov
add
add
sbb
push
push
(bad)
imul
inc
cmp
ss
dec
push
jbe
or
movs
add
add
mov
mov
sahf
inc
movs
sbb
or
or
movs
cmp
cmc
call
retf
add
add
jbe
dec
push
retf
ins
ins
dec
mov
jmp
sub
les
inc
movs
cmps
movs
add
add
(bad)
shl
adc
and
icebp
pop
das
bound
shl
or
pushf
pop
adc
ror
add
and
xchg
inc
mov
sub
cmps
xor
outs
js
sbb
push
rcl
add
add
mov
sbb
jbe
and
push
inc
outs
retf
inc
enter
xor
add
add
nop
adc
mov
mov
sbb
jle
xchg
cmp
mov
add
push
pop
sub
mov
cmps
xor
aas
cmps
movs
pop
dec
cmps
or
jbe
adc
inc
add
add
movs
sub
hlt
lea
pop
dec
xchg
push
or
std
pop
jp
push
gs
xor
sahf
pop
and
xchg
add
add
movs
sbb
pop
mov
push
sbb
sub
jl
and
jp
fiadd
mov
and
add
add
push
jb
inc
xor
dec
lahf
bound
push
xchg
dec
sbb
sub
and
dec
cld
dec
retf
add
add
xor
cmps
out
ds
repnz
cwde
frstpm(287
sub
mov
sub
daa
inc
(bad)
loopne
in
leave
std
push
add
add
push
rol
or
and
outs
push
dec
mov
dec
push
mov
jns
or
add
add
mov
call
rcl
and
push
mov
inc
out
inc
mov
and
xor
dec
add
add
fwait
or
and
dec
jl
sub
(bad)
(bad)
adc
or
retf
gs
xor
add
add
adc
push
retf
dec
ror
mov
or
cdq
into
inc
and
inc
cdq
inc
add
add
sub
dec
mov
xchg
call
inc
sqrtps
xor
dec
ror
dec
cmp
add
add
int3
test
jl
push
retf
test
dec
adc
mov
dec
sub
mov
add
add
aam
sub
jo
inc
lea
add
lahf
and
test
sub
jbe
push
js
nop
inc
out
adc
add
add
push
dec
repnz
stos
sub
jmp
inc
or
push
and
mov
lds
add
dec
push
inc
mov
mov
push
mov
and
retf
cmp
sub
fst
add
add
dec
cdq
push
sbb
push
push
xchg
das
sub
cmps
dec
cli
jp
cwde
xor
xchg
cmp
push
push
jge
add
add
jg
sar
fdivr
sub
mov
xor
movs
pop
das
sbb
jmpw
xchg
call
xor
jae
shl
xchg
call
adc
xchg
movs
push
push
retf
sbb
push
mov
add
add
xchg
test
in
ret
inc
cwde
xchg
iret
mov
and
push
clc
retf
dec
lds
sbb
add
add
mov
mov
es
nop
push
cmp
js
inc
dec
scas
mov
add
jle
pop
inc
aad
dec
push
adc
lods
pushf
movs
cdq
fisubr
xchg
mov
add
add
aas
sub
test
mov
fs
mov
dec
and
jno
in
dec
xor
inc
push
pop
push
fld
add
add
sbb
dec
fnstenv
ficom
mov
mov
dec
out
loope
pusha
dec
(bad)
sub
add
add
outs
mov
mov
sub
sub
or
adc
leave
adc
cdq
cmp
pop
add
add
dec
test
sub
dec
jb
inc
lods
dec
cmp
and
dec
push
mov
cmp
dec
dec
add
add
sub
fldenv
pop
outs
add
sbb
jns
test
hlt
repnz
rcr
push
mov
mov
add
add
and
mov
daa
mov
js
push
repz
movs
lods
clc
mov
movs
cdq
cmp
sbb
push
add
add
in
loopne
push
xor
inc
push
scas
xchg
cmp
(bad)
pop
xor
add
pop
push
fidivr
mov
push
in
push
hlt
retf
push
xchg
lods
sub
std
sbb
add
add
push
xchg
sub
dec
mov
in
sbb
add
mov
and
push
ds
ficomp
add
xor
mov
jl
lods
jb
and
or
xchg
xchg
xchg
push
jmp
gs
push
es
add
add
ficom
sub
inc
mov
int
xchg
inc
pop
shl
or
and
dec
and
out
xchg
aam
add
add
xchg
lahf
lock
mov
dec
cdq
mov
in
or
inc
js
gs
or
add
jl
xchg
test
sub
jae
mov
dec
push
and
aam
cmp
push
ins
loopne
inc
cmps
inc
add
add
sbb
mov
inc
cmp
scas
push
cmp
(bad)
dec
xchg
xor
(bad)
add
add
mov
fs
int
rol
test
rcr
cdq
or
pop
push
push
cmp
cmps
nop
das
push
xor
add
add
adc
rol
dec
jmp
je
and
mov
push
popf
int3
or
jae
sub
dec
jb
or
xor
add
add
dec
fs
mov
imul
movs
mov
gs
mov
sub
dec
dec
add
add
sahf
sahf
inc
inc
mov
rol
jno
and
mov
sbb
pop
(bad)
xlat
lea
add
add
mov
xchg
loop
rcr
movs
neg
aam
movs
imul
(bad)
pop
adc
mov
jle
xor
in
add
add
xchg
inc
mov
xchg
xor
dec
xchg
and
push
xor
leave
adc
retf
xor
enter
add
jbe
rcr
dec
fwait
sub
scas
inc
cmp
and
(bad)
jo
and
lods
adc
mov
pop
sub
clc
jne
xor
mov
push
xchg
dec
mov
adc
cmps
test
add
add
xchg
cmp
dec
pop
cli
ficomp
jle
and
xchg
mov
mov
(bad)
iret
xchg
dec
cli
mov
add
add
mov
jge
outs
imul
sub
shl
in
or
stos
push
pop
and
(bad)
mov
add
add
xchg
lea
mov
push
push
xor
fstp
cs
cmps
cmps
xchg
pusha
out
xchg
xor
das
das
fadd
add
add
xchg
lea
xchg
cmp
and
fcmovnb
call
call
adc
xchg
and
add
add
xchg
mov
shl
mov
dec
in
aaa
sub
push
in
call
add
add
lea
into
in
push
out
dec
xchg
inc
clc
hlt
mov
mov
test
push
pop
movs
in
adc
and
sub
add
add
in
and
xor
clc
and
adc
mov
popf
cwde
mov
add
add
xor
int
and
retf
sti
xchg
push
add
outs
imul
mov
cwde
fs
leave
dec
mov
nop
sub
dec
mov
sub
call
daa
pop
inc
cwde
dec
xchg
aam
add
add
cli
mov
scas
mov
outs
fild
sbb
cmp
adc
mov
cmp
add
add
mov
lea
gs
xor
mov
sub
dec
xchg
cwde
push
push
add
add
pop
push
push
mov
xchg
mov
pop
retf
hlt
jle
push
cmps
inc
retf
repnz
je
push
inc
xor
add
inc
xor
daa
(bad)
push
imul
sub
dec
int3
movs
jbe
sbb
jo
xchg
inc
add
add
sub
mov
loop
pop
push
stos
pusha
dec
fs
push
sub
jne
pop
mov
stos
push
cmps
cmp
sbb
xchg
mov
add
sub
popf
shr
hlt
js
dec
mov
sub
rol
and
adc
add
add
ds
mov
imul
call
enter
push
mov
push
cmp
inc
add
add
loopne
xor
xchg
inc
pushf
push
sar
lahf
mov
mov
outs
imul
sub
add
add
cmps
xor
call
hlt
mov
xchg
gs
push
push
xchg
inc
loopne
add
add
jae
daa
cli
adc
or
xchg
aad
and
sbb
cdq
pop
or
or
add
add
cs
cdq
nop
sub
or
inc
mov
xor
or
xchg
or
pop
or
cdq
inc
add
add
iret
or
or
mov
dec
in
daa
or
mov
mov
add
add
sbb
pusha
daa
or
mov
fwait
add
dec
mov
jo
mov
add
scas
xor
or
inc
nop
pusha
pushf
and
inc
das
inc
sub
es
gs
or
add
add
inc
adc
or
or
pop
add
push
in
adc
dec
mov
enter
fadd
pusha
add
bound
and
scas
or
jo
pusha
inc
int3
sub
pushf
es
in
xor
out
xchg
mov
adc
xchg
clc
(bad)
mov
das
xor
mov
enter
cli
push
sbb
nop
add
add
pop
mov
mov
dec
int3
dec
push
adc
inc
sub
cmc
push
sar
adc
add
nop
inc
in
dec
and
inc
push
mov
cmp
inc
dec
movs
cmp
inc
push
mov
sub
dec
mov
add
add
hlt
imul
call
inc
push
nop
cmp
push
(bad)
xchg
inc
sbb
push
test
add
add
enter
pop
mov
push
(bad)
loop
ror
cmp
retf
stc
ins
jp
add
add
test
dec
push
lahf
gs
cld
inc
push
hlt
mov
inc
and
jle
jp
jnp
jge
adc
add
add
dec
movs
js
sub
pusha
push
mov
enter
and
inc
push
sub
cmp
jp
add
add
nop
push
push
cmp
nop
cmp
push
(bad)
jnp
push
xchg
add
add
inc
push
jnp
jo
and
outs
ins
push
pop
push
imul
aam
cmp
outs
sub
mov
and
arpl
and
ds
mov
dec
push
retf
add
add
movs
fld
and
push
call
xchg
sub
fnstenv
sar
xor
add
add
push
int
sub
mov
and
pop
icebp
xchg
(bad)
pop
cmp
jge
mov
add
add
dec
hlt
data16
jo
push
cmp
pop
cmp
pusha
dec
mov
out
sbb
inc
test
add
add
inc
gs
test
clc
outs
xchg
push
scas
push
cmp
sub
test
add
add
ins
test
jl
jb
out
jae
cmp
sbb
(bad)
mov
cmp
gs
retf
sub
xor
bound
jo
inc
stos
ficomp
push
lods
ja
add
add
jge
sbb
xor
mov
xlat
shl
jb
jo
ins
pop
xor
stos
add
add
mov
(bad)
aas
mov
je
sti
mov
pop
outs
adc
cmp
clc
mov
jo
add
add
mov
jnp
xchg
push
xchg
inc
cld
retf
xchg
push
xor
scas
mov
gs
fsubr
add
add
sub
push
in
and
data16
mov
adc
das
pop
in
add
add
fisub
sbb
dec
xor
adc
jo
shl
dec
mov
mov
sub
jbe
mov
add
je
inc
int3
lock
or
rcl
loopne
add
dec
into
sbb
in
mov
adc
add
push
rcl
lods
push
push
push
popa
jb
push
pop
cmp
scas
xor
add
add
jne
jge
push
je
sti
jge
cmc
inc
ins
mov
and
nop
jge
mov
adc
out
add
add
mov
ja
cld
scas
out
movs
push
jne
mov
inc
push
and
pop
je
push
ja
add
add
outs
scas
and
jmp
lea
jp
ja
lahf
xor
je
sbb
jae
dec
add
add
push
pop
push
push
dec
push
pop
(bad)
in
xchg
push
pop
lock
ror
(bad)
and
add
mov
cld
add
add
sub
cs
and
adc
adc
jae
mov
or
add
add
add
inc
test
mov
shl
jl
xchg
lock
and
mov
or
xor
add
add
rol
mov
inc
mov
add
fst
mov
shr
push
aad
inc
mov
and
add
add
aaa
enter
outs
dec
pop
jae
dec
cli
addr16
sahf
jo
inc
pop
jmp
inc
push
add
add
aam
cmc
jae
adc
or
mov
stos
mov
push
ins
and
or
leave
add
add
shl
pusha
and
outs
cmps
xor
shr
xchg
adc
push
inc
or
add
add
jp
shr
retf
adc
xchg
js
xor
(bad)
cmps
adc
sbb
bound
inc
jne
das
je
cmp
add
add
pop
adc
push
ss
std
fld
or
fcom
cld
inc
fdiv
or
inc
call
and
fld
stc
push
sbb
dec
inc
pop
mov
adc
or
test
add
add
and
and
fucom
clc
xchg
xor
or
dec
mov
dec
fsub
adc
mov
xchg
pusha
inc
inc
ror
adc
and
rcl
std
add
add
(bad)
and
(bad)
jo
mov
or
pop
or
or
add
inc
jo
add
into
add
add
cdq
push
ror
mov
inc
cld
cmps
into
inc
mov
scas
jns
xor
push
dec
sbb
pushf
add
add
adc
popf
or
fs
xor
cmp
imul
cli
push
push
or
cmp
add
add
push
push
mov
outs
xchg
xor
mov
cld
mov
pop
or
add
add
movs
sbb
das
pop
cmc
mov
xchg
cmp
jb
mov
cmp
ja
add
add
and
adc
and
imul
adc
pop
adc
out
jl
mov
add
add
pop
adc
sub
and
fst
sti
add
adc
ja
cmps
add
mov
add
add
mov
lock
mov
cmp
dec
or
inc
icebp
ror
or
add
pushf
xor
ja
xor
xor
adc
add
push
jo
jmp
enter
lock
add
add
push
in
pop
fs
push
and
mov
add
dec
jo
nop
test
adc
cmp
lock
add
cmp
xor
sub
sbb
mov
lahf
and
push
cli
xor
mov
dec
add
add
dec
or
sub
inc
ret
out
adc
fbld
adc
ins
int
std
shl
push
pop
je
cld
jo
je
inc
adc
push
xor
cmp
sbb
call
add
add
cmc
in
mov
push
or
sbb
ror
mov
pop
and
jo
test
adc
xor
push
dec
inc
cld
ror
jle
dec
addr16
inc
add
dec
dec
push
scas
dec
shr
push
mov
add
add
or
imul
sahf
xor
xchg
jae
jg
push
push
push
mov
pop
add
add
je
ds
lods
fwait
push
popa
cmps
inc
inc
and
inc
cmp
mov
les
mov
sahf
add
add
js
test
mov
fs
xor
adc
dec
outs
inc
gs
dec
or
std
cmps
aas
push
js
add
add
dec
arpl
retf
ret
jl
test
xchg
pop
xchg
sbb
stos
(bad)
and
popf
stos
inc
mov
push
add
adc
leave
push
sbb
icebp
scas
es
cmp
sub
nop
or
arpl
add
inc
jge
in
push
and
lods
mov
mov
cmc
jne
bound
cmp
es
mov
add
pop
mov
push
xor
and
mov
pop
dec
int
je
aas
mov
add
add
dec
scas
fstp
loope
inc
(bad)
cli
mov
sub
mov
fwait
inc
push
inc
add
add
in
or
pop
cmp
imul
dec
inc
rcl
lahf
pop
cmp
sti
enter
add
adc
inc
ins
xchg
aam
dec
stos
popa
cmp
scas
jle
dec
mov
gs
js
xchg
dec
add
add
daa
pop
mov
adc
retf
mov
adc
fs
inc
test
xor
push
xor
pop
out
jnp
push
add
add
push
cmp
push
jo
fwait
or
dec
mov
pop
aaa
xor
pop
repz
cmp
loope
jb
add
add
xchg
sub
dec
inc
dec
gs
dec
jo
fcomp
ret
push
jg
cmp
movs
ds
pop
fidiv
add
add
push
push
das
sub
adc
dec
and
push
fdiv
dec
jp
repnz
outs
not
sub
ins
dec
jne
sub
xor
test
xchg
pop
retf
ret
and
jmp
add
add
add
sar
js
popf
mov
and
jne
mov
mov
pop
inc
arpl
add
add
adc
ins
xor
loopne
mov
test
dec
xchg
push
inc
jbe
jmp
call
int3
adc
add
add
jae
test
mov
dec
pop
jp
pop
jae
cmp
fbld
jb
jb
add
add
xchg
les
popa
and
data16
shr
lods
cmp
out
fiadd
je
loopne
add
add
mov
jg
into
xchg
dec
into
dec
dec
and
sbb
xor
xor
add
add
inc
inc
test
cmp
push
mov
nop
dec
inc
mov
add
add
inc
sub
dec
jae
adc
sbb
and
push
mov
push
loopne
mov
je
jecxz
inc
jp
push
mov
dec
cdq
in
mov
add
in
xor
mov
test
je
or
push
std
add
add
shl
dec
dec
dec
in
adc
ds
adc
mov
and
jns
gs
nop
add
add
cwde
test
or
inc
xchg
xchg
push
std
jl
cmp
pop
jl
cmp
retf
sbb
push
es
mov
dec
adc
mov
retf
mov
dec
add
pop
dec
or
loope
add
add
lock
les
sub
or
and
dec
mov
ror
aas
int
dec
dec
mov
add
dec
sbb
inc
rcl
push
push
stc
(bad)
or
popa
ins
push
xor
jo
push
push
push
rol
adc
add
add
mov
popa
inc
pop
shl
pop
mov
add
pop
or
jmp
pop
xor
or
add
add
and
mov
ror
je
sub
jne
sub
into
aas
pushf
mov
push
add
lds
sub
in
mov
aaa
cmp
pop
icebp
fmul
js
dec
jbe
bound
add
add
(bad)
push
mov
or
pop
xchg
imul
test
js
cmp
and
add
hlt
popf
cmp
(bad)
jns
mov
je
push
inc
pop
cli
cmp
add
xor
inc
add
add
sub
push
pmullw
xor
loopne
and
sub
dec
adc
stos
(bad)
dec
pop
test
mov
add
cmps
gs
inc
into
mov
shl
adc
jae
adc
mov
push
mov
scas
add
add
aam
gs
dec
daa
outs
cdq
mov
mov
or
enter
xlat
mov
sbb
add
add
iret
lods
jbe
and
les
push
int3
jns
and
pushf
gs
scas
nop
dec
push
dec
inc
pop
sub
add
add
div
push
(bad)
(bad)
mov
jb
inc
inc
push
push
push
push
dec
push
(bad)
leave
les
xchg
imul
xchg
jle
jg
jo
daa
sub
jo
pop
imul
inc
xchg
jb
jl
jmp
inc
add
and
or
addr16
or
pop
loope
sbb
cmp
pop
lods
push
jp
dec
add
add
mov
in
sub
call
dec
cmp
and
and
push
jne
retw
popa
add
add
shl
shl
jp
mov
movs
lock
ins
in
sti
cmp
push
add
fldcw
ret
adc
mov
push
scas
and
adc
cmp
sbb
xor
inc
add
add
repnz
nop
aaa
cld
pop
loope
and
and
cmp
enter
or
icebp
nop
or
loope
add
add
repnz
es
xchg
push
and
popa
adc
sbb
sub
xchg
sub
add
add
or
or
sbb
or
adc
mov
inc
push
mov
add
add
xor
cmp
mov
adc
sbb
cmp
add
push
ret
add
add
in
enter
popa
jle
sbb
sbb
(bad)
pop
lock
cmp
cmp
add
enter
clc
dec
add
dec
jb
dec
loop
(bad)
lea
jp
push
outs
xchg
sbb
push
sbb
imul
sub
icebp
add
and
movs
inc
mov
push
mov
mov
cld
ja
repz
(bad)
and
add
add
inc
aad
hlt
pop
xchg
retf
mov
sub
fisub
cli
aad
div
jg
iret
clc
pop
fs
add
out
mov
xchg
inc
mov
mov
sbb
sub
adc
in
movs
add
add
and
or
fnsave
jmp
mov
js
nop
inc
movs
scas
pop
xor
add
and
mov
add
add
fstp
sub
jns
pushf
clc
leave
mov
je
xor
bound
inc
jp
xchg
jle
add
add
call
mov
test
dec
inc
sti
cmp
inc
movs
and
inc
jb
adc
outs
jecxz
call
add
add
dec
rcl
jnp
and
add
xchg
cmp
sbb
or
add
es
xor
pop
jno
adc
cdq
data16
cmp
pop
and
add
add
mul
cld
xor
repz
dec
daa
sub
adc
push
movs
jns
mov
jp
jne
add
add
popf
push
push
bound
dec
fs
sbb
push
inc
cmp
ds
mov
jmp
int
add
add
adc
xchg
das
pop
mov
or
fimul
sbb
xor
adc
add
add
cmp
adc
jo
sbb
push
sub
lea
or
dec
jo
loopne
nop
lea
mov
add
add
and
inc
xchg
xor
add
xor
sbb
mov
add
add
push
mov
push
add
nop
loope
test
add
mov
mov
nop
movs
popa
add
add
add
movs
sub
ds
pop
retf
mov
or
les
je
add
mov
add
add
dec
out
dec
frstor
or
iret
popf
jge
add
xor
imul
stos
add
adc
xor
adc
adc
gs
scas
rcl
cli
lea
add
test
jl
js
pop
jae
lock
inc
fsub
cmps
mov
and
jb
into
shl
in
add
add
mov
or
icebp
mov
jbe
not
popf
std
xchg
xor
xchg
test
push
mov
add
pop
mov
js
jle
movs
cmps
sub
dec
retf
xchg
push
les
popf
inc
shl
pop
push
xor
push
add
add
clc
sbb
or
sub
rol
cli
test
scas
push
sub
bound
test
hlt
scas
(bad)
out
add
add
popa
fnstcw
stos
xor
jae
not
dec
stos
bound
jns
clc
aas
dec
(bad)
je
sub
add
add
jns
dec
inc
(bad)
icebp
and
fs
pop
jmp
sub
dec
or
add
add
push
popa
jb
test
int3
mov
add
adc
inc
je
add
xchg
or
(bad)
xor
or
or
jo
add
add
adc
movs
cmp
adc
cmp
lar
xchg
sbb
push
mov
add
add
cmp
dec
add
jp
stc
je
scas
cmps
scas
add
mov
pop
cmp
adc
dec
dec
mov
add
add
mov
inc
dec
inc
loope
cmp
in
and
sbb
scas
pop
into
xchg
inc
dec
xchg
mov
add
add
in
sub
shr
inc
push
nop
mov
fdiv
test
or
dec
pop
add
add
push
and
and
xchg
sub
xchg
sub
js
jne
jae
out
jle
sub
add
add
adc
adc
jecxz
nop
outs
data16
jge
mov
xchg
lea
add
add
jns
cmp
dec
outs
add
jb
mov
iret
fs
push
data16
lods
loop
add
add
sbb
mov
sti
loop
push
arpl
and
sub
mov
jae
jmp
inc
js
mov
add
fst
std
add
retf
dec
daa
push
les
mov
rcr
jle
push
push
add
add
xchg
cdq
dec
scas
es
imul
fiadd
mov
and
push
sbb
shl
add
imul
adc
or
add
inc
push
fbld
dec
inc
movs
fst
inc
push
test
jb
mov
lds
push
and
inc
inc
hlt
dec
bound
sub
popa
xchg
push
ja
stos
sbb
mov
xchg
add
add
aaa
sbb
or
xchg
mov
out
inc
adc
mov
mov
sbb
inc
je
loope
add
add
jo
lock
in
(bad)
cmp
icebp
aam
dec
cmp
pop
sbb
push
adc
inc
and
mov
jo
add
add
cmp
sbb
sub
movs
cmp
(bad)
in
outs
and
sub
dec
and
aaa
push
add
add
pop
push
nop
inc
retf
je
hlt
lock
xor
xchg
sub
pusha
ret
cmps
dec
loope
rol
inc
rol
add
add
pusha
and
lock
xor
jmp
xchg
imul
sbb
push
les
rol
add
fadd
sbb
arpl
sub
adc
mov
nop
xchg
loopne
xor
sbb
add
add
mov
out
dec
cmp
inc
std
xchg
and
adc
call
mov
mov
mov
add
add
cwde
rcl
or
inc
jo
test
mov
dec
cmps
bound
sub
ret
repnz
add
add
jp
dec
into
stos
inc
hlt
push
dec
adc
add
adc
add
adc
mov
icebp
push
add
add
in
adc
jmp
inc
lods
jae
test
cld
xchg
sub
out
push
call
arpl
add
add
sub
inc
push
std
out
jo
in
jmp
xchg
xlat
cld
lock
addr16
outs
cs
or
add
add
or
jmp
fs
cmp
ja
or
xor
jb
push
(bad)
pop
pop
push
and
add
add
dec
mov
inc
jmp
dec
push
out
dec
push
and
dec
jmp
dec
leave
imul
add
add
inc
sbb
and
data16
cwde
xchg
xchg
addr16
adc
push
imul
jns
add
add
jg
retf
loopne
or
test
and
xchg
sbb
xor
add
add
mov
or
imul
inc
pop
push
(bad)
(bad)
gs
fld
je
add
add
arpl
push
loop
adc
imul
jo
jae
ins
daa
dec
dec
push
sub
sub
cmovs
pop
sub
inc
dec
dec
push
and
push
sub
and
sbb
js
fst
adc
add
add
neg
mov
pop
dec
xchg
mov
jns
pop
adc
xor
ins
movs
inc
andps
popf
mov
test
mov
add
push
and
ins
stos
sahf
add
test
and
xchg
enter
or
cmps
(bad)
out
add
add
xchg
inc
xchg
mov
adc
jbe
(bad)
fs
inc
dec
leave
dec
dec
push
or
and
call
imul
push
jo
mov
enter
imul
adc
ret
jne
ins
pushf
mov
add
add
(bad)
or
inc
scas
sbb
(bad)
(bad)
jnp
cmp
sbb
outs
add
add
(bad)
leave
mov
xchg
out
sub
adc
push
jae
jecxz
inc
test
add
add
pushf
pop
push
mov
adc
mov
stos
mov
adc
in
sub
mov
add
add
pop
ins
push
pop
inc
add
dec
dec
inc
in
jl
push
push
sbb
adc
ja
jmp
mov
aas
arpl
add
xchg
in
xchg
iret
int3
popa
xchg
test
mov
push
add
or
dec
jns
cmp
xchg
ins
push
push
add
add
aas
popf
inc
add
sbb
mov
aas
cmp
dec
push
mov
(bad)
and
add
dec
adc
popa
lods
push
xchg
in
cld
push
adc
and
jo
(bad)
and
(bad)
enter
or
add
add
in
repnz
jl
sub
inc
mov
std
push
movs
and
rcl
in
je
add
add
or
lods
jbe
in
scas
std
outs
fnstcw
cmp
push
daa
movs
pushf
call
add
add
jp
sub
ficom
daa
jnp
mov
add
jb
adc
dec
xchg
cmp
inc
sub
mov
add
sbb
or
lods
call
fs
adc
or
mov
and
add
add
mov
push
dec
stos
sbb
test
imul
sbb
xchg
pop
and
sbb
loope
cmps
add
add
sub
add
popa
xchg
data16
mov
sbb
daa
adc
adc
adc
in
and
push
jo
xlat
mov
add
add
xor
dec
pop
adc
dec
and
inc
and
bound
popf
push
daa
adc
pusha
pop
leave
jae
add
add
shl
inc
dec
in
icebp
push
xor
pop
sbb
jo
pop
stc
or
addr16
sub
aam
rcl
add
add
inc
mov
movs
pushf
ror
push
xor
pusha
ror
sar
pop
xor
add
in
sub
xor
ja
or
push
stc
sbb
pop
sub
fimul
bound
in
mov
add
add
cmp
ins
shl
lea
data16
pop
inc
mov
sbb
and
add
add
nop
dec
js
sub
pop
cmp
inc
outs
mov
test
(bad)
fs
sub
mov
add
lods
sub
push
dec
shl
aas
lds
sub
mov
jne
retf
xchg
add
add
imul
push
cwde
repnz
loop
xchg
push
addr16
cli
inc
cwde
fs
ins
out
out
dec
icebp
add
add
mov
push
imul
test
movs
push
cwd
dec
pop
jne
inc
imul
test
add
add
lahf
or
jno
jb
or
loopne
fdivr
pop
dec
push
dec
sbb
test
xchg
aas
sbb
add
dec
je
sahf
ds
pop
or
jmp
sub
sbb
jae
aam
arpl
add
add
retf
into
imul
or
outs
sbb
adc
leave
xor
cmc
rol
add
add
daa
imul
push
ds
pop
pop
pop
lahf
and
jmp
outs
mov
gs
lahf
add
add
adc
lods
dec
pop
push
sbb
movs
jne
dec
lahf
inc
pop
or
imul
add
add
xor
je
mov
js
mov
lea
stos
js
mov
dec
aaa
xor
pop
outs
cmp
push
outs
push
ja
ins
bound
dec
mov
icebp
loop
inc
cmp
jbe
or
aam
add
add
gs
in
popf
mov
dec
pusha
cmp
mov
sbb
cmp
add
add
(bad)
fs
cmp
push
loop
push
mov
mov
ins
sbb
mov
adc
add
add
inc
xor
inc
xchg
and
push
jne
cwde
mov
pop
inc
push
jbe
loop
cdq
add
jl
add
add
mov
test
test
cdq
dec
cmp
add
pop
sub
(bad)
xor
ds
or
add
sub
rol
xor
jg
add
inc
lods
adc
mov
push
jl
add
add
mov
add
sub
enter
xor
mov
mov
add
add
adc
repnz
nop
xor
enter
outs
adc
xor
add
loopne
xchg
icebp
add
add
add
push
mov
lock
outs
or
xor
loop
test
sub
call
add
add
pusha
popf
enter
dec
lock
pop
mov
add
and
sbb
out
out
icebp
sub
mov
mov
jmp
inc
repnz
cs
mov
movs
popa
lock
out
std
add
add
cmps
test
bound
push
sahf
xchg
sbb
pinsrw
rol
loop
mov
mov
add
loope
mov
mov
adc
cld
ret
pusha
rcl
xor
mov
mov
or
add
add
dec
out
aas
inc
adc
jmp
shl
xor
loopne
loope
dec
sbb
adc
add
add
jb
xchg
imul
dec
sahf
and
js
xor
jge
js
xchg
f2xm1
xchg
xchg
dec
add
add
les
mov
ror
mov
cdq
adc
jnp
mov
mov
add
add
loopne
imul
xchg
out
(bad)
stc
xchg
sub
sub
cdq
xor
add
add
add
lds
or
je
test
fcomp
lea
mov
push
xor
add
inc
pop
xchg
sub
sub
mov
or
xchg
scas
cmp
mov
add
add
cmp
shr
arpl
push
stc
adc
cdq
bound
dec
stos
cmp
dec
imul
add
leave
push
pushf
daa
jae
dec
pop
nop
cli
jg
xor
repz
sbb
bound
push
push
add
add
les
js
jae
ins
xor
sub
fcomp
cwde
and
jge
jo
sbb
or
add
add
inc
sbb
dec
out
outs
int3
jmp
in
jnp
rep
fsub
(bad)
sub
scas
adc
cmp
add
xchg
shl
push
or
or
jp
aad
jle
neg
jns
pushf
mov
sbb
sar
mov
stos
dec
xchg
mov
push
in
bound
dec
icebp
(bad)
jmp
test
inc
add
add
cmp
push
sar
imul
sbb
loopne
or
adc
dec
adc
xor
push
add
push
or
push
xchg
dec
mov
push
jb
pop
imul
sub
out
pop
mov
fbstp
add
jno
adc
push
mov
sbb
fmul
int3
xor
inc
ret
pop
xchg
sbb
adc
and
add
add
mov
ror
cmp
pop
icebp
add
cmp
add
into
add
mov
adc
add
add
and
cmps
mov
jg
sbb
mov
push
jne
xor
inc
sub
mov
loop
add
add
aad
pop
xchg
sbb
jo
outs
sub
test
pop
outs
mov
fstp
es
add
add
push
xchg
imul
dec
inc
js
mov
aam
out
pop
sub
arpl
icebp
js
call
add
xchg
(bad)
(bad)
mov
dec
cmp
add
pop
push
out
hlt
shr
les
add
add
pushf
push
add
jne
fs
cld
push
xchg
and
xor
adc
daa
jl
adc
in
xor
mov
invlpg
add
add
rcl
xchg
call
in
hlt
movs
cwde
inc
out
cmp
cmp
cmp
adc
xchg
add
add
add
cmp
mov
adc
xchg
inc
and
inc
xor
mov
sbb
into
mov
mov
lds
add
add
int
rcr
(bad)
pop
loope
dec
push
(bad)
mov
or
jmp
sbb
add
add
les
jo
or
or
or
inc
or
fdiv
or
fldenv
add
add
lock
add
add
and
add
and
outs
dec
or
pusha
in
add
add
enter
or
cdq
mov
or
mov
mov
sbb
ficom
add
pop
add
add
pop
sbb
stc
cmp
push
loope
dec
add
ins
push
xor
jo
and
mov
add
push
and
rol
add
or
loopne
shl
sub
ss
and
xor
sub
bound
push
and
jmp
add
add
sbb
and
or
pop
sbb
pusha
sub
and
inc
inc
nop
and
lea
lods
retf
add
add
adc
sbb
mov
pop
cmps
enter
xor
xor
xor
add
add
sbb
cmp
shr
mov
pusha
xchg
leave
or
or
and
mov
xchg
jmp
add
add
xor
adc
rcr
fwait
xchg
loop
mov
add
sahf
add
ja
hlt
lea
add
add
pop
cwde
hlt
mov
not
inc
mov
popa
mov
or
ficom
add
scas
mov
mov
add
sub
push
and
gs
pushf
int
outs
sbb
xchg
loope
cmps
pop
jae
lahf
add
add
ja
mov
imul
pop
sbb
xchg
dec
sub
mov
inc
and
inc
outs
add
add
pop
repnz
in
or
pop
fsub
push
rcl
and
xchg
xor
daa
add
add
int
mov
or
or
jae
or
or
xor
mov
retf
jo
cmps
mov
add
push
jne
(bad)
push
test
cmp
inc
call
mov
add
add
adc
add
cmp
sbb
jo
lods
inc
in
daa
ja
sar
cmc
mov
bound
scas
daa
push
sub
add
hlt
loopne
jp
dec
dec
cli
xor
out
sub
outs
sub
adc
repnz
xchg
fmul
inc
retf
aam
add
add
mov
loop
addr16
push
dec
out
fs
stos
out
xchg
popf
push
pop
push
out
or
add
add
xor
stc
dec
pop
std
outs
repz
push
inc
ins
nop
js
inc
mov
outs
daa
scas
loop
shr
shl
or
add
add
push
jle
scas
push
mov
dec
leave
and
pop
xor
cmp
shl
loop
xchg
fs
add
add
js
dec
push
lahf
(bad)
dec
dec
cmp
add
mov
outs
std
ins
mov
jb
mov
outs
jp
add
add
cli
or
dec
adc
jns
sbb
sbb
push
(bad)
ror
inc
sbb
add
add
add
leave
cmp
popa
(bad)
loopne
and
jbe
cwde
imul
sub
push
add
add
xor
daa
neg
lods
or
movs
jmp
mov
jne
popf
dec
dec
dec
popa
add
add
pop
jae
push
inc
loop
popa
jbe
call
dec
adc
int3
dec
jge
cmp
enter
cmp
dec
hlt
lods
add
add
sbb
push
sbb
push
jle
jbe
push
or
call
xor
or
ret
(bad)
int3
pop
or
mov
(bad)
fcom
iret
mov
and
jmp
add
push
mov
jg
xchg
icebp
mov
inc
mov
pop
dec
xor
cli
jno
xchg
add
sbb
scas
or
rol
add
arpl
int3
lods
dec
loopne
lahf
test
pop
ins
mov
hlt
adc
jl
mov
sub
jp
scas
sub
loopne
mov
je
inc
jle
xchg
aam
or
sub
add
add
and
retf
and
adc
rcr
push
retf
loopne
imul
add
add
movlps
mov
push
mov
sbb
sub
push
xchg
cmp
and
inc
mov
add
add
push
sbb
dec
or
inc
cmps
(bad)
call
pop
jae
push
and
add
mov
push
mov
sub
push
xor
cmp
cmp
dec
das
jne
add
add
push
push
retf
cmps
fsubr
pop
pop
adc
push
call
xchg
and
leave
js
and
adc
add
add
leave
add
fmul
call
sbb
dec
push
mov
cli
fild
add
add
adc
loopne
(bad)
mov
cmp
push
sbb
add
add
pop
push
icebp
aam
pop
adc
pop
inc
pop
cmp
or
adc
xchg
mov
push
or
add
add
xchg
xchg
aam
stos
fbstp
jmp
int3
popa
mov
dec
aad
sar
jbe
add
add
jo
dec
les
and
inc
retf
nop
mov
pop
(bad)
int3
imul
into
add
add
adc
adc
adc
shl
rol
icebp
aad
jo
mov
sbb
mov
adc
or
add
add
mov
in
aam
dec
dec
adc
and
cmp
mov
aaa
stc
(bad)
mov
and
add
add
add
movs
cmp
loopne
xor
hlt
pop
pop
sub
ins
ret
sub
ins
add
add
test
add
cs
call
popf
das
int
(bad)
out
mov
imul
inc
xor
mov
and
xlat
and
fimul
push
les
or
mov
(bad)
fdiv
add
add
inc
adc
mov
or
inc
adc
movs
sbb
loop
cmp
scas
push
ror
jbe
push
cmc
scas
add
add
out
rcr
clc
cmp
inc
and
ins
xchg
int3
fs
inc
aam
fs
inc
call
add
add
or
icebp
jb
sub
jecxz
int
and
mov
call
xchg
or
jmp
lds
dec
add
add
mov
inc
xor
jmp
mov
pop
(bad)
call
fwait
je
mov
lock
dec
fdivrp
jge
mov
push
mov
repnz
adc
adc
pusha
(bad)
and
add
add
sub
je
inc
adc
xor
or
sub
pop
ficomp
sub
xchg
and
jae
mov
add
pop
(bad)
dec
push
inc
mov
les
daa
push
fidiv
ret
inc
push
mov
add
add
push
pop
pop
xor
test
arpl
retf
push
test
jo
pop
xchg
mov
add
add
adc
sbb
cli
std
in
outs
sub
push
jp
out
je
cmp
jne
mov
add
pop
mov
inc
fstp
lods
(bad)
jbe
in
scas
idiv
das
push
push
dec
retf
std
mov
xlat
xor
leave
add
add
dec
or
add
sub
push
mov
dec
retfw
jns
daa
out
fist
jg
sub
pop
out
add
add
dec
pop
ins
or
inc
cmp
das
test
loop
call
test
jmp
ret
aaa
add
add
or
ss
in
mov
sub
jmp
mov
rol
aam
ins
pop
add
add
fwait
test
idiv
xchg
imul
std
std
jo
mov
and
push
mov
push
mov
add
add
jae
cmovae
jo
loopne
fsub
inc
mov
test
sub
adc
or
cmp
add
add
mov
popf
int3
in
sbb
jge
les
mov
or
mov
xchg
mov
cdq
mov
in
add
cmp
dec
rcl
movs
nop
mov
or
jg
lock
cmp
add
add
cmp
sbb
mov
inc
add
aas
sub
jl
jns
nop
cmp
add
add
cld
xor
add
jmp
pop
shl
jmp
leave
add
add
sub
adc
test
cmp
inc
adc
jecxz
inc
adc
xlat
mov
jp
add
add
jae
addr16
fcomp
pop
out
lea
add
push
and
stos
fld
add
add
or
xor
je
in
push
imul
inc
push
add
add
cld
out
jmp
dec
fnstcw
dec
fisub
iret
jmp
mov
push
add
add
mov
call
xchg
out
pop
jmp
and
out
into
lock
add
xor
inc
xor
and
retf
call
jp
xchg
dec
pop
push
inc
rcl
add
(bad)
pop
popf
fsub
pop
cs
jle
add
cli
cmps
popf
adc
and
shr
push
add
add
pop
push
int3
inc
fst
mov
popa
leave
bound
or
or
add
add
mov
fwait
push
and
loopne
xor
pusha
or
ss
jns
outs
or
push
xor
add
xor
mov
mov
sub
or
push
cwde
je
fs
push
movs
sub
pop
lods
mov
mov
add
xor
into
das
ins
jo
cmp
arpl
lods
add
xchg
and
and
add
hlt
nop
and
fiadd
lock
add
daa
fld
jp
sahf
mov
sbb
cmp
add
add
lods
shl
movs
mov
push
es
stos
xor
sub
lods
mov
call
out
add
add
dec
push
out
sub
inc
mov
std
sbb
add
sbb
or
push
pushf
shr
add
test
rcl
mov
xchg
clc
out
xchg
ins
retf
push
or
mov
ins
in
add
add
add
push
cwde
push
inc
lock
cmp
jno
test
cmp
push
enter
mov
mov
add
inc
ins
fstp
adc
fsub
mov
push
icebp
push
fwait
sbb
add
add
and
outs
leave
inc
pop
ds
pop
xchg
push
sub
mov
push
pushf
lock
push
nop
add
add
jecxz
in
cld
pop
lock
cmps
fld
(bad)
pop
jo
addr16
imul
xor
repz
repnz
pushf
add
add
fmul
jb
sbb
dec
push
shl
add
mov
sbb
xchg
cmp
add
add
and
inc
mov
or
jno
and
add
and
xchg
add
add
into
or
xor
xchg
outs
mov
in
jmp
sbb
cs
adc
pop
add
add
jbe
xchg
or
gs
xlat
xor
xchg
mov
mov
xchg
jae
imul
pop
add
add
push
sub
push
push
lods
xchg
sar
bound
js
inc
push
dec
mov
and
add
push
jb
and
data16
cwde
mov
mov
(bad)
pop
push
mov
rol
add
mov
loope
fs
dec
iret
adc
into
push
gs
shr
fld
sbb
jp
add
add
retf
stos
sbb
adc
inc
imul
imul
add
mov
sbb
add
add
jo
or
jo
mov
ins
jne
ror
inc
mov
shr
dec
(bad)
(bad)
inc
les
add
add
inc
adc
mov
mov
mov
xchg
je
push
cmp
xor
and
add
add
xchg
add
clc
push
dec
out
jo
call
in
xor
js
sub
jae
sbb
push
das
add
add
(bad)
in
or
jne
push
test
xchg
adc
cmp
adc
add
add
mov
mov
adc
add
jmp
test
bound
add
add
add
xor
jg
sub
lods
out
repnz
pop
ret
dec
mov
jo
std
cmp
add
add
shl
or
ins
movs
stc
fisub
stos
mov
sub
adc
xor
add
add
pop
cmp
cmp
(bad)
nop
dec
sub
push
fisub
inc
cwde
dec
jmp
add
add
retf
popf
and
add
pushf
je
add
retf
jo
aam
push
sar
sub
daa
adc
add
add
cmp
add
js
icebp
xchg
xor
mov
stc
dec
cmps
sbb
or
nop
imul
add
add
sbb
adc
cmps
add
ins
dec
sbb
jo
imul
mov
add
add
retf
xor
push
cmc
addr16
out
out
adc
xor
fstp
xor
add
add
push
sub
cmp
mov
loop
inc
pop
sub
push
mov
ins
jp
dec
jno
sub
add
add
in
lock
js
or
cmp
sbb
ins
jns
sub
xor
adc
je
adc
add
add
pop
and
push
sub
mov
outs
cli
adc
mov
and
mov
leave
cmp
mov
add
add
dec
inc
cmps
sub
inc
test
rcr
push
push
dec
adc
jg
inc
push
dec
push
add
add
dec
xor
inc
shl
shl
sahf
cmp
loope
push
dec
dec
lds
adc
sub
adc
add
xchg
inc
js
clc
dec
(bad)
pop
movs
sub
pushf
js
mov
push
push
cmps
adc
dec
fbld
add
mov
adc
xchg
mov
pop
retf
or
push
pop
dec
pop
mov
add
sbb
mov
add
add
out
aam
inc
jmp
stos
es
adc
push
inc
cmp
mov
fstp
dec
sbb
add
(bad)
dec
inc
mov
dec
push
call
mov
es
xchg
sub
inc
das
add
add
adc
cli
cmp
inc
mov
repnz
xchg
jg
call
mov
xchg
(bad)
out
pop
in
stc
push
inc
lahf
dec
shl
cmp
inc
nop
aas
mov
inc
sbb
and
add
add
inc
aas
jg
inc
dec
call
mov
inc
xchg
jbe
pusha
jge
lods
or
in
push
push
rcr
add
add
stos
jb
or
inc
push
dec
sbb
push
dec
mov
cmp
es
fwait
and
test
stos
outs
add
adc
aad
add
pop
xchg
jg
jl
xor
add
loopne
xchg
aas
push
pop
je
dec
and
mov
push
inc
test
add
add
adc
cmp
imul
push
inc
dec
push
int
cmp
sub
push
ins
loopne
add
add
push
jnp
pop
cmp
xchg
mov
jp
mov
and
adc
adc
adc
mov
inc
inc
mov
call
push
aas
sub
sub
push
dec
aaa
inc
add
add
int3
xor
inc
or
cmps
adc
cmp
ja
movs
adc
pop
clc
mov
add
add
sub
sahf
dec
lods
adc
cmp
or
imul
pop
add
add
cmp
es
and
inc
(bad)
std
ja
outs
xchg
sub
pop
stos
push
mov
xchg
fdiv
add
add
push
(bad)
xchg
push
repnz
pop
mov
xchg
les
pop
xchg
cmp
adc
dec
inc
add
add
add
lds
jo
push
or
mov
add
loope
adc
je
dec
shr
add
add
fsub
push
pop
xchg
fst
in
and
cs
dec
in
(bad)
aas
cmp
jge
dec
fwait
sbb
or
push
xchg
and
dec
xor
inc
push
xchg
or
sub
fs
add
add
lahf
retf
call
and
dec
cmp
push
stc
push
or
dec
pop
neg
and
(bad)
xchg
mov
push
cmp
inc
xchg
iret
enter
cli
sbb
pop
cli
mov
mov
sti
enter
add
outs
stos
inc
mov
movs
mov
test
jmp
fsubr
lods
jmp
xor
lods
adc
add
jl
xchg
or
mov
cmp
mov
dec
add
add
out
sub
pop
sub
in
push
adc
mov
add
add
xchg
dec
sub
add
dec
inc
xchg
inc
sub
daa
jne
cwde
in
mov
test
add
add
imul
mov
das
dec
inc
and
sub
fsub
add
inc
inc
xchg
loop
xchg
cmps
add
add
add
cwde
arpl
addr16
xchg
out
fadd
leave
dec
jge
adc
sbb
add
add
icebp
and
out
inc
or
adc
xchg
xchg
inc
push
add
adc
inc
ret
in
dec
add
add
iret
pushf
inc
sub
jns
sub
sahf
lea
inc
sbb
dec
cmc
fidiv
lods
fs
ficom
adc
add
add
arpl
imul
jbe
adc
loopne
rcl
mov
push
sahf
add
add
jo
inc
add
add
adc
dec
imul
aam
push
pop
sub
out
ret
pushf
dec
dec
xchg
add
add
imul
in
(bad)
mov
test
jno
enter
inc
das
repz
fcomp
push
add
add
add
dec
int3
adc
mov
adc
xchg
mov
pop
inc
movs
or
mov
xchg
js
or
add
add
mov
push
and
dec
setno
adc
mov
adc
and
dec
adc
clc
add
add
push
inc
adc
aam
sbb
mov
add
mov
xor
mov
ss
ins
add
add
and
inc
push
cmp
xor
sbb
repnz
sbb
inc
push
fmul
add
enter
mov
inc
and
and
dec
ins
xchg
daa
and
sub
sub
xor
add
add
dec
sub
sub
clc
sbb
das
and
dec
xor
shl
mov
cmp
dec
inc
xchg
pushf
and
adc
and
dec
test
push
xchg
add
add
xor
mov
inc
adc
mov
sbb
movs
and
inc
movs
enter
mov
cmps
dec
mov
xchg
test
nop
inc
test
outs
jo
icebp
and
pop
mov
adc
add
inc
add
clc
jne
push
sub
or
xchg
adc
cld
sbb
adc
add
lock
aam
adc
enter
mov
pop
and
dec
pop
xchg
mov
and
add
add
mov
or
add
adc
push
inc
add
cld
dec
xor
add
mov
push
add
add
and
dec
pop
xchg
fsub
or
mov
and
test
mov
and
add
add
dec
and
pop
and
cmp
daa
and
dec
sub
or
mov
sbb
aas
add
add
dec
or
in
add
fsub
add
inc
sar
and
dec
add
mov
add
cwde
adc
and
dec
or
pop
or
xor
or
and
or
add
push
and
pop
add
dec
in
adc
int3
inc
adc
and
dec
xchg
xchg
loop
test
mov
add
add
adc
in
pop
xchg
out
dec
inc
out
mov
adc
and
add
adc
std
adc
adc
mov
add
add
call
push
fcom
bound
dec
arpl
pushf
mov
addr16
ins
pop
add
add
or
adc
pop
dec
jnp
dec
and
cmp
int
sub
out
and
dec
jge
or
jl
adc
add
add
adc
cdq
adc
and
adc
xor
shl
inc
lods
adc
and
adc
add
add
and
test
jo
jle
pop
mov
mov
adc
sub
int3
adc
sbb
sub
fdivp
pop
and
lahf
xchg
cwde
sar
test
repnz
dec
ins
xchg
cld
cli
imul
or
loop
sub
sub
adc
inc
push
pop
pusha
jmp
je
fs
rcl
add
add
loope
mov
stc
jle
inc
dec
retf
jmp
or
scas
fmul
imul
add
outs
cmps
nop
mov
add
add
enter
aas
and
sub
sbb
mul
push
add
stc
hlt
cdq
and
add
add
jl
mov
jo
lahf
imul
call
std
push
pop
mov
push
mov
inc
push
add
add
and
fcomp
int3
dec
(bad)
popa
and
punpckhwd
fs
sbb
jmp
xchg
jle
pop
mov
pop
sahf
dec
push
jns
je
jo
jle
xchg
jnp
push
mov
sub
loop
ins
push
test
mov
add
add
fs
jo
test
cdq
call
in
and
mov
dec
cmps
push
(bad)
mov
add
in
or
xor
inc
and
jne
jp
jae
xchg
and
bound
push
ror
sub
daa
add
add
inc
je
scas
dec
mov
or
push
leave
and
retf
ds
pop
std
test
and
add
add
inc
push
idiv
and
adc
aam
fs
rol
rol
mov
inc
dec
pop
xor
add
add
mov
adc
xor
adc
ficom
and
test
mov
hlt
sub
ins
mov
add
add
lock
loop
fsubr
mov
js
and
dec
bound
mov
add
add
jecxz
test
hlt
aas
pop
mov
dec
test
or
cld
dec
(bad)
mov
add
add
or
outs
sub
loopne
(bad)
mov
es
cli
and
pusha
inc
ja
adc
mov
ins
std
test
add
cli
add
movs
pusha
xchg
pop
push
dec
bound
jge
inc
enter
or
xor
adc
nop
or
inc
pusha
nop
or
or
cmp
or
loopne
add
add
add
pop
call
retf
sub
test
lods
mov
pop
adc
or
fs
imul
add
or
adc
call
pop
inc
sbb
dec
cmp
mov
or
imul
ins
and
add
add
xchg
push
sub
lods
or
and
xor
inc
movs
xor
fnstsw
add
add
push
or
dec
loopne
fwait
jge
ror
add
push
cmp
sub
ret
push
add
add
mov
add
bound
das
dec
sub
dec
push
cld
pop
mov
add
mov
jle
push
fsub
xchg
xor
pusha
je
mov
mov
frstor
fiadd
add
add
xor
jo
mov
and
call
fcomp
sub
add
add
imul
das
inc
loope
sub
idiv
mov
adc
cdq
test
sub
add
add
and
and
shr
push
fs
or
lods
and
bound
imul
or
retf
and
jle
adc
jnp
jmp
cmp
adc
push
push
pop
sub
add
add
or
push
outs
jae
test
cli
jne
mov
dec
neg
inc
inc
(bad)
jne
call
jae
and
and
lgs
sti
dec
jmp
mov
push
ds
add
add
test
dec
jp
dec
and
gs
popf
xchg
xchg
or
je
lea
pop
add
xchg
imul
mov
test
dec
out
push
cmc
call
jnp
and
add
add
adc
cwde
pushf
rcr
jae
ss
gs
jg
jl
mov
call
push
adc
add
add
leave
inc
iret
cs
push
dec
js
loop
in
cmp
pop
rcl
js
test
add
add
mov
scas
push
mov
aad
pop
sub
fcom
je
scas
mov
in
mov
dec
inc
icebp
jo
sbb
out
es
inc
mov
bound
sbb
in
add
add
cmp
jo
sbb
inc
pop
sub
or
lock
enter
loopne
adc
pop
mov
or
add
add
inc
pop
shr
push
mov
pop
and
call
movs
mov
loopne
lahf
add
add
outs
mov
test
jp
outs
cmp
mov
movs
stos
or
js
add
add
xor
ins
cmp
xor
das
icebp
clc
test
xchg
push
(bad)
enter
xor
jmp
shr
imul
mov
clc
xchg
(bad)
mov
(bad)
fld
imul
or
enter
lods
sbb
add
add
dec
jo
fcomp
mov
ja
and
push
in
mov
(bad)
mov
clc
xlat
add
add
pop
push
inc
leave
cmp
and
cmp
gs
and
in
imul
(bad)
xor
add
add
jge
cmp
enter
push
sub
pop
mov
fisttp
cwde
(bad)
adc
popa
outs
jmp
rol
add
add
sub
(bad)
js
add
mov
push
push
adc
or
xchg
test
mov
add
add
push
xchg
mul
es
push
je
xchg
mov
outs
gs
push
sbb
loope
add
add
xchg
mul
nop
leave
push
cdq
je
dec
push
and
ret
lahf
shl
push
xchg
xchg
dec
adc
add
add
mov
cmps
enter
pushf
push
outs
mov
outs
out
dec
cmp
mov
mov
nop
adc
add
add
sbb
mov
lods
nop
sub
push
adc
adc
jl
jge
cli
add
add
cmp
lods
dec
adc
(bad)
xor
ror
lock
pop
dec
out
test
dec
xchg
sbb
pusha
or
xchg
ins
xchg
push
or
push
je
adc
ds
jecxz
movs
mov
add
add
in
jo
jb
shl
xor
xor
and
mov
mov
add
sahf
and
lahf
xchg
mov
test
xor
sar
inc
mov
mov
stc
outs
add
add
test
out
aas
dec
in
jbe
dec
dec
js
(bad)
pop
pop
call
movs
cmp
push
jmp
add
inc
cli
addr16
retf
outs
mov
xchg
xchg
sbb
and
fs
cmp
lods
add
add
push
test
xor
adc
loope
arpl
(bad)
jg
je
movs
and
xor
add
add
loopne
ret
xor
ror
push
loop
std
adc
(bad)
and
and
sub
add
add
xchg
pop
(bad)
jg
xor
outs
pop
adc
xor
stos
pusha
cdq
data16
popa
stc
jl
pop
pushf
dec
xor
add
add
pop
xchg
push
fmulp
adc
call
dec
add
and
xchg
cmp
add
sub
data16
pop
xchg
sbb
xchg
out
push
push
lods
test
mov
adc
and
add
test
inc
xor
cdq
mov
xor
pop
cmp
lahf
jne
add
sub
or
add
add
adc
(bad)
pop
adc
bound
test
adc
in
inc
push
cmps
mov
add
sub
push
pop
cmp
xor
hlt
xor
xor
adc
add
add
es
stc
hlt
leave
push
pop
xor
pop
enter
jns
or
xchg
rcl
sub
add
add
or
mov
test
push
mov
mov
loopne
call
sub
add
add
mov
call
repnz
fsub
jmp
push
loopne
mov
fst
shr
fadd
add
add
add
cmp
adc
les
sbb
adc
aas
inc
cmp
mov
sub
sub
add
test
inc
sbb
pop
push
add
fsubr
and
dec
clc
or
popa
jo
sub
fsubr
jo
add
add
ins
ror
and
cs
and
cmp
mov
icebp
mov
(bad)
adc
cmp
cwde
dec
add
add
mov
mov
add
je
les
scas
inc
xor
outs
rcr
lods
hlt
sub
cwde
add
add
jg
inc
mov
leave
jp
mov
adc
add
or
inc
add
or
mov
add
add
loope
and
add
jo
sbb
add
sbb
push
add
clc
inc
lds
sub
adc
add
iret
es
and
test
mov
enter
xchg
mov
enter
and
inc
add
add
cwde
lahf
shr
and
inc
je
dec
(bad)
push
adc
inc
int
add
les
mov
and
adc
rcl
mov
mov
cmps
or
int3
and
or
mov
test
add
dec
mov
dec
aas
inc
fbstp
sub
retf
sbb
ror
adc
repz
add
adc
dec
sbb
int3
bound
rcr
into
xor
or
mov
add
rcr
ror
dec
retf
je
mov
push
pop
push
ins
pop
shl
add
add
cwde
sub
jae
(bad)
outs
lahf
fisttp
mov
sahf
push
std
xchg
test
pop
sbb
add
add
inc
push
sub
xor
jle
mov
mov
inc
ds
and
stc
sub
sbb
add
clc
stos
in
cmp
fstp
push
lahf
and
jo
es
int3
mov
ret
or
fistp
fidivr
add
das
fld
ss
shr
sub
push
push
push
aaa
sar
lods
sbb
mov
add
add
mov
sbb
mov
dec
push
push
or
adc
sbb
xchg
xchg
test
add
jmp
or
dec
xchg
clc
xor
cmp
mov
retf
test
dec
inc
add
add
pop
cld
rcr
mov
addr16
pop
pop
lds
sbb
lods
or
mov
les
xchg
nop
sbb
adc
sbb
dec
cmp
add
cs
push
cmp
das
repnz
add
ficom
dec
xchg
sub
sbb
sub
jne
sub
aam
push
xchg
fistp
add
add
sub
inc
adc
fs
in
mov
arpl
mov
add
add
xchg
test
xor
mov
ror
loopne
mov
or
nop
dec
bound
and
int3
inc
push
not
add
icebp
inc
in
mov
stc
pusha
jecxz
dec
in
jo
cmp
js
adc
mov
jmp
bound
jg
outs
mov
jmp
adc
add
add
add
add
xor
mov
xor
sbb
and
fisttp
shl
mov
fs
and
js
add
add
jbe
pop
js
call
ja
jb
(bad)
gs
adc
add
add
fnstcw
ja
and
inc
xor
jg
xchg
mov
sub
or
pop
add
add
addr16
lds
xor
cs
fist
ins
mov
jnp
push
adc
xor
add
add
and
sbb
mov
test
push
cmp
or
jl
xchg
pop
cmp
std
xchg
fidiv
add
add
(bad)
call
dec
xor
pop
movs
jg
mov
pop
mov
sub
bound
cs
leave
pop
xchg
js
mov
add
dec
loopne
adc
sbb
xor
or
and
add
inc
mov
add
sbb
sbb
sbb
add
add
fdivr
jo
push
or
cmp
fcom
adc
push
or
or
mov
scas
sub
add
add
lods
mov
int3
shl
jne
loopne
xchg
pop
xor
mov
mov
sub
inc
test
add
add
and
shl
sub
push
lods
cmp
cmc
imul
call
and
and
add
add
sbb
addr16
and
js
popf
xchg
sub
push
cmp
adc
add
and
inc
and
mov
adc
jne
xor
xchg
or
and
dec
sub
bound
ja
xchg
add
add
popa
retf
gs
or
jb
bound
or
cmc
shl
xor
popa
cli
arpl
add
add
inc
addr16
push
imul
outs
outs
jo
jb
movs
jne
or
jns
jbe
and
add
add
push
or
and
adc
movs
cmp
inc
sub
sbb
add
push
adc
adc
add
add
add
inc
femms
mov
pop
mov
imul
or
adc
mov
inc
push
into
push
adc
add
add
stc
adc
lea
aas
mov
adc
inc
into
sbb
mov
dec
sbb
add
add
mov
jo
js
cmps
add
mov
int
lods
dec
rol
mov
push
sub
lods
adc
add
add
mov
or
ins
push
fcmovnbe
cmp
adc
add
add
add
xor
sbb
and
retf
rcl
mov
xor
mov
push
add
add
mov
push
mov
inc
clc
enter
mov
mov
mov
lds
add
add
sar
cmps
enter
and
push
mov
(bad)
mov
loopne
loopne
scas
cmps
fld
add
add
movs
shr
add
aad
pop
nop
inc
scas
sub
cs
adc
loopne
mov
add
add
mov
add
clc
jnp
mov
add
pusha
int3
push
and
hlt
pop
sbb
enter
add
cmp
sub
lock
jo
add
fsub
adc
adc
push
dec
(bad)
bound
add
add
mov
add
mov
ins
in
(bad)
fisttp
mov
test
and
xchg
jl
(bad)
xchg
xchg
lock
add
jno
xchg
adc
outs
adc
mov
repnz
ds
call
jg
fdivr
add
add
push
ins
adc
or
sbb
and
jl
(bad)
xchg
mov
es
jns
daa
stc
fs
and
out
xor
add
add
sbb
push
stc
mov
and
(bad)
xchg
xchg
repnz
ds
test
push
imul
add
int3
jl
dec
add
rol
adc
mov
xor
movs
pop
adc
cmps
in
jl
add
add
pop
stc
addr16
and
je
jne
xchg
pop
repnz
ds
pusha
enter
pop
and
add
jl
(bad)
xchg
stos
repnz
inc
mov
scas
stc
scas
pop
and
(bad)
xchg
mov
mov
mov
add
mov
sbb
adc
xchg
adc
sbb
inc
or
add
add
add
add
pushf
adc
push
push
or
xchg
jmp
lods
mov
repz
mov
test
add
rcl
xchg
or
fs
movs
push
xchg
jl
std
test
or
dec
cli
xor
mov
add
add
mov
inc
inc
mov
popf
and
ret
or
adc
sub
mov
jp
add
add
jo
sub
adc
push
adc
cmps
push
aaa
es
hlt
add
add
shr
stos
mov
jo
je
sbb
lahf
pop
stc
inc
shr
bound
add
add
and
dec
dec
clc
cmp
cmc
mov
mov
jecxz
dec
mov
xor
pop
push
je
fs
sti
sbb
jmp
leave
inc
aad
sbb
sub
movs
pop
sub
dec
add
add
adc
out
adc
data16
lods
push
jo
adc
pop
fsubr
mov
push
and
jg
add
add
ror
lds
aam
imul
sub
mov
push
aam
add
add
cmp
inc
lahf
in
and
shr
xchg
or
xchg
adc
stc
xchg
add
add
imul
adc
add
push
mov
push
mov
cli
jns
adc
shl
add
add
inc
push
movs
cmp
adc
xor
and
in
mov
mov
lods
mov
sub
fsub
test
inc
push
arpl
xor
pusha
pushf
fcom
pop
and
adc
add
add
xor
xor
or
pop
add
sub
and
adc
push
mov
cwde
das
mov
sar
fwait
push
add
add
mov
mov
rcr
loope
out
movs
cld
adc
js
mov
or
loope
imul
add
add
and
int
ret
mov
les
mov
sub
adc
push
add
add
or
cmp
sar
sbb
mov
add
ret
clc
lahf
pop
xor
pop
add
add
add
add
push
xchg
mov
cmp
and
cmp
jnp
popf
jle
les
add
add
jae
or
mov
xchg
cs
xchg
xchg
inc
call
mov
add
add
outs
mov
jb
mov
call
or
dec
ja
dec
xor
es
add
add
and
std
repnz
pop
dec
mov
cmp
test
mov
jmp
add
add
dec
retf
call
out
(bad)
push
jl
cmc
mov
jb
xchg
mov
pop
dec
xlat
push
call
mov
pusha
pop
es
lods
jle
les
adc
call
fs
retf
ins
add
loopne
mov
add
add
push
sahf
adc
and
lea
push
jns
jae
cmp
fisubr
inc
xlat
add
add
push
or
inc
mov
arpl
std
in
rol
jecxz
scas
inc
xchg
mov
je
xchg
test
add
add
mov
bound
js
cwde
push
and
sbb
xchg
lods
dec
rol
jae
loopne
fnstcw
and
cs
add
or
push
sub
add
add
outs
ds
add
loopne
sub
inc
cwde
push
or
sub
clc
bound
xchg
push
mov
add
add
push
ds
jbe
bound
pop
mov
cmp
ins
stos
push
xor
and
out
adc
dec
xor
mov
dec
inc
ja
dec
mov
mov
pop
fs
lods
sbb
scas
stos
pop
add
add
ins
jecxz
nop
jl
jmp
hlt
push
xlat
jns
scas
push
adc
sub
cmp
pusha
(bad)
sub
push
inc
add
add
mov
xchg
push
mov
(bad)
out
dec
push
sub
jne
push
std
pushf
xchg
sub
pop
cmps
pop
pop
add
add
data16
(bad)
push
push
jmp
mov
lahf
shl
pop
ja
mov
xchg
add
add
ins
inc
ret
inc
jae
push
sub
jp
push
call
fs
jns
daa
(bad)
cmp
add
add
xchg
ja
and
cmp
mov
dec
mov
outs
addr16
shr
dec
repnz
xchg
add
add
jmp
push
movs
stc
jne
add
sub
jb
into
xlat
adc
xchg
shl
mov
add
add
xchg
hlt
les
cli
xlat
mov
in
test
retf
or
xor
fstp
les
mov
add
add
pop
push
jo
mov
mov
std
cmp
into
ja
adc
jle
pop
and
add
jno
call
xchg
imul
mov
fiadd
in
adc
jl
add
add
jmp
stos
mov
fsubrp
imul
inc
xor
cli
dec
jl
in
jmp
add
add
outs
mov
add
mov
xor
xor
xor
push
and
and
xchg
fistp
pop
sub
xor
push
or
push
enter
xor
cmp
mov
jb
jne
in
and
outs
mov
add
add
xchg
add
test
cmp
gs
pop
push
xchg
jns
sub
or
add
add
fcmovnu
daa
sub
adc
mov
int
mov
cmp
sahf
sub
push
je
jg
push
push
sub
mov
ds
scas
sub
pop
adc
ins
es
add
sub
je
xor
dec
xchg
pop
jbe
fnstsw
call
sahf
cmp
aam
jb
cwde
aaa
add
add
and
push
mov
fadd
outs
imul
test
aas
bound
xor
icebp
(bad)
mov
pop
pop
js
add
add
or
push
add
or
sub
jle
push
sub
ss
dec
fs
add
add
mov
cld
fisubr
aam
push
cmc
dec
dec
ins
sub
js
dec
cmc
and
inc
(bad)
pop
add
add
sub
cs
dec
sbb
lea
mov
bound
push
inc
test
es
add
add
mov
retf
mov
sar
dec
addr16
je
and
push
push
mov
jecxz
push
add
add
hlt
xor
not
enter
adc
or
pop
or
call
not
xchg
mov
add
add
stos
mov
mov
fdiv
and
xchg
rcl
enter
call
xchg
add
add
inc
and
xlat
and
cs
jb
xchg
pop
xchg
mov
push
mov
dec
dec
add
add
aad
sub
call
cs
cli
fwait
dec
lds
xor
jp
fsub
push
push
bound
mov
das
cdq
fmul
lock
pop
fs
not
sbb
jb
add
add
ss
cmps
ins
dec
imul
jo
hlt
fsubr
push
adc
shl
mov
pop
cmp
inc
rcl
sub
add
add
and
scas
sbb
scas
mov
std
xor
xchg
iret
int
lds
add
add
int
push
stc
sbb
jecxz
sub
push
lods
test
loopne
push
inc
jb
dec
das
inc
jge
add
add
or
pop
mov
stos
hlt
cs
jl
fcomp
test
xchg
xor
mov
mov
xchg
sbb
jne
sub
pushf
dec
push
cli
cmp
sub
jo
gs
daa
out
(bad)
xchg
repnz
add
arpl
xor
mov
add
test
and
pop
jb
sub
test
cli
mov
pop
cmps
pop
lock
push
add
add
sub
sub
jnp
ror
jnp
cdq
lock
inc
imul
add
mov
and
paddb
pop
dec
popf
test
js
daa
push
mov
fwait
js
mov
push
add
into
and
push
and
lds
hlt
sub
ret
fwait
add
xor
cmps
or
sbb
add
add
push
inc
hlt
fiadd
cmp
ss
dec
lahf
fdiv
push
cs
jmp
addr16
inc
jle
add
add
push
jnp
pop
push
callw
fimul
test
and
aas
retf
jmp
mov
add
sbb
pop
or
cli
popf
push
std
dec
adc
mov
outs
ja
sahf
mov
movs
std
in
rcr
mov
jnp
or
rcl
aad
inc
mov
nop
jge
cmp
add
add
pop
rol
jo
das
jne
(bad)
pop
dec
call
mov
push
push
pushf
sub
mov
push
add
add
fwait
retf
stos
rcl
(bad)
adc
mov
jbe
add
cli
sbb
mov
mov
inc
add
add
call
xchg
adc
retf
stos
dec
jo
xchg
xchg
lods
(bad)
std
sub
idiv
fst
add
cmp
data16
mov
clc
inc
inc
jb
mov
into
push
pop
inc
arpl
imul
add
add
test
or
sub
push
pop
jmp
out
push
lods
and
in
dec
out
mov
dec
xchg
dec
add
add
cs
in
iret
mov
pushf
aam
push
inc
data16
push
inc
cs
push
cmp
and
out
inc
and
push
fidivr
pop
mov
hlt
sub
and
js
add
add
data16
and
inc
pop
(bad)
xlat
mov
pop
mov
inc
(bad)
sar
inc
add
add
scas
mul
scas
jle
inc
dec
sub
push
dec
inc
push
xor
lods
dec
cld
lea
dec
test
dec
cmp
xor
je
xor
add
out
movs
mov
lock
and
dec
cmc
stos
dec
or
add
pop
sub
cmps
or
adc
dec
gs
dec
stc
mov
mov
movs
mov
sub
add
add
jae
bound
cs
and
jns
(bad)
out
in
mov
inc
pop
mov
fs
add
add
jge
daa
adc
cld
gs
inc
ins
pusha
pop
daa
inc
mov
imul
push
cmp
add
add
and
cmp
loopne
xor
sub
and
sub
nop
sub
add
popa
imul
jp
nop
rol
aas
fbld
cmp
dec
mov
push
outs
pop
mov
rol
add
add
pop
cmp
inc
in
in
dec
mov
sbb
cmp
mov
hlt
data16
xor
add
add
add
or
dec
sbb
loop
xchg
mov
sub
xchg
push
gs
and
sti
in
add
add
lods
dec
ret
jl
ja
stos
xchg
sub
shl
dec
shl
imul
add
lods
inc
clc
jl
push
push
mov
mov
outs
xchg
ins
mov
add
add
mov
mov
js
xor
and
lds
sbb
inc
in
ss
in
lea
add
add
sub
bound
dec
in
lods
sub
dec
or
dec
add
xor
repz
mov
add
add
or
pop
mov
dec
pop
and
cld
dec
inc
jecxz
xchg
out
je
fnstenv
add
add
cwde
or
test
aam
call
cwde
cli
push
inc
sub
aam
add
add
add
jb
xchg
call
loopne
lock
mov
lock
pop
jg
inc
add
add
dec
repnz
jp
icebp
cmp
retf
fidiv
loop
sub
adc
adc
add
add
inc
mov
es
xor
sub
jns
push
inc
pop
and
retf
fdiv
pop
xor
loop
add
add
(bad)
js
test
ins
xchg
sbb
xor
lds
sbb
fidiv
pushf
dec
nop
hlt
adc
add
add
lea
push
mov
xchg
jecxz
dec
(bad)
sar
(bad)
jmp
loop
add
add
xchg
mov
mov
mov
aam
mov
mov
pop
pushf
fadd
add
sbb
pop
push
jg
mov
jno
push
push
imul
pop
jle
add
push
js
rcr
sub
test
hlt
jecxz
mov
pop
imul
arpl
nop
div
add
push
mov
aad
and
pop
sahf
adc
sbb
dec
idiv
cmp
ins
movs
jecxz
xlat
add
add
cld
pop
mov
loope
cs
dec
jb
sub
rol
jae
mov
movs
add
add
fnsave
pushf
addr16
das
call
ss
rol
shr
call
sbb
mov
push
mov
add
add
ja
bound
mov
mov
aam
cmp
cmp
pushf
dec
xor
pop
stos
test
add
scas
and
lahf
(bad)
mov
push
shr
mov
inc
mov
add
add
bound
jbe
sub
aas
adc
out
cmp
nop
and
mov
arpl
mov
shr
add
ins
pop
push
fidivr
inc
mov
jp
js
cmp
shl
and
and
xor
and
add
add
out
push
sub
lahf
push
shr
bound
xor
sub
dec
arpl
hlt
stos
mov
add
add
xchg
push
ins
or
xor
xor
inc
les
push
xchg
fs
aam
add
add
jo
push
js
stos
adc
retf
add
mov
and
adc
das
and
add
add
mov
inc
pop
and
bound
mov
in
mov
jb
mov
(bad)
repnz
mov
add
add
(bad)
(bad)
and
and
ja
retf
jmp
sub
dec
out
add
pop
leave
jno
add
add
push
daa
fsub
int3
push
xor
into
cdq
xor
jge
jb
mov
push
add
add
sti
fsub
and
jb
cmp
xchg
pop
adc
stos
call
(bad)
dec
adc
ins
(bad)
cmp
add
add
cwde
add
inc
dec
(bad)
xchg
jns
loope
sbb
jae
adc
ds
in
inc
inc
inc
arpl
add
jnp
pushf
dec
sub
or
dec
(bad)
cli
or
push
hlt
pop
and
sub
or
pop
inc
add
add
adc
test
jo
imul
adc
bound
loope
push
or
and
add
or
and
or
jno
mov
and
dec
das
inc
shl
inc
inc
mov
add
add
es
arpl
into
cli
xchg
add
adc
or
xor
add
add
sub
and
xor
cmc
sbb
stos
out
ficom
das
shr
inc
cmc
add
add
xchg
pop
push
inc
in
scas
sub
or
(bad)
mov
push
mov
jp
mov
jo
add
add
repnz
mov
fisubr
(bad)
jl
fimul
inc
les
rol
jo
mov
add
add
adc
sub
xchg
sahf
out
xchg
loop
pop
pop
cli
xchg
jbe
retf
and
dec
push
mov
add
add
jge
cmp
dec
cwde
and
loopne
xchg
cmps
mov
cmp
stos
rol
and
cmp
add
add
xor
jle
jl
cmp
lea
retf
inc
push
xchg
and
cmps
push
xor
or
add
add
inc
aam
outs
cdq
pop
vmread
jns
add
jp
test
and
dec
test
jle
aas
add
add
js
push
js
cmp
mov
movs
push
xor
inc
lock
add
js
outs
fwait
loopne
outs
push
push
xor
fdiv
ja
xchg
ja
outs
jb
js
imul
loop
jl
js
les
adc
shl
sbb
movs
push
pop
or
cmp
add
add
jns
xlat
das
(bad)
mov
inc
daa
scas
sub
jbe
repnz
les
add
add
in
and
call
in
dec
movs
clc
mov
dec
jle
addr16
push
imul
add
add
sub
mov
ins
pop
adc
iret
push
stc
mov
cli
cld
push
push
(bad)
add
add
call
(bad)
out
inc
mov
inc
pop
inc
lods
daa
outs
mov
and
mov
jae
jo
add
add
jns
stc
jo
jns
js
shr
dec
std
inc
sub
mov
data16
cld
cmp
add
add
jmp
test
dec
inc
mov
pop
xchg
in
repnz
push
push
dec
fisttp
add
pushf
xchg
bound
fidiv
test
mov
push
call
xor
arpl
add
add
repnz
outs
jb
lods
add
arpl
mov
movs
movs
dec
cmps
in
mov
sar
add
dec
fsub
jmp
scas
xchg
lods
je
sub
mov
sub
mov
pop
xchg
add
add
push
popf
push
pusha
js
(bad)
jp
jo
or
xor
and
out
shl
add
add
mov
mov
push
nop
xchg
sbb
outs
scas
retf
cmp
repnz
push
add
add
repnz
xchg
xchg
scas
fldcw
jb
push
and
ins
inc
loop
jae
inc
mov
xlat
cmp
add
add
hlt
push
fs
clc
ins
pop
push
shl
cmp
push
and
loope
into
loop
push
adc
imul
add
sub
mov
dec
jle
movs
mov
fwait
sub
cmc
int
sub
or
lods
or
add
add
mov
xor
(bad)
mov
test
popa
inc
shr
jo
inc
jae
add
add
pop
daa
stc
mov
fist
loope
mov
pushf
or
stos
jge
in
loopne
jg
mov
add
add
pop
mov
jne
out
jecxz
push
aad
in
inc
jno
idiv
mov
jp
dec
imul
add
add
pop
inc
hlt
inc
loope
push
cmp
dec
std
mov
dec
dec
cli
(bad)
jmp
sbb
add
add
add
shl
mov
xor
cmp
sub
popa
mov
add
add
outs
mov
fs
ds
jns
adc
pop
pop
and
and
imul
ficomp
dec
adc
add
add
dec
and
pop
inc
lock
inc
out
jge
pop
ja
and
jo
fwait
out
add
add
ret
mov
and
mov
je
ret
sub
jne
cmps
mov
cmp
test
add
mov
stos
cs
cmp
daa
push
sub
leave
push
adc
mov
and
jae
pop
xchg
jno
jbe
add
add
ror
(bad)
fmul
jle
pop
xlat
xchg
hlt
xchg
pop
dec
cli
xor
mov
lods
aam
mov
add
jo
test
mov
sub
fmul
jmp
inc
dec
push
mov
sub
add
add
rcl
xor
sbb
add
xchg
push
push
(bad)
or
test
in
aam
jne
xor
add
hlt
inc
mov
xchg
hlt
push
pop
push
xchg
(bad)
imul
jl
pop
popf
fdiv
pop
mov
hlt
je
add
add
inc
cmp
outs
je
out
mov
xchg
dec
xchg
cmps
cmp
call
dec
hlt
push
repnz
add
add
pop
push
jp
sbb
test
icebp
fs
inc
ins
mov
push
(bad)
clc
xchg
jbe
pop
xchg
jno
and
mov
jbe
ja
lock
sbb
mov
cs
add
add
out
xchg
push
push
test
movs
push
lahf
enter
mov
pop
mov
mov
cmp
add
add
hlt
sub
xchg
mov
push
into
ds
movs
je
les
inc
mov
(bad)
hlt
outs
outs
pop
clc
fcmove
mov
dec
fmul
icebp
(bad)
fistp
sbb
sbb
inc
retf
add
add
jle
jle
ss
jne
shl
or
inc
mov
(bad)
(bad)
or
clc
inc
add
add
inc
mov
(bad)
ds
sub
sbb
adc
jno
dec
mov
cmp
add
add
call
dec
mov
adc
and
fcom
push
pop
jae
cli
sub
pop
out
pop
add
add
xor
mov
clc
and
loopne
in
jmp
push
daa
dec
adc
int
in
add
add
test
test
add
enter
jnp
push
lods
mul
je
adc
mov
mov
sub
pushf
pop
adc
inc
or
in
je
dec
call
jb
pusha
add
add
and
dec
inc
not
mov
mov
nop
data16
cs
xor
add
add
and
adc
cmp
movs
ds
dec
fwait
mov
sub
and
push
dec
adc
mov
dec
clc
enter
add
fs
and
stos
and
mov
sub
mov
mov
(bad)
sub
mov
mov
push
push
in
mov
mov
or
xchg
jne
or
and
in
mov
add
push
in
mov
scas
and
arpl
xor
imul
test
cmps
push
mov
je
sub
mov
xor
scas
mov
jns
scas
and
mov
dec
sub
add
lods
sub
aad
das
adc
aam
stc
ja
mov
adc
mov
sub
jle
add
add
mov
xchg
dec
repz
imul
add
(bad)
leave
fst
mov
add
add
lods
dec
mov
dec
jo
rol
cmp
mov
and
sbb
xchg
out
cmps
bound
add
add
adc
add
sub
std
or
out
les
jp
and
add
add
inc
lds
add
add
cli
xor
xor
mov
add
inc
add
es
jmp
sar
add
add
add
add
push
add
cld
adc
sbb
stc
movaps
add
(bad)
xor
add
push
add
add
test
mov
nop
xchg
add
xchg
cwde
cdq
add
add
popf
sahf
lahf
mov
movs
movs
cmps
cmps
test
add
scas
mov
add
mov
mov
add
mov
ret
(bad)
(bad)
enter
retf
int3
int
iret
rcl
add
rcl
aad
add
add
xlat
fcomp
add
fcmovnu
fstp
fnstsw
loope
loop
in
out
call
in
in
out
out
lock
add
add
add
repz
cmc
div
clc
stc
add
sti
cld
std
(bad)
inc
add
or
or
add
movups
adc
adc
add
pop
sbb
sbb
sbb
add
pop
and
and
and
add
daa
sub
sub
add
add
sub
das
cs
jle
pop
cmp
add
inc
out
(bad)
rcr
pop
pop
push
pusha
and
jmp
push
push
mov
push
add
add
add
dec
add
dec
dec
dec
dec
dec
push
add
push
push
push
push
push
pop
and
and
push
xchg
xor
mov
add
add
daa
imul
or
in
repnz
test
pop
scas
das
les
test
das
fnsave
test
add
add
outs
in
mov
jo
fbld
dec
inc
jg
fmul
or
pop
push
cmp
adc
dec
sti
loope
inc
stc
pop
add
add
inc
or
ja
and
pop
mov
push
adc
and
out
push
loopne
ret
add
sbb
cmps
pop
sbb
sbb
cmp
dec
and
mov
hlt
mov
and
mov
xlat
scas
icebp
mov
daa
stc
outs
push
scas
sar
push
es
inc
imul
mov
cld
lds
adc
add
add
xchg
ja
(bad)
repnz
(bad)
data16
enter
dec
mov
mov
add
add
icebp
out
dec
dec
repnz
mov
mov
xchg
stos
adc
mov
ds
inc
add
add
sbb
and
gs
out
adc
mov
pop
inc
ins
jmp
sub
in
mov
ret
and
add
add
test
cs
mov
mov
xor
stc
push
mov
cmp
pop
fnop
sti
aam
repz
sub
and
arpl
and
pop
mov
add
add
movs
test
in
cs
sub
int3
dec
clc
ficom
mov
nop
lock
icebp
add
add
js
mov
mov
out
mov
cmps
xor
sub
std
or
push
or
cmp
imul
add
adc
jno
inc
sub
into
stc
adc
mov
(bad)
test
cmp
mov
retf
xor
add
add
sbb
fild
push
pop
dec
sub
or
pop
dec
sbb
sbb
push
add
add
add
sub
sub
es
mov
and
cmp
mov
int3
mov
add
add
outs
repnz
pop
imul
mov
dec
inc
cmps
sub
dec
ss
sub
jl
cmp
add
add
call
sar
pop
jne
je
cmp
nop
xor
ds
nop
movs
cmp
nop
enter
add
add
test
sti
inc
ss
int3
jmp
pop
cs
push
fnstcw
xor
add
add
jp
fstp
popf
ret
xchg
sub
sbb
xchg
dec
test
dec
cmp
movs
retf
add
add
xchg
in
ins
ficom
inc
sbb
pusha
dec
and
ror
(bad)
hlt
lds
mov
or
add
add
cld
mov
cmc
or
ficomp
dec
dec
arpl
mov
jle
xchg
jns
ins
in
cs
add
add
jo
cmps
jb
aam
jge
jbe
cmc
pop
lock
pop
cmp
jl
(bad)
in
xchg
mov
pop
test
cmp
add
add
push
and
xor
inc
dec
sar
cmp
js
mov
xchg
mov
pop
nop
push
add
add
xor
sub
dec
ins
mov
jmp
jb
add
or
sbb
add
nop
xchg
repnz
jb
push
inc
(bad)
xchg
mov
in
cmp
sub
add
add
retf
retf
jl
jb
test
sub
mov
cmps
sub
outs
jbe
adc
add
add
xor
cmp
sti
aas
ja
iret
fs
cmp
outs
ja
jmp
inc
out
neg
or
add
add
shl
stos
out
leave
xlat
stc
les
gs
pop
ins
outs
(bad)
imul
inc
push
mov
outs
add
add
xor
out
or
push
mov
or
inc
hlt
stos
mov
add
jne
shr
gs
or
add
or
push
sbb
dec
(bad)
adc
inc
hlt
add
adc
xor
add
add
xor
inc
outs
mov
aam
aad
dec
ins
in
fs
cmp
and
dec
inc
cmc
sub
add
mov
sbb
mov
lock
push
dec
jne
icebp
rol
add
add
popa
jns
push
outs
(bad)
dec
cmp
cs
lds
ins
out
xchg
jns
jge
sldt
add
push
movs
(bad)
aaa
bound
repz
pop
icebp
xor
aaa
lods
jns
and
add
add
aad
push
sahf
push
push
push
div
ja
call
mov
bound
inc
or
ins
xor
jecxz
push
clc
test
aas
fs
mov
inc
xchg
sub
pop
mov
test
dec
dec
xchg
add
add
dec
dec
sub
out
dec
and
jns
mov
into
adc
mov
dec
sti
mov
add
add
pusha
and
push
push
inc
dec
out
and
pop
shl
sub
mov
outs
mov
add
(bad)
push
xchg
and
or
jb
fst
xchg
add
add
cli
fs
and
popa
imul
and
jmp
sub
jae
popa
arpl
mov
mov
xchg
push
jmp
xchg
stos
xchg
jne
push
push
xor
inc
sbb
mov
test
inc
adc
pushf
in
mov
inc
xor
xor
or
push
sub
rol
add
add
lods
lds
aaa
outs
in
xchg
ja
mov
imul
cmp
test
jbe
mov
add
add
xchg
shl
xor
xor
pusha
xchg
pop
stos
xor
das
inc
mov
(bad)
out
mov
xor
clc
leave
add
add
or
out
and
xchg
sub
cmp
sub
call
ins
dec
add
add
ja
jg
cmps
lods
pop
push
sbb
xor
jae
xchg
repz
push
lahf
push
ja
inc
sub
add
add
popf
ror
dec
mov
push
push
outs
pop
das
cmc
mov
inc
push
sub
mov
add
(bad)
and
xchg
cld
adc
pop
pop
dec
cs
adc
imul
mov
mov
mov
add
cmp
pop
nop
xor
cs
rcr
jp
enter
jmp
add
add
mov
mov
ins
leave
sbb
rcl
and
das
mov
dec
jb
mov
cmp
push
fist
inc
and
cs
inc
test
dec
repz
rol
add
add
mov
jne
mul
and
je
daa
out
aas
push
cs
je
scas
add
add
add
pop
mov
mov
in
outs
jp
sub
jnp
lahf
jnp
std
imul
nop
push
add
add
push
jge
mov
jmp
and
pushf
add
mov
mov
xor
add
add
rcl
sub
les
dec
pop
sub
jo
fs
gs
gs
pop
sbb
add
add
pop
xchg
fsub
gs
(bad)
scas
cmp
pop
das
mov
ins
aad
daa
xchg
push
and
add
add
xchg
imul
movs
cmps
and
out
cmp
sub
inc
js
jb
imul
add
cmp
mov
ficom
scas
imul
fs
mov
dec
aad
or
add
add
sub
xchg
push
adc
nop
inc
pushf
das
call
push
xchg
aad
inc
mov
imul
test
mov
scas
xor
sti
(bad)
xor
jmp
stc
aam
div
add
add
push
movs
test
mov
div
mov
jle
cld
hlt
scas
test
and
xchg
jge
add
add
mov
adc
jle
test
cs
pop
push
push
xchg
add
pop
add
xor
mov
add
adc
in
cmps
in
cmp
lahf
push
push
push
xor
jle
sub
add
mov
daa
jb
cs
xchg
xor
pop
mov
neg
lock
or
sub
adc
add
add
push
rcr
cmp
sbb
retf
jno
add
pusha
inc
mov
repz
ret
add
add
outs
movs
add
add
js
fs
imul
push
adc
xchg
add
add
xor
push
or
adc
sbb
ja
sbb
mov
adc
inc
xchg
xlat
add
add
sahf
into
lahf
or
(bad)
cmp
add
ds
inc
sbb
jns
cmp
mov
jo
add
add
mov
(bad)
sub
mov
je
cmp
cmp
ror
inc
lea
inc
add
add
dec
jae
sti
jmp
inc
fidivr
jo
and
sbb
enter
inc
push
dec
leave
dec
xor
fnstcw
pop
add
add
int3
shl
pop
gs
jmp
mov
shr
(bad)
sbb
sbb
xor
jns
bnd
add
add
imul
lods
jno
jp
or
cmp
xchg
xor
loop
(bad)
aaa
add
add
jl
pushf
call
adc
pop
pop
rol
fs
and
inc
and
test
adc
out
sub
add
add
add
xor
mov
aas
mov
or
js
push
ss
jo
push
add
add
adc
mov
adc
addr16
sub
mov
pusha
jg
std
div
pushf
dec
push
mov
add
add
adc
add
jmp
mov
add
push
inc
sub
pop
or
aaa
xor
push
repz
add
loop
mov
enter
push
xor
outs
add
inc
xchg
jecxz
pminub
mov
add
add
push
mov
pop
pop
es
mov
sub
hlt
hlt
out
mov
add
sub
ins
bound
and
jmp
push
jle
retf
add
shr
loopne
push
jne
jb
jns
mov
mov
(bad)
adc
jp
jle
add
add
dec
adc
dec
sbb
test
lea
and
std
push
leave
mov
sub
xor
pop
fs
add
add
outs
and
xor
jo
call
pop
sbb
pop
ja
dec
sbb
mov
add
add
data16
dec
dec
in
(bad)
cmc
arpl
pop
in
js
mov
and
js
xor
or
add
add
or
(bad)
clc
jl
sbb
sub
dec
or
out
push
sbb
mov
outs
mov
jns
cmp
sub
add
add
ror
or
cwde
fiadd
jae
(bad)
dec
xor
xchg
mov
ret
adc
xlat
add
add
mov
dec
mov
shl
nop
es
cmp
addr16
push
xchg
sti
add
add
pop
cmps
ror
jmp
push
sub
lods
jl
stos
sub
or
add
add
jns
enter
xor
popa
push
mov
repz
push
xchg
sub
add
push
dec
jecxz
jmp
adc
fs
sub
stos
cmp
mov
ins
cli
mov
add
add
js
test
out
dec
fs
dec
push
or
andps
repnz
sbb
add
add
xor
xchg
mov
xchg
lahf
or
test
ins
in
addr16
mov
add
mov
(bad)
mov
int
add
outs
les
mov
in
int
sbb
clc
sub
jp
add
add
mov
clc
ds
jbe
push
jl
pop
xor
mov
xor
or
lods
push
mov
add
add
ins
lahf
daa
xchg
stc
ja
clc
mov
mov
rcl
imul
addr16
add
add
loopne
test
cli
sub
lods
pop
xchg
xor
cs
fs
loop
shr
mov
or
add
add
xchg
popa
neg
shl
mov
cld
cwde
hlt
mov
jne
fcomp
sbb
shl
scas
add
add
jne
mov
nop
std
outs
mov
fsubr
jbe
ins
jb
(bad)
sti
xor
sub
call
lock
stc
mov
cmps
dec
or
retf
adc
test
cli
aas
call
sbb
pop
lods
mov
add
dec
imul
jmp
loop
fbld
dec
mov
leave
jg
add
add
ret
add
stos
sbb
jge
nop
cli
fisttp
mov
into
(bad)
shl
mov
mov
add
fidiv
cmc
scas
inc
mov
enter
cmps
jmp
enter
jb
add
call
add
cmp
test
xor
jmp
mov
pop
movs
(bad)
pop
jmp
push
and
dec
mov
add
add
xchg
out
jge
cmp
stos
aas
sbb
cmp
mov
test
ins
pop
push
lea
aam
ins
add
add
dec
das
neg
xor
fstp
xor
xor
mov
into
js
cmp
pop
in
jo
add
add
and
adc
aas
test
inc
mov
pusha
std
add
push
xchg
cmp
add
add
jl
popf
in
or
clc
sti
xchg
mov
aaa
mov
cs
(bad)
mov
pop
stc
(bad)
retf
add
add
pop
cs
xor
xchg
push
pop
mov
push
fld
das
push
mov
jne
nop
adc
xor
add
push
xlat
(bad)
mov
je
xor
and
sbb
hlt
lods
dec
dec
(bad)
loopne
outs
mov
xlat
repz
mov
add
fidivr
std
aaa
push
and
mov
loopne
das
pop
pushw
fdivr
mov
pop
dec
sub
add
add
xchg
aam
xlat
fisubr
sti
xchg
out
and
sub
shr
nop
fsubr
leave
jno
pop
xor
add
add
jne
gs
adc
popf
jb
xchg
outs
loope
cmc
jb
xchg
cwde
es
(bad)
bound
add
add
push
retf
jmp
inc
or
data16
arpl
mov
and
and
ins
outs
jbe
imul
add
push
clc
clc
shl
sub
js
push
sbb
sub
gs
jl
ins
in
add
add
inc
pushw
addr16
mov
scas
adc
retf
je
push
fs
mov
add
add
aad
mov
jge
out
mov
mov
jnp
ja
jg
inc
or
not
add
add
retf
mov
inc
or
jbe
stos
xchg
jp
outs
sub
outs
out
jb
addr16
aad
adc
rol
add
add
es
dec
xor
push
jb
xor
push
ins
jmp
movs
test
ret
add
add
sub
xchg
movs
adc
adc
sbb
pushf
pop
aam
les
mov
add
add
add
and
sub
push
jb
test
cmp
xor
pop
dec
push
jne
push
push
or
test
add
jecxz
jmp
jp
sti
dec
jl
je
push
gs
bound
jbe
inc
adc
xchg
add
add
fs
mov
(bad)
cmps
dec
add
mov
mov
jns
jae
imul
add
adc
movs
imul
stos
sbb
cmp
adc
loop
pop
adc
bound
in
jb
xchg
pop
mov
add
add
push
ins
jne
jl
movs
fist
mov
in
je
xor
lahf
mov
pushf
(bad)
int
push
add
add
int
inc
ds
nop
adc
dec
hlt
xor
inc
xor
bound
test
dec
lahf
test
add
add
imul
fs
sbb
pusha
movs
sbb
sub
call
sbb
add
add
(bad)
xchg
cmp
mov
cmp
mov
adc
sbb
add
dec
call
add
add
dec
js
aad
je
cmps
scas
in
ins
adc
(bad)
aaa
mov
sub
stos
push
inc
add
add
adc
cdq
lock
call
or
sub
add
jbe
mov
pushf
sub
call
add
add
inc
or
cmp
push
pop
scas
or
(bad)
hlt
or
call
mov
dec
inc
rcl
adc
add
add
shl
pop
dec
pop
or
lahf
inc
fcom
mov
retf
mov
and
and
add
add
dec
push
cmps
pusha
inc
inc
sub
jo
push
sub
adc
enter
cmp
or
dec
loopne
xchg
add
add
mov
or
push
mov
or
inc
and
or
je
gs
pop
add
add
or
push
push
or
inc
sub
sub
or
inc
or
mov
clc
int
sub
adc
add
add
fcomp
dec
push
or
or
stos
lock
push
push
xchg
ror
js
or
push
xchg
mov
loopne
or
and
or
dec
or
and
lds
enter
add
add
dec
adc
or
movs
push
or
mov
adc
mov
add
add
ins
xchg
inc
or
cmp
adc
sahf
shl
sub
push
sbb
xor
sbb
or
add
add
fnstenv
mov
sub
hlt
or
mov
dec
or
mov
add
add
adc
retf
adc
lock
retf
fs
inc
push
push
or
nop
dec
add
add
jl
adc
cwde
aaa
jo
jmp
adc
pop
iret
mov
xchg
xor
and
add
sub
mov
or
mov
loope
jmp
test
add
add
pop
out
xchg
scas
bound
cmc
in
das
jns
jle
cmp
push
addr16
ds
daa
jnp
in
call
add
add
lods
push
sub
sub
scas
int
xchg
test
mov
retf
mov
xchg
clc
and
lds
add
jmp
out
pop
cmp
jno
in
daa
cwde
clc
dec
inc
jo
imul
xor
xchg
mov
add
add
nop
mul
push
sbb
pop
out
dec
push
push
cwde
dec
ja
cmp
scas
pop
scas
imul
add
jne
mov
data16
sahf
xchg
xchg
leave
mov
sub
and
scas
add
add
cs
ins
(bad)
das
xor
dec
leave
cmp
imul
mov
leave
sub
cli
add
add
test
icebp
call
pop
push
inc
dec
cmps
shl
outs
xchg
scas
sub
test
or
bound
outs
add
add
inc
xchg
movs
jmp
pushf
loope
cs
cdq
push
dec
aas
lods
cmp
dec
mov
mov
repnz
stos
(bad)
mov
jg
jo
fiadd
jo
xchg
daa
adc
sub
out
jle
mov
sahf
mov
in
inc
inc
inc
xchg
loope
and
je
jmp
inc
(bad)
ins
cmp
dec
ins
out
mov
add
add
and
cdq
pop
inc
pop
test
mov
jp
lods
push
pusha
and
lahf
je
and
jnp
pop
push
mov
fs
jge
sbb
xor
jmp
out
or
xchg
and
mov
pusha
imul
dec
xchg
movs
adc
add
add
lahf
je
std
dec
cmp
push
in
inc
stc
mov
jmp
and
or
add
add
nop
push
mov
bound
or
jl
inc
jae
and
jno
arpl
push
adc
les
add
add
clc
sub
imul
dec
jl
inc
dec
or
fs
fistp
mov
sub
add
add
inc
nop
aam
mov
mov
aaa
call
sub
into
mov
dec
add
add
lock
stos
push
mov
sti
dec
sbb
dec
xchg
cwde
movs
inc
sub
cmp
mov
mov
scas
bnd
cmps
lods
call
sub
inc
mov
sbb
inc
bound
add
adc
mov
or
cmp
or
sbb
and
sub
daa
jl
dec
add
add
(bad)
popaw
imul
push
jmp
and
sub
or
jns
mov
add
cs
xor
mov
and
or
sbb
dec
call
jb
jno
jne
cld
jmp
jb
dec
mul
inc
sbb
adc
xor
test
test
rol
call
add
or
sub
scas
and
jo
sbb
fcmovnu
jle
adc
push
sub
cmp
push
aaa
or
or
add
adc
and
inc
ror
mov
push
nop
push
adc
lock
add
mul
xor
es
and
xchg
or
add
add
mov
je
jo
xor
pusha
ins
es
inc
push
cdq
pusha
add
add
or
and
inc
sbb
lock
adc
dec
cld
sbb
dec
inc
xchg
cmp
cmp
enter
add
sub
sub
and
and
sbb
or
adc
clc
push
and
inc
aam
mov
push
xchg
add
add
xor
adc
lock
nop
mov
dec
and
dec
cmp
cld
adc
hlt
call
add
add
dec
and
clc
adc
mov
and
mov
add
add
jg
repz
pop
push
data16
dec
jns
fsubr
inc
pusha
inc
je
icebp
sub
jne
jmp
add
add
xor
or
and
jmp
mov
sub
aam
pop
add
inc
add
add
ins
fs
xadd
jno
je
cmp
xor
ins
mov
or
add
add
lahf
loopne
jne
pop
fisttp
jle
pusha
jb
(bad)
pop
in
sbb
dec
ss
leave
push
add
add
enter
clc
fist
pop
sti
bound
sar
or
jb
jo
dec
enter
add
(bad)
retf
lahf
mov
movs
lea
je
jmp
push
test
aad
add
add
xor
test
inc
movs
jge
pop
push
shr
loop
xchg
sbb
stos
cmp
sub
xlat
push
push
lahf
pop
push
jl
sub
ins
mov
jp
sub
and
pop
inc
call
add
add
out
sub
call
fdivr
pop
jge
lods
leave
sub
xchg
jle
stc
repnz
dec
add
add
add
mov
aad
pop
(bad)
stos
outs
out
adc
adc
cs
cmp
lods
and
and
add
add
adc
stos
sub
jp
call
xor
xchg
inc
cmps
jmp
add
add
ins
pop
pop
loope
inc
cmp
repnz
call
shr
add
add
mov
mov
jne
sub
outs
mov
and
pop
je
jb
cmp
add
add
cmp
mov
xchg
add
je
push
dec
test
mov
mov
add
add
push
xor
rcr
lock
push
cmp
pop
repz
stos
and
mov
mov
xor
sub
xchg
and
and
sbb
test
cli
inc
scas
push
add
add
pop
dec
adc
dec
or
call
push
lock
xchg
push
repz
lds
sub
add
add
popf
pop
sub
js
ds
mov
test
js
shr
push
cmps
add
add
sub
idiv
std
ret
mov
jbe
fmul
and
add
pushf
add
add
out
jne
xor
push
repz
sbb
or
popf
test
sub
dec
add
add
xchg
pop
mov
and
xor
inc
movs
in
jns
push
imul
sar
mov
cwde
into
imul
nop
fs
mov
lods
jae
ja
cmps
ret
ins
adc
gs
repnz
add
das
sahf
xchg
push
aad
xor
cs
dec
movs
fsub
into
cld
mov
add
(bad)
fs
dec
push
repnz
xchg
(bad)
outs
mov
push
push
jae
mov
pop
sbb
cld
sub
ror
push
gs
lahf
es
cmp
lods
or
ins
mov
add
add
push
xor
sub
bound
outs
addr16
and
ja
sbb
mov
in
adc
add
add
jmp
jle
les
mov
lods
cli
in
inc
test
dec
cmp
dec
cs
and
add
add
inc
cmc
les
push
fwait
out
dec
movs
out
mov
jg
popa
jbe
push
arpl
adc
in
fstp
add
add
cs
dec
cld
pop
fwait
pop
lods
mov
movs
lods
jno
call
and
ja
mov
jbe
add
add
call
jl
cmp
dec
div
or
loopne
adc
lods
shl
add
add
ror
cwde
dec
ins
xchg
dec
sub
pop
out
adc
daa
lods
push
inc
and
popa
icebp
and
add
add
or
jmp
stos
mov
dec
adc
mov
sub
inc
fstp
add
add
mov
and
push
jae
pusha
jg
cmp
(bad)
xor
adc
inc
pop
or
test
add
add
and
repnz
or
cmp
adc
in
or
add
add
ds
retf
fiadd
cs
movs
and
(bad)
fisub
add
dec
ins
pop
(bad)
mov
movs
push
(bad)
loop
out
sbb
add
add
cs
mov
jmp
(bad)
inc
sub
hlt
xlat
stc
(bad)
ja
mov
add
sub
leave
push
ss
jbe
nop
dec
pop
std
mov
and
int
or
retf
or
jo
adc
add
add
jmp
jo
or
sub
in
adc
sti
mov
call
xchg
stos
add
add
mov
cmp
jae
inc
push
fldenv
sbb
adc
ins
mov
add
shr
add
cmp
cmp
push
push
ja
cmp
imul
inc
adc
push
mov
add
dec
dec
add
add
nop
push
push
and
jno
(bad)
mov
dec
xchg
(bad)
pop
(bad)
add
push
inc
inc
cmp
add
add
leave
popf
sub
lock
push
sti
int3
les
mov
leave
inc
jne
aaa
and
pusha
dec
inc
push
add
add
push
or
inc
pop
jge
mov
(bad)
jecxz
call
cmp
xor
(bad)
sbb
jnp
loopne
add
add
addr16
sub
dec
stos
les
fwait
ror
push
inc
js
and
ss
and
and
add
add
jb
ret
movs
mov
xchg
repz
cmps
not
mov
mov
stos
dec
sub
add
add
ins
dec
and
call
js
xchg
call
mov
xchg
iret
adc
iret
add
add
or
mov
dec
add
movs
push
xor
sub
loop
mov
ss
loop
add
add
mov
sbb
cld
pop
jmp
sbb
addr16
shl
lock
add
add
adc
clc
test
stos
into
dec
mov
call
dec
and
cmp
sub
repnz
add
add
shr
dec
fcom
test
xor
cmp
jo
sahf
movs
ja
jo
repz
data16
test
test
movs
push
add
cli
cmp
push
or
sub
and
sub
adc
pop
or
scas
dec
clc
push
add
push
add
nop
rol
add
std
inc
fisttp
fild
cmp
call
add
push
inc
and
and
xchg
xor
xor
push
xchg
rol
add
add
jl
movs
adc
xor
gs
pusha
push
mov
lods
inc
cld
call
jl
add
add
mov
mov
adc
add
jae
jno
xor
dec
call
sbb
add
add
loope
jmp
and
rol
mov
and
test
add
pop
pop
add
add
mov
mov
add
jbe
pop
shl
ret
sbb
mov
test
add
add
mov
clc
nop
inc
cmp
nop
mov
rcr
out
and
lods
jno
add
and
add
mov
call
dec
add
std
push
xchg
scas
ins
aaa
push
mov
(bad)
pop
add
add
add
adc
push
xchg
mov
sbb
lock
cwde
inc
pop
fwait
pop
cmps
stc
sbb
add
adc
sbb
xor
cmp
retf
bound
jo
xor
stos
mov
add
add
xor
push
jbe
ins
sbb
mov
push
cmp
inc
stos
jg
jae
inc
add
add
add
pop
out
or
add
jo
adc
int3
add
(bad)
int3
and
or
cmp
fild
add
add
movs
std
ins
test
inc
loope
cmp
jo
test
or
push
cmp
xchg
xor
lea
add
add
inc
retf
xor
dec
sbb
xor
gs
sub
mov
mov
and
add
add
das
and
stc
loopne
lock
pushf
repnz
inc
fsub
dec
xor
and
sub
cmp
add
add
dec
sar
adc
cmp
cld
inc
xor
push
jno
(bad)
xchg
les
add
add
rol
adc
stc
add
cmp
add
add
pop
and
ss
xchg
xor
ss
pushf
and
add
add
dec
enter
enter
push
and
je
cwde
call
mov
xor
and
add
add
push
add
inc
mov
push
and
push
les
hlt
fisub
add
adc
sahf
inc
imul
and
jns
pusha
sbb
pusha
nop
sbb
sub
mov
hlt
sub
adc
call
jecxz
cmp
mov
add
add
loop
pop
mov
(bad)
and
push
push
or
aaa
mov
dec
pop
mov
xor
test
add
xchg
push
mov
pop
xchg
sbb
push
js
je
mov
int
dec
je
add
add
push
mov
enter
sub
sar
push
mov
dec
adc
add
add
and
dec
mov
jo
cmp
pop
adc
sub
call
pop
push
add
add
(bad)
mov
cmp
inc
or
cmp
sbb
xchg
js
add
js
add
add
adc
and
add
push
je
push
mov
inc
fs
shr
and
pushf
call
add
pushf
cwde
in
dec
mov
cmp
pop
sub
cwde
nop
cmp
mov
hlt
cmp
add
add
mov
movs
jle
sub
fadd
cmp
xchg
xor
cld
add
mov
inc
test
add
add
inc
sar
and
adc
enter
xchg
add
mov
cmp
sub
cmp
in
cmp
inc
add
add
mov
pop
call
pushf
or
bound
inc
cmp
fs
and
aam
push
add
jo
push
sbb
pushf
inc
test
mov
into
fisub
push
fsubr
add
add
add
cmp
xor
push
push
fsub
cmp
and
sub
push
push
cmps
push
add
ins
and
add
xchg
xchg
dec
mov
sub
je
js
enter
leave
add
and
add
add
or
sbb
inc
pop
xchg
mov
aas
add
dec
pusha
mov
adc
aam
xor
add
add
(bad)
ins
push
dec
pusha
or
ds
test
sar
aam
inc
movs
mov
fadd
add
add
inc
clc
or
aas
dec
mov
call
test
mov
movs
sbb
movs
pop
mov
add
add
movs
int3
dec
add
lock
aas
xor
mov
and
daa
ss
lock
movs
aas
(bad)
adc
add
add
add
fiadd
enter
adc
and
xor
and
add
push
mov
in
jl
pushf
mov
lds
test
fsubr
mov
inc
xchg
fdivr
adc
mov
inc
add
add
lods
push
and
(bad)
fmul
icebp
fs
and
xchg
adc
ins
and
add
adc
add
in
rcl
js
nop
in
js
hlt
mov
pop
mov
in
inc
mov
add
add
push
inc
fmul
inc
loope
js
call
xchg
pushf
adc
jne
add
add
cmp
dec
int3
jns
adc
and
push
retf
jo
pusha
out
gs
ins
pop
les
add
add
(bad)
xor
push
inc
je
and
(bad)
in
ins
inc
js
jl
and
in
retf
add
add
fmul
cmp
and
dec
mov
inc
pop
loopne
adc
sbb
sub
add
add
inc
loopne
add
push
xor
dec
inc
jns
loop
sub
dec
xchg
retf
fnstenv
ds
test
add
add
xchg
xchg
pushf
and
in
pop
adc
pushf
pop
xchg
in
shl
inc
cmp
inc
and
add
add
rol
in
(bad)
xchg
mov
cwde
in
aas
and
jp
enter
in
adc
jp
add
add
enter
adc
jecxz
cmp
xor
cmp
inc
loop
and
jl
mov
dec
add
add
stc
pusha
pop
and
lods
enter
bnd
xchg
lods
repnz
and
jl
inc
inc
adc
push
and
add
add
aam
inc
inc
cmp
inc
inc
ror
nop
xor
mov
loop
mov
inc
hlt
xchg
and
add
cdq
and
pushf
rcl
and
in
dec
cld
call
(bad)
dec
cmp
sub
xchg
cmp
add
add
int
inc
sub
dec
lods
dec
adc
in
dec
test
je
cmp
add
pop
sbb
mov
hlt
fnop
popf
and
daa
inc
xor
pusha
jae
mov
mov
inc
dec
mov
add
add
and
and
jo
in
jl
fs
and
je
and
sbb
add
and
ins
sub
mov
in
dec
pushf
rcr
inc
sub
jno
pop
add
add
dec
pop
cmp
sub
fsub
loopne
inc
dec
js
int3
and
jl
inc
mov
add
add
mov
add
dec
pop
add
push
ficomp
bound
fsub
and
das
mov
fdivr
dec
(bad)
mov
add
add
es
lock
sub
and
cmp
inc
lock
sbb
cmp
lock
fs
outs
movs
sbb
xchg
or
push
jl
pusha
xchg
movs
repnz
lahf
mov
icebp
aam
pop
rol
jecxz
sub
dec
add
add
pop
adc
ret
pop
adc
repz
inc
dec
adc
push
es
and
pop
and
mov
or
dec
cmp
movs
push
mov
mov
mov
repnz
call
inc
dec
and
add
add
stc
call
xor
js
dec
mov
add
dec
loope
adc
nop
or
add
add
outs
inc
or
dec
call
push
add
pushf
je
pop
sbb
test
add
add
hlt
icebp
pusha
mov
and
cmp
addr16
inc
dec
clc
repz
push
in
mov
dec
je
add
add
add
test
add
je
inc
mov
and
jns
bswap
enter
sbb
push
xor
add
add
inc
movs
sub
clc
sbb
(bad)
adc
and
xor
and
shl
jo
push
add
add
mov
adc
repnz
jl
inc
and
ds
sub
pop
push
lods
jecxz
cmp
cmp
inc
les
add
add
jecxz
pop
push
push
push
mov
nop
add
pop
les
add
add
fild
and
or
int3
movs
push
sbb
push
add
push
cs
mov
add
add
push
cmp
les
cmp
mov
mov
pop
or
and
cmp
mov
adc
add
add
mov
dec
loopne
cld
mov
adc
jecxz
cmp
sub
push
mov
jle
or
ret
add
add
add
mov
or
clc
pop
(bad)
xchg
and
lods
in
dec
int3
stc
and
enter
adc
and
add
add
sbb
adc
cld
cld
(bad)
xchg
dec
je
push
sahf
add
push
jmp
xchg
pop
add
push
loope
je
add
add
pusha
jae
leave
bnd
mov
ror
lock
and
sub
shr
add
push
or
sbb
and
mov
jo
push
(bad)
adc
dec
pusha
xchg
ins
dec
test
add
add
and
add
push
dec
fs
dec
pushf
stc
lods
adc
int3
aas
inc
cmp
cmps
mov
lock
rcl
add
add
and
test
sbb
xor
adc
sub
fs
or
mov
inc
les
jo
add
jb
loopne
xor
and
add
hlt
cmp
das
push
cwde
push
loop
sar
test
push
and
test
les
hlt
pop
push
sahf
add
adc
inc
add
add
sub
cmp
loop
test
ret
cmp
pop
push
shl
adc
sub
mov
add
add
inc
hlt
hlt
mov
push
mov
(bad)
inc
jnp
lock
xchg
or
add
add
add
cmp
inc
(bad)
dec
and
push
adc
aas
inc
inc
cmp
xor
xchg
add
add
mov
or
adc
mov
adc
add
nop
adc
add
add
add
stc
call
xchg
xor
cwde
cmp
movs
dec
sub
xor
add
jo
(bad)
out
and
pop
hlt
icebp
in
and
push
mov
out
aam
pop
dec
and
add
add
jecxz
cmp
inc
push
push
mov
and
les
in
dec
xchg
stc
je
enter
adc
push
add
aam
and
and
xchg
les
mov
adc
dec
xor
and
loop
add
add
pop
cmp
hlt
pop
(bad)
xchg
ins
and
xchg
mov
hlt
add
push
shl
add
add
mov
mov
sub
lock
out
or
or
js
inc
dec
xchg
loop
mov
and
add
add
adc
jbe
call
sub
fiadd
and
adc
js
push
inc
add
dec
cmp
iret
add
add
add
test
cdq
push
mov
pop
xor
cld
and
pop
lds
push
sbb
cmp
add
add
icebp
pop
adc
dec
js
loop
pop
cmp
cld
ja
mov
ins
xor
xor
test
mov
add
aam
hlt
mov
add
sub
mov
rcr
(bad)
lock
pop
pop
(bad)
xor
add
add
adc
movs
push
and
bound
pop
pusha
add
add
lds
shl
push
add
sbb
add
pop
xchg
jo
sbb
cmp
add
test
add
enter
or
imul
pop
enter
jns
sbb
mov
add
add
mov
scas
mov
in
aam
mov
js
push
bound
push
data16
xor
inc
push
adc
add
or
cmp
mov
enter
fiadd
inc
push
nop
add
mov
add
loopne
mov
mov
fld
push
xchg
cld
adc
cmp
inc
mov
add
mov
fadd
inc
pusha
js
lods
push
stos
mov
mov
js
pusha
mov
or
mov
add
add
add
mov
int3
ds
fcom
jecxz
sub
popa
push
sbb
inc
cmp
add
add
jns
cmps
mov
push
popa
cmp
fs
rol
in
int3
adc
sub
test
mov
add
rol
and
sbb
cwde
adc
push
inc
add
mov
cwde
dec
in
loopne
add
add
mov
lods
mov
pop
enter
mov
xor
add
jge
rcl
add
add
add
cmp
mov
mov
cmp
mov
rcl
mov
add
add
or
pop
jno
sub
mov
inc
push
fs
icebp
pusha
arpl
sub
pop
in
add
pushf
arpl
add
add
add
cmp
xor
mov
mov
mov
xchg
lock
mov
fs
add
add
cmp
jnp
dec
xchg
pop
push
fs
mov
enter
fsubr
sub
nop
je
inc
and
add
movs
pop
outs
jmp
fs
lods
cmp
add
or
sbb
jl
cmp
add
add
xor
and
std
sbb
js
test
push
mov
add
gs
dec
lds
cwde
add
add
int3
cld
mov
aam
in
lock
bswap
aam
fcom
and
xor
and
add
add
loopne
sub
mov
aam
xor
ins
lods
push
xchg
sub
mov
add
add
sahf
clc
and
sub
inc
cmp
push
mov
adc
cmp
push
inc
pusha
lea
sbb
add
add
pop
mov
gs
jo
pushf
in
ins
push
nop
mov
enter
inc
test
add
add
lods
xchg
clc
in
or
adc
into
mov
push
clc
dec
les
adc
inc
(bad)
pop
pop
add
add
push
jl
or
pop
cdq
cld
repnz
(bad)
lahf
ror
mov
cmp
push
les
add
add
inc
and
das
pop
lock
cmp
jno
mov
inc
imul
push
add
mov
ins
imul
js
repnz
mov
inc
cwde
mov
int3
inc
in
push
mov
lods
pop
xchg
mov
adc
lds
pop
mov
push
add
add
int3
adc
add
push
cdq
mov
cmp
xchg
in
and
xchg
fcomp
dec
and
add
(bad)
icebp
mov
nop
adc
imul
jmp
jmp
mov
add
pusha
imul
jo
push
cs
pop
sbb
push
mov
imul
dec
nop
mov
and
or
mov
ins
add
inc
add
add
mov
mov
icebp
adc
and
and
aas
fsubr
push
mov
dec
loope
loopne
cmp
add
add
retf
fld
sbb
popf
jo
cmp
mov
ins
int
xchg
fcom
add
add
bound
aaa
mov
adc
lds
ins
push
cmp
sbb
push
add
add
ins
ins
addr16
ins
mov
aas
inc
dec
enter
repnz
enter
jge
xchg
add
add
add
xor
and
jle
outs
dec
mov
push
repnz
and
cmp
xchg
push
jl
inc
add
add
mov
es
das
mov
je
aam
loopne
inc
ins
repnz
bound
add
add
icebp
outs
pop
dec
dec
push
movs
pinsrw
js
mov
ins
inc
js
loopne
inc
pop
les
or
add
(bad)
push
xchg
icebp
test
hlt
enter
jo
adc
in
lods
mov
scas
add
add
add
les
fisub
xor
add
jo
xchg
fstp
nop
fcomp
(bad)
sbb
push
test
add
add
add
jo
and
int3
push
dec
fcom
xchg
and
in
pop
adc
sbb
xor
jo
les
add
add
sub
pushf
hlt
add
mov
loop
xchg
pop
xchg
cmp
mov
sub
add
mov
add
dec
js
pop
mov
pop
and
inc
lock
jb
pop
mov
dec
pushf
les
jb
add
add
push
jb
nop
add
hlt
mov
xchg
xchg
mov
inc
mov
and
dec
clc
in
cmp
out
add
add
adc
mov
mov
jb
push
fnstenv
push
frndint
adc
jae
xor
and
movs
not
add
add
cld
push
jbe
or
and
mov
lods
xor
push
cdq
add
ss
inc
inc
test
xchg
mov
and
js
xchg
test
inc
cmp
cmp
pop
xchg
mov
loop
(bad)
cmp
push
je
xchg
les
add
add
enter
das
xchg
test
push
add
pop
data16
je
xchg
in
jo
push
imul
sub
ror
jns
adc
and
jne
pusha
adc
and
jns
pop
and
das
cmp
add
add
add
jne
xchg
or
lock
adc
jne
sub
add
and
fdivr
inc
add
test
pusha
xchg
aam
repnz
lock
cdq
cmp
add
mov
and
xor
and
add
add
mov
jbe
and
enter
jl
mov
movs
mov
enter
add
xchg
mov
add
add
loop
pop
cmp
test
dec
test
xchg
sub
sbb
or
jl
adc
and
mov
add
add
add
push
pop
mov
xor
je
nop
sub
dec
pop
cmp
movs
dec
add
add
xchg
mov
lods
xchg
mov
mov
imul
adc
in
adc
add
add
shl
popf
and
and
dec
les
js
and
or
test
adc
nop
pop
sar
icebp
add
ss
and
cwde
sar
xor
fsubr
je
mov
dec
mov
sahf
add
add
add
jns
xchg
xor
and
sahf
in
cmp
ret
or
add
fild
loopne
add
jl
loopne
mov
inc
sbb
dec
xchg
test
jle
or
mov
add
add
jg
cmp
sbb
dec
ror
and
or
mov
push
aaa
add
and
dec
mov
fcom
or
jo
in
mov
test
in
xor
and
add
add
test
mov
xchg
loope
push
mov
inc
sti
dec
inc
mov
mov
add
and
push
mov
push
xchg
mov
push
call
add
sub
dec
dec
mov
xchg
popa
and
cwde
inc
clc
push
ins
xchg
or
add
sbb
ror
xchg
add
inc
inc
xchg
or
mov
adc
adc
xchg
and
inc
nop
add
add
xchg
pop
cwde
add
xor
ret
adc
inc
mov
nop
and
inc
push
fwait
or
add
add
dec
popf
dec
xchg
or
and
mov
arpl
push
lahf
fs
call
enter
add
nop
xchg
loop
xor
and
enter
inc
mov
fsub
adc
mov
and
cld
movs
cmp
inc
inc
cmps
rol
and
stos
pop
xchg
fs
inc
sub
icebp
enter
mov
cld
and
lods
inc
pop
mov
popa
scas
outs
jns
xchg
adc
scas
and
add
add
ror
inc
mov
mov
mov
dec
adc
and
mov
js
test
fcom
xchg
mov
cmp
out
dec
mov
retf
xor
push
mov
shl
cmp
xchg
clc
adc
mov
add
add
sub
dec
retf
xchg
sti
adc
mov
fmul
dec
nop
mov
add
add
adc
xor
cwde
or
rcl
ds
test
add
add
or
and
add
inc
inc
(bad)
or
(bad)
and
inc
enter
mov
adc
add
add
leave
add
and
dec
call
sbb
add
inc
(bad)
int3
add
iret
add
ror
add
add
scas
xchg
ficomp
or
and
icebp
shl
sti
inc
cmp
add
mov
aad
pop
imul
and
(bad)
add
dec
mov
xor
inc
arpl
mov
fadd
dec
scas
xchg
out
fstp
mov
mov
fcmovu
sub
mov
enter
add
push
fild
dec
push
and
fadd
mov
frstor
or
fisub
add
add
test
fist
js
mov
or
add
nop
dec
lock
add
add
icebp
mov
test
adc
adc
lock
out
pusha
fcom
or
adc
and
ss
popa
or
in
cmp
inc
or
out
nop
sbb
xor
lock
dec
loopne
add
add
inc
icebp
adc
mov
repnz
add
dec
stc
mov
hlt
adc
in
ss
leave
or
add
add
inc
test
pusha
repnz
add
inc
pusha
stc
or
cli
and
or
add
add
mov
adc
std
inc
cmps
lock
inc
sbb
sbb
or
add
add
or
dec
loopne
xor
adc
add
mov
cwde
add
mov
neg
pop
add
add
sbb
xchg
ja
inc
or
test
mov
add
and
or
inc
or
jbe
(bad)
stc
or
add
add
add
inc
add
pop
enter
dec
adc
les
pusha
shl
ins
adc
or
ins
adc
add
add
ss
adc
test
sbb
xchg
inc
fldenv
sbb
adc
shl
dec
sbb
js
adc
sbb
dec
and
jecxz
inc
push
inc
push
add
add
adc
xor
add
and
inc
pop
and
icebp
mov
or
sbb
add
add
daa
mov
or
sub
sti
and
xchg
sub
or
cmc
(bad)
or
add
das
add
mov
inc
mov
sub
xor
push
xor
xor
mov
xor
and
cmp
dec
jp
sub
add
add
inc
jl
ins
cmp
cmp
add
mov
ds
inc
cmp
add
jle
mov
adc
add
inc
mov
or
cwde
adc
dec
and
and
add
add
dec
inc
in
dec
mov
or
and
dec
add
dec
add
inc
ror
dec
add
push
or
add
add
or
dec
jge
ror
push
adc
push
and
and
pop
and
pop
and
pop
and
add
sbb
add
inc
mov
sti
pusha
add
popa
add
mov
bound
add
aam
mov
inc
repnz
pop
and
pop
enter
add
add
pop
and
xchg
or
addr16
dec
ror
add
and
sbb
xchg
add
add
dec
loope
sub
push
ins
inc
std
popf
inc
ins
or
test
or
mov
add
je
jge
adc
xchg
and
jbe
push
ds
adc
and
mov
push
ja
adc
mov
xor
push
inc
jo
add
adc
enter
loopne
or
lock
jp
fild
jnp
repnz
jl
mov
adc
add
add
jge
cmp
dec
nop
xchg
rcr
or
and
call
sbb
jmp
adc
and
stos
fimul
adc
int3
inc
and
and
and
add
add
cli
mov
test
nop
test
cmp
add
inc
push
xchg
sbb
and
add
add
inc
lods
and
pusha
mov
pop
les
adc
mov
(bad)
jns
and
add
scas
mov
adc
nop
add
ret
inc
or
mov
xor
add
add
and
xchg
inc
mov
xor
or
and
and
add
add
cdq
inc
dec
jnp
xlat
adc
call
fwait
or
mov
adc
sbb
mov
or
sahf
add
or
outs
mov
mov
sbb
stos
adc
and
movs
add
add
add
dec
push
(bad)
in
mov
movs
sbb
fmul
and
fwait
in
or
add
add
test
loopne
adc
or
xchg
or
not
fsub
or
add
dec
pusha
xchg
xchg
and
inc
clc
sub
or
and
lods
add
dec
mov
lods
mov
add
adc
scas
add
dec
jmp
and
scas
inc
test
mov
mov
inc
adc
mov
dec
enter
lock
fimul
ins
mov
(bad)
add
or
mov
add
ins
or
mov
stos
and
inc
dec
mov
enter
ret
out
outs
add
cmp
mov
mov
add
add
mov
and
mov
and
inc
and
add
add
mov
rcr
inc
mov
stos
and
inc
add
or
and
mov
jecxz
adc
add
and
jecxz
adc
and
inc
jns
cmp
or
jo
add
add
stos
inc
fmul
inc
ret
inc
mov
nop
and
dec
lock
les
and
lds
dec
add
add
test
adc
or
fist
and
add
test
mov
enter
test
fisttp
mov
add
dec
shr
and
inc
add
add
repnz
retf
fs
jnp
ret
xchg
call
dec
inc
sbb
or
cmp
adc
clc
adc
and
clc
xor
add
mov
or
add
rcl
inc
and
adc
rol
push
mov
rcl
mov
rol
add
add
push
adc
fs
or
nop
mov
push
and
sbb
jl
and
add
add
sbb
mov
add
add
pusha
cmp
inc
mov
mov
xor
cmp
jo
in
inc
adc
sub
add
add
adc
or
adc
cmp
or
push
adc
shr
sbb
loopne
add
add
push
dec
adc
mov
sub
loopne
adc
sbb
mov
or
add
add
fs
push
xchg
add
xchg
ins
pop
add
cmps
cmp
inc
mov
mov
add
add
adc
mov
sub
cmp
(bad)
call
push
mov
js
add
or
xchg
in
add
add
jb
sub
adc
or
fsub
loopne
mov
and
dec
ins
ret
inc
and
clc
lahf
adc
add
add
es
jl
and
daa
mov
and
movs
ret
mov
sbb
mov
add
hlt
mov
add
inc
jle
inc
sub
mov
and
je
les
pusha
or
add
add
sub
xchg
js
enter
jb
sub
adc
or
mov
icebp
inc
sub
mov
or
add
add
add
adc
and
add
data16
adc
cmp
clc
or
adc
in
dec
push
(bad)
aam
xor
add
add
pusha
test
adc
nop
mov
pop
(bad)
adc
adc
mov
mov
sbb
mov
and
cmp
xor
sar
fstp
cmps
push
icebp
xchg
stc
mov
add
add
adc
or
xor
xor
dec
cmp
sub
xor
mov
leave
inc
add
add
inc
test
push
(bad)
arpl
adc
xchg
loope
mov
call
add
adc
sub
or
scas
rol
push
(bad)
cld
loop
cdq
fs
dec
cmp
or
or
xchg
and
in
and
pop
inc
xor
mov
adc
and
sbb
call
add
inc
nop
jle
jo
mov
xor
nop
sbb
scas
mov
or
test
mov
mov
add
xchg
pop
dec
mov
jecxz
in
mov
ds
xor
in
mov
xchg
lds
xor
add
add
inc
(bad)
into
cwde
adc
xchg
das
ins
test
push
xchg
cmp
je
pusha
arpl
pop
dec
mov
movs
add
add
in
and
or
dec
fs
dec
hlt
in
das
pop
sbb
aam
fwait
mov
and
mov
add
add
sub
jle
adc
nop
inc
repnz
mov
inc
pop
jo
xchg
xchg
add
add
shl
shl
jl
mov
mov
adc
or
icebp
ror
sub
fimul
fldcw
push
sbb
add
pop
jle
add
pusha
mov
xchg
pop
fs
cmp
mov
or
lock
jg
jo
add
add
pop
push
and
fs
mov
push
inc
cmp
(bad)
adc
cld
add
add
inc
out
dec
inc
xchg
mov
das
pop
in
xchg
cmp
movs
dec
xchg
push
enter
loope
xchg
cmp
push
in
adc
push
xor
cdq
or
push
mov
or
or
add
add
scas
xchg
mov
or
shl
xchg
ror
fldcw
lods
test
rol
add
add
icebp
cmp
int3
push
adc
mov
adc
aam
sub
push
in
(bad)
pop
fs
jb
cmp
xor
add
add
cmp
xacquire
cwde
sub
xor
inc
(bad)
repnz
xor
add
add
lock
xchg
enter
cmp
xor
cwde
mov
cwde
pop
pushf
adc
pop
xor
cdq
test
add
add
adc
cmp
push
fwait
cwde
les
xor
js
or
lods
je
and
adc
sub
stc
pushf
bound
pop
cmp
mov
lods
nop
sub
cdq
aas
adc
enter
xor
add
add
ret
mov
xor
shl
xchg
cdq
ja
loopne
xchg
or
cdq
mov
fdivr
pushf
pop
add
add
inc
adc
or
pop
inc
or
aam
inc
push
pusha
inc
call
cdq
pusha
enter
rcl
and
inc
add
mov
adc
call
add
scas
add
or
and
or
call
xchg
add
in
js
xchg
xor
add
add
test
cmp
jo
les
mov
jle
mov
add
add
push
sbb
(bad)
mov
lock
sub
loop
test
add
scas
fs
cmp
adc
inc
xor
js
inc
jo
jo
cdq
or
js
xchg
add
outs
shl
pop
mov
add
add
popf
ret
pop
adc
in
dec
add
jle
jp
add
js
add
ins
adc
add
add
sub
popf
mov
jl
icebp
je
sub
mov
inc
cmps
or
add
inc
adc
add
add
sub
call
lock
popf
loop
cdq
xor
loop
shl
xchg
test
add
or
mov
ins
xchg
rcl
enter
loope
cli
and
and
lea
or
adc
xor
retf
add
add
fs
dec
adc
fs
dec
adc
xchg
cmps
or
scas
xchg
pop
and
add
add
loope
sahf
pop
enter
pop
sub
dec
mov
int3
ret
push
or
or
push
pop
add
add
mov
or
mov
add
mov
or
enter
adc
inc
ins
ins
stos
add
add
adc
arpl
les
inc
and
mov
xchg
push
stc
(bad)
cmp
es
(bad)
xor
add
mov
inc
loop
push
loop
pop
addr16
mov
hlt
sahf
jae
inc
(bad)
jle
inc
or
add
adc
or
mov
movhlps
and
dec
retf
xchg
adc
(bad)
inc
adc
mov
adc
add
add
and
dec
not
and
inc
adc
js
adc
hlt
mov
inc
mov
js
add
add
js
xchg
adc
mov
aas
clc
mov
lock
out
xchg
cld
ror
fmul
loopne
call
add
adc
or
sub
push
sub
je
push
cdq
cmp
adc
je
adc
add
add
add
or
clc
nop
dec
xchg
push
loope
mov
cwde
push
in
ror
shl
fcom
add
add
lock
push
hlt
pop
mov
xchg
sbb
cmps
or
and
xchg
inc
enter
push
jo
lds
add
add
cmp
cdq
or
adc
cmps
or
mov
pop
call
dec
retf
add
add
fmul
inc
mov
inc
adc
xchg
fistp
add
mov
cld
clc
sbb
ret
add
add
push
loop
pop
loop
data16
jno
xor
xchg
xor
xor
add
mov
xor
xor
loop
(bad)
xor
loop
cmc
loop
ret
cld
js
mov
mov
add
add
mov
mov
xchg
inc
inc
adc
mov
adc
imul
cmp
lock
add
mov
push
mov
enter
cld
lock
xchg
inc
sbb
and
add
add
cmp
and
inc
in
repnz
sahf
sub
mov
icebp
es
add
test
cmp
sbb
mov
and
xchg
loope
enter
cmps
cld
and
xchg
push
add
add
sbb
push
and
push
sub
push
xor
push
cmp
pop
mov
push
and
dec
pop
xchg
or
pusha
inc
add
add
or
cmp
mov
inc
push
xchg
mov
addr16
call
mov
cmps
mov
enter
add
gs
jb
mov
and
mov
in
jb
and
dec
enter
pusha
mov
or
add
add
push
sub
mov
cmp
aas
cmp
inc
lea
cmp
cmp
lds
dec
add
add
sub
scas
cmp
lock
loopne
cmp
or
loopne
jl
pusha
xchg
popf
mov
inc
adc
inc
in
inc
or
xchg
cwde
sbb
icebp
sbb
mov
xchg
mov
icebp
pushf
test
adc
loopne
and
bound
add
add
test
mov
les
les
les
les
les
adc
add
add
mov
xchg
or
jl
xor
adc
mov
stos
sub
clc
cdq
jmp
add
rcr
test
enter
add
add
jae
lds
retf
jo
push
add
pop
(bad)
fmul
dec
dec
loop
mov
cld
xchg
xor
cmp
pop
enter
cmp
pop
stos
mov
loop
iret
test
mov
inc
test
xor
loop
ret
pop
or
mov
sbb
lock
lock
sbb
sub
or
add
add
je
jle
xor
je
les
cdq
sbb
or
inc
pusha
dec
je
or
js
add
add
push
shr
les
or
inc
ret
pop
adc
push
retf
in
jae
add
add
or
shl
enter
cmp
pop
mov
call
mov
add
add
sbb
cmp
mov
adc
pushf
lock
mov
and
pushf
retf
xchg
add
add
pushf
mov
(bad)
dec
mov
fisub
push
pop
sub
scas
icebp
nop
dec
fs
icebp
es
cmp
dec
add
add
add
rcr
icebp
sbb
icebp
sbb
and
jo
scas
xchg
add
add
loopne
push
lock
cld
and
test
xchg
scas
(bad)
ins
mov
sub
cmp
mov
add
sub
adc
cwde
popf
inc
xchg
js
mov
mov
fwait
mov
dec
retf
add
push
or
cld
and
sahf
jge
sub
retf
cmp
sub
adc
add
add
enter
mov
lock
mov
jo
mov
inc
push
int3
stc
sbb
ror
mov
nop
sbb
shl
xchg
fmul
retf
fs
mov
sub
les
jle
adc
adc
lahf
mov
js
pusha
push
xor
jmp
add
add
and
(bad)
jmp
or
mov
adc
add
fdiv
enter
rol
xchg
cmp
fcomp
xor
xchg
rcl
mov
add
add
mov
clc
push
cmp
mov
push
mov
loope
mov
pop
xor
inc
lahf
dec
add
add
inc
sub
mov
add
mov
add
and
lock
adc
js
mov
xor
add
add
mov
pushf
js
je
inc
pop
or
mov
mov
cld
mov
in
pop
enter
add
and
mov
mov
pop
mov
adc
enter
push
pushf
add
add
mov
xchg
cwde
dec
xor
mov
je
pusha
xchg
mov
sbb
sbb
cdq
mov
retf
add
add
in
jb
cdq
pusha
jmp
in
les
mov
mov
lahf
test
pop
and
add
add
dec
add
xchg
fsubr
dec
pop
xchg
in
lds
xor
sub
mov
pushf
cmp
dec
adc
je
dec
adc
call
clc
xchg
pop
sbb
jns
rcl
add
add
and
mov
push
xchg
daa
ins
pushf
icebp
arpl
test
mov
in
sub
(bad)
loop
mov
push
sub
add
add
cld
icebp
jae
mov
and
rcl
movs
addr16
mov
mov
in
adc
add
gs
xor
push
inc
test
cld
mov
stc
ror
add
add
in
stc
clc
adc
add
pusha
pop
sbb
sbb
dec
mov
pushf
push
mov
sub
push
jnp
add
add
sbb
xchg
mov
enter
repnz
icebp
sub
add
out
sbb
sbb
daa
add
add
mov
mov
xchg
or
and
mov
js
icebp
ds
pushf
inc
mov
add
add
pusha
icebp
sbb
push
and
cmp
pop
add
xor
fcomp
add
add
ja
test
retf
inc
(bad)
cld
shl
je
cdq
or
add
mov
adc
pop
adc
ins
xor
js
out
mov
dec
je
dec
rol
cmp
clc
mov
adc
add
add
mov
sbb
enter
add
das
pushf
and
xchg
xor
cmps
jle
pusha
dec
daa
int
add
add
mov
cmps
xor
dec
push
push
out
and
inc
or
mov
mov
test
cdq
enter
sbb
xchg
sbb
dec
or
mov
adc
and
adc
inc
add
add
inc
adc
adc
call
inc
adc
cmp
sbb
or
sbb
dec
sbb
add
add
mov
and
and
dec
test
or
int3
jb
add
add
sub
sub
sbb
hlt
and
dec
cld
xchg
sub
add
ds
xor
xor
add
add
adc
inc
xor
xor
and
xor
adc
mov
dec
dec
in
xor
pop
cdq
or
add
add
cmp
push
add
(bad)
xlat
aaa
dec
mov
adc
jp
(bad)
lock
(bad)
fwait
jl
pop
adc
add
dec
loop
test
sbb
adc
adc
push
test
add
add
adc
add
add
call
and
xchg
fmul
sub
jecxz
dec
nop
(bad)
mov
cs
adc
or
add
sbb
inc
and
in
or
in
adc
hlt
cmp
adc
stos
push
loope
cmp
adc
add
add
sub
fcmovb
cmp
inc
cmp
mov
(bad)
lods
adc
js
add
add
pop
sub
je
push
push
stos
arpl
arpl
arpl
in
push
call
add
add
or
mov
jb
mov
fcom
adc
test
xchg
in
jecxz
pop
add
add
sbb
stos
lds
jo
gs
fmul
xchg
xchg
int3
bound
push
mov
jg
add
add
push
fild
inc
dec
and
and
push
add
sbb
fist
stos
aas
and
mov
loopne
add
add
push
and
les
mov
mov
pop
or
lea
mov
cld
and
and
add
add
or
icebp
or
cmp
sbb
mov
js
mov
mov
les
aam
mov
add
add
test
ror
cld
shl
mov
add
and
mov
pusha
lock
adc
mov
xchg
mov
pop
in
add
jae
adc
cmp
cmp
in
and
and
ret
sub
test
ret
in
add
add
adc
add
sbb
sub
add
gs
and
push
pop
adc
add
add
ins
lea
push
dec
js
xchg
xor
and
dec
pop
xchg
ins
enter
add
dec
or
mov
movs
jnp
add
adc
mov
nop
and
int3
adc
pop
retf
enter
loopne
loope
lods
add
add
cmp
iret
in
(bad)
in
adc
lods
mov
push
mov
dec
repnz
js
add
add
mov
inc
movs
hlt
cmp
sbb
add
les
stc
sbb
scas
in
push
lds
nop
add
add
js
test
or
adc
sbb
cdq
sub
or
std
sbb
mov
lock
inc
add
add
xor
loopne
repnz
lods
lods
inc
(bad)
lds
mov
mov
(bad)
nop
adc
cwde
lods
stc
jecxz
inc
sbb
std
and
mov
mov
sub
(bad)
mov
add
add
xchg
jl
inc
add
pusha
(bad)
xor
loop
int3
push
mov
into
mov
add
add
hlt
mov
scas
push
or
xchg
movs
mov
scas
lods
(bad)
adc
sbb
loop
mov
dec
add
add
add
enter
adc
or
scas
lds
mov
cmp
lods
adc
add
add
pop
loop
mov
push
test
inc
sub
in
mov
jle
push
mov
and
pop
push
add
add
enter
enter
xchg
mov
test
jl
mov
or
push
add
leave
(bad)
js
scas
adc
xor
leave
clc
loopne
sahf
xchg
clc
icebp
cmps
or
adc
add
add
or
icebp
or
lock
nop
loopne
adc
mov
sub
(bad)
xor
(bad)
cmp
loope
or
push
add
add
push
or
lods
inc
shl
retf
pushf
retf
mov
loope
mov
mov
in
jb
and
add
add
dec
xor
push
sbb
and
and
jo
retf
test
mov
mov
add
shl
cdq
push
in
cld
xchg
f2xm1
dec
fs
cmps
or
mov
inc
or
push
xor
mov
add
add
mov
in
cmp
call
int3
jbe
not
pop
lock
inc
invd
inc
int
loopne
pop
push
ins
stc
add
add
lods
test
retf
int3
adc
jo
test
mov
pop
or
and
add
add
call
pop
lds
mov
mov
icebp
push
jns
std
adc
nop
add
add
cmp
in
in
les
jb
mov
jle
rcr
adc
cmp
sbb
in
add
add
mov
hlt
push
adc
pop
sbb
mov
lock
pop
(bad)
or
pop
sbb
and
into
push
mov
pop
and
inc
into
(bad)
cld
and
push
pusha
and
cmp
mov
add
add
(bad)
into
jle
shr
and
(bad)
fdiv
mov
mov
mov
or
cmp
sbb
add
add
mov
and
dec
fbld
in
push
pusha
sub
xchg
jns
and
and
add
add
pop
or
hlt
iret
mov
cmp
pop
clc
mov
push
js
fwait
push
push
leave
and
fisubr
(bad)
jmp
add
add
xor
adc
(bad)
and
das
adc
test
mov
movs
jl
add
lock
mov
mov
mov
mov
sub
or
js
push
dec
add
add
and
loop
mov
adc
movs
cwde
dec
shl
mov
les
dec
cmp
sub
retf
sbb
add
add
(bad)
xlat
out
xor
mov
sbb
sbb
xlat
adc
mov
ret
int3
lods
add
add
js
xchg
cdq
js
loop
inc
loop
xchg
cmp
and
icebp
jo
ins
js
imul
sbb
mov
add
add
add
dec
adc
fwait
and
jb
mov
mov
inc
mov
loope
sub
add
add
in
sar
xchg
adc
mov
sbb
mov
lock
aam
push
add
(bad)
ror
xor
add
add
or
mov
sahf
clc
daa
fcmovne
les
imul
adc
mov
sub
cmp
add
add
arpl
sub
js
inc
sub
js
jecxz
in
cwde
(bad)
dec
cs
jo
rcr
add
xor
mov
test
aam
ret
pop
ret
add
add
mov
push
fsub
test
jl
stc
xor
nop
bound
xor
loop
add
add
in
pop
sbb
arpl
adc
out
mov
xor
pop
mov
add
add
sub
cmp
cmc
sub
inc
aad
pusha
inc
mov
push
js
clc
add
add
xchg
cmp
sbb
and
pop
and
xor
(bad)
adc
mov
mov
add
cmp
lock
inc
call
pop
dec
pushf
scas
adc
jecxz
in
xor
adc
arpl
add
add
inc
adc
ins
xlat
out
loop
sbb
mov
mov
loopne
or
call
mov
loopne
scas
cmp
and
sub
push
sub
push
pop
sub
add
add
add
js
popf
inc
sub
cmps
movs
xchg
loopne
lock
sub
or
cld
and
mov
push
in
cld
stos
and
outs
dec
neg
sub
adc
add
add
or
mov
fmul
push
dec
inc
loopne
mov
not
sub
add
add
fisubr
sbb
pusha
and
xor
and
xor
fisubr
fist
add
add
pop
retf
fs
js
sbb
jae
mov
push
hlt
inc
jmp
add
loop
sbb
add
add
retf
sbb
mov
sub
cmp
or
adc
sbb
lea
or
cmp
mov
add
int3
ret
push
mov
dec
bound
jg
pop
or
fistp
jo
mov
mov
or
bound
fs
sub
je
adc
sbb
clc
add
add
sbb
mov
jae
and
mov
xor
cmp
inc
dec
cmps
or
add
add
sbb
mov
or
popa
and
mov
xchg
aam
(bad)
mov
dec
js
icebp
sbb
popa
jmp
add
add
xchg
pop
dec
cdq
or
add
cdq
or
jbe
push
jle
sub
add
add
scas
in
push
mov
or
jmp
cmp
xchg
rcr
xchg
ins
test
(bad)
and
ror
inc
and
popa
and
inc
imul
mov
add
add
and
mov
and
push
fwait
jl
xchg
sub
sbb
loopne
add
add
mov
fcomp
test
add
sbb
movs
je
loopne
in
cld
mov
mov
add
add
fdivr
dec
and
test
sbb
arpl
les
les
lds
inc
test
js
add
add
test
loopne
ret
xor
adc
(bad)
jo
(bad)
js
clc
cdq
mov
add
add
jno
mov
loope
loope
pushf
icebp
or
push
mov
ret
pop
mov
call
les
rcl
mov
ror
jne
(bad)
jo
loop
js
test
loop
test
sub
mov
je
push
add
rol
test
pop
rol
icebp
pop
mov
cdq
cmp
loope
add
add
mov
pop
mov
js
test
jle
clc
adc
popf
call
dec
or
(bad)
je
add
add
mov
ss
push
call
add
ret
push
or
adc
adc
or
add
aas
add
dec
ror
adc
aam
add
add
outs
mov
jbe
(bad)
jle
lock
lea
inc
clc
or
push
or
pop
and
add
add
adc
je
mov
js
mov
add
enter
ret
xor
loop
stc
loop
add
pop
add
add
adc
xchg
xchg
sub
push
cmp
jno
push
imul
or
clc
aam
xor
add
add
je
les
cmp
inc
ret
stos
(bad)
loop
clc
js
xchg
pop
fsub
mov
and
nop
add
add
nop
jo
out
and
in
and
in
mov
mov
je
or
mov
sbb
add
add
pop
test
arpl
les
and
ret
sbb
hlt
aam
int3
dec
nop
scas
adc
add
mov
inc
icebp
imul
pop
nop
ret
xor
loop
and
xor
cmps
adc
and
icebp
push
dec
add
add
je
cmps
or
and
or
je
cdq
or
mov
mov
leave
add
add
mov
and
xchg
loope
jmp
sbb
jle
xchg
lds
sahf
cs
(bad)
and
xor
cmp
mov
and
push
retf
fs
cmp
dec
pop
stos
cmps
or
sub
js
ret
or
retf
in
xor
fistp
mov
and
mov
mov
push
pop
sub
or
sbb
and
and
xchg
cmp
add
addr16
pusha
les
lea
add
add
scas
adc
or
ret
jae
gs
xor
mov
or
(bad)
mov
js
loopne
add
xchg
push
mov
lds
fwait
test
clc
lods
mov
jmp
add
jle
mov
mov
in
fmul
(bad)
xchg
int3
cwde
icebp
sbb
add
(bad)
xor
add
add
loop
sbb
dec
jmp
dec
enter
add
adc
mov
jmp
add
add
inc
adc
into
jo
or
adc
or
cmps
adc
cld
jmp
js
jmp
add
or
mov
add
pop
mov
or
or
enter
add
in
je
pop
pop
enter
dec
adc
mov
xchg
adc
pop
mov
push
adc
mov
and
js
mov
add
add
jo
aaa
adc
dec
aas
mov
add
in
lock
fnop
mov
cli
ret
sub
add
add
repnz
inc
call
adc
icebp
nop
mov
stc
ror
ins
stc
lock
clc
and
xchg
ins
add
adc
cld
push
xchg
sub
lahf
mov
xchg
add
mov
add
add
mov
mov
outs
stos
test
or
cmp
sub
nop
dec
not
add
call
ja
in
and
or
dec
adc
or
and
add
add
dec
xor
or
imul
add
jo
inc
mov
jp
mov
sub
fsubr
add
add
adc
dec
lods
or
add
or
adc
cld
sub
or
adc
ins
push
mov
retf
rcl
dec
add
add
add
test
popf
mov
mov
dec
adc
dec
adc
dec
adc
or
adc
add
add
add
or
jmp
fdiv
icebp
jbe
cmp
pop
jo
add
push
mov
sbb
add
add
mov
and
xchg
ss
jb
cmp
pop
mov
and
js
and
mov
adc
and
dec
and
scas
adc
add
add
and
sbb
in
mov
les
js
push
mov
cwde
aam
mov
icebp
xchg
cdq
adc
add
add
loop
inc
push
mov
adc
and
icebp
mov
cmp
sub
add
add
(bad)
int3
int
call
enter
xor
sbb
dec
call
push
xor
or
add
jle
clc
inc
loop
dec
loop
sar
clc
push
gs
adc
and
dec
add
add
js
and
mov
cdq
sbb
lods
mov
mov
pop
dec
into
xchg
sbb
fst
xchg
loope
add
add
sbb
mov
dec
sbb
cmps
or
xchg
adc
rol
push
xor
sbb
bound
add
add
adc
and
jb
and
dec
dec
in
dec
daa
xchg
and
inc
outs
sub
test
dec
nop
cdq
or
add
add
cmps
cmps
adc
mov
mov
mov
xor
xchg
xor
out
xor
add
xor
cmp
gs
es
pop
into
xchg
pop
add
popa
sub
repz
add
dec
sub
and
iret
sbb
mov
dec
cdq
or
pop
add
sub
and
jo
js
lods
mov
and
add
mov
adc
mov
sbb
and
dec
fst
sbb
mov
add
add
adc
and
dec
std
xchg
sbb
or
mov
sbb
add
cmp
call
pop
enter
push
sub
sub
iret
and
clc
push
and
push
xchg
pop
pusha
retf
fs
inc
add
jo
add
js
mov
add
rcl
out
or
adc
xor
xchg
add
add
(bad)
cmc
inc
test
cmc
jg
sub
sbb
jle
pusha
in
outs
inc
add
pop
int3
sub
add
add
loopne
idiv
inc
mov
inc
mov
neg
adc
sar
inc
cmp
inc
cmp
inc
add
add
inc
loopne
sub
cmps
nop
loop
sbb
push
test
add
sub
add
xchg
fiadd
cmp
add
lock
sar
mov
cmp
adc
and
and
dec
add
or
in
dec
or
mov
push
xor
or
adc
mov
adc
adc
ret
inc
adc
mov
mov
sbb
mov
adc
and
dec
not
add
add
sbb
pop
rol
(bad)
push
adc
mov
or
aaa
and
dec
aas
xchg
and
or
adc
sub
add
jle
iret
jo
mov
mov
or
nop
adc
rcr
add
add
pop
stc
lahf
lods
mov
jno
pop
sub
xor
cmp
in
cmp
sub
call
enter
fsub
push
call
test
and
mov
cmc
xchg
test
dec
cli
add
add
(bad)
loopne
xchg
dec
xor
jmp
pop
in
fiadd
push
cli
xchg
cmp
inc
loope
aad
and
xchg
add
add
loopne
add
mov
cmp
inc
loopne
fs
and
(bad)
adc
sbb
xor
inc
add
add
(bad)
sub
in
sub
and
jg
mov
sbb
aas
adc
jns
pop
xor
and
stos
addr16
add
add
mov
jl
enter
cmp
(bad)
loop
xlat
pushf
enter
mov
sub
adc
icebp
loopne
or
call
mov
pop
xor
adc
iret
add
or
aam
pushf
std
push
lods
inc
cmp
dec
jecxz
fidiv
pusha
sbb
jl
fcomp
mov
add
xchg
xchg
mov
enter
push
sahf
or
cmps
xchg
ror
ficom
cmp
inc
(bad)
repnz
add
push
add
add
sub
pop
ret
pop
ret
adc
and
push
adc
cwde
jl
mov
add
stos
out
cli
mov
pop
adc
or
mov
loop
(bad)
aas
cmp
fimul
or
add
add
and
cdq
mov
enter
inc
sub
pop
lahf
je
sub
pop
aas
xchg
mov
retf
add
add
ror
cmp
lock
sti
jno
fisttp
and
clc
xor
cmps
movs
adc
cld
pusha
movs
sub
add
add
sub
nop
adc
or
push
scas
cmp
shr
nop
(bad)
out
or
push
add
sub
inc
xor
add
add
or
cmp
pushf
xchg
inc
call
and
icebp
mov
stc
rcr
cmps
or
cmp
add
add
dec
mov
(bad)
lahf
cmp
pop
push
loopne
test
add
call
sub
sbb
cmps
or
and
push
and
push
pop
dec
sub
add
add
xchg
and
push
sub
sar
dec
or
mov
call
add
fiadd
or
or
xchg
pop
rcr
pop
or
in
jl
js
icebp
push
enter
add
add
fdivr
and
adc
or
push
adc
xchg
or
fld
push
add
add
dec
and
cmp
je
or
cmp
fbld
pop
fcomp
les
bound
or
mov
push
adc
icebp
mov
or
cmp
dec
inc
and
xchg
lock
clc
push
cmp
scas
inc
add
add
bound
loopne
sub
mov
sbb
jmp
hlt
mov
aas
and
loopne
aam
xor
jo
add
add
dec
fcom
sbb
or
mov
cwde
jae
(bad)
into
les
push
nop
scas
and
sti
and
push
inc
sbb
or
mov
and
cmps
sbb
sti
sub
sub
hlt
repnz
add
ss
shl
sub
iret
test
stos
cmp
push
je
add
cs
jb
cmp
adc
and
fwait
sub
sbb
add
add
or
pop
inc
and
push
push
dec
and
jl
loop
in
push
push
xchg
js
retf
add
or
mov
test
cmp
sbb
mov
in
or
add
pop
and
adc
mov
mov
mov
sbb
and
cmps
or
sub
xchg
add
add
sbb
or
jo
mov
adc
mov
or
mov
add
add
adc
(bad)
push
lock
sub
loopne
add
or
adc
sbb
mov
add
xor
cmp
dec
mov
and
enter
jb
sub
outs
adc
add
fdivr
inc
adc
inc
or
lock
pusha
clc
pop
mov
sbb
adc
add
adc
cmp
sbb
mov
and
dec
jl
jno
jns
or
xor
add
add
mov
enter
or
loopne
pop
sbb
test
mov
out
sbb
mov
add
mov
xor
outs
mov
push
mov
pop
and
add
adc
js
adc
and
dec
nop
sbb
xor
mov
mov
or
mov
sub
or
or
cld
ror
enter
push
test
out
adc
arpl
xor
add
lds
or
mov
sbb
cmps
sbb
or
push
xchg
pop
inc
retf
ins
add
cdq
cmps
or
xchg
mov
retf
shl
add
leave
cmp
adc
or
mov
sbb
dec
or
cmps
sub
add
outs
jge
dec
dec
cmps
or
and
push
cwde
mov
push
mov
sbb
jl
repnz
inc
add
enter
and
xor
add
cmps
or
sub
add
add
xchg
mov
sahf
clc
and
movs
icebp
cmp
sbb
cmps
or
and
mov
sbb
add
add
mov
and
jns
retf
mov
cmp
or
mov
inc
mov
movsx
es
push
add
dec
gs
enter
enter
stc
in
or
sbb
add
add
nop
or
inc
in
push
mul
sub
test
jo
dec
js
jl
or
mov
enter
xor
add
add
or
push
xor
call
clc
cmp
mov
dec
adc
mov
ja
mov
pop
cmps
sub
or
lahf
add
xchg
rol
in
mov
pop
add
add
xor
jne
add
adc
and
js
in
outs
adc
cmps
jo
xchg
int3
push
xchg
mov
add
es
lds
push
dec
test
mov
leave
cmps
dec
mov
add
add
fs
jb
mov
or
sbb
mov
int3
adc
xchg
adc
mov
fs
add
xor
push
rcr
das
ins
int3
push
fcmovne
and
mov
inc
or
add
or
nop
sub
add
add
cli
adc
lds
clc
lock
inc
push
clc
pop
jo
out
les
inc
cmp
push
and
int3
add
add
or
cmps
or
dec
cld
sub
ins
fst
fwait
cld
mov
adc
in
and
jecxz
cmp
sar
leave
or
add
pop
lods
in
xor
cdq
or
sbb
scas
mov
out
xchg
cld
mov
pop
nop
adc
add
add
inc
cdq
or
or
gs
or
sbb
pop
pop
loope
adc
add
add
sub
adc
xchg
call
nop
inc
clc
imul
mov
dec
add
add
or
test
cdq
inc
dec
adc
lock
pop
mov
adc
push
or
sub
add
mov
enter
adc
jae
popf
push
dec
push
in
pushf
call
repnz
adc
adc
add
mov
xor
cdq
or
loop
lock
scas
inc
icebp
cmp
lds
xor
add
add
and
cmp
cmp
adc
push
mov
mov
nop
mov
cdq
or
adc
push
xchg
ret
and
inc
retf
or
loope
or
add
cmp
inc
jns
adc
sbb
or
repnz
pushf
or
push
ja
mov
add
add
pushf
add
retf
xor
add
and
sub
movs
dec
dec
pop
test
sbb
dec
add
add
hlt
nop
push
adc
pop
les
repnz
repnz
sbb
icebp
cmp
add
add
call
loope
jge
or
pusha
fidiv
cmp
pop
and
dec
sub
cld
or
add
call
cmp
test
jge
nop
sbb
push
repz
push
add
pop
adc
test
sub
enter
and
jo
xor
fnstcw
loope
jmp
pop
and
and
sbb
dec
stc
or
add
add
push
mov
sbb
(bad)
stc
js
fs
cmp
push
aam
add
add
and
xchg
in
add
loope
sbb
and
xor
mov
sbb
push
add
add
sbb
icebp
outs
mov
sbb
push
adc
xchg
pusha
sub
add
dec
or
sub
shr
(bad)
xor
test
icebp
add
add
ss
adc
mov
inc
int
shl
or
pusha
enter
jl
xchg
inc
push
jo
loopne
add
add
push
pusha
push
sub
xchg
jo
and
xor
sbb
nop
jae
(bad)
mov
test
scas
sub
xor
mov
mov
or
fcom
test
cmp
mov
or
fcomp
imul
pop
or
ins
add
add
sbb
not
xchg
test
jb
push
cdq
or
jns
bound
aas
adc
fs
loopne
loopne
push
test
push
mov
lahf
in
jae
add
adc
(bad)
into
mov
rol
xor
adc
add
add
mov
pop
test
leave
nop
add
push
mov
pop
mov
sbb
pop
es
and
jl
mov
sbb
or
ror
dec
sbb
cmps
or
add
add
mov
sbb
icebp
jg
enter
jecxz
aaa
mov
stc
stos
out
test
stc
clc
mov
adc
mov
inc
or
and
sbb
mov
and
add
rcr
cld
push
or
nop
enter
xor
rol
mov
adc
cli
add
add
sub
movs
aaa
mov
inc
rol
sbb
sar
enter
popa
mov
cmp
jo
add
add
out
les
(bad)
cmp
add
xchg
and
and
rol
mov
gs
inc
inc
and
cli
test
fsqrt
mov
mov
mov
mov
sti
push
jo
and
add
call
pop
aas
sub
cmp
sahf
and
jl
jo
adc
add
add
repnz
mov
sbb
sbb
icebp
ds
nop
aam
cmp
add
add
or
fadd
icebp
daa
xor
popf
pushf
sahf
test
mov
loope
and
sub
or
clc
and
test
and
shr
adc
or
sub
ja
icebp
sbb
inc
mov
popf
mov
pop
sahf
add
add
loopne
les
mov
xchg
mov
xchg
pop
das
je
add
add
out
fadd
cld
cmps
call
xchg
call
cwde
mov
mov
pop
and
or
add
add
inc
jb
sub
aam
pusha
cmp
nop
cmps
xor
aas
mov
sub
add
cmp
mov
bound
shl
stc
and
mov
shl
add
add
xor
inc
sbb
sub
cmp
out
adc
adc
add
add
xchg
shl
retf
fs
jb
cmp
push
jo
js
adc
adc
mov
inc
sar
cmp
es
call
add
mov
or
sbb
and
and
dec
xor
mov
cmps
add
scas
or
inc
pop
and
js
and
add
push
les
shl
jb
cmp
sbb
sbb
sub
fld
push
push
or
sub
adc
dec
cmp
adc
js
or
add
add
mov
cmp
push
sub
mov
loop
xchg
or
add
add
adc
adc
test
inc
sbb
mov
mov
sbb
cmps
add
add
adc
xchg
inc
and
sub
mov
rcr
cmps
push
push
pop
or
add
mov
cli
push
sub
mov
loop
cdq
dec
mov
add
xchg
fsubr
retf
gs
or
add
pop
dec
and
mov
add
add
push
fmul
add
adc
sub
in
sub
inc
out
add
add
retf
mov
adc
mov
icebp
jae
loope
add
pop
inc
mov
pusha
test
add
add
xor
js
add
cwde
xor
nop
xor
fld
jge
cmp
pop
retf
add
cmp
fs
mov
add
ror
iret
fcom
js
xchg
dec
mov
add
add
dec
mov
and
cwde
sub
pop
cmp
cmp
sub
mov
sub
daa
cwde
cdq
inc
push
add
add
das
sub
es
adc
or
sbb
xor
and
or
cld
push
pusha
add
add
cmp
push
adc
jnp
sbb
push
and
inc
or
ret
xchg
into
mov
enter
sub
adc
fst
adc
jbe
test
add
dec
add
js
pusha
cmp
nop
sahf
cwde
and
add
add
lock
pop
inc
clc
mov
sub
sub
nop
iret
cmp
jecxz
loop
inc
ror
jg
lods
xchg
lock
add
add
rcl
jp
clc
inc
(bad)
inc
sub
sub
es
xor
cmp
pop
bound
dec
cdq
and
push
pusha
inc
sub
test
dec
out
inc
test
enter
mov
inc
cmp
inc
loop
add
add
shr
sub
or
clc
dec
pop
cmps
and
add
sub
and
daa
xor
and
xchg
cmp
push
xor
add
or
or
pop
rcl
adc
jb
das
add
add
neg
and
inc
mov
dec
ret
lahf
jl
lock
dec
adc
xor
sldt
add
adc
and
xor
adc
ss
cmp
inc
cmp
pop
mov
cmps
adc
or
dec
retf
fs
push
xor
lods
in
push
aam
xor
pop
in
dec
test
add
add
mov
and
xchg
shl
push
inc
fsub
loopne
call
je
xor
xor
add
shl
movs
and
cmp
fwait
or
adc
sub
push
and
add
add
pop
js
pop
mov
icebp
pop
aam
icebp
es
nop
inc
sub
enter
xor
add
add
cdq
or
pop
test
cmps
or
jo
or
adc
xor
inc
mov
inc
add
inc
pop
in
dec
dec
retf
push
add
add
inc
push
and
mov
mov
(bad)
clc
jo
adc
test
add
add
ins
enter
in
cmp
xor
hlt
test
mov
pop
nop
enter
xor
push
rcl
add
cmp
pop
shl
int3
sub
aam
or
or
cmp
pop
enter
shl
fnsave
adc
dec
in
jb
sub
mov
add
mov
and
in
ja
cmp
inc
add
add
mov
sub
pop
xchg
sbb
mov
js
mov
mov
adc
cdq
adc
add
add
dec
or
mov
sub
xchg
push
or
pop
in
jb
cmp
or
xchg
adc
mov
or
mov
mov
or
and
sahf
fldenv
inc
lock
rcl
and
and
add
sar
mov
xor
les
arpl
les
les
add
add
cmps
dec
inc
cmp
test
icebp
es
and
and
push
or
sub
xchg
or
in
xor
and
movs
aaa
adc
or
scas
inc
or
sbb
add
add
xor
fstp
out
icebp
mov
mov
push
cwde
adc
cdq
adc
sbb
xchg
adc
enter
add
add
dec
xor
outs
adc
ror
and
push
adc
dec
mov
stos
jle
push
adc
mov
add
add
sub
enter
jb
cmp
loop
xor
push
fsubr
dec
xchg
ins
push
les
add
add
push
xor
loop
lock
cmp
test
shl
cmp
pushf
mov
movs
push
add
add
mov
cmps
or
add
nop
jg
js
mov
mov
add
and
jb
xchg
mov
packuswb
mov
cmp
sbb
adc
jl
sbb
xor
inc
or
push
add
add
adc
mov
mov
or
leave
inc
add
mov
and
add
jmp
xor
icebp
cmp
adc
jno
aam
pop
test
adc
mov
mov
add
addr16
dec
dec
xchg
add
pop
or
pusha
movs
adc
pusha
bound
mov
add
stos
enter
dec
add
aam
cmp
dec
xor
shl
inc
pushf
cwde
push
jne
xor
fadd
add
add
pop
enter
cmp
loopne
adc
xor
sub
adc
xor
js
cmp
enter
sub
add
add
cmp
adc
xor
adc
lods
xor
mov
add
mov
js
in
lock
add
add
clc
jne
pop
cmps
and
xchg
xor
lds
push
sbb
cwde
movs
and
and
inc
or
cmps
adc
add
push
inc
or
lock
cmp
xchg
or
adc
ret
xor
add
add
xchg
test
adc
xchg
and
pop
adc
cdq
adc
dec
or
mov
sub
add
add
cmp
or
les
jb
and
dec
sbb
xchg
inc
or
dec
in
jb
cdq
shl
cmp
or
inc
jno
jns
add
lods
dec
mov
push
push
add
cld
bound
adc
sub
popa
cmp
or
add
add
aas
mov
sbb
and
mov
and
inc
or
inc
dec
and
add
or
inc
add
rcl
imul
pop
jnp
adc
mov
retf
in
xor
add
enter
cmps
add
jno
add
add
adc
ds
in
inc
and
push
and
lods
mov
and
aas
add
adc
sbb
nop
adc
cwde
jb
cdq
xor
add
add
pop
lock
nop
rcr
sar
cmps
xor
clc
pop
adc
push
or
add
add
sbb
and
mov
inc
call
push
cmps
mov
inc
add
adc
or
add
add
mov
test
inc
jg
inc
pop
and
mov
pop
(bad)
push
mov
mov
inc
jnp
adc
pop
cmp
dec
adc
test
mov
jns
pop
add
add
enter
mov
dec
bound
inc
out
add
jno
pusha
inc
stc
inc
cmp
arpl
cwde
add
iret
add
rcl
dec
enter
jae
jle
mov
mov
ret
add
add
jae
les
clc
sub
adc
stc
rcr
jl
and
adc
cmp
inc
cmp
inc
cmp
add
add
inc
cmp
pop
cdq
pop
loop
je
adc
and
dec
or
pop
sub
inc
add
add
or
inc
loopne
sbb
jg
sbb
loopne
call
add
jb
clc
fwait
adc
sbb
mov
inc
sub
or
add
test
inc
jb
add
add
sar
fsub
jo
push
mov
push
mov
test
addr16
aam
add
add
hlt
repnz
push
adc
mov
pop
inc
cmps
adc
mov
jae
inc
dec
add
add
mov
fild
xor
xchg
mov
lock
xchg
xor
sbb
and
sub
push
add
add
sbb
loop
cmp
push
les
and
mov
je
mov
dec
loop
and
add
add
enter
xor
or
push
iret
push
and
mov
lock
inc
or
add
add
inc
inc
and
jp
sbb
les
mov
lods
mov
sbb
hlt
mov
mov
xchg
jo
rol
add
add
adc
mov
xchg
aam
lods
adc
mov
cmp
pop
out
retf
add
add
push
out
cwde
icebp
sbb
sbb
jo
adc
push
xor
mov
cmp
add
add
enter
and
or
dec
xchg
or
lods
pop
enter
pusha
adc
adc
adc
test
mov
nop
inc
(bad)
mov
cmp
mov
mov
adc
mov
add
sbb
and
mov
push
out
add
add
sbb
pop
or
lock
sub
inc
dec
cmp
pop
loop
lods
pusha
xlat
dec
jmp
dec
push
pop
add
add
push
dec
imul
sbb
test
and
inc
ss
rol
add
add
jbe
iret
adc
rol
fisubr
fs
int3
pusha
lds
pop
imul
add
pop
int3
adc
xor
xchg
mov
js
mov
mov
enter
les
add
add
dec
mov
xor
push
jo
dec
cmp
inc
mov
add
sbb
add
push
add
push
sub
jge
scas
mov
sbb
and
(bad)
cld
add
add
pop
xchg
sbb
sbb
pop
mov
jno
ins
pop
sbb
xchg
pushf
sahf
call
add
add
mov
clc
mov
adc
ficom
pop
stc
mov
mov
js
mov
lahf
cdq
fdiv
loop
add
add
cmp
(bad)
inc
gs
xor
cmp
and
dec
adc
gs
and
inc
mov
mov
adc
xchg
mov
scas
adc
mov
sbb
fs
adc
pop
inc
cmp
mov
sub
adc
mov
add
pop
(bad)
clc
adc
or
push
pop
sar
cmp
inc
dec
jl
or
fmul
add
add
enter
and
js
cmp
mov
and
push
pop
and
arpl
push
imul
or
add
add
mov
fs
aam
clc
mov
sbb
jne
loop
mov
and
add
rcl
cwde
adc
and
pop
or
mov
adc
into
or
adc
cmps
sub
add
stc
lock
loopne
lods
add
cdq
adc
adc
icebp
sbb
icebp
es
sub
or
adc
jnp
add
and
adc
and
pop
and
add
cmp
iret
js
mov
xor
loop
fsub
mov
pusha
ror
nop
add
add
les
sbb
mov
xchg
inc
(bad)
scas
and
dec
mov
shl
and
add
imul
xor
dec
je
xchg
push
ret
add
add
xchg
add
repnz
xor
clc
inc
ror
hlt
mov
or
or
(bad)
(bad)
adc
gs
cmp
push
inc
xor
adc
push
sbb
add
leave
push
xor
push
and
pop
(bad)
inc
push
sti
sub
call
mov
pusha
pop
les
sbb
add
add
in
jnp
push
xchg
dec
dec
push
push
or
xchg
and
cmps
sub
add
add
cmp
add
inc
inc
inc
mov
push
data16
movs
cld
jo
push
or
xor
add
add
adc
adc
and
dec
cwde
in
jb
lock
adc
or
ror
dec
adc
adc
imul
les
xchg
mov
and
or
adc
enter
add
inc
adc
push
les
loope
dec
xor
adc
fcom
mov
add
add
xchg
push
xor
ds
nop
lds
(bad)
mov
adc
dec
sub
add
add
rol
cmp
inc
cmp
inc
cmp
dec
mov
les
(bad)
sbb
(bad)
and
cdq
adc
add
add
sti
mov
cmp
xchg
inc
and
inc
dec
pop
mov
or
pop
mov
and
xchg
mov
adc
add
push
cdq
add
pop
pusha
jbe
repz
sub
add
je
mov
mov
adc
ror
js
cmp
rol
add
add
push
fsub
push
jecxz
push
(bad)
pusha
or
adc
adc
cmp
adc
sub
pusha
and
add
add
push
and
push
sti
add
sub
retf
and
push
test
xor
test
add
add
and
dec
and
push
es
lds
and
pop
dec
push
inc
or
xor
addr16
add
add
and
icebp
sbb
cwde
adc
push
adc
push
mov
mov
xor
pop
xchg
add
add
mov
push
ja
and
adc
dec
test
push
js
ror
cdq
or
pop
cld
loop
inc
jmp
repnz
cmps
sbb
add
or
or
adc
and
dec
or
and
or
xor
add
and
and
cmp
xchg
and
or
inc
es
cmp
sahf
push
daa
sbb
add
add
pop
loop
inc
or
pop
lock
sub
push
xchg
inc
push
js
jno
dec
add
sub
inc
dec
add
add
fcom
stc
xor
je
cwde
sub
inc
test
mov
mov
cld
add
add
retf
adc
and
dec
or
cdq
and
dec
or
xchg
inc
xchg
sti
push
mov
xchg
or
add
add
and
int3
fs
mov
movs
cmp
or
or
mov
and
pusha
xor
dec
pusha
mov
add
add
inc
pop
cmp
inc
loop
call
sub
push
or
call
pusha
adc
add
add
adc
push
jo
xchg
js
add
inc
pop
nop
mov
mov
xor
add
add
leave
cdq
or
sbb
mov
and
inc
adc
mov
xor
add
and
or
dec
adc
jbe
add
lods
and
xor
les
std
pushf
add
add
loop
dec
pop
adc
arpl
xor
pushf
js
pop
xor
les
pop
pop
sbb
add
add
loop
pop
add
fadd
jle
or
adc
les
sbb
pusha
adc
std
or
mov
add
add
pushf
(bad)
xchg
adc
mov
icebp
imul
adc
and
add
add
es
cmp
pop
sbb
into
adc
dec
retw
push
cld
pop
test
js
test
pop
add
loop
test
sbb
ret
push
loop
and
ret
fld
add
add
xor
or
pop
sub
pop
adc
push
jns
sahf
and
ins
xor
lods
sub
enter
sub
enter
sub
push
gs
add
push
sub
adc
sub
jecxz
arpl
kmovw
icebp
mov
push
sub
add
jl
imul
dec
out
js
int3
push
pop
adc
pusha
inc
or
add
add
or
jo
or
xchg
or
add
daa
test
std
jo
pop
inc
jno
sub
fcomp
fwait
add
add
add
mov
and
out
add
pusha
loop
mov
lock
enter
int3
xchg
fcom
enter
sub
or
or
sub
mov
mov
adc
pushf
jl
inc
xor
adc
push
inc
pop
adc
cmps
or
add
add
and
pop
xchg
sbb
inc
pushf
sbb
movs
adc
mov
pop
add
add
dec
mov
and
jmp
inc
es
and
dec
in
sub
in
mov
mov
add
or
sub
mov
cmp
and
mov
adc
and
dec
or
and
jbe
and
pusha
xor
add
add
pop
test
inc
and
and
pushf
pop
aaa
xor
jb
cmp
inc
enter
add
inc
loopne
push
cs
and
call
(bad)
clc
adc
add
adc
and
pusha
push
adc
or
push
in
jb
mov
xlat
mov
push
adc
enter
add
or
leave
in
xor
clc
vmovaps
enter
std
push
out
adc
mov
adc
push
xchg
push
push
and
add
add
popa
pop
imul
popa
pop
xor
aas
ins
in
inc
sub
loop
xor
loop
loop
aam
gs
lock
popf
pushf
add
js
jp
sub
add
add
add
bound
shl
or
loopne
fwait
aam
call
push
clc
and
sub
in
sbb
adc
add
loopne
outs
fcom
adc
and
(bad)
jecxz
mov
inc
fwait
test
arpl
les
test
add
add
adc
push
je
fisubr
in
ret
xor
xor
xor
xor
add
sbb
fild
xchg
fs
fs
das
mov
lock
or
call
sbb
in
mov
xchg
push
sub
sar
xor
aas
nop
mov
sbb
mov
add
pop
les
xor
jo
sub
inc
mov
add
data16
add
jb
gs
jo
xchg
adc
pushf
gs
imul
inc
icebp
push
adc
(bad)
push
adc
adc
add
add
cmps
sbb
dec
inc
call
mov
xchg
inc
cmp
pop
and
mov
adc
add
sbb
cld
hlt
iret
aam
mov
pop
loopne
mov
adc
adc
nop
movs
nop
push
add
add
mov
loop
adc
xor
pop
hlt
or
push
ins
loop
lds
xchg
sub
or
xor
and
cdq
sub
adc
add
add
add
jo
push
repz
and
les
dec
mov
js
fsub
addr16
arpl
in
in
addr16
je
xor
mov
cmp
or
int3
shl
cdq
in
ret
add
pop
push
cmp
repz
push
dec
shl
add
mov
add
push
test
sahf
clc
adc
(bad)
sub
icebp
imul
add
add
loop
or
pusha
xchg
clc
push
push
cdq
je
dec
dec
dec
mov
xor
les
les
add
add
les
inc
mov
sbb
or
fsubr
adc
add
clc
mov
hlt
jmp
std
or
(bad)
shl
rcr
(bad)
pop
add
add
or
or
cdq
or
adc
xchg
xor
cmovne
sbb
movs
add
add
or
xor
sub
dec
mov
push
mov
addr16
mov
and
adc
mov
add
add
push
imul
jmp
pop
sub
shr
add
dec
sub
add
add
cwde
sahf
mov
sti
cmp
push
(bad)
cwde
adc
mov
sbb
outs
cmp
shl
mov
xor
sbb
and
je
adc
or
add
sti
pushf
push
add
cmp
inc
cmp
push
mov
daa
sbb
mov
xchg
sbb
loop
add
add
jo
cmp
ins
jnp
push
mov
and
cmp
and
ss
inc
enter
add
xchg
add
ss
mov
test
pop
push
cmp
mov
add
add
ins
enter
enter
pushf
ins
sbb
retf
inc
call
ins
or
adc
add
adc
(bad)
stos
adc
xor
push
retf
adc
(bad)
inc
or
mov
adc
xchg
push
popf
inc
enter
xor
mov
adc
(bad)
sbb
cmp
add
add
ss
mov
pusha
aaa
in
adc
and
or
fwait
int
adc
in
outs
add
add
sbb
icebp
or
nop
call
outs
in
test
stos
or
mov
add
mov
add
add
and
dec
shl
fisttp
xchg
jecxz
or
sbb
repz
push
inc
sti
jno
cmp
or
sbb
add
add
icebp
dec
cmp
arpl
test
sub
fs
and
shl
or
mov
xchg
add
add
ror
xor
jo
js
test
jo
xchg
push
mov
cmp
loopne
mov
sub
jno
stos
mov
mov
sti
lock
mov
shl
push
jno
add
add
sub
pop
and
jo
call
cmp
xchg
jno
lock
add
call
add
add
and
inc
jno
loope
cmp
jno
mov
sub
cmp
add
add
adc
in
sar
fild
jb
jmp
sbb
cmp
sti
and
add
mov
mov
lock
or
les
dec
in
out
mov
pop
or
cmp
add
add
dec
mov
pop
jl
pop
inc
or
cwde
jae
jo
jl
push
call
add
add
mov
cmp
or
pop
pop
enter
jb
test
mov
sbb
add
add
es
or
into
cmp
cwde
and
xchg
fisub
xorps
hlt
les
or
sub
add
add
pop
sub
xor
pushf
pop
mov
and
fdivr
mov
pop
hlt
and
sbb
icebp
add
cld
loop
hlt
sahf
cmps
adc
test
(bad)
mov
add
add
mov
lds
cmp
daa
lds
inc
adc
and
adc
pusha
and
sub
add
jne
lds
dec
stos
js
dec
cmps
and
add
daa
sbb
lock
or
daa
sbb
adc
out
lock
cmp
nop
jns
or
mov
sbb
loop
in
add
add
or
adc
sbb
mov
inc
jbe
push
dec
mov
jbe
sbb
je
dec
add
add
daa
mov
and
sbb
jg
sbb
cmp
or
icebp
loop
jo
aam
mov
cmp
test
or
jbe
int3
loope
adc
cmp
loope
ja
loope
add
add
cmp
fdiv
sbb
icebp
sbb
icebp
push
adc
sbb
mov
mov
lods
repnz
add
jge
shl
cs
xor
lahf
nop
and
inc
cmp
inc
cmp
inc
cmp
inc
cmp
add
add
dec
xor
les
push
sbb
ss
jp
nop
pop
arpl
add
call
cmp
dec
mov
mov
ins
or
pop
int3
int3
ret
retf
shl
jnp
inc
add
mov
ffree
arpl
(bad)
call
int3
int3
add
cmp
inc
xor
adc
cs
add
add
and
inc
sub
mov
adc
and
dec
and
dec
and
push
adc
xchg
push
daa
add
add
inc
jne
mov
sub
and
inc
cwde
sub
mov
push
js
stos
mov
add
add
mov
xor
adc
xor
into
sub
jo
cmp
sbb
cmp
inc
xor
add
cmp
mov
xor
gs
push
xor
outs
sub
cld
jns
pop
adc
push
pusha
adc
in
add
add
inc
lahf
add
cdq
adc
adc
add
inc
int3
cmp
fs
mov
or
sbb
add
add
xor
mov
adc
sub
or
dec
or
pusha
or
mov
push
and
and
dec
adc
nop
cmps
and
mov
dec
add
add
push
xchg
mov
pop
inc
mov
sbb
cmps
cmp
mov
dec
adc
mov
dec
lock
add
add
pop
and
inc
and
cwde
fs
sbb
jl
add
mov
es
mov
add
add
mov
mov
mov
and
adc
dec
js
or
mov
xor
add
add
mov
dec
xor
inc
mov
mov
cmp
enter
rcl
add
add
mov
dec
lock
aas
and
mov
or
adc
adc
sbb
inc
and
add
or
dec
inc
xchg
ins
adc
cmp
xchg
inc
and
adc
push
dec
dec
add
add
xchg
pop
and
dec
mov
inc
jo
dec
adc
push
dec
and
mov
add
add
adc
cwde
dec
push
xchg
mov
pop
mov
dec
pop
xchg
shl
js
mov
les
mov
and
fsub
iret
mov
loopne
int3
call
fs
add
mov
adc
sbb
xchg
and
enter
sub
adc
inc
and
add
add
cmps
or
sbb
pusha
inc
jno
mov
jo
jae
js
or
mov
jbe
nop
add
add
ja
cwde
sbb
cmps
or
mov
dec
jl
shl
inc
enter
adc
fmul
add
add
call
adc
inc
inc
test
enter
adc
xchg
sbb
add
add
and
mov
xor
xchg
cmp
mov
adc
xchg
push
and
pop
or
imul
add
xchg
dec
jae
xchg
and
xchg
and
xchg
adc
xchg
mov
and
add
ret
sub
push
retf
cdq
inc
mov
and
dec
mov
and
add
popf
loopne
push
sub
mov
adc
mov
push
mov
and
add
add
push
out
add
lahf
push
pushf
daa
dec
cmp
mov
in
xor
sub
add
cmp
sub
and
and
mov
mov
add
add
pop
mov
cld
inc
mov
mov
pop
pop
into
mov
mov
les
data16
js
xchg
gs
mov
cmp
hlt
fisub
mov
push
add
add
cwde
cdq
or
call
push
and
icebp
ror
mov
cmp
fstp
add
mov
clc
and
pop
adc
lock
adc
and
sub
push
iret
push
cmp
mov
xor
dec
pusha
add
lock
and
and
xchg
lock
add
call
push
add
push
fs
loopne
xchg
mov
push
adc
add
cmps
bound
push
(bad)
push
mov
push
leave
mov
pusha
or
rcl
push
pop
and
pop
mov
mov
add
inc
addr16
mov
cmp
loop
adc
add
add
sbb
mov
and
mov
dec
(bad)
adc
mov
mov
call
mov
add
iret
add
adc
jg
mov
gs
xor
push
sub
push
add
js
cmc
popf
pusha
xchg
adc
js
inc
sbb
aaa
dec
test
ins
sbb
xlat
in
add
test
xchg
test
test
dec
in
xor
icebp
arpl
cmc
jno
mov
xchg
je
add
add
repnz
fnstenv
inc
dec
dec
push
cwde
add
cmp
and
pop
or
inc
xor
add
add
mov
or
jb
xor
dec
pushf
ror
enter
sub
loopne
dec
(bad)
int3
xor
and
dec
adc
and
dec
add
add
or
mov
and
adc
data16
int3
adc
call
retf
add
add
ins
mov
jne
test
xchg
fsubr
xor
mov
pusha
dec
sahf
push
iret
adc
jb
and
repz
xchg
cwde
lds
inc
xor
mov
add
add
adc
cmp
adc
add
mov
sbb
pop
push
dec
xor
add
add
xor
int3
in
js
fwait
dec
adc
or
js
add
sbb
nop
xchg
or
cwde
inc
or
add
test
sub
retf
inc
add
call
fcom
dec
cli
sub
clc
call
fsub
xor
inc
loop
dec
xor
mov
add
jo
or
lods
iret
xor
cdq
or
or
add
add
mov
mov
stc
sub
jle
or
push
jle
mov
pop
mov
add
add
inc
sbb
pushf
cmp
ror
retf
push
pop
and
or
add
add
popf
add
sub
sub
add
cmp
inc
or
add
fdiv
or
pusha
xchg
or
jo
inc
jp
mov
dec
adc
add
sbb
adc
adc
push
and
nop
xchg
sbb
test
dec
int3
movs
mov
adc
inc
adc
mov
and
nop
or
(bad)
cld
cld
scas
adc
call
or
mov
pop
add
bound
and
dec
adc
fs
mov
dec
sub
adc
and
xor
or
xor
test
in
sub
or
inc
pop
ret
sbb
mov
or
or
add
es
pushf
sbb
inc
(bad)
loop
cdq
push
enter
cmps
or
in
sub
adc
add
or
fs
je
mov
push
mov
add
add
mov
aam
jmp
lea
or
in
inc
cmp
inc
loope
push
cmp
mov
add
add
xor
mov
dec
ror
xor
pop
inc
xchg
or
pop
mov
add
ror
sbb
mov
mov
push
jnp
push
sbb
dec
mov
rcl
add
or
call
in
jo
mov
sub
or
in
add
add
mov
adc
adc
xchg
adc
arpl
cmps
xor
adc
adc
call
add
add
cmp
adc
jnp
daa
pop
test
sahf
sub
jns
fwait
add
not
sbb
add
nop
das
(bad)
jno
fcmovbe
stc
add
test
push
push
movs
and
sbb
mov
or
add
enter
sbb
icebp
daa
ins
mov
in
jb
cmp
sbb
dec
or
inc
push
and
movlps
and
dec
xor
inc
enter
dec
adc
ins
jp
lock
add
add
dec
pop
je
js
cmps
rcl
jmp
jge
jecxz
movs
or
jle
adc
add
les
xchg
xchg
aas
xor
sub
jl
inc
add
lods
test
xchg
mov
inc
lock
retf
inc
and
jle
push
push
loop
bound
xor
and
push
adc
sbb
mov
sub
add
dec
or
sub
or
add
pushf
fwait
inc
ds
int3
xchg
add
add
gs
adc
es
fcom
push
mov
adc
mov
xchg
icebp
add
add
js
pushf
jae
fs
and
dec
out
inc
add
fstp
xchg
ds
in
inc
sbb
add
add
(bad)
in
xchg
cmps
enter
cmp
pop
addr16
mov
int3
fmul
mov
adc
int
int3
xor
add
add
icebp
js
iret
jecxz
sbb
stc
inc
or
dec
push
xor
lds
and
add
add
mov
clc
sbb
inc
adc
and
jb
and
dec
addr16
push
sub
xchg
jge
sbb
mov
add
and
dec
sbb
mov
and
adc
mov
sbb
pop
push
mov
add
pop
scas
rol
mov
daa
adc
sbb
add
add
xchg
lods
adc
mov
sub
ret
push
rcr
jae
out
call
fs
add
add
dec
xor
xchg
adc
sbb
sub
xchg
xor
cmp
dec
mov
cmp
jmp
inc
das
add
add
add
pushf
call
xchg
aas
or
push
aaa
add
pop
mov
in
arpl
mov
dec
sbb
mov
add
call
xchg
jae
enter
jb
and
dec
stos
xchg
movaps
enter
add
in
jb
cmp
inc
xor
inc
xchg
loope
pop
sbb
add
pop
xchg
add
popa
xchg
push
and
pop
jno
push
jns
inc
or
add
or
mov
movlps
xchg
adc
mov
adc
and
add
add
inc
adc
pop
mov
sbb
cmps
pop
inc
stc
sbb
inc
or
sbb
cdq
or
sbb
add
inc
jae
mov
jb
cdq
sbb
and
push
dec
and
fs
and
add
mov
adc
push
jg
or
cmp
icebp
adc
add
adc
and
add
add
and
mov
out
fdivr
cwde
sub
cld
in
(bad)
les
adc
pop
add
add
test
pop
mov
pop
jo
pop
mov
pop
hlt
shr
mov
pop
adc
and
add
add
test
dec
dec
mov
mov
mov
adc
sub
cmps
adc
adc
push
add
xor
enter
push
test
in
add
add
icebp
cdq
pop
sbb
test
icebp
mov
sub
rol
add
or
setno
and
push
fistp
sub
or
std
adc
or
sbb
xchg
test
add
add
sbb
sbb
mov
adc
cdq
adc
dec
or
sbb
dec
and
dec
push
xchg
push
and
pop
add
add
mov
adc
or
xchg
and
jle
xchg
xchg
mov
pop
mov
cdq
mov
add
add
mov
sbb
inc
sub
dec
pop
xor
cmp
inc
cmp
dec
mov
aam
(bad)
fcom
pop
add
add
adc
call
cld
and
push
inc
das
lods
mov
push
call
jg
add
adc
push
cmp
inc
sbb
mov
mov
popf
shl
and
xor
mov
cmps
enter
pop
add
mov
pop
pusha
xor
sbb
mov
add
mov
or
popf
pop
test
(bad)
shl
enter
add
add
push
and
jb
cwde
and
pop
add
add
mov
push
adc
adc
or
daa
mov
pop
cmp
dec
adc
adc
add
dec
add
sub
inc
inc
dec
fdivr
inc
or
loopne
add
add
add
jmp
add
sti
or
js
movs
adc
or
sbb
cmps
adc
or
add
add
xor
cmps
adc
or
dec
inc
adc
adc
or
arpl
cmps
adc
or
jnp
add
add
pop
and
xchg
inc
sbb
or
stos
inc
sbb
mov
and
add
add
cmps
adc
or
fild
cmps
adc
or
repz
es
cmps
adc
add
adc
and
push
adc
add
add
sub
or
sub
sub
or
inc
adc
dec
or
pop
adc
add
add
arpl
xchg
imul
push
jae
sub
xchg
and
push
mov
sub
cmp
adc
stos
or
add
xchg
mov
ds
mov
xchg
retf
and
rcl
sub
addr16
push
add
add
jmp
and
popf
adc
cdq
js
push
mov
les
adc
repnz
xchg
inc
push
or
xchg
dec
add
add
cld
mov
mov
mov
loopne
jmp
and
sub
cmp
mov
jle
pusha
xchg
push
je
cmp
enter
jb
dec
loopne
add
add
jmp
and
sub
or
lock
pusha
sbb
mov
les
jle
add
add
mov
jns
pop
enter
jb
push
inc
movs
icebp
and
cmps
or
sbb
(bad)
in
add
push
je
adc
clc
jl
jl
pop
les
add
add
jl
cmp
aas
xchg
pusha
enter
cmp
inc
movs
loop
cmp
dec
cld
loopne
inc
jmp
in
jg
and
sub
fs
cmp
shr
add
add
je
cld
aas
xchg
mov
cmp
mov
movs
ds
inc
xor
fsub
ins
jg
pop
addr16
mov
add
xor
(bad)
jmp
les
xlat
inc
call
rcr
inc
cmps
in
adc
adc
je
jo
push
add
cmps
xchg
add
addr16
mov
or
repz
cdq
xor
jg
mov
add
add
mov
test
stos
adc
enter
mov
pusha
lock
mov
fcomp
lds
and
scas
adc
mov
mov
adc
jne
adc
retf
dec
xor
pop
cwde
shl
imul
or
je
xor
sbb
and
cmp
lock
jo
add
add
test
pop
and
push
xor
sub
push
and
pop
add
test
adc
xor
mov
fs
add
add
inc
adc
mov
pop
cli
ficomp
in
pop
pop
sub
lods
rol
add
jmp
add
push
mov
test
mov
sub
xchg
pusha
pop
push
mov
ins
pop
test
add
add
and
das
or
inc
call
xchg
xor
mov
cdq
lock
mov
sbb
add
add
aam
je
mov
xchg
mov
mov
sub
add
ror
imul
push
mov
sbb
inc
pop
xor
xchg
dec
and
inc
push
add
cmps
add
pop
xchg
enterw
mov
xchg
lahf
enter
add
add
dec
(bad)
jb
cmp
adc
and
jb
cmp
sbb
dec
ins
int3
mov
lock
push
and
inc
aaa
and
xchg
inc
enter
push
in
xchg
lock
add
sub
pop
cdq
sbb
ins
mov
push
test
mov
sahf
lds
sti
clc
cmp
dec
xor
mov
sub
je
pop
lods
aas
or
ins
div
mov
ds
outs
add
add
(bad)
push
mov
gs
jae
mov
(bad)
and
outs
add
jb
inc
stc
adc
outs
(bad)
or
jecxz
cmp
inc
add
add
cmp
dec
xor
sub
cmp
inc
adc
and
dec
setno
adc
mov
adc
add
shl
adc
nop
adc
and
dec
pop
xchg
mov
add
add
sbb
mov
adc
and
dec
sbb
call
push
and
dec
pop
mov
outs
pop
hlt
add
add
sahf
adc
inc
mov
pop
lahf
sbb
sub
ins
xor
xor
loop
dec
loop
push
loop
mov
popa
mov
add
add
ins
mov
sahf
ja
(bad)
or
mov
test
loop
hlt
addr16
mov
addr16
scas
mov
mov
mov
or
cmp
int3
hlt
lock
outs
xor
jo
fmulp
and
ret
call
add
add
push
and
scas
push
shl
imul
scas
pop
xor
je
out
(bad)
iret
adc
add
mov
pop
aas
cmp
pusha
inc
jo
push
lock
add
add
xchg
icebp
or
icebp
loop
mov
sti
loope
sti
sbb
mov
scas
mov
xchg
out
imul
jns
scas
dec
and
jnp
mov
hlt
bnd
fcomp
add
add
vpshuflw
sub
fmul
jnp
adc
and
add
add
dec
cmp
or
jns
mov
mov
adc
(bad)
and
add
add
dec
pop
xchg
out
mov
sbb
push
sub
jb
(bad)
pop
mov
sub
ins
and
add
add
ret
addr16
or
(bad)
and
pop
daa
pusha
(bad)
fdiv
jo
fimul
add
add
jb
les
or
mov
movs
and
inc
movs
pusha
je
loope
push
in
and
test
or
jae
mov
sbb
dec
sbb
mov
mov
ins
mov
mov
jns
inc
js
add
add
ret
fucom
or
mov
xor
cdq
jae
js
mov
mov
loopne
add
add
call
xchg
push
sub
pop
sbb
xor
dec
or
pop
dec
xor
pop
cdq
add
add
sbb
add
jne
js
cmps
dec
add
sbb
mov
mov
push
pushf
mov
stos
jl
add
add
push
mov
adc
and
push
fsub
jb
shl
leave
or
fld
add
ins
fcomp
or
loope
arpl
jmp
(bad)
stc
mov
ret
sbb
mov
adc
mov
and
jne
dec
jne
push
loop
pop
dec
or
add
add
js
scas
fadd
jno
xor
xor
mul
mov
sub
or
add
pop
icebp
jb
cmp
jbe
xor
and
dec
sub
add
mov
add
add
xchg
test
pop
fisttp
stc
sbb
scas
pusha
bound
xchg
pop
inc
clc
cmp
inc
mov
sbb
add
add
dec
or
push
and
jo
sub
xchg
inc
mov
shl
add
inc
cmp
inc
loope
(bad)
loop
push
inc
push
adc
rcl
mov
add
(bad)
sbb
rol
mov
enter
cdq
adc
movs
dec
in
mov
add
add
ja
mov
pusha
enter
adc
mov
cmp
pop
test
sub
add
add
jo
sbb
loop
sbb
mov
icebp
xchg
pop
or
and
cmp
inc
loope
add
add
push
inc
mov
cwde
sti
inc
bound
rol
(bad)
and
mov
add
add
dec
mov
and
pop
inc
or
in
jg
mov
scas
and
in
jb
aas
pushf
daa
popa
pop
and
xor
add
mov
push
mov
and
enter
das
dec
and
fmul
add
add
jo
repz
mov
mov
dec
mov
lds
or
add
add
cmps
js
ror
and
mov
enter
jp
push
fsub
movs
mov
hlt
jnp
and
add
add
fbstp
cld
les
or
add
cdq
sub
or
adc
mov
or
cmp
pop
js
pop
(bad)
les
inc
call
cld
fsubr
test
xor
add
add
cwde
push
or
mov
sub
mov
mov
repnz
loop
mov
add
and
adc
inc
push
dec
cmp
adc
lock
jnp
push
push
inc
into
jno
jns
out
sbb
mov
add
add
and
xchg
retf
pusha
fidiv
or
cmp
adc
lock
push
shl
or
fld
add
sub
mov
jb
mov
rcr
push
loopne
repnz
jne
daa
cmc
inc
outs
mov
loop
add
add
or
gs
add
(bad)
mov
pop
test
data16
xor
lods
cmps
pusha
inc
cwde
add
add
icebp
xchg
addr16
mov
clc
adc
ret
push
push
ret
xchg
mov
and
imul
imul
and
push
and
nop
test
sbb
addr16
loop
xor
adc
aam
pop
and
push
pop
and
ret
into
or
and
push
and
lock
imul
ret
add
add
xlat
xchg
movs
push
mov
xor
inc
inc
cmp
cs
adc
cdq
mov
std
xor
add
mov
push
(bad)
clc
ret
jmp
dec
inc
sub
and
jle
lock
jg
and
jl
nop
push
repnz
add
add
aam
nop
mov
add
jle
loopne
sub
adc
and
add
add
aas
nop
jo
mov
nop
mov
shl
or
pop
pushf
adc
xor
add
imul
aas
nop
pusha
repnz
add
les
add
add
sbb
inc
(bad)
loopne
adc
mov
(bad)
mov
adc
or
xor
inc
(bad)
mov
sub
je
pop
les
in
clc
mov
dec
and
add
add
add
cwde
pop
fadd
push
pushf
push
and
mov
aas
mov
daa
pop
hlt
clc
xor
enter
xchg
jl
jl
mov
adc
js
add
mov
call
pop
rol
arpl
les
je
add
add
xchg
dec
or
add
pop
sub
clc
enter
and
jbe
add
mov
mov
add
xchg
(bad)
dec
adc
loope
test
mov
nop
or
add
loopne
xchg
and
or
leave
call
out
mov
add
add
fdiv
test
pop
ret
add
jl
inc
retf
xchg
(bad)
cmp
clc
mov
cmp
add
add
inc
cmp
push
xchg
cmp
pop
pusha
(bad)
js
mov
adc
rcr
loope
retf
add
add
add
sti
iret
sbb
in
xchg
or
sub
mov
jle
ja
xchg
lock
add
add
and
push
adc
and
jb
and
dec
ins
pop
into
xchg
lds
add
add
test
push
mov
mov
test
pushf
mov
enter
mov
adc
add
add
xor
add
dec
or
or
adc
or
sbb
or
xor
add
add
dec
int3
jecxz
in
pop
les
inc
pop
cmp
pop
stc
shl
mov
add
js
add
add
pop
push
nop
shr
sbb
test
and
fcomp
test
out
and
repz
sbb
pop
xchg
xchg
add
and
xchg
sub
push
inc
xor
and
inc
add
add
xchg
push
push
dec
and
push
and
sub
nop
(bad)
cld
jmp
add
or
mov
jnp
loopne
nop
mov
clc
into
add
mov
mov
or
and
inc
adc
mov
adc
mov
adc
fyl2x
sbb
icebp
sbb
add
add
cmps
and
or
push
xchg
pop
enter
sub
xchg
jp
enter
and
inc
popf
add
add
and
adc
mov
test
mov
jns
pop
enter
add
add
mov
iret
or
dec
xchg
cmp
inc
xchg
push
push
adc
mov
sbb
in
loopne
add
add
fcom
repz
mov
mov
mov
sbb
sbb
cmps
or
and
add
add
xchg
repnz
adc
mov
(bad)
adc
arpl
or
mov
xor
out
js
add
add
xchg
cld
push
dec
sub
lock
xchg
adc
or
pop
ror
push
or
in
add
add
(bad)
lock
ret
xor
push
adc
cwde
ret
xor
or
sbb
test
add
add
out
pushf
mov
pushf
rol
loopne
je
les
(bad)
clc
adc
jnp
inc
lds
add
add
jbe
cmp
dec
ror
cdq
push
adc
scas
int3
js
xchg
js
and
lock
jo
rol
js
push
pop
lods
les
js
cmps
adc
push
push
mov
rcl
pushf
inc
loop
test
pop
mov
cmp
add
add
add
and
lods
pop
movs
js
ror
pop
and
outs
repnz
and
mov
pop
dec
mov
add
dec
or
ror
cwde
iret
rcl
in
pop
leave
fnstcw
adc
lods
sahf
ret
inc
mov
jne
aam
aam
and
jl
mov
xor
mov
or
mov
aad
add
add
and
aad
rcr
test
sub
fcom
mov
inc
daa
dec
xchg
icebp
daa
test
push
add
pop
sub
push
pop
adc
add
add
dec
mov
(bad)
cdq
mov
mov
mov
into
mov
(bad)
sub
mov
aam
stos
loop
mov
fsub
and
sahf
call
add
xor
cmp
clc
dec
or
lea
or
adc
out
dec
push
adc
loope
movs
cs
jl
sbb
test
(bad)
sub
mov
add
(bad)
sub
sahf
push
and
icebp
js
int3
and
call
lea
add
add
inc
sub
icebp
das
test
adc
loop
cmp
loop
ret
pop
or
imul
mov
push
add
sti
sub
and
ret
cmp
aam
movs
jae
fdiv
lods
loop
add
add
ret
pop
or
lds
je
lds
push
les
(bad)
fisub
js
js
jo
add
add
(bad)
js
mov
enter
cmp
dec
movs
lea
js
fstp
add
int
jecxz
xor
sub
pop
enter
lods
add
add
or
cld
and
push
js
push
and
mov
adc
or
movs
cmps
adc
push
push
pop
mov
nop
add
add
dec
sub
cmp
sub
bound
jo
fimul
data16
and
add
add
fisttp
inc
nop
inc
or
adc
jb
mov
mov
js
mov
add
add
je
loopne
xor
dec
or
mov
jo
xchg
mov
push
lock
dec
lds
xchg
bound
sbb
add
pop
add
xchg
pusha
inc
cmp
xchg
or
out
mov
add
add
(bad)
mov
lods
fmul
in
xchg
arpl
(bad)
fdivr
xchg
cmp
push
add
add
enter
push
cmp
imul
jae
jnp
xor
mov
mov
add
add
jle
adc
adc
sub
push
fnsave
fdiv
xchg
xchg
cmp
loop
ins
and
mov
adc
pop
add
add
jae
lds
js
(bad)
jmp
fld
xchg
in
xor
cwde
and
dec
add
mov
sub
ror
xchg
jle
add
fmul
loopne
call
mov
cld
and
xchg
adc
mov
add
add
cmp
adc
xor
loopne
fnstcw
push
enter
inc
cdq
mov
push
mov
add
add
sub
or
jmp
cmp
cdq
or
sbb
inc
xchg
and
cdq
xchg
inc
test
aas
xchg
xchg
fisub
fld
dec
test
adc
and
pop
retf
gs
js
retf
push
add
loopne
mov
cmp
nop
pop
retf
fs
add
ror
cdq
sub
hlt
push
lock
or
sub
xchg
mov
cld
aaa
add
jb
mov
lods
mov
nop
and
dec
pop
clc
inc
mov
cmp
add
jb
loopne
add
sbb
sub
mov
ins
lods
dec
inc
loope
pop
add
sahf
mov
mov
mov
loope
test
bound
sbb
inc
fmul
shr
and
jle
cmp
ficom
add
daa
cmp
cdq
sbb
sub
xchg
pop
and
add
fstp
adc
push
sub
test
loopne
sub
and
clc
adc
cdq
int3
fisub
xor
inc
cdq
push
add
pop
add
jb
cld
mov
data16
cmp
inc
cmp
pop
js
int3
rol
add
add
adc
xchg
or
sub
(bad)
in
cmp
or
add
add
int3
adc
in
add
push
movs
in
adc
adc
xchg
movs
or
call
add
add
xchg
jbe
hlt
and
call
push
loope
sbb
jmp
les
inc
add
add
mov
fsub
scas
mov
(bad)
js
clc
and
addr16
xor
adc
or
dec
add
icebp
sub
nop
mov
cdq
push
push
inc
js
sub
loopne
mov
xor
mov
add
clc
dec
add
add
dec
xor
loope
xor
or
mov
sub
clc
enter
sbb
inc
pushf
js
mov
scas
or
fcom
adc
loopne
sub
cmp
cmp
shl
call
les
mov
loope
out
jl
or
dec
js
scas
les
pushf
outs
movs
or
(bad)
jnp
cld
add
add
push
test
and
clc
xor
adc
and
mov
gs
ss
xchg
dec
and
add
add
cmps
aam
std
push
pushf
imul
inc
push
lock
cld
pop
call
adc
add
or
fcom
sbb
xor
fs
dec
cmp
std
hlt
in
dec
inc
popf
cmp
inc
cmp
add
add
inc
cmp
dec
mov
js
lods
ret
pop
ret
cmp
adc
lods
jmp
retf
add
add
jmp
loopne
out
cs
stc
popf
popa
add
adc
adc
hlt
test
jmp
add
rcr
cdq
inc
or
pop
mov
mov
jo
ins
push
js
sub
push
xchg
push
ror
enter
mov
xor
mov
push
or
bound
cmp
mov
dec
mov
and
or
lock
into
cmp
cmp
dec
rol
aad
fmul
xchg
loopne
add
call
es
sub
mov
jb
cmp
sbb
mov
aam
push
xor
inc
xor
cld
jb
cmp
dec
inc
lock
add
jecxz
cld
bound
and
jno
push
push
inc
sub
jmp
cmp
inc
in
adc
mov
add
add
mov
fs
mov
adc
lods
aaa
push
adc
in
dec
push
xchg
or
push
mov
or
add
add
mov
mov
inc
cmp
pop
test
ret
or
mov
sub
ja
movs
add
add
jl
mov
xchg
(bad)
push
mov
ins
test
mov
sub
cld
push
repnz
mov
add
loop
int
xchg
hlt
xor
cld
xchg
or
mov
fs
push
xchg
sbb
rcpps
sub
add
add
xchg
xor
adc
adc
inc
or
push
adc
pop
or
ins
adc
je
les
add
add
pop
cld
test
js
adc
mov
inc
enter
mov
add
out
jle
shl
push
jg
sar
xor
lods
jg
pusha
in
outs
inc
add
add
pop
pop
data16
dec
or
mov
outs
adc
sbb
jno
pop
sbb
pop
fiadd
hlt
cmp
lods
scas
add
add
cwde
inc
(bad)
repnz
xchg
inc
fs
icebp
js
icebp
mov
nop
and
icebp
scas
cmps
call
add
inc
je
sub
sub
lds
fs
dec
mov
je
add
add
and
movs
repz
pushf
popa
jo
dec
imul
repnz
sub
add
add
and
sub
aam
adc
sbb
pusha
repnz
loopne
test
jb
in
mov
add
add
adc
mov
bound
repz
cmp
or
fidivr
pushf
bnd
inc
mov
add
add
dec
dec
rep
stc
shl
xor
add
adc
test
add
add
push
pusha
test
or
popa
nop
cmps
sbb
ds
hlt
loop
hlt
add
add
aas
cmp
cmps
sub
cwde
outs
inc
mov
and
mov
cmps
fadd
and
jnp
add
fsub
mov
add
add
adc
loopne
mov
lds
int3
mov
cld
inc
mov
mov
add
add
cmc
xchg
pop
cmp
cmps
sbb
loopne
loopne
sbb
loopne
push
retf
inc
adc
xor
and
jle
pop
xor
xor
mov
pop
push
jl
and
pop
out
test
add
add
mov
nop
hlt
mov
or
adc
shl
sub
stc
sbb
add
add
js
shr
sub
fsubr
mov
mov
sub
or
cmp
stc
sbb
icebp
add
add
jp
clc
scas
mov
adc
mov
mov
gs
xchg
mov
movs
jo
add
add
mov
xchg
sub
xor
lods
cmp
add
cmp
pushf
test
int3
inc
(bad)
push
add
add
or
mov
imul
inc
push
stc
xor
adc
xchg
repnz
xor
and
add
add
call
dec
stos
loop
mov
cli
sbb
cmps
mov
lock
dec
cli
jle
and
pop
add
add
dec
leave
ror
mov
les
pop
popf
xchg
aas
or
lock
xchg
(bad)
adc
adc
add
icebp
repz
push
and
ret
cwde
xor
sti
lahf
pop
shr
call
popf
adc
popf
inc
pop
les
lods
cmp
cmp
test
mov
jl
mov
adc
add
add
std
fdiv
inc
adc
add
out
js
mov
(bad)
pop
mov
cld
nop
add
cwde
mov
mov
ss
test
add
cmp
xor
lods
xchg
movs
ret
sar
add
add
dec
or
dec
enter
jl
push
enter
fcom
or
add
mov
xchg
cmp
inc
movs
adc
mov
add
lods
mov
or
(bad)
jl
sub
add
add
repz
test
xor
shl
cmp
cmp
ret
dec
adc
add
call
fsub
and
stc
mov
mov
f2xm1
add
add
(bad)
jp
mov
call
mov
sbb
scas
(bad)
(bad)
mov
push
rol
cmp
add
add
cwde
nop
jbe
xor
fcomp
sbb
sbb
mov
in
test
les
and
add
add
fldcw
cmp
mov
or
mov
adc
xor
call
add
add
dec
call
lea
nop
inc
mov
cmp
sbb
jp
add
add
sbb
dec
in
sub
popf
sbb
(bad)
sub
push
cmp
pop
cmps
call
call
or
sahf
and
(bad)
sahf
mov
js
mov
mov
mov
sahf
mov
(bad)
mov
add
add
lods
add
jnp
sub
sub
mov
add
into
or
adc
adc
pop
adc
add
add
add
sbb
or
ds
sub
pop
je
push
cmp
icebp
mov
jl
mov
ret
adc
add
add
adc
loop
cld
or
hlt
inc
add
inc
cdq
pop
dec
adc
adc
push
mov
jne
add
js
movs
push
ins
and
repz
dec
sub
dec
add
add
je
and
adc
mov
dec
test
add
lahf
and
add
add
fcom
sub
or
inc
or
push
add
adc
inc
pushf
lea
add
add
cmp
js
and
cmp
in
mov
push
rol
inc
loop
and
adc
call
add
adc
out
in
movs
clc
sub
mov
cld
hlt
push
mov
jl
push
adc
add
test
mov
adc
or
push
cmp
call
add
add
cld
xchg
and
ja
hlt
sub
or
in
cmp
(bad)
out
or
add
add
mov
mov
adc
loope
cmp
or
mov
add
add
sub
mov
xchg
in
add
or
sbb
mov
sub
or
dec
lea
add
add
stc
pusha
repz
pop
sub
int3
mov
mov
loopne
xor
jl
nop
xor
cmp
mov
pop
retf
or
ds
inc
cmp
inc
in
out
adc
or
sub
add
call
cwde
or
mov
or
mov
add
add
add
push
inc
push
and
push
jne
xor
xchg
sbb
mov
jg
push
and
add
add
addr16
mov
or
sub
and
into
les
enter
in
and
lea
add
jno
repnz
push
push
fcomp
movs
pop
push
pop
mov
xchg
jl
call
jno
mov
pop
add
nop
aam
sub
xchg
inc
iret
enter
or
or
add
add
add
pop
sub
inc
dec
or
adc
ror
test
js
pop
test
add
add
mov
adc
xchg
adc
or
les
test
inc
mov
sar
add
add
push
jns
jbe
cmps
rcr
push
(bad)
ins
enter
sar
mov
push
icebp
jo
add
add
sub
loopne
pop
inc
sar
dec
fisttp
sub
pop
mov
and
sub
(bad)
push
sbb
add
add
jb
jo
ins
loopne
adc
pextrw
jl
pop
mov
mov
(bad)
enter
das
inc
inc
adc
add
add
cmp
idiv
sbb
popa
call
sub
adc
mov
lahf
nop
and
pop
and
inc
mov
std
push
test
or
sbb
add
add
mov
inc
test
js
cdq
mov
rcl
outs
sub
loopne
lock
adc
adc
add
add
mov
jnp
and
dec
cs
dec
jl
pop
or
stos
adc
add
add
arpl
les
fs
dec
stos
retf
adc
and
call
adc
add
(bad)
les
test
cmp
pop
inc
mov
leave
sbb
dec
mov
daa
xor
add
ret
add
jnp
bound
adc
adc
fsub
call
add
add
sub
sub
test
sbb
repnz
lods
push
hlt
loop
adc
pusha
icebp
mov
mov
aad
js
je
adc
mov
mov
mov
add
push
pusha
pop
ins
enter
jae
lds
push
inc
mov
mov
inc
pusha
cmp
add
add
dec
cmp
adc
xor
cdq
jo
movntps
fnop
sbb
movs
jo
jl
and
sub
add
sub
xor
add
cmp
pushf
push
inc
and
fdivr
jo
bound
push
aas
adc
sub
inc
aas
xchg
rcl
fcom
loope
push
addr16
popa
add
push
cmp
cmp
add
hlt
pop
inc
retf
inc
jge
add
add
pop
iret
rol
push
js
pushf
xor
lds
jp
pop
push
and
or
repz
xor
add
add
mov
pop
call
mov
xchg
xchg
sar
in
(bad)
and
les
test
sti
or
mov
sbb
ret
sbb
pushf
sbb
rol
xchg
cmp
mov
add
repnz
loop
adc
mov
adc
cmp
mov
outs
dec
cmp
mov
lods
add
add
ret
mov
ret
mov
cmp
pop
adc
in
sbb
sbb
pusha
xor
movs
or
sbb
loope
mov
nop
add
stos
mov
add
sbb
add
push
mov
mov
mov
pop
into
add
push
ins
mov
lock
cld
loop
sbb
sbb
(bad)
(bad)
sbb
push
sbb
mov
nop
mov
mov
call
adc
pop
test
lds
inc
(bad)
in
add
xor
cmp
(bad)
in
cmp
dec
les
jmp
adc
add
out
adc
fldenv
pusha
and
dec
sub
test
out
test
sbb
test
add
add
inc
sbb
clc
inc
sbb
adc
push
adc
clc
inc
movs
sub
pusha
mov
push
add
add
pop
pop
inc
dec
sub
lods
jnp
and
jecxz
xchg
xor
lock
add
enter
add
add
mov
pop
scas
lock
test
push
jnp
adc
enter
pop
and
mov
pop
add
add
mov
mov
icebp
jbe
jl
test
icebp
and
lock
hlt
inc
clc
adc
xchg
add
add
or
adc
jnp
icebp
and
test
adc
int3
lock
cmps
or
xchg
fs
mov
and
and
jbe
and
jo
or
and
repnz
jle
imul
inc
mov
add
add
inc
js
mov
cwde
outs
and
and
pop
inc
ror
loopne
lock
dec
and
pushf
pop
pop
add
add
mov
xchg
or
and
or
push
js
push
fs
jno
adc
mov
mov
and
add
add
xchg
(bad)
cld
push
inc
xchg
loope
and
loopne
loop
and
and
push
inc
icebp
retf
jns
sahf
and
je
out
pop
add
add
in
je
xor
(bad)
jmp
call
retf
mov
in
pop
xchg
mov
mov
add
(bad)
retf
mov
loope
stos
inc
pushf
push
movs
fsubr
mov
xchg
inc
stos
add
add
scas
jmp
mov
fiadd
movs
sub
and
push
push
adc
jl
and
add
add
(bad)
js
cmps
aam
push
and
and
mov
repz
call
mov
xchg
add
add
mov
test
icebp
push
adc
clc
and
pop
inc
inc
push
into
dec
mov
xor
add
add
mov
xor
outs
pusha
adc
inc
pusha
repnz
xchg
bswap
fdiv
nop
(bad)
loope
fadd
add
add
push
nop
and
add
mov
in
sub
(bad)
in
cmp
(bad)
loop
into
sbb
mov
push
add
mov
loopne
mov
and
icebp
lock
clc
and
lahf
xor
xor
jge
inc
jae
jnp
add
add
in
cwde
mov
movs
jno
pop
retf
pop
or
pop
adc
sbb
xor
mov
dec
add
add
cmps
adc
cld
add
les
jo
sub
pusha
sub
inc
mov
out
dec
and
add
add
lock
ror
adc
test
sahf
mov
cld
cld
pop
mov
fcom
ror
add
add
adc
xor
and
sub
int3
mov
dec
test
sub
in
call
pop
shl
add
add
mov
mov
movs
adc
shl
pop
sub
mov
rol
jnp
(bad)
popf
mov
add
clc
xor
push
aam
mov
sar
add
sub
xchg
call
add
sub
rol
or
aaa
dec
or
js
adc
xchg
sbb
in
fsub
xor
add
add
aaa
inc
dec
adc
mov
add
cmp
sti
sbb
test
movs
or
adc
outs
jo
and
je
idiv
cmp
je
xor
or
fsub
sub
and
add
add
stos
cmp
rol
or
xchg
xchg
repnz
and
(bad)
sar
inc
mov
mov
add
mov
sar
mov
sbb
(bad)
enter
fimul
push
dec
inc
lock
dec
xchg
mov
dec
or
in
adc
inc
push
mov
clc
xchg
sbb
sbb
add
inc
inc
sbb
add
add
mov
pop
pop
mov
mov
xchg
sub
call
mov
push
xor
add
add
(bad)
pushf
cmp
test
pop
inc
pop
sub
mov
jo
xor
sbb
mov
call
jo
aas
loopne
and
xchg
sahf
dec
aas
sbb
jo
icebp
les
adc
jle
adc
add
inc
in
scas
xchg
dec
loope
mov
mov
mov
mov
mov
push
rol
add
and
ret
mov
mov
call
sub
jl
ret
sbb
dec
aam
jo
add
add
push
hlt
sub
movs
pop
pop
int
js
sub
hlt
xchg
or
pop
add
add
sbb
push
push
dec
sbb
xor
mov
adc
adc
adc
mov
add
add
mov
or
retf
fcomp
adc
cmps
xchg
shl
push
sbb
mov
add
add
sbb
or
lods
ret
int
into
or
mov
xchg
test
xor
jl
mov
adc
add
pop
clc
loope
dec
dec
jo
retf
push
sub
mov
shl
cmp
fs
dec
cmp
add
add
les
mov
sbb
adc
pop
sbb
xchg
inc
sbb
sbb
xor
sub
iret
popf
cmp
add
add
sub
lock
scas
and
imul
lds
inc
adc
es
fcomp
ret
add
add
hlt
add
push
mov
test
in
fadd
adc
jmp
add
add
or
sub
jecxz
movs
imul
sub
pop
lods
or
adc
xor
push
mov
mov
sahf
and
adc
aas
inc
push
cmp
inc
hlt
sub
pop
pop
add
add
mov
inc
(bad)
(bad)
out
bound
pop
jl
and
(bad)
cmp
call
loope
add
add
in
push
and
jecxz
lock
aaa
push
pusha
mov
scas
pusha
inc
jmp
push
pop
and
mov
js
xchg
add
add
pop
and
mov
in
cmp
inc
jae
jmp
movs
jne
push
add
add
mov
pop
repnz
or
ja
lds
lods
pushf
xor
adc
jo
pop
push
cmp
sbb
dec
test
adc
adc
les
push
push
add
or
pop
sbb
les
mov
add
(bad)
inc
pop
js
pop
cwde
movs
cmp
retf
pop
sub
(bad)
dec
or
int3
icebp
pop
pop
add
add
fs
pusha
mov
leave
nop
xchg
adc
push
push
mov
sub
and
mov
mov
add
add
inc
call
clc
and
dec
cmp
or
add
les
dec
adc
inc
jns
add
add
pop
or
sbb
add
or
dec
cmps
xchg
mov
lods
pop
and
add
add
pop
and
dec
cmp
add
int3
popa
ror
(bad)
mov
add
nop
or
pop
xor
add
loop
or
xchg
ret
inc
pushf
nop
mov
sub
cmp
dec
pop
xchg
push
jbe
mov
add
dec
in
repnz
pop
xor
sbb
adc
xor
dec
push
xchg
pusha
and
jle
add
add
mov
ret
and
push
add
mov
ret
mov
or
add
add
js
add
or
xchg
and
ss
push
bound
mov
xchg
scas
and
inc
rcr
mov
loopne
outs
add
cld
and
add
dec
sub
inc
add
add
xchg
and
dec
mov
inc
lock
adc
and
dec
xchg
add
jo
jge
mov
(bad)
adc
and
inc
add
adc
inc
add
test
jmp
cmps
cwde
mov
add
dec
push
and
sub
mov
xchg
ret
inc
mov
push
add
add
dec
inc
xchg
cmp
sub
mov
dec
sub
dec
mov
mov
push
add
add
xor
xchg
or
cli
dec
and
inc
fmul
mov
dec
jp
push
mov
add
add
adc
dec
out
dec
ficom
scas
sahf
mov
dec
dec
xchg
xor
and
mov
add
add
dec
sub
dec
mov
inc
nop
je
pusha
adc
cmp
cs
and
adc
add
add
inc
inc
loop
rcl
(bad)
and
dec
mov
inc
push
and
or
or
xchg
ret
add
add
jb
bound
dec
ds
sub
sbb
ins
inc
ror
retf
adc
and
add
cmp
mov
adc
and
inc
imul
test
push
hlt
dec
outs
add
add
clc
arpl
or
and
pop
mov
xchg
or
or
add
dec
add
add
xchg
xchg
xchg
dec
es
push
xor
and
mov
push
sbb
or
push
add
add
stos
mov
pushf
int3
adc
or
mov
pop
and
pushf
mov
les
dec
add
add
repnz
loopne
aam
les
es
dec
sub
cmp
or
add
add
xor
mov
ret
dec
loopne
lock
and
es
inc
adc
pusha
dec
jb
je
push
xchg
or
xchg
stos
dec
add
push
add
add
sub
and
xor
or
es
stc
inc
mov
enter
add
dec
call
dec
or
sub
adc
push
cmp
or
xchg
mov
cmps
inc
call
add
pop
and
dec
xor
sub
adc
cld
push
inc
out
fmul
cwde
dec
mov
dec
mov
add
add
push
and
inc
not
in
int3
and
mov
js
ins
dec
pop
xchg
dec
and
cmp
adc
add
dec
and
push
add
dec
rcl
mov
adc
dec
dec
cmp
add
loopne
inc
add
ins
push
jno
fimul
cmps
dec
xchg
xchg
test
jbe
add
add
push
mov
cmp
dec
push
xchg
add
not
loop
sar
and
dec
outs
xchg
pusha
and
add
add
mov
adc
clc
push
add
fsub
(bad)
or
and
inc
mov
add
add
adc
clc
popa
(bad)
ror
xchg
sahf
sub
or
fs
sbb
je
sbb
in
mov
add
add
sbb
bound
cs
pop
add
dec
rcl
stos
or
mov
add
xor
push
dec
sub
sbb
or
repnz
inc
loopne
mov
pop
movs
push
ret
cmp
add
add
dec
jne
jo
push
inc
gs
jb
jbe
xchg
cmp
dec
cmp
sbb
add
add
jb
outs
lock
add
push
imul
jae
jne
arpl
and
pop
add
imul
add
add
test
popa
fs
cmp
inc
xchg
cmp
(bad)
sbb
dec
and
inc
jns
hlt
push
outs
jmp
fadd
add
add
popaw
mov
dec
jmp
fild
bound
jns
test
pusha
outs
jbe
lock
outs
jae
add
add
hlt
add
mul
push
push
dec
jae
mov
outs
inc
jnp
add
add
dec
or
sar
ins
(bad)
cmp
sub
pop
js
push
fs
popa
mov
jbe
add
add
and
push
outs
inc
js
push
leave
and
mov
jbe
xchg
pop
fldenv
fnstsw
nop
sbb
add
add
dec
popa
ins
stc
sub
sub
xchg
xlat
and
in
nop
test
add
xchg
inc
outs
in
inc
stos
add
add
sbb
fs
ins
jo
cmc
cmps
pop
push
jns
or
or
jb
add
add
popa
fbld
es
dec
inc
cwde
sub
fs
xchg
imul
rol
add
add
lds
imul
hlt
loop
mov
inc
xchg
ins
push
dec
or
aam
push
outs
sub
je
(bad)
dec
and
imul
std
call
(bad)
add
add
push
lock
adc
outs
push
push
retf
ret
ror
xor
fisubr
adc
add
add
inc
(bad)
push
jne
push
or
imul
int3
mov
add
stos
je
dec
fld
movs
add
add
sbb
sbb
cdq
cmp
push
jne
rcl
dec
xchg
jno
adc
fist
popa
add
add
ins
xor
adc
dec
xor
movs
lds
jo
je
xor
xchg
jo
imul
xor
mov
ret
jns
ret
inc
dec
outs
jbe
jne
xchg
(bad)
adc
das
add
add
stc
movs
bound
mov
es
in
or
in
imul
dec
and
mov
xor
add
add
sub
adc
push
push
mov
push
push
sbb
xor
push
sub
xchg
sar
adc
add
mov
fidiv
shr
cmp
pop
lods
adc
and
jno
jle
inc
rcl
outs
mov
add
jo
mov
jae
cmp
dec
leave
call
aam
push
leave
and
jb
movs
push
test
mov
loopne
mov
dec
pop
jo
mov
mov
ss
add
rcl
fmul
lea
sub
cmps
sub
jne
mov
xchg
adc
sub
push
jg
add
add
or
cmp
xor
sti
add
push
into
jb
out
pop
test
cmc
add
add
push
sti
add
cld
mov
and
jae
xchg
jp
(bad)
add
add
inc
sbb
push
or
mov
jne
les
jp
popf
inc
ss
inc
lahf
xor
xchg
jo
sub
or
adc
mov
push
xchg
stos
sub
add
icebp
(bad)
jbe
inc
jo
mov
pop
xor
stc
gs
addr16
sbb
mov
xchg
(bad)
sbb
inc
aaa
rcl
add
xor
push
mov
sub
adc
scas
add
int
add
add
rol
jbe
xor
xchg
cmps
xor
rol
inc
sub
xor
push
sub
add
add
xchg
enter
or
adc
jmp
test
cmp
out
leave
pop
sub
or
add
sub
pop
popaw
push
add
xor
sub
sub
dec
push
cmp
and
fadd
add
add
shr
dec
push
sub
mov
dec
in
ins
aam
cmp
inc
fnstenv
in
les
add
jae
add
add
push
xor
mov
cwde
mov
ds
jb
push
dec
and
add
add
mov
or
or
or
inc
mov
dec
push
les
fisubr
sub
add
add
push
xchg
fsub
mov
and
add
fbstp
out
sub
add
add
mov
mov
xchg
xor
pop
outs
data16
cs
imul
add
add
aad
clc
cwde
add
mov
jmp
or
dec
sub
push
inc
add
jns
pop
cs
add
movs
push
and
and
test
xor
popf
add
xor
add
add
push
movs
or
dec
mov
or
shr
jg
(bad)
div
add
inc
xor
push
dec
stos
dec
jns
or
add
add
ror
movs
dec
add
and
into
mov
add
dec
int
out
arpl
add
push
adc
ret
jne
push
js
xor
or
add
outs
add
add
(bad)
ins
repz
nop
loopne
mov
mov
sbb
stc
cmc
imul
iret
dec
movs
sub
add
xor
stos
cmp
test
int
mov
fs
push
jmp
sub
cmc
xor
add
inc
std
mov
daa
dec
arpl
pop
dec
add
cmc
imul
sbb
fs
add
add
push
sub
mov
dec
sbb
in
ins
pop
lods
popf
loope
test
and
add
add
pop
push
push
and
sar
test
mov
outs
xor
inc
jo
mov
jns
mov
inc
add
add
mov
or
retf
pushf
jne
pop
mov
dec
xchg
xor
add
mov
arpl
add
add
and
xlat
sahf
sub
add
xor
aad
and
and
test
add
add
add
mov
inc
inc
loopne
xchg
inc
xor
dec
call
and
ins
adc
xchg
movs
in
and
add
add
ficom
and
iret
popf
addr16
jae
dec
xchg
push
mov
add
add
ss
mov
or
mul
imul
inc
pop
stc
rol
fs
je
add
add
leave
pop
imul
repnz
loopne
cmps
cs
mov
push
repnz
sbb
add
add
mov
ds
mov
cdq
test
xchg
int
push
sbb
gs
and
add
add
and
jns
cmp
mov
test
lea
push
fsubr
add
cmp
add
add
pop
jbe
popf
adc
xchg
pop
ins
ins
test
inc
movs
or
sub
xchg
es
or
and
add
add
cdq
dec
mov
sub
(bad)
or
mov
xchg
gs
retf
gs
cld
popa
mov
add
sti
cwde
cmp
xchg
or
imul
inc
ss
movs
adc
pop
stos
xchg
jb
fldenv
add
add
add
and
dec
jns
mov
retf
loope
shl
mov
push
or
dec
add
add
push
ficom
dec
sbb
repnz
xchg
pop
retf
pop
dec
jb
push
in
adc
xchg
js
add
add
out
push
movs
outs
adc
xchg
lea
(bad)
in
pushf
stc
adc
fwait
cmp
imul
jo
push
mov
add
jmp
inc
push
add
mov
in
pop
push
imul
repnz
cmp
rol
add
add
xor
daa
pop
push
or
sub
or
sbb
push
mov
out
push
mov
add
stos
or
add
or
and
xchg
inc
jb
add
xor
stos
mov
cmps
adc
add
add
fcmove
and
push
fidivr
jo
mov
into
dec
dec
outs
imul
(bad)
retf
addr16
add
add
sub
and
cmp
push
mov
cmps
aad
ja
inc
stos
push
push
push
rcl
adc
jne
enter
add
loop
pushf
(bad)
loopne
xchg
mov
test
inc
mov
nop
js
outs
nop
or
inc
(bad)
cmp
jo
and
cld
pop
out
mov
jp
test
sub
push
imul
xchg
jle
mov
outs
dec
arpl
les
sub
shl
xchg
(bad)
outs
mov
fld
sub
xchg
call
ror
sbb
add
add
dec
data16
fstp
adc
jl
mov
dec
xchg
les
adc
jecxz
sub
inc
push
mov
xchg
push
loopne
add
add
ficom
ins
outs
jbe
test
(bad)
sbb
in
adc
pop
jmp
imul
add
shl
pop
and
xchg
loopne
ins
sub
dec
retf
inc
inc
shl
adc
sub
into
or
add
add
addr16
test
test
cld
arpl
cdq
add
test
rcr
ds
adc
add
or
add
sub
outs
or
js
and
pop
sub
xchg
jne
jne
or
push
push
leave
jmp
sub
(bad)
bound
lock
sub
leave
push
loopne
inc
and
mov
add
add
xor
and
lods
push
clc
and
mul
push
and
mov
sub
and
add
mov
sub
xor
xchg
and
cmps
sub
in
pusha
xchg
mov
shr
imul
pop
cmp
inc
dec
(bad)
and
lea
jo
ins
leave
push
jno
call
je
adc
mov
es
jle
mov
sahf
(bad)
bound
test
adc
add
pushf
retf
in
lods
or
lds
in
xchg
push
cmp
icebp
fistp
in
stc
rol
add
and
sub
push
mov
xchg
ret
push
push
push
inc
sub
fs
dec
add
add
sbb
adc
push
dec
leave
popa
jl
xchg
mov
pop
mov
inc
adc
pop
fcomp
push
pusha
jb
bound
add
add
mov
jmp
cld
push
imul
imul
jnp
out
ins
bound
mov
add
add
or
pop
movs
xlat
mov
push
xor
bound
cmps
cmp
xchg
inc
push
push
add
add
inc
push
movs
and
and
imul
hlt
push
(bad)
aam
sbb
xor
rcl
mov
add
mov
mov
test
ins
dec
data16
adc
and
inc
inc
push
out
dec
dec
pop
mov
add
dec
shr
(bad)
test
inc
imul
xchg
icebp
enter
add
sub
inc
repnz
add
add
test
loop
jne
sub
and
js
inc
push
jo
cmp
cmp
mov
add
add
(bad)
dec
mov
or
jae
adc
dec
add
jl
add
add
mov
xchg
cwde
mov
or
and
jmp
adc
dec
or
xchg
out
jo
add
add
mov
mov
dec
push
xlat
cmps
jmp
jp
inc
sub
sub
add
add
mov
jno
dec
mov
inc
push
mov
xor
hlt
xor
or
and
sbb
add
repz
scas
shr
xor
stos
enter
jmp
sti
add
add
add
sub
sahf
outs
or
sbb
cmp
and
adc
pushf
outs
dec
lahf
mov
in
xchg
lea
add
add
and
sub
sub
dec
popa
sbb
dec
push
aad
mov
adc
sbb
add
add
push
or
and
bound
and
and
call
inc
inc
dec
cmp
add
dec
lods
jecxz
js
inc
xchg
and
sbb
gs
sub
movs
ds
inc
add
add
push
pop
shl
and
je
nop
inc
dec
dec
fmul
dec
cmc
lock
push
pop
push
sbb
pop
add
add
dec
dec
inc
lods
or
pop
dec
adc
xlat
adc
loop
retf
call
pop
ins
or
push
jb
test
add
add
inc
ins
jno
lea
push
dec
inc
sbb
jg
xchg
sbb
mov
dec
mov
add
add
adc
outs
rol
mov
(bad)
adc
ret
inc
dec
scas
gs
clc
jge
imul
shr
add
add
and
imul
xor
fsubr
cs
movs
les
sbb
adc
push
(bad)
int
add
add
xchg
and
cdq
clc
sbb
inc
mov
xchg
jno
jle
call
sbb
mov
jo
add
add
mov
test
stos
adc
leave
inc
in
mov
aam
les
bound
xchg
and
jns
cmp
add
add
dec
mov
pop
or
or
xchg
outs
xchg
leave
ds
cmps
mov
outs
cli
retf
push
imul
add
test
inc
pusha
and
sbb
and
and
xchg
(bad)
retf
sqrtps
add
add
cmp
(bad)
jmp
adc
pop
dec
inc
or
add
add
jmp
retf
sbb
jbe
xchg
push
inc
sub
adc
add
add
ss
xchg
or
scas
data16
xchg
dec
add
add
push
retf
lea
pop
sub
push
xor
mov
or
stc
pop
dec
sub
adc
and
add
add
dec
xor
cwde
sub
inc
jae
or
jae
mov
dec
pusha
loope
mov
inc
sbb
in
dec
lds
mov
jns
jne
mov
dec
sbb
and
and
add
add
jle
pop
dec
retf
inc
push
push
sbb
add
adc
bound
pop
sahf
mov
retf
pop
inc
data16
add
add
dec
xchg
mov
pop
pop
push
retf
jne
mov
les
and
or
inc
xchg
in
repnz
add
sub
shl
bound
and
sub
xor
popa
jmp
pop
loope
push
popa
mov
sbb
sti
pusha
(bad)
jne
imul
cmp
push
cmc
int3
push
xor
push
add
(bad)
push
add
add
adc
dec
cmp
test
aam
xor
jecxz
cmp
loope
mov
stos
add
add
scas
sub
adc
adc
popa
int3
lods
scas
dec
and
pop
sbb
push
pop
cmp
jne
add
add
push
and
inc
xchg
mov
mov
mov
xor
pop
mov
ret
sub
enter
add
add
ficom
sar
mov
push
pop
push
call
jbe
lods
ss
mov
add
add
enter
push
jle
(bad)
jo
mov
sub
mov
scas
sub
push
pop
or
add
add
cdq
cwde
xor
jo
mov
into
cmps
xchg
pop
les
(bad)
or
jo
add
add
inc
xchg
add
push
lock
ja
jo
sub
mov
into
das
ds
cmps
dec
or
add
and
push
jo
inc
mov
push
inc
mov
scas
ficom
vmovups
test
add
add
cmp
shl
adc
push
std
jecxz
and
scas
cmp
push
adc
std
into
(bad)
add
add
out
and
push
or
add
retf
push
retf
xlat
icebp
into
dec
test
cmp
mov
add
add
push
fisub
imul
add
pop
mov
popf
mov
add
pop
retf
add
add
jecxz
les
pop
cdq
cli
push
arpl
inc
dec
and
mov
loopne
mov
jns
jg
repnz
add
jo
fidivr
gs
in
cli
mov
ds
sbb
hlt
mov
dec
add
add
jno
sbb
xor
inc
cmp
dec
mov
dec
sar
test
lods
call
add
mov
mov
loope
jmp
sub
pop
shl
lods
sahf
test
jl
movs
adc
add
add
ins
bound
xchg
and
adc
call
add
add
add
in
mov
fld
dec
cdq
sub
lock
ds
dec
mov
add
add
shl
mov
mov
push
ror
inc
add
aas
call
fstp
inc
fwait
add
add
jp
(bad)
sahf
sbb
gs
movs
sub
inc
fcom
xchg
push
dec
mul
gs
add
add
or
xchg
xchg
or
and
je
cmp
jb
mov
enter
jp
inc
test
add
imul
dec
sub
adc
in
(bad)
jae
jp
sbb
add
add
and
pop
dec
bound
xchg
sbb
add
jne
stc
das
inc
fsubr
imul
sbb
add
nop
or
jp
fstp
pop
push
push
push
(bad)
jae
test
push
cmp
rol
add
add
fwait
push
inc
sub
fs
and
mov
push
xor
jns
add
add
movs
gs
xor
adc
or
lea
xchg
cmp
cwde
mov
test
inc
inc
add
add
fs
es
mov
xor
xor
aas
sub
or
mov
or
inc
add
add
pop
ror
dec
jl
jo
pusha
inc
push
inc
mov
adc
adc
add
add
loopne
or
xchg
mov
or
dec
dec
xchg
cmp
push
pop
inc
add
add
push
icebp
or
outs
adc
push
shl
jb
jns
enter
and
es
push
adc
retf
loope
lods
mov
outs
xor
push
stos
mov
inc
sahf
icebp
jmp
add
add
daa
mov
xchg
mov
outs
imul
stos
inc
inc
xor
clc
pushf
shr
lock
outs
adc
add
add
ins
fs
push
jmp
inc
int
mov
sub
and
adc
outs
add
add
cdq
repz
addr16
in
test
inc
into
(bad)
pop
ins
mov
push
js
loopne
dec
pusha
add
gs
dec
or
in
mov
add
add
aam
imul
pushf
arpl
outs
xchg
addr16
adc
inc
dec
push
jmp
test
hlt
adc
shr
add
lods
inc
mov
inc
leave
imul
or
call
ins
mov
xchg
adc
es
xchg
dec
add
add
nop
pop
pushf
loop
inc
or
push
shl
xor
push
mov
inc
cmp
sub
add
add
sbb
je
inc
test
and
pop
test
out
sahf
cmp
popa
add
add
push
bound
aaa
aaa
push
xor
ss
dec
pop
call
push
into
add
mov
push
add
add
cs
inc
xchg
inc
mov
bound
push
sub
jbe
cmps
nop
movs
call
cli
daa
fs
test
iret
inc
mov
imul
jmp
(bad)
sub
in
jo
sub
sub
(bad)
(bad)
cmp
stc
inc
mov
cwde
call
nop
in
inc
pop
mov
add
add
jo
fidiv
shl
rcr
fidivr
test
int
add
add
pop
retf
test
inc
ins
ficomp
cmp
pop
enter
jb
jno
push
clc
lea
sub
add
jae
jbe
add
inc
dec
pop
push
test
push
xlat
test
idiv
test
or
add
add
push
(bad)
nop
test
bound
push
dec
fs
jo
in
jae
dec
fsubr
sti
add
add
bound
cmps
cwde
push
aam
jo
push
jl
push
adc
add
mov
ja
retf
add
add
outs
jo
xchg
dec
loopne
jecxz
mov
jbe
pushf
and
sbb
push
test
add
add
sar
imul
dec
cmp
adc
in
data16
sbb
clc
pop
and
adc
add
add
pusha
mov
xor
nop
mov
inc
in
rcr
pop
dec
ds
js
add
add
add
sbb
sub
jns
je
xor
mov
add
hlt
mov
add
in
scas
dec
xchg
lock
inc
ret
dec
inc
clc
outs
test
imul
xchg
add
add
mov
in
test
push
inc
pop
in
and
xor
jne
push
je
pop
add
add
adc
addr16
adc
or
xor
js
xchg
adc
lea
cmp
add
add
dec
cmp
fbld
lods
pop
fs
and
je
mov
imul
ins
sub
sbb
add
add
sub
jne
nop
repnz
cli
js
sbb
dec
retf
mov
mov
sbb
retf
jnp
add
add
es
dec
mov
enter
imul
adc
pop
pop
jno
stc
ss
add
add
push
stos
push
cs
inc
mov
(bad)
mov
pop
push
lahf
adc
xchg
dec
repnz
add
add
js
cmp
and
mov
or
pop
or
inc
fstp
dec
xchg
mov
pop
add
add
sub
int3
pop
outs
jne
fcomp
jae
inc
gs
call
in
adc
rcr
pop
add
add
jae
inc
pop
add
push
dec
dec
stos
sqrtps
push
aas
std
clc
movs
xchg
(bad)
push
xchg
dec
je
test
xchg
cmp
sbb
ja
inc
jbe
mov
and
dec
jno
jo
outs
inc
outs
ins
mov
and
add
add
xchg
push
add
lds
or
or
xchg
dec
and
add
push
mov
dec
loopne
or
pop
shr
pop
mov
mov
dec
mov
add
fidivr
jb
inc
cli
pop
popf
mov
xchg
mov
sub
hlt
jge
sbb
add
dec
adc
xor
jmp
sub
xor
mov
sahf
nop
pop
add
add
push
dec
xchg
rol
xor
adc
push
inc
dec
dec
mov
jecxz
inc
pop
sub
add
add
add
xor
push
call
cmps
xor
push
popf
out
dec
(bad)
sbb
js
xchg
scas
lock
push
or
add
add
jnp
cmps
test
push
inc
popa
mov
psrad
sub
and
add
add
shl
fnstenv
xor
fld
shr
enter
shl
mov
add
add
imul
add
ror
lock
and
fimul
pop
sahf
xlat
mov
add
add
inc
fild
push
push
ins
or
aad
in
push
pop
mov
stos
push
mov
add
adc
rcr
jp
add
add
jle
(bad)
(bad)
add
cmp
shl
sbb
lea
and
mov
sbb
call
push
or
dec
jne
daa
outs
fxch
xor
(bad)
jbe
es
push
cwde
xor
push
and
add
add
mov
je
xchg
cld
mov
adc
imul
pop
out
adc
(bad)
(bad)
add
add
dec
fild
push
and
adc
and
xor
dec
inc
cmc
jb
sub
movs
std
clc
mov
xor
add
add
xor
popa
cwde
inc
inc
dec
test
shl
xor
aam
je
sub
inc
cwde
sub
jge
add
add
bound
inc
imul
pop
(bad)
xor
in
sbb
mov
inc
sub
shr
add
add
call
and
jbe
inc
mov
pop
sub
int
sub
add
add
xchg
mov
lods
les
sbb
push
xchg
rcr
xchg
and
lds
add
add
retf
xlat
movs
lock
xchg
mov
mov
lock
push
dec
push
inc
test
add
add
fidiv
rol
aas
dec
dec
inc
push
dec
inc
or
in
inc
push
push
push
inc
dec
ror
add
add
ins
push
sub
test
call
dec
mov
sub
int
js
mov
in
add
add
sub
mov
mov
xor
and
push
or
push
lahf
mov
(bad)
pop
inc
xor
add
add
and
xchg
mov
test
lea
add
popa
xchg
xor
add
add
fisttp
call
and
cs
push
inc
outs
jo
mov
and
dec
cmps
shr
call
add
dec
jp
add
je
adc
push
jmp
jns
rcr
sbb
pop
js
dec
test
xchg
push
add
add
inc
mov
pop
push
fistp
pop
adc
adc
jae
push
and
and
arpl
add
add
call
mov
sar
nop
(bad)
jg
adc
test
mov
pop
add
add
int3
jmp
xchg
mov
and
push
xchg
adc
adc
int3
dec
mov
fcomp
dec
in
arpl
lds
sub
nop
add
add
inc
ror
repnz
cwde
cmp
inc
fisttp
cmp
adc
sub
add
add
pop
and
sbb
pop
std
xchg
sbb
sbb
inc
outs
and
xor
cmp
add
add
rol
dec
mov
pop
stos
jae
cmp
cmp
lock
sbb
mov
pushf
pop
sbb
add
add
mov
add
dec
movs
mov
add
shl
sbb
xor
inc
jmp
add
add
add
adc
inc
add
sub
push
add
adc
adc
xchg
dec
add
add
add
rol
adc
xlat
call
das
inc
dec
sahf
and
dec
adc
xor
add
add
jmp
mov
(bad)
push
pop
and
cwde
out
cmp
(bad)
add
add
push
js
shl
jecxz
dec
cs
movs
scas
leave
ins
das
aam
jne
cmps
add
(bad)
pushf
add
add
lock
dec
inc
inc
pushf
cmps
ficomp
inc
mov
jo
jns
arpl
and
dec
not
shl
cmp
jo
add
add
popa
loope
je
enter
adc
inc
sub
mov
mov
xor
push
and
add
aad
repz
dec
sbb
hlt
enter
pop
and
inc
inc
push
inc
cmp
in
sbb
add
in
nop
inc
and
dec
pop
dec
int
lahf
mov
(bad)
shl
call
fidivr
add
add
xchg
inc
enter
ins
adc
mov
in
cmp
scas
xor
enter
pop
movs
xchg
inc
pusha
sub
add
add
mov
pop
mov
adc
pop
mov
scas
outs
fs
xor
mov
leave
add
add
scas
pop
(bad)
jo
dec
inc
dec
mov
hlt
push
hlt
(bad)
cmp
sbb
mov
(bad)
add
add
into
das
ins
mov
cmp
add
push
int3
sbb
sbb
inc
and
mov
cmp
inc
dec
dec
add
add
xchg
push
push
pushf
lea
adc
sub
xchg
mov
sub
sub
cld
bound
add
add
sbb
cs
mov
ins
popa
jne
xor
loop
lds
cmp
inc
les
ret
(bad)
add
stc
xor
dec
jbe
out
in
dec
or
dec
push
push
push
inc
jmp
inc
xor
add
add
fs
and
sbb
mov
mov
add
je
fs
lds
lock
add
cwde
or
add
or
in
fstp
add
add
iret
sbb
add
cdq
ror
jecxz
add
jg
add
pusha
inc
test
dec
push
fdivr
sub
add
or
inc
aam
mov
adc
and
dec
mov
push
cwde
nop
mov
js
je
jo
ins
push
and
dec
pop
xchg
push
and
dec
add
mov
dec
xor
add
add
clc
xchg
sbb
or
adc
and
dec
les
and
adc
xor
add
add
mov
mov
scas
(bad)
sbb
inc
add
arpl
pop
or
or
cmps
sbb
or
push
add
add
cmp
or
pop
retf
adc
add
sbb
and
xor
inc
cmp
xor
cmps
sbb
add
add
or
push
pusha
xchg
pop
jl
ins
sbb
and
jb
sub
xor
or
add
add
xor
cmp
dec
dec
xchg
mov
adc
nop
movs
cmps
jo
cmps
sub
enter
add
in
xchg
adc
fsubr
movs
xchg
jo
dec
push
pushf
retf
icebp
fnstsw
add
add
add
adc
add
fbld
lea
dec
in
add
or
ret
fcmovb
jmp
movs
push
test
mov
add
cld
add
in
popf
pop
and
cmp
xlat
cmp
les
test
push
xor
or
call
and
lds
mov
pusha
int3
cmp
adc
aam
add
dec
add
add
lods
xchg
sbb
je
sbb
sbb
adc
push
inc
hlt
fisttp
pop
xchg
nop
and
inc
pop
and
adc
add
add
fld
js
hlt
fadd
dec
in
jp
aam
cld
ror
add
inc
dec
add
jge
and
add
add
sbb
and
iret
adc
mov
pusha
cwde
dec
or
and
add
mov
cmp
add
add
xchg
jg
adc
add
inc
and
bound
arpl
addr16
ins
ins
sar
jno
lock
jbe
and
inc
inc
inc
mov
jmp
dec
add
push
push
push
add
add
add
scas
mov
add
xchg
push
clc
or
pop
pop
add
movs
add
pusha
cmp
dec
sbb
add
add
mov
loopne
or
jle
cwde
test
shl
cmp
sub
add
inc
and
pushf
sbb
pop
lods
add
add
mov
pop
add
add
mov
ret
add
fcomp
loopne
add
jle
cmp
mov
aas
hlt
loopne
cmps
pop
movs
adc
push
add
icebp
mov
mov
in
je
xchg
pop
loope
out
xchg
mov
add
adc
adc
icebp
sbb
std
mov
inc
std
xchg
cmps
mov
nop
or
add
add
add
add
and
stos
mov
push
dec
cmp
mov
repz
add
mov
bound
add
add
and
dec
ja
xchg
and
adc
and
dec
ins
xchg
js
cs
je
lock
and
add
add
xchg
jo
mov
dec
shr
pop
push
scas
dec
sbb
push
int3
pusha
fdiv
sbb
icebp
ins
push
fstp
push
add
add
ins
nop
xchg
sbb
inc
and
mov
adc
and
fs
xchg
adc
call
adc
add
push
nop
pop
jmp
fmul
adc
movs
dec
or
fsub
dec
xchg
xchg
sbb
rol
add
add
adc
enter
ror
dec
mov
and
lods
inc
and
and
dec
pushf
xchg
add
add
and
pop
clc
cwde
cmps
out
cmps
adc
dec
mov
or
inc
and
xor
jge
pop
jmp
push
stc
and
cld
xchg
mov
shl
cld
add
dec
(bad)
lock
jg
push
mov
add
add
ret
push
repnz
inc
or
push
ret
movhps
and
adc
push
and
add
sbb
add
mov
and
pop
ret
add
lock
mov
sub
test
lds
add
rcr
and
ror
add
add
add
loopne
mov
add
add
adc
out
cmp
cmps
iret
or
jp
outs
mov
mov
or
mov
add
test
mov
cmp
(bad)
div
jl
loopne
mov
add
popf
sti
jmp
stos
push
inc
add
add
jecxz
repnz
add
pop
stos
cmp
scas
xchg
(bad)
shr
aam
jne
add
dec
add
add
jp
iret
inc
gs
add
xchg
push
cmps
scas
mov
inc
or
add
add
add
cmps
xchg
cmp
cmp
out
mov
out
mov
and
add
add
mov
popa
sar
mov
fadd
and
stos
xchg
add
repz
mov
sub
add
add
leave
fwait
xchg
and
and
int
add
add
aas
add
or
mov
add
add
rcr
fild
dec
lea
lock
rol
sub
sbb
pop
pop
mov
jl
add
mov
add
add
cmps
jl
add
mov
ins
scas
add
jmp
xor
pop
aad
add
add
mov
std
mov
popa
test
adc
stos
in
das
dec
pop
loope
dec
les
icebp
xchg
loopne
add
add
pcmpeqw
(bad)
call
add
inc
lods
push
mov
mov
loop
mov
add
xor
jp
adc
jle
pop
push
jl
mov
das
lea
push
mov
inc
mov
add
movs
jmp
jg
sub
jge
lods
mov
inc
rol
fst
arpl
int3
and
push
add
add
ja
call
cmp
sbb
and
add
mov
cmp
add
xlat
add
add
cmp
mov
sbb
mov
jecxz
cmps
add
mov
jne
fld
add
xor
rol
add
add
shl
dec
add
mov
movs
add
mov
loop
mov
adc
add
add
mov
add
xor
rcpps
pop
add
rol
ret
call
add
add
out
pop
push
xchg
cmp
push
add
gs
std
lock
scas
push
xchg
jge
pop
add
lahf
into
ror
add
add
add
cmps
fmul
cld
dec
add
pop
nop
add
mov
push
pusha
jbe
out
ret
ins
aam
into
and
add
add
shl
sub
add
fdiv
fisubr
mov
mov
jp
shl
and
inc
adc
add
add
adc
ret
stos
fucom
scas
jns
sub
les
sar
and
(bad)
add
lock
add
add
sbb
bound
inc
in
xlat
shl
out
stc
sbb
push
ja
sub
push
rol
shr
je
add
add
scas
outs
jmp
xor
cmp
xor
or
sub
(bad)
dec
push
pop
mov
add
popa
add
add
je
sub
adc
adc
mov
ja
mov
or
stos
rol
out
add
adc
call
xor
add
add
push
cli
pusha
add
mov
adc
sub
add
add
pop
sub
(bad)
js
jo
(bad)
jmp
pop
movs
std
mov
add
inc
test
add
(bad)
mov
push
sbb
fdivr
sub
jo
stc
pop
retf
add
sbb
mov
add
add
jno
rol
dec
cmp
stos
mov
retf
lock
add
ins
push
adc
add
add
sahf
imul
(bad)
sub
add
add
add
clc
int3
push
xchg
and
(bad)
mov
dec
lahf
call
in
scas
push
sbb
test
add
out
add
add
adc
sub
int
xchg
dec
sub
push
xor
mov
mov
bound
add
add
xor
jle
test
sbb
add
popa
cs
xchg
dec
mov
add
add
jge
fadd
stos
fmul
mov
sti
mov
sub
or
mov
add
add
jo
adc
aad
daa
sbb
add
fwait
cmp
(bad)
into
ror
(bad)
inc
dec
loopne
cmps
xchg
(bad)
add
add
js
add
jne
(bad)
jb
jno
sbb
mov
jle
into
mov
outs
add
repnz
les
add
add
int3
mov
xchg
(bad)
pop
mov
lock
cmp
cmp
add
add
cdq
push
clc
pushf
push
mov
push
push
rcr
xchg
xchg
retf
std
xchg
add
add
add
add
inc
call
sub
js
add
imul
dec
sub
out
cmp
(bad)
or
dec
adc
push
in
and
mov
sar
loop
add
add
pop
add
in
and
add
pop
sub
add
in
xor
pop
lods
mov
add
add
pop
pusha
mov
push
add
and
div
sbb
cwde
mov
sub
inc
add
jne
cdq
add
add
pop
or
repz
dec
(bad)
mov
retf
and
sub
sbb
add
add
dec
jno
mov
loope
sbb
call
add
xor
add
ins
test
add
add
pop
add
popf
pop
mov
add
les
jmp
or
frstor
out
add
add
jno
jg
ret
test
repnz
ret
add
and
mov
ffree
push
add
add
xor
das
cld
clc
inc
out
push
je
add
ret
xchg
jnp
loop
mov
or
add
add
inc
mov
fstp
lea
pop
inc
mov
mov
or
pop
mov
add
add
adc
and
test
movs
and
push
in
add
retf
int
out
add
ret
pop
lds
add
add
scas
loope
jae
jp
pusha
pop
das
adc
dec
push
mov
inc
bound
nop
rcl
xor
popf
mov
fmul
sbb
ja
std
movd
push
cli
add
add
add
and
dec
dec
or
jns
popf
inc
retf
fadd
mov
mov
(bad)
in
and
add
and
adc
cmps
mov
inc
pop
sar
jmp
pop
sar
mov
add
add
ins
pop
bnd
mov
add
mov
add
addr16
cmc
in
loop
cmp
add
add
mov
inc
cmovns
push
xchg
sub
cwde
repnz
pop
aam
test
mov
daa
cmp
loop
movs
jno
add
add
add
pop
inc
cmps
aad
retf
pusha
add
lock
mov
add
and
clc
add
add
inc
mov
mov
nop
jne
xchg
adc
jge
xor
push
sub
and
cmc
movs
mov
ret
pusha
ror
sub
or
rcl
dec
add
dec
add
add
add
pop
nop
repnz
adc
popa
enter
add
adc
add
add
add
(bad)
shr
pop
dec
js
add
retf
add
cwde
add
or
add
add
mov
lea
add
dec
mov
out
inc
add
jle
jecxz
rcr
fisub
xlat
lds
add
dec
pushf
pop
aaa
jmp
mov
cmp
mov
cmp
adc
add
lods
daa
out
inc
imul
push
add
mov
cmp
sldt
fwait
enter
stc
push
pop
call
add
add
jmp
bswap
pop
xchg
push
jmp
add
xchg
mov
sub
add
add
jg
sub
out
mov
das
adc
ds
add
jae
mov
out
add
add
mov
mov
add
rcr
mov
and
icebp
sbb
xchg
call
mov
add
add
add
popf
pop
js
fwait
xchg
scas
jp
mov
sbb
in
add
ja
add
add
scas
or
add
data16
fidiv
dec
add
pop
or
mov
mov
xor
add
add
iret
repnz
add
outs
repz
or
xchg
int3
pop
(bad)
pushf
jo
popw
or
fild
add
add
mov
movs
retf
fstp
xor
add
in
into
jl
mov
mov
add
iret
popf
add
movs
lds
jp
sbb
lea
mov
inc
rcr
add
sub
xchg
mov
add
dec
ins
inc
add
cmp
in
sbb
add
add
fs
jmp
mov
pop
add
sar
add
add
add
call
add
out
sbb
add
and
cli
add
mov
add
cmp
push
(bad)
mov
add
add
dec
stos
(bad)
in
fidivr
push
inc
imul
add
fs
cdq
add
and
adc
dec
sub
outs
cld
loop
add
add
add
aam
rcl
or
ss
push
retf
add
les
stos
aas
in
add
add
cmps
sub
add
sbb
add
fisttp
pop
scas
xlat
outs
cs
cmc
adc
mov
add
add
xor
pop
call
fld
pop
out
or
pop
pop
scas
fwait
movs
sub
inc
add
pop
sub
add
add
(bad)
pop
sub
fcom
icebp
enter
fwait
(bad)
cwde
xchg
sub
add
xor
and
loop
add
add
push
in
div
or
or
xchg
inc
xchg
popa
ret
test
cmp
ret
mov
add
cmp
add
stc
(bad)
fidivr
pop
push
rcr
in
fwait
add
cmp
neg
add
add
out
and
hlt
jo
pusha
ins
add
push
jmp
mov
jmp
pop
add
add
add
out
add
(bad)
data16
shl
add
aam
ss
mov
lock
add
jge
add
add
inc
push
sbb
test
nop
pop
cmp
mov
sbb
pop
pop
shl
adc
sub
and
add
scas
jne
pop
sbb
push
cmp
mov
adc
jno
or
inc
in
lods
rcr
add
adc
inc
clc
adc
adc
add
sub
rcl
mov
mov
outs
mov
add
arpl
sub
in
xchg
jns
jl
lods
cmp
ja
out
pop
xchg
add
outs
push
movlps
adc
add
add
out
fst
add
inc
es
add
inc
imul
ins
jno
sbb
add
mov
jae
stc
cmp
add
mov
call
adc
test
mov
add
add
add
push
jmp
mov
xlat
out
sbb
in
imul
ror
cwde
sub
add
add
into
or
leave
sbb
lds
add
or
pop
lea
add
add
add
adc
in
add
cmps
stos
xchg
(bad)
loop
sub
add
nop
add
add
pop
jne
pop
addr16
mov
xor
adc
mov
shl
add
add
pop
dec
sbb
cmps
add
psubw
cmps
or
aad
mov
les
mov
std
fwait
movs
add
push
mov
fadd
imul
sbb
mov
cmp
mov
mov
add
xchg
cld
retf
add
cs
gs
movs
sar
add
movs
xchg
add
add
add
sub
cmc
add
or
pop
imul
inc
add
adc
data16
shl
push
add
add
cmp
mov
add
std
sub
mov
jmp
imul
mov
in
add
cli
sahf
pushf
ja
rcl
add
add
iret
fimul
add
cld
and
stos
cmp
mov
ins
sbb
xor
fsub
call
(bad)
popa
add
inc
add
add
xor
fist
ins
mov
xchg
xor
push
mov
rol
or
adc
int3
inc
xor
bound
inc
shr
add
test
mov
lea
push
rol
push
pop
(bad)
dec
jne
add
add
and
fisubr
xor
scas
dec
jo
add
jae
cmp
add
add
add
add
(bad)
in
add
add
imul
add
jo
aas
mov
(bad)
sub
add
add
mov
xor
or
add
mov
xchg
add
mov
jmp
pop
loope
and
inc
sbb
aaa
pusha
cmps
cld
div
add
jns
addr16
cmp
add
add
fiadd
ins
xchg
inc
adc
mov
sub
les
add
and
add
add
iret
test
inc
pop
mov
add
fisubr
pop
pop
lock
add
add
jmp
pusha
outs
push
fild
and
cli
push
xor
and
dec
sbb
pop
not
sbb
adc
sbb
retf
mov
mov
idiv
add
mov
add
add
add
sub
test
push
cli
fcmove
adc
dec
xchg
xlat
(bad)
rcr
jle
out
mov
sub
add
add
popf
add
dec
lods
pop
cmp
xor
inc
jecxz
push
cld
add
cwde
or
add
das
call
jno
mov
mov
add
push
repnz
scas
push
cmps
push
inc
xchg
add
add
(bad)
cli
pusha
mov
add
or
mov
dec
nop
cmps
test
xor
adc
add
fdiv
test
iret
add
and
pop
pusha
ror
jle
loop
aaa
add
add
add
pushf
and
mov
add
inc
mov
stos
pop
mov
rol
add
pop
sub
mov
stos
lods
loope
sbb
scas
out
fistp
mov
ret
js
add
add
add
cmp
dec
pop
movs
add
adc
lods
add
rcl
sub
mov
add
add
push
or
dec
(bad)
mov
int3
in
jne
add
lahf
test
add
add
add
(bad)
in
and
inc
adc
push
ja
sti
sub
push
ret
sbb
add
rcr
mov
mov
sbb
inc
add
icebp
loop
mov
(bad)
les
push
out
test
add
add
imul
out
test
cmps
and
mov
lahf
shr
add
or
add
les
test
and
test
jb
mov
in
cmp
mov
add
add
xor
xor
in
inc
loop
xchg
pop
clc
cmp
push
push
call
add
(bad)
add
add
dec
inc
cwde
jmp
or
js
add
add
add
push
sbb
xor
sar
pop
stos
sub
xor
jp
cli
add
mov
out
push
cld
push
add
add
pop
add
xchg
nop
dec
or
jo
sub
dec
ins
add
das
pop
test
add
ins
inc
add
add
out
rcl
test
add
ins
je
add
cmp
dec
add
sub
pop
div
jns
xchg
test
add
loope
cmp
jp
mov
add
(bad)
mov
imul
out
das
popf
(bad)
dec
add
and
or
stc
sbb
add
test
push
je
gs
xor
inc
add
ret
jns
sub
cmc
add
jb
push
sbb
pop
xor
mov
jne
add
lods
fwait
test
jo
jg
out
add
add
jb
pop
and
push
cli
push
dec
or
(bad)
jns
(bad)
add
cmps
push
fidiv
pop
aam
add
add
jo
xchg
jge
and
lods
pop
addr16
jne
loopne
in
add
outs
cmps
lock
push
dec
add
add
add
or
add
and
fcomip
add
cmc
nop
and
(bad)
inc
sti
sar
aas
stos
add
add
add
add
in
call
cmp
int3
jle
or
(bad)
and
int
cmp
add
add
add
inc
das
dec
xor
add
call
inc
loope
add
cli
cmp
addr16
add
add
movs
pop
or
lock
je
cmp
cmp
dec
pop
or
pushf
mov
add
add
or
add
mov
je
ja
jg
add
sub
add
add
add
jmp
test
add
mov
iret
mov
add
jae
inc
cli
dec
add
add
je
add
xor
mov
inc
mov
out
xor
adc
cwde
test
add
add
lds
or
inc
(bad)
std
jo
ret
aas
add
add
push
jb
mov
add
add
clc
and
stos
xchg
mov
leave
fcmovu
add
stc
nop
ret
jle
pop
jge
arpl
aam
out
push
add
add
and
push
fwait
mov
int
mov
mov
cmp
inc
cmp
ret
inc
mov
xchg
add
add
adc
push
idiv
clc
add
mov
push
sub
add
shl
pop
add
push
ds
add
add
dec
inc
ss
sbb
sbb
jne
xchg
pop
je
dec
inc
adc
add
add
(bad)
ja
sbb
cmp
or
idiv
and
movs
fild
iret
lea
nop
add
add
rol
sar
mov
or
push
lods
pusha
sub
daa
push
push
(bad)
and
fcomp
mov
add
add
rcr
clc
in
add
out
jecxz
fsub
das
nop
cdq
sysenter
xor
jno
shl
add
add
add
xor
pop
add
and
add
jmp
xor
add
in
cld
(bad)
pop
add
add
mov
add
xor
add
lods
test
loopne
lahf
pusha
pop
mov
int3
add
add
mov
in
sbb
adc
adc
inc
adc
dec
push
pop
mov
pop
and
or
retf
add
add
xor
(bad)
and
ss
fist
repz
(bad)
mov
je
test
jne
add
add
imul
popa
add
hlt
pusha
jmp
sbb
pop
loop
cmc
push
push
or
mov
dec
loope
add
add
repnz
add
xchg
xor
repnz
jecxz
fld
iret
mov
mov
mov
add
cmp
mov
add
add
outs
mov
adc
test
out
pusha
add
add
cmp
adc
or
aad
adc
lds
cmp
pop
pop
icebp
push
inc
and
add
add
aad
add
inc
xchg
js
add
dec
cli
neg
mov
xchg
pusha
push
add
add
add
mov
mul
push
cmp
sub
xlat
rcr
shl
and
dec
ss
add
add
add
jo
inc
outs
test
ins
sub
cmp
int
rol
xchg
loopne
add
pminub
add
clc
jae
mov
pop
pop
dec
sbb
sub
xchg
ins
xor
jo
adc
push
ds
add
add
push
xlat
xchg
jb
mov
cmovp
cs
mov
test
inc
ror
and
lock
add
ss
mov
dec
int3
mov
imul
cli
repnz
add
mov
push
xlat
mov
add
add
fs
jp
movs
dec
ins
les
loop
add
ret
inc
push
lock
pop
or
ror
std
add
add
push
mov
pop
shl
dec
addr16
stos
push
jmp
jl
mov
sbb
add
push
add
add
test
outs
jne
adc
ret
int3
enter
and
aaa
cmps
dec
add
add
add
add
jnp
aas
pop
sbb
jo
out
sbb
jl
aam
pop
repnz
ret
lock
into
inc
add
add
inc
loope
cmps
rol
push
adc
cmp
xchg
cmp
xor
jp
xor
cmps
inc
jbe
add
add
add
push
sub
jne
add
and
add
sti
rcl
add
add
pop
pop
dec
or
sbb
inc
ins
add
dec
xor
retf
sub
add
sub
add
mov
fimul
cmp
cdq
sar
pop
pop
repnz
push
movs
xor
in
add
add
add
cmp
or
add
lock
add
cmp
les
retf
push
sbb
std
pop
add
add
sub
fsub
xchg
mov
(bad)
pop
imul
(bad)
or
test
sti
cmp
and
add
add
dec
add
and
mov
and
or
cmp
dec
dec
xor
mov
adc
lock
xchg
add
mov
xchg
shl
sub
add
add
or
or
pusha
scas
test
pusha
repz
sbb
outs
cli
inc
rcr
and
push
add
add
mov
lock
addr16
inc
or
movs
std
adc
shl
inc
inc
add
fwait
add
xchg
add
add
cmp
add
sbb
xchg
push
mov
gs
sub
pop
test
add
add
rol
sub
xlat
jge
fild
mov
loope
(bad)
fdivr
cli
out
add
jge
add
add
jae
mov
repz
mov
movs
fldenv
xor
fstp
mov
icebp
fild
stos
add
add
dec
adc
xchg
test
and
add
ss
shl
cmp
aas
push
ret
sub
(bad)
mov
mov
add
mov
call
add
(bad)
mov
xor
jo
pop
or
les
add
add
popf
jle
jbe
mov
pop
sbb
jmp
repz
push
clc
add
add
add
mov
pop
int3
push
mov
cmp
add
pop
outs
mov
add
add
inc
or
inc
mov
push
test
push
jbe
lods
aas
and
jmp
mov
pop
xchg
add
add
sub
add
push
hlt
adc
fdiv
aas
jns
cmps
int
dec
rdtsc
pushf
add
add
jmp
call
(bad)
fldenv
adc
or
xor
jns
add
push
nop
add
add
dec
adc
inc
or
(bad)
in
dec
fst
add
lock
popf
inc
add
add
rcl
add
dec
and
out
shl
inc
add
aam
pop
cs
adc
outs
sbb
add
add
add
int
push
sar
xor
and
inc
int3
sbb
pop
add
(bad)
idiv
add
add
test
test
mov
jnp
es
xor
cdq
push
sub
sub
mov
add
addr16
dec
lock
add
rep
iret
sbb
add
add
sbb
push
add
add
aad
popa
xchg
mov
mov
es
in
add
inc
xor
leave
sub
je
add
add
add
pop
cmp
aam
add
mov
sub
pushf
pop
pop
cmp
in
rol
(bad)
add
add
add
and
and
std
pop
push
aam
jmp
add
or
add
add
mov
add
sub
cmp
add
(bad)
push
add
repz
into
jae
and
add
add
add
mov
clc
add
fucompp
push
scas
lahf
nop
push
(bad)
cvtps2pi
cdq
lds
mov
mov
test
test
mov
jo
scas
popa
cmp
jno
mov
xchg
add
add
add
mov
(bad)
add
push
jl
out
sbb
mov
out
dec
add
add
add
test
stc
repz
mov
or
add
pop
add
and
scas
inc
xchg
mov
add
xor
mov
packsswb
mov
retf
and
mov
cmc
cmps
push
cmp
xor
add
add
xchg
fwait
add
push
inc
mov
and
push
xor
clc
pop
pop
add
add
dec
shl
cmp
xor
mov
ins
jb
popa
jo
pop
pop
add
add
add
jmp
push
push
enter
test
pop
cwde
loopne
cmp
jg
mov
add
lods
dec
sti
ins
add
jb
sbb
push
xchg
fwait
mov
cmp
push
fs
add
inc
fadd
add
add
mov
pop
movs
xor
les
and
fwait
rcl
scas
or
fnstcw
jne
pop
dec
or
sbb
leave
sbb
mov
jl
push
into
cmp
add
add
mov
push
shl
and
repnz
dec
aad
inc
sub
xchg
mov
lods
scas
xchg
adc
add
add
xor
push
(bad)
aas
je
add
in
mov
cdq
stos
rcr
das
jnp
push
add
add
hlt
mov
stos
jo
aad
mov
clc
inc
mov
jmp
mul
das
add
add
add
mov
loopne
stc
out
aas
mov
sbb
inc
pop
jge
rcl
cmp
add
add
add
ss
(bad)
nop
adc
inc
add
leave
xchg
xor
or
mov
add
add
push
push
leave
mov
in
sub
xchg
add
dec
sbb
leave
xor
rcl
add
(bad)
adc
sub
sbb
ins
inc
jg
mov
add
ja
mov
jp
pop
sahf
mov
ror
add
add
pop
gs
adc
or
cmps
(bad)
fsub
sub
sbb
mov
adc
add
jecxz
xchg
add
add
add
or
jl
add
mov
xlat
stc
add
mov
int
add
add
sub
lods
pusha
js
add
jns
ins
add
sub
ret
jno
in
addr16
dec
add
add
ja
scas
mov
pop
mov
xchg
pop
(bad)
ds
and
pop
add
loopne
pop
add
add
xchg
sub
stos
(bad)
push
loopne
xchg
push
loope
mov
add
add
mov
push
mov
pop
fptan
add
add
lock
add
scas
rol
add
add
push
ds
jge
jne
packsswb
imul
inc
mov
nop
mov
pop
mov
add
add
aaa
add
clc
add
and
jge
add
in
mov
div
push
add
add
add
(bad)
shl
js
add
mov
adc
imul
add
add
push
add
cmp
add
and
add
test
fwait
stc
fs
jp
sbb
add
add
jecxz
(bad)
in
push
or
or
adc
inc
mov
ret
add
sar
sbb
mov
cmc
pop
pushw
ja
jo
cmp
add
add
add
add
in
add
pusha
or
fld
pop
cs
fwait
and
add
add
push
inc
mov
rol
push
cdq
in
or
out
call
sub
icebp
sbb
adc
inc
or
pop
(bad)
out
shl
mov
add
inc
aad
das
lods
xchg
push
or
sahf
add
add
sbb
fiadd
loope
add
cmp
cmp
(bad)
add
add
add
or
dec
add
xor
add
xlat
pop
cmps
or
js
jge
add
leave
mov
add
sbb
mov
add
and
in
jo
clc
sbb
or
add
add
in
sar
fst
add
lds
jle
pop
jo
adc
add
and
dec
push
xchg
add
add
dec
add
shl
arpl
xchg
cmp
outs
adc
sbb
pop
fs
hlt
lods
add
add
add
ret
sahf
xchg
add
retf
fs
test
sbb
add
loopne
add
add
add
in
add
aaa
cmp
pop
mov
adc
or
arpl
pop
add
add
add
push
dec
rcr
xchg
mov
sub
enter
mov
out
hlt
dec
mov
shl
shl
push
add
add
jl
push
aad
mov
nop
enter
inc
mov
add
adc
add
add
shr
test
(bad)
jge
add
stos
cwde
ds
inc
rol
add
add
stc
lods
popa
js
pop
xchg
ja
mov
clc
sub
mov
imul
add
aas
arpl
add
add
icebp
add
pop
les
call
data16
movs
adc
mov
or
arpl
mov
rol
fs
push
out
jl
xor
loopne
add
push
pop
sbb
ret
inc
lea
add
(bad)
loopne
mov
add
fucomp
sub
js
adc
xchg
inc
cmp
sbb
add
addr16
rol
out
lea
loopne
pop
(bad)
push
push
add
add
xchg
shl
mov
arpl
pop
add
imul
cmc
rol
add
fcom
sahf
mov
add
xchg
push
int3
dec
xchg
pop
and
or
nop
test
enter
add
xor
dec
jns
pusha
sar
pop
gs
add
xchg
xchg
push
aam
jae
add
add
outs
add
sub
cmp
(bad)
idiv
std
imul
test
add
or
mov
cmp
add
push
movs
rol
mov
in
jl
add
add
pusha
inc
test
pop
cdq
mov
add
data16
inc
jb
add
push
add
pop
repz
jo
adc
cwde
std
in
add
add
adc
xor
add
dec
mov
mov
js
jp
in
add
add
add
add
stos
or
add
and
lahf
add
(bad)
fcmovbe
mov
(bad)
leave
adc
mov
mov
add
push
sub
arpl
and
fmul
pop
fidivr
add
add
(bad)
ja
jbe
cmc
or
ins
dec
sbb
push
aam
or
pushf
add
mov
add
add
ins
add
test
jo
pop
js
add
or
fisttp
pop
clc
dec
cmp
add
mov
pop
add
repz
nop
neg
jecxz
in
dec
rol
fmul
and
inc
add
add
inc
mov
lods
shr
outs
sub
xchg
nop
add
jge
sti
int3
(bad)
in
loopne
inc
cli
and
sar
mov
add
xchg
jmp
add
imul
add
stos
adc
add
add
mov
add
scas
jl
(bad)
clc
call
aam
mov
sub
sbb
mov
add
mov
js
add
xor
mov
fadd
mov
sub
push
inc
add
inc
dec
idiv
add
add
mov
or
push
sbb
loope
cs
add
frstor
loope
jnp
sbb
(bad)
cs
xchg
add
add
mov
(bad)
jp
add
fldenv
mov
fbld
sbb
fadd
xchg
add
add
mov
adc
adc
sub
sti
sub
pop
or
imul
cmp
ins
add
add
add
aas
sbb
ret
jmp
adc
enter
arpl
cmp
push
push
mov
add
lea
mov
mov
aaa
daa
jmp
stc
inc
adc
push
dec
call
and
repnz
mov
retf
xchg
das
add
push
cdq
add
mov
aaa
cmp
fadd
sub
add
add
loop
add
pop
mov
hlt
or
int
jno
setae
add
inc
add
add
dec
pop
gs
out
add
inc
scas
mov
std
push
xlat
add
push
out
enter
add
push
ss
add
add
fbstp
jecxz
jmp
stos
add
pop
pop
cmp
add
push
vpcmpgtw
mov
add
add
popa
jno
retf
xor
mov
aam
jg
xlat
add
add
xchg
shl
ret
(bad)
neg
push
out
xchg
adc
xor
jge
(bad)
mov
jo
push
xchg
les
and
fwait
add
add
sub
es
fcom
lods
push
pop
mov
push
loopne
xchg
or
add
mov
lock
add
add
mov
and
pop
cld
int
leave
out
add
jle
stos
sbb
mov
add
add
fmul
cmc
pop
add
lahf
mov
fwait
jmp
add
jge
es
push
lahf
mov
add
add
sbb
add
es
xor
push
dec
mov
rol
add
jb
sub
mov
ror
(bad)
mov
xor
lock
mov
add
add
add
jmp
and
stos
test
inc
mov
adc
push
dec
cmp
mov
add
add
dec
xlat
mov
xor
popa
fisttp
sub
cmp
(bad)
push
js
cmp
lds
cmp
add
add
add
das
cmps
clc
sbb
aam
fcmovb
icebp
dec
bnd
and
hlt
inc
add
add
jecxz
mov
cli
and
add
out
sub
addr16
mov
xchg
dec
jmp
add
add
inc
rcl
bound
xor
jo
popf
stc
addr16
xchg
add
aad
jle
xlat
or
jb
sbb
cmp
add
add
or
pop
xchg
(bad)
sub
inc
inc
add
sar
fiadd
in
movs
pusha
mov
out
(bad)
aam
add
add
mov
stos
xchg
inc
mov
jne
call
jo
popa
xor
cmp
in
add
add
cmc
add
add
mov
and
add
(bad)
lock
and
pop
add
add
enter
lods
repnz
add
hlt
push
mov
retf
mov
add
fld
add
add
add
push
fiadd
hlt
inc
xchg
test
imul
(bad)
add
add
xchg
les
pusha
add
sbb
cmp
push
add
xchg
cmp
stos
push
xor
out
adc
inc
push
mov
add
add
repnz
pop
dec
pop
adc
add
and
pop
adc
cli
add
aad
fistp
add
mov
out
sbb
push
dec
xor
push
hlt
add
jmp
push
add
add
mov
mov
add
mov
into
or
add
inc
mov
out
jp
add
pop
xor
test
add
xchg
rol
out
add
fdivr
and
add
stos
outs
sbb
cmp
imul
ret
mov
add
pop
push
cmp
add
add
sbb
rcr
dec
cmp
add
add
in
jo
add
jnp
stos
add
add
lea
inc
and
push
jecxz
fsub
out
mov
cs
loopne
stc
add
or
sbb
add
add
mov
hlt
xchg
add
pop
sti
adc
dec
pop
in
lock
fnstenv
add
add
test
or
mov
dec
ror
mov
fcomi
xchg
add
add
add
xchg
pop
fimul
dec
jp
push
inc
adc
test
jle
bound
xchg
sahf
add
add
add
cmp
aas
out
pop
js
mov
pop
loopne
daa
lock
mov
pop
ret
jnp
add
add
or
fild
movs
sbb
and
sub
loope
shr
xor
pop
pop
add
add
nop
loop
pop
sbb
cwde
retf
mov
mov
inc
mov
jp
jbe
xchg
add
add
xchg
les
push
ins
add
inc
(bad)
in
sbb
dec
stos
mov
add
adc
add
add
stos
leave
inc
sbb
popa
lods
and
inc
inc
sbb
aam
pop
out
inc
push
add
add
in
jecxz
inc
inc
add
xchg
add
shl
inc
pop
or
mov
out
xchg
ja
add
add
fld
cmp
push
pop
cli
rcr
add
hlt
(bad)
lea
push
pushf
movs
pop
sti
push
daa
mov
xlat
add
add
add
fucomi
fbstp
shl
cld
cwde
pushf
add
jecxz
xchg
callw
mov
jecxz
mov
icebp
add
add
out
test
cmp
and
jmp
pop
sar
adc
add
add
add
ins
inc
pop
lea
add
push
popa
int
xchg
add
xor
mov
sbb
sub
add
add
mov
jg
add
loop
jmp
jge
pop
daa
adc
mov
or
mov
add
add
jno
add
shl
outs
loopne
add
pop
sahf
jb
loope
adc
scas
xchg
loop
in
add
add
add
lock
push
aaa
jp
inc
adc
inc
adc
popa
inc
test
or
cs
add
out
adc
ja
add
pop
popa
mov
jmp
mov
xchg
sbb
add
rol
mov
ret
les
inc
aam
aam
or
xor
pop
mov
mov
lahf
test
pop
enter
or
(bad)
push
xor
add
sub
or
out
xchg
js
dec
add
add
pop
add
sub
cmps
cmp
inc
mov
xor
push
es
icebp
sub
jecxz
lahf
loopne
sub
add
add
mov
sahf
ret
fsub
xor
mov
xchg
movs
sub
xor
pop
jbe
push
dec
xchg
add
add
cdq
add
mov
int
retf
mov
add
add
mov
jecxz
mov
or
add
aam
push
outs
fadd
cmps
jb
test
and
sub
inc
jo
enter
add
push
jecxz
add
add
mov
js
ds
aas
add
aam
mov
mov
add
mov
daa
add
and
add
add
add
clc
sbb
fwait
ins
data16
and
mov
jbe
cmp
(bad)
sti
ja
cmp
and
add
add
mov
add
aam
fadd
pop
ror
cld
stos
add
in
xor
in
mov
xor
xchg
mov
jmp
outs
cmp
idiv
aas
sbb
mov
dec
lahf
nop
and
add
add
push
adc
ins
in
or
add
data16
mov
dec
jp
add
push
popf
jae
fsubr
add
add
sbb
sub
shl
mov
adc
cmp
das
leave
add
sub
fcom
mov
add
add
sbb
inc
in
(bad)
xchg
mov
mov
mov
int3
aaa
add
jg
hlt
fld
add
add
js
add
cdq
scas
push
aaa
cmp
mov
in
mov
sub
mov
cmp
fadd
add
add
(bad)
das
cs
repnz
inc
pop
pminsw
add
cmc
and
fcomp
add
add
add
gs
arpl
push
add
retf
test
inc
mov
ja
jmp
add
lods
test
pop
vpshuflw
cmp
xchg
add
sbb
add
inc
pop
fs
add
add
mov
stos
js
fwait
xlat
repnz
push
fyl2xp1
jge
mov
adc
dec
cmps
add
add
push
sbb
dec
push
outs
mov
dec
and
jnp
add
jb
pop
repz
cld
add
add
or
xchg
cwde
pop
popa
pop
add
loope
add
movs
jae
imul
add
sbb
sub
add
add
out
and
jae
pusha
je
cdq
dec
aaa
shl
adc
add
fwait
xchg
out
mov
pusha
add
add
add
add
jl
xor
addr16
hlt
ins
add
outs
data16
in
or
aaa
push
add
test
add
sbb
shr
and
loopne
push
jbe
dec
mov
shr
jmp
sbb
jns
add
add
adc
(bad)
sub
adc
hlt
jnp
stc
bound
ss
add
add
pop
enter
add
add
adc
lahf
pop
and
sbb
xchg
dec
add
not
pop
sub
int3
mov
add
add
mov
sbb
push
add
(bad)
adc
or
addr16
nop
push
xchg
js
add
xchg
push
out
sbb
lods
mov
pop
mov
add
add
jmp
hlt
mov
sbb
add
xchg
lods
adc
add
iret
add
mov
leave
lock
add
gs
push
xchg
mov
adc
js
movs
and
add
add
ret
xor
retf
add
jns
daa
int
out
xchg
add
add
sub
or
add
add
data16
xchg
test
jle
add
mov
lahf
hlt
repnz
cld
or
add
xor
adc
inc
retf
push
leave
add
or
sbb
cdq
pop
add
add
outs
jns
dec
or
xlat
jecxz
ds
cmp
nop
lahf
add
test
pop
ret
jl
rol
add
add
sbb
cmc
push
repnz
(bad)
pop
add
mov
fld
stos
push
data16
pop
add
add
lods
imul
and
inc
add
les
and
ret
add
add
cld
in
cs
sub
and
clc
mov
jge
call
mov
fmul
loopne
les
add
add
jge
add
fistp
xor
xchg
mov
in
jl
add
dec
movs
lahf
fadd
add
add
push
mov
add
ins
les
(bad)
add
outs
icebp
(bad)
push
xchg
add
xchg
mov
cwde
push
push
xor
add
mov
in
jno
hlt
mov
add
add
add
push
ss
es
clc
add
ins
ficom
and
jmp
mov
loope
inc
jl
cmp
add
add
loopne
adc
xchg
nop
cmp
cld
push
add
inc
aaa
mov
cmps
ret
mov
aas
add
add
call
pusha
dec
cmp
ja
inc
es
push
inc
and
add
add
add
add
out
call
sub
lea
dec
pop
scas
and
jb
add
add
add
dec
mov
sbb
xlat
add
sbb
jo
stos
xchg
add
add
(bad)
js
add
ins
inc
adc
rcl
pop
cmp
aad
and
add
add
ja
setnp
xchg
mov
add
cmp
mov
into
jp
jecxz
dec
add
add
add
imul
mov
ins
xchg
shl
add
dec
mov
ss
arpl
or
add
add
inc
jne
xchg
outs
cmps
dec
mov
jnp
pop
sub
out
ror
add
inc
repz
iret
pop
in
jo
mov
aad
mov
xor
and
xlat
inc
cwde
add
jge
add
add
and
inc
add
push
ret
repz
in
out
sbb
pop
cmp
mov
pusha
cmp
add
add
add
xchg
rcl
mov
fild
cmp
jl
mov
repnz
mov
cmp
add
retf
das
sub
mov
xchg
mov
aad
and
add
or
pop
add
add
lods
xor
(bad)
dec
inc
ins
add
add
xchg
scas
in
pushf
jo
in
lods
add
movs
cdq
call
add
pop
sub
push
jge
push
pop
cmps
mov
scas
jle
or
pop
shl
std
int3
push
into
add
sub
add
add
dec
jmp
sbb
xchg
nop
mov
and
leave
add
test
add
and
add
add
add
cmp
inc
je
jne
mov
repnz
jmp
add
add
lds
pop
std
xlat
add
iret
out
pop
dec
ret
sub
jecxz
mov
outs
add
retf
sub
add
cld
add
mov
mov
push
and
dec
xor
out
stos
repz
je
mov
add
jno
add
add
cli
sbb
test
les
pop
mov
add
fcmovnbe
in
cld
ds
add
add
mov
add
sub
cli
imul
cmp
jge
outs
addr16
(bad)
mov
popa
pop
icebp
add
add
mov
adc
jb
les
add
aaa
es
mov
add
retf
dec
jmp
add
clc
push
jae
ss
add
mov
mov
mov
rcr
mov
add
and
repz
outs
int3
fwait
and
push
inc
lds
add
inc
xchg
add
add
add
in
add
ret
jl
add
mov
adc
adc
fwait
dec
add
retf
xor
push
add
add
cmp
call
out
int3
aas
pop
cmps
repnz
arpl
sub
rcr
add
add
stc
pushf
add
add
mov
repz
add
jo
clc
lods
jnp
rol
ficomp
push
adc
and
popw
mov
xchg
fdiv
xor
mov
and
add
jbe
jnp
add
add
dec
popf
cmc
ds
test
inc
nop
ret
dec
and
ins
ja
repz
mov
jb
mov
push
add
add
sub
inc
aas
sbb
scas
aaa
add
imul
add
test
(bad)
loopne
cmps
js
repz
add
sub
mov
dec
cmp
inc
and
and
stos
jmp
cli
add
and
add
lods
mov
add
ss
int
mov
ins
pop
outs
xchg
cmp
rcr
cmp
add
add
nop
movs
inc
pusha
fwait
add
outs
add
movs
pushf
xchg
(bad)
inc
inc
inc
out
xor
jb
fcomp
or
aam
add
add
cmps
inc
sub
cdq
pusha
jne
ja
pop
nop
xor
pop
mov
pop
xchg
pop
inc
cmp
add
add
imul
cld
test
sbb
cs
jmp
xchg
nop
out
push
pop
mov
outs
sbb
dec
xchg
add
add
add
add
push
js
lahf
int
jg
sbb
sbb
jb
inc
loope
dec
clc
dec
xchg
push
add
out
add
add
mov
xor
rol
add
sub
push
test
sbb
jo
add
add
sar
test
mov
cmc
xor
push
or
jno
add
lock
pop
add
add
and
test
adc
pushf
ret
int
pusha
mov
push
das
mov
adc
add
add
fstp
in
xor
cmps
mov
or
dec
xor
add
stos
(bad)
cmps
movs
inc
int
add
add
pop
lea
add
lock
nop
pop
add
pop
xor
cmps
xor
push
sbb
add
add
dec
push
imul
cmp
adc
cmp
jge
add
jb
mov
push
jno
dec
sub
add
add
das
add
fs
out
cmp
mov
add
mov
push
leave
jmp
call
fist
jne
pop
ficom
add
lock
mov
mov
in
xchg
movs
add
add
inc
arpl
es
imul
jge
pop
add
jle
call
mov
xchg
aas
lds
imul
adc
xchg
cmp
cwde
into
sbb
scas
fisub
aas
pop
retf
add
add
inc
push
mov
shl
imul
(bad)
xchg
fcomip
fimul
lods
add
mov
add
pop
in
hlt
pop
push
add
std
mov
js
in
cmp
aaa
cmp
pop
std
addr16
dec
add
pop
add
jae
sub
retf
jp
mov
add
push
adc
mov
xor
rol
add
add
and
add
cmp
mov
lods
push
add
xlat
out
add
add
add
sar
dec
add
pop
pop
jno
mov
leave
repnz
aas
add
add
xor
add
mov
movs
fadd
add
ds
mov
sbb
push
ins
cmps
hlt
mov
add
add
pop
iret
add
sbb
cmp
sub
sbb
mov
repz
push
jmp
add
mov
push
cmp
clc
push
scas
add
mov
popf
loope
lods
jbe
mov
sbb
and
add
add
cmp
sbb
(bad)
pop
pop
bound
shl
jge
add
in
add
call
or
inc
add
frstor
jg
cdq
add
test
push
test
push
dec
popf
jp
add
add
call
push
ficom
imul
jp
or
push
sbb
cmp
add
add
add
sub
cwde
lods
fiadd
sbb
loope
add
jae
sub
ficom
and
push
cmp
cld
add
add
jl
neg
mov
pop
xor
sub
loop
mov
mov
mov
add
push
ds
aad
cmc
cmc
cmp
push
push
rol
gs
jp
das
mov
dec
mov
add
add
add
adc
add
add
enter
cli
add
mov
add
add
fabs
popa
pushf
test
rol
imul
fisttp
aam
movs
xlat
dec
jnp
add
add
add
aaa
gs
add
arpl
(bad)
enter
add
mov
jb
add
aaa
pcmpgtw
dec
mov
add
add
and
pop
pop
lahf
jnp
add
push
pop
push
pop
dec
cmc
or
in
scas
(bad)
sbb
fiadd
add
add
add
inc
into
jbe
jp
cmp
cmp
add
jmp
add
mov
push
lock
add
add
cmps
mov
add
popa
jmp
add
adc
int3
mov
add
shr
add
cdq
(bad)
sbb
in
add
cmp
neg
add
movs
arpl
in
cdq
out
add
sbb
int3
lahf
cmp
(bad)
cmp
sbb
scas
repnz
add
add
add
fld
les
lock
adc
int3
jmp
in
fild
add
add
(bad)
mov
cmp
mov
add
pop
xor
div
out
add
add
pop
out
pop
add
mov
pop
jns
add
nop
rol
aad
xor
add
add
add
fiadd
add
jnp
movs
push
or
movups
sbb
pusha
jne
add
das
add
add
data16
add
and
imul
cwde
inc
pop
push
add
les
sbb
add
add
add
mov
mov
dec
jne
ja
hlt
cmp
pop
inc
test
push
sbb
add
out
mov
add
outs
cld
add
inc
je
add
mov
cmp
xchg
add
sti
push
dec
add
add
std
cmp
xchg
test
shl
in
sub
adc
cmp
pop
or
add
push
add
add
imul
add
and
loopne
push
add
jl
pop
add
add
add
scas
mov
jmp
push
shr
movs
inc
nop
cli
mov
ds
dec
add
add
add
inc
or
in
sub
cs
mov
sbb
sbb
add
push
xchg
xchg
and
cmc
add
add
add
mov
add
adc
int3
sahf
rol
add
popa
push
xor
jge
add
(bad)
cli
add
add
mov
jmp
(bad)
aad
pop
sub
lds
xchg
outs
stos
xchg
mov
add
add
add
movs
inc
out
hlt
add
and
ret
mov
dec
pusha
dec
mov
add
and
xor
add
movs
mov
lahf
mov
int
mov
in
push
aam
test
mov
cmps
add
add
add
or
daa
popa
add
pushf
mov
xor
(bad)
sahf
rcl
leave
and
add
add
lds
adc
jg
xchg
mov
outs
cmp
(bad)
lock
push
adc
nop
add
add
add
(bad)
mov
mov
add
ds
add
xchg
cwde
cmp
rcl
add
add
sub
inc
xor
cmp
mov
jb
out
into
mov
ret
icebp
xchg
add
add
add
loopne
sbb
sbb
rcr
cmp
jb
js
add
mov
mov
cmp
add
add
leave
mov
push
cdq
int
sar
pusha
and
adc
and
inc
mov
add
sahf
call
add
add
adc
mov
pushf
fs
int3
xor
add
movs
jmp
rcr
test
add
add
push
mov
jns
add
fs
adc
movs
call
das
in
sub
add
add
rcr
call
shl
mov
adc
fist
add
add
add
(bad)
jmp
js
cmps
or
in
pop
aam
jge
cmp
add
push
dec
add
add
adc
iret
push
pop
js
sub
jl
rcl
mov
retf
add
add
add
hlt
mov
sbb
stc
add
add
push
adc
add
add
ins
cmp
fcomp
fadd
js
imul
and
int3
dec
aaa
pusha
dec
pop
add
add
(bad)
xchg
cld
cmps
pop
fwait
mov
pushf
popa
xor
ret
jbe
xchg
add
into
mov
fiadd
ja
mov
add
add
fiadd
test
push
adc
mov
call
mov
pushf
xchg
(bad)
or
add
add
fnstenv
add
shl
cli
arpl
sbb
clc
push
pushf
push
mov
popf
add
add
(bad)
(bad)
call
adc
test
into
out
add
jo
mov
add
add
add
adc
scas
addr16
and
rol
fld
ret
or
push
fild
add
aam
pop
sti
stc
popa
and
sub
(bad)
dec
movs
cmp
repnz
out
add
or
enter
add
add
daa
loop
dec
ror
repz
cmp
stos
into
div
mov
adc
iret
add
arpl
xchg
add
add
cmp
ds
test
movs
cmp
push
cmps
sub
ja
add
stc
jo
in
xor
add
ds
mov
and
ja
add
jo
popa
sub
js
add
mov
xor
inc
pop
sahf
jb
add
add
add
repnz
and
pop
fld
int3
xor
add
add
push
jecxz
sbb
aam
mov
loopne
test
jg
stc
rcl
push
in
int
add
movs
mov
sbb
dec
cmp
inc
cmp
add
and
ds
add
add
inc
sub
and
dec
cmps
call
bound
mov
and
add
add
enter
pop
adc
jp
mov
shl
inc
add
add
std
adc
add
add
aaa
add
inc
aad
pop
into
test
jbe
in
daa
rcl
cmp
dec
inc
jb
add
add
add
inc
lods
and
or
and
push
add
leave
sub
ins
in
data16
xor
add
add
jne
aaa
imul
jp
gs
sbb
cmp
mov
call
cmp
icebp
hlt
push
sbb
add
nop
sahf
add
je
or
int3
out
arpl
add
add
jecxz
rcl
jmp
popf
call
jmp
out
scas
shl
clc
mov
add
jnp
add
or
repz
jp
mov
aas
add
xchg
mov
rol
add
add
lds
pop
call
add
add
pop
movs
sahf
add
in
mov
dec
mov
xor
add
add
mov
sbb
cli
pop
es
popf
scas
sbb
add
data16
add
mov
int
cmp
xor
add
adc
add
push
jns
inc
fiadd
mov
inc
int3
add
sti
sbb
fist
int
(bad)
inc
inc
jecxz
lock
dec
stos
hlt
lock
adc
mov
add
jns
add
add
cdq
mov
lahf
fwait
add
xlat
out
cmp
dec
add
js
mov
icebp
fild
aam
or
add
stos
in
movs
push
add
into
sub
add
xchg
xor
leave
mov
add
dec
cmp
pop
fist
cmc
(bad)
sbb
add
into
jle
fwait
cmps
loope
sub
add
inc
aas
pushf
fiadd
fisttp
or
mov
add
jmp
aam
fdivr
add
add
mov
ficom
mov
add
cmp
xchg
mov
dec
push
sub
add
add
scas
mov
fild
cwde
ficom
pop
add
imul
aad
dec
test
xchg
sub
add
add
mov
add
stc
xchg
add
xchg
add
mov
iret
and
int3
add
add
dec
mov
push
sub
lock
add
push
inc
pop
test
pop
aaa
push
jns
adc
push
push
out
sahf
add
add
jno
inc
sbb
imul
neg
or
mov
push
lds
xor
sub
adc
or
add
mov
popf
add
jmp
outs
mov
ror
mov
add
xchg
test
add
add
cmp
mov
shl
fadd
jmp
fisubr
rcr
add
add
into
fs
and
ret
ror
pop
mov
popa
jnp
push
test
imul
loopne
repnz
add
add
call
sub
add
mov
fldcw
popf
mov
sahf
sub
cld
add
add
fist
add
push
cdq
lahf
pop
push
fs
jl
xor
mov
loop
fwait
test
add
add
xchg
test
add
(bad)
scas
loope
sbb
jg
cmp
adc
dec
nop
add
call
add
leave
and
cmp
cwde
pop
cmp
pop
add
add
imul
mov
sub
sub
pusha
jge
outs
imul
leave
add
adc
add
pop
xor
pop
xor
mov
mov
ss
add
dec
sbb
add
add
or
sub
ret
adc
test
inc
sbb
mov
fsubr
shl
icebp
inc
sar
cmp
add
lods
ds
xlat
jb
add
in
mov
add
cmp
add
test
dec
xchg
add
cmp
(bad)
mov
lods
cli
xor
add
add
add
dec
test
fnstsw
sbb
mov
xchg
dec
adc
add
add
jg
sbb
daa
retf
pop
mov
add
icebp
jbe
or
add
cdq
cmp
add
lea
push
add
aaa
or
test
push
cmp
and
add
add
add
sar
outs
push
call
or
idiv
pusha
movs
dec
sub
and
add
add
fmul
mov
test
mov
adc
dec
bound
ficom
add
movs
mov
repz
push
mov
jne
(bad)
pop
dec
add
loopne
pushw
xchg
pusha
xor
adc
add
add
and
add
cli
lahf
aas
lods
add
push
rcl
fcmovu
or
(bad)
jmp
rol
add
sti
mov
imul
add
inc
jae
lahf
shr
call
add
test
jecxz
add
add
push
add
inc
cmp
push
in
add
jmp
std
aaa
pusha
add
ror
sbb
mov
ja
or
(bad)
out
add
add
cmps
jo
add
fsub
pop
cmp
add
add
mov
mov
fstp
(bad)
add
cmp
aas
mov
add
add
xchg
push
sub
gs
sbb
pop
pop
movs
mov
inc
sar
daa
stos
xchg
cmps
add
add
std
mov
sahf
add
mov
push
inc
jno
dec
add
es
fdiv
inc
inc
lds
cmp
jp
leave
mov
add
neg
scas
aas
mov
out
add
cld
jmp
dec
xchg
add
add
mov
and
add
pusha
fucom
aas
mov
cmp
inc
jbe
stc
mov
add
push
repnz
add
iret
movs
xlat
icebp
mov
add
lock
pop
xchg
fwait
xlat
xchg
sub
call
mov
add
mul
mov
add
add
cmp
cmp
cli
xchg
out
adc
add
add
stc
movs
add
aam
cmp
ja
add
sbb
mov
inc
mov
inc
add
add
push
add
movs
fld
pusha
add
add
iret
in
or
push
jae
add
xchg
jns
add
add
pusha
add
push
mov
push
adc
cmp
call
lock
mov
(bad)
lds
sbb
add
add
pop
add
push
call
cmp
pop
add
sar
stos
inc
add
add
add
xlat
verw
or
daa
push
cmp
add
and
and
out
pop
ja
rol
scas
nop
loopne
or
add
add
das
lods
mov
xchg
stos
shr
mov
add
add
add
cmps
adc
outs
jg
call
add
add
scas
add
aas
jge
add
add
add
add
fwait
pop
clc
ds
iret
bound
js
push
int3
lds
add
add
push
add
rcl
(bad)
ja
pop
xchg
xchg
inc
mov
jge
jb
popf
add
add
add
cmp
add
rcl
and
fcom
add
(bad)
imul
loop
repnz
lods
add
add
add
ret
(bad)
in
pop
push
add
aad
mov
fstp
cmp
ins
sbb
add
add
add
rcr
das
and
jmp
jl
adc
lahf
jle
movs
xor
and
add
add
add
pop
xchg
sahf
mov
test
mov
mov
push
cdq
lods
das
or
mov
add
dec
loop
cld
iret
aas
idiv
add
add
repz
gs
add
add
stc
sub
leave
sub
scas
sbb
ud1
jb
sub
ret
fisttp
add
add
add
dec
lods
movs
fs
clc
cs
out
sub
mov
arpl
icebp
pusha
in
daa
add
sub
add
add
adc
clc
jne
xor
out
add
mov
pop
ins
xor
das
mov
pop
or
cmc
add
add
push
in
out
jg
adc
mov
leave
dec
cs
mov
inc
aaa
xlat
or
ss
cli
add
add
add
cmp
das
ins
cmp
add
add
enter
sub
add
scas
or
push
dec
sub
movs
js
pop
shl
pop
and
xchg
jg
add
jp
fwait
and
xchg
or
add
add
hlt
outs
pusha
jnp
(bad)
aad
dec
add
daa
std
iret
mov
jmp
add
cmp
xchg
inc
scas
add
add
mov
fnstcw
inc
or
daa
push
sbb
inc
adc
test
jbe
and
xor
sub
add
add
fcmovnu
sub
add
dec
and
test
xchg
cmps
enter
test
add
mov
xlat
dec
or
rcl
mov
xor
inc
xchg
add
stos
jne
adc
inc
add
add
add
jle
pop
adc
clc
lea
repz
mov
mov
in
mov
add
xchg
pushf
add
add
aam
pop
or
dec
xchg
push
add
les
movs
retf
pop
daa
xchg
rol
imul
call
cmc
jl
add
mov
in
(bad)
mov
pushf
mov
adc
punpckhdq
mov
add
add
ficomp
test
loop
add
pop
or
sar
mov
int3
push
xlat
mov
add
stc
sub
mov
ins
mov
xor
pop
xchg
jae
sub
add
xlat
push
shl
xchg
loopne
adc
add
add
pop
aam
add
stc
jo
in
ins
add
mov
dec
adc
dec
outs
add
add
add
and
pusha
ds
cmp
nop
mov
movs
out
les
push
retf
in
cmp
add
add
pushf
pop
movs
iret
add
lods
add
(bad)
in
lods
mov
int3
ret
cmc
add
cmps
inc
sub
sar
jmp
clc
push
add
call
shr
mov
lahf
jne
and
imul
add
inc
push
add
xor
test
push
add
mov
push
push
pop
jne
add
loop
pop
add
fdiv
(bad)
cmp
adc
add
dec
loop
add
cdq
adc
jnp
paddsb
cwde
push
push
add
add
jno
add
addr16
jl
pop
and
inc
mov
cmp
ret
cmp
or
sbb
inc
test
int3
fwait
add
add
jno
shr
mov
aas
inc
nop
imul
add
cmp
jnp
gs
add
lods
mov
add
add
jg
add
scas
loop
or
or
data16
inc
leave
xchg
add
push
(bad)
mov
adc
add
add
add
fdivr
mov
push
jmp
xchg
cmp
adc
xor
add
add
add
sbb
imul
add
push
jmp
in
or
dec
xchg
repnz
add
add
cmp
adc
add
xchg
adc
cmovnp
push
pop
jns
(bad)
test
bound
add
add
and
cmovns
sbb
push
inc
add
retf
ficomp
dec
out
std
add
push
popf
movs
push
push
sbb
push
mov
add
movs
inc
add
fistp
pop
outs
rcl
fmul
or
cmp
xchg
add
add
mov
mov
inc
and
mov
(bad)
fidiv
(bad)
rol
aaa
xchg
std
ins
popf
and
add
add
in
out
pop
add
cmp
sub
push
mov
push
mov
add
add
cmp
ins
add
mov
xchg
adc
adc
ins
and
(bad)
aaa
(bad)
clc
(bad)
add
or
dec
push
iret
add
sub
aad
jmp
add
jle
pop
imul
scas
lock
pop
cmc
add
add
dec
push
adc
xchg
add
and
ss
mov
sub
pushf
jg
cmps
sbb
sub
retf
out
repz
es
sbb
add
add
cmps
retf
fist
in
sbb
pop
xor
inc
pop
cmp
adc
cmp
mov
add
pop
inc
call
push
cli
pop
xchg
xlat
mov
xchg
ds
add
push
jmp
pop
add
add
push
lahf
add
sub
pop
add
jno
jne
push
(bad)
mov
das
sti
mov
jae
add
add
scas
std
test
cli
jg
jecxz
shl
rol
sbb
outs
pop
cmp
dec
add
add
(bad)
sti
sub
mov
add
sbb
xchg
dec
pop
in
fwait
jne
sbb
add
xlat
add
add
test
xor
(bad)
and
and
mov
push
pop
add
pop
sbb
aam
add
add
dec
mov
(bad)
adc
mov
outs
push
es
mov
adc
test
ins
xchg
add
add
dec
fild
shr
mov
ds
mov
or
mov
sbb
scas
pop
cmps
je
add
add
sbb
xchg
inc
mov
test
inc
sub
clc
xor
pop
fwait
stos
inc
xchg
and
ret
shl
mov
nop
push
(bad)
hlt
inc
icebp
das
and
imul
ja
cwde
sbb
cmp
push
add
inc
sbb
mov
push
idiv
add
es
shl
cmp
ficom
mov
add
add
sub
mov
xchg
push
int3
pop
cmps
retf
add
jmp
xor
ffree
mov
add
add
fist
jle
retf
mov
dec
add
loopne
imul
rol
jno
xchg
or
test
add
add
mov
sub
sub
jae
add
add
sub
repz
push
pop
lds
add
add
add
rcr
and
cmp
lock
js
out
add
mov
pushf
int
add
add
pop
jo
(bad)
sub
add
adc
pop
out
or
mov
add
pop
jle
pop
ja
and
lods
cs
inc
push
add
adc
dec
mov
add
ins
outs
adc
(bad)
jmp
add
jae
and
lahf
out
sbb
add
add
jne
cmp
dec
add
retf
xor
jmp
add
js
sub
sbb
push
scas
add
add
jne
(bad)
and
(bad)
mov
movs
(bad)
loopne
or
cld
sar
adc
scas
adc
data16
add
mov
cdq
adc
add
jge
gs
loop
add
test
std
pop
js
sbb
add
add
push
scas
(bad)
sti
jge
inc
scas
int
mov
ret
lods
pop
dec
fld
add
adc
or
fwait
rol
push
pop
fadd
jbe
enter
add
pop
adc
clc
push
add
int
les
ret
add
add
xchg
movs
mov
push
pusha
add
mov
add
push
sar
cli
dec
add
add
nop
mov
xchg
add
ins
mov
(bad)
mov
test
jne
sti
add
add
add
jmp
mul
lahf
jge
movs
popf
enter
ror
lds
sub
in
stc
add
add
rcl
lods
pop
adc
mov
sar
xchg
test
adc
jmp
cmp
inc
pop
mov
gs
sbb
mov
out
push
adc
cmp
inc
rcr
jnp
adc
movs
cmp
add
add
dec
mov
mov
sub
fwait
addr16
jle
add
test
icebp
sar
jns
clc
add
je
add
add
jbe
movs
rol
cmp
mov
out
add
fild
ret
aad
add
xor
add
add
push
cmp
xor
je
sub
push
aas
pop
movs
outs
sub
adc
xor
sbb
leave
adc
retf
jne
rol
sub
test
add
jmp
out
add
add
ds
push
aaa
adc
add
mov
jecxz
test
(bad)
jnp
(bad)
nop
add
cdq
push
xchg
fisttp
add
add
cld
sbb
pushf
jnp
jmp
and
rcr
pop
push
sbb
xchg
cmp
add
add
scas
addr16
jnp
mov
or
js
leave
pop
add
or
push
sub
inc
inc
add
add
add
sub
add
jo
push
cmp
mov
add
idiv
test
add
add
mov
pop
adc
dec
or
sub
add
imul
push
jo
leave
push
pop
pop
add
xor
add
add
jae
stos
(bad)
add
pop
popa
pop
or
xchg
aaa
nop
les
sti
push
add
add
add
pop
lods
fmul
xchg
xchg
pop
popf
js
add
imul
add
add
add
pop
jbe
push
add
add
cdq
imul
pop
std
mov
pop
push
mov
add
add
xor
adc
add
xchg
xchg
inc
not
fmulp
and
pop
scas
(bad)
add
pop
or
add
add
add
popf
pop
fcom
pop
add
sbb
add
add
add
test
pop
scas
ins
mov
mov
mov
add
add
add
out
jo
push
mov
and
pop
sbb
add
fdiv
add
add
shl
xor
js
sbb
push
mov
cld
pusha
and
shl
adc
add
add
pusha
int3
mul
fcomp
add
cmc
push
adc
pop
add
lea
daa
loopne
imul
add
pop
in
xor
pop
mov
sub
dec
(bad)
or
stc
add
add
jl
jb
push
call
sbb
add
pop
mov
enter
stos
pop
cwde
and
ror
add
add
pop
sub
fnsave
add
clc
pop
lahf
cmp
cli
add
xchg
movs
call
add
add
sub
les
push
cmps
stc
jnp
add
mov
fwait
lock
add
add
sub
mov
inc
mov
(bad)
out
(bad)
pop
ins
add
add
call
aas
jecxz
add
add
add
push
mov
sti
out
rol
iret
and
and
ins
dec
call
add
mov
out
mov
mov
add
pand
int3
lea
sub
rcr
add
add
mov
loope
push
loopne
pusha
add
jge
les
add
sbb
add
add
add
pop
outs
mov
cmp
mov
sbb
movs
rcl
imul
add
add
xchg
pusha
(bad)
jmp
mov
adc
ja
add
leave
scas
pop
loop
pop
adc
add
add
add
shr
enter
mov
loope
add
fistp
add
add
mov
pop
push
and
call
pusha
dec
cmps
add
sbb
adc
push
or
ss
mov
jae
add
cmp
push
sbb
add
add
mov
pushf
add
out
repnz
add
xchg
jb
sti
in
jg
add
add
mov
ins
fnsave
cmp
pop
lods
dec
call
pop
add
ins
jmp
add
add
add
loopne
add
psubd
ins
sub
add
sbb
scas
clc
add
cli
rol
add
add
inc
aad
sbb
loopne
rol
ror
ret
push
rol
adc
push
cmp
add
add
add
add
dec
add
adc
add
std
clc
test
xchg
add
sub
add
add
icebp
xlat
pop
cwde
(bad)
add
xchg
sar
add
outs
mov
push
(bad)
mov
push
das
mov
add
add
sub
inc
jno
fld
mov
jmp
add
mov
add
gs
or
add
add
outs
enter
xor
scas
push
mov
add
(bad)
sbb
add
mov
add
add
arpl
iret
je
add
in
imul
fwait
add
rol
and
fld
add
add
mov
add
lods
loopne
add
sar
mov
add
add
clc
adc
lods
adc
das
and
aam
xchg
jg
add
push
and
cdq
pop
cmp
adc
jae
or
ins
mov
sbb
or
cld
std
jl
mov
add
ret
mov
mov
pop
mov
and
add
xchg
add
push
sub
test
add
pusha
pop
cwde
js
mov
hlt
sahf
inc
push
bound
mov
push
outs
movs
add
add
jp
rcl
add
add
mov
daa
add
mov
adc
and
dec
or
punpckhwd
add
inc
and
cwde
mov
mov
das
push
(bad)
mov
adc
xchg
push
dec
retf
add
add
adc
mov
repnz
pop
nop
push
push
sahf
daa
lahf
add
or
push
jo
out
add
add
add
leave
add
xor
push
stos
je
or
sbb
retf
pop
sub
adc
add
int
iret
dec
and
leave
inc
rol
les
mov
cmp
push
cdq
push
rol
add
lds
pop
stc
xor
and
mov
and
add
dec
sub
add
add
push
cmp
ss
sbb
sub
add
jnp
bound
test
pop
add
add
pop
aam
(bad)
fdiv
popa
pop
jge
pop
fiadd
inc
movs
aam
cs
push
sub
xchg
inc
add
add
aas
add
mov
ss
jecxz
or
mov
aad
add
add
add
jo
ret
test
inc
mov
add
push
adc
fnstenv
add
push
sahf
lds
add
add
mov
xchg
(bad)
sub
xor
cmps
xchg
retf
stos
lock
cmp
inc
sbb
add
add
fstp
and
mov
fwait
xlat
add
(bad)
push
jge
retf
inc
movs
cmps
(bad)
add
add
add
jmp
xor
(bad)
popf
jecxz
and
mov
add
idiv
inc
jne
add
sbb
add
add
push
cdq
dec
add
mov
mov
sti
add
xchg
jae
mov
mov
inc
add
add
jo
add
sub
ins
or
sub
mov
stos
fld
add
push
mov
enter
mov
in
add
xchg
xor
dec
repz
mov
loop
mov
cld
das
add
add
jbe
(bad)
pop
xchg
and
cwde
fsubr
xchg
addr16
mov
mov
clc
jecxz
add
add
sahf
mov
xor
pop
add
sbb
sub
and
repnz
xor
call
mov
aaa
add
sbb
clc
sub
daa
pop
cdq
fxch
imul
pop
mov
add
add
dec
mov
push
mov
cmp
add
mov
ret
dec
(bad)
dec
ret
outs
imul
add
mov
outs
inc
xchg
pushf
je
inc
mov
xchg
int3
inc
(bad)
mov
xchg
or
add
add
inc
int
adc
(bad)
in
pop
push
nop
ror
lds
pop
and
pop
add
ss
xchg
jmp
add
fs
ins
adc
fcomi
add
clc
mov
stos
add
rcl
outs
push
ins
test
add
add
sbb
dec
cmp
mov
adc
xor
push
add
xlat
movs
cld
add
push
or
jg
cwde
add
or
xchg
pop
sub
sti
loop
xor
add
add
dec
and
add
(bad)
jmp
lds
adc
loopne
sub
jae
add
add
add
dec
and
jge
add
xor
mov
pop
push
lods
jmp
add
add
int
ret
add
in
or
add
sbb
outs
inc
nop
mov
xchg
push
mov
inc
xchg
add
add
add
std
scas
or
push
call
pop
je
in
(bad)
add
sbb
push
mov
add
add
jp
jle
loope
sub
clc
add
jg
jmp
push
cmp
mov
add
ins
xor
add
add
stc
mov
dec
push
lahf
je
(bad)
aaa
ins
add
loopne
dec
cmp
(bad)
int3
adc
mul
add
add
push
xor
add
mov
cmp
pop
pop
fadd
pop
sbb
push
add
add
dec
jbe
mov
shr
inc
adc
ja
push
push
sub
jge
clc
(bad)
fnsave
retf
ins
add
add
inc
dec
loopne
inc
mov
lea
in
add
mov
jp
shl
push
or
fld
add
add
add
add
cwde
popa
retf
sub
or
cmp
jb
jg
push
add
scas
jo
add
add
xchg
pop
dec
sbb
je
ja
xor
pop
jge
mov
add
inc
cmp
add
add
cmp
xchg
dec
lock
mov
das
push
aaa
jge
stos
cmc
mov
add
add
jbe
sub
fisubr
push
fldcw
adc
fadd
fdivr
loope
add
add
pop
das
sti
and
push
ins
jge
aas
push
mov
mov
mov
cmc
data16
mov
add
add
jbe
cmp
jnp
sti
xor
xor
mov
xchg
mov
jg
fisttp
daa
add
add
add
cmc
and
sbb
mov
div
(bad)
imul
add
retf
add
jns
add
inc
cmp
pop
sbb
retf
popa
xchg
cmp
aad
int3
push
add
inc
out
add
add
out
repz
lock
rol
call
loop
gs
push
call
add
cmp
scas
add
popa
add
pop
jnp
jne
or
stc
sub
mov
jo
mov
add
xor
je
and
rcl
out
jae
add
retf
stc
inc
rcr
jecxz
add
add
push
push
sbb
cmp
aas
mov
mov
and
outs
and
nop
cli
jmp
in
add
add
push
mov
mov
mov
push
aad
jecxz
pusha
xchg
mov
(bad)
popa
mov
out
jle
add
add
add
dec
je
pop
add
and
push
in
bound
fcomi
mov
add
add
add
(bad)
mov
add
ficomp
add
enter
push
mov
add
add
aas
add
sahf
cld
mov
icebp
add
jp
pop
push
mov
add
add
lahf
lds
xor
xchg
sbb
xchg
mov
cmps
adc
mov
repz
lahf
lahf
and
add
popf
dec
xor
xor
add
inc
or
pop
xor
cmp
test
xor
mov
aas
cmp
mov
add
or
mov
in
test
and
retf
push
jnp
sub
sbb
add
add
add
xor
ds
lods
add
push
cdq
scas
scas
add
cmps
retf
pop
push
cmp
jo
cmovno
cmovs
movs
sub
ret
mov
bound
push
dec
xchg
outs
cmps
xchg
add
ja
add
arpl
add
add
stos
mov
jle
sub
push
aam
inc
pop
rol
dec
jmp
cld
rol
inc
and
add
add
lods
add
test
and
outs
ins
les
sahf
lods
add
xchg
ja
iret
add
add
shr
movs
mov
jle
xor
scas
mov
pop
dec
add
pop
fisubr
add
add
mov
mov
das
(bad)
imul
idiv
rcr
pop
jg
in
add
add
call
add
int
jecxz
mov
das
test
cli
add
jno
adc
add
add
pop
xor
or
repnz
cmp
test
add
add
inc
xlat
mov
fistp
mov
add
jno
mov
mov
xchg
add
add
push
xchg
mov
mov
rcl
sbb
cmps
add
push
mov
add
add
add
out
mov
push
std
lods
adc
dec
push
adc
ret
sbb
mov
and
jmp
add
div
add
push
push
fwait
xchg
or
cmp
cmp
or
and
sub
and
mov
add
add
gs
fadd
lahf
add
pop
dec
mov
mov
push
cld
repnz
mov
pop
cs
test
add
add
push
enter
mov
fdivr
adc
push
xlat
dec
xor
sti
xor
into
push
fld1
mov
mov
add
les
(bad)
pusha
inc
xchg
sahf
jmp
or
(bad)
cmps
jne
inc
mov
xlat
sub
add
add
mov
adc
test
in
and
rcl
popf
add
popa
mov
imul
rcr
add
pop
or
ins
cli
out
aas
inc
sti
add
xor
into
xor
cmc
add
add
repnz
add
loop
repnz
and
stos
jo
or
and
aam
mov
add
add
mov
neg
scas
pop
out
loopne
out
mov
stos
repnz
add
sub
jb
add
sub
and
cdq
pop
add
cmc
push
xchg
cmp
outs
add
or
mov
or
jb
cmp
(bad)
jle
loopne
cmp
pop
cmp
gs
xchg
mov
add
inc
cli
dec
(bad)
inc
loope
push
xor
ds
or
in
xcrypt-cfb
cmps
addr16
add
(bad)
push
add
add
add
jle
adc
in
xor
leave
lods
or
stos
add
adc
mov
and
add
add
mov
pop
imul
(bad)
cmp
int
sbb
mov
add
adc
add
sbb
lock
pop
inc
fld
jne
sbb
leave
push
arpl
repnz
mov
aad
cdq
add
add
add
xchg
xor
mov
add
and
ror
ret
pop
cmp
sahf
daa
pop
inc
stos
(bad)
xor
sbb
add
pop
aas
cmp
inc
mov
mov
cmps
dec
and
or
mov
imul
imul
loopne
or
mov
test
jbe
add
adc
das
cmp
fwait
adc
add
add
adc
je
pushf
mov
lahf
add
fisttp
(bad)
loopne
add
dec
jns
mov
sete
pop
add
add
clc
add
test
dec
rcl
mov
sub
pop
jae
js
xchg
repz
in
add
add
hlt
mov
dec
ins
xor
ror
push
data16
sbb
rcl
mov
add
add
rcr
bound
dec
dec
add
dec
in
add
cmp
add
add
add
sub
sub
les
sar
mov
pusha
cmp
push
adc
cmps
xchg
loopne
add
add
loope
add
cli
mov
add
iret
and
pop
jo
fdiv
dec
add
icebp
retf
add
add
shl
add
cmp
jmp
mov
test
sbb
out
mov
mov
dec
pop
add
add
rcr
adc
jne
push
push
into
cmp
aas
repnz
or
aaa
repz
mov
add
add
fsubr
xchg
xchg
mov
add
add
sub
mov
add
push
pop
xor
f2xm1
add
add
adc
pop
popa
iret
add
mov
cld
mov
inc
add
call
xor
add
add
retf
fstp
push
add
mov
pop
test
(bad)
hlt
pop
add
lock
push
mov
xor
add
add
adc
pop
push
mov
and
add
inc
jg
add
movs
out
add
lock
add
idiv
imul
mov
cmp
add
mov
ja
fcomp
add
add
pop
cmps
adc
lds
fidiv
psubsb
inc
mov
xchg
sbb
cli
dec
cmp
push
aaa
add
add
not
mov
add
out
pop
add
jp
fsubr
sahf
add
mov
jle
mov
add
add
hlt
push
add
xor
add
(bad)
pop
in
pop
pusha
shr
test
add
mul
lock
fadd
call
clc
mov
mov
mov
mov
aas
test
add
add
push
push
adc
pop
pop
push
sbb
dec
mov
xchg
inc
das
cwde
adc
sub
div
add
add
pusha
sub
sub
add
imul
or
(bad)
fdiv
add
add
in
and
lods
and
add
daa
cmp
add
addr16
pop
rcl
add
add
add
outs
mov
adc
test
addr16
idiv
xor
hlt
or
cmps
add
add
add
xor
mov
adc
and
push
icebp
jecxz
mov
js
sti
add
add
and
sub
jge
sub
hlt
scas
scas
add
ins
dec
out
jecxz
mov
add
add
nop
dec
mov
or
jo
add
call
jae
loop
movs
jb
add
add
add
add
pop
fnstsw
mov
(bad)
mov
dec
bound
in
in
push
inc
lea
popf
add
xchg
adc
add
add
cmp
or
cdq
add
rcl
add
pop
push
cmp
jecxz
pop
xor
and
inc
repz
push
mov
add
xchg
arpl
add
xchg
jge
sbb
icebp
mul
add
arpl
add
add
mov
dec
xlat
int
xchg
xchg
mov
add
add
aam
xchg
add
add
out
xchg
je
add
push
test
inc
or
jbe
and
rol
shl
add
xor
cmp
push
leave
xor
mov
bound
cmp
inc
pusha
add
add
mov
add
jbe
add
call
sub
fstp
arpl
cwde
pop
pop
(bad)
or
add
add
shl
out
and
inc
xchg
add
sub
(bad)
outs
stos
add
pop
mov
adc
aas
adc
pusha
add
popf
cmps
pop
and
xor
add
dec
push
or
loope
push
out
add
add
nop
js
sub
inc
mov
leave
and
ds
sahf
jp
ins
cs
add
push
fldcw
xor
pop
stos
add
add
add
in
xor
and
xchg
inc
int
mov
test
add
add
(bad)
dec
add
mov
aad
enter
leave
add
mov
jo
mov
mov
(bad)
retf
xchg
in
int
sub
ins
mov
lea
add
mov
fld
test
add
aad
mov
push
xor
in
and
add
fsub
adc
push
retf
add
add
jnp
je
add
pop
ss
add
xor
repnz
sub
add
add
imul
xchg
xchg
pop
jmp
inc
cld
sub
push
add
add
inc
adc
sbb
add
jmp
into
fiadd
pop
stos
cmp
cwde
retf
sub
dec
sbb
and
aam
add
add
shl
hlt
jp
sbb
out
std
xchg
xchg
loopne
mov
inc
add
out
push
sbb
cmp
add
add
and
sbb
mov
mov
jns
xchg
sub
xor
mov
add
mov
push
lea
add
add
outs
dec
repz
cs
pop
pop
jo
call
lds
loopne
lea
mov
add
add
(bad)
mov
xchg
pop
ja
jns
or
cmp
pop
add
add
pop
push
call
xor
mov
out
retf
jmp
or
inc
test
jmp
add
or
stos
shr
pop
(bad)
sub
aas
xchg
dec
mov
pop
out
add
or
add
cmp
ss
sub
push
popa
jnp
les
add
rcr
call
pop
mov
ins
sbb
jo
add
out
mov
and
cmp
xchg
call
add
jmp
fld
add
add
xlat
repz
xchg
push
add
jns
sub
mov
or
add
add
pop
add
pop
iret
pop
ficomp
add
cmc
ins
xor
outs
sbb
or
cmps
add
add
add
pop
enter
pop
jp
call
ret
mov
add
sub
xor
sbb
push
add
and
cmc
mov
push
out
xor
enter
(bad)
add
add
pop
mov
dec
add
shl
(bad)
sub
je
es
fxam
add
add
xchg
sbb
add
add
or
enter
into
xor
rcl
shl
cmp
cmp
xchg
cmp
je
add
add
jg
inc
int
jge
pop
(bad)
push
shl
nop
mov
mov
push
add
cmp
lods
clc
adc
add
idiv
xchg
add
ret
cmps
fwait
pop
mov
add
add
jb
add
ret
loopne
aas
fistp
jecxz
(bad)
push
pop
mov
pop
or
add
xchg
mov
push
mov
loope
or
mov
aas
push
pop
pushf
inc
jmp
sets
add
pop
xchg
(bad)
mov
add
das
lea
and
and
scas
outs
add
add
imul
adc
shr
leave
cmp
jno
mov
push
aad
inc
cmp
in
jns
cmps
add
add
arpl
add
inc
out
inc
jl
outs
call
fdivr
add
add
hlt
xor
adc
test
xor
add
pusha
add
sbb
xor
inc
out
repnz
sub
add
add
mov
mov
test
xlat
mov
imul
add
jp
and
add
add
cmps
inc
jmp
lahf
cdq
add
mov
fistp
mov
and
and
enter
out
dec
add
add
sub
mov
loopne
adc
sar
sbb
add
jle
push
lahf
std
adc
movs
xchg
add
add
cs
test
cmp
push
rcl
inc
add
sub
sbb
mov
add
add
sub
cmp
pop
push
add
outs
(bad)
les
add
(bad)
sub
add
add
add
sbb
push
sub
addr16
in
add
push
mov
fild
out
sub
jge
add
add
mov
adc
dec
les
cmp
adc
cmp
jne
xor
or
addr16
add
add
dec
inc
cmp
std
and
ss
daa
imul
ds
add
add
add
mov
add
cmp
in
sub
add
fcomp
add
mov
sbb
adc
add
add
cld
shl
cmp
xor
push
jmp
inc
pop
fsubr
pop
ins
dec
pusha
mov
cmp
sbb
dec
add
add
(bad)
inc
jne
and
(bad)
or
nop
nop
wbinvd
dec
jg
cs
add
loop
pop
or
add
add
adc
xchg
pop
xor
movs
dec
cli
xchg
add
jge
inc
inc
lock
shl
in
arpl
add
add
(bad)
lods
jae
and
inc
in
cs
pop
mov
dec
stc
xchg
icebp
and
push
add
add
fsub
add
and
add
loope
or
imul
outs
mov
add
lock
add
pop
test
mov
inc
dec
out
jo
rol
mov
into
bound
push
add
cmp
nop
lock
in
add
cli
call
adc
push
lock
pavgw
jp
jo
add
add
aad
mov
pop
mov
jbe
or
pop
xchg
cmps
or
xchg
push
add
dec
jge
add
add
xor
jb
stc
add
addr16
(bad)
aaa
add
add
add
scas
popa
enter
mov
cmp
or
pop
sbb
jg
mov
mov
add
add
repnz
and
retf
dec
add
sub
add
xchg
jl
shr
add
inc
popa
test
scas
iret
(bad)
push
lea
js
hlt
xor
push
fldcw
mov
pusha
add
add
push
inc
add
pushf
dec
xchg
and
movs
out
dec
frstor
or
and
ror
call
adc
mov
add
xchg
push
sub
es
fsubr
sbb
mov
mov
adc
add
add
inc
cmp
mov
jno
pusha
les
push
or
pop
(bad)
cmc
fld
add
add
std
fld
movs
fwait
inc
xchg
ja
(bad)
aam
retf
mov
sbb
mov
mov
add
add
in
call
cmp
out
pop
sahf
add
shr
or
clc
inc
xchg
add
add
add
(bad)
xor
mov
dec
jae
add
dec
adc
adc
or
xchg
mov
cld
pop
push
add
jge
add
add
xchg
pop
jecxz
pop
add
mov
in
mov
icebp
es
cwde
add
cmps
add
add
jecxz
jp
lods
xor
adc
pop
xchg
jbe
or
retf
dec
mov
xor
aaa
add
add
sbb
add
lods
add
aad
loopne
push
jae
out
xchg
test
or
adc
add
ds
and
dec
dec
test
or
enter
sub
mov
add
sub
lds
mov
ins
push
test
sub
add
loope
add
add
mov
stc
push
fiadd
cld
xor
in
mov
mov
sub
leave
add
add
add
std
retf
cwde
cmp
pop
push
repz
xor
inc
adc
sti
cmp
adc
bswap
arpl
cmps
mov
sbb
add
add
in
push
push
out
jno
jo
jge
pop
pop
push
mov
int3
lock
pusha
jp
pop
sahf
stc
fadd
add
add
std
mov
add
mov
cmp
es
add
jge
aaa
mov
out
add
add
addr16
mov
mov
aam
fwait
cli
popa
fst
add
out
sti
scas
add
add
adc
inc
push
pop
test
pusha
adc
add
or
cmp
dec
add
push
sub
add
add
pop
les
inc
and
and
rcl
jmp
jnp
xchg
out
xor
arpl
add
add
add
sbb
push
mov
cmp
loopne
test
dec
add
or
and
call
add
add
pop
neg
cvtps2pd
push
loopne
mov
setg
mov
outs
pop
add
pop
out
inc
add
add
mov
add
cmc
inc
push
add
iret
jo
push
push
xchg
lods
add
clc
or
cmp
add
jmp
add
add
mov
xor
daa
pop
mov
sbb
cmp
or
inc
call
add
aas
and
xchg
out
adc
pusha
inc
add
jecxz
or
xchg
sahf
add
sub
add
retf
push
sbb
push
mov
clts
dec
sbb
rcl
pop
or
add
and
je
or
dec
push
and
jecxz
and
gs
add
add
push
lahf
in
loope
add
mov
mov
(bad)
add
hlt
cmc
test
add
mov
das
mov
add
les
pop
outs
jb
and
add
mov
mov
pusha
inc
in
or
rol
nop
test
sub
ja
pop
mul
repz
inc
and
push
dec
add
add
imul
push
jl
push
add
pop
nop
outs
add
rol
test
add
rol
add
add
cdq
pop
sub
add
lea
add
(bad)
adc
scas
cs
sbb
add
add
cwde
aad
pop
add
mov
clc
les
int3
mov
(bad)
cmp
pop
sub
and
add
add
cld
sub
inc
xchg
inc
pop
in
out
add
fucomip
inc
add
(bad)
in
cmp
mov
push
cs
shr
fist
pop
jae
add
sub
cwde
push
pslld
stc
mov
add
add
in
add
aaa
and
addr16
(bad)
jmp
adc
pop
sub
add
add
add
call
jno
xchg
leave
sbb
sub
add
and
test
add
add
cdq
push
fidiv
movups
(bad)
xchg
and
loopne
out
add
xchg
jmp
add
push
and
add
xor
loope
cli
xor
add
xchg
fiadd
jns
add
add
add
stos
add
cmp
sub
or
leave
shl
jo
add
sub
adc
add
add
shl
sbb
add
xchg
push
push
jns
sub
pop
mov
jo
stc
mov
cmps
outs
add
add
mov
xchg
add
ins
addr16
push
retf
pop
idiv
add
loopne
ret
add
add
add
jae
gs
inc
jo
sub
lods
dec
jp
addr16
inc
xchg
add
cmp
cmp
cwde
xchg
lahf
sub
mov
cld
add
add
mov
stc
add
mov
add
add
fnstenv
loop
cli
adc
add
mov
inc
push
(bad)
sbb
sahf
cmp
add
jge
adc
mov
jg
mov
pop
je
add
scas
arpl
daa
fmul
add
pop
push
push
sub
test
mov
xchg
in
dec
add
fiadd
add
add
adc
inc
add
mov
add
int
icebp
aam
rol
pop
sbb
dec
das
add
add
add
enter
push
movs
pushf
sub
aas
cld
add
call
add
dec
lahf
and
pushf
jg
add
add
test
pop
mov
std
mov
retf
icebp
test
sub
mov
out
imul
fdivrp
sbb
popf
stos
push
adc
pusha
(bad)
cmp
test
add
dec
mov
nop
push
xchg
jnp
add
add
sbb
fnsave
test
mov
push
bswap
push
stos
add
pusha
jle
aad
add
add
xchg
std
jae
inc
call
cmp
adc
mov
dec
in
aaa
add
add
call
cmp
stc
add
ins
mov
xchg
xor
mov
test
ins
cmps
add
add
sbb
stc
mov
enter
xchg
cmp
lods
jmp
mov
ret
and
in
add
add
push
cmp
cmp
push
or
lahf
and
add
cmp
sbb
mov
(bad)
or
sub
add
es
xor
mov
leave
add
add
(bad)
out
clc
int3
sar
or
push
stos
pop
push
jb
push
test
and
add
pop
and
daa
cmps
mov
les
pop
fld
lods
scas
ror
hlt
scas
add
push
je
pop
sbb
das
pop
add
add
cmp
sub
add
cli
mov
mov
sbb
in
nop
pop
add
push
leave
aad
(bad)
or
pop
(bad)
add
add
mov
sub
jne
add
into
das
push
bound
add
sub
and
jp
add
add
mov
adc
jle
setno
lahf
cmp
mov
push
outs
jae
mov
jbe
add
add
xchg
sbb
outs
add
push
pop
mov
pop
in
pop
(bad)
js
add
out
mov
sar
add
add
mov
fild
pop
nop
mov
add
mov
cmp
adc
push
sar
add
(bad)
sbb
repnz
(bad)
in
sbb
fld
pop
dec
cmc
add
sbb
cli
cmp
pop
sbb
add
add
in
fmul
and
mov
add
int3
retf
pop
iret
test
cld
rol
add
inc
add
add
mov
in
add
push
mov
sub
mov
loope
sub
sbb
add
add
mov
into
push
aam
icebp
ja
add
rcr
and
repnz
hlt
std
and
or
rcl
add
add
in
cmp
int
dec
pop
call
xchg
into
add
mov
add
push
pop
leave
add
add
(bad)
fcomp
and
mov
fs
clc
pop
add
cdq
(bad)
icebp
xor
in
add
pushf
movs
xchg
aad
add
add
lahf
jge
pop
out
add
sbb
pop
ret
pusha
cmp
leave
add
mov
sbb
jns
mov
add
rcl
push
mov
mov
jae
jnp
ins
xchg
outs
add
xchg
add
outs
add
sbb
loop
pusha
inc
in
stos
lock
hlt
mov
add
inc
add
or
jle
dec
jp
add
add
push
pop
fdivr
add
add
xchg
inc
aad
dec
dec
add
fwait
xchg
or
std
sbb
or
mov
push
add
add
es
jmp
lods
int3
push
imul
repnz
add
dec
gs
call
sahf
or
pop
inc
jl
inc
lea
stc
pop
test
in
test
int3
pop
xor
add
jge
(bad)
cmc
xchg
add
add
rol
mov
xor
scas
add
fistp
pop
jnp
data16
sbb
add
add
dec
(bad)
in
sub
adc
pop
sti
in
push
inc
mov
add
pushf
enter
add
add
ror
cmp
lea
pop
shl
mul
test
add
add
pop
jp
ds
test
mov
add
ret
jge
into
inc
cli
xchg
je
int3
push
cmp
movs
adc
nop
add
add
jno
sbb
add
jge
jg
aad
pop
push
add
(bad)
xchg
(bad)
mov
in
add
add
add
hlt
scas
ins
dec
andnps
add
sbb
mov
jg
add
shl
aas
and
add
jg
push
add
jle
mov
leave
fstp
mov
mov
push
adc
add
add
out
cmps
rcr
not
add
cld
sub
(bad)
inc
add
dec
clc
dec
add
push
sti
add
add
popa
jno
fld
adc
inc
popf
sbb
lea
xchg
sar
js
add
imul
mov
loop
adc
xchg
in
sti
imul
push
mov
dec
and
xchg
mov
add
gs
add
inc
adc
push
jmp
sbb
sub
mov
cmp
cli
add
stos
jmp
(bad)
or
aad
pusha
xor
xor
add
add
add
inc
push
rcr
sbb
dec
js
add
mov
xor
call
or
mov
data16
cdq
dec
jo
dec
add
pusha
adc
aam
cmp
mov
add
add
add
and
loopne
ja
jecxz
pop
xchg
loope
js
sahf
add
ds
lahf
inc
pop
jge
aad
cld
cli
add
add
cmp
outs
add
mov
cmp
ins
in
add
adc
movs
xchg
mov
add
add
scas
add
mov
mov
add
dec
popf
dec
sbb
mov
fwait
adc
cmp
add
add
cli
pop
add
sub
aad
inc
retf
cmps
outs
jo
xchg
xchg
cmp
stc
bound
jl
push
scas
add
cld
adc
fnstsw
inc
movs
out
and
add
or
fistp
add
add
add
add
inc
pop
pop
add
xchg
pushf
or
add
jmp
or
add
add
cmp
sub
std
das
lea
add
add
dec
xchg
iret
mov
and
add
jns
jnp
push
xchg
mov
xor
sub
mov
dec
mov
rcr
adc
test
sbb
rol
outs
xor
jo
ja
fnstcw
lock
xchg
add
add
add
add
pop
add
imul
lea
xor
aaa
xlat
into
int3
mov
xchg
add
add
in
xor
add
and
movs
cmp
jbe
repnz
sbb
adc
lds
sbb
jbe
leave
or
pop
dec
scas
lock
add
xchg
pop
lods
ret
popa
add
fist
add
add
in
push
aas
xor
fiadd
jo
mov
fisub
add
add
add
rcr
out
and
or
xor
inc
loopne
pop
mov
add
fild
add
add
dec
sbb
pop
pop
loope
mul
ja
icebp
add
add
out
add
add
and
out
loopne
jle
les
clc
pop
cdq
mov
mov
add
add
inc
shl
call
mov
ins
push
add
in
fcmovbe
rcr
mov
add
sbb
inc
out
cmc
jo
xor
(bad)
data16
stc
repnz
add
pop
imul
inc
int
fs
add
add
jno
jecxz
pusha
xor
jae
jp
push
test
fwait
add
shl
dec
cs
add
shl
stos
loop
jl
add
add
xchg
add
or
nop
add
ss
retf
ja
add
loop
lods
pop
jmp
add
add
test
rcr
ror
jmp
je
icebp
add
mov
call
cmp
fiadd
in
add
add
inc
dec
ds
shl
jge
add
sub
inc
fwait
mov
add
addr16
push
cmp
add
dec
add
add
retf
cs
xor
dec
rcl
int3
dec
dec
add
and
add
push
adc
cmp
ja
inc
movs
dec
xchg
add
xchg
lds
xor
movs
push
push
in
add
add
add
(bad)
hlt
popa
repz
movs
pop
or
ds
jo
cli
jno
call
into
mov
and
add
pop
dec
ret
mov
inc
cwde
mov
add
jmp
sub
add
add
xlat
jmp
add
pop
js
cs
xchg
rcr
cwde
in
add
add
add
retf
mov
imul
aaa
iret
fdiv
or
imul
iret
fild
add
add
cmp
add
arpl
jecxz
test
add
lods
jne
mov
inc
stc
mov
aas
pop
jmp
add
add
pop
dec
fwait
mov
add
add
mov
cdq
push
clc
add
call
add
add
add
jecxz
ror
jmp
mov
dec
mov
std
and
inc
loope
cmp
imul
das
add
add
pop
pop
sub
(bad)
mov
jne
leave
out
pop
std
push
call
add
jno
and
add
add
add
xchg
ds
cdq
mov
add
sar
push
enter
dec
jp
add
pop
jle
pop
leave
push
add
add
push
call
or
sub
shl
jl
aam
xor
add
popa
int
sbb
add
loop
movs
adc
add
or
mov
fucomp
cmp
imul
inc
cmp
sub
add
push
sbb
cmp
add
aad
fadd
(bad)
jmp
(bad)
lock
and
jne
and
sbb
lock
pop
sbb
sub
add
adc
adc
pop
fdiv
add
repz
cmp
call
dec
add
or
das
add
add
cmp
punpckhbw
into
dec
test
cmp
icebp
add
(bad)
ja
outs
inc
nop
jno
add
jp
add
add
dec
add
xchg
add
inc
sbb
push
mov
xor
push
cdq
add
mov
add
add
lds
sahf
std
jmp
shl
fld
lock
ss
addr16
mov
fdiv
add
aam
jmp
fisttp
cmp
sbb
push
mov
mov
rol
xor
add
icebp
test
bound
mov
dec
jecxz
dec
imul
fiadd
adc
add
add
ds
jg
push
push
sti
add
pop
in
jge
out
movs
mov
mov
add
add
shr
aas
mov
adc
fs
sbb
jle
test
add
sbb
or
add
add
cld
fcmovbe
xchg
shl
idiv
and
mov
adc
jbe
jo
cmp
or
add
mov
ffreep
jl
xlat
add
push
(bad)
jne
test
mov
test
add
mov
add
and
sbb
mov
cdq
inc
pop
popf
mov
psubusb
jnp
sldt
add
test
jmp
clc
mov
add
inc
popa
lock
sbb
cmp
xchg
sub
add
add
mov
call
(bad)
jl
add
cmps
cmp
jnp
repz
push
hlt
sub
and
pop
mov
adc
aas
and
jns
cmp
dec
push
add
cmp
add
fld
(bad)
and
js
cmp
cdq
lock
cmp
and
test
loop
cmp
mov
mov
or
jbe
add
movs
stos
retf
xor
add
cmc
mov
jnp
add
add
call
push
xchg
hlt
mov
call
sbb
mov
or
and
loop
xchg
or
add
aad
test
add
mov
pusha
sbb
jmp
xor
pop
and
adc
enter
sbb
pushf
movs
sbb
lock
push
sldt
add
in
test
jb
mov
mov
sub
cwde
inc
leave
das
dec
je
(bad)
mov
mov
add
add
aam
add
and
dec
pop
cdq
pop
stos
ja
jge
shl
lds
dec
ret
fwait
jnp
cld
jns
add
add
adc
sbb
pop
add
retf
xchg
and
sub
mov
add
add
add
lock
popa
loope
add
xchg
inc
mov
add
cwde
pop
test
test
fisubr
add
loop
aam
add
not
shl
jp
in
dec
js
jns
inc
add
mov
and
add
add
dec
add
pop
sbb
push
std
rcl
add
jnp
cmps
aaa
add
imul
add
add
cmp
pushf
popf
ret
cmp
stc
cmps
xor
jmp
add
mov
add
add
loope
jle
adc
jmp
inc
rol
sub
xchg
fcomp
cmp
test
(bad)
jmp
loopne
cmp
nop
add
inc
jmp
sbb
mov
xchg
push
ret
loopne
pusha
stc
add
inc
inc
add
add
dec
pop
jne
call
add
jl
movs
ror
push
sbb
push
or
and
add
add
cli
cs
xchg
outs
add
fiadd
push
lahf
jne
and
sub
nop
rcr
inc
add
add
xor
add
sbb
add
rol
mov
cmp
add
add
pop
loopne
inc
ss
push
inc
dec
and
jl
retf
mov
xor
add
add
sub
rcr
inc
movs
add
ins
hlt
cmp
pop
add
pusha
sub
or
in
not
add
mov
rcl
pop
pop
outs
add
aad
and
mov
stos
mov
xchg
add
push
add
outs
or
xor
pop
aam
dec
ficom
jl
jae
mov
adc
loopne
add
add
scas
mov
popa
push
jmp
add
lea
jmp
sub
add
add
add
push
fstp
pusha
jecxz
lea
and
ret
into
mov
dec
mov
call
cmps
inc
jp
in
add
imul
retf
test
push
cs
mov
ret
add
add
cwde
xchg
int3
add
repz
mov
inc
test
popf
and
out
add
add
mov
and
fisttp
xchg
or
dec
add
dec
(bad)
or
or
and
add
add
out
xor
pusha
jno
xchg
adc
add
push
jns
pop
cmp
pop
stos
jo
jmp
push
add
add
inc
(bad)
mov
xchg
repnz
aaa
add
sti
mov
(bad)
popf
and
add
add
mov
adc
pop
fimul
aad
inc
mov
rol
dec
xchg
lock
out
add
add
add
fyl2x
sbb
std
test
mov
add
dec
test
cli
ret
dec
inc
add
add
jge
daa
or
add
add
xchg
add
out
pop
in
push
push
psubd
pop
sbb
add
add
adc
add
js
sti
sub
push
sub
mov
and
jo
mov
add
add
lods
fcom
repnz
and
inc
adc
shl
add
mov
add
cmps
cdq
fwait
or
dec
fstp
popf
add
sbb
cmp
push
inc
fmulp
xor
stos
mov
sahf
jp
add
add
add
xchg
add
mov
lea
inc
dec
sub
add
loopne
xchg
add
add
pop
loop
or
retf
xchg
hlt
dec
add
and
pop
paddw
fild
add
add
lahf
jmp
and
test
inc
in
jl
xchg
mul
xchg
mov
cmp
add
jno
add
add
inc
iret
dec
scas
push
sbb
sub
inc
jbe
(bad)
fsub
xchg
add
stos
cmps
jge
pop
xchg
add
add
out
pop
lock
push
jp
stc
mov
dec
add
push
stos
retf
mov
and
add
add
sahf
rcl
pop
test
shl
adc
cli
repz
imul
sub
add
popa
add
add
jns
cmp
xchg
add
not
add
adc
fmul
add
add
pop
mov
in
jg
push
(bad)
sbb
sub
add
jg
inc
add
add
pop
xlat
cmp
(bad)
jo
jno
push
add
xor
clc
inc
add
jne
ja
jecxz
jb
add
add
add
push
mov
add
mov
mov
lea
movs
add
ss
jns
lock
pop
pop
add
add
call
fucomp
jecxz
add
stos
das
mov
dec
adc
movs
sbb
jg
add
add
stos
mov
mov
std
pop
popa
mov
mov
rcr
add
cmp
mov
add
add
hlt
add
pop
sti
and
sbb
cwde
inc
shr
sub
test
loopne
cmps
and
das
push
add
xchg
add
add
push
cld
jae
add
dec
and
add
out
push
add
rol
add
jno
(bad)
inc
or
int3
or
add
xchg
mov
add
sar
cmp
add
add
test
clc
add
out
xor
(bad)
neg
jne
sti
loopne
lods
or
in
data16
rol
add
add
xchg
push
call
cdq
cmp
inc
adc
js
arpl
repnz
dec
mov
add
add
add
push
xchg
push
dec
jbe
shl
enter
adc
mov
add
add
add
xchg
fimul
push
add
push
jo
std
(bad)
pop
jmp
mov
(bad)
fld
ret
add
inc
in
dec
pop
aad
xor
mov
add
int
mov
ret
sub
add
std
adc
add
inc
in
sub
leave
ret
add
aaa
sub
dec
add
aas
pushf
and
dec
mov
je
add
add
leave
imul
dec
call
sub
aaa
cdq
mov
xchg
dec
cmp
push
fld
add
int3
add
add
add
add
out
add
(bad)
(bad)
les
mov
out
das
mov
push
imul
les
test
ret
enter
adc
jbe
push
inc
pop
mov
add
and
jecxz
in
inc
push
add
add
jl
adc
adc
mov
add
mov
out
sbb
cmp
adc
add
add
mov
pop
cmps
test
jp
add
sub
lahf
das
lock
xchg
add
add
(bad)
test
jnp
push
add
push
pop
stc
nop
add
add
add
jne
(bad)
in
sbb
out
in
out
sbb
adc
adc
jmpw
and
sbb
add
add
add
fcmovnu
fbstp
and
shl
dec
jp
cwde
pusha
popfw
add
popa
int3
or
add
add
es
mov
jae
ds
xor
movs
push
(bad)
push
dec
aas
xchg
test
fstp
add
add
cmp
push
aaa
hlt
add
push
pop
dec
add
xchg
mov
mov
add
add
fidivr
xchg
xor
or
aaa
jae
jmp
fisttp
stos
fiadd
add
add
cmp
mov
sub
mov
cwde
dec
hlt
test
xchg
loop
add
adc
push
outs
add
cwde
mov
add
push
scas
xor
xchg
push
loop
add
jmp
shrd
jp
add
add
jp
mov
add
sbb
nop
add
mov
and
jae
out
add
add
jmp
ror
add
inc
mov
pop
outs
add
stc
mov
cmps
inc
push
imul
sbb
cld
add
jnp
cmp
cmp
add
lods
sub
add
add
ficom
add
adc
repz
in
shr
mov
cmp
add
add
adc
js
xlat
out
push
mov
cmp
mov
push
xor
pop
into
pop
pop
inc
sbb
cmp
fwait
sbb
xchg
xor
or
stos
pop
add
mov
push
adc
add
add
or
ret
jb
adc
adc
mov
or
aas
add
data16
add
add
cmc
xor
add
movs
das
jae
ins
xchg
jne
add
bound
movs
push
and
movs
mov
add
add
inc
add
inc
mov
sar
xchg
add
iret
add
jo
in
clc
retf
inc
pop
add
cmp
add
add
cdq
adc
adc
mov
sub
mov
push
ja
mov
xchg
jg
add
add
add
fdivr
add
mov
cld
dec
and
pop
jp
add
lock
add
xchg
sub
pop
xchg
add
pop
sahf
jo
lock
push
clc
and
in
cmovg
add
add
arpl
pop
rcr
inc
iret
push
jnp
push
push
pop
enter
xchg
xor
inc
jp
add
add
add
(bad)
jo
dec
jns
clc
add
xor
sub
int3
cli
add
test
lods
add
add
add
adc
and
push
add
mov
test
pusha
into
mov
pushf
add
add
mov
cmp
sub
add
pop
push
inc
add
invd
sti
sub
sub
dec
cwde
arpl
add
add
clc
enter
imul
mov
jmp
(bad)
jo
ror
add
add
sub
xor
xchg
mov
iret
pop
or
test
jg
daa
ds
add
add
jl
mov
mov
imul
jge
add
call
push
add
icebp
pop
add
add
or
in
push
in
jmp
(bad)
xor
add
into
pop
cmp
xchg
xor
add
add
hlt
mov
mov
add
loopne
aad
jg
xor
loope
je
push
mov
add
add
in
pusha
(bad)
cmp
sub
adc
stos
sbb
add
lds
cmc
sbb
add
icebp
or
pop
add
stos
xor
lahf
into
dec
aad
add
in
add
add
xchg
xor
add
sub
pop
fmul
pop
pop
push
int3
xor
mov
enter
sub
stc
inc
add
in
fnstsw
jno
ds
and
add
pusha
xor
addr16
add
push
mov
push
jb
sbb
scas
jmp
pusha
adc
sbb
add
pop
cmp
aas
(bad)
add
scas
out
or
cld
jecxz
pop
rcl
jae
sbb
add
add
inc
mov
push
dec
add
das
inc
popf
add
push
fwait
sbb
fadd
scas
add
add
imul
repnz
push
or
into
adc
mov
shl
fsub
out
sbb
retf
xchg
add
add
push
inc
add
cmc
adc
sub
fcomp
(bad)
xor
mov
add
(bad)
pop
adc
inc
add
add
add
pop
aam
scas
and
mov
fiadd
pop
std
add
push
cmps
out
sbb
add
add
pop
xor
push
ret
imul
(bad)
sbb
mov
mov
add
add
add
sub
dec
cwde
mov
test
and
jle
jno
add
sbb
xchg
push
push
cmp
std
and
add
add
cmp
add
mov
bound
mov
ds
nop
dec
add
add
sub
xlat
ror
adc
adc
stc
mov
shr
jp
js
setb
jns
out
add
add
add
push
or
cli
test
mov
call
add
mov
add
add
add
push
adc
mov
imul
push
retf
push
inc
cmps
fadd
enter
add
or
jmp
jno
mov
and
xchg
cmp
pop
gs
cmp
add
repnz
in
or
jae
add
adc
ror
ins
mov
retf
aaa
add
add
mov
jae
mov
adc
sbb
test
je
jno
imul
xor
push
jmp
add
in
psrlq
test
pop
push
popf
add
sbb
ja
shl
add
add
outs
out
add
sub
jbe
loop
es
dec
add
(bad)
clc
scas
add
mov
adc
push
and
or
in
outs
push
je
clc
dec
fld
popf
and
sub
add
jne
add
adc
add
pop
(bad)
repz
jge
xor
rol
out
add
add
and
je
add
scas
ss
jmp
adc
mov
fild
cmps
and
jne
add
add
xor
retf
add
sub
inc
(bad)
cmp
mov
stc
clc
fiadd
aas
push
ret
les
lock
add
push
sbb
fdiv
push
jle
cwde
pop
or
test
adc
jne
add
add
shl
pop
xor
enter
pop
scas
add
lahf
imul
mov
add
add
add
xchg
leave
mov
add
aaa
and
add
adc
sbb
add
add
lods
pop
int
xor
jl
mov
lahf
inc
and
jo
jmp
iret
push
repz
adc
add
add
cli
fiadd
add
stos
sub
mov
data16
cmp
adc
add
add
adc
xlat
adc
push
sbb
(bad)
cmps
test
cmp
pop
add
pop
add
add
add
test
fisttp
in
mov
loopne
inc
push
mov
inc
cmp
stos
add
add
test
shl
jo
inc
aam
sahf
and
jns
or
inc
add
inc
jge
add
add
add
jp
xchg
fild
push
lds
jge
aaa
sbb
aas
or
xor
add
add
ss
or
jo
cmps
jne
and
cmp
aas
jle
fimul
xchg
test
pop
add
add
add
arpl
jecxz
mov
jbe
pop
dec
add
xchg
jg
push
jmp
xor
add
add
mov
mov
inc
mov
data16
add
jmp
cli
add
lods
adc
add
add
outs
fdiv
imul
fnstsw
inc
lahf
mov
dec
push
push
lds
add
ror
outs
pop
xlat
out
(bad)
jge
add
add
push
adc
xchg
inc
cmp
push
jno
push
(bad)
ss
das
xchg
into
push
mov
or
add
add
xchg
xor
add
sahf
call
stos
ja
add
test
xchg
xor
adc
dec
push
and
sti
or
repz
mov
cmp
mov
push
jl
stos
add
rcr
mov
pushf
add
add
add
add
add
cmp
test
sbb
inc
icebp
mov
add
retf
add
xor
and
jnp
cld
and
xchg
pop
add
retf
lea
or
pop
xchg
test
loop
add
add
stc
add
add
out
sahf
jne
cmc
pop
jl
out
pop
pop
add
mov
retf
xor
add
add
dec
add
popa
addr16
out
add
jbe
int3
dec
in
repnz
mov
ds
add
add
push
test
movs
mov
mov
retf
fwait
sub
aaa
cmps
jge
push
mov
add
(bad)
fisubr
add
mov
popa
repnz
jnp
dec
movs
sub
and
mov
add
add
fst
or
hlt
and
add
cmc
je
int
sub
mov
push
in
loopne
mov
or
jno
add
mov
sahf
or
sbb
out
jae
push
xor
add
add
adc
mov
jnp
jno
ret
fisttp
icebp
and
in
jmp
add
or
outs
xchg
xchg
add
add
add
mov
inc
cmp
nop
mov
jae
into
or
add
sub
(bad)
jns
sldt
add
jmp
test
iret
push
add
enter
test
ret
fdivr
and
cmp
mov
add
add
ds
mov
jno
ret
add
data16
test
add
mov
add
lock
add
dec
ja
pop
icebp
cmp
jge
xlat
add
inc
cs
shl
add
add
lock
and
mov
or
or
repnz
pop
sbb
xchg
lock
xor
cmp
jle
dec
retf
int
lock
push
mov
lds
xchg
fild
rcl
mov
add
add
add
lea
xchg
and
fwait
outs
sub
fisubr
add
and
inc
mov
add
inc
mov
mov
dec
daa
jo
mov
rcl
out
sub
pop
(bad)
dec
pop
cld
pop
add
add
jb
xchg
xor
sbb
mov
in
stos
inc
leave
lea
(bad)
repnz
sub
jbe
dec
add
je
test
test
and
sub
inc
add
mov
add
add
add
xor
stc
xchg
pop
pop
push
push
xchg
je
test
cs
dec
mov
or
add
add
add
push
mov
and
dec
adc
pusha
pop
add
jle
cld
out
add
hlt
jbe
xor
add
add
movs
ds
mov
stos
mov
rcr
imul
aas
cmp
cdq
les
in
lods
add
add
xchg
std
inc
aaa
rcr
pop
mov
stos
or
xchg
add
lods
sub
add
dec
add
add
xor
inc
hlt
sbb
adc
add
pop
jb
cmpxchg8b
add
dec
adc
or
add
add
or
inc
retf
aaa
mov
pop
cmps
mov
(bad)
dec
fmul
add
add
pandn
dec
xchg
push
pop
xor
fcmovu
inc
jp
add
adc
add
mov
pop
test
inc
jle
add
dec
rcr
dec
xor
mov
push
sub
cmovbe
repz
xchg
mov
inc
add
enter
and
fiadd
add
dec
add
add
(bad)
hlt
add
push
or
add
ins
xchg
and
dec
add
jecxz
xor
jmp
fs
lods
setbe
lock
adc
jl
pop
lods
adc
test
jmp
push
sti
mov
add
add
std
xchg
pop
retf
push
stos
fdivr
out
fistp
sbb
inc
adc
lods
sub
pop
add
add
jmp
les
(bad)
mov
adc
xchg
and
cmp
sbb
lods
xlat
dec
inc
or
daa
bound
jmp
sub
jl
dec
or
in
dec
or
ss
cld
loope
mov
add
aaa
add
add
or
and
icebp
data16
enter
mov
pusha
xchg
xchg
cli
add
push
inc
test
add
add
sub
sub
dec
pushf
cwde
ds
mov
mov
add
adc
xor
dec
adc
add
ins
add
test
lahf
scas
shr
add
(bad)
xor
lods
inc
repz
dec
xor
add
add
pop
cmp
add
in
rcl
aas
ins
add
out
loopne
cmp
add
add
add
test
or
mov
out
test
inc
movs
add
sbb
add
add
add
dec
mov
shl
rdrand
jge
pusha
add
popa
mov
(bad)
cdq
das
outs
lea
add
add
add
ja
add
repnz
jmp
sub
pop
cld
push
scas
mov
and
mov
add
add
loope
das
dec
adc
lods
(bad)
je
jbe
pop
scas
sbb
jp
cld
adc
xchg
shr
add
add
jmp
cld
fst
jb
mov
pop
jl
movs
xchg
pop
ror
add
add
aad
dec
out
cmps
cmp
cmp
and
stc
adc
add
fild
or
retf
sar
xor
sldt
add
mov
pusha
cdq
ret
idiv
smsw
xor
out
xchg
loope
sub
stos
pop
dec
int
popf
es
cmp
mov
add
call
add
icebp
sbb
dec
test
xor
loop
inc
jmp
sub
add
xchg
adc
dec
push
adc
add
pop
xor
fwait
add
add
add
inc
xchg
ja
add
movs
dec
stos
rcl
and
mov
loop
popf
(bad)
int
jb
pop
sub
add
add
inc
hlt
les
sar
xchg
jge
stc
pop
mov
sub
push
fmul
sbb
add
cmc
jbe
neg
push
shr
mov
cmps
loope
pop
sub
fcmovnu
cmp
add
add
or
mov
sbb
sti
je
(bad)
dec
push
popf
dec
aad
adc
add
add
pop
stos
mov
pop
(bad)
pop
sub
or
pop
add
mov
pop
xor
add
add
addr16
mov
fisubr
dec
adc
adc
mov
xor
adc
test
iret
pop
out
cmp
jbe
fwait
push
jle
in
mov
mov
xor
add
add
cmp
add
dec
in
pusha
rcl
out
add
aad
jle
add
push
popf
lods
das
cmps
pop
add
add
lods
idiv
pop
sbb
sahf
inc
push
mov
inc
loopne
dec
push
call
push
or
clc
int
add
add
(bad)
mov
push
pop
movs
retf
sub
aad
scas
push
add
jg
mov
add
add
add
stos
push
and
jecxz
jmp
or
cmp
add
dec
add
into
sahf
mov
lock
test
add
add
xchg
imul
ins
rcr
out
dec
add
pop
mov
jl
add
add
icebp
popa
cmps
push
xchg
push
loopne
jne
fadd
adc
mov
loope
push
push
in
add
add
add
lea
add
ror
add
out
leave
push
pop
aam
mov
add
jnp
shr
or
add
aaa
add
test
or
xchg
mov
pop
nop
(bad)
loop
add
loopne
mov
add
add
fnstsw
add
push
sub
dec
xor
xlat
jo
inc
mov
fcomp
jae
cwde
add
add
push
loop
dec
mov
scas
sub
cmp
test
push
add
bound
add
add
test
add
lea
sbb
add
dec
push
neg
inc
pop
add
xchg
cmp
add
das
mov
test
sub
int
add
loop
mov
and
fwait
add
add
cmp
fsubr
jb
add
scas
retf
mov
push
nop
add
inc
mov
pop
popa
add
add
and
xlat
test
and
pop
inc
rcl
and
(bad)
add
test
mov
in
add
add
xor
bound
aad
js
cmc
add
clc
dec
push
add
sbb
rol
mov
add
add
imul
sub
movs
call
ficomp
(bad)
cli
add
add
add
add
sti
add
daa
(bad)
or
sub
test
mov
cdq
js
clc
dec
out
add
add
add
outs
pop
sbb
fistp
sbb
iret
add
shl
repnz
mov
rol
add
add
out
jb
dec
mov
jge
push
sub
add
add
xchg
or
add
add
add
cmp
add
push
les
pop
fcom
add
add
add
mov
and
jo
nop
jecxz
in
movs
or
movs
jnp
add
cmp
xchg
fwait
popf
inc
xchg
add
add
jmp
mov
add
jnp
add
add
mov
div
hlt
xchg
push
inc
stos
ficomp
add
add
jnp
(bad)
push
jno
loop
mov
call
jg
aas
add
aad
inc
mov
add
addr16
pop
iret
dec
pop
add
ret
jns
mov
jne
add
mov
add
add
fsubr
stos
test
dec
(bad)
sti
push
inc
clc
jne
sar
xor
mov
out
pop
mov
add
add
lods
add
mov
hlt
push
add
sub
(bad)
imul
int
jle
pop
fmul
cmc
sub
add
in
dec
and
fild
retf
lods
cwde
sbb
cmp
rcr
pop
xlat
je
not
add
add
mov
std
enter
add
mov
add
out
xor
cmps
jb
add
add
add
adc
inc
lahf
sub
(bad)
add
arpl
mov
push
add
test
xor
xor
or
add
add
movs
ror
cmp
cld
add
fadd
sub
js
das
mov
es
add
pop
add
(bad)
or
add
ins
adc
sbb
jmp
out
iret
lods
add
add
popf
sbb
imul
lock
push
jecxz
and
mov
add
(bad)
aam
int
hlt
je
add
add
add
std
cld
or
inc
shl
clc
mov
test
cmp
xor
mov
add
inc
and
push
xchg
and
mov
add
sbb
in
add
add
add
xor
mov
dec
push
int3
in
push
sbb
add
call
out
addr16
add
add
push
scas
neg
sbb
movs
sub
add
lock
and
std
idiv
stc
add
add
jge
add
mov
add
stos
daa
sar
adc
add
add
pop
fwait
in
lahf
cmp
cmp
dec
add
pop
sahf
adc
inc
mov
add
xor
mov
add
xor
jmp
and
ror
les
add
add
dec
add
sbb
sbb
add
or
jns
add
imul
mov
nop
add
push
test
js
stos
jb
int3
push
add
repz
inc
cmp
add
add
cwde
add
ror
aad
clc
adc
add
rcl
jl
jecxz
xchg
xchg
(bad)
sti
test
add
and
lods
mov
xchg
and
out
add
sub
sbb
mov
add
add
mov
mov
jno
lods
inc
jg
add
(bad)
jns
fnstsw
add
add
add
inc
push
movs
pop
jecxz
scas
and
cmp
movs
or
cmp
xchg
add
add
call
add
add
bound
loop
cmps
pop
jmp
pop
adc
xchg
add
and
add
imul
aad
jnp
mov
sub
pop
hlt
pop
call
push
inc
sbb
add
jb
shl
push
add
add
adc
xchg
adc
addr16
dec
add
pop
jns
les
adc
sbb
test
mov
add
add
add
sbb
dec
xchg
in
add
shr
pop
lahf
xor
jns
add
pop
lds
test
add
add
popf
adc
out
xchg
sub
sbb
add
or
mov
add
add
add
movs
out
cld
xchg
aam
add
or
or
mov
leave
mov
xchg
stc
out
add
add
adc
push
lea
movs
add
sahf
jg
das
push
cmp
mov
add
add
xchg
mov
(bad)
or
retf
or
dec
add
and
or
or
test
out
add
add
daa
jbe
scas
sbb
pusha
cmps
push
jns
stos
jg
push
sub
rol
call
mov
dec
add
add
push
fldcw
ins
add
hlt
lahf
out
sub
cmp
aas
inc
neg
cs
push
sbb
ja
ins
sti
add
lock
add
add
add
mov
fsub
mov
arpl
jg
stc
loop
loope
icebp
add
fsubr
test
nop
mov
add
add
add
lea
dec
jge
add
(bad)
not
or
pop
scas
dec
sub
dec
add
add
ins
hlt
add
jmp
adc
add
jbe
fnstcw
xor
scas
pusha
jp
add
pop
aaa
dec
jp
add
add
jno
jo
pop
inc
adc
jnp
jne
scas
dec
push
call
and
push
leave
in
add
add
pop
scas
test
pushf
adc
sub
sub
ins
jecxz
nop
inc
fwait
loop
(bad)
or
fcom
add
add
mov
lds
xor
test
adc
(bad)
cmp
dec
push
in
lahf
rol
add
add
mov
pushf
int3
rol
xchg
add
add
sbb
cld
inc
scas
add
cmp
jmp
push
push
adc
adc
nop
cld
pusha
add
arpl
mov
jle
add
add
dec
pop
ficomp
mov
add
and
das
add
jg
hlt
add
add
pop
or
cs
(bad)
in
std
add
movs
adc
mov
enter
add
cmp
add
idiv
xor
inc
jne
pop
xchg
adc
daa
dec
es
stos
add
add
add
add
pushf
cmp
cmp
jl
das
in
jecxz
inc
shl
and
pop
push
rol
add
sub
add
into
xchg
mov
add
(bad)
jecxz
or
add
jb
add
add
pop
pop
inc
ja
adc
push
inc
xor
sub
fdivr
xchg
add
mov
clc
aad
lea
add
add
mov
jle
popf
add
scas
mov
enter
adc
frstor
nop
and
add
add
push
add
push
inc
add
data16
out
retf
loopne
add
sbb
add
add
add
iret
arpl
xchg
addr16
clc
jns
and
push
inc
cmp
cld
add
aad
cmovp
add
add
mov
add
sti
mov
ds
repz
mov
clc
test
mov
lds
repnz
add
add
add
stc
ret
in
mov
push
int3
push
les
add
cdq
xlat
pop
xchg
dec
arpl
add
retf
loopne
add
add
out
pop
push
pop
popa
dec
dec
cmc
and
add
call
add
daa
je
pop
shl
add
add
add
ss
in
mov
mov
repnz
jle
inc
sldt
cmp
add
add
pop
add
mov
pop
push
add
aam
mov
fdiv
pop
addr16
add
in
popf
and
jae
add
add
pop
js
mov
add
cld
jl
dec
push
stc
add
gs
add
fild
add
add
or
and
add
(bad)
test
jbe
pop
cs
push
sub
add
push
inc
xlat
jbe
in
add
add
add
push
and
imul
sub
mov
cmp
xor
add
add
scas
(bad)
cld
out
push
push
xchg
sub
fadd
mov
sahf
sub
add
add
es
hlt
fimul
push
addr16
test
loop
inc
mov
mov
rol
jg
lods
sbb
add
add
sbb
jb
es
adc
mov
rcr
add
sbb
mov
mov
add
push
sbb
mov
cmp
jae
inc
add
int
jl
add
add
sub
add
leave
dec
cmp
mov
cmp
pop
dec
das
push
jno
mov
cmps
clc
mov
add
add
inc
push
out
push
xor
add
ins
sub
push
cwde
(bad)
neg
fild
inc
pop
test
mov
xchg
arpl
mov
imul
iret
aaa
clc
add
cmp
sahf
push
je
popf
adc
pop
pop
push
add
add
xchg
adc
int
add
xor
lods
xor
xchg
mov
pop
inc
cld
jnp
pop
pop
cs
mov
stc
lock
add
lods
mov
and
pop
in
out
add
cmp
mov
xchg
repnz
jo
add
add
pop
fiadd
add
ja
stc
add
leave
cld
test
inc
aaa
push
test
test
push
mov
add
add
pop
bound
add
cmp
dec
mov
dec
(bad)
add
pop
xchg
lea
add
add
mov
es
loope
sbb
dec
or
xchg
xor
jno
add
add
out
cmp
mov
mov
popa
scas
push
and
add
add
cmp
pusha
bound
mov
mov
ret
pop
int
add
sbb
into
ins
add
add
sub
jne
icebp
aad
jp
push
std
adc
loopne
(bad)
mov
fdivr
arpl
stos
or
jg
add
add
push
test
mov
ds
add
sahf
cli
fimul
jns
fcomp
sbb
add
cmps
jle
test
sbb
rol
mov
out
mov
outs
add
add
pop
pop
retf
pop
imul
xlat
add
push
sub
and
cmps
add
add
sar
add
add
sub
outs
inc
inc
mov
add
scas
jns
out
pop
jle
xor
in
adc
cs
add
fdiv
push
sar
and
repnz
add
push
mov
fdivr
in
add
add
out
cmps
inc
fnstsw
mul
ja
add
movs
out
rol
adc
jle
jmp
or
add
add
ffreep
xchg
sub
xlat
dec
cmp
lea
mov
dec
mov
xor
sub
jl
add
add
add
jg
leave
gs
add
shl
xor
pop
jbe
add
dec
mov
push
mov
add
add
mov
xchg
adc
dec
push
sub
push
dec
inc
cwde
push
add
add
arpl
add
add
fist
add
rcl
mov
scas
push
mov
in
call
add
add
shl
sub
add
ss
sar
loope
(bad)
mov
inc
clc
jmp
xor
add
add
test
sbb
cs
and
sub
xchg
cdq
das
rol
add
add
cmp
mov
adc
pop
scas
add
push
pop
cmp
push
and
cmps
add
aaa
jge
add
add
imul
nop
ret
add
mov
xchg
jns
or
add
add
nop
stos
push
pushf
cmps
xchg
add
repnz
mov
fwait
repz
movs
lahf
pop
mov
int3
mov
adc
das
retf
add
popa
mov
(bad)
xor
fbstp
or
je
outs
mov
add
add
add
icebp
daa
call
xchg
cmp
pop
adc
xchg
dec
add
add
add
push
retf
sbb
sbb
jp
add
(bad)
dec
lahf
or
add
out
mov
sbb
add
add
pop
jp
dec
mov
je
fld
mov
push
stos
pop
jecxz
es
mov
add
add
push
push
int3
xchg
cmp
or
stos
arpl
push
in
mov
pop
aas
cmp
lock
add
push
cmps
cmp
push
shl
rcr
and
jp
aam
adc
add
add
ds
add
mov
or
rcr
mov
mov
lods
mov
mov
jle
arpl
add
inc
fiadd
xor
in
xor
test
add
jbe
ret
add
and
aam
add
cmc
push
sbb
call
push
lods
push
mov
lea
add
add
mov
inc
repnz
xchg
in
sbb
or
imul
pop
add
add
add
shr
pop
add
mov
adc
dec
add
sbb
das
add
add
cmps
cdq
nop
cmp
scas
out
add
jae
dec
inc
cmp
push
ss
fadd
mov
or
mov
add
retf
mov
xchg
push
shl
mov
adc
mov
inc
add
add
movntq
out
movs
adc
and
mov
add
mov
mov
adc
ret
int3
outs
add
add
lahf
call
fs
adc
in
add
jmp
sahf
das
add
add
dec
pop
test
jns
cli
(bad)
xchg
add
dec
pop
shr
leave
push
loopne
mov
mov
stos
lea
mov
ret
add
add
add
sub
add
sbb
add
jg
sti
(bad)
jl
add
test
in
add
add
sbb
bound
mov
add
pop
or
fdiv
sbb
mov
pop
out
add
add
add
add
or
inc
enter
jge
dec
(bad)
cmp
in
add
(bad)
fadd
cmp
and
sti
pop
pop
mov
lods
int
add
push
mov
push
cmc
and
fmul
arpl
adc
fld
add
add
push
sub
sbb
dec
lock
push
add
fincstp
mov
or
jp
scas
add
ja
add
add
arpl
dec
mov
aad
mul
ins
add
jecxz
or
dec
fdivr
repnz
add
add
add
or
in
adc
mov
stc
mov
and
add
mov
cdq
jmp
cmp
push
aaa
into
mov
and
and
cld
fiadd
jo
rcl
pusha
mov
popf
aam
add
push
pop
mov
cmp
je
call
out
pop
add
push
cs
add
add
enter
scas
mov
mov
add
daa
sbb
jae
clc
pop
add
add
mov
inc
pop
jb
packsswb
fs
das
clc
enter
pop
add
xor
or
jmp
add
add
add
mov
inc
sbb
clc
arpl
aaa
jo
mov
hlt
dec
icebp
out
pop
jle
stc
add
add
shl
sub
pop
popf
cmc
cld
fiadd
mov
mov
xchg
add
push
cdq
enter
add
add
add
jno
xor
in
call
add
inc
mov
(bad)
scas
loop
add
add
xor
je
add
mov
imul
sbb
and
out
ret
pop
fs
call
add
xchg
rol
(bad)
je
jno
or
or
xchg
mov
pop
mov
ins
add
in
scas
retf
add
xor
cmp
cli
xchg
rol
xchg
loop
cmps
fnstsw
fnstcw
add
xor
std
test
mov
pop
jge
inc
arpl
add
addr16
dec
add
fistp
mov
add
add
test
sbb
rol
lds
mov
cs
out
sbb
cmps
cmp
daa
pop
push
mov
add
cmp
mov
jno
mov
and
loope
cmps
std
add
ds
adc
add
add
cmp
xchg
inc
and
les
pop
cmp
inc
pusha
mov
nop
or
hlt
xor
pushw
add
add
mov
add
and
push
mov
cmc
dec
and
adc
jg
add
add
hlt
cmp
inc
in
mov
sub
mov
enter
sub
cwde
mov
sub
aam
add
add
mov
in
bound
sub
mov
pop
pop
dec
cwde
das
loopne
adc
lock
add
add
or
xor
sbb
aaa
data16
jns
(bad)
je
push
inc
cmp
(bad)
sub
add
add
add
mov
pusha
add
sahf
xor
cmp
ja
adc
in
push
add
add
adc
inc
cmp
sahf
or
mov
test
add
xchg
fsub
add
add
add
or
or
in
stos
popa
or
dec
push
cmp
push
aas
in
push
fidivr
mov
jmp
add
add
add
inc
lods
sub
int
out
and
leave
ins
mov
xchg
push
mov
arpl
adc
add
add
pop
xchg
or
test
mov
repnz
add
gs
push
ret
adc
jb
mov
loope
mov
jl
ins
fsubr
jne
add
in
push
add
add
add
sbb
out
and
sub
cmp
add
jb
or
int
popa
add
add
leave
lods
jmp
mov
push
and
add
jne
adc
and
add
add
add
imul
sub
dec
ret
lods
(bad)
add
lock
fld
mov
sub
add
add
sub
sbb
js
dec
add
jno
rol
loopne
add
movs
mov
add
add
add
lock
mov
test
arpl
add
mov
test
jp
jb
add
add
cmp
sub
in
mov
mov
mov
or
into
jae
add
add
add
js
cmp
icebp
sub
ret
jmp
pop
std
pop
shl
add
add
pop
mov
jae
add
xchg
jne
mov
and
add
adc
mov
add
enter
add
or
bound
sub
xor
push
or
popf
cmp
add
add
fnstcw
push
mul
add
mov
or
call
add
scas
(bad)
push
sar
cwde
add
loopne
lods
xchg
and
in
cmc
add
jo
pop
test
and
add
add
add
push
les
and
and
add
cmp
add
inc
add
add
pop
clc
push
mov
sbb
adc
rcl
add
or
push
test
add
push
in
dec
ret
push
cmps
pop
sbb
mov
cli
or
sub
nop
inc
push
cwde
sub
add
add
add
rcr
mov
in
jns
xor
jns
mov
cmp
add
cmc
sbb
bound
mov
jg
jne
stc
(bad)
mov
push
jmp
sub
add
add
add
ret
imul
add
mov
inc
add
cld
mov
jmp
pop
test
inc
jno
add
add
or
inc
sahf
cmp
add
inc
mov
retf
xchg
add
add
xor
(bad)
jle
adc
ret
pop
push
mov
sbb
push
clc
mov
cmovae
push
or
add
add
cwde
repz
mov
add
adc
add
xchg
mov
cmc
mov
out
inc
call
add
mov
hlt
xchg
repz
test
sbb
pop
fucomip
mov
add
cli
hlt
add
shr
add
push
jp
lds
add
sar
add
push
sbb
add
add
addr16
cmps
add
push
loopne
add
sbb
lock
mov
loopne
push
add
add
in
repnz
jnp
push
mov
sub
cdq
sbb
vunpckhps
add
add
in
xchg
push
rcr
pop
xchg
xor
jmp
retf
rol
mov
outs
add
add
add
int
fdivr
or
xor
je
push
jae
and
inc
inc
movs
and
add
add
inc
loopne
aaa
outs
neg
in
arpl
stc
fdiv
xchg
sub
add
add
xchg
add
adc
or
adc
hlt
xor
inc
sar
rol
add
add
in
loope
sbb
imul
adc
and
cmps
mov
mov
add
add
dec
addr16
hlt
add
xchg
mov
xor
mov
add
mov
add
add
fwait
xchg
add
mov
add
lods
jmp
jle
jo
popa
jbe
add
add
add
je
cmp
sub
dec
mov
gs
out
out
(bad)
aas
fwait
repnz
sbb
add
sar
inc
xchg
xchg
push
je
jne
add
inc
call
shl
add
pop
ds
arpl
retf
aam
daa
sub
add
sar
cld
mov
xchg
out
cvtdq2ps
add
add
scas
scas
(bad)
outs
imul
cmp
push
inc
pop
mov
cmp
add
add
and
js
cmps
xchg
and
xor
mov
cs
mov
add
test
add
add
sub
jo
jb
add
pop
sbb
mov
(bad)
lock
jns
pop
inc
dec
add
add
fstp
inc
adc
push
add
jmp
add
daa
cmp
add
mov
add
mov
cmps
add
dec
stos
push
sub
in
add
xchg
ja
mov
jae
add
into
and
add
add
les
std
dec
add
(bad)
addr16
cwde
je
add
sbb
jp
add
add
add
and
str
popa
je
add
pop
add
sub
in
call
add
add
fstp
(bad)
pop
xchg
rcl
cmps
pusha
dec
test
add
sub
loopne
add
mov
add
bound
add
shr
add
test
cmp
pop
popf
imul
add
in
jecxz
add
add
(bad)
loopne
add
(bad)
mov
push
add
jl
pop
jo
and
add
add
add
aam
ins
add
xor
mov
(bad)
bound
fcomp
sar
stos
add
add
push
xchg
loopne
cmp
ins
fldcw
cmps
mov
fadd
xor
pop
push
ret
ror
loope
int3
add
add
fdiv
dec
jl
add
arpl
push
fxtract
pop
or
repnz
pusha
lock
xchg
sbb
add
repz
xlat
inc
repnz
aaa
cmp
and
and
out
in
jecxz
jl
sar
add
add
pop
sub
push
inc
add
pushf
jl
pop
dec
call
enter
add
add
add
test
fld
inc
add
inc
ror
ds
sub
xchg
add
add
add
push
or
sti
jns
add
icebp
retf
mov
in
pushf
data16
add
add
add
and
jmp
(bad)
push
push
cli
call
rol
adc
mul
inc
mov
add
call
fild
and
inc
and
mov
add
add
add
push
add
repnz
(bad)
adc
and
mov
mov
mov
add
add
bound
(bad)
adc
push
stos
hlt
lea
dec
dec
push
mov
xchg
push
dec
add
add
clc
xchg
add
rcl
stos
inc
test
cmp
psubw
jecxz
sub
xor
xchg
add
sub
add
add
iret
jb
std
add
sub
(bad)
cmp
ins
push
out
cs
loopne
xchg
loop
add
add
out
ret
fbstp
mov
shr
add
aaa
fcmovbe
jg
adc
add
add
dec
cmc
push
or
push
push
xchg
lock
pop
jle
add
test
add
add
add
mov
pop
aad
mov
inc
cwde
adc
div
es
add
add
int
adc
xlat
add
pop
cmp
add
jae
mov
push
cmp
add
sbb
xor
push
xchg
repnz
cdq
add
pop
cmps
mov
add
add
add
push
shr
jge
cdq
pop
add
or
rol
mov
xchg
pop
bound
add
add
sub
aaa
pop
xchg
fcomp
sbb
and
cmp
cmp
cmp
add
add
add
arpl
xchg
sbb
gs
add
mov
sub
xchg
shr
adc
add
add
xor
bsr
enter
push
lds
jl
add
in
inc
jmp
add
add
inc
or
pusha
cli
dec
call
push
loop
aaa
add
mov
sub
add
add
or
icebp
fwait
mov
jno
add
(bad)
jge
mov
sbb
xchg
sbb
arpl
add
add
push
add
jbe
or
stos
dec
add
repz
xchg
add
add
add
dec
and
gs
das
mov
imul
fidivr
jmp
mov
out
mov
add
adc
push
add
pop
push
hlt
(bad)
push
inc
hlt
cmc
mov
add
stc
ret
ins
enter
sub
add
in
mov
push
sub
add
add
pop
xlat
add
data16
mov
add
add
push
das
cmp
push
add
mov
sub
pop
mov
push
mov
add
add
in
lahf
xchg
and
mov
mov
cmp
jae
or
mov
icebp
test
add
add
fdiv
hlt
pop
aas
mov
clc
ret
cmp
pusha
mov
mov
sbb
sub
imul
inc
xlat
pusha
add
add
and
jne
add
addr16
push
add
xchg
adc
mov
jb
or
inc
nop
xlat
add
add
mov
pop
rcr
add
xor
iret
add
js
pop
je
pop
adc
movs
retf
add
add
loope
repz
mov
(bad)
stos
mov
fwait
mov
pop
add
call
add
mov
repz
dec
test
inc
add
mov
jg
xor
mov
movs
and
push
add
add
ret
adc
dec
cmp
test
push
lock
loopne
pop
das
ins
out
cld
cli
jecxz
or
mov
add
(bad)
mov
mov
nop
add
fs
aaa
jmp
sub
add
add
mov
add
sbb
add
add
inc
jo
mov
cmp
jne
and
pop
mov
aaa
imul
movs
add
add
in
add
or
cmp
mov
jge
add
cdq
dec
lahf
in
in
out
add
int
add
add
popa
shl
mov
loopne
les
cmps
push
ret
test
(bad)
cld
mov
add
mov
dec
jp
add
add
or
pop
and
xor
loop
in
pop
mov
test
imul
fwait
dec
in
push
add
add
add
dec
add
mov
(bad)
mov
pop
out
(bad)
sub
dec
mov
add
add
add
dec
rcl
jg
adc
add
ret
repz
call
or
cmp
js
out
cmp
pop
jmp
fadd
jo
mov
push
add
repnz
in
jge
sbb
mov
add
add
add
(bad)
cli
aad
add
sbb
jno
pop
push
add
cmp
add
ret
add
cmp
jbe
inc
out
iret
sub
add
or
mov
push
std
add
add
add
(bad)
movs
sub
psrlq
pushf
xchg
dec
jnp
call
clc
dec
jg
and
or
add
pop
jbe
shl
sub
popa
xor
inc
dec
lods
jmp
add
add
add
and
fcom
xchg
out
pop
xor
cmp
sar
cmc
and
enter
add
add
push
jl
out
ss
add
mov
add
push
loopne
popf
add
fsubr
sub
mov
add
pusha
retf
inc
or
fcmovbe
push
shl
loop
das
cmps
sbb
sub
add
add
xor
inc
adc
jns
cmp
add
out
lea
push
jecxz
adc
adc
add
inc
add
add
lds
out
dec
mov
xchg
loopne
idiv
pop
sbb
js
dec
pop
add
cli
ja
add
add
sbb
add
cmp
cmps
mov
xor
sti
cs
push
call
add
inc
adc
jge
adc
shr
into
and
or
add
and
sbb
cli
push
pusha
fwait
mov
loop
add
add
jmp
outs
aas
js
inc
sub
xchg
mov
mov
hlt
xor
mov
cmp
add
add
movs
adc
push
jae
addr16
inc
sbb
pop
movs
inc
loop
sub
add
cmps
imul
add
inc
test
and
ins
in
push
sbb
cmp
stos
inc
cdq
aaa
add
cmp
les
das
add
add
add
dec
pusha
ins
add
loopne
lock
jecxz
inc
pop
outs
in
int3
push
pop
mov
add
add
add
dec
mov
dec
dec
clc
retf
daa
jmp
cwde
nop
jns
inc
std
add
push
add
outs
jnp
jmp
sbb
jmp
jle
jnp
stc
hlt
xchg
adc
retf
add
fidiv
mov
in
jg
ret
add
leave
cmp
adc
mov
sbb
add
popa
mov
xor
cwde
test
add
adc
adc
fadd
cmp
out
add
add
leave
cwde
call
imul
rcl
js
add
jge
dec
add
scas
mov
add
add
add
jl
xor
and
add
into
call
repnz
push
sahf
dec
add
add
sbb
dec
lods
sub
add
ffreep
std
add
mov
add
lds
add
add
jbe
sbb
por
push
(bad)
xchg
push
repz
add
xchg
fiadd
mov
sbb
test
add
sub
sbb
push
add
and
fild
ret
jg
mov
(bad)
repnz
stc
push
out
cmp
add
add
push
push
stos
add
jg
cmc
add
pop
sub
mov
mov
rcl
add
add
xchg
pop
fist
add
jno
mov
push
sbb
adc
lds
lock
xchg
lock
mov
sbb
add
add
ret
imul
mov
jne
sbb
jmp
fdivr
jns
loope
aad
je
test
inc
sbb
add
add
add
inc
push
mov
mov
pop
push
add
rol
mov
mov
add
iret
mov
jle
fldpi
int
jmp
add
daa
dec
scas
pop
(bad)
mov
mov
add
sub
dec
mov
xor
test
add
ficom
add
push
add
add
ret
mov
(bad)
cdq
gs
test
aad
add
mov
push
ret
add
add
and
push
mov
cli
mov
call
jg
jb
mov
test
sbb
mov
lods
dec
scas
add
add
push
dec
into
inc
add
dec
pop
add
sti
jmp
jnp
xor
fnstenv
add
add
add
push
in
gs
mov
add
pop
rcl
int3
cli
rcr
add
add
add
lds
stc
in
pop
stos
pusha
mov
xor
push
(bad)
(bad)
sub
push
and
sub
add
add
add
dec
shl
ds
or
pop
jle
xchg
and
ins
fdivr
out
repnz
add
add
add
or
sbb
sbb
lods
xchg
mov
int3
dec
test
inc
clc
leave
sti
sub
imul
pop
mov
adc
loop
add
aad
lock
cmp
ret
int
into
push
movs
add
add
add
lods
dec
outs
jmp
movs
xor
fld
mov
adc
inc
out
push
lock
add
ins
push
(bad)
dec
mov
out
ds
test
(bad)
lea
ret
mov
inc
push
add
nop
je
into
xchg
mov
or
xor
mov
fimul
out
add
sbb
mov
add
push
popf
iret
out
sub
sbb
pop
or
push
jmp
ins
mul
add
add
test
addr16
or
test
inc
ins
repz
push
mov
xchg
inc
add
add
add
mov
add
jne
xor
sar
xchg
adc
stos
pop
push
lea
add
add
mov
or
add
jne
enter
or
push
mov
fs
add
in
mov
add
add
iret
loopne
mov
add
ja
pop
loop
cmp
or
sbb
mov
add
add
mov
or
sub
pop
add
mov
mov
in
and
xor
add
add
out
jl
add
mov
and
xchg
retf
pop
xor
add
retf
sbb
inc
call
add
rcl
cdq
mov
cli
mov
adc
ret
add
dec
rol
add
add
add
dec
rcr
pop
int
sbb
es
stos
pop
enter
fidivr
add
add
push
inc
das
pop
sub
leave
add
arpl
sahf
mov
add
cmc
pop
pushf
lods
xchg
(bad)
rol
add
add
stc
fs
xor
mov
sub
sbb
add
scas
cmp
aad
test
jo
add
add
out
stos
jb
iret
fs
add
sub
xor
cwde
test
pop
cdq
mov
add
test
dec
add
add
and
pop
fisttp
push
sbb
dec
(bad)
fsub
push
sbb
in
mov
add
add
add
prefetch
or
jae
mov
pop
mov
daa
loop
pop
(bad)
dec
imul
mov
add
add
add
add
lea
daa
pop
mov
cmp
imul
mov
dec
mov
add
add
jl
icebp
dec
loopne
add
push
mov
pop
out
in
add
(bad)
xchg
add
add
inc
pop
lods
xchg
inc
xchg
ret
xor
jp
adc
inc
push
mov
cmp
fsubr
mov
loope
add
add
xor
add
sbb
mov
mov
verw
clc
pusha
push
dec
add
add
or
aam
sahf
pop
xor
push
add
clc
(bad)
in
retf
cmp
xor
and
add
add
inc
pop
or
add
ds
cld
lods
cs
iret
dec
bound
jno
ins
add
add
fadd
xor
jo
nop
mul
sti
add
cmp
mov
sbb
cdq
lds
fist
add
add
add
ins
clc
iret
pcmpeqd
adc
jmp
arpl
inc
sbb
mov
mov
add
imul
test
add
add
fld
xor
xor
jmp
or
cli
popa
add
mov
add
add
add
loopne
pop
sar
enter
sbb
cmc
dec
pop
mov
fcmovb
xor
cwde
bound
add
add
add
ror
push
ja
xchg
jle
add
mov
fadd
push
and
xor
add
repz
add
add
jne
test
fs
pop
cmp
mov
icebp
adc
call
mov
cmps
and
ficomp
add
add
add
jo
cmp
dec
int3
fdivrp
inc
pop
push
mov
jge
lea
test
shl
mov
add
add
ss
pop
adc
cmp
cmps
cmp
ds
sub
xchg
inc
inc
mov
nop
aad
mov
add
add
or
add
push
xlat
int3
pop
in
push
movs
aas
adc
pop
add
inc
add
in
xor
je
hlt
les
xor
add
push
sub
add
sbb
enter
push
cwde
xor
and
xchg
xor
retf
adc
fadd
ins
add
add
and
popa
(bad)
or
or
dec
aaa
pop
mov
jge
aas
das
push
enter
retf
add
add
aas
call
ror
push
mov
mov
xor
aas
mov
add
add
sub
call
icebp
mov
ficom
add
mov
add
add
add
aam
push
add
add
or
sbb
dec
adc
xchg
fadd
retf
add
add
pop
jle
jecxz
inc
(bad)
xlat
add
lock
repz
add
push
aad
add
add
add
jmp
andps
out
adc
xchg
pop
int
xchg
add
xchg
and
xchg
add
add
xchg
fnstcw
invd
xchg
sbb
addr16
pusha
aaa
pop
xor
adc
(bad)
call
add
add
or
mov
inc
popf
ret
shr
(bad)
dec
or
push
mov
adc
pop
ret
push
add
js
(bad)
cmc
outs
nop
add
mov
int
add
add
mov
xor
mov
jae
lds
sbb
cs
mov
(bad)
pop
pop
ret
sti
add
add
bound
push
lock
dec
or
xchg
push
jle
sbb
cmp
out
mov
out
sub
push
hlt
hlt
fdivr
add
add
add
shr
rol
inc
mov
add
or
stos
mov
loope
mov
add
retf
mov
data16
aaa
mov
add
adc
add
aas
sbb
jg
rol
add
add
add
and
add
mov
or
jno
mov
movs
aam
imul
movs
sbb
add
sbb
sbb
jp
shl
add
push
xlat
adc
add
add
ja
add
int3
fldcw
and
ins
add
xor
mov
add
dec
sar
add
add
add
adc
mov
add
cmp
pop
mov
and
dec
cs
xchg
pop
jno
imul
add
add
cmp
cdq
inc
sbb
dec
adc
(bad)
push
(bad)
rcr
add
add
lods
repz
je
add
ret
fidivr
add
mov
add
add
jp
sub
add
(bad)
pop
xchg
push
push
repz
dec
cmp
add
ret
cmp
add
or
jmp
ficom
add
add
cmps
call
nop
mov
mov
mov
add
sbb
sahf
pop
es
(bad)
push
add
adc
add
sti
outs
cld
mov
loopne
sbb
out
rol
add
mov
jbe
add
les
js
mov
inc
lds
nop
fwait
(bad)
xchg
sub
add
add
add
outs
push
pop
js
loopne
push
je
mov
cmp
ror
push
add
stos
xor
clc
or
and
pop
pop
xchg
jp
add
ja
mov
and
iret
aam
sbb
mov
mov
cmp
add
(bad)
aas
or
and
dec
gs
pusha
mov
adc
add
add
stos
add
cmp
pushf
inc
repnz
out
into
mov
outs
(bad)
push
cmp
xor
add
mov
pop
add
imul
pop
scas
or
sbb
add
cmps
dec
fcomp
arpl
int
add
pop
dec
ds
popa
shr
loopne
ja
add
sub
add
xchg
adc
add
dec
mov
pop
fisubr
xchg
test
nop
inc
pop
add
stos
push
retf
add
add
pop
cmp
jle
xlat
xchg
dec
jmp
jecxz
cmp
das
mov
pop
jg
sub
outs
nop
push
add
add
push
xor
push
push
outs
push
sbb
add
pop
stos
mov
sar
nop
inc
jmp
stc
xchg
add
adc
out
hlt
pop
stos
cmps
inc
dec
cmc
pop
add
jmp
jecxz
add
add
int
jnp
cmp
mov
rol
fdivr
cwde
add
add
add
add
int3
push
enter
and
jns
xor
add
cmp
add
add
pop
dec
and
jmp
xor
mov
dec
inc
(bad)
xlat
mov
jns
push
icebp
dec
add
add
mov
push
lock
hlt
or
add
cmc
jle
aas
add
leave
xor
add
add
mov
(bad)
dec
mov
mov
mov
jle
add
sub
add
add
sbb
sbb
adc
loop
or
adc
hlt
daa
ja
jge
sar
xor
cmps
add
add
or
sbb
and
add
mov
nop
xchg
scas
inc
add
cmp
add
and
sti
js
add
add
add
mul
(bad)
mov
sub
sub
adc
lds
jmp
add
cmp
or
and
popa
and
push
xor
add
xor
inc
test
rcl
call
xchg
ins
xor
sub
es
xchg
push
xchg
shr
add
jne
push
test
div
add
add
rol
mov
adc
xchg
push
mov
pop
xor
fcomp
imul
clc
int3
pop
inc
sub
(bad)
add
add
fcmovne
pop
jnp
cmc
js
sbb
add
mov
(bad)
rol
add
push
fidivr
or
add
add
mov
dec
pop
fbstp
xchg
sub
daa
or
stos
sbb
test
xor
push
add
add
sub
mov
(bad)
dec
inc
fstp
jo
add
mov
fist
ins
add
dec
ret
jo
mov
add
add
push
retf
xchg
int3
repnz
movs
xchg
and
cmp
in
int3
mul
jecxz
mov
push
add
add
add
xor
adc
neg
cmps
lea
sbb
jecxz
cmps
aaa
and
mov
loopne
add
add
mov
fwait
je
fcomp
cmp
add
sbb
cmp
push
js
add
out
shr
lods
pop
jns
add
add
add
mov
sub
xchg
jecxz
retf
push
sbb
cli
pop
jl
sbb
inc
add
add
add
mov
test
cli
je
xchg
cmc
add
add
cdq
push
push
mov
and
clc
and
in
add
add
shl
fadd
jo
adc
pop
cdq
sub
lock
jmp
out
mov
mov
pop
and
add
add
add
scas
(bad)
xor
xor
inc
retf
popf
stos
or
add
mov
cdq
dec
add
mov
add
add
add
dec
fimul
cmp
pavgb
sbb
adc
sub
or
or
inc
fdivr
cld
add
add
add
and
sbb
mov
mov
xchg
pushf
push
pop
arpl
add
hlt
(bad)
and
add
add
mov
xchg
push
das
add
jge
inc
cmp
add
js
hlt
cmp
loopne
jg
lods
jnp
adc
mov
add
pop
xor
cmp
cmp
lods
mov
add
jecxz
push
pushf
add
aaa
stos
xchg
(bad)
repz
cmps
pop
sub
xchg
mov
addr16
xchg
or
dec
shl
add
add
push
shld
cwde
add
pop
pop
jp
mov
add
and
cmp
imul
lods
push
mov
daa
mov
or
jle
ins
lds
ja
push
push
mov
(bad)
add
add
cmp
add
mov
sub
push
dec
les
push
aas
jle
call
add
shl
add
mov
or
neg
inc
les
mov
pop
stos
pop
clc
fs
mov
add
add
jnp
(bad)
test
movs
add
mov
xchg
adc
mov
scas
jge
ror
add
and
and
adc
pop
mov
mov
outs
clc
movs
test
(bad)
fadd
add
add
jnp
aas
or
sbb
push
in
mov
push
xor
xchg
sar
xchg
gs
jne
mov
out
test
mov
inc
xchg
pcmpeqd
repz
mov
add
add
pop
fld
(bad)
fnstcw
movs
loop
js
add
xchg
inc
jmp
js
test
jg
adc
xchg
xor
jno
stos
push
and
(bad)
cs
dec
dec
mov
add
add
inc
push
rcr
iret
add
cld
xchg
sti
add
and
jmp
cwde
add
add
loop
add
scas
mov
iret
scas
and
popf
mov
mov
mov
lds
push
add
add
sub
test
jmp
mov
shl
rcr
sub
add
mov
add
and
lahf
call
xor
mov
repz
cmp
stos
sub
xor
ror
add
shr
push
mov
ss
jge
out
aam
sub
dec
jg
dec
cs
fs
addr16
daa
rol
add
add
add
inc
(bad)
xor
inc
lds
add
jg
aam
mov
mov
aaa
jns
je
add
add
mov
mov
mov
mov
lahf
test
mov
xor
mov
mov
repnz
add
loop
add
add
jb
mov
imul
leave
out
xor
(bad)
das
mov
add
imul
dec
add
add
sbb
or
out
adc
(bad)
add
scas
not
add
xor
call
add
add
add
out
mov
and
jae
or
dec
lods
xor
mov
and
popa
add
icebp
mov
add
add
mov
jae
xchg
in
cmps
clc
fs
push
rol
call
inc
das
fwait
dec
xor
add
xchg
fild
(bad)
in
nop
cmps
xchg
mov
sti
cmp
jecxz
add
mov
add
add
int3
inc
add
pushf
(bad)
in
stos
dec
or
cmp
adc
cmps
adc
sub
inc
lock
pop
add
add
pop
inc
inc
mov
ss
call
rcl
add
inc
add
jmp
add
das
add
xor
jnp
mov
add
iret
fisttp
(bad)
jae
mov
fild
pop
mov
add
bound
dec
leave
add
in
jmp
ss
mov
adc
xchg
push
cli
add
add
and
push
add
adc
cmp
add
lahf
popf
dec
pushf
loopne
pop
sbb
add
(bad)
cld
add
add
js
cwde
ds
(bad)
popa
es
test
bound
sub
jg
add
adc
add
mov
pop
pushf
adc
int
loope
mov
aaa
ss
cmp
inc
add
(bad)
cmp
add
add
dec
sbb
add
sub
jnp
in
inc
cli
stos
add
jecxz
jae
pop
dec
xchg
mov
push
std
jl
inc
push
ins
ds
dec
in
icebp
pop
sub
sbb
inc
scas
sbb
add
add
(bad)
jo
add
pop
mov
jge
or
push
cmp
add
neg
lock
test
add
add
lea
into
mov
push
pop
mov
jbe
add
push
das
mov
pop
cmp
mov
inc
add
add
add
addr16
std
adc
xor
xlat
or
adc
add
popf
repnz
(bad)
mov
add
and
fcmovu
xchg
sub
(bad)
sub
inc
push
cmp
mov
(bad)
pop
into
jl
add
add
in
scas
movs
sti
xor
add
aam
mov
push
pop
pop
fwait
cmps
inc
fadd
mov
lods
jo
add
add
xor
shl
and
xchg
add
xchg
les
adc
cld
cmp
add
add
nop
enter
cmps
xchg
mov
ins
xlat
clc
cmp
gs
adc
and
add
add
sahf
popa
enter
pop
pop
jle
shrd
or
aas
or
add
mov
add
add
imul
fcom
push
cmp
out
add
mov
test
pop
mov
jmp
add
add
hlt
pusha
sbb
mov
add
cmps
(bad)
enter
push
sub
cmc
jmp
adc
add
inc
mov
pop
cmp
outs
mov
sub
(bad)
jnp
add
xchg
pop
and
add
add
cmp
pop
loope
xchg
call
jo
and
add
inc
stos
fwait
add
add
outs
add
pop
(bad)
jnp
add
mov
add
call
and
add
add
dec
cmp
and
iret
and
stos
jae
sub
add
jge
push
aas
adc
xor
pop
add
sbb
xchg
and
stos
add
add
dec
jge
jae
jmp
push
add
pop
xchg
add
aaa
xchg
add
dec
int
iret
mov
add
add
daa
mov
inc
cmp
test
xchg
pusha
sub
hlt
aas
imul
push
and
mov
add
clc
into
mov
popf
or
xor
fadd
loopne
add
cmp
add
add
or
icebp
into
push
cmps
mov
fdiv
push
out
mov
sar
stos
push
addr16
aas
add
add
xchg
add
or
test
add
loopne
pop
add
sbb
inc
add
add
jo
jle
(bad)
js
add
fisubr
add
(bad)
xchg
mov
in
push
add
daa
xchg
add
add
add
mov
dec
scas
add
stos
xchg
xor
push
lods
pop
lods
call
aaa
lock
add
add
and
sbb
lock
xchg
add
rcr
aaa
bound
mov
or
add
add
sbb
clc
(bad)
inc
ins
dec
stos
or
add
or
push
fs
cmc
add
add
icebp
push
mov
ja
sbb
ins
es
out
add
(bad)
xor
jbe
xchg
add
add
add
push
dec
das
push
mov
nop
add
dec
je
in
pop
and
add
cmc
movs
inc
lea
add
add
sub
sti
jp
lods
std
add
xchg
lds
dec
and
call
pusha
out
adc
(bad)
les
sub
pop
jmp
mov
dec
jmp
add
lds
imul
lock
call
out
xchg
mov
add
jo
xor
jge
mov
jnp
dec
retf
mov
add
add
(bad)
pop
inc
mov
cmp
sbb
inc
pushf
outs
mov
add
je
add
add
fstp
xor
xchg
pop
mov
cwde
enter
ret
mov
or
add
sbb
mov
add
lods
sbb
jl
jo
add
inc
fwait
inc
push
mov
cmp
lods
add
add
sub
aad
dec
mov
mov
mov
mov
pop
inc
ins
add
daa
ror
repz
add
and
add
xor
push
aad
or
xor
cmp
mov
add
in
in
push
aam
test
xchg
ds
mov
(bad)
loope
sbb
xlat
push
push
add
add
add
dec
cmps
les
or
mov
adc
push
add
gs
adc
test
add
cli
add
add
sbb
movs
sbb
push
outs
xor
mov
add
repnz
sbb
mov
add
cmp
ret
out
push
xor
lds
pop
add
jmp
cs
pop
ja
add
add
adc
push
sub
pusha
daa
inc
call
jno
loop
mov
retf
add
scas
adc
add
add
popf
inc
ret
add
push
pusha
retf
add
dec
xor
adc
(bad)
ret
add
add
in
jmp
mov
add
push
mov
std
mov
xchg
je
test
shl
stos
ret
add
push
mov
and
add
inc
ss
inc
jno
add
stos
stos
dec
shl
xor
mov
add
imul
add
add
je
adc
out
mov
jns
int3
popa
pop
call
push
lahf
cmp
add
add
add
add
and
and
cmps
cmp
call
and
adc
xor
mov
add
fadd
mov
dec
mov
adc
out
push
aad
jae
lahf
shr
movs
pop
xchg
int3
nop
adc
mov
add
jno
add
xchg
out
pushf
xchg
pop
mov
cmp
push
std
jne
sbb
inc
ret
mov
loopne
push
test
add
js
test
push
cli
add
pop
cwde
add
sbb
add
xchg
xor
mov
outs
fsubr
ins
fcmovnb
add
add
mov
retf
push
nop
sbb
jns
dec
cdq
fwait
ja
add
ror
(bad)
mov
mov
add
stos
mov
in
jb
and
stc
add
mov
lock
jmp
ror
pop
pop
fld
test
mov
add
add
enter
dec
push
divps
pusha
or
push
adc
mov
sub
jno
jecxz
add
add
jne
add
cmp
out
(bad)
(bad)
fld
xor
outs
mov
rol
add
mov
add
int
xchg
test
pushf
push
or
cdq
imul
sbb
nop
jmp
add
inc
add
add
ja
pusha
iret
mov
lahf
mov
xchg
es
add
sbb
add
jl
ins
aaa
mov
xlat
add
jbe
add
add
jae
or
imul
iret
repnz
inc
xchg
jmp
mov
xor
or
imul
xchg
(bad)
cmps
add
pusha
add
add
shl
mov
out
fwait
add
cdq
pop
mov
add
inc
leave
aas
cwde
rcr
sbb
add
add
add
sub
sahf
retf
push
add
div
(bad)
data16
pop
dec
xor
add
add
add
push
out
fiadd
loop
test
stos
jle
mov
int
ins
dec
aam
in
add
es
out
jp
add
add
add
dec
repnz
or
sub
cmp
rol
push
xchg
add
adc
add
inc
rcr
mov
pusha
cmp
dec
add
xchg
and
vpsrad
int3
sub
add
push
dec
sub
sahf
mov
shl
add
test
cmp
js
add
add
in
nop
gs
jbe
imul
jecxz
(bad)
imul
jmp
push
pop
daa
jmp
cwde
jb
add
add
pop
cwde
cmps
xchg
rol
psubd
repnz
pop
pop
push
sbb
pop
jecxz
add
add
add
inc
stos
rcl
add
jne
cmp
dec
daa
aam
div
add
outs
sahf
mov
movs
lea
dec
add
add
xchg
pop
push
out
jb
add
fnsave
add
xchg
call
or
add
add
int
popf
shr
cwde
jb
add
adc
mov
xchg
jmp
pop
popf
push
mov
add
mov
div
inc
add
and
push
jo
ins
int
mov
or
es
add
add
(bad)
mov
rol
cmp
add
fcom
std
pop
lock
adc
ins
popa
cmp
add
std
lea
add
jae
mov
rcpps
xor
pop
sbb
into
add
add
mov
hlt
test
cmp
cmp
ficom
add
cmp
mul
addr16
sldt
add
stc
test
jo
push
ret
and
call
(bad)
xor
ss
push
add
add
and
add
stos
inc
gs
mov
pop
jbe
(bad)
push
shl
jno
xchg
mov
add
inc
js
xor
mov
movs
mov
cwde
ret
push
or
inc
lea
xchg
nop
sub
add
add
jmp
test
scas
add
mov
stos
sbb
cwde
jae
pusha
mov
fild
add
add
(bad)
sub
add
gs
mov
fidivr
add
mov
imul
fdiv
add
add
in
push
loopne
push
adc
mov
pop
inc
retf
(bad)
enter
mov
inc
xchg
sub
push
pop
add
add
stc
xor
add
xor
push
addr16
mov
mov
pop
js
xchg
lds
add
mov
adc
fld
test
add
das
out
sub
adc
add
add
inc
push
pop
and
adc
sar
push
fwait
mov
mov
xor
add
add
ds
xchg
inc
sti
dec
lods
lahf
add
and
fadd
inc
xchg
stc
gs
add
add
imul
adc
xchg
add
sbb
mov
cs
ret
jns
jge
sbb
lods
sbb
add
add
add
mov
mov
sub
jl
mov
pop
mov
fild
add
add
shr
or
add
es
pusha
and
std
fld
imul
push
fisubr
dec
in
add
aaa
add
add
mov
add
push
mov
push
ins
jp
add
loopne
push
mov
in
add
xor
lea
std
ja
add
add
loope
or
sub
jecxz
add
call
loop
arpl
mov
add
jnp
pop
add
inc
outs
adc
lods
dec
xchg
(bad)
stc
inc
repz
push
add
add
lods
jne
xor
add
cmp
push
jo
in
mov
jle
out
add
jne
sti
add
add
mov
call
shl
inc
adc
cdq
add
mov
or
sub
add
aaa
fs
add
mov
shl
and
cmps
jle
js
inc
outs
cmc
dec
rcl
push
push
out
add
add
mov
sub
sbb
pop
stos
mov
fwait
or
pop
and
jle
sub
xor
rol
add
add
nop
push
sub
mov
test
sbb
aad
dec
inc
hlt
bound
xchg
xchg
add
and
lock
jo
add
pop
add
cmc
mov
cmp
leave
or
add
add
fcom
xchg
push
jmp
loope
arpl
stos
add
xor
fdiv
rol
mov
lods
dec
add
add
add
je
int
and
lds
jo
inc
(bad)
ficom
daa
clc
mov
ins
jge
mov
sbb
lods
add
add
adc
cwde
jp
add
lods
rol
sbb
icebp
adc
xchg
jb
add
add
gs
fisttp
or
sbb
je
lahf
stc
cmp
nop
cmp
jp
xor
add
push
add
add
jae
add
cmp
jecxz
mov
aam
retf
ins
fidiv
add
add
cmc
fadd
imul
pop
sbb
shl
cli
mov
add
push
lock
add
add
pop
pop
stos
jle
enter
cmps
mov
pop
add
pop
adc
push
popf
dec
push
add
add
pusha
outs
ror
inc
jbe
add
mov
sbb
in
or
fild
xchg
not
xchg
stos
add
xchg
add
add
adc
cmp
add
mov
fbstp
pop
inc
mov
clc
inc
add
add
add
xchg
add
ins
dec
cmp
out
lds
push
mov
and
add
push
push
pop
add
add
xor
les
sub
rcl
cdq
add
cs
icebp
retf
xchg
popa
add
rcr
adc
test
add
mov
rep
push
push
adc
rcr
mov
xor
push
jo
xchg
add
loopne
push
jl
add
add
out
jbe
out
add
or
cmp
mov
sahf
es
fiadd
add
fld
add
add
mov
add
inc
into
ds
dec
sahf
add
sbb
loop
repnz
add
mov
add
add
add
cdq
and
outs
xor
jp
push
mov
fadd
call
popa
in
add
add
fld
pop
and
scas
mov
mov
in
sbb
or
test
mov
jmp
shr
add
iret
pop
mov
push
inc
sbb
loopne
pop
add
add
mov
jp
repz
add
push
retf
fstp
xor
in
(bad)
and
mov
add
add
imul
add
add
fcom
inc
fisttp
pop
loope
add
xchg
lea
jb
jne
add
jge
push
add
add
sbb
or
add
hlt
aaa
xlat
sub
or
push
imul
sub
or
movs
inc
add
add
mov
loopne
mov
push
pop
add
fdiv
jno
jnp
xor
imul
add
mov
xchg
lods
in
enter
mov
cmp
add
pop
cmp
out
sub
call
pop
lea
sahf
popf
xlat
mov
mov
aas
in
push
pop
push
sub
in
pop
in
sar
push
std
je
mov
ins
add
add
sbb
push
stos
add
ins
lods
add
sub
xchg
add
mov
add
xchg
add
add
ins
and
scas
adc
outs
aas
jnp
rol
les
aad
call
push
test
mov
jnp
stc
mov
fistp
inc
loope
and
pusha
add
xchg
mov
mov
(bad)
lock
add
add
mov
push
add
jbe
ret
add
jmp
fld
data16
or
add
add
adc
jmp
xchg
push
cmp
xor
fmulp
lahf
jge
add
mov
mov
add
in
loope
imul
lods
fwait
div
push
mov
dec
shr
add
pop
jmp
add
add
push
mov
in
cs
pushf
add
add
test
out
lock
add
jp
into
inc
and
das
pop
pop
mov
and
mov
ror
add
add
dec
mov
mov
sbb
xor
adc
push
cdq
ins
adc
add
add
js
add
stc
add
es
in
lods
push
cmp
test
cmp
or
cmps
clc
les
add
add
add
pop
mov
add
xor
push
or
clc
add
pop
in
add
mov
add
lods
xor
adc
push
or
add
jg
pop
cld
jp
push
fnstcw
add
ror
jge
or
and
add
add
jmp
in
stos
test
xor
fst
mov
sbb
inc
adc
rol
mov
cdq
cli
rcl
mov
add
add
pop
cld
adc
popf
aad
mov
mov
fucom
mov
add
pop
sub
into
lea
lock
aad
or
jmp
xor
cmc
add
daa
cmps
ret
pop
jp
mov
clc
pop
sahf
cmp
add
rol
add
jl
pop
(bad)
cld
arpl
sub
fimul
sti
or
xchg
pop
sbb
dec
add
add
retf
sub
inc
add
add
push
sbb
call
pop
(bad)
push
or
cdq
outs
xor
or
push
mov
add
add
aas
add
inc
call
fsub
lods
bound
add
in
ja
add
add
or
fwait
xor
mov
je
out
popw
repnz
test
mov
add
add
ss
sub
imul
mov
sbb
je
adc
js
(bad)
dec
fstp
add
lea
add
shr
mov
mov
push
push
lahf
jae
pop
add
add
outs
inc
movs
retf
(bad)
in
mov
pop
mov
sbb
shl
pop
adc
jg
in
pushf
add
add
add
es
imul
out
adc
add
outs
xchg
add
add
add
mov
mov
scas
jnp
xlat
lods
in
and
mov
and
lds
push
push
je
add
add
cld
xchg
pusha
sbb
in
sub
and
mov
add
daa
ss
mov
sar
add
add
pop
fdiv
push
inc
add
addr16
cld
movs
aaa
dec
nop
(bad)
pop
jmp
xor
add
or
cmp
mov
mov
add
push
dec
add
rcl
and
add
imul
adc
sbb
nop
mov
fst
mov
add
add
shl
sar
sub
fsincos
mov
loop
push
jae
jnp
inc
or
mov
add
pcmpeqw
fwait
aad
sbb
add
movs
add
add
mov
add
mov
xor
iret
(bad)
add
adc
shl
imul
stc
add
lds
add
add
jns
xchg
add
shl
cdq
dec
(bad)
push
jle
add
add
add
rcl
(bad)
lahf
and
mov
add
out
ds
mov
add
add
mov
invd
add
sahf
ficom
lea
ins
rcr
mov
fild
add
add
inc
jecxz
inc
add
clc
sbb
add
rcl
xor
pop
repnz
add
mov
imul
rol
mov
xor
cdq
pop
add
in
jmp
cmc
out
inc
add
add
jns
add
and
dec
jno
push
xchg
in
add
mov
and
jmp
add
add
xlat
adc
xchg
cmp
std
mov
add
ja
loope
inc
mov
jno
add
add
shl
xor
add
lds
test
adc
sub
jmp
add
nop
mov
ret
add
sub
xlat
loop
add
aas
fidivr
jns
adc
add
fisttp
das
outs
jg
add
or
ss
int
(bad)
aas
shl
pop
cmps
adc
ds
andps
add
add
inc
or
cdq
jb
dec
pop
in
push
pop
lahf
adc
scas
lods
les
loopne
ss
int
mov
clc
out
add
add
dec
cmpxchg
mov
inc
dec
enter
test
adc
ins
mov
test
add
add
pop
sbb
pusha
pop
call
(bad)
cdq
fisubr
clc
push
(bad)
rol
stos
push
jg
add
add
mov
sbb
inc
loop
inc
add
repnz
adc
pop
inc
jmp
and
outs
dec
pop
push
int
nop
mov
dec
daa
pop
jp
add
test
and
add
add
fwait
inc
or
add
push
adc
xchg
ror
mov
cli
add
add
add
add
int
popa
inc
dec
data16
pop
out
add
ret
add
iret
sbb
adc
retf
lock
jle
mov
xchg
pop
inc
pop
jmp
inc
imul
cmp
cmp
add
add
mov
sub
ins
jmp
add
aaa
int
mov
add
sbb
add
add
add
out
dec
or
(bad)
fstp
cmp
arpl
sub
add
add
jg
push
fcomip
out
add
repnz
sub
test
call
adc
jl
add
add
sar
js
mov
xlat
cmp
iret
xor
and
jg
fdivr
add
add
fistp
jo
out
(bad)
dec
pushf
mov
popa
pop
inc
pop
jo
adc
sbb
mov
inc
loop
rol
adc
loopne
cdq
mov
xchg
xlat
repnz
rcl
adc
sbb
mov
add
add
jmp
loope
cmps
add
jmp
mov
lods
add
sti
sbb
jbe
add
add
and
xchg
jbe
add
pop
cmp
sbb
sub
inc
pop
loope
push
mov
add
add
cdq
ror
or
lods
sub
neg
add
imul
stos
add
inc
add
add
dec
imul
sub
in
adc
fs
or
xlat
mov
add
add
add
in
jmp
add
bswap
ror
add
inc
jmp
jns
add
add
add
mov
fs
xor
icebp
or
ror
mov
pop
add
pop
add
add
push
xchg
xchg
push
hlt
std
or
test
cmp
add
inc
out
dec
mov
add
add
dec
pop
or
pop
cmp
es
mov
push
(bad)
cmc
loopne
add
add
add
xor
jmp
xchg
adc
add
stc
enter
cmp
icebp
daa
js
add
add
aaa
ja
add
call
cld
loop
add
ret
pop
test
push
add
inc
add
add
out
add
(bad)
adc
pop
add
fild
add
add
xchg
sldt
add
in
std
or
mov
adc
(bad)
inc
pop
and
xor
pop
pop
stos
push
test
add
add
add
idiv
bound
scas
jno
jb
ins
add
repnz
addr16
or
dec
pop
or
add
add
add
fbstp
mov
adc
aas
pushf
sahf
add
inc
retf
fdiv
jb
add
and
mov
xor
cmp
add
add
stc
add
mov
lock
in
push
push
xor
push
sub
aad
aad
inc
hlt
sti
pop
add
add
add
dec
lods
mov
push
inc
sbb
or
sbb
scas
dec
std
loop
cmp
popf
pop
pop
inc
or
add
outs
inc
push
mov
jo
mov
mov
pop
pop
cdq
loopne
iret
inc
and
(bad)
int
aas
jb
or
add
add
push
sub
add
out
pop
pop
adc
and
xor
add
add
add
(bad)
loopne
xor
neg
mov
std
btr
cmp
lods
adc
xchg
cmp
add
add
pop
sbb
xchg
sbb
(bad)
mov
retf
push
pop
test
imul
push
je
aas
fistp
dec
add
add
fldcw
in
or
push
jo
pushf
aas
add
sub
xchg
data16
add
shl
add
add
cli
add
jmp
add
sub
(bad)
push
mov
fild
out
fadd
js
push
add
add
pop
out
jl
sbb
sub
ret
mov
std
jge
mov
sbb
aam
inc
push
mov
add
xchg
mov
adc
movs
into
inc
or
cmp
pop
jp
add
sti
(bad)
add
add
cmp
or
or
jnp
add
xor
xchg
add
jne
arpl
xchg
push
add
add
add
mov
mov
or
xchg
push
sbb
mov
in
aam
jecxz
add
add
add
(bad)
push
sbb
or
out
sub
xlat
push
or
pop
call
pop
add
nop
jbe
add
add
movzx
mov
(bad)
jge
add
bound
dec
aad
aaa
jl
call
pop
add
xchg
rcl
add
cdq
mov
enter
jnp
add
inc
jb
cmps
scas
add
aas
popf
js
add
add
enter
jecxz
(bad)
out
popa
ds
cmp
xor
(bad)
pushf
or
add
add
add
sti
repz
jl
int3
call
jmp
add
jns
cmp
pusha
push
jbe
in
add
add
add
inc
jmp
sub
ror
sub
hlt
lar
sbb
inc
loop
xchg
sub
ret
add
add
add
bound
fiadd
repz
jge
leave
xlat
add
jmp
ds
or
add
add
into
push
enter
xor
stc
xchg
mov
sahf
add
pop
dec
add
shl
pop
add
add
jb
(bad)
loopne
sbb
cmc
inc
cmps
and
add
mov
push
mov
fstp
out
add
add
fadd
mov
dec
xor
pop
enter
inc
out
cwde
cmp
les
fcomp
add
hlt
lock
pusha
pop
mov
mov
sbb
test
push
cmp
and
and
add
retf
jp
iret
add
(bad)
fcomp
add
arpl
gs
call
add
mov
dec
add
(bad)
mov
dec
and
mov
enter
call
add
dec
add
(bad)
out
mov
cmp
add
fmul
inc
sbb
ror
adc
in
add
add
popf
out
inc
add
push
rol
icebp
fcomp
xchg
ins
das
rol
mov
add
add
scas
xchg
xor
int3
xor
not
add
cli
push
add
scas
add
add
add
clc
or
add
sub
fstp
lea
and
cmp
push
add
lods
add
pop
scas
inc
add
add
cmp
xchg
sbb
sub
cmc
add
jmp
jbe
add
dec
lds
fild
add
add
iret
xchg
push
adc
into
jmp
or
add
frstpm(287
shr
jl
add
sub
(bad)
mov
add
add
add
je
jmp
push
jbe
cli
xchg
ds
sub
or
add
add
jl
xlat
add
nop
out
ja
add
test
mov
inc
push
add
add
add
xor
fistp
sbb
std
inc
add
shl
sbb
or
add
pusha
out
pop
pop
add
cmc
push
sbb
xlat
mov
dec
les
sub
(bad)
loopne
add
add
lock
jo
mov
mov
(bad)
fild
or
js
adc
pop
sbb
adc
add
add
sbb
and
int3
test
add
or
mov
add
popa
in
and
outs
add
add
add
inc
xlat
cmps
outs
sub
mov
dec
sbb
and
xor
pop
lods
xchg
add
add
xor
add
aaa
outs
mov
daa
es
cmpxchg
cmp
jmp
add
sbb
add
add
jb
mov
icebp
(bad)
xor
mov
or
sub
pusha
fadd
scas
jle
test
add
add
lahf
inc
cmc
enter
sbb
ss
push
test
sahf
mov
fsubr
add
add
inc
lds
adc
or
scas
repnz
add
push
inc
inc
stc
inc
dec
cmp
mov
and
add
add
ins
js
add
scas
icebp
cmc
add
enter
jmp
dec
ds
add
add
add
sub
popf
rcr
add
scas
shl
xor
retf
test
add
add
add
and
xchg
ficomp
mov
icebp
jp
add
sub
add
cmps
cmp
out
add
push
fadd
jle
daa
sub
cld
mov
inc
out
outs
ret
sub
add
add
pop
test
ins
adc
or
xor
jns
cmp
(bad)
outs
inc
mov
push
pop
add
add
jl
xor
fcomp
mov
or
sbb
dec
jmp
movs
mov
mov
movs
add
add
clc
add
xchg
inc
mov
into
mov
add
repnz
jno
pop
push
add
jae
test
test
add
pop
mov
xor
mov
leave
shl
add
addr16
mov
call
add
retf
add
fistp
sbb
inc
xchg
in
xchg
add
and
mov
add
add
mov
dec
fld
out
push
mov
add
push
scas
fbld
cmp
mov
call
add
add
in
or
and
cmps
fwait
xor
in
xor
imul
add
stos
fadd
mov
add
add
or
daa
add
adc
pop
mov
jne
add
ja
add
add
sbb
and
push
in
add
mov
icebp
in
sub
sbb
cmp
arpl
add
add
sub
mov
xchg
xchg
add
gs
jle
jl
stc
es
imul
nop
jae
add
add
xchg
add
(bad)
jbe
sti
xor
cli
sahf
adc
mov
adc
push
pop
add
add
add
add
add
mov
adc
add
stos
push
call
add
add
and
jp
jo
xchg
add
call
stc
sbb
cwde
jg
xchg
push
call
add
add
xchg
mov
std
shl
pop
push
bound
test
sti
pop
jb
sbb
and
add
add
mov
pop
pusha
xchg
pusha
add
lods
or
xor
mov
in
shl
pop
je
add
add
jg
mov
push
add
xor
pop
push
sbb
scas
pop
inc
jo
jae
add
add
add
movs
push
lods
and
or
mov
pop
shl
mov
jnp
sbb
(bad)
(bad)
dec
icebp
mov
mov
mov
add
add
daa
rcr
mov
pusha
and
push
sub
or
cdq
sub
cmp
loopne
add
add
push
mov
jnp
xor
inc
add
sti
xor
repnz
add
aam
dec
inc
add
add
movs
mov
js
adc
cmp
test
fcmove
jns
add
into
imul
add
add
cdq
mov
add
or
xchg
add
sbb
add
add
add
fidiv
sub
add
mov
push
inc
rcr
aam
add
add
add
and
mov
mov
xor
pop
les
pop
cli
pusha
mov
sub
add
add
mov
add
push
or
out
lock
push
outs
std
stos
xchg
mov
add
ins
ss
sub
popf
add
test
pop
dec
add
inc
or
add
add
add
add
(bad)
and
add
push
stos
and
mov
dec
adc
jge
or
add
add
add
out
inc
test
inc
push
inc
push
jae
add
push
dec
es
ja
sbb
add
add
jae
adc
add
jle
cmp
adc
inc
xlat
sub
pop
pop
fild
add
add
and
jmp
(bad)
fcomp
leave
inc
inc
adc
sbb
inc
sub
(bad)
outs
jge
out
add
rol
addr16
mov
inc
and
add
stos
lods
mov
and
add
mov
stc
ja
pop
ins
add
out
jns
or
fdivp
add
add
add
dec
push
sub
pusha
cwde
pop
loopne
add
cli
pop
xor
fwait
jmp
push
rcl
add
add
cmp
xchg
xor
jmp
and
les
loop
add
add
ret
xchg
xor
int3
push
repz
or
hlt
cmp
mov
jp
dec
push
cmps
das
iret
and
add
add
inc
xor
sar
mov
loopne
cmp
movs
pop
jmp
ss
fs
(bad)
mov
add
add
outs
jp
xor
mov
gs
add
(bad)
lods
aas
inc
cmc
ins
jnp
loopne
xchg
add
add
add
jmp
bound
add
cs
xor
std
pop
add
gs
add
add
add
fld
into
ret
icebp
mov
jbe
sub
and
ja
loop
push
adc
int
mov
add
add
sti
inc
ror
add
mov
jns
addr16
xor
sbb
adc
add
add
add
mov
rcr
clc
pop
push
bound
test
(bad)
out
pop
mov
inc
jecxz
mov
es
add
add
movs
pop
test
add
xor
jg
ret
add
sti
sbb
mov
push
add
and
add
add
add
mov
add
xchg
mov
nop
sbb
dec
js
add
add
popf
(bad)
inc
inc
inc
xchg
in
ja
data16
rol
test
lds
adc
add
add
retf
ins
je
sbb
fiadd
add
jg
xchg
or
test
mov
pusha
call
add
in
jecxz
pop
cmps
cwde
add
lahf
js
add
pop
jbe
add
add
out
xchg
cli
adc
repz
(bad)
or
pusha
xor
(bad)
sbb
movs
mov
add
add
add
ror
push
ja
cld
test
es
data16
add
and
add
mov
inc
add
add
add
enter
pusha
xchg
add
and
std
test
lahf
lock
push
sub
cld
jns
pop
add
add
mov
add
sub
xchg
xchg
inc
push
dec
add
and
add
add
add
std
sub
sbb
pop
call
sub
mov
push
add
add
test
aad
jp
movs
add
(bad)
cmc
adc
xor
jge
cmps
sbb
add
mov
not
xchg
call
stos
add
leave
fdiv
cmp
add
ret
or
add
add
push
in
fwait
out
and
or
inc
rol
xor
mov
add
rcl
inc
add
add
adc
retf
call
out
xchg
add
xchg
xor
jnp
int
ds
jo
add
add
add
inc
dec
stos
in
pop
jne
dec
push
mov
fcmovnu
jo
or
push
xchg
add
add
add
out
dec
pop
aaa
pop
mov
loopne
mov
dec
add
out
cs
div
add
add
shr
mov
in
xchg
jnp
mov
jp
jg
add
mov
lds
push
div
cli
sub
sbb
fadd
xor
add
in
imul
xchg
mov
mov
cmp
mov
test
push
sbb
pushfw
scas
cmp
add
in
add
add
call
add
cld
xor
xchg
pop
retf
mul
push
or
not
xchg
cld
xor
mov
aaa
fwait
jbe
or
icebp
pusha
data16
sbb
call
adc
add
add
ja
pop
mov
fdivr
out
pop
xor
cmp
add
lahf
add
add
dec
adc
push
xchg
and
mov
(bad)
leave
dec
add
sub
pusha
mov
add
add
push
sub
cwde
punpckhbw
and
cld
xchg
lahf
add
or
ins
add
mov
xor
add
add
jmp
nop
xchg
pop
in
sub
inc
push
jnp
dec
add
push
xor
jo
imul
scas
jno
call
jl
int
xor
cmps
mov
ja
aaa
in
cdq
ret
add
add
dec
inc
lods
jmp
mov
xchg
add
cmp
inc
pushf
sti
push
add
add
dec
dec
sbb
and
add
add
das
add
add
dec
sub
imul
(bad)
es
and
add
add
in
mov
add
mov
jmp
push
clc
stos
cld
leave
sbb
inc
mov
add
test
pop
inc
push
int3
dec
clc
push
add
fs
or
mov
fistp
add
add
cld
ltr
adc
mov
dec
push
xchg
(bad)
fstp
inc
nop
leave
and
in
pop
test
pushf
add
add
cwde
cmp
(bad)
mov
pop
xchg
iret
(bad)
addr16
(bad)
add
int3
pop
mov
dec
idiv
add
add
iret
jnp
and
jae
dec
or
xor
mov
add
cwde
icebp
inc
pushf
cmp
add
jl
loopne
pop
cmps
inc
push
and
fist
and
add
cmp
das
cld
ds
add
cmps
mov
add
push
add
jp
and
mov
cli
dec
add
mov
movs
or
and
add
add
add
outs
pop
xchg
xor
sub
inc
test
pusha
xchg
push
mov
arpl
sbb
sub
add
add
add
jno
lahf
mov
cld
add
dec
test
in
jecxz
pop
pop
and
or
add
add
add
jmp
xchg
xchg
bound
into
jle
jg
adc
cmp
add
add
add
mov
jae
les
sub
mov
sbb
(bad)
jo
add
add
add
jl
push
pop
push
retf
cmp
jmp
fiadd
enter
pushf
add
add
adc
pop
movs
fs
in
add
out
test
jbe
inc
add
add
add
inc
sbb
lahf
vmovhpd
dec
fsubr
test
jmp
add
push
pushf
movs
inc
in
in
dec
rol
add
add
mov
push
call
iret
add
pop
xor
cmp
push
add
add
test
or
out
and
in
retf
int
xor
add
add
add
cdq
popa
loopne
or
xchg
fcomi
ins
mov
div
or
mov
adc
add
add
xchg
(bad)
pop
shrd
jne
sar
lds
mov
out
rol
pop
hlt
mov
out
add
add
pop
loop
add
cmp
das
inc
dec
add
jmp
outs
fdiv
cmps
aad
add
add
add
xchg
jg
sbb
adc
into
cmp
inc
add
std
popf
mov
push
add
pop
add
add
push
hlt
mov
mov
or
test
add
bound
in
xchg
xor
pop
add
add
add
add
xlat
imul
jecxz
pop
neg
cmp
call
add
and
pusha
inc
shl
dec
outs
add
sub
retf
repnz
clc
push
push
dec
add
add
add
rol
clc
cmps
jb
or
push
stos
push
arpl
jp
(bad)
add
add
adc
lods
add
out
jge
dec
sub
adc
retf
jecxz
add
inc
std
cli
test
add
add
jo
cmp
sti
cmp
(bad)
lea
popf
fstp
pop
aam
ficomp
xchg
jnp
jp
add
add
mov
dec
mov
sbb
repnz
xlat
dec
pop
mov
add
out
imul
fistp
and
sub
adc
dec
add
add
stos
jae
sbb
push
pop
retf
nop
cmps
pop
inc
dec
mov
or
mov
add
int
shl
out
cmp
stc
scas
jo
cmp
push
cmp
not
test
cmp
stc
push
rol
add
stos
inc
mov
xor
loope
push
mov
loop
mov
add
ja
add
add
add
div
mov
push
(bad)
mov
lods
ret
xor
add
dec
bound
pop
std
rol
(bad)
fsubr
add
call
jmp
pop
push
dec
imul
sbb
aad
gs
add
inc
out
mov
add
add
cmp
fs
fld
inc
and
mov
jbe
jge
add
add
sub
imul
test
cmc
cmps
mov
inc
add
in
adc
fldenv
add
add
add
or
rcl
dec
jnp
mov
aaa
mov
sar
loopne
and
add
sbb
add
add
or
mov
sub
mov
adc
lahf
lds
push
rcr
add
mov
add
jmp
imul
add
xchg
mov
jge
sbb
and
add
mov
add
add
mov
les
fsubr
ja
imul
pop
das
sub
dec
pop
add
in
add
add
call
and
mov
nop
sbb
xor
cmp
add
add
add
movs
add
imul
dec
mov
nop
xor
dec
leave
push
add
add
sub
clc
push
inc
test
and
test
push
mov
mov
sar
add
shl
xor
in
cmps
imul
xlat
jg
jne
icebp
repz
(bad)
mov
sub
inc
aas
or
add
add
cld
push
fstp
cmp
loopne
int
or
sub
push
mov
hlt
cmp
add
xor
into
cmc
jae
mov
popa
mov
jle
add
dec
xchg
add
add
add
gs
xchg
cmp
repz
or
add
jmp
sbb
lock
cmp
add
add
pop
data16
sub
jnp
les
add
dec
cs
in
add
mov
fstp
out
loopne
lahf
add
fild
(bad)
lock
add
cmp
sbb
cmp
add
add
and
xlat
or
movs
and
sub
fwait
dec
and
or
add
mov
add
add
jmp
bound
xchg
pop
pop
int
stos
dec
dec
pop
mov
pop
icebp
out
xchg
ss
add
mov
add
imul
sbb
add
(bad)
test
inc
cmp
dec
adc
mov
add
les
pop
shl
sbb
emms
adc
inc
xor
push
pop
les
mov
push
add
sub
add
and
hlt
mov
(bad)
dec
jmp
add
add
pop
data16
xor
cmp
or
dec
or
daa
adc
add
add
rol
mov
mov
xor
pop
enter
lock
retf
add
add
add
popf
into
jmp
aaa
mov
push
(bad)
hlt
mov
sub
ret
out
inc
imul
das
cld
xchg
out
in
add
add
pop
add
pop
mov
icebp
add
das
mov
cmps
inc
daa
std
add
add
int3
and
ins
mov
loopne
rcl
add
mov
in
add
add
add
aam
jecxz
jmp
ret
add
aas
shr
ins
and
out
add
lods
mov
sub
retf
add
inc
add
push
loope
mov
test
sbb
add
and
jno
stos
add
cli
rol
and
add
retf
imul
sbb
sub
add
(bad)
pop
jecxz
lea
add
add
pusha
xlat
push
sti
and
sbb
xchg
fs
scas
add
inc
shr
mov
fidivr
and
lea
xor
aas
and
mov
inc
addr16
jge
ret
push
sbb
sar
mov
push
add
mov
adc
ss
xchg
aaa
push
add
add
add
fcomp
lods
rcr
jae
xchg
(bad)
jl
loopne
in
add
movs
xchg
mov
ret
pop
mov
add
pop
sub
add
or
sbb
iret
push
arpl
retf
dec
pop
pop
pusha
mov
(bad)
cwde
mov
ins
xchg
add
add
mov
jg
and
leave
outs
out
inc
add
and
in
or
pushf
out
mov
stc
mov
xchg
call
outs
stos
loope
lods
out
add
fdivp
xchg
xor
jmp
add
mov
add
add
fild
dec
lock
sbb
add
and
pop
pushf
(bad)
mov
add
add
leave
imul
mov
data16
daa
pop
sub
mov
add
add
sti
enter
add
dec
retf
sbb
cli
add
and
repz
loopne
push
and
add
out
cmp
dec
in
mov
loopne
js
cdq
add
mov
mov
ret
hlt
add
add
add
fnsave
push
add
and
sub
(bad)
inc
jecxz
mov
sbb
sub
add
add
add
jbe
out
jl
jmp
ret
cmps
add
lock
add
add
add
mov
nop
jmp
mov
rcl
add
inc
pop
push
mov
add
lea
and
lahf
push
inc
cmp
and
cmc
and
inc
das
add
add
push
mov
popf
arpl
cmc
pop
sti
rcl
and
scas
fnstsw
push
clc
cmp
in
cdq
add
add
cvtps2pi
test
fmul
rcr
ret
add
jae
mov
pop
dec
add
add
clc
sbb
mov
cmp
sbb
fadd
xchg
xlat
add
cmps
adc
xchg
dec
add
add
leave
mov
sbb
jp
add
imul
adc
arpl
cmp
add
(bad)
ret
frstor
fs
sub
xor
sbb
add
iret
pop
add
add
leave
add
push
mov
aaa
add
int3
xor
jne
dec
sti
repnz
movzx
in
aas
add
retf
and
add
add
fild
pop
and
or
pop
daa
sbb
jb
pop
loopne
ins
sbb
sub
xlat
loop
xchg
add
xor
xor
sub
jge
pop
add
add
add
imul
ret
jecxz
xchg
sbb
fwait
sti
jle
add
adc
rcl
inc
stos
out
mov
add
rol
(bad)
imul
cmps
js
add
out
in
mov
ret
xchg
and
xor
add
add
add
outs
std
add
movs
jne
xchg
push
cdq
mov
sub
add
sti
int3
push
push
aas
sub
jle
add
add
inc
lock
inc
and
out
out
call
add
js
xchg
cmp
xchg
add
add
or
out
int3
mov
jl
add
sti
mov
sub
jmp
repz
in
or
add
jg
cmp
cmp
xchg
add
add
fdecstp
and
add
jbe
pop
pop
sub
lods
ins
and
push
fistp
cmp
push
add
jg
add
fstp
xchg
sub
jne
pop
lods
inc
add
pop
adc
fs
xor
out
push
stos
bound
add
add
inc
imul
mov
jno
adc
xchg
xchg
cmp
mov
add
add
lods
mov
pop
pop
mov
pop
push
call
add
xor
add
add
jo
add
push
les
xchg
pop
mov
mov
call
scas
out
add
add
and
les
push
push
jne
stos
ja
enter
push
into
shr
adc
push
inc
add
add
pop
push
popf
add
dec
imul
jae
inc
mov
push
jmp
fild
add
add
cdq
add
jle
adc
sub
sar
push
popa
cmc
add
std
int3
cs
clc
add
add
add
add
jno
adc
sar
imul
mov
xlat
inc
sub
loopne
xchg
cmp
pop
jns
add
add
lds
idiv
pop
sahf
sub
(bad)
fsub
std
xor
les
and
or
add
add
pop
ins
dec
add
hlt
add
repnz
lock
ja
aas
mov
adc
mov
push
xchg
add
xchg
lods
daa
mov
nop
add
add
mov
lods
sub
test
fnstcw
pop
or
add
add
add
mov
add
out
jno
mov
inc
add
jne
add
imul
add
add
test
(bad)
daa
jmp
push
pop
jae
add
fistp
adc
fwait
(bad)
xor
dec
add
add
add
les
scas
xchg
add
repz
cwde
add
(bad)
(bad)
add
pop
dec
add
add
push
jmp
bnd
add
lahf
(bad)
mov
adc
cmc
jne
add
add
jnp
inc
iret
adc
sbb
jo
push
adc
push
add
ds
add
cmova
lock
pop
int3
sbb
movs
sbb
adc
iret
fmulp
jo
pop
add
adc
add
add
fdiv
add
movs
inc
(bad)
call
inc
pop
neg
cmp
cld
sbb
add
pop
xchg
stc
ds
and
adc
nop
shr
not
adc
fwait
mov
xor
pop
add
add
sub
in
and
test
push
ds
test
paddsw
sub
ja
jnp
add
add
add
sahf
inc
and
mov
ja
dec
xor
jg
pop
(bad)
push
inc
and
lahf
sub
add
add
into
sub
outs
sub
jp
add
lds
pop
inc
mov
scas
add
xchg
mov
or
add
add
(bad)
aam
mov
push
jle
lods
popa
in
adc
jl
in
add
mov
je
add
add
pop
div
loope
adc
fadd
fwait
stos
adc
icebp
in
add
push
lods
xchg
sub
add
add
xor
mov
add
push
mov
add
pop
and
push
sub
add
pushf
ja
stos
ret
repnz
and
ret
or
add
inc
lock
lods
jne
rol
movs
pop
mov
sahf
add
pop
(bad)
ja
pusha
scas
mov
rol
add
add
xchg
jno
pop
addr16
loop
ds
add
lea
ret
add
add
add
std
add
popf
jns
cmovne
add
mov
mov
xor
and
adc
add
add
xor
pop
push
adc
adc
mov
push
out
retf
call
add
add
and
nop
mov
out
xlat
pop
add
test
add
jmp
pusha
cmp
fadd
add
add
stc
(bad)
add
and
repnz
lods
rcl
add
cmps
sub
mov
int
add
add
and
cmp
inc
push
loope
mov
sar
out
add
pushf
daa
aad
test
add
mul
repz
adc
add
fldcw
jnp
sub
into
lahf
jbe
mov
stos
cmp
out
add
add
add
adc
pop
push
inc
cmp
addr16
popa
call
add
out
and
shl
add
add
fadd
adc
push
mov
and
xor
push
cmp
lock
add
movs
mov
pop
or
jns
push
jno
add
sbb
sub
inc
mov
mov
push
out
ret
add
add
add
adc
jno
call
push
dec
xor
add
inc
and
pop
es
mov
add
add
jge
repnz
cmp
scas
add
cdq
imul
fcmovu
mov
xchg
xchg
std
sbb
add
das
inc
scas
int
adc
addr16
popa
mov
hlt
add
xor
lock
add
add
int
push
ror
add
inc
add
jo
ss
add
push
push
rcr
fistp
(bad)
nop
jns
add
add
lock
pop
xchg
in
hlt
mov
push
mov
add
add
add
aad
dec
pop
xchg
add
(bad)
push
nop
xor
or
arpl
call
add
add
add
add
mov
inc
repnz
retf
clc
test
aad
mov
imul
lds
lahf
adc
add
sti
sub
stos
add
xor
cld
cmp
add
add
push
cmp
push
cli
pop
retf
sbb
mov
add
mov
iret
jp
in
fcmovne
sbb
mov
int
hlt
adc
scas
hlt
inc
jnp
xchg
retf
cdq
add
add
call
add
in
xlat
cmp
pop
or
sub
(bad)
jb
rol
inc
cmp
add
add
add
loopne
pop
xchg
out
das
add
mov
aaa
cmp
jmp
xor
jl
dec
add
add
dec
pop
jnp
push
and
dec
add
add
call
retf
int
rcr
jb
add
add
neg
add
inc
leave
ficomp
bndldx
mov
xor
inc
jmp
add
icebp
inc
aas
cdq
shr
dec
or
das
sahf
xor
dec
into
loopne
add
cwde
js
add
add
add
adc
in
sub
mov
cmps
ss
popa
add
mov
add
add
inc
ret
jle
add
jo
xchg
pop
adc
or
or
jge
inc
mov
xor
jle
add
add
dec
jecxz
and
pop
dec
add
cmp
xor
dec
add
or
add
add
loopne
cmp
stos
mov
dec
jne
rol
mov
retf
add
sub
or
add
add
stos
je
and
cmp
add
sub
add
add
add
cld
inc
(bad)
pop
jo
ja
sub
mov
lods
mov
test
jb
cmp
pop
into
rcl
add
add
add
sti
jbe
xchg
in
pop
cwde
mov
enter
pusha
nop
in
ficomp
dec
inc
loope
ins
add
pop
add
add
ret
fidivr
push
add
push
(bad)
(bad)
out
adc
ins
imul
add
cwde
push
inc
pop
fstp
push
lods
push
fsub
or
push
mov
hlt
inc
add
sti
push
sub
add
add
push
aam
xchg
mov
add
movs
ret
lods
add
cmp
icebp
mov
xor
mov
jns
add
add
add
push
jle
lods
inc
imul
stos
scas
jb
jno
add
movs
mov
jo
add
add
add
add
dec
out
add
ins
push
pop
mov
add
pop
nop
ja
addr16
add
xor
add
mov
pushf
jnp
add
enter
xor
add
add
imul
mov
imul
xchg
das
xchg
rcl
jnp
movs
ins
mov
add
add
or
popa
pop
jne
sbb
inc
pop
ds
scas
lock
(bad)
mov
add
cwde
xor
xchg
sub
out
loope
imul
jae
mov
push
add
add
adc
ret
adc
fild
inc
stos
jmp
sahf
cmp
add
jle
repnz
test
repz
add
test
int
sbb
(bad)
(bad)
call
cld
retf
inc
dec
pop
add
ja
xor
out
lock
add
add
sbb
imul
mov
push
test
popf
psadbw
fbstp
or
add
add
pop
jge
dec
sbb
add
xchg
popf
and
adc
inc
and
leave
shr
shl
add
add
jbe
(bad)
out
add
mov
sub
or
push
jb
add
fcmove
stos
fnsave
and
ret
add
add
repnz
ret
scas
jmp
add
out
xchg
add
mov
and
xchg
inc
daa
cld
add
add
out
clc
(bad)
ja
dec
adc
push
rcr
into
add
xor
jmp
pop
aas
fadd
add
(bad)
sub
and
mov
inc
or
add
jb
add
cli
add
add
popf
es
xchg
add
sbb
mov
and
in
fnstcw
mov
add
add
mov
hlt
nop
add
jle
cmp
mov
test
mov
push
add
into
fdiv
add
add
add
jp
dec
and
xchg
loopne
add
dec
mov
in
jmp
shl
add
mov
add
add
js
mov
ins
pop
add
or
push
repz
mov
pusha
xchg
xchg
add
add
add
in
lods
xor
add
punpckhwd
stos
cli
and
ret
pop
popf
inc
ja
jle
add
add
je
pop
mov
leave
dec
sbb
add
mov
sti
cwde
ret
xchg
add
cmp
add
add
jmp
xor
outs
sbb
inc
or
add
aam
sahf
inc
jno
popf
add
add
add
scas
shl
add
sbb
add
jnp
jmp
add
rol
inc
push
add
add
lahf
add
mov
push
mov
xlat
data16
aaa
pop
inc
pop
dec
and
movs
mov
fidiv
push
xor
add
add
clc
adc
int3
add
inc
test
dec
(bad)
sti
and
jmp
out
icebp
mov
mov
mov
add
add
cs
inc
add
sbb
mov
inc
push
jmp
call
js
sldt
add
sub
movs
cmp
rol
or
sti
jns
icebp
popa
or
mov
sahf
and
add
add
in
imul
dec
stc
clc
retf
inc
add
xchg
mov
add
dec
ins
std
mov
pusha
cmp
add
pop
add
loope
push
ret
retf
pop
add
dec
in
and
mov
adc
mov
add
add
add
xor
mov
shr
sti
pushf
out
mov
add
dec
fdivr
sbb
addr16
call
stos
js
pop
lds
(bad)
rcr
lahf
or
add
add
add
mov
mov
jmp
add
mov
inc
mov
call
add
add
test
fisubr
stos
cmp
push
push
movs
mov
enter
sub
pop
or
xor
dec
fidivr
add
add
iret
fmul
add
adc
jg
xchg
sub
jp
out
add
add
popf
sahf
ins
ss
add
shr
cmp
(bad)
push
push
push
dec
pushf
inc
repz
out
cdq
mov
add
add
sub
sub
test
loope
jns
push
leave
adc
psllq
jne
pop
add
add
inc
jg
dec
mov
arpl
add
adc
outs
xor
pop
mov
call
shl
hlt
setns
add
dec
adc
sbb
js
mov
es
mov
add
add
sub
lock
adc
icebp
cmp
loopne
jmp
(bad)
jae
xor
add
add
cs
fidivr
adc
inc
in
mov
and
adc
les
inc
adc
add
add
jbe
adc
aaa
ror
adc
rol
add
mov
imul
cmp
nop
mov
add
add
and
cmp
and
sub
arpl
push
pop
xchg
(bad)
add
add
pop
push
js
mov
xchg
pop
mov
loopne
jne
sub
rol
pop
jg
cli
jae
add
add
add
mov
pop
fmul
gs
ds
les
mov
(bad)
int3
pop
in
cli
adc
add
add
add
push
das
mov
popf
out
pop
xor
mov
inc
lea
retf
sub
ror
add
add
add
jns
or
add
daa
sar
nop
int3
loopne
cmp
add
jg
or
add
add
mov
sbb
mov
jmp
in
inc
jecxz
test
(bad)
adc
out
jbe
add
add
push
movs
es
inc
sahf
sbb
inc
add
test
add
dec
add
add
xchg
scas
cmp
jmp
mov
add
mov
xor
jge
add
add
inc
neg
mov
jns
adc
mov
test
xchg
add
pop
jno
mov
add
add
add
push
mov
and
ins
out
jmp
jnp
fwait
enter
stos
fiadd
add
add
popa
push
jmp
dec
xor
scas
popf
imul
cmp
in
sub
mov
add
add
aam
dec
add
mov
imul
sub
retf
sbb
add
add
inc
loope
push
push
mov
or
and
xor
lods
push
add
add
xchg
call
gs
fstp
add
sbb
sub
add
arpl
add
add
add
add
jg
add
in
or
aaa
jae
es
pop
in
ja
fdiv
je
mov
add
addr16
pop
sar
push
pop
popf
jg
inc
sub
popa
clc
inc
mov
or
(bad)
inc
adc
add
add
shl
adc
leave
gs
inc
add
xchg
ret
addr16
sbb
rol
lahf
push
ret
add
mov
add
mov
jecxz
test
add
dec
mov
push
les
cld
jle
add
xor
pop
or
add
add
add
xor
push
test
sar
ins
mov
fwait
add
inc
cmp
ret
xchg
repnz
or
add
add
js
add
rol
and
call
add
add
inc
push
hlt
cmc
pop
mov
arpl
pop
(bad)
repz
lods
and
add
fwait
cmps
add
add
adc
jl
xchg
dec
repnz
add
add
pop
xor
dec
inc
add
aam
sbb
inc
(bad)
lock
jb
add
add
add
inc
div
jl
add
pop
sahf
fidivr
(bad)
or
js
scas
mov
add
add
jg
arpl
std
sbb
fnstenv
fcmovnu
dec
inc
bnd
xchg
jge
dec
inc
cmp
retf
cdq
add
add
test
add
addr16
add
dec
dec
jecxz
push
aam
add
imul
retf
cmp
add
add
pop
add
pop
cmp
push
adc
mov
and
push
mov
add
sbb
gs
scas
add
add
jp
add
jge
popa
mov
mov
loopne
xchg
add
inc
dec
ss
out
dec
jbe
js
add
add
add
test
adc
lods
or
jge
das
mov
add
stos
push
int
add
add
ja
sub
cmp
mov
add
jmp
jl
cld
mov
add
or
mov
int
add
xchg
out
retf
daa
cmc
add
repz
add
cmp
add
aam
dec
mov
or
mov
dec
mov
add
add
sub
push
xchg
sub
add
add
test
lods
fwait
and
add
shr
cmp
cli
add
push
sbb
mov
add
arpl
imul
dec
cdq
outs
cmps
sub
jb
add
adc
cli
xchg
and
in
add
add
mov
adc
sub
adc
sbb
jb
cwde
jno
addr16
movs
sub
(bad)
in
add
add
nop
sbb
jbe
rcr
pop
and
ret
mov
test
into
mov
add
add
sbb
jecxz
mov
loop
cmp
add
pop
add
fiadd
add
add
cwde
add
pop
add
mov
cmps
sahf
jbe
cmc
dec
repz
add
sub
clc
fwait
retf
add
add
add
dec
ret
fxch
xor
mov
pusha
jbe
outs
dec
retf
lods
mov
jo
and
mov
push
mov
sbb
push
push
xor
sbb
neg
out
add
(bad)
call
xlat
add
add
add
int
enter
popf
fst
(bad)
sbb
(bad)
dec
jge
add
push
sti
daa
add
add
add
or
inc
inc
in
(bad)
and
aaa
mov
int
mov
xchg
add
stc
das
add
add
add
pop
or
or
retf
sbb
add
iret
pop
fidivr
mov
add
mov
sub
inc
outs
mov
jmp
fld
mov
out
xchg
int
repnz
add
jge
popa
mov
(bad)
xlat
dec
fadd
pop
addr16
mov
nop
add
add
xchg
xor
pop
cmp
add
mov
imul
imul
jne
clc
add
(bad)
or
add
add
imul
test
repnz
xlat
xchg
retf
add
lahf
in
adc
add
add
inc
xchg
mov
outs
jmp
add
mov
popf
jno
xor
add
enter
pop
je
add
add
add
mov
stos
pop
es
add
repnz
(bad)
repz
add
js
add
or
retf
les
add
add
mov
loop
and
(bad)
push
sub
stos
push
ror
clc
jnp
fcom
xchg
add
add
sub
cmp
mov
pop
mov
out
int
rol
aam
xchg
data16
xor
aad
add
add
or
xor
sar
add
outs
mov
ret
inc
xor
in
cmps
jb
push
add
add
push
mov
sbb
lock
scas
add
(bad)
dec
add
in
mov
and
fist
mov
dec
dec
cmp
mov
(bad)
jae
test
fldenv
test
add
sar
sub
xchg
bound
shl
lods
in
jl
add
xchg
xchg
call
add
add
sahf
push
sbb
adc
je
dec
push
add
shr
int
push
push
pop
mov
add
lods
bound
leave
or
data16
sbb
push
cmp
(bad)
enter
jmp
add
sahf
test
sub
mov
xor
rol
out
sbb
out
add
jae
xor
adc
add
add
add
xor
pop
add
sbb
fld
inc
test
cmp
in
nop
sub
sti
ins
add
add
outs
add
scas
aam
call
jae
addr16
adc
mov
jecxz
fsub
inc
add
add
add
retf
sbb
sub
dec
dec
cmps
pop
sbb
rcl
pop
scas
and
mov
add
add
fcom
cmp
sbb
icebp
cmp
jns
xstore-rng
cmps
(bad)
jg
inc
sbb
adc
add
mov
cwde
loope
xor
les
inc
jae
or
adc
adc
add
add
jb
pop
push
in
sub
pop
test
mov
push
mov
popa
jge
lds
cmp
add
out
xor
adc
add
add
sub
jmp
sub
loop
push
jp
mov
imul
daa
mov
jecxz
add
add
jno
mov
jbe
cmp
jo
ins
adc
or
fiadd
mov
imul
jmp
add
add
aaa
and
cmc
sub
mov
push
and
fild
and
aam
inc
add
dec
lock
add
mov
add
push
and
sub
fcompp
jle
rol
xchg
aam
popf
pop
in
mov
lock
add
dec
test
add
and
add
fadd
(bad)
cmp
or
mov
and
add
add
add
dec
ss
xchg
push
and
or
add
(bad)
jge
enter
add
add
push
stc
sbb
int3
js
lds
add
clc
stos
push
pop
adc
mov
test
cdq
loop
pop
mov
fld
into
fidiv
jp
dec
add
jnp
jb
add
add
pop
add
mov
or
aas
mov
hlt
add
add
cmp
add
add
cmp
out
mov
aas
xor
add
pop
pop
aaa
add
iret
jp
add
add
outs
inc
rol
pushf
xchg
ja
add
loope
mul
fidiv
in
aad
rol
loopne
pop
mov
icebp
mov
add
add
pushf
add
test
fimul
sar
mov
pop
aad
bound
pop
inc
add
add
add
sti
jo
repz
add
int3
dec
cmp
add
push
aad
ss
adc
mov
add
add
fld
dec
test
sbb
sub
pop
sbb
in
xor
addr16
retf
repz
add
add
add
cmp
jle
sub
in
add
outs
adc
jge
inc
add
sbb
fs
cmps
add
pop
je
add
add
dec
push
stos
add
sahf
repz
or
and
sbb
cmp
add
add
add
ret
xchg
inc
lds
loope
jge
mov
jmp
mov
add
add
pop
cmc
and
aaa
movq
mov
add
movs
mov
sbb
add
add
pop
add
xchg
xchg
mov
fmulp
stos
imul
cdq
clc
dec
add
add
add
or
xchg
jecxz
fadd
xor
xor
mov
inc
mov
add
and
nop
add
pop
dec
mov
fcomp
cmp
jae
add
add
add
dec
mov
jmp
addr16
call
fnstenv
push
or
xchg
inc
ret
xor
add
outs
add
pop
fisttp
pop
add
push
mov
lods
add
(bad)
int3
adc
add
add
add
add
cld
push
pusha
outs
xchg
add
out
mov
cmp
and
add
fadd
icebp
jno
popf
or
es
cmp
pop
inc
push
xor
int3
add
pop
mov
aas
add
add
add
sub
adc
out
pop
in
or
ret
mov
cmp
jl
cmp
add
add
fisubr
in
mov
add
cmp
add
pop
mov
add
loopne
add
add
fldcw
lock
fdivrp
add
adc
scas
lock
cmp
cwde
movs
fs
add
add
add
jo
mov
add
xchg
push
(bad)
(bad)
jbe
fdivr
add
in
add
add
in
cli
inc
loop
test
adc
rcr
pushf
sbb
clc
and
add
add
pusha
add
xchg
xor
out
ror
imul
jmp
arpl
add
add
pop
xor
jbe
add
sub
outs
sbb
mov
dec
shl
add
mov
inc
push
cmp
add
call
dec
(bad)
movs
stos
fs
outs
pop
ret
mov
add
add
xor
and
adc
call
cli
add
es
sub
out
fldenv
add
add
add
pop
arpl
sbb
push
jecxz
sub
cmp
std
and
test
add
add
dec
lods
add
dec
add
or
add
add
fstp
imul
jmp
pushf
push
jl
add
pop
cmps
movs
popa
add
add
mov
(bad)
cmps
mov
fsubp
lock
pop
test
mov
xor
addr16
pop
js
dec
pop
dec
dec
add
add
add
jnp
imul
sbb
sbb
inc
jge
loop
jmp
push
and
das
pop
add
add
(bad)
pusha
add
inc
sbb
add
in
xor
pop
pop
jno
addr16
or
add
add
add
add
or
push
ds
pop
(bad)
jmp
cs
ret
push
xchg
mov
or
xor
add
add
add
aaa
sub
push
mov
add
movs
fstp
loopne
add
sub
add
add
xchg
sub
add
cmp
add
mov
into
mov
or
cmp
add
add
xlat
lock
add
retf
out
jge
(bad)
dec
js
adc
fsub
inc
dec
pusha
add
sub
add
add
cwde
push
add
cmp
push
loopne
inc
add
jecxz
mov
add
add
cwde
stos
mov
adc
xor
daa
and
sub
and
jne
push
dec
add
mov
scas
mov
or
sar
fadd
add
add
sub
jmp
mov
jle
fild
sbb
mov
cmp
add
sub
or
add
jl
ret
outs
jo
out
xor
sti
cwde
push
mov
xchg
bound
push
aas
aaa
push
cmp
mov
inc
popf
sbb
sub
add
add
add
xchg
mov
shl
dec
add
repnz
xchg
adc
mov
inc
jo
movs
dec
sbb
add
add
adc
xchg
fs
mov
(bad)
nop
jno
repz
jecxz
call
pop
pop
xor
add
add
pop
out
dec
inc
and
jle
mov
lods
xchg
sub
fs
add
add
ins
das
fcom
lock
clc
mov
mov
orps
call
add
add
sub
add
lahf
in
add
cwde
in
add
jmp
adc
or
add
add
sub
(bad)
fiadd
loope
outs
cmp
sub
xchg
scas
and
and
fwait
pushf
(bad)
retf
daa
lock
add
add
or
add
mov
and
hlt
add
sbb
dec
push
jge
add
add
add
cmp
add
(bad)
aam
and
or
and
out
outs
pop
je
ror
add
add
ins
cwde
ret
pop
or
mov
mov
loop
xchg
(bad)
loopne
sbb
add
add
add
ds
pop
(bad)
jae
mov
outs
aaa
imul
xchg
jb
push
add
push
add
add
mov
int
shl
pop
add
outs
fs
push
push
add
sbb
lahf
adc
imul
sbb
mov
push
mov
mov
or
inc
imul
add
pop
add
add
or
add
shr
add
or
imul
or
add
add
add
in
scas
fnstenv
adc
cmps
add
cmp
add
or
mov
stc
cld
dec
add
or
in
push
push
cld
push
sahf
pop
jp
cmp
add
add
add
(bad)
cmp
or
mov
xchg
adc
sbb
sbb
add
add
add
in
inc
adc
pusha
sar
shl
add
mov
leave
add
add
push
xlat
(bad)
jo
shr
add
or
add
inc
or
or
pop
add
add
add
retf
in
or
int3
cdq
mov
ret
xchg
pop
sub
sbb
add
add
and
adc
dec
sbb
jo
or
adc
add
mov
mov
add
fisub
std
jno
or
push
adc
jge
push
cmp
pop
sti
out
inc
out
bound
cdq
and
pop
add
add
sbb
ret
daa
test
sahf
cmp
jmp
jl
add
mov
lock
add
add
jne
add
ror
xchg
outs
pusha
add
add
add
adc
push
or
add
or
popa
(bad)
stos
int3
pop
adc
cs
cmps
dec
adc
cwde
add
jnp
leave
inc
adc
jns
and
add
add
enter
jmp
retf
add
(bad)
add
add
loop
scas
les
add
add
out
xchg
mov
xchg
sbb
data16
jecxz
dec
add
push
push
add
add
sub
fild
dec
and
jmp
repnz
xor
mov
ss
cli
add
push
js
dec
add
add
ret
cmc
add
mov
scas
cld
lods
add
and
jnp
outs
mov
push
add
cld
add
add
dec
int3
add
repnz
ins
cmp
mov
fld
add
adc
out
mov
add
add
clc
aam
pop
adc
aas
inc
add
enter
mov
or
mov
scas
out
add
add
cmc
add
cli
lahf
ret
pop
movzx
cmp
mov
call
pop
jle
add
add
inc
mov
push
int
jno
icebp
xor
retf
repz
cli
cmp
jnp
test
dec
fcom
icebp
push
add
add
test
add
add
mov
cs
mov
imul
add
add
cli
pop
add
sar
out
inc
fwait
cmp
mov
mov
inc
add
add
add
imul
or
sar
dec
add
push
pop
add
inc
dec
jb
stos
lahf
pop
dec
aas
cmp
add
add
add
pusha
or
jbe
out
add
mov
lahf
test
mov
push
test
add
outs
add
dec
mov
test
loop
jb
imul
add
shr
adc
add
add
pop
cmp
pop
add
xchg
sub
cld
ret
(bad)
enter
add
add
add
add
leave
test
pop
cmp
mov
cmp
mov
imul
add
add
jge
add
pop
popf
jg
das
mov
push
int3
test
lock
lahf
call
sub
mov
fistp
jnp
pop
js
stos
jns
jne
mov
and
fld
add
add
add
push
hlt
nop
(bad)
push
push
add
mov
mov
das
pop
push
imul
add
add
popa
mov
xlat
cmp
call
pushf
mov
sbb
add
and
sbb
stc
in
mov
add
add
neg
add
pusha
or
mov
mov
test
repnz
sbb
add
jmp
ins
adc
add
mov
mov
sbb
inc
mov
dec
(bad)
sbb
test
jns
ror
add
jb
hlt
adc
movs
cmp
pusha
pop
(bad)
mov
add
add
addr16
pusha
push
jo
xor
mov
test
xor
dec
xchg
daa
cmp
add
add
push
inc
fs
add
jbe
adc
(bad)
retf
add
adc
jmp
xchg
sbb
nop
retf
add
add
add
jmp
mov
aas
add
jg
lock
add
out
push
cmp
sar
jno
js
jg
add
add
adc
shr
and
xor
xchg
ins
xor
add
jae
push
sub
inc
add
add
adc
mov
call
add
xor
jnp
test
pop
hlt
push
sub
pop
lock
sldt
add
pop
add
leave
cmp
jecxz
jb
jns
push
mov
or
or
popa
movs
cs
inc
xchg
add
add
mov
add
mov
xlat
enter
popa
dec
xchg
ror
cs
test
imul
add
jge
add
and
adc
cmp
inc
cdq
sbb
fimul
mov
dec
jmp
add
inc
add
jge
sub
jne
add
ja
add
into
cs
movs
aad
aam
out
add
add
out
inc
sub
mov
sbb
add
movs
xor
idiv
out
(bad)
add
add
fld
inc
cmps
mov
add
sub
and
adc
add
push
dec
xchg
cs
or
add
loopne
add
add
clc
es
pop
fidivr
jo
add
test
jns
pop
jne
add
add
outs
push
fadd
jmp
(bad)
out
add
sbb
pop
mov
pusha
movs
(bad)
add
ret
add
inc
inc
sub
iret
xchg
or
aad
pop
sbb
cdq
add
or
add
dec
fadd
push
popf
adc
mov
pop
out
jg
out
jmp
xor
add
add
jecxz
xor
fbld
out
adc
ja
add
and
push
sub
out
jo
add
add
push
add
jp
out
ret
pushf
and
xlat
ficom
xlat
sti
lock
cmp
add
add
xor
sbb
adc
dec
pop
loope
fcmovbe
adc
imul
sbb
mov
push
jbe
push
add
add
ins
mov
arpl
sahf
inc
dec
pop
jmp
lock
outs
lahf
ins
jge
add
add
mov
and
popf
leave
ror
repnz
jmp
or
nop
mov
add
je
mov
loopne
jb
(bad)
stos
lea
xchg
js
fiadd
lds
cmp
xchg
shl
add
push
test
xor
cmp
add
push
pop
xor
bound
or
aaa
inc
add
add
adc
sub
mov
mov
sub
jo
sbb
aas
push
mov
or
adc
loopne
add
add
int
xor
cwde
fs
jp
loop
add
in
dec
xor
test
add
add
dec
in
and
push
pushf
jo
jg
jnp
lds
pop
add
lods
movs
push
cmp
cmps
add
add
add
add
cmp
retf
or
mov
hlt
leave
cmps
jl
add
sahf
scas
cmp
or
add
add
test
sbb
mov
pop
in
add
xchg
xor
adc
pop
mov
inc
fadd
add
add
adc
pop
pop
push
jp
arpl
pop
xchg
rol
fdiv
imul
aas
xor
ja
add
adc
in
cld
jecxz
fnstsw
shr
(bad)
jo
cmp
rol
add
sbb
mov
in
lock
inc
add
jb
sbb
push
xchg
aad
cmp
mov
add
add
add
test
dec
jno
add
pop
sbb
xor
data16
rcl
xor
inc
xor
add
jecxz
or
dec
dec
cmp
xchg
and
call
ins
add
add
loop
test
cmp
push
push
mov
xchg
or
push
xchg
repnz
add
add
test
jb
add
jecxz
push
or
repz
pushf
loopne
or
es
add
add
mov
aam
add
mov
fld
cmc
(bad)
push
add
xor
add
add
pop
rol
dec
fst
loopne
mov
add
push
sub
add
add
add
loop
ins
stos
xchg
in
add
sti
cmc
add
push
lods
int
lea
std
scas
xchg
cmp
aad
add
add
push
add
icebp
mov
mov
pop
mov
or
arpl
mov
idiv
jl
add
int3
adc
add
add
add
or
push
dec
inc
jns
loop
or
xchg
xor
push
ror
add
add
fwait
in
lods
inc
mov
mov
mov
loope
add
call
aas
add
stos
mov
push
jmp
mov
add
adc
cmps
in
add
jae
imul
loopne
lock
add
add
mov
dec
jl
jmp
or
add
(bad)
mov
aas
ss
add
add
add
shl
sbb
sbb
cmovbe
or
add
add
retf
js
push
adc
jg
rol
pop
sub
add
(bad)
stos
jb
es
add
retf
push
or
mov
add
add
sbb
into
pop
mov
add
fldenv
lds
or
add
mov
neg
fild
das
inc
pop
xchg
scas
mov
sub
pushf
bound
aas
inc
add
add
and
ins
dec
cwde
mov
adc
ds
inc
loope
enter
adc
add
add
iret
or
popf
outs
cld
ror
mov
dec
aam
jge
test
cmc
(bad)
jb
retf
add
add
xchg
stc
(bad)
jmp
ret
sar
add
loop
pusha
mov
add
add
icebp
add
repz
sbb
adc
add
and
mov
push
sti
dec
jmp
mov
inc
add
repnz
les
and
loopne
sbb
sub
jne
gs
pop
add
ja
addr16
hlt
sbb
jle
test
aad
add
add
loopne
push
ins
push
stos
pop
and
push
sahf
inc
out
adc
dec
dec
add
jecxz
cmp
pop
mov
and
sbb
add
add
mov
sub
lods
sbb
mov
scas
add
push
inc
fcom
stos
jmp
test
add
cs
imul
add
pop
push
dec
mov
add
gs
and
add
add
jne
ins
out
pushf
jl
cmp
outs
daa
pop
jae
outs
cmp
popf
nop
jmp
dec
xchg
add
add
sldt
shr
dec
fxch
jecxz
mov
mov
xchg
and
sbb
pop
dec
add
or
mov
loopne
push
test
sti
and
fwait
push
xchg
retf
ret
sbb
add
lock
arpl
in
pop
adc
ss
movs
lods
add
sub
sldt
add
repz
add
shl
shl
jne
add
stos
add
xor
add
add
add
loop
xchg
fwait
adc
pop
mov
hlt
dec
add
aaa
push
daa
sub
add
pop
add
add
pop
jns
cs
jo
out
icebp
jle
ins
fwait
add
(bad)
xor
jmp
add
add
add
push
sub
icebp
mov
add
popa
dec
dec
xor
add
neg
data16
and
les
add
add
int
scas
aaa
arpl
xor
pop
enter
(bad)
adc
mov
fs
adc
lods
adc
add
add
mov
push
pop
xor
das
add
int3
jno
pop
pop
mov
loopne
or
add
add
js
lds
jge
or
lea
add
jb
jnp
cwde
cmp
add
add
add
test
mov
repz
fild
sbb
(bad)
fwait
sub
push
or
add
pop
fld
in
sbb
dec
stos
aam
add
inc
lods
dec
cld
push
add
cmps
xlat
add
mov
mul
dec
enter
mov
sbb
mov
mov
cs
pop
push
mov
in
add
add
add
and
hlt
out
xor
push
add
es
pop
test
mov
hlt
adc
loop
add
add
add
fidivr
out
adc
push
jnp
dec
mov
push
xor
cld
xchg
pusha
nop
sub
add
je
sbb
jae
push
stc
add
enterw
add
pop
rcr
fdivr
add
add
xchg
pop
stos
loopne
push
lahf
pop
stos
scas
cli
cmp
and
jg
add
mov
bnd
xchg
add
or
inc
mov
bswap
icebp
aaa
add
int3
aam
sbb
jp
push
lock
add
add
cwde
jg
cmps
xor
rol
lahf
call
xchg
push
or
push
rol
lea
and
sbb
imul
jp
push
dec
fst
jne
enter
lea
push
add
mov
jno
test
ror
pop
scas
mov
jo
(bad)
mov
in
fild
std
icebp
jmp
loopne
addr16
dec
add
jge
add
xlat
into
test
jmp
in
add
add
add
and
lea
jl
lahf
inc
ja
aad
pop
adc
outs
in
inc
or
aas
mov
add
add
(bad)
test
mov
xchg
mov
aad
ss
rcr
add
xor
inc
fst
jg
or
ficom
mov
out
sub
in
pop
popf
mov
sbb
add
add
mov
add
daa
sbb
shr
fcom
dec
lods
cmp
popf
mov
add
fmul
test
out
cwde
jno
cld
inc
(bad)
iret
push
push
xlat
dec
fcomp
add
jb
cdq
ins
and
mov
add
add
hlt
or
int3
mov
add
sub
ins
repnz
pusha
dec
je
add
add
popa
in
sbb
xchg
scas
leave
loope
dec
hlt
mov
add
call
out
jo
add
add
(bad)
sbb
sub
mov
jmp
inc
xlat
add
sahf
rcr
mov
cmp
dec
or
call
pop
sbb
iret
dec
and
mov
(bad)
jo
xchg
lds
add
push
loopne
add
add
int
ret
adc
sbb
fild
adc
cmp
cmps
popa
sbb
pop
data16
add
sar
xchg
ret
xchg
mov
test
ja
xor
mov
pushf
cmp
dec
add
add
add
je
pop
clc
push
rol
mov
adc
pusha
mov
add
add
add
pop
or
aam
jle
add
sbb
add
scas
xchg
pop
sub
push
cmp
add
loopne
or
jbe
jmp
pop
bound
mov
xchg
imul
pop
sbb
add
add
adc
mov
xchg
(bad)
repnz
jmp
mov
pop
mov
add
add
stos
lods
add
popa
fiadd
jae
and
xchg
stos
push
loope
add
adc
ret
add
add
rol
rcr
jb
and
sbb
call
repnz
mov
xchg
add
add
add
loopne
sub
out
add
popa
loop
add
push
lea
add
add
add
mov
adc
sbb
and
imul
add
sbb
jmp
add
add
loop
rcl
adc
inc
test
mov
add
jg
fcom
fisub
xor
add
add
(bad)
cli
mov
add
cmp
out
jg
mov
pusha
popf
add
jns
jbe
mov
add
(bad)
fld
inc
jo
push
xchg
or
iret
sbb
rol
dec
dec
mov
nop
add
add
imul
mov
sets
loopne
out
js
xor
add
jmp
add
cli
or
addr16
pop
jb
mov
xor
cmp
xchg
lds
daa
add
lock
pusha
add
add
add
cmp
movs
jp
push
dec
push
cmp
xor
bound
and
popa
nop
push
mov
aas
sar
add
add
inc
add
sub
add
cwde
sbb
pop
cdq
xchg
test
or
ret
add
add
ins
shr
sub
loopne
hlt
sbb
push
fcomip
jle
adc
pop
(bad)
sti
mov
add
add
lock
xor
cmps
repnz
pop
push
sub
lods
mov
pop
add
lock
add
add
pop
inc
xor
push
popf
jmp
in
test
add
dec
frstor
or
inc
add
add
add
xlat
movs
jle
jo
in
pop
sbb
push
dec
sub
enter
sub
push
ins
add
add
dec
dec
pop
push
add
cmp
sub
adc
shl
pushf
shl
pop
or
add
ins
cs
pop
mov
push
xchg
push
add
mov
aaa
in
cli
loop
cvtpi2ps
push
xor
add
add
cmp
mov
addr16
inc
retf
ret
rcr
cdq
add
or
out
add
add
add
cmp
push
adc
pop
sahf
test
mov
mov
jne
test
clc
in
add
add
imul
call
add
inc
pop
xor
add
mov
mov
es
and
add
idiv
fwait
push
lahf
cmp
sti
sbb
fisttp
add
fwait
ins
shrd
sar
sbb
and
mov
sbb
addr16
int
add
cmp
add
movs
fbstp
add
add
leave
fwait
jnp
pop
cmp
mov
mov
shl
pop
pop
sub
add
xlat
add
add
sub
add
outs
sbb
test
in
add
inc
ins
data16
adc
adc
push
cmp
mov
add
mov
inc
push
and
mov
sbb
(bad)
mov
pop
adc
popa
jge
or
add
add
and
js
add
lock
add
gs
fidivr
xchg
add
test
add
add
into
xchg
cmp
mov
push
pop
out
mov
mov
packuswb
arpl
sar
jns
add
cmp
add
add
mov
sbb
in
or
cmp
push
mov
cmp
dec
xor
push
pop
dec
dec
jmp
push
cmp
fcomp
popa
outs
out
pop
jnp
add
aad
xchg
push
sbb
xchg
inc
add
add
sub
add
xor
ss
test
inc
add
arpl
imul
(bad)
fadd
add
add
jns
out
sbb
jae
rcr
rol
retf
pop
sub
sub
add
add
sti
shr
lahf
pop
fmul
lds
jno
test
dec
pusha
xlat
test
adc
mov
sbb
cdq
push
push
inc
add
jns
push
push
cmp
icebp
leave
jae
xchg
add
add
inc
sbb
or
mov
pop
out
add
xor
icebp
lea
mov
add
add
cli
push
leave
fldenv
pop
mov
lea
ds
pop
stos
stos
pop
test
push
pop
add
add
or
pop
sub
mov
jle
retf
and
mov
dec
pop
jecxz
push
dec
sahf
inc
xchg
add
add
jp
out
ja
add
or
aam
(bad)
ret
pop
jnp
inc
sbb
rcr
add
add
pop
add
mov
stos
push
sbb
bound
add
retf
jg
les
sbb
call
add
add
pop
hlt
add
mov
movs
call
and
ror
add
xchg
lahf
add
add
sbb
popf
movs
add
test
pop
cwde
xor
ins
push
loopne
ss
add
cmp
and
add
add
xor
xchg
popa
shl
xor
js
sub
movs
add
daa
sbb
lods
clc
int
add
add
add
stos
inc
outs
jmp
cld
adc
and
call
ret
hlt
movs
add
movs
ret
ins
push
mov
clc
cmp
adc
push
dec
jg
(bad)
popf
add
adc
faddp
sub
nop
repz
xchg
sbb
add
jns
pop
or
scas
add
jg
pop
clc
and
stos
out
mov
add
xchg
add
add
fisubr
pop
add
push
dec
hlt
xor
push
or
add
cmp
add
add
jne
jbe
orps
dec
clc
rol
int
and
outs
inc
cli
aam
fst
movs
mov
add
pop
fwait
stos
add
mov
pop
mov
in
lock
add
movs
pop
aas
mov
cmp
daa
xor
mov
add
jle
add
cli
xchg
out
jae
sub
add
push
dec
mov
repnz
adc
mov
add
add
lods
add
push
call
mov
mov
cmp
mov
nop
inc
aam
jecxz
add
add
adc
test
ror
mov
je
xchg
rol
dec
stc
adc
cld
cmp
gs
add
push
mov
lock
mov
pop
test
inc
into
cwde
inc
pop
and
add
add
sub
dec
inc
dec
jns
enter
sti
mov
push
mov
ja
out
cmp
jp
or
add
add
add
cdq
sub
and
fsub
shr
repz
es
cld
ss
mov
add
add
out
hlt
and
cmps
add
mov
popf
adc
xor
js
add
push
mov
dec
enter
fstp
and
and
retf
retf
mov
add
add
add
popa
cmps
adc
imul
push
ret
add
xchg
es
add
add
cmp
std
sub
jge
push
mov
add
cdq
gs
sbb
test
add
add
shr
add
js
cwde
shl
adc
ds
add
sub
push
loopne
and
inc
adc
add
add
push
dec
add
loop
xchg
dec
in
idiv
mov
add
enter
jo
loop
add
add
pop
cwde
(bad)
push
and
or
add
sahf
xchg
dec
add
xchg
xchg
aam
jne
or
add
add
rol
cmp
fcomp
add
loopne
fwait
jns
std
add
sbb
(bad)
fld
fisub
jge
add
add
rcr
in
mov
adc
xchg
popf
xlat
add
inc
add
add
and
jge
sbb
mov
outs
in
mov
loopne
pop
add
mov
loopne
add
mov
sub
and
inc
add
iret
adc
mov
push
add
add
jmp
push
jae
(bad)
mov
lods
push
mov
xor
adc
add
add
mov
js
push
imul
imul
out
fs
aaa
bound
add
add
add
fwait
inc
xchg
add
add
enter
dec
and
sbb
rcr
add
add
hlt
in
add
mov
jge
add
cmp
mov
add
in
and
test
add
mov
mov
fs
dec
rcl
stc
xchg
pop
repnz
sbb
inc
scas
xchg
cdq
sub
ret
inc
add
add
adc
test
cmps
call
add
ds
push
add
and
out
loop
aas
add
add
add
xchg
(bad)
push
fdivr
jmp
add
jae
mov
repz
call
add
add
test
inc
jge
cmps
mov
mov
add
enter
adc
paddd
add
sbb
add
sbb
xor
ror
or
cmps
mov
sbb
arpl
inc
mov
add
add
lahf
push
repnz
cmps
push
les
test
pop
cmp
cld
std
ds
add
jl
add
add
cli
cmp
sbb
and
add
in
dec
push
xchg
xchg
iret
sbb
jo
adc
cmp
add
cmp
adc
add
bound
and
xchg
add
add
cmp
icebp
push
dec
or
pop
add
imul
call
add
push
and
lock
add
ins
push
jne
jmp
cmc
xor
or
jmp
adc
sbb
cli
leave
stos
out
jae
and
add
add
fisttp
mov
adc
add
psubw
xor
lea
add
add
in
add
(bad)
sub
ins
arpl
outs
pop
mov
pusha
push
inc
cdq
cmp
push
add
add
cmp
(bad)
in
xlat
sar
fcmovbe
mov
xor
dec
je
mov
mov
push
jnp
inc
ror
addr16
add
shl
fcomp
pop
loope
fnstenv
bound
add
add
daa
push
les
inc
mov
or
mov
jecxz
add
jae
jne
div
add
add
jle
fistp
ins
push
push
cmp
pop
xchg
xchg
cmp
cs
into
fadd
scas
je
add
add
sbb
not
jns
pop
repnz
test
aas
jp
add
add
add
rcl
(bad)
imul
in
ficom
dec
or
add
in
cmp
add
xlat
add
add
loopne
imul
sbb
scas
in
int
les
jg
add
and
xchg
add
add
ret
lea
cs
xchg
or
jle
or
jno
(bad)
sbb
pop
sbb
aas
add
add
pop
adc
test
add
lock
add
mov
cmp
cmps
sbb
xchg
jo
inc
test
jno
mov
add
add
fsub
jno
add
dec
mov
aaa
popa
mov
cmps
xchg
inc
sbb
mov
aam
dec
pusha
add
add
cmp
push
mov
xchg
and
adc
dec
popf
out
jmp
ja
add
add
or
xchg
mov
mov
in
and
mov
push
add
add
test
aad
jl
push
pop
jle
loop
ss
sti
add
xchg
xchg
sbb
mov
mov
int
add
add
push
pop
sub
inc
ret
ret
das
mov
jle
lods
sbb
mov
loope
cmps
add
add
es
pop
mov
icebp
stos
fisub
and
push
adc
add
jne
add
add
xor
or
ret
add
mov
cs
rcr
fcomi
xchg
clc
add
add
rcr
or
(bad)
cmp
mov
(bad)
out
adc
push
mov
jge
imul
retf
add
jno
pop
das
lock
add
call
mov
mov
int
call
add
sbb
stos
pop
pusha
lock
lods
add
add
mov
in
xchg
scas
sub
clc
add
add
add
imul
das
xor
popa
cmps
mov
stos
and
test
jmp
loopne
adc
or
sbb
hlt
jnp
jecxz
adc
cli
lock
add
add
inc
jmp
rcr
pand
nop
test
jo
cwde
adc
sub
inc
add
add
add
repz
xor
xchg
add
icebp
sti
dec
xor
and
cld
dec
mov
add
(bad)
js
add
addr16
repz
mov
jmp
jl
push
mov
cld
and
loopne
add
mov
data16
dec
xlat
adc
sub
and
adc
aam
daa
add
add
jo
xchg
jmp
pop
movs
in
add
imul
jmp
add
push
add
jnp
add
push
mov
pop
xchg
inc
xchg
inc
loopne
dec
bound
add
cmp
in
je
lock
add
xchg
add
(bad)
stc
repz
sub
ins
outs
loope
cmp
jmp
fs
add
test
cwde
add
add
jne
movs
imul
ret
(bad)
mov
add
sub
sub
add
scas
test
retf
cmp
add
jne
pop
outs
pop
add
ror
xchg
(bad)
fdivr
xchg
jbe
add
add
mov
add
ret
mov
add
xchg
sub
pop
jp
add
add
add
cwde
add
add
add
and
dec
outs
and
mov
mov
add
push
cmp
dec
push
stos
or
f2xm1
movs
dec
lds
jae
(bad)
mul
adc
pop
vmwrite
or
add
push
jb
out
jne
xchg
js
es
sbb
mov
inc
mov
or
sar
add
push
or
sbb
pop
add
xchg
sbb
and
push
add
cmps
mov
add
add
add
mov
or
(bad)
or
and
clc
pop
loopne
xchg
mov
pushf
add
retf
dec
mov
in
push
add
add
add
cmp
mov
imul
aas
das
xlat
aam
and
bound
test
jp
jg
jo
pop
push
add
add
pusha
mov
dec
jo
lods
scas
retf
mov
nop
jle
mov
add
xor
add
add
add
mov
xchg
out
call
cdq
mov
cmp
add
or
add
add
lds
loope
adc
add
les
mov
add
out
pop
test
test
popa
add
gs
add
add
lahf
or
outs
test
mov
cli
jmp
pop
xchg
sbb
retf
rol
add
mov
addr16
mov
push
cmps
or
daa
popa
lds
rol
enter
das
add
add
mov
addr16
add
stos
in
add
cld
in
and
jecxz
les
sahf
sub
lods
add
add
pop
not
adc
adc
adc
add
pop
out
inc
adc
push
jne
jnp
add
add
add
sbb
add
fisttp
js
cmp
lods
add
mov
lock
mov
lds
add
add
add
sub
adc
jne
mov
xchg
add
(bad)
xor
sub
jmp
mov
sub
adc
add
adc
clc
shl
in
add
retf
(bad)
cmp
add
dec
dec
int3
add
push
lahf
aas
mov
imul
mov
es
jp
add
repz
add
rcr
cmc
int3
xchg
adc
adc
lods
stos
or
add
mov
ror
sub
adc
sbb
cmps
xchg
add
sti
lods
add
xchg
inc
add
fisub
(bad)
rol
or
pop
cmp
xchg
pop
sub
xor
out
cmp
(bad)
mov
mov
push
ds
aas
add
lods
int
or
(bad)
cmp
xlat
add
int3
dec
add
add
mov
add
das
jg
add
dec
fist
add
xor
pop
add
add
imul
inc
imul
xchg
les
adc
data16
dec
dec
mov
xchg
push
add
add
mov
popf
ret
push
bndldx
dec
nop
cmp
data16
inc
jl
cmp
add
add
add
fld
std
or
in
push
mov
outs
jb
push
out
cmp
fild
add
add
inc
push
add
loop
mov
fwait
jle
cmp
mov
xor
add
add
add
fwait
add
mov
mov
fsubr
adc
mov
cmps
add
add
mov
sub
jp
cwde
add
jns
add
add
repnz
jge
add
add
jg
xor
fs
js
cmps
or
cmp
pop
data16
retf
mov
add
add
inc
push
(bad)
mov
inc
adc
sbb
cwde
jmp
ins
dec
sbb
and
add
mov
ja
add
add
int
mov
clc
mov
leave
sbb
pop
test
std
cdq
jp
add
inc
add
add
sahf
xor
and
in
jmp
repz
add
loop
xchg
popa
dec
call
pop
add
add
jns
imul
(bad)
mov
bound
dec
lds
push
add
in
and
jne
add
add
push
daa
iret
test
and
add
inc
scas
jl
(bad)
dec
xchg
stc
cmp
add
call
add
arpl
cmp
dec
pop
adc
push
inc
xchg
rol
repz
fcmovnbe
cmps
xchg
jmp
mov
add
add
sar
inc
add
es
and
adc
jmp
(bad)
pop
fdiv
cmps
xchg
add
add
inc
nop
mov
dec
inc
cmp
dec
add
out
add
push
pop
sub
nop
sub
cmova
adc
add
add
mov
call
sbb
pop
add
cmp
add
adc
dec
add
add
add
adc
dec
add
fistp
pop
inc
cmp
mov
pusha
and
dec
rcr
or
add
add
add
pop
inc
sbb
adc
in
sub
test
adc
inc
movs
add
cmp
add
add
add
fs
or
inc
into
push
or
test
push
add
add
cmp
loopne
aas
lock
repnz
add
adc
mov
clc
push
shl
ret
xchg
addr16
or
jmp
scas
mov
add
cmp
add
add
test
adc
or
sbb
sub
cmp
test
lahf
mov
mov
clc
jg
pop
add
inc
xor
mov
inc
and
pop
mov
inc
add
add
pop
test
cmp
and
lock
jl
add
adc
inc
add
or
add
adc
mov
add
add
add
mov
mov
jmp
(bad)
cld
or
or
or
frstor
sbb
add
add
or
adc
outs
add
push
xchg
or
cmp
bound
add
add
add
add
and
push
sub
and
ins
add
or
call
mov
mov
add
add
or
pop
or
invd
loopne
or
add
clc
hlt
test
sub
or
sub
(bad)
ror
add
add
clc
add
xchg
and
xchg
add
mov
sbb
dec
sbb
gs
add
add
clc
jo
and
inc
and
test
add
add
add
inc
adc
fs
xchg
pop
aam
add
sbb
adc
dec
and
cmps
xor
js
stos
add
add
test
jg
int
xchg
or
adc
jae
and
add
sbb
adc
cmps
and
clc
xor
js
push
add
add
pushf
or
adc
test
movs
xchg
and
or
outs
adc
cmp
inc
cdq
sub
or
add
add
dec
aas
jne
mov
loopne
mov
ret
repz
sub
or
or
mov
add
adc
adc
sbb
mov
cmp
xchg
cmp
and
sub
fbstp
or
sbb
add
add
sub
jl
fucom
int3
mov
jl
or
out
xchg
cmp
or
sbb
sub
add
add
pop
data16
pop
xchg
cmp
push
dec
or
sti
xchg
or
aaa
pusha
and
inc
add
add
add
js
cmp
int
xchg
and
stc
dec
or
loopne
in
fsubr
mov
adc
or
add
cwde
aas
out
cmp
cmp
and
mul
add
jg
fwait
jo
pop
add
clc
std
mov
xor
inc
dec
jae
test
or
fnstenv
and
jg
ins
push
pop
inc
aas
jg
adc
or
inc
add
fimul
add
bound
mov
psubusw
or
push
or
nop
or
pushf
adc
add
add
fwait
adc
div
adc
in
adc
inc
adc
sbb
add
add
and
adc
js
scas
adc
repz
sbb
jg
cmp
pop
push
jo
(bad)
or
nop
add
xor
loopne
pop
mov
and
and
pop
outs
std
movs
jo
cmps
xchg
movs
jnp
dec
sub
add
add
mov
cmp
stc
cmp
jmp
push
pop
dec
dec
ds
pop
xor
mov
add
add
push
test
mov
add
inc
sbb
and
adc
sbb
imul
add
add
movs
cmp
add
mov
add
jo
jl
cmp
add
sbb
or
add
add
in
cmp
cmc
jmp
test
test
pop
add
sbb
add
add
mov
push
mov
(bad)
fwait
mov
cmp
xchg
inc
push
mov
add
std
mov
leave
mov
or
mov
addr16
and
xor
cli
pushf
dec
add
add
cwde
push
push
mov
add
add
jno
mov
add
or
rol
rcl
pop
scas
add
jmp
scas
mov
rcr
add
add
mov
pop
add
pop
lods
or
fwait
adc
xor
sub
out
mov
mov
push
add
add
mov
sar
mov
jg
add
out
adc
lock
sub
add
add
xor
lock
adc
xchg
jns
lea
mov
push
cmp
pop
adc
add
add
lock
mov
pop
xchg
bound
or
dec
push
enter
jo
inc
and
or
add
push
add
add
and
sbb
sbb
pop
jmp
mov
xchg
add
cmp
add
xor
xor
or
xor
inc
adc
sbb
push
xchg
inc
jle
add
add
add
cmp
cdq
adc
jge
inc
cwde
es
lods
or
sbb
xor
add
add
(bad)
ret
jnp
or
push
daa
mov
and
call
push
add
add
push
mov
aaa
fisubr
int3
inc
outs
xor
adc
push
mov
repz
add
sub
sub
rcl
mov
add
cmp
lds
add
xor
loopne
imul
inc
ins
jl
dec
add
add
dec
fwait
adc
push
inc
jo
adc
sub
xchg
jb
in
add
add
mov
cld
dec
xor
mov
push
outs
dec
xor
xor
mov
mov
and
pusha
adc
add
add
cli
and
sahf
push
dec
movs
inc
add
or
mov
or
add
add
sub
sbb
adc
shl
jle
mul
jnp
pop
lods
push
es
add
sub
cwde
xchg
mov
push
push
jle
dec
dec
sbb
or
mov
dec
cmp
dec
or
pop
xchg
dec
lods
push
sub
sub
adc
or
adc
call
add
add
dec
cdq
test
pop
mov
hlt
jbe
mov
mov
cwde
jo
cmc
xor
add
add
shr
or
mov
movs
ins
shr
push
sub
movsx
jne
fld
ins
push
sbb
push
add
add
inc
inc
add
dec
fidiv
add
ror
gs
jb
dec
fidivr
shr
dec
sub
add
add
addr16
mov
aam
push
jle
or
test
shr
fsubr
add
mov
jae
add
add
mov
retf
outs
cmps
(bad)
jae
nop
and
xor
xor
gs
aaa
sub
mov
add
add
sub
adc
mov
or
jae
pop
xchg
add
push
push
pushf
mov
or
inc
add
add
pushf
pop
imul
(bad)
sub
lods
push
dec
push
jp
mov
and
inc
adc
add
add
jb
repnz
mov
nop
mov
ret
jne
jl
in
call
push
add
adc
xchg
out
jmp
sbb
inc
hlt
in
cmc
jb
popf
es
adc
cmps
mov
shl
add
add
movs
shl
test
cdq
ret
push
mov
mov
in
xor
add
add
dec
sbb
nop
dec
push
fs
jmp
ins
dec
inc
push
gs
mov
jo
dec
inc
add
add
mov
ins
jle
outs
out
mov
ins
in
push
sub
int3
sbb
(bad)
retf
mov
sub
add
add
lock
(bad)
jae
jo
pop
sbb
in
pop
test
int
jmp
mov
mov
add
add
cmps
pushf
sub
lea
ss
sub
dec
and
push
dec
push
dec
push
mov
add
xor
push
push
ins
mov
fs
nop
cmps
ds
addr16
nop
bound
add
add
call
fadd
cmps
jle
jbe
test
mov
sub
adc
add
add
sub
pop
sub
and
mul
inc
js
cmps
dec
popa
fs
cmps
sub
jae
sar
addr16
add
add
movs
fs
mov
es
jbe
mov
inc
mov
ins
test
mov
add
and
movs
lea
call
pop
data16
xchg
repnz
push
je
je
out
mov
sbb
push
add
add
mov
imul
rcl
push
mov
js
jo
stos
xchg
leave
ds
enter
add
add
push
push
outs
fwait
pop
and
fcmovb
jmp
adc
and
jbe
jae
add
add
push
add
add
mov
in
ror
cmp
and
push
mov
xchg
bound
retf
add
and
shl
and
(bad)
lods
mov
int3
jnp
sbb
adc
xchg
inc
xlat
cmp
mov
add
je
xchg
cmp
dec
xchg
jb
data16
sub
mov
or
sub
mov
bound
add
add
repnz
lods
hlt
or
nop
sbb
lods
and
les
das
mov
mov
add
add
pusha
inc
das
popf
xchg
pop
xor
sub
outs
rcr
ror
push
or
inc
sbb
add
add
test
nop
lods
sub
repnz
rcl
push
retf
out
inc
cmp
cmp
dec
dec
mov
add
add
cdq
mov
iret
dec
inc
inc
int3
cs
push
cmps
xchg
out
fcmovb
ins
movs
mov
add
add
push
dec
jbe
cmp
xchg
mov
pop
loopne
mov
outs
fidiv
fs
xchg
add
add
imul
jb
jp
lods
jne
sub
mov
retf
out
xchg
xor
cwde
stos
add
add
sub
inc
je
dec
sub
(bad)
out
fs
lods
popf
scas
sub
adc
jae
sbb
inc
ins
jns
ret
add
xchg
sahf
dec
cmp
dec
push
adc
push
sub
dec
pop
xor
lods
loop
addr16
imul
add
add
xchg
push
out
data16
and
pop
push
and
out
mov
add
add
ds
jne
pop
xor
arpl
and
jmp
and
jb
xor
and
add
xchg
pop
adc
jmp
retf
fld
je
and
rcl
add
cwde
repz
ror
ins
dec
scas
pushf
xchg
cli
repz
and
sub
pusha
xor
add
fdiv
fnsave
add
add
div
jge
xchg
push
hlt
je
sub
mov
mov
js
adc
mov
add
dec
sub
ss
mov
test
mov
and
sbb
add
dec
add
add
popa
cdq
jmp
jl
jl
jmp
mov
lods
movs
fidiv
xchg
xchg
loopne
push
add
add
out
sub
inc
dec
data16
lock
enter
call
imul
iret
push
fldenv
mov
jbe
outs
jl
lahf
cs
pop
jle
xchg
inc
int
pop
push
(bad)
(bad)
hlt
push
add
add
or
mov
test
je
pop
and
xor
jge
mov
jl
push
in
mov
add
add
add
adc
fidiv
sbb
imul
dec
loope
dec
sub
es
loop
mov
xchg
jae
shl
jbe
inc
lahf
ss
test
dec
ins
push
retf
push
addr16
add
xchg
je
das
cmp
and
not
push
ss
push
inc
jo
retf
jb
xor
add
test
outs
aad
mov
ret
mov
lods
dec
imul
aaa
inc
adc
jo
add
add
push
mov
jns
sub
dec
rcr
adc
fcom
daa
or
add
movs
pop
fcomp
push
loope
ins
js
loop
add
pop
in
or
add
dec
xor
add
add
call
mov
xor
pushw
adc
mov
jne
sub
sub
sbb
add
add
cld
push
xchg
or
or
enter
or
or
nop
or
push
xchg
(bad)
add
add
and
xchg
add
mov
or
dec
(bad)
cmps
mov
ret
rcl
sub
add
adc
adc
movs
sub
nop
adc
mov
pop
xor
sub
mov
add
push
cmp
xchg
inc
pop
sbb
push
