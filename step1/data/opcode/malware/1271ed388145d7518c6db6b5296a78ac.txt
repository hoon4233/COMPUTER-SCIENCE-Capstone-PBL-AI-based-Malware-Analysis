div
in
mov
mov
ror
add
add
sahf
int3
das
int
in
jg
shl
or
and
push
je
and
out
(bad)
(bad)
je
push
call
push
add
sub
push
ret
in
div
jne
mov
or
call
xchg
push
push
sbb
stc
out
aas
mov
test
je
cmp
mov
cmp
jae
dec
movzx
lea
jne
sbb
xor
jmp
and
neg
fidivr
and
pop
pop
mov
or
call
push
push
sar
stc
shr
jp
lock
jge
add
pop
push
push
push
push
xor
mov
mov
movs
std
in
pop
scas
cmp
inc
add
cmp
(bad)
pushf
or
push
rcr
sahf
push
mov
push
xor
fidiv
fcom
cmp
adc
mov
ret
mov
jmp
(bad)
jmp
push
jbe
adc
lea
or
lock
dec
test
jg
mov
or
add
cs
add
ret
std
imul
xchg
add
mov
pop
inc
push
adc
add
inc
fcom
rol
jo
(bad)
mov
push
mov
xor
sbb
add
push
add
aaa
fwait
mov
mov
or
data16
sbb
sar
push
lahf
add
xchg
not
and
mov
push
sub
mov
hlt
cs
jbe
xor
sbb
adc
cwde
mov
lock
pop
imul
dec
shl
in
or
jo
mov
xor
hlt
or
pop
cmps
push
repnz
in
(bad)
cmps
cmp
lea
fwait
popa
xor
push
call
sub
add
out
push
sbb
push
(bad)
loopne
xor
test
mov
lea
mov
adc
daa
mov
push
dec
or
add
iret
jbe
ret
ja
pop
xchg
sbb
fdivr
xchg
sub
ret
test
push
xchg
mov
call
add
das
or
push
dec
and
add
xchg
es
pop
(bad)
xlat
push
sbb
test
or
sbb
push
and
add
push
dec
dec
cmp
je
out
push
out
jmp
mov
mov
pop
pop
fs
pop
lods
mov
aad
add
mov
push
sub
mov
pop
push
ins
and
or
add
push
iret
bound
fidivr
inc
pop
pop
jmp
inc
lock
push
mov
cmp
or
jge
outs
push
rol
js
sti
mov
mov
xor
mov
pop
ret
arpl
xor
stos
pop
rol
pop
imul
rcr
sar
pop
inc
sub
inc
clc
sub
pop
or
xchg
es
cmp
(bad)
adc
xor
sbb
pop
cmp
cli
js
mov
cmp
jg
mov
pop
and
adc
ret
pop
dec
add
mov
pop
and
(bad)
jmp
enter
xchg
das
pop
push
sub
push
mov
sar
imul
(bad)
lea
push
cmp
ja
adc
pop
dec
clc
add
push
mov
inc
loope
adc
in
inc
(bad)
jno
xchg
adc
in
outs
int3
clc
scas
cmp
jle
mov
cmp
or
clc
loope
inc
shr
sub
or
cmp
push
inc
jle
add
pop
cdq
sub
rcl
enter
shr
iret
mov
movs
pop
cmp
or
sub
cli
cmp
mov
(bad)
push
jne
js
inc
add
xor
pop
mov
jle
add
call
jo
add
test
inc
add
(bad)
adc
lea
adc
stc
std
mov
and
(bad)
xor
into
mov
adc
cmps
push
cmps
inc
cmp
mov
cmps
mov
cld
fisubr
xlat
ja
lods
lea
stos
mov
clc
cmp
(bad)
rol
mov
mov
jge
test
jle
ins
or
cmp
mov
inc
mov
stos
pop
pop
inc
ins
cmp
loope
or
push
push
cmp
adc
outs
add
sub
repz
push
jmp
push
lea
lea
inc
push
inc
add
pop
sub
in
pop
push
cli
push
and
ret
and
sbb
outs
hlt
adc
or
jbe
inc
and
cmp
mov
cmp
and
xor
push
push
sti
rcr
hlt
das
push
out
cmp
jle
mov
inc
or
xor
cmp
je
push
cmp
cmp
jae
push
cmp
inc
and
adc
cs
or
or
add
jb
pop
adc
pop
adc
pop
leave
fwait
jle
mov
fcom
jnp
jmp
in
aaa
cmp
lock
(bad)
loop
push
push
push
rcr
sbb
or
adc
or
cmps
push
loope
add
jne
pop
nop
out
loop
loopne
cmp
jo
inc
sub
add
aaa
retf
shl
mov
inc
or
pop
or
(bad)
cmp
add
add
xor
jno
cmp
jne
push
push
push
push
xor
push
test
push
mov
mov
or
pusha
pop
pop
jle
sbb
xor
mov
daa
in
rcr
jne
cmp
retf
xchg
and
add
sub
xor
frstor
ins
mov
lock
mov
cld
pop
stc
add
out
add
sbb
fstp
mov
add
repz
test
xchg
pop
mov
and
push
je
xchg
sbb
test
cwde
ds
xchg
(bad)
loopne
in
dec
out
mov
ja
stos
or
dec
adc
je
push
adc
aas
clc
pusha
mov
push
repz
inc
xor
push
ss
push
inc
sbb
out
lea
dec
push
xor
adc
lahf
test
lea
out
jae
pop
shl
fldcw
add
add
add
jge
repnz
lea
push
dec
pop
xchg
push
cld
fist
mov
fistp
add
push
mov
jb
push
outs
dec
xor
mov
push
out
fsubr
adc
and
push
scas
push
inc
sti
add
or
test
cmp
iret
ins
push
cmp
push
push
cmp
je
shl
adc
or
(bad)
loopne
jne
imul
mov
imul
adc
fwait
or
xor
jb
ja
adc
inc
fsub
shl
xchg
cmp
mov
xchg
paddq
mov
aaa
movs
iret
xlat
mov
mov
mov
or
mov
call
arpl
cs
jno
lods
imul
xor
sub
jg
inc
dec
mov
or
cwde
in
cmp
mov
add
and
or
sub
in
mov
shr
ss
push
mov
mov
push
adc
lock
(bad)
call
sbb
int3
ret
mov
push
test
jae
and
mov
aas
pop
loopne
push
loopne
push
push
cmp
icebp
add
daa
retf
call
sub
adc
pop
inc
lods
or
enter
add
sbb
je
dec
je
push
xor
push
pop
jmp
push
adc
inc
pop
loop
sbb
movs
call
add
mov
inc
adc
push
rcl
jg
int
mov
push
mov
ins
sbb
mov
sbb
mov
inc
and
mov
jae
mov
aam
and
pushaw
pushf
pop
cmc
sub
sub
and
sub
add
xor
aam
test
pop
jle
or
mov
mov
sar
pop
or
pop
ror
xchg
and
loop
xlat
sub
retf
jmp
out
shr
sbb
fisttp
or
sub
js
and
(bad)
adc
arpl
loope
popa
add
jle
in
dec
xchg
ds
and
sbb
sar
inc
pop
xlat
and
je
(bad)
or
cmp
lea
mov
fldcw
mov
sbb
pop
movs
push
neg
pop
ds
das
adc
pop
dec
sub
adc
mov
push
sbb
or
sbb
push
adc
lahf
cmp
sbb
adc
fist
cwde
add
pop
sbb
and
add
js
xor
in
js
jl
ret
adc
jb
pop
adc
test
mov
mov
mov
(bad)
cld
cmp
jg
jne
(bad)
dec
sbb
push
cmp
enter
movs
cmp
les
or
and
nop
into
or
mov
je
inc
mov
icebp
into
scas
mov
dec
or
or
push
data16
sbb
dec
mov
pop
pop
pushf
sub
pushf
sbb
pop
aas
push
and
inc
and
or
push
jo
int
in
jae
bound
cdq
adc
out
in
sahf
adc
je
scas
jnp
mov
adc
lahf
xor
jbe
pop
ret
lahf
mov
ins
jnp
pop
aaa
push
push
or
mov
xor
dec
sub
fmul
sub
popa
xor
xchg
xor
data16
push
(bad)
div
call
or
je
and
mov
out
scas
mov
int3
sbb
jmp
mov
mov
pusha
push
call
jo
jne
push
ret
das
pop
add
pusha
add
and
in
aaa
sbb
push
dec
mov
lods
mov
jnp
add
pusha
jp
push
in
mov
adc
ins
movs
sbb
pop
repnz
je
jbe
in
sub
in
rol
daa
jo
scas
and
or
xchg
xor
test
lds
repnz
ds
pop
pop
jmp
sub
popa
jmp
mov
xchg
mov
push
xor
mov
pop
aas
aam
jge
dec
inc
(bad)
and
fisub
xchg
xchg
je
out
out
add
push
push
add
ins
cmp
jb
lock
bswap
scas
mov
scas
adc
mov
(bad)
(bad)
mov
and
push
je
icebp
bound
adc
xchg
in
push
and
push
(bad)
fild
or
frstor
add
add
add
fld
pusha
mov
test
mov
inc
or
and
test
add
in
sbb
jo
xor
or
push
mov
jmp
jmp
sub
mov
push
(bad)
lock
pop
push
sbb
neg
sbb
pop
les
ret
je
push
inc
out
loop
in
and
mov
gs
sub
mov
enter
cwde
sahf
inc
and
fs
mov
dec
mov
mov
imul
loopne
xor
in
pop
push
add
adc
push
jb
or
sbb
add
mov
cmp
xchg
pop
mov
add
jge
pop
inc
jecxz
dec
inc
outs
mov
in
(bad)
das
sar
sbb
sub
xor
sbb
sub
mov
test
(bad)
fcom
dec
jo
xchg
mul
mov
shl
loopne
jo
cmp
movs
sar
js
mov
adc
pop
adc
push
mov
xor
cmp
cmp
rcl
xchg
rcl
ret
les
pushf
pushf
leave
jae
gs
mov
mov
xchg
dec
mov
xchg
sbb
xchg
xchg
sbb
push
test
mov
xchg
int3
clc
arpl
ret
sbb
leave
enter
ror
cmp
sbb
shl
sub
ret
sbb
dec
jnp
mov
mov
dec
leave
jae
mov
sub
test
push
test
add
test
jle
pop
pop
pusha
inc
xor
and
ins
inc
ja
and
cmp
test
loope
hlt
shr
add
mov
inc
iret
and
cwde
sub
jo
inc
sbb
call
test
push
or
dec
pop
mov
es
push
ficomp
push
loop
jnp
and
cs
push
xor
sbb
and
add
ret
xor
add
call
pop
add
enter
or
jle
lahf
cmp
mov
in
add
test
and
outs
and
ficomp
inc
sbb
movs
and
push
aaa
adc
dec
sbb
or
pop
push
mov
mov
mov
jae
or
cld
sar
sbb
ret
lods
pop
test
cwde
sub
retf
xchg
and
std
and
adc
adc
pop
daa
add
sbb
fsub
adc
add
cwde
mov
mov
cmp
and
push
pop
push
jmp
popa
mov
ret
push
or
mov
fiadd
adc
or
sbb
adc
movs
(bad)
adc
xor
mov
ins
pop
sbb
push
sbb
fst
scas
and
jl
(bad)
and
enter
or
adc
sbb
jecxz
pop
dec
push
dec
mov
in
mov
nop
aaa
xchg
xchg
add
adc
test
sbb
inc
adc
adc
movs
jno
mov
stc
loope
add
inc
xchg
mov
adc
cmp
aaa
pop
inc
adc
xchg
adc
sub
push
cmc
mov
push
sbb
push
nop
imul
retf
xor
push
and
iret
sbb
sbb
aas
loop
add
inc
jne
shl
jno
jb
mov
test
enter
sbb
movs
dec
out
call
xchg
mov
loopne
dec
jo
lea
mov
sbb
call
fbld
das
jne
push
pushf
pop
nop
pop
xlat
sbb
shrd
popa
test
(bad)
outs
jg
cmp
je
or
je
xor
push
push
or
push
mov
adc
xchg
mov
pushw
mov
mov
xchg
inc
xchg
and
pop
loopne
das
jecxz
daa
add
inc
ret
or
inc
pop
add
mov
mov
add
test
mov
dec
in
retf
xor
and
sbb
lock
cmp
add
sti
cmp
je
push
push
pop
jmp
test
xchg
add
mov
sub
inc
mov
mov
clc
adc
and
shr
pop
mov
xor
jmp
dec
cmp
sub
mov
mov
xchg
ins
push
sar
and
stc
sahf
sub
sub
or
bound
inc
xlat
in
add
popa
and
sub
sub
pushf
fstp
add
movs
std
div
fadd
cmp
neg
aas
rcr
inc
inc
xchg
inc
mov
cmc
pusha
shr
test
sbb
(bad)
loopne
push
fdiv
jns
inc
stc
scas
sub
pop
bswap
pop
test
sub
sub
pop
leave
aam
inc
imul
cwde
lods
jno
ss
je
sbb
inc
retf
ret
test
cmp
cmp
or
mov
fstp
cmp
push
stos
add
adc
jb
pop
add
xor
clc
push
ins
push
daa
movs
xor
test
pop
ins
adc
push
lods
mov
mov
sub
pop
stos
jo
fsub
jne
jo
out
pop
and
pop
xor
xchg
lahf
mov
inc
sbb
arpl
dec
adc
inc
ret
jecxz
retf
push
push
or
sub
pop
adc
push
add
test
test
adc
mov
mov
enter
push
push
cld
sbb
sti
lahf
mov
adc
add
pop
cmp
add
or
adc
xor
push
sahf
xor
and
add
mov
hlt
sbb
sub
nop
neg
inc
mov
jo
push
enter
int3
ds
lds
lea
pop
xchg
add
sub
push
jnp
fidiv
dec
xlat
test
xor
dec
push
mov
fsub
rol
aad
imul
sub
inc
repnz
cmp
mov
and
xor
stc
pop
pop
and
dec
dec
xor
ficom
cmp
cmps
cmp
mov
repnz
sub
rcl
and
sbb
jne
and
enter
and
xor
and
lods
rcl
nop
inc
(bad)
in
xchg
or
ds
cmp
push
jl
jne
bound
pushf
dec
inc
inc
adc
ds
popf
fstp
ror
dec
mov
mov
push
or
xchg
pop
icebp
pop
dec
les
adc
dec
stos
xchg
(bad)
(bad)
adc
push
push
mov
sub
mov
loop
add
in
and
(bad)
adc
sub
ret
push
je
nop
sub
adc
les
rcl
cmp
add
iret
sbb
push
mov
mov
dec
sbb
outs
loopne
sbb
(bad)
(bad)
fld
sti
cmp
jae
jne
push
sub
xlat
ret
call
sub
fisttp
jne
inc
adc
or
in
gs
or
jmp
cmp
push
mov
nop
out
adc
pusha
cmp
(bad)
loope
nop
sbb
mov
jmp
mov
clc
cmp
daa
fs
push
loopne
and
push
shr
push
outs
scas
push
dec
retf
add
inc
das
xchg
sti
sub
inc
repz
out
jge
and
xchg
or
enter
or
retf
jo
inc
mov
cmp
mov
test
pusha
xchg
push
les
jge
jo
and
cmp
out
jo
xor
daa
dec
rcl
sbb
mov
xor
mul
dec
xchg
jo
inc
xchg
add
pop
or
setne
or
dec
or
(bad)
mov
rcr
into
add
icebp
(bad)
aaa
arpl
adc
pop
out
jne
or
je
sub
fadd
mov
in
sti
loopne
je
loope
jg
inc
das
adc
mov
or
in
sbb
push
inc
fadd
jl
test
dec
push
pop
pop
sub
jo
test
mov
lods
cmp
lock
fsubrp
out
xchg
or
xchg
cmp
fsub
add
call
neg
test
imul
sub
repz
je
cli
pop
ror
dec
sar
inc
mov
pop
jns
sbb
fsub
push
out
inc
out
loopne
cld
inc
test
and
or
(bad)
nop
inc
aas
fnstenv
imul
lock
or
loopne
lods
sbb
cld
or
mov
push
pop
or
push
or
jg
scas
fdiv
add
or
enter
add
int3
add
mov
or
es
fisubr
jle
push
fdivr
or
sub
call
dec
xchg
call
mov
add
mov
jnp
lock
dec
inc
sbb
je
sub
jle
cld
out
jmp
jge
imul
cmc
jbe
push
xor
jmp
mov
xor
int3
int
mov
mov
xchg
int3
test
push
sbb
in
icebp
inc
xor
xor
fst
inc
sbb
mov
lea
rol
mov
mov
inc
hlt
xor
inc
mov
mov
jle
push
dec
cmp
adc
push
pavgw
ret
jle
call
in
sbb
lock
push
mov
or
mov
shl
in
paddusb
cmp
pop
fild
mov
push
push
add
pmulhw
mov
jbe
pop
clc
add
inc
sbb
sbb
movs
adc
fcomp
sub
mov
stos
ins
std
adc
sbb
dec
test
pop
lea
rol
sub
or
cmp
push
push
jne
aaa
or
rcr
pop
dec
xor
mov
in
inc
(bad)
xchg
in
cmp
inc
ficomp
cld
test
sbb
or
mov
imul
or
sbb
add
mov
or
xor
push
push
add
pop
jmp
or
inc
pop
or
cmp
std
popa
xor
add
mov
das
jle
popa
cmp
inc
nop
es
dec
xor
push
imul
pop
fmul
jp
fcomp
movs
adc
add
pop
sar
(bad)
in
loopne
pop
cld
loopne
or
add
test
lds
lahf
call
into
sar
aam
enter
test
or
rcr
push
nop
or
push
cmove
or
cmp
push
push
in
add
cmp
sbb
mov
cmp
cli
in
mov
push
ror
mov
ret
or
in
adc
scas
in
mov
push
push
in
sbb
inc
mov
scas
sbb
or
jno
test
nop
adc
and
add
cmp
test
shrd
rcr
jb
push
pop
push
push
call
and
fist
ror
test
mov
mov
pop
(bad)
daa
mul
mov
rcl
dec
or
cmp
jge
out
(bad)
clc
sub
mov
mov
out
or
push
jge
in
arpl
and
pop
arpl
xor
pop
or
sbb
(bad)
pop
lock
(bad)
loopne
mov
cmp
add
and
and
das
sub
adc
mov
mov
jbe
in
mov
int3
pop
cmp
fxch
rcl
sbb
jl
adc
pushf
xor
in
mov
fbstp
rol
(bad)
je
inc
in
fdivr
push
call
mov
inc
shr
movzx
push
adc
push
ret
push
jo
(bad)
ffreep
push
es
add
je
loope
cmps
jle
(bad)
jbe
dec
test
gs
nop
sbb
inc
add
push
mov
push
or
gs
or
jg
sub
jb
xor
int
out
push
loopne
pop
or
add
mov
push
sbb
xor
fisub
push
jmp
scas
sti
jle
push
add
lahf
nop
lods
adc
push
push
mov
cmp
jg
mov
xchg
icebp
int
adc
jae
enter
cmp
(bad)
std
sbb
scas
mov
aad
js
pop
and
test
xor
fld
xchg
jno
outs
ds
lea
and
outs
sub
sbb
sub
call
mov
push
jne
inc
sub
loop
jo
push
ret
push
pop
jmp
mov
popa
xor
lods
push
cmp
mov
and
cmp
je
stos
mov
in
in
add
fcomp
shr
cld
jne
fdivr
push
push
test
adc
lock
sbb
or
xor
clc
add
inc
cmp
jae
mov
hlt
lea
movs
jp
dec
ja
dec
add
sub
je
push
mov
je
add
mov
outs
push
sub
fcomp
hlt
sub
imul
add
adc
ret
jl
in
cmp
jg
push
push
push
inc
js
push
pop
cmp
inc
and
jbe
xlat
sar
(bad)
(bad)
into
popa
nop
add
mov
loopne
push
pop
xor
adc
call
lea
jmp
cmp
loopne
sub
add
xor
jo
fnstcw
jb
mov
mov
rol
mov
mov
push
sub
inc
js
or
cli
xchg
adc
out
ret
cmp
cmps
hlt
pop
pop
xor
inc
xchg
je
test
js
inc
dec
hlt
aaa
cmp
fidivr
hlt
or
and
sub
pop
mov
dec
push
inc
inc
dec
rcl
jge
jmp
dec
inc
cmp
push
mov
ins
sbb
in
out
fdiv
pop
push
push
mov
sbb
xor
cwde
dec
mov
ins
sbb
(bad)
fdivp
add
pop
push
push
mov
idiv
cmp
jl
repz
jmp
or
and
pop
cmp
xlat
das
(bad)
xor
ret
inc
mov
inc
or
cmp
jbe
mov
mov
test
pop
or
xchg
bound
xlat
push
sub
mov
push
stc
jns
lods
sar
push
mov
push
and
add
or
jle
ret
je
mov
imul
lock
aaa
jmp
xor
movs
push
dec
fidivr
sbb
or
fstp
pop
cmp
mov
or
add
jne
or
sbb
sub
jle
push
call
jl
xchg
jecxz
sti
test
dec
sbb
mov
mov
sbb
ret
je
push
pop
(bad)
pop
and
xor
mov
mov
(bad)
jae
jb
jmp
mov
ret
and
adc
mov
xchg
jmp
or
jbe
jb
(bad)
mov
icebp
scas
fs
jne
cmp
je
jbe
mov
xor
lods
std
or
or
and
sbb
icebp
add
cmp
test
add
out
les
xlat
imul
daa
push
pop
and
setne
shr
ret
jne
pop
jo
pop
in
xchg
cld
add
fiadd
jne
adc
ds
aam
add
jo
jg
jo
prefetch
xchg
das
or
es
into
push
cmc
jmp
test
or
sbb
push
adc
add
sub
jp
shl
aad
mov
(bad)
js
push
leave
(bad)
(bad)
inc
retf
jmp
call
bnd
ror
(bad)
cmp
jmp
mov
dec
adc
daa
sahf
jmp
cmp
push
test
mov
imul
cld
ficom
sub
push
push
jmp
sbb
pop
sti
adc
rol
pop
rol
add
scas
sbb
inc
push
mov
(bad)
lock
pop
nop
mov
sub
inc
mov
add
call
je
das
test
push
xchg
dec
jno
mov
loopne
enter
jl
add
ins
cld
cmp
(bad)
ret
dec
push
add
push
test
lds
pop
push
dec
cld
ror
push
(bad)
pop
popf
mov
enter
add
std
push
mov
call
sub
dec
enter
movs
xchg
xor
sub
imul
push
and
cmp
fld
mov
sahf
fsub
sub
pop
push
adc
pop
enter
xlat
jecxz
sbb
ins
icebp
inc
rol
shl
in
shl
mov
cmp
jp
fdiv
push
adc
shr
pop
sbb
push
push
imul
sub
push
add
aas
lods
jo
xchg
dec
ret
outs
dec
mov
adc
lods
sbb
inc
mov
lds
sbb
mov
in
push
sub
les
push
ss
sub
push
in
ins
fld
lods
sub
mov
xlat
and
enter
mov
and
aad
jo
es
sub
jl
push
jno
cmovl
pop
dec
scas
jecxz
dec
xchg
call
sbb
cmps
jb
sbb
fsubr
enter
or
test
pushf
mov
dec
leave
inc
jo
fnstcw
into
or
adc
jb
leave
les
adc
imul
test
stos
out
or
mov
push
sbb
xchg
xor
pop
and
xlat
or
sbb
add
xchg
sub
stos
adc
jmp
je
add
movs
das
jmp
in
or
outs
and
jns
mov
or
push
enter
icebp
mov
or
inc
mov
rcl
mov
dec
push
adc
pop
mov
call
jne
pop
add
inc
bound
xor
fwait
hlt
cmp
xchg
dec
mov
push
mov
jns
xor
push
and
mov
push
push
sub
add
cmpps
das
cwde
jl
test
pop
bound
in
push
stos
lock
xor
pop
je
sbb
mov
mov
sbb
push
adc
cmp
jg
adc
in
jns
add
dec
addr16
xor
push
lea
mov
add
or
mov
lods
xor
scas
jno
lahf
rcr
add
pop
pop
cmps
mov
mov
in
sbb
add
or
jns
ins
fdivr
popf
pop
daa
js
adc
dec
cmp
pop
lea
addr16
test
shl
imul
and
and
sbb
rcr
sbb
sbb
sbb
jne
cmp
push
sbb
sub
outs
push
push
stos
pop
xor
xchg
mov
mov
and
adc
ja
xchg
not
stc
movups
and
out
push
cmp
popf
cmp
outs
inc
push
mov
push
cdq
clc
cmp
ret
jne
mov
add
cmp
mov
jle
push
xchg
jmp
loop
stos
sbb
and
sti
lods
dec
and
ret
xchg
arpl
pop
lods
push
dec
pushf
push
jbe
ficom
jmp
cmp
cmp
fucomip
sub
jne
sub
dec
je
mov
adc
in
jge
adc
push
retf
ss
jge
(bad)
cmp
jmp
mov
mov
and
inc
ror
leave
jmp
fiadd
cmp
push
jecxz
jne
out
popa
hlt
or
jmp
push
add
push
mov
xor
pop
or
and
cld
pop
inc
add
mov
mov
retf
sti
div
or
pop
push
mov
xor
dec
icebp
mov
mov
dec
mov
loop
loopne
push
or
push
imul
push
js
sub
jbe
pop
jbe
mov
fcomp
or
int3
sub
mov
rol
jmp
cmp
je
cmp
ficomp
push
pop
lahf
jmp
inc
sbb
leave
adc
repz
call
cmps
sbb
fstp
mov
cmp
jmp
(bad)
sbb
addr16
cmp
sbb
je
arpl
pop
(bad)
or
sbb
jge
in
inc
(bad)
into
pop
push
aaa
push
inc
push
push
out
sahf
out
jnp
ret
in
add
jns
cmc
xchg
pushf
cmps
(bad)
fcomp
mov
inc
sbb
mov
mov
add
data16
mov
sub
or
xchg
push
mov
lea
adc
xchg
out
(bad)
fwait
sub
mov
fadd
push
test
add
out
push
int
mov
sbb
xchg
pop
jge
(bad)
mul
cmp
push
dec
push
mov
das
push
lea
push
lea
push
push
push
push
add
push
lea
fs
(bad)
dec
cmp
cmp
adc
mov
inc
test
lods
add
dec
or
or
adc
pop
mov
dec
call
add
xor
mov
ins
sbb
mov
imul
lea
aam
sbb
push
xchg
das
imul
cmp
add
jl
inc
xor
add
into
sub
push
xor
pop
inc
mov
inc
push
push
and
push
fidiv
mov
add
mov
add
mov
cmp
push
not
jmp
mov
pusha
and
mov
push
jbe
ins
jne
mov
add
xor
jne
mov
pop
jne
push
add
ret
data16
jns
inc
add
xchg
adc
test
push
repz
imul
dec
cmp
sub
movs
in
in
xchg
dec
sar
ret
out
in
dec
and
add
or
mov
movs
push
cli
loop
lea
neg
push
int
test
js
repz
dec
bound
push
cmp
sbb
sbb
jl
xchg
xchg
sbb
pop
xchg
adc
mov
lea
jl
call
adc
mov
ret
or
push
push
xor
popa
push
loopne
jecxz
push
xchg
pop
mov
popa
aam
push
aam
das
in
jb
mov
ds
mov
add
fcom
bound
dec
fild
cmp
rcr
loopne
add
dec
shl
cmps
(bad)
nop
xchg
aam
pop
movs
jmp
mov
sub
inc
scas
xor
adc
xchg
cmps
int3
cmp
jne
push
sub
xor
inc
sar
pop
clc
js
sti
stos
adc
je
lea
push
loopne
adc
pop
rol
mov
jo
ret
pop
add
sbb
cmp
fdivr
call
push
or
adc
pop
shr
cmp
ror
xor
push
les
inc
push
mov
lock
lods
movd
lea
dec
push
push
sbb
cmp
fidivr
pop
xchg
or
in
dec
jmp
sub
dec
sub
in
cmp
push
mov
add
mov
shl
add
inc
inc
dec
cmp
scas
xchg
clc
dec
adc
xor
mov
lds
push
mov
cmp
vpunpckhwd
ins
repnz
sub
inc
rcr
pop
dec
in
dec
sbb
mov
cmp
or
lea
and
mov
add
and
dec
ins
xor
into
in
and
dec
out
ins
shl
cmp
push
push
mov
neg
pop
adc
dec
dec
popf
jp
fimul
leave
and
jbe
loope
push
push
out
cmp
out
ja
adc
mov
push
out
enter
enter
mov
sub
xlat
adc
mov
scas
add
sbb
punpckhdq
push
lods
mov
and
adc
aaa
and
dec
(bad)
jae
push
ret
test
clc
daa
xchg
pop
pop
loopne
fmul
push
dec
das
sbb
jl
in
pop
jmp
pop
mov
icebp
jg
fwait
enter
cmp
jne
push
out
loopne
pop
or
push
or
adc
je
xor
mov
outs
cld
adc
add
adc
and
mov
ret
add
inc
adc
inc
shl
xchg
(bad)
sub
sti
je
cmp
xor
(bad)
sbb
mov
jno
add
pop
adc
or
mov
mov
xchg
in
inc
push
int
push
or
xor
jg
push
jne
mov
jmp
cmp
jne
cmps
enter
movs
fldz
xor
sub
popa
push
push
mov
loope
stc
ins
dec
aas
mov
cmp
mov
push
ins
inc
pop
ja
mov
sub
cmp
xchg
test
sbb
lock
scas
sti
or
test
and
test
int3
mov
mov
mov
pop
sti
push
push
dec
or
adc
xor
(bad)
push
stos
push
mov
adc
fcom
(bad)
sbb
push
nop
pop
cmp
iret
push
adc
enter
(bad)
or
sub
in
movs
out
mov
mov
jl
adc
pusha
xchg
scas
mov
mov
adc
dec
rcl
adc
adc
retf
xor
sbb
push
cmps
adc
lea
and
ss
xor
mov
push
mov
push
jbe
jno
call
push
retf
out
ja
jl
xchg
and
mov
sbb
mov
xchg
out
dec
imul
mov
test
mov
out
call
aaa
pop
inc
ficomp
mov
ror
inc
cmp
mov
fmul
ins
cmps
mov
int3
dec
add
pop
je
push
aaa
movs
or
cmp
or
ja
jl
cdq
cli
jno
cdq
mov
idiv
out
and
pop
pop
out
add
jno
ins
inc
sbb
arpl
in
cmp
js
ds
pusha
ror
fstp
and
push
cmp
je
or
adc
or
call
and
iret
dec
or
rcl
cmc
jmp
mov
mov
xor
ror
cmp
cmp
dec
rcl
lea
(bad)
cld
clc
push
jle
add
and
cmp
cmp
cmp
neg
push
add
push
jne
cs
sub
push
sahf
std
aad
push
mov
adc
sbb
stos
mul
push
ins
repz
mov
jmp
fisubr
add
stos
add
push
cli
or
push
sub
push
push
popa
cs
push
test
movs
mov
xor
push
sbb
push
sub
jecxz
mov
jl
xlat
sbb
in
loope
or
out
jo
into
inc
sub
ins
mov
ins
xor
or
sub
sbb
add
and
popf
mov
jl
push
cld
inc
clc
mov
cdq
mov
lea
push
sti
js
dec
or
or
shl
add
cmp
jge
ds
daa
les
(bad)
idiv
push
mov
mov
jno
aam
mov
ret
xor
idiv
not
adc
add
(bad)
std
test
jg
mov
sbb
jg
push
jmp
lds
scas
mov
test
xor
sub
scas
aas
out
jge
add
adc
push
pop
lock
lahf
mov
or
out
dec
fstp
push
pop
add
xor
sti
sub
rcr
jge
je
out
sbb
test
out
movs
mov
add
fisttp
fiadd
movs
daa
pusha
js
sti
ds
jg
scas
jnp
dec
fs
or
xchg
arpl
mov
leave
jle
cmp
xor
sub
neg
pushf
mov
push
inc
lahf
mov
inc
jmp
jl
push
adc
sub
cmp
jmp
dec
nop
or
out
jp
into
test
jle
pop
sub
hlt
mov
test
jns
cld
(bad)
mov
inc
add
xor
xor
mov
fdivrp
movs
mov
sub
mov
jmp
sbb
pop
add
les
cmp
add
push
lods
mov
cmp
cld
mov
je
into
clc
fidiv
jmp
push
xchg
cmp
rol
(bad)
fstp
(bad)
cmc
push
pop
mov
pop
jne
pop
pop
mov
clc
mov
push
cmp
mov
mov
xor
push
inc
mov
(bad)
add
imul
retf
ror
cld
inc
hlt
adc
lea
adc
adc
sub
in
jne
push
gs
bound
out
sub
xor
in
inc
pop
and
aad
cmp
sbb
loopne
or
push
cmc
bound
out
push
pop
pop
push
sub
jecxz
and
jle
lds
pusha
cs
scas
push
stos
sub
ret
push
mov
add
call
push
and
cdq
add
int3
pushf
push
push
test
or
push
and
mov
fxch
adc
int
sbb
loope
rcr
or
iret
addr16
dec
jns
and
cmp
clc
loope
mov
inc
jne
sti
sub
lds
adc
mov
push
les
jmp
punpckhdq
leave
adc
jno
test
add
add
add
(bad)
xchg
push
popf
int
mov
lea
push
mov
push
loope
mov
pop
in
dec
and
mov
push
lods
das
add
hlt
jno
sar
mov
push
adc
pop
adc
fcmovbe
iret
js
and
and
shl
adc
(bad)
push
add
cmps
jle
add
imul
pop
mov
sub
mov
mov
or
add
pop
nop
dec
outs
scas
sbb
push
pop
push
xchg
sbb
mov
mov
ds
nop
adc
fs
cli
xchg
int3
push
push
pop
in
pusha
cmp
out
pop
popf
dec
daa
add
stc
sbb
jl
aad
sbb
dec
and
lds
inc
push
icebp
(bad)
in
cmp
jge
or
and
fs
scas
mov
push
jbe
push
and
shl
sub
aas
outs
add
xor
inc
inc
push
add
inc
jae
inc
sub
clc
push
sub
clc
setb
test
daa
add
mov
cmp
jo
movs
(bad)
je
xor
dec
adc
data16
pop
or
mov
lods
aaa
adc
jle
loopne
icebp
sub
or
out
mov
pop
inc
add
push
xor
cld
mov
dec
dec
mov
jo
adc
pop
push
push
hlt
jo
(bad)
add
jecxz
sub
add
mov
fst
add
shr
inc
scas
sbb
das
push
scas
xchg
enter
int
xchg
popf
or
stc
inc
bound
sbb
sbb
sbb
push
in
pop
or
pop
xor
popa
sub
pusha
sbb
bound
mov
fisub
mov
mov
inc
inc
in
aas
jmp
test
push
or
add
adc
arpl
mov
popa
cld
mov
dec
jl
je
and
add
or
lock
push
pop
adc
mov
pop
or
jg
inc
xor
adc
xchg
push
push
push
add
jmp
mov
sub
mov
jnp
xchg
jo
add
mov
idiv
aam
mov
and
(bad)
jb
inc
aaa
adc
xchg
xor
jmp
rol
xor
cmc
xchg
push
add
push
out
adc
push
shl
icebp
and
pop
push
and
enter
and
dec
fwait
popf
or
or
push
imul
ins
aam
lock
or
aam
mov
jp
lods
inc
mov
jae
imul
mov
sbb
stos
pusha
sar
sbb
sbb
xor
mov
test
dec
in
call
jo
or
xor
mov
fcmovbe
mov
sbb
mov
adc
push
sbb
out
pop
push
push
mov
pusha
das
call
jo
mov
push
popa
cmp
xchg
loope
aam
and
pop
cmps
jo
cmp
fsubr
in
mov
pop
push
push
outs
sbb
jmp
sti
dec
jnp
mov
mov
scas
adc
int3
jp
or
push
cmps
pop
fs
fcom
dec
cmps
adc
ja
add
push
cmp
(bad)
mov
shr
push
mov
add
and
dec
jae
cmp
sbb
xchg
sub
test
(bad)
or
jne
mov
outs
pop
je
out
cmps
loopne
arpl
sbb
xchg
mov
(bad)
pop
push
push
retf
mov
shl
jmp
enter
and
dec
cmp
mov
add
addr16
arpl
ret
je
call
fidivr
test
je
stc
mov
push
dec
mov
jmp
dec
mov
sub
and
mov
call
dec
add
jo
pusha
inc
xor
movs
stos
add
shl
mov
or
fmulp
js
out
std
(bad)
cmp
jge
mov
mov
mov
cmp
sbb
push
add
or
push
pusha
jle
call
sub
(bad)
fcom
or
push
sahf
or
fsubr
sbb
popf
fwait
and
jns
fdivr
out
je
xchg
data16
pop
mov
sbb
mov
jno
or
stos
shl
test
into
cmp
xchg
iret
and
add
jo
sub
cld
inc
cmp
sete
adc
loope
adc
inc
sbb
adc
push
ret
mov
mov
jo
jp
jno
shr
mov
or
jno
sbb
and
add
sub
bnd
and
fwait
mov
popf
xor
loopne
add
sbb
mov
int3
imul
xchg
mov
pop
push
pop
sbb
sar
pop
cmp
lods
pop
(bad)
dec
ror
jae
add
sti
push
dec
lock
mov
ret
mov
add
ror
xchg
push
in
sbb
imul
(bad)
outs
mov
movs
ss
sbb
call
cld
fnstsw
ins
dec
sub
push
iret
ss
lods
aad
fdiv
push
and
push
sbb
push
xchg
push
or
mov
bound
mov
mov
or
mov
adc
inc
outs
mov
enter
jne
in
rol
pop
pop
adc
loopne
sbb
clc
mov
fmul
mov
call
test
test
in
call
ja
fdiv
in
sbb
sbb
clc
push
mov
sub
jns
pop
pop
(bad)
arpl
and
or
je
movs
imul
xchg
lock
ins
sti
cmps
cmp
je
dec
xchg
mov
idiv
(bad)
adc
mov
daa
xor
ins
shl
shl
jg
adc
jbe
cs
jb
xchg
or
mov
in
push
lds
xlat
sbb
cmps
adc
pop
inc
clc
adc
add
clc
sub
inc
mov
cmp
das
xor
xor
hlt
add
and
mov
push
dec
push
push
xor
mov
xor
retf
push
add
add
cmp
pop
clc
dec
xchg
nop
jb
jnp
adc
lods
hlt
das
mov
cmp
jmp
das
hlt
dec
jo
outs
mov
out
or
in
sub
add
into
push
push
add
push
outs
or
or
jp
loopne
gs
adc
dec
dec
push
in
imul
mov
mov
jl
mov
jbe
xor
rcr
sbb
sub
jg
mov
addr16
aam
loope
and
ret
lahf
std
mov
aad
xor
dec
aas
or
sub
xor
jbe
or
mov
sbb
push
add
clc
(bad)
sbb
out
mov
pop
daa
pop
push
mov
js
mov
adc
inc
inc
repz
xor
xor
push
jg
icebp
fwait
or
jbe
movzx
adc
add
xor
pop
test
lea
push
jl
mov
in
push
rcl
in
pusha
gs
sbb
cmp
jbe
pop
push
mov
hlt
mov
add
adc
add
jo
and
jmp
cmp
add
xor
sti
mov
inc
push
push
fisttp
in
lods
xor
sbb
push
mov
pop
rol
mov
int3
sub
rcr
mov
add
inc
cmp
pop
xchg
adc
pop
mov
push
retw
add
push
lods
lea
and
mov
jne
xchg
xor
push
sub
shl
pop
jmp
adc
cdq
(bad)
(bad)
mov
xchg
push
aam
inc
arpl
push
cmp
or
sub
sub
mov
ja
sbb
lock
cmps
add
(bad)
mov
jo
scas
mov
jle
or
pop
pop
push
es
push
mov
mov
dec
bsr
push
inc
stc
xchg
dec
sub
enter
sub
pop
and
data16
push
mov
dec
and
xor
push
xchg
inc
(bad)
push
cmp
imul
cmp
jns
sbb
xchg
nop
fisttp
aaa
jns
popf
call
push
mov
fstp
cmp
mov
add
enter
cmp
fadd
mov
lods
jmp
or
and
add
sub
lock
push
sahf
int3
jmp
mov
jb
js
add
dec
fs
adc
shl
add
add
lea
dec
jnp
js
inc
ins
xchg
shr
aad
inc
sbb
shr
add
sbb
call
iret
pusha
pusha
xchg
mov
mov
mov
sbb
mov
sbb
mov
in
cmp
les
das
sub
aas
xor
jns
cmp
jmp
pop
neg
xlat
xchg
sub
pop
daa
cdq
add
push
adc
sahf
dec
pop
push
int
les
test
adc
scas
ret
pushf
into
mov
cs
jmp
cmp
jg
inc
mul
jo
leave
cmp
jo
fwait
add
rol
xor
fnstenv
retf
adc
(bad)
sbb
pop
sub
add
xchg
inc
mov
pop
(bad)
push
stos
dec
shr
pop
ins
add
add
pop
and
cmps
add
outs
cwde
adc
sbb
in
in
jmp
pop
in
mov
pop
ds
add
nop
add
push
stc
jmp
add
dec
xor
daa
cmp
push
pop
fld
add
in
scas
dec
call
adc
out
mov
or
(bad)
fidivr
ret
adc
inc
or
call
mov
retf
and
sub
mov
jp
push
cwde
push
test
cwde
xor
stc
(bad)
popf
sub
lea
test
add
mov
nop
push
sub
pop
or
adc
mov
nop
cmps
lea
jmp
mov
xor
cmovle
dec
js
jge
iret
mov
jae
sbb
test
fwait
mov
out
clc
inc
pushf
push
setne
sahf
push
sub
retf
jns
or
fs
push
push
pusha
daa
in
mov
repnz
add
mov
sbb
mov
push
push
jno
push
and
loop
leave
lea
and
sbb
xchg
or
and
or
add
test
push
push
inc
add
addr16
push
scas
mov
mov
xor
popa
fist
jb
adc
or
sbb
jns
xadd
sbb
mov
cld
cli
stos
(bad)
push
add
mov
push
mov
stos
or
xor
shl
popf
push
ror
pop
xchg
cmp
in
shr
cld
dec
pop
ret
adc
popa
(bad)
push
das
adc
jmp
sbb
fist
or
loope
pop
int3
imul
pop
shl
call
test
inc
xchg
sbb
cmp
pusha
pop
inc
xchg
loope
lods
xchg
scas
mov
outs
out
bound
clc
out
mov
mov
pop
or
loopne
add
in
push
hlt
add
lea
loope
pusha
or
jecxz
in
retf
and
jge
ds
push
mov
adc
mov
push
(bad)
pushf
(bad)
mov
mov
adc
and
leave
popf
push
xor
stos
sbb
push
xchg
mov
push
dec
rcl
xor
scas
or
dec
call
pop
loope
dec
or
push
fnstsw
mov
sbb
ror
shl
or
jb
and
xor
nop
or
test
sbb
rol
push
les
adc
mov
es
fwait
xor
xchg
inc
xor
push
mov
mov
inc
or
xor
add
pop
(bad)
fidiv
js
sahf
jnp
movzx
jbe
add
mov
ss
ret
mov
mov
repnz
(bad)
int3
lods
xor
cmp
xchg
mov
add
cmp
add
ror
push
mov
(bad)
faddp
or
leave
sahf
xchg
ror
or
xchg
mov
push
and
pop
push
repnz
mov
add
cmp
outs
pop
test
fs
jp
or
xchg
fs
and
aad
lock
dec
push
stos
rcr
mov
cmp
xchg
ret
sbb
out
cmp
fucomp
aas
movs
fdivr
fucomip
add
imul
push
sbb
(bad)
adc
xchg
(bad)
mov
fmul
inc
ins
movs
jbe
and
push
movd
push
in
jae
adc
or
xchg
pushfw
mov
push
add
lea
fs
mov
cwde
pop
enter
mov
mov
in
(bad)
push
arpl
mov
loopne
cmps
jnp
aaa
(bad)
pop
mov
mov
cmp
fcmovne
xchg
je
mov
mov
pop
ja
mov
fdivr
ins
sub
fstp
and
mov
or
add
jmp
test
jae
fs
add
rol
or
or
inc
retf
jnp
dec
jbe
mov
icebp
inc
mov
inc
inc
mov
cld
add
inc
out
cwde
das
ss
xchg
rol
std
das
aam
gs
dec
cmp
retf
jmp
push
(bad)
add
ss
inc
or
cmps
add
adc
push
inc
jecxz
popa
into
pop
ja
das
add
data16
lea
cwde
dec
loop
fstp
(bad)
enter
push
outs
repnz
cdq
gs
mov
push
and
scas
outs
cmp
pop
ds
and
cld
dec
jnp
ret
dec
and
retf
out
loopne
jns
dec
pop
push
lods
pandn
push
arpl
call
mov
pop
push
gs
sub
mov
in
push
add
add
arpl
loopne
mov
cli
xor
mov
mov
sub
mov
lds
dec
rcl
dec
or
fimul
lock
(bad)
mov
sub
adc
push
jo
or
sahf
sub
out
push
aaa
inc
pop
push
push
jo
push
rol
movs
push
add
mov
mov
mov
add
sub
mov
cs
jl
jns
inc
js
in
xor
js
sbb
push
add
push
mov
sbb
xchg
mov
push
(bad)
loopne
or
call
fnstenv
adc
xchg
movs
cmp
jo
xchg
and
in
test
arpl
pop
loope
adc
pop
pop
scas
sub
shl
stos
loopne
jge
sbb
pusha
sub
push
adc
dec
push
or
sbb
je
mov
jno
or
pusha
xor
dec
xchg
mov
add
xor
popf
push
test
pop
pop
or
hlt
or
enter
leave
inc
push
sbb
in
jg
push
jmp
push
pop
in
add
popa
push
xchg
mov
sbb
test
sbb
jnp
inc
xchg
mov
sbb
sbb
stc
(bad)
xor
xchg
mov
or
rcr
scas
das
xchg
jno
cmp
inc
mov
jne
push
pop
cmp
je
xor
mov
movs
mov
mov
or
sbb
dec
add
fs
cwde
xchg
data16
dec
adc
stos
pusha
and
push
push
add
lea
push
lods
or
mov
fiadd
cmp
lea
je
lea
and
add
push
or
cmp
mov
and
cli
bound
stos
enter
mov
xchg
sbb
push
inc
sub
sti
or
icebp
fsubr
mov
xor
sub
jl
shl
mov
mov
test
test
enter
xor
sub
loopne
sub
fwait
psubusb
aas
aam
(bad)
xor
sbb
das
ror
sbb
xchg
das
jo
es
cs
icebp
xor
sbb
jo
ins
je
xchg
cmps
into
int3
xor
dec
test
ja
push
(bad)
fmul
pop
push
xor
sub
adc
adc
add
xor
xor
sbb
fsubr
enter
xchg
pop
popf
call
add
lods
out
mov
mov
add
sahf
(bad)
add
and
sbb
push
xor
mov
fld
mov
push
pop
adc
xchg
sub
add
jne
pop
add
gs
jo
mov
outs
or
jne
pop
pop
fstp
xor
mov
jmp
leave
fs
nop
mov
clc
into
stos
sbb
mov
push
mov
push
or
cmp
lea
pop
and
fcomp
aam
inc
imul
cs
out
clc
mov
shr
call
add
adc
cmp
xor
nop
out
mov
fmul
pop
pop
pop
shl
inc
movs
push
pop
or
inc
pop
fdivr
mov
movs
aam
add
std
adc
test
xor
div
loopne
cmp
mov
lahf
pop
push
mov
mov
pop
and
jae
fisttp
adc
ret
cmp
scas
scas
or
pop
test
push
xchg
test
ret
test
dec
(bad)
ficom
mov
repz
cld
je
dec
sbb
inc
xchg
xchg
inc
daa
push
mov
mul
inc
dec
mov
mov
test
xor
add
and
cmp
jne
je
fistp
popa
xchg
pusha
cmp
pop
push
mov
mov
jbe
dec
or
cmps
and
retf
out
mov
bswap
rcr
in
mov
lock
cmp
sub
mov
sbb
rcl
mov
cld
sbb
clc
mov
mov
retf
hlt
inc
int3
iret
ror
cdq
popf
outs
inc
imul
lods
add
je
push
dec
hlt
sub
push
arpl
ror
lock
movs
shl
push
in
add
mov
das
movs
mov
movs
cmp
cmp
std
mov
sub
sbb
jmp
push
push
iret
pop
dec
fs
fnstenv
add
shl
xchg
and
sbb
ret
aaa
(bad)
sbb
add
(bad)
push
clc
out
or
push
push
xor
push
cmp
or
ror
push
ret
xor
or
sbb
mov
pop
mov
jns
stos
mov
mov
or
dec
in
sbb
cmc
push
(bad)
push
int3
push
inc
inc
mov
retf
pop
mov
cmp
pop
popa
loope
in
push
cmps
sahf
mov
call
lods
(bad)
mov
movs
mov
gs
lock
inc
add
add
hlt
sbb
test
push
mov
pop
dec
inc
test
loopne
pop
inc
call
ret
mov
xor
not
push
aam
pop
adc
add
adc
enter
dec
xor
test
adc
or
jmp
jnp
jmp
ret
scas
fsubr
out
push
ins
cmp
addr16
cmp
ret
push
mov
icebp
mov
sub
clc
je
cmp
sub
xchg
dec
sub
push
add
adc
push
inc
push
and
cdq
jecxz
fwait
push
bswap
cdq
scas
add
ret
xlat
xor
push
fisub
(bad)
std
inc
cdq
outs
xchg
retf
cmp
jl
test
mov
int3
xor
sar
pop
sub
call
xor
cmp
jne
retf
fbld
sbb
push
add
iret
imul
aad
shl
mov
popf
ss
(bad)
out
stos
adc
mov
sbb
and
iret
leave
loope
push
stc
push
popf
fcmovnu
loope
in
cmp
add
(bad)
push
push
(bad)
sahf
adc
push
sar
repz
xor
and
xor
bound
in
pop
adc
push
mov
lahf
in
xor
das
in
sub
movs
loope
lock
out
push
dec
or
in
and
out
xor
cli
adc
inc
or
pop
pop
call
push
cwde
pop
imul
ja
adc
and
mov
jne
call
cli
mov
inc
out
lock
rol
pmaxsw
push
shl
push
add
jl
cld
adc
sub
div
add
cmp
fbld
jmp
ret
or
loop
adc
fwait
xor
int
inc
and
cmp
je
sbb
jbe
push
(bad)
punpcklbw
cmp
je
sti
mov
popa
pop
pop
mov
push
pop
sbb
jbe
add
inc
or
pop
push
test
mov
xor
(bad)
fst
push
mov
push
(bad)
xchg
add
daa
add
test
push
sub
dec
and
cmp
cmps
dec
or
(bad)
shl
adc
test
(bad)
clc
mov
mov
mov
add
shl
mov
inc
imul
in
scas
cdq
or
jne
ret
adc
dec
or
aaa
sbb
dec
and
mov
aas
dec
mov
hlt
mov
add
js
or
cld
daa
jecxz
push
cmp
je
xor
je
mul
seto
scas
push
fild
enter
imul
dec
aaa
dec
push
jmp
jnp
cmps
mov
(bad)
push
xor
test
jbe
jge
movs
inc
jb
iret
shl
cdq
push
ins
or
mov
aad
retf
cs
dec
inc
add
xchg
sbb
pop
popa
sub
inc
ja
or
inc
sbb
inc
add
push
sbb
loop
dec
cdq
inc
and
adc
and
pop
sbb
inc
daa
push
inc
add
mov
or
nop
push
dec
mov
mov
hlt
xor
pop
sub
ds
xor
xchg
cmp
lods
addr16
mov
mov
jmp
push
and
leave
add
nop
cmp
push
in
pop
mov
mov
pop
lock
pop
sub
sbb
cmp
je
sbb
add
mov
cs
lock
cmp
jne
xor
hlt
add
retf
xchg
adc
ss
add
dec
adc
ins
and
mov
(bad)
faddp
jmp
jl
ret
fwait
jle
lahf
pop
push
test
je
cli
jmp
mov
inc
jno
test
neg
inc
cmp
jae
add
xor
mov
inc
xor
cmp
add
mov
push
sbb
cmp
jne
and
xor
sub
add
mov
push
ss
push
inc
(bad)
aad
inc
jmp
repnz
scas
mov
test
dec
cmp
les
sub
call
mov
cmp
xor
scas
sub
retf
je
jno
pop
das
movs
neg
clc
push
push
jne
les
mov
sbb
stos
dec
or
xlat
dec
enter
and
or
ins
in
cmp
jne
sub
fisubr
ja
lea
cld
xchg
test
dec
mov
rol
ror
(bad)
push
jle
add
jmp
jns
mov
pusha
loope
or
inc
jae
je
(bad)
sub
shr
add
or
mov
or
push
or
mov
push
mov
inc
sub
xchg
inc
sbb
jg
push
(bad)
rcr
sbb
cmp
mov
cmp
or
ins
stos
shr
mov
fwait
or
pop
add
mov
mov
sub
jno
or
mov
push
or
add
jnp
add
inc
aad
push
push
movs
or
or
clc
sub
lea
push
mov
jl
mov
push
imul
in
push
je
gs
xor
(bad)
xchg
(bad)
jmp
mov
ret
and
cmp
xchg
test
(bad)
js
sbb
inc
push
add
adc
inc
(bad)
icebp
dec
push
test
sub
out
push
clc
test
sub
js
push
push
iret
sbb
adc
dec
imul
pop
ret
rcl
add
push
jae
fiadd
jmp
test
mov
add
jne
mov
rol
(bad)
push
sub
mov
neg
add
ret
sub
cli
jp
or
push
adc
js
jne
test
mov
push
push
pop
adc
je
inc
jmp
in
or
int
mov
xor
dec
add
popf
cmp
or
sub
in
jmp
adc
push
ret
or
rol
inc
mov
mov
pop
ret
xchg
outs
xchg
popf
dec
pop
bound
in
push
lods
xchg
mov
in
adc
mov
cdq
jbe
and
jnp
jno
cwde
test
xchg
add
jmp
jg
imul
add
sub
lock
add
loope
and
mov
and
add
mov
or
cmp
clc
and
inc
adc
imul
mov
mov
pop
and
mov
in
pop
add
pusha
or
aam
mov
int
add
cwde
fmul
sbb
je
outs
test
sbb
aam
mov
icebp
xor
enter
sub
lahf
mov
push
add
imul
mov
jg
pop
inc
or
mov
push
or
xchg
pop
sub
sbb
enter
pop
cs
in
dec
lahf
or
mov
fmul
sub
into
addr16
jmp
inc
push
scas
leave
ret
cmp
mov
mov
sbb
mov
or
test
mov
cmp
js
mov
and
jmp
pop
je
or
push
mov
test
dec
rcl
sub
movs
or
push
mov
jp
jle
mov
sbb
sbb
sub
mov
jnp
mov
jmp
push
add
add
dec
sub
movs
repnz
popf
dec
fisttp
push
push
add
inc
rcl
sub
or
shl
loope
pop
inc
mov
ins
lods
mov
pop
and
mov
pop
popf
xchg
or
int3
cmc
repz
lea
(bad)
push
fnstcw
sub
sub
or
sbb
sub
daa
sub
xor
add
cmp
adc
rcr
dec
outs
adc
rcl
fisttp
cmp
jbe
call
sbb
inc
ret
pop
cmp
aad
repz
imul
pusha
inc
sbb
test
adc
iret
mov
in
ins
shl
cdq
xchg
daa
and
out
fcomp
repz
retf
and
adc
push
pop
mov
and
ficom
ins
xor
jecxz
(bad)
iret
sar
or
sub
push
cdq
fsub
call
pop
push
daa
pop
leave
lea
cmps
adc
mov
in
push
loopne
hlt
enter
(bad)
clc
adc
aad
push
iret
enter
push
dec
outs
inc
les
sub
sbb
add
cmp
cmp
jp
sbb
(bad)
adc
and
jae
mov
push
push
pop
inc
xor
test
and
and
int
(bad)
sbb
mov
jmp
mov
jecxz
aaa
push
sahf
js
push
(bad)
rol
jp
ret
loopne
mov
loop
push
in
or
popf
add
mov
sub
lods
mov
adc
sbb
daa
aaa
inc
inc
mov
jb
mov
loop
mov
bound
xor
cmp
and
inc
or
aad
pop
and
push
stc
pop
xor
pop
and
lahf
adc
and
sub
sbb
fwait
add
pushf
out
sbb
jg
push
cs
push
pop
fwait
aas
pop
pop
push
movs
loopne
cmp
in
pop
xor
fimul
and
sbb
sbb
in
sub
test
jmp
lahf
push
fdivr
faddp
nop
mov
mov
js
push
ret
fisttp
test
pop
inc
inc
das
add
mov
pop
sbb
mov
pop
hlt
push
dec
(bad)
aad
mov
rol
mov
xchg
and
outs
cmp
and
std
lods
es
cmp
cmps
and
xor
mov
dec
ret
dec
adc
into
and
cmp
scas
mov
stos
dec
or
rol
mov
call
clc
adc
das
push
mov
sub
test
(bad)
hlt
mov
adc
add
mov
push
push
adc
sbb
xchg
xchg
enter
mov
sbb
or
test
pop
lods
sbb
add
cmp
jl
test
jno
xor
xchg
sub
test
inc
mov
addr16
jmp
adc
pop
xchg
pop
ja
xchg
(bad)
fiadd
popa
xor
push
in
push
push
mov
in
test
push
fcom
scas
and
test
pop
dec
push
std
lods
mov
mov
dec
sar
js
loop
out
push
push
push
in
mov
mov
retf
hlt
cwde
or
or
add
xlat
cdq
or
mov
pop
mov
cs
push
add
push
ins
inc
test
mov
dec
hlt
add
push
imul
ret
jo
shl
ss
xor
dec
call
jno
or
stos
nop
or
or
mov
sbb
imul
js
xchg
popa
inc
inc
dec
jmp
mov
lods
test
out
dec
push
sub
adc
jmp
jae
loopne
movs
pusha
jo
inc
ins
pop
mov
and
loopne
fmul
in
mov
add
mov
inc
pop
ret
sbb
cmp
inc
push
popf
idiv
loopne
mov
xchg
mov
add
add
cmps
adc
in
xchg
sbb
pop
sar
jmp
inc
or
inc
jno
mov
mov
xchg
inc
or
or
jg
loope
mov
jne
pop
xchg
je
popa
push
push
lock
xchg
fstp
mov
or
jbe
jmp
xor
jle
xor
in
sar
test
fmul
rcr
jnp
jl
ror
pop
cmp
inc
mov
gs
ins
test
push
imul
inc
xchg
mov
push
icebp
adc
enter
out
jle
sbb
add
xor
cdq
xor
sbb
mov
loope
shl
add
cdq
inc
sbb
(bad)
adc
fist
clc
cld
outs
mov
clc
inc
push
sahf
sbb
fadd
or
sbb
mov
cmps
adc
fmul
xchg
loope
shl
or
mov
xlat
loopne
pop
rol
inc
cli
inc
lock
daa
in
add
add
xchg
push
pop
or
repz
neg
test
inc
or
cld
sub
mov
mov
xchg
cmp
sub
xor
stos
jle
push
into
dec
xor
inc
inc
scas
es
add
xchg
push
js
inc
push
pushf
pusha
out
or
mov
shl
js
lds
and
xchg
rcr
repnz
sbb
(bad)
adc
fucomip
in
and
daa
and
jno
or
outs
adc
icebp
xchg
clc
aas
dec
add
add
xor
xor
add
or
imul
dec
sbb
or
sahf
xchg
cmp
sub
lahf
sbb
cmp
pop
or
loope
push
adc
cld
mov
out
jnp
or
push
push
lock
push
jp
inc
je
out
xor
or
push
outs
adc
cmp
or
shl
add
dec
loope
add
xor
adc
dec
ror
xor
xchg
cmp
out
add
pop
jne
push
mov
pop
ret
push
inc
or
mov
out
mov
popf
mov
dec
stos
and
ror
pushf
add
movs
adc
rcr
dec
adc
cmp
jbe
sbb
inc
outs
aas
sbb
sbb
adc
mov
xchg
stc
(bad)
jae
cmp
jb
cmp
dec
mov
dec
adc
rcr
mov
add
inc
cmp
call
adc
inc
je
ret
add
cmps
sbb
add
dec
call
enter
and
fild
ins
pushf
add
pushf
inc
and
inc
xchg
push
cmp
dec
pop
or
push
push
or
out
add
push
aas
adc
push
push
fdivr
aaa
push
add
add
sbb
mov
adc
push
aas
ret
aam
out
and
add
shl
push
test
sbb
jmp
test
mov
mov
imul
icebp
ror
xor
fmul
or
loope
adc
rcl
outs
call
push
push
lea
out
arpl
cmp
adc
lea
xlat
jno
and
push
es
fwait
push
push
aam
push
pop
add
pop
mov
adc
in
ins
(bad)
xlat
push
inc
pop
xchg
or
pop
adc
lock
pop
sti
jb
popf
dec
adc
add
xor
or
or
fmul
loop
mov
scas
sub
cmp
mov
push
xor
fs
mov
cld
cmps
and
push
ret
pop
xor
and
aas
pop
sbb
inc
pop
push
and
cmps
or
les
inc
adc
mov
jp
xchg
or
in
mov
mov
and
xor
repnz
and
(bad)
rol
inc
sbb
or
loop
sahf
jle
sbb
sub
push
add
dec
shl
rol
data16
inc
cmps
pop
ffreep
inc
or
push
sbb
les
sbb
fcom
fadd
add
inc
sub
dec
shl
sub
cwde
jle
lea
and
stos
jb
dec
pusha
xchg
ret
push
pop
lea
mov
jge
add
add
js
retf
in
dec
add
inc
add
mov
enter
sahf
shl
sbb
xlat
and
les
popa
and
mov
cmp
je
sbb
inc
pop
sbb
push
lea
lea
xor
mov
or
xor
and
imul
enter
test
fimul
mov
push
sub
retf
int3
pop
aam
and
xchg
push
inc
add
ja
(bad)
hlt
dec
stc
mov
and
pop
pushf
xchg
add
and
cmps
imul
call
(bad)
shl
sub
cmp
cmc
add
test
mov
sbb
sub
mov
loope
cmc
and
iret
ja
repnz
popf
(bad)
jmp
(bad)
cmp
mov
adc
call
pop
int
daa
and
inc
pop
inc
cmp
in
aaa
mov
rol
or
xor
out
adc
pop
in
test
mov
push
out
cmp
push
lock
daa
or
idiv
je
sub
mov
out
hlt
aas
mov
cmp
lods
jo
jg
and
xchg
retf
mov
adc
imul
inc
mov
jne
sub
sub
mov
pusha
add
fisub
xor
das
cwde
por
push
add
fwait
pop
xor
jge
int
jns
and
add
pusha
pop
ret
aaa
mov
cmp
add
ss
or
mov
out
pop
and
or
sub
dec
xchg
xor
dec
push
je
dec
jne
dec
js
sbb
out
clc
adc
push
inc
loope
ins
and
das
lahf
xor
or
add
test
inc
leave
mov
nop
(bad)
int3
pop
cli
lea
dec
lea
repz
in
cmp
sbb
mov
mov
movs
popf
les
or
push
cmp
popf
retf
mov
fsub
xor
fdivr
xchg
gs
mov
lea
cli
jb
adc
loope
xchg
ror
xor
adc
sbb
or
xchg
ja
xchg
pop
sbb
ins
je
movs
mov
inc
aas
add
cmps
push
retf
mov
inc
and
sbb
jge
popf
popa
test
dec
mov
arpl
adc
adc
add
fs
push
xor
push
push
xchg
pop
adc
dec
inc
ret
xor
add
into
mov
and
cmp
test
push
add
push
sub
sub
ds
je
lahf
push
sar
ror
(bad)
mov
aam
or
pop
jno
adc
xor
sub
xor
add
lock
les
and
jg
sub
inc
lea
push
and
mov
push
or
sub
loope
out
out
jle
jo
push
jne
cmp
jbe
sub
push
jmp
pop
mov
into
jmp
sbb
(bad)
fcomp
popa
dec
pusha
clc
nop
mov
xlat
cwde
cmp
ret
arpl
clc
jb
fist
into
ret
mov
push
test
pop
push
xor
cld
dec
test
mov
pop
pop
ret
adc
(bad)
out
push
xor
jo
cmp
adc
sbb
lock
push
lods
adc
rol
add
push
test
push
xlat
mov
jbe
shr
and
cs
aaa
js
in
inc
loopne
stc
cmp
sub
push
xor
add
adc
mov
bound
cmps
stos
xchg
adc
xlat
inc
pop
dec
push
jmp
je
test
test
mov
xor
(bad)
jmp
add
dec
xchg
icebp
in
xor
adc
enter
push
sub
mov
or
pop
pop
jmp
adc
mov
sbb
push
sahf
inc
cmp
adc
mov
xchg
and
push
mov
cmp
push
and
fbld
idiv
push
mov
mov
cdq
push
push
push
cli
mov
into
cmp
jnp
add
jnp
lds
inc
movs
jbe
lock
pushf
mov
aaa
sti
jo
add
inc
adc
push
and
sub
dec
push
add
les
xchg
and
sbb
xchg
fidiv
add
push
mov
pop
pop
leave
jecxz
sti
rcl
mov
in
ss
mov
add
sub
adc
cmp
std
push
jecxz
sbb
and
jge
icebp
mov
mov
or
adc
add
ins
sub
ret
test
inc
pop
int
int
gs
dec
add
and
xchg
popa
push
mov
ja
xor
loop
lds
add
dec
add
lods
jnp
jo
pusha
jo
enter
ins
mov
xor
xchg
push
dec
inc
jge
call
in
jnp
dec
mov
popf
mov
fadd
xchg
jl
daa
mov
xor
push
repz
test
xchg
sub
fs
push
imul
xor
mov
mov
pop
jae
inc
cmp
add
jns
mov
shl
imul
cwde
mov
xchg
adc
std
cmp
je
push
(bad)
sbb
stos
popf
pop
push
loope
fiadd
xchg
xchg
and
in
loop
stos
push
sub
lods
adc
fdivr
imul
cli
pop
or
nop
out
and
or
jge
xor
mov
imul
or
mov
in
fadd
and
mov
xor
retf
jle
jnp
lods
and
mov
jae
into
and
aas
ror
mov
daa
inc
in
retf
push
pop
pop
xchg
push
add
daa
jne
div
test
xor
sub
mov
add
mov
inc
test
jl
ss
or
fs
mov
inc
dec
mov
push
mov
popa
lock
(bad)
cmps
mov
fs
je
sub
cmc
mov
test
sbb
out
(bad)
daa
dec
je
mov
fsubr
sbb
sbb
cmps
pop
lock
inc
inc
sub
jns
push
test
cmp
pop
ret
or
cmp
aam
dec
and
dec
cmp
dec
inc
or
sbb
pop
pushw
sbb
pop
push
popf
cmp
in
mov
or
test
pop
xor
sub
lea
in
aaa
sti
mov
sbb
and
sbb
cld
pop
inc
std
xchg
adc
sub
xor
in
add
hlt
mov
mov
xlat
push
ret
dec
pop
mov
cmps
mov
es
daa
iret
push
or
push
mov
adc
jno
into
test
or
adc
sbb
push
mov
push
xor
mov
sub
imul
outs
cmp
jg
popf
or
aas
loop
sub
dec
cwde
stos
imul
jl
push
outs
arpl
xor
inc
mov
xchg
cmc
jns
mov
in
xchg
pop
mov
xor
gs
inc
aam
dec
test
push
cli
ins
cmp
sbb
xchg
push
xor
rcl
test
or
and
inc
push
pop
dec
test
cmc
adc
push
out
cmp
jge
xchg
stos
dec
sbb
movs
sahf
xchg
jmp
pusha
jbe
lahf
xchg
cmp
ins
out
sbb
push
push
dec
and
sbb
sbb
cmp
xchg
ss
and
dec
inc
in
push
int
fbstp
sbb
add
sub
adc
int
push
mov
jecxz
lods
dec
add
inc
fidivr
shl
(bad)
out
pop
or
jp
sbb
inc
dec
xchg
add
xor
sbb
aaa
cmc
and
add
inc
sahf
loop
movs
pop
xchg
and
pop
mov
aaa
fistp
cmp
imul
fst
add
out
sub
sub
fwait
xor
lock
(bad)
push
adc
xor
or
in
push
test
push
mov
pop
cmps
loope
retf
std
aas
(bad)
in
pushf
pop
pop
test
in
pop
mov
xchg
inc
push
or
cmps
cwde
or
push
and
out
adc
sub
dec
sbb
in
and
imul
inc
dec
adc
sub
sub
dec
fisttp
and
jl
stos
or
shr
fcmove
or
push
mov
or
jmp
out
sub
lods
loope
rcl
movs
xchg
mov
cmp
daa
xlat
lea
loop
jne
push
or
aaa
sub
push
add
inc
cld
lods
mov
lods
pop
pop
cdq
adc
jo
cmp
and
xchg
and
(bad)
and
inc
jo
mov
mov
(bad)
mov
and
sbb
adc
(bad)
ror
xor
dec
dec
sbb
nop
mov
mov
and
lea
cmp
xor
jo
ins
nop
xor
mov
je
push
push
mov
jb
push
enter
sub
add
add
pushf
inc
aaa
ret
dec
ss
and
cmp
xor
retf
pop
push
adc
jno
pop
(bad)
mov
inc
push
test
(bad)
cmp
je
(bad)
cwde
xlat
cmp
push
daa
dec
xchg
inc
dec
dec
cmp
jecxz
cwde
(bad)
and
add
movs
outs
jne
lea
icebp
movs
cmp
inc
pusha
enter
xor
add
mov
inc
div
or
sti
stos
je
icebp
adc
outs
mov
mov
imul
push
cmp
jecxz
dec
rcl
adc
ja
adc
sub
test
sbb
adc
cmp
fwait
pop
push
lods
xor
retf
cmp
sub
push
xchg
cmps
gs
inc
fidivr
push
adc
cmp
or
in
cmp
push
and
sbb
imul
sub
cdq
adc
loop
and
test
cmc
jbe
mov
mov
mov
jo
mov
push
mov
pusha
adc
fstp
jb
lock
add
scas
movs
fld
inc
pop
mov
(bad)
in
mov
int
jecxz
adc
mov
lock
mov
mov
and
jl
xor
pop
cmp
xchg
jb
shl
or
outs
jmp
pop
iret
jbe
inc
adc
mov
mov
imul
xchg
or
xor
mov
iret
push
add
jmp
pop
cmp
not
sahf
fwait
mov
xor
cmp
or
adc
cmps
jmp
mov
je
and
sub
shl
pushf
push
and
ja
push
adc
loope
adc
imul
popa
dec
and
sar
mov
mov
pop
jecxz
dec
cdq
cwde
retf
cdq
loope
dec
movs
pop
sub
pop
sbb
xchg
ret
enter
push
cli
popf
mov
xchg
cwde
cmp
retf
repz
in
div
mov
(bad)
adc
ss
xchg
xchg
mov
call
outs
pop
fcomp
pop
push
pop
jge
rol
push
lea
cmp
xor
in
pop
(bad)
push
cmps
or
loopne
int3
retf
inc
adc
adc
mov
mov
xorps
retf
loope
shl
push
sub
or
xor
packuswb
ret
cmp
sub
push
das
(bad)
cmp
sbb
push
cmp
js
push
push
sbb
(bad)
jb
push
jecxz
push
dec
push
xchg
adc
jp
lds
push
pop
sti
sbb
or
ret
pusha
fcom
jnp
fidivr
dec
test
pop
repnz
inc
sub
int
pop
or
sbb
dec
and
nop
sbb
and
nop
or
call
and
and
and
mov
pop
jb
and
or
jne
sub
ret
mov
nop
es
shl
dec
lds
push
or
popf
push
hlt
ror
xchg
daa
xchg
sub
test
inc
jmp
stc
cwde
sub
and
stos
jae
sub
jb
sbb
pop
sub
mov
sub
xchg
(bad)
sbb
pusha
pop
push
ins
jbe
dec
add
mov
pusha
xor
arpl
pop
mov
push
push
sbb
mov
mov
inc
das
or
push
rol
mov
dec
mov
and
les
outs
jne
sub
or
inc
push
repz
dec
mov
add
cvtdq2ps
shl
push
sti
fcom
and
movs
jns
call
jns
and
fistp
movs
adc
and
and
test
add
arpl
add
mov
add
xor
daa
(bad)
imul
inc
xchg
inc
or
dec
push
inc
pop
and
adc
cmp
test
and
fisub
movs
xchg
add
or
movs
push
add
aad
in
mov
sti
push
adc
and
jle
(bad)
or
and
cmps
es
cmp
in
ficom
xor
lock
xchg
loope
pop
jne
xor
inc
popf
push
rcl
sub
lock
add
enter
mov
pop
ins
dec
(bad)
leave
daa
or
sub
pop
popf
lds
pusha
loopne
add
push
aam
outs
mov
sbb
push
in
js
mul
mov
and
jne
add
call
push
test
test
in
cmp
je
mov
and
sub
jne
(bad)
fild
mov
or
pop
and
stos
pusha
push
pop
push
xor
loopne
push
push
dec
mov
(bad)
(bad)
test
adc
je
mov
push
(bad)
push
icebp
sahf
cmp
xor
lock
adc
test
push
push
icebp
or
adc
xor
and
scas
sub
pop
lock
sbb
xor
inc
fisttp
push
pop
mov
je
inc
xlat
adc
hlt
jecxz
test
push
mov
and
adc
bswap
push
shr
mov
arpl
mov
jl
inc
add
les
mov
mov
sbb
dec
test
gs
xchg
int3
jge
xor
xor
call
mov
jnp
jp
xor
adc
cmp
fnstcw
scas
imul
xchg
adc
test
mov
mov
sar
aad
pop
enter
push
fidiv
les
adc
pop
mov
pushf
cmp
shl
(bad)
cs
clc
pop
xor
scas
out
or
loop
push
push
add
jg
test
ja
cmp
lock
je
adc
cdq
jp
aaa
sbb
inc
or
push
cmp
clts
bnd
jl
adc
lahf
or
adc
mov
sub
sub
es
push
or
adc
sub
loopne
sar
adc
out
cmp
repnz
fincstp
pop
push
clc
imul
shr
dec
add
jle
inc
inc
push
push
adc
add
and
in
inc
jo
mov
push
dec
jecxz
mov
adc
mov
sar
jno
inc
aas
xchg
daa
xor
cmp
inc
aad
adc
movs
rcr
mov
aam
pop
pop
mov
sub
inc
jcxz
mov
mov
mov
popf
mov
loope
clc
lea
jae
jle
ret
sbb
adc
jl
mov
lea
inc
sub
nop
add
fnstenv
add
(bad)
loopne
les
in
mov
adc
and
pop
cmps
dec
dec
mov
bound
mov
and
dec
or
cmp
inc
dec
sub
push
inc
jmp
mov
jo
cmp
bound
aaa
imul
bound
pop
out
lds
fist
enter
adc
loope
icebp
and
inc
add
cmp
pusha
pop
mov
inc
sbb
nop
popf
jg
mov
mov
add
add
movs
inc
or
popa
ja
stos
mov
test
mov
repnz
sbb
xchg
mov
mov
fiadd
mov
mov
dec
cmps
or
sub
add
fisttp
or
int3
(bad)
nop
pop
sbb
or
mov
aas
sbb
push
mov
or
das
or
mov
add
cmp
(bad)
push
add
xchg
in
fchs
test
dec
push
in
push
sbb
jp
out
jecxz
imul
fsub
cmp
jle
cld
jae
inc
add
outs
mov
mov
sbb
and
or
mov
cmp
rol
shl
pop
xor
fiadd
or
pop
sub
dec
ret
cvtps2pd
div
sbb
mov
retf
jp
cdq
sub
daa
repnz
push
jmp
add
daa
loop
sbb
outs
push
rol
sub
inc
inc
or
mov
pop
inc
push
mov
dec
sub
mov
lods
add
aas
push
(bad)
ror
cmps
rcr
cmc
mov
add
stos
xor
mov
cli
sbb
cmp
rcr
add
mov
arpl
add
pop
xor
dec
add
adc
inc
mov
inc
fisub
call
out
push
add
jle
push
mov
jp
pop
xchg
add
inc
add
or
cld
lea
dec
cmp
or
xchg
xchg
inc
or
mov
sbb
inc
or
cs
loopne
inc
adc
ins
sti
in
push
ficom
pop
add
lds
inc
scas
loopne
lds
push
push
push
imul
(bad)
gs
push
push
adc
and
add
pmaxub
cmp
iret
inc
test
sbb
mov
pusha
pop
lea
dec
jmp
adc
adc
dec
pop
sub
popf
pop
adc
jp
add
dec
loopne
or
mov
inc
mov
jbe
scas
push
sub
and
add
push
fimul
inc
(bad)
mov
cmp
inc
xor
mov
mov
adc
mov
push
cmps
mov
mov
out
xor
loopne
cmp
lods
pop
adc
adc
push
adc
xchg
mov
inc
lea
inc
pop
dec
pop
popa
push
mov
push
or
xor
and
popf
adc
pop
pop
scas
or
cmp
push
js
inc
add
test
retf
lods
adc
movs
inc
lods
fidiv
add
jo
adc
push
cmp
popa
nop
clc
cwde
sbb
mov
xchg
inc
not
outs
popf
scas
sti
or
xchg
mov
mov
adc
push
pop
xor
mov
mov
xchg
push
lea
dec
jge
int
push
push
xor
dec
mov
fsubr
xchg
out
push
daa
mov
sbb
jnp
pushf
movs
inc
je
sahf
loopne
mov
inc
das
inc
add
and
add
push
fdivr
js
popf
fs
sbb
ror
sbb
outs
sbb
jmp
mov
cmps
push
or
adc
jmp
adc
es
lahf
inc
fild
jns
add
push
sub
dec
pop
push
dec
cmp
xor
ror
add
sub
adc
pop
(bad)
aaa
xchg
pop
xchg
mov
jp
js
fisubr
fdiv
pop
add
jb
xor
add
in
call
(bad)
cmp
rol
jbe
pop
test
fnsave
jmp
dec
add
jg
mov
mov
js
mov
fistp
movs
pop
mov
callw
xchg
push
push
call
dec
adc
test
xor
dec
iret
or
loope
inc
cmp
in
xor
(bad)
movs
push
push
lea
xor
jne
inc
js
ficomp
cmp
nop
mov
movlps
enter
pop
sub
adc
mov
mov
and
outs
stos
xor
add
data16
push
pop
rol
test
sti
adc
fidiv
xchg
add
test
aas
push
xlat
push
and
adc
xor
inc
or
sub
dec
add
dec
aaa
jb
add
jmp
adc
xchg
and
scas
cmp
push
sbb
inc
pop
and
jle
retf
jge
enter
pop
cli
push
sbb
add
call
mov
add
sar
dec
retf
inc
inc
push
mov
add
outs
in
inc
cmp
dec
dec
inc
icebp
movs
sbb
dec
or
xchg
ret
sahf
lods
(bad)
fcom
mov
arpl
jge
push
inc
jecxz
fstp
pop
jecxz
mov
xchg
(bad)
ss
or
xchg
push
call
out
mul
sub
jl
adc
sbb
jo
push
add
adc
sub
mov
cmp
shl
push
lods
nop
out
bound
retf
movs
xchg
jge
and
adc
sbb
xchg
cmc
loopne
xchg
add
xor
out
jae
sub
cmp
xchg
jns
push
jmp
cmp
pop
xlat
addr16
push
fdiv
mov
pop
cmp
ins
xchg
ins
jo
push
xor
mov
sti
push
and
mov
into
xor
mov
(bad)
sub
adc
dec
dec
fs
or
add
dec
and
and
add
inc
test
and
add
jbe
cmp
out
inc
cwde
xchg
adc
jecxz
jne
dec
in
clc
xchg
push
pop
push
int
mov
test
mov
mov
sbb
cmps
aam
and
mov
cmp
push
and
mov
push
push
or
add
cmp
dec
jae
lea
jno
scas
push
jo
dec
inc
add
xchg
xor
test
adc
push
add
test
mov
(bad)
mov
jnp
imul
and
adc
xor
mov
or
rcr
add
xchg
out
mov
pop
add
bnd
scas
loopne
jnp
inc
mov
dec
cmp
sbb
sub
push
dec
jp
mov
adc
ret
sub
push
je
(bad)
add
js
lods
iret
push
fnstcw
pop
das
sti
(bad)
sbb
pop
sub
sub
mov
scas
mov
inc
mov
in
jb
sub
and
jne
mov
(bad)
enter
pop
xchg
cwde
sar
add
int3
adc
sbb
push
mov
cmp
pop
sbb
sbb
mov
xor
inc
sar
adc
ret
sbb
add
adc
mov
adc
push
mov
nop
lds
loopne
mov
mov
mov
sub
bts
or
imul
fdiv
mul
mov
test
xor
dec
loopne
movs
add
mov
fsubrp
push
js
popa
add
movsx
mov
(bad)
jno
jne
and
outs
mov
or
je
adc
fwait
dec
test
arpl
adc
mov
pushf
mov
cmp
push
inc
fldpi
mov
hlt
push
inc
div
sbb
mov
or
je
mov
in
pop
(bad)
dec
retf
pop
js
je
retf
pop
mov
pop
ins
mov
pop
add
lock
imul
mov
mov
movs
jecxz
std
xor
(bad)
mov
aas
lea
stc
lock
(bad)
gs
inc
dec
cmp
ss
add
xchg
push
xor
loopne
je
fs
adc
sub
call
scas
push
xor
pop
pop
(bad)
iret
gs
jbe
mov
fwait
and
sub
mov
sbb
jns
std
lock
sub
gs
jmp
inc
pop
push
inc
or
sub
sbb
mov
cmp
inc
mov
adc
add
out
fidivr
inc
imul
jno
pop
sbb
xchg
push
push
push
ja
in
jmp
mov
sub
das
ret
mov
stos
mov
hlt
and
inc
loope
sub
ffree
leave
inc
mov
push
push
ror
sbb
and
jl
adc
mov
ror
sub
push
ret
imul
and
test
ins
(bad)
add
dec
xlat
popa
cmp
mov
sbb
xchg
das
push
lock
and
jno
adc
test
cmp
cwde
in
adc
mov
das
aam
mov
inc
adc
jecxz
xor
out
add
imul
in
mov
mov
hlt
sub
xor
call
shr
cld
adc
or
sub
and
adc
retf
test
xchg
in
add
mov
cmp
adc
clc
mov
pop
and
je
inc
and
mov
push
jbe
pop
jae
xor
test
in
loope
jnp
push
dec
pusha
leave
or
ins
and
retf
enter
mov
in
or
inc
ja
mov
hlt
in
dec
mov
mov
sub
mov
cs
sub
gs
mov
cmp
inc
xchg
jbe
xor
mov
adc
adc
or
rcl
adc
loopne
mov
pop
cmp
call
adc
add
sbb
ins
and
sub
jno
adc
mov
jns
xor
or
mov
mov
clc
push
popa
cmc
mov
mov
cmp
inc
dec
inc
pop
inc
scas
cmp
test
int3
shr
add
pop
int
sbb
add
sbb
add
icebp
sub
sbb
dec
jmp
and
sub
cld
or
jne
movs
add
and
movs
rcl
mov
sbb
dec
xchg
inc
in
sub
jp
push
push
and
aam
hlt
jo
mov
fsubr
(bad)
sub
or
arpl
es
clc
sub
dec
stc
add
pop
sub
push
add
push
push
push
push
shl
loop
xor
in
and
popf
lds
xor
push
rol
xchg
mov
call
sub
cmp
and
push
cmp
jne
pusha
dec
ret
mov
popa
push
je
jns
xchg
xchg
pop
xchg
icebp
test
mov
sbb
cmp
data16
loopne
lahf
rcl
dec
pushf
popf
lds
dec
xchg
sbb
mov
das
adc
adc
pop
shr
cs
sahf
mov
shl
mov
pop
push
sub
test
js
and
retf
mov
lahf
pushf
jmp
push
inc
cwde
call
or
hlt
adc
mov
pop
in
clc
inc
add
push
pop
add
retf
xchg
ret
lods
fnstsw
mov
mov
mov
idiv
or
cmp
js
add
xor
pop
sbb
jbe
sub
or
dec
popf
enter
jmp
push
inc
retf
dec
clc
sbb
jnp
add
add
mov
dec
sbb
adc
cmp
ss
cmp
mov
push
xchg
push
pop
or
inc
sub
movs
icebp
inc
sub
add
rcl
sbb
xchg
dec
inc
inc
mov
iret
pop
inc
cdq
icebp
imul
(bad)
addr16
stos
enter
dec
add
xor
outs
cwde
mov
and
push
imul
sub
jb
jg
push
push
shl
arpl
movs
adc
pop
in
ins
xchg
addr16
cli
adc
lock
xchg
cmc
std
pop
dec
jbe
cmp
push
mov
out
cmp
inc
jne
push
jno
add
or
jnp
add
retf
adc
push
push
pinsrw
loopne
inc
fadd
lea
xchg
xor
add
mov
add
add
push
push
jl
mov
xor
jg
sbb
push
push
inc
adc
cmp
push
jo
mov
adc
xor
jmp
clc
add
adc
clc
es
fmul
push
mov
push
movs
dec
adc
sbb
jns
fadd
mov
and
das
arpl
ror
js
xchg
les
dec
in
bound
mov
cmp
addr16
inc
pop
por
and
dec
lods
mul
jge
mov
jl
adc
jl
movs
mov
dec
cmp
adc
ss
outs
mov
jbe
xchg
scas
sub
pop
into
pop
dec
pop
jo
scas
add
jmp
cmp
push
inc
rol
jmp
sbb
lock
pop
int3
je
ds
int3
pop
loop
and
push
xor
loopne
daa
adc
adc
or
jmp
cmp
push
push
in
and
imul
mov
sub
neg
dec
mov
jle
ins
xor
pop
cmp
cmp
push
dec
jge
inc
jo
and
xchg
mov
cmps
test
add
jecxz
push
pop
add
dec
test
jge
push
loope
daa
aas
fstp
dec
pusha
in
mov
sbb
retf
test
mov
ja
or
pop
add
inc
test
mov
xor
lea
jns
push
mov
add
stos
jno
scas
adc
push
shl
lea
fldenv
jge
std
popa
sub
aas
push
lea
push
loopne
or
imul
loopne
int
test
test
add
xor
xchg
xlat
adc
jnp
mov
pop
sub
and
sbb
adc
xchg
mov
adc
pop
mov
pusha
(bad)
(bad)
push
nop
stc
jle
add
cmp
sbb
cmp
stos
adc
sbb
push
retf
test
add
add
sar
dec
mov
push
je
jl
ja
mov
jns
icebp
sbb
pusha
adc
pop
jns
pop
adc
or
add
xor
popf
xchg
je
and
mov
cld
rol
(bad)
mov
dec
push
loopne
pusha
sub
jl
sub
jmp
out
jg
and
pop
sti
(bad)
call
dec
movzx
cmp
push
adc
dec
outs
or
loope
dec
dec
add
add
xchg
dec
sti
rcr
sbb
add
ins
and
jl
repz
lock
ins
cwde
jae
outs
xchg
xchg
dec
inc
addr16
inc
pop
mov
add
add
sbb
bound
pop
sbb
pop
in
or
pop
xchg
pop
and
pop
add
jo
pop
enter
cmp
jne
jb
fs
dec
xchg
add
enter
pop
dec
pop
push
pop
push
dec
aad
mov
(bad)
jo
cmp
lock
and
lea
jle
int3
rol
pop
push
add
ficom
sbb
out
in
and
and
push
push
inc
and
and
sub
or
or
sbb
xor
push
aaa
pop
mov
popa
sub
adc
and
push
mov
or
adc
rol
pop
xor
and
adc
shr
inc
pop
mov
xor
lock
cmp
mov
movhps
fwait
jle
adc
push
inc
jg
mov
add
pop
dec
inc
iret
mov
ss
cmps
add
dec
das
in
retf
push
mov
cld
test
lock
jmp
sub
sub
mov
and
or
mov
xchg
shl
lods
popa
adc
stos
mov
jbe
inc
adc
or
int3
and
push
add
or
jne
inc
pusha
mov
push
dec
inc
and
cld
pop
lods
or
inc
push
pop
dec
daa
xchg
fisubr
outs
push
cmp
pop
je
or
adc
inc
add
and
dec
or
mov
fadd
cmp
push
lahf
leave
sbb
jl
rol
in
push
or
xchg
mov
inc
hlt
ds
inc
lea
mov
pusha
push
enter
(bad)
mov
mov
mov
jne
imul
dec
movs
shr
mov
sub
div
and
and
scas
push
pop
xchg
dec
xchg
mov
add
movs
aad
lods
adc
in
push
or
scas
xor
xchg
sbb
hlt
(bad)
call
ja
jnp
dec
pushf
nop
(bad)
sbb
and
mov
jmp
loopne
inc
xchg
repnz
mov
in
add
jecxz
pop
pop
inc
fdiv
imul
push
mov
stc
and
adc
loope
(bad)
inc
(bad)
cli
dec
xor
fimul
push
data16
lock
adc
lahf
in
and
adc
cli
and
in
mov
sbb
arpl
sub
retf
nop
dec
sub
sbb
mov
jmp
icebp
sub
(bad)
inc
mov
jae
sub
sub
les
or
inc
aaa
jmp
mov
sub
mov
push
das
pop
inc
lea
mov
cld
not
or
xor
adc
adc
adc
jmp
pop
in
pop
xchg
mov
adc
dec
or
sbb
adc
test
(bad)
xchg
scas
jno
test
idiv
ins
xchg
xor
add
sbb
inc
mov
add
inc
sahf
imul
sbb
sub
nop
and
nop
in
pop
aaa
adc
mov
pusha
mov
pop
ret
adc
push
mov
dec
clc
loope
push
add
dec
sub
push
or
push
inc
add
js
or
popa
inc
sahf
sbb
inc
ss
mov
jl
sub
pop
dec
mov
in
pusha
popa
dec
inc
inc
lock
jns
or
test
jne
and
nop
repz
rcr
and
xlat
sbb
test
mov
addr16
test
jno
mov
inc
sub
mov
push
loope
(bad)
fwait
in
test
sbb
fnstsw
inc
and
call
pop
pop
xchg
lock
and
add
xor
div
ins
daa
jo
push
cmps
loopne
adc
push
shr
cmp
inc
out
fdiv
add
xchg
into
shr
fs
popa
xchg
push
inc
add
push
(bad)
enter
dec
pop
xchg
pop
rcl
jo
sbb
imul
rcr
addr16
cmp
loope
mov
movs
inc
mov
adc
call
jge
add
and
push
add
inc
call
cmc
add
dec
add
mov
aam
mov
mov
adc
movs
rol
cmp
mov
jne
push
sub
movs
cmp
enter
mov
dec
xchg
popa
xor
or
clc
iret
sub
in
(bad)
jmp
add
inc
inc
sbb
adc
les
(bad)
leave
js
pushf
outs
dec
jnp
pop
mov
ror
and
add
out
and
jae
push
and
xor
pop
fadd
xor
test
pop
sub
cmp
lods
or
add
es
cld
hlt
xor
leave
test
or
sub
rcl
ins
fldenv
(bad)
mov
xor
bound
push
push
pop
jo
add
stos
in
inc
stos
push
and
pop
inc
cmp
(bad)
sub
mov
and
push
jne
(bad)
adc
push
(bad)
fcmovnu
or
lods
cmp
jmp
push
jg
lods
inc
inc
fld
repz
cmp
out
pop
ror
push
je
xor
and
out
or
jge
push
pop
sub
or
push
push
pop
sub
mov
push
mov
pop
sub
cmp
rcl
mov
fistp
in
lds
mov
sub
adc
test
xchg
or
enter
rol
add
lods
and
ret
icebp
mov
pop
or
inc
or
pop
jo
pop
and
imul
mov
mov
(bad)
dec
sub
nop
inc
cmp
rol
dec
mov
or
outs
repnz
dec
inc
sub
and
push
or
and
icebp
or
iret
retf
mov
sar
mov
icebp
dec
pop
je
lods
dec
mov
test
aam
jecxz
xor
shl
add
(bad)
mov
icebp
and
sbb
or
push
and
push
add
pushf
inc
xor
jne
lea
mov
xor
scas
dec
repnz
pop
sub
xchg
mov
pop
mov
or
adc
xchg
dec
jne
push
test
and
dec
and
pop
inc
cmps
push
loope
lods
sbb
nop
lea
jae
nop
dec
pop
jb
or
or
or
nop
jge
es
jge
test
shl
jo
add
pop
das
and
adc
pop
cmp
out
pusha
test
xor
jbe
push
or
mov
inc
dec
or
xor
mov
pushf
scas
shl
or
add
add
or
push
or
fwait
add
(bad)
cmp
adc
push
jp
cmp
cmp
pop
lea
mov
inc
inc
sbb
mov
rcr
adc
pop
cwde
add
pushf
mov
sbb
inc
mov
or
or
xchg
add
add
in
neg
push
ret
push
test
adc
cwde
add
adc
sbb
inc
adc
arpl
adc
fnsetpm(287
rcr
rcl
adc
mov
pushf
ret
popa
xchg
shr
pop
pop
shr
pop
mov
sbb
mov
pop
mov
call
inc
add
es
lock
sbb
shr
rcl
fld
sbb
pop
cs
stc
or
imul
adc
fcom
xor
adc
mov
div
movaps
movs
mov
pop
pop
cmc
js
mov
dec
jmp
mov
cmp
enter
xchg
xor
stos
dec
pop
sub
test
dec
jmp
push
xchg
push
and
imul
sub
and
sbb
shl
retf
and
fnstenv
pop
fwait
mov
mov
inc
hlt
push
rcl
and
pushf
pusha
jnp
xor
in
xor
inc
or
push
jbe
pop
xor
xchg
and
adc
jb
push
dec
inc
dec
jmp
xor
sbb
add
xchg
sti
mov
cld
icebp
mov
sub
cmp
and
push
ror
enter
imul
fs
xchg
adc
add
mov
imul
pop
adc
cmp
xor
aas
ret
mov
sub
jmp
pusha
inc
mov
fld
and
jb
popa
test
hlt
or
addps
xor
or
sar
cmp
mov
scas
ror
adc
dec
mov
cmp
push
inc
arpl
xchg
push
add
sub
scas
cli
xchg
mov
retf
push
cmp
popf
add
mov
lea
mov
sbb
(bad)
lea
push
les
daa
test
inc
mov
push
sbb
dec
and
add
adc
and
test
xor
mov
jmp
or
cmps
movs
xchg
repz
test
mov
jmp
lock
shl
dec
jg
or
inc
jns
pop
jecxz
push
pop
das
test
or
xor
nop
and
test
sbb
lods
pop
inc
and
inc
pop
pop
dec
xchg
fisubr
inc
adc
sbb
nop
in
test
je
adc
inc
mov
and
pop
les
inc
cli
adc
cmps
ds
movs
push
dec
in
cmp
dec
inc
ret
fist
loope
xor
cmp
mov
fs
mov
fadd
cmp
push
iret
push
mov
cmp
inc
add
jp
sbb
lods
sub
push
and
mov
aam
js
dec
adc
mov
call
push
xchg
sbb
dec
and
add
movzx
add
add
fstp
dec
movs
loopne
sbb
mov
cmp
inc
or
or
or
or
mov
mov
xchg
pop
pop
or
mov
xor
dec
cmp
sbb
fist
ins
rol
push
push
jnp
or
ins
inc
shl
cdq
push
and
ret
ins
dec
dec
mov
xor
cs
pop
or
mov
test
inc
push
mov
mov
mov
or
mov
xor
mov
pusha
sub
dec
imul
ds
push
inc
ins
out
push
mov
repnz
push
xor
jmp
adc
cmp
cmp
fsub
mov
fisub
rol
adc
or
add
sbb
into
(bad)
jle
adc
ds
pushf
pop
pop
repz
dec
jl
test
inc
clc
jl
push
adc
and
push
adc
push
pusha
and
arpl
call
fisubr
mov
sbb
mov
fmul
xor
xchg
sbb
mov
mov
ret
movs
pop
loope
jp
pop
pushf
pop
add
fidiv
sub
sti
adc
mov
das
(bad)
in
sbb
mov
pop
jge
jmp
pop
cmp
mov
mov
jae
sbb
xor
std
dec
push
sbb
xor
sbb
inc
call
imul
sbb
cmps
fstp
pop
hlt
adc
add
push
dec
(bad)
leave
popa
adc
or
mov
adc
adc
dec
push
sbb
adc
mov
dec
bound
pop
jl
es
xchg
fsubr
xor
fst
(bad)
icebp
push
sbb
pop
sbb
and
add
das
mov
xor
xchg
and
sub
dec
ds
nop
cdq
xchg
xor
fs
(bad)
jno
lods
loop
fild
sbb
je
sbb
push
pop
ror
xor
inc
scas
inc
pop
and
out
nop
sub
ins
mov
aaa
(bad)
jmp
add
sub
dec
ror
xor
jmp
xor
pop
sbb
sub
es
inc
jge
add
push
push
cs
jmp
lods
push
xor
cmp
scas
dec
ss
push
(bad)
ja
jae
push
inc
sbb
add
and
sub
into
mov
ins
retf
push
imul
push
or
adc
and
repz
or
adc
xor
cmps
js
inc
sbb
(bad)
cmp
test
je
test
sub
inc
test
ja
fist
stc
mov
xor
hlt
lock
das
jmp
push
sub
cs
adc
movs
pop
push
push
mov
loopne
cmp
push
mov
inc
cwde
ins
sub
mov
jmp
pop
rcr
ja
lds
ins
in
and
cmp
sbb
sbb
fild
dec
mov
push
and
jne
stos
push
push
aas
jmp
scas
imul
dec
sahf
cmc
add
and
jbe
pushf
add
xor
cmp
push
xor
(bad)
dec
call
inc
and
mov
push
or
or
or
xchg
sbb
and
imul
sub
pop
test
jno
jmp
test
sbb
add
mov
cmp
adc
push
xor
loopne
ja
sbb
pop
cwde
(bad)
add
rcl
or
movs
test
call
inc
pop
or
fsubr
pop
or
out
int3
pop
xor
jmp
cmp
fidiv
(bad)
mov
fbstp
sbb
adc
fsubr
jg
dec
test
add
mov
cwde
ficom
jecxz
xor
or
nop
int3
xor
lods
dec
xchg
mov
pusha
add
inc
in
xor
inc
int3
or
sbb
ins
test
aaa
sbb
pusha
sbb
dec
js
sub
cmps
rol
and
inc
imul
or
xor
test
(bad)
add
out
stos
and
or
fstp
cvtps2pi
cvttps2pi
mov
sti
(bad)
aad
push
pop
and
sub
and
xor
dec
(bad)
cwde
les
push
mov
jno
push
nop
addr16
dec
clc
popa
or
leave
sub
scas
sub
and
cmp
push
clc
add
sub
xor
pop
ds
mov
cmp
adc
mov
enter
or
sar
push
jle
adc
das
fcomp
inc
sbb
dec
lahf
push
adc
imul
ror
or
(bad)
es
sub
mov
pop
pop
and
mov
cs
add
push
cmps
in
jo
jo
(bad)
fcmove
push
xor
sub
rol
push
je
and
pop
jnp
push
push
mov
movs
bound
daa
push
sbb
and
jae
arpl
pop
mov
add
sahf
mov
push
or
xchg
or
add
loope
out
cld
aam
loopne
iret
push
pop
push
push
retf
sub
sub
mov
sub
nop
sbb
push
(bad)
fnstenv
and
out
or
pop
pop
sub
mov
mov
jns
addr16
faddp
loop
(bad)
push
sbb
nop
shl
add
push
sub
push
je
fldcw
adc
(bad)
push
fbstp
ja
ret
inc
hlt
test
and
hlt
xchg
setp
sbb
xor
ret
(bad)
call
shl
add
or
clc
sar
dec
or
adc
call
push
inc
pop
or
pop
mov
push
jmp
push
rcr
pop
xor
iret
push
sub
lea
pusha
add
push
add
mov
pop
inc
cmp
pop
add
pop
lds
push
aad
ss
cs
hlt
mov
test
imul
call
jl
add
add
ret
and
inc
dec
mov
in
mov
add
loopne
fcom
fcom
lea
inc
push
lock
or
enter
shr
jg
retf
xchg
push
lods
push
fisub
sbb
fwait
retf
and
xor
mov
addr16
push
and
adc
mov
xchg
and
aam
add
push
or
adc
imul
push
test
std
mov
xor
xchg
mov
and
xchg
inc
inc
sbb
or
sar
xor
scas
push
lods
ss
mov
add
jecxz
xor
sub
adc
das
add
aam
in
adc
mov
xlat
lea
pop
(bad)
adc
in
clc
ins
sahf
retf
or
mov
leave
mov
repz
push
or
sti
or
push
cmp
ficom
fwait
xor
mov
pop
and
dec
adc
pop
push
adc
cmp
sub
ja
inc
mov
or
inc
or
inc
adc
(bad)
pop
rcr
fldz
and
add
and
cmp
and
or
sub
pop
xor
cmp
fld
scas
fcom
push
xchg
sar
push
sbb
test
and
adc
mov
sub
push
xchg
mov
add
mov
xchg
fsubr
adc
lahf
adc
sub
inc
mov
inc
push
mov
or
mov
pop
movs
jg
or
fmul
sbb
or
ds
data16
lea
fcom
(bad)
fsub
mov
in
sub
xor
adc
pop
mov
adc
sbb
sbb
lahf
test
sub
cmps
jno
add
jle
push
jmp
fstp
add
cmp
jl
repz
push
cmp
jle
cmp
jp
push
cmp
cld
sti
dec
cld
cmp
inc
add
add
inc
jmp
xchg
icebp
mov
mov
ins
popa
retf
mov
xchg
repnz
jecxz
and
cdq
pop
idiv
lock
xchg
enter
cld
adc
cmp
inc
movs
pop
rcr
adc
imul
and
mov
inc
lock
das
add
add
fstp
add
jbe
scas
mov
cmps
mov
outs
xor
(bad)
ret
dec
mov
xchg
and
sbb
cmps
mov
xor
dec
js
and
xchg
pop
dec
xlat
or
mov
cmp
jb
adc
and
xchg
retf
adc
inc
sub
mov
fs
inc
daa
int
cmp
push
js
inc
fwait
mov
dec
outs
loop
jo
mov
loope
mov
adc
ror
mov
xchg
pop
ins
iret
cmp
or
jo
popf
movs
pop
outs
ss
sbb
pop
or
nop
loope
and
pop
pop
pop
and
cmp
xor
and
ins
or
cdq
fs
or
add
shr
jb
cmp
inc
rcl
pop
or
and
pop
mov
popf
je
mov
push
stos
outs
mov
out
pop
adc
adc
dec
pushf
jno
(bad)
add
push
data16
push
sbb
jo
push
enter
sbb
add
shl
sbb
in
jno
add
dec
repz
or
dec
or
dec
leave
mov
les
stos
fs
add
ret
xor
out
(bad)
fist
cdq
or
push
lods
inc
jnp
add
lods
or
add
iret
ret
or
(bad)
aaa
xchg
xchg
inc
push
sbb
or
sub
mov
mov
xchg
popa
mov
inc
mov
inc
push
cmps
add
test
xchg
sahf
sub
inc
fwait
in
mov
mov
and
or
fidiv
pop
pushf
pop
xor
adc
outs
and
leave
adc
and
pop
sub
cs
mov
jae
(bad)
push
push
(bad)
jmp
stos
and
gs
adc
fcomp
add
cmc
push
in
jo
std
cmp
stos
push
add
adc
ret
xchg
fs
or
push
and
add
add
add
nop
push
inc
sbb
xor
shr
(bad)
leave
xchg
jb
adc
adc
ins
or
aas
pop
sub
adc
add
sbb
xchg
adc
sbb
xchg
sbb
js
mov
and
stos
loopne
mov
loopne
push
add
xchg
(bad)
sub
(bad)
and
xchg
jge
pcmpeqd
retf
mov
sbb
push
loope
push
ret
(bad)
pusha
pop
sbb
lods
call
shr
out
les
inc
sahf
rol
sbb
mov
shr
imul
sbb
adc
dec
push
rcl
and
add
test
enter
adc
add
sbb
and
add
sbb
cli
xor
push
mov
je
shr
fsub
fsubr
mov
cmps
xor
in
rol
sbb
inc
outs
xor
or
add
jb
add
add
dec
aaa
and
push
mov
mov
pop
aad
inc
fist
sub
dec
xchg
scas
adc
icebp
push
repnz
(bad)
cld
je
mov
cmp
pminsw
jne
rcr
nop
es
pop
mov
shl
or
sub
push
adc
push
ret
aaa
int3
inc
jge
inc
and
inc
jbe
xchg
xchg
or
jbe
and
inc
mov
std
lods
jbe
jb
test
test
adc
jae
outs
sub
push
clc
push
mov
pop
les
xor
xchg
gs
or
pop
in
push
popa
stos
cmp
jne
fwait
mov
test
imul
ins
cmp
push
popa
xchg
mov
sub
add
adc
pop
xlat
cmp
(bad)
fild
lea
cdq
xchg
dec
add
loopne
adc
xchg
push
icebp
pop
dec
daa
fadd
sub
xor
enter
add
repz
push
pop
clc
or
stos
(bad)
xchg
dec
add
push
adc
dec
cmp
jg
jo
add
adc
lods
popa
push
add
imul
rcr
pop
mov
outs
lahf
cwde
fisub
or
adc
push
lea
mov
and
add
sbb
and
lahf
dec
push
xchg
rol
inc
xor
iret
adc
jle
ffreep
jecxz
add
ins
cmp
int3
fild
adc
loopne
inc
adc
es
mov
test
jns
push
xchg
inc
add
mov
inc
push
pop
cmps
sbb
mov
xor
in
pusha
xor
lods
pop
rcr
or
or
movs
loop
(bad)
fmul
sbb
or
xchg
sub
wbinvd
std
fisttp
(bad)
dec
fld
or
movs
std
loopne
les
nop
add
and
fld
push
sbb
dec
ja
sbb
fstp
and
mov
mov
push
pop
push
pop
pop
imul
mov
jo
(bad)
sti
idiv
dec
pop
and
loope
fsubrp
pop
fs
push
or
pop
mov
repz
push
repnz
jl
int3
mov
in
push
in
in
leave
inc
or
push
push
cs
or
cmp
ja
inc
ror
mov
sub
pop
int3
in
not
mov
sub
aaa
inc
cmps
xor
inc
xchg
sub
sub
pop
inc
inc
(bad)
dec
sub
xchg
add
scas
or
ffreep
jbe
shl
stos
(bad)
adc
dec
arpl
mov
jge
sahf
sbb
je
lahf
cmp
into
dec
dec
mov
add
xor
ins
dec
or
cmp
mov
lods
jbe
fmul
(bad)
mov
cdq
jnp
ja
push
and
dec
xor
mov
or
adc
js
sub
and
mov
pop
push
in
and
adc
dec
les
dec
iret
arpl
loope
fcmovne
daa
xor
jnp
xchg
add
imul
mov
int
xchg
xor
clc
add
pop
pop
mov
out
or
lock
sbb
leave
shld
add
adc
jb
ja
lea
push
push
js
pop
push
je
call
fild
push
leave
adc
mov
push
adc
or
nop
(bad)
push
push
xor
sbb
sbb
call
push
push
push
sar
mov
lods
add
pop
pop
enter
int3
leave
pop
add
cmp
sub
sbb
adc
cmps
rol
push
mov
cmovns
ja
cmp
test
adc
add
and
dec
pop
mov
adc
sub
cmp
xchg
cld
pop
or
jle
out
inc
(bad)
cmp
jne
fdivrp
mov
inc
cld
cmp
mov
push
jl
mov
aad
sub
test
pop
(bad)
sti
jg
stc
(bad)
mov
mov
or
mov
cld
mov
retf
push
push
push
jp
push
push
push
jp
mov
pusha
inc
push
add
ss
or
inc
jle
js
mov
or
xchg
mov
les
aam
icebp
mov
mov
adc
pop
(bad)
mov
ss
adc
add
sbb
in
jle
ja
sbb
sub
sbb
scas
mov
fwait
jp
lock
pop
and
mov
add
je
cmovo
jns
dec
pop
or
sbb
jle
movs
xchg
pop
push
pop
iret
inc
imul
or
pop
test
rcl
xchg
sub
xchg
push
mov
push
popf
push
push
sub
xchg
adc
mov
inc
pushf
into
jne
adc
mov
imul
fadd
pop
push
xchg
lock
ror
lods
xor
mov
mov
loopne
push
int
adc
add
ins
ret
lods
aad
and
cmp
imul
pop
test
into
gs
lds
dec
inc
lods
je
retf
xchg
or
pop
lock
sub
xlat
cmp
and
lods
push
or
dec
sbb
pusha
push
jno
lods
mov
pop
adc
cwde
push
xchg
rcr
and
imul
fld
ds
scas
pop
ret
pop
pop
dec
cmps
nop
add
aam
mov
xchg
ja
and
adc
rcl
xchg
and
xor
or
or
inc
sbb
fwait
(bad)
retf
xchg
xor
push
mov
lahf
add
dec
rol
push
dec
mov
add
push
adc
lods
and
(bad)
jb
push
add
in
les
mov
xor
fistp
jo
add
outs
pop
add
bnd
mov
add
in
je
js
dec
sbb
add
add
repnz
mov
dec
add
jecxz
mov
xchg
push
repz
int3
test
outs
inc
push
add
test
or
loopne
jg
and
or
(bad)
inc
retf
mov
pop
aam
cmp
dec
pop
mov
psrad
add
ret
mov
movs
(bad)
mov
or
inc
pop
pusha
rcr
test
adc
push
ja
sub
xchg
ins
mov
jno
leave
pusha
jmp
mov
mov
adc
ins
push
icebp
and
jno
imul
add
jg
je
or
xchg
nop
add
cmps
std
fcmovnbe
sub
dec
je
add
sbb
dec
(bad)
lock
jo
dec
jmp
push
out
or
push
dec
loop
or
mov
out
or
jg
out
push
shl
mov
sar
nop
or
mov
dec
scas
push
and
sub
push
es
mov
cmp
test
inc
arpl
jp
push
imul
cmp
nop
push
jo
mov
fadd
jnp
jb
and
nop
xchg
adc
and
out
adc
push
pop
enter
add
push
push
sbb
mov
push
cmp
pop
push
cmp
nop
sub
add
lahf
adc
push
cmp
inc
push
cmp
mov
xor
add
push
je
jb
and
rcl
push
mov
ret
(bad)
jmp
ins
cmc
push
dec
gs
rcl
sbb
repz
inc
dec
pop
arpl
cmp
repz
stos
mov
leave
repz
repz
out
sti
out
sahf
out
nop
sub
aaa
inc
dec
push
pop
imul
xchg
in
movs
xchg
ss
das
bound
scas
popa
pop
sbb
push
std
aaa
add
scas
fucom
icebp
mov
mov
push
push
xchg
outs
add
adc
popf
nop
sti
das
je
xor
out
cmp
lea
scas
int
rol
add
les
imul
or
movs
xchg
test
jmp
jl
mov
shr
xchg
cmp
or
inc
mov
or
ja
fwait
xchg
call
fldz
fcomp
and
cmp
ja
ficomp
xchg
test
loope
movs
(bad)
sbb
movs
mov
arpl
int
pop
adc
sbb
cmp
cmp
mov
jl
jge
retf
out
push
dec
test
lods
adc
bound
cld
add
push
sbb
aas
repz
les
inc
ja
ror
adc
loope
cmp
jge
out
mov
cmp
push
cld
lock
movs
out
add
jp
scas
cmps
push
cmc
popf
add
pop
stc
ficom
test
ja
imul
rol
or
mov
mov
mov
xchg
mov
push
ret
gs
push
sbb
das
push
mov
adc
lock
or
xor
fild
or
enter
or
mov
adc
xchg
js
mov
and
dec
sub
pop
(bad)
fdiv
mov
and
stos
and
or
cmp
outs
fadd
pop
fcomip
push
mov
mov
xor
je
inc
push
or
or
fs
ins
mov
push
aad
xchg
and
inc
leave
adc
pop
sbb
les
repz
pop
lea
jo
add
sbb
push
add
mov
cmp
pop
xchg
test
shl
adc
xchg
mov
mov
cmp
jecxz
cmc
jb
mov
int3
fiadd
sub
push
xchg
xchg
sar
dec
div
push
add
mov
mov
xor
or
lods
and
sub
cmp
mov
fwait
pop
cmp
push
sub
jo
test
rsqrtps
mov
or
bnd
xchg
adc
jp
adc
or
mov
xor
sub
push
mov
xor
jle
icebp
scas
jecxz
mov
xor
sbb
enter
dec
xor
das
ins
call
jl
dec
call
dec
call
add
in
jae
add
mov
mov
sbb
mov
cdq
mov
hlt
push
int3
jl
mov
test
add
cmp
or
retf
cmp
jns
xlat
movs
inc
xor
add
in
cmp
mov
pusha
mov
mov
sub
or
pushf
js
stos
push
nop
and
in
jbe
test
sbb
jmp
shl
sbb
sbb
sbb
nop
stos
shl
sbb
push
cdq
fs
sbb
in
mov
push
into
push
ror
adc
sub
or
sbb
sbb
pop
aam
movs
sub
sub
sbb
mov
pop
inc
and
jmp
pop
mov
shl
xchg
inc
adc
pop
(bad)
gs
pusha
int
mov
mov
xor
cmp
pop
push
ficomp
push
retf
mov
into
pushf
xchg
xchg
loop
push
jle
enter
adc
mov
jb
sbb
aaa
rcr
jp
xchg
imul
dec
movs
mov
mov
(bad)
int3
cmp
sub
sub
or
cmp
movs
aas
ret
dec
int3
mov
push
push
inc
cmps
pusha
mov
and
mov
nop
mov
aaa
and
and
ss
mov
adc
daa
cmp
sahf
dec
sbb
push
inc
push
cmc
sub
inc
push
pusha
or
sub
cmovp
add
jo
test
outs
mov
adc
popa
inc
jno
movs
rol
ret
arpl
sbb
inc
xor
dec
loop
mov
nop
mov
sbb
push
outs
inc
sbb
push
jmp
push
sub
pusha
adc
outs
aaa
je
stos
mov
and
sub
mov
adc
and
ror
mov
imul
xchg
in
add
pop
dec
cmp
pop
je
mov
int
pop
push
mov
adc
pop
adc
mov
das
xchg
pop
ret
jecxz
sbb
out
add
pop
sub
test
jne
or
sar
jecxz
pop
mov
push
fmul
add
add
movs
pop
sbb
mov
sbb
mov
inc
lods
out
repz
ficom
test
pop
fwait
jo
mov
inc
xor
xchg
psubw
push
push
les
push
xchg
pop
jno
rol
mov
ret
stos
xchg
jne
adc
in
and
pop
ficomp
adc
ins
enter
inc
ror
jge
enter
iret
mov
mov
jl
imul
enter
add
loopne
test
or
mov
rcr
push
call
xchg
setl
pop
repnz
adc
movs
adc
cmc
adc
push
sbb
leave
push
add
and
dec
adc
lock
push
es
push
call
int3
push
and
out
and
loopne
cmps
push
or
(bad)
test
pop
sbb
in
jecxz
or
fdivr
neg
lods
fsubr
sbb
push
lods
sbb
test
imul
sub
dec
add
nop
fwait
push
mov
rcr
aaa
adc
sub
mov
mov
and
mov
lock
xchg
adc
lea
test
dec
mov
and
movs
adc
sub
xor
xlat
jge
test
push
push
inc
dec
and
int
js
movs
mov
pop
pop
push
sub
inc
cmp
sub
mov
inc
push
in
test
xchg
mov
test
rcr
pop
and
je
test
or
pusha
dec
xor
pop
pop
ret
es
add
add
lods
push
arpl
inc
or
(bad)
(bad)
or
sbb
sbb
add
call
add
aad
imul
test
sbb
popf
in
add
and
shl
adc
test
mov
or
shl
jo
inc
xor
jb
jbe
in
and
xchg
dec
in
rol
jne
dec
mov
adc
add
mov
neg
dec
mov
mov
lods
add
mov
shl
and
(bad)
cmp
adc
outs
or
aad
sbb
sbb
div
xor
push
cmps
test
sbb
data16
sbb
adc
mov
or
imul
mov
outs
add
jle
sbb
inc
out
and
psllw
jnp
sub
xchg
mov
mov
mov
fsub
adc
ins
popa
scas
ins
lods
sub
push
xor
shr
adc
ret
sbb
mov
mov
mov
dec
dec
mov
sub
inc
xchg
(bad)
mov
and
xchg
fdiv
shr
inc
leave
dec
sub
sub
adc
inc
jmp
adc
rcl
sbb
(bad)
sbb
sbb
jbe
or
shr
sbb
or
sbb
push
movs
push
add
push
sbb
mov
xchg
call
xor
mov
sub
dec
dec
rol
push
hlt
push
mov
xor
or
and
add
sbb
das
and
movs
shr
adc
stos
sub
push
pop
es
mov
push
pop
daa
push
fs
sub
movs
cmp
sub
movs
dec
enter
lods
loopne
in
dec
sub
sub
adc
pushf
fsubr
fcmovbe
movs
pop
cs
push
push
dec
ins
movs
lea
mov
mov
add
fwait
test
mov
adc
add
mov
test
pop
inc
push
cmps
pop
push
aad
xor
mov
loop
dec
popf
iret
pop
jo
das
not
icebp
inc
cs
fiadd
movs
cdq
nop
data16
sub
imul
cdq
nop
inc
sub
fs
push
and
imul
and
call
cdq
nop
mov
call
xchg
adc
sbb
sbb
js
test
les
and
aam
lods
add
rcl
push
vprotb
sahf
adc
push
jge
mov
add
test
add
xchg
in
or
add
les
pusha
mov
dec
(bad)
out
pop
sbb
cs
push
or
dec
test
call
fcom
push
stos
jnp
push
lds
push
inc
ret
push
or
test
sbb
dec
adc
(bad)
div
pop
jecxz
repnz
movs
add
pop
sub
and
or
push
sub
pop
ror
jg
jo
inc
pop
adc
dec
dec
sbb
and
or
jns
mov
int
inc
sub
ror
pop
icebp
cwde
popa
add
xor
mov
clc
pop
call
scas
ss
xchg
inc
jbe
leave
add
mov
inc
or
cmp
push
shl
pop
add
pusha
jl
dec
push
ds
clc
cmp
lahf
daa
call
icebp
inc
push
jmp
ss
adc
push
cmp
pushf
fcom
push
mov
or
test
cmp
pop
sbb
test
sub
addr16
push
or
sub
scas
cmc
addr16
retf
lods
imul
or
popf
pop
cmp
std
mov
jbe
mov
mov
push
jmp
pusha
and
(bad)
jmp
cli
inc
add
clc
sub
aad
and
mov
jmp
fistp
inc
fstp
adc
inc
xor
aaa
sbb
cmp
mov
xor
jae
and
sbb
pop
adc
and
pusha
jmp
clc
loope
push
enter
jbe
inc
mov
jb
mov
pop
pop
adc
mov
xchg
inc
adc
push
add
jb
adc
enter
jno
repnz
cmps
mov
js
les
jle
mov
push
sbb
xlat
jbe
mov
xchg
cmp
jne
inc
add
rol
ret
jl
xchg
add
pop
sbb
sub
mov
cmp
jne
mov
inc
sbb
div
lods
repz
jae
inc
adc
adc
and
je
mov
add
or
dec
rol
mov
jmp
out
mov
outs
push
stos
sub
xchg
inc
or
movs
xchg
cmc
xor
or
mov
or
xor
pop
sbb
or
mov
add
mov
fcmovu
pushf
cmp
xlat
aad
or
and
lea
jmp
mov
push
out
sub
pop
push
and
jmp
test
and
leave
sbb
clc
xchg
icebp
or
sbb
sbb
inc
sbb
add
push
inc
jbe
(bad)
xchg
pop
lea
ret
sbb
test
out
cmps
sbb
jno
popa
or
or
jmp
xchg
xor
lahf
stos
xchg
adc
jmp
aam
adc
imul
push
mov
cmp
ds
jl
or
ud0
mov
cmp
or
and
mov
mov
movsx
shr
mov
movs
test
push
add
pop
dec
add
nop
inc
mov
leave
jne
pop
pop
xchg
cdq
pop
movs
xchg
je
and
pop
and
dec
or
push
inc
sub
mov
cmp
(bad)
mov
hlt
ficom
push
lods
add
push
mov
aas
push
imul
jmp
dec
daa
inc
and
pop
jbe
enter
add
sbb
shl
sti
add
adc
mov
pop
cmc
xor
mov
dec
sbb
mov
xchg
sbb
or
je
dec
and
add
xchg
and
mov
jnp
(bad)
push
rcl
dec
jmp
aaa
xchg
sbb
sub
lods
fsubr
and
dec
jge
adc
pop
fs
lock
pusha
push
cmp
push
push
shr
xor
sub
ficomp
aaa
jno
mov
pop
pop
bound
add
or
push
adc
push
lods
push
mov
rcl
mov
data16
xchg
ficomp
mov
inc
je
mov
add
leave
mov
inc
mov
dec
pushf
xchg
adc
fcomp
sub
sub
or
cmp
xchg
test
and
and
leave
inc
or
out
xchg
jl
pop
add
mov
enter
lock
das
mov
loope
test
push
in
lock
dec
mov
pop
sbb
(bad)
and
and
fcomp
jmp
pop
lock
and
retf
and
mov
repnz
or
or
int3
repnz
std
or
gs
(bad)
idiv
adc
enter
nop
xor
and
jmp
cmp
inc
add
xor
inc
or
mov
leave
or
aad
call
sub
popa
xor
test
jns
lea
cmp
je
pop
xor
and
daa
daa
adc
addr16
imul
xor
sub
xor
or
cmp
aam
xor
add
movs
outs
xor
rcl
imul
mov
push
cli
dec
lea
sub
dec
xor
adc
mov
scas
shld
add
pop
or
push
fadd
and
hlt
fld
fdivr
ror
rcr
les
in
adc
js
add
add
jno
sub
xor
jecxz
xchg
sub
pushw
bound
mov
push
addr16
xchg
pop
into
cli
adc
mov
es
or
push
fcom
and
jne
fsub
popa
add
js
mov
sbb
push
inc
leave
enter
mov
push
scas
sub
pop
lods
pushf
loopne
fcomp
cmp
gs
add
mov
cdq
jb
add
jecxz
imul
je
sub
enter
mov
iret
cdq
ins
sbb
outs
or
or
and
mov
test
xchg
mov
xor
je
icebp
movs
sbb
and
in
lock
jle
imul
xchg
icebp
ror
repz
sub
loope
lea
add
or
out
test
test
jmp
mov
repnz
test
dec
fadd
and
and
scas
jne
cmp
dec
in
and
adc
push
mov
push
xchg
cmps
mov
xor
jmp
bound
push
lahf
pop
push
cmp
adc
or
pop
inc
in
push
pop
(bad)
bound
lea
or
mov
lea
mov
ret
xor
xchg
add
inc
dec
and
add
and
and
add
mov
sub
cld
ds
jle
xor
lods
test
and
push
mov
mov
or
cmp
xchg
outs
imul
or
add
push
jmp
loop
push
sbb
sub
lock
out
push
mov
loop
mov
pop
stos
lods
sub
mov
mov
push
dec
pop
(bad)
cmp
test
push
sub
cdq
xor
push
mov
je
push
rcl
in
push
push
je
mov
je
out
dec
icebp
sub
sbb
jmp
in
jbe
test
mov
sub
mov
inc
hlt
in
ror
sahf
nop
xchg
or
aad
add
loopne
loop
shr
jecxz
xchg
sbb
sbb
jno
and
sub
in
aad
sub
adc
add
rol
mov
xor
jne
je
inc
scas
xchg
xor
sar
test
js
pusha
maxps
inc
test
hlt
add
sub
das
pop
sub
inc
fcmove
div
ss
iret
test
adc
xor
mov
outs
int
jbe
xchg
cmp
imul
test
rol
mov
fild
div
(bad)
jno
adc
sbb
dec
or
lea
adc
shl
mov
retf
imul
pop
not
mov
xchg
add
cmp
lock
in
mov
pop
mov
or
dec
cmp
rol
mov
add
fidivr
mov
mov
lods
xorps
or
pushf
and
clc
inc
das
(bad)
(bad)
mov
(bad)
rcr
mov
xor
mov
mov
push
sahf
fcom
dec
and
adc
shl
cmps
dec
in
cmp
test
jne
es
loopne
xor
movs
jno
in
inc
dec
add
mov
sbb
add
jg
es
test
je
xchg
and
xor
dec
or
mov
je
add
sub
push
push
stos
add
adc
sbb
xchg
xchg
sar
addr16
sbb
or
mov
sbb
xchg
scas
push
mov
pop
not
test
add
push
and
push
cmp
dec
mov
mov
jle
test
fsub
mov
scas
adc
add
jb
clc
mov
mov
inc
push
pop
ins
rcr
hlt
add
pop
push
inc
sbb
mov
ret
fadd
jmp
fiadd
add
dec
mov
shl
jbe
push
push
cmp
add
enter
sbb
outs
mov
fld
push
in
daa
adc
test
lea
hlt
mov
mov
sub
aaa
adc
adc
jne
daa
bnd
repz
mov
jne
or
jne
sub
push
iret
or
push
mov
cmp
xor
in
rcl
fcomp
xchg
rcl
pop
adc
cmps
or
push
lea
mov
jl
inc
dec
(bad)
cmp
inc
stos
inc
cld
data16
fst
mov
hlt
mov
pop
je
pop
hlt
lea
loop
mov
hlt
pusha
mov
xor
cmp
mov
cmp
and
or
xchg
lea
sub
xchg
pop
ret
int3
int3
push
and
dec
fld
sbb
or
stc
int3
movs
mov
std
mov
mov
(bad)
jne
inc
(bad)
cmp
adc
loop
push
add
push
adc
adc
sub
fcomp
loopne
rcr
ds
inc
lea
jbe
adc
js
pusha
jo
popf
add
mov
jl
icebp
pusha
ss
sbb
push
ss
jl
fnstenv
and
pop
inc
loopne
or
xor
and
push
xchg
ins
mov
rol
mov
mov
jmp
or
pushf
xor
(bad)
pusha
pusha
movs
sbb
pop
ror
xchg
fs
jb
pushf
push
jne
or
and
mov
fs
call
dec
ficom
mov
add
idiv
mov
push
clc
sar
and
test
jg
outs
mov
mov
mov
jae
mov
jbe
(bad)
shl
or
(bad)
fmul
(bad)
mov
or
or
into
mov
sub
movs
pop
and
test
les
xchg
fld
stos
dec
pop
inc
fsub
xor
fsub
in
ins
add
and
test
inc
mov
fs
push
or
test
and
mov
movs
test
fmul
cdq
call
push
and
or
mov
jbe
xor
sbb
dec
mov
xchg
mov
sti
jnp
push
in
ins
push
add
push
ins
xor
lahf
scas
mov
push
sub
mov
or
lods
add
push
mov
in
and
xchg
dec
pop
pop
pusha
sbb
jmp
pop
push
pop
ret
push
xor
clc
jecxz
add
push
jmp
xor
inc
in
test
sbb
fisttp
push
scas
test
div
add
sar
and
xor
pop
(bad)
fs
dec
sbb
adc
inc
mov
mov
mov
pop
inc
adc
sbb
inc
retf
mov
adc
enter
sub
and
scas
xchg
pop
xor
push
sbb
call
and
daa
adc
inc
rol
ss
sbb
jb
jno
sub
dec
xchg
mov
inc
or
adc
inc
arpl
mov
daa
and
add
sub
xor
fiadd
xchg
cmp
enter
push
lea
ret
inc
push
das
push
dec
imul
jnp
cmp
push
push
mov
je
inc
call
lods
inc
dec
arpl
icebp
pop
xor
dec
push
jmp
sbb
imul
rcr
mov
add
add
and
loope
shr
cmc
pop
adc
cmp
and
js
dec
push
jae
jg
jmp
jae
je
push
mov
pop
lea
(bad)
xchg
xor
xor
sbb
fdivr
loopne
fcmovnbe
xor
jo
test
imul
lock
sbb
neg
int
cmp
leave
mov
adc
adc
aas
dec
xchg
mov
stos
mov
or
(bad)
push
adc
push
adc
add
loop
imul
sbb
jnp
cmp
pop
test
les
sub
ret
xor
je
popf
or
or
(bad)
in
call
pushf
add
or
cmp
sub
sbb
pop
js
mov
or
enter
aam
test
lgs
fisttp
jecxz
mov
pop
inc
inc
pop
popa
push
lock
data16
sub
dec
pop
inc
std
xor
pop
push
test
fstp
sbb
mov
test
cmp
dec
ret
or
sub
mov
mov
inc
sub
stos
cmc
mov
inc
and
pop
pcmpeqd
fwait
add
imul
xchg
mov
sub
xor
imul
leave
fadd
add
ins
sbb
or
(bad)
push
push
xor
test
push
add
xor
cmps
dec
je
cs
push
inc
add
inc
outs
rol
or
push
jne
pop
scas
mov
ret
inc
cwde
mov
and
lahf
outs
mov
jne
mov
jmp
xor
jo
push
push
adc
popa
mov
jbe
xchg
adc
out
rcl
xor
sbb
adc
rol
ret
add
push
add
shr
mov
dec
ret
(bad)
adc
add
add
dec
xchg
mov
clc
lds
js
inc
je
and
pop
push
mov
ja
jmp
stos
cmp
add
add
or
ja
in
les
mov
dec
pop
lock
xchg
clc
cmps
xchg
pop
add
inc
xchg
pop
add
push
adc
or
push
or
test
loope
popa
sub
sub
stos
jbe
stos
loopne
jno
pop
call
mov
out
je
je
lock
call
pop
lock
add
or
xor
add
xchg
mov
(bad)
sub
add
xor
repnz
ds
lods
fnstenv
shr
sbb
push
push
fisttp
push
adc
arpl
nop
aam
xor
xchg
stc
adc
cmp
lods
cmps
movs
add
mov
call
mov
jl
lds
mov
sbb
aad
sub
addr16
add
jmp
jecxz
dec
int
sahf
inc
das
inc
or
and
fmul
outs
and
mov
cld
pusha
cwde
or
in
inc
sub
push
push
push
push
bound
jmp
add
adc
inc
push
mov
pop
adc
ds
cmp
in
add
push
add
loope
pop
or
out
mov
mov
aaa
aas
sbb
popa
mov
and
jl
js
push
and
mov
je
out
(bad)
movs
ja
or
test
xor
cmp
je
aas
mov
dec
or
jbe
rol
(bad)
sbb
test
ret
clc
aas
lods
dec
push
sub
sub
and
sbb
adc
pop
loopne
js
hlt
jae
movsx
sbb
cmps
stc
movs
fld
xor
lahf
mov
sbb
xchg
or
sbb
pop
jmp
jg
mov
enter
ret
inc
(bad)
(bad)
inc
add
or
jecxz
or
add
inc
cmp
jl
cmp
ss
mov
test
cdq
and
popa
xchg
pop
add
sar
add
jae
push
in
hlt
clc
xor
add
sub
cmp
jecxz
sbb
inc
scas
cli
adc
jne
enter
adc
or
fidiv
fs
inc
sbb
ins
pop
pop
sahf
repz
xchg
or
lods
and
push
inc
xchg
loop
pop
ficom
stc
sbb
mov
rol
jo
shld
lea
or
rol
rol
scas
adc
(bad)
sbb
or
retf
mov
cmp
jl
mov
aas
mov
xchg
add
or
mov
js
out
add
mov
jne
out
inc
ja
add
rol
or
repnz
jl
out
add
or
sub
mov
adc
jae
jmp
xchg
mov
aaa
test
and
xor
push
or
adc
ins
scas
push
sbb
ficomp
push
dec
or
push
dec
sbb
mov
add
in
push
xor
sbb
aam
mov
in
ret
sbb
push
repnz
cmc
mov
add
loope
icebp
fs
or
not
and
stos
sub
outs
dec
or
xchg
xchg
retf
hlt
add
nop
je
add
sub
das
sub
jecxz
lock
pop
push
jmp
leave
loopne
lahf
call
retf
or
jge
sbb
lahf
cmc
out
fsubr
addr16
outs
pop
mov
stc
jle
daa
lock
push
dec
dec
push
add
push
push
les
add
clc
mov
jbe
add
push
movs
jae
dec
mov
add
xchg
cmp
retf
add
jle
push
and
mov
stos
movs
(bad)
push
and
stos
lds
jns
retf
push
jo
jnp
test
int3
rol
xchg
pop
push
xor
aaa
lea
mov
sbb
cmp
lea
jo
dec
adc
push
and
test
mov
xor
ror
mov
movs
fwait
inc
pusha
pop
cmp
add
add
jnp
sbb
jmp
sbb
popf
frstpm(287
mov
xchg
sbb
sbb
mov
push
cmp
call
dec
xchg
mov
les
test
arpl
(bad)
das
push
(bad)
mov
dec
rcl
sbb
dec
push
ret
add
and
jl
dec
push
push
sub
dec
repz
int3
add
(bad)
fcomp
cs
daa
jno
or
or
ror
inc
mov
aaa
push
push
test
inc
shl
adc
aam
fs
shr
jbe
sbb
jl
mov
push
push
call
inc
mov
mov
xor
push
sbb
rcr
pop
jne
or
jmp
mov
dec
dec
and
push
sti
push
ret
xchg
es
pushf
fwait
sbb
cmp
xor
add
int3
int3
add
mov
les
cmp
cmp
sahf
or
push
pop
cmp
sar
fldenv
repz
je
dec
pop
test
arpl
(bad)
(bad)
adc
test
push
ret
cli
and
xchg
das
lods
mov
pushf
adc
xlat
push
aaa
jge
jo
das
or
jo
and
and
inc
les
mov
fs
xchg
sub
or
lock
les
mov
push
add
cmc
retf
rcr
dec
aam
in
loopne
int3
ja
loope
mov
clc
jl
pop
mov
push
cwde
loopne
fdivr
pop
jge
sub
add
js
push
fistp
push
je
cmp
daa
packsswb
mov
add
test
cli
dec
inc
loopne
jmp
mov
out
test
sub
clc
jo
dec
out
test
les
fsub
sbb
retf
mov
ret
nop
inc
loope
cli
or
shl
sbb
jle
sub
jnp
shl
sub
dec
dec
test
cmps
pop
aas
push
xchg
xor
push
addr16
xchg
je
add
mov
inc
add
lods
(bad)
xchg
test
jo
iret
adc
mov
ins
jmp
jne
shl
iret
cmp
jle
pushf
in
out
sub
add
xor
sub
push
add
call
cmps
xchg
cmp
sub
adc
aad
push
push
scas
inc
inc
mov
outs
jecxz
inc
push
(bad)
pop
fwait
and
(bad)
xor
lock
je
bound
jmp
xchg
mov
mov
jg
mov
mov
and
out
add
mov
clc
xchg
rol
das
fist
pop
mov
mov
add
xchg
add
xchg
pop
push
or
fmul
clc
mov
adc
add
movzx
mov
inc
mov
mov
cmp
push
call
clc
add
int
mov
cdq
sar
sub
push
icebp
or
cmp
int
xchg
add
mov
int3
pop
add
push
mov
nop
and
xchg
nop
add
or
cld
push
leave
push
xor
push
cld
or
mov
inc
call
jne
pop
mov
mov
scas
pushf
mov
(bad)
into
and
pop
or
sbb
mov
ins
(bad)
adc
into
push
sahf
pop
add
push
mov
fwait
enter
xor
push
nop
cmp
hlt
rcl
gs
push
add
in
fs
retf
in
mov
push
int
cli
ret
sub
movs
and
adc
sub
cli
inc
mov
mov
cmp
push
enter
in
pop
daa
fbstp
cmps
retf
pop
or
scas
and
sbb
mov
popa
and
push
mov
add
loope
loopne
cmc
test
loop
dec
mov
pop
lahf
popf
inc
xor
and
adc
pop
or
add
and
and
push
daa
or
sbb
push
sub
test
hlt
test
mov
mov
mov
mov
clc
jns
add
rcl
xchg
adc
lds
jb
cwde
mov
or
dec
cld
stc
sub
ss
lea
cmp
jbe
add
sbb
cmp
jbe
mov
sbb
sbb
cli
enter
sbb
repnz
into
aas
ins
mov
ins
leave
or
cmp
int3
push
adc
div
inc
dec
xor
xchg
mov
pop
enter
or
cmps
push
cmp
or
xor
daa
push
test
stc
push
inc
push
push
push
cmp
cwde
inc
push
(bad)
jnp
and
ins
test
jp
add
mov
shr
test
pop
ret
and
nop
arpl
adc
push
mov
in
lods
test
sub
stc
pop
jge
lahf
cmc
pop
sub
push
add
call
cli
mov
xchg
xchg
jns
sti
lea
jo
mov
loop
push
push
movs
jns
fadd
add
in
enter
mov
test
mov
cmps
mov
or
add
fs
mov
into
push
add
xlat
jnp
xor
(bad)
jmp
js
test
and
inc
lods
sbb
mov
push
mul
cmp
aas
jb
and
sub
add
mov
adc
mov
movs
cdq
jge
leave
pop
in
adc
and
int
xor
mov
cmp
sbb
and
jp
ins
pop
loope
add
add
(bad)
and
or
sub
mov
jecxz
push
mov
and
arpl
shl
xlat
loopne
out
test
xchg
mov
xor
int3
iret
sbb
out
and
inc
or
jle
ins
and
xor
shl
and
lock
xchg
mov
jecxz
xor
fnstsw
inc
xchg
adc
jo
and
and
enter
int
mov
and
movs
pop
sbb
sar
or
cmp
lods
push
stos
and
ret
shr
(bad)
jle
add
or
fst
scas
add
push
js
jl
aam
ja
xchg
shr
add
ror
stc
add
shl
popf
movs
pop
je
inc
(bad)
outs
dec
out
out
fdiv
mov
je
or
imul
hlt
es
adc
test
mov
retf
maxps
das
add
mov
add
aam
(bad)
out
mov
and
adc
dec
fst
out
fwait
mov
aas
push
mov
and
jge
cmp
mov
jo
cmp
outs
pop
cmp
adc
inc
add
popa
fs
(bad)
push
sti
or
or
sub
add
loop
mov
sub
(bad)
or
push
pop
je
bound
mov
pop
and
es
and
xor
das
popf
cwde
jp
loop
mov
xchg
ds
add
mov
add
sub
xor
add
xchg
call
dec
dec
(bad)
repnz
sbb
jo
out
int3
or
jmp
push
sub
inc
inc
sub
(bad)
mov
and
aas
add
fisttp
jmp
ret
mov
jmp
push
dec
mov
adc
xor
stos
or
les
add
xchg
(bad)
mov
push
push
push
test
imul
out
lock
push
xchg
push
push
ret
lahf
imul
cwde
jo
mov
push
push
and
cmp
fidiv
cmp
jbe
sub
sub
cmp
pop
push
sbb
pop
outs
and
ret
mov
mov
add
sub
adc
retf
(bad)
out
xor
nop
cmps
or
push
add
sub
bound
xor
jmp
or
pop
clc
jne
mov
cmp
inc
push
xor
mov
movs
dec
(bad)
mov
mov
add
cld
out
dec
cld
rcl
or
adc
fist
pop
movs
jg
jmp
push
mov
add
push
adc
mul
pop
xor
push
call
cmp
sbb
xchg
and
sbb
sub
fisttp
mov
ret
push
mov
ret
movs
aam
ss
push
adc
add
ror
dec
mov
cmp
jae
inc
jmp
add
or
icebp
push
test
lock
push
scas
movs
(bad)
push
xchg
fisubr
sub
mov
add
push
add
cmc
outs
mov
sub
addr16
sub
enter
dec
mov
sub
push
mov
xor
push
inc
loope
dec
stc
pop
test
sub
mov
movs
add
add
mov
test
sub
jnp
ret
add
pop
add
xchg
bound
shl
push
xchg
out
test
shl
or
ins
pop
jmp
js
lea
sub
adc
adc
movs
cmp
sbb
sub
mov
pop
mov
jecxz
daa
ss
pop
jne
inc
or
sahf
test
ret
add
xor
pop
loopne
add
pop
jge
mov
movs
or
lods
test
mov
or
lods
test
jle
lea
push
or
sahf
mov
push
or
pusha
mov
inc
inc
xor
sub
sub
lock
ins
addr16
dec
xor
clc
adc
rcl
mov
xchg
and
push
or
mov
dec
mov
ins
add
and
sbb
lahf
jo
ror
shr
sub
cmp
pop
lods
sahf
pop
mov
ror
xchg
ror
push
xor
mov
dec
cmp
icebp
jne
xor
xchg
inc
ins
push
push
aam
cmp
mov
cmp
stos
dec
sbb
aam
lahf
add
movs
add
add
icebp
aam
cli
add
imul
adc
mov
not
cwde
fidivr
inc
das
adc
(bad)
sub
pop
mov
(bad)
or
enter
xchg
push
or
xchg
enter
ror
and
and
xor
cwde
push
sub
mov
arpl
fcomp
cmp
sub
sti
sub
les
inc
cdq
push
mov
and
ret
ret
in
ret
int3
pop
ret
jmp
cmps
xor
adc
or
jne
movs
push
jb
mov
ja
neg
xchg
jecxz
jle
pop
sub
cmp
rcr
cs
inc
mov
loope
or
and
test
cld
push
ret
int3
add
shl
adc
or
stc
push
sti
or
aaa
push
push
push
ret
js
push
jecxz
(bad)
bts
jbe
fdivr
and
pop
jecxz
sub
add
and
mov
or
jo
std
bound
mov
rcl
or
(bad)
gs
iret
fs
xor
sub
cld
dec
mov
mov
push
cwde
jl
mov
and
adc
xchg
push
inc
imul
mov
lock
push
push
cmp
jb
popf
or
or
(bad)
mov
inc
cmp
call
ret
jnp
dec
fs
add
dec
ins
dec
pop
push
sbb
jp
addr16
ss
cwde
or
je
pop
push
inc
adc
outs
add
mov
fisttp
pusha
push
in
push
scas
repnz
loop
jnp
(bad)
jmp
add
mov
mov
mov
fld
push
fild
or
mov
cmp
addr16
je
cmp
jne
mov
adc
sbb
add
pop
dec
lea
cmp
mov
pop
dec
xor
push
dec
fdivr
cmps
push
jmp
test
je
test
or
cld
cmp
jbe
jg
mov
inc
cmp
je
leave
dec
fdivr
sub
inc
jmp
inc
and
or
pop
mov
pop
daa
shr
xor
int3
test
call
clc
mov
cmp
add
sbb
cmps
fs
adc
into
cli
jo
inc
jl
call
xor
push
sub
cld
inc
dec
cmp
sub
pop
cmp
jo
hlt
adc
sub
les
clc
je
faddp
mov
xchg
mov
mov
mov
xchg
ja
js
sub
ss
push
nop
adc
jge
stos
js
sub
add
inc
cld
shl
sbb
bound
es
outs
sahf
push
lds
loopne
jne
mov
sbb
sbb
(bad)
mov
mov
data16
mov
jmp
call
outs
inc
shl
pop
shl
add
hlt
or
(bad)
adc
aas
ins
sti
and
cmps
and
or
adc
push
popa
mov
add
xor
lock
pusha
pop
adc
test
mov
or
push
mov
jmp
dec
shr
mov
cwde
sub
cdq
and
push
sbb
ret
mov
push
add
push
xor
sub
or
and
jno
xchg
inc
jg
mov
add
pop
xor
and
(bad)
aaa
aaa
es
sub
sub
and
pop
or
jl
inc
xor
adc
pop
jle
pusha
push
inc
test
jbe
bnd
aam
cmp
jbe
loopne
pop
push
and
pop
arpl
pop
and
popf
add
cs
test
jne
pop
mov
sbb
adc
clc
add
push
xor
ins
loop
add
jae
mov
inc
scas
fcom
fdivp
push
sub
mov
adc
and
out
lahf
enter
jno
mov
inc
and
inc
add
xor
adc
mov
adc
sbb
add
sbb
jp
sbb
dec
inc
push
je
mov
cmp
test
cli
and
jno
(bad)
push
lahf
push
mov
sbb
aas
jmp
xchg
pop
jne
ror
test
push
push
(bad)
shl
mov
push
inc
mov
ins
dec
jl
and
pop
ret
add
pop
add
cmc
(bad)
mov
mov
cld
cwde
push
mov
inc
sahf
rol
das
cmp
push
imul
pop
repz
inc
inc
xchg
mov
cs
cwde
inc
jg
push
daa
push
jecxz
fidivr
in
cmp
push
xor
test
pop
mov
adc
push
lock
cdq
call
xor
jbe
sbb
adc
ret
push
mov
cld
xchg
cmp
and
cmp
push
and
mov
jns
pop
lea
adc
jmp
sbb
xchg
imul
pop
or
jecxz
push
and
inc
sbb
jae
nop
rcr
cdq
aaa
jp
mov
dec
pushf
inc
sub
cmp
(bad)
sub
dec
nop
cmp
dec
sbb
cwde
ret
sbb
popa
xor
push
push
mov
push
adc
dec
or
xor
clc
jb
and
jbe
xor
and
inc
add
sbb
gs
fild
push
mov
mov
nop
sbb
xchg
aam
add
imul
xchg
outs
xchg
sub
loope
pop
dec
scas
push
sbb
popf
int
aad
cmp
lock
mov
je
push
shl
cmp
pop
lea
outs
fsubr
jae
pop
adc
pusha
push
cmp
push
bound
cmp
jne
sub
pop
psubd
lea
push
pop
data16
pop
scas
cdq
adc
sub
enter
jae
inc
push
inc
enter
(bad)
stc
fbld
jbe
mov
jge
push
gs
add
push
ja
inc
sti
inc
inc
fwait
cmp
add
repnz
pop
pop
sti
loope
rcl
cmp
sbb
push
or
xchg
test
cmc
lock
push
cs
sbb
movs
xchg
stos
pop
adc
pop
mov
sbb
jnp
dec
data16
pop
je
test
dec
scas
rcr
push
inc
inc
jmp
xor
push
nop
xor
fs
cmp
(bad)
adc
sbb
mov
push
push
dec
mov
pop
inc
cld
pop
mov
adc
ret
mov
and
jle
mov
add
push
lea
sbb
js
cmp
add
push
sbb
inc
push
add
pop
sub
mov
loop
sbb
add
sahf
mov
rcpps
fdivr
les
add
push
add
adc
leave
add
pop
jns
add
pop
fidiv
mov
dec
jmp
adc
sbb
ret
or
sti
pusha
jb
mov
ret
lea
xchg
retf
adc
rol
ds
mov
jbe
push
adc
inc
mov
dec
mov
loop
push
dec
mov
push
div
das
push
and
gs
and
pop
or
sbb
jo
push
jmp
or
mov
mov
jmp
jno
sti
sub
and
fndisi(8087
mov
inc
inc
push
push
popf
test
xchg
jb
dec
pop
add
add
jmp
xchg
pop
lods
dec
movs
out
push
scas
std
xor
mov
ret
jle
inc
loope
fstp
es
ins
pop
frstor
pop
cmps
or
xchg
pop
mov
cmp
and
xor
push
(bad)
cld
or
sbb
loop
out
and
cmp
mov
(bad)
mov
cs
retf
movs
or
int3
jbe
lods
lods
or
mov
pusha
push
adc
imul
add
out
lods
and
test
mov
jne
xchg
cmp
jne
in
cmp
lods
jo
pop
mov
add
shl
jne
mov
aad
lods
xor
ins
jnp
sti
pop
pop
out
das
mov
ror
mov
mov
xchg
out
out
sub
movs
cmc
push
add
jbe
mov
inc
fs
rcr
in
pusha
ret
or
xchg
add
xchg
sbb
(bad)
sbb
sbb
inc
je
fstp
cmp
ja
lea
inc
inc
fadd
jne
daa
rcr
inc
push
push
add
sbb
add
adc
jg
pop
mov
push
xor
dec
rol
out
push
cmp
adc
push
adc
sub
mov
add
(bad)
cmp
xchg
add
std
jnp
loopne
ret
adc
mov
xchg
sub
fdiv
mov
icebp
cmps
(bad)
mov
fwait
(bad)
loopne
mov
repnz
fsub
test
dec
xlat
push
aas
je
cmp
imul
and
jne
push
imul
cmp
pop
jne
pop
call
repnz
mov
in
xor
jl
pop
jle
xchg
(bad)
jne
jmp
sbb
sbb
retf
sub
(bad)
mov
sbb
mov
push
sub
and
addr16
ret
jne
mov
sbb
loopne
add
je
pop
in
cmp
arpl
stc
mov
cs
pop
je
sti
(bad)
jno
out
dec
xchg
repz
jmp
pusha
mov
dec
in
arpl
scas
jg
add
mov
pusha
add
(bad)
std
and
xchg
mov
sub
shl
mov
add
cmp
jl
adc
xchg
out
and
inc
fld
shr
mov
push
pop
loopne
mov
push
scas
or
inc
(bad)
dec
push
mov
or
cld
or
fwait
ret
push
add
inc
and
mov
les
pusha
pop
call
cmp
cvttps2pi
and
push
mov
nop
fcom
adc
push
adc
in
add
inc
pop
ror
arpl
xchg
or
xchg
add
ja
mov
push
gs
(bad)
sahf
xchg
movs
push
push
push
push
pop
pop
in
mov
pusha
fld
mov
xor
adc
jecxz
push
push
sub
xchg
movs
xchg
add
sbb
cs
xchg
js
sbb
mov
lods
fisttp
daa
jecxz
and
and
pop
rcl
sub
xor
in
add
rcl
call
mov
sbb
adc
mov
cmp
sar
(bad)
push
sbb
or
inc
adc
fild
add
pop
cmc
test
outs
(bad)
(bad)
in
test
and
push
imul
jbe
or
add
daa
mov
cmp
xor
es
and
xor
test
push
jp
jmp
sti
xor
or
clc
pop
dec
cmp
outs
jnp
jp
push
pop
jmp
jecxz
test
mov
inc
push
aam
je
into
or
div
mov
mov
cmp
or
popa
ret
push
push
sub
mov
repz
lock
test
sub
int
xor
sti
es
sti
fcom
or
imul
mov
xchg
mov
mov
sub
dec
cmps
test
sbb
mov
lock
(bad)
push
or
jmp
xchg
fwait
add
in
and
push
mov
je
mov
cmp
jne
xchg
adc
adc
in
mov
loopne
inc
jbe
xor
or
je
jg
jo
adc
frstor
sbb
mov
jne
cmp
je
ds
xchg
pop
(bad)
int3
loope
inc
push
mov
mov
add
pop
sbb
pop
les
push
imul
pop
lock
jb
or
test
jbe
push
adc
call
jne
rol
into
and
mov
(bad)
(bad)
push
retf
dec
add
cmps
add
in
lock
fsubrp
lock
cmp
jne
or
or
push
ror
sbb
mov
call
hlt
adc
sbb
sbb
mov
je
or
daa
aaa
adc
cmp
cmc
nop
data16
aas
js
bound
xor
push
or
or
inc
lock
out
jl
push
icebp
push
and
pusha
mov
jmp
xchg
jle
aaa
jp
push
mov
sub
popa
lahf
pop
mov
cmp
cmps
cmp
fstp
cdq
mov
pusha
je
div
push
sbb
sbb
inc
or
add
dec
in
xor
add
test
fisub
jb
xor
outs
out
pop
pop
inc
cmp
lea
adc
inc
hlt
sub
mov
lock
hlt
and
arpl
add
cmp
add
mov
hlt
cmp
jmp
inc
movs
pop
enter
cdq
mov
jb
les
iret
cmps
icebp
pop
adc
lock
mov
mov
aas
push
fcomp
xchg
into
xor
outs
mov
mov
add
and
mov
je
or
sar
push
and
lea
test
push
out
add
or
int
and
call
lea
cmp
fidiv
jne
addr16
fnstenv
hlt
test
shr
je
inc
add
add
js
ins
add
mov
mov
mov
mov
inc
pusha
scas
xchg
adc
int
cmp
jns
pusha
shl
xor
lock
and
mov
movs
movs
or
xchg
and
test
add
or
sbb
and
sub
(bad)
adc
adc
in
adc
sub
(bad)
dec
pop
sbb
push
int
(bad)
adc
pop
push
test
pusha
es
(bad)
push
xor
ja
je
adc
jns
loope
bound
adc
and
and
adc
jmp
sub
push
xchg
pop
sahf
xchg
adc
and
mov
push
bound
adc
inc
add
ret
loopne
xor
sub
cmp
mov
aam
ficom
adc
xor
scas
and
jmp
mov
dec
add
(bad)
aam
inc
pop
push
gs
adc
dec
push
pop
or
mov
sbb
and
jmp
jne
jns
pop
push
loop
sbb
xor
mov
push
xor
sbb
jg
jbe
lods
loopne
adc
ja
jmp
mov
and
cmp
and
into
aas
int
bound
adc
out
inc
xchg
iret
in
shl
and
mov
fdivr
into
jae
dec
adc
stos
and
xchg
loopne
in
cmp
shl
add
fld
mov
(bad)
(bad)
add
push
push
mov
jmp
rol
xor
xchg
push
sbb
sar
int3
lds
fist
push
mov
fs
fs
sbb
cmc
daa
pop
adc
fild
test
das
dec
inc
cmp
cmps
push
test
loope
pop
pop
je
add
inc
(bad)
(bad)
(bad)
clc
sbb
add
daa
sub
into
inc
popa
adc
mov
mov
ss
cmp
sti
pop
mov
push
mov
mov
sahf
push
xchg
aam
mov
outs
push
add
jge
xor
lea
mov
inc
out
jge
push
sbb
or
push
out
fmul
stos
ret
imul
mov
add
cmp
and
sub
(bad)
jmp
add
lods
dec
clc
inc
push
mov
xchg
mov
and
inc
ds
rcr
add
push
push
xor
xor
sbb
(bad)
jmp
push
inc
call
add
push
adc
and
add
fmul
movs
int3
or
aas
ret
ret
pop
pop
xchg
or
dec
je
sbb
gs
cmp
sbb
xchg
cwde
hlt
sub
jno
mov
fdivr
pop
outs
sbb
fdiv
pusha
xchg
mov
pop
xor
(bad)
gs
jp
and
lea
push
stos
inc
adc
jb
es
add
xor
lds
xlat
mov
or
dec
sar
or
popa
pop
leave
sub
(bad)
pop
xchg
pop
mov
cmp
cmp
ret
pop
push
push
cs
or
int
data16
pushf
pop
push
mov
ins
pop
mov
mul
add
pop
jmp
push
pop
add
loopne
mov
repnz
fcom
mov
xor
inc
push
adc
jge
cwde
jle
mov
sub
cmp
pop
ds
add
push
push
push
mov
js
out
mov
jo
pop
xchg
fstp
hlt
adc
jecxz
ret
push
push
fldenv
xor
push
ja
cmps
jo
inc
out
add
iret
add
pushf
pop
sbb
jo
repnz
(bad)
cmp
push
ins
jne
or
adc
push
push
push
dec
sar
pop
add
inc
inc
data16
test
pop
iret
mov
pusha
push
pop
mov
jae
(bad)
movs
mov
dec
loopne
rdmsr
(bad)
dec
loopne
xchg
mov
stos
or
inc
inc
xchg
mov
add
mov
repz
push
(bad)
or
clc
call
and
out
add
cmp
or
loopne
xor
scas
sub
rcr
ja
repnz
sub
aas
mov
or
mov
and
sbb
sub
cmps
mov
stos
(bad)
cmps
inc
sahf
cmps
add
cmps
pop
pop
jmp
or
loop
lods
pop
js
retf
push
fmul
jp
push
loopne
sbb
push
ret
and
adc
add
xchg
add
cmps
rcl
cld
test
push
repnz
leave
cld
adc
int
mov
and
adc
shl
iret
or
sub
dec
adc
pop
arpl
cmp
add
cmp
pusha
popa
adc
pop
mov
cmp
inc
fbstp
rcr
adc
jbe
push
and
repz
aad
mov
push
pop
sbb
aad
dec
or
inc
sbb
retf
xchg
adc
hlt
add
mov
push
push
pop
cmp
mov
adc
inc
adc
iret
mov
test
adc
xchg
bound
add
push
adc
or
adc
dec
sbb
xor
das
mov
and
and
(bad)
loop
adc
add
aam
lock
das
inc
sbb
mov
test
arpl
add
cmp
lock
dec
jo
sub
cmp
aaa
sbb
xor
jmp
mov
(bad)
jbe
retf
cs
pop
or
das
dec
mov
cmp
sbb
(bad)
push
stos
imul
dec
mov
add
xchg
pop
retf
ret
or
loope
add
inc
es
call
mov
pop
popa
mov
daa
fsub
add
cmp
mov
dec
jne
out
outs
aaa
inc
adc
call
push
call
mov
mov
loope
and
(bad)
js
sbb
add
in
loope
mov
pushf
mov
or
push
nop
or
pop
leave
mov
clc
or
mov
xchg
and
add
pop
mov
cmp
inc
dec
fwait
or
dec
mov
nop
ficom
dec
xor
xchg
test
sbb
cmp
push
sub
sbb
fwait
les
inc
sbb
cmps
ins
push
inc
and
xchg
xchg
xlat
rcr
fwait
js
xor
cs
and
dec
mov
jnp
mov
and
inc
mov
mov
dec
sbb
mov
or
sahf
ss
adc
push
and
sub
(bad)
daa
add
dec
leave
out
inc
sub
dec
cli
sahf
outs
mov
or
push
pop
sbb
adc
inc
ss
jno
inc
cli
sub
xchg
push
mov
jnp
jnp
inc
mov
and
stos
push
sar
inc
or
and
ror
adc
jbe
pop
or
add
outs
xchg
pop
mov
add
mov
shld
adc
aaa
adc
dec
push
sub
jae
popf
push
push
adc
sbb
out
mov
sbb
add
sbb
inc
push
jl
fmul
leave
mov
and
call
and
adc
push
shl
fistp
adc
rcr
ret
rol
ss
xchg
dec
dec
dec
ror
push
and
dec
adc
mov
test
push
(bad)
loopne
call
pop
cmp
retf
or
inc
fcomp
les
dec
inc
mov
pushf
sahf
outs
cli
(bad)
xor
cmp
jne
adc
ins
out
xor
and
int3
mov
and
sbb
pop
ss
pushf
pusha
adc
pop
fs
aam
jmp
into
inc
imul
xor
shl
jge
out
ret
push
iret
push
xor
fsubr
test
xchg
pop
xor
movs
jmp
sbb
test
jo
adc
or
sub
loopne
(bad)
jmp
dec
sub
push
movs
aas
loop
dec
xor
ins
lock
pop
jmp
adc
push
xchg
add
jne
pusha
xchg
stos
mov
scas
jge
bound
jbe
add
and
adc
cmp
xchg
adc
adc
mov
sub
push
adc
xchg
bound
jns
inc
jbe
adc
(bad)
int3
mov
addr16
data16
pop
add
clc
icebp
adc
sahf
inc
loopne
mov
call
fbstp
push
xor
jnp
pop
jbe
retf
pop
sahf
pop
cs
mov
jbe
fdiv
ret
mov
mov
sbb
ins
out
add
data16
xchg
je
mov
lock
jbe
pusha
adc
mov
push
dec
adc
aad
pop
mov
mov
cmp
cmp
imul
js
ret
add
outs
mov
fwait
inc
test
pop
lock
or
mov
xor
js
xlat
call
add
jmp
cs
data16
push
leave
lods
mov
adc
rol
cli
add
add
lods
dec
mov
mov
sar
cmp
and
cmp
mov
iret
jmp
mov
mov
push
push
and
dec
mov
pop
add
jl
push
pop
mov
cli
xor
inc
imul
bound
add
mov
retf
cdq
cdq
push
or
push
xchg
and
mov
pop
sbb
inc
rol
xchg
xchg
mov
jecxz
sub
neg
inc
or
mov
or
mov
or
jmp
test
jge
xor
lea
cmps
or
add
(bad)
mov
lods
xor
inc
ret
mov
sub
mov
pop
push
lds
and
or
sbb
dec
add
cmp
pop
mov
mov
les
inc
add
(bad)
sar
jmp
sub
rcr
jbe
sub
add
mov
das
pop
dec
dec
imul
xchg
push
mov
xchg
push
push
add
rcl
adc
adc
xor
jnp
stc
and
sar
add
xchg
test
mov
sub
mov
xchg
cmp
cmp
pop
push
pop
xchg
jmp
add
data16
jp
xchg
hlt
jne
adc
mov
sub
add
out
xor
enter
add
mov
mov
cwde
jp
sbb
pop
jno
inc
retfw
leave
sub
adc
add
cmp
dec
or
adc
sub
mov
push
dec
mov
pop
mov
jne
ret
mov
push
dec
mov
int3
sub
data16
shr
mov
adc
shl
lds
(bad)
mov
and
arpl
lock
push
imul
push
adc
enter
jmp
adc
inc
dec
or
and
xor
pushf
mov
mov
(bad)
mov
lods
cmps
mov
inc
xor
ds
enter
cmps
ror
xor
addr16
sub
out
inc
inc
mov
sbb
add
xor
mov
lahf
in
xchg
or
adc
and
add
sbb
adc
and
push
adc
adc
adc
adc
push
adc
adc
adc
fcom
inc
ror
sub
shl
lock
pop
add
lds
adc
jg
dec
jmp
clc
push
mov
cmp
je
inc
ret
cmp
aad
imul
out
or
mov
icebp
add
or
xor
sbb
or
scas
(bad)
cwde
mov
mov
lock
mov
inc
fisttp
leave
dec
jo
pusha
mov
xor
loop
les
add
mov
jmp
in
popf
mov
add
add
cmovae
xor
jo
pop
(bad)
jmp
cmp
add
pushf
idiv
add
bound
add
or
push
sbb
es
in
mov
sbb
mov
lea
adc
shr
cmp
cmps
push
das
jle
fist
mov
pushf
ret
mov
xchg
add
xchg
mov
arpl
popf
into
xor
add
into
imul
jne
sar
sti
popf
push
sbb
push
not
mov
mov
sbb
and
jb
shr
adc
dec
cld
inc
rol
lea
push
add
aad
popf
ins
cmp
in
mov
push
sbb
sbb
add
pop
sub
cmps
push
mov
scas
je
cmp
mov
test
ret
inc
mov
call
cmp
mov
call
nop
push
mov
and
or
setp
add
jmp
xor
pop
fiadd
dec
cmp
lea
push
mov
fiadd
or
jnp
adc
adc
dec
mov
je
mov
pop
into
fiadd
xor
xchg
inc
call
and
pop
out
cmps
das
inc
pop
push
push
adc
scas
mov
sub
cmp
xor
and
cmp
outs
popa
add
ja
in
pop
sar
push
jmp
or
sub
loop
or
or
dec
push
inc
in
sbb
xchg
adc
push
scas
or
add
out
call
mov
xor
pop
sub
clc
sbb
loopne
jno
push
push
pop
push
not
(bad)
fcomp
add
sub
dec
repz
and
push
out
inc
sbb
shl
inc
clc
push
pop
aad
cmps
push
or
ror
sbb
hlt
and
fsub
jno
mov
ins
sbb
xor
(bad)
cmovge
(bad)
sub
pop
adc
sbb
sbb
sbb
mov
shl
ret
fs
mov
sbb
int
add
pop
cmp
jp
and
js
xchg
cmc
add
pop
push
(bad)
es
jno
mov
inc
test
xchg
mov
xchg
repz
add
pop
outs
out
push
fiadd
adc
rol
push
push
mov
not
jmp
add
inc
sub
sbb
cli
ja
jecxz
cmc
les
sub
or
sub
loopne
add
dec
push
or
in
mov
ror
push
imul
(bad)
mov
nop
cdq
(bad)
jge
xor
sbb
xor
jp
xor
bound
inc
out
push
fist
bound
jl
psubw
xchg
jnp
adc
retf
or
cmp
xchg
scas
dec
shr
scas
xchg
icebp
push
iret
pop
je
fld
add
pop
xor
dec
push
ja
or
sbb
aam
jge
mov
jne
cs
dec
loopne
imul
adc
ror
ret
sbb
adc
mov
or
nop
inc
sbb
iret
lds
sar
pop
out
sub
add
inc
popa
repnz
test
ret
xor
mov
jmp
repnz
pop
pop
arpl
mov
loop
movq
sub
repnz
cmps
push
mov
mov
adc
(bad)
push
stos
add
and
sub
xor
pop
mov
adc
cmp
pop
clc
jecxz
inc
mov
dec
call
mov
pushf
(bad)
mov
or
mov
bound
sub
mov
sub
dec
push
cmps
lea
(bad)
ja
call
xchg
xchg
leave
fst
jns
es
adc
rcr
daa
mov
and
adc
inc
test
and
adc
add
mov
mov
jmp
pop
mov
or
jne
inc
fs
and
push
cmc
ror
fimul
jmp
pushf
fstp
jo
xor
lahf
mov
pop
aaa
cmps
or
inc
dec
dec
cmp
js
mov
adc
add
pop
add
push
jecxz
adc
inc
dec
or
or
add
or
xor
pushf
or
ror
add
ja
aaa
ja
adc
test
inc
add
data16
fs
jmp
aaa
movs
adc
in
or
add
lods
push
xchg
stos
jmp
push
mov
nop
push
cmps
das
xchg
mov
or
js
sbb
lock
les
cmp
mov
loopne
mov
enter
inc
or
ret
push
xor
shr
adc
mov
scas
repnz
jae
lea
jmp
cmp
sub
mov
les
rol
dec
add
cmp
out
mov
imul
mov
in
sub
xchg
jbe
xor
add
add
or
and
fs
das
add
xchg
push
fistp
cmc
xchg
mov
jg
clc
inc
mov
cdq
addr16
inc
add
aad
pop
and
push
inc
shl
adc
xchg
sbb
sub
addr16
mov
add
out
add
add
push
or
pop
rol
cwde
pop
sar
sti
add
pop
pop
or
sbb
lods
add
or
mov
hlt
test
pop
mov
adc
call
sahf
pop
test
add
mov
add
or
pop
cmp
dec
cmc
nop
pop
(bad)
jo
stc
shr
xor
aad
jnp
xlat
mov
movs
sbb
adc
inc
and
or
inc
icebp
inc
sti
push
je
cwde
xchg
popf
dec
out
inc
cmp
sbb
mov
loopne
ds
xchg
js
add
stc
xchg
retf
or
mov
push
inc
jo
mov
ja
xchg
mov
shl
test
in
dec
(bad)
ret
ss
mov
in
add
add
xor
add
gs
sbb
shrd
sbb
outs
dec
scas
jno
or
das
or
pop
add
xchg
and
cli
outs
lea
cmp
leave
and
add
cmp
pop
sbb
add
inc
push
nop
or
inc
xor
pop
cmp
int3
push
or
daa
lea
(bad)
xchg
push
pushf
lds
imul
push
xchg
sub
sub
outs
adc
jno
lea
sub
jmp
in
mov
sbb
outs
in
xchg
sub
test
test
or
jb
test
adc
sbb
sbb
sbb
ja
sti
(bad)
data16
inc
jnp
cmp
loope
or
or
data16
jbe
add
cmp
jmp
push
jbe
or
je
test
xor
push
jns
mov
mov
in
cdq
push
push
test
cmp
dec
or
sbb
shr
nop
inc
cld
add
lock
stos
es
sbb
push
fcom
and
clc
hlt
push
and
hlt
jns
or
lds
cli
mov
pop
cmp
add
cmp
call
pusha
stos
and
fldcw
adc
or
mov
push
push
push
lock
jne
mov
inc
loopne
mov
repz
ss
cld
fcom
dec
or
push
scas
inc
xchg
jno
out
or
ja
pop
or
push
cmp
js
inc
in
aam
xor
jno
or
popa
popa
lea
ret
pop
inc
mov
xchg
retf
movs
or
pusha
push
js
xchg
add
je
mov
ficomp
shl
std
fisub
shl
jo
movzx
push
jo
js
adc
fistp
mov
dec
jp
push
jb
cmps
test
sbb
clc
mov
inc
aam
adc
outs
xor
repnz
jg
sbb
sbb
mov
xor
sub
fidivr
ins
(bad)
adc
inc
pop
and
push
cmp
jne
mov
jl
cmp
jbe
or
jne
push
(bad)
ja
sar
hlt
mov
(bad)
std
cmp
data16
push
xchg
push
cs
popa
inc
add
cmp
mov
shr
add
cld
mov
cmovns
or
adc
sbb
lds
xor
xor
or
(bad)
sub
push
mov
jne
(bad)
pop
or
cmps
rcl
xor
mov
and
inc
pop
js
and
pop
mov
in
test
ror
js
vmread
sub
and
imul
push
and
and
and
or
add
jne
and
ror
bnd
jle
lds
adc
bswap
add
movs
clc
into
fstp
(bad)
pop
(bad)
in
xor
dec
rcr
sbb
clc
fsub
(bad)
ficom
dec
cdq
out
ds
add
mov
mov
std
mov
dec
outs
inc
sbb
pop
fucomip
in
pop
xor
or
cmp
xor
popf
add
mov
call
es
loope
aam
rcl
(bad)
ret
cld
xor
push
mov
ror
sub
or
pop
ja
pusha
adc
push
test
ins
lock
fwait
and
jmp
jae
xor
xchg
jmp
xchg
dec
fs
mov
fisttp
cmp
(bad)
addr16
je
mov
jmp
and
(bad)
inc
xor
adc
les
cmp
jb
and
mov
or
fdivr
mov
push
jae
dec
mov
xor
inc
sub
cs
add
and
and
clc
outs
push
add
xchg
cmp
cmp
adc
daa
(bad)
call
inc
cs
dec
cdq
push
push
mov
rcl
outs
sub
mov
std
ss
leave
dec
int3
inc
sahf
outs
jmp
mov
add
mov
pop
loopne
cmp
and
cli
mov
jbe
cld
aam
or
add
call
adc
rcr
je
jmp
push
xchg
in
aad
cs
jp
dec
mov
fnstcw
(bad)
or
push
je
push
adc
popa
push
ror
jle
test
adc
and
jge
data16
pop
dec
dec
call
pop
fbstp
packsswb
adc
mov
and
fdiv
or
scas
xor
and
dec
dec
xchg
ret
add
pop
xlat
push
fcmovbe
emms
add
loopne
mov
or
fs
cmp
mov
out
mov
or
and
pop
mov
add
ror
lea
inc
rol
or
sub
mov
adc
push
loop
push
and
(bad)
inc
push
and
rcr
(bad)
mov
lds
ins
je
mov
mov
xor
jmp
clc
es
and
out
inc
idiv
int3
out
add
addr16
adc
(bad)
sub
add
and
cmps
add
xchg
adc
and
xchg
out
es
xchg
xor
xchg
mov
das
or
mov
rol
xor
outs
ror
lea
mov
xor
or
fdivr
cmp
ret
fldenv
push
push
add
sbb
jecxz
push
dec
or
pop
mov
mov
mov
mov
or
cmp
sub
cmp
pushf
adc
mov
ror
xchg
add
sti
cdq
cmp
jb
(bad)
mov
and
mov
enter
sub
or
cmc
mov
pop
jb
xor
test
sbb
add
popf
pushf
fsubp
loopne
xor
je
xor
sub
popf
jge
sar
sub
or
js
adc
cld
pop
js
push
jae
lea
ja
cmp
jne
cmc
(bad)
push
fidiv
aam
add
pop
sbb
mov
and
push
sbb
and
aaa
outs
inc
daa
daa
pop
js
jle
add
imul
cmp
sbb
pop
push
sub
jle
dec
or
dec
mov
mov
lea
outs
add
or
add
add
xor
jae
xor
add
inc
sub
dec
and
dec
shr
push
xchg
add
xchg
xchg
pop
sbb
push
adc
add
mov
mov
or
gs
add
and
sahf
popw
cmps
pop
push
sbb
adc
sub
out
xor
xor
xor
push
adc
add
cmc
sub
cs
inc
mov
shl
dec
and
sub
inc
inc
and
push
push
lods
ss
xor
jne
or
mov
mov
data16
jmp
movs
sub
sub
ja
xchg
jb
pop
adc
pushf
cmp
mov
nop
and
je
sub
or
fsub
add
dec
or
ds
stos
pop
add
xor
push
arpl
or
aaa
mov
add
pop
mov
cmc
push
or
je
lea
js
fist
or
shr
dec
out
inc
cmp
adc
fmulp
pushf
adc
mov
xor
je
inc
and
data16
dec
add
ret
retf
pop
adc
add
lods
xchg
inc
jae
cmp
scas
jmp
push
je
dec
add
in
mov
push
xor
or
or
and
std
inc
mov
or
jl
add
add
pop
add
xor
push
loop
add
jg
mov
icebp
sbb
adc
dec
pop
and
daa
bnd
mov
icebp
mov
cmp
push
cmp
out
fld
push
jae
lea
push
sub
push
lods
and
adc
stos
(bad)
ret
es
ja
retf
dec
cli
dec
pop
ret
adc
pop
pusha
mov
ret
lods
xchg
cmp
enter
adc
ffreep
(bad)
imul
jg
out
ins
fdiv
cmp
xor
fnstenv
inc
jmp
push
xchg
mov
cmp
sub
xor
cmp
add
or
inc
mov
and
mov
or
push
xchg
xchg
cmps
cli
fdiv
sub
sub
out
push
sti
test
sbb
sub
aad
mov
ins
neg
inc
popa
jns
call
jnp
fld
push
cmc
dec
in
sbb
outs
ror
pop
mov
cmp
imul
sub
mov
xor
int3
mov
loop
jo
(bad)
nop
push
adc
out
test
inc
pusha
ret
push
mov
retf
and
(bad)
push
mov
xor
push
cmp
fs
aad
xor
mov
sub
inc
shl
xor
adc
sbb
mov
idiv
add
cld
or
movs
popa
xlat
jnp
or
jge
pop
mov
pushf
cmp
lds
retf
jmp
jecxz
lahf
mov
cmp
jb
inc
dec
ins
xor
adc
adc
jge
add
jo
or
cmp
(bad)
sub
push
inc
or
mov
jge
add
es
xor
or
sbb
test
sbb
adc
icebp
ret
jge
out
std
cmc
imul
or
push
inc
mov
psubw
imul
out
addr16
cmp
xor
cmps
imul
inc
(bad)
pop
push
imul
xor
mov
and
arpl
pop
in
or
adc
adc
add
jp
push
adc
stos
jbe
movs
mov
xchg
std
push
mov
add
fisub
xchg
(bad)
push
(bad)
lahf
inc
xor
mov
scas
mov
push
cmp
mov
inc
test
and
test
inc
or
pop
xchg
xor
loopne
pop
sbb
cmp
sbb
lock
xchg
cmp
add
(bad)
or
mov
sbb
xchg
xchg
icebp
jnp
add
(bad)
retf
into
cli
inc
cmp
xor
jbe
cmp
ret
loop
ret
jg
dec
adc
je
mov
cmp
rcl
adc
jg
xchg
js
fst
jo
adc
xchg
mov
push
pusha
es
and
imul
pop
adc
loope
xchg
jg
test
ins
or
ja
pop
inc
pop
or
sub
test
adc
jno
aas
retf
push
imul
pusha
xor
shr
mov
adc
ror
or
(bad)
cmp
outs
ins
das
or
add
or
mov
dec
retf
cli
das
test
push
clc
cmp
test
mov
inc
sbb
inc
mov
and
ja
std
sub
inc
xchg
pop
pop
sbb
push
sbb
push
xchg
mov
(bad)
in
cmp
push
pop
repnz
mov
jae
in
rcl
lds
sub
and
ins
push
dec
sub
mov
les
mov
and
and
and
test
in
jnp
pop
adc
clc
clc
mov
and
fsubr
mov
sub
mov
jb
adc
(bad)
fisubr
les
ret
add
xchg
add
mov
add
test
adc
test
push
in
fild
pusha
dec
loope
dec
fdiv
popf
lahf
adc
and
push
xor
sbb
adc
inc
cmp
mov
jo
stos
sbb
fs
mov
cmp
and
aad
push
(bad)
ficom
cli
add
or
ja
daa
inc
adc
sbb
xor
call
adc
cmp
push
add
mov
adc
add
push
or
enter
cld
or
dec
or
ja
sbb
mov
mul
inc
dec
xor
push
pushf
iret
jl
inc
push
push
mov
push
fbstp
add
sub
jecxz
loope
lods
(bad)
or
pusha
mov
mov
mov
lods
lar
out
push
jne
nop
cmp
scas
adc
cmp
cmp
ror
and
jbe
mov
test
push
adc
push
sbb
fmul
jge
imul
aaa
pushf
inc
adc
pop
sbb
fwait
ret
xor
pushf
and
out
dec
hlt
sub
fimul
push
or
pop
mov
test
movzx
test
loopne
sbb
je
test
xchg
or
add
es
adc
push
loope
mov
xchg
ficomp
adc
cmc
push
cmp
(bad)
adc
pop
sbb
scas
xchg
pop
das
jmp
add
adc
mov
cmp
cmps
icebp
adc
xchg
mov
jmp
daa
jo
sub
push
movs
xor
push
adc
das
push
fidiv
mov
inc
jb
rol
jmp
leave
and
push
jecxz
loope
mov
ret
stos
sub
js
fist
rcl
add
sbb
push
push
mov
movs
and
mov
add
or
mov
mov
mov
stos
int
dec
(bad)
jmp
ds
jo
push
les
add
not
mov
in
loop
rcl
out
mov
(bad)
ss
xchg
in
adc
sub
or
sub
inc
loopne
mov
out
and
sub
pop
dec
pop
xor
sbb
push
pop
or
hlt
inc
(bad)
in
stos
or
mov
movs
pop
ret
jge
push
daa
lea
jge
sub
hlt
sub
aas
or
push
test
nop
cwde
jle
mov
loopne
sbb
cmp
ud2
rdmsr
ja
(bad)
loope
lahf
cld
push
adc
cld
js
push
not
mov
add
sti
add
and
dec
clc
xor
and
pop
retf
jecxz
or
sbb
add
cmp
inc
jbe
jne
mov
mov
sbb
shr
fs
sbb
popa
pusha
retf
mov
jge
das
mov
les
push
mov
rcl
and
loopne
and
add
mov
cmp
dec
mov
sar
mov
cmp
jmp
mov
cmps
loope
call
pop
jl
int3
mov
fld
cmp
into
xor
cmp
sbb
gs
aam
push
test
sahf
into
dec
add
inc
dec
and
sub
int
fmul
cmp
aad
mov
xor
xor
sub
push
sub
push
(bad)
stos
movs
jg
nop
(bad)
dec
add
inc
or
mov
enter
dec
push
jg
inc
and
push
cwde
stc
ja
(bad)
add
pop
call
je
push
daa
mov
xor
xor
pop
push
dec
jge
sub
adc
icebp
cmp
add
push
aam
clc
mov
(bad)
mov
adc
or
das
dec
(bad)
pop
mov
sub
inc
ficomp
into
jmp
into
out
add
rol
dec
xor
xor
jns
pop
sub
push
cmp
xor
in
and
imul
xor
add
mov
sub
out
jle
cwde
(bad)
jl
mov
leave
xor
jb
xor
sahf
mov
aas
lea
jp
push
inc
xor
mov
(bad)
(bad)
fiadd
dec
dec
jns
adc
jne
pop
jo
iret
push
shr
pop
dec
mov
adc
adc
shl
inc
add
jmp
loopne
(bad)
ins
lea
into
mov
ror
fadd
mov
and
(bad)
and
aam
push
inc
mov
(bad)
adc
mov
or
push
out
jl
movs
gs
scas
push
and
das
inc
jle
add
aam
aaa
mov
pusha
jbe
outs
(bad)
jmp
xor
and
mov
in
add
push
or
sbb
inc
mov
xchg
add
xchg
sbb
pop
fnstsw
mov
lea
test
popa
rcr
bswap
sub
inc
jmp
inc
push
add
xor
jo
sub
mov
(bad)
mov
push
cmp
jne
sub
xor
sbb
adc
rol
adc
daa
bound
fadd
movs
jnp
xchg
inc
in
mov
jnp
mov
pop
xchg
aaa
xor
rol
ror
iret
add
push
dec
enter
fadd
dec
xchg
inc
scas
push
push
pop
inc
adc
mov
jg
loope
add
je
dec
sbb
ret
lods
pop
loop
and
mov
les
sbb
test
mov
add
in
rcl
jne
and
jmp
cmp
sbb
scas
test
jl
and
jne
imul
or
pop
mov
pop
(bad)
(bad)
jne
or
jne
aas
push
xchg
mov
and
add
cmp
jmp
cmp
mov
pop
lahf
cmp
sbb
lea
mov
push
(bad)
add
or
mov
mov
or
xor
push
cld
not
cmps
mov
sub
sub
in
dec
add
xchg
shr
(bad)
aad
or
push
xchg
push
fs
movs
inc
mov
xchg
fdivr
push
inc
xor
sar
cmp
retf
mov
sub
ds
push
push
fcomp
fiadd
pop
push
pop
lea
test
or
pop
les
xor
sbb
cmp
mov
popf
pop
addr16
scas
call
ins
inc
fbstp
mov
pop
mov
jg
imul
sbb
imul
mov
rcl
cmp
jl
inc
inc
push
jmp
cmp
adc
ins
cmp
ins
adc
retf
sbb
mov
sub
dec
adc
das
inc
mov
inc
jle
test
rcr
dec
and
and
xor
call
sar
mov
rol
stos
xor
jne
sub
xchg
out
rcr
push
jae
push
add
push
jne
push
push
je
xor
outs
loope
out
sbb
dec
ins
jne
pushw
mov
or
cmp
scas
aaa
xor
inc
sar
and
jmp
mov
push
mov
adc
sbb
adc
cmp
je
push
add
dec
add
jne
add
mov
adc
and
test
cmps
mov
cmp
mov
jg
add
repnz
cmp
add
cmp
jnp
push
cmp
push
xor
cli
push
pop
cwde
fdivr
(bad)
jl
sti
inc
mov
mov
mov
or
out
aaa
les
retf
jae
pop
movs
cdq
adc
push
pop
sbb
or
sbb
in
push
cmc
push
and
sub
mov
pop
xor
rcr
push
test
jecxz
xor
es
pusha
push
jnp
pop
aaa
jecxz
clc
stc
lds
mov
icebp
dec
loopne
adc
or
mov
jb
mov
mov
shr
xor
(bad)
mov
push
mov
sahf
jge
mov
pop
dec
dec
or
jmp
inc
or
lea
and
add
es
or
lea
ins
aaa
movs
mov
fcmovb
inc
sbb
and
sbb
call
mov
add
jae
push
or
sbb
shl
imul
data16
shl
ins
jo
pusha
shl
js
mov
shr
pop
sbb
mov
add
adc
push
or
or
dec
jnp
les
(bad)
shr
inc
mov
xor
pop
scas
sub
jo
add
lea
xor
add
loopne
nop
in
(bad)
mov
or
mov
sbb
(bad)
xor
and
rcl
xor
add
mov
inc
jl
js
and
xor
jo
xor
add
push
and
push
cmp
or
rcl
push
test
inc
neg
mov
imul
cmp
or
cmp
add
or
push
inc
adc
mov
shr
(bad)
cld
jo
fcmovu
sub
cmp
xor
hlt
inc
(bad)
aam
adc
jmp
xchg
add
push
adc
sbb
mov
mov
or
lea
add
cmps
cli
and
add
repnz
push
sahf
loope
add
jb
mov
push
cmp
sub
sbb
sbb
adc
es
mov
mov
daa
push
add
lock
out
xor
push
mov
test
or
mov
movs
jb
mov
sub
and
inc
sub
loopne
sub
add
shl
ret
mov
add
rcl
aam
jl
ins
pusha
and
imul
je
xor
xchg
imul
jne
das
xor
cld
add
jl
inc
addr16
jne
or
clc
jnp
inc
dec
adc
imul
pop
pusha
int
(bad)
pop
dec
test
aas
jmp
and
xchg
mov
add
das
call
test
sar
cdq
in
cmp
das
add
sti
cmp
sub
sub
sub
add
imul
fcom
add
mov
stc
push
jne
mov
sub
outs
sub
mov
inc
icebp
jne
cmp
lds
je
xor
sub
xor
or
push
sbb
cld
out
cmps
imul
lods
mov
or
add
sub
cmp
js
mov
test
add
or
mov
xchg
sbb
enter
sub
(bad)
into
dec
aas
icebp
pop
cmp
inc
cmp
sbb
jne
popf
dec
cmp
lock
mov
ins
cmps
or
cli
out
fidivr
pop
dec
adc
add
lods
pop
mov
cmp
cwde
mov
or
xchg
xchg
dec
push
jle
lods
pop
mov
inc
or
movs
jo
and
adc
retf
fs
sti
sar
pop
xor
mov
pop
add
pop
inc
in
cmp
adc
ror
jp
enter
repnz
jb
sub
mov
mov
dec
aaa
loopne
jb
sbb
lea
push
push
mov
xchg
bound
push
and
mov
sbb
fst
lods
xor
int3
lock
arpl
cmp
test
xchg
and
adc
lea
or
push
pushf
icebp
mov
je
sbb
fs
pop
fs
pusha
xchg
inc
inc
push
ins
ins
push
push
xor
or
pop
cmp
adc
nop
and
push
icebp
push
xchg
xlat
idiv
je
cmp
je
popf
add
add
xor
or
push
adc
push
mov
fsub
lea
mov
push
push
hlt
sti
push
sub
inc
and
shr
jmp
push
jne
inc
xor
movs
jg
rol
and
dec
inc
push
outs
dec
adc
jnp
in
adc
lock
xchg
xchg
cld
lock
rcl
out
mov
stos
or
(bad)
push
pop
adc
adc
cmc
jo
add
ja
and
mov
movsx
in
push
mov
imul
retf
add
push
and
mov
cmps
loopne
add
ret
push
cmp
cmp
xor
jmp
fld
pop
pop
sub
add
mov
test
adc
add
or
adc
retf
leave
sbb
add
and
xchg
mov
clc
jle
jae
fisub
das
jbe
out
jne
adc
adc
sbb
sbb
pop
and
sar
in
ins
(bad)
push
clc
ins
jmp
add
mov
inc
xor
and
popa
movs
cdq
cs
cmp
xor
leave
je
push
aas
jne
outs
fsubr
sbb
add
xlat
ss
outs
cmp
mov
stos
(bad)
or
fcmovnbe
pusha
(bad)
pushf
cwde
xor
mov
clc
outs
inc
ja
sub
mov
cmp
and
sbb
iret
pop
shl
push
and
dec
dec
ror
ficom
xchg
cwde
push
mov
mov
sbb
dec
push
or
pusha
fidiv
xchg
sbb
xor
cmp
xor
pushfw
fs
in
fcom
inc
or
jecxz
mov
loope
inc
or
add
adc
sub
adc
mov
outs
lds
(bad)
pop
arpl
sbb
imul
adc
je
fdiv
lods
cmp
mov
bound
ficom
push
sub
and
cmp
sub
sbb
adc
repnz
loope
pop
cmps
jne
sar
fld
aaa
lods
sahf
sub
sbb
push
add
dec
pop
xchg
into
in
ret
jge
int3
mov
stos
mov
retf
lods
adc
sbb
enter
sbb
and
rol
xchg
adc
or
pop
add
nop
add
and
pop
cmp
dec
pusha
xor
call
adc
push
mov
push
add
ins
mov
adc
and
adc
movs
data16
xchg
sbb
cmp
dec
fsub
pop
push
cli
sub
xchg
jp
push
jle
xor
test
dec
inc
in
sub
mov
push
push
push
push
mov
ja
adc
fiadd
mov
mov
cmp
cdq
test
loope
lahf
loop
int
fmul
aad
push
arpl
sar
dec
adc
pop
jb
test
add
mov
xor
push
xor
icebp
rcr
and
and
pop
leave
rcr
adc
fdiv
cmovge
or
mov
movs
add
pushf
mov
jl
mov
mov
(bad)
xor
(bad)
sbb
and
push
jo
adc
adc
movs
add
push
jmp
fnstcw
xor
pop
push
or
push
pop
out
xchg
mov
or
xchg
in
mov
and
pop
cmp
cmp
and
shl
test
fdivp
push
stos
fld
pop
fdivp
sub
sub
(bad)
mov
jne
test
sub
pop
call
xor
or
(bad)
div
movs
dec
repz
dec
and
cmc
sbb
adc
jns
jl
repnz
(bad)
and
cmp
inc
or
or
or
imul
sub
adc
inc
jne
mov
fsub
xor
pushf
mov
and
lods
mov
and
or
push
ret
mov
fsub
xchg
jae
or
add
xchg
add
shl
popf
inc
jg
adc
adc
pop
retf
sbb
jle
adc
push
je
xchg
fimul
je
mov
xchg
lock
aam
jnp
fild
push
xchg
mov
sbb
mov
push
or
(bad)
or
(bad)
dec
outs
(bad)
pop
(bad)
(bad)
(bad)
push
and
push
lods
call
aaa
xchg
arpl
push
xchg
pop
cmp
enter
jge
imul
mov
or
imul
and
xchg
add
cmps
test
add
add
push
mov
xchg
jo
lahf
xor
dec
xor
test
and
ins
popf
cli
ss
add
or
mul
jbe
pop
out
xchg
int3
call
sub
pushf
adc
cmp
add
push
sbb
push
sbb
cmovne
outs
mov
sbb
xchg
cmp
push
jnp
xor
xor
ss
xor
adc
dec
leave
push
jb
cmp
nop
add
ret
ret
xor
add
fwait
xchg
ins
loope
sar
ret
xchg
mov
dec
adc
js
(bad)
fisttp
adc
jle
cli
push
push
push
rcl
dec
rcl
push
sbb
(bad)
jmp
(bad)
mov
jp
jmp
jg
inc
cld
aam
add
dec
pop
nop
and
outs
lds
sub
adc
pop
jmp
push
pop
push
fdiv
jle
xor
stc
inc
cmc
js
adc
xor
imul
and
push
pop
mov
pop
add
push
cmp
pushf
dec
fmul
out
dec
push
inc
sub
pop
inc
or
and
push
jmp
jecxz
jae
push
call
sub
push
sbb
sbb
popa
pop
sub
mov
jl
inc
inc
lock
and
adc
adc
push
ret
push
in
in
fs
cmp
mov
add
jae
cmps
cmp
or
mov
repnz
jo
push
fimul
hlt
add
scas
inc
xor
add
push
fcom
fistp
into
mov
inc
in
nop
jo
or
clc
dec
xchg
cmp
pusha
adc
faddp
test
dec
adc
or
ficom
push
xor
mov
ds
jl
and
clc
mov
sbb
je
push
cmp
sub
xchg
out
adc
pop
push
sbb
jmp
push
cs
adc
push
pop
cmp
adc
mov
mov
xor
cmp
sbb
adc
retf
outs
(bad)
sub
mov
or
add
jmp
nop
or
in
pop
push
add
mov
das
push
sub
or
jle
sub
add
rcr
cs
cmp
jo
(bad)
imul
ret
fcom
lock
sbb
mov
push
fdivr
int
or
cmp
jl
loope
xor
xlat
lds
retf
or
adc
jl
inc
dec
dec
ins
loopne
mov
jbe
fisttp
aam
out
addr16
mov
leave
pop
adc
gs
sub
or
pop
mov
sub
or
rol
xchg
or
test
inc
mov
jo
ds
push
add
inc
push
adc
add
popa
popf
fst
add
dec
scas
inc
cs
xor
rol
jle
lea
sbb
movs
push
inc
mov
or
shl
or
mov
mov
mov
clc
retf
inc
arpl
push
test
rol
scas
nop
in
or
sbb
icebp
or
or
ror
stos
push
pusha
and
mov
pop
xlat
mov
data16
cmps
cmp
push
xchg
call
mov
and
adc
ficomp
dec
sub
adc
xchg
daa
repnz
mov
or
mov
es
mov
ins
dec
fwait
xor
fimul
push
push
inc
dec
push
(bad)
aas
push
cwde
imul
cdq
idiv
push
and
pop
jne
hlt
jbe
lds
fidiv
in
cwde
add
jne
lock
int
inc
loopne
outs
ret
push
push
mov
add
sub
in
or
movs
fxch
push
mov
push
pop
add
dec
shl
addr16
xor
mov
add
aas
movs
add
in
and
sub
inc
inc
and
rol
push
cmps
or
inc
aaa
adc
popa
movs
stos
dec
mov
aas
or
sub
(bad)
jp
imul
pop
clc
xor
fwait
adc
cmp
pop
mov
out
and
call
xor
pop
sbb
mov
mov
popa
jns
jo
inc
or
sub
hlt
and
dec
sub
inc
sub
lds
push
nop
sbb
sbb
inc
mov
dec
out
xchg
jb
pop
push
or
jae
sbb
sbb
test
loop
xchg
or
fucomi
pop
dec
or
add
dec
loopne
pop
pusha
push
jge
add
cmp
jg
rol
mov
mov
add
dec
(bad)
push
(bad)
jb
sbb
mov
dec
(bad)
adc
sbb
in
mov
cmp
cs
cmp
adc
sbb
sub
ins
sahf
pop
cmp
lods
sti
into
add
jg
pop
mov
xor
adc
push
push
mov
rcl
imul
add
pusha
push
pusha
ins
out
add
test
in
jnp
mov
aas
loope
(bad)
cmp
mov
outs
add
cmp
int3
and
add
sti
xchg
mov
pop
inc
dec
dec
cmps
scas
jge
xchg
sti
sar
sub
ins
shr
inc
add
stc
push
mov
dec
adc
adc
and
call
cli
popa
dec
sbb
inc
mov
xchg
pop
(bad)
cmp
xor
adc
adc
in
popa
inc
dec
std
repz
dec
inc
mov
or
lock
and
dec
cld
mov
mov
es
or
sub
or
push
mov
rcl
arpl
pop
adc
push
(bad)
lods
les
cld
pop
adc
push
dec
dec
jns
mov
test
or
mov
retf
push
int
les
je
fdiv
call
dec
push
push
icebp
(bad)
or
pop
mov
xchg
lock
out
arpl
popa
inc
pop
cmp
pop
js
shl
sub
and
test
pushf
pop
test
jmp
dec
cmps
js
and
add
mov
adc
movs
rol
ins
ins
lds
sub
lods
adc
lds
test
call
fdivr
hlt
test
mov
inc
test
adc
mov
xchg
movs
xor
je
adc
cmp
arpl
dec
jne
add
mov
mov
cwde
pop
inc
or
adc
add
or
add
jmp
push
jne
pop
add
push
and
pop
mov
xchg
mov
loopne
mov
nop
inc
xor
jle
add
xor
ds
cwde
cmp
jbe
loop
cmps
fs
add
sub
fs
mov
push
jne
repz
or
sbb
sub
jo
cmp
xchg
or
jo
into
je
or
jl
dec
nop
bound
adc
test
pop
fwait
or
nop
mov
dec
push
or
scas
cs
fiadd
cmp
add
mov
cmovbe
jg
cdq
push
mov
dec
cld
or
xor
sbb
mov
es
dec
pop
sahf
test
aaa
pop
inc
fbstp
in
lea
pop
add
or
add
fsub
pop
cwd
ret
inc
and
inc
pop
ja
sub
mov
mov
dec
pusha
adc
adc
sar
inc
dec
movs
add
pusha
push
cmp
rol
mov
push
in
inc
leave
(bad)
cmc
jnp
mov
arpl
cmc
pop
sub
sub
pop
test
repnz
xchg
adc
into
pop
test
xchg
aaa
xor
adc
sbb
call
xchg
mov
mov
das
mov
mov
fsubr
imul
adc
or
cmp
loop
pop
push
fisubr
jmp
or
jb
add
adc
sub
push
shl
into
mov
jnp
inc
nop
push
pushf
mov
mov
jl
je
ins
les
lock
fld
jge
mov
push
mov
jle
xor
or
aaa
push
neg
ret
jne
sbb
push
int
fcom
and
sbb
inc
nop
jne
imul
add
sbb
xchg
pop
pop
mov
jae
push
push
xor
inc
xor
mov
sbb
sub
pop
mov
lods
push
push
push
or
dec
and
out
push
xor
or
fwait
add
sub
and
lock
dec
int
sbb
daa
bound
imul
outs
and
sub
jb
test
xor
retf
rol
pop
popa
inc
sub
and
pop
test
push
sub
daa
inc
or
mov
rcl
cmp
push
dec
jnp
ret
push
cwde
add
retf
mov
loopne
sub
adc
test
adc
cmp
mov
mov
xor
test
stos
sti
push
rol
ror
jnp
sahf
add
(bad)
in
daa
push
in
or
cmp
add
pop
cmp
cmp
mov
js
or
lea
loop
sbb
fnstcw
push
push
cmp
sbb
add
xchg
add
cld
push
or
je
pop
cmp
inc
shl
adc
adc
fwait
adc
adc
cmps
and
adc
add
inc
pop
xchg
popa
pop
out
push
xchg
jecxz
mov
nop
pop
mov
je
cmps
jne
ret
iret
add
jl
mov
cmp
or
in
div
je
or
je
or
sub
dec
call
das
adc
sbb
cmp
ficom
push
or
add
add
sbb
sahf
sbb
pop
jnp
dec
jnp
das
and
jmp
cmp
adc
rcl
adc
sub
adc
add
mov
inc
mov
xchg
jo
push
dec
lock
cli
mov
cmp
call
jmp
lea
test
(bad)
cld
lds
pushf
stos
inc
mov
adc
add
sbb
or
repz
std
dec
cmp
jmp
and
out
adc
dec
fsubr
adc
add
add
inc
push
sub
adc
das
(bad)
cli
cmp
sbb
je
ret
jle
xchg
sbb
pop
aaa
inc
dec
je
sub
sbb
sub
or
xor
adc
cld
inc
mov
sbb
fstp
shr
shl
mov
ret
push
adc
and
int3
pop
fidivr
movs
add
ins
adc
stc
xor
pusha
pushf
adc
cmp
push
loopne
test
mov
push
test
jnp
(bad)
and
dec
jne
cmp
cmp
hlt
jne
push
or
mov
pop
and
fiadd
lds
and
mov
test
pop
fsub
js
add
xor
out
je
push
xchg
rcl
jmp
cmp
dec
dec
add
mov
jo
push
push
push
or
or
xchg
call
loopne
pop
jo
or
mov
sub
adc
xchg
xchg
je
push
outs
cmp
or
pusha
call
dec
rol
not
fdivr
xor
mov
sub
add
sbb
xchg
pop
cmp
mov
mov
xchg
add
ret
inc
in
push
push
or
mov
ds
jb
inc
leave
push
fs
and
jb
in
shl
adc
cmp
mov
(bad)
add
out
repz
jge
mov
mov
mov
push
leave
js
lods
call
xor
xor
sub
in
adc
pop
mov
int
push
ret
pop
cmc
xchg
out
cmps
fsubr
fcom
or
or
(bad)
jmp
jbe
push
push
or
adc
add
mov
fdivr
xor
add
xchg
xchg
mov
fimul
mov
mov
inc
test
dec
fs
les
in
xchg
icebp
xor
sub
add
neg
test
dec
inc
sbb
mov
and
cld
lods
or
sbb
fiadd
ss
mov
mov
test
bound
adc
imul
or
adc
push
cmp
ins
sbb
test
mov
pop
xor
push
movs
push
iret
pop
fiadd
jg
sahf
and
or
mov
push
xor
test
adc
mov
lea
out
inc
loop
js
cmp
stos
jne
mov
or
push
xor
xchg
loopne
repnz
pop
out
xchg
sub
jae
dec
ret
sti
call
icebp
inc
in
div
or
sbb
inc
or
sbb
pop
stos
inc
pop
mov
jo
or
enter
push
in
sub
sub
mov
test
outs
in
push
shr
bound
pusha
dec
sub
dec
leave
outs
loope
fisub
adc
inc
mov
pop
mov
or
mov
outs
xchg
mov
cmp
loop
dec
lahf
rol
test
pop
push
add
and
sub
icebp
cmps
rol
push
push
loope
inc
pusha
push
xchg
cmp
sbb
or
inc
push
jbe
(bad)
mov
daa
xchg
sahf
mov
sub
daa
push
mov
dec
shr
imul
inc
or
fabs
pop
mov
and
xchg
loopne
int3
cmps
mov
pop
add
inc
jp
push
sbb
or
call
jle
pop
push
inc
leave
je
in
pop
rcl
add
cmp
fdivr
es
loopne
mov
jo
cmps
ret
xchg
push
sub
dec
sahf
call
repz
inc
xor
push
outs
int
xor
aaa
divps
jo
aaa
in
mov
inc
push
dec
cmp
hlt
cld
inc
bound
or
cmps
or
mov
mov
adc
adc
mov
repnz
pop
or
or
or
fwait
push
sbb
mov
cmp
scas
add
mov
(bad)
or
xchg
add
push
mov
sbb
mov
enter
xchg
mov
mov
adc
or
arpl
adc
test
push
add
push
sub
adc
out
test
inc
or
push
and
mov
popa
sub
popa
daa
cmps
mov
adc
inc
or
jne
cmps
ins
adc
xchg
pop
int3
xchg
xchg
shr
enter
je
ds
clc
leave
sub
inc
cmpps
pop
scas
mov
ret
or
test
sbb
(bad)
cmp
inc
push
ret
xor
fisub
mov
jnp
into
fcomi
sub
pop
or
ss
cwde
dec
das
mov
cmp
mov
xor
enter
jne
xor
add
push
in
push
cmp
and
push
dec
adc
call
test
nop
adc
jp
cmp
xchg
inc
cmc
jns
adc
jge
lock
cmp
cmp
or
sub
sbb
xchg
inc
das
push
sbb
pop
or
pushf
std
and
adc
iret
js
les
add
aad
and
pop
enter
adc
call
push
xor
mov
and
cmp
cmps
pop
add
in
xor
xchg
mov
adc
lods
sub
inc
and
fist
and
not
add
pop
jno
sub
inc
clc
inc
movs
into
jle
push
jecxz
lahf
add
pop
retf
in
call
fs
adc
sahf
rcr
sbb
test
sbb
test
sub
rol
pop
jb
nop
push
sub
add
gs
push
fs
mov
outs
mov
push
push
mov
xor
adc
sub
(bad)
xor
sub
and
sub
adc
out
xchg
lods
das
mov
fsubr
fmul
pop
lds
out
pop
out
dec
mov
cs
in
sbb
in
cmp
push
pop
cmp
inc
lock
xchg
jmp
lock
jle
jmp
ret
fcomp
inc
jnp
sbb
jg
cmp
adc
pop
gs
ins
out
pusha
xchg
lock
add
sbb
adc
jae
iret
outs
dec
and
lock
dec
add
mov
push
repnz
pusha
je
rol
pop
add
data16
je
cmp
je
jmp
aad
adc
mov
in
dec
mov
mov
add
(bad)
dec
adc
push
or
sti
and
inc
in
inc
shl
popa
hlt
das
mov
in
dec
dec
push
repnz
pop
je
add
outs
xchg
stos
je
cmp
cmp
sbb
cli
fsub
data16
xchg
or
jecxz
into
fsub
cld
lods
inc
cmps
push
ins
mov
add
and
mov
leave
inc
push
jo
push
add
add
outs
jmp
cmp
pop
adc
adc
outs
cmp
imul
mov
push
data16
push
pop
mov
mov
inc
mov
pushf
cld
inc
adc
and
jo
mov
or
cld
ins
fs
cmp
std
out
jl
pop
nop
add
cmc
adc
nop
retf
and
pop
and
mov
mov
adc
and
push
arpl
fucom
adc
or
(bad)
fcom
dec
or
je
adc
mov
scas
sbb
jge
push
xchg
out
push
pusha
add
and
add
and
adc
pushf
sbb
jmp
mov
sub
sub
pop
add
lea
xchg
movs
loope
xchg
aaa
or
js
rcl
jle
adc
sub
jae
and
or
movs
cmp
xor
and
and
cld
and
push
jg
pop
cmp
xchg
jg
xor
add
xor
sbb
ret
retf
nop
add
fs
and
ins
push
dec
and
ss
les
enter
sub
add
lahf
out
cmp
jb
in
push
daa
jae
sti
je
neg
and
push
(bad)
push
adc
dec
push
xchg
push
mov
mov
dec
neg
dec
clc
call
stos
inc
pop
add
jmp
sbb
js
fst
dec
or
adc
or
mov
repz
ret
movs
test
pop
dec
adc
sub
push
add
sbb
cmp
aas
fsub
cdq
(bad)
push
sbb
mov
sub
jb
psubsb
adc
push
xchg
cmp
fistp
(bad)
jl
(bad)
and
cld
or
sbb
(bad)
cmps
lea
xchg
sbb
fmul
loopne
cmp
adc
fnstenv
and
xor
fwait
dec
je
cdq
xor
addr16
into
das
xor
mov
mov
jp
in
pop
call
in
mov
in
and
jge
rcr
test
and
or
or
dec
mov
(bad)
ficomp
pusha
mov
rol
xor
adc
sub
mov
fld
inc
jne
cmc
push
mov
pop
xor
loope
imul
cmc
cmp
(bad)
push
sbb
popf
add
sub
xchg
mov
mov
sbb
add
adc
add
mov
int3
sbb
jne
xchg
push
rol
pop
jge
pop
adc
or
inc
xlat
aaa
add
sbb
loopne
dec
and
loop
scas
pop
pusha
sub
sbb
pop
clc
inc
mov
rcr
(bad)
scas
outs
cmp
mov
out
or
add
mov
scas
shl
pop
push
lock
lock
dec
xlat
sbb
rcl
or
retf
cmp
push
mov
rol
adc
(bad)
mov
(bad)
push
xchg
and
add
loop
push
leave
arpl
push
cmp
call
add
shl
mov
xlat
lahf
adc
jl
scas
gs
call
push
shl
push
mov
add
cmp
jne
sbb
ja
mov
clc
or
add
push
scas
mov
add
cmps
dec
jmp
sbb
test
or
push
push
mov
arpl
xchg
lds
push
inc
scas
or
or
cmp
xor
sub
call
jg
js
dec
sub
push
and
or
jmp
outs
je
xchg
repz
call
mov
and
jge
loope
out
enter
je
lods
test
out
(bad)
aam
adc
xchg
adc
xchg
cmp
les
mov
pop
push
shr
ss
xor
pop
jo
cmps
add
or
jbe
clc
sub
jge
adc
jo
or
sub
pop
mov
enter
das
fcom
mov
dec
es
sti
call
loop
mov
lds
and
cmps
cmc
and
imul
ja
jg
mov
movs
xor
adc
jle
or
adc
sub
or
sbb
jp
add
lock
ret
xor
or
es
ror
repz
push
(bad)
fstp
add
mov
cmp
jbe
shl
nop
pop
xor
leave
push
xor
nop
pop
or
and
add
xchg
fnstenv
lods
cmp
sbb
add
mov
add
adc
mov
add
dec
dec
dec
pop
lods
sbb
sar
adc
popa
leave
xchg
nop
mov
nop
mov
or
push
or
imul
sbb
push
dec
stc
add
test
push
call
ins
dec
sub
jo
add
mov
inc
lahf
mov
push
cmp
push
pop
sub
and
or
gs
jp
test
mov
shl
lock
sub
sar
shl
repnz
(bad)
pusha
test
loop
inc
jne
fild
fs
mov
push
aad
repz
lock
test
push
shl
inc
adc
inc
mov
aas
ja
push
cld
adc
mov
push
adc
add
mov
adc
add
out
lock
fwait
mov
jne
and
nop
inc
and
test
mov
sbb
jnp
shr
imul
sub
jnp
or
lahf
cld
je
nop
out
xor
jbe
jb
pop
xor
sbb
mov
ins
sbb
sbb
or
and
xchg
repnz
jle
cld
push
push
fsubr
fwait
sub
sbb
icebp
push
sub
shl
(bad)
iret
loopne
push
pop
ds
push
cmp
lea
scas
push
push
loopne
dec
add
mov
in
mov
rol
push
repnz
popf
stos
add
add
mov
mov
ficom
icebp
jo
and
dec
dec
adc
leave
mov
rcl
loop
cmp
xchg
and
push
sbb
mov
shl
neg
mov
in
jmp
sbb
push
add
add
or
inc
jecxz
aam
leave
sbb
xor
jb
mov
arpl
stos
xor
imul
push
dec
stos
rcr
imul
push
in
inc
ror
and
inc
(bad)
test
inc
shl
dec
add
and
cmp
rcr
(bad)
sub
xchg
mov
sbb
sbb
call
fcom
lods
test
stc
dec
inc
arpl
stc
jl
out
and
mov
and
dec
add
push
lds
daa
or
push
adc
scas
pusha
push
imul
push
ret
cmp
sub
aaa
test
add
mov
jl
fwait
dec
ins
add
push
pop
ret
retf
ret
retf
push
test
aaa
mov
or
jns
sbb
add
test
or
add
cmp
push
mov
xor
sahf
ret
ss
push
and
add
jp
xchg
xor
out
aad
cmp
test
push
hlt
test
cmp
jecxz
into
les
(bad)
icebp
push
cmp
jp
rol
dec
inc
or
lea
cld
push
imul
mov
or
or
lock
sbb
or
sbb
or
pop
js
mov
adc
pop
sbb
hlt
adc
int3
sbb
sub
or
imul
mov
or
xchg
aam
adc
jmp
stos
rcr
stos
jl
push
clc
test
ffree
xor
jge
xchg
pop
fist
call
clc
not
test
pop
jbe
ins
in
inc
pop
add
mov
inc
and
lea
test
mov
push
jmp
imul
je
inc
or
xchg
icebp
jbe
adc
cmp
das
rcl
leave
nop
sbb
cmp
adc
pusha
lds
or
jno
shl
sbb
popa
(bad)
inc
xor
lock
cmp
xchg
aaa
das
cdq
push
add
inc
push
inc
inc
sti
jl
test
jg
cmp
jg
sahf
pop
mov
or
ret
mov
push
cdq
pop
daa
sbb
ret
mov
aas
clc
fistp
mov
push
add
dec
add
jmp
add
rcl
aaa
inc
sub
push
imul
dec
popa
jbe
out
adc
push
es
xor
and
add
icebp
mov
xchg
ins
addr16
mov
movs
jge
sbb
shl
push
fdiv
or
jns
pop
sub
xor
xor
cmp
cmps
mov
sub
inc
dec
fs
mov
push
data16
and
ret
push
sti
jecxz
push
mov
or
mov
pop
jg
or
inc
add
cmp
ror
sub
cdq
mov
mov
js
mov
dec
jno
jne
pop
shl
add
bound
dec
outs
adc
movs
dec
xor
pushf
push
mov
in
pop
xchg
and
popf
push
cmp
(bad)
scas
ins
cdq
and
push
mov
and
cwde
enter
sar
push
pop
jp
enter
jmp
cmp
push
fcmovb
cmp
ss
sbb
lock
test
popf
and
cmp
and
or
push
mov
push
in
jo
das
push
lahf
add
call
mov
outs
out
xchg
pushf
mov
mov
inc
and
lods
pop
test
and
xchg
mov
xchg
cmc
or
cmp
push
mov
push
mov
xchg
add
loope
ffree
lods
inc
pusha
mov
out
xor
inc
mov
dec
sub
and
mov
xchg
out
test
jge
je
pop
cmp
inc
jl
popf
sub
out
pop
sub
push
cmp
or
aaa
mov
clc
cmp
rep
add
xor
popf
mov
pop
or
dec
and
add
ins
jmp
sub
jae
sbb
inc
pushf
pop
js
push
jae
sbb
fwait
sub
(bad)
mov
adc
pop
push
daa
pop
or
mov
push
mov
mov
push
push
mov
push
imul
mov
pop
xchg
adc
inc
xor
push
adc
xor
adc
pop
popa
or
add
xor
mov
mov
imul
cmp
or
data16
xchg
lahf
push
xor
push
test
sub
test
scas
jno
xchg
adc
xchg
xchg
mov
dec
rol
push
iret
test
adc
xor
das
(bad)
mov
int3
jae
sbb
shl
lock
mov
push
push
push
jne
inc
popa
mov
pop
rcr
and
and
sbb
jbe
jle
call
hlt
lock
xchg
cdq
test
inc
mov
push
or
sbb
dec
push
push
shr
push
test
loope
mov
xor
pop
cs
adc
jmp
add
outs
push
fmul
in
gs
xlat
mov
lds
push
retf
mov
cmp
out
mov
add
icebp
add
rol
inc
push
add
cmp
xor
cmp
jne
call
adc
lea
push
inc
scas
push
loope
fadd
adc
inc
and
loopne
rcl
cmp
dec
xchg
retf
adc
pop
sbb
test
adc
lods
add
dec
nop
addr16
xlat
cmps
sub
add
add
clc
adc
jbe
sbb
fisubr
call
xchg
add
psrad
sbb
mov
mov
mov
add
dec
ror
and
out
test
rcl
test
pusha
or
push
sldt
lahf
or
xor
dec
adc
mov
inc
cmp
xor
test
xor
add
or
push
push
jmp
sbb
rol
add
popf
add
or
add
and
cmp
cmps
add
test
int
jo
and
sub
or
mov
add
xchg
sbb
push
mov
xlat
(bad)
jb
xchg
add
push
or
imul
ret
sub
rol
ins
pop
add
sahf
ja
test
mov
xor
adc
cmp
cmp
out
fs
xchg
push
and
cmp
mov
and
jg
cli
clc
pusha
inc
popf
cs
ret
adc
push
add
xor
jmp
cmp
int
mov
aad
and
das
retf
push
ret
jmp
mov
push
push
mov
sub
or
add
jl
jno
xor
push
mov
inc
or
jle
fistp
or
jbe
mov
sbb
iret
jne
or
es
add
icebp
push
xchg
cmp
jge
add
enter
or
xchg
xchg
adc
mov
aaa
test
inc
jmp
stos
push
(bad)
mov
jo
loope
stc
(bad)
jne
sub
outs
sar
ror
les
pop
jp
cmp
shl
adc
mov
xor
retf
pusha
iret
jmp
xchg
jmp
dec
hlt
jae
adc
mov
jg
sub
ret
movs
stos
in
adc
icebp
retf
add
jnp
pop
adc
popa
loop
shl
inc
inc
clc
add
push
inc
(bad)
mov
les
inc
sub
jb
daa
(bad)
jmp
adc
and
data16
pop
add
jecxz
mov
std
nop
mov
sub
push
sub
sbb
xor
loopne
jae
add
adc
add
dec
sti
xchg
ins
push
xor
mov
pop
(bad)
enter
pop
enter
adc
cmp
push
and
mov
xchg
add
and
sbb
sbb
push
ds
js
mov
adc
daa
or
cmp
(bad)
and
cmp
cmp
add
dec
and
ftst
nop
inc
or
mov
outs
imul
adc
push
jb
push
or
or
ins
bound
xchg
ins
lahf
sbb
cmp
jl
and
imul
jb
ins
cmp
push
adc
popa
movs
xchg
sbb
pop
jecxz
cld
or
pop
arpl
pusha
loop
mov
mov
cmps
jne
outs
inc
jbe
inc
xor
dec
pushf
je
and
cmp
or
outs
dec
pop
sub
jbe
pop
rcl
shl
retf
mov
gs
sbb
leave
nop
js
inc
adc
rol
loopne
jmp
inc
adc
cmp
push
inc
aas
and
lahf
sbb
and
jb
sbb
and
and
sbb
sbb
cmp
jg
jb
sbb
sub
sbb
sbb
movs
sbb
sub
xchg
mov
cs
or
xor
cmps
mov
in
pop
cmp
inc
push
std
ins
leave
push
jne
cmp
jmp
mov
mov
shr
lea
and
leave
in
into
cmp
cld
or
std
push
jae
mov
adc
pop
add
sti
fisubr
or
sbb
jbe
shl
adc
sbb
sbb
xchg
scas
test
and
push
push
loope
sub
jne
hlt
nop
xor
adc
adc
mov
jne
arpl
cmp
mov
popa
je
push
fsubr
mov
sub
adc
outs
cmp
dec
sub
arpl
mov
xchg
mov
sbb
lds
dec
fld
or
mov
in
loop
fimul
rol
enter
ret
mov
shr
aam
js
mov
push
mov
test
sbb
jo
pop
and
icebp
jae
stos
pop
hlt
mov
jb
mov
add
fs
ja
push
mov
or
pop
push
cmp
sub
mov
mov
loopne
cmp
mov
pop
add
inc
or
ins
add
mov
adc
pop
lock
mov
push
add
xchg
jmp
inc
call
(bad)
push
push
pusha
pop
leave
(bad)
loopne
adc
inc
jbe
cmp
sbb
fs
pushf
sub
movs
(bad)
iret
push
out
jecxz
stc
lock
(bad)
adc
add
and
out
pushf
xchg
add
jno
loope
es
out
pop
or
adc
ins
push
clc
and
in
sbb
cmp
push
(bad)
or
pop
or
loopne
call
es
adc
and
fisttp
add
je
xchg
and
jmp
cmp
retf
jl
push
cmp
popf
jmp
inc
push
je
sub
mov
xor
adc
out
retf
push
retf
sar
mov
mov
or
js
test
push
(bad)
pop
pop
cmp
pop
aas
pop
sbb
add
sbb
xchg
je
inc
lahf
sub
adc
add
jne
test
mov
add
loop
mov
mov
mov
add
fmul
sub
test
mov
or
mov
and
pop
lock
movs
pusha
or
add
mov
cmp
mov
push
pop
inc
jp
inc
xor
xor
sub
inc
push
add
sub
pop
lock
rol
ds
jecxz
cld
nop
aam
arpl
fwait
popf
cmp
push
in
cmc
call
jg
dec
and
inc
or
loopne
outs
adc
lea
push
mov
cmp
mov
push
(bad)
rcl
rcl
jae
sbb
shl
les
aam
mov
jmp
jl
jo
out
jnp
dec
push
xor
and
imul
(bad)
in
sar
je
cmc
(bad)
adc
fadd
xchg
xor
stc
stos
xlat
aad
fist
inc
and
js
mov
test
pusha
adc
push
push
dec
sbb
jmp
inc
adc
call
push
xor
fild
mov
adc
mov
dec
adc
(bad)
jbe
jmp
lahf
mov
mov
test
sub
dec
or
inc
mov
(bad)
ins
ja
sbb
and
pop
test
push
adc
mov
push
add
jo
mov
mov
popaw
inc
cmps
loopne
ret
int
aaa
add
adc
sub
mov
pop
or
dec
loope
scas
ins
mov
std
adc
push
aaa
rcl
cmp
loopne
lahf
pop
add
sub
sub
pusha
idiv
jge
mov
pop
push
push
or
(bad)
in
(bad)
fcom
jmp
push
cmp
stos
adc
mov
inc
sbb
dec
adc
popa
sub
je
jle
call
push
push
nop
(bad)
mov
aas
push
ss
push
es
fwait
add
call
mov
jb
icebp
retf
inc
scas
clc
or
and
shl
outs
adc
shl
nop
out
enter
lods
add
mov
stc
jae
add
dec
mov
ret
pushf
and
dec
xor
and
xchg
xchg
mov
inc
or
lock
pop
xor
pushf
push
in
mov
ret
or
and
pop
xor
push
push
sbb
loopne
shl
pushf
and
xor
add
pop
ss
mov
jmp
sar
cmp
xor
rcr
and
push
add
imul
push
ins
push
push
lea
test
(bad)
jo
push
mov
imul
adc
mov
sbb
mov
add
popa
int3
sub
add
jnp
and
rol
or
and
or
icebp
dec
pop
xchg
cmp
or
test
cmp
and
bound
loope
xchg
inc
pop
xchg
aam
sbb
xor
pusha
push
clc
jo
daa
push
retf
ret
out
loope
movs
cmps
sbb
add
mov
lods
mov
sbb
inc
sbb
jno
push
stos
mov
jmp
push
dec
in
xor
mov
mov
mov
call
dec
loopne
aam
cmps
xor
jbe
push
sub
inc
pop
push
mov
(bad)
push
outs
mov
and
cli
mov
push
add
push
push
pop
mov
xor
inc
pop
xchg
xor
sbb
add
call
les
(bad)
xchg
cmp
ror
xchg
adc
and
shr
xor
push
pusha
xor
xchg
lahf
and
inc
dec
pop
jne
inc
scas
leave
(bad)
adc
add
push
fbld
lahf
and
push
inc
or
push
push
mov
mov
and
nop
sub
mov
mov
jmp
dec
mov
pushf
ss
in
repz
shl
bound
adc
add
adc
pop
sbb
pushf
test
xor
and
addr16
pop
repz
test
and
push
adc
push
ror
push
cmc
or
pop
mov
and
inc
test
dec
clc
add
js
xchg
push
pop
xor
pop
(bad)
or
adc
sbb
movs
jmp
xchg
ss
int
or
rcl
push
push
and
hlt
inc
mov
pop
shl
push
cdq
inc
add
mov
and
add
jno
in
pop
dec
mov
add
ss
add
adc
stc
outs
arpl
cmps
jecxz
sbb
xlat
pop
cmp
or
mov
push
mov
cmp
pop
ss
mov
test
call
add
js
push
xor
enter
sub
jmp
in
pop
adc
mov
and
(bad)
sub
mov
scas
inc
pop
xor
xor
jmp
push
push
sub
push
loope
xor
or
jno
movs
stos
loope
dec
pop
mov
test
in
sbb
cmp
js
push
or
dec
in
pop
or
call
inc
jns
bound
popf
mov
dec
retf
jmp
adc
imul
cmp
test
adc
push
icebp
nop
push
push
rol
popa
cmp
nop
push
push
aad
and
xor
movs
hlt
loopne
pusha
aam
or
or
sbb
add
add
mov
enter
or
rol
jo
mov
and
int
popf
pop
ins
inc
imul
movaps
push
mov
aad
das
add
pop
inc
clc
mov
adc
mov
and
xchg
inc
pushf
sbb
jo
rcr
push
push
pop
lea
jmp
mov
nop
xchg
cwde
pushf
add
adc
lahf
sbb
pusha
cld
sbb
lea
sub
push
stos
sub
test
pop
mov
fmul
rol
mov
or
mov
pop
inc
mov
mov
into
sbb
movs
inc
fimul
mov
movs
rcr
push
mov
cmp
int
jmp
movs
lods
jmp
or
sbb
cmp
in
and
mov
lea
mov
cmc
cmp
dec
xor
jle
clc
jnp
sbb
mov
push
loopne
cs
dec
or
fmulp
push
mov
mov
push
mov
sbb
push
push
retf
mov
mov
jmp
scas
outs
jecxz
popa
inc
push
pop
mov
cli
mov
in
mov
mov
dec
add
nop
xchg
dec
sub
mov
xor
or
cmp
mov
sub
mov
xchg
mov
sti
pop
inc
sbb
(bad)
(bad)
addr16
bsr
adc
shl
mov
fdivr
lock
inc
push
pop
add
mov
mov
cmp
ss
adc
loopne
or
and
mov
stos
cmp
sub
lods
sub
add
push
adc
rol
adc
xor
mov
je
push
stos
add
fcmovnb
int
mov
fwait
dec
fadd
adc
push
push
jns
outs
xlat
test
mov
push
push
repz
js
ds
mov
sbb
ds
je
shl
push
lock
push
movs
ds
adc
jmp
sbb
hlt
and
jle
mov
in
pop
lock
or
icebp
push
sbb
xlat
lods
dec
jne
sub
xlat
adc
aam
mov
or
jo
or
clc
repnz
adc
mov
fnstenv
ins
out
loope
jl
(bad)
jmp
add
xchg
jne
cmp
pushf
daa
shl
mov
div
mov
fcom
cmp
fabs
or
mov
dec
and
hlt
(bad)
loope
lahf
cmp
mov
push
retf
push
inc
je
mov
outs
cwde
cmp
lock
stos
dec
cmp
cmp
enter
test
fs
lock
sbb
sbb
pop
pushf
imul
xchg
or
repz
add
xor
xchg
push
add
nop
sub
retf
sub
fwait
pop
push
mov
push
imul
pop
push
mov
std
push
sub
dec
push
adc
inc
inc
or
lock
fisttp
test
stos
push
cwde
pop
cmp
xor
push
pop
dec
in
push
hlt
add
sub
lock
dec
cmps
jo
jae
inc
ins
lea
cmp
cmp
adc
mov
add
sbb
or
or
out
cmp
sbb
test
cli
sbb
push
sbb
jbe
push
dec
jecxz
sbb
sti
lea
add
sbb
imul
aam
test
(bad)
or
mov
dec
add
xor
mov
sbb
mov
jnp
push
ret
(bad)
xlat
cmps
xor
lock
pop
pop
sub
leave
cmp
push
lahf
call
dec
and
das
mov
jae
fiadd
adc
fiadd
and
fidivr
jno
jo
sub
sub
push
in
inc
cmp
leave
imul
test
inc
fdiv
cmp
fsubr
ret
popa
push
outs
add
lods
sti
cmp
push
adc
(bad)
push
sub
shr
(bad)
fsub
fdiv
push
lods
adc
push
pop
sub
mov
loopne
add
les
loope
lahf
fild
or
pusha
add
inc
clc
pop
lock
rol
push
mov
and
adc
or
je
mov
or
mov
adc
mov
add
scas
popf
mov
mov
push
test
cmp
xchg
ret
or
inc
push
or
cmp
jb
popf
loopne
sbb
int3
retf
cmp
ss
repnz
dec
mov
push
loop
and
ja
jns
lock
adc
mov
push
mov
mov
mov
adc
mov
or
rcl
pop
inc
cmp
movs
test
(bad)
popf
dec
pop
jp
cmps
ss
mov
lods
pusha
add
or
sub
lock
cmp
sbb
inc
mov
sahf
pop
sbb
fwait
pop
int3
xchg
xchg
cmps
or
push
xchg
xchg
jns
cmps
cmp
pop
xchg
pop
push
or
hlt
mov
xor
push
enter
das
xor
cmp
pop
std
pusha
fdiv
outs
jp
je
add
adc
je
data16
test
xchg
inc
mov
push
sar
ret
jg
add
adc
retf
jbe
fnstsw
add
push
jge
push
jo
repz
jle
xchg
(bad)
push
cmp
sbb
(bad)
jp
outs
cmp
pop
(bad)
(bad)
ja
mov
sbb
xchg
sbb
cmp
in
sub
je
push
cmps
and
sahf
ror
mov
mov
or
sbb
sbb
jns
nop
sub
data16
jmp
inc
jo
pop
pop
jns
add
(bad)
addr16
and
add
mov
lock
fcmove
add
addr16
mov
and
movs
push
or
jno
mov
aam
sub
scas
mov
or
sti
jl
lods
(bad)
retf
jmp
pop
cmps
push
push
lods
push
leave
fs
add
xchg
push
mov
mov
mov
fwait
jb
rcr
(bad)
test
mov
jle
mov
mov
or
sar
and
sub
sbb
pop
ret
(bad)
mov
push
rcr
daa
mov
mov
or
add
test
(bad)
inc
push
sbb
ins
test
adc
pusha
push
test
scas
(bad)
push
fisubr
mov
mov
and
jl
pop
ret
jge
add
loopne
adc
(bad)
add
inc
movs
xor
stos
add
retf
in
jns
pop
dec
and
push
add
scas
push
fcomp
adc
mov
in
and
test
dec
xchg
test
jbe
dec
mov
and
adc
and
dec
mov
add
jns
sbb
or
adc
push
mov
xchg
xchg
lds
adc
mov
push
(bad)
(bad)
test
jo
and
xchg
push
into
je
pusha
in
scas
xchg
out
rcr
dec
sub
mov
mov
nop
(bad)
cdq
movd
test
push
push
test
lods
lea
test
add
addr16
pop
fnstcw
jle
inc
inc
call
and
pop
add
mov
mov
and
(bad)
adc
xor
cmc
fld
and
mov
pusha
popa
mov
or
and
test
js
rcr
lea
push
xchg
ins
mov
mov
jg
and
dec
adc
push
adc
add
jo
fwait
cmp
repnz
mov
add
xor
pop
xchg
stos
nop
imul
add
push
cmps
fld
inc
aas
mov
test
loopne
dec
push
popa
jne
mov
cmp
pop
pop
jl
push
jno
gs
hlt
push
into
dec
cmc
or
popa
imul
xchg
outs
and
xchg
xlat
mov
imul
je
mov
ins
call
mov
ss
jno
inc
inc
adc
je
(bad)
scas
mov
cmp
inc
test
xchg
and
push
fwait
shr
ror
xor
pop
dec
add
mov
jge
and
inc
push
stos
push
add
cmp
pop
mov
inc
out
xor
add
cmp
daa
add
xchg
mov
out
push
xor
push
call
inc
in
cmp
imul
pop
adc
add
inc
fld
xor
jle
add
jae
cmc
mov
adc
pop
inc
or
push
pusha
and
cmp
xor
mov
test
fdivr
lea
lds
add
cmp
dec
xor
loop
add
shr
add
ficom
sbb
adc
and
loope
ror
(bad)
push
pop
jl
ret
shr
cmp
jbe
add
jmp
add
pushf
inc
dec
or
test
ret
and
dec
loop
inc
dec
loopne
jg
loopne
jl
mov
add
sub
sub
adc
mov
mov
popf
call
dec
sub
push
xor
mov
enter
dec
or
or
call
sar
mov
add
xchg
test
and
ror
das
fst
mov
gs
rcl
or
or
mov
loop
and
aaa
cmps
mov
mov
test
fst
cdq
movs
mov
push
mov
jl
dec
fcomp
mov
loopne
fcomp
xor
popf
add
add
dec
inc
adc
mov
adc
jo
fldenv
fdiv
xor
daa
push
or
(bad)
pop
aaa
xor
jb
push
push
push
xor
push
shl
out
mov
aad
nop
xchg
loope
arpl
or
adc
outs
cmp
jg
and
stos
jl
cmp
je
pop
neg
xor
mov
or
push
shr
rcl
das
sbb
scas
cmp
mov
and
sbb
push
add
adc
xchg
mov
cmp
ins
ret
pop
xchg
and
or
jno
push
imul
mov
scas
dec
xchg
pop
push
call
mov
bound
sahf
inc
les
repnz
in
or
pop
mov
pop
ds
add
mov
repz
push
out
sub
lea
imul
adc
cwde
pop
mov
mov
and
push
push
add
fst
fnsave
push
or
shl
loope
cdq
jmp
ins
add
add
adc
adc
or
leave
or
add
loope
inc
mov
(bad)
sar
cmp
int3
xchg
xor
ins
cs
mov
pusha
je
pushf
push
push
sub
int3
xchg
add
add
sbb
dec
enter
retf
(bad)
out
mov
sbb
in
lds
adc
jmp
shl
mov
aam
mov
lods
xchg
cmps
enter
adc
dec
sub
xor
outs
test
mov
push
repz
push
jl
dec
jae
(bad)
fcom
mov
fcmovnb
inc
jnp
in
mov
test
in
inc
imul
lods
xchg
mov
push
fcomp
in
test
pop
push
push
inc
mov
adc
ss
repnz
adc
mov
push
(bad)
lahf
fistp
sbb
popa
popa
shl
mov
add
inc
fsubr
aam
adc
sbb
por
aaa
pop
and
jmp
movs
shl
fld
add
add
ja
lods
pop
sub
jo
xchg
movups
pop
mov
adc
push
test
(bad)
sub
and
ret
jbe
push
push
xor
sub
mov
es
push
pop
inc
(bad)
push
adc
or
cmp
pop
ins
adc
sbb
pushaw
cwde
es
dec
pop
outs
cmp
fcmovnb
sub
inc
adc
add
mov
cmp
lahf
jb
je
push
addr16
sub
inc
push
(bad)
dec
das
mov
or
adc
int3
(bad)
inc
ret
pop
inc
or
sbb
movs
fabs
or
push
mov
mov
in
or
add
xchg
dec
xor
aaa
and
jns
pop
xchg
jecxz
scas
or
mov
loopne
cmc
and
lea
stos
mov
mov
push
sti
push
add
or
jg
jmp
int
push
mov
cmp
cs
inc
and
jmp
sub
ret
retf
push
add
and
jmp
jge
and
rol
and
or
xchg
sub
mov
pushf
xor
cmp
mov
sar
rcr
test
mov
dec
rol
mov
mov
outs
or
test
mov
inc
and
fist
inc
xor
mov
add
xchg
leave
cmp
ins
popf
mov
add
ins
cli
push
ins
and
jp
sbb
and
adc
mov
icebp
mov
pop
sbb
inc
mov
retf
neg
inc
or
xchg
or
jnp
arpl
pop
sbb
data16
lock
push
cmp
in
or
stos
jo
dec
push
mov
sub
imul
pop
jns
inc
jecxz
cmp
fwait
mov
pop
div
pop
cmp
sbb
add
mov
scas
sti
test
call
aam
push
cmp
xor
(bad)
pop
loope
rcl
push
(bad)
cdq
xor
les
sbb
sub
mov
into
pop
loop
pop
jno
mov
or
iret
cmp
cli
pop
push
add
add
pushf
shl
pop
je
inc
pop
loopne
fmul
add
mov
add
or
cmpps
ret
fst
mov
les
addr16
pop
pop
or
xchg
jo
mov
pop
shr
mov
mov
popa
jl
jbe
jl
or
test
sahf
xchg
pop
sahf
ret
rep
mov
dec
pop
mov
sub
xchg
adc
lods
addr16
inc
les
call
sbb
dec
sbb
rol
push
add
loop
push
xchg
and
jl
ret
jle
mulps
adc
aaa
loopne
movs
push
call
ins
cli
dec
xchg
jno
jle
push
pop
xchg
mov
cmps
push
cmps
cmp
dec
jbe
push
cmp
mov
push
mov
mov
jno
ret
addr16
inc
pop
cmp
stos
cmp
out
xor
pop
pusha
pusha
loopne
(bad)
leave
retf
and
add
xor
inc
jb
jmp
push
bound
sbb
imul
mov
arpl
imul
inc
adc
inc
xor
imul
mov
cdq
repnz
pop
adc
add
dec
and
cdq
jno
hlt
xor
pushf
les
mov
rcr
mov
ins
mov
or
inc
imul
dec
push
or
and
inc
inc
cmp
add
fs
stos
icebp
test
scas
add
movs
adc
push
add
lods
adc
pop
pop
mov
cmp
or
mov
cwde
fwait
(bad)
mov
test
mov
add
test
dec
lahf
nop
xor
rcl
(bad)
ins
xlat
add
nop
(bad)
nop
sub
lods
mov
les
or
pop
pop
pop
push
shl
int3
push
shr
jne
fcomp
add
add
sub
push
je
pushf
and
mov
sub
dec
xor
ins
xor
pop
rol
test
loop
ror
mov
push
push
xor
test
mov
push
add
lods
adc
pop
mov
mov
lods
inc
pushf
sub
sub
test
push
mov
xchg
jl
push
call
in
and
xchg
dec
enter
test
lds
rcl
icebp
popa
fist
jmp
add
jmp
sub
or
call
sbb
fwait
xor
adc
adc
leave
dec
adc
push
xor
and
mov
lahf
xor
and
jae
sbb
or
jge
jns
and
lods
cli
mov
cmp
jne
push
mov
aad
lock
call
sub
mov
xlat
arpl
jmp
push
adc
out
xor
outs
into
sub
mov
stc
pusha
rol
fs
sbb
imul
mov
jmp
xor
inc
sub
movs
add
push
mov
inc
in
lock
adc
outs
and
sar
aaa
cmp
pop
test
bound
cs
mov
rcr
mov
add
add
ret
cs
mov
movs
retf
mov
out
xchg
push
sbb
or
xchg
les
mov
push
pop
lock
inc
shl
cmps
(bad)
jmp
mov
adc
loopne
xchg
mov
loopne
pusha
aaa
sub
js
xlat
daa
(bad)
pop
aam
lock
test
(bad)
imul
xchg
pop
gs
in
mov
push
popa
mov
mov
mov
sbb
fsubr
push
test
add
or
push
popa
or
rcl
cdq
jge
dec
pop
icebp
mov
or
movs
je
mov
push
loopne
jo
in
pop
shl
xchg
sbb
(bad)
or
jmp
inc
jno
sub
pop
and
mov
daa
jno
and
aas
sbb
aam
movs
ror
dec
push
loop
ins
mov
div
or
mov
sub
daa
and
xchg
xlat
pop
(bad)
jns
inc
shl
mov
push
add
push
sub
stos
or
(bad)
outs
adc
inc
cmps
inc
sub
imul
add
jmp
pop
inc
mov
dec
sub
jno
mov
or
or
push
jle
cli
je
cdq
pop
retf
data16
or
mov
mov
(bad)
in
inc
add
jns
sub
les
add
add
dec
fcom
pusha
adc
cmps
pop
cmp
out
fimul
aam
jle
jl
add
aam
bound
jnp
jmp
adc
cpuid
movs
mov
fsubrp
(bad)
inc
or
fild
mov
xchg
push
push
into
sub
adc
push
dec
cli
(bad)
repz
scas
or
push
jmp
or
pop
push
std
sbb
scas
or
add
jne
mov
jmp
fstp
(bad)
jmp
aam
and
dec
lds
popa
out
lock
rcr
lds
ja
fnstsw
add
dec
movs
push
push
movs
dec
inc
hlt
fst
dec
fcomp
fnstsw
call
add
inc
clc
pop
fsubr
ret
sti
pop
faddp
and
sbb
les
push
mov
xchg
jo
cmps
push
mov
cs
pop
shl
rol
cmp
dec
xchg
fs
pop
sub
iret
inc
into
adc
and
pushf
add
add
icebp
les
jge
rol
pop
out
bound
mov
(bad)
es
or
popf
ins
lods
inc
inc
add
jmp
retf
leave
pop
inc
shl
xor
push
or
or
and
push
mov
add
xchg
dec
bndldx
fmul
mov
arpl
xchg
out
stos
ss
push
dec
jp
stos
cmp
mov
jg
aaa
push
dec
sbb
ret
outs
test
jl
sub
ja
scas
or
sub
mov
push
mov
pop
popa
or
mov
pop
fnstenv
cld
xor
dec
hlt
jge
and
ret
add
mov
jmp
rol
lock
pop
sub
and
mov
mov
clc
cmp
adc
ror
pushf
push
dec
jns
(bad)
dec
leave
xor
mov
test
loope
adc
pop
add
cmp
xor
movs
aad
adc
sbb
pop
sar
or
xchg
mov
shr
into
inc
add
aas
or
add
push
in
jns
mov
mov
(bad)
movs
and
jp
outs
mov
jmp
or
rol
add
bound
mov
jmp
lods
xor
mov
ins
adc
cmp
adc
ja
data16
dec
xchg
and
dec
mov
adc
or
ret
dec
jge
pop
inc
in
xor
jp
popa
imul
dec
inc
adc
mov
mov
mov
push
xchg
pop
int
hlt
add
mov
push
leave
mov
xor
sbb
repnz
pushf
mov
loope
or
add
mov
sub
jle
or
adc
pop
push
sub
xor
fs
mov
(bad)
adc
lds
or
nop
clc
test
and
add
or
leave
mov
dec
dec
push
and
dec
pop
stos
xor
xor
ins
xor
inc
dec
xor
pop
fcom
rcl
mov
adc
push
shl
sub
pop
aaa
mov
or
loopne
pop
and
shl
add
xchg
je
(bad)
adc
inc
lea
les
fsub
ret
sub
jge
dec
or
fld
dec
sti
mov
mov
bound
pop
mov
xor
ret
push
sub
add
push
mov
dec
adc
cdq
and
ins
bound
arpl
add
dec
add
(bad)
push
add
lods
cmps
lods
lea
sub
pop
xor
dec
dec
mov
in
pop
(bad)
scas
push
retf
aas
mov
inc
pusha
pushf
rcl
adc
sbb
clc
and
pop
pop
jae
repz
jns
je
pop
and
lock
inc
lock
clc
mov
mov
jge
gs
push
in
push
hlt
lahf
mov
lock
jns
jae
xchg
cmp
loope
sbb
inc
xor
or
pushf
retf
add
add
push
ficom
sub
jge
pushw
add
ja
jmp
push
sbb
push
xor
outs
js
add
push
clc
enter
fmul
jecxz
mov
(bad)
pushf
retf
pop
mov
push
xchg
pop
push
mov
je
and
imul
inc
push
test
push
das
mov
cmp
jnp
sub
sbb
pop
mov
mov
jns
mov
imul
push
inc
xchg
push
pop
add
loopne
inc
rcr
sub
pop
outs
sub
mov
pop
std
inc
sub
push
inc
mov
push
or
dec
adc
lods
add
inc
js
mov
dec
bound
sbb
mov
repz
pop
das
or
push
cmp
scas
in
xor
loopne
test
dec
pop
dec
push
and
sbb
int3
dec
lods
add
in
cmp
sub
jne
or
mov
push
mov
rcl
or
loope
stos
js
adc
les
loopne
sbb
cdq
test
dec
ins
ret
xchg
sti
movs
rcl
popa
fdivr
cs
add
and
fidiv
adc
mov
push
cmp
mov
cmps
mov
inc
add
(bad)
mov
xor
iret
test
adc
leave
les
(bad)
push
jge
mov
scas
push
jae
pop
fs
pop
inc
pop
sub
pop
xlat
xchg
mov
xor
mov
push
dec
adc
push
cmps
mov
and
fs
dec
test
push
retf
test
je
loopne
push
hlt
and
adc
test
xor
inc
sub
mov
jns
or
cmp
jmp
cmp
call
mov
sub
add
sahf
dec
xor
mov
stc
inc
push
mov
mov
fmul
xor
mov
or
push
push
dec
or
xchg
xchg
inc
movs
scas
xor
aas
leave
mov
cmp
push
in
cmp
or
inc
push
shl
xchg
aas
xor
add
jne
or
or
(bad)
loop
mov
outs
pop
fldenv
add
add
push
sbb
and
xor
idiv
sbb
arpl
add
test
mov
mov
retf
repz
stc
xor
inc
and
and
xchg
and
bound
loope
mov
rcr
js
daa
imul
mov
in
rol
fcom
pop
fsubr
aam
lods
imul
xor
dec
cmp
fistp
adc
inc
pop
test
mov
pop
inc
sbb
in
js
in
fnstenv
pop
sbb
jbe
pop
sbb
xor
xchg
sbb
and
adc
(bad)
cmp
jne
call
or
sub
test
enter
push
add
inc
add
add
xchg
(bad)
sub
test
add
adc
xchg
std
rcr
cs
test
outs
add
add
jp
cmp
sbb
or
loopne
clc
jl
or
dec
xchg
cdq
xchg
sbb
sbb
sub
loopne
rol
ret
leave
loopne
fs
xchg
cmovne
sbb
in
push
les
enter
or
or
test
sti
sbb
aas
loope
sbb
call
inc
add
sbb
lahf
sar
sahf
add
ds
or
mov
(bad)
in
sahf
and
cmps
push
stc
inc
xor
data16
pop
xchg
push
cmps
mov
push
push
sub
stc
cmc
xchg
jb
jb
mov
cld
mov
cmp
adc
jmp
sub
push
jg
sub
jmp
(bad)
or
or
jecxz
je
xor
call
mov
jmp
xor
movs
push
push
add
push
hlt
jge
inc
lods
adc
mov
push
and
imul
or
cmc
stos
jne
call
loope
scas
xchg
(bad)
xchg
mov
sbb
fxch
jle
popa
xchg
sub
or
push
and
fdivr
sbb
jecxz
icebp
sub
shr
lahf
rol
rol
scas
cvtps2pd
mov
add
jl
add
pusha
inc
and
sar
das
or
mov
shr
pop
in
scas
push
cmp
rol
pusha
or
(bad)
rcr
and
cmp
int3
sub
or
sbb
sbb
sahf
cmp
clc
imul
adc
inc
and
cs
stos
jmp
push
(bad)
dec
sbb
mov
das
mov
xor
mov
inc
and
cli
inc
ins
mov
js
jo
sbb
call
push
push
ret
sbb
push
mov
xor
cwde
dec
pop
cs
hlt
pop
inc
fcom
xor
cmp
sub
inc
cli
push
jg
dec
adc
xchg
jne
inc
jno
add
mov
cdq
(bad)
inc
sub
fld
adc
and
jno
adc
stc
dec
test
imul
dec
pop
lea
xchg
mov
adc
push
jl
inc
rol
dec
shr
pop
inc
jmp
pop
cmp
inc
inc
cmp
fbld
aam
mov
ins
loop
xchg
inc
mov
mov
fstp
and
inc
sbb
xchg
jge
loop
fnstenv
in
fidiv
out
add
and
pop
inc
mov
dec
xor
loopne
pop
xchg
xor
lea
adc
pop
cmp
and
retf
inc
pop
add
outs
sub
cmp
add
add
cmp
inc
inc
dec
repz
les
pop
pop
sub
and
push
outs
out
lahf
dec
add
pop
sbb
jbe
add
and
mov
xchg
fmul
lock
xchg
mov
mov
loopne
add
pusha
out
add
out
or
sbb
les
std
jbe
or
add
lods
mov
and
sar
dec
or
and
leave
add
ss
cmp
mov
sbb
adc
jns
js
or
sbb
(bad)
out
loop
jmp
cmp
push
jp
inc
adc
push
push
scas
xchg
xlat
xor
in
sbb
add
jge
jb
sbb
or
cmp
leave
xchg
retf
cmp
push
popa
dec
iret
into
sbb
scas
xchg
out
adc
push
nop
sub
xchg
inc
or
or
cmp
cmps
cwde
js
loope
aad
add
push
fistp
sbb
(bad)
and
dec
xor
jbe
mov
retf
loopne
xlat
jo
mov
inc
clc
inc
popf
test
inc
aaa
adc
sub
dec
pop
mov
push
jle
and
xor
sar
add
cmp
or
cmp
lahf
or
dec
adc
push
clc
push
push
fld
iret
jno
sbb
fcomp
sbb
push
push
inc
mov
adc
adc
inc
mov
shl
push
inc
mov
ja
adc
xor
jbe
pushf
xor
aaa
inc
mov
inc
add
sbb
test
push
dec
mov
xor
pop
lock
(bad)
lea
xchg
xchg
or
and
call
sub
inc
dec
pop
js
and
pop
jl
(bad)
sub
retf
into
xor
outs
push
push
dec
fdivr
jo
jo
cmp
pop
(bad)
push
jns
dec
sub
dec
push
cmp
punpckhbw
jl
shr
pop
enterw
xchg
sub
in
jnp
sbb
(bad)
in
(bad)
pop
je
push
mov
cmp
enter
gs
loopne
cmp
or
push
xor
xor
or
inc
mov
in
test
xor
pop
jne
jns
dec
shl
pop
sbb
nop
not
add
sbb
in
adc
jmp
int
stos
(bad)
in
loope
mov
outs
lock
jne
nop
fmul
into
jl
inc
mov
sub
mov
push
jge
(bad)
popa
retf
xor
dec
(bad)
(bad)
sub
shl
cs
mov
loopne
cmps
mov
je
popa
push
sub
push
cmp
mov
sbb
inc
xor
or
stc
adc
or
sbb
ins
fisubr
dec
dec
js
add
or
mov
add
mov
xchg
xchg
cld
adc
je
lahf
inc
loopne
push
aas
add
stos
or
ret
and
sbb
add
dec
mov
dec
mov
push
movs
dec
xor
dec
adc
rcl
das
inc
add
addr16
add
push
lods
dec
jle
push
mov
mov
jle
daa
mov
adc
push
iret
aas
aad
xchg
leave
out
fdivrp
mov
(bad)
lahf
adc
pop
mov
test
pushf
out
dec
retf
leave
xor
das
cmp
mov
iret
push
or
xor
ins
popa
out
xchg
sbb
or
arpl
lods
dec
pusha
shl
adc
inc
add
outs
shl
enter
or
jbe
loopne
adc
or
aad
mov
push
xor
push
cmp
sub
test
cmp
aas
jne
aam
add
mov
mov
xchg
add
aam
fadd
imul
scas
or
adc
xor
ret
out
or
xor
shl
aaa
xchg
nop
dec
or
mov
xor
sbb
and
and
shl
fdiv
je
lock
and
aaa
push
retf
fcomp
dec
jmp
mov
jmp
sub
adc
push
or
push
jmp
cmp
fwait
aad
not
div
bound
push
jp
push
sub
or
mov
mov
inc
push
enter
imul
adc
adc
call
fst
loopne
adc
add
jmp
cmps
ds
sub
jmp
mov
das
loop
adc
jmp
or
inc
add
or
loope
push
pusha
in
mov
movs
xor
cmp
shl
nop
cmps
ror
test
mov
cmp
cmp
sahf
adc
iret
rcr
das
push
and
jmp
jne
(bad)
aad
data16
jne
mov
mov
ret
jecxz
push
mov
movs
call
add
xor
jp
mov
pop
dec
scas
in
or
pop
sub
dec
mov
shl
fwait
fs
and
mov
aad
adc
cmps
dec
xor
ror
or
xor
pop
xchg
call
dec
icebp
or
lods
int
or
xor
ss
sti
ss
or
pop
and
idiv
stos
(bad)
loope
and
add
jp
push
and
and
lea
pop
and
aas
sbb
sbb
mov
push
jo
ins
add
aas
push
inc
xchg
and
lods
mov
call
call
xchg
neg
cmp
adc
mov
xchg
dec
pop
xchg
xchg
add
sub
mov
rol
jp
(bad)
mov
cmp
aaa
adc
pop
xlat
add
xlat
cmp
push
xchg
xor
stos
loopne
dec
in
inc
mov
mov
pop
or
and
push
sub
pop
xchg
jmp
mov
push
adc
ror
sar
pop
lock
dec
lahf
xchg
mov
in
or
lock
ins
retf
push
jp
or
push
and
inc
popa
jmp
mov
xchg
outs
inc
pop
lock
jmp
jge
dec
inc
or
add
popa
imul
inc
jle
call
jno
and
ins
sub
(bad)
stos
ins
popa
into
adc
enter
mov
stc
or
shl
push
jns
jmp
and
adc
dec
or
sbb
movs
jg
cmp
popf
shr
mov
pop
and
push
imul
pop
add
jl
and
cmps
imul
add
leave
add
mov
retf
jb
cmp
lahf
sub
xchg
repz
jo
and
xor
ds
icebp
adc
dec
retf
(bad)
fistp
jmp
inc
lahf
mov
or
xor
stos
add
jg
xchg
cmp
jl
push
push
push
cmp
add
pop
sbb
repnz
arpl
(bad)
cmp
shl
xor
hlt
lea
cs
stos
cli
(bad)
fist
push
inc
pop
pop
push
jns
sahf
shl
xchg
rol
dec
in
lahf
add
inc
dec
cdq
jo
(bad)
mov
hlt
mov
call
dec
jnp
or
imul
shr
or
pop
push
jnp
mov
add
inc
and
pop
push
cmps
pushf
push
pop
or
cmp
add
cmp
or
mov
jecxz
xchg
cmp
add
test
mov
inc
mov
mov
(bad)
rcr
test
jne
sar
in
jno
je
jmp
add
nop
push
retf
fst
mov
xchg
pushf
mov
push
lds
inc
push
pop
lock
aad
mov
and
test
adc
popf
idiv
push
xchg
aas
ins
push
adc
inc
mov
icebp
push
cli
lea
sbb
jp
push
jns
and
mov
or
xlat
cmc
push
inc
adc
mov
push
jle
add
push
mov
(bad)
fidiv
pop
add
jge
or
mov
repz
or
push
outs
sub
sbb
lea
jmp
push
pop
xor
add
in
or
add
and
xchg
dec
scas
add
add
add
push
push
pop
leave
and
push
fadd
pop
leave
jae
dec
push
adc
clc
sbb
jne
fsub
mov
test
mov
cmp
dec
or
push
or
push
sbb
add
push
push
xor
pop
push
sahf
aam
push
and
jb
add
or
cmps
pusha
mov
xor
jno
or
in
or
or
sbb
inc
cmps
adc
mov
jg
or
add
push
push
dec
push
cli
push
in
jo
xor
adc
in
jo
sbb
sbb
std
daa
mov
cmps
loopne
mov
or
pop
scas
fs
scas
push
xchg
cmova
idiv
lock
test
shr
jae
or
aad
add
rcr
xchg
adc
mov
xchg
lahf
dec
add
inc
or
stos
or
mov
or
loopne
in
jo
test
mov
fs
inc
push
inc
and
arpl
adc
mov
mov
js
jmp
push
and
lods
and
jecxz
fwait
mov
add
fsub
dec
and
and
mov
push
sbb
sahf
lock
add
mov
dec
sbb
lods
aad
or
jnp
adc
inc
mov
scas
add
push
inc
push
jecxz
push
mov
bound
inc
dec
ss
xor
pop
sbb
push
add
lods
adc
xchg
movs
cmp
and
imul
cmp
sbb
jns
dec
lock
and
mov
add
mov
jbe
xchg
in
push
pop
mov
mov
push
or
in
mov
or
pop
jmp
ds
fs
aam
xchg
pop
inc
jo
adc
retf
and
sbb
or
fsubr
imul
movs
xor
cmps
mov
sub
test
mov
adc
retf
and
ja
push
aaa
adc
xchg
fdivr
mov
push
push
retf
or
aaa
fistp
lds
adc
push
shr
dec
ret
out
xchg
out
mov
nop
dec
cld
jbe
fldenv
in
les
hlt
mov
rcr
ins
mov
fsub
xchg
push
or
xchg
push
cmp
mov
or
lock
ins
cmp
jecxz
mov
daa
or
push
pusha
mov
out
test
dec
scas
out
add
sbb
jmp
(bad)
push
cmp
cmp
xor
mov
jno
js
ja
pop
xchg
dec
mov
or
das
or
test
xor
or
fadd
cdq
or
adc
pop
push
ror
(bad)
and
mov
inc
ror
sub
ret
fiadd
jne
pop
mov
mov
jmp
test
mov
aad
mov
push
inc
add
jmp
ja
or
mov
gs
imul
and
int
inc
jo
fstp
push
popa
outs
lea
and
push
mov
enter
test
test
inc
add
popa
add
stos
clc
cs
js
mov
adc
inc
jmp
lods
cmps
mov
test
mov
gs
or
and
(bad)
out
push
mov
mov
add
pop
movs
in
in
daa
fdiv
push
sahf
mov
push
movzx
xor
mov
addr16
add
pop
jns
pop
(bad)
push
mov
fucomip
test
mov
mov
mov
imul
or
(bad)
jmp
shl
and
push
or
push
shl
push
in
jg
pop
mov
mov
or
mov
(bad)
mov
dec
nop
lahf
dec
cmc
mov
dec
cmp
fs
mov
enter
xor
ss
iret
push
mov
call
inc
loopne
cmp
aam
ds
add
sbb
adc
data16
push
in
js
pusha
adc
js
sbb
das
sbb
mov
fwait
sar
les
or
test
pop
repnz
in
aas
and
xchg
push
or
enter
enter
clc
push
add
clc
shl
xchg
mov
enter
xor
xchg
cmp
sar
inc
and
cs
add
in
dec
add
push
push
push
call
sbb
movs
scas
clc
sbb
sar
cmp
and
mov
mov
and
pop
out
jle
jmp
cmp
and
adc
inc
or
cs
jg
push
xchg
movs
mov
mov
dec
dec
ss
mov
mov
mov
and
(bad)
sub
xchg
pop
mov
clc
adc
jbe
popf
mov
cld
je
ja
push
sbb
mov
inc
cmp
mov
pop
dec
inc
dec
ror
hlt
mov
hlt
cmp
shl
mov
(bad)
es
lea
cli
fcomp
icebp
inc
fadd
hlt
inc
add
loope
xor
sub
rcr
fldenv
dec
mov
ins
dec
call
dec
push
cmp
pop
or
jl
cmp
loop
std
adc
push
mov
dec
je
clc
push
ret
dec
movs
pop
lock
xchg
pop
cmp
jmp
cmp
push
add
hlt
push
or
xor
shl
push
ror
and
jecxz
or
inc
jle
jnp
xchg
jnp
or
js
cld
lods
mov
sbb
push
add
daa
daa
daa
add
daa
pop
or
or
jnp
or
jbe
jmp
or
fwait
fwait
fwait
fwait
por
jmp
adc
pop
adc
fwait
fwait
fwait
fwait
push
adc
dec
adc
dec
adc
fwait
fwait
fwait
fwait
aas
pop
jmp
sbb
xor
jmp
fwait
fwait
fwait
sub
jmp
sbb
and
dec
fwait
fwait
fwait
pop
pop
jmp
and
or
add
adc
test
adc
mov
mov
jne
push
loop
ins
ss
fiadd
push
add
sahf
out
cwde
mov
jns
out
enter
sahf
out
sahf
(bad)
jmp
jns
jns
add
sahf
out
sahf
push
sbb
and
out
xor
ds
dec
call
out
pop
enter
add
and
(bad)
jmp
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aad
push
push
push
pushf
movs
push
nop
leave
cmp
add
bound
add
mov
mov
sub
mov
data16
sbb
sub
cmp
cmp
pop
mov
les
sar
call
add
out
push
mov
push
jge
push
add
sub
fdiv
sar
(bad)
cmp
jb
inc
xor
cmp
inc
mov
dec
or
xor
jns
adc
out
sbb
scas
adc
pusha
cs
retf
adc
inc
push
xlat
hlt
fdivr
mov
jge
jbe
cmp
inc
pop
mov
cmp
shl
xor
xor
inc
jmp
xchg
ss
sbb
add
clc
add
xchg
js
lock
loop
fldenv
mov
xor
mov
lds
test
ds
test
rcl
cmp
jae
rcr
sbb
repnz
mov
jge
push
das
mov
pop
mov
adc
sar
add
mov
jecxz
repnz
or
add
js
and
or
in
xor
pop
call
sar
mov
sti
shr
xor
pushf
sar
repz
xor
add
add
add
jne
jmp
mov
adc
iret
or
ins
push
or
and
not
and
xor
add
add
in
in
push
aam
sub
jge
fsubr
add
or
mov
ror
mov
idiv
jl
fisub
aam
cli
and
and
mov
sbb
mov
push
rol
leave
xor
fs
fisub
repnz
sub
fdiv
mov
push
or
xlat
and
jle
sbb
xor
lods
xor
imul
fsubr
int3
dec
in
rcl
call
pusha
mov
push
xor
and
push
cmp
dec
xor
jmp
int
ret
push
xor
add
pop
dec
shl
xor
fdiv
imul
add
xor
in
aam
bound
in
jns
mov
adc
sbb
adc
add
adc
mov
pop
cmp
aaa
fadd
xor
call
rcl
call
nop
loopne
lahf
cmp
xchg
cmps
imul
cmp
dec
mov
pop
aaa
mov
or
cmp
jae
add
cmps
xor
pusha
pop
or
and
call
mov
imul
and
xor
add
inc
adc
add
pop
inc
in
ins
fwait
jge
push
ret
push
jo
ficom
or
les
pushf
addr16
call
cmp
add
xor
js
inc
(bad)
jne
mov
ucomiss
dec
fadd
pop
fs
xor
scas
leave
js
call
mov
retf
push
clc
jl
push
and
add
movs
jmp
imul
add
in
in
(bad)
or
rol
aas
int3
inc
(bad)
aam
xchg
fcmovbe
or
sbb
inc
sub
mov
adc
cmp
sub
shl
in
in
fstp
shl
rol
add
adc
sub
push
xor
inc
adc
dec
ror
adc
dec
loopne
adc
ror
enter
sbb
adc
stos
imul
in
inc
push
xor
dec
int3
dec
xor
push
dec
xor
shl
js
in
push
pop
mov
xor
scas
push
mov
aam
call
pop
xchg
inc
mov
pop
add
ficom
add
(bad)
or
ror
inc
pop
cs
push
cmp
pop
pop
movs
cdq
add
inc
pusha
inc
leave
in
loopne
jl
or
sbb
xor
add
fs
xor
adc
fs
dec
xchg
xchg
dec
ror
stc
stc
pop
loope
lahf
stc
mov
int3
pop
push
(bad)
in
adc
mov
jb
push
adc
fmul
adc
xor
fcom
fisub
mov
(bad)
call
and
and
loope
cmps
push
mov
aaa
es
push
dec
pop
out
pop
inc
xor
cld
add
sub
mov
fadd
add
inc
loopne
retf
jb
loope
xchg
cli
cld
lea
mov
pop
cld
sub
ret
add
xor
pop
(bad)
pop
stos
fcom
jmp
outs
ss
mov
xor
or
rol
adc
add
rcr
jne
cs
push
add
test
test
stos
or
sub
loopne
ret
aas
lea
jmp
jg
mov
sub
out
cs
or
jecxz
retf
add
mov
jne
pop
jbe
add
inc
dec
sti
adc
dec
jl
sub
push
enter
mov
adc
clc
aaa
jbe
or
mov
in
adc
dec
or
sub
jae
push
pop
rol
mov
fsubr
rep
fimul
mov
sbb
retf
fs
pop
fdivp
ror
or
std
mov
hlt
push
shr
xchg
pop
sbb
mov
and
rol
mov
pop
push
mov
mov
dec
js
pop
and
add
mov
jl
pushf
mov
cmp
pop
jo
popa
jbe
fdivr
leave
mov
cmp
les
shl
lock
ror
fwait
sbb
and
andps
add
mov
inc
pop
jle
ja
lea
imul
cmp
ja
sub
fmul
sub
stos
mov
and
and
or
adc
or
test
in
enter
adc
sbb
xchg
jbe
and
or
test
test
shl
add
and
mov
push
and
test
adc
icebp
(bad)
pop
pop
sbb
mov
adc
push
xchg
mov
(bad)
jno
inc
pop
stos
xchg
icebp
mov
arpl
je
cmc
out
or
mov
pop
sub
and
pop
jge
mov
adc
adc
push
add
mov
xor
dec
imul
add
sbb
push
dec
jb
xchg
sbb
retf
push
sbb
out
fist
jmp
mov
inc
inc
mov
mov
inc
sbb
adc
xor
or
add
sbb
add
ret
dec
ja
loopne
jge
lods
jmp
xor
mov
pop
xor
push
sub
add
push
xchg
and
inc
(bad)
add
xor
pop
or
pusha
sbb
or
sbb
dec
inc
mov
adc
fidivr
inc
cmp
jl
nop
sub
sbb
sub
test
sub
pop
mov
cmp
add
out
pop
add
cli
es
lea
cmp
xchg
mov
test
jg
and
or
js
ins
or
jl
or
call
inc
inc
push
aad
or
int3
mov
mov
or
or
sti
dec
cmp
jl
dec
dec
sahf
cmp
push
js
test
xchg
dec
sti
jmp
and
xchg
nop
pusha
dec
in
imul
mov
test
and
movzx
lods
lods
or
adc
mov
and
adc
adc
adc
out
mov
or
push
aam
push
sub
fcomp
inc
sbb
add
mov
push
cmp
sbb
les
and
mov
mov
sbb
mov
lods
rcr
inc
ret
imul
into
loopne
sub
jmp
and
mov
stos
dec
and
ret
adc
ins
and
mov
pop
or
add
mov
mov
or
add
pop
dec
pusha
pop
inc
mov
add
xchg
xchg
jp
adc
push
mov
push
adc
sub
inc
push
fbld
xchg
mov
int3
test
dec
sti
bound
push
or
jle
ror
dec
sbb
pop
and
test
adc
cmp
and
xchg
push
or
add
fmul
and
(bad)
add
push
out
nop
lock
and
(bad)
mov
push
sub
scas
add
mov
cmps
and
inc
ss
or
(bad)
(bad)
ficomp
xchg
mov
add
rcl
nop
imul
fist
ret
popa
and
out
fstp
enter
sbb
xchg
sub
jmp
sbb
mov
pop
ja
lods
adc
push
iret
test
adc
push
jmp
push
adc
fild
test
jle
or
enter
jae
pop
pop
mov
and
loopne
loopne
jecxz
inc
js
sub
je
rol
gs
in
mov
pop
mul
pushf
ins
cwde
fcomp
leave
call
(bad)
fistp
fcomp
jne
push
sbb
and
xchg
ss
mov
ret
ret
ficomp
fwait
add
in
dec
inc
push
mov
sbb
sub
sub
or
dec
ret
inc
push
push
ds
mov
add
aam
mov
popa
enter
in
mov
dec
cmp
lock
xchg
or
repz
adc
int
int3
jo
add
jae
je
inc
call
aam
adc
lea
and
repz
and
jns
and
cmp
push
cmp
xor
pop
and
mov
xor
lods
mov
dec
and
cmp
cli
push
xchg
sub
loopne
adc
fwait
ret
(bad)
loope
push
aam
jbe
rdpmc
mov
and
jnp
pop
(bad)
dec
sbb
push
or
sbb
adc
jmp
inc
mov
icebp
inc
ins
cwde
mov
imul
xor
pop
lds
pop
sub
jb
push
movs
xor
add
adc
es
and
popf
jmp
add
xor
sub
push
cmp
and
rcl
dec
jl
mov
fild
cmc
add
mov
add
mov
in
dec
push
sub
or
cmp
call
inc
pop
inc
pop
ret
movs
inc
inc
ror
int
and
pusha
cmp
stc
push
or
cmps
test
ret
xchg
jns
mov
loopne
iret
xor
dec
xchg
push
xor
fnstenv
das
inc
push
les
imul
sbb
sub
and
cmps
push
sub
cdq
jae
lods
xchg
pop
push
cdq
icebp
loope
and
sub
sbb
dec
arpl
inc
mov
lds
inc
xchg
sub
or
inc
iretw
leave
add
push
and
push
pop
lock
in
xchg
aam
cmp
dec
clc
cmps
jmp
hlt
je
inc
mov
data16
retf
xor
and
push
mov
or
xor
lahf
sub
mov
sbb
jno
ss
push
(bad)
push
jp
not
and
bound
pop
stos
jmp
jmp
in
add
mov
sub
adc
jo
mov
lods
add
scas
dec
sbb
push
ss
ja
cmp
aad
adc
pop
jnp
sub
dec
inc
loope
stos
sub
push
jo
adc
(bad)
rcr
xchg
sub
push
je
mov
call
loop
retf
test
mov
pop
or
and
push
call
stc
xchg
inc
pusha
sub
jle
and
ds
je
ror
mov
xchg
or
push
adc
mov
pop
cld
and
pop
into
icebp
mov
push
push
shr
add
dec
sub
mov
sbb
jne
xor
push
dec
imul
xor
test
push
ficomp
sub
and
xor
or
jo
mov
ss
sar
dec
pop
mov
xchg
xchg
push
dec
push
cmc
push
out
push
lds
ror
push
or
out
xchg
and
and
xchg
data16
inc
jg
mov
(bad)
xor
cmp
mov
fsubr
cmp
inc
xchg
das
and
scas
fidiv
test
or
xor
das
and
lea
jb
add
mov
mov
and
or
inc
hlt
and
sbb
xchg
outs
call
sbb
and
adc
arpl
in
push
in
cld
xchg
in
repz
sbb
pop
add
pop
(bad)
jmp
fnstenv
(bad)
fistp
xor
jb
jne
inc
add
sbb
push
cdq
or
je
in
mul
dec
mov
out
sbb
or
jle
push
cmp
sbb
or
mov
mov
ret
arpl
or
jne
pop
or
(bad)
mov
xchg
lds
adc
mov
or
test
adc
repnz
jg
add
popf
out
jo
cmp
mov
pop
adc
adc
push
(bad)
jno
(bad)
out
cs
dec
dec
sbb
int
cmp
add
jbe
call
mov
xor
mov
mov
ror
dec
push
inc
cmp
cmc
shl
or
rol
jbe
nop
push
inc
xor
sbb
adc
addr16
and
imul
lods
ds
movs
and
ret
pop
std
xchg
and
cmp
mov
or
mov
pop
pop
pop
fcomp
fsubrp
inc
fstp
ret
sbb
bound
or
sub
scas
add
adc
leave
dec
adc
xor
fiadd
adc
push
push
or
mov
cmp
push
adc
mov
xchg
mov
pop
mov
xchg
repnz
ret
push
xchg
pop
push
adc
stc
mov
add
push
xchg
xor
movzx
popa
mov
or
or
call
repnz
push
cmp
lock
test
mov
int3
xor
add
ss
aam
and
adc
push
xor
cs
push
hlt
mov
lea
daa
stos
je
cmp
sar
push
adc
sub
push
cmp
jge
mov
xchg
adc
inc
ins
lock
cmp
popf
ficom
mov
mov
lock
dec
shl
mov
hlt
clc
clc
cld
test
xor
mov
cs
add
add
call
push
and
aaa
add
test
je
add
sar
push
adc
cmp
dec
or
mov
shr
sbb
cld
aas
mov
mov
or
mov
sub
mov
add
adc
dec
or
pop
mov
sahf
add
mov
sub
mov
adc
je
dec
je
push
add
loop
and
aas
sar
dec
mov
add
dec
movs
out
retf
sub
test
mov
test
mov
push
cld
je
cmp
jne
sbb
adc
mov
pushf
cmp
rcr
rol
xor
add
xor
and
mov
sbb
bound
retf
idiv
inc
inc
imul
and
jb
pop
cld
mov
add
lahf
dec
rol
pop
je
mov
add
or
stos
sub
cmp
mov
stc
push
or
mov
adc
push
push
sahf
cli
push
lock
dec
add
enter
repnz
jbe
inc
test
jmp
daa
pop
jmp
pop
cmp
adc
loop
mov
push
mov
test
xchg
imul
jae
repnz
mov
mov
sub
pop
jo
inc
sub
in
nop
xchg
adc
cmp
je
cmp
push
es
outs
push
cmp
jne
inc
jne
loopne
push
or
and
pop
dec
or
or
es
add
fimul
aas
leave
cmp
jne
add
xchg
pop
sub
sbb
test
dec
ret
or
sub
sbb
sub
add
fcomp
or
mov
call
fsubr
xor
cmp
mov
jmp
and
fwait
dec
sub
jmp
inc
jl
inc
jg
call
iret
add
shl
dec
mov
sub
and
and
mov
mov
cmp
fadd
jg
jbe
int
imul
and
inc
sbb
xchg
rcr
inc
pop
adc
pusha
aad
mov
out
mov
mov
sbb
xlat
dec
add
push
xchg
mov
fsub
fistp
mov
jg
pop
sar
jle
imul
mov
adc
inc
lods
(bad)
aaa
jecxz
mov
ins
cmp
or
and
inc
xor
fnstenv
sub
add
mov
jge
xchg
mov
pop
das
movs
xor
sub
(bad)
inc
cmp
mov
out
pop
call
add
cmp
in
inc
inc
push
icebp
les
push
out
jmp
xor
dec
sahf
dec
bound
sbb
and
loopne
add
xor
or
in
pop
shr
cld
cmp
cmp
mov
ret
sub
lds
loop
je
and
cmps
syscall
test
ret
clc
ins
dec
fstp
loope
and
mov
scas
aam
clc
ficomp
jg
or
into
hlt
add
jne
mov
lock
imul
or
inc
mov
jnp
call
adc
cmp
jne
into
sub
or
xchg
sahf
shl
(bad)
mov
add
adc
aad
add
out
dec
xchg
cmp
xchg
js
and
mov
jne
mov
(bad)
cwde
add
dec
mov
mov
hlt
(bad)
mov
cli
mov
or
sub
jle
je
outs
test
adc
sub
je
and
js
add
lock
push
add
and
mov
movs
inc
or
inc
inc
loopne
xor
inc
loop
or
add
dec
sti
sub
ins
fsub
shl
or
or
cli
fs
jmp
mov
cmp
icebp
jmp
push
rol
mov
add
xchg
fst
mov
ss
mov
sbb
shl
mov
xor
dec
jle
ret
mov
adc
xor
mov
call
(bad)
xlat
xchg
ret
dec
adc
mov
dec
push
mov
xchg
cmp
mov
mov
add
cmp
inc
cmp
pop
loopne
aam
cmp
lods
es
cmp
push
adc
inc
sbb
or
mov
mov
sub
ficomp
cmp
jb
pop
rol
inc
out
mov
out
cmp
outs
mov
pusha
add
xor
shr
mov
or
enter
dec
imul
sbb
(bad)
xchg
outs
mov
sub
or
mov
in
ss
jmp
jmp
pop
repnz
pop
mov
xor
jns
or
pop
jne
leave
or
mov
pop
imul
test
aaa
sbb
ds
jo
lods
fnstcw
ja
mov
and
lea
adc
xor
mov
and
dec
push
adc
pop
out
xor
aam
cmps
sbb
test
push
pop
jb
shl
sbb
daa
mov
leave
sub
inc
add
adc
(bad)
mov
jecxz
lock
in
sahf
xchg
mov
int3
pop
repnz
xchg
adc
sbb
rcr
add
pop
adc
push
das
push
add
shl
shl
outs
or
mov
stos
mov
mov
dec
sbb
cmp
dec
and
int3
fsub
in
mov
movs
pop
push
push
inc
test
adc
mov
pusha
data16
ret
popf
inc
int
sbb
ins
ds
inc
jl
pop
add
fsubr
(bad)
scas
jmp
clc
add
cmp
test
rcr
push
movs
push
cmp
inc
cmp
or
in
mov
push
in
lock
inc
shl
add
adc
(bad)
adc
mov
jno
add
mov
sbb
rol
or
movsx
ret
push
xor
jno
jmp
xchg
pop
dec
sbb
cmp
or
popa
mov
nop
sbb
sub
jmp
inc
jb
loop
jo
inc
xlat
inc
push
sub
addr16
shl
sbb
or
aam
xor
or
xor
push
sbb
int3
mov
cmp
jmp
aam
push
adc
leave
sub
mov
retf
sub
fsubr
(bad)
fist
or
add
xor
lea
call
clc
xor
cmp
out
jmp
add
xlat
aas
push
dec
call
push
jbe
rcr
mov
fnstenv
sbb
xchg
test
push
push
jo
mov
or
cmp
retf
mov
hlt
cmp
mov
mov
xchg
sbb
lock
cdq
inc
jmp
gs
push
mov
jecxz
fdiv
and
add
and
inc
je
dec
adc
push
out
inc
addr16
loope
ins
jne
rcl
cld
call
pop
or
cmp
retf
mov
cli
jb
mov
inc
push
scas
push
inc
add
mov
hlt
mov
pop
fdiv
dec
sbb
in
dec
fwait
jo
pusha
js
inc
add
cdq
mov
push
mov
push
mov
push
jecxz
arpl
mov
push
fild
or
out
jo
movs
cmp
je
and
xchg
mov
movs
or
push
neg
or
pusha
inc
lds
pusha
sub
in
in
or
add
or
push
xor
iret
(bad)
test
cmp
in
aaa
mov
mov
mov
inc
sub
dec
pop
xchg
das
rcr
movs
cmp
jmp
cmp
jne
adc
dec
add
(bad)
add
push
bound
sub
xor
xor
xor
pop
leave
add
and
xchg
data16
iret
mov
je
std
leave
mov
into
je
mov
enter
aas
sbb
enter
pop
xor
dec
icebp
pop
sub
sbb
push
jmp
sbb
ror
xchg
enter
in
shl
adc
movs
call
stos
push
or
dec
pop
fdiv
xor
jb
in
jmp
call
mov
nop
in
jnp
ret
addr16
mov
xchg
mov
xchg
js
jle
dec
inc
aaa
cs
cmc
in
sbb
aaa
sbb
push
cmc
jno
or
cmp
adc
(bad)
fist
dec
movs
jmp
push
add
pop
je
push
dec
mov
jecxz
sbb
and
add
lods
in
dec
pop
loope
dec
jecxz
ins
je
pop
mov
gs
push
js
xchg
sub
(bad)
cmp
push
shr
dec
xor
sub
daa
scas
lea
dec
push
mov
mov
sbb
(bad)
xor
pop
nop
cmps
add
pusha
lock
push
push
sahf
mov
sub
sub
mov
mov
ins
push
fmul
cmp
xchg
add
pop
xchg
jmp
cs
loop
pop
add
or
in
fs
je
movs
imul
int
push
out
mov
test
xchg
add
and
push
xlat
or
nop
pop
popf
cwde
lock
or
jmp
int
push
dec
pusha
cmp
test
push
mov
add
(bad)
mov
movs
stc
inc
or
push
or
mov
add
dec
inc
inc
sub
sbb
in
add
mov
fwait
or
or
add
xchg
mov
lock
ss
sar
inc
xor
mov
add
in
fdivr
imul
cmp
sub
sbb
push
shl
fistp
or
in
and
xchg
add
imul
jnp
sub
push
mov
sbb
sub
push
fadd
dec
pop
fwait
sbb
js
or
sub
push
push
inc
or
mov
or
ror
out
js
and
pop
and
mov
dec
push
xor
out
dec
push
mov
inc
call
clc
lods
gs
push
aas
in
jmp
jle
adc
inc
add
xor
or
jg
sub
shl
jb
inc
mov
sub
sub
clc
mov
xor
jmp
mov
dec
pop
mov
loopne
and
pop
mov
cmp
add
test
es
xchg
fs
jo
inc
jnp
xor
cmps
cmp
les
cmps
jge
dec
pop
push
ret
outs
mov
xor
or
cmp
jecxz
pusha
cmp
dec
dec
les
daa
pushf
and
loope
or
cmp
sbb
fsubr
mov
adc
xchg
mov
repnz
test
fistp
cmp
sbb
inc
or
pusha
add
inc
adc
not
push
or
popf
xchg
adc
add
inc
sbb
ss
out
out
push
xor
adc
pusha
je
adc
sbb
or
dec
daa
sub
dec
push
mov
mov
pop
jo
add
sti
(bad)
or
or
aaa
cmp
repz
sub
ins
ins
and
lods
jne
ret
dec
mov
pop
rcl
and
outs
loop
adc
iret
fwait
xchg
pop
test
adc
inc
or
dec
leave
cmp
push
jge
lods
sbb
popf
sub
sub
sub
in
adc
ja
add
push
and
adc
popf
mov
xchg
dec
adc
add
lock
mov
ret
mov
fisttp
mov
jg
dec
inc
mov
cmp
push
out
push
dec
pop
and
add
(bad)
movs
addr16
lea
push
and
ret
jne
cmp
lds
mov
push
pop
daa
sub
pop
push
sahf
pop
shr
lods
mov
adc
adc
cmp
jmp
push
or
lock
pmullw
ds
jge
push
adc
dec
or
cmp
push
(bad)
jmp
lea
adc
jmp
xchg
push
xor
pop
dec
sbb
xor
adc
mov
fisub
dec
fcom
inc
jne
in
add
and
add
dec
add
and
test
or
in
(bad)
ins
popa
and
and
jle
cmp
and
adc
loopne
mov
js
add
push
sbb
sub
add
loopne
call
add
adc
inc
inc
adc
inc
add
mov
or
icebp
aas
mov
cld
or
lock
jmp
jne
repz
mov
out
push
xchg
xchg
xchg
push
pop
inc
add
adc
xchg
jl
addr16
in
jae
cmp
pop
xor
fisttp
xchg
and
fld
js
sub
fcom
push
and
adc
pop
add
ret
gs
mov
xchg
push
pop
(bad)
or
ret
rol
call
or
and
cwde
shl
mov
out
loopne
adc
jmp
loop
sar
aaa
or
shr
add
leave
data16
imul
and
dec
sbb
or
mov
in
inc
add
fistp
adc
pop
push
inc
mov
mov
pop
pusha
inc
pop
aaa
xlat
sub
jle
in
jecxz
sbb
pop
dec
or
jge
popa
imul
loopne
outs
inc
add
in
(bad)
jae
lea
cld
std
ficomp
xchg
pushf
push
pop
es
pop
scas
cmps
xor
pop
push
shr
mov
and
sub
xchg
fsubr
mov
mov
adc
ja
adc
(bad)
and
or
lds
ins
in
xor
xchg
pop
pop
push
sub
cmp
lea
mov
xchg
or
adc
add
add
loopne
cmp
ins
loopne
sub
mov
fadd
pop
mov
ins
pop
mov
mov
popf
mov
add
dec
call
sbb
xor
mov
test
aad
push
mov
sub
inc
cli
xchg
or
sbb
cmp
dec
(bad)
scas
inc
xchg
dec
mov
pop
adc
or
int3
inc
fidiv
or
popf
fs
repz
rol
and
jmp
iret
loopne
or
je
sub
jl
aas
xor
leave
(bad)
rcl
cld
push
lea
xchg
das
sub
aaa
push
inc
ret
or
cmp
dec
or
(bad)
lds
add
and
aas
clc
xor
add
add
pop
fcomp
mov
in
call
add
adc
push
inc
jmp
or
jl
sar
in
gs
adc
sub
and
dec
fcmovnbe
cs
clc
(bad)
imul
push
loopne
cmp
cmp
xchg
adc
(bad)
dec
outs
xor
clc
dec
or
cld
pop
jae
ret
mov
inc
(bad)
push
mov
mov
sbb
add
cmp
das
(bad)
sub
frstor
cmps
out
jb
loopne
xchg
inc
push
inc
push
add
pop
(bad)
jae
int
add
xchg
les
pop
test
cmp
inc
adc
ds
add
sar
xor
jb
out
sub
add
in
push
xchg
out
push
push
mov
sbb
int
int3
mov
jle
and
mov
cmc
(bad)
jg
imul
xchg
ret
mov
mov
cmp
lock
into
retf
mov
mov
cmp
ret
push
xlat
pop
and
stos
cmps
inc
mov
xchg
push
pusha
mov
popa
dec
xor
loopne
push
adc
(bad)
in
mov
inc
mov
mov
or
fs
in
sub
in
lods
mov
(bad)
and
add
add
lds
mov
sar
cmp
jbe
push
popf
in
add
push
jb
jmp
das
js
and
or
pop
push
mov
ficom
rcr
mov
nop
and
or
mov
and
lock
add
and
xor
adc
stos
into
inc
cli
and
aam
in
add
ds
data16
push
outs
dec
ins
xchg
or
fneni(8087
lahf
sahf
push
cmp
or
dec
jo
add
jne
mov
ja
dec
adc
mov
sbb
scas
lods
div
loop
(bad)
sub
inc
jo
jmp
add
sub
sub
push
push
mov
push
aas
push
mov
dec
je
mov
dec
add
mov
pop
gs
xor
test
mov
sub
popa
add
cmps
dec
fmul
pop
ja
shl
mov
sbb
add
fnstenv
push
mov
out
mov
cmps
cmc
cwde
push
retf
jne
mov
in
xchg
sub
cmp
(bad)
(bad)
dec
cmp
inc
push
xor
pop
div
adc
stos
hlt
add
lea
sub
pop
mov
inc
or
xchg
jmp
lods
push
dec
xor
adc
inc
jne
ret
xor
push
adc
xor
dec
add
push
adc
cmp
dec
adc
and
imul
call
pusha
xchg
xchg
xchg
out
mov
dec
sbb
sub
jo
gs
and
in
mov
shr
mov
imul
sar
jne
or
add
jb
push
fwait
lea
je
outs
jmp
mov
sub
jo
shl
adc
sub
or
fidiv
bound
add
or
adc
pop
mov
retf
fidivr
mov
int3
add
add
nop
mov
imul
or
sar
test
xchg
call
mov
add
xor
fst
mov
or
ror
jmp
dec
mul
cmps
loopne
add
or
push
out
fild
je
rep
mov
dec
jmp
ret
or
jb
hlt
sub
lds
call
push
lahf
call
je
and
rcr
or
and
dec
jne
sub
stc
lods
sbb
es
xor
inc
adc
hlt
sar
or
add
mov
jle
fld
cwde
scas
pop
push
pop
and
sbb
lods
loop
mov
cmp
and
clc
sti
mov
cmc
jg
fs
pusha
jmp
movq
jnp
cld
movapd
push
clc
jae
pop
outs
fcmovnbe
xor
jle
xor
cli
rcl
retf
fs
adc
or
and
retf
or
jg
(bad)
jmp
adc
(bad)
jnp
mov
mov
ficomp
aam
ret
or
(bad)
adc
pop
lock
call
add
fadd
rol
jbe
and
shl
mov
shl
pop
enter
push
push
inc
pop
push
pusha
sbb
out
cmp
dec
sbb
pop
jo
pop
test
sar
in
mov
or
xchg
mov
mov
rol
pop
add
sti
std
or
add
xor
test
mov
(bad)
or
or
int3
jmp
dec
mov
sub
ret
adc
pusha
call
mov
sbb
hlt
fldenv
mov
push
pop
mov
(bad)
dec
aad
dec
and
push
pop
inc
dec
pusha
outs
loope
sbb
popa
inc
pusha
mov
sub
mov
jmp
push
or
mov
mov
push
sub
add
idiv
ja
mov
cmp
mov
push
(bad)
in
je
cmp
jne
inc
cmp
out
or
shl
or
(bad)
adc
add
xchg
or
sub
or
mov
aaa
ins
ret
daa
mov
shr
dec
pop
imul
push
push
push
sbb
adc
mov
rcr
jmp
je
mov
mov
js
pop
notrack
xor
pop
push
push
xor
dec
dec
sbb
sbb
(bad)
adc
xlat
cwde
cmp
or
mov
adc
and
clc
(bad)
add
test
popf
push
lea
cmp
or
xor
ss
xlat
cld
sub
dec
add
outs
loop
daa
mov
mov
push
sbb
mov
pushf
js
sbb
pushf
pop
addr16
sbb
sbb
sbb
push
mov
mul
push
cmps
enter
movs
pop
inc
sub
mov
mov
dec
dec
inc
xchg
push
fisub
pop
mov
dec
adc
sbb
sub
dec
add
lds
(bad)
imul
(bad)
dec
inc
test
or
jnp
sub
or
call
fsub
popf
or
or
jmp
pop
loope
push
adc
ja
and
xor
lock
adc
in
or
ret
cmp
inc
lock
arpl
mov
sub
cmp
int3
je
jl
pop
sbb
(bad)
out
sub
je
push
xchg
or
adc
mov
inc
sub
fdivr
bound
or
popa
pop
ja
scas
xchg
outs
mov
dec
shl
and
add
data16
data16
dec
test
add
adc
pop
inc
je
pop
sbb
mov
jle
or
enter
and
test
movs
adc
lock
shl
jns
adc
jl
mov
xchg
pop
rcr
push
jmp
xor
loop
icebp
xor
test
push
rcl
add
pop
retf
xchg
shr
rcr
or
jmp
add
iret
cwde
mov
ror
pop
inc
inc
add
sbb
sar
or
cld
dec
jne
ins
cmp
sbb
jmp
ret
adc
outs
jne
out
jmp
add
jmp
hlt
test
je
inc
mov
cmp
mov
leave
es
loope
or
cmp
jne
dec
jmp
inc
lods
dec
js
ss
xor
retf
jne
inc
aaa
push
lds
daa
push
mov
sbb
es
push
outs
jno
mov
rol
push
or
inc
dec
push
rol
test
pushf
stos
inc
xchg
dec
sub
stos
jge
(bad)
dec
push
rol
(bad)
cmp
add
adc
fsub
mov
stc
xor
pop
and
daa
outs
push
add
pop
pop
jne
ret
clc
ficom
(bad)
pop
adc
add
stc
or
rep
jmp
xchg
jmp
mov
mov
add
test
lea
addr16
sahf
fcomi
push
test
adc
inc
push
and
cld
pop
call
add
add
imul
dec
push
dec
add
nop
into
enter
nop
inc
adc
inc
xchg
mov
neg
out
aam
int3
push
les
lods
movs
mov
mov
call
call
hlt
cmp
repz
clc
clc
cld
lock
jo
out
add
lock
repz
jmp
or
or
lock
nop
inc
sbb
pop
sti
and
mov
pusha
and
lea
add
cmp
pop
and
std
(bad)
cld
mov
mov
fst
xchg
mov
addr16
cmp
in
pop
nop
mov
fiadd
jl
retf
fisub
add
sahf
inc
push
out
push
add
xchg
push
mov
push
out
fs
faddp
dec
push
mov
or
push
push
loop
cmp
pop
pusha
push
cmp
repz
sbb
sbb
adc
repz
adc
adc
or
repz
add
adc
pushf
or
ficom
add
push
add
sub
daa
ja
pushf
adc
lods
inc
mov
mov
pop
cmovb
xchg
js
loopne
fistp
adc
push
bswap
add
mov
add
dec
lahf
call
pop
inc
lods
push
jae
mov
inc
imul
pusha
or
sub
leave
les
pop
inc
jae
adc
popf
mov
adc
repz
push
pop
and
rcl
add
cmp
inc
jp
sub
sbb
adc
sbb
sbb
ror
add
add
rcr
sbb
loop
mov
mov
sub
mov
or
push
daa
fwait
pop
push
test
sbb
dec
or
sar
pop
inc
xor
xor
inc
push
pop
xor
cmp
dec
mov
or
sbb
enter
xor
or
pop
xor
stos
or
ret
and
mov
push
inc
and
cs
pop
mov
mov
and
dec
xor
or
mov
jecxz
mov
cmp
xchg
js
loope
cmp
jle
or
sbb
(bad)
fist
cld
popa
mov
dec
push
jbe
sub
inc
inc
mov
pop
cmp
pushf
mov
cmp
into
lea
cmp
jl
jmp
sub
in
mov
jne
push
adc
or
mov
mov
jne
pop
cmps
push
adc
sbb
add
pop
clc
mov
mov
mov
into
adc
ds
or
pusha
push
cmp
ins
and
add
push
(bad)
es
jne
ins
clc
dec
addr16
lods
adc
pop
sbb
stos
loopne
cli
inc
int
or
mov
push
inc
pop
jmp
add
sbb
cmp
dec
fadd
cmp
call
test
sti
sbb
movs
(bad)
push
pop
scas
pop
and
js
in
jmp
pop
push
loope
xor
ja
pop
fucom
or
add
inc
pop
stc
jle
mov
dec
or
cld
add
retf
fisub
xchg
xchg
aaa
pop
add
sub
inc
les
mov
cmps
outs
sub
add
add
bound
or
test
in
(bad)
das
adc
jne
pop
push
or
jmp
repz
leave
imul
sbb
fsub
or
cdq
or
push
pop
and
out
or
add
fucom
sub
sbb
ins
or
sbb
inc
shr
pushf
std
xor
pusha
push
push
or
add
rol
jo
js
sub
pop
aaa
push
jmp
and
sub
jmp
loopne
mov
inc
ins
imul
(bad)
fsubr
(bad)
repz
inc
js
or
pop
pop
pop
not
mov
xor
fs
mov
pop
pop
gs
or
push
inc
mov
add
mov
nop
shl
inc
fcmovb
(bad)
ins
rcr
add
clc
shr
push
(bad)
ja
cwde
dec
fidivr
jbe
lea
adc
sbb
jp
mov
xchg
add
pop
leave
and
pusha
ss
dec
add
push
clc
jbe
add
push
or
and
ins
out
jb
ret
mov
add
popa
aaa
add
add
push
in
cmp
adc
jmp
scas
adc
test
jne
test
cmp
xor
ja
sub
jbe
div
neg
scas
mov
pushf
pusha
push
add
ss
ret
retf
hlt
neg
sbb
mov
in
rcr
mov
cmp
mov
or
mov
ds
sub
adc
popa
pop
popa
and
push
shl
hlt
sbb
lods
int3
je
push
and
push
add
ins
adc
add
inc
sub
sbb
add
outs
xor
test
push
or
rol
repz
sbb
test
shl
adc
sub
push
sbb
clc
or
lods
cmp
pop
add
add
cmp
mov
pusha
sbb
int
jge
push
cdq
rcl
or
rcr
jns
aaa
adc
sbb
and
sbb
je
mov
repnz
cs
add
and
jle
daa
dec
jne
jmp
push
or
or
pop
adc
mov
dec
es
jne
mov
xor
or
sbb
sbb
(bad)
pop
xor
enter
lods
aad
lds
sub
mov
aaa
js
cmp
jno
arpl
ror
mov
(bad)
outs
into
push
or
fdivr
push
cld
jne
mov
push
cmp
jne
cmp
int
(bad)
es
jne
call
ds
int
or
call
inc
dec
or
sub
repz
(bad)
jmp
std
push
xor
cld
cld
jmp
fld
std
lahf
in
adc
adc
inc
inc
inc
inc
out
rol
or
push
adc
sbb
adc
mov
retf
xchg
dec
mov
push
push
push
sub
ret
sub
dec
and
mov
or
push
loopne
dec
mov
arpl
lea
or
add
adc
add
xlat
outs
and
adc
mov
or
xchg
xchg
or
or
and
movs
pop
pop
pop
pop
or
adc
pop
ffree
fs
lods
xchg
fisub
fmulp
in
shl
add
xlat
push
mov
pop
add
dec
addr16
sbb
cli
out
xor
pop
jg
add
mov
into
sub
test
xchg
pop
sub
call
push
push
push
jmp
jp
xchg
ja
jae
out
jmp
inc
fadd
getsec
dec
add
lea
and
cmc
dec
push
ja
or
and
mov
popf
and
jmp
loopne
inc
das
pop
add
sub
pop
and
or
pop
pop
outs
loopne
aaa
int3
sub
ins
sbb
jb
shl
mov
mov
gs
retf
inc
jno
test
xchg
mov
pop
inc
mov
push
rol
shl
xor
and
jge
test
int
jmp
in
hlt
mov
adc
(bad)
fsubr
stc
push
xchg
retf
es
pop
xchg
xor
jmp
or
adc
or
add
push
xor
pop
aam
je
add
sbb
(bad)
sti
fild
add
not
and
sub
add
or
sbb
mov
cmp
xchg
lock
sbb
lock
adc
daa
push
add
add
lock
xchg
sub
jne
pop
add
ja
xor
mov
jne
pop
mov
jmp
inc
or
(bad)
pop
retf
cmp
ja
mov
inc
je
mov
lea
in
mov
mov
call
ret
add
xor
adc
push
and
rol
scas
(bad)
mov
pop
add
mov
aaa
cmp
mov
inc
cmp
jb
add
cmp
inc
fwait
push
int3
cli
cld
div
xor
fs
sub
(bad)
ds
cmp
aaa
or
or
ret
mov
push
icebp
or
mov
push
sub
or
pushf
shl
push
scas
(bad)
sbb
into
and
xor
iret
sub
stc
add
mov
(bad)
jo
and
or
mov
mov
mov
push
jne
cwde
inc
add
test
cld
cmp
push
xor
cmp
je
xor
out
sahf
adc
and
fadd
dec
lods
or
aam
xchg
pop
addr16
mov
xchg
std
cld
sbb
inc
add
adc
xor
(bad)
pop
lock
in
mov
ret
or
jl
cmp
lahf
shl
retf
push
mov
clc
sub
mov
pop
inc
pop
test
jae
cdq
xchg
pop
inc
cwde
or
jns
xchg
xor
not
clc
pop
pop
mov
inc
jmp
cmp
sbb
jmp
adc
or
out
sub
sub
lods
mov
pushf
jg
and
(bad)
cmp
mov
xor
ss
ja
js
or
and
adc
adc
pop
mov
jno
fmul
or
mov
pop
inc
mov
and
je
clc
adc
retf
sbb
je
lea
mov
sub
jmp
and
jmp
or
test
push
add
mov
sbb
and
sbb
and
push
push
and
adc
shl
cld
std
mov
adc
sbb
sbb
mov
shl
(bad)
xchg
xor
add
pop
cmovno
cmp
add
mov
push
in
imul
mov
and
sbb
mov
bound
jmp
dec
or
cld
aaa
jne
mov
rol
lahf
(bad)
lock
mov
inc
mov
dec
jne
fs
add
pusha
inc
or
shufps
retf
add
pop
ins
push
and
lock
push
or
mov
adc
dec
push
inc
xor
add
xor
fidiv
sahf
test
or
dec
rcr
adc
shr
sti
nop
mov
ins
sbb
xor
dec
or
push
jmp
jne
jl
add
fmul
push
imul
or
loopne
icebp
add
push
and
add
nop
mov
fdivr
sbb
lea
push
adc
jbe
sub
ss
adc
clc
xor
enter
or
dec
pop
scas
mov
bound
mov
dec
es
and
add
cld
push
pushf
cdq
mov
or
mov
adc
daa
jne
or
add
idiv
pop
mov
jno
adc
or
test
xor
xor
pop
ret
jp
inc
imul
in
pop
nop
sub
inc
int3
mov
jbe
ja
or
loope
loop
out
jmp
mov
add
mov
mov
pop
add
jg
add
jmp
mov
or
stos
push
sub
or
adc
(bad)
hlt
add
outs
push
cmps
sub
sub
push
loope
xor
add
jp
mov
and
mov
mov
mov
inc
sar
or
mov
sub
adc
push
je
adc
or
gs
jnp
dec
int3
rcr
cmp
adc
rcr
data16
jmp
adc
push
jmp
xor
or
ds
jle
mov
les
ja
paddsb
pop
or
mov
cwde
test
lods
aas
or
push
push
adc
ror
cdq
(bad)
jge
adc
pusha
gs
rol
sub
in
inc
add
jo
adc
clc
inc
imul
adc
sbb
ins
push
adc
(bad)
pop
add
(bad)
fisttp
dec
cmp
pop
ins
xor
inc
push
pop
mov
jbe
xchg
out
hlt
cdq
pop
idiv
(bad)
jmp
cmp
loopne
in
sub
popa
xor
stos
push
push
mov
pusha
adc
ror
into
xchg
xchg
xor
cmps
and
sub
xor
push
or
push
scas
jp
loopne
dec
pop
push
imul
push
pop
push
dec
daa
cmp
pop
aam
mov
push
loop
sbb
loopne
mov
mov
arpl
add
sub
add
push
in
sbb
inc
adc
or
repnz
add
dec
(bad)
(bad)
push
or
ja
jecxz
test
and
xchg
loopne
mov
adc
or
rol
rol
or
call
dec
ret
fcom
test
and
ret
fbstp
mov
adc
enter
cmp
xlat
mov
in
xor
or
push
sbb
sbb
adc
mov
xor
push
fadd
idiv
or
enter
add
sbb
adc
xor
imul
or
call
ret
jbe
aam
aas
cli
dec
sti
jmp
dec
je
add
or
(bad)
pop
je
push
neg
sar
jb
push
sbb
xchg
addr16
add
jmp
sub
push
push
push
and
sti
add
mov
sub
push
jmp
lea
push
test
push
test
add
jo
arpl
lock
xchg
call
in
push
addr16
jne
mov
addr16
add
cmp
push
dec
mov
add
jae
push
imul
xchg
sub
xor
cmp
and
rep
or
dec
xchg
xlat
(bad)
pop
ins
inc
sbb
jns
or
mov
jg
mov
mov
adc
lods
repnz
jle
xor
or
jmp
xchg
jbe
leave
add
add
jmp
ror
add
pop
in
pop
push
dec
jb
je
push
jmp
sub
dec
xchg
clc
ror
sub
dec
pop
sub
pop
jp
loopne
fcom
sub
not
js
adc
imul
repz
or
mov
or
jmp
cmp
jae
xchg
cs
sbb
mov
cmp
mov
(bad)
(bad)
sbb
dec
loope
jl
push
add
call
test
mov
loop
pop
lea
add
sub
ins
push
push
pop
dec
sbb
inc
push
push
sub
pop
shl
sbb
(bad)
(bad)
add
xor
jl
sub
je
or
dec
and
sbb
shl
std
jns
push
or
clc
mov
pop
jle
rcl
add
push
pusha
xchg
pop
pop
imul
lea
retf
out
popf
cmp
push
sbb
punpckhwd
push
addr16
ins
sub
xchg
push
pop
int
add
dec
das
pop
push
pop
add
iret
(bad)
sub
push
pop
or
push
pop
ja
call
inc
push
pop
sub
sbb
cmc
push
adc
cmp
push
dec
test
sbb
inc
outs
mov
leave
imul
cmp
retf
push
push
fisubr
add
inc
lods
adc
add
call
ins
or
cmp
clc
mov
ins
sub
and
sar
inc
js
adc
add
jg
mov
cmp
jne
fst
stc
xchg
clc
push
jle
in
mov
stc
mov
mov
(bad)
out
retf
mov
fs
in
push
ins
sbb
jge
ins
inc
sub
xchg
cs
call
cmp
movs
bound
ret
add
add
xchg
fucomip
(bad)
mov
inc
(bad)
mov
jmp
dec
or
(bad)
inc
test
cwde
rcl
add
aam
xchg
mov
loope
mov
and
sbb
dec
shr
or
jno
jb
add
cs
lods
popf
fst
sets
push
mov
sbb
dec
int
push
mov
in
js
in
push
(bad)
add
add
enter
popa
imul
mov
retf
inc
dec
adc
or
stos
loope
repnz
test
pushf
lock
add
outs
and
test
in
mov
nop
test
pop
lea
dec
and
clc
xchg
push
cmps
aaa
mov
jmp
xchg
and
jg
clc
enter
mov
cmp
ret
xchg
and
test
inc
and
ds
mov
mov
xchg
mov
retf
ret
jge
cli
push
fcom
adc
cmps
and
movs
adc
popf
out
retf
movs
sbb
mov
sbb
xchg
xchg
sub
pop
hlt
test
popa
sbb
retf
sbb
inc
add
iret
sub
xor
add
jge
sbb
(bad)
mov
add
adc
pop
jp
pushf
jo
inc
pop
imul
pop
ss
mov
adc
sbb
mov
xor
popf
enter
inc
push
inc
xor
pop
jp
fisttp
jmp
adc
das
sbb
and
xchg
jo
in
sub
mov
fwait
or
mov
imul
add
mov
dec
call
ins
xchg
xchg
xchg
cmp
cmp
sub
(bad)
push
arpl
mov
adc
rcr
lea
dec
push
mov
cmp
xor
lahf
push
or
lock
(bad)
cmc
fsubr
xchg
sar
lea
xchg
imul
xor
rcl
xor
je
fnstenv
int3
adc
in
pushf
(bad)
fstp
sahf
and
loopne
add
bnd
add
repnz
xchg
inc
jnp
jl
jae
add
dec
sbb
leave
enter
fidiv
xchg
add
push
lods
xchg
cmovne
sub
mov
and
mov
push
les
adc
leave
jge
add
add
jo
push
jns
repnz
add
es
push
in
jmp
push
pop
test
sub
inc
lahf
out
sahf
dec
inc
cmp
sub
pop
sbb
ds
sar
mov
xchg
test
cmp
stos
loop
or
mov
or
xor
pop
nop
and
inc
pop
mov
nop
call
pop
rol
push
outs
mov
enter
repz
rcr
loopne
lock
jmp
mov
or
xor
loopne
push
(bad)
jmp
in
adc
lds
mov
outs
inc
dec
loopne
push
sar
out
sar
shl
push
or
sub
xchg
in
je
mov
icebp
retf
add
das
repnz
jne
pop
repnz
inc
sbb
add
add
push
adc
jle
or
mov
mov
dec
imul
int3
test
jne
push
sbb
mov
loopne
mul
add
mov
and
inc
sbb
outs
jne
out
cs
ror
mov
push
pop
shl
mov
push
xor
push
cmp
xor
ds
adc
test
clc
stos
rcr
cld
fsqrt
jbe
je
movs
(bad)
movs
dec
push
fistp
pop
or
dec
sub
sbb
xchg
mov
into
or
inc
push
push
popa
lock
mov
ss
or
and
test
and
or
fimul
cmp
jmp
lods
push
rol
shr
pop
or
mov
jns
sbb
dec
sbb
add
call
cmp
cmp
lods
mov
(bad)
out
sbb
sbb
aas
xchg
mov
push
lock
pop
push
out
call
add
pop
js
js
loope
neg
loop
cmp
ins
mov
dec
je
sbb
pop
std
mov
jmp
ins
test
in
xor
sub
std
add
or
adc
shr
push
jo
or
je
clc
mov
or
fmul
or
repnz
inc
mov
lock
loope
dec
cwde
adc
dec
xor
mov
add
push
or
mov
or
lods
sbb
mov
adc
cld
or
add
jbe
mov
add
psubusb
test
mov
jnp
push
push
lods
mov
cmp
es
mov
sar
test
test
popa
enter
call
call
push
ret
imul
in
add
xchg
mov
pop
or
dec
adc
mov
add
add
dec
or
stos
xchg
and
xor
mov
add
sub
ds
add
arpl
loopne
(bad)
fcom
push
push
xchg
fcomp
int3
repnz
xchg
clc
or
xchg
repnz
movs
shr
fadd
add
hlt
(bad)
mov
jae
fbld
cld
xor
jnp
push
jmp
sub
adc
xchg
clc
jno
ins
push
jne
loopne
pop
ins
repnz
jmp
cli
xor
mov
addr16
pop
inc
test
mov
(bad)
push
or
add
add
ja
int3
shl
cdq
int3
add
xchg
sbb
test
scas
add
add
sbb
or
dec
or
pop
sbb
mov
dec
(bad)
enter
jl
xchg
retf
jge
stos
sub
inc
cdq
stos
add
adc
jbe
push
inc
fisubr
sbb
scas
hlt
pusha
and
or
inc
mov
sub
sbb
or
cmp
div
pushf
inc
js
mov
sub
cwde
movs
aaa
push
sahf
mov
dec
sahf
jno
xchg
ins
in
sbb
jb
pop
aaa
loopne
call
sbb
push
adc
add
lock
stc
rcr
(bad)
xor
mov
dec
nop
rcr
cmp
or
cmp
push
xor
shl
push
cs
rcl
dec
push
pop
dec
jmp
ret
add
mov
jl
push
in
or
push
mov
dec
retf
inc
aaa
nop
or
retf
popf
mov
popa
xor
push
mov
mov
popf
jne
fnop
mov
cmp
nop
(bad)
in
xchg
cmp
call
lods
outs
je
dec
call
or
(bad)
sub
mov
into
pop
add
sbb
mov
sti
rcr
lea
jbe
ja
fiadd
xor
xchg
cld
ja
or
test
push
sbb
pop
sar
pop
leave
rcl
mov
push
loop
rol
inc
jnp
jo
mov
or
retf
movs
mov
loopne
sbb
pusha
xchg
loope
aam
sub
add
inc
sub
xor
enter
idiv
pop
or
add
setg
jb
movs
sbb
add
inc
popa
pusha
dec
popa
xchg
mov
adc
lds
add
mov
loop
fbld
push
imul
jmp
or
ja
movs
mov
mov
leave
test
adc
movs
hlt
hlt
stc
rcr
push
add
push
sbb
adc
test
in
and
loope
aaa
test
ds
xchg
pusha
sub
scas
pop
ret
sbb
pop
and
fnsave
jne
js
add
mov
inc
xor
movs
sbb
xchg
cmp
inc
cs
sbb
sbb
imul
imul
pop
or
xchg
rcr
jb
out
mov
test
pushf
dec
xor
or
adc
add
into
shl
jo
sbb
inc
je
pop
push
imul
fild
cwde
mov
dec
xor
repz
movs
cmp
test
mov
mov
lea
and
arpl
mov
call
inc
fimul
mov
add
outs
sbb
sbb
js
pop
add
push
xor
mov
loopne
sbb
es
mov
push
add
add
enter
repnz
pop
jne
xor
add
push
ins
cmp
sbb
xor
ds
cmc
add
push
pushf
sub
test
add
repnz
xchg
loopne
call
cmp
movs
xor
mov
push
data16
es
mov
stc
push
push
cwde
inc
iret
adc
or
dec
jmp
mov
inc
lods
cwde
ds
xlat
mov
mov
dec
movs
cmc
inc
sar
rol
xor
addr16
xchg
les
cmp
clc
pushf
mov
or
push
jmp
pop
or
sbb
inc
inc
mov
mov
jmp
stos
pusha
je
or
sub
mov
ss
push
fwait
pop
loopne
popa
xor
xchg
fisttp
pop
xor
mov
push
and
xchg
cmp
jb
sbb
call
or
and
out
test
push
outs
add
mov
shl
add
push
addr16
xchg
hlt
jmp
cmp
jle
jae
mov
xor
cmps
lock
(bad)
pop
push
out
mov
shl
add
or
mov
nop
cmp
inc
cld
adc
mov
leave
imul
popf
lea
mov
dec
mov
aaa
enter
out
cdq
sbb
div
movs
push
push
push
pushf
enter
iret
sbb
inc
push
stos
adc
adc
mov
dec
inc
les
call
and
jae
imul
cli
mov
bound
in
jo
inc
daa
add
xchg
les
mov
ins
sub
ret
inc
test
out
push
push
into
xor
jecxz
bound
sub
sbb
adc
dec
sub
mov
or
jmp
xchg
sub
cdq
add
adc
jl
add
or
push
mov
add
fidivr
adc
mov
xor
(bad)
jnp
or
sbb
push
lock
adc
daa
pusha
or
lahf
mov
or
mov
jnp
fsub
mov
mov
sbb
and
push
inc
out
ficomp
push
push
push
jmp
fnstsw
fadd
stc
cmp
fimul
mov
dec
jmp
sub
mov
mov
movs
in
ja
lock
pop
inc
mov
xor
and
or
fsubr
jmp
in
push
stos
rcl
push
rcr
dec
cld
mov
in
ja
sbb
and
mov
aad
sub
mov
sub
sub
push
mov
test
int3
mov
lock
shr
mov
test
pusha
inc
clc
or
and
push
and
dec
std
xor
or
push
mov
popa
sub
mov
mov
jp
or
jge
inc
sbb
adc
retf
add
xchg
mov
mov
and
inc
aam
mov
sub
mov
or
adc
ins
loope
add
or
mov
xor
gs
add
cli
adc
mov
adc
xchg
pop
jmp
jge
lods
mov
scas
mov
xchg
and
je
push
or
sub
mov
sbb
out
mov
sub
movs
daa
pop
mov
mov
xchg
xor
or
add
rcl
add
mov
mov
fdivr
aaa
xor
or
stc
and
stc
mov
jmp
cdq
push
(bad)
pop
call
sti
push
adc
or
(bad)
dec
xchg
mov
stos
mov
push
jmp
ret
(bad)
outs
mov
adc
dec
mov
pop
adc
int3
mov
or
or
(bad)
jne
jle
inc
mov
mov
daa
test
test
xchg
or
jbe
call
sar
pinsrw
jb
inc
aam
xchg
add
mov
cmp
push
jl
adc
or
and
out
jno
push
or
adc
dec
push
push
or
inc
add
fmul
dec
pop
jb
mov
ins
imul
mov
(bad)
aam
add
pop
bound
pushf
ret
add
imul
and
pop
push
and
(bad)
test
test
nop
ret
adc
inc
mov
jb
in
push
hlt
mov
xchg
xchg
cmc
adc
(bad)
xchg
jo
(bad)
pop
jmp
inc
aam
clc
fmul
out
lock
adc
nop
add
test
idiv
push
ins
and
pop
rcr
jne
cmp
je
lods
cmp
ja
mov
jmp
pop
cmp
cmp
lea
inc
adc
jmp
inc
loopne
push
loopne
loopne
push
xchg
loopne
xchg
stc
pop
push
xor
inc
imul
jo
imul
or
es
xor
add
sub
sbb
pop
sbb
mov
mov
xchg
and
jg
inc
push
jo
(bad)
adc
ds
jb
inc
test
(bad)
retf
cld
scas
add
nop
add
pop
push
sbb
les
sub
icebp
jae
sub
add
leave
pop
std
arpl
lods
pop
and
std
sub
mov
xor
sub
add
and
adc
mov
jmp
push
sub
mov
sub
add
(bad)
and
mov
and
pop
push
xchg
sub
outs
ss
js
add
mov
sub
sub
lea
into
pusha
and
pop
inc
sar
sbb
fxch
outs
mov
mov
or
mov
movs
jl
add
int3
in
xchg
push
sub
push
sbb
loop
jns
push
add
push
pop
adc
or
cmps
shl
jl
inc
cmp
cmp
lods
sti
inc
mov
sbb
sbb
jle
div
mov
nop
jnp
shl
test
out
and
mov
xlat
imul
pusha
jo
pop
leave
shr
mov
pop
sub
add
icebp
add
arpl
icebp
pop
es
sub
cmps
inc
fstp
pop
fld
imul
inc
js
push
inc
sahf
pop
push
rol
mov
shr
cdq
mov
nop
and
sub
ins
int3
push
sbb
dec
xchg
cwde
pop
adc
test
ds
test
ins
push
lea
loopne
fstp
test
mov
sbb
mov
inc
inc
pop
sbb
mov
es
(bad)
lock
pop
enter
leave
sbb
ins
add
mov
test
inc
or
mov
or
xchg
add
xor
(bad)
call
pop
mov
outs
data16
sbb
cmp
jo
push
cld
mov
or
(bad)
sti
sbb
adc
push
fs
dec
xchg
xchg
pop
mov
imul
call
clc
sub
pop
jp
mov
and
dec
adc
and
leave
cmp
dec
jo
sbb
jmp
cmp
sub
shl
push
xchg
mov
adc
das
rcr
pop
add
stos
(bad)
pop
or
xor
mov
rcl
sub
pop
adc
inc
push
adc
add
xor
lds
shl
aaa
cmp
js
stos
ror
retf
test
push
pop
sbb
js
jp
mov
or
loopne
pop
jle
add
sbb
mov
out
inc
pop
ss
mov
or
mov
inc
sbb
jg
jp
push
jmp
and
jle
and
or
mov
test
or
cmp
push
cmp
bound
xor
das
pop
pop
jg
mov
into
jo
jo
push
fdiv
movs
dec
adc
cmps
rol
fstp
clc
hlt
mov
mov
lds
sub
rol
sbb
iret
in
push
jae
cli
call
test
(bad)
test
xchg
loopne
mov
hlt
xchg
bound
es
ja
cmp
jp
aad
bound
xor
lods
sub
test
mov
dec
icebp
xchg
push
hlt
pop
addr16
popf
je
leave
fistp
ja
mov
nop
dec
ds
clc
(bad)
adc
mov
sub
sahf
dec
xor
xchg
and
shl
mov
pop
popa
push
or
mov
fwait
sbb
lea
push
nop
(bad)
arpl
mov
jmp
and
mov
mov
popa
mov
repz
lods
mov
cdq
scas
and
hlt
push
xchg
pop
rol
and
inc
int3
jno
icebp
outs
fistp
ins
jne
jp
mov
adc
and
fisttp
adc
imul
mov
imul
leave
leave
leave
dec
inc
cmp
retf
sbb
aam
sub
in
in
test
sbb
stos
sar
loope
(bad)
xchg
jl
ret
lds
outs
popf
push
lea
loop
jae
sbb
mov
sbb
leave
mov
scas
mov
xchg
cmp
cld
adc
mov
adc
fild
adc
or
adc
test
ror
shl
pop
aaa
imul
shl
sub
jns
sub
mov
mov
inc
sub
or
aad
and
inc
pop
sar
lods
pop
leave
cmps
inc
sub
in
and
int
outs
and
push
xchg
(bad)
lds
mov
js
push
jae
(bad)
lods
mov
mov
inc
fs
add
mov
outs
jle
cdq
add
mov
mov
movs
push
pusha
cmp
xchg
loop
addr16
push
dec
inc
mov
xor
jmp
adc
mov
mov
mov
out
test
enter
add
outs
pop
xor
inc
mov
push
xchg
mov
cld
push
push
cmc
test
in
jecxz
push
pop
sbb
inc
push
add
push
aas
inc
pop
js
add
(bad)
into
fdivr
push
jnp
jb
mov
pushf
push
into
lods
cdq
nop
inc
cs
lods
shr
add
cdq
ficomp
pop
push
mov
sub
in
je
adc
push
pop
xchg
mov
mov
mov
dec
sub
dec
fsub
jb
add
aad
lds
cmp
jnp
jo
leave
ror
dec
push
add
and
mov
lods
jns
and
and
(bad)
nop
mov
aam
leave
and
cmps
ret
(bad)
in
xor
rol
rcl
mov
or
aam
and
enter
cmp
inc
mov
aam
idiv
test
pop
inc
cmp
retf
mov
sbb
sbb
sbb
mov
pop
loope
sahf
popf
mov
mov
je
pop
add
cmc
loopne
sub
sbb
sbb
inc
push
scas
dec
out
imul
scas
inc
ds
mov
push
pop
hlt
rcr
stc
xchg
inc
mov
add
in
fidiv
(bad)
dec
sbb
dec
adc
xchg
sbb
sbb
scas
retf
xchg
mov
add
ret
adc
rcl
pop
sbb
mov
jmp
retf
inc
pop
pop
push
inc
jp
mov
das
and
out
ret
mov
or
test
ror
gs
out
dec
add
hlt
and
sbb
dec
out
cdq
cmc
test
stos
cmp
jmp
mov
dec
rcr
mov
inc
jmp
dec
fild
dec
add
add
or
cmp
and
add
inc
add
sub
xor
retf
cmps
xor
lea
jo
sbb
rcl
add
xchg
push
sbb
add
push
add
add
mov
mov
fisttp
mov
xchg
mul
or
add
jo
adc
xchg
retf
or
lock
add
dec
(bad)
pop
xor
sbb
and
pusha
and
mov
mov
add
adc
push
jle
add
jo
inc
pop
sub
mov
mov
inc
cmp
push
sbb
int3
repz
or
or
add
sbb
push
fcom
dec
fstp
mov
mov
adc
mov
cmc
(bad)
hlt
mov
shl
pop
hlt
push
popf
out
cli
out
or
push
sub
(bad)
aad
adc
push
sub
inc
add
and
or
cld
dec
dec
out
(bad)
push
not
out
int3
arpl
adc
cs
fadd
adc
cmp
scas
mov
adc
sbb
fisttp
aaa
add
xchg
mov
dec
or
mov
ret
movs
push
mov
mov
loope
out
addr16
mov
dec
cmp
mov
in
leave
sub
mov
cmp
and
in
sbb
mov
and
jmp
or
loopne
jmp
mov
in
inc
or
shr
ret
sub
jg
pop
add
push
or
scas
mov
idiv
or
xor
(bad)
mov
push
ret
jno
push
dec
fist
mov
mov
push
cmp
sti
imul
xchg
pop
mov
xchg
xor
mov
(bad)
jne
mov
inc
sbb
cmps
sar
jne
dec
shl
jmp
dec
jmp
add
jmp
pop
push
mov
add
adc
leave
ret
add
shl
lods
fwait
push
fcom
add
push
imul
rcr
add
(bad)
pop
jmp
psubsb
jb
sbb
mov
in
push
jmp
lock
dec
ror
push
aad
imul
aaa
inc
push
jne
ret
aas
sar
stos
mov
jnp
jae
cmp
jbe
addr16
shl
jne
xchg
sbb
lods
rcl
inc
push
leave
inc
fwait
lea
sbb
leave
xor
jo
fwait
or
push
mov
sub
stos
jmp
cli
(bad)
(bad)
fs
cmp
inc
cmp
js
push
add
pop
mov
sbb
shl
inc
bound
loopne
xor
(bad)
dec
xor
push
fsub
std
es
pop
dec
test
or
clc
dec
xor
dec
jne
loopne
pop
jnp
stos
addr16
scas
dec
jle
sbb
pusha
xor
mov
jecxz
xor
push
mov
inc
dec
jne
(bad)
sahf
xchg
push
push
scas
stos
mov
jmp
rcl
push
addr16
add
jmp
cmp
call
cmp
adc
add
sbb
mov
push
movs
ret
cmp
adc
and
push
add
test
cmp
leave
mov
push
and
call
scas
pop
pop
pop
pop
sbb
shl
dec
pop
pop
push
cmp
cmp
das
pop
pop
push
xlat
test
imul
stos
ins
jmp
lods
and
add
and
dec
mov
or
push
or
mov
add
jl
sbb
ror
call
(bad)
jnp
jge
mov
mov
add
mov
ret
cmp
out
imul
jmp
jmp
mov
jmp
popf
jmp
and
cmp
xor
(bad)
shl
cmp
and
test
pop
pusha
and
or
jne
jns
push
sahf
or
dec
fimul
fnsave
icebp
nop
push
js
sbb
mov
pop
aad
jecxz
pop
fimul
test
jnp
xchg
test
clc
xor
in
aaa
sbb
pop
loop
jnp
test
pop
ret
adc
mov
jecxz
jo
xchg
and
mov
sbb
xor
or
sub
mov
or
clc
adc
clc
xchg
add
cmp
arpl
pop
sub
sbb
xor
fdivr
mov
test
push
addr16
rol
pop
cmps
sbb
das
adc
mov
fiadd
les
mov
sub
and
rcr
cwde
shr
xlat
cmp
pop
pop
sbb
cwde
daa
sbb
das
jmp
jle
jg
je
call
js
test
pop
cld
(bad)
inc
add
add
inc
and
movs
or
mov
xor
cli
xor
cmp
mov
fstp
addr16
out
or
mov
pop
scas
lock
add
add
lock
pushf
push
mov
sub
aad
add
mov
lock
adc
pop
push
out
pop
movs
pop
mov
jmp
pop
push
fwait
sbb
add
or
and
or
test
dec
mov
mov
or
sbb
pop
or
inc
mov
fisub
test
push
push
push
pusha
adc
inc
adc
aas
push
scas
add
sub
call
cmp
inc
(bad)
sub
push
push
mov
pop
and
fadd
std
jo
pop
scas
mov
pop
inc
or
and
push
add
les
shl
and
mov
shl
push
bound
pop
inc
add
mov
push
imul
dec
fidiv
adc
ret
cwde
clc
and
or
dec
inc
pop
sbb
sub
test
imul
push
push
ds
adc
js
push
mov
mov
add
mov
mov
lock
out
cmp
sub
iret
push
adc
xchg
sbb
stos
clc
mov
adc
sbb
pop
jb
cmp
pop
jb
pop
inc
dec
pop
inc
test
mov
cmp
jmp
push
adc
leave
test
dec
mov
ds
mov
mov
(bad)
enter
pop
cmp
lea
mov
ficom
scas
loop
popa
popf
jge
adc
sar
jg
and
lods
adc
mov
mov
add
in
push
ror
mov
outs
jo
les
pop
dec
dec
sar
xor
cmps
mov
adc
pop
ds
je
shl
mov
mov
inc
inc
rcl
sbb
ja
mov
imul
add
retf
xchg
loopne
cdq
aad
sub
xor
test
fistp
das
ds
or
xchg
arpl
cmp
inc
(bad)
jne
cmp
stos
inc
lahf
xor
cmp
hlt
xchg
pop
mov
cmp
clc
pusha
lods
adc
xchg
add
rcr
(bad)
sub
loopne
or
js
push
add
mov
inc
js
sub
vmovd
add
or
cmp
add
in
pop
mov
or
inc
lsl
in
or
rcr
or
xor
sub
(bad)
sar
add
out
rcl
jmp
jg
loop
sar
aaa
fistp
jg
push
inc
adc
push
jmp
push
xor
jo
mov
dec
jne
shl
mov
imul
or
or
xor
mov
je
xor
adc
or
jne
sbb
add
jne
push
inc
outs
stos
and
inc
cli
pop
pop
ret
fnsave
sub
sbb
shl
je
popf
bound
add
cli
shr
add
clc
enter
aaa
push
popf
cmp
jg
mov
xlat
jl
js
in
adc
xchg
test
outs
adc
adc
add
push
adc
ret
mov
push
xor
push
or
shl
enter
or
and
push
sbb
fdiv
xor
call
xchg
add
jmp
add
nop
push
pop
mov
and
sbb
push
add
neg
shr
retf
or
push
sbb
test
add
push
or
mov
sbb
or
xchg
jo
add
xchg
pusha
outs
mov
push
xlat
cmp
imul
push
fld
or
mov
rcl
fiadd
mov
popf
pop
dec
enter
cs
in
jno
xchg
mov
jp
les
out
fcmovnbe
jle
sbb
jmp
and
add
and
pop
mov
imul
push
(bad)
dec
add
and
sbb
stc
jbe
test
add
sbb
xchg
adc
fbld
lods
jno
imul
in
shl
aad
call
jmp
loopne
or
stc
pop
sbb
int
adc
jmp
push
jge
mov
jmp
mov
mov
in
in
fcomp
adc
cld
and
sub
js
and
push
xor
bound
mov
adc
jne
lea
xor
inc
lock
nop
dec
dec
sahf
out
ficom
pop
push
dec
repz
loope
fcom
in
into
cmps
jge
mov
rcl
pop
stc
es
mov
add
int3
and
and
mov
mov
jb
push
inc
and
mov
fs
jle
imul
pop
ficomp
loopne
pusha
or
mov
cmp
jp
push
push
cdq
jmp
inc
fadd
or
or
jmp
test
and
inc
xor
jmp
sti
iret
mov
xchg
and
ret
and
push
push
test
mov
sub
pop
or
mov
xor
fst
scas
cld
outs
mov
test
cld
div
adc
xchg
xchg
(bad)
and
pop
dec
mov
sbb
jl
add
jg
xor
jle
mov
sbb
sub
mov
sbb
shl
je
jmp
bound
add
loopne
loop
sbb
popa
out
or
inc
cmp
sbb
mov
push
aad
adc
inc
clc
adc
loop
ret
or
adc
xchg
dec
cwde
or
xchg
ds
jl
mov
jbe
xchg
call
jne
cmp
outs
jnp
(bad)
mov
sub
dec
add
jmp
movs
pop
mov
or
data16
jb
mov
pop
and
xchg
std
mov
lods
std
ror
jmp
jne
xchg
xchg
xchg
add
cmp
adc
xchg
dec
shl
js
add
xchg
dec
ror
push
inc
dec
push
stc
test
mov
jno
or
gs
cmp
adc
test
mov
(bad)
outs
(bad)
or
jge
call
mov
jns
mov
enter
shl
ror
push
xchg
enter
mov
xchg
out
inc
mov
mov
mov
pop
rol
mov
pop
cs
int3
pop
or
add
sub
xor
sub
iret
es
lock
pop
sbb
sub
popa
mov
jns
idiv
jb
inc
xor
lods
es
adc
adc
mov
fsub
cwde
pop
xor
or
inc
sbb
test
sub
dec
cmp
inc
sub
jo
lods
pop
aad
pop
pop
inc
call
ss
cmp
ret
add
cmp
xor
mov
mov
cmp
push
outs
ss
cmps
rcl
js
pop
xchg
cmps
loop
push
mov
and
and
ret
clc
adc
mov
mov
push
pop
sub
rol
sbb
inc
in
test
es
inc
push
cmp
mov
pop
mov
ror
push
or
stos
nop
cmp
out
xchg
(bad)
mov
push
iret
and
mov
pop
(bad)
sti
cmp
movs
test
stc
mov
push
adc
loopne
push
ins
cwde
imul
rol
or
les
movs
ret
and
mov
jg
or
cmp
sahf
cmps
aam
sub
jnp
mov
pop
aam
mov
adc
fcomp
pop
fnstenv
adc
loopne
push
rol
adc
xor
sbb
add
mov
mov
push
dec
(bad)
adc
cs
fwait
sub
fwait
cmp
outs
inc
sbb
jns
jl
out
scas
mov
and
test
test
add
jae
mov
or
jo
in
sub
xor
sub
fdivr
jecxz
inc
fstp
and
loopne
cmp
add
test
adc
pop
scas
loopne
mov
mov
push
fisub
adc
sar
and
cmp
je
pop
clc
jmp
cmp
mov
xchg
sub
mov
test
stos
test
ficomp
sar
dec
int
mov
xchg
lea
add
mov
push
fsubr
pushf
adc
cmp
ins
inc
lahf
xor
cmp
lahf
js
in
push
jl
lds
sub
dec
outs
push
inc
scas
xchg
dec
or
scas
add
push
mov
adc
cmps
icebp
xlat
mov
push
(bad)
xor
mov
cs
mov
jb
je
jle
adc
xchg
sbb
pop
test
neg
adc
neg
ret
lods
or
cmps
cmps
(bad)
sub
cmp
mov
daa
movs
movs
movs
lea
enter
cmp
and
mov
mov
mov
retf
mov
lahf
inc
repz
cmps
lock
or
mov
sbb
idiv
push
pusha
ficom
inc
jmp
dec
data16
pop
inc
dec
leave
shl
test
cs
sti
mov
jmp
dec
and
lods
sbb
rol
mov
xchg
xchg
cs
or
sub
jl
pop
sbb
jmp
dec
adc
scas
adc
sub
out
jmp
or
sbb
sbb
jnp
fisttp
mov
inc
sbb
or
mov
sub
mov
mov
mov
iret
jmp
mov
xor
jecxz
les
je
jmp
mov
adc
inc
inc
lea
push
add
hlt
in
sbb
add
jne
cmp
hlt
push
nop
loopne
add
xchg
loope
outs
nop
sbb
cmps
jmp
sbb
jp
and
sahf
rcl
dec
push
add
pusha
stos
xchg
je
imul
or
inc
adc
cld
push
inc
daa
pop
mov
mov
pop
call
xlat
ret
pop
mov
push
jno
push
or
hlt
sahf
cmps
stc
mov
push
fdivr
rol
ret
jl
aam
lods
enter
test
pushf
or
add
sbb
inc
mov
and
fsubr
(bad)
sbb
xchg
mov
lea
pop
or
pop
out
rol
aas
jl
xor
call
xchg
seta
mov
test
xchg
xlat
loope
pop
pop
sbb
fisubr
push
lock
aas
pop
(bad)
(bad)
lea
aas
xor
sub
or
aas
pusha
fs
das
les
scas
movs
push
(bad)
fnstsw
adc
mov
shl
scas
outs
inc
aad
ss
outs
inc
xlat
adc
sbb
mov
outs
ror
enter
cmp
xor
and
add
aaa
or
call
call
push
jle
inc
mov
xchg
pop
jb
test
rol
and
pop
rcr
sti
enter
aad
sbb
adc
push
leave
call
in
add
aad
cmc
push
xchg
fidivr
and
add
test
inc
leave
add
aas
dec
movs
bound
in
xlat
(bad)
stc
dec
out
mov
mov
push
(bad)
cwde
mov
cwde
adc
inc
fadd
cwde
inc
add
lods
mov
sbb
sbb
in
rcr
mov
lea
cmp
push
mov
and
cmp
push
mov
jecxz
loop
mov
addr16
test
inc
cwde
xor
jb
test
push
nop
sbb
inc
dec
mov
and
(bad)
repnz
push
dec
push
or
inc
cwde
nop
push
nop
dec
dec
nop
mov
mov
pushf
cwde
jb
leave
add
cmp
add
popa
xor
aaa
ins
call
or
hlt
jne
xor
shr
arpl
cmp
repz
mov
ins
inc
(bad)
sub
addr16
mov
mov
and
popa
mov
test
add
add
and
and
xor
pusha
xor
(bad)
int3
xchg
lods
aam
or
inc
or
pop
pop
iret
add
add
sub
add
pop
mov
add
push
sbb
fmul
jns
xor
aaa
int
or
iret
push
jmp
jnp
jno
(bad)
das
mov
push
jg
mov
or
sbb
fst
dec
jne
add
jno
pop
mov
clc
adc
movs
jecxz
ss
rcr
or
add
and
xchg
inc
cdq
js
test
mov
or
sbb
ja
js
sbb
mov
push
sbb
cmp
adc
and
sbb
xchg
test
loope
imul
and
loope
pop
push
loopne
xchg
xchg
dec
sbb
les
cs
shr
je
mov
fwait
pop
outs
push
push
dec
adc
push
and
and
pop
dec
push
out
fnstsw
outs
inc
or
jbe
repz
ret
cmps
outs
ja
daa
loop
jg
lea
mov
jo
in
int3
pop
adc
jg
ffreep
lea
lea
inc
out
leave
inc
xchg
and
sub
fwait
mov
shr
pop
xor
dec
(bad)
cdq
xchg
movs
pusha
jp
in
aaa
add
inc
push
neg
cmp
aas
ret
mov
shr
retf
ret
mov
inc
cwde
cmp
popa
mov
rcr
xchg
sbb
(bad)
sub
mov
push
aad
retf
and
inc
(bad)
leave
test
loopne
adc
or
clc
xchg
cmp
cmp
shl
adc
xchg
loopne
leave
loopne
inc
jns
mov
lock
xor
xchg
pop
test
rcr
in
mov
pop
mov
ds
or
hlt
push
mov
into
sub
dec
and
dec
test
or
add
mov
push
or
leave
cmp
bts
jmp
mov
cs
sub
push
jbe
fwait
mov
and
lods
imul
dec
js
add
inc
adc
and
cmp
and
cmp
xchg
idiv
inc
inc
inc
add
mov
pop
or
cmp
add
cmp
pop
xchg
sub
rol
push
mov
retf
(bad)
out
add
xor
test
adc
lods
aas
xor
ficomp
cmp
jne
cmp
mov
add
add
inc
mov
add
inc
inc
or
loopne
cmp
and
dec
mov
jmp
mov
adc
or
and
jmp
cmp
nop
pop
sub
sbb
test
lea
ds
xchg
in
xchg
inc
mov
cmp
jp
push
test
aas
pop
popa
fs
rcr
xor
pop
rol
add
pop
adc
inc
or
and
cmp
loop
jae
ja
adc
mov
sbb
and
icebp
sub
rcl
jmp
inc
or
int3
add
push
xchg
add
mov
fist
ror
test
or
mov
loope
inc
out
movs
lods
rol
inc
push
cmc
fsub
sbb
cmp
adc
gs
ret
in
jmp
outs
mov
jbe
add
sbb
gs
mov
inc
cmp
(bad)
jg
inc
(bad)
sbb
and
xor
pop
add
call
js
dec
and
adc
lods
mov
cmps
ss
out
dec
adc
add
in
int3
or
xor
xchg
call
mov
mov
adc
add
push
pop
pop
add
lods
sar
not
adc
lahf
and
push
push
pop
push
sar
cld
enter
add
std
or
jne
dec
pop
dec
inc
pop
push
popf
shl
jnp
pop
adc
addr16
add
mov
call
adc
inc
mov
inc
pusha
loopne
pop
cs
je
cmp
in
add
dec
stos
dec
mov
add
mov
and
dec
cld
clc
daa
and
adc
or
aaa
popa
push
pop
jle
in
sbb
cld
add
or
cmp
sbb
or
jmp
or
push
mov
xor
adc
and
push
ds
and
cld
mov
clc
es
fcomi
js
mov
mov
popa
inc
mov
dec
fsubr
clc
int3
pusha
mov
sub
fbld
sahf
mov
or
jbe
int3
jae
cs
aas
lea
add
add
push
xor
out
scas
mov
cmp
lea
push
mov
push
jbe
and
pop
mov
rol
fldenv
or
push
movs
rol
pop
pop
lock
test
add
into
js
push
je
cdq
sub
mov
mov
(bad)
push
sub
lea
push
fabs
mov
jbe
daa
mov
loop
and
sub
pop
dec
std
pop
adc
xor
and
aas
sbb
push
int
sar
jle
lea
daa
test
hlt
or
mov
dec
lock
dec
sub
add
pop
mov
call
das
xchg
pop
dec
inc
push
jle
sbb
(bad)
jb
push
push
inc
add
push
xchg
pop
pop
movs
pop
call
push
add
mov
ret
mov
xor
cmp
movs
or
js
pop
sub
add
arpl
xor
fadd
add
and
test
add
cmp
or
pop
pminub
ror
and
into
sub
shl
cli
mov
xor
lds
adc
or
jmp
jp
retf
pop
push
and
push
or
or
or
pop
push
and
cmp
pop
test
lock
sar
shl
add
nop
adc
bound
outs
jecxz
mov
add
mov
inc
inc
jo
sbb
dec
daa
test
add
mov
mov
test
push
or
jmp
mov
mov
jmp
lea
sub
cmc
push
ds
cmc
rep
inc
sub
push
ins
or
or
xor
mov
out
cmp
add
or
je
push
mov
(bad)
sbb
lods
mov
cld
call
add
adc
out
pop
test
push
pop
sub
adc
mov
mov
mov
movs
ror
add
adc
movs
cmp
imul
push
call
push
cmp
or
shl
push
shl
xor
je
inc
movs
inc
and
push
paddusb
sahf
mov
lock
fcmovnbe
dec
pop
sbb
cmp
inc
adc
out
repz
lea
test
not
push
retf
or
lea
dec
test
hlt
push
test
jb
jae
and
mov
mov
mov
mov
push
dec
mov
or
xor
jge
sub
push
lock
jecxz
bnd
(bad)
sub
int
dec
jbe
pop
enter
mov
push
cmp
add
fcom
ret
fidiv
pop
arpl
in
xchg
xchg
das
push
push
in
xchg
es
pop
stc
sbb
add
jnp
(bad)
in
push
sbb
inc
adc
push
sub
(bad)
xor
add
fbstp
jmp
mov
sbb
loopne
in
loopne
inc
sti
cmp
mov
inc
inc
adc
cs
cmp
stc
cs
sub
pop
inc
dec
inc
pop
dec
dec
repz
mov
stos
aas
push
and
lods
out
ins
test
jb
fnclex
sub
sbb
mov
add
fnsave
mov
iret
jmp
addr16
mov
add
mov
inc
add
add
clc
stc
push
pop
sbb
jo
mov
push
leave
test
xchg
(bad)
in
hlt
jle
enter
adc
and
sub
int3
add
jo
add
ficom
sbb
test
(bad)
sbb
sbb
mov
into
mov
sbb
xchg
jge
inc
push
sbb
inc
(bad)
clc
cmp
jne
add
xchg
push
test
and
sub
or
adc
add
jmp
data16
xchg
stc
jmp
xor
aas
jmp
add
mov
out
(bad)
jecxz
bswap
loopne
xor
add
inc
push
(bad)
movs
icebp
gs
ret
or
popa
call
adc
and
inc
pusha
adc
jno
mov
jge
sti
jle
jns
cmp
push
movs
popa
sub
adc
pop
movs
push
add
and
aas
(bad)
clc
or
mov
lock
cmp
pusha
mov
ins
pop
lods
and
or
push
aad
adc
ins
dec
mov
jb
shl
sub
adc
pop
lea
adc
test
push
es
mov
sbb
in
push
shl
popf
scas
mov
lahf
add
jnp
shr
push
enter
add
js
jb
mov
pop
xchg
fadd
ret
sub
xchg
add
jmp
sti
ins
ror
rcl
add
fdivr
or
lock
mul
(bad)
lsl
jmp
lock
push
push
inc
shr
rcr
shr
rcr
or
xchg
xchg
cmp
div
pop
dec
test
mul
pop
jb
cmp
or
cmp
or
rol
push
adc
stos
test
jle
neg
inc
(bad)
retf
scas
enter
pop
ret
adc
ret
sub
je
sar
xchg
stos
pop
jmp
jbe
and
mov
inc
adc
(bad)
cmc
inc
in
add
and
inc
xor
call
cwde
jbe
xchg
or
xchg
icebp
cmp
sub
pop
or
pusha
mov
mov
xchg
add
cmp
push
cmc
jmp
stos
test
xchg
mov
repnz
adc
mov
dec
cmp
not
adc
inc
and
add
xlat
mov
add
sub
mov
push
repz
xchg
inc
clc
pop
xor
inc
add
push
sbb
and
sbb
cmp
sbb
ins
and
out
mov
xchg
and
ret
ret
es
pop
ret
mov
push
call
and
and
add
xor
in
out
fild
push
push
pop
nop
imul
add
cmp
mov
sub
inc
loopne
xchg
popa
adc
jmp
jne
push
add
test
out
cmp
pop
inc
cmp
mov
add
stos
adc
shl
(bad)
popa
dec
add
push
fs
push
mov
fadd
dec
and
loope
or
pusha
(bad)
and
or
pop
inc
push
inc
push
or
xchg
retf
movs
mov
add
lock
adc
cmp
mov
or
pop
outs
je
add
or
jge
dec
cs
xchg
jbe
and
in
rep
fsub
cmp
inc
and
sbb
sub
sub
mov
movs
cmps
cmc
rol
add
cwde
push
pop
cmps
mov
daa
loop
les
je
mov
sub
or
xchg
sub
mov
xor
sub
mov
imul
inc
push
push
add
mov
xchg
xchg
fadd
add
pop
push
imul
push
add
adc
pusha
iret
call
mov
sar
ja
dec
fcomp
aam
sar
push
data16
ret
push
je
mov
js
test
sub
push
(bad)
mov
sub
push
mov
fcomp
test
int3
cmp
mov
lds
lods
int
mov
jmp
adc
outs
push
retf
dec
(bad)
jae
adc
imul
inc
push
lods
mov
xchg
jbe
dec
xchg
fdivr
icebp
lock
nop
aam
xor
in
adc
inc
inc
fidiv
jge
add
aad
mov
mov
and
enter
jae
push
sub
push
into
sub
push
jmp
cmp
jg
inc
jmp
mov
mov
data16
jne
imul
bound
fnsave
movs
dec
push
inc
mov
enter
jno
in
dec
xor
jbe
je
dec
xor
je
mov
xchg
mov
rol
xor
icebp
xor
pop
aad
(bad)
and
mov
push
adc
and
add
adc
push
stos
xor
mov
bound
sbb
sub
adc
jnp
call
jge
mov
sahf
jge
jae
add
push
and
mov
aaa
xor
or
scas
add
mov
push
(bad)
pop
stc
xor
(bad)
pop
inc
rcl
std
dec
add
mov
cli
and
shl
test
push
pop
pushf
or
(bad)
shl
call
mov
cmps
jmp
mov
jp
xor
sub
and
mov
cld
adc
ja
mov
sub
rol
clc
ret
adc
or
and
mov
test
js
xchg
adc
and
or
das
adc
push
gs
and
fild
pop
cmp
or
cdq
sbb
rcl
pop
not
stc
loopne
mov
stos
sub
inc
lock
popa
and
xchg
add
or
adc
outs
xor
fs
push
fs
and
icebp
jg
into
std
or
and
or
xor
mov
or
je
xchg
cli
adc
lea
lea
or
mov
jnp
out
sahf
pop
jbe
cmp
push
sbb
sbb
fmul
or
faddp
fiadd
loopne
push
pop
inc
mov
adc
adc
push
push
add
and
inc
jle
ret
mov
mov
mov
(bad)
and
push
add
jno
push
cmp
and
loop
mov
push
push
daa
shl
(bad)
push
xor
jo
mov
push
dec
mov
leave
ds
arpl
ret
jmp
push
add
out
bound
enter
xlat
ins
enter
js
adc
add
or
jo
outs
rol
jl
or
sbb
cmps
shl
push
sub
add
jns
mov
pop
push
hlt
cmp
cmp
retf
cmp
and
movs
pop
mov
xchg
and
pop
adc
test
aas
push
ds
call
add
xor
xor
(bad)
loopne
repz
mov
jg
jo
scas
call
aam
sbb
in
rol
cmps
mov
pop
cmp
sahf
fs
add
sub
mov
xor
ins
je
sub
and
push
or
sub
ss
dec
hlt
push
mov
push
imul
adc
loopne
mov
jmp
imul
pusha
jg
call
stos
ret
add
adc
adc
scas
add
and
clc
das
xor
lock
mov
gs
adc
ds
rol
pop
ja
and
push
adc
adc
movs
fisttp
jp
mov
adc
add
(bad)
ret
xor
adc
push
sub
ss
or
push
xor
lock
out
xchg
inc
mov
mov
das
ficom
push
mov
cmc
pushw
mov
adc
sti
add
mov
inc
fsubr
es
outs
sub
inc
jmp
mov
cli
popf
push
leave
xor
dec
sub
jg
sbb
xchg
pop
cmps
daa
add
sub
adc
cmp
jge
and
inc
mov
push
or
ror
nop
dec
fsubr
cmps
mov
or
loopne
icebp
cmps
mov
cmp
jecxz
aas
ins
popf
std
sub
push
lods
mov
cmp
and
or
std
inc
jmp
push
mov
cs
push
or
xchg
aad
rcl
lea
and
cmps
nop
out
add
mov
aad
or
and
sub
add
fcom
dec
sub
or
das
jl
inc
push
mov
movs
and
mov
fwait
mov
stos
popf
push
mov
scas
and
sbb
push
pop
mov
cmp
jle
jle
sub
cmp
xor
popf
shl
sbb
jmp
dec
push
in
jbe
cmp
inc
sub
jae
ret
or
cld
data16
ret
test
sbb
sbb
mov
sub
ins
xor
mov
pop
jge
iret
rcr
mov
fucomp
jge
neg
movs
jne
repnz
cs
mov
jae
imul
sbb
inc
popa
cmp
and
dec
jo
xchg
rcl
outs
js
push
bound
lahf
and
cmp
jnp
lea
push
and
inc
mov
xor
mov
push
movs
jbe
sub
mov
mov
loopne
je
mov
loop
sub
in
mov
popf
es
ins
ret
repnz
sbb
add
or
loope
test
fnsave
clc
inc
jmp
sahf
dec
dec
or
cmp
cmp
inc
cmp
and
dec
mov
ja
lock
cmp
or
jecxz
call
push
inc
jmp
cmp
int3
je
(bad)
pop
xor
scas
mov
dec
push
adc
jne
stos
pop
ror
aas
enter
stos
xchg
push
fsubr
cwde
jge
dec
aam
jb
dec
adc
loop
out
sub
cmp
cmp
mov
mov
pusha
movs
sub
mov
out
in
mov
or
sub
xor
jne
add
xchg
mov
loope
add
ss
cli
int
call
add
aaa
or
and
add
mov
push
data16
movs
xchg
cmp
add
enter
ret
cmp
mov
out
add
jne
pop
neg
sar
rol
dec
pop
daa
lea
nop
inc
mov
jne
inc
xlat
jae
inc
not
pop
mov
push
or
mov
xchg
aas
into
ja
mov
(bad)
dec
adc
pop
inc
test
out
jne
sbb
cs
lock
(bad)
sub
dec
retf
jne
inc
or
pop
adc
cmp
pushf
and
iret
int3
call
and
pop
xchg
nop
(bad)
fwait
add
cwde
xchg
test
push
pushf
ins
fild
push
lea
call
test
mov
adc
clc
and
cld
sub
mov
cmp
jb
mov
push
mov
inc
ja
mov
inc
cmp
ins
mov
xchg
pushf
xor
imul
movs
mov
sbb
sti
jg
adc
add
xchg
loop
sub
in
shl
shr
pop
ins
jmp
jmp
push
adc
mov
bound
or
adc
inc
mov
lea
xchg
mov
aaa
or
jmp
jg
and
shr
shl
shr
or
mov
mov
adc
sahf
dec
mov
jne
outs
mov
mov
aam
das
mov
push
sub
push
cmp
sub
jne
xchg
jo
sar
sub
(bad)
rcr
loopne
aaa
xchg
fiadd
mov
pop
inc
jo
fiadd
push
out
jmp
mov
in
aad
fisubr
push
lds
add
dec
mov
mov
mov
and
push
int3
jmp
hlt
push
or
daa
mov
inc
add
outs
pop
lods
test
jmp
ret
jne
add
add
add
or
xor
dec
adc
jmp
sub
test
sbb
sub
repnz
movups
xchg
pop
xchg
jo
mov
inc
mov
mov
inc
sbb
add
out
add
and
push
ret
or
iret
repz
test
enter
push
out
imul
ret
call
mov
or
add
test
adc
sbb
mov
dec
jecxz
sub
push
outs
clc
add
pop
int3
sbb
jne
xchg
pop
jno
mov
arpl
cmp
mov
add
xor
add
fadd
or
cmp
pop
test
arpl
pushf
add
or
jne
dec
fld1
mov
(bad)
push
add
mov
sbb
dec
adc
jo
in
ret
mov
rcl
repz
inc
sbb
mov
(bad)
push
outs
cmp
mov
xchg
std
ins
ret
dec
mov
mov
pusha
xchg
inc
mov
test
pop
pop
lea
adc
fwait
mov
imul
ror
sbb
push
and
pop
add
ins
fs
xor
inc
outs
test
or
pop
call
inc
outs
pop
rcl
dec
sar
pop
ror
retf
mov
sbb
push
jno
iret
jmp
sbb
hlt
and
loope
cwde
pop
mov
xchg
inc
lahf
cmps
jns
movs
lods
movs
adc
mov
test
sahf
add
push
add
or
push
(bad)
lock
shr
dec
xor
push
call
xor
or
repnz
mov
pop
jmp
ret
jmp
mov
imul
push
xchg
or
jmp
mov
in
sti
cld
add
push
in
add
or
fs
cmp
movs
iret
lock
inc
loope
push
lea
std
jg
iret
add
leave
sar
mov
aas
or
test
adc
and
sub
mov
adc
test
cmp
retf
loope
cmp
push
push
mov
mov
sbb
cdq
lods
loop
inc
loopne
inc
pop
ret
test
sub
in
loopne
clc
(bad)
sub
inc
push
mov
rcl
jmp
pusha
cmp
mov
cmp
(bad)
cmovb
popf
and
pushw
push
sub
xchg
enter
push
inc
mov
add
add
mov
js
mov
mov
add
(bad)
fist
outs
adc
push
hlt
mov
and
test
sbb
outs
jmp
and
jae
pop
imul
sub
add
mov
enter
scas
fsub
in
adc
popa
xchg
inc
adc
fadd
inc
call
jmp
mov
adc
dec
inc
outs
mov
push
dec
hlt
lea
pop
or
inc
pusha
jge
cmp
pusha
xchg
sbb
lea
add
jns
lock
mov
rcr
pop
add
cmps
inc
mov
shr
jo
not
mov
inc
cmps
int
push
test
(bad)
push
or
add
jmp
cmps
mov
sbb
(bad)
cmp
test
jne
gs
inc
xor
mov
pusha
cmps
sbb
pop
ret
jnp
sub
push
jmp
sub
inc
sub
inc
cmc
scas
dec
mov
jl
pusha
dec
iret
test
arpl
mov
add
add
pop
cld
jnp
mov
std
sub
jge
mov
mov
inc
mov
sbb
add
xchg
dec
xor
enter
or
out
ret
and
mov
std
xchg
clc
jo
inc
retf
movs
adc
dec
xor
jae
mov
pushf
loopne
imul
jmp
sbb
push
add
pop
movs
lds
xchg
and
out
sub
jne
jge
(bad)
dec
cmp
ret
sub
clc
and
les
push
xor
jne
push
sbb
shl
and
jns
add
or
adc
fiadd
into
jg
sbb
movs
or
pop
data16
mov
test
sub
sbb
and
or
and
add
mov
(bad)
movs
sub
(bad)
push
jne
sbb
adc
xchg
inc
rol
push
cmp
jmp
mov
lock
dec
test
push
(bad)
shr
adc
lock
enter
lods
std
cmps
test
inc
push
es
and
sub
fiadd
mov
mov
test
or
mov
jg
jmp
push
mov
and
mov
sbb
pop
xchg
aas
push
jae
adc
inc
lods
cmp
out
sub
mov
cs
loope
pop
neg
add
ret
mov
fidivr
adc
rdtsc
and
cmp
retf
and
sbb
into
push
xchg
cmps
or
jmp
les
test
or
mov
cmp
sub
pop
test
icebp
and
or
lds
les
lock
loope
inc
ss
icebp
jbe
retf
jmp
sbb
mov
addr16
xor
(bad)
adc
or
mov
push
fsub
inc
out
or
xor
inc
mov
mov
fwait
dec
test
xchg
add
add
xor
cmp
int3
inc
popf
mov
mov
mov
mov
adc
fcomp
push
nop
mov
mov
and
cmp
mov
jns
shl
or
xchg
push
inc
push
mov
push
(bad)
adc
pop
xor
es
aaa
scas
lock
je
aaa
inc
ins
pop
cmp
aad
mov
mov
jmp
test
push
and
enter
jl
add
jg
jmp
add
js
pop
sbb
xor
shr
or
aaa
mov
cmp
cmp
loope
add
mov
jle
jmp
jb
ret
(bad)
mov
add
inc
call
adc
or
clc
pop
adc
push
inc
mov
dec
ret
pusha
push
sar
inc
mov
dec
add
push
xchg
push
dec
retf
push
or
loope
jmp
xor
xor
mov
dec
add
adc
test
rcl
push
into
push
and
jecxz
lahf
les
cmp
and
pop
add
cmp
sbb
xchg
data16
push
and
test
jb
daa
or
sub
inc
nop
mov
add
sbb
and
addr16
push
loopne
push
inc
dec
pop
shl
mov
daa
mov
mov
and
inc
jl
mov
scas
add
inc
lods
xchg
(bad)
sbb
data16
rcr
push
and
sbb
add
push
inc
in
in
push
mov
(bad)
or
fdiv
push
enter
mov
jo
(bad)
or
push
out
and
pop
cwde
(bad)
push
jne
push
jge
mov
out
int
xor
pop
movs
dec
rcr
or
fcom
cmp
call
(bad)
push
pop
inc
inc
pushf
or
sbb
mov
adc
ret
std
add
test
push
push
push
jnp
xchg
pop
pop
jne
pop
push
pcmpeqw
sbb
add
adc
or
js
or
(bad)
in
or
(bad)
mov
xchg
mov
adc
xor
retf
les
push
jmp
cwde
clc
pop
dec
cmp
mov
in
inc
(bad)
mov
or
push
dec
icebp
imul
add
(bad)
adc
adc
mov
imul
dec
or
in
xchg
and
or
cmps
shr
clc
mov
fadd
or
push
sbb
dec
cmp
pop
dec
and
push
push
jne
jge
push
rcl
test
xor
cmp
push
mov
or
movs
sbb
fisub
or
jmp
nop
or
cmp
and
adc
push
mov
mov
mov
mov
sub
pop
push
mov
adc
jno
lods
in
mov
jge
add
cmp
test
xchg
push
and
(bad)
sub
cwde
or
int3
mov
jo
inc
mov
pop
inc
fnstsw
mov
sbb
inc
mov
or
in
in
out
add
or
bound
adc
adc
icebp
cmovnp
pop
add
loopne
jmp
cwde
or
les
xchg
das
mov
or
cwde
daa
push
adc
jmp
jbe
or
push
test
mov
inc
inc
dec
cld
mov
rol
das
out
sub
inc
pushf
xor
mov
ret
add
add
bound
inc
loop
push
push
pop
and
sbb
pop
add
adc
or
stc
jb
jmp
xchg
inc
stos
sub
call
add
push
or
mov
xor
or
clc
jnp
cmps
or
add
inc
in
test
pushf
push
cs
arpl
sub
or
add
out
and
inc
fsub
movs
out
add
rcr
nop
sub
shl
sbb
aad
je
(bad)
jl
xor
push
ret
sub
pop
inc
test
cld
pop
in
(bad)
cmp
jne
cwde
add
add
xchg
xor
test
mov
push
adc
jge
mov
rcr
push
movs
xor
mov
pop
mov
mov
dec
(bad)
cs
and
jmp
fistp
inc
or
je
sar
inc
cmp
mov
movs
push
sub
add
push
mov
dec
jp
sbb
or
imul
mov
or
and
sbb
cmp
mov
fdiv
mov
add
in
cmp
lahf
daa
test
lods
jle
call
scas
adc
fisttp
call
jne
stos
out
repnz
sub
pop
or
inc
mov
add
stos
clc
adc
jle
out
arpl
mov
mov
movs
dec
mov
sbb
mov
inc
add
enter
xchg
out
retf
adc
sbb
iret
add
(bad)
jg
cmp
call
les
jae
add
loope
mov
jo
push
push
in
xchg
pop
sbb
addr16
addr16
jmp
and
add
mov
adc
jo
jecxz
(bad)
cdq
mov
or
cmp
cmp
adc
in
jbe
ss
in
in
sub
xor
int
loopne
cmp
inc
leave
leave
in
movs
and
inc
cmovs
leave
leave
push
push
pop
add
jb
fs
jb
je
jl
iret
sbb
add
adc
fs
dec
mov
xchg
cwde
pushf
dec
es
mov
dec
repnz
xor
enter
leave
and
es
xchg
dec
xor
in
xchg
dec
xor
in
aam
hlt
dec
xor
and
cld
add
inc
jo
inc
add
add
xor
or
adc
and
sbb
and
and
dec
sub
and
dec
xor
cmp
xchg
dec
rol
dec
dec
es
jbe
mov
daa
cdq
fs
pop
pop
pusha
sbb
cmp
jg
pop
add
add
or
add
test
push
ror
xor
mov
xor
call
mov
and
adc
nop
adc
ror
sbb
xor
and
and
cmp
cmp
mov
dec
rol
int
xor
dec
int3
add
sub
enter
pop
sbb
mov
adc
add
loope
js
ret
and
and
jmp
or
push
je
dec
repz
sub
fcom
sbb
pop
push
or
jle
dec
sub
pop
add
xchg
xor
sub
faddp
jle
xlat
mov
retf
and
sbb
dec
xchg
add
or
or
out
and
mov
mov
or
not
xor
loope
xor
and
pushf
sbb
or
jmp
xchg
fucomi
add
and
rcl
add
test
js
add
fcom
adc
xchg
test
dec
cmp
fcmovbe
xor
ss
mul
shl
and
test
ror
or
sub
or
call
add
pop
or
retf
jmp
inc
popf
mov
mov
cld
mov
and
jae
mov
sbb
add
or
dec
or
jg
dec
clc
or
or
inc
and
sbb
es
inc
jmp
aas
pusha
mov
pusha
loope
pop
add
push
jmp
sbb
xchg
push
sahf
sub
pop
fstp
cmp
ds
pusha
fld
cmp
(bad)
jmp
mov
loope
dec
jg
test
dec
in
mov
(bad)
adc
sti
add
pop
jns
test
fistp
xchg
sub
mov
imul
jne
or
and
adc
or
add
add
out
and
sbb
or
jnp
jb
sbb
jmp
push
and
or
push
or
std
fwait
adc
inc
push
fstp
jmp
fisttp
sub
adc
fld
aam
outs
loope
push
hlt
adc
push
stos
push
jbe
je
adc
div
push
sbb
push
cmp
push
xor
test
or
add
push
or
inc
call
loope
push
aaa
sbb
mov
test
out
cmp
pop
add
rol
fsubr
dec
sub
sub
jmp
sub
jb
jp
push
or
das
add
lods
sbb
test
das
add
sub
dec
add
mov
rcl
mov
inc
mov
dec
xor
mov
push
add
mov
add
sbb
in
or
test
xchg
mov
frstor
jne
(bad)
repz
mov
push
mov
test
rcl
jg
(bad)
data16
pop
xchg
scas
(bad)
cld
aam
xchg
mov
cli
shr
ficom
or
stos
xchg
sub
jle
jp
addr16
push
pop
jmp
pop
data16
lock
icebp
lock
pop
call
cmps
mov
sbb
jae
push
pop
cwde
out
add
addr16
jle
push
add
push
sar
sar
fistp
and
pop
mov
jmp
push
pop
adc
adc
ret
and
call
add
outs
add
dec
pop
fsub
inc
cmp
je
(bad)
sbb
fmul
pop
cdq
cmps
imul
and
hlt
adc
and
je
pushf
sub
cmps
add
scas
stos
and
or
sti
dec
and
out
push
cmp
fstp
inc
popa
add
fsubrp
mov
mov
leave
dec
inc
outs
mov
and
lock
add
test
popa
inc
js
or
or
mov
ss
jle
or
fild
sub
xchg
cmp
sub
lock
or
add
or
mov
cmp
adc
jae
mov
and
jbe
shr
(bad)
push
das
adc
inc
cmp
scas
mov
imul
(bad)
push
xchg
or
jl
push
jno
add
add
push
or
mov
out
jne
je
mov
xchg
loopne
jecxz
into
shl
dec
add
push
cmp
add
shufps
mov
stos
xchg
retf
lock
or
(bad)
sbb
dec
add
push
mov
sub
into
pop
out
addr16
mov
sbb
inc
and
ret
lea
sub
(bad)
enter
test
dec
out
fld
fucomp
pop
fnstcw
lahf
add
mov
mov
xchg
or
dec
pop
and
mov
adc
sbb
shl
push
or
js
mov
adc
add
or
push
out
mov
sbb
or
or
push
and
jo
mov
sbb
sub
or
sub
push
sbb
hlt
mov
dec
jmp
xchg
jnp
fnstsw
movsx
shl
inc
fld
and
ror
xchg
xor
fdiv
or
ins
lahf
and
mov
push
push
mov
or
or
nop
fcmovnbe
fwait
mov
adc
sbb
pop
mov
adc
repnz
jp
sbb
lea
movs
fldpi
xor
mov
or
sbb
adc
add
sbb
push
retf
dec
sbb
xor
push
cmp
xsaveopt
pop
ins
test
mov
mov
cmp
or
and
pop
popa
cmps
xchg
out
jmp
and
cs
ins
mov
push
jg
xchg
int3
or
cmps
test
mov
dec
int
mov
jo
and
stos
push
pop
inc
js
test
lock
mov
nop
es
mov
inc
(bad)
mov
popa
mov
sbb
sahf
adc
push
ja
inc
mov
test
sbb
push
(bad)
pushf
add
call
dec
sbb
imul
mov
add
jo
fwait
mov
ror
je
push
cmp
test
repz
push
sti
jbe
xchg
les
test
pop
js
adc
daa
xor
push
jb
sub
or
loope
push
mov
add
jne
retf
pop
les
inc
std
cmp
stos
or
or
mov
dec
imul
dec
push
or
inc
cdq
lock
add
jle
sub
pop
test
test
sti
into
jne
mov
mov
mul
pop
test
in
sub
jl
mov
xchg
fisubr
stos
stos
jp
pop
pop
push
mov
jbe
cmp
push
test
ror
push
mov
push
push
pop
add
popa
gs
xor
cmp
ret
dec
or
sbb
fiadd
mov
pop
mov
retf
push
inc
xor
rol
jmp
retf
loop
rol
cmp
and
fwait
sti
std
dec
dec
pop
pop
and
mov
out
mov
fsub
iret
loopne
adc
iret
ds
dec
imul
outs
mov
add
cs
or
and
clc
sbb
sub
cmp
inc
dec
inc
(bad)
push
pop
addps
add
lock
sahf
jns
add
sar
and
mov
mov
or
cmp
pop
pop
clc
in
cmp
add
xor
daa
or
idiv
pop
or
push
js
sub
inc
aam
iret
inc
mov
dec
xor
cmp
pop
add
das
das
call
inc
loopne
dec
aam
lock
shl
sub
sub
in
lea
xor
adc
iret
push
ds
push
or
dec
dec
scas
and
aam
out
ret
xchg
and
inc
loope
test
fwait
or
pop
sub
mov
sbb
mov
and
lahf
or
cwde
pop
jb
xor
push
and
test
lods
daa
dec
fbld
sbb
test
arpl
(bad)
dec
cwde
ror
loopne
rcr
dec
xor
cmc
and
sbb
add
jmp
pop
push
push
jb
or
add
mov
cmp
push
daa
jo
sbb
cmc
hlt
cmp
sub
push
aas
mov
sbb
xor
mov
inc
ret
frstor
jge
lock
movs
addr16
das
cmp
test
arpl
arpl
daa
add
shl
sub
andps
cmp
lock
stos
pusha
out
into
(bad)
out
add
(bad)
test
icebp
es
mov
and
mov
sub
mov
and
jge
mov
dec
lods
shl
test
cld
pusha
mov
jo
or
xor
xor
inc
or
fisub
dec
add
retf
nop
retf
or
inc
lock
and
push
or
cs
or
sbb
push
xchg
dec
push
in
inc
push
sub
mov
push
jne
in
push
mov
push
pop
dec
sub
pop
mov
push
pop
adc
mov
or
lock
dec
retf
push
adc
mov
or
stc
add
jbe
(bad)
pop
jne
cmp
js
add
das
xor
es
mov
jle
inc
mov
fmul
stos
mov
adc
or
repz
nop
mov
fcom
xor
sti
scas
push
mov
xchg
cmp
ins
idiv
pop
inc
cs
or
ss
cmp
je
or
clc
mov
xor
mov
dec
add
mov
add
sbb
sbb
add
or
mov
imul
add
add
sbb
and
fcomp
fistp
jb
inc
adc
cdq
dec
enter
outs
push
and
das
push
inc
leave
into
mul
inc
(bad)
iret
test
add
adc
push
jbe
xchg
or
xor
pop
loop
xchg
xor
adc
adc
push
add
adc
cmp
xchg
xchg
xor
sub
rol
fadd
or
sub
rcr
or
fdiv
or
jle
xor
scas
cmp
ret
scas
dec
loopne
push
pop
sbb
ror
sub
dec
(bad)
adc
inc
les
sub
mov
popf
mov
inc
cmp
mov
aam
shl
sub
adc
push
pop
xchg
jecxz
adc
or
sbb
xchg
add
lods
(bad)
ja
push
xor
jmp
sub
add
mov
mov
aad
sbb
mov
cmps
push
hlt
mov
mov
inc
aam
das
fsubr
mov
fadd
inc
add
fs
cdq
popa
cmp
push
call
or
rcr
test
call
fld
push
push
mov
daa
test
ins
in
jns
and
dec
or
xchg
push
mov
or
pop
gs
cmp
adc
movs
and
and
mov
iret
ret
jmp
aad
and
scas
jmp
sbb
sub
adc
ja
add
adc
movs
push
push
adc
shl
or
retf
sbb
inc
sbb
pop
gs
or
mov
jmp
inc
shl
out
pop
xor
test
push
fadd
xor
xchg
mov
pop
add
xchg
test
mov
stos
cmp
jge
adc
cmp
push
inc
and
jb
xchg
ss
mov
or
mov
(bad)
cli
mov
enter
or
or
adc
cld
push
and
fstp
mov
or
jne
jb
sub
imul
lea
xchg
sub
cmp
inc
bound
cmc
mul
test
sahf
push
add
sub
dec
sbb
test
enter
js
and
bound
pushf
std
das
fdivr
sub
leave
and
add
or
sbb
mov
(bad)
and
mov
xchg
movs
mov
neg
sbb
mov
adc
and
adc
jg
ret
pop
hlt
es
bound
shl
add
xor
popf
gs
(bad)
or
dec
sub
pop
fidivr
daa
and
call
xor
push
jb
add
cwde
push
inc
aam
fisub
or
mov
fld
ja
setns
mov
or
xor
push
add
dec
loopne
push
clc
gs
sbb
rol
(bad)
fadd
mov
cmp
xchg
push
adc
fs
cld
add
inc
mov
enter
mov
dec
cmp
jge
mov
jl
movs
clc
cwde
xor
mov
mov
xor
out
and
cmp
push
shr
pusha
cmp
(bad)
sub
inc
push
adc
sahf
xchg
add
daa
and
ficomp
lock
push
ret
mov
xor
jo
out
shl
dec
nop
in
and
push
ret
in
sbb
js
jg
or
or
jmp
adc
or
shl
fimul
jle
cmp
jl
mov
fcmovb
jb
xchg
xchg
sbb
add
cwde
push
in
lock
or
add
(bad)
rcl
dec
dec
inc
dec
pop
ror
sub
jb
or
sbb
cmp
sar
in
in
icebp
push
or
jo
and
and
adc
es
mov
dec
adc
push
loopne
mov
mov
push
inc
cmc
mov
shl
push
jle
jmp
cmp
push
sbb
lods
add
jmp
lock
sahf
fwait
lods
inc
enter
cmp
neg
call
adc
lock
cli
ret
aaa
push
lods
sbb
pusha
add
inc
mov
aas
mov
push
push
ins
shr
lock
repnz
je
aad
or
inc
and
jbe
adc
add
bound
or
push
push
mov
add
sbb
jne
push
adc
bound
nop
cmp
pop
sbb
sbb
push
sub
cmp
sbb
enter
push
lock
push
push
scas
sbb
out
dec
out
sbb
add
loopne
jge
inc
or
pop
inc
mov
mov
push
add
sub
add
cmp
sbb
mov
ds
and
(bad)
fnstenv
outs
outs
mov
pop
or
pop
data16
in
add
imul
lds
aaa
inc
popa
je
inc
je
dec
add
add
cmp
xor
xor
sub
pop
sub
int
mov
sbb
push
mov
add
xchg
and
add
bound
add
sbb
inc
mov
mov
and
arpl
add
pop
cmp
push
mov
or
sbb
test
and
out
ds
and
ins
daa
push
adc
cmps
xchg
cmp
jne
nop
cwde
mov
test
cwde
push
xchg
sar
push
fprem
popa
sbb
hlt
adc
test
push
inc
dec
mov
mov
cmp
not
jmp
inc
mov
hlt
ja
in
and
mov
pop
mov
sub
add
aam
mov
lea
and
add
inc
test
setnp
jno
dec
sti
push
test
loop
push
pop
pop
dec
xor
gs
sub
and
stos
sub
ror
mov
std
es
pop
ret
push
add
adc
xchg
movs
jle
or
mov
and
fidivr
aam
jbe
add
cmp
push
sub
test
sub
movs
push
mov
pop
inc
mov
cmp
nop
xchg
adc
and
dec
fwait
xchg
mov
mov
cmp
mov
rcl
cmp
cmp
mov
push
mov
fsubr
or
mov
pop
pop
adc
mov
lock
pop
pop
pop
dec
sar
add
jl
cmp
enter
cs
test
jb
adc
test
mov
ss
mov
sbb
dec
je
dec
push
push
or
hlt
jmp
or
jmp
add
inc
out
add
xchg
or
pop
adc
fistp
dec
ja
imul
sbb
push
adc
pop
ret
ror
add
psllw
ret
stos
data16
test
leave
js
add
dec
mov
arpl
mov
dec
xor
gs
sbb
loopne
call
sbb
cmps
enter
loopne
cmc
int3
push
fidiv
outs
mov
or
rcr
fmul
xor
mov
jle
stos
test
or
jnp
and
adc
fiadd
into
or
mov
sub
xor
xor
pop
and
stc
(bad)
push
adc
pop
mov
mov
stos
dec
xchg
or
or
and
pusha
outs
add
sbb
repnz
jmp
inc
add
add
call
ror
or
jmp
add
ja
loop
clc
shr
add
or
xor
add
shr
or
mov
push
push
adc
fistp
shr
retf
add
mov
test
test
or
add
mov
mov
mov
cmp
pop
cmp
(bad)
and
add
jl
adc
movs
dec
in
sbb
cmp
or
dec
push
inc
call
adc
and
sbb
inc
fisttp
cmp
dec
sbb
adc
adc
sub
xor
inc
sub
call
xor
push
ror
cli
and
push
rol
or
add
mov
cmp
addr16
aam
cmps
and
xchg
or
or
test
sbb
gs
inc
stos
xor
push
loope
pusha
fmul
mov
fsubr
add
(bad)
cmps
std
sbb
jne
mov
sbb
dec
rol
or
cmps
or
xchg
or
push
pop
je
data16
sub
inc
data16
lea
outs
sbb
dec
or
lock
pop
add
(bad)
or
loop
leave
mov
sbb
push
inc
test
loope
aaa
push
sub
pop
dec
mov
lea
repnz
sub
ret
fadd
pop
or
cmc
mov
xchg
add
retf
pop
cmps
fs
sub
popa
mul
push
(bad)
stc
and
(bad)
or
adc
ret
mov
and
jno
or
adc
ins
mov
jo
fdivr
ja
pop
pop
xor
stos
sbb
pop
and
and
loope
pop
adc
test
xchg
repnz
ret
mov
sub
add
jbe
jmp
dec
xchg
xchg
dec
icebp
adc
add
sub
push
adc
sbb
mov
and
xor
or
js
or
js
jmp
clc
(bad)
sbb
mov
and
mov
scas
fadd
out
add
aam
sbb
add
pop
je
add
xor
adc
(bad)
add
movs
xor
cs
dec
cmp
mov
push
std
inc
or
and
sub
sub
push
add
mov
cmp
and
or
ds
mov
sbb
add
call
ss
imul
push
inc
adc
loope
rol
push
pop
and
add
leave
cmp
xor
(bad)
aad
(bad)
enter
cmp
in
mov
cmp
jle
inc
call
ja
shl
jp
stos
or
cmps
sbb
mov
fwait
inc
xor
fucomi
mov
xchg
adc
test
and
jl
xor
(bad)
ss
add
xor
inc
aam
push
or
xor
rcl
stc
push
test
or
jns
push
in
jmp
add
test
and
push
dec
test
ins
fwait
or
and
aaa
jne
cmps
sahf
and
push
cmp
sub
mov
aas
jmp
mov
adc
retf
mov
jnp
imul
inc
dec
add
addr16
jbe
rcl
ror
add
ret
or
and
sbb
fprem
out
rol
leave
add
or
(bad)
je
mov
iret
push
inc
cmps
add
adc
inc
sbb
xor
les
bound
enter
ror
xchg
add
movs
sti
lods
pop
xchg
adc
pushf
jo
sub
mov
retf
arpl
popa
sbb
ror
jo
or
scas
mov
push
dec
add
jg
jg
dec
jge
inc
inc
push
neg
neg
cmp
jnp
fcomp
sbb
inc
ss
shl
sbb
xchg
fwait
mov
xor
push
push
or
pop
adc
and
fnstenv
imul
push
jnp
adc
sbb
mov
add
or
jns
mov
dec
jne
pop
pop
pop
aam
shl
adc
xchg
test
lods
rcl
jmp
shr
sub
cmp
adc
shr
pop
push
idiv
and
maskmovq
cld
lock
je
pop
pusha
or
clc
ror
push
shr
cmp
addr16
dec
or
fidivr
pop
add
jae
adc
movs
into
xor
adc
inc
cli
xor
dec
push
es
pop
or
push
or
aad
mov
into
jbe
rcl
aam
aas
xor
scas
je
hlt
dec
and
adc
sar
sbb
dec
inc
push
outs
rol
inc
cmp
cmovae
or
jg
popa
add
arpl
ins
or
sbb
adc
jecxz
dec
pop
pop
and
test
data16
pop
add
push
jmp
cld
inc
ss
adc
sub
and
pop
adc
popa
xor
out
cdq
movs
cmp
cld
mov
enter
fcmove
jne
pop
cmp
inc
jmp
sub
add
rol
inc
push
inc
mov
mov
sbb
or
mov
or
sub
adc
dec
add
es
mov
je
jmp
sub
jl
out
push
cmp
ja
add
cmp
inc
xchg
(bad)
jns
ret
(bad)
cmp
jne
(bad)
sar
je
xor
adc
mov
inc
mov
pop
jl
pop
pop
(bad)
je
dec
push
adc
adc
adc
iret
and
jb
dec
adc
push
and
push
mov
add
imul
or
fdivr
aas
cs
fisttp
push
mov
jmp
or
cmc
push
aaa
and
sti
add
mov
mov
jl
xchg
ret
mov
mov
jb
add
sub
inc
rcr
les
out
xor
pop
mov
popf
test
sbb
ret
mov
lods
sti
test
add
test
mov
fdivr
inc
jb
dec
mov
push
and
adc
ror
adc
push
add
pushf
add
jmp
push
pusha
loop
mov
sub
push
imul
call
mov
imul
lea
sar
cs
mov
dec
into
movsx
xor
mov
neg
push
es
stos
mov
out
jge
cmp
mov
ret
inc
call
cwde
inc
xor
push
rcl
dec
sti
add
jmp
addr16
or
cwde
mov
push
sub
inc
fwait
and
jl
mov
or
dec
(bad)
jle
repnz
call
mov
mov
mov
mov
and
and
lea
out
daa
adc
and
call
mov
mov
add
(bad)
ja
cmps
cmc
mov
dec
ror
inc
test
lahf
push
push
fsubr
mov
xlat
or
inc
adc
loopne
lea
rol
xor
inc
mov
bound
scas
les
dec
or
xchg
pushf
fcom
dec
or
adc
into
movs
xor
sub
xor
cmp
lods
sar
repnz
sub
sub
xchg
mov
xor
pushf
push
mov
jl
lods
fwait
cmps
jge
inc
lods
and
ror
aas
jae
jle
cmp
(bad)
dec
popa
add
rol
rol
nop
popf
loope
pop
or
and
ror
lods
sti
sub
sbb
push
retf
rcr
(bad)
inc
mov
fadd
push
dec
mov
jle
cwde
shr
sar
shr
or
mov
dec
mov
pushf
(bad)
ret
jp
cmc
cmp
lock
dec
and
jnp
repnz
add
cli
adc
repnz
repnz
(bad)
rol
and
and
loopne
rol
es
push
fcom
or
cli
adc
and
fisubr
popa
push
mov
dec
dec
nop
loopne
mov
push
fidiv
fldenv
enter
pop
and
or
push
pop
retf
enter
sahf
out
inc
mov
mov
dec
sbb
add
push
mov
or
inc
shl
clc
out
icebp
push
dec
dec
jge
out
mov
jb
pop
sub
jnp
adc
dec
in
aam
daa
adc
jne
cli
or
rcr
fist
inc
shl
fdivr
aam
enter
int3
(bad)
jbe
dec
sub
movs
sub
sbb
shl
add
and
adc
dec
pusha
or
fmul
or
dec
rcl
mov
sbb
fcmovu
add
mov
or
inc
rcr
cmove
add
xchg
add
(bad)
idiv
and
xor
adc
mov
into
or
adc
inc
inc
mov
(bad)
lock
and
repnz
add
inc
js
pop
hlt
lock
or
inc
jne
jne
cdq
add
loopne
pop
rol
sbb
retf
mov
dec
cmc
out
pusha
add
sbb
sub
xchg
sbb
idiv
xchg
mov
inc
add
inc
mov
dec
inc
cmp
jle
inc
aaa
stos
jmp
sub
and
cdq
and
or
cmp
in
or
rcr
stos
call
sahf
mov
xchg
cli
fcom
xor
fiadd
(bad)
mov
ins
call
mov
imul
call
leave
outs
xor
mov
pusha
lea
push
js
dec
loope
mov
mov
add
call
add
fisub
lods
jbe
add
into
sbb
or
ja
enter
loop
mov
sbb
sti
je
inc
ss
jmp
or
lods
add
enter
outs
fwait
pop
push
sahf
mov
and
dec
int3
add
cmps
sub
test
call
add
add
xchg
add
into
or
mov
inc
jmp
jmp
pop
add
dec
inc
sub
jge
add
jmp
cmp
or
add
dec
cmp
repnz
(bad)
inc
dec
add
add
fadd
and
mov
(bad)
pop
and
sub
mov
jp
jne
loopne
rol
or
or
add
cmp
ja
dec
sub
add
add
add
push
mov
enter
mov
mov
fisubr
mov
or
push
fcom
test
outs
or
stc
retf
add
or
push
push
das
push
movs
adc
pop
or
or
imul
fdivr
pop
scas
ds
or
ret
sbb
adc
mov
inc
cld
mov
ret
movs
shl
or
pusha
inc
adc
jae
test
inc
pop
(bad)
mov
mov
iret
enter
xor
into
pusha
inc
std
rcr
and
pop
pop
in
cdq
lea
pop
cmpps
ret
dec
inc
prefetchw
sahf
inc
ret
or
push
lea
add
scas
rol
xor
jbe
jne
or
or
mov
and
movs
push
or
inc
(bad)
je
pop
mov
pop
rol
push
je
retf
mov
or
sub
rcr
add
stc
sahf
jnp
adc
jne
and
mov
lock
test
add
push
add
shl
ret
cmp
cli
cmp
ret
mov
jl
add
movs
ret
fldenv
sub
adc
nop
clc
mov
inc
es
nop
test
sbb
pusha
xor
push
scas
add
push
or
mov
mov
fadd
inc
es
and
out
or
in
clflush
jge
pop
mov
repnz
test
call
or
adc
pop
addr16
add
fiadd
(bad)
mov
sbb
xor
in
lock
inc
jg
into
into
and
mov
fisttp
sar
push
pop
arpl
push
outs
nop
pop
sahf
pop
mov
aam
mov
daa
mov
or
sbb
stos
push
retf
fcom
loope
pop
xor
push
adc
lock
hlt
add
leave
jge
sbb
cdq
push
pop
addr16
add
movs
movs
adc
(bad)
adc
outs
pop
test
mov
and
mov
inc
shl
or
cmp
pusha
sub
sbb
mov
push
outs
jb
retf
int3
popa
push
sub
xor
pop
sbb
add
jno
add
mov
lahf
xchg
xchg
rol
ret
mov
les
sbb
add
clc
cwde
pop
test
xchg
sbb
inc
and
ds
aaa
mov
mov
rcr
in
popa
dec
arpl
jge
xor
push
cli
add
je
cmp
cmp
cs
xor
jo
div
gs
cmp
add
dec
jo
sar
cmp
sbb
je
dec
fist
call
cmp
je
test
icebp
fmul
sub
icebp
mov
or
cmp
jbe
dec
or
sbb
mov
pushf
pop
out
mov
adc
mov
and
xor
push
or
aam
sbb
jle
out
add
push
les
and
gs
test
daa
push
add
push
mov
inc
pop
adc
loopne
cmp
js
add
and
push
push
fist
fist
xor
mov
pop
fnsave
pop
and
shr
xor
or
shr
add
adc
rcl
inc
popf
inc
popa
adc
test
rcl
add
and
dec
cmps
push
xor
sbb
out
jmp
jne
xchg
fidiv
dec
inc
push
aaa
sbb
dec
mov
scas
push
xlat
mov
ret
add
cmp
ret
pop
add
add
lea
fldcw
fsub
clc
xchg
pop
inc
aam
popf
jmp
mov
aad
sahf
mov
mov
mov
jp
not
add
stos
xchg
xchg
ret
jl
add
adc
out
or
push
loope
aaa
movs
ds
cmc
mov
imul
outs
adc
ret
dec
mov
push
dec
push
pop
xchg
test
sbb
pushf
inc
and
dec
je
cmp
pop
mov
(bad)
mov
fiadd
push
mov
pop
shl
sar
sbb
(bad)
mov
adc
add
push
clc
cli
neg
xchg
gs
test
sbb
enter
xor
dec
sbb
call
mov
sub
jg
stos
test
pop
call
mov
mov
pusha
sub
sub
jbe
jmp
sbb
gs
dec
mov
push
fiadd
test
mov
loopne
jmp
dec
fs
movs
fistp
add
cmp
in
(bad)
sub
push
js
push
icebp
das
retf
mov
mov
add
out
dec
sbb
mov
ins
push
xor
and
ja
and
push
mov
sub
(bad)
sub
add
pop
(bad)
and
mov
or
mov
es
dec
hlt
(bad)
fnstsw
push
mov
je
jg
inc
adc
aam
les
loopne
(bad)
jnp
cmc
clc
mov
pop
cmp
jbe
cld
and
push
push
push
inc
pop
adc
shr
shl
pop
movs
sbb
and
in
ror
(bad)
nop
pop
fs
mov
inc
cmp
repnz
push
and
nop
test
cmc
rcl
retf
lea
add
retf
or
push
add
(bad)
pop
sbb
ds
ins
adc
add
sbb
mov
xor
test
pop
xor
cwde
dec
cli
in
sub
pop
or
(bad)
sub
shr
rcl
push
dec
push
or
out
(bad)
jmp
push
push
ss
clc
addr16
jo
outs
repz
or
movs
sub
in
push
add
in
popa
enter
jmp
add
adc
add
mov
push
add
jg
rcl
clc
xor
sub
jo
dec
pop
inc
add
es
and
push
aaa
enter
inc
cwde
pop
adc
mov
sub
cmp
xchg
pop
rol
shl
fabs
sub
and
mov
cmps
aas
add
add
test
in
adc
inc
push
inc
or
jo
mov
cmp
sub
das
or
lods
test
dec
push
push
pushf
ret
sub
cmp
push
add
out
sar
ror
int3
jmp
sbb
(bad)
sbb
xchg
jg
mov
ins
cld
mov
addr16
or
pop
xchg
loopne
add
test
pop
xchg
les
cmps
clc
jo
adc
mov
sbb
inc
add
jmp
call
cld
mov
dec
outs
scas
cld
(bad)
retf
or
adc
add
dec
test
mov
sar
int
aaa
adc
into
inc
enter
mov
or
fstp
adc
mov
cmp
and
sbb
cmp
mov
push
scas
arpl
xchg
int
mov
fwait
mov
push
(bad)
push
repnz
push
inc
add
or
sub
mov
fisubr
clc
pop
add
mov
rcl
and
dec
stos
sar
add
and
(bad)
push
aam
enter
pop
cmc
pop
sub
add
add
mov
pop
xor
or
push
or
dec
or
clc
std
popa
and
std
data16
xor
inc
and
(bad)
pop
xor
push
or
xlat
or
sbb
adc
fisub
xor
hlt
and
mov
sub
mov
loope
pop
xchg
int3
arpl
out
sub
imul
(bad)
dec
sub
push
outs
mov
fsubrp
sub
dec
adc
xlat
call
inc
imul
add
xchg
jge
cmp
jle
aas
or
movs
jge
loope
cld
jp
inc
mov
sbb
cmp
ja
push
test
fnsave
add
jle
dec
repz
mov
daa
push
inc
scas
inc
mov
inc
cmp
or
jnp
or
test
jg
add
pop
lock
mov
aas
call
mov
pop
lods
xor
push
pop
pusha
adc
shl
inc
ret
call
xchg
push
into
lock
fadd
in
in
mov
popf
rcr
dec
mov
(bad)
xor
dec
add
push
cmp
sub
leave
inc
jo
fst
or
sub
jb
aad
xlat
inc
lea
loope
xor
xchg
retf
push
push
aaa
push
ret
sub
push
xor
mov
add
pop
fs
out
mov
test
or
dec
inc
imul
sub
fcom
inc
loopne
pop
cmp
cmp
sbb
mov
xor
push
and
mov
das
pusha
or
sbb
add
jg
xchg
shr
fdiv
stos
xor
or
imul
cmp
bound
inc
cmp
ja
loope
movd
push
fld
or
cmp
add
push
dec
fbstp
sbb
adc
inc
jns
add
jnp
(bad)
jmp
mul
in
add
and
or
mov
ret
inc
cmp
xor
xor
lahf
cmps
sar
inc
adc
and
and
inc
or
push
sbb
xor
aam
loop
or
std
data16
push
aas
sub
and
call
jl
mov
mov
or
cmp
ret
xchg
adc
or
sub
mov
pop
dec
xchg
jl
jle
inc
and
push
or
add
add
dec
popa
fcom
dec
adc
add
cmp
jle
push
cmp
dec
sbb
movs
cmps
fwait
add
sbb
call
push
push
add
mov
inc
jg
data16
or
popf
sub
add
ins
cmps
inc
add
pop
jl
in
mov
movs
inc
xchg
inc
call
jb
mov
leave
rcl
test
add
cmp
call
ret
loope
add
sbb
fs
mov
ret
(bad)
push
mov
sub
add
jmp
mov
sbb
into
outs
outs
xlat
shr
aaa
loope
fdiv
pusha
pop
push
gs
sahf
je
mov
test
adc
(bad)
jl
outs
jbe
lods
pop
sub
push
adc
aam
inc
jnp
fild
add
adc
cmp
jmp
cmp
jle
cmp
jg
mov
sub
add
xchg
jbe
data16
inc
dec
in
clc
xchg
jg
adc
pop
add
push
cmps
xor
cmps
and
cmp
pop
ds
mov
retf
adc
mov
das
inc
cmp
adc
mov
cmp
xchg
pop
or
push
mov
jp
xchg
ret
ror
jbe
addr16
scas
sub
mov
mov
mov
sti
cmp
adc
or
add
test
xor
inc
inc
push
mov
pusha
(bad)
loop
inc
cmp
jbe
aam
fnsave
repnz
loope
push
mov
or
jo
or
inc
outs
ins
sub
es
or
pop
je
(bad)
fwait
popf
and
inc
loopne
adc
and
inc
sub
jmp
push
sbb
mov
je
xchg
je
mov
(bad)
pop
nop
xchg
sbb
jmp
outs
sbb
sbb
inc
dec
aas
cli
test
cmp
xor
dec
mov
xchg
sbb
not
shl
mov
dec
push
rcl
sub
in
pop
adc
push
xchg
mov
iret
push
dec
je
dec
jne
push
mov
ja
fcom
jmp
add
mov
xor
inc
cli
add
add
cs
xchg
inc
je
push
sub
sub
jne
push
sub
sbb
push
mov
or
int
icebp
mov
mov
arpl
mov
xor
test
jb
jns
cli
push
in
stos
add
xchg
pop
loope
inc
sbb
jne
mov
ret
and
sbb
add
push
xchg
lods
inc
sbb
fsub
push
ss
push
lock
jb
fs
icebp
adc
add
lea
jae
popf
clc
push
lea
mov
inc
clc
ss
(bad)
inc
mov
add
outs
push
je
cmp
sub
add
and
add
xchg
pop
pop
fisttp
jnp
(bad)
clc
cli
dec
cmp
fcmovb
mov
retf
mov
scas
or
xor
pop
sbb
push
xchg
cmp
or
bound
push
fild
cmp
aad
add
pop
and
sbb
xor
xlat
add
adc
sbb
adc
sar
sahf
jecxz
add
xchg
push
ror
stc
dec
mov
std
(bad)
hlt
jne
adc
add
push
pop
dec
jmp
mov
sbb
adc
sub
or
pop
out
jle
jecxz
imul
les
push
xor
inc
call
cmp
jne
pop
enter
dec
sub
cmp
dec
push
js
xchg
push
xor
jne
jg
add
adc
adc
add
(bad)
fmul
scas
and
inc
das
test
(bad)
adc
into
add
xchg
dec
adc
jp
(bad)
pop
popa
inc
lock
or
(bad)
hlt
dec
adc
adc
ins
imul
out
or
fiadd
and
mov
and
dec
adc
test
jmp
or
cmp
fst
adc
enter
jg
jmp
adc
xchg
movs
mov
fadd
sub
and
movs
inc
daa
cli
and
mov
jmp
jb
ret
jb
or
and
mov
push
and
fisub
pushf
and
(bad)
xor
test
adc
test
pusha
push
jno
and
jns
scas
xchg
arpl
bound
add
mov
or
adc
or
inc
retf
les
outs
stc
pop
les
push
sub
ins
ins
and
mov
ret
mov
xchg
jns
xor
adc
inc
pop
mov
(bad)
mov
xlat
je
cmp
das
je
mov
and
mov
test
and
adc
or
cmp
xlat
test
add
jge
push
mov
push
sbb
je
cmp
cwde
jbe
(bad)
mov
cmp
jbe
clc
push
push
or
movs
in
push
add
or
cmp
pop
das
xor
outs
mov
push
cmp
xlat
repz
push
or
pop
xor
out
(bad)
lods
and
mov
pop
es
les
dec
(bad)
scas
xor
push
inc
pop
pop
sub
push
scas
mov
pusha
(bad)
int3
sub
mov
mov
xchg
lods
pushf
adc
popa
mov
gs
in
fst
hlt
bound
xor
sbb
gs
jne
adc
sub
enter
stc
add
push
movs
push
xchg
mov
nop
(bad)
jne
add
mov
add
add
and
mov
imul
fldz
mov
xor
pop
fiadd
adc
pusha
(bad)
adc
shl
ficom
mov
test
mov
and
jnp
test
pop
and
inc
xchg
lock
fldcw
mov
fild
rol
shl
xchg
fstp
mov
xor
in
xchg
rol
mov
or
sub
das
fcomp
out
inc
in
adc
adc
ret
fstp
add
cmps
pop
sbb
or
and
in
dec
xchg
inc
pop
or
shr
xchg
mov
xchg
nop
mov
inc
lea
mov
mov
jge
ror
and
push
push
nop
cmps
(bad)
xor
jg
or
dec
sub
mov
jmp
iret
and
sbb
mov
shl
aam
in
xchg
adc
xor
in
or
or
popa
pop
enter
jne
cs
add
jo
add
mov
mov
pushf
xchg
call
ror
in
lock
mov
inc
lock
enter
push
fmul
or
dec
fwait
pop
cld
cmp
xchg
fadd
test
lds
mov
imul
repnz
prefetch
adc
xchg
je
lock
sbb
dec
dec
shl
mov
add
ror
push
xchg
push
lods
jmp
cmps
fdiv
pop
ret
pop
ret
push
add
inc
lahf
fdiv
adc
jl
inc
jmp
jge
pop
jb
adc
inc
(bad)
xor
inc
dec
and
jge
dec
xchg
add
nop
sub
test
lahf
jl
xchg
push
inc
test
mov
mov
ror
and
mov
sar
in
inc
(bad)
in
inc
cdq
fsub
adc
push
add
push
adc
mov
adc
push
xchg
cmp
add
fwait
mov
cmp
xor
lods
jbe
call
jns
pop
sbb
cmp
mov
pusha
scas
dec
dec
sub
popa
xor
(bad)
mov
mov
inc
sub
mov
or
mov
pop
mov
mov
cmp
push
jns
js
adc
push
mov
cs
push
pusha
and
cmp
dec
adc
dec
or
xchg
mov
call
adc
mov
sbb
les
ja
test
outs
rcl
rol
adc
call
push
ret
jb
adc
cmc
push
fisttp
add
xor
cmp
xor
repnz
adc
and
push
xchg
dec
je
jl
ss
add
sbb
push
shl
jb
test
scas
sbb
mov
xor
or
sbb
mov
push
int3
int3
lea
cmc
ror
call
xchg
sbb
mov
sub
ror
fucomi
sti
gs
or
mov
lods
jmp
and
pop
mov
jns
(bad)
ss
(bad)
cmp
inc
outs
sub
xchg
adc
sbb
inc
test
and
imul
cs
fistp
popa
js
lods
add
jno
cmp
ret
push
or
shl
sbb
test
mov
push
test
adc
sbb
jnp
stc
rcr
inc
inc
or
xchg
(bad)
ins
fwait
xchg
adc
mov
int3
aam
and
addr16
adc
and
mov
fmul
popf
lock
(bad)
pusha
push
(bad)
test
fistp
xchg
popa
fisttp
pop
push
cmp
sbb
aam
inc
jb
fbld
sbb
add
sbb
jl
imul
cmps
dec
movs
dec
or
stc
cmc
sub
sbb
sbb
test
in
fcom
loopne
lea
xchg
mov
clc
cli
sti
jne
shl
shl
mov
imul
push
xor
and
push
lock
mov
test
sub
xor
loopne
(bad)
mov
push
xor
adc
add
repz
mov
pop
or
or
adc
xchg
xlat
loopne
lock
add
cmps
pop
add
xchg
fbstp
xchg
call
or
(bad)
dec
or
push
push
call
test
fist
and
rol
and
adc
push
fmul
and
sbb
stos
adc
inc
dec
es
fiadd
adc
gs
dec
fs
loopne
es
ret
xchg
lods
add
or
repz
(bad)
fnstsw
or
fcmovbe
push
push
push
xor
adc
pusha
xchg
in
arpl
mov
and
or
in
and
adc
in
pop
and
jge
or
lods
add
or
add
icebp
jmp
sub
sub
mov
mov
arpl
out
stos
and
aaa
add
(bad)
sbb
inc
test
inc
loopne
pop
and
mov
in
mov
mov
and
xor
cmp
jg
sbb
mov
mov
add
arpl
push
mov
daa
sub
sub
jo
pushf
addr16
enter
fsubr
nop
ret
icebp
enter
adc
aam
adc
loopne
outs
and
leave
mov
jg
out
repnz
and
jmp
and
push
sbb
jmp
jecxz
imul
xchg
pop
outs
sbb
std
dec
or
sub
dec
aam
loopne
xchg
mov
fmul
es
test
nop
inc
bnd
mov
movs
sti
dec
adc
push
pusha
xchg
aam
aam
enter
ror
fwait
fwait
dec
sub
test
les
or
inc
cmp
daa
and
popf
and
lods
daa
stc
adc
sbb
in
cmps
push
movs
lock
jmp
mov
lock
push
std
add
sti
dec
push
test
js
inc
inc
or
add
aam
mov
lock
mov
or
cmp
nop
inc
or
or
nop
dec
or
or
mov
sub
add
mov
xor
cmp
(bad)
in
push
add
rcr
adc
rcr
mov
jns
sbb
fs
or
or
in
or
or
ins
add
gs
mov
addr16
fsubr
mov
(bad)
shr
push
and
adc
mov
or
test
mov
jne
sub
sbb
cwde
jl
fld
sbb
push
and
add
adc
lea
sbb
or
mov
sub
ret
push
mov
add
and
int3
xchg
(bad)
aam
aad
xor
bound
xor
ja
imul
popa
jp
mov
popa
aam
in
or
loop
xor
fdivr
dec
call
cmp
ins
aam
and
xor
push
enter
add
adc
or
iret
mov
dec
pop
das
rcr
add
lahf
loopne
mov
ins
and
call
or
in
cmp
push
fsub
stc
fs
adc
shr
cdq
sub
sub
push
ins
ins
push
sub
loope
mov
push
add
or
ja
xlat
mov
push
xor
das
add
in
loopne
dec
sbb
pavgb
pop
push
ror
xor
cld
test
push
inc
mov
addr16
sub
push
dec
cmp
imul
adc
ss
or
ret
add
arpl
or
add
add
enter
and
adc
dec
jne
pusha
pop
adc
push
jb
adc
fstp
xchg
ja
sbb
cmp
fcom
(bad)
icebp
fdiv
jno
and
ret
or
call
inc
cmp
(bad)
mov
leave
loopne
adc
jns
mov
cmp
fsubr
adc
xor
movs
mov
cmps
mov
aaa
or
or
or
push
sub
adc
mov
test
cdq
jo
pusha
stos
ret
in
in
adc
dec
and
jne
or
stos
icebp
xchg
adc
xchg
sbb
enter
or
mov
enter
or
jns
jno
xor
cwde
nop
mov
das
dec
imul
cmp
ret
mov
test
loop
jl
retf
ja
mov
push
add
sbb
enter
jle
gs
mov
add
adc
mov
mov
es
xor
js
scas
pop
mov
pushf
stc
dec
push
jo
jb
cwde
and
lds
add
or
popa
push
mov
fs
pop
mov
out
stos
adc
mov
push
call
jo
or
and
mov
xchg
and
mov
dec
aaa
int3
pinsrw
imul
ficom
dec
pop
inc
int3
cmps
ficomp
pop
aam
mov
fmul
enter
pop
push
cs
mov
cmp
nop
cmp
sub
sbb
test
pop
sbb
dec
xor
add
aaa
cwde
jge
add
ss
xor
add
outs
vpmullw
shl
jnp
pop
lods
leave
or
add
stos
fadd
loopne
pop
inc
lea
mov
scas
cmp
stmxcsr
jns
add
cmp
les
or
pop
ss
int3
das
rsqrtps
cmp
sbb
aas
mov
in
cmp
inc
cmp
inc
or
or
icebp
adc
cmc
pop
leave
or
iret
mov
jbe
cmps
fwait
mov
xchg
pop
nop
dec
es
pushf
mov
test
cmp
cmovle
add
sti
mov
(bad)
xchg
sub
add
jl
xchg
iret
xchg
xor
sbb
mov
mov
aaa
inc
(bad)
ficom
imul
shr
lods
ins
pop
fnstenv
mov
push
fistp
in
xchg
and
movs
fdivr
enter
adc
inc
cmp
adc
sbb
mov
jno
outs
pop
in
jnp
or
inc
ds
call
and
xor
outs
xor
mov
xor
inc
pop
inc
stos
mov
lock
ret
push
fcom
jne
in
mov
jns
adc
inc
pop
inc
dec
xor
sbb
test
sbb
inc
enter
in
jne
mov
test
mov
xchg
jb
cmp
and
lea
and
push
jp
sub
test
xor
movs
setbe
daa
jmp
or
ss
jo
push
pop
popa
daa
cmp
call
xor
xor
xor
in
js
push
imul
cmp
mov
in
sbb
ins
test
pop
adc
mov
jb
xchg
inc
test
dec
add
dec
lods
in
dec
jns
fdiv
dec
rol
sar
call
adc
mov
movs
and
out
jo
hlt
jne
or
jnp
lock
out
test
inc
in
sbb
sbb
arpl
ror
pop
sub
lods
sar
jge
inc
es
add
or
push
ret
ret
movs
adc
rol
sbb
enter
ret
sub
leave
push
add
xor
pop
inc
mov
push
push
or
inc
in
mov
call
call
and
fld
pop
xchg
cmps
cmp
dec
push
cdq
add
and
inc
and
and
icebp
nop
sbb
inc
xchg
mov
fiadd
adc
fwait
int3
inc
aam
ret
push
adc
adc
ins
push
or
js
lods
shl
adc
dec
rcl
loopne
jno
dec
push
add
push
loope
dec
dec
dec
repz
push
jmp
cdq
ror
push
mov
push
add
mov
adc
loope
enter
aam
xchg
xchg
retf
ror
inc
cmp
add
sar
dec
adc
push
fsubr
sbb
rol
in
sub
int3
gs
mov
das
not
adc
(bad)
cmp
mov
sub
sub
aam
dec
rcr
xor
rol
dec
dec
mov
push
lock
pop
aam
in
dec
jg
test
in
shl
mov
sub
mov
div
mov
adc
mov
sub
sbb
stc
pop
fmul
dec
arpl
mov
xchg
pop
dec
cmps
push
jne
mov
int3
in
std
xor
je
adc
aad
sti
cmp
or
shl
adc
test
aam
sub
mov
xor
cmp
xchg
fiadd
call
pusha
mov
pop
adc
aas
mov
cmps
xchg
mov
dec
xchg
mov
fs
xchg
push
or
pop
jne
and
or
inc
add
push
sbb
jne
fistp
gs
mov
jbe
mov
mov
mov
inc
dec
mov
mov
cmp
sti
ret
push
mov
rcr
sbb
mov
and
mov
pushf
cwde
mov
test
and
mov
jo
pushf
mov
mov
mov
and
pop
inc
or
push
jmp
xchg
and
add
or
loope
push
dec
lods
xchg
shl
fst
inc
xor
push
adc
mov
cmp
push
mov
adc
add
xor
or
pop
push
loopne
fdiv
jecxz
mov
adc
or
rol
mov
xchg
push
add
sub
imul
or
inc
sub
cmps
pop
gs
mov
push
or
nop
sbb
es
je
mov
bound
enter
test
mov
xor
in
pop
add
sub
fmul
test
sub
xchg
shl
pop
add
nop
shr
aas
lds
and
int3
test
sub
push
or
(bad)
jo
jno
fsub
dec
sub
ins
push
rol
call
pop
loopne
push
iret
cmps
data16
pop
and
inc
mov
sbb
add
sub
and
push
sbb
in
sbb
fs
sbb
dec
or
push
sub
dec
or
cdq
cwde
and
pop
cdq
jbe
es
cdq
push
and
jnp
cs
xchg
or
add
sub
mov
gs
mov
imul
mov
jmp
xchg
dec
mov
call
ret
ins
cmp
pop
jmp
loop
adc
pop
std
aad
test
adc
jp
idiv
call
push
sahf
mov
ins
dec
cmp
fs
movs
mov
push
ins
push
sti
xchg
dec
cmp
pusha
adc
leave
and
and
xor
and
sbb
and
and
dec
inc
cmp
adc
xor
sub
xor
dec
fcom
pop
pop
aam
cli
push
jmp
cmc
es
cmps
dec
shl
xor
or
xor
mov
pop
xor
inc
inc
or
inc
(bad)
mov
adc
shr
dec
and
xchg
pop
call
or
ja
aam
cdq
sub
mov
pop
sbb
jp
dec
cmps
lods
pop
xlat
add
loopne
jl
pop
xor
(bad)
jne
xor
dec
adc
std
inc
adc
cmp
add
adc
jge
and
push
inc
icebp
mov
je
nop
mov
mov
and
push
mov
cdq
nop
outs
test
ins
dec
lock
pusha
gs
dec
mov
fidiv
rcr
mov
pop
fsub
in
int3
cmp
pop
enter
les
ror
jno
shl
aam
mov
and
popa
xchg
adc
mov
je
imul
inc
xchg
push
push
fs
xchg
push
stos
sbb
sar
ror
lds
inc
jae
push
shr
and
inc
adc
ja
lods
xchg
mov
(bad)
adc
iret
arpl
push
mov
inc
dec
mov
inc
ror
je
or
inc
xchg
gs
xor
out
pop
and
scas
loopne
enter
test
arpl
out
xor
and
inc
or
lods
and
pusha
add
test
xchg
push
pusha
sbb
add
add
leave
test
sbb
imul
nop
test
or
dec
test
(bad)
xor
mov
and
add
int3
jmp
inc
leave
pop
outs
in
add
or
cmpxchg
in
fcom
sbb
or
dec
repnz
jg
add
aam
sti
add
add
mov
arpl
jno
push
stos
sub
cwde
and
ror
jbe
sbb
clc
xor
test
xor
inc
sub
dec
(bad)
adc
js
sbb
mov
les
shr
mov
add
lea
xchg
test
sub
sbb
ss
inc
rol
inc
inc
addr16
sbb
mov
rol
in
das
inc
xchg
aam
retf
pop
ins
dec
mov
nop
mov
test
push
call
dec
jo
retf
cld
push
je
nop
cdq
ins
lock
push
dec
je
cmp
xchg
adc
je
ror
mov
and
ja
sbb
loopne
fsubr
jne
sbb
and
test
movs
sbb
lea
pop
add
idiv
push
lods
jg
mov
test
inc
mov
out
push
dec
mov
dec
arpl
retf
out
sub
(bad)
stos
sbb
test
pop
aam
aam
scas
lods
and
or
fiadd
or
pop
in
movs
ret
leave
mov
push
in
sbb
out
fild
mov
das
aam
jmp
movs
ror
mov
jg
mov
mov
pop
cmp
outs
int3
mov
pop
and
pusha
gs
dec
ret
mov
xor
xchg
movs
inc
int3
shl
and
lock
lods
mov
imul
push
dec
push
test
dec
outs
das
dec
adc
and
je
mov
xchg
jg
ret
cmp
sub
test
add
leave
mov
or
stos
inc
outs
adc
sub
mov
and
fcomp
mov
enter
aam
les
pop
adc
nop
sbb
and
xor
add
and
test
add
and
and
xor
or
movs
lods
dec
ss
inc
jecxz
adc
dec
pushf
ins
dec
es
lods
push
mov
cdq
fs
test
cdq
fs
dec
pop
je
fs
dec
mov
es
mov
inc
and
fs
aam
in
add
jg
jl
cmp
dec
jmp
lds
fld
in
shl
jns
xor
mov
fcom
xchg
dec
enter
mov
sub
mov
mov
cmp
pop
mov
out
loopne
mov
pop
add
(bad)
sbb
and
xor
enter
inc
test
mov
movs
lods
xchg
enter
int3
not
fsub
aam
dec
sub
cwde
js
fdiv
adc
in
pusha
mov
leave
mov
mov
popa
and
test
pushf
(bad)
std
and
(bad)
pop
aam
int3
xchg
xchg
xchg
xchg
les
xchg
movs
pushf
xchg
mov
test
adc
leave
and
pop
xchg
stos
mov
movs
adc
xor
in
sub
push
pop
mov
in
push
nop
cmp
enter
sub
inc
test
xchg
inc
lods
sub
inc
sbb
mov
push
adc
imul
inc
mov
inc
(bad)
aam
xchg
dec
adc
inc
jo
aaa
cmp
jb
cwde
sbb
add
xor
jne
pop
jo
xchg
sub
movs
call
mov
cs
xchg
rcr
add
fld
xchg
sbb
jns
xchg
mov
sub
lods
add
pop
sub
cmovs
pop
or
xchg
mov
and
rcr
xchg
or
sar
jns
sub
idiv
or
rcr
dec
adc
and
dec
xor
and
xchg
cmp
push
pusha
test
jecxz
push
int
mov
xchg
adc
sub
movs
jg
dec
imul
pop
sub
push
xchg
(bad)
pop
popa
shl
test
ins
inc
enter
scas
sub
nop
sub
adc
push
ins
dec
cmp
mov
or
add
push
das
in
xor
pop
std
pop
ror
pop
aam
lea
out
xchg
inc
cs
invd
push
aas
outs
cs
fadd
aam
sar
jl
xchg
mov
or
or
adc
popa
(bad)
rcr
xchg
mov
inc
dec
or
shl
or
jge
mov
imul
pop
fwait
mov
retf
xchg
sbb
or
sbb
xor
pushf
mov
fst
rcl
rcl
xchg
enter
les
mov
das
mov
xchg
test
jb
and
ss
enter
xchg
dec
pushf
xchg
nop
xor
lds
shl
ror
aas
adc
xor
enter
stos
loope
push
sub
add
pop
or
sbb
mov
sbb
or
mov
sbb
movs
adc
mov
and
jns
pop
in
add
cmp
rcl
repz
mov
jno
adc
xchg
mov
das
ins
mov
das
or
sbb
es
mov
movs
pop
cli
inc
(bad)
(bad)
mov
sub
sub
or
pop
mov
std
push
das
inc
sar
je
jo
lock
pop
repnz
add
sbb
adc
mov
mov
ins
cmps
dec
lea
mov
xor
in
sub
cld
sub
push
pop
in
lods
jbe
sub
movs
popf
cdq
inc
loop
add
repz
mov
jae
sti
loopne
ret
xchg
leave
(bad)
fist
cdq
in
and
and
sub
inc
sub
push
movs
add
jbe
les
aam
push
or
mov
sub
cld
icebp
inc
shl
clc
xor
push
push
in
or
lds
and
add
clc
icebp
add
inc
in
sbb
mov
add
push
mov
xchg
and
sbb
xchg
adc
and
and
adc
add
mov
rcl
das
scas
ret
xchg
dec
push
hlt
inc
ins
jle
sub
mov
sub
jg
cmp
mov
mov
pop
pop
mov
sub
in
aas
out
sub
jmp
mov
(bad)
sar
call
inc
sub
pop
sahf
and
or
xchg
jb
sub
test
cmps
adc
test
jno
and
or
adc
daa
dec
pop
outs
xchg
jbe
mov
sub
rcl
xor
lods
inc
sub
ins
inc
pop
sbb
add
or
fsubr
inc
mov
leave
add
and
fs
jecxz
sbb
bound
dec
jnp
fs
mov
call
cli
pop
inc
stos
add
xor
es
xor
aas
pushf
xchg
shr
or
add
xor
sbb
pop
adc
fst
dec
cmp
and
mov
pop
mov
ret
fsub
adc
sub
mov
cdq
adc
fiadd
jmp
sub
cmc
call
jns
xchg
sbb
push
gs
adc
cmps
adc
pop
sbb
js
and
pop
repnz
mov
jmp
or
lds
sub
ffreep
xor
std
xor
inc
fdiv
add
xor
inc
sbb
pop
xchg
push
pop
sub
jb
mov
jg
ins
mov
call
or
mov
(bad)
lods
cmp
outs
xchg
dec
cli
inc
adc
fidivr
add
and
leave
xchg
rcl
adc
in
shl
pop
cmps
dec
mov
lods
sbb
icebp
nop
cmp
push
je
cmp
imul
movs
sbb
mov
inc
mov
div
sub
sbb
push
or
xchg
cmp
jmp
add
xchg
dec
sahf
sbb
bnd
mov
and
and
sub
adc
sub
jmp
je
sbb
mov
repz
mov
ins
sub
das
rol
int
popa
mov
ins
test
inc
int
pop
mov
jnp
imul
sbb
sbb
enter
mov
inc
mov
xchg
ret
ds
jge
sbb
sbb
inc
add
dec
test
pop
inc
adc
fxch
and
xor
test
or
xor
cdq
jbe
(bad)
lods
adc
xchg
dec
mov
icebp
movs
imul
ret
adc
pop
cmp
movs
lahf
sbb
mov
or
bswap
mov
pop
movs
mov
adc
rol
in
int3
add
dec
jnp
sub
ret
push
imul
jp
push
je
push
jb
out
inc
or
xor
mov
in
push
inc
mov
mov
lock
mov
cld
inc
mov
enter
sti
out
push
iret
dec
push
jns
hlt
adc
and
or
mov
add
jecxz
sahf
or
sbb
leave
mov
and
or
dec
push
sar
cmp
cmp
push
sti
or
add
push
fcomp
jbe
jle
mov
and
repnz
imul
push
inc
lahf
push
dec
pop
rcr
inc
or
lahf
ror
jmp
loopne
mov
data16
and
gs
pushf
stc
inc
ret
xchg
ret
push
je
xchg
and
je
push
push
add
jno
lods
mov
xor
mov
out
cld
mov
or
hlt
sub
not
sub
dec
mov
and
cmc
movs
lea
cmp
in
addr16
jns
inc
jmp
xchg
lds
sete
jmp
or
pop
push
or
push
fild
mov
jl
pop
mov
adc
mov
jg
les
add
add
out
mov
test
xor
xor
sahf
out
test
push
popf
out
fisubr
inc
bound
xchg
jae
inc
push
rol
retf
cmp
add
inc
aas
sub
data16
mov
inc
test
mov
or
jnp
mov
add
pop
das
mov
(bad)
mov
adc
or
cmp
rcl
cmp
(bad)
push
mov
add
into
pop
adc
test
dec
out
cmp
or
test
out
sahf
sbb
aaa
xchg
sub
ja
div
xor
vmmcall
ds
scas
inc
sub
frstor
jmp
test
inc
mov
and
ins
outs
arpl
imul
sub
mov
sub
popa
arpl
jne
mov
jmp
popa
outs
je
add
das
add
push
ins
adc
push
sub
cs
inc
outs
jb
js
je
jg
mov
jae
add
or
outs
add
add
add
ja
sahf
ins
add
jne
les
inc
and
add
fstp
jb
dec
push
add
add
xor
aaa
or
mov
repnz
inc
mov
fdivr
push
add
aas
push
add
pop
pop
mov
and
cmp
mov
push
je
and
jae
push
idiv
adc
out
loopne
cmps
ins
push
push
or
jae
out
loopne
mov
retf
repz
popa
(bad)
fstp
xor
ins
jp
outs
in
fndisi(8087
or
mov
fsubrp
imul
addr16
and
outs
pop
rcr
jmp
jo
mov
in
loopne
dec
retf
stos
ins
sub
push
push
or
pop
imul
fnstsw
inc
push
data16
shl
out
mov
jp
sub
mov
sub
arpl
and
lahf
popa
push
cmp
jecxz
outs
inc
arpl
loopne
pop
jnp
jae
daa
dec
jbe
enter
fbstp
outs
(bad)
fidivr
(bad)
je
adc
sbb
jo
ficomp
jbe
mov
arpl
ins
mov
scas
xor
scas
js
xor
inc
mov
js
sbb
xor
fidivr
cs
add
das
(bad)
xor
sub
pop
or
pminub
jg
ds
(bad)
or
sub
outs
xchg
lahf
pop
pop
push
sbb
jg
dec
xor
adc
fbstp
adc
adc
push
xor
xor
lods
cmps
in
xchg
jb
jne
in
mov
xor
push
bnd
das
pop
jno
jbe
sbb
inc
inc
shr
jmp
push
jo
lahf
outs
aas
push
lods
rol
iret
arpl
(bad)
sbb
mov
inc
jb
(bad)
aaa
ins
jno
lahf
cs
imul
add
imul
shl
jnp
sbb
cmps
outs
pop
pop
loopne
sub
das
xchg
mov
daa
mov
pop
in
jno
add
pop
stos
imul
ins
retf
je
scas
cmp
fisub
adc
jae
sub
pop
pop
jecxz
ret
ja
push
sub
(bad)
lock
xor
sbb
xchg
add
mov
push
inc
sahf
imul
and
inc
inc
mov
xchg
cmps
jnp
das
sbb
sahf
cmps
stc
cmp
sbb
sbb
mov
cmp
out
sbb
test
sbb
dec
repz
pop
sahf
push
sbb
cmp
stc
mov
mov
clc
pop
js
jns
repz
mov
sbb
mov
jp
inc
sub
addr16
jp
mov
cmp
mov
dec
jb
fcmovne
add
xchg
(bad)
pop
mov
clc
pop
es
xchg
ja
imul
inc
shl
mov
push
fwait
cmp
dec
add
mov
push
xor
mov
pop
pop
add
and
add
in
repnz
das
das
and
pop
mov
jbe
jge
bound
dec
inc
and
add
loope
dec
jnp
pop
ret
je
dec
idiv
(bad)
repnz
aas
dec
inc
sbb
pusha
xor
ret
fdivr
ds
daa
outs
inc
jo
mov
and
mov
add
das
pop
pop
div
iret
jns
out
adc
(bad)
out
(bad)
and
push
outs
sti
push
arpl
pop
dec
xlat
mov
daa
push
and
imul
ret
sub
pop
dec
mov
shr
pop
test
push
mov
jg
dec
cmp
cmp
add
dec
and
jns
add
scas
imul
dec
push
inc
aas
test
ins
bound
dec
outs
jbe
dec
arpl
popa
or
jo
sub
addr16
clc
mov
xor
ins
xchg
outs
xchg
inc
jo
imul
popa
jb
jg
bound
inc
jae
fnstsw
popa
outs
adc
xchg
into
mov
outs
jns
jg
iret
fdivr
addr16
popa
je
jb
xor
(bad)
push
push
gs
sbb
into
fdecstp
jnp
outs
outs
and
jbe
pushf
jae
dec
inc
aas
add
jge
(bad)
imul
or
mov
fild
fild
push
push
mov
push
popa
ins
jne
inc
inc
mov
adc
push
scas
call
and
sub
sub
(bad)
(bad)
(bad)
jmp
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
test
mov
dec
dec
dec
dec
mov
sbb
rcr
pop
pop
pop
xchg
pusha
popa
sbb
jmp
fs
imul
jo
add
jbe
div
jp
jl
jle
dec
adc
call
cs
fs
pop
add
ret
mov
ror
jmp
retf
jno
icebp
(bad)
repz
inc
mov
clc
ret
movs
add
xor
outs
shr
outs
imul
xor
outs
das
cmp
sar
daa
push
add
jo
xor
popa
js
add
test
dec
pop
sbb
out
shl
rol
sub
je
lods
rcr
add
adc
add
cld
imul
add
and
push
pop
push
or
push
push
add
xor
jbe
and
add
pusha
push
mov
or
cmp
add
sbb
sahf
mov
xchg
push
xchg
test
add
or
into
in
fnstenv
enter
retf
jb
shr
push
jo
add
sub
push
jmp
ja
icebp
dec
or
jo
add
js
push
add
ret
nop
les
add
ror
add
pop
jb
pop
lea
mov
nop
xchg
xchg
fs
xchg
pop
xchg
mov
mov
movs
enter
or
shl
inc
scas
mov
rcr
out
add
mov
lods
push
lods
mov
xlat
push
repnz
sbb
pop
jns
sub
(bad)
pop
sbb
out
fisub
push
inc
sub
ss
mov
push
dec
dec
inc
dec
inc
push
div
retf
push
nop
fs
je
pop
loopne
mov
push
jae
dec
bound
je
outs
cmp
jge
xor
push
jbe
dec
out
je
mov
imul
daa
in
aas
push
xchg
pop
lea
mov
outs
js
push
dec
add
cs
and
ins
jo
imul
jo
and
and
daa
aaa
jle
loopne
ins
les
dec
imul
(bad)
fcmovbe
shl
ds
cmp
dec
fwait
xchg
fdiv
inc
jb
jns
daa
pop
and
ss
jns
mov
jmp
in
and
addr16
add
cmp
outs
jle
fwait
outs
rcr
jbe
mov
jo
or
outs
mov
outs
jb
and
xor
add
jbe
push
push
lahf
dec
xor
imul
push
jp
retf
out
cwde
add
pushw
pop
and
inc
imul
pusha
gs
push
daa
xchg
push
sar
and
popa
push
outs
mov
div
mov
push
jae
(bad)
mov
dec
or
cmp
add
hlt
clc
jo
sbb
outs
gs
inc
pusha
adc
mov
das
mov
xchg
inc
push
push
push
push
dec
neg
dec
push
jne
repnz
push
jbe
enter
fbstp
mov
dec
jge
mov
jle
dec
ret
pop
xor
imul
call
xor
jg
jae
and
xor
das
gs
sbb
pusha
rcl
outs
bound
sub
push
or
pop
das
je
scas
(bad)
idiv
daa
xchg
mov
mov
mov
cmp
out
mov
cmp
or
ds
and
sub
dec
imul
inc
jl
push
addr16
jle
cmps
or
sub
sub
add
repz
add
sub
pop
loope
neg
das
push
jb
xor
aaa
and
push
sbb
mov
mov
xchg
xchg
dec
pop
pop
jne
stos
addr16
push
lods
xor
sbb
sbb
jo
mov
push
gs
imul
or
frstor
dec
sbb
pop
or
sahf
inc
pop
sub
and
div
sub
iret
sti
outs
xchg
sub
pop
cs
add
cmp
iret
repz
and
adc
jnp
cmps
stc
cld
sub
call
cmp
(bad)
push
aam
int3
cmps
mov
mov
dec
jns
lods
test
outs
mov
neg
nop
nop
cs
push
sahf
mov
repz
repz
ins
push
iret
pusha
pop
pop
push
push
dec
cmp
repz
xor
and
jns
cmps
stc
cld
sub
enter
jns
out
dec
and
in
iret
repz
les
iret
repz
xor
sbb
jns
cmps
stc
lock
test
pop
sahf
ja
out
adc
sub
push
pushf
jo
jnp
jl
sub
push
and
adc
add
jno
test
add
add
xor
push
jb
dec
mov
sbb
inc
add
add
ret
push
and
add
ja
sub
sbb
xchg
push
imul
add
ins
or
and
push
add
mov
add
jnp
and
add
push
pop
or
das
cmp
mov
add
add
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
mov
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
(bad)
(bad)
(bad)
inc
ret
(bad)
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
std
(bad)
(bad)
jmp
jecxz
in
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
(bad)
jmp
push
test
and
add
jmp
push
sub
push
jno
popa
push
adc
sub
lods
call
gs
popa
data16
pop
shl
std
add
xor
add
fidiv
sub
add
push
sub
daa
dec
arpl
inc
ins
fs
jns
jecxz
sbb
mov
mov
les
iret
(bad)
pushf
jp
pushf
pcmpgtw
xor
push
inc
push
loopne
add
dec
push
push
dec
pop
test
mov
push
dec
inc
dec
cmovns
cld
mov
das
push
adc
sub
adc
sub
into
mov
rcl
mov
out
xor
jnp
inc
loop
mov
ds
in
xchg
popa
pop
adc
clc
retf
sbb
in
(bad)
xchg
jb
jge
arpl
cmp
jg
mov
in
fst
mov
and
and
mov
imul
retf
add
inc
mov
sar
or
push
test
sub
fwait
ss
sbb
mov
jns
ds
xor
inc
int3
dec
dec
xor
(bad)
(bad)
(bad)
cld
dec
popf
pxor
xor
retf
aaa
push
div
inc
sub
dec
xchg
cmp
cmps
das
xchg
(bad)
(bad)
mov
xor
sahf
icebp
mov
cld
or
loopne
addr16
(bad)
(bad)
cmp
inc
mov
xchg
push
pop
xchg
sub
pop
mov
stc
push
jmp
or
mov
jle
(bad)
call
(bad)
lods
dec
lock
xor
aas
mov
pop
or
and
pop
repnz
popa
(bad)
mov
and
es
mov
fcompp
add
test
ja
mov
push
nop
fwait
(bad)
push
mov
adc
push
loope
or
aad
pop
inc
fild
sub
dec
fsub
cmp
or
cmovg
sbb
or
dec
xchg
pop
xchg
nop
outs
loopne
pop
fwait
loope
pop
in
imul
cmp
sti
es
jae
push
jp
mov
fcomi
push
push
data16
scas
ret
je
sub
test
xchg
mov
and
adc
shr
aaa
pcmpeqw
outs
mov
loopne
push
mov
fild
daa
je
loopne
sbb
mov
movs
dec
add
sbb
jmp
xchg
mov
sahf
ror
ret
sbb
push
fnsave
add
jo
xor
sbb
mov
or
and
imul
ds
loope
jl
ins
jle
fs
popa
rcr
pop
cmps
mov
and
push
jle
or
jg
(bad)
out
dec
mov
adc
mov
fbstp
out
jno
sar
push
mov
clc
jg
mov
cmova
das
adc
cmp
popa
ret
xor
add
inc
inc
sub
jg
out
shr
sbb
xlat
cs
jge
and
mov
cmps
xlat
data16
fnstenv
adc
arpl
js
sub
shl
aas
cmps
call
ja
inc
add
cmp
pop
pop
mov
test
jne
cmpps
push
imul
sti
arpl
out
mov
lahf
es
es
sti
cmp
or
push
adc
push
cmp
and
lds
jge
add
ins
test
cmp
dec
dec
inc
xchg
gs
scas
sbb
ja
dec
jp
xchg
adc
ja
pop
ds
fsub
bound
mov
mov
imul
push
fmul
sti
jne
sbb
daa
sbb
call
pop
mov
aas
arpl
daa
pop
arpl
add
sbb
pop
gs
jne
out
mov
and
stc
retf
arpl
pop
mov
and
pop
stos
pop
ret
out
sbb
ins
inc
add
mov
fld
test
push
mov
dec
cmp
ja
cmp
xchg
retf
sub
inc
mov
sbb
out
daa
loope
fadd
xor
xlat
or
jo
add
push
cmp
cld
js
ret
mov
je
jb
adc
jl
push
add
sbb
arpl
mov
xor
push
arpl
clc
mov
pop
mov
dec
popa
adc
inc
(bad)
jnp
and
jo
out
or
xor
lock
je
jae
pop
(bad)
outs
out
out
nop
mov
adc
aaa
mov
test
shl
push
or
and
jecxz
stos
scas
mov
sub
sub
sbb
dec
aas
adc
outs
popa
push
inc
pop
daa
imul
add
dec
dec
sub
cmp
dec
fwait
push
mov
cmp
push
dec
(bad)
imul
inc
push
ret
inc
and
test
imul
sbb
and
push
add
js
mov
outs
push
(bad)
pop
out
jb
sub
or
(bad)
cmp
pop
sahf
fisub
daa
bound
jae
hlt
mov
mov
addr16
sti
and
ss
push
ins
cmp
out
bound
or
(bad)
(bad)
jge
outs
out
arpl
pop
pop
stos
and
outs
jmp
les
mov
lahf
ja
cmp
mov
shl
jb
pop
mov
push
es
int
jo
mov
out
inc
cmp
inc
mov
push
inc
scas
imul
mov
arpl
dec
ins
xchg
pop
push
jnp
inc
inc
dec
add
shl
outs
imul
sbb
ss
mov
or
mov
dec
sbb
pushf
retf
inc
pop
je
ret
iret
pop
dec
por
pop
icebp
outs
ins
aas
pop
mov
scas
fimul
addr16
outs
mov
dec
cmp
lods
pop
(bad)
adc
sahf
push
aas
pop
pop
push
aas
loopne
bound
test
mov
mov
mov
loopne
mov
jl
(bad)
loop
and
jl
imul
mov
and
addr16
(bad)
jnp
sbb
push
loopne
sub
ja
mov
adc
bnd
jo
or
mov
fsub
push
adc
sbb
sbb
jnp
(bad)
xor
imul
jmp
es
pop
icebp
into
adc
add
push
cmp
mov
outs
mov
cmps
outs
cs
jnp
push
jecxz
inc
add
loop
cmp
jno
(bad)
fild
fsub
ins
sub
retf
jl
out
pop
cmp
bound
or
mov
inc
inc
mov
lea
fidivr
or
stos
sub
iret
imul
dec
pop
adc
jl
lods
jno
repnz
sahf
jo
repz
adc
mov
cmp
es
addr16
push
imul
add
mov
aad
xlat
inc
outs
sbb
xchg
rol
fstp
dec
(bad)
xlat
aaa
sbb
jl
xor
(bad)
inc
test
pop
jno
xchg
out
inc
jns
jae
jae
sbb
jae
pop
add
dec
adc
mov
neg
mov
add
mov
sub
imul
pop
in
sar
pop
data16
aaa
push
ret
ins
rol
dec
push
aas
popa
pop
popa
sub
xchg
pop
push
mov
es
fcomp
jle
outs
das
addr16
mov
dec
call
sub
adc
inc
xchg
inc
jnp
dec
xor
push
cmp
push
sub
xor
sbb
inc
add
hlt
retf
ss
push
repz
push
push
mov
fimul
push
jl
neg
cs
ds
push
pop
push
push
lds
fstp
push
rol
adc
ja
out
imul
pop
push
iret
push
les
ds
pop
jmp
cmp
and
jbe
xor
pop
add
inc
lds
cmp
inc
pop
or
mov
push
sub
jl
(bad)
sahf
div
mov
sbb
push
leave
fucomp
fmulp
jnp
pop
or
adc
repz
adc
inc
and
pop
dec
daa
outs
mov
iret
pop
sbb
aaa
dec
and
scas
jne
xor
outs
jo
jns
mov
inc
inc
fisttp
imul
add
outs
rol
pop
ins
retf
jno
push
pusha
sbb
sti
aas
pop
popa
push
in
add
and
popa
outs
arpl
push
gs
ins
pusha
push
popa
jne
shl
jo
pop
and
dec
bound
out
sbb
sub
and
pop
shr
adc
ficom
das
push
dec
push
push
jg
jecxz
repz
fild
jne
jne
jns
fwait
(bad)
push
mov
xchg
scas
mov
repz
lock
push
or
mov
ds
fs
outs
jbe
lea
cmp
(bad)
bound
or
ds
gs
je
cmp
ret
xor
push
push
jo
jb
in
sbb
mov
and
jae
pop
cmp
sbb
and
and
(bad)
mov
jae
imul
pop
adc
or
icebp
cmp
in
fwait
test
(bad)
mov
outs
add
adc
cs
jbe
pusha
imul
sbb
sub
data16
aam
imul
or
shr
xchg
aas
push
mov
jne
mov
daa
pop
and
mov
mov
cmp
ja
inc
push
mov
dec
push
verw
rol
lods
lahf
js
(bad)
adc
xchg
scas
inc
cmp
adc
pop
add
pop
xlat
sbb
push
sub
cmp
inc
movs
ss
cmps
add
sbb
or
xchg
js
sub
adc
sahf
mov
sbb
dec
outs
ret
push
sbb
leave
idiv
xor
inc
dec
jp
ror
lea
push
jnp
pop
push
lock
ja
into
or
inc
pop
mov
ins
(bad)
pop
fdivrp
adc
data16
cmp
ins
into
pop
retf
mov
inc
retf
bound
add
pop
and
mov
fdiv
(bad)
xchg
inc
loop
call
sbb
and
jle
xor
jo
inc
or
imul
movs
add
aaa
sub
dec
mov
inc
(bad)
loopne
aam
jecxz
or
inc
cwde
cs
or
lods
push
push
adc
pop
(bad)
movs
(bad)
pop
arpl
push
call
dec
mov
mov
push
scas
sub
jne
imul
mov
ret
fs
and
xchg
mov
xor
and
outs
rcr
inc
scas
mov
adc
add
and
imul
and
test
cs
and
shr
add
and
push
movs
dec
and
push
cs
xor
imul
sbb
jp
out
jb
push
jp
arpl
ins
(bad)
das
mov
xor
arpl
pop
cli
add
push
scas
pop
jmp
jb
fs
push
jb
mov
or
inc
jbe
jae
sub
scas
into
sahf
mov
loop
inc
into
out
and
push
mov
or
jbe
push
sbb
mov
and
scas
mov
add
inc
fwait
mov
imul
in
add
fbld
xlat
adc
add
push
retf
inc
sbb
sub
mov
dec
(bad)
mov
pop
test
aas
mov
mov
fbstp
cmp
das
ret
ret
dec
adc
add
pop
or
out
cmp
inc
jg
push
(bad)
inc
cmp
inc
imul
data16
pop
xlat
lods
add
dec
or
mov
stos
push
and
jmp
pop
daa
stos
imul
sbb
mov
lahf
fwait
cmp
(bad)
jns
and
data16
mov
hlt
test
mul
xchg
arpl
bound
xor
scas
jecxz
pop
test
dec
fild
add
sbb
aam
ja
or
cmps
cmp
aam
sub
xchg
cmc
push
cs
jmp
(bad)
cmps
push
or
mov
push
jo
dec
cmps
pushf
sub
lea
js
fucomi
sbb
imul
outs
jae
sbb
sub
or
repz
pusha
push
cmps
out
mov
and
imul
inc
push
imul
aas
cmp
stos
add
inc
jae
in
cmp
out
pop
aaa
cmp
ror
or
cmp
jge
and
xchg
(bad)
pop
add
or
das
imul
arpl
shr
pop
imul
lds
js
xchg
cmp
shr
ret
fist
test
fld
or
loope
add
ret
and
es
xor
lahf
arpl
xchg
mov
repz
call
xchg
xlat
and
inc
sbb
cmp
pop
push
scas
jmp
cmp
fimul
push
xchg
test
dec
cmps
out
jo
dec
xor
mov
mov
jbe
mov
adc
fadd
popa
pop
cmp
inc
push
pop
xchg
push
or
jnp
jnp
jb
xlat
pop
call
inc
fstp
popa
cmp
ss
xor
add
out
jo
jp
addr16
xor
je
scas
loopne
setg
xor
push
push
addr16
push
sub
es
push
in
(bad)
cmp
out
inc
(bad)
outs
daa
dec
fcmovb
clc
push
pop
ja
arpl
ret
xor
ss
aad
pop
xlat
cmp
(bad)
icebp
sbb
imul
or
cwde
inc
(bad)
shl
push
cmps
adc
test
out
gs
mov
out
aad
sbb
scas
fwait
cs
mov
stos
add
adc
lds
add
jne
arpl
shl
je
outs
fs
aas
dec
clc
movs
test
ins
add
push
hlt
or
add
add
sti
(bad)
push
add
test
push
enter
scas
ins
push
outs
(bad)
das
outs
xor
(bad)
cs
inc
dec
ja
bound
scas
popa
adc
iret
shr
push
pop
dec
mov
stos
push
cmp
jo
sub
cmps
sbb
scas
push
pop
outs
out
lods
adc
setg
pop
and
pop
push
sahf
xor
dec
das
es
ins
jl
dec
call
clc
les
pop
popa
xchg
call
daa
xor
ror
adc
adc
xor
add
rol
loopne
loope
out
mov
push
push
add
inc
sbb
jecxz
add
jae
ret
stos
sub
ret
cs
ja
ror
bound
ret
and
arpl
push
mov
out
pop
sub
add
pop
add
je
adc
sub
cdq
aam
dec
cmp
outs
add
cmp
push
ret
and
jnp
cmp
jp
inc
das
jb
daa
sbb
push
fisubr
add
minps
ret
(bad)
aas
push
mov
mov
dec
mov
mov
sbb
xor
dec
push
mov
fcom
iret
jo
stos
scas
outs
push
mul
shl
dec
and
push
mov
jp
(bad)
fdiv
cli
pop
dec
add
bound
popa
xor
jmp
rcl
pop
scas
sub
and
inc
in
sub
ret
nop
out
add
mov
das
hlt
inc
adc
rcr
inc
add
or
push
(bad)
in
inc
or
mov
sbb
mov
push
mulps
aaa
adc
xchg
and
sbb
xor
cmps
sbb
sbb
int
mov
sbb
sbb
sbb
adc
jmp
pop
and
adc
and
out
fstp
out
and
inc
cs
push
sbb
outs
bound
out
mov
cmp
test
dec
sbb
mov
add
cmps
arpl
sbb
cs
xor
inc
fs
jo
adc
adc
push
out
jae
inc
sub
lods
push
pop
lahf
add
xor
cmps
cmc
test
mov
aam
inc
cmp
aas
dec
sub
xchg
arpl
mov
arpl
cmp
ror
or
and
mov
pop
(bad)
out
mov
rol
mov
mov
adc
sbb
mov
or
das
sbb
out
iret
loopne
sub
adc
iret
(bad)
adc
loop
cld
stos
inc
das
and
add
fistp
or
(bad)
stos
pop
(bad)
cmp
pop
(bad)
dec
sub
lods
xlat
and
xchg
das
aaa
stos
or
bound
inc
jbe
mov
push
bound
push
imul
mov
fiadd
adc
and
xor
pusha
sub
addr16
cmps
add
or
jnp
jge
mov
jmp
repz
jae
xor
fs
pop
jno
lods
xor
das
outs
aad
daa
icebp
sbb
inc
and
(bad)
pop
(bad)
add
ins
pop
sub
test
add
dec
pop
add
mov
dec
pop
sti
(bad)
push
push
xor
fld
aaa
bound
inc
ja
pop
pop
pop
or
and
(bad)
sti
mov
push
mov
sbb
and
jecxz
and
cmp
cdq
dec
pop
in
loop
push
leave
stos
in
cld
loope
jb
pop
and
in
mov
pusha
xchg
mov
fist
push
xor
mov
je
leave
push
repnz
fld
sub
fsubr
cmp
leave
in
xchg
inc
sub
lock
hlt
fst
xchg
dec
movs
push
scas
xchg
test
push
repnz
and
adc
cdq
dec
pop
rcl
push
leave
stos
in
enter
xchg
pop
and
stos
sub
xchg
dec
and
test
fcom
mov
cmp
ror
push
xor
xchg
push
clc
ror
xchg
inc
sbb
je
dec
loop
xor
out
pop
and
sub
xor
inc
aam
inc
sar
sbb
pop
addr16
ror
cmp
mov
sub
sbb
loope
movs
inc
ret
or
inc
sbb
xor
iret
dec
fdiv
(bad)
adc
xlat
inc
xor
sbb
adc
push
imul
push
dec
pop
jae
sub
sub
and
cmp
movs
imul
or
sub
push
dec
inc
xor
push
test
inc
aaa
mov
aas
mov
or
movs
and
xchg
sbb
mov
inc
xlat
push
call
or
pop
dec
not
add
ret
das
and
sbb
or
dec
aaa
sub
xor
addr16
xor
push
(bad)
xchg
mov
scas
or
arpl
jg
mov
lahf
jnp
arpl
xlat
pop
inc
sub
sbb
dec
pop
dec
push
pop
enter
push
mov
mov
push
sti
mov
sbb
mov
jmp
out
js
popa
les
fild
scas
mov
iret
aaa
outs
inc
mov
js
scas
mov
das
push
(bad)
fisubr
pop
(bad)
fmul
rcr
test
aas
pop
gs
add
(bad)
or
mov
lods
mov
mov
and
add
mov
bound
xor
or
adc
sbb
rcl
(bad)
push
loop
mov
jbe
pop
call
shr
jg
xchg
xchg
add
push
pop
xlat
pop
add
sbb
bound
movs
ins
pop
lea
ds
pop
sbb
push
pop
add
sub
pop
or
and
add
mov
pop
sbb
cs
xchg
jb
add
pop
inc
pop
or
or
mov
fisttp
cmp
inc
es
addr16
bound
adc
je
or
test
cmp
xor
sahf
gs
cdq
add
or
cmp
xor
mov
es
jae
and
sub
sub
rcl
inc
div
aaa
imul
adc
mov
push
jbe
cmp
jnp
xor
xor
daa
outs
xor
pusha
ins
and
mov
push
push
int3
add
in
ja
adc
ss
mov
bound
jge
or
pop
outs
dec
js
fs
enter
pop
daa
sbb
dec
mov
stos
invd
xor
mov
add
ret
add
and
xor
push
inc
popf
or
add
jae
stos
and
sbb
in
add
into
popa
push
in
mov
or
push
adc
push
inc
imul
mov
repz
div
in
and
push
dec
pop
mov
addr16
cdq
fild
sbb
cmps
dec
lods
xchg
pop
inc
mov
pop
mov
sub
lock
and
bound
pop
jb
xor
js
inc
(bad)
imul
mov
mov
das
sbb
mov
pop
mov
adc
mov
push
fisttp
jo
pop
inc
ja
addps
push
sub
shr
push
inc
pop
and
rdmsr
cs
add
rcl
xor
xchg
dec
(bad)
movlps
(bad)
das
or
pop
cmp
xchg
imul
popa
lods
adc
push
push
push
outs
out
push
add
mov
ficomp
ins
fiadd
add
sub
jo
xor
cmps
je
push
scas
ret
dec
rcl
xchg
inc
push
(bad)
inc
jecxz
dec
adc
xchg
push
add
xor
pop
lea
stos
retf
mov
adc
movs
mov
inc
imul
mul
ja
dec
es
outs
cmp
push
out
ret
push
push
push
cmp
scas
lods
xor
repnz
out
es
mov
aad
add
loopne
mov
inc
push
mov
inc
xchg
cmp
inc
jns
neg
pop
ret
fs
dec
sub
or
je
xor
pop
jecxz
pop
jnp
pop
sub
dec
shl
or
inc
or
sti
push
retf
inc
jle
js
xor
inc
cmp
xchg
scas
jbe
dec
or
fiadd
and
ss
push
sbb
dec
mov
bound
xor
mov
inc
add
inc
ffree
inc
cs
retf
jb
push
cmps
xchg
loop
push
cmps
xchg
ja
cli
jo
xor
outs
sbb
mov
mov
xor
js
mov
arpl
sub
arpl
fs
lock
inc
iret
syscall
or
fidivr
push
push
mov
into
sti
pop
js
inc
or
cmp
pop
imul
pop
pop
mov
push
es
lock
outs
pop
push
push
xor
dec
js
ret
div
das
inc
pop
dec
es
das
push
fisub
add
and
or
out
sti
pop
push
sysexit
mov
cs
dec
gs
sahf
push
outs
push
push
cli
push
push
ins
sub
out
mov
ins
mov
inc
cs
xor
mov
fimul
jp
push
push
fiadd
jg
mov
das
xor
das
xor
outs
pop
outs
dec
xor
js
push
into
xor
adc
test
outs
imul
or
sbb
lahf
xchg
inc
and
pop
add
lods
mov
call
add
aam
jmp
lock
fsubr
retf
fmul
jmp
ds
sub
and
push
lock
aas
add
xor
dec
jno
mov
mov
sbb
ja
jmp
xor
xchg
out
adc
add
sub
mov
imul
test
adc
je
(bad)
shr
mov
and
and
fs
das
or
pop
add
mov
iret
sbb
das
arpl
cmp
sbb
out
scas
xor
or
xchg
mov
lahf
push
inc
das
stos
pop
mov
jg
mov
add
out
call
lahf
inc
mov
loopne
or
jmp
xor
mov
cmp
mov
mov
jae
outs
mov
stos
fsubr
shl
mov
sbb
or
xlat
inc
ror
add
mov
sti
mov
push
dec
inc
pop
ins
outs
popa
fs
outs
aaa
mov
push
mov
or
adc
add
sbb
call
lods
or
in
cmps
addr16
push
xor
iret
lods
sub
mov
push
pop
stos
std
jl
mov
push
add
neg
sub
iret
addr16
in
fimul
sbb
jecxz
arpl
pop
lods
je
addr16
in
cwde
xchg
scas
repz
pop
pop
pop
push
outs
(bad)
mov
bound
xchg
pop
and
sbb
clc
cwde
xchg
inc
cmps
adc
faddp
push
jle
jl
push
xchg
out
cmp
add
fisubr
dec
ja
mov
int
pop
cmp
jne
jo
arpl
xor
das
rol
pop
pop
ja
xor
xor
mov
imul
sbb
inc
push
(bad)
pop
mov
xor
pop
repz
xchg
xchg
jae
and
jae
xor
cwde
mov
sub
dec
mov
pop
add
sbb
push
add
das
push
sub
test
sub
xor
ret
push
loope
push
lahf
mov
lahf
scas
xlat
xor
sub
inc
sub
iret
add
xchg
or
in
nop
aas
jecxz
mov
jbe
les
imul
lods
cwde
dec
daa
sti
pop
aad
shl
mov
fisubr
adc
dec
xor
mov
and
loope
ret
popa
fld
inc
or
xor
pusha
je
int
mov
int3
fs
xchg
or
mov
inc
push
and
push
mov
inc
inc
sub
(bad)
rcr
dec
loopne
push
sbb
jns
add
mov
aaa
iret
(bad)
mov
xchg
cmp
nop
(bad)
outs
dec
arpl
mov
daa
popa
ss
pusha
jbe
stos
(bad)
pop
movs
push
test
xlat
fmul
(bad)
das
repz
aam
mov
outs
pop
or
aaa
sub
je
int3
inc
push
fs
mov
das
jne
mov
mov
sub
daa
add
dec
xlat
jle
mov
mov
push
add
jmp
add
ss
inc
cmp
shr
add
loopne
test
imul
sbb
sub
xor
xchg
sbb
add
push
and
push
cld
outs
pop
out
mov
or
add
push
adc
push
sbb
mov
iret
xor
repz
mov
mov
repz
or
xchg
data16
ins
or
pop
or
int
or
adc
adc
sbb
and
fwait
int
sub
xor
inc
mov
mov
jnp
(bad)
mov
mov
popa
xchg
add
mov
push
shr
ret
sub
shl
data16
or
adc
ins
jo
stc
pop
add
xchg
rcl
ss
push
dec
str
int
mov
add
inc
stc
das
inc
nop
call
push
cmp
call
pop
outs
movs
push
sub
dec
dec
(bad)
add
inc
sqrtps
dec
mov
mov
(bad)
mov
push
and
mov
add
adc
xchg
mov
mov
lods
pop
dec
movs
enter
jmp
jb
push
push
mov
inc
push
ins
ss
adc
cli
mov
sub
das
mul
sub
mov
sbb
mov
mov
and
xor
pop
sbb
xor
mov
mov
fsub
sbb
ret
(bad)
jmp
dec
pop
dec
xchg
jecxz
dec
push
sbb
xchg
add
pop
jb
mov
pop
push
and
cmp
jle
scas
addr16
xchg
push
mov
inc
and
pusha
dec
cs
ins
pop
add
add
aaa
jbe
or
or
push
ins
xchg
mov
xchg
and
iret
leave
jae
sub
sbb
or
mov
fwait
in
pop
inc
xchg
out
pop
fdiv
pop
int3
xor
jns
sahf
mov
fwait
xchg
out
adc
mov
jl
add
inc
outs
rol
loop
(bad)
xor
or
lahf
mov
add
pop
inc
cmovs
lods
mov
xor
mov
fist
(bad)
je
lea
and
pop
pop
xor
inc
mov
sbb
jnp
cmp
inc
mov
pop
xor
inc
adc
rcr
inc
jecxz
add
xor
fisub
mov
cmp
and
jbe
pop
push
lock
movs
and
xlat
push
mov
add
bound
je
bound
imul
pop
jns
inc
aas
mov
add
push
and
push
add
retf
jge
(bad)
(bad)
das
aaa
push
fisttp
push
imul
jecxz
inc
popa
aam
lahf
pop
mov
out
and
inc
fwait
pop
dec
push
or
(bad)
inc
push
scas
mov
mov
loopne
je
aaa
or
jo
aaa
bswap
or
mov
push
xor
xor
nop
cmps
lea
das
inc
mov
push
(bad)
mov
xchg
mov
call
dec
or
rcl
(bad)
aaa
xor
pand
push
dec
and
mov
lahf
push
jl
jae
jb
pop
fistp
in
inc
dec
mov
adc
fdivr
(bad)
push
outs
xlat
push
sbb
aaa
(bad)
rcl
fbstp
or
inc
or
jbe
mov
mov
dec
mov
push
lahf
dec
push
adc
inc
aaa
add
or
cmps
push
and
cli
mov
mov
rcr
sti
xchg
jle
jnp
mov
dec
push
push
xor
mov
xor
rcl
and
(bad)
push
mov
push
xchg
stos
pop
push
movs
call
inc
shl
push
pop
xchg
aaa
sti
mov
xchg
pop
(bad)
mov
cmp
fnstenv
and
arpl
sub
mov
jbe
mov
add
sbb
pusha
cs
inc
xchg
push
lods
push
retf
test
rcl
pop
pop
dec
hlt
scas
pushf
test
mov
es
xchg
cmp
xchg
add
cmp
xchg
push
cs
dec
pop
push
and
mov
mov
and
ss
neg
push
ror
or
int
imul
repz
pop
stos
inc
pop
pop
xchg
fldenv
mov
push
cmc
dec
push
daa
data16
idiv
sub
aaa
outs
out
ds
repz
je
mov
adc
out
jns
xor
fiadd
pop
repnz
mov
mov
mov
call
mov
test
ds
jnp
test
xchg
fsubrp
adc
xlat
pop
xlat
sbb
xor
icebp
jns
cs
movs
pop
pop
out
cmp
push
mov
mov
sbb
outs
inc
dec
pop
repz
push
push
jns
es
cmp
aas
repnz
pop
ds
outs
nop
outs
int3
inc
mov
push
adc
xchg
dec
rcl
dec
push
ins
jl
out
test
cmps
stc
out
shl
and
mov
sahf
out
push
xor
cmps
enter
dec
sub
stc
cmp
repz
mov
jns
cmps
es
jno
(bad)
ss
out
and
push
mov
sahf
fprem1
adc
ds
repz
mov
cli
push
push
dec
or
dec
sbb
scas
dec
aam
aad
or
(bad)
adc
(bad)
(bad)
(bad)
and
(bad)
rcr
push
push
mov
xor
adc
mov
(bad)
pop
pop
mov
scas
in
bound
int
mov
leave
loop
and
push
pop
sub
lahf
add
idiv
pop
sub
adc
push
and
pop
sbb
stc
sar
enter
adc
repnz
inc
(bad)
(bad)
cmp
iret
ds
or
outs
pop
adc
add
stos
jo
mov
xchg
rcr
sbb
dec
std
(bad)
shl
push
cmp
xlat
adc
loopne
pop
push
and
iret
popf
lock
std
ja
outs
outs
jp
in
loop
xor
push
js
xor
stos
pop
inc
imul
cmp
xor
add
sbb
pop
mov
aad
lods
iret
imul
push
dec
add
adc
jmp
(bad)
aas
pop
push
dec
out
xor
push
push
outs
inc
jb
popa
je
or
sub
push
fstp
sub
pop
inc
mov
sti
inc
fisubr
out
pop
push
ficomp
cs
dec
xchg
ss
sti
es
mov
sbb
jmp
shl
adc
scas
pop
in
daa
adc
and
dec
not
push
mov
push
pop
addr16
jno
fcom
and
add
outs
xlat
(bad)
jecxz
jmp
jo
push
(bad)
jo
pop
add
(bad)
inc
jg
mov
dec
xor
inc
or
(bad)
daa
jecxz
outs
ins
jno
sbb
xchg
retf
in
jnp
mov
ficom
mov
test
mov
jb
adc
imul
mov
fwait
mul
sbb
cmova
sbb
loop
lahf
and
dec
cwde
pop
test
push
adc
or
add
xchg
xchg
sti
rcl
jae
xor
daa
add
pusha
mov
sysexit
les
push
dec
daa
and
xor
dec
daa
dec
mov
fs
jo
xor
daa
fist
push
outs
imul
je
mov
add
pop
sub
add
jo
jg
aaa
mov
jb
loopne
add
jecxz
mov
mov
xor
ret
shl
test
cwde
and
sbb
pop
pop
inc
dec
movs
or
push
add
mov
jmp
aaa
fld
das
das
sbb
scas
pop
sbb
scas
out
push
pop
mov
aad
ja
xchg
pop
addr16
arpl
mov
(bad)
jae
fs
sub
adc
es
adc
mov
psubq
imul
jo
cmp
mov
pop
das
xchg
es
out
pop
shl
add
retf
dec
add
jge
arpl
or
fild
cs
pop
dec
add
adc
mov
jne
cs
popw
mov
mov
outs
aaa
imul
pop
aaa
imul
mov
das
test
jg
ins
adc
shl
xchg
das
sub
ins
or
add
das
(bad)
push
fild
mov
xchg
mov
inc
dec
push
mov
inc
jle
pusha
push
pop
imul
pop
push
fsub
jecxz
out
inc
pop
push
fmulp
inc
xor
or
add
lahf
push
add
cmp
loope
test
aas
push
mov
rol
(bad)
repz
popa
fld
(bad)
das
cmovns
adc
sahf
pop
inc
add
inc
dec
fidiv
xchg
aas
adc
inc
stos
scas
mov
xlat
pop
or
pop
out
add
push
test
pop
outs
clc
mov
aas
add
sub
or
jp
div
inc
inc
push
inc
scas
sub
pop
cli
cmp
dec
pop
out
or
push
pop
pop
or
retf
fidiv
mov
xor
add
xchg
sbb
jbe
inc
aaa
ret
pop
outs
bound
dec
and
pop
mov
inc
and
fdiv
dec
cmp
(bad)
ret
outs
dec
stos
arpl
lock
cmps
push
push
jg
ret
mov
add
inc
aaa
jno
push
dec
pop
pop
inc
dec
es
inc
mov
je
and
fild
(bad)
or
out
xchg
nop
outs
or
das
adc
and
adc
jbe
dec
add
cmp
ins
je
aaa
shr
or
ds
jo
jae
inc
loope
mov
outs
xor
push
call
xor
dec
mov
pop
sub
fdivr
out
jns
je
jne
or
adc
sahf
dec
(bad)
fbld
ja
mov
mov
dec
jae
mov
sbb
mov
cmp
jp
inc
pop
mov
push
inc
xor
xor
imul
adc
iret
jbe
xor
data16
jmp
push
inc
fiadd
maskmovq
test
out
pop
stos
mov
mov
icebp
sub
cmp
dec
shl
push
mov
jg
pop
and
cs
pop
into
dec
inc
push
pop
stos
mov
jmp
mov
push
and
pop
aad
inc
inc
pop
daa
fwait
cwde
ss
add
lods
addr16
add
push
add
aam
jns
add
adc
adc
inc
mov
push
and
rol
ret
mov
ror
inc
adc
out
or
outs
or
aaa
inc
ins
loopne
jmp
mov
rol
inc
pop
push
or
dec
out
jb
pop
loope
cmp
ds
aaa
add
add
push
pop
jns
outs
(bad)
inc
dec
inc
dec
push
xchg
add
inc
loop
and
pop
aas
mov
out
sbb
sub
mov
and
push
dec
into
add
mov
neg
sets
mov
inc
aaa
jno
sti
shl
ret
(bad)
(bad)
(bad)
cmp
adc
pop
movs
cmp
aad
sbb
cwde
stos
pop
fadd
pop
adc
test
and
jge
push
je
mov
jb
mov
and
fwait
rol
fwait
in
inc
mov
bswap
mov
jmp
sub
fsubr
stc
jbe
push
ds
ins
(bad)
xor
(bad)
jg
mov
(bad)
(bad)
inc
inc
xchg
cmps
aad
arpl
push
sub
adc
or
cs
ins
sub
adc
or
(bad)
(bad)
jmp
or
cs
ret
sub
xchg
mov
data16
mov
call
call
and
cdq
(bad)
test
push
push
shl
ja
daa
mov
mov
mov
sbb
(bad)
(bad)
(bad)
cmp
fmul
retf
rep
cs
outs
arpl
test
add
mov
(bad)
jg
ins
mov
mul
jno
addr16
std
(bad)
(bad)
jmp
scas
addr16
cmp
dec
movs
jg
push
push
mov
fwait
stos
fld
pop
and
dec
ret
js
sbb
mov
mov
das
sbb
xor
add
pop
daa
daa
dec
in
xlat
daa
push
and
push
pop
inc
inc
inc
push
sar
fild
and
or
aas
js
ins
cwde
pop
fisubr
push
pop
adc
fsub
outs
ds
or
inc
pop
(bad)
ss
sub
pop
gs
inc
sbb
pop
aas
ds
push
pushw
push
mov
pop
push
sbb
xchg
push
js
loope
mov
lahf
daa
inc
add
sub
loop
lahf
jbe
inc
add
shr
sub
mov
pop
inc
xor
lahf
stos
fdivr
outs
cwde
push
ins
mov
cmps
xor
inc
adc
cmp
setg
neg
imul
push
and
call
sar
(bad)
ret
adc
fcom
mov
push
fisubr
xchg
mov
ret
add
pop
or
mov
sbb
daa
or
jno
jecxz
lahf
dec
pop
mov
push
xchg
push
aaa
test
push
rdmsr
pop
dec
rcr
adc
(bad)
xor
inc
les
push
adc
jb
lock
sub
out
push
imul
ror
jne
popa
loope
fwait
sub
out
and
bound
xor
add
es
sbb
sub
in
xchg
and
add
movs
outs
je
mov
popa
stos
mov
out
(bad)
std
xchg
sub
sub
sub
push
cmp
mov
js
ret
dec
inc
sar
xor
jo
movs
popa
mov
add
ins
outs
fs
mov
mov
gs
jo
jns
iret
inc
mov
adc
outs
ins
jne
adc
call
dec
fiadd
les
sub
das
cmp
and
js
je
bound
aaa
and
cmp
pop
jbe
pop
or
ins
mov
inc
inc
mov
lds
outs
jo
mov
lods
(bad)
cmc
push
sahf
dec
sub
jmp
mov
movsx
popf
neg
xchg
inc
or
inc
push
stc
std
fisttp
shr
cmc
inc
cmovo
out
imul
cmp
aas
(bad)
adc
in
nop
jo
maxps
loopne
cs
add
(bad)
mov
add
inc
smsw
and
dec
jne
pop
push
inc
enter
les
imul
sbb
cmp
out
ss
add
aas
add
shl
mul
(bad)
in
dec
xor
add
inc
push
push
push
jmp
jmp
ins
das
inc
add
fstp
add
lahf
ds
jnp
add
daa
(bad)
les
or
fsub
in
fsubr
jo
daa
outs
inc
xchg
outs
mov
out
lds
leave
daa
xchg
cmp
je
push
jo
mov
mov
push
and
dec
fsub
xor
scas
fisttp
inc
test
add
in
and
scas
mov
inc
pushf
leave
mov
outs
jle
pop
lods
pop
jb
mov
dec
or
sbb
or
jg
retf
rol
adc
in
jne
scas
push
push
pop
addr16
dec
ficom
nop
xchg
out
lahf
mov
cmp
pop
and
sti
cmp
call
inc
inc
mov
xchg
fmul
adc
and
xor
inc
retf
xchg
dec
iret
mov
inc
outs
xchg
js
jb
jae
or
movs
mov
int3
fsub
ror
int3
out
aad
ins
daa
sbb
(bad)
aas
out
fs
mov
daa
add
push
int3
jmp
mul
pusha
push
ins
push
mov
inc
add
push
xor
lods
(bad)
ds
test
jb
push
in
xor
daa
push
(bad)
hlt
mov
xor
(bad)
jb
repz
push
push
mov
(bad)
stos
aas
ja
aam
dec
enter
or
mov
aas
dec
pop
xor
movs
inc
hlt
nop
sub
lods
outs
scas
add
ja
fsub
inc
cs
into
(bad)
sub
push
daa
lock
stc
lods
addr16
inc
enter
jo
cmp
sbb
test
stos
mov
add
idiv
iret
(bad)
xor
push
in
neg
cmp
push
in
(bad)
mov
add
add
mov
in
dec
enter
iret
rcr
xchg
inc
jo
jo
mov
daa
scas
jns
iret
aam
or
adc
pop
jb
lock
daa
cld
and
aaa
and
push
xchg
xchg
pusha
adc
pushf
cld
jl
dec
scas
(bad)
(bad)
iret
lds
(bad)
aam
bound
in
es
out
or
pop
sbb
sub
shl
aas
inc
sahf
outs
ins
ja
rcr
nop
out
jl
test
in
add
lods
shr
mov
cmp
jb
xor
or
xor
ds
jb
pusha
dec
rol
mov
pusha
test
fidiv
mov
mov
enter
cld
or
or
mov
in
loopne
rcr
in
cmp
shl
fcom
fisubr
or
out
call
cmp
or
cmp
hlt
or
mov
cmps
cmp
aaa
and
dec
push
or
pop
cmps
pop
fisub
bnd
jg
mov
mov
mov
iret
test
loopne
enter
add
mov
jb
loopne
xor
test
inc
push
pop
cmps
inc
loopne
(bad)
push
enter
and
repnz
ror
pop
in
push
push
cmps
mov
pop
enter
in
pop
(bad)
cmps
jb
dec
enter
fsubr
ds
js
(bad)
inc
push
push
push
enter
xor
js
in
stc
(bad)
jg
mov
outs
dec
mov
dec
add
test
aam
pop
enter
enter
jae
clc
and
xor
and
sti
push
inc
xlat
lahf
clc
ja
dec
repz
lahf
and
je
pop
in
push
repnz
dec
lahf
je
enter
(bad)
aam
and
repnz
les
mov
test
fadd
and
pop
stos
cli
push
cmp
xorps
nop
addr16
jg
test
fcom
hlt
mov
test
nop
out
cs
out
int3
loopne
loopne
das
in
mov
movs
cmps
outs
inc
and
xor
test
cmps
aam
mov
fldenv
inc
fadd
fs
xchg
jl
xchg
mov
fst
jb
fmul
inc
mov
ds
sbb
sub
out
sub
jg
pop
enter
pop
ins
sbb
fsubr
pop
dec
repz
mov
aam
in
pop
stos
aas
push
cmps
mov
test
add
adc
sub
fiadd
cmps
jg
lods
cmp
daa
addr16
leave
js
dec
add
or
test
fiadd
mov
mov
lock
or
push
mov
lock
mov
sar
lahf
dec
iret
les
inc
jbe
dec
pushf
inc
jl
sbb
lods
rcr
inc
scas
(bad)
lea
cmps
pushf
push
xchg
out
lock
and
lock
inc
fst
fs
mov
push
enter
jg
outs
in
stc
dec
int3
xchg
daa
movs
lahf
pusha
ins
inc
jo
inc
ja
pop
enter
in
or
pop
adc
dec
enter
sar
fimul
sub
lahf
dec
inc
ja
sub
aaa
daa
sar
fisub
cs
push
lods
fdivrp
push
push
mov
cmps
jo
fadd
lahf
jo
test
fcomp
adc
cmp
push
fist
imul
dec
rol
lahf
int3
inc
or
or
rol
push
hlt
(bad)
mov
or
push
inc
jg
inc
call
lahf
(bad)
push
or
lahf
or
je
test
add
push
call
xor
or
inc
enter
inc
mov
cmp
lock
cmp
iret
mov
mov
dec
in
ins
daa
or
lahf
in
inc
and
pop
imul
sar
loopne
outs
push
jae
add
jmp
loopne
loop
and
lahf
dec
cdq
lods
lods
add
lahf
or
in
jo
out
cs
fs
mov
in
nop
mov
ror
mov
aaa
and
push
and
lahf
mov
ja
in
jb
iret
test
in
pop
enter
aam
fld
or
in
lahf
mov
add
sbb
cs
inc
lock
in
mov
push
xchg
inc
(bad)
stos
xchg
(bad)
outs
aas
mov
dec
sahf
imul
add
sahf
mov
rcr
or
das
adc
lahf
fmul
in
push
and
inc
jo
push
movs
das
fmul
outs
xchg
clc
push
fs
dec
sahf
jo
clc
outs
lock
aad
cs
xchg
mov
iret
add
nop
or
fld
clc
push
repnz
and
nop
or
out
outs
in
pushf
adc
daa
addr16
ins
or
add
sahf
pop
pushf
daa
lods
in
xchg
mov
xor
jmp
mov
scas
(bad)
xlat
pop
push
sbb
mov
push
sbb
push
sub
cmp
aas
call
les
inc
lods
pop
adc
ja
mov
mov
add
dec
in
repnz
cld
sub
fiadd
out
dec
dec
call
fwait
pop
push
pusha
daa
aas
mov
addr16
or
add
pop
out
repz
mov
ja
daa
sbb
dec
scas
fs
jmp
scas
in
cmp
in
scas
xor
dec
scas
in
and
aam
push
call
enter
add
push
pop
push
inc
xor
data16
icebp
cwde
neg
dec
clc
adc
stc
mov
push
xor
lock
out
int3
mov
push
js
out
push
jns
out
sahf
push
inc
out
ds
ja
out
push
js
or
jl
jl
test
push
add
adc
scas
fisub
jg
add
inc
inc
adc
dec
ds
inc
cld
push
mov
push
ret
inc
call
add
nop
cmp
sub
in
mov
xchg
mov
idiv
push
or
fdivr
inc
push
push
inc
mov
jmp
ja
ss
arpl
leave
adc
popa
xchg
dec
inc
dec
outs
scas
fs
pop
movs
sti
inc
sbb
adc
add
shr
ret
xchg
cmp
loopne
in
in
outs
add
ins
and
mov
daa
inc
(bad)
in
ret
sar
in
fild
push
xor
cmp
fild
jb
scas
test
(bad)
cmp
push
lock
adc
popa
and
push
rcr
out
int3
sbb
and
xchg
mov
cmp
add
and
jmp
dec
repnz
mov
scas
add
or
and
(bad)
xor
push
jno
pop
xor
out
or
repnz
out
out
outs
add
mov
fild
loop
rol
js
call
cwde
add
jns
sub
add
jnp
xlat
add
(bad)
adc
test
sub
leave
mov
je
neg
loopne
(bad)
pop
jg
lods
or
out
adc
mov
sub
dec
enter
cld
lock
pop
in
and
outs
(bad)
sbb
xchg
and
fisub
jl
adc
mov
fdivrp
and
push
xor
jbe
fcom
add
aam
shl
xchg
add
cmps
pop
dec
out
sbb
daa
add
xlat
callw
cmps
in
push
xchg
aaa
sbb
add
fisubr
div
ins
jnp
jmp
push
fsub
push
jbe
aaa
jmp
call
loopne
popa
popf
pop
mov
mov
sub
test
in
jg
push
jo
add
xor
cmovle
inc
repz
push
repz
jnp
ret
nop
pop
sbb
jecxz
push
ds
dec
add
(bad)
js
mov
cwde
mov
mov
(bad)
div
fisttp
hlt
adc
outs
push
mov
mov
push
outs
jg
inc
pop
cmp
pop
pusha
xchg
daa
cli
push
repnz
mov
mov
push
mov
cwde
cmc
fnstsw
test
dec
xor
call
push
mov
pop
hlt
mov
loope
or
or
ficom
and
or
dec
test
aad
xlat
or
pushf
xchg
xchg
ins
dec
shl
push
test
in
cmc
and
push
pop
cld
cmc
mov
test
dec
push
push
mov
mov
test
(bad)
div
xor
aaa
adc
div
call
cmp
dec
div
sub
outs
sbb
or
js
cmps
push
pushf
nop
adc
xor
fiadd
dec
mov
pusha
mov
jg
daa
cmps
mov
mov
clc
ja
loop
in
add
xor
jg
in
fiadd
int3
add
mov
jl
or
adc
bound
(bad)
clc
and
in
push
mov
das
outs
add
push
or
pop
mov
cmp
pop
dec
pop
cli
pop
adc
pop
stc
aaa
add
xchg
dec
and
mov
push
in
mov
lods
or
addr16
dec
xchg
add
add
daa
loopne
sub
daa
or
mov
inc
fcomip
sahf
xchg
test
movs
adc
clc
sti
cmp
mov
fld
ret
mov
or
aas
sub
push
test
xchg
sub
fdivr
sti
sbb
movs
mov
sti
push
sti
outs
fsub
inc
cs
fbld
rol
add
add
xchg
aaa
and
cld
xchg
mov
mov
pop
pusha
and
xor
(bad)
jl
out
lods
or
add
lahf
addr16
dec
loopne
or
out
les
jb
push
jb
add
pop
rcl
adc
mov
adc
push
mov
aas
arpl
or
idiv
fwait
sub
addr16
push
add
push
inc
mov
push
dec
mul
test
inc
sub
(bad)
jns
or
(bad)
jmp
(bad)
das
aaa
and
outs
dec
call
rcl
lock
or
inc
rcl
adc
mov
push
inc
jmp
ja
shr
clc
out
push
or
neg
mov
aam
clc
ja
pop
test
outs
(bad)
call
mov
mov
aad
shr
add
dec
jns
int
shl
jae
xchg
repz
out
in
mov
cmps
stc
cmp
pushf
ret
mov
out
sahf
jo
mov
add
cmp
xchg
mov
sahf
out
cmp
repz
call
mov
sahf
cmps
stc
cmp
lea
repz
sar
jbe
(bad)
es
loope
jns
out
nop
cmp
jmp
cmp
pop
sbb
jns
pop
mov
cmp
repz
ins
xchg
shl
sahf
cmps
stc
sub
cmp
out
or
jns
iret
rol
xchg
and
iret
repz
add
add
arpl
cmp
imul
push
popf
rcr
dec
repz
push
pop
movs
sahf
ja
ds
pushf
ficomp
iret
sar
inc
loop
lahf
push
out
out
lods
repnz
repz
jmp
mov
out
ds
ds
mov
mov
mov
cmp
sbb
mov
cmps
mov
mov
loopne
cmps
ds
jl
stc
sahf
mov
push
lahf
sbb
rcr
push
stos
mov
push
stos
jbe
cli
xor
mov
lahf
lods
adc
jle
(bad)
ds
jnp
jns
iret
(bad)
sbb
repz
dec
jmp
mov
mov
xchg
imul
mov
lahf
iret
sar
cmc
inc
mov
jmp
lahf
out
call
mov
iret
repz
mov
cmp
out
cmps
leave
pusha
mov
cmps
stc
add
mov
cmp
enter
cmps
stc
out
repz
mov
sahf
mov
push
xchg
mov
cmp
repz
cmp
jns
out
ret
cli
xor
dec
jo
into
add
push
out
jl
cmps
out
lds
jns
push
mov
popa
(bad)
push
enter
sahf
dec
sub
es
mov
fnstsw
retf
fiadd
(bad)
mov
sar
enter
xchg
mov
cmps
stc
cmp
push
iret
fwait
out
ss
jge
ja
push
mov
xor
pop
push
lods
cmp
out
xlat
cli
sub
stc
out
repz
ds
or
or
(bad)
cmp
mov
add
out
call
mov
fadd
fdiv
cwde
cmp
ja
push
lods
inc
fidiv
iret
sar
imul
mov
(bad)
ds
mov
or
test
test
daa
loopne
iret
imul
shl
xchg
call
iret
div
jmp
push
sub
mov
xor
push
div
call
cli
loope
movs
std
int
lods
mov
dec
add
xor
add
lahf
cmp
fnsave
int3
nop
inc
inc
aas
mov
(bad)
inc
cmp
repnz
popa
nop
scas
adc
lea
or
add
pop
aaa
int
mov
jge
inc
pop
mov
outs
pop
leave
or
add
adc
aas
pop
xchg
xor
das
fs
fsub
adc
pop
fild
das
stos
popf
push
(bad)
cmp
xchg
mov
sar
aas
pop
(bad)
cmp
into
mov
pop
and
mov
mov
or
out
aas
int3
adc
mov
sbb
push
(bad)
outs
adc
inc
mov
dec
sbb
inc
dec
pop
iret
mov
cmps
fmul
and
fwait
xor
and
inc
dec
pop
dec
jg
jb
cmp
dec
aas
in
xchg
outs
test
scas
xlat
ss
push
inc
pop
or
lods
adc
movq
mov
clc
add
daa
hlt
push
ret
jl
pop
cmp
lods
cmp
(bad)
adc
shl
ja
or
inc
push
push
pop
push
lahf
cmp
enter
inc
js
jns
xchg
xchg
pushf
movs
or
mov
fist
inc
ffreep
mov
pop
cmp
mov
sar
(bad)
hlt
jne
repnz
pcmpeqb
scas
or
les
dec
leave
sbb
(bad)
inc
inc
xchg
pop
inc
leave
or
jne
xchg
inc
shl
lahf
leave
out
loope
push
dec
xchg
or
mov
add
inc
lds
inc
pop
inc
or
push
or
jmp
xchg
leave
mov
dec
fldenv
add
in
xchg
outs
pop
iret
ja
pop
mov
(bad)
mov
xor
in
mov
ja
fild
outs
fbstp
mov
mov
cmp
in
pushf
lea
push
mov
js
xchg
mov
push
push
pop
and
cmp
retf
push
inc
(bad)
dec
mov
out
xchg
mov
fimul
cmp
aam
xchg
ror
xchg
xchg
add
pop
ja
pop
jb
mov
xlat
popf
popa
scas
xor
push
mov
cmps
sbb
and
das
mov
pushf
in
mov
jo
push
fisttp
mov
push
scas
mov
xor
add
repnz
sub
pop
ret
or
inc
mov
mov
jl
add
cmp
push
push
lea
fdivr
scas
in
leave
aam
xchg
lock
dec
cmps
popf
push
dec
mov
je
sar
pop
ja
xchg
pop
mov
iret
fcomp
out
add
pop
fisub
or
int3
adc
enter
cmps
xor
and
jb
call
sbb
push
addr16
pop
mov
push
daa
push
or
in
outs
mov
xchg
xchg
xchg
add
pop
rol
adc
pop
xlat
movs
ja
data16
aaa
dec
cmps
cmps
(bad)
test
(bad)
push
adc
lea
test
mov
shr
push
add
jne
popf
fld
jne
jge
mov
je
dec
dec
mov
shl
popf
xor
push
dec
dec
cs
jo
repz
enter
add
out
and
ds
in
jbe
in
cmovbe
divps
popw
outs
mov
sbb
pop
xchg
add
and
jmp
repz
push
fcmovnb
out
iret
repz
or
or
or
repnz
call
(bad)
mov
js
dec
push
add
jbe
scas
push
push
daa
pop
pop
addr16
ret
in
in
xor
daa
mov
stos
xchg
mov
add
iret
repz
add
add
xchg
or
and
test
imul
xchg
leave
inc
cmp
push
cmps
add
cmps
in
inc
scas
ja
dec
pop
or
cmp
pop
mov
(bad)
jb
das
jge
mov
and
nop
stos
nop
mov
fnsave
jb
ret
nop
rcl
mov
out
xchg
icebp
ss
or
sbb
sbb
cmp
aas
add
cmps
sub
pusha
sbb
leave
dec
lods
(bad)
daa
jo
(bad)
jne
das
mov
scas
test
inc
in
hlt
nop
in
inc
add
into
sbb
xchg
(bad)
out
in
xchg
xchg
icebp
xchg
cld
xchg
or
sbb
fcmovnb
add
(bad)
xor
add
bound
push
fist
test
jo
jno
pop
push
aas
mov
xchg
lock
jp
or
repnz
sbb
cmps
rol
scas
push
shl
in
mov
push
add
mov
xchg
inc
dec
leave
add
sbb
sbb
sbb
jns
bswap
aas
nop
inc
push
sbb
nop
and
inc
sbb
xchg
push
mov
and
not
ja
xchg
dec
enter
cmp
mov
aaa
sbb
xchg
mov
mov
sbb
push
daa
push
sbb
inc
jo
add
mov
sbb
jg
xchg
fild
pop
mov
xchg
sbb
xchg
js
mov
aam
aas
pop
cmps
cmp
dec
jb
sbb
pop
pop
xor
pop
xlat
mov
outs
into
out
inc
rcl
pop
mov
inc
sub
jb
sbb
leave
stos
push
mov
mov
push
fild
fs
push
je
jbe
das
and
inc
ucomiss
push
jmp
rcl
add
dec
call
dec
outs
pop
int
xchg
inc
lds
ja
addr16
pop
dec
shl
pop
(bad)
in
push
repnz
adc
paddw
mov
pop
adc
daa
lahf
add
mov
and
cmp
and
mov
sbb
popf
adc
push
add
iret
repz
add
ror
pop
in
sti
inc
or
pop
leave
mov
xchg
and
push
ret
mov
mov
sbb
movs
sub
and
pop
and
xlat
test
movs
in
es
and
ror
repnz
cmc
xchg
or
sbb
and
jg
cmp
push
inc
out
jb
add
fsubr
xchg
cwde
mov
int
push
out
clc
mov
adc
and
int
cwde
je
popa
aaa
mov
test
mov
mov
pop
rcl
and
push
call
xchg
pushf
pop
mov
scas
add
mov
fnstsw
out
ja
cmp
icebp
xchg
es
rcr
fbstp
and
out
push
sets
test
mov
mov
fistp
fs
pop
in
mov
mov
clc
(bad)
stc
fcmovbe
out
adc
push
pop
mov
cmp
adc
and
add
mov
pop
sbb
es
popf
push
popf
add
iret
mov
(bad)
cs
pop
cld
es
in
in
es
pushf
jbe
jecxz
jmp
scas
inc
daa
pop
jo
mov
cwde
cdq
push
daa
aas
mov
ret
retf
outs
ror
add
out
fucomi
add
hlt
in
pop
sahf
out
setle
or
daa
sahf
mov
inc
jg
adc
inc
retf
adc
and
xor
mov
inc
push
push
mov
ja
pop
ja
pop
daa
jbe
daa
or
mov
sbb
xlat
cmps
cdq
push
scas
movs
push
lahf
scas
sahf
call
pop
push
leave
aam
fild
sub
push
xlat
(bad)
mov
cmp
xor
add
inc
(bad)
xchg
adc
cmp
pop
mov
outs
js
out
mov
jns
fstp
lahf
sahf
lahf
sbb
push
pop
call
shl
(bad)
pminsw
vmwrite
sub
or
fstp
dec
outs
daa
iret
jnp
push
add
das
jo
fcmovne
repz
add
es
ja
xchg
cwde
mov
cmps
addr16
pop
int3
sbb
in
daa
repnz
or
rcr
xchg
and
pop
lods
(bad)
inc
push
xchg
leave
and
int
mov
scas
ja
cmc
mov
mov
fs
mov
into
push
mov
push
pop
leave
jae
pop
dec
ja
test
fwait
bt
out
iret
cmp
mov
add
and
daa
daa
fiadd
push
pop
sbb
jmp
dec
inc
cmovnp
add
in
fisubr
ja
mov
mov
cmps
push
into
sub
sub
jae
iret
repz
sti
pop
movs
pop
repz
or
ja
mov
ja
pop
repz
cmp
dec
add
add
cmp
leave
ins
js
or
cdq
or
scas
das
mov
in
dec
sahf
push
(bad)
adc
iret
enter
adc
pop
movs
adc
shr
es
cmp
xor
jmp
jmp
fbstp
pop
das
push
call
rsm
mov
jae
push
addr16
xchg
push
idiv
pop
push
cmps
(bad)
mov
push
add
and
xlat
fcomp
shr
setb
dec
cmps
xor
fnsave
ja
xor
ss
cmp
push
inc
jb
and
push
shl
inc
jb
sti
cld
push
cmps
mov
pop
and
daa
cs
add
add
xor
pop
xchg
xchg
cmps
loopne
test
mov
int
das
add
in
test
add
in
scas
mov
out
inc
scas
cld
xor
in
push
mov
call
les
or
xor
xor
jo
add
pavgb
call
lock
adc
mov
test
and
loope
cmp
cmp
mov
or
mov
push
mov
mov
out
in
in
add
fucom
in
pop
inc
mov
test
test
xchg
and
mov
das
(bad)
push
test
pop
je
out
mov
inc
mov
push
add
mov
jns
leave
xrelease
or
leave
leave
in
and
(bad)
idiv
adc
sete
sub
es
xchg
stos
xor
pop
stos
xchg
popf
out
add
bound
add
jnp
(bad)
jle
fsubr
popf
pop
cmps
scas
addr16
cmp
adc
in
cmp
rol
dec
sbb
push
push
mov
dec
mov
jo
outs
stos
dec
xor
mov
xor
repnz
pushf
stos
cmps
stos
ss
fimul
loop
jmp
repnz
jns
xchg
js
lods
call
in
and
mov
(bad)
out
adc
jo
adc
fld
mov
mov
dec
dec
sub
fist
popa
sub
dec
out
pop
imul
dec
inc
lods
femms
push
push
pop
out
jns
pop
or
das
or
jns
xchg
aaa
aas
or
or
dec
push
push
pop
adc
repz
adc
jg
sahf
xlat
ins
pop
unpckhps
xchg
vphaddbw
xchg
lods
xlat
sbb
int3
mov
lods
das
std
repnz
scas
das
fsub
sub
push
pop
cmp
int
ja
push
xchg
(bad)
scas
js
shl
scas
scas
in
movs
inc
jmp
cmp
cmp
scas
push
hlt
xchg
sbb
ss
das
pop
cmp
mov
imul
ja
cmp
xchg
pop
add
ja
or
scas
push
movzx
(bad)
dec
or
into
cmp
and
fimul
pop
repnz
cmovle
add
outs
jp
pop
cmp
push
aas
ret
jnp
in
rcl
jl
aas
pop
dec
or
pop
cmc
jo
aaa
or
push
adc
adc
pop
out
jo
adc
in
sbb
push
cmp
and
in
xchg
cmp
cmp
cmp
enter
xor
aas
push
add
xlat
outs
dec
push
add
daa
daa
iret
enter
add
pushf
cmp
test
mov
lea
retf
or
push
repnz
sub
xor
loope
xlat
iret
inc
push
pop
jb
add
add
dec
and
inc
call
pusha
cmp
inc
fimul
dec
mov
add
ins
jmp
repz
jp
add
(bad)
xchg
push
repz
push
mov
inc
pop
cmp
push
loopne
or
inc
xchg
call
mov
jns
out
push
add
add
add
jns
out
add
add
sahf
push
jns
mov
xchg
jp
out
or
ss
add
push
push
repz
std
mov
add
mov
fnstcw
mov
ds
xchg
sbb
sub
repnz
cmp
in
fs
mov
ficomp
iret
push
lds
into
mov
and
arpl
or
aam
leave
add
aas
mov
xor
in
pop
in
in
in
in
aad
lds
push
adc
lahf
add
addr16
inc
cmp
inc
leave
in
mov
xchg
cmp
(bad)
inc
xchg
add
leave
inc
mov
xchg
xchg
mov
in
mov
cmp
adc
lods
mov
pop
ss
ds
inc
shl
punpcklwd
ins
mov
inc
inc
lahf
jbe
cmp
cmps
scas
mov
ret
out
fisttp
add
pop
cmp
enter
test
or
mov
scas
js
push
mov
mov
or
or
stc
or
add
cs
and
gs
hlt
inc
and
ins
inc
mov
ins
scas
rol
scas
jl
pop
adc
sub
mov
mov
je
fild
ja
fucomi
sub
call
jns
out
xlat
pop
fbstp
outs
pop
out
maskmovq
or
inc
mov
sub
mov
inc
sbb
nop
cmp
frstor
add
push
mov
mov
lods
xchg
mov
nop
call
daa
adc
loopne
enter
dec
or
fcmovu
sbb
das
and
dec
je
test
push
addr16
pop
and
add
ror
sahf
cmp
dec
jecxz
mov
daa
mov
iret
in
hlt
mov
out
mov
xlat
mov
mov
mov
call
pop
jo
pop
hlt
loope
rcl
add
fld
dec
mov
cmps
push
(bad)
and
fstp
xor
xchg
iret
add
mov
mov
out
add
das
jg
cmp
xchg
fimul
add
sahf
dec
pop
cmp
cmps
or
adc
stc
nop
mov
fisub
bound
jp
xchg
inc
daa
mov
mov
mov
fstp
push
(bad)
rcr
psllq
movs
add
fmul
out
jns
iret
or
std
push
or
mov
adc
push
push
setle
js
sub
out
adc
ins
cmp
scas
mov
daa
iret
add
das
(bad)
jbe
leave
leave
jg
(bad)
seta
xor
imul
mov
mov
mov
por
in
add
adc
xchg
add
and
aaa
mov
sahf
aaa
xacquire
fs
add
iret
mov
jle
xchg
pop
nop
sub
or
test
leave
movs
mov
das
pop
xchg
xchg
mov
mov
dec
pop
mov
leave
and
push
push
mov
push
mov
xchg
setl
jbe
fild
jns
leave
repz
in
pop
jo
out
dec
cli
dec
or
sub
sbb
je
pusha
punpckhbw
sahf
ja
mov
or
push
add
dec
push
dec
cwde
xlat
or
adc
lods
adc
push
xchg
pop
(bad)
pop
push
aas
push
pop
leave
xor
shl
mov
shl
cmp
add
mov
cmps
push
sub
das
daa
daa
mov
je
jl
mov
mov
ins
xchg
outs
pop
sub
iret
fidivr
pop
ja
loop
jmp
cli
add
pop
add
shl
xor
rcr
repnz
scas
push
add
movs
sar
sar
iret
leave
in
in
mov
popf
pushf
pop
and
(bad)
fiadd
mov
dec
iret
leave
ins
in
ret
sbb
add
ins
xchg
pop
xchg
sub
push
xchg
dec
dec
dec
outs
daa
push
subps
sbb
das
pop
xchg
setg
iret
cmps
addr16
leave
leave
scas
mov
push
(bad)
leave
inc
repnz
or
jmp
mov
addr16
adc
xchg
mov
ret
mov
mov
punpcklbw
int3
pushf
pushf
fsubr
mov
fwait
add
pop
push
mov
fbld
out
je
jmp
fist
aas
sbb
ja
retf
les
sub
xchg
jns
xor
add
setnp
push
cmp
(bad)
rcr
popf
or
xlat
mov
les
push
inc
call
fmul
pop
aas
int3
paddq
xchg
mov
lds
cmp
and
lds
cmp
mov
leave
leave
leave
mov
xchg
pop
leave
aas
(bad)
dec
outs
mov
jecxz
out
xchg
lds
add
in
sub
(bad)
aas
shufps
push
popa
pushf
pusha
push
aaa
push
ror
imul
jae
in
push
fisttp
xchg
cmp
sbb
ja
scas
and
mov
clc
scas
fcmovne
in
iret
mov
loope
add
cld
movs
adc
pop
(bad)
pop
adc
iret
jae
mov
and
ins
xchg
inc
(bad)
pop
dec
outs
push
(bad)
stos
cwde
in
call
push
dec
ficomp
iret
xchg
(bad)
fsubr
sub
pop
popf
fild
es
mov
das
retf
repz
cs
rcr
ror
or
dec
and
push
pop
invd
push
push
cmp
movs
fstp
add
setb
add
fcom
fmul
fstp
enter
pop
(bad)
xchg
mov
mov
or
in
in
mov
or
leave
push
push
push
jle
leave
cmp
push
dec
leave
mov
imul
push
add
icebp
in
push
or
inc
mov
or
pop
or
daa
sbb
retf
xchg
cmp
pop
rol
fiadd
fwait
mov
push
jmp
out
push
iret
cli
push
or
das
or
pop
leave
out
dec
push
inc
shl
pop
sahf
pop
jmp
add
add
and
leave
cdq
retf
les
mov
mov
or
adc
leave
repz
add
(bad)
stos
daa
aaa
inc
out
sub
retf
jmp
mov
mov
out
pop
outs
in
jbe
ins
(bad)
addr16
setg
cmps
bt
mov
pop
sahf
and
leave
cmp
mov
mov
push
sbb
add
and
push
sahf
out
sahf
or
pop
or
pop
out
or
int3
dec
and
sbb
cwde
pop
mov
mov
xadd
push
fild
xchg
call
addr16
(bad)
repz
add
scas
test
fwait
pop
or
add
adc
(bad)
(bad)
and
sbb
pop
fbld
adc
int
dec
mov
pop
int
cwde
add
out
loopne
repnz
pop
xchg
add
jg
pop
xor
mov
dec
pop
je
sub
add
dec
repnz
int
int
out
inc
dec
jne
sbb
out
outs
mov
cmovo
dec
add
out
in
sahf
add
push
or
repz
or
leave
repz
cmp
repz
les
iret
adc
repz
ficom
in
lock
adc
iret
adc
jnp
push
sbb
daa
sbb
repz
xor
cmp
dec
mov
adc
adc
adc
dec
dec
dec
dec
adc
push
or
push
sub
pop
xor
lock
out
iret
iret
jnp
xchg
mov
add
xchg
inc
xor
je
aas
push
xchg
out
push
jns
daa
lods
pop
jl
daa
daa
pop
leave
popf
mov
jmp
push
test
ffree
fidiv
scas
adc
das
add
scas
xchg
outs
dec
sahf
or
pop
daa
or
push
mov
cmps
rcr
ja
scas
push
dec
and
jmp
ror
mov
ja
push
pusha
test
jmp
cmp
mov
pop
mov
cmps
pop
sar
cmp
enter
fsub
cmp
dec
mov
add
pop
xchg
iret
or
leave
retf
and
adc
sub
and
dec
push
and
xchg
jp
adc
(bad)
iret
loopne
repnz
iret
cmp
rcl
pop
call
pop
adc
sar
and
mov
dec
push
pop
dec
xchg
xchg
out
add
out
mov
xchg
push
mov
ja
jbe
cdq
mov
(bad)
ror
inc
dec
xor
xchg
repz
in
ror
push
add
add
jns
leave
sbb
push
add
mov
xor
pop
cmp
or
repz
sahf
or
push
or
or
popa
push
imul
dec
adc
repnz
mov
xchg
pushf
inc
ss
movs
xchg
push
popa
pop
pushf
fmul
mov
(bad)
repz
(bad)
shl
ja
loopne
cmp
inc
das
fdiv
inc
mov
add
rcr
xor
retf
test
movs
xlat
push
dec
inc
aam
push
retf
test
iret
add
aam
pop
les
outs
push
fild
jno
add
mov
or
(bad)
xlat
gs
outs
neg
jmp
sub
fs
iret
mov
dec
(bad)
iret
xlat
pandn
outs
pop
pushf
out
out
maskmovq
test
sbb
(bad)
and
and
push
mov
fcmovne
leave
inc
arpl
shld
fcomp
jmp
cmps
addr16
adc
or
sub
pop
jb
and
cwde
rcr
push
hlt
xchg
xlat
cmova
inc
push
(bad)
jg
fld
sub
or
xor
(bad)
imul
(bad)
push
mov
cmp
adc
jmp
mov
gs
mov
and
(bad)
outs
xchg
add
jmp
loope
add
or
psubsw
mov
cmova
push
pop
pop
xlat
iret
mov
inc
iret
popa
xlat
push
push
jno
jb
es
pop
add
mov
iret
leave
jns
or
movntq
out
cmp
adc
fsubr
xchg
sar
cmp
int3
paddq
mov
mov
jl
xchg
idiv
addr16
inc
jmp
enter
sub
js
xchg
dec
cld
dec
data16
jg
xor
mov
lahf
pxor
push
xchg
push
add
setae
in
idiv
enter
fst
or
sub
xor
add
addr16
push
ret
test
outs
fnstenv
leave
sub
push
mov
fwait
pop
movs
xchg
pop
push
enter
lar
push
pop
sub
fld
es
ud0
vmwrite
enter
ficom
mov
aaa
(bad)
(bad)
fidivr
or
mov
es
imul
mov
push
add
(bad)
imul
dec
mov
(bad)
ficomp
mov
fidiv
dec
xchg
mov
loope
(bad)
cmp
push
cmp
push
daa
adc
xchg
cmp
scas
or
or
(bad)
jnp
test
(bad)
push
ja
in
xchg
push
or
adc
pop
fcmovnu
add
nop
push
xchg
cmp
(bad)
dec
xorps
add
int3
test
sub
mov
popf
pop
pop
fisttp
fisub
imul
psubd
mov
and
xchg
in
fsub
xchg
mov
xchg
pop
int3
xchg
fnstsw
add
loop
xchg
nop
lods
daa
aaa
das
jg
xchg
xchg
(bad)
fcomip
fdivr
(bad)
pop
jb
outs
or
pop
push
add
iret
jae
jb
add
or
sbb
and
or
rcl
dec
adc
(bad)
mov
fisttp
mov
(bad)
pop
push
add
arpl
(bad)
mov
mov
je
cmp
mov
es
mov
sahf
or
xlat
or
leave
out
(bad)
(bad)
or
ins
add
inc
inc
xchg
ficomp
push
mov
push
xlat
fmulp
pop
cmp
add
das
xchg
jae
js
push
popf
pop
dec
pop
lods
jns
pop
stos
iret
mov
dec
andnps
or
pop
fsub
pop
push
pop
gs
out
sahf
out
adc
jge
xchg
pushf
je
test
adc
mov
pop
vpmullw
jns
in
sbb
nop
in
je
out
cmc
pop
std
mov
out
sbb
add
adc
mov
dec
and
sub
out
dec
xor
out
sahf
out
dec
sub
sub
pop
cs
ins
mov
mov
fild
xor
ins
pop
lds
mov
sub
pop
cdq
and
dec
(bad)
fsubr
jmp
into
adc
push
aas
push
repnz
inc
(bad)
(bad)
fistp
jp
dec
jo
loopne
sbb
cdq
(bad)
fnstsw
xchg
daa
pop
leave
test
andps
fmul
pop
xchg
add
leave
enter
outs
mov
cmps
fwait
mov
push
mov
(bad)
popf
scas
cmps
mov
mov
leave
repz
loopne
jmp
idiv
imul
add
or
cmp
iret
cmp
push
adc
adc
mov
adc
jns
iret
repz
test
push
pop
call
sbb
repz
sbb
sbb
out
repz
loope
cmp
ror
and
repz
daa
and
inc
and
dec
es
daa
push
sub
sub
repz
(bad)
sub
repz
cs
das
shl
fucomi
aas
repz
(bad)
addr16
jg
jecxz
adc
mov
jecxz
repz
inc
es
cmp
repz
push
and
and
cmp
rep
and
or
cmp
and
cmp
repz
scas
sbb
repz
iret
sbb
iret
repz
pop
in
lock
sti
sahf
cmps
stc
cmp
push
in
adc
cmp
repz
sbb
sub
scas
fwait
mov
inc
pop
push
jle
jb
jmp
pop
dec
cmovp
pop
pop
data16
sahf
ja
das
jle
mov
push
xchg
or
lahf
add
in
in
push
leave
bound
jno
outs
call
psadbw
in
pop
in
inc
pop
pop
daa
in
in
pop
sahf
out
sahf
aas
or
or
out
or
cmp
loopne
jle
in
setle
cmp
repz
repz
mov
adc
ficom
in
out
xchg
pop
iret
repz
sbb
repz
sbb
sbb
xor
cmp
cmp
and
push
in
jo
js
or
mov
cmps
push
sbb
repz
iret
repz
adc
in
iret
repz
in
adc
adc
ret
repz
movd
or
or
adc
sbb
and
cmp
repz
or
or
sbb
dec
inc
out
out
push
ds
dec
aaa
jns
cmovo
fsubr
out
push
je
jp
jmp
mov
mov
fistp
pmaxub
(bad)
pop
jo
mov
int
aad
or
mov
lahf
in
mov
in
push
pop
std
out
lea
pop
add
push
adc
sbb
iret
leave
leave
in
aaa
pop
aas
inc
push
sbb
adc
cmps
sbb
add
cwde
jbe
call
dec
ja
call
push
push
daa
mov
xchg
out
add
jecxz
add
jbe
psubq
jmp
jb
sbb
and
in
sahf
out
(bad)
adc
popf
cmp
push
push
adc
(bad)
jb
jb
jp
or
call
jb
ret
and
and
jmp
shl
jmp
jmp
jns
cmp
dec
sahf
pop
push
pop
packsswb
or
je
imul
jae
push
out
dec
sahf
push
or
daa
mov
fwait
mov
scas
daa
push
leave
addr16
adc
loope
jb
daa
out
jmp
iret
repz
adc
add
iret
leave
repz
xor
leave
repz
push
or
jns
out
pusha
push
imul
cmp
out
adc
dec
sahf
ja
push
adc
into
psubusw
out
pop
in
out
sbb
iret
in
pop
cmp
in
pop
adc
pop
sbb
xor
cmp
pushf
cmp
inc
and
and
and
leave
repz
xchg
lahf
rsm
sahf
xchg
xchg
xchg
mov
retf
(bad)
lds
in
imul
outs
movs
push
leave
xor
call
jne
addr16
iret
push
pop
sub
dec
push
add
dec
in
out
sahf
pop
push
add
out
sahf
pop
je
jle
xchg
call
mov
jae
jb
retf
(bad)
jns
daa
loop
jmp
cli
sbb
out
bndldx
dec
aaa
jns
or
adc
sbb
cmp
and
xchg
inc
pop
maxps
pushf
pushf
pushf
jno
or
out
mov
ins
lods
das
mov
or
jl
xchg
xchg
test
fidivr
push
std
or
push
jl
mov
and
fild
push
or
cmp
repnz
fwait
push
or
bound
mov
jp
outs
mov
in
test
lahf
fwait
mov
cmp
repz
adc
adc
fcmovne
aam
paddsb
lock
iret
repz
push
fistp
sbb
cmc
push
add
mov
cmp
push
nop
pop
and
lahf
in
in
cmp
icebp
mov
add
maskmovq
jae
movaps
sub
sub
jae
cmp
sub
cmp
repz
pop
xor
repz
repz
jge
mov
repz
fidiv
xchg
sahf
sahf
ss
aaa
xchg
cmps
repnz
cmp
cmp
mov
lahf
icebp
aas
jb
cmp
sahf
out
fidivr
aas
mov
stos
scas
mov
rol
iret
repz
inc
xlat
inc
in
outs
daa
iret
inc
icebp
(bad)
das
or
dec
adc
cmp
repz
adc
add
lock
(bad)
daa
je
dec
int
dec
adc
sar
js
movs
xchg
jge
jg
pop
repnz
fcom
mov
jle
mov
push
ja
cmp
push
mov
in
jns
or
or
fdivr
and
repnz
iret
repz
push
sbb
adc
inc
push
adc
adc
push
popa
ins
pop
sbb
fsubr
or
pop
call
mov
bswap
push
and
in
repnz
por
dec
ss
icebp
add
jg
or
cmp
inc
push
add
pop
xchg
cwde
fs
hlt
sbb
push
add
(bad)
popf
add
mov
pop
mov
pop
cmp
fcomp
cmc
hlt
jl
mov
pop
or
cmovle
cmc
cmp
mov
push
adc
adc
mov
adc
repz
pop
pop
sbb
out
fidivr
sbb
repnz
mov
sub
iret
jnp
xor
push
shl
jae
mov
fimul
jmp
cmp
daa
jmp
or
cs
and
(bad)
push
sub
fnstcw
fbstp
cwde
add
dec
jg
mov
sbb
div
popf
cmp
repz
add
mov
fidivr
lahf
out
(bad)
cs
repnz
adc
outs
jp
pop
test
neg
cmp
push
push
push
sahf
out
dec
pop
punpckhbw
or
je
out
jle
mov
or
xchg
push
lahf
stos
adc
cmp
repz
rcl
mov
sbb
out
pop
jecxz
out
sahf
adc
ds
pop
stc
and
and
sbb
sbb
mov
out
push
sbb
sbb
sahf
out
pop
aas
and
out
pop
and
in
sahf
out
and
mov
in
popf
(bad)
out
leave
scas
loopne
rcr
test
push
or
sbb
test
sub
enter
inc
mov
xor
out
sahf
out
add
push
add
cmp
xchg
pop
push
iret
repz
or
cmp
repz
mov
mov
repnz
ficom
xor
pop
mov
out
cmp
cli
push
adc
push
adc
and
cli
outs
cmp
inc
cs
dec
sahf
out
sbb
(bad)
cli
dec
and
js
cmps
cli
xchg
out
adc
push
add
ror
xlat
push
add
scas
(bad)
push
pop
out
bnd
out
test
sbb
sti
prefetch
sti
daa
iret
repz
adc
cmp
inc
cmovge
adc
daa
iret
repz
pop
ins
js
out
outs
pop
sbb
sbb
sbb
sbb
out
in
mov
and
iret
(bad)
and
and
repnz
out
cmp
cld
adc
sub
add
add
adc
leave
repz
pop
or
pop
in
cld
pop
test
repz
aaa
femms
fwait
(bad)
jae
cmp
adc
outs
daa
iret
adc
(bad)
call
in
femms
sbb
sbb
(bad)
cld
or
push
push
sbb
mov
pop
aaa
inc
std
repz
lahf
dec
std
fisttp
iret
repz
arpl
and
popf
cmp
(bad)
setp
cmovs
pop
pop
sub
xchg
and
xor
enter
dec
add
outs
mov
out
sbb
(bad)
xor
das
dec
pop
in
sbb
mov
enter
(bad)
jns
push
mov
mov
pop
syscall
call
mov
mov
repnz
syscall
or
fucomi
in
or
movntq
enter
adc
sub
iret
repz
adc
repnz
call
out
cmp
les
iret
fisubr
sbb
cmp
sahf
in
lock
dec
jne
jmp
push
das
popa
push
and
jns
xchg
ins
ja
or
cwde
daa
mov
xchg
scas
(bad)
pop
das
sub
dec
sahf
out
sub
movs
fwait
cmp
fidiv
in
pop
jnp
cmp
xor
lock
push
add
cmp
adc
sbb
ds
in
xchg
add
jmp
ins
por
jns
ja
cmp
in
repnz
cwde
inc
mov
sbb
jl
btc
popf
stos
das
mov
fsubr
iret
push
ror
fmul
jecxz
iret
leave
repz
stc
or
add
frstor
adc
das
sbb
daa
push
adc
cmp
xor
cmp
out
outs
daa
pusha
das
imul
push
pop
jbe
jns
sbb
pop
sahf
out
in
mov
repz
psubsb
repz
dec
inc
ds
add
cs
xchg
and
arpl
outs
jae
cmp
sub
test
stc
icebp
(bad)
sub
pop
(bad)
cs
iret
fwait
sbb
push
xor
xor
xor
outs
xor
mov
bsf
cmps
js
jb
fisttp
iret
push
in
jecxz
packsswb
cmp
pop
add
mov
push
add
iret
mov
push
pop
mov
daa
mov
or
mov
pextrw
das
smsw
add
in
add
add
xor
push
or
jl
rcr
xor
dec
jo
mov
outs
adc
push
cmps
(bad)
mov
iret
aaa
cmp
cmp
adc
dec
js
and
pusha
mov
add
pop
sbb
sub
mov
out
aaa
mov
add
pop
in
push
rcl
fs
push
daa
xchg
ss
add
add
aas
inc
push
or
les
pop
jmp
outs
pop
cmp
dec
aaa
test
add
xlat
xacquire
add
push
rol
push
push
mov
xchg
and
push
pop
or
in
in
or
or
or
outs
mov
scas
or
daa
dec
outs
ja
push
adc
and
pop
inc
inc
push
addr16
das
mov
in
jbe
xorps
ins
out
sbb
not
fild
pop
and
iret
add
add
cmp
mov
fsubr
cmp
sbb
and
dec
sbb
add
or
sbb
pusha
inc
adc
add
lods
and
add
mov
inc
and
adc
adc
stos
cmp
pop
test
lds
adc
inc
xchg
or
lods
pusha
cmp
cmps
fisttp
mov
stc
sbb
mov
sbb
cmovo
add
mov
sbb
in
mov
mov
push
add
not
add
fidiv
rcr
fsubp
stc
jb
xchg
mov
xor
sahf
addr16
out
pushf
and
xchg
nop
jns
out
mov
jns
out
pusha
push
dec
inc
sahf
out
sahf
cmp
xor
sub
jns
out
and
sbb
adc
xor
out
or
and
in
and
repz
push
aam
shl
mov
movs
repz
repz
push
fs
pop
push
cmp
jns
dec
mov
cmp
sbb
out
fdivrp
clc
and
aam
mov
mov
mov
cmp
jns
js
jo
pusha
ja
cmp
push
cmp
and
push
iret
repz
or
and
fadd
mov
jnp
mov
pushf
push
je
pusha
or
adc
icebp
or
add
adc
imul
sbb
add
mov
pushf
lock
js
clc
mul
mov
dec
hlt
xor
cmp
cdq
pop
aas
sbb
es
push
test
ins
add
or
clc
pop
and
cwde
xchg
xor
addr16
outs
lock
call
push
mov
mov
jg
mov
cmp
mov
inc
dec
inc
sgdtd
push
adc
mov
sbb
dec
lock
mov
or
and
sti
add
add
fadd
xor
ins
push
ins
jb
test
inc
outs
(bad)
and
test
iret
xchg
sub
mov
cs
cmps
fiadd
inc
stc
pop
jg
jl
add
neg
stc
pop
out
ins
sbb
add
out
mov
adc
xchg
es
iret
cmp
xor
ss
repz
jle
cmp
sahf
out
push
and
sbb
push
adc
ds
and
iret
jnp
push
dec
push
fcom
push
aam
iret
repz
ror
or
jnp
repz
pop
inc
sbb
fcomp
jns
idiv
adc
xor
sub
push
sahf
out
and
push
and
iret
repz
adc
and
add
clc
aaa
inc
int
xchg
int3
out
clc
shr
cmp
pop
imul
daa
xor
pop
mov
xchg
cld
sub
inc
xor
lea
add
loopne
rcr
fist
cmp
iret
repz
pop
js
mov
repz
out
cmp
dec
ins
add
jns
out
push
pop
ja
mov
loopne
iret
loopne
jae
das
push
dec
ins
push
xor
lods
dec
pop
daa
jns
(bad)
pop
mov
cli
or
pop
repnz
or
ret
lar
repnz
adc
pop
and
sbb
jmp
ret
inc
and
sahf
mov
sub
inc
rcr
and
sbb
cmp
(bad)
inc
xchg
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
dec
(bad)
(bad)
fistp
js
inc
outs
(bad)
loopne
jmp
xchg
test
mov
cmp
inc
mov
fisttp
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
(bad)
(bad)
inc
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
(bad)
xchg
push
cmps
scas
mov
or
(bad)
(bad)
(bad)
inc
dec
dec
pop
inc
in
xchg
cmp
xor
dec
cmps
in
cmp
sahf
xchg
pop
(bad)
inc
call
lock
mov
popa
sar
mov
sbb
(bad)
xchg
clc
repz
aam
jmp
mov
sub
fwait
xchg
and
out
aas
xor
xor
int
add
aas
jno
or
mov
(bad)
(bad)
clc
aas
pop
fs
dec
lea
aas
ret
shr
mov
icebp
aas
ror
and
inc
lds
mov
ins
scas
add
aas
xor
aad
mov
std
(bad)
(bad)
(bad)
(bad)
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
jmp
xchg
cmp
push
mov
xchg
aas
and
(bad)
loop
mov
jp
popa
push
pop
sar
mov
call
adc
das
lea
mov
inc
inc
aas
movs
jmp
jg
sub
(bad)
(bad)
(bad)
(bad)
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
push
shr
inc
xchg
mov
fmul
call
push
xchg
test
pop
mov
jne
fld
cmp
jno
shl
(bad)
out
(bad)
(bad)
(bad)
dec
pop
cmp
fisub
xor
push
lahf
inc
pop
mov
sub
dec
in
(bad)
(bad)
(bad)
push
xor
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
and
(bad)
push
dec
gs
std
or
pop
ficomp
frstor
leave
adc
add
add
mov
jo
xlat
add
lock
inc
je
inc
inc
push
dec
addr16
pop
and
dec
dec
inc
push
dec
inc
aaa
xor
ins
fwait
gs
dec
mov
mov
call
push
inc
dec
stos
ins
jbe
inc
jo
inc
popa
push
outs
jbe
imul
push
sub
outs
lock
mov
imul
dec
push
sub
outs
add
cmp
pop
xor
rcl
or
push
dec
pusha
push
or
push
inc
dec
push
inc
push
and
mov
jo
jb
push
sbb
inc
test
lock
dec
inc
gs
gs
mov
jbe
add
arpl
inc
or
mov
sbb
sub
dec
outs
push
dec
pop
mov
inc
push
xchg
xchg
add
aaa
call
add
ror
ins
push
das
push
fs
sub
imul
inc
adc
daa
dec
sub
mov
imul
xor
inc
jg
mov
clc
inc
inc
jns
dec
lahf
push
imul
adc
les
push
cmp
lods
mov
push
je
dec
add
xor
mov
adc
dec
in
inc
ds
je
(bad)
sbb
out
dec
push
dec
dec
lods
std
dec
add
dec
bound
jbe
movs
cmps
sbb
xchg
sub
scas
(bad)
push
mov
or
inc
cmps
dec
adc
fstp
dec
cli
adc
outs
arpl
outs
push
bound
inc
dec
dec
pop
xlat
int3
xchg
add
push
jmp
adc
mov
push
mov
ja
inc
xchg
push
push
in
sbb
imul
imul
mov
fisub
push
mov
pop
inc
add
loope
jg
idiv
mov
push
push
push
imul
sbb
pop
outs
push
jb
push
mov
jbe
lds
das
jo
adc
push
xlat
push
inc
mov
push
dec
stos
fcom
gs
lods
mov
mov
cmp
push
ins
cmc
inc
arpl
push
push
push
pushf
nop
push
pusha
out
or
inc
pop
jg
push
mov
outs
xchg
fisttp
mov
movs
add
mov
data16
inc
add
fisttp
xchg
mov
pusha
pop
pop
ja
or
pusha
pop
es
inc
pop
stos
mov
push
pop
jno
add
pop
push
pusha
add
sbb
lahf
pusha
mov
scas
mov
inc
sar
cmps
push
and
aad
dec
je
dec
lahf
mov
push
xchg
inc
dec
sub
stos
and
leave
dec
cmp
mov
mov
mov
(bad)
leave
adc
stos
iret
aas
dec
lahf
sub
nop
lods
mov
inc
adc
or
cmps
dec
push
or
rsqrtps
push
dec
daa
dec
dec
sub
or
out
cwde
xchg
cmp
cmps
xchg
push
inc
in
arpl
dec
outs
sbb
ins
imul
xchg
clc
pop
push
jne
les
outs
rol
loopne
push
sbb
pop
(bad)
dec
outs
or
aad
iret
ins
mov
popa
inc
iret
pop
les
add
fdivr
inc
das
xlat
mov
dec
jg
(bad)
repz
and
push
mov
stc
cmp
cmp
lock
out
sahf
shl
cwde
or
mov
daa
jl
iret
leave
mov
das
push
mov
mov
push
and
lahf
inc
inc
(bad)
(bad)
(bad)
add
sub
push
out
mov
les
(bad)
(bad)
(bad)
(bad)
push
push
xor
xchg
fs
xor
fdivr
jmp
rcl
mov
jl
jle
sub
mov
sbb
dec
jno
repz
test
ficomp
jmp
(bad)
(bad)
jmp
(bad)
mov
hlt
mov
imul
std
in
leave
mov
add
(bad)
(bad)
(bad)
jmp
arpl
or
pop
adc
in
pusha
aad
jno
mov
inc
(bad)
(bad)
(bad)
call
add
std
test
movs
cli
test
xor
(bad)
leave
mov
lods
jecxz
fdiv
jne
(bad)
(bad)
call
iret
or
shr
cmp
ficom
push
xlat
enter
mov
and
mov
cdq
xchg
mov
mov
or
or
(bad)
jg
and
mov
jl
das
adc
stos
sbb
data16
inc
fdiv
(bad)
(bad)
(bad)
push
add
aad
mov
mov
movs
in
lahf
xor
mov
js
(bad)
out
mov
stc
mov
push
loope
or
(bad)
(bad)
(bad)
cmp
fs
add
hlt
push
imul
ins
sbb
xor
dec
add
in
xchg
push
ins
jnp
(bad)
(bad)
jmp
or
(bad)
fnstenv
adc
mov
mov
bound
or
adc
gs
aam
pop
popa
mov
into
pop
cmp
mov
(bad)
(bad)
(bad)
inc
movs
fisttp
xchg
fadd
(bad)
shl
jmp
outs
xor
mov
sar
pusha
fidiv
add
in
add
pop
dec
or
cmp
add
daa
adc
or
(bad)
dec
and
test
or
mov
popa
into
push
stc
ficomp
leave
fldcw
and
(bad)
(bad)
(bad)
call
(bad)
pop
cmp
mov
cmp
lods
ins
mov
in
mov
mov
add
push
jmp
fild
push
fdiv
or
test
fs
ds
or
(bad)
jmp
or
push
in
dec
xchg
daa
scas
add
mov
pop
jge
xchg
(bad)
shl
add
inc
jmp
pop
push
(bad)
test
ss
sbb
push
imul
aam
loopne
ror
(bad)
jp
adc
dec
frstor
fistp
mov
mov
aad
mov
call
xchg
shl
inc
fdivr
push
repnz
addr16
cmps
fld
mov
dec
ss
fisubr
or
scas
idiv
(bad)
(bad)
dec
ss
jp
inc
ret
out
pusha
fist
addr16
mov
jns
imul
and
(bad)
(bad)
(bad)
call
outs
and
xchg
ja
int3
add
mov
das
es
lds
or
(bad)
call
sub
mov
cmps
call
ret
shl
sbb
ret
es
pushf
outs
cli
(bad)
jmp
ins
add
ss
jmp
addr16
jb
push
hlt
or
(bad)
(bad)
(bad)
call
mov
jnp
sbb
xchg
or
out
fdivr
fisttp
aam
rol
inc
loop
icebp
clc
mov
push
int
mov
mul
ja
outs
ja
mov
out
cli
(bad)
push
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
jmp
mov
loop
mov
push
add
mov
cmp
cmps
not
pusha
ror
(bad)
(bad)
(bad)
jmp
(bad)
ds
push
scas
fcomp
fldenv
fild
cmp
aaa
push
scas
mov
fidivr
(bad)
(bad)
(bad)
push
xor
mov
retf
mov
cmps
mov
sar
sub
(bad)
(bad)
(bad)
ficom
fldenv
cs
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
or
out
add
iret
push
add
movs
and
aam
sbb
mov
inc
xchg
jne
mul
imul
pop
sub
aam
imul
mov
fistp
jbe
push
jns
or
std
outs
arpl
arpl
mov
sbb
ins
jns
add
jne
outs
ins
addr16
xchg
fild
xor
out
or
push
cmp
or
out
and
dec
dec
inc
js
inc
ins
bound
inc
out
push
jo
jne
inc
inc
inc
js
fadd
mov
push
dec
or
jno
mov
and
xor
pop
inc
cmp
pop
bound
xor
aaa
cmp
call
mov
popa
arpl
cmp
arpl
or
xor
bound
pop
xor
popa
add
ret
xlat
push
inc
jbe
pop
sbb
mul
icebp
xor
inc
or
in
cmp
add
ror
retf
add
inc
loope
jmp
cs
hlt
lods
test
(bad)
ss
jbe
div
aad
arpl
pop
add
aas
test
xor
inc
loopne
and
push
lock
aaa
add
mov
test
mov
push
xor
sub
dec
mov
je
aaa
rol
fidivr
inc
push
bound
add
jmp
mov
and
jae
popa
jne
and
xor
scas
pop
inc
aas
dec
push
mov
inc
(bad)
adc
xor
mov
es
inc
inc
inc
add
ins
test
adc
ds
imul
pop
sbb
push
dec
dec
lea
imul
xchg
add
mov
mov
ja
outs
jne
pop
ins
inc
dec
add
push
xchg
jge
xor
cmp
adc
arpl
add
mov
xor
addr16
push
jns
pop
jo
or
push
inc
imul
aas
std
or
cdq
dec
loopne
push
jbe
je
sbb
popf
sbb
dec
mov
sub
test
lahf
inc
mov
or
(bad)
sub
push
pop
xlat
arpl
add
mov
daa
inc
jb
pushf
xor
or
lock
popa
jo
lahf
sbb
outs
test
mov
jbe
push
jno
mov
lds
in
push
or
nop
test
adc
das
aam
arpl
push
mov
cmp
mov
(bad)
jo
push
inc
mov
push
pop
push
and
push
loopne
ins
jns
das
ins
jmp
loopne
pusha
push
popa
jb
or
sub
test
adc
or
add
push
bound
sub
addr16
test
push
aaa
ja
mov
adc
jae
push
loop
popf
xor
add
ret
push
mov
aaa
pop
sar
sub
sub
mov
addr16
pop
cmp
add
jns
lods
sub
scas
sub
aas
arpl
ret
jg
mov
add
aaa
aam
pusha
das
fcom
push
loop
aaa
cmp
cmp
cwde
mov
sub
test
pop
inc
inc
adc
mov
add
push
add
push
xor
rcr
dec
aaa
add
movs
xor
clc
out
dec
pop
nop
pop
push
and
repnz
ja
or
pop
mov
int
mov
add
inc
pop
and
popa
add
adc
je
add
dec
xchg
jb
cld
and
mov
push
and
cs
cmps
dec
paddd
push
sti
lods
loop
popa
inc
lea
in
bswap
(bad)
mov
into
jmp
(bad)
jmp
jmp
repnz
in
push
(bad)
fincstp
pusha
jmp
retf
cli
push
cld
rol
pop
push
imul
sub
dec
fidivr
in
test
rcl
mov
daa
loopne
add
or
or
(bad)
jne
cmp
daa
aam
cmp
add
arpl
repz
add
std
loope
mov
add
sbb
add
dec
or
push
test
mov
dec
adc
mov
js
push
loop
pop
test
add
push
enter
add
cs
add
les
(bad)
lods
add
or
mov
mul
inc
fs
xor
cs
mov
xchg
xor
dec
or
dec
jo
mov
sahf
jae
arpl
xlat
out
add
add
leave
repz
dec
sbb
add
inc
xlat
lea
fs
sti
inc
inc
inc
push
adc
(bad)
adc
inc
adc
js
sbb
rol
mov
mov
mov
add
add
dec
pop
or
nop
mov
sahf
and
mov
js
push
jmp
ret
fmul
sub
mov
jbe
pop
xchg
in
push
push
xchg
jg
and
enter
fucomi
gs
sbb
xor
out
jg
faddp
ja
jne
jmp
mov
dec
sahf
ja
jl
ret
mov
or
call
ss
test
mov
into
push
leave
xchg
arpl
loope
pop
mov
jnp
(bad)
outs
push
cmp
hlt
mov
ins
adc
pushf
jbe
and
hlt
jl
(bad)
fsub
enter
xchg
add
add
pop
es
rcl
xchg
clc
add
repz
cmp
hlt
in
dec
xchg
adc
out
pop
jnp
push
mov
sbb
push
movzx
loope
sti
call
nop
fadd
mov
mov
or
les
inc
xchg
es
sub
mov
(bad)
cmp
jbe
mov
add
pop
mov
sub
pop
jo
es
popa
cmp
nop
or
pop
add
(bad)
jmp
and
fwait
xchg
mov
adc
loopne
in
cld
jp
and
mov
mov
push
nop
cdq
loopne
call
sbb
push
add
outs
dec
adc
mov
or
ror
pusha
clc
aad
or
into
sti
fisttp
inc
(bad)
imul
add
adc
inc
cdq
pop
mov
push
rcl
mov
arpl
sub
mov
in
inc
xchg
cmp
add
push
mov
dec
dec
sti
mov
adc
xchg
and
(bad)
shr
push
movs
call
hlt
cld
add
jle
lea
les
imul
scas
adc
or
enter
dec
not
push
fld
out
in
adc
push
leave
push
fs
mov
cmp
pop
add
jp
add
xchg
dec
or
push
adc
add
inc
dec
push
loope
cmps
sbb
or
outs
push
(bad)
sahf
cmp
pop
jp
dec
pop
push
ret
dec
mov
pop
nop
sbb
push
cdq
test
pop
in
jle
lea
mov
add
dec
pop
or
add
mov
es
dec
aam
pop
inc
test
mov
or
fidivr
dec
adc
add
push
mov
idiv
aam
lea
dec
out
or
lds
mov
loope
push
push
hlt
pop
adc
(bad)
push
jno
data16
rcr
mov
adc
adc
rcl
and
or
rcl
lea
jecxz
add
repnz
jmp
js
pop
cmp
fnstcw
(bad)
jno
repnz
mul
dec
std
movs
mov
sbb
dec
jge
in
push
xor
push
aas
adc
xchg
popf
sbb
(bad)
fldcw
push
dec
and
jnp
sub
add
push
enter
pop
je
imul
push
inc
push
push
ins
fadd
enter
sub
aad
lahf
push
mov
xchg
pop
cmp
sub
jnp
sbb
adc
sbb
add
or
cmp
ss
xor
jmp
sar
pushf
loop
popa
outs
mov
jp
rcr
lea
into
test
push
jbe
xlat
dec
ret
xlat
pop
jp
push
or
les
add
call
or
pop
and
pop
jl
gs
xchg
sbb
test
ja
inc
dec
inc
add
rol
(bad)
adc
outs
lock
push
jnp
int
popa
adc
inc
ins
cmp
std
imul
pop
(bad)
call
jmp
add
and
add
in
add
push
and
repz
and
adc
inc
jo
add
data16
add
or
retf
stos
lods
sub
enter
movs
retf
clc
test
and
mov
jmp
cmp
cmps
push
call
call
cmps
mov
pop
jne
xchg
lea
xor
xor
daa
aad
or
mov
pop
in
nop
(bad)
sub
add
xor
test
popf
add
add
dec
inc
lock
call
pop
add
dec
adc
jp
add
call
pop
push
sbb
mov
ja
pop
mov
sti
and
adc
jnp
out
mov
dec
call
mov
dec
push
inc
push
mov
mov
loopne
push
dec
push
or
sub
in
lea
loopne
sbb
sbb
sub
sbb
cs
push
or
in
shl
or
cmp
nop
push
xchg
push
pop
sbb
fwait
clc
mov
sbb
popa
retf
repnz
std
mov
or
add
ret
sub
or
(bad)
xor
mov
push
xor
jo
mov
xor
add
test
(bad)
xor
in
adc
xchg
sbb
popf
mov
or
lds
and
push
pop
lahf
jno
stos
pop
mov
movs
gs
inc
cdq
mov
rcl
xchg
je
je
sub
and
pop
arpl
push
test
hlt
push
mov
sub
mov
mov
dec
inc
dec
sbb
cmp
shl
xor
jl
sbb
retf
sub
loope
xchg
xor
sub
pop
call
shl
xor
inc
jns
cmp
ds
sbb
push
sbb
shl
addr16
loop
sub
xlat
fdivr
xor
sub
das
jb
dec
push
into
inc
mov
div
fdiv
imul
loopne
pop
ja
rol
pop
pusha
push
(bad)
mov
call
les
in
sbb
into
mov
cmp
mov
dec
pop
sub
sti
fld
sub
and
adc
stc
and
cmp
push
push
addr16
add
push
jb
call
jnp
xchg
xor
test
adc
std
push
inc
je
cmp
cmp
xchg
test
in
sbb
lea
adc
lea
movs
inc
jbe
imul
stos
sub
and
push
and
inc
xor
mov
mov
cmp
sub
daa
rcr
fild
or
cmp
call
loop
jmp
div
mov
or
mov
jns
out
hlt
fdivrp
xor
fdivr
mov
pop
(bad)
loop
ret
and
xor
ja
rcl
stos
add
fistp
xchg
psubsw
push
xchg
xchg
das
xor
sbb
arpl
xor
call
or
(bad)
mov
int3
or
mov
mov
mov
cs
shl
mov
(bad)
outs
push
adc
pop
mov
pop
and
lea
and
(bad)
enter
mov
mov
rep
pop
imul
movs
and
add
push
xchg
int3
and
loopne
arpl
mul
ss
rcl
dec
call
and
adc
xor
iret
scas
es
add
xchg
and
jne
repz
pop
pop
cmps
loope
jbe
int3
mov
pop
in
inc
test
(bad)
inc
jnp
packuswb
xor
mov
cmp
movs
pop
mov
inc
(bad)
and
push
inc
push
sbb
jmp
loope
jb
je
jmp
(bad)
jmp
push
popa
push
xchg
inc
or
fimul
sbb
aas
repz
adc
je
xchg
adc
mov
add
call
add
or
push
inc
leave
sub
cmc
(bad)
push
xor
add
sub
push
iret
movs
or
in
lea
sbb
and
into
cmps
mov
fiadd
mov
div
leave
push
xchg
jno
xor
adc
pop
jne
shl
mov
and
aas
js
mov
inc
cmp
mov
std
xlat
je
fisubr
ficom
or
push
adc
push
mov
xchg
ins
or
and
scas
dec
adc
mov
cwde
push
pusha
or
scas
xchg
sbb
daa
add
call
mov
pop
jmp
fimul
dec
push
shl
push
gs
xchg
pop
mov
dec
in
in
sub
add
and
or
cmp
ret
daa
inc
ficomp
sti
xor
loopne
or
jne
xor
and
ret
or
nop
dec
in
add
cmps
repnz
fst
in
or
xchg
jo
push
or
jbe
xchg
popf
enter
adc
leave
mov
jne
sub
mov
int3
mov
lods
inc
rol
in
mov
add
mov
cmp
xchg
sub
ret
mov
inc
mov
ins
ret
mov
mov
jno
sub
mov
(bad)
xor
shl
aam
fsub
(bad)
and
arpl
ret
jbe
adc
je
ins
mov
call
mov
icebp
add
mov
and
mov
xor
push
pop
ins
pop
adc
fistp
push
push
and
pop
fist
jp
ficomp
jne
mov
out
inc
sbb
jne
lods
mov
push
cmp
cmp
push
jbe
add
ret
inc
xor
xor
mov
dec
mov
xor
xor
jle
xchg
popa
xchg
cmps
adc
jmp
(bad)
or
sbb
cdq
call
xchg
jne
inc
enter
es
fstp
add
mov
outs
sbb
movsx
fmul
cmp
or
dec
in
mov
lods
lods
dec
xlat
push
push
mov
test
loop
lea
mov
push
jg
pop
mov
call
int
fstp
loop
in
dec
adc
or
and
cmp
int3
xchg
xchg
lock
cmp
nop
adc
sbb
sub
clc
inc
fsubr
call
or
jne
cld
jb
add
ins
fwait
sbb
adc
ss
inc
pop
dec
sahf
in
jne
scas
mov
sbb
mov
lea
scas
jns
dec
and
push
or
push
icebp
or
gs
pop
(bad)
nop
aam
cld
mov
icebp
xor
push
add
add
out
enter
add
loop
and
cld
mov
mov
xor
jb
add
mov
and
pop
ss
fcmovnbe
mov
inc
and
jmp
add
dec
pop
and
je
or
jne
add
or
je
mov
mov
cmp
adc
adc
loopne
outs
test
xor
or
inc
sti
or
fimul
sbb
sub
xor
bound
jmp
mov
fs
sbb
mov
adc
xor
cmc
xchg
mov
sbb
xor
push
push
push
(bad)
cld
call
call
popf
ror
adc
push
hlt
xor
test
sub
lds
clc
push
mov
add
call
mov
xor
lods
jbe
pop
push
aam
inc
jne
xor
sbb
inc
sbb
neg
add
aam
outs
sbb
inc
test
or
jg
jne
push
loopne
lods
(bad)
sbb
push
mov
mov
not
push
inc
rcr
fild
add
out
adc
mov
inc
inc
xor
pop
hlt
das
ins
ror
or
shr
push
mov
jl
or
jnp
mov
ss
stos
std
std
xchg
movhps
sbb
cld
cmp
lea
inc
inc
mov
sbb
mov
and
out
call
sub
mov
sub
aas
jmp
mov
dec
in
jbe
xor
inc
adc
push
sbb
pop
push
sahf
cmp
pop
push
mov
dec
pop
dec
pop
or
adc
std
adc
out
and
push
push
ds
(bad)
sbb
pop
outs
mov
jne
lock
xchg
cmp
(bad)
in
cmp
and
add
mov
cmp
add
(bad)
mov
and
je
fcomi
xor
mov
mov
cmp
je
aaa
lock
sub
sub
cmp
(bad)
lock
pop
add
int
adc
jnp
mov
add
add
or
jmp
les
xor
or
mov
nop
or
jae
ret
int3
or
lods
or
sbb
adc
aaa
cmp
sub
stos
daa
jl
iret
xchg
mov
adc
cmp
jne
and
rcl
popa
xor
popf
mov
into
into
mov
push
mov
inc
jecxz
push
mov
push
enter
call
mov
ret
sub
es
pop
in
jbe
or
xor
push
(bad)
fldcw
sbb
pusha
mov
ret
push
cmp
in
jle
clc
push
or
enter
nop
mov
and
or
jmp
and
xor
ins
call
inc
jmp
in
lods
cmp
jle
or
jp
(bad)
jnp
mov
fistp
cmp
mov
pusha
cmp
and
rol
enter
cmp
and
icebp
inc
popf
xor
sar
push
inc
aaa
mov
mov
test
dec
inc
xchg
add
adc
ins
cmp
in
sbb
test
mov
cmp
rol
xchg
mov
cmp
cmp
jl
pop
jne
mov
mov
jmp
or
sbb
cmp
or
or
or
or
into
jp
lahf
dec
sbb
rcr
or
mov
test
sub
and
jno
imul
and
movs
fiadd
jnp
push
add
call
out
aaa
mov
fstp
dec
xchg
(bad)
jmp
sbb
push
call
mov
and
mov
shl
shr
mov
test
ss
loop
dec
mov
mov
arpl
mov
test
sbb
sub
popaw
pop
fsubr
xchg
(bad)
stos
(bad)
push
xchg
aad
(bad)
call
cmp
jbe
rol
aad
movs
xchg
jne
or
cld
mov
sbb
push
and
std
pop
inc
xor
jbe
cmp
lock
sbb
push
loopne
dec
shl
xchg
push
inc
or
pushf
cmp
adc
adc
sbb
xor
and
jo
pop
loop
test
xor
cmp
shr
je
jo
adc
imul
pushf
sbb
js
popf
xchg
mov
popa
jb
clc
mov
add
(bad)
int
ror
xchg
mov
xor
test
ror
pop
and
fwait
jmp
push
mov
sub
jo
push
sbb
dec
mov
pop
or
in
mov
into
call
lds
lods
sbb
push
sbb
adc
add
es
stos
loopne
dec
inc
pushf
retf
(bad)
sti
push
(bad)
je
movs
pop
add
fld
add
dec
in
xor
add
psubb
test
js
pop
push
lea
lds
fs
and
pop
adc
ret
je
jl
enter
push
icebp
xchg
aam
xor
int
mov
push
push
inc
stos
adc
cmps
aam
in
(bad)
das
outs
cmp
inc
cmp
cwde
popa
fsubr
push
mov
(bad)
call
loope
dec
pop
add
push
push
push
xor
rcl
pop
mov
dec
je
jae
js
dec
fmul
retf
mov
imul
add
or
push
dec
mov
adc
add
and
mov
shr
or
or
xchg
in
dec
rep
shr
movzx
mov
rcr
leave
add
lock
add
mov
dec
leave
jmp
add
push
pop
in
mov
jne
(bad)
hlt
mov
push
adc
gs
add
mov
ss
clc
mov
cmp
push
sbb
inc
test
mov
or
mov
outs
jmp
sub
inc
rol
rcl
dec
rol
sub
shl
or
sub
cmp
cwde
loop
test
mov
call
ficomp
or
movs
call
iret
call
lea
mov
pop
mov
push
imul
pop
addr16
pop
sbb
sbb
(bad)
in
xor
sbb
jne
into
cmp
mov
jae
addr16
ss
mov
es
xchg
loopne
mov
or
je
int3
jecxz
fwait
pop
in
dec
outs
pop
pop
icebp
pushf
xor
jmp
nop
xor
or
push
sahf
jae
push
add
sbb
das
outs
(bad)
(bad)
jns
(bad)
icebp
call
cmp
cmp
scas
sub
jmp
(bad)
in
push
setb
sbb
cmp
xrelease
add
movs
sbb
call
jp
add
call
dec
jl
js
xor
stos
push
neg
nop
out
mov
dec
xor
adc
jecxz
fxtract
jmp
pop
sub
popf
jecxz
sbb
inc
or
mov
or
fisubr
pusha
mov
push
pop
sbb
sbb
add
shl
popa
mov
out
jnp
jp
xchg
jne
add
push
call
sbb
pop
fucomi
movs
jmp
js
sbb
ins
jns
je
and
ins
neg
adc
mov
sbb
int3
je
call
int3
add
or
jbe
icebp
mov
ror
push
dec
into
and
add
bound
mov
stc
sub
sbb
fiadd
out
push
cmp
push
sbb
mov
fdiv
or
mov
cwde
or
popf
pushf
or
fucomi
les
mov
and
xor
loopne
fs
inc
mov
mov
clc
inc
mov
adc
and
cmp
jg
push
ret
cs
lea
adc
sub
or
mov
mov
xor
mov
icebp
pusha
and
imul
adc
add
push
dec
or
test
sub
inc
inc
dec
jne
movzx
add
je
jecxz
xor
fwait
xor
mov
jbe
xchg
mov
mov
jecxz
ret
lea
sbb
xor
dec
sub
es
pop
lods
and
mov
mov
push
cli
sub
(bad)
sbb
shr
add
and
ja
or
out
jg
mov
lea
inc
xor
inc
pop
rcl
jecxz
std
nop
movs
or
rol
(bad)
xor
and
xor
jp
imul
cdq
imul
xchg
add
xchg
mov
call
and
les
cld
dec
push
push
call
pop
mov
shr
dec
sbb
(bad)
rcl
dec
dec
leave
push
xor
stos
inc
je
cmp
and
clc
cmp
leave
cmp
daa
dec
mov
dec
(bad)
xchg
out
mov
cwde
and
mov
lds
inc
sub
sub
push
je
xor
jmp
adc
shr
mov
or
add
push
sub
sub
or
sub
enter
inc
inc
adc
fs
shl
adc
ror
pop
mov
sar
or
mov
shr
xor
rol
xor
(bad)
mov
jmp
add
lds
push
add
sub
pop
or
sbb
add
shl
dec
push
mov
and
sub
mov
add
jmp
in
adc
and
or
xchg
dec
cmp
dec
imul
test
imul
add
and
addr16
cli
or
or
dec
add
out
call
mov
cmp
callw
pop
call
call
xchg
mov
popa
js
dec
aam
inc
adc
inc
push
jns
cmp
call
pop
mov
adc
int3
mov
push
inc
pop
xchg
cli
jmpw
movs
dec
pop
leave
or
out
push
rcr
cmp
or
dec
mov
mov
or
pop
(bad)
(bad)
jge
call
enter
scas
pop
and
das
ins
jmp
in
push
and
jb
cmp
jmp
cli
xchg
mov
pop
xchg
sbb
dec
inc
xlat
xchg
inc
sbb
mov
sar
cmp
clc
push
cmps
loopne
enter
pop
push
lds
int
(bad)
into
cmp
xor
dec
dec
jge
dec
dec
jmp
sub
inc
jmp
adc
and
jmp
push
mov
repnz
es
cmp
or
adc
leave
test
add
and
or
pusha
lock
sub
pop
arpl
lods
mov
inc
fiadd
(bad)
sub
inc
mov
mov
es
cmps
add
add
ret
movs
push
and
add
into
cmc
add
(bad)
je
jmp
sbb
ret
push
push
es
inc
and
(bad)
shufps
pop
fisttp
outs
iret
ss
iret
dec
push
and
or
in
ficomp
or
xor
mov
js
jmp
int3
rcl
enter
inc
push
imul
push
xor
adc
enter
inc
push
test
js
mov
loope
sbb
or
jle
repnz
xchg
pop
aaa
(bad)
dec
rcr
jp
arpl
movs
adc
add
inc
pop
int3
pop
and
adc
and
inc
inc
or
adc
push
inc
add
mov
xchg
pop
rol
sbb
or
call
inc
rcr
fisttp
mov
and
add
fs
pop
inc
adc
and
mov
cmp
mov
sub
and
mov
in
sub
add
fs
inc
retf
inc
movs
repz
loope
jmp
ss
rcl
dec
out
lods
mov
push
inc
scas
bound
push
dec
out
inc
out
jnp
data16
pusha
nop
push
in
nop
je
mov
push
(bad)
out
xchg
add
inc
dec
out
out
fld
inc
or
push
sub
jmp
adc
add
add
sahf
xlat
loopne
jmp
imul
mov
adc
pushf
adc
or
out
inc
daa
inc
out
fstp
add
and
dec
dec
cs
dec
out
xchg
sbb
ins
out
fld
xor
out
mov
or
push
mov
ror
mov
cmp
out
aaa
ret
add
or
push
adc
sbb
jns
out
test
add
adc
test
jmp
call
xchg
adc
test
mov
loop
or
ins
and
jo
cdq
adc
dec
pushf
fild
cld
std
push
pop
jmp
cmp
je
mov
add
sub
push
scas
repz
lahf
ret
lea
adc
add
pop
add
or
add
add
add
inc
cmp
movs
sbb
std
(bad)
jo
cmp
je
xchg
add
pop
leave
sbb
test
xchg
sbb
push
push
push
gs
pop
inc
or
dec
fisub
sbb
and
cld
add
lock
fisttp
or
mov
jns
or
xchg
or
sbb
or
scas
in
push
(bad)
(bad)
int
add
adc
pop
adc
adc
sahf
retf
stos
cmp
or
popa
in
adc
adc
pop
call
xchg
adc
push
inc
scas
adc
in
push
push
inc
xchg
or
sbb
pop
and
pop
leave
mov
sbb
jb
iret
pop
mov
mov
sbb
mov
sbb
sbb
sahf
ja
je
push
sbb
xor
xor
sbb
iret
push
push
inc
neg
pop
push
and
ret
sub
cmp
push
sub
add
and
dec
mov
pop
xchg
and
lods
pop
call
xchg
push
in
push
in
imul
add
sub
rcl
ret
sub
xlat
in
in
out
sahf
sub
mov
add
call
pop
repnz
call
mov
jmp
iret
enter
push
cs
jb
jmp
jmp
inc
call
xchg
ja
mov
xchg
aad
in
cmp
scas
in
mov
mov
or
je
ss
jae
lock
dec
and
inc
icebp
cmp
das
addr16
call
repz
das
nop
repz
std
hlt
hlt
retf
stos
cmp
hlt
xchg
(bad)
std
iret
enter
cmc
cmp
xor
mov
sbb
and
add
cmp
push
sar
aas
stc
stc
and
cli
cli
pop
enter
sti
sti
fisub
aaa
xchg
cld
cld
cld
je
cld
push
push
repnz
nop
shl
mov
xor
sbb
in
cld
(bad)
(bad)
xor
inc
ret
pcmpgtw
ficomp
sub
jb
lahf
rol
dec
xor
shr
out
imul
or
jecxz
adc
jecxz
xor
ja
cmp
push
push
mov
idiv
mov
mov
inc
or
and
movs
out
xchg
scas
call
cdq
(bad)
sti
adc
push
adc
or
cs
jmp
in
aad
daa
in
cdq
or
and
jmp
cmps
jb
cli
out
out
out
xchg
pop
push
lea
cdq
cmp
(bad)
cli
or
aas
repz
stos
xchg
sbb
push
cli
stc
(bad)
imul
stc
div
inc
scas
data16
mov
xchg
clc
push
and
test
jb
push
stc
xchg
adc
sbb
push
xor
sti
xchg
or
and
jmp
mov
cmp
mov
dec
mov
push
jne
adc
clc
mov
shr
dec
loop
loop
pop
push
lea
loope
clc
or
dec
inc
call
out
jne
mov
xchg
fdiv
out
pop
repnz
neg
and
push
and
jmp
xchg
pop
not
neg
hlt
imul
out
xchg
adc
into
neg
and
test
scas
not
dec
or
push
imul
in
aad
loope
div
push
or
mov
xchg
cmps
div
test
int3
scas
test
mov
clc
push
and
clc
cmp
or
pop
cmc
cli
cli
sub
cmp
cmp
pop
push
loope
cmc
cli
hlt
call
xlat
inc
mov
(bad)
lock
push
add
mov
push
mov
jae
cmp
sti
mov
loope
loopne
mov
loop
sub
nop
mov
rcl
mov
hlt
in
mov
loopne
pop
repz
paddq
mov
test
xchg
repz
jmp
shl
dec
(bad)
repz
or
cmp
movs
in
mov
jne
(bad)
repnz
repnz
test
cmp
push
repz
xchg
pop
and
mov
adc
push
pop
repnz
xchg
icebp
cmc
cmc
mov
(bad)
icebp
mov
pop
repnz
stos
lock
cwde
icebp
dec
jae
and
jb
sbb
mov
adc
stos
jne
and
jecxz
cmp
adc
jmp
dec
sub
pop
(bad)
push
sub
ffreep
push
inc
jge
push
and
cmp
dec
sahf
xchg
stos
cmp
lods
push
in
adc
mov
pop
mov
in
sbb
push
dec
icebp
dec
add
movs
xchg
push
cdq
and
jmp
xchg
pop
ja
sar
cmc
jmp
mov
sub
nop
push
jns
repz
adc
push
aaa
or
push
stc
xor
dec
add
jp
ss
int
sub
push
jecxz
repz
mov
imul
out
data16
aad
in
xchg
(bad)
gs
dec
xchg
into
jnp
outs
or
mov
add
and
mov
xor
sbb
dec
sub
lea
inc
cmp
and
xchg
aam
nop
retf
test
push
mov
test
fld
xchg
or
dec
bound
jmp
jg
cmp
repz
push
adc
adc
inc
jmp
lea
loope
push
or
lea
movs
sub
push
mov
push
mov
test
sbb
sbb
shl
add
test
inc
test
mov
adc
push
inc
popa
dec
shr
sbb
ret
nop
loopne
aam
in
jmp
ror
pop
push
push
ror
add
sbb
push
push
and
xchg
cmp
and
clc
adc
out
jmp
mov
xchg
pop
ins
adc
jmp
adc
dec
dec
cmp
jno
in
div
jno
or
mov
lahf
mov
jno
mov
cmps
js
pop
xor
mov
adc
push
rcl
add
hlt
psubsw
cmps
add
int
adc
and
jb
cmp
inc
imul
jns
xchg
lock
shr
inc
add
sub
sbb
mov
add
dec
js
add
adc
lds
dec
mov
jo
xor
xchg
mov
dec
xlat
xor
xor
dec
push
and
or
mov
dec
xchg
and
mov
or
sbb
inc
adc
adc
dec
pop
mov
inc
pusha
add
scas
adc
add
add
mov
or
leave
inc
mov
ror
in
mov
cmps
mov
inc
cdq
inc
popf
fnstenv
in
xor
xor
adc
xor
add
or
ins
dec
out
xchg
cmp
sbb
call
pop
mov
sbb
mov
sar
sbb
aam
addr16
pop
xor
dec
nop
push
test
cmps
lahf
sub
sti
iret
(bad)
les
xchg
and
pushf
push
lahf
push
xor
data16
mov
xchg
pop
test
lahf
sahf
and
lock
dec
and
xchg
fcomp
and
retf
in
sti
and
xchg
dec
xchg
lahf
mov
out
adc
lahf
and
fwait
in
rcl
jmp
repz
test
mov
adc
dec
nop
or
sbb
bound
jp
lahf
popa
cdq
xchg
mov
inc
leave
test
add
or
sbb
jmp
out
or
add
and
inc
mov
data16
pop
call
lahf
call
dec
xor
inc
inc
sahf
cmp
daa
daa
daa
xor
and
xchg
inc
sub
shld
ds
cld
push
out
imul
xor
pop
mov
lahf
mov
sub
sbb
es
mov
inc
outs
inc
and
in
sbb
or
pop
push
or
adc
movs
or
or
pop
fld
and
xchg
and
inc
push
mov
jo
inc
ds
cmp
dec
inc
test
or
and
pop
ret
imul
test
ja
ins
xor
aam
and
add
dec
and
dec
sahf
jmp
and
and
lds
push
cmp
sahf
loopne
xchg
xchg
mov
sbb
es
das
push
sub
mov
xchg
and
cdq
xchg
sub
xchg
cmp
(bad)
jmp
push
cwde
xchg
push
add
shr
xchg
fdivr
and
test
test
jno
xchg
add
sub
pop
cdq
xchg
cmp
popf
popa
stos
pop
inc
cmp
lods
fs
imul
add
xor
arpl
dec
dec
push
in
mov
in
cmp
mov
and
mov
(bad)
imul
inc
push
mov
pushf
xor
dec
nop
sahf
mov
je
repnz
pop
xor
int3
and
dec
xor
mov
xor
cmc
pop
add
inc
dec
cmps
test
jecxz
push
dec
xchg
cmps
scas
sub
or
dec
imul
hlt
jle
add
xchg
and
add
(bad)
mov
std
popa
daa
mov
and
pop
fwait
mov
push
xor
add
xor
inc
sbb
inc
lods
movzx
in
jo
sub
mov
mov
cmp
pushf
mov
cs
daa
mov
pushf
aam
rcl
in
add
add
daa
sub
jmp
mov
es
fsub
or
nop
nop
push
rol
hlt
movs
cmp
xor
push
xchg
and
in
movs
sti
shr
data16
data16
movs
lds
fndisi(8087
mov
or
test
pop
iret
dec
int
cmp
aad
bound
pusha
push
cmp
iret
lock
popa
aas
xlat
xor
jns
je
popa
dec
dec
sub
nop
push
mov
cmp
add
add
inc
loopne
std
xor
inc
adc
fnsave
cmp
nop
push
adc
fs
cmp
into
dec
aam
pop
sbb
vorps
aaa
fsub
dec
mov
pop
hlt
cwde
loopne
cmp
xchg
(bad)
mov
and
ja
inc
dec
mov
ss
inc
dec
mov
mov
and
lea
(bad)
inc
ret
or
dec
mov
jl
mov
mov
movs
jmp
mov
data16
loope
xchg
jo
dec
inc
sub
sbb
ror
push
sub
mov
dec
inc
sub
test
or
sub
movs
sub
sub
xchg
mov
cwde
imul
cmp
mov
js
je
loopne
mov
mov
rcl
fucomp
sbb
lahf
(bad)
call
jge
sub
or
xchg
mov
jno
xchg
jmp
pop
test
pop
ins
adc
dec
in
loope
dec
inc
addr16
sub
sbb
sub
dec
inc
stos
lahf
aam
sbb
xchg
retf
sub
call
rcl
mov
inc
cmp
int
mov
pop
sub
pop
sub
adc
mov
sub
(bad)
sbb
mov
sbb
sub
xor
sub
inc
leave
stos
cwde
imul
cmp
test
xor
cmp
je
int3
sub
sub
inc
aaa
int3
xor
les
sub
ss
int3
xor
sbb
push
xor
push
sub
push
(bad)
hlt
jmp
sar
and
ret
js
sub
xor
call
sbb
inc
aaa
ror
jo
cmps
aad
sub
xor
icebp
cmps
and
or
cdq
xchg
int
je
sub
popf
das
mov
or
xor
push
xor
cmp
mov
xor
stos
fisttp
sub
imul
cmp
data16
cmp
xchg
xchg
std
pop
movs
xchg
data16
add
imul
in
ins
push
ds
pop
jp
cwde
imul
sbb
pop
sub
push
sbb
push
js
imul
int3
xor
mov
sub
jo
mov
add
xor
or
cmp
int
sub
mov
adc
sub
cs
call
xchg
mov
cmp
inc
sbb
imul
enter
sbb
in
fwait
cwde
sub
and
fwait
nop
and
adc
mov
sub
dec
sub
push
aam
nop
cwde
imul
hlt
mov
xor
rcl
dec
sub
je
dec
inc
sub
add
xor
push
call
out
adc
ret
sub
cmp
jae
data16
test
loopne
int
adc
add
gs
xor
push
call
or
int
dec
mov
loope
enter
loope
inc
sub
out
mov
in
mov
or
xor
or
sub
mov
add
mov
fwait
sub
inc
call
sub
dec
inc
imul
mov
or
sbb
sub
rcl
iret
cs
fwait
add
retf
outs
sbb
rcl
test
mov
sub
jbe
mov
stos
or
cwde
adc
cmp
xchg
and
pop
xchg
dec
inc
sub
data16
and
mov
mov
adc
out
xor
sub
cmp
out
dec
jp
adc
inc
stos
xchg
mov
je
bound
xor
rcr
sub
xor
or
mov
dec
imul
xor
cdq
xchg
jg
into
imul
jl
out
push
sub
sbb
sbb
sbb
js
push
sbb
sbb
pop
dec
dec
pop
cmp
dec
and
dec
inc
sub
inc
loope
dec
call
adc
push
int
je
popa
jo
sbb
push
lods
cli
cmp
cmp
call
fdiv
mov
jno
ds
pop
xchg
icebp
leave
jmp
cmp
imul
and
inc
shl
dec
add
mov
lds
icebp
mov
repz
push
jno
ret
pop
xchg
mov
cmp
mov
or
es
mov
out
push
dec
dec
inc
sub
push
dec
pop
ret
sub
mov
bt
sbb
dec
lock
jbe
enter
lods
ret
mov
imul
add
sbb
mov
stos
ja
add
ja
aad
mov
mov
or
add
sub
inc
dec
inc
mov
and
inc
add
imul
mov
jp
push
add
xchg
add
xlat
jae
mov
sti
add
les
sbb
and
pop
adc
mov
movs
cmp
movs
dec
jo
cmps
jo
pushf
or
sbb
gs
in
xlat
dec
mov
add
in
push
sub
xlat
dec
or
(bad)
xchg
movs
repz
js
test
sub
dec
shl
out
add
push
dec
ins
cmp
mov
adc
push
xchg
fsub
das
jae
popf
push
push
cmp
adc
mov
inc
adc
ror
ret
inc
push
sbb
jne
out
or
mov
pop
punpckhbw
mov
inc
cmp
add
in
cli
rcl
sub
stc
mov
outs
adc
adc
scas
pop
xchg
and
mov
nop
scas
test
mov
leave
xchg
push
or
shl
xchg
sub
pop
add
rcl
dec
pop
fwait
ins
rcl
xchg
mov
and
out
or
and
shl
dec
adc
or
ss
add
not
and
inc
cmp
push
jl
ror
out
sbb
or
cmp
inc
mov
je
push
(bad)
sbb
ins
dec
pop
popa
call
out
ret
pop
call
movs
stos
out
fimul
call
jge
inc
jmp
and
inc
mov
shr
push
cwde
mov
ins
dec
inc
push
shl
movs
inc
sub
outs
inc
inc
push
inc
xchg
ret
jmp
push
(bad)
ins
inc
rcr
add
movs
sti
ss
mov
jmp
dec
mov
movs
sbb
and
outs
loop
movs
inc
mov
not
add
test
nop
inc
and
jne
rol
inc
xor
sbb
inc
loopne
dec
jno
rol
inc
cmp
loopne
jae
xchg
shr
push
imul
mov
dec
call
loopne
and
scas
xchg
retf
scas
fist
mov
mov
call
sub
mov
or
xchg
test
xchg
test
and
mov
pusha
adc
mov
and
aaa
pop
mov
dec
enter
inc
inc
dec
fsub
or
call
ja
mov
dec
enter
lea
mov
mov
xchg
nop
shr
push
mov
push
nop
pop
push
mov
and
push
push
mov
cmps
adc
sbb
dec
mov
jae
push
xchg
mov
push
mov
dec
test
rcl
adc
mov
cmp
lea
jle
push
cmp
adc
add
sbb
loop
call
in
hlt
and
jl
je
xchg
jno
mov
cmp
add
xchg
ins
sbb
cmp
xor
adc
xor
lds
mov
cmp
cdq
rcl
sahf
adc
pusha
add
pop
enter
or
aas
push
cmp
xor
sub
repz
jg
adc
pop
and
adc
mov
push
es
loopne
(bad)
mov
push
sub
out
push
dec
and
mov
or
call
jo
call
mov
jne
cs
mov
sbb
inc
and
cmp
pop
jb
test
inc
mov
xor
push
inc
call
ins
inc
cmp
(bad)
jmp
add
inc
rcr
push
sub
xor
mov
cmp
or
jne
aam
cli
sbb
mov
mov
push
or
ins
cmp
add
test
inc
jmp
dec
jmp
xor
add
loopne
inc
inc
adc
mov
jmp
inc
inc
inc
pop
je
es
stc
pop
es
fsub
and
cmp
add
or
(bad)
mov
jle
adc
add
js
mov
mov
xor
sbb
inc
or
je
aas
ret
xchg
cmp
and
cmp
leave
rcl
ins
or
mov
inc
movs
sar
inc
add
lea
xor
inc
jmp
(bad)
mov
xchg
arpl
jmp
in
lods
pop
fstp
gs
xchg
rol
sbb
mov
gs
std
enter
inc
fadd
sbb
call
popa
push
mov
outs
push
sbb
mov
mov
lock
test
call
or
xlat
push
push
div
lods
inc
aam
pop
mov
out
js
jb
cmp
repz
and
jge
(bad)
push
push
or
sti
dec
mov
into
rol
and
cmps
pop
jo
in
add
ja
cmp
xor
(bad)
lock
push
add
ret
push
sar
inc
mov
adc
xlat
ret
dec
and
mov
sub
push
hlt
dec
inc
sbb
push
sub
int
mov
push
out
arpl
pop
retf
cwde
nop
jmp
mov
inc
ror
sbb
sbb
xor
or
push
jno
pushf
movs
mov
call
add
fist
xor
test
push
rcl
add
add
mov
stos
add
sbb
(bad)
in
push
enter
ja
mov
das
out
push
inc
gs
das
or
add
retf
pop
mov
lock
cmp
adc
cdq
nop
inc
add
nop
push
xchg
retf
rol
add
add
(bad)
dec
gs
xor
mov
retf
adc
out
nop
sub
cmp
dec
rol
mov
js
sar
imul
push
jbe
popf
fadd
retf
in
call
scas
or
movs
mov
add
dec
sub
cmc
fist
and
or
test
test
xlat
sbb
mov
mov
mov
movs
mov
push
lea
inc
(bad)
pop
imul
dec
loopne
cmp
or
xor
aas
daa
imul
push
int3
or
push
lea
fcom
jmp
jge
xchg
ins
dec
cmps
or
push
jbe
pop
repnz
pop
add
pop
add
push
pop
fwait
inc
sbb
inc
xor
inc
sbb
pop
ret
add
cs
mov
pop
fwait
mov
ss
lea
mov
or
adc
jae
jmp
cdq
popf
add
es
xchg
or
sar
adc
nop
xchg
xor
imul
dec
or
pop
jmp
nop
xchg
inc
movs
add
jge
pop
push
jg
jae
ins
mov
test
(bad)
mov
cli
pop
pop
repnz
call
jne
aad
rcl
or
or
pop
inc
xchg
push
scas
add
and
movs
mov
cmp
stos
pop
or
es
or
or
out
rol
and
test
jns
imul
nop
xchg
xchg
or
pop
mov
stos
mov
mov
pop
jecxz
dec
push
(bad)
mov
sbb
mov
inc
cmp
loop
inc
or
sub
aaa
sbb
jns
rol
loop
cmp
jns
daa
and
push
push
cwde
cmp
mov
inc
add
std
push
ret
or
xor
push
mov
pusha
or
xor
add
push
mov
mov
adc
cld
clc
loopne
xor
and
push
jmp
pusha
xor
add
mov
rcl
or
ins
xor
sar
dec
sbb
jb
cmp
rol
add
mov
popa
add
xor
sbb
and
sbb
mov
pushf
fldenv
inc
repnz
add
sub
and
xchg
shl
out
lea
sbb
pop
add
jecxz
and
pusha
lods
dec
fild
mov
sbb
loope
mov
sub
lock
nop
push
xor
sbb
mov
mov
in
jo
xchg
sub
xchg
sbb
push
ret
sbb
leave
inc
inc
xor
mov
inc
dec
sbb
les
in
sbb
xor
lock
adc
fwait
pop
xor
adc
and
in
sbb
in
rol
pop
and
push
or
and
add
and
and
or
jo
test
pop
sbb
ror
test
adc
sub
cmp
and
rol
outs
and
sbb
jb
mov
mov
fld
jbe
add
sub
or
jmp
cmp
popf
fstp
cmp
sbb
dec
mov
push
push
mov
mov
cld
stos
dec
sub
jne
cmp
or
call
ror
lds
adc
push
dec
call
mov
mov
add
sub
adc
mov
lods
jo
pusha
lds
call
xor
lock
pop
sub
outs
pop
add
fldenv
adc
push
(bad)
js
ins
inc
mov
mov
xlat
inc
(bad)
rol
je
repz
rcr
mov
outs
mov
or
cwde
adc
mov
add
ret
sti
cdq
sbb
or
call
ds
add
dec
addr16
adc
inc
popa
inc
cs
enter
mov
push
call
sub
(bad)
mov
fld
push
push
adc
cmps
jo
sub
pop
push
test
inc
cmps
imul
inc
addr16
cmps
es
xor
push
les
xchg
mov
mov
mov
stos
inc
push
push
mov
dec
push
fnstsw
pushf
es
mov
adc
mov
or
out
lods
dec
inc
sub
fldcw
cs
daa
jl
ss
pop
sub
pop
sbb
or
inc
mov
mov
xor
sbb
repnz
push
pop
or
and
and
pop
retf
dec
mov
dec
dec
pop
adc
addr16
jb
outs
std
dec
loopne
add
pop
jp
pop
dec
and
dec
inc
or
mov
aam
mov
or
pop
call
mov
dec
dec
hlt
push
jmp
int3
in
adc
cmp
xchg
push
and
out
add
nop
sbb
sub
jb
cmps
jns
adc
jns
mov
pop
loope
stos
cmp
je
adc
and
lahf
add
cs
sub
and
aad
jb
sub
xchg
loop
mov
js
dec
push
call
sub
or
jns
xchg
shl
rcl
outs
push
dec
cmp
mov
inc
jns
int
lods
mov
or
xor
jmp
lds
enter
xor
movs
and
je
dec
jns
call
mov
int
shl
pop
ss
mov
and
jecxz
ret
mov
(bad)
mov
int
popa
mov
inc
(bad)
sub
std
xor
mov
jns
fadd
call
pop
dec
call
ds
jbe
stos
jns
fcomi
dec
sbb
inc
jns
cs
dec
enter
mov
sub
sbb
ret
shl
movs
xor
mov
sub
xchg
jnp
adc
jbe
mov
push
and
mov
aam
or
add
call
sbb
inc
inc
jns
or
adc
xchg
jns
mov
pusha
mov
test
jns
push
and
xor
and
and
inc
inc
jns
or
or
adc
push
ffreep
mov
adc
dec
adc
repnz
jg
push
inc
inc
cmps
cmps
jns
adc
rcl
xchg
test
sbb
cmp
or
ja
push
sbb
xor
mov
sub
test
sub
lds
and
ror
adc
pop
adc
and
out
iret
lds
xlat
jns
into
add
or
ficomp
jecxz
mov
adc
jns
(bad)
movs
mov
pusha
rcl
jns
sbb
les
push
int
xor
dec
retf
cmp
jns
(bad)
cwde
mov
mov
shr
pop
xor
sbb
nop
stos
inc
ins
pop
mov
add
pop
aaa
push
xor
dec
and
sub
pop
sbb
sub
adc
test
je
dec
xchg
mov
or
js
jo
sbb
and
cmp
jp
sub
inc
mov
sbb
(bad)
or
and
sti
dec
xchg
cmp
shl
mov
call
cwde
cmp
push
test
pop
sub
mov
fs
arpl
rol
pop
cmp
pop
or
dec
xchg
in
jge
xchg
inc
or
mov
or
dec
and
fld
pop
adc
inc
ret
mov
dec
das
mov
mov
dec
cs
aas
pop
aaa
and
push
dec
jns
test
dec
mov
jns
pop
out
mov
jb
and
add
hlt
add
inc
push
das
pop
adc
and
mov
or
test
das
sti
(bad)
sbb
jns
xchg
nop
das
inc
mov
call
or
jle
mov
shl
das
or
jo
and
rol
and
or
cmp
and
cmp
inc
xchg
and
fld
aad
nop
call
jle
xor
and
mov
movs
xor
add
sbb
pop
inc
ss
jae
mov
xlat
adc
add
sbb
push
leave
jle
add
inc
ss
enter
nop
mov
mov
pop
enter
inc
ss
adc
fnop
push
pop
lea
repnz
sbb
enter
pop
movups
inc
fs
pop
jmp
enter
pop
inc
xchg
or
pop
mov
and
sub
sub
or
and
dec
adc
xor
or
in
loope
loopne
pop
loop
pop
in
nop
jns
movsx
xor
test
lea
mov
dec
enter
push
inc
arpl
stos
xor
ret
push
push
cwde
nop
jnp
loopne
mov
push
push
cmps
sar
js
push
pusha
cmp
lods
or
push
aas
add
pop
mov
and
dec
xchg
les
dec
enter
or
jl
and
mov
in
adc
je
outs
nop
push
dec
test
mov
or
sbb
push
push
mov
inc
push
pop
adc
push
test
push
psubsb
inc
push
aad
je
fst
inc
push
jo
cmp
fdivr
xchg
sub
stos
sub
push
sub
mov
hlt
or
mov
ror
(bad)
call
mov
mov
dec
aam
or
inc
or
pop
(bad)
sbb
adc
das
lahf
jmp
call
mov
repnz
call
sub
add
call
pop
scas
xor
lock
call
fwait
mov
and
inc
call
mov
stc
repnz
movs
lods
andps
movs
pop
call
xchg
das
pop
mov
call
ins
stc
repnz
call
je
gs
pop
mov
jl
call
shr
inc
sbb
cmp
test
mov
nop
sbb
adc
sub
cli
retf
movs
dec
dec
in
in
fxch
movs
repnz
les
lods
int3
mov
pop
shl
xchg
mov
xchg
retf
fdiv
retf
test
test
in
inc
aam
xchg
retf
lock
es
jns
pop
sub
cld
adc
add
add
leave
or
je
out
or
or
loope
adc
mov
mov
mov
stos
and
dec
in
lahf
sub
xor
jae
xchg
dec
in
push
xor
push
push
inc
gs
dec
out
ror
cs
adc
and
or
pop
add
add
or
jo
pop
and
enter
std
ins
and
xor
daa
int
jo
xor
sahf
cld
pushf
and
cmp
push
call
mov
je
data16
js
movs
sbb
push
adc
inc
call
sbb
cmp
dec
push
and
sbb
cli
(bad)
cmp
xchg
xchg
mov
sbb
imul
pusha
in
lods
mov
cli
mov
xchg
out
mov
and
add
and
push
aad
dec
arpl
arpl
add
and
das
add
cmp
mov
call
sub
or
mov
adc
dec
aam
mov
or
mov
mov
dec
mov
sbb
stos
shl
add
or
stos
mov
inc
test
rcr
dec
aaa
inc
dec
sub
and
fs
sbb
or
inc
mov
xor
add
cmp
push
cs
pop
adc
xchg
ins
inc
cld
or
fnsave
call
retf
stos
mov
jne
or
pop
sbb
jb
iret
add
sub
sub
push
shl
call
dec
dec
iret
pop
adc
std
mov
push
mov
mov
mov
sbb
jmp
sbb
cs
jo
jge
mov
or
pusha
enter
sub
add
mov
inc
aad
mov
aad
mov
outs
shl
mov
movs
stos
and
push
pop
push
add
pop
or
sbb
aad
aad
sbb
mov
add
es
aad
pushf
mov
mov
add
or
repz
jp
adc
adc
or
xor
fs
or
and
nop
mov
fs
ret
dec
push
adc
or
xchg
pop
adc
cmps
sbb
dec
xchg
sbb
and
outs
dec
mov
sub
fld1
inc
cmp
sbb
sbb
jne
aam
mov
(bad)
cmc
rcr
xchg
mov
pop
adc
cmp
pop
cmp
cli
sbb
mov
mov
nop
scas
jmp
push
xchg
inc
cdq
jecxz
mov
mov
cmp
aaa
push
cdq
xchg
mov
inc
gs
adc
mov
dec
or
lods
pushf
gs
outs
mov
rcl
adc
cmp
je
cmps
je
mov
call
or
hlt
ins
rcr
dec
push
ret
add
push
cmps
adc
dec
lahf
add
adc
cdq
xor
cmps
adc
dec
test
adc
dec
adc
push
cdq
adc
pop
push
adc
jo
adc
repnz
jns
popf
mov
jne
xchg
sub
mov
adc
cwde
mov
js
shl
mov
data16
paddsw
or
sub
add
stc
sbb
not
jbe
dec
push
dec
or
call
out
adc
rcr
mov
cmp
and
mov
jns
call
and
xchg
adc
jmp
jmp
adc
cmp
cmp
inc
imul
cmp
and
sbb
cmp
ror
push
cmp
mov
xchg
jmp
scas
and
xchg
leave
stos
sub
adc
jecxz
test
stos
sub
ret
ja
push
push
fs
inc
sub
cmp
les
add
or
sahf
push
push
je
adc
retf
push
pop
mov
inc
add
or
nop
push
push
push
inc
and
or
xor
or
inc
add
and
nop
or
movs
push
or
and
pop
pusha
leave
pop
push
mov
nop
test
push
lods
loopne
add
dec
push
mov
pop
scas
add
mov
and
add
dec
repz
mov
xchg
push
or
push
sbb
and
int
movs
mov
push
mov
sub
xor
mov
call
mov
jbe
fs
add
jnp
dec
push
mov
cmp
pop
int3
lea
push
add
stos
xor
nop
imul
nop
imul
adc
rcr
dec
pushf
aaa
rcr
jne
aaa
(bad)
mov
add
and
dec
or
nop
cmps
pushf
push
je
sub
scas
test
jl
(bad)
popa
pop
inc
inc
sbb
mov
fistp
cmp
and
xchg
loopne
aaa
mov
or
cmp
jmp
jne
nop
push
aaa
shr
pop
dec
aaa
push
cmps
add
sbb
inc
or
je
push
sbb
jmp
ret
sub
mov
mov
add
mov
mov
dec
xor
adc
mov
sub
push
iret
dec
dec
add
pop
adc
mov
sub
and
iret
add
loope
mov
add
and
pop
and
out
mov
or
add
call
sbb
sbb
fisttp
call
or
add
xor
mov
add
into
jle
rol
or
jp
cmp
sbb
inc
fwait
or
adc
lea
addr16
add
loopne
addr16
xor
jmp
xor
addr16
rcl
sbb
enter
xchg
ret
add
into
sub
fsub
jp
push
jmp
pop
scas
push
mov
test
mov
push
sbb
add
sbb
xor
sbb
push
or
sub
fcomp
xchg
dec
or
xchg
les
mov
dec
mov
sbb
popa
enter
sbb
jo
or
sub
add
sbb
mov
shl
xor
pop
in
xchg
sub
inc
adc
mov
imul
mov
push
out
cmp
dec
or
adc
jp
cmp
jge
pop
dec
jns
sahf
jg
push
mov
inc
(bad)
dec
fldenv
dec
mov
mov
retf
nop
test
movs
xchg
jmp
push
add
pop
lods
push
retf
shl
aam
je
inc
dec
xor
pop
pop
inc
or
xor
nop
dec
scas
mov
test
cmp
in
lods
mov
int3
push
push
lock
mov
or
fwait
retf
nop
mov
xor
push
repz
add
xor
repz
lahf
enter
repz
xchg
test
repz
pop
fdiv
adc
adc
imul
sahf
sbb
and
adc
add
sbb
jmp
hlt
jecxz
repnz
jg
jno
rcl
mov
jg
mov
sub
aad
or
popa
push
popf
mov
inc
mov
div
pop
je
push
call
mov
mov
xchg
xor
sub
xor
or
pop
xor
pop
dec
inc
cmps
ins
movs
hlt
bound
jb
xchg
add
cmp
jne
and
adc
aam
push
mov
loope
sbb
call
dec
pop
or
add
inc
sub
jb
jne
mov
sub
add
sti
fwait
repz
add
ja
adc
and
fimul
jo
repnz
xlat
fwait
push
sub
xor
add
sub
dec
mov
in
out
jb
adc
xchg
fwait
icebp
add
call
push
xor
fcmovbe
push
adc
mov
test
loope
mov
shl
or
shl
ret
xor
idiv
call
xchg
jb
xlat
ret
push
icebp
in
or
stos
xchg
pop
push
or
or
push
xchg
add
movs
repz
mov
retf
call
add
repz
push
or
xchg
movs
xchg
mov
mov
int
mov
icebp
jbe
xchg
test
inc
push
cmp
test
or
xor
out
or
cdq
adc
sbb
or
mov
sub
scas
jmp
cs
mov
or
sbb
inc
mov
add
cmp
inc
mov
cmp
add
and
jns
out
or
sbb
ret
jns
out
mov
push
int
jns
ds
or
sbb
fcmovnu
repz
(bad)
push
mov
pushf
pop
push
sahf
out
pop
lods
push
mov
out
jns
test
nop
movs
cmp
repz
push
xchg
jl
push
inc
iret
repz
cmp
push
push
repz
sbb
repnz
jns
out
fmulp
mov
jnp
mov
ret
into
sbb
inc
add
es
loop
(bad)
sbb
jns
(bad)
mov
int
outs
pusha
sbb
pushf
out
cmp
scas
retf
or
sahf
out
sahf
and
pop
data16
sahf
out
test
jns
out
fsubrp
dec
(bad)
and
push
shr
data16
ja
jb
jle
sahf
mov
daa
sar
fdivp
push
(bad)
loop
clc
adc
sub
cmp
aaa
jns
ja
je
fs
push
cmp
jns
pop
icebp
adc
daa
pop
mov
jbe
fst
fiadd
lahf
jae
jbe
push
cwde
cmps
mov
xchg
das
out
iret
dec
test
imul
outs
add
jbe
push
scas
test
add
mov
(bad)
out
add
pop
sub
jo
sbb
jbe
gs
jle
sub
sub
xchg
push
inc
and
xlat
inc
or
dec
push
je
add
mov
push
outs
push
push
ja
add
aaa
fadd
(bad)
lahf
bound
mov
ins
xchg
mov
xor
fstp
jae
outs
ss
add
push
xor
inc
pop
js
add
bound
add
xor
jns
fst
outs
mov
shr
es
dec
cmp
pop
or
das
xchg
aaa
or
imul
mov
jae
mov
xor
inc
imul
add
adc
mov
sbb
jbe
and
imul
add
adc
mov
sub
mov
es
ficomp
daa
add
out
sbb
cmp
mov
jg
popa
movs
test
aas
ret
je
add
cmp
arpl
push
dec
inc
push
push
inc
push
inc
pop
inc
outs
outs
push
out
ror
push
xchg
jb
inc
nop
rcl
mov
dec
xor
xor
lahf
idiv
jae
pop
dec
imul
jo
(bad)
xchg
dec
jae
inc
jne
outs
je
es
(bad)
cmps
arpl
xor
fild
ss
inc
xor
sub
push
inc
inc
sub
sub
inc
inc
xor
xor
xor
jge
(bad)
fstp
xor
xor
inc
xor
xor
ss
xor
leave
mov
fdiv
cmp
xor
clc
inc
inc
xor
mov
aam
xchg
push
bswap
(bad)
out
inc
add
gs
push
jo
or
aas
cmp
inc
inc
movs
jg
in
xor
xor
or
push
and
lock
xor
adc
xor
inc
pop
dec
sbb
or
push
jl
xchg
push
ficom
push
cld
stos
mov
sahf
inc
push
inc
push
dec
and
cmp
or
add
xor
and
aam
cmp
dec
outs
mov
dec
xor
ds
pop
in
scas
push
push
sbb
inc
dec
hlt
imul
ficom
pop
push
xor
push
inc
out
adc
push
sub
out
cmp
jmp
neg
lods
sahf
add
movntq
and
hlt
jne
dec
or
adc
ins
adc
dec
jo
test
ss
inc
and
outs
xor
imul
gs
sub
js
push
push
mov
data16
push
inc
cmp
jbe
in
rol
inc
cmp
sbb
xchg
test
and
mov
push
outs
xor
mov
inc
cs
cmp
sub
inc
sbb
arpl
ins
mov
xchg
and
ret
jne
ret
retf
js
(bad)
add
xor
xor
or
pop
adc
or
cmp
mov
sub
sbb
pop
add
les
jp
ficom
inc
mov
pusha
push
and
je
ds
and
inc
std
add
imul
dec
xchg
loopne
jns
rcr
add
dec
fs
ret
call
cmp
ss
popa
fs
jo
(bad)
dec
cmp
ret
add
add
int3
mov
dec
movs
push
cmp
dec
jae
outs
mov
pop
arpl
inc
cs
push
push
push
add
xchg
pop
xor
(bad)
ja
dec
sub
shl
mov
sbb
popa
imul
and
sbb
lods
cwde
add
fdiv
add
add
and
inc
les
or
add
stos
inc
or
es
or
repnz
ror
or
push
pop
or
mov
add
aaa
or
jle
and
xchg
pushf
add
sbb
push
xchg
adc
and
pop
inc
mov
popa
sub
sub
mov
adc
adc
iret
repz
or
or
add
mov
adc
push
adc
out
dec
add
iret
sar
sbb
(bad)
sbb
mov
std
sbb
push
das
fbstp
out
pop
nop
cld
and
cli
xor
push
jns
stc
jp
repz
iret
push
cld
fdivr
mov
cmps
or
jbe
add
mov
out
les
mov
adc
outs
mov
dec
int3
xor
ja
cmp
sbb
push
cmp
es
bound
add
pop
(bad)
adc
repz
addr16
cld
or
in
into
repz
int3
les
xor
out
dec
nop
mov
mov
jns
ins
push
cmp
pop
mov
dec
jns
repz
inc
cmp
xor
jns
out
sub
and
sahf
out
sahf
sbb
adc
or
cmp
out
add
cld
or
hlt
repz
repz
iret
repz
movs
nop
jo
xor
sahf
out
ds
int3
mov
ins
jns
out
inc
sub
adc
repz
repz
push
fcom
les
js
sub
aam
out
call
iret
jnp
jl
add
call
cwde
add
loop
jl
mov
mov
pop
inc
bound
dec
les
dec
repz
icebp
or
nop
js
retf
xor
fidivr
sub
inc
inc
add
adc
shr
mov
cmp
dec
mov
pop
and
stos
push
add
sbb
adc
sub
adc
xor
mov
mov
add
mov
inc
pop
les
xchg
sub
rcl
adc
sbb
xor
imul
push
jmp
adc
inc
fsub
pop
jmp
or
bound
adc
or
(bad)
or
xchg
add
mov
and
js
shr
(bad)
dec
mov
pushf
and
rol
ret
jns
or
or
aas
call
inc
push
xor
xchg
cld
inc
inc
mov
jnp
out
mov
ret
inc
cmp
add
cmp
or
pop
mov
sbb
and
jg
ret
jne
imul
rcl
inc
fdiv
imul
pop
jb
pop
push
mov
or
cs
(bad)
cmp
or
xchg
sub
in
mov
das
inc
leave
jmp
xchg
scas
outs
jl
add
cmps
ja
lahf
add
das
(bad)
add
cmp
xchg
loopne
adc
and
push
mov
dec
test
ror
adc
data16
in
mov
ins
pop
rol
in
aas
jg
fsubr
and
aam
cmp
ret
dec
mov
aas
sete
int3
ror
jmp
add
es
dec
xlat
jns
pop
shr
repnz
fisttp
push
test
aas
in
setl
retf
(bad)
out
test
adc
outs
or
push
popf
jl
in
sub
xor
push
aas
sbb
daa
call
mov
mov
xor
mov
nop
shl
aam
aas
jno
loopne
vmptrst
enter
sar
mov
and
or
(bad)
iret
fcmovnbe
jae
popf
dec
mov
aas
jbe
mov
dec
arpl
adc
aam
outs
movs
xor
adc
fs
loopne
jno
jnp
dec
mov
push
sahf
loopne
daa
(bad)
in
xor
mov
push
dec
mov
ins
pop
les
inc
ins
imul
lods
lea
pop
add
jnp
or
je
dec
imul
or
jle
(bad)
ltr
ins
ja
or
and
addr16
or
push
dec
dec
add
dec
cld
mov
push
push
add
push
outs
ja
xor
(bad)
cli
dec
sub
jno
in
sub
add
mov
daa
movs
and
sbb
inc
sbb
dec
inc
repnz
lea
rep
inc
lods
mov
test
adc
or
inc
xor
xchg
ror
mov
jo
sbb
in
inc
add
ins
jo
loopne
ja
dec
pop
outs
push
add
pop
adc
add
push
pop
mov
cli
add
jae
and
add
adc
xor
mov
push
push
loope
movs
mov
mov
out
adc
or
movs
sub
push
inc
sbb
cmp
jl
cmp
dec
add
es
(bad)
mov
inc
push
mov
and
das
push
mov
or
cmp
push
jo
jb
jns
sti
xor
gs
movs
sbb
inc
xchg
rcl
add
lods
cmps
xor
push
mov
pop
sbb
imul
push
fcmovb
pop
xor
adc
sar
and
inc
xlat
lods
mov
cmp
jns
cmps
and
inc
rcl
dec
jnp
and
xchg
icebp
mul
xor
inc
xchg
or
mov
add
fbld
jne
mov
jnp
or
ins
jmp
mov
into
test
aad
addr16
es
pop
push
scas
mov
and
and
push
fiadd
ds
fs
and
dec
add
data16
dec
icebp
inc
js
test
inc
div
int3
cs
adc
dec
or
fidivr
and
push
sbb
cmps
call
fs
inc
lahf
outs
xor
cmps
lea
ret
inc
sub
jne
es
pop
outs
(bad)
mov
adc
scas
inc
shl
add
fiadd
sub
xor
in
and
mov
aam
xor
xor
dec
dec
pop
addr16
lods
add
inc
jns
rcr
gs
lds
inc
xchg
shr
mov
lea
inc
push
outs
cmp
xchg
mov
rol
add
push
push
pop
aaa
or
sbb
cmp
xchg
aaa
inc
push
(bad)
lock
fyl2x
rcr
add
mov
or
inc
out
jb
mov
add
add
adc
and
jp
mov
inc
jmp
cs
pop
enter
inc
js
sub
inc
dec
pop
or
aas
xor
imul
or
(bad)
push
movs
cmp
retf
sbb
cmp
(bad)
xor
add
shl
sub
iret
add
jo
add
add
or
outs
inc
pop
xchg
push
loopne
mov
fs
mov
add
push
adc
adc
dec
sbb
enter
cmp
add
je
add
rol
dec
add
cwde
push
xor
add
arpl
xor
dec
imul
add
iret
cmp
rcr
retf
xchg
mov
sbb
out
outs
inc
cmps
cmp
mov
mov
adc
mov
push
push
and
ret
(bad)
jns
ins
(bad)
cmc
and
cld
inc
jae
adc
add
je
or
test
outs
add
jecxz
xor
and
pushf
add
lds
or
cmp
cmp
into
ins
sbb
gs
push
add
and
aad
sub
or
xor
sbb
sbb
iret
fbld
retf
fbld
pop
inc
pop
lahf
mov
push
popa
scas
sub
inc
std
fwait
xchg
pop
pop
nop
loopne
ja
cwde
aam
push
imul
push
aam
nop
pop
adc
clc
and
mov
add
pop
pop
push
ins
push
sbb
or
dec
xchg
push
punpcklbw
out
cs
and
add
xchg
mov
xor
sbb
nop
push
jns
sub
add
test
jmp
(bad)
xlat
pop
add
jbe
add
add
call
imul
push
and
ins
dec
dec
stos
or
ss
push
push
xchg
jmp
pop
pop
hlt
push
into
imul
fwait
and
or
adc
inc
leave
mov
or
test
add
pop
push
enter
js
call
mov
cmp
adc
add
clc
sahf
out
call
jns
out
mov
iret
repz
mov
iret
repz
mov
repnz
inc
out
sahf
out
xor
sbb
loopne
lahf
adc
in
lock
out
or
call
rcr
sar
out
je
push
cmp
out
sahf
out
and
adc
iret
repz
add
in
hlt
in
in
mov
repz
mov
xchg
repz
jnp
mov
js
push
inc
into
out
fisubr
and
or
jmp
or
(bad)
and
adc
scas
and
shr
push
div
and
ins
push
mov
jo
adc
hlt
out
loop
pop
adc
shl
add
push
nop
mov
xchg
daa
data16
test
push
aaa
cpuid
mov
rol
jbe
inc
and
or
aad
sbb
mov
mov
ss
fs
inc
dec
pop
or
add
mov
mov
or
add
xor
daa
(bad)
push
ret
scas
sub
iret
inc
sub
xor
movs
pop
sbb
sub
adc
adc
xor
fbld
mov
push
pop
jo
add
in
bound
cmp
cmp
adc
jo
xchg
push
adc
and
outs
or
mov
xor
cmp
ins
mov
ins
(bad)
sub
xchg
cmp
ins
cs
and
scas
push
xor
xor
ds
je
pusha
inc
adc
mov
retf
cs
fwait
xor
jae
jecxz
pop
imul
pop
cmp
imul
sbb
cmp
outs
add
and
and
inc
add
jb
add
jae
or
popa
ins
into
dec
push
ins
fiadd
(bad)
shr
scas
div
fcomp
sbb
inc
add
sbb
pop
adc
(bad)
(bad)
push
fcmovbe
add
les
(bad)
xor
sbb
bound
loopne
sbb
das
xor
xor
xor
xor
(bad)
(bad)
dec
xor
xor
xor
xor
movs
xor
xor
xor
xor
xor
xor
xor
xor
(bad)
(bad)
(bad)
fbstp
xor
xor
dec
xor
xchg
shl
inc
ss
ss
(bad)
push
add
es
dec
aaa
push
aaa
mov
iret
aaa
call
aaa
adc
dec
(bad)
(bad)
(bad)
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
(bad)
(bad)
cmp
mov
cdq
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sar
(bad)
cmp
cmp
sub
ret
add
push
lock
idiv
(bad)
jmp
or
xor
xor
push
xor
xor
das
clc
jmp
js
popf
xor
xor
(bad)
xor
xor
xor
xor
lock
push
mov
xor
xor
xor
xor
out
xor
lock
jb
jge
mov
xor
xor
fidiv
scas
xor
es
push
fnsave
out
xor
loopne
(bad)
call
jno
cdq
ss
ss
ss
aaa
sbb
jno
mov
aaa
loopne
and
out
cmp
pop
cmp
outs
cmp
cmp
(bad)
(bad)
(bad)
jmp
cmp
cmp
cmp
cmp
push
cmp
jl
cmp
mov
clc
retf
cmp
cmp
push
adc
cmp
cmp
cmp
cmp
pop
cmp
cli
jmp
imul
cmp
cmp
sahf
(bad)
(bad)
(bad)
inc
ds
test
mov
aas
adc
xor
inc
aas
popa
aas
cmp
aas
mov
les
pop
add
into
aas
out
jmp
repz
and
xor
xor
xor
xor
jl
mov
mov
xor
(bad)
(bad)
(bad)
std
xor
xor
xor
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
(bad)
jg
xor
inc
inc
xor
pop
xor
jo
xchg
xor
xor
jmp
xor
xor
xor
xor
xor
xor
xor
das
mov
push
sub
ss
clc
loop
cmp
cmp
cmp
mov
(bad)
(bad)
(bad)
(bad)
mov
cmp
cmp
cmp
cmp
mov
xchg
cmp
cmp
cmp
cmp
sbb
cmps
bound
aas
ja
pusha
pop
cld
dec
mov
xor
pop
xor
inc
push
push
xor
xor
xor
xor
xor
xor
xor
aas
clc
mov
xor
xor
call
lahf
push
xor
xor
xor
test
mov
mov
nop
xor
out
(bad)
jmp
in
xor
scas
clc
xor
cmp
pop
(bad)
(bad)
push
lods
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
icebp
jg
lds
in
in
cmp
cmp
std
cmp
cmp
inc
jno
adc
sbb
cmp
cmp
loopne
cmp
ds
aas
jmp
call
jle
xor
xor
mov
ss
ss
xchg
cmp
cmp
fcomip
jmp
mov
mov
mov
cmp
cmp
cmp
cmp
mov
ja
call
cmp
(bad)
jg
aas
dec
aas
push
mov
cmp
aas
sar
aas
in
out
out
sti
inc
xchg
cmps
jo
and
xor
add
or
jg
xor
xor
xor
fisubr
xor
cli
(bad)
(bad)
aas
loop
xor
xor
xor
mov
xor
xor
(bad)
dec
shl
ss
add
or
aaa
(bad)
inc
and
aaa
dec
aaa
dec
aaa
push
aaa
pop
aaa
imul
dec
mov
xchg
aaa
mov
aaa
xor
cmp
xchg
outs
cmp
jecxz
inc
cmp
push
mov
cmp
cmp
sbb
push
cmp
cld
jg
lods
inc
cmp
dec
cmp
popa
cmp
cmp
cmp
(bad)
aas
cld
aas
push
stos
cmp
cmp
or
cmp
cmp
cmp
cmp
cmp
(bad)
push
es
bnd
adc
sub
xor
cmp
(bad)
call
adc
inc
cmp
push
cmp
pop
cmp
jb
js
cmp
mov
(bad)
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
fisttp
xor
cmp
pop
cmp
mov
jmp
(bad)
call
cmp
cwde
ds
ds
ds
out
ds
das
aas
cmp
push
(bad)
(bad)
aas
je
jge
mov
movs
aas
stos
aas
mov
mov
test
cmc
int
push
xor
ins
stos
call
sahf
xchg
les
fidiv
in
jg
mov
xor
xor
xor
xor
mov
xor
xor
xor
mov
mov
xor
xor
mov
jl
cmps
xor
xor
fild
xor
xor
xor
xor
cmps
push
xor
pop
cmps
xor
cmps
xor
xor
aaa
fwait
sahf
cmps
cmp
mov
cmp
bound
scas
cmp
sbb
jp
cmp
fdivr
aaa
cmp
mov
cmp
cmp
mov
lods
inc
cmp
cmp
cmp
aas
sub
xor
push
or
add
(bad)
jg
pop
xor
xor
bound
data16
push
outs
aaa
jb
jbe
xchg
ja
(bad)
(bad)
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jle
nop
sar
mov
sbb
ds
xchg
cs
lahf
xor
xchg
aas
push
mov
jecxz
lock
(bad)
mov
xor
xor
xor
pop
mov
ss
fiadd
aaa
ret
sub
(bad)
jmp
repnz
or
cmp
pop
cmp
jge
(bad)
push
cmp
cmp
cmp
jbe
xchg
cmp
cmp
cmp
(bad)
(bad)
out
sbb
cmp
cmp
fdivr
push
aas
jne
call
add
mov
add
mov
shl
xor
dec
or
outs
js
mov
xor
div
pop
xor
(bad)
call
adc
es
dec
ss
outs
not
ss
inc
ss
and
cmp
cmp
cmp
mov
pop
mov
sbb
cmp
pop
test
inc
pop
push
imul
cmp
test
mov
jmp
or
cmp
dec
cmp
cmp
(bad)
jmp
cmp
cmp
cmp
jp
mov
cmp
cmp
pop
sar
or
adc
cmp
mov
(bad)
jmp
pop
and
push
cmp
cmps
ds
ds
ret
idiv
add
sbb
cmp
test
addr16
loope
rol
jmp
mov
push
xor
aad
out
(bad)
(bad)
call
cmp
or
xor
xor
xor
xor
xor
mov
xor
call
ss
call
ds
dec
aaa
pop
aaa
js
mov
stos
inc
aaa
out
in
aaa
cli
aaa
mov
cmp
mov
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
call
(bad)
cmp
cmp
cmp
adc
jbe
cmp
cmp
cld
(bad)
inc
cmp
adc
and
pusha
aas
cmp
aas
fdivr
loop
out
out
lds
pop
pop
rcl
sub
jne
cli
call
loop
xor
xor
jg
xchg
xor
xor
xor
sub
sub
cld
xor
xor
jmp
jbe
loopne
adc
adc
sbb
(bad)
(bad)
push
sbb
sub
sub
nop
cmp
mov
cmp
cmp
cmp
cmp
cmp
aaa
(bad)
jnp
jmp
cmp
jg
loope
aaa
into
cmp
inc
xor
and
xor
xor
jl
call
dec
lods
xor
int3
fld
hlt
das
mov
xor
xor
xor
loopne
int3
xor
cmp
sub
sub
xor
cmp
inc
cmp
inc
cmp
cmp
xor
(bad)
call
cmp
jl
cmp
cmp
push
mov
push
mov
enter
pop
loopne
mov
cmp
cmp
mov
cmp
inc
lock
rcl
aad
hlt
dec
cld
push
add
or
adc
mov
cmp
cmp
sub
sub
xor
(bad)
clc
add
cmp
inc
cmp
cmp
pop
cmp
dec
push
cmp
cmp
mov
nop
xchg
cwde
jg
(bad)
lods
mov
sub
xor
inc
mov
push
aas
push
lock
aas
test
xchg
aas
cwde
aas
lods
aas
mov
shr
aas
fdivr
loopne
clc
aas
std
ds
adc
pop
bound
ret
sub
xor
xor
inc
xor
xor
cwde
xor
xor
enter
cmp
adc
pop
xor
mov
mov
(bad)
fbstp
inc
xor
and
add
outs
mov
fimul
xor
(bad)
ss
sahf
dec
dec
shl
aam
fdiv
fdiv
loopne
in
call
ss
ss
ss
das
sar
add
or
or
adc
adc
aaa
sbb
and
and
sub
sub
inc
call
pop
xor
cmp
cmp
inc
aaa
inc
aaa
dec
jb
aaa
push
aaa
pop
aaa
pop
aaa
pusha
das
ret
aaa
jo
je
jl
xor
aaa
mov
nop
aaa
xchg
aaa
mov
into
mov
dec
mov
mov
(bad)
inc
mov
aaa
enter
shl
aam
fdiv
fsub
adc
lock
hlt
xor
xchg
mov
add
or
adc
adc
sbb
cmp
or
cmp
fdivr
call
mov
cmp
pop
sahf
sti
push
jg
cmp
cmp
cmp
sub
cmp
cmp
cmp
cmp
loopne
add
cmp
je
jl
test
(bad)
push
mov
mov
cmp
mov
mov
cmp
call
push
adc
jmp
sti
andnps
push
movs
movs
fs
retf
in
fisttp
lods
pop
push
aaa
cmps
punpcklbw
icebp
push
fnstenv
std
std
repz
aaa
stos
mov
push
retf
aaa
jmp
gs
fadd
(bad)
stc
push
aaa
mov
(bad)
dec
push
adc
out
push
xor
mov
test
loope
add
cmps
repnz
cmp
push
test
ins
add
push
add
daa
out
pop
inc
or
test
(bad)
out
add
jns
inc
push
push
mov
push
add
ins
(bad)
in
fisub
sbb
or
adc
sub
shr
pusha
sub
cmp
push
pop
rcr
sbb
push
out
add
sub
inc
add
inc
jno
push
sub
push
sbb
sub
ret
or
scas
aas
inc
mov
add
dec
mov
mov
fmul
gs
add
movs
lea
dec
rcl
lahf
mov
jno
sbb
call
fstp
inc
call
div
retf
mov
jbe
cmp
ret
jae
xor
add
jle
cld
(bad)
mov
jl
or
inc
jb
hlt
clc
outs
test
cmps
xor
mov
sub
sub
fs
dec
addr16
test
aam
fdiv
adc
xchg
mov
and
dec
fcmovne
jbe
call
ror
fnsave
add
aaa
pop
sar
sub
mov
cmps
cli
dec
jge
je
mov
push
add
and
sbb
popa
mov
ja
push
mov
(bad)
add
(bad)
or
cli
push
jne
mov
xlat
sar
ret
in
test
add
add
add
pop
shr
jmp
pop
pop
inc
cs
aaa
int3
arpl
pop
std
test
add
retf
cmc
je
movs
repz
xor
call
imul
inc
cmp
jne
imul
inc
pop
std
adc
out
ja
add
adc
push
sbb
fild
mov
(bad)
jp
inc
cmps
sub
inc
and
sub
mov
mov
fnstenv
adc
int
pop
push
add
dec
add
dec
cmp
add
push
pop
and
mov
clc
dec
inc
adc
test
xor
cmp
cs
dec
cmp
inc
or
cmp
and
adc
sub
sub
pop
aas
(bad)
int
test
pop
lds
mov
pop
cmp
and
or
leave
sbb
test
push
pop
adc
pop
ret
mov
dec
ret
jmp
and
test
retf
inc
add
mov
jb
ds
push
adc
sub
fisub
test
sar
mov
push
and
add
or
add
fimul
and
mov
(bad)
jecxz
call
cli
add
fwait
dec
jo
push
xor
cli
or
adc
push
pop
add
mov
adc
and
cmp
add
add
push
pusha
test
mov
adc
push
mov
sub
push
mov
sbb
mov
and
(bad)
jbe
xchg
mov
ja
cmp
or
in
mov
leave
inc
stos
add
mov
dec
sar
xchg
inc
jmp
mov
retf
cmp
cmp
or
fild
xchg
hlt
mov
mov
xor
mov
mov
rol
dec
xchg
stos
call
adc
adc
sub
dec
shl
popa
repnz
adc
inc
jmp
inc
(bad)
adc
inc
and
pmaxsw
or
push
test
dec
call
mov
ret
inc
lahf
sahf
sahf
mov
jmp
cmp
inc
in
inc
mov
test
in
fld
jle
in
mov
pop
cmp
inc
retf
mov
in
mov
test
and
push
sbb
mov
mov
sub
add
ret
push
or
stos
scas
xor
stos
stos
leave
sbb
add
ficom
xchg
pop
pop
add
cmp
or
mov
and
and
(bad)
mov
leave
jp
push
adc
mov
push
enter
push
sbb
inc
inc
and
dec
sub
inc
pop
push
adc
sbb
addr16
mov
cli
sbb
and
dec
sbb
pop
xor
(bad)
cmp
adc
sbb
call
fwait
adc
mov
fmul
mov
adc
or
(bad)
adc
jne
pop
sahf
jbe
or
cmp
mov
and
pop
cmovns
(bad)
(bad)
jge
and
pop
call
push
dec
push
cwde
cs
test
pop
inc
jbe
and
push
test
sbb
jmp
jmp
jmp
add
daa
fsubr
push
jbe
fimul
xchg
or
ds
test
xor
push
add
sub
sub
mov
inc
and
and
jbe
and
or
fwait
stc
adc
aaa
add
adc
gs
bound
ins
add
push
adc
loope
lds
ret
sbb
xor
pop
mov
sbb
adc
push
add
push
gs
dec
add
mov
rcr
pop
sbb
and
retf
scas
or
push
or
or
retf
add
adc
add
dec
or
cmp
out
or
stc
add
inc
fimul
aad
sbb
mov
in
out
cmp
es
xor
add
add
dec
out
fld
sbb
and
ds
add
movs
add
mov
inc
(bad)
ror
cmp
sbb
fstp
mov
jp
dec
call
or
mov
jecxz
rol
(bad)
ss
pop
pusha
fstp
fisub
add
adc
jg
daa
adc
pop
nop
and
ins
jbe
add
and
cmp
mov
nop
push
and
es
add
outs
add
stos
xchg
mov
dec
fld
mov
repz
or
push
ins
fs
push
dec
sub
retf
cmp
xlat
loopne
add
(bad)
jmp
gs
mov
addr16
test
push
sub
retf
push
push
neg
and
into
jnp
mov
nop
inc
push
fs
mov
add
or
sub
mov
xchg
xchg
addr16
sbb
jns
push
call
shl
rol
or
and
nop
add
inc
cmp
retf
cmp
or
push
addr16
sub
jmp
mov
cdq
jle
test
in
and
and
pop
xor
push
pop
fs
daa
and
mov
xor
test
hlt
addr16
xchg
mov
fs
ds
pop
xchg
push
stc
adc
jno
call
adc
mov
or
and
shl
stos
aad
push
jnp
cmps
ret
or
xor
or
sbb
cmp
xchg
or
daa
daa
es
es
daa
cs
add
daa
daa
imul
or
inc
shl
sbb
xchg
sub
dec
call
or
add
jae
sub
sub
sub
sub
sub
sub
sub
mov
dec
test
cmp
mov
or
sbb
inc
pusha
push
sub
adc
dec
sub
and
sub
stos
cdq
shl
out
xor
adc
addr16
inc
inc
ja
inc
sbb
imul
cmc
push
lock
gs
movs
jp
or
clc
fs
dec
sbb
cmp
sbb
nop
inc
inc
adc
nop
or
call
mov
test
dec
mov
push
lods
sar
jg
and
mov
div
mov
push
or
rcr
push
sub
sub
pop
es
jo
jle
sub
in
movhpd
in
nop
adc
frstor
ds
or
iret
jns
test
or
adc
jmp
cmp
sahf
xchg
test
xor
sub
or
out
inc
cmp
cmp
inc
add
jmp
in
push
addr16
adc
out
sub
call
mov
shl
and
cdq
mov
nop
out
mov
jp
repnz
rcl
mov
xor
scas
pop
mov
mov
adc
xchg
cmps
cld
add
cmp
pusha
cdq
sub
sbb
jge
loope
cdq
inc
mov
stos
sbb
cwde
pop
push
call
es
retf
loop
cli
cwde
rol
inc
mov
adc
(bad)
cdq
fs
outs
add
inc
bound
ficomp
xor
cdq
push
xor
pop
and
push
adc
into
push
cdq
pop
sbb
mov
or
cdq
or
adc
pusha
sub
sbb
test
add
enter
adc
pop
in
sbb
ret
mov
add
and
push
cmc
(bad)
inc
mov
xchg
adc
inc
push
imul
shl
test
test
inc
adc
aam
add
movs
inc
popf
mov
xor
push
jne
dec
adc
push
ja
inc
adc
jo
test
retf
add
mov
xchg
cmp
and
pop
xchg
add
adc
pop
push
inc
in
dec
mov
rol
lods
rol
sbb
(bad)
pop
cmp
sub
xor
movs
inc
mov
inc
or
push
jne
movs
adc
adc
xchg
adc
pop
loopne
sub
push
imul
mov
mov
mov
gs
rcl
adc
(bad)
adc
adc
adc
addr16
xchg
push
cmc
add
retf
loopne
mov
pop
test
test
adc
or
push
pop
add
inc
call
stos
or
or
sub
adc
inc
xchg
cwde
fs
test
sbb
mov
pop
aam
sub
and
inc
or
aam
add
pop
push
pop
adc
push
mov
mov
and
add
and
inc
or
ins
and
or
mov
adc
icebp
mov
pop
rol
and
dec
cmp
dec
ja
adc
jbe
ror
daa
(bad)
in
scas
pop
test
cs
rcr
push
nop
push
call
pop
push
add
enter
add
inc
pop
inc
or
sbb
nop
outs
and
cwde
add
je
push
les
or
nop
pop
mov
inc
pop
push
pop
inc
jp
popa
mov
dec
push
or
loope
into
or
mov
ds
jnp
nop
out
mov
pop
loope
sub
cmp
xor
shl
push
mov
inc
xor
jmp
xor
xor
sbb
xor
xor
xor
cmp
inc
pop
xor
xor
inc
dec
dec
inc
dec
cmps
mov
pop
cmp
and
or
mov
rcr
push
call
cmp
jo
xchg
dec
pop
dec
adc
addr16
fdivr
fdiv
lds
pop
movs
jnp
dec
stos
(bad)
loop
bound
add
pop
or
(bad)
jno
push
fld
xor
pushf
sbb
sbb
fidiv
nop
ror
movs
add
aam
cmp
and
adc
cmps
or
mov
sbb
cmp
ja
mov
inc
and
aas
lock
jl
nop
cdq
aad
(bad)
xor
pop
add
pop
xor
mov
add
mov
cmp
(bad)
add
retf
or
xor
sub
xchg
dec
enter
xlat
push
xor
aas
add
cmps
test
lods
or
mov
fstp
loop
nop
push
xor
fmul
fadd
mov
sbb
pop
repnz
dec
mov
mov
or
sub
ins
retf
pop
sub
add
fdiv
fadd
ins
push
mov
mov
retf
call
cs
jecxz
push
ret
out
call
enter
fadd
les
push
mov
sahf
mov
ror
add
and
add
mov
test
and
idiv
inc
mov
xor
sbb
pop
and
adc
sbb
add
bound
add
sbb
lahf
daa
retf
sbb
fs
or
inc
sub
and
pushf
jbe
mov
test
sbb
das
adc
seto
sbb
enter
mov
and
sub
adc
inc
daa
in
xor
or
rcr
or
push
daa
sub
push
inc
add
or
daa
xchg
shr
or
jnp
mov
fwait
rol
add
and
jmp
loopne
cwde
cmp
rcr
(bad)
adc
lea
mov
repnz
xlat
xor
or
mov
pop
inc
cdq
aas
ret
mov
xor
add
cdq
call
push
cld
mov
leave
jo
push
inc
jmp
lea
nop
push
inc
ret
mov
push
repnz
fisttp
cmps
in
mov
mov
rol
and
test
jmp
inc
sahf
mov
cld
loope
and
mov
gs
xchg
lahf
mov
mov
cmc
jle
add
push
xchg
gs
inc
repz
repnz
add
sub
das
je
sbb
inc
pop
jo
daa
inc
cmps
xchg
inc
lea
shl
inc
add
adc
cmps
and
dec
mov
or
adc
sub
outs
cwde
inc
adc
call
push
sbb
popa
pop
and
mov
sbb
jnp
sbb
cmc
stos
jle
pop
leave
fcomi
jmp
add
ret
call
cmc
pop
jnp
ret
test
hlt
je
and
dec
jge
and
subps
ret
ds
shr
xchg
js
jl
xor
or
inc
and
push
mov
hlt
xchg
cmp
push
inc
inc
icebp
xchg
xor
mov
nop
push
adc
and
push
retf
inc
jl
jl
sbb
or
sub
shl
and
cmp
mov
inc
pop
adc
or
sbb
inc
push
test
cli
arpl
leave
pop
lds
icebp
shl
loope
jne
xchg
pop
scas
or
inc
fbld
mov
fild
cmc
inc
push
dec
push
adc
fistp
and
mov
in
push
fwait
pop
pushf
xchg
pop
xchg
inc
aad
dec
mov
jp
push
xor
mov
mov
lahf
jae
cmp
xor
cwde
out
and
mov
(bad)
es
fdiv
daa
mov
xchg
or
mov
mov
adc
popa
mov
xchg
ss
xor
xor
lwpval
and
aam
(bad)
xchg
cmp
aam
aam
fldenv
sar
sbb
rcl
dec
arpl
xchg
or
cmc
rcr
or
xchg
adc
nop
xchg
adc
adc
cmp
mov
rol
inc
cs
fs
dec
seta
mov
fnsave
les
push
inc
xchg
mov
outs
fild
rcr
xor
xchg
and
xor
xchg
mov
jmp
cwde
sub
mov
(bad)
ror
xchg
ret
fs
xchg
leave
rol
pop
lods
and
or
jmp
pop
pop
cmp
call
cwde
sub
xor
add
and
dec
dec
jl
stos
retf
xchg
inc
inc
test
movs
icebp
jnp
in
add
outs
rcl
push
jne
jb
jo
xchg
imul
jmp
jb
pop
adc
rcl
sub
in
ds
add
sahf
iret
inc
xchg
(bad)
aaa
mov
loope
clc
mov
mov
int3
leave
call
mov
mov
mov
dec
out
das
push
in
mov
add
pop
ins
push
hlt
push
cmc
fxch
(bad)
mov
inc
ss
mov
push
inc
cmp
rcl
inc
and
cld
dec
inc
mov
mov
fld
cmps
lods
aam
push
inc
inc
or
(bad)
xchg
adc
cmps
pusha
and
in
lods
dec
push
fild
pop
mov
cmps
push
add
addr16
push
and
ret
call
loop
call
push
(bad)
fcmovne
add
inc
enter
sbb
clc
outs
(bad)
xchg
or
and
fucomi
nop
test
push
sub
leave
mov
push
xchg
mov
dec
push
pop
pop
and
fisttp
adc
leave
dec
push
fist
mov
fistp
pop
mov
(bad)
sbb
ret
pop
sbb
add
xor
fild
fisttp
(bad)
xchg
mov
mov
cmp
or
rcr
dec
push
aaa
lods
sub
daa
sub
fdiv
jmp
mov
jns
adc
sub
rcr
fild
fld
call
jmp
xchg
mov
fist
outs
and
imul
je
daa
mov
jle
dec
or
dec
test
mov
jo
add
xchg
aaa
lea
ret
and
pop
ins
adc
mov
cmps
mov
in
adc
leave
sar
lock
sbb
adc
sub
xor
int3
jns
add
push
mov
retf
add
inc
mov
mov
and
or
add
in
mov
in
fdivr
cmp
retf
retf
les
test
jns
mov
mov
cmp
jns
popa
mov
dec
mov
inc
mov
and
sbb
push
jb
mov
and
cmp
loope
(bad)
mov
sbb
sar
inc
push
jb
mov
in
das
cmp
jo
gs
pop
mov
cmp
inc
push
cmp
sbb
and
sbb
push
jb
xor
in
mov
enter
retf
mov
in
mov
cmps
mov
nop
mov
and
cmp
jnp
jo
gs
pop
mov
enter
cmp
and
cmp
mov
jb
sbb
jmp
adc
push
sar
add
mov
add
sahf
sbb
imul
adc
movs
xor
mov
jns
call
dec
fcmove
in
or
inc
adc
adc
sbb
imul
data16
sbb
sbb
dec
call
and
sbb
imul
data16
cmp
mov
inc
dec
call
sub
cmp
mov
dec
dec
push
sbb
xchg
push
arpl
cmp
push
adc
add
inc
adc
aam
add
push
adc
xor
or
add
or
js
or
test
rol
cmp
jb
dec
repnz
adc
push
mov
or
or
add
ret
push
test
fadd
inc
push
mov
imul
test
test
pop
icebp
(bad)
pusha
mov
mov
sub
rol
xor
or
sbb
mov
xchg
cmps
push
test
add
and
mov
mov
mov
cwde
xchg
xchg
cmp
mov
push
mov
dec
je
push
ror
or
lea
pop
xor
inc
pop
mov
pop
xor
movs
gs
hlt
jp
xchg
psrlw
mov
bswap
xor
xchg
adc
push
xchg
in
adc
mov
xchg
ficomp
sbb
mov
scas
inc
pop
pop
jbe
push
lea
xchg
push
ret
fimul
mov
pop
sar
mov
ret
sub
push
sbb
ror
retf
xor
xchg
fdiv
mov
scas
psllq
and
push
xchg
push
inc
xor
mov
imul
addr16
xchg
sbb
dec
jmp
sub
test
add
js
sbb
sub
and
call
xchg
and
sbb
int3
dec
in
push
push
retf
iret
scas
dec
mov
fdiv
and
sbb
xchg
movs
or
sub
jno
iret
dec
mov
adc
inc
xchg
or
int3
fs
xchg
or
mov
sub
or
pusha
shr
sar
adc
pop
or
mov
cmp
or
int
or
push
inc
jo
scas
push
dec
sbb
sub
call
mov
inc
or
push
or
mov
mov
push
fmul
lock
add
in
mov
fsubr
and
in
mov
and
gs
(bad)
xchg
nop
cmp
or
out
cmp
call
inc
movs
sub
adc
push
xchg
push
and
jnp
jp
sub
ins
sbb
pop
sbb
adc
movs
cmp
(bad)
or
adc
adc
mov
movs
sub
pop
or
sbb
mov
and
js
dec
pop
mov
or
and
sub
push
add
jno
xchg
mov
or
(bad)
or
dec
rcpps
mov
inc
or
fwait
and
retf
sbb
or
mov
int3
mov
(bad)
mov
push
dec
xchg
or
shl
ss
sub
js
je
nop
push
movs
sub
imul
dec
add
rcr
or
sub
inc
outs
sub
je
imul
xchg
mov
pop
xchg
mov
loopne
mov
xlat
inc
icebp
add
(bad)
lock
sub
mov
retf
inc
or
mov
xor
or
(bad)
aad
xchg
or
xchg
popa
xor
xchg
pusha
and
xor
je
xchg
mov
push
push
dec
dec
xchg
mov
mov
and
mov
mov
sub
or
inc
sub
jns
xchg
and
dec
pop
mov
inc
sub
inc
or
rcr
enter
cmps
imul
or
inc
sbb
stos
rcr
sub
mov
gs
inc
pushf
or
sub
ret
mov
lock
xor
dec
mov
xor
xchg
movs
sti
push
or
movs
xchg
popf
ja
mov
adc
jp
movs
sub
pop
sahf
dec
cmps
dec
pop
or
movs
sub
test
pop
rol
push
pop
movs
sub
loop
and
into
dec
shr
jne
or
jb
or
xchg
cwde
mov
inc
push
or
or
dec
inc
sub
dec
dec
pop
cmp
or
push
push
scas
or
cmp
(bad)
repnz
or
dec
aaa
fwait
adc
xchg
and
gs
jmp
or
or
xlat
add
les
sub
mov
mov
or
push
retf
in
mov
rol
retf
xchg
or
pop
or
add
push
sub
xlat
inc
es
sub
loope
mov
loope
mov
and
in
shl
mov
pusha
fst
imul
aaa
aaa
adc
sub
cmps
test
fs
cdq
jmp
push
das
mov
and
sub
mov
mov
jmp
fstp
mov
and
lods
in
xor
or
loopne
mov
mov
dec
ja
cmps
mov
retf
push
and
and
xor
adc
mov
mov
mov
dec
push
push
mov
cli
sahf
arpl
movs
cmps
js
sbb
int
mov
pop
repz
repz
push
sub
mov
int3
fadd
sbb
jns
out
ss
push
pop
outs
out
sahf
out
xchg
test
enter
sahf
fdiv
outs
or
push
ds
out
sahf
out
jb
mov
int3
out
push
stos
adc
repz
cmp
repz
repz
test
into
cmp
mov
(bad)
push
sbb
xor
cmp
repz
pop
ins
add
cmps
add
push
adc
cmp
ja
cmp
lods
data16
ds
lea
ret
push
add
cmp
mov
sbb
push
push
mov
dec
sbb
mov
add
fwait
out
push
push
clc
mov
mov
xor
xchg
mov
add
inc
adc
sahf
sar
clc
mov
mov
or
add
cmp
mov
push
adc
push
adc
jns
(bad)
das
xchg
sbb
sbb
xchg
repz
sbb
or
fidiv
sub
pop
jl
sar
and
and
repz
sar
jns
jp
jns
out
cmp
les
out
add
sub
dec
call
dec
inc
outs
adc
test
cdq
test
and
push
cmp
out
sub
adc
add
cmp
repz
xchg
in
loopne
fmul
repz
ror
enter
cmp
repz
mov
movs
mov
pushf
cwde
xchg
nop
mov
repz
mov
iret
repz
ins
push
iret
repz
pop
push
push
dec
iret
repz
dec
inc
inc
cmp
xor
iret
repz
sub
adc
jns
out
add
nop
fmul
test
jns
out
push
repz
call
pusha
push
cmp
repz
inc
xor
or
cmps
stc
cld
mov
shl
out
cmp
(bad)
int3
data16
cmp
test
push
xor
jg
inc
out
test
jle
mov
add
das
mov
leave
mov
xchg
inc
adc
je
push
add
aas
push
xchg
mov
aaa
xor
push
push
add
into
mov
and
dec
xchg
push
push
test
mov
jne
jl
or
shl
jbe
adc
pop
ror
popf
out
out
jo
mov
jo
push
xchg
add
and
aas
imul
xchg
in
mov
mov
daa
test
iret
xlat
push
mov
mov
push
inc
add
mov
adc
mov
mov
jg
pop
cmp
inc
int
mov
pop
(bad)
shl
jbe
push
mov
cmp
sar
sbb
mov
mov
add
push
xchg
aas
in
dec
enter
shr
inc
es
aaa
inc
pop
shr
inc
in
dec
xchg
xchg
push
pushf
bound
fisttp
dec
sar
(bad)
inc
cmp
or
inc
cmp
mov
dec
pop
xor
aas
repnz
es
push
int3
push
push
es
and
fsub
mov
inc
test
movs
fisttp
mov
pop
fimul
ret
imul
jno
test
sub
xchg
jl
imul
aas
inc
inc
push
sahf
pushf
add
int
adc
pop
xor
shl
cmp
pop
stos
outs
cs
outs
in
enter
inc
outs
ds
outs
gs
out
movs
add
movs
pop
mov
or
je
shl
or
jbe
fsub
imul
jbe
sub
add
scas
inc
aaa
mov
jne
dec
mov
push
arpl
test
add
outs
and
ins
test
arpl
xchg
jmp
retf
add
inc
mov
sbb
sbb
mov
cs
fwait
or
and
or
sbb
out
xchg
xor
dec
dec
add
adc
jo
sub
shl
pop
sub
mov
add
push
pop
adc
cmp
inc
and
addr16
adc
or
je
sbb
xlat
daa
arpl
xor
xchg
and
lahf
adc
adc
inc
add
sbb
arpl
rcr
rcl
inc
inc
arpl
daa
shl
rol
ror
inc
jae
rcr
jo
lahf
pop
jno
sbb
xor
shl
(bad)
lds
adc
dec
adc
scas
pop
add
inc
(bad)
rcr
jo
pop
inc
push
imul
shl
or
cmp
xchg
popa
add
add
ja
stos
loop
mov
outs
inc
int
xor
push
xor
mov
sbb
pusha
pop
inc
xchg
movs
xchg
cmp
repz
push
pushf
cwde
xchg
nop
repz
repz
jns
pop
push
pop
dec
inc
inc
cmp
sahf
out
cmp
sub
out
sahf
out
and
adc
inc
ss
add
xchg
hlt
xchg
in
push
in
sahf
out
sahf
(bad)
enter
jno
out
test
mov
sub
push
fs
jnp
pop
push
dec
mov
push
and
ja
out
add
in
xchg
push
enter
out
mov
iret
jnp
out
mov
daa
iret
repz
inc
cmp
cmp
out
push
adc
lock
loopne
repz
repz
inc
inc
xor
pop
outs
or
out
pop
sub
loope
jmp
inc
xor
mov
neg
mov
jne
pop
adc
push
rol
cs
adc
cmp
push
pop
cs
clc
mov
mov
jg
cld
pop
enter
or
call
xchg
sub
xor
inc
push
ret
aas
fild
xchg
add
adc
jns
add
cmp
call
fnstenv
fiadd
sti
inc
xor
rcr
xor
xor
cmps
dec
sar
dec
cmp
ss
ss
nop
ss
test
icebp
aaa
sub
ss
jg
ja
sbb
cmp
cmp
aas
cmp
fstp
push
ret
icebp
cmp
xchg
push
es
retf
cmp
cmp
cmp
int
dec
test
ret
mov
cmp
add
adc
xor
cmp
cmp
push
jmp
enter
aad
fmul
jmp
ds
aas
(bad)
pop
aas
and
sub
xor
aaa
into
jmp
popa
(bad)
push
data16
jbe
jnp
cmp
loopne
xor
movs
aas
mov
sar
div
dec
add
inc
fistp
jl
xchg
cmps
mov
xor
add
xor
rcr
xor
xor
mov
mov
xor
xor
into
das
xor
fadd
scas
cmp
xchg
mov
cmp
xor
inc
rcr
add
xor
xor
jmp
outs
cmp
mov
pushf
xor
xor
xor
xor
xor
or
jmp
xor
xor
xor
dec
mov
ss
mov
ss
lods
ss
push
sbb
xchg
mov
pop
ret
loop
cmp
cmp
add
out
xchg
cmp
xchg
sar
das
xor
mov
sub
(bad)
aaa
leave
clc
xor
xor
cmp
(bad)
cmp
cmp
sar
push
outs
cmp
cmp
shl
aaa
mov
cmp
cli
outs
cmp
popa
cmp
cdq
idiv
adc
clc
fdivr
in
cmp
dec
push
add
ja
jle
test
push
mov
inc
(bad)
cmp
hlt
cmp
inc
ds
ds
ds
and
(bad)
(bad)
jg
cwde
xchg
xor
xor
xor
xor
(bad)
loope
xor
push
xor
(bad)
push
std
xor
xor
xor
xor
inc
lds
xor
xor
sub
mov
repnz
dec
ss
bound
xor
ss
es
or
ss
jecxz
cmp
ss
ss
aaa
or
push
add
fbld
push
xor
aaa
addr16
push
sar
adc
push
cmp
push
out
xchg
jno
cmp
(bad)
pop
cmps
test
mov
mov
dec
sar
fdivr
cmc
outs
push
in
jmp
repz
cmp
cmp
cmp
jg
cmp
cmp
pop
push
jecxz
dec
sbb
jno
jns
jle
xchg
mov
xchg
outs
sbb
dec
lahf
cmp
push
add
push
add
ins
outs
sbb
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
push
push
jno
mov
push
mov
pop
shr
jg
mov
inc
cmp
aas
ret
aas
iret
arpl
sbb
ds
js
xor
into
xor
(bad)
call
lea
xchg
xor
xor
xor
xor
xor
(bad)
(bad)
clc
or
xor
jo
in
pop
xor
xor
bound
(bad)
fld
or
cmp
ins
and
jmp
ret
xor
xor
adc
push
fs
aad
ss
ss
arpl
stos
add
ss
ss
add
sbb
outs
adc
jne
jle
sbb
pop
dec
sbb
sub
ret
clc
in
cmp
cmp
cmp
cmp
cmp
cmp
or
cmp
cmp
aas
cs
dec
cmp
arpl
outs
ret
gs
cmp
cmp
scas
in
inc
or
pop
adc
or
cmp
sub
mov
leave
clc
aas
push
fbstp
div
data16
mov
ss
xor
xor
xor
xor
xor
(bad)
fbld
sbb
xor
xor
xor
xor
xor
xor
(bad)
(bad)
(bad)
push
xor
xlat
xor
ja
mov
pushf
ss
mov
push
add
into
and
xor
leave
test
pop
loop
cmp
pop
cmp
call
cmp
mov
jmp
std
cmp
mov
ds
imul
mov
retf
aas
inc
xor
jl
jecxz
or
xor
or
out
sub
jg
cmp
cmp
dec
cmp
pop
cmp
pop
jno
outs
cmp
xor
xor
xor
xor
xor
xchg
(bad)
neg
pop
ucomiss
or
pop
dec
es
xor
mov
dec
add
arpl
pop
popa
icebp
adc
pusha
out
xor
xor
mov
push
je
js
sbb
jae
ret
popa
cld
or
test
pop
sbb
jb
inc
daa
mov
mov
ror
mov
mov
dec
int3
inc
fcomp
in
xor
add
cmp
push
int3
xchg
sbb
mov
mov
jb
out
ret
sbb
gs
mov
cmps
test
mov
sub
lds
loopne
inc
sub
fsubrp
(bad)
xor
(bad)
out
xor
or
or
adc
adc
sbb
sbb
adc
dec
jbe
xor
mov
adc
push
gs
inc
aaa
xchg
pop
xor
xor
xor
pop
sub
je
jl
or
xor
xor
ror
xor
les
retf
xor
xchg
inc
add
xor
nop
push
jbe
xor
dec
call
jo
jbe
push
xor
outs
jo
std
or
xor
cmp
cmp
cmp
mov
mov
fdivr
pusha
xor
cwde
out
push
loopne
or
adc
sbb
sub
or
xor
xor
xor
xor
ss
jge
inc
add
sub
pop
cwde
fs
hlt
xor
xor
dec
xchg
sbb
adc
sbb
xor
(bad)
clc
jmp
sbb
in
call
xor
xor
or
ds
add
loop
adc
pusha
jg
push
sbb
xor
aam
xor
mov
std
inc
xor
xor
xor
push
xor
pop
xor
mov
sar
fs
jo
je
js
jl
and
jg
push
scas
pushf
xor
xor
xor
xor
xor
xor
xor
into
adc
jo
shl
int3
fimul
sbb
sub
xor
xchg
add
sub
mov
fistp
(bad)
outs
sbb
adc
xor
sahf
and
or
(bad)
fdivr
movs
mov
add
inc
inc
pop
and
out
xor
(bad)
(bad)
add
add
mov
add
pop
pop
push
or
or
or
or
or
inc
jp
push
adc
adc
push
adc
les
imul
or
pop
sbb
adc
adc
adc
add
data16
mov
or
rol
loop
adc
pusha
add
pop
mov
adc
add
cmc
add
inc
mov
jb
dec
mov
jge
(bad)
(bad)
inc
cmps
add
push
adc
pop
and
xor
inc
mov
adc
(bad)
shl
and
bound
js
or
leave
nop
xor
and
les
aaa
mov
and
cmps
xchg
adc
dec
popa
mov
nop
xchg
inc
or
adc
rcr
add
add
add
cmp
cmp
inc
lods
push
adc
pop
popa
jno
and
adc
inc
repz
lods
or
xor
adc
sbb
loope
icebp
mov
mov
add
or
push
xor
js
aad
add
jo
or
aaa
cld
pop
adc
adc
sbb
cli
and
mov
inc
jnp
(bad)
(bad)
(bad)
jmp
sbb
and
mov
bound
pop
lahf
mov
movs
jecxz
cli
pop
mov
cs
push
stc
or
xchg
jg
or
push
push
addr16
out
or
(bad)
push
push
xchg
add
repnz
inc
lock
(bad)
(bad)
call
xor
fdivrp
cmp
fisubr
in
mov
or
int3
call
sbb
add
mov
pop
pop
mov
pop
mov
(bad)
(bad)
(bad)
call
adc
adc
mov
xor
lods
scas
xchg
test
aam
and
(bad)
(bad)
jmp
sbb
sar
and
rol
fwait
movs
jmp
push
retf
push
out
in
and
(bad)
stos
lahf
fdiv
aas
repz
cmps
pop
outs
icebp
mov
pop
lock
std
or
pop
mov
(bad)
(bad)
(bad)
jmp
test
aaa
dec
dec
pop
push
(bad)
out
outs
loope
loope
ror
mov
int
arpl
cmps
(bad)
jp
push
out
or
cld
push
push
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sar
xor
(bad)
call
mov
(bad)
(bad)
jmp
sbb
add
xchg
lods
mov
out
pop
jb
mov
or
push
mov
(bad)
call
int
inc
fwait
sbb
mov
dec
jp
push
gs
(bad)
idiv
jg
hlt
push
add
stc
loope
(bad)
mov
sar
and
fstp
adc
icebp
test
mov
(bad)
inc
xor
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
call
icebp
paddb
inc
mov
dec
adc
push
lock
lods
(bad)
(bad)
(bad)
(bad)
jp
test
sbb
into
fcomp
sbb
sbb
into
cmp
fbld
test
loopne
cli
adc
aaa
xchg
in
add
inc
adc
hlt
es
or
icebp
aas
std
cli
push
push
(bad)
jg
je
idiv
cmp
sub
(bad)
inc
scas
inc
mov
jg
cs
(bad)
(bad)
push
dec
mov
mov
scas
call
les
jne
gs
jns
enter
or
mov
(bad)
call
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmps
or
mov
push
xor
jmp
call
pop
hlt
retf
movs
add
(bad)
fild
lea
jg
gs
std
xor
jg
das
sar
aad
adc
ret
(bad)
das
pop
pop
pop
shl
out
sar
sbb
jno
outs
lock
or
sar
std
pop
les
cli
mov
mov
(bad)
(bad)
call
arpl
stos
mov
and
ins
add
leave
push
scas
loop
jge
push
shr
mov
idiv
call
or
adc
and
sbb
xchg
jo
and
out
test
(bad)
(bad)
(bad)
push
push
iret
sti
cmp
ficom
aam
sahf
imul
fcmovnu
ror
ins
stos
arpl
and
xchg
sub
cld
call
js
(bad)
(bad)
(bad)
(bad)
cmp
scas
lods
hlt
cmp
fist
mov
adc
push
movs
xchg
or
mov
stos
mov
lods
xor
cs
cmps
scas
popa
in
pop
or
(bad)
(bad)
jg
xchg
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outs
mov
sbb
jecxz
inc
adc
(bad)
(bad)
push
adc
xchg
and
push
push
jo
pusha
imul
add
mov
(bad)
push
(bad)
cmp
xchg
mov
(bad)
cwde
pop
xchg
ftst
jbe
xchg
and
add
(bad)
(bad)
(bad)
push
shr
shl
out
aas
stc
add
out
gs
jno
fidivr
adc
(bad)
adc
pop
cld
add
adc
and
lock
cmp
fmul
enter
jecxz
scas
inc
(bad)
in
pop
mov
sub
mov
dec
(bad)
inc
fisubr
loopne
sti
lds
mov
(bad)
or
cld
inc
or
bound
repnz
jg
mov
(bad)
aad
jbe
(bad)
test
mov
mov
iret
push
(bad)
out
jbe
push
sbb
stos
icebp
pop
inc
jno
outs
sti
jmp
adc
push
inc
jecxz
sbb
sar
adc
loopne
mov
mov
sar
xor
push
fisubr
imul
dec
push
cmp
jg
in
aas
mov
fsubr
lock
sbb
push
(bad)
and
clc
xchg
call
mov
repnz
and
mov
adc
lahf
or
push
rcr
rol
pop
inc
lds
ret
push
fistp
adc
call
jno
pop
jmp
(bad)
mov
repz
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmps
popf
push
(bad)
jmp
jmp
adc
or
imul
xor
dec
xor
fsubr
fistp
lds
pop
ins
ins
icebp
fidivr
jg
stos
pop
add
idiv
dec
mov
sub
jge
xor
lahf
les
sbb
sbb
icebp
dec
in
cld
add
sbb
mov
lahf
outs
int3
push
sbb
push
jo
test
paddsw
mov
jle
xchg
popa
out
out
outs
xchg
inc
test
in
jge
popa
push
test
inc
cmp
jbe
outs
hlt
sti
fsub
shl
dec
cs
adc
(bad)
in
loop
lahf
mov
or
out
call
(bad)
fistp
icebp
push
cld
mov
adc
stos
(bad)
pop
jg
pop
shr
rcl
jg
adc
pop
cld
or
xor
pop
rcr
dec
mov
gs
pushf
lea
(bad)
dec
jnp
jecxz
adc
inc
lds
push
pop
adc
imul
aam
dec
int
sbb
inc
pop
(bad)
xor
ror
and
add
cmps
push
(bad)
(bad)
fistp
ins
pop
mov
pop
inc
cmps
enter
mov
into
test
xchg
movs
ins
or
mov
ins
sbb
cwde
inc
mov
lock
jo
aas
repz
sbb
lock
in
jmp
test
or
out
sbb
aaa
clc
push
std
mov
jmp
test
(bad)
(bad)
mov
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
fisttp
(bad)
(bad)
out
rol
pop
or
or
fidivr
les
ss
lods
movs
or
repnz
(bad)
clc
dec
cmc
mov
jl
call
xchg
imul
(bad)
pop
in
cmp
or
mov
jmp
mov
pop
lock
jmp
mov
mov
hlt
dec
mov
xlat
inc
inc
fdiv
jg
mov
jg
mov
sub
addr16
fucomi
call
jp
std
adc
cdq
or
mov
ret
loop
cmc
mov
add
lock
pop
pop
div
(bad)
cld
test
sbb
scas
stc
adc
ins
xlat
lahf
loope
jae
jmp
sub
jg
mov
jg
inc
into
out
icebp
(bad)
mov
loope
mov
cmps
popf
in
pop
and
mov
fbstp
nop
xchg
test
das
ss
out
cmp
pop
mov
js
data16
dec
adc
cmc
dec
dec
adc
call
imul
popf
dec
add
cmp
mov
cmp
int
add
push
pop
aaa
std
ffreep
cmp
dec
inc
sbb
jnp
jg
xchg
fimul
ret
ror
sbb
aaa
inc
adc
adc
mov
sub
mov
pop
clc
loope
or
cmp
or
jp
dec
add
push
xor
xor
outs
adc
iret
fdivr
xchg
call
(bad)
jo
and
pop
gs
sub
jo
sar
pop
movs
and
jno
ret
fs
or
sbb
(bad)
(bad)
jmp
addr16
clc
xchg
cmps
jmp
ds
inc
mov
in
mov
int3
xchg
imul
in
add
jmp
std
mov
daa
jmp
fadd
or
inc
push
jae
mov
add
push
imul
pop
stc
push
dec
out
fstp
(bad)
mov
enter
mov
fst
mov
or
add
clc
or
push
sti
pop
inc
add
outs
nop
cdq
push
push
nop
mov
inc
fwait
test
and
xor
push
sub
mov
idiv
(bad)
(bad)
dec
iret
fwait
jne
inc
or
scas
dec
fisttp
enterw
jmp
daa
jbe
stc
jne
push
aam
(bad)
(bad)
push
sti
and
lock
call
mov
rcr
fsubr
into
adc
mov
or
adc
aas
fwait
xchg
(bad)
(bad)
(bad)
call
mov
push
ror
fdivrp
xlat
(bad)
mov
add
cmc
inc
leave
or
and
fnstsw
dec
repz
(bad)
(bad)
call
inc
adc
jmp
fdivr
lods
stc
fadd
(bad)
jmp
(bad)
jmp
mov
in
cmps
xor
enter
sub
loopne
xchg
xchg
add
(bad)
(bad)
(bad)
fbstp
cmp
sub
mov
xchg
cmps
(bad)
shr
push
pop
adc
(bad)
(bad)
jmp
jns
xchg
or
sahf
jo
push
mov
mov
ret
and
gs
js
imul
(bad)
(bad)
jnp
shl
adc
retf
add
mov
call
dec
int
(bad)
(bad)
(bad)
(bad)
call
push
sbb
xchg
push
scas
lock
call
add
add
call
(bad)
(bad)
jnp
or
dec
inc
jmp
gs
sbb
cmp
daa
ror
sbb
or
inc
xchg
mov
cdq
push
(bad)
(bad)
(bad)
dec
fcomip
push
ins
loop
pop
ja
and
rcr
lock
jl
pop
mov
clc
data16
jae
add
add
cmps
daa
fs
lea
or
dec
repnz
(bad)
dec
push
cld
enter
xchg
cmc
push
mov
mov
mul
xchg
jno
rcl
(bad)
(bad)
(bad)
(bad)
cmp
mov
and
cmps
dec
lods
test
and
jmp
xchg
sbb
(bad)
(bad)
(bad)
push
pop
jp
sub
(bad)
in
xchg
xchg
pop
repz
sahf
xchg
push
fimul
aam
pop
and
jmp
jmp
(bad)
dec
int
mov
sub
jg
daa
out
xchg
shl
rcr
(bad)
(bad)
(bad)
jmp
dec
pop
pop
jmp
dec
add
cli
call
pop
mov
and
outs
and
daa
in
or
dec
adc
cmp
aad
mov
jbe
(bad)
(bad)
jmp
push
cmp
pop
mov
jbe
es
sbb
ja
scas
scas
fnstenv
lahf
pop
ins
push
cmp
dec
sbb
leave
cmp
sbb
(bad)
pop
les
in
dec
inc
sbb
(bad)
(bad)
jmp
pop
bound
jmp
ret
addr16
mov
shl
dec
inc
adc
call
cld
(bad)
cmp
mov
mov
test
jmp
inc
in
fs
(bad)
(bad)
(bad)
out
outs
sbb
mov
das
dec
mov
outs
out
jae
out
push
or
int
aaa
(bad)
(bad)
(bad)
inc
lds
push
cmp
push
shr
inc
ror
inc
stos
lock
fcomip
(bad)
push
sbb
add
dec
scas
mov
mov
das
cmp
scas
or
(bad)
(bad)
inc
fidiv
xor
cmp
into
or
pop
inc
xor
pop
adc
add
(bad)
(bad)
(bad)
(bad)
mov
mov
or
cmp
cmps
xor
or
(bad)
inc
daa
sbb
push
jmp
sbb
bound
(bad)
data16
xchg
(bad)
(bad)
(bad)
call
daa
sbb
adc
fisttp
sahf
test
xchg
out
ja
mov
loope
mov
push
(bad)
(bad)
(bad)
(bad)
jmp
sbb
push
pushf
imul
ret
mov
xor
sbb
sbb
(bad)
push
(bad)
pop
sbb
sub
sub
sbb
sub
(bad)
cmp
js
lock
xchg
mov
rol
(bad)
(bad)
(bad)
call
jbe
mov
ret
fs
inc
les
lods
push
and
jne
js
addr16
push
(bad)
(bad)
(bad)
inc
adc
pop
or
push
mov
pop
or
push
hlt
or
scas
adc
leave
(bad)
(bad)
(bad)
call
std
sahf
ss
in
hlt
inc
sub
push
jmp
pusha
push
in
jmp
push
(bad)
leave
in
aam
sbb
(bad)
(bad)
jmp
xchg
pusha
rol
arpl
ins
leave
jb
imul
adc
or
and
cmps
ins
iret
(bad)
(bad)
(bad)
push
mov
data16
std
sbb
adc
into
mov
add
je
test
(bad)
nop
shr
rcr
sub
(bad)
(bad)
call
adc
cdq
ss
push
arpl
into
cli
cld
lods
adc
mov
loop
or
inc
ja
(bad)
jmp
xchg
sub
and
add
imul
pop
mov
test
scas
(bad)
(bad)
(bad)
dec
or
and
push
pop
div
ret
xchg
xor
ins
dec
jl
cs
ds
in
pop
jmp
(bad)
(bad)
push
or
and
les
push
stos
mov
repz
(bad)
(bad)
mov
push
call
mov
pop
or
aad
jmp
(bad)
sub
dec
mov
fcomip
(bad)
fcmovnu
xor
icebp
mov
dec
dec
add
push
rol
pop
shl
xchg
bnd
(bad)
(bad)
jmp
xor
adc
aaa
add
repnz
mov
inc
pop
in
inc
(bad)
cmp
(bad)
(bad)
(bad)
(bad)
std
or
and
jp
sbb
xor
adc
imul
mov
aaa
cld
jmp
(bad)
push
retf
cmp
inc
imul
sbb
(bad)
jg
call
icebp
or
cld
inc
daa
push
xor
or
mov
pop
test
jp
push
lea
(bad)
(bad)
(bad)
jp
test
mov
push
ror
and
push
xchg
or
gs
(bad)
(bad)
dec
adc
xor
lock
sub
movs
adc
call
iret
cmp
(bad)
(bad)
(bad)
(bad)
jge
cdq
sub
gs
je
ror
stc
stos
hlt
ds
adc
add
ret
jecxz
addr16
fcos
pop
cld
call
ret
lea
ficom
jge
inc
add
jg
jmp
(bad)
rcl
out
xor
jnp
adc
jmp
cdq
cmc
das
xchg
and
(bad)
test
mov
not
xchg
hlt
iret
dec
cmps
pop
push
mov
(bad)
(bad)
(bad)
ds
mov
es
repnz
int
sub
push
dec
sti
mov
adc
or
mov
retf
data16
mov
inc
outs
push
or
(bad)
xchg
dec
cli
mov
jb
addr16
(bad)
(bad)
inc
mov
push
(bad)
fbstp
stos
(bad)
push
(bad)
mov
lods
(bad)
pusha
enter
adc
cwde
(bad)
iret
outs
(bad)
(bad)
(bad)
push
lock
icebp
pop
icebp
pop
rcr
dec
and
xchg
ficomp
scas
out
jmp
arpl
retf
les
(bad)
dec
ds
push
push
mov
and
lock
mov
aaa
dec
push
icebp
(bad)
(bad)
(bad)
clc
test
xor
idiv
push
sbb
imul
aaa
push
xor
(bad)
or
(bad)
(bad)
jg
mov
mov
scas
clc
add
aam
mov
xchg
aas
(bad)
(bad)
(bad)
jmp
outs
in
push
xchg
movs
cmp
dec
mov
mov
push
jge
mov
jge
mov
test
out
xlat
jl
cld
loopne
xchg
jns
lods
sbb
adc
mov
inc
aas
sbb
dec
popf
jmp
jo
cmp
hlt
test
mov
adc
jbe
(bad)
(bad)
inc
mov
retf
sbb
ds
inc
xchg
mov
imul
jmp
lods
inc
push
adc
mov
fmul
aad
sbb
fimul
out
test
(bad)
(bad)
(bad)
jmp
or
mov
and
xor
popf
aad
imul
xor
jle
push
(bad)
inc
pop
add
mov
pop
dec
(bad)
fnstcw
cmp
or
jle
test
call
jmp
shl
ss
je
lds
fidivr
inc
ss
in
adc
adc
jmp
or
xchg
cmp
and
and
and
repnz
mov
(bad)
js
mov
(bad)
jmp
mov
sub
pop
in
mov
outs
inc
daa
enter
loop
cmc
into
adc
adc
(bad)
(bad)
jmp
fld
cmps
pop
test
into
mov
cmp
mov
add
and
(bad)
(bad)
jmp
xor
jle
aaa
pop
ret
jnp
pop
dec
inc
pop
xchg
cmps
and
ds
mov
jmp
jno
pop
cmps
movs
leave
push
(bad)
fwait
adc
shl
cmps
sub
stos
adc
(bad)
inc
pop
jp
mov
in
inc
icebp
cmp
fisubr
pop
aad
add
hlt
add
jmp
out
jb
int
and
pop
xor
mov
and
xor
cmc
add
cld
jmp
cmp
js
mov
adc
mov
xor
(bad)
lds
scas
adc
int3
mov
into
mov
jae
push
(bad)
(bad)
(bad)
(bad)
fcom
(bad)
or
mov
sbb
inc
fisubr
icebp
sub
sbb
dec
push
cmp
or
push
test
dec
fnstsw
add
icebp
setns
(bad)
(bad)
jmp
mov
pop
out
mov
mov
jae
jl
and
ins
aas
shr
repnz
imul
fs
push
xchg
pand
ret
arpl
mov
inc
popa
ret
(bad)
(bad)
(bad)
dec
and
mov
and
loope
mov
or
mov
inc
movs
push
cmp
jmp
xor
mov
(bad)
cmp
(bad)
jmp
mov
lahf
pop
mov
sbb
inc
jns
ja
cli
sti
lods
add
xor
or
cwde
leave
popa
(bad)
(bad)
(bad)
jmp
pop
pop
movs
imul
mov
int
xchg
stos
or
call
(bad)
(bad)
(bad)
mov
jmp
lahf
out
in
inc
ffree
jp
int3
icebp
daa
je
not
(bad)
cmp
(bad)
(bad)
(bad)
jnp
cmp
ror
cmp
aam
cs
mov
jle
addr16
(bad)
(bad)
push
or
es
(bad)
div
xchg
stos
cli
add
dec
push
xor
(bad)
dec
test
mov
cmp
add
add
jnp
(bad)
call
dec
sar
es
cld
mov
xchg
arpl
push
int
mov
inc
mov
and
ret
sub
aas
sbb
stos
mov
push
movs
(bad)
jb
dec
(bad)
(bad)
(bad)
call
push
sub
mov
push
ror
inc
and
add
js
pop
mov
or
pop
adc
adc
out
push
jmp
xchg
pop
and
(bad)
push
aad
fld
pop
add
xor
(bad)
(bad)
jg
mov
cmp
cmc
and
js
xor
and
jmp
cmp
aam
(bad)
(bad)
(bad)
dec
sbb
neg
mov
push
mov
div
mov
push
icebp
xchg
inc
leave
fbld
(bad)
(bad)
(bad)
(bad)
mov
push
sub
dec
ror
sub
add
popf
sar
je
ss
inc
popf
inc
sub
mov
imul
pop
clc
arpl
div
shr
dec
jl
fdivr
mov
push
aad
xor
sbb
(bad)
(bad)
(bad)
inc
or
mov
add
popf
lods
enter
mov
push
adc
popa
cli
(bad)
(bad)
dec
mov
sti
or
int3
sub
inc
rcl
xchg
je
jno
mov
inc
fdivrp
(bad)
(bad)
out
sub
mov
cmp
and
icebp
inc
mov
and
loope
pop
data16
cld
shl
add
idiv
leave
add
jmp
(bad)
inc
jg
movs
jb
inc
movs
xor
add
push
jmp
pop
lahf
lods
jno
sub
(bad)
(bad)
dec
retf
push
sahf
sahf
data16
mov
adc
lods
adc
push
add
mov
add
cmp
movs
daa
xchg
jp
bound
stos
(bad)
jmp
sub
mov
inc
ja
sbb
jne
popf
jl
ins
in
stos
mov
mov
imul
sti
jle
dec
push
lock
xchg
pop
jg
(bad)
(bad)
dec
inc
cmp
(bad)
pushf
xchg
dec
or
or
ins
jmp
int3
sub
dec
das
lods
test
(bad)
jmp
xchg
jmp
lds
xchg
jmp
pop
or
push
cld
enter
(bad)
(bad)
(bad)
jmp
outs
mov
ror
dec
dec
ins
pop
jle
ja
push
dec
adc
cmps
in
arpl
pop
icebp
aaa
aad
aas
and
(bad)
in
mov
(bad)
(bad)
push
sbb
pop
movs
cmp
imul
and
jnp
mov
(bad)
(bad)
(bad)
(bad)
fisttp
je
mov
add
lods
into
icebp
and
and
scas
addr16
daa
sar
sbb
(bad)
jg
cmp
add
out
shld
mov
data16
mov
cld
call
movs
aam
and
scas
sub
int
sbb
sahf
fdivp
(bad)
(bad)
(bad)
jmp
aas
bound
packsswb
clc
(bad)
cmp
pop
mov
in
call
outs
(bad)
jmp
adc
adc
out
in
test
push
mov
push
and
sub
mov
add
or
(bad)
(bad)
(bad)
(bad)
jmp
pop
sahf
in
xor
pop
xor
cmc
dec
ins
push
cmp
sbb
sar
xchg
inc
iret
stc
pop
fsubr
les
(bad)
adc
cmps
add
lea
pop
nop
jmp
scas
lahf
adc
(bad)
(bad)
jmp
cdq
xor
push
fisttp
xor
push
sahf
adc
mov
mov
jg
(bad)
call
sub
or
sbb
repnz
push
mov
cli
inc
mov
and
loope
(bad)
(bad)
(bad)
mov
outs
xchg
xor
je
jno
mov
arpl
jae
loope
icebp
mov
in
or
stos
in
(bad)
(bad)
(bad)
call
inc
fistp
data16
fdiv
push
jb
jne
adc
inc
push
xchg
inc
cmp
(bad)
(bad)
(bad)
(bad)
cmp
jno
mov
ret
fild
mov
sti
int3
jecxz
test
inc
pop
faddp
adc
in
fdivr
cmp
bnd
dec
imul
ja
in
bound
xchg
stc
or
inc
test
(bad)
stc
pusha
test
push
cld
call
gs
dec
mov
mov
cdq
sbb
add
(bad)
(bad)
mov
sub
arpl
bound
sbb
push
bound
outs
lods
mov
(bad)
inc
ja
and
bound
sub
push
in
std
xchg
shl
jmp
(bad)
(bad)
(bad)
push
jae
mov
pop
loope
lods
loopne
push
mov
xor
test
test
adc
(bad)
(bad)
dec
(bad)
fnstenv
xor
fiadd
fsub
mov
xchg
das
inc
jne
or
(bad)
(bad)
call
enter
and
out
or
xchg
push
xchg
aad
mov
push
cld
jle
cmps
mov
jmp
repnz
push
sub
cmp
dec
and
bound
xor
sahf
outs
sti
stos
test
aad
inc
pop
push
(bad)
(bad)
(bad)
push
ins
das
mov
dec
dec
mov
call
dec
sbb
cmc
cdq
bound
mov
(bad)
(bad)
call
out
xchg
mov
xchg
push
mov
test
gs
jb
js
(bad)
xchg
and
xchg
xor
push
sub
inc
add
cmp
mov
ins
sbb
dec
adc
out
int3
xchg
sar
inc
mov
sahf
cmp
adc
stos
xlat
into
aam
(bad)
(bad)
inc
bound
outs
jmpw
inc
dec
mov
(bad)
(bad)
(bad)
(bad)
(bad)
clc
popf
arpl
push
aad
jp
dec
jle
retf
dec
adc
fistp
pop
or
or
mov
call
mov
inc
and
jns
stos
test
(bad)
(bad)
(bad)
dec
xchg
loop
scas
out
jo
fisub
in
retf
stos
lahf
cmps
xor
jae
jae
add
cwde
es
ror
(bad)
dec
std
mov
ror
inc
adc
cwde
pop
add
adc
mov
cli
popf
out
daa
mov
test
push
std
jg
lods
dec
in
mov
sbb
out
push
xchg
sub
cld
jmp
scas
stc
mov
xchg
cli
adc
icebp
iret
push
inc
fisubr
in
xor
call
and
cmc
push
add
icebp
mov
jmp
inc
(bad)
mov
data16
retf
leave
dec
lea
outs
mov
retf
xor
add
jg
(bad)
(bad)
(bad)
dec
xchg
stos
mov
xor
inc
pop
adc
inc
mov
jmp
rcr
(bad)
(bad)
(bad)
push
lock
fiadd
out
or
cmp
sub
lea
push
stos
or
pop
std
(bad)
push
test
jg
sbb
mov
clc
arpl
out
mov
data16
sbb
sbb
das
add
stos
jle
ja
test
pusha
xchg
cmps
adc
(bad)
call
jge
mov
shr
dec
jle
xor
sub
or
pop
repz
jnp
cmc
(bad)
push
jb
pop
sti
addr16
push
cmp
mov
sub
dec
das
push
lods
pop
(bad)
repnz
dec
mov
dec
jno
sar
(bad)
call
sub
out
adc
outs
sbb
mov
inc
push
int
cs
and
push
xor
pop
xor
mov
push
lods
xchg
adc
js
(bad)
(bad)
(bad)
(bad)
cmp
sub
push
test
mov
out
push
adc
(bad)
inc
(bad)
jg
call
sub
icebp
push
pushf
sbb
loop
loopne
daa
mov
daa
aad
sbb
data16
(bad)
(bad)
inc
add
or
retf
jp
sbb
scas
sub
mov
(bad)
(bad)
jmp
ds
(bad)
icebp
test
push
adc
out
and
push
cld
(bad)
jmp
cmp
jl
xor
cwde
mov
out
mov
scas
push
inc
(bad)
(bad)
(bad)
dec
mov
cmp
loopne
xchg
mov
jns
cmp
imul
cmp
clc
(bad)
(bad)
(bad)
js
sub
mov
pop
aad
jmp
jns
xchg
pop
in
(bad)
(bad)
(bad)
out
mov
(bad)
clc
cwde
in
dec
sar
adc
movs
repz
and
(bad)
(bad)
(bad)
(bad)
jns
pop
pop
xor
repz
pop
mov
push
dec
xor
aam
push
jno
mov
mov
call
mov
into
loopne
neg
bound
push
or
(bad)
(bad)
(bad)
(bad)
sti
es
mov
mov
dec
pop
paddsb
xchg
into
out
retf
push
inc
cmp
pop
ret
(bad)
jmp
xchg
push
cmps
xor
(bad)
fdivp
sti
out
xlat
pushf
data16
movs
inc
stos
mov
icebp
scas
cmp
sub
cmp
ss
ins
adc
nop
(bad)
fdivr
(bad)
(bad)
call
in
(bad)
lods
les
fcom
jl
adc
shr
cmps
aam
(bad)
(bad)
(bad)
jmp
or
jmp
outs
into
ret
cli
ins
push
es
(bad)
push
data16
into
sbb
and
push
xchg
aaa
mov
adc
frstor
inc
aam
(bad)
or
inc
sbb
dec
sub
or
xor
xchg
jge
dec
cmp
shl
sub
(bad)
(bad)
jmp
adc
call
sbb
and
or
push
jne
test
(bad)
(bad)
inc
repnz
sbb
jecxz
imul
inc
movs
cmp
jb
xor
enter
arpl
inc
gs
(bad)
(bad)
(bad)
jmp
sub
test
push
mov
jmp
jmp
imul
cmp
xor
(bad)
(bad)
dec
adc
mov
add
add
mov
sbb
test
push
mov
(bad)
jmp
push
mov
fcom
das
mov
pop
mov
push
adc
xchg
bound
xor
push
sti
push
cld
pop
lea
stos
pop
mov
jnp
movs
pop
xor
mov
mov
rcl
imul
cld
mov
ret
and
jl
mov
(bad)
dec
popf
fsubr
mov
int3
push
aad
push
xor
add
(bad)
jns
retf
inc
inc
(bad)
(bad)
jmp
adc
test
rcl
mov
fisub
dec
shr
(bad)
xchg
(bad)
(bad)
mov
retf
pusha
xchg
adc
fcmovu
dec
sahf
aas
or
fs
pop
(bad)
(bad)
inc
mov
push
mov
push
sub
stos
adc
(bad)
(bad)
push
adc
movs
dec
mov
lahf
jp
xchg
pop
mov
jge
mov
popf
mov
(bad)
(bad)
(bad)
push
dec
mov
imul
xchg
cmp
call
imul
(bad)
scas
out
or
add
pop
out
movs
mov
inc
repnz
push
inc
or
(bad)
(bad)
push
cmps
in
int3
(bad)
push
(bad)
and
adc
(bad)
(bad)
(bad)
call
jecxz
aaa
push
mov
mov
daa
jge
dec
lock
sahf
mov
sbb
(bad)
(bad)
call
sbb
out
dec
pop
jp
std
push
in
xor
repz
sub
pop
in
cmp
(bad)
(bad)
mov
pop
ds
push
pop
shr
pop
pop
xchg
adc
stos
xor
push
and
sahf
shl
into
or
aaa
int
xor
loope
cmp
paddsw
(bad)
mov
andps
outs
push
pop
adc
cmps
jmp
push
xchg
jg
mov
aad
mov
or
leave
cmp
pop
(bad)
jg
and
pop
xchg
aad
lea
xchg
adc
mov
(bad)
(bad)
(bad)
out
fisub
cmp
inc
xchg
js
mov
jae
shl
mov
test
(bad)
(bad)
(bad)
jmp
push
or
lods
lea
shl
int3
mov
xlat
aad
dec
mov
and
dec
out
or
adc
sar
(bad)
(bad)
(bad)
cmp
bound
and
mov
or
fmul
rcl
fistp
sub
scas
xchg
dec
(bad)
mov
fidiv
cmp
fdivp
cmp
xchg
(bad)
(bad)
(bad)
fistp
push
shr
in
popa
or
scas
in
vcomisd
pop
shr
out
clc
(bad)
jmp
or
in
inc
dec
xor
push
rcl
ss
hlt
les
out
push
loope
dec
fst
mov
add
or
jmp
mov
call
(bad)
cmp
sti
pop
in
add
not
adc
jl
(bad)
push
fsubr
cwde
or
out
mov
fidivr
and
(bad)
(bad)
(bad)
jmp
dec
mov
push
sub
jmp
jns
pop
aad
dec
adc
mov
movs
in
jne
mov
mov
or
xchg
dec
or
sbb
cmp
enter
adc
mov
(bad)
call
(bad)
sbb
jge
sahf
sti
xchg
movs
pop
dec
adc
or
xor
cmps
lahf
pop
rol
daa
(bad)
(bad)
(bad)
jmp
dec
jmp
adc
loopne
push
sti
cmp
fist
test
and
pop
jle
ins
loop
cmp
(bad)
(bad)
(bad)
mov
inc
push
mov
mov
adc
push
addr16
fmul
mov
movs
push
cmp
(bad)
jmp
mov
ror
push
or
xchg
jl
inc
scas
cld
es
inc
in
out
hlt
fiadd
ins
(bad)
(bad)
(bad)
jmp
fldln2
pop
sbb
ret
mov
sbb
cmc
push
sbb
sbb
xchg
sbb
sbb
(bad)
(bad)
mov
dec
icebp
in
int3
mul
push
xchg
div
test
adc
(bad)
(bad)
(bad)
mov
xchg
jge
xor
add
sub
sub
inc
inc
imul
xor
mov
push
add
pop
lea
vorps
lods
xchg
in
cld
jo
dec
push
adc
or
xor
xchg
jb
jns
gs
push
cmp
fiadd
(bad)
(bad)
(bad)
inc
sbb
cmps
mov
adc
or
jge
dec
test
cli
(bad)
push
dec
xchg
add
int3
in
sub
popf
add
add
add
jmp
fcomp
xor
jns
jle
pop
jno
fmul
adc
lahf
add
test
nop
fdivr
mov
mov
jae
int3
xor
dec
pop
jb
and
ret
mov
xchg
dec
cmp
mov
cmps
jo
sub
(bad)
(bad)
call
pop
leave
sub
jae
retf
pop
outs
lds
stos
inc
xchg
pop
xlat
mov
addr16
lock
dec
lock
sub
jb
xchg
mov
ds
adc
fs
cmp
(bad)
call
pop
into
pusha
lods
cmps
call
daa
and
mov
mov
or
push
mov
mov
test
retf
mov
sti
mov
(bad)
(bad)
(bad)
inc
push
pop
jl
(bad)
paddd
shl
dec
fcmovnu
dec
test
add
call
xor
movs
into
mov
inc
out
mov
(bad)
(bad)
(bad)
inc
jnp
sub
and
push
pop
dec
call
xor
mov
(bad)
(bad)
(bad)
(bad)
sti
popf
clc
lods
jb
(bad)
mov
mov
mov
out
jecxz
adc
mov
call
push
rcl
push
and
mov
or
mov
mov
cmp
(bad)
(bad)
(bad)
mov
cmps
call
std
inc
retf
ss
inc
js
sub
(bad)
(bad)
jmp
cli
test
push
xor
out
arpl
or
or
xchg
(bad)
(bad)
mov
loop
cmp
into
lods
data16
gs
arpl
loopne
dec
add
inc
js
popf
and
lahf
cdq
rcl
xchg
int3
in
les
and
adc
outs
aad
jg
(bad)
(bad)
push
out
cld
jl
dec
ds
cmc
sub
ret
inc
inc
nop
fndisi(8087
mov
ror
hlt
sub
(bad)
(bad)
mov
fs
aam
dec
mov
ins
inc
imul
sbb
pop
js
push
lock
clc
repnz
inc
clc
out
xor
sub
les
popa
pop
sub
pop
sar
call
rcl
xor
jmp
fcmovnbe
and
fwait
js
mov
(bad)
(bad)
jg
pusha
shr
fisubr
and
mov
jge
inc
stc
adc
adc
add
(bad)
(bad)
call
sbb
pop
mov
call
cmp
jb
or
(bad)
stos
mov
mov
jg
and
or
mov
in
add
cdq
(bad)
(bad)
(bad)
push
add
mov
jno
xor
loop
int3
pop
imul
mov
jo
(bad)
(bad)
inc
jecxz
or
and
and
jns
daa
jns
in
cwde
or
clc
call
popf
cmp
test
mov
(bad)
and
mov
(bad)
(bad)
daa
out
inc
je
xor
xchg
rcr
sub
xchg
push
fwait
sahf
or
(bad)
(bad)
jmp
add
jp
jge
popa
mov
sbb
js
enter
push
jp
enter
int
(bad)
(bad)
(bad)
(bad)
fisub
or
pop
cwde
mov
addr16
shl
sti
out
mov
push
cmc
mov
(bad)
(bad)
dec
push
push
push
cwde
push
jae
or
add
dec
repz
push
sub
push
jne
cmps
jp
idiv
jmp
or
repz
adc
push
pop
test
mov
inc
push
mov
xor
push
pop
(bad)
cmc
fdivr
xchg
jo
fmul
xlat
adc
pop
cmc
pop
add
dec
(bad)
(bad)
(bad)
inc
inc
shr
inc
mov
sbb
or
hlt
jnp
push
cmc
pop
mov
stc
sbb
(bad)
push
cmp
test
fistp
hlt
push
jno
mov
push
addr16
ss
aad
push
jbe
mov
sti
scas
inc
and
dec
cwde
fs
int
inc
inc
cmp
xchg
pop
std
cmp
daa
mov
outs
sbb
fs
repz
pop
es
jmp
(bad)
jg
sub
sbb
aam
add
(bad)
(bad)
dec
push
in
pop
loopne
mov
shl
mov
ins
fmul
and
cld
sbb
dec
outs
sub
jns
mov
add
jp
ins
test
cli
popa
mov
out
cli
jmp
lahf
cs
mov
pop
pop
jno
(bad)
cmps
arpl
and
(bad)
fild
setge
inc
xlat
mov
sub
shl
or
jno
loope
iret
stc
inc
cmps
mov
mov
(bad)
mov
rcl
sub
inc
adc
leave
rcr
(bad)
(bad)
(bad)
jmp
mov
dec
push
cmps
mov
shr
inc
(bad)
push
cmp
sbb
mov
das
sar
rol
pushw
mov
out
mov
push
ffreep
mov
adc
(bad)
(bad)
inc
movs
int
popa
aad
sbb
dec
inc
inc
sub
pop
mov
adc
rcr
and
sub
(bad)
call
call
dec
pop
mov
cmp
retf
and
test
(bad)
(bad)
(bad)
js
add
xchg
mov
jp
outs
(bad)
scas
sub
dec
adc
dec
in
aas
pushf
jmp
call
(bad)
mov
jno
in
mov
aas
jbe
add
adc
cmp
jg
inc
xchg
(bad)
(bad)
dec
fistp
cdq
jecxz
or
(bad)
inc
sar
xchg
bound
pop
sub
pusha
mov
sbb
movs
pop
mov
stos
clc
mov
sbb
add
lahf
xlat
pop
mov
(bad)
(bad)
jmp
mov
repz
lods
mov
push
jne
push
sbb
(bad)
(bad)
(bad)
call
mul
nop
(bad)
(bad)
loope
cmp
ret
sbb
out
mov
cli
xor
cmp
les
js
cmp
nop
inc
adc
pusha
mov
push
mov
call
in
jb
and
lods
xor
fnstenv
(bad)
(bad)
push
dec
sbb
jle
cmps
repz
(bad)
sar
sahf
ins
inc
sahf
mov
mov
in
push
std
cld
(bad)
add
mov
std
cmc
hlt
sbb
xor
idiv
(bad)
(bad)
(bad)
dec
fwait
jmp
js
addr16
fmul
lock
or
lock
push
xor
mov
lds
loop
js
and
js
inc
test
cmp
shl
call
cmc
test
loope
dec
stos
pop
sti
dec
add
sub
(bad)
dec
mov
fist
cmc
pop
mov
cmps
mov
dec
add
scas
push
cmp
pop
push
push
pop
sahf
push
(bad)
(bad)
jmp
and
mov
lahf
dec
xchg
loopne
and
cdq
or
adc
jo
je
stos
(bad)
(bad)
dec
in
xor
jbe
and
pop
adc
pop
xor
sub
bound
scas
sbb
adc
sub
repz
jecxz
mov
xor
mov
cs
(bad)
push
outs
cmps
mov
shr
test
inc
push
pop
and
lea
in
movs
adc
ja
push
sti
xchg
loope
adc
ret
xchg
add
jnp
(bad)
stos
(bad)
(bad)
(bad)
jg
xchg
neg
sub
jnp
mov
push
cmp
or
inc
cmps
add
imul
sbb
dec
mov
cwde
jmp
stc
fwait
(bad)
dec
adc
jae
mov
adc
lods
jb
scas
pop
inc
mov
in
adc
jge
outs
(bad)
fisttp
pushf
mov
daa
xor
mov
loop
leave
daa
scas
(bad)
(bad)
(bad)
inc
cld
mov
dec
test
cwde
cmp
out
push
inc
jg
cmp
scas
cmp
(bad)
inc
inc
jno
push
xchg
mov
fld
mov
jp
sub
movs
(bad)
pusha
outs
sbb
add
(bad)
(bad)
(bad)
call
mov
pop
adc
icebp
iret
sbb
je
vpacksswb
push
push
retf
es
(bad)
(bad)
jmp
ds
in
mov
movs
call
popf
mov
int
push
iret
xchg
sbb
dec
xchg
mov
pusha
out
stos
in
sbb
mov
pop
ss
lahf
jae
mov
adc
sub
into
push
movs
inc
cmp
(bad)
in
jmp
or
cwde
shl
pop
aam
cli
cmc
cmp
fwait
jnp
sub
dec
fst
(bad)
(bad)
(bad)
(bad)
out
mov
add
or
jno
hlt
dec
cmc
sbb
call
bound
(bad)
(bad)
(bad)
push
xchg
push
jae
lds
sbb
ins
jl
daa
aas
retf
push
(bad)
mov
add
fidiv
call
clc
out
mov
cmp
(bad)
jmp
scas
xor
mov
mov
inc
es
mov
fucomp
xlat
in
dec
inc
add
(bad)
(bad)
mov
cmp
stos
loop
lods
in
sbb
mov
in
das
mov
jg
aaa
std
(bad)
call
cmps
jae
push
fbld
mov
ins
inc
out
adc
jmp
jmp
neg
rcl
retf
stc
stc
and
(bad)
(bad)
push
hlt
cmps
fldz
dec
enter
pop
(bad)
leave
arpl
pop
xchg
jbe
mov
mov
(bad)
dec
jno
rcl
sbb
cwde
xchg
ret
in
mov
adc
add
call
dec
imul
ror
sbb
(bad)
jmp
stos
pop
(bad)
aam
cmp
retf
add
push
or
(bad)
(bad)
call
xchg
mov
jecxz
pop
push
dec
rol
popa
fdivr
or
cmp
(bad)
call
std
jne
or
jmp
or
adc
fdivr
and
(bad)
push
retf
faddp
mov
je
cld
rcl
pushf
into
sahf
mov
mov
(bad)
jmp
clc
xchg
pop
mov
out
cmp
xchg
adc
ss
dec
gs
cmp
(bad)
(bad)
jg
out
iret
imul
add
mov
xchg
out
mov
mov
call
(bad)
in
gs
bound
aam
test
scas
mov
pop
push
ret
aas
add
(bad)
push
loop
pop
jp
dec
sbb
mov
(bad)
outs
add
mov
les
inc
fwait
(bad)
bound
repnz
outs
in
push
scas
lea
mov
jae
in
aam
cmps
xor
(bad)
(bad)
jmp
mov
ins
push
or
add
xor
xchg
inc
sar
(bad)
call
inc
fwait
mov
xchg
sub
(bad)
lahf
add
mov
dec
stc
fiadd
ss
inc
dec
push
jge
sbb
sub
sbb
sub
int
xor
imul
out
dec
shr
(bad)
push
imul
retf
push
test
jecxz
addr16
pop
div
mov
(bad)
(bad)
jmp
and
xor
out
push
iret
stos
inc
shr
shl
jmp
rcr
icebp
(bad)
(bad)
(bad)
jmp
pop
stos
mov
inc
test
imul
imul
test
sub
mov
std
cmp
(bad)
mov
pop
cwde
mov
cmp
xor
push
sub
sti
mov
cmc
jmp
mov
sub
jmp
(bad)
(bad)
call
sub
int
aam
shr
adc
std
sub
or
push
push
inc
xchg
fisttp
push
(bad)
push
pop
adc
stc
pop
in
pusha
mov
dec
lods
or
loopne
gs
add
jae
out
cli
dec
les
imul
movs
mov
int3
cmc
push
idiv
mov
rcl
lock
mov
mov
test
jmp
mov
enter
(bad)
(bad)
(bad)
cli
pop
out
ins
outs
int3
jmp
mov
test
and
mov
pop
je
pop
or
call
fdivr
imul
adc
retf
hlt
(bad)
(bad)
mov
cmp
(bad)
popa
adc
call
(bad)
push
push
cmp
xchg
inc
and
lea
add
push
int
lods
xchg
nop
nop
sbb
cmp
(bad)
(bad)
fcomip
push
cmps
arpl
jae
adc
jmp
bnd
jb
ret
(bad)
stc
add
test
and
lahf
dec
cwde
aam
dec
cmp
leave
inc
jg
push
push
aam
iret
add
mov
movs
mov
daa
mov
out
scas
and
xchg
push
sub
fcom
(bad)
jg
call
aas
lock
xchg
xor
scas
mov
jmp
ja
dec
daa
mov
dec
(bad)
(bad)
(bad)
jmp
movs
pop
test
cli
ror
jnp
pop
and
scas
rcr
in
int3
je
mov
push
sub
shr
loope
push
mov
out
scas
or
inc
mov
mov
(bad)
mov
sahf
mov
jl
retf
cmp
sti
clc
lahf
pop
mov
(bad)
(bad)
(bad)
inc
sahf
imul
out
push
mov
movs
inc
xor
inc
dec
shl
(bad)
ins
sbb
push
daa
(bad)
(bad)
(bad)
inc
movs
into
jbe
gs
hlt
add
stos
xchg
xchg
cs
push
mov
test
adc
(bad)
(bad)
inc
ret
stos
inc
stos
ins
adc
push
xchg
add
mov
lods
xor
(bad)
(bad)
mov
(bad)
fst
pop
or
sub
mov
jno
(bad)
(bad)
(bad)
inc
mov
ins
xor
int3
test
gs
popf
repnz
jnp
pop
push
push
dec
inc
pop
adc
(bad)
(bad)
dec
lea
mov
ltr
xor
rol
xchg
shl
sub
ja
cmp
jle
test
dec
xchg
popa
push
push
pop
and
fs
iret
rcr
(bad)
loope
pop
cmc
(bad)
call
push
(bad)
sbb
aas
lahf
mov
out
xor
je
mov
(bad)
(bad)
(bad)
(bad)
push
add
iret
pop
call
pop
dec
or
pop
jbe
fmulp
mov
(bad)
(bad)
call
lds
out
mov
xor
test
pop
retf
lods
cdq
(bad)
stos
dec
lahf
xor
(bad)
jmp
pop
pop
mov
mov
and
push
test
sbb
push
mov
(bad)
(bad)
call
(bad)
jl
mov
inc
repnz
pop
ret
mov
inc
inc
sbb
imul
push
mov
or
inc
addr16
js
cmps
pop
js
(bad)
(bad)
(bad)
push
fs
mov
mov
sbb
in
aaa
cs
inc
adc
cmp
jmp
push
rcl
dec
push
jp
int3
(bad)
cmps
cmp
sti
jno
repnz
data16
(bad)
(bad)
mov
pop
mov
ja
cmps
in
call
loope
out
fdiv
mov
xor
and
fstp
xchg
sar
hlt
xchg
adc
hlt
repnz
(bad)
mov
test
scas
xchg
ins
nop
and
cmps
fsubr
int3
imul
dec
sub
repnz
pusha
std
addr16
push
xchg
cdq
xor
(bad)
(bad)
jmp
int3
lea
sub
sbb
inc
ins
jmp
sub
iret
sbb
enter
idiv
(bad)
(bad)
(bad)
jmp
pop
mov
out
aas
loopne
hlt
daa
int
jne
or
call
mov
and
(bad)
(bad)
(bad)
jmp
data16
and
and
cmp
leave
xor
and
loope
sbb
jnp
pop
(bad)
jg
sub
fcomip
push
xor
repz
mov
push
ss
cmp
in
sbb
(bad)
(bad)
call
xor
adc
stos
pop
add
sbb
dec
in
jns
scas
or
mov
inc
(bad)
and
pcmpeqd
push
cmp
int
loop
jp
mov
(bad)
(bad)
(bad)
in
push
adc
nop
mov
push
add
push
cmc
pop
pop
mov
cli
or
mov
mov
retf
int3
(bad)
sti
stos
xor
(bad)
adc
xchg
inc
push
jle
xchg
pop
movs
mov
div
mov
push
lds
mov
icebp
fsub
cld
inc
cmps
test
push
cmp
rcr
out
aam
cwde
enter
in
sub
(bad)
cs
xchg
mov
(bad)
(bad)
jmp
sti
fcom
int
adc
pop
xor
lock
mov
push
in
mov
(bad)
call
add
cli
or
das
inc
scas
mov
shl
push
push
arpl
xchg
sub
(bad)
call
mov
es
setae
arpl
mov
adc
push
cmp
(bad)
push
mov
in
es
int3
push
fucomip
inc
and
cmp
out
jo
push
das
imul
add
xchg
nop
xor
out
data16
adc
sub
push
mov
in
mov
dec
jb
pop
jge
ds
lds
aas
and
loopne
mov
(bad)
(bad)
jmp
mov
jnp
mov
ds
push
xor
jge
sub
(bad)
push
xor
(bad)
(bad)
(bad)
(bad)
mov
sbb
xchg
dec
outs
ror
xchg
fbld
jl
xchg
adc
outs
das
cmp
(bad)
(bad)
dec
fmul
fs
ins
(bad)
cmc
aaa
out
cmp
in
movs
pushf
aaa
sar
pop
out
push
sti
xchg
push
mov
loope
jo
lods
fcom
adc
lods
movs
mov
jecxz
cmps
popa
xlat
aas
div
pop
dec
into
push
pop
rcl
adc
sbb
adc
frstor
sub
je
icebp
mov
sbb
pop
ret
add
cmp
cld
push
sbb
nop
out
imul
xchg
outs
in
fprem
xchg
call
jge
ret
into
dec
ins
jmp
push
mov
inc
imul
ror
aad
out
jmp
(bad)
fld
ds
es
test
inc
shr
scas
das
adc
movs
pop
cs
(bad)
(bad)
jmp
adc
repz
add
mov
je
jne
and
jmp
jne
lea
(bad)
(bad)
(bad)
call
mov
ins
push
leave
dec
hlt
das
push
(bad)
fdivr
fdiv
and
jle
inc
into
add
sub
call
jecxz
mov
adc
mov
pop
pushf
mov
pusha
inc
push
pop
mov
xchg
(bad)
(bad)
(bad)
(bad)
in
cli
and
mov
sbb
sbb
and
lods
sbb
dec
aas
adc
mov
out
or
(bad)
(bad)
jmp
shl
add
dec
push
fild
sahf
nop
fwait
loop
and
out
pop
jo
(bad)
aad
(bad)
(bad)
jmp
fcomp
fidiv
mov
xor
call
mov
test
xlat
pushf
dec
loop
mov
dec
xor
xor
ror
sbb
js
or
in
loopne
add
(bad)
(bad)
jmp
push
fs
jmp
(bad)
cmp
pusha
jns
fnstenv
or
mov
mov
push
sbb
shl
inc
push
retf
(bad)
dec
and
dec
and
movs
cdq
mov
cmp
fcmovb
lods
jmp
xor
inc
shr
push
pop
(bad)
(bad)
(bad)
(bad)
mov
js
adc
stc
dec
mov
in
push
out
xchg
dec
data16
pop
and
jmp
pop
push
(bad)
(bad)
(bad)
jmp
pop
push
sub
test
lds
sar
test
std
les
adc
(bad)
push
ret
dec
xchg
mov
in
data16
sbb
or
(bad)
(bad)
inc
mov
inc
and
cli
adc
rol
pop
jae
repnz
mov
mov
push
inc
jge
pop
scas
fnstsw
outs
jmp
inc
add
(bad)
jmp
push
js
cli
nop
cmp
and
jno
sar
sbb
or
cmp
fcom
scas
jmp
lods
(bad)
hlt
mov
mov
cli
and
rcl
ja
pop
lahf
in
xchg
mov
clc
jmp
test
pushf
(bad)
out
add
push
pusha
aas
imul
sub
fwait
(bad)
(bad)
(bad)
jnp
jmp
(bad)
(bad)
movs
rcl
jmp
icebp
(bad)
(bad)
jmp
dec
movs
(bad)
test
das
cmp
ficomp
add
jge
ficom
(bad)
(bad)
call
mov
jns
mov
rcr
cmps
scas
int3
addr16
sub
cmp
push
dec
dec
or
(bad)
(bad)
call
cmc
inc
cmp
pop
test
scas
es
cmc
inc
popf
cli
mov
push
mov
into
push
(bad)
jmp
add
jmp
or
push
inc
adc
cli
loop
or
(bad)
(bad)
jmp
inc
out
(bad)
bound
add
xchg
push
add
rcl
popf
or
mov
mov
out
clc
jmp
out
push
cmp
in
(bad)
mov
mov
leave
pop
inc
pop
adc
(bad)
(bad)
dec
shr
jl
mov
iret
movs
push
ins
fnstsw
(bad)
inc
(bad)
loop
sbb
jle
out
pop
or
scas
jo
gs
dec
into
ret
inc
xchg
xchg
call
inc
add
mov
stos
(bad)
xchg
dec
push
or
(bad)
(bad)
(bad)
jmp
loop
fcomi
xchg
inc
dec
ds
scas
xchg
and
sub
punpcklwd
push
xor
mov
(bad)
(bad)
call
dec
sub
arpl
xchg
loope
dec
jo
stos
mov
and
cmps
(bad)
(bad)
(bad)
dec
pop
mov
mov
cmps
push
push
retf
pop
sbb
cmp
(bad)
(bad)
(bad)
push
iret
inc
or
sub
inc
out
add
dec
out
aam
xor
push
inc
xor
mov
sub
(bad)
(bad)
(bad)
(bad)
mov
jae
mov
pop
ret
jbe
adc
sbb
cmps
cli
(bad)
addr16
fwait
sub
(bad)
call
lods
sbb
lahf
sbb
push
xchg
mov
in
ret
(bad)
dec
cmp
inc
ror
jnp
xor
push
rcl
dec
mov
(bad)
(bad)
(bad)
jmp
push
inc
xchg
pusha
ja
aaa
(bad)
adc
loopne
jl
jns
and
inc
sub
(bad)
jmp
ins
aad
fist
icebp
mov
cmps
add
mov
pop
aaa
cld
out
fcomp
mov
xor
ret
push
xchg
mov
sub
les
fcmove
mov
ror
adc
faddp
in
push
test
lds
sbb
jp
cmp
mov
dec
push
dec
out
cmp
aas
sahf
mov
lock
jns
(bad)
jmp
mov
and
xchg
inc
mov
jbe
inc
and
pop
call
scas
jmp
jo
clc
push
cmp
mov
stos
sbb
sbb
shl
(bad)
inc
add
mov
xor
cmp
xchg
mov
xor
(bad)
(bad)
jmp
push
sub
cmps
fwait
(bad)
mov
lea
fist
neg
jmp
dec
(bad)
sbb
clc
pop
js
sbb
or
and
sbb
ins
add
call
and
push
pop
pop
out
outs
bound
pop
gs
push
(bad)
(bad)
(bad)
jmp
icebp
pop
das
mov
jl
xor
hlt
lods
jo
cmovb
push
test
xor
js
pop
cs
cmp
sbb
dec
retf
and
hlt
jecxz
imul
(bad)
(bad)
jmp
neg
rcl
xor
lahf
mov
pop
js
cmp
ins
fmul
(bad)
(bad)
call
outs
sbb
xchg
iret
les
je
sub
outs
push
sti
pop
(bad)
shl
(bad)
dec
sbb
dec
popa
mov
mov
lea
adc
jmp
cli
pop
inc
pop
mov
int3
ins
movs
add
jns
add
ins
call
cmp
(bad)
(bad)
jmp
sbb
out
pushf
loopne
in
lock
cmps
or
aaa
sbb
(bad)
add
(bad)
(bad)
dec
cmc
pop
pop
hlt
outs
and
cmp
call
loopne
cmp
add
pop
loopne
mov
cli
xchg
sar
data16
(bad)
loopne
in
test
das
in
(bad)
(bad)
(bad)
push
cmp
dec
mov
add
neg
push
cld
dec
scas
nop
xchg
jmp
ret
jne
inc
outs
add
ror
ror
sub
cs
add
(bad)
(bad)
call
push
ret
and
std
jmp
pop
test
stc
and
call
and
jecxz
adc
push
(bad)
mov
lods
es
(bad)
(bad)
jmp
xchg
mov
pop
(bad)
mov
pop
int3
pop
in
popa
mov
stos
add
inc
ins
cmovno
(bad)
inc
clc
ret
test
in
push
mov
and
dec
ret
dec
fs
sbb
lds
mov
(bad)
fwait
test
sub
push
in
fdivr
icebp
xor
call
dec
dec
test
push
ins
push
push
pop
mov
call
fcmovnu
sbb
push
(bad)
(bad)
(bad)
(bad)
jns
std
pop
idiv
dec
jmp
out
imul
jb
pushf
xchg
test
adc
loopne
(bad)
(bad)
(bad)
jmp
mov
dec
int
enter
xchg
fstp
dec
mov
mov
pop
cld
pop
test
repz
fistp
test
jo
mov
push
ficom
mov
sub
dec
addr16
cdq
jle
pop
lock
inc
clc
dec
add
ins
sti
jle
dec
xchg
aam
cmps
dec
jae
je
stos
imul
(bad)
jmp
push
sbb
je
sub
mov
movs
mov
push
(bad)
(bad)
(bad)
(bad)
jp
mov
clc
fwait
pop
repnz
fisttp
inc
fucomip
mov
adc
pop
sbb
shr
das
dec
scas
sub
sbb
xlat
stos
nop
jmp
xchg
(bad)
(bad)
(bad)
call
and
stos
sub
gs
sbb
popa
popf
pop
in
ins
mov
sti
cmp
aam
cmc
(bad)
dec
test
lock
jg
push
cmps
shr
mov
mov
(bad)
call
dec
xor
or
pop
jmp
aaa
int3
sahf
and
cld
mov
call
loopne
(bad)
mov
add
cs
(bad)
(bad)
jmp
add
push
jle
jae
sahf
sahf
and
jae
mov
out
lea
(bad)
(bad)
(bad)
jmp
xchg
inc
in
jo
lea
cmp
mov
push
jns
(bad)
(bad)
(bad)
call
dec
hlt
xchg
cmp
loope
(bad)
push
pop
jle
in
pop
js
sar
enter
cmp
(bad)
(bad)
jmp
aas
(bad)
xor
push
sbb
movs
adc
mov
jno
add
cmps
inc
nop
xchg
and
push
std
cmp
ins
int3
pop
jp
mov
lahf
sahf
sbb
(bad)
(bad)
call
loopne
in
iret
in
add
fadd
inc
mov
xchg
jecxz
repz
sti
call
cld
jmp
retf
xchg
(bad)
out
stc
mov
inc
cli
hlt
inc
jmp
nop
ds
cmp
adc
push
xor
or
shl
add
ret
call
push
es
adc
cmps
xchg
pop
sub
mov
jae
in
lahf
cli
mov
sbb
mov
or
dec
popa
pushf
xor
retf
lea
(bad)
(bad)
push
aad
mov
inc
push
jo
into
fstp
or
cmp
mov
mov
hlt
(bad)
out
cli
sti
cmovl
lahf
aaa
shl
add
out
pop
cmps
(bad)
(bad)
call
test
jns
pop
mov
cld
inc
or
rcl
jp
ins
inc
fidiv
into
mov
(bad)
(bad)
mov
pop
cmp
sbb
push
int3
or
repz
cld
dec
(bad)
(bad)
call
inc
xor
cmps
(bad)
jb
or
popf
lods
mov
mov
je
(bad)
(bad)
(bad)
inc
mov
fdiv
cmps
mov
leave
das
pop
ja
jbe
cdq
xchg
imul
fs
call
(bad)
jp
ret
lea
sub
xchg
sbb
adc
js
fdivr
push
and
out
jae
dec
out
int
dec
mov
(bad)
adc
mov
jmp
push
adc
(bad)
sbb
push
xchg
jne
cmc
mov
(bad)
(bad)
(bad)
jmp
popa
fnsave
fidivr
bound
add
arpl
fs
cs
dec
test
cmps
(bad)
(bad)
jg
sbb
xor
cli
(bad)
cdq
jmp
fiadd
idiv
test
jg
cmc
mov
(bad)
jmp
sbb
xchg
addr16
cmp
fldz
jl
call
push
pop
jle
leave
inc
dec
mov
(bad)
jmp
fsub
into
idiv
sub
mov
sbb
outs
mov
push
loope
(bad)
mov
shl
aaa
cwde
cdq
inc
daa
mov
adc
mov
popfw
adc
(bad)
jmp
jb
out
fs
jnp
in
stc
(bad)
fld
inc
push
push
xor
leave
pop
(bad)
mov
mov
clc
addr16
sbb
sar
(bad)
(bad)
(bad)
jmp
(bad)
enter
dec
jg
or
call
xor
pop
push
sub
(bad)
(bad)
inc
mov
mov
stos
xor
lods
adc
xor
inc
cmp
mov
jbe
(bad)
dec
cwde
jnp
jns
pushf
popa
sbb
ss
test
into
iret
leave
push
mov
jmp
in
retf
pop
inc
pushf
adc
jns
jb
fdiv
ret
mov
stos
xor
(bad)
(bad)
(bad)
inc
cmp
retf
mov
adc
xchg
and
inc
es
sar
dec
popf
movs
test
lods
cdq
pop
out
aad
jns
rcl
inc
(bad)
inc
data16
cmc
adc
cmp
and
sub
cmp
(bad)
call
mov
js
sahf
out
or
shl
fistp
cld
mov
(bad)
(bad)
(bad)
inc
mov
fisub
cmps
xchg
or
xchg
lds
ins
mov
sub
les
push
shl
movs
inc
mov
mov
mov
mov
mov
inc
cmp
stc
jmp
jns
xchg
out
lods
es
pop
les
jecxz
pop
(bad)
(bad)
(bad)
inc
mov
cmps
inc
pop
push
fwait
dec
xlat
call
add
cli
push
inc
out
xchg
push
pop
ins
inc
in
adc
sar
pop
(bad)
(bad)
(bad)
jmp
push
sbb
aaa
cmp
sub
into
adc
aam
adc
or
in
in
test
pop
mov
(bad)
(bad)
(bad)
call
push
sbb
enter
mov
push
jo
test
pop
fild
(bad)
(bad)
(bad)
(bad)
in
xchg
cmc
rol
in
mov
jl
cmp
jle
loopne
jl
lods
pop
inc
jo
(bad)
(bad)
(bad)
(bad)
(bad)
inc
pop
mov
cmps
stc
ret
mov
jmp
aad
ds
(bad)
(bad)
(bad)
jmp
pop
xor
pop
cli
mov
daa
test
fwait
pop
mov
mov
pop
addr16
jmp
and
jg
and
pop
out
dec
sti
push
inc
test
(bad)
(bad)
fstp
pop
push
pushf
fstp
pop
xlat
sbb
out
fdiv
aaa
xchg
xchg
jmp
(bad)
fcomip
jl
mov
push
int3
addr16
das
cmp
pop
fs
pop
stc
add
inc
(bad)
(bad)
(bad)
jmp
push
cld
out
sub
xor
xchg
retf
adc
xlat
cmp
das
sar
push
sar
cmp
inc
clc
cmp
add
cmp
and
mov
push
(bad)
(bad)
(bad)
inc
cmps
push
retf
jae
cmp
mov
add
fcomp
inc
stc
sub
push
push
stos
lock
(bad)
(bad)
(bad)
jns
jge
ds
rcr
cmp
mov
xchg
test
jbe
(bad)
(bad)
dec
jae
cmp
mov
popf
imul
mov
sbb
(bad)
(bad)
dec
jno
push
push
into
pop
push
stos
mov
jl
call
or
pop
(bad)
(bad)
(bad)
jmp
add
(bad)
adc
mov
add
fadd
fcmovne
mov
sbb
(bad)
(bad)
(bad)
dec
jge
cmc
test
pop
sub
or
adc
dec
cli
in
popf
in
adc
xchg
mov
(bad)
sar
inc
ss
push
out
aaa
mov
xlat
and
push
out
in
sbb
push
sti
scas
pop
loop
(bad)
(bad)
jg
inc
ret
pushf
push
cmp
cmp
scas
js
pop
cmps
dec
push
inc
rcr
(bad)
call
xchg
xchg
mov
mov
(bad)
stos
imul
sbb
xlat
push
mov
inc
add
or
std
cmps
pop
sbb
(bad)
(bad)
(bad)
call
push
push
outs
mov
retf
sbb
and
jb
imul
jg
push
push
test
(bad)
(bad)
(bad)
(bad)
jl
ds
lds
les
adc
jg
js
pushf
outs
frstor
jmp
jecxz
hlt
cmp
xchg
jle
sbb
dec
jl
jg
fisttp
jge
stos
push
push
dec
mov
movs
fs
dec
push
bound
(bad)
inc
das
jp
ja
cmps
cld
adc
aaa
sar
sbb
bnd
mov
xchg
cmp
call
pop
mov
mov
and
xor
(bad)
(bad)
(bad)
mov
adc
or
stos
push
imul
lds
pop
iret
cmp
pop
jp
pushf
mov
sbb
(bad)
(bad)
dec
repz
mov
aaa
adc
or
setp
lds
push
(bad)
(bad)
inc
adc
xor
push
cmc
(bad)
ins
push
dec
jne
dec
mov
fstp
(bad)
(bad)
(bad)
jp
ror
add
xchg
mov
jp
xor
cmp
push
dec
(bad)
mov
mov
push
pop
mov
(bad)
(bad)
(bad)
clc
es
mov
sti
jno
loop
or
das
int3
push
lahf
sub
call
(bad)
(bad)
call
sbb
inc
fs
(bad)
je
pusha
pop
(bad)
sti
mov
or
stc
shr
sub
fild
mov
sbb
pop
stc
test
fdivr
jmp
scas
cmp
push
not
retf
mov
dec
and
add
mov
(bad)
(bad)
(bad)
inc
adc
cmp
dec
mov
out
pop
push
sti
fidiv
outs
fidiv
pop
add
inc
(bad)
fidiv
sub
xor
cli
sub
sbb
pop
mov
mov
(bad)
(bad)
jmp
xchg
gs
and
aaa
in
lods
or
aas
dec
mov
inc
loop
push
mov
dec
int
add
dec
add
mov
push
dec
dec
not
xor
(bad)
(bad)
(bad)
dec
lock
sbb
(bad)
fst
push
pop
or
je
xchg
cmp
add
sub
jmp
ins
mov
aaa
into
call
movs
shr
xor
test
xchg
sub
add
xor
loop
mov
scas
push
(bad)
(bad)
(bad)
inc
js
jge
div
cmc
and
imul
cmp
das
cmp
sub
sub
jmp
stos
mov
mov
xor
push
mov
aaa
pop
push
or
push
ja
(bad)
inc
leave
xchg
imul
bound
cdq
mov
inc
(bad)
(bad)
mov
jo
lahf
out
and
inc
hlt
add
push
(bad)
(bad)
(bad)
call
retf
std
daa
and
ret
jno
pop
imul
xchg
scas
outs
xchg
jb
push
(bad)
(bad)
dec
scas
inc
test
xor
push
xor
pop
retf
lds
lods
inc
call
mov
scas
push
jle
sbb
inc
push
ret
loopne
xchg
(bad)
(bad)
(bad)
call
clc
sub
mov
push
xchg
je
and
cmp
xchg
imul
(bad)
call
jb
scas
(bad)
imul
cdq
mov
add
xor
lods
arpl
ud0
(bad)
jmp
cmp
adc
pop
xor
xchg
dec
out
adc
pop
xrelease
(bad)
int3
sub
pop
jnp
add
cmp
icebp
call
popf
push
mov
pop
jp
cmp
xchg
lock
add
call
inc
push
jae
pop
jbe
xor
test
test
cwde
xchg
enter
mov
and
mov
(bad)
(bad)
(bad)
call
jo
movs
xor
cmp
sub
cmp
cmps
jmp
inc
cmp
rol
(bad)
(bad)
(bad)
call
(bad)
sub
sub
xchg
imul
stc
push
or
push
and
mov
mov
sub
pop
ss
fmul
and
sub
xchg
dec
xor
stos
(bad)
(bad)
(bad)
inc
jne
adc
jle
xor
dec
in
dec
sbb
into
dec
xchg
call
(bad)
(bad)
inc
fisubr
mov
mov
mov
xchg
jp
and
call
cwde
pushf
aas
(bad)
(bad)
(bad)
jmp
int
jne
push
push
js
popa
out
ja
sub
and
adc
xor
mov
dec
call
retf
mov
out
cmc
push
test
aaa
dec
ins
(bad)
(bad)
in
push
scas
or
out
xchg
movs
mov
push
jmp
inc
adc
(bad)
popf
cmc
push
scas
mov
(bad)
pusha
fistp
je
mov
push
(bad)
or
fwait
jb
icebp
(bad)
call
and
test
retf
cwde
xchg
push
add
push
push
loopne
sar
(bad)
dec
in
jo
cmp
pop
pop
add
cld
inc
jp
loope
or
push
icebp
cmp
sar
fcomip
cmp
call
mov
push
xchg
xor
in
jp
jmp
lods
adc
arpl
movaps
or
out
ins
dec
sahf
jnp
(bad)
jmp
pop
mov
jp
cmp
stos
xchg
push
iret
sub
hlt
dec
ss
cmp
(bad)
mov
mov
add
or
mov
pop
call
adc
clc
dec
aam
sahf
adc
loopne
xchg
push
(bad)
jo
shr
mov
icebp
pop
fidivr
call
fdivr
or
popf
scas
mov
mov
(bad)
jmp
inc
mov
and
sub
call
sub
and
in
mov
jmp
gs
(bad)
(bad)
(bad)
push
and
cmc
and
(bad)
push
or
retf
push
xor
adc
clc
(bad)
cmp
mov
mov
xor
out
test
shl
hlt
xor
in
retf
stc
scas
stos
(bad)
dec
xchg
int3
inc
cmp
(bad)
(bad)
(bad)
call
mov
aad
jo
push
in
pop
iret
call
or
out
mov
jmp
jbe
movs
inc
mov
es
add
aaa
sbb
add
fstp
xor
lock
mov
or
sti
call
sar
or
xchg
jle
scas
sbb
aaa
movs
pop
arpl
test
jg
xchg
ins
mov
and
mov
fwait
jmp
ja
(bad)
(bad)
(bad)
call
test
mov
push
mov
imul
icebp
and
mov
(bad)
jmp
loopne
loop
(bad)
movs
aad
stc
pusha
dec
xor
retf
ja
xor
cdq
push
loope
dec
test
fnsave
push
dec
adc
xor
fs
pop
imul
ror
push
pop
inc
pop
mov
jns
rcr
xchg
and
lods
daa
and
cld
outs
and
push
sar
(bad)
call
es
mov
mov
in
xchg
jnp
pushf
add
inc
lods
fucomp
outs
call
hlt
(bad)
jmp
movs
dec
push
sbb
jg
mov
or
cmps
inc
cmp
add
ins
ror
cli
pop
popf
sub
into
clc
jbe
mov
call
and
cmp
add
mov
jg
push
mov
std
das
nop
mul
in
lods
or
or
mov
or
cli
(bad)
push
pop
ffree
cmp
cmp
and
push
ss
adc
mov
xor
aam
mov
jg
xchg
cli
into
aam
out
mov
hlt
movs
push
fwait
imul
cs
xor
retf
test
icebp
and
mov
cld
cwde
mov
sar
push
xchg
daa
dec
(bad)
(bad)
jmp
and
sub
xchg
bndldx
js
lea
xor
test
cmp
adc
sbb
push
pusha
stos
shr
inc
cmp
cdq
cmp
ficom
popf
idiv
jge
jmp
sbb
push
stos
std
jae
es
adc
push
sar
call
xor
ja
xor
js
and
adc
(bad)
call
popa
repz
mov
sbb
das
test
stos
outs
(bad)
(bad)
jmp
adc
sub
shl
and
mov
ret
and
(bad)
(bad)
jmp
test
xchg
call
scas
mov
xchg
in
popa
lods
mov
pop
ret
(bad)
call
out
and
fs
xchg
ja
movs
add
lea
int
and
mov
jle
(bad)
(bad)
push
pop
inc
frstor
pop
xchg
repz
cmp
mov
mov
jno
jg
(bad)
call
cmp
std
mov
movs
inc
test
dec
jle
(bad)
(bad)
jmp
out
cmps
mov
iret
add
lods
movs
jmp
mov
dec
jns
mov
or
mov
adc
retf
sub
or
and
(bad)
(bad)
(bad)
(bad)
fadd
cmc
add
cmp
jle
scas
scas
inc
(bad)
(bad)
call
idiv
(bad)
(bad)
inc
adc
mov
mov
(bad)
mov
fistp
mul
jmp
test
(bad)
jne
jmp
rcl
add
cmp
mov
cmp
(bad)
push
or
or
sub
push
addr16
(bad)
xchg
sub
data16
xlat
add
jns
push
mov
dec
sub
arpl
dec
add
fwait
icebp
cmp
stc
out
cmp
jmp
adc
cwde
jo
(bad)
jg
push
into
sbb
repnz
add
ret
mov
in
cmp
xchg
mov
(bad)
(bad)
call
stos
and
and
xor
test
(bad)
(bad)
(bad)
call
outs
sub
xchg
jns
stos
xchg
jb
sbb
pop
fs
rcr
push
inc
and
pop
in
dec
jo
xchg
(bad)
out
ins
mov
shr
adc
in
(bad)
pusha
fstp
mov
push
jl
(bad)
push
div
imul
jnp
cmp
(bad)
cli
jg
jo
pusha
and
pop
icebp
sbb
jbe
imul
jne
add
(bad)
(bad)
(bad)
call
sahf
dec
xor
fsub
js
aaa
fld
ja
cmp
push
sbb
inc
(bad)
(bad)
jmp
add
add
lods
punpckldq
sbb
push
mov
lock
jmp
mov
adc
jp
in
lock
xor
loop
gs
mov
mov
pusha
imul
adc
push
(bad)
or
ds
les
add
ins
fldcw
outs
xor
(bad)
dec
imul
call
push
adc
outs
cmc
mov
leave
cmp
(bad)
(bad)
(bad)
dec
mov
shr
pop
ss
adc
push
xor
ret
push
cmps
jl
stos
xchg
(bad)
jmp
shl
out
cmps
jmp
movs
in
mov
mov
sahf
add
(bad)
(bad)
inc
rol
sbb
adc
rcr
scas
sub
cmp
xor
std
(bad)
(bad)
jmp
out
ins
xor
js
push
cli
xchg
or
adc
jl
mov
or
cmp
stc
sti
std
mov
in
jno
push
test
clc
mov
addr16
(bad)
out
cli
push
ins
int3
je
adc
test
mov
in
daa
pop
or
(bad)
(bad)
fadd
aam
stc
test
(bad)
dec
push
sbb
mov
jmp
inc
dec
inc
push
ret
js
aam
inc
add
mov
pop
fwait
adc
lock
cli
sbb
call
arpl
add
lods
push
adc
push
not
icebp
(bad)
aam
mov
(bad)
(bad)
(bad)
call
sbb
fisttp
sahf
jo
pop
and
in
add
inc
popf
stos
clc
(bad)
(bad)
(bad)
call
imul
jae
ins
cwde
sub
dec
cmps
inc
inc
enter
cli
adc
(bad)
call
jge
test
jmp
jns
leave
repz
and
pushf
and
adc
cmc
push
(bad)
(bad)
push
(bad)
out
fistp
movs
sub
bound
and
stos
push
movs
pop
sub
xchg
push
or
jns
and
jo
sub
xchg
push
mov
leave
push
(bad)
(bad)
jg
data16
xchg
mov
mov
and
or
cdq
(bad)
(bad)
(bad)
call
xchg
pop
ins
mov
jne
movs
mov
xor
mov
out
xchg
push
test
into
sbb
(bad)
cwde
(bad)
(bad)
(bad)
jmp
or
je
inc
push
test
push
push
cmps
inc
inc
jnp
dec
test
or
mov
(bad)
jbe
stc
and
ds
inc
addr16
(bad)
jecxz
xlat
je
push
add
mov
dec
sahf
mov
ret
(bad)
(bad)
jmp
in
pop
enter
fadd
cmp
pop
xchg
mov
jg
pop
mov
in
dec
dec
(bad)
xlat
mov
jg
fs
lahf
and
(bad)
(bad)
(bad)
jmp
xor
push
xor
adc
xchg
call
inc
dec
cmp
(bad)
(bad)
push
dec
push
outs
mov
pushf
ins
lock
push
loopne
mov
iret
(bad)
sar
dec
or
(bad)
push
movs
add
sub
push
adc
popa
cmp
leave
push
lods
mul
scas
push
call
(bad)
mov
dec
cmp
cmps
pop
clc
jb
retf
sub
sub
sub
cmp
mov
xchg
inc
mov
std
cmp
pmaxub
aas
stos
push
fnstsw
stos
(bad)
(bad)
(bad)
(bad)
call
fisub
adc
cmp
mov
mov
cdq
and
push
mov
mov
jae
xchg
or
(bad)
(bad)
(bad)
call
clc
pop
das
int3
add
lods
(bad)
sbb
mov
repz
leave
rcl
call
les
shl
stos
pusha
clc
sbb
shl
(bad)
(bad)
(bad)
(bad)
sub
dec
xchg
xor
addr16
and
fwait
and
ror
sbb
(bad)
(bad)
dec
push
cmp
fdivr
jle
cmp
fwait
aas
bswap
in
dec
jno
push
mov
(bad)
imul
(bad)
jmp
add
cld
sbb
push
mov
in
imul
fwait
xchg
std
hlt
pop
ja
pop
cli
dec
push
(bad)
(bad)
mov
es
inc
lods
ror
cmp
mov
fwait
es
call
out
add
jns
and
xor
cdq
out
imul
loope
daa
dec
push
in
(bad)
(bad)
inc
gs
lods
pause
mov
mov
scas
adc
jae
retf
cmp
clc
mov
loopne
push
jbe
dec
ret
add
push
xor
(bad)
(bad)
call
mov
or
sub
arpl
(bad)
(bad)
jbe
cmp
ret
pop
push
inc
sub
(bad)
(bad)
(bad)
call
scas
xchg
ffreep
xchg
movs
ds
ds
push
sbb
adc
adc
ret
push
inc
(bad)
(bad)
(bad)
jmp
aas
pop
sar
in
fsubr
fistp
aas
sub
aad
jo
mov
push
pop
cmps
(bad)
(bad)
(bad)
jmp
sar
dec
dec
in
dec
pop
xchg
gs
push
lea
cwde
scas
clflush
call
ja
(bad)
(bad)
(bad)
mov
rcr
mov
mov
mov
ins
sub
call
cli
mov
imul
shl
sbb
inc
mov
inc
je
mov
(bad)
(bad)
(bad)
dec
cmp
sbb
inc
call
xlat
jg
mov
pop
xor
jmp
pop
or
(bad)
push
or
loopne
out
mov
sbb
cwde
dec
sahf
cmp
xchg
sar
sbb
(bad)
(bad)
(bad)
ds
lea
retf
daa
ins
jg
lahf
or
nop
mov
(bad)
enter
add
(bad)
(bad)
(bad)
cmp
inc
push
in
add
addr16
inc
ja
jge
mov
(bad)
(bad)
(bad)
jmp
(bad)
ds
push
call
out
lods
or
stos
retf
repnz
lea
ins
(bad)
(bad)
(bad)
(bad)
jmp
addr16
sbb
ret
dec
in
mov
xchg
repnz
fnsave
sbb
clc
(bad)
(bad)
(bad)
(bad)
jmp
pop
out
in
jbe
loope
fdiv
sbb
jecxz
mov
and
(bad)
(bad)
(bad)
(bad)
cmp
outs
enter
test
cli
(bad)
sti
(bad)
mov
sbb
retf
fimul
(bad)
(bad)
(bad)
call
sbb
repnz
and
movs
je
xchg
movs
ret
out
add
imul
repz
(bad)
(bad)
(bad)
js
mov
dec
dec
and
mov
xor
jge
pop
push
std
es
sub
bnd
into
mov
repnz
mov
ror
and
mov
jle
iret
ins
mov
xchg
lahf
and
or
fidiv
nop
enter
outs
cmp
mov
outs
cli
test
cmp
icebp
fiadd
xchg
sahf
(bad)
pop
ja
xchg
xor
iret
mov
adc
mov
pop
test
sbb
jns
mov
pusha
and
adc
test
or
fwait
sbb
(bad)
(bad)
(bad)
mov
cmp
adc
push
not
and
aad
and
mov
sbb
sahf
xor
(bad)
(bad)
call
adc
call
test
fistp
add
dec
mov
jo
sahf
popa
(bad)
(bad)
mov
or
icebp
jnp
push
ds
mov
add
pushf
ins
les
imul
call
jns
sti
or
jne
dec
fsub
dec
ret
adc
test
(bad)
(bad)
push
cmp
jmp
repnz
push
and
cmps
and
mov
std
(bad)
push
sar
push
cmp
aam
and
dec
xor
ins
(bad)
(bad)
push
lock
mov
dec
xor
jb
lahf
dec
ror
in
rcl
lahf
pop
mov
stos
(bad)
(bad)
(bad)
out
xchg
xor
cwde
mov
dec
das
cmp
mov
pop
(bad)
(bad)
jmp
stc
jge
popa
mov
stos
popa
mov
stos
call
or
dec
or
sbb
sub
mov
call
push
cmp
(bad)
cmp
pop
test
sbb
(bad)
inc
and
pop
sahf
adc
out
jnp
call
jmp
fimul
fdiv
push
xchg
(bad)
(bad)
(bad)
call
xchg
mov
pop
add
rcl
daa
fild
scas
pop
xchg
mov
mov
jmp
cs
(bad)
dec
lods
outs
(bad)
or
sar
sub
rcl
xchg
pushf
popa
fild
mov
dec
leave
jb
retf
mov
mov
fwait
adc
add
clc
add
xor
mov
(bad)
(bad)
call
inc
or
inc
xor
mov
inc
cmp
pushf
cmp
pop
(bad)
(bad)
dec
or
ficomp
sbb
sub
shr
ss
(bad)
(bad)
jmp
outs
test
or
movs
dec
out
clc
rsm
mov
xchg
mov
fldenv
mov
dec
lock
in
js
mov
enter
lock
test
cmp
push
or
dec
(bad)
(bad)
std
ss
mov
pop
mov
mov
mov
mov
pop
inc
cld
fistp
mov
jge
cmp
call
(bad)
cmc
(bad)
(bad)
(bad)
mov
xchg
add
fisttp
into
fcomp
add
xor
fdivp
xor
pop
std
(bad)
call
arpl
mov
mov
fisttp
adc
jno
retf
(bad)
cmp
pushf
into
(bad)
popa
jle
xor
(bad)
(bad)
(bad)
mov
jle
(bad)
(bad)
out
and
addr16
pop
jnp
iret
lock
imul
sub
jl
or
inc
cli
lods
ja
dec
or
push
mov
dec
cmp
jnp
and
mov
int
or
adc
enter
daa
cmp
ja
(bad)
jmp
cmp
cmps
push
or
cmp
inc
add
add
cs
(bad)
(bad)
inc
lock
jb
imul
adc
ja
cmp
sub
dec
mov
dec
dec
scas
dec
hlt
stos
add
push
jne
iret
jno
cdq
inc
jmp
add
rol
leave
xchg
inc
sar
and
bound
mov
jmp
arpl
adc
(bad)
js
fucom
aaa
aad
(bad)
in
push
popf
movs
and
sar
add
(bad)
jb
(bad)
movs
inc
out
mov
in
sar
int
popf
(bad)
cs
xlat
ins
mov
cwde
(bad)
(bad)
jmp
repnz
dec
arpl
mov
jg
mov
clc
add
(bad)
dec
lock
jg
pop
int3
cmp
scas
pop
stos
xor
(bad)
(bad)
(bad)
(bad)
sbb
int3
adc
jg
adc
or
sbb
cmp
fwait
(bad)
(bad)
(bad)
jmp
push
mov
sbb
lock
and
and
in
out
mov
mov
(bad)
mov
mov
xor
sbb
dec
push
movs
shl
and
out
cli
or
arpl
shl
add
arpl
lods
(bad)
xchg
loop
(bad)
(bad)
(bad)
call
test
jno
cld
push
pop
inc
inc
mov
mov
ds
fisubr
cs
(bad)
call
push
loope
movs
push
dec
mov
xchg
cs
dec
movs
jmp
enter
cwde
dec
enter
pop
pop
hlt
les
das
adc
loopne
adc
jp
or
or
fstp
inc
stc
jmp
xchg
fisubr
fwait
std
pop
inc
ss
mov
adc
je
dec
xchg
ret
leave
cld
lods
xchg
(bad)
jmp
fs
call
mov
dec
and
inc
retf
push
mov
(bad)
(bad)
(bad)
inc
mov
mov
mov
and
lods
or
cmc
jecxz
(bad)
sbb
jno
dec
aaa
test
dec
sbb
and
xchg
mov
outs
cmp
imul
add
fsub
jl
ja
(bad)
jg
sub
ret
jl
lock
cmp
jbe
inc
and
xor
jmp
and
or
js
pop
jb
push
clc
mov
popa
mov
loopne
test
(bad)
mov
movs
inc
xor
pushf
push
jmp
push
jno
sub
call
imul
in
dec
mov
ret
cmps
sub
(bad)
call
jbe
adc
cmp
fimul
inc
or
push
mov
jmp
dec
lock
in
arpl
jnp
cmp
(bad)
repnz
add
push
cld
rol
shr
icebp
xchg
sub
push
pop
fwait
repnz
cld
(bad)
push
bound
loopne
jno
mov
push
add
test
hlt
into
mov
sub
scas
add
cmps
imul
retf
push
sub
ret
pop
xor
movs
cdq
fdivr
(bad)
(bad)
jmp
cld
je
push
pop
push
or
inc
enter
test
out
stos
iret
and
jno
aam
out
jb
bound
pop
cmc
call
inc
mov
fwait
push
out
or
pop
xchg
clc
jge
mov
jns
(bad)
adc
addr16
jg
(bad)
jnp
mov
aad
or
add
jge
push
ins
mov
sbb
nop
sbb
or
(bad)
push
cmp
push
cmp
or
cmp
dec
addr16
mov
(bad)
push
into
mov
int
jo
mov
sub
mov
jecxz
(bad)
inc
fidivr
inc
lahf
lock
dec
addr16
call
push
push
jge
dec
call
(bad)
dec
sub
fdivrp
inc
adc
fld
(bad)
out
ins
das
push
pop
(bad)
(bad)
(bad)
push
ss
or
fnsave
(bad)
std
(bad)
movs
adc
mov
outs
jbe
inc
(bad)
(bad)
(bad)
jmp
je
shl
jl
imul
fwait
iret
out
dec
jmp
or
xor
(bad)
(bad)
(bad)
jmp
xchg
sub
or
inc
mov
mov
xchg
push
add
jns
(bad)
(bad)
(bad)
jmp
push
jne
jb
push
(bad)
pushf
aad
xlat
fwait
dec
inc
push
sub
jnp
ds
clc
mov
lods
cdq
(bad)
(bad)
(bad)
call
int3
mov
lahf
inc
jmp
xor
xchg
scas
or
xchg
lahf
cmp
(bad)
push
xchg
inc
xor
fbstp
pop
sub
outs
movs
fwait
or
adc
cmc
ficom
push
sbb
(bad)
call
push
jl
loopne
stos
bound
sahf
add
fstp
pop
inc
je
fdiv
(bad)
(bad)
jmp
jge
xor
rcl
test
add
test
iret
mov
dec
das
mov
jg
(bad)
dec
and
clc
dec
mov
mov
sahf
and
or
mov
fwait
sub
std
(bad)
(bad)
jmp
ins
xor
iret
jl
(bad)
hlt
and
xchg
mov
ja
ret
ret
cld
(bad)
mov
and
adc
inc
in
faddp
out
sbb
add
add
(bad)
push
cmp
mov
add
jge
(bad)
(bad)
(bad)
jnp
sub
stos
in
popf
cs
sahf
leave
ins
xor
push
or
jmp
adc
push
(bad)
es
mov
fxch
les
mov
nop
push
(bad)
jmp
mov
sub
enter
das
clc
mov
out
loop
mov
clc
sahf
enter
lods
sahf
out
dec
outs
mov
mov
pop
outs
xor
and
fdivr
(bad)
call
push
int3
add
stos
fist
scas
push
sub
ds
pop
jo
and
push
lods
jecxz
(bad)
dec
cmps
mov
xchg
mov
(bad)
(bad)
mov
ins
push
push
add
(bad)
mov
ficom
outs
and
or
sub
jb
(bad)
(bad)
(bad)
jg
dec
movs
xor
xchg
test
mov
nop
repz
mov
scas
(bad)
fs
jb
(bad)
(bad)
(bad)
push
fist
dec
call
mov
(bad)
xor
nop
fwait
outs
in
inc
fisttp
fstp
or
cwde
movs
dec
fwait
in
inc
xor
es
fiadd
(bad)
(bad)
(bad)
jg
out
(bad)
sahf
retf
push
(bad)
out
ds
xor
sbb
pop
cmp
loop
(bad)
(bad)
(bad)
inc
push
xchg
xchg
push
mov
(bad)
fstp
cmps
add
popa
xlat
mov
push
daa
mov
(bad)
dec
dec
out
in
xchg
mov
popa
out
xor
in
dec
ja
jg
mov
jl
stos
rcr
(bad)
(bad)
(bad)
jle
inc
dec
fld
imul
ret
lahf
dec
cmc
sbb
cwde
jmp
(bad)
dec
pop
(bad)
mov
pop
int3
mov
cmovs
cmps
hlt
fst
or
(bad)
call
cdq
jl
mov
and
shl
xchg
scas
sahf
jae
or
xor
clc
adc
pop
loopne
and
rcr
or
and
xlat
lods
mov
clc
repnz
xor
mov
pop
leave
out
aam
and
cli
fcmovbe
nop
cmp
(bad)
(bad)
inc
add
call
ret
xor
push
fnstcw
xchg
dec
dec
(bad)
(bad)
(bad)
(bad)
inc
push
out
mov
xor
and
inc
mov
out
fcmovu
mov
data16
mov
mov
jae
(bad)
(bad)
(bad)
call
fs
or
push
xchg
and
sub
mov
inc
arpl
(bad)
(bad)
inc
mov
lea
cmp
sbb
daa
push
jmp
(bad)
(bad)
dec
mov
cmp
fst
imul
inc
rol
out
xlat
ficomp
(bad)
push
or
arpl
ss
mov
xchg
mov
push
add
cmp
xor
sti
sub
(bad)
(bad)
call
adc
mov
loopne
and
push
cmps
sbb
or
add
sub
in
dec
sti
sub
lock
xchg
push
movs
scas
dec
adc
ret
cdq
inc
xchg
fstp
dec
(bad)
out
cli
jmp
mov
stos
mov
inc
outs
test
ficomp
and
clc
(bad)
(bad)
push
inc
xchg
xchg
xchg
call
in
clc
lea
mov
nop
fsubr
mov
dec
push
(bad)
jmp
cmp
mov
pushf
cmp
shl
mov
imul
inc
mov
pop
jno
pop
(bad)
call
out
(bad)
lods
adc
or
std
pop
sub
popf
mov
mov
(bad)
(bad)
(bad)
jmp
cmc
pop
out
sub
jg
ds
mov
cmp
loope
aam
or
(bad)
call
cmp
cmp
cmp
inc
mov
pop
adc
and
imul
int
xor
neg
fs
pop
inc
in
aas
jl
pop
inc
sahf
jg
jmp
repnz
mov
push
bound
pop
outs
(bad)
(bad)
(bad)
dec
sub
sbb
jecxz
jmp
jl
int3
inc
cmc
addr16
lahf
call
call
retf
fadd
xchg
dec
(bad)
call
paddusw
gs
cmps
adc
or
push
fucomip
mov
pop
frstor
push
pop
hlt
out
sub
retf
push
into
stos
jmp
xchg
shl
dec
jle
(bad)
(bad)
(bad)
jmp
iret
sbb
jno
add
push
sub
fdivr
add
addr16
(bad)
(bad)
call
push
ins
rsqrtps
lds
mov
and
imul
outs
outs
mov
(bad)
(bad)
jmp
and
mov
mov
inc
mov
inc
mov
dec
iret
mov
(bad)
inc
xor
sbb
mov
inc
mov
arpl
and
in
lods
les
outs
mov
jle
lds
and
mul
dec
setno
sub
out
and
pop
jns
pop
xor
test
push
mov
add
mov
int3
add
leave
(bad)
(bad)
(bad)
inc
dec
xchg
dec
lock
sub
(bad)
jne
pusha
push
loop
and
xchg
sbb
cli
(bad)
jmp
int3
mov
sub
loope
xor
sbb
sbb
dec
sub
push
sub
pop
(bad)
(bad)
jmp
stos
jae
jo
test
nop
pop
js
jge
jno
sub
mov
add
(bad)
(bad)
(bad)
jg
dec
(bad)
or
out
inc
mov
and
push
mov
mov
mov
mov
add
(bad)
(bad)
call
iret
add
cld
pop
adc
xor
int3
and
fxch
or
jb
cwde
stc
or
dec
adc
dec
inc
(bad)
mov
lahf
jo
je
(bad)
(bad)
dec
ret
sbb
pop
push
cmp
dec
mov
xchg
ficomp
and
(bad)
(bad)
mov
outs
lock
(bad)
aaa
lock
jns
in
enter
outs
mov
mov
call
mov
arpl
(bad)
lods
push
cpuid
ret
cdq
mov
jbe
xchg
push
jb
int
(bad)
call
aas
and
xchg
ror
lahf
cdq
stos
pop
xchg
dec
cmp
(bad)
mov
(bad)
(bad)
jmp
(bad)
mov
xlat
adc
fld
cmp
push
shl
jb
push
lods
(bad)
(bad)
mov
call
mov
sub
push
aas
jb
and
loope
xchg
mov
mov
retf
jle
repnz
adc
sub
mov
sbb
dec
and
cdq
cld
enter
inc
inc
push
dec
sub
(bad)
(bad)
(bad)
jmp
push
jns
xor
sbb
es
xchg
in
jle
sub
(bad)
(bad)
call
fild
xor
push
(bad)
and
push
adc
mov
ret
idiv
(bad)
(bad)
(bad)
jle
fdiv
inc
push
ror
xor
mov
jnp
mov
xchg
and
xlat
jmp
cwde
test
movs
push
(bad)
(bad)
(bad)
call
pop
fsub
cmp
pop
jne
js
xor
mov
pushf
mov
(bad)
call
mov
or
fs
outs
loopne
stc
shl
cmp
cmc
adc
or
push
scas
adc
pop
dec
xchg
and
repnz
xor
pop
dec
xchg
(bad)
(bad)
std
into
cmp
jmp
xor
test
cmp
xchg
int3
in
std
jno
scas
push
data16
inc
inc
nop
shl
(bad)
(bad)
(bad)
cmp
fstp
cmp
and
sub
loop
sbb
xor
out
pop
loopne
push
mov
jp
clc
jg
nop
jae
jl
adc
mov
or
cmp
adc
cld
(bad)
call
or
(bad)
xor
inc
test
mov
lock
lock
xor
pushf
pop
xchg
mov
push
sub
aam
sub
pop
push
jnp
and
inc
cld
call
fld
or
add
lods
dec
push
loop
inc
std
stos
sar
sub
(bad)
stos
add
(bad)
pop
pop
pop
test
inc
stos
inc
call
sti
adc
imul
xor
jbe
(bad)
(bad)
mov
cwde
push
or
fsub
mov
in
daa
cmp
test
mov
pop
repz
(bad)
(bad)
jmp
sub
stc
je
cmp
sub
xchg
push
movs
jb
mov
lods
pop
jae
adc
(bad)
(bad)
call
sbb
ins
mov
jb
push
jno
inc
jb
out
out
sbb
inc
push
jbe
sbb
fwait
lods
out
test
cmps
lock
pop
(bad)
(bad)
(bad)
jmp
int
xchg
popa
arpl
std
or
or
xchg
inc
xor
sub
push
jnp
stos
(bad)
(bad)
(bad)
dec
shr
lock
pop
push
jae
jmp
std
xor
mov
test
push
xor
sbb
add
sar
jne
xchg
(bad)
mov
(bad)
push
mov
nop
push
jge
inc
scas
int
outs
rol
xchg
jge
es
(bad)
(bad)
call
ja
call
dec
mov
sbb
xor
and
test
push
inc
arpl
retf
push
jne
(bad)
(bad)
(bad)
jg
std
jg
pop
lds
bound
mov
jb
adc
xchg
stc
in
dec
jns
outs
aam
(bad)
(bad)
(bad)
jmp
fsub
retf
in
test
int
scas
mov
and
push
adc
std
pop
add
push
sub
(bad)
(bad)
inc
cmc
push
sub
sti
push
sub
shl
xchg
fs
loope
loop
pop
out
(bad)
(bad)
inc
retf
pop
sahf
dec
pop
aad
les
mov
test
cmp
imul
(bad)
ss
(bad)
(bad)
(bad)
inc
sub
outs
(bad)
mov
dec
ja
jle
cld
lahf
clc
pop
cld
cwde
xor
shl
jg
call
sbb
sbb
mov
inc
icebp
jns
pop
fidiv
add
xchg
mov
sar
test
cmp
stos
call
xchg
mov
(bad)
(bad)
in
pop
jmp
mov
out
jge
leave
cmp
dec
ret
xchg
jle
sub
add
mov
or
push
mov
pop
(bad)
(bad)
jmp
pusha
fsubr
pusha
and
dec
mov
xor
(bad)
(bad)
mov
push
push
sahf
add
jo
adc
dec
mov
pop
sbb
test
mov
jl
sub
sub
pop
xor
pop
add
jnp
inc
(bad)
(bad)
jg
mov
sub
push
stc
aas
mov
inc
(bad)
xchg
push
dec
pop
into
in
jb
fisttp
inc
jbe
in
pop
or
repz
pop
adc
mov
mov
fidivr
ret
(bad)
(bad)
(bad)
(bad)
jmp
iret
std
cmp
xchg
std
adc
jl
(bad)
jmp
in
sub
fcomp
xchg
mov
jmp
hlt
inc
lds
sub
(bad)
jmp
stc
imul
mov
sub
iret
pop
cmps
sar
sbb
mov
(bad)
(bad)
jmp
push
or
sbb
mov
cmps
cli
fnstcw
xor
shl
cmp
mov
pop
fldcw
or
nop
mov
rcl
jg
jnp
jo
dec
loope
fstp
gs
xchg
js
jmp
les
mov
inc
jl
dec
push
data16
shl
xchg
jl
enter
push
mov
or
jns
dec
fisttp
sbb
aad
push
sub
pop
dec
fcmove
mov
cli
sar
and
push
aam
dec
xchg
push
int
and
xlat
jo
movs
outs
pop
cmp
scas
adc
sub
add
mov
nop
pop
add
sbb
inc
movs
xchg
dec
icebp
mov
(bad)
(bad)
jmp
jb
push
xchg
and
imul
xor
lea
sbb
jno
(bad)
(bad)
(bad)
js
adc
adc
loopne
mov
js
stos
pusha
xor
pop
lods
mov
cmp
(bad)
inc
sbb
inc
jo
test
lods
shr
push
arpl
adc
dec
fistp
adc
and
adc
jmp
cmp
cmps
(bad)
(bad)
(bad)
(bad)
jmp
adc
mov
fimul
in
sub
mov
mov
lds
(bad)
(bad)
jmp
inc
imul
repz
or
xchg
ret
pushf
jmp
(bad)
(bad)
jmp
dec
xchg
jae
push
rcl
jle
xchg
ins
pop
sub
push
nop
sar
(bad)
(bad)
(bad)
(bad)
(bad)
mov
in
sub
fnstcw
pop
sub
scas
mov
mov
(bad)
(bad)
(bad)
fadd
pop
jb
cmc
mov
push
add
in
sub
(bad)
in
mov
sar
inc
and
mov
add
(bad)
(bad)
push
movs
in
imul
ficomp
out
es
fadd
sbb
cli
and
inc
mov
cmps
into
jmp
icebp
add
outs
test
(bad)
(bad)
jmp
xchg
jo
ins
rcl
loop
cmc
std
cmc
mov
sbb
in
fwait
mov
add
jmp
call
push
push
pop
repnz
add
jnp
cmp
outs
pmovmskb
sbb
fwait
(bad)
(bad)
clc
push
in
mov
outs
test
dec
inc
scas
xor
push
jg
call
push
int3
push
xor
test
jl
or
jno
retf
test
clc
movs
fwait
stc
inc
or
lds
loop
sbb
mov
(bad)
(bad)
push
xchg
xor
ss
sbb
cmp
mov
out
pop
mov
cmp
sub
retf
(bad)
(bad)
(bad)
inc
and
sub
sub
adc
jp
mov
ins
(bad)
(bad)
cmp
jg
mov
clc
in
add
inc
data16
xor
push
repz
and
(bad)
(bad)
(bad)
inc
arpl
cmps
inc
mov
sbb
sub
imul
in
jne
fldenv
cwde
dec
mov
(bad)
cmp
mov
rcr
pop
outs
inc
pop
(bad)
(bad)
(bad)
(bad)
fimul
push
cmp
xor
mov
repnz
fdivr
sbb
pop
sbb
mov
mov
fild
clc
shl
dec
leave
jle
push
fmul
jmp
inc
mov
or
dec
lods
add
call
pop
mov
imul
mov
rcr
(bad)
rcr
imul
cld
add
jbe
(bad)
(bad)
(bad)
jmp
add
jle
pop
cmp
pop
sbb
imul
lahf
jns
(bad)
(bad)
push
cwde
sti
leave
and
add
mov
rcl
repz
aas
fldcw
sub
mov
(bad)
(bad)
(bad)
(bad)
clc
mov
xor
and
in
dec
mov
std
imul
(bad)
or
stos
(bad)
mov
(bad)
(bad)
(bad)
mov
movs
sbb
dec
iret
dec
inc
inc
xchg
fstp
es
aam
int
not
xchg
(bad)
(bad)
(bad)
mov
mov
dec
dec
push
int3
jg
xchg
jns
rcr
cmp
(bad)
fcomip
mov
rol
push
imul
cmc
xchg
xlat
aam
mov
mov
jg
(bad)
lock
jmp
xor
sbb
jmp
cli
call
cld
loopne
jbe
jb
mov
sub
stos
into
inc
out
scas
sub
(bad)
(bad)
push
cmp
(bad)
add
or
shl
push
es
les
(bad)
(bad)
(bad)
dec
mov
out
mov
sbb
and
(bad)
dec
inc
std
push
les
out
jbe
cmp
(bad)
(bad)
(bad)
call
lds
inc
rcr
movs
or
or
fcomp
imul
pusha
shr
(bad)
(bad)
cmp
pushf
jns
mov
jo
stos
adc
je
xor
into
pop
pop
sbb
inc
outs
jg
mov
xchg
xchg
mov
loop
mov
xchg
push
aas
jno
icebp
push
outs
lea
shr
das
cmp
(bad)
jg
dec
mov
cmp
fild
out
jmp
pop
mov
call
ins
add
mov
xor
mov
adc
sbb
into
push
dec
push
loope
loope
(bad)
inc
xor
push
into
jnp
inc
push
js
mov
sub
(bad)
(bad)
jg
cmps
xchg
inc
pop
pop
shr
lock
mov
aaa
push
inc
mov
push
(bad)
call
pop
scas
lods
fcmovnbe
ja
lds
pop
xor
mov
das
cmp
iret
jb
aaa
(bad)
(bad)
(bad)
call
adc
inc
fcomp
or
sub
ja
and
sub
xchg
xchg
inc
or
(bad)
inc
cmp
sub
jne
add
int3
out
cmc
rcr
xlat
mov
mov
(bad)
(bad)
(bad)
jmp
mov
jbe
ret
mov
mov
ret
repz
mov
xor
dec
mov
(bad)
fcomip
(bad)
dec
xchg
popa
pop
fisttp
out
loope
das
je
leave
adc
fs
jecxz
xchg
jmp
loop
sbb
or
pop
in
aam
push
repz
add
dec
or
call
(bad)
(bad)
call
les
jg
mov
sub
ffree
sahf
sub
cmp
dec
mov
mov
dec
xor
(bad)
dec
xchg
inc
mov
ja
imul
std
pop
sbb
dec
stos
and
(bad)
(bad)
(bad)
jmp
aad
test
mov
outs
loope
imul
cmp
dec
inc
jne
and
(bad)
(bad)
(bad)
inc
call
lds
loope
out
mov
jno
cwde
xchg
mov
div
das
cli
repz
int
(bad)
push
idiv
ins
sahf
and
js
loop
cmp
inc
adc
pop
push
xor
out
inc
call
sub
mov
add
(bad)
(bad)
(bad)
jmp
mov
sbb
xor
out
lds
sbb
outs
pop
loopne
mov
(bad)
(bad)
js
das
js
fadd
into
or
cmp
sub
push
pop
mov
ins
jl
loopne
aam
adc
(bad)
jl
jne
pop
sar
jecxz
mov
inc
out
(bad)
jg
(bad)
out
outs
xor
xor
fld
mov
or
enter
xor
leave
sub
out
cld
jl
cmc
loope
aad
fdivp
mov
adc
mov
aam
adc
jmp
xchg
movs
popf
imul
(bad)
(bad)
(bad)
jmp
cdq
lock
xor
jle
ret
aam
sbb
and
(bad)
(bad)
(bad)
call
xchg
enter
inc
test
mov
repz
shl
es
push
adc
(bad)
(bad)
(bad)
mov
cmp
add
sbb
lods
scas
mov
fisttp
(bad)
(bad)
(bad)
pop
imul
out
pop
cmc
scas
(bad)
(bad)
js
mov
sub
jp
into
cld
sub
add
(bad)
(bad)
push
xor
imul
in
push
clc
mov
ds
adc
in
mov
(bad)
jmp
dec
mov
xchg
fwait
leave
stos
scas
cmp
js
ins
pusha
xor
cli
jmp
loope
xchg
lods
sbb
(bad)
(bad)
(bad)
jg
(bad)
int
mov
adc
data16
sub
sub
push
leave
add
fwait
(bad)
(bad)
(bad)
(bad)
fstp
jae
xor
call
or
dec
sbb
jne
sbb
clc
bound
call
pop
or
aad
push
and
cmps
sub
sbb
(bad)
fdivr
(bad)
(bad)
call
sar
lock
jmp
mov
lods
push
fidivr
les
daa
mov
imul
imul
js
ins
xchg
mov
ror
popf
cli
xchg
or
cmps
adc
jbe
or
(bad)
dec
in
push
scas
inc
pushf
int
in
xchg
mov
inc
pop
leave
(bad)
sub
add
(bad)
(bad)
(bad)
jmp
outs
dec
mov
retf
fs
call
scas
cdq
push
sahf
cs
test
dec
mov
lds
cli
dec
mov
je
iret
xor
pop
and
cmps
out
xchg
fadd
pop
aam
(bad)
(bad)
(bad)
(bad)
cmp
jnp
stos
aam
ins
push
dec
cli
jge
cmp
jmp
cmps
add
mov
(bad)
(bad)
(bad)
inc
and
mov
das
push
(bad)
fcmovb
(bad)
cmp
mov
aad
addr16
pop
jne
outs
(bad)
mov
cmp
cwde
aam
imul
(bad)
call
or
mov
fnstcw
adc
pop
or
daa
daa
shl
and
cmp
(bad)
(bad)
call
cmp
xor
sub
or
or
lahf
jno
and
cmp
fidivr
jl
(bad)
(bad)
(bad)
push
jecxz
and
xor
pusha
dec
xchg
mov
jge
pop
shl
and
(bad)
(bad)
(bad)
call
and
sbb
xchg
dec
(bad)
xchg
mov
popf
je
rcl
push
(bad)
or
sti
shl
dec
sub
not
fisubr
loop
(bad)
jg
call
xor
mov
nop
aam
ins
leave
test
mov
xor
ins
cmc
aas
(bad)
(bad)
(bad)
push
xor
sti
aam
adc
div
pop
retf
adc
lock
mov
(bad)
jmp
and
(bad)
stos
fsubp
int
mov
shl
mov
dec
call
cmp
mov
rcr
jae
dec
lea
or
(bad)
mov
mov
xchg
je
test
mov
xor
pop
jle
cdq
mov
mov
or
sbb
cmp
test
js
jmp
pop
ret
mov
adc
xchg
jl
loope
mov
cwde
jne
clc
lea
aas
les
xor
sbb
mov
jne
push
das
test
jecxz
jbe
popf
fnsave
sbb
jbe
(bad)
(bad)
(bad)
jmp
cmp
sbb
loope
cmc
test
adc
test
fdivr
mov
outs
cli
pop
std
or
sub
mov
mov
pop
or
xor
inc
ret
jg
push
mov
dec
shl
cld
addr16
add
out
pop
les
xor
xchg
fidivr
es
(bad)
(bad)
(bad)
ss
mov
sbb
mov
sti
inc
push
mov
sbb
mov
loope
mov
pop
mov
shr
(bad)
(bad)
(bad)
dec
xor
sbb
mov
ss
popa
adc
xchg
inc
jp
inc
push
and
jecxz
(bad)
(bad)
inc
ret
sbb
loope
test
leave
mov
push
dec
pop
jmp
mov
mov
in
pop
in
dec
adc
mov
push
mov
(bad)
(bad)
(bad)
mov
pop
or
push
rcl
and
inc
and
je
jge
jmp
mov
jmp
(bad)
lods
js
pop
cmc
shl
xchg
leave
pushf
lods
in
hlt
pop
addr16
jnp
(bad)
(bad)
call
outs
mov
loopne
push
popf
and
xchg
jo
adc
rol
adc
jecxz
test
mov
retf
push
mov
(bad)
jp
aad
xchg
mov
pop
cmp
icebp
xchg
ss
jnp
jmp
or
inc
mov
jmp
mov
mov
(bad)
(bad)
(bad)
dec
ja
cli
ret
iret
push
bound
xchg
push
rcl
mov
dec
jmp
(bad)
(bad)
inc
lock
xchg
aam
cmp
dec
push
imul
je
xor
fmul
bound
pop
inc
jmp
imul
cdq
in
sub
test
pop
sbb
aad
(bad)
jmp
jge
lahf
test
xchg
enter
js
jmp
jmp
(bad)
(bad)
(bad)
jg
rcr
push
jne
aad
jg
xor
imul
sub
mov
inc
(bad)
(bad)
(bad)
jmp
jnp
jmp
push
scas
jp
adc
dec
(bad)
jecxz
leave
mov
(bad)
(bad)
(bad)
aas
test
int
and
mov
gs
dec
mov
(bad)
inc
test
dec
(bad)
mov
jl
sub
loop
sub
or
leave
push
adc
(bad)
(bad)
(bad)
mov
inc
(bad)
pop
pop
stos
jmp
inc
sbb
daa
adc
pand
pop
push
inc
mov
outs
cli
push
je
mov
add
repz
outs
sbb
xchg
lods
cwde
xchg
push
pop
mov
and
jmp
xor
shr
or
mov
sbb
cmp
jns
cmp
inc
inc
or
data16
fprem
stc
push
xor
sbb
(bad)
(bad)
call
jbe
sub
push
cmp
fisttp
fisttp
lods
mov
and
pop
(bad)
(bad)
(bad)
call
ret
jo
out
cmp
xor
dec
rcl
sub
sub
(bad)
push
ins
cmc
out
xor
rcl
mov
dec
loopne
(bad)
mov
mov
(bad)
push
js
jg
(bad)
push
xchg
dec
(bad)
scas
push
cld
ret
aam
rcr
jmp
dec
xor
mov
dec
sbb
scas
push
sar
imul
and
mov
ins
mov
push
lds
jne
aaa
bnd
xchg
fwait
(bad)
(bad)
(bad)
inc
jge
and
aas
pop
sbb
or
mov
dec
fld
es
xchg
sar
mov
aad
add
push
mov
jo
bound
sbb
cli
dec
xchg
aaa
push
mov
lea
shr
xchg
(bad)
jmp
cmps
enter
inc
test
rcr
(bad)
fst
hlt
add
fdivr
mov
sbb
fld
add
adc
(bad)
jmp
jp
out
es
mov
lods
in
daa
pop
int
lea
xchg
retf
retf
aas
cdq
adc
push
fucomp
(bad)
(bad)
(bad)
inc
add
mov
xor
outs
xchg
scas
and
test
hlt
cmc
jg
cli
inc
and
xchg
xor
(bad)
mov
sar
stc
jbe
(bad)
(bad)
jmp
mov
xor
dec
dec
pminub
fadd
(bad)
mov
sar
(bad)
cli
mov
sbb
test
cdq
popa
mov
mov
popf
call
out
or
(bad)
jmp
test
jp
fneni(8087
push
lods
xchg
push
fcomip
or
pop
std
scas
shl
pop
sub
(bad)
(bad)
(bad)
push
push
shl
hlt
imul
cmps
mov
sbb
repz
xor
or
push
sbb
add
call
js
loopne
jmp
xchg
cmps
(bad)
call
fsub
mov
mov
loop
clc
js
push
inc
rol
mov
cmps
out
js
addr16
or
enter
fs
or
sub
(bad)
jmp
cmp
out
dec
sub
mov
adc
and
adc
aas
or
dec
(bad)
call
mov
movs
push
pop
sub
mov
aam
and
test
(bad)
(bad)
mov
jp
or
(bad)
adc
push
sbb
shl
and
(bad)
(bad)
(bad)
dec
das
sub
aam
sahf
clc
(bad)
or
test
pop
add
outs
push
fidivr
push
(bad)
(bad)
(bad)
inc
rcr
in
mov
xor
imul
ret
(bad)
(bad)
(bad)
mov
iret
mov
fdiv
shr
loope
adc
jmp
push
sub
imul
test
push
jge
pop
ss
mov
cld
jno
push
jo
xor
jmp
aam
jl
push
aam
cmp
inc
popf
add
lods
and
add
stos
xor
(bad)
(bad)
mov
cmp
je
dec
or
jmp
or
clc
imul
ret
push
add
cmp
jmp
shl
mov
into
jle
mov
(bad)
(bad)
call
ret
lock
ror
xchg
ss
sbb
mov
stos
fldenv
scas
add
xlat
push
loope
das
sar
out
inc
jge
mov
das
test
xchg
mov
or
mov
jmp
xor
sub
mov
adc
sbb
add
(bad)
cmp
jge
pusha
adc
cmps
jmp
out
add
fwait
pop
mov
and
dec
ins
cdq
push
lods
out
jmp
and
test
adc
aam
pop
(bad)
(bad)
(bad)
call
push
cmp
mov
cld
xor
add
(bad)
cmps
push
inc
(bad)
iret
and
mov
push
add
add
xlat
jmp
sbb
(bad)
xlat
push
cli
call
(bad)
push
test
adc
repz
or
xchg
aaa
(bad)
adc
(bad)
pop
jmp
call
stos
test
cmp
stos
cmp
shl
push
adc
sbb
or
and
mov
fsubrp
iret
cdq
adc
inc
pop
adc
push
mov
or
mov
jecxz
mov
into
fild
jmp
xor
and
dec
nop
dec
rcl
test
cdq
or
mov
bound
es
add
jmp
fiadd
xchg
fwait
test
jg
push
fst
ins
stos
not
sub
jp
sbb
inc
sub
cmp
jmp
inc
mov
(bad)
call
inc
out
in
fidiv
pop
push
jecxz
xchg
add
(bad)
(bad)
(bad)
(bad)
jmp
or
hlt
shl
aas
cmp
mov
adc
and
dec
jg
sub
pop
cmp
(bad)
jmp
mov
ret
mov
rcl
mov
adc
push
(bad)
(bad)
call
inc
(bad)
(bad)
test
icebp
test
repnz
sub
(bad)
dec
xor
inc
mov
lahf
push
ss
adc
(bad)
jmp
clc
inc
inc
ret
pop
in
in
sbb
and
sub
mov
dec
out
jnp
fwait
mov
(bad)
dec
lods
xchg
adc
and
shl
jae
test
mov
clc
iret
(bad)
(bad)
(bad)
(bad)
dec
cmps
push
dec
xchg
pop
pop
or
retf
cmps
mov
loope
iret
repnz
std
dec
cld
(bad)
(bad)
(bad)
jmp
mov
inc
test
je
cli
pop
jne
xchg
imul
jl
xchg
push
(bad)
out
and
popa
in
add
stos
push
jle
xchg
clc
xchg
mov
fwait
(bad)
dec
repnz
and
inc
(bad)
fsub
or
dec
rol
mov
adc
into
in
xchg
ins
xor
(bad)
(bad)
(bad)
jp
mov
cmp
into
iret
outs
sbb
xor
sti
out
jg
mov
fadd
xor
or
adc
(bad)
(bad)
(bad)
(bad)
mov
icebp
xor
sbb
and
push
(bad)
retf
into
xor
lods
ins
shr
mov
(bad)
dec
mov
mov
jae
gs
sbb
(bad)
(bad)
(bad)
dec
retf
xor
sub
push
cmp
xor
xchg
add
xlat
cmp
(bad)
(bad)
(bad)
inc
jmp
aas
push
fiadd
mov
mov
xchg
jae
push
(bad)
(bad)
(bad)
jg
pop
inc
add
(bad)
and
popa
cwde
ficomp
sub
ins
daa
add
sbb
sbb
(bad)
(bad)
dec
xchg
sahf
data16
sbb
ins
je
sub
daa
aas
loopne
xor
jmp
imul
jg
(bad)
mov
cmp
cmp
jnp
in
xchg
mov
cld
inc
(bad)
(bad)
jg
retf
es
jae
imul
ret
mov
aas
and
(bad)
inc
call
pop
out
iret
xchg
xor
in
fcmove
fdiv
jbe
jmp
sbb
arpl
add
mov
xchg
cmovge
call
and
sub
cmps
cmp
popa
rcl
ja
hlt
clc
call
add
call
and
call
push
sbb
cmp
sub
sub
inc
sbb
push
int
retf
jg
(bad)
call
stos
(bad)
mov
push
test
(bad)
mov
add
ss
or
pop
lock
dec
or
lea
jl
shl
xrelease
jne
mov
(bad)
xchg
ds
or
jns
or
mov
sbb
mov
out
and
and
mov
mov
pop
push
in
(bad)
(bad)
(bad)
inc
movs
push
mov
test
test
jno
mov
(bad)
and
push
out
mov
fs
shl
fisub
cwde
addr16
sbb
jmp
out
ss
push
and
xor
rcl
mov
mov
and
ins
xchg
inc
movs
sbb
mov
mov
xchg
shr
call
ds
in
cmps
lods
inc
mov
xchg
fwait
push
(bad)
outs
js
leave
(bad)
jmp
es
hlt
mov
jl
dec
jmp
xchg
dec
xchg
stos
dec
(bad)
call
std
pop
bound
dec
adc
enter
out
aaa
mov
jae
xchg
test
je
retf
retf
mov
jl
pop
sub
inc
retf
(bad)
lock
(bad)
(bad)
(bad)
inc
cmps
jg
sub
or
push
rcl
pop
es
and
lds
push
cld
inc
pushf
and
add
dec
sbb
inc
dec
mov
call
mov
jmp
sub
neg
jno
mov
jne
dec
pop
jg
jo
imul
test
xlat
call
int
pop
ins
dec
(bad)
push
(bad)
(bad)
(bad)
jg
xor
(bad)
clc
and
pusha
push
mov
cmp
lods
push
jnp
jp
(bad)
or
xchg
(bad)
(bad)
call
mov
stos
dec
fild
loope
xor
lahf
pop
jae
pop
aas
sbb
xor
lahf
inc
(bad)
(bad)
(bad)
push
mov
mov
cmp
push
xchg
scas
(bad)
fsub
mov
xor
(bad)
jg
call
pop
lods
(bad)
push
mov
and
cmp
sar
out
push
sub
neg
push
sub
and
aad
(bad)
(bad)
jmp
cmps
icebp
push
and
cmps
cmp
stc
jnp
cmp
out
jecxz
in
sub
adc
dec
mov
mov
jnp
enter
xchg
or
jmp
gs
stc
push
dec
and
cs
iret
imul
test
xchg
jp
xor
jmp
popa
pop
loop
xchg
or
push
test
icebp
ror
inc
sub
xor
shr
(bad)
(bad)
(bad)
call
dec
cmp
outs
iret
loopne
mov
imul
mov
fld
ss
mov
loope
test
push
inc
ins
xchg
scas
into
mov
loope
push
jl
sub
pop
or
cmp
sbb
add
cdq
push
bound
into
(bad)
(bad)
(bad)
push
mov
sub
and
push
sbb
push
or
cmp
jp
xchg
(bad)
scas
clc
(bad)
call
fs
adc
inc
pop
mov
push
imul
(bad)
(bad)
(bad)
call
sub
movs
leave
loope
inc
push
sahf
popf
cmp
mov
xor
scas
jb
pop
inc
(bad)
call
inc
mov
cmp
xchg
(bad)
repnz
cmps
sbb
or
xor
jbe
add
and
push
sub
(bad)
cld
call
lock
call
call
dec
dec
shl
or
and
(bad)
push
sbb
data16
sbb
not
xor
or
jnp
jns
xchg
adc
lahf
stos
adc
jo
jecxz
shl
sub
cmp
jecxz
jl
mov
pop
into
data16
out
jecxz
xor
jle
add
(bad)
(bad)
jmp
mov
das
nop
xchg
movs
xor
inc
std
push
or
inc
sub
add
pop
mov
mov
(bad)
call
jbe
or
mov
cmp
xchg
dec
dec
xchg
ja
and
pop
mov
xchg
out
or
push
xor
push
hlt
sbb
pop
xchg
mov
or
fcmove
sub
cmp
sahf
test
(bad)
addr16
shl
sbb
dec
adc
adc
jb
gs
dec
(bad)
(bad)
call
xchg
push
imul
cld
and
dec
or
iret
push
xor
lock
jmp
jmp
clc
ret
jp
cmp
xor
int3
imul
jno
sbb
and
(bad)
inc
xchg
mov
jmp
pop
in
adc
mov
loopne
mov
daa
sub
(bad)
mov
pop
mov
ja
aas
clc
scas
out
mov
shl
aad
call
and
and
xor
shl
push
mov
and
adc
or
bound
stc
and
stos
outs
push
in
out
add
dec
(bad)
fcomip
jmp
and
in
or
push
cld
push
or
stc
sub
je
sbb
(bad)
(bad)
push
add
int3
xchg
cdq
push
and
shl
jmp
daa
xor
outs
outs
fwait
test
or
or
sbb
pushf
arpl
(bad)
cmp
call
gs
xchg
adc
sub
test
outs
push
inc
popf
mov
push
std
(bad)
jl
(bad)
(bad)
(bad)
call
out
push
ret
test
nop
xor
jg
cmp
adc
add
ja
(bad)
sbb
jle
shr
or
xor
sbb
dec
and
lds
ret
and
jg
jmp
not
adc
daa
pushf
inc
aaa
fcomp
test
(bad)
(bad)
call
mov
mov
or
or
sbb
push
cmp
(bad)
(bad)
jg
ins
mov
into
push
mov
inc
fiadd
or
cmp
mov
addr16
(bad)
(bad)
(bad)
fcomi
int3
aas
sbb
shl
fs
add
fstp
popa
lds
(bad)
(bad)
inc
sub
jecxz
or
fucomip
adc
sbb
call
xchg
leave
ins
xlat
cmp
adc
rol
push
cld
xor
shl
jmp
test
xlat
daa
sahf
mov
sahf
xchg
(bad)
jmp
jmp
lods
adc
(bad)
xor
xchg
out
imul
sbb
in
mov
jns
cdq
sub
push
fcomp
pushf
(bad)
(bad)
(bad)
jmp
dec
jb
fiadd
dec
ins
add
xchg
mov
popa
sbb
push
(bad)
jae
out
inc
sub
and
(bad)
(bad)
call
or
scas
push
cld
imul
adc
cmp
les
arpl
(bad)
(bad)
(bad)
inc
add
mov
daa
mov
inc
hlt
dec
int
or
pop
jge
inc
scas
out
das
mov
adc
(bad)
(bad)
(bad)
call
aad
loopne
cld
push
int
cli
outs
dec
xchg
cmps
inc
and
syscall
cmp
(bad)
(bad)
(bad)
jmp
push
cdq
push
je
adc
push
fidivr
sbb
nop
daa
daa
neg
mov
push
add
jno
test
in
inc
call
jmp
jns
adc
sub
push
dec
add
jno
jmp
add
mov
clc
test
adc
xor
or
push
fld
mov
jns
into
dec
stos
(bad)
mov
push
mov
mov
push
ja
mov
jmp
adc
repnz
and
bound
(bad)
push
lock
mov
cmps
movs
clc
in
imul
int3
mov
imul
mov
adc
pop
int3
mov
jle
jns
ja
xchg
loopne
pop
inc
adc
or
and
sar
(bad)
(bad)
jmp
loop
and
jb
and
test
inc
loopne
in
int
ins
dec
and
xchg
scas
cli
(bad)
jmp
jo
fdiv
test
pop
pop
stos
fs
(bad)
cmps
mov
(bad)
(bad)
(bad)
call
push
dec
rcl
aaa
push
shl
ins
jb
mov
fistp
cmp
add
or
ret
(bad)
jmp
lea
push
and
es
adc
and
mov
mov
shr
inc
xor
mov
jns
or
ffree
cmps
loop
ja
(bad)
(bad)
fisttp
add
jne
jge
mov
xchg
cwde
xor
ret
push
jb
xor
(bad)
(bad)
pop
in
mov
clc
retf
cmps
arpl
adc
mov
out
jg
mov
inc
cmp
icebp
and
sahf
lds
and
in
daa
addr16
imul
(bad)
ja
sbb
fdivr
xor
cmp
inc
mov
mov
dec
(bad)
(bad)
(bad)
(bad)
mov
fstp
fld
aaa
xchg
xchg
sbb
int3
in
daa
sub
(bad)
dec
jns
pop
popa
mov
cmps
aaa
icebp
mov
mov
in
leave
mov
jg
ret
inc
cmps
aaa
(bad)
(bad)
(bad)
push
lods
adc
mov
cmp
movs
scas
sbb
in
sub
xchg
inc
loop
xor
push
loope
inc
aas
int3
nop
in
sbb
mov
fmul
inc
mov
dec
jmp
mov
mov
cmps
mov
or
push
jo
bound
(bad)
mov
movs
into
call
out
pop
(bad)
fcomip
jmp
mov
cmp
or
enter
je
push
cwde
xchg
(bad)
(bad)
(bad)
(bad)
jle
push
push
ins
mov
mov
inc
dec
push
stc
mov
sub
adc
add
(bad)
(bad)
(bad)
jmp
cld
aad
mov
sub
push
cwde
scas
clc
pop
xchg
push
mov
loop
sub
(bad)
(bad)
dec
inc
arpl
mov
gs
aas
bnd
push
call
(bad)
(bad)
(bad)
ffree
pop
or
outs
popf
xchg
cmp
adc
or
and
push
cwde
out
xor
clc
out
loop
(bad)
call
jb
mov
dec
rcl
(bad)
pusha
lods
xchg
push
lods
push
sub
test
(bad)
(bad)
jmp
imul
lds
cdq
rcr
repnz
in
nop
div
xchg
jno
jo
and
cmp
sbb
dec
(bad)
dec
outs
in
ss
call
mov
mov
js
(bad)
(bad)
(bad)
push
jp
xchg
test
cmps
add
outs
mov
jno
xchg
stos
inc
or
cld
(bad)
(bad)
dec
jmp
inc
xchg
dec
jmp
retf
aas
mov
or
clc
call
or
movs
inc
nop
mov
add
sub
adc
test
xor
das
call
arpl
add
scas
sub
jg
fst
or
xlat
cdq
jmp
lahf
inc
cmp
js
ret
pop
jmp
(bad)
(bad)
inc
cmp
lock
loop
iret
push
adc
or
xchg
push
mov
(bad)
jmp
mov
rcr
jns
mov
(bad)
dec
cmc
mov
(bad)
(bad)
(bad)
call
sbb
sbb
cli
popf
mov
out
clc
imul
dec
sbb
add
inc
(bad)
(bad)
(bad)
call
fisub
xchg
push
cmp
xor
rcl
pop
ret
jnp
(bad)
ins
out
push
sub
stos
(bad)
(bad)
(bad)
inc
pop
jbe
adc
ss
int3
bound
dec
out
sbb
jmp
stc
es
cld
stos
shl
xchg
addr16
jg
mov
data16
rcl
fld
mov
dec
(bad)
(bad)
(bad)
(bad)
call
mov
or
add
xor
fs
push
adc
inc
cmp
iret
jbe
scas
(bad)
inc
jecxz
and
sbb
lea
(bad)
(bad)
(bad)
push
inc
xor
jo
stos
scas
and
out
cmp
ret
jno
(bad)
mul
push
iret
pusha
js
or
fsubr
(bad)
or
(bad)
jg
pushf
add
dec
jp
iret
test
les
fwait
cmp
push
and
inc
sub
xchg
loop
xor
scas
sub
add
mov
imul
cmp
mov
fbld
add
cld
jge
loopne
stos
sbb
repz
push
cmp
call
mov
xchg
sbb
pop
scas
push
(bad)
adc
call
xor
mov
and
inc
int
(bad)
push
cld
jne
jp
mov
repnz
sahf
fldcw
ret
stos
xchg
out
aas
sbb
or
lahf
iret
(bad)
inc
mov
sbb
cdq
adc
call
or
(bad)
mov
pop
xor
xchg
add
xor
inc
pop
ins
push
outs
jge
ffreep
xchg
xchg
(bad)
fcomip
jle
adc
push
shr
data16
or
pop
int
jecxz
(bad)
(bad)
jmp
cmc
or
add
pop
xor
fdiv
adc
sbb
and
sbb
pop
and
mov
push
test
sbb
and
ja
mov
call
clc
mov
and
jmp
add
rol
xchg
(bad)
(bad)
(bad)
push
pop
sub
test
rol
fidiv
pusha
test
(bad)
in
cmp
nop
(bad)
call
sti
mov
xor
dec
test
out
(bad)
(bad)
(bad)
(bad)
call
fwait
loop
mov
adc
bound
xor
aam
mov
cdq
mov
jb
dec
jg
mov
call
lea
xchg
pop
repz
sub
push
jle
xchg
jg
inc
std
clc
and
jne
test
dec
les
inc
data16
int3
jecxz
xor
(bad)
(bad)
jg
mov
int
inc
ds
pop
shl
mov
xchg
adc
dec
retf
(bad)
jmp
push
int3
xchg
jge
mov
jnp
jp
es
pop
ds
add
cs
(bad)
(bad)
dec
push
jp
call
ins
pusha
mov
cmc
and
(bad)
inc
addr16
movq
inc
xor
pop
jl
mov
jns
pop
push
mov
(bad)
(bad)
push
dec
das
ficom
ins
xchg
inc
in
push
in
or
or
mov
daa
(bad)
(bad)
(bad)
dec
xchg
jae
sub
xchg
outs
out
dec
jbe
inc
mov
xchg
in
popf
pop
lock
(bad)
(bad)
jg
mov
mov
imul
lods
aaa
sub
fs
(bad)
dec
inc
pop
dec
mov
cmp
and
dec
test
iret
sbb
sub
inc
mov
div
fist
movs
iret
push
or
rcl
dec
(bad)
stos
(bad)
movaps
bound
mov
(bad)
(bad)
(bad)
push
or
sahf
push
scas
xchg
cdq
mov
mov
in
clc
std
les
jb
movs
aas
fucomi
jg
inc
std
cld
sub
shl
and
(bad)
(bad)
call
adc
jo
adc
es
inc
and
sbb
and
push
sub
pop
inc
or
scas
dec
jecxz
mov
repz
(bad)
mov
jle
and
mov
fnstcw
push
(bad)
(bad)
(bad)
call
in
in
dec
out
pop
or
adc
shl
sbb
pop
shr
(bad)
(bad)
push
out
popf
outs
int
ins
(bad)
pop
ret
icebp
mov
and
adc
sbb
xchg
ja
pusha
(bad)
(bad)
(bad)
call
call
and
pop
sbb
jo
je
xchg
push
pop
clc
into
or
add
inc
add
(bad)
sub
cs
mov
(bad)
call
mov
leave
mov
mov
pop
fisub
mov
mov
dec
jae
jp
dec
int3
sar
jbe
lock
cmp
dec
jo
inc
into
sbb
(bad)
(bad)
(bad)
dec
rol
lods
shl
xchg
fcom
retf
adc
and
(bad)
(bad)
inc
jb
sbb
fdiv
mov
xlat
and
pop
xchg
lahf
adc
mov
(bad)
(bad)
(bad)
call
and
mov
(bad)
aaa
cwde
add
stos
or
js
xchg
xchg
or
add
mov
daa
dec
mov
(bad)
(bad)
push
add
popa
ret
mov
dec
adc
or
sahf
iret
cld
outs
and
shl
xor
or
bound
xchg
inc
dec
sub
jno
into
retf
and
mov
jmp
cs
jg
(bad)
(bad)
call
xlat
xor
adc
movs
pop
mov
xor
jb
inc
popa
cmp
mov
in
std
(bad)
jmp
sar
shr
xchg
cmc
(bad)
movs
xchg
(bad)
(bad)
call
mov
adc
mov
mov
fs
js
mov
fcomip
cmp
adc
jmp
sbb
in
push
mov
test
fucomip
sub
lods
sbb
lds
push
cld
(bad)
(bad)
push
bound
pop
pop
popf
mov
inc
(bad)
in
xor
(bad)
cdq
leave
sub
jmp
inc
ds
mov
hlt
int
vmulsd
jae
mov
push
(bad)
(bad)
inc
clc
(bad)
and
iret
adc
and
aad
mov
test
iret
xchg
inc
(bad)
(bad)
(bad)
(bad)
fild
xchg
dec
push
cmps
mov
inc
icebp
mov
xchg
nop
push
mov
pop
cmp
push
mov
(bad)
jmp
jae
pusha
jbe
daa
test
pop
push
jge
xchg
call
fwait
add
push
xchg
or
sti
jmp
push
mov
or
sub
rol
mov
xor
(bad)
fist
add
mov
out
mov
cmp
inc
xchg
jne
jne
(bad)
call
adc
ret
gs
xor
ins
jne
dec
xor
stos
dec
jecxz
pop
(bad)
(bad)
mov
pop
pop
out
or
push
nop
enter
(bad)
xor
jae
sub
inc
in
push
out
fidiv
mov
xchg
add
adc
icebp
(bad)
(bad)
(bad)
push
fcmovbe
pop
add
and
arpl
pushf
mov
rol
test
push
out
sti
cmp
sar
dec
loope
dec
repz
mov
inc
js
std
xchg
movs
retf
jg
mov
imul
jg
stos
xchg
movs
jns
mov
mov
out
mov
adc
ret
xor
loop
fild
cmp
dec
lods
mov
cmp
(bad)
(bad)
(bad)
call
imul
jle
pop
xchg
ja
add
retf
and
rcl
dec
leave
cli
(bad)
(bad)
jmp
jge
call
sar
arpl
lods
movs
leave
pop
or
(bad)
jmp
xor
jle
fwait
ja
xor
test
xor
pop
ss
(bad)
jmp
cwde
push
dec
test
pop
jle
sbb
mov
add
daa
mov
jp
adc
xor
out
call
call
(bad)
outs
ins
pop
aaa
inc
ja
inc
jb
mov
xor
add
add
(bad)
call
(bad)
mov
outs
add
sbb
sbb
into
sbb
push
aaa
ret
repnz
mov
mov
daa
adc
iret
in
jmp
jmp
(bad)
(bad)
push
popa
jmp
fist
sti
or
add
sbb
(bad)
div
push
out
cmp
(bad)
(bad)
inc
push
sbb
loope
and
outs
cmp
inc
pop
(bad)
xor
cld
in
iret
xor
inc
(bad)
(bad)
(bad)
(bad)
cmp
sbb
xchg
mov
or
push
out
imul
jecxz
inc
fimul
(bad)
dec
pusha
jb
push
stc
and
push
xchg
ins
rol
ds
pop
sbb
mov
push
cmp
inc
mov
ins
enter
js
arpl
ins
jg
jp
mov
cld
rol
(bad)
jg
jmp
sbb
in
cli
rol
inc
sbb
dec
xlat
mov
mov
(bad)
(bad)
(bad)
dec
ja
inc
cwde
and
or
add
xor
inc
das
daa
sahf
(bad)
(bad)
(bad)
inc
js
inc
jg
mov
cmps
jle
jmp
std
movs
out
inc
aaa
sbb
adc
call
jmp
jne
mov
shl
(bad)
cmp
push
jbe
cmp
(bad)
scas
pop
hlt
pop
and
rol
adc
std
adc
jmp
(bad)
inc
jg
adc
test
xor
inc
xchg
rcr
mov
test
(bad)
(bad)
(bad)
inc
mov
pop
mov
pop
fild
ja
cmps
jb
xchg
hlt
pop
(bad)
(bad)
jmp
jno
adc
sub
retf
jbe
push
and
xor
pop
inc
cmp
aam
add
stc
and
out
cmps
outs
stos
push
aad
or
cmps
call
xchg
cmp
fwait
(bad)
shr
aam
mov
or
xchg
cmp
push
pop
jne
cld
je
sbb
add
cmps
movs
push
adc
(bad)
adc
test
jns
push
out
test
add
sbb
scas
push
pusha
fcomp
bound
aaa
rcl
icebp
mov
movs
sub
call
jp
leave
and
fisttp
jno
adc
xor
mov
fwait
and
jle
(bad)
(bad)
(bad)
(bad)
push
outs
je
cmps
mov
fs
js
popf
jo
or
scas
adc
pop
xor
fnstsw
scas
jmp
sub
and
les
cmp
cmc
cmps
pop
into
sahf
lea
mov
das
(bad)
(bad)
(bad)
jmp
aad
(bad)
stc
mul
add
sbb
or
test
mov
jb
leave
cmp
xchg
arpl
xchg
sub
rcr
popf
lods
mov
and
sbb
and
mov
lea
mov
hlt
(bad)
call
mov
aad
jno
sbb
add
pop
xor
jns
(bad)
(bad)
(bad)
mov
stos
adc
gs
icebp
mov
adc
mov
call
not
(bad)
aam
js
jle
retf
xor
sub
pop
xchg
ret
in
stos
(bad)
loopne
mov
imul
pop
mov
gs
sbb
xor
mov
jmp
adc
(bad)
(bad)
(bad)
call
adc
imul
jno
ror
mov
push
jge
add
push
es
mov
jmp
not
jmp
and
lea
nop
and
pushf
mov
or
push
cwde
(bad)
(bad)
(bad)
dec
fist
(bad)
jle
sti
hlt
cmp
in
dec
mov
int
stos
and
(bad)
loopne
cld
lock
(bad)
(bad)
(bad)
push
lds
sub
mov
into
push
(bad)
popa
jns
xchg
das
push
jno
mov
loopne
(bad)
call
call
lock
xor
mov
sub
ror
call
add
dec
loop
nop
mov
sub
mov
repz
(bad)
(bad)
(bad)
call
ret
mov
std
mov
es
cs
ds
popf
pusha
das
cmp
and
lock
(bad)
(bad)
call
xor
loop
mov
pop
sub
scas
xor
aad
lock
mov
cmp
mov
(bad)
jg
fld
repnz
push
into
aam
repnz
mov
dec
not
aaa
lea
or
jl
adc
(bad)
(bad)
(bad)
stc
jae
sub
mov
stos
inc
sbb
test
push
sbb
sbb
sub
or
call
rep
mov
mov
(bad)
(bad)
(bad)
call
push
jno
or
xchg
lahf
rcl
jg
add
add
stos
dec
call
into
and
(bad)
(bad)
(bad)
call
dec
xor
call
pusha
fstp
add
test
bound
jmp
imul
pop
and
int3
ss
fidiv
dec
adc
add
cbw
cmp
jmp
inc
push
add
pop
test
mov
cmc
jecxz
es
(bad)
call
cld
and
pop
jmp
rcl
sbb
adc
jnp
mov
push
aas
dec
jmp
cmps
cmc
inc
xor
mov
popf
(bad)
cmp
sar
jg
inc
cmc
or
fdiv
cwde
inc
jg
dec
repnz
mov
(bad)
call
out
mov
mov
or
cmp
shl
cmp
cmc
cwde
nop
iret
push
sahf
mov
(bad)
cmp
dec
out
adc
cmc
(bad)
stos
inc
in
pop
inc
add
cmps
add
adc
jg
dec
push
loope
pop
adc
outs
mov
sub
scas
sar
(bad)
(bad)
call
pop
pop
jle
lahf
test
jno
mov
fdivr
mov
dec
jl
cmps
pop
fwait
das
cli
(bad)
dec
stos
cli
into
pusha
xchg
pop
cmp
ret
lds
dec
pushf
or
push
mov
pop
stc
pop
sub
push
and
enter
inc
and
jae
xchg
aas
mov
push
lea
pop
loope
xchg
xor
mov
(bad)
jmp
xor
mov
sub
dec
dec
test
and
fdivr
cmp
pop
ins
jge
push
dec
lock
cmp
mov
ja
jmp
loope
fs
xor
mov
outs
xor
push
imul
sbb
daa
inc
push
leave
loopne
stos
pushf
retf
jp
adc
xchg
jl
xchg
(bad)
(bad)
(bad)
call
jmp
xchg
dec
out
xor
loopne
mov
shr
dec
enter
(bad)
shl
(bad)
(bad)
(bad)
inc
mov
adc
push
ds
ja
and
mov
mov
mov
jno
(bad)
(bad)
jmp
(bad)
cli
xor
mov
test
cmp
andps
sub
pop
fwait
(bad)
(bad)
(bad)
out
sbb
ror
stos
test
xor
mov
icebp
in
enter
sar
(bad)
(bad)
inc
and
push
sub
xchg
cwde
adc
lds
dec
push
ins
call
add
inc
das
out
(bad)
jmp
dec
adc
pushf
or
adc
fisttp
(bad)
jge
mov
push
ja
cwde
dec
in
adc
call
outs
inc
lea
int3
xchg
cli
(bad)
cmp
nop
lock
mov
(bad)
imul
fstp
mov
jmp
inc
ds
dec
inc
xchg
sub
je
call
inc
sbb
pop
mov
aad
mov
imul
rcr
mov
sar
cli
(bad)
call
lea
jg
ds
outs
pop
jmp
(bad)
(bad)
jmp
out
sub
in
jae
add
dec
fisttp
add
sub
retf
(bad)
(bad)
inc
hlt
cmp
addr16
cwde
cmp
pop
xchg
jo
mov
jge
pop
and
(bad)
(bad)
jmp
in
cmp
retf
mov
scas
and
xchg
rcr
xor
sbb
adc
jmp
sub
push
mov
cld
jns
or
enter
out
sub
jmp
or
mov
fldenv
fild
cli
add
movs
add
nop
loop
dec
in
sub
bnd
in
nop
inc
in
(bad)
jmp
or
fcomi
fadd
push
xchg
outs
cmp
call
xor
inc
jg
(bad)
jmp
popa
les
sub
fnsave
aaa
xor
inc
jb
fmul
popf
adc
idiv
(bad)
(bad)
call
shl
mov
cmp
push
xchg
retf
aam
mov
(bad)
ins
xlat
inc
xor
(bad)
(bad)
jmp
pop
test
in
mov
cmp
mov
out
mov
ss
push
cdq
test
push
movs
sub
push
out
push
cld
call
mov
jnp
pop
sbb
ret
ins
(bad)
retf
int3
imul
mov
jmp
cmp
bound
int
scas
dec
mov
sbb
mov
ret
(bad)
out
into
jle
xor
mov
scas
and
cmp
popa
adc
out
mov
(bad)
(bad)
(bad)
jl
jge
jns
ins
and
cld
mov
xor
js
outs
mov
xor
and
(bad)
call
or
(bad)
out
jns
inc
loop
mov
mov
(bad)
lods
fimul
sub
dec
xor
mov
jge
push
hlt
nop
push
ret
push
aam
test
lods
and
int3
(bad)
lods
dec
aas
mov
movs
xor
int
pop
pop
sbb
cmp
(bad)
(bad)
dec
iret
nop
(bad)
data16
cmc
mov
xchg
jl
test
popf
not
mov
(bad)
mov
jnp
and
inc
inc
and
mov
xchg
jle
mov
iret
(bad)
mov
mov
pop
aam
fisttp
call
outs
mov
aam
lods
sub
idiv
movs
scas
outs
(bad)
(bad)
(bad)
jmp
fwait
lods
leave
fdiv
aam
fistp
adc
push
(bad)
adc
mov
push
push
mov
push
fild
xor
and
and
mov
sti
inc
inc
cld
xor
and
sub
(bad)
push
sbb
aad
add
push
adc
leave
push
retf
push
and
push
(bad)
(bad)
(bad)
push
imul
inc
sub
mov
stos
cld
cmp
xor
popa
jle
clc
jmp
xchg
retf
(bad)
(bad)
dec
pop
sbb
push
dec
xchg
ficomp
dec
adc
mov
fwait
jae
mov
jg
adc
sub
(bad)
fwait
js
push
ficom
mov
cld
(bad)
(bad)
mov
mov
(bad)
cwde
pop
adc
sar
jo
cmps
inc
icebp
shr
ret
jmp
or
in
xchg
dec
xor
lock
dec
loopne
(bad)
(bad)
(bad)
inc
jmp
cdq
xchg
mov
pop
pop
aas
push
je
mov
std
fs
add
jne
outs
(bad)
(bad)
(bad)
inc
xor
mov
fisub
vunpcklpd
dec
fidiv
fnsave
pop
shr
mov
int3
mov
(bad)
(bad)
(bad)
cmp
fsub
stc
gs
inc
adc
adc
fprem
adc
xchg
ins
nop
(bad)
(bad)
(bad)
(bad)
jle
mov
push
(bad)
sar
or
jbe
and
xchg
fs
xchg
scas
mov
lahf
(bad)
(bad)
out
pop
cmp
sbb
(bad)
(bad)
(bad)
dec
cmp
mov
out
sub
jmp
push
sbb
jno
inc
(bad)
jmp
int3
mov
dec
sti
sub
(bad)
ficom
mov
push
clc
push
jge
mov
ret
(bad)
mov
fcmovb
dec
jae
inc
xor
icebp
push
clc
sar
(bad)
(bad)
call
ins
stos
dec
sar
retf
dec
push
aas
(bad)
push
cmp
and
pop
xchg
lock
dec
and
(bad)
jmp
sub
mov
(bad)
fidivr
adc
jge
add
(bad)
(bad)
fcomp
xor
mov
add
mov
imul
(bad)
jg
push
jmp
imul
stos
mov
ins
ins
mov
adc
cld
xchg
out
fwait
movs
pop
jmp
shl
push
shl
cmp
xchg
sbb
call
sbb
jno
lock
xor
in
xchg
xchg
mov
adc
xchg
mov
(bad)
dec
retf
pop
les
popf
sti
test
cs
or
(bad)
out
push
mov
inc
fadd
xchg
mov
or
jp
sub
xchg
dec
(bad)
(bad)
(bad)
call
push
adc
std
test
mov
lds
ror
idiv
cmp
call
fistp
ret
cmp
imul
mov
mov
lods
mov
arpl
sbb
jbe
int3
push
(bad)
or
cdq
pop
or
test
(bad)
jmp
jle
out
lock
adc
pop
pop
sar
push
out
ss
dec
out
pop
pushf
pop
popf
cld
inc
mov
ret
or
clc
pop
ds
jl
mov
jmp
int
mov
and
cmps
mov
lahf
jmp
test
pop
sbb
stos
xchg
inc
mov
pusha
pusha
dec
cmps
sub
imul
jo
adc
(bad)
(bad)
call
xchg
cmp
sub
fnstsw
lea
cmc
(bad)
(bad)
jmp
push
imul
lods
push
stos
cmpps
push
cs
push
jle
shr
fcomip
(bad)
(bad)
(bad)
call
addr16
jmp
push
imul
or
jl
push
jno
out
or
(bad)
(bad)
dec
ja
push
add
sbb
sub
mov
jne
sbb
(bad)
(bad)
(bad)
inc
pop
and
adc
xchg
add
fcomp
addr16
aad
bound
jnp
shl
push
xor
(bad)
dec
add
pop
dec
add
mov
push
cli
fadd
(bad)
mov
xchg
push
xor
mov
jb
adc
xlat
or
cmp
mov
in
dec
push
fdecstp
fstp
rcl
stos
movs
or
or
(bad)
(bad)
push
rol
jmp
cmps
push
dec
or
inc
pusha
add
push
mov
rol
cli
push
cmp
arpl
fnsave
hlt
xlat
repz
call
loopne
les
adc
cmp
rcr
daa
dec
fcom
es
(bad)
(bad)
(bad)
(bad)
call
rcl
cmp
xchg
imul
arpl
(bad)
imul
dec
mov
add
(bad)
(bad)
(bad)
cmp
lods
cdq
fwait
(bad)
ss
cmp
imul
outs
fidiv
(bad)
jmp
jp
repz
arpl
bound
daa
cmp
pop
call
inc
cli
pop
sbb
push
cmps
mov
mov
stc
push
jo
(bad)
(bad)
(bad)
dec
xor
outs
pop
adc
push
clc
cmp
(bad)
iret
aas
stos
pop
dec
lods
push
retf
mov
lea
sbb
call
movs
sbb
add
xchg
cmp
jg
sar
es
(bad)
(bad)
(bad)
fdiv
mov
test
xor
adc
xchg
outs
sub
out
dec
sub
inc
call
ss
leave
(bad)
or
in
in
enter
cmp
ins
xchg
dec
and
inc
pushf
pop
fmul
adc
arpl
mov
jecxz
out
and
jmp
adc
mov
cmp
fisubr
mov
dec
pop
xor
pop
fst
es
jb
movsx
dec
sub
es
and
cld
(bad)
inc
repz
mov
jae
in
outs
or
jl
pop
adc
hlt
sbb
rcr
cdq
cmp
mov
shr
(bad)
jg
dec
add
cmp
cmp
push
or
ins
ret
xor
sbb
mov
inc
(bad)
jmp
inc
cmps
inc
scas
dec
(bad)
jbe
adc
xchg
fdiv
fisub
pop
inc
cmp
push
(bad)
push
outs
xchg
push
mov
fcom
push
cmp
out
mov
mov
icebp
aaa
xrelease
mov
xchg
dec
xor
aam
fmulp
and
jmp
aam
(bad)
(bad)
(bad)
inc
mov
adc
pusha
icebp
or
retf
xor
adc
lock
pop
call
(bad)
(bad)
jmp
or
inc
sbb
ret
inc
nop
pop
push
mov
mov
jecxz
cli
call
mov
push
retf
inc
movs
sub
fdiv
pop
adc
shl
xchg
inc
sub
ja
sbb
inc
(bad)
(bad)
(bad)
call
lods
sub
cmp
fisubr
adc
cmp
jb
jmp
(bad)
(bad)
(bad)
inc
in
pop
xor
inc
aad
push
adc
div
aam
mov
or
pop
sar
mov
xchg
push
and
mov
int3
mov
aam
(bad)
(bad)
(bad)
push
adc
inc
sbb
mov
mov
mov
in
gs
int
js
clc
jns
(bad)
(bad)
(bad)
js
aaa
adc
arpl
xchg
jmp
clc
push
fnsave
(bad)
(bad)
(bad)
(bad)
in
std
sub
or
xor
shl
or
or
sbb
lock
xlat
mov
dec
push
(bad)
(bad)
(bad)
dec
shl
sub
sub
sub
int
arpl
push
jae
xchg
(bad)
jg
(bad)
(bad)
dec
mov
sbb
aad
xor
in
xchg
cwde
push
mov
and
(bad)
(bad)
(bad)
call
and
cli
add
arpl
adc
loopne
pop
mov
(bad)
mov
dec
shl
or
retf
lahf
pop
sbb
adc
call
stc
adc
xchg
inc
pop
jg
mov
test
jecxz
out
and
cwde
(bad)
sti
mov
pushf
xchg
add
icebp
mov
mov
add
sbb
sbb
pop
cmp
(bad)
call
(bad)
fcom
add
push
sbb
mov
into
inc
cwde
jle
sub
mov
std
(bad)
(bad)
(bad)
dec
jle
xchg
push
es
jne
jb
mov
lea
(bad)
dec
fs
pop
mov
(bad)
mov
adc
bound
jmp
push
sbb
mov
mov
int3
pop
and
mov
clc
or
leave
loope
aas
inc
mov
sub
mov
inc
mov
(bad)
(bad)
fcomip
dec
inc
daa
push
(bad)
aam
push
dec
ins
inc
les
inc
push
mov
cmp
aas
aad
scas
cli
(bad)
jmp
jmp
add
adc
or
push
jnp
(bad)
mov
(bad)
(bad)
(bad)
(bad)
cmp
dec
retf
adc
cmp
pop
push
mov
aaa
mov
sub
stos
popa
movs
repz
(bad)
(bad)
push
iret
sub
cld
jp
xchg
fsub
or
add
dec
push
enter
push
pop
sar
mov
cld
jmp
jg
mov
cmp
or
popf
into
daa
pop
(bad)
cmp
(bad)
call
push
repz
and
outs
ret
popf
mov
movs
xchg
in
out
cld
mov
mov
add
jecxz
push
ja
push
xor
scas
rcr
jge
add
mov
(bad)
dec
inc
mov
rcr
or
lods
(bad)
(bad)
(bad)
jg
inc
inc
and
popa
pushf
dec
jo
add
dec
icebp
pop
pushf
aam
jb
(bad)
int
fistp
call
fstp
je
sub
(bad)
call
(bad)
(bad)
call
jbe
push
outs
mov
mov
retf
rcl
or
mov
cwde
cli
mov
sub
outs
inc
shr
xor
std
or
push
push
add
(bad)
(bad)
jmp
repnz
mov
not
sub
not
fwait
lds
mov
cmps
into
xlat
cli
enter
inc
jo
(bad)
(bad)
(bad)
jmp
and
inc
cmp
add
push
out
ja
sbb
lock
(bad)
(bad)
(bad)
ficom
loop
movs
or
pop
sub
sub
mov
mov
call
(bad)
(bad)
(bad)
jg
sti
stos
inc
pop
into
cmp
iret
cmp
add
jno
les
mov
cs
pop
(bad)
(bad)
(bad)
call
sbb
jp
and
mov
sti
add
(bad)
xchg
jg
mov
int
(bad)
(bad)
(bad)
js
push
fimul
sub
sub
mov
or
pop
push
xchg
jae
cld
(bad)
(bad)
jmp
push
popf
retf
mov
pop
pop
pop
lock
jae
lds
push
mov
int3
xor
cmc
(bad)
call
mov
mov
cmp
pop
xor
xchg
mov
push
xchg
(bad)
adc
jmp
push
iret
ret
test
pop
lods
adc
mov
xor
fwait
(bad)
call
in
mov
jmp
sub
or
(bad)
(bad)
(bad)
fist
or
test
sub
jg
fs
sub
(bad)
cmps
cmp
lds
(bad)
(bad)
(bad)
ds
inc
cdq
add
icebp
jb
fwait
lahf
cmp
fild
int3
ror
(bad)
jmp
xor
push
bound
cmp
shl
push
loop
(bad)
int
iret
and
cmp
enter
outs
(bad)
mov
pop
and
xchg
ins
je
out
lds
movs
test
addr16
mov
into
outs
(bad)
(bad)
(bad)
jmp
popa
push
je
mov
inc
hlt
out
aas
xor
adc
hlt
cld
daa
test
mov
shr
add
add
shl
sbb
dec
(bad)
(bad)
(bad)
call
dec
dec
rcl
jmp
pop
adc
xchg
fwait
jno
movs
cli
dec
mov
fadd
popf
pushf
mov
jg
dec
mov
(bad)
(bad)
mov
call
shl
sti
out
loopne
push
xchg
pop
repz
(bad)
(bad)
jg
mov
jp
jae
mov
(bad)
out
loope
xor
jne
fimul
lods
rol
(bad)
(bad)
(bad)
inc
cld
out
sub
hlt
ss
cwde
push
dec
push
shl
sbb
xchg
mov
jp
adc
inc
ss
mov
pop
stos
pop
push
mov
push
shl
mov
imul
adc
into
jb
jl
jbe
test
repz
std
lds
test
jmp
adc
(bad)
(bad)
(bad)
inc
dec
aam
sbb
shl
popf
jmp
cld
cmps
and
out
inc
jns
repz
cmp
(bad)
(bad)
jmp
or
(bad)
in
daa
jecxz
hlt
lea
in
ss
mov
enter
(bad)
jmp
mov
test
mov
in
push
into
pop
push
adc
cs
xchg
sti
inc
scas
leave
lods
in
in
(bad)
(bad)
(bad)
(bad)
cmp
pop
xor
lock
outs
stos
mov
inc
nop
pusha
inc
retf
cmp
push
outs
sbb
(bad)
(bad)
push
mov
jne
mov
arpl
(bad)
ror
dec
or
sub
(bad)
(bad)
jmp
sbb
dec
mov
lahf
jge
and
fwait
push
push
cmps
sti
dec
mov
scas
sub
mov
(bad)
dec
inc
dec
mov
mov
(bad)
sbb
xchg
jmp
outs
sbb
scas
push
test
loope
xchg
pop
les
cwde
in
fdivr
(bad)
(bad)
jmp
mov
mov
xchg
and
std
add
into
adc
mov
retf
dec
rcr
push
adc
push
pop
cs
push
outs
inc
jle
sbb
mov
shl
pusha
cld
push
in
(bad)
(bad)
(bad)
jmp
sbb
scas
mov
movs
xor
jbe
mov
jnp
mov
sub
(bad)
(bad)
(bad)
inc
inc
stos
mov
frstor
icebp
dec
xlat
and
jecxz
pop
xchg
(bad)
(bad)
jmp
scas
and
cmp
iret
xchg
pusha
add
push
inc
adc
and
test
(bad)
dec
jnp
(bad)
push
out
mov
sub
aaa
push
aaa
xchg
ja
xor
(bad)
(bad)
jg
adc
fidivr
jmp
jb
dec
ins
pushf
out
in
(bad)
(bad)
inc
mov
lahf
addr16
imul
(bad)
fdiv
nop
jle
xchg
(bad)
(bad)
dec
push
mov
js
fdivr
xchg
pushf
cmp
adc
cmps
(bad)
(bad)
fcomip
xchg
or
sub
and
les
pop
jb
stos
(bad)
(bad)
push
fild
jo
ja
jae
int
jb
pop
mov
inc
sbb
loope
(bad)
(bad)
(bad)
push
jo
rcl
add
pop
dec
enter
jo
in
mov
inc
es
(bad)
out
cli
(bad)
mov
mov
cli
xor
adc
sub
enter
xor
jmp
or
iret
std
mov
mov
inc
loopne
rcl
adc
fisubr
call
pop
and
inc
dec
or
cmp
inc
gs
cmc
jns
sbb
(bad)
call
aas
push
cmp
inc
ret
sub
fsubr
mov
inc
call
jmp
les
das
sti
stc
cs
xchg
pop
inc
(bad)
(bad)
push
add
call
lods
jbe
arpl
xchg
loope
sub
cmp
(bad)
(bad)
(bad)
jmp
lds
add
pop
and
cmp
ds
sbb
and
xchg
pop
(bad)
(bad)
(bad)
(bad)
std
pop
scas
fnstsw
int
push
xchg
sub
jns
jle
cmp
rcl
inc
xchg
pop
dec
sar
jmp
out
es
mov
cdq
dec
jg
(bad)
dec
sbb
sbb
mov
loop
cmps
(bad)
aas
(bad)
push
cmp
in
push
jmp
(bad)
(bad)
(bad)
fsubr
inc
(bad)
les
repnz
lahf
aaa
dec
sub
dec
mov
stc
xchg
adc
xchg
xchg
jmp
sti
into
jno
inc
mov
inc
retf
aas
ins
jmp
arpl
btr
outs
or
enter
cmp
out
mov
icebp
push
shl
out
inc
test
or
(bad)
call
sbb
test
jns
sbb
dec
ins
fucomi
cmp
jg
test
lahf
out
adc
fnstcw
(bad)
(bad)
(bad)
std
arpl
loop
not
sbb
adc
ins
sub
jge
cld
mov
jne
test
(bad)
(bad)
(bad)
call
es
stos
in
cs
or
mov
out
xlat
sbb
cs
(bad)
(bad)
jmp
adc
adc
into
cmp
pop
mov
sub
sbb
dec
mov
push
pop
jb
adc
push
mov
shr
cli
push
cmp
aaa
mov
repz
retf
add
(bad)
(bad)
jmp
adc
inc
pop
jp
mov
outs
or
repz
pop
sub
cmp
mov
jg
ret
ja
lods
test
mov
or
push
mov
add
stos
(bad)
xor
cmp
or
dec
jp
loope
ja
ret
cmp
xchg
in
imul
cmps
inc
xchg
mov
(bad)
mov
and
sub
clc
or
or
repz
(bad)
jge
jg
call
das
int3
aaa
push
mov
leave
dec
or
rcr
fnsave
imul
fs
mov
and
push
fdiv
dec
xor
dec
adc
mov
xchg
dec
push
(bad)
push
dec
inc
mov
add
or
cmp
xor
(bad)
jmp
mov
jge
outs
fisttp
jo
lock
icebp
je
aad
inc
(bad)
call
shl
stos
scas
fs
out
test
pusha
push
pop
pop
ret
(bad)
(bad)
(bad)
push
ret
lea
xchg
sar
mov
out
dec
mov
frstor
(bad)
(bad)
(bad)
dec
lods
int3
das
or
mov
fld
imul
imul
and
aam
in
and
(bad)
(bad)
(bad)
inc
stos
jo
cmps
repz
loope
jl
ficom
aaa
pushf
pop
pop
pop
xchg
lea
mov
xchg
scas
(bad)
(bad)
(bad)
inc
mov
pop
ins
fbld
int
(bad)
loopne
cmp
(bad)
adc
leave
and
cmp
xchg
add
dec
ds
bswap
xor
mov
mov
(bad)
jg
lods
add
jb
mov
jge
and
inc
in
loopne
fcomp
scas
cli
call
cwde
idiv
jns
jmp
fbld
scas
call
inc
std
call
inc
and
fwait
jae
enter
das
or
inc
mov
push
or
push
jne
lock
fiadd
inc
cmc
fild
push
pushf
sub
cli
addr16
jmp
push
ret
iret
aad
sbb
mov
das
push
and
push
sbb
fdivr
popa
rol
in
and
(bad)
(bad)
jmp
xchg
pop
push
add
xchg
icebp
aaa
outs
cmp
cmp
arpl
lock
cmc
sbb
(bad)
jmp
cwde
lock
mov
sbb
jg
push
dec
(bad)
mov
fld
(bad)
(bad)
dec
mov
jns
jo
dec
pop
test
adc
sbb
mov
pop
test
sar
(bad)
cdq
pop
xor
das
clc
(bad)
dec
sar
sti
pop
dec
into
jle
mov
inc
outs
xlat
adc
retf
and
push
mov
mov
and
add
ss
mov
shr
setne
shl
(bad)
(bad)
inc
les
cmp
popf
mov
pop
push
cwde
mov
adc
sub
cwde
shr
(bad)
(bad)
dec
sbb
retf
daa
jge
xlat
or
js
loop
lock
(bad)
(bad)
(bad)
mov
rol
and
addr16
inc
push
mov
rcl
cmc
jmp
fprem
add
cwde
ret
push
idiv
mov
outs
(bad)
(bad)
(bad)
call
cwde
pop
ja
cli
push
(bad)
mov
sub
and
lds
in
or
leave
cli
(bad)
(bad)
(bad)
mov
pop
sbb
cmp
and
adc
lea
xchg
(bad)
(bad)
(bad)
out
pushf
xchg
push
dec
outs
xchg
and
mov
adc
es
mov
rol
or
dec
push
fidiv
mov
(bad)
push
push
push
pop
icebp
in
xchg
xor
call
(bad)
(bad)
jmp
or
lahf
xor
jnp
and
sbb
xor
fcomp
cdq
mov
(bad)
(bad)
jmp
push
call
aaa
ja
aaa
cmp
sti
push
popa
retf
inc
ins
dec
jge
icebp
(bad)
call
push
fisttp
into
out
mov
dec
jge
ficomp
mov
int3
jge
test
movs
(bad)
(bad)
(bad)
(bad)
(bad)
mov
push
inc
lods
sbb
jge
jg
fcom
mov
mov
push
imul
cmp
(bad)
cmp
pop
xchg
sub
sub
shl
and
ret
dec
out
sar
(bad)
push
sbb
shl
dec
inc
sub
inc
cli
jne
xchg
and
das
cmp
icebp
das
or
dec
and
(bad)
jg
(bad)
cmp
std
jne
dec
mov
mov
inc
addr16
jmp
les
push
lock
pop
das
lods
pop
cmps
sbb
add
sbb
imul
sbb
lods
fstp
adc
sbb
mov
je
xchg
fistp
(bad)
(bad)
(bad)
inc
retf
leave
je
xchg
mov
inc
xlat
loop
clc
jno
mov
scas
enter
adc
stos
retf
mov
(bad)
test
cmc
and
ds
pop
retf
or
xchg
(bad)
(bad)
(bad)
push
in
sbb
ret
fs
mov
dec
js
jbe
mov
enter
ret
stos
hlt
mov
pushf
dec
movs
bound
jb
mov
mov
and
mov
(bad)
(bad)
push
xchg
neg
stc
mov
loopne
inc
ret
inc
xlat
into
cmps
(bad)
lock
adc
(bad)
(bad)
jge
cmps
xor
sbb
dec
pop
xor
push
fistp
xchg
int3
push
leave
jge
pop
pusha
retf
(bad)
jmp
inc
call
mov
in
xor
test
scas
sbb
(bad)
call
and
and
cwde
mov
sub
sbb
cwde
push
cmp
sbb
mov
enter
and
iret
ds
aam
mov
leave
sub
(bad)
(bad)
(bad)
jmp
call
lock
mov
cmps
into
cmc
xchg
imul
sub
add
(bad)
(bad)
call
push
std
retf
out
xadd
es
sub
ret
and
popf
and
loopne
mov
call
ss
out
mov
cs
mov
mov
jecxz
jg
(bad)
dec
push
sub
gs
inc
push
sub
test
loopne
(bad)
(bad)
inc
inc
jecxz
or
cmp
sbb
addr16
out
mov
call
fidiv
jmp
clc
jmp
and
mov
sbb
xor
xor
xor
push
aad
imul
xchg
lahf
in
mov
pop
pop
fs
lods
push
icebp
int3
lahf
jb
(bad)
(bad)
jmp
mov
mov
mov
sbb
or
cmp
mov
mov
push
ds
mov
fild
dec
leave
and
fdivr
ret
cmp
push
mov
(bad)
(bad)
dec
hlt
push
adc
xchg
scas
pop
daa
fidiv
jp
mov
pop
arpl
ret
dec
pop
adc
adc
(bad)
(bad)
push
clc
jae
and
dec
jo
pop
pop
fdiv
push
cdq
jg
pminub
(bad)
mov
mov
fstp
jmp
dec
mov
fisub
(bad)
aas
cld
inc
and
sar
xchg
sbb
mov
mov
daa
pushf
(bad)
(bad)
(bad)
call
loop
inc
mov
add
xor
cmp
mov
(bad)
(bad)
inc
mov
test
inc
bound
int3
rol
daa
xlat
cwde
arpl
push
xchg
add
es
fmul
ins
jmp
dec
push
in
pop
rcr
sbb
jecxz
xchg
aad
mov
xor
add
paddusb
mov
addr16
push
and
jp
retf
(bad)
(bad)
(bad)
mov
mov
push
jne
adc
mov
mov
mov
push
(bad)
call
dec
ffree
dec
or
int
gs
jle
cmp
sub
rcr
(bad)
(bad)
dec
xor
sbb
xchg
dec
push
data16
pop
sbb
jg
mov
lock
(bad)
jl
jl
push
retf
pushf
nop
popa
ins
stc
cs
(bad)
push
xor
std
jmp
add
cmc
pop
out
cmp
in
cs
mov
fsub
icebp
mov
(bad)
(bad)
(bad)
cld
lods
out
lea
xor
cmp
push
dec
sbb
fdivr
(bad)
or
bound
(bad)
dec
call
out
outs
int3
push
push
mov
inc
nop
repz
clc
and
dec
cwde
lock
rcr
sbb
(bad)
(bad)
dec
xchg
pushf
call
add
cmp
clc
sahf
enter
mov
xchg
pop
adc
sub
mov
das
cli
ret
addr16
neg
fsub
(bad)
(bad)
push
ja
dec
ficomp
xchg
shr
sbb
and
addr16
(bad)
(bad)
call
(bad)
jne
fist
or
div
lods
and
int3
jo
jmp
(bad)
adc
sbb
ror
or
(bad)
lods
or
movs
mov
(bad)
inc
adc
dec
cmps
test
clc
dec
push
xchg
or
jo
mov
fimul
sbb
inc
sub
cmp
mov
jnp
mov
loopne
xchg
(bad)
dec
ror
sub
pop
(bad)
(bad)
(bad)
jmp
test
add
and
std
mov
cwde
mov
mov
xchg
enter
call
inc
mov
outs
pop
adc
pop
mov
add
xchg
add
xchg
ds
iret
(bad)
call
cld
push
pop
push
jns
popa
mov
push
add
adc
movs
lods
jp
sbb
push
or
push
(bad)
jmp
cli
inc
sbb
xlat
lahf
dec
lods
cmp
rol
scas
inc
or
scas
and
inc
jmp
sub
jl
loopne
mov
ror
call
jb
push
(bad)
(bad)
(bad)
(bad)
cld
in
imul
xor
cmc
pmuludq
xchg
add
cmp
mov
cdq
sub
mov
(bad)
jmp
sub
sti
sub
fmul
popf
sub
jnp
sub
ficomp
rol
fstp
(bad)
call
(bad)
cli
imul
mov
ss
xchg
xor
dec
lds
leave
cmps
std
mov
and
lods
mov
shl
mov
ja
(bad)
call
loopne
jecxz
sbb
test
ficom
sub
dec
pop
cmps
aas
push
jecxz
cwde
(bad)
(bad)
(bad)
jg
daa
jge
cmp
fidiv
pop
imul
mov
mov
dec
out
dec
jge
sbb
jg
(bad)
out
mov
stos
sbb
push
adc
and
and
(bad)
(bad)
(bad)
(bad)
clc
pop
movs
jp
(bad)
imul
or
push
adc
cmp
sub
or
(bad)
(bad)
call
xor
sub
std
mov
retf
outs
cmp
dec
aas
jl
test
ss
(bad)
(bad)
(bad)
(bad)
fcmovnb
(bad)
cdq
test
mov
mov
sub
mov
ins
nop
inc
inc
test
outs
(bad)
(bad)
(bad)
call
or
sub
push
and
mov
enter
sbb
aas
ins
std
or
in
and
cmp
cmp
cmp
mov
inc
fwait
nop
xchg
push
test
leave
pop
out
pop
cld
jmp
ins
in
mov
mov
ret
dec
xchg
fcomp
or
(bad)
(bad)
dec
pop
mov
mov
dec
pop
stc
leave
sub
mov
ds
je
adc
pop
xchg
cli
call
xor
sbb
jecxz
push
mov
(bad)
call
cmps
ins
cmp
push
mov
pop
cmp
sar
jbe
sub
inc
(bad)
enter
adc
iret
stos
sbb
push
cld
push
sub
mov
push
adc
xchg
sub
xor
mov
jbe
sbb
xor
cmp
jmp
lods
or
inc
xor
mov
adc
mov
mov
hlt
stos
(bad)
outs
cli
(bad)
frstor
cmp
xchg
ror
popa
in
pop
cmp
(bad)
jg
sbb
pop
cmovns
add
jae
repz
popa
repnz
loope
in
pop
sti
jmp
clc
(bad)
(bad)
(bad)
push
ret
add
retf
sbb
div
pushf
cmp
fstp
adc
sub
(bad)
(bad)
(bad)
dec
xchg
stos
ins
pop
push
sti
sbb
ret
fisub
sub
sbb
das
ficom
mov
(bad)
(bad)
(bad)
call
jge
jmp
xchg
jg
mov
ret
cld
in
rol
mov
retf
cmc
pop
inc
(bad)
dec
lock
cmp
fadd
mov
add
mov
adc
sbb
jbe
(bad)
(bad)
jmp
stos
fsubp
ss
ror
fsub
popf
xchg
xor
aaa
xchg
es
dec
mov
cli
jmp
mov
sbb
pop
fist
stc
or
shl
fbstp
test
mov
cdq
lods
pop
hlt
push
jno
test
xchg
mov
aad
(bad)
mov
(bad)
out
xor
mov
imul
dec
daa
loop
aas
inc
mov
inc
push
cmps
pop
push
jb
push
xor
lock
in
add
mov
enter
movs
lods
dec
fs
(bad)
(bad)
(bad)
jmp
pusha
or
pop
outs
in
in
(bad)
popa
movs
gs
lods
test
inc
dec
and
xchg
fs
mov
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
inc
aas
push
fcmovnu
out
ins
sub
aam
inc
and
push
fld
jmp
xor
mov
(bad)
(bad)
call
adc
add
add
cld
mov
xor
fldenv
jle
sbb
(bad)
fnsave
fistp
mov
cmc
test
stos
retf
adc
out
mov
add
cmp
or
mov
sub
pop
sbb
mov
ds
xlat
sub
test
(bad)
dec
lock
cmps
cmp
(bad)
jns
inc
xchg
mov
ds
scas
stos
jmp
(bad)
(bad)
jmp
cmp
sub
sub
inc
imul
pop
add
jl
mov
lds
pop
outs
sub
(bad)
(bad)
push
pop
lea
jg
mov
dec
stos
or
(bad)
inc
xor
stos
rcl
(bad)
fsub
cld
mov
and
mov
or
(bad)
(bad)
(bad)
mov
popa
cmp
mov
mov
das
sub
out
fdivr
(bad)
(bad)
(bad)
mov
push
(bad)
ficomp
push
dec
mov
push
push
into
out
or
aam
sub
(bad)
(bad)
(bad)
jp
push
and
ret
fs
aas
push
lds
sahf
adc
or
sbb
xchg
mov
(bad)
(bad)
call
call
push
(bad)
mov
aaa
inc
cmps
inc
pop
je
cmc
cmp
repz
jmp
sub
push
inc
adc
out
dec
ds
retf
nop
test
test
(bad)
push
fdiv
mov
cmps
lods
mov
cmp
std
xor
ret
dec
mov
push
in
jp
(bad)
(bad)
call
or
sbb
mov
mov
cmp
test
inc
xchg
lock
mov
test
mov
(bad)
pop
and
stos
call
xchg
cwde
rcl
mov
loop
call
scas
(bad)
pushf
in
xor
aad
pop
sub
(bad)
not
pop
je
jecxz
nop
push
jl
arpl
int
dec
pop
inc
dec
xchg
jl
sub
(bad)
(bad)
(bad)
dec
sub
les
mov
jmp
pusha
aam
add
adc
clc
(bad)
adc
sub
dec
jne
inc
mov
sbb
in
adc
jno
(bad)
aas
cdq
xor
fnstcw
mov
pop
pop
cli
loopne
cwde
fwait
jns
aad
clc
cmps
retfw
dec
adc
(bad)
dec
pop
popf
push
pop
sbb
sbb
cmc
mov
popa
test
in
xor
aaa
mov
jmp
pop
stos
rcl
pop
stc
pop
jmp
inc
(bad)
loop
into
pop
dec
pop
shl
inc
pop
sub
rol
(bad)
(bad)
(bad)
in
xchg
pop
cmc
ins
pusha
mov
aaa
pop
aad
add
mov
(bad)
(bad)
inc
es
jbe
bound
inc
fwait
mov
(bad)
in
and
sbb
call
in
ins
push
call
pop
int3
adc
sbb
icebp
add
push
loop
xchg
in
push
mov
call
cmp
push
test
shl
daa
push
cmps
pop
ins
jmp
call
xor
iret
push
jg
popa
out
xlat
sbb
(bad)
(bad)
(bad)
out
and
loope
mov
out
js
call
mov
(bad)
loopne
adc
enter
mov
(bad)
stc
add
jbe
(bad)
(bad)
mov
mov
ds
fstp
pusha
xor
jne
int
dec
push
rol
js
(bad)
(bad)
push
imul
mov
jl
push
movs
dec
or
bnd
movs
or
inc
cld
add
(bad)
jmp
mov
adc
pop
push
call
mov
mov
mov
dec
jg
imul
out
and
pushf
or
push
(bad)
(bad)
(bad)
push
mov
xlat
xchg
jle
into
pop
retf
or
mov
add
inc
jae
mov
nop
mov
(bad)
(bad)
(bad)
inc
retf
dec
in
and
lahf
scas
in
mov
or
aaa
rcr
sbb
dec
lock
or
hlt
lahf
sbb
ret
sub
js
inc
dec
(bad)
(bad)
aas
nop
mov
fld
repnz
or
or
cmc
adc
mov
(bad)
(bad)
(bad)
push
inc
ret
popa
retf
rcr
dec
fwait
lods
mov
loope
jo
push
sub
push
(bad)
(bad)
mov
dec
js
movs
dec
pop
xlat
arpl
xchg
adc
das
jle
xor
shr
(bad)
(bad)
mov
inc
or
cwde
add
loopne
std
mov
jo
in
rol
cli
jmp
inc
xor
xor
mov
xor
push
adc
ss
int3
(bad)
push
(bad)
std
mov
ret
xlat
lods
xchg
add
dec
push
mov
or
push
xchg
mov
pop
cmc
mov
sub
inc
aaa
mov
cld
mov
loopne
clc
ins
jge
add
sbb
xchg
(bad)
push
jg
cld
retf
jno
imul
pop
sbb
fdivr
cwde
fadd
sub
(bad)
(bad)
jmp
jo
in
sub
jns
jo
sub
sar
mov
(bad)
jmp
shl
mov
leave
jnp
fwait
dec
xchg
cmp
ins
push
(bad)
(bad)
(bad)
(bad)
cmp
adc
cli
call
jg
jns
adc
imul
mov
sub
(bad)
jmp
scas
lea
mov
fwait
or
push
pop
outs
ja
rcl
push
pop
jae
jno
(bad)
(bad)
(bad)
(bad)
aas
push
and
mov
pop
les
adc
mov
add
bswap
sbb
(bad)
adc
test
(bad)
call
call
test
repnz
xor
dec
out
(bad)
push
xchg
test
clc
aad
imul
mov
call
push
fnstcw
mov
xor
jno
xor
lds
jg
push
add
dec
outs
push
sub
(bad)
(bad)
(bad)
std
dec
shr
je
or
div
adc
addr16
daa
and
fistp
movs
cmp
cmp
call
js
xchg
jae
leave
dec
jno
mov
cmp
add
and
(bad)
push
adc
xchg
ins
aaa
add
in
loopne
cli
shl
sub
add
lock
dec
xor
fcomp
sbb
add
imul
(bad)
jg
jge
xchg
stc
mov
ja
mov
sub
or
xchg
(bad)
(bad)
mov
or
and
mov
(bad)
xor
mov
jmp
mov
retf
lods
(bad)
mov
sub
fs
lea
(bad)
(bad)
(bad)
dec
movs
mov
mov
adc
xlat
pop
push
mov
cwde
stc
loopne
in
out
stos
stos
gs
xchg
push
(bad)
mov
aad
add
xor
outs
imul
nop
(bad)
jg
(bad)
out
and
div
mov
mov
push
cmp
inc
jg
and
clc
(bad)
(bad)
(bad)
jns
dec
add
ret
imul
lahf
adc
sbb
out
stos
jae
rcl
(bad)
fbstp
shr
or
xchg
inc
inc
mov
idiv
(bad)
(bad)
push
iret
les
dec
xor
dec
mov
(bad)
cdq
test
or
xchg
(bad)
mov
add
jo
xor
cld
push
stos
inc
dec
js
or
lods
mov
jne
ror
(bad)
(bad)
jle
jne
pop
stos
shl
push
(bad)
mov
xchg
gs
or
int3
push
in
mov
pop
(bad)
(bad)
(bad)
push
stos
lahf
push
xchg
inc
push
and
fs
adc
mov
rol
call
aas
leave
(bad)
xchg
(bad)
(bad)
(bad)
(bad)
jl
xlat
jle
or
das
popa
loope
or
sar
or
into
xchg
int3
dec
daa
(bad)
(bad)
(bad)
dec
fwait
in
in
sbb
jns
aad
mov
les
add
mov
mov
mov
jmp
call
mov
sub
xchg
es
add
dec
mov
pushf
adc
inc
push
or
ret
rcl
xor
inc
ret
jnp
stos
loopne
ret
and
pop
outs
cli
(bad)
push
push
fld
test
pop
cmps
push
and
mov
adc
(bad)
(bad)
jmp
xlat
hlt
pop
or
mov
sub
(bad)
mov
pop
cmps
mov
icebp
mov
lock
or
cmp
(bad)
ja
aad
sub
xor
cmps
mov
jg
mov
scas
mov
out
adc
stc
cmp
push
popf
call
rol
mov
icebp
xor
jo
fld
scas
and
lods
jae
(bad)
(bad)
push
(bad)
mov
(bad)
jmp
xchg
inc
cmp
mov
cmp
pop
dec
ja
aam
sub
(bad)
call
jnp
cmps
iret
or
fst
xchg
icebp
jge
adc
and
out
and
imul
(bad)
inc
add
cmp
push
dec
pop
mov
mov
scas
and
mov
ins
rcr
(bad)
out
push
das
mov
mov
pop
(bad)
out
dec
xchg
sub
mov
movs
out
popa
xor
pop
pop
out
xchg
mov
and
in
mov
(bad)
jmp
mov
mov
ss
mov
xchg
pushf
sbb
call
(bad)
(bad)
(bad)
(bad)
cmp
in
outs
les
lock
push
adc
ds
call
and
ret
add
dec
lock
push
add
(bad)
(bad)
push
popa
dec
cmc
test
xchg
ss
dec
push
fwait
xchg
push
mov
data16
popf
pop
loop
fdivrp
(bad)
(bad)
inc
pop
adc
enter
stos
je
cmp
mov
inc
push
mov
mov
(bad)
(bad)
(bad)
cmp
leave
add
cmc
inc
push
xchg
mov
cmp
rcr
div
(bad)
jo
push
adc
call
test
sbb
xchg
jns
and
cmp
cld
or
(bad)
(bad)
call
sub
sbb
sub
jg
mov
cli
adc
lds
inc
adc
mov
call
push
xlat
ja
shl
mov
leave
push
inc
in
(bad)
jb
mov
lds
(bad)
jg
jg
js
mov
jmp
lods
not
sbb
push
jbe
jecxz
call
cmps
cdq
addr16
int3
fwait
cmc
outs
sbb
pushf
mov
push
imul
std
pop
aam
mov
jl
pop
daa
dec
push
ss
aas
retf
and
stos
inc
xor
(bad)
dec
xchg
(bad)
(bad)
inc
push
jb
adc
lea
ds
stc
and
jno
xor
loope
mov
pop
hlt
(bad)
jg
nop
(bad)
xor
adc
fst
ja
sbb
fdiv
pusha
add
call
xor
pop
push
push
pop
pop
jae
stos
mov
ret
out
xor
in
fld
gs
inc
inc
jmp
or
cmp
jno
pusha
sub
std
xor
sub
(bad)
mov
jecxz
call
push
add
mov
les
or
jg
jb
test
movs
nop
pop
lods
mov
(bad)
jmp
fs
sbb
xor
aaa
clc
adc
and
call
data16
rcr
mov
cdq
aam
ss
and
jmp
(bad)
jmp
gs
xchg
fsubr
rcl
dec
mov
add
sbb
outs
mov
ret
(bad)
(bad)
(bad)
dec
inc
sbb
nop
inc
test
add
lds
mov
lahf
dec
(bad)
jg
inc
data16
movs
xchg
jb
dec
repz
mov
jmp
ja
(bad)
jmp
(bad)
cmp
mov
arpl
(bad)
(bad)
jmp
sti
sahf
xor
or
call
cwde
inc
fld
into
sar
(bad)
(bad)
dec
test
(bad)
retf
jae
add
sbb
cmp
and
add
cli
ret
(bad)
(bad)
call
mov
js
movs
test
in
xlat
jbe
pop
cmp
outs
mov
loop
inc
and
imul
gs
les
out
inc
movs
sbb
out
leave
and
inc
sub
in
out
mov
retf
and
loop
adc
or
cld
inc
(bad)
(bad)
(bad)
call
jg
mov
out
xor
cmp
and
scas
jl
dec
loopne
loopne
push
cmps
loopne
sti
(bad)
call
pop
or
xor
js
stc
push
mov
push
pop
xor
test
xor
test
(bad)
call
cld
je
inc
jmp
dec
pop
lock
push
sahf
ds
je
es
jbe
(bad)
(bad)
(bad)
call
popa
sub
lock
dec
shr
mov
jg
in
sub
mov
scas
push
jns
(bad)
pop
test
fdiv
pop
mov
scas
push
sub
cmp
(bad)
adc
and
ror
jmp
sub
sbb
cs
push
(bad)
cld
outs
xchg
jnp
mov
mov
pop
inc
ret
push
adc
xor
lock
adc
(bad)
inc
and
adc
sbb
sub
sub
loop
jmp
(bad)
(bad)
jmp
cdq
inc
adc
(bad)
push
je
cdq
pop
repnz
dec
mov
das
mov
inc
adc
pop
aas
sar
call
(bad)
cld
cmps
mov
jmp
sbb
or
or
(bad)
(bad)
push
pop
mov
sub
mov
add
popf
pop
dec
test
jnp
data16
pop
jb
adc
pusha
(bad)
(bad)
(bad)
push
pop
jns
mov
das
enter
push
push
and
push
enter
jg
in
push
aas
(bad)
pop
shl
je
push
xor
movs
sbb
bound
fcomip
inc
jge
jae
pop
sbb
pop
jbe
adc
leave
push
add
call
mov
dec
dec
xlat
and
sub
pmuludq
(bad)
fistp
and
jb
aam
repnz
jmp
mov
mov
mov
nop
call
add
shl
dec
sahf
mov
scas
imul
(bad)
mov
clc
jbe
push
(bad)
mov
add
int
jno
das
sbb
and
cmps
das
cwde
fnsave
popa
xchg
cmp
push
pop
fstp
sub
test
push
mov
jo
adc
mov
adc
push
xlat
mov
ja
in
shl
(bad)
(bad)
call
mov
xchg
cmp
mov
cmps
xor
aas
loope
add
mul
arpl
(bad)
(bad)
(bad)
(bad)
fimul
cmp
dec
inc
in
mov
(bad)
jno
popa
and
popa
inc
cmp
fcomp
(bad)
(bad)
in
jmp
push
adc
lahf
dec
js
idiv
pop
add
sub
mov
call
(bad)
jmp
mov
xchg
cmps
into
add
idiv
add
lds
addr16
lahf
pop
dec
pop
stos
mov
icebp
(bad)
(bad)
inc
push
scas
out
mov
fs
scas
inc
xor
mov
add
cmps
ins
in
(bad)
(bad)
fist
in
mov
cmp
xchg
pop
fwait
imul
pop
ja
lds
dec
sbb
(bad)
(bad)
(bad)
jmp
fild
pop
out
xlat
es
fldenv
div
aam
out
add
call
and
adc
jg
(bad)
(bad)
(bad)
jbe
nop
inc
cwde
lock
out
add
jge
movs
lods
dec
add
fcmovu
jg
(bad)
inc
icebp
out
pxor
mov
sahf
inc
xchg
pop
mov
(bad)
(bad)
fcom
cmp
sub
icebp
out
scas
stc
hlt
adc
mov
jmp
(bad)
push
ffree
out
mov
or
mov
fbstp
(bad)
(bad)
push
sbb
aam
rol
aaa
arpl
les
and
inc
repnz
sub
jmp
push
loopne
ret
and
(bad)
fnstcw
and
dec
scas
or
cmps
shl
dec
sbb
(bad)
(bad)
(bad)
out
push
test
mov
es
mov
movs
cmp
mov
and
mov
cmc
(bad)
(bad)
cmp
rol
sub
cmps
stos
lds
(bad)
lahf
mov
(bad)
(bad)
jg
loop
xor
jnp
movs
mov
push
outs
mov
or
fiadd
sbb
out
clc
fild
add
dec
push
int3
mov
jecxz
aam
ins
push
shr
(bad)
(bad)
(bad)
call
sti
jmp
pop
or
push
shl
gs
js
xor
push
bnd
std
(bad)
(bad)
(bad)
mov
add
mov
xor
out
cmp
fmul
xor
lock
pop
ins
jecxz
inc
jmp
xchg
mov
fs
(bad)
(bad)
(bad)
(bad)
fdivr
stc
push
ret
or
mov
ins
xchg
push
fist
cmp
add
into
(bad)
test
(bad)
(bad)
stc
add
xor
hlt
sub
inc
inc
pop
fwait
and
adc
jg
add
movs
xchg
out
or
outs
pop
in
push
std
jmp
stos
test
jo
in
or
and
mov
outs
jl
(bad)
ins
push
mov
sar
lds
data16
mov
mov
sub
cmp
mov
add
aas
outs
mov
bound
leave
push
sbb
outs
adc
jecxz
std
adc
es
(bad)
mov
lods
xor
fnstsw
mov
inc
loopne
(bad)
fst
pop
and
pop
pop
test
mov
xchg
adc
movs
retf
sar
adc
add
clc
les
nop
or
call
add
(bad)
call
mov
jle
mov
leave
rol
js
(bad)
call
pop
bound
sti
push
sub
(bad)
int
mov
mov
icebp
sbb
lds
pop
xchg
call
nop
ins
and
dec
bsf
mov
call
mov
mov
in
mov
jg
enter
(bad)
push
mov
jo
jmp
mov
movs
pop
xchg
add
jge
mov
(bad)
(bad)
jmp
and
jmp
pop
arpl
jp
neg
clc
test
pop
jns
outs
mov
and
(bad)
(bad)
jg
sub
cmp
ror
jne
(bad)
leave
lock
movs
(bad)
jmp
(bad)
(bad)
(bad)
dec
in
xor
repz
pop
out
fldln2
sbb
iret
icebp
push
aaa
mov
mov
idiv
(bad)
(bad)
jmp
dec
lods
dec
dec
pop
inc
mov
test
inc
xor
or
sti
jl
fldenv
loopne
clc
(bad)
(bad)
call
dec
dec
int3
das
dec
pop
hlt
ret
inc
test
clc
cmc
or
cmp
jle
mov
(bad)
(bad)
(bad)
out
push
xchg
dec
mov
add
mov
pop
and
(bad)
mov
fimul
(bad)
mov
movs
sub
jo
or
dec
dec
jmp
rcl
jle
sub
int3
(bad)
(bad)
(bad)
jmp
and
mov
inc
or
rcl
pop
and
stos
rcl
aad
pop
add
inc
mov
(bad)
mov
dec
addr16
in
rcr
rol
or
mov
mov
ins
cli
jg
sub
(bad)
retf
daa
mov
or
(bad)
(bad)
push
jo
test
dec
xor
outs
lods
push
or
data16
cmp
call
ins
loop
push
xchg
and
call
retf
(bad)
mov
pop
sub
mov
clc
sar
retf
xchg
pop
push
jmp
mov
shr
ficom
scas
adc
mov
mov
add
movs
icebp
xor
(bad)
dec
and
inc
mov
scas
push
dec
jmp
jns
cmp
fisttp
mov
mov
mov
xor
cld
iret
loopne
int3
addr16
xor
xchg
inc
hlt
inc
lods
pop
mov
xor
ds
cmc
adc
scas
je
and
adc
and
pop
jl
xchg
(bad)
(bad)
(bad)
dec
push
push
xor
sbb
popf
rcl
fcomp
mov
mov
xchg
xchg
out
arpl
sbb
(bad)
(bad)
dec
mov
adc
sub
clc
jbe
imul
sar
(bad)
fbld
push
pop
outs
ret
fs
retf
fstp
shr
mov
mov
mov
retf
xor
ss
rcr
pop
retf
repz
pop
xor
cmc
(bad)
dec
(bad)
sbb
xchg
pop
cmc
mov
jmp
cld
(bad)
(bad)
fbstp
lea
push
mov
and
mov
dec
add
scas
scas
enter
and
cld
call
or
cmps
scas
movs
dec
adc
(bad)
(bad)
call
sbb
pop
mov
sub
and
aaa
fnstcw
fld
fcom
ret
(bad)
(bad)
push
in
bound
dec
daa
in
sbb
cmp
dec
enter
in
into
ss
jmp
fisttp
mov
mov
xchg
or
data16
cs
popf
adc
fwait
cmp
(bad)
call
ret
fistp
lods
jg
mov
jo
pusha
dec
sbb
mov
sub
(bad)
push
cs
add
pop
add
mov
mov
jb
enter
sub
aas
(bad)
(bad)
jg
call
inc
or
sti
jmp
retf
xor
fs
fist
loopne
daa
mov
(bad)
jp
jl
mov
xchg
xor
jmp
dec
dec
dec
push
mov
inc
push
fstp
mov
mov
aaa
(bad)
jmp
sub
mov
jle
inc
shl
adc
out
mov
cmp
adc
mov
jmp
cli
call
inc
dec
xor
lods
sub
cmp
dec
sbb
test
(bad)
(bad)
(bad)
call
lock
popa
call
iret
push
aas
xchg
shl
mov
pop
push
out
(bad)
(bad)
(bad)
call
jns
dec
lahf
and
por
stos
add
fidiv
dec
loopne
pop
sahf
test
mov
lods
cmp
xchg
jmp
je
fsub
cmp
clc
mov
mov
nop
aaa
out
(bad)
(bad)
(bad)
call
loope
lock
xor
inc
adc
call
sbb
loopne
mov
movs
dec
jnp
sbb
xchg
sbb
mov
pop
pop
stos
jb
scas
clc
call
cwde
and
scas
mov
add
pop
(bad)
(bad)
mov
and
jne
mov
enter
mov
xchg
pop
jle
dec
(bad)
mov
or
sub
pop
or
dec
pop
jmp
leave
or
(bad)
call
pop
xor
sbb
outs
ror
(bad)
mov
mov
push
xor
(bad)
(bad)
jmp
sub
mov
add
mov
xchg
or
outs
xchg
xor
inc
(bad)
(bad)
fld
push
adc
clc
pop
ret
jne
in
push
and
mov
cmp
fnstcw
rcr
push
add
pop
dec
int3
or
inc
(bad)
(bad)
(bad)
(bad)
aas
call
ins
(bad)
rcl
add
adc
stos
dec
stos
dec
stos
and
pop
daa
(bad)
(bad)
(bad)
inc
popf
in
pop
add
ins
cs
imul
or
(bad)
and
out
mov
jnp
cmp
leave
cmps
pop
repz
lea
push
lods
mov
push
xor
or
xlat
test
cmp
(bad)
call
inc
push
adc
test
mov
clc
pop
jae
pop
ins
js
movs
(bad)
mov
mov
adc
xor
mov
jmp
mov
inc
xchg
sti
ret
outs
cmp
mov
fs
jo
mov
movs
ds
rcr
dec
push
cmp
cmps
(bad)
jmp
mov
aam
rol
bswap
ss
mov
(bad)
jg
xor
adc
ret
cdq
cmp
cmps
dec
loopne
pop
sbb
fs
ja
pop
mov
cmp
and
mov
and
and
fwait
add
(bad)
(bad)
(bad)
inc
inc
pop
fbstp
sub
(bad)
cmc
(bad)
cmp
pop
pop
jns
push
ss
push
leave
lods
sbb
(bad)
(bad)
(bad)
inc
inc
fadd
in
data16
popf
mov
mov
mov
jle
mov
lods
xor
movs
jl
mov
xlat
ja
sahf
call
test
cmp
jo
sbb
out
pop
pop
shl
shl
and
(bad)
(bad)
call
int
test
nop
aam
inc
sub
jle
cs
out
xchg
push
(bad)
(bad)
(bad)
push
inc
std
(bad)
jnp
xor
enter
jmp
adc
xchg
(bad)
(bad)
(bad)
jmp
inc
fadd
(bad)
ja
push
jno
loop
mov
mov
ja
imul
jmp
pop
scas
or
mov
xchg
jl
sub
call
test
cdq
(bad)
(bad)
dec
xchg
mov
test
fild
jb
xor
push
gs
push
(bad)
(bad)
push
jns
retf
cmp
in
faddp
push
dec
pop
xchg
pop
xor
push
test
cmps
lea
ins
int3
xor
mov
cmc
call
cmc
and
bnd
sbb
das
dec
xchg
sbb
sub
sub
nop
jno
mov
int3
loopne
cs
or
jbe
(bad)
jmp
jmp
jns
add
addr16
add
pusha
and
adc
(bad)
(bad)
call
cmps
rol
xchg
mov
cld
cmps
sti
add
repz
fst
aaa
sbb
jg
and
push
loopne
adc
dec
outs
out
add
dec
push
cmp
sbb
sar
hlt
push
in
push
push
mov
pop
adc
sub
in
mov
gs
outs
or
cmp
rcr
out
std
push
cmp
push
jg
jne
(bad)
(bad)
(bad)
jmp
dec
inc
push
clc
(bad)
cmp
push
or
pop
inc
cs
mov
fwait
adc
imul
(bad)
(bad)
jmp
std
push
xchg
jmp
mov
lods
mov
(bad)
stos
arpl
shl
mov
sbb
jmp
xor
mov
nop
push
pop
jne
mov
int3
dec
inc
mov
loopne
lock
js
mov
(bad)
(bad)
push
mov
in
xor
mov
add
test
cmps
sub
adc
dec
xchg
clc
adc
(bad)
(bad)
(bad)
jmp
mov
dec
dec
sub
push
cmps
cmc
sar
enter
fwait
pop
out
call
sbb
out
or
or
cmc
das
(bad)
out
out
xchg
(bad)
or
(bad)
(bad)
(bad)
inc
or
jmp
ss
xchg
repz
adc
xchg
outs
int
push
dec
imul
aas
sahf
push
sub
jmp
movs
packssdw
out
test
(bad)
dec
cmc
or
xchg
pop
push
inc
mov
scas
mov
mov
jmp
leave
and
dec
or
cmp
xor
(bad)
call
or
and
jno
shr
mov
leave
pop
mov
cmp
mov
out
and
fisub
xchg
nop
repz
les
or
(bad)
(bad)
dec
or
ins
mov
mov
push
daa
lods
imul
pop
mov
pop
mov
push
cmp
dec
fld
les
fs
mov
add
(bad)
(bad)
jg
in
arpl
bound
lods
lds
cmp
jg
and
dec
adc
cmc
(bad)
call
mov
rcr
fcomp
loope
mov
loope
(bad)
inc
jmp
jmp
pushf
xor
jbe
out
fld
jb
test
in
(bad)
(bad)
(bad)
mov
push
dec
push
loop
mov
in
mov
mov
(bad)
push
xchg
(bad)
(bad)
dec
inc
xchg
popf
mov
sbb
ins
inc
test
aaa
mov
mov
inc
add
out
mov
pop
arpl
out
jo
mov
aam
xchg
mov
bt
(bad)
(bad)
mov
(bad)
out
mov
inc
test
adc
mov
rcl
cmp
push
(bad)
(bad)
call
addr16
xor
mov
(bad)
clc
push
and
adc
cld
pop
scas
cmc
mov
pop
int3
xlat
loopne
or
pusha
js
jle
pop
mov
or
sbb
xor
jae
jnp
out
les
shl
sub
cmp
push
and
jae
(bad)
mov
push
xchg
adc
cmp
xlat
cmps
and
lock
test
or
inc
imul
arpl
push
jb
pop
sub
inc
mov
sbb
enter
cmps
inc
or
cld
icebp
xchg
das
leave
inc
ss
add
ror
push
out
test
inc
loope
fdivr
(bad)
mov
adc
ret
mov
jl
nop
push
iret
fwait
out
fmul
sbb
jne
(bad)
(bad)
call
add
jle
clc
jle
outs
int
mov
mov
cmp
rcr
cld
push
hlt
mov
(bad)
(bad)
call
fwait
repz
or
(bad)
dec
sbb
cmp
jnp
(bad)
jb
mov
sub
fisttp
pop
icebp
(bad)
mov
fist
push
mov
fcmovb
xchg
outs
sbb
mov
mov
(bad)
(bad)
jmp
push
out
test
adc
ja
outs
(bad)
ds
jmp
dec
je
mov
retf
xchg
add
adc
push
pop
stos
repnz
jae
sahf
xchg
call
pop
dec
call
shl
sbb
cli
mov
lock
jmp
mov
mov
imul
(bad)
sub
jno
jmp
dec
or
pop
sub
add
je
in
call
mov
(bad)
push
adc
jb
(bad)
leave
dec
cmp
js
imul
mov
sar
mov
aam
dec
test
cmc
inc
pop
scas
(bad)
or
imul
push
adc
popf
mov
cmp
cmc
scas
sbb
mov
cli
ds
sbb
mov
outs
ins
jp
jecxz
and
(bad)
mov
add
std
push
dec
adc
shl
nop
fild
call
mov
cmp
out
mov
(bad)
jg
call
(bad)
push
mov
jo
dec
dec
pop
mov
fdivr
(bad)
(bad)
(bad)
(bad)
dec
cld
test
sub
inc
cmp
or
push
or
js
cmp
or
jns
dec
in
movs
(bad)
(bad)
call
or
jo
xchg
icebp
into
mov
sub
aam
(bad)
(bad)
push
fcmovnu
movs
mov
call
outs
movs
ss
mov
inc
loope
xchg
addr16
(bad)
push
add
pop
test
xchg
add
pop
inc
or
(bad)
ss
daa
adc
call
pop
in
and
les
mov
xchg
mov
jmp
jle
ret
(bad)
inc
mov
inc
(bad)
jno
mov
xor
ror
mov
ja
daa
pushf
(bad)
(bad)
(bad)
(bad)
jns
addr16
adc
mov
fadd
shr
sub
push
xor
fsub
rcr
les
mov
lea
sbb
sub
jmp
repz
(bad)
(bad)
jg
jle
or
aam
sbb
pop
mov
jbe
sahf
jno
pop
enter
(bad)
(bad)
inc
mov
xchg
pop
or
fnstenv
push
cld
sbb
add
int3
gs
and
scas
shl
add
lds
scas
push
(bad)
push
repnz
jg
push
stos
loopne
push
or
js
out
jle
in
nop
xchg
xchg
xchg
jno
xchg
and
call
fs
inc
dec
fs
ins
call
cmp
call
inc
push
cmp
xor
xor
test
in
mov
add
or
xchg
jp
xchg
in
out
add
call
jg
or
lock
mov
mov
or
fcomip
call
push
repnz
aas
ds
or
inc
xor
(bad)
(bad)
jmp
iret
aad
and
inc
push
pop
mov
push
movs
mov
(bad)
(bad)
(bad)
dec
pop
cmp
stos
adc
pop
dec
inc
cmp
cld
fcomp
mov
into
inc
ins
mov
jae
(bad)
call
mov
enter
mov
cwde
test
(bad)
jmp
out
int
or
adc
push
fst
(bad)
cmp
aad
push
pop
push
fadd
sub
xchg
stc
inc
cld
stc
sub
aaa
(bad)
(bad)
call
aad
loop
jle
or
pop
push
adc
and
dec
push
cmp
loop
imul
mov
data16
les
rcl
mov
int
adc
(bad)
(bad)
(bad)
inc
imul
loope
out
inc
adc
jns
shr
dec
call
or
(bad)
(bad)
inc
enter
and
pushf
sub
push
adc
imul
cs
ret
(bad)
(bad)
(bad)
mov
call
adc
jae
lock
add
sbb
addr16
(bad)
(bad)
(bad)
jg
sbb
jl
inc
cmp
mov
and
push
lock
(bad)
(bad)
(bad)
call
rol
xchg
dec
mov
cwde
mov
cs
daa
mov
add
mov
(bad)
(bad)
cmp
push
mov
aaa
ret
push
pop
popa
aas
popa
in
aaa
sub
fcmovnb
div
ja
ret
retf
scas
mov
loopne
sbb
cs
sub
add
add
push
sbb
or
pop
gs
(bad)
(bad)
(bad)
jmp
mov
mul
sbb
ja
xchg
int
cmps
xchg
dec
mov
mov
fwait
cmp
xchg
inc
jae
sbb
inc
call
mov
ret
(bad)
inc
cwde
jbe
xor
iret
xor
sub
fsub
loope
(bad)
(bad)
(bad)
inc
mov
pop
mov
scas
ret
daa
out
std
pop
cld
mov
jne
cmps
xor
(bad)
(bad)
(bad)
dec
(bad)
(bad)
sub
inc
cmp
shl
xchg
mov
add
pop
ja
(bad)
(bad)
(bad)
dec
jb
dec
inc
inc
in
sbb
aas
repnz
jecxz
stos
pushf
mov
(bad)
out
out
xor
inc
cmp
cmp
sti
in
div
enter
out
xchg
(bad)
(bad)
call
sbb
cmp
jnp
and
pop
jns
test
imul
and
(bad)
(bad)
(bad)
call
daa
and
std
push
sbb
aaa
pusha
dec
mov
cdq
dec
mov
data16
(bad)
(bad)
(bad)
(bad)
cmp
dec
xchg
(bad)
aad
pusha
pop
push
ss
cli
and
mov
popf
pop
jns
sbb
pop
out
(bad)
mov
mov
rcr
jle
jecxz
cmp
and
jne
dec
div
and
std
lock
(bad)
fisubr
xor
icebp
inc
xchg
fidivr
cmp
push
mov
test
fsub
mov
pop
mov
(bad)
(bad)
(bad)
call
(bad)
jle
lahf
and
cmp
mov
shl
mov
cmps
hlt
push
pusha
call
movs
sbb
sbb
xor
pop
(bad)
cmp
push
movs
aaa
cld
(bad)
jmp
pop
xor
gs
or
out
lds
ret
mov
(bad)
(bad)
push
xchg
dec
sbb
sub
test
(bad)
ins
inc
sbb
and
push
and
xchg
jne
(bad)
(bad)
mov
xchg
dec
sub
jg
push
pop
mov
repnz
jl
or
vmread
(bad)
(bad)
dec
mov
xchg
inc
jo
fnstsw
lahf
aam
popa
mov
xchg
(bad)
(bad)
(bad)
mov
sub
scas
stc
popa
ds
pop
(bad)
ret
cwde
dec
shr
pushf
retf
outs
aas
(bad)
(bad)
(bad)
dec
iret
inc
ja
sbb
xor
dec
in
mov
inc
pop
and
outs
push
sub
imul
(bad)
inc
(bad)
jp
xor
jae
jae
mov
jl
mov
rcr
jg
jo
popa
imul
(bad)
dec
cmp
mov
mov
les
or
inc
add
mov
ds
mov
cwde
jmp
fadd
add
mov
cmps
cs
add
sbb
aas
int
mov
(bad)
(bad)
jmp
retf
int3
dec
mov
(bad)
mov
ins
and
fisttp
cdq
lds
dec
lods
mov
(bad)
(bad)
push
ds
(bad)
addr16
cmp
dec
sub
aaa
lock
repz
ss
jno
mov
(bad)
(bad)
fcmovb
push
cmps
push
loope
les
enter
sbb
mov
popf
jo
aaa
inc
outs
(bad)
cdq
(bad)
aam
cld
(bad)
jmp
pop
push
jge
pop
xchg
or
or
mov
(bad)
jg
out
mov
push
mov
test
(bad)
loope
sub
dec
and
retf
mov
(bad)
(bad)
jmp
mov
stc
xchg
mov
mov
push
(bad)
cmps
add
sub
sub
mov
(bad)
nop
stos
inc
clc
inc
enter
inc
es
imul
adc
ss
mov
mov
lds
(bad)
(bad)
(bad)
mov
jg
sub
(bad)
fs
mov
add
inc
out
push
imul
mov
leave
add
xor
cs
iret
add
adc
test
xor
daa
inc
(bad)
mov
xor
cwde
sub
cmc
leave
and
sub
daa
jg
or
inc
test
mov
mov
out
fild
mov
mov
sub
xor
(bad)
call
jge
clc
add
jae
in
(bad)
mov
xor
cli
adc
pusha
daa
js
dec
mov
(bad)
cli
mov
neg
mov
mov
mov
jl
fistp
sbb
test
pop
enter
xchg
(bad)
(bad)
dec
xor
(bad)
imul
sar
es
sbb
dec
call
xor
std
mov
fdivr
(bad)
(bad)
jmp
inc
dec
cmps
cmps
arpl
mov
adc
cwde
xor
call
fistp
lods
adc
(bad)
(bad)
(bad)
dec
pop
mov
scas
ficom
mov
jnp
mov
rcl
mov
scas
out
jnp
fcomip
(bad)
jmp
(bad)
and
dec
jl
stos
and
mov
pop
loopne
lods
je
lods
or
jg
cmc
jmp
jecxz
ffreep
and
push
sbb
(bad)
jecxz
fistp
(bad)
(bad)
(bad)
call
rol
pushf
jge
xor
dec
push
xchg
aaa
mov
push
icebp
sub
or
xor
mov
rcr
(bad)
(bad)
(bad)
call
mov
imul
pop
pop
jecxz
repnz
and
xor
jmp
clc
call
or
cmp
retf
mov
(bad)
(bad)
(bad)
call
cli
call
inc
loop
lods
dec
sar
in
cdq
cld
push
movs
pop
or
movs
sahf
sub
lahf
xor
sbb
sbb
push
push
pop
jl
call
adc
mov
dec
repnz
gs
(bad)
(bad)
jmp
mov
dec
fwait
sbb
arpl
cdq
xchg
int
mov
(bad)
push
cmp
adc
mov
cli
clc
mov
jo
test
xchg
mov
inc
xchg
xor
std
and
ror
mov
jmp
mov
daa
sbb
cvtpi2ps
pusha
repnz
mov
fdivr
pop
out
fisubr
(bad)
(bad)
dec
push
inc
(bad)
(bad)
sti
jnp
sbb
pop
xlat
hlt
hlt
adc
pop
push
cs
shl
fwait
jl
inc
cmp
(bad)
(bad)
(bad)
dec
push
fdiv
(bad)
mov
push
cdq
or
sar
movs
loop
dec
ds
xor
inc
popf
leave
jl
push
stos
cmp
aas
repz
(bad)
mov
pushf
and
ret
push
or
push
mov
aad
jp
inc
jmp
mov
xor
lods
data16
shr
(bad)
(bad)
dec
xlat
clc
pushf
mov
push
sti
jns
aas
arpl
pop
mov
inc
dec
sbb
sub
push
adc
jmp
outs
popf
pop
mov
cmp
pop
and
cs
dec
push
jne
(bad)
(bad)
call
dec
sar
jge
cmc
movs
nop
push
xor
out
mov
daa
add
retf
pushf
jp
in
clc
(bad)
(bad)
jmp
aas
jl
retf
movs
retf
outs
sbb
fld
mov
xchg
push
sbb
adc
(bad)
jmp
sub
mov
test
cmp
cmp
sbb
dec
and
out
adc
push
shl
sub
dec
(bad)
inc
or
add
mov
pop
mov
jne
mov
(bad)
jmp
adc
popf
in
arpl
scas
inc
sub
ss
fwait
call
or
cs
and
lds
imul
(bad)
(bad)
fcom
test
mov
fcomp
jmp
and
data16
int
(bad)
(bad)
push
pop
dec
mov
mov
inc
mov
mov
push
pop
xlat
sbb
adc
add
scas
outs
outs
push
arpl
xchg
pop
int3
mov
jb
icebp
xlat
out
sar
call
or
enter
sbb
inc
push
ss
stos
ja
mov
stos
call
and
movs
mov
push
aam
enter
fwait
in
loop
pushf
ja
and
icebp
(bad)
inc
dec
cmp
pop
iret
mov
pop
fist
mov
fdivr
fld
dec
jbe
out
adc
lahf
out
inc
(bad)
(bad)
(bad)
(bad)
jmp
inc
(bad)
lods
xchg
rol
retf
fwait
rcr
gs
mov
(bad)
mov
mov
(bad)
and
(bad)
fisubr
(bad)
or
mov
call
icebp
daa
enter
or
sbb
ins
sub
jns
imul
or
(bad)
(bad)
(bad)
inc
out
stos
enter
imul
sub
xchg
xchg
mov
mov
daa
xchg
xor
cdq
test
inc
or
stos
mov
out
imul
xor
push
xchg
pop
inc
retf
cwde
pop
cmps
xchg
int
int
lods
push
scas
pop
lock
ficom
(bad)
(bad)
(bad)
inc
or
loop
mov
(bad)
cmp
jns
push
gs
pop
sub
mov
jge
push
jl
pop
add
jge
shl
mov
movs
je
push
ds
(bad)
cld
out
seta
(bad)
call
lahf
mov
inc
vunpcklps
inc
sar
fsubr
(bad)
push
and
(bad)
jg
push
xor
dec
mov
popf
xor
cli
push
dec
rcl
mov
outs
in
outs
jnp
inc
or
xchg
fst
push
std
(bad)
(bad)
(bad)
inc
push
jmp
mov
add
daa
mov
mov
and
cmp
out
adc
add
and
mov
jns
test
(bad)
(bad)
dec
jp
and
or
mov
push
push
mov
iret
jmp
sub
out
imul
pop
std
(bad)
dec
xchg
xor
and
cmp
jo
(bad)
int
jp
(bad)
(bad)
jmp
sub
xor
dec
pushf
scas
sbb
xor
mov
outs
js
mov
fs
out
(bad)
(bad)
(bad)
fstp
scas
adc
add
mov
ret
je
ja
adc
aaa
test
add
push
or
das
xchg
xchg
cmp
mov
rcr
push
(bad)
(bad)
fild
fist
xor
movs
push
lahf
call
(bad)
(bad)
(bad)
call
mov
ins
pushaw
pop
in
pop
xchg
repnz
cmps
or
mov
dec
mov
std
pop
sbb
(bad)
(bad)
(bad)
(bad)
(bad)
xchg
xor
das
loop
sub
mov
aaa
pushf
movs
xchg
inc
(bad)
das
or
push
imul
inc
sub
sbb
cmp
leave
jnp
cdq
scas
add
pop
das
bound
je
test
test
into
lea
mov
add
mov
lods
push
in
data16
or
cmp
jb
fsubrp
xor
shl
dec
push
xchg
dec
fxch
dec
sahf
jmp
hlt
repnz
jmp
(bad)
sti
(bad)
(bad)
mov
nop
cmp
xor
sti
jp
and
stos
adc
mov
cmp
sar
add
and
push
les
and
mov
xchg
pop
push
iret
sbb
cmps
(bad)
(bad)
mov
movs
jge
and
in
(bad)
inc
lods
addr16
and
xor
xor
jmp
std
add
adc
inc
popa
les
outs
out
fimul
(bad)
(bad)
fisttp
add
adc
sub
sbb
pop
inc
lahf
dec
aam
mov
fisub
loop
lahf
hlt
or
test
jns
pop
jb
dec
outs
int
dec
sub
(bad)
jmp
xchg
das
or
mov
dec
push
lods
add
mov
(bad)
push
mov
jecxz
dec
jo
dec
ja
jae
(bad)
push
jno
icebp
pop
dec
ja
dec
dec
(bad)
(bad)
(bad)
inc
idiv
call
cmp
fucomip
push
mov
iret
inc
and
aam
sar
int
(bad)
(bad)
(bad)
dec
cmovbe
fist
imul
cld
ins
int3
cmp
(bad)
push
shl
(bad)
(bad)
call
test
jno
jp
daa
rol
sti
jmp
push
ja
ret
(bad)
(bad)
ds
in
ins
hlt
xchg
in
inc
cmp
mov
outs
outs
mov
shl
inc
retf
cmps
push
adc
hlt
pop
pop
jne
xchg
cmps
fbld
mov
sub
mov
push
inc
enter
inc
je
iret
sub
sti
jge
inc
inc
mov
mov
(bad)
mov
sub
loop
(bad)
jmp
aam
in
mov
shl
cdq
loop
or
push
xchg
mov
fidiv
inc
out
mov
pop
sub
daa
cdq
mov
dec
fimul
add
movs
sub
inc
imul
(bad)
dec
loope
push
aaa
add
lahf
sub
add
scas
inc
xor
les
(bad)
(bad)
(bad)
(bad)
mov
enter
addr16
pop
add
repz
xchg
call
mov
out
stos
push
inc
xor
adc
xchg
pop
add
inc
push
sub
movs
pop
scas
not
xor
(bad)
call
ror
xchg
push
or
sahf
adc
adc
dec
cli
(bad)
(bad)
(bad)
call
stc
jno
sub
fisubr
int3
jp
push
push
xchg
or
outs
mov
fs
retf
(bad)
(bad)
(bad)
dec
shl
jne
jl
xchg
jmp
ins
cvtpi2ps
loope
in
cmp
xor
lock
call
aaa
jecxz
repnz
jmp
add
dec
mov
pop
(bad)
(bad)
(bad)
jmp
sbb
out
cdq
aas
int
sub
ret
dec
push
mov
jge
mov
(bad)
(bad)
call
push
push
pop
rcr
jb
rol
mov
in
add
nop
or
lahf
(bad)
(bad)
(bad)
inc
idiv
mov
sbb
lods
shl
mov
inc
scas
ror
jp
push
xor
(bad)
fisttp
cmps
fucom
mov
into
sub
std
jno
(bad)
fcom
inc
hlt
add
fdivr
(bad)
push
(bad)
cmp
mov
cli
cmp
mov
sbb
add
jp
and
and
dec
(bad)
and
je
xchg
(bad)
fstp
adc
mov
jl
sbb
adc
jp
add
add
gs
lods
fbld
(bad)
(bad)
inc
cmp
scas
xchg
out
mov
and
inc
loop
cmp
xchg
mov
jge
or
in
jmp
enter
xchg
dec
adc
pop
loopne
(bad)
(bad)
call
pop
ds
nop
fisubr
out
ds
xchg
or
xchg
vrsqrtss
xchg
and
xor
clc
adc
(bad)
in
sbb
jecxz
lahf
pop
imul
fsubp
push
pop
ins
mov
pinsrw
ss
call
fs
sub
xchg
into
pushf
repnz
(bad)
dec
inc
call
cmp
xor
push
jmp
(bad)
push
and
icebp
and
xchg
aam
push
lgs
mov
push
(bad)
(bad)
call
jmp
jmp
jo
adc
cli
inc
into
adc
(bad)
mov
dec
mov
jne
jp
mov
inc
(bad)
(bad)
(bad)
dec
(bad)
sti
retf
add
adc
xchg
mov
pop
mov
xchg
fld
leave
or
test
scas
cli
out
jbe
test
jp
loope
cmp
test
(bad)
jmp
lds
pop
inc
inc
lea
ja
push
mov
sub
add
jl
mov
repz
xchg
cdq
fstp
fdiv
out
sbb
test
sub
jnp
aam
imul
(bad)
(bad)
(bad)
(bad)
clc
cmp
aam
stos
aas
sar
and
push
repz
push
(bad)
call
mov
stc
test
lea
pop
dec
inc
cmp
(bad)
call
out
es
mov
push
dec
cmp
addr16
fisub
xor
(bad)
call
pop
or
outs
je
add
jne
pop
xchg
dec
xor
or
or
jmp
std
(bad)
(bad)
fbstp
push
mov
adc
aas
lods
inc
sbb
(bad)
jmp
pusha
int
bound
push
dec
jbe
add
bound
adc
mov
call
(bad)
mov
mov
out
cmc
and
push
repnz
fistp
(bad)
(bad)
(bad)
inc
jne
mov
in
push
call
xor
mov
push
inc
arpl
sub
loopne
lods
out
(bad)
(bad)
dec
sti
mov
fwait
ja
inc
cmc
call
mov
mov
into
(bad)
(bad)
(bad)
push
data16
adc
ret
mov
imul
mov
cmp
(bad)
mov
mov
jge
fs
xchg
push
pop
jmp
mov
(bad)
(bad)
(bad)
jmp
fdiv
and
fmul
cmps
sahf
sub
test
jbe
mov
sbb
je
test
and
icebp
mov
xor
add
pop
adc
clc
mov
xchg
aad
adc
xchg
out
pushf
fmul
jmp
fstp
add
(bad)
jne
shl
(bad)
fild
xor
(bad)
cwde
add
aam
cmp
pushf
cli
dec
pop
pop
and
(bad)
(bad)
mov
loop
adc
xchg
dec
jno
dec
adc
cmc
push
in
fs
add
dec
(bad)
(bad)
(bad)
call
dec
call
push
icebp
popa
mov
call
gs
adc
test
lahf
movs
(bad)
(bad)
(bad)
inc
ds
sbb
je
xor
aaa
pop
out
iret
jnp
push
enter
imul
(bad)
(bad)
mov
pop
add
out
push
out
inc
das
push
and
mov
hlt
pop
call
lods
adc
in
cmp
and
lods
push
inc
loopne
pop
or
stos
adc
shl
shr
mov
(bad)
mov
nop
arpl
cmp
add
pop
dec
mov
scas
inc
fcmove
stc
adc
or
les
mov
lahf
hlt
aad
jp
pop
retf
mov
pop
icebp
aad
pop
pop
and
ja
jg
and
sub
xchg
repnz
fs
xor
push
dec
mov
(bad)
(bad)
(bad)
push
in
xor
cmp
aam
ds
lahf
(bad)
xchg
cmp
push
sbb
iret
push
sub
mov
call
mov
loope
lahf
sub
jae
mov
push
int
add
(bad)
call
and
call
sbb
call
(bad)
mov
call
sbb
mov
xor
push
cwde
inc
test
cli
xchg
mov
pushf
jne
sbb
out
ja
dec
inc
mov
mov
jmp
xchg
sahf
movs
(bad)
fld
mov
sbb
fistp
les
std
(bad)
(bad)
dec
iret
(bad)
ror
sub
pop
xchg
sar
es
ins
and
inc
bnd
ss
sub
dec
(bad)
(bad)
(bad)
fistp
and
ins
lods
push
mov
pop
iret
(bad)
adc
pop
inc
test
sti
push
je
jge
fwait
(bad)
push
xor
sbb
inc
fnstcw
out
jle
into
inc
ins
push
test
dec
(bad)
(bad)
(bad)
call
js
xchg
ss
jecxz
loope
cmp
(bad)
ror
dec
cld
jmp
pop
test
ja
test
imul
or
popa
sbb
xor
and
mov
int
push
sar
pop
pop
pop
fucomip
pop
nop
ja
test
mov
mov
jmp
scas
mov
leave
push
jmp
adc
mov
popa
enter
push
movs
sbb
shr
sbb
or
(bad)
(bad)
inc
jb
test
(bad)
shl
lea
jbe
pop
and
cmp
jne
(bad)
(bad)
jmp
fs
inc
fmulp
mov
sub
cmp
inc
pop
or
push
dec
ror
dec
popa
(bad)
cmp
ret
push
sub
(bad)
(bad)
push
(bad)
js
sbb
mov
mov
dec
jecxz
sbb
sti
inc
inc
mov
cld
(bad)
(bad)
fbld
jnp
adc
aaa
sub
pusha
inc
cmps
mov
jecxz
(bad)
fiadd
ss
(bad)
fbld
fdivr
sub
test
push
hlt
test
aam
(bad)
(bad)
(bad)
out
shr
mov
push
push
ret
inc
push
cli
add
xchg
test
fmul
jb
pop
xor
fisttp
add
(bad)
(bad)
(bad)
cmp
ins
cmp
dec
push
xor
fsubr
or
mov
popa
dec
add
mov
fild
sub
cs
jbe
loop
mov
cmc
test
out
(bad)
(bad)
(bad)
jmp
mov
pop
adc
clc
sub
dec
dec
stos
push
ins
or
(bad)
(bad)
(bad)
dec
jp
in
xchg
hlt
and
lds
test
mov
add
inc
add
(bad)
(bad)
fldenv
imul
adc
aas
aam
pop
cld
(bad)
cmp
mov
scas
jge
mov
mov
xor
xchg
jg
sub
(bad)
(bad)
push
push
out
es
mov
adc
fistp
adc
data16
int3
mov
jns
das
(bad)
dec
in
outs
cmp
cmp
mov
add
lods
sti
imul
loop
repz
jle
and
adc
outs
int
sbb
or
dec
iret
call
es
mov
xor
push
pop
pop
(bad)
(bad)
(bad)
call
jp
popa
shr
mov
mov
pop
cmc
sbb
cmp
sbb
call
ret
pop
aaa
mov
jnp
adc
aaa
cmp
(bad)
jmp
mov
jp
retfw
xchg
sub
mov
lock
std
or
cmp
add
sub
push
std
jmp
jne
and
jl
or
mov
mov
xchg
repnz
dec
inc
(bad)
(bad)
(bad)
jmp
fldcw
mov
ss
or
(bad)
mov
arpl
or
aam
(bad)
(bad)
jmp
(bad)
mov
mov
xchg
inc
out
dec
jle
inc
aas
jne
popa
jb
cmp
lods
pop
jae
mov
dec
cmps
dec
jecxz
pop
test
mov
jmp
adc
test
(bad)
inc
sub
jne
and
pop
int
ins
mov
jae
sbb
and
(bad)
(bad)
in
aaa
out
sub
push
imul
cmp
sbb
sub
(bad)
(bad)
jmp
xor
xchg
sbb
adc
pusha
sbb
movlps
xchg
sbb
call
sar
sahf
mov
jecxz
out
fwait
sbb
ds
push
xchg
in
cmc
xchg
push
(bad)
(bad)
(bad)
(bad)
call
shl
and
sub
sub
(bad)
xor
repz
lods
iret
(bad)
(bad)
(bad)
call
xor
xchg
xchg
xchg
push
test
sub
pushf
retf
je
or
inc
(bad)
sbb
push
xchg
jecxz
mov
(bad)
push
retf
sbb
mov
sub
inc
pop
daa
cmc
xchg
nop
sbb
(bad)
(bad)
(bad)
call
retf
cmp
mov
jb
inc
pop
fadd
sbb
(bad)
arpl
(bad)
(bad)
(bad)
jg
sub
pop
retf
push
repz
div
push
dec
lea
iret
ja
dec
mov
mov
fldcw
les
ret
cmp
and
hlt
mov
sub
out
mov
out
pop
lods
icebp
push
ins
and
rol
(bad)
lahf
and
js
mov
jnp
(bad)
(bad)
jmp
icebp
jl
jo
fwait
aaa
ret
int3
cmp
or
cmp
sub
ins
and
das
xchg
push
(bad)
(bad)
(bad)
inc
or
mov
hlt
ins
jmp
into
cmc
dec
scas
or
mov
fcmovne
mov
(bad)
(bad)
(bad)
inc
fsubr
xchg
dec
(bad)
fistp
dec
sbb
xor
(bad)
(bad)
(bad)
jmp
stc
push
xchg
adc
aas
dec
jg
stos
inc
fidivr
cmp
iret
test
call
mov
inc
lods
xchg
mov
into
mov
pop
(bad)
aam
sub
mov
push
adc
(bad)
(bad)
(bad)
call
fsub
loopne
bound
jmp
cmp
inc
fs
addr16
cmp
(bad)
(bad)
inc
outs
popf
(bad)
loope
sub
push
das
and
loop
movs
mov
sbb
pushf
imul
push
add
xchg
aad
lea
and
and
loopne
lds
lods
mov
inc
fwait
push
jo
mov
mov
pushf
sbb
rcl
call
stos
pop
cwde
icebp
aaa
retf
clc
dec
xor
dec
cld
bswap
stos
popf
xchg
cs
clc
ins
cmc
(bad)
(bad)
inc
xchg
mov
int
in
shl
dec
mov
add
shl
pop
fisub
pop
inc
stc
xlat
hlt
fs
fild
cmps
into
dec
sbb
movs
rcr
jg
push
cwde
add
jnp
xchg
loopne
jmp
sbb
in
pop
or
enter
hlt
mov
test
mov
in
xchg
mov
shr
pop
lea
pusha
cli
dec
ret
(bad)
(bad)
(bad)
dec
mov
pop
xor
pop
and
js
sbb
nop
int
xor
sbb
sbb
das
sar
clc
sbb
adc
or
mov
fdivr
lods
daa
xchg
jno
cmp
std
(bad)
(bad)
inc
in
push
add
inc
data16
pop
repnz
mov
push
fcom
scas
inc
scas
jae
(bad)
push
push
mov
xor
jle
fidivr
retf
in
jmp
movs
aas
mov
(bad)
(bad)
dec
lods
push
add
jl
sbb
adc
jge
call
xlat
js
loop
les
push
adc
hlt
aam
push
aam
xchg
jmp
push
icebp
mov
(bad)
(bad)
call
push
outs
push
jb
jnp
and
xchg
test
out
test
jns
(bad)
(bad)
jmp
in
mov
adc
and
dec
out
mov
popf
mov
adc
dec
sbb
sar
(bad)
(bad)
push
xchg
ds
mov
adc
fld
add
arpl
push
jns
add
ss
(bad)
mov
outs
push
lods
or
adc
xor
jg
ret
cmp
jmp
dec
adc
or
sti
stc
jmp
pop
(bad)
(bad)
out
mov
dec
cmp
mov
add
in
cdq
jns
push
pop
clc
(bad)
fst
int
inc
pusha
daa
xor
add
ins
repz
(bad)
(bad)
(bad)
clc
aad
fs
rcr
cld
fnsave
xchg
repnz
xchg
dec
mov
push
xlat
fsub
cmps
mov
xchg
add
pop
lds
test
cmp
mov
xchg
sbb
daa
(bad)
shl
adc
mov
mul
(bad)
(bad)
call
push
sbb
xchg
xchg
sbb
out
add
ret
ret
add
(bad)
(bad)
push
bound
shl
gs
(bad)
mov
fdiv
jecxz
mov
(bad)
(bad)
(bad)
dec
adc
cmp
mov
mov
add
addr16
pusha
aam
push
sub
sbb
hlt
jb
int3
jae
sbb
ss
ins
or
test
adc
dec
add
lahf
cmp
(bad)
call
clc
mov
adc
inc
inc
jns
les
mov
xchg
fiadd
(bad)
(bad)
sti
push
fucomi
es
in
cmp
imul
cli
jge
repnz
and
mov
xchg
(bad)
(bad)
(bad)
fisttp
fwait
int
mov
adc
sbb
mov
jno
mov
aad
(bad)
(bad)
(bad)
jmp
(bad)
in
out
movs
jnp
mov
mov
jo
pop
push
mov
sub
or
adc
jmp
and
mov
dec
wbinvd
xchg
mov
outs
sti
movs
adc
sub
retf
mov
dec
mov
(bad)
dec
jae
ficom
imul
mov
mov
pop
lock
sbb
nop
dec
jmp
sub
mov
add
popf
ret
push
jge
(bad)
(bad)
dec
test
xor
lahf
xchg
loope
ins
imul
test
loope
(bad)
(bad)
(bad)
jmp
jmp
ins
mov
lock
cmp
scas
sbb
cld
stc
rcr
xchg
cmp
mov
ficomp
(bad)
push
leave
sbb
sbb
mov
lea
cmps
cmps
push
mov
xchg
(bad)
movaps
push
clc
(bad)
jmp
inc
xor
fsub
fcmovu
out
lea
pusha
adc
pop
loopne
cs
push
ins
bound
ja
cmp
mov
sbb
(bad)
(bad)
(bad)
dec
ficomp
hlt
rcr
lock
retf
push
aas
imul
adc
imul
(bad)
(bad)
(bad)
(bad)
cmp
add
sub
in
jbe
scas
addr16
iret
cs
sub
pusha
(bad)
(bad)
das
clc
call
xchg
inc
hlt
inc
stc
xchg
lahf
daa
adc
mov
jbe
adc
xchg
(bad)
(bad)
jmp
jmp
sbb
xchg
movs
sti
std
scas
or
and
mov
ds
int3
push
push
(bad)
mov
(bad)
(bad)
dec
jbe
cmc
int3
cmp
repz
or
and
pop
ror
xchg
ja
ror
scas
cli
pop
cmp
sbb
cs
adc
or
xchg
sbb
(bad)
(bad)
(bad)
cmp
mov
pop
test
add
call
in
int3
mov
push
call
imul
cmp
jmp
jecxz
cmps
clc
daa
pop
rol
sbb
scas
push
xchg
les
push
sar
jbe
jne
scas
cdq
addr16
fld
cld
sahf
mov
(bad)
sbb
dec
clc
mov
push
mov
pop
(bad)
in
outs
inc
sahf
mov
sti
test
(bad)
cmp
jg
sbb
(bad)
(bad)
dec
mov
int3
sub
jp
mov
out
ret
test
mov
mov
js
std
cwde
ja
inc
cld
call
xchg
sbb
(bad)
call
add
in
and
div
in
test
xlat
icebp
mov
jo
pop
aaa
std
push
cld
push
outs
and
outs
adc
mov
out
repnz
rol
jg
inc
sub
(bad)
push
shr
leave
mov
(bad)
cs
jp
lds
aad
jne
popf
mov
inc
inc
sti
cdq
jmp
or
push
int
cwde
test
(bad)
jmp
dec
pop
dec
retf
push
or
repz
sub
mov
add
lds
(bad)
(bad)
jmp
call
or
shl
div
imul
adc
sub
(bad)
(bad)
call
cmps
cmp
push
lods
scas
outs
or
and
mov
sbb
(bad)
outs
pop
push
mov
aam
ror
push
dec
sbb
sub
jmp
shr
jae
shl
(bad)
(bad)
sub
data16
jl
(bad)
(bad)
(bad)
dec
test
movs
in
push
outs
or
ins
pushf
dec
xchg
mov
cmp
test
and
aaa
(bad)
(bad)
(bad)
dec
fstp
(bad)
mov
cld
adc
sbb
cmp
rcr
or
dec
jne
cs
test
xchg
pop
stos
mov
sub
mov
jmp
mov
loope
nop
jl
mov
sbb
cmp
stos
sbb
gs
(bad)
call
pop
popf
mov
scas
push
jb
mov
jnp
adc
outs
(bad)
(bad)
call
outs
push
cmp
adc
jns
fwait
mov
mov
sahf
outs
loop
add
stos
imul
xor
add
inc
loope
xchg
sqrtps
daa
dec
pop
adc
xor
cli
(bad)
(bad)
inc
dec
loope
das
int3
xchg
mov
dec
sbb
push
out
xor
cmp
jmp
das
je
sub
fs
mov
sbb
or
and
(bad)
(bad)
(bad)
inc
xor
sbb
lock
rcl
pop
xchg
push
ret
mov
(bad)
(bad)
jg
push
mov
mov
std
movs
xor
and
sbb
sub
pop
lea
icebp
repz
xor
(bad)
(bad)
(bad)
call
stc
nop
fcomi
mov
(bad)
std
push
movs
mov
xor
aaa
xchg
shl
jmp
pop
mov
fwait
ss
jae
and
xor
(bad)
jge
and
rcr
test
mov
jecxz
mov
lea
sahf
inc
mov
jmp
or
dec
jo
mov
jae
in
inc
cmp
mov
repnz
in
lahf
xchg
or
mov
call
jmp
inc
mov
(bad)
jmp
ret
or
popa
enter
psubusb
mov
call
sbb
and
shr
ficom
or
sbb
jno
(bad)
(bad)
inc
push
cmp
push
(bad)
mov
sti
inc
jb
dec
jb
jmp
in
into
(bad)
popa
xor
call
or
das
xchg
cmp
sahf
and
inc
loope
std
dec
jbe
dec
add
(bad)
(bad)
call
dec
movs
push
cli
pop
aas
sub
mov
ins
pop
(bad)
xor
xchg
jmp
in
add
(bad)
dec
ret
sub
adc
pop
gs
sub
xchg
stos
aaa
inc
das
clc
sub
xchg
jb
sbb
and
(bad)
call
mov
nop
loopne
daa
in
adc
or
mov
mov
out
mov
(bad)
(bad)
(bad)
(bad)
cmp
pop
push
or
mov
jmp
loop
loope
imul
cmc
push
jnp
nop
inc
shr
or
imul
ss
xor
addr16
cmps
cmp
daa
pop
mov
(bad)
(bad)
inc
cli
xor
push
mov
and
sub
xor
int
push
imul
sub
cld
(bad)
(bad)
(bad)
jmp
xchg
aam
icebp
cld
pop
xor
cmp
jno
lea
mov
ret
in
pop
add
dec
adc
xchg
fcmove
add
(bad)
inc
cld
pop
in
mov
leave
jb
pop
pop
sbb
push
fsub
(bad)
mov
push
xchg
xchg
jnp
fstp
xchg
test
daa
xor
fwait
jno
push
mov
setg
test
push
and
cdq
push
adc
push
adc
gs
xor
(bad)
cmp
mov
fsub
mov
mov
repz
(bad)
call
sbb
scas
jnp
cmp
data16
out
mov
(bad)
(bad)
(bad)
inc
sti
js
es
mov
sbb
xchg
inc
mov
stos
movs
pop
push
lods
stc
arpl
or
(bad)
(bad)
call
mov
loopne
leave
mov
not
shr
and
mov
call
popf
in
and
cmp
adc
mul
aas
stc
dec
aam
shl
les
(bad)
(bad)
(bad)
jmp
iret
push
xor
mov
pop
out
ss
neg
cmp
jge
jmp
push
leave
(bad)
(bad)
(bad)
call
or
add
mov
pop
sub
mov
or
xchg
fild
stos
mov
adc
scas
push
xchg
adc
(bad)
(bad)
jg
std
test
push
dec
dec
cmp
inc
adc
(bad)
(bad)
(bad)
(bad)
dec
cmp
rol
dec
mov
xor
dec
int
pushf
cmp
push
xchg
callw
(bad)
(bad)
jmp
aad
retf
sar
cmp
daa
into
sub
movs
nop
fcom
(bad)
(bad)
(bad)
inc
lea
(bad)
out
scas
adc
mov
pop
inc
adc
add
mov
fs
pop
inc
(bad)
call
sbb
pop
push
xlat
mov
sahf
fwait
icebp
std
fiadd
ret
(bad)
(bad)
(bad)
push
daa
ror
repnz
jne
retf
sti
lods
loop
cmovs
nop
and
add
sub
test
jmp
inc
mov
mov
mov
push
xchg
sbb
fs
push
pop
xor
sbb
xchg
xor
es
int
pop
aas
xor
or
xchg
(bad)
inc
pop
neg
mov
(bad)
lahf
push
and
test
lea
shr
(bad)
jmp
dec
xchg
ds
add
mov
(bad)
cmp
(bad)
jmp
stc
je
xchg
dec
(bad)
(bad)
(bad)
inc
addr16
add
int
and
cli
lds
xor
xor
fcomp
sub
shl
add
(bad)
call
push
sub
add
cwde
jg
aad
aas
or
fs
test
(bad)
(bad)
(bad)
jg
pop
nop
popa
scas
pop
cmps
push
or
push
jne
xchg
sbb
shr
clc
inc
sbb
(bad)
(bad)
call
in
mov
test
push
int3
lods
icebp
or
sbb
dec
mov
stos
(bad)
(bad)
out
sub
cmp
adc
(bad)
pushf
pushf
sub
xor
(bad)
(bad)
(bad)
ds
pop
dec
mov
pusha
pushf
cld
(bad)
daa
dec
mov
pop
xor
out
shl
dec
jmp
xor
adc
sbb
call
mov
mov
sbb
lock
out
push
jge
mov
(bad)
(bad)
in
(bad)
ds
or
xchg
outs
push
mov
adc
mov
(bad)
or
call
xchg
cli
inc
in
ds
push
push
movs
scas
push
inc
push
pop
push
jmp
(bad)
jmp
je
iret
inc
or
sbb
push
adc
push
ret
leave
scas
outs
mov
inc
jns
repnz
addr16
jne
(bad)
(bad)
push
mov
xchg
push
cmp
int3
and
sti
and
push
push
xchg
adc
test
aam
mov
call
dec
inc
inc
xchg
jecxz
mov
(bad)
(bad)
pop
lahf
xor
ins
or
or
push
add
aaa
outs
test
(bad)
(bad)
jmp
imul
sbb
ss
cmc
mov
mov
push
and
das
cdq
xchg
(bad)
inc
(bad)
dec
mov
jo
jl
sbb
sub
push
dec
inc
(bad)
mov
sub
mov
adc
movs
lods
jmp
or
movs
push
stos
cdq
adc
jmp
repnz
xlat
sbb
call
push
imul
icebp
push
pop
repz
loop
dec
stos
push
jg
(bad)
out
clc
call
sub
jmp
aas
xor
scas
or
cmp
jp
cli
xor
push
repnz
aam
(bad)
(bad)
(bad)
cld
dec
test
inc
ret
add
sbb
push
and
mov
into
retf
add
dec
lock
(bad)
jmp
mov
xlat
pushf
jg
inc
fwait
xor
hlt
adc
shr
call
sbb
inc
xor
mov
sbb
cli
or
sbb
push
loop
inc
and
mov
dec
movs
stos
(bad)
sahf
(bad)
out
inc
js
sub
sar
(bad)
(bad)
sti
fisubr
in
add
cmp
mov
outs
mov
xchg
test
hlt
sar
(bad)
(bad)
mov
adc
loopne
(bad)
jl
push
xor
retf
pop
jecxz
pusha
pusha
cli
(bad)
(bad)
jg
ja
xchg
inc
cmp
jl
clc
adc
pop
xor
inc
ins
sub
xchg
push
das
dec
jp
(bad)
jmp
sbb
mov
retf
cmps
lock
scas
or
aad
add
(bad)
(bad)
mov
ins
aam
inc
imul
nop
mov
xor
push
fs
sub
(bad)
(bad)
call
xchg
cmp
xchg
fild
push
mov
cdq
push
adc
mov
lahf
imul
(bad)
(bad)
push
adc
sbb
loopne
mov
daa
in
jae
push
cmps
and
dec
xchg
imul
push
dec
movs
cmp
icebp
(bad)
inc
les
mov
sti
in
fs
cmps
aas
pop
sbb
pop
(bad)
jg
fimul
push
rol
lea
(bad)
fsubr
std
(bad)
mov
pop
cmc
jbe
mov
xor
daa
dec
pop
adc
pushf
mov
dec
mov
retf
sbb
call
pop
sbb
aaa
lahf
movs
or
jnp
mov
iret
xchg
jmp
pop
psubq
(bad)
(bad)
mov
jl
test
inc
cmp
cmp
dec
mov
(bad)
pop
dec
std
add
sbb
mov
out
add
(bad)
stos
xor
scas
fmul
cmp
mov
mov
aaa
ret
hlt
(bad)
(bad)
jge
cwde
cmp
mov
add
hlt
inc
sbb
inc
repz
mov
sar
outs
fdiv
(bad)
mov
xlat
(bad)
sbb
adc
jg
jg
cmc
sbb
(bad)
mov
neg
retf
hlt
jmp
(bad)
(bad)
(bad)
call
push
fsub
push
cli
xchg
loope
mov
and
add
shl
fimul
iret
pop
jnp
ror
xor
fistp
aas
push
inc
inc
xchg
cmps
inc
mov
push
out
inc
(bad)
(bad)
(bad)
jmp
(bad)
cmp
inc
push
ja
xor
(bad)
movs
into
test
jno
test
mov
(bad)
jg
inc
mov
mov
adc
push
jnp
push
xor
sar
dec
out
sub
gs
pop
mov
scas
sbb
retf
not
int3
mov
xchg
nop
fsub
int3
outs
mov
cwde
push
shr
pop
jge
(bad)
(bad)
(bad)
(bad)
jg
aaa
jb
cmp
cmp
icebp
inc
dec
mov
jno
jne
rcr
cli
iret
loop
cmp
in
pop
and
adc
(bad)
sbb
jmp
iret
mov
mov
push
sub
js
and
xchg
mov
retf
mov
(bad)
(bad)
push
imul
es
mov
aad
jl
ret
sahf
sub
cmc
inc
push
imul
jb
mov
sub
or
jb
fisubr
aas
and
(bad)
call
test
(bad)
outs
jge
rcr
std
push
add
mov
cmp
xor
sar
popf
pop
adc
mov
or
cmp
push
mov
(bad)
(bad)
dec
jp
mov
popa
popf
nop
sub
sbb
xchg
fcomp
adc
fcomp
call
xchg
jle
mov
ds
aaa
and
lock
icebp
(bad)
(bad)
(bad)
(bad)
mov
inc
aam
xchg
out
rol
inc
sbb
ror
inc
sub
or
(bad)
(bad)
(bad)
inc
and
xchg
das
xchg
loopne
adc
jg
mov
leave
in
jmp
mov
lods
mov
dec
aas
pushf
jb
aas
xor
jno
bound
js
(bad)
(bad)
mov
push
mov
mov
xchg
outs
jmp
std
mov
in
test
fcmovnu
adc
sbb
in
xchg
inc
(bad)
jg
inc
(bad)
xchg
inc
mov
icebp
popf
lahf
push
fs
mov
std
ret
in
and
pop
ficomp
fwait
mov
test
push
jg
mov
das
inc
lea
sub
and
xor
inc
aam
(bad)
mov
cwde
fldcw
cwde
pop
(bad)
call
mov
fdivr
(bad)
(bad)
fild
xor
and
test
cmc
out
push
pop
ret
je
imul
push
mov
push
(bad)
(bad)
out
cli
(bad)
cld
mov
push
jo
cmp
sub
mov
aam
mov
popf
jg
cmp
sbb
(bad)
xchg
and
mov
sbb
ins
xchg
mov
cmp
sub
push
cmp
dec
in
das
lock
rol
sub
sbb
pop
(bad)
(bad)
jmp
les
les
jge
pop
jb
aam
pop
sub
into
jecxz
dec
xchg
sbb
imul
call
leave
sub
or
in
pop
push
movs
cmp
cmp
loopne
out
sub
(bad)
aad
cmp
(bad)
dec
and
mov
repz
outs
cld
and
jne
out
rol
cmp
mov
adc
hlt
aad
rcl
mov
mov
(bad)
(bad)
(bad)
call
jnp
adc
je
jge
mov
xor
popa
les
pop
arpl
loop
pop
test
ja
fs
adc
mov
and
dec
mov
stc
rol
sub
(bad)
jg
in
pop
retf
mov
rcl
test
adc
mov
int3
adc
(bad)
in
ja
dec
in
vhaddpd
std
xlat
jecxz
call
fist
sti
aam
(bad)
(bad)
(bad)
call
clc
dec
lds
jp
add
stos
mov
pop
and
lahf
icebp
dec
push
push
stc
(bad)
mov
and
scas
loope
std
push
jecxz
mov
mov
leave
xchg
or
ret
js
(bad)
(bad)
jmp
int3
dec
into
mov
push
push
ins
push
icebp
lods
stos
scas
fistp
(bad)
or
cmp
mov
ret
(bad)
(bad)
mov
mov
cli
stos
add
fs
fild
(bad)
dec
out
sub
xchg
cmp
cmp
(bad)
jmp
lods
fisubr
mov
call
cmp
cmp
data16
(bad)
call
popf
fcomi
sti
pop
adc
(bad)
(bad)
call
repz
retf
or
pop
mov
fcom
push
ja
or
pushf
(bad)
(bad)
(bad)
dec
stos
or
xor
pop
add
pop
jecxz
iret
repnz
fdiv
(bad)
(bad)
(bad)
push
int
sub
mov
inc
inc
push
nop
xor
mov
jo
repz
pop
mov
scas
mov
(bad)
(bad)
(bad)
mov
add
and
mov
stc
addr16
clc
jne
jecxz
movs
push
push
pop
xor
sub
or
(bad)
dec
jae
add
das
or
sub
movs
test
push
hlt
data16
dec
aam
mov
cmp
aas
fsub
test
dec
(bad)
(bad)
(bad)
jmp
or
(bad)
xor
add
rcr
xor
arpl
in
cmp
sbb
dec
push
mov
(bad)
inc
(bad)
in
jno
dec
sti
mov
mov
popf
movs
add
inc
out
jecxz
xchg
lods
(bad)
(bad)
(bad)
jmp
and
xor
cmp
xor
repnz
shl
mov
dec
jae
xrelease
xor
clc
popa
mov
pop
movs
xchg
jge
cmp
jmp
pop
sti
nop
mov
jns
aaa
std
pop
push
add
dec
lock
ins
out
sbb
mov
fbld
repz
sahf
pop
mov
lods
cmp
mov
(bad)
(bad)
call
mov
lahf
jns
inc
not
push
jae
add
sub
and
dec
scas
(bad)
mov
rol
mov
mov
add
inc
arpl
(bad)
(bad)
push
rol
popf
and
loope
in
fadd
shr
dec
shr
dec
cdq
dec
outs
and
fsubr
mov
into
sahf
jb
out
loope
add
je
push
add
lods
push
(bad)
push
test
iret
popf
lods
div
(bad)
(bad)
js
push
lahf
pop
jge
xor
stos
dec
pusha
cli
inc
mov
data16
(bad)
(bad)
dec
pop
jno
lea
jne
cs
mov
pop
cld
xlat
jae
pop
and
cli
pusha
mov
(bad)
(bad)
(bad)
inc
xor
or
or
and
(bad)
jl
xor
mov
pusha
mov
or
xchg
pop
xlat
(bad)
(bad)
(bad)
dec
push
ror
cmps
div
addr16
std
adc
test
cwde
loopne
pop
lds
popf
(bad)
call
adc
or
adc
mov
ins
repz
(bad)
(bad)
push
xchg
dec
stc
xchg
dec
and
jle
and
outs
xchg
cmc
int
fcomp
adc
(bad)
(bad)
(bad)
call
mov
cmps
inc
xor
aas
inc
dec
pop
inc
fwait
jl
lock
xor
cs
adc
(bad)
(bad)
(bad)
call
xor
mov
mov
mov
fwait
arpl
sar
push
jbe
add
push
out
inc
data16
sbb
mov
lods
repz
stos
out
clc
cmp
mov
in
(bad)
(bad)
(bad)
inc
mov
hlt
jb
xchg
call
lahf
push
dec
test
stos
loopne
out
cmc
inc
jle
(bad)
mov
mov
lds
xor
iret
dec
addr16
push
cmp
loope
(bad)
jmp
fwait
stc
xor
inc
add
int
inc
bound
bound
in
popa
fisttp
push
cwde
(bad)
(bad)
(bad)
mov
int
mov
pop
ret
lods
inc
fsub
sbb
je
xchg
cdq
jecxz
(bad)
(bad)
jmp
jns
inc
pop
pop
cmp
add
repz
mov
scas
stos
mov
les
(bad)
mov
stos
test
es
mov
shl
retf
push
xlat
scas
sar
push
pop
fild
mov
(bad)
in
ror
mov
in
lea
(bad)
(bad)
jg
lods
sbb
mov
mov
pop
pop
mov
push
pop
aas
mov
(bad)
(bad)
(bad)
(bad)
cmp
call
addr16
dec
aad
sub
stos
aaa
and
(bad)
sti
fs
retf
clc
sbb
xor
das
hlt
es
cmp
jbe
icebp
jecxz
dec
jmp
dec
lock
ja
and
inc
sar
mov
jmp
mov
cmp
test
(bad)
(bad)
(bad)
call
and
or
fcomp
div
cli
fcomp
lahf
rcl
aad
jecxz
out
fs
(bad)
(bad)
jmp
xor
test
or
fmul
add
push
leave
cmp
mov
inc
push
or
test
movs
adc
and
cwde
push
xchg
outs
js
(bad)
(bad)
(bad)
(bad)
jp
addr16
jmp
call
add
idiv
sar
(bad)
(bad)
inc
jo
cmc
imul
enter
cs
test
scas
imul
add
(bad)
(bad)
(bad)
push
dec
xor
lds
jl
add
xor
push
mov
push
sub
daa
push
(bad)
cli
sbb
fld
cdq
or
adc
repz
adc
(bad)
jg
pop
dec
pop
pop
add
shl
sub
sub
and
aad
inc
jnp
je
(bad)
(bad)
(bad)
std
ficomp
xor
repz
into
(bad)
jl
mov
pop
icebp
mov
sbb
jo
stc
(bad)
mov
(bad)
jmp
xor
xchg
cld
pop
xchg
sub
inc
push
inc
fwait
repnz
inc
loope
sbb
and
(bad)
(bad)
call
jge
dec
xchg
fnstenv
add
ins
fdivr
mov
push
jmp
push
push
(bad)
(bad)
dec
cs
pop
out
leave
dec
pop
jmp
sub
fistp
test
adc
mov
mov
and
mov
in
aad
cmp
inc
sbb
lds
mov
lds
push
scas
(bad)
jmp
frstor
out
or
inc
adc
mov
aam
(bad)
inc
jnp
sbb
xchg
and
popa
lods
sahf
jae
jle
push
neg
into
js
or
and
jo
imul
dec
out
pushf
dec
mov
add
jmp
jmp
push
addr16
mov
jecxz
push
(bad)
adc
stos
mov
adc
cld
jg
outs
or
jnp
xchg
cmc
ret
fmul
pop
ret
xchg
ds
(bad)
(bad)
inc
jg
nop
pinsrw
mov
scas
outs
mov
fild
sub
popa
imul
icebp
(bad)
(bad)
jmp
push
xlat
fwait
adc
fisttp
popf
or
jno
nop
mov
add
xlat
push
push
loopne
pop
test
xchg
cmp
test
test
adc
gs
jmp
imul
fld
call
iret
jno
sahf
adc
gs
frstor
add
jmp
jnp
push
xor
xor
cmp
mov
and
inc
lods
(bad)
shr
cmc
(bad)
jmp
outs
xor
mov
inc
add
mov
push
es
jmp
or
mov
mov
fwait
cld
jae
add
xchg
(bad)
(bad)
mov
ficom
push
in
push
dec
or
sbb
in
or
push
dec
pop
add
jmp
inc
arpl
test
and
jg
jmp
dec
stc
xchg
jl
mov
(bad)
call
xchg
add
adc
adc
dec
push
cmp
stc
loopne
pusha
mov
(bad)
(bad)
mov
iret
nop
mov
and
and
push
outs
fucom
mov
imul
or
lahf
add
test
shl
iret
arpl
sub
push
stc
inc
jne
dec
xlat
(bad)
(bad)
(bad)
(bad)
inc
jmp
mov
adc
cmp
(bad)
and
(bad)
call
cmp
adc
pop
sahf
adc
xchg
xchg
loope
mov
(bad)
(bad)
(bad)
jmp
jecxz
icebp
fdivr
pop
jge
lods
mov
cli
push
aad
loope
prefetcht1
mov
adc
cmp
(bad)
jns
xor
sar
push
xchg
imul
mov
fimul
mov
cmps
sbb
(bad)
push
cdq
iret
sbb
cmp
(bad)
jle
gs
test
rcr
(bad)
dec
fisubr
and
sbb
cwde
sbb
dec
mov
(bad)
(bad)
(bad)
dec
xchg
popa
cmp
or
arpl
sbb
cmp
jb
pop
xchg
nop
aaa
fstp
push
adc
mov
mov
xchg
mov
(bad)
jo
in
lea
stos
in
pop
xchg
add
jle
cmps
mov
inc
or
out
adc
jmp
mov
lods
bound
lods
fdivr
adc
add
inc
or
retf
ja
add
int
rcr
daa
loop
(bad)
dec
es
sbb
ficomp
xor
mul
(bad)
outs
(bad)
(bad)
(bad)
mov
and
in
lock
and
mov
test
call
(bad)
sbb
mov
mov
adc
mov
es
sub
pop
lock
add
push
out
loope
cmp
repnz
mov
pop
(bad)
(bad)
dec
jl
aad
int3
bound
or
xor
shl
stc
add
stos
mov
mov
push
pop
jo
cli
in
and
or
lock
fnsave
xor
into
sub
ja
(bad)
jns
(bad)
call
jae
fsub
fild
cdq
fwait
pop
mov
(bad)
(bad)
(bad)
call
jp
fs
push
push
xchg
mov
push
fldcw
jle
adc
ins
pop
call
call
mov
push
cmp
pop
add
cmp
jns
mov
pop
div
mov
push
int3
mov
idiv
adc
inc
sbb
test
mov
hlt
sar
xor
inc
cmp
sbb
les
(bad)
push
sbb
fbstp
mov
mov
inc
mov
xchg
neg
inc
retf
add
stos
adc
rcr
addr16
jle
(bad)
(bad)
(bad)
mov
and
aad
add
in
and
sub
addr16
(bad)
(bad)
mov
mov
or
mov
lods
mov
pop
inc
dec
aaa
sbb
(bad)
(bad)
dec
in
jns
jb
xchg
adc
jae
sub
inc
dec
cmc
cli
retf
adc
(bad)
outs
in
jmp
dec
and
inc
pop
stos
movs
mov
(bad)
(bad)
jg
mov
mov
mov
scas
cmc
pushf
sub
cmc
js
lods
xor
mov
cdq
call
(bad)
call
and
add
fwait
push
mov
popa
shr
xchg
nop
(bad)
jmp
stc
xor
rcr
data16
(bad)
push
std
inc
sub
repnz
ins
mov
in
inc
add
lock
(bad)
jg
loop
shl
xor
ror
and
xchg
mov
(bad)
in
mov
lea
xlat
(bad)
mov
aas
enter
aaa
pop
rol
outs
fnop
dec
mov
scas
clc
xrstor
cmp
jmp
sub
icebp
xchg
adc
add
jae
mov
in
(bad)
(bad)
call
mov
and
daa
outs
cmp
ret
adc
sub
push
rcr
xchg
push
je
push
(bad)
(bad)
(bad)
dec
out
in
dec
mov
and
inc
sti
pop
mov
pcmpeqw
lock
scas
mov
mov
jmp
inc
xchg
sbb
sub
call
push
cmps
ror
lods
add
clc
(bad)
call
mov
(bad)
pop
mov
aad
push
mov
xchg
(bad)
(bad)
(bad)
jmp
into
lock
mov
pop
mov
fdecstp
rcr
movs
inc
jmp
leave
ror
jge
mov
mov
packssdw
jge
fld
sub
mov
out
add
(bad)
stos
xor
dec
and
xor
and
cdq
test
(bad)
clc
pushf
rol
or
div
dec
mov
cwde
and
pusha
or
rcr
mov
cmps
cdq
(bad)
in
fimul
mov
dec
imul
jmp
xchg
ja
outs
and
sbb
int
das
mov
pop
or
retf
jle
pop
mov
(bad)
(bad)
(bad)
call
lods
inc
sbb
aad
jno
int
sub
rcl
cmp
push
cmps
jo
mov
(bad)
(bad)
(bad)
(bad)
jmp
jge
xchg
outs
icebp
popf
cld
mov
jns
xchg
sbb
and
cmpxchg
mov
jmp
xlat
dec
inc
cs
cs
call
mov
push
inc
cmp
out
sub
in
(bad)
(bad)
(bad)
(bad)
inc
loope
(bad)
popa
ins
xchg
xchg
inc
cdq
mov
cmp
mov
push
jmp
(bad)
(bad)
(bad)
fbstp
pop
jns
xchg
fcom
xchg
rol
push
mov
(bad)
imul
inc
scas
mov
xor
push
or
push
fsub
sub
test
sbb
je
pop
add
(bad)
push
jb
mov
sub
xor
inc
in
mov
xchg
imul
fstp
pop
jno
ds
out
rol
mov
sti
int3
popf
int
sub
je
(bad)
(bad)
(bad)
jnp
push
jmp
fdivr
fcmove
ret
jmp
sar
in
inc
and
add
out
sub
call
jecxz
retf
dec
(bad)
retf
repz
add
(bad)
(bad)
(bad)
(bad)
ds
mov
daa
xor
fsub
push
cmps
adc
fist
int
mov
mov
dec
fldcw
mov
cmp
out
sti
add
mov
inc
(bad)
sub
enter
jmp
sbb
sub
jb
jo
mov
fidivr
(bad)
(bad)
(bad)
mov
add
jl
jne
dec
sbb
imul
mov
lods
fsubr
dec
jmp
lods
jno
arpl
push
(bad)
fmul
sub
arpl
pop
mov
jg
test
(bad)
in
cmp
mov
and
mov
std
adc
xor
movs
add
(bad)
(bad)
jmp
sub
stc
adc
push
xchg
jmp
repnz
loopne
pop
mov
xor
(bad)
(bad)
mov
jmp
retf
into
mov
call
(bad)
jg
inc
or
pop
inc
xchg
fist
adc
loop
pushf
or
adc
ins
xchg
dec
mov
loop
cmp
pop
in
enter
and
and
cld
repz
dec
add
add
jp
fs
push
jmp
adc
pop
int3
(bad)
loop
xor
neg
(bad)
adc
cwde
or
pop
mov
dec
mov
push
mov
and
dec
jg
(bad)
inc
data16
sbb
or
imul
stos
cmp
enter
or
daa
(bad)
(bad)
pushw
and
or
push
adc
cmps
fisubr
xchg
adc
stos
out
jo
test
(bad)
(bad)
(bad)
hlt
jmp
mov
adc
cmp
xchg
adc
ins
bnd
out
rcr
les
(bad)
outs
cli
push
cmp
fldcw
sub
inc
inc
and
cwde
jmp
xor
pushf
test
or
dec
cmp
gs
cmp
(bad)
(bad)
jmp
jmp
add
in
push
ret
fsincos
inc
and
(bad)
(bad)
(bad)
jmp
jge
dec
sub
mov
jp
inc
(bad)
push
dec
iret
pop
(bad)
(bad)
(bad)
jmp
jo
pop
icebp
fadd
pop
rcl
imul
mov
ins
xchg
ins
dec
or
pop
jg
(bad)
(bad)
jnp
and
inc
push
int
and
xor
mov
test
int3
inc
lods
stos
stos
clc
(bad)
(bad)
jns
enter
add
or
(bad)
es
ds
and
and
(bad)
jmp
xor
sbb
ffreep
dec
lods
iret
fwait
xor
aad
cmp
adc
(bad)
call
sahf
xchg
xor
scas
push
push
pop
pushf
(bad)
cmp
outs
fwait
push
xor
(bad)
(bad)
jmp
les
cmp
aad
dec
psubw
adc
mov
and
stos
(bad)
cmp
xor
push
mov
daa
je
jno
cmp
push
or
jg
iret
imul
pop
test
push
hlt
leave
repnz
enter
dec
mov
fstp
and
push
movs
jne
sbb
inc
leave
dec
xor
push
add
(bad)
(bad)
push
fisttp
pop
inc
ret
ror
or
xchg
push
xor
mov
dec
mov
jp
xlat
inc
add
rcr
jp
lahf
xchg
xchg
sbb
or
xchg
mov
(bad)
(bad)
(bad)
call
lods
inc
loope
scas
adc
data16
les
mov
push
and
(bad)
call
sub
jge
and
test
jl
sbb
push
dec
pusha
mov
(bad)
(bad)
push
xor
stos
dec
jo
dec
xchg
test
mov
adc
jecxz
mov
(bad)
(bad)
(bad)
inc
jo
movs
adc
xlat
inc
icebp
aam
pop
cwde
push
or
dec
inc
mov
(bad)
fisttp
aad
(bad)
jmp
inc
mov
sub
sub
add
lock
(bad)
jg
aad
pop
xor
or
dec
data16
sar
push
adc
dec
(bad)
xor
xchg
fsub
aad
add
xor
(bad)
(bad)
(bad)
(bad)
jmp
sub
jne
call
adc
dec
dec
fs
out
pop
xchg
pop
pop
cmp
(bad)
(bad)
(bad)
dec
sti
cmp
int3
and
cvtpi2ps
addr16
adc
repz
mov
(bad)
push
pop
loopne
stc
jae
dec
add
dec
ret
aad
xchg
sbb
lods
xor
(bad)
(bad)
(bad)
mov
xor
scas
out
mov
jp
das
push
pop
mov
fcomp
in
es
stos
lods
jge
sbb
das
clc
dec
mov
retf
outs
cmp
mov
call
shl
gs
in
adc
(bad)
jmp
clc
sahf
sub
adc
stos
mov
dec
stos
test
or
add
dec
mov
fxam
mov
out
fnstsw
movs
mov
std
xor
mov
adc
adc
add
dec
in
(bad)
(bad)
(bad)
jmp
fmul
retf
pop
loop
mov
or
and
xchg
std
aas
jmp
int3
je
and
jmp
pop
mov
sbb
(bad)
mov
cs
loopne
dec
mov
xchg
(bad)
push
imul
sbb
inc
hlt
repz
cmps
test
push
(bad)
push
cmp
ret
mov
pop
mov
sbb
shl
push
(bad)
xchg
cli
je
sti
scas
push
hlt
je
loopne
shr
iret
and
fild
(bad)
jg
sub
mov
bound
les
add
inc
jmp
int
lods
and
add
inc
adc
inc
and
sar
call
or
push
arpl
(bad)
fwait
xlat
retf
fcomi
cmp
cwde
fdivr
(bad)
(bad)
jg
cmp
xchg
(bad)
ret
retf
inc
iret
adc
and
sub
dec
cmp
pop
jge
xor
jmpw
aas
int3
std
fld
(bad)
mov
mov
push
bound
pushw
mov
add
out
cli
pop
pushf
mov
sub
xchg
(bad)
(bad)
jmp
push
sub
xchg
sub
or
mov
std
sahf
lds
adc
mov
pushf
adc
(bad)
(bad)
call
dec
retf
cmp
pop
shld
dec
cmp
loop
dec
das
adc
or
adc
pop
dec
movs
lods
xor
sbb
sbb
dec
dec
lea
mov
dec
cmp
mov
jb
popf
and
jae
repnz
or
mov
es
mov
mov
call
movs
int
les
jno
(bad)
(bad)
mov
pop
pop
cmc
(bad)
jmp
dec
or
test
int3
xor
and
mov
mov
dec
stos
fmul
sub
lods
ds
call
(bad)
jmp
es
in
xchg
sub
aaa
jno
in
ss
or
mov
sbb
push
rcl
fcomip
dec
push
dec
adc
cmc
sbb
push
jp
and
retf
mov
pop
sub
shl
adc
dec
xchg
sar
(bad)
push
dec
mov
dec
jns
scas
and
pop
push
ds
fbld
cwde
xor
push
pop
bound
fdivp
or
retf
ins
shr
xchg
mov
mov
mov
or
sbb
dec
adc
mov
jmp
fwait
sbb
test
(bad)
push
pop
add
dec
mov
out
jg
ja
adc
fdiv
out
(bad)
jmp
sbb
and
jge
cmps
jl
mov
clc
xchg
mul
inc
fild
outs
movs
test
dec
inc
jg
sbb
mov
(bad)
mov
fsubr
jbe
fsubr
jmp
fild
dec
gs
repz
jl
push
cmps
and
adc
(bad)
(bad)
(bad)
call
movs
ss
int
(bad)
out
xchg
add
(bad)
fmul
mov
clc
scas
adc
ins
push
xchg
out
icebp
xor
outs
pop
fidivr
mov
adc
repnz
fcomip
(bad)
inc
out
cld
enter
inc
not
pop
jl
cwde
adc
mov
mov
or
daa
push
cmp
inc
imul
pop
pop
dec
add
jecxz
(bad)
(bad)
jmp
bound
lahf
adc
stc
ins
pop
in
fwait
nop
pop
sub
jb
sub
bound
(bad)
push
sbb
(bad)
mov
cmp
test
shr
add
(bad)
(bad)
(bad)
call
stc
or
sbb
es
pop
and
in
into
or
pop
jne
jae
jmp
(bad)
(bad)
call
ret
movs
shl
pop
ins
push
mov
(bad)
sub
scas
push
mov
mov
adc
daa
jmp
hlt
loope
pushf
into
nop
xchg
add
mov
xor
(bad)
(bad)
call
ss
cmp
jnp
cmps
dec
inc
fwait
lock
daa
cmp
adc
sub
arpl
aad
stos
pop
xor
pusha
in
ret
call
daa
stos
xor
hlt
pop
ss
aam
and
fmul
(bad)
push
repz
arpl
pop
mov
jge
outs
mov
sub
ss
pop
xchg
fs
or
(bad)
(bad)
mov
jp
jnp
jecxz
xchg
test
and
mov
xor
test
mov
(bad)
rcl
(bad)
(bad)
(bad)
jmp
imul
or
pop
test
jp
fidiv
not
cmp
jnp
xchg
aad
test
lock
enter
in
imul
mov
or
xor
adc
mov
jbe
cmp
push
(bad)
(bad)
jmp
lods
test
fstp
push
sub
xor
enter
lock
call
jle
cmp
cwde
dec
cmp
pop
xchg
(bad)
dec
lock
fsubrp
add
pop
mov
(bad)
and
push
sar
push
dec
daa
fs
mov
dec
cmp
call
inc
adc
adc
(bad)
(bad)
call
(bad)
mov
mov
js
push
scas
ds
(bad)
call
int3
mov
jo
enter
dec
xchg
ins
into
imul
mov
call
pop
pop
jle
rol
je
or
xor
dec
nop
cli
cmp
xchg
mov
fsubr
mov
push
imul
call
aad
out
test
xor
push
jl
mov
ds
js
out
(bad)
(bad)
jmp
lods
push
xor
outs
nop
bound
push
or
and
xchg
jns
ret
and
loop
(bad)
(bad)
mov
loop
retf
fsubr
jns
or
sbb
sub
sub
aas
fucom
outs
xor
hlt
mov
jo
das
ins
scas
repz
mov
mov
(bad)
(bad)
(bad)
(bad)
call
xchg
ret
fstp
outs
jle
and
adc
lds
add
std
and
es
dec
push
inc
sbb
aaa
rol
sub
mov
cs
nop
ins
cmp
jns
je
cmp
(bad)
(bad)
jmp
das
mov
fs
leave
mov
movs
cmc
mov
xchg
fs
(bad)
(bad)
(bad)
mov
push
push
sub
inc
cmp
popa
sbb
xchg
test
fcomp
pop
scas
sub
(bad)
(bad)
call
(bad)
fcomip
mov
scas
xchg
xor
jge
and
push
xchg
adc
push
loopne
sub
add
retf
jb
sub
inc
mov
mov
inc
ror
pop
jns
(bad)
(bad)
dec
or
push
aaa
clc
inc
xchg
or
mov
cmp
inc
aas
pop
pop
cs
xlat
(bad)
(bad)
(bad)
push
pop
test
xchg
repnz
mov
jnp
jge
test
dec
or
jl
mov
in
(bad)
jg
(bad)
xchg
pop
lock
push
cmp
into
dec
xlat
sbb
sbb
inc
inc
(bad)
(bad)
(bad)
push
mov
hlt
pusha
cmp
mov
adc
jmp
and
mov
dec
js
retf
adc
(bad)
call
and
inc
cs
cmc
adc
cwde
cmp
dec
mov
pop
cmc
mov
(bad)
div
xor
dec
add
call
push
pop
rcl
ins
xor
test
xchg
aad
mov
dec
mov
aaa
jmp
xlat
enter
xchg
mov
mov
ja
imul
mov
(bad)
dec
fmul
cmp
test
hlt
shl
popf
mov
(bad)
dec
mov
jns
jp
pop
lea
stos
sahf
movzx
mov
mov
mov
mov
dec
imul
rcl
mov
clc
or
call
sub
ret
push
lods
pop
push
mov
loope
mov
dec
sub
dec
cli
ins
aam
(bad)
(bad)
inc
mov
out
xchg
dec
push
movs
xchg
cmps
out
dec
jg
jp
aaa
dec
call
jge
repz
(bad)
(bad)
push
leave
sub
jo
call
xor
out
rol
mov
aaa
ja
fwait
leave
and
(bad)
(bad)
(bad)
fnstcw
cmc
into
jecxz
mov
xor
inc
lahf
cmps
pushf
nop
je
rcr
push
dec
loop
(bad)
(bad)
(bad)
call
xor
out
stc
cmp
movs
cmp
and
mov
stos
pop
pop
nop
loope
dec
mov
push
xchg
and
mov
xlat
scas
or
push
xchg
imul
or
(bad)
(bad)
inc
and
dec
sbb
lock
stc
xchg
pop
xchg
js
hlt
fld
mov
mov
(bad)
(bad)
(bad)
cld
fbstp
and
cmc
cdq
push
push
jg
xchg
mov
fild
mov
inc
(bad)
(bad)
(bad)
mov
push
test
neg
mov
adc
pop
adc
pop
clc
(bad)
(bad)
jmp
arpl
mov
sbb
sub
int3
pushf
adc
js
jmp
clc
add
mov
and
outs
std
(bad)
rcl
clc
aaa
std
push
stos
out
out
retf
dec
inc
inc
pop
repnz
sbb
into
push
xchg
outs
(bad)
jmp
jnp
retf
aam
cli
pop
jg
jo
xor
mov
stos
mov
call
and
call
xor
pop
cmp
sub
je
aaa
xor
cmps
ret
adc
(bad)
(bad)
(bad)
(bad)
jmp
pop
push
xchg
sub
pop
out
adc
pop
pop
mov
push
(bad)
(bad)
(bad)
push
sbb
loop
out
out
cmp
mov
fstp
mov
ins
mov
not
(bad)
(bad)
(bad)
call
sub
or
pop
aam
aam
push
sbb
sbb
xchg
mov
out
fadd
cmc
sub
(bad)
cli
add
aad
pop
repz
sub
fcomip
aas
push
push
data16
in
sbb
(bad)
(bad)
jmp
jle
or
ins
(bad)
sub
jl
mov
xchg
aaa
dec
(bad)
(bad)
(bad)
(bad)
jg
pusha
mov
and
mov
ret
push
sub
in
std
fldenv
push
repz
data16
(bad)
(bad)
dec
stos
pop
add
mov
adc
sub
mov
retf
xchg
pop
gs
xchg
xchg
jne
sar
(bad)
mov
pop
lods
test
mov
xor
xor
outs
mov
and
aaa
scas
cli
jmp
add
ins
es
dec
or
jp
mul
fild
push
push
mov
mov
push
cmp
in
cdq
and
xor
jns
call
jmp
sub
pop
icebp
pop
(bad)
call
(bad)
(bad)
push
outs
and
stc
dec
ss
dec
xchg
inc
es
(bad)
call
fimul
push
sub
call
pop
push
ja
shl
sub
and
call
call
aam
imul
std
dec
jns
mov
rcl
retf
add
das
(bad)
(bad)
(bad)
dec
into
mov
push
pop
add
push
xor
add
add
jge
(bad)
pop
xlat
ud1
jae
(bad)
(bad)
push
add
mov
pop
aam
and
xchg
inc
add
pushf
cmps
jecxz
icebp
(bad)
(bad)
(bad)
jmp
je
mov
mov
bound
push
mov
cs
std
lods
cmp
popf
nop
mov
inc
pop
adc
(bad)
jne
(bad)
call
push
sub
adc
call
rcr
ss
mov
ja
xor
pop
ror
lods
sub
push
inc
cmp
push
push
shl
push
add
mov
dec
std
call
cdq
xor
into
gs
mov
jmp
div
mov
jbe
ins
add
inc
dec
xchg
ja
mov
mov
and
ret
in
inc
(bad)
(bad)
jg
mov
(bad)
ror
jo
xor
iret
or
call
cmp
inc
sub
mov
sub
or
push
jp
or
(bad)
(bad)
push
test
cmp
(bad)
cwde
dec
and
push
mov
or
test
jecxz
sbb
xchg
fnstcw
fcomp
mov
addr16
je
(bad)
arpl
(bad)
ins
popf
sbb
(bad)
sub
(bad)
call
mov
into
or
or
mov
xor
(bad)
(bad)
jmp
and
pop
push
sbb
jg
or
inc
push
cmp
add
xor
in
fsub
retf
(bad)
(bad)
(bad)
jmp
xchg
sbb
mov
jae
sti
cld
add
jle
js
jg
cmps
stc
iret
retf
jae
mov
(bad)
jmp
push
mov
enter
les
cmp
imul
dec
dec
mov
das
jmp
leave
fdivr
mov
inc
es
dec
int
xchg
(bad)
(bad)
(bad)
call
cdq
ror
mov
cmps
mov
(bad)
sbb
jmp
or
das
iret
dec
jnp
jo
call
enter
and
and
(bad)
(bad)
(bad)
push
jmp
xchg
cmp
jne
pop
cmp
jge
inc
fst
sar
adc
(bad)
cmp
popf
gs
sub
(bad)
mov
stc
(bad)
or
lock
inc
int3
ins
xor
bound
cdq
inc
in
fs
jecxz
push
sbb
cdq
or
call
jmp
push
(bad)
(bad)
(bad)
jmp
mov
add
xchg
mov
cmp
rcr
dec
adc
cld
mov
jmp
mov
mov
(bad)
xchg
lods
add
ss
xchg
mov
hlt
fucomip
sahf
pop
leave
xor
(bad)
call
push
xchg
or
rcl
hlt
mov
in
(bad)
(bad)
jmp
xchg
out
push
sti
mov
movs
arpl
repnz
shr
xor
(bad)
dec
cmp
arpl
push
shl
es
cld
cmps
call
sub
scas
jecxz
(bad)
(bad)
push
movs
or
hlt
aas
push
rol
scas
push
outs
lods
xchg
pop
fcom
jno
(bad)
(bad)
(bad)
call
cmps
jmp
add
ror
jno
cmps
xchg
mov
sbb
stc
jo
imul
out
cli
lods
int
test
dec
push
and
popf
data16
or
xor
mov
(bad)
jmp
add
sub
push
inc
push
(bad)
fidiv
adc
addr16
addr16
aaa
jl
inc
ret
dec
imul
dec
(bad)
out
int3
push
out
(bad)
(bad)
(bad)
fisttp
push
ret
call
sbb
dec
jmp
gs
aaa
mov
lods
or
outs
inc
jg
hlt
inc
push
mov
ret
imul
jns
(bad)
pop
cmp
(bad)
push
xchg
repz
movs
arpl
cs
arpl
jl
mov
scas
mov
or
jo
(bad)
(bad)
(bad)
cmp
cs
test
inc
lock
xor
sub
mov
cmp
xor
dec
ds
mov
test
jg
sbb
mov
sar
pop
mov
ja
cmps
or
sub
dec
popf
mov
(bad)
fsubr
sti
outs
in
add
cmp
mov
inc
js
std
mov
sbb
aad
in
jb
aad
(bad)
dec
pusha
sbb
xchg
cmps
jno
or
icebp
ret
(bad)
mov
lahf
add
retf
jg
std
pop
shl
pop
iret
sbb
push
adc
push
sahf
int
fisub
(bad)
(bad)
dec
dec
dec
jmp
xchg
cmp
mov
pushf
stos
xor
dec
(bad)
(bad)
jmp
cld
movs
xor
sbb
inc
je
mov
add
mov
scas
movs
movs
adc
nop
addr16
mov
mov
(bad)
jmp
lock
jmp
cmp
jp
adc
add
inc
add
dec
icebp
inc
shl
cld
test
dec
ret
pop
mov
movs
jo
or
xor
popf
fs
scas
gs
adc
iret
push
clc
(bad)
int3
add
or
repnz
add
(bad)
(bad)
dec
sbb
sbb
xchg
test
cmp
fisub
stos
stos
jp
(bad)
(bad)
call
(bad)
cmp
out
(bad)
and
dec
cwde
movs
pushf
pop
mov
push
sub
repnz
xor
xchg
mov
std
call
jmp
shr
cdq
cmc
(bad)
in
push
sar
jg
cmp
mov
xchg
inc
out
aaa
or
xlat
(bad)
(bad)
mov
xor
out
daa
adc
in
add
ins
xor
(bad)
inc
inc
jl
arpl
lods
es
xchg
jae
jns
jae
cwde
mov
(bad)
jae
dec
pop
or
(bad)
push
jo
clc
in
pop
mov
sbb
cli
jb
fdivr
dec
mov
seta
aaa
iret
xchg
jp
les
addr16
in
(bad)
(bad)
jmp
or
xor
popa
repnz
fnsave
sub
es
movs
sbb
test
repz
dec
inc
mov
daa
push
data16
adc
and
xchg
fcmovu
pushf
and
inc
fsub
(bad)
(bad)
jmp
scas
push
mov
dec
dec
pop
pop
or
jo
xor
push
xor
test
cmp
lods
inc
inc
call
aad
test
jmp
inc
shl
ret
push
sbb
pop
add
push
inc
cwde
popa
(bad)
(bad)
(bad)
push
jg
mov
add
push
aad
pop
add
ret
dec
lods
rcl
mov
xchg
jmp
fs
test
mov
in
iret
mov
pop
xchg
mov
(bad)
(bad)
mov
lock
jle
dec
inc
and
or
addr16
in
aad
adc
loopne
pop
enter
(bad)
(bad)
dec
xchg
pop
push
leave
das
test
mov
pusha
dec
in
in
sbb
mov
cli
push
cld
(bad)
jmp
cwde
xchg
or
in
sbb
push
jnp
ss
and
clc
sub
add
in
(bad)
dec
xchg
xor
dec
dec
xor
pop
xchg
rol
scas
or
addr16
jmp
inc
adc
sar
mov
sub
mov
ror
inc
jp
outs
test
mov
and
call
cwde
hlt
(bad)
(bad)
inc
push
stc
or
xchg
gs
movs
mov
or
pop
jmp
pop
push
adc
push
adc
push
retf
or
cmp
pop
std
(bad)
call
sbb
xchg
xchg
shl
test
in
inc
icebp
ror
aas
loop
mov
inc
mov
stos
sbb
jbe
jo
push
addr16
outs
(bad)
stc
arpl
shr
call
mov
lods
mov
cmp
mov
mov
lds
(bad)
(bad)
jmp
mov
or
test
(bad)
mov
or
inc
pop
shl
inc
add
(bad)
jmp
adc
faddp
sbb
inc
cmp
jnp
adc
jmp
in
retf
mov
pop
rol
xchg
or
jecxz
jecxz
jmp
cs
mov
(bad)
jl
mov
aaa
xor
(bad)
(bad)
call
leave
inc
je
mov
jle
scas
hlt
sbb
sub
pop
cld
in
(bad)
push
push
aas
(bad)
(bad)
(bad)
dec
mov
retf
loop
push
rcr
or
or
dec
pop
call
mov
call
rcl
adc
fdivrp
jp
inc
cmps
cmp
inc
push
test
ja
(bad)
(bad)
call
cmp
sbb
dec
jno
out
test
out
add
call
pop
jle
out
mov
and
call
aas
sub
mov
sahf
dec
call
(bad)
inc
(bad)
mov
jle
data16
adc
mov
retf
mov
inc
inc
dec
inc
sahf
cmp
(bad)
(bad)
call
movs
xchg
shl
in
sub
jp
pop
and
jp
pop
jne
pushf
leave
mul
add
stos
call
mov
bt
inc
pop
push
jno
hlt
adc
sbb
push
jne
mov
sub
pop
push
jp
sub
mov
int3
add
lods
bnd
ficomp
xor
cmc
dec
shr
shl
adc
rol
inc
aas
jg
(bad)
call
scas
jno
dec
in
cmp
mov
movsx
push
push
xchg
jmp
data16
(bad)
(bad)
push
pop
push
mov
dec
jmp
add
mov
enter
cmp
scas
(bad)
clc
xchg
je
pop
pop
cmc
cs
iret
ret
repz
mov
pop
ins
enter
ret
fsub
fistp
push
mov
add
jecxz
jl
jmp
sub
mov
inc
cld
mov
mov
dec
das
pop
push
fld
(bad)
(bad)
(bad)
inc
pop
sbb
neg
dec
adc
dec
stc
xor
(bad)
dec
and
test
jae
push
jnp
imul
out
out
mov
icebp
xchg
jmp
push
fchs
mov
sar
(bad)
(bad)
fcomip
inc
mov
ds
cwde
movs
lahf
xchg
cmp
cli
pop
xor
aad
stc
icebp
retf
daa
(bad)
loopne
(bad)
(bad)
jmp
pop
cmps
or
cmps
adc
sbb
and
cmc
(bad)
or
inc
xchg
test
jno
iret
out
mov
pop
adc
fs
cmps
pop
jmp
arpl
daa
mov
add
(bad)
jmp
pop
and
cmp
enter
mov
aam
ret
sbb
sub
retf
adc
stos
dec
sbb
lock
(bad)
(bad)
(bad)
dec
xor
mov
xchg
mov
(bad)
xor
std
mov
mov
(bad)
(bad)
inc
leave
jmp
add
in
xchg
sub
repz
(bad)
(bad)
(bad)
jg
repz
neg
rol
js
movs
sbb
xchg
lods
lods
(bad)
(bad)
(bad)
inc
push
pop
ins
gs
mov
xchg
sbb
fcmovnb
adc
imul
cmp
xlat
dec
loop
xor
sbb
call
sub
in
push
or
fstp
dec
sub
(bad)
(bad)
jg
cmp
add
sbb
sub
daa
mov
dec
popf
fisttp
sub
dec
in
mov
sbb
ja
aaa
stos
mov
add
xchg
inc
xlat
inc
ins
sti
dec
repz
sub
mov
push
lock
out
pop
jp
mov
loop
(bad)
(bad)
(bad)
(bad)
jns
icebp
dec
inc
jge
cdq
popf
and
adc
out
jb
pop
rcr
call
(bad)
jmp
loop
lods
dec
push
outs
fld
addr16
add
fiadd
out
jmp
mov
mov
mov
inc
pop
je
fwait
and
loope
es
inc
js
je
lods
inc
frstor
sbb
jg
(bad)
pop
hlt
sbb
xchg
push
rol
ds
and
into
fwait
adc
push
sahf
(bad)
call
push
ret
ja
xchg
push
movs
enter
fnsave
in
mov
cmp
es
je
aam
scas
mov
lods
push
sbb
push
(bad)
mov
inc
pop
mov
(bad)
(bad)
(bad)
clc
es
mov
jecxz
scas
fild
(bad)
fldcw
clc
call
pop
(bad)
call
test
lock
jg
(bad)
loopne
jno
out
(bad)
jg
inc
out
adc
retf
cwde
dec
cmp
and
push
arpl
(bad)
push
pop
pushf
(bad)
icebp
mov
jp
fiadd
xchg
pop
(bad)
inc
(bad)
(bad)
(bad)
dec
mov
sub
test
adc
add
push
fs
das
fdiv
cmp
mov
cwde
retf
jae
sub
fisttp
nop
ins
cmps
mov
xor
call
(bad)
(bad)
or
pop
and
lea
or
(bad)
(bad)
jmp
mov
inc
dec
jnp
sub
sub
pushf
les
shl
jp
ud0
jmp
mov
lahf
dec
mov
cmp
test
push
int
inc
xor
fimul
(bad)
(bad)
(bad)
push
movs
mov
pop
test
cwde
mov
js
jb
popf
in
dec
sti
idiv
xor
ret
dec
(bad)
(bad)
(bad)
inc
call
xchg
cmp
lea
mov
repnz
xor
jmp
test
rol
pushf
mul
and
xor
and
jmp
mov
inc
cld
aas
aaa
outs
inc
mov
push
adc
pop
push
inc
sti
add
(bad)
(bad)
inc
rcl
mov
mov
mov
(bad)
or
clc
xor
pusha
push
mov
inc
cld
(bad)
mov
xchg
cdq
adc
jle
fisubr
(bad)
jg
pandn
sbb
scas
pop
out
jb
xor
or
retf
leave
pop
sar
add
call
cli
ds
or
ins
xor
sbb
push
sahf
sbb
sbb
fimul
jg
fdivr
dec
sub
add
xchg
jp
sub
and
mov
(bad)
(bad)
(bad)
inc
rcr
mov
xchg
mov
fwait
(bad)
mov
xor
add
(bad)
(bad)
(bad)
(bad)
mov
inc
sub
adc
cmp
xor
or
xchg
test
addr16
xlat
mov
xor
xchg
repnz
inc
push
add
out
das
add
adc
int
push
mov
add
idiv
mov
imul
(bad)
(bad)
(bad)
dec
add
inc
fcomp
in
or
loope
pop
lds
lods
ret
outs
out
in
inc
jge
test
(bad)
fisttp
adc
ins
jmp
push
icebp
and
(bad)
(bad)
(bad)
(bad)
dec
scas
sbb
mov
hlt
out
pop
mov
imul
and
stos
into
test
jmp
push
(bad)
bound
pop
or
push
fiadd
cmc
aam
xchg
adc
cmp
xchg
cmp
into
test
jmp
loop
mov
test
je
sub
sub
(bad)
(bad)
(bad)
dec
xor
lock
push
add
and
(bad)
int
or
js
inc
adc
or
mov
jmp
test
xchg
movs
sbb
jb
mov
test
pop
mov
mov
(bad)
(bad)
mov
shr
xchg
jl
inc
mov
fisub
inc
out
loop
lds
push
icebp
call
test
aas
ss
cmp
sub
xchg
add
out
clc
fwait
ss
test
mov
cmp
cli
stos
test
(bad)
(bad)
jg
push
mov
and
shr
mov
movs
ins
hlt
push
pop
ret
sbb
(bad)
mov
xor
fs
xchg
stos
or
std
loopne
stos
pop
imul
(bad)
call
xchg
or
xchg
dec
mov
sbb
jecxz
dec
jnp
sub
cmps
(bad)
xor
mov
mov
push
clc
add
adc
pusha
mov
add
(bad)
(bad)
fdivrp
jo
out
dec
loop
cwde
lds
in
mov
dec
inc
xchg
sar
xchg
out
(bad)
(bad)
(bad)
inc
sub
xor
mov
stos
push
mov
xor
jbe
jbe
(bad)
mov
add
sub
sub
test
aaa
in
jnp
and
xor
loope
sub
lock
add
(bad)
(bad)
mov
sbb
shr
dec
or
push
pop
loope
bound
mov
imul
and
call
shl
push
(bad)
pop
loope
jnp
cmp
sbb
adc
cmps
and
cmp
cld
call
cwde
push
in
cld
inc
or
inc
imul
jp
out
stos
xor
call
push
xor
fadd
push
adc
add
(bad)
(bad)
jg
in
popa
nop
jns
xchg
xor
jle
adc
jmp
ret
aam
idiv
fild
imul
sbb
xchg
mov
jge
cmc
inc
lods
xchg
retf
fwait
(bad)
loope
cdq
mov
inc
sbb
retf
jne
xlat
aad
add
xor
(bad)
(bad)
inc
add
bound
cmps
loope
enter
lods
das
mov
push
sub
dec
jns
movs
js
jmp
fdivrp
leave
push
dec
xchg
xor
sub
inc
push
jmp
mov
mov
inc
push
jo
lods
in
push
pop
lahf
sub
sbb
ror
cmps
sub
inc
mov
mov
std
in
mov
(bad)
call
add
push
into
xor
xchg
adc
jl
push
fild
icebp
(bad)
(bad)
jnp
inc
jg
dec
data16
(bad)
adc
sbb
push
(bad)
call
lock
retf
push
ret
mov
mov
fldcw
call
outs
pop
adc
in
mov
daa
add
in
jge
arpl
and
mov
(bad)
cmp
mov
or
sbb
mov
(bad)
(bad)
push
int3
inc
mov
push
dec
jnp
mov
lahf
nop
not
ja
sbb
repnz
xor
loop
movs
jae
inc
aaa
fdivr
pop
(bad)
(bad)
jmp
call
leave
(bad)
mov
shl
cmp
out
xchg
ds
inc
int
bound
dec
fild
cmc
jge
pop
(bad)
push
ins
bound
add
pop
xchg
not
inc
ror
xor
and
(bad)
(bad)
push
sahf
js
retf
mov
enter
jns
nop
in
mov
mov
cdq
mov
jns
lods
cmp
cli
call
std
scas
out
push
pop
dec
sar
and
gs
xlat
push
(bad)
(bad)
jmp
jns
iret
pop
and
pop
mov
mov
xchg
lods
jbe
or
mov
(bad)
(bad)
jg
cld
gs
shr
stc
ja
loopne
int3
cmp
xor
(bad)
(bad)
in
xchg
mov
stc
push
pop
push
dec
push
out
test
std
and
in
loopne
das
ja
mov
push
pop
xor
std
pop
dec
ret
push
or
div
pusha
and
and
ins
std
push
or
pop
call
or
(bad)
(bad)
dec
sbb
cmps
test
cmp
xor
(bad)
ss
ror
arpl
fs
pop
(bad)
jl
daa
lahf
(bad)
(bad)
(bad)
jmp
adc
dec
pop
xlat
mov
xchg
fisubr
imul
arpl
lds
cmps
or
add
mov
xor
and
mov
add
hlt
call
inc
cdq
cmc
test
cmc
ss
(bad)
(bad)
call
cs
inc
retf
outs
fld
popa
and
mov
cmp
mov
(bad)
(bad)
(bad)
(bad)
jge
int
(bad)
mov
test
fwait
scas
jo
mov
inc
test
movs
les
stos
hlt
es
jmp
sub
test
mov
xor
jmp
dec
mov
sbb
aad
sbb
mov
ins
cmp
mov
push
or
dec
(bad)
pop
data16
fprem1
jbe
mov
xor
adc
dec
(bad)
jg
jmp
xchg
or
enter
sub
dec
adc
jl
ror
(bad)
(bad)
(bad)
dec
inc
loope
inc
and
sub
hlt
cmc
sub
adc
cmps
out
mov
xchg
dec
int
(bad)
(bad)
(bad)
jmp
ret
fisub
pop
in
and
cli
xor
lock
cwde
cmp
sub
movs
jbe
jnp
(bad)
(bad)
(bad)
(bad)
jl
pop
std
push
enter
jecxz
pop
mov
popa
std
and
out
lock
ins
clc
push
idiv
mov
cmc
jmp
dec
cmps
sub
jmp
(bad)
fstp
inc
(bad)
(bad)
call
mov
mov
or
scas
loop
(bad)
popf
mov
add
out
push
and
sti
(bad)
jmp
sahf
int3
pop
test
test
or
adc
pop
cmp
lea
mov
inc
jle
jb
stc
adc
mov
dec
or
inc
fidivr
jp
mov
js
aam
mov
push
int3
scas
rcr
(bad)
inc
pop
inc
push
xchg
outs
lock
sbb
cmp
inc
xchg
nop
(bad)
(bad)
(bad)
fistp
inc
and
sar
int3
ins
pushf
mov
mov
add
jmp
or
cs
and
pand
mov
sets
(bad)
(bad)
call
fdiv
fmul
fldenv
test
or
mov
sbb
lahf
(bad)
(bad)
(bad)
(bad)
fidiv
xor
xchg
pop
jns
je
lds
cld
repnz
jae
(bad)
scas
(bad)
xor
icebp
in
dec
cwde
lods
aas
in
int3
clc
push
cmp
sub
(bad)
(bad)
call
dec
mov
loopne
cmp
clc
lea
sbb
(bad)
(bad)
call
into
push
clc
gs
movs
fdiv
outs
bound
cmp
das
clc
lods
cmp
out
fcom
movs
mov
inc
(bad)
(bad)
(bad)
jmp
xchg
mov
nop
mov
stos
in
jecxz
adc
test
mov
jle
jecxz
(bad)
(bad)
(bad)
inc
in
loop
lods
push
push
dec
clc
xchg
jl
and
mov
add
test
(bad)
(bad)
(bad)
inc
ja
ins
(bad)
jo
scas
outs
mov
sbb
gs
and
adc
push
xor
call
mov
fistp
repnz
aam
inc
sti
sbb
add
jb
stc
cmps
(bad)
(bad)
jg
cmp
mov
xchg
pushf
cdq
mov
dec
and
or
mov
jne
(bad)
mov
fs
shr
push
push
loop
fsubp
es
xchg
or
(bad)
(bad)
call
cmp
adc
dec
js
jmp
cmp
mov
fist
int3
or
push
aam
into
pop
or
(bad)
(bad)
(bad)
jg
stos
sub
test
test
mov
retf
js
into
clc
test
jo
out
jl
xor
mov
outs
and
call
push
addr16
cdq
nop
loopne
mov
loop
(bad)
(bad)
(bad)
jmp
push
stc
mov
loope
pop
sahf
out
test
fcomip
sub
icebp
repz
les
(bad)
dec
sti
xor
cmp
(bad)
out
mov
lea
pop
lea
mov
(bad)
ins
cmc
xchg
jmp
cmp
repnz
(bad)
adc
dec
(bad)
out
in
mov
fadd
(bad)
(bad)
(bad)
jmp
xchg
repnz
sbb
fs
imul
mov
sub
xchg
sub
xlat
sbb
scas
add
call
in
cmp
push
cdq
inc
cld
pop
or
cdq
cmp
mov
ret
outs
xor
test
(bad)
(bad)
(bad)
dec
pusha
push
les
jne
mov
mov
rcl
sbb
cs
(bad)
(bad)
call
cmp
pop
cdq
pusha
fs
and
adc
mov
xrstors
push
pop
(bad)
fneni(8087
fdivr
(bad)
fcomip
or
das
and
push
iret
xchg
shl
test
(bad)
gs
rdmsr
mov
jmp
shl
or
div
add
ins
jp
push
fcmovnb
cmp
pop
jp
cmp
sub
out
push
xor
scas
cli
aaa
jmp
les
nop
jbe
mov
cmp
cmp
(bad)
sbb
pop
mov
adc
sahf
sbb
dec
sub
push
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
add
mov
pusha
xchg
movs
lds
(bad)
call
cmp
(bad)
aam
adc
adc
sbb
cmp
test
pop
aad
jle
daa
movs
add
enter
fldenv
xor
jg
cmp
jmp
jne
pop
xor
sub
mov
sbb
mov
(bad)
(bad)
(bad)
jmp
push
shl
stos
and
loop
dec
xchg
jo
aaa
es
mov
xchg
test
(bad)
push
mov
mov
sub
adc
adc
fcomip
push
or
out
aas
mov
or
jge
iret
sahf
fnstsw
add
out
arpl
mov
pop
cmp
xchg
sub
(bad)
call
pop
lods
push
movs
push
push
jmp
test
push
stc
dec
and
movs
(bad)
(bad)
(bad)
jmp
rol
cmp
adc
dec
mov
and
in
(bad)
(bad)
(bad)
call
pop
jns
push
cli
xor
mov
or
xor
mov
outs
xchg
pop
push
and
xchg
(bad)
call
mov
pop
into
dec
jecxz
cld
ja
xchg
mov
js
fiadd
jmp
cmc
lds
and
xchg
pushf
pushf
das
jle
dec
bound
loope
jmp
(bad)
(bad)
(bad)
push
popa
adc
or
xor
push
ret
movd
mov
int
loope
loop
cs
ror
jo
fisttp
ja
push
cmps
mov
sti
jg
inc
and
jmp
or
mov
arpl
in
or
(bad)
(bad)
dec
mov
jge
mov
(bad)
cld
movs
and
inc
mov
hlt
pop
scas
push
call
nop
(bad)
(bad)
xchg
inc
call
fdivr
(bad)
push
(bad)
cmp
push
xchg
adc
dec
adc
or
(bad)
(bad)
(bad)
jg
mov
cwde
adc
not
test
push
icebp
jns
push
push
jge
je
retf
add
popf
(bad)
(bad)
(bad)
call
fimul
(bad)
ins
adc
rcl
mov
test
inc
(bad)
(bad)
jmp
jmp
jle
dec
jb
adc
stc
jns
sti
test
mov
pop
(bad)
(bad)
(bad)
call
inc
into
hlt
xchg
xchg
jecxz
push
jbe
and
jmp
gs
sub
(bad)
(bad)
(bad)
(bad)
jmp
enter
test
out
jnp
sti
scas
pop
mov
dec
lea
(bad)
(bad)
jmp
loop
stc
es
and
push
aad
cmp
jp
scas
(bad)
(bad)
(bad)
call
mov
js
jle
jmp
inc
pusha
lds
adc
mov
inc
mov
(bad)
jmp
cmps
pop
mov
dec
cli
cmps
and
in
pop
add
(bad)
(bad)
jg
lods
test
jmp
fbstp
cs
hlt
xor
inc
xchg
cmp
(bad)
(bad)
dec
frstor
test
(bad)
pop
call
dec
jge
add
(bad)
(bad)
jg
cmc
xchg
jle
and
scas
aas
sbb
cdq
xchg
repnz
lds
idiv
pop
cld
push
mov
dec
sub
add
ins
cli
adc
xchg
aaa
jle
(bad)
(bad)
(bad)
jmp
mov
pop
loope
adc
mov
fnstcw
mov
(bad)
mov
adc
mov
mov
(bad)
(bad)
(bad)
jmp
mov
pop
mov
inc
mov
push
movs
shr
ins
inc
scas
and
mov
dec
sbb
inc
iret
mov
loopne
dec
and
xchg
or
add
xor
leave
jge
mov
mov
ror
sbb
js
mov
push
jae
adc
retf
mov
inc
(bad)
(bad)
(bad)
call
andps
adc
dec
jnp
stos
movs
aam
repz
mov
pop
fld
xchg
sbb
jg
xchg
(bad)
(bad)
(bad)
jmp
call
shl
adc
inc
add
(bad)
sub
fs
(bad)
(bad)
(bad)
push
rcl
mov
scas
xchg
jl
daa
sbb
sbb
mov
dec
pop
lds
popa
mov
sub
dec
cmp
(bad)
fisttp
mov
and
ror
lock
mov
mov
aam
add
(bad)
push
push
shl
std
sub
jmp
xchg
dec
mov
enter
pop
jae
(bad)
(bad)
jmp
mov
mov
cmp
pop
lods
jne
inc
aaa
mov
sbb
adc
jmp
stc
add
adc
data16
loope
or
mov
stc
jnp
jmp
inc
outs
stos
sbb
sbb
(bad)
(bad)
(bad)
inc
leavew
push
ror
leave
jecxz
mov
loope
movs
inc
jb
jnp
dec
fmul
mov
(bad)
(bad)
call
mov
loopne
mov
add
cmp
add
mov
xchg
xchg
push
cld
(bad)
inc
cdq
adc
dec
and
or
mov
jmp
push
scas
adc
inc
lods
bound
fsub
icebp
cmp
(bad)
(bad)
(bad)
push
or
test
sub
xor
xchg
xor
ror
add
enter
push
xchg
fadd
idiv
pop
jmp
ret
out
add
fistp
cmc
(bad)
(bad)
(bad)
cli
idiv
arpl
ins
sbb
test
push
(bad)
mov
inc
popa
xchg
jp
(bad)
call
pop
and
aas
in
shr
cmc
popf
outs
add
and
iret
or
cld
inc
or
lods
pop
test
mov
das
mov
push
int3
(bad)
cmps
(bad)
(bad)
(bad)
jmp
sbb
pusha
jb
ficom
jbe
mov
push
int3
scas
dec
push
pop
cs
dec
inc
fmul
sub
fwait
inc
pop
cmp
mov
xor
push
out
or
in
movs
ss
das
clc
les
mov
in
cmp
popf
xor
(bad)
(bad)
(bad)
(bad)
clc
cli
or
inc
ret
(bad)
ins
mov
dec
or
stc
mov
fisubr
call
mov
out
dec
das
jge
jmp
fs
jo
xchg
xchg
(bad)
cmc
aam
mov
mov
outs
clc
(bad)
call
aad
mov
push
xchg
shr
push
ror
adc
(bad)
sub
popa
movs
ret
(bad)
inc
mov
add
sub
fucomip
mov
mov
jmp
pop
fwait
push
fstp
push
and
aaa
(bad)
(bad)
inc
aaa
movs
add
ret
jge
sub
mov
mov
(bad)
call
je
inc
xor
int3
stos
(bad)
xor
(bad)
sbb
mov
push
cdq
clc
xor
cmp
(bad)
lds
gs
scas
pushf
lock
enter
inc
mov
push
aas
inc
cmp
sub
cmp
outs
int3
fisubr
cmc
neg
imul
stc
ins
outs
arpl
pushf
sub
push
test
pushf
ficomp
or
jecxz
and
inc
or
push
mov
bound
cs
fld
ret
rol
mov
(bad)
(bad)
(bad)
out
xchg
sbb
lods
mov
gs
cmp
fild
push
sub
xchg
ja
out
jl
jg
(bad)
fistp
push
inc
test
pop
aas
enter
and
jmp
push
(bad)
jg
call
jbe
fild
psadbw
cmp
and
adc
jbe
leave
add
lock
jne
mov
sbb
dec
add
out
stos
push
call
adc
(bad)
mov
sub
lock
jo
pop
cmps
mov
leave
push
cs
aas
mov
loope
movs
adc
push
std
stos
out
out
pop
push
xor
ins
sbb
cld
dec
ds
jne
adc
add
jmp
lea
arpl
cwde
mov
push
iret
dec
mov
(bad)
mov
mov
inc
adc
in
jge
dec
mov
lds
inc
imul
sahf
out
sbb
(bad)
fild
ret
popf
iret
jns
push
push
ret
mov
stos
xchg
mov
xor
out
ja
clc
dec
jmp
call
sbb
(bad)
(bad)
(bad)
call
popa
popa
lods
sbb
shr
mov
and
clc
stc
(bad)
(bad)
(bad)
push
push
jae
out
shl
mov
pop
and
and
xor
imul
push
repz
(bad)
out
or
mov
and
popa
pushf
sbb
inc
call
push
and
fsub
mov
mov
(bad)
aas
sar
add
lock
or
popf
mov
or
(bad)
call
add
jae
call
(bad)
pop
and
(bad)
(bad)
call
mov
fsubr
xchg
fnsave
fs
jge
cmps
mov
cli
stos
pop
mov
push
xchg
mov
dec
pop
xor
pop
call
(bad)
push
jp
pop
hlt
cmp
dec
(bad)
xor
(bad)
(bad)
(bad)
call
call
pop
std
out
jns
cmp
xchg
adc
lock
(bad)
(bad)
call
inc
mov
sbb
jno
call
and
enter
js
xchg
push
aaa
sub
(bad)
(bad)
(bad)
jp
push
pop
push
mov
pop
and
xlat
xchg
je
jmp
cmp
lods
pop
cmp
(bad)
call
retf
mov
(bad)
sbb
mov
(bad)
pop
test
(bad)
arpl
(bad)
(bad)
dec
cmps
ja
add
push
add
cmp
inc
mov
mov
inc
sub
mov
push
add
adc
(bad)
(bad)
push
and
test
jne
xchg
and
or
aam
mov
mov
push
and
(bad)
(bad)
jmp
and
cmp
push
lds
cdq
mov
pop
xchg
pop
ins
inc
daa
push
nop
mov
(bad)
(bad)
jmp
mov
mov
mov
test
mov
push
push
movs
mov
sub
cmps
(bad)
jmp
add
sub
jmp
and
push
pop
mov
(bad)
(bad)
inc
cmps
in
push
clc
aaa
cs
dec
xchg
cld
mov
jg
add
rcr
out
test
dec
das
xchg
in
inc
xor
pop
(bad)
(bad)
jmp
repz
clc
sub
inc
or
fsub
sbb
adc
inc
retf
jb
xor
dec
pusha
add
retf
repz
test
test
(bad)
(bad)
mov
ja
scas
or
inc
add
jbe
in
sbb
pop
loop
or
sbb
sbb
fistp
sbb
and
push
dec
call
mov
lds
adc
add
out
lods
push
(bad)
rcr
(bad)
(bad)
sbb
(bad)
(bad)
(bad)
call
push
mov
push
outs
fst
and
fimul
(bad)
push
add
in
ins
dec
lock
mov
xor
(bad)
dec
test
mov
or
(bad)
(bad)
(bad)
call
ficomp
retf
mov
ja
das
cmps
mov
test
mov
sbb
addr16
xor
(bad)
(bad)
jmp
mov
and
popf
aad
nop
sub
or
mov
push
sub
pushf
sbb
xor
dec
sbb
enter
and
xchg
cmc
das
movlps
push
mov
(bad)
movs
mov
jmp
mov
push
jg
aad
loop
stos
div
call
mov
ret
fmul
adc
ja
das
nop
mov
repz
sbb
les
jae
das
sar
or
jp
movs
push
mov
pop
aas
scas
dec
int3
or
sub
push
lock
jmp
lahf
aam
sti
jae
and
int
mov
inc
cs
inc
cwde
arpl
mov
sti
pop
ss
(bad)
jns
dec
adc
pushf
mov
mov
mov
and
inc
arpl
cmp
sub
(bad)
(bad)
jmp
mov
test
sub
jns
pop
retf
xor
mov
cmps
sar
mov
and
add
shr
jb
ret
inc
(bad)
shl
mov
sbb
push
xor
ja
fwait
cmps
pop
pop
push
add
(bad)
inc
adc
pop
stos
xchg
inc
inc
mov
inc
ds
lea
loopne
gs
push
pop
out
(bad)
mov
xor
mov
stc
inc
cli
sub
mov
inc
push
into
and
jg
(bad)
push
adc
push
or
add
mov
mov
jg
rcl
or
movs
cli
call
(bad)
(bad)
fcomip
in
pop
loop
movs
fiadd
in
repz
je
jle
mov
(bad)
(bad)
(bad)
out
pop
xchg
adc
int3
pusha
pop
(bad)
popa
cmp
mov
cmp
loope
aam
adc
(bad)
arpl
sub
cmp
sbb
inc
mov
cmps
cmp
(bad)
(bad)
(bad)
jmp
in
xor
ins
mov
repz
int
mov
mov
hlt
icebp
mov
call
test
mov
ins
adc
neg
sub
and
mov
outs
cmc
(bad)
(bad)
jmp
jmp
mov
call
cli
pop
sar
mov
xchg
dec
ss
call
ins
ins
fsub
(bad)
mov
sti
sbb
clc
call
dec
push
push
call
sti
(bad)
jmp
(bad)
(bad)
(bad)
push
or
fmul
imul
lock
fwait
dec
popa
adc
popa
jp
ret
movs
pop
pop
push
into
pop
push
add
ds
(bad)
(bad)
jmp
clc
mov
and
sbb
loop
push
loope
xchg
stos
and
ret
aad
lea
jg
in
lock
(bad)
ds
ss
cdq
aaa
mov
popa
sub
pusha
xor
stos
mov
(bad)
(bad)
push
clc
adc
(bad)
ins
xor
xor
dec
(bad)
rol
popa
xchg
iret
loope
outs
(bad)
(bad)
(bad)
jmp
mov
cmp
repnz
sbb
out
(bad)
push
sbb
outs
inc
test
add
adc
fdivr
call
push
out
jg
jp
test
jb
fld
stos
(bad)
(bad)
out
jns
mov
and
daa
es
jae
pop
in
sar
clc
mov
retf
arpl
jbe
scas
daa
sub
push
fistp
shl
push
cld
inc
call
outs
push
jb
mov
add
mov
push
xchg
(bad)
icebp
xchg
(bad)
loope
(bad)
dec
add
add
push
push
mov
pop
sub
lahf
or
xchg
popa
push
(bad)
(bad)
fild
test
and
iret
movs
stos
jnp
push
xor
not
test
sbb
jmp
(bad)
outs
retf
sbb
retf
dec
das
dec
ret
adc
jo
pop
or
dec
movs
(bad)
(bad)
(bad)
jmp
push
jle
mov
sbb
mov
std
dec
xchg
scas
hlt
loope
iret
mov
clc
and
jecxz
in
adc
out
(bad)
(bad)
(bad)
(bad)
out
dec
push
test
adc
jmp
iret
fisubr
lods
add
sbb
xor
mov
(bad)
(bad)
inc
push
addr16
mov
push
dec
inc
mov
adc
sbb
(bad)
(bad)
jmp
pushf
clc
int
xchg
rcl
xchg
pop
xor
fdivr
aaa
mov
sbb
test
add
(bad)
repz
xchg
mov
enter
rcr
and
idiv
hlt
push
call
mov
loopne
or
aad
outs
test
imul
dec
int3
pop
cmp
popf
adc
sti
pop
or
adc
mov
dec
push
mov
fwait
dec
cld
jmp
daa
fiadd
adc
retf
ss
cmp
imul
clc
mov
scas
mov
mov
xchg
and
pop
(bad)
(bad)
(bad)
push
jmp
(bad)
int3
push
mov
push
jb
retf
cld
mov
ja
(bad)
(bad)
inc
jl
xor
movs
test
pushf
fstp
mov
jne
jbe
jp
push
mov
shl
sar
aaa
cld
inc
inc
adc
es
pop
movs
jb
xchg
or
jmp
data16
(bad)
cmps
or
dec
aas
jne
xchg
(bad)
(bad)
in
pop
retf
(bad)
cli
jo
test
out
mov
(bad)
(bad)
jmp
inc
jo
mov
call
das
push
inc
outs
fisubr
inc
xor
sub
(bad)
(bad)
jmp
jp
inc
fist
push
mov
movs
jge
or
scas
outs
lods
jmp
out
pop
dec
sahf
sub
push
mov
push
xor
icebp
popa
and
call
xchg
loop
sahf
pop
test
test
cmp
nop
test
in
pusha
sbb
daa
and
(bad)
(bad)
inc
or
mov
or
fsubr
ret
outs
sbb
and
and
pushf
cwde
cs
inc
cmc
jnp
push
dec
lods
out
xchg
sbb
push
xor
dec
outs
repnz
loopne
xor
call
out
(bad)
push
int
adc
(bad)
push
cdq
cmp
loope
mov
pop
mov
loop
enter
adc
(bad)
out
in
mov
adc
aaa
test
clc
or
(bad)
(bad)
call
pushf
pop
sub
aam
fdivr
imul
cmps
jmp
add
pop
ds
(bad)
(bad)
(bad)
inc
push
and
sahf
je
stos
test
lahf
cmp
call
(bad)
(bad)
dec
xor
jbe
aam
test
(bad)
fisttp
xchg
xor
cmp
cli
or
cmp
add
test
loopne
sub
jnp
rcr
add
shl
std
(bad)
push
sub
push
and
cmp
retf
add
sbb
cmps
add
(bad)
(bad)
(bad)
push
out
stc
fidiv
fwait
sbb
scas
es
fwait
xchg
push
fild
cli
pop
mov
std
frstor
xchg
mov
test
push
test
int3
xchg
ins
sbb
push
call
call
(bad)
call
(bad)
pushf
in
fs
sub
jne
xchg
popa
je
xchg
jp
les
int
retf
(bad)
push
add
push
jo
cmp
stc
xor
sbb
pop
movs
daa
ds
(bad)
(bad)
mov
xchg
adc
in
jp
mov
or
mov
das
rcr
push
(bad)
(bad)
(bad)
dec
push
xlat
dec
imul
imul
inc
mov
pushf
icebp
out
mov
add
xchg
cdq
(bad)
lahf
add
add
(bad)
(bad)
call
mov
cli
int
pop
rol
xchg
cmp
in
adc
in
inc
push
(bad)
inc
int
mov
xchg
sbb
or
in
xor
mov
(bad)
sbb
popa
ins
loopne
inc
loop
xor
push
in
cli
dec
icebp
cld
mov
cdq
jmp
sti
out
pushf
push
retf
jo
fidiv
inc
cmp
jp
sbb
sbb
(bad)
(bad)
(bad)
stc
into
mov
mov
add
and
push
xchg
push
(bad)
sub
test
pop
mov
(bad)
(bad)
jns
rcr
ins
jg
pop
call
sub
xchg
xor
jae
mov
push
sbb
cmp
jecxz
adc
xchg
repz
and
sti
push
xchg
cmp
shl
xchg
xchg
fmul
push
dec
or
adc
dec
inc
jmp
or
sbb
xchg
sbb
cmp
popf
mov
fwait
gs
inc
jns
lds
or
jmp
(bad)
(bad)
call
mov
pop
addr16
cld
bound
test
ret
dec
movs
push
imul
scas
fwait
pop
sub
add
call
sbb
adc
sti
cs
loop
inc
dec
fs
in
call
jmp
cmp
iret
mov
jnp
fidivr
mov
jp
pop
pop
sub
cld
push
mov
(bad)
in
sub
dec
outs
pop
or
loopne
mov
push
mov
ret
not
call
(bad)
(bad)
jmp
adc
and
or
xchg
repz
sbb
aam
push
and
sbb
leave
inc
jle
mov
(bad)
inc
daa
ret
cmc
dec
push
call
(bad)
jmp
or
inc
sar
dec
repz
repz
in
ss
mov
test
mov
sbb
inc
xchg
lods
push
add
cmp
mov
pop
push
xchg
or
stos
jns
xlat
sub
cmp
fld1
jae
xor
xor
lock
(bad)
(bad)
jmp
jmp
and
dec
add
push
push
sub
add
fmul
sar
(bad)
(bad)
dec
inc
in
mov
sub
rcr
push
jg
dec
jge
jno
mov
sub
loopne
test
jmp
mov
or
dec
sar
pop
cld
(bad)
jnp
cmps
out
sbb
push
adc
mov
(bad)
jmp
fisub
mov
and
das
(bad)
mov
loopne
ret
xor
(bad)
cdq
and
push
push
pop
mov
inc
ret
jno
dec
pop
(bad)
cmps
pop
(bad)
(bad)
(bad)
(bad)
std
loop
clc
and
push
and
push
cdq
pop
movs
ror
(bad)
dec
adc
sub
stc
push
sub
lock
mov
loopne
add
push
aas
fistp
aas
stc
div
(bad)
(bad)
(bad)
inc
xor
leave
fsubr
out
jnp
lods
popa
xor
push
cmp
add
inc
ret
ins
in
mov
(bad)
(bad)
call
popf
int3
cmp
scas
mov
stos
out
and
mov
dec
in
sbb
cmc
(bad)
(bad)
(bad)
fisttp
mov
push
nop
fisttp
inc
aam
cmp
adc
sbb
test
es
dec
mov
pop
mov
call
mov
cmp
js
mov
sbb
ins
fcomp
push
mov
ret
rol
push
jo
inc
mov
sub
into
pop
jg
scas
movs
mov
lods
lods
sub
shr
outs
mov
xor
test
mov
mov
pusha
stos
mov
jns
das
and
(bad)
(bad)
(bad)
inc
pop
mov
cmp
pushf
test
adc
fild
xor
add
test
mov
std
jmp
dec
cmps
pusha
repnz
cld
dec
test
aaa
mov
sbb
fwait
mov
(bad)
(bad)
fistp
imul
cwde
dec
add
pop
or
mul
sub
adc
data16
adc
add
xchg
imul
push
cmps
sbb
(bad)
ins
jecxz
push
retf
movs
xor
addr16
(bad)
(bad)
(bad)
cmp
repz
aam
pop
push
jge
iret
add
jo
mov
push
mov
cmp
imul
cmc
push
bound
pop
iret
(bad)
inc
ret
xor
xor
(bad)
(bad)
(bad)
call
adc
push
ins
not
mov
inc
mov
sbb
jo
pop
(bad)
ins
dec
sbb
inc
dec
les
fnstenv
shr
xchg
pushf
(bad)
(bad)
(bad)
call
push
std
and
xchg
pop
lahf
call
fst
dec
and
push
data16
sar
(bad)
(bad)
jmp
std
mov
or
fild
lods
outs
cmps
shl
pop
mov
mov
(bad)
push
inc
dec
sbb
lods
push
pop
sbb
jle
xchg
fcomp
ret
inc
(bad)
(bad)
(bad)
(bad)
inc
dec
in
test
aaa
pop
dec
lods
cli
mov
adc
and
scas
mov
rcl
(bad)
xor
out
inc
(bad)
inc
cwde
inc
movs
cmp
into
adc
pop
rcl
aad
(bad)
sub
add
pop
xchg
mov
inc
sub
fmulp
xor
jmp
mov
mov
cmc
jl
jo
fcmovu
mov
adc
(bad)
push
fldcw
xchg
dec
cmps
pop
scas
inc
mov
xor
pushf
jne
fwait
lods
push
push
out
stc
imul
(bad)
call
dec
xor
aam
(bad)
aam
mov
sub
jle
mov
repnz
dec
adc
repnz
(bad)
(bad)
push
and
jnp
pop
xor
jbe
leave
not
lock
into
jb
xchg
push
adc
shl
(bad)
aam
(bad)
(bad)
(bad)
call
xchg
add
add
stos
(bad)
jecxz
test
imul
adc
mov
sar
(bad)
(bad)
jmp
push
and
popa
xor
mov
out
adc
movs
inc
pop
sub
sub
fbstp
or
ret
(bad)
(bad)
(bad)
push
cli
inc
test
fdivr
cmp
xchg
jae
loope
loopne
ret
fdiv
rcr
fcomp
(bad)
jmp
aaa
hlt
jae
lock
cmps
daa
sub
mov
add
(bad)
call
stc
imul
adc
adc
xor
xor
(bad)
jg
lock
jmp
fstp
loop
dec
sbb
add
fucomp
xchg
and
push
inc
test
int3
xchg
out
or
gs
jmp
mov
call
cmp
(bad)
(bad)
(bad)
call
sbb
test
gs
fisttp
mov
outs
out
or
xor
pusha
push
shr
mov
inc
and
into
jl
movs
icebp
cwde
lds
add
test
ja
mov
add
mov
sub
cmp
imul
(bad)
(bad)
(bad)
mov
lahf
xor
pop
inc
pop
cmp
imul
cwde
nop
jmp
test
daa
hlt
stos
mov
pusha
mov
dec
jmp
loope
repz
mov
test
dec
sub
dec
xchg
clc
mov
inc
cmp
adc
jae
in
pmulhuw
sbb
mov
pop
clc
jl
sub
scas
je
out
sbb
xchg
cli
xchg
mov
shl
sub
inc
inc
or
aam
out
enter
data16
popa
int
cmps
pop
push
iret
push
(bad)
(bad)
(bad)
push
inc
mov
adc
pop
enter
stos
xor
loopne
stc
arpl
mov
inc
push
or
jmp
(bad)
retf
neg
retf
adc
push
loopne
ja
or
stc
or
pushf
dec
mov
and
loopne
out
mov
cs
fld
push
das
push
arpl
imul
and
(bad)
(bad)
(bad)
inc
mov
push
test
cwde
fist
or
fs
mov
dec
pop
cld
or
and
fs
(bad)
(bad)
(bad)
jmp
jnp
jle
lock
xchg
movs
or
out
sub
cwde
popf
mov
aas
fild
(bad)
(bad)
push
mov
adc
(bad)
call
and
fsubr
xchg
je
pop
cld
push
add
mov
retf
cmp
stos
ror
fcmovnbe
mov
(bad)
(bad)
jmp
sub
je
sub
mov
sub
scas
addr16
aaa
inc
dec
xor
clc
(bad)
(bad)
(bad)
jmp
fimul
scas
add
(bad)
scas
lea
mov
cmp
and
sub
(bad)
jmp
loop
mov
sbb
or
(bad)
mov
jns
jo
es
mov
mov
imul
(bad)
(bad)
(bad)
dec
ja
mov
bound
mov
ins
vmovddup
popa
cs
call
scas
cli
retf
jno
sbb
pusha
retf
cwde
mov
scas
cwde
int
idiv
out
popf
movs
leave
das
into
(bad)
(bad)
(bad)
jmp
pop
push
imul
int3
aad
mov
pusha
mov
lahf
jmp
jle
jmp
(bad)
(bad)
(bad)
call
mov
icebp
cmps
enter
in
ja
mov
sub
test
inc
ds
cmp
jmp
dec
sbb
cmp
mov
test
pop
test
ret
pop
dec
(bad)
ud0
jg
mov
outs
mov
daa
and
pop
fucomi
dec
daa
pusha
sub
push
jb
pop
adc
(bad)
(bad)
(bad)
call
sbb
pop
and
inc
xor
int3
fwait
sub
scas
pop
or
bound
inc
jge
aad
fisttp
jecxz
pop
and
mov
xchg
lods
call
les
mov
xlat
push
(bad)
adc
fstp
jg
cmc
into
aam
js
lods
add
enter
(bad)
fbld
pop
or
lock
(bad)
push
pop
adc
es
push
add
pop
push
jbe
lock
jg
hlt
jp
adc
dec
fdiv
xor
adc
test
sti
and
arpl
pop
or
fcom
test
fmul
cmc
rol
fcomip
xor
popf
jl
add
xlat
stc
mov
outs
mov
push
call
add
adc
(bad)
(bad)
mov
and
cmp
test
mov
(bad)
sub
and
mov
scas
clc
sub
adc
pushf
mov
les
add
idiv
mov
(bad)
(bad)
push
(bad)
aas
lea
dec
loope
repz
jle
(bad)
adc
jmp
xchg
lods
mov
mov
push
mov
push
add
movs
imul
pop
out
rol
(bad)
(bad)
mov
jmp
sbb
aad
mov
out
sar
ret
sbb
mov
clc
sub
out
cmps
pop
adc
cmp
mov
mov
(bad)
jl
xchg
test
dec
push
outs
enter
pop
mov
lods
into
fild
mov
punpckhwd
(bad)
(bad)
call
add
iret
jg
lahf
(bad)
out
popf
shl
jmp
xor
sub
hlt
add
mov
xor
sbb
push
in
push
fbstp
mov
in
jb
(bad)
(bad)
(bad)
call
inc
(bad)
stos
ja
pop
inc
outs
inc
pop
stos
les
and
ja
sahf
sahf
ins
nop
test
jbe
pop
(bad)
(bad)
(bad)
jmp
mov
lahf
fs
or
sub
sub
aad
dec
mov
jmp
cmps
test
gs
xor
bound
loopne
jnp
push
cs
jbe
sub
pop
(bad)
inc
cmp
adc
das
leave
mov
dec
in
mov
cli
mov
or
xchg
inc
fwait
(bad)
(bad)
(bad)
mov
or
jp
pop
scas
stos
xchg
in
fs
das
cmps
adc
es
(bad)
call
js
xchg
jge
popf
sbb
shl
ja
icebp
(bad)
dec
mov
les
mov
adc
cmp
and
popa
cmp
mov
ja
cmps
les
mov
or
push
or
xchg
jbe
pop
sub
(bad)
test
jb
sbb
mov
mov
pop
pop
dec
mov
xchg
arpl
das
and
mul
sahf
out
or
(bad)
(bad)
push
jo
aam
mov
inc
xor
mov
(bad)
or
and
les
call
int3
inc
pusha
xor
cmp
xchg
ret
(bad)
mov
pop
repnz
hlt
xchg
int
dec
or
sbb
and
(bad)
(bad)
(bad)
push
aad
jnp
xchg
push
push
mov
mov
loop
lea
adc
stc
xchg
repz
out
sbb
mov
aaa
enter
cwde
push
out
adc
inc
or
jmp
dec
addr16
loop
and
inc
in
sub
jmp
out
addr16
retf
xlat
fbstp
ins
xor
push
cdq
sahf
(bad)
call
push
into
adc
xchg
rcl
sbb
out
mov
inc
adc
scas
clc
mov
imul
mov
xor
mov
(bad)
fst
sbb
in
pop
and
jne
mov
(bad)
(bad)
jmp
or
xchg
xor
imul
mov
ret
inc
int
pop
(bad)
(bad)
(bad)
(bad)
fstp
adc
adc
mov
repnz
shl
int
push
hlt
push
test
(bad)
(bad)
ds
jnp
sub
loopne
inc
jno
in
cs
dec
sbb
cmp
call
into
mov
pop
adc
cld
aas
cmp
xlat
pop
dec
sub
(bad)
cli
xchg
pop
cvtps2pd
(bad)
(bad)
in
push
push
xchg
jg
jo
push
and
stc
and
(bad)
(bad)
mov
rol
pop
push
popa
inc
add
dec
adc
jp
(bad)
(bad)
mov
mov
pushf
sti
ror
jbe
mov
repz
shr
pop
jmp
(bad)
pop
js
or
(bad)
xchg
mov
jmp
pop
test
(bad)
(bad)
call
dec
push
repnz
ror
sub
add
cmc
mov
sub
shl
(bad)
mov
fs
mov
xor
popf
aam
(bad)
(bad)
(bad)
jmp
pop
sbb
push
adc
or
jnp
pop
icebp
fsub
mov
mov
cmp
add
push
(bad)
(bad)
(bad)
dec
call
adc
fist
cdq
adc
and
xchg
(bad)
(bad)
(bad)
call
inc
call
mov
bound
rol
xor
ror
cmc
cmp
retf
lods
push
test
std
push
in
mov
icebp
dec
pop
xchg
test
xor
test
icebp
pop
ret
(bad)
(bad)
(bad)
inc
sub
pop
loop
movs
add
and
or
mov
outs
jmp
mov
mov
iret
mov
pop
jns
out
shr
adc
mov
popf
shr
mov
add
inc
adc
xor
(bad)
fild
clc
arpl
je
adc
(bad)
jg
ret
pop
and
es
push
mov
mov
adc
lods
jb
(bad)
(bad)
(bad)
(bad)
fcmovnbe
popf
or
cwde
sbb
push
in
enter
fmul
data16
fdiv
(bad)
(bad)
(bad)
(bad)
out
nop
sbb
imul
cmp
sbb
mov
aad
fdivr
fs
gs
push
scas
mov
adc
movs
ins
dec
mov
mov
(bad)
(bad)
jmp
pop
jl
xor
test
sub
int
aam
fsubp
dec
(bad)
(bad)
(bad)
jmp
mov
fistp
out
or
sti
dec
ret
mov
mov
sub
addr16
push
ins
sub
das
loopne
lods
lds
xor
add
mov
popa
push
and
(bad)
(bad)
(bad)
push
dec
shl
outs
pop
jbe
push
mov
cld
jl
mov
daa
xchg
pop
inc
sub
or
(bad)
(bad)
jmp
in
in
jne
add
test
dec
cli
ss
jae
(bad)
pusha
enter
sub
(bad)
(bad)
(bad)
out
adc
retf
add
inc
test
push
ds
xchg
cmps
mov
clc
add
push
(bad)
(bad)
(bad)
call
and
sbb
mov
cmp
outs
call
or
adc
mov
inc
xor
(bad)
mov
adc
mov
adc
aaa
outs
jbe
jo
mov
shl
jge
cs
(bad)
(bad)
jmp
jno
into
aas
add
mov
add
pop
add
scas
not
bnd
and
(bad)
(bad)
jmp
dec
inc
cmps
add
call
js
and
arpl
gs
jnp
fcmovb
jmp
sti
arpl
mov
lods
sub
sub
pusha
loope
shl
fst
retf
fwait
(bad)
(bad)
(bad)
mov
cdq
sub
cmps
add
cmc
inc
jae
jge
ds
inc
inc
mov
mov
pop
loopne
push
jne
hlt
ss
jmp
or
sbb
dec
das
jmp
test
xchg
jnp
inc
mov
test
(bad)
in
outs
movs
out
cli
in
sbb
mov
aam
mov
movs
push
shl
adc
hlt
outs
nop
jmp
(bad)
inc
in
pushf
inc
pop
stos
dec
and
(bad)
int
or
(bad)
mov
sbb
idiv
(bad)
dec
call
rol
(bad)
pushf
outs
or
(bad)
(bad)
(bad)
(bad)
push
mov
mov
fbld
out
cmp
jecxz
dec
xchg
xchg
popa
lods
sar
in
or
shr
(bad)
call
fnstsw
lods
jg
stc
fwait
sub
add
bound
std
inc
inc
cmp
xchg
cli
xor
repz
(bad)
fisttp
cmove
pop
movs
or
imul
fisttp
jns
(bad)
(bad)
jg
lods
lds
fnsave
xor
popa
xlat
cs
gs
inc
xchg
les
in
inc
jg
(bad)
(bad)
(bad)
jmp
mov
or
or
daa
hlt
pop
adc
div
arpl
jb
sub
mov
clc
stos
push
push
scas
xchg
dec
(bad)
mov
scas
(bad)
(bad)
inc
sub
not
jae
and
push
cwde
test
sti
mov
jmp
enter
das
aas
(bad)
call
pop
sub
cmc
dec
iret
jg
ins
imul
xor
cli
(bad)
call
ret
and
jbe
pop
les
inc
pushf
mov
pop
and
mov
loope
arpl
lahf
js
jecxz
(bad)
bound
xchg
outs
repz
stc
cmps
retf
(bad)
(bad)
(bad)
dec
xor
shl
and
and
mov
cld
mov
jmp
mov
(bad)
(bad)
call
add
addr16
imul
xchg
movs
jmp
jno
ficom
xchg
mov
cmp
cdq
(bad)
(bad)
(bad)
jmp
mov
nop
add
jecxz
jg
mov
jge
cmp
push
cld
test
fadd
loop
mov
in
pusha
jnp
ret
stos
lods
dec
mov
inc
pop
add
(bad)
(bad)
(bad)
call
cmc
outs
cmc
sbb
pop
and
pop
aas
add
or
bnd
das
neg
sbb
jp
loope
push
sbb
dec
adc
and
call
in
pop
jae
loop
sbb
cld
ror
dec
xor
sub
(bad)
dec
xchg
loop
fst
(bad)
stc
(bad)
fnstsw
dec
and
repnz
or
mov
or
inc
(bad)
es
and
mov
std
(bad)
(bad)
fbstp
pop
mov
neg
or
adc
mov
sbb
test
aaa
mov
int3
mov
cmc
rcl
pop
cmp
sbb
adc
add
les
push
shl
sbb
sbb
adc
cmp
int
(bad)
(bad)
(bad)
call
shr
mov
(bad)
sbb
sbb
xor
cmc
push
stc
fisttp
mov
(bad)
jmp
push
and
ds
inc
jno
aad
mov
mov
mov
(bad)
(bad)
(bad)
push
dec
mov
leave
push
push
leave
add
out
loope
pop
pop
mov
(bad)
in
jg
gs
push
and
mov
inc
add
(bad)
(bad)
(bad)
fdivr
test
sub
mov
jecxz
xor
and
adc
xchg
mov
sbb
cmps
add
xchg
js
scas
(bad)
(bad)
call
xchg
inc
into
inc
sbb
or
mov
jl
jp
cmp
ins
fcomip
(bad)
jmp
jno
pop
push
lock
mov
arpl
mov
call
add
imul
push
xor
scas
or
(bad)
call
stos
xchg
cmp
test
addr16
sbb
push
jl
xchg
test
jne
call
frstor
mov
(bad)
jmp
jmp
push
addr16
ins
xchg
(bad)
sub
(bad)
into
(bad)
adc
sar
repz
and
lock
mov
shr
je
add
inc
(bad)
ret
mov
and
mov
idiv
(bad)
call
sub
and
rcr
ja
sub
push
popf
scas
js
clc
retf
xchg
inc
sub
(bad)
(bad)
call
movs
imul
(bad)
jmp
mov
in
mov
daa
nop
mov
ja
fist
mov
fcomp
cdq
es
and
arpl
adc
jo
into
call
jge
(bad)
(bad)
call
or
xchg
shl
call
es
out
cmp
mov
imul
inc
push
(bad)
(bad)
mov
cmps
jmp
dec
xlat
adc
jle
and
scas
scas
test
mov
cli
call
call
and
and
inc
mov
mov
jmp
out
(bad)
(bad)
jmp
ins
in
jno
and
fcomp
cmps
fs
fdivr
sbb
(bad)
call
inc
pop
test
jl
retf
aam
mov
and
icebp
(bad)
(bad)
mov
xchg
cli
out
cli
arpl
(bad)
in
mov
xchg
and
ins
(bad)
(bad)
call
in
or
xor
sbb
ins
out
push
inc
and
in
in
inc
fstp
test
(bad)
(bad)
inc
lods
mov
ror
mov
cmp
inc
loopne
pop
call
mov
fistp
retf
mov
(bad)
(bad)
(bad)
mov
ret
fdiv
jno
test
mov
lods
inc
aad
dec
mov
ret
push
inc
inc
enter
call
(bad)
jmp
gs
pop
xor
pop
push
xchg
movs
add
loop
retf
fsubp
mov
jecxz
das
lods
lock
sbb
pop
jno
and
jg
ins
ins
lock
jb
push
mov
jmp
iret
cmp
stos
cs
stos
aaa
pop
lock
(bad)
inc
lds
or
in
dec
cmp
pop
sub
inc
into
vmwrite
scas
test
(bad)
call
nop
pushf
sub
sub
es
in
imul
outs
add
pop
std
inc
stos
cmp
jne
dec
arpl
in
mov
push
sub
dec
int
scas
test
dec
in
xor
pop
inc
mov
retf
(bad)
(bad)
(bad)
call
pushf
dec
pop
xor
xchg
fcomp
dec
adc
ds
mov
dec
ins
lea
inc
(bad)
(bad)
(bad)
dec
inc
enter
add
cmps
or
pop
shl
inc
shr
mov
lahf
mov
(bad)
(bad)
dec
out
popa
shl
lea
ins
inc
bndstx
(bad)
nop
popf
mov
ja
mov
and
sbb
pop
loopne
sti
lock
mul
out
or
inc
xlat
(bad)
(bad)
(bad)
(bad)
jns
jnp
xor
and
pop
xor
sahf
not
cwde
mov
mov
jecxz
fmul
(bad)
(bad)
jmp
enter
xchg
shl
push
jmp
lock
(bad)
(bad)
mov
es
mov
das
cdq
out
jns
mov
(bad)
sahf
hlt
(bad)
(bad)
(bad)
(bad)
std
push
jecxz
arpl
test
(bad)
lods
xor
(bad)
sub
cdq
fwait
push
and
xchg
movs
and
(bad)
push
popf
out
xor
xchg
add
je
jmp
or
int3
call
xchg
sub
ins
jns
scas
unpcklps
xor
sbb
mov
jg
(bad)
call
arpl
repz
pop
outs
pusha
popf
cmps
addr16
mov
sar
fcomip
and
push
sbb
add
iret
jne
sub
or
cmp
(bad)
(bad)
call
std
jae
push
xchg
out
jg
test
xor
adc
sbb
(bad)
(bad)
(bad)
(bad)
xchg
and
ins
movs
mov
das
scas
daa
push
ins
test
fld
dec
pop
sbb
jae
popa
(bad)
(bad)
(bad)
push
mov
dec
add
push
cmp
aam
inc
fist
cmp
das
test
push
shl
push
xor
pushf
or
(bad)
dec
out
addr16
add
jp
add
icebp
mov
imul
ja
es
rcl
mov
scas
dec
adc
arpl
sbb
lods
mov
leave
(bad)
(bad)
(bad)
inc
xchg
mov
xchg
cmps
sub
clc
xchg
das
xchg
sbb
dec
sahf
mov
and
push
xor
(bad)
mov
dec
ss
imul
loope
call
cmps
push
clc
sub
call
jl
inc
mov
jo
add
(bad)
xchg
push
jmp
inc
fsub
mov
or
cmp
jle
icebp
(bad)
(bad)
(bad)
call
jb
adc
aad
or
iret
jns
int3
sub
daa
out
sbb
adc
dec
dec
add
or
ror
push
mov
call
sub
inc
and
dec
mov
push
sub
fst
call
lods
jg
(bad)
(bad)
dec
dec
lahf
mov
fwait
(bad)
push
jns
repz
sub
daa
push
imul
(bad)
(bad)
(bad)
jmp
out
stos
mov
out
add
cli
dec
mov
in
xchg
retf
and
push
adc
pop
loopne
les
pop
je
xchg
xor
std
(bad)
inc
nop
adc
push
mov
adc
xchg
test
dec
aad
dec
js
stos
(bad)
(bad)
jmp
pop
cld
(bad)
int
aam
fistp
aam
dec
pop
and
xor
xchg
jecxz
(bad)
(bad)
(bad)
inc
rcr
jne
mov
pop
adc
stc
inc
inc
scas
(bad)
mov
jbe
(bad)
(bad)
(bad)
inc
leave
jae
ja
sti
clc
repnz
stos
fistp
or
stos
sub
mov
imul
cld
(bad)
dec
in
mov
xchg
inc
cld
jp
pop
mov
addr16
cmp
cld
(bad)
mov
(bad)
and
mov
inc
jae
mov
aas
enter
sar
pop
pop
adc
mov
sub
(bad)
fcom
(bad)
(bad)
(bad)
(bad)
mov
xchg
stos
jmp
enter
push
and
inc
jnp
jl
and
pop
(bad)
(bad)
(bad)
dec
or
pop
mov
add
push
ret
adc
enter
adc
and
(bad)
(bad)
(bad)
jmp
sbb
test
mov
add
cmp
adc
sbb
(bad)
(bad)
dec
daa
cwde
pop
xchg
adc
out
addr16
loopne
pop
cmps
mov
pop
or
call
cld
call
sti
sub
jmp
out
sbb
fcos
(bad)
(bad)
jmp
shr
mul
popa
lods
pop
ss
je
in
sbb
add
dec
test
mov
dec
aaa
pop
mov
jmp
mov
mov
std
(bad)
call
adc
sub
push
scas
aas
sub
cwde
cli
dec
call
(bad)
(bad)
(bad)
jg
lock
ror
and
inc
or
sti
fsub
xchg
jo
mov
adc
jo
xor
movs
mov
rol
scas
jge
and
push
gs
push
xor
jae
in
push
ret
add
mov
out
push
mov
(bad)
(bad)
(bad)
jmp
jmp
arpl
popf
mov
shl
fwait
out
js
dec
scas
cmp
call
or
push
inc
pop
cs
repz
je
sbb
mov
(bad)
(bad)
(bad)
(bad)
fstp
pushf
outs
pop
push
sub
stos
adc
(bad)
std
ret
std
push
retf
ret
jmp
(bad)
fild
sub
pop
mov
cmps
push
int
(bad)
(bad)
(bad)
call
xchg
mov
jnp
test
sub
in
into
call
mov
dec
jno
(bad)
mul
pop
idiv
xchg
cmps
jmp
js
inc
outs
push
pop
push
enter
dec
push
shl
inc
jo
lock
push
retf
inc
mov
sub
dec
mov
mov
mov
xchg
dec
scas
repnz
xlat
dec
sbb
mov
push
and
(bad)
(bad)
jg
xor
jo
add
jo
jne
xchg
enter
adc
enter
push
cld
(bad)
(bad)
call
mov
sbb
ins
lods
pop
sub
jo
add
lods
loopne
pop
es
shl
lods
xor
push
popf
nop
aad
daa
xor
and
aaa
std
(bad)
dec
xchg
out
jmp
cs
and
xchg
sbb
fwait
mov
or
push
arpl
(bad)
(bad)
(bad)
jmp
add
jae
push
mov
xchg
mov
fmulp
aaa
(bad)
pushf
int3
mov
(bad)
(bad)
call
jge
retf
pop
test
nop
aam
sub
and
test
jle
and
fidivr
pop
cmc
dec
pushaw
add
jl
sbb
adc
jle
call
jmp
push
lea
push
lods
push
lods
retf
scas
push
add
mov
(bad)
jg
pop
int3
pop
es
ds
mov
loope
mov
leave
mov
(bad)
(bad)
push
jbe
cdq
mov
mov
push
shl
pop
fdiv
imul
mov
jl
cmp
sti
ds
jmp
cli
scas
adc
clc
pop
push
mov
das
jnp
out
sub
call
jmp
fcom
jle
fistp
mov
cmc
cmp
jbe
sar
(bad)
mov
xchg
mov
fimul
jg
push
pop
cmp
hlt
(bad)
(bad)
(bad)
lahf
sub
arpl
sub
js
mov
retf
add
dec
je
add
cld
pop
mov
mov
cmps
inc
(bad)
jmp
sbb
popa
mov
(bad)
ins
retf
xor
(bad)
(bad)
(bad)
call
icebp
inc
pop
imul
jb
xchg
(bad)
mov
jmp
cmp
(bad)
(bad)
(bad)
jnp
sub
fild
scas
pop
xchg
in
dec
mov
es
jle
cmp
pusha
or
cli
out
mov
mov
jg
mov
pushf
ins
jecxz
jo
inc
rcr
(bad)
jmp
fsub
mov
lock
mov
and
adc
mov
cwde
fdivr
(bad)
(bad)
sub
mov
sbb
pop
(bad)
inc
pop
out
fisub
imul
or
lock
jmp
and
jmp
aam
jl
mov
fsub
dec
push
mov
mov
add
loopne
xor
jns
sub
pop
popa
gs
push
(bad)
jmp
mov
pushf
or
jmp
(bad)
fcomip
(bad)
clc
adc
and
cmps
mov
sti
outs
jae
sub
or
(bad)
(bad)
(bad)
call
fnstcw
dec
mov
mov
pop
rdtsc
inc
mov
mov
push
ret
sub
lock
sar
je
cmp
adc
or
sahf
cmps
scas
call
mov
pusha
push
fistp
pop
jle
pushw
push
neg
cdq
mov
(bad)
(bad)
push
sub
ja
retf
xchg
inc
xchg
fisttp
or
lods
sbb
xor
jmp
jo
(bad)
(bad)
(bad)
call
shl
lds
sub
imul
js
(bad)
(bad)
(bad)
jmp
and
(bad)
jae
inc
mov
push
cmovl
push
neg
test
addr16
(bad)
(bad)
(bad)
jmp
mov
inc
cdq
aas
ins
lea
shl
sbb
jmp
sub
cmp
cmps
rcl
sti
bnd
push
push
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
mov
iret
sub
popa
adc
or
daa
rol
fidiv
mov
out
mov
imul
push
mov
pop
push
(bad)
(bad)
ret
xchg
(bad)
mov
in
call
jge
imul
mov
(bad)
(bad)
(bad)
inc
jp
fcmovnb
push
add
and
cwde
nop
jl
pusha
xchg
add
cmp
dec
adc
jo
adc
ret
push
mov
imul
pop
test
ja
(bad)
call
into
lds
mov
xor
(bad)
lea
(bad)
call
cmp
imul
out
aad
in
mov
jmp
(bad)
(bad)
jmp
lds
cmps
mov
in
mov
imul
lods
jp
lock
inc
stos
iret
sub
add
(bad)
jmp
cld
ficom
add
pop
mov
pop
repz
jmp
(bad)
or
(bad)
jg
mov
cmps
push
js
mov
inc
cmp
imul
in
addr16
ret
retf
pop
mov
out
sbb
mov
lods
sbb
or
xlat
lods
clc
clc
or
aaa
or
loopne
ins
jnp
scas
inc
xchg
pop
sbb
(bad)
(bad)
(bad)
jmp
lock
pop
cmps
dec
retf
rcr
fs
dec
mov
test
mov
mov
outs
mov
div
pop
sub
add
jno
adc
cmc
loop
enter
lock
sbb
inc
(bad)
inc
call
and
push
sbb
push
jmp
add
or
mov
call
cmp
(bad)
(bad)
dec
mov
or
popa
push
inc
ror
movs
cmps
sbb
xchg
sub
and
push
jae
(bad)
(bad)
(bad)
jmp
xor
dec
outs
mov
pop
mov
jne
gs
jbe
xchg
adc
cmps
adc
es
(bad)
(bad)
dec
inc
jne
stos
popf
mov
jnp
das
mov
adc
pop
or
(bad)
aam
mov
loopne
cmp
test
retf
test
sahf
call
mov
dec
outs
mov
mov
bound
adc
fdivr
push
dec
(bad)
(bad)
(bad)
call
daa
jmp
pushf
inc
and
shr
mov
add
push
enter
out
mov
arpl
pop
mov
mov
js
pusha
(bad)
(bad)
(bad)
mov
lods
sub
cmp
jecxz
sbb
ret
pop
sbb
sub
(bad)
(bad)
(bad)
jmp
and
jmp
mul
scas
test
push
push
mov
movs
xor
(bad)
(bad)
call
xchg
or
stc
cmp
(bad)
sbb
movs
xor
dec
(bad)
pop
ss
jecxz
fwait
xlat
jg
inc
pusha
gs
mov
cmp
jg
xor
xor
push
sbb
sub
mov
(bad)
jmp
repnz
mov
cmc
cli
std
aas
push
popf
call
(bad)
xchg
dec
imul
(bad)
(bad)
(bad)
jmp
ss
mov
dec
mov
jmp
enter
fimul
clc
inc
sub
into
jmp
leave
ret
ret
test
sbb
sbb
sbb
push
xlat
add
test
adc
add
popa
adc
add
sti
hlt
inc
push
daa
and
sbb
mov
push
xchg
fild
inc
imul
icebp
repz
jnp
add
jno
sub
scas
adc
push
(bad)
sti
sub
cmp
outs
mov
mov
jg
stc
add
jecxz
arpl
sub
cmps
or
xchg
inc
xor
and
xchg
xchg
dec
mov
mov
imul
mov
loop
(bad)
(bad)
(bad)
call
sbb
push
cmp
outs
lahf
adc
add
movs
push
mov
(bad)
(bad)
call
lods
aaa
nop
lahf
pop
jb
popf
xlat
out
sbb
cmp
jo
cs
iret
pop
dec
fidiv
aam
(bad)
(bad)
(bad)
jmp
inc
les
xor
jmp
(bad)
shr
cmps
adc
xor
(bad)
(bad)
(bad)
call
cmp
jb
adc
xchg
mov
inc
xchg
jp
test
xchg
je
jae
cmp
dec
(bad)
mov
(bad)
jo
sub
mov
ins
cmp
pop
adc
imul
sbb
js
(bad)
(bad)
jg
popf
sysenter
inc
cmp
inc
mov
dec
clc
ds
gs
ja
pop
into
sub
int3
dec
dec
ficomp
sar
fdiv
in
cmp
das
jge
loop
dec
retf
xchg
sub
scas
cmp
std
sub
(bad)
(bad)
push
shr
mov
lods
dec
pop
retf
jg
adc
jmp
jb
fs
(bad)
(bad)
(bad)
push
cmc
test
and
xor
lds
mov
mul
and
es
push
ss
(bad)
(bad)
(bad)
call
imul
cmp
rcr
stc
pop
mov
and
(bad)
pop
mov
(bad)
jmp
pop
call
xchg
sub
pop
jbe
mov
cmps
das
dec
mov
jp
jmp
icebp
(bad)
(bad)
jmp
inc
mov
sub
aaa
test
mov
and
popf
cmp
leave
movs
outs
xor
xchg
(bad)
mov
inc
cli
jg
lods
and
mov
sbb
cmps
jo
cmp
pop
adc
mov
scas
mov
mov
xchg
sahf
sar
lock
adc
sar
ret
push
(bad)
mov
mov
adc
(bad)
or
cmps
cmp
inc
fmul
imul
add
fistp
(bad)
(bad)
jns
push
sub
dec
pop
out
outs
(bad)
dec
and
imul
jo
xor
repnz
xchg
mov
not
fs
push
cmp
pop
(bad)
(bad)
(bad)
jmp
lods
and
or
sbb
dec
cld
mov
(bad)
(bad)
(bad)
inc
int
mov
lods
xlat
cmp
add
push
sub
jo
movs
aad
xchg
test
mov
(bad)
(bad)
(bad)
call
pop
ins
in
shl
jg
push
xchg
push
cmp
adc
fisttp
or
idiv
(bad)
(bad)
call
stos
mov
shr
mov
rcl
inc
in
mov
mov
iret
in
push
inc
dec
or
cmp
sahf
iret
test
sbb
loopne
pop
(bad)
(bad)
(bad)
jmp
cmp
cmp
and
inc
movs
mov
rcl
std
mov
arpl
and
mov
in
test
add
add
fninit
pop
in
jnp
retf
(bad)
dec
cld
(bad)
in
push
mov
lds
cmp
mov
shl
js
xlat
jge
es
int3
add
jns
mov
pop
fcomp
mov
imul
mov
je
xor
lock
or
jle
inc
mov
jmp
shl
rcl
dec
adc
sar
popa
add
dec
and
icebp
(bad)
(bad)
jmp
mov
inc
xlat
xchg
cld
aas
jg
shl
or
push
adc
ja
addr16
(bad)
(bad)
fild
add
lds
xor
mov
jns
add
ret
push
mov
sub
inc
xchg
push
addr16
or
add
mov
sti
dec
(bad)
clc
pop
fisub
(bad)
ds
pop
push
inc
int3
jmp
push
(bad)
(bad)
in
inc
lock
test
and
xchg
push
sbb
xchg
mov
ror
add
in
jecxz
sti
sbb
(bad)
and
sub
xchg
mov
pop
jns
div
das
(bad)
(bad)
(bad)
jmp
sti
loop
sbb
jle
pop
jo
pop
mov
add
inc
mov
fstp
(bad)
(bad)
(bad)
call
hlt
mov
sub
shl
cmps
arpl
cmps
jo
nop
jmp
inc
std
(bad)
(bad)
jmp
xchg
ret
mov
inc
adc
mov
xchg
stos
cmp
lods
loopne
int3
mov
dec
test
call
aaa
xchg
rcr
and
retf
lds
arpl
cli
(bad)
(bad)
dec
nop
add
les
aas
mov
mov
or
xchg
outs
shl
cmp
(bad)
jmp
xor
ins
cdq
mov
retf
sbb
push
jns
loope
(bad)
(bad)
(bad)
dec
cmp
repnz
and
(bad)
pop
push
mov
vzeroupper
xchg
cdq
mov
(bad)
inc
ja
inc
push
fadd
cli
pop
pop
pusha
or
xchg
dec
mov
jl
in
clc
(bad)
out
lods
jne
daa
and
call
and
outs
scas
push
loopne
jbe
and
pop
cmp
lods
xchg
clc
push
cmp
xor
rcr
call
test
in
sbb
add
cmp
push
sahf
mov
nop
scas
ret
out
(bad)
(bad)
(bad)
dec
(bad)
arpl
cwde
sub
push
dec
das
pushf
xchg
push
dec
mov
pop
stc
jne
or
jmp
rcr
(bad)
outs
xor
jbe
ss
cmp
ja
ins
(bad)
(bad)
jmp
dec
loopne
test
or
repnz
cli
lock
jle
jae
inc
in
scas
pushf
test
(bad)
(bad)
std
cmps
or
ins
sub
jmp
test
sbb
cwde
jno
scas
inc
test
fcmovnu
jb
inc
cld
jmp
inc
push
push
mov
push
cs
push
xchg
sbb
mov
loop
imul
xor
cmp
mov
cmps
inc
inc
push
push
and
sub
lods
jge
jle
test
inc
lods
aas
ins
sub
jo
(bad)
(bad)
push
sbb
out
dec
mov
cmps
mov
dec
add
lods
(bad)
cmp
dec
jge
sub
(bad)
(bad)
(bad)
jmp
xchg
xor
in
fwait
cmps
jmp
outs
scas
(bad)
mov
mov
add
(bad)
jg
inc
add
ss
jbe
cld
retf
lahf
shl
mov
aad
sbb
(bad)
(bad)
(bad)
jmp
mov
mov
fmul
push
inc
(bad)
out
sbb
fs
(bad)
(bad)
(bad)
inc
aas
cmp
shl
dec
fnstcw
fdiv
std
into
dec
sub
xchg
adc
movs
lea
sub
call
push
jg
sahf
add
arpl
leave
and
add
(bad)
cmp
pop
int3
outs
mov
ret
in
inc
(bad)
call
pop
in
xchg
jmp
adc
push
xor
sar
arpl
or
mov
mov
adc
out
je
or
(bad)
(bad)
(bad)
jmp
sub
call
and
das
mov
sahf
in
cmps
inc
xchg
or
int3
and
(bad)
(bad)
dec
stos
inc
mov
mov
adc
jp
mov
pop
ss
cmp
adc
popa
shr
(bad)
(bad)
(bad)
push
js
push
iret
xor
das
or
mov
cmps
mov
scas
push
movs
je
or
adc
(bad)
(bad)
(bad)
fist
cmps
and
add
shl
adc
ret
inc
test
jb
dec
adc
xor
loope
or
jno
es
fcos
xchg
mov
(bad)
(bad)
inc
dec
not
repnz
repnz
sbb
and
les
cmc
or
stc
cwde
lock
(bad)
(bad)
(bad)
inc
pop
cmp
jge
fs
ret
xchg
mov
js
call
dec
movs
(bad)
mov
retf
and
rol
push
scas
inc
(bad)
xor
loop
ins
(bad)
(bad)
(bad)
dec
std
or
aas
imul
in
xchg
xor
jl
(bad)
movs
jecxz
sub
jmp
mov
mov
mov
mov
xor
test
out
je
push
inc
shl
jns
arpl
mov
sbb
mov
xor
(bad)
cmp
test
sbb
and
lock
sbb
(bad)
(bad)
mov
adc
lahf
scas
paddusw
add
aas
fwait
add
dec
push
or
dec
(bad)
(bad)
(bad)
inc
(bad)
push
sbb
es
(bad)
and
or
dec
shl
inc
xor
fs
mov
fild
or
repnz
mov
cmps
pop
popa
js
daa
lods
icebp
aas
lock
push
add
stc
pop
sbb
add
xchg
pop
mov
gs
jo
cmp
fbstp
sbb
cmc
add
xchg
or
mov
sbb
ret
retf
repz
jg
push
pushf
inc
sbb
fisttp
xor
fdiv
test
shl
pop
pop
test
(bad)
jmp
sbb
sbb
mov
cli
stos
fwait
cwde
mov
fsub
cld
imul
inc
movs
repnz
jecxz
test
mov
mov
jns
std
(bad)
push
xchg
movs
cmps
mov
aad
mov
outs
js
push
xchg
into
xor
add
(bad)
jg
add
adc
add
(bad)
in
dec
mov
xchg
add
inc
(bad)
out
ret
mov
pop
ins
and
xlat
(bad)
call
daa
sti
add
adc
mov
outs
mov
mov
(bad)
inc
fwait
pop
(bad)
movs
scas
xchg
je
xchg
in
push
cmp
sub
sbb
mov
or
inc
push
sbb
cmp
cmp
mov
pop
pop
test
dec
push
std
(bad)
jmp
(bad)
repz
in
les
jns
popa
and
fadd
sub
or
push
jne
(bad)
push
(bad)
jae
clc
call
out
inc
out
jbe
mov
fs
cwde
xor
cmp
pop
add
lods
ret
pop
xchg
add
(bad)
(bad)
inc
dec
push
retf
mov
fabs
inc
and
sahf
jp
jae
add
mov
std
call
out
pop
jl
cmp
jmp
sub
ror
test
sbb
movs
imul
jbe
stos
dec
movs
xchg
fistp
fs
bound
call
lods
mov
and
jmp
add
ins
mov
xchg
or
enter
nop
mov
mov
(bad)
(bad)
call
xchg
pop
pop
pop
push
inc
popa
push
mov
push
sbb
aam
js
je
cmps
(bad)
(bad)
mov
aas
push
dec
rcl
jo
cmp
mul
loop
movs
(bad)
(bad)
(bad)
jmp
ins
xchg
sbb
fs
add
lock
test
scas
div
scas
cli
jmp
dec
mov
daa
mov
out
mov
or
(bad)
cli
out
pop
cmp
rcl
iret
jmp
(bad)
(bad)
xlat
mov
sti
and
outs
xor
call
pop
movs
push
push
cmp
test
call
add
and
jae
clc
mov
mov
(bad)
(bad)
jmp
popa
rol
dec
add
mov
and
push
mov
jecxz
std
movs
or
inc
push
mov
or
and
sub
(bad)
fucom
stos
stc
je
enter
or
push
std
adc
push
sbb
(bad)
(bad)
(bad)
jmp
push
mov
push
ret
jle
mov
popf
inc
fld
and
arpl
dec
(bad)
(bad)
(bad)
inc
and
jns
in
test
dec
xchg
mov
repnz
pop
ror
sbb
sub
(bad)
fcomip
scas
jle
pop
daa
loope
(bad)
and
es
jle
call
std
rol
sub
and
jmp
cli
add
shr
mov
in
sahf
inc
pop
add
(bad)
(bad)
(bad)
(bad)
stc
sbb
pop
inc
and
pusha
movzx
mov
sbb
mov
mov
or
add
inc
sbb
iret
fcomi
add
and
(bad)
daa
sbb
pop
mov
lock
les
dec
inc
(bad)
addr16
mov
cli
adc
push
push
das
ins
dec
mov
inc
xchg
and
into
aas
cmc
test
cmp
mov
jae
xor
mov
(bad)
cmp
mov
pop
(bad)
ins
test
cmp
(bad)
call
jbe
cdq
jl
(bad)
inc
push
mov
jae
scas
xchg
pop
sbb
xchg
pop
dec
add
jae
ret
in
(bad)
(bad)
(bad)
dec
enter
loop
gs
dec
or
inc
cmp
cmps
(bad)
test
mov
(bad)
mov
leave
out
pop
ss
movs
jp
test
push
cmp
jmp
addr16
and
imul
inc
inc
mov
cmp
out
cli
(bad)
(bad)
push
fmul
adc
out
das
es
movs
inc
je
push
fwait
aad
adc
mov
and
(bad)
fdiv
cdq
mov
xchg
nop
(bad)
push
shl
xchg
call
xor
push
enter
xor
lock
inc
cs
adc
dec
jecxz
jle
clc
rcr
sar
aad
(bad)
adc
push
push
shr
fcomp
fwait
mov
je
out
and
mov
out
cld
or
call
loopne
jne
cmp
inc
movs
loopne
mov
in
fcom
push
loop
clc
or
jmp
push
and
pushf
dec
jae
sbb
cmps
int3
daa
mov
call
loopne
push
adc
xchg
aaa
repz
test
stos
loope
data16
jmp
imul
sbb
and
pop
inc
inc
adc
add
ja
cmc
inc
add
add
mov
and
inc
or
add
fcom
push
mov
add
mov
jg
add
pop
in
dec
add
ret
add
add
rcr
or
dec
or
push
test
push
test
iret
push
and
or
scas
jle
(bad)
rol
lock
pop
pop
imul
pusha
das
call
mov
mov
jnp
xchg
movs
push
idiv
int
daa
add
xchg
dec
and
cmps
push
and
cs
mov
push
movs
push
movs
inc
scas
push
and
stos
push
and
in
cld
pop
push
push
test
and
imul
push
icebp
in
push
push
inc
pop
pop
add
mov
pop
sbb
fistp
pop
sbb
inc
mov
pusha
sbb
mov
imul
push
adc
fs
mov
stc
(bad)
int
or
retf
imul
imul
imul
sub
retf
mov
jbe
fnstenv
adc
push
mov
stos
pop
stos
jbe
and
jb
ss
clc
ins
sti
jbe
add
jo
mov
push
shl
add
outs
push
shl
lods
loopne
push
fidivr
iret
outs
or
push
ret
jbe
(bad)
je
fidivr
out
jge
fisttp
test
jmp
movs
push
add
mov
sbb
jae
shl
mov
push
sti
call
jne
push
aam
push
lock
retw
add
mov
adc
outs
ss
pop
dec
add
cmp
data16
inc
xchg
ds
scas
add
push
push
(bad)
shl
retf
fnstcw
add
ja
push
rcr
not
xlat
jne
add
ja
push
(bad)
ds
ins
aad
push
xlat
ja
js
push
(bad)
jns
push
jl
rol
jp
jp
inc
push
fidivr
sar
sub
int3
ja
fld
ret
ror
jmp
xchg
fiadd
sub
xchg
xor
xchg
ins
push
xchg
pop
xor
imul
(bad)
ds
aaa
push
call
push
cmp
jl
ins
push
pushf
cmp
popf
xchg
popf
aas
in
xchg
push
sahf
inc
push
lahf
inc
lahf
mov
mov
push
push
jecxz
push
imul
(bad)
jns
mov
push
out
out
push
hlt
out
sahf
out
stc
cli
sti
cld
sbb
jg
std
inc
jecxz
arpl
inc
jae
data16
add
jo
imul
mov
add
pop
add
pop
add
add
bound
push
mov
add
mov
add
outs
add
test
outs
or
or
fld
lods
stos
test
test
or
or
or
pop
rcl
pop
adc
adc
lods
fwait
pop
mov
add
pop
stos
femms
lods
addr16
mov
pop
mov
mov
stos
ins
add
scas
ins
lods
pop
pop
adc
sbb
lods
adc
sbb
add
scas
scas
scas
or
int
scas
sbb
mov
mov
or
out
and
inc
and
mov
push
adc
or
xchg
mov
and
mov
pop
and
pop
push
and
mov
xor
inc
pop
pop
sub
mov
pop
sub
pop
and
mov
inc
push
mov
aaa
add
cmp
ins
call
add
adc
aaa
cmps
add
mov
fstp
ins
ins
push
pop
pop
or
or
add
mov
ins
pop
pop
xor
mov
pop
das
push
cs
jnp
in
pop
xor
add
xor
das
pop
push
push
xor
adc
pop
(bad)
(bad)
(bad)
call
inc
dec
inc
das
inc
inc
xor
adc
push
xor
push
push
popa
jbe
cmp
jl
jge
push
pop
les
jno
add
pusha
pop
pushw
(bad)
push
dec
dec
cmp
jo
mov
inc
xor
mov
xchg
xchg
xchg
popf
inc
jmp
call
mov
jg
lea
xchg
push
add
jle
je
push
bound
mov
adc
xor
jne
add
je
jg
fld
sub
ds
jo
xchg
or
pop
mov
adc
scas
aas
adc
dec
jg
push
jle
xchg
pop
push
dec
add
push
mov
scas
jge
(bad)
sub
js
xor
xor
ja
push
ja
jb
mov
fild
es
xor
mov
mov
xor
mov
and
ja
outs
and
mov
xchg
jo
or
pop
push
inc
mov
cmp
mov
inc
fwait
add
xchg
jae
(bad)
xchg
jp
inc
push
popf
inc
mov
pop
sti
cdq
push
add
xchg
jno
retf
push
bound
mov
mov
ins
push
lahf
inc
inc
push
sahf
mov
mov
sti
jmp
pushf
data16
xchg
outs
add
xchg
xchg
pop
push
test
cmps
dec
shl
test
push
movs
(bad)
jae
add
jb
shl
(bad)
mov
xlat
pushf
push
ror
add
call
outs
fisub
outs
mov
dec
push
add
ja
sahf
jbe
pusha
call
fistp
imul
stos
das
shl
fist
data16
jp
add
js
mov
into
mov
test
shr
ins
pop
outs
push
sub
ds
ror
push
ds
jno
ins
fist
add
jge
push
jg
fiadd
call
adc
mov
add
clc
in
xchg
or
stos
bound
out
arpl
imul
push
loopne
iret
sahf
mov
dec
add
jb
out
in
xchg
and
jbe
or
push
fnstcw
aad
push
div
dec
movs
jns
fild
adc
push
adc
sbb
sbb
sbb
test
test
sbb
test
in
mov
push
xchg
nop
and
mov
cmp
out
xchg
(bad)
in
xchg
lock
sub
sti
rol
push
imul
push
mov
fimul
repnz
xor
cwde
push
cmc
sahf
xor
pusha
repz
fwait
cmps
pop
cmp
mov
aam
jle
push
push
pop
ret
scas
jo
test
sahf
stos
pop
mov
shr
fmul
mov
lgs
(bad)
int
fnstenv
cmps
sar
inc
xchg
mov
aad
jle
rcl
jp
into
add
addr16
dec
inc
mov
sub
add
add
xchg
daa
add
test
mov
nop
ja
cld
femms
or
or
or
out
in
or
es
push
adc
push
add
pop
repnz
sti
add
ds
add
loop
xor
mov
adc
sbb
ins
adc
mov
mov
imul
push
add
and
aad
imul
and
cs
mov
mov
xor
aas
and
aas
pop
dec
lock
cmp
aas
cmp
enter
cmp
jae
cmp
fiadd
mov
sbb
inc
jbe
xor
mov
inc
inc
jle
cmp
scas
xor
dec
mov
scas
ds
jle
aas
adc
imul
xor
dec
inc
test
int
scas
add
outs
mov
mov
addr16
mov
ds
jg
jle
lods
stos
test
cmps
cmps
cmps
cmps
add
test
mov
mov
ds
xor
sub
sub
sub
sub
outs
sub
xchg
add
dec
and
inc
mov
ds
push
push
push
push
push
push
imul
push
pop
push
push
push
imul
fs
das
pop
imul
cwde
xchg
pusha
xchg
nop
cdq
mov
mov
nop
test
ins
popf
(bad)
(bad)
(bad)
mov
jge
jns
jns
jle
add
jo
outs
pushf
push
ins
push
dec
sti
lds
push
rol
mov
test
mov
inc
or
add
or
stc
dec
jl
push
add
cmc
repz
dec
xor
aas
(bad)
(bad)
(bad)
std
add
xchg
pop
cmp
test
add
mov
add
mov
(bad)
(bad)
mov
push
fnstsw
repnz
inc
add
gs
(bad)
aaa
jecxz
pushf
add
mov
push
in
call
cmp
or
mov
push
push
dec
sti
inc
js
into
xchg
add
mov
or
(bad)
in
mov
test
scas
xchg
js
in
and
out
in
imul
or
push
xchg
push
(bad)
sub
nop
mov
fistp
push
xchg
xor
xchg
xor
xchg
fbstp
dec
push
(bad)
es
jbe
neg
ins
mov
ds
fst
es
push
retf
loopne
and
addr16
(bad)
(bad)
std
into
(bad)
fisubr
push
test
imul
xchg
add
fwait
int
add
jge
inc
add
inc
enter
push
dec
dec
dec
stc
aas
bnd
dec
dec
add
pop
add
push
dec
or
adc
cmp
fstp
(bad)
push
adc
dec
or
add
push
adc
and
in
pop
inc
inc
or
pop
pop
cmovg
mov
imul
push
dec
sbb
inc
adc
lahf
(bad)
inc
inc
inc
adc
sbb
dec
add
dec
adc
inc
ds
(bad)
(bad)
mov
cmp
and
daa
and
sbb
sbb
and
add
dec
ss
xor
sub
sub
or
scas
or
mov
pushw
mov
mov
mov
mov
xor
in
inc
add
outs
mov
push
ds
add
add
cmps
pop
inc
and
mov
xor
outs
mov
cmps
ror
(bad)
jbe
inc
and
inc
(bad)
cld
or
push
inc
xlat
sbb
add
pop
outs
sub
pop
in
sysret
mov
es
ds
dec
inc
xchg
mov
pushf
cmp
jnp
pop
in
lock
add
test
mov
adc
cs
aaa
and
shr
add
mov
sbb
push
mov
sbb
(bad)
cli
mov
add
pop
cli
fisttp
add
call
(bad)
les
cli
adc
adc
xor
add
mov
jg
das
sti
mov
sbb
add
jle
add
dec
sti
jg
shl
xchg
mov
cmp
push
adc
push
mov
adc
xor
jg
(bad)
cld
mov
nop
or
adc
rol
ja
jg
and
adc
jns
and
jg
jg
adc
or
dec
push
adc
push
pop
jg
push
add
add
push
data16
sub
inc
(bad)
(bad)
(bad)
inc
or
(bad)
addr16
lods
cmp
push
inc
add
sar
data16
xchg
or
mov
jg
add
lea
jg
ins
or
sbb
fst
xchg
pop
shr
add
int3
(bad)
push
mov
scas
sub
mov
xchg
sub
push
inc
shl
lods
jle
retf
imul
scas
xchg
adc
lods
adc
mov
call
sbb
pop
sbb
call
jg
pusha
sbb
data16
xor
jg
jg
lods
lea
add
xor
adc
cmps
sub
xor
add
jg
ss
les
inc
pop
add
mov
jmp
call
jmp
stos
ins
in
popf
test
pop
add
daa
aas
xor
(bad)
mov
pop
pop
add
in
push
pop
pop
jle
add
xor
push
rol
test
or
lahf
mov
(bad)
push
push
jle
push
dec
xchg
push
bound
add
mov
mov
ins
iret
das
pop
daa
push
arpl
xchg
popa
das
les
push
mov
ins
xlat
out
(bad)
mov
dec
dec
(bad)
push
and
(bad)
dec
jmp
xchg
jbe
aam
sub
mov
inc
lea
push
dec
(bad)
jl
jge
idiv
fnstenv
add
push
jne
pop
test
jbe
out
push
dec
or
jnp
push
jp
push
js
mov
jbe
pop
add
call
fdivr
jne
jbe
(bad)
push
outs
ds
cmp
(bad)
jle
cmp
aam
dec
inc
sub
(bad)
jp
dec
test
xchg
dec
ja
xchg
sub
je
sahf
jns
fs
adc
xchg
call
push
mov
adc
outs
inc
jbe
sahf
inc
(bad)
out
(bad)
scas
cs
aas
and
push
pushf
cmp
cmps
test
cdq
mov
ins
fstp
xchg
xor
xchg
xor
sub
sub
nop
daa
xchg
sar
ss
cs
mov
enter
xor
stos
test
mov
sbb
jg
pop
fnsave
xor
test
push
inc
(bad)
or
or
es
or
ss
cs
rcl
push
add
or
mov
ja
dec
push
test
mov
aas
adc
ja
div
mov
add
ja
add
in
adc
push
add
mov
sub
pop
dec
push
outs
test
or
adc
scas
(bad)
adc
pop
push
xor
cmp
mov
cwde
mov
jmp
push
imul
mov
sbb
test
push
lock
cmp
push
jmp
pop
cmp
icebp
call
xor
in
add
mov
mov
push
add
dec
(bad)
out
pop
dec
sahf
jbe
idiv
mov
or
(bad)
push
call
push
sbb
xor
cmp
dec
add
sti
std
adc
mov
syscall
mov
sub
xor
or
pop
aad
xchg
ds
mov
add
inc
int3
push
fadd
das
pop
push
push
shl
jmp
push
inc
dec
or
call
or
in
std
out
ud2
or
or
call
or
(bad)
mov
sti
ud0
(bad)
call
outs
lea
push
jmp
test
push
(bad)
(bad)
push
and
(bad)
call
(bad)
out
jmp
dec
or
xor
xor
call
sub
push
outs
dec
mov
push
mov
add
or
nop
mov
xor
push
inc
bswap
jle
cdq
mov
inc
sti
out
loope
adc
ud0
inc
enter
dec
dec
add
add
iret
mov
inc
push
aaa
mov
xlat
fdivrp
rcl
(bad)
jns
add
pop
sti
push
std
sub
jmp
call
add
push
call
or
pop
cmps
cld
in
mov
add
in
adc
xlat
jg
test
and
cli
imul
movs
and
nop
inc
rol
cmp
call
or
mov
leave
iret
inc
pop
fcmovbe
pop
pop
imul
xorps
aaa
mov
dec
push
(bad)
(bad)
push
ror
icebp
sahf
mov
push
mov
rol
test
inc
call
adc
jmp
jmp
fcmove
jnp
lahf
inc
inc
push
inc
inc
pop
ss
in
inc
pop
mov
ins
mov
sahf
movs
dec
push
stos
push
popf
inc
cmps
dec
call
cs
dec
xchg
aam
imul
push
lahf
mov
add
push
shr
rcl
outs
es
shl
push
xor
add
das
xor
ins
pop
daa
outs
xor
imul
and
push
push
movs
sub
(bad)
call
dec
pop
xor
movs
(bad)
pop
int
repnz
(bad)
cli
mov
and
popfw
cmp
aas
call
push
cwde
xor
dec
inc
push
xchg
push
dec
jp
in
push
aaa
push
call
imul
xchg
xchg
cdq
not
sub
call
aam
mov
scas
jmp
jmp
sbb
xor
fimul
sar
fcmovbe
js
std
fadd
push
(bad)
(bad)
fstp
push
jnp
jp
or
int
push
jl
or
jl
push
jge
shr
adc
push
jbe
adc
fidivr
jg
data16
dec
push
dec
repnz
repnz
jae
pop
fidivr
cld
aaa
fbld
mov
jnp
jge
hlt
in
add
int3
push
push
leave
xor
pop
add
push
push
xor
xchg
push
outs
lahf
adc
adc
adc
or
imul
cmp
jnp
lahf
dec
es
add
adc
xchg
in
or
jg
and
xchg
push
sbb
out
push
sub
iret
out
(bad)
mov
cli
inc
mov
jbe
clc
push
idiv
mov
jb
sub
jg
mov
icebp
or
cld
mov
out
ja
jno
sub
jg
mov
icebp
(bad)
fucomip
or
jg
je
daa
jg
jns
add
mov
ja
loope
xchg
jl
cmp
cld
jp
es
xchg
rcl
aaa
inc
jge
and
or
or
jg
dec
stos
dec
pop
ja
movs
addr16
or
mov
icebp
idiv
call
push
fadd
rol
push
and
lahf
inc
push
int3
dec
pop
jle
mov
fidivr
arpl
clc
jbe
fidiv
jmp
mov
push
pop
push
pop
nop
jbe
nop
(bad)
push
pop
or
and
mov
mov
push
int
push
(bad)
jns
or
fistp
mov
push
mov
jmp
xchg
ins
or
xchg
mov
push
xchg
mov
pop
test
loop
adc
xchg
sbb
dec
push
jmp
mov
retf
jg
out
mov
or
stos
inc
xchg
push
test
movs
ds
inc
or
loope
sahf
push
cmovno
sub
mov
mov
adc
sbb
push
mov
sahf
xor
add
add
pusha
mov
pop
push
lock
adc
call
cdq
ins
jmp
sub
pop
iret
inc
test
pop
push
sbb
imul
and
or
inc
or
add
fcomp
push
mov
jne
jmp
or
add
mov
push
adc
mov
adc
or
push
je
dec
lgdtd
lock
xchg
icebp
inc
push
gs
jo
es
add
add
add
fs
popa
std
and
xor
es
and
sahf
es
call
xor
push
add
dec
test
fiadd
add
lock
inc
jmp
lahf
jo
das
fiadd
ret
aam
add
movs
outs
jb
xor
pusha
xchg
dec
xor
aas
add
add
jno
sub
mov
sbb
call
mov
add
sbb
sbb
jmp
dec
loop
mov
dec
lods
add
and
jo
jmp
js
popf
in
add
shl
xor
push
es
addr16
jb
call
add
adc
and
push
or
inc
xchg
fist
xor
add
mov
clc
pop
pop
gs
add
add
add
pop
xor
add
dec
xchg
dec
pushf
aas
xchg
les
or
dec
pushf
jnp
call
lahf
push
add
add
xchg
push
sti
jo
xor
dec
push
outs
loop
lods
jge
nop
and
push
pop
pop
call
pop
xor
jmp
pop
pop
push
ins
out
inc
imul
sbb
inc
pusha
pop
add
adc
loop
add
mov
jne
addr16
xor
cmp
push
cwde
dec
sbb
or
popa
inc
or
rcr
inc
or
add
ins
test
dec
cmps
dec
fstp
mov
pop
arpl
mov
cmp
add
add
fiadd
and
rol
sar
push
popa
xchg
aad
mov
je
pusha
loop
xor
cwde
cwde
sub
add
push
cmp
sbb
cmp
jo
je
push
mov
arpl
sbb
sub
rol
mov
xor
and
push
es
adc
push
das
imul
and
adc
or
cmp
pop
adc
pop
mov
sbb
cdq
push
test
push
mov
sbb
dec
cwde
and
inc
or
jmp
pop
adc
cmp
dec
pusha
clc
ret
shl
inc
je
bound
mov
mov
inc
iret
ins
invd
aad
cmp
push
outs
adc
cdq
xchg
xchg
sub
sub
icebp
inc
sub
popa
and
pop
test
js
lds
and
jno
icebp
and
test
add
add
xor
sub
sub
sub
sbb
jp
dec
dec
fbstp
push
cdq
dec
jo
pop
xor
xchg
mov
(bad)
cvttps2pi
push
scas
inc
nop
dec
(bad)
inc
push
xor
imul
lods
ja
sbb
mov
pop
inc
and
inc
jg
stos
sbb
jno
scas
popa
adc
lahf
mov
pop
pop
sahf
je
jne
inc
mov
test
gs
outs
jae
push
push
or
loop
outs
mov
add
ret
xlat
mov
mov
add
push
add
shl
daa
fldenv
push
adc
and
imul
mov
das
mov
dec
call
test
aas
sub
xchg
pop
sub
(bad)
adc
out
sbb
adc
ins
retf
and
movs
jnp
push
inc
je
mov
sbb
sbb
ret
into
arpl
jae
test
lea
add
adc
je
lock
mov
or
xlat
and
sar
inc
sbb
mov
dec
int
sbb
jne
pop
popa
push
in
fs
or
push
popa
sub
cmc
cwde
rcpps
js
push
jb
xor
lea
inc
xchg
or
push
inc
add
inc
imul
cmps
in
in
lds
inc
xor
aad
mov
push
and
add
ins
push
cld
sub
fs
jbe
push
fwait
push
mov
add
pop
and
loop
dec
or
lahf
dec
inc
add
es
test
jae
push
jg
jns
lock
rcl
imul
push
jo
and
aam
sub
test
std
addr16
add
inc
sub
pop
xor
xchg
popa
outs
mov
adc
xor
outs
inc
sbb
call
popa
mov
and
je
ins
jb
clc
ins
dec
outs
dec
std
lea
rol
or
mov
inc
(bad)
xor
sub
push
push
js
add
in
ins
call
dec
add
sbb
mov
movs
imul
cmps
imul
imul
mov
add
es
pop
add
in
ret
add
xor
jb
movs
outs
xchg
add
loopne
(bad)
and
and
(bad)
imul
and
shl
push
test
ficomp
dec
popf
stos
daa
movs
mov
adc
ins
sub
mov
sbb
mov
inc
mov
sub
inc
ins
scas
inc
stos
les
test
nop
int
outs
and
inc
sbb
rol
xchg
out
(bad)
shl
add
(bad)
mov
gs
(bad)
sbb
xchg
bound
add
sar
rcl
push
ss
cmp
into
mov
xchg
pop
bound
rol
mov
rcl
or
sbb
sub
jge
loopne
push
xor
imul
and
inc
test
(bad)
ret
push
dec
sbb
sub
ud2
mov
sbb
out
xchg
dec
pop
retf
inc
lock
mov
push
hlt
mov
xchg
mov
popw
xlat
adc
or
mov
sbb
dec
adc
mov
add
xor
inc
mov
enter
out
push
imul
inc
aaa
outs
and
cmp
cmp
mov
jbe
sbb
lods
outs
jbe
pop
sub
cmps
adc
and
nop
push
shl
rcr
xor
pcmpeqd
dec
ins
dec
inc
ret
and
push
movs
push
and
sub
push
jns
shl
loopne
daa
dec
cld
addr16
adc
arpl
(bad)
int3
pop
test
pop
xor
xor
outs
push
mov
jb
inc
xor
inc
push
ins
pop
xchg
mov
cmp
jns
stos
sbb
sbb
add
inc
cmp
push
out
xlat
mov
xchg
cmp
outs
sbb
shl
dec
jg
ss
inc
sub
push
mov
sbb
mov
into
data16
add
sub
lahf
add
sahf
out
xchg
push
mov
loop
(bad)
push
inc
inc
cmp
inc
sub
jp
movs
fcomp
and
dec
or
cmp
neg
out
(bad)
sub
dec
dec
ja
xor
xchg
jae
xor
jo
fiadd
pusha
aaa
sub
sbb
mov
sub
inc
or
xchg
jp
push
cmp
movs
dec
sub
stc
in
addr16
rol
fidiv
push
daa
stc
or
adc
mov
or
popf
or
nop
xor
scas
mov
(bad)
(bad)
(bad)
(bad)
ss
and
mov
inc
nop
mov
mov
add
sub
int3
clc
add
fwait
loopne
and
sahf
push
pop
add
rol
enter
cmp
pushf
push
xlat
push
add
(bad)
dec
retf
add
jp
(bad)
dec
sbb
retf
inc
add
ss
or
add
inc
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
inc
add
