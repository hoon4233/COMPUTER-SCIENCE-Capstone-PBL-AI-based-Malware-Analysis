pop
jno
dec
cld
sti
sub
xlat
jle
mov
sbb
cmp
cli
mov
inc
sti
jge
aam
adc
sar
(bad)
bound
cmp
das
hlt
fwait
dec
shl
je
hlt
mov
in
lahf
aas
sbb
pop
jle
(bad)
rcr
mov
pushf
jmp
cmps
adc
std
stos
jge
cmp
leave
sub
iret
mov
rol
outs
xchg
inc
and
push
fisttp
mov
lds
xchg
aas
imul
shl
sti
inc
push
push
test
xchg
and
and
out
sbb
mov
outs
das
dec
xor
pop
push
or
fistp
out
inc
scas
popa
xor
jge
cmp
dec
xchg
outs
ret
bound
and
cmp
outs
jecxz
into
jns
xchg
jmp
xor
sub
push
mov
inc
aad
outs
jnp
adc
or
stos
(bad)
aad
stos
arpl
mov
and
pop
dec
out
das
lods
push
adc
leave
ins
jno
dec
jns
hlt
mov
add
mov
bound
ds
push
or
push
rol
jb
mov
aas
xchg
sbb
aad
push
cmp
pop
(bad)
fdivr
or
pop
sub
and
dec
add
in
outs
aad
fisttp
cmp
or
jae
xor
push
dec
pop
cld
sbb
ins
dec
push
xchg
sub
fldcw
(bad)
clc
xor
and
loopne
imul
or
jns
das
inc
ret
jae
xor
pop
pop
stos
jnp
inc
fimul
push
xchg
data16
and
jns
inc
loop
ins
arpl
out
pop
jo
dec
jmp
mov
movs
push
outs
jge
push
out
repz
add
push
gs
sub
jg
cmp
inc
pop
aad
jne
push
daa
mul
dec
stos
bound
std
popa
sub
in
cld
adc
retf
xor
(bad)
popa
outs
cmp
fidiv
pushf
jne
push
cmps
push
push
jnp
gs
aad
in
mov
xchg
es
inc
adc
inc
mov
jne
jno
gs
xchg
stos
push
call
inc
cmp
jne
(bad)
cmc
das
aaa
push
int3
cmp
retf
bound
push
imul
cmp
push
xor
cmp
out
cmp
push
bound
loope
jg
iret
rol
ret
sbb
jnp
xchg
movs
outs
jle
pop
imul
push
fidivr
push
in
imul
and
cwde
lds
shl
push
xor
inc
mov
mov
ins
xchg
xchg
mov
mov
outs
gs
xor
mov
jmp
jns
aad
mov
jle
mov
cmp
call
ret
lock
fsubp
dec
inc
shl
pop
frstor
cmc
push
add
pop
adc
cs
mov
retf
or
mov
ins
dec
mov
push
ins
cmp
jb
rol
mov
sbb
dec
sub
rcr
imul
cmc
outs
test
add
jge
bound
push
xor
jg
adc
sub
fwait
cdq
mov
aad
mov
add
(bad)
cli
and
stos
xor
pop
xor
cld
jns
call
jb
push
push
sti
std
ss
jae
jp
iret
pop
pushf
in
xor
ins
sbb
jbe
outs
(bad)
cmp
mov
mov
test
stc
mov
jecxz
push
cmc
pop
imul
dec
or
or
enter
sub
out
xchg
ret
lea
lods
ds
cmp
mov
cmp
div
repnz
cmps
ds
ins
addr16
in
(bad)
stos
jbe
jl
jbe
and
lahf
outs
icebp
add
jno
cmp
push
scas
and
pop
je
mov
loopne
(bad)
lea
and
or
ret
bound
cmc
jmp
push
iret
fcom
mov
dec
fisubr
inc
mov
add
mov
jecxz
and
jbe
mov
or
cdq
lea
mov
cmp
jne
sub
adc
fcmovnu
retf
cmp
clc
adc
fnstcw
push
stc
ror
or
mov
aam
and
into
jne
pop
jns
sbb
jae
fstp
adc
mov
das
xor
call
loopne
sti
cli
arpl
xor
out
(bad)
pop
mov
iret
cmp
retf
outs
gs
in
sub
imul
mov
mov
inc
mov
retf
icebp
mov
call
xor
lods
jbe
imul
sub
pop
sub
and
inc
retf
cmp
jbe
push
mov
stc
mov
jg
cmp
jge
popf
fs
pop
lds
lahf
xlat
sub
pop
cld
push
or
dec
call
ins
inc
arpl
fs
fstp
inc
jnp
in
xchg
lods
int
imul
inc
gs
shl
in
ds
sub
jb
cmp
adc
push
sbb
in
inc
xchg
jge
jne
dec
(bad)
data16
sub
mov
push
stos
aaa
xor
das
mov
add
or
push
imul
add
cmp
push
std
sub
cli
cmc
mov
rcr
in
sti
gs
xchg
ss
imul
cmp
jmp
add
push
jle
popa
or
mov
inc
in
push
inc
and
xchg
push
sub
in
popf
dec
lahf
repz
push
inc
and
fcom
aaa
out
jmp
inc
outs
ds
repnz
aas
(bad)
(bad)
cmp
push
jle
clc
jle
stos
jns
mov
lods
pop
mov
push
sbb
add
inc
aam
jbe
pop
mov
jmp
pop
sub
jns
shr
inc
sbb
out
jge
arpl
jb
pop
jmp
cmp
cmp
pop
xlat
adc
jns
adc
pcmpeqb
adc
mov
fistp
cwde
adc
sti
or
add
js
mov
and
in
rcl
repz
ds
pop
cmp
leave
gs
jbe
push
adc
adc
sbb
out
inc
dec
inc
ins
mov
cdq
push
lds
(bad)
cmp
xor
cmp
inc
imul
cmps
sbb
shl
jbe
inc
add
in
sbb
cmp
jle
(bad)
nop
dec
repnz
daa
or
xor
shl
ins
(bad)
in
xor
lea
add
icebp
mov
or
dec
cwde
pop
into
lea
ret
ins
xor
or
retf
(bad)
call
int
dec
aad
adc
lahf
iret
mov
lods
sub
add
repnz
and
aad
or
lds
xchg
dec
int3
mov
jl
int3
ror
imul
sbb
cwde
push
outs
dec
mov
jl
mov
in
fisttp
popf
fld
cmp
sahf
adc
jb
(bad)
jb
imul
movs
cmps
inc
test
in
jge
hlt
setnp
js
dec
cdq
add
pop
(bad)
sahf
xor
pusha
jg
fnsave
sub
test
(bad)
dec
dec
fwait
mov
jg
xor
mov
add
xchg
jle
sub
pop
and
fisubr
aad
test
xchg
call
jnp
leave
add
cmp
cmc
dec
mov
mov
jo
shl
or
mov
jae
dec
retf
cli
mov
mov
(bad)
out
sub
mov
in
jle
gs
xor
test
sbb
(bad)
(bad)
ds
scas
in
sub
cli
mov
and
cmps
lods
mov
push
cmps
sub
call
lahf
mov
(bad)
fld
das
dec
adc
sbb
sbb
push
pop
int
(bad)
xor
out
sub
shl
jae
pop
pop
leave
stos
movs
icebp
dec
mov
mov
xchg
mov
lea
xchg
frstor
add
sbb
ret
leave
in
jle
nop
out
push
pop
loopne
(bad)
popa
dec
fnstsw
in
ds
sub
adc
sbb
cmp
or
movs
pop
sub
(bad)
adc
(bad)
ror
jg
stos
aad
es
sub
xor
ret
xchg
scas
jb
sub
jge
mov
mov
cmp
mov
xchg
ret
or
sbb
repz
aam
jg
addr16
ins
mov
jp
push
movs
sub
xor
addr16
cwde
cmps
jp
push
daa
xchg
xor
dec
jne
mov
daa
imul
fwait
mov
aad
mov
cmp
cmc
shl
aaa
and
rcl
movs
rcl
jecxz
arpl
ret
aad
mov
aaa
cmp
dec
mov
call
push
cmp
and
push
jge
xor
cmc
retf
inc
inc
(bad)
loopne
jp
push
mov
and
scas
pop
es
inc
das
cmp
jmp
jle
mov
(bad)
out
repnz
cmp
fidiv
sbb
stos
test
mov
and
aaa
jae
shl
arpl
daa
mov
int
sub
pop
inc
sbb
call
stc
int3
cld
pusha
(bad)
mov
dec
cld
in
mov
mov
push
(bad)
and
retf
cld
inc
xlat
popf
shl
test
mov
ja
add
pop
or
sti
shl
pushf
jl
(bad)
fcom
mov
loope
addr16
adc
hlt
adc
retf
cmp
or
xchg
fld
push
test
test
popa
xor
push
das
call
aam
hlt
cmp
jmp
stos
pop
rcr
aad
adc
in
jne
test
jne
sub
jmp
sub
jne
fisttp
pop
dec
mov
push
inc
jns
fnstcw
cmp
repnz
xor
mov
ins
push
add
or
lds
pop
and
aaa
mov
xchg
push
pusha
mov
mov
pop
push
mov
iret
dec
jmp
sub
adc
inc
push
cmp
add
std
out
addr16
xchg
iret
pop
push
dec
scas
adc
sbb
fld
jg
mov
jo
ss
test
fdiv
gs
test
leave
xor
aaa
aaa
mov
sub
add
or
je
test
pop
xor
ucomiss
add
inc
out
loope
inc
adc
mov
pop
ret
ins
pop
cdq
cmp
mov
jp
pop
je
js
ins
mov
jle
cmp
pop
bound
stos
jp
mov
(bad)
in
pop
pop
add
repz
jne
cld
push
jnp
lock
or
mov
repz
fwait
pop
sar
leave
dec
ins
mov
sub
ins
or
imul
ror
jae
mov
nop
push
mov
mov
or
call
jp
sahf
arpl
es
mov
dec
out
add
(bad)
cdq
push
or
cmp
add
hlt
mov
cli
leave
jb
into
or
push
ud0
sbb
and
rcl
loope
fist
out
shl
lahf
xchg
add
fdiv
cmp
int
ins
out
je
movs
add
imul
or
jecxz
movs
test
dec
pop
fwait
mov
jae
dec
xor
mov
fisttp
pop
push
push
test
mov
and
and
arpl
pop
stos
jb
push
lds
call
sbb
sbb
cmp
jb
jae
sub
dec
cmc
jge
cmp
pop
push
jb
xchg
cli
clc
push
cmp
int3
jl
add
sahf
loope
pop
cwde
and
retf
mov
call
lods
addr16
js
inc
ror
cdq
sbb
inc
dec
and
pop
xor
adc
rcl
sbb
ins
arpl
pop
ror
sub
gs
out
mov
in
inc
lock
add
cmp
(bad)
sub
sbb
xor
mov
cdq
repz
mov
inc
cmp
int
dec
xor
outs
xchg
add
xor
rcr
fmul
or
push
push
mov
xchg
scas
xor
leave
ret
sbb
out
cld
xlat
add
pushf
push
or
shr
(bad)
aam
fist
cld
js
fdivr
add
and
pop
pop
jle
jbe
popa
pop
retf
jnp
arpl
xor
xchg
xor
jmp
clc
cli
xor
int
adc
nop
imul
adc
dec
mov
cmp
ficomp
pop
repnz
jns
lock
aaa
div
dec
(bad)
outs
leave
test
xor
jb
xchg
outs
push
jbe
inc
les
shr
out
dec
lea
daa
and
mov
xlat
out
stos
ret
adc
mov
fs
add
mov
add
mov
jecxz
aad
(bad)
retf
sbb
test
inc
ja
popf
jg
es
or
jp
out
jl
xor
mov
dec
cmp
fldcw
push
adc
mov
push
ss
cli
sahf
xchg
sbb
int
cmp
in
aas
cli
cmp
cmps
dec
outs
shr
mov
add
sub
jge
xchg
imul
mov
inc
xor
xor
fwait
outs
mov
ins
(bad)
arpl
sub
push
xchg
xor
xchg
xor
ds
out
shl
test
pop
test
shl
neg
jl
fcomi
mov
call
jl
mov
sub
push
fwait
mov
cwde
mov
adc
dec
ins
shl
jno
mov
adc
push
movs
pusha
ret
jg
push
mov
or
sbb
adc
xor
mov
add
dec
xchg
sbb
pop
pop
cmps
push
sbb
jnp
adc
ins
mov
pop
gs
sub
add
aad
ss
xor
sahf
icebp
lods
imul
and
and
jmp
les
or
pop
pushf
adc
les
je
sti
push
je
stc
sbb
popa
sub
into
lahf
sbb
pop
aas
lea
or
mov
mov
and
neg
push
xor
or
sti
mov
push
jne
imul
pop
xor
xchg
jle
jne
sub
adc
pop
mov
xor
fmulp
cmp
sub
jno
jbe
cmp
jb
and
mov
xor
mov
adc
pop
mov
pop
push
mov
add
add
lods
add
adc
cmp
jmp
pop
inc
jge
pop
inc
bound
outs
xor
bound
or
dec
cmova
fs
lods
in
int
dec
in
xchg
mov
sub
arpl
dec
lahf
fbstp
jecxz
test
(bad)
xchg
sub
cmp
lds
xor
jg
inc
dec
xor
aaa
fimul
cmp
fbstp
cmp
fbstp
cmp
fbstp
cmp
fbstp
cmp
fbstp
cmp
fbstp
cmp
fbstp
cmp
fbstp
cmp
fbstp
cmp
fbstp
cmp
fbstp
cmp
fbstp
cmp
fbstp
cmp
fbstp
cmp
fbstp
cmp
fbstp
cmp
fbstp
cmp
fbstp
cmp
fbstp
cmp
fbstp
cmp
fbstp
cmp
fbstp
cmp
fbstp
cmp
fbstp
cmp
fbstp
cmp
fbstp
cmp
fbstp
cmp
fbstp
cmp
fbstp
cmp
fbstp
.byte
