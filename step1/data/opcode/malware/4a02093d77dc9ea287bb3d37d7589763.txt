div
in
mov
mov
ror
add
add
sahf
int3
das
int
in
jg
shl
or
and
push
je
and
out
(bad)
(bad)
je
push
call
push
add
sub
push
ret
in
div
jne
mov
or
call
xchg
push
push
sbb
stc
out
aas
mov
test
je
cmp
mov
cmp
jae
dec
movzx
lea
jne
sbb
xor
jmp
and
neg
fidivr
and
pop
pop
mov
or
call
push
push
sar
stc
shr
jp
lock
jge
add
pop
push
push
push
push
xor
mov
mov
movs
std
in
pop
scas
cmp
inc
add
cmp
(bad)
pushf
or
push
rcr
sahf
push
mov
push
xor
fidiv
fcom
cmp
adc
mov
ret
mov
jmp
(bad)
jmp
push
jbe
adc
lea
or
lock
dec
test
jg
mov
or
add
cs
add
ret
std
imul
xchg
add
mov
pop
inc
push
adc
add
inc
fcom
rol
jo
(bad)
mov
push
mov
xor
sbb
add
push
add
aaa
fwait
mov
mov
or
data16
sbb
sar
push
lahf
add
xchg
not
and
mov
push
sub
mov
hlt
cs
jbe
xor
sbb
adc
cwde
mov
lock
pop
imul
dec
shl
in
or
jo
mov
xor
hlt
or
pop
cmps
push
repnz
in
(bad)
cmps
cmp
lea
fwait
popa
xor
push
call
sub
add
out
push
sbb
push
(bad)
loopne
xor
test
mov
lea
mov
adc
daa
mov
push
dec
or
add
iret
jbe
ret
ja
pop
xchg
sbb
fdivr
xchg
sub
ret
test
push
xchg
mov
call
add
das
or
push
dec
and
add
xchg
es
pop
(bad)
xlat
push
sbb
test
or
sbb
push
and
add
push
dec
dec
cmp
je
out
push
out
jmp
mov
mov
pop
pop
fs
pop
lods
mov
aad
add
mov
push
sub
mov
pop
push
ins
and
or
add
push
iret
bound
fidivr
inc
pop
pop
jmp
inc
lock
push
mov
cmp
or
jge
outs
push
rol
js
sti
mov
mov
xor
mov
pop
ret
arpl
xor
stos
pop
rol
pop
imul
rcr
sar
pop
inc
sub
inc
clc
sub
pop
or
xchg
es
cmp
(bad)
adc
xor
sbb
pop
cmp
cli
js
mov
cmp
jg
mov
pop
and
adc
ret
pop
dec
add
mov
pop
and
(bad)
jmp
enter
xchg
das
pop
push
sub
push
mov
sar
imul
(bad)
lea
push
cmp
ja
adc
pop
dec
clc
add
push
mov
inc
loope
adc
in
inc
(bad)
jno
xchg
adc
in
outs
int3
clc
scas
cmp
jle
mov
cmp
or
clc
loope
inc
shr
sub
or
cmp
push
inc
jle
add
pop
cdq
sub
rcl
enter
shr
iret
mov
movs
pop
cmp
or
sub
cli
cmp
mov
(bad)
push
jne
js
inc
add
xor
pop
mov
jle
add
call
jo
add
test
inc
add
(bad)
adc
lea
adc
stc
std
mov
and
(bad)
xor
into
mov
adc
cmps
push
cmps
inc
cmp
mov
cmps
mov
cld
fisubr
xlat
ja
lods
lea
stos
mov
clc
cmp
(bad)
rol
mov
mov
jge
test
jle
ins
or
cmp
mov
inc
mov
stos
pop
pop
inc
ins
cmp
loope
or
push
push
cmp
adc
outs
add
sub
repz
push
jmp
push
lea
lea
inc
push
inc
add
pop
sub
in
pop
push
cli
push
and
ret
and
sbb
outs
hlt
adc
or
jbe
inc
and
cmp
mov
cmp
and
xor
push
push
sti
rcr
hlt
das
push
out
cmp
jle
mov
inc
or
xor
cmp
je
push
cmp
cmp
jae
push
cmp
inc
and
adc
cs
or
or
add
jb
pop
adc
pop
adc
pop
leave
fwait
jle
mov
fcom
jnp
jmp
in
aaa
cmp
lock
(bad)
loop
push
push
push
rcr
sbb
or
adc
or
cmps
push
loope
add
jne
pop
nop
out
loop
loopne
cmp
jo
inc
sub
add
aaa
retf
shl
mov
inc
or
pop
or
(bad)
cmp
add
add
xor
jno
cmp
jne
push
push
push
push
xor
push
test
push
mov
mov
or
pusha
pop
pop
jle
sbb
xor
mov
daa
in
rcr
jne
cmp
retf
xchg
and
add
sub
xor
frstor
ins
mov
lock
mov
cld
pop
stc
add
out
add
sbb
fstp
mov
add
repz
test
xchg
pop
mov
and
push
je
xchg
sbb
test
cwde
ds
xchg
(bad)
loopne
in
dec
out
mov
ja
stos
or
dec
adc
je
push
adc
aas
clc
pusha
mov
push
repz
inc
xor
push
ss
push
inc
sbb
out
lea
dec
push
xor
adc
lahf
test
lea
out
jae
pop
shl
fldcw
add
add
add
jge
repnz
lea
push
dec
pop
xchg
push
cld
fist
mov
fistp
add
push
mov
jb
push
outs
dec
xor
mov
push
out
fsubr
adc
and
push
scas
push
inc
sti
add
or
test
cmp
iret
ins
push
cmp
push
push
cmp
je
shl
adc
or
(bad)
loopne
jne
imul
mov
imul
adc
fwait
or
xor
jb
ja
adc
inc
fsub
shl
xchg
cmp
mov
xchg
paddq
mov
aaa
movs
iret
xlat
mov
mov
mov
or
mov
call
arpl
cs
jno
lods
imul
xor
sub
jg
inc
dec
mov
or
cwde
in
cmp
mov
add
and
or
sub
in
mov
shr
ss
push
mov
mov
push
adc
lock
(bad)
call
sbb
int3
ret
mov
push
test
jae
and
mov
aas
pop
loopne
push
loopne
push
push
cmp
icebp
add
daa
retf
call
sub
adc
pop
inc
lods
or
enter
add
sbb
je
dec
je
push
xor
push
pop
jmp
push
adc
inc
pop
loop
sbb
movs
call
add
mov
inc
adc
push
rcl
jg
int
mov
push
mov
ins
sbb
mov
sbb
mov
inc
and
mov
jae
mov
aam
and
pushaw
pushf
pop
cmc
sub
sub
and
sub
add
xor
aam
test
pop
jle
or
mov
mov
sar
pop
or
pop
ror
xchg
and
loop
xlat
sub
retf
jmp
out
shr
sbb
fisttp
or
sub
js
and
(bad)
adc
arpl
loope
popa
add
jle
in
dec
xchg
ds
and
sbb
sar
inc
pop
xlat
and
je
(bad)
or
cmp
lea
mov
fldcw
mov
sbb
pop
movs
push
neg
pop
ds
das
adc
pop
dec
sub
adc
mov
push
sbb
or
sbb
push
adc
lahf
cmp
sbb
adc
fist
cwde
add
pop
sbb
and
add
js
xor
in
js
jl
ret
adc
jb
pop
adc
test
mov
mov
mov
(bad)
cld
cmp
jg
jne
(bad)
dec
sbb
push
cmp
enter
movs
cmp
les
or
and
nop
into
or
mov
je
inc
mov
icebp
into
scas
mov
dec
or
or
push
data16
sbb
dec
mov
pop
pop
pushf
sub
pushf
sbb
pop
aas
push
and
inc
and
or
push
jo
int
in
jae
bound
cdq
adc
out
in
sahf
adc
je
scas
jnp
mov
adc
lahf
xor
jbe
pop
ret
lahf
mov
ins
jnp
pop
aaa
push
push
or
mov
xor
dec
sub
fmul
sub
popa
xor
xchg
xor
data16
push
(bad)
div
call
or
je
and
mov
out
scas
mov
int3
sbb
jmp
mov
mov
pusha
push
call
jo
jne
push
ret
das
pop
add
pusha
add
and
in
aaa
sbb
push
dec
mov
lods
mov
jnp
add
pusha
jp
push
in
mov
adc
ins
movs
sbb
pop
repnz
je
jbe
in
sub
in
rol
daa
jo
scas
and
or
xchg
xor
test
lds
repnz
ds
pop
pop
jmp
sub
popa
jmp
mov
xchg
mov
push
xor
mov
pop
aas
aam
jge
dec
inc
(bad)
and
fisub
xchg
xchg
je
out
out
add
push
push
add
ins
cmp
jb
lock
bswap
scas
mov
scas
adc
mov
(bad)
(bad)
mov
and
push
je
icebp
bound
adc
xchg
in
push
and
push
(bad)
fild
or
frstor
add
add
add
fld
pusha
mov
test
mov
inc
or
and
test
add
in
sbb
jo
xor
or
push
mov
jmp
jmp
sub
mov
push
(bad)
lock
pop
push
sbb
neg
sbb
pop
les
ret
je
push
inc
out
loop
in
and
mov
gs
sub
mov
enter
cwde
sahf
inc
and
fs
mov
dec
mov
mov
imul
loopne
xor
in
pop
push
add
adc
push
jb
or
sbb
add
mov
cmp
xchg
pop
mov
add
jge
pop
inc
jecxz
dec
inc
outs
mov
in
(bad)
das
sar
sbb
sub
xor
sbb
sub
mov
test
(bad)
fcom
dec
jo
xchg
mul
mov
shl
loopne
jo
cmp
movs
sar
js
mov
adc
pop
adc
push
mov
xor
cmp
cmp
rcl
xchg
rcl
ret
les
pushf
pushf
leave
jae
gs
mov
mov
xchg
dec
mov
xchg
sbb
xchg
xchg
sbb
push
test
mov
xchg
int3
clc
arpl
ret
sbb
leave
enter
ror
cmp
sbb
shl
sub
ret
sbb
dec
jnp
mov
mov
dec
leave
jae
mov
sub
test
push
test
add
test
jle
pop
pop
pusha
inc
xor
and
ins
inc
ja
and
cmp
test
loope
hlt
shr
add
mov
inc
iret
and
cwde
sub
jo
inc
sbb
call
test
push
or
dec
pop
mov
es
push
ficomp
push
loop
jnp
and
cs
push
xor
sbb
and
add
ret
xor
add
call
pop
add
enter
or
jle
lahf
cmp
mov
in
add
test
and
outs
and
ficomp
inc
sbb
movs
and
push
aaa
adc
dec
sbb
or
pop
push
mov
mov
mov
jae
or
cld
sar
sbb
ret
lods
pop
test
cwde
sub
retf
xchg
and
std
and
adc
adc
pop
daa
add
sbb
fsub
adc
add
cwde
mov
mov
cmp
and
push
pop
push
jmp
popa
mov
ret
push
or
mov
fiadd
adc
or
sbb
adc
movs
(bad)
adc
xor
mov
ins
pop
sbb
push
sbb
fst
scas
and
jl
(bad)
and
enter
or
adc
sbb
jecxz
pop
dec
push
dec
mov
in
mov
nop
aaa
xchg
xchg
add
adc
test
sbb
inc
adc
adc
movs
jno
mov
stc
loope
add
inc
xchg
mov
adc
cmp
aaa
pop
inc
adc
xchg
adc
sub
push
cmc
mov
push
sbb
push
nop
imul
retf
xor
push
and
iret
sbb
sbb
aas
loop
add
inc
jne
shl
jno
jb
mov
test
enter
sbb
movs
dec
out
call
xchg
mov
loopne
dec
jo
lea
mov
sbb
call
fbld
das
jne
push
pushf
pop
nop
pop
xlat
sbb
shrd
popa
test
(bad)
outs
jg
cmp
je
or
je
xor
push
push
or
push
mov
adc
xchg
mov
pushw
mov
mov
xchg
inc
xchg
and
pop
loopne
das
jecxz
daa
add
inc
ret
or
inc
pop
add
mov
mov
add
test
mov
dec
in
retf
xor
and
sbb
lock
cmp
add
sti
cmp
je
push
push
pop
jmp
test
xchg
add
mov
sub
inc
mov
mov
clc
adc
and
shr
pop
mov
xor
jmp
dec
cmp
sub
mov
mov
xchg
ins
push
sar
and
stc
sahf
sub
sub
or
bound
inc
xlat
in
add
popa
and
sub
sub
pushf
fstp
add
movs
std
div
fadd
cmp
neg
aas
rcr
inc
inc
xchg
inc
mov
cmc
pusha
shr
test
sbb
(bad)
loopne
push
fdiv
jns
inc
stc
scas
sub
pop
bswap
pop
test
sub
sub
pop
leave
aam
inc
imul
cwde
lods
jno
ss
je
sbb
inc
retf
ret
test
cmp
cmp
or
mov
fstp
cmp
push
stos
add
adc
jb
pop
add
xor
clc
push
ins
push
daa
movs
xor
test
pop
ins
adc
push
lods
mov
mov
sub
pop
stos
jo
fsub
jne
jo
out
pop
and
pop
xor
xchg
lahf
mov
inc
sbb
arpl
dec
adc
inc
ret
jecxz
retf
push
push
or
sub
pop
adc
push
add
test
test
adc
mov
mov
enter
push
push
cld
sbb
sti
lahf
mov
adc
add
pop
cmp
add
or
adc
xor
push
sahf
xor
and
add
mov
hlt
sbb
sub
nop
neg
inc
mov
jo
push
enter
int3
ds
lds
lea
pop
xchg
add
sub
push
jnp
fidiv
dec
xlat
test
xor
dec
push
mov
fsub
rol
aad
imul
sub
inc
repnz
cmp
mov
and
xor
stc
pop
pop
and
dec
dec
xor
ficom
cmp
cmps
cmp
mov
repnz
sub
rcl
and
sbb
jne
and
enter
and
xor
and
lods
rcl
nop
inc
(bad)
in
xchg
or
ds
cmp
push
jl
jne
bound
pushf
dec
inc
inc
adc
ds
popf
fstp
ror
dec
mov
mov
push
or
xchg
pop
icebp
pop
dec
les
adc
dec
stos
xchg
(bad)
(bad)
adc
push
push
mov
sub
mov
loop
add
in
and
(bad)
adc
sub
ret
push
je
nop
sub
adc
les
rcl
cmp
add
iret
sbb
push
mov
mov
dec
sbb
outs
loopne
sbb
(bad)
(bad)
fld
sti
cmp
jae
jne
push
sub
xlat
ret
call
sub
fisttp
jne
inc
adc
or
in
gs
or
jmp
cmp
push
mov
nop
out
adc
pusha
cmp
(bad)
loope
nop
sbb
mov
jmp
mov
clc
cmp
daa
fs
push
loopne
and
push
shr
push
outs
scas
push
dec
retf
add
inc
das
xchg
sti
sub
inc
repz
out
jge
and
xchg
or
enter
or
retf
jo
inc
mov
cmp
mov
test
pusha
xchg
push
les
jge
jo
and
cmp
out
jo
xor
daa
dec
rcl
sbb
mov
xor
mul
dec
xchg
jo
inc
xchg
add
pop
or
setne
or
dec
or
(bad)
mov
rcr
into
add
icebp
(bad)
aaa
arpl
adc
pop
out
jne
or
je
sub
fadd
mov
in
sti
loopne
je
loope
jg
inc
das
adc
mov
or
in
sbb
push
inc
fadd
jl
test
dec
push
pop
pop
sub
jo
test
mov
lods
cmp
lock
fsubrp
out
xchg
or
xchg
cmp
fsub
add
call
neg
test
imul
sub
repz
je
cli
pop
ror
dec
sar
inc
mov
pop
jns
sbb
fsub
push
out
inc
out
loopne
cld
inc
test
and
or
(bad)
nop
inc
aas
fnstenv
imul
lock
or
loopne
lods
sbb
cld
or
mov
push
pop
or
push
or
jg
scas
fdiv
add
or
enter
add
int3
add
mov
or
es
fisubr
jle
push
fdivr
or
sub
call
dec
xchg
call
mov
add
mov
jnp
lock
dec
inc
sbb
je
sub
jle
cld
out
jmp
jge
imul
cmc
jbe
push
xor
jmp
mov
xor
int3
int
mov
mov
xchg
int3
test
push
sbb
in
icebp
inc
xor
xor
fst
inc
sbb
mov
lea
rol
mov
mov
inc
hlt
xor
inc
mov
mov
jle
push
dec
cmp
adc
push
pavgw
ret
jle
call
in
sbb
lock
push
mov
or
mov
shl
in
paddusb
cmp
pop
fild
mov
push
push
add
pmulhw
mov
jbe
pop
clc
add
inc
sbb
sbb
movs
adc
fcomp
sub
mov
stos
ins
std
adc
sbb
dec
test
pop
lea
rol
sub
or
cmp
push
push
jne
aaa
or
rcr
pop
dec
xor
mov
in
inc
(bad)
xchg
in
cmp
inc
ficomp
cld
test
sbb
or
mov
imul
or
sbb
add
mov
or
xor
push
push
add
pop
jmp
or
inc
pop
or
cmp
std
popa
xor
add
mov
das
jle
popa
cmp
inc
nop
es
dec
xor
push
imul
pop
fmul
jp
fcomp
movs
adc
add
pop
sar
(bad)
in
loopne
pop
cld
loopne
or
add
test
lds
lahf
call
into
sar
aam
enter
test
or
rcr
push
nop
or
push
cmove
or
cmp
push
push
in
add
cmp
sbb
mov
cmp
cli
in
mov
push
ror
mov
ret
or
in
adc
scas
in
mov
push
push
in
sbb
inc
mov
scas
sbb
or
jno
test
nop
adc
and
add
cmp
test
shrd
rcr
jb
push
pop
push
push
call
and
fist
ror
test
mov
mov
pop
(bad)
daa
mul
mov
rcl
dec
or
cmp
jge
out
(bad)
clc
sub
mov
mov
out
or
push
jge
in
arpl
and
pop
arpl
xor
pop
or
sbb
(bad)
pop
lock
(bad)
loopne
mov
cmp
add
and
and
das
sub
adc
mov
mov
jbe
in
mov
int3
pop
cmp
fxch
rcl
sbb
jl
adc
pushf
xor
in
mov
fbstp
rol
(bad)
je
inc
in
fdivr
push
call
mov
inc
shr
movzx
push
adc
push
ret
push
jo
(bad)
ffreep
push
es
add
je
loope
cmps
jle
(bad)
jbe
dec
test
gs
nop
sbb
inc
add
push
mov
push
or
gs
or
jg
sub
jb
xor
int
out
push
loopne
pop
or
add
mov
push
sbb
xor
fisub
push
jmp
scas
sti
jle
push
add
lahf
nop
lods
adc
push
push
mov
cmp
jg
mov
xchg
icebp
int
adc
jae
enter
cmp
(bad)
std
sbb
scas
mov
aad
js
pop
and
test
xor
fld
xchg
jno
outs
ds
lea
and
outs
sub
sbb
sub
call
mov
push
jne
inc
sub
loop
jo
push
ret
push
pop
jmp
mov
popa
xor
lods
push
cmp
mov
and
cmp
je
stos
mov
in
in
add
fcomp
shr
cld
jne
fdivr
push
push
test
adc
lock
sbb
or
xor
clc
add
inc
cmp
jae
mov
hlt
lea
movs
jp
dec
ja
dec
add
sub
je
push
mov
je
add
mov
outs
push
sub
fcomp
hlt
sub
imul
add
adc
ret
jl
in
cmp
jg
push
push
push
inc
js
push
pop
cmp
inc
and
jbe
xlat
sar
(bad)
(bad)
into
popa
nop
add
mov
loopne
push
pop
xor
adc
call
lea
jmp
cmp
loopne
sub
add
xor
jo
fnstcw
jb
mov
mov
rol
mov
mov
push
sub
inc
js
or
cli
xchg
adc
out
ret
cmp
cmps
hlt
pop
pop
xor
inc
xchg
je
test
js
inc
dec
hlt
aaa
cmp
fidivr
hlt
or
and
sub
pop
mov
dec
push
inc
inc
dec
rcl
jge
jmp
dec
inc
cmp
push
mov
ins
sbb
in
out
fdiv
pop
push
push
mov
sbb
xor
cwde
dec
mov
ins
sbb
(bad)
fdivp
add
pop
push
push
mov
idiv
cmp
jl
repz
jmp
or
and
pop
cmp
xlat
das
(bad)
xor
ret
inc
mov
inc
or
cmp
jbe
mov
mov
test
pop
or
xchg
bound
xlat
push
sub
mov
push
stc
jns
lods
sar
push
mov
push
and
add
or
jle
ret
je
mov
imul
lock
aaa
jmp
xor
movs
push
dec
fidivr
sbb
or
fstp
pop
cmp
mov
or
add
jne
or
sbb
sub
jle
push
call
jl
xchg
jecxz
sti
test
dec
sbb
mov
mov
sbb
ret
je
push
pop
(bad)
pop
and
xor
mov
mov
(bad)
jae
jb
jmp
mov
ret
and
adc
mov
xchg
jmp
or
jbe
jb
(bad)
mov
icebp
scas
fs
jne
cmp
je
jbe
mov
xor
lods
std
or
or
and
sbb
icebp
add
cmp
test
add
out
les
xlat
imul
daa
push
pop
and
setne
shr
ret
jne
pop
jo
pop
in
xchg
cld
add
fiadd
jne
adc
ds
aam
add
jo
jg
jo
prefetch
xchg
das
or
es
into
push
cmc
jmp
test
or
sbb
push
adc
add
sub
jp
shl
aad
mov
(bad)
js
push
leave
(bad)
(bad)
inc
retf
jmp
call
bnd
ror
(bad)
cmp
jmp
mov
dec
adc
daa
sahf
jmp
cmp
push
test
mov
imul
cld
ficom
sub
push
push
jmp
sbb
pop
sti
adc
rol
pop
rol
add
scas
sbb
inc
push
mov
(bad)
lock
pop
nop
mov
sub
inc
mov
add
call
je
das
test
push
xchg
dec
jno
mov
loopne
enter
jl
add
ins
cld
cmp
(bad)
ret
dec
push
add
push
test
lds
pop
push
dec
cld
ror
push
(bad)
pop
popf
mov
enter
add
std
push
mov
call
sub
dec
enter
movs
xchg
xor
sub
imul
push
and
cmp
fld
mov
sahf
fsub
sub
pop
push
adc
pop
enter
xlat
jecxz
sbb
ins
icebp
inc
rol
shl
in
shl
mov
cmp
jp
fdiv
push
adc
shr
pop
sbb
push
push
imul
sub
push
add
aas
lods
jo
xchg
dec
ret
outs
dec
mov
adc
lods
sbb
inc
mov
lds
sbb
mov
in
push
sub
les
push
ss
sub
push
in
ins
fld
lods
sub
mov
xlat
and
enter
mov
and
aad
jo
es
sub
jl
push
jno
cmovl
pop
dec
scas
jecxz
dec
xchg
call
sbb
cmps
jb
sbb
fsubr
enter
or
test
pushf
mov
dec
leave
inc
jo
fnstcw
into
or
adc
jb
leave
les
adc
imul
test
stos
out
or
mov
push
sbb
xchg
xor
pop
and
xlat
or
sbb
add
xchg
sub
stos
adc
jmp
je
add
movs
das
jmp
in
or
outs
and
jns
mov
or
push
enter
icebp
mov
or
inc
mov
rcl
mov
dec
push
adc
pop
mov
call
jne
pop
add
inc
bound
xor
fwait
hlt
cmp
xchg
dec
mov
push
mov
jns
xor
push
and
mov
push
push
sub
add
cmpps
das
cwde
jl
test
pop
bound
in
push
stos
lock
xor
pop
je
sbb
mov
mov
sbb
push
adc
cmp
jg
adc
in
jns
add
dec
addr16
xor
push
lea
mov
add
or
mov
lods
xor
scas
jno
lahf
rcr
add
pop
pop
cmps
mov
mov
in
sbb
add
or
jns
ins
fdivr
popf
pop
daa
js
adc
dec
cmp
pop
lea
addr16
test
shl
imul
and
and
sbb
rcr
sbb
sbb
sbb
jne
cmp
push
sbb
sub
outs
push
push
stos
pop
xor
xchg
mov
mov
and
adc
ja
xchg
not
stc
movups
and
out
push
cmp
popf
cmp
outs
inc
push
mov
push
cdq
clc
cmp
ret
jne
mov
add
cmp
mov
jle
push
xchg
jmp
loop
stos
sbb
and
sti
lods
dec
and
ret
xchg
arpl
pop
lods
push
dec
pushf
push
jbe
ficom
jmp
cmp
cmp
fucomip
sub
jne
sub
dec
je
mov
adc
in
jge
adc
push
retf
ss
jge
(bad)
cmp
jmp
mov
mov
and
inc
ror
leave
jmp
fiadd
cmp
push
jecxz
jne
out
popa
hlt
or
jmp
push
add
push
mov
xor
pop
or
and
cld
pop
inc
add
mov
mov
retf
sti
div
or
pop
push
mov
xor
dec
icebp
mov
mov
dec
mov
loop
loopne
push
or
push
imul
push
js
sub
jbe
pop
jbe
mov
fcomp
or
int3
sub
mov
rol
jmp
cmp
je
cmp
ficomp
push
pop
lahf
jmp
inc
sbb
leave
adc
repz
call
cmps
sbb
fstp
mov
cmp
jmp
(bad)
sbb
addr16
cmp
sbb
je
arpl
pop
(bad)
or
sbb
jge
in
inc
(bad)
into
pop
push
aaa
push
inc
push
push
out
sahf
out
jnp
ret
in
add
jns
cmc
xchg
pushf
cmps
(bad)
fcomp
mov
inc
sbb
mov
mov
add
data16
mov
sub
or
xchg
push
mov
lea
adc
xchg
out
(bad)
fwait
sub
mov
fadd
push
test
add
out
push
int
mov
sbb
xchg
pop
jge
(bad)
mul
cmp
push
dec
push
mov
das
push
lea
push
lea
push
push
push
push
add
push
lea
fs
(bad)
dec
cmp
cmp
adc
mov
inc
test
lods
add
dec
or
or
adc
pop
mov
dec
call
add
xor
mov
ins
sbb
mov
imul
lea
aam
sbb
push
xchg
das
imul
cmp
add
jl
inc
xor
add
into
sub
push
xor
pop
inc
mov
inc
push
push
and
push
fidiv
mov
add
mov
add
mov
cmp
push
not
jmp
mov
pusha
and
mov
push
jbe
ins
jne
mov
add
xor
jne
mov
pop
jne
push
add
ret
data16
jns
inc
add
xchg
adc
test
push
repz
imul
dec
cmp
sub
movs
in
in
xchg
dec
sar
ret
out
in
dec
and
add
or
mov
movs
push
cli
loop
lea
neg
push
int
test
js
repz
dec
bound
push
cmp
sbb
sbb
jl
xchg
xchg
sbb
pop
xchg
adc
mov
lea
jl
call
adc
mov
ret
or
push
push
xor
popa
push
loopne
jecxz
push
xchg
pop
mov
popa
aam
push
aam
das
in
jb
mov
ds
mov
add
fcom
bound
dec
fild
cmp
rcr
loopne
add
dec
shl
cmps
(bad)
nop
xchg
aam
pop
movs
jmp
mov
sub
inc
scas
xor
adc
xchg
cmps
int3
cmp
jne
push
sub
xor
inc
sar
pop
clc
js
sti
stos
adc
je
lea
push
loopne
adc
pop
rol
mov
jo
ret
pop
add
sbb
cmp
fdivr
call
push
or
adc
pop
shr
cmp
ror
xor
push
les
inc
push
mov
lock
lods
movd
lea
dec
push
push
sbb
cmp
fidivr
pop
xchg
or
in
dec
jmp
sub
dec
sub
in
cmp
push
mov
add
mov
shl
add
inc
inc
dec
cmp
scas
xchg
clc
dec
adc
xor
mov
lds
push
mov
cmp
vpunpckhwd
ins
repnz
sub
inc
rcr
pop
dec
in
dec
sbb
mov
cmp
or
lea
and
mov
add
and
dec
ins
xor
into
in
and
dec
out
ins
shl
cmp
push
push
mov
neg
pop
adc
dec
dec
popf
jp
fimul
leave
and
jbe
loope
push
push
out
cmp
out
ja
adc
mov
push
out
enter
enter
mov
sub
xlat
adc
mov
scas
add
sbb
punpckhdq
push
lods
mov
and
adc
aaa
and
dec
(bad)
jae
push
ret
test
clc
daa
xchg
pop
pop
loopne
fmul
push
dec
das
sbb
jl
in
pop
jmp
pop
mov
icebp
jg
fwait
enter
cmp
jne
push
out
loopne
pop
or
push
or
adc
je
xor
mov
outs
cld
adc
add
adc
and
mov
ret
add
inc
adc
inc
shl
xchg
(bad)
sub
sti
je
cmp
xor
(bad)
sbb
mov
jno
add
pop
adc
or
mov
mov
xchg
in
inc
push
int
push
or
xor
jg
push
jne
mov
jmp
cmp
jne
cmps
enter
movs
fldz
xor
sub
popa
push
push
mov
loope
stc
ins
dec
aas
mov
cmp
mov
push
ins
inc
pop
ja
mov
sub
cmp
xchg
test
sbb
lock
scas
sti
or
test
and
test
int3
mov
mov
mov
pop
sti
push
push
dec
or
adc
xor
(bad)
push
stos
push
mov
adc
fcom
(bad)
sbb
push
nop
pop
cmp
iret
push
adc
enter
(bad)
or
sub
in
movs
out
mov
mov
jl
adc
pusha
xchg
scas
mov
mov
adc
dec
rcl
adc
adc
retf
xor
sbb
push
cmps
adc
lea
and
ss
xor
mov
push
mov
push
jbe
jno
call
push
retf
out
ja
jl
xchg
and
mov
sbb
mov
xchg
out
dec
imul
mov
test
mov
out
call
aaa
pop
inc
ficomp
mov
ror
inc
cmp
mov
fmul
ins
cmps
mov
int3
dec
add
pop
je
push
aaa
movs
or
cmp
or
ja
jl
cdq
cli
jno
cdq
mov
idiv
out
and
pop
pop
out
add
jno
ins
inc
sbb
arpl
in
cmp
js
ds
pusha
ror
fstp
and
push
cmp
je
or
adc
or
call
and
iret
dec
or
rcl
cmc
jmp
mov
mov
xor
ror
cmp
cmp
dec
rcl
lea
(bad)
cld
clc
push
jle
add
and
cmp
cmp
cmp
neg
push
add
push
jne
cs
sub
push
sahf
std
aad
push
mov
adc
sbb
stos
mul
push
ins
repz
mov
jmp
fisubr
add
stos
add
push
cli
or
push
sub
push
push
popa
cs
push
test
movs
mov
xor
push
sbb
push
sub
jecxz
mov
jl
xlat
sbb
in
loope
or
out
jo
into
inc
sub
ins
mov
ins
xor
or
sub
sbb
add
and
popf
mov
jl
push
cld
inc
clc
mov
cdq
mov
lea
push
sti
js
dec
or
or
shl
add
cmp
jge
ds
daa
les
(bad)
idiv
push
mov
mov
jno
aam
mov
ret
xor
idiv
not
adc
add
(bad)
std
test
jg
mov
sbb
jg
push
jmp
lds
scas
mov
test
xor
sub
scas
aas
out
jge
add
adc
push
pop
lock
lahf
mov
or
out
dec
fstp
push
pop
add
xor
sti
sub
rcr
jge
je
out
sbb
test
out
movs
mov
add
fisttp
fiadd
movs
daa
pusha
js
sti
ds
jg
scas
jnp
dec
fs
or
xchg
arpl
mov
leave
jle
cmp
xor
sub
neg
pushf
mov
push
inc
lahf
mov
inc
jmp
jl
push
adc
sub
cmp
jmp
dec
nop
or
out
jp
into
test
jle
pop
sub
hlt
mov
test
jns
cld
(bad)
mov
inc
add
xor
xor
mov
fdivrp
movs
mov
sub
mov
jmp
sbb
pop
add
les
cmp
add
push
lods
mov
cmp
cld
mov
je
into
clc
fidiv
jmp
push
xchg
cmp
rol
(bad)
fstp
(bad)
cmc
push
pop
mov
pop
jne
pop
pop
mov
clc
mov
push
cmp
mov
mov
xor
push
inc
mov
(bad)
add
imul
retf
ror
cld
inc
hlt
adc
lea
adc
adc
sub
in
jne
push
gs
bound
out
sub
xor
in
inc
pop
and
aad
cmp
sbb
loopne
or
push
cmc
bound
out
push
pop
pop
push
sub
jecxz
and
jle
lds
pusha
cs
scas
push
stos
sub
ret
push
mov
add
call
push
and
cdq
add
int3
pushf
push
push
test
or
push
and
mov
fxch
adc
int
sbb
loope
rcr
or
iret
addr16
dec
jns
and
cmp
clc
loope
mov
inc
jne
sti
sub
lds
adc
mov
push
les
jmp
punpckhdq
leave
adc
jno
test
add
add
add
(bad)
xchg
push
popf
int
mov
lea
push
mov
push
loope
mov
pop
in
dec
and
mov
push
lods
das
add
hlt
jno
sar
mov
push
adc
pop
adc
fcmovbe
iret
js
and
and
shl
adc
(bad)
push
add
cmps
jle
add
imul
pop
mov
sub
mov
mov
or
add
pop
nop
dec
outs
scas
sbb
push
pop
push
xchg
sbb
mov
mov
ds
nop
adc
fs
cli
xchg
int3
push
push
pop
in
pusha
cmp
out
pop
popf
dec
daa
add
stc
sbb
jl
aad
sbb
dec
and
lds
inc
push
icebp
(bad)
in
cmp
jge
or
and
fs
scas
mov
push
jbe
push
and
shl
sub
aas
outs
add
xor
inc
inc
push
add
inc
jae
inc
sub
clc
push
sub
clc
setb
test
daa
add
mov
cmp
jo
movs
(bad)
je
xor
dec
adc
data16
pop
or
mov
lods
aaa
adc
jle
loopne
icebp
sub
or
out
mov
pop
inc
add
push
xor
cld
mov
dec
dec
mov
jo
adc
pop
push
push
hlt
jo
(bad)
add
jecxz
sub
add
mov
fst
add
shr
inc
scas
sbb
das
push
scas
xchg
enter
int
xchg
popf
or
stc
inc
bound
sbb
sbb
sbb
push
in
pop
or
pop
xor
popa
sub
pusha
sbb
bound
mov
fisub
mov
mov
inc
inc
in
aas
jmp
test
push
or
add
adc
arpl
mov
popa
cld
mov
dec
jl
je
and
add
or
lock
push
pop
adc
mov
pop
or
jg
inc
xor
adc
xchg
push
push
push
add
jmp
mov
sub
mov
jnp
xchg
jo
add
mov
idiv
aam
mov
and
(bad)
jb
inc
aaa
adc
xchg
xor
jmp
rol
xor
cmc
xchg
push
add
push
out
adc
push
shl
icebp
and
pop
push
and
enter
and
dec
fwait
popf
or
or
push
imul
ins
aam
lock
or
aam
mov
jp
lods
inc
mov
jae
imul
mov
sbb
stos
pusha
sar
sbb
sbb
xor
mov
test
dec
in
call
jo
or
xor
mov
fcmovbe
mov
sbb
mov
adc
push
sbb
out
pop
push
push
mov
pusha
das
call
jo
mov
push
popa
cmp
xchg
loope
aam
and
pop
cmps
jo
cmp
fsubr
in
mov
pop
push
push
outs
sbb
jmp
sti
dec
jnp
mov
mov
scas
adc
int3
jp
or
push
cmps
pop
fs
fcom
dec
cmps
adc
ja
add
push
cmp
(bad)
mov
shr
push
mov
add
and
dec
jae
cmp
sbb
xchg
sub
test
(bad)
or
jne
mov
outs
pop
je
out
cmps
loopne
arpl
sbb
xchg
mov
(bad)
pop
push
push
retf
mov
shl
jmp
enter
and
dec
cmp
mov
add
addr16
arpl
ret
je
call
fidivr
test
je
stc
mov
push
dec
mov
jmp
dec
mov
sub
and
mov
call
dec
add
jo
pusha
inc
xor
movs
stos
add
shl
mov
or
fmulp
js
out
std
(bad)
cmp
jge
mov
mov
mov
cmp
sbb
push
add
or
push
pusha
jle
call
sub
(bad)
fcom
or
push
sahf
or
fsubr
sbb
popf
fwait
and
jns
fdivr
out
je
xchg
data16
pop
mov
sbb
mov
jno
or
stos
shl
test
into
cmp
xchg
iret
and
add
jo
sub
cld
inc
cmp
sete
adc
loope
adc
inc
sbb
adc
push
ret
mov
mov
jo
jp
jno
shr
mov
or
jno
sbb
and
add
sub
bnd
and
fwait
mov
popf
xor
loopne
add
sbb
mov
int3
imul
xchg
mov
pop
push
pop
sbb
sar
pop
cmp
lods
pop
(bad)
dec
ror
jae
add
sti
push
dec
lock
mov
ret
mov
add
ror
xchg
push
in
sbb
imul
(bad)
outs
mov
movs
ss
sbb
call
cld
fnstsw
ins
dec
sub
push
iret
ss
lods
aad
fdiv
push
and
push
sbb
push
xchg
push
or
mov
bound
mov
mov
or
mov
adc
inc
outs
mov
enter
jne
in
rol
pop
pop
adc
loopne
sbb
clc
mov
fmul
mov
call
test
test
in
call
ja
fdiv
in
sbb
sbb
clc
push
mov
sub
jns
pop
pop
(bad)
arpl
and
or
je
movs
imul
xchg
lock
ins
sti
cmps
cmp
je
dec
xchg
mov
idiv
(bad)
adc
mov
daa
xor
ins
shl
shl
jg
adc
jbe
cs
jb
xchg
or
mov
in
push
lds
xlat
sbb
cmps
adc
pop
inc
clc
adc
add
clc
sub
inc
mov
cmp
das
xor
xor
hlt
add
and
mov
push
dec
push
push
xor
mov
xor
retf
push
add
add
cmp
pop
clc
dec
xchg
nop
jb
jnp
adc
lods
hlt
das
mov
cmp
jmp
das
hlt
dec
jo
outs
mov
out
or
in
sub
add
into
push
push
add
push
outs
or
or
jp
loopne
gs
adc
dec
dec
push
in
imul
mov
mov
jl
mov
jbe
xor
rcr
sbb
sub
jg
mov
addr16
aam
loope
and
ret
lahf
std
mov
aad
xor
dec
aas
or
sub
xor
jbe
or
mov
sbb
push
add
clc
(bad)
sbb
out
mov
pop
daa
pop
push
mov
js
mov
adc
inc
inc
repz
xor
xor
push
jg
icebp
fwait
or
jbe
movzx
adc
add
xor
pop
test
lea
push
jl
mov
in
push
rcl
in
pusha
gs
sbb
cmp
jbe
pop
push
mov
hlt
mov
add
adc
add
jo
and
jmp
cmp
add
xor
sti
mov
inc
push
push
fisttp
in
lods
xor
sbb
push
mov
pop
rol
mov
int3
sub
rcr
mov
add
inc
cmp
pop
xchg
adc
pop
mov
push
retw
add
push
lods
lea
and
mov
jne
xchg
xor
push
sub
shl
pop
jmp
adc
cdq
(bad)
(bad)
mov
xchg
push
aam
inc
arpl
push
cmp
or
sub
sub
mov
ja
sbb
lock
cmps
add
(bad)
mov
jo
scas
mov
jle
or
pop
pop
push
es
push
mov
mov
dec
bsr
push
inc
stc
xchg
dec
sub
enter
sub
pop
and
data16
push
mov
dec
and
xor
push
xchg
inc
(bad)
push
cmp
imul
cmp
jns
sbb
xchg
nop
fisttp
aaa
jns
popf
call
push
mov
fstp
cmp
mov
add
enter
cmp
fadd
mov
lods
jmp
or
and
add
sub
lock
push
sahf
int3
jmp
mov
jb
js
add
dec
fs
adc
shl
add
add
lea
dec
jnp
js
inc
ins
xchg
shr
aad
inc
sbb
shr
add
sbb
call
iret
pusha
pusha
xchg
mov
mov
mov
sbb
mov
sbb
mov
in
cmp
les
das
sub
aas
xor
jns
cmp
jmp
pop
neg
xlat
xchg
sub
pop
daa
cdq
add
push
adc
sahf
dec
pop
push
int
les
test
adc
scas
ret
pushf
into
mov
cs
jmp
cmp
jg
inc
mul
jo
leave
cmp
jo
fwait
add
rol
xor
fnstenv
retf
adc
(bad)
sbb
pop
sub
add
xchg
inc
mov
pop
(bad)
push
stos
dec
shr
pop
ins
add
add
pop
and
cmps
add
outs
cwde
adc
sbb
in
in
jmp
pop
in
mov
pop
ds
add
nop
add
push
stc
jmp
add
dec
xor
daa
cmp
push
pop
fld
add
in
scas
dec
call
adc
out
mov
or
(bad)
fidivr
ret
adc
inc
or
call
mov
retf
and
sub
mov
jp
push
cwde
push
test
cwde
xor
stc
(bad)
popf
sub
lea
test
add
mov
nop
push
sub
pop
or
adc
mov
nop
cmps
lea
jmp
mov
xor
cmovle
dec
js
jge
iret
mov
jae
sbb
test
fwait
mov
out
clc
inc
pushf
push
setne
sahf
push
sub
retf
jns
or
fs
push
push
pusha
daa
in
mov
repnz
add
mov
sbb
mov
push
push
jno
push
and
loop
leave
lea
and
sbb
xchg
or
and
or
add
test
push
push
inc
add
addr16
push
scas
mov
mov
xor
popa
fist
jb
adc
or
sbb
jns
xadd
sbb
mov
cld
cli
stos
(bad)
push
add
mov
push
mov
stos
or
xor
shl
popf
push
ror
pop
xchg
cmp
in
shr
cld
dec
pop
ret
adc
popa
(bad)
push
das
adc
jmp
sbb
fist
or
loope
pop
int3
imul
pop
shl
call
test
inc
xchg
sbb
cmp
pusha
pop
inc
xchg
loope
lods
xchg
scas
mov
outs
out
bound
clc
out
mov
mov
pop
or
loopne
add
in
push
hlt
add
lea
loope
pusha
or
jecxz
in
retf
and
jge
ds
push
mov
adc
mov
push
(bad)
pushf
(bad)
mov
mov
adc
and
leave
popf
push
xor
stos
sbb
push
xchg
mov
push
dec
rcl
xor
scas
or
dec
call
pop
loope
dec
or
push
fnstsw
mov
sbb
ror
shl
or
jb
and
xor
nop
or
test
sbb
rol
push
les
adc
mov
es
fwait
xor
xchg
inc
xor
push
mov
mov
inc
or
xor
add
pop
(bad)
fidiv
js
sahf
jnp
movzx
jbe
add
mov
ss
ret
mov
mov
repnz
(bad)
int3
lods
xor
cmp
xchg
mov
add
cmp
add
ror
push
mov
(bad)
faddp
or
leave
sahf
xchg
ror
or
xchg
mov
push
and
pop
push
repnz
mov
add
cmp
outs
pop
test
fs
jp
or
xchg
fs
and
aad
lock
dec
push
stos
rcr
mov
cmp
xchg
ret
sbb
out
cmp
fucomp
aas
movs
fdivr
fucomip
add
imul
push
sbb
(bad)
adc
xchg
(bad)
mov
fmul
inc
ins
movs
jbe
and
push
movd
push
in
jae
adc
or
xchg
pushfw
mov
push
add
lea
fs
mov
cwde
pop
enter
mov
mov
in
(bad)
push
arpl
mov
loopne
cmps
jnp
aaa
(bad)
pop
mov
mov
cmp
fcmovne
xchg
je
mov
mov
pop
ja
mov
fdivr
ins
sub
fstp
and
mov
or
add
jmp
test
jae
fs
add
rol
or
or
inc
retf
jnp
dec
jbe
mov
icebp
inc
mov
inc
inc
mov
cld
add
inc
out
cwde
das
ss
xchg
rol
std
das
aam
gs
dec
cmp
retf
jmp
push
(bad)
add
ss
inc
or
cmps
add
adc
push
inc
jecxz
popa
into
pop
ja
das
add
data16
lea
cwde
dec
loop
fstp
(bad)
enter
push
outs
repnz
cdq
gs
mov
push
and
scas
outs
cmp
pop
ds
and
cld
dec
jnp
ret
dec
and
retf
out
loopne
jns
dec
pop
push
lods
pandn
push
arpl
call
mov
pop
push
gs
sub
mov
in
push
add
add
arpl
loopne
mov
cli
xor
mov
mov
sub
mov
lds
dec
rcl
dec
or
fimul
lock
(bad)
mov
sub
adc
push
jo
or
sahf
sub
out
push
aaa
inc
pop
push
push
jo
push
rol
movs
push
add
mov
mov
mov
add
sub
mov
cs
jl
jns
inc
js
in
xor
js
sbb
push
add
push
mov
sbb
xchg
mov
push
(bad)
loopne
or
call
fnstenv
adc
xchg
movs
cmp
jo
xchg
and
in
test
arpl
pop
loope
adc
pop
pop
scas
sub
shl
stos
loopne
jge
sbb
pusha
sub
push
adc
dec
push
or
sbb
je
mov
jno
or
pusha
xor
dec
xchg
mov
add
xor
popf
push
test
pop
pop
or
hlt
or
enter
leave
inc
push
sbb
in
jg
push
jmp
push
pop
in
add
popa
push
xchg
mov
sbb
test
sbb
jnp
inc
xchg
mov
sbb
sbb
stc
(bad)
xor
xchg
mov
or
rcr
scas
das
xchg
jno
cmp
inc
mov
jne
push
pop
cmp
je
xor
mov
movs
mov
mov
or
sbb
dec
add
fs
cwde
xchg
data16
dec
adc
stos
pusha
and
push
push
add
lea
push
lods
or
mov
fiadd
cmp
lea
je
lea
and
add
push
or
cmp
mov
and
cli
bound
stos
enter
mov
xchg
sbb
push
inc
sub
sti
or
icebp
fsubr
mov
xor
sub
jl
shl
mov
mov
test
test
enter
xor
sub
loopne
sub
fwait
psubusb
aas
aam
(bad)
xor
sbb
das
ror
sbb
xchg
das
jo
es
cs
icebp
xor
sbb
jo
ins
je
xchg
cmps
into
int3
xor
dec
test
ja
push
(bad)
fmul
pop
push
xor
sub
adc
adc
add
xor
xor
sbb
fsubr
enter
xchg
pop
popf
call
add
lods
out
mov
mov
add
sahf
(bad)
add
and
sbb
push
xor
mov
fld
mov
push
pop
adc
xchg
sub
add
jne
pop
add
gs
jo
mov
outs
or
jne
pop
pop
fstp
xor
mov
jmp
leave
fs
nop
mov
clc
into
stos
sbb
mov
push
mov
push
or
cmp
lea
pop
and
fcomp
aam
inc
imul
cs
out
clc
mov
shr
call
add
adc
cmp
xor
nop
out
mov
fmul
pop
pop
pop
shl
inc
movs
push
pop
or
inc
pop
fdivr
mov
movs
aam
add
std
adc
test
xor
div
loopne
cmp
mov
lahf
pop
push
mov
mov
pop
and
jae
fisttp
adc
ret
cmp
scas
scas
or
pop
test
push
xchg
test
ret
test
dec
(bad)
ficom
mov
repz
cld
je
dec
sbb
inc
xchg
xchg
inc
daa
push
mov
mul
inc
dec
mov
mov
test
xor
add
and
cmp
jne
je
fistp
popa
xchg
pusha
cmp
pop
push
mov
mov
jbe
dec
or
cmps
and
retf
out
mov
bswap
rcr
in
mov
lock
cmp
sub
mov
sbb
rcl
mov
cld
sbb
clc
mov
mov
retf
hlt
inc
int3
iret
ror
cdq
popf
outs
inc
imul
lods
add
je
push
dec
hlt
sub
push
arpl
ror
lock
movs
shl
push
in
add
mov
das
movs
mov
movs
cmp
cmp
std
mov
sub
sbb
jmp
push
push
iret
pop
dec
fs
fnstenv
add
shl
xchg
and
sbb
ret
aaa
(bad)
sbb
add
(bad)
push
clc
out
or
push
push
xor
push
cmp
or
ror
push
ret
xor
or
sbb
mov
pop
mov
jns
stos
mov
mov
or
dec
in
sbb
cmc
push
(bad)
push
int3
push
inc
inc
mov
retf
pop
mov
cmp
pop
popa
loope
in
push
cmps
sahf
mov
call
lods
(bad)
mov
movs
mov
gs
lock
inc
add
add
hlt
sbb
test
push
mov
pop
dec
inc
test
loopne
pop
inc
call
ret
mov
xor
not
push
aam
pop
adc
add
adc
enter
dec
xor
test
adc
or
jmp
jnp
jmp
ret
scas
fsubr
out
push
ins
cmp
addr16
cmp
ret
push
mov
icebp
mov
sub
clc
je
cmp
sub
xchg
dec
sub
push
add
adc
push
inc
push
and
cdq
jecxz
fwait
push
bswap
cdq
scas
add
ret
xlat
xor
push
fisub
(bad)
std
inc
cdq
outs
xchg
retf
cmp
jl
test
mov
int3
xor
sar
pop
sub
call
xor
cmp
jne
retf
fbld
sbb
push
add
iret
imul
aad
shl
mov
popf
ss
(bad)
out
stos
adc
mov
sbb
and
iret
leave
loope
push
stc
push
popf
fcmovnu
loope
in
cmp
add
(bad)
push
push
(bad)
sahf
adc
push
sar
repz
xor
and
xor
bound
in
pop
adc
push
mov
lahf
in
xor
das
in
sub
movs
loope
lock
out
push
dec
or
in
and
out
xor
cli
adc
inc
or
pop
pop
call
push
cwde
pop
imul
ja
adc
and
mov
jne
call
cli
mov
inc
out
lock
rol
pmaxsw
push
shl
push
add
jl
cld
adc
sub
div
add
cmp
fbld
jmp
ret
or
loop
adc
fwait
xor
int
inc
and
cmp
je
sbb
jbe
push
(bad)
punpcklbw
cmp
je
sti
mov
popa
pop
pop
mov
push
pop
sbb
jbe
add
inc
or
pop
push
test
mov
xor
(bad)
fst
push
mov
push
(bad)
xchg
add
daa
add
test
push
sub
dec
and
cmp
cmps
dec
or
(bad)
shl
adc
test
(bad)
clc
mov
mov
mov
add
shl
mov
inc
imul
in
scas
cdq
or
jne
ret
adc
dec
or
aaa
sbb
dec
and
mov
aas
dec
mov
hlt
mov
add
js
or
cld
daa
jecxz
push
cmp
je
xor
je
mul
seto
scas
push
fild
enter
imul
dec
aaa
dec
push
jmp
jnp
cmps
mov
(bad)
push
xor
test
jbe
jge
movs
inc
jb
iret
shl
cdq
push
ins
or
mov
aad
retf
cs
dec
inc
add
xchg
sbb
pop
popa
sub
inc
ja
or
inc
sbb
inc
add
push
sbb
loop
dec
cdq
inc
and
adc
and
pop
sbb
inc
daa
push
inc
add
mov
or
nop
push
dec
mov
mov
hlt
xor
pop
sub
ds
xor
xchg
cmp
lods
addr16
mov
mov
jmp
push
and
leave
add
nop
cmp
push
in
pop
mov
mov
pop
lock
pop
sub
sbb
cmp
je
sbb
add
mov
cs
lock
cmp
jne
xor
hlt
add
retf
xchg
adc
ss
add
dec
adc
ins
and
mov
(bad)
faddp
jmp
jl
ret
fwait
jle
lahf
pop
push
test
je
cli
jmp
mov
inc
jno
test
neg
inc
cmp
jae
add
xor
mov
inc
xor
cmp
add
mov
push
sbb
cmp
jne
and
xor
sub
add
mov
push
ss
push
inc
(bad)
aad
inc
jmp
repnz
scas
mov
test
dec
cmp
les
sub
call
mov
cmp
xor
scas
sub
retf
je
jno
pop
das
movs
neg
clc
push
push
jne
les
mov
sbb
stos
dec
or
xlat
dec
enter
and
or
ins
in
cmp
jne
sub
fisubr
ja
lea
cld
xchg
test
dec
mov
rol
ror
(bad)
push
jle
add
jmp
jns
mov
pusha
loope
or
inc
jae
je
(bad)
sub
shr
add
or
mov
or
push
or
mov
push
mov
inc
sub
xchg
inc
sbb
jg
push
(bad)
rcr
sbb
cmp
mov
cmp
or
ins
stos
shr
mov
fwait
or
pop
add
mov
mov
sub
jno
or
mov
push
or
add
jnp
add
inc
aad
push
push
movs
or
or
clc
sub
lea
push
mov
jl
mov
push
imul
in
push
je
gs
xor
(bad)
xchg
(bad)
jmp
mov
ret
and
cmp
xchg
test
(bad)
js
sbb
inc
push
add
adc
inc
(bad)
icebp
dec
push
test
sub
out
push
clc
test
sub
js
push
push
iret
sbb
adc
dec
imul
pop
ret
rcl
add
push
jae
fiadd
jmp
test
mov
add
jne
mov
rol
(bad)
push
sub
mov
neg
add
ret
sub
cli
jp
or
push
adc
js
jne
test
mov
push
push
pop
adc
je
inc
jmp
in
or
int
mov
xor
dec
add
popf
cmp
or
sub
in
jmp
adc
push
ret
or
rol
inc
mov
mov
pop
ret
xchg
outs
xchg
popf
dec
pop
bound
in
push
lods
xchg
mov
in
adc
mov
cdq
jbe
and
jnp
jno
cwde
test
xchg
add
jmp
jg
imul
add
sub
lock
add
loope
and
mov
and
add
mov
or
cmp
clc
and
inc
adc
imul
mov
mov
pop
and
mov
in
pop
add
pusha
or
aam
mov
int
add
cwde
fmul
sbb
je
outs
test
sbb
aam
mov
icebp
xor
enter
sub
lahf
mov
push
add
imul
mov
jg
pop
inc
or
mov
push
or
xchg
pop
sub
sbb
enter
pop
cs
in
dec
lahf
or
mov
fmul
sub
into
addr16
jmp
inc
push
scas
leave
ret
cmp
mov
mov
sbb
mov
or
test
mov
cmp
js
mov
and
jmp
pop
je
or
push
mov
test
dec
rcl
sub
movs
or
push
mov
jp
jle
mov
sbb
sbb
sub
mov
jnp
mov
jmp
push
add
add
dec
sub
movs
repnz
popf
dec
fisttp
push
push
add
inc
rcl
sub
or
shl
loope
pop
inc
mov
ins
lods
mov
pop
and
mov
pop
popf
xchg
or
int3
cmc
repz
lea
(bad)
push
fnstcw
sub
sub
or
sbb
sub
daa
sub
xor
add
cmp
adc
rcr
dec
outs
adc
rcl
fisttp
cmp
jbe
call
sbb
inc
ret
pop
cmp
aad
repz
imul
pusha
inc
sbb
test
adc
iret
mov
in
ins
shl
cdq
xchg
daa
and
out
fcomp
repz
retf
and
adc
push
pop
mov
and
ficom
ins
xor
jecxz
(bad)
iret
sar
or
sub
push
cdq
fsub
call
pop
push
daa
pop
leave
lea
cmps
adc
mov
in
push
loopne
hlt
enter
(bad)
clc
adc
aad
push
iret
enter
push
dec
outs
inc
les
sub
sbb
add
cmp
cmp
jp
sbb
(bad)
adc
and
jae
mov
push
push
pop
inc
xor
test
and
and
int
(bad)
sbb
mov
jmp
mov
jecxz
aaa
push
sahf
js
push
(bad)
rol
jp
ret
loopne
mov
loop
push
in
or
popf
add
mov
sub
lods
mov
adc
sbb
daa
aaa
inc
inc
mov
jb
mov
loop
mov
bound
xor
cmp
and
inc
or
aad
pop
and
push
stc
pop
xor
pop
and
lahf
adc
and
sub
sbb
fwait
add
pushf
out
sbb
jg
push
cs
push
pop
fwait
aas
pop
pop
push
movs
loopne
cmp
in
pop
xor
fimul
and
sbb
sbb
in
sub
test
jmp
lahf
push
fdivr
faddp
nop
mov
mov
js
push
ret
fisttp
test
pop
inc
inc
das
add
mov
pop
sbb
mov
pop
hlt
push
dec
(bad)
aad
mov
rol
mov
xchg
and
outs
cmp
and
std
lods
es
cmp
cmps
and
xor
mov
dec
ret
dec
adc
into
and
cmp
scas
mov
stos
dec
or
rol
mov
call
clc
adc
das
push
mov
sub
test
(bad)
hlt
mov
adc
add
mov
push
push
adc
sbb
xchg
xchg
enter
mov
sbb
or
test
pop
lods
sbb
add
cmp
jl
test
jno
xor
xchg
sub
test
inc
mov
addr16
jmp
adc
pop
xchg
pop
ja
xchg
(bad)
fiadd
popa
xor
push
in
push
push
mov
in
test
push
fcom
scas
and
test
pop
dec
push
std
lods
mov
mov
dec
sar
js
loop
out
push
push
push
in
mov
mov
retf
hlt
cwde
or
or
add
xlat
cdq
or
mov
pop
mov
cs
push
add
push
ins
inc
test
mov
dec
hlt
add
push
imul
ret
jo
shl
ss
xor
dec
call
jno
or
stos
nop
or
or
mov
sbb
imul
js
xchg
popa
inc
inc
dec
jmp
mov
lods
test
out
dec
push
sub
adc
jmp
jae
loopne
movs
pusha
jo
inc
ins
pop
mov
and
loopne
fmul
in
mov
add
mov
inc
pop
ret
sbb
cmp
inc
push
popf
idiv
loopne
mov
xchg
mov
add
add
cmps
adc
in
xchg
sbb
pop
sar
jmp
inc
or
inc
jno
mov
mov
xchg
inc
or
or
jg
loope
mov
jne
pop
xchg
je
popa
push
push
lock
xchg
fstp
mov
or
jbe
jmp
xor
jle
xor
in
sar
test
fmul
rcr
jnp
jl
ror
pop
cmp
inc
mov
gs
ins
test
push
imul
inc
xchg
mov
push
icebp
adc
enter
out
jle
sbb
add
xor
cdq
xor
sbb
mov
loope
shl
add
cdq
inc
sbb
(bad)
adc
fist
clc
cld
outs
mov
clc
inc
push
sahf
sbb
fadd
or
sbb
mov
cmps
adc
fmul
xchg
loope
shl
or
mov
xlat
loopne
pop
rol
inc
cli
inc
lock
daa
in
add
add
xchg
push
pop
or
repz
neg
test
inc
or
cld
sub
mov
mov
xchg
cmp
sub
xor
stos
jle
push
into
dec
xor
inc
inc
scas
es
add
xchg
push
js
inc
push
pushf
pusha
out
or
mov
shl
js
lds
and
xchg
rcr
repnz
sbb
(bad)
adc
fucomip
in
and
daa
and
jno
or
outs
adc
icebp
xchg
clc
aas
dec
add
add
xor
xor
add
or
imul
dec
sbb
or
sahf
xchg
cmp
sub
lahf
sbb
cmp
pop
or
loope
push
adc
cld
mov
out
jnp
or
push
push
lock
push
jp
inc
je
out
xor
or
push
outs
adc
cmp
or
shl
add
dec
loope
add
xor
adc
dec
ror
xor
xchg
cmp
out
add
pop
jne
push
mov
pop
ret
push
inc
or
mov
out
mov
popf
mov
dec
stos
and
ror
pushf
add
movs
adc
rcr
dec
adc
cmp
jbe
sbb
inc
outs
aas
sbb
sbb
adc
mov
xchg
stc
(bad)
jae
cmp
jb
cmp
dec
mov
dec
adc
rcr
mov
add
inc
cmp
call
adc
inc
je
ret
add
cmps
sbb
add
dec
call
enter
and
fild
ins
pushf
add
pushf
inc
and
inc
xchg
push
cmp
dec
pop
or
push
push
or
out
add
push
aas
adc
push
push
fdivr
aaa
push
add
add
sbb
mov
adc
push
aas
ret
aam
out
and
add
shl
push
test
sbb
jmp
test
mov
mov
imul
icebp
ror
xor
fmul
or
loope
adc
rcl
outs
call
push
push
lea
out
arpl
cmp
adc
lea
xlat
jno
and
push
es
fwait
push
push
aam
push
pop
add
pop
mov
adc
in
ins
(bad)
xlat
push
inc
pop
xchg
or
pop
adc
lock
pop
sti
jb
popf
dec
adc
add
xor
or
or
fmul
loop
mov
scas
sub
cmp
mov
push
xor
fs
mov
cld
cmps
and
push
ret
pop
xor
and
aas
pop
sbb
inc
pop
push
and
cmps
or
les
inc
adc
mov
jp
xchg
or
in
mov
mov
and
xor
repnz
and
(bad)
rol
inc
sbb
or
loop
sahf
jle
sbb
sub
push
add
dec
shl
rol
data16
inc
cmps
pop
ffreep
inc
or
push
sbb
les
sbb
fcom
fadd
add
inc
sub
dec
shl
sub
cwde
jle
lea
and
stos
jb
dec
pusha
xchg
ret
push
pop
lea
mov
jge
add
add
js
retf
in
dec
add
inc
add
mov
enter
sahf
shl
sbb
xlat
and
les
popa
and
mov
cmp
je
sbb
inc
pop
sbb
push
lea
lea
xor
mov
or
xor
and
imul
enter
test
fimul
mov
push
sub
retf
int3
pop
aam
and
xchg
push
inc
add
ja
(bad)
hlt
dec
stc
mov
and
pop
pushf
xchg
add
and
cmps
imul
call
(bad)
shl
sub
cmp
cmc
add
test
mov
sbb
sub
mov
loope
cmc
and
iret
ja
repnz
popf
(bad)
jmp
(bad)
cmp
mov
adc
call
pop
int
daa
and
inc
pop
inc
cmp
in
aaa
mov
rol
or
xor
out
adc
pop
in
test
mov
push
out
cmp
push
lock
daa
or
idiv
je
sub
mov
out
hlt
aas
mov
cmp
lods
jo
jg
and
xchg
retf
mov
adc
imul
inc
mov
jne
sub
sub
mov
pusha
add
fisub
xor
das
cwde
por
push
add
fwait
pop
xor
jge
int
jns
and
add
pusha
pop
ret
aaa
mov
cmp
add
ss
or
mov
out
pop
and
or
sub
dec
xchg
xor
dec
push
je
dec
jne
dec
js
sbb
out
clc
adc
push
inc
loope
ins
and
das
lahf
xor
or
add
test
inc
leave
mov
nop
(bad)
int3
pop
cli
lea
dec
lea
repz
in
cmp
sbb
mov
mov
movs
popf
les
or
push
cmp
popf
retf
mov
fsub
xor
fdivr
xchg
gs
mov
lea
cli
jb
adc
loope
xchg
ror
xor
adc
sbb
or
xchg
ja
xchg
pop
sbb
ins
je
movs
mov
inc
aas
add
cmps
push
retf
mov
inc
and
sbb
jge
popf
popa
test
dec
mov
arpl
adc
adc
add
fs
push
xor
push
push
xchg
pop
adc
dec
inc
ret
xor
add
into
mov
and
cmp
test
push
add
push
sub
sub
ds
je
lahf
push
sar
ror
(bad)
mov
aam
or
pop
jno
adc
xor
sub
xor
add
lock
les
and
jg
sub
inc
lea
push
and
mov
push
or
sub
loope
out
out
jle
jo
push
jne
cmp
jbe
sub
push
jmp
pop
mov
into
jmp
sbb
(bad)
fcomp
popa
dec
pusha
clc
nop
mov
xlat
cwde
cmp
ret
arpl
clc
jb
fist
into
ret
mov
push
test
pop
push
xor
cld
dec
test
mov
pop
pop
ret
adc
(bad)
out
push
xor
jo
cmp
adc
sbb
lock
push
lods
adc
rol
add
push
test
push
xlat
mov
jbe
shr
and
cs
aaa
js
in
inc
loopne
stc
cmp
sub
push
xor
add
adc
mov
bound
cmps
stos
xchg
adc
xlat
inc
pop
dec
push
jmp
je
test
test
mov
xor
(bad)
jmp
add
dec
xchg
icebp
in
xor
adc
enter
push
sub
mov
or
pop
pop
jmp
adc
mov
sbb
push
sahf
inc
cmp
adc
mov
xchg
and
push
mov
cmp
push
and
fbld
idiv
push
mov
mov
cdq
push
push
push
cli
mov
into
cmp
jnp
add
jnp
lds
inc
movs
jbe
lock
pushf
mov
aaa
sti
jo
add
inc
adc
push
and
sub
dec
push
add
les
xchg
and
sbb
xchg
fidiv
add
push
mov
pop
pop
leave
jecxz
sti
rcl
mov
in
ss
mov
add
sub
adc
cmp
std
push
jecxz
sbb
and
jge
icebp
mov
mov
or
adc
add
ins
sub
ret
test
inc
pop
int
int
gs
dec
add
and
xchg
popa
push
mov
ja
xor
loop
lds
add
dec
add
lods
jnp
jo
pusha
jo
enter
ins
mov
xor
xchg
push
dec
inc
jge
call
in
jnp
dec
mov
popf
mov
fadd
xchg
jl
daa
mov
xor
push
repz
test
xchg
sub
fs
push
imul
xor
mov
mov
pop
jae
inc
cmp
add
jns
mov
shl
imul
cwde
mov
xchg
adc
std
cmp
je
push
(bad)
sbb
stos
popf
pop
push
loope
fiadd
xchg
xchg
and
in
loop
stos
push
sub
lods
adc
fdivr
imul
cli
pop
or
nop
out
and
or
jge
xor
mov
imul
or
mov
in
fadd
and
mov
xor
retf
jle
jnp
lods
and
mov
jae
into
and
aas
ror
mov
daa
inc
in
retf
push
pop
pop
xchg
push
add
daa
jne
div
test
xor
sub
mov
add
mov
inc
test
jl
ss
or
fs
mov
inc
dec
mov
push
mov
popa
lock
(bad)
cmps
mov
fs
je
sub
cmc
mov
test
sbb
out
(bad)
daa
dec
je
mov
fsubr
sbb
sbb
cmps
pop
lock
inc
inc
sub
jns
push
test
cmp
pop
ret
or
cmp
aam
dec
and
dec
cmp
dec
inc
or
sbb
pop
pushw
sbb
pop
push
popf
cmp
in
mov
or
test
pop
xor
sub
lea
in
aaa
sti
mov
sbb
and
sbb
cld
pop
inc
std
xchg
adc
sub
xor
in
add
hlt
mov
mov
xlat
push
ret
dec
pop
mov
cmps
mov
es
daa
iret
push
or
push
mov
adc
jno
into
test
or
adc
sbb
push
mov
push
xor
mov
sub
imul
outs
cmp
jg
popf
or
aas
loop
sub
dec
cwde
stos
imul
jl
push
outs
arpl
xor
inc
mov
xchg
cmc
jns
mov
in
xchg
pop
mov
xor
gs
inc
aam
dec
test
push
cli
ins
cmp
sbb
xchg
push
xor
rcl
test
or
and
inc
push
pop
dec
test
cmc
adc
push
out
cmp
jge
xchg
stos
dec
sbb
movs
sahf
xchg
jmp
pusha
jbe
lahf
xchg
cmp
ins
out
sbb
push
push
dec
and
sbb
sbb
cmp
xchg
ss
and
dec
inc
in
push
int
fbstp
sbb
add
sub
adc
int
push
mov
jecxz
lods
dec
add
inc
fidivr
shl
(bad)
out
pop
or
jp
sbb
inc
dec
xchg
add
xor
sbb
aaa
cmc
and
add
inc
sahf
loop
movs
pop
xchg
and
pop
mov
aaa
fistp
cmp
imul
fst
add
out
sub
sub
fwait
xor
lock
(bad)
push
adc
xor
or
in
push
test
push
mov
pop
cmps
loope
retf
std
aas
(bad)
in
pushf
pop
pop
test
in
pop
mov
xchg
inc
push
or
cmps
cwde
or
push
and
out
adc
sub
dec
sbb
in
and
imul
inc
dec
adc
sub
sub
dec
fisttp
and
jl
stos
or
shr
fcmove
or
push
mov
or
jmp
out
sub
lods
loope
rcl
movs
xchg
mov
cmp
daa
xlat
lea
loop
jne
push
or
aaa
sub
push
add
inc
cld
lods
mov
lods
pop
pop
cdq
adc
jo
cmp
and
xchg
and
(bad)
and
inc
jo
mov
mov
(bad)
mov
and
sbb
adc
(bad)
ror
xor
dec
dec
sbb
nop
mov
mov
and
lea
cmp
xor
jo
ins
nop
xor
mov
je
push
push
mov
jb
push
enter
sub
add
add
pushf
inc
aaa
ret
dec
ss
and
cmp
xor
retf
pop
push
adc
jno
pop
(bad)
mov
inc
push
test
(bad)
cmp
je
(bad)
cwde
xlat
cmp
push
daa
dec
xchg
inc
dec
dec
cmp
jecxz
cwde
(bad)
and
add
movs
outs
jne
lea
icebp
movs
cmp
inc
pusha
enter
xor
add
mov
inc
div
or
sti
stos
je
icebp
adc
outs
mov
mov
imul
push
cmp
jecxz
dec
rcl
adc
ja
adc
sub
test
sbb
adc
cmp
fwait
pop
push
lods
xor
retf
cmp
sub
push
xchg
cmps
gs
inc
fidivr
push
adc
cmp
or
in
cmp
push
and
sbb
imul
sub
cdq
adc
loop
and
test
cmc
jbe
mov
mov
mov
jo
mov
push
mov
pusha
adc
fstp
jb
lock
add
scas
movs
fld
inc
pop
mov
(bad)
in
mov
int
jecxz
adc
mov
lock
mov
mov
and
jl
xor
pop
cmp
xchg
jb
shl
or
outs
jmp
pop
iret
jbe
inc
adc
mov
mov
imul
xchg
or
xor
mov
iret
push
add
jmp
pop
cmp
not
sahf
fwait
mov
xor
cmp
or
adc
cmps
jmp
mov
je
and
sub
shl
pushf
push
and
ja
push
adc
loope
adc
imul
popa
dec
and
sar
mov
mov
pop
jecxz
dec
cdq
cwde
retf
cdq
loope
dec
movs
pop
sub
pop
sbb
xchg
ret
enter
push
cli
popf
mov
xchg
cwde
cmp
retf
repz
in
div
mov
(bad)
adc
ss
xchg
xchg
mov
call
outs
pop
fcomp
pop
push
pop
jge
rol
push
lea
cmp
xor
in
pop
(bad)
push
cmps
or
loopne
int3
retf
inc
adc
adc
mov
mov
xorps
retf
loope
shl
push
sub
or
xor
packuswb
ret
cmp
sub
push
das
(bad)
cmp
sbb
push
cmp
js
push
push
sbb
(bad)
jb
push
jecxz
push
dec
push
xchg
adc
jp
lds
push
pop
sti
sbb
or
ret
pusha
fcom
jnp
fidivr
dec
test
pop
repnz
inc
sub
int
pop
or
sbb
dec
and
nop
sbb
and
nop
or
call
and
and
and
mov
pop
jb
and
or
jne
sub
ret
mov
nop
es
shl
dec
lds
push
or
popf
push
hlt
ror
xchg
daa
xchg
sub
test
inc
jmp
stc
cwde
sub
and
stos
jae
sub
jb
sbb
pop
sub
mov
sub
xchg
(bad)
sbb
pusha
pop
push
ins
jbe
dec
add
mov
pusha
xor
arpl
pop
mov
push
push
sbb
mov
mov
inc
das
or
push
rol
mov
dec
mov
and
les
outs
jne
sub
or
inc
push
repz
dec
mov
add
cvtdq2ps
shl
push
sti
fcom
and
movs
jns
call
jns
and
fistp
movs
adc
and
and
test
add
arpl
add
mov
add
xor
daa
(bad)
imul
inc
xchg
inc
or
dec
push
inc
pop
and
adc
cmp
test
and
fisub
movs
xchg
add
or
movs
push
add
aad
in
mov
sti
push
adc
and
jle
(bad)
or
and
cmps
es
cmp
in
ficom
xor
lock
xchg
loope
pop
jne
xor
inc
popf
push
rcl
sub
lock
add
enter
mov
pop
ins
dec
(bad)
leave
daa
or
sub
pop
popf
lds
pusha
loopne
add
push
aam
outs
mov
sbb
push
in
js
mul
mov
and
jne
add
call
push
test
test
in
cmp
je
mov
and
sub
jne
(bad)
fild
mov
or
pop
and
stos
pusha
push
pop
push
xor
loopne
push
push
dec
mov
(bad)
(bad)
test
adc
je
mov
push
(bad)
push
icebp
sahf
cmp
xor
lock
adc
test
push
push
icebp
or
adc
xor
and
scas
sub
pop
lock
sbb
xor
inc
fisttp
push
pop
mov
je
inc
xlat
adc
hlt
jecxz
test
push
mov
and
adc
bswap
push
shr
mov
arpl
mov
jl
inc
add
les
mov
mov
sbb
dec
test
gs
xchg
int3
jge
xor
xor
call
mov
jnp
jp
xor
adc
cmp
fnstcw
scas
imul
xchg
adc
test
mov
mov
sar
aad
pop
enter
push
fidiv
les
adc
pop
mov
pushf
cmp
shl
(bad)
cs
clc
pop
xor
scas
out
or
loop
push
push
add
jg
test
ja
cmp
lock
je
adc
cdq
jp
aaa
sbb
inc
or
push
cmp
clts
bnd
jl
adc
lahf
or
adc
mov
sub
sub
es
push
or
adc
sub
loopne
sar
adc
out
cmp
repnz
fincstp
pop
push
clc
imul
shr
dec
add
jle
inc
inc
push
push
adc
add
and
in
inc
jo
mov
push
dec
jecxz
mov
adc
mov
sar
jno
inc
aas
xchg
daa
xor
cmp
inc
aad
adc
movs
rcr
mov
aam
pop
pop
mov
sub
inc
jcxz
mov
mov
mov
popf
mov
loope
clc
lea
jae
jle
ret
sbb
adc
jl
mov
lea
inc
sub
nop
add
fnstenv
add
(bad)
loopne
les
in
mov
adc
and
pop
cmps
dec
dec
mov
bound
mov
and
dec
or
cmp
inc
dec
sub
push
inc
jmp
mov
jo
cmp
bound
aaa
imul
bound
pop
out
lds
fist
enter
adc
loope
icebp
and
inc
add
cmp
pusha
pop
mov
inc
sbb
nop
popf
jg
mov
mov
add
add
movs
inc
or
popa
ja
stos
mov
test
mov
repnz
sbb
xchg
mov
mov
fiadd
mov
mov
dec
cmps
or
sub
add
fisttp
or
int3
(bad)
nop
pop
sbb
or
mov
aas
sbb
push
mov
or
das
or
mov
add
cmp
(bad)
push
add
xchg
in
fchs
test
dec
push
in
push
sbb
jp
out
jecxz
imul
fsub
cmp
jle
cld
jae
inc
add
outs
mov
mov
sbb
and
or
mov
cmp
rol
shl
pop
xor
fiadd
or
pop
sub
dec
ret
cvtps2pd
div
sbb
mov
retf
jp
cdq
sub
daa
repnz
push
jmp
add
daa
loop
sbb
outs
push
rol
sub
inc
inc
or
mov
pop
inc
push
mov
dec
sub
mov
lods
add
aas
push
(bad)
ror
cmps
rcr
cmc
mov
add
stos
xor
mov
cli
sbb
cmp
rcr
add
mov
arpl
add
pop
xor
dec
add
adc
inc
mov
inc
fisub
call
out
push
add
jle
push
mov
jp
pop
xchg
add
inc
add
or
cld
lea
dec
cmp
or
xchg
xchg
inc
or
mov
sbb
inc
or
cs
loopne
inc
adc
ins
sti
in
push
ficom
pop
add
lds
inc
scas
loopne
lds
push
push
push
imul
(bad)
gs
push
push
adc
and
add
pmaxub
cmp
iret
inc
test
sbb
mov
pusha
pop
lea
dec
jmp
adc
adc
dec
pop
sub
popf
pop
adc
jp
add
dec
loopne
or
mov
inc
mov
jbe
scas
push
sub
and
add
push
fimul
inc
(bad)
mov
cmp
inc
xor
mov
mov
adc
mov
push
cmps
mov
mov
out
xor
loopne
cmp
lods
pop
adc
adc
push
adc
xchg
mov
inc
lea
inc
pop
dec
pop
popa
push
mov
push
or
xor
and
popf
adc
pop
pop
scas
or
cmp
push
js
inc
add
test
retf
lods
adc
movs
inc
lods
fidiv
add
jo
adc
push
cmp
popa
nop
clc
cwde
sbb
mov
xchg
inc
not
outs
popf
scas
sti
or
xchg
mov
mov
adc
push
pop
xor
mov
mov
xchg
push
lea
dec
jge
int
push
push
xor
dec
mov
fsubr
xchg
out
push
daa
mov
sbb
jnp
pushf
movs
inc
je
sahf
loopne
mov
inc
das
inc
add
and
add
push
fdivr
js
popf
fs
sbb
ror
sbb
outs
sbb
jmp
mov
cmps
push
or
adc
jmp
adc
es
lahf
inc
fild
jns
add
push
sub
dec
pop
push
dec
cmp
xor
ror
add
sub
adc
pop
(bad)
aaa
xchg
pop
xchg
mov
jp
js
fisubr
fdiv
pop
add
jb
xor
add
in
call
(bad)
cmp
rol
jbe
pop
test
fnsave
jmp
dec
add
jg
mov
mov
js
mov
fistp
movs
pop
mov
callw
xchg
push
push
call
dec
adc
test
xor
dec
iret
or
loope
inc
cmp
in
xor
(bad)
movs
push
push
lea
xor
jne
inc
js
ficomp
cmp
nop
mov
movlps
enter
pop
sub
adc
mov
mov
and
outs
stos
xor
add
data16
push
pop
rol
test
sti
adc
fidiv
xchg
add
test
aas
push
xlat
push
and
adc
xor
inc
or
sub
dec
add
dec
aaa
jb
add
jmp
adc
xchg
and
scas
cmp
push
sbb
inc
pop
and
jle
retf
jge
enter
pop
cli
push
sbb
add
call
mov
add
sar
dec
retf
inc
inc
push
mov
add
outs
in
inc
cmp
dec
dec
inc
icebp
movs
sbb
dec
or
xchg
ret
sahf
lods
(bad)
fcom
mov
arpl
jge
push
inc
jecxz
fstp
pop
jecxz
mov
xchg
(bad)
ss
or
xchg
push
call
out
mul
sub
jl
adc
sbb
jo
push
add
adc
sub
mov
cmp
shl
push
lods
nop
out
bound
retf
movs
xchg
jge
and
adc
sbb
xchg
cmc
loopne
xchg
add
xor
out
jae
sub
cmp
xchg
jns
push
jmp
cmp
pop
xlat
addr16
push
fdiv
mov
pop
cmp
ins
xchg
ins
jo
push
xor
mov
sti
push
and
mov
into
xor
mov
(bad)
sub
adc
dec
dec
fs
or
add
dec
and
and
add
inc
test
and
add
jbe
cmp
out
inc
cwde
xchg
adc
jecxz
jne
dec
in
clc
xchg
push
pop
push
int
mov
test
mov
mov
sbb
cmps
aam
and
mov
cmp
push
and
mov
push
push
or
add
cmp
dec
jae
lea
jno
scas
push
jo
dec
inc
add
xchg
xor
test
adc
push
add
test
mov
(bad)
mov
jnp
imul
and
adc
xor
mov
or
rcr
add
xchg
out
mov
pop
add
bnd
scas
loopne
jnp
inc
mov
dec
cmp
sbb
sub
push
dec
jp
mov
adc
ret
sub
push
je
(bad)
add
js
lods
iret
push
fnstcw
pop
das
sti
(bad)
sbb
pop
sub
sub
mov
scas
mov
inc
mov
in
jb
sub
and
jne
mov
(bad)
enter
pop
xchg
cwde
sar
add
int3
adc
sbb
push
mov
cmp
pop
sbb
sbb
mov
xor
inc
sar
adc
ret
sbb
add
adc
mov
adc
push
mov
nop
lds
loopne
mov
mov
mov
sub
bts
or
imul
fdiv
mul
mov
test
xor
dec
loopne
movs
add
mov
fsubrp
push
js
popa
add
movsx
mov
(bad)
jno
jne
and
outs
mov
or
je
adc
fwait
dec
test
arpl
adc
mov
pushf
mov
cmp
push
inc
fldpi
mov
hlt
push
inc
div
sbb
mov
or
je
mov
in
pop
(bad)
dec
retf
pop
js
je
retf
pop
mov
pop
ins
mov
pop
add
lock
imul
mov
mov
movs
jecxz
std
xor
(bad)
mov
aas
lea
stc
lock
(bad)
gs
inc
dec
cmp
ss
add
xchg
push
xor
loopne
je
fs
adc
sub
call
scas
push
xor
pop
pop
(bad)
iret
gs
jbe
mov
fwait
and
sub
mov
sbb
jns
std
lock
sub
gs
jmp
inc
pop
push
inc
or
sub
sbb
mov
cmp
inc
mov
adc
add
out
fidivr
inc
imul
jno
pop
sbb
xchg
push
push
push
ja
in
jmp
mov
sub
das
ret
mov
stos
mov
hlt
and
inc
loope
sub
ffree
leave
inc
mov
push
push
ror
sbb
and
jl
adc
mov
ror
sub
push
ret
imul
and
test
ins
(bad)
add
dec
xlat
popa
cmp
mov
sbb
xchg
das
push
lock
and
jno
adc
test
cmp
cwde
in
adc
mov
das
aam
mov
inc
adc
jecxz
xor
out
add
imul
in
mov
mov
hlt
sub
xor
call
shr
cld
adc
or
sub
and
adc
retf
test
xchg
in
add
mov
cmp
adc
clc
mov
pop
and
je
inc
and
mov
push
jbe
pop
jae
xor
test
in
loope
jnp
push
dec
pusha
leave
or
ins
and
retf
enter
mov
in
or
inc
ja
mov
hlt
in
dec
mov
mov
sub
mov
cs
sub
gs
mov
cmp
inc
xchg
jbe
xor
mov
adc
adc
or
rcl
adc
loopne
mov
pop
cmp
call
adc
add
sbb
ins
and
sub
jno
adc
mov
jns
xor
or
mov
mov
clc
push
popa
cmc
mov
mov
cmp
inc
dec
inc
pop
inc
scas
cmp
test
int3
shr
add
pop
int
sbb
add
sbb
add
icebp
sub
sbb
dec
jmp
and
sub
cld
or
jne
movs
add
and
movs
rcl
mov
sbb
dec
xchg
inc
in
sub
jp
push
push
and
aam
hlt
jo
mov
fsubr
(bad)
sub
or
arpl
es
clc
sub
dec
stc
add
pop
sub
push
add
push
push
push
push
shl
loop
xor
in
and
popf
lds
xor
push
rol
xchg
mov
call
sub
cmp
and
push
cmp
jne
pusha
dec
ret
mov
popa
push
je
jns
xchg
xchg
pop
xchg
icebp
test
mov
sbb
cmp
data16
loopne
lahf
rcl
dec
pushf
popf
lds
dec
xchg
sbb
mov
das
adc
adc
pop
shr
cs
sahf
mov
shl
mov
pop
push
sub
test
js
and
retf
mov
lahf
pushf
jmp
push
inc
cwde
call
or
hlt
adc
mov
pop
in
clc
inc
add
push
pop
add
retf
xchg
ret
lods
fnstsw
mov
mov
mov
idiv
or
cmp
js
add
xor
pop
sbb
jbe
sub
or
dec
popf
enter
jmp
push
inc
retf
dec
clc
sbb
jnp
add
add
mov
dec
sbb
adc
cmp
ss
cmp
mov
push
xchg
push
pop
or
inc
sub
movs
icebp
inc
sub
add
rcl
sbb
xchg
dec
inc
inc
mov
iret
pop
inc
cdq
icebp
imul
(bad)
addr16
stos
enter
dec
add
xor
outs
cwde
mov
and
push
imul
sub
jb
jg
push
push
shl
arpl
movs
adc
pop
in
ins
xchg
addr16
cli
adc
lock
xchg
cmc
std
pop
dec
jbe
cmp
push
mov
out
cmp
inc
jne
push
jno
add
or
jnp
add
retf
adc
push
push
pinsrw
loopne
inc
fadd
lea
xchg
xor
add
mov
add
add
push
push
jl
mov
xor
jg
sbb
push
push
inc
adc
cmp
push
jo
mov
adc
xor
jmp
clc
add
adc
clc
es
fmul
push
mov
push
movs
dec
adc
sbb
jns
fadd
mov
and
das
arpl
ror
js
xchg
les
dec
in
bound
mov
cmp
addr16
inc
pop
por
and
dec
lods
mul
jge
mov
jl
adc
jl
movs
mov
dec
cmp
adc
ss
outs
mov
jbe
xchg
scas
sub
pop
into
pop
dec
pop
jo
scas
add
jmp
cmp
push
inc
rol
jmp
sbb
lock
pop
int3
je
ds
int3
pop
loop
and
push
xor
loopne
daa
adc
adc
or
jmp
cmp
push
push
in
and
imul
mov
sub
neg
dec
mov
jle
ins
xor
pop
cmp
cmp
push
dec
jge
inc
jo
and
xchg
mov
cmps
test
add
jecxz
push
pop
add
dec
test
jge
push
loope
daa
aas
fstp
dec
pusha
in
mov
sbb
retf
test
mov
ja
or
pop
add
inc
test
mov
xor
lea
jns
push
mov
add
stos
jno
scas
adc
push
shl
lea
fldenv
jge
std
popa
sub
aas
push
lea
push
loopne
or
imul
loopne
int
test
test
add
xor
xchg
xlat
adc
jnp
mov
pop
sub
and
sbb
adc
xchg
mov
adc
pop
mov
pusha
(bad)
(bad)
push
nop
stc
jle
add
cmp
sbb
cmp
stos
adc
sbb
push
retf
test
add
add
sar
dec
mov
push
je
jl
ja
mov
jns
icebp
sbb
pusha
adc
pop
jns
pop
adc
or
add
xor
popf
xchg
je
and
mov
cld
rol
(bad)
mov
dec
push
loopne
pusha
sub
jl
sub
jmp
out
jg
and
pop
sti
(bad)
call
dec
movzx
cmp
push
adc
dec
outs
or
loope
dec
dec
add
add
xchg
dec
sti
rcr
sbb
add
ins
and
jl
repz
lock
ins
cwde
jae
outs
xchg
xchg
dec
inc
addr16
inc
pop
mov
add
add
sbb
bound
pop
sbb
pop
in
or
pop
xchg
pop
and
pop
add
jo
pop
enter
cmp
jne
jb
fs
dec
xchg
add
enter
pop
dec
pop
push
pop
push
dec
aad
mov
(bad)
jo
cmp
lock
and
lea
jle
int3
rol
pop
push
add
ficom
sbb
out
in
and
and
push
push
inc
and
and
sub
or
or
sbb
xor
push
aaa
pop
mov
popa
sub
adc
and
push
mov
or
adc
rol
pop
xor
and
adc
shr
inc
pop
mov
xor
lock
cmp
mov
movhps
fwait
jle
adc
push
inc
jg
mov
add
pop
dec
inc
iret
mov
ss
cmps
add
dec
das
in
retf
push
mov
cld
test
lock
jmp
sub
sub
mov
and
or
mov
xchg
shl
lods
popa
adc
stos
mov
jbe
inc
adc
or
int3
and
push
add
or
jne
inc
pusha
mov
push
dec
inc
and
cld
pop
lods
or
inc
push
pop
dec
daa
xchg
fisubr
outs
push
cmp
pop
je
or
adc
inc
add
and
dec
or
mov
fadd
cmp
push
lahf
leave
sbb
jl
rol
in
push
or
xchg
mov
inc
hlt
ds
inc
lea
mov
pusha
push
enter
(bad)
mov
mov
mov
jne
imul
dec
movs
shr
mov
sub
div
and
and
scas
push
pop
xchg
dec
xchg
mov
add
movs
aad
lods
adc
in
push
or
scas
xor
xchg
sbb
hlt
(bad)
call
ja
jnp
dec
pushf
nop
(bad)
sbb
and
mov
jmp
loopne
inc
xchg
repnz
mov
in
add
jecxz
pop
pop
inc
fdiv
imul
push
mov
stc
and
adc
loope
(bad)
inc
(bad)
cli
dec
xor
fimul
push
data16
lock
adc
lahf
in
and
adc
cli
and
in
mov
sbb
arpl
sub
retf
nop
dec
sub
sbb
mov
jmp
icebp
sub
(bad)
inc
mov
jae
sub
sub
les
or
inc
aaa
jmp
mov
sub
mov
push
das
pop
inc
lea
mov
cld
not
or
xor
adc
adc
adc
jmp
pop
in
pop
xchg
mov
adc
dec
or
sbb
adc
test
(bad)
xchg
scas
jno
test
idiv
ins
xchg
xor
add
sbb
inc
mov
add
inc
sahf
imul
sbb
sub
nop
and
nop
in
pop
aaa
adc
mov
pusha
mov
pop
ret
adc
push
mov
dec
clc
loope
push
add
dec
sub
push
or
push
inc
add
js
or
popa
inc
sahf
sbb
inc
ss
mov
jl
sub
pop
dec
mov
in
pusha
popa
dec
inc
inc
lock
jns
or
test
jne
and
nop
repz
rcr
and
xlat
sbb
test
mov
addr16
test
jno
mov
inc
sub
mov
push
loope
(bad)
fwait
in
test
sbb
fnstsw
inc
and
call
pop
pop
xchg
lock
and
add
xor
div
ins
daa
jo
push
cmps
loopne
adc
push
shr
cmp
inc
out
fdiv
add
xchg
into
shr
fs
popa
xchg
push
inc
add
push
(bad)
enter
dec
pop
xchg
pop
rcl
jo
sbb
imul
rcr
addr16
cmp
loope
mov
movs
inc
mov
adc
call
jge
add
and
push
add
inc
call
cmc
add
dec
add
mov
aam
mov
mov
adc
movs
rol
cmp
mov
jne
push
sub
movs
cmp
enter
mov
dec
xchg
popa
xor
or
clc
iret
sub
in
(bad)
jmp
add
inc
inc
sbb
adc
les
(bad)
leave
js
pushf
outs
dec
jnp
pop
mov
ror
and
add
out
and
jae
push
and
xor
pop
fadd
xor
test
pop
sub
cmp
lods
or
add
es
cld
hlt
xor
leave
test
or
sub
rcl
ins
fldenv
(bad)
mov
xor
bound
push
push
pop
jo
add
stos
in
inc
stos
push
and
pop
inc
cmp
(bad)
sub
mov
and
push
jne
(bad)
adc
push
(bad)
fcmovnu
or
lods
cmp
jmp
push
jg
lods
inc
inc
fld
repz
cmp
out
pop
ror
push
je
xor
and
out
or
jge
push
pop
sub
or
push
push
pop
sub
mov
push
mov
pop
sub
cmp
rcl
mov
fistp
in
lds
mov
sub
adc
test
xchg
or
enter
rol
add
lods
and
ret
icebp
mov
pop
or
inc
or
pop
jo
pop
and
imul
mov
mov
(bad)
dec
sub
nop
inc
cmp
rol
dec
mov
or
outs
repnz
dec
inc
sub
and
push
or
and
icebp
or
iret
retf
mov
sar
mov
icebp
dec
pop
je
lods
dec
mov
test
aam
jecxz
xor
shl
add
(bad)
mov
icebp
and
sbb
or
push
and
push
add
pushf
inc
xor
jne
lea
mov
xor
scas
dec
repnz
pop
sub
xchg
mov
pop
mov
or
adc
xchg
dec
jne
push
test
and
dec
and
pop
inc
cmps
push
loope
lods
sbb
nop
lea
jae
nop
dec
pop
jb
or
or
or
nop
jge
es
jge
test
shl
jo
add
pop
das
and
adc
pop
cmp
out
pusha
test
xor
jbe
push
or
mov
inc
dec
or
xor
mov
pushf
scas
shl
or
add
add
or
push
or
fwait
add
(bad)
cmp
adc
push
jp
cmp
cmp
pop
lea
mov
inc
inc
sbb
mov
rcr
adc
pop
cwde
add
pushf
mov
sbb
inc
mov
or
or
xchg
add
add
in
neg
push
ret
push
test
adc
cwde
add
adc
sbb
inc
adc
arpl
adc
fnsetpm(287
rcr
rcl
adc
mov
pushf
ret
popa
xchg
shr
pop
pop
shr
pop
mov
sbb
mov
pop
mov
call
inc
add
es
lock
sbb
shr
rcl
fld
sbb
pop
cs
stc
or
imul
adc
fcom
xor
adc
mov
div
movaps
movs
mov
pop
pop
cmc
js
mov
dec
jmp
mov
cmp
enter
xchg
xor
stos
dec
pop
sub
test
dec
jmp
push
xchg
push
and
imul
sub
and
sbb
shl
retf
and
fnstenv
pop
fwait
mov
mov
inc
hlt
push
rcl
and
pushf
pusha
jnp
xor
in
xor
inc
or
push
jbe
pop
xor
xchg
and
adc
jb
push
dec
inc
dec
jmp
xor
sbb
add
xchg
sti
mov
cld
icebp
mov
sub
cmp
and
push
ror
enter
imul
fs
xchg
adc
add
mov
imul
pop
adc
cmp
xor
aas
ret
mov
sub
jmp
pusha
inc
mov
fld
and
jb
popa
test
hlt
or
addps
xor
or
sar
cmp
mov
scas
ror
adc
dec
mov
cmp
push
inc
arpl
xchg
push
add
sub
scas
cli
xchg
mov
retf
push
cmp
popf
add
mov
lea
mov
sbb
(bad)
lea
push
les
daa
test
inc
mov
push
sbb
dec
and
add
adc
and
test
xor
mov
jmp
or
cmps
movs
xchg
repz
test
mov
jmp
lock
shl
dec
jg
or
inc
jns
pop
jecxz
push
pop
das
test
or
xor
nop
and
test
sbb
lods
pop
inc
and
inc
pop
pop
dec
xchg
fisubr
inc
adc
sbb
nop
in
test
je
adc
inc
mov
and
pop
les
inc
cli
adc
cmps
ds
movs
push
dec
in
cmp
dec
inc
ret
fist
loope
xor
cmp
mov
fs
mov
fadd
cmp
push
iret
push
mov
cmp
inc
add
jp
sbb
lods
sub
push
and
mov
aam
js
dec
adc
mov
call
push
xchg
sbb
dec
and
add
movzx
add
add
fstp
dec
movs
loopne
sbb
mov
cmp
inc
or
or
or
or
mov
mov
xchg
pop
pop
or
mov
xor
dec
cmp
sbb
fist
ins
rol
push
push
jnp
or
ins
inc
shl
cdq
push
and
ret
ins
dec
dec
mov
xor
cs
pop
or
mov
test
inc
push
mov
mov
mov
or
mov
xor
mov
pusha
sub
dec
imul
ds
push
inc
ins
out
push
mov
repnz
push
xor
jmp
adc
cmp
cmp
fsub
mov
fisub
rol
adc
or
add
sbb
into
(bad)
jle
adc
ds
pushf
pop
pop
repz
dec
jl
test
inc
clc
jl
push
adc
and
push
adc
push
pusha
and
arpl
call
fisubr
mov
sbb
mov
fmul
xor
xchg
sbb
mov
mov
ret
movs
pop
loope
jp
pop
pushf
pop
add
fidiv
sub
sti
adc
mov
das
(bad)
in
sbb
mov
pop
jge
jmp
pop
cmp
mov
mov
jae
sbb
xor
std
dec
push
sbb
xor
sbb
inc
call
imul
sbb
cmps
fstp
pop
hlt
adc
add
push
dec
(bad)
leave
popa
adc
or
mov
adc
adc
dec
push
sbb
adc
mov
dec
bound
pop
jl
es
xchg
fsubr
xor
fst
(bad)
icebp
push
sbb
pop
sbb
and
add
das
mov
xor
xchg
and
sub
dec
ds
nop
cdq
xchg
xor
fs
(bad)
jno
lods
loop
fild
sbb
je
sbb
push
pop
ror
xor
inc
scas
inc
pop
and
out
nop
sub
ins
mov
aaa
(bad)
jmp
add
sub
dec
ror
xor
jmp
xor
pop
sbb
sub
es
inc
jge
add
push
push
cs
jmp
lods
push
xor
cmp
scas
dec
ss
push
(bad)
ja
jae
push
inc
sbb
add
and
sub
into
mov
ins
retf
push
imul
push
or
adc
and
repz
or
adc
xor
cmps
js
inc
sbb
(bad)
cmp
test
je
test
sub
inc
test
ja
fist
stc
mov
xor
hlt
lock
das
jmp
push
sub
cs
adc
movs
pop
push
push
mov
loopne
cmp
push
mov
inc
cwde
ins
sub
mov
jmp
pop
rcr
ja
lds
ins
in
and
cmp
sbb
sbb
fild
dec
mov
push
and
jne
stos
push
push
aas
jmp
scas
imul
dec
sahf
cmc
add
and
jbe
pushf
add
xor
cmp
push
xor
(bad)
dec
call
inc
and
mov
push
or
or
or
xchg
sbb
and
imul
sub
pop
test
jno
jmp
test
sbb
add
mov
cmp
adc
push
xor
loopne
ja
sbb
pop
cwde
(bad)
add
rcl
or
movs
test
call
inc
pop
or
fsubr
pop
or
out
int3
pop
xor
jmp
cmp
fidiv
(bad)
mov
fbstp
sbb
adc
fsubr
jg
dec
test
add
mov
cwde
ficom
jecxz
xor
or
nop
int3
xor
lods
dec
xchg
mov
pusha
add
inc
in
xor
inc
int3
or
sbb
ins
test
aaa
sbb
pusha
sbb
dec
js
sub
cmps
rol
and
inc
imul
or
xor
test
(bad)
add
out
stos
and
or
fstp
cvtps2pi
cvttps2pi
mov
sti
(bad)
aad
push
pop
and
sub
and
xor
dec
(bad)
cwde
les
push
mov
jno
push
nop
addr16
dec
clc
popa
or
leave
sub
scas
sub
and
cmp
push
clc
add
sub
xor
pop
ds
mov
cmp
adc
mov
enter
or
sar
push
jle
adc
das
fcomp
inc
sbb
dec
lahf
push
adc
imul
ror
or
(bad)
es
sub
mov
pop
pop
and
mov
cs
add
push
cmps
in
jo
jo
(bad)
fcmove
push
xor
sub
rol
push
je
and
pop
jnp
push
push
mov
movs
bound
daa
push
sbb
and
jae
arpl
pop
mov
add
sahf
mov
push
or
xchg
or
add
loope
out
cld
aam
loopne
iret
push
pop
push
push
retf
sub
sub
mov
sub
nop
sbb
push
(bad)
fnstenv
and
out
or
pop
pop
sub
mov
mov
jns
addr16
faddp
loop
(bad)
push
sbb
nop
shl
add
push
sub
push
je
fldcw
adc
(bad)
push
fbstp
ja
ret
inc
hlt
test
and
hlt
xchg
setp
sbb
xor
ret
(bad)
call
shl
add
or
clc
sar
dec
or
adc
call
push
inc
pop
or
pop
mov
push
jmp
push
rcr
pop
xor
iret
push
sub
lea
pusha
add
push
add
mov
pop
inc
cmp
pop
add
pop
lds
push
aad
ss
cs
hlt
mov
test
imul
call
jl
add
add
ret
and
inc
dec
mov
in
mov
add
loopne
fcom
fcom
lea
inc
push
lock
or
enter
shr
jg
retf
xchg
push
lods
push
fisub
sbb
fwait
retf
and
xor
mov
addr16
push
and
adc
mov
xchg
and
aam
add
push
or
adc
imul
push
test
std
mov
xor
xchg
mov
and
xchg
inc
inc
sbb
or
sar
xor
scas
push
lods
ss
mov
add
jecxz
xor
sub
adc
das
add
aam
in
adc
mov
xlat
lea
pop
(bad)
adc
in
clc
ins
sahf
retf
or
mov
leave
mov
repz
push
or
sti
or
push
cmp
ficom
fwait
xor
mov
pop
and
dec
adc
pop
push
adc
cmp
sub
ja
inc
mov
or
inc
or
inc
adc
(bad)
pop
rcr
fldz
and
add
and
cmp
and
or
sub
pop
xor
cmp
fld
scas
fcom
push
xchg
sar
push
sbb
test
and
adc
mov
sub
push
xchg
mov
add
mov
xchg
fsubr
adc
lahf
adc
sub
inc
mov
inc
push
mov
or
mov
pop
movs
jg
or
fmul
sbb
or
ds
data16
lea
fcom
(bad)
fsub
mov
in
sub
xor
adc
pop
mov
adc
sbb
sbb
lahf
test
sub
cmps
jno
add
jle
push
jmp
fstp
add
cmp
jl
repz
push
cmp
jle
cmp
jp
push
cmp
cld
sti
dec
cld
cmp
inc
add
add
inc
jmp
xchg
icebp
mov
mov
ins
popa
retf
mov
xchg
repnz
jecxz
and
cdq
pop
idiv
lock
xchg
enter
cld
adc
cmp
inc
movs
pop
rcr
adc
imul
and
mov
inc
lock
das
add
add
fstp
add
jbe
scas
mov
cmps
mov
outs
xor
(bad)
ret
dec
mov
xchg
and
sbb
cmps
mov
xor
dec
js
and
xchg
pop
dec
xlat
or
mov
cmp
jb
adc
and
xchg
retf
adc
inc
sub
mov
fs
inc
daa
int
cmp
push
js
inc
fwait
mov
dec
outs
loop
jo
mov
loope
mov
adc
ror
mov
xchg
pop
ins
iret
cmp
or
jo
popf
movs
pop
outs
ss
sbb
pop
or
nop
loope
and
pop
pop
pop
and
cmp
xor
and
ins
or
cdq
fs
or
add
shr
jb
cmp
inc
rcl
pop
or
and
pop
mov
popf
je
mov
push
stos
outs
mov
out
pop
adc
adc
dec
pushf
jno
(bad)
add
push
data16
push
sbb
jo
push
enter
sbb
add
shl
sbb
in
jno
add
dec
repz
or
dec
or
dec
leave
mov
les
stos
fs
add
ret
xor
out
(bad)
fist
cdq
or
push
lods
inc
jnp
add
lods
or
add
iret
ret
or
(bad)
aaa
xchg
xchg
inc
push
sbb
or
sub
mov
mov
xchg
popa
mov
inc
mov
inc
push
cmps
add
test
xchg
sahf
sub
inc
fwait
in
mov
mov
and
or
fidiv
pop
pushf
pop
xor
adc
outs
and
leave
adc
and
pop
sub
cs
mov
jae
(bad)
push
push
(bad)
jmp
stos
and
gs
adc
fcomp
add
cmc
push
in
jo
std
cmp
stos
push
add
adc
ret
xchg
fs
or
push
and
add
add
add
nop
push
inc
sbb
xor
shr
(bad)
leave
xchg
jb
adc
adc
ins
or
aas
pop
sub
adc
add
sbb
xchg
adc
sbb
xchg
sbb
js
mov
and
stos
loopne
mov
loopne
push
add
xchg
(bad)
sub
(bad)
and
xchg
jge
pcmpeqd
retf
mov
sbb
push
loope
push
ret
(bad)
pusha
pop
sbb
lods
call
shr
out
les
inc
sahf
rol
sbb
mov
shr
imul
sbb
adc
dec
push
rcl
and
add
test
enter
adc
add
sbb
and
add
sbb
cli
xor
push
mov
je
shr
fsub
fsubr
mov
cmps
xor
in
rol
sbb
inc
outs
xor
or
add
jb
add
add
dec
aaa
and
push
mov
mov
pop
aad
inc
fist
sub
dec
xchg
scas
adc
icebp
push
repnz
(bad)
cld
je
mov
cmp
pminsw
jne
rcr
nop
es
pop
mov
shl
or
sub
push
adc
push
ret
aaa
int3
inc
jge
inc
and
inc
jbe
xchg
xchg
or
jbe
and
inc
mov
std
lods
jbe
jb
test
test
adc
jae
outs
sub
push
clc
push
mov
pop
les
xor
xchg
gs
or
pop
in
push
popa
stos
cmp
jne
fwait
mov
test
imul
ins
cmp
push
popa
xchg
mov
sub
add
adc
pop
xlat
cmp
(bad)
fild
lea
cdq
xchg
dec
add
loopne
adc
xchg
push
icebp
pop
dec
daa
fadd
sub
xor
enter
add
repz
push
pop
clc
or
stos
(bad)
xchg
dec
add
push
adc
dec
cmp
jg
jo
add
adc
lods
popa
push
add
imul
rcr
pop
mov
outs
lahf
cwde
fisub
or
adc
push
lea
mov
and
add
sbb
and
lahf
dec
push
xchg
rol
inc
xor
iret
adc
jle
ffreep
jecxz
add
ins
cmp
int3
fild
adc
loopne
inc
adc
es
mov
test
jns
push
xchg
inc
add
mov
inc
push
pop
cmps
sbb
mov
xor
in
pusha
xor
lods
pop
rcr
or
or
movs
loop
(bad)
fmul
sbb
or
xchg
sub
wbinvd
std
fisttp
(bad)
dec
fld
or
movs
std
loopne
les
nop
add
and
fld
push
sbb
dec
ja
sbb
fstp
and
mov
mov
push
pop
push
pop
pop
imul
mov
jo
(bad)
sti
idiv
dec
pop
and
loope
fsubrp
pop
fs
push
or
pop
mov
repz
push
repnz
jl
int3
mov
in
push
in
in
leave
inc
or
push
push
cs
or
cmp
ja
inc
ror
mov
sub
pop
int3
in
not
mov
sub
aaa
inc
cmps
xor
inc
xchg
sub
sub
pop
inc
inc
(bad)
dec
sub
xchg
add
scas
or
ffreep
jbe
shl
stos
(bad)
adc
dec
arpl
mov
jge
sahf
sbb
je
lahf
cmp
into
dec
dec
mov
add
xor
ins
dec
or
cmp
mov
lods
jbe
fmul
(bad)
mov
cdq
jnp
ja
push
and
dec
xor
mov
or
adc
js
sub
and
mov
pop
push
in
and
adc
dec
les
dec
iret
arpl
loope
fcmovne
daa
xor
jnp
xchg
add
imul
mov
int
xchg
xor
clc
add
pop
pop
mov
out
or
lock
sbb
leave
shld
add
adc
jb
ja
lea
push
push
js
pop
push
je
call
fild
push
leave
adc
mov
push
adc
or
nop
(bad)
push
push
xor
sbb
sbb
call
push
push
push
sar
mov
lods
add
pop
pop
enter
int3
leave
pop
add
cmp
sub
sbb
adc
cmps
rol
push
mov
cmovns
ja
cmp
test
adc
add
and
dec
pop
mov
adc
sub
cmp
xchg
cld
pop
or
jle
out
inc
(bad)
cmp
jne
fdivrp
mov
inc
cld
cmp
mov
push
jl
mov
aad
sub
test
pop
(bad)
sti
jg
stc
(bad)
mov
mov
or
mov
cld
mov
retf
push
push
push
jp
push
push
push
jp
mov
pusha
inc
push
add
ss
or
inc
jle
js
mov
or
xchg
mov
les
aam
icebp
mov
mov
adc
pop
(bad)
mov
ss
adc
add
sbb
in
jle
ja
sbb
sub
sbb
scas
mov
fwait
jp
lock
pop
and
mov
add
je
cmovo
jns
dec
pop
or
sbb
jle
movs
xchg
pop
push
pop
iret
inc
imul
or
pop
test
rcl
xchg
sub
xchg
push
mov
push
popf
push
push
sub
xchg
adc
mov
inc
pushf
into
jne
adc
mov
imul
fadd
pop
push
xchg
lock
ror
lods
xor
mov
mov
loopne
push
int
adc
add
ins
ret
lods
aad
and
cmp
imul
pop
test
into
gs
lds
dec
inc
lods
je
retf
xchg
or
pop
lock
sub
xlat
cmp
and
lods
push
or
dec
sbb
pusha
push
jno
lods
mov
pop
adc
cwde
push
xchg
rcr
and
imul
fld
ds
scas
pop
ret
pop
pop
dec
cmps
nop
add
aam
mov
xchg
ja
and
adc
rcl
xchg
and
xor
or
or
inc
sbb
fwait
(bad)
retf
xchg
xor
push
mov
lahf
add
dec
rol
push
dec
mov
add
push
adc
lods
and
(bad)
jb
push
add
in
les
mov
xor
fistp
jo
add
outs
pop
add
bnd
mov
add
in
je
js
dec
sbb
add
add
repnz
mov
dec
add
jecxz
mov
xchg
push
repz
int3
test
outs
inc
push
add
test
or
loopne
jg
and
or
(bad)
inc
retf
mov
pop
aam
cmp
dec
pop
mov
psrad
add
ret
mov
movs
(bad)
mov
or
inc
pop
pusha
rcr
test
adc
push
ja
sub
xchg
ins
mov
jno
leave
pusha
jmp
mov
mov
adc
ins
push
icebp
and
jno
imul
add
jg
je
or
xchg
nop
add
cmps
std
fcmovnbe
sub
dec
je
add
sbb
dec
(bad)
lock
jo
dec
jmp
push
out
or
push
dec
loop
or
mov
out
or
jg
out
push
shl
mov
sar
nop
or
mov
dec
scas
push
and
sub
push
es
mov
cmp
test
inc
arpl
jp
push
imul
cmp
nop
push
jo
mov
fadd
jnp
jb
and
nop
xchg
adc
and
out
adc
push
pop
enter
add
push
push
sbb
mov
push
cmp
pop
push
cmp
nop
sub
add
lahf
adc
push
cmp
inc
push
cmp
mov
xor
add
push
je
jb
and
rcl
push
mov
ret
(bad)
jmp
ins
cmc
push
dec
gs
rcl
sbb
repz
inc
dec
pop
arpl
cmp
repz
stos
mov
leave
repz
repz
out
sti
out
sahf
out
nop
sub
aaa
inc
dec
push
pop
imul
xchg
in
movs
xchg
ss
das
bound
scas
popa
pop
sbb
push
std
aaa
add
scas
fucom
icebp
mov
mov
push
push
xchg
outs
add
adc
popf
nop
sti
das
je
xor
out
cmp
lea
scas
int
rol
add
les
imul
or
movs
xchg
test
jmp
jl
mov
shr
xchg
cmp
or
inc
mov
or
ja
fwait
xchg
call
fldz
fcomp
and
cmp
ja
ficomp
xchg
test
loope
movs
(bad)
sbb
movs
mov
arpl
int
pop
adc
sbb
cmp
cmp
mov
jl
jge
retf
out
push
dec
test
lods
adc
bound
cld
add
push
sbb
aas
repz
les
inc
ja
ror
adc
loope
cmp
jge
out
mov
cmp
push
cld
lock
movs
out
add
jp
scas
cmps
push
cmc
popf
add
pop
stc
ficom
test
ja
imul
rol
or
mov
mov
mov
xchg
mov
push
ret
gs
push
sbb
das
push
mov
adc
lock
or
xor
fild
or
enter
or
mov
adc
xchg
js
mov
and
dec
sub
pop
(bad)
fdiv
mov
and
stos
and
or
cmp
outs
fadd
pop
fcomip
push
mov
mov
xor
je
inc
push
or
or
fs
ins
mov
push
aad
xchg
and
inc
leave
adc
pop
sbb
les
repz
pop
lea
jo
add
sbb
push
add
mov
cmp
pop
xchg
test
shl
adc
xchg
mov
mov
cmp
jecxz
cmc
jb
mov
int3
fiadd
sub
push
xchg
xchg
sar
dec
div
push
add
mov
mov
xor
or
lods
and
sub
cmp
mov
fwait
pop
cmp
push
sub
jo
test
rsqrtps
mov
or
bnd
xchg
adc
jp
adc
or
mov
xor
sub
push
mov
xor
jle
icebp
scas
jecxz
mov
xor
sbb
enter
dec
xor
das
ins
call
jl
dec
call
dec
call
add
in
jae
add
mov
mov
sbb
mov
cdq
mov
hlt
push
int3
jl
mov
test
add
cmp
or
retf
cmp
jns
xlat
movs
inc
xor
add
in
cmp
mov
pusha
mov
mov
sub
or
pushf
js
stos
push
nop
and
in
jbe
test
sbb
jmp
shl
sbb
sbb
sbb
nop
stos
shl
sbb
push
cdq
fs
sbb
in
mov
push
into
push
ror
adc
sub
or
sbb
sbb
pop
aam
movs
sub
sub
sbb
mov
pop
inc
and
jmp
pop
mov
shl
xchg
inc
adc
pop
(bad)
gs
pusha
int
mov
mov
xor
cmp
pop
push
ficomp
push
retf
mov
into
pushf
xchg
xchg
loop
push
jle
enter
adc
mov
jb
sbb
aaa
rcr
jp
xchg
imul
dec
movs
mov
mov
(bad)
int3
cmp
sub
sub
or
cmp
movs
aas
ret
dec
int3
mov
push
push
inc
cmps
pusha
mov
and
mov
nop
mov
aaa
and
and
ss
mov
adc
daa
cmp
sahf
dec
sbb
push
inc
push
cmc
sub
inc
push
pusha
or
sub
cmovp
add
jo
test
outs
mov
adc
popa
inc
jno
movs
rol
ret
arpl
sbb
inc
xor
dec
loop
mov
nop
mov
sbb
push
outs
inc
sbb
push
jmp
push
sub
pusha
adc
outs
aaa
je
stos
mov
and
sub
mov
adc
and
ror
mov
imul
xchg
in
add
pop
dec
cmp
pop
je
mov
int
pop
push
mov
adc
pop
adc
mov
das
xchg
pop
ret
jecxz
sbb
out
add
pop
sub
test
jne
or
sar
jecxz
pop
mov
push
fmul
add
add
movs
pop
sbb
mov
sbb
mov
inc
lods
out
repz
ficom
test
pop
fwait
jo
mov
inc
xor
xchg
psubw
push
push
les
push
xchg
pop
jno
rol
mov
ret
stos
xchg
jne
adc
in
and
pop
ficomp
adc
ins
enter
inc
ror
jge
enter
iret
mov
mov
jl
imul
enter
add
loopne
test
or
mov
rcr
push
call
xchg
setl
pop
repnz
adc
movs
adc
cmc
adc
push
sbb
leave
push
add
and
dec
adc
lock
push
es
push
call
int3
push
and
out
and
loopne
cmps
push
or
(bad)
test
pop
sbb
in
jecxz
or
fdivr
neg
lods
fsubr
sbb
push
lods
sbb
test
imul
sub
dec
add
nop
fwait
push
mov
rcr
aaa
adc
sub
mov
mov
and
mov
lock
xchg
adc
lea
test
dec
mov
and
movs
adc
sub
xor
xlat
jge
test
push
push
inc
dec
and
int
js
movs
mov
pop
pop
push
sub
inc
cmp
sub
mov
inc
push
in
test
xchg
mov
test
rcr
pop
and
je
test
or
pusha
dec
xor
pop
pop
ret
es
add
add
lods
push
arpl
inc
or
(bad)
(bad)
or
sbb
sbb
add
call
add
aad
imul
test
sbb
popf
in
add
and
shl
adc
test
mov
or
shl
jo
inc
xor
jb
jbe
in
and
xchg
dec
in
rol
jne
dec
mov
adc
add
mov
neg
dec
mov
mov
lods
add
mov
shl
and
(bad)
cmp
adc
outs
or
aad
sbb
sbb
div
xor
push
cmps
test
sbb
data16
sbb
adc
mov
or
imul
mov
outs
add
jle
sbb
inc
out
and
psllw
jnp
sub
xchg
mov
mov
mov
fsub
adc
ins
popa
scas
ins
lods
sub
push
xor
shr
adc
ret
sbb
mov
mov
mov
dec
dec
mov
sub
inc
xchg
(bad)
mov
and
xchg
fdiv
shr
inc
leave
dec
sub
sub
adc
inc
jmp
adc
rcl
sbb
(bad)
sbb
sbb
jbe
or
shr
sbb
or
sbb
push
movs
push
add
push
sbb
mov
xchg
call
xor
mov
sub
dec
dec
rol
push
hlt
push
mov
xor
or
and
add
sbb
das
and
movs
shr
adc
stos
sub
push
pop
es
mov
push
pop
daa
push
fs
sub
movs
cmp
sub
movs
dec
enter
lods
loopne
in
dec
sub
sub
adc
pushf
fsubr
fcmovbe
movs
pop
cs
push
push
dec
ins
movs
lea
mov
mov
add
fwait
test
mov
adc
add
mov
test
pop
inc
push
cmps
pop
push
aad
xor
mov
loop
dec
popf
iret
pop
jo
das
not
icebp
inc
cs
fiadd
movs
cdq
nop
data16
sub
imul
cdq
nop
inc
sub
fs
push
and
imul
and
call
cdq
nop
mov
call
xchg
adc
sbb
sbb
js
test
les
and
aam
lods
add
rcl
push
vprotb
sahf
adc
push
jge
mov
add
test
add
xchg
in
or
add
les
pusha
mov
dec
(bad)
out
pop
sbb
cs
push
or
dec
test
call
fcom
push
stos
jnp
push
lds
push
inc
ret
push
or
test
sbb
dec
adc
(bad)
div
pop
jecxz
repnz
movs
add
pop
sub
and
or
push
sub
pop
ror
jg
jo
inc
pop
adc
dec
dec
sbb
and
or
jns
mov
int
inc
sub
ror
pop
icebp
cwde
popa
add
xor
mov
clc
pop
call
scas
ss
xchg
inc
jbe
leave
add
mov
inc
or
cmp
push
shl
pop
add
pusha
jl
dec
push
ds
clc
cmp
lahf
daa
call
icebp
inc
push
jmp
ss
adc
push
cmp
pushf
fcom
push
mov
or
test
cmp
pop
sbb
test
sub
addr16
push
or
sub
scas
cmc
addr16
retf
lods
imul
or
popf
pop
cmp
std
mov
jbe
mov
mov
push
jmp
pusha
and
(bad)
jmp
cli
inc
add
clc
sub
aad
and
mov
jmp
fistp
inc
fstp
adc
inc
xor
aaa
sbb
cmp
mov
xor
jae
and
sbb
pop
adc
and
pusha
jmp
clc
loope
push
enter
jbe
inc
mov
jb
mov
pop
pop
adc
mov
xchg
inc
adc
push
add
jb
adc
enter
jno
repnz
cmps
mov
js
les
jle
mov
push
sbb
xlat
jbe
mov
xchg
cmp
jne
inc
add
rol
ret
jl
xchg
add
pop
sbb
sub
mov
cmp
jne
mov
inc
sbb
div
lods
repz
jae
inc
adc
adc
and
je
mov
add
or
dec
rol
mov
jmp
out
mov
outs
push
stos
sub
xchg
inc
or
movs
xchg
cmc
xor
or
mov
or
xor
pop
sbb
or
mov
add
mov
fcmovu
pushf
cmp
xlat
aad
or
and
lea
jmp
mov
push
out
sub
pop
push
and
jmp
test
and
leave
sbb
clc
xchg
icebp
or
sbb
sbb
inc
sbb
add
push
inc
jbe
(bad)
xchg
pop
lea
ret
sbb
test
out
cmps
sbb
jno
popa
or
or
jmp
xchg
xor
lahf
stos
xchg
adc
jmp
aam
adc
imul
push
mov
cmp
ds
jl
or
ud0
mov
cmp
or
and
mov
mov
movsx
shr
mov
movs
test
push
add
pop
dec
add
nop
inc
mov
leave
jne
pop
pop
xchg
cdq
pop
movs
xchg
je
and
pop
and
dec
or
push
inc
sub
mov
cmp
(bad)
mov
hlt
ficom
push
lods
add
push
mov
aas
push
imul
jmp
dec
daa
inc
and
pop
jbe
enter
add
sbb
shl
sti
add
adc
mov
pop
cmc
xor
mov
dec
sbb
mov
xchg
sbb
or
je
dec
and
add
xchg
and
mov
jnp
(bad)
push
rcl
dec
jmp
aaa
xchg
sbb
sub
lods
fsubr
and
dec
jge
adc
pop
fs
lock
pusha
push
cmp
push
push
shr
xor
sub
ficomp
aaa
jno
mov
pop
pop
bound
add
or
push
adc
push
lods
push
mov
rcl
mov
data16
xchg
ficomp
mov
inc
je
mov
add
leave
mov
inc
mov
dec
pushf
xchg
adc
fcomp
sub
sub
or
cmp
xchg
test
and
and
leave
inc
or
out
xchg
jl
pop
add
mov
enter
lock
das
mov
loope
test
push
in
lock
dec
mov
pop
sbb
(bad)
and
and
fcomp
jmp
pop
lock
and
retf
and
mov
repnz
or
or
int3
repnz
std
or
gs
(bad)
idiv
adc
enter
nop
xor
and
jmp
cmp
inc
add
xor
inc
or
mov
leave
or
aad
call
sub
popa
xor
test
jns
lea
cmp
je
pop
xor
and
daa
daa
adc
addr16
imul
xor
sub
xor
or
cmp
aam
xor
add
movs
outs
xor
rcl
imul
mov
push
cli
dec
lea
sub
dec
xor
adc
mov
scas
shld
add
pop
or
push
fadd
and
hlt
fld
fdivr
ror
rcr
les
in
adc
js
add
add
jno
sub
xor
jecxz
xchg
sub
pushw
bound
mov
push
addr16
xchg
pop
into
cli
adc
mov
es
or
push
fcom
and
jne
fsub
popa
add
js
mov
sbb
push
inc
leave
enter
mov
push
scas
sub
pop
lods
pushf
loopne
fcomp
cmp
gs
add
mov
cdq
jb
add
jecxz
imul
je
sub
enter
mov
iret
cdq
ins
sbb
outs
or
or
and
mov
test
xchg
mov
xor
je
icebp
movs
sbb
and
in
lock
jle
imul
xchg
icebp
ror
repz
sub
loope
lea
add
or
out
test
test
jmp
mov
repnz
test
dec
fadd
and
and
scas
jne
cmp
dec
in
and
adc
push
mov
push
xchg
cmps
mov
xor
jmp
bound
push
lahf
pop
push
cmp
adc
or
pop
inc
in
push
pop
(bad)
bound
lea
or
mov
lea
mov
ret
xor
xchg
add
inc
dec
and
add
and
and
add
mov
sub
cld
ds
jle
xor
lods
test
and
push
mov
mov
or
cmp
xchg
outs
imul
or
add
push
jmp
loop
push
sbb
sub
lock
out
push
mov
loop
mov
pop
stos
lods
sub
mov
mov
push
dec
pop
(bad)
cmp
test
push
sub
cdq
xor
push
mov
je
push
rcl
in
push
push
je
mov
je
out
dec
icebp
sub
sbb
jmp
in
jbe
test
mov
sub
mov
inc
hlt
in
ror
sahf
nop
xchg
or
aad
add
loopne
loop
shr
jecxz
xchg
sbb
sbb
jno
and
sub
in
aad
sub
adc
add
rol
mov
xor
jne
je
inc
scas
xchg
xor
sar
test
js
pusha
maxps
inc
test
hlt
add
sub
das
pop
sub
inc
fcmove
div
ss
iret
test
adc
xor
mov
outs
int
jbe
xchg
cmp
imul
test
rol
mov
fild
div
(bad)
jno
adc
sbb
dec
or
lea
adc
shl
mov
retf
imul
pop
not
mov
xchg
add
cmp
lock
in
mov
pop
mov
or
dec
cmp
rol
mov
add
fidivr
mov
mov
lods
xorps
or
pushf
and
clc
inc
das
(bad)
(bad)
mov
(bad)
rcr
mov
xor
mov
mov
push
sahf
fcom
dec
and
adc
shl
cmps
dec
in
cmp
test
jne
es
loopne
xor
movs
jno
in
inc
dec
add
mov
sbb
add
jg
es
test
je
xchg
and
xor
dec
or
mov
je
add
sub
push
push
stos
add
adc
sbb
xchg
xchg
sar
addr16
sbb
or
mov
sbb
xchg
scas
push
mov
pop
not
test
add
push
and
push
cmp
dec
mov
mov
jle
test
fsub
mov
scas
adc
add
jb
clc
mov
mov
inc
push
pop
ins
rcr
hlt
add
pop
push
inc
sbb
mov
ret
fadd
jmp
fiadd
add
dec
mov
shl
jbe
push
push
cmp
add
enter
sbb
outs
mov
fld
push
in
daa
adc
test
lea
hlt
mov
mov
sub
aaa
adc
adc
jne
daa
bnd
repz
mov
jne
or
jne
sub
push
iret
or
push
mov
cmp
xor
in
rcl
fcomp
xchg
rcl
pop
adc
cmps
or
push
lea
mov
jl
inc
dec
(bad)
cmp
inc
stos
inc
cld
data16
fst
mov
hlt
mov
pop
je
pop
hlt
lea
loop
mov
hlt
pusha
mov
xor
cmp
mov
cmp
and
or
xchg
lea
sub
xchg
pop
ret
int3
int3
push
and
dec
fld
sbb
or
stc
int3
movs
mov
std
mov
mov
(bad)
jne
inc
(bad)
cmp
adc
loop
push
add
push
adc
adc
sub
fcomp
loopne
rcr
ds
inc
lea
jbe
adc
js
pusha
jo
popf
add
mov
jl
icebp
pusha
ss
sbb
push
ss
jl
fnstenv
and
pop
inc
loopne
or
xor
and
push
xchg
ins
mov
rol
mov
mov
jmp
or
pushf
xor
(bad)
pusha
pusha
movs
sbb
pop
ror
xchg
fs
jb
pushf
push
jne
or
and
mov
fs
call
dec
ficom
mov
add
idiv
mov
push
clc
sar
and
test
jg
outs
mov
mov
mov
jae
mov
jbe
(bad)
shl
or
(bad)
fmul
(bad)
mov
or
or
into
mov
sub
movs
pop
and
test
les
xchg
fld
stos
dec
pop
inc
fsub
xor
fsub
in
ins
add
and
test
inc
mov
fs
push
or
test
and
mov
movs
test
fmul
cdq
call
push
and
or
mov
jbe
xor
sbb
dec
mov
xchg
mov
sti
jnp
push
in
ins
push
add
push
ins
xor
lahf
scas
mov
push
sub
mov
or
lods
add
push
mov
in
and
xchg
dec
pop
pop
pusha
sbb
jmp
pop
push
pop
ret
push
xor
clc
jecxz
add
push
jmp
xor
inc
in
test
sbb
fisttp
push
scas
test
div
add
sar
and
xor
pop
(bad)
fs
dec
sbb
adc
inc
mov
mov
mov
pop
inc
adc
sbb
inc
retf
mov
adc
enter
sub
and
scas
xchg
pop
xor
push
sbb
call
and
daa
adc
inc
rol
ss
sbb
jb
jno
sub
dec
xchg
mov
inc
or
adc
inc
arpl
mov
daa
and
add
sub
xor
fiadd
xchg
cmp
enter
push
lea
ret
inc
push
das
push
dec
imul
jnp
cmp
push
push
mov
je
inc
call
lods
inc
dec
arpl
icebp
pop
xor
dec
push
jmp
sbb
imul
rcr
mov
add
add
and
loope
shr
cmc
pop
adc
cmp
and
js
dec
push
jae
jg
jmp
jae
je
push
mov
pop
lea
(bad)
xchg
xor
xor
sbb
fdivr
loopne
fcmovnbe
xor
jo
test
imul
lock
sbb
neg
int
cmp
leave
mov
adc
adc
aas
dec
xchg
mov
stos
mov
or
(bad)
push
adc
push
adc
add
loop
imul
sbb
jnp
cmp
pop
test
les
sub
ret
xor
je
popf
or
or
(bad)
in
call
pushf
add
or
cmp
sub
sbb
pop
js
mov
or
enter
aam
test
lgs
fisttp
jecxz
mov
pop
inc
inc
pop
popa
push
lock
data16
sub
dec
pop
inc
std
xor
pop
push
test
fstp
sbb
mov
test
cmp
dec
ret
or
sub
mov
mov
inc
sub
stos
cmc
mov
inc
and
pop
pcmpeqd
fwait
add
imul
xchg
mov
sub
xor
imul
leave
fadd
add
ins
sbb
or
(bad)
push
push
xor
test
push
add
xor
cmps
dec
je
cs
push
inc
add
inc
outs
rol
or
push
jne
pop
scas
mov
ret
inc
cwde
mov
and
lahf
outs
mov
jne
mov
jmp
xor
jo
push
push
adc
popa
mov
jbe
xchg
adc
out
rcl
xor
sbb
adc
rol
ret
add
push
add
shr
mov
dec
ret
(bad)
adc
add
add
dec
xchg
mov
clc
lds
js
inc
je
and
pop
push
mov
ja
jmp
stos
cmp
add
add
or
ja
in
les
mov
dec
pop
lock
xchg
clc
cmps
xchg
pop
add
inc
xchg
pop
add
push
adc
or
push
or
test
loope
popa
sub
sub
stos
jbe
stos
loopne
jno
pop
call
mov
out
je
je
lock
call
pop
lock
add
or
xor
add
xchg
mov
(bad)
sub
add
xor
repnz
ds
lods
fnstenv
shr
sbb
push
push
fisttp
push
adc
arpl
nop
aam
xor
xchg
stc
adc
cmp
lods
cmps
movs
add
mov
call
mov
jl
lds
mov
sbb
aad
sub
addr16
add
jmp
jecxz
dec
int
sahf
inc
das
inc
or
and
fmul
outs
and
mov
cld
pusha
cwde
or
in
inc
sub
push
push
push
push
bound
jmp
add
adc
inc
push
mov
pop
adc
ds
cmp
in
add
push
add
loope
pop
or
out
mov
mov
aaa
aas
sbb
popa
mov
and
jl
js
push
and
mov
je
out
(bad)
movs
ja
or
test
xor
cmp
je
aas
mov
dec
or
jbe
rol
(bad)
sbb
test
ret
clc
aas
lods
dec
push
sub
sub
and
sbb
adc
pop
loopne
js
hlt
jae
movsx
sbb
cmps
stc
movs
fld
xor
lahf
mov
sbb
xchg
or
sbb
pop
jmp
jg
mov
enter
ret
inc
(bad)
(bad)
inc
add
or
jecxz
or
add
inc
cmp
jl
cmp
ss
mov
test
cdq
and
popa
xchg
pop
add
sar
add
jae
push
in
hlt
clc
xor
add
sub
cmp
jecxz
sbb
inc
scas
cli
adc
jne
enter
adc
or
fidiv
fs
inc
sbb
ins
pop
pop
sahf
repz
xchg
or
lods
and
push
inc
xchg
loop
pop
ficom
stc
sbb
mov
rol
jo
shld
lea
or
rol
rol
scas
adc
(bad)
sbb
or
retf
mov
cmp
jl
mov
aas
mov
xchg
add
or
mov
js
out
add
mov
jne
out
inc
ja
add
rol
or
repnz
jl
out
add
or
sub
mov
adc
jae
jmp
xchg
mov
aaa
test
and
xor
push
or
adc
ins
scas
push
sbb
ficomp
push
dec
or
push
dec
sbb
mov
add
in
push
xor
sbb
aam
mov
in
ret
sbb
push
repnz
cmc
mov
add
loope
icebp
fs
or
not
and
stos
sub
outs
dec
or
xchg
xchg
retf
hlt
add
nop
je
add
sub
das
sub
jecxz
lock
pop
push
jmp
leave
loopne
lahf
call
retf
or
jge
sbb
lahf
cmc
out
fsubr
addr16
outs
pop
mov
stc
jle
daa
lock
push
dec
dec
push
add
push
push
les
add
clc
mov
jbe
add
push
movs
jae
dec
mov
add
xchg
cmp
retf
add
jle
push
and
mov
stos
movs
(bad)
push
and
stos
lds
jns
retf
push
jo
jnp
test
int3
rol
xchg
pop
push
xor
aaa
lea
mov
sbb
cmp
lea
jo
dec
adc
push
and
test
mov
xor
ror
mov
movs
fwait
inc
pusha
pop
cmp
add
add
jnp
sbb
jmp
sbb
popf
frstpm(287
mov
xchg
sbb
sbb
mov
push
cmp
call
dec
xchg
mov
les
test
arpl
(bad)
das
push
(bad)
mov
dec
rcl
sbb
dec
push
ret
add
and
jl
dec
push
push
sub
dec
repz
int3
add
(bad)
fcomp
cs
daa
jno
or
or
ror
inc
mov
aaa
push
push
test
inc
shl
adc
aam
fs
shr
jbe
sbb
jl
mov
push
push
call
inc
mov
mov
xor
push
sbb
rcr
pop
jne
or
jmp
mov
dec
dec
and
push
sti
push
ret
xchg
es
pushf
fwait
sbb
cmp
xor
add
int3
int3
add
mov
les
cmp
cmp
sahf
or
push
pop
cmp
sar
fldenv
repz
je
dec
pop
test
arpl
(bad)
(bad)
adc
test
push
ret
cli
and
xchg
das
lods
mov
pushf
adc
xlat
push
aaa
jge
jo
das
or
jo
and
and
inc
les
mov
fs
xchg
sub
or
lock
les
mov
push
add
cmc
retf
rcr
dec
aam
in
loopne
int3
ja
loope
mov
clc
jl
pop
mov
push
cwde
loopne
fdivr
pop
jge
sub
add
js
push
fistp
push
je
cmp
daa
packsswb
mov
add
test
cli
dec
inc
loopne
jmp
mov
out
test
sub
clc
jo
dec
out
test
les
fsub
sbb
retf
mov
ret
nop
inc
loope
cli
or
shl
sbb
jle
sub
jnp
shl
sub
dec
dec
test
cmps
pop
aas
push
xchg
xor
push
addr16
xchg
je
add
mov
inc
add
lods
(bad)
xchg
test
jo
iret
adc
mov
ins
jmp
jne
shl
iret
cmp
jle
pushf
in
out
sub
add
xor
sub
push
add
call
cmps
xchg
cmp
sub
adc
aad
push
push
scas
inc
inc
mov
outs
jecxz
inc
push
(bad)
pop
fwait
and
(bad)
xor
lock
je
bound
jmp
xchg
mov
mov
jg
mov
mov
and
out
add
mov
clc
xchg
rol
das
fist
pop
mov
mov
add
xchg
add
xchg
pop
push
or
fmul
clc
mov
adc
add
movzx
mov
inc
mov
mov
cmp
push
call
clc
add
int
mov
cdq
sar
sub
push
icebp
or
cmp
int
xchg
add
mov
int3
pop
add
push
mov
nop
and
xchg
nop
add
or
cld
push
leave
push
xor
push
cld
or
mov
inc
call
jne
pop
mov
mov
scas
pushf
mov
(bad)
into
and
pop
or
sbb
mov
ins
(bad)
adc
into
push
sahf
pop
add
push
mov
fwait
enter
xor
push
nop
cmp
hlt
rcl
gs
push
add
in
fs
retf
in
mov
push
int
cli
ret
sub
movs
and
adc
sub
cli
inc
mov
mov
cmp
push
enter
in
pop
daa
fbstp
cmps
retf
pop
or
scas
and
sbb
mov
popa
and
push
mov
add
loope
loopne
cmc
test
loop
dec
mov
pop
lahf
popf
inc
xor
and
adc
pop
or
add
and
and
push
daa
or
sbb
push
sub
test
hlt
test
mov
mov
mov
mov
clc
jns
add
rcl
xchg
adc
lds
jb
cwde
mov
or
dec
cld
stc
sub
ss
lea
cmp
jbe
add
sbb
cmp
jbe
mov
sbb
sbb
cli
enter
sbb
repnz
into
aas
ins
mov
ins
leave
or
cmp
int3
push
adc
div
inc
dec
xor
xchg
mov
pop
enter
or
cmps
push
cmp
or
xor
daa
push
test
stc
push
inc
push
push
push
cmp
cwde
inc
push
(bad)
jnp
and
ins
test
jp
add
mov
shr
test
pop
ret
and
nop
arpl
adc
push
mov
in
lods
test
sub
stc
pop
jge
lahf
cmc
pop
sub
push
add
call
cli
mov
xchg
xchg
jns
sti
lea
jo
mov
loop
push
push
movs
jns
fadd
add
in
enter
mov
test
mov
cmps
mov
or
add
fs
mov
into
push
add
xlat
jnp
xor
(bad)
jmp
js
test
and
inc
lods
sbb
mov
push
mul
cmp
aas
jb
and
sub
add
mov
adc
mov
movs
cdq
jge
leave
pop
in
adc
and
int
xor
mov
cmp
sbb
and
jp
ins
pop
loope
add
add
(bad)
and
or
sub
mov
jecxz
push
mov
and
arpl
shl
xlat
loopne
out
test
xchg
mov
xor
int3
iret
sbb
out
and
inc
or
jle
ins
and
xor
shl
and
lock
xchg
mov
jecxz
xor
fnstsw
inc
xchg
adc
jo
and
and
enter
int
mov
and
movs
pop
sbb
sar
or
cmp
lods
push
stos
and
ret
shr
(bad)
jle
add
or
fst
scas
add
push
js
jl
aam
ja
xchg
shr
add
ror
stc
add
shl
popf
movs
pop
je
inc
(bad)
outs
dec
out
out
fdiv
mov
je
or
imul
hlt
es
adc
test
mov
retf
maxps
das
add
mov
add
aam
(bad)
out
mov
and
adc
dec
fst
out
fwait
mov
aas
push
mov
and
jge
cmp
mov
jo
cmp
outs
pop
cmp
adc
inc
add
popa
fs
(bad)
push
sti
or
or
sub
add
loop
mov
sub
(bad)
or
push
pop
je
bound
mov
pop
and
es
and
xor
das
popf
cwde
jp
loop
mov
xchg
ds
add
mov
add
sub
xor
add
xchg
call
dec
dec
(bad)
repnz
sbb
jo
out
int3
or
jmp
push
sub
inc
inc
sub
(bad)
mov
and
aas
add
fisttp
jmp
ret
mov
jmp
push
dec
mov
adc
xor
stos
or
les
add
xchg
(bad)
mov
push
push
push
test
imul
out
lock
push
xchg
push
push
ret
lahf
imul
cwde
jo
mov
push
push
and
cmp
fidiv
cmp
jbe
sub
sub
cmp
pop
push
sbb
pop
outs
and
ret
mov
mov
add
sub
adc
retf
(bad)
out
xor
nop
cmps
or
push
add
sub
bound
xor
jmp
or
pop
clc
jne
mov
cmp
inc
push
xor
mov
movs
dec
(bad)
mov
mov
add
cld
out
dec
cld
rcl
or
adc
fist
pop
movs
jg
jmp
push
mov
add
push
adc
mul
pop
xor
push
call
cmp
sbb
xchg
and
sbb
sub
fisttp
mov
ret
push
mov
ret
movs
aam
ss
push
adc
add
ror
dec
mov
cmp
jae
inc
jmp
add
or
icebp
push
test
lock
push
scas
movs
(bad)
push
xchg
fisubr
sub
mov
add
push
add
cmc
outs
mov
sub
addr16
sub
enter
dec
mov
sub
push
mov
xor
push
inc
loope
dec
stc
pop
test
sub
mov
movs
add
add
mov
test
sub
jnp
ret
add
pop
add
xchg
bound
shl
push
xchg
out
test
shl
or
ins
pop
jmp
js
lea
sub
adc
adc
movs
cmp
sbb
sub
mov
pop
mov
jecxz
daa
ss
pop
jne
inc
or
sahf
test
ret
add
xor
pop
loopne
add
pop
jge
mov
movs
or
lods
test
mov
or
lods
test
jle
lea
push
or
sahf
mov
push
or
pusha
mov
inc
inc
xor
sub
sub
lock
ins
addr16
dec
xor
clc
adc
rcl
mov
xchg
and
push
or
mov
dec
mov
ins
add
and
sbb
lahf
jo
ror
shr
sub
cmp
pop
lods
sahf
pop
mov
ror
xchg
ror
push
xor
mov
dec
cmp
icebp
jne
xor
xchg
inc
ins
push
push
aam
cmp
mov
cmp
stos
dec
sbb
aam
lahf
add
movs
add
add
icebp
aam
cli
add
imul
adc
mov
not
cwde
fidivr
inc
das
adc
(bad)
sub
pop
mov
(bad)
or
enter
xchg
push
or
xchg
enter
ror
and
and
xor
cwde
push
sub
mov
arpl
fcomp
cmp
sub
sti
sub
les
inc
cdq
push
mov
and
ret
ret
in
ret
int3
pop
ret
jmp
cmps
xor
adc
or
jne
movs
push
jb
mov
ja
neg
xchg
jecxz
jle
pop
sub
cmp
rcr
cs
inc
mov
loope
or
and
test
cld
push
ret
int3
add
shl
adc
or
stc
push
sti
or
aaa
push
push
push
ret
js
push
jecxz
(bad)
bts
jbe
fdivr
and
pop
jecxz
sub
add
and
mov
or
jo
std
bound
mov
rcl
or
(bad)
gs
iret
fs
xor
sub
cld
dec
mov
mov
push
cwde
jl
mov
and
adc
xchg
push
inc
imul
mov
lock
push
push
cmp
jb
popf
or
or
(bad)
mov
inc
cmp
call
ret
jnp
dec
fs
add
dec
ins
dec
pop
push
sbb
jp
addr16
ss
cwde
or
je
pop
push
inc
adc
outs
add
mov
fisttp
pusha
push
in
push
scas
repnz
loop
jnp
(bad)
jmp
add
mov
mov
mov
fld
push
fild
or
mov
cmp
addr16
je
cmp
jne
mov
adc
sbb
add
pop
dec
lea
cmp
mov
pop
dec
xor
push
dec
fdivr
cmps
push
jmp
test
je
test
or
cld
cmp
jbe
jg
mov
inc
cmp
je
leave
dec
fdivr
sub
inc
jmp
inc
and
or
pop
mov
pop
daa
shr
xor
int3
test
call
clc
mov
cmp
add
sbb
cmps
fs
adc
into
cli
jo
inc
jl
call
xor
push
sub
cld
inc
dec
cmp
sub
pop
cmp
jo
hlt
adc
sub
les
clc
je
faddp
mov
xchg
mov
mov
mov
xchg
ja
js
sub
ss
push
nop
adc
jge
stos
js
sub
add
inc
cld
shl
sbb
bound
es
outs
sahf
push
lds
loopne
jne
mov
sbb
sbb
(bad)
mov
mov
data16
mov
jmp
call
outs
inc
shl
pop
shl
add
hlt
or
(bad)
adc
aas
ins
sti
and
cmps
and
or
adc
push
popa
mov
add
xor
lock
pusha
pop
adc
test
mov
or
push
mov
jmp
dec
shr
mov
cwde
sub
cdq
and
push
sbb
ret
mov
push
add
push
xor
sub
or
and
jno
xchg
inc
jg
mov
add
pop
xor
and
(bad)
aaa
aaa
es
sub
sub
and
pop
or
jl
inc
xor
adc
pop
jle
pusha
push
inc
test
jbe
bnd
aam
cmp
jbe
loopne
pop
push
and
pop
arpl
pop
and
popf
add
cs
test
jne
pop
mov
sbb
adc
clc
add
push
xor
ins
loop
add
jae
mov
inc
scas
fcom
fdivp
push
sub
mov
adc
and
out
lahf
enter
jno
mov
inc
and
inc
add
xor
adc
mov
adc
sbb
add
sbb
jp
sbb
dec
inc
push
je
mov
cmp
test
cli
and
jno
(bad)
push
lahf
push
mov
sbb
aas
jmp
xchg
pop
jne
ror
test
push
push
(bad)
shl
mov
push
inc
mov
ins
dec
jl
and
pop
ret
add
pop
add
cmc
(bad)
mov
mov
cld
cwde
push
mov
inc
sahf
rol
das
cmp
push
imul
pop
repz
inc
inc
xchg
mov
cs
cwde
inc
jg
push
daa
push
jecxz
fidivr
in
cmp
push
xor
test
pop
mov
adc
push
lock
cdq
call
xor
jbe
sbb
adc
ret
push
mov
cld
xchg
cmp
and
cmp
push
and
mov
jns
pop
lea
adc
jmp
sbb
xchg
imul
pop
or
jecxz
push
and
inc
sbb
jae
nop
rcr
cdq
aaa
jp
mov
dec
pushf
inc
sub
cmp
(bad)
sub
dec
nop
cmp
dec
sbb
cwde
ret
sbb
popa
xor
push
push
mov
push
adc
dec
or
xor
clc
jb
and
jbe
xor
and
inc
add
sbb
gs
fild
push
mov
mov
nop
sbb
xchg
aam
add
imul
xchg
outs
xchg
sub
loope
pop
dec
scas
push
sbb
popf
int
aad
cmp
lock
mov
je
push
shl
cmp
pop
lea
outs
fsubr
jae
pop
adc
pusha
push
cmp
push
bound
cmp
jne
sub
pop
psubd
lea
push
pop
data16
pop
scas
cdq
adc
sub
enter
jae
inc
push
inc
enter
(bad)
stc
fbld
jbe
mov
jge
push
gs
add
push
ja
inc
sti
inc
inc
fwait
cmp
add
repnz
pop
pop
sti
loope
rcl
cmp
sbb
push
or
xchg
test
cmc
lock
push
cs
sbb
movs
xchg
stos
pop
adc
pop
mov
sbb
jnp
dec
data16
pop
je
test
dec
scas
rcr
push
inc
inc
jmp
xor
push
nop
xor
fs
cmp
(bad)
adc
sbb
mov
push
push
dec
mov
pop
inc
cld
pop
mov
adc
ret
mov
and
jle
mov
add
push
lea
sbb
js
cmp
add
push
sbb
inc
push
add
pop
sub
mov
loop
sbb
add
sahf
mov
rcpps
fdivr
les
add
push
add
adc
leave
add
pop
jns
add
pop
fidiv
mov
dec
jmp
adc
sbb
ret
or
sti
pusha
jb
mov
ret
lea
xchg
retf
adc
rol
ds
mov
jbe
push
adc
inc
mov
dec
mov
loop
push
dec
mov
push
div
das
push
and
gs
and
pop
or
sbb
jo
push
jmp
or
mov
mov
jmp
jno
sti
sub
and
fndisi(8087
mov
inc
inc
push
push
popf
test
xchg
jb
dec
pop
add
add
jmp
xchg
pop
lods
dec
movs
out
push
scas
std
xor
mov
ret
jle
inc
loope
fstp
es
ins
pop
frstor
pop
cmps
or
xchg
pop
mov
cmp
and
xor
push
(bad)
cld
or
sbb
loop
out
and
cmp
mov
(bad)
mov
cs
retf
movs
or
int3
jbe
lods
lods
or
mov
pusha
push
adc
imul
add
out
lods
and
test
mov
jne
xchg
cmp
jne
in
cmp
lods
jo
pop
mov
add
shl
jne
mov
aad
lods
xor
ins
jnp
sti
pop
pop
out
das
mov
ror
mov
mov
xchg
out
out
sub
movs
cmc
push
add
jbe
mov
inc
fs
rcr
in
pusha
ret
or
xchg
add
xchg
sbb
(bad)
sbb
sbb
inc
je
fstp
cmp
ja
lea
inc
inc
fadd
jne
daa
rcr
inc
push
push
add
sbb
add
adc
jg
pop
mov
push
xor
dec
rol
out
push
cmp
adc
push
adc
sub
mov
add
(bad)
cmp
xchg
add
std
jnp
loopne
ret
adc
mov
xchg
sub
fdiv
mov
icebp
cmps
(bad)
mov
fwait
(bad)
loopne
mov
repnz
fsub
test
dec
xlat
push
aas
je
cmp
imul
and
jne
push
imul
cmp
pop
jne
pop
call
repnz
mov
in
xor
jl
pop
jle
xchg
(bad)
jne
jmp
sbb
sbb
retf
sub
(bad)
mov
sbb
mov
push
sub
and
addr16
ret
jne
mov
sbb
loopne
add
je
pop
in
cmp
arpl
stc
mov
cs
pop
je
sti
(bad)
jno
out
dec
xchg
repz
jmp
pusha
mov
dec
in
arpl
scas
jg
add
mov
pusha
add
(bad)
std
and
xchg
mov
sub
shl
mov
add
cmp
jl
adc
xchg
out
and
inc
fld
shr
mov
push
pop
loopne
mov
push
scas
or
inc
(bad)
dec
push
mov
or
cld
or
fwait
ret
push
add
inc
and
mov
les
pusha
pop
call
cmp
cvttps2pi
and
push
mov
nop
fcom
adc
push
adc
in
add
inc
pop
ror
arpl
xchg
or
xchg
add
ja
mov
push
gs
(bad)
sahf
xchg
movs
push
push
push
push
pop
pop
in
mov
pusha
fld
mov
xor
adc
jecxz
push
push
sub
xchg
movs
xchg
add
sbb
cs
xchg
js
sbb
mov
lods
fisttp
daa
jecxz
and
and
pop
rcl
sub
xor
in
add
rcl
call
mov
sbb
adc
mov
cmp
sar
(bad)
push
sbb
or
inc
adc
fild
add
pop
cmc
test
outs
(bad)
(bad)
in
test
and
push
imul
jbe
or
add
daa
mov
cmp
xor
es
and
xor
test
push
jp
jmp
sti
xor
or
clc
pop
dec
cmp
outs
jnp
jp
push
pop
jmp
jecxz
test
mov
inc
push
aam
je
into
or
div
mov
mov
cmp
or
popa
ret
push
push
sub
mov
repz
lock
test
sub
int
xor
sti
es
sti
fcom
or
imul
mov
xchg
mov
mov
sub
dec
cmps
test
sbb
mov
lock
(bad)
push
or
jmp
xchg
fwait
add
in
and
push
mov
je
mov
cmp
jne
xchg
adc
adc
in
mov
loopne
inc
jbe
xor
or
je
jg
jo
adc
frstor
sbb
mov
jne
cmp
je
ds
xchg
pop
(bad)
int3
loope
inc
push
mov
mov
add
pop
sbb
pop
les
push
imul
pop
lock
jb
or
test
jbe
push
adc
call
jne
rol
into
and
mov
(bad)
(bad)
push
retf
dec
add
cmps
add
in
lock
fsubrp
lock
cmp
jne
or
or
push
ror
sbb
mov
call
hlt
adc
sbb
sbb
mov
je
or
daa
aaa
adc
cmp
cmc
nop
data16
aas
js
bound
xor
push
or
or
inc
lock
out
jl
push
icebp
push
and
pusha
mov
jmp
xchg
jle
aaa
jp
push
mov
sub
popa
lahf
pop
mov
cmp
cmps
cmp
fstp
cdq
mov
pusha
je
div
push
sbb
sbb
inc
or
add
dec
in
xor
add
test
fisub
jb
xor
outs
out
pop
pop
inc
cmp
lea
adc
inc
hlt
sub
mov
lock
hlt
and
arpl
add
cmp
add
mov
hlt
cmp
jmp
inc
movs
pop
enter
cdq
mov
jb
les
iret
cmps
icebp
pop
adc
lock
mov
mov
aas
push
fcomp
xchg
into
xor
outs
mov
mov
add
and
mov
je
or
sar
push
and
lea
test
push
out
add
or
int
and
call
lea
cmp
fidiv
jne
addr16
fnstenv
hlt
test
shr
je
inc
add
add
js
ins
add
mov
mov
mov
mov
inc
pusha
scas
xchg
adc
int
cmp
jns
pusha
shl
xor
lock
and
mov
movs
movs
or
xchg
and
test
add
or
sbb
and
sub
(bad)
adc
adc
in
adc
sub
(bad)
dec
pop
sbb
push
int
(bad)
adc
pop
push
test
pusha
es
(bad)
push
xor
ja
je
adc
jns
loope
bound
adc
and
and
adc
jmp
sub
push
xchg
pop
sahf
xchg
adc
and
mov
push
bound
adc
inc
add
ret
loopne
xor
sub
cmp
mov
aam
ficom
adc
xor
scas
and
jmp
mov
dec
add
(bad)
aam
inc
pop
push
gs
adc
dec
push
pop
or
mov
sbb
and
jmp
jne
jns
pop
push
loop
sbb
xor
mov
push
xor
sbb
jg
jbe
lods
loopne
adc
ja
jmp
mov
and
cmp
and
into
aas
int
bound
adc
out
inc
xchg
iret
in
shl
and
mov
fdivr
into
jae
dec
adc
stos
and
xchg
loopne
in
cmp
shl
add
fld
mov
(bad)
(bad)
add
push
push
mov
jmp
rol
xor
xchg
push
sbb
sar
int3
lds
fist
push
mov
fs
fs
sbb
cmc
daa
pop
adc
fild
test
das
dec
inc
cmp
cmps
push
test
loope
pop
pop
je
add
inc
(bad)
(bad)
(bad)
clc
sbb
add
daa
sub
into
inc
popa
adc
mov
mov
ss
cmp
sti
pop
mov
push
mov
mov
sahf
push
xchg
aam
mov
outs
push
add
jge
xor
lea
mov
inc
out
jge
push
sbb
or
push
out
fmul
stos
ret
imul
mov
add
cmp
and
sub
(bad)
jmp
add
lods
dec
clc
inc
push
mov
xchg
mov
and
inc
ds
rcr
add
push
push
xor
xor
sbb
(bad)
jmp
push
inc
call
add
push
adc
and
add
fmul
movs
int3
or
aas
ret
ret
pop
pop
xchg
or
dec
je
sbb
gs
cmp
sbb
xchg
cwde
hlt
sub
jno
mov
fdivr
pop
outs
sbb
fdiv
pusha
xchg
mov
pop
xor
(bad)
gs
jp
and
lea
push
stos
inc
adc
jb
es
add
xor
lds
xlat
mov
or
dec
sar
or
popa
pop
leave
sub
(bad)
pop
xchg
pop
mov
cmp
cmp
ret
pop
push
push
cs
or
int
data16
pushf
pop
push
mov
ins
pop
mov
mul
add
pop
jmp
push
pop
add
loopne
mov
repnz
fcom
mov
xor
inc
push
adc
jge
cwde
jle
mov
sub
cmp
pop
ds
add
push
push
push
mov
js
out
mov
jo
pop
xchg
fstp
hlt
adc
jecxz
ret
push
push
fldenv
xor
push
ja
cmps
jo
inc
out
add
iret
add
pushf
pop
sbb
jo
repnz
(bad)
cmp
push
ins
jne
or
adc
push
push
push
dec
sar
pop
add
inc
inc
data16
test
pop
iret
mov
pusha
push
pop
mov
jae
(bad)
movs
mov
dec
loopne
rdmsr
(bad)
dec
loopne
xchg
mov
stos
or
inc
inc
xchg
mov
add
mov
repz
push
(bad)
or
clc
call
and
out
add
cmp
or
loopne
xor
scas
sub
rcr
ja
repnz
sub
aas
mov
or
mov
and
sbb
sub
cmps
mov
stos
(bad)
cmps
inc
sahf
cmps
add
cmps
pop
pop
jmp
or
loop
lods
pop
js
retf
push
fmul
jp
push
loopne
sbb
push
ret
and
adc
add
xchg
add
cmps
rcl
cld
test
push
repnz
leave
cld
adc
int
mov
and
adc
shl
iret
or
sub
dec
adc
pop
arpl
cmp
add
cmp
pusha
popa
adc
pop
mov
cmp
inc
fbstp
rcr
adc
jbe
push
and
repz
aad
mov
push
pop
sbb
aad
dec
or
inc
sbb
retf
xchg
adc
hlt
add
mov
push
push
pop
cmp
mov
adc
inc
adc
iret
mov
test
adc
xchg
bound
add
push
adc
or
adc
dec
sbb
xor
das
mov
and
and
(bad)
loop
adc
add
aam
lock
das
inc
sbb
mov
test
arpl
add
cmp
lock
dec
jo
sub
cmp
aaa
sbb
xor
jmp
mov
(bad)
jbe
retf
cs
pop
or
das
dec
mov
cmp
sbb
(bad)
push
stos
imul
dec
mov
add
xchg
pop
retf
ret
or
loope
add
inc
es
call
mov
pop
popa
mov
daa
fsub
add
cmp
mov
dec
jne
out
outs
aaa
inc
adc
call
push
call
mov
mov
loope
and
(bad)
js
sbb
add
in
loope
mov
pushf
mov
or
push
nop
or
pop
leave
mov
clc
or
mov
xchg
and
add
pop
mov
cmp
inc
dec
fwait
or
dec
mov
nop
ficom
dec
xor
xchg
test
sbb
cmp
push
sub
sbb
fwait
les
inc
sbb
cmps
ins
push
inc
and
xchg
xchg
xlat
rcr
fwait
js
xor
cs
and
dec
mov
jnp
mov
and
inc
mov
mov
dec
sbb
mov
or
sahf
ss
adc
push
and
sub
(bad)
daa
add
dec
leave
out
inc
sub
dec
cli
sahf
outs
mov
or
push
pop
sbb
adc
inc
ss
jno
inc
cli
sub
xchg
push
mov
jnp
jnp
inc
mov
and
stos
push
sar
inc
or
and
ror
adc
jbe
pop
or
add
outs
xchg
pop
mov
add
mov
shld
adc
aaa
adc
dec
push
sub
jae
popf
push
push
adc
sbb
out
mov
sbb
add
sbb
inc
push
jl
fmul
leave
mov
and
call
and
adc
push
shl
fistp
adc
rcr
ret
rol
ss
xchg
dec
dec
dec
ror
push
and
dec
adc
mov
test
push
(bad)
loopne
call
pop
cmp
retf
or
inc
fcomp
les
dec
inc
mov
pushf
sahf
outs
cli
(bad)
xor
cmp
jne
adc
ins
out
xor
and
int3
mov
and
sbb
pop
ss
pushf
pusha
adc
pop
fs
aam
jmp
into
inc
imul
xor
shl
jge
out
ret
push
iret
push
xor
fsubr
test
xchg
pop
xor
movs
jmp
sbb
test
jo
adc
or
sub
loopne
(bad)
jmp
dec
sub
push
movs
aas
loop
dec
xor
ins
lock
pop
jmp
adc
push
xchg
add
jne
pusha
xchg
stos
mov
scas
jge
bound
jbe
add
and
adc
cmp
xchg
adc
adc
mov
sub
push
adc
xchg
bound
jns
inc
jbe
adc
(bad)
int3
mov
addr16
data16
pop
add
clc
icebp
adc
sahf
inc
loopne
mov
call
fbstp
push
xor
jnp
pop
jbe
retf
pop
sahf
pop
cs
mov
jbe
fdiv
ret
mov
mov
sbb
ins
out
add
data16
xchg
je
mov
lock
jbe
pusha
adc
mov
push
dec
adc
aad
pop
mov
mov
cmp
cmp
imul
js
ret
add
outs
mov
fwait
inc
test
pop
lock
or
mov
xor
js
xlat
call
add
jmp
cs
data16
push
leave
lods
mov
adc
rol
cli
add
add
lods
dec
mov
mov
sar
cmp
and
cmp
mov
iret
jmp
mov
mov
push
push
and
dec
mov
pop
add
jl
push
pop
mov
cli
xor
inc
imul
bound
add
mov
retf
cdq
cdq
push
or
push
xchg
and
mov
pop
sbb
inc
rol
xchg
xchg
mov
jecxz
sub
neg
inc
or
mov
or
mov
or
jmp
test
jge
xor
lea
cmps
or
add
(bad)
mov
lods
xor
inc
ret
mov
sub
mov
pop
push
lds
and
or
sbb
dec
add
cmp
pop
mov
mov
les
inc
add
(bad)
sar
jmp
sub
rcr
jbe
sub
add
mov
das
pop
dec
dec
imul
xchg
push
mov
xchg
push
push
add
rcl
adc
adc
xor
jnp
stc
and
sar
add
xchg
test
mov
sub
mov
xchg
cmp
cmp
pop
push
pop
xchg
jmp
add
data16
jp
xchg
hlt
jne
adc
mov
sub
add
out
xor
enter
add
mov
mov
cwde
jp
sbb
pop
jno
inc
retfw
leave
sub
adc
add
cmp
dec
or
adc
sub
mov
push
dec
mov
pop
mov
jne
ret
mov
push
dec
mov
int3
sub
data16
shr
mov
adc
shl
lds
(bad)
mov
and
arpl
lock
push
imul
push
adc
enter
jmp
adc
inc
dec
or
and
xor
pushf
mov
mov
(bad)
mov
lods
cmps
mov
inc
xor
ds
enter
cmps
ror
xor
addr16
sub
out
inc
inc
mov
sbb
add
xor
mov
lahf
in
xchg
or
adc
and
add
sbb
adc
and
push
adc
adc
adc
adc
push
adc
adc
adc
fcom
inc
ror
sub
shl
lock
pop
add
lds
adc
jg
dec
jmp
clc
push
mov
cmp
je
inc
ret
cmp
aad
imul
out
or
mov
icebp
add
or
xor
sbb
or
scas
(bad)
cwde
mov
mov
lock
mov
inc
fisttp
leave
dec
jo
pusha
mov
xor
loop
les
add
mov
jmp
in
popf
mov
add
add
cmovae
xor
jo
pop
(bad)
jmp
cmp
add
pushf
idiv
add
bound
add
or
push
sbb
es
in
mov
sbb
mov
lea
adc
shr
cmp
cmps
push
das
jle
fist
mov
pushf
ret
mov
xchg
add
xchg
mov
arpl
popf
into
xor
add
into
imul
jne
sar
sti
popf
push
sbb
push
not
mov
mov
sbb
and
jb
shr
adc
dec
cld
inc
rol
lea
push
add
aad
popf
ins
cmp
in
mov
push
sbb
sbb
add
pop
sub
cmps
push
mov
scas
je
cmp
mov
test
ret
inc
mov
call
cmp
mov
call
nop
push
mov
and
or
setp
add
jmp
xor
pop
fiadd
dec
cmp
lea
push
mov
fiadd
or
jnp
adc
adc
dec
mov
je
mov
pop
into
fiadd
xor
xchg
inc
call
and
pop
out
cmps
das
inc
pop
push
push
adc
scas
mov
sub
cmp
xor
and
cmp
outs
popa
add
ja
in
pop
sar
push
jmp
or
sub
loop
or
or
dec
push
inc
in
sbb
xchg
adc
push
scas
or
add
out
call
mov
xor
pop
sub
clc
sbb
loopne
jno
push
push
pop
push
not
(bad)
fcomp
add
sub
dec
repz
and
push
out
inc
sbb
shl
inc
clc
push
pop
aad
cmps
push
or
ror
sbb
hlt
and
fsub
jno
mov
ins
sbb
xor
(bad)
cmovge
(bad)
sub
pop
adc
sbb
sbb
sbb
mov
shl
ret
fs
mov
sbb
int
add
pop
cmp
jp
and
js
xchg
cmc
add
pop
push
(bad)
es
jno
mov
inc
test
xchg
mov
xchg
repz
add
pop
outs
out
push
fiadd
adc
rol
push
push
mov
not
jmp
add
inc
sub
sbb
cli
ja
jecxz
cmc
les
sub
or
sub
loopne
add
dec
push
or
in
mov
ror
push
imul
(bad)
mov
nop
cdq
(bad)
jge
xor
sbb
xor
jp
xor
bound
inc
out
push
fist
bound
jl
psubw
xchg
jnp
adc
retf
or
cmp
xchg
scas
dec
shr
scas
xchg
icebp
push
iret
pop
je
fld
add
pop
xor
dec
push
ja
or
sbb
aam
jge
mov
jne
cs
dec
loopne
imul
adc
ror
ret
sbb
adc
mov
or
nop
inc
sbb
iret
lds
sar
pop
out
sub
add
inc
popa
repnz
test
ret
xor
mov
jmp
repnz
pop
pop
arpl
mov
loop
movq
sub
repnz
cmps
push
mov
mov
adc
(bad)
push
stos
add
and
sub
xor
pop
mov
adc
cmp
pop
clc
jecxz
inc
mov
dec
call
mov
pushf
(bad)
mov
or
mov
bound
sub
mov
sub
dec
push
cmps
lea
(bad)
ja
call
xchg
xchg
leave
fst
jns
es
adc
rcr
daa
mov
and
adc
inc
test
and
adc
add
mov
mov
jmp
pop
mov
or
jne
inc
fs
and
push
cmc
ror
fimul
jmp
pushf
fstp
jo
xor
lahf
mov
pop
aaa
cmps
or
inc
dec
dec
cmp
js
mov
adc
add
pop
add
push
jecxz
adc
inc
dec
or
or
add
or
xor
pushf
or
ror
add
ja
aaa
ja
adc
test
inc
add
data16
fs
jmp
aaa
movs
adc
in
or
add
lods
push
xchg
stos
jmp
push
mov
nop
push
cmps
das
xchg
mov
or
js
sbb
lock
les
cmp
mov
loopne
mov
enter
inc
or
ret
push
xor
shr
adc
mov
scas
repnz
jae
lea
jmp
cmp
sub
mov
les
rol
dec
add
cmp
out
mov
imul
mov
in
sub
xchg
jbe
xor
add
add
or
and
fs
das
add
xchg
push
fistp
cmc
xchg
mov
jg
clc
inc
mov
cdq
addr16
inc
add
aad
pop
and
push
inc
shl
adc
xchg
sbb
sub
addr16
mov
add
out
add
add
push
or
pop
rol
cwde
pop
sar
sti
add
pop
pop
or
sbb
lods
add
or
mov
hlt
test
pop
mov
adc
call
sahf
pop
test
add
mov
add
or
pop
cmp
dec
cmc
nop
pop
(bad)
jo
stc
shr
xor
aad
jnp
xlat
mov
movs
sbb
adc
inc
and
or
inc
icebp
inc
sti
push
je
cwde
xchg
popf
dec
out
inc
cmp
sbb
mov
loopne
ds
xchg
js
add
stc
xchg
retf
or
mov
push
inc
jo
mov
ja
xchg
mov
shl
test
in
dec
(bad)
ret
ss
mov
in
add
add
xor
add
gs
sbb
shrd
sbb
outs
dec
scas
jno
or
das
or
pop
add
xchg
and
cli
outs
lea
cmp
leave
and
add
cmp
pop
sbb
add
inc
push
nop
or
inc
xor
pop
cmp
int3
push
or
daa
lea
(bad)
xchg
push
pushf
lds
imul
push
xchg
sub
sub
outs
adc
jno
lea
sub
jmp
in
mov
sbb
outs
in
xchg
sub
test
test
or
jb
test
adc
sbb
sbb
sbb
ja
sti
(bad)
data16
inc
jnp
cmp
loope
or
or
data16
jbe
add
cmp
jmp
push
jbe
or
je
test
xor
push
jns
mov
mov
in
cdq
push
push
test
cmp
dec
or
sbb
shr
nop
inc
cld
add
lock
stos
es
sbb
push
fcom
and
clc
hlt
push
and
hlt
jns
or
lds
cli
mov
pop
cmp
add
cmp
call
pusha
stos
and
fldcw
adc
or
mov
push
push
push
lock
jne
mov
inc
loopne
mov
repz
ss
cld
fcom
dec
or
push
scas
inc
xchg
jno
out
or
ja
pop
or
push
cmp
js
inc
in
aam
xor
jno
or
popa
popa
lea
ret
pop
inc
mov
xchg
retf
movs
or
pusha
push
js
xchg
add
je
mov
ficomp
shl
std
fisub
shl
jo
movzx
push
jo
js
adc
fistp
mov
dec
jp
push
jb
cmps
test
sbb
clc
mov
inc
aam
adc
outs
xor
repnz
jg
sbb
sbb
mov
xor
sub
fidivr
ins
(bad)
adc
inc
pop
and
push
cmp
jne
mov
jl
cmp
jbe
or
jne
push
(bad)
ja
sar
hlt
mov
(bad)
std
cmp
data16
push
xchg
push
cs
popa
inc
add
cmp
mov
shr
add
cld
mov
cmovns
or
adc
sbb
lds
xor
xor
or
(bad)
sub
push
mov
jne
(bad)
pop
or
cmps
rcl
xor
mov
and
inc
pop
js
and
pop
mov
in
test
ror
js
vmread
sub
and
imul
push
and
and
and
or
add
jne
and
ror
bnd
jle
lds
adc
bswap
add
movs
clc
into
fstp
(bad)
pop
(bad)
in
xor
dec
rcr
sbb
clc
fsub
(bad)
ficom
dec
cdq
out
ds
add
mov
mov
std
mov
dec
outs
inc
sbb
pop
fucomip
in
pop
xor
or
cmp
xor
popf
add
mov
call
es
loope
aam
rcl
(bad)
ret
cld
xor
push
mov
ror
sub
or
pop
ja
pusha
adc
push
test
ins
lock
fwait
and
jmp
jae
xor
xchg
jmp
xchg
dec
fs
mov
fisttp
cmp
(bad)
addr16
je
mov
jmp
and
(bad)
inc
xor
adc
les
cmp
jb
and
mov
or
fdivr
mov
push
jae
dec
mov
xor
inc
sub
cs
add
and
and
clc
outs
push
add
xchg
cmp
cmp
adc
daa
(bad)
call
inc
cs
dec
cdq
push
push
mov
rcl
outs
sub
mov
std
ss
leave
dec
int3
inc
sahf
outs
jmp
mov
add
mov
pop
loopne
cmp
and
cli
mov
jbe
cld
aam
or
add
call
adc
rcr
je
jmp
push
xchg
in
aad
cs
jp
dec
mov
fnstcw
(bad)
or
push
je
push
adc
popa
push
ror
jle
test
adc
and
jge
data16
pop
dec
dec
call
pop
fbstp
packsswb
adc
mov
and
fdiv
or
scas
xor
and
dec
dec
xchg
ret
add
pop
xlat
push
fcmovbe
emms
add
loopne
mov
or
fs
cmp
mov
out
mov
or
and
pop
mov
add
ror
lea
inc
rol
or
sub
mov
adc
push
loop
push
and
(bad)
inc
push
and
rcr
(bad)
mov
lds
ins
je
mov
mov
xor
jmp
clc
es
and
out
inc
idiv
int3
out
add
addr16
adc
(bad)
sub
add
and
cmps
add
xchg
adc
and
xchg
out
es
xchg
xor
xchg
mov
das
or
mov
rol
xor
outs
ror
lea
mov
xor
or
fdivr
cmp
ret
fldenv
push
push
add
sbb
jecxz
push
dec
or
pop
mov
mov
mov
mov
or
cmp
sub
cmp
pushf
adc
mov
ror
xchg
add
sti
cdq
cmp
jb
(bad)
mov
and
mov
enter
sub
or
cmc
mov
pop
jb
xor
test
sbb
add
popf
pushf
fsubp
loopne
xor
je
xor
sub
popf
jge
sar
sub
or
js
adc
cld
pop
js
push
jae
lea
ja
cmp
jne
cmc
(bad)
push
fidiv
aam
add
pop
sbb
mov
and
push
sbb
and
aaa
outs
inc
daa
daa
pop
js
jle
add
imul
cmp
sbb
pop
push
sub
jle
dec
or
dec
mov
mov
lea
outs
add
or
add
add
xor
jae
xor
add
inc
sub
dec
and
dec
shr
push
xchg
add
xchg
xchg
pop
sbb
push
adc
add
mov
mov
or
gs
add
and
sahf
popw
cmps
pop
push
sbb
adc
sub
out
xor
xor
xor
push
adc
add
cmc
sub
cs
inc
mov
shl
dec
and
sub
inc
inc
and
push
push
lods
ss
xor
jne
or
mov
mov
data16
jmp
movs
sub
sub
ja
xchg
jb
pop
adc
pushf
cmp
mov
nop
and
je
sub
or
fsub
add
dec
or
ds
stos
pop
add
xor
push
arpl
or
aaa
mov
add
pop
mov
cmc
push
or
je
lea
js
fist
or
shr
dec
out
inc
cmp
adc
fmulp
pushf
adc
mov
xor
je
inc
and
data16
dec
add
ret
retf
pop
adc
add
lods
xchg
inc
jae
cmp
scas
jmp
push
je
dec
add
in
mov
push
xor
or
or
and
std
inc
mov
or
jl
add
add
pop
add
xor
push
loop
add
jg
mov
icebp
sbb
adc
dec
pop
and
daa
bnd
mov
icebp
mov
cmp
push
cmp
out
fld
push
jae
lea
push
sub
push
lods
and
adc
stos
(bad)
ret
es
ja
retf
dec
cli
dec
pop
ret
adc
pop
pusha
mov
ret
lods
xchg
cmp
enter
adc
ffreep
(bad)
imul
jg
out
ins
fdiv
cmp
xor
fnstenv
inc
jmp
push
xchg
mov
cmp
sub
xor
cmp
add
or
inc
mov
and
mov
or
push
xchg
xchg
cmps
cli
fdiv
sub
sub
out
push
sti
test
sbb
sub
aad
mov
ins
neg
inc
popa
jns
call
jnp
fld
push
cmc
dec
in
sbb
outs
ror
pop
mov
cmp
imul
sub
mov
xor
int3
mov
loop
jo
(bad)
nop
push
adc
out
test
inc
pusha
ret
push
mov
retf
and
(bad)
push
mov
xor
push
cmp
fs
aad
xor
mov
sub
inc
shl
xor
adc
sbb
mov
idiv
add
cld
or
movs
popa
xlat
jnp
or
jge
pop
mov
pushf
cmp
lds
retf
jmp
jecxz
lahf
mov
cmp
jb
inc
dec
ins
xor
adc
adc
jge
add
jo
or
cmp
(bad)
sub
push
inc
or
mov
jge
add
es
xor
or
sbb
test
sbb
adc
icebp
ret
jge
out
std
cmc
imul
or
push
inc
mov
psubw
imul
out
addr16
cmp
xor
cmps
imul
inc
(bad)
pop
push
imul
xor
mov
and
arpl
pop
in
or
adc
adc
add
jp
push
adc
stos
jbe
movs
mov
xchg
std
push
mov
add
fisub
xchg
(bad)
push
(bad)
lahf
inc
xor
mov
scas
mov
push
cmp
mov
inc
test
and
test
inc
or
pop
xchg
xor
loopne
pop
sbb
cmp
sbb
lock
xchg
cmp
add
(bad)
or
mov
sbb
xchg
xchg
icebp
jnp
add
(bad)
retf
into
cli
inc
cmp
xor
jbe
cmp
ret
loop
ret
jg
dec
adc
je
mov
cmp
rcl
adc
jg
xchg
js
fst
jo
adc
xchg
mov
push
pusha
es
and
imul
pop
adc
loope
xchg
jg
test
ins
or
ja
pop
inc
pop
or
sub
test
adc
jno
aas
retf
push
imul
pusha
xor
shr
mov
adc
ror
or
(bad)
cmp
outs
ins
das
or
add
or
mov
dec
retf
cli
das
test
push
clc
cmp
test
mov
inc
sbb
inc
mov
and
ja
std
sub
inc
xchg
pop
pop
sbb
push
sbb
push
xchg
mov
(bad)
in
cmp
push
pop
repnz
mov
jae
in
rcl
lds
sub
and
ins
push
dec
sub
mov
les
mov
and
and
and
test
in
jnp
pop
adc
clc
clc
mov
and
fsubr
mov
sub
mov
jb
adc
(bad)
fisubr
les
ret
add
xchg
add
mov
add
test
adc
test
push
in
fild
pusha
dec
loope
dec
fdiv
popf
lahf
adc
and
push
xor
sbb
adc
inc
cmp
mov
jo
stos
sbb
fs
mov
cmp
and
aad
push
(bad)
ficom
cli
add
or
ja
daa
inc
adc
sbb
xor
call
adc
cmp
push
add
mov
adc
add
push
or
enter
cld
or
dec
or
ja
sbb
mov
mul
inc
dec
xor
push
pushf
iret
jl
inc
push
push
mov
push
fbstp
add
sub
jecxz
loope
lods
(bad)
or
pusha
mov
mov
mov
lods
lar
out
push
jne
nop
cmp
scas
adc
cmp
cmp
ror
and
jbe
mov
test
push
adc
push
sbb
fmul
jge
imul
aaa
pushf
inc
adc
pop
sbb
fwait
ret
xor
pushf
and
out
dec
hlt
sub
fimul
push
or
pop
mov
test
movzx
test
loopne
sbb
je
test
xchg
or
add
es
adc
push
loope
mov
xchg
ficomp
adc
cmc
push
cmp
(bad)
adc
pop
sbb
scas
xchg
pop
das
jmp
add
adc
mov
cmp
cmps
icebp
adc
xchg
mov
jmp
daa
jo
sub
push
movs
xor
push
adc
das
push
fidiv
mov
inc
jb
rol
jmp
leave
and
push
jecxz
loope
mov
ret
stos
sub
js
fist
rcl
add
sbb
push
push
mov
movs
and
mov
add
or
mov
mov
mov
stos
int
dec
(bad)
jmp
ds
jo
push
les
add
not
mov
in
loop
rcl
out
mov
(bad)
ss
xchg
in
adc
sub
or
sub
inc
loopne
mov
out
and
sub
pop
dec
pop
xor
sbb
push
pop
or
hlt
inc
(bad)
in
stos
or
mov
movs
pop
ret
jge
push
daa
lea
jge
sub
hlt
sub
aas
or
push
test
nop
cwde
jle
mov
loopne
sbb
cmp
ud2
rdmsr
ja
(bad)
loope
lahf
cld
push
adc
cld
js
push
not
mov
add
sti
add
and
dec
clc
xor
and
pop
retf
jecxz
or
sbb
add
cmp
inc
jbe
jne
mov
mov
sbb
shr
fs
sbb
popa
pusha
retf
mov
jge
das
mov
les
push
mov
rcl
and
loopne
and
add
mov
cmp
dec
mov
sar
mov
cmp
jmp
mov
cmps
loope
call
pop
jl
int3
mov
fld
cmp
into
xor
cmp
sbb
gs
aam
push
test
sahf
into
dec
add
inc
dec
and
sub
int
fmul
cmp
aad
mov
xor
xor
sub
push
sub
push
(bad)
stos
movs
jg
nop
(bad)
dec
add
inc
or
mov
enter
dec
push
jg
inc
and
push
cwde
stc
ja
(bad)
add
pop
call
je
push
daa
mov
xor
xor
pop
push
dec
jge
sub
adc
icebp
cmp
add
push
aam
clc
mov
(bad)
mov
adc
or
das
dec
(bad)
pop
mov
sub
inc
ficomp
into
jmp
into
out
add
rol
dec
xor
xor
jns
pop
sub
push
cmp
xor
in
and
imul
xor
add
mov
sub
out
jle
cwde
(bad)
jl
mov
leave
xor
jb
xor
sahf
mov
aas
lea
jp
push
inc
xor
mov
(bad)
(bad)
fiadd
dec
dec
jns
adc
jne
pop
jo
iret
push
shr
pop
dec
mov
adc
adc
shl
inc
add
jmp
loopne
(bad)
ins
lea
into
mov
ror
fadd
mov
and
(bad)
and
aam
push
inc
mov
(bad)
adc
mov
or
push
out
jl
movs
gs
scas
push
and
das
inc
jle
add
aam
aaa
mov
pusha
jbe
outs
(bad)
jmp
xor
and
mov
in
add
push
or
sbb
inc
mov
xchg
add
xchg
sbb
pop
fnstsw
mov
lea
test
popa
rcr
bswap
sub
inc
jmp
inc
push
add
xor
jo
sub
mov
(bad)
mov
push
cmp
jne
sub
xor
sbb
adc
rol
adc
daa
bound
fadd
movs
jnp
xchg
inc
in
mov
jnp
mov
pop
xchg
aaa
xor
rol
ror
iret
add
push
dec
enter
fadd
dec
xchg
inc
scas
push
push
pop
inc
adc
mov
jg
loope
add
je
dec
sbb
ret
lods
pop
loop
and
mov
les
sbb
test
mov
add
in
rcl
jne
and
jmp
cmp
sbb
scas
test
jl
and
jne
imul
or
pop
mov
pop
(bad)
(bad)
jne
or
jne
aas
push
xchg
mov
and
add
cmp
jmp
cmp
mov
pop
lahf
cmp
sbb
lea
mov
push
(bad)
add
or
mov
mov
or
xor
push
cld
not
cmps
mov
sub
sub
in
dec
add
xchg
shr
(bad)
aad
or
push
xchg
push
fs
movs
inc
mov
xchg
fdivr
push
inc
xor
sar
cmp
retf
mov
sub
ds
push
push
fcomp
fiadd
pop
push
pop
lea
test
or
pop
les
xor
sbb
cmp
mov
popf
pop
addr16
scas
call
ins
inc
fbstp
mov
pop
mov
jg
imul
sbb
imul
mov
rcl
cmp
jl
inc
inc
push
jmp
cmp
adc
ins
cmp
ins
adc
retf
sbb
mov
sub
dec
adc
das
inc
mov
inc
jle
test
rcr
dec
and
and
xor
call
sar
mov
rol
stos
xor
jne
sub
xchg
out
rcr
push
jae
push
add
push
jne
push
push
je
xor
outs
loope
out
sbb
dec
ins
jne
pushw
mov
or
cmp
scas
aaa
xor
inc
sar
and
jmp
mov
push
mov
adc
sbb
adc
cmp
je
push
add
dec
add
jne
add
mov
adc
and
test
cmps
mov
cmp
mov
jg
add
repnz
cmp
add
cmp
jnp
push
cmp
push
xor
cli
push
pop
cwde
fdivr
(bad)
jl
sti
inc
mov
mov
mov
or
out
aaa
les
retf
jae
pop
movs
cdq
adc
push
pop
sbb
or
sbb
in
push
cmc
push
and
sub
mov
pop
xor
rcr
push
test
jecxz
xor
es
pusha
push
jnp
pop
aaa
jecxz
clc
stc
lds
mov
icebp
dec
loopne
adc
or
mov
jb
mov
mov
shr
xor
(bad)
mov
push
mov
sahf
jge
mov
pop
dec
dec
or
jmp
inc
or
lea
and
add
es
or
lea
ins
aaa
movs
mov
fcmovb
inc
sbb
and
sbb
call
mov
add
jae
push
or
sbb
shl
imul
data16
shl
ins
jo
pusha
shl
js
mov
shr
pop
sbb
mov
add
adc
push
or
or
dec
jnp
les
(bad)
shr
inc
mov
xor
pop
scas
sub
jo
add
lea
xor
add
loopne
nop
in
(bad)
mov
or
mov
sbb
(bad)
xor
and
rcl
xor
add
mov
inc
jl
js
and
xor
jo
xor
add
push
and
push
cmp
or
rcl
push
test
inc
neg
mov
imul
cmp
or
cmp
add
or
push
inc
adc
mov
shr
(bad)
cld
jo
fcmovu
sub
cmp
xor
hlt
inc
(bad)
aam
adc
jmp
xchg
add
push
adc
sbb
mov
mov
or
lea
add
cmps
cli
and
add
repnz
push
sahf
loope
add
jb
mov
push
cmp
sub
sbb
sbb
adc
es
mov
mov
daa
push
add
lock
out
xor
push
mov
test
or
mov
movs
jb
mov
sub
and
inc
sub
loopne
sub
add
shl
ret
mov
add
rcl
aam
jl
ins
pusha
and
imul
je
xor
xchg
imul
jne
das
xor
cld
add
jl
inc
addr16
jne
or
clc
jnp
inc
dec
adc
imul
pop
pusha
int
(bad)
pop
dec
test
aas
jmp
and
xchg
mov
add
das
call
test
sar
cdq
in
cmp
das
add
sti
cmp
sub
sub
sub
add
imul
fcom
add
mov
stc
push
jne
mov
sub
outs
sub
mov
inc
icebp
jne
cmp
lds
je
xor
sub
xor
or
push
sbb
cld
out
cmps
imul
lods
mov
or
add
sub
cmp
js
mov
test
add
or
mov
xchg
sbb
enter
sub
(bad)
into
dec
aas
icebp
pop
cmp
inc
cmp
sbb
jne
popf
dec
cmp
lock
mov
ins
cmps
or
cli
out
fidivr
pop
dec
adc
add
lods
pop
mov
cmp
cwde
mov
or
xchg
xchg
dec
push
jle
lods
pop
mov
inc
or
movs
jo
and
adc
retf
fs
sti
sar
pop
xor
mov
pop
add
pop
inc
in
cmp
adc
ror
jp
enter
repnz
jb
sub
mov
mov
dec
aaa
loopne
jb
sbb
lea
push
push
mov
xchg
bound
push
and
mov
sbb
fst
lods
xor
int3
lock
arpl
cmp
test
xchg
and
adc
lea
or
push
pushf
icebp
mov
je
sbb
fs
pop
fs
pusha
xchg
inc
inc
push
ins
ins
push
push
xor
or
pop
cmp
adc
nop
and
push
icebp
push
xchg
xlat
idiv
je
cmp
je
popf
add
add
xor
or
push
adc
push
mov
fsub
lea
mov
push
push
hlt
sti
push
sub
inc
and
shr
jmp
push
jne
inc
xor
movs
jg
rol
and
dec
inc
push
outs
dec
adc
jnp
in
adc
lock
xchg
xchg
cld
lock
rcl
out
mov
stos
or
(bad)
push
pop
adc
adc
cmc
jo
add
ja
and
mov
movsx
in
push
mov
imul
retf
add
push
and
mov
cmps
loopne
add
ret
push
cmp
cmp
xor
jmp
fld
pop
pop
sub
add
mov
test
adc
add
or
adc
retf
leave
sbb
add
and
xchg
mov
clc
jle
jae
fisub
das
jbe
out
jne
adc
adc
sbb
sbb
pop
and
sar
in
ins
(bad)
push
clc
ins
jmp
add
mov
inc
xor
and
popa
movs
cdq
cs
cmp
xor
leave
je
push
aas
jne
outs
fsubr
sbb
add
xlat
ss
outs
cmp
mov
stos
(bad)
or
fcmovnbe
pusha
(bad)
pushf
cwde
xor
mov
clc
outs
inc
ja
sub
mov
cmp
and
sbb
iret
pop
shl
push
and
dec
dec
ror
ficom
xchg
cwde
push
mov
mov
sbb
dec
push
or
pusha
fidiv
xchg
sbb
xor
cmp
xor
pushfw
fs
in
fcom
inc
or
jecxz
mov
loope
inc
or
add
adc
sub
adc
mov
outs
lds
(bad)
pop
arpl
sbb
imul
adc
je
fdiv
lods
cmp
mov
bound
ficom
push
sub
and
cmp
sub
sbb
adc
repnz
loope
pop
cmps
jne
sar
fld
aaa
lods
sahf
sub
sbb
push
add
dec
pop
xchg
into
in
ret
jge
int3
mov
stos
mov
retf
lods
adc
sbb
enter
sbb
and
rol
xchg
adc
or
pop
add
nop
add
and
pop
cmp
dec
pusha
xor
call
adc
push
mov
push
add
ins
mov
adc
and
adc
movs
data16
xchg
sbb
cmp
dec
fsub
pop
push
cli
sub
xchg
jp
push
jle
xor
test
dec
inc
in
sub
mov
push
push
push
push
mov
ja
adc
fiadd
mov
mov
cmp
cdq
test
loope
lahf
loop
int
fmul
aad
push
arpl
sar
dec
adc
pop
jb
test
add
mov
xor
push
xor
icebp
rcr
and
and
pop
leave
rcr
adc
fdiv
cmovge
or
mov
movs
add
pushf
mov
jl
mov
mov
(bad)
xor
(bad)
sbb
and
push
jo
adc
adc
movs
add
push
jmp
fnstcw
xor
pop
push
or
push
pop
out
xchg
mov
or
xchg
in
mov
and
pop
cmp
cmp
and
shl
test
fdivp
push
stos
fld
pop
fdivp
sub
sub
(bad)
mov
jne
test
sub
pop
call
xor
or
(bad)
div
movs
dec
repz
dec
and
cmc
sbb
adc
jns
jl
repnz
(bad)
and
cmp
inc
or
or
or
imul
sub
adc
inc
jne
mov
fsub
xor
pushf
mov
and
lods
mov
and
or
push
ret
mov
fsub
xchg
jae
or
add
xchg
add
shl
popf
inc
jg
adc
adc
pop
retf
sbb
jle
adc
push
je
xchg
fimul
je
mov
xchg
lock
aam
jnp
fild
push
xchg
mov
sbb
mov
push
or
(bad)
or
(bad)
dec
outs
(bad)
pop
(bad)
(bad)
(bad)
push
and
push
lods
call
aaa
xchg
arpl
push
xchg
pop
cmp
enter
jge
imul
mov
or
imul
and
xchg
add
cmps
test
add
add
push
mov
xchg
jo
lahf
xor
dec
xor
test
and
ins
popf
cli
ss
add
or
mul
jbe
pop
out
xchg
int3
call
sub
pushf
adc
cmp
add
push
sbb
push
sbb
cmovne
outs
mov
sbb
xchg
cmp
push
jnp
xor
xor
ss
xor
adc
dec
leave
push
jb
cmp
nop
add
ret
ret
xor
add
fwait
xchg
ins
loope
sar
ret
xchg
mov
dec
adc
js
(bad)
fisttp
adc
jle
cli
push
push
push
rcl
dec
rcl
push
sbb
(bad)
jmp
(bad)
mov
jp
jmp
jg
inc
cld
aam
add
dec
pop
nop
and
outs
lds
sub
adc
pop
jmp
push
pop
push
fdiv
jle
xor
stc
inc
cmc
js
adc
xor
imul
and
push
pop
mov
pop
add
push
cmp
pushf
dec
fmul
out
dec
push
inc
sub
pop
inc
or
and
push
jmp
jecxz
jae
push
call
sub
push
sbb
sbb
popa
pop
sub
mov
jl
inc
inc
lock
and
adc
adc
push
ret
push
in
in
fs
cmp
mov
add
jae
cmps
cmp
or
mov
repnz
jo
push
fimul
hlt
add
scas
inc
xor
add
push
fcom
fistp
into
mov
inc
in
nop
jo
or
clc
dec
xchg
cmp
pusha
adc
faddp
test
dec
adc
or
ficom
push
xor
mov
ds
jl
and
clc
mov
sbb
je
push
cmp
sub
xchg
out
adc
pop
push
sbb
jmp
push
cs
adc
push
pop
cmp
adc
mov
mov
xor
cmp
sbb
adc
retf
outs
(bad)
sub
mov
or
add
jmp
nop
or
in
pop
push
add
mov
das
push
sub
or
jle
sub
add
rcr
cs
cmp
jo
(bad)
imul
ret
fcom
lock
sbb
mov
push
fdivr
int
or
cmp
jl
loope
xor
xlat
lds
retf
or
adc
jl
inc
dec
dec
ins
loopne
mov
jbe
fisttp
aam
out
addr16
mov
leave
pop
adc
gs
sub
or
pop
mov
sub
or
rol
xchg
or
test
inc
mov
jo
ds
push
add
inc
push
adc
add
popa
popf
fst
add
dec
scas
inc
cs
xor
rol
jle
lea
sbb
movs
push
inc
mov
or
shl
or
mov
mov
mov
clc
retf
inc
arpl
push
test
rol
scas
nop
in
or
sbb
icebp
or
or
ror
stos
push
pusha
and
mov
pop
xlat
mov
data16
cmps
cmp
push
xchg
call
mov
and
adc
ficomp
dec
sub
adc
xchg
daa
repnz
mov
or
mov
es
mov
ins
dec
fwait
xor
fimul
push
push
inc
dec
push
(bad)
aas
push
cwde
imul
cdq
idiv
push
and
pop
jne
hlt
jbe
lds
fidiv
in
cwde
add
jne
lock
int
inc
loopne
outs
ret
push
push
mov
add
sub
in
or
movs
fxch
push
mov
push
pop
add
dec
shl
addr16
xor
mov
add
aas
movs
add
in
and
sub
inc
inc
and
rol
push
cmps
or
inc
aaa
adc
popa
movs
stos
dec
mov
aas
or
sub
(bad)
jp
imul
pop
clc
xor
fwait
adc
cmp
pop
mov
out
and
call
xor
pop
sbb
mov
mov
popa
jns
jo
inc
or
sub
hlt
and
dec
sub
inc
sub
lds
push
nop
sbb
sbb
inc
mov
dec
out
xchg
jb
pop
push
or
jae
sbb
sbb
test
loop
xchg
or
fucomi
pop
dec
or
add
dec
loopne
pop
pusha
push
jge
add
cmp
jg
rol
mov
mov
add
dec
(bad)
push
(bad)
jb
sbb
mov
dec
(bad)
adc
sbb
in
mov
cmp
cs
cmp
adc
sbb
sub
ins
sahf
pop
cmp
lods
sti
into
add
jg
pop
mov
xor
adc
push
push
mov
rcl
imul
add
pusha
push
pusha
ins
out
add
test
in
jnp
mov
aas
loope
(bad)
cmp
mov
outs
add
cmp
int3
and
add
sti
xchg
mov
pop
inc
dec
dec
cmps
scas
jge
xchg
sti
sar
sub
ins
shr
inc
add
stc
push
mov
dec
adc
adc
and
call
cli
popa
dec
sbb
inc
mov
xchg
pop
(bad)
cmp
xor
adc
adc
in
popa
inc
dec
std
repz
dec
inc
mov
or
lock
and
dec
cld
mov
mov
es
or
sub
or
push
mov
rcl
arpl
pop
adc
push
(bad)
lods
les
cld
pop
adc
push
dec
dec
jns
mov
test
or
mov
retf
push
int
les
je
fdiv
call
dec
push
push
icebp
(bad)
or
pop
mov
xchg
lock
out
arpl
popa
inc
pop
cmp
pop
js
shl
sub
and
test
pushf
pop
test
jmp
dec
cmps
js
and
add
mov
adc
movs
rol
ins
ins
lds
sub
lods
adc
lds
test
call
fdivr
hlt
test
mov
inc
test
adc
mov
xchg
movs
xor
je
adc
cmp
arpl
dec
jne
add
mov
mov
cwde
pop
inc
or
adc
add
or
add
jmp
push
jne
pop
add
push
and
pop
mov
xchg
mov
loopne
mov
nop
inc
xor
jle
add
xor
ds
cwde
cmp
jbe
loop
cmps
fs
add
sub
fs
mov
push
jne
repz
or
sbb
sub
jo
cmp
xchg
or
jo
into
je
or
jl
dec
nop
bound
adc
test
pop
fwait
or
nop
mov
dec
push
or
scas
cs
fiadd
cmp
add
mov
cmovbe
jg
cdq
push
mov
dec
cld
or
xor
sbb
mov
es
dec
pop
sahf
test
aaa
pop
inc
fbstp
in
lea
pop
add
or
add
fsub
pop
cwd
ret
inc
and
inc
pop
ja
sub
mov
mov
dec
pusha
adc
adc
sar
inc
dec
movs
add
pusha
push
cmp
rol
mov
push
in
inc
leave
(bad)
cmc
jnp
mov
arpl
cmc
pop
sub
sub
pop
test
repnz
xchg
adc
into
pop
test
xchg
aaa
xor
adc
sbb
call
xchg
mov
mov
das
mov
mov
fsubr
imul
adc
or
cmp
loop
pop
push
fisubr
jmp
or
jb
add
adc
sub
push
shl
into
mov
jnp
inc
nop
push
pushf
mov
mov
jl
je
ins
les
lock
fld
jge
mov
push
mov
jle
xor
or
aaa
push
neg
ret
jne
sbb
push
int
fcom
and
sbb
inc
nop
jne
imul
add
sbb
xchg
pop
pop
mov
jae
push
push
xor
inc
xor
mov
sbb
sub
pop
mov
lods
push
push
push
or
dec
and
out
push
xor
or
fwait
add
sub
and
lock
dec
int
sbb
daa
bound
imul
outs
and
sub
jb
test
xor
retf
rol
pop
popa
inc
sub
and
pop
test
push
sub
daa
inc
or
mov
rcl
cmp
push
dec
jnp
ret
push
cwde
add
retf
mov
loopne
sub
adc
test
adc
cmp
mov
mov
xor
test
stos
sti
push
rol
ror
jnp
sahf
add
(bad)
in
daa
push
in
or
cmp
add
pop
cmp
cmp
mov
js
or
lea
loop
sbb
fnstcw
push
push
cmp
sbb
add
xchg
add
cld
push
or
je
pop
cmp
inc
shl
adc
adc
fwait
adc
adc
cmps
and
adc
add
inc
pop
xchg
popa
pop
out
push
xchg
jecxz
mov
nop
pop
mov
je
cmps
jne
ret
iret
add
jl
mov
cmp
or
in
div
je
or
je
or
sub
dec
call
das
adc
sbb
cmp
ficom
push
or
add
add
sbb
sahf
sbb
pop
jnp
dec
jnp
das
and
jmp
cmp
adc
rcl
adc
sub
adc
add
mov
inc
mov
xchg
jo
push
dec
lock
cli
mov
cmp
call
jmp
lea
test
(bad)
cld
lds
pushf
stos
inc
mov
adc
add
sbb
or
repz
std
dec
cmp
jmp
and
out
adc
dec
fsubr
adc
add
add
inc
push
sub
adc
das
(bad)
cli
cmp
sbb
je
ret
jle
xchg
sbb
pop
aaa
inc
dec
je
sub
sbb
sub
or
xor
adc
cld
inc
mov
sbb
fstp
shr
shl
mov
ret
push
adc
and
int3
pop
fidivr
movs
add
ins
adc
stc
xor
pusha
pushf
adc
cmp
push
loopne
test
mov
push
test
jnp
(bad)
and
dec
jne
cmp
cmp
hlt
jne
push
or
mov
pop
and
fiadd
lds
and
mov
test
pop
fsub
js
add
xor
out
je
push
xchg
rcl
jmp
cmp
dec
dec
add
mov
jo
push
push
push
or
or
xchg
call
loopne
pop
jo
or
mov
sub
adc
xchg
xchg
je
push
outs
cmp
or
pusha
call
dec
rol
not
fdivr
xor
mov
sub
add
sbb
xchg
pop
cmp
mov
mov
xchg
add
ret
inc
in
push
push
or
mov
ds
jb
inc
leave
push
fs
and
jb
in
shl
adc
cmp
mov
(bad)
add
out
repz
jge
mov
mov
mov
push
leave
js
lods
call
xor
xor
sub
in
adc
pop
mov
int
push
ret
pop
cmc
xchg
out
cmps
fsubr
fcom
or
or
(bad)
jmp
jbe
push
push
or
adc
add
mov
fdivr
xor
add
xchg
xchg
mov
fimul
mov
mov
inc
test
dec
fs
les
in
xchg
icebp
xor
sub
add
neg
test
dec
inc
sbb
mov
and
cld
lods
or
sbb
fiadd
ss
mov
mov
test
bound
adc
imul
or
adc
push
cmp
ins
sbb
test
mov
pop
xor
push
movs
push
iret
pop
fiadd
jg
sahf
and
or
mov
push
xor
test
adc
mov
lea
out
inc
loop
js
cmp
stos
jne
mov
or
push
xor
xchg
loopne
repnz
pop
out
xchg
sub
jae
dec
ret
sti
call
icebp
inc
in
div
or
sbb
inc
or
sbb
pop
stos
inc
pop
mov
jo
or
enter
push
in
sub
sub
mov
test
outs
in
push
shr
bound
pusha
dec
sub
dec
leave
outs
loope
fisub
adc
inc
mov
pop
mov
or
mov
outs
xchg
mov
cmp
loop
dec
lahf
rol
test
pop
push
add
and
sub
icebp
cmps
rol
push
push
loope
inc
pusha
push
xchg
cmp
sbb
or
inc
push
jbe
(bad)
mov
daa
xchg
sahf
mov
sub
daa
push
mov
dec
shr
imul
inc
or
fabs
pop
mov
and
xchg
loopne
int3
cmps
mov
pop
add
inc
jp
push
sbb
or
call
jle
pop
push
inc
leave
je
in
pop
rcl
add
cmp
fdivr
es
loopne
mov
jo
cmps
ret
xchg
push
sub
dec
sahf
call
repz
inc
xor
push
outs
int
xor
aaa
divps
jo
aaa
in
mov
inc
push
dec
cmp
hlt
cld
inc
bound
or
cmps
or
mov
mov
adc
adc
mov
repnz
pop
or
or
or
fwait
push
sbb
mov
cmp
scas
add
mov
(bad)
or
xchg
add
push
mov
sbb
mov
enter
xchg
mov
mov
adc
or
arpl
adc
test
push
add
push
sub
adc
out
test
inc
or
push
and
mov
popa
sub
popa
daa
cmps
mov
adc
inc
or
jne
cmps
ins
adc
xchg
pop
int3
xchg
xchg
shr
enter
je
ds
clc
leave
sub
inc
cmpps
pop
scas
mov
ret
or
test
sbb
(bad)
cmp
inc
push
ret
xor
fisub
mov
jnp
into
fcomi
sub
pop
or
ss
cwde
dec
das
mov
cmp
mov
xor
enter
jne
xor
add
push
in
push
cmp
and
push
dec
adc
call
test
nop
adc
jp
cmp
xchg
inc
cmc
jns
adc
jge
lock
cmp
cmp
or
sub
sbb
xchg
inc
das
push
sbb
pop
or
pushf
std
and
adc
iret
js
les
add
aad
and
pop
enter
adc
call
push
xor
mov
and
cmp
cmps
pop
add
in
xor
xchg
mov
adc
lods
sub
inc
and
fist
and
not
add
pop
jno
sub
inc
clc
inc
movs
into
jle
push
jecxz
lahf
add
pop
retf
in
call
fs
adc
sahf
rcr
sbb
test
sbb
test
sub
rol
pop
jb
nop
push
sub
add
gs
push
fs
mov
outs
mov
push
push
mov
xor
adc
sub
(bad)
xor
sub
and
sub
adc
out
xchg
lods
das
mov
fsubr
fmul
pop
lds
out
pop
out
dec
mov
cs
in
sbb
in
cmp
push
pop
cmp
inc
lock
xchg
jmp
lock
jle
jmp
ret
fcomp
inc
jnp
sbb
jg
cmp
adc
pop
gs
ins
out
pusha
xchg
lock
add
sbb
adc
jae
iret
outs
dec
and
lock
dec
add
mov
push
repnz
pusha
je
rol
pop
add
data16
je
cmp
je
jmp
aad
adc
mov
in
dec
mov
mov
add
(bad)
dec
adc
push
or
sti
and
inc
in
inc
shl
popa
hlt
das
mov
in
dec
dec
push
repnz
pop
je
add
outs
xchg
stos
je
cmp
cmp
sbb
cli
fsub
data16
xchg
or
jecxz
into
fsub
cld
lods
inc
cmps
push
ins
mov
add
and
mov
leave
inc
push
jo
push
add
add
outs
jmp
cmp
pop
adc
adc
outs
cmp
imul
mov
push
data16
push
pop
mov
mov
inc
mov
pushf
cld
inc
adc
and
jo
mov
or
cld
ins
fs
cmp
std
out
jl
pop
nop
add
cmc
adc
nop
retf
and
pop
and
mov
mov
adc
and
push
arpl
fucom
adc
or
(bad)
fcom
dec
or
je
adc
mov
scas
sbb
jge
push
xchg
out
push
pusha
add
and
add
and
adc
pushf
sbb
jmp
mov
sub
sub
pop
add
lea
xchg
movs
loope
xchg
aaa
or
js
rcl
jle
adc
sub
jae
and
or
movs
cmp
xor
and
and
cld
and
push
jg
pop
cmp
xchg
jg
xor
add
xor
sbb
ret
retf
nop
add
fs
and
ins
push
dec
and
ss
les
enter
sub
add
lahf
out
cmp
jb
in
push
daa
jae
sti
je
neg
and
push
(bad)
push
adc
dec
push
xchg
push
mov
mov
dec
neg
dec
clc
call
stos
inc
pop
add
jmp
sbb
js
fst
dec
or
adc
or
mov
repz
ret
movs
test
pop
dec
adc
sub
push
add
sbb
cmp
aas
fsub
cdq
(bad)
push
sbb
mov
sub
jb
psubsb
adc
push
xchg
cmp
fistp
(bad)
jl
(bad)
and
cld
or
sbb
(bad)
cmps
lea
xchg
sbb
fmul
loopne
cmp
adc
fnstenv
and
xor
fwait
dec
je
cdq
xor
addr16
into
das
xor
mov
mov
jp
in
pop
call
in
mov
in
and
jge
rcr
test
and
or
or
dec
mov
(bad)
ficomp
pusha
mov
rol
xor
adc
sub
mov
fld
inc
jne
cmc
push
mov
pop
xor
loope
imul
cmc
cmp
(bad)
push
sbb
popf
add
sub
xchg
mov
mov
sbb
add
adc
add
mov
int3
sbb
jne
xchg
push
rol
pop
jge
pop
adc
or
inc
xlat
aaa
add
sbb
loopne
dec
and
loop
scas
pop
pusha
sub
sbb
pop
clc
inc
mov
rcr
(bad)
scas
outs
cmp
mov
out
or
add
mov
scas
shl
pop
push
lock
lock
dec
xlat
sbb
rcl
or
retf
cmp
push
mov
rol
adc
(bad)
mov
(bad)
push
xchg
and
add
loop
push
leave
arpl
push
cmp
call
add
shl
mov
xlat
lahf
adc
jl
scas
gs
call
push
shl
push
mov
add
cmp
jne
sbb
ja
mov
clc
or
add
push
scas
mov
add
cmps
dec
jmp
sbb
test
or
push
push
mov
arpl
xchg
lds
push
inc
scas
or
or
cmp
xor
sub
call
jg
js
dec
sub
push
and
or
jmp
outs
je
xchg
repz
call
mov
and
jge
loope
out
enter
je
lods
test
out
(bad)
aam
adc
xchg
adc
xchg
cmp
les
mov
pop
push
shr
ss
xor
pop
jo
cmps
add
or
jbe
clc
sub
jge
adc
jo
or
sub
pop
mov
enter
das
fcom
mov
dec
es
sti
call
loop
mov
lds
and
cmps
cmc
and
imul
ja
jg
mov
movs
xor
adc
jle
or
adc
sub
or
sbb
jp
add
lock
ret
xor
or
es
ror
repz
push
(bad)
fstp
add
mov
cmp
jbe
shl
nop
pop
xor
leave
push
xor
nop
pop
or
and
add
xchg
fnstenv
lods
cmp
sbb
add
mov
add
adc
mov
add
dec
dec
dec
pop
lods
sbb
sar
adc
popa
leave
xchg
nop
mov
nop
mov
or
push
or
imul
sbb
push
dec
stc
add
test
push
call
ins
dec
sub
jo
add
mov
inc
lahf
mov
push
cmp
push
pop
sub
and
or
gs
jp
test
mov
shl
lock
sub
sar
shl
repnz
(bad)
pusha
test
loop
inc
jne
fild
fs
mov
push
aad
repz
lock
test
push
shl
inc
adc
inc
mov
aas
ja
push
cld
adc
mov
push
adc
add
mov
adc
add
out
lock
fwait
mov
jne
and
nop
inc
and
test
mov
sbb
jnp
shr
imul
sub
jnp
or
lahf
cld
je
nop
out
xor
jbe
jb
pop
xor
sbb
mov
ins
sbb
sbb
or
and
xchg
repnz
jle
cld
push
push
fsubr
fwait
sub
sbb
icebp
push
sub
shl
(bad)
iret
loopne
push
pop
ds
push
cmp
lea
scas
push
push
loopne
dec
add
mov
in
mov
rol
push
repnz
popf
stos
add
add
mov
mov
ficom
icebp
jo
and
dec
dec
adc
leave
mov
rcl
loop
cmp
xchg
and
push
sbb
mov
shl
neg
mov
in
jmp
sbb
push
add
add
or
inc
jecxz
aam
leave
sbb
xor
jb
mov
arpl
stos
xor
imul
push
dec
stos
rcr
imul
push
in
inc
ror
and
inc
(bad)
test
inc
shl
dec
add
and
cmp
rcr
(bad)
sub
xchg
mov
sbb
sbb
call
fcom
lods
test
stc
dec
inc
arpl
stc
jl
out
and
mov
and
dec
add
push
lds
daa
or
push
adc
scas
pusha
push
imul
push
ret
cmp
sub
aaa
test
add
mov
jl
fwait
dec
ins
add
push
pop
ret
retf
ret
retf
push
test
aaa
mov
or
jns
sbb
add
test
or
add
cmp
push
mov
xor
sahf
ret
ss
push
and
add
jp
xchg
xor
out
aad
cmp
test
push
hlt
test
cmp
jecxz
into
les
(bad)
icebp
push
cmp
jp
rol
dec
inc
or
lea
cld
push
imul
mov
or
or
lock
sbb
or
sbb
or
pop
js
mov
adc
pop
sbb
hlt
adc
int3
sbb
sub
or
imul
mov
or
xchg
aam
adc
jmp
stos
rcr
stos
jl
push
clc
test
ffree
xor
jge
xchg
pop
fist
call
clc
not
test
pop
jbe
ins
in
inc
pop
add
mov
inc
and
lea
test
mov
push
jmp
imul
je
inc
or
xchg
icebp
jbe
adc
cmp
das
rcl
leave
nop
sbb
cmp
adc
pusha
lds
or
jno
shl
sbb
popa
(bad)
inc
xor
lock
cmp
xchg
aaa
das
cdq
push
add
inc
push
inc
inc
sti
jl
test
jg
cmp
jg
sahf
pop
mov
or
ret
mov
push
cdq
pop
daa
sbb
ret
mov
aas
clc
fistp
mov
push
add
dec
add
jmp
add
rcl
aaa
inc
sub
push
imul
dec
popa
jbe
out
adc
push
es
xor
and
add
icebp
mov
xchg
ins
addr16
mov
movs
jge
sbb
shl
push
fdiv
or
jns
pop
sub
xor
xor
cmp
cmps
mov
sub
inc
dec
fs
mov
push
data16
and
ret
push
sti
jecxz
push
mov
or
mov
pop
jg
or
inc
add
cmp
ror
sub
cdq
mov
mov
js
mov
dec
jno
jne
pop
shl
add
bound
dec
outs
adc
movs
dec
xor
pushf
push
mov
in
pop
xchg
and
popf
push
cmp
(bad)
scas
ins
cdq
and
push
mov
and
cwde
enter
sar
push
pop
jp
enter
jmp
cmp
push
fcmovb
cmp
ss
sbb
lock
test
popf
and
cmp
and
or
push
mov
push
in
jo
das
push
lahf
add
call
mov
outs
out
xchg
pushf
mov
mov
inc
and
lods
pop
test
and
xchg
mov
xchg
cmc
or
cmp
push
mov
push
mov
xchg
add
loope
ffree
lods
inc
pusha
mov
out
xor
inc
mov
dec
sub
and
mov
xchg
out
test
jge
je
pop
cmp
inc
jl
popf
sub
out
pop
sub
push
cmp
or
aaa
mov
clc
cmp
rep
add
xor
popf
mov
pop
or
dec
and
add
ins
jmp
sub
jae
sbb
inc
pushf
pop
js
push
jae
sbb
fwait
sub
(bad)
mov
adc
pop
push
daa
pop
or
mov
push
mov
mov
push
push
mov
push
imul
mov
pop
xchg
adc
inc
xor
push
adc
xor
adc
pop
popa
or
add
xor
mov
mov
imul
cmp
or
data16
xchg
lahf
push
xor
push
test
sub
test
scas
jno
xchg
adc
xchg
xchg
mov
dec
rol
push
iret
test
adc
xor
das
(bad)
mov
int3
jae
sbb
shl
lock
mov
push
push
push
jne
inc
popa
mov
pop
rcr
and
and
sbb
jbe
jle
call
hlt
lock
xchg
cdq
test
inc
mov
push
or
sbb
dec
push
push
shr
push
test
loope
mov
xor
pop
cs
adc
jmp
add
outs
push
fmul
in
gs
xlat
mov
lds
push
retf
mov
cmp
out
mov
add
icebp
add
rol
inc
push
add
cmp
xor
cmp
jne
call
adc
lea
push
inc
scas
push
loope
fadd
adc
inc
and
loopne
rcl
cmp
dec
xchg
retf
adc
pop
sbb
test
adc
lods
add
dec
nop
addr16
xlat
cmps
sub
add
add
clc
adc
jbe
sbb
fisubr
call
xchg
add
psrad
sbb
mov
mov
mov
add
dec
ror
and
out
test
rcl
test
pusha
or
push
sldt
lahf
or
xor
dec
adc
mov
inc
cmp
xor
test
xor
add
or
push
push
jmp
sbb
rol
add
popf
add
or
add
and
cmp
cmps
add
test
int
jo
and
sub
or
mov
add
xchg
sbb
push
mov
xlat
(bad)
jb
xchg
add
push
or
imul
ret
sub
rol
ins
pop
add
sahf
ja
test
mov
xor
adc
cmp
cmp
out
fs
xchg
push
and
cmp
mov
and
jg
cli
clc
pusha
inc
popf
cs
ret
adc
push
add
xor
jmp
cmp
int
mov
aad
and
das
retf
push
ret
jmp
mov
push
push
mov
sub
or
add
jl
jno
xor
push
mov
inc
or
jle
fistp
or
jbe
mov
sbb
iret
jne
or
es
add
icebp
push
xchg
cmp
jge
add
enter
or
xchg
xchg
adc
mov
aaa
test
inc
jmp
stos
push
(bad)
mov
jo
loope
stc
(bad)
jne
sub
outs
sar
ror
les
pop
jp
cmp
shl
adc
mov
xor
retf
pusha
iret
jmp
xchg
jmp
dec
hlt
jae
adc
mov
jg
sub
ret
movs
stos
in
adc
icebp
retf
add
jnp
pop
adc
popa
loop
shl
inc
inc
clc
add
push
inc
(bad)
mov
les
inc
sub
jb
daa
(bad)
jmp
adc
and
data16
pop
add
jecxz
mov
std
nop
mov
sub
push
sub
sbb
xor
loopne
jae
add
adc
add
dec
sti
xchg
ins
push
xor
mov
pop
(bad)
enter
pop
enter
adc
cmp
push
and
mov
xchg
add
and
sbb
sbb
push
ds
js
mov
adc
daa
or
cmp
(bad)
and
cmp
cmp
add
dec
and
ftst
nop
inc
or
mov
outs
imul
adc
push
jb
push
or
or
ins
bound
xchg
ins
lahf
sbb
cmp
jl
and
imul
jb
ins
cmp
push
adc
popa
movs
xchg
sbb
pop
jecxz
cld
or
pop
arpl
pusha
loop
mov
mov
cmps
jne
outs
inc
jbe
inc
xor
dec
pushf
je
and
cmp
or
outs
dec
pop
sub
jbe
pop
rcl
shl
retf
mov
gs
sbb
leave
nop
js
inc
adc
rol
loopne
jmp
inc
adc
cmp
push
inc
aas
and
lahf
sbb
and
jb
sbb
and
and
sbb
sbb
cmp
jg
jb
sbb
sub
sbb
sbb
movs
sbb
sub
xchg
mov
cs
or
xor
cmps
mov
in
pop
cmp
inc
push
std
ins
leave
push
jne
cmp
jmp
mov
mov
shr
lea
and
leave
in
into
cmp
cld
or
std
push
jae
mov
adc
pop
add
sti
fisubr
or
sbb
jbe
shl
adc
sbb
sbb
xchg
scas
test
and
push
push
loope
sub
jne
hlt
nop
xor
adc
adc
mov
jne
arpl
cmp
mov
popa
je
push
fsubr
mov
sub
adc
outs
cmp
dec
sub
arpl
mov
xchg
mov
sbb
lds
dec
fld
or
mov
in
loop
fimul
rol
enter
ret
mov
shr
aam
js
mov
push
mov
test
sbb
jo
pop
and
icebp
jae
stos
pop
hlt
mov
jb
mov
add
fs
ja
push
mov
or
pop
push
cmp
sub
mov
mov
loopne
cmp
mov
pop
add
inc
or
ins
add
mov
adc
pop
lock
mov
push
add
xchg
jmp
inc
call
(bad)
push
push
pusha
pop
leave
(bad)
loopne
adc
inc
jbe
cmp
sbb
fs
pushf
sub
movs
(bad)
iret
push
out
jecxz
stc
lock
(bad)
adc
add
and
out
pushf
xchg
add
jno
loope
es
out
pop
or
adc
ins
push
clc
and
in
sbb
cmp
push
(bad)
or
pop
or
loopne
call
es
adc
and
fisttp
add
je
xchg
and
jmp
cmp
retf
jl
push
cmp
popf
jmp
inc
push
je
sub
mov
xor
adc
out
retf
push
retf
sar
mov
mov
or
js
test
push
(bad)
pop
pop
cmp
pop
aas
pop
sbb
add
sbb
xchg
je
inc
lahf
sub
adc
add
jne
test
mov
add
loop
mov
mov
mov
add
fmul
sub
test
mov
or
mov
and
pop
lock
movs
pusha
or
add
mov
cmp
mov
push
pop
inc
jp
inc
xor
xor
sub
inc
push
add
sub
pop
lock
rol
ds
jecxz
cld
nop
aam
arpl
fwait
popf
cmp
push
in
cmc
call
jg
dec
and
inc
or
loopne
outs
adc
lea
push
mov
cmp
mov
push
(bad)
rcl
rcl
jae
sbb
shl
les
aam
mov
jmp
jl
jo
out
jnp
dec
push
xor
and
imul
(bad)
in
sar
je
cmc
(bad)
adc
fadd
xchg
xor
stc
stos
xlat
aad
fist
inc
and
js
mov
test
pusha
adc
push
push
dec
sbb
jmp
inc
adc
call
push
xor
fild
mov
adc
mov
dec
adc
(bad)
jbe
jmp
lahf
mov
mov
test
sub
dec
or
inc
mov
(bad)
ins
ja
sbb
and
pop
test
push
adc
mov
push
add
jo
mov
mov
popaw
inc
cmps
loopne
ret
int
aaa
add
adc
sub
mov
pop
or
dec
loope
scas
ins
mov
std
adc
push
aaa
rcl
cmp
loopne
lahf
pop
add
sub
sub
pusha
idiv
jge
mov
pop
push
push
or
(bad)
in
(bad)
fcom
jmp
push
cmp
stos
adc
mov
inc
sbb
dec
adc
popa
sub
je
jle
call
push
push
nop
(bad)
mov
aas
push
ss
push
es
fwait
add
call
mov
jb
icebp
retf
inc
scas
clc
or
and
shl
outs
adc
shl
nop
out
enter
lods
add
mov
stc
jae
add
dec
mov
ret
pushf
and
dec
xor
and
xchg
xchg
mov
inc
or
lock
pop
xor
pushf
push
in
mov
ret
or
and
pop
xor
push
push
sbb
loopne
shl
pushf
and
xor
add
pop
ss
mov
jmp
sar
cmp
xor
rcr
and
push
add
imul
push
ins
push
push
lea
test
(bad)
jo
push
mov
imul
adc
mov
sbb
mov
add
popa
int3
sub
add
jnp
and
rol
or
and
or
icebp
dec
pop
xchg
cmp
or
test
cmp
and
bound
loope
xchg
inc
pop
xchg
aam
sbb
xor
pusha
push
clc
jo
daa
push
retf
ret
out
loope
movs
cmps
sbb
add
mov
lods
mov
sbb
inc
sbb
jno
push
stos
mov
jmp
push
dec
in
xor
mov
mov
mov
call
dec
loopne
aam
cmps
xor
jbe
push
sub
inc
pop
push
mov
(bad)
push
outs
mov
and
cli
mov
push
add
push
push
pop
mov
xor
inc
pop
xchg
xor
sbb
add
call
les
(bad)
xchg
cmp
ror
xchg
adc
and
shr
xor
push
pusha
xor
xchg
lahf
and
inc
dec
pop
jne
inc
scas
leave
(bad)
adc
add
push
fbld
lahf
and
push
inc
or
push
push
mov
mov
and
nop
sub
mov
mov
jmp
dec
mov
pushf
ss
in
repz
shl
bound
adc
add
adc
pop
sbb
pushf
test
xor
and
addr16
pop
repz
test
and
push
adc
push
ror
push
cmc
or
pop
mov
and
inc
test
dec
clc
add
js
xchg
push
pop
xor
pop
(bad)
or
adc
sbb
movs
jmp
xchg
ss
int
or
rcl
push
push
and
hlt
inc
mov
pop
shl
push
cdq
inc
add
mov
and
add
jno
in
pop
dec
mov
add
ss
add
adc
stc
outs
arpl
cmps
jecxz
sbb
xlat
pop
cmp
or
mov
push
mov
cmp
pop
ss
mov
test
call
add
js
push
xor
enter
sub
jmp
in
pop
adc
mov
and
(bad)
sub
mov
scas
inc
pop
xor
xor
jmp
push
push
sub
push
loope
xor
or
jno
movs
stos
loope
dec
pop
mov
test
in
sbb
cmp
js
push
or
dec
in
pop
or
call
inc
jns
bound
popf
mov
dec
retf
jmp
adc
imul
cmp
test
adc
push
icebp
nop
push
push
rol
popa
cmp
nop
push
push
aad
and
xor
movs
hlt
loopne
pusha
aam
or
or
sbb
add
add
mov
enter
or
rol
jo
mov
and
int
popf
pop
ins
inc
imul
movaps
push
mov
aad
das
add
pop
inc
clc
mov
adc
mov
and
xchg
inc
pushf
sbb
jo
rcr
push
push
pop
lea
jmp
mov
nop
xchg
cwde
pushf
add
adc
lahf
sbb
pusha
cld
sbb
lea
sub
push
stos
sub
test
pop
mov
fmul
rol
mov
or
mov
pop
inc
mov
mov
into
sbb
movs
inc
fimul
mov
movs
rcr
push
mov
cmp
int
jmp
movs
lods
jmp
or
sbb
cmp
in
and
mov
lea
mov
cmc
cmp
dec
xor
jle
clc
jnp
sbb
mov
push
loopne
cs
dec
or
fmulp
push
mov
mov
push
mov
sbb
push
push
retf
mov
mov
jmp
scas
outs
jecxz
popa
inc
push
pop
mov
cli
mov
in
mov
mov
dec
add
nop
xchg
dec
sub
mov
xor
or
cmp
mov
sub
mov
xchg
mov
sti
pop
inc
sbb
(bad)
(bad)
addr16
bsr
adc
shl
mov
fdivr
lock
inc
push
pop
add
mov
mov
cmp
ss
adc
loopne
or
and
mov
stos
cmp
sub
lods
sub
add
push
adc
rol
adc
xor
mov
je
push
stos
add
fcmovnb
int
mov
fwait
dec
fadd
adc
push
push
jns
outs
xlat
test
mov
push
push
repz
js
ds
mov
sbb
ds
je
shl
push
lock
push
movs
ds
adc
jmp
sbb
hlt
and
jle
mov
in
pop
lock
or
icebp
push
sbb
xlat
lods
dec
jne
sub
xlat
adc
aam
mov
or
jo
or
clc
repnz
adc
mov
fnstenv
ins
out
loope
jl
(bad)
jmp
add
xchg
jne
cmp
pushf
daa
shl
mov
div
mov
fcom
cmp
fabs
or
mov
dec
and
hlt
(bad)
loope
lahf
cmp
mov
push
retf
push
inc
je
mov
outs
cwde
cmp
lock
stos
dec
cmp
cmp
enter
test
fs
lock
sbb
sbb
pop
pushf
imul
xchg
or
repz
add
xor
xchg
push
add
nop
sub
retf
sub
fwait
pop
push
mov
push
imul
pop
push
mov
std
push
sub
dec
push
adc
inc
inc
or
lock
fisttp
test
stos
push
cwde
pop
cmp
xor
push
pop
dec
in
push
hlt
add
sub
lock
dec
cmps
jo
jae
inc
ins
lea
cmp
cmp
adc
mov
add
sbb
or
or
out
cmp
sbb
test
cli
sbb
push
sbb
jbe
push
dec
jecxz
sbb
sti
lea
add
sbb
imul
aam
test
(bad)
or
mov
dec
add
xor
mov
sbb
mov
jnp
push
ret
(bad)
xlat
cmps
xor
lock
pop
pop
sub
leave
cmp
push
lahf
call
dec
and
das
mov
jae
fiadd
adc
fiadd
and
fidivr
jno
jo
sub
sub
push
in
inc
cmp
leave
imul
test
inc
fdiv
cmp
fsubr
ret
popa
push
outs
add
lods
sti
cmp
push
adc
(bad)
push
sub
shr
(bad)
fsub
fdiv
push
lods
adc
push
pop
sub
mov
loopne
add
les
loope
lahf
fild
or
pusha
add
inc
clc
pop
lock
rol
push
mov
and
adc
or
je
mov
or
mov
adc
mov
add
scas
popf
mov
mov
push
test
cmp
xchg
ret
or
inc
push
or
cmp
jb
popf
loopne
sbb
int3
retf
cmp
ss
repnz
dec
mov
push
loop
and
ja
jns
lock
adc
mov
push
mov
mov
mov
adc
mov
or
rcl
pop
inc
cmp
movs
test
(bad)
popf
dec
pop
jp
cmps
ss
mov
lods
pusha
add
or
sub
lock
cmp
sbb
inc
mov
sahf
pop
sbb
fwait
pop
int3
xchg
xchg
cmps
or
push
xchg
xchg
jns
cmps
cmp
pop
xchg
pop
push
or
hlt
mov
xor
push
enter
das
xor
cmp
pop
std
pusha
fdiv
outs
jp
je
add
adc
je
data16
test
xchg
inc
mov
push
sar
ret
jg
add
adc
retf
jbe
fnstsw
add
push
jge
push
jo
repz
jle
xchg
(bad)
push
cmp
sbb
(bad)
jp
outs
cmp
pop
(bad)
(bad)
ja
mov
sbb
xchg
sbb
cmp
in
sub
je
push
cmps
and
sahf
ror
mov
mov
or
sbb
sbb
jns
nop
sub
data16
jmp
inc
jo
pop
pop
jns
add
(bad)
addr16
and
add
mov
lock
fcmove
add
addr16
mov
and
movs
push
or
jno
mov
aam
sub
scas
mov
or
sti
jl
lods
(bad)
retf
jmp
pop
cmps
push
push
lods
push
leave
fs
add
xchg
push
mov
mov
mov
fwait
jb
rcr
(bad)
test
mov
jle
mov
mov
or
sar
and
sub
sbb
pop
ret
(bad)
mov
push
rcr
daa
mov
mov
or
add
test
(bad)
inc
push
sbb
ins
test
adc
pusha
push
test
scas
(bad)
push
fisubr
mov
mov
and
jl
pop
ret
jge
add
loopne
adc
(bad)
add
inc
movs
xor
stos
add
retf
in
jns
pop
dec
and
push
add
scas
push
fcomp
adc
mov
in
and
test
dec
xchg
test
jbe
dec
mov
and
adc
and
dec
mov
add
jns
sbb
or
adc
push
mov
xchg
xchg
lds
adc
mov
push
(bad)
(bad)
test
jo
and
xchg
push
into
je
pusha
in
scas
xchg
out
rcr
dec
sub
mov
mov
nop
(bad)
cdq
movd
test
push
push
test
lods
lea
test
add
addr16
pop
fnstcw
jle
inc
inc
call
and
pop
add
mov
mov
and
(bad)
adc
xor
cmc
fld
and
mov
pusha
popa
mov
or
and
test
js
rcr
lea
push
xchg
ins
mov
mov
jg
and
dec
adc
push
adc
add
jo
fwait
cmp
repnz
mov
add
xor
pop
xchg
stos
nop
imul
add
push
cmps
fld
inc
aas
mov
test
loopne
dec
push
popa
jne
mov
cmp
pop
pop
jl
push
jno
gs
hlt
push
into
dec
cmc
or
popa
imul
xchg
outs
and
xchg
xlat
mov
imul
je
mov
ins
call
mov
ss
jno
inc
inc
adc
je
(bad)
scas
mov
cmp
inc
test
xchg
and
push
fwait
shr
ror
xor
pop
dec
add
mov
jge
and
inc
push
stos
push
add
cmp
pop
mov
inc
out
xor
add
cmp
daa
add
xchg
mov
out
push
xor
push
call
inc
in
cmp
imul
pop
adc
add
inc
fld
xor
jle
add
jae
cmc
mov
adc
pop
inc
or
push
pusha
and
cmp
xor
mov
test
fdivr
lea
lds
add
cmp
dec
xor
loop
add
shr
add
ficom
sbb
adc
and
loope
ror
(bad)
push
pop
jl
ret
shr
cmp
jbe
add
jmp
add
pushf
inc
dec
or
test
ret
and
dec
loop
inc
dec
loopne
jg
loopne
jl
mov
add
sub
sub
adc
mov
mov
popf
call
dec
sub
push
xor
mov
enter
dec
or
or
call
sar
mov
add
xchg
test
and
ror
das
fst
mov
gs
rcl
or
or
mov
loop
and
aaa
cmps
mov
mov
test
fst
cdq
movs
mov
push
mov
jl
dec
fcomp
mov
loopne
fcomp
xor
popf
add
add
dec
inc
adc
mov
adc
jo
fldenv
fdiv
xor
daa
push
or
(bad)
pop
aaa
xor
jb
push
push
push
xor
push
shl
out
mov
aad
nop
xchg
loope
arpl
or
adc
outs
cmp
jg
and
stos
jl
cmp
je
pop
neg
xor
mov
or
push
shr
rcl
das
sbb
scas
cmp
mov
and
sbb
push
add
adc
xchg
mov
cmp
ins
ret
pop
xchg
and
or
jno
push
imul
mov
scas
dec
xchg
pop
push
call
mov
bound
sahf
inc
les
repnz
in
or
pop
mov
pop
ds
add
mov
repz
push
out
sub
lea
imul
adc
cwde
pop
mov
mov
and
push
push
add
fst
fnsave
push
or
shl
loope
cdq
jmp
ins
add
add
adc
adc
or
leave
or
add
loope
inc
mov
(bad)
sar
cmp
int3
xchg
xor
ins
cs
mov
pusha
je
pushf
push
push
sub
int3
xchg
add
add
sbb
dec
enter
retf
(bad)
out
mov
sbb
in
lds
adc
jmp
shl
mov
aam
mov
lods
xchg
cmps
enter
adc
dec
sub
xor
outs
test
mov
push
repz
push
jl
dec
jae
(bad)
fcom
mov
fcmovnb
inc
jnp
in
mov
test
in
inc
imul
lods
xchg
mov
push
fcomp
in
test
pop
push
push
inc
mov
adc
ss
repnz
adc
mov
push
(bad)
lahf
fistp
sbb
popa
popa
shl
mov
add
inc
fsubr
aam
adc
sbb
por
aaa
pop
and
jmp
movs
shl
fld
add
add
ja
lods
pop
sub
jo
xchg
movups
pop
mov
adc
push
test
(bad)
sub
and
ret
jbe
push
push
xor
sub
mov
es
push
pop
inc
(bad)
push
adc
or
cmp
pop
ins
adc
sbb
pushaw
cwde
es
dec
pop
outs
cmp
fcmovnb
sub
inc
adc
add
mov
cmp
lahf
jb
je
push
addr16
sub
inc
push
(bad)
dec
das
mov
or
adc
int3
(bad)
inc
ret
pop
inc
or
sbb
movs
fabs
or
push
mov
mov
in
or
add
xchg
dec
xor
aaa
and
jns
pop
xchg
jecxz
scas
or
mov
loopne
cmc
and
lea
stos
mov
mov
push
sti
push
add
or
jg
jmp
int
push
mov
cmp
cs
inc
and
jmp
sub
ret
retf
push
add
and
jmp
jge
and
rol
and
or
xchg
sub
mov
pushf
xor
cmp
mov
sar
rcr
test
mov
dec
rol
mov
mov
outs
or
test
mov
inc
and
fist
inc
xor
mov
add
xchg
leave
cmp
ins
popf
mov
add
ins
cli
push
ins
and
jp
sbb
and
adc
mov
icebp
mov
pop
sbb
inc
mov
retf
neg
inc
or
xchg
or
jnp
arpl
pop
sbb
data16
lock
push
cmp
in
or
stos
jo
dec
push
mov
sub
imul
pop
jns
inc
jecxz
cmp
fwait
mov
pop
div
pop
cmp
sbb
add
mov
scas
sti
test
call
aam
push
cmp
xor
(bad)
pop
loope
rcl
push
(bad)
cdq
xor
les
sbb
sub
mov
into
pop
loop
pop
jno
mov
or
iret
cmp
cli
pop
push
add
add
pushf
shl
pop
je
inc
pop
loopne
fmul
add
mov
add
or
cmpps
ret
fst
mov
les
addr16
pop
pop
or
xchg
jo
mov
pop
shr
mov
mov
popa
jl
jbe
jl
or
test
sahf
xchg
pop
sahf
ret
rep
mov
dec
pop
mov
sub
xchg
adc
lods
addr16
inc
les
call
sbb
dec
sbb
rol
push
add
loop
push
xchg
and
jl
ret
jle
mulps
adc
aaa
loopne
movs
push
call
ins
cli
dec
xchg
jno
jle
push
pop
xchg
mov
cmps
push
cmps
cmp
dec
jbe
push
cmp
mov
push
mov
mov
jno
ret
addr16
inc
pop
cmp
stos
cmp
out
xor
pop
pusha
pusha
loopne
(bad)
leave
retf
and
add
xor
inc
jb
jmp
push
bound
sbb
imul
mov
arpl
imul
inc
adc
inc
xor
imul
mov
cdq
repnz
pop
adc
add
dec
and
cdq
jno
hlt
xor
pushf
les
mov
rcr
mov
ins
mov
or
inc
imul
dec
push
or
and
inc
inc
cmp
add
fs
stos
icebp
test
scas
add
movs
adc
push
add
lods
adc
pop
pop
mov
cmp
or
mov
cwde
fwait
(bad)
mov
test
mov
add
test
dec
lahf
nop
xor
rcl
(bad)
ins
xlat
add
nop
(bad)
nop
sub
lods
mov
les
or
pop
pop
pop
push
shl
int3
push
shr
jne
fcomp
add
add
sub
push
je
pushf
and
mov
sub
dec
xor
ins
xor
pop
rol
test
loop
ror
mov
push
push
xor
test
mov
push
add
lods
adc
pop
mov
mov
lods
inc
pushf
sub
sub
test
push
mov
xchg
jl
push
call
in
and
xchg
dec
enter
test
lds
rcl
icebp
popa
fist
jmp
add
jmp
sub
or
call
sbb
fwait
xor
adc
adc
leave
dec
adc
push
xor
and
mov
lahf
xor
and
jae
sbb
or
jge
jns
and
lods
cli
mov
cmp
jne
push
mov
aad
lock
call
sub
mov
xlat
arpl
jmp
push
adc
out
xor
outs
into
sub
mov
stc
pusha
rol
fs
sbb
imul
mov
jmp
xor
inc
sub
movs
add
push
mov
inc
in
lock
adc
outs
and
sar
aaa
cmp
pop
test
bound
cs
mov
rcr
mov
add
add
ret
cs
mov
movs
retf
mov
out
xchg
push
sbb
or
xchg
les
mov
push
pop
lock
inc
shl
cmps
(bad)
jmp
mov
adc
loopne
xchg
mov
loopne
pusha
aaa
sub
js
xlat
daa
(bad)
pop
aam
lock
test
(bad)
imul
xchg
pop
gs
in
mov
push
popa
mov
mov
mov
sbb
fsubr
push
test
add
or
push
popa
or
rcl
cdq
jge
dec
pop
icebp
mov
or
movs
je
mov
push
loopne
jo
in
pop
shl
xchg
sbb
(bad)
or
jmp
inc
jno
sub
pop
and
mov
daa
jno
and
aas
sbb
aam
movs
ror
dec
push
loop
ins
mov
div
or
mov
sub
daa
and
xchg
xlat
pop
(bad)
jns
inc
shl
mov
push
add
push
sub
stos
or
(bad)
outs
adc
inc
cmps
inc
sub
imul
add
jmp
pop
inc
mov
dec
sub
jno
mov
or
or
push
jle
cli
je
cdq
pop
retf
data16
or
mov
mov
(bad)
in
inc
add
jns
sub
les
add
add
dec
fcom
pusha
adc
cmps
pop
cmp
out
fimul
aam
jle
jl
add
aam
bound
jnp
jmp
adc
cpuid
movs
mov
fsubrp
(bad)
inc
or
fild
mov
xchg
push
push
into
sub
adc
push
dec
cli
(bad)
repz
scas
or
push
jmp
or
pop
push
std
sbb
scas
or
add
jne
mov
jmp
fstp
(bad)
jmp
aam
and
dec
lds
popa
out
lock
rcr
lds
ja
fnstsw
add
dec
movs
push
push
movs
dec
inc
hlt
fst
dec
fcomp
fnstsw
call
add
inc
clc
pop
fsubr
ret
sti
pop
faddp
and
sbb
les
push
mov
xchg
jo
cmps
push
mov
cs
pop
shl
rol
cmp
dec
xchg
fs
pop
sub
iret
inc
into
adc
and
pushf
add
add
icebp
les
jge
rol
pop
out
bound
mov
(bad)
es
or
popf
ins
lods
inc
inc
add
jmp
retf
leave
pop
inc
shl
xor
push
or
or
and
push
mov
add
xchg
dec
bndldx
fmul
mov
arpl
xchg
out
stos
ss
push
dec
jp
stos
cmp
mov
jg
aaa
push
dec
sbb
ret
outs
test
jl
sub
ja
scas
or
sub
mov
push
mov
pop
popa
or
mov
pop
fnstenv
cld
xor
dec
hlt
jge
and
ret
add
mov
jmp
rol
lock
pop
sub
and
mov
mov
clc
cmp
adc
ror
pushf
push
dec
jns
(bad)
dec
leave
xor
mov
test
loope
adc
pop
add
cmp
xor
movs
aad
adc
sbb
pop
sar
or
xchg
mov
shr
into
inc
add
aas
or
add
push
in
jns
mov
mov
(bad)
movs
and
jp
outs
mov
jmp
or
rol
add
bound
mov
jmp
lods
xor
mov
ins
adc
cmp
adc
ja
data16
dec
xchg
and
dec
mov
adc
or
ret
dec
jge
pop
inc
in
xor
jp
popa
imul
dec
inc
adc
mov
mov
mov
push
xchg
pop
int
hlt
add
mov
push
leave
mov
xor
sbb
repnz
pushf
mov
loope
or
add
mov
sub
jle
or
adc
pop
push
sub
xor
fs
mov
(bad)
adc
lds
or
nop
clc
test
and
add
or
leave
mov
dec
dec
push
and
dec
pop
stos
xor
xor
ins
xor
inc
dec
xor
pop
fcom
rcl
mov
adc
push
shl
sub
pop
aaa
mov
or
loopne
pop
and
shl
add
xchg
je
(bad)
adc
inc
lea
les
fsub
ret
sub
jge
dec
or
fld
dec
sti
mov
mov
bound
pop
mov
xor
ret
push
sub
add
push
mov
dec
adc
cdq
and
ins
bound
arpl
add
dec
add
(bad)
push
add
lods
cmps
lods
lea
sub
pop
xor
dec
dec
mov
in
pop
(bad)
scas
push
retf
aas
mov
inc
pusha
pushf
rcl
adc
sbb
clc
and
pop
pop
jae
repz
jns
je
pop
and
lock
inc
lock
clc
mov
mov
jge
gs
push
in
push
hlt
lahf
mov
lock
jns
jae
xchg
cmp
loope
sbb
inc
xor
or
pushf
retf
add
add
push
ficom
sub
jge
pushw
add
ja
jmp
push
sbb
push
xor
outs
js
add
push
clc
enter
fmul
jecxz
mov
(bad)
pushf
retf
pop
mov
push
xchg
pop
push
mov
je
and
imul
inc
push
test
push
das
mov
cmp
jnp
sub
sbb
pop
mov
mov
jns
mov
imul
push
inc
xchg
push
pop
add
loopne
inc
rcr
sub
pop
outs
sub
mov
pop
std
inc
sub
push
inc
mov
push
or
dec
adc
lods
add
inc
js
mov
dec
bound
sbb
mov
repz
pop
das
or
push
cmp
scas
in
xor
loopne
test
dec
pop
dec
push
and
sbb
int3
dec
lods
add
in
cmp
sub
jne
or
mov
push
mov
rcl
or
loope
stos
js
adc
les
loopne
sbb
cdq
test
dec
ins
ret
xchg
sti
movs
rcl
popa
fdivr
cs
add
and
fidiv
adc
mov
push
cmp
mov
cmps
mov
inc
add
(bad)
mov
xor
iret
test
adc
leave
les
(bad)
push
jge
mov
scas
push
jae
pop
fs
pop
inc
pop
sub
pop
xlat
xchg
mov
xor
mov
push
dec
adc
push
cmps
mov
and
fs
dec
test
push
retf
test
je
loopne
push
hlt
and
adc
test
xor
inc
sub
mov
jns
or
cmp
jmp
cmp
call
mov
sub
add
sahf
dec
xor
mov
stc
inc
push
mov
mov
fmul
xor
mov
or
push
push
dec
or
xchg
xchg
inc
movs
scas
xor
aas
leave
mov
cmp
push
in
cmp
or
inc
push
shl
xchg
aas
xor
add
jne
or
or
(bad)
loop
mov
outs
pop
fldenv
add
add
push
sbb
and
xor
idiv
sbb
arpl
add
test
mov
mov
retf
repz
stc
xor
inc
and
and
xchg
and
bound
loope
mov
rcr
js
daa
imul
mov
in
rol
fcom
pop
fsubr
aam
lods
imul
xor
dec
cmp
fistp
adc
inc
pop
test
mov
pop
inc
sbb
in
js
in
fnstenv
pop
sbb
jbe
pop
sbb
xor
xchg
sbb
and
adc
(bad)
cmp
jne
call
or
sub
test
enter
push
add
inc
add
add
xchg
(bad)
sub
test
add
adc
xchg
std
rcr
cs
test
outs
add
add
jp
cmp
sbb
or
loopne
clc
jl
or
dec
xchg
cdq
xchg
sbb
sbb
sub
loopne
rol
ret
leave
loopne
fs
xchg
cmovne
sbb
in
push
les
enter
or
or
test
sti
sbb
aas
loope
sbb
call
inc
add
sbb
lahf
sar
sahf
add
ds
or
mov
(bad)
in
sahf
and
cmps
push
stc
inc
xor
data16
pop
xchg
push
cmps
mov
push
push
sub
stc
cmc
xchg
jb
jb
mov
cld
mov
cmp
adc
jmp
sub
push
jg
sub
jmp
(bad)
or
or
jecxz
je
xor
call
mov
jmp
xor
movs
push
push
add
push
hlt
jge
inc
lods
adc
mov
push
and
imul
or
cmc
stos
jne
call
loope
scas
xchg
(bad)
xchg
mov
sbb
fxch
jle
popa
xchg
sub
or
push
and
fdivr
sbb
jecxz
icebp
sub
shr
lahf
rol
rol
scas
cvtps2pd
mov
add
jl
add
pusha
inc
and
sar
das
or
mov
shr
pop
in
scas
push
cmp
rol
pusha
or
(bad)
rcr
and
cmp
int3
sub
or
sbb
sbb
sahf
cmp
clc
imul
adc
inc
and
cs
stos
jmp
push
(bad)
dec
sbb
mov
das
mov
xor
mov
inc
and
cli
inc
ins
mov
js
jo
sbb
call
push
push
ret
sbb
push
mov
xor
cwde
dec
pop
cs
hlt
pop
inc
fcom
xor
cmp
sub
inc
cli
push
jg
dec
adc
xchg
jne
inc
jno
add
mov
cdq
(bad)
inc
sub
fld
adc
and
jno
adc
stc
dec
test
imul
dec
pop
lea
xchg
mov
adc
push
jl
inc
rol
dec
shr
pop
inc
jmp
pop
cmp
inc
inc
cmp
fbld
aam
mov
ins
loop
xchg
inc
mov
mov
fstp
and
inc
sbb
xchg
jge
loop
fnstenv
in
fidiv
out
add
and
pop
inc
mov
dec
xor
loopne
pop
xchg
xor
lea
adc
pop
cmp
and
retf
inc
pop
add
outs
sub
cmp
add
add
cmp
inc
inc
dec
repz
les
pop
pop
sub
and
push
outs
out
lahf
dec
add
pop
sbb
jbe
add
and
mov
xchg
fmul
lock
xchg
mov
mov
loopne
add
pusha
out
add
out
or
sbb
les
std
jbe
or
add
lods
mov
and
sar
dec
or
and
leave
add
ss
cmp
mov
sbb
adc
jns
js
or
sbb
(bad)
out
loop
jmp
cmp
push
jp
inc
adc
push
push
scas
xchg
xlat
xor
in
sbb
add
jge
jb
sbb
or
cmp
leave
xchg
retf
cmp
push
popa
dec
iret
into
sbb
scas
xchg
out
adc
push
nop
sub
xchg
inc
or
or
cmp
cmps
cwde
js
loope
aad
add
push
fistp
sbb
(bad)
and
dec
xor
jbe
mov
retf
loopne
xlat
jo
mov
inc
clc
inc
popf
test
inc
aaa
adc
sub
dec
pop
mov
push
jle
and
xor
sar
add
cmp
or
cmp
lahf
or
dec
adc
push
clc
push
push
fld
iret
jno
sbb
fcomp
sbb
push
push
inc
mov
adc
adc
inc
mov
shl
push
inc
mov
ja
adc
xor
jbe
pushf
xor
aaa
inc
mov
inc
add
sbb
test
push
dec
mov
xor
pop
lock
(bad)
lea
xchg
xchg
or
and
call
sub
inc
dec
pop
js
and
pop
jl
(bad)
sub
retf
into
xor
outs
push
push
dec
fdivr
jo
jo
cmp
pop
(bad)
push
jns
dec
sub
dec
push
cmp
punpckhbw
jl
shr
pop
enterw
xchg
sub
in
jnp
sbb
(bad)
in
(bad)
pop
je
push
mov
cmp
enter
gs
loopne
cmp
or
push
xor
xor
or
inc
mov
in
test
xor
pop
jne
jns
dec
shl
pop
sbb
nop
not
add
sbb
in
adc
jmp
int
stos
(bad)
in
loope
mov
outs
lock
jne
nop
fmul
into
jl
inc
mov
sub
mov
push
jge
(bad)
popa
retf
xor
dec
(bad)
(bad)
sub
shl
cs
mov
loopne
cmps
mov
je
popa
push
sub
push
cmp
mov
sbb
inc
xor
or
stc
adc
or
sbb
ins
fisubr
dec
dec
js
add
or
mov
add
mov
xchg
xchg
cld
adc
je
lahf
inc
loopne
push
aas
add
stos
or
ret
and
sbb
add
dec
mov
dec
mov
push
movs
dec
xor
dec
adc
rcl
das
inc
add
addr16
add
push
lods
dec
jle
push
mov
mov
jle
daa
mov
adc
push
iret
aas
aad
xchg
leave
out
fdivrp
mov
(bad)
lahf
adc
pop
mov
test
pushf
out
dec
retf
leave
xor
das
cmp
mov
iret
push
or
xor
ins
popa
out
xchg
sbb
or
arpl
lods
dec
pusha
shl
adc
inc
add
outs
shl
enter
or
jbe
loopne
adc
or
aad
mov
push
xor
push
cmp
sub
test
cmp
aas
jne
aam
add
mov
mov
xchg
add
aam
fadd
imul
scas
or
adc
xor
ret
out
or
xor
shl
aaa
xchg
nop
dec
or
mov
xor
sbb
and
and
shl
fdiv
je
lock
and
aaa
push
retf
fcomp
dec
jmp
mov
jmp
sub
adc
push
or
push
jmp
cmp
fwait
aad
not
div
bound
push
jp
push
sub
or
mov
mov
inc
push
enter
imul
adc
adc
call
fst
loopne
adc
add
jmp
cmps
ds
sub
jmp
mov
das
loop
adc
jmp
or
inc
add
or
loope
push
pusha
in
mov
movs
xor
cmp
shl
nop
cmps
ror
test
mov
cmp
cmp
sahf
adc
iret
rcr
das
push
and
jmp
jne
(bad)
aad
data16
jne
mov
mov
ret
jecxz
push
mov
movs
call
add
xor
jp
mov
pop
dec
scas
in
or
pop
sub
dec
mov
shl
fwait
fs
and
mov
aad
adc
cmps
dec
xor
ror
or
xor
pop
xchg
call
dec
icebp
or
lods
int
or
xor
ss
sti
ss
or
pop
and
idiv
stos
(bad)
loope
and
add
jp
push
and
and
lea
pop
and
aas
sbb
sbb
mov
push
jo
ins
add
aas
push
inc
xchg
and
lods
mov
call
call
xchg
neg
cmp
adc
mov
xchg
dec
pop
xchg
xchg
add
sub
mov
rol
jp
(bad)
mov
cmp
aaa
adc
pop
xlat
add
xlat
cmp
push
xchg
xor
stos
loopne
dec
in
inc
mov
mov
pop
or
and
push
sub
pop
xchg
jmp
mov
push
adc
ror
sar
pop
lock
dec
lahf
xchg
mov
in
or
lock
ins
retf
push
jp
or
push
and
inc
popa
jmp
mov
xchg
outs
inc
pop
lock
jmp
jge
dec
inc
or
add
popa
imul
inc
jle
call
jno
and
ins
sub
(bad)
stos
ins
popa
into
adc
enter
mov
stc
or
shl
push
jns
jmp
and
adc
dec
or
sbb
movs
jg
cmp
popf
shr
mov
pop
and
push
imul
pop
add
jl
and
cmps
imul
add
leave
add
mov
retf
jb
cmp
lahf
sub
xchg
repz
jo
and
xor
ds
icebp
adc
dec
retf
(bad)
fistp
jmp
inc
lahf
mov
or
xor
stos
add
jg
xchg
cmp
jl
push
push
push
cmp
add
pop
sbb
repnz
arpl
(bad)
cmp
shl
xor
hlt
lea
cs
stos
cli
(bad)
fist
push
inc
pop
pop
push
jns
sahf
shl
xchg
rol
dec
in
lahf
add
inc
dec
cdq
jo
(bad)
mov
hlt
mov
call
dec
jnp
or
imul
shr
or
pop
push
jnp
mov
add
inc
and
pop
push
cmps
pushf
push
pop
or
cmp
add
cmp
or
mov
jecxz
xchg
cmp
add
test
mov
inc
mov
mov
(bad)
rcr
test
jne
sar
in
jno
je
jmp
add
nop
push
retf
fst
mov
xchg
pushf
mov
push
lds
inc
push
pop
lock
aad
mov
and
test
adc
popf
idiv
push
xchg
aas
ins
push
adc
inc
mov
icebp
push
cli
lea
sbb
jp
push
jns
and
mov
or
xlat
cmc
push
inc
adc
mov
push
jle
add
push
mov
(bad)
fidiv
pop
add
jge
or
mov
repz
or
push
outs
sub
sbb
lea
jmp
push
pop
xor
add
in
or
add
and
xchg
dec
scas
add
add
add
push
push
pop
leave
and
push
fadd
pop
leave
jae
dec
push
adc
clc
sbb
jne
fsub
mov
test
mov
cmp
dec
or
push
or
push
sbb
add
push
push
xor
pop
push
sahf
aam
push
and
jb
add
or
cmps
pusha
mov
xor
jno
or
in
or
or
sbb
inc
cmps
adc
mov
jg
or
add
push
push
dec
push
cli
push
in
jo
xor
adc
in
jo
sbb
sbb
std
daa
mov
cmps
loopne
mov
or
pop
scas
fs
scas
push
xchg
cmova
idiv
lock
test
shr
jae
or
aad
add
rcr
xchg
adc
mov
xchg
lahf
dec
add
inc
or
stos
or
mov
or
loopne
in
jo
test
mov
fs
inc
push
inc
and
arpl
adc
mov
mov
js
jmp
push
and
lods
and
jecxz
fwait
mov
add
fsub
dec
and
and
mov
push
sbb
sahf
lock
add
mov
dec
sbb
lods
aad
or
jnp
adc
inc
mov
scas
add
push
inc
push
jecxz
push
mov
bound
inc
dec
ss
xor
pop
sbb
push
add
lods
adc
xchg
movs
cmp
and
imul
cmp
sbb
jns
dec
lock
and
mov
add
mov
jbe
xchg
in
push
pop
mov
mov
push
or
in
mov
or
pop
jmp
ds
fs
aam
xchg
pop
inc
jo
adc
retf
and
sbb
or
fsubr
imul
movs
xor
cmps
mov
sub
test
mov
adc
retf
and
ja
push
aaa
adc
xchg
fdivr
mov
push
push
retf
or
aaa
fistp
lds
adc
push
shr
dec
ret
out
xchg
out
mov
nop
dec
cld
jbe
fldenv
in
les
hlt
mov
rcr
ins
mov
fsub
xchg
push
or
xchg
push
cmp
mov
or
lock
ins
cmp
jecxz
mov
daa
or
push
pusha
mov
out
test
dec
scas
out
add
sbb
jmp
(bad)
push
cmp
cmp
xor
mov
jno
js
ja
pop
xchg
dec
mov
or
das
or
test
xor
or
fadd
cdq
or
adc
pop
push
ror
(bad)
and
mov
inc
ror
sub
ret
fiadd
jne
pop
mov
mov
jmp
test
mov
aad
mov
push
inc
add
jmp
ja
or
mov
gs
imul
and
int
inc
jo
fstp
push
popa
outs
lea
and
push
mov
enter
test
test
inc
add
popa
add
stos
clc
cs
js
mov
adc
inc
jmp
lods
cmps
mov
test
mov
gs
or
and
(bad)
out
push
mov
mov
add
pop
movs
in
in
daa
fdiv
push
sahf
mov
push
movzx
xor
mov
addr16
add
pop
jns
pop
(bad)
push
mov
fucomip
test
mov
mov
mov
imul
or
(bad)
jmp
shl
and
push
or
push
shl
push
in
jg
pop
mov
mov
or
mov
(bad)
mov
dec
nop
lahf
dec
cmc
mov
dec
cmp
fs
mov
enter
xor
ss
iret
push
mov
call
inc
loopne
cmp
aam
ds
add
sbb
adc
data16
push
in
js
pusha
adc
js
sbb
das
sbb
mov
fwait
sar
les
or
test
pop
repnz
in
aas
and
xchg
push
or
enter
enter
clc
push
add
clc
shl
xchg
mov
enter
xor
xchg
cmp
sar
inc
and
cs
add
in
dec
add
push
push
push
call
sbb
movs
scas
clc
sbb
sar
cmp
and
mov
mov
and
pop
out
jle
jmp
cmp
and
adc
inc
or
cs
jg
push
xchg
movs
mov
mov
dec
dec
ss
mov
mov
mov
and
(bad)
sub
xchg
pop
mov
clc
adc
jbe
popf
mov
cld
je
ja
push
sbb
mov
inc
cmp
mov
pop
dec
inc
dec
ror
hlt
mov
hlt
cmp
shl
mov
(bad)
es
lea
cli
fcomp
icebp
inc
fadd
hlt
inc
add
loope
xor
sub
rcr
fldenv
dec
mov
ins
dec
call
dec
push
cmp
pop
or
jl
cmp
loop
std
adc
push
mov
dec
je
clc
push
ret
dec
movs
pop
lock
xchg
pop
cmp
jmp
cmp
push
add
hlt
push
or
xor
shl
push
ror
and
jecxz
or
inc
jle
jnp
xchg
jnp
or
js
cld
lods
mov
sbb
push
add
daa
daa
daa
add
daa
pop
or
or
jnp
or
jbe
jmp
or
fwait
fwait
fwait
fwait
por
jmp
adc
pop
adc
fwait
fwait
fwait
fwait
push
adc
dec
adc
dec
adc
fwait
fwait
fwait
fwait
aas
pop
jmp
sbb
xor
jmp
fwait
fwait
fwait
sub
jmp
sbb
and
dec
fwait
fwait
fwait
pop
pop
jmp
and
or
add
adc
test
adc
mov
mov
jne
push
loop
ins
ss
fiadd
push
add
sahf
out
cwde
mov
jns
out
enter
sahf
out
sahf
(bad)
jmp
jns
jns
add
sahf
out
sahf
push
sbb
and
out
xor
ds
dec
call
out
pop
enter
add
and
(bad)
jmp
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aad
push
push
push
pushf
movs
push
nop
leave
cmp
add
bound
add
mov
mov
sub
mov
data16
sbb
sub
cmp
cmp
pop
mov
les
sar
call
add
out
push
mov
push
jge
push
add
sub
fdiv
sar
(bad)
cmp
jb
inc
xor
cmp
inc
mov
dec
or
xor
jns
adc
out
sbb
scas
adc
pusha
cs
retf
adc
inc
push
xlat
hlt
fdivr
mov
jge
jbe
cmp
inc
pop
mov
cmp
shl
xor
xor
inc
jmp
xchg
ss
sbb
add
clc
add
xchg
js
lock
loop
fldenv
mov
xor
mov
lds
test
ds
test
rcl
cmp
jae
rcr
sbb
repnz
mov
jge
push
das
mov
pop
mov
adc
sar
add
mov
jecxz
repnz
or
add
js
and
or
in
xor
pop
call
sar
mov
sti
shr
xor
pushf
sar
repz
xor
add
add
add
jne
jmp
mov
adc
iret
or
ins
push
or
and
not
and
xor
add
add
in
in
push
aam
sub
jge
fsubr
add
or
mov
ror
mov
idiv
jl
fisub
aam
cli
and
and
mov
sbb
mov
push
rol
leave
xor
fs
fisub
repnz
sub
fdiv
mov
push
or
xlat
and
jle
sbb
xor
lods
xor
imul
fsubr
int3
dec
in
rcl
call
pusha
mov
push
xor
and
push
cmp
dec
xor
jmp
int
ret
push
xor
add
pop
dec
shl
xor
fdiv
imul
add
xor
in
aam
bound
in
jns
mov
adc
sbb
adc
add
adc
mov
pop
cmp
aaa
fadd
xor
call
rcl
call
nop
loopne
lahf
cmp
xchg
cmps
imul
cmp
dec
mov
pop
aaa
mov
or
cmp
jae
add
cmps
xor
pusha
pop
or
and
call
mov
imul
and
xor
add
inc
adc
add
pop
inc
in
ins
fwait
jge
push
ret
push
jo
ficom
or
les
pushf
addr16
call
cmp
add
xor
js
inc
(bad)
jne
mov
ucomiss
dec
fadd
pop
fs
xor
scas
leave
js
call
mov
retf
push
clc
jl
push
and
add
movs
jmp
imul
add
in
in
(bad)
or
rol
aas
int3
inc
(bad)
aam
xchg
fcmovbe
or
sbb
inc
sub
mov
adc
cmp
sub
shl
in
in
fstp
shl
rol
add
adc
sub
push
xor
inc
adc
dec
ror
adc
dec
loopne
adc
ror
enter
sbb
adc
stos
imul
in
inc
push
xor
dec
int3
dec
xor
push
dec
xor
shl
js
in
push
pop
mov
xor
scas
push
mov
aam
call
pop
xchg
inc
mov
pop
add
ficom
add
(bad)
or
ror
inc
pop
cs
push
cmp
pop
pop
movs
cdq
add
inc
pusha
inc
leave
in
loopne
jl
or
sbb
xor
add
fs
xor
adc
fs
dec
xchg
xchg
dec
ror
stc
stc
pop
loope
lahf
stc
mov
int3
pop
push
(bad)
in
adc
mov
jb
push
adc
fmul
adc
xor
fcom
fisub
mov
(bad)
call
and
and
loope
cmps
push
mov
aaa
es
push
dec
pop
out
pop
inc
xor
cld
add
sub
mov
fadd
add
inc
loopne
retf
jb
loope
xchg
cli
cld
lea
mov
pop
cld
sub
ret
add
xor
pop
(bad)
pop
stos
fcom
jmp
outs
ss
mov
xor
or
rol
adc
add
rcr
jne
cs
push
add
test
test
stos
or
sub
loopne
ret
aas
lea
jmp
jg
mov
sub
out
cs
or
jecxz
retf
add
mov
jne
pop
jbe
add
inc
dec
sti
adc
dec
jl
sub
push
enter
mov
adc
clc
aaa
jbe
or
mov
in
adc
dec
or
sub
jae
push
pop
rol
mov
fsubr
rep
fimul
mov
sbb
retf
fs
pop
fdivp
ror
or
std
mov
hlt
push
shr
xchg
pop
sbb
mov
and
rol
mov
pop
push
mov
mov
dec
js
pop
and
add
mov
jl
pushf
mov
cmp
pop
jo
popa
jbe
fdivr
leave
mov
cmp
les
shl
lock
ror
fwait
sbb
and
andps
add
mov
inc
pop
jle
ja
lea
imul
cmp
ja
sub
fmul
sub
stos
mov
and
and
or
adc
or
test
in
enter
adc
sbb
xchg
jbe
and
or
test
test
shl
add
and
mov
push
and
test
adc
icebp
(bad)
pop
pop
sbb
mov
adc
push
xchg
mov
(bad)
jno
inc
pop
stos
xchg
icebp
mov
arpl
je
cmc
out
or
mov
pop
sub
and
pop
jge
mov
adc
adc
push
add
mov
xor
dec
imul
add
sbb
push
dec
jb
xchg
sbb
retf
push
sbb
out
fist
jmp
mov
inc
inc
mov
mov
inc
sbb
adc
xor
or
add
sbb
add
ret
dec
ja
loopne
jge
lods
jmp
xor
mov
pop
xor
push
sub
add
push
xchg
and
inc
(bad)
add
xor
pop
or
pusha
sbb
or
sbb
dec
inc
mov
adc
fidivr
inc
cmp
jl
nop
sub
sbb
sub
test
sub
pop
mov
cmp
add
out
pop
add
cli
es
lea
cmp
xchg
mov
test
jg
and
or
js
ins
or
jl
or
call
inc
inc
push
aad
or
int3
mov
mov
or
or
sti
dec
cmp
jl
dec
dec
sahf
cmp
push
js
test
xchg
dec
sti
jmp
and
xchg
nop
pusha
dec
in
imul
mov
test
and
movzx
lods
lods
or
adc
mov
and
adc
adc
adc
out
mov
or
push
aam
push
sub
fcomp
inc
sbb
add
mov
push
cmp
sbb
les
and
mov
mov
sbb
mov
lods
rcr
inc
ret
imul
into
loopne
sub
jmp
and
mov
stos
dec
and
ret
adc
ins
and
mov
pop
or
add
mov
mov
or
add
pop
dec
pusha
pop
inc
mov
add
xchg
xchg
jp
adc
push
mov
push
adc
sub
inc
push
fbld
xchg
mov
int3
test
dec
sti
bound
push
or
jle
ror
dec
sbb
pop
and
test
adc
cmp
and
xchg
push
or
add
fmul
and
(bad)
add
push
out
nop
lock
and
(bad)
mov
push
sub
scas
add
mov
cmps
and
inc
ss
or
(bad)
(bad)
ficomp
xchg
mov
add
rcl
nop
imul
fist
ret
popa
and
out
fstp
enter
sbb
xchg
sub
jmp
sbb
mov
pop
ja
lods
adc
push
iret
test
adc
push
jmp
push
adc
fild
test
jle
or
enter
jae
pop
pop
mov
and
loopne
loopne
jecxz
inc
js
sub
je
rol
gs
in
mov
pop
mul
pushf
ins
cwde
fcomp
leave
call
(bad)
fistp
fcomp
jne
push
sbb
and
xchg
ss
mov
ret
ret
ficomp
fwait
add
in
dec
inc
push
mov
sbb
sub
sub
or
dec
ret
inc
push
push
ds
mov
add
aam
mov
popa
enter
in
mov
dec
cmp
lock
xchg
or
repz
adc
int
int3
jo
add
jae
je
inc
call
aam
adc
lea
and
repz
and
jns
and
cmp
push
cmp
xor
pop
and
mov
xor
lods
mov
dec
and
cmp
cli
push
xchg
sub
loopne
adc
fwait
ret
(bad)
loope
push
aam
jbe
rdpmc
mov
and
jnp
pop
(bad)
dec
sbb
push
or
sbb
adc
jmp
inc
mov
icebp
inc
ins
cwde
mov
imul
xor
pop
lds
pop
sub
jb
push
movs
xor
add
adc
es
and
popf
jmp
add
xor
sub
push
cmp
and
rcl
dec
jl
mov
fild
cmc
add
mov
add
mov
in
dec
push
sub
or
cmp
call
inc
pop
inc
pop
ret
movs
inc
inc
ror
int
and
pusha
cmp
stc
push
or
cmps
test
ret
xchg
jns
mov
loopne
iret
xor
dec
xchg
push
xor
fnstenv
das
inc
push
les
imul
sbb
sub
and
cmps
push
sub
cdq
jae
lods
xchg
pop
push
cdq
icebp
loope
and
sub
sbb
dec
arpl
inc
mov
lds
inc
xchg
sub
or
inc
iretw
leave
add
push
and
push
pop
lock
in
xchg
aam
cmp
dec
clc
cmps
jmp
hlt
je
inc
mov
data16
retf
xor
and
push
mov
or
xor
lahf
sub
mov
sbb
jno
ss
push
(bad)
push
jp
not
and
bound
pop
stos
jmp
jmp
in
add
mov
sub
adc
jo
mov
lods
add
scas
dec
sbb
push
ss
ja
cmp
aad
adc
pop
jnp
sub
dec
inc
loope
stos
sub
push
jo
adc
(bad)
rcr
xchg
sub
push
je
mov
call
loop
retf
test
mov
pop
or
and
push
call
stc
xchg
inc
pusha
sub
jle
and
ds
je
ror
mov
xchg
or
push
adc
mov
pop
cld
and
pop
into
icebp
mov
push
push
shr
add
dec
sub
mov
sbb
jne
xor
push
dec
imul
xor
test
push
ficomp
sub
and
xor
or
jo
mov
ss
sar
dec
pop
mov
xchg
xchg
push
dec
push
cmc
push
out
push
lds
ror
push
or
out
xchg
and
and
xchg
data16
inc
jg
mov
(bad)
xor
cmp
mov
fsubr
cmp
inc
xchg
das
and
scas
fidiv
test
or
xor
das
and
lea
jb
add
mov
mov
and
or
inc
hlt
and
sbb
xchg
outs
call
sbb
and
adc
arpl
in
push
in
cld
xchg
in
repz
sbb
pop
add
pop
(bad)
jmp
fnstenv
(bad)
fistp
xor
jb
jne
inc
add
sbb
push
cdq
or
je
in
mul
dec
mov
out
sbb
or
jle
push
cmp
sbb
or
mov
mov
ret
arpl
or
jne
pop
or
(bad)
mov
xchg
lds
adc
mov
or
test
adc
repnz
jg
add
popf
out
jo
cmp
mov
pop
adc
adc
push
(bad)
jno
(bad)
out
cs
dec
dec
sbb
int
cmp
add
jbe
call
mov
xor
mov
mov
ror
dec
push
inc
cmp
cmc
shl
or
rol
jbe
nop
push
inc
xor
sbb
adc
addr16
and
imul
lods
ds
movs
and
ret
pop
std
xchg
and
cmp
mov
or
mov
pop
pop
pop
fcomp
fsubrp
inc
fstp
ret
sbb
bound
or
sub
scas
add
adc
leave
dec
adc
xor
fiadd
adc
push
push
or
mov
cmp
push
adc
mov
xchg
mov
pop
mov
xchg
repnz
ret
push
xchg
pop
push
adc
stc
mov
add
push
xchg
xor
movzx
popa
mov
or
or
call
repnz
push
cmp
lock
test
mov
int3
xor
add
ss
aam
and
adc
push
xor
cs
push
hlt
mov
lea
daa
stos
je
cmp
sar
push
adc
sub
push
cmp
jge
mov
xchg
adc
inc
ins
lock
cmp
popf
ficom
mov
mov
lock
dec
shl
mov
hlt
clc
clc
cld
test
xor
mov
cs
add
add
call
push
and
aaa
add
test
je
add
sar
push
adc
cmp
dec
or
mov
shr
sbb
cld
aas
mov
mov
or
mov
sub
mov
add
adc
dec
or
pop
mov
sahf
add
mov
sub
mov
adc
je
dec
je
push
add
loop
and
aas
sar
dec
mov
add
dec
movs
out
retf
sub
test
mov
test
mov
push
cld
je
cmp
jne
sbb
adc
mov
pushf
cmp
rcr
rol
xor
add
xor
and
mov
sbb
bound
retf
idiv
inc
inc
imul
and
jb
pop
cld
mov
add
lahf
dec
rol
pop
je
mov
add
or
stos
sub
cmp
mov
stc
push
or
mov
adc
push
push
sahf
cli
push
lock
dec
add
enter
repnz
jbe
inc
test
jmp
daa
pop
jmp
pop
cmp
adc
loop
mov
push
mov
test
xchg
imul
jae
repnz
mov
mov
sub
pop
jo
inc
sub
in
nop
xchg
adc
cmp
je
cmp
push
es
outs
push
cmp
jne
inc
jne
loopne
push
or
and
pop
dec
or
or
es
add
fimul
aas
leave
cmp
jne
add
xchg
pop
sub
sbb
test
dec
ret
or
sub
sbb
sub
add
fcomp
or
mov
call
fsubr
xor
cmp
mov
jmp
and
fwait
dec
sub
jmp
inc
jl
inc
jg
call
iret
add
shl
dec
mov
sub
and
and
mov
mov
cmp
fadd
jg
jbe
int
imul
and
inc
sbb
xchg
rcr
inc
pop
adc
pusha
aad
mov
out
mov
mov
sbb
xlat
dec
add
push
xchg
mov
fsub
fistp
mov
jg
pop
sar
jle
imul
mov
adc
inc
lods
(bad)
aaa
jecxz
mov
ins
cmp
or
and
inc
xor
fnstenv
sub
add
mov
jge
xchg
mov
pop
das
movs
xor
sub
(bad)
inc
cmp
mov
out
pop
call
add
cmp
in
inc
inc
push
icebp
les
push
out
jmp
xor
dec
sahf
dec
bound
sbb
and
loopne
add
xor
or
in
pop
shr
cld
cmp
cmp
mov
ret
sub
lds
loop
je
and
cmps
syscall
test
ret
clc
ins
dec
fstp
loope
and
mov
scas
aam
clc
ficomp
jg
or
into
hlt
add
jne
mov
lock
imul
or
inc
mov
jnp
call
adc
cmp
jne
into
sub
or
xchg
sahf
shl
(bad)
mov
add
adc
aad
add
out
dec
xchg
cmp
xchg
js
and
mov
jne
mov
(bad)
cwde
add
dec
mov
mov
hlt
(bad)
mov
cli
mov
or
sub
jle
je
outs
test
adc
sub
je
and
js
add
lock
push
add
and
mov
movs
inc
or
inc
inc
loopne
xor
inc
loop
or
add
dec
sti
sub
ins
fsub
shl
or
or
cli
fs
jmp
mov
cmp
icebp
jmp
push
rol
mov
add
xchg
fst
mov
ss
mov
sbb
shl
mov
xor
dec
jle
ret
mov
adc
xor
mov
call
(bad)
xlat
xchg
ret
dec
adc
mov
dec
push
mov
xchg
cmp
mov
mov
add
cmp
inc
cmp
pop
loopne
aam
cmp
lods
es
cmp
push
adc
inc
sbb
or
mov
mov
sub
ficomp
cmp
jb
pop
rol
inc
out
mov
out
cmp
outs
mov
pusha
add
xor
shr
mov
or
enter
dec
imul
sbb
(bad)
xchg
outs
mov
sub
or
mov
in
ss
jmp
jmp
pop
repnz
pop
mov
xor
jns
or
pop
jne
leave
or
mov
pop
imul
test
aaa
sbb
ds
jo
lods
fnstcw
ja
mov
and
lea
adc
xor
mov
and
dec
push
adc
pop
out
xor
aam
cmps
sbb
test
push
pop
jb
shl
sbb
daa
mov
leave
sub
inc
add
adc
(bad)
mov
jecxz
lock
in
sahf
xchg
mov
int3
pop
repnz
xchg
adc
sbb
rcr
add
pop
adc
push
das
push
add
shl
shl
outs
or
mov
stos
mov
mov
dec
sbb
cmp
dec
and
int3
fsub
in
mov
movs
pop
push
push
inc
test
adc
mov
pusha
data16
ret
popf
inc
int
sbb
ins
ds
inc
jl
pop
add
fsubr
(bad)
scas
jmp
clc
add
cmp
test
rcr
push
movs
push
cmp
inc
cmp
or
in
mov
push
in
lock
inc
shl
add
adc
(bad)
adc
mov
jno
add
mov
sbb
rol
or
movsx
ret
push
xor
jno
jmp
xchg
pop
dec
sbb
cmp
or
popa
mov
nop
sbb
sub
jmp
inc
jb
loop
jo
inc
xlat
inc
push
sub
addr16
shl
sbb
or
aam
xor
or
xor
push
sbb
int3
mov
cmp
jmp
aam
push
adc
leave
sub
mov
retf
sub
fsubr
(bad)
fist
or
add
xor
lea
call
clc
xor
cmp
out
jmp
add
xlat
aas
push
dec
call
push
jbe
rcr
mov
fnstenv
sbb
xchg
test
push
push
jo
mov
or
cmp
retf
mov
hlt
cmp
mov
mov
xchg
sbb
lock
cdq
inc
jmp
gs
push
mov
jecxz
fdiv
and
add
and
inc
je
dec
adc
push
out
inc
addr16
loope
ins
jne
rcl
cld
call
pop
or
cmp
retf
mov
cli
jb
mov
inc
push
scas
push
inc
add
mov
hlt
mov
pop
fdiv
dec
sbb
in
dec
fwait
jo
pusha
js
inc
add
cdq
mov
push
mov
push
mov
push
jecxz
arpl
mov
push
fild
or
out
jo
movs
cmp
je
and
xchg
mov
movs
or
push
neg
or
pusha
inc
lds
pusha
sub
in
in
or
add
or
push
xor
iret
(bad)
test
cmp
in
aaa
mov
mov
mov
inc
sub
dec
pop
xchg
das
rcr
movs
cmp
jmp
cmp
jne
adc
dec
add
(bad)
add
push
bound
sub
xor
xor
xor
pop
leave
add
and
xchg
data16
iret
mov
je
std
leave
mov
into
je
mov
enter
aas
sbb
enter
pop
xor
dec
icebp
pop
sub
sbb
push
jmp
sbb
ror
xchg
enter
in
shl
adc
movs
call
stos
push
or
dec
pop
fdiv
xor
jb
in
jmp
call
mov
nop
in
jnp
ret
addr16
mov
xchg
mov
xchg
js
jle
dec
inc
aaa
cs
cmc
in
sbb
aaa
sbb
push
cmc
jno
or
cmp
adc
(bad)
fist
dec
movs
jmp
push
add
pop
je
push
dec
mov
jecxz
sbb
and
add
lods
in
dec
pop
loope
dec
jecxz
ins
je
pop
mov
gs
push
js
xchg
sub
(bad)
cmp
push
shr
dec
xor
sub
daa
scas
lea
dec
push
mov
mov
sbb
(bad)
xor
pop
nop
cmps
add
pusha
lock
push
push
sahf
mov
sub
sub
mov
mov
ins
push
fmul
cmp
xchg
add
pop
xchg
jmp
cs
loop
pop
add
or
in
fs
je
movs
imul
int
push
out
mov
test
xchg
add
and
push
xlat
or
nop
pop
popf
cwde
lock
or
jmp
int
push
dec
pusha
cmp
test
push
mov
add
(bad)
mov
movs
stc
inc
or
push
or
mov
add
dec
inc
inc
sub
sbb
in
add
mov
fwait
or
or
add
xchg
mov
lock
ss
sar
inc
xor
mov
add
in
fdivr
imul
cmp
sub
sbb
push
shl
fistp
or
in
and
xchg
add
imul
jnp
sub
push
mov
sbb
sub
push
fadd
dec
pop
fwait
sbb
js
or
sub
push
push
inc
or
mov
or
ror
out
js
and
pop
and
mov
dec
push
xor
out
dec
push
mov
inc
call
clc
lods
gs
push
aas
in
jmp
jle
adc
inc
add
xor
or
jg
sub
shl
jb
inc
mov
sub
sub
clc
mov
xor
jmp
mov
dec
pop
mov
loopne
and
pop
mov
cmp
add
test
es
xchg
fs
jo
inc
jnp
xor
cmps
cmp
les
cmps
jge
dec
pop
push
ret
outs
mov
xor
or
cmp
jecxz
pusha
cmp
dec
dec
les
daa
pushf
and
loope
or
cmp
sbb
fsubr
mov
adc
xchg
mov
repnz
test
fistp
cmp
sbb
inc
or
pusha
add
inc
adc
not
push
or
popf
xchg
adc
add
inc
sbb
ss
out
out
push
xor
adc
pusha
je
adc
sbb
or
dec
daa
sub
dec
push
mov
mov
pop
jo
add
sti
(bad)
or
or
aaa
cmp
repz
sub
ins
ins
and
lods
jne
ret
dec
mov
pop
rcl
and
outs
loop
adc
iret
fwait
xchg
pop
test
adc
inc
or
dec
leave
cmp
push
jge
lods
sbb
popf
sub
sub
sub
in
adc
ja
add
push
and
adc
popf
mov
xchg
dec
adc
add
lock
mov
ret
mov
fisttp
mov
jg
dec
inc
mov
cmp
push
out
push
dec
pop
and
add
(bad)
movs
addr16
lea
push
and
ret
jne
cmp
lds
mov
push
pop
daa
sub
pop
push
sahf
pop
shr
lods
mov
adc
adc
cmp
jmp
push
or
lock
pmullw
ds
jge
push
adc
dec
or
cmp
push
(bad)
jmp
lea
adc
jmp
xchg
push
xor
pop
dec
sbb
xor
adc
mov
fisub
dec
fcom
inc
jne
in
add
and
add
dec
add
and
test
or
in
(bad)
ins
popa
and
and
jle
cmp
and
adc
loopne
mov
js
add
push
sbb
sub
add
loopne
call
add
adc
inc
inc
adc
inc
add
mov
or
icebp
aas
mov
cld
or
lock
jmp
jne
repz
mov
out
push
xchg
xchg
xchg
push
pop
inc
add
adc
xchg
jl
addr16
in
jae
cmp
pop
xor
fisttp
xchg
and
fld
js
sub
fcom
push
and
adc
pop
add
ret
gs
mov
xchg
push
pop
(bad)
or
ret
rol
call
or
and
cwde
shl
mov
out
loopne
adc
jmp
loop
sar
aaa
or
shr
add
leave
data16
imul
and
dec
sbb
or
mov
in
inc
add
fistp
adc
pop
push
inc
mov
mov
pop
pusha
inc
pop
aaa
xlat
sub
jle
in
jecxz
sbb
pop
dec
or
jge
popa
imul
loopne
outs
inc
add
in
(bad)
jae
lea
cld
std
ficomp
xchg
pushf
push
pop
es
pop
scas
cmps
xor
pop
push
shr
mov
and
sub
xchg
fsubr
mov
mov
adc
ja
adc
(bad)
and
or
lds
ins
in
xor
xchg
pop
pop
push
sub
cmp
lea
mov
xchg
or
adc
add
add
loopne
cmp
ins
loopne
sub
mov
fadd
pop
mov
ins
pop
mov
mov
popf
mov
add
dec
call
sbb
xor
mov
test
aad
push
mov
sub
inc
cli
xchg
or
sbb
cmp
dec
(bad)
scas
inc
xchg
dec
mov
pop
adc
or
int3
inc
fidiv
or
popf
fs
repz
rol
and
jmp
iret
loopne
or
je
sub
jl
aas
xor
leave
(bad)
rcl
cld
push
lea
xchg
das
sub
aaa
push
inc
ret
or
cmp
dec
or
(bad)
lds
add
and
aas
clc
xor
add
add
pop
fcomp
mov
in
call
add
adc
push
inc
jmp
or
jl
sar
in
gs
adc
sub
and
dec
fcmovnbe
cs
clc
(bad)
imul
push
loopne
cmp
cmp
xchg
adc
(bad)
dec
outs
xor
clc
dec
or
cld
pop
jae
ret
mov
inc
(bad)
push
mov
mov
sbb
add
cmp
das
(bad)
sub
frstor
cmps
out
jb
loopne
xchg
inc
push
inc
push
add
pop
(bad)
jae
int
add
xchg
les
pop
test
cmp
inc
adc
ds
add
sar
xor
jb
out
sub
add
in
push
xchg
out
push
push
mov
sbb
int
int3
mov
jle
and
mov
cmc
(bad)
jg
imul
xchg
ret
mov
mov
cmp
lock
into
retf
mov
mov
cmp
ret
push
xlat
pop
and
stos
cmps
inc
mov
xchg
push
pusha
mov
popa
dec
xor
loopne
push
adc
(bad)
in
mov
inc
mov
mov
or
fs
in
sub
in
lods
mov
(bad)
and
add
add
lds
mov
sar
cmp
jbe
push
popf
in
add
push
jb
jmp
das
js
and
or
pop
push
mov
ficom
rcr
mov
nop
and
or
mov
and
lock
add
and
xor
adc
stos
into
inc
cli
and
aam
in
add
ds
data16
push
outs
dec
ins
xchg
or
fneni(8087
lahf
sahf
push
cmp
or
dec
jo
add
jne
mov
ja
dec
adc
mov
sbb
scas
lods
div
loop
(bad)
sub
inc
jo
jmp
add
sub
sub
push
push
mov
push
aas
push
mov
dec
je
mov
dec
add
mov
pop
gs
xor
test
mov
sub
popa
add
cmps
dec
fmul
pop
ja
shl
mov
sbb
add
fnstenv
push
mov
out
mov
cmps
cmc
cwde
push
retf
jne
mov
in
xchg
sub
cmp
(bad)
(bad)
dec
cmp
inc
push
xor
pop
div
adc
stos
hlt
add
lea
sub
pop
mov
inc
or
xchg
jmp
lods
push
dec
xor
adc
inc
jne
ret
xor
push
adc
xor
dec
add
push
adc
cmp
dec
adc
and
imul
call
pusha
xchg
xchg
xchg
out
mov
dec
sbb
sub
jo
gs
and
in
mov
shr
mov
imul
sar
jne
or
add
jb
push
fwait
lea
je
outs
jmp
mov
sub
jo
shl
adc
sub
or
fidiv
bound
add
or
adc
pop
mov
retf
fidivr
mov
int3
add
add
nop
mov
imul
or
sar
test
xchg
call
mov
add
xor
fst
mov
or
ror
jmp
dec
mul
cmps
loopne
add
or
push
out
fild
je
rep
mov
dec
jmp
ret
or
jb
hlt
sub
lds
call
push
lahf
call
je
and
rcr
or
and
dec
jne
sub
stc
lods
sbb
es
xor
inc
adc
hlt
sar
or
add
mov
jle
fld
cwde
scas
pop
push
pop
and
sbb
lods
loop
mov
cmp
and
clc
sti
mov
cmc
jg
fs
pusha
jmp
movq
jnp
cld
movapd
push
clc
jae
pop
outs
fcmovnbe
xor
jle
xor
cli
rcl
retf
fs
adc
or
and
retf
or
jg
(bad)
jmp
adc
(bad)
jnp
mov
mov
ficomp
aam
ret
or
(bad)
adc
pop
lock
call
add
fadd
rol
jbe
and
shl
mov
shl
pop
enter
push
push
inc
pop
push
pusha
sbb
out
cmp
dec
sbb
pop
jo
pop
test
sar
in
mov
or
xchg
mov
mov
rol
pop
add
sti
std
or
add
xor
test
mov
(bad)
or
or
int3
jmp
dec
mov
sub
ret
adc
pusha
call
mov
sbb
hlt
fldenv
mov
push
pop
mov
(bad)
dec
aad
dec
and
push
pop
inc
dec
pusha
outs
loope
sbb
popa
inc
pusha
mov
sub
mov
jmp
push
or
mov
mov
push
sub
add
idiv
ja
mov
cmp
mov
push
(bad)
in
je
cmp
jne
inc
cmp
out
or
shl
or
(bad)
adc
add
xchg
or
sub
or
mov
aaa
ins
ret
daa
mov
shr
dec
pop
imul
push
push
push
sbb
adc
mov
rcr
jmp
je
mov
mov
js
pop
notrack
xor
pop
push
push
xor
dec
dec
sbb
sbb
(bad)
adc
xlat
cwde
cmp
or
mov
adc
and
clc
(bad)
add
test
popf
push
lea
cmp
or
xor
ss
xlat
cld
sub
dec
add
outs
loop
daa
mov
mov
push
sbb
mov
pushf
js
sbb
pushf
pop
addr16
sbb
sbb
sbb
push
mov
mul
push
cmps
enter
movs
pop
inc
sub
mov
mov
dec
dec
inc
xchg
push
fisub
pop
mov
dec
adc
sbb
sub
dec
add
lds
(bad)
imul
(bad)
dec
inc
test
or
jnp
sub
or
call
fsub
popf
or
or
jmp
pop
loope
push
adc
ja
and
xor
lock
adc
in
or
ret
cmp
inc
lock
arpl
mov
sub
cmp
int3
je
jl
pop
sbb
(bad)
out
sub
je
push
xchg
or
adc
mov
inc
sub
fdivr
bound
or
popa
pop
ja
scas
xchg
outs
mov
dec
shl
and
add
data16
data16
dec
test
add
adc
pop
inc
je
pop
sbb
mov
jle
or
enter
and
test
movs
adc
lock
shl
jns
adc
jl
mov
xchg
pop
rcr
push
jmp
xor
loop
icebp
xor
test
push
rcl
add
pop
retf
xchg
shr
rcr
or
jmp
add
iret
cwde
mov
ror
pop
inc
inc
add
sbb
sar
or
cld
dec
jne
ins
cmp
sbb
jmp
ret
adc
outs
jne
out
jmp
add
jmp
hlt
test
je
inc
mov
cmp
mov
leave
es
loope
or
cmp
jne
dec
jmp
inc
lods
dec
js
ss
xor
retf
jne
inc
aaa
push
lds
daa
push
mov
sbb
es
push
outs
jno
mov
rol
push
or
inc
dec
push
rol
test
pushf
stos
inc
xchg
dec
sub
stos
jge
(bad)
dec
push
rol
(bad)
cmp
add
adc
fsub
mov
stc
xor
pop
and
daa
outs
push
add
pop
pop
jne
ret
clc
ficom
(bad)
pop
adc
add
stc
or
rep
jmp
xchg
jmp
mov
mov
add
test
lea
addr16
sahf
fcomi
push
test
adc
inc
push
and
cld
pop
call
add
add
imul
dec
push
dec
add
nop
into
enter
nop
inc
adc
inc
xchg
mov
neg
out
aam
int3
push
les
lods
movs
mov
mov
call
call
hlt
cmp
repz
clc
clc
cld
lock
jo
out
add
lock
repz
jmp
or
or
lock
nop
inc
sbb
pop
sti
and
mov
pusha
and
lea
add
cmp
pop
and
std
(bad)
cld
mov
mov
fst
xchg
mov
addr16
cmp
in
pop
nop
mov
fiadd
jl
retf
fisub
add
sahf
inc
push
out
push
add
xchg
push
mov
push
out
fs
faddp
dec
push
mov
or
push
push
loop
cmp
pop
pusha
push
cmp
repz
sbb
sbb
adc
repz
adc
adc
or
repz
add
adc
pushf
or
ficom
add
push
add
sub
daa
ja
pushf
adc
lods
inc
mov
mov
pop
cmovb
xchg
js
loopne
fistp
adc
push
bswap
add
mov
add
dec
lahf
call
pop
inc
lods
push
jae
mov
inc
imul
pusha
or
sub
leave
les
pop
inc
jae
adc
popf
mov
adc
repz
push
pop
and
rcl
add
cmp
inc
jp
sub
sbb
adc
sbb
sbb
ror
add
add
rcr
sbb
loop
mov
mov
sub
mov
or
push
daa
fwait
pop
push
test
sbb
dec
or
sar
pop
inc
xor
xor
inc
push
pop
xor
cmp
dec
mov
or
sbb
enter
xor
or
pop
xor
stos
or
ret
and
mov
push
inc
and
cs
pop
mov
mov
and
dec
xor
or
mov
jecxz
mov
cmp
xchg
js
loope
cmp
jle
or
sbb
(bad)
fist
cld
popa
mov
dec
push
jbe
sub
inc
inc
mov
pop
cmp
pushf
mov
cmp
into
lea
cmp
jl
jmp
sub
in
mov
jne
push
adc
or
mov
mov
jne
pop
cmps
push
adc
sbb
add
pop
clc
mov
mov
mov
into
adc
ds
or
pusha
push
cmp
ins
and
add
push
(bad)
es
jne
ins
clc
dec
addr16
lods
adc
pop
sbb
stos
loopne
cli
inc
int
or
mov
push
inc
pop
jmp
add
sbb
cmp
dec
fadd
cmp
call
test
sti
sbb
movs
(bad)
push
pop
scas
pop
and
js
in
jmp
pop
push
loope
xor
ja
pop
fucom
or
add
inc
pop
stc
jle
mov
dec
or
cld
add
retf
fisub
xchg
xchg
aaa
pop
add
sub
inc
les
mov
cmps
outs
sub
add
add
bound
or
test
in
(bad)
das
adc
jne
pop
push
or
jmp
repz
leave
imul
sbb
fsub
or
cdq
or
push
pop
and
out
or
add
fucom
sub
sbb
ins
or
sbb
inc
shr
pushf
std
xor
pusha
push
push
or
add
rol
jo
js
sub
pop
aaa
push
jmp
and
sub
jmp
loopne
mov
inc
ins
imul
(bad)
fsubr
(bad)
repz
inc
js
or
pop
pop
pop
not
mov
xor
fs
mov
pop
pop
gs
or
push
inc
mov
add
mov
nop
shl
inc
fcmovb
(bad)
ins
rcr
add
clc
shr
push
(bad)
ja
cwde
dec
fidivr
jbe
lea
adc
sbb
jp
mov
xchg
add
pop
leave
and
pusha
ss
dec
add
push
clc
jbe
add
push
or
and
ins
out
jb
ret
mov
add
popa
aaa
add
add
push
in
cmp
adc
jmp
scas
adc
test
jne
test
cmp
xor
ja
sub
jbe
div
neg
scas
mov
pushf
pusha
push
add
ss
ret
retf
hlt
neg
sbb
mov
in
rcr
mov
cmp
mov
or
mov
ds
sub
adc
popa
pop
popa
and
push
shl
hlt
sbb
lods
int3
je
push
and
push
add
ins
adc
add
inc
sub
sbb
add
outs
xor
test
push
or
rol
repz
sbb
test
shl
adc
sub
push
sbb
clc
or
lods
cmp
pop
add
add
cmp
mov
pusha
sbb
int
jge
push
cdq
rcl
or
rcr
jns
aaa
adc
sbb
and
sbb
je
mov
repnz
cs
add
and
jle
daa
dec
jne
jmp
push
or
or
pop
adc
mov
dec
es
jne
mov
xor
or
sbb
sbb
(bad)
pop
xor
enter
lods
aad
lds
sub
mov
aaa
js
cmp
jno
arpl
ror
mov
(bad)
outs
into
push
or
fdivr
push
cld
jne
mov
push
cmp
jne
cmp
int
(bad)
es
jne
call
ds
int
or
call
inc
dec
or
sub
repz
(bad)
jmp
std
push
xor
cld
cld
jmp
fld
std
lahf
in
adc
adc
inc
inc
inc
inc
out
rol
or
push
adc
sbb
adc
mov
retf
xchg
dec
mov
push
push
push
sub
ret
sub
dec
and
mov
or
push
loopne
dec
mov
arpl
lea
or
add
adc
add
xlat
outs
and
adc
mov
or
xchg
xchg
or
or
and
movs
pop
pop
pop
pop
or
adc
pop
ffree
fs
lods
xchg
fisub
fmulp
in
shl
add
xlat
push
mov
pop
add
dec
addr16
sbb
cli
out
xor
pop
jg
add
mov
into
sub
test
xchg
pop
sub
call
push
push
push
jmp
jp
xchg
ja
jae
out
jmp
inc
fadd
getsec
dec
add
lea
and
cmc
dec
push
ja
or
and
mov
popf
and
jmp
loopne
inc
das
pop
add
sub
pop
and
or
pop
pop
outs
loopne
aaa
int3
sub
ins
sbb
jb
shl
mov
mov
gs
retf
inc
jno
test
xchg
mov
pop
inc
mov
push
rol
shl
xor
and
jge
test
int
jmp
in
hlt
mov
adc
(bad)
fsubr
stc
push
xchg
retf
es
pop
xchg
xor
jmp
or
adc
or
add
push
xor
pop
aam
je
add
sbb
(bad)
sti
fild
add
not
and
sub
add
or
sbb
mov
cmp
xchg
lock
sbb
lock
adc
daa
push
add
add
lock
xchg
sub
jne
pop
add
ja
xor
mov
jne
pop
mov
jmp
inc
or
(bad)
pop
retf
cmp
ja
mov
inc
je
mov
lea
in
mov
mov
call
ret
add
xor
adc
push
and
rol
scas
(bad)
mov
pop
add
mov
aaa
cmp
mov
inc
cmp
jb
add
cmp
inc
fwait
push
int3
cli
cld
div
xor
fs
sub
(bad)
ds
cmp
aaa
or
or
ret
mov
push
icebp
or
mov
push
sub
or
pushf
shl
push
scas
(bad)
sbb
into
and
xor
iret
sub
stc
add
mov
(bad)
jo
and
or
mov
mov
mov
push
jne
cwde
inc
add
test
cld
cmp
push
xor
cmp
je
xor
out
sahf
adc
and
fadd
dec
lods
or
aam
xchg
pop
addr16
mov
xchg
std
cld
sbb
inc
add
adc
xor
(bad)
pop
lock
in
mov
ret
or
jl
cmp
lahf
shl
retf
push
mov
clc
sub
mov
pop
inc
pop
test
jae
cdq
xchg
pop
inc
cwde
or
jns
xchg
xor
not
clc
pop
pop
mov
inc
jmp
cmp
sbb
jmp
adc
or
out
sub
sub
lods
mov
pushf
jg
and
(bad)
cmp
mov
xor
ss
ja
js
or
and
adc
adc
pop
mov
jno
fmul
or
mov
pop
inc
mov
and
je
clc
adc
retf
sbb
je
lea
mov
sub
jmp
and
jmp
or
test
push
add
mov
sbb
and
sbb
and
push
push
and
adc
shl
cld
std
mov
adc
sbb
sbb
mov
shl
(bad)
xchg
xor
add
pop
cmovno
cmp
add
mov
push
in
imul
mov
and
sbb
mov
bound
jmp
dec
or
cld
aaa
jne
mov
rol
lahf
(bad)
lock
mov
inc
mov
dec
jne
fs
add
pusha
inc
or
shufps
retf
add
pop
ins
push
and
lock
push
or
mov
adc
dec
push
inc
xor
add
xor
fidiv
sahf
test
or
dec
rcr
adc
shr
sti
nop
mov
ins
sbb
xor
dec
or
push
jmp
jne
jl
add
fmul
push
imul
or
loopne
icebp
add
push
and
add
nop
mov
fdivr
sbb
lea
push
adc
jbe
sub
ss
adc
clc
xor
enter
or
dec
pop
scas
mov
bound
mov
dec
es
and
add
cld
push
pushf
cdq
mov
or
mov
adc
daa
jne
or
add
idiv
pop
mov
jno
adc
or
test
xor
xor
pop
ret
jp
inc
imul
in
pop
nop
sub
inc
int3
mov
jbe
ja
or
loope
loop
out
jmp
mov
add
mov
mov
pop
add
jg
add
jmp
mov
or
stos
push
sub
or
adc
(bad)
hlt
add
outs
push
cmps
sub
sub
push
loope
xor
add
jp
mov
and
mov
mov
mov
inc
sar
or
mov
sub
adc
push
je
adc
or
gs
jnp
dec
int3
rcr
cmp
adc
rcr
data16
jmp
adc
push
jmp
xor
or
ds
jle
mov
les
ja
paddsb
pop
or
mov
cwde
test
lods
aas
or
push
push
adc
ror
cdq
(bad)
jge
adc
pusha
gs
rol
sub
in
inc
add
jo
adc
clc
inc
imul
adc
sbb
ins
push
adc
(bad)
pop
add
(bad)
fisttp
dec
cmp
pop
ins
xor
inc
push
pop
mov
jbe
xchg
out
hlt
cdq
pop
idiv
(bad)
jmp
cmp
loopne
in
sub
popa
xor
stos
push
push
mov
pusha
adc
ror
into
xchg
xchg
xor
cmps
and
sub
xor
push
or
push
scas
jp
loopne
dec
pop
push
imul
push
pop
push
dec
daa
cmp
pop
aam
mov
push
loop
sbb
loopne
mov
mov
arpl
add
sub
add
push
in
sbb
inc
adc
or
repnz
add
dec
(bad)
(bad)
push
or
ja
jecxz
test
and
xchg
loopne
mov
adc
or
rol
rol
or
call
dec
ret
fcom
test
and
ret
fbstp
mov
adc
enter
cmp
xlat
mov
in
xor
or
push
sbb
sbb
adc
mov
xor
push
fadd
idiv
or
enter
add
sbb
adc
xor
imul
or
call
ret
jbe
aam
aas
cli
dec
sti
jmp
dec
je
add
or
(bad)
pop
je
push
neg
sar
jb
push
sbb
xchg
addr16
add
jmp
sub
push
push
push
and
sti
add
mov
sub
push
jmp
lea
push
test
push
test
add
jo
arpl
lock
xchg
call
in
push
addr16
jne
mov
addr16
add
cmp
push
dec
mov
add
jae
push
imul
xchg
sub
xor
cmp
and
rep
or
dec
xchg
xlat
(bad)
pop
ins
inc
sbb
jns
or
mov
jg
mov
mov
adc
lods
repnz
jle
xor
or
jmp
xchg
jbe
leave
add
add
jmp
ror
add
pop
in
pop
push
dec
jb
je
push
jmp
sub
dec
xchg
clc
ror
sub
dec
pop
sub
pop
jp
loopne
fcom
sub
not
js
adc
imul
repz
or
mov
or
jmp
cmp
jae
xchg
cs
sbb
mov
cmp
mov
(bad)
(bad)
sbb
dec
loope
jl
push
add
call
test
mov
loop
pop
lea
add
sub
ins
push
push
pop
dec
sbb
inc
push
push
sub
pop
shl
sbb
(bad)
(bad)
add
xor
jl
sub
je
or
dec
and
sbb
shl
std
jns
push
or
clc
mov
pop
jle
rcl
add
push
pusha
xchg
pop
pop
imul
lea
retf
out
popf
cmp
push
sbb
punpckhwd
push
addr16
ins
sub
xchg
push
pop
int
add
dec
das
pop
push
pop
add
iret
(bad)
sub
push
pop
or
push
pop
ja
call
inc
push
pop
sub
sbb
cmc
push
adc
cmp
push
dec
test
sbb
inc
outs
mov
leave
imul
cmp
retf
push
push
fisubr
add
inc
lods
adc
add
call
ins
or
cmp
clc
mov
ins
sub
and
sar
inc
js
adc
add
jg
mov
cmp
jne
fst
stc
xchg
clc
push
jle
in
mov
stc
mov
mov
(bad)
out
retf
mov
fs
in
push
ins
sbb
jge
ins
inc
sub
xchg
cs
call
cmp
movs
bound
ret
add
add
xchg
fucomip
(bad)
mov
inc
(bad)
mov
jmp
dec
or
(bad)
inc
test
cwde
rcl
add
aam
xchg
mov
loope
mov
and
sbb
dec
shr
or
jno
jb
add
cs
lods
popf
fst
sets
push
mov
sbb
dec
int
push
mov
in
js
in
push
(bad)
add
add
enter
popa
imul
mov
retf
inc
dec
adc
or
stos
loope
repnz
test
pushf
lock
add
outs
and
test
in
mov
nop
test
pop
lea
dec
and
clc
xchg
push
cmps
aaa
mov
jmp
xchg
and
jg
clc
enter
mov
cmp
ret
xchg
and
test
inc
and
ds
mov
mov
xchg
mov
retf
ret
jge
cli
push
fcom
adc
cmps
and
movs
adc
popf
out
retf
movs
sbb
mov
sbb
xchg
xchg
sub
pop
hlt
test
popa
sbb
retf
sbb
inc
add
iret
sub
xor
add
jge
sbb
(bad)
mov
add
adc
pop
jp
pushf
jo
inc
pop
imul
pop
ss
mov
adc
sbb
mov
xor
popf
enter
inc
push
inc
xor
pop
jp
fisttp
jmp
adc
das
sbb
and
xchg
jo
in
sub
mov
fwait
or
mov
imul
add
mov
dec
call
ins
xchg
xchg
xchg
cmp
cmp
sub
(bad)
push
arpl
mov
adc
rcr
lea
dec
push
mov
cmp
xor
lahf
push
or
lock
(bad)
cmc
fsubr
xchg
sar
lea
xchg
imul
xor
rcl
xor
je
fnstenv
int3
adc
in
pushf
(bad)
fstp
sahf
and
loopne
add
bnd
add
repnz
xchg
inc
jnp
jl
jae
add
dec
sbb
leave
enter
fidiv
xchg
add
push
lods
xchg
cmovne
sub
mov
and
mov
push
les
adc
leave
jge
add
add
jo
push
jns
repnz
add
es
push
in
jmp
push
pop
test
sub
inc
lahf
out
sahf
dec
inc
cmp
sub
pop
sbb
ds
sar
mov
xchg
test
cmp
stos
loop
or
mov
or
xor
pop
nop
and
inc
pop
mov
nop
call
pop
rol
push
outs
mov
enter
repz
rcr
loopne
lock
jmp
mov
or
xor
loopne
push
(bad)
jmp
in
adc
lds
mov
outs
inc
dec
loopne
push
sar
out
sar
shl
push
or
sub
xchg
in
je
mov
icebp
retf
add
das
repnz
jne
pop
repnz
inc
sbb
add
add
push
adc
jle
or
mov
mov
dec
imul
int3
test
jne
push
sbb
mov
loopne
mul
add
mov
and
inc
sbb
outs
jne
out
cs
ror
mov
push
pop
shl
mov
push
xor
push
cmp
xor
ds
adc
test
clc
stos
rcr
cld
fsqrt
jbe
je
movs
(bad)
movs
dec
push
fistp
pop
or
dec
sub
sbb
xchg
mov
into
or
inc
push
push
popa
lock
mov
ss
or
and
test
and
or
fimul
cmp
jmp
lods
push
rol
shr
pop
or
mov
jns
sbb
dec
sbb
add
call
cmp
cmp
lods
mov
(bad)
out
sbb
sbb
aas
xchg
mov
push
lock
pop
push
out
call
add
pop
js
js
loope
neg
loop
cmp
ins
mov
dec
je
sbb
pop
std
mov
jmp
ins
test
in
xor
sub
std
add
or
adc
shr
push
jo
or
je
clc
mov
or
fmul
or
repnz
inc
mov
lock
loope
dec
cwde
adc
dec
xor
mov
add
push
or
mov
or
lods
sbb
mov
adc
cld
or
add
jbe
mov
add
psubusb
test
mov
jnp
push
push
lods
mov
cmp
es
mov
sar
test
test
popa
enter
call
call
push
ret
imul
in
add
xchg
mov
pop
or
dec
adc
mov
add
add
dec
or
stos
xchg
and
xor
mov
add
sub
ds
add
arpl
loopne
(bad)
fcom
push
push
xchg
fcomp
int3
repnz
xchg
clc
or
xchg
repnz
movs
shr
fadd
add
hlt
(bad)
mov
jae
fbld
cld
xor
jnp
push
jmp
sub
adc
xchg
clc
jno
ins
push
jne
loopne
pop
ins
repnz
jmp
cli
xor
mov
addr16
pop
inc
test
mov
(bad)
push
or
add
add
ja
int3
shl
cdq
int3
add
xchg
sbb
test
scas
add
add
sbb
or
dec
or
pop
sbb
mov
dec
(bad)
enter
jl
xchg
retf
jge
stos
sub
inc
cdq
stos
add
adc
jbe
push
inc
fisubr
sbb
scas
hlt
pusha
and
or
inc
mov
sub
sbb
or
cmp
div
pushf
inc
js
mov
sub
cwde
movs
aaa
push
sahf
mov
dec
sahf
jno
xchg
ins
in
sbb
jb
pop
aaa
loopne
call
sbb
push
adc
add
lock
stc
rcr
(bad)
xor
mov
dec
nop
rcr
cmp
or
cmp
push
xor
shl
push
cs
rcl
dec
push
pop
dec
jmp
ret
add
mov
jl
push
in
or
push
mov
dec
retf
inc
aaa
nop
or
retf
popf
mov
popa
xor
push
mov
mov
popf
jne
fnop
mov
cmp
nop
(bad)
in
xchg
cmp
call
lods
outs
je
dec
call
or
(bad)
sub
mov
into
pop
add
sbb
mov
sti
rcr
lea
jbe
ja
fiadd
xor
xchg
cld
ja
or
test
push
sbb
pop
sar
pop
leave
rcl
mov
push
loop
rol
inc
jnp
jo
mov
or
retf
movs
mov
loopne
sbb
pusha
xchg
loope
aam
sub
add
inc
sub
xor
enter
idiv
pop
or
add
setg
jb
movs
sbb
add
inc
popa
pusha
dec
popa
xchg
mov
adc
lds
add
mov
loop
fbld
push
imul
jmp
or
ja
movs
mov
mov
leave
test
adc
movs
hlt
hlt
stc
rcr
push
add
push
sbb
adc
test
in
and
loope
aaa
test
ds
xchg
pusha
sub
scas
pop
ret
sbb
pop
and
fnsave
jne
js
add
mov
inc
xor
movs
sbb
xchg
cmp
inc
cs
sbb
sbb
imul
imul
pop
or
xchg
rcr
jb
out
mov
test
pushf
dec
xor
or
adc
add
into
shl
jo
sbb
inc
je
pop
push
imul
fild
cwde
mov
dec
xor
repz
movs
cmp
test
mov
mov
lea
and
arpl
mov
call
inc
fimul
mov
add
outs
sbb
sbb
js
pop
add
push
xor
mov
loopne
sbb
es
mov
push
add
add
enter
repnz
pop
jne
xor
add
push
ins
cmp
sbb
xor
ds
cmc
add
push
pushf
sub
test
add
repnz
xchg
loopne
call
cmp
movs
xor
mov
push
data16
es
mov
stc
push
push
cwde
inc
iret
adc
or
dec
jmp
mov
inc
lods
cwde
ds
xlat
mov
mov
dec
movs
cmc
inc
sar
rol
xor
addr16
xchg
les
cmp
clc
pushf
mov
or
push
jmp
pop
or
sbb
inc
inc
mov
mov
jmp
stos
pusha
je
or
sub
mov
ss
push
fwait
pop
loopne
popa
xor
xchg
fisttp
pop
xor
mov
push
and
xchg
cmp
jb
sbb
call
or
and
out
test
push
outs
add
mov
shl
add
push
addr16
xchg
hlt
jmp
cmp
jle
jae
mov
xor
cmps
lock
(bad)
pop
push
out
mov
shl
add
or
mov
nop
cmp
inc
cld
adc
mov
leave
imul
popf
lea
mov
dec
mov
aaa
enter
out
cdq
sbb
div
movs
push
push
push
pushf
enter
iret
sbb
inc
push
stos
adc
adc
mov
dec
inc
les
call
and
jae
imul
cli
mov
bound
in
jo
inc
daa
add
xchg
les
mov
ins
sub
ret
inc
test
out
push
push
into
xor
jecxz
bound
sub
sbb
adc
dec
sub
mov
or
jmp
xchg
sub
cdq
add
adc
jl
add
or
push
mov
add
fidivr
adc
mov
xor
(bad)
jnp
or
sbb
push
lock
adc
daa
pusha
or
lahf
mov
or
mov
jnp
fsub
mov
mov
sbb
and
push
inc
out
ficomp
push
push
push
jmp
fnstsw
fadd
stc
cmp
fimul
mov
dec
jmp
sub
mov
mov
movs
in
ja
lock
pop
inc
mov
xor
and
or
fsubr
jmp
in
push
stos
rcl
push
rcr
dec
cld
mov
in
ja
sbb
and
mov
aad
sub
mov
sub
sub
push
mov
test
int3
mov
lock
shr
mov
test
pusha
inc
clc
or
and
push
and
dec
std
xor
or
push
mov
popa
sub
mov
mov
jp
or
jge
inc
sbb
adc
retf
add
xchg
mov
mov
and
inc
aam
mov
sub
mov
or
adc
ins
loope
add
or
mov
xor
gs
add
cli
adc
mov
adc
xchg
pop
jmp
jge
lods
mov
scas
mov
xchg
and
je
push
or
sub
mov
sbb
out
mov
sub
movs
daa
pop
mov
mov
xchg
xor
or
add
rcl
add
mov
mov
fdivr
aaa
xor
or
stc
and
stc
mov
jmp
cdq
push
(bad)
pop
call
sti
push
adc
or
(bad)
dec
xchg
mov
stos
mov
push
jmp
ret
(bad)
outs
mov
adc
dec
mov
pop
adc
int3
mov
or
or
(bad)
jne
jle
inc
mov
mov
daa
test
test
xchg
or
jbe
call
sar
pinsrw
jb
inc
aam
xchg
add
mov
cmp
push
jl
adc
or
and
out
jno
push
or
adc
dec
push
push
or
inc
add
fmul
dec
pop
jb
mov
ins
imul
mov
(bad)
aam
add
pop
bound
pushf
ret
add
imul
and
pop
push
and
(bad)
test
test
nop
ret
adc
inc
mov
jb
in
push
hlt
mov
xchg
xchg
cmc
adc
(bad)
xchg
jo
(bad)
pop
jmp
inc
aam
clc
fmul
out
lock
adc
nop
add
test
idiv
push
ins
and
pop
rcr
jne
cmp
je
lods
cmp
ja
mov
jmp
pop
cmp
cmp
lea
inc
adc
jmp
inc
loopne
push
loopne
loopne
push
xchg
loopne
xchg
stc
pop
push
xor
inc
imul
jo
imul
or
es
xor
add
sub
sbb
pop
sbb
mov
mov
xchg
and
jg
inc
push
jo
(bad)
adc
ds
jb
inc
test
(bad)
retf
cld
scas
add
nop
add
pop
push
sbb
les
sub
icebp
jae
sub
add
leave
pop
std
arpl
lods
pop
and
std
sub
mov
xor
sub
add
and
adc
mov
jmp
push
sub
mov
sub
add
(bad)
and
mov
and
pop
push
xchg
sub
outs
ss
js
add
mov
sub
sub
lea
into
pusha
and
pop
inc
sar
sbb
fxch
outs
mov
mov
or
mov
movs
jl
add
int3
in
xchg
push
sub
push
sbb
loop
jns
push
add
push
pop
adc
or
cmps
shl
jl
inc
cmp
cmp
lods
sti
inc
mov
sbb
sbb
jle
div
mov
nop
jnp
shl
test
out
and
mov
xlat
imul
pusha
jo
pop
leave
shr
mov
pop
sub
add
icebp
add
arpl
icebp
pop
es
sub
cmps
inc
fstp
pop
fld
imul
inc
js
push
inc
sahf
pop
push
rol
mov
shr
cdq
mov
nop
and
sub
ins
int3
push
sbb
dec
xchg
cwde
pop
adc
test
ds
test
ins
push
lea
loopne
fstp
test
mov
sbb
mov
inc
inc
pop
sbb
mov
es
(bad)
lock
pop
enter
leave
sbb
ins
add
mov
test
inc
or
mov
or
xchg
add
xor
(bad)
call
pop
mov
outs
data16
sbb
cmp
jo
push
cld
mov
or
(bad)
sti
sbb
adc
push
fs
dec
xchg
xchg
pop
mov
imul
call
clc
sub
pop
jp
mov
and
dec
adc
and
leave
cmp
dec
jo
sbb
jmp
cmp
sub
shl
push
xchg
mov
adc
das
rcr
pop
add
stos
(bad)
pop
or
xor
mov
rcl
sub
pop
adc
inc
push
adc
add
xor
lds
shl
aaa
cmp
js
stos
ror
retf
test
push
pop
sbb
js
jp
mov
or
loopne
pop
jle
add
sbb
mov
out
inc
pop
ss
mov
or
mov
inc
sbb
jg
jp
push
jmp
and
jle
and
or
mov
test
or
cmp
push
cmp
bound
xor
das
pop
pop
jg
mov
into
jo
jo
push
fdiv
movs
dec
adc
cmps
rol
fstp
clc
hlt
mov
mov
lds
sub
rol
sbb
iret
in
push
jae
cli
call
test
(bad)
test
xchg
loopne
mov
hlt
xchg
bound
es
ja
cmp
jp
aad
bound
xor
lods
sub
test
mov
dec
icebp
xchg
push
hlt
pop
addr16
popf
je
leave
fistp
ja
mov
nop
dec
ds
clc
(bad)
adc
mov
sub
sahf
dec
xor
xchg
and
shl
mov
pop
popa
push
or
mov
fwait
sbb
lea
push
nop
(bad)
arpl
mov
jmp
and
mov
mov
popa
mov
repz
lods
mov
cdq
scas
and
hlt
push
xchg
pop
rol
and
inc
int3
jno
icebp
outs
fistp
ins
jne
jp
mov
adc
and
fisttp
adc
imul
mov
imul
leave
leave
leave
dec
inc
cmp
retf
sbb
aam
sub
in
in
test
sbb
stos
sar
loope
(bad)
xchg
jl
ret
lds
outs
popf
push
lea
loop
jae
sbb
mov
sbb
leave
mov
scas
mov
xchg
cmp
cld
adc
mov
adc
fild
adc
or
adc
test
ror
shl
pop
aaa
imul
shl
sub
jns
sub
mov
mov
inc
sub
or
aad
and
inc
pop
sar
lods
pop
leave
cmps
inc
sub
in
and
int
outs
and
push
xchg
(bad)
lds
mov
js
push
jae
(bad)
lods
mov
mov
inc
fs
add
mov
outs
jle
cdq
add
mov
mov
movs
push
pusha
cmp
xchg
loop
addr16
push
dec
inc
mov
xor
jmp
adc
mov
mov
mov
out
test
enter
add
outs
pop
xor
inc
mov
push
xchg
mov
cld
push
push
cmc
test
in
jecxz
push
pop
sbb
inc
push
add
push
aas
inc
pop
js
add
(bad)
into
fdivr
push
jnp
jb
mov
pushf
push
into
lods
cdq
nop
inc
cs
lods
shr
add
cdq
ficomp
pop
push
mov
sub
in
je
adc
push
pop
xchg
mov
mov
mov
dec
sub
dec
fsub
jb
add
aad
lds
cmp
jnp
jo
leave
ror
dec
push
add
and
mov
lods
jns
and
and
(bad)
nop
mov
aam
leave
and
cmps
ret
(bad)
in
xor
rol
rcl
mov
or
aam
and
enter
cmp
inc
mov
aam
idiv
test
pop
inc
cmp
retf
mov
sbb
sbb
sbb
mov
pop
loope
sahf
popf
mov
mov
je
pop
add
cmc
loopne
sub
sbb
sbb
inc
push
scas
dec
out
imul
scas
inc
ds
mov
push
pop
hlt
rcr
stc
xchg
inc
mov
add
in
fidiv
(bad)
dec
sbb
dec
adc
xchg
sbb
sbb
scas
retf
xchg
mov
add
ret
adc
rcl
pop
sbb
mov
jmp
retf
inc
pop
pop
push
inc
jp
mov
das
and
out
ret
mov
or
test
ror
gs
out
dec
add
hlt
and
sbb
dec
out
cdq
cmc
test
stos
cmp
jmp
mov
dec
rcr
mov
inc
jmp
dec
fild
dec
add
add
or
cmp
and
add
inc
add
sub
xor
retf
cmps
xor
lea
jo
sbb
rcl
add
xchg
push
sbb
add
push
add
add
mov
mov
fisttp
mov
xchg
mul
or
add
jo
adc
xchg
retf
or
lock
add
dec
(bad)
pop
xor
sbb
and
pusha
and
mov
mov
add
adc
push
jle
add
jo
inc
pop
sub
mov
mov
inc
cmp
push
sbb
int3
repz
or
or
add
sbb
push
fcom
dec
fstp
mov
mov
adc
mov
cmc
(bad)
hlt
mov
shl
pop
hlt
push
popf
out
cli
out
or
push
sub
(bad)
aad
adc
push
sub
inc
add
and
or
cld
dec
dec
out
(bad)
push
not
out
int3
arpl
adc
cs
fadd
adc
cmp
scas
mov
adc
sbb
fisttp
aaa
add
xchg
mov
dec
or
mov
ret
movs
push
mov
mov
loope
out
addr16
mov
dec
cmp
mov
in
leave
sub
mov
cmp
and
in
sbb
mov
and
jmp
or
loopne
jmp
mov
in
inc
or
shr
ret
sub
jg
pop
add
push
or
scas
mov
idiv
or
xor
(bad)
mov
push
ret
jno
push
dec
fist
mov
mov
push
cmp
sti
imul
xchg
pop
mov
xchg
xor
mov
(bad)
jne
mov
inc
sbb
cmps
sar
jne
dec
shl
jmp
dec
jmp
add
jmp
pop
push
mov
add
adc
leave
ret
add
shl
lods
fwait
push
fcom
add
push
imul
rcr
add
(bad)
pop
jmp
psubsb
jb
sbb
mov
in
push
jmp
lock
dec
ror
push
aad
imul
aaa
inc
push
jne
ret
aas
sar
stos
mov
jnp
jae
cmp
jbe
addr16
shl
jne
xchg
sbb
lods
rcl
inc
push
leave
inc
fwait
lea
sbb
leave
xor
jo
fwait
or
push
mov
sub
stos
jmp
cli
(bad)
(bad)
fs
cmp
inc
cmp
js
push
add
pop
mov
sbb
shl
inc
bound
loopne
xor
(bad)
dec
xor
push
fsub
std
es
pop
dec
test
or
clc
dec
xor
dec
jne
loopne
pop
jnp
stos
addr16
scas
dec
jle
sbb
pusha
xor
mov
jecxz
xor
push
mov
inc
dec
jne
(bad)
sahf
xchg
push
push
scas
stos
mov
jmp
rcl
push
addr16
add
jmp
cmp
call
cmp
adc
add
sbb
mov
push
movs
ret
cmp
adc
and
push
add
test
cmp
leave
mov
push
and
call
scas
pop
pop
pop
pop
sbb
shl
dec
pop
pop
push
cmp
cmp
das
pop
pop
push
xlat
test
imul
stos
ins
jmp
lods
and
add
and
dec
mov
or
push
or
mov
add
jl
sbb
ror
call
(bad)
jnp
jge
mov
mov
add
mov
ret
cmp
out
imul
jmp
jmp
mov
jmp
popf
jmp
and
cmp
xor
(bad)
shl
cmp
and
test
pop
pusha
and
or
jne
jns
push
sahf
or
dec
fimul
fnsave
icebp
nop
push
js
sbb
mov
pop
aad
jecxz
pop
fimul
test
jnp
xchg
test
clc
xor
in
aaa
sbb
pop
loop
jnp
test
pop
ret
adc
mov
jecxz
jo
xchg
and
mov
sbb
xor
or
sub
mov
or
clc
adc
clc
xchg
add
cmp
arpl
pop
sub
sbb
xor
fdivr
mov
test
push
addr16
rol
pop
cmps
sbb
das
adc
mov
fiadd
les
mov
sub
and
rcr
cwde
shr
xlat
cmp
pop
pop
sbb
cwde
daa
sbb
das
jmp
jle
jg
je
call
js
test
pop
cld
(bad)
inc
add
add
inc
and
movs
or
mov
xor
cli
xor
cmp
mov
fstp
addr16
out
or
mov
pop
scas
lock
add
add
lock
pushf
push
mov
sub
aad
add
mov
lock
adc
pop
push
out
pop
movs
pop
mov
jmp
pop
push
fwait
sbb
add
or
and
or
test
dec
mov
mov
or
sbb
pop
or
inc
mov
fisub
test
push
push
push
pusha
adc
inc
adc
aas
push
scas
add
sub
call
cmp
inc
(bad)
sub
push
push
mov
pop
and
fadd
std
jo
pop
scas
mov
pop
inc
or
and
push
add
les
shl
and
mov
shl
push
bound
pop
inc
add
mov
push
imul
dec
fidiv
adc
ret
cwde
clc
and
or
dec
inc
pop
sbb
sub
test
imul
push
push
ds
adc
js
push
mov
mov
add
mov
mov
lock
out
cmp
sub
iret
push
adc
xchg
sbb
stos
clc
mov
adc
sbb
pop
jb
cmp
pop
jb
pop
inc
dec
pop
inc
test
mov
cmp
jmp
push
adc
leave
test
dec
mov
ds
mov
mov
(bad)
enter
pop
cmp
lea
mov
ficom
scas
loop
popa
popf
jge
adc
sar
jg
and
lods
adc
mov
mov
add
in
push
ror
mov
outs
jo
les
pop
dec
dec
sar
xor
cmps
mov
adc
pop
ds
je
shl
mov
mov
inc
inc
rcl
sbb
ja
mov
imul
add
retf
xchg
loopne
cdq
aad
sub
xor
test
fistp
das
ds
or
xchg
arpl
cmp
inc
(bad)
jne
cmp
stos
inc
lahf
xor
cmp
hlt
xchg
pop
mov
cmp
clc
pusha
lods
adc
xchg
add
rcr
(bad)
sub
loopne
or
js
push
add
mov
inc
js
sub
vmovd
add
or
cmp
add
in
pop
mov
or
inc
lsl
in
or
rcr
or
xor
sub
(bad)
sar
add
out
rcl
jmp
jg
loop
sar
aaa
fistp
jg
push
inc
adc
push
jmp
push
xor
jo
mov
dec
jne
shl
mov
imul
or
or
xor
mov
je
xor
adc
or
jne
sbb
add
jne
push
inc
outs
stos
and
inc
cli
pop
pop
ret
fnsave
sub
sbb
shl
je
popf
bound
add
cli
shr
add
clc
enter
aaa
push
popf
cmp
jg
mov
xlat
jl
js
in
adc
xchg
test
outs
adc
adc
add
push
adc
ret
mov
push
xor
push
or
shl
enter
or
and
push
sbb
fdiv
xor
call
xchg
add
jmp
add
nop
push
pop
mov
and
sbb
push
add
neg
shr
retf
or
push
sbb
test
add
push
or
mov
sbb
or
xchg
jo
add
xchg
pusha
outs
mov
push
xlat
cmp
imul
push
fld
or
mov
rcl
fiadd
mov
popf
pop
dec
enter
cs
in
jno
xchg
mov
jp
les
out
fcmovnbe
jle
sbb
jmp
and
add
and
pop
mov
imul
push
(bad)
dec
add
and
sbb
stc
jbe
test
add
sbb
xchg
adc
fbld
lods
jno
imul
in
shl
aad
call
jmp
loopne
or
stc
pop
sbb
int
adc
jmp
push
jge
mov
jmp
mov
mov
in
in
fcomp
adc
cld
and
sub
js
and
push
xor
bound
mov
adc
jne
lea
xor
inc
lock
nop
dec
dec
sahf
out
ficom
pop
push
dec
repz
loope
fcom
in
into
cmps
jge
mov
rcl
pop
stc
es
mov
add
int3
and
and
mov
mov
jb
push
inc
and
mov
fs
jle
imul
pop
ficomp
loopne
pusha
or
mov
cmp
jp
push
push
cdq
jmp
inc
fadd
or
or
jmp
test
and
inc
xor
jmp
sti
iret
mov
xchg
and
ret
and
push
push
test
mov
sub
pop
or
mov
xor
fst
scas
cld
outs
mov
test
cld
div
adc
xchg
xchg
(bad)
and
pop
dec
mov
sbb
jl
add
jg
xor
jle
mov
sbb
sub
mov
sbb
shl
je
jmp
bound
add
loopne
loop
sbb
popa
out
or
inc
cmp
sbb
mov
push
aad
adc
inc
clc
adc
loop
ret
or
adc
xchg
dec
cwde
or
xchg
ds
jl
mov
jbe
xchg
call
jne
cmp
outs
jnp
(bad)
mov
sub
dec
add
jmp
movs
pop
mov
or
data16
jb
mov
pop
and
xchg
std
mov
lods
std
ror
jmp
jne
xchg
xchg
xchg
add
cmp
adc
xchg
dec
shl
js
add
xchg
dec
ror
push
inc
dec
push
stc
test
mov
jno
or
gs
cmp
adc
test
mov
(bad)
outs
(bad)
or
jge
call
mov
jns
mov
enter
shl
ror
push
xchg
enter
mov
xchg
out
inc
mov
mov
mov
pop
rol
mov
pop
cs
int3
pop
or
add
sub
xor
sub
iret
es
lock
pop
sbb
sub
popa
mov
jns
idiv
jb
inc
xor
lods
es
adc
adc
mov
fsub
cwde
pop
xor
or
inc
sbb
test
sub
dec
cmp
inc
sub
jo
lods
pop
aad
pop
pop
inc
call
ss
cmp
ret
add
cmp
xor
mov
mov
cmp
push
outs
ss
cmps
rcl
js
pop
xchg
cmps
loop
push
mov
and
and
ret
clc
adc
mov
mov
push
pop
sub
rol
sbb
inc
in
test
es
inc
push
cmp
mov
pop
mov
ror
push
or
stos
nop
cmp
out
xchg
(bad)
mov
push
iret
and
mov
pop
(bad)
sti
cmp
movs
test
stc
mov
push
adc
loopne
push
ins
cwde
imul
rol
or
les
movs
ret
and
mov
jg
or
cmp
sahf
cmps
aam
sub
jnp
mov
pop
aam
mov
adc
fcomp
pop
fnstenv
adc
loopne
push
rol
adc
xor
sbb
add
mov
mov
push
dec
(bad)
adc
cs
fwait
sub
fwait
cmp
outs
inc
sbb
jns
jl
out
scas
mov
and
test
test
add
jae
mov
or
jo
in
sub
xor
sub
fdivr
jecxz
inc
fstp
and
loopne
cmp
add
test
adc
pop
scas
loopne
mov
mov
push
fisub
adc
sar
and
cmp
je
pop
clc
jmp
cmp
mov
xchg
sub
mov
test
stos
test
ficomp
sar
dec
int
mov
xchg
lea
add
mov
push
fsubr
pushf
adc
cmp
ins
inc
lahf
xor
cmp
lahf
js
in
push
jl
lds
sub
dec
outs
push
inc
scas
xchg
dec
or
scas
add
push
mov
adc
cmps
icebp
xlat
mov
push
(bad)
xor
mov
cs
mov
jb
je
jle
adc
xchg
sbb
pop
test
neg
adc
neg
ret
lods
or
cmps
cmps
(bad)
sub
cmp
mov
daa
movs
movs
movs
lea
enter
cmp
and
mov
mov
mov
retf
mov
lahf
inc
repz
cmps
lock
or
mov
sbb
idiv
push
pusha
ficom
inc
jmp
dec
data16
pop
inc
dec
leave
shl
test
cs
sti
mov
jmp
dec
and
lods
sbb
rol
mov
xchg
xchg
cs
or
sub
jl
pop
sbb
jmp
dec
adc
scas
adc
sub
out
jmp
or
sbb
sbb
jnp
fisttp
mov
inc
sbb
or
mov
sub
mov
mov
mov
iret
jmp
mov
xor
jecxz
les
je
jmp
mov
adc
inc
inc
lea
push
add
hlt
in
sbb
add
jne
cmp
hlt
push
nop
loopne
add
xchg
loope
outs
nop
sbb
cmps
jmp
sbb
jp
and
sahf
rcl
dec
push
add
pusha
stos
xchg
je
imul
or
inc
adc
cld
push
inc
daa
pop
mov
mov
pop
call
xlat
ret
pop
mov
push
jno
push
or
hlt
sahf
cmps
stc
mov
push
fdivr
rol
ret
jl
aam
lods
enter
test
pushf
or
add
sbb
inc
mov
and
fsubr
(bad)
sbb
xchg
mov
lea
pop
or
pop
out
rol
aas
jl
xor
call
xchg
seta
mov
test
xchg
xlat
loope
pop
pop
sbb
fisubr
push
lock
aas
pop
(bad)
(bad)
lea
aas
xor
sub
or
aas
pusha
fs
das
les
scas
movs
push
(bad)
fnstsw
adc
mov
shl
scas
outs
inc
aad
ss
outs
inc
xlat
adc
sbb
mov
outs
ror
enter
cmp
xor
and
add
aaa
or
call
call
push
jle
inc
mov
xchg
pop
jb
test
rol
and
pop
rcr
sti
enter
aad
sbb
adc
push
leave
call
in
add
aad
cmc
push
xchg
fidivr
and
add
test
inc
leave
add
aas
dec
movs
bound
in
xlat
(bad)
stc
dec
out
mov
mov
push
(bad)
cwde
mov
cwde
adc
inc
fadd
cwde
inc
add
lods
mov
sbb
sbb
in
rcr
mov
lea
cmp
push
mov
and
cmp
push
mov
jecxz
loop
mov
addr16
test
inc
cwde
xor
jb
test
push
nop
sbb
inc
dec
mov
and
(bad)
repnz
push
dec
push
or
inc
cwde
nop
push
nop
dec
dec
nop
mov
mov
pushf
cwde
jb
leave
add
cmp
add
popa
xor
aaa
ins
call
or
hlt
jne
xor
shr
arpl
cmp
repz
mov
ins
inc
(bad)
sub
addr16
mov
mov
and
popa
mov
test
add
add
and
and
xor
pusha
xor
(bad)
int3
xchg
lods
aam
or
inc
or
pop
pop
iret
add
add
sub
add
pop
mov
add
push
sbb
fmul
jns
xor
aaa
int
or
iret
push
jmp
jnp
jno
(bad)
das
mov
push
jg
mov
or
sbb
fst
dec
jne
add
jno
pop
mov
clc
adc
movs
jecxz
ss
rcr
or
add
and
xchg
inc
cdq
js
test
mov
or
sbb
ja
js
sbb
mov
push
sbb
cmp
adc
and
sbb
xchg
test
loope
imul
and
loope
pop
push
loopne
xchg
xchg
dec
sbb
les
cs
shr
je
mov
fwait
pop
outs
push
push
dec
adc
push
and
and
pop
dec
push
out
fnstsw
outs
inc
or
jbe
repz
ret
cmps
outs
ja
daa
loop
jg
lea
mov
jo
in
int3
pop
adc
jg
ffreep
lea
lea
inc
out
leave
inc
xchg
and
sub
fwait
mov
shr
pop
xor
dec
(bad)
cdq
xchg
movs
pusha
jp
in
aaa
add
inc
push
neg
cmp
aas
ret
mov
shr
retf
ret
mov
inc
cwde
cmp
popa
mov
rcr
xchg
sbb
(bad)
sub
mov
push
aad
retf
and
inc
(bad)
leave
test
loopne
adc
or
clc
xchg
cmp
cmp
shl
adc
xchg
loopne
leave
loopne
inc
jns
mov
lock
xor
xchg
pop
test
rcr
in
mov
pop
mov
ds
or
hlt
push
mov
into
sub
dec
and
dec
test
or
add
mov
push
or
leave
cmp
bts
jmp
mov
cs
sub
push
jbe
fwait
mov
and
lods
imul
dec
js
add
inc
adc
and
cmp
and
cmp
xchg
idiv
inc
inc
inc
add
mov
pop
or
cmp
add
cmp
pop
xchg
sub
rol
push
mov
retf
(bad)
out
add
xor
test
adc
lods
aas
xor
ficomp
cmp
jne
cmp
mov
add
add
inc
mov
add
inc
inc
or
loopne
cmp
and
dec
mov
jmp
mov
adc
or
and
jmp
cmp
nop
pop
sub
sbb
test
lea
ds
xchg
in
xchg
inc
mov
cmp
jp
push
test
aas
pop
popa
fs
rcr
xor
pop
rol
add
pop
adc
inc
or
and
cmp
loop
jae
ja
adc
mov
sbb
and
icebp
sub
rcl
jmp
inc
or
int3
add
push
xchg
add
mov
fist
ror
test
or
mov
loope
inc
out
movs
lods
rol
inc
push
cmc
fsub
sbb
cmp
adc
gs
ret
in
jmp
outs
mov
jbe
add
sbb
gs
mov
inc
cmp
(bad)
jg
inc
(bad)
sbb
and
xor
pop
add
call
js
dec
and
adc
lods
mov
cmps
ss
out
dec
adc
add
in
int3
or
xor
xchg
call
mov
mov
adc
add
push
pop
pop
add
lods
sar
not
adc
lahf
and
push
push
pop
push
sar
cld
enter
add
std
or
jne
dec
pop
dec
inc
pop
push
popf
shl
jnp
pop
adc
addr16
add
mov
call
adc
inc
mov
inc
pusha
loopne
pop
cs
je
cmp
in
add
dec
stos
dec
mov
add
mov
and
dec
cld
clc
daa
and
adc
or
aaa
popa
push
pop
jle
in
sbb
cld
add
or
cmp
sbb
or
jmp
or
push
mov
xor
adc
and
push
ds
and
cld
mov
clc
es
fcomi
js
mov
mov
popa
inc
mov
dec
fsubr
clc
int3
pusha
mov
sub
fbld
sahf
mov
or
jbe
int3
jae
cs
aas
lea
add
add
push
xor
out
scas
mov
cmp
lea
push
mov
push
jbe
and
pop
mov
rol
fldenv
or
push
movs
rol
pop
pop
lock
test
add
into
js
push
je
cdq
sub
mov
mov
(bad)
push
sub
lea
push
fabs
mov
jbe
daa
mov
loop
and
sub
pop
dec
std
pop
adc
xor
and
aas
sbb
push
int
sar
jle
lea
daa
test
hlt
or
mov
dec
lock
dec
sub
add
pop
mov
call
das
xchg
pop
dec
inc
push
jle
sbb
(bad)
jb
push
push
inc
add
push
xchg
pop
pop
movs
pop
call
push
add
mov
ret
mov
xor
cmp
movs
or
js
pop
sub
add
arpl
xor
fadd
add
and
test
add
cmp
or
pop
pminub
ror
and
into
sub
shl
cli
mov
xor
lds
adc
or
jmp
jp
retf
pop
push
and
push
or
or
or
pop
push
and
cmp
pop
test
lock
sar
shl
add
nop
adc
bound
outs
jecxz
mov
add
mov
inc
inc
jo
sbb
dec
daa
test
add
mov
mov
test
push
or
jmp
mov
mov
jmp
lea
sub
cmc
push
ds
cmc
rep
inc
sub
push
ins
or
or
xor
mov
out
cmp
add
or
je
push
mov
(bad)
sbb
lods
mov
cld
call
add
adc
out
pop
test
push
pop
sub
adc
mov
mov
mov
movs
ror
add
adc
movs
cmp
imul
push
call
push
cmp
or
shl
push
shl
xor
je
inc
movs
inc
and
push
paddusb
sahf
mov
lock
fcmovnbe
dec
pop
sbb
cmp
inc
adc
out
repz
lea
test
not
push
retf
or
lea
dec
test
hlt
push
test
jb
jae
and
mov
mov
mov
mov
push
dec
mov
or
xor
jge
sub
push
lock
jecxz
bnd
(bad)
sub
int
dec
jbe
pop
enter
mov
push
cmp
add
fcom
ret
fidiv
pop
arpl
in
xchg
xchg
das
push
push
in
xchg
es
pop
stc
sbb
add
jnp
(bad)
in
push
sbb
inc
adc
push
sub
(bad)
xor
add
fbstp
jmp
mov
sbb
loopne
in
loopne
inc
sti
cmp
mov
inc
inc
adc
cs
cmp
stc
cs
sub
pop
inc
dec
inc
pop
dec
dec
repz
mov
stos
aas
push
and
lods
out
ins
test
jb
fnclex
sub
sbb
mov
add
fnsave
mov
iret
jmp
addr16
mov
add
mov
inc
add
add
clc
stc
push
pop
sbb
jo
mov
push
leave
test
xchg
(bad)
in
hlt
jle
enter
adc
and
sub
int3
add
jo
add
ficom
sbb
test
(bad)
sbb
sbb
mov
into
mov
sbb
xchg
jge
inc
push
sbb
inc
(bad)
clc
cmp
jne
add
xchg
push
test
and
sub
or
adc
add
jmp
data16
xchg
stc
jmp
xor
aas
jmp
add
mov
out
(bad)
jecxz
bswap
loopne
xor
add
inc
push
(bad)
movs
icebp
gs
ret
or
popa
call
adc
and
inc
pusha
adc
jno
mov
jge
sti
jle
jns
cmp
push
movs
popa
sub
adc
pop
movs
push
add
and
aas
(bad)
clc
or
mov
lock
cmp
pusha
mov
ins
pop
lods
and
or
push
aad
adc
ins
dec
mov
jb
shl
sub
adc
pop
lea
adc
test
push
es
mov
sbb
in
push
shl
popf
scas
mov
lahf
add
jnp
shr
push
enter
add
js
jb
mov
pop
xchg
fadd
ret
sub
xchg
add
jmp
sti
ins
ror
rcl
add
fdivr
or
lock
mul
(bad)
lsl
jmp
lock
push
push
inc
shr
rcr
shr
rcr
or
xchg
xchg
cmp
div
pop
dec
test
mul
pop
jb
cmp
or
cmp
or
rol
push
adc
stos
test
jle
neg
inc
(bad)
retf
scas
enter
pop
ret
adc
ret
sub
je
sar
xchg
stos
pop
jmp
jbe
and
mov
inc
adc
(bad)
cmc
inc
in
add
and
inc
xor
call
cwde
jbe
xchg
or
xchg
icebp
cmp
sub
pop
or
pusha
mov
mov
xchg
add
cmp
push
cmc
jmp
stos
test
xchg
mov
repnz
adc
mov
dec
cmp
not
adc
inc
and
add
xlat
mov
add
sub
mov
push
repz
xchg
inc
clc
pop
xor
inc
add
push
sbb
and
sbb
cmp
sbb
ins
and
out
mov
xchg
and
ret
ret
es
pop
ret
mov
push
call
and
and
add
xor
in
out
fild
push
push
pop
nop
imul
add
cmp
mov
sub
inc
loopne
xchg
popa
adc
jmp
jne
push
add
test
out
cmp
pop
inc
cmp
mov
add
stos
adc
shl
(bad)
popa
dec
add
push
fs
push
mov
fadd
dec
and
loope
or
pusha
(bad)
and
or
pop
inc
push
inc
push
or
xchg
retf
movs
mov
add
lock
adc
cmp
mov
or
pop
outs
je
add
or
jge
dec
cs
xchg
jbe
and
in
rep
fsub
cmp
inc
and
sbb
sub
sub
mov
movs
cmps
cmc
rol
add
cwde
push
pop
cmps
mov
daa
loop
les
je
mov
sub
or
xchg
sub
mov
xor
sub
mov
imul
inc
push
push
add
mov
xchg
xchg
fadd
add
pop
push
imul
push
add
adc
pusha
iret
call
mov
sar
ja
dec
fcomp
aam
sar
push
data16
ret
push
je
mov
js
test
sub
push
(bad)
mov
sub
push
mov
fcomp
test
int3
cmp
mov
lds
lods
int
mov
jmp
adc
outs
push
retf
dec
(bad)
jae
adc
imul
inc
push
lods
mov
xchg
jbe
dec
xchg
fdivr
icebp
lock
nop
aam
xor
in
adc
inc
inc
fidiv
jge
add
aad
mov
mov
and
enter
jae
push
sub
push
into
sub
push
jmp
cmp
jg
inc
jmp
mov
mov
data16
jne
imul
bound
fnsave
movs
dec
push
inc
mov
enter
jno
in
dec
xor
jbe
je
dec
xor
je
mov
xchg
mov
rol
xor
icebp
xor
pop
aad
(bad)
and
mov
push
adc
and
add
adc
push
stos
xor
mov
bound
sbb
sub
adc
jnp
call
jge
mov
sahf
jge
jae
add
push
and
mov
aaa
xor
or
scas
add
mov
push
(bad)
pop
stc
xor
(bad)
pop
inc
rcl
std
dec
add
mov
cli
and
shl
test
push
pop
pushf
or
(bad)
shl
call
mov
cmps
jmp
mov
jp
xor
sub
and
mov
cld
adc
ja
mov
sub
rol
clc
ret
adc
or
and
mov
test
js
xchg
adc
and
or
das
adc
push
gs
and
fild
pop
cmp
or
cdq
sbb
rcl
pop
not
stc
loopne
mov
stos
sub
inc
lock
popa
and
xchg
add
or
adc
outs
xor
fs
push
fs
and
icebp
jg
into
std
or
and
or
xor
mov
or
je
xchg
cli
adc
lea
lea
or
mov
jnp
out
sahf
pop
jbe
cmp
push
sbb
sbb
fmul
or
faddp
fiadd
loopne
push
pop
inc
mov
adc
adc
push
push
add
and
inc
jle
ret
mov
mov
mov
(bad)
and
push
add
jno
push
cmp
and
loop
mov
push
push
daa
shl
(bad)
push
xor
jo
mov
push
dec
mov
leave
ds
arpl
ret
jmp
push
add
out
bound
enter
xlat
ins
enter
js
adc
add
or
jo
outs
rol
jl
or
sbb
cmps
shl
push
sub
add
jns
mov
pop
push
hlt
cmp
cmp
retf
cmp
and
movs
pop
mov
xchg
and
pop
adc
test
aas
push
ds
call
add
xor
xor
(bad)
loopne
repz
mov
jg
jo
scas
call
aam
sbb
in
rol
cmps
mov
pop
cmp
sahf
fs
add
sub
mov
xor
ins
je
sub
and
push
or
sub
ss
dec
hlt
push
mov
push
imul
adc
loopne
mov
jmp
imul
pusha
jg
call
stos
ret
add
adc
adc
scas
add
and
clc
das
xor
lock
mov
gs
adc
ds
rol
pop
ja
and
push
adc
adc
movs
fisttp
jp
mov
adc
add
(bad)
ret
xor
adc
push
sub
ss
or
push
xor
lock
out
xchg
inc
mov
mov
das
ficom
push
mov
cmc
pushw
mov
adc
sti
add
mov
inc
fsubr
es
outs
sub
inc
jmp
mov
cli
popf
push
leave
xor
dec
sub
jg
sbb
xchg
pop
cmps
daa
add
sub
adc
cmp
jge
and
inc
mov
push
or
ror
nop
dec
fsubr
cmps
mov
or
loopne
icebp
cmps
mov
cmp
jecxz
aas
ins
popf
std
sub
push
lods
mov
cmp
and
or
std
inc
jmp
push
mov
cs
push
or
xchg
aad
rcl
lea
and
cmps
nop
out
add
mov
aad
or
and
sub
add
fcom
dec
sub
or
das
jl
inc
push
mov
movs
and
mov
fwait
mov
stos
popf
push
mov
scas
and
sbb
push
pop
mov
cmp
jle
jle
sub
cmp
xor
popf
shl
sbb
jmp
dec
push
in
jbe
cmp
inc
sub
jae
ret
or
cld
data16
ret
test
sbb
sbb
mov
sub
ins
xor
mov
pop
jge
iret
rcr
mov
fucomp
jge
neg
movs
jne
repnz
cs
mov
jae
imul
sbb
inc
popa
cmp
and
dec
jo
xchg
rcl
outs
js
push
bound
lahf
and
cmp
jnp
lea
push
and
inc
mov
xor
mov
push
movs
jbe
sub
mov
mov
loopne
je
mov
loop
sub
in
mov
popf
es
ins
ret
repnz
sbb
add
or
loope
test
fnsave
clc
inc
jmp
sahf
dec
dec
or
cmp
cmp
inc
cmp
and
dec
mov
ja
lock
cmp
or
jecxz
call
push
inc
jmp
cmp
int3
je
(bad)
pop
xor
scas
mov
dec
push
adc
jne
stos
pop
ror
aas
enter
stos
xchg
push
fsubr
cwde
jge
dec
aam
jb
dec
adc
loop
out
sub
cmp
cmp
mov
mov
pusha
movs
sub
mov
out
in
mov
or
sub
xor
jne
add
xchg
mov
loope
add
ss
cli
int
call
add
aaa
or
and
add
mov
push
data16
movs
xchg
cmp
add
enter
ret
cmp
mov
out
add
jne
pop
neg
sar
rol
dec
pop
daa
lea
nop
inc
mov
jne
inc
xlat
jae
inc
not
pop
mov
push
or
mov
xchg
aas
into
ja
mov
(bad)
dec
adc
pop
inc
test
out
jne
sbb
cs
lock
(bad)
sub
dec
retf
jne
inc
or
pop
adc
cmp
pushf
and
iret
int3
call
and
pop
xchg
nop
(bad)
fwait
add
cwde
xchg
test
push
pushf
ins
fild
push
lea
call
test
mov
adc
clc
and
cld
sub
mov
cmp
jb
mov
push
mov
inc
ja
mov
inc
cmp
ins
mov
xchg
pushf
xor
imul
movs
mov
sbb
sti
jg
adc
add
xchg
loop
sub
in
shl
shr
pop
ins
jmp
jmp
push
adc
mov
bound
or
adc
inc
mov
lea
xchg
mov
aaa
or
jmp
jg
and
shr
shl
shr
or
mov
mov
adc
sahf
dec
mov
jne
outs
mov
mov
aam
das
mov
push
sub
push
cmp
sub
jne
xchg
jo
sar
sub
(bad)
rcr
loopne
aaa
xchg
fiadd
mov
pop
inc
jo
fiadd
push
out
jmp
mov
in
aad
fisubr
push
lds
add
dec
mov
mov
mov
and
push
int3
jmp
hlt
push
or
daa
mov
inc
add
outs
pop
lods
test
jmp
ret
jne
add
add
add
or
xor
dec
adc
jmp
sub
test
sbb
sub
repnz
movups
xchg
pop
xchg
jo
mov
inc
mov
mov
inc
sbb
add
out
add
and
push
ret
or
iret
repz
test
enter
push
out
imul
ret
call
mov
or
add
test
adc
sbb
mov
dec
jecxz
sub
push
outs
clc
add
pop
int3
sbb
jne
xchg
pop
jno
mov
arpl
cmp
mov
add
xor
add
fadd
or
cmp
pop
test
arpl
pushf
add
or
jne
dec
fld1
mov
(bad)
push
add
mov
sbb
dec
adc
jo
in
ret
mov
rcl
repz
inc
sbb
mov
(bad)
push
outs
cmp
mov
xchg
std
ins
ret
dec
mov
mov
pusha
xchg
inc
mov
test
pop
pop
lea
adc
fwait
mov
imul
ror
sbb
push
and
pop
add
ins
fs
xor
inc
outs
test
or
pop
call
inc
outs
pop
rcl
dec
sar
pop
ror
retf
mov
sbb
push
jno
iret
jmp
sbb
hlt
and
loope
cwde
pop
mov
xchg
inc
lahf
cmps
jns
movs
lods
movs
adc
mov
test
sahf
add
push
add
or
push
(bad)
lock
shr
dec
xor
push
call
xor
or
repnz
mov
pop
jmp
ret
jmp
mov
imul
push
xchg
or
jmp
mov
in
sti
cld
add
push
in
add
or
fs
cmp
movs
iret
lock
inc
loope
push
lea
std
jg
iret
add
leave
sar
mov
aas
or
test
adc
and
sub
mov
adc
test
cmp
retf
loope
cmp
push
push
mov
mov
sbb
cdq
lods
loop
inc
loopne
inc
pop
ret
test
sub
in
loopne
clc
(bad)
sub
inc
push
mov
rcl
jmp
pusha
cmp
mov
cmp
(bad)
cmovb
popf
and
pushw
push
sub
xchg
enter
push
inc
mov
add
add
mov
js
mov
mov
add
(bad)
fist
outs
adc
push
hlt
mov
and
test
sbb
outs
jmp
and
jae
pop
imul
sub
add
mov
enter
scas
fsub
in
adc
popa
xchg
inc
adc
fadd
inc
call
jmp
mov
adc
dec
inc
outs
mov
push
dec
hlt
lea
pop
or
inc
pusha
jge
cmp
pusha
xchg
sbb
lea
add
jns
lock
mov
rcr
pop
add
cmps
inc
mov
shr
jo
not
mov
inc
cmps
int
push
test
(bad)
push
or
add
jmp
cmps
mov
sbb
(bad)
cmp
test
jne
gs
inc
xor
mov
pusha
cmps
sbb
pop
ret
jnp
sub
push
jmp
sub
inc
sub
inc
cmc
scas
dec
mov
jl
pusha
dec
iret
test
arpl
mov
add
add
pop
cld
jnp
mov
std
sub
jge
mov
mov
inc
mov
sbb
add
xchg
dec
xor
enter
or
out
ret
and
mov
std
xchg
clc
jo
inc
retf
movs
adc
dec
xor
jae
mov
pushf
loopne
imul
jmp
sbb
push
add
pop
movs
lds
xchg
and
out
sub
jne
jge
(bad)
dec
cmp
ret
sub
clc
and
les
push
xor
jne
push
sbb
shl
and
jns
add
or
adc
fiadd
into
jg
sbb
movs
or
pop
data16
mov
test
sub
sbb
and
or
and
add
mov
(bad)
movs
sub
(bad)
push
jne
sbb
adc
xchg
inc
rol
push
cmp
jmp
mov
lock
dec
test
push
(bad)
shr
adc
lock
enter
lods
std
cmps
test
inc
push
es
and
sub
fiadd
mov
mov
test
or
mov
jg
jmp
push
mov
and
mov
sbb
pop
xchg
aas
push
jae
adc
inc
lods
cmp
out
sub
mov
cs
loope
pop
neg
add
ret
mov
fidivr
adc
rdtsc
and
cmp
retf
and
sbb
into
push
xchg
cmps
or
jmp
les
test
or
mov
cmp
sub
pop
test
icebp
and
or
lds
les
lock
loope
inc
ss
icebp
jbe
retf
jmp
sbb
mov
addr16
xor
(bad)
adc
or
mov
push
fsub
inc
out
or
xor
inc
mov
mov
fwait
dec
test
xchg
add
add
xor
cmp
int3
inc
popf
mov
mov
mov
mov
adc
fcomp
push
nop
mov
mov
and
cmp
mov
jns
shl
or
xchg
push
inc
push
mov
push
(bad)
adc
pop
xor
es
aaa
scas
lock
je
aaa
inc
ins
pop
cmp
aad
mov
mov
jmp
test
push
and
enter
jl
add
jg
jmp
add
js
pop
sbb
xor
shr
or
aaa
mov
cmp
cmp
loope
add
mov
jle
jmp
jb
ret
(bad)
mov
add
inc
call
adc
or
clc
pop
adc
push
inc
mov
dec
ret
pusha
push
sar
inc
mov
dec
add
push
xchg
push
dec
retf
push
or
loope
jmp
xor
xor
mov
dec
add
adc
test
rcl
push
into
push
and
jecxz
lahf
les
cmp
and
pop
add
cmp
sbb
xchg
data16
push
and
test
jb
daa
or
sub
inc
nop
mov
add
sbb
and
addr16
push
loopne
push
inc
dec
pop
shl
mov
daa
mov
mov
and
inc
jl
mov
scas
add
inc
lods
xchg
(bad)
sbb
data16
rcr
push
and
sbb
add
push
inc
in
in
push
mov
(bad)
or
fdiv
push
enter
mov
jo
(bad)
or
push
out
and
pop
cwde
(bad)
push
jne
push
jge
mov
out
int
xor
pop
movs
dec
rcr
or
fcom
cmp
call
(bad)
push
pop
inc
inc
pushf
or
sbb
mov
adc
ret
std
add
test
push
push
push
jnp
xchg
pop
pop
jne
pop
push
pcmpeqw
sbb
add
adc
or
js
or
(bad)
in
or
(bad)
mov
xchg
mov
adc
xor
retf
les
push
jmp
cwde
clc
pop
dec
cmp
mov
in
inc
(bad)
mov
or
push
dec
icebp
imul
add
(bad)
adc
adc
mov
imul
dec
or
in
xchg
and
or
cmps
shr
clc
mov
fadd
or
push
sbb
dec
cmp
pop
dec
and
push
push
jne
jge
push
rcl
test
xor
cmp
push
mov
or
movs
sbb
fisub
or
jmp
nop
or
cmp
and
adc
push
mov
mov
mov
mov
sub
pop
push
mov
adc
jno
lods
in
mov
jge
add
cmp
test
xchg
push
and
(bad)
sub
cwde
or
int3
mov
jo
inc
mov
pop
inc
fnstsw
mov
sbb
inc
mov
or
in
in
out
add
or
bound
adc
adc
icebp
cmovnp
pop
add
loopne
jmp
cwde
or
les
xchg
das
mov
or
cwde
daa
push
adc
jmp
jbe
or
push
test
mov
inc
inc
dec
cld
mov
rol
das
out
sub
inc
pushf
xor
mov
ret
add
add
bound
inc
loop
push
push
pop
and
sbb
pop
add
adc
or
stc
jb
jmp
xchg
inc
stos
sub
call
add
push
or
mov
xor
or
clc
jnp
cmps
or
add
inc
in
test
pushf
push
cs
arpl
sub
or
add
out
and
inc
fsub
movs
out
add
rcr
nop
sub
shl
sbb
aad
je
(bad)
jl
xor
push
ret
sub
pop
inc
test
cld
pop
in
(bad)
cmp
jne
cwde
add
add
xchg
xor
test
mov
push
adc
jge
mov
rcr
push
movs
xor
mov
pop
mov
mov
dec
(bad)
cs
and
jmp
fistp
inc
or
je
sar
inc
cmp
mov
movs
push
sub
add
push
mov
dec
jp
sbb
or
imul
mov
or
and
sbb
cmp
mov
fdiv
mov
add
in
cmp
lahf
daa
test
lods
jle
call
scas
adc
fisttp
call
jne
stos
out
repnz
sub
pop
or
inc
mov
add
stos
clc
adc
jle
out
arpl
mov
mov
movs
dec
mov
sbb
mov
inc
add
enter
xchg
out
retf
adc
sbb
iret
add
(bad)
jg
cmp
call
les
jae
add
loope
mov
jo
push
push
in
xchg
pop
sbb
addr16
addr16
jmp
and
add
mov
adc
jo
jecxz
(bad)
cdq
mov
or
cmp
cmp
adc
in
jbe
ss
in
in
sub
xor
int
loopne
cmp
inc
leave
leave
in
movs
and
inc
cmovs
leave
leave
push
push
pop
add
jb
fs
jb
je
jl
iret
sbb
add
adc
fs
dec
mov
xchg
cwde
pushf
dec
es
mov
dec
repnz
xor
enter
leave
and
es
xchg
dec
xor
in
xchg
dec
xor
in
aam
hlt
dec
xor
and
cld
add
inc
jo
inc
add
add
xor
or
adc
and
sbb
and
and
dec
sub
and
dec
xor
cmp
xchg
dec
rol
dec
dec
es
jbe
mov
daa
cdq
fs
pop
pop
pusha
sbb
cmp
jg
pop
add
add
or
add
test
push
ror
xor
mov
xor
call
mov
and
adc
nop
adc
ror
sbb
xor
and
and
cmp
cmp
mov
dec
rol
int
xor
dec
int3
add
sub
enter
pop
sbb
mov
adc
add
loope
js
ret
and
and
jmp
or
push
je
dec
repz
sub
fcom
sbb
pop
push
or
jle
dec
sub
pop
add
xchg
xor
sub
faddp
jle
xlat
mov
retf
and
sbb
dec
xchg
add
or
or
out
and
mov
mov
or
not
xor
loope
xor
and
pushf
sbb
or
jmp
xchg
fucomi
add
and
rcl
add
test
js
add
fcom
adc
xchg
test
dec
cmp
fcmovbe
xor
ss
mul
shl
and
test
ror
or
sub
or
call
add
pop
or
retf
jmp
inc
popf
mov
mov
cld
mov
and
jae
mov
sbb
add
or
dec
or
jg
dec
clc
or
or
inc
and
sbb
es
inc
jmp
aas
pusha
mov
pusha
loope
pop
add
push
jmp
sbb
xchg
push
sahf
sub
pop
fstp
cmp
ds
pusha
fld
cmp
(bad)
jmp
mov
loope
dec
jg
test
dec
in
mov
(bad)
adc
sti
add
pop
jns
test
fistp
xchg
sub
mov
imul
jne
or
and
adc
or
add
add
out
and
sbb
or
jnp
jb
sbb
jmp
push
and
or
push
or
std
fwait
adc
inc
push
fstp
jmp
fisttp
sub
adc
fld
aam
outs
loope
push
hlt
adc
push
stos
push
jbe
je
adc
div
push
sbb
push
cmp
push
xor
test
or
add
push
or
inc
call
loope
push
aaa
sbb
mov
test
out
cmp
pop
add
rol
fsubr
dec
sub
sub
jmp
sub
jb
jp
push
or
das
add
lods
sbb
test
das
add
sub
dec
add
mov
rcl
mov
inc
mov
dec
xor
mov
push
add
mov
add
sbb
in
or
test
xchg
mov
frstor
jne
(bad)
repz
mov
push
mov
test
rcl
jg
(bad)
data16
pop
xchg
scas
(bad)
cld
aam
xchg
mov
cli
shr
ficom
or
stos
xchg
sub
jle
jp
addr16
push
pop
jmp
pop
data16
lock
icebp
lock
pop
call
cmps
mov
sbb
jae
push
pop
cwde
out
add
addr16
jle
push
add
push
sar
sar
fistp
and
pop
mov
jmp
push
pop
adc
adc
ret
and
call
add
outs
add
dec
pop
fsub
inc
cmp
je
(bad)
sbb
fmul
pop
cdq
cmps
imul
and
hlt
adc
and
je
pushf
sub
cmps
add
scas
stos
and
or
sti
dec
and
out
push
cmp
fstp
inc
popa
add
fsubrp
mov
mov
leave
dec
inc
outs
mov
and
lock
add
test
popa
inc
js
or
or
mov
ss
jle
or
fild
sub
xchg
cmp
sub
lock
or
add
or
mov
cmp
adc
jae
mov
and
jbe
shr
(bad)
push
das
adc
inc
cmp
scas
mov
imul
(bad)
push
xchg
or
jl
push
jno
add
add
push
or
mov
out
jne
je
mov
xchg
loopne
jecxz
into
shl
dec
add
push
cmp
add
shufps
mov
stos
xchg
retf
lock
or
(bad)
sbb
dec
add
push
mov
sub
into
pop
out
addr16
mov
sbb
inc
and
ret
lea
sub
(bad)
enter
test
dec
out
fld
fucomp
pop
fnstcw
lahf
add
mov
mov
xchg
or
dec
pop
and
mov
adc
sbb
shl
push
or
js
mov
adc
add
or
push
out
mov
sbb
or
or
push
and
jo
mov
sbb
sub
or
sub
push
sbb
hlt
mov
dec
jmp
xchg
jnp
fnstsw
movsx
shl
inc
fld
and
ror
xchg
xor
fdiv
or
ins
lahf
and
mov
push
push
mov
or
or
nop
fcmovnbe
fwait
mov
adc
sbb
pop
mov
adc
repnz
jp
sbb
lea
movs
fldpi
xor
mov
or
sbb
adc
add
sbb
push
retf
dec
sbb
xor
push
cmp
xsaveopt
pop
ins
test
mov
mov
cmp
or
and
pop
popa
cmps
xchg
out
jmp
and
cs
ins
mov
push
jg
xchg
int3
or
cmps
test
mov
dec
int
mov
jo
and
stos
push
pop
inc
js
test
lock
mov
nop
es
mov
inc
(bad)
mov
popa
mov
sbb
sahf
adc
push
ja
inc
mov
test
sbb
push
(bad)
pushf
add
call
dec
sbb
imul
mov
add
jo
fwait
mov
ror
je
push
cmp
test
repz
push
sti
jbe
xchg
les
test
pop
js
adc
daa
xor
push
jb
sub
or
loope
push
mov
add
jne
retf
pop
les
inc
std
cmp
stos
or
or
mov
dec
imul
dec
push
or
inc
cdq
lock
add
jle
sub
pop
test
test
sti
into
jne
mov
mov
mul
pop
test
in
sub
jl
mov
xchg
fisubr
stos
stos
jp
pop
pop
push
mov
jbe
cmp
push
test
ror
push
mov
push
push
pop
add
popa
gs
xor
cmp
ret
dec
or
sbb
fiadd
mov
pop
mov
retf
push
inc
xor
rol
jmp
retf
loop
rol
cmp
and
fwait
sti
std
dec
dec
pop
pop
and
mov
out
mov
fsub
iret
loopne
adc
iret
ds
dec
imul
outs
mov
add
cs
or
and
clc
sbb
sub
cmp
inc
dec
inc
(bad)
push
pop
addps
add
lock
sahf
jns
add
sar
and
mov
mov
or
cmp
pop
pop
clc
in
cmp
add
xor
daa
or
idiv
pop
or
push
js
sub
inc
aam
iret
inc
mov
dec
xor
cmp
pop
add
das
das
call
inc
loopne
dec
aam
lock
shl
sub
sub
in
lea
xor
adc
iret
push
ds
push
or
dec
dec
scas
and
aam
out
ret
xchg
and
inc
loope
test
fwait
or
pop
sub
mov
sbb
mov
and
lahf
or
cwde
pop
jb
xor
push
and
test
lods
daa
dec
fbld
sbb
test
arpl
(bad)
dec
cwde
ror
loopne
rcr
dec
xor
cmc
and
sbb
add
jmp
pop
push
push
jb
or
add
mov
cmp
push
daa
jo
sbb
cmc
hlt
cmp
sub
push
aas
mov
sbb
xor
mov
inc
ret
frstor
jge
lock
movs
addr16
das
cmp
test
arpl
arpl
daa
add
shl
sub
andps
cmp
lock
stos
pusha
out
into
(bad)
out
add
(bad)
test
icebp
es
mov
and
mov
sub
mov
and
jge
mov
dec
lods
shl
test
cld
pusha
mov
jo
or
xor
xor
inc
or
fisub
dec
add
retf
nop
retf
or
inc
lock
and
push
or
cs
or
sbb
push
xchg
dec
push
in
inc
push
sub
mov
push
jne
in
push
mov
push
pop
dec
sub
pop
mov
push
pop
adc
mov
or
lock
dec
retf
push
adc
mov
or
stc
add
jbe
(bad)
pop
jne
cmp
js
add
das
xor
es
mov
jle
inc
mov
fmul
stos
mov
adc
or
repz
nop
mov
fcom
xor
sti
scas
push
mov
xchg
cmp
ins
idiv
pop
inc
cs
or
ss
cmp
je
or
clc
mov
xor
mov
dec
add
mov
add
sbb
sbb
add
or
mov
imul
add
add
sbb
and
fcomp
fistp
jb
inc
adc
cdq
dec
enter
outs
push
and
das
push
inc
leave
into
mul
inc
(bad)
iret
test
add
adc
push
jbe
xchg
or
xor
pop
loop
xchg
xor
adc
adc
push
add
adc
cmp
xchg
xchg
xor
sub
rol
fadd
or
sub
rcr
or
fdiv
or
jle
xor
scas
cmp
ret
scas
dec
loopne
push
pop
sbb
ror
sub
dec
(bad)
adc
inc
les
sub
mov
popf
mov
inc
cmp
mov
aam
shl
sub
adc
push
pop
xchg
jecxz
adc
or
sbb
xchg
add
lods
(bad)
ja
push
xor
jmp
sub
add
mov
mov
aad
sbb
mov
cmps
push
hlt
mov
mov
inc
aam
das
fsubr
mov
fadd
inc
add
fs
cdq
popa
cmp
push
call
or
rcr
test
call
fld
push
push
mov
daa
test
ins
in
jns
and
dec
or
xchg
push
mov
or
pop
gs
cmp
adc
movs
and
and
mov
iret
ret
jmp
aad
and
scas
jmp
sbb
sub
adc
ja
add
adc
movs
push
push
adc
shl
or
retf
sbb
inc
sbb
pop
gs
or
mov
jmp
inc
shl
out
pop
xor
test
push
fadd
xor
xchg
mov
pop
add
xchg
test
mov
stos
cmp
jge
adc
cmp
push
inc
and
jb
xchg
ss
mov
or
mov
(bad)
cli
mov
enter
or
or
adc
cld
push
and
fstp
mov
or
jne
jb
sub
imul
lea
xchg
sub
cmp
inc
bound
cmc
mul
test
sahf
push
add
sub
dec
sbb
test
enter
js
and
bound
pushf
std
das
fdivr
sub
leave
and
add
or
sbb
mov
(bad)
and
mov
xchg
movs
mov
neg
sbb
mov
adc
and
adc
jg
ret
pop
hlt
es
bound
shl
add
xor
popf
gs
(bad)
or
dec
sub
pop
fidivr
daa
and
call
xor
push
jb
add
cwde
push
inc
aam
fisub
or
mov
fld
ja
setns
mov
or
xor
push
add
dec
loopne
push
clc
gs
sbb
rol
(bad)
fadd
mov
cmp
xchg
push
adc
fs
cld
add
inc
mov
enter
mov
dec
cmp
jge
mov
jl
movs
clc
cwde
xor
mov
mov
xor
out
and
cmp
push
shr
pusha
cmp
(bad)
sub
inc
push
adc
sahf
xchg
add
daa
and
ficomp
lock
push
ret
mov
xor
jo
out
shl
dec
nop
in
and
push
ret
in
sbb
js
jg
or
or
jmp
adc
or
shl
fimul
jle
cmp
jl
mov
fcmovb
jb
xchg
xchg
sbb
add
cwde
push
in
lock
or
add
(bad)
rcl
dec
dec
inc
dec
pop
ror
sub
jb
or
sbb
cmp
sar
in
in
icebp
push
or
jo
and
and
adc
es
mov
dec
adc
push
loopne
mov
mov
push
inc
cmc
mov
shl
push
jle
jmp
cmp
push
sbb
lods
add
jmp
lock
sahf
fwait
lods
inc
enter
cmp
neg
call
adc
lock
cli
ret
aaa
push
lods
sbb
pusha
add
inc
mov
aas
mov
push
push
ins
shr
lock
repnz
je
aad
or
inc
and
jbe
adc
add
bound
or
push
push
mov
add
sbb
jne
push
adc
bound
nop
cmp
pop
sbb
sbb
push
sub
cmp
sbb
enter
push
lock
push
push
scas
sbb
out
dec
out
sbb
add
loopne
jge
inc
or
pop
inc
mov
mov
push
add
sub
add
cmp
sbb
mov
ds
and
(bad)
fnstenv
outs
outs
mov
pop
or
pop
data16
in
add
imul
lds
aaa
inc
popa
je
inc
je
dec
add
add
cmp
xor
xor
sub
pop
sub
int
mov
sbb
push
mov
add
xchg
and
add
bound
add
sbb
inc
mov
mov
and
arpl
add
pop
cmp
push
mov
or
sbb
test
and
out
ds
and
ins
daa
push
adc
cmps
xchg
cmp
jne
nop
cwde
mov
test
cwde
push
xchg
sar
push
fprem
popa
sbb
hlt
adc
test
push
inc
dec
mov
mov
cmp
not
jmp
inc
mov
hlt
ja
in
and
mov
pop
mov
sub
add
aam
mov
lea
and
add
inc
test
setnp
jno
dec
sti
push
test
loop
push
pop
pop
dec
xor
gs
sub
and
stos
sub
ror
mov
std
es
pop
ret
push
add
adc
xchg
movs
jle
or
mov
and
fidivr
aam
jbe
add
cmp
push
sub
test
sub
movs
push
mov
pop
inc
mov
cmp
nop
xchg
adc
and
dec
fwait
xchg
mov
mov
cmp
mov
rcl
cmp
cmp
mov
push
mov
fsubr
or
mov
pop
pop
adc
mov
lock
pop
pop
pop
dec
sar
add
jl
cmp
enter
cs
test
jb
adc
test
mov
ss
mov
sbb
dec
je
dec
push
push
or
hlt
jmp
or
jmp
add
inc
out
add
xchg
or
pop
adc
fistp
dec
ja
imul
sbb
push
adc
pop
ret
ror
add
psllw
ret
stos
data16
test
leave
js
add
dec
mov
arpl
mov
dec
xor
gs
sbb
loopne
call
sbb
cmps
enter
loopne
cmc
int3
push
fidiv
outs
mov
or
rcr
fmul
xor
mov
jle
stos
test
or
jnp
and
adc
fiadd
into
or
mov
sub
xor
xor
pop
and
stc
(bad)
push
adc
pop
mov
mov
stos
dec
xchg
or
or
and
pusha
outs
add
sbb
repnz
jmp
inc
add
add
call
ror
or
jmp
add
ja
loop
clc
shr
add
or
xor
add
shr
or
mov
push
push
adc
fistp
shr
retf
add
mov
test
test
or
add
mov
mov
mov
cmp
pop
cmp
(bad)
and
add
jl
adc
movs
dec
in
sbb
cmp
or
dec
push
inc
call
adc
and
sbb
inc
fisttp
cmp
dec
sbb
adc
adc
sub
xor
inc
sub
call
xor
push
ror
cli
and
push
rol
or
add
mov
cmp
addr16
aam
cmps
and
xchg
or
or
test
sbb
gs
inc
stos
xor
push
loope
pusha
fmul
mov
fsubr
add
(bad)
cmps
std
sbb
jne
mov
sbb
dec
rol
or
cmps
or
xchg
or
push
pop
je
data16
sub
inc
data16
lea
outs
sbb
dec
or
lock
pop
add
(bad)
or
loop
leave
mov
sbb
push
inc
test
loope
aaa
push
sub
pop
dec
mov
lea
repnz
sub
ret
fadd
pop
or
cmc
mov
xchg
add
retf
pop
cmps
fs
sub
popa
mul
push
(bad)
stc
and
(bad)
or
adc
ret
mov
and
jno
or
adc
ins
mov
jo
fdivr
ja
pop
pop
xor
stos
sbb
pop
and
and
loope
pop
adc
test
xchg
repnz
ret
mov
sub
add
jbe
jmp
dec
xchg
xchg
dec
icebp
adc
add
sub
push
adc
sbb
mov
and
xor
or
js
or
js
jmp
clc
(bad)
sbb
mov
and
mov
scas
fadd
out
add
aam
sbb
add
pop
je
add
xor
adc
(bad)
add
movs
xor
cs
dec
cmp
mov
push
std
inc
or
and
sub
sub
push
add
mov
cmp
and
or
ds
mov
sbb
add
call
ss
imul
push
inc
adc
loope
rol
push
pop
and
add
leave
cmp
xor
(bad)
aad
(bad)
enter
cmp
in
mov
cmp
jle
inc
call
ja
shl
jp
stos
or
cmps
sbb
mov
fwait
inc
xor
fucomi
mov
xchg
adc
test
and
jl
xor
(bad)
ss
add
xor
inc
aam
push
or
xor
rcl
stc
push
test
or
jns
push
in
jmp
add
test
and
push
dec
test
ins
fwait
or
and
aaa
jne
cmps
sahf
and
push
cmp
sub
mov
aas
jmp
mov
adc
retf
mov
jnp
imul
inc
dec
add
addr16
jbe
rcl
ror
add
ret
or
and
sbb
fprem
out
rol
leave
add
or
(bad)
je
mov
iret
push
inc
cmps
add
adc
inc
sbb
xor
les
bound
enter
ror
xchg
add
movs
sti
lods
pop
xchg
adc
pushf
jo
sub
mov
retf
arpl
popa
sbb
ror
jo
or
scas
mov
push
dec
add
jg
jg
dec
jge
inc
inc
push
neg
neg
cmp
jnp
fcomp
sbb
inc
ss
shl
sbb
xchg
fwait
mov
xor
push
push
or
pop
adc
and
fnstenv
imul
push
jnp
adc
sbb
mov
add
or
jns
mov
dec
jne
pop
pop
pop
aam
shl
adc
xchg
test
lods
rcl
jmp
shr
sub
cmp
adc
shr
pop
push
idiv
and
maskmovq
cld
lock
je
pop
pusha
or
clc
ror
push
shr
cmp
addr16
dec
or
fidivr
pop
add
jae
adc
movs
into
xor
adc
inc
cli
xor
dec
push
es
pop
or
push
or
aad
mov
into
jbe
rcl
aam
aas
xor
scas
je
hlt
dec
and
adc
sar
sbb
dec
inc
push
outs
rol
inc
cmp
cmovae
or
jg
popa
add
arpl
ins
or
sbb
adc
jecxz
dec
pop
pop
and
test
data16
pop
add
push
jmp
cld
inc
ss
adc
sub
and
pop
adc
popa
xor
out
cdq
movs
cmp
cld
mov
enter
fcmove
jne
pop
cmp
inc
jmp
sub
add
rol
inc
push
inc
mov
mov
sbb
or
mov
or
sub
adc
dec
add
es
mov
je
jmp
sub
jl
out
push
cmp
ja
add
cmp
inc
xchg
(bad)
jns
ret
(bad)
cmp
jne
(bad)
sar
je
xor
adc
mov
inc
mov
pop
jl
pop
pop
(bad)
je
dec
push
adc
adc
adc
iret
and
jb
dec
adc
push
and
push
mov
add
imul
or
fdivr
aas
cs
fisttp
push
mov
jmp
or
cmc
push
aaa
and
sti
add
mov
mov
jl
xchg
ret
mov
mov
jb
add
sub
inc
rcr
les
out
xor
pop
mov
popf
test
sbb
ret
mov
lods
sti
test
add
test
mov
fdivr
inc
jb
dec
mov
push
and
adc
ror
adc
push
add
pushf
add
jmp
push
pusha
loop
mov
sub
push
imul
call
mov
imul
lea
sar
cs
mov
dec
into
movsx
xor
mov
neg
push
es
stos
mov
out
jge
cmp
mov
ret
inc
call
cwde
inc
xor
push
rcl
dec
sti
add
jmp
addr16
or
cwde
mov
push
sub
inc
fwait
and
jl
mov
or
dec
(bad)
jle
repnz
call
mov
mov
mov
mov
and
and
lea
out
daa
adc
and
call
mov
mov
add
(bad)
ja
cmps
cmc
mov
dec
ror
inc
test
lahf
push
push
fsubr
mov
xlat
or
inc
adc
loopne
lea
rol
xor
inc
mov
bound
scas
les
dec
or
xchg
pushf
fcom
dec
or
adc
into
movs
xor
sub
xor
cmp
lods
sar
repnz
sub
sub
xchg
mov
xor
pushf
push
mov
jl
lods
fwait
cmps
jge
inc
lods
and
ror
aas
jae
jle
cmp
(bad)
dec
popa
add
rol
rol
nop
popf
loope
pop
or
and
ror
lods
sti
sub
sbb
push
retf
rcr
(bad)
inc
mov
fadd
push
dec
mov
jle
cwde
shr
sar
shr
or
mov
dec
mov
pushf
(bad)
ret
jp
cmc
cmp
lock
dec
and
jnp
repnz
add
cli
adc
repnz
repnz
(bad)
rol
and
and
loopne
rol
es
push
fcom
or
cli
adc
and
fisubr
popa
push
mov
dec
dec
nop
loopne
mov
push
fidiv
fldenv
enter
pop
and
or
push
pop
retf
enter
sahf
out
inc
mov
mov
dec
sbb
add
push
mov
or
inc
shl
clc
out
icebp
push
dec
dec
jge
out
mov
jb
pop
sub
jnp
adc
dec
in
aam
daa
adc
jne
cli
or
rcr
fist
inc
shl
fdivr
aam
enter
int3
(bad)
jbe
dec
sub
movs
sub
sbb
shl
add
and
adc
dec
pusha
or
fmul
or
dec
rcl
mov
sbb
fcmovu
add
mov
or
inc
rcr
cmove
add
xchg
add
(bad)
idiv
and
xor
adc
mov
into
or
adc
inc
inc
mov
(bad)
lock
and
repnz
add
inc
js
pop
hlt
lock
or
inc
jne
jne
cdq
add
loopne
pop
rol
sbb
retf
mov
dec
cmc
out
pusha
add
sbb
sub
xchg
sbb
idiv
xchg
mov
inc
add
inc
mov
dec
inc
cmp
jle
inc
aaa
stos
jmp
sub
and
cdq
and
or
cmp
in
or
rcr
stos
call
sahf
mov
xchg
cli
fcom
xor
fiadd
(bad)
mov
ins
call
mov
imul
call
leave
outs
xor
mov
pusha
lea
push
js
dec
loope
mov
mov
add
call
add
fisub
lods
jbe
add
into
sbb
or
ja
enter
loop
mov
sbb
sti
je
inc
ss
jmp
or
lods
add
enter
outs
fwait
pop
push
sahf
mov
and
dec
int3
add
cmps
sub
test
call
add
add
xchg
add
into
or
mov
inc
jmp
jmp
pop
add
dec
inc
sub
jge
add
jmp
cmp
or
add
dec
cmp
repnz
(bad)
inc
dec
add
add
fadd
and
mov
(bad)
pop
and
sub
mov
jp
jne
loopne
rol
or
or
add
cmp
ja
dec
sub
add
add
add
push
mov
enter
mov
mov
fisubr
mov
or
push
fcom
test
outs
or
stc
retf
add
or
push
push
das
push
movs
adc
pop
or
or
imul
fdivr
pop
scas
ds
or
ret
sbb
adc
mov
inc
cld
mov
ret
movs
shl
or
pusha
inc
adc
jae
test
inc
pop
(bad)
mov
mov
iret
enter
xor
into
pusha
inc
std
rcr
and
pop
pop
in
cdq
lea
pop
cmpps
ret
dec
inc
prefetchw
sahf
inc
ret
or
push
lea
add
scas
rol
xor
jbe
jne
or
or
mov
and
movs
push
or
inc
(bad)
je
pop
mov
pop
rol
push
je
retf
mov
or
sub
rcr
add
stc
sahf
jnp
adc
jne
and
mov
lock
test
add
push
add
shl
ret
cmp
cli
cmp
ret
mov
jl
add
movs
ret
fldenv
sub
adc
nop
clc
mov
inc
es
nop
test
sbb
pusha
xor
push
scas
add
push
or
mov
mov
fadd
inc
es
and
out
or
in
clflush
jge
pop
mov
repnz
test
call
or
adc
pop
addr16
add
fiadd
(bad)
mov
sbb
xor
in
lock
inc
jg
into
into
and
mov
fisttp
sar
push
pop
arpl
push
outs
nop
pop
sahf
pop
mov
aam
mov
daa
mov
or
sbb
stos
push
retf
fcom
loope
pop
xor
push
adc
lock
hlt
add
leave
jge
sbb
cdq
push
pop
addr16
add
movs
movs
adc
(bad)
adc
outs
pop
test
mov
and
mov
inc
shl
or
cmp
pusha
sub
sbb
mov
push
outs
jb
retf
int3
popa
push
sub
xor
pop
sbb
add
jno
add
mov
lahf
xchg
xchg
rol
ret
mov
les
sbb
add
clc
cwde
pop
test
xchg
sbb
inc
and
ds
aaa
mov
mov
rcr
in
popa
dec
arpl
jge
xor
push
cli
add
je
cmp
cmp
cs
xor
jo
div
gs
cmp
add
dec
jo
sar
cmp
sbb
je
dec
fist
call
cmp
je
test
icebp
fmul
sub
icebp
mov
or
cmp
jbe
dec
or
sbb
mov
pushf
pop
out
mov
adc
mov
and
xor
push
or
aam
sbb
jle
out
add
push
les
and
gs
test
daa
push
add
push
mov
inc
pop
adc
loopne
cmp
js
add
and
push
push
fist
fist
xor
mov
pop
fnsave
pop
and
shr
xor
or
shr
add
adc
rcl
inc
popf
inc
popa
adc
test
rcl
add
and
dec
cmps
push
xor
sbb
out
jmp
jne
xchg
fidiv
dec
inc
push
aaa
sbb
dec
mov
scas
push
xlat
mov
ret
add
cmp
ret
pop
add
add
lea
fldcw
fsub
clc
xchg
pop
inc
aam
popf
jmp
mov
aad
sahf
mov
mov
mov
jp
not
add
stos
xchg
xchg
ret
jl
add
adc
out
or
push
loope
aaa
movs
ds
cmc
mov
imul
outs
adc
ret
dec
mov
push
dec
push
pop
xchg
test
sbb
pushf
inc
and
dec
je
cmp
pop
mov
(bad)
mov
fiadd
push
mov
pop
shl
sar
sbb
(bad)
mov
adc
add
push
clc
cli
neg
xchg
gs
test
sbb
enter
xor
dec
sbb
call
mov
sub
jg
stos
test
pop
call
mov
mov
pusha
sub
sub
jbe
jmp
sbb
gs
dec
mov
push
fiadd
test
mov
loopne
jmp
dec
fs
movs
fistp
add
cmp
in
(bad)
sub
push
js
push
icebp
das
retf
mov
mov
add
out
dec
sbb
mov
ins
push
xor
and
ja
and
push
mov
sub
(bad)
sub
add
pop
(bad)
and
mov
or
mov
es
dec
hlt
(bad)
fnstsw
push
mov
je
jg
inc
adc
aam
les
loopne
(bad)
jnp
cmc
clc
mov
pop
cmp
jbe
cld
and
push
push
push
inc
pop
adc
shr
shl
pop
movs
sbb
and
in
ror
(bad)
nop
pop
fs
mov
inc
cmp
repnz
push
and
nop
test
cmc
rcl
retf
lea
add
retf
or
push
add
(bad)
pop
sbb
ds
ins
adc
add
sbb
mov
xor
test
pop
xor
cwde
dec
cli
in
sub
pop
or
(bad)
sub
shr
rcl
push
dec
push
or
out
(bad)
jmp
push
push
ss
clc
addr16
jo
outs
repz
or
movs
sub
in
push
add
in
popa
enter
jmp
add
adc
add
mov
push
add
jg
rcl
clc
xor
sub
jo
dec
pop
inc
add
es
and
push
aaa
enter
inc
cwde
pop
adc
mov
sub
cmp
xchg
pop
rol
shl
fabs
sub
and
mov
cmps
aas
add
add
test
in
adc
inc
push
inc
or
jo
mov
cmp
sub
das
or
lods
test
dec
push
push
pushf
ret
sub
cmp
push
add
out
sar
ror
int3
jmp
sbb
(bad)
sbb
xchg
jg
mov
ins
cld
mov
addr16
or
pop
xchg
loopne
add
test
pop
xchg
les
cmps
clc
jo
adc
mov
sbb
inc
add
jmp
call
cld
mov
dec
outs
scas
cld
(bad)
retf
or
adc
add
dec
test
mov
sar
int
aaa
adc
into
inc
enter
mov
or
fstp
adc
mov
cmp
and
sbb
cmp
mov
push
scas
arpl
xchg
int
mov
fwait
mov
push
(bad)
push
repnz
push
inc
add
or
sub
mov
fisubr
clc
pop
add
mov
rcl
and
dec
stos
sar
add
and
(bad)
push
aam
enter
pop
cmc
pop
sub
add
add
mov
pop
xor
or
push
or
dec
or
clc
std
popa
and
std
data16
xor
inc
and
(bad)
pop
xor
push
or
xlat
or
sbb
adc
fisub
xor
hlt
and
mov
sub
mov
loope
pop
xchg
int3
arpl
out
sub
imul
(bad)
dec
sub
push
outs
mov
fsubrp
sub
dec
adc
xlat
call
inc
imul
add
xchg
jge
cmp
jle
aas
or
movs
jge
loope
cld
jp
inc
mov
sbb
cmp
ja
push
test
fnsave
add
jle
dec
repz
mov
daa
push
inc
scas
inc
mov
inc
cmp
or
jnp
or
test
jg
add
pop
lock
mov
aas
call
mov
pop
lods
xor
push
pop
pusha
adc
shl
inc
ret
call
xchg
push
into
lock
fadd
in
in
mov
popf
rcr
dec
mov
(bad)
xor
dec
add
push
cmp
sub
leave
inc
jo
fst
or
sub
jb
aad
xlat
inc
lea
loope
xor
xchg
retf
push
push
aaa
push
ret
sub
push
xor
mov
add
pop
fs
out
mov
test
or
dec
inc
imul
sub
fcom
inc
loopne
pop
cmp
cmp
sbb
mov
xor
push
and
mov
das
pusha
or
sbb
add
jg
xchg
shr
fdiv
stos
xor
or
imul
cmp
bound
inc
cmp
ja
loope
movd
push
fld
or
cmp
add
push
dec
fbstp
sbb
adc
inc
jns
add
jnp
(bad)
jmp
mul
in
add
and
or
mov
ret
inc
cmp
xor
xor
lahf
cmps
sar
inc
adc
and
and
inc
or
push
sbb
xor
aam
loop
or
std
data16
push
aas
sub
and
call
jl
mov
mov
or
cmp
ret
xchg
adc
or
sub
mov
pop
dec
xchg
jl
jle
inc
and
push
or
add
add
dec
popa
fcom
dec
adc
add
cmp
jle
push
cmp
dec
sbb
movs
cmps
fwait
add
sbb
call
push
push
add
mov
inc
jg
data16
or
popf
sub
add
ins
cmps
inc
add
pop
jl
in
mov
movs
inc
xchg
inc
call
jb
mov
leave
rcl
test
add
cmp
call
ret
loope
add
sbb
fs
mov
ret
(bad)
push
mov
sub
add
jmp
mov
sbb
into
outs
outs
xlat
shr
aaa
loope
fdiv
pusha
pop
push
gs
sahf
je
mov
test
adc
(bad)
jl
outs
jbe
lods
pop
sub
push
adc
aam
inc
jnp
fild
add
adc
cmp
jmp
cmp
jle
cmp
jg
mov
sub
add
xchg
jbe
data16
inc
dec
in
clc
xchg
jg
adc
pop
add
push
cmps
xor
cmps
and
cmp
pop
ds
mov
retf
adc
mov
das
inc
cmp
adc
mov
cmp
xchg
pop
or
push
mov
jp
xchg
ret
ror
jbe
addr16
scas
sub
mov
mov
mov
sti
cmp
adc
or
add
test
xor
inc
inc
push
mov
pusha
(bad)
loop
inc
cmp
jbe
aam
fnsave
repnz
loope
push
mov
or
jo
or
inc
outs
ins
sub
es
or
pop
je
(bad)
fwait
popf
and
inc
loopne
adc
and
inc
sub
jmp
push
sbb
mov
je
xchg
je
mov
(bad)
pop
nop
xchg
sbb
jmp
outs
sbb
sbb
inc
dec
aas
cli
test
cmp
xor
dec
mov
xchg
sbb
not
shl
mov
dec
push
rcl
sub
in
pop
adc
push
xchg
mov
iret
push
dec
je
dec
jne
push
mov
ja
fcom
jmp
add
mov
xor
inc
cli
add
add
cs
xchg
inc
je
push
sub
sub
jne
push
sub
sbb
push
mov
or
int
icebp
mov
mov
arpl
mov
xor
test
jb
jns
cli
push
in
stos
add
xchg
pop
loope
inc
sbb
jne
mov
ret
and
sbb
add
push
xchg
lods
inc
sbb
fsub
push
ss
push
lock
jb
fs
icebp
adc
add
lea
jae
popf
clc
push
lea
mov
inc
clc
ss
(bad)
inc
mov
add
outs
push
je
cmp
sub
add
and
add
xchg
pop
pop
fisttp
jnp
(bad)
clc
cli
dec
cmp
fcmovb
mov
retf
mov
scas
or
xor
pop
sbb
push
xchg
cmp
or
bound
push
fild
cmp
aad
add
pop
and
sbb
xor
xlat
add
adc
sbb
adc
sar
sahf
jecxz
add
xchg
push
ror
stc
dec
mov
std
(bad)
hlt
jne
adc
add
push
pop
dec
jmp
mov
sbb
adc
sub
or
pop
out
jle
jecxz
imul
les
push
xor
inc
call
cmp
jne
pop
enter
dec
sub
cmp
dec
push
js
xchg
push
xor
jne
jg
add
adc
adc
add
(bad)
fmul
scas
and
inc
das
test
(bad)
adc
into
add
xchg
dec
adc
jp
(bad)
pop
popa
inc
lock
or
(bad)
hlt
dec
adc
adc
ins
imul
out
or
fiadd
and
mov
and
dec
adc
test
jmp
or
cmp
fst
adc
enter
jg
jmp
adc
xchg
movs
mov
fadd
sub
and
movs
inc
daa
cli
and
mov
jmp
jb
ret
jb
or
and
mov
push
and
fisub
pushf
and
(bad)
xor
test
adc
test
pusha
push
jno
and
jns
scas
xchg
arpl
bound
add
mov
or
adc
or
inc
retf
les
outs
stc
pop
les
push
sub
ins
ins
and
mov
ret
mov
xchg
jns
xor
adc
inc
pop
mov
(bad)
mov
xlat
je
cmp
das
je
mov
and
mov
test
and
adc
or
cmp
xlat
test
add
jge
push
mov
push
sbb
je
cmp
cwde
jbe
(bad)
mov
cmp
jbe
clc
push
push
or
movs
in
push
add
or
cmp
pop
das
xor
outs
mov
push
cmp
xlat
repz
push
or
pop
xor
out
(bad)
lods
and
mov
pop
es
les
dec
(bad)
scas
xor
push
inc
pop
pop
sub
push
scas
mov
pusha
(bad)
int3
sub
mov
mov
xchg
lods
pushf
adc
popa
mov
gs
in
fst
hlt
bound
xor
sbb
gs
jne
adc
sub
enter
stc
add
push
movs
push
xchg
mov
nop
(bad)
jne
add
mov
add
add
and
mov
imul
fldz
mov
xor
pop
fiadd
adc
pusha
(bad)
adc
shl
ficom
mov
test
mov
and
jnp
test
pop
and
inc
xchg
lock
fldcw
mov
fild
rol
shl
xchg
fstp
mov
xor
in
xchg
rol
mov
or
sub
das
fcomp
out
inc
in
adc
adc
ret
fstp
add
cmps
pop
sbb
or
and
in
dec
xchg
inc
pop
or
shr
xchg
mov
xchg
nop
mov
inc
lea
mov
mov
jge
ror
and
push
push
nop
cmps
(bad)
xor
jg
or
dec
sub
mov
jmp
iret
and
sbb
mov
shl
aam
in
xchg
adc
xor
in
or
or
popa
pop
enter
jne
cs
add
jo
add
mov
mov
pushf
xchg
call
ror
in
lock
mov
inc
lock
enter
push
fmul
or
dec
fwait
pop
cld
cmp
xchg
fadd
test
lds
mov
imul
repnz
prefetch
adc
xchg
je
lock
sbb
dec
dec
shl
mov
add
ror
push
xchg
push
lods
jmp
cmps
fdiv
pop
ret
pop
ret
push
add
inc
lahf
fdiv
adc
jl
inc
jmp
jge
pop
jb
adc
inc
(bad)
xor
inc
dec
and
jge
dec
xchg
add
nop
sub
test
lahf
jl
xchg
push
inc
test
mov
mov
ror
and
mov
sar
in
inc
(bad)
in
inc
cdq
fsub
adc
push
add
push
adc
mov
adc
push
xchg
cmp
add
fwait
mov
cmp
xor
lods
jbe
call
jns
pop
sbb
cmp
mov
pusha
scas
dec
dec
sub
popa
xor
(bad)
mov
mov
inc
sub
mov
or
mov
pop
mov
mov
cmp
push
jns
js
adc
push
mov
cs
push
pusha
and
cmp
dec
adc
dec
or
xchg
mov
call
adc
mov
sbb
les
ja
test
outs
rcl
rol
adc
call
push
ret
jb
adc
cmc
push
fisttp
add
xor
cmp
xor
repnz
adc
and
push
xchg
dec
je
jl
ss
add
sbb
push
shl
jb
test
scas
sbb
mov
xor
or
sbb
mov
push
int3
int3
lea
cmc
ror
call
xchg
sbb
mov
sub
ror
fucomi
sti
gs
or
mov
lods
jmp
and
pop
mov
jns
(bad)
ss
(bad)
cmp
inc
outs
sub
xchg
adc
sbb
inc
test
and
imul
cs
fistp
popa
js
lods
add
jno
cmp
ret
push
or
shl
sbb
test
mov
push
test
adc
sbb
jnp
stc
rcr
inc
inc
or
xchg
(bad)
ins
fwait
xchg
adc
mov
int3
aam
and
addr16
adc
and
mov
fmul
popf
lock
(bad)
pusha
push
(bad)
test
fistp
xchg
popa
fisttp
pop
push
cmp
sbb
aam
inc
jb
fbld
sbb
add
sbb
jl
imul
cmps
dec
movs
dec
or
stc
cmc
sub
sbb
sbb
test
in
fcom
loopne
lea
xchg
mov
clc
cli
sti
jne
shl
shl
mov
imul
push
xor
and
push
lock
mov
test
sub
xor
loopne
(bad)
mov
push
xor
adc
add
repz
mov
pop
or
or
adc
xchg
xlat
loopne
lock
add
cmps
pop
add
xchg
fbstp
xchg
call
or
(bad)
dec
or
push
push
call
test
fist
and
rol
and
adc
push
fmul
and
sbb
stos
adc
inc
dec
es
fiadd
adc
gs
dec
fs
loopne
es
ret
xchg
lods
add
or
repz
(bad)
fnstsw
or
fcmovbe
push
push
push
xor
adc
pusha
xchg
in
arpl
mov
and
or
in
and
adc
in
pop
and
jge
or
lods
add
or
add
icebp
jmp
sub
sub
mov
mov
arpl
out
stos
and
aaa
add
(bad)
sbb
inc
test
inc
loopne
pop
and
mov
in
mov
mov
and
xor
cmp
jg
sbb
mov
mov
add
arpl
push
mov
daa
sub
sub
jo
pushf
addr16
enter
fsubr
nop
ret
icebp
enter
adc
aam
adc
loopne
outs
and
leave
mov
jg
out
repnz
and
jmp
and
push
sbb
jmp
jecxz
imul
xchg
pop
outs
sbb
std
dec
or
sub
dec
aam
loopne
xchg
mov
fmul
es
test
nop
inc
bnd
mov
movs
sti
dec
adc
push
pusha
xchg
aam
aam
enter
ror
fwait
fwait
dec
sub
test
les
or
inc
cmp
daa
and
popf
and
lods
daa
stc
adc
sbb
in
cmps
push
movs
lock
jmp
mov
lock
push
std
add
sti
dec
push
test
js
inc
inc
or
add
aam
mov
lock
mov
or
cmp
nop
inc
or
or
nop
dec
or
or
mov
sub
add
mov
xor
cmp
(bad)
in
push
add
rcr
adc
rcr
mov
jns
sbb
fs
or
or
in
or
or
ins
add
gs
mov
addr16
fsubr
mov
(bad)
shr
push
and
adc
mov
or
test
mov
jne
sub
sbb
cwde
jl
fld
sbb
push
and
add
adc
lea
sbb
or
mov
sub
ret
push
mov
add
and
int3
xchg
(bad)
aam
aad
xor
bound
xor
ja
imul
popa
jp
mov
popa
aam
in
or
loop
xor
fdivr
dec
call
cmp
ins
aam
and
xor
push
enter
add
adc
or
iret
mov
dec
pop
das
rcr
add
lahf
loopne
mov
ins
and
call
or
in
cmp
push
fsub
stc
fs
adc
shr
cdq
sub
sub
push
ins
ins
push
sub
loope
mov
push
add
or
ja
xlat
mov
push
xor
das
add
in
loopne
dec
sbb
pavgb
pop
push
ror
xor
cld
test
push
inc
mov
addr16
sub
push
dec
cmp
imul
adc
ss
or
ret
add
arpl
or
add
add
enter
and
adc
dec
jne
pusha
pop
adc
push
jb
adc
fstp
xchg
ja
sbb
cmp
fcom
(bad)
icebp
fdiv
jno
and
ret
or
call
inc
cmp
(bad)
mov
leave
loopne
adc
jns
mov
cmp
fsubr
adc
xor
movs
mov
cmps
mov
aaa
or
or
or
push
sub
adc
mov
test
cdq
jo
pusha
stos
ret
in
in
adc
dec
and
jne
or
stos
icebp
xchg
adc
xchg
sbb
enter
or
mov
enter
or
jns
jno
xor
cwde
nop
mov
das
dec
imul
cmp
ret
mov
test
loop
jl
retf
ja
mov
push
add
sbb
enter
jle
gs
mov
add
adc
mov
mov
es
xor
js
scas
pop
mov
pushf
stc
dec
push
jo
jb
cwde
and
lds
add
or
popa
push
mov
fs
pop
mov
out
stos
adc
mov
push
call
jo
or
and
mov
xchg
and
mov
dec
aaa
int3
pinsrw
imul
ficom
dec
pop
inc
int3
cmps
ficomp
pop
aam
mov
fmul
enter
pop
push
cs
mov
cmp
nop
cmp
sub
sbb
test
pop
sbb
dec
xor
add
aaa
cwde
jge
add
ss
xor
add
outs
vpmullw
shl
jnp
pop
lods
leave
or
add
stos
fadd
loopne
pop
inc
lea
mov
scas
cmp
stmxcsr
jns
add
cmp
les
or
pop
ss
int3
das
rsqrtps
cmp
sbb
aas
mov
in
cmp
inc
cmp
inc
or
or
icebp
adc
cmc
pop
leave
or
iret
mov
jbe
cmps
fwait
mov
xchg
pop
nop
dec
es
pushf
mov
test
cmp
cmovle
add
sti
mov
(bad)
xchg
sub
add
jl
xchg
iret
xchg
xor
sbb
mov
mov
aaa
inc
(bad)
ficom
imul
shr
lods
ins
pop
fnstenv
mov
push
fistp
in
xchg
and
movs
fdivr
enter
adc
inc
cmp
adc
sbb
mov
jno
outs
pop
in
jnp
or
inc
ds
call
and
xor
outs
xor
mov
xor
inc
pop
inc
stos
mov
lock
ret
push
fcom
jne
in
mov
jns
adc
inc
pop
inc
dec
xor
sbb
test
sbb
inc
enter
in
jne
mov
test
mov
xchg
jb
cmp
and
lea
and
push
jp
sub
test
xor
movs
setbe
daa
jmp
or
ss
jo
push
pop
popa
daa
cmp
call
xor
xor
xor
in
js
push
imul
cmp
mov
in
sbb
ins
test
pop
adc
mov
jb
xchg
inc
test
dec
add
dec
lods
in
dec
jns
fdiv
dec
rol
sar
call
adc
mov
movs
and
out
jo
hlt
jne
or
jnp
lock
out
test
inc
in
sbb
sbb
arpl
ror
pop
sub
lods
sar
jge
inc
es
add
or
push
ret
ret
movs
adc
rol
sbb
enter
ret
sub
leave
push
add
xor
pop
inc
mov
push
push
or
inc
in
mov
call
call
and
fld
pop
xchg
cmps
cmp
dec
push
cdq
add
and
inc
and
and
icebp
nop
sbb
inc
xchg
mov
fiadd
adc
fwait
int3
inc
aam
ret
push
adc
adc
ins
push
or
js
lods
shl
adc
dec
rcl
loopne
jno
dec
push
add
push
loope
dec
dec
dec
repz
push
jmp
cdq
ror
push
mov
push
add
mov
adc
loope
enter
aam
xchg
xchg
retf
ror
inc
cmp
add
sar
dec
adc
push
fsubr
sbb
rol
in
sub
int3
gs
mov
das
not
adc
(bad)
cmp
mov
sub
sub
aam
dec
rcr
xor
rol
dec
dec
mov
push
lock
pop
aam
in
dec
jg
test
in
shl
mov
sub
mov
div
mov
adc
mov
sub
sbb
stc
pop
fmul
dec
arpl
mov
xchg
pop
dec
cmps
push
jne
mov
int3
in
std
xor
je
adc
aad
sti
cmp
or
shl
adc
test
aam
sub
mov
xor
cmp
xchg
fiadd
call
pusha
mov
pop
adc
aas
mov
cmps
xchg
mov
dec
xchg
mov
fs
xchg
push
or
pop
jne
and
or
inc
add
push
sbb
jne
fistp
gs
mov
jbe
mov
mov
mov
inc
dec
mov
mov
cmp
sti
ret
push
mov
rcr
sbb
mov
and
mov
pushf
cwde
mov
test
and
mov
jo
pushf
mov
mov
mov
and
pop
inc
or
push
jmp
xchg
and
add
or
loope
push
dec
lods
xchg
shl
fst
inc
xor
push
adc
mov
cmp
push
mov
adc
add
xor
or
pop
push
loopne
fdiv
jecxz
mov
adc
or
rol
mov
xchg
push
add
sub
imul
or
inc
sub
cmps
pop
gs
mov
push
or
nop
sbb
es
je
mov
bound
enter
test
mov
xor
in
pop
add
sub
fmul
test
sub
xchg
shl
pop
add
nop
shr
aas
lds
and
int3
test
sub
push
or
(bad)
jo
jno
fsub
dec
sub
ins
push
rol
call
pop
loopne
push
iret
cmps
data16
pop
and
inc
mov
sbb
add
sub
and
push
sbb
in
sbb
fs
sbb
dec
or
push
sub
dec
or
cdq
cwde
and
pop
cdq
jbe
es
cdq
push
and
jnp
cs
xchg
or
add
sub
mov
gs
mov
imul
mov
jmp
xchg
dec
mov
call
ret
ins
cmp
pop
jmp
loop
adc
pop
std
aad
test
adc
jp
idiv
call
push
sahf
mov
ins
dec
cmp
fs
movs
mov
push
ins
push
sti
xchg
dec
cmp
pusha
adc
leave
and
and
xor
and
sbb
and
and
dec
inc
cmp
adc
xor
sub
xor
dec
fcom
pop
pop
aam
cli
push
jmp
cmc
es
cmps
dec
shl
xor
or
xor
mov
pop
xor
inc
inc
or
inc
(bad)
mov
adc
shr
dec
and
xchg
pop
call
or
ja
aam
cdq
sub
mov
pop
sbb
jp
dec
cmps
lods
pop
xlat
add
loopne
jl
pop
xor
(bad)
jne
xor
dec
adc
std
inc
adc
cmp
add
adc
jge
and
push
inc
icebp
mov
je
nop
mov
mov
and
push
mov
cdq
nop
outs
test
ins
dec
lock
pusha
gs
dec
mov
fidiv
rcr
mov
pop
fsub
in
int3
cmp
pop
enter
les
ror
jno
shl
aam
mov
and
popa
xchg
adc
mov
je
imul
inc
xchg
push
push
fs
xchg
push
stos
sbb
sar
ror
lds
inc
jae
push
shr
and
inc
adc
ja
lods
xchg
mov
(bad)
adc
iret
arpl
push
mov
inc
dec
mov
inc
ror
je
or
inc
xchg
gs
xor
out
pop
and
scas
loopne
enter
test
arpl
out
xor
and
inc
or
lods
and
pusha
add
test
xchg
push
pusha
sbb
add
add
leave
test
sbb
imul
nop
test
or
dec
test
(bad)
xor
mov
and
add
int3
jmp
inc
leave
pop
outs
in
add
or
cmpxchg
in
fcom
sbb
or
dec
repnz
jg
add
aam
sti
add
add
mov
arpl
jno
push
stos
sub
cwde
and
ror
jbe
sbb
clc
xor
test
xor
inc
sub
dec
(bad)
adc
js
sbb
mov
les
shr
mov
add
lea
xchg
test
sub
sbb
ss
inc
rol
inc
inc
addr16
sbb
mov
rol
in
das
inc
xchg
aam
retf
pop
ins
dec
mov
nop
mov
test
push
call
dec
jo
retf
cld
push
je
nop
cdq
ins
lock
push
dec
je
cmp
xchg
adc
je
ror
mov
and
ja
sbb
loopne
fsubr
jne
sbb
and
test
movs
sbb
lea
pop
add
idiv
push
lods
jg
mov
test
inc
mov
out
push
dec
mov
dec
arpl
retf
out
sub
(bad)
stos
sbb
test
pop
aam
aam
scas
lods
and
or
fiadd
or
pop
in
movs
ret
leave
mov
push
in
sbb
out
fild
mov
das
aam
jmp
movs
ror
mov
jg
mov
mov
pop
cmp
outs
int3
mov
pop
and
pusha
gs
dec
ret
mov
xor
xchg
movs
inc
int3
shl
and
lock
lods
mov
imul
push
dec
push
test
dec
outs
das
dec
adc
and
je
mov
xchg
jg
ret
cmp
sub
test
add
leave
mov
or
stos
inc
outs
adc
sub
mov
and
fcomp
mov
enter
aam
les
pop
adc
nop
sbb
and
xor
add
and
test
add
and
and
xor
or
movs
lods
dec
ss
inc
jecxz
adc
dec
pushf
ins
dec
es
lods
push
mov
cdq
fs
test
cdq
fs
dec
pop
je
fs
dec
mov
es
mov
inc
and
fs
aam
in
add
jg
jl
cmp
dec
jmp
lds
fld
in
shl
jns
xor
mov
fcom
xchg
dec
enter
mov
sub
mov
mov
cmp
pop
mov
out
loopne
mov
pop
add
(bad)
sbb
and
xor
enter
inc
test
mov
movs
lods
xchg
enter
int3
not
fsub
aam
dec
sub
cwde
js
fdiv
adc
in
pusha
mov
leave
mov
mov
popa
and
test
pushf
(bad)
std
and
(bad)
pop
aam
int3
xchg
xchg
xchg
xchg
les
xchg
movs
pushf
xchg
mov
test
adc
leave
and
pop
xchg
stos
mov
movs
adc
xor
in
sub
push
pop
mov
in
push
nop
cmp
enter
sub
inc
test
xchg
inc
lods
sub
inc
sbb
mov
push
adc
imul
inc
mov
inc
(bad)
aam
xchg
dec
adc
inc
jo
aaa
cmp
jb
cwde
sbb
add
xor
jne
pop
jo
xchg
sub
movs
call
mov
cs
xchg
rcr
add
fld
xchg
sbb
jns
xchg
mov
sub
lods
add
pop
sub
cmovs
pop
or
xchg
mov
and
rcr
xchg
or
sar
jns
sub
idiv
or
rcr
dec
adc
and
dec
xor
and
xchg
cmp
push
pusha
test
jecxz
push
int
mov
xchg
adc
sub
movs
jg
dec
imul
pop
sub
push
xchg
(bad)
pop
popa
shl
test
ins
inc
enter
scas
sub
nop
sub
adc
push
ins
dec
cmp
mov
or
add
push
das
in
xor
pop
std
pop
ror
pop
aam
lea
out
xchg
inc
cs
invd
push
aas
outs
cs
fadd
aam
sar
jl
xchg
mov
or
or
adc
popa
(bad)
rcr
xchg
mov
inc
dec
or
shl
or
jge
mov
imul
pop
fwait
mov
retf
xchg
sbb
or
sbb
xor
pushf
mov
fst
rcl
rcl
xchg
enter
les
mov
das
mov
xchg
test
jb
and
ss
enter
xchg
dec
pushf
xchg
nop
xor
lds
shl
ror
aas
adc
xor
enter
stos
loope
push
sub
add
pop
or
sbb
mov
sbb
or
mov
sbb
movs
adc
mov
and
jns
pop
in
add
cmp
rcl
repz
mov
jno
adc
xchg
mov
das
ins
mov
das
or
sbb
es
mov
movs
pop
cli
inc
(bad)
(bad)
mov
sub
sub
or
pop
mov
std
push
das
inc
sar
je
jo
lock
pop
repnz
add
sbb
adc
mov
mov
ins
cmps
dec
lea
mov
xor
in
sub
cld
sub
push
pop
in
lods
jbe
sub
movs
popf
cdq
inc
loop
add
repz
mov
jae
sti
loopne
ret
xchg
leave
(bad)
fist
cdq
in
and
and
sub
inc
sub
push
movs
add
jbe
les
aam
push
or
mov
sub
cld
icebp
inc
shl
clc
xor
push
push
in
or
lds
and
add
clc
icebp
add
inc
in
sbb
mov
add
push
mov
xchg
and
sbb
xchg
adc
and
and
adc
add
mov
rcl
das
scas
ret
xchg
dec
push
hlt
inc
ins
jle
sub
mov
sub
jg
cmp
mov
mov
pop
pop
mov
sub
in
aas
out
sub
jmp
mov
(bad)
sar
call
inc
sub
pop
sahf
and
or
xchg
jb
sub
test
cmps
adc
test
jno
and
or
adc
daa
dec
pop
outs
xchg
jbe
mov
sub
rcl
xor
lods
inc
sub
ins
inc
pop
sbb
add
or
fsubr
inc
mov
leave
add
and
fs
jecxz
sbb
bound
dec
jnp
fs
mov
call
cli
pop
inc
stos
add
xor
es
xor
aas
pushf
xchg
shr
or
add
xor
sbb
pop
adc
fst
dec
cmp
and
mov
pop
mov
ret
fsub
adc
sub
mov
cdq
adc
fiadd
jmp
sub
cmc
call
jns
xchg
sbb
push
gs
adc
cmps
adc
pop
sbb
js
and
pop
repnz
mov
jmp
or
lds
sub
ffreep
xor
std
xor
inc
fdiv
add
xor
inc
sbb
pop
xchg
push
pop
sub
jb
mov
jg
ins
mov
call
or
mov
(bad)
lods
cmp
outs
xchg
dec
cli
inc
adc
fidivr
add
and
leave
xchg
rcl
adc
in
shl
pop
cmps
dec
mov
lods
sbb
icebp
nop
cmp
push
je
cmp
imul
movs
sbb
mov
inc
mov
div
sub
sbb
push
or
xchg
cmp
jmp
add
xchg
dec
sahf
sbb
bnd
mov
and
and
sub
adc
sub
jmp
je
sbb
mov
repz
mov
ins
sub
das
rol
int
popa
mov
ins
test
inc
int
pop
mov
jnp
imul
sbb
sbb
enter
mov
inc
mov
xchg
ret
ds
jge
sbb
sbb
inc
add
dec
test
pop
inc
adc
fxch
and
xor
test
or
xor
cdq
jbe
(bad)
lods
adc
xchg
dec
mov
icebp
movs
imul
ret
adc
pop
cmp
movs
lahf
sbb
mov
or
bswap
mov
pop
movs
mov
adc
rol
in
int3
add
dec
jnp
sub
ret
push
imul
jp
push
je
push
jb
out
inc
or
xor
mov
in
push
inc
mov
mov
lock
mov
cld
inc
mov
enter
sti
out
push
iret
dec
push
jns
hlt
adc
and
or
mov
add
jecxz
sahf
or
sbb
leave
mov
and
or
dec
push
sar
cmp
cmp
push
sti
or
add
push
fcomp
jbe
jle
mov
and
repnz
imul
push
inc
lahf
push
dec
pop
rcr
inc
or
lahf
ror
jmp
loopne
mov
data16
and
gs
pushf
stc
inc
ret
xchg
ret
push
je
xchg
and
je
push
push
add
jno
lods
mov
xor
mov
out
cld
mov
or
hlt
sub
not
sub
dec
mov
and
cmc
movs
lea
cmp
in
addr16
jns
inc
jmp
xchg
lds
sete
jmp
or
pop
push
or
push
fild
mov
jl
pop
mov
adc
mov
jg
les
add
add
out
mov
test
xor
xor
sahf
out
test
push
popf
out
fisubr
inc
bound
xchg
jae
inc
push
rol
retf
cmp
add
inc
aas
sub
data16
mov
inc
test
mov
or
jnp
mov
add
pop
das
mov
(bad)
mov
adc
or
cmp
rcl
cmp
(bad)
push
mov
add
into
pop
adc
test
dec
out
cmp
or
test
out
sahf
sbb
aaa
xchg
sub
ja
div
xor
vmmcall
ds
scas
inc
sub
frstor
jmp
test
inc
mov
and
ins
outs
arpl
imul
sub
mov
sub
popa
arpl
jne
mov
jmp
popa
outs
je
add
das
add
push
ins
adc
push
sub
cs
inc
outs
jb
js
je
jg
mov
jae
add
or
outs
add
add
add
ja
sahf
ins
add
jne
les
inc
and
add
fstp
jb
dec
push
add
add
xor
aaa
or
mov
repnz
inc
mov
fdivr
push
add
aas
push
add
pop
pop
mov
and
cmp
mov
push
je
and
jae
push
idiv
adc
out
loopne
cmps
ins
push
push
or
jae
out
loopne
mov
retf
repz
popa
(bad)
fstp
xor
ins
jp
outs
in
fndisi(8087
or
mov
fsubrp
imul
addr16
and
outs
pop
rcr
jmp
jo
mov
in
loopne
dec
retf
stos
ins
sub
push
push
or
pop
imul
fnstsw
inc
push
data16
shl
out
mov
jp
sub
mov
sub
arpl
and
lahf
popa
push
cmp
jecxz
outs
inc
arpl
loopne
pop
jnp
jae
daa
dec
jbe
enter
fbstp
outs
(bad)
fidivr
(bad)
je
adc
sbb
jo
ficomp
jbe
mov
arpl
ins
mov
scas
xor
scas
js
xor
inc
mov
js
sbb
xor
fidivr
cs
add
das
(bad)
xor
sub
pop
or
pminub
jg
ds
(bad)
or
sub
outs
xchg
lahf
pop
pop
push
sbb
jg
dec
xor
adc
fbstp
adc
adc
push
xor
xor
lods
cmps
in
xchg
jb
jne
in
mov
xor
push
bnd
das
pop
jno
jbe
sbb
inc
inc
shr
jmp
push
jo
lahf
outs
aas
push
lods
rol
iret
arpl
(bad)
sbb
mov
inc
jb
(bad)
aaa
ins
jno
lahf
cs
imul
add
imul
shl
jnp
sbb
cmps
outs
pop
pop
loopne
sub
das
xchg
mov
daa
mov
pop
in
jno
add
pop
stos
imul
ins
retf
je
scas
cmp
fisub
adc
jae
sub
pop
pop
jecxz
ret
ja
push
sub
(bad)
lock
xor
sbb
xchg
add
mov
push
inc
sahf
imul
and
inc
inc
mov
xchg
cmps
jnp
das
sbb
sahf
cmps
stc
cmp
sbb
sbb
mov
cmp
out
sbb
test
sbb
dec
repz
pop
sahf
push
sbb
cmp
stc
mov
mov
clc
pop
js
jns
repz
mov
sbb
mov
jp
inc
sub
addr16
jp
mov
cmp
mov
dec
jb
fcmovne
add
xchg
(bad)
pop
mov
clc
pop
es
xchg
ja
imul
inc
shl
mov
push
fwait
cmp
dec
add
mov
push
xor
mov
pop
pop
add
and
add
in
repnz
das
das
and
pop
mov
jbe
jge
bound
dec
inc
and
add
loope
dec
jnp
pop
ret
je
dec
idiv
(bad)
repnz
aas
dec
inc
sbb
pusha
xor
ret
fdivr
ds
daa
outs
inc
jo
mov
and
mov
add
das
pop
pop
div
iret
jns
out
adc
(bad)
out
(bad)
and
push
outs
sti
push
arpl
pop
dec
xlat
mov
daa
push
and
imul
ret
sub
pop
dec
mov
shr
pop
test
push
mov
jg
dec
cmp
cmp
add
dec
and
jns
add
scas
imul
dec
push
inc
aas
test
ins
bound
dec
outs
jbe
dec
arpl
popa
or
jo
sub
addr16
clc
mov
xor
ins
xchg
outs
xchg
inc
jo
imul
popa
jb
jg
bound
inc
jae
fnstsw
popa
outs
adc
xchg
into
mov
outs
jns
jg
iret
fdivr
addr16
popa
je
jb
xor
(bad)
push
push
gs
sbb
into
fdecstp
jnp
outs
outs
and
jbe
pushf
jae
dec
inc
aas
add
jge
(bad)
imul
or
mov
fild
fild
push
push
mov
push
popa
ins
jne
inc
inc
mov
adc
push
scas
call
and
sub
sub
(bad)
(bad)
(bad)
jmp
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
test
mov
dec
dec
dec
dec
mov
sbb
rcr
pop
pop
pop
xchg
pusha
popa
sbb
jmp
fs
imul
jo
add
jbe
div
jp
jl
jle
dec
adc
call
cs
fs
pop
add
ret
mov
ror
jmp
retf
jno
icebp
(bad)
repz
inc
mov
clc
ret
movs
add
xor
outs
shr
outs
imul
xor
outs
das
cmp
sar
daa
push
add
jo
xor
popa
js
add
test
dec
pop
sbb
out
shl
rol
sub
je
lods
rcr
add
adc
add
cld
imul
add
and
push
pop
push
or
push
push
add
xor
jbe
and
add
pusha
push
mov
or
cmp
add
sbb
sahf
mov
xchg
push
xchg
test
add
or
into
in
fnstenv
enter
retf
jb
shr
push
jo
add
sub
push
jmp
ja
icebp
dec
or
jo
add
js
push
add
ret
nop
les
add
ror
add
pop
jb
pop
lea
mov
nop
xchg
xchg
fs
xchg
pop
xchg
mov
mov
movs
enter
or
shl
inc
scas
mov
rcr
out
add
mov
lods
push
lods
mov
xlat
push
repnz
sbb
pop
jns
sub
(bad)
pop
sbb
out
fisub
push
inc
sub
ss
mov
push
dec
dec
inc
dec
inc
push
div
retf
push
nop
fs
je
pop
loopne
mov
push
jae
dec
bound
je
outs
cmp
jge
xor
push
jbe
dec
out
je
mov
imul
daa
in
aas
push
xchg
pop
lea
mov
outs
js
push
dec
add
cs
and
ins
jo
imul
jo
and
and
daa
aaa
jle
loopne
ins
les
dec
imul
(bad)
fcmovbe
shl
ds
cmp
dec
fwait
xchg
fdiv
inc
jb
jns
daa
pop
and
ss
jns
mov
jmp
in
and
addr16
add
cmp
outs
jle
fwait
outs
rcr
jbe
mov
jo
or
outs
mov
outs
jb
and
xor
add
jbe
push
push
lahf
dec
xor
imul
push
jp
retf
out
cwde
add
pushw
pop
and
inc
imul
pusha
gs
push
daa
xchg
push
sar
and
popa
push
outs
mov
div
mov
push
jae
(bad)
mov
dec
or
cmp
add
hlt
clc
jo
sbb
outs
gs
inc
pusha
adc
mov
das
mov
xchg
inc
push
push
push
push
dec
neg
dec
push
jne
repnz
push
jbe
enter
fbstp
mov
dec
jge
mov
jle
dec
ret
pop
xor
imul
call
xor
jg
jae
and
xor
das
gs
sbb
pusha
rcl
outs
bound
sub
push
or
pop
das
je
scas
(bad)
idiv
daa
xchg
mov
mov
mov
cmp
out
mov
cmp
or
ds
and
sub
dec
imul
inc
jl
push
addr16
jle
cmps
or
sub
sub
add
repz
add
sub
pop
loope
neg
das
push
jb
xor
aaa
and
push
sbb
mov
mov
xchg
xchg
dec
pop
pop
jne
stos
addr16
push
lods
xor
sbb
sbb
jo
mov
push
gs
imul
or
frstor
dec
sbb
pop
or
sahf
inc
pop
sub
and
div
sub
iret
sti
outs
xchg
sub
pop
cs
add
cmp
iret
repz
and
adc
jnp
cmps
stc
cld
sub
call
cmp
(bad)
push
aam
int3
cmps
mov
mov
dec
jns
lods
test
outs
mov
neg
nop
nop
cs
push
sahf
mov
repz
repz
ins
push
iret
pusha
pop
pop
push
push
dec
cmp
repz
xor
and
jns
cmps
stc
cld
sub
enter
jns
out
dec
and
in
iret
repz
les
iret
repz
xor
sbb
jns
cmps
stc
lock
test
pop
sahf
ja
out
adc
sub
push
pushf
jo
jnp
jl
sub
push
and
adc
add
jno
test
add
add
xor
push
jb
dec
mov
sbb
inc
add
add
ret
push
and
add
ja
sub
sbb
xchg
push
imul
add
ins
or
and
push
add
mov
add
jnp
and
add
push
pop
or
das
cmp
mov
add
add
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
mov
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
(bad)
(bad)
(bad)
inc
ret
(bad)
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
std
(bad)
(bad)
jmp
jecxz
in
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
(bad)
jmp
push
test
and
add
jmp
push
sub
push
jno
popa
push
adc
sub
lods
call
gs
popa
data16
pop
shl
std
add
xor
add
fidiv
sub
add
push
sub
daa
dec
arpl
inc
ins
fs
jns
jecxz
sbb
mov
mov
les
iret
(bad)
pushf
jp
pushf
pcmpgtw
xor
push
inc
push
loopne
add
dec
push
push
dec
pop
test
mov
push
dec
inc
dec
cmovns
cld
mov
das
push
adc
sub
adc
sub
into
mov
rcl
mov
out
xor
jnp
inc
loop
mov
ds
in
xchg
popa
pop
adc
clc
retf
sbb
in
(bad)
xchg
jb
jge
arpl
cmp
jg
mov
in
fst
mov
and
and
mov
imul
retf
add
inc
mov
sar
or
push
test
sub
fwait
ss
sbb
mov
jns
ds
xor
inc
int3
dec
dec
xor
(bad)
(bad)
(bad)
cld
dec
popf
pxor
xor
retf
aaa
push
div
inc
sub
dec
xchg
cmp
cmps
das
xchg
(bad)
(bad)
mov
xor
sahf
icebp
mov
cld
or
loopne
addr16
(bad)
(bad)
cmp
inc
mov
xchg
push
pop
xchg
sub
pop
mov
stc
push
jmp
or
mov
jle
(bad)
call
(bad)
lods
dec
lock
xor
aas
mov
pop
or
and
pop
repnz
popa
(bad)
mov
and
es
mov
fcompp
add
test
ja
mov
push
nop
fwait
(bad)
push
mov
adc
push
loope
or
aad
pop
inc
fild
sub
dec
fsub
cmp
or
cmovg
sbb
or
dec
xchg
pop
xchg
nop
outs
loopne
pop
fwait
loope
pop
in
imul
cmp
sti
es
jae
push
jp
mov
fcomi
push
push
data16
scas
ret
je
sub
test
xchg
mov
and
adc
shr
aaa
pcmpeqw
outs
mov
loopne
push
mov
fild
daa
je
loopne
sbb
mov
movs
dec
add
sbb
jmp
xchg
mov
sahf
ror
ret
sbb
push
fnsave
add
jo
xor
sbb
mov
or
and
imul
ds
loope
jl
ins
jle
fs
popa
rcr
pop
cmps
mov
and
push
jle
or
jg
(bad)
out
dec
mov
adc
mov
fbstp
out
jno
sar
push
mov
clc
jg
mov
cmova
das
adc
cmp
popa
ret
xor
add
inc
inc
sub
jg
out
shr
sbb
xlat
cs
jge
and
mov
cmps
xlat
data16
fnstenv
adc
arpl
js
sub
shl
aas
cmps
call
ja
inc
add
cmp
pop
pop
mov
test
jne
cmpps
push
imul
sti
arpl
out
mov
lahf
es
es
sti
cmp
or
push
adc
push
cmp
and
lds
jge
add
ins
test
cmp
dec
dec
inc
xchg
gs
scas
sbb
ja
dec
jp
xchg
adc
ja
pop
ds
fsub
bound
mov
mov
imul
push
fmul
sti
jne
sbb
daa
sbb
call
pop
mov
aas
arpl
daa
pop
arpl
add
sbb
pop
gs
jne
out
mov
and
stc
retf
arpl
pop
mov
and
pop
stos
pop
ret
out
sbb
ins
inc
add
mov
fld
test
push
mov
dec
cmp
ja
cmp
xchg
retf
sub
inc
mov
sbb
out
daa
loope
fadd
xor
xlat
or
jo
add
push
cmp
cld
js
ret
mov
je
jb
adc
jl
push
add
sbb
arpl
mov
xor
push
arpl
clc
mov
pop
mov
dec
popa
adc
inc
(bad)
jnp
and
jo
out
or
xor
lock
je
jae
pop
(bad)
outs
out
out
nop
mov
adc
aaa
mov
test
shl
push
or
and
jecxz
stos
scas
mov
sub
sub
sbb
dec
aas
adc
outs
popa
push
inc
pop
daa
imul
add
dec
dec
sub
cmp
dec
fwait
push
mov
cmp
push
dec
(bad)
imul
inc
push
ret
inc
and
test
imul
sbb
and
push
add
js
mov
outs
push
(bad)
pop
out
jb
sub
or
(bad)
cmp
pop
sahf
fisub
daa
bound
jae
hlt
mov
mov
addr16
sti
and
ss
push
ins
cmp
out
bound
or
(bad)
(bad)
jge
outs
out
arpl
pop
pop
stos
and
outs
jmp
les
mov
lahf
ja
cmp
mov
shl
jb
pop
mov
push
es
int
jo
mov
out
inc
cmp
inc
mov
push
inc
scas
imul
mov
arpl
dec
ins
xchg
pop
push
jnp
inc
inc
dec
add
shl
outs
imul
sbb
ss
mov
or
mov
dec
sbb
pushf
retf
inc
pop
je
ret
iret
pop
dec
por
pop
icebp
outs
ins
aas
pop
mov
scas
fimul
addr16
outs
mov
dec
cmp
lods
pop
(bad)
adc
sahf
push
aas
pop
pop
push
aas
loopne
bound
test
mov
mov
mov
loopne
mov
jl
(bad)
loop
and
jl
imul
mov
and
addr16
(bad)
jnp
sbb
push
loopne
sub
ja
mov
adc
bnd
jo
or
mov
fsub
push
adc
sbb
sbb
jnp
(bad)
xor
imul
jmp
es
pop
icebp
into
adc
add
push
cmp
mov
outs
mov
cmps
outs
cs
jnp
push
jecxz
inc
add
loop
cmp
jno
(bad)
fild
fsub
ins
sub
retf
jl
out
pop
cmp
bound
or
mov
inc
inc
mov
lea
fidivr
or
stos
sub
iret
imul
dec
pop
adc
jl
lods
jno
repnz
sahf
jo
repz
adc
mov
cmp
es
addr16
push
imul
add
mov
aad
xlat
inc
outs
sbb
xchg
rol
fstp
dec
(bad)
xlat
aaa
sbb
jl
xor
(bad)
inc
test
pop
jno
xchg
out
inc
jns
jae
jae
sbb
jae
pop
add
dec
adc
mov
neg
mov
add
mov
sub
imul
pop
in
sar
pop
data16
aaa
push
ret
ins
rol
dec
push
aas
popa
pop
popa
sub
xchg
pop
push
mov
es
fcomp
jle
outs
das
addr16
mov
dec
call
sub
adc
inc
xchg
inc
jnp
dec
xor
push
cmp
push
sub
xor
sbb
inc
add
hlt
retf
ss
push
repz
push
push
mov
fimul
push
jl
neg
cs
ds
push
pop
push
push
lds
fstp
push
rol
adc
ja
out
imul
pop
push
iret
push
les
ds
pop
jmp
cmp
and
jbe
xor
pop
add
inc
lds
cmp
inc
pop
or
mov
push
sub
jl
(bad)
sahf
div
mov
sbb
push
leave
fucomp
fmulp
jnp
pop
or
adc
repz
adc
inc
and
pop
dec
daa
outs
mov
iret
pop
sbb
aaa
dec
and
scas
jne
xor
outs
jo
jns
mov
inc
inc
fisttp
imul
add
outs
rol
pop
ins
retf
jno
push
pusha
sbb
sti
aas
pop
popa
push
in
add
and
popa
outs
arpl
push
gs
ins
pusha
push
popa
jne
shl
jo
pop
and
dec
bound
out
sbb
sub
and
pop
shr
adc
ficom
das
push
dec
push
push
jg
jecxz
repz
fild
jne
jne
jns
fwait
(bad)
push
mov
xchg
scas
mov
repz
lock
push
or
mov
ds
fs
outs
jbe
lea
cmp
(bad)
bound
or
ds
gs
je
cmp
ret
xor
push
push
jo
jb
in
sbb
mov
and
jae
pop
cmp
sbb
and
and
(bad)
mov
jae
imul
pop
adc
or
icebp
cmp
in
fwait
test
(bad)
mov
outs
add
adc
cs
jbe
pusha
imul
sbb
sub
data16
aam
imul
or
shr
xchg
aas
push
mov
jne
mov
daa
pop
and
mov
mov
cmp
ja
inc
push
mov
dec
push
verw
rol
lods
lahf
js
(bad)
adc
xchg
scas
inc
cmp
adc
pop
add
pop
xlat
sbb
push
sub
cmp
inc
movs
ss
cmps
add
sbb
or
xchg
js
sub
adc
sahf
mov
sbb
dec
outs
ret
push
sbb
leave
idiv
xor
inc
dec
jp
ror
lea
push
jnp
pop
push
lock
ja
into
or
inc
pop
mov
ins
(bad)
pop
fdivrp
adc
data16
cmp
ins
into
pop
retf
mov
inc
retf
bound
add
pop
and
mov
fdiv
(bad)
xchg
inc
loop
call
sbb
and
jle
xor
jo
inc
or
imul
movs
add
aaa
sub
dec
mov
inc
(bad)
loopne
aam
jecxz
or
inc
cwde
cs
or
lods
push
push
adc
pop
(bad)
movs
(bad)
pop
arpl
push
call
dec
mov
mov
push
scas
sub
jne
imul
mov
ret
fs
and
xchg
mov
xor
and
outs
rcr
inc
scas
mov
adc
add
and
imul
and
test
cs
and
shr
add
and
push
movs
dec
and
push
cs
xor
imul
sbb
jp
out
jb
push
jp
arpl
ins
(bad)
das
mov
xor
arpl
pop
cli
add
push
scas
pop
jmp
jb
fs
push
jb
mov
or
inc
jbe
jae
sub
scas
into
sahf
mov
loop
inc
into
out
and
push
mov
or
jbe
push
sbb
mov
and
scas
mov
add
inc
fwait
mov
imul
in
add
fbld
xlat
adc
add
push
retf
inc
sbb
sub
mov
dec
(bad)
mov
pop
test
aas
mov
mov
fbstp
cmp
das
ret
ret
dec
adc
add
pop
or
out
cmp
inc
jg
push
(bad)
inc
cmp
inc
imul
data16
pop
xlat
lods
add
dec
or
mov
stos
push
and
jmp
pop
daa
stos
imul
sbb
mov
lahf
fwait
cmp
(bad)
jns
and
data16
mov
hlt
test
mul
xchg
arpl
bound
xor
scas
jecxz
pop
test
dec
fild
add
sbb
aam
ja
or
cmps
cmp
aam
sub
xchg
cmc
push
cs
jmp
(bad)
cmps
push
or
mov
push
jo
dec
cmps
pushf
sub
lea
js
fucomi
sbb
imul
outs
jae
sbb
sub
or
repz
pusha
push
cmps
out
mov
and
imul
inc
push
imul
aas
cmp
stos
add
inc
jae
in
cmp
out
pop
aaa
cmp
ror
or
cmp
jge
and
xchg
(bad)
pop
add
or
das
imul
arpl
shr
pop
imul
lds
js
xchg
cmp
shr
ret
fist
test
fld
or
loope
add
ret
and
es
xor
lahf
arpl
xchg
mov
repz
call
xchg
xlat
and
inc
sbb
cmp
pop
push
scas
jmp
cmp
fimul
push
xchg
test
dec
cmps
out
jo
dec
xor
mov
mov
jbe
mov
adc
fadd
popa
pop
cmp
inc
push
pop
xchg
push
or
jnp
jnp
jb
xlat
pop
call
inc
fstp
popa
cmp
ss
xor
add
out
jo
jp
addr16
xor
je
scas
loopne
setg
xor
push
push
addr16
push
sub
es
push
in
(bad)
cmp
out
inc
(bad)
outs
daa
dec
fcmovb
clc
push
pop
ja
arpl
ret
xor
ss
aad
pop
xlat
cmp
(bad)
icebp
sbb
imul
or
cwde
inc
(bad)
shl
push
cmps
adc
test
out
gs
mov
out
aad
sbb
scas
fwait
cs
mov
stos
add
adc
lds
add
jne
arpl
shl
je
outs
fs
aas
dec
clc
movs
test
ins
add
push
hlt
or
add
add
sti
(bad)
push
add
test
push
enter
scas
ins
push
outs
(bad)
das
outs
xor
(bad)
cs
inc
dec
ja
bound
scas
popa
adc
iret
shr
push
pop
dec
mov
stos
push
cmp
jo
sub
cmps
sbb
scas
push
pop
outs
out
lods
adc
setg
pop
and
pop
push
sahf
xor
dec
das
es
ins
jl
dec
call
clc
les
pop
popa
xchg
call
daa
xor
ror
adc
adc
xor
add
rol
loopne
loope
out
mov
push
push
add
inc
sbb
jecxz
add
jae
ret
stos
sub
ret
cs
ja
ror
bound
ret
and
arpl
push
mov
out
pop
sub
add
pop
add
je
adc
sub
cdq
aam
dec
cmp
outs
add
cmp
push
ret
and
jnp
cmp
jp
inc
das
jb
daa
sbb
push
fisubr
add
minps
ret
(bad)
aas
push
mov
mov
dec
mov
mov
sbb
xor
dec
push
mov
fcom
iret
jo
stos
scas
outs
push
mul
shl
dec
and
push
mov
jp
(bad)
fdiv
cli
pop
dec
add
bound
popa
xor
jmp
rcl
pop
scas
sub
and
inc
in
sub
ret
nop
out
add
mov
das
hlt
inc
adc
rcr
inc
add
or
push
(bad)
in
inc
or
mov
sbb
mov
push
mulps
aaa
adc
xchg
and
sbb
xor
cmps
sbb
sbb
int
mov
sbb
sbb
sbb
adc
jmp
pop
and
adc
and
out
fstp
out
and
inc
cs
push
sbb
outs
bound
out
mov
cmp
test
dec
sbb
mov
add
cmps
arpl
sbb
cs
xor
inc
fs
jo
adc
adc
push
out
jae
inc
sub
lods
push
pop
lahf
add
xor
cmps
cmc
test
mov
aam
inc
cmp
aas
dec
sub
xchg
arpl
mov
arpl
cmp
ror
or
and
mov
pop
(bad)
out
mov
rol
mov
mov
adc
sbb
mov
or
das
sbb
out
iret
loopne
sub
adc
iret
(bad)
adc
loop
cld
stos
inc
das
and
add
fistp
or
(bad)
stos
pop
(bad)
cmp
pop
(bad)
dec
sub
lods
xlat
and
xchg
das
aaa
stos
or
bound
inc
jbe
mov
push
bound
push
imul
mov
fiadd
adc
and
xor
pusha
sub
addr16
cmps
add
or
jnp
jge
mov
jmp
repz
jae
xor
fs
pop
jno
lods
xor
das
outs
aad
daa
icebp
sbb
inc
and
(bad)
pop
(bad)
add
ins
pop
sub
test
add
dec
pop
add
mov
dec
pop
sti
(bad)
push
push
xor
fld
aaa
bound
inc
ja
pop
pop
pop
or
and
(bad)
sti
mov
push
mov
sbb
and
jecxz
and
cmp
cdq
dec
pop
in
loop
push
leave
stos
in
cld
loope
jb
pop
and
in
mov
pusha
xchg
mov
fist
push
xor
mov
je
leave
push
repnz
fld
sub
fsubr
cmp
leave
in
xchg
inc
sub
lock
hlt
fst
xchg
dec
movs
push
scas
xchg
test
push
repnz
and
adc
cdq
dec
pop
rcl
push
leave
stos
in
enter
xchg
pop
and
stos
sub
xchg
dec
and
test
fcom
mov
cmp
ror
push
xor
xchg
push
clc
ror
xchg
inc
sbb
je
dec
loop
xor
out
pop
and
sub
xor
inc
aam
inc
sar
sbb
pop
addr16
ror
cmp
mov
sub
sbb
loope
movs
inc
ret
or
inc
sbb
xor
iret
dec
fdiv
(bad)
adc
xlat
inc
xor
sbb
adc
push
imul
push
dec
pop
jae
sub
sub
and
cmp
movs
imul
or
sub
push
dec
inc
xor
push
test
inc
aaa
mov
aas
mov
or
movs
and
xchg
sbb
mov
inc
xlat
push
call
or
pop
dec
not
add
ret
das
and
sbb
or
dec
aaa
sub
xor
addr16
xor
push
(bad)
xchg
mov
scas
or
arpl
jg
mov
lahf
jnp
arpl
xlat
pop
inc
sub
sbb
dec
pop
dec
push
pop
enter
push
mov
mov
push
sti
mov
sbb
mov
jmp
out
js
popa
les
fild
scas
mov
iret
aaa
outs
inc
mov
js
scas
mov
das
push
(bad)
fisubr
pop
(bad)
fmul
rcr
test
aas
pop
gs
add
(bad)
or
mov
lods
mov
mov
and
add
mov
bound
xor
or
adc
sbb
rcl
(bad)
push
loop
mov
jbe
pop
call
shr
jg
xchg
xchg
add
push
pop
xlat
pop
add
sbb
bound
movs
ins
pop
lea
ds
pop
sbb
push
pop
add
sub
pop
or
and
add
mov
pop
sbb
cs
xchg
jb
add
pop
inc
pop
or
or
mov
fisttp
cmp
inc
es
addr16
bound
adc
je
or
test
cmp
xor
sahf
gs
cdq
add
or
cmp
xor
mov
es
jae
and
sub
sub
rcl
inc
div
aaa
imul
adc
mov
push
jbe
cmp
jnp
xor
xor
daa
outs
xor
pusha
ins
and
mov
push
push
int3
add
in
ja
adc
ss
mov
bound
jge
or
pop
outs
dec
js
fs
enter
pop
daa
sbb
dec
mov
stos
invd
xor
mov
add
ret
add
and
xor
push
inc
popf
or
add
jae
stos
and
sbb
in
add
into
popa
push
in
mov
or
push
adc
push
inc
imul
mov
repz
div
in
and
push
dec
pop
mov
addr16
cdq
fild
sbb
cmps
dec
lods
xchg
pop
inc
mov
pop
mov
sub
lock
and
bound
pop
jb
xor
js
inc
(bad)
imul
mov
mov
das
sbb
mov
pop
mov
adc
mov
push
fisttp
jo
pop
inc
ja
addps
push
sub
shr
push
inc
pop
and
rdmsr
cs
add
rcl
xor
xchg
dec
(bad)
movlps
(bad)
das
or
pop
cmp
xchg
imul
popa
lods
adc
push
push
push
outs
out
push
add
mov
ficomp
ins
fiadd
add
sub
jo
xor
cmps
je
push
scas
ret
dec
rcl
xchg
inc
push
(bad)
inc
jecxz
dec
adc
xchg
push
add
xor
pop
lea
stos
retf
mov
adc
movs
mov
inc
imul
mul
ja
dec
es
outs
cmp
push
out
ret
push
push
push
cmp
scas
lods
xor
repnz
out
es
mov
aad
add
loopne
mov
inc
push
mov
inc
xchg
cmp
inc
jns
neg
pop
ret
fs
dec
sub
or
je
xor
pop
jecxz
pop
jnp
pop
sub
dec
shl
or
inc
or
sti
push
retf
inc
jle
js
xor
inc
cmp
xchg
scas
jbe
dec
or
fiadd
and
ss
push
sbb
dec
mov
bound
xor
mov
inc
add
inc
ffree
inc
cs
retf
jb
push
cmps
xchg
loop
push
cmps
xchg
ja
cli
jo
xor
outs
sbb
mov
mov
xor
js
mov
arpl
sub
arpl
fs
lock
inc
iret
syscall
or
fidivr
push
push
mov
into
sti
pop
js
inc
or
cmp
pop
imul
pop
pop
mov
push
es
lock
outs
pop
push
push
xor
dec
js
ret
div
das
inc
pop
dec
es
das
push
fisub
add
and
or
out
sti
pop
push
sysexit
mov
cs
dec
gs
sahf
push
outs
push
push
cli
push
push
ins
sub
out
mov
ins
mov
inc
cs
xor
mov
fimul
jp
push
push
fiadd
jg
mov
das
xor
das
xor
outs
pop
outs
dec
xor
js
push
into
xor
adc
test
outs
imul
or
sbb
lahf
xchg
inc
and
pop
add
lods
mov
call
add
aam
jmp
lock
fsubr
retf
fmul
jmp
ds
sub
and
push
lock
aas
add
xor
dec
jno
mov
mov
sbb
ja
jmp
xor
xchg
out
adc
add
sub
mov
imul
test
adc
je
(bad)
shr
mov
and
and
fs
das
or
pop
add
mov
iret
sbb
das
arpl
cmp
sbb
out
scas
xor
or
xchg
mov
lahf
push
inc
das
stos
pop
mov
jg
mov
add
out
call
lahf
inc
mov
loopne
or
jmp
xor
mov
cmp
mov
mov
jae
outs
mov
stos
fsubr
shl
mov
sbb
or
xlat
inc
ror
add
mov
sti
mov
push
dec
inc
pop
ins
outs
popa
fs
outs
aaa
mov
push
mov
or
adc
add
sbb
call
lods
or
in
cmps
addr16
push
xor
iret
lods
sub
mov
push
pop
stos
std
jl
mov
push
add
neg
sub
iret
addr16
in
fimul
sbb
jecxz
arpl
pop
lods
je
addr16
in
cwde
xchg
scas
repz
pop
pop
pop
push
outs
(bad)
mov
bound
xchg
pop
and
sbb
clc
cwde
xchg
inc
cmps
adc
faddp
push
jle
jl
push
xchg
out
cmp
add
fisubr
dec
ja
mov
int
pop
cmp
jne
jo
arpl
xor
das
rol
pop
pop
ja
xor
xor
mov
imul
sbb
inc
push
(bad)
pop
mov
xor
pop
repz
xchg
xchg
jae
and
jae
xor
cwde
mov
sub
dec
mov
pop
add
sbb
push
add
das
push
sub
test
sub
xor
ret
push
loope
push
lahf
mov
lahf
scas
xlat
xor
sub
inc
sub
iret
add
xchg
or
in
nop
aas
jecxz
mov
jbe
les
imul
lods
cwde
dec
daa
sti
pop
aad
shl
mov
fisubr
adc
dec
xor
mov
and
loope
ret
popa
fld
inc
or
xor
pusha
je
int
mov
int3
fs
xchg
or
mov
inc
push
and
push
mov
inc
inc
sub
(bad)
rcr
dec
loopne
push
sbb
jns
add
mov
aaa
iret
(bad)
mov
xchg
cmp
nop
(bad)
outs
dec
arpl
mov
daa
popa
ss
pusha
jbe
stos
(bad)
pop
movs
push
test
xlat
fmul
(bad)
das
repz
aam
mov
outs
pop
or
aaa
sub
je
int3
inc
push
fs
mov
das
jne
mov
mov
sub
daa
add
dec
xlat
jle
mov
mov
push
add
jmp
add
ss
inc
cmp
shr
add
loopne
test
imul
sbb
sub
xor
xchg
sbb
add
push
and
push
cld
outs
pop
out
mov
or
add
push
adc
push
sbb
mov
iret
xor
repz
mov
mov
repz
or
xchg
data16
ins
or
pop
or
int
or
adc
adc
sbb
and
fwait
int
sub
xor
inc
mov
mov
jnp
(bad)
mov
mov
popa
xchg
add
mov
push
shr
ret
sub
shl
data16
or
adc
ins
jo
stc
pop
add
xchg
rcl
ss
push
dec
str
int
mov
add
inc
stc
das
inc
nop
call
push
cmp
call
pop
outs
movs
push
sub
dec
dec
(bad)
add
inc
sqrtps
dec
mov
mov
(bad)
mov
push
and
mov
add
adc
xchg
mov
mov
lods
pop
dec
movs
enter
jmp
jb
push
push
mov
inc
push
ins
ss
adc
cli
mov
sub
das
mul
sub
mov
sbb
mov
mov
and
xor
pop
sbb
xor
mov
mov
fsub
sbb
ret
(bad)
jmp
dec
pop
dec
xchg
jecxz
dec
push
sbb
xchg
add
pop
jb
mov
pop
push
and
cmp
jle
scas
addr16
xchg
push
mov
inc
and
pusha
dec
cs
ins
pop
add
add
aaa
jbe
or
or
push
ins
xchg
mov
xchg
and
iret
leave
jae
sub
sbb
or
mov
fwait
in
pop
inc
xchg
out
pop
fdiv
pop
int3
xor
jns
sahf
mov
fwait
xchg
out
adc
mov
jl
add
inc
outs
rol
loop
(bad)
xor
or
lahf
mov
add
pop
inc
cmovs
lods
mov
xor
mov
fist
(bad)
je
lea
and
pop
pop
xor
inc
mov
sbb
jnp
cmp
inc
mov
pop
xor
inc
adc
rcr
inc
jecxz
add
xor
fisub
mov
cmp
and
jbe
pop
push
lock
movs
and
xlat
push
mov
add
bound
je
bound
imul
pop
jns
inc
aas
mov
add
push
and
push
add
retf
jge
(bad)
(bad)
das
aaa
push
fisttp
push
imul
jecxz
inc
popa
aam
lahf
pop
mov
out
and
inc
fwait
pop
dec
push
or
(bad)
inc
push
scas
mov
mov
loopne
je
aaa
or
jo
aaa
bswap
or
mov
push
xor
xor
nop
cmps
lea
das
inc
mov
push
(bad)
mov
xchg
mov
call
dec
or
rcl
(bad)
aaa
xor
pand
push
dec
and
mov
lahf
push
jl
jae
jb
pop
fistp
in
inc
dec
mov
adc
fdivr
(bad)
push
outs
xlat
push
sbb
aaa
(bad)
rcl
fbstp
or
inc
or
jbe
mov
mov
dec
mov
push
lahf
dec
push
adc
inc
aaa
add
or
cmps
push
and
cli
mov
mov
rcr
sti
xchg
jle
jnp
mov
dec
push
push
xor
mov
xor
rcl
and
(bad)
push
mov
push
xchg
stos
pop
push
movs
call
inc
shl
push
pop
xchg
aaa
sti
mov
xchg
pop
(bad)
mov
cmp
fnstenv
and
arpl
sub
mov
jbe
mov
add
sbb
pusha
cs
inc
xchg
push
lods
push
retf
test
rcl
pop
pop
dec
hlt
scas
pushf
test
mov
es
xchg
cmp
xchg
add
cmp
xchg
push
cs
dec
pop
push
and
mov
mov
and
ss
neg
push
ror
or
int
imul
repz
pop
stos
inc
pop
pop
xchg
fldenv
mov
push
cmc
dec
push
daa
data16
idiv
sub
aaa
outs
out
ds
repz
je
mov
adc
out
jns
xor
fiadd
pop
repnz
mov
mov
mov
call
mov
test
ds
jnp
test
xchg
fsubrp
adc
xlat
pop
xlat
sbb
xor
icebp
jns
cs
movs
pop
pop
out
cmp
push
mov
mov
sbb
outs
inc
dec
pop
repz
push
push
jns
es
cmp
aas
repnz
pop
ds
outs
nop
outs
int3
inc
mov
push
adc
xchg
dec
rcl
dec
push
ins
jl
out
test
cmps
stc
out
shl
and
mov
sahf
out
push
xor
cmps
enter
dec
sub
stc
cmp
repz
mov
jns
cmps
es
jno
(bad)
ss
out
and
push
mov
sahf
fprem1
adc
ds
repz
mov
cli
push
push
dec
or
dec
sbb
scas
dec
aam
aad
or
(bad)
adc
(bad)
(bad)
(bad)
and
(bad)
rcr
push
push
mov
xor
adc
mov
(bad)
pop
pop
mov
scas
in
bound
int
mov
leave
loop
and
push
pop
sub
lahf
add
idiv
pop
sub
adc
push
and
pop
sbb
stc
sar
enter
adc
repnz
inc
(bad)
(bad)
cmp
iret
ds
or
outs
pop
adc
add
stos
jo
mov
xchg
rcr
sbb
dec
std
(bad)
shl
push
cmp
xlat
adc
loopne
pop
push
and
iret
popf
lock
std
ja
outs
outs
jp
in
loop
xor
push
js
xor
stos
pop
inc
imul
cmp
xor
add
sbb
pop
mov
aad
lods
iret
imul
push
dec
add
adc
jmp
(bad)
aas
pop
push
dec
out
xor
push
push
outs
inc
jb
popa
je
or
sub
push
fstp
sub
pop
inc
mov
sti
inc
fisubr
out
pop
push
ficomp
cs
dec
xchg
ss
sti
es
mov
sbb
jmp
shl
adc
scas
pop
in
daa
adc
and
dec
not
push
mov
push
pop
addr16
jno
fcom
and
add
outs
xlat
(bad)
jecxz
jmp
jo
push
(bad)
jo
pop
add
(bad)
inc
jg
mov
dec
xor
inc
or
(bad)
daa
jecxz
outs
ins
jno
sbb
xchg
retf
in
jnp
mov
ficom
mov
test
mov
jb
adc
imul
mov
fwait
mul
sbb
cmova
sbb
loop
lahf
and
dec
cwde
pop
test
push
adc
or
add
xchg
xchg
sti
rcl
jae
xor
daa
add
pusha
mov
sysexit
les
push
dec
daa
and
xor
dec
daa
dec
mov
fs
jo
xor
daa
fist
push
outs
imul
je
mov
add
pop
sub
add
jo
jg
aaa
mov
jb
loopne
add
jecxz
mov
mov
xor
ret
shl
test
cwde
and
sbb
pop
pop
inc
dec
movs
or
push
add
mov
jmp
aaa
fld
das
das
sbb
scas
pop
sbb
scas
out
push
pop
mov
aad
ja
xchg
pop
addr16
arpl
mov
(bad)
jae
fs
sub
adc
es
adc
mov
psubq
imul
jo
cmp
mov
pop
das
xchg
es
out
pop
shl
add
retf
dec
add
jge
arpl
or
fild
cs
pop
dec
add
adc
mov
jne
cs
popw
mov
mov
outs
aaa
imul
pop
aaa
imul
mov
das
test
jg
ins
adc
shl
xchg
das
sub
ins
or
add
das
(bad)
push
fild
mov
xchg
mov
inc
dec
push
mov
inc
jle
pusha
push
pop
imul
pop
push
fsub
jecxz
out
inc
pop
push
fmulp
inc
xor
or
add
lahf
push
add
cmp
loope
test
aas
push
mov
rol
(bad)
repz
popa
fld
(bad)
das
cmovns
adc
sahf
pop
inc
add
inc
dec
fidiv
xchg
aas
adc
inc
stos
scas
mov
xlat
pop
or
pop
out
add
push
test
pop
outs
clc
mov
aas
add
sub
or
jp
div
inc
inc
push
inc
scas
sub
pop
cli
cmp
dec
pop
out
or
push
pop
pop
or
retf
fidiv
mov
xor
add
xchg
sbb
jbe
inc
aaa
ret
pop
outs
bound
dec
and
pop
mov
inc
and
fdiv
dec
cmp
(bad)
ret
outs
dec
stos
arpl
lock
cmps
push
push
jg
ret
mov
add
inc
aaa
jno
push
dec
pop
pop
inc
dec
es
inc
mov
je
and
fild
(bad)
or
out
xchg
nop
outs
or
das
adc
and
adc
jbe
dec
add
cmp
ins
je
aaa
shr
or
ds
jo
jae
inc
loope
mov
outs
xor
push
call
xor
dec
mov
pop
sub
fdivr
out
jns
je
jne
or
adc
sahf
dec
(bad)
fbld
ja
mov
mov
dec
jae
mov
sbb
mov
cmp
jp
inc
pop
mov
push
inc
xor
xor
imul
adc
iret
jbe
xor
data16
jmp
push
inc
fiadd
maskmovq
test
out
pop
stos
mov
mov
icebp
sub
cmp
dec
shl
push
mov
jg
pop
and
cs
pop
into
dec
inc
push
pop
stos
mov
jmp
mov
push
and
pop
aad
inc
inc
pop
daa
fwait
cwde
ss
add
lods
addr16
add
push
add
aam
jns
add
adc
adc
inc
mov
push
and
rol
ret
mov
ror
inc
adc
out
or
outs
or
aaa
inc
ins
loopne
jmp
mov
rol
inc
pop
push
or
dec
out
jb
pop
loope
cmp
ds
aaa
add
add
push
pop
jns
outs
(bad)
inc
dec
inc
dec
push
xchg
add
inc
loop
and
pop
aas
mov
out
sbb
sub
mov
and
push
dec
into
add
mov
neg
sets
mov
inc
aaa
jno
sti
shl
ret
(bad)
(bad)
(bad)
cmp
adc
pop
movs
cmp
aad
sbb
cwde
stos
pop
fadd
pop
adc
test
and
jge
push
je
mov
jb
mov
and
fwait
rol
fwait
in
inc
mov
bswap
mov
jmp
sub
fsubr
stc
jbe
push
ds
ins
(bad)
xor
(bad)
jg
mov
(bad)
(bad)
inc
inc
xchg
cmps
aad
arpl
push
sub
adc
or
cs
ins
sub
adc
or
(bad)
(bad)
jmp
or
cs
ret
sub
xchg
mov
data16
mov
call
call
and
cdq
(bad)
test
push
push
shl
ja
daa
mov
mov
mov
sbb
(bad)
(bad)
(bad)
cmp
fmul
retf
rep
cs
outs
arpl
test
add
mov
(bad)
jg
ins
mov
mul
jno
addr16
std
(bad)
(bad)
jmp
scas
addr16
cmp
dec
movs
jg
push
push
mov
fwait
stos
fld
pop
and
dec
ret
js
sbb
mov
mov
das
sbb
xor
add
pop
daa
daa
dec
in
xlat
daa
push
and
push
pop
inc
inc
inc
push
sar
fild
and
or
aas
js
ins
cwde
pop
fisubr
push
pop
adc
fsub
outs
ds
or
inc
pop
(bad)
ss
sub
pop
gs
inc
sbb
pop
aas
ds
push
pushw
push
mov
pop
push
sbb
xchg
push
js
loope
mov
lahf
daa
inc
add
sub
loop
lahf
jbe
inc
add
shr
sub
mov
pop
inc
xor
lahf
stos
fdivr
outs
cwde
push
ins
mov
cmps
xor
inc
adc
cmp
setg
neg
imul
push
and
call
sar
(bad)
ret
adc
fcom
mov
push
fisubr
xchg
mov
ret
add
pop
or
mov
sbb
daa
or
jno
jecxz
lahf
dec
pop
mov
push
xchg
push
aaa
test
push
rdmsr
pop
dec
rcr
adc
(bad)
xor
inc
les
push
adc
jb
lock
sub
out
push
imul
ror
jne
popa
loope
fwait
sub
out
and
bound
xor
add
es
sbb
sub
in
xchg
and
add
movs
outs
je
mov
popa
stos
mov
out
(bad)
std
xchg
sub
sub
sub
push
cmp
mov
js
ret
dec
inc
sar
xor
jo
movs
popa
mov
add
ins
outs
fs
mov
mov
gs
jo
jns
iret
inc
mov
adc
outs
ins
jne
adc
call
dec
fiadd
les
sub
das
cmp
and
js
je
bound
aaa
and
cmp
pop
jbe
pop
or
ins
mov
inc
inc
mov
lds
outs
jo
mov
lods
(bad)
cmc
push
sahf
dec
sub
jmp
mov
movsx
popf
neg
xchg
inc
or
inc
push
stc
std
fisttp
shr
cmc
inc
cmovo
out
imul
cmp
aas
(bad)
adc
in
nop
jo
maxps
loopne
cs
add
(bad)
mov
add
inc
smsw
and
dec
jne
pop
push
inc
enter
les
imul
sbb
cmp
out
ss
add
aas
add
shl
mul
(bad)
in
dec
xor
add
inc
push
push
push
jmp
jmp
ins
das
inc
add
fstp
add
lahf
ds
jnp
add
daa
(bad)
les
or
fsub
in
fsubr
jo
daa
outs
inc
xchg
outs
mov
out
lds
leave
daa
xchg
cmp
je
push
jo
mov
mov
push
and
dec
fsub
xor
scas
fisttp
inc
test
add
in
and
scas
mov
inc
pushf
leave
mov
outs
jle
pop
lods
pop
jb
mov
dec
or
sbb
or
jg
retf
rol
adc
in
jne
scas
push
push
pop
addr16
dec
ficom
nop
xchg
out
lahf
mov
cmp
pop
and
sti
cmp
call
inc
inc
mov
xchg
fmul
adc
and
xor
inc
retf
xchg
dec
iret
mov
inc
outs
xchg
js
jb
jae
or
movs
mov
int3
fsub
ror
int3
out
aad
ins
daa
sbb
(bad)
aas
out
fs
mov
daa
add
push
int3
jmp
mul
pusha
push
ins
push
mov
inc
add
push
xor
lods
(bad)
ds
test
jb
push
in
xor
daa
push
(bad)
hlt
mov
xor
(bad)
jb
repz
push
push
mov
(bad)
stos
aas
ja
aam
dec
enter
or
mov
aas
dec
pop
xor
movs
inc
hlt
nop
sub
lods
outs
scas
add
ja
fsub
inc
cs
into
(bad)
sub
push
daa
lock
stc
lods
addr16
inc
enter
jo
cmp
sbb
test
stos
mov
add
idiv
iret
(bad)
xor
push
in
neg
cmp
push
in
(bad)
mov
add
add
mov
in
dec
enter
iret
rcr
xchg
inc
jo
jo
mov
daa
scas
jns
iret
aam
or
adc
pop
jb
lock
daa
cld
and
aaa
and
push
xchg
xchg
pusha
adc
pushf
cld
jl
dec
scas
(bad)
(bad)
iret
lds
(bad)
aam
bound
in
es
out
or
pop
sbb
sub
shl
aas
inc
sahf
outs
ins
ja
rcr
nop
out
jl
test
in
add
lods
shr
mov
cmp
jb
xor
or
xor
ds
jb
pusha
dec
rol
mov
pusha
test
fidiv
mov
mov
enter
cld
or
or
mov
in
loopne
rcr
in
cmp
shl
fcom
fisubr
or
out
call
cmp
or
cmp
hlt
or
mov
cmps
cmp
aaa
and
dec
push
or
pop
cmps
pop
fisub
bnd
jg
mov
mov
mov
iret
test
loopne
enter
add
mov
jb
loopne
xor
test
inc
push
pop
cmps
inc
loopne
(bad)
push
enter
and
repnz
ror
pop
in
push
push
cmps
mov
pop
enter
in
pop
(bad)
cmps
jb
dec
enter
fsubr
ds
js
(bad)
inc
push
push
push
enter
xor
js
in
stc
(bad)
jg
mov
outs
dec
mov
dec
add
test
aam
pop
enter
enter
jae
clc
and
xor
and
sti
push
inc
xlat
lahf
clc
ja
dec
repz
lahf
and
je
pop
in
push
repnz
dec
lahf
je
enter
(bad)
aam
and
repnz
les
mov
test
fadd
and
pop
stos
cli
push
cmp
xorps
nop
addr16
jg
test
fcom
hlt
mov
test
nop
out
cs
out
int3
loopne
loopne
das
in
mov
movs
cmps
outs
inc
and
xor
test
cmps
aam
mov
fldenv
inc
fadd
fs
xchg
jl
xchg
mov
fst
jb
fmul
inc
mov
ds
sbb
sub
out
sub
jg
pop
enter
pop
ins
sbb
fsubr
pop
dec
repz
mov
aam
in
pop
stos
aas
push
cmps
mov
test
add
adc
sub
fiadd
cmps
jg
lods
cmp
daa
addr16
leave
js
dec
add
or
test
fiadd
mov
mov
lock
or
push
mov
lock
mov
sar
lahf
dec
iret
les
inc
jbe
dec
pushf
inc
jl
sbb
lods
rcr
inc
scas
(bad)
lea
cmps
pushf
push
xchg
out
lock
and
lock
inc
fst
fs
mov
push
enter
jg
outs
in
stc
dec
int3
xchg
daa
movs
lahf
pusha
ins
inc
jo
inc
ja
pop
enter
in
or
pop
adc
dec
enter
sar
fimul
sub
lahf
dec
inc
ja
sub
aaa
daa
sar
fisub
cs
push
lods
fdivrp
push
push
mov
cmps
jo
fadd
lahf
jo
test
fcomp
adc
cmp
push
fist
imul
dec
rol
lahf
int3
inc
or
or
rol
push
hlt
(bad)
mov
or
push
inc
jg
inc
call
lahf
(bad)
push
or
lahf
or
je
test
add
push
call
xor
or
inc
enter
inc
mov
cmp
lock
cmp
iret
mov
mov
dec
in
ins
daa
or
lahf
in
inc
and
pop
imul
sar
loopne
outs
push
jae
add
jmp
loopne
loop
and
lahf
dec
cdq
lods
lods
add
lahf
or
in
jo
out
cs
fs
mov
in
nop
mov
ror
mov
aaa
and
push
and
lahf
mov
ja
in
jb
iret
test
in
pop
enter
aam
fld
or
in
lahf
mov
add
sbb
cs
inc
lock
in
mov
push
xchg
inc
(bad)
stos
xchg
(bad)
outs
aas
mov
dec
sahf
imul
add
sahf
mov
rcr
or
das
adc
lahf
fmul
in
push
and
inc
jo
push
movs
das
fmul
outs
xchg
clc
push
fs
dec
sahf
jo
clc
outs
lock
aad
cs
xchg
mov
iret
add
nop
or
fld
clc
push
repnz
and
nop
or
out
outs
in
pushf
adc
daa
addr16
ins
or
add
sahf
pop
pushf
daa
lods
in
xchg
mov
xor
jmp
mov
scas
(bad)
xlat
pop
push
sbb
mov
push
sbb
push
sub
cmp
aas
call
les
inc
lods
pop
adc
ja
mov
mov
add
dec
in
repnz
cld
sub
fiadd
out
dec
dec
call
fwait
pop
push
pusha
daa
aas
mov
addr16
or
add
pop
out
repz
mov
ja
daa
sbb
dec
scas
fs
jmp
scas
in
cmp
in
scas
xor
dec
scas
in
and
aam
push
call
enter
add
push
pop
push
inc
xor
data16
icebp
cwde
neg
dec
clc
adc
stc
mov
push
xor
lock
out
int3
mov
push
js
out
push
jns
out
sahf
push
inc
out
ds
ja
out
push
js
or
jl
jl
test
push
add
adc
scas
fisub
jg
add
inc
inc
adc
dec
ds
inc
cld
push
mov
push
ret
inc
call
add
nop
cmp
sub
in
mov
xchg
mov
idiv
push
or
fdivr
inc
push
push
inc
mov
jmp
ja
ss
arpl
leave
adc
popa
xchg
dec
inc
dec
outs
scas
fs
pop
movs
sti
inc
sbb
adc
add
shr
ret
xchg
cmp
loopne
in
in
outs
add
ins
and
mov
daa
inc
(bad)
in
ret
sar
in
fild
push
xor
cmp
fild
jb
scas
test
(bad)
cmp
push
lock
adc
popa
and
push
rcr
out
int3
sbb
and
xchg
mov
cmp
add
and
jmp
dec
repnz
mov
scas
add
or
and
(bad)
xor
push
jno
pop
xor
out
or
repnz
out
out
outs
add
mov
fild
loop
rol
js
call
cwde
add
jns
sub
add
jnp
xlat
add
(bad)
adc
test
sub
leave
mov
je
neg
loopne
(bad)
pop
jg
lods
or
out
adc
mov
sub
dec
enter
cld
lock
pop
in
and
outs
(bad)
sbb
xchg
and
fisub
jl
adc
mov
fdivrp
and
push
xor
jbe
fcom
add
aam
shl
xchg
add
cmps
pop
dec
out
sbb
daa
add
xlat
callw
cmps
in
push
xchg
aaa
sbb
add
fisubr
div
ins
jnp
jmp
push
fsub
push
jbe
aaa
jmp
call
loopne
popa
popf
pop
mov
mov
sub
test
in
jg
push
jo
add
xor
cmovle
inc
repz
push
repz
jnp
ret
nop
pop
sbb
jecxz
push
ds
dec
add
(bad)
js
mov
cwde
mov
mov
(bad)
div
fisttp
hlt
adc
outs
push
mov
mov
push
outs
jg
inc
pop
cmp
pop
pusha
xchg
daa
cli
push
repnz
mov
mov
push
mov
cwde
cmc
fnstsw
test
dec
xor
call
push
mov
pop
hlt
mov
loope
or
or
ficom
and
or
dec
test
aad
xlat
or
pushf
xchg
xchg
ins
dec
shl
push
test
in
cmc
and
push
pop
cld
cmc
mov
test
dec
push
push
mov
mov
test
(bad)
div
xor
aaa
adc
div
call
cmp
dec
div
sub
outs
sbb
or
js
cmps
push
pushf
nop
adc
xor
fiadd
dec
mov
pusha
mov
jg
daa
cmps
mov
mov
clc
ja
loop
in
add
xor
jg
in
fiadd
int3
add
mov
jl
or
adc
bound
(bad)
clc
and
in
push
mov
das
outs
add
push
or
pop
mov
cmp
pop
dec
pop
cli
pop
adc
pop
stc
aaa
add
xchg
dec
and
mov
push
in
mov
lods
or
addr16
dec
xchg
add
add
daa
loopne
sub
daa
or
mov
inc
fcomip
sahf
xchg
test
movs
adc
clc
sti
cmp
mov
fld
ret
mov
or
aas
sub
push
test
xchg
sub
fdivr
sti
sbb
movs
mov
sti
push
sti
outs
fsub
inc
cs
fbld
rol
add
add
xchg
aaa
and
cld
xchg
mov
mov
pop
pusha
and
xor
(bad)
jl
out
lods
or
add
lahf
addr16
dec
loopne
or
out
les
jb
push
jb
add
pop
rcl
adc
mov
adc
push
mov
aas
arpl
or
idiv
fwait
sub
addr16
push
add
push
inc
mov
push
dec
mul
test
inc
sub
(bad)
jns
or
(bad)
jmp
(bad)
das
aaa
and
outs
dec
call
rcl
lock
or
inc
rcl
adc
mov
push
inc
jmp
ja
shr
clc
out
push
or
neg
mov
aam
clc
ja
pop
test
outs
(bad)
call
mov
mov
aad
shr
add
dec
jns
int
shl
jae
xchg
repz
out
in
mov
cmps
stc
cmp
pushf
ret
mov
out
sahf
jo
mov
add
cmp
xchg
mov
sahf
out
cmp
repz
call
mov
sahf
cmps
stc
cmp
lea
repz
sar
jbe
(bad)
es
loope
jns
out
nop
cmp
jmp
cmp
pop
sbb
jns
pop
mov
cmp
repz
ins
xchg
shl
sahf
cmps
stc
sub
cmp
out
or
jns
iret
rol
xchg
and
iret
repz
add
add
arpl
cmp
imul
push
popf
rcr
dec
repz
push
pop
movs
sahf
ja
ds
pushf
ficomp
iret
sar
inc
loop
lahf
push
out
out
lods
repnz
repz
jmp
mov
out
ds
ds
mov
mov
mov
cmp
sbb
mov
cmps
mov
mov
loopne
cmps
ds
jl
stc
sahf
mov
push
lahf
sbb
rcr
push
stos
mov
push
stos
jbe
cli
xor
mov
lahf
lods
adc
jle
(bad)
ds
jnp
jns
iret
(bad)
sbb
repz
dec
jmp
mov
mov
xchg
imul
mov
lahf
iret
sar
cmc
inc
mov
jmp
lahf
out
call
mov
iret
repz
mov
cmp
out
cmps
leave
pusha
mov
cmps
stc
add
mov
cmp
enter
cmps
stc
out
repz
mov
sahf
mov
push
xchg
mov
cmp
repz
cmp
jns
out
ret
cli
xor
dec
jo
into
add
push
out
jl
cmps
out
lds
jns
push
mov
popa
(bad)
push
enter
sahf
dec
sub
es
mov
fnstsw
retf
fiadd
(bad)
mov
sar
enter
xchg
mov
cmps
stc
cmp
push
iret
fwait
out
ss
jge
ja
push
mov
xor
pop
push
lods
cmp
out
xlat
cli
sub
stc
out
repz
ds
or
or
(bad)
cmp
mov
add
out
call
mov
fadd
fdiv
cwde
cmp
ja
push
lods
inc
fidiv
iret
sar
imul
mov
(bad)
ds
mov
or
test
test
daa
loopne
iret
imul
shl
xchg
call
iret
div
jmp
push
sub
mov
xor
push
div
call
cli
loope
movs
std
int
lods
mov
dec
add
xor
add
lahf
cmp
fnsave
int3
nop
inc
inc
aas
mov
(bad)
inc
cmp
repnz
popa
nop
scas
adc
lea
or
add
pop
aaa
int
mov
jge
inc
pop
mov
outs
pop
leave
or
add
adc
aas
pop
xchg
xor
das
fs
fsub
adc
pop
fild
das
stos
popf
push
(bad)
cmp
xchg
mov
sar
aas
pop
(bad)
cmp
into
mov
pop
and
mov
mov
or
out
aas
int3
adc
mov
sbb
push
(bad)
outs
adc
inc
mov
dec
sbb
inc
dec
pop
iret
mov
cmps
fmul
and
fwait
xor
and
inc
dec
pop
dec
jg
jb
cmp
dec
aas
in
xchg
outs
test
scas
xlat
ss
push
inc
pop
or
lods
adc
movq
mov
clc
add
daa
hlt
push
ret
jl
pop
cmp
lods
cmp
(bad)
adc
shl
ja
or
inc
push
push
pop
push
lahf
cmp
enter
inc
js
jns
xchg
xchg
pushf
movs
or
mov
fist
inc
ffreep
mov
pop
cmp
mov
sar
(bad)
hlt
jne
repnz
pcmpeqb
scas
or
les
dec
leave
sbb
(bad)
inc
inc
xchg
pop
inc
leave
or
jne
xchg
inc
shl
lahf
leave
out
loope
push
dec
xchg
or
mov
add
inc
lds
inc
pop
inc
or
push
or
jmp
xchg
leave
mov
dec
fldenv
add
in
xchg
outs
pop
iret
ja
pop
mov
(bad)
mov
xor
in
mov
ja
fild
outs
fbstp
mov
mov
cmp
in
pushf
lea
push
mov
js
xchg
mov
push
push
pop
and
cmp
retf
push
inc
(bad)
dec
mov
out
xchg
mov
fimul
cmp
aam
xchg
ror
xchg
xchg
add
pop
ja
pop
jb
mov
xlat
popf
popa
scas
xor
push
mov
cmps
sbb
and
das
mov
pushf
in
mov
jo
push
fisttp
mov
push
scas
mov
xor
add
repnz
sub
pop
ret
or
inc
mov
mov
jl
add
cmp
push
push
lea
fdivr
scas
in
leave
aam
xchg
lock
dec
cmps
popf
push
dec
mov
je
sar
pop
ja
xchg
pop
mov
iret
fcomp
out
add
pop
fisub
or
int3
adc
enter
cmps
xor
and
jb
call
sbb
push
addr16
pop
mov
push
daa
push
or
in
outs
mov
xchg
xchg
xchg
add
pop
rol
adc
pop
xlat
movs
ja
data16
aaa
dec
cmps
cmps
(bad)
test
(bad)
push
adc
lea
test
mov
shr
push
add
jne
popf
fld
jne
jge
mov
je
dec
dec
mov
shl
popf
xor
push
dec
dec
cs
jo
repz
enter
add
out
and
ds
in
jbe
in
cmovbe
divps
popw
outs
mov
sbb
pop
xchg
add
and
jmp
repz
push
fcmovnb
out
iret
repz
or
or
or
repnz
call
(bad)
mov
js
dec
push
add
jbe
scas
push
push
daa
pop
pop
addr16
ret
in
in
xor
daa
mov
stos
xchg
mov
add
iret
repz
add
add
xchg
or
and
test
imul
xchg
leave
inc
cmp
push
cmps
add
cmps
in
inc
scas
ja
dec
pop
or
cmp
pop
mov
(bad)
jb
das
jge
mov
and
nop
stos
nop
mov
fnsave
jb
ret
nop
rcl
mov
out
xchg
icebp
ss
or
sbb
sbb
cmp
aas
add
cmps
sub
pusha
sbb
leave
dec
lods
(bad)
daa
jo
(bad)
jne
das
mov
scas
test
inc
in
hlt
nop
in
inc
add
into
sbb
xchg
(bad)
out
in
xchg
xchg
icebp
xchg
cld
xchg
or
sbb
fcmovnb
add
(bad)
xor
add
bound
push
fist
test
jo
jno
pop
push
aas
mov
xchg
lock
jp
or
repnz
sbb
cmps
rol
scas
push
shl
in
mov
push
add
mov
xchg
inc
dec
leave
add
sbb
sbb
sbb
jns
bswap
aas
nop
inc
push
sbb
nop
and
inc
sbb
xchg
push
mov
and
not
ja
xchg
dec
enter
cmp
mov
aaa
sbb
xchg
mov
mov
sbb
push
daa
push
sbb
inc
jo
add
mov
sbb
jg
xchg
fild
pop
mov
xchg
sbb
xchg
js
mov
aam
aas
pop
cmps
cmp
dec
jb
sbb
pop
pop
xor
pop
xlat
mov
outs
into
out
inc
rcl
pop
mov
inc
sub
jb
sbb
leave
stos
push
mov
mov
push
fild
fs
push
je
jbe
das
and
inc
ucomiss
push
jmp
rcl
add
dec
call
dec
outs
pop
int
xchg
inc
lds
ja
addr16
pop
dec
shl
pop
(bad)
in
push
repnz
adc
paddw
mov
pop
adc
daa
lahf
add
mov
and
cmp
and
mov
sbb
popf
adc
push
add
iret
repz
add
ror
pop
in
sti
inc
or
pop
leave
mov
xchg
and
push
ret
mov
mov
sbb
movs
sub
and
pop
and
xlat
test
movs
in
es
and
ror
repnz
cmc
xchg
or
sbb
and
jg
cmp
push
inc
out
jb
add
fsubr
xchg
cwde
mov
int
push
out
clc
mov
adc
and
int
cwde
je
popa
aaa
mov
test
mov
mov
pop
rcl
and
push
call
xchg
pushf
pop
mov
scas
add
mov
fnstsw
out
ja
cmp
icebp
xchg
es
rcr
fbstp
and
out
push
sets
test
mov
mov
fistp
fs
pop
in
mov
mov
clc
(bad)
stc
fcmovbe
out
adc
push
pop
mov
cmp
adc
and
add
mov
pop
sbb
es
popf
push
popf
add
iret
mov
(bad)
cs
pop
cld
es
in
in
es
pushf
jbe
jecxz
jmp
scas
inc
daa
pop
jo
mov
cwde
cdq
push
daa
aas
mov
ret
retf
outs
ror
add
out
fucomi
add
hlt
in
pop
sahf
out
setle
or
daa
sahf
mov
inc
jg
adc
inc
retf
adc
and
xor
mov
inc
push
push
mov
ja
pop
ja
pop
daa
jbe
daa
or
mov
sbb
xlat
cmps
cdq
push
scas
movs
push
lahf
scas
sahf
call
pop
push
leave
aam
fild
sub
push
xlat
(bad)
mov
cmp
xor
add
inc
(bad)
xchg
adc
cmp
pop
mov
outs
js
out
mov
jns
fstp
lahf
sahf
lahf
sbb
push
pop
call
shl
(bad)
pminsw
vmwrite
sub
or
fstp
dec
outs
daa
iret
jnp
push
add
das
jo
fcmovne
repz
add
es
ja
xchg
cwde
mov
cmps
addr16
pop
int3
sbb
in
daa
repnz
or
rcr
xchg
and
pop
lods
(bad)
inc
push
xchg
leave
and
int
mov
scas
ja
cmc
mov
mov
fs
mov
into
push
mov
push
pop
leave
jae
pop
dec
ja
test
fwait
bt
out
iret
cmp
mov
add
and
daa
daa
fiadd
push
pop
sbb
jmp
dec
inc
cmovnp
add
in
fisubr
ja
mov
mov
cmps
push
into
sub
sub
jae
iret
repz
sti
pop
movs
pop
repz
or
ja
mov
ja
pop
repz
cmp
dec
add
add
cmp
leave
ins
js
or
cdq
or
scas
das
mov
in
dec
sahf
push
(bad)
adc
iret
enter
adc
pop
movs
adc
shr
es
cmp
xor
jmp
jmp
fbstp
pop
das
push
call
rsm
mov
jae
push
addr16
xchg
push
idiv
pop
push
cmps
(bad)
mov
push
add
and
xlat
fcomp
shr
setb
dec
cmps
xor
fnsave
ja
xor
ss
cmp
push
inc
jb
and
push
shl
inc
jb
sti
cld
push
cmps
mov
pop
and
daa
cs
add
add
xor
pop
xchg
xchg
cmps
loopne
test
mov
int
das
add
in
test
add
in
scas
mov
out
inc
scas
cld
xor
in
push
mov
call
les
or
xor
xor
jo
add
pavgb
call
lock
adc
mov
test
and
loope
cmp
cmp
mov
or
mov
push
mov
mov
out
in
in
add
fucom
in
pop
inc
mov
test
test
xchg
and
mov
das
(bad)
push
test
pop
je
out
mov
inc
mov
push
add
mov
jns
leave
xrelease
or
leave
leave
in
and
(bad)
idiv
adc
sete
sub
es
xchg
stos
xor
pop
stos
xchg
popf
out
add
bound
add
jnp
(bad)
jle
fsubr
popf
pop
cmps
scas
addr16
cmp
adc
in
cmp
rol
dec
sbb
push
push
mov
dec
mov
jo
outs
stos
dec
xor
mov
xor
repnz
pushf
stos
cmps
stos
ss
fimul
loop
jmp
repnz
jns
xchg
js
lods
call
in
and
mov
(bad)
out
adc
jo
adc
fld
mov
mov
dec
dec
sub
fist
popa
sub
dec
out
pop
imul
dec
inc
lods
femms
push
push
pop
out
jns
pop
or
das
or
jns
xchg
aaa
aas
or
or
dec
push
push
pop
adc
repz
adc
jg
sahf
xlat
ins
pop
unpckhps
xchg
vphaddbw
xchg
lods
xlat
sbb
int3
mov
lods
das
std
repnz
scas
das
fsub
sub
push
pop
cmp
int
ja
push
xchg
(bad)
scas
js
shl
scas
scas
in
movs
inc
jmp
cmp
cmp
scas
push
hlt
xchg
sbb
ss
das
pop
cmp
mov
imul
ja
cmp
xchg
pop
add
ja
or
scas
push
movzx
(bad)
dec
or
into
cmp
and
fimul
pop
repnz
cmovle
add
outs
jp
pop
cmp
push
aas
ret
jnp
in
rcl
jl
aas
pop
dec
or
pop
cmc
jo
aaa
or
push
adc
adc
pop
out
jo
adc
in
sbb
push
cmp
and
in
xchg
cmp
cmp
cmp
enter
xor
aas
push
add
xlat
outs
dec
push
add
daa
daa
iret
enter
add
pushf
cmp
test
mov
lea
retf
or
push
repnz
sub
xor
loope
xlat
iret
inc
push
pop
jb
add
add
dec
and
inc
call
pusha
cmp
inc
fimul
dec
mov
add
ins
jmp
repz
jp
add
(bad)
xchg
push
repz
push
mov
inc
pop
cmp
push
loopne
or
inc
xchg
call
mov
jns
out
push
add
add
add
jns
out
add
add
sahf
push
jns
mov
xchg
jp
out
or
ss
add
push
push
repz
std
mov
add
mov
fnstcw
mov
ds
xchg
sbb
sub
repnz
cmp
in
fs
mov
ficomp
iret
push
lds
into
mov
and
arpl
or
aam
leave
add
aas
mov
xor
in
pop
in
in
in
in
aad
lds
push
adc
lahf
add
addr16
inc
cmp
inc
leave
in
mov
xchg
cmp
(bad)
inc
xchg
add
leave
inc
mov
xchg
xchg
mov
in
mov
cmp
adc
lods
mov
pop
ss
ds
inc
shl
punpcklwd
ins
mov
inc
inc
lahf
jbe
cmp
cmps
scas
mov
ret
out
fisttp
add
pop
cmp
enter
test
or
mov
scas
js
push
mov
mov
or
or
stc
or
add
cs
and
gs
hlt
inc
and
ins
inc
mov
ins
scas
rol
scas
jl
pop
adc
sub
mov
mov
je
fild
ja
fucomi
sub
call
jns
out
xlat
pop
fbstp
outs
pop
out
maskmovq
or
inc
mov
sub
mov
inc
sbb
nop
cmp
frstor
add
push
mov
mov
lods
xchg
mov
nop
call
daa
adc
loopne
enter
dec
or
fcmovu
sbb
das
and
dec
je
test
push
addr16
pop
and
add
ror
sahf
cmp
dec
jecxz
mov
daa
mov
iret
in
hlt
mov
out
mov
xlat
mov
mov
mov
call
pop
jo
pop
hlt
loope
rcl
add
fld
dec
mov
cmps
push
(bad)
and
fstp
xor
xchg
iret
add
mov
mov
out
add
das
jg
cmp
xchg
fimul
add
sahf
dec
pop
cmp
cmps
or
adc
stc
nop
mov
fisub
bound
jp
xchg
inc
daa
mov
mov
mov
fstp
push
(bad)
rcr
psllq
movs
add
fmul
out
jns
iret
or
std
push
or
mov
adc
push
push
setle
js
sub
out
adc
ins
cmp
scas
mov
daa
iret
add
das
(bad)
jbe
leave
leave
jg
(bad)
seta
xor
imul
mov
mov
mov
por
in
add
adc
xchg
add
and
aaa
mov
sahf
aaa
xacquire
fs
add
iret
mov
jle
xchg
pop
nop
sub
or
test
leave
movs
mov
das
pop
xchg
xchg
mov
mov
dec
pop
mov
leave
and
push
push
mov
push
mov
xchg
setl
jbe
fild
jns
leave
repz
in
pop
jo
out
dec
cli
dec
or
sub
sbb
je
pusha
punpckhbw
sahf
ja
mov
or
push
add
dec
push
dec
cwde
xlat
or
adc
lods
adc
push
xchg
pop
(bad)
pop
push
aas
push
pop
leave
xor
shl
mov
shl
cmp
add
mov
cmps
push
sub
das
daa
daa
mov
je
jl
mov
mov
ins
xchg
outs
pop
sub
iret
fidivr
pop
ja
loop
jmp
cli
add
pop
add
shl
xor
rcr
repnz
scas
push
add
movs
sar
sar
iret
leave
in
in
mov
popf
pushf
pop
and
(bad)
fiadd
mov
dec
iret
leave
ins
in
ret
sbb
add
ins
xchg
pop
xchg
sub
push
xchg
dec
dec
dec
outs
daa
push
subps
sbb
das
pop
xchg
setg
iret
cmps
addr16
leave
leave
scas
mov
push
(bad)
leave
inc
repnz
or
jmp
mov
addr16
adc
xchg
mov
ret
mov
mov
punpcklbw
int3
pushf
pushf
fsubr
mov
fwait
add
pop
push
mov
fbld
out
je
jmp
fist
aas
sbb
ja
retf
les
sub
xchg
jns
xor
add
setnp
push
cmp
(bad)
rcr
popf
or
xlat
mov
les
push
inc
call
fmul
pop
aas
int3
paddq
xchg
mov
lds
cmp
and
lds
cmp
mov
leave
leave
leave
mov
xchg
pop
leave
aas
(bad)
dec
outs
mov
jecxz
out
xchg
lds
add
in
sub
(bad)
aas
shufps
push
popa
pushf
pusha
push
aaa
push
ror
imul
jae
in
push
fisttp
xchg
cmp
sbb
ja
scas
and
mov
clc
scas
fcmovne
in
iret
mov
loope
add
cld
movs
adc
pop
(bad)
pop
adc
iret
jae
mov
and
ins
xchg
inc
(bad)
pop
dec
outs
push
(bad)
stos
cwde
in
call
push
dec
ficomp
iret
xchg
(bad)
fsubr
sub
pop
popf
fild
es
mov
das
retf
repz
cs
rcr
ror
or
dec
and
push
pop
invd
push
push
cmp
movs
fstp
add
setb
add
fcom
fmul
fstp
enter
pop
(bad)
xchg
mov
mov
or
in
in
mov
or
leave
push
push
push
jle
leave
cmp
push
dec
leave
mov
imul
push
add
icebp
in
push
or
inc
mov
or
pop
or
daa
sbb
retf
xchg
cmp
pop
rol
fiadd
fwait
mov
push
jmp
out
push
iret
cli
push
or
das
or
pop
leave
out
dec
push
inc
shl
pop
sahf
pop
jmp
add
add
and
leave
cdq
retf
les
mov
mov
or
adc
leave
repz
add
(bad)
stos
daa
aaa
inc
out
sub
retf
jmp
mov
mov
out
pop
outs
in
jbe
ins
(bad)
addr16
setg
cmps
bt
mov
pop
sahf
and
leave
cmp
mov
mov
push
sbb
add
and
push
sahf
out
sahf
or
pop
or
pop
out
or
int3
dec
and
sbb
cwde
pop
mov
mov
xadd
push
fild
xchg
call
addr16
(bad)
repz
add
scas
test
fwait
pop
or
add
adc
(bad)
(bad)
and
sbb
pop
fbld
adc
int
dec
mov
pop
int
cwde
add
out
loopne
repnz
pop
xchg
add
jg
pop
xor
mov
dec
pop
je
sub
add
dec
repnz
int
int
out
inc
dec
jne
sbb
out
outs
mov
cmovo
dec
add
out
in
sahf
add
push
or
repz
or
leave
repz
cmp
repz
les
iret
adc
repz
ficom
in
lock
adc
iret
adc
jnp
push
sbb
daa
sbb
repz
xor
cmp
dec
mov
adc
adc
adc
dec
dec
dec
dec
adc
push
or
push
sub
pop
xor
lock
out
iret
iret
jnp
xchg
mov
add
xchg
inc
xor
je
aas
push
xchg
out
push
jns
daa
lods
pop
jl
daa
daa
pop
leave
popf
mov
jmp
push
test
ffree
fidiv
scas
adc
das
add
scas
xchg
outs
dec
sahf
or
pop
daa
or
push
mov
cmps
rcr
ja
scas
push
dec
and
jmp
ror
mov
ja
push
pusha
test
jmp
cmp
mov
pop
mov
cmps
pop
sar
cmp
enter
fsub
cmp
dec
mov
add
pop
xchg
iret
or
leave
retf
and
adc
sub
and
dec
push
and
xchg
jp
adc
(bad)
iret
loopne
repnz
iret
cmp
rcl
pop
call
pop
adc
sar
and
mov
dec
push
pop
dec
xchg
xchg
out
add
out
mov
xchg
push
mov
ja
jbe
cdq
mov
(bad)
ror
inc
dec
xor
xchg
repz
in
ror
push
add
add
jns
leave
sbb
push
add
mov
xor
pop
cmp
or
repz
sahf
or
push
or
or
popa
push
imul
dec
adc
repnz
mov
xchg
pushf
inc
ss
movs
xchg
push
popa
pop
pushf
fmul
mov
(bad)
repz
(bad)
shl
ja
loopne
cmp
inc
das
fdiv
inc
mov
add
rcr
xor
retf
test
movs
xlat
push
dec
inc
aam
push
retf
test
iret
add
aam
pop
les
outs
push
fild
jno
add
mov
or
(bad)
xlat
gs
outs
neg
jmp
sub
fs
iret
mov
dec
(bad)
iret
xlat
pandn
outs
pop
pushf
out
out
maskmovq
test
sbb
(bad)
and
and
push
mov
fcmovne
leave
inc
arpl
shld
fcomp
jmp
cmps
addr16
adc
or
sub
pop
jb
and
cwde
rcr
push
hlt
xchg
xlat
cmova
inc
push
(bad)
jg
fld
sub
or
xor
(bad)
imul
(bad)
push
mov
cmp
adc
jmp
mov
gs
mov
and
(bad)
outs
xchg
add
jmp
loope
add
or
psubsw
mov
cmova
push
pop
pop
xlat
iret
mov
inc
iret
popa
xlat
push
push
jno
jb
es
pop
add
mov
iret
leave
jns
or
movntq
out
cmp
adc
fsubr
xchg
sar
cmp
int3
paddq
mov
mov
jl
xchg
idiv
addr16
inc
jmp
enter
sub
js
xchg
dec
cld
dec
data16
jg
xor
mov
lahf
pxor
push
xchg
push
add
setae
in
idiv
enter
fst
or
sub
xor
add
addr16
push
ret
test
outs
fnstenv
leave
sub
push
mov
fwait
pop
movs
xchg
pop
push
enter
lar
push
pop
sub
fld
es
ud0
vmwrite
enter
ficom
mov
aaa
(bad)
(bad)
fidivr
or
mov
es
imul
mov
push
add
(bad)
imul
dec
mov
(bad)
ficomp
mov
fidiv
dec
xchg
mov
loope
(bad)
cmp
push
cmp
push
daa
adc
xchg
cmp
scas
or
or
(bad)
jnp
test
(bad)
push
ja
in
xchg
push
or
adc
pop
fcmovnu
add
nop
push
xchg
cmp
(bad)
dec
xorps
add
int3
test
sub
mov
popf
pop
pop
fisttp
fisub
imul
psubd
mov
and
xchg
in
fsub
xchg
mov
xchg
pop
int3
xchg
fnstsw
add
loop
xchg
nop
lods
daa
aaa
das
jg
xchg
xchg
(bad)
fcomip
fdivr
(bad)
pop
jb
outs
or
pop
push
add
iret
jae
jb
add
or
sbb
and
or
rcl
dec
adc
(bad)
mov
fisttp
mov
(bad)
pop
push
add
arpl
(bad)
mov
mov
je
cmp
mov
es
mov
sahf
or
xlat
or
leave
out
(bad)
(bad)
or
ins
add
inc
inc
xchg
ficomp
push
mov
push
xlat
fmulp
pop
cmp
add
das
xchg
jae
js
push
popf
pop
dec
pop
lods
jns
pop
stos
iret
mov
dec
andnps
or
pop
fsub
pop
push
pop
gs
out
sahf
out
adc
jge
xchg
pushf
je
test
adc
mov
pop
vpmullw
jns
in
sbb
nop
in
je
out
cmc
pop
std
mov
out
sbb
add
adc
mov
dec
and
sub
out
dec
xor
out
sahf
out
dec
sub
sub
pop
cs
ins
mov
mov
fild
xor
ins
pop
lds
mov
sub
pop
cdq
and
dec
(bad)
fsubr
jmp
into
adc
push
aas
push
repnz
inc
(bad)
(bad)
fistp
jp
dec
jo
loopne
sbb
cdq
(bad)
fnstsw
xchg
daa
pop
leave
test
andps
fmul
pop
xchg
add
leave
enter
outs
mov
cmps
fwait
mov
push
mov
(bad)
popf
scas
cmps
mov
mov
leave
repz
loopne
jmp
idiv
imul
add
or
cmp
iret
cmp
push
adc
adc
mov
adc
jns
iret
repz
test
push
pop
call
sbb
repz
sbb
sbb
out
repz
loope
cmp
ror
and
repz
daa
and
inc
and
dec
es
daa
push
sub
sub
repz
(bad)
sub
repz
cs
das
shl
fucomi
aas
repz
(bad)
addr16
jg
jecxz
adc
mov
jecxz
repz
inc
es
cmp
repz
push
and
and
cmp
rep
and
or
cmp
and
cmp
repz
scas
sbb
repz
iret
sbb
iret
repz
pop
in
lock
sti
sahf
cmps
stc
cmp
push
in
adc
cmp
repz
sbb
sub
scas
fwait
mov
inc
pop
push
jle
jb
jmp
pop
dec
cmovp
pop
pop
data16
sahf
ja
das
jle
mov
push
xchg
or
lahf
add
in
in
push
leave
bound
jno
outs
call
psadbw
in
pop
in
inc
pop
pop
daa
in
in
pop
sahf
out
sahf
aas
or
or
out
or
cmp
loopne
jle
in
setle
cmp
repz
repz
mov
adc
ficom
in
out
xchg
pop
iret
repz
sbb
repz
sbb
sbb
xor
cmp
cmp
and
push
in
jo
js
or
mov
cmps
push
sbb
repz
iret
repz
adc
in
iret
repz
in
adc
adc
ret
repz
movd
or
or
adc
sbb
and
cmp
repz
or
or
sbb
dec
inc
out
out
push
ds
dec
aaa
jns
cmovo
fsubr
out
push
je
jp
jmp
mov
mov
fistp
pmaxub
(bad)
pop
jo
mov
int
aad
or
mov
lahf
in
mov
in
push
pop
std
out
lea
pop
add
push
adc
sbb
iret
leave
leave
in
aaa
pop
aas
inc
push
sbb
adc
cmps
sbb
add
cwde
jbe
call
dec
ja
call
push
push
daa
mov
xchg
out
add
jecxz
add
jbe
psubq
jmp
jb
sbb
and
in
sahf
out
(bad)
adc
popf
cmp
push
push
adc
(bad)
jb
jb
jp
or
call
jb
ret
and
and
jmp
shl
jmp
jmp
jns
cmp
dec
sahf
pop
push
pop
packsswb
or
je
imul
jae
push
out
dec
sahf
push
or
daa
mov
fwait
mov
scas
daa
push
leave
addr16
adc
loope
jb
daa
out
jmp
iret
repz
adc
add
iret
leave
repz
xor
leave
repz
push
or
jns
out
pusha
push
imul
cmp
out
adc
dec
sahf
ja
push
adc
into
psubusw
out
pop
in
out
sbb
iret
in
pop
cmp
in
pop
adc
pop
sbb
xor
cmp
pushf
cmp
inc
and
and
and
leave
repz
xchg
lahf
rsm
sahf
xchg
xchg
xchg
mov
retf
(bad)
lds
in
imul
outs
movs
push
leave
xor
call
jne
addr16
iret
push
pop
sub
dec
push
add
dec
in
out
sahf
pop
push
add
out
sahf
pop
je
jle
xchg
call
mov
jae
jb
retf
(bad)
jns
daa
loop
jmp
cli
sbb
out
bndldx
dec
aaa
jns
or
adc
sbb
cmp
and
xchg
inc
pop
maxps
pushf
pushf
pushf
jno
or
out
mov
ins
lods
das
mov
or
jl
xchg
xchg
test
fidivr
push
std
or
push
jl
mov
and
fild
push
or
cmp
repnz
fwait
push
or
bound
mov
jp
outs
mov
in
test
lahf
fwait
mov
cmp
repz
adc
adc
fcmovne
aam
paddsb
lock
iret
repz
push
fistp
sbb
cmc
push
add
mov
cmp
push
nop
pop
and
lahf
in
in
cmp
icebp
mov
add
maskmovq
jae
movaps
sub
sub
jae
cmp
sub
cmp
repz
pop
xor
repz
repz
jge
mov
repz
fidiv
xchg
sahf
sahf
ss
aaa
xchg
cmps
repnz
cmp
cmp
mov
lahf
icebp
aas
jb
cmp
sahf
out
fidivr
aas
mov
stos
scas
mov
rol
iret
repz
inc
xlat
inc
in
outs
daa
iret
inc
icebp
(bad)
das
or
dec
adc
cmp
repz
adc
add
lock
(bad)
daa
je
dec
int
dec
adc
sar
js
movs
xchg
jge
jg
pop
repnz
fcom
mov
jle
mov
push
ja
cmp
push
mov
in
jns
or
or
fdivr
and
repnz
iret
repz
push
sbb
adc
inc
push
adc
adc
push
popa
ins
pop
sbb
fsubr
or
pop
call
mov
bswap
push
and
in
repnz
por
dec
ss
icebp
add
jg
or
cmp
inc
push
add
pop
xchg
cwde
fs
hlt
sbb
push
add
(bad)
popf
add
mov
pop
mov
pop
cmp
fcomp
cmc
hlt
jl
mov
pop
or
cmovle
cmc
cmp
mov
push
adc
adc
mov
adc
repz
pop
pop
sbb
out
fidivr
sbb
repnz
mov
sub
iret
jnp
xor
push
shl
jae
mov
fimul
jmp
cmp
daa
jmp
or
cs
and
(bad)
push
sub
fnstcw
fbstp
cwde
add
dec
jg
mov
sbb
div
popf
cmp
repz
add
mov
fidivr
lahf
out
(bad)
cs
repnz
adc
outs
jp
pop
test
neg
cmp
push
push
push
sahf
out
dec
pop
punpckhbw
or
je
out
jle
mov
or
xchg
push
lahf
stos
adc
cmp
repz
rcl
mov
sbb
out
pop
jecxz
out
sahf
adc
ds
pop
stc
and
and
sbb
sbb
mov
out
push
sbb
sbb
sahf
out
pop
aas
and
out
pop
and
in
sahf
out
and
mov
in
popf
(bad)
out
leave
scas
loopne
rcr
test
push
or
sbb
test
sub
enter
inc
mov
xor
out
sahf
out
add
push
add
cmp
xchg
pop
push
iret
repz
or
cmp
repz
mov
mov
repnz
ficom
xor
pop
mov
out
cmp
cli
push
adc
push
adc
and
cli
outs
cmp
inc
cs
dec
sahf
out
sbb
(bad)
cli
dec
and
js
cmps
cli
xchg
out
adc
push
add
ror
xlat
push
add
scas
(bad)
push
pop
out
bnd
out
test
sbb
sti
prefetch
sti
daa
iret
repz
adc
cmp
inc
cmovge
adc
daa
iret
repz
pop
ins
js
out
outs
pop
sbb
sbb
sbb
sbb
out
in
mov
and
iret
(bad)
and
and
repnz
out
cmp
cld
adc
sub
add
add
adc
leave
repz
pop
or
pop
in
cld
pop
test
repz
aaa
femms
fwait
(bad)
jae
cmp
adc
outs
daa
iret
adc
(bad)
call
in
femms
sbb
sbb
(bad)
cld
or
push
push
sbb
mov
pop
aaa
inc
std
repz
lahf
dec
std
fisttp
iret
repz
arpl
and
popf
cmp
(bad)
setp
cmovs
pop
pop
sub
xchg
and
xor
enter
dec
add
outs
mov
out
sbb
(bad)
xor
das
dec
pop
in
sbb
mov
enter
(bad)
jns
push
mov
mov
pop
syscall
call
mov
mov
repnz
syscall
or
fucomi
in
or
movntq
enter
adc
sub
iret
repz
adc
repnz
call
out
cmp
les
iret
fisubr
sbb
cmp
sahf
in
lock
dec
jne
jmp
push
das
popa
push
and
jns
xchg
ins
ja
or
cwde
daa
mov
xchg
scas
(bad)
pop
das
sub
dec
sahf
out
sub
movs
fwait
cmp
fidiv
in
pop
jnp
cmp
xor
lock
push
add
cmp
adc
sbb
ds
in
xchg
add
jmp
ins
por
jns
ja
cmp
in
repnz
cwde
inc
mov
sbb
jl
btc
popf
stos
das
mov
fsubr
iret
push
ror
fmul
jecxz
iret
leave
repz
stc
or
add
frstor
adc
das
sbb
daa
push
adc
cmp
xor
cmp
out
outs
daa
pusha
das
imul
push
pop
jbe
jns
sbb
pop
sahf
out
in
mov
repz
psubsb
repz
dec
inc
ds
add
cs
xchg
and
arpl
outs
jae
cmp
sub
test
stc
icebp
(bad)
sub
pop
(bad)
cs
iret
fwait
sbb
push
xor
xor
xor
outs
xor
mov
bsf
cmps
js
jb
fisttp
iret
push
in
jecxz
packsswb
cmp
pop
add
mov
push
add
iret
mov
push
pop
mov
daa
mov
or
mov
pextrw
das
smsw
add
in
add
add
xor
push
or
jl
rcr
xor
dec
jo
mov
outs
adc
push
cmps
(bad)
mov
iret
aaa
cmp
cmp
adc
dec
js
and
pusha
mov
add
pop
sbb
sub
mov
out
aaa
mov
add
pop
in
push
rcl
fs
push
daa
xchg
ss
add
add
aas
inc
push
or
les
pop
jmp
outs
pop
cmp
dec
aaa
test
add
xlat
xacquire
add
push
rol
push
push
mov
xchg
and
push
pop
or
in
in
or
or
or
outs
mov
scas
or
daa
dec
outs
ja
push
adc
and
pop
inc
inc
push
addr16
das
mov
in
jbe
xorps
ins
out
sbb
not
fild
pop
and
iret
add
add
cmp
mov
fsubr
cmp
sbb
and
dec
sbb
add
or
sbb
pusha
inc
adc
add
lods
and
add
mov
inc
and
adc
adc
stos
cmp
pop
test
lds
adc
inc
xchg
or
lods
pusha
cmp
cmps
fisttp
mov
stc
sbb
mov
sbb
cmovo
add
mov
sbb
in
mov
mov
push
add
not
add
fidiv
rcr
fsubp
stc
jb
xchg
mov
xor
sahf
addr16
out
pushf
and
xchg
nop
jns
out
mov
jns
out
pusha
push
dec
inc
sahf
out
sahf
cmp
xor
sub
jns
out
and
sbb
adc
xor
out
or
and
in
and
repz
push
aam
shl
mov
movs
repz
repz
push
fs
pop
push
cmp
jns
dec
mov
cmp
sbb
out
fdivrp
clc
and
aam
mov
mov
mov
cmp
jns
js
jo
pusha
ja
cmp
push
cmp
and
push
iret
repz
or
and
fadd
mov
jnp
mov
pushf
push
je
pusha
or
adc
icebp
or
add
adc
imul
sbb
add
mov
pushf
lock
js
clc
mul
mov
dec
hlt
xor
cmp
cdq
pop
aas
sbb
es
push
test
ins
add
or
clc
pop
and
cwde
xchg
xor
addr16
outs
lock
call
push
mov
mov
jg
mov
cmp
mov
inc
dec
inc
sgdtd
push
adc
mov
sbb
dec
lock
mov
or
and
sti
add
add
fadd
xor
ins
push
ins
jb
test
inc
outs
(bad)
and
test
iret
xchg
sub
mov
cs
cmps
fiadd
inc
stc
pop
jg
jl
add
neg
stc
pop
out
ins
sbb
add
out
mov
adc
xchg
es
iret
cmp
xor
ss
repz
jle
cmp
sahf
out
push
and
sbb
push
adc
ds
and
iret
jnp
push
dec
push
fcom
push
aam
iret
repz
ror
or
jnp
repz
pop
inc
sbb
fcomp
jns
idiv
adc
xor
sub
push
sahf
out
and
push
and
iret
repz
adc
and
add
clc
aaa
inc
int
xchg
int3
out
clc
shr
cmp
pop
imul
daa
xor
pop
mov
xchg
cld
sub
inc
xor
lea
add
loopne
rcr
fist
cmp
iret
repz
pop
js
mov
repz
out
cmp
dec
ins
add
jns
out
push
pop
ja
mov
loopne
iret
loopne
jae
das
push
dec
ins
push
xor
lods
dec
pop
daa
jns
(bad)
pop
mov
cli
or
pop
repnz
or
ret
lar
repnz
adc
pop
and
sbb
jmp
ret
inc
and
sahf
mov
sub
inc
rcr
and
sbb
cmp
(bad)
inc
xchg
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
dec
(bad)
(bad)
fistp
js
inc
outs
(bad)
loopne
jmp
xchg
test
mov
cmp
inc
mov
fisttp
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
(bad)
(bad)
inc
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
(bad)
xchg
push
cmps
scas
mov
or
(bad)
(bad)
(bad)
inc
dec
dec
pop
inc
in
xchg
cmp
xor
dec
cmps
in
cmp
sahf
xchg
pop
(bad)
inc
call
lock
mov
popa
sar
mov
sbb
(bad)
xchg
clc
repz
aam
jmp
mov
sub
fwait
xchg
and
out
aas
xor
xor
int
add
aas
jno
or
mov
(bad)
(bad)
clc
aas
pop
fs
dec
lea
aas
ret
shr
mov
icebp
aas
ror
and
inc
lds
mov
ins
scas
add
aas
xor
aad
mov
std
(bad)
(bad)
(bad)
(bad)
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
jmp
xchg
cmp
push
mov
xchg
aas
and
(bad)
loop
mov
jp
popa
push
pop
sar
mov
call
adc
das
lea
mov
inc
inc
aas
movs
jmp
jg
sub
(bad)
(bad)
(bad)
(bad)
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
push
shr
inc
xchg
mov
fmul
call
push
xchg
test
pop
mov
jne
fld
cmp
jno
shl
(bad)
out
(bad)
(bad)
(bad)
dec
pop
cmp
fisub
xor
push
lahf
inc
pop
mov
sub
dec
in
(bad)
(bad)
(bad)
push
xor
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
and
(bad)
push
dec
gs
std
or
pop
ficomp
frstor
leave
adc
add
add
mov
jo
xlat
add
lock
inc
je
inc
inc
push
dec
addr16
pop
and
dec
dec
inc
push
dec
inc
aaa
xor
ins
fwait
gs
dec
mov
mov
call
push
inc
dec
stos
ins
jbe
inc
jo
inc
popa
push
outs
jbe
imul
push
sub
outs
lock
mov
imul
dec
push
sub
outs
add
cmp
pop
xor
rcl
or
push
dec
pusha
push
or
push
inc
dec
push
inc
push
and
mov
jo
jb
push
sbb
inc
test
lock
dec
inc
gs
gs
mov
jbe
add
arpl
inc
or
mov
sbb
sub
dec
outs
push
dec
pop
mov
inc
push
xchg
xchg
add
aaa
call
add
ror
ins
push
das
push
fs
sub
imul
inc
adc
daa
dec
sub
mov
imul
xor
inc
jg
mov
clc
inc
inc
jns
dec
lahf
push
imul
adc
les
push
cmp
lods
mov
push
je
dec
add
xor
mov
adc
dec
in
inc
ds
je
(bad)
sbb
out
dec
push
dec
dec
lods
std
dec
add
dec
bound
jbe
movs
cmps
sbb
xchg
sub
scas
(bad)
push
mov
or
inc
cmps
dec
adc
fstp
dec
cli
adc
outs
arpl
outs
push
bound
inc
dec
dec
pop
xlat
int3
xchg
add
push
jmp
adc
mov
push
mov
ja
inc
xchg
push
push
in
sbb
imul
imul
mov
fisub
push
mov
pop
inc
add
loope
jg
idiv
mov
push
push
push
imul
sbb
pop
outs
push
jb
push
mov
jbe
lds
das
jo
adc
push
xlat
push
inc
mov
push
dec
stos
fcom
gs
lods
mov
mov
cmp
push
ins
cmc
inc
arpl
push
push
push
pushf
nop
push
pusha
out
or
inc
pop
jg
push
mov
outs
xchg
fisttp
mov
movs
add
mov
data16
inc
add
fisttp
xchg
mov
pusha
pop
pop
ja
or
pusha
pop
es
inc
pop
stos
mov
push
pop
jno
add
pop
push
pusha
add
sbb
lahf
pusha
mov
scas
mov
inc
sar
cmps
push
and
aad
dec
je
dec
lahf
mov
push
xchg
inc
dec
sub
stos
and
leave
dec
cmp
mov
mov
mov
(bad)
leave
adc
stos
iret
aas
dec
lahf
sub
nop
lods
mov
inc
adc
or
cmps
dec
push
or
rsqrtps
push
dec
daa
dec
dec
sub
or
out
cwde
xchg
cmp
cmps
xchg
push
inc
in
arpl
dec
outs
sbb
ins
imul
xchg
clc
pop
push
jne
les
outs
rol
loopne
push
sbb
pop
(bad)
dec
outs
or
aad
iret
ins
mov
popa
inc
iret
pop
les
add
fdivr
inc
das
xlat
mov
dec
jg
(bad)
repz
and
push
mov
stc
cmp
cmp
lock
out
sahf
shl
cwde
or
mov
daa
jl
iret
leave
mov
das
push
mov
mov
push
and
lahf
inc
inc
(bad)
(bad)
(bad)
add
sub
push
out
mov
les
(bad)
(bad)
(bad)
(bad)
push
push
xor
xchg
fs
xor
fdivr
jmp
rcl
mov
jl
jle
sub
mov
sbb
dec
jno
repz
test
ficomp
jmp
(bad)
(bad)
jmp
(bad)
mov
hlt
mov
imul
std
in
leave
mov
add
(bad)
(bad)
(bad)
jmp
arpl
or
pop
adc
in
pusha
aad
jno
mov
inc
(bad)
(bad)
(bad)
call
add
std
test
movs
cli
test
xor
(bad)
leave
mov
lods
jecxz
fdiv
jne
(bad)
(bad)
call
iret
or
shr
cmp
ficom
push
xlat
enter
mov
and
mov
cdq
xchg
mov
mov
or
or
(bad)
jg
and
mov
jl
das
adc
stos
sbb
data16
inc
fdiv
(bad)
(bad)
(bad)
push
add
aad
mov
mov
movs
in
lahf
xor
mov
js
(bad)
out
mov
stc
mov
push
loope
or
(bad)
(bad)
(bad)
cmp
fs
add
hlt
push
imul
ins
sbb
xor
dec
add
in
xchg
push
ins
jnp
(bad)
(bad)
jmp
or
(bad)
fnstenv
adc
mov
mov
bound
or
adc
gs
aam
pop
popa
mov
into
pop
cmp
mov
(bad)
(bad)
(bad)
inc
movs
fisttp
xchg
fadd
(bad)
shl
jmp
outs
xor
mov
sar
pusha
fidiv
add
in
add
pop
dec
or
cmp
add
daa
adc
or
(bad)
dec
and
test
or
mov
popa
into
push
stc
ficomp
leave
fldcw
and
(bad)
(bad)
(bad)
call
(bad)
pop
cmp
mov
cmp
lods
ins
mov
in
mov
mov
add
push
jmp
fild
push
fdiv
or
test
fs
ds
or
(bad)
jmp
or
push
in
dec
xchg
daa
scas
add
mov
pop
jge
xchg
(bad)
shl
add
inc
jmp
pop
push
(bad)
test
ss
sbb
push
imul
aam
loopne
ror
(bad)
jp
adc
dec
frstor
fistp
mov
mov
aad
mov
call
xchg
shl
inc
fdivr
push
repnz
addr16
cmps
fld
mov
dec
ss
fisubr
or
scas
idiv
(bad)
(bad)
dec
ss
jp
inc
ret
out
pusha
fist
addr16
mov
jns
imul
and
(bad)
(bad)
(bad)
call
outs
and
xchg
ja
int3
add
mov
das
es
lds
or
(bad)
call
sub
mov
cmps
call
ret
shl
sbb
ret
es
pushf
outs
cli
(bad)
jmp
ins
add
ss
jmp
addr16
jb
push
hlt
or
(bad)
(bad)
(bad)
call
mov
jnp
sbb
xchg
or
out
fdivr
fisttp
aam
rol
inc
loop
icebp
clc
mov
push
int
mov
mul
ja
outs
ja
mov
out
cli
(bad)
push
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
jmp
mov
loop
mov
push
add
mov
cmp
cmps
not
pusha
ror
(bad)
(bad)
(bad)
jmp
(bad)
ds
push
scas
fcomp
fldenv
fild
cmp
aaa
push
scas
mov
fidivr
(bad)
(bad)
(bad)
push
xor
mov
retf
mov
cmps
mov
sar
sub
(bad)
(bad)
(bad)
ficom
fldenv
cs
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
or
out
add
iret
push
add
movs
and
aam
sbb
mov
inc
xchg
jne
mul
imul
pop
sub
aam
imul
mov
fistp
jbe
push
jns
or
std
outs
arpl
arpl
mov
sbb
ins
jns
add
jne
outs
ins
addr16
xchg
fild
xor
out
or
push
cmp
or
out
and
dec
dec
inc
js
inc
ins
bound
inc
out
push
jo
jne
inc
inc
inc
js
fadd
mov
push
dec
or
jno
mov
and
xor
pop
inc
cmp
pop
bound
xor
aaa
cmp
call
mov
popa
arpl
cmp
arpl
or
xor
bound
pop
xor
popa
add
ret
xlat
push
inc
jbe
pop
sbb
mul
icebp
xor
inc
or
in
cmp
add
ror
retf
add
inc
loope
jmp
cs
hlt
lods
test
(bad)
ss
jbe
div
aad
arpl
pop
add
aas
test
xor
inc
loopne
and
push
lock
aaa
add
mov
test
mov
push
xor
sub
dec
mov
je
aaa
rol
fidivr
inc
push
bound
add
jmp
mov
and
jae
popa
jne
and
xor
scas
pop
inc
aas
dec
push
mov
inc
(bad)
adc
xor
mov
es
inc
inc
inc
add
ins
test
adc
ds
imul
pop
sbb
push
dec
dec
lea
imul
xchg
add
mov
mov
ja
outs
jne
pop
ins
inc
dec
add
push
xchg
jge
xor
cmp
adc
arpl
add
mov
xor
addr16
push
jns
pop
jo
or
push
inc
imul
aas
std
or
cdq
dec
loopne
push
jbe
je
sbb
popf
sbb
dec
mov
sub
test
lahf
inc
mov
or
(bad)
sub
push
pop
xlat
arpl
add
mov
daa
inc
jb
pushf
xor
or
lock
popa
jo
lahf
sbb
outs
test
mov
jbe
push
jno
mov
lds
in
push
or
nop
test
adc
das
aam
arpl
push
mov
cmp
mov
(bad)
jo
push
inc
mov
push
pop
push
and
push
loopne
ins
jns
das
ins
jmp
loopne
pusha
push
popa
jb
or
sub
test
adc
or
add
push
bound
sub
addr16
test
push
aaa
ja
mov
adc
jae
push
loop
popf
xor
add
ret
push
mov
aaa
pop
sar
sub
sub
mov
addr16
pop
cmp
add
jns
lods
sub
scas
sub
aas
arpl
ret
jg
mov
add
aaa
aam
pusha
das
fcom
push
loop
aaa
cmp
cmp
cwde
mov
sub
test
pop
inc
inc
adc
mov
add
push
add
push
xor
rcr
dec
aaa
adc
dec
sub
outs
mov
adc
mov
pop
clc
or
pop
mov
int
mov
or
and
cmp
outs
outs
je
add
adc
xchg
(bad)
and
and
cs
cmps
mov
shrd
popa
inc
lea
in
bswap
(bad)
std
repz
xchg
mov
out
ud0
jmp
repnz
in
mov
idiv
push
pusha
jmp
retf
cli
push
xor
out
xchg
cld
push
imul
retf
dec
test
mov
dec
daa
loopne
add
or
or
(bad)
into
sahf
(bad)
ins
daa
aam
cmp
add
fcom
add
jg
add
add
sbb
add
prefetch
pop
xor
push
test
in
sub
mov
fsubr
js
push
loop
pop
and
rcl
loopne
add
cs
cmp
jge
and
and
lods
add
loopne
and
cs
dec
push
mov
sar
repnz
cs
mov
fs
dec
or
adc
ins
rcr
out
and
jb
repnz
cdq
test
push
dec
sbb
add
add
xlat
jecxz
sbb
sti
inc
adc
inc
push
rol
mov
dec
(bad)
xor
or
sub
lea
push
add
cmps
or
and
adc
lods
ins
sbb
loop
jne
sahf
enter
add
sub
daa
sub
ss
imul
jbe
and
push
xchg
fbld
ror
dec
fucomi
(bad)
push
xor
gs
push
sti
pop
pop
faddp
ja
jne
jmp
mov
rcr
xor
pushf
xor
in
inc
xchg
into
int3
loope
pop
sub
push
icebp
sbb
fst
ins
adc
cmps
fnsave
dec
push
ja
inc
add
xor
and
movs
or
mov
pop
xchg
clc
add
cmp
cmp
hlt
in
adc
add
stos
mov
push
mov
sbb
push
movzx
sar
and
nop
fadd
mov
ins
daa
ret
mov
movs
mov
mov
(bad)
cmp
jbe
mov
add
pop
and
push
sub
pop
fdiv
inc
nop
inc
cmp
jp
rol
or
lahf
or
adc
loopne
cmp
mov
mov
adc
cdq
loopne
call
sbb
push
add
outs
xchg
test
sub
clc
pushf
and
push
sub
clc
aad
or
repz
mov
xor
push
inc
(bad)
imul
add
adc
push
es
lods
mov
mov
pop
sub
arpl
sbb
aam
sub
nop
popa
inc
or
(bad)
and
add
push
(bad)
rcl
mov
adc
mov
and
out
dec
adc
loopne
shr
mov
movs
es
xor
jl
hlt
cld
add
lahf
inc
mov
imul
add
mov
or
enter
xchg
mov
push
stc
dec
jnp
or
mov
leave
push
sbb
fwait
les
mov
cmp
pop
add
ficomp
or
push
add
rcl
xchg
ret
push
outs
push
(bad)
sahf
push
inc
fiadd
jp
dec
pop
push
ret
shl
or
enter
sbb
pop
cdq
test
inc
mov
and
sub
and
sbb
push
sub
adc
or
(bad)
retf
add
mov
aam
je
inc
test
mov
xchg
sbb
add
push
mov
cmp
mov
sub
add
mov
mov
mov
or
iret
mov
and
mov
mov
test
mov
mov
in
add
and
loopne
xor
pusha
shr
mov
xor
mov
xlat
hlt
sahf
adc
jne
inc
repnz
mul
call
call
and
dec
xor
in
push
int3
out
or
movs
sbb
mov
xchg
popf
(bad)
xlat
jno
outs
fcom
and
jnp
mov
push
enter
pop
fiadd
dec
div
(bad)
push
inc
push
push
ins
fcom
xor
jo
sub
fild
adc
(bad)
lahf
push
mov
movs
xchg
mov
push
mov
mov
xchg
xor
dec
pop
cmp
cmp
ss
or
mov
sbb
inc
rol
call
or
stc
jp
je
cdq
mov
push
(bad)
aam
xor
push
fst
jne
ret
xlat
pop
jp
push
xor
aad
or
inc
or
adc
rcl
lahf
mov
sbb
test
ja
rcl
add
mov
and
call
xor
push
jnp
int
pop
inc
push
xor
addr16
xor
jle
gs
(bad)
call
sub
cmc
mov
mov
(bad)
dec
add
in
add
adc
pop
xchg
movs
dec
ins
and
test
fsubr
jecxz
scas
call
rcl
xor
sub
adc
test
and
or
mov
sub
cmp
test
or
call
test
dec
xchg
lea
xor
mov
or
pop
or
scas
in
nop
mov
add
dec
jecxz
sbb
jmp
test
sar
inc
lock
add
mov
pop
xchg
aad
add
dec
adc
pusha
or
shr
mov
add
lods
or
ja
pop
mov
or
loopne
xchg
xchg
sti
push
sbb
dec
call
fmul
dec
push
inc
push
je
test
loopne
add
add
sbb
shl
sbb
sbb
mov
and
mov
push
or
in
shl
or
xchg
and
jmp
imul
jbe
push
inc
push
icebp
inc
psrlq
adc
clc
sbb
xchg
ret
(bad)
repnz
sbb
add
ret
sub
(bad)
arpl
mov
mul
fiadd
push
jecxz
inc
movzx
jecxz
sub
add
not
test
(bad)
bound
pop
(bad)
je
add
fstp
aas
inc
pminub
ror
mov
cmp
lds
and
push
rcl
pop
lahf
mov
movs
test
popa
jecxz
mov
cs
jmp
xchg
or
push
dec
(bad)
inc
ret
push
mov
sub
das
cdq
and
loop
sbb
adc
pop
ss
retf
(bad)
ret
or
push
push
mov
push
pop
call
rol
xor
(bad)
ds
sbb
push
sbb
sbb
sbb
pusha
loop
fdivr
pop
push
shl
pushf
test
cdq
stos
mov
xchg
mov
push
push
dec
fdiv
les
inc
pushf
sbb
push
out
xor
rol
pop
pusha
push
adc
call
enter
sbb
or
cmp
sub
mov
and
push
add
adc
push
and
sti
dec
add
dec
fcomp
jb
call
test
xchg
xor
test
idiv
mov
cmp
cmp
xchg
test
cmp
in
push
lea
mov
movs
inc
jbe
adc
pop
cmp
push
push
rcl
and
dec
ret
xor
adc
mov
lea
sub
daa
rcl
add
xor
imul
push
fadd
jmp
mul
mov
xchg
fwait
hlt
fdivrp
xor
fdivr
mov
mov
mov
add
sbb
xor
cmps
lea
adc
cli
and
add
push
and
ds
(bad)
sub
aas
xor
push
jge
cmp
or
(bad)
mov
push
call
mov
mov
mov
(bad)
add
mov
ror
rol
push
adc
pop
mov
pop
out
push
rol
pop
lea
dec
repnz
enter
mov
dec
sub
mov
rep
rol
add
push
inc
dec
pop
mov
mov
mov
ss
rcl
out
mov
and
adc
call
adc
add
dec
cli
mov
fisubr
mov
pop
in
push
int3
mov
add
aad
pop
into
enter
mov
imul
rol
ret
xchg
pusha
inc
mov
lods
jmp
outs
push
jb
je
mov
cli
and
jmp
pop
pop
stos
je
and
sbb
popa
pop
xor
nop
or
cmp
push
fist
sbb
rol
popa
je
mov
add
mov
or
stos
add
or
or
leave
aam
jmp
xchg
add
sub
mov
pushf
data16
fistp
aad
imul
jnp
shl
rcl
fiadd
mov
dec
mov
mov
jecxz
mov
adc
pop
cmps
movs
addr16
xchg
jmp
sbb
in
popa
mov
repz
mov
jmp
sub
adc
ins
scas
enter
push
adc
push
push
or
ins
or
and
scas
dec
jno
add
adc
scas
xchg
sbb
cmp
shr
push
jae
and
outs
xchg
dec
dec
cmp
jle
jmp
pop
or
dec
jmp
and
push
sub
dec
in
in
call
and
add
retf
pop
or
jmp
sbb
inc
inc
ficomp
imul
or
stc
div
mov
loope
and
nop
inc
inc
leave
leave
int3
in
mov
in
(bad)
in
enter
or
pop
jno
push
sub
imul
cmp
cmp
adc
mov
sbb
leave
sub
mov
adc
adc
lods
cmc
sbb
inc
rcr
in
mov
or
pop
mov
js
and
sub
stos
repnz
xchg
scas
cdq
je
mov
mov
mov
mov
cmp
mov
inc
xor
shl
aam
inc
xchg
repnz
push
mov
adc
mov
jge
fcomp
add
add
cmp
imul
xchg
adc
sub
cmps
adc
dec
data16
aas
push
fist
dec
mov
sbb
dec
xchg
hlt
adc
mov
jne
aaa
stos
add
lods
push
cmp
xor
jb
fidivr
jae
inc
xor
nop
ds
mov
cmp
rol
scas
call
xor
xor
shl
call
xor
fcomp
inc
test
inc
enter
jmp
mov
or
les
mov
test
aad
enter
mov
push
mov
mov
loop
lea
ret
sbb
adc
jg
lea
jb
mov
pop
add
cwde
add
mov
dec
adc
or
pushf
jbe
in
ror
int3
sub
popa
add
cmp
cmp
in
add
jne
jl
icebp
and
push
sbb
adc
mov
sub
add
mov
in
jne
inc
add
adc
pop
sbb
scas
jns
nop
mov
sbb
inc
lods
inc
pop
icebp
or
gs
mov
test
loop
jbe
push
add
add
out
enter
sbb
loop
adc
cld
mov
pop
dec
xchg
xor
cmp
or
mov
lods
outs
fst
ja
mov
inc
xchg
or
push
popa
inc
dec
pop
and
inc
add
add
or
je
mov
push
test
jmp
add
call
adc
loop
cld
inc
pop
dec
test
fcom
jmp
push
push
test
or
mov
fs
lods
pop
push
loopne
mov
adc
jmp
sbb
scas
aad
add
push
(bad)
cld
call
repz
mov
ror
sbb
int
nop
add
lods
mov
or
mov
retf
and
add
mov
mov
jns
lods
mov
test
jbe
inc
jne
push
inc
sbb
nop
push
add
repz
sub
adc
mov
ins
add
push
call
cmp
push
loopne
xor
lea
and
pop
push
xchg
push
inc
add
adc
daa
or
hlt
repnz
xchg
cdq
push
pop
dec
inc
inc
xor
pop
fiadd
ror
or
rol
mov
push
or
jnp
ja
cs
ss
stos
std
std
stc
jp
xchg
push
xor
push
nop
cld
cmp
pop
pop
pushf
cli
outs
ret
xor
adc
inc
ror
cmp
call
sub
push
inc
inc
enter
mov
cmp
and
add
inc
movs
xor
adc
lods
cmp
nop
dec
mov
jo
cld
inc
push
cs
fadd
xchg
pop
ja
pop
dec
adc
std
adc
int3
cmps
aas
nop
(bad)
push
mov
and
mov
mov
stos
sbb
jbe
test
inc
mov
mov
js
add
(bad)
mov
sub
fldenv
ror
jecxz
dec
jo
push
mov
and
adc
sar
mov
test
test
sub
lods
arpl
lock
pop
add
and
test
add
dec
or
out
jnp
jmp
les
jl
jmp
mov
sbb
add
add
int3
lods
or
sbb
outs
je
stos
inc
push
push
add
pop
and
mov
pop
xchg
adc
cmp
call
out
push
ret
pusha
bound
cld
popf
mov
and
mov
xor
cwde
inc
mul
(bad)
jecxz
push
mov
push
call
out
pop
ds
dec
mov
in
jbe
push
adc
rol
jmp
sbb
js
les
push
(bad)
movs
(bad)
clc
push
or
enter
fst
jbe
outs
jne
xor
adc
std
jmp
and
xor
pop
call
inc
jmp
in
jnp
mov
or
movs
(bad)
imul
xchg
sbb
sar
ror
mov
dec
enter
inc
or
ret
mov
add
icebp
cmp
fild
mov
push
outs
ins
dec
inc
mov
test
sub
lods
or
test
pushw
push
add
mov
cmp
xchg
mov
stos
mov
jl
or
jne
mov
jmp
or
shl
xor
or
or
or
popf
cmc
adc
lahf
dec
xor
lods
dec
xchg
xor
popf
lock
xor
sub
inc
push
cmp
and
adc
add
dec
jecxz
fiadd
mov
add
call
push
mov
dec
xchg
or
call
shr
dec
test
shl
cmps
imul
sbb
nop
add
call
enter
nop
pop
ror
mov
out
aam
inc
mov
adc
push
mov
lea
mov
mov
(bad)
stos
fld
push
fucomip
cmp
je
cmp
jbe
rsm
sub
jne
mov
pusha
mov
add
nop
clc
push
and
std
cmp
test
test
or
sbb
pushf
cmp
in
xchg
movs
shr
daa
xor
pushf
cli
adc
bound
shl
jae
or
loop
(bad)
lock
test
inc
jmp
add
inc
cmp
loopne
stos
fwait
add
push
test
lock
jb
clc
mov
sbb
adc
mov
adc
mov
sbb
jbe
ds
fidivr
aaa
push
mov
hlt
adc
fsubr
jo
push
sbb
cmp
cmp
in
mov
into
lea
lds
lods
sbb
scas
ss
inc
adc
dec
je
xchg
pop
add
and
cmp
push
(bad)
cdq
je
mov
xchg
call
cs
pop
out
in
push
sub
xchg
loop
jg
popf
push
add
push
push
mov
push
lea
mov
outs
test
xchg
mov
push
push
sbb
jne
data16
push
and
cmps
aam
in
pop
fdiv
inc
cmp
cwde
popa
fsubr
jecxz
pop
cli
call
fwait
mov
scas
loope
fcom
mov
stc
and
adc
shl
loopne
pop
scas
dec
je
call
dec
push
push
push
sub
shl
add
or
mov
xor
push
mov
add
sete
pop
sbb
push
dec
inc
sahf
inc
or
fstp
imul
mul
aaa
in
ret
mov
jmp
and
sbb
xchg
adc
sbb
mov
call
jnp
add
mov
adc
mov
ss
popf
add
repz
and
cmp
push
or
jmp
inc
inc
pusha
test
dec
lods
fst
jmp
adc
and
add
add
sub
jecxz
ss
ror
push
dec
xor
loop
inc
adc
out
call
push
pop
mov
sbb
movs
call
mov
jmp
push
imul
pop
addr16
js
pop
sbb
sbb
sbb
jne
into
sbb
out
cmp
jmp
add
push
cmp
jne
push
shl
pop
(bad)
and
or
je
int3
jecxz
enter
dec
loop
aaa
mov
jmp
enter
nop
xor
add
cmc
sbb
jns
(bad)
icebp
call
sbb
sar
inc
call
cld
test
fldenv
push
(bad)
or
cmp
cmp
pop
xchg
out
xchg
add
sbb
(bad)
movs
sbb
cmc
mov
pop
jb
xchg
push
push
loope
js
neg
jge
daa
sub
or
(bad)
fisttp
fxtract
jmp
jne
(bad)
lahf
pop
xor
movs
inc
or
leave
sbb
outs
mov
mov
or
push
xchg
add
pop
push
adc
add
ret
fdivr
cmc
pop
mov
sbb
push
call
mov
and
in
movs
jmp
js
repnz
cmp
in
mov
mov
dec
push
call
jmp
cmp
cld
sbb
sbb
icebp
mov
xchg
sub
ror
ret
or
mov
push
stc
sub
fcomp
or
jne
out
push
mov
add
sbb
jo
or
cmp
pop
cwde
or
mov
mov
pushf
or
cmp
test
ret
addr16
stos
push
cmp
je
inc
loopne
fs
jg
mov
inc
mov
mov
inc
mov
pop
in
pusha
ja
push
push
jg
push
dec
lea
pop
call
call
gs
jbe
test
aas
mov
inc
sbb
shl
and
and
nop
push
dec
or
push
jl
mov
cmp
fadd
dec
jne
movzx
add
push
add
add
xor
movs
nop
aaa
gs
mov
and
add
test
push
sbb
add
push
sbb
mov
movs
sub
add
pop
xor
lods
and
adc
cli
sub
(bad)
sbb
and
ja
fcmovu
push
xor
inc
xor
inc
pop
sub
sbb
dec
jecxz
and
or
ror
out
add
imul
push
imul
add
sti
loopne
dec
test
adc
or
call
push
mov
cwde
push
dec
clc
xchg
(bad)
fst
call
inc
rol
das
dec
push
push
sub
dec
aaa
mov
and
xchg
je
clc
cmp
adc
inc
lds
dec
adc
cmp
inc
xchg
jge
aas
enter
add
shr
adc
mov
arpl
shl
xor
xchg
adc
pop
sub
call
sbb
inc
rcr
rol
shr
add
push
add
add
push
xor
add
and
nop
shl
pop
add
out
xor
sbb
adc
pushf
mov
imul
add
rol
stos
add
add
pop
adc
push
add
sbb
inc
add
xor
dec
push
sbb
daa
and
shr
push
sbb
and
adc
ror
popf
jp
push
mov
adc
inc
shl
or
dec
add
iret
push
or
or
push
cli
mov
jp
jle
mov
div
mov
pop
call
call
aas
sbb
popa
js
dec
aam
fnstenv
inc
adc
cmp
call
rcr
js
dec
adc
inc
or
push
int3
pop
fs
hlt
ins
xchg
mov
out
fstp
cmp
or
adc
add
sti
mov
je
call
clc
jb
ficomp
jmp
scas
inc
dec
mov
jb
cmp
and
push
pop
mov
sbb
xchg
rcr
jno
rol
addr16
loopne
call
into
cmp
xor
ins
fwait
mov
dec
dec
jmp
sub
inc
jmp
cwde
xchg
dec
or
jge
sbb
inc
add
add
xchg
dec
or
cmp
mov
cmp
adc
cmp
lock
dec
test
dec
mov
push
mov
pop
arpl
fist
and
inc
fiadd
shr
inc
pop
cmp
es
cmps
add
out
xchg
movs
push
and
jne
fs
into
(bad)
push
je
call
rcl
sbb
jae
push
es
inc
inc
lods
add
(bad)
outs
push
mov
ins
loop
pop
outs
iret
dec
push
push
mov
call
mov
cmp
adc
fwait
xchg
int3
aam
and
das
js
sub
pusha
int3
xor
xchg
xchg
mov
jbe
push
imul
call
dec
mov
imul
fs
pop
ss
add
sub
mov
push
outs
pop
movs
xor
aaa
mov
arpl
movs
adc
adc
es
inc
mov
inc
adc
add
mov
push
es
inc
xchg
pop
shl
adc
loope
inc
aaa
add
sbb
pop
aaa
and
mov
pop
xor
xchg
or
pusha
inc
and
xor
pusha
inc
sbb
sub
ja
ss
inc
retf
inc
xor
cmp
pusha
inc
retf
out
xchg
or
retf
call
dec
shr
fst
ins
dec
or
out
xor
jp
inc
dec
out
sahf
int
fs
cs
pusha
nop
push
in
movs
repz
les
mov
out
fidivr
inc
or
push
sub
sahf
out
and
adc
add
xor
shl
cmp
rol
je
test
or
rcl
mov
out
adc
xor
adc
lock
jnp
mov
pop
nop
add
and
dec
pop
mov
aaa
sbb
out
or
out
fidivr
push
mov
rcl
jns
enter
xchg
adc
inc
cld
or
movs
repz
push
adc
push
or
pusha
out
mov
cmps
or
jmp
and
and
or
js
adc
mov
ins
sbb
mov
add
push
pop
jmp
cmp
je
mov
mov
sbb
repz
lahf
ret
(bad)
fstp
rcr
test
inc
xor
sahf
xchg
stos
ins
push
pop
add
out
dec
in
add
add
jbe
dec
dec
sbb
test
ds
cmp
je
xchg
add
xchg
aaa
jb
mov
cmp
mov
mov
pop
pop
inc
xchg
mov
or
enter
or
add
mov
fisttp
in
mov
or
mov
dec
or
or
or
jb
pop
and
pop
leave
xor
push
push
setp
add
adc
not
adc
or
cmp
push
jnp
cmp
enter
int
push
adc
add
adc
sbb
pop
leave
adc
adc
enter
push
pop
enter
pop
pop
and
sbb
xchg
sbb
mov
sti
mov
xchg
addr16
sbb
mov
sbb
sbb
cmps
sbb
je
push
sbb
dec
sahf
push
mov
xor
sbb
pop
push
push
inc
neg
clc
jg
cmp
jne
add
add
sub
cmp
ins
pop
and
mov
xchg
push
iret
cmp
xchg
and
jg
pop
shr
push
in
push
in
imul
adc
repnz
ret
sahf
dec
adc
in
in
cmp
repnz
out
out
or
repnz
sub
push
in
fsubr
je
call
iret
sbb
xchg
mov
cmp
dec
sahf
xchg
sub
pusha
in
jmp
jmp
add
or
in
out
repnz
in
xchg
aad
in
cmp
leave
xor
mov
out
sbb
out
ins
nop
out
je
lock
scas
in
pop
dec
icebp
cmp
das
enter
jnp
or
iret
repz
std
hlt
push
jnp
aam
imul
xchg
stos
cmp
cmp
sahf
div
mov
call
std
clc
clc
inc
scas
add
aas
stc
sahf
xchg
sub
and
cli
nop
addr16
add
sti
inc
outs
sub
fdivrp
cld
cld
je
cld
in
ffreep
push
push
nop
shl
mov
xor
ins
leave
repz
sbb
(bad)
(bad)
xor
inc
ret
retf
rcr
sub
jb
cdq
xchg
push
or
(bad)
xchg
or
fwait
or
sub
movs
mov
xchg
jb
out
repnz
push
jp
in
sub
ret
mov
mov
aam
scas
ss
push
or
out
xchg
scas
and
test
call
push
movs
sbb
or
dec
jmp
jmp
stos
xchg
stos
xchg
daa
in
cdq
rcl
cli
or
(bad)
cli
out
out
mov
xchg
mov
nop
mov
movs
mov
repz
and
repz
sbb
inc
cli
stc
(bad)
push
dec
jo
imul
mov
xchg
dec
pop
push
(bad)
clc
cdq
jb
daa
sbb
xor
aad
imul
repnz
fmulp
or
cmp
jmp
adc
cmp
jo
or
jmp
and
scas
mov
loop
mov
shl
loope
jns
mov
xor
dec
adc
clc
or
push
out
fdiv
out
inc
repnz
neg
mov
jnp
jmp
xchg
push
jmp
and
test
not
not
hlt
imul
daa
test
xor
xchg
into
test
sub
or
ins
stos
or
repnz
leave
or
sub
add
xchg
pop
or
mov
out
div
test
push
fst
xchg
mov
scas
in
cmp
sub
sbb
dec
push
popa
imul
mov
cmc
dec
adc
cli
hlt
or
rol
lock
aad
jle
push
jo
adc
lods
or
ins
(bad)
clc
sti
mov
loope
jb
out
loope
jp
repnz
cvtdq2ps
cmp
test
sbb
in
rol
inc
repnz
repz
in
repz
dec
push
jmp
inc
jb
repz
repz
pop
repnz
jae
in
mov
in
(bad)
repnz
pop
repnz
repnz
imul
xchg
push
jno
scas
pop
adc
repnz
sbb
cld
icebp
cmc
cmc
sbb
push
mov
in
push
and
push
cwde
icebp
out
inc
mov
jne
in
xor
icebp
in
xlat
xor
jmp
inc
mov
out
lock
push
js
push
mov
test
jp
imul
fnsave
in
mov
(bad)
push
sub
ffreep
push
inc
jp
dec
cmp
inc
cmp
push
sti
cmp
cmp
lods
enter
dec
add
mov
push
mov
mov
(bad)
mov
stc
xor
jmp
inc
cmp
dec
add
xchg
mov
xor
sti
inc
cmc
jmp
adc
jg
dec
int3
dec
push
nop
push
repz
popa
jns
adc
aaa
or
lahf
out
push
add
ss
dec
repz
sub
push
jecxz
repz
cmp
shr
jae
ins
sbb
data16
in
push
push
aad
in
xchg
(bad)
gs
popf
idiv
dec
outs
or
mov
sub
and
cli
dec
xor
addr16
sbb
inc
mov
sbb
lea
inc
cmp
and
retf
test
ins
cmp
fstp
xchg
pop
les
xchg
lods
jle
mov
jg
in
push
dec
repz
push
xor
movs
movs
inc
jmp
or
or
sbb
movs
loope
inc
jecxz
ficom
cmp
sbb
aaa
sub
mov
out
cdq
dec
sub
lea
mov
mov
daa
ret
lahf
mov
hlt
test
rol
inc
jmp
pop
jmp
xchg
xchg
pop
add
mov
and
pop
cmp
es
and
mov
cmps
or
sub
dec
dec
pop
sbb
xchg
je
or
ins
leave
gs
xchg
jno
mov
stos
sub
jno
sbb
dec
dec
jo
adc
popf
adc
adc
dec
adc
pop
xor
ins
jo
stos
adc
and
or
(bad)
adc
hlt
psubsw
aas
aas
cmp
(bad)
sub
dec
inc
cmps
dec
int
jb
mov
shr
js
add
es
push
pop
push
pop
adc
je
inc
and
add
lock
add
xchg
xchg
pop
cmp
js
pop
xchg
and
and
scas
add
push
ror
test
nop
mov
pop
or
and
or
fwait
cdq
sbb
inc
sub
adc
pop
mov
pop
and
pusha
push
add
mov
sub
movs
mov
adc
xchg
pop
inc
mov
cdq
xchg
ror
(bad)
or
popf
and
sub
ds
xor
add
fcom
lock
xor
xchg
inc
adc
mov
je
cmp
mov
fidiv
push
or
popf
mov
adc
mov
mov
lahf
sub
sti
iret
add
inc
xor
lahf
xchg
and
mov
push
lahf
dec
inc
sub
push
xor
and
or
and
stos
sbb
adc
and
call
add
fcomp
xchg
retf
fbld
sub
xchg
and
jmp
ds
add
jmp
inc
add
test
add
adc
cli
lahf
aaa
and
jb
outs
pop
and
and
lahf
or
xor
xor
out
xchg
xchg
hlt
push
sbb
ror
sbb
out
or
jb
or
lahf
aam
xor
lahf
int
je
test
adc
sar
fcomp
ror
lahf
imul
inc
dec
dec
dec
call
push
dec
dec
sbb
movs
push
mov
cmp
cld
push
out
rcl
sbb
sub
lahf
mov
mov
pop
dec
lahf
mov
dec
lahf
sbb
xor
add
and
push
lahf
dec
adc
enter
or
inc
adc
dec
daa
inc
mov
xor
in
loopne
movs
pushf
inc
ds
or
inc
lahf
cmp
inc
ret
adc
xchg
pushf
(bad)
cmc
add
push
jmp
out
nop
fdiv
aam
leave
jo
inc
inc
add
inc
dec
call
cs
cmps
loopne
sbb
push
call
daa
sahf
push
adc
loopne
frstor
and
xor
push
sub
mov
and
xor
mul
jne
push
(bad)
jmp
push
sub
fldenv
mov
mov
and
cmps
mov
enter
mov
rcl
pop
or
push
push
cmp
ret
push
xor
cmp
std
lods
and
and
mov
pop
enter
xor
arpl
dec
or
dec
xor
xchg
in
inc
call
and
ret
inc
arpl
shl
cmp
and
cmps
xchg
mov
clc
mov
call
(bad)
jp
imul
pop
nop
sbb
lods
nop
es
cmps
scas
sub
or
dec
outs
enter
sti
hlt
jo
or
jle
push
popf
inc
cli
or
and
push
cmc
cs
or
add
xor
ins
psubusb
jo
sub
(bad)
xchg
and
je
enter
loop
and
mov
pushf
movs
cmps
dec
pop
aam
add
jle
jl
mov
sub
jmp
out
push
dec
or
add
movs
add
nop
jb
movs
adc
xchg
and
jb
test
inc
lea
dec
mov
(bad)
ds
loope
or
frstor
or
and
push
xor
jns
stos
cmp
or
cmp
in
aaa
popa
aas
ss
shl
jns
je
xchg
ins
scas
movs
sub
lods
push
je
xchg
cmp
loopne
inc
sbb
cmp
dec
or
cmp
mov
cmp
cmp
sbb
leave
push
xchg
cmp
into
dec
push
mov
sti
nop
outs
mov
mov
xor
ret
cmp
pop
xor
popa
dec
cmp
jb
mov
mov
or
mov
inc
dec
and
cwde
cs
imul
and
mov
xchg
je
loop
sbb
dec
mov
xchg
inc
dec
xlat
inc
lods
mov
fs
mov
xchg
sub
shl
nop
sbb
cdq
xchg
xchg
push
push
shr
test
push
int3
xor
loop
aad
rcl
rcl
or
jo
push
repz
cmp
cmps
cmp
loopne
cdq
xchg
shr
(bad)
call
jp
sub
sub
sub
sub
jecxz
push
dec
je
sbb
popf
imul
xchg
xchg
out
pop
ins
in
loope
xchg
es
int
mov
sub
xchg
sbb
xor
add
cdq
sub
int
sub
pop
cdq
xchg
cmp
shl
loopne
sub
or
adc
cmps
and
mov
or
xor
xor
call
rcl
sub
add
xor
sub
outs
call
mov
imul
push
movs
test
cwde
imul
sub
mov
dec
inc
push
mov
shr
jmp
shl
cmp
mov
cmp
shr
xor
cmp
outs
mov
jo
stos
cdq
xchg
dec
fs
mov
or
fsub
jb
sub
sub
or
fwait
imul
sub
pop
outs
add
mov
call
cmp
pop
cwde
imul
adc
xor
mov
jo
add
imul
xor
cs
jno
sbb
int
std
int
aam
pop
movs
test
sub
fldcw
push
ds
jp
rcl
ss
hlt
shr
mov
sub
nop
push
lea
and
popa
xor
push
shl
add
adc
shr
pop
inc
adc
add
sub
xor
jo
aam
adc
rcl
mov
cdq
jbe
sub
inc
sbb
sub
sbb
int
cld
sbb
aaa
xor
sub
and
add
push
(bad)
dec
inc
sub
xchg
dec
cmp
aam
rcl
test
call
cmps
mov
cmps
cdq
xchg
sub
pop
add
jge
and
test
rcl
adc
and
int3
xor
cli
or
sub
add
int3
sbb
lock
data16
add
test
or
or
bound
add
ss
xor
fucom
pop
data16
fistp
sbb
in
call
push
sub
cmp
shr
push
or
arpl
cdq
xchg
shr
pop
inc
cmps
sbb
or
xchg
mov
lahf
fnsave
sub
or
add
sti
retf
mov
sbb
mov
cmps
sub
jbe
add
sbb
sub
(bad)
cmp
xchg
and
mov
int
inc
push
push
sub
ret
imul
jp
hlt
lock
out
dec
push
inc
sub
lds
inc
les
cmps
mov
imul
je
sub
js
fwait
rcr
sbb
sub
sub
xor
rcl
sub
xor
dec
inc
sub
rcr
sub
xor
xor
xor
cmp
inc
push
xor
xor
dec
pop
movs
mov
pop
cmp
lods
cdq
xchg
dec
adc
push
call
inc
xchg
popa
jo
ds
sub
rcl
xchg
xor
loope
adc
sub
jno
cmp
mov
mov
jmp
mov
aaa
imul
and
jno
aaa
dec
xchg
pop
xor
mov
repz
loop
test
sar
stos
xchg
mov
or
mov
call
(bad)
cwde
add
sub
pop
out
inc
push
mov
inc
loopne
inc
cs
cmp
(bad)
push
addr16
inc
lods
ret
mov
nop
add
imul
cmp
stos
add
mov
ja
push
ja
sbb
add
into
mov
inc
dec
inc
sub
and
js
jb
pop
(bad)
push
xlat
xor
cmp
gs
ret
xor
(bad)
add
lahf
es
add
xlat
jae
imul
cmps
mov
pusha
leave
adc
and
mov
dec
dec
push
cmp
sub
mov
push
loopne
inc
pushf
or
xchg
into
retf
fs
retf
scas
push
dec
mov
xchg
into
retf
retf
add
dec
push
xchg
scas
push
dec
or
out
dec
je
add
js
sub
dec
test
dec
shr
xor
cmp
es
dec
ins
cmp
and
ror
xchg
pop
stos
xlat
mov
jb
jae
popf
push
dec
push
cwde
xchg
inc
movs
pop
in
cmp
inc
dec
push
mov
xor
jmp
dec
mov
shr
aam
mov
inc
cmp
xchg
push
jnp
in
cli
movs
push
loopne
stc
mov
and
imul
inc
push
dec
ret
pop
mov
and
pop
test
and
outs
sub
int3
mov
xchg
cwde
pusha
adc
push
add
das
mov
add
arpl
fiadd
inc
cmp
or
cmps
loope
scas
enter
adc
ins
dec
inc
add
div
inc
stc
adc
xor
cdq
int
jl
sbb
cmp
cmp
das
jmp
(bad)
nop
push
ret
push
xchg
test
inc
and
jbe
push
(bad)
loop
or
call
into
ins
inc
jmp
and
inc
mov
into
mov
nop
out
push
cwde
inc
push
rcl
ins
dec
addr16
ret
in
inc
push
(bad)
cmp
xchg
ret
idiv
inc
rcr
sub
imul
inc
mov
ins
inc
dec
mov
aaa
jo
rol
sub
shr
les
inc
push
inc
out
sub
mov
and
inc
jmp
movs
ret
and
inc
xor
loopne
movs
inc
xor
loop
movs
repz
inc
xchg
loopne
and
fld
sbb
mov
sbb
pop
inc
clc
cs
shr
call
pop
mov
(bad)
outs
jno
pop
dec
call
add
mov
dec
mov
xor
sbb
and
es
mov
pusha
and
and
mov
inc
outs
add
nop
or
fstp
or
call
xchg
test
dec
mov
dec
enter
adc
or
mov
and
mov
mov
mov
and
sub
mov
xor
dec
mov
adc
and
daa
xor
or
mov
scas
adc
mov
ja
xchg
(bad)
outs
jae
(bad)
shl
push
cmp
jbe
dec
cwde
adc
add
mov
loop
call
inc
cmp
movs
add
inc
jl
and
xor
je
add
mov
sub
ins
sbb
pop
add
mov
jmp
inc
lea
pop
jmp
test
mov
cmp
push
jmp
pusha
add
pop
pop
sbb
adc
jns
push
pmaxsw
pop
inc
sub
repz
in
and
lods
out
call
call
add
pop
test
enter
gs
outs
imul
inc
push
adc
out
inc
retf
mov
and
inc
inc
pop
adc
ins
or
cs
mov
sbb
pop
mov
cmp
pop
push
mov
add
jb
outs
cmp
sbb
call
add
pop
inc
push
fld
fcomp
ss
inc
add
fsub
lods
stc
test
daa
cmc
xor
lahf
push
mov
int
adc
inc
mov
cmp
push
inc
jmp
dec
jmp
xor
mov
ror
inc
inc
adc
add
call
pop
je
pop
es
sbb
jg
je
add
sbb
and
mov
xchg
jmp
pop
ret
mov
stos
cmp
xor
add
je
xchg
imul
pop
and
cmp
and
or
or
sar
sbb
out
outs
inc
add
xor
inc
jmp
ja
int
add
adc
push
enter
popf
pop
pop
fnstenv
mov
and
add
int3
adc
std
enter
arpl
add
loop
pusha
popa
push
mov
cmps
xor
mov
mov
mov
fmul
inc
cld
shl
call
cmp
div
shl
shl
shl
jb
cmp
repz
jbe
jne
fisubr
jge
(bad)
push
push
or
inc
dec
mov
cmps
add
aam
or
test
cdq
add
ja
cmp
xor
movzx
loopne
adc
push
add
ret
push
sbb
cwde
loopne
clc
inc
push
adc
xlat
xchg
dec
jp
sar
xor
int
push
ss
pop
hlt
dec
sub
call
adc
sub
xchg
cmp
pop
and
test
nop
mov
xor
sbb
push
and
addr16
adc
bound
dec
arpl
mov
jecxz
inc
and
pusha
call
and
mov
mov
add
sub
xchg
mov
stos
add
mov
in
or
mov
das
xchg
test
out
das
or
xchg
or
cli
or
lock
mov
lock
add
das
add
retf
rol
add
xchg
xchg
mov
xchg
xchg
retf
(bad)
xor
aaa
add
add
inc
cmp
and
(bad)
jmp
iret
mov
mov
cwde
js
add
stos
cmp
lods
in
push
ins
ror
fadd
in
int3
call
dec
inc
aas
call
xchg
popf
push
sbb
xlat
cmc
fist
dec
adc
push
in
or
test
sbb
rol
push
push
sbb
push
rol
add
sbb
dec
inc
(bad)
pop
rol
loopne
inc
sbb
aas
mov
or
imul
daa
ja
adc
rcl
in
mov
fcom
mov
cs
jge
xchg
dec
adc
shr
ds
xchg
push
add
pop
add
push
test
pop
inc
xor
add
aaa
pop
pop
inc
rol
ret
add
int
pop
ins
sbb
dec
lea
mov
imul
int3
push
int3
icebp
and
jmp
add
sbb
jo
adc
es
popf
test
or
adc
xor
das
xchg
adc
adc
pop
jmp
pop
rcl
cli
jl
jmp
out
fisttp
mov
imul
or
cli
pop
pop
repnz
cmps
shl
jmp
xor
js
push
or
or
inc
xchg
add
popf
mov
pop
add
pop
cmovb
rcl
hlt
dec
sub
pop
or
into
rol
and
mov
jns
test
jno
add
daa
daa
pop
rcr
pop
mov
stos
(bad)
movs
repnz
mov
(bad)
sub
pop
and
add
sbb
sub
add
add
stos
movs
mov
jecxz
mov
outs
xor
jns
rol
xor
jns
daa
and
lds
cmp
mov
inc
push
ret
or
nop
stos
add
adc
xor
and
xor
xchg
add
jne
mov
or
fcomip
shl
xor
and
repnz
enter
fsub
xor
call
jo
jno
xor
xor
xchg
popa
or
add
add
rcr
mov
jmp
into
sbb
mov
or
sbb
or
sub
pushf
clc
add
add
repnz
imul
bound
inc
add
xor
rcr
sub
inc
ja
jno
sbb
xor
xor
mov
outs
xor
sbb
mov
push
push
sbb
ror
xor
pop
push
ret
jb
and
push
inc
dec
sbb
mov
xchg
pop
in
xor
mov
sar
sbb
shl
fwait
pop
jmp
adc
and
in
xchg
retf
in
push
add
and
add
stos
add
xor
in
pushf
dec
sub
inc
fiadd
test
pop
sbb
sbb
sbb
adc
loopne
dec
pop
out
or
jmp
push
daa
outs
and
sbb
jb
mov
nop
sbb
mov
stc
dec
test
push
and
add
stos
push
add
add
pop
jnp
aam
dec
call
jecxz
cmp
adc
mov
shr
clc
inc
stos
dec
sub
jne
cmp
xchg
dec
adc
dec
hlt
call
jmp
ins
mov
push
dec
fsubr
out
call
(bad)
push
mov
adc
pop
and
loope
sar
adc
test
push
daa
pop
sub
inc
mov
mov
ja
rol
pop
fdivr
test
xchg
(bad)
mov
hlt
xor
xchg
mov
inc
lea
out
ds
je
push
mov
outs
sub
adc
(bad)
fst
adc
adc
add
popf
div
mov
jo
test
push
loope
xor
add
shl
je
addr16
rcr
clc
loope
addr16
push
call
nop
mov
sub
or
cmp
cmp
mov
mov
adc
or
sar
xchg
into
in
lods
shl
lods
mov
and
or
mov
mov
mov
mov
fld
mov
mov
mov
or
test
xchg
xchg
lods
mov
daa
jl
cs
mov
ss
aad
dec
neg
test
mov
xor
mov
and
scas
shl
int3
push
fcom
(bad)
dec
push
pop
pop
pop
push
xchg
fst
ins
dec
mov
dec
dec
pop
dec
xchg
push
aas
adc
addr16
(bad)
cli
ins
dec
loopne
add
fidiv
ins
xor
mov
inc
or
pusha
aaa
push
pop
mov
aam
pop
call
push
dec
dec
hlt
ja
shr
push
and
adc
int3
jns
adc
cmp
mov
dec
dec
imul
xchg
pop
and
and
jns
sub
mov
jns
or
cmpps
stos
cmp
sub
xor
jns
call
pushf
cs
xor
dec
jns
in
pop
pop
retf
xchg
inc
outs
push
and
and
mov
adc
add
mov
fisub
arpl
int
inc
adc
or
push
and
xor
movs
dec
enter
xchg
lds
pop
xor
inc
push
xchg
jns
call
jns
call
mov
int
shr
mov
ss
mov
stos
dec
jns
xchg
xchg
jns
int3
(bad)
je
cmp
int3
mov
dec
push
and
mov
in
idiv
jns
fadd
arpl
rcr
xchg
jns
ds
adc
xchg
jns
fcomi
cmp
push
xchg
nop
xchg
jp
push
xchg
rcr
inc
jns
xor
adc
mov
movs
xor
mov
mov
sub
pop
xchg
jns
inc
inc
neg
and
inc
or
and
push
test
jns
call
mov
xor
and
pop
adc
inc
jns
push
xchg
rcr
jns
dec
enter
inc
inc
jno
push
jns
adc
stos
jns
adc
sub
and
stos
sub
(bad)
mov
adc
jmp
cmp
jg
test
sbb
and
jbe
jns
xchg
sbb
mov
adc
sbb
adc
sbb
mov
or
int3
lds
cmp
adc
in
or
sub
jns
stos
dec
push
inc
out
iret
lds
inc
jns
aad
pushf
and
sbb
and
(bad)
inc
mov
mov
jns
xor
fs
rcl
call
jb
push
and
or
sub
jns
cwde
mov
ret
mov
add
aaa
xor
aaa
ins
pop
mov
fs
sub
stos
pop
scas
cmps
dec
xchg
xor
dec
pop
bound
pop
das
stos
fs
loopne
xor
pop
and
sbb
cmp
scas
push
sub
dec
xchg
pop
(bad)
pop
not
clc
cmp
ret
inc
and
jmp
cwde
or
pop
sub
rcr
gs
mov
push
leave
shl
popf
fnstcw
or
xchg
push
in
inc
xchg
pop
fiadd
pop
dec
pushf
dec
xchg
ret
or
nop
mov
fucomi
adc
test
jae
adc
and
mov
dec
adc
das
xchg
push
or
fwait
push
push
push
jl
inc
and
pop
add
cmp
dec
cs
lahf
sbb
or
hlt
loopne
push
and
inc
or
dec
adc
pop
pop
cmp
inc
inc
arpl
shl
adc
mov
popa
xor
das
cmc
bts
test
das
call
push
das
inc
dec
inc
ins
jle
jmp
dec
inc
sub
cmp
sbb
loopne
dec
adc
pop
sub
ds
mov
or
sub
push
cmp
sub
test
das
and
or
pusha
cmps
out
and
jo
jae
dec
popa
or
dec
pop
inc
ss
pop
ins
enter
inc
scas
and
jnp
fs
sbb
leave
jle
mov
pop
or
mov
add
sub
sbb
enter
dec
add
and
fnop
adc
repnz
or
sbb
mov
xchg
or
pop
and
mov
int
sub
inc
inc
adc
fs
sub
push
mov
or
xchg
test
adc
mov
mov
imul
pop
repz
push
xor
mov
bound
and
xchg
dec
sbb
fs
or
test
nop
add
dec
call
push
popa
inc
pop
(bad)
jnp
or
and
call
jmp
icebp
or
push
pusha
cmp
es
push
push
aas
outs
push
cwde
rcl
inc
xor
cwde
nop
jge
dec
xchg
test
sbb
mov
push
xchg
ja
bound
call
lods
inc
in
outs
nop
or
jb
push
mov
es
dec
sub
ret
push
mov
adc
ret
orps
int3
je
test
call
mov
repz
xchg
stos
sub
cwde
push
adc
adc
and
push
rcr
shr
xor
outs
ja
xchg
std
dec
aam
or
inc
cld
xor
aas
xor
unpcklps
das
aad
push
mov
daa
(bad)
call
in
xchg
aas
mov
adc
call
pop
mov
clc
retf
xor
lock
call
or
std
stc
repnz
int
inc
call
mov
in
pusha
movs
lods
andps
movs
pop
call
stc
pop
call
fs
in
xchg
das
ins
call
je
gs
sar
bnd
pop
jl
push
dec
movs
fst
std
inc
sbb
cmp
push
cs
mov
mov
nop
xchg
dec
in
sbb
push
cs
cli
retf
xchg
retf
movs
in
(bad)
cmp
mov
mov
jmp
shl
xchg
mov
dec
mov
jle
jae
in
mov
mov
push
in
inc
aam
dec
in
cmp
xor
es
mov
cld
adc
add
fld
or
loope
retf
jmp
sbb
sbb
and
and
sub
mov
jle
sub
push
test
gs
movs
sbb
cs
adc
xchg
dec
in
or
and
push
inc
jo
inc
sbb
push
(bad)
adc
and
call
dec
push
and
dec
call
inc
std
je
data16
jb
and
adc
and
int
inc
sbb
pushf
xor
push
and
or
mov
(bad)
xor
daa
int
mov
ror
ror
xor
dec
cli
daa
int
dec
mov
(bad)
dec
mov
or
jb
arpl
push
je
ror
push
arpl
outs
inc
pop
addr16
add
xor
(bad)
and
mov
add
xor
inc
xor
mov
push
(bad)
cmp
sub
mov
fsubr
xchg
stos
pop
mov
jne
mov
pop
stos
inc
adc
out
jmp
mov
adc
stos
mov
or
dec
stos
and
nop
push
xor
aaa
and
leave
loopne
aaa
sbb
lea
dec
fdiv
arpl
mov
add
add
cli
cs
ret
push
pop
adc
xor
inc
cld
or
imul
mov
inc
add
stos
mov
pop
sbb
pusha
lahf
and
cmp
add
dec
sbb
movs
inc
shl
call
push
or
cli
ja
pop
adc
adc
mov
mov
dec
inc
cmps
sar
mov
xor
push
add
mov
sbb
xchg
adc
xchg
(bad)
mov
fst
mov
sbb
pop
rol
cmp
inc
mov
or
pop
pop
adc
xor
aad
frstor
mov
mov
inc
into
jge
aam
pop
or
in
push
or
pusha
add
adc
or
aad
cs
push
add
mov
or
cmp
or
sbb
aad
rcr
add
sub
aad
adc
and
fs
or
and
jmp
fs
ret
test
aaa
pop
fimul
stos
mov
sbb
pop
mov
outs
inc
mov
sub
sub
call
inc
cmp
test
sbb
movs
cmp
(bad)
mov
jmp
ss
cli
adc
pop
lds
pop
(bad)
jecxz
push
in
push
mov
(bad)
and
mov
sub
xor
adc
cmp
adc
mov
push
or
loopne
adc
inc
gs
hlt
retf
sub
jbe
xor
mov
jmp
stos
dec
adc
mov
push
out
test
jmp
xchg
ds
rol
xor
adc
cmp
inc
sub
lods
dec
jmp
adc
push
xor
xor
mov
daa
shl
push
cdq
adc
dec
xchg
sub
repnz
cmp
sub
push
gs
(bad)
jmp
cmps
add
add
adc
jo
sub
xor
adc
out
sub
adc
call
leave
nop
in
inc
fwait
shl
xchg
adc
or
scas
sub
mov
mov
adc
sub
and
mov
jns
call
inc
inc
cmp
xchg
cmp
and
inc
cmps
adc
lods
cmp
inc
cmp
(bad)
cmp
mov
pop
sbb
cmp
xchg
jmp
inc
and
xchg
pop
shl
adc
push
inc
clc
test
pop
nop
add
test
enter
nop
inc
push
je
adc
push
inc
add
ja
push
push
xor
sub
jl
dec
sahf
adc
sbb
inc
pop
pop
lea
adc
pop
dec
add
cmp
or
push
inc
xor
leave
push
dec
test
pop
xlat
ins
sub
dec
sub
inc
xchg
push
lods
add
xor
push
mov
add
mov
mov
or
push
adc
repz
add
in
or
push
mov
int
add
jge
adc
pop
gs
and
mov
pop
jns
jno
mov
neg
call
add
lea
adc
jecxz
xor
or
imul
js
or
lods
test
mov
dec
aaa
xchg
nop
cmp
mov
aaa
push
pushf
push
mov
aaa
add
popf
push
je
aaa
nop
cmps
sub
cwde
adc
or
cmp
jl
(bad)
popa
mov
adc
pop
mov
xchg
pop
inc
cmp
push
loope
mov
imul
movsx
jl
aaa
je
nop
dec
imul
xor
or
dec
dec
or
aaa
cmp
push
(bad)
sbb
aam
mov
add
jmp
arpl
or
inc
retw
push
cld
add
and
and
mov
bound
sub
int
push
adc
out
push
iret
dec
or
jp
push
iret
add
ror
iret
test
dec
imul
ret
add
dec
inc
adc
dec
and
and
fisttp
into
mov
daa
cs
mov
popf
pop
add
call
adc
sbb
or
or
sbb
add
ret
jmp
add
push
mov
into
jle
mov
nop
addr16
push
push
stc
and
jp
cwde
dec
and
and
push
mov
movs
mov
dec
outs
aaa
and
movs
rcl
addr16
xor
fwait
loopne
addr16
xor
les
and
jmp
xchg
ret
add
push
sbb
add
jp
push
out
pop
scas
push
xchg
push
je
add
push
sbb
add
pop
cmp
stos
rol
xor
sbb
fcomp
xchg
adc
sub
xchg
adc
xor
nop
popa
mov
pop
rcl
push
pop
nop
jo
sbb
xchg
push
je
sbb
pop
xor
adc
addr16
daa
pop
in
fldcw
test
mov
jecxz
mov
adc
jns
adc
stos
add
js
mov
push
xchg
mov
test
mov
and
je
retf
shl
(bad)
mov
rep
jge
inc
arpl
mov
gs
xor
mov
repz
mov
xor
test
nop
retf
and
lods
mov
aam
cwde
mov
push
xor
out
mov
ja
inc
repz
gs
adc
repz
enter
repz
or
gs
loope
mov
repz
pop
push
retf
nop
xchg
cmp
pop
fdiv
add
sbb
jmp
rol
mov
and
add
mov
and
mov
movs
sbb
mov
in
fwait
jg
outs
add
enter
cmp
addr16
or
arpl
sub
mov
mov
out
call
mov
xchg
xor
sub
mov
push
jb
mov
adc
or
xor
call
add
dec
cld
sbb
or
les
stos
sub
test
mov
inc
jo
pushf
fistp
adc
or
(bad)
cmp
test
inc
ss
add
or
aam
or
and
jo
add
sub
add
sub
mov
repz
adc
mov
test
repnz
xlat
fwait
push
out
gs
jnp
add
sub
dec
xchg
out
jb
adc
pop
jb
les
rcr
loop
jb
ins
adc
mov
or
mov
adc
lods
mov
jge
adc
ret
in
imul
in
xchg
add
jb
xlat
ret
aam
inc
mov
movs
shl
stos
xchg
xchg
push
xchg
adc
pop
inc
fs
add
shl
xchg
xchg
add
push
int
in
inc
cs
cdq
test
jecxz
cdq
cmp
cdq
or
sbb
push
xchg
inc
sub
in
lds
xchg
cdq
adc
adc
nop
push
cmp
dec
aad
inc
test
or
and
rol
add
and
(bad)
push
mov
push
sbb
dec
iret
jle
pusha
or
cmp
add
and
int
jns
or
sbb
ret
iret
repz
sahf
mov
iret
repz
push
ds
or
mov
call
add
repz
lods
push
mov
cmp
cmp
sub
push
sahf
out
fist
xchg
jl
push
out
out
inc
cmp
push
push
pop
dec
cmp
sbb
cmp
sar
fmulp
mov
repz
mov
ret
into
sbb
(bad)
lahf
out
out
add
es
loop
(bad)
sbb
out
aam
mov
xrelease
sbb
out
sahf
out
scas
retf
iret
repz
or
and
pop
data16
repz
test
iret
repz
fsubrp
(bad)
sbb
repz
(bad)
ss
inc
push
sar
out
pusha
inc
out
jb
jle
sahf
mov
mov
rol
loop
clc
adc
sub
pusha
test
sbb
je
fs
push
cmp
push
daa
pop
mov
jbe
cmp
cli
jbe
ins
push
jnp
push
cwde
cmps
ins
mov
iret
dec
test
mov
mov
fidiv
xchg
push
jbe
push
scas
test
sub
pop
les
jmp
mov
out
inc
addps
pop
out
add
xor
push
retf
pop
jle
sub
sub
scas
lea
inc
or
dec
push
je
outs
xchg
inc
mov
add
fwait
push
outs
push
add
ja
or
(bad)
push
jno
mov
es
ja
mov
and
daa
rcl
fld
aaa
outs
or
jo
mov
pop
fsub
rol
pop
mov
push
ret
out
xor
sub
sub
push
jl
push
dec
cmp
(bad)
or
das
outs
push
mov
mov
inc
jae
int
xchg
jae
or
or
push
imul
mov
add
or
cmp
fcom
jno
or
and
inc
and
mov
pop
inc
sbb
sub
inc
cs
outs
adc
mov
daa
add
cmp
inc
dec
sbb
cmp
mov
dec
or
das
jg
mov
add
cmp
rsm
jecxz
arpl
push
dec
inc
push
push
inc
push
inc
pop
inc
int3
fwait
retf
shr
ror
cmps
xchg
jb
inc
sub
jo
popf
cmc
pop
ins
sbb
cmc
and
pop
dec
imul
mov
jae
inc
jne
fcomp
dec
loope
je
arpl
xor
pop
mov
ss
inc
xor
push
xor
xor
cmp
sub
inc
inc
xor
xor
mov
mov
xor
jge
xor
xor
inc
xor
xor
ss
push
sub
sub
cmp
xor
clc
inc
inc
xor
mov
aam
mov
bswap
fadd
jne
test
xor
jo
retf
fidivr
cmp
add
xor
or
push
loope
(bad)
and
inc
aaa
adc
xor
inc
pop
dec
add
mov
jl
mov
cmp
arpl
push
sbb
inc
push
inc
push
dec
and
fsubr
cmp
ss
pushf
xor
inc
jno
rol
dec
outs
mov
xor
xchg
test
mov
int3
in
scas
mov
ss
push
dec
hlt
imul
ficom
pop
push
call
push
inc
out
iret
sar
xor
sub
out
cmp
(bad)
in
xor
in
mov
lods
sahf
imul
(bad)
add
movd
mov
iret
jo
jmp
xchg
loopne
add
jg
mov
scas
test
and
outs
xor
jno
jmp
push
ss
je
push
push
ins
int3
retf
push
inc
cmp
adc
mov
sbb
inc
push
in
cmp
sub
cmp
lods
scas
fld
inc
mov
and
sub
push
sar
inc
arpl
ins
mov
test
aaa
xchg
and
outs
ret
retf
xor
(bad)
fs
add
dec
inc
xor
rcr
cmp
add
ins
daa
pop
push
push
out
pusha
pop
pop
add
imul
pop
and
adc
ins
mov
out
push
and
jl
jb
and
or
imul
imul
mov
or
je
dec
xchg
scas
imul
push
(bad)
jo
jo
test
(bad)
jecxz
cwde
dec
fwait
sbb
imul
jp
push
cwde
movs
jmp
ret
cmc
cmp
arpl
inc
cs
push
push
push
add
(bad)
ja
fldenv
fild
adc
pop
xchg
push
popa
imul
add
fs
cmc
xor
or
sbb
fdiv
pop
pop
add
and
push
add
mov
xor
adc
push
repnz
adc
sbb
mov
xor
(bad)
dec
ror
aas
inc
or
or
xchg
xchg
and
xchg
pushf
add
sbb
push
add
xor
jg
inc
mov
inc
adc
or
ret
enter
or
mov
fadd
sahf
out
es
or
or
sar
adc
xchg
add
adc
xchg
adc
push
cmps
stc
cmp
sbb
sbb
(bad)
sbb
sar
sbb
std
sbb
push
out
iret
jae
push
pop
nop
cld
and
mov
js
jns
stc
out
sahf
imul
cld
fdivr
add
cmps
inc
dec
cwde
pop
sbb
add
mov
aad
mov
out
les
or
pop
mov
and
lds
add
movups
test
push
ds
cmp
sbb
test
push
dec
pop
jns
iret
lods
(bad)
adc
push
cld
or
in
jns
out
int3
les
movs
xor
out
out
nop
mov
mov
jl
ins
push
repz
pop
mov
out
sahf
dec
dec
inc
inc
cmp
cmp
repz
xor
sub
and
repz
and
adc
or
iret
repz
add
cld
or
jns
out
hlt
call
jns
out
movs
nop
jo
iret
sar
adc
pop
int3
mov
cmp
repz
inc
sub
adc
sahf
out
or
push
fcom
(bad)
out
sahf
out
cwde
js
sub
repz
add
add
mul
cmp
cld
add
call
les
mov
or
pop
inc
pop
pop
les
adc
pop
pushf
mov
loop
and
mov
xor
jnp
and
sub
adc
mov
xor
pop
push
inc
dec
cmp
js
or
test
stos
add
mov
and
lods
inc
adc
lock
sub
(bad)
push
jecxz
sbb
dec
push
rol
aas
mov
mov
jno
cli
out
dec
and
pop
lods
cwde
and
sub
lds
push
jmp
ss
pop
mov
sbb
jmp
mov
jae
jbe
(bad)
dec
adc
les
xchg
outs
movs
inc
dec
add
(bad)
(bad)
(bad)
(bad)
js
shr
mov
pushf
and
rol
ret
jns
pop
push
add
(bad)
adc
rcl
and
add
push
inc
push
xor
xchg
cld
inc
inc
mov
jnp
test
rcr
add
jne
pop
adc
ins
add
call
xor
push
je
imul
inc
xchg
pop
dec
mov
arpl
imul
xor
dec
or
jne
adc
jo
bound
xor
dec
daa
jo
jnp
push
push
push
ins
das
inc
xlat
lods
and
outs
jl
lods
pop
mov
ja
lahf
pop
lods
or
mov
loopne
leave
jae
add
mov
mov
nop
or
and
and
int3
dec
enter
inc
sub
enter
aas
jg
fmul
in
push
cmp
ins
xchg
(bad)
(bad)
aas
sete
adc
test
jae
jmp
add
mov
jecxz
in
scas
pop
rcr
add
(bad)
cdq
ss
call
xchg
mov
push
retf
les
mov
and
inc
(bad)
or
push
popf
jl
sbb
jo
in
push
aas
sbb
jg
cmps
jg
mov
popa
dec
and
or
mov
adc
and
mov
cs
jecxz
enter
pop
dec
push
adc
cmp
sar
jnp
(bad)
out
shl
adc
dec
arpl
data16
ins
adc
fs
imul
dec
mov
xor
dec
jecxz
sahf
loopne
daa
imul
ja
leave
sbb
dec
mov
push
push
xor
fcmovbe
mov
dec
pop
sbb
pop
add
dec
sbb
inc
je
dec
cmp
les
jge
ltr
std
stos
push
jb
push
call
sbb
push
and
clc
outs
dec
ins
add
push
push
add
push
outs
ja
xor
cmc
xchg
call
retf
gs
sub
add
ja
or
movs
and
sbb
rol
dec
inc
repnz
sar
test
lods
or
in
mov
jmp
mov
add
mov
push
jb
or
mov
adc
inc
add
imul
arpl
add
outs
push
add
push
imul
add
push
(bad)
mov
jae
outs
iret
mov
push
jae
push
popa
sbb
sub
mov
jb
inc
mov
pop
fmul
out
adc
cmp
push
jae
inc
add
push
jno
mov
push
add
and
es
dec
add
pop
rcl
inc
push
mov
push
push
sbb
das
push
mov
dec
or
cmp
push
jo
jb
js
out
fidivr
imul
xchg
test
cmps
sbb
push
lods
cmps
xor
mov
sbb
imul
xchg
adc
mov
inc
and
pop
jnp
inc
(bad)
pusha
inc
and
mov
push
inc
sub
and
in
retf
push
cmps
xchg
xor
test
sub
adc
inc
add
adc
push
fbld
jne
ret
fisub
gs
or
(bad)
fld
inc
rol
fstp
push
jecxz
jo
es
pop
push
ret
sar
cmps
mov
dec
inc
dec
jmp
cmps
jno
push
nop
pop
ds
inc
sub
xor
pop
dec
xor
dec
lock
pop
icebp
ss
cdq
mov
call
sbb
out
mov
fidivr
and
adc
jecxz
inc
push
call
popf
lea
lahf
outs
xor
adc
and
or
dec
add
shl
push
sar
pop
outs
sub
dec
(bad)
mov
shr
inc
add
stc
add
push
call
or
mov
add
push
dec
dec
dec
bound
pop
pop
pop
addr16
inc
jns
ins
mov
arpl
lds
mov
retf
fimul
outs
cmp
sar
xchg
dec
and
clc
aad
rol
push
adc
add
sbb
cmp
test
sbb
lock
jecxz
mov
add
xchg
popa
xor
push
js
loopne
mov
sbb
mul
adc
mov
inc
jmp
sbb
das
push
mov
dec
inc
dec
pop
or
adc
jb
aas
inc
cmc
lods
inc
inc
sbb
out
jnp
ja
xchg
jno
stos
enter
xor
(bad)
xor
mov
jp
mov
(bad)
pop
jnp
stos
iret
add
jo
add
add
outs
inc
movs
rcl
pop
mov
fs
xor
sub
daa
dec
ds
xor
cmps
aam
pusha
push
jo
jno
mov
loopne
arpl
dec
xchg
mov
in
jmp
or
jmp
dec
imul
add
mov
int
sbb
retf
xchg
into
out
outs
cli
mov
fwait
inc
cmps
add
push
mov
jo
jo
imul
push
push
test
sub
imul
jns
bound
clc
add
inc
jae
adc
sbb
inc
jmp
push
je
ja
add
(bad)
jno
outs
xor
and
add
xor
xchg
sub
out
jno
rol
out
into
ins
retf
pop
mov
sbb
add
cmp
cmp
push
dec
(bad)
xor
sbb
push
sahf
ret
fbld
retf
fbld
ds
rcl
ficomp
mov
push
popa
sbb
scas
std
fwait
xchg
and
push
(bad)
and
inc
cwde
ins
adc
jecxz
add
xor
in
mov
sbb
jae
lock
and
mov
add
pop
pop
push
ins
push
sbb
xchg
pusha
idiv
sub
iret
icebp
pop
and
outs
mov
add
sahf
and
add
inc
mov
mov
add
add
xor
pop
gs
cmp
lods
dec
cmp
inc
xor
sti
fsubr
push
or
push
ret
int3
jo
pusha
jmp
pop
pushf
xlat
or
hlt
(bad)
mov
rcr
push
add
adc
daa
adc
add
test
gs
adc
push
mov
and
daa
sbb
jns
xlat
mov
or
repz
add
out
lock
repz
mov
jns
rep
test
pop
mov
sahf
cwde
xchg
nop
mov
jo
pusha
push
pop
push
repz
repz
cmp
and
shr
sbb
cld
in
lock
loopne
fmul
repz
ror
sar
cmp
je
push
cmp
cmp
repz
and
adc
imul
in
hlt
in
lahf
out
sahf
in
int3
mov
sahf
mul
xchg
push
mov
js
push
iret
repz
and
or
adc
popf
jmp
lea
or
add
add
push
or
push
(bad)
cmp
mul
and
sahf
call
and
out
idiv
mov
push
nop
ins
and
sbb
and
and
test
inc
adc
idiv
adc
fild
pop
jg
fs
inc
dec
pop
mov
cmps
mov
and
sbb
jmp
or
daa
mov
dec
pop
je
push
jne
xor
test
cs
and
add
ins
mov
push
pop
jo
add
add
xor
add
fcom
loope
push
xchg
and
inc
and
outs
push
push
jae
and
sub
icebp
pop
adc
xor
and
sbb
xor
ror
and
cmp
or
fwait
xor
(bad)
ins
mov
and
xor
repz
imul
sbb
cmp
pop
loope
and
and
add
jbe
add
sbb
jb
jne
sbb
mov
popa
ins
into
fdiv
das
sti
sbb
jmp
push
sbb
inc
add
inc
pop
pop
adc
(bad)
(bad)
in
and
aam
add
xor
xor
sbb
bound
loopne
sbb
das
xor
(bad)
(bad)
push
xor
xor
xor
xor
xor
xor
xor
movs
xor
xor
xor
xor
(bad)
(bad)
(bad)
push
xor
xor
xor
xor
xor
xor
dec
xor
xchg
shl
push
dec
ss
es
dec
aaa
push
aaa
mov
iret
aaa
call
aaa
adc
(bad)
call
cmp
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
(bad)
push
cmp
cmp
cmp
data16
cmp
cmp
cmp
cmp
cmp
cmp
or
out
out
cmp
cmp
cmp
sub
ret
add
push
lock
idiv
shr
cmp
xchg
add
adc
and
dec
pop
lock
push
push
xor
xor
js
popf
xor
xor
(bad)
xor
xor
(bad)
(bad)
dec
push
xor
xor
xor
xor
xor
xor
loopne
(bad)
jmp
jge
xor
xor
jge
mov
xor
xor
fidiv
cld
(bad)
(bad)
mov
les
fnsave
out
xor
jmp
jno
cdq
ss
ss
ss
aaa
sbb
jno
mov
inc
retf
aaa
loopne
add
or
pop
(bad)
(bad)
(bad)
(bad)
cmp
outs
cmp
cmp
cmp
cmp
or
cmp
cmp
cmp
push
cmp
jl
cmp
nop
cmp
cmp
cmp
push
adc
cmp
cmp
nop
hlt
(bad)
(bad)
cmp
cmp
pop
cmp
imul
cmp
cmp
(bad)
(bad)
call
ds
ds
test
mov
aas
adc
xor
inc
aas
popa
aas
add
(bad)
(bad)
aas
cdq
aas
mov
les
into
aas
out
jmp
repz
cmp
pop
xor
xor
xor
fdiv
fnsave
jmp
(bad)
(bad)
(bad)
push
mov
xor
xor
xor
xor
pop
xor
xor
xor
xor
xor
(bad)
inc
add
daa
xor
xor
xor
pop
xor
jo
xchg
xor
push
xchg
(bad)
aam
inc
xor
xor
xor
xor
jl
(bad)
jmp
xor
push
sub
ss
clc
loop
cmp
(bad)
(bad)
(bad)
(bad)
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
mov
xchg
cmp
cmp
xor
dec
(bad)
cmp
cmp
xchg
aas
inc
aas
pop
aas
ja
clc
xchg
adc
pop
push
or
cmp
cmp
xchg
pop
xor
push
xor
xor
xor
xor
xor
jg
clc
hlt
xor
xor
ret
xor
xor
(bad)
aas
(bad)
jg
call
xor
xor
xor
test
mov
mov
nop
xor
cwde
xor
lock
clc
xor
cmp
jmp
xor
cmp
cmp
cmp
cmp
cmp
cmp
loop
call
cmp
cmp
cmp
cmp
jp
cmp
cmp
std
cmp
cmp
test
loop
cmp
xchg
adc
sbb
(bad)
jg
sub
das
cmp
ds
fidivr
jmp
cld
and
xor
mov
ss
ss
xchg
mov
cwde
cmp
test
lods
cmp
cmp
mov
cmp
inc
std
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
jmp
jg
(bad)
cmp
dec
aas
push
mov
cmp
aas
sar
aas
in
(bad)
cs
mov
and
sub
mul
xor
xor
xor
fisubr
jg
xor
xor
loop
xor
xor
xor
mov
call
jge
xor
xor
scas
std
xor
cmps
data16
ss
ss
(bad)
(bad)
push
or
aaa
and
aaa
dec
aaa
dec
aaa
push
aaa
pop
sbb
(bad)
push
imul
xchg
mov
xchg
aaa
mov
aaa
xor
cmp
xchg
(bad)
dec
cmp
pusha
cmp
mov
cmp
cmp
sbb
push
(bad)
clc
pop
(bad)
cmp
inc
cmp
dec
cmp
popa
cmp
cmp
cmp
jg
nop
cmp
cmp
cmp
or
cmp
cmp
cmp
cmp
cmp
bnd
adc
push
cld
cmp
cmp
cmp
adc
inc
cmp
push
cmp
pop
cmp
jb
js
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ret
(bad)
mov
dec
cmp
inc
cmp
pop
cmp
push
cld
(bad)
dec
cmp
mov
jp
jg
cwde
ds
ds
ds
sbb
(bad)
(bad)
out
ds
das
aas
cmp
je
jge
mov
movs
aas
stos
aas
mov
mov
jmp
daa
or
push
xor
ins
stos
call
sahf
xchg
les
fidiv
in
hlt
jg
mov
and
sub
cmp
jb
mov
jg
(bad)
push
retf
xor
xor
xor
xor
mov
jl
cmps
xor
clc
fnsave
add
scas
jno
xchg
xor
xor
xor
std
(bad)
mov
push
xor
xor
mov
ret
aaa
xchg
aaa
fwait
hlt
jg
jge
cmps
mov
bound
scas
cmp
ss
scas
jp
cmp
fdivr
aaa
cmp
jmp
fistp
in
mov
or
cmp
cmp
cmp
cmp
push
or
nop
sbb
xor
cld
(bad)
dec
xor
xor
bound
data16
push
outs
aaa
jb
jbe
xchg
(bad)
(bad)
jg
ja
js
jge
(bad)
cmp
cmp
cmp
cmp
cmp
and
outs
cmp
mov
pop
clc
jg
cmp
ja
lahf
xor
xchg
aas
push
mov
scas
pop
inc
xor
(bad)
mov
xor
xor
(bad)
jg
test
jl
fiadd
aaa
mov
(bad)
jmp
repnz
or
cmp
(bad)
jmp
cmp
jge
mov
cmp
cmp
jbe
xchg
cmp
fbstp
cmp
mov
and
(bad)
cmp
cmp
mov
std
fdivr
push
aas
jne
mov
or
jg
jg
mov
fwait
xor
xor
dec
or
lock
sub
aas
xor
div
pop
xor
inc
mov
fsub
adc
es
dec
ss
outs
idiv
or
movs
ss
enter
in
and
cmp
cmp
cmp
mov
pop
mov
mov
push
cmp
pop
push
imul
cmp
call
loopne
cmp
cmp
dec
cmp
cmp
call
pusha
data16
aam
fnstsw
jecxz
imul
mov
cmp
cmp
adc
sar
inc
cmp
or
cmp
and
push
cmp
cmps
ds
ds
ret
idiv
add
push
push
sub
aad
jne
mov
push
xor
aad
(bad)
aas
shl
cmp
or
xor
xor
xor
xor
xor
mov
push
xor
xor
add
xor
ds
dec
aaa
pop
aaa
or
jg
js
mov
stos
cli
fidiv
out
in
aaa
cli
aaa
mov
scas
inc
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
or
or
cmp
cmp
cmp
adc
jbe
cmp
cmp
cmp
cmp
cmp
adc
and
pusha
aas
cmp
aas
fdivr
lahf
js
clc
loop
out
out
pop
rcl
sub
push
loope
jne
adc
xor
jae
cmp
jne
jg
xchg
xor
hlt
push
mov
xor
xor
js
xor
xor
or
daa
pop
jmp
(bad)
(bad)
(bad)
jg
xor
sbb
sbb
sub
sub
nop
cmp
mov
cmp
cmp
cmp
not
cmp
cmp
jmp
xor
xor
aaa
call
inc
xor
xor
call
dec
lods
xor
or
mov
xor
xor
sar
repnz
xor
cmp
sub
sub
xor
pop
(bad)
(bad)
cmp
inc
cmp
cmp
cmp
jmp
push
mov
fidiv
cmp
cmp
mov
lahf
and
push
mov
rcl
cmp
mov
cmp
cmp
mov
cmp
mov
lock
dec
cld
push
add
sar
or
adc
sbb
and
and
sub
sub
icebp
pop
cmp
xor
cmp
inc
cmp
cmp
call
jg
pop
cmp
cmp
ins
cmp
je
jo
(bad)
cli
jl
cmp
push
mov
nop
xchg
cwde
es
pop
pop
mov
sub
xor
inc
mov
(bad)
dec
push
aas
push
aas
xchg
aas
cwde
aas
lods
aas
mov
shr
aas
fdivr
jge
lock
loopne
clc
jbe
push
or
xor
fild
cwde
xor
xor
inc
xor
xor
mov
nop
xor
xor
fsub
cmp
mov
mov
xor
pusha
xor
pop
popa
and
fimul
xor
(bad)
ss
(bad)
jmp
shl
aam
fdiv
fdiv
loopne
in
call
cmp
hlt
ss
ss
add
add
or
or
adc
adc
aaa
sbb
and
(bad)
(bad)
aas
cli
and
sub
sub
xor
cmp
cmp
inc
aaa
inc
aaa
dec
jb
aaa
test
call
aaa
pop
aaa
pusha
aaa
jo
je
jl
xor
aaa
mov
mov
aaa
xchg
aaa
cwde
into
mov
dec
(bad)
dec
xor
enter
shl
aam
fdiv
fcomp
and
lock
hlt
sub
inc
xor
aaa
hlt
add
or
adc
ja
push
loopne
cmp
out
mov
ret
fdivr
mov
cmp
pop
(bad)
jmp
cmp
cmp
cmp
sub
cmp
cmp
pop
(bad)
div
cmp
push
cmp
(bad)
jmp
test
mov
mov
cmp
mov
mov
cld
mov
cmp
xor
pop
stos
add
movs
fs
(bad)
retf
lods
pop
push
aaa
cmps
punpcklbw
icebp
push
fnstenv
retf
aaa
mov
aaa
stos
mov
push
retf
aaa
jmp
add
aas
push
aaa
mov
sub
pusha
mov
xchg
lahf
push
xor
stc
xor
movs
dec
loope
add
in
or
cmp
or
dec
add
add
mov
hlt
push
out
sub
test
(bad)
out
xor
test
push
xor
sub
or
add
sub
ins
leave
repz
mov
cwde
jo
rcr
rol
pop
aam
or
fs
out
push
pop
xor
cmps
dec
pop
or
mov
pushf
daa
(bad)
sub
mov
push
sub
xor
ret
add
aas
jl
fst
gs
inc
leave
xchg
jo
or
fs
mov
gs
and
loopne
sbb
push
mov
and
popa
adc
outs
and
and
mov
add
inc
call
xchg
inc
popf
xchg
cmp
test
je
jae
xor
and
bound
jle
cld
inc
in
(bad)
and
jl
or
inc
jb
fisttp
inc
mov
cmps
xor
mov
leave
xchg
lock
call
test
addr16
xchg
and
xchg
or
sub
and
jbe
call
fwait
push
in
jecxz
add
push
mov
mov
lahf
cmps
jge
je
mov
adc
add
push
rcr
jp
mov
movs
jle
fbstp
jmp
fadd
out
fcmovnbe
or
push
dec
ss
adc
test
lock
pop
in
or
movs
or
sbb
int
add
or
out
jbe
pop
and
xor
les
das
or
push
add
pop
sbb
sbb
outs
cwde
retf
mov
add
pop
std
sub
lea
fs
out
cmc
mov
jmp
in
sub
inc
cmp
jne
neg
mov
std
adc
inc
add
inc
pop
jmp
adc
push
call
mov
inc
add
adc
dec
cdq
jmp
mov
xchg
or
sub
or
inc
cmp
cdq
adc
int
pop
push
add
dec
add
pop
aaa
movs
push
clc
pop
add
mov
adc
add
pop
jbe
inc
loop
sbb
sub
jo
xchg
popa
movs
cs
sbb
je
enter
cld
pop
fld
and
push
pop
sar
jo
inc
or
ss
aas
lea
sbb
inc
daa
fwait
je
clc
fnsave
cmp
or
add
dec
test
mov
sbb
mov
xchg
test
mov
lods
adc
mov
add
mov
retf
add
iret
inc
mov
out
adc
adc
jb
adc
lea
push
fisub
fsub
sar
mov
ror
outs
push
mov
push
in
adc
add
fimul
and
mov
(bad)
jecxz
adc
loop
push
mov
push
stos
add
xor
loope
xor
mov
aad
pop
push
mov
cmp
pusha
dec
or
js
sub
pop
stos
rcl
mov
test
mov
mov
mov
sar
sub
and
in
cmps
sub
sbb
out
mov
int3
lock
sub
or
or
leave
leave
inc
jo
xchg
mov
ret
adc
xor
mov
cmp
mov
cmp
or
fild
jmp
and
mov
rol
jl
adc
xor
loop
lods
adc
adc
(bad)
or
gs
push
adc
popf
adc
mov
xor
or
cmp
pushf
cmp
call
cmp
cmp
lahf
jmp
cmp
dec
inc
gs
mov
xor
add
test
retf
mov
dec
lods
push
inc
in
mov
and
(bad)
in
mov
loope
mov
aaa
push
push
mov
pop
aaa
je
mov
test
add
or
inc
jmp
(bad)
cmp
scas
stos
stos
xor
sub
pop
pop
mov
mov
or
add
adc
pop
aad
mov
inc
mov
mov
out
mov
sbb
mov
and
je
push
push
sbb
inc
mov
nop
inc
dec
sub
adc
sbb
arpl
xchg
pop
cli
sbb
iret
loopne
dec
sbb
pop
not
pop
xor
lock
jl
dec
mov
jnp
call
mov
stc
jbe
ret
call
call
dec
pop
sahf
jbe
jne
sub
inc
and
xchg
push
adc
(bad)
sti
mov
push
cmp
popa
or
nop
lods
push
cwde
scas
or
jb
push
and
jmp
sub
sbb
call
add
adc
fsub
fimul
test
jge
or
pop
mov
push
add
cmps
push
add
xchg
add
and
sub
popa
inc
add
pop
dec
adc
outs
add
stc
sbb
jno
and
or
pusha
sub
add
adc
in
gs
movs
mov
sbb
xor
push
add
sub
sbb
or
mov
adc
mov
cmp
or
xor
and
pop
adc
or
xchg
xchg
and
adc
call
or
mov
(bad)
mov
add
dec
push
fisttp
cmp
sbb
xor
in
mov
add
pop
fist
into
sti
or
ins
sub
ret
cmps
add
ins
push
pushf
retf
jl
fs
push
fistp
shl
jne
cmp
adc
mov
xchg
rcr
ss
jae
hlt
jmp
nop
shl
(bad)
mov
(bad)
retf
and
addr16
sub
jae
and
sar
pop
nop
and
aam
jmp
sub
fnstcw
mov
loopne
add
mov
sbb
and
lea
inc
mov
fidivr
push
ins
fs
push
xchg
jns
push
dec
inc
rol
jmp
test
mov
push
ja
sub
and
sbb
in
movq
and
div
adc
xor
pop
nop
inc
push
fs
add
jg
push
push
(bad)
pop
mov
sub
push
addr16
repz
outs
mov
push
call
sahf
cmps
cmp
push
or
and
add
fwait
inc
cmp
inc
push
push
push
addr16
adc
add
xlat
xchg
inc
mov
inc
enter
stc
inc
xchg
or
mov
rol
push
cdq
dec
inc
xchg
cdq
mov
ror
jb
hlt
adc
inc
imul
mov
in
jl
mov
cdq
xchg
push
stc
adc
inc
push
call
ja
jnp
mov
pop
or
pushf
stos
jnp
repz
aad
out
call
or
popa
stos
ret
cmps
push
push
xchg
adc
cmp
enter
daa
or
daa
push
xchg
add
dec
rcr
daa
daa
daa
adc
dec
shl
daa
daa
movs
imul
sbb
jae
sub
sub
sub
add
xchg
sub
call
sub
cmps
imul
rcl
sub
sub
sub
dec
test
or
jp
jo
cmp
shl
mov
sub
or
daa
and
sub
ins
jns
push
cdq
push
xor
push
nop
imul
jl
sbb
fstp
fwait
dec
in
push
lock
jp
or
clc
fs
sub
or
sbb
add
and
call
and
and
div
add
or
xor
and
sub
enter
mov
adc
pop
adc
addr16
push
rcl
rcr
cmovl
enter
hlt
pop
sub
movs
jle
movhpd
in
mov
adc
mov
push
cmp
or
adc
repnz
es
inc
and
test
sub
and
sahf
xchg
test
(bad)
scas
xor
adc
xor
into
out
adc
inc
loopne
add
addr16
cmp
inc
fstp
sub
call
call
inc
xchg
cdq
mov
int
mov
and
jmp
add
mov
or
scas
pop
mov
jb
icebp
pop
mov
rol
pop
sti
inc
ret
and
add
les
ds
cdq
cwde
pop
push
call
enter
xor
imul
inc
mov
loop
sbb
outs
cdq
mov
mov
push
xor
and
cdq
or
cwde
fmul
pop
cmp
sbb
add
dec
mov
mov
or
sti
sbb
test
mov
scas
mov
cdq
aaa
nop
jo
adc
xchg
jmp
add
inc
data16
mov
adc
lods
mov
mov
sub
shl
inc
sub
adc
daa
or
inc
mov
xlat
push
adc
mov
mov
ins
xchg
xchg
jmp
outs
adc
dec
shl
inc
mov
js
adc
sti
out
and
sub
dec
inc
outs
imul
pop
push
add
and
xchg
push
mov
adc
mov
inc
enter
pop
aam
pop
in
xor
pop
sbb
dec
adc
stos
jmp
dec
jnp
sub
loopne
and
dec
inc
imul
aam
adc
adc
in
fisub
mov
sub
adc
sub
add
inc
jne
nop
sub
loopne
inc
pop
mov
fucom
add
or
inc
call
adc
ss
sub
pop
adc
test
pop
push
adc
push
pop
jmp
pop
or
and
mov
or
inc
pop
ss
or
adc
mov
mov
adc
push
xchg
adc
sbb
add
sub
mov
adc
scas
xor
pushf
pop
adc
pop
add
je
mov
jb
jmp
adc
adc
fcom
or
cld
fstp
pop
test
cs
(bad)
dec
in
push
ror
mov
xchg
adc
pop
enter
mul
pop
add
cs
inc
or
pop
and
movs
fwait
mov
pop
push
sbb
and
mov
push
xor
and
add
mov
ret
fwait
pushf
adc
imul
fld
mov
pop
xor
loopne
xor
shl
pop
mov
inc
xor
movs
hlt
pop
fs
mov
xchg
fs
push
fs
inc
dec
dec
dec
addr16
inc
pop
cmp
xchg
pop
nop
pop
mov
mov
mov
push
call
nop
out
jg
pop
dec
adc
(bad)
cmp
outs
adc
fdiv
lds
mul
pushf
sub
(bad)
loop
les
dec
pop
dec
or
lods
jecxz
inc
pop
call
xor
enter
std
pushf
out
add
sub
test
pushf
nop
jo
nop
ror
movs
add
xchg
inc
cmp
out
add
and
dec
xor
jno
imul
ins
xor
add
xor
xor
push
sub
pop
xor
pop
(bad)
call
ja
cmp
push
add
xchg
add
lods
sbb
cld
xchg
nop
seto
xlat
inc
popa
retf
cmp
aas
sub
push
sub
or
cmps
pop
fstp
cwde
sub
ffree
loop
cmps
pusha
ss
(bad)
in
sub
fdiv
mov
fwait
cli
or
xor
push
sbb
in
or
fst
pop
repnz
fdiv
(bad)
aam
push
mov
pop
lods
retf
call
push
test
dec
out
mov
enter
ror
cmp
cmp
mov
dec
lock
out
das
inc
push
add
adc
push
int3
dec
fmul
inc
stos
arpl
and
data16
(bad)
fisub
loop
dec
frstor
shl
loopne
xchg
iret
xor
je
fs
push
pusha
inc
ds
clc
pushf
data16
sbb
xor
in
loopne
nop
loopne
nop
push
dec
and
loopne
sub
jb
in
repnz
add
and
or
movs
imul
push
daa
sub
shr
adc
or
add
movs
daa
jnp
add
movs
daa
fwait
call
and
or
xor
loopne
inc
ret
and
adc
cdq
movs
and
xlat
mov
es
inc
ret
push
cdq
push
inc
ret
jge
push
mov
popf
in
xlat
inc
mov
fcom
mov
push
push
adc
jl
test
ror
xchg
loope
cld
push
push
inc
jmp
or
cdq
cmps
mov
std
or
in
popf
fisttp
leave
out
lea
add
(bad)
mov
push
adc
js
adc
jns
retf
fdivr
loope
dec
push
xor
inc
sbb
jle
inc
or
add
push
retf
add
cmp
fdiv
fdivr
inc
mov
and
cs
adc
inc
ss
cmp
dec
mov
push
outs
push
sbb
shl
adc
call
inc
sahf
mov
int
xor
adc
sub
pop
xor
pop
adc
in
cmc
mov
xchg
lea
add
mov
jmp
ret
call
push
jns
mov
xchg
and
je
xchg
xor
push
add
ret
mov
xchg
js
jl
push
cmps
ror
add
mov
or
xchg
inc
push
mov
add
mov
inc
inc
icebp
gs
or
and
and
pop
cmp
jl
xor
test
push
inc
adc
add
jp
sub
pushf
inc
pop
inc
sub
jge
add
or
out
or
mov
dec
pop
arpl
mov
sbb
sbb
ins
ret
popf
jecxz
jne
xchg
adc
fild
sbb
or
(bad)
adc
stos
and
fild
fild
inc
cdq
sbb
ss
cmp
in
xchg
pop
dec
pushf
push
cmps
xchg
inc
xchg
push
fadd
cmc
shr
adc
sbb
cmp
xor
inc
sub
mov
jae
dec
fsub
xor
mov
out
mov
fiadd
pop
push
xchg
adc
pusha
inc
adc
inc
ins
xchg
sub
pusha
inc
ins
xchg
sahf
es
push
inc
xchg
into
enter
xchg
retf
fstp
jns
js
cmp
sahf
push
fldcw
inc
ins
rol
jns
rcr
sahf
in
aam
xchg
or
cmc
rcr
push
test
xor
and
add
mov
or
add
mov
or
repnz
leave
rcl
cmps
pop
xchg
inc
mov
imul
leave
ror
ins
fdivr
rcr
xor
dec
out
jns
xchg
imul
sub
add
jmp
cmp
mov
call
dec
xchg
xchg
mov
movs
pop
mov
xchg
lods
jl
add
jmp
js
dec
(bad)
call
pop
mov
sub
sub
xor
pusha
bound
stos
retf
or
jbe
call
adc
push
(bad)
int
fld
or
test
jb
sub
aam
fcom
cmps
retf
and
pushf
or
adc
ss
inc
push
cmps
in
ds
lea
cmps
mov
aaa
mov
loope
xor
int
inc
lods
jne
repnz
leave
call
adc
push
int
sbb
loopne
jb
jge
int3
push
pop
(bad)
das
push
in
mov
dec
int3
pop
ins
push
aad
jmp
jmp
shr
jo
push
inc
and
pop
mov
lods
inc
cmp
cmp
dec
inc
fld
test
adc
and
sub
ss
call
cs
pop
xchg
mov
inc
or
pop
loopne
mov
add
fild
xchg
xor
not
lds
add
lods
adc
aaa
add
enter
mov
and
mov
push
das
push
push
and
fist
xchg
inc
and
pop
iret
(bad)
ret
xchg
mov
in
xchg
xchg
mov
fist
sub
add
push
pop
cmp
ret
add
fild
imul
inc
or
or
inc
or
mov
fidivr
mov
sub
push
cmp
jno
in
dec
loopne
aaa
out
jns
push
push
rcl
test
(bad)
push
or
daa
fild
fld
call
mov
je
fild
mov
(bad)
or
xchg
mov
fisttp
or
aaa
(bad)
ret
shl
jle
or
add
or
mov
test
add
loopne
daa
xchg
outs
fild
sub
sbb
dec
jno
fcom
fucomip
(bad)
in
xor
push
iret
leave
rol
mov
sub
lock
iret
loope
push
mov
int3
add
sub
adc
pop
aas
dec
pop
mov
xchg
xchg
xchg
xchg
mov
adc
xchg
mov
hlt
mov
xchg
mov
aam
int3
nop
xchg
xchg
xchg
mov
mov
repnz
mov
xchg
mov
mov
jno
repnz
repnz
mov
xor
and
sbb
and
add
push
jb
and
(bad)
mov
enter
mov
stos
mov
lahf
mov
pop
jb
mov
and
cmp
gs
nop
sbb
mov
enter
and
in
pop
cmp
mov
jb
sbb
(bad)
mov
inc
pop
mov
mov
pushf
mov
push
jb
cmp
mov
enter
dec
mov
in
cmp
jb
mov
and
cmp
(bad)
mov
sub
mov
inc
mov
mov
and
call
jp
repnz
rcr
xor
mov
mov
fist
and
jb
mov
enter
sbb
sbb
xor
daa
cli
mov
jb
mov
(bad)
cmp
int
dec
cmp
cmp
mov
pushf
xor
inc
inc
mov
rol
cli
dec
in
jae
jl
dec
dec
push
pusha
sub
add
lock
and
mov
or
push
test
movs
rol
add
dec
or
addr16
push
adc
inc
add
push
cwde
sbb
adc
sbb
lods
or
dec
push
leave
xchg
stc
sub
jb
aam
push
jb
repnz
cmc
pop
adc
jmp
loop
add
or
test
and
mov
cmp
inc
enter
mov
icebp
rol
mov
or
dec
lods
push
add
adc
sub
daa
dec
cmp
add
inc
and
mov
lods
cwde
xchg
jns
sbb
push
ins
sub
sub
adc
sbb
stos
(bad)
mov
mov
(bad)
punpcklbw
inc
movs
gs
hlt
ror
dec
psrlw
inc
mov
and
sub
and
xor
mov
inc
mov
mov
jl
mov
jbe
gs
pusha
sbb
sub
(bad)
out
adc
sar
jmp
push
sbb
cmp
movs
mov
dec
sub
imul
mov
sub
xchg
sysexit
push
sub
inc
mov
inc
mov
sbb
packuswb
xor
xchg
jo
shr
ficom
push
fwait
mov
push
loope
add
inc
add
jmp
pop
addr16
and
sub
inc
xchg
xor
int3
dec
stos
mov
movs
sub
cmp
scas
or
test
and
sub
sbb
or
shl
loopne
movs
call
or
aam
mov
or
int3
test
sub
sub
gs
test
sub
or
in
mov
xchg
movs
shr
pop
or
retf
add
cmp
pop
mov
push
or
int
dec
sbb
inc
scas
push
cmp
xchg
outs
or
add
inc
movs
sub
mov
fucomp
ins
or
movs
sub
jo
fmul
mov
js
cld
or
loopne
jmp
cmp
push
call
das
gs
(bad)
and
retf
out
mov
jns
or
sub
mov
and
mov
scas
jnp
or
xchg
mov
sbb
pop
sbb
and
dec
ja
sub
popa
lods
mov
inc
sub
out
adc
movs
sub
adc
mov
or
sbb
sub
pop
dec
push
add
js
mov
inc
sub
push
lea
and
sbb
sub
sub
cmp
cmp
mov
movs
aad
sub
out
sub
jecxz
(bad)
xchg
push
cmps
push
or
jecxz
push
or
fwait
sub
ss
retf
xor
imul
call
mov
ja
pop
cmp
je
nop
imul
push
scas
sbb
rcr
not
or
sub
shl
xor
and
sbb
sub
pusha
loopne
xchg
or
xchg
scas
inc
scas
scas
xor
push
sbb
inc
test
imul
aad
loopne
ret
xchg
xor
rcl
or
sbb
sub
or
sub
push
or
and
test
movs
(bad)
mov
mov
mov
out
dec
js
sub
loopne
(bad)
xchg
mov
inc
or
or
or
mov
xchg
movs
mov
xchg
dec
xlat
stos
or
push
or
inc
dec
add
or
cmp
or
xchg
cmp
mov
or
ret
movs
sub
lock
xor
dec
sub
and
dec
neg
call
inc
sub
xchg
mov
dec
pop
cmp
pop
dec
xchg
mov
sahf
or
lahf
pop
push
test
add
push
pop
xchg
sub
push
loop
rcl
mov
dec
ror
xchg
movs
or
mov
push
jp
or
push
stos
and
or
or
or
scas
mov
js
or
cmps
les
outs
test
fwait
adc
inc
popa
mov
data16
inc
sub
pop
jmp
or
sub
cmp
pop
dec
les
push
or
out
push
retf
mov
jo
in
add
add
or
and
xchg
pop
stc
sbb
pop
xlat
test
rol
adc
mov
push
leave
xchg
push
shl
mov
dec
cmp
aaa
xchg
out
push
dec
push
test
pop
das
cmps
in
add
test
jmp
or
mov
dec
adc
xchg
inc
adc
mov
jmp
inc
inc
ja
fstp
bound
jle
mov
in
xor
dec
rcl
sbb
mov
dec
ja
cmps
mov
or
test
cwde
fs
and
sbb
jnp
addr16
mov
dec
push
push
mov
cli
sahf
arpl
movs
xor
cmps
js
mov
rcr
adc
loopne
push
mul
jns
out
cmps
push
sub
mov
out
sahf
pushf
mov
fadd
sbb
iret
repz
ss
push
pop
repz
rep
adc
iret
enter
or
push
ds
repz
pop
jb
mov
repz
pushf
mov
out
push
sahf
out
call
jns
out
pusha
jbe
test
sahf
ja
out
call
sbb
jns
out
xor
dec
pop
ins
or
add
add
sbb
fimul
push
adc
and
pop
int
and
push
inc
xor
add
ret
imul
pop
sbb
push
push
mov
repz
dec
sbb
mov
ins
ss
add
push
clc
mov
pusha
xor
ror
and
inc
mov
mov
xor
clc
mov
iret
repz
mov
add
sub
out
test
adc
adc
repz
jnp
adc
xchg
sbb
sbb
jns
out
xchg
js
or
xor
cmp
stc
mov
pop
mov
and
and
cmps
stc
pop
cmp
sbb
cmp
out
cld
cmp
test
aam
or
push
xchg
rcl
adc
add
mov
outs
sub
pop
push
xor
cmp
test
mov
xchg
push
cmp
repz
cmp
adc
jns
out
add
xchg
in
loopne
out
sahf
out
ror
enter
jns
sar
out
mov
out
sahf
out
mov
sahf
js
jo
push
jns
pop
pop
push
push
out
sahf
out
dec
inc
inc
cmp
out
sahf
cmp
sub
adc
int
jns
add
nop
fmul
repz
repz
push
call
jl
out
sahf
pusha
push
dec
inc
xor
cmp
repz
cld
mov
shl
mov
or
(bad)
lock
cmps
int3
test
push
xor
int3
mov
push
add
lock
mov
stos
fadd
pop
inc
push
fs
xchg
and
add
sub
push
aaa
xor
push
popa
addr16
push
add
and
push
xchg
or
xor
or
mov
adc
jne
aaa
shr
adc
ss
jbe
mov
xchg
(bad)
lahf
iret
(bad)
jo
mov
mov
or
daa
add
and
xchg
ins
movs
loope
xchg
adc
(bad)
add
sbb
mov
iret
xlat
mov
mov
inc
add
and
mov
ins
add
pop
cmp
data16
jo
pop
(bad)
shl
sbb
jbe
jbe
add
push
sub
mov
in
add
push
aas
or
shl
dec
enter
les
inc
pop
and
fdivr
ror
cmp
push
adc
xchg
push
pop
scas
inc
fbld
inc
sar
(bad)
inc
lahf
inc
jg
mov
jle
pop
xor
aas
test
sti
push
int3
xor
cmps
fwait
cmp
cmps
fsub
sbb
inc
cdq
fbld
(bad)
mov
add
movnti
imul
inc
mov
jo
stc
sub
movs
test
push
aas
pushf
add
sbb
ret
ins
jbe
jecxz
pop
xor
cmp
pop
stos
outs
cs
in
adc
scas
outs
lahf
inc
outs
ds
outs
clc
cmp
fldenv
subps
(bad)
inc
cmps
pop
mov
dec
push
mov
xchg
fsub
dec
cmps
mov
cld
adc
and
scas
inc
adc
and
iret
jl
xor
outs
jne
not
imul
mov
and
pop
inc
cmp
jb
(bad)
pusha
sub
jmp
retf
mov
mov
xlat
jae
xor
sbb
dec
pop
xor
les
inc
adc
push
stos
mov
xor
xor
pop
push
mov
add
mov
dec
popa
pop
inc
and
sbb
adc
push
sub
inc
jmp
add
xchg
(bad)
xlat
call
mov
add
xchg
outs
sbb
pop
push
mov
mov
mov
and
adc
xchg
add
movs
sti
loop
xor
lahf
arpl
cmps
mov
mov
mov
or
and
mov
test
and
sbb
(bad)
pop
push
aaa
add
ja
lds
arpl
outs
call
sbb
pusha
mov
ror
xchg
movs
sahf
out
test
xchg
jns
out
nop
mov
out
pop
push
pop
dec
inc
inc
cmp
repz
cmp
sub
cmp
repz
sbb
lea
adc
xchg
hlt
xchg
in
iret
repz
push
in
(bad)
enter
iret
repz
test
mov
and
outs
je
ins
push
xchg
idiv
fs
push
dec
mov
out
jl
repz
and
add
in
xchg
push
enter
cmp
mov
cmp
repz
nop
mov
jns
jo
pop
inc
cmp
iret
repz
and
adc
lock
loopne
sahf
out
int3
mov
fs
out
pop
outs
fcom
ror
adc
jmp
push
cwde
inc
dec
clc
into
data16
mov
mov
inc
xor
mov
adc
pop
sub
ja
mov
mov
pop
lods
pop
js
cs
clc
mov
sti
outs
push
jg
cld
pop
enter
js
xor
loop
call
push
ins
push
inc
aas
mov
pop
mov
or
cmp
and
add
mov
mov
sbb
fnstenv
sti
inc
xor
rcr
xor
xor
cmps
dec
icebp
call
push
adc
pop
ss
nop
ss
ins
loop
sub
ss
test
sub
xor
aaa
adc
sbb
add
jecxz
aas
cmp
fstp
push
cmp
xchg
test
mov
retf
cmp
mov
cmp
cmp
icebp
(bad)
jg
inc
jnp
cmp
adc
xor
cmp
cmp
outs
test
mov
mov
ds
ds
fdivr
(bad)
jg
add
ds
ds
ds
ds
aas
(bad)
pop
aas
and
sub
xor
aaa
fist
adc
(bad)
push
data16
jbe
jnp
fs
(bad)
aas
cmp
movs
aas
mov
sar
div
inc
lahf
push
xor
jl
xchg
cmps
mov
xor
mov
xor
mov
(bad)
xor
push
inc
xor
mov
mov
cmp
pushf
xor
xor
mov
cmp
xchg
mov
cmp
xor
inc
add
mov
inc
fdivr
int
mov
xor
outs
cmp
mov
pushf
xor
adc
(bad)
push
xor
xor
xor
xor
xor
xor
dec
ja
clc
mov
mov
ss
push
sbb
xchg
mov
test
add
add
sub
das
cmp
or
add
pop
cmp
add
pusha
mov
pop
or
cmp
xor
xor
cmp
(bad)
cmp
cmp
push
pop
cmp
pop
mov
push
outs
cmp
jo
mov
inc
faddp
js
outs
cli
outs
cmp
idiv
mov
cmp
cmp
cmp
dec
push
pusha
cld
push
shr
jle
test
dec
cmp
hlt
cmp
inc
ds
ds
ds
inc
xchg
mov
rcl
xor
xor
pusha
cld
ret
push
test
xchg
xor
push
xor
xchg
mov
fwait
(bad)
xor
xor
xor
xor
xor
inc
(bad)
(bad)
(bad)
jg
xor
xor
xor
outs
xor
loopne
repnz
dec
ss
bound
or
push
mov
test
ss
or
pop
add
fnsave
jecxz
clc
ss
ss
aaa
or
mov
xor
aaa
addr16
jno
stos
mov
sbb
push
shl
cmp
or
(bad)
sbb
pop
jecxz
sbb
cmps
test
mov
cmp
add
fbld
in
jmp
repz
cmp
cmp
cmp
and
es
cmp
cmp
call
cmp
jns
jle
xchg
mov
mov
dec
lahf
cmp
(bad)
fstp
ret
push
add
(bad)
(bad)
inc
ins
cmp
cmp
cmp
cmp
cmp
cmp
push
dec
sbb
fst
push
cdq
xor
push
jecxz
ds
pop
shr
and
aaa
shr
inc
xor
cmp
aas
ret
aas
iret
dec
fadd
xor
into
xor
shr
jp
xor
xor
icebp
push
jmp
xor
xor
in
pop
xor
xor
xor
mov
cmp
ins
(bad)
dec
lds
ret
xor
xor
adc
push
clc
stos
mov
pop
arpl
stos
add
ss
ss
(bad)
aaa
pop
enter
aaa
jne
jle
ds
sbb
sub
inc
in
cmp
cmp
jecxz
ud0
sar
fnstcw
jmp
cmp
cmp
cmp
sbb
or
arpl
outs
xor
ret
cmp
cmp
scas
in
mov
stos
ds
or
cmp
push
jo
pop
retf
mov
mov
xor
xor
ja
(bad)
jg
cs
xor
xor
xor
xor
dec
(bad)
fisttp
shl
fdiv
out
xor
(bad)
(bad)
call
xor
xor
xor
xor
xor
xlat
xor
ja
mov
pushf
ss
mov
inc
xor
shl
mov
aaa
(bad)
outs
xchg
push
add
cmp
(bad)
call
push
cmp
mov
jmp
std
cmp
jmp
push
imul
sbb
ds
aas
lods
(bad)
cmp
clc
cmp
mov
mov
cld
xor
sbb
xor
out
sub
jae
cmp
cmp
dec
cmp
pop
cmp
ds
push
xchg
outs
cmp
jecxz
clc
mov
xor
xor
xchg
(bad)
test
pop
or
or
pop
dec
es
xor
int
jp
add
loop
lock
aaa
arpl
pop
pusha
out
rcl
xor
mov
cmp
test
repnz
adc
mov
pop
cmp
ret
jb
dec
sbb
adc
mov
mov
popa
je
call
call
cld
cmp
push
int3
mov
add
jno
xchg
ins
jb
xor
push
adc
sub
push
or
ja
push
mov
fsubrp
(bad)
xor
fbld
jo
or
or
adc
adc
sbb
sbb
rcl
mov
cmp
inc
xor
mov
adc
xor
push
pusha
xor
xor
push
retf
es
lock
retf
mov
mov
nop
xor
sahf
popa
sub
xchg
mov
cmp
fdiv
fmul
xor
ss
lock
xchg
xlat
jbe
xor
test
jp
cmp
push
xor
fs
sbb
sahf
outs
jo
bound
sar
jo
push
add
dec
add
pusha
jo
fmul
mov
out
shl
jmp
sub
sbb
pop
rcl
xor
xor
xor
xor
xor
cli
cmps
mov
add
sub
jg
push
xor
fs
xor
xor
xchg
sbb
stos
loope
or
sbb
pop
inc
add
in
call
or
xor
xor
inc
add
loop
(bad)
sbb
push
adc
sub
xor
pop
sub
xor
xor
xor
xor
push
xor
pop
xor
cmp
pop
mov
xor
xor
xor
xor
mov
mov
push
scas
pushf
xor
xor
xor
xor
xor
xor
xor
loopne
cmp
int3
fisubr
pop
xor
or
mov
xor
jecxz
add
cmp
mov
or
xor
sub
cmp
inc
adc
sub
adc
inc
inc
ds
dec
sbb
pusha
pop
add
sbb
jg
add
or
pop
pop
push
or
or
or
xchg
mov
or
or
adc
adc
push
adc
jbe
fistp
add
pop
sbb
adc
adc
adc
add
adc
aaa
in
data16
or
stos
sub
add
add
mov
inc
leave
add
jge
add
add
sub
iret
rcl
imul
ds
dec
and
inc
push
adc
pop
and
xor
std
dec
and
rcl
bound
js
xchg
and
dec
xor
and
aaa
mov
xchg
dec
fwait
add
mov
nop
ret
or
adc
jns
add
dec
imul
or
push
scas
or
add
pushf
into
add
adc
dec
lods
jnp
ja
adc
push
adc
pop
popa
jno
and
pop
or
adc
mov
or
xor
adc
shr
icebp
mov
add
and
pusha
add
scas
fiadd
or
stos
or
push
js
jo
or
mov
sub
pop
add
lds
cld
cli
and
mov
(bad)
jmp
inc
jnp
test
jge
ficomp
cmps
xor
mov
test
pop
lahf
mov
movs
fistp
jecxz
cli
pop
mov
stc
or
(bad)
(bad)
jns
xchg
jg
or
ins
sub
addr16
out
or
(bad)
push
push
xchg
add
(bad)
(bad)
dec
lock
scas
(bad)
jle
fcmovnu
clc
cmp
fisubr
in
mov
or
cmp
lahf
xor
call
mov
push
pop
mov
pop
pop
mov
pop
(bad)
(bad)
(bad)
inc
sub
mov
ret
scas
adc
mov
xor
lods
scas
xchg
test
jns
jecxz
aam
and
sbb
sar
and
rol
fwait
movs
jmp
push
retf
push
fistp
in
and
ss
repz
cmps
pop
outs
icebp
mov
pop
lock
(bad)
(bad)
(bad)
(bad)
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
(bad)
out
outs
loope
loope
ror
mov
pop
dec
std
dec
sub
lods
leave
mov
jp
push
out
or
outs
inc
(bad)
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
cmp
call
jg
xor
hlt
and
xchg
(bad)
(bad)
jmp
sbb
das
cli
xchg
add
dec
mov
xor
(bad)
inc
mov
int
inc
fwait
sbb
mov
dec
jp
push
gs
call
pop
jg
hlt
push
add
stc
loope
(bad)
push
mov
sar
and
aas
icebp
test
mov
call
xor
jns
mov
in
repnz
jno
pop
sub
jg
scas
mov
or
push
inc
sbb
paddb
inc
mov
(bad)
(bad)
(bad)
dec
cld
push
lock
lods
jp
test
sbb
into
fcomp
sbb
sbb
loopne
xlat
cmp
test
loopne
cli
adc
aaa
xchg
in
add
sti
jmp
or
dec
fisttp
out
aas
std
cli
push
push
idiv
cmp
sub
(bad)
inc
scas
inc
mov
cmp
jg
cs
sub
jg
imul
mov
mov
inc
es
gs
jns
(bad)
(bad)
push
fsub
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmps
or
mov
pop
xor
fistp
push
sub
xchg
pop
clc
pop
hlt
retf
movs
add
add
lea
jg
gs
std
xor
jg
(bad)
call
addr16
adc
ret
(bad)
das
pop
pop
pop
shl
jmp
cmp
lock
or
sar
std
pop
les
cli
mov
call
xchg
mov
inc
arpl
stos
mov
and
ins
add
leave
push
scas
loop
jge
(bad)
(bad)
call
push
shr
mov
push
mov
adc
and
sbb
xchg
jo
(bad)
(bad)
(bad)
jmp
out
test
jae
push
iret
sti
cmp
ficom
aam
sahf
imul
fcmovnu
inc
xor
inc
or
mov
nop
enter
ret
(bad)
(bad)
(bad)
call
js
cmp
scas
lods
hlt
cmp
fist
mov
adc
push
movs
xchg
or
das
clc
dec
add
ret
fcmovu
ds
cmps
scas
(bad)
(bad)
push
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outs
mov
sbb
(bad)
(bad)
(bad)
jmp
cmp
test
dec
jb
adc
xchg
and
push
push
jo
pusha
imul
add
in
(bad)
push
xor
cmp
xchg
mov
(bad)
cwde
pop
xchg
ftst
jbe
xchg
(bad)
(bad)
(bad)
jmp
add
jae
shr
shl
out
aas
stc
add
out
(bad)
(bad)
inc
gs
jno
fidivr
lock
(bad)
adc
pop
cld
add
adc
mov
jecxz
and
lahf
fmul
enter
jecxz
pop
jmp
xor
pop
mov
sub
mov
in
test
mov
push
sbb
push
inc
or
pop
ret
cmps
push
pop
jg
add
jg
mov
cmp
sub
adc
mov
mov
iret
mov
mov
push
push
sbb
stos
icebp
pop
inc
idiv
ror
adc
push
inc
jecxz
sbb
sar
adc
inc
(bad)
clc
xor
sbb
cmp
dec
js
(bad)
jle
add
mov
fsubr
add
mov
lock
(bad)
and
jmp
push
clc
xchg
pushf
mov
repnz
and
mov
adc
inc
aas
push
rcr
jge
(bad)
jg
pop
pop
inc
jb
fistp
adc
call
jno
int
jg
pop
nop
mov
inc
sti
arpl
daa
std
or
sbb
inc
(bad)
dec
popf
push
loop
sbb
or
imul
xor
dec
xor
fsubr
fistp
mov
jno
fidivr
jg
stos
pop
stc
clc
(bad)
mov
mov
sub
jge
xor
lahf
les
sbb
call
(bad)
sbb
cld
add
sbb
mov
lahf
outs
int3
push
lods
movs
loopne
sbb
pop
pop
(bad)
pop
test
bound
pop
outs
xchg
inc
test
in
lock
push
test
jbe
outs
hlt
sti
fsub
shl
dec
cs
loopne
fistp
adc
lahf
mov
or
out
call
mov
icebp
push
cld
mov
adc
stos
(bad)
pop
jg
pop
sar
inc
mov
in
pop
cld
or
xor
pop
rcr
dec
mov
gs
pushf
call
idiv
aad
sti
jp
(bad)
jnp
jecxz
adc
inc
lds
push
pop
adc
mov
mov
imul
or
inc
pop
(bad)
xor
ror
and
add
push
call
mov
pop
inc
cmps
enter
mov
into
test
xchg
movs
ins
jnp
push
and
xchg
fidivr
jg
inc
push
clc
ins
test
aas
repz
sbb
lock
mov
jmp
out
sbb
aaa
clc
push
std
mov
jl
icebp
or
(bad)
push
mov
xchg
pmullw
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
mov
clc
inc
fadd
xchg
call
jne
jge
(bad)
pop
cld
or
dec
ss
lods
movs
xchg
mov
add
mov
jl
and
(bad)
call
cmps
retf
aaa
push
std
cdq
(bad)
pop
in
cmp
jmp
mov
adc
lock
jmp
hlt
dec
mov
xlat
inc
mov
aas
mov
jg
mov
sub
addr16
inc
cld
daa
jp
std
adc
cdq
or
mov
mov
ja
nop
cmp
das
inc
lock
pop
pop
div
(bad)
(bad)
cld
idiv
fs
sbb
stc
lahf
loope
jae
jmp
sub
je
jge
(bad)
paddsw
mov
add
out
icebp
(bad)
mov
loope
mov
mov
popf
sti
mov
fbstp
push
xor
es
push
or
jge
out
adc
ins
cmps
cmp
call
xor
dec
mov
das
push
adc
mov
and
call
mov
dec
jb
jo
or
mov
cmp
int
add
push
pop
aaa
std
ja
test
dec
inc
das
js
xchg
xchg
fimul
ret
and
pusha
dec
ror
sbb
aaa
inc
push
pushf
jecxz
adc
shr
adc
aas
pop
clc
loope
loope
mov
lahf
jp
mov
add
xlat
rcr
je
xchg
fldenv
iret
fdivr
xchg
call
(bad)
xor
dec
push
xor
gs
inc
sub
sti
sar
pop
out
jg
jno
ret
fs
dec
push
dec
cmp
inc
(bad)
inc
sbb
inc
push
dec
jge
pop
clc
xchg
cmps
jmp
ds
fwait
cli
(bad)
inc
mov
jne
in
sbb
xchg
imul
lock
jmp
std
mov
daa
jmp
fcom
xchg
add
test
(bad)
push
add
pop
stc
push
dec
out
fstp
(bad)
mov
enter
bound
push
inc
leave
push
add
add
push
sti
pop
inc
add
and
xchg
push
push
nop
mov
mov
iret
and
add
rcr
(bad)
(bad)
(bad)
inc
xchg
(bad)
add
pop
sbb
mov
mov
leave
xor
repnz
add
(bad)
(bad)
call
movs
mov
rcr
xchg
arpl
lods
cs
xchg
test
dec
jmp
test
ret
xor
inc
(bad)
(bad)
(bad)
call
add
jne
sub
xlat
sbb
mov
cmp
imul
iret
(bad)
(bad)
(bad)
call
cwde
fcomp
lock
push
test
push
sbb
cmp
dec
das
in
push
popa
mov
xor
(bad)
(bad)
(bad)
mov
dec
pop
fisubr
lock
pop
mov
sub
mov
(bad)
jmp
add
cli
fadd
or
(bad)
lods
jge
out
sub
inc
mov
das
scas
(bad)
(bad)
(bad)
call
jle
jle
inc
div
add
jb
jns
sbb
inc
and
test
dec
icebp
xchg
fld
and
fcom
lds
cmp
adc
ret
int
rol
movs
(bad)
jno
inc
fldenv
jmp
ds
lahf
stos
repz
jno
push
scas
ins
lea
cmp
movs
mov
push
(bad)
(bad)
(bad)
dec
mov
pop
push
cmp
push
mov
sub
lock
pusha
cmp
(bad)
(bad)
dec
push
push
jmp
sbb
or
adc
dec
mov
daa
fs
mov
(bad)
(bad)
(bad)
fstp
dec
dec
mov
sbb
dec
cmc
mov
ins
mov
cs
(bad)
(bad)
(bad)
jmp
cwde
movs
sti
mov
mov
bound
fisub
inc
shr
xlat
sub
(bad)
(bad)
fbstp
mov
cli
loop
ret
ficomp
cmp
lds
lods
adc
mov
cmp
push
daa
pop
sbb
jmp
dec
cld
cwde
mov
sub
inc
test
popf
dec
xchg
scas
mov
pop
pop
cmp
rol
(bad)
call
mov
outs
test
les
mov
cmps
or
call
mov
jbe
jecxz
dec
or
xor
lea
mov
(bad)
(bad)
call
ret
es
pop
inc
imul
xchg
dec
pusha
pop
inc
inc
inc
and
arpl
out
jb
jo
stos
add
addr16
(bad)
(bad)
dec
out
aad
sbb
nop
and
xchg
add
in
pop
(bad)
inc
(bad)
push
xor
and
(bad)
sti
ss
inc
push
hlt
jle
sub
and
test
xor
mov
jmp
sbb
or
stos
inc
aad
lahf
inc
dec
imul
cdq
shl
dec
rol
ja
sbb
push
push
in
push
out
scas
sub
popa
xchg
jg
nop
cld
mov
sti
mov
(bad)
(bad)
inc
pop
adc
mov
sbb
addr16
and
in
push
call
stos
and
xchg
imul
jmp
inc
(bad)
mov
sahf
jle
out
jnp
xor
add
test
(bad)
(bad)
dec
jo
push
sub
hlt
add
cmc
jmp
nop
inc
xor
push
inc
adc
jge
shr
test
mov
add
dec
ret
adc
sub
(bad)
test
pop
test
scas
test
(bad)
jg
dec
push
or
jo
mov
and
adc
push
clc
leave
sbb
outs
stc
mov
call
xchg
jo
aas
clc
(bad)
xchg
clc
ror
push
stos
mov
ja
mov
mov
cmp
(bad)
inc
test
pop
mov
fdivr
fwait
dec
in
add
xchg
pop
jae
xchg
lea
jg
(bad)
jmp
js
aas
cdq
push
sub
pop
popa
adc
sub
mov
mov
jmp
mov
push
sbb
mov
sar
out
fst
nop
call
iret
and
(bad)
(bad)
push
mov
push
add
rcr
push
icebp
mov
adc
cmps
inc
pusha
(bad)
out
inc
(bad)
(bad)
(bad)
(bad)
mov
fadd
gs
or
mov
sti
jbe
push
and
enter
bound
adc
jl
push
sbb
and
test
cli
pushf
adc
shl
ins
push
sar
jle
cmp
sbb
xchg
sar
adc
cmp
idiv
(bad)
inc
mov
loope
pop
xchg
iret
(bad)
jl
icebp
pop
push
loop
call
push
stos
fwait
not
pop
movs
(bad)
sbb
inc
sub
mov
sbb
sbb
imul
(bad)
(bad)
call
scas
xchg
sub
jne
jbe
add
push
inc
in
cs
lods
mov
sar
(bad)
(bad)
inc
mov
sub
stos
mov
jo
or
mov
adc
scas
mov
loope
call
in
push
cmp
inc
xor
pop
es
outs
and
inc
xchg
sbb
(bad)
(bad)
(bad)
jmp
fstp
cmp
outs
jg
mov
jne
test
inc
jl
inc
dec
mov
xchg
inc
sub
fwait
xor
(bad)
inc
mov
call
clc
imul
js
jp
cmp
push
mov
cmp
(bad)
fnstcw
sahf
mov
cmps
fs
xchg
imul
mov
sub
sbb
int
sti
pop
xchg
ins
stos
(bad)
imul
(bad)
(bad)
jmp
aam
movs
cs
sbb
push
cmp
sub
adc
mov
(bad)
(bad)
fisttp
sub
mov
jg
or
xchg
xacquire
cdq
pop
jecxz
cmps
(bad)
(bad)
jp
push
sub
sub
mov
xchg
jbe
call
scas
jecxz
into
cmp
bound
fstp
pusha
or
dec
and
dec
xor
push
lahf
les
out
call
call
or
mov
pop
mov
pop
xlat
shl
mov
setg
lods
xchg
ss
(bad)
(bad)
(bad)
inc
push
push
jns
rcl
sub
fld
dec
jle
jne
(bad)
xchg
dec
adc
jmp
jae
test
call
retf
or
push
ins
loope
inc
push
jl
(bad)
(bad)
(bad)
jge
lods
into
test
mov
das
dec
daa
fidivr
fcmovnbe
(bad)
lock
out
cmp
aaa
mov
inc
adc
popa
scas
repnz
sub
jp
jns
pop
aad
pop
pusha
adc
ss
ja
into
outs
cmp
(bad)
(bad)
(bad)
call
dec
in
lahf
jg
cmp
mov
enter
stos
sbb
iret
(bad)
(bad)
inc
xor
fwait
xchg
inc
pop
sub
leave
ins
sbb
pusha
aas
ret
ret
(bad)
ss
das
cli
(bad)
(bad)
inc
mov
out
mov
bound
mov
push
mov
mov
mov
dec
shl
jl
ss
dec
xchg
(bad)
(bad)
jmp
jb
push
push
cmp
stos
xor
xlat
test
stc
xchg
mov
xchg
in
ins
(bad)
jg
(bad)
mov
fmul
add
mov
xor
(bad)
movs
enter
fcomip
(bad)
jmp
pop
stc
aas
test
inc
mov
pop
pop
push
sub
cmp
lock
repnz
add
lock
int
shl
hlt
xchg
mov
inc
rcl
sub
cmp
push
es
and
stc
or
jb
xchg
jge
push
sti
(bad)
call
fmul
shl
scas
pop
jmp
jmp
jmp
inc
inc
test
pop
cmp
xchg
jmp
outs
jbe
out
xchg
sbb
pop
dec
lods
inc
test
call
and
cmp
jnp
call
rcl
push
(bad)
push
fisubr
nop
cmp
and
(bad)
(bad)
(bad)
inc
test
or
leave
dec
mov
xor
rol
fsub
std
shl
dec
cmc
xchg
mov
les
fsub
nop
loop
pop
pop
call
jle
xor
(bad)
(bad)
inc
movs
pop
adc
stos
push
loope
mov
loope
add
js
dec
pop
ins
shr
into
cli
(bad)
(bad)
push
imul
xor
mov
movs
lods
test
and
push
fbstp
shl
pop
push
inc
pushf
dec
clc
jmp
push
adc
fcmovb
add
ins
push
mov
(bad)
inc
jl
loop
cmp
push
in
int3
dec
int3
sbb
(bad)
(bad)
jmp
mov
aas
in
jecxz
pop
mov
push
fs
fstp
adc
xchg
in
dec
adc
push
fsubr
inc
cmc
ret
nop
sub
popa
repz
mov
loope
js
xlat
xchg
(bad)
call
jmp
jb
xor
in
ds
movs
in
movs
sbb
mov
mov
addr16
loop
sbb
sbb
iret
ss
(bad)
(bad)
(bad)
call
pop
or
or
pop
mov
mov
test
daa
pop
inc
jo
sub
(bad)
jmp
push
outs
adc
cli
rcl
retf
push
xchg
dec
cmp
(bad)
(bad)
call
iret
jmp
push
scas
cld
sub
mov
cmp
cmp
repz
(bad)
(bad)
(bad)
call
lods
push
idiv
int3
aam
mov
xchg
mov
dec
sub
sti
xor
(bad)
(bad)
(bad)
inc
and
shl
fdivr
loop
add
jno
dec
add
ins
jae
cmps
jnp
(bad)
hlt
div
(bad)
inc
jo
nop
push
jmp
xor
mov
lods
stc
(bad)
(bad)
(bad)
call
int
jg
push
repnz
mov
aas
js
mov
jae
movs
inc
sub
xor
push
test
xchg
inc
jg
retf
fisttp
adc
(bad)
(bad)
(bad)
inc
push
push
push
aas
lds
iret
mov
loope
mov
nop
mov
out
sub
sbb
mov
(bad)
test
in
dec
icebp
cdq
and
fiadd
popa
mov
lock
jmp
js
inc
dec
nop
cmp
sbb
(bad)
dec
inc
xchg
sub
loope
sub
stos
sub
frstor
rcl
bound
cmp
lods
movs
in
mov
mov
cwde
and
pop
jle
fild
and
(bad)
(bad)
jmp
outs
and
push
bound
add
xor
dec
jmp
xor
cld
(bad)
(bad)
(bad)
call
push
je
inc
sahf
mov
xor
(bad)
dec
in
in
sbb
or
or
xchg
xchg
(bad)
push
repz
jmp
sahf
mov
jno
xor
enter
inc
out
fstp
int
mov
scas
jnp
push
push
jbe
(bad)
cmps
mov
rol
add
sub
mov
lods
xchg
push
inc
test
(bad)
jmp
fcom
jle
dec
sub
dec
mov
repz
popf
inc
jb
imul
stos
cmp
(bad)
(bad)
inc
xchg
xor
pop
(bad)
aaa
and
pop
ins
jmp
repz
pop
or
push
pop
(bad)
(bad)
(bad)
inc
pushf
sub
add
adc
mov
jmp
in
or
hlt
jg
(bad)
call
push
movs
and
les
in
sbb
ret
sbb
ret
inc
mov
(bad)
(bad)
(bad)
inc
dec
jb
sbb
popf
and
scas
outs
xchg
ret
mov
test
sti
mov
(bad)
fcomip
xor
push
test
movs
jg
mov
icebp
leave
pop
dec
loop
mov
(bad)
(bad)
jmp
pop
xchg
repnz
pop
xchg
out
lods
std
aam
or
data16
dec
xchg
ins
push
ins
inc
xlat
aaa
std
(bad)
(bad)
jg
in
rcr
inc
pop
add
ret
mov
call
aas
xchg
data16
(bad)
(bad)
inc
loope
iret
cmp
add
jno
lahf
aam
jmp
in
stos
sbb
sub
and
inc
jo
jbe
mov
outs
jns
fnsetpm(287
loop
(bad)
mov
inc
inc
loope
push
sbb
cmp
mov
fild
cs
mov
xor
jge
or
push
jo
mov
fnstenv
(bad)
(bad)
(bad)
jmp
adc
xor
sbb
xor
outs
sbb
and
(bad)
(bad)
(bad)
cmp
xor
mov
outs
or
loopne
mov
push
cld
(bad)
(bad)
ret
cdq
mov
fistp
or
cmp
int
stc
in
mov
mov
jmp
jo
jmp
movs
mov
test
dec
cmp
out
loope
jmp
lods
sar
or
jl
push
repnz
call
xchg
scas
or
std
(bad)
inc
cwde
idiv
or
jbe
and
pushf
je
js
push
mov
sbb
hlt
(bad)
push
push
int3
cmp
out
inc
mov
int
repz
fnsave
adc
imul
shl
cwde
loope
sbb
retf
pop
loop
cmp
das
cmp
daa
(bad)
(bad)
(bad)
(bad)
mov
and
dec
ja
push
test
cmp
popf
push
out
stc
push
cmp
cmc
sbb
(bad)
aaa
inc
mov
(bad)
(bad)
jmp
xor
push
mov
mov
mov
(bad)
(bad)
jmp
(bad)
xchg
call
jl
aas
cmps
cmp
pop
jns
mov
imul
aam
push
(bad)
(bad)
(bad)
call
or
movs
cs
jbe
(bad)
stos
xchg
dec
inc
push
cmp
adc
les
icebp
les
(bad)
(bad)
(bad)
push
push
out
pusha
mov
bound
sub
inc
stc
jmp
aas
or
(bad)
(bad)
in
mov
push
ins
into
push
add
mov
mov
ror
pop
pop
cmp
mov
sub
ins
(bad)
(bad)
(bad)
(bad)
out
lahf
xchg
jae
pop
sbb
cdq
and
enter
xor
retf
mov
(bad)
(bad)
mov
repnz
xor
sbb
leave
adc
mov
jmp
pop
mov
dec
sub
mov
out
adc
xor
ins
mov
into
gs
(bad)
(bad)
jmp
cmp
cli
mov
bound
pop
dec
sbb
push
add
(bad)
dec
ins
inc
cli
sub
sub
cs
xor
cwde
adc
jne
mov
mov
mov
out
cli
(bad)
call
sbb
xor
call
ss
mov
lods
jne
xlat
repz
(bad)
(bad)
jmp
adc
nop
cmp
mov
scas
outs
jmp
dec
or
lahf
inc
and
shr
push
or
(bad)
call
push
(bad)
call
jle
jb
fbstp
fs
loopne
inc
xor
(bad)
call
rcl
bound
sbb
(bad)
push
cmp
outs
(bad)
xchg
test
js
(bad)
jmp
cli
mov
and
xor
dec
out
adc
cwde
aam
ja
les
push
dec
sar
(bad)
inc
stc
pop
xor
cmp
cdq
test
loop
adc
enter
daa
inc
jmp
ds
mov
stos
mov
push
loop
(bad)
(bad)
(bad)
dec
(bad)
adc
(bad)
dec
jo
mov
or
lock
enter
jnp
out
jge
cmp
repnz
fnsave
cmp
add
xor
pusha
cld
(bad)
(bad)
(bad)
dec
scas
lods
retf
or
in
adc
lea
int3
dec
sub
jecxz
arpl
leave
mov
jmp
cli
jmp
clc
stos
dec
add
cmp
and
hlt
xchg
(bad)
jg
and
ins
jne
mov
mov
ret
jg
or
sbb
push
retf
add
jg
stos
fcom
rcr
mov
sbb
(bad)
(bad)
(bad)
cmp
outs
cmp
cmp
aad
pop
clc
jl
popf
mov
add
(bad)
(bad)
call
es
dec
ja
mov
repnz
push
xchg
and
mov
addr16
(bad)
(bad)
(bad)
dec
jbe
cmp
sbb
mov
in
(bad)
movs
cmps
test
cli
lods
(bad)
call
jmp
leave
clc
jl
mov
(bad)
push
jge
call
(bad)
(bad)
(bad)
jmp
call
mov
sahf
mov
push
cmc
lds
xchg
(bad)
ins
jnp
jno
movs
scas
ins
(bad)
jmp
aas
mov
adc
adc
sub
jmp
call
push
in
aaa
xchg
sub
addr16
jmp
push
(bad)
in
push
(bad)
(bad)
(bad)
dec
out
int
ror
repnz
mov
and
(bad)
inc
inc
dec
xchg
mov
sahf
(bad)
out
cli
call
dec
jge
and
(bad)
in
dec
jo
inc
sbb
sbb
das
ins
iret
(bad)
dec
jno
mov
sub
in
test
adc
mov
pop
loopne
push
jmp
out
imul
mov
call
mov
out
xchg
xchg
push
pushf
adc
mov
loop
lahf
cmps
inc
mov
(bad)
(bad)
call
lods
sub
mov
add
jbe
mov
mov
fcmovnbe
rcl
mov
pushf
pushf
pop
daa
dec
mov
inc
rol
push
(bad)
or
push
gs
jg
popa
repz
(bad)
(bad)
dec
shl
cmp
xor
sbb
mov
lods
in
sar
(bad)
(bad)
call
xchg
push
out
xchg
xchg
(bad)
jns
test
push
jl
cmp
dec
shl
scas
mov
outs
fwait
out
(bad)
(bad)
(bad)
inc
les
daa
cmp
lds
fs
xor
inc
icebp
jns
ficomp
mov
aaa
cld
ss
(bad)
repz
add
ins
cmp
jnp
lock
(bad)
(bad)
(bad)
jnp
hlt
(bad)
adc
jns
nop
pop
push
or
fldcw
popf
xchg
xchg
loopne
dec
dec
loope
mov
xor
xor
cmps
(bad)
(bad)
(bad)
mov
ins
inc
or
cwde
adc
sahf
adc
add
mov
pop
shl
(bad)
call
int3
mov
adc
and
mov
cmp
xor
lds
push
cmp
ret
inc
inc
stc
cmps
(bad)
(bad)
(bad)
inc
and
sti
lock
or
mov
test
mov
ins
jmp
fwait
icebp
cwde
cwde
(bad)
jp
(bad)
(bad)
dec
sti
lods
mov
enter
dec
sbb
fdiv
pushf
jns
fcomp
add
mov
jg
out
mov
fmulp
int3
jmp
(bad)
out
cli
sub
mov
daa
aam
ret
inc
add
add
pusha
mov
stc
mov
dec
(bad)
sti
push
push
xor
dec
cmp
dec
push
jne
test
xor
(bad)
(bad)
jmp
mov
test
xor
leave
and
iret
hlt
loopne
mov
pop
xor
mov
mov
xor
(bad)
(bad)
(bad)
mov
sbb
sbb
cmp
mov
jnp
adc
imul
jg
cmp
xchg
cld
fld
sti
push
in
mov
dec
push
pop
pop
retf
mov
jmp
(bad)
(bad)
push
xor
aam
mov
bnd
xchg
ins
imul
sub
mov
repz
(bad)
fst
inc
cmp
(bad)
cmps
bound
mov
inc
and
inc
jmp
(bad)
(bad)
mov
jbe
pop
mov
xor
daa
aam
pop
aam
jg
outs
xchg
or
pop
fwait
(bad)
push
mov
cdq
adc
inc
and
enter
mov
ret
xor
xlat
jno
test
mov
mov
mov
jnp
popf
pop
cmp
hlt
sub
(bad)
(bad)
(bad)
jmp
aas
aam
in
adc
div
rcr
xsaveopt
sahf
cmc
xor
sahf
test
sar
call
mov
dec
aad
cmps
shr
stc
fstp
mov
imul
xchg
retf
(bad)
(bad)
(bad)
jg
or
push
stos
inc
mov
and
push
inc
ret
pop
mov
mov
or
(bad)
(bad)
dec
and
mov
adc
sbb
and
stc
(bad)
pop
inc
rcr
icebp
test
call
int
cmps
sub
or
movs
les
mov
and
(bad)
call
push
push
mov
cld
out
push
fld
test
push
dec
shr
(bad)
call
fst
cmps
lahf
sbb
inc
xlat
mov
mov
rsqrtps
sbb
(bad)
jg
(bad)
clc
add
icebp
sar
adc
mov
inc
imul
inc
dec
ins
ret
fwait
sahf
(bad)
int3
push
cmps
(bad)
(bad)
(bad)
(bad)
cli
mov
or
cli
jl
jmp
js
retf
xlat
popa
mov
lods
retf
jg
dec
arpl
add
pusha
jl
sbb
cwde
jno
adc
fstp
jg
cmp
call
jmp
inc
lods
mov
pop
mov
rcl
xor
rol
pop
push
loopne
inc
(bad)
fcomip
call
rol
pop
gs
xchg
and
cmp
loope
cs
(bad)
(bad)
jg
xor
sbb
sbb
mov
fisubr
xor
dec
push
cld
inc
mov
ja
mov
cmps
sbb
iret
inc
pop
or
mov
pushf
cmp
inc
xchg
call
xor
jecxz
fld
sbb
pop
std
add
inc
mov
call
adc
mov
daa
rcr
pop
movs
movs
add
pop
pop
inc
les
aad
movs
sub
daa
push
ficomp
aaa
std
(bad)
push
mov
pop
outs
fdivr
(bad)
pop
xor
in
retf
jb
dec
mov
out
jbe
fcom
push
push
add
mov
shl
pusha
std
aad
retf
pop
shr
cld
imul
les
xchg
sbb
xchg
enter
and
(bad)
push
lods
push
ds
cwde
mov
mov
sub
out
mov
and
in
jl
mov
(bad)
(bad)
call
pop
sahf
fist
inc
and
pop
test
jo
in
mov
dec
scas
xlat
(bad)
(bad)
(bad)
jmp
push
lods
mov
adc
shl
movs
imul
dec
sbb
mov
(bad)
adc
gs
(bad)
(bad)
jmp
test
push
inc
push
cli
jle
mov
xchg
lods
lods
or
popa
push
xor
(bad)
dec
retf
aad
xor
(bad)
inc
call
pop
sbb
jne
xchg
ins
int
lock
scas
fnstcw
or
in
add
xor
jg
mov
sub
sbb
repz
pop
bnd
adc
out
and
es
jns
pop
sbb
retfw
retf
jmp
(bad)
(bad)
(bad)
call
int3
xor
xor
idiv
pop
mov
dec
push
ins
lahf
jmp
adc
out
ds
enter
add
sbb
and
cmps
not
call
hlt
into
xchg
(bad)
(bad)
jmp
mov
in
sbb
in
jge
xor
movs
les
or
(bad)
jmp
in
sar
call
inc
pop
pop
mov
fidiv
aaa
loopne
(bad)
(bad)
(bad)
inc
jmp
mov
ds
les
retf
dec
rol
call
out
cmc
es
xor
js
sub
shl
popf
dec
mov
push
or
adc
sub
dec
fs
test
fdivr
jg
inc
jb
xor
fcomp
rcl
cld
lods
or
pop
push
and
(bad)
(bad)
jmp
int
xor
sub
jns
adc
cwde
inc
inc
repnz
cmp
int
jo
leave
std
(bad)
call
je
jmp
jmp
sbb
sub
xchg
inc
(bad)
jg
dec
in
lock
out
aad
test
(bad)
(bad)
(bad)
inc
mov
inc
or
push
cmp
add
adc
mov
xor
push
(bad)
(bad)
(bad)
(bad)
sti
inc
adc
test
xor
jge
cwde
outs
hlt
and
cmc
fimul
push
jmp
jb
dec
inc
pop
lods
nop
cmp
cli
(bad)
call
xchg
sar
cld
call
leave
ins
add
inc
das
pop
inc
(bad)
(bad)
cmp
(bad)
mov
xchg
into
or
cmp
dec
bound
jnp
push
push
fbstp
mov
ins
add
sbb
(bad)
(bad)
(bad)
jmp
adc
int
push
or
fsubr
test
stos
jb
fnstsw
fsubr
jge
jg
enter
lock
jo
aam
sub
jbe
sar
(bad)
(bad)
jg
clc
push
int
pop
imul
jne
scas
xchg
push
xchg
imul
stos
inc
test
(bad)
(bad)
(bad)
cmp
mov
int3
pop
mov
in
jmp
cld
into
sti
inc
(bad)
call
iret
cdq
movs
adc
mov
or
push
fwait
push
lds
add
jg
jne
mov
std
(bad)
mov
popf
sbb
jne
mov
cmp
(bad)
jg
neg
and
enter
enter
neg
test
sub
outs
dec
mov
mov
jmp
and
adc
js
add
test
ins
in
or
sbb
push
(bad)
(bad)
(bad)
dec
call
push
sahf
sbb
xchg
jle
inc
dec
sbb
sahf
adc
xchg
out
(bad)
mov
inc
cmp
jp
xor
cmp
je
(bad)
loope
aam
mov
ret
out
in
(bad)
(bad)
(bad)
jmp
fs
scas
movs
out
shl
fsub
jle
test
ins
test
mov
ja
(bad)
call
arpl
in
icebp
ins
mov
jb
cmp
adc
mov
and
icebp
mov
movs
rcr
mov
ret
sub
(bad)
jmp
ins
inc
xor
xlat
jecxz
daa
(bad)
fcom
mov
adc
(bad)
(bad)
push
sbb
lods
mov
push
cmps
push
sbb
leave
xchg
enter
cmp
mov
jge
sahf
inc
jp
addr16
fcomp
push
push
data16
sub
cmp
call
(bad)
test
rcr
out
pusha
mov
rcr
enter
iret
rol
(bad)
(bad)
clc
push
or
bound
enter
xchg
mov
push
and
fwait
and
(bad)
(bad)
jmp
or
pop
aas
fild
pop
mov
jmp
dec
mov
mov
xchg
icebp
test
lahf
call
lods
aad
les
pop
xor
add
std
push
enter
push
out
xchg
es
xchg
pop
xchg
outs
sahf
fild
(bad)
(bad)
(bad)
jmp
sbb
xchg
sub
es
xchg
push
into
xor
pop
dec
mov
push
pop
inc
aad
sub
add
adc
fs
adc
sub
(bad)
(bad)
(bad)
mov
lods
xchg
bound
int
cmp
adc
scas
iret
mov
cld
movs
std
(bad)
(bad)
(bad)
dec
push
(bad)
cld
retf
jl
hlt
scas
mov
push
fst
mov
mov
adc
out
cld
(bad)
jg
pop
adc
jbe
(bad)
mov
mov
scas
inc
pop
cmp
push
enter
call
paddq
stos
ret
nop
in
ret
sbb
or
(bad)
(bad)
jmp
(bad)
cmp
xor
clc
repnz
enter
sahf
pop
shl
and
call
pusha
cmp
inc
mov
test
div
xchg
adc
ins
sbb
inc
out
outs
inc
inc
mov
cmps
mov
pop
int3
hlt
bound
fistp
push
jl
lods
(bad)
call
cmp
repnz
jb
shl
push
cmp
out
sbb
or
xor
sbb
mov
cdq
dec
fidivr
jecxz
dec
test
(bad)
(bad)
call
(bad)
(bad)
lahf
stos
mov
push
fild
rol
pop
(bad)
adc
xchg
fldenv
retf
(bad)
inc
pop
jbe
dec
add
(bad)
mov
fwait
mov
sbb
sbb
xchg
mov
shl
inc
(bad)
popa
out
lds
mov
icebp
(bad)
(bad)
mov
dec
(bad)
and
outs
push
scas
int
xor
(bad)
(bad)
push
fadd
ja
iret
mov
push
repz
mov
add
popa
mov
stc
enter
cmps
mov
and
sub
fcomp
popf
and
cmc
mov
xor
(bad)
(bad)
push
je
cmp
or
pxor
stc
dec
mov
aad
inc
int3
sbb
add
cli
fimul
jl
pop
data16
jmp
pop
cmp
mov
push
test
inc
cld
daa
test
hlt
in
idiv
test
fwait
pop
(bad)
(bad)
dec
and
pop
(bad)
aad
scas
int3
lods
aam
retf
mov
fild
dec
xchg
sahf
jge
std
fild
gs
pop
sub
jbe
push
mov
xor
mov
out
push
data16
cmp
out
push
sbb
addr16
(bad)
(bad)
jmp
adc
retw
aaa
mov
push
addr16
ja
lea
fdivr
mov
mov
mov
loopne
mov
ss
stc
fwait
mov
push
ins
jg
(bad)
(bad)
inc
movs
jnp
das
daa
hlt
fwait
icebp
scas
add
(bad)
shl
mov
inc
pop
jg
retf
hlt
push
lahf
mov
pushf
(bad)
xchg
push
adc
jmp
cmp
jno
sbb
out
mov
xchg
loopne
adc
pusha
cmc
sahf
mov
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
daa
pop
xrelease
movs
enter
fs
add
jg
arpl
cmp
push
(bad)
(bad)
inc
adc
jne
sbb
imul
dec
jbe
ss
ret
aas
mov
inc
xchg
mov
das
paddusw
mov
ins
scas
and
ins
push
imul
xor
dec
mov
(bad)
(bad)
push
aad
pop
inc
loopne
inc
sbb
stc
jmp
or
out
(bad)
or
repnz
cwde
outs
ficomp
movs
inc
and
mov
movs
sbb
inc
fwait
push
outs
mov
aaa
mov
(bad)
(bad)
jg
cs
mov
pop
jne
retf
and
add
mov
test
(bad)
(bad)
call
mov
test
sub
jecxz
call
stos
adc
int3
push
pushf
leave
pop
pusha
ss
(bad)
(bad)
inc
iret
pop
sbb
(bad)
enter
and
pop
addr16
test
stos
adc
aaa
or
or
mov
xchg
adc
call
pushf
pop
xchg
retf
mov
jmp
xchg
sbb
(bad)
neg
int
pop
push
cmc
jg
jge
add
push
lock
test
cmps
scas
cli
out
push
inc
pop
inc
mov
ja
xor
movs
xchg
lock
push
mov
(bad)
fcomip
(bad)
imul
add
stc
pop
jmp
fsub
xchg
jo
imul
outs
lods
adc
outs
push
adc
lahf
xchg
or
aam
inc
fimul
jmp
sbb
sub
ds
(bad)
call
push
(bad)
test
out
or
and
mov
(bad)
lods
clc
adc
(bad)
(bad)
inc
dec
sbb
or
xor
std
cmps
setnp
and
(bad)
(bad)
dec
mov
data16
rcr
js
cli
fimul
jnp
inc
cs
and
cld
and
jmp
xor
jne
cmp
mov
push
fiadd
psraw
imul
adc
fild
jns
cmp
gs
fadd
out
adc
(bad)
(bad)
(bad)
jmp
pop
xchg
sub
dec
sub
mov
pop
shl
sahf
jae
pop
cmp
clc
into
cmp
jmp
in
mov
mov
out
popa
or
push
test
(bad)
(bad)
(bad)
mov
imul
test
mov
cmp
mov
aam
jp
mov
(bad)
(bad)
jg
ins
push
push
sub
or
shl
mov
loope
mov
mov
test
or
mov
xchg
(bad)
outs
(bad)
jns
pop
and
and
push
mov
(bad)
(bad)
jg
dec
sbb
int3
test
ret
xor
inc
in
inc
push
mov
jl
xor
sahf
icebp
(bad)
rol
mov
(bad)
(bad)
jmp
cmp
jbe
inc
call
push
aaa
imul
adc
mov
fist
dec
and
(bad)
(bad)
(bad)
jmp
push
bound
pop
or
cmp
int3
inc
(bad)
and
stos
sbb
jp
ud0
fwait
(bad)
pop
(bad)
scas
xor
arpl
jo
mov
push
das
loop
pop
sbb
stos
(bad)
(bad)
inc
je
aam
pop
mov
jge
(bad)
mov
lock
xchg
fsub
(bad)
call
jmp
adc
cmps
push
push
push
aam
(bad)
jg
je
stos
repz
scas
xor
pop
mov
jecxz
(bad)
(bad)
mov
shl
ins
xchg
jnp
test
das
cdq
jae
or
jb
inc
adc
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
cmp
arpl
pop
fsubr
add
cmps
fnstenv
xlat
inc
and
adc
or
push
mov
cmps
jecxz
jmp
push
imul
and
mov
in
ss
and
xchg
xor
(bad)
(bad)
(bad)
inc
mov
pop
jns
jge
dec
mov
mov
sti
xor
xchg
in
jnp
(bad)
(bad)
(bad)
dec
(bad)
mov
mov
and
mov
lods
pusha
stos
mov
mov
idiv
sub
call
lock
and
icebp
or
jmp
retf
ror
pop
pusha
mov
(bad)
(bad)
dec
mov
sub
jp
jge
cli
pushf
or
jbe
adc
cwde
lods
neg
adc
xchg
cdq
(bad)
(bad)
(bad)
jmp
outs
(bad)
mov
mov
mov
stos
ret
add
add
outs
shl
dec
lea
ds
(bad)
(bad)
jmp
(bad)
(bad)
xchg
shl
push
mov
int3
imul
mov
sti
(bad)
(bad)
(bad)
push
sub
(bad)
pop
daa
sub
jnp
mov
lods
mov
fs
mov
sbb
xor
test
push
in
sub
add
mov
fstp
aad
in
mov
xor
adc
cmp
pusha
dec
out
dec
arpl
xlat
movs
lds
sub
(bad)
(bad)
jmp
lods
and
mov
or
inc
stos
loopne
cmp
or
sbb
xlat
mov
(bad)
(bad)
jmp
mov
mov
cmp
nop
sti
out
or
cli
xchg
shl
sbb
xor
std
(bad)
jmp
in
sub
aaa
add
(bad)
cmc
les
shl
fiadd
stos
ds
arpl
fisub
or
repz
(bad)
(bad)
(bad)
call
pop
shl
js
dec
sub
xor
push
or
retf
mov
(bad)
jg
mov
dec
mov
pop
cmc
xchg
dec
js
scas
adc
mov
sbb
jp
inc
xchg
lahf
jmp
cli
jecxz
shl
mov
mov
and
mov
sahf
dec
xchg
lods
mov
dec
(bad)
jge
in
shl
popf
data16
out
(bad)
(bad)
(bad)
call
adc
add
popa
outs
js
test
arpl
dec
sub
(bad)
mov
(bad)
(bad)
(bad)
push
push
int
ret
test
adc
jge
mov
(bad)
data16
dec
push
dec
inc
cwde
jge
(bad)
(bad)
(bad)
(bad)
cld
or
mov
jg
and
adc
sub
sub
dec
dec
mov
pop
xor
add
repnz
push
pop
pop
stos
aas
xor
imul
imul
(bad)
fidiv
add
xchg
add
jnp
fstp
sbb
mov
rcr
(bad)
inc
cld
mov
pop
push
push
mov
inc
(bad)
scas
mov
cmps
fisttp
(bad)
(bad)
inc
pop
xchg
pop
xor
cli
pop
jae
popa
jmp
call
fmul
test
(bad)
(bad)
jg
outs
mov
cmp
mov
push
dec
jbe
aad
jg
(bad)
leave
mov
pop
mov
and
cmp
lock
call
repnz
mov
call
loope
pop
sbb
iret
or
inc
fmul
push
neg
clc
mov
rol
aas
pushf
ret
iret
(bad)
(bad)
(bad)
inc
mov
popa
pusha
test
sub
sbb
movs
sar
xchg
jl
test
(bad)
(bad)
(bad)
mov
or
xchg
inc
or
mov
xor
or
push
push
sub
sbb
inc
loop
adc
pusha
or
xor
or
cld
push
sbb
lods
and
aam
shl
idiv
or
cmps
mov
movs
outs
cwde
xor
dec
dec
add
mov
and
(bad)
jmp
xor
mov
test
jg
cmp
or
inc
pop
jmp
push
(bad)
push
movs
out
pop
scas
mov
adc
dec
sbb
push
sbb
xor
or
cmp
and
(bad)
(bad)
(bad)
jmp
aad
cmps
out
mov
sub
jp
inc
(bad)
pop
mov
ds
xchg
pop
xor
xchg
or
adc
xchg
pop
dec
shl
stc
ja
bound
add
(bad)
jmp
jbe
cwde
ss
sahf
or
inc
cmp
hlt
jmp
add
fbstp
jne
das
jg
(bad)
(bad)
fcom
mov
test
dec
jl
xchg
icebp
scas
ja
push
sbb
jmp
aaa
stc
(bad)
sub
mov
(bad)
mov
cmp
cmp
arpl
pop
inc
(bad)
(bad)
(bad)
call
in
add
jg
sub
jns
or
loopne
mov
xor
push
imul
call
sub
mov
lahf
pop
fisttp
adc
sti
leave
add
mov
xor
call
sahf
test
pop
push
xor
sub
lods
addr16
mov
cmp
(bad)
(bad)
dec
and
shr
fwait
in
cli
jns
lds
jnp
pop
jmp
ja
and
arpl
jmp
jl
and
in
mov
cmp
xchg
popa
out
fidivr
push
adc
xchg
fs
push
pop
jb
jmp
mov
(bad)
(bad)
dec
fwait
shl
jecxz
retf
mov
test
(bad)
fst
xchg
stos
retf
int
(bad)
(bad)
(bad)
inc
or
loopne
cwde
xlat
gs
sub
pop
adc
gs
int
pop
mov
movs
aam
(bad)
(bad)
(bad)
call
jecxz
adc
push
out
test
xor
iret
aaa
sbb
xchg
xor
sub
inc
jmp
dec
loop
jl
push
retf
gs
push
aad
inc
leave
mov
mov
fild
fcomp
shl
cmps
(bad)
fiadd
jne
out
and
push
(bad)
(bad)
push
(bad)
dec
push
sub
mov
stos
xchg
xchg
in
ins
pop
nop
in
outs
fimul
push
ins
imul
clc
xchg
(bad)
(bad)
(bad)
fxtract
das
pop
xor
loop
mov
ja
xlat
fcomp
imul
dec
les
sub
shl
adc
or
lahf
and
in
sub
mov
dec
sti
push
add
and
(bad)
(bad)
push
aad
sub
xchg
(bad)
push
push
xchg
loop
sbb
fdiv
mov
test
call
test
push
sbb
mov
push
lds
add
pop
(bad)
(bad)
(bad)
inc
and
adc
call
xor
adc
lods
jl
repz
rol
(bad)
(bad)
fstp
xchg
inc
xor
or
clc
pop
dec
or
cld
movs
mov
jmp
(bad)
fnsave
in
push
xor
inc
or
and
rcr
movs
(bad)
(bad)
call
loop
push
ror
dec
dec
in
int
sahf
daa
aad
sar
sbb
sbb
call
jno
inc
std
push
cmp
mov
jno
dec
xlat
neg
retf
(bad)
(bad)
(bad)
inc
jg
push
arpl
das
xlat
sbb
jecxz
mov
scas
iret
jbe
jne
in
sbb
xchg
mov
(bad)
(bad)
(bad)
inc
scas
(bad)
or
leave
daa
jl
movs
iret
mov
add
push
cld
add
in
lods
rcr
call
inc
(bad)
fwait
lds
mov
adc
xchg
mov
push
pop
and
pop
sub
sub
mov
mov
stc
aam
jno
push
jge
adc
xchg
sbb
(bad)
(bad)
(bad)
dec
push
stos
aad
add
push
test
loop
cwde
stc
int3
enter
adc
jns
test
xor
jmp
sbb
mov
dec
(bad)
enter
(bad)
jmp
jo
mov
and
nop
add
pop
cmps
in
aaa
mov
(bad)
mov
xchg
and
sub
push
cmps
hlt
mov
(bad)
(bad)
push
aam
cld
and
rcr
(bad)
in
cld
xor
cmp
int
and
cs
sahf
sbb
(bad)
out
sub
xchg
psubusb
xor
aam
inc
in
fstp
cmp
mov
xor
mov
movs
mov
idiv
adc
sub
jge
mov
dec
fbstp
cmps
mov
mov
mov
es
ret
pop
iret
and
cmovno
stc
(bad)
(bad)
(bad)
(bad)
clc
cmp
xchg
inc
daa
jmp
jge
adc
sub
and
out
scas
aas
(bad)
(bad)
(bad)
call
add
and
push
fcomp
inc
cmp
lock
cs
jnp
jp
into
neg
add
(bad)
(bad)
(bad)
(bad)
inc
je
out
sbb
popf
adc
or
push
outs
and
repz
sar
xchg
add
dec
jnp
mov
int3
add
mov
call
mov
cli
cmps
out
jecxz
sbb
xlat
inc
mov
push
sbb
cld
mov
sbb
das
jo
or
stos
adc
or
jno
leave
test
jne
and
inc
sbb
int3
cs
jae
sub
imul
push
add
or
cmps
lahf
xchg
xchg
gs
(bad)
jg
jge
sub
sar
xchg
mov
jne
test
add
aad
popa
repnz
(bad)
jg
stc
mov
inc
repz
shl
jbe
std
ds
and
repnz
jb
push
(bad)
call
shl
lahf
mov
jg
mov
and
push
loop
cmp
das
shr
or
repz
jbe
(bad)
cmp
jg
(bad)
in
xor
fidiv
fwait
mov
aaa
adc
popf
push
cmc
mov
pop
(bad)
xlat
pop
aas
xchg
cdq
or
test
sub
jnp
xchg
fs
sub
pop
fs
and
push
(bad)
push
cmp
(bad)
(bad)
(bad)
cmp
(bad)
pop
mov
fstp
inc
jge
gs
rcl
jge
cmp
sub
sbb
(bad)
call
test
hlt
jg
jmp
push
retf
or
out
(bad)
(bad)
(bad)
push
fcom
and
in
dec
popf
sub
mov
cld
mov
addr16
jb
out
pop
lock
jmp
mov
cmp
adc
clc
pop
(bad)
lods
sub
jno
cmps
(bad)
(bad)
(bad)
cmp
cmp
mov
mov
mov
jno
out
stos
dec
mov
(bad)
(bad)
(bad)
(bad)
out
sbb
test
jmp
xchg
retf
in
and
xchg
in
aam
pop
cwde
fsubp
push
movs
je
(bad)
(bad)
call
push
dec
cwde
inc
fwait
out
aad
int
cwde
and
push
cmp
jmp
push
xor
push
(bad)
jg
jmp
jno
sbb
rcl
shr
mov
in
fcomip
(bad)
inc
or
fnsave
sbb
jecxz
jo
xor
mov
(bad)
xlat
(bad)
daa
ins
rcr
clc
(bad)
(bad)
in
repz
mov
lea
cmp
sahf
add
xchg
inc
sub
(bad)
(bad)
jmp
push
repnz
push
mov
ins
push
jnp
pop
mov
in
scas
out
jo
popa
test
clc
aam
(bad)
(bad)
(bad)
jmp
cmp
rcl
stc
cmp
outs
retf
aaa
lods
pusha
mov
pop
add
or
cmps
sbb
(bad)
(bad)
(bad)
sti
iret
sbb
mov
inc
addr16
xor
ror
adc
add
sti
sbb
(bad)
call
inc
ins
sub
sub
dec
pop
and
sar
jbe
ror
fwait
mov
pop
pop
cli
dec
cdq
sub
xchg
out
cmp
fbld
push
(bad)
(bad)
(bad)
out
mov
pop
adc
stos
pop
jno
repz
xchg
aas
in
test
dec
(bad)
cmp
ret
xchg
out
xchg
and
out
adc
out
add
xchg
call
mov
fs
aaa
cmp
sbb
push
jae
ja
push
imul
dec
cmps
add
push
inc
(bad)
or
push
adc
(bad)
(bad)
(bad)
(bad)
in
ret
fld
push
xor
cmp
shl
mov
xchg
(bad)
and
sub
icebp
(bad)
call
popf
cli
bound
mov
addr16
inc
and
adc
(bad)
jmp
aad
out
imul
sbb
pop
mov
sbb
stos
test
sub
leave
jnp
adc
or
xor
pushf
idiv
push
stos
fdivrp
inc
sub
mov
push
fwait
jmp
sbb
pop
add
inc
mov
jnp
ficomp
(bad)
call
mov
ins
jge
mov
sti
loopne
outs
push
data16
or
ja
(bad)
(bad)
mov
es
jmp
or
sub
jecxz
inc
(bad)
sbb
(bad)
call
pop
sbb
fs
fiadd
push
and
rol
sbb
int
mov
add
shl
xor
sahf
movlps
mov
lds
or
xchg
mov
cmc
mov
xor
mov
stos
(bad)
(bad)
jmp
cmp
ja
imul
or
cli
out
lock
adc
dec
pop
pop
call
inc
pusha
cli
mov
mov
retf
movs
cmp
mov
lods
scas
(bad)
(bad)
(bad)
push
imul
mov
cdq
shl
add
bound
movs
mov
les
call
xlat
pushf
xchg
mov
mov
jl
fidivr
test
fcom
cmps
adc
(bad)
(bad)
(bad)
dec
push
pop
cmp
enter
mov
sbb
mov
ret
repnz
fistp
(bad)
(bad)
(bad)
dec
ins
mov
and
adc
cdq
mov
jle
pusha
ins
xchg
paddusw
sub
jnp
aam
(bad)
(bad)
call
enter
movs
or
leave
mov
pop
sahf
sub
mov
dec
inc
imul
mov
push
out
and
xchg
sub
ja
rol
pop
fild
jle
mov
(bad)
ja
stos
daa
daa
ror
(bad)
sub
push
or
mov
movzx
mov
inc
scas
mov
aas
dec
inc
and
cmc
inc
cmp
push
jp
ja
mov
jg
jg
(bad)
(bad)
jmp
mov
inc
cmp
or
test
mov
mov
jmp
or
cmp
popa
leave
clc
cmp
loopne
or
(bad)
(bad)
(bad)
mov
fs
cdq
ins
repnz
mov
fsub
ror
hlt
shl
cmp
(bad)
(bad)
push
xor
rep
jge
rcr
je
dec
sbb
enter
adc
in
fwait
mov
(bad)
(bad)
inc
bound
pushf
add
adc
or
push
imul
xchg
sub
jle
pop
cmc
(bad)
cmp
mov
xchg
mov
pop
adc
call
mov
mov
push
(bad)
(bad)
aas
inc
les
imul
shl
(bad)
inc
adc
pop
(bad)
jmp
sbb
jecxz
arpl
push
shl
(bad)
call
in
int
scas
lahf
repz
adc
int3
jmp
xor
dec
sub
mov
add
sti
aas
xor
adc
adc
(bad)
aam
aam
cdq
xor
dec
cld
(bad)
inc
cmp
jae
sub
or
add
cmp
(bad)
(bad)
call
aam
push
cmp
idiv
retf
xor
addr16
cmp
in
jl
(bad)
(bad)
(bad)
jmp
cwde
pop
jmp
mov
add
jno
dec
in
xchg
sub
jge
(bad)
dec
mov
add
dec
sub
mov
jge
add
cmps
fsubr
jg
fs
lock
(bad)
(bad)
(bad)
call
fcmovne
loope
sbb
pop
inc
mov
test
not
sbb
mov
lea
bound
scas
mov
mov
pop
leave
adc
mov
(bad)
mov
jmp
(bad)
call
and
sbb
jg
aaa
dec
push
push
out
xchg
cdq
xchg
xor
sbb
(bad)
(bad)
jg
pusha
lea
loop
inc
mov
loopne
cdq
call
jle
sti
and
(bad)
(bad)
jmp
mov
jecxz
aam
sbb
ret
cli
stos
jecxz
mov
arpl
mov
gs
(bad)
(bad)
(bad)
inc
and
and
das
cli
jns
fsub
or
mov
pop
jmp
cmp
xchg
call
jnp
cli
movs
pop
mov
(bad)
lock
(bad)
call
std
in
fnstenv
inc
cmps
mov
jmp
lods
add
adc
jae
ins
icebp
pop
sbb
inc
sbb
in
cwde
sub
xchg
add
call
call
jge
out
cmp
mov
mov
(bad)
(bad)
call
aas
popa
xchg
arpl
out
cli
adc
pop
hlt
mov
adc
mov
in
and
push
in
xchg
sti
push
adc
out
das
setle
add
push
sbb
ror
and
aad
clc
(bad)
(bad)
fdivr
and
jbe
cmp
mov
or
xor
(bad)
(bad)
(bad)
jmp
stos
out
movs
outs
sar
xchg
shr
mov
mov
xor
dec
cmp
push
nop
inc
dec
xor
or
cli
mov
add
or
cwde
add
(bad)
(bad)
jmp
jecxz
pop
ds
(bad)
leave
jmp
sub
sub
ret
in
sub
fcomp
(bad)
jmp
cli
scas
int3
mov
iret
cmc
xchg
mov
in
pop
int
sbb
in
mov
ja
jg
call
dec
mov
std
push
into
shl
pushf
ins
dec
jp
or
pop
pushf
out
sub
es
mov
pop
int3
fwait
call
cmp
loop
cmp
(bad)
(bad)
inc
sbb
loopne
or
mov
outs
jecxz
outs
cmp
loop
pop
push
and
mov
int3
xchg
data16
jge
cmp
inc
gs
out
sub
jbe
sar
out
dec
and
(bad)
(bad)
(bad)
dec
inc
out
sbb
dec
inc
imul
sbb
popf
inc
sbb
cmp
ror
popf
cmp
jnp
ror
push
inc
jecxz
(bad)
sti
(bad)
out
pusha
outs
rcl
mov
mov
and
test
ret
jl
cmp
imul
(bad)
jmp
cli
not
fsub
mov
jmp
scas
(bad)
(bad)
(bad)
inc
call
adc
int3
jmp
mov
cmp
fidivr
in
or
fcom
jmp
mov
or
xchg
mov
fsubr
mov
cld
dec
(bad)
dec
loop
inc
in
fld
pop
js
fmul
icebp
sub
(bad)
call
mov
push
movs
test
add
(bad)
int
pop
push
fs
ss
sub
popf
push
mov
imul
hlt
(bad)
(bad)
dec
arpl
out
pop
gs
daa
(bad)
out
movs
push
and
lahf
in
(bad)
sbb
cli
inc
push
inc
pushw
sti
int
adc
icebp
mov
inc
je
inc
sbb
sar
xor
cmove
fistp
(bad)
(bad)
(bad)
push
adc
xchg
fst
bound
or
push
cmp
adc
test
jne
out
test
inc
shl
inc
mov
xor
xor
(bad)
(bad)
dec
aam
and
jg
or
(bad)
call
popa
mov
icebp
(bad)
jmp
jno
in
jl
pop
xchg
ror
or
xor
repnz
outs
(bad)
call
pushf
adc
outs
test
mov
test
out
add
(bad)
(bad)
mov
pushf
xor
ss
js
sti
adc
or
pop
outs
pop
(bad)
(bad)
(bad)
jmp
fisttp
mov
xor
jb
inc
xor
iret
js
jo
popf
cdq
sub
lods
mov
(bad)
(bad)
(bad)
call
pop
test
fist
dec
push
out
pop
mov
and
enter
cdq
add
(bad)
dec
(bad)
fiadd
sbb
jno
adc
lods
push
push
cmp
test
cmp
xchg
ror
xor
std
(bad)
(bad)
push
mov
xor
sub
dec
gs
mov
add
mov
and
and
fisubr
pop
sbb
mov
xchg
(bad)
(bad)
dec
in
or
aaa
lods
inc
push
cmp
mov
outs
stc
sub
jbe
in
int3
mov
shr
call
pop
in
cmps
pop
(bad)
popf
ins
pop
bound
mov
outs
add
sub
cmc
(bad)
jmp
mov
sti
out
mov
(bad)
aas
out
jne
and
es
jmp
adc
jo
and
idiv
mov
(bad)
(bad)
(bad)
mov
inc
je
bound
xor
lahf
or
addr16
pop
inc
dec
pop
sbb
lods
or
sbb
and
cmp
loope
pop
pop
and
repz
cmp
aaa
test
or
dec
mov
outs
cmp
sub
pop
xlat
nop
stos
(bad)
jg
dec
dec
jne
mov
mov
sbb
inc
push
jns
sti
adc
mov
call
loopne
mov
xor
es
fisttp
aam
ror
lea
(bad)
(bad)
(bad)
mov
add
cwde
aad
lods
imul
pop
sub
adc
add
mov
(bad)
(bad)
(bad)
inc
mov
rcr
sub
gs
das
pop
into
cli
sti
(bad)
fstp
mov
or
(bad)
jmp
clc
push
dec
push
push
(bad)
call
(bad)
ret
cmp
jno
(bad)
(bad)
(bad)
call
jno
(bad)
push
and
(bad)
and
adc
mov
das
imul
xchg
ja
add
(bad)
(bad)
call
dec
lock
mov
cmp
scas
ret
popa
stos
mov
cmps
dec
dec
sub
(bad)
mov
je
mov
jns
fisttp
mov
in
dec
out
push
pop
sar
inc
sub
push
add
shr
pop
push
cmp
mov
jmp
inc
jns
push
psubsw
xchg
lock
aaa
xchg
imul
jmp
out
ror
mov
cli
pop
sahf
das
push
shr
mov
out
mov
jecxz
ja
clc
(bad)
call
mov
dec
or
lahf
enter
fs
mov
pop
into
jbe
pop
ja
(bad)
call
pop
xchg
or
(bad)
es
sub
inc
adc
out
iret
pop
jle
cwde
cmps
mov
outs
cli
cmova
add
out
add
test
cmp
fidivr
fimul
fidiv
(bad)
(bad)
jmp
jns
cmp
mov
das
imul
arpl
pop
push
mov
popa
jmp
and
(bad)
inc
sahf
push
(bad)
pop
pop
pop
popa
test
dec
loopne
adc
sub
cmc
jle
popa
add
(bad)
call
mov
repz
inc
mov
loope
jae
pop
(bad)
(bad)
call
cmp
cmps
pop
jmp
mov
stc
fmul
mov
(bad)
jmp
jne
out
adc
pop
pop
adc
nop
imul
clc
jmp
scas
ds
mov
jge
sub
and
push
and
es
dec
(bad)
mov
mov
sub
fs
in
outs
cmp
movs
imul
mov
cmp
shr
fld
nop
outs
inc
adc
mov
(bad)
(bad)
dec
fldenv
loopne
sub
scas
fwait
ret
outs
movs
bndstx
pushf
scas
mov
sub
fmul
pop
icebp
popa
push
xlat
push
aam
mov
xchg
aas
push
rcl
repnz
mov
fiadd
(bad)
(bad)
cmp
jg
mov
fmul
outs
mov
adc
add
pop
imul
cmp
unpcklps
sar
stos
push
movs
mov
test
or
push
xor
add
jmp
(bad)
call
iret
rol
fwait
adc
push
call
setl
aam
fwait
xchg
into
cdq
(bad)
(bad)
(bad)
dec
cmp
and
xchg
les
dec
push
call
jns
dec
idiv
(bad)
(bad)
dec
jle
sbb
jo
lods
pop
pop
push
outs
arpl
push
lock
cdq
int3
ret
mov
stos
(bad)
jmp
pop
pop
xor
mov
test
iret
cmps
mov
in
(bad)
(bad)
(bad)
jmp
xor
in
(bad)
(bad)
or
ffreep
and
fld
pop
xchg
stos
and
sub
scas
test
out
fcmovne
out
(bad)
call
es
push
rol
out
fs
movs
std
push
in
sbb
(bad)
(bad)
ffreep
push
repz
loope
dec
ds
xchg
pop
jle
xchg
add
dec
arpl
(bad)
(bad)
inc
sahf
xor
es
inc
mov
sub
adc
push
int
(bad)
sbb
(bad)
(bad)
(bad)
inc
rcr
sbb
mov
jp
fs
iret
mov
xlat
(bad)
(bad)
cdq
or
sar
ret
(bad)
(bad)
(bad)
jge
cmp
enter
ins
and
mov
nop
in
aaa
fcom
std
out
inc
daa
(bad)
(bad)
(bad)
jmp
jmp
sub
dec
jae
sub
fwait
mov
push
cli
retf
pop
sbb
(bad)
(bad)
mov
mov
sub
enter
(bad)
dec
test
mov
mov
and
sub
call
rol
cmc
data16
mov
sar
out
push
into
jns
call
push
pop
pop
pop
xor
cmps
push
and
cmps
jb
xlat
xchg
mov
int
push
jecxz
mov
(bad)
(bad)
(bad)
inc
and
fidiv
jp
shr
cmp
(bad)
jne
adc
(bad)
(bad)
(bad)
dec
jg
dec
fisub
into
cmp
loop
push
xlat
jae
js
repnz
mov
(bad)
call
mov
and
push
dec
jmp
in
dec
or
(bad)
ss
push
pop
pop
dec
(bad)
push
mov
(bad)
(bad)
inc
icebp
fcom
sti
lods
pop
(bad)
or
adc
add
or
push
jecxz
mov
clc
inc
mov
push
jl
pop
das
or
push
shl
mov
loop
(bad)
(bad)
inc
jns
imul
inc
icebp
(bad)
mov
xlat
std
outs
xor
cmp
and
sar
and
cmp
(bad)
(bad)
(bad)
mov
in
jl
cmps
mov
movs
aaa
xor
inc
adc
dec
jo
pop
js
jbe
or
shl
in
lahf
adc
push
sbb
dec
jl
les
imul
sar
(bad)
(bad)
(bad)
inc
int
scas
mov
adc
inc
cwde
xchg
pop
out
or
leave
xor
fsubr
(bad)
(bad)
(bad)
clc
sub
add
sbb
add
test
ror
xchg
out
ficomp
(bad)
(bad)
call
popf
or
xchg
jmp
mov
call
xor
xchg
inc
call
data16
(bad)
(bad)
push
adc
neg
loop
stos
xchg
fcmovnb
ret
fldcw
jmp
xchg
(bad)
(bad)
jg
inc
aad
outs
jecxz
mov
and
push
mov
mov
sub
(bad)
das
jno
jb
sar
call
fldenv
sbb
das
cmp
in
arpl
pop
push
sbb
pop
fidiv
(bad)
jg
call
push
mov
dec
retf
in
loop
pop
inc
dec
xor
pop
sub
(bad)
(bad)
call
mov
xlat
aad
fld
mov
das
outs
jns
add
mov
(bad)
js
(bad)
push
mov
or
(bad)
dec
push
xchg
push
int
sti
mov
push
mov
(bad)
stc
or
aas
mov
ja
inc
inc
xchg
icebp
jmp
jb
jge
dec
jo
adc
and
(bad)
(bad)
jmp
xchg
in
test
lds
scas
push
xor
xchg
sbb
jmp
dec
push
jne
retf
(bad)
(bad)
(bad)
(bad)
jnp
mov
icebp
clc
xlat
mov
and
sbb
xor
js
sahf
push
jmp
leave
loop
(bad)
call
stc
mov
jbe
sbb
clc
mov
fisttp
xchg
adc
ins
(bad)
(bad)
(bad)
call
sbb
fldcw
and
loopne
sub
dec
mov
jns
cmp
out
ficomp
(bad)
jg
mov
movs
int
sbb
aas
jge
scas
add
sti
push
inc
lock
inc
jnp
or
ja
rcl
sbb
clc
pusha
mov
inc
cld
call
inc
(bad)
jecxz
sti
(bad)
mov
add
pop
(bad)
jge
(bad)
(bad)
jmp
pop
or
cmp
mov
sbb
enter
enter
xchg
xor
(bad)
pop
cmc
rol
jns
mov
gs
out
ss
or
cld
(bad)
(bad)
inc
cwde
inc
leave
std
jne
mov
add
shr
call
mov
cwde
cmp
icebp
jg
or
mov
(bad)
inc
push
dec
push
or
add
sahf
test
(bad)
jmp
xor
icebp
ja
mov
pop
jb
mov
jb
(bad)
mov
mov
sbb
ja
add
cmp
(bad)
jg
mov
jmp
in
rcl
in
out
and
lea
(bad)
inc
ret
mov
fmul
push
mov
popa
jmp
sbb
xchg
jecxz
ins
xlat
mov
call
pop
movaps
(bad)
bound
jbe
or
pop
outs
loope
pop
push
xor
push
movs
dec
(bad)
into
sub
clc
popa
or
or
in
pop
mov
(bad)
call
in
inc
mov
dec
inc
mov
mov
test
jmp
or
hlt
mov
push
(bad)
(bad)
call
cmps
mov
pusha
pushf
jl
sub
or
imul
cwde
aas
jl
(bad)
(bad)
(bad)
inc
lods
in
(bad)
ror
into
je
int3
cli
push
in
(bad)
pusha
(bad)
cmp
xor
(bad)
inc
call
dec
dec
push
adc
cwde
out
jmp
fdiv
in
out
inc
sbb
sbb
(bad)
call
or
inc
push
add
and
adc
(bad)
(bad)
(bad)
inc
mov
stos
(bad)
outs
and
and
add
popa
mov
jp
push
inc
add
jne
enter
ror
xchg
retf
aad
(bad)
dec
push
scas
(bad)
sub
lods
pop
xlat
sub
repnz
(bad)
(bad)
(bad)
push
and
into
dec
push
ss
std
add
mov
in
pop
in
xchg
(bad)
(bad)
(bad)
push
xor
out
cmp
loope
dec
pop
(bad)
ja
inc
pusha
inc
xchg
and
rcr
jne
icebp
xlat
(bad)
(bad)
inc
cmp
mov
lods
out
test
dec
inc
lds
pop
mov
or
inc
jb
inc
pop
jg
(bad)
jg
cmp
icebp
xlat
pop
call
cmp
jle
mov
xor
mov
cmp
clc
int3
fimul
ret
dec
mov
test
and
xchg
(bad)
(bad)
(bad)
fisub
inc
or
xor
sub
cmp
call
jl
rcl
(bad)
(bad)
push
pop
push
leave
dec
xchg
call
cmp
in
xchg
inc
outs
mov
data16
call
inc
jge
fwait
lahf
in
out
adc
xchg
sbb
int3
xor
sbb
(bad)
inc
sbb
sub
adc
mov
jmp
sbb
cmp
shr
in
sbb
xor
ins
xchg
jmp
xchg
xor
aas
shr
push
test
sbb
push
std
(bad)
(bad)
mov
sar
pusha
iret
shl
ret
aad
ja
retf
shl
jmp
movs
out
mov
cs
(bad)
jmp
enter
in
cmp
jae
mov
inc
cmp
mov
(bad)
mov
mov
inc
mov
enter
leave
leave
mov
cmp
leave
sar
inc
sub
(bad)
call
fistp
aam
cli
or
adc
dec
aam
lods
stc
es
cmp
push
pusha
mov
(bad)
lahf
(bad)
jg
out
lods
push
ret
dec
je
clc
fisubr
in
(bad)
(bad)
call
mov
fldenv
or
movs
aaa
push
cmp
outs
xor
push
imul
jmp
jmp
data16
or
or
sbb
sbb
sub
mov
clc
imul
inc
dec
add
xchg
and
call
and
out
push
punpckhdq
test
out
retf
push
xchg
push
pop
ins
std
jmp
nop
lock
call
sahf
jnp
inc
shl
and
or
xor
test
sti
mov
imul
mov
(bad)
sbb
(bad)
(bad)
dec
fucomp
jae
pusha
cmp
mov
and
ficom
in
mov
add
(bad)
jmp
mov
push
sahf
mov
lds
pop
sub
dec
add
mov
ds
outs
sub
cmp
repz
cwde
adc
xor
(bad)
int3
mov
jmp
or
(bad)
jmp
test
repz
stos
or
inc
push
jle
loop
cmps
aaa
xor
push
out
cld
(bad)
(bad)
call
(bad)
in
ja
outs
std
stos
imul
mov
test
(bad)
jmp
cmps
pop
nop
xchg
cmc
xor
out
dec
inc
jbe
pop
jle
iret
popa
lock
(bad)
call
enter
add
sbb
lahf
repz
pop
out
dec
cmp
dec
dec
xchg
jl
jg
push
dec
sti
mov
jle
stos
jae
les
xchg
jmp
je
inc
cdq
sahf
(bad)
(bad)
(bad)
inc
add
ss
stos
js
xchg
jnp
fsubp
push
add
mov
dec
fsub
ins
retf
sbb
(bad)
(bad)
dec
lods
sbb
fistp
sbb
jg
aaa
mov
fcom
add
and
cdq
xchg
sub
retf
(bad)
(bad)
mov
ds
les
xchg
xor
cld
jmp
test
mov
dec
or
pop
pop
add
jmp
out
aas
mov
push
inc
and
lahf
lods
ins
push
mov
jp
out
and
push
cmp
(bad)
(bad)
(bad)
push
inc
movs
shr
push
push
into
jg
cs
sbb
(bad)
rol
push
pushf
loope
mov
inc
xchg
clc
push
or
shl
stos
pop
mov
(bad)
(bad)
(bad)
inc
in
nop
push
jbe
(bad)
cmp
cmp
dec
or
idiv
stos
loope
outs
mov
(bad)
(bad)
mov
mov
int3
mov
mov
(bad)
mov
ror
mov
(bad)
(bad)
(bad)
(bad)
dec
stc
ins
sti
imul
mov
icebp
shl
lods
shr
adc
retf
(bad)
(bad)
(bad)
push
pop
mov
cmp
rcl
div
lods
gs
daa
add
inc
test
(bad)
(bad)
(bad)
dec
movs
cmps
aam
jg
(bad)
icebp
adc
hlt
sti
cmp
dec
adc
fwait
sbb
jle
aaa
mov
clc
pop
icebp
mov
sar
mov
bound
push
ret
jmp
mov
call
push
xchg
dec
(bad)
sub
push
jb
sbb
in
cld
(bad)
(bad)
push
cmp
icebp
fisttp
clc
icebp
sbb
nop
pushf
(bad)
mov
scas
adc
push
aad
push
inc
dec
adc
ror
ja
mov
enter
xor
sbb
xor
sbb
(bad)
(bad)
jmp
xor
dec
jmp
xchg
push
hlt
jmp
xchg
mov
adc
jle
xlat
(bad)
(bad)
(bad)
fnstenv
mov
fbld
and
outs
cli
leave
iret
enter
inc
sub
(bad)
jg
retf
repz
push
sbb
in
sbb
push
(bad)
(bad)
(bad)
push
adc
inc
sar
fldln2
xlat
cvtpi2ps
add
enter
jne
fs
loopne
std
call
xor
pushf
jl
pop
retf
sahf
stos
sbb
inc
jo
(bad)
(bad)
(bad)
mov
dec
ins
dec
pusha
or
mov
daa
mov
mov
adc
(bad)
(bad)
push
xchg
mov
mov
xor
inc
fnstenv
aas
mov
bound
sbb
rol
out
jmp
add
push
mov
adc
sbb
pop
(bad)
(bad)
jg
jbe
and
movs
xchg
daa
inc
jp
ret
sbb
inc
mov
add
adc
outs
inc
(bad)
(bad)
push
xchg
shr
sub
int
retf
pop
ficom
mov
in
fwait
(bad)
inc
ds
xchg
cmp
adc
or
cmp
pop
cmp
aas
jno
push
xor
mov
add
jg
mov
call
xchg
xor
out
(bad)
sub
outs
xchg
call
cmp
jp
shl
pop
mov
(bad)
call
daa
inc
mov
push
test
jmp
push
adc
call
pop
sub
inc
cmp
mov
xchg
adc
test
push
outs
or
ficom
jmp
mov
xchg
neg
mov
popf
push
enter
mov
sbb
jmp
and
jnp
scas
lods
adc
test
or
add
jbe
mov
add
(bad)
push
nop
or
hlt
cmps
add
jp
fwait
int
push
mov
and
fmul
aad
and
cmc
inc
in
loope
mov
(bad)
(bad)
inc
sbb
mov
ja
mov
test
bound
(bad)
xor
cmc
dec
lock
push
add
hlt
jge
ins
(bad)
cmp
jp
push
loopne
sbb
dec
clc
push
sub
and
retf
add
dec
push
sub
ret
fsubr
cli
(bad)
call
mov
mov
dec
add
mov
loop
je
sub
(bad)
(bad)
call
mov
push
not
xor
add
mov
mov
(bad)
(bad)
(bad)
(bad)
cli
arpl
mov
aad
ds
sub
sub
(bad)
dec
fdiv
iret
test
bound
rcl
rcr
push
mov
adc
ror
adc
cwde
mov
jno
(bad)
(bad)
inc
mov
and
cmp
ret
or
xor
xlat
push
lods
or
sub
scas
inc
cli
aaa
loopne
jbe
loop
lock
mov
push
pop
mov
cmp
xor
push
inc
out
(bad)
(bad)
jmp
popf
loopne
aaa
(bad)
aas
fist
and
int
dec
movs
and
sbb
iret
stos
(bad)
(bad)
(bad)
dec
(bad)
lahf
test
pusha
dec
sbb
xor
cmc
cmp
and
ds
sbb
scas
sbb
mov
add
push
iret
mov
adc
(bad)
dec
je
ret
mov
inc
push
sti
jbe
adc
imul
(bad)
jg
mov
fst
push
dec
jo
push
mov
mov
inc
ins
xor
fbld
(bad)
(bad)
(bad)
(bad)
js
mov
jo
xchg
je
push
cmps
mov
pop
stos
adc
pmulhw
rep
push
pop
mov
(bad)
mov
pop
xchg
retf
mov
xchg
jle
xchg
shr
ins
imul
and
fcomip
jmp
and
(bad)
and
add
sub
xchg
or
mov
cmp
clc
stc
mov
push
or
mul
mov
popf
mov
adc
fldcw
(bad)
push
and
jb
out
xor
jne
bound
loopne
iret
mov
(bad)
jg
push
fisubr
cmp
lahf
jle
inc
and
push
popa
push
mov
sbb
popf
jg
stos
xchg
cmp
jg
pop
cmp
jmp
(bad)
(bad)
dec
adc
push
shl
lea
or
cdq
xchg
add
idiv
or
inc
call
fisub
jl
inc
ins
sub
add
movs
cmp
push
mov
jl
hlt
or
pop
out
outs
movzx
in
cmp
xor
(bad)
jmp
jmp
pushf
xchg
mov
cdq
ret
push
(bad)
mov
fcomip
(bad)
push
adc
jecxz
in
out
ret
cmp
mov
or
push
xor
cld
cmps
add
mov
and
or
(bad)
(bad)
(bad)
(bad)
cmp
push
inc
lahf
push
jno
jne
jbe
xor
or
add
sti
push
sbb
adc
sub
mov
(bad)
push
in
dec
ins
adc
xchg
ss
clc
or
dec
push
pop
mov
ins
pop
data16
jecxz
(bad)
push
mov
in
shl
xchg
(bad)
cmps
xchg
push
(bad)
stos
mul
into
cli
mov
(bad)
dec
aas
mov
int
fcomp
fwait
sub
mov
push
(bad)
inc
push
mov
lds
movs
mov
adc
add
jecxz
(bad)
(bad)
jmp
mov
(bad)
push
mov
mov
aaa
jmp
test
mov
(bad)
(bad)
(bad)
fstp
xchg
movs
shl
jnp
cdq
popa
shr
movs
pop
mov
and
jp
jbe
cld
(bad)
(bad)
jg
out
dec
fwait
repz
or
push
cmp
icebp
out
and
cmp
pop
xchg
xchg
dec
push
dec
push
fdiv
adc
mov
shl
add
aad
mov
enter
shr
push
(bad)
(bad)
inc
pop
aam
add
leave
jne
add
push
push
fsubr
int3
out
aad
dec
inc
pop
(bad)
(bad)
(bad)
(bad)
push
jb
imul
sbb
(bad)
shl
stos
mov
imul
cdq
push
out
mov
(bad)
(bad)
dec
jle
sub
shr
pop
inc
fisubr
retf
js
dec
sahf
dec
push
cmp
pop
mov
pop
popa
mov
pop
cmp
test
gs
int
and
jmp
clc
push
push
sti
inc
pop
or
fild
sub
int
(bad)
(bad)
(bad)
call
call
cmp
(bad)
ror
popf
movs
cmps
imul
adc
(bad)
mov
icebp
ins
shl
retf
add
aad
fistp
call
sub
jmp
int3
in
sub
fistp
or
je
daa
shl
pop
fnstcw
(bad)
jmp
into
adc
outs
pop
icebp
adc
dec
mov
push
(bad)
fwait
cld
(bad)
(bad)
(bad)
call
xor
jmp
inc
pop
sbb
std
fsubr
sub
mov
push
(bad)
(bad)
(bad)
jmp
out
out
mov
shl
xor
push
into
aaa
movs
adc
(bad)
(bad)
(bad)
cmp
stos
dec
push
add
call
pop
in
aad
loop
sbb
add
mov
cmp
mov
jge
pop
fmul
mov
loope
cmp
scas
cli
(bad)
(bad)
clc
adc
cmp
(bad)
dec
(bad)
xor
xchg
push
je
pushf
jnp
fs
out
arpl
in
jmp
loop
sub
ss
inc
(bad)
retf
sysret
out
in
sbb
push
push
(bad)
(bad)
(bad)
(bad)
je
push
ret
push
adc
xchg
cmp
ret
dec
cmp
in
inc
mov
(bad)
(bad)
mov
inc
ins
cdq
frstpm(287
cmp
inc
sti
(bad)
mov
push
imul
pop
rol
xor
daa
lea
jmp
sub
es
adc
(bad)
xlat
into
loope
lods
es
jg
mov
jmp
loopne
retf
sbb
jle
(bad)
(bad)
jmp
mov
mov
inc
(bad)
xchg
iret
call
sti
sbb
adc
xchg
ret
cs
(bad)
(bad)
jmp
daa
add
data16
lods
aas
mov
cmp
lahf
fwait
hlt
out
inc
lds
es
(bad)
(bad)
dec
xchg
or
push
or
inc
adc
shr
jmp
sub
(bad)
(bad)
(bad)
(bad)
cld
mov
dec
retf
push
das
mov
xchg
jl
fs
xchg
inc
xchg
push
into
jae
gs
(bad)
(bad)
jmp
mov
mov
ja
(bad)
lock
jno
fwait
push
pop
push
lea
lock
xor
in
ret
(bad)
(bad)
call
sub
pop
call
mov
test
rcl
out
(bad)
in
add
sti
or
jo
nop
mov
jl
sti
test
push
addr16
(bad)
(bad)
fisttp
nop
(bad)
mov
ja
daa
mov
addr16
fbstp
pop
arpl
jmp
scas
ins
cwde
pop
enter
lahf
push
out
and
pop
das
imul
jo
(bad)
(bad)
(bad)
mov
mov
aam
pop
es
pop
mov
ins
int
jg
adc
pushf
cmps
nop
inc
(bad)
call
jmp
ret
add
pop
fimul
ss
xchg
sti
jmp
xchg
movs
cmp
jo
test
xor
ss
push
ss
inc
xchg
(bad)
mov
aad
bound
(bad)
pop
add
mov
inc
add
and
std
xchg
(bad)
call
cld
dec
rcr
or
jo
movs
fmulp
data16
xor
(bad)
inc
push
cmps
and
stos
scas
aas
push
lods
adc
aad
into
jnp
sbb
ret
loop
(bad)
pop
and
pop
call
retf
clc
mov
inc
lods
(bad)
jg
or
stos
fild
cmp
adc
(bad)
fild
div
(bad)
jmp
in
gs
mov
fld
les
xchg
mov
(bad)
jge
(bad)
(bad)
jmp
jecxz
mov
mov
cmp
mov
fwait
add
in
and
call
sub
add
pop
dec
jbe
ss
es
in
xchg
or
(bad)
call
jnp
std
rcl
pop
aaa
xchg
xor
sti
fucom
mov
sbb
(bad)
(bad)
call
push
div
inc
xchg
dec
xor
out
xchg
popa
xor
sbb
adc
cmp
lock
idiv
xchg
(bad)
(bad)
(bad)
push
sbb
mov
retf
cli
sahf
sub
enter
cmp
(bad)
(bad)
call
and
call
fwait
out
pop
gs
mov
sub
pop
inc
repnz
(bad)
(bad)
call
lahf
xor
jl
cmps
jge
ins
ss
jae
jmp
test
cld
jbe
xor
retf
sbb
cmp
(bad)
(bad)
call
cwde
xchg
imul
fisttp
in
xlat
jecxz
aam
mov
xchg
cld
(bad)
(bad)
dec
dec
mov
push
jge
movs
in
call
xor
sub
jp
jmp
stc
std
xchg
inc
xlat
fmul
push
adc
ja
(bad)
(bad)
(bad)
dec
(bad)
jb
div
addr16
cdq
xor
cmps
aaa
int
mov
jb
sub
pop
es
sar
stos
dec
pop
jmp
imul
and
inc
pop
neg
add
(bad)
(bad)
(bad)
jg
or
ins
sub
adc
int
pop
sub
js
jmp
loop
jmp
cmp
aad
pusha
sbb
rcl
int3
lods
rol
(bad)
call
daa
add
mov
jmp
ror
pop
out
pop
jb
or
(bad)
mov
sub
ja
dec
lods
pop
mov
lock
sbb
add
adc
dec
fs
pop
fwait
mov
and
or
(bad)
(bad)
push
jns
loope
mov
sub
shl
loopne
pop
push
xor
fstp
es
and
xor
sub
sub
mov
(bad)
fcomip
nop
ins
cmp
jnp
data16
movs
sbb
sti
sbb
(bad)
call
sti
pop
into
inc
out
mov
mov
or
mov
pop
cdq
mov
(bad)
out
clc
dec
cdq
sbb
pop
aaa
fistp
mov
adc
loopne
or
add
(bad)
pusha
call
inc
xlat
(bad)
inc
int3
inc
aad
mov
xchg
cmp
rcl
cmc
(bad)
(bad)
mov
shr
inc
(bad)
fwait
sbb
xchg
fsubr
mov
mov
pop
cmp
adc
iret
iretw
pop
inc
loop
mov
pop
int3
lock
xchg
fadd
or
(bad)
(bad)
(bad)
jmp
std
std
add
push
cli
cmc
dec
mov
les
cmc
dec
jmp
and
sahf
clc
(bad)
(bad)
dec
mov
nop
neg
sti
pop
mov
loopne
popa
dec
les
jmp
push
dec
jb
mov
jge
repz
out
(bad)
(bad)
jmp
mov
mov
adc
mov
inc
sar
add
(bad)
pop
loope
xchg
push
stc
lods
arpl
mov
or
xor
xchg
lahf
dec
(bad)
jno
scas
xchg
imul
(bad)
jg
(bad)
push
cwde
fwait
mov
push
dec
xlat
gs
fisubr
lods
jbe
mov
jmp
jecxz
jnp
fs
cmp
fdecstp
inc
dec
fcomp
sub
xor
std
(bad)
(bad)
(bad)
call
xlat
cdq
mov
out
xor
data16
lods
sub
cmp
cdq
inc
pop
inc
movs
and
ud0
(bad)
jmp
dec
mov
jno
mov
in
adc
stos
mov
lods
inc
add
jg
(bad)
mov
out
ja
inc
mov
sbb
je
ins
ror
call
(bad)
dec
(bad)
dec
xchg
nop
mov
xlat
lds
sbb
hlt
out
jge
mov
sub
loope
sub
sti
shr
jmp
or
or
sub
and
pop
jno
jmp
call
cmp
out
mov
xchg
xchg
ds
retf
pop
adc
add
scas
(bad)
call
fild
sbb
cmp
pop
add
jmp
mov
jmp
jmp
sbb
jnp
sub
lods
sbb
retf
cmp
clc
push
jae
mov
jge
push
mov
subps
movs
or
dec
or
push
pop
imul
das
scas
push
imul
fistp
mov
dec
jecxz
mov
sti
cmps
pushf
xchg
mov
push
pop
sub
xor
fs
mov
stc
test
(bad)
(bad)
(bad)
jmp
inc
fmul
stos
add
mov
inc
in
sbb
(bad)
lods
in
int
js
ret
(bad)
(bad)
jmp
loopne
xchg
popa
adc
sbb
cmp
daa
pop
ja
test
push
xchg
dec
mul
sub
push
shr
jnp
das
arpl
(bad)
adc
sbb
aaa
pop
push
mov
(bad)
(bad)
inc
lock
cdq
fwait
mov
xor
imul
mov
cs
xchg
stos
mov
pop
icebp
outs
or
pop
sbb
pop
sub
lods
cmp
(bad)
(bad)
dec
dec
(bad)
mov
mov
and
dec
jae
std
add
outs
ret
mov
mov
jne
or
mov
adc
push
xchg
mov
(bad)
ficomp
not
call
jp
adc
cli
xchg
mov
mov
dec
push
mov
(bad)
(bad)
call
push
or
aas
inc
adc
mov
(bad)
fs
mov
push
jg
(bad)
(bad)
call
cmp
(bad)
popf
jmp
fistp
inc
cmp
test
mov
dec
scas
inc
mov
aas
movs
nop
ja
xchg
ret
jne
adc
mov
xor
arpl
dec
mov
stos
movs
dec
jg
push
xchg
pop
cmp
adc
pop
cmp
daa
jno
push
nop
and
mov
ja
jl
(bad)
(bad)
call
and
mov
imul
(bad)
clc
test
cmp
aaa
cmp
sub
call
int3
or
es
adc
cmps
or
cld
(bad)
push
or
jb
mov
inc
(bad)
jmp
cmp
retf
ja
xor
dec
jne
rcl
mov
pop
mov
add
adc
sbb
inc
sub
or
inc
xchg
icebp
or
sub
(bad)
cmc
fiadd
jg
and
std
lea
jmp
das
rcl
pop
mov
sbb
adc
loopne
sbb
mov
fisubr
mov
push
std
sbb
xchg
scas
and
add
pop
repz
ret
jecxz
inc
push
(bad)
(bad)
(bad)
dec
push
mov
push
inc
cmp
stos
mov
pop
and
sti
lods
jno
mov
xor
call
std
in
jl
out
in
mov
adc
je
jnp
ret
mov
mov
jge
(bad)
(bad)
(bad)
aas
mov
inc
(bad)
jp
int3
lea
out
mov
mov
stos
xor
(bad)
push
stos
lods
cmp
jae
jmp
(bad)
xor
pop
nop
into
jg
ja
sbb
pop
jmp
dec
pop
mov
adc
shl
out
shr
jns
adc
mov
(bad)
(bad)
dec
repz
gs
push
into
jnp
aaa
cmc
or
movs
(bad)
jmp
(bad)
and
sbb
pcmpeqw
repnz
std
dec
or
nop
xlat
adc
clc
jbe
in
xor
bound
ja
das
stos
jle
cmp
push
stc
xor
mov
(bad)
(bad)
push
inc
loope
test
xlat
dec
test
add
sti
dec
push
lods
rol
into
(bad)
(bad)
(bad)
inc
dec
mov
mov
repz
xchg
(bad)
data16
jl
fist
cmp
xchg
adc
(bad)
sub
dec
das
fwait
ins
pop
(bad)
(bad)
(bad)
jmp
loopne
mov
ds
and
fcmove
jns
sti
jl
add
test
(bad)
(bad)
jmp
cmc
mov
test
fwait
pop
sbb
ret
fwait
push
cmp
jmp
push
jb
adc
sar
loopne
imul
pop
adc
jg
jne
mov
stc
aad
push
(bad)
xchg
(bad)
popa
repnz
cli
mov
dec
push
push
sub
(bad)
(bad)
dec
ret
cmps
cmps
out
test
sbb
call
ds
aas
or
mov
adc
jmp
(bad)
(bad)
(bad)
inc
xor
jmp
add
imul
sub
repz
sbb
inc
cld
jle
add
mov
scas
sub
and
or
mov
dec
xchg
scas
cmpxchg
test
cwde
scas
aam
cmp
loope
or
(bad)
icebp
sar
jmp
es
push
add
repnz
popf
pop
sbb
mov
sbb
push
sbb
enter
clc
add
lock
data16
(bad)
(bad)
dec
test
adc
vcvttps2udq
cli
call
sub
je
loopne
mov
ret
fcomip
loopne
gs
lods
sahf
cwde
adc
repnz
jo
dec
push
arpl
xor
je
(bad)
(bad)
mov
push
jb
ret
imul
add
xor
fwait
(bad)
(bad)
jmp
pop
and
add
fist
std
xor
std
jbe
fdivr
push
fdivrp
mov
idiv
mov
call
xor
or
(bad)
(bad)
(bad)
(bad)
inc
test
(bad)
stc
push
jge
std
sub
cdq
cdq
sbb
xchg
stc
mov
int
jns
stc
xor
(bad)
(bad)
jmp
sub
fcmovnu
fist
inc
inc
cmp
rol
and
enter
es
(bad)
(bad)
(bad)
dec
pop
imul
cmp
or
jbe
mov
fwait
or
mov
or
ret
(bad)
(bad)
(bad)
(bad)
fadd
retf
test
cmp
popf
movs
or
push
ror
pop
add
dec
(bad)
(bad)
(bad)
call
or
cwde
dec
xchg
call
fnstsw
sbb
pop
test
(bad)
(bad)
(bad)
(bad)
cli
xchg
sahf
mov
sub
pop
call
inc
pop
push
sbb
xor
sti
and
cmp
(bad)
jmp
xchg
xchg
ja
mov
mov
cmps
pop
add
imul
(bad)
outs
pop
xor
sub
and
jg
jl
pop
mov
mov
(bad)
(bad)
(bad)
inc
shl
pop
mov
xchg
cld
cmp
pop
leave
mov
pop
xor
in
dec
xor
cmc
(bad)
push
aas
jnp
pop
push
or
jne
std
rcl
jns
ss
pop
or
(bad)
(bad)
inc
dec
rcr
or
es
clc
movs
loopne
das
pop
movs
fsubr
mov
fimul
(bad)
sti
fimul
and
test
fbld
cmps
inc
fs
dec
loop
cmps
sub
pop
lock
(bad)
not
xrelease
xchg
and
pop
sbb
cwde
(bad)
(bad)
(bad)
jmp
pop
push
fsubrp
aad
jp
scas
and
pop
inc
push
push
stc
(bad)
or
inc
shr
jmp
or
popa
icebp
adc
imul
push
call
or
call
adc
push
test
call
lods
xchg
sbb
pop
xchg
mov
(bad)
push
dec
mov
inc
pushf
adc
out
mov
stc
push
call
(bad)
jmp
xor
fild
fiadd
push
sbb
imul
call
rcr
mov
mov
inc
lea
inc
outs
add
jnp
call
call
adc
fldcw
sbb
jb
push
icebp
movs
les
jmp
sar
out
xor
call
gs
push
(bad)
(bad)
(bad)
push
and
mov
sahf
gs
mov
outs
add
mov
dec
mov
(bad)
(bad)
(bad)
jmp
(bad)
jg
pop
dec
xchg
add
jecxz
push
pop
and
or
mov
enter
push
xchg
fs
pop
(bad)
sbb
ss
pushf
mov
jns
(bad)
es
clc
fstp
push
call
sbb
dec
cmp
cmp
neg
inc
hlt
nop
dec
jg
mov
dec
add
(bad)
dec
hlt
jo
adc
jecxz
fwait
cmp
aam
stos
fadd
pusha
or
test
ins
sbb
and
(bad)
(bad)
(bad)
jmp
mov
xor
popf
sub
push
sub
dec
addr16
push
adc
loopne
sbb
mov
(bad)
mov
push
pop
cli
in
sahf
dec
js
loopne
inc
jmp
popf
call
(bad)
(bad)
mov
dec
mov
and
xlat
cmps
jg
pop
sub
cmp
test
jbe
push
(bad)
(bad)
(bad)
call
xchg
outs
shl
das
xor
sub
push
pop
add
js
mov
(bad)
(bad)
(bad)
call
mov
xchg
dec
mov
push
std
stos
adc
(bad)
call
aaa
(bad)
mov
jecxz
in
rol
les
push
movs
fs
xchg
push
bound
aam
xchg
xchg
jae
push
pop
pop
pushf
jmp
call
jg
adc
pop
and
lods
push
mov
cdq
cmp
cli
mov
pop
out
enter
(bad)
inc
dec
pop
mov
movs
leave
cmp
cwde
xchg
ret
ret
xchg
mov
(bad)
fstp
daa
xchg
jle
mov
(bad)
(bad)
ds
ins
(bad)
test
test
(bad)
std
xchg
pusha
cmp
or
nop
(bad)
(bad)
(bad)
jmp
pop
add
mov
add
out
in
repnz
fwait
into
nop
and
(bad)
dec
lock
cld
pop
and
repz
imul
inc
or
(bad)
(bad)
(bad)
dec
cmp
fbstp
(bad)
mov
mov
jns
lahf
rol
inc
sbb
pop
bound
test
out
aam
(bad)
std
jno
ja
test
xlat
loop
movs
cmovg
xchg
pop
xor
cmps
jne
or
rcr
add
pop
or
das
clc
(bad)
push
dec
leave
or
mov
aam
aaa
dec
loope
lods
in
sub
div
(bad)
jmp
clc
test
sahf
sar
dec
mov
xor
cli
sub
lods
arpl
dec
adc
ret
add
and
push
clc
sub
mov
(bad)
inc
ret
out
mov
jle
lahf
sub
sub
aad
ret
xchg
jno
into
movs
(bad)
(bad)
(bad)
call
and
test
adc
aam
popa
lods
shl
aas
in
retf
inc
add
dec
lahf
nop
sub
in
call
cmp
inc
jmp
shr
xor
inc
pop
ret
retf
pop
pop
repnz
scas
sar
jns
scas
leave
ds
icebp
aad
and
rcl
sar
(bad)
inc
xchg
pop
dec
sahf
test
(bad)
das
and
int
fnstsw
call
fs
dec
hlt
cmc
jne
pop
(bad)
jecxz
or
lea
lods
xchg
push
xor
(bad)
(bad)
jmp
out
movd
sti
mov
icebp
sbb
mov
cmp
clc
(bad)
(bad)
jmp
imul
rcr
icebp
sub
shr
ins
add
push
mov
out
ja
(bad)
(bad)
(bad)
fucomp
ins
xchg
repnz
pop
xor
inc
retf
or
cs
rol
mov
das
cmp
sub
push
cmp
mov
jl
lods
dec
cmp
ret
fsub
inc
jno
mov
add
jl
fwait
stos
fs
inc
ss
out
mov
fcomp
(bad)
push
call
dec
or
xor
mov
in
movs
je
dec
mov
retf
dec
dec
mov
dec
sahf
enter
retf
xchg
cwde
push
fidiv
inc
(bad)
jae
push
repnz
xchg
xchg
sbb
(bad)
(bad)
(bad)
call
adc
adc
add
cmps
push
rcl
(bad)
bound
xor
retf
test
pop
add
sbb
(bad)
(bad)
inc
(bad)
xchg
cmp
leave
mov
rol
out
test
outs
inc
sbb
add
out
(bad)
leave
mov
mov
inc
add
aas
lods
in
mov
push
(bad)
call
in
mov
inc
mov
xchg
mov
add
and
mov
mov
into
push
xor
xchg
bound
inc
scas
mov
cli
mov
pop
adc
xchg
mov
les
ja
sti
out
cli
(bad)
dec
ret
lds
(bad)
xlat
adc
movs
pop
sbb
(bad)
dec
lea
and
sub
sbb
cmp
push
lds
lds
dec
and
(bad)
imul
inc
sub
in
inc
inc
iret
cmp
(bad)
(bad)
(bad)
inc
jp
jae
xor
xor
pop
data16
jne
xchg
and
push
mov
(bad)
(bad)
(bad)
push
sub
cs
jmp
pop
stos
dec
and
addr16
adc
ret
fmul
(bad)
(bad)
call
pop
repnz
lock
push
mov
or
cmp
(bad)
(bad)
dec
xlat
loope
aam
push
inc
jo
mov
icebp
arpl
mov
std
add
call
jg
aaa
std
adc
mov
push
mov
aad
xchg
push
add
ins
jno
push
cs
xor
dec
ja
or
pop
fcmovu
aas
das
cmps
and
fisttp
dec
mov
(bad)
(bad)
call
rcr
mov
or
pop
mov
test
shl
imul
in
xor
std
and
xor
fwait
jbe
scas
sub
(bad)
(bad)
mov
push
sbb
(bad)
(bad)
push
or
sub
div
ds
or
nop
cwde
dec
xlat
mov
mov
fdiv
push
mov
jno
jp
dec
inc
(bad)
(bad)
push
push
jnp
sub
rcl
icebp
cmp
sub
(bad)
dec
mov
cs
mov
daa
and
mov
xchg
sub
inc
ss
call
fsubr
push
lock
rol
cwde
jo
fisubr
push
xor
(bad)
(bad)
call
or
add
xlat
fcmovnbe
sbb
outs
test
or
dec
icebp
mov
adc
(bad)
(bad)
dec
adc
xor
out
cmp
test
pop
(bad)
(bad)
(bad)
(bad)
(bad)
hlt
fwait
mov
push
mov
clc
cmp
pop
cmc
(bad)
mov
dec
ds
scas
(bad)
(bad)
(bad)
call
xchg
es
and
rcr
arpl
cmp
add
(bad)
call
jecxz
mov
pushf
push
movs
push
or
mov
outs
mov
stc
(bad)
(bad)
(bad)
jmp
daa
clc
sbb
mov
jo
dec
call
stos
push
jp
jecxz
mov
(bad)
call
pop
out
inc
inc
(bad)
iret
jae
sub
ins
xchg
mov
sub
movs
xchg
rol
push
jmp
mov
inc
sbb
mov
cs
mov
scas
retf
mov
(bad)
mov
std
hlt
cs
jmp
or
or
retf
push
pusha
dec
push
(bad)
call
arpl
jno
ret
dec
ret
xor
sbb
shl
(bad)
(bad)
(bad)
call
xchg
jbe
lods
pop
xor
ret
hlt
sbb
pop
jne
out
(bad)
pminsw
(bad)
jmp
xor
mov
inc
mov
bound
push
sbb
add
xor
cli
ss
mov
dec
pop
mov
and
(bad)
dec
lock
sub
out
mov
mov
div
std
cld
mov
dec
mov
mov
icebp
(bad)
(bad)
jmp
clc
loopne
popa
ins
ss
and
jne
jmp
in
(bad)
(bad)
fistp
adc
(bad)
jne
jbe
adc
popf
add
mov
addr16
cmps
mov
mov
dec
mov
mov
ret
xchg
cmp
xor
(bad)
imul
sub
dec
and
push
sub
jnp
or
stos
mov
ins
pop
(bad)
(bad)
jg
add
push
mov
rcl
cmps
mov
mov
mov
int
(bad)
(bad)
(bad)
(bad)
ds
neg
mov
imul
xchg
xchg
push
(bad)
or
pushf
xor
xor
(bad)
call
in
and
aam
pop
mov
lea
or
cmp
(bad)
(bad)
(bad)
inc
loop
jecxz
cdq
sbb
cld
jb
mov
add
add
adc
fist
rcr
je
sub
movs
in
jno
popf
sbb
ror
jg
sub
jne
inc
sub
or
push
pop
int
mov
outs
(bad)
jg
mov
and
mov
fcomp
mov
out
loope
adc
mov
sub
in
pop
in
inc
jle
nop
jle
outs
lahf
fisubr
shr
jae
sahf
(bad)
das
mov
sub
push
sbb
(bad)
jle
inc
addr16
loopne
mov
(bad)
(bad)
(bad)
jmp
fistp
pop
mov
jb
les
sub
xor
sbb
push
bound
(bad)
(bad)
cmp
lahf
cmp
movzx
cmp
fsub
iret
sub
(bad)
jmp
(bad)
cmp
mov
jne
and
ins
gs
adc
(bad)
(bad)
(bad)
(bad)
cmp
aaa
xor
inc
mov
out
sahf
stos
jmp
cmc
inc
test
push
psllw
pop
ficom
(bad)
(bad)
call
in
push
adc
sub
fistp
fwait
mov
(bad)
jge
add
(bad)
mov
add
push
not
mov
fcom
or
(bad)
jg
inc
push
xchg
mov
scas
mov
or
lods
fcom
(bad)
(bad)
fst
mov
jge
jae
outs
inc
xor
cwde
shl
(bad)
out
sti
out
pop
ds
(bad)
jmp
sub
mov
call
outs
addr16
lods
out
mov
(bad)
fst
mov
ds
shr
in
adc
call
call
ins
push
pop
into
fldenv
outs
arpl
aas
jle
ins
out
add
(bad)
(bad)
(bad)
push
test
mov
int
outs
jmp
rep
xchg
push
(bad)
jg
inc
cli
les
sub
das
stos
bound
movs
fnstcw
out
xor
push
int
(bad)
(bad)
(bad)
js
add
cmp
sar
mov
ins
shr
gs
das
mov
xchg
mov
jecxz
inc
xor
ins
retf
(bad)
scas
movs
sub
xor
dec
(bad)
(bad)
(bad)
out
bound
test
mov
mov
pop
xchg
sub
dec
adc
sub
cli
(bad)
(bad)
(bad)
dec
fs
mov
in
or
xor
adc
test
loopne
and
mov
xor
inc
(bad)
jmp
cli
xor
scas
fiadd
movs
mov
mov
lahf
rcr
and
mov
(bad)
mov
adc
adc
cwde
in
movs
sbb
cmp
sub
xor
enter
mov
pop
inc
nop
push
or
(bad)
(bad)
push
leave
sbb
cdq
push
push
jmp
mov
stos
inc
or
xchg
test
xchg
jp
and
cmp
(bad)
dec
loopne
push
xchg
mov
jl
xor
lods
(bad)
(bad)
out
push
outs
repnz
or
std
imul
mov
fcmove
mov
call
xor
xor
pop
test
cmp
jmp
cmps
adc
aaa
mov
mov
(bad)
(bad)
dec
cmp
xchg
ss
loopne
retf
mov
sbb
push
lock
add
inc
push
mov
jb
gs
loop
lods
mov
mov
mov
pop
sub
sub
imul
jno
mov
stos
call
(bad)
(bad)
(bad)
cmp
call
ds
or
pop
inc
jmp
xchg
mov
loope
jle
aad
(bad)
call
cmp
mov
(bad)
scas
hlt
sbb
jmp
inc
or
push
nop
outs
jnp
sbb
xor
call
imul
and
ret
cmp
out
add
ret
fs
and
mov
push
mov
sub
hlt
dec
xchg
imul
stc
into
(bad)
call
push
shl
outs
xchg
xchg
mov
imul
jmp
jmp
stos
add
adc
xchg
popf
dec
sbb
(bad)
(bad)
mov
xor
cli
xchg
cmp
xor
cmps
pop
jmp
shl
packssdw
out
loop
shl
fdivr
jmp
sub
jmp
jne
cwde
mov
cmp
push
jnp
mov
xchg
jge
mov
(bad)
jmp
adc
and
jmp
push
xchg
jl
inc
or
jp
dec
xchg
retf
jns
pop
jmp
fst
jmp
out
in
out
pop
ins
xor
aas
pop
shl
jno
sbb
(bad)
(bad)
inc
adc
mov
inc
cmp
jo
and
(bad)
(bad)
call
dec
push
daa
cmp
lea
add
adc
call
call
fwait
push
and
(bad)
(bad)
(bad)
call
pop
jle
xchg
add
bts
aam
in
push
mov
sub
aad
popf
xchg
or
or
(bad)
(bad)
jmp
pop
loop
js
adc
in
(bad)
in
xor
aam
xchg
loop
(bad)
call
std
jecxz
mov
enter
shl
sbb
mov
push
loopne
mov
(bad)
jmp
lods
inc
push
inc
hlt
repz
stos
outs
pop
cmp
xchg
cld
sar
inc
mov
sub
cmp
xor
mov
addr16
mov
inc
inc
cmp
push
lods
(bad)
(bad)
(bad)
jmp
add
test
ret
jl
adc
push
stc
test
mov
sub
(bad)
call
push
dec
jle
mov
mov
loopne
lahf
add
or
pusha
arpl
lahf
or
adc
(bad)
call
in
out
scas
(bad)
xchg
dec
std
int3
dec
imul
js
call
sar
(bad)
dec
push
jne
je
dec
je
push
into
cdq
mov
and
xor
imul
(bad)
(bad)
dec
jle
stc
popf
dec
mov
call
test
mov
lock
(bad)
inc
fs
ds
jne
add
cmp
jno
jl
punpckldq
fist
add
jmp
sahf
inc
mov
push
jmp
dec
mov
scas
sbb
sbb
inc
push
pop
loopne
std
aaa
(bad)
(bad)
(bad)
jmp
mul
mov
ret
or
add
sbb
(bad)
cmp
sbb
movs
cs
int
(bad)
rol
in
(bad)
or
pop
arpl
mov
(bad)
(bad)
xor
daa
(bad)
(bad)
(bad)
call
js
or
pop
cmp
and
sbb
das
das
pop
cmp
dec
add
jno
ds
jmp
push
xchg
mov
fcomi
xchg
(bad)
(bad)
(bad)
push
xchg
sbb
jno
sbb
repz
fst
loop
repz
jg
int
pushf
int
xor
(bad)
(bad)
(bad)
mov
js
add
mov
(bad)
jns
out
fsub
cmp
xor
add
xchg
repnz
je
jo
aad
cmc
dec
dec
xchg
inc
and
or
(bad)
cmp
mov
fcomp
cdq
sub
xchg
pop
je
and
push
pusha
inc
or
dec
out
cmp
pop
pusha
adc
pop
add
jmp
add
stos
fisubr
push
leave
or
cwde
jg
inc
idiv
icebp
(bad)
call
in
outs
adc
dec
popf
retf
xchg
jge
or
jmp
jmp
mov
(bad)
(bad)
call
outs
inc
repz
loop
add
jmp
mov
ins
call
jge
add
pop
cld
pop
out
or
or
cwde
push
loop
loope
add
movs
aaa
xchg
mov
jecxz
stos
jle
lock
xchg
push
mov
icebp
hlt
sbb
(bad)
mov
(bad)
xchg
sub
adc
pop
and
mov
clc
and
fdiv
les
push
cwde
ret
fadd
imul
call
fmulp
popf
mov
(bad)
fistp
mov
adc
sub
repz
(bad)
adc
call
push
fiadd
xor
push
cmp
inc
sub
call
(bad)
(bad)
(bad)
call
in
push
out
ds
jns
push
pop
loopne
dec
jmp
fild
lds
(bad)
(bad)
(bad)
jmp
sar
loopne
cdq
es
and
imul
dec
pop
leave
pusha
sub
(bad)
(bad)
call
inc
test
or
aaa
mov
scas
mov
jmp
adc
stc
pushf
jg
push
mov
(bad)
inc
and
mov
xor
add
push
ret
xlat
mov
rcr
aam
dec
cmp
dec
pusha
(bad)
(bad)
(bad)
jmp
sbb
or
mul
mov
cs
test
adc
(bad)
(bad)
(bad)
mov
and
or
xor
adc
(bad)
sub
out
sub
sbb
or
(bad)
(bad)
(bad)
fld
mov
call
fdivr
xlat
cs
cs
cli
outs
xor
xchg
out
pop
das
mov
sbb
xor
ins
(bad)
jmp
test
out
dec
daa
sbb
cmp
mov
leave
stc
pop
into
sub
adc
or
(bad)
(bad)
call
push
mov
cmps
int
(bad)
mov
add
dec
sub
nop
push
(bad)
imul
jg
es
xchg
inc
pop
test
adc
in
xor
xor
ins
pop
call
xchg
(bad)
push
cli
jo
adc
in
xor
jmp
pop
dec
sbb
call
mov
(bad)
call
cld
into
adc
inc
lahf
loopne
popa
fstp
xchg
add
sahf
daa
mov
mov
cwde
hlt
js
and
adc
ds
xchg
(bad)
(bad)
(bad)
fidivr
mov
call
mov
cwde
popa
cs
jge
push
push
mov
(bad)
(bad)
(bad)
cli
push
lods
jo
sbb
sbb
and
jbe
ds
imul
out
daa
jo
movs
mov
jmp
les
jae
test
mov
mov
movs
mov
push
lahf
pop
and
test
frstor
mov
(bad)
push
cld
and
data16
cmp
inc
sub
stos
dec
pop
jg
xor
push
push
cmc
shl
mov
(bad)
jmp
pop
rcr
add
mov
std
push
aad
dec
sub
(bad)
loopne
dec
jne
mov
(bad)
(bad)
push
dec
xor
lds
push
jno
or
dec
ja
enter
mov
fldcw
sbb
fwait
sbb
hlt
xchg
(bad)
hlt
daa
and
(bad)
jg
and
dec
cmps
dec
sbb
mov
cmc
(bad)
(bad)
(bad)
(bad)
mov
fidiv
and
xchg
or
push
jmp
addr16
int
add
xchg
mov
call
fisttp
or
(bad)
(bad)
sub
sbb
(bad)
(bad)
call
push
dec
and
sub
scas
test
sbb
cmps
fdivr
(bad)
(bad)
inc
pop
mov
xor
xlat
push
in
sub
cmp
adc
inc
in
adc
add
inc
ja
mov
mov
jae
sub
pop
mov
in
and
mov
scas
or
sbb
ins
sub
pushf
jge
div
jecxz
mov
push
std
out
pop
mov
jne
mov
std
sbb
movs
rcr
addr16
pop
add
call
daa
mov
jmp
sub
ins
adc
jle
xor
(bad)
(bad)
jmp
ja
and
jne
jp
and
fist
out
xchg
or
sub
pop
sbb
adc
xchg
retf
jp
xor
pop
push
dec
or
push
sbb
xchg
cwde
mov
call
jle
sbb
sar
or
push
call
adc
sub
stos
es
lock
in
(bad)
call
push
sahf
fstp
and
cld
xchg
inc
adc
pop
jbe
(bad)
(bad)
jmp
xchg
add
scas
test
je
repz
adc
jecxz
mov
(bad)
jmp
aad
jb
add
xor
lods
test
sbb
jae
sub
sub
(bad)
(bad)
mov
rol
test
in
mov
push
xor
mov
push
push
retf
icebp
mov
dec
aam
dec
cmps
mov
push
fldcw
in
adc
into
(bad)
mov
(bad)
push
lock
adc
sbb
imul
pop
and
not
add
ss
(bad)
(bad)
inc
or
sub
ficomp
jbe
xor
push
mov
es
sbb
cmp
rol
cwde
cli
test
in
add
dec
js
shr
pop
(bad)
(bad)
dec
stos
cmps
xor
or
loopne
push
ret
push
mov
fmul
inc
ja
inc
in
push
push
rol
call
stos
cli
shr
dec
movs
mov
(bad)
(bad)
(bad)
(bad)
cmps
popf
dec
and
push
(bad)
and
mov
loopne
out
iret
sbb
and
sub
(bad)
(bad)
(bad)
dec
and
outs
cmp
retf
mov
pop
retf
jb
stos
cmc
dec
push
jle
sub
std
and
icebp
sbb
push
jno
and
push
jo
ja
cmps
dec
jecxz
mov
xor
daa
hlt
jg
(bad)
call
call
ja
adc
add
popa
sbb
add
pop
inc
scas
jmp
dec
mov
loope
leave
sahf
dec
add
mov
or
jmp
lea
mov
sub
xchg
adc
pop
hlt
pop
pop
aas
ss
xlat
push
pop
(bad)
les
jecxz
cld
and
cmp
push
jg
and
std
out
cdq
gs
lock
push
sar
(bad)
(bad)
jp
stc
mov
bound
push
test
jmp
or
xchg
jl
ins
mov
mov
xchg
(bad)
mov
or
mov
add
es
cmp
(bad)
(bad)
inc
out
pushf
enter
ins
push
and
pop
imul
mov
loopne
cmps
xchg
and
(bad)
(bad)
jmp
mov
mov
arpl
cmp
dec
arpl
lods
xchg
(bad)
test
push
fisubr
(bad)
(bad)
call
js
or
cwde
pop
jle
sbb
mov
push
test
add
(bad)
(bad)
inc
lods
push
cdq
adc
scas
outs
fdivr
mul
and
aaa
test
pop
das
(bad)
je
scas
popf
les
(bad)
(bad)
(bad)
(bad)
call
out
add
mov
outs
push
fistp
sahf
xor
dec
mov
icebp
(bad)
call
(bad)
(bad)
(bad)
jmp
add
add
lahf
cmp
mov
inc
mov
ins
mov
mov
test
stc
or
fist
(bad)
(bad)
(bad)
call
rol
stos
push
lock
or
into
movs
inc
xchg
repz
(bad)
dec
jb
ror
xor
(bad)
mov
xchg
loop
xchg
inc
ss
popf
in
mov
or
sub
or
add
scas
pop
loop
jmp
call
loopne
shl
outs
and
out
sub
cmps
arpl
sub
pusha
push
ficom
jmp
pop
loope
push
fwait
dec
adc
stos
lds
inc
lds
jno
and
(bad)
(bad)
push
scas
inc
ins
(bad)
fs
ins
and
push
jmp
cmps
setb
outs
loopne
arpl
(bad)
(bad)
(bad)
(bad)
(bad)
jp
cs
fisttp
sahf
rol
jp
adc
mov
push
pop
mov
(bad)
(bad)
(bad)
jmp
or
ffreep
mov
fs
dec
jmp
(bad)
(bad)
(bad)
jmp
mov
and
jb
add
adc
scas
in
je
mov
(bad)
(bad)
inc
or
xor
fistp
fcom
repnz
push
xor
add
(bad)
push
retf
sar
or
cdq
jmp
inc
cmp
inc
jge
push
nop
or
mov
ss
(bad)
(bad)
call
lock
or
pop
push
add
xchg
out
push
xchg
inc
ins
jp
dec
lahf
retf
hlt
xchg
push
(bad)
call
jae
sahf
push
add
adc
pop
(bad)
xchg
ins
pop
fwait
push
push
and
sub
sbb
mov
add
xor
and
add
mov
or
ds
mov
mov
test
(bad)
(bad)
cmp
(bad)
sahf
cs
and
and
stos
xor
(bad)
sti
(bad)
dec
jne
neg
pop
jg
jecxz
dec
in
(bad)
es
xchg
sbb
or
pop
(bad)
(bad)
(bad)
dec
out
xor
sub
sbb
sub
xor
pop
test
mov
(bad)
dec
dec
cmps
and
jno
lods
in
hlt
mov
shl
pop
aaa
pop
mov
sbb
xchg
add
fs
fisub
xor
dec
hlt
sbb
add
and
inc
jg
jge
out
mov
scas
xchg
pushf
fadd
mov
dec
add
mov
cmp
jno
movs
mov
dec
cmps
data16
(bad)
(bad)
cmp
jnp
xchg
push
pop
je
push
sub
pop
sbb
cld
(bad)
call
fidivr
jno
retf
sub
ss
cdq
cs
(bad)
jg
data16
jge
arpl
jae
ficomp
mov
(bad)
(bad)
(bad)
call
fimul
out
addr16
xchg
(bad)
sti
inc
iret
adc
push
mov
pop
push
xchg
js
retf
(bad)
(bad)
call
popf
mov
mov
or
and
movs
sbb
addr16
hlt
(bad)
call
push
mov
das
imul
dec
xchg
dec
ror
es
xchg
push
(bad)
(bad)
(bad)
(bad)
mov
and
and
mov
push
mov
xlat
or
data16
(bad)
(bad)
(bad)
call
mov
mov
dec
std
mov
shr
inc
daa
sub
xchg
or
adc
cmc
push
fucomi
out
fldl2e
pop
js
(bad)
(bad)
cld
std
ror
(bad)
pushf
(bad)
(bad)
jl
out
ss
add
(bad)
(bad)
call
scas
cld
test
sub
mov
or
shl
pop
dec
sub
(bad)
(bad)
(bad)
cmp
and
inc
stc
xor
clc
or
loope
cmc
sbb
sbb
jnp
xor
(bad)
(bad)
call
in
stos
mov
xlat
div
popa
lods
les
mov
mov
test
push
and
(bad)
(bad)
(bad)
mov
cmp
add
or
cmp
xor
les
fild
sbb
retf
inc
push
inc
retf
mov
cwde
add
mov
adc
scas
in
stos
clc
clc
(bad)
(bad)
mov
js
jmp
sbb
jg
xor
movs
mov
push
(bad)
(bad)
(bad)
jmp
and
daa
push
ficomp
gs
cmps
jp
cmp
pop
mov
(bad)
call
dec
jg
mov
cmc
sub
mov
jno
stos
call
fs
push
jbe
out
mov
inc
fadd
(bad)
(bad)
jmp
cmp
ja
movs
push
les
mov
jecxz
in
add
cmc
add
xor
mov
fdivr
mov
fmul
enter
cwde
not
std
mul
mov
inc
(bad)
popf
pop
sbb
dec
(bad)
(bad)
inc
loope
shr
jne
outs
inc
pop
out
jne
jae
sbb
mov
icebp
push
mov
fcom
into
and
pop
sbb
xor
(bad)
jg
(bad)
inc
iret
retf
cmp
iret
out
inc
enterw
cmc
mov
adc
fcmove
data16
mov
xor
push
call
cld
fbld
jno
cmp
push
jmp
jmp
in
bound
dec
std
(bad)
(bad)
(bad)
(bad)
clc
stos
cmp
lock
clc
popf
or
and
cmp
mov
mov
mov
and
(bad)
(bad)
jmp
adc
loope
mov
aaa
jo
or
mov
push
push
std
(bad)
inc
stc
sbb
(bad)
pop
ins
bound
jmp
repnz
daa
inc
popa
loope
push
and
pop
cmp
cmp
xchg
and
cmp
ja
nop
retf
sbb
iret
xchg
push
pop
xor
(bad)
(bad)
dec
add
jg
movs
loopne
(bad)
mov
out
imul
clc
push
pop
jmp
mov
ins
jmp
(bad)
std
test
mov
in
add
out
dec
xor
(bad)
(bad)
cmp
loopne
adc
push
inc
inc
dec
xchg
push
test
lods
outs
movs
mov
xlat
(bad)
(bad)
(bad)
push
or
in
mov
mov
rcr
push
inc
xchg
dec
fstp
clc
(bad)
(bad)
(bad)
jmp
int
jno
inc
pushf
dec
int3
sar
dec
add
mov
sub
fcom
clc
or
(bad)
stc
inc
loopne
xor
mov
mov
mov
cmp
and
and
outs
aam
ret
mov
inc
and
(bad)
(bad)
(bad)
push
mov
adc
mov
mov
push
adc
test
fmul
repz
(bad)
(bad)
push
mov
imul
jne
dec
push
loopne
add
scas
retf
xchg
(bad)
(bad)
(bad)
(bad)
js
add
jae
pop
sub
xor
mov
adc
jb
pop
or
xor
(bad)
(bad)
(bad)
cld
mov
add
dec
daa
inc
or
int3
pop
das
(bad)
xchg
add
pushf
mov
mov
jmp
cmp
shl
into
shl
outs
mov
push
jl
jb
retf
mov
jg
movs
sar
(bad)
dec
xchg
(bad)
sbb
aad
xor
cli
scas
call
inc
(bad)
(bad)
(bad)
push
fwait
sbb
fadd
mov
lock
xchg
push
xor
cmp
(bad)
(bad)
inc
adc
xchg
and
js
mov
sub
inc
retf
add
cmp
shr
popf
retf
(bad)
jmp
fwait
jp
sub
push
mov
out
(bad)
adc
xchg
mov
ja
mov
mov
sbb
add
aam
jns
lods
push
(bad)
(bad)
push
inc
pop
xchg
mov
mov
out
fwait
or
aam
jl
clc
pop
jp
pop
movs
(bad)
(bad)
(bad)
call
push
adc
mov
mov
dec
lock
sub
jl
retf
mov
mov
cmp
in
and
ins
sub
and
out
inc
dec
cld
test
(bad)
(bad)
(bad)
mov
sti
adc
mov
shl
cmps
outs
xchg
push
lea
dec
sti
js
cdq
lods
(bad)
(bad)
(bad)
inc
(bad)
out
retf
jne
shl
add
lods
xor
push
and
or
cmp
(bad)
(bad)
(bad)
dec
into
xlat
ss
jg
dec
(bad)
movs
jo
(bad)
es
fisttp
jbe
in
outs
or
cmp
dec
je
jmp
push
add
movs
pop
enter
enter
out
ins
jmp
(bad)
(bad)
inc
add
mov
test
jl
dec
mov
pop
push
ds
pop
push
add
sbb
loope
sub
pop
push
enter
popa
neg
fidivr
(bad)
cdq
dec
push
(bad)
(bad)
(bad)
jmp
and
jne
pop
push
lods
cmp
cmps
jl
clc
call
or
in
add
or
(bad)
(bad)
(bad)
dec
out
sub
add
icebp
fisttp
and
xor
mov
fwait
movs
call
and
xchg
xchg
std
(bad)
(bad)
call
sbb
sub
jg
mov
movs
int
xchg
add
push
or
popf
mov
imul
(bad)
(bad)
mov
dec
hlt
out
mov
rcl
ja
clc
int3
push
pusha
vcvtpd2dq
cld
das
push
dec
dec
(bad)
mov
dec
cmp
and
fadd
outs
sbb
jl
out
addr16
cmp
pushf
mov
mov
push
aad
xchg
mov
pop
mov
(bad)
(bad)
dec
jl
push
out
hlt
test
call
inc
inc
cmps
adc
jb
ds
adc
(bad)
call
js
loope
pop
or
mov
and
pop
mov
jne
mov
(bad)
push
mov
test
iret
addr16
push
push
and
lods
call
std
adc
pop
pop
mov
or
pusha
pusha
dec
cwde
cmp
js
push
rep
jge
ja
sub
subps
imul
ret
(bad)
(bad)
(bad)
dec
cmps
adc
mov
xchg
mov
daa
inc
es
mov
adc
mov
sub
mov
pop
sub
outs
stos
and
les
mov
mov
(bad)
(bad)
(bad)
jmp
cmc
std
bswap
in
data16
hlt
es
or
xor
into
dec
es
cmp
jmp
jmp
inc
lods
js
cdq
and
push
mov
xor
mov
or
(bad)
(bad)
inc
cmc
push
mov
mov
add
loopne
inc
mov
add
(bad)
(bad)
(bad)
(bad)
jmp
fldenv
mov
in
ins
shl
into
mov
inc
imul
(bad)
(bad)
(bad)
dec
dec
pop
aaa
cmp
add
dec
popa
xor
neg
sbb
les
(bad)
(bad)
(bad)
call
xchg
sbb
and
inc
dec
pop
mov
js
loop
mov
pop
ret
inc
jmp
(bad)
(bad)
(bad)
push
and
xor
in
mov
stos
not
lods
cld
mov
push
and
out
mov
inc
scas
adc
push
jle
loop
test
jno
jae
sbb
stos
out
fist
(bad)
(bad)
(bad)
inc
ss
pop
inc
or
loopne
mov
lods
inc
mov
call
pushf
mov
(bad)
call
xchg
test
mov
movs
add
pop
lods
inc
bound
call
jl
mov
xchg
stos
aas
pop
mov
lds
sbb
mov
mov
(bad)
(bad)
jmp
cmps
out
sbb
dec
xchg
xor
in
ss
test
inc
(bad)
inc
xor
jl
or
dec
dec
hlt
cmp
xchg
xorps
dec
lods
(bad)
(bad)
(bad)
(bad)
cmp
scas
fisubr
in
mov
stos
mov
out
jnp
ficom
fsub
push
inc
(bad)
(bad)
call
cmp
mov
loope
test
aad
or
mov
dec
call
ret
(bad)
jle
sbb
or
add
xchg
sub
inc
inc
ds
into
mov
jns
mov
xor
into
push
cmps
iret
and
xor
or
popa
cmp
ret
nop
mov
(bad)
mov
push
enter
call
pop
xchg
data16
jmp
xor
sti
jmp
cdq
neg
xchg
jne
adc
nop
mov
std
(bad)
cld
ins
inc
in
xlat
add
jmp
cmc
jmp
dec
add
inc
pop
or
adc
xchg
or
sbb
(bad)
(bad)
push
sub
sub
les
(bad)
arpl
adc
out
aaa
pop
cld
xchg
je
gs
imul
call
inc
icebp
(bad)
push
pop
add
repz
fdiv
daa
in
out
mov
call
movs
mov
adc
add
add
por
ss
push
neg
ds
(bad)
call
sbb
pop
sbb
mov
nop
jmp
and
std
xchg
jle
fnsave
(bad)
(bad)
mov
ss
and
pushf
out
mul
dec
lods
aam
push
push
repz
out
add
cmc
(bad)
(bad)
(bad)
call
or
mov
pop
dec
jmp
dec
mov
dec
loopne
or
sti
push
pop
xchg
and
(bad)
push
ret
shl
out
imul
clc
mov
aas
ja
pop
loop
(bad)
(bad)
(bad)
call
sbb
pop
mov
in
lods
mov
add
ret
sub
rol
test
cmp
adc
leave
shl
or
ds
(bad)
(bad)
(bad)
jmp
cwde
out
in
gs
icebp
(bad)
out
lods
add
scas
std
push
and
mov
(bad)
(bad)
dec
stc
mov
outs
sub
and
int3
clc
pop
mov
je
call
bound
hlt
jmp
int
dec
adc
adc
scas
scas
ins
(bad)
adc
in
adc
mov
jmp
das
mov
rcl
push
sub
inc
shl
jne
(bad)
(bad)
inc
xor
ret
rcl
and
inc
loopne
and
jo
cmp
test
cmc
rol
(bad)
inc
mov
xchg
sub
and
push
push
push
frstpm(287
pop
cmp
ds
push
sbb
lds
cdq
jno
test
mov
addr16
push
sti
mov
cmc
stos
test
xchg
(bad)
(bad)
call
dec
dec
mov
xchg
cmp
clc
and
fcomi
in
lar
in
nop
js
(bad)
(bad)
(bad)
dec
mov
inc
retf
jp
xor
push
or
push
cs
push
imul
ret
pop
(bad)
(bad)
(bad)
inc
add
mov
fwait
dec
stc
inc
shr
cmp
sbb
mov
sbb
arpl
sbb
or
push
sub
jp
pop
repz
in
dec
fidiv
stos
and
imul
(bad)
call
shr
movs
dec
cmp
cli
or
shl
(bad)
mov
cmps
pop
test
addr16
sub
inc
jmp
mov
repz
and
stos
adc
rcr
xor
jb
mov
jmp
das
das
xrelease
add
scas
(bad)
(bad)
(bad)
jmp
jmp
xor
cmp
lods
sub
mov
jno
(bad)
push
aad
adc
jae
ss
(bad)
(bad)
jnp
fisub
fst
cmp
icebp
xchg
mov
popf
idiv
idiv
or
and
dec
(bad)
jmp
cmc
sub
xor
sub
(bad)
clc
outs
xchg
mov
xchg
idiv
push
(bad)
(bad)
(bad)
push
jbe
enter
stos
mov
cmp
xor
mov
loope
repz
(bad)
(bad)
jmp
sub
in
jg
pop
iret
xchg
imul
push
ja
adc
arpl
push
stos
test
sub
outs
mov
mov
adc
es
ret
in
push
mov
(bad)
pop
adc
(bad)
(bad)
(bad)
jmp
mov
imul
jns
call
and
mov
fisub
or
(bad)
push
sbb
imul
popa
movs
mov
sub
adc
jp
jl
jg
(bad)
(bad)
(bad)
call
inc
call
pusha
hlt
mov
rol
cmps
imul
jmp
add
inc
add
add
adc
and
mov
jecxz
dec
aas
jbe
dec
push
dec
cmp
into
pop
std
mov
int3
(bad)
rcr
xchg
pushf
pop
mov
add
push
shl
sbb
jl
leave
(bad)
pop
and
add
clc
inc
jno
das
mov
jb
ss
mov
push
ins
push
pusha
ficom
or
jnp
das
mov
sar
push
mov
jbe
je
xor
jle
jecxz
test
(bad)
(bad)
call
jmp
jns
popa
pop
sub
(bad)
pop
inc
popa
cld
jbe
add
adc
dec
shl
(bad)
mov
adc
add
pop
cmp
xchg
xor
pop
push
retf
mov
mov
pop
jae
test
(bad)
dec
mov
push
shr
lods
jmp
jae
shl
cmc
aad
(bad)
push
add
cmp
sub
cmp
push
mov
das
xchg
loope
(bad)
jg
shl
movs
sbb
push
mov
or
add
or
movs
stos
(bad)
(bad)
mov
mov
retf
sbb
popf
inc
add
shl
(bad)
(bad)
(bad)
call
mov
jo
retf
ret
and
mov
inc
aam
ins
sub
or
add
adc
pop
and
adc
xchg
inc
jne
cmps
mov
iret
cli
jecxz
add
(bad)
(bad)
jmp
fstp
mov
int3
push
mov
cmp
add
ret
lahf
cmp
loopne
xchg
je
(bad)
(bad)
(bad)
call
enter
retf
and
jo
mov
into
inc
push
adc
sbb
sub
sub
test
push
lahf
adc
stc
frstor
mov
cmp
(bad)
jmp
adc
je
ret
pop
pop
xchg
xchg
ja
shl
rcr
fst
jmp
int3
call
test
repnz
mov
pop
cmp
xchg
imul
push
ret
stc
sbb
push
test
mov
cs
adc
(bad)
(bad)
dec
xchg
iret
call
and
xchg
enter
push
adc
scas
add
(bad)
jmp
pop
cs
or
adc
loop
or
rcl
(bad)
mov
fst
jmp
sub
hlt
inc
mov
ror
sar
shl
jae
cmps
sub
loopne
out
or
mov
pop
fdivr
aas
mov
dec
ins
xchg
inc
pop
(bad)
(bad)
(bad)
call
push
std
jmp
inc
stc
add
jb
adc
bound
pop
inc
cld
pop
dec
les
call
scas
sub
mov
lds
xor
xlat
adc
(bad)
inc
pop
(bad)
mov
ror
dec
rcl
in
retf
inc
inc
add
(bad)
(bad)
jmp
mov
and
xor
sti
jbe
pop
push
js
idiv
(bad)
(bad)
(bad)
fiadd
arpl
aad
push
(bad)
xchg
xor
ror
jg
stos
jl
out
rol
in
(bad)
(bad)
(bad)
fmul
add
test
loopne
jnp
mov
sbb
(bad)
push
stc
scas
daa
in
push
dec
(bad)
(bad)
(bad)
call
movs
ror
enter
ins
rcl
rol
jle
(bad)
lock
push
out
imul
(bad)
(bad)
jg
aad
jb
add
dec
dec
push
(bad)
lds
dec
jle
or
add
sar
(bad)
call
neg
fwait
das
adc
jb
fdiv
out
out
jae
pop
pop
ja
push
xor
(bad)
(bad)
jg
xchg
int3
or
xchg
mov
mov
ret
mov
mov
or
aad
sbb
(bad)
(bad)
(bad)
inc
iret
lds
aad
scas
xchg
fwait
not
push
icebp
jno
lods
inc
not
mov
cdq
jbe
scas
(bad)
(bad)
(bad)
(bad)
mov
ret
and
in
jmp
nop
adc
wbinvd
cli
pop
sbb
clc
(bad)
(bad)
jmp
inc
lds
sbb
mov
stos
fistp
call
jl
pop
fcmovnu
data16
(bad)
(bad)
cmp
scas
cmps
xor
fiadd
in
adc
or
pop
popa
(bad)
(bad)
(bad)
(bad)
call
add
sbb
jnp
add
mov
push
inc
mov
push
cwde
in
xor
and
(bad)
(bad)
jmp
stc
dec
in
(bad)
xor
dec
in
sub
jns
inc
xchg
and
adc
(bad)
(bad)
jmp
or
neg
add
ins
add
pop
push
data16
adc
mov
dec
xchg
push
test
jmp
gs
mov
jl
jmp
jne
mov
std
jmp
adc
lds
adc
adc
outs
test
lods
cs
stc
xchg
lds
ja
popa
sar
(bad)
call
and
inc
xchg
mov
movs
add
jl
push
mov
gs
dec
sar
xor
xchg
and
mov
call
and
sti
leave
mov
jl
sbb
in
call
push
and
or
jmp
fnstsw
scas
mov
(bad)
(bad)
(bad)
jmp
mov
leave
cli
repz
sbb
pop
mov
gs
mov
(bad)
dec
aam
push
mov
and
push
dec
loop
push
xor
mov
(bad)
jmp
adc
cs
sti
xor
repnz
xlat
sub
dec
push
(bad)
(bad)
(bad)
call
lock
sbb
and
mov
fwait
mov
cmp
xchg
inc
icebp
mov
mov
inc
cmp
test
out
sub
and
mov
ja
stos
hlt
(bad)
(bad)
push
mov
test
test
pushf
jb
sbb
or
pop
mov
fcmovbe
(bad)
jmp
inc
jb
cmp
mov
sbb
out
xor
xchg
cmp
test
(bad)
fdiv
aam
cdq
rol
js
and
dec
hlt
jmp
push
sub
mov
(bad)
sbb
jecxz
jge
xor
outs
push
push
ret
pop
add
(bad)
jmp
(bad)
ror
outs
inc
jb
lods
pop
mov
aam
in
call
dec
jno
jnp
push
mov
inc
cmp
adc
sub
jnp
xlat
inc
stos
fadd
dec
push
sar
(bad)
call
sbb
cmps
or
and
rcl
add
mov
mov
(bad)
pop
cli
fcomip
cmp
pop
shr
xor
inc
(bad)
(bad)
(bad)
(bad)
jmp
xchg
mov
sahf
in
and
sbb
ret
mov
icebp
cmp
xchg
(bad)
(bad)
(bad)
push
sub
add
popa
sub
adc
dec
popa
outs
in
sbb
pop
ja
xor
pop
mov
(bad)
jmp
cmp
cvtdq2ps
cdq
pop
sar
jl
das
mov
cli
outs
jno
(bad)
(bad)
call
mov
das
mov
push
add
mov
movs
push
movs
pop
xchg
jg
cmp
(bad)
js
repz
jmp
xor
out
jbe
add
(bad)
aad
(bad)
xchg
push
or
add
ss
jmp
stos
or
xor
sub
(bad)
call
jno
lods
inc
jle
push
cmp
mov
lds
pop
or
ror
mov
cmp
call
fstp
push
mov
out
xor
or
inc
inc
sahf
jmp
(bad)
inc
jl
ja
lds
les
enter
mov
aam
fild
push
pop
sti
pop
es
jg
dec
inc
(bad)
in
mov
mov
mov
movs
popf
jns
sbb
(bad)
call
test
mov
rol
add
or
mov
outs
pop
mov
fcomip
movs
mov
addr16
aad
fisubr
xor
push
jle
mov
xchg
(bad)
(bad)
inc
ja
push
cmp
or
add
sahf
rcl
movs
out
clc
push
(bad)
(bad)
(bad)
push
mov
push
ret
sbb
and
(bad)
iret
xor
xchg
mov
(bad)
mov
clc
(bad)
or
pop
mul
xor
outs
xchg
cmps
(bad)
rep
jecxz
mov
movs
(bad)
(bad)
call
pop
add
mov
xchg
mov
xor
adc
jnp
and
div
mov
(bad)
xchg
xchg
and
(bad)
into
xchg
mov
dec
jg
(bad)
(bad)
(bad)
ds
xlat
push
cld
and
ror
fwait
sbb
pop
xor
mov
das
mov
leave
xchg
mov
(bad)
(bad)
dec
and
dec
jmp
sbb
push
fadd
or
push
and
(bad)
(bad)
(bad)
aaa
ret
pop
and
dec
movs
fstp
sub
adc
mov
arpl
(bad)
(bad)
(bad)
(bad)
cmp
test
stos
fdiv
jo
fld
adc
push
or
jae
mov
(bad)
(bad)
mov
and
out
je
mov
mov
pusha
sub
(bad)
(bad)
call
xor
pop
xor
lock
pop
iret
dec
out
jo
mov
sbb
int
es
les
scas
dec
push
inc
loope
xor
clc
jmp
call
fcmovu
push
aam
(bad)
add
ds
mov
stos
push
mov
mov
push
jl
xor
dec
jg
js
or
mov
xor
cmps
xchg
(bad)
(bad)
(bad)
call
adc
add
pop
and
cmp
push
repz
mov
(bad)
pop
lock
jmp
aad
pop
push
dec
iret
jmp
add
(bad)
(bad)
(bad)
jg
lea
sub
mov
setge
test
xor
call
pop
vmovdqu
jl
pop
lock
mov
je
fisttp
inc
adc
pop
inc
pop
repz
(bad)
jmp
popf
inc
adc
pop
dec
rol
xor
sbb
inc
inc
std
mov
cmp
inc
in
call
xor
(bad)
(bad)
jmp
mov
or
out
repnz
pop
lds
adc
repnz
scas
cs
(bad)
(bad)
jmp
test
ins
lea
add
test
sub
adc
xor
lahf
cmps
mov
(bad)
mov
dec
ins
movs
or
mov
or
fdivr
jg
(bad)
inc
addr16
jecxz
out
mov
or
idiv
adc
(bad)
(bad)
call
test
les
push
xchg
sbb
push
jge
std
movs
mov
sahf
adc
xchg
out
fdivr
xchg
push
xor
repz
cmp
jb
(bad)
(bad)
(bad)
push
push
mov
shl
sub
dec
int
and
dec
shl
out
stos
mov
(bad)
(bad)
(bad)
call
imul
mov
mov
mov
dec
adc
(bad)
neg
jmp
or
(bad)
(bad)
(bad)
jmp
lods
fwait
cdq
or
movs
in
or
mov
aam
ja
test
cmps
outs
call
pop
(bad)
div
inc
push
out
cli
(bad)
sti
loopne
ja
pop
inc
jne
call
popf
int
inc
sbb
adc
and
adc
popa
arpl
mov
jg
data16
enter
rcl
mov
sahf
pop
mov
ins
push
ins
mov
inc
cmps
ja
(bad)
(bad)
mov
cmp
sub
push
(bad)
pop
mov
fldl2e
popa
loope
fadd
push
popf
jo
fwait
(bad)
dec
ds
mov
or
lods
jecxz
jge
sub
xlat
jg
(bad)
jmp
addr16
cmp
or
or
(bad)
sar
(bad)
(bad)
call
in
cmp
mov
and
les
xor
adc
inc
xor
jmp
(bad)
cdq
or
or
pop
sub
rcr
daa
mov
(bad)
(bad)
(bad)
dec
outs
sub
cld
cmps
pop
data16
sbb
sub
jb
dec
jnp
jge
(bad)
jmp
or
(bad)
ficomp
es
sub
push
and
hlt
and
cmps
(bad)
(bad)
(bad)
jmp
(bad)
push
mov
xchg
and
hlt
inc
shr
call
add
add
(bad)
(bad)
call
sub
(bad)
shl
iret
mov
jecxz
addr16
add
das
cwde
(bad)
dec
loope
push
icebp
sub
das
push
mov
stc
inc
cmp
jmp
hlt
or
push
mov
dec
pop
xor
pop
push
jnp
loop
mov
bound
sub
(bad)
inc
sbb
and
push
js
xchg
out
sbb
not
(bad)
call
fld
(bad)
push
fcom
mov
sub
mov
mov
(bad)
(bad)
out
cli
add
(bad)
adc
(bad)
dec
adc
adc
or
cmc
add
(bad)
(bad)
jmp
inc
cmc
cmp
cmc
arpl
idiv
xchg
or
sub
das
and
pop
dec
test
iret
sub
dec
ret
sar
sub
dec
jp
int3
xchg
sub
adc
sub
ud0
out
clc
nop
xchg
ins
sub
into
add
fisubr
xor
hlt
adc
pop
aas
(bad)
(bad)
(bad)
inc
dec
mov
cmp
(bad)
(bad)
gs
(bad)
sbb
mov
(bad)
pop
aaa
sbb
daa
inc
jg
mov
loop
das
xchg
and
pop
leave
int3
ja
fbld
rcl
push
(bad)
(bad)
(bad)
(bad)
(bad)
js
std
push
jno
adc
jmp
sub
xor
pop
mov
adc
popf
cmp
(bad)
dec
call
cmc
xor
xor
add
retf
or
sar
push
ror
dec
dec
sbb
shr
scas
movs
sahf
ss
(bad)
jmp
call
push
fstp
daa
inc
pop
push
pop
mov
push
push
ins
jg
(bad)
dec
and
cli
scas
fwait
fwait
mov
stc
in
clc
and
sbb
ins
xchg
sbb
(bad)
(bad)
cmp
lods
jg
das
mov
adc
je
pop
mov
xchg
jo
cmps
hlt
fwait
pop
call
movs
mul
mov
ins
adc
adc
push
(bad)
(bad)
fistp
stos
pop
push
dec
dec
gs
mov
rol
ja
rcr
mov
movs
xor
(bad)
mov
mov
adc
call
aam
ror
repnz
call
fdiv
push
retw
pop
xchg
ficom
fwait
popf
(bad)
jmp
aaa
fisub
dec
ins
mov
add
out
jle
mov
sti
cmp
stos
les
test
(bad)
dec
aad
inc
in
imul
(bad)
(bad)
inc
inc
scas
mov
xchg
adc
dec
mov
test
push
dec
pop
out
and
std
call
(bad)
xchg
adc
pop
pop
rcr
xor
dec
push
fnstcw
das
cli
push
in
mov
iret
int
mov
lds
int
mov
add
ret
cmc
dec
cmc
mov
clc
xor
into
adc
jg
leave
clc
std
jae
sbb
push
and
inc
ds
sbb
loop
xchg
hlt
mov
(bad)
(bad)
inc
sub
hlt
jb
jecxz
pop
inc
fcomp
bound
inc
fsubr
loope
inc
ret
jmp
fdivr
sbb
jae
jnp
or
int
jns
outs
ret
out
fcom
sbb
(bad)
(bad)
(bad)
call
push
adc
xchg
ds
(bad)
aam
imul
mov
jl
mov
out
(bad)
sub
jmp
pop
int3
add
adc
mov
jbe
mov
leave
pusha
stos
pop
movs
les
add
xchg
inc
jl
loopne
push
(bad)
mov
ds
xchg
jl
(bad)
(bad)
jmp
sub
enter
and
mov
sbb
loope
mov
icebp
adc
ins
pop
and
out
(bad)
(bad)
(bad)
inc
add
sbb
hlt
push
test
cld
sbb
cmp
sar
(bad)
(bad)
(bad)
ficomp
loopne
fist
sbb
sar
in
jo
cmp
or
xlat
(bad)
(bad)
(bad)
dec
xchg
adc
movs
icebp
lahf
call
jp
inc
inc
test
imul
pop
xor
(bad)
(bad)
dec
sub
xchg
ds
int3
fcom
(bad)
(bad)
and
push
shl
mov
cmc
(bad)
(bad)
fld
adc
pop
scas
(bad)
nop
iret
aaa
push
sbb
pusha
xchg
pop
pop
sub
fisttp
sub
inc
fwait
repnz
pop
fldcw
lds
dec
test
(bad)
jg
jae
clc
inc
inc
lods
sbb
or
test
ins
cmp
jl
into
clc
dec
gs
(bad)
(bad)
inc
mov
in
movs
test
and
ds
std
(bad)
mov
(bad)
mov
(bad)
(bad)
jmp
dec
hlt
retf
cld
jle
dec
aam
mov
push
das
retf
fwait
inc
fld
out
and
aaa
test
sub
imul
sar
int
jbe
sub
push
jg
(bad)
push
ja
jb
adc
pop
shr
inc
pop
or
enter
cmp
(bad)
(bad)
dec
adc
imul
cmp
push
fs
outs
xchg
pop
out
adc
std
(bad)
(bad)
(bad)
fdiv
push
aaa
mov
in
pushf
inc
mov
xchg
mov
inc
int
mov
std
push
jg
mov
pop
out
cmp
(bad)
inc
push
aam
cwde
push
fldcw
fldcw
(bad)
cli
mov
mov
(bad)
(bad)
(bad)
dec
icebp
ins
pushf
dec
nop
inc
and
dec
jp
jp
xchg
sub
mov
sbb
(bad)
call
std
mov
adc
add
ret
add
addr16
xor
aad
movs
(bad)
(bad)
(bad)
dec
pop
fs
cs
add
in
pushf
lahf
lods
fwait
dec
and
dec
xchg
fcmovu
ds
idiv
(bad)
mov
loop
push
sbb
or
jmp
retf
xlat
mov
dec
push
sbb
sbb
lahf
loope
dec
jo
xor
scas
sysexit
pushf
fimul
ficomp
(bad)
jmp
mov
out
rcl
jp
jo
pop
xor
pop
sub
xor
(bad)
push
call
jno
lods
stos
clc
push
xlat
les
sbb
jle
fldcw
mov
jno
in
or
mov
mov
or
test
mov
xor
loop
std
(bad)
call
ss
lahf
push
adc
ret
adc
pushf
add
loopne
(bad)
(bad)
(bad)
aas
jmp
or
xor
lahf
cmps
mov
dec
sub
fstp
scas
ins
xchg
(bad)
(bad)
(bad)
(bad)
in
or
adc
jns
fdivr
jb
lds
arpl
fsubr
ja
movs
out
repnz
dec
push
(bad)
(bad)
(bad)
inc
mov
gs
les
mov
popf
dec
retf
xor
out
fwait
addr16
hlt
or
mov
lds
xchg
jno
(bad)
(bad)
inc
lods
dec
retf
xchg
mov
loopne
xor
int3
mov
inc
adc
int3
adc
inc
inc
pop
hlt
(bad)
(bad)
xchg
push
xchg
ret
je
rcr
cmp
dec
je
xchg
sbb
pop
lock
(bad)
cmp
dec
xchg
mov
cmc
ins
scas
adc
scas
retf
clc
inc
jge
mul
mov
clc
(bad)
(bad)
jmp
add
inc
jns
leave
sbb
cmp
pop
iret
icebp
adc
(bad)
(bad)
jmp
inc
neg
adc
mov
sbb
mov
mov
and
cli
xor
je
sbb
mov
ja
vmread
(bad)
(bad)
(bad)
(bad)
cmp
rcl
jle
and
loope
cmc
clc
das
adc
cmp
xchg
lahf
pop
ret
(bad)
(bad)
(bad)
push
test
sbb
adc
mov
dec
neg
fsubr
lods
jecxz
cmc
mov
push
sti
(bad)
(bad)
call
cld
mov
ret
repz
inc
jns
aaa
pop
iret
rol
dec
into
mov
inc
add
test
(bad)
jg
repz
jp
ins
jbe
dec
stos
ins
sub
arpl
scas
mov
mov
push
push
(bad)
(bad)
(bad)
push
repz
sbb
test
in
repz
outs
pushf
adc
pop
inc
popf
or
inc
ret
(bad)
(bad)
(bad)
jmp
cmp
movs
xchg
xchg
jmp
fnsave
xor
sahf
cmp
mov
(bad)
(bad)
jmp
ins
out
xchg
ins
sub
imul
scas
fld
or
ss
(bad)
(bad)
(bad)
jmp
push
hlt
test
xor
enter
sbb
or
add
sbb
add
dec
mov
cmp
mov
xchg
xor
fcom
cld
lods
pop
sub
mov
pusha
jo
in
cwde
rol
or
mov
mov
mov
daa
imul
(bad)
(bad)
(bad)
call
xor
div
imul
push
push
dec
cmc
jne
fisub
(bad)
call
cld
mov
nop
pop
xchg
pop
jmp
jae
mov
mov
sub
inc
jecxz
push
jle
gs
cmp
xor
and
nop
fdivr
(bad)
(bad)
inc
mov
xlat
cmp
leave
pusha
sub
(bad)
dec
mov
repz
pop
aad
std
loope
jne
sbb
(bad)
(bad)
push
rcl
(bad)
hlt
xor
mov
ds
mov
pop
xor
sbb
(bad)
(bad)
(bad)
push
in
je
jmp
or
adc
mul
mov
(bad)
(bad)
jmp
addr16
(bad)
leave
jo
sbb
idiv
jnp
lods
ret
mov
jp
daa
daa
mov
mov
(bad)
(bad)
(bad)
in
call
ins
inc
pushf
sub
cmp
cwde
nop
xor
pop
xor
dec
lea
(bad)
(bad)
(bad)
jg
xchg
cmp
push
ret
inc
xchg
push
inc
repnz
adc
(bad)
lea
inc
std
jmp
outs
jg
sar
push
psllq
jb
bound
icebp
je
pop
xor
out
lahf
retf
fmul
shr
jl
or
jg
ins
or
loope
inc
pusha
push
add
lods
fimul
dec
push
mov
pop
je
imul
ds
adc
xchg
jmp
iret
inc
jle
and
add
jmp
and
mov
inc
mov
ds
(bad)
call
sub
mov
or
ret
ja
sub
fdivr
pop
mov
das
dec
sbb
(bad)
push
call
es
(bad)
std
mov
into
and
cdq
jle
pop
in
ret
stc
adc
(bad)
call
sbb
test
sbb
and
jge
sub
cmc
ja
lock
(bad)
jmp
loopne
retf
push
cmps
dec
mov
imul
(bad)
dec
dec
cmp
jg
sbb
inc
rcl
add
enter
(bad)
inc
cmps
adc
jbe
std
dec
pushf
cmp
adc
xchg
push
and
(bad)
call
pusha
out
data16
xor
test
adc
es
mov
(bad)
(bad)
(bad)
push
adc
imul
ret
fdiv
xor
or
test
mov
and
call
and
ss
(bad)
idiv
push
fldl2t
add
mov
stos
sbb
ret
(bad)
(bad)
dec
cmp
pop
cli
pop
cwde
cmp
pop
shr
in
push
cmp
js
call
mov
mov
pop
and
dec
in
(bad)
inc
push
inc
bound
inc
(bad)
or
(bad)
(bad)
jmp
push
inc
aam
adc
pop
scas
cwde
cmp
fsubr
in
es
push
adc
jmp
dec
loop
pop
test
cs
sti
in
adc
and
inc
sbb
jmp
or
inc
add
clc
fild
sbb
push
stos
sti
les
out
(bad)
(bad)
(bad)
call
adc
retf
push
cmp
xchg
mov
sti
push
mov
add
pop
jo
movs
call
setge
xor
push
pushf
iret
mov
add
inc
(bad)
sbb
inc
outs
bound
or
test
jg
mov
adc
std
sbb
adc
xchg
lods
fcomp
cmps
bound
retf
jmp
inc
in
add
pop
cmps
xor
xrelease
or
(bad)
(bad)
(bad)
(bad)
jns
mov
mov
out
dec
in
inc
or
cmps
xchg
jae
adc
pop
add
push
push
test
aad
dec
push
dec
shl
jns
pop
inc
adc
push
pop
dec
push
add
(bad)
(bad)
(bad)
jle
jmp
mov
sub
jge
imul
or
fdivrp
sbb
(bad)
(bad)
(bad)
call
jns
fild
xchg
xchg
xchg
pop
mov
sbb
retfw
mov
stos
cli
sbb
pop
push
lock
inc
stos
(bad)
jmp
sahf
clc
jo
cmp
sbb
or
fisttp
push
xchg
jmp
popf
sub
add
(bad)
ficom
pop
xor
or
test
xor
and
or
mov
mov
cdq
shl
xchg
mov
dec
lock
ja
cld
outs
cmp
outs
add
in
retf
mov
pop
dec
aas
(bad)
dec
dec
mov
les
mov
push
bound
push
and
ror
xchg
pop
fwait
pop
xchg
(bad)
repnz
mov
in
daa
(bad)
jmp
shl
jnp
bound
jp
stos
dec
inc
xchg
xchg
popf
ret
lahf
push
test
fist
(bad)
fistp
or
adc
inc
jge
dec
cmp
js
sahf
shl
push
cmp
xchg
mov
jbe
xchg
adc
jp
in
mov
inc
dec
inc
mov
in
(bad)
push
cmc
push
shl
mov
sbb
pop
sbb
or
lds
mov
(bad)
dec
sbb
enter
dec
lock
pushf
aaa
mov
adc
sub
rcl
(bad)
call
leave
or
sub
sub
mov
xchg
leave
das
dec
sub
outs
(bad)
(bad)
(bad)
inc
sbb
inc
add
jg
dec
or
mov
mov
push
pop
mov
test
lods
mov
mov
mov
cmps
(bad)
sub
in
jg
jmp
call
pushf
icebp
mov
sbb
jmp
inc
jns
sti
xchg
es
lods
xlat
cmp
inc
cld
and
sbb
int3
xchg
sbb
aam
jmp
mov
mov
ins
in
icebp
mov
mov
in
dec
fcmovnu
dec
sti
retf
mov
add
(bad)
out
clc
test
push
loopne
and
adc
pop
(bad)
or
shl
scas
fwait
aad
cld
(bad)
(bad)
call
in
hlt
js
lahf
sbb
mov
jmp
xor
ror
inc
aad
(bad)
(bad)
call
mov
cwde
pop
xor
dec
xor
inc
paddw
call
xor
add
call
cmp
add
push
cmps
(bad)
ss
inc
iret
adc
inc
cmp
pop
in
aas
add
cmp
movs
pushf
dec
sbb
es
(bad)
(bad)
push
cmps
mov
daa
in
(bad)
fimul
mov
dec
lahf
out
jmp
adc
xlat
sub
mov
push
xchg
gs
cmp
aad
sti
mov
sbb
and
xchg
mov
test
jp
sti
inc
mov
clc
dec
xor
cmp
xchg
ficom
mov
out
movs
jns
(bad)
(bad)
(bad)
call
adc
adc
jo
clc
mov
aad
inc
cmc
outs
push
shr
imul
jmp
inc
cmps
dec
enter
les
sbb
sub
(bad)
sub
(bad)
inc
xchg
outs
lods
sub
pop
(bad)
imul
(bad)
(bad)
(bad)
jmp
sahf
loopne
aad
cdq
xlat
sti
dec
out
add
movs
inc
fnstenv
push
jecxz
jg
sub
(bad)
(bad)
(bad)
dec
aad
out
in
sbb
sbb
and
and
fimul
adc
cld
mov
adc
(bad)
(bad)
(bad)
jmp
and
push
sub
push
or
sbb
fs
pop
jg
(bad)
call
js
pop
aas
xchg
rcr
and
sahf
xchg
pop
lea
jp
aas
cmp
jnp
(bad)
(bad)
call
jns
(bad)
movs
or
cli
adc
cmps
mov
cmps
mov
(bad)
(bad)
jg
and
cmp
fistp
(bad)
mov
loop
mov
or
popa
(bad)
(bad)
(bad)
call
mov
mov
mov
pop
scas
inc
xchg
sti
nop
imul
jno
or
dec
push
sub
(bad)
(bad)
push
(bad)
mov
adc
xlat
add
add
mov
or
repnz
mov
leave
or
pop
das
mov
cmp
dec
test
xlat
xor
jo
and
fidivr
inc
mov
(bad)
(bad)
(bad)
cmp
dec
push
fiadd
es
push
dec
out
leave
mov
(bad)
mov
mov
and
inc
loope
push
and
dec
inc
cmp
je
adc
add
retf
or
(bad)
fild
mov
xor
mov
(bad)
enter
mov
(bad)
fcomip
call
xchg
and
call
out
mov
jae
fadd
mov
std
cdq
dec
cs
loop
fcomp
sub
add
cmp
inc
stos
mov
call
jns
movs
jb
or
ret
dec
sub
rcl
xor
in
push
push
(bad)
(bad)
(bad)
call
xor
std
out
push
sub
jmp
mov
xlat
lahf
cmp
dec
add
dec
xchg
aam
fcomip
xchg
and
xchg
cmp
inc
fmul
or
mov
mov
mov
out
repnz
scas
in
adc
pop
add
mov
or
push
and
out
imul
pop
scas
xchg
(bad)
(bad)
(bad)
jg
cmp
mov
aad
pop
loop
sub
sbb
shl
mov
ins
add
fdivr
loopne
xchg
mov
xor
mov
int
jae
or
(bad)
(bad)
jmp
xor
mov
inc
lock
ror
(bad)
or
call
into
dec
inc
mov
or
outs
xchg
call
cld
(bad)
fdivrp
ffree
hlt
adc
pop
xor
sti
jmp
ror
jp
sar
mov
out
pushf
xor
jmp
outs
pop
test
(bad)
(bad)
(bad)
call
lahf
push
sbb
and
xor
(bad)
outs
push
test
ds
and
add
dec
iret
ins
cmp
jb
lock
sar
cs
xchg
and
cmc
inc
aam
in
movs
(bad)
(bad)
(bad)
inc
pop
add
test
cmp
xor
xlat
mov
fadd
add
(bad)
jg
test
imul
ror
jmp
push
cmp
sbb
dec
sbb
jbe
jecxz
ins
mov
mov
cli
fadd
cmp
jg
(bad)
dec
aas
jb
imul
xlat
je
mov
cmp
sub
ja
les
(bad)
(bad)
(bad)
inc
mov
loopne
pop
pop
cmp
rcr
cld
daa
xchg
mov
stos
adc
cs
movs
hlt
(bad)
(bad)
(bad)
(bad)
fcomi
stc
loope
adc
dec
aas
movs
mov
enter
add
cmp
lods
mov
in
jg
(bad)
jmp
or
repz
inc
or
addr16
repnz
inc
movs
fs
(bad)
(bad)
cli
pop
sub
cli
ins
push
push
jmp
inc
call
xchg
popf
les
(bad)
jns
lods
cmp
jg
inc
cmp
push
les
mov
dec
adc
(bad)
jle
cli
(bad)
call
stc
add
jbe
aaa
mov
push
sub
and
addr16
(bad)
call
jp
or
add
push
movs
cli
fwait
jmp
mov
dec
sbb
sub
(bad)
(bad)
(bad)
mov
dec
jno
cmp
loopne
adc
and
call
cmp
(bad)
jmp
dec
out
sub
nop
dec
out
mov
jg
mov
(bad)
jl
and
mov
mov
inc
(bad)
sub
mov
xchg
aas
in
jo
ret
in
push
inc
mov
sub
jecxz
jo
arpl
loopne
aad
imul
dec
jbe
mov
sub
or
jmp
xchg
pop
sub
shl
(bad)
call
ficomp
push
lods
mov
xchg
or
xor
(bad)
mov
ror
test
pop
das
in
cmc
clc
xor
cwde
stos
lock
mov
pop
push
jle
in
(bad)
mov
aas
pop
fmul
(bad)
repnz
inc
jne
mov
sub
popa
cmp
jecxz
ret
clc
jmp
fistp
repz
cli
push
dec
(bad)
in
inc
ds
retf
push
xor
mov
dec
pop
xor
(bad)
sbb
test
mov
xchg
cmp
fist
out
cli
inc
stos
call
mov
dec
ret
pop
jae
sub
pop
xor
or
(bad)
(bad)
(bad)
jl
lods
jmp
ja
cmp
lock
enter
test
mov
dec
push
mov
jmp
popa
and
enter
sub
push
sub
iret
daa
cmps
jns
jmp
clc
pushf
mov
stos
cmp
fsubr
fldenv
xor
push
mov
(bad)
(bad)
jmp
xor
jg
out
mov
(bad)
sti
and
xchg
cmp
inc
fst
inc
out
test
and
push
xchg
movs
ret
fnstsw
test
fyl2xp1
ret
call
sub
push
repz
jne
xor
fcom
push
int3
mov
lahf
push
mov
inc
pop
xor
xchg
retf
ret
ss
scas
mov
cmp
(bad)
(bad)
call
fwait
mov
fdiv
in
pop
cmc
inc
add
or
loope
shl
retf
(bad)
(bad)
call
sub
repz
sbb
shr
call
and
loopne
and
(bad)
fidiv
add
mov
pop
out
pop
push
(bad)
mov
daa
call
ss
push
jbe
jge
cmp
shl
loop
mov
adc
scas
call
es
out
mov
imul
lods
hlt
inc
in
(bad)
aad
retf
std
(bad)
inc
xchg
js
push
daa
es
and
mov
adc
mov
inc
(bad)
(bad)
(bad)
(bad)
dec
or
sub
gs
push
mov
jae
xor
or
add
retf
rcl
xchg
xchg
xor
mov
push
cdq
cli
and
push
xchg
mov
jl
sub
cmp
mov
adc
inc
xlat
cli
call
stc
mov
dec
(bad)
(bad)
(bad)
(bad)
cld
aam
dec
int3
mov
int3
dec
rol
sub
jge
dec
jae
lahf
jmp
or
(bad)
(bad)
fnstsw
sahf
fisubr
xchg
dec
out
adc
dec
(bad)
and
jg
fimul
mov
mov
in
in
push
xor
jg
push
ret
out
in
and
lock
or
les
or
fsubr
push
std
(bad)
call
pop
fs
imul
jp
jmp
daa
les
pop
push
mov
jmp
mov
cmc
in
adc
mov
sub
pop
fnstsw
push
push
mov
mov
cmp
pop
fwait
retf
push
std
push
jge
mov
xchg
pop
or
inc
cmp
in
aaa
stc
and
(bad)
(bad)
(bad)
jmp
xor
cmp
imul
cmp
cwde
jmp
loopne
mov
call
loopne
sbb
out
cwde
xor
xlat
or
(bad)
(bad)
in
or
mov
push
pop
sbb
aad
leave
xchg
jecxz
jle
xchg
(bad)
(bad)
(bad)
call
fild
jbe
xchg
push
mov
loopne
xlat
(bad)
mov
fdivrp
mov
add
mov
call
and
jmp
rcr
cmc
xor
add
mov
sbb
into
enter
and
mov
jmp
(bad)
call
cmps
arpl
mov
out
cmps
test
sub
stos
(bad)
(bad)
(bad)
jmp
mov
shl
and
imul
pushf
pop
sbb
out
xor
mov
(bad)
(bad)
push
and
pop
ds
idiv
test
je
xlat
icebp
sbb
aam
sbb
icebp
bound
(bad)
(bad)
(bad)
(bad)
sti
xor
cwde
in
test
ror
jbe
xchg
cld
pushf
jnp
out
movs
std
lock
jp
scas
mov
(bad)
push
adc
dec
in
inc
mov
sahf
adc
and
fidivr
push
(bad)
(bad)
mov
mov
xlat
aam
mov
dec
pop
(bad)
push
adc
(bad)
dec
mov
lahf
or
loope
(bad)
jmp
rcr
pop
push
or
div
mov
in
push
xchg
mov
(bad)
(bad)
(bad)
mov
repnz
sbb
push
(bad)
adc
adc
lods
xchg
in
mov
(bad)
(bad)
(bad)
mov
inc
sbb
or
dec
gs
mov
xchg
lods
or
dec
jmp
shl
inc
(bad)
dec
int3
test
xchg
lods
and
dec
std
jae
(bad)
outs
(bad)
(bad)
push
sti
arpl
push
cmc
icebp
dec
jae
loope
pop
call
inc
jne
xchg
xor
(bad)
(bad)
push
cmc
mov
push
push
aas
cmp
ror
dec
mov
or
jnp
pushf
test
or
(bad)
(bad)
call
xor
loope
and
dec
aam
mov
jns
in
jo
hlt
sbb
sbb
fisttp
fadd
ins
ds
(bad)
sub
shl
cmp
rol
(bad)
(bad)
call
add
dec
aas
out
sbb
jmp
cmp
test
stos
in
and
(bad)
inc
mov
pusha
xchg
sbb
xchg
xchg
sahf
jge
mov
mov
scas
inc
mov
push
in
movs
dec
xchg
call
xchg
fstp
cld
(bad)
(bad)
(bad)
out
repz
sbb
sub
push
stos
je
movs
push
jmp
aam
pusha
ficomp
test
ja
xchg
xchg
das
sbb
popa
cmp
fdivr
das
sar
pop
not
in
mov
sti
jl
scas
clc
push
scas
out
ins
iret
sbb
add
(bad)
(bad)
(bad)
(bad)
cli
and
cmp
in
gs
(bad)
sbb
sbb
mov
mov
int3
arpl
stos
xchg
dec
jno
(bad)
(bad)
inc
(bad)
and
faddp
add
or
jnp
pop
push
or
jb
call
xor
jmp
push
sti
sub
sbb
aas
or
jbe
cmp
fs
out
pop
(bad)
(bad)
(bad)
push
outs
sahf
das
mov
data16
sub
push
add
ja
push
or
(bad)
pslld
jne
aad
lea
inc
or
(bad)
mov
test
cs
push
iret
mov
test
(bad)
xchg
(bad)
(bad)
(bad)
dec
xor
arpl
sbb
pop
jle
dec
scas
test
pop
mov
shl
fsubr
out
movs
or
(bad)
(bad)
(bad)
jmp
cmps
fdivr
push
inc
sahf
pushf
or
(bad)
movs
adc
pop
push
lea
icebp
lock
(bad)
push
xchg
push
out
jle
adc
sti
in
dec
cwde
sbb
dec
dec
cmp
(bad)
dec
mov
div
lds
js
stos
inc
in
fiadd
loopne
lods
xlat
and
cmps
jmp
xlat
push
sbb
jo
out
adc
sbb
(bad)
(bad)
(bad)
jmp
inc
inc
jb
loop
mov
xchg
nop
(bad)
out
mov
fsub
pop
out
add
inc
(bad)
(bad)
(bad)
jmp
mov
cli
jp
ins
mov
push
dec
iret
sub
mov
mov
mov
jecxz
xchg
mov
icebp
(bad)
(bad)
(bad)
cmp
xor
or
cmp
or
test
mov
adc
jmp
into
cmps
imul
push
and
xchg
retf
gs
sub
add
(bad)
(bad)
fscale
adc
xor
xchg
pop
in
rol
fimul
or
fisttp
je
xor
into
aas
nop
dec
add
or
outs
sbb
sub
pop
shl
dec
loop
inc
add
mov
jmp
repnz
xor
movs
push
pop
iret
cmp
ror
inc
les
inc
sub
add
stos
(bad)
xchg
dec
nop
pop
jle
push
rcr
adc
out
aad
jg
push
cld
cmp
cs
sub
and
adc
jp
(bad)
(bad)
(bad)
inc
mov
mov
push
pop
pop
test
jo
xchg
dec
fbld
xchg
std
ja
mov
fsubr
xchg
jl
push
pop
jp
add
jl
sbb
(bad)
(bad)
(bad)
jge
adc
sub
xchg
movs
pop
jmp
add
mov
jnp
je
das
fld
icebp
(bad)
(bad)
call
jo
inc
scas
push
xchg
inc
cli
push
movs
push
(bad)
mov
ins
mov
pop
push
retf
(bad)
jmp
les
and
xor
mov
inc
adc
mov
push
pushf
jg
hlt
dec
test
xchg
push
push
and
shl
idiv
mov
push
mov
lock
(bad)
cmc
or
jno
mov
xchg
ja
or
xor
in
push
std
inc
in
or
jl
xchg
out
(bad)
hlt
dec
outs
shl
out
(bad)
(bad)
(bad)
call
push
push
push
retf
or
stos
fwait
mov
inc
dec
push
lock
imul
and
pop
pop
mov
mov
(bad)
call
push
and
dec
jmp
retf
ss
imul
adc
or
lods
push
stc
std
xlat
neg
mov
add
or
or
lock
(bad)
fld
fcomp
(bad)
(bad)
lds
mov
push
aam
mov
(bad)
(bad)
(bad)
cmp
dec
mov
cmp
mov
mov
sub
mov
cld
sub
jns
jns
(bad)
(bad)
call
dec
rol
pop
push
sbb
xchg
xor
fs
fld
pop
shl
(bad)
(bad)
dec
imul
push
ja
std
sub
repz
loope
xor
fiadd
das
out
dec
cld
(bad)
(bad)
jmp
jo
pusha
ja
mov
pusha
mov
pop
sub
loopne
cmp
bound
data16
pop
or
cmp
movs
xchg
pop
(bad)
(bad)
fld
(bad)
(bad)
mov
dec
cmp
mov
sar
in
inc
jne
and
es
cmp
or
(bad)
(bad)
jmp
popf
rol
rol
pusha
mov
mov
xlat
pop
movs
mov
lods
bound
sub
push
call
sbb
aas
pop
add
(bad)
sahf
fstp
(bad)
(bad)
(bad)
call
jmp
mov
mov
add
cli
sbb
lods
xor
mov
idiv
inc
sbb
mov
(bad)
popf
xchg
div
cmps
push
fnstenv
pop
nop
mov
inc
adc
sub
sbb
(bad)
(bad)
mov
push
or
pop
rcr
sar
gs
jle
dec
sub
(bad)
(bad)
inc
sbb
sbb
and
mov
jmp
sbb
cmp
adc
push
pusha
mov
mov
mov
xor
pop
push
pop
jne
or
dec
aas
outs
(bad)
(bad)
dec
aas
dec
mov
bnd
dec
popf
xchg
cwde
mov
sti
cs
(bad)
(bad)
dec
stos
push
es
int
sbb
(bad)
sbb
cmps
inc
push
jnp
movs
test
and
mov
(bad)
push
std
ret
push
pop
pop
push
mov
arpl
out
cdq
aaa
movs
(bad)
std
mov
(bad)
push
lahf
push
mov
xchg
daa
gs
adc
inc
push
shr
ds
(bad)
(bad)
(bad)
in
fucomip
loope
sbb
sub
cmp
adc
push
mov
retf
cs
jl
and
mov
pop
cld
es
sbb
xor
(bad)
es
(bad)
(bad)
fstp
js
idiv
mov
(bad)
std
mov
jns
cmp
push
lea
mov
call
inc
cli
inc
(bad)
retf
cmps
adc
cld
cmp
jb
xor
lea
(bad)
(bad)
inc
popf
(bad)
(bad)
pop
enter
out
pop
clc
and
lds
popf
shl
fldenv
or
jg
jne
adc
shl
xchg
push
xor
or
(bad)
(bad)
jg
add
add
add
cmp
mov
stos
scas
pop
pop
or
outs
and
cmc
ins
dec
test
(bad)
(bad)
(bad)
jp
in
in
mov
pop
imul
cmp
jp
gs
cli
(bad)
push
xchg
xor
cmc
dec
jg
inc
loope
jl
test
aad
enter
(bad)
ror
mov
cld
(bad)
(bad)
fdiv
mov
call
xchg
add
out
xchg
xor
hlt
in
pop
pop
push
std
(bad)
push
xchg
adc
leave
loop
jb
sbb
call
(bad)
(bad)
inc
sbb
lods
jge
adc
imul
stc
xchg
jmp
call
(bad)
data16
dec
and
call
xchg
repnz
out
push
fcomp
(bad)
mov
sbb
xchg
sub
mov
(bad)
call
fsubr
sub
mov
fldenv
ret
and
(bad)
call
adc
add
jnp
aas
fcomip
add
lods
pusha
daa
xlat
jmp
aaa
dec
sub
(bad)
adc
(bad)
(bad)
jg
loopne
push
push
dec
aad
mov
ins
xor
(bad)
mov
retf
vpand
std
(bad)
(bad)
(bad)
push
int3
loope
test
sbb
test
pop
bound
in
in
add
jg
dec
stos
fcmovnbe
lods
add
mov
fwait
jecxz
jmp
or
lock
cs
push
dec
movs
pop
(bad)
sbb
jle
pop
int
das
or
(bad)
(bad)
mov
into
and
mov
stc
cs
jmp
mov
adc
mov
(bad)
jnp
xchg
mov
ss
mov
inc
mov
(bad)
push
dec
and
dec
and
inc
in
push
inc
sbb
popw
add
out
inc
mov
dec
mov
dec
mov
fisub
(bad)
popa
mov
inc
inc
nop
and
lock
mov
shr
inc
push
(bad)
hlt
shl
inc
and
test
(bad)
(bad)
(bad)
in
cmps
or
jnp
jl
mov
aas
hlt
jecxz
fmul
adc
mov
(bad)
(bad)
call
pop
ins
jmp
mov
pop
inc
hlt
(bad)
xor
call
xor
pop
test
adc
jmp
mov
mov
pop
adc
mov
dec
in
inc
es
adc
mov
xor
imul
cmc
test
(bad)
mov
cmps
movs
add
enter
popa
fs
pushf
pop
lahf
les
retf
(bad)
jg
call
xchg
fsub
jb
inc
daa
mov
jp
mov
jg
pop
(bad)
(bad)
(bad)
(bad)
mov
fwait
arpl
not
push
loopne
in
dec
and
sbb
cdq
pushf
(bad)
(bad)
(bad)
call
xor
add
adc
add
jnp
jmp
cmp
movs
adc
push
pop
ins
dec
sbb
(bad)
call
(bad)
cmps
fdivr
adc
out
mov
or
repz
push
(bad)
in
mul
push
adc
adc
(bad)
pushf
in
shl
arpl
dec
fldenv
jge
inc
sahf
push
xor
jns
pushf
cmp
xchg
push
fidiv
mov
(bad)
out
inc
stos
arpl
or
mov
mov
(bad)
(bad)
(bad)
out
jp
or
cmp
pop
outs
mov
xor
mov
sbb
or
(bad)
(bad)
(bad)
(bad)
out
sub
mov
dec
lods
xchg
sub
dec
and
popf
push
aam
sbb
and
test
lock
(bad)
call
jp
jo
out
xchg
gs
(bad)
xchg
dec
mov
imul
jmp
ficomp
and
shr
sahf
push
ret
xor
dec
rcr
in
mov
xchg
addr16
(bad)
jg
nop
pop
cmp
push
ins
jne
mov
mov
(bad)
or
in
xchg
(bad)
(bad)
(bad)
push
adc
mov
dec
ins
mov
inc
fnstenv
jecxz
push
stc
push
sub
ja
jmp
add
sub
sbb
cmp
mov
cmps
jle
in
(bad)
(bad)
jmp
inc
jbe
jle
test
sub
cmp
push
ud0
(bad)
inc
nop
aam
imul
sar
(bad)
sub
push
aad
retf
fnstsw
inc
(bad)
(bad)
(bad)
inc
xchg
jge
mov
popf
pop
pop
pop
sbb
loope
or
ins
(bad)
pop
iret
gs
(bad)
dec
push
pop
repnz
jae
out
fmul
neg
fild
jge
arpl
or
(bad)
(bad)
dec
push
sbb
stos
adc
pop
sub
stos
xchg
lods
retf
inc
frstor
loop
call
sub
(bad)
cmp
add
inc
pop
stos
sub
jmp
mov
(bad)
dec
add
lahf
clc
or
push
sahf
cmp
das
jle
push
xor
call
test
cmp
mov
mov
out
test
push
leave
push
out
mov
add
(bad)
(bad)
(bad)
fadd
push
or
in
call
int3
cmp
loop
xor
scas
mov
(bad)
pop
(bad)
dec
ret
pop
xor
test
jmp
bound
mov
div
mov
pushf
fcomp
xchg
(bad)
(bad)
dec
ret
hlt
neg
jp
mov
or
and
lods
push
sbb
(bad)
inc
(bad)
es
repz
into
enter
sbb
retf
sub
shl
add
test
(bad)
push
jne
in
mov
push
div
ret
xlat
xchg
shr
jmp
jo
mov
(bad)
call
fisub
xor
icebp
mov
shl
dec
and
mov
pop
cmc
lds
xor
or
fisubr
outs
inc
(bad)
(bad)
(bad)
(bad)
aas
cld
ja
push
ss
adc
inc
ja
cwde
mov
test
cmp
or
scas
mov
inc
(bad)
(bad)
(bad)
(bad)
jle
mov
les
arpl
mov
scas
push
mov
jmp
adc
repnz
xchg
(bad)
(bad)
(bad)
call
retf
sahf
movs
call
ror
(bad)
sub
pop
jno
and
(bad)
(bad)
(bad)
push
shl
xchg
inc
jno
lahf
dec
dec
and
jecxz
es
sub
xchg
cli
(bad)
push
mov
stos
jecxz
arpl
and
(bad)
push
pop
ins
jp
out
out
xchg
or
add
pop
push
repz
pop
inc
jb
(bad)
(bad)
(bad)
jmp
jmp
jl
movs
or
mov
jo
mov
pop
lock
jmp
pop
pushf
cmps
pop
nop
cmc
int3
push
xor
ins
mov
inc
gs
sahf
dec
(bad)
jmp
ret
shl
sub
iret
test
add
pop
out
push
jge
(bad)
jmp
jge
sub
and
inc
pop
jl
mov
pop
or
adc
mov
rol
or
(bad)
mov
xchg
mov
repnz
in
(bad)
(bad)
jmp
inc
stos
push
in
add
(bad)
cld
sub
movs
(bad)
cld
addr16
cs
hlt
(bad)
(bad)
dec
icebp
xchg
fldcw
xchg
xchg
lea
cmps
mov
in
push
pop
fs
es
leave
(bad)
(bad)
(bad)
fist
cmp
sbb
add
jecxz
nop
iret
pop
es
fs
call
ins
out
xor
bound
jge
dec
mov
(bad)
(bad)
(bad)
jmp
mov
fiadd
and
outs
call
leave
xchg
scas
(bad)
mov
(bad)
(bad)
(bad)
call
xchg
(bad)
cmps
xchg
xchg
int
inc
or
xchg
mov
sub
dec
xlat
out
xchg
jmp
int3
aaa
(bad)
jg
jmp
push
outs
popf
cld
mov
cmp
out
jo
mov
lods
enter
(bad)
(bad)
(bad)
jmp
inc
jo
mov
out
daa
push
in
mov
dec
cmc
jne
or
or
mov
in
and
dec
cmp
jecxz
or
(bad)
and
in
retf
lods
ds
sub
leave
pusha
pop
pop
inc
stc
fisttp
add
sbb
loopne
in
cmp
retf
aaa
(bad)
or
call
push
int
add
add
outs
aas
xor
jle
stc
mov
adc
lds
call
std
jmp
shl
adc
add
je
(bad)
aam
stos
jl
(bad)
in
(bad)
(bad)
(bad)
inc
push
mov
push
sti
push
pop
mov
pop
int
pushf
mov
inc
test
cdq
bound
sub
iret
fiadd
stc
(bad)
(bad)
push
mov
xchg
dec
sub
pop
aaa
adc
cmps
std
or
lahf
mov
(bad)
(bad)
(bad)
dec
mov
(bad)
loopne
mov
jns
push
xchg
jecxz
ss
sub
(bad)
(bad)
inc
std
es
push
(bad)
retf
scas
lods
xchg
pop
push
sub
dec
std
mov
cmc
xor
stos
fcmovnb
fcomip
(bad)
jmp
xchg
xchg
ret
cmps
sbb
cmps
nop
jge
pop
cmps
fdiv
neg
cld
(bad)
(bad)
inc
mov
aad
lods
mov
leave
test
pop
jnp
cwde
test
(bad)
fwait
pusha
xchg
add
push
inc
or
in
test
xchg
sub
loope
jns
enter
(bad)
(bad)
jmp
adc
shl
mov
movs
sbb
sti
bound
enter
sbb
sar
(bad)
call
add
(bad)
adc
call
jg
rol
sub
sbb
(bad)
(bad)
(bad)
jg
frstor
(bad)
test
and
mov
les
js
lahf
mov
(bad)
inc
or
xor
rcl
cmp
push
and
sbb
sbb
loop
out
cs
mov
ins
pop
mov
push
adc
pop
mov
push
mov
out
mov
inc
add
cld
xor
inc
cmps
sub
out
xor
loop
xchg
mov
inc
inc
out
int
sbb
pop
ds
iret
inc
ja
enter
(bad)
(bad)
(bad)
sti
mov
jge
sbb
xchg
aam
loopne
jmp
ins
push
fdivr
(bad)
(bad)
(bad)
call
mov
adc
loope
das
pop
nop
mov
sub
shl
xor
(bad)
(bad)
inc
ins
adc
rcr
inc
dec
mov
xchg
pop
jmp
xor
shr
aad
(bad)
(bad)
dec
mov
movs
shl
mov
dec
push
lea
pop
call
lds
int3
fst
push
scas
jb
stc
xor
into
jns
test
jecxz
cmp
pop
nop
test
ss
push
imul
xchg
pop
mov
fdivrp
sti
mov
jg
or
mov
add
mov
sbb
(bad)
fcomip
mov
pop
or
cmp
fst
bound
or
inc
in
pop
xchg
xchg
adc
call
shl
dec
mov
add
(bad)
(bad)
jmp
jae
movs
call
stos
xor
pop
sbb
sbb
dec
mov
or
or
test
adc
adc
cld
jmp
div
and
jbe
lock
ror
lock
pushf
jmp
mov
push
cld
shl
lea
or
int3
(bad)
(bad)
(bad)
jg
sahf
xchg
vmwrite
inc
xchg
rol
repnz
or
push
jmp
mov
(bad)
dec
int3
daa
mov
mov
out
push
iret
pop
mov
test
xchg
mov
gs
fadd
mov
es
test
push
lahf
push
popa
cmp
(bad)
(bad)
(bad)
(bad)
cmp
add
cli
int
call
(bad)
cli
and
scas
cmp
push
jl
inc
repnz
jle
stos
pop
iret
loopne
pop
cld
or
int
inc
cmps
push
sub
ret
out
es
fidiv
or
mov
push
sub
fcomp
arpl
outs
enter
add
pop
cmp
clc
and
jnp
(bad)
(bad)
(bad)
call
(bad)
div
test
idiv
jecxz
repnz
pop
shl
(bad)
mov
cmps
mov
mul
inc
or
adc
(bad)
das
into
aaa
sbb
mov
pop
icebp
cmp
imul
pop
mov
jo
movs
(bad)
(bad)
mov
sub
sbb
nop
sbb
cs
cmp
jnp
outs
xchg
jg
(bad)
(bad)
(bad)
call
int
pop
fiadd
aad
lods
xor
std
loope
int
cmp
mov
(bad)
ja
mov
inc
xor
xlat
dec
fistp
aad
pop
push
test
das
push
cmp
inc
popf
aad
xchg
outs
mov
dec
outs
mov
mov
dec
mov
outs
xchg
sub
(bad)
(bad)
jmp
mov
xchg
les
mov
jp
scas
(bad)
sti
mov
ret
arpl
mov
mov
adc
popf
pop
xor
dec
pop
maskmovq
(bad)
(bad)
(bad)
call
add
xchg
inc
iret
push
daa
out
jb
fucompp
ret
hlt
xor
dec
add
scas
dec
(bad)
(bad)
sub
(bad)
(bad)
call
int3
sub
xor
adc
mov
ror
add
fwait
inc
(bad)
jg
enter
imul
mov
dec
sti
lahf
loopne
add
(bad)
(bad)
push
sbb
push
sbb
hlt
and
xlat
mov
sbb
add
sub
(bad)
(bad)
dec
sahf
xchg
dec
push
dec
jbe
add
push
push
into
fidiv
or
mov
test
push
(bad)
(bad)
(bad)
(bad)
fidivr
ds
lock
lea
sub
cmp
lock
and
or
xchg
push
nop
(bad)
(bad)
(bad)
(bad)
mov
mov
or
push
push
xchg
add
push
pop
push
inc
push
xor
pop
std
add
fisttp
clc
inc
adc
xor
pop
jne
adc
xchg
jg
dec
inc
mov
pusha
push
test
movs
aad
aaa
adc
cmp
inc
dec
ss
xor
dec
cdq
or
sub
ror
xor
out
ja
(bad)
call
call
loopne
repnz
ss
inc
ror
ins
adc
je
cmp
sar
xor
(bad)
or
mov
loopne
xor
xlat
(bad)
push
push
cdq
dec
out
sub
and
imul
and
(bad)
(bad)
(bad)
(bad)
jmp
mov
lahf
ficomp
add
xor
jno
mov
pop
dec
test
mov
clc
(bad)
retf
lds
repnz
(bad)
cli
inc
inc
retf
movs
cmp
inc
mov
(bad)
(bad)
(bad)
call
sbb
fimul
and
test
mov
ficom
(bad)
(bad)
(bad)
jmp
cmp
cmps
dec
stos
pop
mov
push
scas
xor
dec
lods
mov
iret
js
cwde
xor
aad
xor
stos
add
test
call
mov
arpl
hlt
(bad)
jmp
cld
push
push
movs
push
sub
jbe
mov
add
cmp
pop
ins
sbb
sbb
rol
sub
jnp
cwde
fs
jae
mov
movhps
jl
ror
call
push
xor
int
ins
pop
cmp
(bad)
cmp
cmp
repnz
jp
add
(bad)
jg
fwait
cwde
loop
sub
sbb
pushf
inc
mov
sar
(bad)
mov
or
int3
lods
loop
ss
aad
(bad)
(bad)
(bad)
std
mov
int3
push
jge
test
into
xchg
xchg
mov
cmp
icebp
mov
(bad)
(bad)
out
sti
pushf
stc
and
in
xlat
jl
paddw
movs
mov
stos
adc
(bad)
(bad)
jmp
inc
dec
mov
rol
cmc
pop
cmp
imul
(bad)
or
sbb
mov
movs
(bad)
(bad)
inc
xor
pusha
imul
or
or
outs
sub
xchg
push
fsubr
ins
retf
mov
(bad)
(bad)
call
cmp
clc
outs
xor
jle
aad
es
push
fwait
stos
pusha
xchg
cwde
pop
(bad)
(bad)
(bad)
dec
mov
out
dec
adc
push
mov
jmp
xchg
arpl
(bad)
(bad)
(bad)
push
retf
push
jge
sbb
sbb
mov
sub
or
popa
inc
mov
(bad)
jg
jmp
xor
jecxz
int
fadd
movs
sbb
and
sub
jns
(bad)
(bad)
(bad)
jmp
sub
jae
in
imul
jbe
and
push
(bad)
mov
push
loopne
push
jo
(bad)
(bad)
(bad)
jmp
stos
scas
jmp
pop
jle
mov
popf
mov
jl
(bad)
cmp
mov
pop
adc
(bad)
(bad)
(bad)
jmp
inc
xor
or
icebp
ins
inc
sub
call
(bad)
imul
push
(bad)
jmp
cli
push
out
jb
out
push
in
xor
add
xchg
das
cmps
das
sti
idiv
mov
mov
xchg
(bad)
pop
fstp
adc
mov
sbb
xchg
fwait
dec
(bad)
(bad)
(bad)
jg
fmul
and
fld
push
mov
out
fcom
fcmovb
out
sbb
(bad)
(bad)
(bad)
clc
mov
test
add
adc
and
into
adc
(bad)
fist
dec
les
movlps
xchg
xchg
fisub
sti
jbe
aad
jecxz
jne
sub
mov
dec
(bad)
(bad)
inc
dec
pushf
fs
les
(bad)
mov
fstp
pop
cli
jmp
inc
pop
rol
mov
lds
mov
sbb
not
adc
sub
or
sbb
jmp
(bad)
(bad)
(bad)
call
cmc
test
pop
faddp
and
(bad)
pusha
outs
pop
jl
xchg
sti
pop
call
pop
push
mov
mov
sub
jmp
bound
inc
and
ret
ret
(bad)
dec
cli
stc
cmps
add
(bad)
stos
rcl
mov
dec
xchg
loope
push
rcr
cld
mov
test
(bad)
(bad)
jmp
pop
or
jb
mov
lahf
test
call
inc
test
loope
sbb
(bad)
(bad)
jg
cmp
mov
xchg
mov
ficom
xchg
cmp
inc
mov
jns
(bad)
(bad)
inc
mov
jg
adc
add
xchg
mov
and
aas
ret
xchg
es
mov
jo
xor
icebp
sbb
es
out
jle
test
jb
addr16
adc
lds
xchg
sub
out
or
sar
jmp
xchg
or
rcl
daa
ds
imul
dec
fs
sub
sti
(bad)
jg
mov
push
xchg
addr16
dec
xchg
mov
jl
test
cdq
call
mov
cmp
(bad)
(bad)
jmp
lock
pop
mov
sbb
popa
and
or
xchg
mov
call
mov
(bad)
(bad)
jmp
fadd
adc
test
jg
js
fs
shl
pop
mov
mov
(bad)
(bad)
jmp
(bad)
mov
add
mov
mov
xchg
dec
mov
jmp
jg
jmp
call
sbb
pushf
ins
jg
out
push
imul
and
call
mov
mov
call
and
cmp
mov
leave
mov
enter
(bad)
(bad)
(bad)
call
jo
test
jmp
pop
(bad)
data16
cmp
fisubr
jmp
clc
pop
fcomp
pusha
into
bound
cld
cmp
(bad)
(bad)
jmp
stos
push
mov
les
mov
mov
add
sub
dec
je
(bad)
clc
ror
mov
vpmulhw
sbb
(bad)
(bad)
(bad)
call
cmp
mov
iret
lea
fldcw
ins
mov
dec
add
xchg
lods
ja
lods
movs
(bad)
(bad)
(bad)
jmp
les
test
je
jle
or
or
shl
ss
pop
push
cmp
(bad)
(bad)
mov
fdivr
sbb
outs
sub
mov
cmp
into
pop
jae
int3
cs
in
(bad)
(bad)
(bad)
call
div
daa
mov
int3
loope
mov
inc
mov
or
jp
cmp
ret
les
push
dec
mov
inc
(bad)
mov
adc
movs
(bad)
(bad)
dec
jno
dec
xchg
js
sub
out
adc
sbb
(bad)
(bad)
(bad)
dec
leave
(bad)
out
loope
rcl
les
or
hlt
pop
adc
mov
imul
mov
mov
and
mov
and
add
enter
jle
mov
(bad)
jmp
inc
call
fadd
test
pop
stos
call
test
jg
xchg
jmp
adc
mov
sbb
jo
push
mov
call
mov
(bad)
mov
jg
push
jne
sub
repz
pushf
xchg
xor
ins
out
mov
das
mov
dec
mov
lods
dec
cmp
sub
enter
and
dec
shl
(bad)
jns
and
call
das
cmp
sub
cli
rcr
in
inc
jne
sbb
(bad)
(bad)
(bad)
jmp
rol
jmp
pop
in
pop
adc
popa
mov
bound
cmc
push
or
sub
sbb
dec
push
(bad)
(bad)
cdq
aam
jle
or
in
fsubr
fdiv
cwde
dec
sbb
loopne
pop
(bad)
(bad)
push
push
std
add
and
push
movs
push
mov
lods
or
cmps
sub
mov
ss
sbb
mov
arpl
popa
jmp
jnp
shr
rcr
cmp
jmp
movs
dec
cmps
cli
xchg
out
data16
idiv
inc
(bad)
(bad)
jmp
dec
fcomp
dec
rcr
add
and
es
cdq
add
(bad)
mov
inc
mov
dec
xchg
(bad)
jmp
inc
scas
sub
and
ins
mov
xor
xor
in
cmp
xchg
loope
(bad)
in
(bad)
(bad)
(bad)
inc
or
cs
mov
daa
repnz
loopne
xchg
imul
jnp
xchg
add
(bad)
inc
cmp
leave
mov
or
fstp
fcom
pop
jnp
loope
(bad)
dec
adc
xchg
(bad)
pop
cmp
mov
or
pusha
cmp
mov
(bad)
(bad)
(bad)
jmp
mov
ja
fild
iret
or
nop
into
pop
loopne
les
dec
loopne
cs
stos
push
cmc
outs
clc
jle
lea
mov
cwde
ret
xor
mov
call
test
outs
mov
pop
hlt
cmps
push
sbb
mov
adc
(bad)
(bad)
call
rcl
inc
ss
or
adc
mov
sub
leave
aad
dec
or
jmp
sub
(bad)
cmps
je
stos
mov
je
sbb
mov
inc
in
pop
add
cmp
mov
sbb
push
xchg
ror
(bad)
icebp
adc
mov
(bad)
(bad)
dec
xchg
iret
xchg
add
jmp
xchg
cld
adc
data16
mov
in
push
mov
(bad)
mov
xchg
adc
pop
jbe
mov
jbe
or
xchg
(bad)
repnz
push
clc
inc
ret
sbb
jae
add
push
data16
(bad)
(bad)
dec
lea
test
mov
in
ret
retf
scas
dec
nop
pop
sar
xchg
pop
jg
test
mov
outs
inc
lds
(bad)
mov
cmp
cdq
retf
jge
fsub
mov
in
cmp
inc
mov
jl
ins
jge
int
stos
outs
(bad)
push
fcos
(bad)
(bad)
jmp
sbb
outs
or
sahf
cld
jge
rol
and
mov
shl
jmp
adc
pop
aad
test
mov
loop
fimul
(bad)
push
dec
dec
xchg
or
clc
xor
dec
aad
dec
sti
ds
pop
int3
mov
(bad)
dec
ja
dec
and
in
outs
pop
inc
idiv
add
jne
jle
jnp
adc
(bad)
(bad)
(bad)
inc
ins
loope
jns
ja
mov
fdivr
jno
pop
mov
and
enter
pop
(bad)
(bad)
(bad)
jmp
ja
popf
daa
adc
push
mov
and
mov
es
mov
(bad)
(bad)
(bad)
dec
loope
and
loope
sti
pop
sub
dec
sub
iret
shr
cli
mov
cmps
(bad)
(bad)
(bad)
mov
test
(bad)
jmp
stc
mov
jge
xchg
out
dec
pop
clc
dec
scas
ins
std
jl
dec
ds
push
addr16
(bad)
push
mov
or
jmp
xchg
lock
push
imul
movs
repz
(bad)
(bad)
(bad)
jmp
pop
xchg
xor
les
and
mov
ins
adc
jecxz
pop
inc
add
sub
jmp
push
cdq
xor
xlat
mov
xchg
rcr
mov
loope
xor
push
call
sti
jnp
jmp
loop
and
inc
cld
xor
inc
pop
in
(bad)
(bad)
(bad)
(bad)
jl
mov
arpl
mov
in
and
(bad)
xchg
mov
xchg
mov
jmp
ror
(bad)
loopne
retf
in
popa
xchg
mov
mov
(bad)
(bad)
(bad)
aas
scas
jns
add
mov
imul
mov
add
xlat
and
stos
mov
outs
clc
call
cli
repnz
inc
or
dec
push
push
jmp
addr16
iret
fmul
icebp
(bad)
(bad)
call
xlat
and
retf
mov
cmp
mov
jmp
and
(bad)
out
(bad)
jmp
xor
xchg
retf
xor
mov
fucomip
adc
lock
call
rcl
call
sar
mov
jmp
pop
xor
cmp
sub
jo
jae
mov
ret
push
js
push
out
xor
inc
(bad)
test
outs
cdq
add
loope
retf
ss
add
popf
xchg
jo
cmp
or
xchg
call
call
add
or
retf
aam
(bad)
pushf
xor
mov
into
loope
enter
xchg
in
(bad)
(bad)
(bad)
inc
xchg
sahf
pop
cmp
adc
fld
inc
add
sbb
cmp
(bad)
(bad)
inc
aas
dec
cmp
or
push
fstp
and
mov
mov
(bad)
(bad)
(bad)
call
dec
push
popf
push
jbe
test
ins
add
movs
fcmovu
call
dec
jae
xlat
(bad)
(bad)
(bad)
call
xor
not
addr16
or
dec
jmp
mov
(bad)
(bad)
jmp
xchg
inc
cmp
xchg
fistp
jno
mov
xchg
sti
sub
or
dec
add
popa
adc
pop
or
xor
fistp
pop
mov
inc
es
(bad)
(bad)
(bad)
push
inc
cmc
mov
movs
lods
repnz
fiadd
pop
scas
and
loopne
add
dec
cmp
jmp
retf
jl
lods
push
out
fwait
in
push
add
(bad)
dec
jmp
repnz
adc
mov
jmp
cmp
or
xor
sbb
popf
cmc
ror
(bad)
jmp
xor
call
iret
sbb
fucomp
pop
movs
adc
(bad)
jg
xchg
mov
loopne
call
cmp
xor
pop
cmp
(bad)
(bad)
jmp
rol
mov
es
rol
mov
out
cli
(bad)
fst
test
(bad)
movs
jb
popa
lea
xchg
mov
jp
cmp
out
fucomi
test
(bad)
(bad)
inc
cli
dec
xor
mul
jb
lods
push
test
inc
fbld
lea
jg
cmp
loopne
(bad)
(bad)
dec
movs
out
lock
sub
xchg
cwde
xor
sub
pop
mov
hlt
adc
(bad)
jmp
sbb
dec
cs
fisttp
inc
jnp
popa
sbb
fwait
add
mov
(bad)
(bad)
dec
sub
add
mov
pop
cs
ror
fisub
mov
cli
jmp
cmp
and
dec
inc
(bad)
fiadd
jg
(bad)
jp
and
mov
arpl
ins
ss
cwde
cwde
jnp
push
or
pop
mov
ja
mov
mov
inc
stc
xchg
inc
sbb
or
(bad)
call
cmp
shl
mov
and
test
cmp
(bad)
(bad)
inc
mov
add
inc
es
dec
add
adc
test
cmps
mov
(bad)
call
xchg
jns
or
outs
mov
sub
iret
adc
(bad)
je
fmul
(bad)
mov
ss
and
les
fild
or
(bad)
(bad)
push
repnz
popf
sub
xchg
cmp
mov
sbb
cs
call
je
sbb
xchg
sbb
mov
mov
cmp
lock
xor
(bad)
lea
(bad)
mov
pop
and
stos
popf
or
mov
movs
mov
ins
push
or
(bad)
(bad)
(bad)
jmp
mov
jno
and
mov
mov
mov
in
mov
hlt
fidivr
mov
call
push
cwde
popf
std
mov
arpl
dec
fnsetpm(287
sub
into
sub
das
dec
(bad)
call
xor
cwde
in
inc
icebp
inc
pushf
inc
jecxz
int3
ss
jae
pop
test
dec
lahf
sbb
(bad)
(bad)
fsub
pop
mov
mov
jge
mov
inc
push
enter
scas
or
(bad)
(bad)
(bad)
cmp
dec
mov
lods
sbb
adc
into
xor
jb
push
or
dec
bt
dec
fidiv
into
cmps
ror
add
stos
fild
and
push
pop
pop
ins
push
xor
(bad)
(bad)
(bad)
(bad)
(bad)
pusha
push
enter
inc
mov
(bad)
lock
jecxz
pop
xchg
sub
ret
cs
xor
ret
(bad)
(bad)
(bad)
call
mov
pop
nop
inc
jb
call
into
jns
out
xchg
rol
pusha
test
cld
inc
xor
pop
mov
push
or
mov
jne
sub
pop
std
jg
dec
sub
(bad)
and
mov
aad
leave
push
clc
or
push
call
inc
push
cmc
rcl
loopne
add
les
mov
(bad)
cmc
jg
fisttp
das
lds
(bad)
mov
inc
test
shl
repnz
scas
cli
(bad)
fistp
mov
lods
or
outs
sub
jo
cmp
ss
(bad)
(bad)
dec
outs
cmp
in
mov
int
ins
dec
sahf
lea
pop
inc
xor
mov
(bad)
(bad)
call
cmp
call
enter
shl
loopne
loopne
(bad)
(bad)
(bad)
fnsave
out
dec
(bad)
out
xor
mov
shr
adc
cmp
push
inc
das
xchg
arpl
pop
sbb
(bad)
sub
dec
ficomp
aaa
lock
test
pop
sub
test
adc
jmp
aam
sbb
(bad)
call
dec
push
rcl
into
sub
cmovae
add
loopne
out
mov
or
jnp
cmp
(bad)
(bad)
dec
jle
jno
aaa
xchg
xchg
or
push
lods
jp
xchg
cmp
inc
pop
or
push
lods
aam
retf
(bad)
(bad)
(bad)
dec
les
es
cwde
fcmovne
sbb
sbb
icebp
mov
(bad)
jg
(bad)
(bad)
(bad)
call
mov
mov
loop
int
sbb
mov
and
(bad)
out
stos
(bad)
jmp
ret
popf
scas
and
mov
arpl
xor
int
pop
inc
ja
mov
jg
(bad)
stc
outs
inc
sbb
xor
push
icebp
sub
jmp
mov
mov
outs
mov
(bad)
(bad)
jmp
xor
hlt
pusha
cli
xor
xor
or
xor
pop
sub
sub
add
dec
daa
js
repnz
jle
mov
dec
call
xchg
inc
nop
cmp
sti
xchg
(bad)
(bad)
call
xor
stos
cld
xchg
inc
in
jnp
daa
inc
(bad)
stos
repnz
cld
popf
mov
(bad)
outs
jne
lods
push
(bad)
(bad)
(bad)
inc
mov
pop
add
fucom
jmp
ja
adc
cmc
sub
push
mov
mov
dec
pushf
(bad)
(bad)
(bad)
push
jmp
out
je
inc
mov
mov
fild
jae
adc
test
dec
das
clc
pop
sbb
add
idiv
sti
cmp
(bad)
(bad)
(bad)
mov
fdivr
or
in
dec
mov
imul
dec
(bad)
(bad)
(bad)
jmp
ins
aas
fld
adc
je
out
(bad)
mov
hlt
sub
in
jg
(bad)
(bad)
inc
adc
mov
push
into
outs
lods
cwde
or
and
jge
cld
adc
(bad)
(bad)
jmp
shl
pop
jle
push
nop
lods
(bad)
imul
jp
pop
clc
nop
xor
xchg
dec
mov
out
sar
mov
pushf
fcmovnu
sbb
(bad)
mov
push
inc
sbb
in
sub
imul
xor
sbb
(bad)
call
ja
out
xor
xchg
imul
fsubrp
nop
adc
(bad)
(bad)
(bad)
cmp
mov
pop
ds
int
mov
or
mov
pop
lock
sbb
jo
cmp
add
sbb
hlt
or
xor
mov
ss
loopne
jg
int3
fs
xor
arpl
push
andnps
aaa
es
jge
(bad)
(bad)
call
data16
stos
test
adc
cld
jb
aam
popf
add
adc
xor
jl
inc
test
into
sbb
movs
mov
xchg
sub
jecxz
clc
scas
les
add
mov
dec
jbe
mov
xchg
cmp
adc
cmc
inc
cmp
call
ret
sbb
out
imul
xchg
fs
jno
inc
push
loope
pop
pop
es
in
je
shl
dec
and
jg
fcomp
mov
and
cld
jnp
xchg
rep
add
(bad)
(bad)
(bad)
mov
scas
sbb
sub
(bad)
add
sub
es
repnz
xchg
xchg
hlt
dec
repnz
(bad)
(bad)
jmp
out
mov
test
inc
nop
scas
sti
pop
sub
and
dec
xchg
(bad)
(bad)
(bad)
jmp
fist
dec
scas
add
clc
int3
xor
pop
in
adc
fistp
inc
mov
adc
repnz
inc
jae
cmp
ins
sub
dec
mov
mov
call
sbb
cmp
xchg
dec
adc
sbb
fbstp
(bad)
(bad)
push
jns
nop
jns
push
pop
lds
pop
xchg
push
mov
(bad)
(bad)
jmp
movs
fisttp
jle
add
(bad)
fisttp
loopne
sbb
jmp
stc
sti
dec
pusha
push
lahf
cmc
das
inc
cmp
mov
jnp
dec
cmp
push
and
fcomip
(bad)
jmp
mov
sbb
sbb
push
aas
or
xchg
jae
(bad)
(bad)
jmp
mov
add
popa
or
(bad)
addr16
jns
pop
push
jmp
(bad)
sbb
or
hlt
cli
stos
call
fsub
je
(bad)
(bad)
call
aad
aad
and
and
pop
xor
leave
in
sbb
js
adc
(bad)
(bad)
(bad)
dec
mov
mov
push
mov
loope
pop
std
(bad)
xor
leave
xchg
xor
arpl
jecxz
sbb
(bad)
(bad)
call
dec
pop
mov
cmc
adc
xchg
imul
jmp
enter
sbb
jl
in
cmp
sbb
leave
mov
loop
loop
pop
cmp
xchg
cs
inc
jle
sbb
pushf
jg
ins
enter
mov
data16
pop
loopne
dec
mov
adc
pop
or
and
outs
clc
(bad)
push
scas
push
mov
mov
or
add
add
nop
sub
(bad)
cmp
jmp
retf
add
dec
sub
pusha
sahf
fs
sub
es
(bad)
(bad)
inc
retf
or
push
sub
sahf
jmp
xchg
leave
dec
xchg
sti
sbb
dec
xchg
lods
inc
pop
ins
jecxz
pop
(bad)
call
jmp
mov
clc
xchg
pop
leave
iret
mov
push
mov
(bad)
mov
cmp
pop
fild
add
ret
pop
or
mov
(bad)
mov
int
push
fistp
leave
push
adc
ret
push
xchg
scas
test
jp
jmp
pop
sbb
push
(bad)
fistp
xchg
jae
aaa
inc
lock
stc
dec
dec
call
ja
jmp
shr
(bad)
mov
fwait
mov
(bad)
(bad)
call
mov
rcl
inc
(bad)
push
adc
lock
ja
push
push
add
cmp
sbb
or
(bad)
(bad)
jmp
call
mov
xor
add
jge
and
(bad)
(bad)
cmp
add
inc
xchg
shl
aad
ja
cmp
xchg
or
ret
xchg
mov
(bad)
(bad)
(bad)
jmp
call
ja
or
and
inc
adc
call
fild
(bad)
mov
add
push
xchg
(bad)
(bad)
(bad)
sti
pop
(bad)
xor
nop
dec
and
or
out
stc
(bad)
add
les
or
out
jo
fcomp
mov
popa
(bad)
push
inc
and
push
push
or
xchg
faddp
adc
jl
sbb
xchg
lahf
inc
adc
repz
or
mov
mov
mov
imul
in
jb
(bad)
(bad)
call
stos
ret
div
fidivr
mov
inc
cdq
in
or
lods
dec
inc
add
(bad)
(bad)
(bad)
inc
jno
xchg
loop
pop
push
arpl
test
mov
daa
hlt
push
call
dec
or
push
scas
arpl
pop
leave
movs
lidtd
xchg
stos
mov
icebp
xchg
(bad)
(bad)
(bad)
(bad)
mov
les
mov
stos
xchg
sar
pop
adc
(bad)
jmp
xchg
mov
into
pop
mov
sbb
retf
mov
(bad)
mov
xchg
lock
cmp
test
or
inc
lahf
dec
dec
or
fistp
inc
(bad)
in
jmp
pop
aaa
pop
daa
test
clc
leave
stos
cmp
dec
andps
mov
sub
fdiv
xlat
pop
pushf
test
ins
jnp
jb
outs
(bad)
call
jmp
stc
push
test
je
bound
lea
xchg
add
xchg
sub
shl
(bad)
jmp
jne
je
sbb
adc
dec
mov
pop
jmp
jmp
mov
fcom
cld
push
fptan
scas
adc
dec
push
(bad)
inc
push
cli
mov
mov
adc
xor
shl
cs
ins
mov
jmp
ins
or
push
jmp
dec
lahf
das
gs
push
jmp
inc
push
sti
icebp
sub
(bad)
fidivr
sbb
shl
imul
mov
not
(bad)
pop
cld
push
ja
add
add
out
mov
rcl
pop
pop
imul
jecxz
(bad)
push
cld
sub
dec
stos
cmp
or
bnd
aaa
movs
cmp
jne
cmp
mov
loop
mov
mov
mov
inc
call
push
mov
aad
adc
sar
adc
(bad)
jmp
lahf
out
add
pop
inc
iret
dec
scas
rcr
jg
pop
sub
inc
mov
pop
clc
(bad)
jmp
cmps
dec
sar
cmp
js
xchg
xlat
repnz
pop
imul
(bad)
(bad)
push
movs
xor
push
sahf
xchg
push
inc
int3
jl
inc
daa
cmc
loop
dec
adc
mov
(bad)
(bad)
(bad)
inc
inc
test
cmp
xchg
pop
xlat
mov
imul
in
dec
rcl
loop
loopne
je
(bad)
(bad)
(bad)
call
cmp
inc
in
xor
add
adc
cmp
dec
fiadd
cmp
(bad)
(bad)
call
repz
arpl
addr16
je
sbb
cmps
mov
sbb
(bad)
rcr
std
(bad)
(bad)
call
jge
fcomp
ss
mov
jg
push
jae
dec
mov
fsubr
(bad)
jmp
adc
cmp
push
dec
add
add
and
adc
stc
add
(bad)
inc
xchg
mov
mov
pusha
or
inc
arpl
or
cmc
pop
fisttp
or
pop
fistp
test
xchg
jmp
jae
les
dec
jmp
mov
sahf
int
mov
mov
sti
add
cmc
(bad)
(bad)
(bad)
(bad)
mov
push
cmp
adc
mov
popf
lock
add
sahf
(bad)
std
rcl
(bad)
(bad)
fild
xchg
jb
not
sbb
bound
jnp
xchg
mov
(bad)
dec
xor
sti
sub
lods
mov
ja
push
dec
(bad)
(bad)
jmp
mov
jecxz
repz
cmp
sahf
sub
pop
push
cmp
(bad)
(bad)
call
ss
cmp
push
repnz
or
adc
(bad)
(bad)
(bad)
cli
scas
inc
rep
xor
ds
imul
loopne
lods
push
lods
dec
xor
mov
push
xchg
(bad)
jecxz
jmp
mov
fwait
stos
mov
(bad)
lods
dec
sbb
(bad)
jmp
pop
call
mov
nop
mov
pop
fstp
sub
xchg
sub
fs
pop
jnp
test
(bad)
sti
outs
(bad)
(bad)
(bad)
(bad)
call
bound
imul
fadd
push
mov
icebp
(bad)
mov
jns
mov
adc
xchg
add
in
(bad)
(bad)
dec
or
push
sub
jle
pop
dec
push
ud2
(bad)
mov
daa
in
aas
dec
push
sahf
cmp
cli
movs
mov
dec
jns
pop
xor
movs
cmc
cli
mov
call
mov
sbb
mov
aaa
mov
push
jns
stos
mov
outs
xor
push
adc
xor
bound
jne
ret
into
dec
shl
(bad)
(bad)
dec
aas
test
aaa
(bad)
std
aaa
jno
mov
or
retf
mov
cmp
(bad)
dec
jo
leave
int3
push
bound
pop
cmp
and
imul
jno
push
inc
cwde
cdq
sahf
add
cmps
shl
mov
nop
dec
fstp
pushf
stos
and
or
stc
loope
repz
mov
aas
jo
(bad)
(bad)
(bad)
mov
adc
(bad)
xchg
push
push
jmp
adc
cmp
jge
and
sahf
mov
sbb
pop
sbb
das
(bad)
mov
les
out
loope
(bad)
call
xchg
push
imul
scas
sbb
inc
ret
das
or
test
push
mov
mov
call
call
cmp
(bad)
(bad)
jle
jb
mov
xchg
in
pop
(bad)
cmps
out
cmp
and
imul
inc
and
(bad)
inc
repz
cli
add
or
jg
fwait
scas
mov
enter
pusha
xor
push
dec
mov
test
sub
jbe
test
inc
push
add
(bad)
(bad)
fisttp
shr
sahf
xchg
add
icebp
mov
pop
add
lock
push
(bad)
jg
cwde
shr
ss
(bad)
xchg
and
push
cmc
fwait
into
ja
push
pop
dec
jae
popf
push
(bad)
(bad)
(bad)
dec
cwde
mov
or
dec
jmp
jb
push
cmp
add
ret
(bad)
(bad)
(bad)
jl
push
xchg
out
dec
shl
into
adc
cmp
and
in
scas
cli
jg
push
add
xor
mov
aad
cmp
outs
ret
retf
jp
jmp
loop
mov
cdq
add
bound
adc
xor
(bad)
call
push
aaa
outs
mov
dec
xor
iret
mov
cmp
loope
push
fst
fnsave
dec
pop
pop
scas
(bad)
call
or
cli
xchg
bound
cmp
push
add
dec
cdq
fistp
jmp
repnz
aad
(bad)
rcl
popa
imul
sub
adc
das
sbb
scas
call
sub
mov
leave
pop
out
sub
push
pop
sub
(bad)
mov
stc
rcr
cmp
pusha
ja
mov
sbb
xlat
mov
out
push
push
ret
mov
(bad)
cmp
inc
adc
bound
dec
mov
(bad)
call
xchg
fidiv
es
dec
mov
xor
scas
mov
jp
dec
and
ds
dec
aas
mov
(bad)
dec
es
xchg
nop
jl
loop
rcl
cmps
mov
xchg
scas
(bad)
aaa
inc
mov
cmp
imul
or
(bad)
fcmovb
xor
pop
loop
jge
iret
xor
add
iret
push
pushf
jle
and
inc
mov
adc
mov
sahf
test
mov
mov
aam
mov
(bad)
dec
das
mov
clc
cli
movs
je
push
fsubr
and
adc
sbb
sar
and
mov
sbb
push
push
inc
(bad)
mov
ja
ror
pushf
shl
bound
(bad)
(bad)
call
sbb
push
push
mov
daa
dec
mov
sub
mov
repnz
(bad)
(bad)
call
push
rol
out
ja
out
xor
add
fistp
sbb
cmp
(bad)
(bad)
(bad)
call
mov
ret
push
sub
cld
aaa
out
sub
adc
sbb
ret
mov
call
dec
cmc
sbb
mov
sub
cs
cwde
(bad)
sub
jmp
(bad)
lahf
add
(bad)
jmp
cld
sbb
sbb
cli
inc
and
xor
adc
sub
cmps
pop
sub
(bad)
inc
(bad)
jmp
js
outs
push
adc
mov
push
dec
nop
mov
pushf
(bad)
(bad)
(bad)
push
xchg
lahf
lea
scas
jbe
movs
sbb
in
stos
push
cdq
mov
es
(bad)
(bad)
jmp
sti
leave
xor
mov
mov
out
xor
imul
sub
sbb
mov
(bad)
(bad)
(bad)
call
lahf
movs
mov
ins
mov
pop
and
sub
std
xor
add
or
(bad)
(bad)
inc
mov
add
(bad)
mov
sub
xor
xchg
jle
ins
ret
(bad)
(bad)
gs
retf
and
popf
je
xchg
and
and
into
sbb
jbe
push
cld
call
jmp
xchg
popf
les
add
js
jge
outs
inc
cmps
sbb
xlat
(bad)
(bad)
(bad)
cld
(bad)
jmp
or
imul
add
add
add
js
xchg
gs
or
jg
push
sar
xchg
jno
add
clc
adc
rcr
mov
dec
cmp
call
test
xor
pop
(bad)
inc
in
in
je
mov
mov
or
int3
ins
mov
pushf
movs
adc
(bad)
fdivrp
(bad)
(bad)
(bad)
fiadd
movs
jg
mov
xor
ret
pushf
jmp
daa
fnstsw
jl
ss
scas
sub
and
fsubp
cdq
arpl
sub
mov
mov
das
clc
(bad)
(bad)
jmp
sub
pushf
pop
mov
jg
jbe
jle
dec
test
mul
das
mov
push
icebp
push
and
shr
aas
jle
out
das
push
hlt
(bad)
(bad)
inc
jnp
xchg
lds
sbb
(bad)
jo
mov
cmp
mov
jbe
jecxz
or
mov
bound
hlt
stc
and
sbb
adc
mov
(bad)
(bad)
fisttp
imul
clc
into
stc
(bad)
cmp
std
pop
dec
cmp
xor
(bad)
(bad)
(bad)
dec
in
sbb
and
arpl
imul
les
xchg
mov
(bad)
inc
fcomi
std
fisub
ss
sbb
test
neg
cmp
ins
sbb
(bad)
call
call
push
push
std
add
sti
push
push
in
(bad)
(bad)
(bad)
(bad)
jmp
cdq
(bad)
or
dec
imul
jge
mov
repz
cwde
pop
cmp
inc
ret
sti
and
and
movs
mov
adc
mov
(bad)
(bad)
inc
adc
push
clc
(bad)
(bad)
jg
and
arpl
add
mov
ins
(bad)
(bad)
dec
xchg
mov
xor
mov
dec
inc
bound
cmp
(bad)
jmp
jge
jo
clc
(bad)
(bad)
inc
daa
jb
movs
push
aam
jb
loop
ins
es
inc
jnp
repnz
(bad)
(bad)
jmp
fild
sub
movs
cmp
xchg
inc
mov
push
lods
sbb
and
retf
je
jle
test
xor
cmp
movs
std
inc
ret
jnp
inc
shr
(bad)
(bad)
clc
xchg
call
push
iret
sbb
repnz
and
pop
aaa
sub
ins
xchg
lods
(bad)
pop
dec
jb
jb
int3
xchg
(bad)
jg
(bad)
out
movs
stos
in
ror
sbb
jge
imul
lds
cmp
aas
shl
lock
sar
add
popa
pop
les
(bad)
and
adc
xchg
call
outs
and
sahf
mov
in
ja
mov
(bad)
(bad)
(bad)
jmp
inc
xor
iret
mov
sbb
loop
jle
inc
iret
push
sbb
mov
push
cld
(bad)
push
in
(bad)
sub
sbb
mov
mov
mov
xchg
xchg
or
and
(bad)
(bad)
(bad)
(bad)
mov
retf
sub
ins
xchg
inc
lock
(bad)
inc
or
in
out
cmps
xchg
sub
(bad)
(bad)
call
ror
push
cmp
jo
ffree
pop
cmp
cdq
inc
test
(bad)
(bad)
(bad)
push
jbe
sbb
inc
add
and
xchg
int3
adc
jle
xchg
mov
jg
sub
and
adc
(bad)
dec
ja
or
(bad)
(bad)
(bad)
mov
and
idiv
(bad)
dec
jnp
popa
cli
test
xlat
popa
mov
push
(bad)
(bad)
(bad)
jmp
and
fcom
jmp
clc
or
or
add
inc
mov
dec
(bad)
(bad)
(bad)
call
popf
mov
call
push
jo
test
mov
sub
(bad)
(bad)
inc
add
mov
mov
aam
dec
push
push
jae
fld
(bad)
(bad)
(bad)
jmp
or
les
add
test
and
(bad)
push
clc
idiv
call
in
push
std
fwait
popf
push
lock
cli
adc
pop
add
das
stos
add
(bad)
(bad)
inc
int3
es
mov
fwait
mov
add
add
pop
clc
retf
mov
jns
xchg
(bad)
(bad)
jg
in
mov
xchg
(bad)
xchg
outs
adc
mov
cmp
cs
add
aaa
(bad)
(bad)
(bad)
inc
test
mov
xor
mov
ret
and
sub
pop
push
(bad)
(bad)
jmp
into
gs
mov
cdq
pop
and
pop
jnp
mov
or
mov
mov
adc
(bad)
(bad)
jmp
aad
adc
cmps
fmulp
fs
add
rol
or
idiv
mov
jmp
iret
jg
add
cmp
ja
inc
int
(bad)
hlt
mov
(bad)
mov
pushf
cmp
mov
das
xchg
fcmovbe
adc
push
jbe
mov
sbb
(bad)
jmp
xor
mov
jg
or
dec
popf
popa
ficom
pushf
mov
(bad)
(bad)
push
ins
(bad)
sub
add
push
scas
xchg
fsubr
fcomp
dec
pop
cmps
jae
fnstenv
(bad)
(bad)
dec
inc
hlt
or
jbe
(bad)
out
mov
mov
mov
fbstp
add
cld
adc
(bad)
jmp
adc
mov
int
xor
mov
or
je
xlat
push
ins
xor
js
inc
(bad)
(bad)
cmp
adc
mov
jb
jle
lods
inc
repz
mov
imul
rol
mov
jmp
mov
lods
fwait
xchg
pop
cld
pushf
jle
push
inc
lds
cmp
rcl
mov
lods
out
sahf
xchg
mov
sub
daa
jbe
int
ja
adc
iret
sub
into
inc
test
mov
jmp
loopne
shl
mov
mov
das
inc
(bad)
(bad)
(bad)
fbld
jge
leave
push
mov
test
enter
sbb
push
arpl
cmps
(bad)
(bad)
(bad)
call
mov
call
mov
mov
push
sub
or
clc
sub
push
adc
(bad)
(bad)
jmp
cwde
dec
dec
out
lds
in
(bad)
jno
clc
push
bound
popa
pop
or
and
cmp
or
mov
xchg
adc
mov
iret
shr
pop
sub
pop
inc
aaa
bound
mov
fwait
mov
call
xchg
(bad)
out
hlt
sub
cmp
(bad)
(bad)
cmp
xchg
or
push
xlat
movs
mov
imul
daa
jne
stos
or
cli
(bad)
(bad)
mov
mov
mov
push
adc
or
(bad)
fist
ret
nop
dec
(bad)
leave
in
mov
out
stos
xor
sbb
inc
sub
std
call
stos
mov
mov
repnz
fild
mov
ror
js
mov
arpl
fs
sub
sbb
(bad)
jmp
jg
aas
retf
xor
mov
clc
sub
arpl
lods
mov
or
(bad)
(bad)
call
xor
jbe
pop
push
clc
jb
mov
nop
outs
stc
std
arpl
inc
fidiv
outs
movs
aam
sub
scas
(bad)
pop
and
ret
pop
retf
sub
inc
idiv
test
push
dec
and
pop
addr16
fnstcw
stc
int3
popf
xchg
pop
xchg
sar
mov
out
ret
xor
inc
pop
cmp
sbb
add
ds
or
cmp
adc
push
imul
sar
mov
add
add
add
movs
sahf
mov
or
jge
stc
mov
jae
(bad)
dec
or
add
les
fsubp
cmps
imul
xchg
add
(bad)
(bad)
(bad)
inc
shl
sub
sub
push
and
lds
in
xor
js
inc
dec
std
(bad)
inc
fmul
aaa
xchg
hlt
push
ficom
jnp
neg
mov
(bad)
(bad)
call
or
aad
fldcw
inc
jle
dec
dec
not
jo
pop
push
push
std
dec
pop
(bad)
(bad)
jl
movs
out
pop
sahf
mov
sbb
fcmovu
jg
(bad)
(bad)
outs
push
pop
push
(bad)
icebp
xor
imul
in
mov
dec
nop
dec
jl
out
(bad)
(bad)
call
rcr
lds
xchg
xor
ss
adc
pop
in
aam
dec
cld
(bad)
jl
mov
adc
jo
adc
test
(bad)
(bad)
jg
sub
xchg
mov
push
outs
lds
and
or
(bad)
(bad)
(bad)
jg
dec
push
mov
lea
mov
int
add
pusha
ins
call
xchg
mul
xchg
ins
ss
call
lods
cmp
test
ss
add
int3
cs
jmp
inc
test
and
out
scas
fnsave
mov
xor
(bad)
jmp
or
(bad)
in
aaa
fistp
push
pop
inc
(bad)
or
bound
dec
data16
mov
push
(bad)
(bad)
(bad)
jmp
or
sar
pop
pop
iret
push
ja
clc
lods
push
stos
fnsave
(bad)
loope
xchg
sub
(bad)
(bad)
(bad)
jmp
or
inc
push
jl
cmc
ss
pop
sub
jecxz
mov
into
mov
ret
mov
ror
fdivrp
or
jmp
shl
mov
push
dec
call
dec
out
cmp
call
gs
mov
loopne
dec
fisub
pop
lea
clc
aad
push
pop
mov
fisubr
or
(bad)
(bad)
inc
push
outs
pop
je
and
xchg
movs
xchg
ja
and
das
and
std
jecxz
div
push
mov
jb
add
movs
add
or
arpl
pop
cwde
in
xlat
push
imul
fwait
call
adc
inc
(bad)
(bad)
(bad)
dec
ins
jb
cmp
shr
sub
hlt
ins
es
mov
xlat
call
mov
jmp
cli
xchg
lea
je
(bad)
ins
(bad)
pop
sub
aad
retf
cdq
adc
(bad)
mov
dec
call
ja
xor
sub
jmp
shl
pop
cld
std
cli
(bad)
sbb
jp
adc
lods
and
repz
xor
stos
adc
movs
clc
std
test
iret
sti
xchg
push
ss
sbb
(bad)
(bad)
inc
pushf
iret
push
lock
(bad)
push
out
inc
test
scas
cmp
test
(bad)
(bad)
(bad)
jmp
cmp
push
(bad)
rol
ffree
cmp
es
out
jno
pop
cmc
xchg
jae
xchg
or
fidivr
xchg
lock
repnz
mov
shr
cs
mov
or
fstp
jmp
push
ds
xor
ja
add
movs
aam
inc
sub
shr
(bad)
int3
fnstsw
js
sar
mov
aad
(bad)
(bad)
inc
int3
add
push
repnz
inc
iret
pop
cs
inc
push
cmp
inc
jno
and
(bad)
(bad)
jg
arpl
jle
addr16
fxch
push
jmp
jae
sbb
cmc
jecxz
inc
inc
(bad)
(bad)
(bad)
call
sub
pop
arpl
std
icebp
lds
inc
sub
add
and
push
add
(bad)
fstp
add
lock
xor
rcr
and
outs
sub
sub
adc
sar
(bad)
mov
(bad)
test
add
cs
rcr
adc
and
push
sub
(bad)
xchg
(bad)
jmp
cdq
jo
pop
inc
lahf
sub
and
dec
sub
ins
(bad)
push
jae
loop
shl
(bad)
(bad)
(bad)
call
cmc
adc
rol
out
pop
sar
(bad)
xlat
or
sub
mov
(bad)
(bad)
(bad)
push
retf
xchg
dec
pop
(bad)
int
ret
jno
pop
cmps
repnz
and
mov
jns
and
jg
jno
adc
pop
lea
fwait
jne
mov
sti
hlt
lods
xchg
cmps
jne
in
std
sbb
(bad)
inc
clc
pop
cdq
mov
sbb
je
loop
pop
ret
repnz
cmps
rcl
imul
pop
add
(bad)
call
and
inc
lea
xchg
clc
inc
shr
lock
pop
sar
(bad)
mov
(bad)
mov
sbb
xchg
or
xor
or
mov
loop
xor
xor
(bad)
(bad)
(bad)
push
xchg
xchg
pushf
and
and
xchg
sbb
push
mov
pop
pop
xchg
fdivr
(bad)
(bad)
(bad)
jg
jecxz
xor
cmp
hlt
adc
ja
mov
in
aaa
push
enter
repnz
fbstp
(bad)
(bad)
(bad)
call
jg
fst
xchg
nop
aad
clc
das
test
mov
aaa
xchg
nop
cmp
(bad)
push
jge
mov
out
sbb
xor
cmp
lds
sbb
jno
les
and
(bad)
jg
inc
jns
rol
test
(bad)
div
rol
sbb
push
(bad)
movs
push
(bad)
(bad)
(bad)
mov
add
adc
rcr
and
(bad)
call
mov
jecxz
inc
dec
nop
jle
dec
(bad)
call
push
push
das
sub
jns
adc
pop
dec
je
cmp
stos
pusha
mov
(bad)
(bad)
jg
xchg
adc
lds
jle
lock
pop
add
leave
hlt
lahf
jmp
(bad)
jns
inc
ds
bound
loopne
(bad)
out
cmp
inc
push
rol
cmp
lock
mov
pop
pop
lods
cmps
cmp
jbe
ins
inc
pop
loopne
sub
(bad)
(bad)
call
dec
cld
xor
iret
push
std
add
not
retf
push
outs
jae
pusha
rol
cld
pop
out
pop
shl
push
std
push
push
cli
fild
mov
inc
xchg
lods
loopne
pop
das
clc
(bad)
(bad)
mov
lods
xchg
ret
outs
gs
adc
push
or
mov
aam
(bad)
(bad)
(bad)
js
mov
sub
js
inc
mov
sub
movs
cld
test
stos
mov
push
xor
cmps
ret
(bad)
int3
std
cmc
adc
(bad)
jl
inc
pushf
outs
inc
jb
mov
stos
repnz
retf
push
cmp
fwait
rcr
xor
(bad)
push
(bad)
nop
in
cmp
sar
mov
or
test
in
sub
(bad)
fsub
xor
(bad)
(bad)
jmp
outs
retf
stc
mov
in
fmul
imul
pop
xchg
mov
sub
(bad)
(bad)
(bad)
inc
and
xchg
lods
outs
or
add
rol
cmps
std
in
jl
sar
(bad)
mov
jmp
daa
mov
js
jp
outs
dec
cmp
rcl
mov
push
jb
ja
jl
outs
(bad)
(bad)
call
test
add
pop
sub
mov
jnp
mov
(bad)
fcomip
sbb
pop
pop
fsubp
and
mov
or
test
jl
add
(bad)
cli
mov
pusha
adc
push
iret
cmps
movs
cmp
enter
sbb
push
sbb
(bad)
(bad)
push
add
sti
mov
cmp
cmp
fs
sbb
ja
push
sbb
call
jnp
dec
out
mov
sbb
inc
dec
ja
fiadd
mov
pop
xchg
jne
cmps
mov
sbb
out
or
(bad)
call
dec
mov
mov
adc
and
xor
scas
aaa
and
imul
cmp
(bad)
(bad)
fstp
and
jmp
push
repnz
ja
mov
push
int3
cmp
(bad)
mov
jbe
mov
add
xor
bound
add
movs
fwait
and
push
sub
call
cmp
clc
popa
cwde
das
jmp
add
call
rol
stos
and
lock
cmc
call
out
mov
call
sbb
out
push
xlat
pushf
inc
mov
adc
cmp
sbb
shr
jbe
gs
xchg
xchg
push
(bad)
(bad)
(bad)
jmp
ror
push
jg
repz
push
sbb
add
nop
pushf
mov
stos
(bad)
(bad)
(bad)
jmp
jbe
aaa
icebp
repnz
cmp
mov
sbb
hlt
mov
lods
mov
movs
fisub
push
(bad)
(bad)
(bad)
call
cmps
in
or
pushf
mov
rcl
sub
retf
add
cwde
(bad)
jg
(bad)
dec
jbe
mov
mov
sub
push
sub
inc
cmps
std
(bad)
(bad)
push
add
inc
xor
jg
sbb
dec
mov
sub
(bad)
cmp
jp
inc
call
push
arpl
call
sbb
sub
mov
adc
mov
and
adc
push
ja
and
xchg
push
add
push
(bad)
dec
outs
cwde
jns
mov
xchg
es
jp
loopne
iret
repnz
(bad)
inc
call
xchg
cmp
(bad)
sub
(bad)
sti
sub
push
clc
adc
mov
xchg
sbb
(bad)
(bad)
(bad)
jmp
lock
test
sbb
xor
jns
and
sub
(bad)
(bad)
call
lods
sahf
xchg
fbstp
inc
popf
popa
retf
lods
sbb
inc
xor
test
xchg
(bad)
(bad)
(bad)
stc
mov
mov
xchg
mov
in
sahf
dec
and
and
push
jns
cmp
(bad)
mov
or
sub
push
ret
pop
loop
xchg
cmp
inc
cld
test
mov
adc
inc
sub
sbb
sar
pop
pop
loope
push
clc
(bad)
dec
out
addr16
mov
cdq
jno
mov
jb
or
(bad)
(bad)
inc
xor
sbb
jle
std
fstp
adc
push
and
ins
cmp
lods
fwait
jecxz
(bad)
ja
push
test
or
adc
mov
(bad)
(bad)
(bad)
jmp
inc
in
repnz
xchg
inc
and
pop
or
pop
aad
sbb
mov
imul
(bad)
(bad)
in
out
push
in
out
out
adc
xor
cmp
mov
(bad)
(bad)
(bad)
call
fnstsw
sti
mov
pop
jmp
jae
pop
test
mov
loopne
dec
aad
(bad)
(bad)
(bad)
dec
adc
stc
sbb
das
lock
sbb
push
add
mov
(bad)
(bad)
(bad)
aas
mov
mov
ret
movs
xor
add
cmps
retf
je
scas
dec
and
inc
or
int3
add
dec
les
call
jp
pusha
sub
add
(bad)
jmp
xchg
mov
inc
nop
jecxz
add
adc
add
sub
in
push
(bad)
(bad)
(bad)
call
icebp
mov
sub
jne
push
jg
cmp
fcmovne
test
and
mov
aas
(bad)
(bad)
(bad)
dec
stos
(bad)
xchg
out
or
jmp
push
repnz
sti
pop
sub
in
(bad)
(bad)
(bad)
jmp
iret
dec
clc
outs
std
mov
mov
rcl
sub
inc
movs
lods
dec
and
cld
mov
dec
lds
test
push
add
mov
arpl
pop
loopne
sub
jbe
mov
test
mov
das
(bad)
(bad)
inc
and
mov
and
push
inc
or
aad
enter
mov
dec
mov
jg
mov
fsubr
pushf
push
mov
call
lock
out
cmp
(bad)
inc
jle
cmp
out
dec
fmulp
sbb
shl
repz
jnp
or
add
dec
cld
mov
jmp
cmps
outs
ss
adc
jo
popa
cs
js
sbb
add
push
cmp
call
icebp
je
mov
(bad)
loope
mov
bnd
call
push
popa
in
test
mov
push
test
out
sub
mov
push
rcr
jg
(bad)
jmp
jo
es
xchg
sbb
lods
daa
scas
(bad)
bound
inc
xlat
(bad)
(bad)
(bad)
inc
inc
push
and
xchg
pop
xor
sbb
or
sbb
cmp
(bad)
(bad)
jmp
inc
enter
jg
shr
sbb
mov
cmp
and
outs
push
stc
jecxz
lahf
cmp
adc
mov
(bad)
call
je
adc
stc
xchg
and
adc
cs
mov
rol
xchg
jb
jecxz
dec
cmc
add
push
fst
lods
add
ror
clc
jmp
push
idiv
test
pusha
stos
mov
add
call
inc
push
inc
push
retf
mov
pushf
(bad)
(bad)
(bad)
push
sbb
out
inc
jmp
inc
fcmovnu
cmp
(bad)
retf
ins
pop
cdq
in
pop
comiss
call
mov
push
and
hlt
mov
xor
ud0
mov
sahf
(bad)
adc
sub
sbb
add
loope
and
sbb
adc
(bad)
call
mov
inc
mov
push
mov
hlt
sbb
(bad)
or
sub
cld
out
mov
loopne
push
pop
dec
sub
in
jp
xchg
rol
(bad)
(bad)
mov
data16
stos
std
xor
cmp
(bad)
(bad)
(bad)
cmp
lds
xchg
ret
adc
shl
jb
test
iret
bound
jo
and
push
(bad)
jl
adc
mov
out
xchg
(bad)
(bad)
(bad)
inc
mov
sbb
das
mov
xor
mov
sub
loopne
mov
sbb
(bad)
(bad)
jmp
xor
xchg
popf
mov
not
repz
sar
ss
imul
(bad)
dec
(bad)
and
or
je
out
dec
dec
inc
cmps
xchg
(bad)
fcomip
dec
in
hlt
xchg
and
js
pusha
adc
cmp
ror
xchg
push
fild
fcomip
push
(bad)
mov
push
out
mov
fwait
div
mov
stos
or
sub
jg
das
retf
enter
int
(bad)
(bad)
(bad)
(bad)
jg
(bad)
out
daa
dec
jmp
retf
mov
inc
nop
sub
rcr
add
mov
aas
(bad)
(bad)
(bad)
call
or
dec
lahf
int
and
mov
imul
(bad)
mov
hlt
push
das
cli
(bad)
(bad)
(bad)
ds
and
or
stc
push
(bad)
idiv
cmps
or
(bad)
(bad)
(bad)
jmp
xchg
mov
cmp
aaa
imul
or
loopne
mov
sbb
pusha
(bad)
(bad)
(bad)
call
fisttp
(bad)
jge
aad
cmp
popf
and
adc
rcr
fldcw
scas
shl
fwait
xchg
pop
push
fwait
mov
dec
(bad)
(bad)
(bad)
push
jns
pop
mov
cmp
push
push
add
pop
mov
fild
pop
sub
xchg
mov
pop
icebp
(bad)
(bad)
jmp
xor
pop
add
popa
or
jge
adc
and
xchg
aaa
aam
loope
(bad)
jmp
xchg
xchg
daa
int3
pop
sub
add
les
stc
cli
loop
inc
in
(bad)
(bad)
jmp
dec
popf
jle
mov
push
pop
push
pop
and
addr16
test
imul
iret
jge
sub
test
pop
cmp
fstp
retf
neg
xchg
sbb
(bad)
out
jns
inc
pop
test
cli
aam
ja
push
sub
xchg
in
enter
(bad)
dec
mov
or
pushf
push
aam
mov
jmp
sbb
mov
bound
(bad)
(bad)
(bad)
dec
xor
pop
outs
jnp
inc
and
test
into
adc
in
test
test
jge
dec
xchg
pop
arpl
scas
pop
stos
shl
dec
clc
dec
cmp
jp
int
cmp
xor
call
jmp
ror
lods
(bad)
jle
loopne
lods
loope
loopne
loope
enter
retf
cmps
(bad)
(bad)
(bad)
jmp
inc
mov
sbb
sub
jb
push
pusha
cmps
add
sub
imul
or
(bad)
(bad)
call
xor
mov
xchg
retf
xor
cmp
dec
shl
fadd
cs
loopne
mov
outs
push
mov
push
adc
add
enter
cld
(bad)
jmp
fwait
jo
mov
jge
ins
jmp
xor
mov
enter
sahf
inc
add
or
pop
or
fild
push
cdq
and
jg
sub
out
fdivr
cmp
add
push
xchg
clc
cmc
ror
or
mov
jnp
push
and
mov
push
mov
and
call
cmps
mov
ja
jp
adc
inc
add
jb
jmp
inc
adc
rcl
les
(bad)
xchg
xor
jle
adc
jae
(bad)
cmp
adc
(bad)
mov
pop
jl
mov
xor
push
pop
jns
pop
sbb
sbb
into
dec
xlat
in
(bad)
push
push
in
mov
add
xor
xor
pop
repz
(bad)
(bad)
(bad)
aas
xor
sahf
fidivr
jo
out
cmp
xor
jl
pop
pushf
dec
mov
push
adc
jbe
inc
xchg
mov
into
cwde
aaa
retf
ds
repz
cmp
add
jmp
mov
(bad)
(bad)
(bad)
jg
cmp
add
out
in
adc
mov
outs
adc
fcom
inc
xchg
clc
pop
jnp
(bad)
(bad)
jmp
jne
mov
sub
mov
test
jl
shl
dec
mov
add
push
pop
idiv
(bad)
(bad)
jmp
dec
cmps
es
cdq
push
addr16
or
mov
adc
call
(bad)
(bad)
dec
push
push
fs
test
fsubrp
xor
mov
je
add
das
es
push
cmp
fistp
pop
imul
arpl
adc
aad
(bad)
(bad)
(bad)
dec
inc
cmps
push
popa
jl
jb
xchg
movs
jmp
add
gs
cmp
push
pop
loopne
mov
sbb
lock
scas
lea
xchg
pop
(bad)
(bad)
call
ins
push
jecxz
cs
aam
mov
fadd
sub
aaa
cld
call
cmc
loope
stos
ds
aad
into
retf
rcl
pop
mov
sub
pusha
jl
popf
cmps
pop
jmp
and
(bad)
ficom
xchg
xchg
data16
inc
leave
int3
pop
push
imul
in
pop
mov
es
and
jb
cmc
mov
cmp
int3
xlat
jae
sub
pop
dec
pop
mov
xchg
lahf
(bad)
(bad)
(bad)
call
push
aas
rol
xor
(bad)
aam
push
aas
cmp
push
int3
ss
(bad)
(bad)
jmp
imul
mov
adc
arpl
mov
scas
dec
lock
enter
nop
xor
(bad)
mov
(bad)
(bad)
(bad)
dec
arpl
inc
das
xor
mov
add
arpl
(bad)
(bad)
call
pop
inc
shl
dec
push
pop
push
ss
cmps
or
mov
adc
and
jo
dec
(bad)
jmp
add
cmc
clc
dec
jecxz
dec
outs
jp
(bad)
(bad)
call
and
test
xchg
sub
iret
or
iret
arpl
and
sar
imul
mov
popf
mov
out
loop
and
out
mov
pop
and
jge
js
repnz
push
push
jp
jo
jae
(bad)
(bad)
dec
jecxz
push
enter
jecxz
(bad)
enter
cwde
aam
dec
fimul
test
je
out
push
enter
(bad)
(bad)
(bad)
(bad)
fmul
jmp
push
push
xchg
jge
sar
cmps
push
out
je
(bad)
mov
dec
rcl
jmp
ja
add
fcomp
dec
mov
aam
repz
aad
rcl
xchg
ror
(bad)
call
test
jb
cld
cmc
sub
push
pop
je
inc
jne
mov
inc
cmp
adc
mov
jge
add
aas
xor
adc
xor
sbb
(bad)
fbstp
mov
mov
neg
push
in
and
inc
or
pop
adc
(bad)
xchg
xor
inc
or
jmp
(bad)
(bad)
push
(bad)
aas
fild
test
push
mov
dec
fisubr
mov
stos
into
pop
mov
(bad)
(bad)
cmp
xor
mov
fidiv
xchg
sbb
inc
mov
sahf
iret
(bad)
imul
cwde
mov
mov
adc
mov
add
(bad)
or
aaa
or
xchg
pop
loopne
(bad)
(bad)
mov
inc
mov
in
fld
pop
inc
add
sub
xchg
int3
mov
daa
add
fldenv
and
out
jmp
sub
neg
or
(bad)
(bad)
jmp
mov
push
adc
fisttp
push
dec
test
mov
cmps
sbb
retf
fdivr
outs
push
movs
(bad)
inc
mov
sbb
jl
push
and
ret
(bad)
(bad)
call
and
outs
jle
push
bound
add
mov
idiv
pop
(bad)
jg
mov
jge
ret
fcomp
push
adc
lods
mov
jmp
cli
or
lea
xor
jno
jns
add
popf
and
(bad)
(bad)
inc
jb
lods
lock
xchg
ret
fsubr
pop
pop
lahf
sub
in
(bad)
inc
outs
push
add
ror
loope
outs
les
mov
pop
icebp
(bad)
inc
dec
and
pop
and
xor
xchg
out
lea
sahf
and
popf
and
ja
out
daa
(bad)
inc
lds
xchg
xor
sub
fisubr
aam
fs
xchg
jb
mov
dec
xchg
stos
jge
mov
inc
stc
jle
in
dec
inc
xchg
jmp
(bad)
fdivr
mov
fisubr
int
or
push
push
add
call
xor
daa
dec
jae
jmp
daa
mul
mov
call
jmp
in
inc
xchg
jmp
cld
scas
dec
pop
adc
or
sub
xor
call
inc
into
(bad)
pop
cli
aaa
cmp
and
je
mov
mov
(bad)
(bad)
mov
out
xchg
and
xchg
mul
jp
inc
(bad)
adc
xor
(bad)
(bad)
push
repz
call
mov
cmp
sbb
scas
sub
retf
ret
jl
(bad)
(bad)
call
and
pop
push
sub
(bad)
adc
dec
cdq
mov
jo
add
dec
sti
adc
cli
sub
adc
frstor
fild
xchg
pushf
inc
shr
inc
push
std
push
inc
jb
test
fisubr
or
sahf
pop
jae
ror
mov
dec
loop
(bad)
(bad)
push
xchg
cmp
iret
mov
ins
pop
ins
outs
pop
xchg
call
push
rcr
or
sub
mov
fs
(bad)
push
shl
int3
retf
xchg
mov
(bad)
(bad)
(bad)
faddp
xor
xchg
cmp
pop
mov
ja
clc
mov
(bad)
(bad)
(bad)
mov
or
test
adc
test
sub
dec
adc
adc
(bad)
(bad)
jmp
jmp
int3
pushf
imul
fadd
pushf
cmp
cmc
mov
ds
(bad)
(bad)
(bad)
(bad)
push
outs
(bad)
mul
(bad)
or
xchg
sub
cmps
jge
out
out
push
out
(bad)
(bad)
(bad)
jns
lds
sbb
cmp
dec
mov
fisub
loope
mov
inc
mov
add
lds
hlt
(bad)
cmp
lods
push
pop
test
jg
fidiv
in
enter
out
pop
adc
pop
xchg
xchg
out
frstor
fsubr
ret
and
xchg
cs
push
scas
cmp
(bad)
(bad)
ds
int
xlat
imul
pusha
int
jae
jmp
jmp
movs
je
jge
(bad)
(bad)
push
call
push
lock
mov
fs
xor
or
iret
mov
les
(bad)
(bad)
(bad)
call
mov
adc
xchg
retf
adc
push
(bad)
leave
xlat
(bad)
dec
(bad)
(bad)
mov
and
xor
mov
cld
sar
or
push
rcr
test
ja
aaa
adc
mov
ja
mov
(bad)
or
adc
and
lods
(bad)
out
pop
hlt
dec
add
clc
pop
test
shr
add
(bad)
(bad)
(bad)
call
mov
in
nop
fsubr
dec
loopne
in
adc
push
or
(bad)
jnp
fs
lahf
add
(bad)
(bad)
call
pop
push
movs
out
pop
aam
push
jecxz
mov
pop
mov
out
(bad)
out
cli
sbb
pushf
pop
sbb
mov
(bad)
push
sub
fcmovbe
popa
jl
sbb
dec
arpl
sub
push
push
pop
cmp
push
outs
add
ins
(bad)
daa
jg
mov
call
inc
pushf
iret
test
sahf
jmp
cmp
push
mov
dec
dec
pop
neg
sti
pop
(bad)
(bad)
(bad)
call
pop
pop
(bad)
jle
adc
xchg
popa
call
repnz
(bad)
fdivr
xchg
jb
add
sar
(bad)
ja
pop
xchg
and
jno
mov
or
mov
leave
daa
xor
mov
shl
mov
mov
sub
(bad)
(bad)
(bad)
call
push
cdq
repz
add
scas
mov
adc
mov
dec
push
ret
fisubr
adc
sbb
(bad)
(bad)
call
iret
aas
mov
push
call
out
xchg
nop
xchg
jb
int3
and
jl
cmp
les
mov
sti
(bad)
(bad)
(bad)
inc
les
mov
xchg
int
in
std
loope
retf
addr16
movs
stc
add
in
mov
mov
(bad)
(bad)
(bad)
(bad)
inc
nop
or
and
mov
aad
pop
dec
mov
and
rcr
leave
sbb
add
xor
mul
mov
jl
gs
dec
push
clc
icebp
or
aas
cmp
cld
fsub
mul
dec
and
pop
and
es
xor
stc
mov
cmps
cmps
(bad)
(bad)
(bad)
call
xchg
stc
movs
(bad)
ret
xor
pop
or
pop
cmp
sbb
(bad)
(bad)
call
lea
mov
in
mov
mov
mov
enter
inc
push
bound
mov
sub
idiv
aaa
mov
mov
clc
sub
out
(bad)
(bad)
(bad)
(bad)
fisttp
into
and
movs
into
not
cmc
js
hlt
in
xchg
sub
repz
in
(bad)
(bad)
(bad)
call
fcomp
xor
hlt
scas
mov
jp
(bad)
cli
test
aam
test
stos
int
and
cld
jg
(bad)
shl
xchg
jmp
shr
loopne
(bad)
jmp
in
xor
nop
cmp
xor
push
and
jmp
(bad)
daa
pop
jmp
pop
mov
cld
data16
mov
test
movs
mov
(bad)
mov
sbb
or
outs
cmp
clc
dec
ficom
imul
dec
aaa
adc
(bad)
(bad)
(bad)
(bad)
loop
mov
sub
mov
cmp
mov
mov
cmp
int
mov
sub
sti
inc
div
je
sub
movs
movs
(bad)
push
lds
sbb
jg
jmp
xor
cmp
xchg
and
push
fcomp
xchg
adc
leave
das
lods
xor
(bad)
call
mov
test
jae
mov
mov
mov
nop
call
std
sar
mov
jo
rcl
inc
pop
pop
cld
fmul
jg
(bad)
jmp
repnz
sar
cmp
and
stos
(bad)
std
cmps
dec
pop
cld
(bad)
(bad)
fist
inc
shl
mov
cmp
xchg
cmps
stos
pop
mov
sub
(bad)
(bad)
(bad)
dec
shl
cmp
call
xchg
xor
loope
aam
mov
xor
xor
adc
mov
xor
and
xor
jne
mov
cmps
(bad)
push
cmp
cmp
push
stos
xchg
or
into
adc
movs
arpl
(bad)
(bad)
(bad)
jmp
fs
cs
arpl
(bad)
pop
imul
xchg
mov
and
jne
jl
inc
mov
mov
jg
sub
fldcw
in
add
mov
and
push
cli
mov
inc
imul
(bad)
(bad)
inc
pop
push
jbe
mov
scas
jmp
idiv
loop
add
sub
out
cmp
(bad)
(bad)
(bad)
jl
mov
scas
stc
call
scas
pop
jle
inc
xchg
xor
std
ins
add
or
sub
push
sub
and
(bad)
cmp
fnstenv
in
xor
xchg
pusha
sub
int3
pop
shr
sti
shl
movs
(bad)
cwde
std
jle
lock
(bad)
lock
jg
(bad)
rol
retf
loopne
outs
(bad)
call
(bad)
ja
and
movs
xchg
pop
mov
jb
mov
data16
inc
cmp
mov
and
(bad)
(bad)
call
mov
jl
neg
and
ret
add
ret
and
mov
or
js
mov
shl
pop
jl
xor
cmc
ja
(bad)
cmp
jmp
sahf
call
stos
sub
pop
into
xchg
rol
enter
adc
jnp
idiv
pop
jmp
dec
(bad)
(bad)
jmp
mov
in
and
fisubr
cmp
sub
mov
(bad)
push
ror
aas
js
mov
mov
pop
mov
das
rcr
popf
mov
cmp
mov
lock
xor
mov
jmp
shl
out
or
add
stc
mov
inc
sbb
arpl
(bad)
int
push
push
(bad)
(bad)
(bad)
inc
sub
mov
cmp
adc
push
jmp
lods
mov
cmp
sar
(bad)
(bad)
(bad)
fstp
in
mov
(bad)
and
dec
sti
xlat
lds
dec
jns
mov
out
adc
mov
(bad)
(bad)
call
mov
jp
add
out
adc
jl
lahf
(bad)
adc
je
push
dec
dec
xor
adc
mov
repnz
into
cs
aas
outs
sbb
mov
add
push
(bad)
jmp
out
(bad)
xchg
or
outs
in
fucomi
mov
add
stc
cmp
pop
cmp
(bad)
call
push
xchg
rol
dec
aas
shl
std
in
adc
cmp
cmp
mov
mov
xchg
push
adc
xor
mov
pop
sahf
div
push
arpl
adc
adc
xchg
outs
pop
inc
cli
adc
mov
ss
add
fdiv
(bad)
mov
loop
xchg
mov
mov
cwde
fild
lds
dec
(bad)
jno
(bad)
(bad)
dec
mul
sbb
loop
mov
fidivr
and
rcr
mov
jnp
idiv
push
sub
mov
imul
xlat
adc
mov
push
jbe
mov
and
int3
(bad)
(bad)
(bad)
jmp
inc
std
add
dec
inc
xchg
cmc
add
out
xor
dec
sbb
clc
cld
(bad)
(bad)
jmp
or
inc
std
sub
aaa
rol
fcomp
lods
imul
retf
clc
cmc
inc
mov
jg
sub
dec
mov
add
ret
fild
lahf
movs
adc
call
std
in
data16
enter
xor
mov
repz
movs
xchg
mov
add
out
xchg
inc
out
jns
pop
xor
ja
push
sbb
popa
cmp
mov
(bad)
dec
push
ret
sar
or
into
sti
sbb
adc
xor
push
push
mov
adc
(bad)
(bad)
push
add
push
fcmovnu
inc
ds
add
fstp
or
fimul
push
or
xchg
std
(bad)
(bad)
(bad)
fld
mov
retf
jecxz
imul
and
add
fld
rcl
push
sub
sbb
fdiv
sub
scas
push
cmp
ret
push
push
jmp
nop
add
pop
(bad)
(bad)
dec
enter
lock
int3
callw
inc
and
enter
push
clc
adc
mov
cdq
retf
shr
popf
xchg
ret
fmul
mov
hlt
(bad)
out
push
cmp
xor
ds
inc
test
(bad)
(bad)
(bad)
jg
inc
loope
stos
jp
dec
hlt
jne
and
loope
fidiv
cmp
mov
(bad)
(bad)
stc
rol
inc
mov
int
push
stos
out
cmps
(bad)
stos
stc
mov
mov
sub
(bad)
(bad)
(bad)
call
call
fwait
lds
mov
mov
(bad)
rcr
loope
sub
dec
sub
mov
(bad)
push
(bad)
ds
mov
mov
sbb
loope
cli
cmps
repnz
fwait
cwde
test
(bad)
(bad)
jmp
push
push
push
and
xchg
gs
inc
push
push
out
and
cmps
push
retf
(bad)
(bad)
jmp
dec
or
dec
sbb
(bad)
vmovd
idiv
or
sub
clc
retf
adc
jne
and
jmp
add
jl
test
cmps
out
xchg
mov
mov
jnp
cwde
loopne
fwait
test
push
hlt
push
loopne
gs
and
push
clc
retf
into
and
mov
(bad)
call
or
test
ss
int
aad
inc
sub
mov
fidiv
mov
push
mov
adc
mov
mov
scas
fwait
das
cmc
xor
(bad)
(bad)
(bad)
jmp
xchg
in
xchg
push
xchg
fsub
mov
sbb
scas
mov
cmp
sbb
(bad)
fwait
sub
pop
dec
sahf
xor
(bad)
call
in
push
js
mov
stos
and
mov
cld
cmps
dec
mov
fdiv
retf
mov
cmc
aam
outs
daa
icebp
add
cmps
mov
in
xor
xchg
xor
push
sub
(bad)
(bad)
(bad)
call
sub
jns
and
popa
push
xor
xchg
pop
dec
sbb
fistp
xchg
mov
or
(bad)
(bad)
call
mov
jg
mov
iret
dec
xchg
call
outs
shl
sbb
xor
(bad)
dec
call
mov
in
mov
jno
out
dec
jmp
jns
jecxz
pusha
dec
(bad)
(bad)
(bad)
push
xchg
mov
sbb
dec
push
lock
aad
(bad)
mov
test
mov
fdiv
inc
mov
xor
lods
mov
out
ja
nop
icebp
fisubr
(bad)
(bad)
call
xchg
inc
mov
dec
inc
jmp
mov
mov
test
sti
out
(bad)
(bad)
call
dec
cld
(bad)
mov
mov
sbb
lahf
int3
mov
je
js
mov
pop
or
(bad)
(bad)
call
mov
test
leave
sbb
jbe
jecxz
xchg
cmc
fistp
cli
jmp
add
test
jp
inc
xchg
xor
out
ss
push
mov
mov
(bad)
out
les
rcr
test
mov
add
and
sbb
dec
and
dec
dec
cmps
mov
lea
scas
loop
sar
shr
xor
mov
jl
add
(bad)
jg
adc
lods
pop
cmp
ret
lods
cmp
shl
sti
stos
cmp
les
(bad)
(bad)
(bad)
dec
dec
xor
ret
and
mov
(bad)
adc
push
rcr
pop
or
loop
test
push
jne
ror
clc
imul
je
push
leave
cmp
(bad)
(bad)
jmp
mov
addr16
push
mov
sbb
ret
leave
std
push
xchg
inc
(bad)
(bad)
(bad)
(bad)
jg
outs
and
test
mov
shl
rcr
jp
push
and
pusha
mov
mov
cld
mov
fbld
cmp
repnz
jnp
or
cmp
loopne
and
push
xor
cmp
cmp
cmp
cmp
xlat
out
jge
push
sub
imul
cmps
add
cmp
test
fnstenv
pushf
push
(bad)
(bad)
(bad)
jmp
xor
and
xor
jae
les
in
test
cmp
xchg
pop
adc
add
mov
neg
int
test
pop
jo
cld
mov
mov
mov
cmp
pop
stos
add
adc
(bad)
(bad)
(bad)
(bad)
(bad)
fist
repz
mov
xchg
sub
xor
jg
sub
stos
inc
dec
pop
loope
push
popa
loopne
repz
mov
pop
mov
(bad)
fisttp
xlat
add
imul
mov
aaa
bound
mov
pop
xchg
aam
repz
and
loop
idiv
push
shl
js
pop
(bad)
(bad)
(bad)
jg
mov
xor
pop
or
ficomp
and
mov
mov
sub
mov
sahf
rol
xor
cmp
ins
jle
out
mov
fisttp
cmc
inc
jno
iret
out
mov
jmp
xlat
test
inc
mov
cwde
outs
scas
sbb
adc
shr
popa
push
xor
cli
mov
outs
loop
repz
js
icebp
pop
scas
test
je
cs
(bad)
(bad)
(bad)
(bad)
jmp
sub
sub
xor
dec
bound
adc
mov
int3
ret
xor
(bad)
(bad)
push
add
mov
pop
sahf
mov
loope
add
out
jg
push
push
mov
mov
dec
inc
hlt
xchg
fnstenvw
mov
scas
pusha
std
ja
(bad)
test
cmp
bound
cmps
adc
cmp
test
(bad)
(bad)
call
stos
(bad)
cs
jae
std
sub
dec
xchg
arpl
and
sbb
call
(bad)
(bad)
(bad)
jmp
sbb
(bad)
adc
data16
das
std
outs
mov
jle
outs
out
clc
dec
fldcw
cmp
fwait
loope
(bad)
mov
push
inc
jmp
mov
stos
mov
sub
fs
inc
out
inc
ja
(bad)
jg
jp
pop
and
mov
pop
push
and
rcr
push
sub
xchg
aaa
int3
das
push
ja
repz
pop
ss
mov
jmp
call
push
jecxz
out
enter
les
push
fcom
mov
sti
pop
retf
sbb
or
fwait
sub
push
(bad)
(bad)
(bad)
jmp
jne
pop
sbb
xchg
in
xchg
mov
sbb
ds
in
mov
push
in
or
(bad)
(bad)
(bad)
mov
in
push
movs
(bad)
cmp
sub
fwait
dec
bound
jge
mov
mov
jno
push
aad
mov
(bad)
(bad)
jmp
mov
pop
mov
push
test
sub
ss
sbb
or
call
fsubrp
shr
pushf
sbb
push
xor
inc
sbb
das
xor
dec
and
daa
mov
(bad)
dec
push
mov
clc
xchg
xchg
cmps
sbb
fdivrp
mov
pop
(bad)
(bad)
(bad)
jmp
or
lods
stos
outs
inc
push
or
push
pop
js
cmp
push
push
rcl
int3
imul
ss
mov
mov
jmp
cmps
xchg
imul
add
shl
nop
sbb
jmp
lods
inc
addr16
jae
sbb
or
cdq
jns
sbb
lea
push
std
das
cli
mov
inc
jns
fist
stos
int
xor
rol
cmp
pop
je
fisub
es
clc
(bad)
(bad)
(bad)
stc
enter
xchg
pop
push
inc
out
(bad)
mov
retf
mov
xchg
jle
jno
in
mov
push
jne
xor
mov
pop
rcr
inc
cmps
sub
mov
adc
(bad)
aad
dec
inc
push
sub
add
mov
popa
fwait
popa
dec
data16
dec
mov
(bad)
(bad)
(bad)
mov
inc
xor
leave
xchg
sub
push
das
jmp
out
popf
cmp
jmp
add
ret
test
cmc
clc
ins
xor
int3
cwde
xor
and
push
cwde
mov
(bad)
xor
cli
dec
xchg
sub
dec
outs
test
fild
sub
dec
mov
mov
(bad)
(bad)
inc
dec
cld
jmp
ret
addr16
xchg
or
in
or
(bad)
(bad)
(bad)
jmp
neg
test
cwde
call
xchg
xor
(bad)
(bad)
(bad)
dec
loopne
test
pop
xor
sub
sub
jp
jns
or
cs
or
xor
mov
cld
(bad)
(bad)
call
loop
out
movs
mov
cwde
les
movs
dec
cmps
jmp
outs
icebp
movs
movs
mov
loop
hlt
jne
(bad)
(bad)
call
repnz
mov
jp
mov
fist
cmps
imul
cld
cmp
sub
ja
push
inc
and
or
(bad)
mov
ds
mov
pop
mov
pop
xchg
stc
(bad)
mov
jmp
js
div
jns
cli
std
push
mov
xor
idiv
push
outs
mov
(bad)
(bad)
fisub
rcl
sbb
test
loope
test
sbb
bound
push
mov
jne
dec
sbb
jl
test
mov
push
mov
iret
shl
add
pop
push
push
and
pop
pop
mov
enter
mov
call
adc
pop
inc
js
in
arpl
std
mov
adc
(bad)
out
movs
fsubr
mov
jge
test
aaa
lahf
outs
xor
lods
mov
aas
xlat
aas
ds
(bad)
jg
dec
enter
and
(bad)
add
xchg
and
(bad)
sbb
or
(bad)
(bad)
dec
mov
cmc
jp
psubq
les
jge
retf
loopne
adc
sub
leave
sbb
inc
jmp
(bad)
mov
loopne
(bad)
ins
fiadd
ins
mov
scas
inc
fsub
out
push
mov
xchg
pop
cmps
test
sub
out
cli
mov
(bad)
(bad)
call
push
retf
ficomp
fstp
test
outs
(bad)
call
jg
cmp
(bad)
mov
push
xor
cmp
sbb
inc
push
jl
push
retf
dec
xchg
call
mov
out
in
sar
(bad)
jmp
retf
jae
hlt
ja
fist
add
push
aam
jmp
ins
(bad)
inc
cmc
rcr
xor
mov
mov
(bad)
push
shl
mov
and
dec
jmp
jmp
or
add
add
mov
inc
mov
(bad)
cmp
nop
cli
call
dec
ss
xor
push
and
(bad)
(bad)
dec
int
icebp
(bad)
pop
xchg
nop
ror
xchg
test
cmp
ja
pop
shl
dec
jg
(bad)
inc
and
mov
dec
call
jp
or
or
mov
add
(bad)
push
mov
arpl
cmp
imul
(bad)
inc
(bad)
dec
les
jp
bound
and
int3
mov
sbb
cmp
scas
xchg
fadd
hlt
(bad)
(bad)
push
fst
mov
in
mov
dec
jl
cmp
add
(bad)
push
jo
rol
adc
sbb
mov
pop
sbb
mov
xor
vmrun
popa
inc
dec
sbb
xchg
aad
(bad)
jg
mov
rcl
loopne
xor
movs
addr16
repz
inc
popf
lock
(bad)
(bad)
(bad)
sti
inc
sar
in
mov
sbb
pop
fs
(bad)
(bad)
jmp
cmp
dec
fscale
xchg
mov
push
pop
(bad)
iret
(bad)
pop
xchg
inc
sub
fwait
add
adc
ror
test
inc
adc
fprem
or
cmp
loopne
mov
ds
jmp
jge
inc
(bad)
(bad)
(bad)
push
xchg
adc
sbb
div
popa
adc
xor
mov
mov
mov
xor
(bad)
call
pop
data16
cmp
fisttp
adc
iret
leave
(bad)
(bad)
dec
push
push
xchg
sbb
mov
mov
jne
mov
(bad)
(bad)
(bad)
jmp
xor
jg
pop
jge
ins
imul
outs
mov
aad
sbb
dec
test
pop
fs
jle
push
sub
adc
inc
sbb
(bad)
(bad)
jmp
in
jae
loopne
jmp
jl
or
push
mov
pop
fistp
add
daa
(bad)
jmp
(bad)
jmp
and
or
fidivr
xlat
call
neg
out
(bad)
jg
or
not
mov
popf
jno
jg
jae
lods
xor
adc
(bad)
jmp
or
stc
lods
push
scas
sub
push
cld
jg
dec
sub
fcom
xchg
inc
inc
xor
sbb
(bad)
(bad)
push
xchg
mov
daa
sub
test
out
push
sbb
cli
lds
xchg
jle
(bad)
(bad)
push
sub
and
inc
pop
fsub
(bad)
call
add
rcl
fstp
sbb
(bad)
jmp
out
inc
dec
rol
xor
enter
cwde
(bad)
mov
and
jns
mov
xchg
mov
xlat
(bad)
(bad)
(bad)
call
and
jo
imul
dec
jne
pop
dec
daa
pop
cmp
mov
jg
ret
test
(bad)
(bad)
jmp
std
ins
ret
retf
xor
adc
(bad)
adc
addr16
mov
sbb
enter
scas
jb
jbe
movs
call
add
aas
cmp
push
sbb
fisubr
jle
push
lahf
mov
repnz
ret
cmps
pop
xor
mov
inc
in
enter
mov
and
pop
call
adc
in
or
jecxz
call
lahf
(bad)
(bad)
call
jo
outs
aad
(bad)
adc
pop
cmp
cmp
les
add
pop
inc
imul
and
in
nop
das
stc
call
adc
call
ror
jae
ja
sar
(bad)
jl
(bad)
es
in
adc
and
gs
mov
(bad)
(bad)
mov
and
(bad)
adc
xor
mov
leave
push
push
push
pop
mov
cmps
push
mov
sbb
pusha
hlt
sub
jl
repz
outs
dec
jp
ja
outs
mov
das
cli
(bad)
dec
pop
ret
dec
test
pop
pop
dec
outs
push
mov
mov
xchg
icebp
jg
(bad)
dec
test
movs
and
ins
fcmovne
daa
xchg
imul
push
cs
mov
add
sbb
xchg
mov
movs
arpl
data16
loop
(bad)
jmp
std
and
push
mov
clc
test
sbb
in
div
dec
jmp
pop
into
ret
pop
js
or
xor
aaa
loopne
lods
inc
add
adc
dec
xor
fstp
jo
pop
mov
icebp
iretw
push
jmp
iret
or
jmp
sbb
cld
(bad)
jmp
push
sub
stc
imul
ja
jnp
adc
mov
(bad)
jmp
aad
or
shr
push
out
fdivr
add
sysexit
jno
xchg
push
or
adc
sub
pop
mov
fild
popa
(bad)
int
or
add
pusha
mov
(bad)
mov
loopne
and
ror
test
(bad)
mov
dec
pushf
jg
(bad)
jg
in
call
jp
mov
mov
add
jne
mov
(bad)
(bad)
call
add
mov
sub
int3
sub
cmp
in
lea
inc
xor
lea
jns
pop
mov
jo
add
adc
ds
outs
mov
(bad)
mov
inc
inc
jae
xchg
(bad)
(bad)
mov
dec
mov
lock
push
sbb
fs
(bad)
sbb
call
std
(bad)
fild
xor
jae
mov
cmp
outs
dec
pop
jno
mov
cdq
sub
(bad)
dec
adc
stc
lea
mov
cmp
jo
stos
mov
inc
pop
sbb
(bad)
jmp
scas
dec
dec
mov
jmp
sbb
(bad)
mov
inc
cmc
pop
int
bound
fs
ss
(bad)
(bad)
(bad)
(bad)
dec
xor
mov
pop
mov
jne
cs
mov
sbb
popa
cmp
ins
fbld
cld
call
fdiv
jle
dec
sahf
jecxz
adc
fcmovnb
push
or
ins
ret
adc
sbb
or
(bad)
jmp
ret
sub
and
inc
movs
push
xor
shl
jge
jne
or
call
inc
sub
nop
cmp
pop
dec
pop
scas
or
push
les
(bad)
(bad)
(bad)
push
shl
stos
xchg
aaa
cdq
pop
es
mov
mul
stos
push
jo
ds
mov
dec
int3
mov
mov
mul
mov
cmps
cmp
fst
(bad)
call
sub
jg
into
imul
xlat
inc
(bad)
(bad)
(bad)
(bad)
mov
call
retf
jns
add
jmp
mov
fldcw
jmp
fmul
mov
xor
(bad)
lods
inc
jmp
lahf
or
or
mov
mov
or
inc
imul
(bad)
lods
call
jae
aad
test
adc
fmul
pop
in
mov
gs
inc
(bad)
(bad)
(bad)
jmp
pop
mov
in
cdq
mov
cmp
or
daa
and
inc
adc
xchg
jne
mov
jl
sbb
jb
push
jbe
jmp
es
daa
adc
(bad)
call
loopne
pop
pop
inc
dec
xchg
cmp
lods
mov
clc
inc
loope
aad
sub
(bad)
(bad)
(bad)
jmp
adc
scas
xlat
adc
adc
out
repnz
sbb
push
(bad)
jmp
mov
and
stc
sub
mov
push
inc
fisubr
(bad)
(bad)
jg
xor
cmp
add
adc
mul
(bad)
push
dec
and
mov
push
and
(bad)
(bad)
inc
mov
cmc
mov
daa
cmp
(bad)
mov
jp
xor
(bad)
adc
xchg
pop
push
mov
(bad)
jmp
(bad)
adc
and
mov
sbb
data16
lock
mov
ret
bound
dec
push
jae
mov
xchg
in
mov
gs
sar
add
sar
pop
hlt
jmp
xchg
pop
jno
stos
std
into
cmps
push
adc
cmps
(bad)
sbb
push
in
into
push
jo
pop
icebp
dec
adc
pop
cmc
push
add
push
dec
dec
xor
shl
jno
fadd
cs
outs
inc
adc
stos
mov
in
jns
adc
jmp
retf
sar
movs
loop
in
jg
retf
cmp
fnstsw
scas
je
pop
ror
push
sub
loopne
cmp
(bad)
(bad)
(bad)
inc
sub
cmp
or
pop
mov
jb
sub
mov
sub
mov
dec
jae
push
lods
push
inc
jno
jmp
and
jge
stc
adc
sar
pop
rol
leave
fwait
push
scas
pop
mov
addr16
loopne
mov
test
or
cs
dec
fld
mov
test
xchg
std
sbb
dec
aaa
add
in
mov
xchg
pusha
loope
jg
(bad)
(bad)
out
out
sbb
xchg
xor
leave
mov
lods
pop
ret
jno
cmp
mov
cld
(bad)
jmp
sub
pop
stc
jge
sub
mov
popf
push
(bad)
imul
or
inc
mov
jnp
(bad)
(bad)
(bad)
jmp
or
(bad)
outs
cmps
add
popa
aaa
repnz
sbb
dec
jmp
aaa
(bad)
(bad)
(bad)
jmp
dec
mov
(bad)
mov
sub
pop
xchg
add
push
lods
iret
adc
inc
cwde
fstp
lahf
arpl
or
lea
mov
add
xor
(bad)
jmp
lea
pop
ret
out
je
cli
mov
aaa
pushf
dec
ss
push
frstor
mov
sahf
mov
in
mov
sub
(bad)
stc
inc
xchg
sbb
xor
imul
cmp
aas
mov
and
mov
mov
xlat
mov
adc
das
adc
mov
mov
mov
movs
jmp
add
out
stos
mov
inc
nop
pushf
xchg
es
mov
push
clc
adc
mov
lods
adc
fs
and
adc
jmp
sub
ss
push
or
pop
jge
push
push
jmp
cmp
ret
jmp
pop
cmps
xor
inc
pop
pop
popf
aaa
adc
dec
mov
push
xor
xchg
(bad)
(bad)
(bad)
push
jnp
mov
pop
jl
inc
addr16
clc
test
lds
or
add
call
add
daa
cmps
push
inc
or
push
dec
cdq
iret
cmp
(bad)
(bad)
cmp
popa
fisttp
xchg
jp
adc
paddq
loop
pop
imul
rcr
pop
push
jl
aad
or
ret
xor
inc
push
mov
sbb
adc
rcl
into
pop
cmp
outs
ins
cmp
inc
xchg
add
jne
add
call
dec
pop
push
or
and
push
dec
mov
dec
pop
lock
shl
xchg
cmp
add
add
movs
addr16
jle
dec
(bad)
cmp
sub
(bad)
jmp
cmp
lock
cmp
cs
sbb
lods
mov
fcom
push
(bad)
(bad)
out
xchg
inc
cs
sub
mov
repnz
(bad)
(bad)
(bad)
push
repnz
pop
nop
push
iret
push
jae
loope
cmp
sbb
jmp
shl
jmp
jns
mov
clc
xchg
dec
les
rcl
imul
movs
dec
iret
popf
jp
mov
lahf
pop
cld
(bad)
(bad)
(bad)
jmp
rcl
mov
inc
or
push
adc
fisub
or
js
fst
push
cld
call
pop
fist
cdq
movs
int
or
jbe
(bad)
jne
inc
jnp
inc
jo
(bad)
(bad)
(bad)
push
inc
lea
(bad)
inc
or
pushf
jmp
fwait
adc
call
mov
shr
shr
shr
outs
mov
clc
(bad)
inc
xchg
pop
xchg
mov
jnp
ror
mov
fsub
jno
xchg
(bad)
(bad)
jmp
pop
lea
loope
fld
cwde
sub
in
stos
lds
pop
pop
in
test
xor
(bad)
jmp
lea
std
mov
pop
jecxz
xchg
inc
pop
and
add
lock
jge
pop
icebp
pop
(bad)
pusha
test
enter
sbb
into
or
popa
(bad)
(bad)
call
data16
sahf
daa
jge
pushf
mov
add
sbb
pop
push
shl
stos
mov
(bad)
(bad)
fmul
loope
adc
sub
ja
loope
jo
xor
pop
lds
adc
aad
or
loope
sahf
push
retf
or
pop
xchg
inc
pop
and
(bad)
(bad)
(bad)
call
xchg
xchg
push
jle
test
mov
in
add
popa
mov
movs
mov
xor
test
(bad)
(bad)
(bad)
inc
jns
data16
les
aas
jmp
xchg
(bad)
pop
jbe
ret
shl
dec
jmp
stc
nop
mov
sub
lahf
sahf
popf
neg
mov
(bad)
(bad)
(bad)
call
xchg
fimul
gs
push
jne
or
fwait
pop
(bad)
sub
(bad)
ins
dec
(bad)
(bad)
(bad)
dec
in
popf
mov
gs
(bad)
sbb
ret
int
iret
cmp
(bad)
push
pop
inc
rcl
(bad)
push
les
xor
and
shr
ret
fisttp
movs
dec
mov
hlt
dec
mov
push
and
sub
(bad)
(bad)
inc
(bad)
and
js
adc
and
jno
sub
out
add
enter
(bad)
(bad)
push
and
(bad)
bound
or
add
add
int3
xor
pop
test
pushf
adc
(bad)
dec
in
neg
jg
cmp
pusha
jge
fnstcw
(bad)
in
aaa
mov
stos
jle
sub
ret
mov
ss
and
sti
fsubr
out
xor
dec
push
mov
dec
xlat
clc
xor
sbb
dec
xor
retf
outs
icebp
fwait
(bad)
call
call
xchg
mov
cdq
or
call
push
xchg
push
outs
lds
or
aaa
or
mov
ret
les
(bad)
(bad)
(bad)
push
sbb
daa
div
and
loope
test
sub
clc
loop
mov
call
or
cmps
enter
mov
cmp
(bad)
(bad)
call
inc
enter
mov
or
sbb
imul
push
add
stos
mov
(bad)
arpl
dec
nop
inc
sti
and
xor
pop
adc
adc
jno
pop
push
shr
outs
sbb
sbb
(bad)
push
inc
stc
pop
outs
es
jae
pop
inc
(bad)
cdq
nop
pop
dec
adc
xor
adc
ins
(bad)
(bad)
(bad)
push
sbb
ss
cmps
fiadd
push
cmc
pmullw
sbb
and
inc
loop
out
pushf
pusha
sar
dec
sbb
jno
arpl
add
fwait
pop
jbe
push
add
mov
js
mov
xlat
outs
out
cmp
adc
(bad)
(bad)
inc
xchg
jmp
fnstenv
inc
sub
adc
mov
mov
mov
xchg
fdiv
dec
imul
mov
call
into
dec
fisub
cmp
fwait
mov
jae
pop
(bad)
(bad)
(bad)
dec
data16
stc
jne
cmc
lea
mov
out
sbb
xor
mov
cmp
(bad)
jmp
out
frstor
inc
xchg
xor
or
sti
sub
sub
cli
frstor
call
jmp
adc
fldcw
mov
adc
inc
push
mov
dec
stc
dec
mov
dec
xchg
push
sahf
sub
mov
mov
cdq
add
sti
mov
and
in
jp
(bad)
(bad)
dec
dec
mov
neg
pop
ds
(bad)
cwde
lahf
sub
and
mov
pop
mov
cmovbe
or
cmp
mov
sbb
push
ins
jmp
mov
push
imul
mov
sbb
(bad)
dec
jno
popf
jecxz
imul
pop
(bad)
cmp
cs
(bad)
(bad)
mov
ins
sbb
jmp
push
cmc
mov
rol
jp
(bad)
jmp
(bad)
ins
adc
jne
pusha
adc
push
(bad)
fbstp
lods
dec
sbb
mov
ret
fist
(bad)
(bad)
sti
imul
arpl
aas
fwait
cwde
div
je
xchg
pop
leave
sub
push
or
(bad)
(bad)
(bad)
jmp
xor
mov
and
scas
mov
aad
scas
sbb
jae
out
mov
inc
jg
aam
ret
(bad)
fld
enter
idiv
jmp
push
ret
cs
inc
or
cmp
sbb
(bad)
mov
fs
out
rcl
mov
cmps
push
idiv
(bad)
cmp
int
test
inc
mov
sbb
stc
cli
jne
sti
cld
pop
xor
mov
adc
mov
jae
pusha
mov
ds
stos
(bad)
pop
and
or
(bad)
gs
rcl
in
fs
dec
push
mov
add
loopne
shl
int3
stos
pop
jmp
loope
fucomi
setno
mov
lock
mov
mov
sub
adc
clc
xchg
sub
fstp
retf
fcomp
out
(bad)
add
loopne
ins
push
mov
push
inc
xchg
shr
inc
popf
pop
push
push
jbe
sbb
add
(bad)
jmp
in
mov
push
pop
and
jnp
xchg
xchg
cmp
scas
xor
(bad)
(bad)
(bad)
(bad)
mov
add
mov
jmp
mov
pop
inc
sub
jge
(bad)
(bad)
call
imul
mov
mov
bound
cs
adc
xor
(bad)
(bad)
(bad)
jp
and
(bad)
mul
sub
sub
push
dec
mov
pusha
jo
rcl
ret
mov
call
xchg
push
and
bsf
adc
loope
dec
loope
jg
inc
fs
sub
jge
scas
outs
adc
(bad)
ds
pop
xor
in
sub
aas
mov
(bad)
(bad)
(bad)
(bad)
aas
or
pop
loopne
in
xor
loope
fistp
adc
jnp
inc
out
jmp
xchg
(bad)
(bad)
push
mov
mov
add
test
add
test
inc
aaa
(bad)
(bad)
(bad)
inc
jae
enter
fmul
xchg
jmp
mov
sbb
inc
std
push
aas
inc
arpl
(bad)
(bad)
(bad)
(bad)
(bad)
jns
cmp
ja
sahf
sbb
cmps
cwde
mov
(bad)
sub
clc
fild
test
sbb
(bad)
(bad)
(bad)
call
mov
call
fidiv
mov
cmps
push
dec
(bad)
inc
xor
and
out
add
mov
cmc
and
pop
sar
(bad)
(bad)
jmp
sub
mov
and
adc
jp
inc
popa
movs
pop
(bad)
jno
aaa
ret
add
xor
loopne
mov
xchg
jbe
mov
sti
or
mov
cli
aaa
stos
mov
mov
in
(bad)
(bad)
inc
lods
push
xchg
pushf
ja
pusha
mul
pop
cmc
clc
fisttp
pusha
jg
not
push
xchg
loope
dec
xchg
js
stos
ja
or
cmps
jae
test
das
loop
fsubr
(bad)
(bad)
push
cmp
xchg
jne
xchg
push
cs
fcom
mov
push
movs
(bad)
xchg
mov
jmp
(bad)
call
xor
sub
add
stos
out
ret
cmc
cmp
repz
adc
xchg
or
(bad)
(bad)
mov
mov
jb
sbb
jbe
push
clc
push
out
sar
dec
jmp
and
sbb
in
inc
out
and
mov
test
lock
loop
cwde
es
(bad)
mov
add
iret
or
aad
add
daa
cmp
mov
(bad)
call
mov
inc
mov
or
sbb
push
mov
gs
fisttp
xor
pop
mov
fst
adc
or
(bad)
pop
scas
cs
cmp
popa
lods
mov
call
dec
sub
and
jl
pop
hlt
xchg
sahf
test
jg
scas
pop
cmp
(bad)
(bad)
(bad)
(bad)
jle
push
arpl
rcr
je
repz
cld
out
ret
inc
lahf
push
int
xor
jp
xchg
fdivr
in
fnstenv
(bad)
dec
fiadd
sbb
test
lods
fsub
ja
push
xor
(bad)
mov
in
call
sub
or
movs
push
dec
out
call
sub
(bad)
(bad)
jmp
dec
je
mov
push
bound
mov
les
mov
fidivr
adc
dec
dec
dec
pop
mov
retf
lods
mov
pop
xchg
in
mov
(bad)
(bad)
push
push
cmp
inc
loop
inc
gs
sbb
call
cmp
(bad)
(bad)
(bad)
call
mov
dec
test
call
loopne
push
clc
pop
dec
jne
cmp
cmp
arpl
mov
adc
dec
rol
dec
dec
(bad)
jg
inc
push
sub
in
add
je
xchg
es
and
mov
loop
mov
ss
sti
(bad)
(bad)
mov
pop
nop
and
ds
cmp
dec
in
cdq
sub
scas
push
fs
cmp
sub
mov
xchg
dec
and
imul
fdiv
mov
pop
cmp
loopne
push
sbb
arpl
mov
mov
cmc
(bad)
(bad)
push
rcr
outs
mov
ins
nop
sahf
in
jb
idiv
adc
sar
(bad)
mov
in
jmp
cmp
test
enter
or
rcl
call
std
(bad)
(bad)
(bad)
cmp
add
in
mov
inc
xchg
repz
loope
(bad)
mov
push
cmp
inc
scas
pop
and
push
out
ror
loopne
inc
dec
cmp
repnz
jno
jg
out
cmps
fcmovbe
(bad)
(bad)
(bad)
dec
test
xor
aas
sub
sbb
mov
and
daa
mov
or
dec
mov
(bad)
(bad)
jmp
ins
shl
pop
sbb
std
lea
stos
rcl
push
div
ins
pop
je
call
(bad)
dec
popa
jno
scas
aad
sub
test
movs
jecxz
dec
inc
lea
cs
(bad)
(bad)
inc
jl
pushf
inc
jb
pop
ins
hlt
mov
inc
or
cld
mov
cwde
mov
call
add
or
mov
xor
mov
call
lock
hlt
push
addr16
cs
jno
add
sub
add
test
ret
inc
push
(bad)
(bad)
fmul
adc
adc
inc
mov
out
ret
sub
out
cmp
sbb
sbb
into
enter
sub
mov
(bad)
(bad)
push
inc
ret
mov
std
je
dec
aas
mov
jae
inc
ret
mov
(bad)
mov
out
mov
push
daa
sahf
jno
cmps
(bad)
(bad)
call
and
mov
sbb
jae
iret
aad
adc
fiadd
pusha
or
jg
cwde
add
rcl
scas
adc
xchg
movaps
(bad)
dec
jg
ds
std
(bad)
xchg
push
xor
and
cmp
jne
fisttp
and
push
in
push
xor
nop
fldenv
scas
cmp
xor
call
addr16
sub
test
popf
and
aam
aaa
cld
(bad)
(bad)
(bad)
cmp
arpl
push
mov
mov
stc
movs
adc
pop
push
or
icebp
or
sub
sti
xchg
pop
pop
retf
push
fidivr
sbb
push
shl
sbb
xchg
xchg
(bad)
lahf
es
hlt
movs
adc
(bad)
(bad)
(bad)
jmp
and
adc
jo
ret
jl
dec
xlat
or
add
mov
(bad)
(bad)
call
or
nop
lahf
iret
cli
jg
add
mov
in
hlt
mov
call
loopne
push
push
push
adc
pop
pop
sbb
add
scas
push
leave
xchg
aam
jns
ins
lea
jnp
pop
push
loope
mov
inc
push
push
mov
or
add
out
or
xlat
stos
xchg
or
mov
aaa
repnz
jne
pop
jg
cmp
fstp
repz
mov
jl
push
dec
xchg
mov
mov
pop
(bad)
push
pop
jb
outs
adc
enter
add
push
xchg
scas
pop
push
push
mov
sub
inc
div
rol
std
(bad)
(bad)
inc
movs
xor
mov
jg
popf
lods
jae
adc
sub
add
fidivr
mov
loopne
jge
dec
scas
and
jbe
dec
pavgw
push
adc
or
jle
push
mov
sbb
mov
mov
and
leave
mov
dec
fisub
(bad)
nop
out
xlat
call
(bad)
call
add
sub
lock
les
bound
push
push
push
cwde
and
cdq
add
(bad)
push
or
cmp
cli
call
xor
adc
inc
pop
data16
nop
jmp
(bad)
(bad)
(bad)
call
test
arpl
fmulp
(bad)
aad
sub
scas
imul
retf
scas
sub
sbb
stos
mov
sub
call
cli
sar
sbb
lea
movs
mov
sub
push
iret
(bad)
(bad)
(bad)
call
jne
rcr
mov
jb
fsubr
stos
enter
sahf
ins
pop
mov
xlat
xor
dec
movs
into
dec
lock
outs
sub
jns
xor
out
or
jno
sub
jo
and
xchg
test
xchg
jne
push
mov
(bad)
(bad)
(bad)
call
inc
xor
out
pop
in
fist
xchg
fcomp
adc
add
(bad)
jg
je
push
xchg
xchg
pop
mov
xchg
out
cmp
pusha
sbb
mov
into
pop
icebp
add
adc
push
dec
das
test
pop
dec
(bad)
jg
lds
jbe
inc
ins
cmp
pop
gs
xor
fwait
(bad)
mov
movs
adc
sub
jl
fwait
ins
add
xor
cmp
(bad)
push
inc
or
adc
xor
rol
or
adc
fwait
push
cmp
(bad)
jmp
out
dec
(bad)
(bad)
(bad)
jmp
push
mov
add
out
xor
in
lock
cmps
(bad)
push
mov
ins
xchg
sub
add
idiv
addr16
adc
add
sbb
rcl
jp
cli
leave
(bad)
(bad)
(bad)
call
aaa
popf
ins
es
sbb
test
cmp
jnp
jl
outs
pop
xor
(bad)
(bad)
(bad)
aas
sub
(bad)
cli
test
jp
or
mov
jmp
cmp
push
push
mov
nop
fwait
jnp
scas
jge
sbb
pop
bound
out
or
in
sysret
pop
call
inc
xchg
int
adc
into
out
dec
call
(bad)
(bad)
call
pop
es
(bad)
mov
ss
into
sub
cld
lea
into
popa
ja
sar
pop
ror
(bad)
(bad)
jmp
(bad)
mov
repnz
xchg
mov
sbb
ret
je
in
call
mov
(bad)
mov
repz
iret
out
ficomp
inc
lea
push
fxch
pop
dec
iret
sub
das
mov
mov
ds
clc
sbb
call
cwde
or
stc
xor
mov
push
xchg
adc
(bad)
jg
(bad)
jae
pop
fldenv
dec
pushf
xchg
xchg
adc
hlt
(bad)
push
ret
js
stos
or
jmp
sbb
(bad)
(bad)
(bad)
push
adc
jl
mov
jo
int3
js
and
xchg
cmp
loope
scas
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
and
xor
aam
je
iret
and
push
nop
movs
clc
arpl
pop
cld
mov
mov
dec
out
hlt
clc
jmp
dec
outs
jne
js
lock
test
adc
jo
dec
jns
and
dec
(bad)
(bad)
(bad)
jmp
jmp
mov
push
pop
int
sub
cmp
add
adc
aam
push
push
int
(bad)
(bad)
(bad)
(bad)
fisttp
aad
rcr
gs
xor
stos
std
arpl
pop
mov
inc
cld
pushf
ins
cmps
mov
mov
(bad)
jmp
or
or
push
add
ret
scas
pop
pop
(bad)
scas
adc
sub
mov
xor
(bad)
(bad)
(bad)
ds
cld
push
pop
call
out
mov
and
hlt
sti
push
stos
jmp
(bad)
(bad)
inc
mov
cmp
inc
rol
push
sub
mov
leave
sub
aam
dec
mov
or
sub
aam
xor
in
pop
cwde
lds
fcomip
jmp
push
iret
inc
icebp
jp
retf
and
(bad)
dec
jmp
cmp
dec
pop
movs
add
mov
sub
add
fsub
ja
leave
or
out
cli
repz
shl
(bad)
(bad)
jmp
mov
out
clc
pop
ss
inc
dec
inc
cmp
mov
(bad)
push
test
mov
xchg
je
adc
mov
xor
movs
repz
pop
cmp
xchg
bound
xor
mov
adc
repnz
repz
jecxz
(bad)
sti
jle
scas
sar
pop
pop
out
into
in
fcom
(bad)
jg
mov
cld
push
stc
data16
cmp
call
or
gs
call
aaa
pop
in
(bad)
hlt
(bad)
(bad)
inc
cmp
mov
add
and
std
sbb
out
adc
sub
popf
retf
add
adc
inc
cs
jno
addr16
cld
push
aas
pop
pop
xchg
push
sub
inc
retf
xor
(bad)
(bad)
(bad)
call
or
test
lahf
sahf
push
push
pop
add
dec
(bad)
dec
add
lds
inc
(bad)
(bad)
fcomip
outs
scas
mov
sub
scas
inc
jo
inc
mov
jbe
hlt
inc
(bad)
std
jl
dec
jmp
movs
mov
outs
push
out
call
cmps
add
int3
sbb
cmp
push
neg
jmp
add
stos
hlt
inc
xor
add
sar
xchg
inc
mov
xlat
(bad)
(bad)
mov
rcl
jmp
jge
adc
test
jle
and
int
jg
(bad)
call
jmp
sub
scas
hlt
(bad)
(bad)
jg
dec
lods
mov
test
stos
jns
inc
adc
iret
and
(bad)
(bad)
(bad)
call
inc
rcl
inc
repnz
iret
(bad)
test
test
dec
add
and
inc
or
aaa
stc
sub
jmp
xlat
mov
stos
punpcklwd
lods
fild
cmp
loopne
clc
inc
jmp
fwait
mov
push
pop
mov
add
xor
gs
push
sar
jle
adc
push
add
xor
and
or
(bad)
(bad)
(bad)
jmp
repnz
dec
jmp
out
pop
test
xlat
inc
popa
dec
icebp
and
ds
(bad)
(bad)
(bad)
push
cwde
jge
inc
lahf
push
out
and
or
cmps
in
fsubp
cld
lahf
xchg
fcmovne
cmp
loop
cmps
test
cli
push
add
cmovb
inc
jmp
and
pop
aam
cmp
(bad)
cli
mov
scas
loop
adc
ss
test
adc
(bad)
(bad)
jg
add
sahf
sub
in
mov
iret
(bad)
mov
pushf
popa
in
xor
aad
fidivr
sub
sbb
push
iret
(bad)
mov
dec
fwait
scas
push
pop
cmp
jo
out
sub
in
and
sub
rol
pop
jl
mov
push
mov
jns
nop
sub
inc
aaa
pop
ret
sbb
cmc
jne
push
or
mov
je
jmp
mov
ret
sbb
call
das
add
sbb
(bad)
ds
mov
pop
fucomi
popa
jg
dec
(bad)
mov
sbb
ret
pop
cmps
dec
pushf
mov
(bad)
jp
icebp
test
int3
ins
repnz
or
(bad)
(bad)
jmp
mov
xor
cmp
pushf
xchg
outs
inc
mov
adc
(bad)
(bad)
(bad)
dec
or
pop
addr16
clc
mov
push
lods
neg
xchg
fiadd
addr16
stc
push
data16
(bad)
(bad)
call
mov
out
inc
nop
les
aaa
retf
ret
inc
addr16
adc
xor
retf
jmp
(bad)
jmp
push
mov
adc
popf
fiadd
jge
sbb
cmp
std
bound
mov
cld
mov
adc
xor
mov
fld
jnp
lods
loope
int3
(bad)
xlat
xchg
(bad)
(bad)
(bad)
call
arpl
retf
mov
(bad)
fst
cmc
rcl
aas
mov
push
push
mov
stos
fdiv
adc
dec
dec
mov
xchg
mov
pushf
leave
or
mov
add
inc
adc
mov
sbb
mov
sub
loop
stos
cmp
(bad)
(bad)
jmp
(bad)
xor
or
adc
mov
lods
inc
sar
popa
lahf
mov
(bad)
(bad)
jmp
xchg
ja
repnz
pop
mov
xor
sbb
push
adc
mov
scas
jb
inc
and
mov
(bad)
(bad)
(bad)
dec
rcr
jl
stc
push
jb
sbb
push
and
jns
pusha
lahf
test
ficomp
sahf
sub
stos
(bad)
(bad)
inc
sbb
ret
cdq
jo
in
and
lods
mov
stos
xchg
shr
(bad)
(bad)
(bad)
dec
mov
inc
lods
addr16
cld
inc
cdq
pop
loope
lds
mov
xchg
repz
and
pop
popa
call
or
mov
xor
sti
ins
fisttp
pop
dec
push
inc
(bad)
dec
sar
js
inc
push
mov
js
repnz
cld
(bad)
(bad)
call
jmp
cmp
int
std
adc
hlt
add
les
daa
(bad)
mov
and
jo
sbb
call
loopne
fist
(bad)
(bad)
inc
ins
sbb
xor
cmp
or
mov
lea
push
or
(bad)
inc
ds
jns
cld
or
leave
jne
pop
imul
xor
xchg
bound
mov
movs
sbb
lock
mov
call
jns
or
jns
int
sub
cli
push
sbb
(bad)
(bad)
jmp
mov
popf
sti
xlat
sbb
test
and
pop
int
ins
adc
movs
fbld
call
mov
lock
ja
jg
(bad)
jmp
jmp
enter
test
dec
mov
mov
fld
retf
(bad)
and
mov
and
push
add
movs
(bad)
call
jecxz
in
mov
lock
cmps
ins
xor
add
(bad)
push
shr
(bad)
xchg
cmp
push
popa
cs
out
inc
pop
dec
sar
inc
push
test
add
out
ins
lods
fidivr
push
pop
rcl
sar
xchg
repnz
jbe
ins
dec
sti
(bad)
(bad)
(bad)
inc
mov
and
(bad)
call
clc
pop
add
ss
and
jmp
mov
ins
jne
repnz
sub
movs
mov
cmps
xor
and
hlt
shl
xchg
(bad)
fisub
rcr
inc
mov
push
adc
inc
popw
clc
cmp
(bad)
(bad)
(bad)
dec
call
cdq
cdq
aaa
inc
out
adc
inc
sar
es
(bad)
xchg
retf
dec
inc
xchg
(bad)
pop
xor
dec
call
and
cs
dec
lock
(bad)
(bad)
push
add
imul
xchg
int3
icebp
or
iret
xor
fidiv
in
mov
mov
clc
lea
ficom
outs
(bad)
ror
mov
enter
lds
(bad)
dec
lahf
enter
test
and
dec
int
loop
cli
jmp
inc
jbe
cmp
popa
retf
(bad)
(bad)
inc
dec
and
repz
ja
bound
imul
(bad)
push
add
jg
(bad)
dec
mov
push
dec
pop
in
jge
mov
out
dec
movs
cmps
push
mov
(bad)
(bad)
dec
sbb
repnz
inc
mov
xchg
dec
pop
cmp
ror
or
cli
(bad)
jmp
into
mov
dec
das
jmp
dec
mov
enter
in
jmp
loope
mov
loopne
mov
popa
add
push
mov
(bad)
(bad)
push
cmc
(bad)
bound
ror
rcl
and
mov
test
push
xor
ins
outs
clc
(bad)
(bad)
(bad)
out
bound
retf
xor
fcmove
inc
loop
cmc
dec
and
push
mov
jle
or
repnz
(bad)
push
fmul
push
mov
mov
pop
pop
jo
cmps
inc
sub
stc
jbe
call
cmp
cwde
pop
pop
mov
mov
mov
(bad)
xor
or
(bad)
(bad)
(bad)
jmp
mov
gs
cmp
xor
inc
jbe
lea
dec
call
jge
cld
(bad)
(bad)
jmp
lahf
jae
cmp
je
push
pop
aas
mov
push
aad
out
ss
(bad)
(bad)
mov
cmp
fwait
dec
into
mov
fs
cmp
mov
xor
scas
mov
dec
fcmovu
lock
mov
mov
enter
js
in
mov
(bad)
jmp
add
dec
shr
push
in
xchg
mov
cmp
jns
mov
jmp
jg
pop
jmp
aad
xchg
test
scas
out
cs
outs
(bad)
add
ja
(bad)
(bad)
(bad)
(bad)
mov
test
dec
out
in
sub
add
lods
dec
pop
out
adc
test
jb
(bad)
(bad)
(bad)
(bad)
mov
xlat
dec
mov
xchg
cmp
cli
cmp
repnz
push
dec
jg
(bad)
(bad)
call
and
imul
push
das
cs
jns
xchg
test
pop
loopne
xchg
sub
pop
or
(bad)
call
push
int3
jg
jg
retf
shl
aam
cmp
test
ins
inc
xchg
mov
sub
xor
sbb
xchg
mov
xor
xchg
and
xor
(bad)
(bad)
call
les
and
mov
push
adc
rcr
lea
sbb
lock
cmp
and
xchg
nop
(bad)
(bad)
(bad)
(bad)
(bad)
mov
inc
jl
mov
fs
adc
mov
sbb
add
mov
mov
into
sub
jge
cmps
and
sar
fcmovnu
sbb
pushf
(bad)
(bad)
(bad)
dec
repz
gs
int3
scas
lahf
dec
(bad)
ins
into
or
pushf
adc
(bad)
jmp
sbb
mov
push
dec
pop
jnp
jo
push
dec
loopne
push
push
jle
adc
loop
aaa
cld
push
mov
sbb
out
cmp
lea
enter
fsub
(bad)
(bad)
(bad)
(bad)
(bad)
fisttp
pop
inc
loopne
fidivr
cmps
loop
lahf
pop
xchg
mov
inc
ins
pushf
add
adc
sar
(bad)
(bad)
call
ds
rol
je
nop
mov
out
aad
outs
xchg
xor
sub
std
(bad)
jmp
mov
(bad)
jmp
push
int
ins
inc
xchg
push
loope
pop
push
mov
push
xchg
cli
(bad)
dec
push
mov
dec
mov
dec
rcr
cmps
pushf
sbb
fs
out
(bad)
(bad)
inc
jne
inc
enter
imul
adc
push
fisub
loopne
mov
inc
mov
inc
mov
bound
adc
inc
stc
pop
and
(bad)
(bad)
(bad)
call
pop
test
push
mov
jae
lods
nop
jmp
pop
jno
add
or
(bad)
(bad)
mov
dec
adc
imul
cwde
scas
cli
call
sub
sbb
jmp
int3
sbb
js
inc
or
cmp
repnz
ja
(bad)
stc
push
dec
lods
loopne
jmp
sqrtps
daa
std
cmp
arpl
idiv
(bad)
push
mov
cmp
sti
scas
pusha
mov
idiv
mov
mov
jle
cld
(bad)
call
cmp
mov
inc
gs
mov
pop
popa
pusha
push
sbb
sub
(bad)
(bad)
mov
cli
mov
push
cmp
or
rcr
scas
cmps
call
(bad)
(bad)
push
lds
arpl
or
scas
cwde
xchg
add
ss
rcl
aad
mov
stos
xor
lock
push
test
lea
push
xchg
std
jp
les
imul
or
push
inc
xchg
cmc
sti
call
mov
jmp
repz
das
push
cmp
jmp
adc
scas
sar
(bad)
push
nop
pop
fadd
or
inc
xchg
xchg
inc
in
sub
movs
xchg
or
jmp
rcl
and
(bad)
(bad)
(bad)
(bad)
jns
out
lock
sti
pop
std
sbb
add
sbb
adc
adc
out
(bad)
(bad)
call
xchg
enter
inc
jl
add
adc
pop
and
sar
int
(bad)
(bad)
(bad)
call
leave
add
std
cmp
mov
inc
mov
mov
cmp
(bad)
inc
jne
dec
nop
push
test
aam
jecxz
push
rcr
shl
mov
push
stos
test
mov
or
inc
mov
stos
out
lock
popa
idiv
(bad)
(bad)
inc
sbb
jp
jne
out
mov
push
add
mov
xor
push
dec
push
mov
iret
(bad)
dec
dec
arpl
xor
in
inc
xchg
and
dec
jmp
jmp
mov
pop
sti
jge
xchg
push
add
and
push
retf
ins
adc
lock
push
cmp
xor
(bad)
retf
push
out
sub
pop
fld
dec
(bad)
inc
test
ss
push
test
jmp
(bad)
jmp
(bad)
(bad)
(bad)
push
lods
popf
and
rcr
add
sbb
sbb
xor
stos
call
aad
jne
xchg
popf
mov
dec
int3
mov
fucomp
dec
push
jecxz
lahf
aam
(bad)
dec
dec
pop
adc
clc
push
sbb
jbe
bound
adc
jmp
in
adc
out
add
cmps
dec
repz
popf
(bad)
(bad)
(bad)
dec
dec
sar
fbstp
cmp
inc
push
int
jge
enter
adc
(bad)
call
sub
pop
push
out
dec
repnz
(bad)
pop
cwde
cld
sbb
pop
mov
sbb
pop
arpl
imul
cwde
xor
xor
nop
pop
gs
sub
outs
add
call
popf
cwde
mov
fimul
mov
inc
mov
pop
mov
mov
pop
ret
push
cmp
mov
cmp
pop
std
dec
sbb
push
inc
sti
jle
dec
mov
pop
pushf
push
inc
dec
cwde
xchg
(bad)
(bad)
(bad)
(bad)
mov
out
iret
int3
inc
retf
or
retf
push
ss
add
push
pusha
imul
pop
mov
(bad)
(bad)
(bad)
call
sbb
sbb
hlt
push
dec
and
mov
das
sti
retf
jl
and
jns
icebp
sbb
(bad)
(bad)
(bad)
inc
inc
jns
enter
adc
call
test
add
mov
aad
hlt
pop
cmp
xchg
inc
pop
push
jbe
arpl
std
inc
cmp
inc
cs
(bad)
(bad)
aad
mov
sar
fstp
mov
or
shl
dec
leave
and
out
xor
add
leave
jmp
push
mov
sbb
sub
ins
ficom
call
call
fldenv
jnp
adc
(bad)
stos
fdiv
push
pop
push
shl
pop
icebp
push
jge
dec
iret
fidivr
xchg
imul
pushfw
sbb
(bad)
mov
sub
jae
push
retf
cvtpi2ps
mov
and
add
pop
(bad)
jmp
and
push
pop
rcr
add
sbb
sbb
add
sar
(bad)
clc
fldenv
or
pop
mov
sub
imul
xchg
cmp
loop
inc
inc
neg
je
xchg
into
clc
cmps
loopne
xchg
dec
fwait
ins
cld
dec
(bad)
inc
mov
inc
repnz
lock
nop
sar
call
imul
ficomp
aaa
shr
out
xchg
repnz
adc
xchg
loop
push
shl
sub
imul
sbb
cmc
dec
jbe
mov
(bad)
xchg
mov
(bad)
mov
xchg
ret
xor
pop
inc
aas
adc
imul
fnstsw
pop
mov
(bad)
(bad)
jmp
pop
pop
push
pusha
fcmovnu
or
jae
shr
jmp
shl
pop
lock
(bad)
jmp
mov
fucompp
xor
mov
out
adc
mov
pop
pop
std
(bad)
jmp
dec
(bad)
xor
sbb
scas
fimul
(bad)
loopne
push
(bad)
(bad)
(bad)
(bad)
call
retf
or
jle
enter
fmulp
push
in
popa
xchg
push
xor
(bad)
mov
jg
sbb
adc
lds
mov
jmp
lods
shl
xchg
icebp
retf
push
dec
(bad)
push
ins
inc
(bad)
(bad)
(bad)
inc
mov
rcr
das
fdivr
nop
mov
into
lahf
lods
push
cmp
inc
jb
mov
in
iret
es
not
push
std
cmp
sub
jmp
add
sbb
jns
jg
mov
(bad)
(bad)
(bad)
fcmovbe
mov
(bad)
inc
sub
ds
aad
ins
xor
fwait
test
lock
(bad)
(bad)
jmp
sahf
xchg
cmp
das
sbb
and
div
ss
lods
add
xchg
mov
fisub
stos
(bad)
jmp
clc
mov
cwde
push
arpl
test
sahf
sti
add
(bad)
(bad)
(bad)
jmp
mov
push
mov
xrelease
push
idiv
pop
mov
lods
cmc
arpl
push
push
ins
xchg
add
outs
xor
inc
inc
call
cmp
arpl
out
stos
and
mov
icebp
inc
xchg
push
inc
inc
aas
mov
lahf
xor
mov
icebp
aam
int
call
sub
inc
mov
adc
pop
lahf
add
push
std
(bad)
(bad)
shl
sbb
pop
sbb
mov
or
jmp
cli
or
sbb
nop
(bad)
pop
cmp
jmp
xchg
push
xchg
mov
sub
xor
repz
mov
ja
clc
push
push
or
cli
inc
add
mov
add
push
mov
mov
add
(bad)
(bad)
dec
jmp
(bad)
clc
mov
ja
leave
clc
dec
loop
pop
hlt
loope
add
mov
clc
xor
or
icebp
std
ja
mov
adc
xchg
mov
mov
jle
(bad)
jg
call
sahf
aas
mov
cwde
mov
or
cmp
inc
cli
call
add
test
mov
mov
dec
mov
mov
leave
adc
jmp
loopne
or
aaa
pop
jbe
sti
cld
jg
test
sub
jp
inc
cmp
cld
(bad)
(bad)
(bad)
dec
xchg
adc
add
shr
das
sbb
sbb
lods
add
out
(bad)
(bad)
(bad)
(bad)
cmp
nop
inc
adc
push
cmps
retf
aad
movs
test
std
fld
(bad)
(bad)
(bad)
jmp
or
mov
int3
inc
add
adc
pop
test
mov
(bad)
(bad)
call
push
xor
popf
sbb
fwait
push
(bad)
inc
loop
retf
imul
dec
xchg
outs
test
jg
ret
lock
sbb
cld
xchg
or
retf
xor
test
or
ja
jno
(bad)
(bad)
(bad)
stc
fcomp
call
mov
je
(bad)
xor
call
(bad)
(bad)
(bad)
call
inc
into
jmp
lods
lahf
add
fwait
pop
xchg
sub
retf
jecxz
js
(bad)
push
(bad)
pop
jno
neg
mov
popf
shl
jne
xchg
add
(bad)
(bad)
(bad)
(bad)
fistp
es
sti
sahf
repnz
cli
jle
jmp
loopne
push
pop
cmp
xor
adc
adc
dec
adc
add
in
movs
cmp
mov
inc
shr
mov
inc
mov
scas
jmp
xchg
stos
cmp
jg
pop
push
popf
loopne
jecxz
dec
cmps
(bad)
(bad)
(bad)
inc
mov
add
xor
int3
dec
cmc
sub
outs
rcr
leave
cli
(bad)
jmp
sbb
fild
jo
clc
retf
jmp
fxch
fs
into
xlat
hlt
pop
hlt
mov
iret
test
movs
enter
(bad)
xchg
and
shl
(bad)
(bad)
out
push
ret
cmp
or
nop
fsubr
inc
in
inc
(bad)
(bad)
(bad)
dec
dec
mov
push
or
dec
sub
bound
add
cmp
rcl
retf
(bad)
jmp
push
test
xor
mov
push
sbb
jge
rcl
(bad)
(bad)
(bad)
call
js
je
loopne
stos
pop
jno
clc
ja
fdivr
mov
adc
fistp
(bad)
(bad)
(bad)
(bad)
jmp
les
lahf
pop
sbb
jg
jne
xor
and
jge
cwde
push
(bad)
(bad)
(bad)
jmp
cmc
push
nop
push
push
cmps
mov
stos
test
xchg
add
adc
out
xor
fdivr
(bad)
(bad)
call
mov
fld
fnclex
popf
ins
push
jp
arpl
jg
mov
(bad)
xor
pop
dec
(bad)
(bad)
call
scas
mov
retf
cmc
mov
lods
into
scas
les
mov
cli
ds
and
push
scas
xor
sbb
inc
call
jno
iret
cmc
jecxz
or
sbb
mov
sub
jno
aad
cmp
push
call
jl
imul
sub
(bad)
in
int
pushf
sbb
sub
leave
adc
adc
js
(bad)
call
mov
rcl
dec
lods
mov
sbb
jmp
movs
mov
retf
or
pop
int
je
repz
jb
mov
adc
cmp
aad
dec
push
mov
xlat
sti
ror
sbb
lea
(bad)
inc
sub
es
lods
iret
xchg
xchg
pop
inc
mov
push
or
mov
or
fimul
fwait
and
out
dec
lock
cmp
and
jmp
jns
(bad)
call
ret
add
mov
push
inc
push
out
cmp
pop
cmps
aam
out
mov
xchg
or
(bad)
xchg
aaa
(bad)
mov
mov
xor
pop
mov
mov
(bad)
jmp
test
(bad)
test
scas
sub
sbb
not
cmp
ror
(bad)
call
loopne
mov
cld
imul
push
sub
pop
dec
push
clc
(bad)
(bad)
jmp
stos
inc
fdivr
dec
test
inc
jmp
adc
mov
xchg
hlt
inc
test
test
in
(bad)
(bad)
jmp
push
call
mov
jns
loop
jge
xchg
stos
in
jns
(bad)
jg
(bad)
xor
lds
ins
mov
inc
sar
data16
pop
movs
(bad)
(bad)
dec
jnp
jmp
inc
jecxz
test
sti
aad
sbb
mov
inc
push
sbb
cmp
js
sub
sahf
rcr
stos
scas
add
shl
add
xor
or
sbb
test
(bad)
(bad)
(bad)
(bad)
call
adc
mov
xor
aaa
and
outs
inc
sub
dec
in
(bad)
(bad)
push
popf
mov
xchg
dec
ins
daa
adc
pop
repnz
cmp
and
(bad)
mov
cmp
test
das
out
movs
add
gs
xchg
or
inc
xchg
(bad)
(bad)
(bad)
jmp
fld
scas
add
adc
cmc
and
pushf
sub
or
inc
sbb
(bad)
(bad)
(bad)
call
pop
jmp
(bad)
cmp
jle
and
fstp
mov
or
dec
out
test
cli
(bad)
jmp
jecxz
mov
mov
sub
repnz
mov
pop
loop
in
cs
cdq
fs
outs
xchg
test
out
stc
adc
mov
mov
add
push
or
pushf
push
push
pop
clc
sar
inc
das
fdiv
xchg
mov
cmp
inc
dec
(bad)
(bad)
(bad)
dec
inc
aaa
clc
adc
dec
sub
pushf
xchg
(bad)
fcom
call
xchg
out
push
jno
(bad)
(bad)
(bad)
jmp
and
popf
popf
in
pop
sub
imul
or
adc
cmps
(bad)
(bad)
(bad)
jmp
push
(bad)
dec
jns
inc
loope
(bad)
jnp
mov
stos
mov
jg
data16
(bad)
test
(bad)
mov
push
rcr
sub
cs
out
mov
(bad)
push
fimul
mov
add
div
(bad)
jmp
out
cwde
sbb
icebp
arpl
adc
add
mov
aam
into
sbb
sub
(bad)
push
mov
sbb
sub
repnz
clc
stos
gs
loop
cwde
cli
or
xchg
mov
lods
pop
pop
je
adc
arpl
and
ss
jnp
adc
ja
push
lock
(bad)
jmp
mov
xor
sbb
gs
repnz
xchg
das
dec
ret
mov
call
add
int
int
jle
push
outs
clc
dec
sbb
or
aas
dec
ds
outs
adc
je
int
stos
dec
(bad)
(bad)
(bad)
(bad)
dec
cmp
sbb
loope
in
add
test
cmp
sbb
pop
in
dec
iret
test
cld
add
(bad)
(bad)
call
stc
jno
xor
adc
loopne
jle
pop
les
pop
in
mov
mov
inc
std
mov
enter
jl
cmp
out
mov
imul
mov
xor
rcr
or
idiv
push
mov
mov
pop
adc
sbb
mov
pop
lea
das
(bad)
(bad)
(bad)
(bad)
dec
inc
fs
or
dec
dec
outs
cs
test
stc
dec
dec
enter
cmc
push
das
clc
scas
call
xchg
test
retf
shr
(bad)
(bad)
call
shl
jbe
gs
xchg
or
push
add
pop
(bad)
idiv
(bad)
(bad)
(bad)
inc
push
fst
mov
in
pop
add
arpl
ss
sub
dec
cld
fld
xchg
sbb
popa
pushf
stos
cld
out
ret
inc
xor
les
xchg
inc
adc
jge
ins
sbb
dec
add
push
lods
xchg
mov
mov
xor
jle
inc
(bad)
(bad)
out
jae
(bad)
(bad)
in
cmp
stc
loopne
test
pop
mov
sar
sti
(bad)
(bad)
jg
lods
outs
ror
jno
ja
adc
jmp
(bad)
sub
sub
(bad)
(bad)
jg
(bad)
or
mov
xchg
jecxz
jl
push
pushf
pop
mov
pushf
inc
cmp
retf
(bad)
call
jg
stc
movs
pop
cmp
push
lods
cmp
pushf
cmp
pop
outs
out
call
dec
sar
fimul
mov
ror
and
aas
jmp
pop
jmp
mov
les
(bad)
dec
jne
xchg
into
ss
mul
pop
push
inc
rol
mov
test
aaa
cld
call
pop
push
ss
pop
loope
ds
ficomp
push
idiv
sub
or
cmc
adc
xchg
clc
inc
mov
cdq
add
lock
(bad)
(bad)
(bad)
jmp
jne
out
xchg
(bad)
pushf
inc
dec
movs
hlt
cs
lahf
fisubr
movs
and
push
out
xchg
iret
add
(bad)
aad
ret
sar
(bad)
call
(bad)
xchg
xlat
(bad)
adc
push
push
movs
and
scas
cmps
xchg
mov
(bad)
push
jae
cwde
adc
cmp
inc
dec
jno
repz
call
inc
mov
and
xor
push
in
js
pushf
push
nop
sbb
mov
xor
repz
cmp
(bad)
(bad)
call
int3
sbb
ss
push
adc
mov
or
sbb
cli
jns
cmps
dec
push
mov
lock
fistp
push
sbb
sahf
sub
or
pushf
hlt
out
adc
arpl
cmp
aam
xchg
rol
pop
inc
mov
jns
jbe
(bad)
mov
(bad)
icebp
lock
jge
leave
pop
inc
shl
xchg
pop
(bad)
(bad)
(bad)
call
int3
adc
outs
pop
mov
scas
sbb
jg
pop
adc
(bad)
jmp
lds
test
loope
jp
js
fmul
adc
push
xchg
push
(bad)
mov
jecxz
in
push
scas
jnp
inc
repz
loopne
push
mov
pop
mov
xchg
dec
sub
daa
jg
ins
loope
dec
lds
dec
test
add
sbb
(bad)
(bad)
jmp
xchg
movs
(bad)
ins
fisttp
jbe
add
dec
pop
pop
shr
cmp
das
mov
(bad)
out
jae
ja
icebp
jmp
clc
shl
sbb
loopne
(bad)
(bad)
jp
jmp
sbb
rcr
out
mov
add
ja
or
outs
test
aam
pop
in
xchg
out
push
inc
loope
jecxz
xchg
jo
mov
adc
test
(bad)
mov
xor
ror
(bad)
out
addr16
and
dec
or
sub
mov
mov
loopne
sbb
and
in
les
mov
push
ret
vmovsd
repnz
sbb
pop
rcl
push
stc
data16
or
jp
gs
imul
or
jmp
xchg
mov
inc
ret
cld
stos
jno
loopne
(bad)
(bad)
(bad)
call
xor
test
call
bound
jmp
stos
push
imul
retf
(bad)
(bad)
jmp
ins
lds
inc
push
jae
sub
push
js
xchg
out
add
out
push
dec
lods
mov
fidivr
fiadd
arpl
cmp
cs
(bad)
(bad)
(bad)
jmp
jecxz
sbb
ret
adc
xor
pop
push
push
xchg
inc
call
inc
int3
stos
(bad)
(bad)
(bad)
call
aaa
sti
push
mov
adc
shl
fdivr
ja
sub
lock
lock
(bad)
(bad)
jmp
lahf
jg
mov
push
lea
sbb
mov
sbb
fdivrp
(bad)
(bad)
dec
je
sbb
mov
mov
imul
pop
mov
jmp
inc
push
rcr
sub
inc
cmp
ret
sahf
sub
and
cmps
movs
call
sahf
add
ja
dec
adc
test
mov
pusha
sar
add
jae
inc
fsubp
dec
movs
(bad)
shl
fld
(bad)
jnp
inc
mov
(bad)
(bad)
inc
fisttp
clc
shr
sbb
addr16
jl
dec
cmp
in
call
(bad)
(bad)
fcmovnb
push
push
stos
jae
lock
clc
pop
in
jecxz
push
xchg
je
out
arpl
js
(bad)
(bad)
(bad)
jmp
sub
enter
mov
mov
mov
xchg
jg
pop
adc
mov
repnz
push
(bad)
(bad)
(bad)
call
cmps
test
xor
jns
jb
loopne
addr16
loope
mov
cwde
mov
cmps
fld
pop
repz
int3
pop
lock
jmp
loop
xchg
cmp
mov
popf
or
(bad)
(bad)
(bad)
(bad)
jle
dec
push
xor
cmp
sbb
inc
movs
sub
jmp
pop
and
fisubr
(bad)
(bad)
(bad)
inc
js
mov
out
icebp
mov
xor
xchg
and
mov
int3
movs
mov
adc
inc
cmp
test
into
das
call
cmps
or
cmp
push
mov
adc
xor
xchg
sub
sbb
inc
add
fdivr
jmp
mov
lock
or
(bad)
fbld
cs
scas
(bad)
(bad)
jmp
fimul
inc
jo
mov
mov
inc
mov
jl
out
xor
(bad)
(bad)
jmp
jns
and
adc
movs
loope
push
(bad)
repz
movnti
(bad)
(bad)
(bad)
dec
or
test
pop
sub
fisttp
xchg
xor
inc
push
movs
in
loope
dec
mov
cmp
scas
(bad)
(bad)
out
iret
push
and
rol
dec
mov
cwde
xchg
mov
pusha
sub
push
std
mov
push
cmc
sahf
shr
aam
cld
or
jle
jmp
(bad)
(bad)
(bad)
(bad)
fstp
xlat
jb
jbe
lds
arpl
mov
mov
leave
xchg
stc
fld
popf
adc
(bad)
dec
push
out
or
in
jne
mov
imul
imul
inc
sahf
stos
jne
sub
std
(bad)
(bad)
call
loop
xor
js
sub
es
adc
xchg
jecxz
lea
and
pop
dec
rol
callw
in
xchg
add
mov
(bad)
(bad)
(bad)
(bad)
mov
sub
shl
xor
mov
jmp
mov
inc
(bad)
(bad)
(bad)
call
es
jne
sti
jle
adc
mov
jl
xchg
inc
cli
lea
jg
fistp
xlat
jmp
cmp
cwde
jl
rcr
loopne
inc
sbb
jmp
aam
and
(bad)
(bad)
jg
movs
pop
imul
je
mov
mov
jb
xor
lock
and
gs
push
scas
(bad)
(bad)
(bad)
call
pop
std
mov
repz
cmp
jge
cld
aad
int
test
pushf
xchg
xchg
loope
jae
(bad)
(bad)
call
lods
scas
imul
or
mov
xor
inc
test
icebp
shl
jmp
retf
(bad)
(bad)
(bad)
jmp
aam
imul
xchg
out
mov
daa
test
xor
(bad)
inc
xchg
push
sbb
cli
out
div
jo
xlat
mov
mov
(bad)
(bad)
xor
(bad)
call
call
dec
sub
jecxz
and
dec
sbb
mov
fisub
mov
xchg
scas
ds
sbb
xchg
or
mov
mov
jmp
(bad)
inc
mov
pop
enter
test
inc
inc
lods
push
movs
fdiv
cmp
std
aaa
pop
push
es
jnp
les
in
sbb
clc
(bad)
push
mov
mov
mov
shl
cld
cli
popa
popaw
pop
pop
inc
lds
(bad)
jmp
cmp
mov
cmp
push
(bad)
(bad)
cwde
outs
xchg
sub
pop
mov
(bad)
(bad)
push
cmp
fst
out
scas
xchg
in
fstp
aas
push
pop
inc
loopne
cmps
test
jmp
out
xchg
fimul
cmp
inc
loopne
mov
(bad)
fmul
mov
mov
imul
in
inc
dec
mov
(bad)
sbb
jno
dec
inc
(bad)
mov
into
pop
dec
mov
dec
jmp
inc
inc
das
enter
add
sub
js
adc
xchg
fsubrp
cli
pop
pop
retf
jge
aas
scas
mov
dec
(bad)
mov
(bad)
jg
or
popf
(bad)
push
(bad)
(bad)
(bad)
push
scas
or
dec
xlat
xacquire
cmp
in
rcr
(bad)
arpl
(bad)
jbe
std
jnp
pop
cmc
(bad)
dec
imul
std
mov
add
das
or
(bad)
(bad)
jmp
rol
or
jns
aad
mov
mov
std
(bad)
dec
movs
adc
cmp
out
mov
bound
xchg
push
mov
jmp
sbb
or
fstp
jo
fiadd
mov
popf
cdq
std
dec
(bad)
(bad)
call
cmp
arpl
out
das
sub
cmp
ins
xchg
push
fbld
adc
mov
push
test
sub
mov
fld
js
jo
adc
repnz
(bad)
(bad)
dec
mov
ins
mov
leave
jge
mov
jp
rcl
mov
add
loopne
(bad)
(bad)
dec
add
rcl
cmc
push
stos
sbb
mov
pop
add
jmp
fs
(bad)
(bad)
(bad)
jmp
in
push
inc
fdiv
xor
stos
into
mov
sub
sub
mov
add
and
xor
mov
inc
and
cwde
xor
pop
pusha
mov
push
ds
xor
(bad)
(bad)
call
mov
xchg
mov
sub
lods
inc
push
loope
push
das
scas
stos
int3
or
(bad)
(bad)
call
sbb
mov
aad
pop
inc
stos
xchg
fs
mov
mov
fnstcw
cmp
adc
push
jl
sub
sub
outs
inc
in
sub
(bad)
jmp
shl
popf
ret
pushf
call
imul
(bad)
sti
push
gs
stc
movs
cmp
aad
fnstsw
jbe
add
dec
lea
lea
(bad)
(bad)
(bad)
jp
stos
fmul
enter
push
rol
jle
dec
imul
mov
(bad)
mov
out
mov
neg
fmul
and
fcomip
dec
iret
pop
xchg
push
pop
jno
in
cli
js
(bad)
(bad)
(bad)
out
stos
mov
dec
push
or
jmp
cdq
push
inc
loope
ins
cld
xchg
loop
mov
mov
adc
loopne
sub
jmp
jp
xchg
stc
cmp
test
out
outs
dec
aad
push
push
(bad)
xchg
idiv
(bad)
jmp
(bad)
jnp
nop
hlt
cli
push
scas
sar
sub
call
xchg
ins
and
jnp
mov
out
in
dec
retf
sbb
sahf
(bad)
mov
mov
jo
pop
jnp
push
mov
fcomip
jecxz
mov
pop
movs
mov
xchg
pop
add
dec
popf
pop
lock
ins
xor
(bad)
(bad)
mov
pop
push
imul
pop
loop
pop
dec
pop
adc
mov
call
ins
inc
xor
enter
(bad)
das
add
mov
rcr
(bad)
call
add
mov
push
push
ins
mov
jmp
out
jg
(bad)
call
bound
mov
pushf
mov
jmp
jb
dec
cmps
xor
arpl
std
ret
add
gs
lea
dec
pop
test
js
push
ret
outs
sub
stos
std
and
(bad)
(bad)
(bad)
dec
inc
pop
and
hlt
mul
vmwrite
push
mov
sbb
pop
lock
(bad)
jmp
adc
fimul
ror
arpl
movs
pop
daa
lock
enter
sub
test
in
push
(bad)
pop
lahf
jle
and
push
mov
sahf
sar
jmp
mov
push
pusha
push
ins
pop
push
or
inc
dec
ret
sub
xchg
and
(bad)
(bad)
jg
xchg
push
push
dec
pop
add
outs
jnp
pop
out
jecxz
mov
sbb
rol
push
inc
jg
(bad)
(bad)
inc
out
and
rcl
jge
push
inc
jb
cmp
repz
inc
(bad)
ror
jnp
clc
(bad)
(bad)
call
int3
aas
test
mov
stos
sub
and
ficomp
clc
jge
add
xor
jmp
jl
addr16
movs
popa
xor
mov
mov
push
rcr
repnz
jp
cld
int3
push
out
jmp
test
(bad)
jg
xchg
lahf
dec
leave
jecxz
and
jmp
inc
gs
lods
div
cwde
adc
(bad)
(bad)
(bad)
(bad)
jmp
js
das
dec
sbb
push
xchg
add
push
ja
pop
xor
push
fxch
jns
(bad)
(bad)
jmp
cmp
sbb
dec
mov
adc
je
mov
mov
inc
xor
pop
shl
sub
(bad)
(bad)
(bad)
dec
scas
loop
out
into
adc
pop
pop
xor
arpl
mov
rcl
mov
mov
mov
jmp
and
(bad)
(bad)
mov
xchg
inc
je
loop
bound
test
xchg
add
(bad)
fcomip
push
(bad)
div
jo
loop
fsubr
in
fdivr
retf
int3
xchg
xor
movs
pop
mov
push
mov
cmp
cmp
stc
inc
mov
ds
cmc
push
(bad)
(bad)
(bad)
jmp
fcmovne
test
outs
mov
mov
out
sbb
gs
enter
mov
(bad)
inc
loop
data16
jmp
dec
dec
and
in
mov
or
call
push
mov
sub
cli
(bad)
mov
pop
mov
ins
ret
inc
dec
(bad)
(bad)
jmp
daa
or
psrlq
popa
sbb
jp
mov
mov
les
nop
loop
(bad)
(bad)
call
daa
xchg
fs
sub
mov
xchg
jns
rol
dec
mov
arpl
sub
(bad)
(bad)
jmp
dec
(bad)
cli
fbstp
push
sbb
(bad)
mov
std
jnp
or
(bad)
(bad)
mov
out
out
pop
gs
rcl
addr16
test
mov
scas
mov
ins
sub
add
dec
ficomp
cmp
fiadd
push
jb
in
in
mov
push
test
sub
ins
sub
pusha
add
sbb
add
stos
jmp
inc
shl
push
xor
jg
push
daa
add
fldenv
dec
add
out
mov
fwait
ds
xor
add
int3
repz
(bad)
mov
cdq
push
icebp
sbb
lock
push
das
xor
loope
(bad)
call
sbb
sub
adc
xchg
adc
mov
push
(bad)
(bad)
(bad)
mov
out
cmp
ins
fwait
xlat
mov
stos
cs
bound
lea
and
cmp
mov
(bad)
(bad)
dec
mov
test
leave
xor
adc
or
mov
rcl
popa
ins
fadd
popf
push
push
sahf
(bad)
cmc
xchg
mov
not
pop
jg
clc
mov
movs
inc
push
mov
mov
jmp
push
(bad)
(bad)
dec
ins
aam
cmps
jg
stc
ret
cs
aaa
cdq
mov
xchg
in
mov
ret
fucomip
sub
xchg
xor
stos
xlat
jne
out
dec
pop
fidivr
push
int
stc
clc
stos
xor
(bad)
(bad)
(bad)
inc
cmp
loopne
out
pop
in
xor
xor
cmp
pop
pop
cdq
jmp
inc
dec
das
adc
pusha
in
xor
repnz
inc
imul
das
inc
mov
ss
add
in
inc
sbb
bound
aam
lds
pop
sub
(bad)
(bad)
jmp
popf
rcl
add
mov
sahf
jbe
sbb
xchg
mov
neg
inc
inc
(bad)
(bad)
inc
mov
push
mov
xchg
repz
gs
jae
idiv
inc
or
cli
xlat
xchg
in
mov
in
cmp
xor
(bad)
(bad)
jmp
inc
pop
retf
fistp
dec
mov
cdq
movs
sub
lahf
(bad)
retf
sbb
leave
enter
jmp
adc
cld
push
fwait
cmpps
pop
mov
call
add
add
lds
call
pusha
test
push
popf
and
pushf
es
cs
mov
imul
aam
pop
popa
push
mov
rcl
mov
push
adc
aad
fs
(bad)
(bad)
dec
aam
adc
inc
push
daa
mov
jl
ds
sub
jg
inc
addr16
hlt
jbe
(bad)
mov
(bad)
(bad)
(bad)
(bad)
ficomp
fistp
sbb
and
xchg
lea
(bad)
cli
je
je
pop
mov
sbb
mov
test
dec
mov
xchg
shl
sub
shr
js
dec
jnp
adc
cs
(bad)
(bad)
jmp
dec
jg
aad
mov
ficomp
in
mov
jg
jge
(bad)
dec
xchg
xchg
pop
dec
jle
(bad)
cmp
imul
inc
push
mov
mov
pop
push
ja
xor
dec
fiadd
popf
inc
jle
pop
ret
call
jnp
cmp
leave
dec
into
icebp
inc
call
nop
fwait
push
mov
push
adc
xchg
je
fcom
pusha
jae
mov
(bad)
(bad)
mov
add
rcl
repnz
lahf
xchg
out
jo
loope
jg
jbe
push
lds
fs
xor
dec
inc
xchg
or
(bad)
(bad)
dec
iret
mov
dec
push
cdq
(bad)
sbb
adc
adc
mov
push
xor
and
jg
(bad)
(bad)
(bad)
jmp
or
and
adc
adc
inc
jmp
int3
jae
sbb
scas
mov
out
sbb
leave
es
sbb
lock
push
xlat
add
sar
(bad)
mov
mov
adc
ins
addr16
pop
mov
or
jmp
sbb
adc
push
bound
cmc
mov
mov
ss
loope
(bad)
(bad)
jmp
push
test
pusha
loop
mov
daa
or
push
(bad)
jecxz
div
daa
mov
or
das
sar
jmp
outs
and
cs
rol
sub
add
jmp
jb
dec
push
cdq
pop
mov
adc
mov
(bad)
fisttp
test
les
pop
movs
rol
std
xor
jmp
pop
sbb
mov
adc
sbb
loope
mov
jnp
push
loope
out
add
(bad)
(bad)
(bad)
ds
pop
push
pushf
adc
popa
mov
daa
(bad)
ficom
call
push
aam
(bad)
(bad)
push
je
and
push
and
aam
mov
fwait
icebp
cld
xor
call
fisubr
push
call
cmp
sub
fs
mov
push
cmp
mov
push
or
mov
mov
or
into
std
mov
jp
(bad)
(bad)
jmp
scas
fmul
push
xchg
out
cli
dec
jne
add
jb
daa
into
mov
rcr
pop
daa
add
pop
(bad)
(bad)
(bad)
(bad)
call
cmp
and
leave
mov
outs
jo
ja
mov
xchg
adc
(bad)
(bad)
(bad)
cmp
(bad)
sti
pop
sbb
nop
stos
adc
inc
pop
cmc
push
lea
adc
(bad)
(bad)
dec
std
int3
sbb
sbb
pushf
das
ret
and
inc
fldcw
arpl
ret
pop
jp
fadd
(bad)
(bad)
(bad)
dec
mov
ficom
inc
dec
adc
sbb
aad
pop
ret
add
inc
sbb
repnz
outs
(bad)
(bad)
(bad)
(bad)
mov
add
jge
movs
dec
inc
push
iret
cmc
adc
int3
jl
loope
mov
inc
loop
ins
aad
(bad)
(bad)
jmp
adc
aam
dec
push
add
and
or
mov
mov
push
leave
shl
hlt
jl
lahf
movs
or
pop
jecxz
mov
out
jecxz
cmp
dec
div
(bad)
(bad)
(bad)
(bad)
jp
or
add
pop
bound
in
dec
stos
shl
daa
sahf
call
jmp
imul
jb
inc
push
test
je
cli
imul
shl
mov
sbb
cwde
(bad)
(bad)
(bad)
(bad)
jmp
xchg
daa
sbb
enter
add
push
shl
pop
fisubr
pop
xlat
adc
cdq
push
(bad)
(bad)
(bad)
mov
(bad)
retf
dec
cmps
arpl
call
mov
jecxz
sub
daa
fiadd
jmp
add
jle
mov
aad
mov
xchg
push
and
mov
movntps
ins
fisub
jmp
(bad)
(bad)
call
cmp
pusha
or
dec
mov
inc
sbb
movs
adc
(bad)
(bad)
jmp
dec
mov
lea
sbb
test
mov
mov
dec
dec
gs
dec
(bad)
push
pop
mov
jle
pop
arpl
jno
cmp
data16
mov
aaa
mov
pusha
mov
jl
fsub
adc
not
pop
mov
mov
add
aaa
retf
ins
aas
dec
hlt
jno
(bad)
out
xchg
jle
mov
cld
mov
pop
mov
scas
lods
fs
fild
(bad)
(bad)
(bad)
dec
mov
(bad)
mov
sbb
add
sub
ror
xchg
shr
(bad)
(bad)
dec
jbe
adc
sbb
sti
mov
in
cdq
lea
mov
mov
jecxz
or
scas
sbb
jmp
cmc
dec
cmps
shl
pop
(bad)
mov
jmp
inc
jo
ja
aaa
sub
xchg
retf
add
repz
and
jmp
scas
jmp
mov
push
fwait
xor
in
(bad)
and
sti
cmps
les
mov
aad
sahf
in
mov
mov
(bad)
mov
(bad)
inc
push
popf
cdq
mov
bound
pusha
ins
sbb
(bad)
(bad)
(bad)
(bad)
(bad)
and
mov
pop
pop
ds
fstp
ss
shl
mov
outs
mov
mov
push
adc
stc
push
inc
sar
(bad)
(bad)
jmp
loope
hlt
and
sbb
popa
call
daa
ret
jg
or
jmp
(bad)
push
and
xlat
sub
enter
cwde
jmp
cmp
pop
ins
loope
(bad)
jmp
pop
adc
pushf
inc
push
mov
call
loop
sbb
aaa
inc
mov
(bad)
mov
dec
ret
pop
ja
pop
or
xchg
xchg
pop
outs
mov
dec
outs
inc
add
(bad)
(bad)
inc
iret
jne
sbb
inc
mov
rol
dec
fsub
sub
push
sbb
(bad)
(bad)
(bad)
jmp
push
out
shl
push
daa
pushf
xchg
sbb
fwait
clc
repz
daa
pop
cmp
pop
call
jge
cs
bound
mov
sub
sub
push
mov
inc
sahf
les
cmp
jmp
pop
aad
pop
shl
cmp
mov
ss
cmps
cmps
cld
xchg
(bad)
(bad)
(bad)
inc
cs
bound
pop
out
sbb
pop
jno
out
(bad)
push
fcmove
ficomp
pop
mov
(bad)
(bad)
inc
push
mov
jp
or
or
f2xm1
std
(bad)
cmp
call
jmp
cdq
retf
xchg
push
sub
ds
(bad)
inc
cld
cmp
mov
stc
mov
lods
pop
and
clc
jae
call
dec
mov
call
in
mov
sar
xor
(bad)
jg
or
mov
stos
data16
fild
call
push
movs
test
leave
sbb
and
xor
(bad)
bswap
dec
xor
push
mov
loop
cdq
stos
xor
sbb
retf
(bad)
(bad)
(bad)
(bad)
ficomp
sbb
std
pop
inc
dec
fstp
push
mov
aaa
mov
sub
jge
dec
push
mov
(bad)
(bad)
jl
xlat
inc
pop
inc
or
int3
jae
je
addr16
adc
push
inc
cwde
repz
aam
(bad)
into
inc
dec
adc
lods
mov
scas
and
(bad)
jns
fcom
(bad)
(bad)
(bad)
clc
addr16
movs
adc
and
sub
xor
inc
fstp
out
add
(bad)
(bad)
jg
push
push
dec
jecxz
push
xchg
push
sub
(bad)
sbb
scas
nop
ins
ds
(bad)
push
repz
cmps
and
lods
adc
cmp
shr
xchg
and
mov
(bad)
jmp
data16
jg
add
popa
add
fs
dec
out
jmp
pop
push
(bad)
cmc
gs
(bad)
(bad)
(bad)
(bad)
cld
(bad)
shr
push
fcom
adc
cli
push
lods
fisubr
jmp
ja
(bad)
(bad)
(bad)
jmp
jg
jno
mov
sti
mov
rcl
jg
dec
outs
inc
retf
fist
js
fwait
(bad)
shl
jmp
(bad)
jmp
aad
es
es
lahf
push
movs
imul
xchg
jb
and
(bad)
inc
add
mov
shr
ins
xor
or
cdq
bound
gs
(bad)
(bad)
call
jnp
sar
adc
stos
pop
pop
lds
ja
xor
or
(bad)
(bad)
(bad)
jmp
adc
sbb
jmp
cwde
push
std
sbb
and
mov
sub
jmp
pop
mov
into
sbb
retf
mov
ds
(bad)
jmp
or
cmp
dec
outs
jp
xor
(bad)
(bad)
jg
dec
push
inc
movs
outs
mov
sbb
xlat
xchg
add
rcr
icebp
jmp
sar
mov
pop
ds
ss
push
dec
lahf
mov
add
mov
xchg
xor
pop
addr16
adc
scas
repnz
hlt
jg
cmp
push
adc
adc
call
std
(bad)
inc
out
adc
xchg
enter
out
ds
pop
jbe
out
cld
(bad)
call
mov
gs
ja
cld
lods
sbb
mov
inc
das
cmp
xchg
(bad)
(bad)
call
or
ins
mov
push
or
aad
or
push
pop
dec
aad
mov
test
add
cmp
fld
add
xchg
ret
push
or
mov
sbb
sub
sbb
fs
add
int
push
mov
xor
in
jecxz
retf
push
jns
jl
(bad)
(bad)
jmp
out
mov
add
and
mov
pop
daa
nop
mov
mov
jle
sbb
pop
icebp
les
movs
(bad)
(bad)
(bad)
mov
(bad)
cld
scas
outs
fild
xor
mov
dec
clc
(bad)
jecxz
pop
adc
cmp
(bad)
call
mov
out
inc
js
fs
jecxz
mul
aaa
gs
sbb
(bad)
(bad)
(bad)
jmp
vcvtsd2si
push
adc
inc
repnz
jmp
mov
sbb
mov
mov
adc
mov
pop
adc
aad
mov
popa
fwait
add
xor
(bad)
(bad)
push
mov
push
push
lods
or
popa
dec
sbb
pushf
adc
test
(bad)
(bad)
(bad)
jg
dec
dec
outs
mov
mov
or
nop
adc
fisttp
inc
inc
les
sbb
iret
mov
jnp
loope
fs
es
xor
in
idiv
sub
pop
rcl
(bad)
stos
imul
(bad)
push
out
xor
or
add
xchg
or
repnz
rcl
jle
in
(bad)
jmp
add
mov
jno
das
dec
push
push
pop
mov
cli
cs
xor
repz
sti
mov
mov
mov
clc
shl
fisub
jg
icebp
iret
mov
fisubr
shl
stos
lds
or
into
je
jmp
ror
fld
out
jb
fsub
out
mov
push
rcr
mov
(bad)
(bad)
inc
add
out
pushf
mov
xchg
adc
rol
jg
hlt
(bad)
(bad)
(bad)
(bad)
sti
cmp
sub
pop
push
cwde
xchg
and
fwait
test
cmp
sbb
aaa
popf
pop
mov
in
mov
and
gs
aas
test
pop
pop
call
inc
cmovp
jns
int3
inc
push
inc
jecxz
push
mov
lea
call
add
mov
add
out
imul
and
lods
push
sahf
cld
cmp
cwde
and
cmp
(bad)
test
push
aaa
add
cs
cdq
or
(bad)
(bad)
call
add
adc
or
or
retf
or
and
in
and
(bad)
(bad)
call
js
pop
aam
mov
push
xchg
mov
mov
retf
push
xor
sub
add
popa
sbb
(bad)
dec
iret
fwait
into
push
(bad)
int
sar
sbb
popa
or
cld
(bad)
jmp
movs
sub
adc
xchg
jmp
adc
test
out
cli
(bad)
(bad)
in
jnp
fld
enter
fstp
mov
push
jmp
mov
(bad)
(bad)
(bad)
(bad)
fcom
(bad)
adc
push
dec
sbb
or
pop
jge
aad
(bad)
push
das
mov
fisubr
push
cwde
dec
xchg
(bad)
(bad)
in
jmp
sbb
sysenter
out
out
repnz
push
ret
and
inc
test
data16
(bad)
(bad)
push
aam
mov
icebp
push
clc
cwde
jmp
arpl
hlt
jmp
int
fidiv
jns
jno
sbb
dec
push
pushf
pop
rcl
icebp
aad
outs
dec
test
sbb
mov
xor
ss
cmp
movd
das
cli
call
test
mov
mul
sub
adc
mov
(bad)
(bad)
(bad)
mov
ret
xchg
sbb
addr16
(bad)
push
sbb
jno
sub
sbb
clc
(bad)
dec
and
int
movs
dec
in
fisub
and
mov
(bad)
(bad)
push
jmp
int3
pop
mov
mov
inc
fs
test
mov
cld
(bad)
jmp
retf
mov
add
cmp
xor
fdivr
jg
jmp
mov
cdq
adc
aaa
bound
jg
dec
xchg
loop
sbb
daa
sub
(bad)
(bad)
(bad)
jns
fbstp
daa
push
xor
add
jo
xor
les
dec
xchg
(bad)
movs
das
inc
fsubr
(bad)
(bad)
(bad)
push
mov
jp
ret
mov
adc
fnstenv
imul
jmp
sti
ret
and
jmp
jmp
xchg
pushf
lods
mov
jmp
(bad)
call
mov
xchg
jb
cmc
dec
dec
mov
stos
and
(bad)
test
pusha
retf
sub
(bad)
jg
rcr
dec
aad
xchg
jbe
xchg
(bad)
aam
adc
es
cdq
addr16
jmp
inc
xchg
pusha
gs
fnstsw
cmp
div
ficomp
xor
retf
pop
(bad)
(bad)
(bad)
jmp
ret
mov
mov
ins
inc
loopne
mov
aaa
rcr
sbb
arpl
retf
(bad)
(bad)
(bad)
(bad)
(bad)
not
cs
scas
or
pop
dec
jg
jl
shl
pop
out
push
inc
aam
(bad)
(bad)
(bad)
(bad)
call
push
adc
dec
jmp
mov
data16
mov
std
(bad)
jmp
push
xor
add
mov
sti
inc
mov
xchg
sbb
xor
scas
and
imul
jmp
push
jnp
xchg
cmc
pop
cmc
(bad)
jmp
aaa
adc
xchg
sub
in
and
fimul
pop
retf
in
mov
fdivp
jmp
add
call
adc
retf
sbb
or
and
popa
and
(bad)
cmp
test
dec
mov
push
xchg
inc
hlt
mov
adc
(bad)
(bad)
call
pop
lahf
mov
(bad)
fnstsw
pop
gs
or
xchg
mov
imul
push
aad
pop
imul
inc
ins
sbb
xor
test
(bad)
pusha
call
mov
mov
icebp
(bad)
inc
inc
ds
mov
adc
sbb
mov
outs
inc
or
dec
nop
mov
test
cmp
or
mov
mov
in
sbb
or
(bad)
(bad)
(bad)
jmp
inc
push
add
cmps
in
push
inc
sahf
add
push
daa
ins
push
mov
mov
mov
inc
mov
(bad)
pop
xor
aam
mov
aas
xor
sar
(bad)
(bad)
(bad)
fmul
adc
pushf
(bad)
hlt
std
push
(bad)
(bad)
push
mov
ja
(bad)
scas
clc
dec
pop
(bad)
mov
daa
cmp
or
(bad)
pop
in
fstp
in
rcl
ds
sub
imul
pop
jge
retf
add
inc
inc
xor
sbb
pop
gs
fwait
in
inc
mov
sub
xor
(bad)
(bad)
(bad)
(bad)
mov
or
sbb
mov
mov
fistp
cld
das
lgs
(bad)
fild
adc
push
adc
mov
add
cmps
das
stos
mov
dec
mov
test
mov
(bad)
(bad)
(bad)
jmp
add
std
jmp
imul
dec
adc
push
popa
inc
add
daa
fwait
dec
ds
sbb
ds
mov
or
mov
and
dec
mov
dec
push
pop
cmovge
(bad)
bound
push
push
outs
push
enter
pop
stc
dec
adc
(bad)
push
sub
add
ret
inc
xchg
sbb
sbb
movs
jg
hlt
mov
ins
jmp
idiv
lahf
retf
jmp
sti
pop
add
call
xor
dec
dec
mov
call
inc
or
iret
push
cmp
inc
or
adc
dec
push
sbb
popf
(bad)
(bad)
(bad)
inc
mov
push
je
mov
sahf
adc
pop
mov
in
repz
iret
sbb
jle
test
cmc
(bad)
(bad)
jmp
mov
and
sti
movs
mov
lods
fld
jmp
sbb
mov
inc
inc
lods
test
add
pop
and
cmp
jno
into
mov
push
pop
test
rcr
cmp
or
or
out
pushf
cs
cmp
(bad)
(bad)
(bad)
mov
ret
jns
adc
pop
mov
cdq
mov
dec
pop
or
imul
(bad)
jmp
sub
rol
and
adc
popf
adc
int3
dec
pusha
test
(bad)
(bad)
jmp
mov
sbb
stos
retf
aam
sub
fld
(bad)
test
push
test
ret
fiadd
stc
xor
(bad)
(bad)
inc
mov
jne
cwde
jmp
push
retf
mov
push
data16
test
in
sbb
aad
add
out
dec
ret
(bad)
(bad)
call
cli
adc
stc
or
add
xchg
push
mov
mov
std
push
pop
pop
jbe
movs
push
jns
and
and
sub
(bad)
xchg
jp
mov
shl
jmp
dec
inc
adc
icebp
cmp
ret
test
mov
std
repnz
(bad)
(bad)
jmp
inc
adc
movs
loop
scas
mov
adc
cdq
pushf
int3
dec
xlat
push
jge
and
sar
(bad)
inc
xchg
adc
adc
fsub
mov
fidivr
mov
or
fst
ret
(bad)
jg
sbb
push
and
push
imul
lock
pop
pop
mov
or
loop
sub
dec
enter
mov
outs
sbb
mov
ja
sbb
clc
dec
jbe
(bad)
fisub
jo
(bad)
(bad)
(bad)
call
in
leave
cmp
movs
out
mov
sub
pop
dec
lods
mov
push
xchg
and
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
adc
lock
xor
imul
add
(bad)
(bad)
call
test
mov
or
push
or
out
push
test
inc
int3
jmp
xor
sbb
add
push
rol
inc
mov
push
add
shl
cli
sbb
fdivrp
mov
xor
out
add
fwait
retf
push
sar
inc
pop
enter
(bad)
call
je
pop
cmp
cmp
cmps
ds
xchg
pop
fstp
mov
jae
xlat
pop
into
(bad)
jmp
stos
fstp
sbb
cmps
xchg
and
leave
outs
cmps
or
pop
adc
icebp
(bad)
(bad)
call
add
clc
and
xchg
xchg
les
mov
loop
cld
call
gs
sahf
(bad)
mov
sbb
loop
pop
arpl
(bad)
(bad)
mov
arpl
out
cmp
mov
add
xchg
add
push
cwde
mov
jbe
cld
loope
jmp
add
push
repz
jle
dec
(bad)
(bad)
(bad)
inc
rol
inc
repnz
and
lods
fdiv
mov
fist
(bad)
(bad)
call
imul
popa
aad
test
pusha
jo
dec
adc
ds
jg
(bad)
jmp
xor
mov
push
or
into
cmps
leave
inc
xlat
push
mov
xchg
mov
(bad)
(bad)
call
cmp
push
jecxz
aam
lea
sub
xor
pusha
dec
fdiv
(bad)
dec
pop
sbb
(bad)
call
test
clc
das
mov
add
jns
xchg
pop
xchg
fcmovbe
jmp
lock
(bad)
(bad)
(bad)
dec
xor
mov
or
and
mov
int
test
jns
(bad)
(bad)
(bad)
(bad)
fisttp
nop
mov
dec
addr16
adc
out
sahf
rcr
out
push
mov
test
(bad)
(bad)
(bad)
call
(bad)
xor
(bad)
aad
test
scas
imul
and
dec
jp
sbb
adc
push
(bad)
dec
test
shr
adc
out
sti
(bad)
adc
mov
cs
(bad)
(bad)
(bad)
push
xor
mov
out
sub
jb
bound
xlat
cmovg
lods
mov
(bad)
(bad)
(bad)
call
outs
std
jb
(bad)
mov
retf
repz
cli
je
xchg
mov
pop
mov
sub
(bad)
(bad)
push
fnsave
xchg
adc
cmp
fisubr
les
jmp
cs
and
xchg
xchg
adc
dec
jmp
ins
mov
lea
sbb
xor
out
test
out
fcomip
push
loopne
mov
pop
mov
jmp
add
test
call
loopne
add
sti
sbb
ins
sub
(bad)
(bad)
(bad)
(bad)
jl
xor
jb
pusha
pop
dec
or
mov
(bad)
lods
dec
pop
hlt
ret
movs
fld
(bad)
(bad)
push
pusha
popa
test
shl
data16
xor
xor
pop
pop
daa
test
(bad)
dec
fmul
add
mov
and
clc
cmps
mov
ins
push
icebp
outs
dec
adc
xchg
(bad)
(bad)
(bad)
(bad)
inc
dec
lahf
xchg
xchg
fcomp
xchg
cmp
mov
mov
adc
pop
cmp
add
xchg
xor
mov
test
cmp
xor
sti
or
cmps
and
dec
lds
fcmove
enter
mov
rol
(bad)
(bad)
fisttp
cdq
jmp
xchg
push
fidivr
xor
rcr
sub
fcomip
dec
dec
xor
sub
cld
(bad)
out
xor
adc
inc
add
(bad)
(bad)
(bad)
cmp
inc
pop
dec
cmp
xor
xor
ja
mov
xor
imul
(bad)
(bad)
jmp
aad
inc
ins
arpl
cmps
xor
inc
call
mov
cmp
xor
cmp
ins
or
fs
mov
sub
cdq
push
mov
adc
jmp
(bad)
(bad)
jmp
mov
das
fdiv
jmp
dec
cpuid
movs
cwde
jg
dec
cmps
imul
sbb
xchg
(bad)
jmp
ror
in
or
mov
cld
jle
(bad)
(bad)
(bad)
jg
sbb
push
out
jmp
mov
mov
out
pop
in
or
jmp
fbld
vcvtudq2pd
(bad)
(bad)
(bad)
jmp
out
fsub
(bad)
sbb
mov
xchg
push
jp
push
dec
xor
cmc
sbb
clc
push
push
xor
pusha
add
sbb
add
jmp
mov
stos
adc
fild
stos
add
pop
(bad)
jns
sub
fiadd
fild
ror
add
pop
imul
inc
and
or
scas
ins
add
js
push
jg
add
and
rcr
mov
fwait
xchg
js
add
add
in
pop
dec
or
adc
inc
pop
mov
(bad)
sahf
dec
or
and
or
sub
dec
fs
movq
loop
ss
add
nop
dec
mov
scas
dec
fsub
test
popf
mov
stc
(bad)
jno
mov
jnp
xchg
movs
push
daa
add
cmps
mov
and
cmps
push
and
cs
push
out
(bad)
mov
scas
push
and
stos
push
and
push
outs
out
outs
out
push
and
imul
push
inc
pop
pop
add
pop
dec
lods
push
mov
pop
sbb
add
call
pop
inc
mov
pusha
sbb
mov
(bad)
(bad)
mov
adc
fs
mov
ins
or
retf
imul
int
push
leave
imul
imul
iret
fisub
push
add
fnstcw
jae
mov
stos
pop
stos
mov
mov
jb
ss
add
jo
ret
inc
add
bound
rcr
shr
ins
add
push
fidivr
iret
outs
or
push
fidiv
adc
jns
out
jge
fisttp
sub
xor
jmp
push
add
fcmovnbe
(bad)
clc
mov
sbb
push
mov
adc
push
push
add
jne
mov
aam
push
ret
add
mov
lods
pop
add
push
pop
dec
add
out
mov
cmp
data16
inc
iret
mov
aaa
add
push
push
(bad)
shl
push
retf
stos
aas
add
ja
mov
jge
push
push
xlat
jne
add
ja
ins
jae
jo
(bad)
aad
push
xlat
ja
js
push
lahf
fnsave
push
jp
jp
inc
push
fidivr
adc
jns
ja
fld
(bad)
push
ret
jmp
(bad)
jmp
push
xchg
sub
xchg
in
xchg
sub
scas
mov
push
xchg
push
setbe
xor
dec
fisttp
push
call
sti
push
cdq
cmp
cmp
pushf
cmp
popf
mov
popf
aas
push
sahf
inc
push
lahf
inc
lahf
jle
pop
mov
push
mov
push
imul
mov
out
out
out
pop
lock
hlt
clc
stc
cli
sti
clc
lahf
out
cld
std
inc
jecxz
arpl
fldcw
inc
jae
add
imul
xchg
push
add
pop
add
pop
or
add
pop
gs
push
ins
add
nop
scas
inc
mov
add
int3
std
fld
add
or
add
add
jg
fisttp
or
test
test
rsm
stos
cmps
or
push
sbb
imul
adc
add
add
pop
mov
femms
lods
lods
pop
mov
fstp
scas
add
scas
ins
lods
pop
pop
and
scas
lods
push
and
imul
pop
scas
sbb
cmp
push
dec
pop
scas
sbb
sbb
mov
and
mov
movs
imul
mov
add
mov
shl
and
mov
lock
(bad)
and
mov
mov
pop
and
movs
mov
and
or
sub
pop
sub
mov
or
in
pop
sub
xchg
mov
sub
das
or
es
dec
repz
aas
cmp
pop
ins
push
mov
cmp
pop
aaa
cmps
(bad)
mov
mov
pop
xor
pop
or
xor
xor
or
add
pop
mov
xor
mov
pop
das
push
cs
xor
add
xor
das
pop
(bad)
mov
xor
adc
pop
push
cs
dec
inc
das
inc
inc
xor
adc
mov
xor
push
push
popa
jbe
cmp
jl
jge
jno
jmp
call
pushw
dec
dec
cmp
jo
mov
inc
es
(bad)
inc
movs
movs
mov
cwde
sahf
mov
pushf
(bad)
(bad)
aas
stos
sbb
mov
mov
sub
movs
repnz
outs
dec
ja
jns
dec
push
bound
js
clc
jnp
adc
xor
jne
je
lods
and
jg
ins
and
addr16
add
add
pop
adc
aas
outs
(bad)
jge
movs
dec
jle
xchg
pop
push
dec
add
dec
and
mov
and
cmps
push
mov
xor
imul
dec
dec
xor
ja
push
ja
jb
cs
xor
mov
xchg
mov
in
push
push
pop
jbe
dec
sbb
and
mov
ds
pop
xchg
jo
push
inc
mov
cmp
mov
jnp
shr
xchg
jae
(bad)
xchg
jp
out
inc
inc
push
popf
inc
mov
aaa
add
xchg
jno
retf
cmp
(bad)
jle
bound
mov
mov
inc
(bad)
(bad)
aas
out
push
sahf
mov
ins
add
outs
add
xchg
cmps
mov
push
test
cmps
dec
push
dec
push
movs
das
pop
mov
(bad)
jae
add
jb
shl
outs
pop
xlat
pushf
push
test
pop
add
fwait
imul
call
outs
mov
sti
fwait
dec
mov
add
ja
sahf
jbe
fistp
imul
iret
add
ds
push
add
and
outs
test
mov
data16
shr
repz
outs
push
outs
ror
or
retf
push
ds
jno
add
mov
mov
fiadd
call
add
mov
add
jle
dec
add
push
es
bound
out
arpl
call
iret
sahf
jae
jnp
mov
jb
out
pop
dec
or
jg
jle
jecxz
or
fiadd
fnstcw
aad
push
div
imul
adc
fadd
pop
fwait
mov
dec
add
sbb
test
test
mov
test
in
mov
push
xchg
(bad)
into
nop
and
out
xchg
(bad)
in
xchg
lock
sub
xor
in
push
sub
imul
ins
mov
rol
xchg
repnz
xor
cwde
push
cmc
sahf
xor
jl
lods
es
pushf
cmp
imul
(bad)
aam
jle
push
aad
lock
movs
sahf
inc
pop
out
out
mov
jbe
stos
into
shl
lgs
(bad)
int
ins
rol
sar
push
movs
out
jl
mov
ret
hlt
adc
pop
data16
add
addr16
xchg
lods
add
dec
out
je
dec
sub
inc
movs
daa
add
push
and
mov
add
femms
or
or
or
sbb
or
es
push
adc
push
add
(bad)
adc
adc
ds
add
and
mov
adc
sbb
pop
test
mov
mov
fisubr
mov
add
and
neg
inc
loopne
ds
mov
lods
xor
and
aas
push
adc
xor
or
iret
adc
cmp
cmp
repnz
and
test
cmp
ds
jbe
sbb
sbb
cmp
scas
xor
dec
mov
scas
ds
jle
aas
adc
mov
mov
ds
xor
dec
inc
test
mov
scas
add
fwait
bound
mov
addr16
mov
ds
mov
call
stos
test
cmps
cmps
cmps
cmps
add
test
in
(bad)
mov
call
sub
sub
add
add
fist
sub
sub
dec
and
inc
test
push
push
push
push
push
push
push
imul
push
pop
push
push
push
imul
fs
das
pop
imul
cwde
xchg
pusha
xchg
nop
cdq
mov
mov
nop
test
ins
popf
push
(bad)
jg
je
xchg
jns
jle
add
jo
inc
pop
adc
(bad)
cmp
push
and
and
mov
inc
add
shr
ja
(bad)
inc
cli
cmc
repz
dec
xor
(bad)
jg
push
aas
add
xchg
pop
cmp
test
add
mov
add
fistp
arpl
mov
fnstsw
(bad)
(bad)
stc
cmc
repnz
inc
add
gs
pushf
add
mov
xchg
div
call
or
mov
mov
sahf
or
jae
js
sti
(bad)
mov
add
mov
mov
test
scas
xchg
js
nop
cmp
in
and
out
mov
data16
fimul
(bad)
sub
nop
sub
mov
fist
xchg
xor
xchg
xor
xchg
outs
call
in
imul
jbe
neg
fcmove
fst
clc
cdq
int
es
push
retf
loopne
push
(bad)
(bad)
std
adc
(bad)
fdivrp
div
xchg
add
test
jg
adc
data16
jge
or
mov
add
pop
repnz
dec
dec
dec
dec
dec
dec
add
pop
mov
add
dec
or
adc
cmp
adc
dec
or
arpl
dec
push
adc
add
or
pop
pop
call
inc
push
dec
sbb
aas
in
(bad)
and
dec
and
adc
sbb
dec
add
outs
jmp
dec
adc
inc
ds
cmp
cmp
cmp
daa
and
sbb
cld
pop
push
sbb
sbb
nop
sub
xor
push
and
das
xor
sub
sub
push
sti
stos
inc
lods
mov
add
mov
pop
mov
mov
add
mov
add
fldenv
outs
mov
push
outs
inc
or
inc
sub
pop
sbb
outs
jo
and
mov
cmps
pop
into
inc
add
jmp
outs
dec
xlat
sbb
(bad)
iret
sub
pop
or
sar
jg
ds
adc
mov
in
in
lock
sub
sub
hlt
xorps
mov
jg
or
mov
test
rol
sahf
jg
mov
xchg
or
inc
into
jg
mov
aad
(bad)
cli
mov
cli
adc
or
push
xor
add
add
jle
cli
or
test
push
xchg
or
sti
jg
shl
mov
scas
ins
rcl
inc
dec
sti
jg
pusha
adc
add
ret
jg
adc
and
call
push
les
jg
(bad)
cld
jg
lods
add
cld
bound
and
inc
jo
cmps
(bad)
std
ja
jg
or
push
or
test
add
or
les
jg
jle
push
or
mov
mov
or
adc
sub
dec
xor
loopne
(bad)
(bad)
xor
pop
inc
data16
sbb
fst
add
inc
add
loope
sbb
push
jbe
mov
rcr
xor
mov
jle
and
(bad)
sbb
or
xchg
xor
ffree
push
jmp
lods
sub
and
jle
retf
imul
mov
sbb
inc
scas
jle
mov
adc
dec
mov
popa
mov
adc
jg
adc
push
scas
data16
lea
jg
sub
add
inc
outs
jg
inc
rol
xchg
call
xor
cwde
mov
pop
je
sub
jle
push
inc
pop
push
(bad)
fdivrp
cmps
jmp
ins
push
stos
pop
stos
pop
pop
pop
fidiv
daa
aas
aaa
pop
push
push
fiadd
add
lock
cmps
fnstsw
add
inc
push
(bad)
(bad)
call
jle
sbb
or
dec
dec
scas
popf
out
or
push
mov
mov
push
comiss
daa
test
mov
push
arpl
pop
mov
mov
test
out
(bad)
mov
sahf
push
dec
(bad)
call
sbb
(bad)
fdiv
push
and
jle
jle
test
mov
out
dec
test
into
push
(bad)
fnstenv
jmp
push
push
jne
pop
push
jbe
fild
push
push
jp
mov
mov
dec
jbe
scas
sbb
pop
mov
mov
jbe
es
(bad)
push
cmp
jmp
(bad)
cmp
dec
push
fs
inc
outs
ss
or
(bad)
inc
int3
ja
xchg
inc
dec
push
movs
mov
test
lahf
mov
push
int
mov
dec
pop
jbe
sahf
mov
inc
out
(bad)
out
mov
xchg
ss
adc
inc
push
pushf
cmp
pushf
ds
cmp
xchg
nop
mov
xchg
xor
xchg
xor
sub
push
cs
nop
sub
nop
daa
ss
cs
ins
sahf
adc
mov
xor
fsin
outs
(bad)
call
adc
push
(bad)
mov
push
dec
pop
fnsave
xor
jmp
(bad)
sahf
int3
nop
mov
es
fisub
rol
push
add
pop
ja
out
cdq
mov
(bad)
dec
shl
aad
pop
ja
imul
(bad)
div
mov
add
add
sbb
and
push
and
push
mov
outs
or
outs
add
sub
and
adc
pop
or
push
aas
push
sahf
out
fwait
adc
pop
push
or
lea
(bad)
mov
push
imul
fst
sbb
test
push
lock
cmp
cmp
cmp
icebp
push
add
in
add
mov
inc
sbb
dec
jmp
pop
idiv
mov
rol
mov
inc
test
enter
(bad)
xor
or
xchg
out
and
std
into
jmp
syscall
jbe
add
mov
sub
push
mov
sub
outs
add
pop
call
or
mov
sub
iret
add
daa
cld
pop
mov
adc
das
pop
cld
push
push
adc
popa
sti
push
rcr
std
out
and
seta
retf
inc
(bad)
call
or
xor
or
mov
mov
(bad)
arpl
cmp
inc
inc
dec
(bad)
call
sub
mov
mov
pop
push
or
mov
sub
dec
or
dec
outs
dec
mov
xor
clts
add
adc
punpckhbw
or
iret
jle
adc
inc
mov
inc
sti
out
punpckhdq
pop
push
(bad)
call
add
dec
inc
pop
xchg
lods
iret
sub
xor
inc
call
adc
sub
xor
add
mov
daa
outs
mov
push
std
(bad)
call
call
dec
stos
inc
popa
push
call
push
add
shl
fsub
add
inc
cwde
cmp
jg
movs
fwait
test
cli
idiv
loop
add
sbb
sub
jmp
dec
(bad)
stc
sbb
fcmovbe
ins
fnstenv
(bad)
jmp
aaa
mov
sbb
mov
mov
or
cmp
rol
dec
jp
nop
jbe
ret
inc
call
inc
push
mov
ss
inc
inc
push
inc
inc
pop
ss
in
inc
pop
mov
ins
mov
sahf
movs
dec
push
stos
push
popf
inc
cmps
dec
call
cs
dec
xchg
aam
imul
push
lahf
mov
add
push
shr
rcl
outs
es
shl
push
xor
add
das
xor
ins
pop
daa
outs
xor
imul
and
push
push
movs
sub
(bad)
call
dec
pop
xor
movs
(bad)
pop
int
repnz
(bad)
cli
mov
and
popfw
cmp
aas
call
push
cwde
xor
dec
inc
push
xchg
push
dec
jp
in
push
aaa
push
call
imul
xchg
xchg
cdq
not
sub
call
aam
mov
scas
jmp
jmp
sbb
xor
fimul
sar
fcmovbe
js
std
fadd
push
(bad)
(bad)
fstp
push
jnp
jp
or
int
push
jl
or
jl
push
jge
shr
adc
push
jbe
adc
fidivr
jg
data16
dec
push
dec
repnz
repnz
jae
pop
fidivr
cld
aaa
fbld
mov
jnp
jge
hlt
in
add
int3
push
push
leave
xor
pop
add
push
push
xor
xchg
push
outs
lahf
adc
adc
adc
or
imul
cmp
jnp
lahf
dec
es
add
adc
xchg
in
or
jg
and
xchg
push
sbb
out
push
sub
iret
out
(bad)
mov
cli
inc
mov
jbe
clc
push
idiv
mov
jb
sub
jg
mov
icebp
or
cld
mov
out
ja
jno
sub
jg
mov
icebp
(bad)
fucomip
or
jg
je
daa
jg
jns
add
mov
ja
loope
xchg
jl
cmp
cld
jp
es
xchg
rcl
aaa
inc
jge
and
or
or
jg
dec
stos
dec
pop
ja
movs
addr16
or
mov
icebp
idiv
call
push
fadd
rol
push
and
lahf
inc
push
int3
dec
pop
jle
mov
fidivr
jmp
cmp
push
out
fidiv
pop
push
pop
(bad)
push
inc
jmp
dec
(bad)
ds
call
jp
int
push
(bad)
jns
mov
fldcw
push
mov
jmp
xchg
jmp
mov
push
xchg
mov
pop
test
loop
adc
xchg
out
sbb
loope
and
retf
jg
xchg
add
xor
mov
or
push
inc
push
push
jp
sbb
add
inc
or
mov
aam
nop
xlat
push
cmovno
ret
(bad)
mov
adc
rcl
fsub
add
push
pop
es
sub
mov
mov
ficomp
fcmove
adc
pop
xchg
or
push
inc
pop
dec
test
and
cwde
inc
outs
add
sbb
xchg
push
mov
inc
test
pop
idiv
add
push
sbb
push
aaa
imul
ins
jnp
or
push
push
mov
inc
inc
add
and
inc
adc
sbb
add
loope
mov
sub
push
push
and
and
btc
rol
icebp
inc
push
les
inc
shr
add
push
mov
or
adc
xchg
js
jo
les
les
jp
push
aaa
pop
mov
add
mov
imul
add
outs
and
fist
jo
das
cmp
sbb
add
add
imul
je
std
pusha
ins
mov
add
add
stos
adc
bound
stos
dec
aad
pop
and
pusha
mov
stos
add
sbb
dec
xchg
arpl
inc
bound
test
lds
jo
mov
popf
in
neg
inc
rcl
popa
bound
inc
test
jb
adc
and
mov
push
add
sbb
xchg
push
and
push
fild
mov
push
mov
mov
adc
imul
add
add
shr
or
and
les
aas
dec
sub
inc
xchg
out
mov
sbb
push
cmc
add
xchg
in
sbb
shr
jo
xor
dec
push
outs
dec
inc
mov
loop
and
div
and
add
sub
rol
pop
mov
ins
out
and
imul
mov
or
in
ins
jne
loopne
mov
jno
inc
or
or
or
inc
popa
sbb
and
sub
ret
cmp
fcmovnbe
mov
xchg
sub
xchg
and
mov
mov
fiadd
sbb
pop
push
clc
js
or
push
mov
jmp
aas
cmp
and
jne
stos
and
xor
dec
jnp
sbb
cmp
mov
je
push
dec
in
dec
movs
fdiv
xchg
sbb
push
adc
push
fsubr
mov
loop
cmp
call
mov
cmp
xchg
and
dec
iret
jecxz
lock
pop
pop
or
xor
dec
inc
mov
arpl
retf
push
jb
dec
adc
rol
(bad)
jmp
loopne
mov
aaa
js
jne
shl
inc
je
fisubr
sbb
and
mov
cmp
cdq
mov
xchg
mov
icebp
popa
adc
loopne
sbb
jbe
lds
add
adc
cmp
push
stos
mov
sub
mov
loopne
xor
dec
xor
dec
call
pop
xor
add
push
cmp
rol
ins
mov
pop
nop
push
pop
out
dec
das
fcmovu
cmp
div
sbb
pop
test
loop
and
les
jl
je
lahf
mov
inc
ja
push
jne
inc
mov
sub
outs
jae
in
mov
or
dec
cmp
loop
sub
add
movs
add
inc
pop
fisub
cmps
shl
and
jno
mov
adc
push
cs
adc
fsubr
dec
mov
cmp
sub
sbb
and
mov
cmc
push
inc
aaa
push
pop
push
sbb
imul
bound
ins
jne
arpl
or
lea
mov
mov
inc
es
lds
lea
fimul
fstp
inc
and
call
sbb
pop
sbb
xor
fs
or
mov
scas
push
popa
rcpps
js
cwde
icebp
inc
adc
jb
inc
inc
xchg
stos
mov
fs
jne
imul
lds
jbe
sbb
nop
ficomp
ins
sahf
daa
push
mov
jo
push
cld
sub
fs
fcomp
nop
imul
dec
inc
add
xchg
add
sub
jg
jns
call
imul
push
jo
ins
xchg
dec
movs
and
push
les
ret
dec
std
or
mov
inc
push
lock
xchg
xor
mov
adc
mov
int
in
sbb
inc
xor
push
mov
je
ins
dec
outs
dec
std
(bad)
call
and
mov
sub
push
push
mov
mov
js
add
pop
add
add
sbb
mov
call
add
or
dec
shl
or
push
adc
xor
shl
sub
xor
jl
push
es
jb
loope
pop
add
adc
xchg
lock
and
dec
imul
imul
and
shl
push
loope
pop
out
test
popf
stos
inc
push
ins
adc
or
sub
cwde
xor
pop
fsubr
adc
inc
ins
push
bound
scas
cli
test
and
mov
outs
xor
sbb
out
xchg
arpl
out
jo
inc
(bad)
sbb
mov
jo
rcr
dec
jl
mov
and
or
mov
jmp
dec
push
dec
call
or
xchg
(bad)
in
sbb
jge
sbb
mov
loope
lock
xor
and
adc
cmp
imul
movs
and
inc
ins
sub
push
push
mov
inc
ret
inc
xor
mov
arpl
sub
mov
xchg
aaa
out
mov
ss
xlat
adc
xchg
xor
adc
frstor
xor
and
inc
enter
in
mov
sbb
sbb
adc
mov
mov
jbe
adc
addr16
arpl
(bad)
adc
ins
adc
mov
mov
push
mov
loope
std
xchg
dec
ins
dec
inc
push
adc
sub
jo
test
dec
cld
addr16
jo
adc
inc
lods
sub
jne
pop
xor
inc
cwde
pop
jmp
arpl
mov
inc
add
sbb
mov
nop
fs
xor
mov
cmp
jns
test
mov
push
and
inc
cmp
and
jg
out
mov
cmp
jmp
pop
sbb
rol
aas
scas
inc
sub
adc
nop
shl
lods
mov
xchg
jbe
enter
inc
or
test
push
mov
fdivr
(bad)
push
inc
inc
int3
js
movs
cmp
xor
push
outs
movs
addr16
cmp
arpl
mov
jnp
jo
pop
dec
mov
jmp
pop
mov
outs
inc
test
pop
inc
ja
imul
and
call
sbb
sub
inc
cmps
(bad)
dec
push
ss
push
xchg
test
dec
movs
dec
sub
sbb
clc
shl
ins
das
xchg
add
add
inc
push
daa
cwde
mov
adc
sbb
push
cmp
and
scas
pusha
xlat
mov
push
in
mov
xor
ins
pop
rcl
or
inc
outs
push
mov
addr16
clc
add
mov
mov
add
sahf
push
(bad)
push
je
inc
sbb
or
data16
push
push
and
sub
out
out
mov
inc
jnp
dec
xor
or
addr16
jp
(bad)
shl
and
or
add
cmp
add
inc
and
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
inc
add
