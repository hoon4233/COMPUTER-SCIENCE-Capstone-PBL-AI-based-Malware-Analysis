sbb
add
add
add
dec
add
add
add
add
add
add
add
sbb
add
jo
add
jo
add
push
add
pop
add
or
push
and
add
add
add
sub
add
push
je
add
add
sub
adc
add
or
add
add
add
add
add
add
sub
push
sub
push
add
adc
add
sub
add
and
add
add
add
add
xor
add
add
adc
jle
add
add
add
add
sub
add
push
and
or
sub
add
add
(bad)
(bad)
call
sub
add
add
sub
add
push
and
add
and
add
add
add
sub
add
and
add
and
add
or
add
add
jle
add
add
sub
pop
sub
add
xor
add
add
add
add
adc
jle
add
add
sub
push
sub
and
add
sub
add
adc
add
add
add
add
add
add
push
add
push
pop
jb
sub
add
and
add
dec
add
push
and
push
sub
add
bound
adc
add
add
sub
add
sub
add
add
sub
add
adc
add
add
add
add
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
add
inc
sub
pop
or
sub
add
add
pop
add
or
add
add
xchg
add
or
sub
add
add
or
add
add
pop
sub
add
add
add
push
outs
test
add
add
add
xor
add
add
add
adc
add
sub
add
sub
add
push
add
jle
add
add
add
add
sub
add
and
add
push
and
add
and
add
add
jnp
add
add
sub
add
push
and
add
add
jnp
add
add
daa
add
add
cmp
add
sub
add
push
and
add
push
and
add
and
add
add
jnp
add
add
sub
add
and
add
add
jnp
add
add
sub
outs
test
add
add
jnp
add
add
sub
add
push
and
add
add
sub
adc
add
add
add
add
add
add
add
inc
sub
pop
or
sub
add
add
(bad)
(bad)
call
sub
add
add
jnp
add
add
pop
add
or
add
add
xchg
add
or
sub
add
xor
add
add
push
add
adc
jle
add
add
push
add
add
inc
add
push
and
add
or
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jnp
add
add
xchg
add
add
jnp
add
add
add
add
xchg
add
add
jnp
add
add
outs
lods
add
or
add
add
add
lods
add
or
add
jae
add
or
add
or
push
add
add
lods
add
or
and
add
add
outs
test
es
add
add
scas
add
or
add
add
push
outs
stos
add
or
add
add
add
scas
add
or
jnp
add
add
push
outs
stos
add
or
add
add
add
scas
add
or
add
add
pop
outs
stos
add
or
add
add
add
scas
add
or
add
add
sbb
add
or
add
add
add
scas
add
or
jnp
add
add
sbb
add
or
add
add
add
scas
add
or
add
add
sbb
add
or
add
add
add
scas
add
or
jnp
add
add
sbb
add
or
add
add
add
outs
xchg
add
add
jnp
add
add
or
or
add
or
add
or
add
add
add
mov
add
sub
add
push
and
add
add
jnp
add
add
outs
scas
add
or
add
add
add
mov
add
and
add
inc
jae
add
or
add
or
push
add
add
mov
add
and
add
inc
jae
add
or
add
or
push
add
add
mov
add
and
add
inc
jae
add
or
add
or
push
add
add
mov
add
sbb
add
and
test
add
outs
mov
add
add
add
add
mov
add
sbb
add
dec
inc
jae
add
or
add
or
push
add
add
mov
add
and
add
inc
jae
add
or
add
or
add
add
add
mov
or
add
jae
add
or
add
or
add
add
add
outs
mov
add
add
jnp
add
add
outs
xchg
add
add
jnp
add
add
sub
add
and
sub
add
and
add
and
add
outs
movs
add
or
add
add
add
sbb
add
or
add
or
add
add
add
(bad)
add
add
sub
add
and
add
add
jnp
add
add
jnp
add
add
outs
mov
add
add
jnp
add
add
add
add
add
add
jae
add
or
add
or
add
add
add
outs
movs
add
or
add
add
add
or
cmps
add
or
add
add
add
outs
cmps
add
or
add
add
add
outs
xchg
add
add
jnp
add
add
pop
add
push
jae
add
or
add
or
add
add
add
push
sbb
jae
add
or
add
or
add
add
add
pop
adc
add
or
add
or
add
add
add
repz
add
sub
add
and
add
add
jnp
add
add
sgdtd
add
adc
add
or
add
or
add
add
add
adc
add
or
add
add
add
adc
add
sub
add
push
and
add
add
jnp
add
add
adc
add
or
add
add
add
outs
xchg
add
add
jnp
add
add
pop
add
pop
sbb
add
or
add
or
add
add
add
push
sbb
jae
add
or
add
or
add
add
add
pop
adc
add
or
add
or
add
add
add
sub
sub
add
outs
mov
add
add
jnp
add
add
sgdtd
add
adc
add
or
add
or
add
add
add
outs
mov
add
add
jnp
add
add
inc
add
add
sub
add
and
add
add
jnp
add
add
adc
add
or
add
add
add
outs
xchg
add
add
jnp
add
add
pop
add
pop
xor
mov
add
outs
mov
add
add
jnp
add
add
push
sbb
jae
add
or
add
or
add
add
add
pop
adc
add
or
add
or
add
add
add
push
add
add
sub
add
and
add
add
jnp
add
add
sgdtd
add
adc
add
or
add
or
add
add
add
adc
or
add
add
add
jb
add
sub
add
push
and
add
add
jnp
add
add
adc
add
or
add
add
add
outs
xchg
add
add
jnp
add
add
pop
add
pop
dec
jae
add
or
add
or
add
add
add
push
sbb
jae
add
or
add
or
add
add
add
pop
adc
add
or
add
or
add
add
add
test
add
sub
add
push
outs
mov
add
add
jnp
add
add
sgdtd
add
adc
add
or
add
or
add
add
add
push
outs
mov
add
add
jnp
add
add
cmps
add
add
sub
add
outs
test
add
add
jnp
add
add
adc
add
or
add
add
add
outs
xchg
add
add
jnp
add
add
pop
add
pop
imul
add
outs
mov
add
add
jnp
add
add
sbb
sbb
add
or
add
or
add
add
add
outs
mov
add
add
jnp
add
add
mov
sub
add
and
add
add
jnp
add
add
outs
mov
add
add
jnp
add
add
outs
mov
add
add
jnp
add
add
sgdtd
add
jle
mov
mov
add
add
jnp
add
add
pop
outs
mov
add
add
jnp
add
add
outs
mov
add
add
jnp
add
add
in
add
sub
add
push
outs
test
add
add
jnp
add
add
or
add
or
add
add
add
outs
add
jnp
add
add
push
add
add
out
add
add
add
or
add
or
add
add
add
sti
add
add
sub
add
and
add
add
jnp
add
add
dec
pop
pop
jae
add
or
add
or
add
add
add
sbb
add
or
add
add
add
or
add
sub
add
push
and
add
add
add
add
add
xchg
add
or
add
add
rol
add
jae
add
or
test
add
add
pop
sub
add
mov
add
and
add
add
add
or
cwde
add
or
add
nop
add
or
jnp
add
add
xchg
add
or
add
sub
add
sub
add
sub
add
adc
add
sub
add
push
and
add
add
pop
or
add
or
xchg
add
or
add
sub
push
sub
add
sub
add
adc
add
sub
add
push
outs
test
add
add
jnp
add
add
outs
xchg
add
or
add
add
add
xchg
add
or
add
add
add
push
add
or
add
sub
sub
add
xor
add
add
adc
jle
add
add
sub
add
pop
add
push
and
add
sub
inc
add
push
and
add
push
and
imul
add
push
push
call
jle
add
add
sub
add
sub
add
jb
add
jo
push
inc
or
jle
add
add
sub
add
and
add
add
or
add
and
add
or
add
sub
add
xor
add
add
add
add
add
xor
add
das
add
add
sub
add
pop
add
push
sub
add
and
add
and
add
and
push
sub
xor
add
add
adc
jle
add
add
sub
add
pop
add
push
and
add
sub
add
sub
add
and
add
push
and
imul
add
sub
add
jo
sub
push
push
call
xor
add
and
pop
sub
add
xor
add
add
adc
jle
add
add
sub
add
pop
add
push
and
add
sub
add
sub
add
and
add
push
and
imul
add
sub
add
jo
sub
push
push
call
add
or
pop
sub
add
xor
add
add
adc
jle
add
add
sub
add
pop
add
push
and
add
daa
add
add
inc
add
push
and
add
push
and
imul
add
sub
add
add
(bad)
(bad)
call
sub
add
add
add
jo
sub
push
push
call
xor
add
or
add
sub
adc
add
add
add
adc
jle
add
add
sub
add
pop
add
push
and
add
and
inc
add
push
and
add
push
or
mov
inc
push
inc
or
sub
add
jo
sub
push
push
call
sub
or
add
sub
adc
push
add
add
sub
add
sub
add
push
add
sub
add
adc
add
dec
add
add
add
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
add
inc
sub
pop
or
sub
add
add
(bad)
(bad)
inc
add
add
add
pop
add
or
add
add
xchg
add
or
sub
add
or
add
add
pop
sub
add
push
add
add
sub
add
and
add
add
add
add
xor
add
add
add
add
adc
add
add
add
pop
add
add
sub
add
and
add
sub
add
push
and
sub
add
and
add
add
fiadd
add
add
add
or
jle
add
add
push
sub
push
add
add
add
pop
sub
jle
add
add
and
push
add
sub
add
push
and
add
add
add
add
push
lea
add
add
pop
push
and
pop
add
sub
add
push
and
pop
and
pop
sbb
inc
pop
add
sub
add
push
and
pop
and
pop
sbb
jb
add
sub
add
push
and
pop
and
pop
sbb
or
add
and
pop
and
jle
add
add
sub
xchg
add
add
add
add
sub
es
add
add
sub
add
sbb
add
add
add
xor
add
add
cmp
(bad)
inc
add
adc
push
add
add
add
adc
sldt
add
sub
add
sub
add
add
jle
add
add
add
add
sub
add
and
add
push
and
add
and
add
add
jnp
add
add
sub
add
push
and
add
add
jnp
add
add
daa
add
add
cmp
add
sub
add
push
and
add
push
sub
add
and
add
add
jnp
add
add
sub
add
push
outs
test
add
add
jnp
add
add
sub
add
push
and
add
add
jnp
add
add
sub
add
push
and
add
add
sub
adc
add
sub
add
add
add
add
add
add
inc
sub
pop
or
sub
sldt
add
pop
add
or
add
add
xchg
add
or
sub
adc
push
add
add
push
add
adc
jle
add
add
or
add
sub
add
and
add
or
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jnp
add
add
xchg
add
add
jnp
add
add
add
add
xchg
add
add
jnp
add
add
outs
lods
add
or
add
add
add
lods
add
or
add
jae
add
or
add
or
adc
add
lods
add
or
add
add
outs
test
add
add
add
scas
add
or
add
add
push
outs
stos
add
or
add
add
add
scas
add
or
add
add
push
outs
stos
add
or
add
add
add
scas
add
or
add
add
pop
outs
stos
add
or
add
add
add
scas
add
or
jnp
add
add
sbb
add
or
add
add
add
scas
add
or
add
add
sbb
add
or
add
add
add
scas
add
or
add
add
sbb
add
or
add
add
add
scas
add
or
jnp
add
add
sbb
add
or
add
add
add
outs
xchg
add
add
jnp
add
add
or
or
add
or
add
or
add
add
add
mov
add
sub
add
push
and
add
add
jnp
add
add
outs
scas
add
or
add
add
add
mov
add
and
add
inc
jae
add
or
add
or
adc
add
mov
add
and
add
inc
jae
add
or
add
or
adc
add
mov
add
and
add
inc
jae
add
or
add
or
adc
add
mov
add
and
add
inc
jae
add
or
add
or
adc
add
mov
add
and
add
jae
add
or
add
or
add
add
add
mov
add
and
add
inc
jae
add
or
add
or
add
add
add
mov
or
add
jae
add
or
add
or
add
add
add
outs
mov
add
add
jnp
add
add
outs
xchg
add
add
jnp
add
add
sub
add
and
sub
add
sub
push
and
add
outs
movs
add
or
add
add
add
sbb
add
or
add
or
add
add
add
(bad)
add
add
sub
add
and
add
add
jnp
add
add
jnp
add
add
outs
mov
add
add
jnp
add
add
add
add
add
add
jae
add
or
add
or
add
add
add
outs
movs
add
or
add
add
add
or
cmps
add
or
add
add
add
outs
cmps
add
or
add
add
add
outs
xchg
add
add
jnp
add
add
pop
add
push
jae
add
or
add
or
add
add
add
push
sbb
jae
add
or
add
or
add
add
add
pop
adc
add
or
add
or
add
add
add
repz
add
sub
add
and
add
add
jnp
add
add
sgdtd
add
adc
add
or
add
or
add
add
add
adc
add
or
add
add
add
adc
add
sub
add
push
outs
test
add
add
jnp
add
add
adc
add
or
add
add
add
outs
xchg
add
add
jnp
add
add
pop
add
pop
sbb
add
or
add
or
add
add
add
push
sbb
jae
add
or
add
or
add
add
add
pop
adc
add
or
add
or
add
add
add
sub
sub
add
and
add
add
jnp
add
add
sgdtd
add
adc
add
or
add
or
add
add
add
outs
mov
add
add
jnp
add
add
inc
add
add
sub
add
and
add
add
jnp
add
add
adc
add
or
add
add
add
outs
xchg
add
add
jnp
add
add
pop
add
pop
xor
mov
add
outs
mov
add
add
jnp
add
add
push
sbb
jae
add
or
add
or
add
add
add
pop
adc
add
or
add
or
add
add
add
push
add
add
sub
add
outs
mov
add
add
jnp
add
add
sgdtd
add
adc
add
or
add
or
add
add
add
adc
or
add
add
add
jb
add
sub
add
push
and
add
add
jnp
add
add
adc
add
or
add
add
add
outs
xchg
add
add
jnp
add
add
pop
add
pop
dec
jae
add
or
add
or
add
add
add
push
sbb
jae
add
or
add
or
add
add
add
pop
adc
add
or
add
or
add
add
add
test
add
sub
add
push
and
add
add
jnp
add
add
sgdtd
add
adc
add
or
add
or
add
add
add
push
outs
mov
add
add
jnp
add
add
cmps
add
add
sub
add
and
add
add
jnp
add
add
adc
add
or
add
add
add
outs
xchg
add
add
jnp
add
add
pop
add
pop
imul
add
outs
mov
add
add
jnp
add
add
sbb
sbb
add
or
add
or
add
add
add
outs
mov
add
add
jnp
add
add
mov
sub
add
and
add
add
jnp
add
add
outs
mov
add
add
jnp
add
add
outs
mov
add
add
jnp
add
add
sgdtd
add
jle
mov
mov
add
add
jnp
add
add
pop
outs
mov
add
add
jnp
add
add
outs
mov
add
add
jnp
add
add
in
add
sub
add
push
outs
test
add
add
jnp
add
add
or
add
or
add
add
add
outs
add
jnp
add
add
push
add
add
out
add
add
add
or
add
or
add
add
add
sti
add
add
sub
add
and
add
add
jnp
add
add
dec
pop
pop
jae
add
or
add
or
add
add
add
sbb
add
or
add
add
add
or
add
sub
add
push
and
add
add
add
add
add
xchg
add
or
add
add
rol
add
jae
add
or
test
add
add
pop
sub
add
mov
add
and
add
add
add
or
cwde
add
or
add
nop
add
or
add
add
xchg
add
or
add
sub
add
sub
add
sub
add
jge
add
sub
add
push
and
add
add
pop
or
add
or
xchg
add
or
add
sub
push
sub
add
sub
add
jge
add
sub
add
push
and
add
add
jnp
add
add
outs
xchg
add
or
add
add
add
xchg
add
or
add
add
add
push
add
or
add
sub
sub
xor
add
add
adc
jle
add
add
sub
add
pop
add
push
jle
add
add
sub
inc
add
push
and
add
push
or
mov
inc
push
inc
or
inc
add
add
idiv
(bad)
call
sub
add
add
push
call
jle
add
add
sub
add
sub
add
and
add
push
es
inc
or
inc
add
add
idiv
(bad)
inc
jle
add
add
sub
add
and
add
add
or
add
or
add
and
or
add
xor
add
add
add
add
add
add
add
xor
add
das
add
add
sub
add
pop
add
push
and
add
and
add
and
add
or
add
sub
xor
add
add
adc
jle
add
add
sub
add
pop
add
push
and
add
sub
add
sub
add
and
add
push
and
imul
add
sub
add
add
(bad)
(bad)
call
sub
add
add
add
jo
sub
push
push
call
xor
add
and
pop
sub
add
adc
add
add
add
adc
jle
add
add
sub
add
pop
add
push
and
add
sub
add
sub
add
and
add
push
and
imul
add
sub
add
add
(bad)
(bad)
call
sub
add
add
add
jo
sub
push
push
call
add
or
pop
sub
add
adc
add
add
add
adc
jle
add
add
sub
add
pop
add
push
and
add
daa
add
add
inc
add
push
push
sub
add
or
mov
inc
push
inc
or
sub
add
add
(bad)
(bad)
call
sub
add
add
add
jo
sub
push
push
call
xor
add
and
pop
sub
add
adc
add
add
add
adc
jle
add
add
sub
add
pop
add
push
and
add
and
inc
add
push
and
add
push
and
imul
add
sub
add
add
(bad)
(bad)
call
sub
add
add
add
jo
sub
push
push
call
sub
or
add
sub
add
bound
adc
sbb
add
sub
add
sub
add
add
add
xor
add
add
add
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
add
inc
sub
pop
or
sub
sbb
add
pop
add
or
add
add
xchg
add
or
sub
add
add
or
add
add
pop
sub
add
nop
pop
add
sub
add
push
and
add
add
add
add
xor
add
add
or
add
jle
add
add
imul
add
add
idiv
(bad)
call
sub
add
es
add
jo
jle
add
add
sub
jle
add
add
cmp
add
call
push
pop
mov
lahf
add
push
and
add
add
sub
add
pop
add
push
push
sub
or
popa
push
sub
add
push
and
add
add
add
and
add
sub
xor
add
add
adc
or
add
add
xchg
and
sub
add
add
(bad)
(bad)
call
sub
add
es
add
add
xchg
or
pop
pop
dec
add
sub
add
add
xchg
pop
inc
pop
sub
add
add
(bad)
(bad)
(bad)
jle
add
add
xchg
and
(bad)
call
bound
push
jle
add
add
pop
pop
xchg
pusha
or
sbb
or
add
inc
jle
add
add
xchg
and
(bad)
(bad)
call
sbb
push
jle
add
add
pop
pop
xchg
pop
adc
or
jle
add
add
sbb
push
bound
push
jle
add
add
sbb
pusha
or
sbb
or
add
pop
das
push
jle
add
or
sub
add
jle
add
add
push
outs
push
add
or
add
add
sub
sub
add
adc
add
inc
add
add
add
add
sbb
sbb
add
(bad)
(bad)
(bad)
jg
sbb
add
add
add
add
jae
add
or
push
jae
add
or
jae
add
or
sub
add
push
add
and
add
sub
xor
cmp
add
or
add
jle
add
add
sub
add
or
pop
sub
push
add
or
xor
pop
inc
add
add
idiv
(bad)
call
sub
add
es
push
pop
outs
push
add
or
add
xor
rol
add
or
sub
sub
add
and
add
jo
push
add
or
das
and
inc
add
add
idiv
(bad)
call
sub
add
es
jb
add
jo
push
add
or
das
bndstx
add
add
(bad)
(bad)
call
add
addps
push
pop
outs
push
add
or
and
add
(bad)
(bad)
inc
pop
outs
push
add
or
prefetchnta
add
add
(bad)
(bad)
call
add
pop
adc
add
or
add
add
and
add
add
scas
add
push
and
add
add
sub
add
aas
add
add
add
mov
add
add
add
adc
adc
add
add
add
retf
and
add
sbb
add
sub
add
adc
add
add
sbb
add
add
pop
popa
push
sub
add
push
and
jle
add
add
sub
push
sub
add
add
add
add
adc
push
pop
add
add
add
xor
add
add
sldt
adc
sub
es
(bad)
pop
popa
push
sub
add
push
and
push
sub
adc
add
add
add
or
(bad)
add
sbb
or
leave
add
add
add
adc
or
jle
add
add
sub
add
push
and
ror
or
add
add
sub
add
push
or
pop
or
sbb
add
add
(bad)
(bad)
call
sub
add
or
pop
cmp
add
sbb
add
add
(bad)
(bad)
push
add
or
add
lea
add
adc
add
adc
add
push
and
add
add
add
add
push
push
lea
add
adc
jle
add
add
adc
push
push
sub
add
push
es
adc
adc
adc
push
adc
or
or
sbb
push
pop
pop
adc
adc
adc
sbb
add
add
(bad)
(bad)
call
pop
sub
pop
inc
add
add
idiv
(bad)
(bad)
jle
add
add
pop
add
push
and
add
adc
adc
push
outs
dec
add
or
add
add
dec
sbb
add
add
idiv
(bad)
(bad)
jle
add
add
(bad)
(bad)
(bad)
jg
sub
add
(bad)
(bad)
(bad)
jle
add
add
sbb
inc
add
add
sub
add
push
and
add
push
sub
jle
add
add
sbb
add
sbb
add
jle
add
add
push
and
add
jle
add
add
add
fild
add
and
inc
add
add
or
ret
push
and
inc
add
add
or
ret
push
es
add
add
or
ret
push
lea
add
adc
jle
add
add
or
ret
push
and
add
adc
dec
add
add
sub
add
push
and
sub
add
add
adc
adc
sub
add
push
and
add
add
or
or
adc
adc
push
sub
add
push
adc
jle
add
add
sbb
or
adc
sub
add
push
adc
or
pop
push
inc
add
add
sub
add
push
and
inc
add
add
idiv
(bad)
(bad)
jle
add
add
adc
jle
add
add
sub
add
push
and
pop
imul
and
add
add
or
or
jle
add
add
sub
add
push
and
pop
imul
and
dec
add
add
sbb
movhps
jle
add
jle
add
add
jle
add
add
push
push
out
add
push
jle
add
add
or
pop
cmp
add
add
inc
add
add
idiv
(bad)
(bad)
jle
add
add
push
sbb
add
add
(bad)
(bad)
(bad)
jle
add
add
add
add
add
add
idiv
(bad)
(bad)
jle
add
add
push
add
add
inc
add
add
sub
add
push
and
sub
add
push
sub
jle
add
add
sbb
add
sbb
add
jle
add
add
push
and
add
push
push
jae
add
or
adc
call
adc
adc
adc
jle
add
add
adc
adc
adc
sub
add
push
and
adc
xor
pop
inc
add
add
idiv
(bad)
(bad)
jle
add
add
push
add
add
adc
adc
sub
add
push
adc
adc
das
ret
add
add
idiv
(bad)
(bad)
jle
add
add
fiadd
fiadd
pop
sub
sbb
add
(bad)
(bad)
(bad)
jle
add
add
sub
add
push
sub
outs
pop
add
or
add
sub
add
push
pop
aam
adc
add
adc
inc
add
add
adc
adc
imul
and
sub
add
add
add
add
lods
add
jns
add
add
add
jo
and
add
pop
add
or
add
or
call
and
add
add
sbb
add
add
add
adc
add
add
add
add
add
pop
add
or
popa
add
or
fiadd
es
add
add
and
add
add
add
or
movhps
adc
mov
movups
call
or
add
adc
add
jo
outs
add
or
pop
adc
push
add
add
adc
adc
pop
and
jo
add
adc
add
jb
add
adc
adc
push
sub
add
adc
jg
add
add
pop
and
add
or
pusha
add
or
je
add
je
add
add
push
(bad)
add
add
outs
jne
add
sub
pop
outs
arpl
add
or
data16
or
add
fisttp
add
add
outs
jbe
add
adc
adc
mov
pop
adc
adc
lea
add
adc
adc
push
rol
add
popa
add
or
pop
adc
adc
adc
adc
pop
pop
call
adc
pop
pop
adc
adc
adc
xor
jle
add
or
outs
add
or
or
pop
jae
add
or
or
or
imul
adc
or
add
or
or
xor
or
or
add
or
or
xor
or
or
add
or
or
xor
or
or
add
or
or
xor
sbb
push
sub
or
or
push
outs
ins
add
or
push
pop
pop
adc
adc
adc
xor
adc
jle
add
or
add
or
outs
ins
add
or
or
or
add
or
or
outs
push
add
or
or
add
or
add
fiadd
adc
pop
pop
adc
adc
adc
mov
push
(bad)
(bad)
jmp
add
inc
add
add
add
sbb
add
inc
add
add
add
push
inc
add
add
add
push
pop
add
add
add
add
add
add
les
or
add
inc
add
add
add
pop
add
or
and
xor
add
sub
and
add
add
xor
add
sub
and
add
add
xor
add
sub
and
add
add
xor
add
sub
and
add
add
xor
add
sub
and
add
add
xor
add
sub
and
add
add
xor
add
sub
and
add
sub
add
push
sub
and
xor
add
sub
and
add
add
xor
add
sub
and
add
add
xor
add
sub
and
add
add
xor
add
sub
and
add
add
xor
add
sub
and
add
add
xor
add
sub
and
add
add
xor
add
sub
and
add
sub
add
push
sub
and
xor
add
sub
and
add
add
xor
add
sub
and
add
add
xor
add
sub
and
add
add
xor
add
sub
and
add
add
xor
add
sub
and
add
add
xor
add
sub
and
add
add
xor
add
sub
and
add
sub
add
push
sub
and
xor
add
sub
and
add
add
xor
add
sub
and
add
add
xor
add
sub
and
add
add
xor
add
sub
and
add
add
xor
add
sub
and
add
add
xor
add
sub
and
add
add
xor
add
sub
and
add
sub
add
push
sub
and
xor
add
sub
and
add
add
xor
add
sub
and
add
add
xor
add
sub
and
add
add
xor
add
sub
and
add
add
xor
add
sub
and
add
add
xor
add
sub
and
add
add
xor
add
sub
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
and
add
pop
add
and
jb
outs
addr16
add
add
xor
add
add
add
push
push
add
xor
add
add
add
inc
push
dec
inc
add
add
xor
add
add
inc
ins
outs
bound
add
add
add
add
add
push
adc
add
add
add
add
add
add
add
jge
add
xor
add
dec
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
jno
push
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmc
add
add
add
pop
add
add
add
add
add
add
add
add
test
add
add
add
or
mov
jle
or
lea
jle
or
xchg
add
add
movs
add
add
add
movs
add
add
add
movs
add
add
add
movs
add
add
movs
add
add
add
add
int
fld
or
out
add
add
add
add
add
add
push
add
add
jnp
or
call
add
add
add
add
add
add
add
add
adc
sub
or
cmp
test
add
push
add
pop
add
jb
jp
or
mov
nop
add
xchg
add
lahf
add
xchg
add
add
movs
add
add
add
add
add
add
int
test
add
in
repnz
repnz
test
push
movs
add
add
push
movs
add
add
test
add
add
add
push
test
push
movs
add
add
add
repnz
test
push
movs
add
add
test
push
test
push
test
push
stos
push
push
add
add
push
stos
push
push
add
push
stos
push
push
add
push
stos
push
push
add
push
stos
push
xchg
add
push
add
push
add
pop
stos
push
push
add
pop
stos
push
push
add
pop
stos
push
push
add
pop
stos
push
push
add
pop
stos
push
push
add
stos
push
push
add
stos
push
push
add
stos
push
push
add
stos
push
push
add
stos
push
push
add
lea
stos
push
push
add
add
add
pop
stos
push
push
add
pop
stos
push
push
add
pop
stos
push
push
add
or
or
or
or
add
xor
adc
dec
or
or
add
xor
adc
push
or
or
add
add
add
add
add
add
add
adc
bound
imul
add
add
add
add
add
add
add
add
adc
mov
imul
add
add
add
add
or
add
adc
out
ret
add
add
add
or
or
add
or
or
add
add
add
or
or
add
add
add
or
or
add
add
add
or
add
add
add
add
or
add
add
add
add
add
adc
and
xor
add
add
jns
add
jno
and
xor
add
add
jge
add
jno
and
cmp
add
add
or
and
cmp
add
add
add
add
add
add
add
add
lea
add
jno
daa
add
add
add
add
add
add
add
xchg
or
add
sub
push
add
add
add
add
add
add
add
popf
or
add
sub
pusha
add
add
add
add
add
add
add
movs
or
add
das
add
add
add
test
add
add
add
add
lods
or
add
xor
je
add
add
mov
add
jno
xor
jns
add
add
mov
add
jno
xor
jle
add
add
mov
add
add
add
add
add
add
add
or
add
aaa
add
add
or
add
cmp
xchg
add
add
add
or
add
cmp
xchg
add
add
add
or
add
cmp
pushf
add
add
add
or
add
cmp
mov
add
or
add
cmp
cmps
add
add
add
or
add
cmp
add
add
or
add
add
add
or
add
aas
add
add
or
add
inc
add
add
or
add
inc
add
add
or
add
inc
add
add
add
add
or
add
inc
add
add
add
add
or
add
inc
add
add
add
add
or
add
dec
add
add
add
add
or
add
dec
add
add
add
add
or
add
dec
add
add
add
add
add
add
add
add
or
add
dec
add
add
add
add
add
in
add
add
add
or
add
dec
add
add
add
add
add
or
mov
or
or
rol
add
add
add
mov
add
add
add
add
add
mov
or
or
rol
add
add
add
mov
add
add
add
add
add
mov
or
add
add
or
add
add
or
add
add
fadd
xor
dec
or
add
add
fild
xor
xchg
or
add
add
mov
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
or
add
add
or
add
add
or
add
add
add
add
and
adc
push
or
add
add
sub
adc
imul
adc
jne
das
add
add
xor
adc
mov
add
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
or
adc
add
or
sub
xor
cmp
add
xchg
adc
push
or
pop
or
gs
outs
or
add
add
xchg
jns
adc
add
pop
and
add
add
add
add
add
add
add
add
xchg
jns
and
add
xchg
and
add
add
add
add
add
add
add
and
add
add
add
add
and
add
add
add
add
add
add
xchg
or
add
add
add
xchg
jns
adc
add
mov
add
add
les
retf
add
add
and
add
add
add
add
add
add
xchg
jns
adc
add
enter
add
les
retf
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
push
add
add
add
xchg
add
sbb
push
add
das
add
add
xchg
jns
adc
push
add
add
add
or
shl
add
add
add
add
add
add
xchg
out
inc
add
add
cmp
add
add
add
add
add
add
xchg
or
inc
add
add
xchg
and
inc
add
add
add
add
xchg
cmp
inc
add
add
add
add
add
cmp
add
add
add
add
add
add
les
retf
add
add
add
add
add
or
pushf
cmp
add
add
add
add
xchg
jns
adc
or
and
add
add
xchg
add
inc
add
add
add
add
xchg
sbb
sbb
or
pusha
add
add
xchg
jns
adc
or
push
add
add
add
add
add
add
add
add
add
aas
add
add
xchg
add
push
pusha
add
and
add
add
xchg
add
punpcklbw
push
add
add
add
xchg
sbb
sbb
adc
xor
add
xchg
add
punpckhwd
adc
pusha
inc
add
add
xchg
jns
adc
adc
add
add
add
xchg
jns
outs
add
add
add
add
add
add
pcmpeqb
adc
add
add
add
mov
movq
adc
add
add
add
mov
jbe
inc
add
or
xchg
sbb
sbb
adc
add
add
add
xchg
jns
outs
add
add
add
add
add
add
pcmpeqb
adc
add
add
add
mov
movq
adc
add
add
add
mov
jge
inc
add
or
xchg
sbb
sbb
adc
add
add
add
xchg
jns
outs
add
add
add
add
add
add
pcmpeqb
adc
add
add
add
mov
movq
adc
add
add
add
mov
setae
adc
add
or
xchg
sbb
sbb
adc
add
add
add
xchg
jns
outs
add
add
add
add
add
add
pcmpeqb
adc
add
add
add
mov
movq
adc
add
add
add
mov
setl
adc
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
pcmpeqb
adc
add
add
add
mov
movq
adc
add
add
add
mov
bt
adc
cwde
inc
add
or
xchg
sbb
sbb
adc
add
add
add
xchg
jns
outs
add
add
add
add
add
add
pcmpeqb
adc
add
add
add
mov
movq
adc
add
add
add
mov
bts
adc
movs
inc
add
or
xchg
sbb
sbb
adc
add
add
add
xchg
jns
outs
add
add
add
add
add
add
pcmpeqb
adc
add
add
add
mov
movq
adc
add
add
add
mov
cmpxchg
adc
mov
add
or
xchg
sbb
sbb
adc
add
add
add
xchg
jns
outs
add
add
add
add
add
add
pcmpeqb
adc
add
add
add
mov
movq
adc
add
add
add
mov
movzx
adc
mov
add
add
add
add
add
add
add
add
add
add
add
add
pcmpeqb
adc
add
add
add
mov
movq
adc
add
add
add
mov
bsr
adc
enter
or
xchg
sbb
sbb
adc
add
add
add
xchg
jns
outs
add
add
add
add
add
add
pcmpeqb
adc
add
add
add
mov
movq
adc
add
add
add
mov
(bad)
add
add
inc
add
or
xchg
sbb
sbb
adc
add
add
add
xchg
jns
outs
add
add
add
add
add
add
pcmpeqb
adc
add
add
add
mov
movq
adc
add
add
add
mov
bswap
add
add
inc
add
or
xchg
sbb
sbb
adc
add
add
add
xchg
jns
outs
add
add
add
add
add
add
pcmpeqb
adc
add
add
add
mov
movq
adc
add
add
add
mov
psrld
adc
in
inc
add
or
xchg
sbb
sbb
adc
add
add
add
xchg
jns
outs
add
add
add
add
add
add
pcmpeqb
adc
add
add
add
mov
movq
adc
add
add
add
mov
psubusw
adc
clc
inc
add
or
xchg
sbb
sbb
adc
add
add
add
xchg
jns
outs
add
add
add
add
add
add
pcmpeqb
adc
add
add
add
mov
movq
adc
add
add
add
mov
pavgb
adc
add
add
or
xchg
sbb
sbb
adc
add
add
add
xchg
jns
outs
add
add
add
add
add
add
pcmpeqb
adc
add
add
add
mov
movq
adc
add
add
add
mov
movntq
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
pcmpeqb
adc
add
add
add
mov
movq
adc
add
add
add
mov
paddsw
adc
sbb
add
or
xchg
sbb
sbb
adc
add
add
add
xchg
jns
outs
add
add
add
add
add
add
pcmpeqb
adc
add
add
add
mov
movq
adc
add
add
add
mov
pmuludq
adc
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
pcmpeqb
adc
add
add
add
mov
movq
adc
add
add
add
mov
psubd
adc
xor
add
or
xchg
sbb
sbb
adc
add
add
add
xchg
jns
outs
add
add
add
add
add
add
pcmpeqb
adc
add
add
add
mov
movq
adc
add
add
add
mov
sldt
adc
inc
inc
add
or
xchg
sbb
sbb
adc
add
add
add
xchg
jns
outs
add
add
add
add
add
add
pcmpeqb
adc
add
add
add
mov
movq
adc
add
add
add
mov
sysret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pcmpeqb
adc
add
add
add
mov
movq
adc
add
add
add
mov
prefetch
adc
pop
inc
add
or
xchg
sbb
sbb
adc
add
add
add
xchg
jns
outs
add
add
add
add
add
add
pcmpeqb
adc
add
add
add
mov
movq
adc
add
add
add
mov
movlps
adc
fs
add
or
xchg
sbb
sbb
adc
add
add
add
xchg
jns
outs
add
add
add
add
add
add
pcmpeqb
adc
add
add
add
mov
movq
adc
add
add
add
mov
nop
adc
jo
add
or
xchg
sbb
sbb
adc
add
add
add
xchg
jns
outs
add
add
add
add
add
add
pcmpeqb
adc
add
add
add
mov
movq
adc
add
add
add
mov
(bad)
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pcmpeqb
adc
add
add
add
mov
movq
adc
add
add
add
mov
movaps
adc
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
pcmpeqb
adc
add
add
add
mov
movq
adc
add
add
add
mov
wrmsr
add
add
xchg
sbb
sbb
adc
add
add
add
xchg
jns
outs
add
add
add
add
add
add
pcmpeqb
adc
add
add
add
mov
movq
adc
add
add
add
mov
(bad)
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pcmpeqb
adc
add
add
add
mov
movq
adc
add
add
add
mov
(bad)
add
add
xchg
sbb
sbb
adc
add
add
add
xchg
jns
outs
add
add
add
add
add
add
pcmpeqb
adc
add
add
add
mov
movq
adc
add
add
add
mov
cmovno
adc
mov
add
add
add
add
add
add
add
add
add
add
add
add
pcmpeqb
adc
add
add
add
mov
movq
adc
add
add
add
mov
cmovbe
adc
les
add
add
add
add
add
add
add
add
add
add
add
add
add
pcmpeqb
adc
add
add
add
mov
movq
adc
add
add
add
mov
cmovg
adc
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
pcmpeqb
adc
add
add
add
mov
movq
adc
add
add
add
mov
orps
adc
fadd
add
add
add
add
add
add
add
add
add
add
add
add
add
pcmpeqb
adc
add
add
add
mov
movq
adc
add
add
add
mov
cvtdq2ps
adc
call
add
add
add
add
add
add
add
add
add
add
add
add
pcmpeqb
adc
add
add
add
mov
movq
adc
add
add
add
mov
punpcklwd
adc
hlt
inc
add
or
xchg
sbb
sbb
adc
add
add
add
xchg
jns
outs
add
add
add
add
add
add
pcmpeqb
adc
add
add
add
mov
movq
adc
add
add
add
mov
punpckhbw
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pcmpeqb
adc
add
add
add
mov
movq
adc
add
add
add
mov
pcmpeqb
adc
or
add
or
xchg
sbb
sbb
adc
add
add
add
xchg
jns
outs
add
add
add
add
add
add
pcmpeqb
adc
add
add
add
mov
movq
adc
add
add
add
mov
(bad)
add
add
dec
add
or
xchg
sbb
sbb
adc
add
add
add
xchg
jns
outs
add
add
add
add
add
add
pcmpeqb
adc
add
add
add
mov
movq
adc
add
add
add
mov
ja
dec
add
or
xchg
sbb
sbb
adc
add
add
add
xchg
jns
outs
add
add
add
add
add
add
pcmpeqb
adc
add
add
add
mov
movq
adc
add
add
add
mov
jge
dec
add
or
xchg
sbb
sbb
adc
add
add
push
sldt
add
pop
sldt
add
pop
sldt
add
pop
sldt
add
pop
sldt
add
pop
sldt
add
pop
sldt
add
imul
mov
add
add
mov
add
add
lods
sldt
add
xchg
or
add
add
add
add
add
wbinvd
add
mov
or
jns
adc
and
jns
lods
add
add
unpcklps
cmp
fimul
adc
inc
add
adc
dec
add
btr
push
add
(bad)
add
jns
adc
pop
add
(bad)
add
or
rol
add
and
pop
add
adc
add
jns
mov
rol
add
mov
jns
adc
xchg
add
fld
mov
push
adc
add
add
add
adc
jmp
add
add
out
add
add
test
add
test
add
sti
add
add
add
adc
cdq
adc
adc
add
add
add
add
add
adc
add
add
adc
sbb
rcl
and
sbb
loop
inc
add
add
adc
add
add
adc
add
add
inc
add
add
adc
add
add
adc
adc
sub
jns
and
sub
push
adc
xor
jns
and
cmp
jns
and
cmp
pop
adc
dec
add
and
dec
add
inc
add
jns
and
pop
add
inc
add
jns
and
popa
add
add
and
imul
jno
jns
and
add
add
add
mov
jns
test
add
adc
cdq
add
adc
mov
add
add
add
add
add
adc
adc
rol
adc
leave
add
adc
leave
add
adc
leave
add
adc
loope
jns
adc
jmp
add
add
adc
mov
jmp
add
add
adc
add
add
nop
add
add
xchg
add
add
fwait
add
add
add
add
movs
add
add
adc
add
mov
stc
add
mov
add
jle
mov
adc
or
jmp
rol
add
add
add
add
adc
add
jle
loop
inc
add
adc
add
jmp
add
adc
add
not
cmc
add
push
adc
add
add
add
or
adc
adc
add
add
adc
jno
adc
add
add
adc
add
add
adc
xchg
add
add
add
dec
add
add
add
jecxz
test
add
add
push
add
add
pusha
add
add
fs
add
add
add
add
add
add
add
add
adc
fld
jns
adc
or
jns
adc
or
(bad)
adc
adc
jns
ja
sbb
fcom
jg
sbb
jmp
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
test
add
mov
adc
add
add
cmp
and
jne
test
adc
add
add
add
add
add
jns
adc
inc
add
or
mov
add
adc
add
add
adc
add
add
adc
add
cld
adc
add
or
cmp
inc
add
adc
sub
jns
adc
popa
add
add
fld
add
test
add
adc
jno
dec
adc
push
adc
inc
adc
add
imul
or
mov
out
add
add
jns
adc
test
add
add
add
add
add
add
add
jns
adc
mov
add
cmp
rol
adc
jns
daa
add
daa
add
sub
add
push
cs
add
std
add
std
add
add
add
add
add
pop
push
add
add
add
dec
push
add
fadd
std
add
cmp
cs
add
add
sub
inc
add
add
add
xor
rol
rol
xor
xchg
add
xor
xor
xor
mov
mov
mov
push
into
push
aad
fadd
in
jmp
pop
add
add
add
add
push
add
add
add
adc
int
cwde
add
add
adc
jecxz
mov
adc
stc
adc
or
cmps
add
add
add
add
push
cmps
add
add
adc
stc
adc
or
cmps
add
add
add
add
push
cmps
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
stos
push
add
add
add
add
or
xor
add
add
pop
push
add
popa
jae
add
add
add
out
add
add
add
push
add
jle
add
add
add
or
add
add
add
data16
data16
addr16
push
addr16
add
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
outs
ins
jo
outs
outs
je
gs
jne
arpl
popa
outs
popa
addr16
push
jns
je
ins
cs
outs
ins
jo
outs
outs
je
outs
fs
add
outs
je
imul
imul
jae
bound
je
jb
bound
add
imul
jae
bound
je
je
add
outs
outs
je
imul
jne
jo
jb
dec
outs
imul
add
jo
imul
push
gs
imul
add
jae
gs
cs
outs
outs
imul
je
outs
outs
add
je
imul
add
outs
arpl
jae
push
jns
je
ins
cs
imul
imul
arpl
jae
je
jb
dec
outs
outs
add
outs
arpl
jae
imul
jns
add
ins
jo
gs
imul
add
jae
gs
cs
dec
cs
outs
ins
jo
gs
imul
ins
popa
je
push
je
gs
ins
add
imul
imul
je
push
imul
jb
jns
push
jns
je
ins
add
je
imul
imul
je
jb
inc
outs
outs
ins
gs
outs
add
je
add
popa
jb
inc
outs
outs
jbe
jb
add
jne
addr16
bound
je
jb
bound
add
jne
imul
jae
inc
bound
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
arpl
je
outs
outs
add
ins
je
jb
dec
outs
outs
add
jae
gs
cs
ins
outs
bound
imul
add
ins
bound
push
je
ins
gs
dec
inc
imul
ins
add
je
xor
dec
outs
je
xor
dec
gs
outs
jb
push
je
gs
ins
add
jae
gs
cs
dec
add
je
add
jb
popa
ins
add
push
arpl
jae
gs
bound
push
jns
je
ins
cs
gs
arpl
outs
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jne
je
jb
inc
je
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
imul
outs
outs
inc
je
jb
bound
add
jae
ins
bound
popa
ins
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
imul
imul
jae
gs
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
gs
imul
imul
gs
jne
arpl
popa
outs
popa
addr16
push
jns
je
ins
cs
gs
jne
arpl
add
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
ins
push
imul
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
imul
jne
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
inc
jb
jo
outs
push
gs
imul
imul
je
ins
cs
arpl
imul
je
addr16
jo
jns
dec
inc
jb
jo
outs
push
jb
outs
jae
outs
jb
add
ins
ins
gs
imul
imul
je
jb
je
arpl
outs
inc
js
gs
imul
je
ins
cs
arpl
imul
ins
add
inc
push
push
inc
je
jb
bound
add
jb
outs
add
arpl
imul
je
ins
cs
gs
add
outs
imul
je
ins
cs
push
imul
add
outs
je
add
jb
imul
add
fs
add
fs
gs
popa
outs
fs
add
gs
fs
outs
outs
add
je
outs
fs
outs
outs
add
gs
je
add
jb
ins
gs
jb
outs
outs
add
popa
ins
imul
add
jae
gs
cs
gs
arpl
outs
cs
ins
imul
gs
je
jb
inc
imul
ins
popa
addr16
dec
gs
bound
dec
outs
outs
add
outs
je
ins
gs
gs
outs
fs
popa
outs
fs
add
je
outs
fs
popa
jae
add
inc
outs
fs
dec
jo
outs
fs
data16
arpl
imul
imul
jne
je
arpl
je
gs
gs
je
add
jae
outs
arpl
jae
ins
je
inc
jae
outs
arpl
ins
ins
bound
imul
outs
arpl
jb
je
ins
gs
push
jns
je
ins
cs
imul
inc
outs
jb
jae
inc
jne
outs
push
arpl
gs
outs
fs
je
outs
outs
add
ins
jne
outs
push
je
ins
add
outs
je
imul
je
outs
ins
add
outs
je
outs
ins
add
outs
je
outs
ins
inc
outs
ins
ins
arpl
outs
add
ins
outs
addr16
gs
ins
je
inc
outs
arpl
je
ins
add
jb
add
jb
inc
outs
jb
gs
je
ins
add
jb
push
je
jb
push
outs
jae
je
outs
outs
add
jne
je
outs
inc
outs
outs
je
outs
ins
add
gs
add
fs
je
jb
inc
outs
js
push
imul
outs
js
imul
add
ja
je
ins
add
jb
ins
ins
inc
popa
jb
add
jp
push
jns
add
ins
gs
popa
jns
jne
inc
outs
ins
jne
outs
push
je
ins
gs
outs
ins
ins
arpl
outs
add
ins
gs
popa
jns
jne
inc
outs
outs
je
outs
ins
inc
outs
ins
ins
arpl
outs
add
ins
gs
popa
jns
jne
push
popa
outs
gs
add
ins
gs
popa
jns
jne
push
outs
ja
je
ins
gs
outs
ins
ins
arpl
outs
add
je
outs
js
push
gs
inc
outs
js
popa
jae
add
outs
je
outs
je
ins
imul
add
jae
gs
cs
jb
ja
outs
add
popa
add
imul
add
jp
inc
add
gs
je
imul
data16
data16
addr16
push
addr16
jo
jb
imul
gs
bound
outs
outs
inc
je
jb
bound
add
push
gs
jne
arpl
add
jb
xor
push
data16
pushw
addr16
push
addr16
jne
inc
outs
js
add
jb
xor
push
jb
addr16
ins
add
outs
jne
inc
outs
js
add
jb
xor
arpl
xor
popa
xor
xor
xor
xor
xor
xor
aaa
cmp
add
xor
cmp
aaa
xor
cmp
xor
xor
aaa
xor
xor
popa
xor
add
inc
xor
xor
inc
sub
sub
sub
sub
aaa
xor
xor
ss
jge
out
mov
out
mov
add
popf
mov
add
popf
mov
add
popf
mov
add
sahf
add
sahf
add
out
add
sahf
test
out
test
out
xchg
out
xchg
out
mov
out
mov
out
mov
out
mov
out
mov
out
lea
out
mov
out
pop
out
nop
add
sahf
xchg
add
sahf
xchg
add
sahf
xchg
add
sahf
xchg
add
sahf
xchg
add
sahf
xchg
add
sahf
xchg
add
sahf
cwde
add
sahf
cdq
add
sahf
call
sahf
pushf
add
sahf
popf
add
popa
jne
je
outs
jae
popa
outs
arpl
jb
jae
jne
arpl
popa
outs
add
jae
jne
arpl
jne
je
jb
add
ins
jo
outs
outs
je
add
ins
gs
popa
jns
jne
push
popa
outs
gs
add
outs
push
imul
outs
js
ins
popa
bound
push
jb
fs
je
popa
ins
add
gs
push
gs
imul
gs
inc
outs
jo
jb
addr16
bound
inc
outs
ins
jo
outs
jns
popa
ins
add
je
outs
js
gs
jb
jo
imul
jne
je
outs
add
fs
xor
bound
cmp
xor
fs
xor
xor
xor
arpl
cmp
popa
cmp
xor
xor
xor
cmp
xor
xor
aaa
xor
xor
arpl
arpl
xor
xor
xor
cmp
popa
xor
ss
xor
cmp
cmp
gs
xor
xor
xor
xor
xor
xor
xor
arpl
popa
arpl
arpl
cmp
aaa
xor
cmp
arpl
ss
xor
cmp
xor
aaa
bound
cmp
data16
bound
xor
arpl
data16
xor
cmp
xor
cmp
fs
ss
xor
data16
data16
xor
aaa
xor
xor
cmp
popa
bound
cmp
xor
aaa
add
dec
cmp
cmp
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
arpl
add
arpl
outs
jb
addr16
inc
gs
jne
je
addr16
push
gs
jne
arpl
popa
outs
popa
addr16
addr16
inc
jne
je
jb
add
je
inc
jne
je
jb
add
je
push
je
imul
jae
outs
jae
add
imul
inc
outs
ins
jo
outs
outs
je
addr16
inc
jae
gs
bound
imul
pop
inc
jae
gs
bound
gs
imul
pop
inc
jae
gs
bound
gs
jb
jo
imul
pop
inc
jae
gs
bound
jb
fs
je
addr16
inc
jae
gs
bound
outs
jo
jb
addr16
je
inc
jae
gs
bound
outs
ins
jo
outs
jns
dec
popa
imul
xor
xor
cmp
cmp
arpl
gs
xor
aaa
ss
arpl
xor
xor
arpl
xor
xor
cmp
xor
xor
cmp
bound
aaa
cmp
arpl
xor
xor
bound
xor
xor
popa
xor
xor
popa
data16
cmp
arpl
arpl
add
bound
bound
bound
xor
bound
arpl
cmp
xor
aaa
xor
add
xor
popa
bound
cmp
fs
bound
cmp
bound
aaa
xor
add
xor
cmp
xor
xor
fs
xor
cmp
xor
data16
bound
arpl
add
imul
add
fs
outs
jbe
imul
outs
jbe
imul
je
add
ins
jne
add
jo
jae
outs
add
xor
aaa
xor
xor
cmp
xor
xor
bound
arpl
xor
bound
add
xor
cmp
cmp
xor
xor
bound
xor
cmp
xor
xor
cmp
cmp
xor
aaa
arpl
xor
fs
xor
aaa
xor
arpl
xor
popa
add
dec
cmp
imul
inc
outs
fs
outs
imul
jb
outs
imul
popa
jb
add
je
inc
jb
popa
je
dec
outs
push
imul
gs
push
imul
jns
add
je
inc
imul
jae
je
inc
jb
jne
outs
je
add
je
popa
ins
jne
add
jbe
jb
add
je
jns
gs
inc
jb
ins
inc
popa
jae
ss
je
imul
jae
add
je
inc
popa
jo
arpl
jns
push
outs
inc
jb
popa
jns
inc
gs
imul
imul
je
outs
jae
outs
outs
add
popa
fs
jns
add
popa
add
je
dec
outs
addr16
add
je
push
outs
jae
je
outs
outs
add
je
push
outs
jae
je
outs
outs
add
imul
jb
outs
arpl
jno
popa
ins
jae
push
outs
push
je
imul
inc
js
arpl
imul
ins
bound
inc
gs
jne
je
ins
inc
je
jb
bound
gs
addr16
inc
outs
fs
popa
jae
add
je
popa
ins
add
je
popa
outs
imul
jae
jne
arpl
je
gs
ins
add
je
inc
jne
ins
dec
popa
ins
add
je
inc
outs
ins
jo
outs
jns
addr16
inc
outs
jo
jb
addr16
je
inc
gs
jb
jo
imul
pop
push
gs
imul
pop
push
jb
fs
je
addr16
push
imul
push
je
imul
dec
bound
arpl
gs
dec
outs
jo
je
ins
outs
arpl
imul
pop
dec
jne
jo
je
ins
outs
arpl
imul
outs
jae
outs
jb
inc
ins
outs
arpl
push
jb
outs
jae
outs
jb
inc
imul
arpl
jae
je
dec
push
add
je
dec
gs
inc
jb
popa
je
inc
arpl
jo
outs
jb
inc
outs
jb
popa
je
outs
jo
dec
outs
gs
popa
ins
imul
popa
je
inc
ins
jo
jns
dec
outs
je
jb
add
fs
data16
bound
jb
outs
add
je
inc
push
addr16
push
push
inc
cmp
addr16
push
outs
imul
outs
je
jb
inc
js
je
inc
gs
jns
gs
jb
ins
dec
popa
outs
fs
add
je
inc
jae
gs
bound
inc
gs
outs
fs
gs
addr16
dec
outs
fs
gs
popa
outs
fs
add
jae
ins
jbe
push
jns
gs
popa
outs
fs
add
jae
ins
jbe
dec
gs
outs
fs
popa
outs
fs
add
je
imul
gs
inc
imul
add
je
push
gs
jb
push
jns
add
gs
je
inc
gs
gs
je
add
je
push
popa
jb
ins
gs
jb
jns
add
je
dec
inc
outs
gs
je
jb
inc
ins
imul
popa
ins
add
fs
imul
inc
outs
add
dec
outs
je
xor
inc
gs
gs
outs
fs
jb
ins
dec
popa
outs
fs
add
je
dec
jae
je
je
arpl
inc
gs
popa
jb
ins
gs
jb
add
jb
pop
xor
dec
fs
jb
pop
xor
dec
fs
jb
pop
xor
dec
fs
jb
pop
xor
dec
fs
jb
pop
push
add
ins
ins
add
ins
ins
jbe
jb
add
je
jae
je
inc
imul
jae
ins
je
jae
je
inc
jne
outs
push
arpl
gs
outs
fs
je
inc
jne
outs
push
arpl
gs
imul
outs
jae
jae
je
push
gs
add
jae
outs
fs
popa
jns
jne
add
je
inc
outs
arpl
jae
je
dec
outs
arpl
imul
pop
dec
popa
ins
add
je
push
imul
pop
push
popa
bound
fs
jae
je
dec
popa
jb
imul
dec
popa
js
ins
jne
push
imul
pop
push
popa
bound
outs
jo
jae
je
inc
outs
arpl
jb
addr16
inc
outs
outs
je
outs
ins
jae
jae
je
push
popa
fs
jne
gs
popa
jns
jne
add
jb
outs
jb
dec
popa
jns
jne
add
add
je
inc
arpl
jo
inc
jne
je
outs
add
je
inc
ins
imul
add
je
inc
outs
jb
inc
outs
jb
gs
je
ins
add
je
dec
popa
js
ins
imul
jae
je
dec
imul
inc
outs
js
jae
je
push
push
outs
outs
add
je
push
push
push
popa
jae
bound
add
je
push
je
jb
push
outs
jae
je
outs
outs
add
je
push
gs
inc
ins
imul
pop
dec
ins
popa
add
je
push
imul
add
je
inc
outs
ins
jne
outs
inc
outs
jne
je
addr16
inc
outs
ins
jne
outs
push
je
ins
gs
jae
je
push
outs
ja
outs
jne
je
addr16
push
outs
ja
je
ins
gs
push
gs
outs
ja
jo
outs
add
je
push
arpl
ins
ins
inc
popa
jb
add
je
dec
jne
je
ins
imul
pop
push
gs
fs
outs
ins
jns
inc
gs
jne
je
inc
jne
je
jb
add
jb
outs
xor
inc
jae
gs
bound
imul
gs
bound
gs
imul
gs
bound
gs
jb
jo
imul
gs
bound
jb
fs
je
inc
jae
gs
bound
outs
jo
jb
addr16
jae
ins
bound
outs
ins
jo
outs
jns
ins
jae
outs
jb
imul
data16
data16
addr16
push
addr16
jne
inc
outs
js
cs
jae
jne
arpl
add
data16
data16
addr16
push
addr16
jne
inc
outs
js
cs
jae
jne
arpl
add
data16
data16
addr16
push
addr16
jo
jb
imul
outs
jne
arpl
cs
jae
jne
arpl
add
data16
data16
addr16
push
addr16
add
add
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
add
ins
add
xor
push
add
add
ins
add
xor
push
add
add
imul
pop
push
add
bound
ins
add
arpl
dec
add
jns
push
add
imul
add
cmp
add
bound
ins
add
arpl
imul
add
je
outs
add
add
cmp
add
inc
add
add
xor
xor
xor
inc
add
add
add
add
xor
aaa
add
sub
add
add
add
add
xor
xor
aaa
add
add
cmp
xor
cmp
add
jge
add
and
add
movs
xor
scas
dec
mov
mov
leave
pop
add
or
xor
mov
mov
pop
jg
aad
cmp
and
add
add
add
add
or
add
push
add
rol
adc
add
add
ins
add
add
add
add
add
and
push
add
add
or
add
push
adc
sbb
pop
add
sbb
or
add
mov
add
or
sbb
and
adc
jns
push
and
add
xor
adc
sbb
or
add
add
and
adc
add
sbb
adc
and
push
push
sbb
and
sbb
push
add
xchg
or
add
add
add
add
sbb
and
add
push
push
and
adc
add
or
add
push
sbb
and
add
push
and
add
xor
push
add
sbb
and
adc
adc
add
adc
push
sbb
add
add
or
push
push
push
and
or
adc
and
sbb
add
adc
and
add
and
or
and
sbb
add
add
sbb
add
sbb
and
add
push
and
adc
push
or
add
add
and
or
add
or
sbb
or
adc
add
rol
adc
or
push
add
add
add
adc
add
adc
ins
add
adc
add
adc
cmp
sbb
test
push
sbb
add
or
adc
add
adc
add
adc
add
adc
push
adc
push
adc
adc
push
adc
adc
push
adc
adc
push
adc
adc
push
adc
adc
push
adc
adc
push
adc
adc
push
adc
adc
add
push
adc
adc
add
adc
sbb
push
adc
sub
add
adc
xor
push
adc
add
push
adc
or
push
adc
adc
and
add
push
push
and
add
add
adc
and
add
sub
sub
adc
or
add
adc
add
add
push
sbb
add
add
inc
add
or
push
add
popa
push
add
or
adc
and
add
add
add
push
push
add
add
pop
and
or
and
or
add
or
and
add
add
add
add
xchg
or
add
add
lods
push
and
adc
add
or
push
adc
push
push
adc
and
sbb
or
add
or
add
or
add
and
add
push
push
sbb
add
add
push
add
sbb
and
or
add
or
add
push
add
add
or
stc
pop
and
push
sbb
add
add
add
adc
add
adc
adc
adc
adc
add
sbb
and
and
sbb
add
and
sbb
add
adc
adc
add
adc
and
and
adc
adc
push
and
add
and
and
adc
add
add
push
add
add
add
or
add
sbb
add
push
and
sbb
push
adc
add
sbb
push
and
add
add
and
add
sbb
and
add
xor
adc
add
cmp
xchg
push
and
add
adc
and
add
and
and
add
and
or
or
push
and
add
sub
adc
or
or
or
int
and
adc
adc
add
adc
push
and
add
add
or
add
or
add
add
pop
add
dec
dec
imul
je
push
imul
jne
imul
outs
jb
cs
gs
imul
imul
gs
imul
ins
gs
imul
popa
je
jb
xor
xor
xor
xor
add
add
push
jns
je
ins
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
add
add
add
add
and
add
inc
outs
jo
jb
addr16
and
arpl
jae
data16
xor
xor
add
add
add
add
and
data16
data16
addr16
push
addr16
add
dec
imul
je
add
add
pop
add
add
add
add
or
add
add
or
add
xor
xor
xor
xor
add
add
and
xor
xor
fs
xor
sub
sub
sub
xor
xor
add
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
or
pop
add
add
add
add
add
ins
add
add
add
add
add
add
or
pop
add
sbb
xor
sbb
pop
add
sub
add
sbb
add
add
push
add
add
or
pop
push
push
or
or
pop
add
add
adc
pop
or
sbb
add
adc
sbb
add
sbb
add
adc
adc
push
add
xor
and
adc
or
sbb
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
imul
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
inc
inc
push
inc
inc
pop
push
adc
add
add
push
add
add
ins
add
add
push
add
arpl
je
jne
jb
add
outs
add
add
ins
add
add
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
imul
dec
inc
or
add
or
add
add
add
push
or
add
add
pop
mov
push
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
jo
dec
inc
inc
push
js
in
mov
mov
out
mov
adc
mov
jp
add
ja
mov
or
push
mov
neg
pop
mov
(bad)
cwde
pop
dec
xor
mov
fcmovu
jnp
jle
add
into
repz
inc
test
pop
jnp
gs
ins
and
mov
test
test
push
jbe
outs
mov
mov
addr16
(bad)
neg
mov
in
in
iret
or
lahf
mov
cmp
ja
into
outs
mov
fcmovnu
mov
cmp
(bad)
outs
mov
ins
mov
lods
mov
out
aad
aad
outs
inc
push
push
(bad)
imul
stc
scas
jg
jmp
(bad)
div
sti
sti
(bad)
dec
add
pop
ds
cmps
lock
(bad)
jle
ud2
push
je
inc
pop
test
aad
jne
pop
mov
mov
imul
fnsave
outs
xchg
into
jbe
lods
fld
mov
clc
xor
or
fbstp
cdq
popa
mov
push
fwait
stos
push
(bad)
push
sub
mov
hlt
cmps
mov
out
(bad)
ja
fild
sub
pop
int
scas
shr
mov
cmp
rcr
outs
adc
fst
jbe
sub
enter
sbb
(bad)
jbe
in
ins
ja
js
leave
push
push
mov
fstp
aad
xchg
fcom
pop
pop
cld
fldenv
std
sbb
int
jle
jb
xor
mov
frstor
sbb
or
pop
xchg
xor
jnp
les
dec
pop
inc
inc
add
add
mov
jmp
sbb
add
retf
xchg
aas
cld
loope
call
pop
add
xchg
xchg
into
loopne
cmps
xchg
sar
adc
jne
mov
cmp
and
mov
cmp
adc
retf
iret
and
es
add
or
scas
push
(bad)
sub
cmp
loope
aad
mov
mov
test
aam
or
fwait
mov
sbb
outs
adc
mov
out
push
push
movs
dec
inc
cdq
sub
js
loopne
shl
je
cmp
fs
pop
mov
aad
neg
jg
or
(bad)
dec
xchg
movs
repnz
mov
pop
sub
retf
xor
rcl
jmp
cmp
dec
push
shl
mov
push
rol
leave
mov
xchg
jmp
fadd
fcomp
clc
sti
(bad)
push
jo
addr16
and
aad
xchg
mov
imul
fisubr
lods
mov
popa
or
test
or
push
popa
loope
and
mov
dec
jne
adc
dec
in
lds
mov
mov
dec
sahf
imul
jae
retf
sub
pop
stos
(bad)
adc
mov
pop
ins
cdq
xchg
mov
jae
lock
scas
loopne
pop
nop
adc
or
jge
lods
mov
and
repz
or
fisttp
aas
cld
inc
jo
test
jns
fcom
retf
sub
pop
movs
push
out
xor
cmp
adc
mov
dec
pop
dec
(bad)
cmp
aaa
inc
add
add
add
jl
lods
mov
fist
push
cmps
sub
xchg
push
retf
xchg
fdivr
mov
mov
sub
xchg
stos
sub
cmp
lods
xor
inc
fwait
scas
aad
adc
mov
or
adc
sbb
xchg
outs
ror
inc
sub
bound
dec
mov
mov
in
fpatan
in
mov
mov
and
sub
jmp
add
mov
dec
mov
or
add
cmp
jae
shr
pop
adc
(bad)
and
lods
jp
pop
adc
pop
jl
and
std
mov
dec
mov
push
ret
and
int
mov
mov
aaa
adc
pop
cwde
dec
retf
outs
mov
mov
mov
inc
lods
aaa
sbb
jecxz
xor
fistp
cmp
add
mov
(bad)
enter
dec
lock
add
and
cmp
fcom
inc
jp
mov
mov
inc
adc
in
pop
jge
aad
dec
ins
push
hlt
and
jae
jmp
add
sahf
inc
dec
dec
fmul
call
test
mov
xchg
jo
fidivr
sahf
scas
mov
test
mov
arpl
jo
xchg
out
(bad)
mov
dec
cmp
cmp
jmp
popa
lods
pop
movs
push
mul
sti
popf
ja
stc
cli
jmp
mov
out
inc
sub
add
inc
cmp
test
sahf
cwde
enter
inc
les
sub
pop
sbb
cld
lods
shl
push
or
or
cs
and
fisub
sub
xor
inc
sub
jmp
or
or
push
xchg
pop
push
sbb
test
push
test
push
jmp
and
in
es
inc
jp
mov
fwait
in
ins
movs
xchg
inc
cdq
adc
scas
and
lods
lea
jg
xchg
pop
jle
fmul
mov
mov
mov
js
mov
fidiv
js
push
mov
push
mov
mov
arpl
test
inc
push
adc
xor
imul
daa
mov
add
dec
cmp
lods
nop
and
xchg
mov
jecxz
ins
jno
rol
je
lock
clc
add
push
cmps
test
cmp
inc
fcom
and
jo
xor
ja
test
mov
push
jmp
lods
in
push
pop
pop
cli
stc
out
inc
inc
enter
gs
push
add
mov
dec
or
jl
loop
mov
(bad)
(bad)
pop
cmp
call
adc
pop
mov
arpl
sub
or
sub
test
xchg
dec
push
xchg
les
lods
test
movs
mov
test
lods
enter
inc
mov
in
pop
xor
ficom
mov
ret
aad
clc
mov
loopne
lds
jnp
sub
(bad)
imul
xchg
mov
push
call
lds
(bad)
mov
mov
mov
mov
jbe
cmps
lahf
jle
xchg
ins
jno
stc
dec
sub
icebp
(bad)
lods
pop
mov
icebp
out
fwait
scas
mov
xlat
scas
pop
jg
xchg
push
cmp
(bad)
sub
rol
je
jle
fdiv
sar
cmc
arpl
mov
push
test
mov
jo
jb
bound
xlat
cmps
dec
or
jne
stos
cmp
es
mov
mov
xchg
dec
ds
pop
dec
and
mov
and
out
mov
fld
push
or
les
pop
rol
inc
jae
or
scas
stos
stos
ret
ja
xor
mov
inc
ror
mov
lock
je
mov
mov
push
jns
xchg
das
(bad)
iret
ret
(bad)
pop
sar
mov
cld
icebp
mov
mov
mov
xlat
inc
jae
cmp
mov
jg
lods
pop
or
ds
cmp
and
out
push
jnp
and
dec
jo
adc
xor
(bad)
sbb
jl
and
leave
imul
(bad)
loop
pop
shl
pop
pop
mov
push
inc
out
inc
or
hlt
rol
popf
cwde
(bad)
out
outs
jb
mov
push
adc
fwait
shr
mov
call
jns
nop
retf
dec
stos
out
aad
mov
jge
pushf
add
bound
xor
ins
fnstenv
push
add
cmp
inc
js
add
xchg
add
sbb
or
cwde
push
adc
adc
adc
inc
sbb
call
js
push
push
push
dec
call
sub
movs
sub
repnz
leave
es
pop
jae
sub
or
data16
lods
popa
sti
sahf
adc
xchg
pop
or
mov
xchg
push
call
jle
int3
cdq
mov
xchg
outs
packssdw
inc
pop
xchg
in
mov
dec
jge
mov
les
xor
pop
pop
push
mov
mov
sub
mov
mov
std
adc
lods
mov
popa
sti
loope
add
push
pmulhw
stos
add
jmp
cdq
jo
push
mov
xchg
rcr
xchg
(bad)
jne
inc
push
mov
ja
mov
jae
push
xor
pusha
inc
inc
inc
rol
ins
adc
mov
mov
inc
pushf
jae
je
xchg
cmp
movs
daa
lock
cmps
dec
lahf
mov
sub
mov
retf
arpl
lods
ja
(bad)
xchg
enter
repz
scas
test
push
sbb
dec
sahf
out
addr16
gs
cmp
pop
add
sbb
push
add
adc
icebp
mov
dec
dec
cmp
xor
jb
mov
ficom
scas
lahf
add
out
sub
and
test
call
mov
fisttp
scas
lea
aas
(bad)
push
es
lods
sbb
xor
cmp
inc
jo
adc
hlt
les
push
push
pusha
add
mov
les
outs
inc
cmp
sbb
sahf
mov
xchg
and
sub
add
sbb
dec
mov
dec
ror
xor
dec
sub
jo
push
lods
int
xchg
mov
bound
dec
int
pop
pop
sbb
xorps
inc
mov
punpckhbw
jp
mov
loop
or
dec
jp
xchg
fimul
aad
in
retf
out
cmp
loop
outs
inc
mov
mov
cwde
adc
popa
adc
sbb
test
mov
ret
dec
dec
jns
xor
addr16
push
add
cmp
mov
loopne
loope
es
(bad)
push
mov
adc
rcl
push
sbb
jne
inc
ins
push
mov
movups
ds
popa
inc
clc
ret
into
aad
push
push
outs
pusha
mov
pop
aas
sbb
test
and
daa
add
mov
mov
xchg
dec
xor
sub
xchg
stos
(bad)
stos
sbb
ins
popa
or
jo
lds
xor
mov
push
ror
lods
sub
lods
imul
add
sbb
mov
loopne
das
push
add
mov
adc
and
add
push
cli
addr16
lea
push
add
in
lds
ins
nop
call
mov
push
mov
pop
mov
push
(bad)
ja
cmp
mov
gs
adc
das
add
jo
daa
add
cdq
adc
xchg
jmp
adc
outs
sbb
lods
js
sbb
int3
test
cs
lods
add
xor
shr
ret
cmp
adc
cmp
push
or
test
mov
aaa
pop
sub
mov
fisubr
or
iretw
sahf
lods
in
test
pop
push
mov
icebp
adc
repz
outs
dec
sbb
sub
je
adc
clc
dec
lock
dec
or
or
add
or
sub
xor
aad
imul
test
(bad)
cmps
xchg
rcr
pop
xchg
xor
fistp
mov
or
in
sbb
push
pop
or
mov
adc
push
retf
shl
leave
jmp
mov
push
aaa
xlat
inc
mov
out
lods
leave
in
mov
mov
mov
mov
cli
retf
sbb
xchg
test
cmps
jo
aas
or
bound
loope
and
xchg
push
add
pop
mov
test
mov
arpl
or
pop
imul
push
xor
ret
aam
push
adc
loope
mov
mov
iret
mov
(bad)
push
inc
fwait
or
sub
pop
and
push
and
sub
imul
sbb
dec
or
or
cmp
into
dec
pop
pop
xchg
(bad)
pop
test
jo
cld
and
clc
ret
int3
lahf
dec
lods
jg
mov
fisub
inc
repnz
stos
retf
mov
scas
mov
pop
jae
adc
int
push
test
or
push
push
sar
xor
jle
in
lahf
add
xchg
jo
xchg
mov
add
mov
iret
iret
push
xchg
xor
fsub
cmp
push
sbb
xchg
inc
test
rcl
adc
add
retf
dec
popf
push
mov
jne
div
add
sub
inc
pop
add
dec
imul
or
das
aaa
ret
in
push
xchg
add
add
in
pop
jne
jns
retf
movs
mov
clc
stos
sub
mov
fnstsw
cmp
push
push
xor
sub
inc
ins
pop
xacquire
mov
mov
push
xor
mov
popa
bound
inc
clc
cld
pop
stos
pop
jae
inc
mov
or
inc
dec
pop
in
in
enter
addr16
lods
jg
add
mov
sub
(bad)
in
fs
ffreep
movs
ss
lods
sub
pop
xchg
sbb
pop
clc
stos
sub
int
movs
scas
push
cld
stc
sub
push
push
ret
popf
mov
in
cmp
xor
adc
fdivr
xchg
retf
(bad)
scas
or
adc
jne
mov
mov
pop
test
fwait
dec
int
sbb
jne
xor
pop
daa
test
hlt
push
mov
adc
adc
aas
jb
rcr
pop
aam
shr
xor
mov
shr
outs
imul
pop
xchg
lods
and
xor
imul
cmp
xchg
(bad)
sub
xchg
add
pop
mov
adc
fist
not
cmc
xchg
jbe
shr
pop
mov
and
push
scas
pop
cmp
sbb
out
daa
adc
mov
cmp
inc
test
push
push
inc
aaa
push
pop
inc
clc
stos
sub
adc
mov
sub
xlat
mov
sbb
iret
inc
inc
clc
inc
enter
jle
mov
(bad)
dec
js
adc
cmp
sar
daa
xor
sbb
xor
les
mov
push
adc
mov
cld
sub
jae
add
daa
(bad)
sbb
mov
adc
ins
pushf
ss
fsubp
movs
push
out
out
push
adc
test
add
pop
inc
sub
shr
pop
aas
sub
(bad)
xor
jno
cmp
mov
dec
pop
push
adc
add
aad
xchg
sbb
out
loope
test
inc
stos
and
pop
jl
cmp
iret
adc
out
repz
cld
jne
pop
sbb
mov
daa
in
push
pop
sbb
inc
dec
dec
dec
xchg
cwde
pop
pop
int3
sbb
mov
daa
cmp
dec
push
add
sub
test
sub
xor
pop
and
inc
test
pushf
mov
and
fistp
inc
adc
retf
fwait
int3
dec
fstp
arpl
or
jge
pop
adc
cmp
sbb
add
or
call
popf
movs
add
inc
xor
cmp
ror
xchg
xor
dec
sub
and
ret
ins
mov
stos
clc
mov
push
movs
sbb
cdq
sbb
jle
outs
cld
out
and
fadd
push
xchg
cmps
jle
push
movs
push
lods
and
pop
test
enter
sub
push
(bad)
and
xor
mov
fimul
ret
or
imul
outs
fidivr
push
adc
scas
mov
retf
in
dec
add
jmp
lods
sbb
mov
clc
mov
shl
test
sub
lock
inc
add
jbe
mov
jae
xchg
cdq
sub
push
sbb
test
test
cmps
enter
shl
loop
push
pop
add
jno
jecxz
push
fiadd
stos
test
dec
pop
mov
call
jge
sar
mov
adc
push
push
stc
xchg
cmp
cmp
pop
dec
out
fnstsw
add
(bad)
and
mov
xor
call
cmp
and
sbb
mov
in
nop
popa
int
retf
and
movs
push
add
xchg
xchg
push
fisttp
(bad)
pop
inc
inc
aas
pop
inc
fwait
pusha
int
sbb
xchg
mov
into
call
jle
pop
pop
dec
lea
aad
out
repz
jmp
stc
retf
mov
push
pop
lods
push
mov
cmc
aam
push
jno
leave
xor
inc
test
popf
fisttp
dec
ss
data16
jmp
les
test
stc
je
std
cmp
dec
cmp
adc
pop
and
xchg
dec
shl
retf
je
sub
xor
mov
repnz
dec
test
sbb
je
std
fadd
fst
cs
and
(bad)
test
ret
mov
add
cmp
ss
aas
ret
dec
inc
mov
mov
or
es
lea
add
(bad)
stc
xor
mov
push
cmc
shld
mov
jmp
rcr
add
cmp
adc
sub
dec
cmp
mov
dec
gs
mov
xor
dec
cmp
iret
and
outs
psubsw
(bad)
js
ret
or
lods
xchg
mov
mov
jl
movs
sub
or
mov
in
xor
in
mov
mov
and
iret
pop
shl
add
or
sbb
arpl
(bad)
je
cmp
and
push
aas
mov
das
jge
add
gs
(bad)
mov
aam
test
mov
push
aad
test
shl
mov
and
daa
pop
std
inc
mov
aam
cmp
pop
sahf
and
sub
ss
popf
mov
or
mov
or
mov
jae
xor
adc
cwde
cmps
sahf
lods
ss
cmps
leave
loope
in
sbb
jp
inc
push
push
out
(bad)
xchg
mov
pop
push
movups
sub
or
daa
es
sbb
stc
bound
jl
xor
shl
adc
xchg
pop
ja
loopne
nop
sbb
psraw
xor
inc
sbb
inc
sub
inc
mov
leave
xor
rcl
mov
loop
adc
ficom
adc
scas
mov
daa
das
mov
jb
fst
in
ret
mov
mov
js
xor
inc
fwait
xchg
into
pusha
rol
jne
into
scas
inc
mov
(bad)
xchg
dec
cmp
push
dec
(bad)
mov
repz
xchg
dec
shl
aaa
rol
call
mov
sub
adc
mov
lods
pop
cmp
sub
gs
xor
out
sbb
adc
mov
sahf
jnp
imul
ds
fisttp
xor
cmc
cmp
pop
jmp
push
pop
adc
mov
jae
xchg
jmp
jle
sub
aam
movs
into
mov
clc
pop
cmc
js
adc
js
and
in
ret
sbb
fcomp
(bad)
sahf
sub
add
add
mov
add
push
or
push
add
jp
adc
addr16
in
das
or
push
ret
out
movs
push
sub
push
aad
dec
cmps
jno
mov
loope
xchg
and
aam
cmp
or
(bad)
xlat
mov
pop
cwde
push
jmp
rol
adc
cmc
loope
cmc
xor
pop
push
cmc
test
push
mov
jno
inc
lahf
ds
addr16
call
cwde
ficom
jbe
iret
arpl
div
jecxz
lea
add
add
pop
jnp
or
aaa
repz
test
mov
jne
cmp
scas
test
scas
add
and
sbb
dec
xchg
dec
xor
push
rcr
outs
dec
cmp
push
push
sub
and
sahf
push
cmp
ds
cmp
adc
test
or
add
inc
jecxz
push
inc
in
jge
fucomi
xchg
pop
and
mov
ins
push
cmps
sti
test
or
cmc
xor
push
jl
scas
sbb
cmp
cmp
push
leave
outs
test
in
jecxz
(bad)
mov
lods
jnp
mov
fisub
fdivr
push
unpcklps
int3
xor
fdivrp
push
cmps
push
cs
and
pop
inc
push
add
pop
pop
or
inc
cmp
xchg
leave
adc
loop
mov
xchg
mov
push
mov
pop
dec
lods
mov
xchg
mov
dec
pop
jge
pop
push
inc
mov
out
int
(bad)
cmp
and
inc
sub
stos
add
call
dec
push
push
cmpxchg
inc
add
dec
pusha
pop
xor
test
jns
sub
cmp
in
and
adc
cmp
mov
sbb
stos
xchg
adc
and
cmp
or
xor
push
mov
adc
ret
pop
cld
aam
xor
sbb
mov
adc
imul
mov
mov
or
int
(bad)
pop
cmp
cmp
cmp
or
mov
push
mov
xor
sahf
and
aam
jns
cmp
xchg
les
push
cmp
or
jb
jmp
cli
mov
out
adc
cmps
lods
cli
data16
and
iret
and
and
xchg
(bad)
dec
push
jp
es
cmp
push
aas
out
add
in
pop
fst
outs
hlt
sbb
cli
mov
sahf
cdq
cmp
mov
loope
gs
setl
jecxz
xchg
inc
add
mov
xor
into
(bad)
outs
jg
jl
rcl
adc
jo
cld
push
je
clc
add
popa
outs
or
jo
add
or
pop
outs
mov
pop
(bad)
mul
fisub
or
prefetchnta
jne
sbb
(bad)
cmp
inc
loop
inc
pusha
lea
inc
cmps
fld
fsub
ret
xchg
mov
sbb
inc
sub
xor
inc
xor
mov
scas
mov
daa
sti
xchg
sbb
xchg
or
sahf
sub
mov
lea
aaa
mov
inc
mov
xor
gs
push
sub
fnsave
cdq
out
mov
idiv
dec
and
lds
and
in
nop
icebp
mov
iret
js
(bad)
mov
cmps
or
jns
add
xor
mov
dec
add
test
and
(bad)
push
jmp
jb
xor
pop
hlt
push
es
outs
dec
and
pop
mov
das
call
test
out
jl
cwde
aaa
(bad)
xor
mov
add
cmps
test
jnp
sbb
fmul
xchg
(bad)
int
cmp
xchg
dec
lds
sub
(bad)
adc
out
(bad)
int3
pop
cld
(bad)
loop
psrld
test
mov
icebp
jbe
xchg
push
push
push
cmp
test
sub
adc
jg
lods
mov
loop
int
cmp
inc
and
inc
jmp
mov
stc
lods
leave
sub
movs
lods
clc
jo
out
cdq
leave
out
es
push
and
addr16
popa
stos
inc
push
pop
retf
int3
loope
jno
out
into
push
imul
jns
push
sub
jecxz
xchg
leave
inc
rol
test
int3
mov
or
pop
out
mov
or
adc
lea
iret
sbb
adc
cmp
jmp
idiv
push
mov
push
push
data16
daa
adc
bound
ret
daa
sbb
sub
loope
add
mov
js
cmp
pop
js
mov
cs
push
(bad)
inc
fcomp
push
xor
cmp
retf
out
mov
pop
(bad)
rep
mov
fs
add
fist
sar
dec
pop
xchg
sub
push
repz
dec
icebp
cmps
lds
pushf
and
add
sbb
sub
and
mov
inc
ror
dec
sar
adc
pop
xor
sbb
or
xchg
repz
jmp
outs
fidiv
inc
in
pop
mov
out
cmps
and
mov
push
orps
arpl
push
pushf
pop
mov
cmp
call
(bad)
adc
xor
pop
inc
add
rcl
mov
(bad)
jg
push
clc
out
mov
pop
ja
fisttp
fcom
cmps
xchg
outs
sub
push
or
pop
jne
xor
(bad)
adc
popa
ror
mov
rol
std
pop
hlt
das
call
mov
mov
stc
out
test
cli
push
shl
add
enter
dec
in
in
leavew
and
sbb
jp
mov
outs
cmp
movs
xchg
pop
fcom
pop
lahf
sub
test
add
xchg
jp
jmp
neg
pop
scas
loopne
cmc
out
enter
mov
inc
(bad)
mov
int3
fwait
jne
ficomp
mov
inc
or
in
into
fstp
test
nop
imul
inc
cs
jl
add
push
sbb
outs
dec
inc
inc
lods
arpl
or
xchg
sbb
mov
ror
neg
aas
jmp
loop
sbb
nop
mov
mov
popa
cmp
in
(bad)
and
enter
inc
xor
jmp
mov
inc
mov
push
sbb
push
jnp
cmc
adc
(bad)
xor
popa
or
inc
std
dec
xor
inc
test
hlt
add
int
push
inc
repz
mov
fisttp
push
movs
and
sub
xor
mov
retf
pop
push
xadd
inc
sub
loope
and
lahf
sbb
aas
pop
mov
sub
call
movs
pop
aad
mov
sub
pop
sub
inc
sbb
leave
rcl
rcr
bound
(bad)
shl
fstp
mov
(bad)
loop
adc
add
add
cmp
imul
jg
pop
icebp
push
js
je
je
(bad)
std
icebp
dec
jo
aas
ins
sbb
pop
mov
pop
sub
into
pop
or
sar
call
xchg
lds
lods
xchg
mov
and
pop
xchg
ss
mov
mov
test
sub
out
imul
push
or
mov
out
mov
mul
mov
jnp
mov
adc
cli
dec
sbb
pushf
nop
nop
add
inc
test
push
jmp
jae
sub
mov
xchg
popf
or
jae
sar
fiadd
div
xor
icebp
inc
cld
adc
icebp
dec
jge
mov
fsubr
cdq
mov
es
retf
sahf
xor
pop
inc
lahf
shl
popa
cmp
in
nop
jl
aas
ret
retf
fstp
fistp
addr16
das
jge
mov
not
jo
rcr
dec
adc
in
add
adc
adc
mov
mov
jp
jb
(bad)
pop
inc
inc
push
cwde
lahf
jl
out
xchg
jmp
and
pop
push
push
add
mov
cmc
or
popf
cmp
stos
xchg
mov
outs
lods
add
sti
aad
mov
fist
xchg
jmp
icebp
sub
fcom
jo
jmp
idiv
sti
int
jbe
pop
out
loope
push
sub
sbb
cmps
adc
imul
cs
ds
xchg
rcr
mov
sub
push
mov
mov
fstp
push
jmp
in
mov
push
loopne
in
xchg
in
je
ds
or
(bad)
scas
enter
dec
int
pop
(bad)
jmp
mov
sahf
jmp
mov
comiss
mov
(bad)
punpckhdq
sub
push
xchg
jl
rcl
sti
stos
(bad)
(bad)
sbb
icebp
cmp
inc
adc
jae
jbe
pop
dec
jle
sub
or
and
rcl
fdiv
xor
or
addr16
sbb
mov
repnz
mov
ror
outs
ja
dec
mov
cld
call
or
jo
(bad)
lea
mov
jae
sbb
scas
(bad)
mov
xchg
fs
jg
cli
aas
outs
pop
cli
out
xchg
comiss
div
fld
ins
jmp
aam
cmp
pop
jp
(bad)
sti
imul
je
pop
xchg
hlt
jmp
cld
pop
out
mov
pop
cmp
push
adc
aam
(bad)
jg
inc
jbe
sbb
iret
nop
arpl
sub
mov
arpl
mov
leave
and
sub
sub
pop
push
pop
inc
bound
cmc
in
icebp
xor
jg
addr16
(bad)
xlat
mov
int3
fcom
loope
mov
jle
jo
loopne
sti
fidivr
fistp
xchg
stc
ret
popf
test
aaa
out
int
mov
cli
sbb
repz
push
jge
fnop
mov
dec
iret
jnp
add
dec
idiv
inc
xlat
sub
dec
jp
cmps
call
(bad)
xchg
in
jmp
mov
mov
fstp
push
cli
dec
es
retf
arpl
inc
jae
ins
add
or
arpl
leave
div
(bad)
ja
retf
fstp
shl
nop
add
mov
xchg
add
mov
les
repnz
scas
push
jge
icebp
adc
(bad)
cmp
(bad)
pusha
inc
rcl
(bad)
cwde
jb
pusha
idiv
xor
mov
jae
(bad)
jnp
loope
addr16
fistp
in
icebp
into
ja
cmp
(bad)
test
shl
(bad)
mov
shl
sbb
and
das
aad
xor
or
out
xor
add
in
and
sbb
adc
and
call
sub
test
leave
js
retf
mov
jl
jb
ret
jecxz
pop
sbb
cld
lock
ret
ret
mov
ret
fwait
push
push
stos
jge
lock
jl
outs
jecxz
frstor
mov
sub
aaa
sub
jle
repnz
ret
inc
jb
(bad)
jns
lock
sar
add
dec
xlat
fistp
lods
(bad)
cmp
push
out
mov
cs
xchg
hlt
mov
fdiv
pop
dec
(bad)
dec
loopne
loope
jno
sub
jl
or
in
aam
sub
aad
ret
mov
mov
mov
add
xchg
dec
and
arpl
pop
pushf
or
cmc
xchg
aaa
scas
cld
in
ss
(bad)
stos
jmp
pop
dec
add
xlat
iret
mov
or
add
xor
and
cld
pusha
(bad)
popf
hlt
and
or
orps
ds
xor
daa
mov
enter
addr16
dec
ficom
mov
into
add
in
lahf
xchg
sub
push
mov
out
and
xor
call
shr
scas
sahf
cld
out
les
xor
sbb
dec
cmc
mov
icebp
cs
pop
mov
mov
ret
jo
xlat
xchg
ins
mov
icebp
mov
sar
aas
sbb
fwait
push
stos
push
popa
xchg
cs
and
jb
sbb
mov
mov
sub
sahf
sahf
pop
ss
cmp
(bad)
in
jle
fcom
dec
jge
jmp
mov
(bad)
fistp
and
out
adc
sub
dec
mov
aas
inc
(bad)
fisttp
ret
aam
out
cmps
test
and
jnp
inc
out
dec
or
bound
out
inc
jle
add
fistp
cmp
fld
mov
jg
xchg
jmp
dec
mov
jo
cmp
repz
test
mov
sub
dec
(bad)
dec
mov
out
adc
xchg
lds
push
sti
gs
fucom
mov
hlt
addr16
dec
jbe
bound
aas
sbb
cli
(bad)
loope
aaa
xchg
mov
add
jl
jge
pop
movs
or
repz
pop
lock
mov
rcl
mov
stc
aad
mov
mov
and
je
pop
add
(bad)
cli
jmp
fwait
xchg
cmp
and
in
imul
jmp
add
scas
lods
mov
cmps
xor
loopne
jmp
cmp
sbb
(bad)
cwde
mov
cmp
mov
es
ficomp
sbb
fwait
lods
add
jae
js
(bad)
adc
mov
pop
lea
mov
push
fistp
les
jo
popa
pop
loopne
data16
xor
mov
scas
or
xor
out
mov
pop
jle
outs
sub
xor
jns
mov
(bad)
out
(bad)
jb
pop
add
jge
nop
std
aad
xchg
std
cmp
push
fcomi
jbe
inc
inc
inc
movs
movs
movs
pusha
frstor
retf
inc
mov
inc
add
sar
dec
enter
(bad)
fnstcw
fild
popa
lock
mov
test
cmps
int3
jge
fcomp
cmp
jg
and
rcr
pop
fcomip
mov
or
cdq
push
jg
push
dec
mov
add
add
xor
cmp
mov
aas
out
xbegin
sar
cmps
adc
out
dec
or
jp
loopne
push
or
mov
dec
pop
add
pop
jmp
retf
popf
inc
addr16
or
fdivr
pop
pop
(bad)
pop
ret
jl
push
cmc
mov
retf
push
ins
das
mov
mov
add
rcl
int3
loope
push
jmp
call
cld
std
idiv
ins
or
test
mov
push
or
sub
int3
test
jg
retf
sbb
xor
icebp
cli
rcr
dec
pop
mov
jecxz
sti
neg
adc
jecxz
das
inc
push
mov
mov
mov
addr16
cmp
jmp
jg
mov
int
std
pop
arpl
ficomp
jecxz
fisubr
pop
mov
hlt
rcr
call
loope
dec
out
or
dec
sahf
ja
mov
lds
cmc
xchg
ret
and
scas
pshufw
iret
fwait
or
lahf
xlat
xchg
mov
(bad)
ins
mov
inc
leave
or
pop
shr
mov
rol
fidivr
inc
push
inc
xchg
mov
fstp
push
mov
add
add
mov
in
(bad)
aaa
add
das
das
popf
adc
mov
in
pop
aas
sti
call
paddb
int3
dec
or
add
js
mov
mov
mov
sbb
jno
lahf
retf
mov
mov
add
scas
mov
cmp
int3
out
jl
frstor
fstp
loope
jae
jecxz
ror
cmp
ds
jmp
xchg
adc
jmp
inc
cmp
mov
adc
jae
das
fisubr
aaa
xchg
imul
ret
hlt
cmp
cmp
ins
xchg
shr
(bad)
mov
pop
add
pop
mov
fidivr
mov
lock
push
popa
dec
adc
mov
test
mov
pop
repnz
xlat
fwait
mov
(bad)
pop
aaa
lods
stc
ds
repz
popa
push
add
ror
rcl
popf
pop
loopne
and
jle
test
icebp
shl
ins
jnp
mov
add
sbb
xor
mov
or
pop
(bad)
pop
mov
add
cmp
jg
movs
(bad)
div
lods
loope
scas
psrlq
xor
cmc
cmc
sahf
sbb
in
cmps
ret
lock
imul
push
(bad)
dec
jne
cmp
sbb
dec
push
fdivr
enter
ror
mov
cmp
in
in
test
pop
sar
arpl
fimul
jg
xchg
dec
push
add
cdq
ret
pusha
adc
rcr
lock
pop
xchg
mov
aas
int3
in
clc
adc
jecxz
call
xor
mov
cmp
add
cmp
sbb
icebp
pop
mov
xchg
and
outs
mov
fistp
ja
mov
loope
jo
idiv
fidiv
add
and
nop
adc
xor
jge
pop
inc
inc
sbb
or
add
adc
ret
mov
jne
out
out
jb
inc
jg
shr
push
mov
or
pop
sbb
jg
inc
shl
add
ds
jmp
mov
add
jl
in
mov
cmps
push
ficomp
mov
and
lock
jmp
in
inc
mov
jns
sahf
test
pop
mov
pop
jge
(bad)
fst
outs
lea
sbb
xor
lock
xchg
cs
ins
jmp
push
shl
aam
mov
imul
(bad)
xor
adc
xchg
pusha
(bad)
adc
js
movs
jbe
nop
in
rol
iret
es
pop
add
jae
mov
cmp
push
add
scas
mov
mov
jo
dec
ret
pop
pop
inc
or
and
sysexit
pushf
dec
xor
xlat
jmp
jg
clc
mov
push
js
icebp
(bad)
ins
fwait
jg
div
cmp
imul
imul
and
mov
sbb
push
mov
ds
add
std
in
fistp
(bad)
xchg
sar
and
mov
shl
(bad)
push
outs
out
xchg
(bad)
xlat
inc
sbb
mov
pusha
dec
cmp
jge
nop
push
cli
sub
sti
and
mov
clc
ins
or
stos
or
sub
imul
or
mov
stos
mov
dec
repnz
sbb
nop
dec
adc
stc
mov
xor
enter
add
add
std
test
fs
and
push
jmp
push
aam
adc
inc
pop
jno
or
daa
sar
dec
jg
xor
outs
cmps
adc
lock
gs
das
fist
rcr
xchg
xchg
pop
push
out
jae
mov
hlt
push
inc
popf
mov
mov
lea
mov
ficomp
jbe
test
(bad)
hlt
test
in
test
pop
(bad)
icebp
push
sar
mov
xor
push
and
gs
pushf
out
push
jl
mov
scas
dec
std
mov
sub
mov
push
jp
add
loop
mov
test
mov
(bad)
cmc
fsub
std
imul
xchg
sbb
loope
mov
shl
adc
adc
jg
cmp
shl
icebp
dec
adc
cmp
aaa
movs
push
adc
xlat
(bad)
mov
(bad)
call
mov
sbb
mul
or
inc
pop
jmp
sbb
jp
add
lods
out
xchg
inc
sahf
aaa
adc
or
in
mul
push
out
mov
mov
mov
out
daa
push
mov
je
or
lea
and
dec
ja
std
rol
jns
movs
fucomip
jo
into
xor
(bad)
push
lahf
cli
adc
fisub
iret
mov
xchg
cmp
push
add
inc
inc
dec
push
test
lock
les
aad
cmp
aaa
or
adc
in
out
inc
adc
sti
cli
push
ins
xor
(bad)
push
clc
inc
cld
dec
lock
cmp
mov
mov
out
out
sbb
mov
mov
push
fs
add
loope
mov
lfs
call
fst
idiv
and
jnp
cld
ds
hlt
(bad)
js
rol
add
push
mov
adc
sub
int
int3
sbb
test
lods
shl
push
test
test
mov
sbb
mov
inc
jo
cmp
rcr
daa
mov
div
repz
fistp
push
xchg
(bad)
pushf
std
repnz
add
mov
xor
fadd
fist
loope
loope
add
xlat
fnsave
mov
idiv
cmp
mov
sub
mov
(bad)
lods
mov
jp
pop
int
mov
std
std
mov
push
or
(bad)
mov
push
xchg
jno
xchg
pop
jns
jmp
inc
mov
ds
es
or
dec
test
mov
in
idiv
add
or
push
sbb
or
adc
cmp
add
jo
add
xor
xlat
pop
jnp
pop
jmp
pop
pop
push
push
fld
mov
sub
js
(bad)
icebp
lea
cmp
jo
stc
outs
ret
and
mov
cmps
rcl
jle
mov
call
cmc
push
push
(bad)
test
mov
mov
xor
div
shr
out
cmps
cmp
lahf
out
sub
sar
imul
cmp
test
(bad)
loope
aaa
inc
sbb
xor
xor
loopne
xor
mov
mov
pop
pop
je
push
dec
mov
mov
xchg
fwait
and
pop
mov
xor
mov
shl
shl
cmps
dec
push
jbe
dec
jo
in
cmp
jp
(bad)
jns
mov
lods
out
in
rcr
imul
sub
lea
cmp
jecxz
sub
mov
hlt
jno
fadd
sbb
scas
lea
out
test
(bad)
mov
mov
outs
pop
in
(bad)
fiadd
jne
les
mov
adc
fadd
call
clc
mov
fisttp
lock
fistp
lea
and
add
pop
sub
cld
jbe
cli
in
inc
inc
add
inc
or
xchg
fsub
pop
mov
mov
jns
pop
add
call
pop
test
pop
push
cmps
mov
lods
inc
ins
pushf
addr16
pushf
push
add
fldcw
sbb
push
retf
les
jp
dec
bound
cmp
adc
jmp
mov
lock
inc
jnp
scas
xchg
loopne
bound
sti
mov
test
aaa
aam
xchg
and
xlat
adc
gs
(bad)
xor
jb
js
popf
sbb
out
cwde
inc
xor
jo
inc
xor
fild
or
xlat
out
inc
cmp
xor
neg
pop
cmps
inc
in
or
fst
loop
xor
addr16
not
iret
dec
add
test
mov
jg
push
mov
push
fidivr
test
xchg
test
dec
and
jp
mov
call
adc
xchg
push
inc
aam
push
xor
aam
jnp
test
sbb
mov
loop
dec
add
mov
xchg
and
push
add
mov
jo
lea
jns
pop
(bad)
in
rol
mov
push
xcrypt-ctr
cmps
fistp
mov
push
and
sbb
and
sbb
mov
push
xor
push
hlt
stos
(bad)
lods
adc
in
push
in
lods
cdq
sub
jmp
pop
sbb
sub
xchg
js
mov
outs
sub
into
push
or
sti
mov
push
cmp
sbb
enter
retf
or
loop
clc
sub
dec
ret
xchg
icebp
dec
lock
icebp
dec
lock
mov
outs
adc
mov
call
pop
push
popa
mov
cwde
inc
mov
repnz
mov
fld
pop
stos
ficomp
cmps
ficomp
cmps
fstp
movs
cmp
iret
std
cld
add
mov
pusha
rol
inc
adc
scas
(bad)
lock
add
xor
sub
mov
pop
fldenv
ret
ret
pop
add
jo
or
mov
sbb
jnp
jge
or
add
xor
push
ja
out
cs
inc
and
iret
lods
rol
inc
fiadd
fcomp
pop
out
or
scas
mov
in
push
out
fmul
pop
pop
loop
jbe
sub
(bad)
xor
test
pusha
mov
call
mov
xor
mov
jo
inc
inc
inc
add
fwait
xchg
xchg
test
ss
pusha
xchg
add
cmp
fisub
and
add
mov
push
test
es
fnstenv
cmps
push
mov
call
cmp
or
or
mov
mov
ja
ja
xor
mov
push
(bad)
lahf
in
out
jbe
out
sbb
test
jno
loope
pop
pop
leave
mov
in
gs
clc
loop
scas
sbb
xor
cmc
mov
sbb
fld
xchg
adc
mov
jo
jne
jge
mov
les
ficomp
popf
repz
inc
popf
jle
push
jbe
mov
mov
out
pushf
movs
xor
adc
fidiv
xchg
shl
mov
add
jl
cmp
sar
adc
sub
dec
dec
dec
mov
pop
arpl
leave
aas
retf
push
movs
xchg
(bad)
mov
sbb
sbb
mov
xor
cmp
adc
add
(bad)
shr
xchg
jo
sub
and
cmc
jb
pop
out
jbe
scas
(bad)
test
(bad)
ds
adc
stos
pop
(bad)
add
cli
or
push
push
pusha
dec
int
or
js
rcr
enter
inc
in
push
fistp
ret
popa
lea
xor
and
fistp
imul
mov
fistp
out
fcom
xor
fcmovu
jno
loopne
fdivr
pop
pop
pop
pop
pop
pop
or
push
ds
push
rol
dec
test
sbb
pmuludq
push
mov
mov
js
paddd
sbb
fnstenv
mov
inc
int
aad
mov
push
icebp
mov
push
pop
out
fcom
rcr
enter
popa
xchg
add
add
imul
into
gs
fistp
js
out
out
jns
mov
(bad)
xchg
popa
lods
je
sbb
and
inc
adc
or
sbb
stos
es
iret
ss
mov
adc
or
sbb
cmp
movs
aas
ins
lock
jecxz
in
shl
push
push
push
or
ds
les
cmp
mov
or
mov
cmps
inc
jno
or
sub
and
inc
not
(bad)
cmp
repnz
inc
lahf
(bad)
sar
sahf
mov
dec
adc
jp
jecxz
cld
lods
stc
jns
repnz
cwde
fist
ss
imul
repnz
call
(bad)
jg
xchg
das
les
jne
jmp
int
adc
xor
(bad)
mov
(bad)
add
scas
mov
jecxz
movs
mov
out
sti
pop
push
jmp
dec
fs
mov
pop
add
pop
add
xchg
clc
and
add
cmp
mov
dec
ins
xchg
ffreep
inc
fild
jge
call
into
add
lahf
or
jp
adc
jb
and
add
cmp
sahf
hlt
neg
in
in
cmp
test
ror
pushf
add
jo
add
cmp
push
cwde
(bad)
lds
sti
js
push
test
dec
push
xor
rcl
jmp
inc
inc
retf
cmp
mov
jmp
in
pop
mov
(bad)
call
dec
stos
inc
xor
cdq
sub
out
into
das
mov
outs
mov
out
mov
add
or
push
test
(bad)
jno
(bad)
gs
lods
jmp
cmp
push
lods
test
jne
mov
test
pop
sbb
shufps
(bad)
iret
popa
add
adc
mov
sbb
nop
xlat
ss
inc
in
and
jge
out
mov
add
popa
popa
xchg
ret
ret
scas
or
sub
push
pop
fadd
popa
clc
sub
test
or
aas
sbb
jb
retf
sub
(bad)
jbe
mov
sbb
jno
popa
addr16
nop
and
xlat
(bad)
int3
adc
cs
bound
shr
(bad)
loopne
les
lock
lahf
mov
retf
adc
xchg
and
adc
retf
xchg
leave
shl
push
jmp
sbb
and
and
push
mov
cli
cmp
sti
fist
retf
push
xchg
test
jp
xlat
mul
lods
fnsave
in
mov
pop
iret
cmps
mov
mov
sub
test
pop
pop
jmp
mov
cmps
jecxz
cs
lock
mov
mov
push
or
xor
aas
ror
cwde
or
mov
jge
clc
jnp
icebp
cmc
(bad)
jmp
sbb
and
fs
enter
mov
xchg
rcl
jo
inc
inc
pop
ins
mov
adc
add
jmp
inc
jo
movs
or
call
sar
add
inc
xor
mov
mov
(bad)
push
iret
sub
(bad)
fidiv
mov
cmps
imul
stos
cmp
jno
and
shl
mov
mov
es
xchg
leave
push
shl
jmp
das
(bad)
mov
dec
pop
(bad)
fistp
rcr
xchg
repz
in
mov
int3
mov
(bad)
jns
mov
dec
xchg
xchg
lods
jno
fstp
out
mov
fcom
(bad)
jae
pop
das
adc
push
or
(bad)
cmp
iret
in
pop
das
cmps
arpl
addr16
mov
pop
add
add
mov
add
mov
xor
jns
div
fmul
add
movs
or
xchg
popa
or
pop
in
push
push
aaa
test
xor
(bad)
cmp
out
(bad)
inc
pop
xor
dec
push
test
call
repz
rcr
and
rcr
out
cli
or
xchg
loopne
cmp
lea
jne
xchg
lods
pop
scas
ins
imul
mov
retf
lds
bound
cmps
xor
in
in
fs
je
push
xor
mov
cmc
jo
retf
or
pop
pushf
pop
jo
mov
mov
mov
push
cs
sbb
or
ficomp
cmp
cmp
xchg
xor
jo
sbb
xlat
sbb
(bad)
jmp
pusha
mov
xchg
mov
in
mov
inc
or
pop
push
fcmovnu
stos
push
out
mov
pop
fist
xor
adc
mov
adc
pop
sar
repnz
jp
hlt
sbb
shl
inc
dec
int3
int
sbb
cmp
jecxz
sahf
cmp
jp
pusha
lea
or
mov
xor
ins
sbb
cmp
arpl
scas
(bad)
add
cmp
jae
scas
fwait
mov
out
popf
fld
mov
cmps
push
scas
push
sub
jb
push
mov
and
pop
ss
es
and
dec
and
fdivr
in
fcomp
mov
in
inc
test
xor
mov
xchg
jge
cwde
mov
dec
pop
pop
in
lods
cmps
jmp
js
std
std
jl
or
ja
mov
push
cmp
add
scas
(bad)
sti
sub
imul
div
cmc
jb
jo
lods
icebp
icebp
fstp
adc
adc
les
lock
and
shl
and
mov
popa
popa
cmps
add
xor
(bad)
fnstsw
push
(bad)
push
out
hlt
call
sahf
adc
or
jge
cs
icebp
inc
pop
fadd
xor
adc
and
cmp
push
test
and
test
push
mov
pop
cli
mov
out
sub
xchg
js
mov
mov
(bad)
sub
fnstcw
outs
out
sbb
cmp
push
stos
push
stc
sub
dec
mov
movs
retf
push
sub
mov
dec
es
and
sub
mov
push
test
add
mov
aas
cmc
(bad)
xor
mov
cmp
xor
jmp
fmul
jnp
das
out
sbb
jge
hlt
icebp
(bad)
(bad)
div
mov
or
pop
mov
mov
sbb
lods
cmp
mov
(bad)
mov
ret
movs
rcr
test
scas
scas
xor
mov
add
or
(bad)
adc
xor
mov
lock
or
aas
pop
sbb
sub
jb
hlt
xor
ret
mov
pop
add
scas
pop
pop
or
mov
clc
mov
scas
iret
jp
mov
jno
out
(bad)
lds
mov
aaa
ret
ret
ja
sti
addr16
mov
in
jo
bound
cwde
cmpps
sub
repz
mov
in
fcomp
mov
sbb
hlt
(bad)
and
sbb
pop
pop
mov
xlat
test
retf
bound
cwde
stos
push
int3
push
add
or
jl
pop
cmp
cmp
pop
in
les
stc
loop
das
jbe
fimul
jmp
sub
ins
imul
mov
push
out
mov
in
mov
mov
cmp
dec
or
cmp
lods
xchg
sub
mov
or
xchg
retf
sub
pop
mov
or
xlat
or
popf
(bad)
mov
push
bound
dec
mov
ret
xchg
add
or
pop
pop
or
add
mov
xor
or
inc
popf
mov
pop
test
hlt
call
lea
cs
inc
add
iret
jp
(bad)
pop
out
ficomp
ds
outs
lahf
mov
sti
hlt
mov
idiv
mov
lahf
dec
sti
idiv
mov
(bad)
fisttp
test
xchg
(bad)
jl
enter
mov
sbb
call
shl
popa
mov
gs
jae
add
cmp
mov
(bad)
repnz
in
punpckhwd
mov
dec
mov
aad
add
pop
cs
xchg
fldcw
mov
(bad)
mov
push
mov
movs
jno
mov
inc
std
test
das
std
scas
loop
(bad)
inc
mov
(bad)
(bad)
mov
jmp
mov
jecxz
xchg
mov
push
inc
inc
inc
cmp
(bad)
jns
mov
fcmovu
retf
imul
pusha
mov
fst
xchg
popa
mov
add
enter
ja
sub
adc
mov
daa
cdq
mov
cmp
cmps
jne
out
inc
(bad)
sbb
jp
mov
xor
pop
out
out
mov
push
push
xchg
xor
rcl
arpl
daa
test
les
or
cmp
or
sub
bound
cwde
cwde
push
jp
js
addr16
aaa
bound
xchg
fidivr
xlat
mov
xlat
jge
jle
scas
fbstp
pusha
add
jle
pusha
rcr
cmp
test
xchg
sbb
loop
shl
stos
icebp
jecxz
call
sahf
xor
mov
sub
aaa
addr16
jmp
std
out
sbb
mov
mov
mov
(bad)
into
push
xchg
push
cmc
ror
out
pop
xor
mov
movs
dec
sub
jne
(bad)
test
out
out
cmp
shl
retf
pop
addr16
jns
mov
xchg
lea
push
xor
cmp
push
push
push
(bad)
mov
retf
xchg
xchg
xchg
iret
call
stc
mov
mov
imul
xchg
jl
jmp
imul
sub
das
mov
sub
jg
mov
not
sbb
push
out
jmp
je
jno
jmp
push
call
aam
or
jne
mov
mul
pop
inc
inc
pop
adc
jle
and
push
inc
add
ds
push
or
mov
and
cli
push
imul
push
jp
mov
fisttp
adc
jg
ds
jae
imul
mov
jl
je
push
ret
xchg
jb
sar
xor
jmp
jecxz
cdq
cmp
fcmovne
xchg
mov
movs
movs
outs
addr16
(bad)
cs
mov
enter
mov
push
lods
cli
std
call
mov
jge
repz
jg
(bad)
in
out
jge
(bad)
aam
repz
test
cmp
test
popf
stos
mov
(bad)
sub
imul
stc
push
mov
dec
and
test
or
dec
test
cmp
sbb
pop
jo
int3
leave
cdq
aaa
das
rol
scas
pop
mov
fst
xchg
mov
cmp
push
mov
fsub
das
outs
add
cmp
pop
shl
fst
add
loope
les
das
xchg
inc
loopne
imul
sub
clc
cli
push
push
adc
jle
and
(bad)
(bad)
fwait
cld
std
jmp
add
pop
and
dec
popa
popa
xchg
ret
pop
imul
sbb
lahf
mov
add
stc
out
(bad)
or
es
xor
aad
xlat
sti
mov
out
mov
(bad)
cmp
je
aaa
mov
clc
(bad)
icebp
fisttp
hlt
std
xchg
sub
daa
and
bswap
leave
aas
movs
cmps
(bad)
nop
xchg
test
gs
retf
pop
ficomp
xlat
lods
sti
arpl
lahf
sub
(bad)
cmp
into
(bad)
jle
adc
mov
addr16
pop
cmp
out
sar
(bad)
jnp
push
mov
stos
(bad)
or
mov
sub
lods
push
scas
xlat
sub
jns
pop
mov
xchg
cmps
stos
cmp
fnstsw
sub
dec
dec
pop
popf
call
hlt
loop
retf
retf
sub
ss
xor
cld
clc
fs
mov
sub
arpl
out
inc
or
out
out
lahf
mov
ds
fidiv
pop
push
sub
iret
pcmpeqb
mov
sar
mov
add
mov
push
repz
and
push
ins
xor
clc
sti
xlat
add
push
ins
aaa
ret
xchg
clc
fs
aam
test
push
je
xor
dec
rcl
mov
frstor
pop
in
fpatan
inc
pop
fcomp
mov
lahf
cmc
in
sti
and
out
inc
mov
jle
cwde
fisttp
hlt
sti
test
sti
bswap
leave
jg
mov
psubsw
jg
mov
(bad)
stos
push
std
jno
fidivr
adc
cld
iret
xor
cmc
scas
jno
push
xor
stc
(bad)
xchg
iret
jg
in
adc
icebp
stc
xlat
xchg
sti
pop
sbb
push
xlat
fsubr
and
test
lds
cs
mov
into
mov
ins
dec
dec
sub
enter
push
lods
test
leave
test
jbe
mov
sbb
push
out
sub
scas
push
xor
popf
es
movs
es
pushf
inc
gs
dec
cmp
ret
bound
popf
pop
mov
jne
inc
jns
jns
cmp
push
test
call
mov
(bad)
(bad)
(bad)
xor
out
add
add
lods
sbb
push
jle
add
push
daa
mov
cmp
mov
(bad)
mov
adc
addr16
jmp
mov
adc
icebp
icebp
pop
cmc
jmp
rol
sti
sti
les
push
ror
repz
lods
inc
out
ins
push
je
leave
lahf
sub
call
call
cmp
xchg
mov
ret
xchg
xchg
into
jnp
jbe
stos
jmp
mov
fld
lods
xor
pop
mov
test
mov
and
xchg
inc
mov
jmp
sub
jmp
lods
imul
add
push
push
jno
sub
enter
pop
or
imul
cs
shr
sbb
add
xchg
les
push
and
loop
mov
pop
aas
faddp
(bad)
(bad)
jle
scas
outs
add
std
add
inc
dec
pusha
loopne
rol
mov
xor
jnp
jbe
xchg
inc
inc
sbb
mov
adc
je
out
addr16
fwait
jo
cli
xchg
sbb
mov
jae
sbb
jo
push
and
and
pop
data16
cld
popa
rol
ins
sar
(bad)
cmp
pusha
cli
pushf
pushf
aam
imul
lahf
ins
leave
push
cmp
jno
jne
lods
mov
test
popf
jb
adc
push
push
and
nop
(bad)
sbb
data16
(bad)
imul
dec
dec
fistp
ins
fisub
jno
int3
and
iret
mov
add
mov
cwde
inc
stos
cwde
out
loope
adc
pop
sbb
pop
adc
ds
mov
add
push
cmp
xor
mov
cmp
in
and
and
fst
std
stos
add
xor
rol
pusha
sbb
pop
pop
sbb
lods
mov
adc
inc
xor
or
or
loope
movs
mov
int
sub
xchg
push
rcr
dec
cdq
ret
repnz
pop
mov
popf
cli
loop
jmp
jns
or
cld
jmp
and
jmp
scas
push
out
inc
das
xlat
sub
ds
ins
lods
nop
popa
fisttp
das
dec
dec
scas
call
add
inc
inc
in
xchg
or
ficomp
sbb
dec
pusha
shl
mov
sub
jo
movs
in
and
jmp
push
sub
ins
push
aam
jmp
and
cmp
movs
push
pop
pop
xchg
arpl
lods
adc
nop
nop
cli
nop
nop
xchg
xor
fcmovnb
ret
ja
inc
in
ret
cmps
(bad)
enter
add
addr16
adc
pop
sbb
mul
movs
dec
lahf
das
and
push
push
(bad)
in
ror
pop
sti
hlt
repnz
cs
(bad)
fucom
adc
in
outs
lods
push
sbb
xchg
ins
mov
push
jmp
cmp
add
test
sub
scas
xchg
gs
dec
xor
imul
push
or
(bad)
loope
inc
rol
sub
call
and
leave
push
nop
xor
adc
outs
jge
not
mov
(bad)
loopne
and
test
cmc
(bad)
les
sub
add
push
aaa
mov
add
pop
sbb
push
pusha
pop
mov
jge
sub
pop
jbe
inc
inc
out
(bad)
int
sub
int
mov
sbb
adc
imul
lds
jmp
jge
loope
(bad)
pop
btr
and
jnp
push
div
mul
and
retf
add
fisttp
pop
mov
inc
imul
cmps
push
and
inc
mov
imul
shl
fcmovnbe
xor
cmp
out
aad
mov
cld
cld
retf
add
cmp
lock
loopne
ret
and
add
ins
mov
and
je
add
call
push
pop
jne
rcl
inc
jmp
jge
inc
cmp
inc
aam
mov
mov
rcr
cmp
dec
and
inc
cdq
adc
fisubr
rcr
rcl
aas
xchg
ins
lods
movs
into
into
repz
cwde
je
mov
outs
mov
loopne
(bad)
loop
jae
sbb
sbb
mov
imul
push
popf
xchg
sub
cmps
sub
das
push
jbe
dec
mov
in
aaa
mov
loop
xchg
out
out
mov
xchg
push
mov
jp
mov
and
push
push
and
test
out
or
and
mov
sbb
movs
add
pop
dec
mov
xor
and
pop
push
pop
mov
test
mov
jl
push
xor
sub
mov
dec
xor
xchg
add
dec
or
outs
or
ja
or
fld
loop
add
addr16
xchg
dec
mov
jno
sahf
push
mov
cmps
sbb
push
pusha
mov
imul
pop
scas
mov
(bad)
mov
sub
out
jns
push
jns
add
jecxz
add
mov
loop
mov
stc
clc
lods
shr
or
rol
cs
(bad)
dec
and
je
adc
out
add
xchg
stc
push
rol
xor
mov
adc
jbe
and
mov
xchg
sbb
pop
push
xchg
push
das
add
mov
retf
hlt
or
jae
dec
or
ret
movs
and
push
inc
mov
mov
add
(bad)
cmp
addr16
imul
outs
push
pop
xchg
or
mov
and
add
ret
out
xor
neg
cdq
xchg
popf
fst
xor
mov
ja
in
push
pop
pop
pop
mov
and
scas
lds
and
fdiv
cmp
adc
cmp
push
outs
dec
jns
pop
mov
add
inc
loopne
push
pusha
lds
aam
push
inc
inc
gs
or
or
shl
aad
das
push
xlat
rol
inc
pop
jo
test
and
lock
ror
(bad)
cmps
hlt
dec
inc
stos
inc
(bad)
xchg
fdiv
fidiv
inc
out
inc
out
add
lds
push
xlat
inc
nop
push
call
rcr
call
cmp
mov
pusha
js
add
stos
lea
xor
dec
xchg
sub
xor
cli
or
clc
loop
inc
xchg
aad
in
mov
imul
loop
xchg
fcom
daa
les
add
inc
jl
inc
lods
mov
stos
mov
stc
lods
adc
std
js
lds
bound
outs
mov
cdq
mov
outs
jp
xchg
out
nop
xchg
retf
xor
into
nop
xchg
push
(bad)
push
xor
psrld
mov
xchg
or
out
movs
ffree
sub
add
or
and
pop
push
sbb
adc
pop
adc
jno
add
jns
sub
jae
shr
xor
fstp
mov
fisttp
xchg
push
(bad)
retf
movs
and
dec
addr16
popa
loope
xchg
jbe
dec
out
ins
sar
inc
sar
pop
fidivr
jmp
jle
mov
call
inc
aaa
mov
mov
test
mov
cdq
nop
mov
mov
xlat
sbb
outs
xchg
push
out
pop
or
or
rol
inc
push
push
add
lds
mov
cmp
or
call
jo
fmul
scas
adc
jl
lods
scas
cwde
rol
test
mov
mov
je
sub
mov
in
and
nop
pop
mov
mov
jmp
and
push
jmp
mov
call
or
or
sbb
jp
sub
(bad)
dec
mov
jnp
mov
pop
rcr
push
inc
mov
test
xchg
and
jnp
mov
rcl
sbb
adc
add
mov
inc
in
imul
mov
js
dec
cmp
pop
loopne
sub
jl
(bad)
jp
sbb
pop
adc
(bad)
or
pop
fbstp
loop
pop
inc
mov
pop
scas
mov
in
inc
push
in
jg
aam
(bad)
into
repnz
rcr
into
lds
stos
dec
jns
jmp
shl
add
or
xchg
adc
xlat
push
aaa
mov
push
push
jmp
mov
pusha
sub
rcr
bound
push
mov
push
ret
out
add
icebp
mov
out
add
and
adc
jb
pop
mov
in
test
mov
mov
inc
fisttp
dec
daa
and
sbb
sub
pushf
and
cmp
(bad)
daa
lods
pop
mov
outs
outs
mov
clc
cmp
int
push
jle
(bad)
cmp
mov
push
sub
mov
fisub
xor
scas
xchg
ja
xchg
ja
and
xchg
es
sub
xchg
sub
xor
inc
fisubr
xor
push
cmp
je
loope
xor
push
ds
ins
mov
iret
in
ficomp
movd
std
std
xor
or
jl
adc
pop
sbb
fst
call
jge
fs
xchg
lahf
or
mov
jecxz
xchg
mov
sbb
xchg
cmp
ins
mov
aaa
pop
cmps
add
or
or
icebp
rcl
dec
(bad)
fiadd
repz
out
add
lods
mov
mov
(bad)
int3
lahf
jbe
mov
mov
lods
repnz
test
(bad)
leave
mov
mov
jae
lods
rcl
imul
jle
mov
aaa
(bad)
pop
icebp
int
sbb
add
daa
pusha
cmp
fild
jg
mov
test
add
push
add
push
inc
sbb
(bad)
sbb
repnz
inc
call
lahf
mov
fisttp
mov
popf
in
ins
add
dec
and
sbb
inc
mov
outs
pop
jecxz
ds
jo
mov
mov
je
xchg
pop
pop
aas
cmp
push
or
mov
xchg
ja
xchg
jne
and
fidivr
mov
jb
cmps
lds
out
cmp
xor
pop
pop
(bad)
dec
je
cwde
inc
pop
cmp
daa
or
mov
push
xlat
lods
push
add
pushf
into
loop
fmul
mov
rcr
push
out
mov
(bad)
bound
stos
and
fsub
jo
jp
test
outs
adc
jmp
mov
fld
jecxz
loope
and
outs
push
scas
push
gs
jecxz
and
pop
xchg
xor
adc
xchg
jbe
xchg
je
xchg
je
ror
retf
mov
(bad)
aam
lods
push
ins
outs
aas
rcr
inc
dec
add
popa
test
fstp
loope
inc
sbb
add
mov
das
test
stos
adc
dec
or
retf
inc
adc
cmc
or
inc
ins
scas
and
sar
and
(bad)
push
or
cmp
mov
push
adc
movs
inc
sbb
mov
mov
inc
call
jg
mov
or
fadd
sub
sar
pop
mov
sbb
int
sub
into
push
sub
jo
sub
pop
call
out
mov
scas
outs
cs
mov
repz
ror
pop
add
push
cwde
scas
(bad)
adc
mov
mov
dec
(bad)
xor
call
xchg
or
pop
sub
dec
enter
cmp
(bad)
push
mov
out
bound
mov
xchg
mov
sahf
out
out
mov
test
mov
xor
fsubr
push
pop
jo
lods
xchg
jne
ins
dec
out
mov
mov
push
outs
xchg
into
arpl
inc
mov
sub
mov
into
xchg
sbb
popf
lea
xchg
(bad)
aas
ss
sahf
cmp
sbb
jae
in
add
clc
mov
int
pop
lods
and
ror
sbb
sahf
xor
dec
mov
push
jo
adc
mov
loope
adc
add
call
cwde
pop
mov
pushf
call
movs
ret
add
mov
popf
xor
mov
sbb
jmp
and
aaa
inc
out
scas
scas
leave
add
repnz
cmp
pop
pop
or
fsub
cmp
cmc
lds
cdq
js
ret
push
and
loop
icebp
xchg
movs
scas
and
loop
lods
ret
ins
ret
outs
pop
sub
leave
ja
int
or
add
cs
sbb
cs
(bad)
rcl
mov
mov
push
inc
(bad)
test
or
clc
or
aam
retf
dec
pop
imul
sub
gs
dec
add
sbb
cmp
add
xchg
(bad)
mov
xchg
stos
xor
pop
push
fstp
out
mov
mov
pop
mov
pop
jb
cmp
adc
inc
jo
or
push
test
repz
adc
out
mov
jge
xor
loop
mov
jne
ret
or
inc
adc
loopne
rol
inc
push
shl
mov
in
(bad)
leave
das
dec
push
(bad)
(bad)
mov
out
ror
ror
in
jle
dec
fwait
sub
xchg
pop
jbe
push
mov
cmp
sbb
sub
mov
and
cmp
clc
and
pop
sbb
mov
jp
aad
push
sub
es
dec
sbb
cdq
jmp
cwde
mov
loop
and
fild
loopne
fisttp
pusha
or
pop
pushf
mov
jne
jmp
mov
enter
sub
mov
out
sbb
mov
adc
mov
cmp
jbe
stos
fcmovne
jle
imul
cmp
jns
pop
sahf
jmp
dec
push
arpl
pop
jno
xchg
or
pop
outs
imul
pop
retf
(bad)
jg
loopne
mov
into
outs
sbb
sti
inc
call
(bad)
sti
movs
inc
stc
fbstp
jbe
sar
clc
clc
loopne
imul
sub
pop
sub
xor
xchg
or
or
inc
push
add
jb
in
out
test
cmp
or
mov
jno
popf
pop
mov
(bad)
loop
pop
popf
inc
xor
cmp
inc
test
xchg
retf
stos
in
or
sub
xor
sbb
and
pop
dec
shl
int
or
or
dec
lahf
ds
cmp
and
lock
adc
cmp
dec
and
mov
xchg
jbe
sar
jb
jo
xor
pop
mov
jo
icebp
push
fidivr
fldenv
gs
jmp
cld
stc
scas
pop
pushf
sti
cli
sbb
add
not
mov
push
sub
adc
sbb
call
dec
call
dec
pop
repz
fs
call
xchg
ret
mov
xchg
push
aas
add
adc
adc
das
cmp
fld
mov
aas
rcl
enter
test
jbe
fidiv
js
daa
fwait
sub
cmp
movs
aad
xchg
adc
dec
or
push
in
push
add
stc
leave
pop
mov
or
or
hlt
and
or
push
sub
adc
sub
jb
mov
mov
shr
int
xor
imul
sub
or
pop
or
jno
and
sbb
cmp
mov
cs
(bad)
ja
shl
and
mov
add
outs
push
and
jle
xchg
cmp
es
and
and
sbb
and
fwait
jbe
mov
popa
inc
pop
add
call
pop
movs
stos
push
sub
mov
test
sub
adc
sbb
sbb
pop
das
xchg
retf
xchg
retf
gs
push
mov
push
inc
add
jno
add
xor
inc
or
inc
pop
push
add
pop
mov
push
es
pop
sbb
sbb
mov
lock
std
cmp
adc
test
out
ds
out
xchg
adc
data16
mov
in
shr
push
lea
movs
push
push
stos
push
adc
pop
mov
cmp
in
push
xchg
das
xchg
mov
fisub
movs
jecxz
push
push
enter
cmp
test
push
push
fwait
jns
out
popa
xchg
or
into
adc
aam
es
pop
and
ins
fcmovb
test
(bad)
jo
or
shr
sbb
ror
imul
iret
or
fisubr
sar
mov
xchg
dec
cwde
xchg
mov
int
xchg
mov
adc
mov
xchg
repz
mov
jns
in
jle
cmps
push
cmp
add
push
imul
movs
xor
mov
and
ins
or
mov
mov
adc
cmp
mov
(bad)
add
inc
ror
cmp
inc
jae
pop
loopne
push
mov
aaa
das
icebp
into
sub
rol
add
cld
add
cmp
les
jg
jg
mov
jo
shr
ds
or
shr
shr
test
(bad)
sbb
inc
lods
cs
stos
aaa
test
out
sbb
sub
mov
or
sub
aaa
add
xchg
cmp
or
add
or
movs
retf
nop
arpl
mov
pop
sub
and
adc
into
and
and
add
pop
into
or
imul
icebp
xchg
add
sbb
test
lahf
loope
ss
fdivr
push
adc
mov
loopne
mov
out
mov
ins
jne
je
lods
cmp
aad
mov
push
imul
push
stos
mov
stos
adc
inc
loop
and
adc
fdivp
add
mov
shr
mov
xor
loopne
sub
or
bound
test
mov
add
add
jecxz
iret
xlat
adc
es
mov
out
mov
in
pop
pop
pop
mov
aad
je
je
pop
sbb
sub
test
stos
aad
push
sub
imul
and
adc
or
test
xchg
stc
lods
mov
fiadd
xchg
je
movs
and
xchg
or
mov
imul
mov
sub
mov
in
sub
fsub
addr16
add
sub
or
jbe
xchg
mov
test
sbb
mov
or
shl
bound
mov
int3
out
and
rol
dec
add
ins
(bad)
mov
or
add
stos
add
pop
xor
adc
data16
xchg
mov
loopne
imul
idiv
xlat
add
jo
cmp
loop
pop
jbe
dec
mov
retf
push
dec
data16
add
adc
inc
fs
je
das
adc
jbe
scas
push
and
rcr
or
ins
adc
sub
push
out
std
retf
add
mov
retf
cdq
jecxz
rol
out
nop
xor
jecxz
cmp
jbe
push
sbb
icebp
shl
mov
sbb
loopne
stos
or
mov
inc
xchg
pop
inc
jg
stos
outs
loopne
and
xor
fisubr
ins
cmp
xchg
(bad)
in
dec
in
loope
ror
mov
fiadd
aaa
aam
cmp
xor
push
cmps
ret
(bad)
je
scas
mov
ss
les
mov
pop
adc
and
mov
jo
xchg
stc
add
mov
bound
push
imul
or
mov
lahf
sbb
pop
in
out
das
xor
mov
push
push
cmp
std
cmp
sbb
stos
xchg
iret
inc
test
cmp
retf
call
mov
adc
dec
cmps
cmp
dec
imul
pop
rcr
cmps
mov
xor
or
jnp
repnz
and
mov
retf
xchg
inc
ret
in
push
jp
pop
cmp
ret
sub
or
mov
jmp
clc
fidivr
das
add
push
push
push
outs
pop
outs
sti
sub
adc
mov
and
fist
inc
cmp
mov
and
and
or
mov
icebp
pop
sub
mov
lods
inc
jecxz
mov
adc
sbb
mov
out
push
mov
fadd
cwde
mov
imul
shr
inc
aaa
in
cld
xchg
add
test
mov
in
cmps
or
cmp
pusha
(bad)
mov
test
out
les
pop
in
outs
dec
gs
inc
mov
xchg
add
and
retf
out
push
push
cmc
popa
mov
repz
test
shl
js
xchg
imul
stos
jns
mov
add
jmp
push
mov
not
mov
cdq
xchg
jecxz
jecxz
mov
test
ror
inc
mov
mov
inc
mov
mov
or
jl
jecxz
(bad)
in
inc
jl
mov
mov
lea
cmp
sahf
shl
jnp
aad
aam
inc
jecxz
or
sbb
movs
jg
(bad)
cs
enter
inc
data16
push
mov
mov
fist
out
bound
sbb
dec
sar
retf
sbb
(bad)
fcomp
retf
cmp
bound
or
add
rol
call
daa
adc
lods
clc
sub
aaa
cmp
rcr
mov
jge
mov
fucomp
mov
jl
inc
mov
and
dec
retf
ins
movs
gs
xchg
bound
xor
sub
lods
ins
xchg
pop
fldenv
out
jmp
push
push
mov
jo
fadd
es
cmp
call
and
pop
retf
mov
dec
int
xor
rcr
cmp
pop
xchg
lahf
mov
xchg
loop
mov
retf
retf
aas
pop
pop
jle
inc
mov
pushf
xchg
cmp
int
xor
mov
cmp
jmp
pop
imul
adc
fwait
jo
repz
xor
cdq
outs
fwait
cmps
dec
pop
mov
int3
fst
mov
rcl
int
push
mov
sub
push
push
in
push
lods
inc
aam
out
mov
(bad)
cmps
jmp
mov
mov
in
pop
ja
out
dec
sar
repnz
push
sbb
cld
inc
fild
icebp
stos
adc
stc
cs
mov
retf
repnz
enter
xchg
adc
mov
mov
and
xchg
cs
dec
xor
je
mov
jecxz
dec
fstp
ja
adc
sub
out
popf
aas
outs
jp
jb
jmp
int
nop
mov
cli
fidiv
retf
retf
(bad)
(bad)
push
pop
outs
fnstcw
mov
cmp
arpl
out
rcr
xor
iret
lahf
cmp
mov
(bad)
pop
mov
mov
jl
clc
xchg
retf
daa
scas
and
test
jnp
hlt
stos
scas
pushf
jns
fcmovu
jmp
sahf
jnp
aad
scas
pop
aas
jg
mov
scas
mov
xchg
outs
fidivr
fistp
stos
mov
mov
fidivr
jne
je
(bad)
cli
(bad)
fs
mov
jecxz
dec
ds
mov
scas
push
icebp
or
addr16
and
inc
outs
out
add
cmp
jb
sub
cwde
gs
sbb
movs
stc
imul
mov
in
mov
push
int3
fdiv
pop
sub
outs
cmps
repz
adc
movs
repnz
test
fisttp
in
mov
out
dec
mov
mov
pop
cmps
adc
pop
cmp
(bad)
sub
fst
cmps
and
inc
push
fisub
push
sub
cwde
xchg
popf
xchg
lahf
mov
pusha
inc
push
imul
dec
and
out
lods
fnsave
(bad)
mov
je
jge
(bad)
adc
sbb
retf
pushf
fdivrp
fidiv
xchg
iret
fdiv
(bad)
mov
ins
sti
jb
mov
fdiv
cmps
mov
fimul
rol
push
stc
inc
dec
mov
call
call
bound
or
xor
xor
sbb
mov
sbb
es
inc
xor
daa
xor
mov
dec
out
push
jecxz
(bad)
mov
push
mov
xor
add
stc
ss
xchg
enter
jb
dec
push
fs
gs
pop
mov
push
and
add
cs
inc
ss
mov
cs
push
fs
pop
xchg
out
sahf
add
sar
repz
cdq
mov
jb
scas
pop
mov
(bad)
call
es
imul
fstp
mov
inc
jbe
into
cmps
dec
in
cmp
jmp
out
cmp
push
std
arpl
push
(bad)
fldcw
outs
mov
(bad)
jae
xchg
inc
xchg
push
dec
lods
(bad)
out
bound
jl
xchg
cmp
fild
xchg
aad
push
cwde
arpl
cdq
mov
call
fisttp
popa
jmp
lahf
xor
test
enter
add
scas
cmp
inc
jae
mov
cld
imul
out
pop
adc
dec
mov
add
xor
cmp
mov
and
cs
cmp
jcxz
xor
das
mov
mov
cmp
out
mov
leave
rcl
cmps
int3
test
or
cdq
mov
jmp
out
push
outs
push
push
mov
pop
xchg
out
sti
mov
cmp
sbb
ret
ins
pushf
cmp
je
int3
sbb
retf
cmp
cmp
call
out
dec
jne
lds
stos
(bad)
push
xor
scas
movs
and
lds
fucomi
xchg
mov
repz
xor
lds
and
mov
test
push
add
aas
cmp
mov
aas
mov
mov
cmp
push
mov
mov
stos
mov
jmp
xchg
retf
mov
sbb
xor
dec
cmp
cmp
or
dec
fs
gs
push
out
xchg
dec
inc
cdq
jae
xchg
rcl
mov
dec
call
cmp
push
push
cs
xor
and
mov
mov
dec
push
out
fnsave
mov
pop
frstor
fld
mov
mov
aas
mov
jb
jmp
addr16
in
call
lea
das
cmp
js
mov
into
fnstsw
xlat
jno
jecxz
mov
imul
sbb
mov
push
pop
push
fistp
mov
mov
mov
mov
jbe
sbb
ror
loope
dec
mov
sbb
pop
push
fcomp
test
xchg
popf
cmp
jne
clc
ficom
adc
out
out
pop
jne
mov
and
sbb
xlat
xchg
cdq
scas
fsubr
xchg
xor
pop
movs
mov
add
movs
lds
ror
out
loop
sub
push
das
stos
sub
cdq
xor
(bad)
int3
mov
daa
iret
fwait
mov
gs
jecxz
xchg
jns
xchg
cmps
fs
iret
pop
mov
shr
pop
pop
mov
into
fisub
sbb
fnstsw
les
les
clc
xor
sbb
loope
add
movs
ins
cmp
push
fnstcw
outs
dec
aam
rcr
lahf
adc
and
imul
mov
push
and
sub
jmp
xchg
sti
xchg
pop
cmps
or
jns
cmc
out
mov
shr
dec
xor
mov
mov
push
into
daa
sbb
sbb
xchg
sub
xchg
arpl
xchg
mov
sbb
sbb
mov
es
lock
pop
and
pop
push
or
dec
sahf
cmp
repnz
mov
int
pop
sahf
mov
test
retf
mov
sbb
pusha
cdq
mov
retf
(bad)
aam
ins
push
movs
mov
ret
imul
adc
scas
clc
leave
imul
shl
in
inc
mov
outs
xchg
lds
sbb
rcr
jge
fisubr
push
aam
mov
je
dec
stos
pop
out
mov
dec
sbb
lds
data16
daa
(bad)
pushf
lahf
loop
dec
mov
and
sub
ins
cwde
push
xchg
xor
inc
fs
fiadd
sbb
fs
dec
push
fmul
out
mov
fsub
mov
fsub
xor
out
in
stc
rcl
pop
pushf
cmp
jbe
xor
scas
scas
test
jmp
lea
sbb
ja
(bad)
xchg
ret
pop
loope
mov
mov
sbb
jmp
mov
mov
js
test
and
or
inc
pop
ins
xchg
arpl
jo
add
mov
in
(bad)
mov
pop
enter
cwde
jp
mov
in
cmp
xor
enter
and
adc
pop
loopne
push
mov
ja
xchg
loop
shr
repnz
mov
movs
lea
xor
xchg
scas
sub
out
xor
scas
add
lods
and
(bad)
xchg
and
cwde
clc
mov
les
push
aaa
iret
scas
rcl
es
pop
imul
in
mov
shl
cwde
xchg
xchg
vphadduwd
xchg
xchg
pop
pop
push
cs
stos
stos
sub
xchg
mov
test
je
jb
mov
xor
lock
inc
ss
ins
xor
in
mul
fistp
cmp
xor
mov
ret
cld
dec
mov
sub
rcl
push
jecxz
mov
enter
popf
mov
xchg
xor
inc
push
sbb
test
repz
std
int3
cmps
mov
dec
and
mov
dec
mov
test
dec
pop
stc
xchg
data16
(bad)
fisttp
ins
movs
push
int
mov
push
pop
mov
out
shr
inc
mov
add
ins
sub
or
mov
mov
out
jb
mov
cwde
les
shl
es
icebp
jae
dec
call
jle
dec
push
iret
pop
call
mov
scas
into
inc
out
mov
mov
aad
dec
xchg
shl
or
fistp
rdmsr
cmp
imul
daa
mov
das
ret
call
mov
loopne
add
inc
ds
(bad)
hlt
ja
nop
rol
or
sub
fcomp
dec
shld
ss
adc
or
jb
push
mov
pop
pop
aas
or
or
xor
jmp
jnp
repnz
fstp
or
sbb
mov
inc
push
xchg
adc
push
scas
adc
pushf
outs
inc
fs
inc
mov
out
sbb
loopne
push
shr
or
in
dec
jecxz
int3
call
dec
pop
pushf
cmp
ficomp
cs
xchg
xchg
mov
jg
sar
fistp
repnz
in
jbe
retf
fdiv
imul
jb
push
enter
cmp
ret
test
popa
pop
xchg
pop
jmp
nop
mov
cwde
mov
ret
sub
xor
cmp
fidiv
daa
xor
pushf
xor
inc
mov
mov
ss
out
outs
std
movs
fwait
sbb
mov
ficomp
test
test
ficomp
xchg
pop
xor
adc
mov
jbe
fstp
in
div
(bad)
fadd
and
cmp
ss
jns
xor
or
dec
dec
pop
cmp
ins
adc
sbb
xchg
das
enter
dec
pop
mov
jns
xchg
shl
dec
cwde
pop
outs
test
fcmovu
add
add
pop
inc
mov
popf
ins
inc
sbb
je
cmp
std
(bad)
das
int
push
leave
imul
ret
dec
jo
out
mov
mov
pop
mov
mov
rol
pop
lock
cmp
cmps
repnz
retf
fldlg2
dec
dec
not
clc
adc
push
test
lods
shr
dec
mov
bound
pusha
cmp
jne
out
ficom
and
in
push
cmps
mov
xchg
addr16
xchg
mov
fsubr
cdq
adc
int
xchg
cmp
dec
push
hlt
inc
test
retf
xchg
mov
sub
mov
and
mov
imul
and
cdq
stos
add
popf
leave
cmp
out
cld
mov
ficomp
mov
pushf
in
ins
sbb
jbe
dec
cmp
adc
xchg
arpl
cmp
lahf
(bad)
push
imul
ror
loop
add
cmps
mov
retf
cs
and
sub
and
int
in
fld
adc
lods
and
lods
and
lods
and
push
xchg
je
dec
call
mov
cdq
popa
gs
in
mov
inc
inc
cld
inc
mov
aaa
adc
push
shl
xor
pushf
mov
repz
dec
sahf
mov
popa
push
jp
in
in
loope
pop
lods
retf
lahf
mov
fstp
xchg
xor
jae
push
jecxz
mov
fneni(8087
xor
fwait
mul
loope
inc
mov
mov
push
pop
or
das
cmc
out
js
sub
jecxz
cmp
sub
lahf
dec
out
es
cdq
cmp
fld
push
pop
dec
int
sbb
xchg
cmp
dec
(bad)
pushf
enter
cmp
cmc
test
jmp
dec
pusha
push
repnz
ins
jb
out
in
adc
gs
outs
sbb
fs
inc
mov
mov
push
aad
stos
cmps
dec
push
mov
xchg
daa
push
lahf
xor
aam
and
addr16
pop
fadd
lods
icebp
repz
in
push
push
cs
mov
adc
arpl
repnz
pushf
lods
aam
fdiv
pop
pop
push
xchg
push
pop
call
cli
jle
pop
jmp
mov
mov
cmp
push
addr16
sub
rol
in
pop
cmp
jmp
inc
jb
cmp
and
mov
mov
jle
add
cmps
sbb
xor
jnp
int3
mov
rcl
lods
mov
mov
push
std
pop
out
jmp
xor
mov
xchg
es
jecxz
xchg
iret
and
pop
xor
fdivr
mov
int3
fwait
cmp
mov
xor
xchg
jb
(bad)
lods
pop
mov
ret
xchg
pushf
dec
mov
fimul
xor
test
dec
mov
sub
mov
mov
sti
jmp
cmp
mov
push
int3
in
(bad)
js
stos
aaa
adc
repz
cmp
ret
or
pop
add
inc
xor
inc
xor
xchg
leave
pop
lock
iret
dec
stc
loop
hlt
frstor
rcl
push
mov
stos
inc
xchg
cs
cmp
fsubr
mov
popf
xor
clc
in
ret
cmps
dec
push
add
jge
test
rol
dec
sbb
addr16
mov
lahf
cmp
sub
cmp
arpl
mov
pop
sub
pop
pop
push
nop
pop
push
xor
pop
jne
call
xchg
(bad)
int
gs
gs
in
faddp
movs
jns
outs
jb
test
pusha
jle
cmp
sbb
lods
dec
xor
xchg
jb
cmp
inc
adc
fld
add
not
jnp
call
xor
sub
inc
inc
jl
sti
repz
fs
cli
push
xor
jp
retf
mov
cmp
cli
mov
cmp
or
(bad)
daa
dec
sbb
shl
shl
mov
cli
push
(bad)
loop
sbb
sahf
xor
repz
dec
dec
sahf
pushf
call
addr16
pop
mov
dec
outs
mul
scas
int
pop
(bad)
jl
inc
into
test
jl
ins
aad
cli
dec
sbb
pop
add
outs
outs
and
xchg
or
ja
out
gs
lods
sbb
sub
es
mov
push
sub
fst
cmp
je
daa
hlt
xchg
and
pop
and
test
leave
jo
jb
out
push
ds
sub
adc
cmp
mov
call
mov
or
push
ret
mov
clc
pop
dec
cmp
jmp
test
mov
daa
mov
cmp
cld
nop
mov
adc
aaa
push
js
adc
bound
icebp
int3
jmp
jae
and
fwait
cwde
xchg
cmp
rol
imul
jnp
bnd
sub
pop
mov
mov
mov
lods
sub
retf
add
push
xlat
push
scas
lods
stos
adc
mov
shl
rcr
sar
in
out
stos
sahf
outs
inc
ret
ss
cwde
stc
gs
push
retf
push
jnp
xor
xchg
xchg
repz
repnz
popa
cmp
push
das
jecxz
inc
mov
cdq
mov
cs
aaa
fs
sbb
lock
repz
std
dec
push
push
jbe
pop
outs
xlat
mov
fistp
push
mov
sti
(bad)
adc
out
leave
or
mov
jg
inc
and
lock
arpl
fidivr
inc
mov
push
jo
jmp
add
xor
popf
mov
and
retf
dec
or
adc
push
das
pop
mov
jmp
shr
ins
ins
sbb
xchg
mov
xor
out
fcom
cs
fiadd
cmps
add
cld
stos
pusha
xor
addr16
and
popa
call
lahf
or
leave
pushf
je
and
sub
test
mov
pop
mov
mov
pushf
repnz
jmp
mov
cmp
cld
adc
sub
call
push
daa
cmp
or
sbb
jns
(bad)
and
push
jns
test
pop
iret
add
int
pop
cmp
daa
imul
ret
lds
cmps
lods
pop
xchg
push
mov
in
in
adc
pop
rcl
push
inc
xchg
xlat
aam
xor
pop
mov
xor
mov
or
fidivr
scas
(bad)
ror
fldenv
cdq
mov
pop
xor
dec
cmp
ret
mov
pop
je
push
cmp
jle
into
scas
sahf
lds
mov
es
ja
inc
and
mov
std
gs
dec
or
cmp
mov
jp
xchg
movs
gs
xchg
leave
mov
in
mov
jns
lock
or
sub
sub
push
or
mov
ss
mov
mov
push
mov
scas
jle
jp
jns
and
fistp
popf
test
jg
mov
nop
push
and
add
and
fs
adc
and
inc
cld
imul
shr
stc
jae
sbb
das
cwde
aas
and
dec
mov
dec
pop
mov
xor
je
mov
xor
xor
fist
sub
jp
loop
lds
gs
push
ins
mov
push
xor
imul
pop
ins
scas
arpl
mov
and
aas
push
out
pop
inc
aas
jmp
jp
or
aas
xchg
(bad)
daa
push
loope
or
xchg
cs
mov
and
(bad)
int3
adc
xchg
loop
nop
pop
loop
mov
aas
ja
jmp
lods
pop
sub
lock
cmp
mov
movs
jo
imul
movs
pop
adc
test
xor
push
out
aad
pop
xor
and
test
xchg
cmp
fwait
xor
dec
iret
inc
push
jmp
fadd
push
fidivr
cmp
out
jno
dec
pop
dec
jb
stos
add
out
ret
lock
add
mov
inc
add
loope
gs
les
pushf
jmp
(bad)
icebp
sbb
pop
scas
xor
mov
mov
push
mov
push
mov
mov
loop
dec
cmp
repnz
sbb
shl
mov
and
inc
sbb
mov
(bad)
jmp
call
lea
push
sbb
mov
dec
mov
jle
dec
fnstsw
ins
jb
int
sahf
cmp
(bad)
into
aas
cmps
out
push
mov
and
push
fsub
fidivr
sbb
inc
into
push
cli
bt
cmp
test
lods
push
mov
jmp
icebp
(bad)
aas
and
leave
dec
or
movs
cwde
repnz
dec
movs
mov
mov
ret
call
popa
hlt
iret
jne
shr
inc
(bad)
(bad)
idiv
popa
hlt
jg
std
jmp
sti
jg
std
pop
inc
(bad)
mov
cmp
mov
add
dec
inc
dec
inc
scas
inc
pusha
or
jae
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
imul
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
inc
inc
push
inc
inc
pop
push
adc
add
add
push
add
add
ins
add
add
push
add
arpl
je
jne
jb
add
outs
add
add
ins
add
add
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
imul
dec
inc
or
add
or
add
add
add
push
or
add
add
pop
mov
push
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
jo
dec
inc
inc
push
js
in
mov
mov
out
mov
adc
mov
jp
add
ja
mov
or
push
mov
neg
pop
mov
(bad)
cwde
pop
dec
xor
mov
fcmovu
jnp
jle
add
into
repz
inc
test
pop
jnp
gs
ins
and
mov
test
test
push
jbe
outs
mov
mov
addr16
(bad)
neg
mov
in
in
iret
or
lahf
mov
cmp
ja
into
outs
mov
fcmovnu
mov
cmp
(bad)
outs
mov
ins
mov
lods
mov
out
aad
aad
outs
inc
push
push
(bad)
imul
stc
scas
jg
jmp
(bad)
div
sti
sti
(bad)
dec
add
pop
ds
cmps
lock
(bad)
jle
ud2
push
je
inc
pop
test
aad
jne
pop
mov
mov
imul
fnsave
outs
xchg
into
jbe
lods
fld
mov
clc
xor
or
fbstp
cdq
popa
mov
push
fwait
stos
push
(bad)
push
sub
mov
hlt
cmps
mov
out
(bad)
ja
fild
sub
pop
int
scas
shr
mov
cmp
rcr
outs
adc
fst
jbe
sub
enter
sbb
(bad)
jbe
in
ins
ja
js
leave
push
push
mov
fstp
aad
xchg
fcom
pop
pop
cld
fldenv
std
sbb
int
jle
jb
xor
mov
frstor
sbb
or
pop
xchg
xor
jnp
les
dec
pop
inc
inc
add
add
mov
jmp
sbb
add
retf
xchg
aas
cld
loope
call
pop
add
xchg
xchg
into
loopne
cmps
xchg
sar
adc
jne
mov
cmp
and
mov
cmp
adc
retf
iret
and
es
add
or
scas
push
(bad)
sub
cmp
loope
aad
mov
mov
test
aam
or
fwait
mov
sbb
outs
adc
mov
out
push
push
movs
dec
inc
cdq
sub
js
loopne
shl
je
cmp
fs
pop
mov
aad
neg
jg
or
(bad)
dec
xchg
movs
repnz
mov
pop
sub
retf
xor
rcl
jmp
cmp
dec
push
shl
mov
push
rol
leave
mov
xchg
jmp
fadd
fcomp
clc
sti
(bad)
push
jo
addr16
and
aad
xchg
mov
imul
fisubr
lods
mov
popa
or
test
or
push
popa
loope
and
mov
dec
jne
adc
dec
in
lds
mov
mov
dec
sahf
imul
jae
retf
sub
pop
stos
(bad)
adc
mov
pop
ins
cdq
xchg
mov
jae
lock
scas
loopne
pop
nop
adc
or
jge
lods
mov
and
repz
or
fisttp
aas
cld
inc
jo
test
jns
fcom
retf
sub
pop
movs
push
out
xor
cmp
adc
mov
dec
pop
dec
(bad)
cmp
aaa
inc
add
add
add
jl
lods
mov
fist
push
cmps
sub
xchg
push
retf
xchg
fdivr
mov
mov
sub
xchg
stos
sub
cmp
lods
xor
inc
fwait
scas
aad
adc
mov
or
adc
sbb
xchg
outs
ror
inc
sub
bound
dec
mov
mov
in
fpatan
in
mov
mov
and
sub
jmp
add
mov
dec
mov
or
add
cmp
jae
shr
pop
adc
(bad)
and
lods
jp
pop
adc
pop
jl
and
std
mov
dec
mov
push
ret
and
int
mov
mov
aaa
adc
pop
cwde
dec
retf
outs
mov
mov
mov
inc
lods
aaa
sbb
jecxz
xor
fistp
cmp
add
mov
(bad)
enter
dec
lock
add
and
cmp
fcom
inc
jp
mov
mov
inc
adc
in
pop
jge
aad
dec
ins
push
hlt
and
jae
jmp
add
sahf
inc
dec
dec
fmul
call
test
mov
xchg
jo
fidivr
sahf
scas
mov
test
mov
arpl
jo
xchg
out
(bad)
mov
dec
cmp
cmp
jmp
popa
lods
pop
movs
push
mul
sti
popf
ja
stc
cli
jmp
mov
out
inc
sub
add
inc
cmp
test
sahf
cwde
enter
inc
les
sub
pop
sbb
cld
lods
shl
push
or
or
cs
and
fisub
sub
xor
inc
sub
jmp
or
or
push
xchg
pop
push
sbb
test
push
test
push
jmp
and
in
es
inc
jp
mov
fwait
in
ins
movs
xchg
inc
cdq
adc
scas
and
lods
lea
jg
xchg
pop
jle
fmul
mov
mov
mov
js
mov
fidiv
js
push
mov
push
mov
mov
arpl
test
inc
push
adc
xor
imul
daa
mov
add
dec
cmp
lods
nop
and
xchg
mov
jecxz
ins
jno
rol
je
lock
clc
add
push
cmps
test
cmp
inc
fcom
and
jo
xor
ja
test
mov
push
jmp
lods
in
push
pop
pop
cli
stc
out
inc
inc
enter
gs
push
add
mov
dec
or
jl
loop
mov
(bad)
(bad)
pop
cmp
call
adc
pop
mov
arpl
sub
or
sub
test
xchg
dec
push
xchg
les
lods
test
movs
mov
test
lods
enter
inc
mov
in
pop
xor
ficom
mov
ret
aad
clc
mov
loopne
lds
jnp
sub
(bad)
imul
xchg
mov
push
call
lds
(bad)
mov
mov
mov
mov
jbe
cmps
lahf
jle
xchg
ins
jno
stc
dec
sub
icebp
(bad)
lods
pop
mov
icebp
out
fwait
scas
mov
xlat
scas
pop
jg
xchg
push
cmp
(bad)
sub
rol
je
jle
fdiv
sar
cmc
arpl
mov
push
test
mov
jo
jb
bound
xlat
cmps
dec
or
jne
stos
cmp
es
mov
mov
xchg
dec
ds
pop
dec
and
mov
and
out
mov
fld
push
or
les
pop
rol
inc
jae
or
scas
stos
stos
ret
ja
xor
mov
inc
ror
mov
lock
je
mov
mov
push
jns
xchg
das
(bad)
iret
ret
(bad)
pop
sar
mov
cld
icebp
mov
mov
mov
xlat
inc
jae
cmp
mov
jg
lods
pop
or
ds
cmp
and
out
push
jnp
and
dec
jo
adc
xor
(bad)
sbb
jl
and
leave
imul
(bad)
loop
pop
shl
pop
pop
mov
push
inc
out
inc
or
hlt
rol
popf
cwde
(bad)
out
outs
jb
mov
push
adc
fwait
shr
mov
call
jns
nop
retf
dec
stos
out
aad
mov
jge
pushf
add
bound
xor
ins
fnstenv
push
add
cmp
inc
js
add
xchg
add
sbb
or
cwde
push
adc
adc
adc
inc
sbb
call
js
push
push
push
dec
call
sub
movs
sub
repnz
leave
es
pop
jae
sub
or
data16
lods
popa
sti
sahf
adc
xchg
pop
or
mov
xchg
push
call
jle
int3
cdq
mov
xchg
outs
packssdw
inc
pop
xchg
in
mov
dec
jge
mov
les
xor
pop
pop
push
mov
mov
sub
mov
mov
std
adc
lods
mov
popa
sti
loope
add
push
pmulhw
stos
add
jmp
cdq
jo
push
mov
xchg
rcr
xchg
(bad)
jne
inc
push
mov
ja
mov
jae
push
xor
pusha
inc
inc
inc
rol
ins
adc
mov
mov
inc
pushf
jae
je
xchg
cmp
movs
daa
lock
cmps
dec
lahf
mov
sub
mov
retf
arpl
lods
ja
(bad)
xchg
enter
repz
scas
test
push
sbb
dec
sahf
out
addr16
gs
cmp
pop
add
sbb
push
add
adc
icebp
mov
dec
dec
cmp
xor
jb
mov
ficom
scas
lahf
add
out
sub
and
test
call
mov
fisttp
scas
lea
aas
(bad)
push
es
lods
sbb
xor
cmp
inc
jo
adc
hlt
les
push
push
pusha
add
mov
les
outs
inc
cmp
sbb
sahf
mov
xchg
and
sub
add
sbb
dec
mov
dec
ror
xor
dec
sub
jo
push
lods
int
xchg
mov
bound
dec
int
pop
pop
sbb
xorps
inc
mov
punpckhbw
jp
mov
loop
or
dec
jp
xchg
fimul
aad
in
retf
out
cmp
loop
outs
inc
mov
mov
cwde
adc
popa
adc
sbb
test
mov
ret
dec
dec
jns
xor
addr16
push
add
cmp
mov
loopne
loope
es
(bad)
push
mov
adc
rcl
push
sbb
jne
inc
ins
push
mov
movups
ds
popa
inc
clc
ret
into
aad
push
push
outs
pusha
mov
pop
aas
sbb
test
and
daa
add
mov
mov
xchg
dec
xor
sub
xchg
stos
(bad)
stos
sbb
ins
popa
or
jo
lds
xor
mov
push
ror
lods
sub
lods
imul
add
sbb
mov
loopne
das
push
add
mov
adc
and
add
push
cli
addr16
lea
push
add
in
lds
ins
nop
call
mov
push
mov
pop
mov
push
(bad)
ja
cmp
mov
gs
adc
das
add
jo
daa
add
cdq
adc
xchg
jmp
adc
outs
sbb
lods
js
sbb
int3
test
cs
lods
add
xor
shr
ret
cmp
adc
cmp
push
or
test
mov
aaa
pop
sub
mov
fisubr
or
iretw
sahf
lods
in
test
pop
push
mov
icebp
adc
repz
outs
dec
sbb
sub
je
adc
clc
dec
lock
dec
or
or
add
or
sub
xor
aad
imul
test
(bad)
cmps
xchg
rcr
pop
xchg
xor
fistp
mov
or
in
sbb
push
pop
or
mov
adc
push
retf
shl
leave
jmp
mov
push
aaa
xlat
inc
mov
out
lods
leave
in
mov
mov
mov
mov
cli
retf
sbb
xchg
test
cmps
jo
aas
or
bound
loope
and
xchg
push
add
pop
mov
test
mov
arpl
or
pop
imul
push
xor
ret
aam
push
adc
loope
mov
mov
iret
mov
(bad)
push
inc
fwait
or
sub
pop
and
push
and
sub
imul
sbb
dec
or
or
cmp
into
dec
pop
pop
xchg
(bad)
pop
test
jo
cld
and
clc
ret
int3
lahf
dec
lods
jg
mov
fisub
inc
repnz
stos
retf
mov
scas
mov
pop
jae
adc
int
push
test
or
push
push
sar
xor
jle
in
lahf
add
xchg
jo
xchg
mov
add
mov
iret
iret
push
xchg
xor
fsub
cmp
push
sbb
xchg
inc
test
rcl
adc
add
retf
dec
popf
push
mov
jne
div
add
sub
inc
pop
add
dec
imul
or
das
aaa
ret
in
push
xchg
add
add
in
pop
jne
jns
retf
movs
mov
clc
stos
sub
mov
fnstsw
cmp
push
push
xor
sub
inc
ins
pop
xacquire
mov
mov
push
xor
mov
popa
bound
inc
clc
cld
pop
stos
pop
jae
inc
mov
or
inc
dec
pop
in
in
enter
addr16
lods
jg
add
mov
sub
(bad)
in
fs
ffreep
movs
ss
lods
sub
pop
xchg
sbb
pop
clc
stos
sub
int
movs
scas
push
cld
stc
sub
push
push
ret
popf
mov
in
cmp
xor
adc
fdivr
xchg
retf
(bad)
scas
or
adc
jne
mov
mov
pop
test
fwait
dec
int
sbb
jne
xor
pop
daa
test
hlt
push
mov
adc
adc
aas
jb
rcr
pop
aam
shr
xor
mov
shr
outs
imul
pop
xchg
lods
and
xor
imul
cmp
xchg
(bad)
sub
xchg
add
pop
mov
adc
fist
not
cmc
xchg
jbe
shr
pop
mov
and
push
scas
pop
cmp
sbb
out
daa
adc
mov
cmp
inc
test
push
push
inc
aaa
push
pop
inc
clc
stos
sub
adc
mov
sub
xlat
mov
sbb
iret
inc
inc
clc
inc
enter
jle
mov
(bad)
dec
js
adc
cmp
sar
daa
xor
sbb
xor
les
mov
push
adc
mov
cld
sub
jae
add
daa
(bad)
sbb
mov
adc
ins
pushf
ss
fsubp
movs
push
out
out
push
adc
test
add
pop
inc
sub
shr
pop
aas
sub
(bad)
xor
jno
cmp
mov
dec
pop
push
adc
add
aad
xchg
sbb
out
loope
test
inc
stos
and
pop
jl
cmp
iret
adc
out
repz
cld
jne
pop
sbb
mov
daa
in
push
pop
sbb
inc
dec
dec
dec
xchg
cwde
pop
pop
int3
sbb
mov
daa
cmp
dec
push
add
sub
test
sub
xor
pop
and
inc
test
pushf
mov
and
fistp
inc
adc
retf
fwait
int3
dec
fstp
arpl
or
jge
pop
adc
cmp
sbb
add
or
call
popf
movs
add
inc
xor
cmp
ror
xchg
xor
dec
sub
and
ret
ins
mov
stos
clc
mov
push
movs
sbb
cdq
sbb
jle
outs
cld
out
and
fadd
push
xchg
cmps
jle
push
movs
push
lods
and
pop
test
enter
sub
push
(bad)
and
xor
mov
fimul
ret
or
imul
outs
fidivr
push
adc
scas
mov
retf
in
dec
add
jmp
lods
sbb
mov
clc
mov
shl
test
sub
lock
inc
add
jbe
mov
jae
xchg
cdq
sub
push
sbb
test
test
cmps
enter
shl
loop
push
pop
add
jno
jecxz
push
fiadd
stos
test
dec
pop
mov
call
jge
sar
mov
adc
push
push
stc
xchg
cmp
cmp
pop
dec
out
fnstsw
add
(bad)
and
mov
xor
call
cmp
and
sbb
mov
in
nop
popa
int
retf
and
movs
push
add
xchg
xchg
push
fisttp
(bad)
pop
inc
inc
aas
pop
inc
fwait
pusha
int
sbb
xchg
mov
into
call
jle
pop
pop
dec
lea
aad
out
repz
jmp
stc
retf
mov
push
pop
lods
push
mov
cmc
aam
push
jno
leave
xor
inc
test
popf
fisttp
dec
ss
data16
jmp
les
test
stc
je
std
cmp
dec
cmp
adc
pop
and
xchg
dec
shl
retf
je
sub
xor
mov
repnz
dec
test
sbb
je
std
fadd
fst
cs
and
(bad)
test
ret
mov
add
cmp
ss
aas
ret
dec
inc
mov
mov
or
es
lea
add
(bad)
stc
xor
mov
push
cmc
shld
mov
jmp
rcr
add
cmp
adc
sub
dec
cmp
mov
dec
gs
mov
xor
dec
cmp
iret
and
outs
psubsw
(bad)
js
ret
or
lods
xchg
mov
mov
jl
movs
sub
or
mov
in
xor
in
mov
mov
and
iret
pop
shl
add
or
sbb
arpl
(bad)
je
cmp
and
push
aas
mov
das
jge
add
gs
(bad)
mov
aam
test
mov
push
aad
test
shl
mov
and
daa
pop
std
inc
mov
aam
cmp
pop
sahf
and
sub
ss
popf
mov
or
mov
or
mov
jae
xor
adc
cwde
cmps
sahf
lods
ss
cmps
leave
loope
in
sbb
jp
inc
push
push
out
(bad)
xchg
mov
pop
push
movups
sub
or
daa
es
sbb
stc
bound
jl
xor
shl
adc
xchg
pop
ja
loopne
nop
sbb
psraw
xor
inc
sbb
inc
sub
inc
mov
leave
xor
rcl
mov
loop
adc
ficom
adc
scas
mov
daa
das
mov
jb
fst
in
ret
mov
mov
js
xor
inc
fwait
xchg
into
pusha
rol
jne
into
scas
inc
mov
(bad)
xchg
dec
cmp
push
dec
(bad)
mov
repz
xchg
dec
shl
aaa
rol
call
mov
sub
adc
mov
lods
pop
cmp
sub
gs
xor
out
sbb
adc
mov
sahf
jnp
imul
ds
fisttp
xor
cmc
cmp
pop
jmp
push
pop
adc
mov
jae
xchg
jmp
jle
sub
aam
movs
into
mov
clc
pop
cmc
js
adc
js
and
in
ret
sbb
fcomp
(bad)
sahf
sub
add
add
mov
add
push
or
push
add
jp
adc
addr16
in
das
or
push
ret
out
movs
push
sub
push
aad
dec
cmps
jno
mov
loope
xchg
and
aam
cmp
or
(bad)
xlat
mov
pop
cwde
push
jmp
rol
adc
cmc
loope
cmc
xor
pop
push
cmc
test
push
mov
jno
inc
lahf
ds
addr16
call
cwde
ficom
jbe
iret
arpl
div
jecxz
lea
add
add
pop
jnp
or
aaa
repz
test
mov
jne
cmp
scas
test
scas
add
and
sbb
dec
xchg
dec
xor
push
rcr
outs
dec
cmp
push
push
sub
and
sahf
push
cmp
ds
cmp
adc
test
or
add
inc
jecxz
push
inc
in
jge
fucomi
xchg
pop
and
mov
ins
push
cmps
sti
test
or
cmc
xor
push
jl
scas
sbb
cmp
cmp
push
leave
outs
test
in
jecxz
(bad)
mov
lods
jnp
mov
fisub
fdivr
push
unpcklps
int3
xor
fdivrp
push
cmps
push
cs
and
pop
inc
push
add
pop
pop
or
inc
cmp
xchg
leave
adc
loop
mov
xchg
mov
push
mov
pop
dec
lods
mov
xchg
mov
dec
pop
jge
pop
push
inc
mov
out
int
(bad)
cmp
and
inc
sub
stos
add
call
dec
push
push
cmpxchg
inc
add
dec
pusha
pop
xor
test
jns
sub
cmp
in
and
adc
cmp
mov
sbb
stos
xchg
adc
and
cmp
or
xor
push
mov
adc
ret
pop
cld
aam
xor
sbb
mov
adc
imul
mov
mov
or
int
(bad)
pop
cmp
cmp
cmp
or
mov
push
mov
xor
sahf
and
aam
jns
cmp
xchg
les
push
cmp
or
jb
jmp
cli
mov
out
adc
cmps
lods
cli
data16
and
iret
and
and
xchg
(bad)
dec
push
jp
es
cmp
push
aas
out
add
in
pop
fst
outs
hlt
sbb
cli
mov
sahf
cdq
cmp
mov
loope
gs
setl
jecxz
xchg
inc
add
mov
xor
into
(bad)
outs
jg
jl
rcl
adc
jo
cld
push
je
clc
add
popa
outs
or
jo
add
or
pop
outs
mov
pop
(bad)
mul
fisub
or
prefetchnta
jne
sbb
(bad)
cmp
inc
loop
inc
pusha
lea
inc
cmps
fld
fsub
ret
xchg
mov
sbb
inc
sub
xor
inc
xor
mov
scas
mov
daa
sti
xchg
sbb
xchg
or
sahf
sub
mov
lea
aaa
mov
inc
mov
xor
gs
push
sub
fnsave
cdq
out
mov
idiv
dec
and
lds
and
in
nop
icebp
mov
iret
js
(bad)
mov
cmps
or
jns
add
xor
mov
dec
add
test
and
(bad)
push
jmp
jb
xor
pop
hlt
push
es
outs
dec
and
pop
mov
das
call
test
out
jl
cwde
aaa
(bad)
xor
mov
add
cmps
test
jnp
sbb
fmul
xchg
(bad)
int
cmp
xchg
dec
lds
sub
(bad)
adc
out
(bad)
int3
pop
cld
(bad)
loop
psrld
test
mov
icebp
jbe
xchg
push
push
push
cmp
test
sub
adc
jg
lods
mov
loop
int
cmp
inc
and
inc
jmp
mov
stc
lods
leave
sub
movs
lods
clc
jo
out
cdq
leave
out
es
push
and
addr16
popa
stos
inc
push
pop
retf
int3
loope
jno
out
into
push
imul
jns
push
sub
jecxz
xchg
leave
inc
rol
test
int3
mov
or
pop
out
mov
or
adc
lea
iret
sbb
adc
cmp
jmp
idiv
push
mov
push
push
data16
daa
adc
bound
ret
daa
sbb
sub
loope
add
mov
js
cmp
pop
js
mov
cs
push
(bad)
inc
fcomp
push
xor
cmp
retf
out
mov
pop
(bad)
rep
mov
fs
add
fist
sar
dec
pop
xchg
sub
push
repz
dec
icebp
cmps
lds
pushf
and
add
sbb
sub
and
mov
inc
ror
dec
sar
adc
pop
xor
sbb
or
xchg
repz
jmp
outs
fidiv
inc
in
pop
mov
out
cmps
and
mov
push
orps
arpl
push
pushf
pop
mov
cmp
call
(bad)
adc
xor
pop
inc
add
rcl
mov
(bad)
jg
push
clc
out
mov
pop
ja
fisttp
fcom
cmps
xchg
outs
sub
push
or
pop
jne
xor
(bad)
adc
popa
ror
mov
rol
std
pop
hlt
das
call
mov
mov
stc
out
test
cli
push
shl
add
enter
dec
in
in
leavew
and
sbb
jp
mov
outs
cmp
movs
xchg
pop
fcom
pop
lahf
sub
test
add
xchg
jp
jmp
neg
pop
scas
loopne
cmc
out
enter
mov
inc
(bad)
mov
int3
fwait
jne
ficomp
mov
inc
or
in
into
fstp
test
nop
imul
inc
cs
jl
add
push
sbb
outs
dec
inc
inc
lods
arpl
or
xchg
sbb
mov
ror
neg
aas
jmp
loop
sbb
nop
mov
mov
popa
cmp
in
(bad)
and
enter
inc
xor
jmp
mov
inc
mov
push
sbb
push
jnp
cmc
adc
(bad)
xor
popa
or
inc
std
dec
xor
inc
test
hlt
add
int
push
inc
repz
mov
fisttp
push
movs
and
sub
xor
mov
retf
pop
push
xadd
inc
sub
loope
and
lahf
sbb
aas
pop
mov
sub
call
movs
pop
aad
mov
sub
pop
sub
inc
sbb
leave
rcl
rcr
bound
(bad)
shl
fstp
mov
(bad)
loop
adc
add
add
cmp
imul
jg
pop
icebp
push
js
je
je
(bad)
std
icebp
dec
jo
aas
ins
sbb
pop
mov
pop
sub
into
pop
or
sar
call
xchg
lds
lods
xchg
mov
and
pop
xchg
ss
mov
mov
test
sub
out
imul
push
or
mov
out
mov
mul
mov
jnp
mov
adc
cli
dec
sbb
pushf
nop
nop
add
inc
test
push
jmp
jae
sub
mov
xchg
popf
or
jae
sar
fiadd
div
xor
icebp
inc
cld
adc
icebp
dec
jge
mov
fsubr
cdq
mov
es
retf
sahf
xor
pop
inc
lahf
shl
popa
cmp
in
nop
jl
aas
ret
retf
fstp
fistp
addr16
das
jge
mov
not
jo
rcr
dec
adc
in
add
adc
adc
mov
mov
jp
jb
(bad)
pop
inc
inc
push
cwde
lahf
jl
out
xchg
jmp
and
pop
push
push
add
mov
cmc
or
popf
cmp
stos
xchg
mov
outs
lods
add
sti
aad
mov
fist
xchg
jmp
icebp
sub
fcom
jo
jmp
idiv
sti
int
jbe
pop
out
loope
push
sub
sbb
cmps
adc
imul
cs
ds
xchg
rcr
mov
sub
push
mov
mov
fstp
push
jmp
in
mov
push
loopne
in
xchg
in
je
ds
or
(bad)
scas
enter
dec
int
pop
(bad)
jmp
mov
sahf
jmp
mov
comiss
mov
(bad)
punpckhdq
sub
push
xchg
jl
rcl
sti
stos
(bad)
(bad)
sbb
icebp
cmp
inc
adc
jae
jbe
pop
dec
jle
sub
or
and
rcl
fdiv
xor
or
addr16
sbb
mov
repnz
mov
ror
outs
ja
dec
mov
cld
call
or
jo
(bad)
lea
mov
jae
sbb
scas
(bad)
mov
xchg
fs
jg
cli
aas
outs
pop
cli
out
xchg
comiss
div
fld
ins
jmp
aam
cmp
pop
jp
(bad)
sti
imul
je
pop
xchg
hlt
jmp
cld
pop
out
mov
pop
cmp
push
adc
aam
(bad)
jg
inc
jbe
sbb
iret
nop
arpl
sub
mov
arpl
mov
leave
and
sub
sub
pop
push
pop
inc
bound
cmc
in
icebp
xor
jg
addr16
(bad)
xlat
mov
int3
fcom
loope
mov
jle
jo
loopne
sti
fidivr
fistp
xchg
stc
ret
popf
test
aaa
out
int
mov
cli
sbb
repz
push
jge
fnop
mov
dec
iret
jnp
add
dec
idiv
inc
xlat
sub
dec
jp
cmps
call
(bad)
xchg
in
jmp
mov
mov
fstp
push
cli
dec
es
retf
arpl
inc
jae
ins
add
or
arpl
leave
div
(bad)
ja
retf
fstp
shl
nop
add
mov
xchg
add
mov
les
repnz
scas
push
jge
icebp
adc
(bad)
cmp
(bad)
pusha
inc
rcl
(bad)
cwde
jb
pusha
idiv
xor
mov
jae
(bad)
jnp
loope
addr16
fistp
in
icebp
into
ja
cmp
(bad)
test
shl
(bad)
mov
shl
sbb
and
das
aad
xor
or
out
xor
add
in
and
sbb
adc
and
call
sub
test
leave
js
retf
mov
jl
jb
ret
jecxz
pop
sbb
cld
lock
ret
ret
mov
ret
fwait
push
push
stos
jge
lock
jl
outs
jecxz
frstor
mov
sub
aaa
sub
jle
repnz
ret
inc
jb
(bad)
jns
lock
sar
add
dec
xlat
fistp
lods
(bad)
cmp
push
out
mov
cs
xchg
hlt
mov
fdiv
pop
dec
(bad)
dec
loopne
loope
jno
sub
jl
or
in
aam
sub
aad
ret
mov
mov
mov
add
xchg
dec
and
arpl
pop
pushf
or
cmc
xchg
aaa
scas
cld
in
ss
(bad)
stos
jmp
pop
dec
add
xlat
iret
mov
or
add
xor
and
cld
pusha
(bad)
popf
hlt
and
or
orps
ds
xor
daa
mov
enter
addr16
dec
ficom
mov
into
add
in
lahf
xchg
sub
push
mov
out
and
xor
call
shr
scas
sahf
cld
out
les
xor
sbb
dec
cmc
mov
icebp
cs
pop
mov
mov
ret
jo
xlat
xchg
ins
mov
icebp
mov
sar
aas
sbb
fwait
push
stos
push
popa
xchg
cs
and
jb
sbb
mov
mov
sub
sahf
sahf
pop
ss
cmp
(bad)
in
jle
fcom
dec
jge
jmp
mov
(bad)
fistp
and
out
adc
sub
dec
mov
aas
inc
(bad)
fisttp
ret
aam
out
cmps
test
and
jnp
inc
out
dec
or
bound
out
inc
jle
add
fistp
cmp
fld
mov
jg
xchg
jmp
dec
mov
jo
cmp
repz
test
mov
sub
dec
(bad)
dec
mov
out
adc
xchg
lds
push
sti
gs
fucom
mov
hlt
addr16
dec
jbe
bound
aas
sbb
cli
(bad)
loope
aaa
xchg
mov
add
jl
jge
pop
movs
or
repz
pop
lock
mov
rcl
mov
stc
aad
mov
mov
and
je
pop
add
(bad)
cli
jmp
fwait
xchg
cmp
and
in
imul
jmp
add
scas
lods
mov
cmps
xor
loopne
jmp
cmp
sbb
(bad)
cwde
mov
cmp
mov
es
ficomp
sbb
fwait
lods
add
jae
js
(bad)
adc
mov
pop
lea
mov
push
fistp
les
jo
popa
pop
loopne
data16
xor
mov
scas
or
xor
out
mov
pop
jle
outs
sub
xor
jns
mov
(bad)
out
(bad)
jb
pop
add
jge
nop
std
aad
xchg
std
cmp
push
fcomi
jbe
inc
inc
inc
movs
movs
movs
pusha
frstor
retf
inc
mov
inc
add
sar
dec
enter
(bad)
fnstcw
fild
popa
lock
mov
test
cmps
int3
jge
fcomp
cmp
jg
and
rcr
pop
fcomip
mov
or
cdq
push
jg
push
dec
mov
add
add
xor
cmp
mov
aas
out
xbegin
sar
cmps
adc
out
dec
or
jp
loopne
push
or
mov
dec
pop
add
pop
jmp
retf
popf
inc
addr16
or
fdivr
pop
pop
(bad)
pop
ret
jl
push
cmc
mov
retf
push
ins
das
mov
mov
add
rcl
int3
loope
push
jmp
call
cld
std
idiv
ins
or
test
mov
push
or
sub
int3
test
jg
retf
sbb
xor
icebp
cli
rcr
dec
pop
mov
jecxz
sti
neg
adc
jecxz
das
inc
push
mov
mov
mov
addr16
cmp
jmp
jg
mov
int
std
pop
arpl
ficomp
jecxz
fisubr
pop
mov
hlt
rcr
call
loope
dec
out
or
dec
sahf
ja
mov
lds
cmc
xchg
ret
and
scas
pshufw
iret
fwait
or
lahf
xlat
xchg
mov
(bad)
ins
mov
inc
leave
or
pop
shr
mov
rol
fidivr
inc
push
inc
xchg
mov
fstp
push
mov
add
add
mov
in
(bad)
aaa
add
das
das
popf
adc
mov
in
pop
aas
sti
call
paddb
int3
dec
or
add
js
mov
mov
mov
sbb
jno
lahf
retf
mov
mov
add
scas
mov
cmp
int3
out
jl
frstor
fstp
loope
jae
jecxz
ror
cmp
ds
jmp
xchg
adc
jmp
inc
cmp
mov
adc
jae
das
fisubr
aaa
xchg
imul
ret
hlt
cmp
cmp
ins
xchg
shr
(bad)
mov
pop
add
pop
mov
fidivr
mov
lock
push
popa
dec
adc
mov
test
mov
pop
repnz
xlat
fwait
mov
(bad)
pop
aaa
lods
stc
ds
repz
popa
push
add
ror
rcl
popf
pop
loopne
and
jle
test
icebp
shl
ins
jnp
mov
add
sbb
xor
mov
or
pop
(bad)
pop
mov
add
cmp
jg
movs
(bad)
div
lods
loope
scas
psrlq
xor
cmc
cmc
sahf
sbb
in
cmps
ret
lock
imul
push
(bad)
dec
jne
cmp
sbb
dec
push
fdivr
enter
ror
mov
cmp
in
in
test
pop
sar
arpl
fimul
jg
xchg
dec
push
add
cdq
ret
pusha
adc
rcr
lock
pop
xchg
mov
aas
int3
in
clc
adc
jecxz
call
xor
mov
cmp
add
cmp
sbb
icebp
pop
mov
xchg
and
outs
mov
fistp
ja
mov
loope
jo
idiv
fidiv
add
and
nop
adc
xor
jge
pop
inc
inc
sbb
or
add
adc
ret
mov
jne
out
out
jb
inc
jg
shr
push
mov
or
pop
sbb
jg
inc
shl
add
ds
jmp
mov
add
jl
in
mov
cmps
push
ficomp
mov
and
lock
jmp
in
inc
mov
jns
sahf
test
pop
mov
pop
jge
(bad)
fst
outs
lea
sbb
xor
lock
xchg
cs
ins
jmp
push
shl
aam
mov
imul
(bad)
xor
adc
xchg
pusha
(bad)
adc
js
movs
jbe
nop
in
rol
iret
es
pop
add
jae
mov
cmp
push
add
scas
mov
mov
jo
dec
ret
pop
pop
inc
or
and
sysexit
pushf
dec
xor
xlat
jmp
jg
clc
mov
push
js
icebp
(bad)
ins
fwait
jg
div
cmp
imul
imul
and
mov
sbb
push
mov
ds
add
std
in
fistp
(bad)
xchg
sar
and
mov
shl
(bad)
push
outs
out
xchg
(bad)
xlat
inc
sbb
mov
pusha
dec
cmp
jge
nop
push
cli
sub
sti
and
mov
clc
ins
or
stos
or
sub
imul
or
mov
stos
mov
dec
repnz
sbb
nop
dec
adc
stc
mov
xor
enter
add
add
std
test
fs
and
push
jmp
push
aam
adc
inc
pop
jno
or
daa
sar
dec
jg
xor
outs
cmps
adc
lock
gs
das
fist
rcr
xchg
xchg
pop
push
out
jae
mov
hlt
push
inc
popf
mov
mov
lea
mov
ficomp
jbe
test
(bad)
hlt
test
in
test
pop
(bad)
icebp
push
sar
mov
xor
push
and
gs
pushf
out
push
jl
mov
scas
dec
std
mov
sub
mov
push
jp
add
loop
mov
test
mov
(bad)
cmc
fsub
std
imul
xchg
sbb
loope
mov
shl
adc
adc
jg
cmp
shl
icebp
dec
adc
cmp
aaa
movs
push
adc
xlat
(bad)
mov
(bad)
call
mov
sbb
mul
or
inc
pop
jmp
sbb
jp
add
lods
out
xchg
inc
sahf
aaa
adc
or
in
mul
push
out
mov
mov
mov
out
daa
push
mov
je
or
lea
and
dec
ja
std
rol
jns
movs
fucomip
jo
into
xor
(bad)
push
lahf
cli
adc
fisub
iret
mov
xchg
cmp
push
add
inc
inc
dec
push
test
lock
les
aad
cmp
aaa
or
adc
in
out
inc
adc
sti
cli
push
ins
xor
(bad)
push
clc
inc
cld
dec
lock
cmp
mov
mov
out
out
sbb
mov
mov
push
fs
add
loope
mov
lfs
call
fst
idiv
and
jnp
cld
ds
hlt
(bad)
js
rol
add
push
mov
adc
sub
int
int3
sbb
test
lods
shl
push
test
test
mov
sbb
mov
inc
jo
cmp
rcr
daa
mov
div
repz
fistp
push
xchg
(bad)
pushf
std
repnz
add
mov
xor
fadd
fist
loope
loope
add
xlat
fnsave
mov
idiv
cmp
mov
sub
mov
(bad)
lods
mov
jp
pop
int
mov
std
std
mov
push
or
(bad)
mov
push
xchg
jno
xchg
pop
jns
jmp
inc
mov
ds
es
or
dec
test
mov
in
idiv
add
or
push
sbb
or
adc
cmp
add
jo
add
xor
xlat
pop
jnp
pop
jmp
pop
pop
push
push
fld
mov
sub
js
(bad)
icebp
lea
cmp
jo
stc
outs
ret
and
mov
cmps
rcl
jle
mov
call
cmc
push
push
(bad)
test
mov
mov
xor
div
shr
out
cmps
cmp
lahf
out
sub
sar
imul
cmp
test
(bad)
loope
aaa
inc
sbb
xor
xor
loopne
xor
mov
mov
pop
pop
je
push
dec
mov
mov
xchg
fwait
and
pop
mov
xor
mov
shl
shl
cmps
dec
push
jbe
dec
jo
in
cmp
jp
(bad)
jns
mov
lods
out
in
rcr
imul
sub
lea
cmp
jecxz
sub
mov
hlt
jno
fadd
sbb
scas
lea
out
test
(bad)
mov
mov
outs
pop
in
(bad)
fiadd
jne
les
mov
adc
fadd
call
clc
mov
fisttp
lock
fistp
lea
and
add
pop
sub
cld
jbe
cli
in
inc
inc
add
inc
or
xchg
fsub
pop
mov
mov
jns
pop
add
call
pop
test
pop
push
cmps
mov
lods
inc
ins
pushf
addr16
pushf
push
add
fldcw
sbb
push
retf
les
jp
dec
bound
cmp
adc
jmp
mov
lock
inc
jnp
scas
xchg
loopne
bound
sti
mov
test
aaa
aam
xchg
and
xlat
adc
gs
(bad)
xor
jb
js
popf
sbb
out
cwde
inc
xor
jo
inc
xor
fild
or
xlat
out
inc
cmp
xor
neg
pop
cmps
inc
in
or
fst
loop
xor
addr16
not
iret
dec
add
test
mov
jg
push
mov
push
fidivr
test
xchg
test
dec
and
jp
mov
call
adc
xchg
push
inc
aam
push
xor
aam
jnp
test
sbb
mov
loop
dec
add
mov
xchg
and
push
add
mov
jo
lea
jns
pop
(bad)
in
rol
mov
push
xcrypt-ctr
cmps
fistp
mov
push
and
sbb
and
sbb
mov
push
xor
push
hlt
stos
(bad)
lods
adc
in
push
in
lods
cdq
sub
jmp
pop
sbb
sub
xchg
js
mov
outs
sub
into
push
or
sti
mov
push
cmp
sbb
enter
retf
or
loop
clc
sub
dec
ret
xchg
icebp
dec
lock
icebp
dec
lock
mov
outs
adc
mov
call
pop
push
popa
mov
cwde
inc
mov
repnz
mov
fld
pop
stos
ficomp
cmps
ficomp
cmps
fstp
movs
cmp
iret
std
cld
add
mov
pusha
rol
inc
adc
scas
(bad)
lock
add
xor
sub
mov
pop
fldenv
ret
ret
pop
add
jo
or
mov
sbb
jnp
jge
or
add
xor
push
ja
out
cs
inc
and
iret
lods
rol
inc
fiadd
fcomp
pop
out
or
scas
mov
in
push
out
fmul
pop
pop
loop
jbe
sub
(bad)
xor
test
pusha
mov
call
mov
xor
mov
jo
inc
inc
inc
add
fwait
xchg
xchg
test
ss
pusha
xchg
add
cmp
fisub
and
add
mov
push
test
es
fnstenv
cmps
push
mov
call
cmp
or
or
mov
mov
ja
ja
xor
mov
push
(bad)
lahf
in
out
jbe
out
sbb
test
jno
loope
pop
pop
leave
mov
in
gs
clc
loop
scas
sbb
xor
cmc
mov
sbb
fld
xchg
adc
mov
jo
jne
jge
mov
les
ficomp
popf
repz
inc
popf
jle
push
jbe
mov
mov
out
pushf
movs
xor
adc
fidiv
xchg
shl
mov
add
jl
cmp
sar
adc
sub
dec
dec
dec
mov
pop
arpl
leave
aas
retf
push
movs
xchg
(bad)
mov
sbb
sbb
mov
xor
cmp
adc
add
(bad)
shr
xchg
jo
sub
and
cmc
jb
pop
out
jbe
scas
(bad)
test
(bad)
ds
adc
stos
pop
(bad)
add
cli
or
push
push
pusha
dec
int
or
js
rcr
enter
inc
in
push
fistp
ret
popa
lea
xor
and
fistp
imul
mov
fistp
out
fcom
xor
fcmovu
jno
loopne
fdivr
pop
pop
pop
pop
pop
pop
or
push
ds
push
rol
dec
test
sbb
pmuludq
push
mov
mov
js
paddd
sbb
fnstenv
mov
inc
int
aad
mov
push
icebp
mov
push
pop
out
fcom
rcr
enter
popa
xchg
add
add
imul
into
gs
fistp
js
out
out
jns
mov
(bad)
xchg
popa
lods
je
sbb
and
inc
adc
or
sbb
stos
es
iret
ss
mov
adc
or
sbb
cmp
movs
aas
ins
lock
jecxz
in
shl
push
push
push
or
ds
les
cmp
mov
or
mov
cmps
inc
jno
or
sub
and
inc
not
(bad)
cmp
repnz
inc
lahf
(bad)
sar
sahf
mov
dec
adc
jp
jecxz
cld
lods
stc
jns
repnz
cwde
fist
ss
imul
repnz
call
(bad)
jg
xchg
das
les
jne
jmp
int
adc
xor
(bad)
mov
(bad)
add
scas
mov
jecxz
movs
mov
out
sti
pop
push
jmp
dec
fs
mov
pop
add
pop
add
xchg
clc
and
add
cmp
mov
dec
ins
xchg
ffreep
inc
fild
jge
call
into
add
lahf
or
jp
adc
jb
and
add
cmp
sahf
hlt
neg
in
in
cmp
test
ror
pushf
add
jo
add
cmp
push
cwde
(bad)
lds
sti
js
push
test
dec
push
xor
rcl
jmp
inc
inc
retf
cmp
mov
jmp
in
pop
mov
(bad)
call
dec
stos
inc
xor
cdq
sub
out
into
das
mov
outs
mov
out
mov
add
or
push
test
(bad)
jno
(bad)
gs
lods
jmp
cmp
push
lods
test
jne
mov
test
pop
sbb
shufps
(bad)
iret
popa
add
adc
mov
sbb
nop
xlat
ss
inc
in
and
jge
out
mov
add
popa
popa
xchg
ret
ret
scas
or
sub
push
pop
fadd
popa
clc
sub
test
or
aas
sbb
jb
retf
sub
(bad)
jbe
mov
sbb
jno
popa
addr16
nop
and
xlat
(bad)
int3
adc
cs
bound
shr
(bad)
loopne
les
lock
lahf
mov
retf
adc
xchg
and
adc
retf
xchg
leave
shl
push
jmp
sbb
and
and
push
mov
cli
cmp
sti
fist
retf
push
xchg
test
jp
xlat
mul
lods
fnsave
in
mov
pop
iret
cmps
mov
mov
sub
test
pop
pop
jmp
mov
cmps
jecxz
cs
lock
mov
mov
push
or
xor
aas
ror
cwde
or
mov
jge
clc
jnp
icebp
cmc
(bad)
jmp
sbb
and
fs
enter
mov
xchg
rcl
jo
inc
inc
pop
ins
mov
adc
add
jmp
inc
jo
movs
or
call
sar
add
inc
xor
mov
mov
(bad)
push
iret
sub
(bad)
fidiv
mov
cmps
imul
stos
cmp
jno
and
shl
mov
mov
es
xchg
leave
push
shl
jmp
das
(bad)
mov
dec
pop
(bad)
fistp
rcr
xchg
repz
in
mov
int3
mov
(bad)
jns
mov
dec
xchg
xchg
lods
jno
fstp
out
mov
fcom
(bad)
jae
pop
das
adc
push
or
(bad)
cmp
iret
in
pop
das
cmps
arpl
addr16
mov
pop
add
add
mov
add
mov
xor
jns
div
fmul
add
movs
or
xchg
popa
or
pop
in
push
push
aaa
test
xor
(bad)
cmp
out
(bad)
inc
pop
xor
dec
push
test
call
repz
rcr
and
rcr
out
cli
or
xchg
loopne
cmp
lea
jne
xchg
lods
pop
scas
ins
imul
mov
retf
lds
bound
cmps
xor
in
in
fs
je
push
xor
mov
cmc
jo
retf
or
pop
pushf
pop
jo
mov
mov
mov
push
cs
sbb
or
ficomp
cmp
cmp
xchg
xor
jo
sbb
xlat
sbb
(bad)
jmp
pusha
mov
xchg
mov
in
mov
inc
or
pop
push
fcmovnu
stos
push
out
mov
pop
fist
xor
adc
mov
adc
pop
sar
repnz
jp
hlt
sbb
shl
inc
dec
int3
int
sbb
cmp
jecxz
sahf
cmp
jp
pusha
lea
or
mov
xor
ins
sbb
cmp
arpl
scas
(bad)
add
cmp
jae
scas
fwait
mov
out
popf
fld
mov
cmps
push
scas
push
sub
jb
push
mov
and
pop
ss
es
and
dec
and
fdivr
in
fcomp
mov
in
inc
test
xor
mov
xchg
jge
cwde
mov
dec
pop
pop
in
lods
cmps
jmp
js
std
std
jl
or
ja
mov
push
cmp
add
scas
(bad)
sti
sub
imul
div
cmc
jb
jo
lods
icebp
icebp
fstp
adc
adc
les
lock
and
shl
and
mov
popa
popa
cmps
add
xor
(bad)
fnstsw
push
(bad)
push
out
hlt
call
sahf
adc
or
jge
cs
icebp
inc
pop
fadd
xor
adc
and
cmp
push
test
and
test
push
mov
pop
cli
mov
out
sub
xchg
js
mov
mov
(bad)
sub
fnstcw
outs
out
sbb
cmp
push
stos
push
stc
sub
dec
mov
movs
retf
push
sub
mov
dec
es
and
sub
mov
push
test
add
mov
aas
cmc
(bad)
xor
mov
cmp
xor
jmp
fmul
jnp
das
out
sbb
jge
hlt
icebp
(bad)
(bad)
div
mov
or
pop
mov
mov
sbb
lods
cmp
mov
(bad)
mov
ret
movs
rcr
test
scas
scas
xor
mov
add
or
(bad)
adc
xor
mov
lock
or
aas
pop
sbb
sub
jb
hlt
xor
ret
mov
pop
add
scas
pop
pop
or
mov
clc
mov
scas
iret
jp
mov
jno
out
(bad)
lds
mov
aaa
ret
ret
ja
sti
addr16
mov
in
jo
bound
cwde
cmpps
sub
repz
mov
in
fcomp
mov
sbb
hlt
(bad)
and
sbb
pop
pop
mov
xlat
test
retf
bound
cwde
stos
push
int3
push
add
or
jl
pop
cmp
cmp
pop
in
les
stc
loop
das
jbe
fimul
jmp
sub
ins
imul
mov
push
out
mov
in
mov
mov
cmp
dec
or
cmp
lods
xchg
sub
mov
or
xchg
retf
sub
pop
mov
or
xlat
or
popf
(bad)
mov
push
bound
dec
mov
ret
xchg
add
or
pop
pop
or
add
mov
xor
or
inc
popf
mov
pop
test
hlt
call
lea
cs
inc
add
iret
jp
(bad)
pop
out
ficomp
ds
outs
lahf
mov
sti
hlt
mov
idiv
mov
lahf
dec
sti
idiv
mov
(bad)
fisttp
test
xchg
(bad)
jl
enter
mov
sbb
call
shl
popa
mov
gs
jae
add
cmp
mov
(bad)
repnz
in
punpckhwd
mov
dec
mov
aad
add
pop
cs
xchg
fldcw
mov
(bad)
mov
push
mov
movs
jno
mov
inc
std
test
das
std
scas
loop
(bad)
inc
mov
(bad)
(bad)
mov
jmp
mov
jecxz
xchg
mov
push
inc
inc
inc
cmp
(bad)
jns
mov
fcmovu
retf
imul
pusha
mov
fst
xchg
popa
mov
add
enter
ja
sub
adc
mov
daa
cdq
mov
cmp
cmps
jne
out
inc
(bad)
sbb
jp
mov
xor
pop
out
out
mov
push
push
xchg
xor
rcl
arpl
daa
test
les
or
cmp
or
sub
bound
cwde
cwde
push
jp
js
addr16
aaa
bound
xchg
fidivr
xlat
mov
xlat
jge
jle
scas
fbstp
pusha
add
jle
pusha
rcr
cmp
test
xchg
sbb
loop
shl
stos
icebp
jecxz
call
sahf
xor
mov
sub
aaa
addr16
jmp
std
out
sbb
mov
mov
mov
(bad)
into
push
xchg
push
cmc
ror
out
pop
xor
mov
movs
dec
sub
jne
(bad)
test
out
out
cmp
shl
retf
pop
addr16
jns
mov
xchg
lea
push
xor
cmp
push
push
push
(bad)
mov
retf
xchg
xchg
xchg
iret
call
stc
mov
mov
imul
xchg
jl
jmp
imul
sub
das
mov
sub
jg
mov
not
sbb
push
out
jmp
je
jno
jmp
push
call
aam
or
jne
mov
mul
pop
inc
inc
pop
adc
jle
and
push
inc
add
ds
push
or
mov
and
cli
push
imul
push
jp
mov
fisttp
adc
jg
ds
jae
imul
mov
jl
je
push
ret
xchg
jb
sar
xor
jmp
jecxz
cdq
cmp
fcmovne
xchg
mov
movs
movs
outs
addr16
(bad)
cs
mov
enter
mov
push
lods
cli
std
call
mov
jge
repz
jg
(bad)
in
out
jge
(bad)
aam
repz
test
cmp
test
popf
stos
mov
(bad)
sub
imul
stc
push
mov
dec
and
test
or
dec
test
cmp
sbb
pop
jo
int3
leave
cdq
aaa
das
rol
scas
pop
mov
fst
xchg
mov
cmp
push
mov
fsub
das
outs
add
cmp
pop
shl
fst
add
loope
les
das
xchg
inc
loopne
imul
sub
clc
cli
push
push
adc
jle
and
(bad)
(bad)
fwait
cld
std
jmp
add
pop
and
dec
popa
popa
xchg
ret
pop
imul
sbb
lahf
mov
add
stc
out
(bad)
or
es
xor
aad
xlat
sti
mov
out
mov
(bad)
cmp
je
aaa
mov
clc
(bad)
icebp
fisttp
hlt
std
xchg
sub
daa
and
bswap
leave
aas
movs
cmps
(bad)
nop
xchg
test
gs
retf
pop
ficomp
xlat
lods
sti
arpl
lahf
sub
(bad)
cmp
into
(bad)
jle
adc
mov
addr16
pop
cmp
out
sar
(bad)
jnp
push
mov
stos
(bad)
or
mov
sub
lods
push
scas
xlat
sub
jns
pop
mov
xchg
cmps
stos
cmp
fnstsw
sub
dec
dec
pop
popf
call
hlt
loop
retf
retf
sub
ss
xor
cld
clc
fs
mov
sub
arpl
out
inc
or
out
out
lahf
mov
ds
fidiv
pop
push
sub
iret
pcmpeqb
mov
sar
mov
add
mov
push
repz
and
push
ins
xor
clc
sti
xlat
add
push
ins
aaa
ret
xchg
clc
fs
aam
test
push
je
xor
dec
rcl
mov
frstor
pop
in
fpatan
inc
pop
fcomp
mov
lahf
cmc
in
sti
and
out
inc
mov
jle
cwde
fisttp
hlt
sti
test
sti
bswap
leave
jg
mov
psubsw
jg
mov
(bad)
stos
push
std
jno
fidivr
adc
cld
iret
xor
cmc
scas
jno
push
xor
stc
(bad)
xchg
iret
jg
in
adc
icebp
stc
xlat
xchg
sti
pop
sbb
push
xlat
fsubr
and
test
lds
cs
mov
into
mov
ins
dec
dec
sub
enter
push
lods
test
leave
test
jbe
mov
sbb
push
out
sub
scas
push
xor
popf
es
movs
es
pushf
inc
gs
dec
cmp
ret
bound
popf
pop
mov
jne
inc
jns
jns
cmp
push
test
call
mov
(bad)
(bad)
(bad)
xor
out
add
add
lods
sbb
push
jle
add
push
daa
mov
cmp
mov
(bad)
mov
adc
addr16
jmp
mov
adc
icebp
icebp
pop
cmc
jmp
rol
sti
sti
les
push
ror
repz
lods
inc
out
ins
push
je
leave
lahf
sub
call
call
cmp
xchg
mov
ret
xchg
xchg
into
jnp
jbe
stos
jmp
mov
fld
lods
xor
pop
mov
test
mov
and
xchg
inc
mov
jmp
sub
jmp
lods
imul
add
push
push
jno
sub
enter
pop
or
imul
cs
shr
sbb
add
xchg
les
push
and
loop
mov
pop
aas
faddp
(bad)
(bad)
jle
scas
outs
add
std
add
inc
dec
pusha
loopne
rol
mov
xor
jnp
jbe
xchg
inc
inc
sbb
mov
adc
je
out
addr16
fwait
jo
cli
xchg
sbb
mov
jae
sbb
jo
push
and
and
pop
data16
cld
popa
rol
ins
sar
(bad)
cmp
pusha
cli
pushf
pushf
aam
imul
lahf
ins
leave
push
cmp
jno
jne
lods
mov
test
popf
jb
adc
push
push
and
nop
(bad)
sbb
data16
(bad)
imul
dec
dec
fistp
ins
fisub
jno
int3
and
iret
mov
add
mov
cwde
inc
stos
cwde
out
loope
adc
pop
sbb
pop
adc
ds
mov
add
push
cmp
xor
mov
cmp
in
and
and
fst
std
stos
add
xor
rol
pusha
sbb
pop
pop
sbb
lods
mov
adc
inc
xor
or
or
loope
movs
mov
int
sub
xchg
push
rcr
dec
cdq
ret
repnz
pop
mov
popf
cli
loop
jmp
jns
or
cld
jmp
and
jmp
scas
push
out
inc
das
xlat
sub
ds
ins
lods
nop
popa
fisttp
das
dec
dec
scas
call
add
inc
inc
in
xchg
or
ficomp
sbb
dec
pusha
shl
mov
sub
jo
movs
in
and
jmp
push
sub
ins
push
aam
jmp
and
cmp
movs
push
pop
pop
xchg
arpl
lods
adc
nop
nop
cli
nop
nop
xchg
xor
fcmovnb
ret
ja
inc
in
ret
cmps
(bad)
enter
add
addr16
adc
pop
sbb
mul
movs
dec
lahf
das
and
push
push
(bad)
in
ror
pop
sti
hlt
repnz
cs
(bad)
fucom
adc
in
outs
lods
push
sbb
xchg
ins
mov
push
jmp
cmp
add
test
sub
scas
xchg
gs
dec
xor
imul
push
or
(bad)
loope
inc
rol
sub
call
and
leave
push
nop
xor
adc
outs
jge
not
mov
(bad)
loopne
and
test
cmc
(bad)
les
sub
add
push
aaa
mov
add
pop
sbb
push
pusha
pop
mov
jge
sub
pop
jbe
inc
inc
out
(bad)
int
sub
int
mov
sbb
adc
imul
lds
jmp
jge
loope
(bad)
pop
btr
and
jnp
push
div
mul
and
retf
add
fisttp
pop
mov
inc
imul
cmps
push
and
inc
mov
imul
shl
fcmovnbe
xor
cmp
out
aad
mov
cld
cld
retf
add
cmp
lock
loopne
ret
and
add
ins
mov
and
je
add
call
push
pop
jne
rcl
inc
jmp
jge
inc
cmp
inc
aam
mov
mov
rcr
cmp
dec
and
inc
cdq
adc
fisubr
rcr
rcl
aas
xchg
ins
lods
movs
into
into
repz
cwde
je
mov
outs
mov
loopne
(bad)
loop
jae
sbb
sbb
mov
imul
push
popf
xchg
sub
cmps
sub
das
push
jbe
dec
mov
in
aaa
mov
loop
xchg
out
out
mov
xchg
push
mov
jp
mov
and
push
push
and
test
out
or
and
mov
sbb
movs
add
pop
dec
mov
xor
and
pop
push
pop
mov
test
mov
jl
push
xor
sub
mov
dec
xor
xchg
add
dec
or
outs
or
ja
or
fld
loop
add
addr16
xchg
dec
mov
jno
sahf
push
mov
cmps
sbb
push
pusha
mov
imul
pop
scas
mov
(bad)
mov
sub
out
jns
push
jns
add
jecxz
add
mov
loop
mov
stc
clc
lods
shr
or
rol
cs
(bad)
dec
and
je
adc
out
add
xchg
stc
push
rol
xor
mov
adc
jbe
and
mov
xchg
sbb
pop
push
xchg
push
das
add
mov
retf
hlt
or
jae
dec
or
ret
movs
and
push
inc
mov
mov
add
(bad)
cmp
addr16
imul
outs
push
pop
xchg
or
mov
and
add
ret
out
xor
neg
cdq
xchg
popf
fst
xor
mov
ja
in
push
pop
pop
pop
mov
and
scas
lds
and
fdiv
cmp
adc
cmp
push
outs
dec
jns
pop
mov
add
inc
loopne
push
pusha
lds
aam
push
inc
inc
gs
or
or
shl
aad
das
push
xlat
rol
inc
pop
jo
test
and
lock
ror
(bad)
cmps
hlt
dec
inc
stos
inc
(bad)
xchg
fdiv
fidiv
inc
out
inc
out
add
lds
push
xlat
inc
nop
push
call
rcr
call
cmp
mov
pusha
js
add
stos
lea
xor
dec
xchg
sub
xor
cli
or
clc
loop
inc
xchg
aad
in
mov
imul
loop
xchg
fcom
daa
les
add
inc
jl
inc
lods
mov
stos
mov
stc
lods
adc
std
js
lds
bound
outs
mov
cdq
mov
outs
jp
xchg
out
nop
xchg
retf
xor
into
nop
xchg
push
(bad)
push
xor
psrld
mov
xchg
or
out
movs
ffree
sub
add
or
and
pop
push
sbb
adc
pop
adc
jno
add
jns
sub
jae
shr
xor
fstp
mov
fisttp
xchg
push
(bad)
retf
movs
and
dec
addr16
popa
loope
xchg
jbe
dec
out
ins
sar
inc
sar
pop
fidivr
jmp
jle
mov
call
inc
aaa
mov
mov
test
mov
cdq
nop
mov
mov
xlat
sbb
outs
xchg
push
out
pop
or
or
rol
inc
push
push
add
lds
mov
cmp
or
call
jo
fmul
scas
adc
jl
lods
scas
cwde
rol
test
mov
mov
je
sub
mov
in
and
nop
pop
mov
mov
jmp
and
push
jmp
mov
call
or
or
sbb
jp
sub
(bad)
dec
mov
jnp
mov
pop
rcr
push
inc
mov
test
xchg
and
jnp
mov
rcl
sbb
adc
add
mov
inc
in
imul
mov
js
dec
cmp
pop
loopne
sub
jl
(bad)
jp
sbb
pop
adc
(bad)
or
pop
fbstp
loop
pop
inc
mov
pop
scas
mov
in
inc
push
in
jg
aam
(bad)
into
repnz
rcr
into
lds
stos
dec
jns
jmp
shl
add
or
xchg
adc
xlat
push
aaa
mov
push
push
jmp
mov
pusha
sub
rcr
bound
push
mov
push
ret
out
add
icebp
mov
out
add
and
adc
jb
pop
mov
in
test
mov
mov
inc
fisttp
dec
daa
and
sbb
sub
pushf
and
cmp
(bad)
daa
lods
pop
mov
outs
outs
mov
clc
cmp
int
push
jle
(bad)
cmp
mov
push
sub
mov
fisub
xor
scas
xchg
ja
xchg
ja
and
xchg
es
sub
xchg
sub
xor
inc
fisubr
xor
push
cmp
je
loope
xor
push
ds
ins
mov
iret
in
ficomp
movd
std
std
xor
or
jl
adc
pop
sbb
fst
call
jge
fs
xchg
lahf
or
mov
jecxz
xchg
mov
sbb
xchg
cmp
ins
mov
aaa
pop
cmps
add
or
or
icebp
rcl
dec
(bad)
fiadd
repz
out
add
lods
mov
mov
(bad)
int3
lahf
jbe
mov
mov
lods
repnz
test
(bad)
leave
mov
mov
jae
lods
rcl
imul
jle
mov
aaa
(bad)
pop
icebp
int
sbb
add
daa
pusha
cmp
fild
jg
mov
test
add
push
add
push
inc
sbb
(bad)
sbb
repnz
inc
call
lahf
mov
fisttp
mov
popf
in
ins
add
dec
and
sbb
inc
mov
outs
pop
jecxz
ds
jo
mov
mov
je
xchg
pop
pop
aas
cmp
push
or
mov
xchg
ja
xchg
jne
and
fidivr
mov
jb
cmps
lds
out
cmp
xor
pop
pop
(bad)
dec
je
cwde
inc
pop
cmp
daa
or
mov
push
xlat
lods
push
add
pushf
into
loop
fmul
mov
rcr
push
out
mov
(bad)
bound
stos
and
fsub
jo
jp
test
outs
adc
jmp
mov
fld
jecxz
loope
and
outs
push
scas
push
gs
jecxz
and
pop
xchg
xor
adc
xchg
jbe
xchg
je
xchg
je
ror
retf
mov
(bad)
aam
lods
push
ins
outs
aas
rcr
inc
dec
add
popa
test
fstp
loope
inc
sbb
add
mov
das
test
stos
adc
dec
or
retf
inc
adc
cmc
or
inc
ins
scas
and
sar
and
(bad)
push
or
cmp
mov
push
adc
movs
inc
sbb
mov
mov
inc
call
jg
mov
or
fadd
sub
sar
pop
mov
sbb
int
sub
into
push
sub
jo
sub
pop
call
out
mov
scas
outs
cs
mov
repz
ror
pop
add
push
cwde
scas
(bad)
adc
mov
mov
dec
(bad)
xor
call
xchg
or
pop
sub
dec
enter
cmp
(bad)
push
mov
out
bound
mov
xchg
mov
sahf
out
out
mov
test
mov
xor
fsubr
push
pop
jo
lods
xchg
jne
ins
dec
out
mov
mov
push
outs
xchg
into
arpl
inc
mov
sub
mov
into
xchg
sbb
popf
lea
xchg
(bad)
aas
ss
sahf
cmp
sbb
jae
in
add
clc
mov
int
pop
lods
and
ror
sbb
sahf
xor
dec
mov
push
jo
adc
mov
loope
adc
add
call
cwde
pop
mov
pushf
call
movs
ret
add
mov
popf
xor
mov
sbb
jmp
and
aaa
inc
out
scas
scas
leave
add
repnz
cmp
pop
pop
or
fsub
cmp
cmc
lds
cdq
js
ret
push
and
loop
icebp
xchg
movs
scas
and
loop
lods
ret
ins
ret
outs
pop
sub
leave
ja
int
or
add
cs
sbb
cs
(bad)
rcl
mov
mov
push
inc
(bad)
test
or
clc
or
aam
retf
dec
pop
imul
sub
gs
dec
add
sbb
cmp
add
xchg
(bad)
mov
xchg
stos
xor
pop
push
fstp
out
mov
mov
pop
mov
pop
jb
cmp
adc
inc
jo
or
push
test
repz
adc
out
mov
jge
xor
loop
mov
jne
ret
or
inc
adc
loopne
rol
inc
push
shl
mov
in
(bad)
leave
das
dec
push
(bad)
(bad)
mov
out
ror
ror
in
jle
dec
fwait
sub
xchg
pop
jbe
push
mov
cmp
sbb
sub
mov
and
cmp
clc
and
pop
sbb
mov
jp
aad
push
sub
es
dec
sbb
cdq
jmp
cwde
mov
loop
and
fild
loopne
fisttp
pusha
or
pop
pushf
mov
jne
jmp
mov
enter
sub
mov
out
sbb
mov
adc
mov
cmp
jbe
stos
fcmovne
jle
imul
cmp
jns
pop
sahf
jmp
dec
push
arpl
pop
jno
xchg
or
pop
outs
imul
pop
retf
(bad)
jg
loopne
mov
into
outs
sbb
sti
inc
call
(bad)
sti
movs
inc
stc
fbstp
jbe
sar
clc
clc
loopne
imul
sub
pop
sub
xor
xchg
or
or
inc
push
add
jb
in
out
test
cmp
or
mov
jno
popf
pop
mov
(bad)
loop
pop
popf
inc
xor
cmp
inc
test
xchg
retf
stos
in
or
sub
xor
sbb
and
pop
dec
shl
int
or
or
dec
lahf
ds
cmp
and
lock
adc
cmp
dec
and
mov
xchg
jbe
sar
jb
jo
xor
pop
mov
jo
icebp
push
fidivr
fldenv
gs
jmp
cld
stc
scas
pop
pushf
sti
cli
sbb
add
not
mov
push
sub
adc
sbb
call
dec
call
dec
pop
repz
fs
call
xchg
ret
mov
xchg
push
aas
add
adc
adc
das
cmp
fld
mov
aas
rcl
enter
test
jbe
fidiv
js
daa
fwait
sub
cmp
movs
aad
xchg
adc
dec
or
push
in
push
add
stc
leave
pop
mov
or
or
hlt
and
or
push
sub
adc
sub
jb
mov
mov
shr
int
xor
imul
sub
or
pop
or
jno
and
sbb
cmp
mov
cs
(bad)
ja
shl
and
mov
add
outs
push
and
jle
xchg
cmp
es
and
and
sbb
and
fwait
jbe
mov
popa
inc
pop
add
call
pop
movs
stos
push
sub
mov
test
sub
adc
sbb
sbb
pop
das
xchg
retf
xchg
retf
gs
push
mov
push
inc
add
jno
add
xor
inc
or
inc
pop
push
add
pop
mov
push
es
pop
sbb
sbb
mov
lock
std
cmp
adc
test
out
ds
out
xchg
adc
data16
mov
in
shr
push
lea
movs
push
push
stos
push
adc
pop
mov
cmp
in
push
xchg
das
xchg
mov
fisub
movs
jecxz
push
push
enter
cmp
test
push
push
fwait
jns
out
popa
xchg
or
into
adc
aam
es
pop
and
ins
fcmovb
test
(bad)
jo
or
shr
sbb
ror
imul
iret
or
fisubr
sar
mov
xchg
dec
cwde
xchg
mov
int
xchg
mov
adc
mov
xchg
repz
mov
jns
in
jle
cmps
push
cmp
add
push
imul
movs
xor
mov
and
ins
or
mov
mov
adc
cmp
mov
(bad)
add
inc
ror
cmp
inc
jae
pop
loopne
push
mov
aaa
das
icebp
into
sub
rol
add
cld
add
cmp
les
jg
jg
mov
jo
shr
ds
or
shr
shr
test
(bad)
sbb
inc
lods
cs
stos
aaa
test
out
sbb
sub
mov
or
sub
aaa
add
xchg
cmp
or
add
or
movs
retf
nop
arpl
mov
pop
sub
and
adc
into
and
and
add
pop
into
or
imul
icebp
xchg
add
sbb
test
lahf
loope
ss
fdivr
push
adc
mov
loopne
mov
out
mov
ins
jne
je
lods
cmp
aad
mov
push
imul
push
stos
mov
stos
adc
inc
loop
and
adc
fdivp
add
mov
shr
mov
xor
loopne
sub
or
bound
test
mov
add
add
jecxz
iret
xlat
adc
es
mov
out
mov
in
pop
pop
pop
mov
aad
je
je
pop
sbb
sub
test
stos
aad
push
sub
imul
and
adc
or
test
xchg
stc
lods
mov
fiadd
xchg
je
movs
and
xchg
or
mov
imul
mov
sub
mov
in
sub
fsub
addr16
add
sub
or
jbe
xchg
mov
test
sbb
mov
or
shl
bound
mov
int3
out
and
rol
dec
add
ins
(bad)
mov
or
add
stos
add
pop
xor
adc
data16
xchg
mov
loopne
imul
idiv
xlat
add
jo
cmp
loop
pop
jbe
dec
mov
retf
push
dec
data16
add
adc
inc
fs
je
das
adc
jbe
scas
push
and
rcr
or
ins
adc
sub
push
out
std
retf
add
mov
retf
cdq
jecxz
rol
out
nop
xor
jecxz
cmp
jbe
push
sbb
icebp
shl
mov
sbb
loopne
stos
or
mov
inc
xchg
pop
inc
jg
stos
outs
loopne
and
xor
fisubr
ins
cmp
xchg
(bad)
in
dec
in
loope
ror
mov
fiadd
aaa
aam
cmp
xor
push
cmps
ret
(bad)
je
scas
mov
ss
les
mov
pop
adc
and
mov
jo
xchg
stc
add
mov
bound
push
imul
or
mov
lahf
sbb
pop
in
out
das
xor
mov
push
push
cmp
std
cmp
sbb
stos
xchg
iret
inc
test
cmp
retf
call
mov
adc
dec
cmps
cmp
dec
imul
pop
rcr
cmps
mov
xor
or
jnp
repnz
and
mov
retf
xchg
inc
ret
in
push
jp
pop
cmp
ret
sub
or
mov
jmp
clc
fidivr
das
add
push
push
push
outs
pop
outs
sti
sub
adc
mov
and
fist
inc
cmp
mov
and
and
or
mov
icebp
pop
sub
mov
lods
inc
jecxz
mov
adc
sbb
mov
out
push
mov
fadd
cwde
mov
imul
shr
inc
aaa
in
cld
xchg
add
test
mov
in
cmps
or
cmp
pusha
(bad)
mov
test
out
les
pop
in
outs
dec
gs
inc
mov
xchg
add
and
retf
out
push
push
cmc
popa
mov
repz
test
shl
js
xchg
imul
stos
jns
mov
add
jmp
push
mov
not
mov
cdq
xchg
jecxz
jecxz
mov
test
ror
inc
mov
mov
inc
mov
mov
or
jl
jecxz
(bad)
in
inc
jl
mov
mov
lea
cmp
sahf
shl
jnp
aad
aam
inc
jecxz
or
sbb
movs
jg
(bad)
cs
enter
inc
data16
push
mov
mov
fist
out
bound
sbb
dec
sar
retf
sbb
(bad)
fcomp
retf
cmp
bound
or
add
rol
call
daa
adc
lods
clc
sub
aaa
cmp
rcr
mov
jge
mov
fucomp
mov
jl
inc
mov
and
dec
retf
ins
movs
gs
xchg
bound
xor
sub
lods
ins
xchg
pop
fldenv
out
jmp
push
push
mov
jo
fadd
es
cmp
call
and
pop
retf
mov
dec
int
xor
rcr
cmp
pop
xchg
lahf
mov
xchg
loop
mov
retf
retf
aas
pop
pop
jle
inc
mov
pushf
xchg
cmp
int
xor
mov
cmp
jmp
pop
imul
adc
fwait
jo
repz
xor
cdq
outs
fwait
cmps
dec
pop
mov
int3
fst
mov
rcl
int
push
mov
sub
push
push
in
push
lods
inc
aam
out
mov
(bad)
cmps
jmp
mov
mov
in
pop
ja
out
dec
sar
repnz
push
sbb
cld
inc
fild
icebp
stos
adc
stc
cs
mov
retf
repnz
enter
xchg
adc
mov
mov
and
xchg
cs
dec
xor
je
mov
jecxz
dec
fstp
ja
adc
sub
out
popf
aas
outs
jp
jb
jmp
int
nop
mov
cli
fidiv
retf
retf
(bad)
(bad)
push
pop
outs
fnstcw
mov
cmp
arpl
out
rcr
xor
iret
lahf
cmp
mov
(bad)
pop
mov
mov
jl
clc
xchg
retf
daa
scas
and
test
jnp
hlt
stos
scas
pushf
jns
fcmovu
jmp
sahf
jnp
aad
scas
pop
aas
jg
mov
scas
mov
xchg
outs
fidivr
fistp
stos
mov
mov
fidivr
jne
je
(bad)
cli
(bad)
fs
mov
jecxz
dec
ds
mov
scas
push
icebp
or
addr16
and
inc
outs
out
add
cmp
jb
sub
cwde
gs
sbb
movs
stc
imul
mov
in
mov
push
int3
fdiv
pop
sub
outs
cmps
repz
adc
movs
repnz
test
fisttp
in
mov
out
dec
mov
mov
pop
cmps
adc
pop
cmp
(bad)
sub
fst
cmps
and
inc
push
fisub
push
sub
cwde
xchg
popf
xchg
lahf
mov
pusha
inc
push
imul
dec
and
out
lods
fnsave
(bad)
mov
je
jge
(bad)
adc
sbb
retf
pushf
fdivrp
fidiv
xchg
iret
fdiv
(bad)
mov
ins
sti
jb
mov
fdiv
cmps
mov
fimul
rol
push
stc
inc
dec
mov
call
call
bound
or
xor
xor
sbb
mov
sbb
es
inc
xor
daa
xor
mov
dec
out
push
jecxz
(bad)
mov
push
mov
xor
add
stc
ss
xchg
enter
jb
dec
push
fs
gs
pop
mov
push
and
add
cs
inc
ss
mov
cs
push
fs
pop
xchg
out
sahf
add
sar
repz
cdq
mov
jb
scas
pop
mov
(bad)
call
es
imul
fstp
mov
inc
jbe
into
cmps
dec
in
cmp
jmp
out
cmp
push
std
arpl
push
(bad)
fldcw
outs
mov
(bad)
jae
xchg
inc
xchg
push
dec
lods
(bad)
out
bound
jl
xchg
cmp
fild
xchg
aad
push
cwde
arpl
cdq
mov
call
fisttp
popa
jmp
lahf
xor
test
enter
add
scas
cmp
inc
jae
mov
cld
imul
out
pop
adc
dec
mov
add
xor
cmp
mov
and
cs
cmp
jcxz
xor
das
mov
mov
cmp
out
mov
leave
rcl
cmps
int3
test
or
cdq
mov
jmp
out
push
outs
push
push
mov
pop
xchg
out
sti
mov
cmp
sbb
ret
ins
pushf
cmp
je
int3
sbb
retf
cmp
cmp
call
out
dec
jne
lds
stos
(bad)
push
xor
scas
movs
and
lds
fucomi
xchg
mov
repz
xor
lds
and
mov
test
push
add
aas
cmp
mov
aas
mov
mov
cmp
push
mov
mov
stos
mov
jmp
xchg
retf
mov
sbb
xor
dec
cmp
cmp
or
dec
fs
gs
push
out
xchg
dec
inc
cdq
jae
xchg
rcl
mov
dec
call
cmp
push
push
cs
xor
and
mov
mov
dec
push
out
fnsave
mov
pop
frstor
fld
mov
mov
aas
mov
jb
jmp
addr16
in
call
lea
das
cmp
js
mov
into
fnstsw
xlat
jno
jecxz
mov
imul
sbb
mov
push
pop
push
fistp
mov
mov
mov
mov
jbe
sbb
ror
loope
dec
mov
sbb
pop
push
fcomp
test
xchg
popf
cmp
jne
clc
ficom
adc
out
out
pop
jne
mov
and
sbb
xlat
xchg
cdq
scas
fsubr
xchg
xor
pop
movs
mov
add
movs
lds
ror
out
loop
sub
push
das
stos
sub
cdq
xor
(bad)
int3
mov
daa
iret
fwait
mov
gs
jecxz
xchg
jns
xchg
cmps
fs
iret
pop
mov
shr
pop
pop
mov
into
fisub
sbb
fnstsw
les
les
clc
xor
sbb
loope
add
movs
ins
cmp
push
fnstcw
outs
dec
aam
rcr
lahf
adc
and
imul
mov
push
and
sub
jmp
xchg
sti
xchg
pop
cmps
or
jns
cmc
out
mov
shr
dec
xor
mov
mov
push
into
daa
sbb
sbb
xchg
sub
xchg
arpl
xchg
mov
sbb
sbb
mov
es
lock
pop
and
pop
push
or
dec
sahf
cmp
repnz
mov
int
pop
sahf
mov
test
retf
mov
sbb
pusha
cdq
mov
retf
(bad)
aam
ins
push
movs
mov
ret
imul
adc
scas
clc
leave
imul
shl
in
inc
mov
outs
xchg
lds
sbb
rcr
jge
fisubr
push
aam
mov
je
dec
stos
pop
out
mov
dec
sbb
lds
data16
daa
(bad)
pushf
lahf
loop
dec
mov
and
sub
ins
cwde
push
xchg
xor
inc
fs
fiadd
sbb
fs
dec
push
fmul
out
mov
fsub
mov
fsub
xor
out
in
stc
rcl
pop
pushf
cmp
jbe
xor
scas
scas
test
jmp
lea
sbb
ja
(bad)
xchg
ret
pop
loope
mov
mov
sbb
jmp
mov
mov
js
test
and
or
inc
pop
ins
xchg
arpl
jo
add
mov
in
(bad)
mov
pop
enter
cwde
jp
mov
in
cmp
xor
enter
and
adc
pop
loopne
push
mov
ja
xchg
loop
shr
repnz
mov
movs
lea
xor
xchg
scas
sub
out
xor
scas
add
lods
and
(bad)
xchg
and
cwde
clc
mov
les
push
aaa
iret
scas
rcl
es
pop
imul
in
mov
shl
cwde
xchg
xchg
vphadduwd
xchg
xchg
pop
pop
push
cs
stos
stos
sub
xchg
mov
test
je
jb
mov
xor
lock
inc
ss
ins
xor
in
mul
fistp
cmp
xor
mov
ret
cld
dec
mov
sub
rcl
push
jecxz
mov
enter
popf
mov
xchg
xor
inc
push
sbb
test
repz
std
int3
cmps
mov
dec
and
mov
dec
mov
test
dec
pop
stc
xchg
data16
(bad)
fisttp
ins
movs
push
int
mov
push
pop
mov
out
shr
inc
mov
add
ins
sub
or
mov
mov
out
jb
mov
cwde
les
shl
es
icebp
jae
dec
call
jle
dec
push
iret
pop
call
mov
scas
into
inc
out
mov
mov
aad
dec
xchg
shl
or
fistp
rdmsr
cmp
imul
daa
mov
das
ret
call
mov
loopne
add
inc
ds
(bad)
hlt
ja
nop
rol
or
sub
fcomp
dec
shld
ss
adc
or
jb
push
mov
pop
pop
aas
or
or
xor
jmp
jnp
repnz
fstp
or
sbb
mov
inc
push
xchg
adc
push
scas
adc
pushf
outs
inc
fs
inc
mov
out
sbb
loopne
push
shr
or
in
dec
jecxz
int3
call
dec
pop
pushf
cmp
ficomp
cs
xchg
xchg
mov
jg
sar
fistp
repnz
in
jbe
retf
fdiv
imul
jb
push
enter
cmp
ret
test
popa
pop
xchg
pop
jmp
nop
mov
cwde
mov
ret
sub
xor
cmp
fidiv
daa
xor
pushf
xor
inc
mov
mov
ss
out
outs
std
movs
fwait
sbb
mov
ficomp
test
test
ficomp
xchg
pop
xor
adc
mov
jbe
fstp
in
div
(bad)
fadd
and
cmp
ss
jns
xor
or
dec
dec
pop
cmp
ins
adc
sbb
xchg
das
enter
dec
pop
mov
jns
xchg
shl
dec
cwde
pop
outs
test
fcmovu
add
add
pop
inc
mov
popf
ins
inc
sbb
je
cmp
std
(bad)
das
int
push
leave
imul
ret
dec
jo
out
mov
mov
pop
mov
mov
rol
pop
lock
cmp
cmps
repnz
retf
fldlg2
dec
dec
not
clc
adc
push
test
lods
shr
dec
mov
bound
pusha
cmp
jne
out
ficom
and
in
push
cmps
mov
xchg
addr16
xchg
mov
fsubr
cdq
adc
int
xchg
cmp
dec
push
hlt
inc
test
retf
xchg
mov
sub
mov
and
mov
imul
and
cdq
stos
add
popf
leave
cmp
out
cld
mov
ficomp
mov
pushf
in
ins
sbb
jbe
dec
cmp
adc
xchg
arpl
cmp
lahf
(bad)
push
imul
ror
loop
add
cmps
mov
retf
cs
and
sub
and
int
in
fld
adc
lods
and
lods
and
lods
and
push
xchg
je
dec
call
mov
cdq
popa
gs
in
mov
inc
inc
cld
inc
mov
aaa
adc
push
shl
xor
pushf
mov
repz
dec
sahf
mov
popa
push
jp
in
in
loope
pop
lods
retf
lahf
mov
fstp
xchg
xor
jae
push
jecxz
mov
fneni(8087
xor
fwait
mul
loope
inc
mov
mov
push
pop
or
das
cmc
out
js
sub
jecxz
cmp
sub
lahf
dec
out
es
cdq
cmp
fld
push
pop
dec
int
sbb
xchg
cmp
dec
(bad)
pushf
enter
cmp
cmc
test
jmp
dec
pusha
push
repnz
ins
jb
out
in
adc
gs
outs
sbb
fs
inc
mov
mov
push
aad
stos
cmps
dec
push
mov
xchg
daa
push
lahf
xor
aam
and
addr16
pop
fadd
lods
icebp
repz
in
push
push
cs
mov
adc
arpl
repnz
pushf
lods
aam
fdiv
pop
pop
push
xchg
push
pop
call
cli
jle
pop
jmp
mov
mov
cmp
push
addr16
sub
rol
in
pop
cmp
jmp
inc
jb
cmp
and
mov
mov
jle
add
cmps
sbb
xor
jnp
int3
mov
rcl
lods
mov
mov
push
std
pop
out
jmp
xor
mov
xchg
es
jecxz
xchg
iret
and
pop
xor
fdivr
mov
int3
fwait
cmp
mov
xor
xchg
jb
(bad)
lods
pop
mov
ret
xchg
pushf
dec
mov
fimul
xor
test
dec
mov
sub
mov
mov
sti
jmp
cmp
mov
push
int3
in
(bad)
js
stos
aaa
adc
repz
cmp
ret
or
pop
add
inc
xor
inc
xor
xchg
leave
pop
lock
iret
dec
stc
loop
hlt
frstor
rcl
push
mov
stos
inc
xchg
cs
cmp
fsubr
mov
popf
xor
clc
in
ret
cmps
dec
push
add
jge
test
rol
dec
sbb
addr16
mov
lahf
cmp
sub
cmp
arpl
mov
pop
sub
pop
pop
push
nop
pop
push
xor
pop
jne
call
xchg
(bad)
int
gs
gs
in
faddp
movs
jns
outs
jb
test
pusha
jle
cmp
sbb
lods
dec
xor
xchg
jb
cmp
inc
adc
fld
add
not
jnp
call
xor
sub
inc
inc
jl
sti
repz
fs
cli
push
xor
jp
retf
mov
cmp
cli
mov
cmp
or
(bad)
daa
dec
sbb
shl
shl
mov
cli
push
(bad)
loop
sbb
sahf
xor
repz
dec
dec
sahf
pushf
call
addr16
pop
mov
dec
outs
mul
scas
int
pop
(bad)
jl
inc
into
test
jl
ins
aad
cli
dec
sbb
pop
add
outs
outs
and
xchg
or
ja
out
gs
lods
sbb
sub
es
mov
push
sub
fst
cmp
je
daa
hlt
xchg
and
pop
and
test
leave
jo
jb
out
push
ds
sub
adc
cmp
mov
call
mov
or
push
ret
mov
clc
pop
dec
cmp
jmp
test
mov
daa
mov
cmp
cld
nop
mov
adc
aaa
push
js
adc
bound
icebp
int3
jmp
jae
and
fwait
cwde
xchg
cmp
rol
imul
jnp
bnd
sub
pop
mov
mov
mov
lods
sub
retf
add
push
xlat
push
scas
lods
stos
adc
mov
shl
rcr
sar
in
out
stos
sahf
outs
inc
ret
ss
cwde
stc
gs
push
retf
push
jnp
xor
xchg
xchg
repz
repnz
popa
cmp
push
das
jecxz
inc
mov
cdq
mov
cs
aaa
fs
sbb
lock
repz
std
dec
push
push
jbe
pop
outs
xlat
mov
fistp
push
mov
sti
(bad)
adc
out
leave
or
mov
jg
inc
and
lock
arpl
fidivr
inc
mov
push
jo
jmp
add
xor
popf
mov
and
retf
dec
or
adc
push
das
pop
mov
jmp
shr
ins
ins
sbb
xchg
mov
xor
out
fcom
cs
fiadd
cmps
add
cld
stos
pusha
xor
addr16
and
popa
call
lahf
or
leave
pushf
je
and
sub
test
mov
pop
mov
mov
pushf
repnz
jmp
mov
cmp
cld
adc
sub
call
push
daa
cmp
or
sbb
jns
(bad)
and
push
jns
test
pop
iret
add
int
pop
cmp
daa
imul
ret
lds
cmps
lods
pop
xchg
push
mov
in
in
adc
pop
rcl
push
inc
xchg
xlat
aam
xor
pop
mov
xor
mov
or
fidivr
scas
(bad)
ror
fldenv
cdq
mov
pop
xor
dec
cmp
ret
mov
pop
je
push
cmp
jle
into
scas
sahf
lds
mov
es
ja
inc
and
mov
std
gs
dec
or
cmp
mov
jp
xchg
movs
gs
xchg
leave
mov
in
mov
jns
lock
or
sub
sub
push
or
mov
ss
mov
mov
push
mov
scas
jle
jp
jns
and
fistp
popf
test
jg
mov
nop
push
and
add
and
fs
adc
and
inc
cld
imul
shr
stc
jae
sbb
das
cwde
aas
and
dec
mov
dec
pop
mov
xor
je
mov
xor
xor
fist
sub
jp
loop
lds
gs
push
ins
mov
push
xor
imul
pop
ins
scas
arpl
mov
and
aas
push
out
pop
inc
aas
jmp
jp
or
aas
xchg
(bad)
daa
push
loope
or
xchg
cs
mov
and
(bad)
int3
adc
xchg
loop
nop
pop
loop
mov
aas
ja
jmp
lods
pop
sub
lock
cmp
mov
movs
jo
imul
movs
pop
adc
test
xor
push
out
aad
pop
xor
and
test
xchg
cmp
fwait
xor
dec
iret
inc
push
jmp
fadd
push
fidivr
cmp
out
jno
dec
pop
dec
jb
stos
add
out
ret
lock
add
mov
inc
add
loope
gs
les
pushf
jmp
(bad)
icebp
sbb
pop
scas
xor
mov
mov
push
mov
push
mov
mov
loop
dec
cmp
repnz
sbb
shl
mov
and
inc
sbb
mov
(bad)
jmp
call
lea
push
sbb
mov
dec
mov
jle
dec
fnstsw
ins
jb
int
sahf
cmp
(bad)
into
aas
cmps
out
push
mov
and
push
fsub
fidivr
sbb
inc
into
push
cli
bt
cmp
test
lods
push
mov
jmp
icebp
(bad)
aas
and
leave
dec
or
movs
cwde
repnz
dec
movs
mov
mov
ret
call
popa
hlt
iret
jne
shr
inc
(bad)
(bad)
idiv
popa
hlt
jg
std
jmp
sti
jg
std
pop
inc
(bad)
mov
cmp
mov
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
inc
push
inc
inc
push
popa
adc
add
add
add
push
add
add
outs
add
xor
add
add
add
add
ja
jb
push
sub
jne
imul
arpl
inc
jns
popa
jae
and
outs
ja
je
ins
and
fs
and
imul
popa
outs
and
gs
arpl
outs
cs
jae
gs
bound
cmp
dec
outs
popa
sub
jns
je
ins
cs
outs
outs
jbe
jb
pop
cmp
inc
jb
ins
bound
gs
je
imul
je
dec
je
ins
push
jb
jo
jb
jns
dec
dec
inc
push
cmp
data16
popa
jb
sub
ins
imul
inc
outs
je
jns
outs
imul
outs
imul
outs
jne
ins
sub
outs
jne
ins
sub
cmp
gs
arpl
outs
cs
jae
gs
bound
in
imul
add
fucomip
(bad)
lods
stos
(bad)
pop
ins
scas
push
inc
inc
stos
xchg
mov
push
stos
shr
mov
cmp
xchg
xchg
xchg
pop
aas
call
sub
pusha
ret
and
in
pop
sbb
hlt
cmps
test
je
icebp
cs
jb
xlat
daa
cmp
push
dec
mov
mov
push
rcr
(bad)
(bad)
mov
inc
mov
enter
in
cmp
(bad)
and
adc
cli
pop
data16
repz
jmp
jp
in
xchg
push
pop
addr16
ins
fxtract
and
je
mov
leave
fimul
jno
aam
cmp
sbb
ja
hlt
sbb
and
fcom
mov
xchg
xor
out
jmp
ja
add
adc
push
cmp
repnz
cmp
rol
shl
dec
je
adc
or
test
pop
inc
mov
ja
or
and
test
mov
jl
pop
lock
dec
(bad)
sbb
cmp
sbb
mov
push
xor
std
lock
cmp
sub
data16
jo
adc
push
mov
fcom
fld
iret
test
mov
sub
rol
jmp
jae
ja
xlat
sti
mov
(bad)
xor
rsqrtps
add
mov
iret
daa
mov
das
cmp
aam
inc
sub
jg
lea
in
xor
stos
pop
jp
pop
pop
ins
leave
mov
cmp
dec
aaa
shr
inc
xor
or
imul
and
mov
mov
adc
mov
adc
inc
(bad)
leave
mov
xchg
idiv
adc
fist
iret
fs
adc
xchg
mov
cs
ficomp
sbb
neg
not
(bad)
(bad)
rol
scas
jnp
xchg
(bad)
xor
cmp
push
add
ins
pushf
mov
ret
loopne
ret
add
inc
mov
popa
push
dec
arpl
call
cwde
std
pusha
sahf
call
add
cmc
xchg
mov
jmp
jmp
xchg
repnz
add
inc
jle
das
out
cld
push
ins
hlt
rcl
ret
dec
or
and
push
mov
pop
repnz
test
in
mov
xor
nop
dec
call
inc
out
xrelease
das
mov
rcr
fimul
dec
xor
adc
(bad)
fisubr
fisubr
push
neg
sbb
push
mov
cwde
and
xchg
and
sti
movs
test
in
clc
or
ja
and
(bad)
lahf
adc
mov
xor
repz
js
push
sub
sbb
jg
inc
jle
cs
jno
cmps
xor
rcr
int3
push
call
stos
push
imul
inc
cdq
dec
jmp
jmp
mov
mov
es
loope
jmp
jbe
in
(bad)
add
jno
inc
mov
out
(bad)
pop
xchg
jnp
sbb
push
sar
add
retf
fmul
fdiv
sub
scas
xchg
mov
lods
popf
imul
fstp
ret
pop
lds
cmp
fnstcw
and
cwde
icebp
gs
test
dec
out
or
mov
mov
mov
ret
jae
push
stos
call
enter
ins
outs
(bad)
push
and
imul
mov
das
cld
jae
rcr
jmp
icebp
fistp
or
mov
inc
xor
mov
mov
pop
jne
mov
or
neg
mov
xchg
add
xor
pushf
ficom
out
imul
adc
ret
mov
fchs
int3
or
adc
or
pop
xor
pop
jnp
xchg
mov
ror
lahf
push
gs
xor
inc
lsl
adc
adc
push
mov
out
xchg
xchg
fbld
loope
pop
xor
std
lods
pop
mov
jmp
dec
stc
shl
lahf
sub
ja
test
or
in
rol
imul
pop
jno
adc
shr
cmc
push
push
push
xchg
loop
arpl
bound
cmps
mov
pop
cmp
fimul
enter
add
jbe
int3
push
lea
adc
or
push
pop
mov
push
sbb
fnstsw
test
std
push
dec
(bad)
into
out
js
push
sbb
pop
movs
jge
push
ins
ret
push
outs
jnp
sbb
mov
in
dec
cli
sahf
push
mov
sbb
mov
in
in
mov
dec
icebp
stc
adc
fcomp
jb
mov
mov
arpl
xor
call
adc
mov
pop
and
push
mov
inc
pop
test
(bad)
ins
push
inc
es
mov
movs
fistp
mov
xchg
cmps
xchg
xchg
cmp
fbld
inc
repnz
pop
sbb
xor
stos
int3
icebp
lods
mov
imul
stc
cmp
pushf
sub
repnz
lods
je
fimul
loope
les
ins
and
mov
add
(bad)
jle
icebp
jne
test
pop
ss
sbb
lahf
jb
cld
jle
mov
inc
out
outs
xchg
pop
adc
push
xchg
jl
(bad)
cmp
and
ins
xchg
pop
xchg
push
shl
mov
jb
in
push
sub
or
sbb
push
mov
pop
push
icebp
jecxz
sub
das
nop
push
fwait
dec
sbb
jne
imul
gs
lea
es
ror
xchg
adc
or
sub
cmc
xchg
lods
push
jne
or
sbb
inc
push
fadd
dec
adc
cli
cmp
int3
sar
inc
pop
stos
push
test
mov
icebp
pop
pusha
out
fwait
xchg
add
jno
mov
gs
out
push
sub
pop
into
sbb
imul
xor
mov
push
test
sbb
inc
loope
stos
mov
into
pushf
push
iret
adc
pop
cmp
mov
sbb
loop
arpl
jae
push
mov
ror
sub
aaa
out
xor
push
std
in
jmp
sub
(bad)
or
nop
cs
pop
inc
mov
dec
das
fsub
movs
ins
mov
push
int3
jne
cmp
daa
and
push
(bad)
enter
jg
fwait
jnp
jp
inc
or
mov
jle
in
call
(bad)
repz
inc
mov
and
push
sub
ret
xor
sbb
mov
stc
pop
sbb
add
push
sub
cmp
out
je
rcr
scas
cld
dec
pop
loop
test
movs
mov
mov
pop
sub
mov
in
jl
fist
adc
mov
and
dec
xor
adc
out
mov
test
fisubr
mov
ins
(bad)
mov
sub
add
sahf
mov
ins
shr
xor
outs
imul
xor
jmp
adc
loope
xor
mov
xor
nop
into
mov
jnp
ins
fcom
push
push
pop
int3
test
sub
in
push
and
xor
adc
sbb
and
jne
mov
pop
dec
push
je
outs
std
inc
dec
inc
bound
and
xor
push
lds
fs
jbe
push
cwde
pop
jmp
cmp
hlt
repnz
jle
adc
push
inc
xchg
add
xor
mul
(bad)
cmc
(bad)
mov
pop
arpl
pushf
out
es
mov
nop
sub
ins
call
inc
stos
retf
push
aaa
dec
call
hlt
cmp
or
test
sbb
clc
icebp
dec
loopne
ja
(bad)
icebp
push
mov
loop
sbb
add
pusha
pop
pushf
and
outs
dec
pop
out
or
adc
fst
call
stos
inc
imul
jp
rcl
cmc
and
inc
jbe
inc
push
xchg
jae
fmul
xabort
out
inc
mov
adc
js
ds
push
mov
jge
dec
xorps
push
retf
ficom
ror
and
inc
cmp
xchg
mov
mov
ins
jg
inc
clc
mov
xor
inc
mov
mov
sbb
and
aad
arpl
addr16
dec
mov
stos
mov
mov
mov
(bad)
cmp
ss
in
inc
sub
push
cmc
pop
cmps
or
mov
cmp
mov
push
jg
dec
inc
or
loop
mov
push
or
mov
rcr
js
adc
shr
hlt
out
xchg
test
jle
(bad)
movs
clc
cmp
rcr
and
aas
xor
or
les
in
es
test
inc
leave
or
mov
test
mov
xor
sbb
cdq
gs
dec
sbb
inc
shl
stc
cmp
mov
scas
jb
ins
into
sbb
cdq
arpl
push
repnz
xor
or
fisubr
call
xor
mov
mov
lods
add
or
push
into
xor
bound
jbe
and
mov
mov
fist
dec
mov
bound
mov
dec
pop
stos
test
mov
hlt
push
cvtps2pi
lea
and
mov
test
sbb
(bad)
(bad)
jbe
jno
std
dec
inc
sbb
jno
scas
sbb
test
jp
call
cmc
pop
jmp
inc
push
aaa
(bad)
test
or
inc
outs
std
popa
and
cmp
ins
imul
cmp
cdq
mov
out
loop
in
adc
les
jp
in
ficom
sbb
sbb
jmp
out
lock
sbb
jae
lds
sub
sub
jmp
push
lock
jecxz
cld
adc
push
sahf
mov
and
sar
cmp
mov
sahf
jp
adc
fisub
mov
icebp
xchg
retf
stos
cmp
xchg
sbb
sbb
mov
(bad)
lods
mov
and
and
or
mov
dec
cmps
and
cli
add
jmp
bound
lock
push
jg
addr16
jle
pop
outs
cmp
sbb
or
and
push
int3
sbb
sbb
push
mov
sahf
and
pop
sub
pop
or
rcl
adc
and
pop
shl
je
cmp
xlat
repz
jnp
js
adc
sub
inc
xchg
inc
sub
stc
or
mov
jle
iret
jle
xor
scas
out
xchg
push
pop
(bad)
call
jne
in
repnz
adc
cwde
cli
shl
inc
add
cmp
jo
xchg
js
ret
loopne
dec
outs
nop
mov
hlt
mov
push
pop
pushf
jnp
scas
xchg
adc
xchg
jl
sti
popf
dec
inc
lods
jp
mov
(bad)
jle
lea
jecxz
and
or
loopne
mov
or
mov
retf
popa
fdivr
or
aad
jo
enter
push
fisttp
or
popa
(bad)
pop
inc
cmp
stos
jae
stos
dec
lods
sub
jbe
dec
arpl
mov
loopne
test
add
push
mov
retf
jp
adc
mov
data16
sbb
stos
mov
or
pushf
add
push
add
cmp
fidivr
push
das
mov
aas
or
sysret
cmp
pop
sub
pop
fbld
or
sbb
mov
into
vdivps
mov
adc
pop
cmc
or
add
sti
or
add
inc
add
mov
lods
add
push
ins
jg
imul
icebp
retf
repnz
mov
jmp
and
mov
cwde
(bad)
aad
mov
adc
inc
scas
jge
add
xor
adc
push
xlat
pop
adc
mov
inc
or
gs
pop
ss
sti
dec
not
pop
fst
sbb
jmp
nop
imul
dec
outs
mov
jbe
pop
sub
push
xchg
fisubr
mov
xchg
jb
fimul
scas
loop
icebp
retf
push
xor
push
inc
(bad)
aam
mov
mov
xchg
push
mov
mov
cmp
test
jg
or
(bad)
mov
loopne
rcl
sti
dec
fist
dec
and
lock
into
(bad)
out
ja
stos
int
adc
(bad)
fsub
add
mov
and
mov
aad
add
fwait
lds
xchg
cmp
sti
xor
mov
idiv
inc
test
enter
xchg
bound
mov
daa
jns
call
jle
stos
add
fnstenv
cmps
cmp
cmp
pop
mov
inc
es
mov
push
cmps
mov
pop
jbe
lds
sbb
dec
pop
xchg
stos
icebp
movs
jge
aam
sub
fld
inc
retf
rcl
sbb
aaa
sti
daa
mov
adc
stos
jl
push
in
or
push
cmp
xchg
mov
stc
mov
ins
clc
es
jmp
push
clc
jg
mov
into
movs
add
das
add
cli
pop
call
add
xchg
pop
sub
mov
push
mov
fst
in
out
push
inc
call
fstp
lea
shr
adc
call
cli
mov
std
cmp
push
repz
mov
push
bswap
push
shl
jl
movs
in
jns
aad
fcmovnb
xchg
fimul
pop
sub
sbb
mov
add
xchg
aad
sbb
mov
test
adc
jb
outs
mov
jecxz
dec
inc
add
aaa
fdivp
fldcw
ss
sub
(bad)
not
xchg
dec
xchg
in
loopne
mov
loop
test
cmp
enter
add
les
(bad)
pop
cmp
movs
mov
adc
sti
lock
test
inc
adc
xchg
jno
out
imul
or
mov
idiv
cmp
jmp
fs
hlt
loop
scas
or
mov
cld
in
sub
inc
add
push
pop
hlt
xchg
mov
ja
xor
fadd
in
sub
jo
js
dec
(bad)
(bad)
js
add
inc
rcl
jae
mov
sub
xchg
mov
inc
ds
push
sub
mov
out
sbb
int
and
js
jbe
nop
mov
sti
popf
inc
sub
cli
scas
sub
or
aam
pop
into
das
jecxz
lds
imul
out
(bad)
mov
or
xchg
inc
movs
(bad)
lahf
jle
sbb
retf
push
sbb
sub
rcr
retf
and
fnstcw
les
and
xchg
and
xchg
jge
mov
adc
adc
sub
clc
xor
jl
scas
and
xchg
sub
push
data16
hlt
xor
mov
fidivr
jecxz
xchg
jnp
mov
pop
mov
lods
fwait
test
xchg
out
inc
into
jmp
or
mov
adc
cmp
bound
cmp
pop
inc
ret
retf
mov
jmp
add
dec
mov
jg
sbb
retf
mov
xchg
imul
cmps
mov
xor
dec
adc
inc
jmp
xchg
push
jmp
xchg
mov
push
addr16
inc
sbb
or
fiadd
inc
(bad)
call
enter
add
addr16
retf
xchg
scas
add
jg
cli
mov
ds
xchg
rcr
xchg
cmps
scas
jg
mov
push
pop
leave
pop
xchg
rcr
hlt
pop
sub
ss
mov
les
xchg
inc
inc
es
mov
inc
in
sti
mov
adc
pop
ret
mov
xor
jno
cmc
call
jmp
mov
out
lock
in
xlat
adc
adc
inc
test
and
mov
aad
push
and
hlt
dec
cmp
vmovaps
jno
into
fidivr
mov
pusha
(bad)
je
cwde
xor
mov
add
ins
out
mov
imul
ins
pop
das
cmp
mov
icebp
jno
pop
out
arpl
xchg
cmp
xchg
clc
mov
test
stc
push
lods
test
loop
lock
out
fimul
dec
push
test
pop
hlt
mov
clc
(bad)
jp
adc
dec
imul
xchg
inc
je
call
or
sbb
inc
(bad)
xor
and
rcr
pop
push
push
pop
les
push
dec
cmc
pop
push
(bad)
adc
xor
sub
push
sub
lea
stos
mov
stos
push
popa
jmp
cdq
push
dec
xchg
mov
je
mov
mov
sahf
mov
or
fcom
fbld
loopne
aad
inc
into
jmp
xchg
adc
fcompp
jne
enter
push
inc
jno
scas
mov
out
add
xor
sti
mov
vaddsubpd
ds
xchg
stos
xchg
icebp
ja
pop
pop
das
adc
jno
dec
into
or
stos
adc
mov
ins
das
int3
pop
outs
push
or
pusha
cli
test
scas
movs
fmul
and
mov
rdmsr
cli
mov
fptan
ins
nop
xor
ret
xchg
mov
std
(bad)
stc
test
clc
ins
test
cmp
gs
mov
and
xlat
dec
or
shl
call
cld
addr16
cli
xchg
shl
pop
xor
mov
push
mov
mov
ds
hlt
sbb
nop
push
add
or
popa
jnp
mov
in
stc
and
addr16
mov
xor
mov
inc
and
pop
push
jb
add
movs
scas
sub
daa
or
push
push
lods
xor
push
rcl
ins
cs
lds
ss
pop
pop
call
inc
dec
pop
(bad)
xchg
fist
mov
mov
or
pop
mov
scas
enter
sbb
ins
aas
dec
push
stos
outs
gs
jae
loope
push
sub
mov
in
push
pop
push
arpl
xor
cmc
retf
das
bnd
xchg
call
ins
cmps
jecxz
cmp
fisttp
cmp
xor
cmp
xchg
dec
add
inc
xchg
push
imul
inc
shr
jnp
ucomiss
call
xlat
cmp
popa
hlt
ret
pop
mov
mov
and
pop
test
push
inc
pop
scas
retf
cmps
pusha
(bad)
hlt
loope
arpl
or
push
pop
fabs
sti
push
fidivr
xchg
cwde
mov
scas
mov
or
pop
lods
mov
fs
pop
xor
and
movs
fistp
sbb
jecxz
and
ds
hlt
ja
test
cmp
push
fdiv
push
xor
mov
xchg
retf
pop
imul
sub
inc
jmp
push
cmp
pop
mov
push
out
out
mov
loop
push
push
or
dec
pop
mov
das
adc
jo
loope
sahf
and
or
mov
mov
pop
lahf
cwde
pop
sub
jg
fdiv
test
push
hlt
adc
test
or
ror
lods
xchg
sub
movs
punpckhdq
fwait
cs
lea
enter
jg
adc
scas
nop
cmp
cmp
add
(bad)
ficomp
pop
out
dec
test
scas
push
push
or
mov
(bad)
loop
neg
jns
inc
dec
in
xor
xchg
jbe
jo
pop
push
fwait
addr16
pop
jge
icebp
mov
movs
hlt
sub
fld
das
cmp
lahf
jl
mov
aam
xor
cmp
imul
retf
inc
hlt
add
stos
out
dec
inc
dec
pop
cdq
into
xchg
popa
sbb
rol
bound
and
enter
push
inc
sub
and
jge
in
and
rol
es
push
xchg
mov
sar
aas
sti
pop
add
adc
mov
(bad)
mov
stc
loopne
adc
es
pop
mov
dec
inc
jns
icebp
(bad)
push
out
jl
sub
imul
ror
inc
outs
xchg
dec
ins
mov
(bad)
dec
jl
ror
xor
jmp
ret
pop
mov
cs
xchg
xchg
js
jmp
rcl
inc
test
cmps
stos
xchg
shl
lods
cld
inc
jg
repz
push
sbb
cmp
sub
xor
cli
or
iret
call
inc
movs
jecxz
mov
inc
xor
xlat
dec
test
retf
test
xchg
dec
fwait
es
aas
into
(bad)
imul
shl
dec
pop
inc
repz
push
in
cs
xor
sbb
repnz
jmp
mov
or
xor
loop
call
push
adc
lds
test
(bad)
cmp
xchg
cmp
lahf
jns
pop
adc
jg
jne
fucom
push
adc
loope
and
mul
sub
jns
mov
aad
pop
(bad)
fbld
dec
bswap
rol
jl
rol
xchg
sub
cmps
sbb
xlat
popa
lea
cmp
and
and
mov
dec
int3
ins
pop
jle
fcomip
iret
inc
retf
xchg
mov
or
sbb
pop
adc
fild
retf
popf
mov
das
mov
xchg
add
ror
movs
push
pop
(bad)
jae
push
ret
or
cmps
data16
pusha
sub
mov
cmp
xchg
and
pop
jns
mov
jne
call
or
jmp
or
push
call
pop
or
cmp
mov
mov
aam
or
sti
pop
adc
ins
adc
pop
js
xlat
xchg
push
pop
ss
sub
jns
test
ins
shr
xchg
in
sub
or
adc
shl
div
xchg
imul
adc
loopne
jo
sbb
adc
inc
outs
jae
mov
mov
fcomp
cmc
ins
jg
into
call
scas
loopne
push
cmp
dec
shr
and
xlat
mov
xor
(bad)
pop
mov
retf
xor
mov
icebp
push
fstp
jl
add
ror
in
stos
inc
in
lea
call
clc
test
jnp
add
push
mov
xchg
(bad)
mov
mov
cmps
mov
mov
jbe
sbb
lea
bound
and
call
push
or
mov
push
jno
lods
mov
sub
jle
mov
xchg
or
sbb
mov
dec
push
aaa
dec
mov
sbb
dec
inc
jle
adc
sbb
arpl
sbb
rcl
or
sahf
jbe
jmp
les
inc
push
movs
test
adc
jae
in
dec
loopne
stc
mov
mov
mov
xor
cmps
xor
push
test
hlt
ds
dec
les
pusha
jbe
add
bound
push
fs
test
add
xlat
ret
or
mov
mov
dec
popa
mov
dec
dec
outs
imul
adc
cli
mov
sbb
xchg
(bad)
push
outs
cmp
xchg
pushf
push
mov
rcl
mov
pop
movs
cmp
fdiv
nop
push
loopne
sub
cmp
xchg
jne
dec
mov
mov
lods
or
frstor
(bad)
jle
sahf
cmc
sbb
jmp
into
mov
inc
aam
scas
ins
inc
cwde
aad
and
jl
mov
pop
bound
icebp
fsubr
ss
aad
sbb
fimul
fimul
sbb
push
cs
jg
adc
or
into
stc
mov
mov
loop
mov
sahf
jg
xchg
xchg
in
jge
xchg
popf
shl
or
cmp
out
push
cmp
iret
mov
inc
retf
(bad)
popa
adc
xchg
pop
add
push
xlat
into
int
adc
jbe
scas
mov
sub
push
and
scas
pop
xor
adc
mov
pushf
sbb
call
adc
mov
jmp
aaa
(bad)
dec
lea
push
std
ret
enterw
ficom
or
pop
loope
int3
lods
out
sub
inc
mov
mov
popf
loopne
ret
repnz
cld
in
inc
mov
dec
sub
and
pop
mov
scas
inc
xlat
pop
and
je
shl
out
sar
jecxz
cmp
icebp
int3
jno
stos
popf
ins
and
sub
(bad)
mov
xor
shl
sahf
bound
inc
and
jp
jmp
push
pop
mov
fisubr
aaa
dec
pop
xchg
test
xor
nop
cli
outs
dec
nop
cli
adc
pop
and
shl
add
test
xchg
sub
xchg
jecxz
jnp
adc
push
xchg
dec
sbb
outs
repz
sbb
cdq
add
je
sub
add
leave
cmps
popa
cmp
outs
inc
cmps
jle
sar
idiv
rol
test
cmc
mov
xchg
inc
aam
mov
test
fsubr
(bad)
fbstp
ja
sbb
push
sbb
sbb
push
js
push
jecxz
dec
in
leave
push
(bad)
pop
fmul
inc
cmp
sbb
xchg
pushf
mov
cmps
inc
fnstsw
rcr
adc
sti
loopne
adc
jge
sub
popa
and
dec
outs
mov
inc
fbld
(bad)
call
lea
jns
push
sub
bound
xchg
int
and
adc
mov
sub
jl
cmp
or
mov
xchg
cld
sub
mov
inc
and
cmp
push
push
jg
pop
imul
and
add
xchg
mov
dec
out
mov
ret
pop
fwait
ret
xchg
cmc
push
mov
push
in
in
loopne
or
into
mov
pop
in
outs
cmps
mov
sub
clc
sahf
ins
sbb
(bad)
sub
mov
ds
fwait
and
fadd
stc
mov
and
int3
xchg
cs
xchg
xor
shr
and
jmp
mov
sub
lock
cwde
mov
aam
pop
fs
mov
inc
inc
jbe
mov
shl
push
mov
and
jb
mov
add
out
(bad)
fsub
jge
sub
push
ffreep
in
dec
sub
ror
mov
push
or
pop
jle
pop
pop
stc
stc
shr
outs
aam
dec
sbb
(bad)
jg
dec
loop
mov
mov
mov
sahf
ins
(bad)
mov
cmc
or
xchg
push
pop
inc
(bad)
test
loop
jae
icebp
pop
into
jnp
sub
xchg
cs
inc
mov
loop
sbb
cwde
test
xlat
adc
mov
aas
pop
cwde
test
push
xor
mov
add
(bad)
sub
call
sbb
ja
nop
inc
(bad)
mov
or
xor
mov
xchg
dec
inc
xchg
xor
iret
jo
mov
dec
add
or
lods
jne
in
xchg
pop
mov
inc
iret
mov
pop
call
fimul
rcr
in
inc
pop
call
ins
lea
or
xor
xchg
or
cmc
mov
jl
xchg
cmp
rol
cmp
popf
(bad)
sar
xlat
mov
or
cs
sub
mov
nop
or
mov
fdivr
sub
inc
sbb
adc
daa
call
mov
mov
inc
sbb
pop
scas
jne
push
inc
xchg
or
mov
xlat
in
inc
xchg
arpl
xchg
scas
xor
push
push
(bad)
rcr
fisttp
jno
(bad)
pop
scas
jle
imul
mov
lahf
or
mov
fcmovnu
push
shl
or
mov
rcl
and
xchg
lock
cld
mov
call
sbb
cwde
push
call
dec
cmp
pop
jl
ror
pop
xor
jnp
sbb
aas
sub
and
cwde
sbb
ins
fimul
mov
pushf
sar
sub
fwait
mov
cmp
loope
ret
jb
pop
mov
pusha
xlat
test
mov
inc
and
sub
mov
stc
sbb
(bad)
cmovs
imul
pop
mov
dec
pop
add
cmp
loope
(bad)
xor
mov
mov
xlat
rol
mov
fwait
adc
icebp
xor
mov
scas
int
lock
out
ret
lea
xor
and
cmp
das
dec
push
fcomp
sar
fscale
sub
xor
mov
xchg
fs
dec
call
lods
xor
mov
jbe
addr16
add
(bad)
pop
aas
arpl
cmp
call
or
jmp
cmc
enter
test
mov
sub
and
push
dec
inc
popa
dec
fstp
ja
pushf
aam
inc
mov
mov
daa
mov
call
fbld
bound
imul
hlt
sbb
mov
lea
mov
push
push
cmc
adc
mov
lahf
xlat
or
fs
out
lds
and
popa
pop
mov
lock
inc
lods
and
scas
add
out
cmps
push
adc
jae
inc
and
jae
nop
sub
in
outs
mov
xor
stos
dec
clc
out
loope
add
mov
pop
outs
fwait
repz
pop
fwait
pop
enter
pop
das
cmc
(bad)
sub
not
cwde
jne
jne
sub
inc
std
jns
fs
push
sbb
test
cld
xor
jge
fwait
outs
popa
sub
sub
sbb
packssdw
std
pop
fldenv
dec
call
xchg
sub
dec
inc
add
inc
xor
sbb
daa
retf
xchg
xor
jo
add
pop
adc
outs
cs
xcrypt-cbc
cmps
push
sbb
test
add
jmp
into
(bad)
out
sbb
test
push
repnz
mov
mov
sub
clc
fld
jl
mov
sbb
jecxz
(bad)
test
jnp
(bad)
out
rcr
xchg
dec
sbb
gs
outs
add
xor
jne
into
test
das
mov
clc
aas
xor
adc
cmovg
(bad)
call
add
ja
ins
vaddsd
std
mov
and
aad
mov
sub
popa
cmc
aam
test
(bad)
jb
push
movs
xchg
mov
fs
mov
adc
jl
dec
jecxz
div
cmp
popf
push
jns
pop
fsubrp
mov
jge
inc
adc
add
pop
and
add
int3
push
sbb
dec
jle
sub
sbb
js
mov
clc
add
mov
add
js
rol
add
xchg
ret
nop
in
repnz
in
in
cmps
mov
loop
mov
mov
stos
sub
aas
add
lods
pop
sbb
push
imul
pop
sub
inc
jns
pop
ins
jecxz
push
pop
dec
lods
mov
ins
cli
push
sub
adc
mov
fcom
push
fwait
ja
jno
sbb
jnp
(bad)
rcr
test
jmp
jo
test
iret
hlt
enter
mov
or
adc
clc
xchg
fucomi
inc
jg
jp
sbb
iret
pop
xchg
repz
stos
jb
out
mov
aad
arpl
sbb
(bad)
scas
push
mov
rep
clc
pop
repnz
inc
mov
lea
popa
mov
pop
or
cmp
xlat
jg
sbb
loope
jno
ins
loop
mov
gs
cld
mov
(bad)
ja
pusha
dec
add
push
pop
add
and
xor
add
inc
and
jbe
or
les
push
dec
mov
inc
or
add
pmaxub
ss
fwait
mov
push
jg
inc
(bad)
fsub
push
repz
push
push
mov
dec
mov
jl
mov
rcr
ror
sahf
inc
push
xchg
shl
inc
xor
movs
mov
xchg
xor
mov
or
shl
push
(bad)
mov
xchg
aad
pmuludq
jmp
cs
(bad)
lea
hlt
push
mov
sub
lds
sbb
mov
add
popa
lods
inc
scas
and
sub
and
test
lea
sbb
add
mov
aaa
ret
shl
jg
pop
test
pushf
adc
pop
jae
cmp
call
pop
xchg
mov
out
or
mov
add
(bad)
adc
jge
jl
pop
daa
mov
pop
xor
xor
push
das
cdq
xchg
gs
(bad)
cwde
cmp
or
int
jno
aad
adc
mov
fstp
add
iret
sahf
mov
jno
xor
add
cs
cmp
push
inc
(bad)
int
out
pop
jne
jb
ficomp
add
pop
add
iret
xor
das
pop
mov
mov
clc
add
ds
imul
outs
inc
pop
fidivr
lods
fs
or
sbb
and
ins
pop
push
lahf
push
in
int
sub
mov
pop
adc
das
mov
push
lds
dec
mov
pop
jnp
pop
xlat
push
cmp
dec
push
lea
push
xchg
out
inc
push
pop
out
jge
mov
xor
adc
rol
cmc
and
jp
retf
stc
push
inc
lea
nop
cmp
std
or
popf
aaa
mov
cmp
inc
cdq
xor
movs
mov
push
mov
push
dec
xchg
xor
adc
or
cs
xor
sbb
in
loope
mov
jecxz
inc
imul
adc
adc
movs
inc
daa
cs
xor
sub
push
mov
jo
pop
inc
loopne
jg
loopne
cmp
and
dec
add
mov
imul
hlt
add
mov
add
xor
sti
and
inc
retf
(bad)
retf
jmp
cmps
or
xor
into
stos
shr
fprem
cli
sub
cld
jl
cmp
shr
aam
xchg
out
ror
push
mov
mov
sar
xor
imul
jnp
fcom
pop
and
mov
loopne
xchg
mov
aam
int3
cld
icebp
pop
add
cmp
ror
dec
rcl
nop
inc
jbe
mov
dec
jbe
out
sub
in
ror
test
outs
out
mov
(bad)
(bad)
dec
cwde
cmp
ins
mov
repz
cli
aas
mov
fadd
pop
rol
mov
mov
stos
outs
adc
pop
sub
ja
mov
pop
xlat
mov
inc
into
ret
jns
mov
inc
stc
sub
jae
xchg
(bad)
out
not
out
jne
retf
sbb
clc
jmp
in
aam
add
pusha
xchg
sub
call
lods
and
lahf
outs
adc
sub
arpl
imul
push
(bad)
stc
lods
movs
lea
push
in
(bad)
movs
dec
mov
icebp
push
mov
call
add
dec
adc
les
push
pop
in
das
jge
ss
or
pushf
xor
mov
or
and
loopne
add
aaa
repz
fsub
mov
test
inc
pop
test
pop
lea
out
pop
cmp
jp
sbb
es
fmul
mov
add
dec
leave
dec
mov
lock
in
inc
sti
adc
hlt
fstp
sti
fcmovbe
ins
push
add
cdq
psadbw
jp
ret
stos
adc
hlt
fstp
bound
push
loope
ds
jbe
mov
jp
sbb
push
adc
xchg
movs
pop
xchg
jg
adc
push
jo
mov
jns
daa
jae
xchg
test
test
ds
adc
cmc
imul
mov
movs
jp
xor
dec
add
out
movs
inc
push
xor
xchg
jbe
mov
xor
xor
das
jmp
cmp
imul
xor
and
mov
or
mov
mov
sti
retf
mov
int
retf
pop
sub
ret
out
int
xlat
stos
in
jnp
mov
xor
fild
pop
daa
outs
jo
es
or
out
les
push
mov
(bad)
add
lods
adc
mov
pop
sub
and
ss
ret
sti
mov
in
xchg
sbb
ror
xor
xchg
push
aas
and
mov
cmp
jmp
xor
push
je
jmp
dec
cld
ret
lds
push
sbb
and
pop
ficom
cdq
and
fucomi
xchg
outs
mov
or
sbb
cmp
(bad)
hlt
push
add
xchg
imul
push
inc
sti
addr16
ins
rol
mov
sub
in
or
jb
sbb
enter
mov
jnp
les
jg
pushf
ins
int3
std
ret
fidiv
clc
pusha
scas
mov
mov
xor
arpl
stos
cdq
adc
ret
or
arpl
push
pop
(bad)
cmp
lods
mov
addr16
test
jge
int3
(bad)
adc
push
jl
inc
stc
imul
pop
mov
jge
cmc
mov
popf
inc
adc
into
push
pop
fcmovb
add
adc
dec
scas
sub
test
pusha
cmp
pop
push
daa
ret
push
sbb
jp
cmp
sub
mov
dec
stos
movs
jg
push
out
jo
inc
movs
sbb
jmp
xlat
sub
jmp
or
dec
add
fcmovnb
and
shl
add
std
fcomp
popf
bound
test
hlt
(bad)
and
xchg
sar
mov
int3
pop
adc
xor
fdivr
rcl
into
mov
fist
jae
and
pop
ja
dec
sbb
pop
adc
lahf
mov
xchg
fs
xchg
push
jb
mov
retf
rcl
cwde
mov
xor
lods
pop
pslld
jb
sbb
int3
scas
or
jb
sahf
lahf
cld
int
dec
pusha
scas
mov
es
rol
fst
xor
(bad)
(bad)
in
xchg
js
xchg
out
adc
mov
ja
mov
push
xchg
ds
popf
(bad)
and
inc
bts
enter
ja
cmp
aam
pop
mov
stc
sbb
sbb
retf
xor
mov
mov
mov
pusha
xchg
push
mov
sar
inc
imul
ret
sbb
aam
cmps
sbb
sub
test
movs
imul
ret
inc
mov
or
and
jecxz
and
and
xchg
mov
icebp
arpl
fld
dec
push
cld
loop
loop
pop
xor
test
int3
dec
mov
retf
dec
leave
loope
cmc
inc
js
push
fwait
mov
retf
dec
(bad)
loop
sbb
pop
or
ja
test
out
leave
outs
and
les
popf
dec
fist
xchg
jmp
adc
cmp
rcl
xchg
cdq
cdq
fild
sub
dec
sbb
popf
or
push
jmp
ins
ds
movs
pop
out
inc
inc
cmps
push
lea
push
mov
das
pushf
bound
push
mov
push
add
fst
jo
in
push
sbb
lods
aam
push
adc
(bad)
fdivr
std
sub
and
xchg
inc
les
frstor
outs
das
xchg
fld
cmp
pop
adc
add
mov
loop
in
ret
cs
mov
add
div
sub
je
mov
lds
jne
inc
les
fnstenv
jle
adc
movs
ficomp
scas
sahf
and
jg
mov
sbb
and
mov
cmps
pushf
xchg
int3
in
out
fwait
inc
push
dec
ds
aad
inc
dec
add
test
adc
inc
lock
mov
rol
cmps
call
xchg
xchg
sbb
sub
add
and
(bad)
pop
popf
xor
dec
dec
sub
mov
aaa
aaa
mov
or
fiadd
rcl
push
in
mov
icebp
mov
jecxz
stc
sub
mov
mov
mov
jg
xchg
mov
dec
dec
ds
mov
mov
call
shr
mov
sar
or
jbe
jno
inc
movs
dec
retf
mov
sahf
mov
fadd
dec
ja
push
inc
mov
jecxz
xor
xor
cmp
and
push
or
fs
xchg
jo
mov
cli
inc
aad
mov
jne
loope
gs
shr
fmul
in
mov
add
in
cdq
sbb
pop
dec
(bad)
aas
call
inc
push
xchg
push
cmps
dec
and
repz
int3
jmp
imul
ret
or
push
pop
div
test
bound
rcl
and
jno
les
or
add
mov
jmp
xor
mov
scas
mov
adc
js
out
stos
pop
sub
ror
iret
push
ins
sub
in
div
ret
dec
jmp
jge
jg
mov
fisub
retf
data16
test
dec
and
pop
lea
cmps
jle
xchg
jp
mov
add
push
mov
rol
fst
pop
push
or
aas
dec
push
push
pushf
jae
push
xor
xchg
mov
js
mov
and
inc
mov
cmps
or
and
mov
adc
inc
xchg
xor
ja
in
and
scas
ror
mov
dec
cmps
inc
int
and
jle
adc
mov
fisttp
test
jbe
(bad)
in
es
mov
into
fwait
adc
jl
inc
loopne
mov
cmc
jmp
test
mov
ror
inc
and
inc
ds
and
push
loopne
fidiv
inc
mov
int
in
sbb
les
mov
pushf
push
cmp
inc
or
fwait
inc
in
inc
(bad)
(bad)
fnsave
repz
out
cmp
hlt
into
rcr
ror
fnsave
inc
pusha
cs
mov
and
mov
jmp
jl
loope
movs
sbb
adc
and
or
pop
inc
sub
inc
mov
js
lahf
jge
sbb
call
push
pushf
jmp
dec
test
rol
dec
pop
(bad)
das
cmp
(bad)
dec
cmc
mov
icebp
pop
nop
adc
out
cwde
mov
je
inc
push
mov
ja
retf
dec
jg
xchg
jg
into
add
aad
jp
addr16
call
pop
in
mov
xchg
dec
jl
sub
xchg
pop
div
or
enter
hlt
aam
sbb
add
mov
(bad)
adc
mov
fnstenv
mov
mov
push
xchg
imul
fsub
dec
fdivr
out
mov
sub
call
shr
sub
dec
xor
pop
mov
ins
test
add
enter
test
pop
dec
mov
cmc
push
nop
xchg
retf
mov
in
repnz
fild
js
ds
aas
rol
out
arpl
clc
rol
xchg
add
and
(bad)
mov
adc
test
inc
cmc
push
and
xchg
sbb
mov
iret
in
xchg
test
sbb
pop
jb
pop
jge
inc
push
adc
mov
test
daa
and
cmp
and
and
lea
mov
jle
cmc
outs
cmp
xlat
sub
imul
pop
and
mov
xor
es
sub
clc
hlt
dec
xor
ror
sbb
or
stc
es
into
mov
cmp
push
push
(bad)
shl
xchg
lock
sub
xchg
xor
scas
push
stc
xor
add
lods
lods
cmp
scas
clc
pop
cmp
lea
push
jge
inc
repz
mov
mov
xchg
test
xlat
inc
pushaw
pop
cmp
retf
int3
jp
inc
cmps
mov
mov
push
xchg
cdq
daa
add
je
mov
jns
sub
pop
gs
inc
ins
(bad)
imul
or
das
icebp
jecxz
or
mov
loopne
jo
fild
cmc
mov
test
push
pusha
mov
push
jmp
sub
push
ret
jo
mov
xor
push
push
mov
in
in
aas
in
mov
xor
stc
push
sbb
jbe
das
ret
hlt
pop
push
pop
imul
(bad)
sub
std
sbb
movs
stos
xchg
sub
and
fsubr
sub
jne
out
fwait
and
icebp
xchg
dec
jg
push
call
aaa
cwde
jl
cmp
xchg
sti
dec
ins
cmc
fmul
aam
and
xchg
sbb
(bad)
push
or
js
sbb
inc
mov
stc
mov
retf
xor
dec
xor
cld
in
cmp
sbb
adc
loop
repz
mov
outs
dec
inc
inc
xchg
mov
cmp
pop
rcr
cmps
out
outs
jo
pop
popf
mov
adc
xchg
mov
fld
jmp
dec
movs
xchg
jno
mov
daa
sbb
and
jle
jge
rcr
or
sahf
popf
lea
push
mov
ds
mov
jae
inc
aad
pop
gs
es
icebp
jecxz
scas
jne
dec
mov
ss
shr
cmc
cmp
pop
cmc
xor
ja
lahf
aam
lock
rcl
repnz
xor
xlat
xchg
pop
les
xchg
stos
sbb
ror
push
jg
fisub
in
in
(bad)
mov
enter
mov
add
push
add
(bad)
cmp
cmc
sbb
movs
cmps
out
mov
ret
mov
rol
mov
xchg
adc
add
dec
mov
xor
scas
loop
mov
pusha
dec
mov
pop
fdivrp
out
push
jg
inc
out
push
arpl
iret
sub
or
popf
stc
leave
ret
jmp
aad
push
sub
sbb
aad
sbb
retf
sub
imul
sub
pop
fisttp
pop
daa
jb
xchg
jb
bound
sub
shl
addr16
push
aas
into
inc
ss
ins
mov
fidivr
cld
add
js
popa
fsubr
mov
mov
imul
(bad)
out
test
cmp
fsqrt
(bad)
jmp
push
mov
repz
sbb
inc
loope
mov
jl
sub
int
xchg
xor
not
aas
shl
stos
es
sub
out
push
fsub
push
sbb
jp
pop
dec
popf
and
test
in
pusha
mov
push
push
std
movs
cs
div
js
and
pop
out
push
outs
and
push
ins
and
add
cli
and
pop
call
jno
stc
sub
sbb
inc
add
mov
xor
push
adc
push
fwait
pusha
adc
out
icebp
div
push
push
imul
push
out
pop
or
inc
adc
or
cld
int3
pop
mov
mov
not
sbb
hlt
xor
or
repz
jb
adc
addr16
mov
sub
mov
push
(bad)
lods
in
pop
mov
jp
aaa
ins
cmps
fadd
mov
je
jge
(bad)
mov
cmp
xchg
cs
out
jo
add
scas
cli
jmp
shr
lds
call
mov
daa
pop
bswap
or
mov
sub
mov
mov
ficomp
mov
fcomp
retf
dec
mov
int
retf
mov
outs
ror
(bad)
out
jno
mov
lahf
popf
fisub
ds
sbb
pop
adc
mov
push
jge
pop
jns
mov
mov
and
sub
push
adc
int
jp
jne
add
loope
cmps
and
test
xchg
dec
imul
fidivr
push
jnp
add
sahf
push
fnstenv
jmp
add
loop
sub
iret
push
lahf
push
jg
xchg
cs
popa
cwde
and
jle
loope
mov
or
jb
dec
pop
lds
push
xchg
mov
jmp
jae
iret
push
jb
ficom
ret
into
push
cli
cmps
add
and
push
cmp
adc
sti
cld
push
aas
xor
jns
shl
adc
je
xor
push
enter
loop
sti
outs
push
xchg
push
and
cli
je
push
movs
mov
mov
call
mov
idiv
dec
jp
jno
les
icebp
es
push
sbb
fdivp
add
cwde
pop
movs
xchg
ins
pop
ror
outs
mov
test
js
ins
mov
adc
sub
fsubr
iret
popf
sub
pop
sub
xchg
loopne
ds
sub
adc
fwait
dec
and
inc
outs
xchg
mov
pop
inc
mov
loop
(bad)
mov
repz
mov
setae
push
loopne
aad
adc
cmp
mov
(bad)
out
or
fwait
xor
data16
fisttp
mov
std
scas
inc
pop
outs
push
stc
out
(bad)
mov
pop
or
mov
mov
clc
bound
rcl
popf
mov
jge
adc
push
or
mov
inc
pop
mov
sub
xchg
xchg
push
out
and
sbb
jmp
test
mov
mov
mov
ins
shl
jmp
dec
xor
movs
dec
jae
push
sbb
and
es
in
xor
leave
push
loopne
pop
(bad)
cmps
mov
sahf
dec
push
aas
cmp
and
mov
loope
adc
or
nop
push
xchg
xor
fs
pop
bound
sub
push
lods
rol
adc
add
enter
or
jb
in
inc
mov
jo
pop
mov
stos
sar
jg
in
inc
cs
sbb
fldenv
(bad)
aaa
imul
pop
hlt
add
sbb
jnp
scas
jle
int3
add
cli
pop
cli
jle
dec
xor
push
mov
adc
xor
repnz
cmc
(bad)
daa
xor
imul
into
push
cmp
add
dec
push
arpl
mov
shl
cld
aad
dec
(bad)
xor
or
dec
cmovo
imul
cmp
xor
aaa
lea
pop
push
mov
cwde
inc
cdq
or
add
jmp
jmp
or
jle
sahf
lods
jae
imul
cmp
xchg
in
inc
ins
sbb
inc
cmps
push
dec
adc
jmp
imul
cli
iret
sbb
aad
sub
(bad)
in
push
sbb
shrd
pop
lea
xor
loopne
int
std
(bad)
shl
mov
sbb
fcmovnbe
lods
popa
shl
cmp
or
sub
mov
mov
int3
and
mov
idiv
sub
(bad)
mov
sahf
inc
mov
(bad)
push
into
shl
lds
aad
dec
lods
les
xor
mov
or
in
mov
nop
shr
mov
ss
out
push
icebp
mov
ror
or
inc
repnz
inc
lods
adc
or
mov
or
add
mov
lock
lahf
pop
sub
inc
cmp
cmp
adc
push
retf
dec
lods
push
cli
nop
dec
out
test
daa
xchg
xor
pop
inc
imul
daa
mov
rol
xchg
jle
loope
lds
cli
stos
outs
scas
lds
xchg
fst
push
and
mov
mov
and
mov
adc
xor
mov
xchg
lea
stc
pop
dec
pop
in
pop
pop
pop
inc
lea
sbb
ja
sbb
jno
push
lods
sbb
mov
rcr
xor
cmp
dec
push
dec
sbb
adc
inc
xchg
pusha
push
jns
and
cmp
fisub
mov
xchg
xchg
xlat
lea
(bad)
outs
mov
mov
rol
int3
jbe
pop
mov
push
std
fadd
adc
test
data16
push
mov
dec
je
adc
js
lods
aam
ret
mov
ja
jns
sub
out
mov
adc
jno
mov
(bad)
aad
jns
cmp
push
push
push
mov
add
adc
fstp
shl
jl
loop
mov
xor
mov
rcl
mov
mov
test
pop
aas
pop
scas
outs
push
mov
test
add
retf
mov
fild
xlat
clc
arpl
cwde
cmp
jnp
cmps
rcr
or
cmp
scas
in
outs
pop
add
push
push
shr
std
dec
lock
ror
xlat
inc
hlt
loopne
push
shr
push
retf
ficomp
mov
movs
cld
lock
outs
push
push
adc
sub
out
mov
xor
push
mov
push
jnp
ss
xchg
jmp
imul
in
or
sbb
cmp
arpl
adc
mov
stc
cmp
adc
and
and
pop
push
popf
fcom
adc
mov
mov
push
les
lea
and
inc
dec
inc
xor
ins
outs
sahf
ficomp
sub
outs
nop
sub
or
xor
loope
adc
daa
fdiv
inc
not
adc
adc
retf
push
aas
mov
pushf
mov
pop
call
inc
and
pop
pop
scas
jb
mov
mov
or
add
daa
pop
push
mov
pusha
jmp
xchg
test
inc
xchg
inc
xor
jmp
stos
mov
xchg
add
xchg
rcl
and
jmp
dec
idiv
cli
dec
jno
jg
js
mov
imul
xchg
mov
xor
scas
push
dec
jmp
xor
mov
cmc
frstor
inc
test
out
pop
push
jo
les
cmps
push
test
mov
outs
mov
xor
fcom
retf
sbb
or
call
sub
jmp
mov
xchg
xor
push
mov
mov
sahf
test
cli
jl
leave
xor
ins
jne
mov
push
clc
or
lahf
mov
pop
pop
sub
xor
clc
(bad)
mov
add
xchg
add
mov
sub
pop
sbb
dec
adc
shr
outs
xchg
les
sbb
or
cmp
clc
push
cmp
pop
and
inc
cwde
xchg
inc
ss
mov
push
jge
test
sub
ss
mov
enter
in
pop
push
repz
jns
or
push
gs
in
dec
mov
into
ret
cmp
lods
imul
mov
adc
xchg
ss
xlat
pop
mov
retf
pop
push
lock
ds
adc
cs
cdq
mov
jb
jne
ror
out
mov
mov
mov
adc
std
ds
mov
fisubr
inc
xlat
and
and
xor
sahf
and
sbb
add
sbb
mov
xchg
cmp
and
add
cld
lds
or
ror
push
ins
xchg
test
vmovntdq
mov
xor
xor
mov
sahf
pop
arpl
cmps
in
pop
sbb
and
push
lock
js
xchg
pop
xor
dec
ret
shr
push
sub
pusha
cmp
dec
in
(bad)
loopne
xor
xor
aaa
or
add
jmp
push
(bad)
je
aam
rcr
sub
ins
mov
xchg
xor
(bad)
out
cmp
into
fcom
aaa
test
mov
in
rcl
xchg
pop
push
(bad)
(bad)
mov
inc
mov
lahf
and
dec
and
mov
adc
movs
arpl
mov
and
hlt
add
fstp
fpatan
adc
fsincos
adc
jl
daa
add
fnstcw
pop
lea
pop
mov
jbe
push
addr16
adc
jnp
pop
es
jb
dec
scas
jge
(bad)
test
data16
inc
mov
cmp
dec
fild
addr16
fldl2t
jno
mov
daa
mov
or
lods
int
sub
mov
add
(bad)
jae
xor
inc
dec
jl
dec
in
xchg
mov
sub
jle
mov
into
popa
jnp
pusha
mov
movs
call
imul
push
jnp
mov
(bad)
fs
jecxz
mov
fcomi
inc
mov
test
mov
jne
jge
and
fld
adc
scas
sub
xor
dec
retf
(bad)
data16
xor
inc
mov
and
mov
jns
jmp
lods
push
pop
sub
fild
shl
jb
mov
shl
cli
sbb
sub
aad
enter
adc
aas
jnp
sti
js
sub
inc
repnz
mov
test
jae
sahf
sub
xor
sub
inc
sub
adc
xchg
dec
dec
rcr
dec
daa
int
xor
lods
imul
push
iret
test
fwait
mov
mov
mov
inc
stos
xchg
enter
adc
mov
pop
mov
gs
or
outs
aam
clc
(bad)
popf
(bad)
fidiv
fsubr
pop
or
add
mov
scas
xor
fild
out
jb
nop
push
mov
aaa
xchg
cs
inc
addr16
push
movs
cmp
pop
push
test
dec
imul
ins
ins
inc
aaa
cli
retf
pop
clc
dec
js
xchg
iret
arpl
push
out
push
gs
or
add
test
xchg
xchg
fisubr
add
jecxz
cmps
movs
pop
ja
inc
aas
cmp
mov
pop
ins
push
mov
push
pop
mov
cmp
push
pop
push
imul
sub
inc
ret
ret
das
aas
add
daa
mov
fsubr
sbb
mov
lods
retf
pop
imul
fs
arpl
pop
inc
popa
cli
jb
ret
pop
or
das
mov
aas
push
inc
mov
ret
jne
cmp
mov
cmp
mul
mov
jl
retf
xlat
inc
xor
push
(bad)
fcomi
pop
pop
repz
(bad)
xlat
cmp
pusha
xor
jnp
in
add
add
cli
jmp
ins
(bad)
push
out
in
stc
inc
dec
mov
and
inc
xchg
or
repz
inc
inc
xor
push
enter
cmovae
lahf
dec
push
mov
jae
fbld
ss
aas
add
xor
push
es
or
hlt
cmp
out
sub
push
movs
xor
out
arpl
jno
mov
xor
dec
xchg
cwde
jnp
fxch
aas
jnp
(bad)
cmp
xchg
pop
sar
out
mov
std
sub
jmp
int
sub
push
shl
pop
inc
xor
les
ja
test
sbb
aad
jmp
icebp
rcl
jo
mov
(bad)
cdq
add
sub
test
sub
dec
cmp
popf
xchg
jecxz
or
xor
push
sub
dec
xchg
and
jns
shl
mov
out
out
mov
sbb
pop
and
mov
sbb
jne
sub
pop
xlat
adc
pop
cmp
or
push
call
iret
sbb
in
pop
jo
pusha
outs
mov
aas
mov
mov
aam
(bad)
int3
and
mov
fistp
mov
(bad)
in
cld
adc
push
scas
cmp
mov
pop
lods
mov
fsub
sbb
nop
fsub
and
addr16
pusha
mov
or
rcr
lock
leave
dec
pop
sbb
(bad)
jg
out
mov
mov
mov
loop
cmps
jmp
xor
ins
in
xchg
push
movs
(bad)
dec
addr16
ret
xchg
xor
push
add
int
(bad)
mov
and
mov
pusha
cs
sub
pop
bound
add
jg
and
pop
mov
pop
ins
div
sub
mov
adc
jne
or
jmp
lock
adc
mov
daa
jbe
push
or
mov
arpl
xchg
sahf
jnp
pop
push
add
push
cmc
cmc
repnz
mov
xchg
xor
data16
out
mov
(bad)
mov
pop
fsubr
inc
push
in
ins
push
(bad)
cdq
into
cpuid
dec
aas
jl
out
cli
xor
inc
mov
xor
xchg
sub
ret
or
jge
dec
or
jg
jl
arpl
stos
test
ja
pop
xchg
mov
pusha
(bad)
cli
cli
(bad)
gs
enter
push
repnz
movs
std
dec
pop
scas
pop
sbb
jbe
and
sahf
sbb
fwait
adc
aaa
fsub
push
add
jne
cld
cli
das
mov
mov
pop
mov
mov
dec
retf
in
scas
outs
popf
movs
sub
sbb
pxor
std
pop
test
mov
pop
pop
fs
xchg
iret
pop
jle
inc
xchg
ret
add
lods
setb
mov
es
stos
lds
push
fwait
js
sbb
cli
sbb
jmp
clc
out
enter
or
dec
cmp
cmp
repnz
inc
lahf
hlt
and
stc
add
ds
fcompp
adc
scas
shr
add
fldl2t
adc
mov
shr
add
enter
pop
js
cmp
bnd
arpl
add
mov
stos
fisubr
retf
retf
outs
sbb
mov
and
fcom
arpl
mov
ret
mov
inc
sbb
bound
loope
call
sub
add
retf
push
in
into
add
and
and
and
enter
mov
imul
clts
dec
pop
outs
pop
mov
push
mov
addr16
test
pop
mov
out
ja
sbb
lea
mov
ss
aaa
fist
push
(bad)
(bad)
aad
mov
enter
xor
aad
into
int
popf
ja
mov
push
push
push
fisttp
das
or
pop
push
xchg
cmp
arpl
or
cmps
or
fist
test
adc
push
mov
sbb
adc
call
xchg
pop
pushf
mov
jmp
mov
mov
popf
push
pop
push
popf
and
int3
mov
out
jecxz
hlt
ret
ret
mov
mov
xor
xor
cld
scas
mov
loopne
sar
sbb
jle
(bad)
xlat
int
aam
aaa
or
arpl
jp
or
stos
popa
call
jmp
inc
or
movs
sub
mov
retf
rol
sbb
push
stc
jnp
pop
mov
mov
sbb
cmp
mov
cdq
pop
shl
sbb
mov
push
into
test
sub
push
aad
jmp
and
jle
add
hlt
leave
mov
pop
enter
inc
mov
adc
jmp
out
mov
mov
xor
jns
cmp
int3
add
les
loopne
in
into
repz
loop
dec
dec
sbb
sbb
fwait
in
out
sub
mov
jl
lock
mov
mov
add
imul
sbb
push
lahf
sbb
push
popa
aaa
mov
pop
jl
(bad)
jecxz
cmps
jae
fstp
(bad)
jns
or
mov
sub
jecxz
mov
test
daa
mov
and
jle
rol
mov
and
mov
adc
das
sbb
lea
les
out
int3
xchg
push
cwde
mov
fidivr
hlt
mov
cmp
add
cmp
xor
or
mov
retf
cmp
pusha
sbb
push
adc
push
xchg
xchg
sar
daa
xchg
popa
mov
pop
or
into
mov
mov
jno
push
sar
jge
jnp
nop
scas
cmp
sub
mov
ffree
push
cmp
fidivr
cmp
hlt
iret
jbe
dec
mov
or
mov
xchg
or
cmps
ret
nop
pop
fimul
jns
test
sbb
jmp
sti
sbb
enter
fisttp
xchg
sub
sbb
or
or
scas
add
fdiv
xchg
jmp
out
icebp
push
add
jb
jno
ret
stos
or
scas
outs
shr
xchg
lods
ins
leave
and
jmp
ficomp
test
test
in
dec
pop
into
iret
jge
imul
inc
outs
jmp
cwde
imul
bound
mov
test
inc
popf
mov
shl
gs
test
or
nop
inc
pop
test
leave
out
cmp
mov
push
test
shr
and
test
adc
add
test
jg
or
test
mov
add
inc
movs
stos
nop
adc
xchg
cld
out
pop
jecxz
mov
ffreep
leave
sbb
out
xchg
fmul
sar
sbb
pop
enter
adc
into
xor
add
bound
imul
mov
rep
pop
jp
mov
cld
fistp
fwait
mov
jl
mov
pop
pop
pop
rol
cmp
shl
dec
pop
pop
sub
and
repz
rol
fnstsw
mov
and
faddp
or
aam
jbe
sbb
or
xor
nop
xor
js
cmp
out
test
cmp
add
mov
jmp
push
ret
inc
cmp
dec
loop
xor
enter
jns
movs
out
mov
mov
ins
jne
outs
and
dec
push
mov
dec
sbb
sub
mov
sbb
test
push
sub
xlat
xchg
dec
mov
mov
xchg
cmps
test
(bad)
imul
jbe
or
pop
push
pop
sbb
add
stos
enter
jmp
nop
(bad)
pop
xchg
pop
jno
dec
inc
cmp
lea
push
mov
dec
in
jge
jle
in
retf
(bad)
out
mov
push
ret
push
pop
sti
or
loop
xchg
sub
pop
adc
jp
sub
add
mov
pop
dec
inc
retf
push
nop
xchg
sbb
inc
jp
or
mov
fadd
lahf
add
mov
lds
call
sbb
jge
in
stos
jge
jo
xchg
dec
xlat
shr
sub
dec
or
adc
test
push
fidivr
pop
mov
lock
cmps
stos
sub
sub
push
stos
xor
std
xchg
add
rcr
into
mov
rol
rcr
push
push
mov
jbe
mov
push
ret
jb
add
xor
xor
inc
(bad)
iret
sti
retf
ja
xlat
fld
sbb
fwait
cmp
mov
mov
jns
sbb
stos
pop
jp
inc
or
cmp
stos
in
xchg
out
xor
test
mov
mov
fwait
mov
ror
das
(bad)
cdq
mov
cli
into
sbb
ins
inc
fldcw
inc
(bad)
and
jo
enter
push
pop
push
outs
dec
imul
add
adc
dec
fnstenv
push
pop
cs
xchg
xchg
ffree
mov
dec
dec
xor
fidivr
xchg
es
imul
adc
inc
add
jmp
fist
xchg
adc
mov
shr
cli
popf
jae
push
cmp
and
pop
jmp
add
popa
mov
arpl
movs
scas
iret
mov
mov
xor
int3
sub
std
xor
xor
cwde
and
call
sub
push
or
pop
sub
cli
push
mov
sbb
cmp
pop
loope
mov
jnp
cs
jbe
out
or
and
or
es
rol
xchg
loope
add
sbb
loope
mov
jne
mov
int
or
mov
adc
cmp
mov
lock
push
out
cmp
sub
pop
loop
cmp
(bad)
std
cmps
adc
mov
adc
out
push
mov
outs
cmc
jo
cmp
jg
sbb
mov
cld
movs
xlat
test
out
aam
jo
adc
cmps
add
test
arpl
loope
mov
mov
fisttp
sbb
or
inc
sub
retf
cmp
(bad)
pusha
sub
fisttp
cmp
jp
sub
cmp
imul
int
sub
sub
push
jns
jae
lahf
xor
(bad)
sub
pop
test
push
inc
pushf
repz
jmp
push
scas
movs
inc
pop
ror
sub
icebp
ds
rol
into
mov
mov
mov
xor
bound
fisub
sbb
push
xchg
xchg
lock
add
cmp
call
jl
ret
das
aas
int
rcr
adc
mov
jns
jnp
rol
stc
xchg
xor
mov
ins
push
(bad)
mov
jne
mov
lods
mov
aad
pop
xchg
ja
push
xor
enter
pop
adc
jg
mov
cmp
mov
sbb
jp
mov
cmp
mov
or
mov
pop
repz
jmp
pop
jl
fsubr
add
out
(bad)
xor
rcl
push
popf
mov
rol
loop
pushf
repnz
addr16
nop
shl
mov
daa
cld
or
ss
lods
add
jecxz
out
cdq
adc
jno
and
mov
mov
mov
lods
jne
loop
jp
jecxz
ret
add
push
int
mov
aaa
mov
test
in
lods
inc
imul
jecxz
fld
cmp
jbe
sbb
inc
adc
mov
push
jmp
cwde
cld
fsubr
mov
cdq
popf
lods
jle
push
repz
inc
iret
adc
in
push
ja
ror
into
dec
into
or
or
pop
xchg
or
push
into
mov
sahf
push
stos
inc
cs
sbb
add
dec
shl
gs
xchg
daa
mov
outs
sti
or
xchg
fbstp
scas
pop
into
mov
push
cmp
xor
or
aad
cmp
int
sub
xchg
cmps
mov
push
sbb
inc
aam
inc
jg
pop
(bad)
ins
xchg
inc
jbe
dec
sti
xor
adc
pusha
push
pop
inc
lea
not
sub
adc
jne
cwde
adc
das
aam
add
mov
xchg
jmp
add
sbb
aad
xlat
mov
xor
ins
fcom
dec
scas
mov
outs
mov
(bad)
add
or
repnz
or
pop
stos
inc
popa
andnps
dec
scas
push
sbb
rcl
jmp
cmp
sar
sbb
inc
ss
mov
ins
push
add
cmp
das
jbe
(bad)
(bad)
stos
popf
mov
push
pop
outs
leave
int3
xlat
push
or
ja
mov
add
push
xchg
sub
jge
pop
mov
push
jb
nop
xchg
aad
stos
pop
imul
in
clc
out
inc
jle
sbb
mov
and
cdq
ror
inc
and
mov
enter
stos
sti
xchg
bound
inc
stos
add
mov
sbb
xchg
jle
(bad)
fsubr
add
int3
shl
and
mov
mov
out
cdq
cmp
sbb
inc
mov
mov
iret
lods
cld
inc
fmul
gs
jmp
sbb
push
jl
sbb
fisttp
fist
inc
add
fimul
pop
aad
pop
bound
nop
hlt
loopne
cdq
dec
sbb
sub
(bad)
jge
cmps
mov
pop
push
pop
test
push
push
push
sbb
in
stos
cmp
cs
add
push
xchg
out
dec
adc
or
push
xor
xchg
mov
leave
not
jmp
daa
xchg
movs
int3
cld
xchg
sbb
js
cmps
push
movs
dec
xchg
fidiv
push
mov
or
xor
lahf
out
scas
shr
ss
or
cmp
inc
xor
js
loopne
xor
repz
or
jnp
jecxz
stos
stos
xor
ror
cld
push
xor
ficom
adc
out
sub
xor
cmps
scas
cwde
fcmovu
push
jge
lods
inc
daa
sub
mov
or
dec
lahf
pusha
sbb
jecxz
xchg
mov
mov
std
scas
inc
(bad)
loop
push
pop
mov
xor
push
dec
(bad)
popf
iret
pop
(bad)
nop
movs
adc
mov
pop
rcl
mov
(bad)
mov
xor
ret
inc
xchg
loopne
jbe
add
(bad)
mul
push
cmps
pop
inc
add
imul
adc
das
and
pop
pushf
(bad)
outs
sbb
ror
or
and
and
js
inc
xlat
ins
mov
jp
cld
call
mov
pop
adc
sub
and
aad
(bad)
sahf
or
popf
jge
in
(bad)
push
jmp
jecxz
and
or
int3
mov
test
fs
sub
mov
pop
cs
ja
add
fstp
inc
ss
xchg
jnp
pushf
sbb
icebp
pop
mov
cdq
xchg
sbb
xor
imul
test
stos
iret
nop
hlt
mul
pushw
ja
aaa
cmp
push
mov
ins
mov
sub
mov
shr
icebp
push
out
enter
pop
lods
outs
and
dec
dec
scas
push
(bad)
add
and
push
dec
xlat
loop
adc
fsubr
push
push
inc
lock
pop
sub
rcl
test
mov
dec
(bad)
mov
sbb
xor
outs
push
inc
pop
push
out
loope
(bad)
cmps
mov
ret
call
add
or
mov
sti
test
jno
test
fptan
and
out
call
sub
out
stc
push
mov
pop
(bad)
aad
jge
push
jmp
faddp
gs
cmp
cmp
pop
or
dec
mov
xchg
sbb
dec
cmp
xor
out
push
cmp
mov
das
leave
jbe
and
sub
xor
into
mov
push
arpl
(bad)
shr
dec
adc
adc
mov
movs
sbb
(bad)
in
pop
xchg
lea
jo
icebp
push
mov
test
push
inc
loop
dec
mov
(bad)
jmp
push
mov
pop
add
add
jmp
mov
out
ins
rcl
dec
dec
rcr
sbb
inc
push
push
mov
mov
pop
push
xor
hlt
xor
adc
mov
pop
jmp
(bad)
xchg
xchg
imul
mov
inc
and
inc
inc
data16
out
ins
pop
scas
push
inc
int3
popa
adc
stc
sub
jmp
push
pop
loop
icebp
mov
clc
dec
add
repz
cmp
cmp
push
shl
cmp
(bad)
aad
addr16
dec
mov
mov
in
pusha
jno
inc
xor
mov
dec
fwait
pop
js
or
jnp
mov
ret
mov
push
push
aaa
sbb
gs
(bad)
xor
mov
loop
(bad)
(bad)
adc
cmps
mov
les
test
push
das
cmp
mov
pop
int3
jle
loop
adc
arpl
push
ins
inc
inc
mov
push
ins
mov
ror
or
xlat
jo
add
jns
push
leave
pop
xchg
cmp
sub
sub
or
push
or
cmps
clc
and
out
adc
dec
mov
inc
(bad)
mov
mov
lds
adc
test
pop
pop
adc
fdiv
sti
push
out
fmul
adc
cmc
shl
xchg
mov
mov
(bad)
jmp
lock
inc
call
stos
shl
das
mov
push
xor
scas
arpl
fist
cmps
xchg
in
ror
adc
and
pop
or
mov
add
add
repz
lds
cs
jns
jg
add
pop
je
setl
xchg
movs
(bad)
(bad)
mov
pop
sub
pop
mov
jne
lods
sub
stos
or
in
cmps
outs
mov
sbb
jbe
inc
into
and
(bad)
xlat
cmp
add
push
retf
sbb
pusha
nop
icebp
or
in
inc
xor
adc
lahf
push
pop
or
out
in
cmc
es
not
jl
out
ss
pop
xchg
jae
xchg
or
add
enter
clc
hlt
movs
pop
pop
das
sbb
ret
mov
or
bound
iret
jge
and
push
mov
imul
popf
out
mov
movs
popf
ja
jle
mov
out
aaa
mov
jg
call
out
sbb
dec
cmp
cwde
mov
loopne
jmp
int
mov
mov
mov
inc
jb
push
(bad)
in
add
icebp
retf
je
xor
stos
xor
inc
pop
pop
cmc
mov
xlat
dec
mov
stc
stos
pop
fsubr
mov
loope
pop
mov
mov
inc
dec
sbb
sub
call
inc
push
sub
(bad)
int
sahf
mov
mov
push
jle
mov
repnz
sar
mov
(bad)
movs
mov
test
push
mov
ja
mov
inc
xor
and
ret
std
repnz
lahf
xor
xchg
in
js
push
sbb
pushf
mov
into
cdq
push
sub
or
jp
or
nop
mov
push
ins
test
xor
jae
jnp
jns
scas
out
pop
and
ins
gs
retf
(bad)
jo
pop
cmps
ins
cmp
retf
stc
xor
scas
xor
mov
and
lods
enter
movs
or
xchg
sbb
cmps
xchg
out
mov
mov
mov
xchg
xor
push
jno
mov
push
push
stos
mov
mov
pop
cmp
and
ret
jecxz
push
push
inc
xor
jne
adc
adc
test
xchg
aas
icebp
std
xor
stc
es
mov
mov
out
pop
jl
in
inc
push
pop
rol
mov
and
jle
xor
fdivr
pop
sahf
std
pop
stc
add
in
adc
mov
cli
adc
outs
or
fwait
jecxz
lahf
push
ss
fs
sbb
loope
int3
and
ins
inc
stos
push
xchg
aad
in
add
(bad)
sahf
jo
cmps
ret
push
inc
xor
and
and
adc
inc
adc
jle
dec
cmp
fcomi
inc
xchg
repnz
push
cld
fstp
mov
in
jae
pop
mov
add
loope
mov
mov
cdq
or
push
mov
fs
pop
fcomp
mov
xchg
nop
mov
retf
outs
cmp
repz
in
xchg
and
(bad)
cmp
pop
mov
punpckhwd
dec
fs
adc
mov
pop
mov
xchg
push
in
nop
adc
iret
sbb
(bad)
adc
shr
mov
test
cs
ja
fdiv
push
dec
or
ror
push
add
iret
xchg
mov
push
mov
push
enter
(bad)
mov
xchg
lock
stos
out
push
and
mov
adc
pop
xchg
dec
out
sub
mov
dec
sub
aaa
dec
adc
call
addr16
movs
fs
int
cmp
and
ins
leave
xor
ds
in
es
mov
cwde
shr
push
repnz
int3
in
push
or
stos
cmp
cmps
call
add
sub
aaa
mov
mov
push
mov
dec
mov
push
(bad)
imul
pop
repz
push
sub
imul
inc
pop
ret
add
lock
or
jae
rcl
mov
(bad)
and
fdivp
imul
or
out
test
daa
cmp
or
addr16
pushf
jno
jns
sbb
lods
int
lahf
stos
cmp
jmp
pop
ds
sbb
push
in
shl
gs
sub
jle
iret
rol
xor
jne
jno
jnp
cmp
and
out
je
repz
and
js
jle
in
mov
xor
ret
pop
inc
mov
add
jbe
dec
and
xchg
jge
fs
or
pop
sbb
xor
fs
xchg
shr
fild
pop
pop
das
jbe
cmp
(bad)
push
lds
repnz
leave
mov
mov
sbb
aam
jno
inc
push
shl
icebp
std
mov
or
fsubr
cld
push
sub
push
hlt
call
pop
stc
out
mov
test
clc
dec
add
pop
adc
ins
in
dec
push
icebp
jb
scas
sbb
mov
jg
aam
sub
stos
jb
sti
jne
mov
pusha
fs
push
pushf
mov
mov
jmp
xor
push
add
jb
xor
sbb
push
xchg
and
or
stos
neg
push
and
shl
fst
sub
jno
movs
iret
and
test
imul
lock
stc
xor
pop
or
fst
std
mov
dec
mov
or
aad
cmp
jns
or
xor
adc
mov
(bad)
std
xchg
cli
bound
xor
xchg
push
sbb
(bad)
push
outs
inc
dec
rol
or
ror
lea
(bad)
sbb
call
out
pop
mov
jle
movs
ss
adc
xchg
fnstsw
mov
xchg
xchg
xchg
sub
popa
mov
cdq
ss
pop
add
repz
push
pop
aas
inc
add
pop
inc
paddd
add
xor
ret
or
or
dec
pop
dec
push
add
test
scas
mov
stos
shl
jae
inc
xchg
cmc
call
sahf
les
xchg
fsubr
ror
jnp
int
je
jmp
inc
xchg
inc
inc
cmp
cmp
adc
push
mov
mov
cmps
daa
ds
or
sti
pop
mov
ds
cmp
and
xor
fld
push
(bad)
out
std
jae
jmp
rol
cli
or
xchg
dec
int3
inc
fistp
dec
add
xchg
sbb
dec
imul
sub
mov
mov
ins
add
or
pop
sbb
stos
in
in
xor
jae
clc
scas
mov
sub
mov
sbb
sub
shl
xchg
pop
jge
or
lds
lds
iret
out
mov
and
movs
or
mov
mov
gs
adc
pop
push
lahf
mov
sti
jae
push
jnp
dec
pushf
pop
lea
xchg
push
fs
sub
or
pushf
loopne
ror
push
or
jle
jg
call
xchg
inc
call
inc
pop
xchg
and
and
cmp
xor
lods
adc
popa
mov
(bad)
repnz
ins
out
xchg
cwde
jmp
imul
dec
loop
jb
cmp
add
jno
test
xor
cli
dec
adc
add
pop
jmp
cmc
(bad)
in
rcr
test
outs
pop
es
jmp
int
cli
pop
mov
pop
(bad)
jne
pushf
push
pop
clc
cmp
lods
(bad)
in
int
xor
lods
push
inc
mov
push
stos
jmp
dec
jno
ja
popf
es
pop
shl
xor
mov
dec
add
(bad)
loopne
xchg
xor
sbb
sbb
add
movs
adc
retf
add
call
xor
xor
or
xor
cmp
jo
stos
imul
or
lock
and
fisub
inc
mov
loop
les
add
aaa
adc
cmp
in
xchg
and
mov
sbb
sub
pusha
out
jnp
xchg
mov
jecxz
dec
pop
fimul
jbe
(bad)
mov
loopne
mov
int3
movs
or
sbb
ror
subps
in
adc
mov
pop
popf
mov
or
mov
xchg
xchg
mov
nop
add
inc
(bad)
stos
into
and
hlt
or
retf
cmps
inc
hlt
test
jmp
scas
into
lahf
iret
js
xchg
in
fs
dec
imul
and
pop
push
inc
adc
push
adc
in
cmovs
(bad)
ror
aam
and
jge
cdq
ret
mov
dec
mov
out
mov
dec
mov
mov
mov
jae
pop
dec
mov
xchg
jl
(bad)
aaa
sbb
mov
inc
fcmovbe
sub
jne
sub
test
sahf
or
aas
xor
cmp
mov
fbld
jne
inc
shl
repz
shl
xchg
push
(bad)
in
pop
aas
sbb
add
mov
movs
test
dec
mov
ror
outs
push
sub
mov
shl
enter
out
sub
pusha
mov
mov
aam
pop
cld
loopne
mov
pop
out
cmp
aad
js
ins
xlat
cdq
xchg
nop
inc
cmp
jmp
cmc
adc
inc
xchg
aam
ds
lds
aaa
push
mov
dec
ss
fnstcw
outs
loope
push
mov
loopne
jne
mov
outs
rcl
add
fwait
add
push
or
fwait
scas
push
cmp
push
inc
in
les
cwde
adc
and
fnstcw
mov
in
pop
pop
movs
cwde
cld
mov
mov
lods
stos
shl
sub
fstp
pop
dec
aam
sar
adc
(bad)
jns
lods
xchg
mov
jbe
inc
mov
test
into
push
imul
xchg
cs
in
add
sub
mov
add
cli
xchg
das
mov
aad
cmps
push
add
jl
add
aas
retf
cmp
lahf
push
pop
pop
jp
cwde
aaa
in
daa
dec
rcl
push
seta
inc
in
(bad)
out
jp
jo
mov
or
and
aam
rcl
jle
push
aad
dec
stos
xor
leave
or
push
das
repz
jbe
pop
xor
push
and
and
adc
xor
in
(bad)
ja
adc
push
xor
jo
inc
xor
jge
push
es
mov
fcmovb
add
mov
xchg
lock
adc
jnp
jl
es
dec
or
data16
jb
pop
jns
dec
jno
mov
ret
(bad)
not
adc
and
sub
push
jo
div
or
arpl
xor
push
mov
dec
inc
arpl
das
aaa
or
imul
xor
cmp
aad
bound
inc
ret
jl
lea
mov
inc
fild
shr
push
mov
xor
mov
sbb
into
(bad)
jl
push
jle
push
add
mov
inc
xchg
aaa
push
test
jmp
xor
mov
dec
ins
std
sbb
inc
inc
push
rol
inc
pop
sub
xchg
pop
enter
outs
lds
or
mov
das
cmps
mov
add
push
(bad)
fsubr
mov
sbb
adc
push
xchg
add
push
in
(bad)
aam
mov
jmp
fs
call
jmp
mov
and
call
mov
sahf
fidivr
dec
sub
adc
mov
pop
loopne
sti
sbb
imul
es
jmp
mov
out
mov
leave
sbb
pcmpeqw
sbb
adc
mov
test
daa
int3
pop
pop
sbb
lods
sub
adc
jmp
jp
push
mov
dec
add
nop
jns
pop
popf
das
pop
xor
repnz
pop
mov
push
pop
sub
mov
dec
inc
or
sbb
xor
or
xchg
adc
loopne
mov
cdq
jne
inc
test
inc
shl
inc
cli
fs
lahf
xor
inc
pushf
or
mov
loopne
rcr
dec
stos
cdq
add
inc
arpl
popf
mov
shl
popf
xchg
(bad)
out
leave
mov
sub
add
mov
pop
adc
retf
pop
ins
xor
or
ja
mov
ja
loop
sub
aaa
jo
mov
cdq
push
das
outs
int
jle
mov
sbb
add
jno
dec
and
nop
scas
shl
ds
lods
out
test
repnz
(bad)
or
dec
jl
adc
jno
xor
cmp
addr16
cmp
jle
mov
cmp
mov
stos
mov
shl
jb
pop
dec
inc
out
jl
xchg
xchg
xchg
sub
push
cmps
int
or
pushf
and
(bad)
fwait
test
shl
jg
test
sbb
mul
cmp
icebp
sar
fsub
jecxz
fmul
fiadd
lock
push
pop
addr16
mov
mov
adc
inc
inc
mov
int3
xor
mov
adc
imul
mov
call
mov
test
jb
mov
test
mov
sub
cmp
inc
push
xlat
retf
out
push
push
ret
cmps
cmp
shr
xor
loopne
xor
outs
cmp
(bad)
mov
or
cmp
stos
jns
ret
and
lahf
mov
es
inc
sahf
mov
mov
ror
imul
adc
cmps
push
add
cs
hlt
rcl
sub
fcomp
addr16
adc
push
and
pop
fs
jg
jno
jge
pop
xor
div
lahf
adc
or
or
cld
retf
add
aam
rol
aaa
scas
add
repz
fcom
xchg
in
pop
xor
shl
adc
cmp
loop
mov
leave
and
xchg
push
add
mov
imul
add
push
sbb
aaa
outs
out
jl
sti
movs
cmp
xor
mov
out
aaa
mov
mov
into
in
cmp
dec
(bad)
cmp
(bad)
(bad)
outs
shl
or
fcomp
jl
and
mov
jle
inc
xchg
stos
test
sar
shr
adc
sti
addr16
mov
aaa
aad
jmp
sti
mov
dec
enter
pop
jle
push
cmp
shr
add
fdivr
adc
inc
add
jge
cmp
dec
pop
hlt
shl
jge
cmp
pop
std
dec
inc
inc
(bad)
jg
adc
xor
ins
sub
imul
push
or
retf
mov
xor
mov
push
dec
mov
jge
mov
and
das
dec
cli
fucomp
jg
xor
loop
arpl
data16
sbb
mul
cli
movs
icebp
jne
add
mov
retf
hlt
in
xchg
(bad)
test
out
frstor
xchg
aaa
popa
and
(bad)
xchg
dec
fld
inc
(bad)
sbb
xchg
inc
cmps
mov
lahf
sahf
pushf
mov
dec
fdivr
test
ds
sbb
mov
lods
enter
jbe
das
jle
mov
fistp
sub
mov
ss
aad
movs
in
sbb
test
or
retf
fimul
xchg
ret
lock
add
adc
popa
nop
mov
dec
jo
vandnps
sti
lods
sahf
cmp
je
dec
xchg
shl
fcmovbe
push
ins
mov
mov
xor
fwait
aaa
push
xchg
and
adc
fdivrp
inc
cli
xor
fs
mov
test
fwait
cmps
enter
cmp
or
push
inc
pop
ss
sbb
jae
dec
pop
(bad)
add
sbb
jg
fwait
pop
mov
stos
mov
jp
push
mov
test
ja
sahf
inc
fmul
ret
es
mov
dec
gs
nop
and
inc
hlt
mov
pop
sub
cmp
mov
sub
xchg
(bad)
sbb
(bad)
pop
repz
lds
sbb
repnz
cmp
and
gs
addr16
push
xchg
push
add
or
mov
xchg
or
jecxz
xor
pop
out
cmps
outs
hlt
loop
sbb
mov
or
add
sub
add
add
add
sbb
add
add
pop
inc
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
(bad)
fstp
add
add
add
xlat
add
jl
add
push
push
inc
push
mov
jnp
inc
xchg
mov
fld
add
pop
push
jae
jb
pop
ins
js
inc
gs
je
jo
push
data16
pushw
addr16
push
addr16
data16
data16
addr16
push
addr16
pop
js
ss
inc
bound
pop
push
data16
pushw
addr16
push
addr16
add
