pop
ficom
add
add
add
add
add
add
add
add
add
add
add
add
mov
test
add
add
adc
add
sub
add
add
or
xor
add
add
add
add
adc
add
add
add
sub
add
push
and
add
jle
add
add
add
add
jae
add
or
add
add
add
add
xor
add
add
add
add
add
outs
sub
push
and
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
jnp
add
add
outs
pop
add
or
add
add
xor
add
add
add
add
add
sub
pop
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
outs
sbb
add
and
add
sub
jnp
add
add
outs
pop
add
or
add
xor
add
add
add
add
(bad)
sub
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
sub
add
or
adc
pop
sub
push
sub
add
or
sub
add
push
add
push
sub
add
xor
add
add
add
add
add
jnp
add
add
add
xor
mov
add
add
add
jae
add
or
push
add
add
add
sbb
es
jle
add
add
sbb
add
add
add
push
add
or
adc
sub
add
or
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
pop
sub
pop
add
push
and
pop
add
push
outs
and
add
and
outs
sbb
es
jle
add
add
sbb
es
sub
add
or
add
add
(bad)
(bad)
(bad)
fimul
adc
(bad)
push
or
add
outs
add
push
outs
sbb
add
and
add
adc
add
add
add
add
add
add
adc
add
dec
add
add
add
adc
or
push
sub
add
pop
inc
add
add
sbb
add
adc
add
or
add
add
add
sub
xor
pop
add
push
sub
inc
sub
push
sub
dec
sub
push
and
sub
push
and
sub
push
and
xor
add
add
add
add
add
add
push
dec
add
add
add
or
or
pop
add
add
add
add
sub
add
or
add
xor
add
add
add
add
add
add
add
add
sub
xor
add
add
add
add
add
or
add
add
xor
add
add
add
add
add
or
add
or
pop
add
add
add
add
or
add
add
xor
imul
add
add
add
add
add
or
push
pop
jbe
pop
add
push
and
add
sub
add
add
add
and
add
add
add
dec
add
add
push
add
push
add
jnp
add
add
add
jle
add
add
push
add
push
add
add
add
add
jle
add
add
push
add
push
add
or
add
sub
adc
add
add
add
or
push
pop
add
push
jae
add
or
add
or
add
or
adc
daa
add
or
add
or
sub
add
or
sub
add
push
and
sub
add
or
add
add
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
add
add
xor
add
add
push
add
adc
sub
add
or
sub
add
push
and
sub
add
and
add
or
push
pop
outs
add
or
popa
push
sub
es
add
sub
adc
add
xor
add
pop
add
adc
outs
xor
add
and
sub
xor
add
and
xor
push
push
pop
outs
xor
add
or
pop
mov
add
add
xor
add
and
add
xor
pop
add
add
add
adc
add
add
dec
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
add
xor
add
and
sub
or
call
add
and
add
and
push
add
add
ficom
or
pop
or
xor
adc
jle
add
add
pop
sub
add
add
or
push
add
add
add
add
add
or
jle
add
or
add
add
jle
add
or
add
add
add
add
or
cmp
add
add
add
add
add
add
and
add
and
add
add
add
add
add
lahf
add
add
pop
add
push
and
add
or
add
add
or
dec
add
add
add
add
jnp
add
add
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
jge
add
add
add
add
lahf
add
add
pop
add
push
and
add
or
add
add
add
add
xor
add
add
add
add
add
add
sbb
add
sub
xor
sbb
add
add
add
add
add
add
or
or
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
and
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
inc
and
add
add
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
(bad)
cmp
jnp
add
add
and
add
add
add
dec
add
add
push
add
push
add
jnp
add
add
add
add
add
add
dec
add
add
push
add
push
add
jnp
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
and
add
add
add
dec
add
add
push
add
push
add
jnp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
push
add
push
add
adc
add
sub
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
and
sbb
add
push
sub
add
or
es
add
add
push
add
push
sub
add
or
add
sbb
add
add
add
adc
adc
add
sub
push
sub
push
add
push
adc
add
xor
adc
add
imul
add
add
pop
add
push
and
add
call
and
pop
add
push
and
add
or
add
push
sub
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
sub
add
adc
add
adc
add
sub
pop
or
push
add
push
and
pop
add
push
pop
outs
sbb
add
and
add
sub
es
sub
add
add
add
add
and
mov
sub
add
sbb
add
add
add
adc
hlt
add
add
pop
add
push
sub
sub
add
adc
add
or
add
add
add
(bad)
(bad)
call
sub
add
and
add
add
pop
add
push
sub
add
add
jl
add
sub
push
and
add
call
push
sub
add
or
inc
add
add
idiv
(bad)
jmp
stc
add
add
pop
add
push
and
add
sub
pop
add
add
pop
add
push
and
add
jle
add
add
outs
dec
add
push
and
add
sub
push
and
add
jb
add
jo
call
push
sub
add
or
add
or
add
or
cmps
add
add
pop
add
push
and
add
or
mov
add
pop
sub
add
or
inc
add
add
idiv
(bad)
call
adc
push
add
push
adc
pop
add
add
sub
sbb
push
add
push
and
add
add
pop
add
push
and
add
or
add
sub
add
add
add
adc
add
add
sub
add
sbb
add
add
add
adc
adc
pop
add
push
and
add
pop
sbb
push
add
push
sbb
add
xor
sbb
add
imul
add
add
pop
add
push
and
pop
add
push
and
add
and
add
add
pop
add
push
and
add
or
add
push
sub
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
add
add
inc
add
add
pop
add
push
and
add
add
pop
add
push
sub
or
rol
add
pop
add
push
and
add
or
add
push
sub
add
or
inc
add
add
idiv
(bad)
call
and
push
add
push
sbb
add
sbb
add
daa
or
and
push
add
push
and
add
add
pop
add
push
pop
outs
sbb
add
and
add
sub
fiadd
sub
add
adc
add
add
add
add
add
xor
add
add
adc
inc
add
add
push
and
add
pop
sub
push
add
push
sbb
add
or
pop
sub
push
add
push
and
add
xor
and
add
xor
push
add
push
and
add
or
pop
xor
push
add
push
sub
add
xor
sub
add
cmp
push
add
push
sub
add
or
pop
cmp
push
add
push
xor
add
xor
xor
add
inc
sub
add
xor
add
or
pop
inc
sub
add
cmp
add
xor
cmp
add
dec
sub
add
cmp
add
or
pop
dec
sub
add
add
add
xor
inc
add
add
push
sub
add
add
add
xor
inc
add
add
push
sub
add
or
add
xor
dec
add
add
pop
sub
add
or
add
xor
dec
add
add
imul
add
add
push
and
add
sub
push
sub
and
add
add
push
and
add
or
add
push
sub
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
pop
sub
add
and
daa
add
add
sub
pop
pusha
sub
add
and
add
add
push
and
add
or
add
sub
fiadd
jle
add
add
dec
push
add
sub
push
and
add
sub
push
and
add
or
fadd
add
sub
push
and
add
or
mov
add
or
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
xor
aaa
add
add
sub
add
push
and
push
add
sub
push
and
add
or
add
sub
es
jle
add
add
push
pop
add
sub
push
and
push
add
push
sub
add
mov
pop
add
push
adc
imul
and
add
adc
and
jo
push
add
push
adc
cmp
and
and
or
add
pop
add
push
adc
or
add
adc
add
pop
add
push
and
push
add
push
outs
cmp
data16
add
add
(bad)
(bad)
call
js
push
add
push
sbb
pop
jl
push
add
push
and
push
add
push
outs
add
or
push
and
or
add
pop
add
push
and
cmp
add
and
add
adc
sub
add
or
inc
add
add
idiv
(bad)
call
push
sbb
add
and
test
add
sub
add
pop
adc
adc
adc
mov
inc
(bad)
(bad)
call
inc
add
add
idiv
(bad)
(bad)
jle
add
add
xor
add
pop
inc
add
add
idiv
(bad)
(bad)
jle
add
add
push
pop
add
sub
push
and
push
add
push
sub
adc
dec
or
add
pop
add
push
and
imul
and
add
adc
and
mov
add
sub
add
adc
cmp
and
and
or
add
pop
add
push
and
cmp
add
and
add
adc
and
or
add
pop
add
push
and
add
sub
add
outs
cmp
es
sbb
add
add
idiv
(bad)
jmp
xchg
add
add
push
add
push
sbb
and
push
add
push
and
add
push
outs
add
or
or
add
pop
add
push
and
cmp
add
and
add
adc
sub
add
or
add
add
(bad)
(bad)
call
or
adc
and
push
add
push
pop
adc
adc
adc
mov
cmp
(bad)
call
inc
add
add
idiv
(bad)
(bad)
fisubr
adc
and
add
push
and
pop
add
push
and
sbb
add
and
add
sub
fiadd
sub
add
push
adc
adc
outs
aas
add
or
inc
pop
add
adc
inc
add
or
or
add
add
cmps
add
add
add
add
or
add
push
and
add
sub
push
sub
add
or
add
sub
push
and
add
adc
outs
or
add
pop
add
push
and
cmp
add
and
add
adc
and
add
and
inc
add
add
idiv
(bad)
jmp
test
add
sub
add
and
add
or
and
add
adc
add
push
add
push
and
pop
add
push
adc
or
add
sub
es
jle
add
add
and
add
cmp
inc
add
add
idiv
(bad)
(bad)
jle
add
add
or
add
push
and
add
sub
push
sub
add
or
add
sub
push
sub
adc
and
or
add
pop
add
push
and
cmp
add
and
add
adc
sub
add
or
add
add
(bad)
(bad)
jmp
mov
add
sub
add
sub
add
push
sub
add
xor
mov
add
add
push
add
push
and
or
add
pop
add
push
and
sbb
add
and
add
sub
es
jle
add
add
and
add
and
add
sbb
add
add
(bad)
(bad)
(bad)
jle
add
add
or
add
push
and
add
push
and
add
and
pop
add
push
and
add
adc
and
pop
add
push
and
cmp
add
and
add
adc
sub
add
or
mov
push
add
push
sub
sub
add
sub
adc
mov
push
add
push
and
or
add
pop
add
push
adc
outs
sbb
add
and
add
sub
fiadd
jle
add
add
and
add
and
add
sbb
add
(bad)
(bad)
(bad)
jle
add
add
or
add
push
and
add
sub
push
and
add
and
add
sub
push
sub
adc
pop
or
add
pop
add
push
adc
sub
add
or
add
adc
sub
add
or
rol
add
push
add
push
xor
add
adc
fidiv
adc
and
add
add
push
add
push
and
add
sub
push
and
sbb
add
and
add
sub
es
jle
add
add
and
add
and
add
sbb
add
add
(bad)
(bad)
(bad)
jle
add
add
or
add
push
and
add
sub
push
and
add
and
add
sub
push
and
add
and
std
or
add
pop
add
push
and
cmp
add
sub
sub
add
or
add
add
(bad)
(bad)
jmp
enter
sub
add
cmp
add
adc
cmp
add
adc
add
push
add
push
and
add
sub
push
and
sbb
add
and
add
sub
fiadd
jle
add
add
and
add
cmp
inc
add
add
idiv
(bad)
(bad)
jle
add
add
or
add
push
and
add
sub
push
and
add
and
add
sub
push
sub
adc
and
add
push
and
cmp
add
sub
sub
add
or
add
add
(bad)
(bad)
jmp
rol
add
sub
add
cmp
cmp
add
xor
pop
and
add
add
push
add
push
and
or
add
pop
add
push
and
sbb
add
and
add
sub
es
jle
add
add
and
add
and
add
sbb
add
add
(bad)
(bad)
(bad)
jle
add
add
or
add
push
and
add
sub
push
and
add
and
add
sub
push
and
add
adc
and
add
sub
push
adc
sub
add
or
add
adc
sub
add
or
add
sub
add
add
add
sbb
fisubr
adc
and
add
add
push
add
push
and
add
pop
add
push
adc
outs
sbb
add
and
add
sub
es
jle
add
add
and
add
and
add
jle
add
add
or
add
push
and
or
add
push
and
add
and
pop
add
push
and
add
and
add
add
sub
push
and
cmp
add
and
add
adc
sub
add
or
inc
add
add
idiv
(bad)
jmp
loopne
add
sub
add
add
add
sbb
fidiv
adc
and
add
add
push
add
push
and
push
add
sub
push
and
sbb
add
and
add
sub
es
jle
add
add
and
add
cmp
imul
add
or
add
push
and
pop
add
push
and
add
and
add
sub
push
sub
adc
ror
add
pop
add
push
adc
cmp
add
and
add
adc
and
add
sub
add
sub
add
or
add
sbb
dec
add
add
adc
add
push
add
push
and
push
add
sub
push
and
sbb
add
and
add
sub
fiadd
jle
add
add
and
add
and
add
sbb
add
add
(bad)
(bad)
(bad)
jle
add
add
or
add
push
and
add
sub
push
sub
add
or
add
sub
push
sub
adc
and
add
pop
add
push
and
cmp
add
and
add
adc
sub
add
or
inc
add
add
idiv
(bad)
jmp
lock
add
push
add
push
or
add
push
or
add
xor
pop
and
add
add
push
add
push
and
pop
add
push
and
sbb
add
and
add
sub
es
adc
inc
add
or
(bad)
call
add
(bad)
(bad)
(bad)
fimul
adc
push
or
add
outs
add
sub
add
inc
push
add
add
add
das
add
add
add
call
add
add
add
add
ret
add
add
add
and
add
add
add
add
add
push
add
add
add
movs
add
add
add
add
add
add
add
std
add
add
add
jbe
add
add
add
add
add
add
mov
add
add
add
xor
add
inc
add
add
add
add
add
ins
add
add
push
add
sub
add
inc
add
add
add
add
pop
add
ins
add
add
add
add
add
add
add
jmp
add
jns
add
or
add
add
add
add
add
add
stos
or
add
add
and
add
xor
add
inc
add
add
add
add
add
ins
add
add
or
add
add
add
add
add
add
sbb
add
jns
add
xchg
or
add
add
add
add
add
add
ror
add
imul
add
add
add
add
add
add
add
test
add
ja
add
cld
or
add
add
add
add
add
add
in
add
popa
pop
add
inc
or
add
add
add
add
add
xor
add
add
and
add
add
push
add
push
adc
add
cld
add
add
push
add
push
adc
add
add
add
sub
add
sbb
add
add
add
sub
add
sub
add
or
or
add
sub
add
sub
add
and
add
add
push
add
push
sub
add
and
add
add
and
adc
add
pop
add
push
and
add
and
adc
add
pop
add
push
or
cmp
add
sub
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
or
add
or
and
add
sub
push
sub
add
sub
and
add
add
push
add
push
adc
add
imul
sub
add
sub
push
sub
adc
xor
add
sub
push
and
cmp
add
and
add
adc
and
add
and
inc
add
add
idiv
(bad)
call
add
inc
add
or
add
sub
push
and
add
sub
sbb
add
add
(bad)
(bad)
jmp
adc
add
sub
add
adc
add
imul
inc
adc
add
pop
add
push
and
add
adc
add
pop
add
push
and
cmp
add
sub
sub
add
or
add
add
(bad)
(bad)
call
add
or
and
add
sub
push
and
add
and
inc
add
add
idiv
(bad)
jmp
sbb
add
sub
add
sbb
add
xor
push
and
add
sub
add
and
add
sub
push
and
sbb
add
and
add
sub
es
sub
add
retf
add
add
add
add
add
add
add
add
add
fadd
add
add
add
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
add
push
inc
add
add
idiv
(bad)
call
sub
add
add
mov
pop
add
push
and
add
sub
sbb
add
(bad)
(bad)
jmp
and
add
sub
add
add
das
add
push
and
add
leave
adc
add
pop
add
push
and
add
dec
add
add
xor
add
and
add
jle
add
add
push
add
jmp
add
and
add
and
inc
add
add
idiv
(bad)
jmp
and
add
sub
add
add
das
add
push
and
add
not
add
sub
push
jle
add
add
dec
add
add
xor
add
and
add
jle
add
add
popa
sbb
add
add
(bad)
(bad)
inc
and
adc
add
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
jmp
sub
add
sub
add
add
das
add
push
and
add
sub
add
sub
push
jle
add
add
dec
add
add
xor
add
and
add
jle
add
add
arpl
idiv
(bad)
inc
and
add
sub
push
and
add
and
inc
add
add
idiv
(bad)
jmp
sub
add
sub
add
add
das
add
push
and
add
push
adc
add
pop
add
push
and
add
dec
add
add
xor
add
and
add
jle
add
add
popa
sbb
add
add
(bad)
(bad)
inc
and
add
pop
add
push
outs
inc
add
or
inc
add
add
idiv
(bad)
jmp
xor
add
sub
add
add
das
add
push
and
add
xchg
add
sub
push
and
add
dec
add
add
xor
add
and
add
jle
add
add
push
add
scas
adc
add
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
jmp
xor
add
sub
add
add
das
add
push
and
add
mov
pop
add
push
jle
add
add
dec
add
add
xor
add
and
add
jle
add
add
pop
sbb
add
add
(bad)
(bad)
inc
and
adc
add
pop
add
push
and
add
and
cmp
add
sub
add
add
das
add
push
and
add
out
adc
add
pop
add
push
and
add
dec
add
add
xor
add
and
add
jle
add
add
pop
sbb
add
add
(bad)
(bad)
inc
and
adc
add
pop
add
push
and
add
and
cmp
add
sub
add
add
das
add
push
and
add
and
pop
add
push
and
add
dec
add
add
xor
add
and
add
jle
add
add
pop
sbb
add
add
idiv
(bad)
inc
and
add
sub
push
and
add
sub
sbb
add
add
(bad)
(bad)
jmp
inc
add
add
push
add
push
add
das
add
push
and
add
pop
adc
add
pop
add
push
and
add
dec
add
add
xor
add
sub
add
add
popa
sbb
add
add
(bad)
(bad)
inc
and
add
push
and
add
sub
sbb
add
add
(bad)
(bad)
jmp
inc
add
add
push
add
push
add
das
add
push
and
add
(bad)
adc
add
pop
add
push
and
add
dec
add
add
xor
add
and
add
jle
add
add
push
add
mov
add
sub
push
outs
inc
add
or
inc
add
add
idiv
(bad)
jmp
dec
add
add
push
add
push
add
das
add
push
and
add
(bad)
adc
add
pop
add
push
and
add
dec
add
add
xor
add
sub
add
add
popa
sbb
add
add
(bad)
(bad)
inc
and
adc
add
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
jmp
dec
add
add
push
add
push
add
das
add
push
add
add
add
add
sub
push
and
add
dec
add
add
xor
add
and
add
jle
add
add
push
add
adc
add
pop
add
push
outs
inc
add
or
inc
add
add
idiv
(bad)
jmp
push
add
add
push
add
push
add
das
add
push
and
add
inc
adc
add
pop
add
push
and
add
dec
add
add
xor
add
sub
add
add
push
sbb
add
(bad)
(bad)
inc
and
add
sub
push
and
add
sub
and
add
push
add
push
add
das
add
push
and
add
mov
add
sub
push
jle
add
add
dec
add
add
xor
add
and
add
jle
add
add
pop
sbb
add
add
idiv
(bad)
inc
and
pop
add
push
outs
inc
add
or
sbb
add
add
(bad)
(bad)
jmp
pop
add
add
push
add
push
add
das
add
push
and
add
xlat
adc
add
pop
add
push
and
add
dec
add
add
xor
add
sub
add
add
pop
sbb
add
add
(bad)
(bad)
inc
and
add
sub
push
and
add
sub
sbb
add
add
(bad)
(bad)
jmp
pop
add
add
push
add
push
add
das
add
push
and
add
pop
adc
add
pop
add
push
jle
add
add
dec
add
add
xor
add
and
add
sub
xor
cmps
push
add
add
add
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
add
pusha
add
mov
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
and
add
sub
add
add
xor
add
adc
add
leave
adc
add
pop
add
push
and
add
dec
add
add
xor
add
and
add
jle
add
add
arpl
inc
add
add
idiv
(bad)
inc
and
adc
add
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
jmp
add
add
push
add
push
add
xor
add
and
add
not
add
sub
push
and
add
dec
add
add
xor
add
and
add
jle
add
add
pop
add
sbb
add
sub
push
and
add
and
inc
add
add
idiv
(bad)
jmp
push
push
add
push
add
xor
add
and
add
sub
add
sub
push
and
add
dec
add
add
xor
add
and
add
jle
add
add
push
add
dec
adc
add
pop
add
push
and
add
sub
pop
inc
add
add
idiv
(bad)
jmp
ins
add
add
push
add
push
add
xor
add
and
add
push
adc
add
pop
add
push
jle
add
add
dec
add
add
xor
add
sub
add
add
push
sbb
add
(bad)
(bad)
inc
and
add
pop
add
push
and
add
and
jo
add
sub
add
add
xor
add
and
add
xchg
add
sub
push
and
add
dec
add
add
xor
add
sub
add
add
pop
sbb
add
add
(bad)
(bad)
inc
and
pop
add
push
and
add
and
je
add
sub
add
add
xor
add
and
add
mov
pop
add
push
and
add
dec
add
add
xor
add
and
add
jle
add
add
pop
add
in
add
sub
push
and
add
and
inc
add
add
idiv
(bad)
jmp
js
add
sub
add
add
xor
add
and
add
out
adc
add
pop
add
push
and
add
dec
add
add
xor
add
and
add
jle
add
add
pop
pop
inc
add
add
idiv
(bad)
inc
and
adc
add
pop
add
push
and
add
sub
sbb
add
add
(bad)
(bad)
jmp
jl
add
sub
add
add
xor
add
xor
add
and
pop
add
push
jle
add
add
dec
add
add
xor
add
and
add
jle
add
add
popa
pop
inc
add
add
idiv
(bad)
inc
and
add
sub
push
and
add
and
inc
add
add
idiv
(bad)
jmp
add
add
push
add
push
add
xor
add
and
add
pop
adc
add
pop
add
push
jle
add
add
dec
add
add
xor
add
and
add
jle
add
add
popa
sbb
add
add
idiv
(bad)
inc
and
add
push
outs
inc
add
or
inc
add
add
idiv
(bad)
jmp
test
add
sub
add
add
xor
add
and
add
(bad)
adc
add
pop
add
push
and
add
dec
add
add
xor
add
and
add
jle
add
add
push
add
mov
add
sub
push
and
add
and
inc
add
add
idiv
(bad)
jmp
mov
add
sub
add
add
xor
add
cmp
add
(bad)
adc
add
pop
add
push
and
add
dec
add
add
xor
add
sub
add
add
pop
sbb
add
(bad)
(bad)
inc
and
adc
add
pop
add
push
outs
inc
add
or
sbb
add
add
(bad)
(bad)
jmp
mov
add
sub
add
add
xor
add
and
add
add
add
sub
push
and
add
dec
add
add
xor
add
and
add
jle
add
add
dec
add
adc
add
pop
add
push
and
add
sub
and
push
add
push
add
xor
add
and
add
inc
adc
add
pop
add
push
and
add
dec
add
add
xor
add
and
add
jle
add
add
pop
sbb
add
add
(bad)
(bad)
inc
and
add
sub
push
and
add
and
inc
add
add
idiv
(bad)
jmp
xchg
add
add
push
add
push
add
xor
add
and
add
mov
add
sub
push
jle
add
add
dec
add
add
xor
add
sub
add
add
push
sbb
add
add
(bad)
(bad)
inc
and
pop
add
push
outs
inc
add
or
and
push
add
push
add
xor
add
and
add
xlat
adc
add
pop
add
push
and
add
dec
add
add
xor
add
and
add
jle
add
add
dec
add
or
add
sub
push
and
add
sub
and
add
push
add
xor
add
and
add
pop
adc
add
pop
add
push
jle
add
add
dec
add
add
xor
add
and
add
sub
add
xor
add
add
add
add
add
sub
add
push
add
sub
add
add
daa
add
push
sub
sbb
add
repz
add
sub
add
sub
or
dec
adc
add
pop
add
push
and
add
or
xor
add
and
add
push
outs
inc
add
or
lea
add
adc
sub
add
and
mov
es
outs
push
add
or
inc
add
add
pop
sub
add
or
or
add
adc
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
adc
push
sub
add
and
pop
add
push
and
adc
add
and
add
and
dec
adc
push
and
add
and
adc
add
pop
add
push
adc
push
and
add
and
sbb
xor
add
push
adc
push
and
add
and
add
mov
add
adc
push
and
inc
add
add
idiv
(bad)
call
add
push
and
add
and
add
sub
push
and
adc
add
and
add
and
dec
adc
push
and
add
and
adc
add
pop
add
push
and
adc
add
and
add
and
push
and
pop
add
push
and
adc
add
and
add
and
add
mov
add
adc
sub
add
or
(bad)
call
add
(bad)
(bad)
(bad)
fimul
adc
(bad)
push
or
add
outs
add
adc
sub
add
cmp
(bad)
call
idiv
(bad)
(bad)
fimul
adc
(bad)
push
or
add
sub
inc
add
add
add
xchg
add
add
add
mov
add
add
add
add
add
and
add
add
add
add
das
add
add
add
add
add
pop
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
adc
mov
push
add
push
sub
add
and
add
add
sub
or
or
add
push
add
push
adc
push
or
add
or
and
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
add
add
or
test
add
sub
add
sub
adc
lods
add
add
push
add
push
pop
adc
add
mov
movs
sub
xor
or
add
sldt
adc
add
push
or
outs
jb
add
pop
outs
je
add
and
jae
add
pop
outs
push
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
outs
imul
add
or
retf
adc
add
push
and
add
push
and
add
and
es
outs
imul
sub
add
push
and
adc
add
push
and
add
push
and
add
and
and
add
sub
push
and
add
push
and
add
and
mov
add
or
and
add
and
sub
add
sub
sbb
add
add
(bad)
(bad)
dec
and
push
add
push
sub
add
and
add
sub
push
and
add
or
sub
add
pop
add
push
and
add
or
mov
add
sub
adc
add
add
add
popa
add
add
add
xor
add
add
adc
sub
add
jle
add
add
jle
add
dec
add
or
jg
add
fcom
add
sub
push
and
add
sub
or
sub
add
and
out
add
sub
push
and
add
or
add
sub
push
pop
add
sub
push
and
add
or
add
and
add
sub
push
and
add
sub
push
and
add
or
add
sub
add
and
push
add
push
sub
add
push
sub
sbb
add
add
(bad)
(bad)
call
sub
add
and
pop
add
push
and
mov
add
sub
and
pop
add
push
or
cmp
add
or
sub
dec
add
or
icebp
pop
add
sub
push
and
add
or
or
enter
and
sbb
add
pop
add
push
or
cmp
add
or
add
sub
add
add
add
add
jmp
sbb
add
add
xor
add
add
adc
mov
push
add
push
sub
add
and
add
push
and
add
add
and
add
sub
push
and
add
sub
add
sub
es
outs
aas
add
or
adc
inc
add
or
outs
dec
add
push
or
add
and
add
sub
push
and
add
sub
add
sub
es
inc
add
or
inc
add
add
idiv
(bad)
call
sub
add
fimul
adc
push
or
add
outs
add
sub
add
add
add
dec
add
add
add
add
adc
add
aad
add
adc
add
add
push
inc
adc
add
add
add
add
add
add
add
add
jp
add
xchg
add
add
add
fiadd
add
test
add
daa
add
add
add
add
add
outs
add
add
add
add
add
add
test
add
sub
push
sub
add
or
add
add
xchg
sbb
add
pop
add
push
and
add
sub
add
add
movs
sbb
add
pop
add
push
and
add
and
add
add
leave
sbb
add
pop
add
push
sub
add
or
add
add
(bad)
sbb
add
pop
add
push
and
add
sub
add
add
jecxz
add
sub
push
and
add
and
add
add
repnz
add
pop
add
push
and
add
and
add
add
call
add
sub
push
and
add
and
add
add
push
sbb
add
pop
add
push
and
add
and
add
add
sbb
pop
add
push
and
add
and
add
add
sub
add
sub
push
and
add
sub
add
add
cmp
pop
add
push
and
add
and
add
add
dec
sbb
add
pop
add
push
and
add
sub
add
add
arpl
add
sub
push
and
add
sub
add
add
jle
add
sub
push
and
add
and
add
add
cdq
sbb
add
pop
add
push
and
add
and
add
or
add
add
xor
add
add
and
pop
add
push
and
add
add
xor
add
and
add
add
sub
add
and
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
and
sbb
add
pop
add
push
add
xor
add
and
add
jle
add
or
jle
add
add
and
add
sub
push
and
add
and
sbb
add
pop
add
push
pop
mov
add
sub
add
or
add
pop
jle
add
or
dec
add
or
add
sbb
add
(bad)
(bad)
jmp
hlt
add
push
and
aas
add
or
lds
add
adc
inc
add
or
add
outs
dec
add
push
and
add
or
add
sub
push
sub
or
jle
add
or
dec
add
or
xchg
add
sbb
add
add
idiv
(bad)
(bad)
jle
add
add
and
add
sub
push
and
push
dec
add
add
add
or
enter
sub
add
sub
es
sbb
add
add
(bad)
(bad)
jmp
int3
sbb
add
pop
add
push
and
add
add
xor
add
and
add
sub
and
sbb
add
pop
add
push
and
add
add
xor
add
and
add
sub
adc
inc
add
or
(bad)
(bad)
fimul
adc
push
or
add
outs
add
pop
sub
adc
add
add
add
movs
add
add
add
adc
push
add
add
add
sub
add
and
add
or
add
add
and
add
sub
push
adc
(bad)
push
dec
add
add
add
or
add
sub
add
sub
es
sbb
add
add
(bad)
(bad)
call
sub
add
and
pop
add
push
and
add
add
xor
add
and
add
sub
and
add
pop
add
push
pop
mov
add
sub
add
or
add
pop
sub
xor
add
add
sub
or
jle
add
or
dec
add
or
sub
add
push
or
cmps
add
add
pop
add
push
and
add
or
add
xor
add
and
add
add
xor
add
jge
add
add
push
jge
add
add
add
add
add
sub
es
sub
xor
add
add
add
add
adc
sub
or
jle
add
or
dec
add
or
add
pop
inc
add
add
idiv
(bad)
call
sub
add
add
add
push
and
sbb
add
pop
add
push
and
add
sub
add
lea
or
aam
add
sub
add
add
xor
add
and
fadd
add
sub
add
add
xor
add
mov
add
sub
add
push
mov
add
mov
add
sub
add
add
add
sub
add
sub
add
push
and
call
push
add
push
sub
add
push
and
add
mov
add
sub
add
jle
add
add
or
push
add
or
pop
and
add
add
push
add
push
sub
es
sub
xor
add
add
adc
or
inc
adc
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
jbe
add
add
add
add
add
add
add
add
add
retf
add
push
sbb
add
push
sub
or
add
push
sub
adc
add
push
and
sbb
add
push
and
sbb
add
push
and
sbb
add
push
and
sbb
add
push
and
sbb
add
push
and
sbb
add
push
and
sbb
add
push
and
sbb
add
push
and
sbb
add
push
and
sbb
add
push
sub
fwait
sbb
add
push
and
sbb
add
push
and
sbb
add
push
and
add
or
add
add
xor
add
add
adc
or
inc
adc
add
add
add
or
add
push
add
add
add
sbb
add
and
add
add
add
add
xor
add
cmp
add
add
add
add
add
push
add
add
add
pop
add
add
pusha
jle
add
add
jle
add
add
jle
add
add
jle
add
add
jle
add
add
jle
add
add
jle
add
add
jle
add
add
jle
add
add
jle
add
add
jle
add
add
jle
add
add
jle
add
add
jle
add
add
jle
add
add
jle
add
add
jle
add
or
adc
add
cmps
add
add
add
adc
test
add
sub
add
and
add
(bad)
and
add
pop
add
push
and
add
mov
add
sub
add
and
add
push
and
push
add
push
jae
add
or
sub
add
and
add
sub
push
and
add
and
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
sub
add
or
xchg
add
add
push
add
push
and
push
add
push
pop
jae
add
or
sub
sbb
add
test
add
add
adc
add
or
add
add
sub
add
pop
inc
add
add
add
add
add
add
add
add
add
sbb
add
add
or
adc
pop
add
push
and
sub
add
or
and
add
add
push
add
push
xor
add
idiv
(bad)
call
sub
add
es
sub
add
or
push
outs
push
add
or
push
adc
pop
add
or
add
add
sub
add
and
inc
add
add
idiv
(bad)
inc
and
add
sub
add
xor
sbb
add
add
(bad)
(bad)
inc
sub
add
push
and
add
or
sub
add
or
add
adc
and
add
and
inc
add
add
idiv
(bad)
(bad)
fimul
adc
push
or
add
outs
add
pop
sub
add
adc
add
add
ins
out
push
add
add
adc
add
ins
add
add
add
adc
add
add
push
or
sub
sbb
add
add
(bad)
(bad)
call
sub
add
es
mov
or
add
sub
add
xor
sbb
add
add
(bad)
(bad)
jmp
push
add
or
outs
push
add
or
add
add
sub
pop
outs
sbb
add
sub
add
add
sub
push
sub
add
jo
add
add
xor
or
add
add
add
add
adc
sub
add
push
and
push
add
add
adc
xor
add
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
adc
add
sub
add
or
outs
push
add
or
xchg
add
adc
sub
add
or
add
add
push
add
push
or
add
cmp
add
and
inc
add
add
idiv
(bad)
inc
adc
add
or
adc
add
sub
add
pop
or
add
pop
add
push
jg
add
add
pop
add
or
add
sub
add
sub
add
add
pop
add
or
jle
add
add
fwait
sbb
add
add
(bad)
(bad)
call
push
sub
add
or
(bad)
call
add
(bad)
(bad)
(bad)
fimul
adc
(bad)
push
or
add
outs
add
fidiv
adc
sbb
add
pop
add
push
add
mov
pop
add
push
and
sbb
add
and
add
and
add
fiadd
and
push
add
sub
push
and
add
push
sub
add
add
add
add
add
add
add
add
add
out
add
inc
add
add
xor
add
add
add
add
adc
sub
add
or
add
sbb
add
add
(bad)
(bad)
call
sub
add
add
cld
push
add
sub
push
outs
inc
add
or
add
add
adc
add
sub
add
(bad)
fld
add
adc
add
sbb
add
sub
add
and
push
add
sub
push
and
and
add
sub
add
outs
pop
add
or
imul
sub
add
xor
inc
add
add
idiv
(bad)
inc
and
add
sub
add
call
add
push
add
push
call
push
adc
sub
es
add
add
(bad)
(bad)
(bad)
jle
add
or
and
push
add
sub
push
and
pop
add
or
add
sub
add
sbb
add
add
add
adc
sbb
add
sub
push
and
add
or
add
add
xor
and
add
sub
add
or
adc
add
pop
add
or
add
or
and
add
add
push
add
push
jae
add
or
add
or
outs
pusha
add
or
add
or
outs
popa
add
or
xor
add
sub
add
inc
pusha
add
add
inc
add
add
idiv
(bad)
call
sub
add
or
add
or
arpl
add
adc
adc
outs
add
or
add
or
add
add
push
add
push
or
push
sub
add
imul
(bad)
(bad)
jmp
inc
pop
add
sub
push
and
add
fimul
add
pop
adc
add
ficom
sub
sbb
add
add
(bad)
(bad)
dec
outs
add
or
add
or
add
sub
push
and
add
and
mov
pop
add
push
and
cmp
add
and
add
adc
or
add
add
pop
add
push
outs
push
adc
and
pop
add
sub
push
and
push
add
add
xor
add
and
add
adc
and
add
sub
add
xor
add
add
add
add
push
add
push
pop
outs
imul
push
and
pop
add
sub
push
and
cmp
add
sub
adc
and
and
add
pop
add
push
and
xor
add
and
add
fiadd
ficomp
adc
and
add
sub
push
and
xor
add
and
add
fiadd
push
sub
add
add
add
add
cwde
add
add
add
fiadd
add
or
add
add
add
add
add
nop
add
add
add
add
add
add
add
add
mov
add
mov
add
push
add
add
add
add
add
add
add
add
add
add
add
xor
sbb
add
sbb
add
add
cmp
add
and
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
and
add
push
add
push
sub
xchg
and
add
pop
add
push
and
add
or
sub
add
and
push
add
or
test
add
adc
or
add
add
push
add
push
or
sub
add
push
and
dec
add
add
push
add
push
adc
or
push
add
add
push
add
push
pop
or
add
pop
add
push
and
add
pop
add
or
add
sub
add
and
add
jle
add
add
pop
add
or
jle
add
add
pushf
sbb
add
add
idiv
(bad)
call
add
or
(bad)
call
inc
add
add
idiv
(bad)
(bad)
fimul
adc
add
outs
add
and
add
push
add
push
sub
add
add
add
add
add
pop
add
add
sbb
add
add
sahf
and
add
pop
add
push
and
add
or
mov
add
sub
add
add
add
or
pop
add
or
add
or
and
and
add
pop
add
push
and
add
pop
and
and
add
pop
add
push
and
add
pop
push
mov
outs
outs
add
or
and
add
sub
add
outs
outs
add
or
outs
jo
add
and
and
add
push
add
push
push
mov
jno
add
fimul
or
or
add
or
pop
outs
pusha
add
or
add
or
add
or
add
or
add
sub
add
inc
adc
push
or
add
or
adc
adc
add
sub
push
and
xor
add
and
add
and
add
push
add
push
adc
sub
add
add
add
add
jp
push
nop
add
add
add
add
test
push
mov
rcl
add
inc
add
add
xor
jns
add
push
add
adc
add
or
add
add
push
add
push
adc
inc
or
add
jae
add
or
or
and
add
push
add
push
das
sbb
add
idiv
(bad)
call
sub
add
es
pop
outs
je
add
and
and
add
sub
add
pop
adc
add
outs
jne
add
and
inc
add
add
idiv
(bad)
inc
outs
sbb
add
and
add
xor
add
add
adc
inc
and
add
pop
add
push
add
cmp
add
and
add
jle
add
add
sub
add
or
add
sub
add
sub
or
jge
add
sub
push
and
add
or
add
push
sub
add
or
add
add
(bad)
(bad)
call
sub
add
es
add
les
add
sub
push
and
add
and
add
sub
add
outs
jbe
add
or
and
add
push
add
push
xor
push
pop
add
add
or
add
add
push
add
push
pop
outs
imul
sub
add
or
add
or
pop
add
add
add
add
sub
add
xor
add
add
add
add
and
adc
add
pop
add
push
and
add
and
add
outs
add
add
add
adc
aas
add
push
sub
and
and
add
pop
add
push
and
add
and
adc
add
pop
add
push
and
add
sub
add
sub
add
or
mov
push
add
push
sub
add
push
sub
add
add
(bad)
(bad)
call
sub
add
and
add
push
sub
test
add
sub
add
sub
adc
add
pop
add
add
add
and
and
add
pop
add
push
and
add
or
add
and
add
sub
push
and
add
or
mov
add
and
pop
add
push
add
cmp
add
or
add
add
and
add
push
sub
sub
add
xor
add
add
and
add
and
push
add
push
sub
add
and
js
add
or
adc
add
jns
add
and
pop
add
push
adc
sub
add
and
inc
add
add
idiv
(bad)
call
sub
add
fimul
adc
(bad)
push
sldt
sbb
add
or
sub
add
adc
add
add
add
dec
add
add
add
adc
add
add
add
jle
add
add
fbld
add
sub
push
and
add
xchg
sbb
add
pop
add
push
sub
add
or
add
sub
push
sub
or
xor
add
sub
push
and
add
or
add
push
sub
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
outs
inc
add
or
and
add
sub
push
sub
add
and
inc
add
add
idiv
(bad)
jmp
mov
add
sub
add
sub
mov
push
add
push
sub
xor
add
add
add
add
add
adc
add
inc
add
push
add
dec
add
push
add
push
sub
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
repnz
add
pop
add
push
sub
add
or
dec
add
push
sub
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
adc
add
jbe
add
add
add
add
add
add
add
add
add
repnz
add
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
repnz
add
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
inc
and
and
add
pop
add
push
and
add
and
sub
add
or
add
adc
add
add
add
adc
add
add
push
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
jo
push
sub
or
add
or
mov
jge
add
and
add
or
add
or
push
sub
xor
sub
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
add
add
sub
add
and
add
or
push
add
add
add
add
add
add
sub
add
and
add
or
push
add
add
add
add
add
add
sub
sub
add
xor
add
add
add
add
jle
add
add
sub
adc
push
add
add
add
add
adc
or
add
add
xchg
and
sub
add
add
(bad)
(bad)
call
sub
add
es
add
add
xchg
or
pop
pop
dec
add
cmp
add
add
add
xchg
pop
inc
pop
sub
add
add
(bad)
(bad)
(bad)
jle
add
add
xchg
and
(bad)
call
bound
push
jle
add
add
pop
pop
xchg
pusha
or
sbb
or
add
inc
jle
add
add
xchg
and
(bad)
(bad)
call
sbb
push
jle
add
add
pop
pop
xchg
pop
adc
or
jle
add
add
sbb
push
bound
push
jle
add
add
sbb
pusha
or
sbb
or
add
pop
das
add
jle
add
add
add
push
sub
add
or
sbb
add
add
add
add
outs
inc
add
push
add
add
push
add
add
push
and
add
sub
add
or
adc
add
add
add
and
add
pop
add
push
and
add
add
sbb
add
in
add
add
add
adc
add
or
add
sub
or
outs
test
add
adc
sub
adc
sub
es
cmc
and
add
pop
add
push
or
add
push
and
add
and
add
or
add
push
or
add
or
pop
sub
es
add
adc
(bad)
push
adc
add
outs
add
sub
add
push
adc
add
aas
add
or
cmp
or
inc
add
or
cmc
and
add
pop
add
push
and
inc
add
push
sub
add
or
mov
add
adc
push
adc
push
adc
outs
xchg
add
adc
sub
add
and
inc
add
add
idiv
(bad)
call
sub
add
fimul
adc
(bad)
push
or
add
outs
add
push
sub
sbb
add
add
add
add
add
add
add
add
add
add
sbb
add
dec
add
add
add
adc
inc
add
push
add
inc
add
push
and
add
sub
push
and
add
and
cli
add
push
and
or
jg
add
sub
push
pop
outs
sbb
add
and
add
and
add
fiadd
sub
add
add
add
add
sub
add
add
xor
fiadd
add
and
add
and
add
add
pop
add
push
and
add
adc
jae
add
or
jle
add
add
sub
add
jle
add
add
cmp
add
and
add
call
or
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
add
add
jbe
add
pop
add
jo
call
or
and
add
sub
add
add
(bad)
(bad)
dec
sub
add
or
add
and
add
add
pop
add
push
and
add
or
mov
add
push
jae
add
or
fisubr
or
add
push
add
push
and
pop
add
push
and
add
or
add
push
sub
add
sub
add
adc
add
add
add
add
add
xor
add
add
adc
add
add
push
sbb
add
add
idiv
(bad)
call
sub
add
es
add
jo
push
sub
or
add
or
mov
jge
add
and
add
or
add
or
push
sub
xor
add
add
add
or
pop
add
add
add
add
sub
add
xor
add
add
push
or
add
add
xchg
and
sub
add
add
(bad)
(bad)
call
sub
add
es
add
add
xchg
or
pop
pop
dec
add
cmp
add
add
add
xchg
pop
inc
pop
sub
add
add
(bad)
(bad)
(bad)
jle
add
add
xchg
and
(bad)
call
bound
push
jle
add
add
pop
pop
xchg
pusha
or
sbb
or
add
inc
jle
add
add
xchg
and
(bad)
(bad)
call
sbb
push
jle
add
add
pop
pop
xchg
pop
adc
or
jle
add
add
sbb
push
bound
push
jle
add
add
sbb
pusha
or
sbb
or
add
pop
das
adc
inc
add
add
idiv
(bad)
(bad)
jle
add
or
sub
ja
add
push
outs
jge
add
or
sub
sub
add
add
push
add
add
add
add
add
or
jle
add
add
leave
add
sub
push
and
add
cmp
add
and
add
jae
add
or
jle
add
add
leave
add
sub
push
jle
add
add
cmp
add
and
add
sub
add
or
pop
add
add
add
add
sub
add
xor
add
add
add
add
add
add
add
add
add
or
push
add
add
add
add
add
add
add
adc
add
add
rol
add
push
add
push
and
add
add
push
add
push
and
add
add
push
add
push
and
add
add
push
add
push
jae
add
or
sub
outs
mov
add
and
add
sub
add
xor
pop
inc
add
add
idiv
(bad)
call
sub
add
sub
pop
add
and
add
or
add
add
push
add
push
sub
add
or
jns
add
add
add
sub
outs
mov
add
and
add
sub
add
xor
add
add
idiv
(bad)
call
sub
add
sub
outs
pop
add
and
add
and
add
sub
add
xor
sub
outs
pop
add
outs
xchg
add
or
add
sub
add
inc
sub
in
add
sub
add
sub
add
add
or
add
add
add
add
lea
add
and
add
and
add
sub
add
xor
inc
add
add
idiv
(bad)
call
sub
add
sub
outs
pop
add
outs
xchg
add
or
add
sub
add
xor
add
(bad)
(bad)
jmp
lea
add
and
add
and
add
and
add
sub
add
inc
sub
hlt
add
add
push
add
push
sub
sbb
add
add
add
adc
clc
add
add
push
add
push
or
cld
add
add
push
add
push
or
add
add
loope
add
sub
push
and
add
sub
add
sub
jle
add
add
sub
add
pop
add
push
and
add
sub
add
sub
es
push
and
bound
add
adc
push
adc
or
mov
add
or
test
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
add
loope
add
sub
push
and
add
sub
push
and
add
sub
add
sub
adc
adc
sub
sbb
add
add
(bad)
(bad)
call
pop
jb
add
jo
xchg
add
or
inc
add
add
idiv
(bad)
call
pop
movs
push
add
add
or
add
sub
add
xor
sbb
add
add
(bad)
(bad)
jmp
adc
add
sub
add
or
mov
add
add
push
add
push
adc
and
add
add
push
add
push
adc
jle
add
add
sahf
and
add
pop
add
push
and
add
sub
add
sub
cmp
add
add
add
idiv
(bad)
call
add
sbb
inc
add
add
idiv
(bad)
jmp
(bad)
add
sub
push
and
inc
and
add
push
and
imul
and
add
pop
add
push
and
and
add
sub
add
sub
pop
adc
sub
sbb
add
add
(bad)
(bad)
call
pop
jb
add
jo
xchg
add
or
inc
add
add
idiv
(bad)
call
pop
movs
push
add
add
and
add
sub
add
xor
sbb
add
(bad)
(bad)
jmp
sub
add
sub
add
adc
jle
add
add
mov
add
push
and
add
sub
add
sub
jne
imul
and
add
push
and
add
sub
push
and
add
sub
add
sub
pop
adc
sub
adc
jb
add
jo
xchg
add
or
inc
add
add
idiv
(bad)
call
pop
movs
push
add
add
xor
add
sub
add
xor
sbb
add
add
(bad)
(bad)
jmp
cmp
add
sub
add
adc
adc
sub
add
add
(bad)
(bad)
call
or
sbb
add
add
(bad)
(bad)
call
or
pop
inc
add
add
idiv
(bad)
jmp
cmp
add
sub
add
or
or
add
adc
cmp
inc
add
add
idiv
(bad)
call
or
hlt
add
add
inc
add
add
idiv
(bad)
jmp
inc
add
add
push
add
push
or
fiadd
add
or
mov
inc
add
add
idiv
(bad)
dec
cmp
inc
add
add
idiv
(bad)
jmp
inc
add
add
push
add
push
adc
and
add
sub
add
adc
imul
and
add
push
and
add
sub
add
sub
cmp
imul
and
add
push
and
add
sub
push
and
add
sub
add
sub
adc
sbb
add
add
(bad)
(bad)
call
or
jo
xchg
add
or
inc
add
add
idiv
(bad)
call
or
add
push
add
add
push
add
push
xor
sbb
add
add
(bad)
(bad)
jmp
pop
add
add
push
add
push
adc
jle
add
add
outs
add
sub
push
and
add
sub
add
sub
test
add
sbb
add
add
(bad)
(bad)
(bad)
jle
add
add
outs
add
sub
push
and
and
add
push
and
add
sub
add
sub
or
sbb
add
add
(bad)
(bad)
call
or
jo
xchg
add
or
inc
add
add
idiv
(bad)
call
or
add
add
add
push
add
push
xor
pop
inc
add
add
idiv
(bad)
jmp
push
push
add
push
adc
or
sbb
add
add
(bad)
(bad)
call
or
ds
add
add
idiv
(bad)
jmp
ins
add
add
push
add
push
or
jo
add
sub
add
or
sbb
and
add
push
add
push
inc
or
and
add
sub
add
inc
or
add
fiadd
push
sub
add
add
(bad)
(bad)
inc
and
add
push
add
push
inc
sub
add
add
push
add
push
sub
add
inc
sbb
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
loopne
add
sub
push
and
add
or
add
sub
push
and
add
ss
add
sub
push
and
add
inc
daa
add
sub
push
and
add
dec
daa
add
sub
push
and
add
dec
daa
add
sub
push
and
add
pop
add
jo
add
add
dec
daa
add
sub
push
and
add
gs
add
sub
push
add
daa
add
sub
push
and
add
lds
add
sub
push
and
add
xor
add
sub
push
and
add
jg
add
sub
push
add
sub
add
pop
add
push
add
sub
add
pop
add
push
or
sub
add
pop
add
push
and
add
jno
add
sub
push
or
sub
add
pop
add
push
and
add
add
add
or
add
add
add
add
sub
jb
add
jo
xchg
add
add
jb
add
jo
xchg
add
add
jb
add
jo
xchg
add
add
jae
add
or
add
add
jae
add
or
add
add
add
add
add
mov
add
add
add
and
cmp
add
pop
add
push
or
add
sub
push
and
add
and
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
add
push
sub
add
or
add
and
add
sub
push
or
cmp
add
pop
add
push
and
add
add
add
sub
add
adc
add
add
push
adc
add
xor
add
add
add
add
add
jnp
add
add
jne
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
jb
add
add
add
add
add
xor
add
add
add
add
add
add
add
jle
add
dec
add
or
add
push
and
sub
add
pop
add
push
sub
add
or
add
and
or
push
add
add
add
add
sub
add
sub
add
and
add
or
das
add
add
add
add
jnp
add
add
jne
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
jb
add
add
add
add
add
xor
add
add
add
add
add
call
add
add
push
sub
add
or
add
or
or
add
add
repnz
add
pop
add
push
and
add
xor
jne
add
add
add
add
add
add
mov
add
outs
xchg
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
add
add
sub
push
and
add
sub
push
sub
or
je
add
sub
push
and
add
or
mov
add
add
jae
add
or
add
add
add
fiadd
add
add
add
add
add
adc
add
add
push
imul
inc
add
add
xor
add
add
add
add
add
add
add
mov
add
outs
xchg
add
or
inc
add
add
idiv
(bad)
call
sub
add
add
ja
add
add
add
add
add
or
sub
add
add
sub
add
add
outs
add
push
and
add
and
test
add
sub
add
sub
mov
add
sub
add
sub
add
sbb
add
cld
add
add
add
adc
jnp
add
add
sub
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
imul
pop
inc
add
add
idiv
(bad)
inc
sub
add
cmp
inc
add
add
idiv
(bad)
inc
sub
add
and
add
sub
add
sub
or
jae
add
or
push
and
push
add
push
push
xchg
add
add
push
add
push
outs
xchg
add
or
xchg
add
or
and
push
add
push
push
pushf
add
add
push
add
push
outs
xchg
add
or
or
add
or
add
add
adc
sub
sbb
add
add
(bad)
(bad)
inc
outs
add
fisub
inc
add
add
idiv
(bad)
inc
outs
add
and
pop
add
push
and
add
add
add
add
add
add
add
push
mov
add
add
popa
add
add
add
add
xor
popa
add
add
add
add
jle
add
add
xchg
add
add
sub
add
and
sub
add
pop
add
push
and
add
push
and
add
and
add
and
sub
add
pop
add
push
add
push
add
mov
add
add
xor
add
and
add
add
sub
add
and
add
add
add
xor
add
add
add
add
adc
and
add
sub
push
and
add
add
imul
add
or
and
add
sub
push
and
add
or
add
push
sub
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
sub
add
pop
add
push
and
add
or
add
sub
and
add
sub
push
and
add
and
sub
add
pop
add
push
and
mov
add
sub
add
or
add
pop
adc
and
push
add
push
adc
sub
pop
adc
call
or
add
push
and
add
and
inc
add
add
idiv
(bad)
jmp
pop
sub
add
pop
add
push
or
ins
sub
add
pop
add
push
and
add
push
and
add
and
add
or
dec
add
or
sub
add
adc
and
add
push
pop
adc
adc
adc
mov
mov
inc
add
add
idiv
(bad)
inc
sub
adc
add
or
test
add
sub
add
adc
sub
or
or
add
add
add
jnp
add
and
add
add
pop
add
push
and
add
and
push
mov
lods
add
add
push
add
push
xor
sbb
add
(bad)
(bad)
call
add
add
push
add
push
sub
add
adc
and
add
push
pop
adc
adc
adc
mov
(bad)
sbb
add
add
(bad)
(bad)
jmp
add
or
sbb
add
add
sub
add
and
add
add
push
sub
or
add
xor
add
add
add
add
add
add
outs
add
push
and
add
sub
push
sub
add
or
add
sub
xor
add
add
adc
sub
add
and
sub
add
and
inc
add
add
idiv
(bad)
call
sub
add
and
push
add
push
sub
shr
sub
push
sub
sub
add
and
sub
add
pop
add
push
and
add
or
add
push
sub
add
and
cs
add
push
sub
popf
add
or
sub
add
or
add
and
add
sub
push
and
add
or
add
or
pop
outs
mov
and
pop
add
push
and
add
push
push
sub
or
add
or
mov
push
add
push
outs
mov
and
add
add
push
add
push
outs
mov
movs
add
or
add
or
outs
cmps
add
or
or
add
or
and
pop
add
push
and
add
and
add
dec
add
or
mov
inc
add
add
idiv
(bad)
call
add
test
add
and
add
jne
add
add
add
pop
inc
add
add
idiv
(bad)
jmp
mov
pop
add
push
and
add
or
add
and
add
add
push
add
push
adc
fst
add
add
add
add
pop
add
push
add
jno
add
sub
outs
pop
add
push
adc
add
add
push
add
push
sub
add
push
and
add
and
add
sub
push
and
add
sub
and
add
pop
add
push
and
add
or
add
and
add
add
push
add
push
adc
fisub
test
add
sub
push
and
add
and
add
add
push
add
push
adc
fiadd
push
and
add
add
push
add
push
and
pop
add
push
adc
outs
sbb
add
jae
add
push
sub
es
and
pop
add
push
sub
add
add
push
add
push
sub
pop
sub
add
add
add
add
inc
add
add
add
add
add
add
add
sbb
add
add
add
adc
add
add
fadd
add
sub
add
sub
and
add
sub
push
and
add
or
add
push
sub
add
or
aas
add
add
inc
add
add
idiv
(bad)
call
sub
add
es
sub
or
pop
and
pop
add
push
and
add
jge
add
add
xchg
add
sub
push
and
add
add
cmp
add
and
add
add
and
das
add
sub
push
and
add
and
add
aam
add
sub
push
and
add
add
sbb
add
sub
push
add
add
add
pop
add
or
mov
add
add
add
add
xor
add
pop
add
push
and
add
or
and
add
add
push
add
push
xor
inc
add
add
idiv
(bad)
inc
jnp
add
add
and
add
add
push
add
push
pop
outs
imul
or
add
sub
mov
add
jge
add
add
and
add
sub
add
sub
push
and
sbb
add
and
add
sub
add
jnp
add
add
sbb
add
sub
push
and
add
add
add
or
add
add
add
adc
add
add
add
xor
and
add
sbb
add
push
add
add
add
adc
call
push
add
push
or
sub
add
and
add
and
add
add
push
add
push
or
or
pop
xor
add
pop
add
push
and
add
or
add
and
add
and
add
add
push
add
push
or
add
sub
add
add
add
add
or
sbb
add
adc
add
push
add
add
add
and
add
add
push
add
push
or
jno
add
sub
push
sub
imul
sub
or
cwde
xor
add
pop
add
push
and
add
or
mov
add
jae
add
push
or
pop
outs
mov
add
add
add
add
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
ja
add
or
jnp
add
add
clc
add
add
push
add
push
outs
popf
add
push
or
add
push
or
retf
xor
add
pop
add
push
and
add
or
add
or
add
push
and
inc
add
add
idiv
(bad)
inc
sub
and
xor
add
pop
add
push
add
add
add
sbb
add
sub
add
or
add
add
jnp
add
add
xchg
add
add
cld
add
add
push
add
push
sub
add
add
push
add
push
sub
add
xor
add
sub
push
or
sbb
add
sub
push
sub
xor
add
pop
add
push
push
sub
add
or
mov
add
jle
add
or
push
or
and
add
sub
add
outs
jae
add
and
add
sub
add
xor
add
add
idiv
(bad)
call
sub
add
es
and
add
sub
add
outs
jae
add
and
add
and
inc
add
add
idiv
(bad)
inc
and
add
add
push
add
push
outs
jae
add
and
add
and
add
push
and
add
sub
add
outs
imul
add
or
test
pop
add
push
and
add
or
add
sub
or
add
or
add
or
sub
adc
add
sbb
add
push
add
push
and
add
sub
add
sub
es
xor
add
pop
add
push
and
add
outs
and
add
and
in
xor
add
pop
add
push
and
cmp
add
and
add
adc
add
add
push
add
push
adc
sub
or
or
add
or
jle
add
add
pop
add
push
outs
xor
add
and
add
and
add
sub
add
or
adc
and
add
sub
add
pop
adc
adc
adc
outs
jne
add
and
sub
add
sub
push
pop
sub
add
or
add
fisubr
adc
and
add
add
push
add
push
and
add
sub
push
and
sbb
add
jae
add
push
sub
es
pop
sub
add
add
add
xor
add
pop
add
rol
add
add
add
add
add
push
add
add
add
add
add
mov
pop
add
push
and
add
jle
add
add
sub
push
and
xor
add
pop
add
push
and
add
push
and
add
sub
add
sub
es
and
xor
add
pop
add
push
and
add
jle
add
add
sub
push
and
add
sub
push
add
outs
add
push
and
add
and
add
sub
add
sub
es
sbb
add
add
(bad)
(bad)
call
sub
add
and
xor
add
pop
add
push
add
outs
add
push
and
add
and
add
and
add
sub
add
xor
add
add
add
adc
sbb
add
push
adc
and
add
pop
add
push
and
add
sub
add
push
and
and
pop
add
push
and
add
les
add
sub
push
or
bound
add
pop
add
push
and
add
add
push
add
push
sub
add
or
add
sub
push
and
add
or
add
push
add
push
sub
add
or
push
xor
add
push
and
add
and
adc
add
push
add
push
adc
jle
add
add
push
sub
jmp
add
push
sub
adc
adc
adc
inc
add
add
push
add
push
adc
add
sbb
sbb
jle
add
add
and
and
add
pop
add
push
and
add
or
jl
add
sub
push
sub
inc
add
add
push
add
push
outs
mov
add
and
inc
add
add
idiv
(bad)
call
sub
add
adc
adc
add
pop
add
push
and
cmp
add
and
add
sub
or
push
sub
es
sbb
add
add
(bad)
(bad)
call
push
adc
xor
sbb
add
(bad)
(bad)
call
push
adc
adc
add
push
add
push
pop
adc
mov
inc
(bad)
(bad)
call
add
(bad)
(bad)
call
add
or
add
sbb
add
add
(bad)
(bad)
call
pop
and
add
push
add
push
pop
adc
adc
sub
adc
add
sub
push
adc
or
xor
add
push
and
cmp
add
sub
add
add
and
pop
add
push
and
add
sub
add
push
sub
cmp
inc
add
add
idiv
(bad)
(bad)
jle
add
add
and
add
add
pop
add
push
and
add
sub
add
push
sub
cmp
add
sbb
add
add
(bad)
(bad)
(bad)
jle
add
add
and
add
sub
push
and
add
sub
push
and
add
push
and
add
sbb
add
add
(bad)
(bad)
(bad)
jle
add
add
and
add
pop
add
push
and
xchg
add
push
and
add
jle
add
add
and
add
sub
push
and
add
sub
push
and
add
push
and
add
sbb
add
add
(bad)
(bad)
(bad)
jle
add
add
and
add
sub
push
and
xchg
add
push
and
add
jle
add
add
and
pop
add
push
and
add
push
push
sub
movs
add
add
inc
add
add
idiv
(bad)
(bad)
jle
add
add
and
pop
add
push
and
add
sub
push
push
sub
es
sbb
add
add
(bad)
(bad)
(bad)
jle
add
add
and
pop
add
push
and
add
sub
add
push
sub
sbb
add
add
(bad)
(bad)
(bad)
jle
add
add
and
add
sub
push
and
add
sub
add
push
sub
sub
and
add
sub
push
adc
or
mov
add
add
ins
add
push
and
imul
push
sub
or
add
add
push
add
push
adc
adc
adc
and
add
push
add
push
adc
cmp
pop
adc
call
add
and
add
or
or
sub
sub
add
and
or
add
add
pop
add
push
adc
or
add
sub
or
push
sub
es
sbb
add
add
(bad)
(bad)
call
push
adc
xor
sbb
add
(bad)
(bad)
call
push
adc
adc
and
add
sub
add
pop
adc
adc
adc
mov
je
(bad)
call
inc
add
add
idiv
(bad)
call
add
or
inc
add
add
idiv
(bad)
call
pop
and
add
push
add
push
pop
adc
adc
sub
add
add
pop
add
push
and
cmp
add
and
add
jle
add
add
or
add
add
and
add
push
and
inc
add
add
idiv
(bad)
jmp
jg
add
sub
push
sub
arpl
inc
add
add
idiv
(bad)
jmp
(bad)
add
push
and
outs
mov
add
and
pop
add
push
and
add
sub
push
and
add
and
outs
mov
add
and
add
sub
push
and
add
sub
push
and
add
and
sub
es
dec
add
or
and
add
and
add
sub
add
adc
add
or
add
and
add
adc
adc
jle
add
add
adc
push
jge
add
jae
add
or
jle
add
add
mov
adc
adc
and
add
push
add
push
xor
inc
add
add
idiv
(bad)
call
push
and
aaa
add
sub
push
and
add
adc
adc
jnp
add
add
sub
add
or
add
or
js
add
sub
add
adc
add
push
adc
adc
sub
add
add
(bad)
(bad)
call
sbb
push
push
add
push
jae
add
or
sbb
sbb
add
or
adc
jl
add
sub
add
xor
out
aaa
add
sub
push
and
add
adc
adc
and
push
add
push
pop
adc
jnp
add
add
sub
add
or
add
and
add
push
adc
adc
outs
mov
es
outs
inc
add
or
inc
add
add
idiv
(bad)
jmp
push
cmp
add
pop
add
push
and
add
adc
and
and
adc
outs
mov
es
sub
add
or
add
or
mov
add
push
add
push
adc
jle
add
add
sbb
inc
add
add
idiv
(bad)
call
push
jle
add
jae
add
or
jle
add
add
mov
adc
adc
and
add
push
xor
inc
add
add
idiv
(bad)
jmp
aad
add
sub
push
sub
adc
and
push
add
push
pop
and
cmp
add
pop
add
push
outs
mov
xchg
add
add
push
add
push
adc
add
add
inc
add
add
idiv
(bad)
call
add
push
outs
mov
mov
add
and
add
cmp
cwde
add
add
push
add
push
(bad)
fld
add
adc
and
pushf
add
add
push
add
push
and
aaa
add
sub
push
and
and
push
add
push
adc
jnp
add
add
sub
add
or
and
add
push
and
cmp
add
pop
add
push
mov
adc
adc
mov
add
and
add
and
pop
add
push
and
add
or
push
cmp
add
pop
add
push
and
add
and
add
sub
add
and
add
push
jae
add
or
adc
adc
mov
add
jae
add
or
adc
adc
mov
add
and
add
adc
add
or
mov
add
sub
add
push
cmp
inc
add
add
idiv
(bad)
call
adc
add
ret
add
or
adc
add
ret
add
or
ins
cmp
add
pop
add
push
and
add
cmp
adc
xchg
add
or
add
and
adc
xchg
add
or
add
adc
sahf
cmp
add
pop
add
push
and
add
sub
and
cmp
add
pop
add
push
and
add
sub
adc
adc
add
or
les
add
and
add
or
add
adc
and
cmp
add
pop
add
push
and
cmp
add
and
add
adc
and
add
push
lea
add
add
and
add
add
push
add
push
and
add
push
popf
adc
add
push
add
push
and
add
add
push
add
push
popf
adc
add
push
add
push
outs
lds
add
adc
adc
adc
and
add
add
push
add
push
adc
cmp
adc
call
ins
add
push
and
add
sub
add
outs
jbe
add
and
add
add
push
add
push
cs
pop
inc
add
add
idiv
(bad)
call
sbb
sub
add
and
add
sub
add
outs
jbe
add
and
add
sub
add
cs
and
add
sub
push
and
add
fld
daa
and
add
add
push
add
push
pop
adc
adc
adc
mov
jae
(bad)
call
inc
add
add
idiv
(bad)
jmp
mov
add
and
add
push
and
add
sub
add
mov
add
add
xor
add
and
add
and
adc
or
add
sub
push
and
add
push
and
pop
add
or
add
and
add
adc
add
push
add
push
outs
ret
add
or
adc
add
push
add
push
outs
mov
adc
mov
ret
add
or
adc
add
push
add
push
outs
mov
adc
outs
mov
or
adc
add
push
add
push
outs
mov
cmp
add
pop
add
push
and
add
ficom
adc
sub
sbb
add
add
(bad)
(bad)
call
adc
add
or
sub
add
inc
sbb
add
add
add
add
or
add
add
add
add
add
xor
add
add
add
add
add
and
aaa
add
sub
push
and
add
sub
add
outs
mov
add
and
xor
add
add
add
add
add
and
cmp
add
pop
add
push
and
add
sub
add
outs
cmp
sub
add
or
cmp
add
add
add
pop
outs
sub
push
sbb
push
add
sub
add
sbb
push
add
sub
add
sbb
add
sub
push
and
add
sbb
push
add
add
add
add
adc
jle
add
or
enter
or
add
add
adc
add
or
add
or
jae
add
or
add
or
pop
outs
mov
or
add
add
adc
add
adc
or
add
sub
add
adc
adc
add
push
add
push
pushf
adc
add
push
add
push
pop
adc
add
add
fldenv
sbb
add
push
adc
and
add
push
adc
sub
add
push
add
pop
outs
jae
add
and
push
xchg
popa
rcr
add
sub
add
pop
adc
adc
jle
add
add
or
and
add
sub
add
adc
adc
and
add
add
push
pop
adc
adc
add
add
or
inc
add
add
idiv
(bad)
call
sub
add
and
add
push
adc
and
add
add
push
adc
sub
outs
push
add
or
sub
add
or
or
xor
add
sub
add
adc
cmp
adc
outs
jae
add
and
adc
popf
add
add
or
add
or
adc
or
adc
xchg
popa
rcl
or
adc
int3
add
or
or
cmp
add
push
pop
adc
adc
jle
add
add
jne
add
and
inc
add
add
idiv
(bad)
jmp
cmp
add
sub
add
adc
adc
and
add
sub
add
pop
adc
adc
jle
add
add
push
sbb
add
add
(bad)
(bad)
jmp
inc
add
add
push
adc
adc
and
add
sub
add
pop
adc
adc
adc
outs
jne
add
and
(bad)
call
add
(bad)
(bad)
(bad)
jle
add
add
adc
add
adc
add
push
add
push
adc
sub
adc
add
add
push
pushf
adc
and
add
push
add
push
pop
adc
adc
jle
add
add
fstp
inc
add
add
idiv
(bad)
jmp
pop
add
add
push
adc
or
add
or
pop
add
add
push
adc
sub
or
adc
xchg
adc
rcr
add
sub
add
pop
adc
adc
jle
add
add
push
pop
inc
add
add
idiv
(bad)
jmp
fs
add
push
adc
adc
and
add
sub
add
pop
adc
adc
push
outs
ret
or
inc
add
add
idiv
(bad)
dec
adc
or
outs
into
add
or
or
add
or
add
and
and
add
push
add
push
adc
fimul
and
add
sub
add
sub
adc
add
add
add
add
pop
add
add
add
add
add
add
add
add
xor
add
add
add
add
adc
jae
add
or
sub
add
or
add
add
(bad)
(bad)
call
sub
add
add
add
or
add
pushf
add
add
je
add
sub
add
pop
pop
das
adc
add
idiv
(bad)
jmp
js
add
sub
add
sub
and
add
sub
push
and
add
sub
push
and
add
and
add
sub
or
add
or
add
imul
or
add
add
adc
add
or
pushf
add
add
adc
add
or
add
adc
add
adc
jl
add
sub
add
adc
add
add
push
add
push
pushf
adc
add
add
push
add
push
pushf
adc
add
push
add
push
pop
adc
add
add
retf
pop
inc
add
add
idiv
(bad)
jmp
mov
add
push
adc
and
push
add
push
adc
sub
add
push
push
adc
xchg
adc
push
xchg
popa
rcr
add
sub
add
pop
adc
adc
jle
add
add
or
cwde
add
add
push
adc
adc
and
add
push
pop
adc
adc
push
mov
pushf
add
add
xor
add
push
add
push
adc
and
add
push
adc
sub
push
push
mov
pushf
add
add
adc
pop
xchg
adc
or
add
add
push
adc
adc
and
add
push
pop
adc
adc
jle
add
add
(bad)
adc
sub
and
push
add
push
sub
mov
add
sub
add
adc
and
push
add
push
adc
jle
add
add
or
pop
add
push
adc
adc
or
adc
popa
rcl
or
fwait
add
add
adc
mov
push
add
push
pop
adc
adc
pop
mov
push
sbb
add
(bad)
(bad)
jmp
rol
add
adc
adc
and
add
add
push
pop
adc
adc
jle
add
add
push
sbb
add
(bad)
(bad)
jmp
enter
sub
add
adc
adc
int3
add
add
push
pop
adc
or
pushf
add
add
fwait
add
add
aas
pop
(bad)
(bad)
jmp
rol
add
push
adc
and
add
add
push
lea
add
add
lsl
add
or
fwait
add
add
pushf
add
add
adc
cmp
add
add
adc
xchg
adc
adc
push
adc
xchg
popa
rcl
adc
adc
adc
xchg
popa
rcl
adc
adc
adc
or
push
xchg
popa
rcr
add
sub
add
adc
pushf
add
mov
add
and
push
add
or
add
or
and
add
add
push
pop
adc
adc
pop
mov
push
sbb
add
add
idiv
(bad)
jmp
loopne
add
sub
add
adc
adc
and
add
add
push
pop
adc
adc
jle
add
add
or
call
push
add
push
adc
adc
and
add
add
push
pop
adc
adc
jle
add
add
push
sbb
add
add
(bad)
(bad)
jmp
lock
add
push
adc
adc
and
add
add
push
pop
adc
adc
push
mov
pushf
add
add
aas
push
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
clc
add
add
push
adc
sub
or
adc
cs
sbb
add
add
(bad)
(bad)
jmp
cld
add
add
push
adc
adc
and
push
add
sub
add
pop
adc
adc
jle
add
add
enter
add
add
(bad)
(bad)
call
or
add
idiv
(bad)
jmp
add
add
sub
add
sub
or
add
sub
add
sub
add
xor
add
add
add
add
adc
mov
and
(bad)
(bad)
jg
lahf
add
add
add
add
add
jae
add
or
push
jae
add
or
jae
add
or
sub
add
add
or
pop
add
add
add
add
sub
add
xor
cmp
add
pop
add
adc
outs
xor
add
and
sub
xor
add
and
xor
sbb
add
add
(bad)
(bad)
call
sub
add
es
push
pop
outs
xor
add
and
sbb
add
mov
add
xor
add
add
add
or
mov
push
pop
push
das
and
idiv
(bad)
call
sub
add
es
jb
add
jo
push
or
push
das
bndldx
add
add
(bad)
(bad)
call
add
addps
push
pop
outs
jae
add
and
pop
sbb
add
add
(bad)
(bad)
inc
pop
outs
jae
add
and
add
xor
pop
pop
adc
add
or
add
add
sub
add
or
add
adc
add
rol
add
adc
add
add
adc
add
add
add
add
add
xor
add
add
add
add
adc
add
add
or
aam
add
pop
popa
push
sub
es
pop
pop
sub
add
or
push
sub
add
add
add
or
push
sbb
pop
add
add
sbb
add
sbb
add
xor
add
add
xchg
add
and
es
popa
push
sub
fiadd
push
sub
add
adc
add
add
add
or
or
adc
pop
add
add
adc
or
pop
or
or
add
and
pop
or
sbb
out
add
add
or
or
or
pop
cmp
add
add
inc
add
add
idiv
(bad)
call
sub
add
es
add
or
add
lea
add
add
add
push
outs
fadd
add
and
adc
or
lea
add
add
push
add
push
push
push
outs
fadd
add
and
pop
adc
adc
push
adc
or
or
sbb
push
pop
pop
adc
adc
adc
sbb
add
(bad)
(bad)
call
pop
sub
sub
add
or
add
adc
adc
push
outs
fiadd
add
jle
add
add
inc
sbb
add
add
(bad)
(bad)
(bad)
jle
add
add
(bad)
(bad)
(bad)
jg
pop
sbb
add
add
(bad)
(bad)
(bad)
jle
add
add
outs
ret
or
add
or
movd
lahf
add
add
fild
add
jle
add
add
push
fadd
add
adc
fld
add
and
or
add
or
or
add
or
outs
fild
add
and
add
adc
adc
outs
fiadd
add
and
add
adc
outs
les
add
imul
adc
adc
outs
fadd
add
and
adc
adc
adc
push
outs
loopne
add
and
mov
or
adc
outs
jno
add
adc
or
pop
push
outs
ret
or
mov
add
idiv
(bad)
inc
adc
add
add
or
or
fadd
add
and
adc
add
add
or
pop
imul
adc
jle
add
add
movhps
jle
add
jle
add
add
push
push
push
fadd
add
jle
add
add
or
pop
cmp
add
add
inc
add
add
idiv
(bad)
(bad)
jle
add
add
inc
sbb
add
add
idiv
(bad)
(bad)
jle
add
add
add
add
add
add
idiv
(bad)
(bad)
jle
add
add
outs
ret
or
outs
fild
add
sub
jle
add
add
mov
fild
add
jle
add
add
push
fadd
add
push
push
jae
add
or
adc
call
adc
adc
adc
adc
adc
push
adc
outs
fadd
add
and
adc
xor
sbb
add
(bad)
(bad)
(bad)
jle
add
add
adc
adc
outs
jno
add
adc
adc
das
int3
sbb
add
add
(bad)
(bad)
(bad)
jle
add
add
pop
sub
pop
outs
iret
add
or
add
add
or
add
or
adc
add
adc
adc
adc
imul
adc
add
add
xor
add
add
xor
sub
jb
add
jo
movs
add
add
adc
movs
add
add
jae
add
or
add
add
and
add
jae
add
or
add
push
call
add
or
jnp
add
add
outs
out
add
add
add
add
outs
out
add
add
add
add
outs
call
jnp
add
add
jo
add
sub
add
outs
jmp
add
or
push
add
add
add
add
sub
dec
add
or
add
or
add
add
add
add
sub
add
add
or
push
add
add
add
add
jnp
add
add
adc
add
sub
add
outs
jmp
add
or
push
add
add
add
add
jnp
add
add
jmp
add
and
add
or
sbb
add
add
add
add
lea
add
and
add
add
add
sub
add
or
inc
add
add
add
add
jnp
add
add
dec
add
or
sbb
add
add
idiv
(bad)
call
sub
add
add
add
add
sbb
add
idiv
(bad)
inc
add
add
add
in
add
or
add
add
add
or
jb
add
add
add
add
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
sub
add
xor
add
add
idiv
(bad)
jmp
cmp
add
pop
add
push
and
add
push
and
add
and
add
add
jge
add
add
sub
adc
inc
add
add
idiv
(bad)
inc
outs
xchg
add
push
and
add
xor
add
add
add
add
add
jnp
add
add
in
add
or
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
sbb
inc
add
add
idiv
(bad)
call
sub
add
add
pop
add
add
add
add
adc
add
nop
add
add
add
adc
test
add
sub
push
and
add
push
and
add
and
add
and
add
sub
add
or
sub
sub
add
sub
sbb
add
(bad)
(bad)
call
sub
add
add
xchg
add
push
and
add
and
add
xchg
add
push
sub
es
pop
inc
add
add
idiv
(bad)
jmp
and
add
sub
add
or
sub
add
add
push
and
xor
add
add
add
add
adc
and
add
sub
add
or
sub
or
sub
es
sub
sbb
add
add
idiv
(bad)
call
sub
add
or
inc
add
add
idiv
(bad)
jmp
xlat
cmp
add
pop
add
push
and
add
push
sub
add
or
add
push
sub
sub
push
add
sub
add
sub
add
add
or
xchg
add
push
or
inc
or
add
pop
add
push
and
add
push
and
add
sub
push
and
add
or
add
and
add
and
add
sub
add
or
add
sub
sub
adc
add
add
sbb
add
adc
add
adc
add
cmp
add
add
cwde
add
or
push
sub
add
and
inc
add
add
idiv
(bad)
call
sub
add
and
cmp
add
pop
add
push
push
sub
add
or
add
push
sub
and
push
add
sub
add
or
cmp
add
and
push
cmp
add
pop
add
push
add
cmp
add
and
add
pop
and
add
sub
add
pop
or
cmp
add
sub
add
sub
add
pop
and
add
sub
add
xor
add
idiv
(bad)
inc
sub
sub
inc
add
add
idiv
(bad)
jmp
lea
add
pop
add
push
add
cmp
add
and
add
add
add
xchg
add
push
sub
and
cmp
add
pop
add
push
and
add
or
add
add
sub
es
add
or
sub
add
or
or
sub
fwait
add
push
and
add
call
adc
sub
or
out
add
or
sub
add
or
add
and
add
or
sub
add
or
dec
add
or
out
cmp
add
pop
add
push
pop
sub
add
or
add
pop
add
out
add
or
adc
add
sub
push
add
cmp
add
and
add
add
sub
add
or
add
lock
or
sub
add
push
and
cmp
add
push
and
add
or
add
sub
add
xor
add
add
add
add
add
mov
add
add
cdq
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
and
add
sub
push
and
add
push
and
add
and
add
add
xchg
add
push
sub
add
push
sub
sub
sub
add
sub
add
sbb
add
add
add
adc
add
xchg
add
push
sub
add
sub
sbb
add
add
(bad)
(bad)
call
sub
add
add
xchg
add
push
and
add
or
and
add
sub
add
and
add
push
add
push
and
add
sub
add
outs
repnz
or
and
add
push
add
push
or
pop
fimul
push
sub
push
outs
repz
or
and
add
sub
add
sub
sub
sbb
add
add
add
pop
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
hlt
add
or
add
push
and
add
sub
sbb
add
add
idiv
(bad)
call
sub
add
es
hlt
add
or
add
push
and
add
sub
xor
mov
add
adc
add
or
push
push
add
sub
add
sub
sub
add
push
sbb
add
add
(bad)
(bad)
call
sub
add
and
add
sub
add
sub
mov
mov
adc
add
idiv
(bad)
jmp
pop
push
add
sub
add
sub
pusha
push
add
sub
add
or
sub
push
xchg
add
xchg
cs
add
idiv
(bad)
jmp
fs
add
sub
add
sub
and
add
sub
add
pop
or
add
inc
add
add
idiv
(bad)
jmp
ins
push
add
sub
add
sub
add
xor
add
add
add
add
add
sub
jb
add
jo
cmps
add
add
add
add
or
sldt
add
add
add
add
add
add
add
test
add
add
xor
mov
add
cmp
add
and
add
push
add
push
or
jnp
add
add
cmc
add
or
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
jnp
add
add
add
push
and
add
add
add
jnp
add
add
add
aaa
add
push
or
add
add
add
sub
or
add
pop
sub
sub
es
add
add
(bad)
(bad)
inc
outs
xchg
add
push
or
and
add
sub
push
or
xor
add
and
add
and
add
sub
add
or
add
sub
add
adc
add
add
add
add
add
or
pop
add
add
add
add
sub
add
xor
add
add
add
add
and
pop
add
push
and
add
and
add
outs
add
add
add
adc
mov
es
and
cmp
add
push
sub
adc
add
pop
add
push
and
add
push
add
push
sub
add
and
push
add
sub
add
sub
add
push
sub
add
add
(bad)
(bad)
call
sub
add
and
add
push
sub
mov
add
sub
add
sub
adc
add
pop
add
add
add
adc
add
add
inc
add
add
pop
add
push
and
add
call
and
cmp
add
push
push
sub
add
or
mov
add
jae
add
or
push
sub
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
jae
add
or
pop
sub
adc
add
jbe
add
and
mov
push
and
add
sub
push
and
add
outs
test
or
add
sub
add
xor
pop
inc
add
add
idiv
(bad)
call
sub
add
and
add
sub
push
and
add
and
push
add
push
sub
mov
add
sub
push
and
add
and
add
push
sub
add
xor
add
add
add
and
add
sub
push
and
add
sub
outs
inc
add
or
adc
sub
add
and
mov
add
dec
add
or
add
push
or
add
sub
adc
add
add
add
add
add
xor
add
add
add
add
add
sub
add
xor
add
call
push
add
push
(bad)
fld
add
adc
add
in
sbb
add
push
add
push
and
pop
add
push
and
or
sub
or
adc
add
push
add
push
adc
sub
add
pop
or
hlt
sbb
add
push
add
push
sub
add
or
add
add
(bad)
(bad)
call
sub
add
es
sbb
add
push
add
push
sub
add
sub
add
or
and
sbb
add
push
add
push
pop
adc
adc
adc
sbb
add
add
(bad)
(bad)
jmp
add
add
sub
add
sub
sub
add
adc
add
sub
add
add
adc
or
add
sub
add
jae
add
or
add
push
outs
stc
add
or
mov
add
and
sbb
add
and
add
xor
add
add
add
add
sub
cmp
add
(bad)
(bad)
call
sub
add
and
pop
add
push
and
stos
add
sub
push
push
sub
add
and
add
jp
sbb
add
add
add
adc
sti
add
or
sbb
add
add
(bad)
(bad)
call
sub
add
and
add
sub
add
adc
fstp
add
add
and
pop
add
push
and
add
or
and
lods
add
sub
push
sub
or
sub
sbb
add
add
(bad)
(bad)
inc
outs
fld
add
and
inc
add
add
idiv
(bad)
jmp
adc
add
sub
add
adc
fld
test
es
adc
add
sub
add
and
sbb
add
push
add
push
or
test
add
or
add
sub
add
or
add
sbb
add
(bad)
(bad)
inc
and
add
sub
push
and
add
adc
add
dec
sbb
add
add
(bad)
(bad)
jmp
sbb
add
sub
add
adc
add
push
and
inc
add
add
idiv
(bad)
call
add
add
add
idiv
(bad)
jmp
and
add
sub
add
adc
fstp
add
add
or
sub
es
and
add
sub
add
adc
and
sbb
add
push
add
push
jae
add
or
cmps
add
push
fimul
and
add
sub
add
adc
fiadd
adc
sub
sbb
add
add
(bad)
(bad)
jmp
xor
add
sub
add
adc
fld
mov
add
and
add
and
pop
and
pop
add
push
and
add
and
or
add
push
add
push
sub
inc
mov
add
jae
add
push
jle
add
or
add
push
es
add
add
push
and
sbb
add
push
add
push
adc
ficom
add
add
fiadd
and
add
sub
add
sub
or
inc
add
add
add
rol
add
add
sub
add
or
add
add
add
add
add
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
outs
inc
add
push
and
add
push
and
add
push
sub
push
add
add
or
mov
and
push
add
push
sub
jae
add
or
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
sbb
add
mov
add
adc
jnp
add
add
inc
add
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
add
dec
add
push
and
add
sub
push
and
add
and
add
add
or
outs
add
add
and
inc
add
add
idiv
(bad)
inc
outs
add
add
and
add
cwde
push
add
sub
add
adc
adc
lods
add
add
outs
add
add
and
add
adc
add
push
add
push
pop
adc
mov
rcr
inc
add
add
idiv
(bad)
(bad)
fiadd
fiadd
add
add
add
add
add
add
and
add
xor
jle
add
inc
add
adc
add
or
sub
add
push
and
aas
add
or
add
adc
inc
add
or
push
aas
add
sub
push
and
add
push
and
add
and
add
or
add
push
or
add
or
add
inc
add
or
inc
add
add
idiv
(bad)
call
sub
add
fimul
adc
push
or
add
outs
add
push
sub
add
adc
add
add
add
add
add
add
sbb
add
iret
add
add
add
add
inc
add
push
and
add
sub
push
and
add
or
jae
add
or
pop
outs
add
add
cmp
add
sbb
add
add
(bad)
(bad)
call
sub
add
sub
es
outs
add
add
and
push
and
push
add
push
adc
sub
adc
adc
call
or
mov
add
sub
push
and
add
adc
add
cli
add
push
adc
and
add
push
pop
adc
adc
adc
mov
ret
add
add
idiv
(bad)
(bad)
fisub
adc
add
pop
add
push
adc
or
add
and
add
fiadd
sub
add
add
add
add
stos
stos
add
inc
add
add
xor
add
add
add
add
add
add
aam
add
sub
add
sub
add
adc
add
add
add
add
adc
or
inc
push
add
add
add
add
add
add
add
add
add
rol
add
add
add
push
and
add
sub
push
and
add
jge
add
add
add
outs
inc
add
push
and
add
sub
push
and
add
and
add
add
outs
inc
add
push
and
inc
add
sub
push
and
add
and
add
add
outs
inc
add
push
and
add
push
and
add
and
add
add
outs
inc
add
push
and
add
sub
push
and
add
jge
add
add
add
outs
dec
add
push
and
add
sub
push
sub
add
or
add
add
outs
inc
add
push
and
add
sub
push
and
add
and
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
sub
add
push
and
add
and
or
or
add
add
add
add
rol
push
sub
add
or
or
add
add
sub
add
push
add
stos
add
or
add
add
xor
add
add
add
sub
add
push
and
add
and
add
sub
add
add
or
sbb
add
add
add
add
and
add
push
sub
add
push
and
add
sub
add
adc
add
mov
add
inc
add
adc
sub
add
push
and
(bad)
aas
add
sub
push
and
add
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
and
aas
add
sub
push
and
add
and
add
or
sub
pop
inc
add
add
idiv
(bad)
inc
and
aas
add
sub
push
and
add
and
and
aas
add
sub
push
and
add
jne
add
add
sub
sbb
add
add
idiv
(bad)
dec
add
add
push
and
add
or
inc
add
add
idiv
(bad)
dec
sub
add
xor
scas
add
add
adc
sub
add
push
and
(bad)
aas
add
sub
push
outs
push
add
or
add
push
and
aas
add
sub
push
and
add
and
add
or
sub
pop
and
aas
add
sub
push
and
add
sub
pop
inc
add
add
idiv
(bad)
call
sub
add
es
and
aas
add
sub
push
and
add
and
add
or
sub
or
outs
sbb
add
and
add
or
inc
add
add
idiv
(bad)
dec
add
add
or
sub
add
push
sub
adc
add
cmp
add
inc
add
adc
add
mov
push
and
and
and
aas
add
sub
push
outs
sbb
add
and
push
pop
sub
add
or
add
sub
add
adc
or
add
xor
add
add
inc
add
adc
add
mov
push
or
cmp
add
add
and
inc
add
sub
push
and
add
and
mov
inc
add
add
idiv
(bad)
call
sub
add
es
sub
add
or
push
add
sub
add
lea
or
mov
add
sub
add
and
inc
add
sub
push
and
mov
push
add
push
or
or
mov
push
add
push
and
pop
add
push
and
rol
add
push
add
push
add
add
sub
add
and
add
pop
add
push
and
enter
sub
add
add
rol
push
and
or
add
and
add
or
add
or
and
add
sub
push
and
inc
add
sub
push
and
add
push
and
add
and
add
adc
adc
adc
sbb
add
cli
add
add
add
add
les
add
and
sahf
inc
add
sub
push
and
add
and
add
pop
inc
add
add
idiv
(bad)
call
sub
add
es
and
pop
add
push
and
add
and
add
or
sub
sbb
add
add
(bad)
(bad)
inc
and
pop
add
push
outs
push
add
or
(bad)
inc
add
sub
push
and
add
push
and
add
and
add
and
push
add
sub
add
or
inc
add
sub
push
and
add
push
and
add
and
add
ficom
or
outs
sbb
add
and
add
fiadd
and
inc
add
sub
push
and
add
push
and
add
sub
push
add
sub
add
sub
sub
add
adc
add
add
add
add
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
sbb
add
sub
push
and
add
sub
add
xor
add
add
add
add
add
aad
add
sub
sbb
add
add
(bad)
(bad)
call
sub
add
es
push
add
sub
add
sub
fadd
add
sub
add
sub
xor
add
add
dec
add
adc
lea
add
pop
add
push
sub
push
add
sub
add
sub
add
push
and
or
add
and
adc
sub
or
outs
fiadd
add
adc
sub
add
or
inc
add
add
idiv
(bad)
call
sub
add
fimul
adc
(bad)
push
adc
add
sub
add
add
add
sub
xor
add
add
add
or
sbb
add
add
add
add
push
add
add
push
and
add
push
and
add
sub
add
sbb
add
out
add
add
add
jae
add
or
add
jle
add
sbb
add
add
(bad)
(bad)
call
sub
add
sub
or
outs
test
add
adc
sub
pop
sub
and
pop
add
push
and
add
push
sub
add
or
add
or
add
push
or
add
or
pop
sub
es
add
add
(bad)
(bad)
(bad)
fidiv
pop
(bad)
push
adc
add
outs
add
sub
add
push
adc
add
aas
add
or
xor
add
or
add
add
pop
add
push
adc
push
sub
add
or
mov
add
adc
push
adc
push
adc
outs
adc
add
adc
sub
add
sub
or
push
or
add
outs
add
push
sub
add
sbb
add
add
add
add
add
add
add
pushf
add
add
add
add
sbb
add
pop
add
add
add
adc
sub
add
push
or
sub
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
add
push
and
sti
add
push
and
or
out
add
sub
push
pop
outs
sbb
add
and
add
and
add
fiadd
sub
add
add
add
add
add
aaa
aaa
add
inc
add
add
xor
cmp
add
dec
add
adc
and
inc
add
sub
push
sub
add
and
add
add
and
pop
add
push
sub
pop
and
add
push
sub
or
or
pop
add
add
add
add
sub
add
or
add
xor
add
add
add
add
add
add
add
or
and
add
add
add
sub
add
or
add
and
add
and
add
sub
sub
add
xor
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
adc
add
jecxz
add
add
add
push
and
add
add
in
add
and
add
add
adc
add
add
add
push
and
add
push
and
pop
add
push
add
in
add
and
add
and
add
add
add
jae
add
or
add
jae
add
or
add
add
jnp
add
add
sbb
add
and
push
add
sub
add
sub
add
add
rol
add
add
add
add
add
pop
add
push
and
add
push
and
add
and
add
add
add
push
add
add
add
mov
add
sbb
add
(bad)
(bad)
call
sub
add
add
add
add
sbb
add
and
inc
add
add
idiv
(bad)
jmp
cmp
add
pop
add
push
and
add
push
and
add
sub
mov
sbb
add
and
push
add
sub
add
sub
add
and
add
sub
push
and
add
add
sbb
add
and
add
sub
add
or
add
sub
xor
add
add
add
add
add
add
add
xor
add
add
add
add
add
outs
out
add
and
add
and
pop
add
push
and
add
push
and
add
and
add
add
call
outs
in
add
push
sub
add
xor
add
add
add
add
add
add
add
xor
inc
add
add
add
sub
add
or
add
or
add
sub
push
and
add
and
dec
add
or
inc
add
add
idiv
(bad)
call
sub
add
add
add
push
sub
xor
add
add
add
add
add
add
add
xor
add
add
add
add
add
sub
add
xor
add
adc
add
or
jae
add
or
pop
and
pop
add
push
and
add
pop
and
add
sub
push
and
add
pop
and
pop
add
push
and
add
pop
and
add
pop
add
push
and
add
pop
and
add
sub
push
and
add
pop
and
add
sub
push
and
add
pop
and
add
sub
push
and
add
jle
add
add
pop
add
jo
in
push
add
sub
add
sub
or
or
lock
add
sub
add
adc
cmp
or
or
sbb
add
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
or
adc
sub
push
sub
add
or
imul
add
add
mov
add
pop
add
push
and
add
and
imul
add
add
mov
pop
add
push
and
add
and
add
or
adc
add
push
adc
push
adc
outs
sbb
or
hlt
push
add
sub
add
pop
adc
adc
adc
mov
push
(bad)
(bad)
call
inc
add
add
idiv
(bad)
inc
sub
xor
pop
add
dec
add
adc
add
add
mov
add
sub
push
and
add
and
push
add
sub
add
or
or
add
push
add
push
adc
dec
or
add
or
and
inc
add
sub
push
outs
sub
es
sbb
add
add
(bad)
(bad)
call
sub
add
es
and
pop
add
sub
add
pop
or
add
add
add
sub
add
pop
adc
add
mov
mov
inc
add
add
idiv
(bad)
inc
sub
add
or
push
add
add
add
add
sub
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
and
pop
add
sub
add
xor
pop
inc
add
add
idiv
(bad)
call
sub
add
add
or
add
sub
add
xor
add
(bad)
(bad)
inc
and
pop
add
sub
add
xor
add
adc
add
sub
add
inc
and
pop
add
sub
add
inc
sub
sbb
add
sub
add
sub
and
add
sub
add
sub
xor
add
add
add
add
add
add
add
add
sub
add
push
and
add
xor
add
add
add
add
add
jnp
add
add
outs
inc
add
and
add
and
add
or
data16
add
add
add
add
push
add
push
sub
pop
inc
add
add
idiv
(bad)
call
sub
add
and
add
sub
add
sub
adc
pop
add
push
and
inc
add
add
idiv
(bad)
inc
adc
pop
add
push
and
inc
add
add
idiv
(bad)
inc
add
add
push
and
pop
add
sub
add
sub
add
xor
add
add
add
add
add
add
add
push
add
or
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
and
add
or
push
add
add
add
add
add
add
add
and
add
sub
add
inc
sub
add
xor
add
add
add
add
add
sub
add
or
add
xor
add
add
add
add
add
add
and
add
sub
xor
add
add
add
add
add
add
and
add
sub
xor
jbe
add
add
add
add
adc
sub
add
sub
push
and
add
jp
outs
jne
add
and
inc
add
add
idiv
(bad)
call
sub
add
and
add
pop
add
push
and
add
sub
push
jae
add
or
add
add
add
add
sub
add
add
(bad)
(bad)
jmp
jle
add
add
ret
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
mov
add
dec
add
adc
add
or
push
and
add
sub
push
and
add
and
jnp
add
add
sbb
es
and
pop
add
push
and
add
and
ret
add
push
and
pop
add
sub
add
or
and
add
add
add
outs
and
add
and
add
es
and
add
sub
add
pop
or
add
add
add
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
and
add
sub
push
and
add
es
outs
sbb
add
and
add
xor
add
add
add
add
add
add
daa
add
or
add
or
adc
add
add
add
jae
add
or
add
push
add
add
add
or
push
add
add
add
add
sub
add
or
add
sub
add
xor
add
add
add
add
sub
add
sub
add
or
add
add
xor
add
add
add
add
add
add
push
add
or
add
add
sub
add
sub
add
sub
add
sub
add
or
sub
add
add
add
add
sub
add
or
add
idiv
(bad)
call
sub
add
add
sub
add
or
adc
add
popf
add
add
add
and
adc
add
pop
add
push
and
add
pop
dec
add
sub
push
and
add
push
add
sub
push
and
add
jae
add
sub
push
add
add
push
push
add
push
and
add
push
add
push
and
add
sub
add
jae
add
or
adc
sub
add
or
add
je
add
sub
add
and
add
sub
add
and
add
push
add
push
jae
add
or
sub
add
adc
add
add
add
add
sbb
add
and
inc
add
sub
push
and
add
add
inc
inc
add
sub
push
and
add
sub
add
adc
add
dec
add
add
add
add
add
add
xor
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
add
add
or
add
add
add
or
add
and
pop
add
sub
add
push
or
sub
add
adc
add
sbb
add
push
add
adc
add
and
add
sub
add
push
jle
add
add
sub
add
or
sub
xor
add
add
add
add
add
sub
add
add
(bad)
(bad)
call
sub
add
es
add
add
jle
add
add
add
add
or
push
add
add
add
add
sub
add
or
add
sub
add
xor
add
add
add
add
add
outs
sbb
add
and
add
xor
add
add
add
add
add
add
xor
add
and
add
and
add
or
adc
add
add
add
lldt
xor
add
and
add
and
add
or
push
add
add
add
add
add
xor
add
sub
add
or
add
add
or
adc
add
add
add
lldt
xor
add
and
add
and
add
or
push
add
add
add
add
add
xor
add
sub
add
or
add
add
or
adc
add
add
add
lldt
xor
add
sub
add
or
or
adc
add
add
add
lldt
xor
add
and
add
and
add
or
adc
add
add
add
lldt
xor
add
and
add
and
add
or
adc
add
add
add
lldt
xor
add
and
add
and
add
or
adc
add
add
add
lldt
xor
add
and
add
sub
xor
add
add
add
add
add
add
xor
add
and
add
and
add
or
inc
add
add
add
add
inc
pop
add
sub
add
mov
add
add
add
mov
pop
add
push
and
add
sub
add
or
add
sub
add
mov
add
add
das
add
or
or
adc
add
add
add
add
dec
pop
add
sub
add
sub
sub
add
or
adc
add
add
add
add
and
add
push
add
push
sub
add
adc
add
add
add
add
add
add
add
(bad)
(bad)
call
sub
add
es
add
add
add
add
add
cmp
add
sbb
add
add
(bad)
(bad)
inc
jne
add
add
push
outs
inc
add
or
push
pop
add
sub
add
pop
inc
adc
add
pop
add
add
add
add
add
add
add
cmp
add
inc
add
add
add
ins
add
add
add
mov
add
xchg
add
add
add
add
add
add
retf
add
je
add
add
sub
add
and
adc
add
sub
add
push
sub
movs
push
add
add
sbb
push
movs
retf
add
add
sub
add
and
push
add
add
and
add
sub
movs
icebp
add
add
and
add
and
push
add
add
and
add
and
adc
add
sub
add
push
sub
movs
repnz
add
and
add
and
push
add
add
and
add
and
repz
add
and
sub
movs
fadd
add
sub
add
push
and
inc
add
add
daa
add
push
and
add
add
sbb
add
and
aaa
add
add
sub
add
and
inc
add
sub
push
and
add
or
add
and
add
jp
add
xor
add
add
add
add
add
add
xor
add
and
xor
mov
add
push
add
adc
xor
add
jae
add
or
jae
add
push
or
add
add
and
inc
add
add
idiv
(bad)
call
sub
add
and
add
push
add
push
or
sbb
add
and
outs
inc
add
or
and
add
sub
add
pop
or
add
imul
add
add
(bad)
(bad)
inc
jae
add
push
or
inc
add
add
idiv
(bad)
dec
and
add
push
add
push
outs
mov
or
outs
xchg
add
push
ficom
sub
sbb
add
(bad)
(bad)
dec
outs
add
push
outs
sbb
add
and
adc
add
add
daa
xchg
add
add
add
xor
add
add
add
add
add
adc
sub
sub
add
or
or
add
add
add
add
adc
xor
add
add
xor
add
add
add
add
add
adc
add
add
and
add
or
sbb
add
add
add
add
pop
add
sbb
inc
add
or
add
push
and
add
sub
sbb
add
mov
add
push
add
adc
jae
add
or
jae
add
push
or
add
add
sub
add
add
(bad)
(bad)
call
sub
add
and
add
sub
add
or
sbb
outs
mov
add
add
call
and
add
push
add
push
pop
or
add
imul
add
add
(bad)
(bad)
inc
jae
add
push
adc
adc
outs
mov
add
and
adc
adc
idiv
(bad)
call
add
add
or
add
add
add
add
push
push
add
add
add
or
pop
add
add
add
add
sub
add
xor
sldt
add
add
jae
add
push
or
add
xchg
add
push
sub
add
or
add
add
add
add
xchg
add
pop
add
push
and
add
or
add
or
add
and
add
jp
add
xor
add
add
jle
add
add
mov
inc
add
add
idiv
(bad)
call
sub
add
es
add
jo
push
sub
or
add
or
mov
jge
add
or
sub
add
push
outs
add
or
popa
push
sub
retf
add
dec
add
or
jle
add
add
jae
add
or
add
or
add
adc
adc
xchg
add
or
outs
xchg
add
or
pop
jle
add
add
push
adc
outs
dec
add
or
add
adc
sbb
add
add
(bad)
(bad)
(bad)
fimul
or
or
add
or
sar
add
inc
add
or
sbb
add
add
(bad)
(bad)
jmp
sub
add
outs
dec
add
or
call
es
add
add
add
adc
add
add
inc
mov
add
add
or
pop
add
add
add
add
sub
add
xor
add
add
push
add
adc
add
add
or
or
sub
add
sub
add
or
add
add
or
or
sub
add
and
add
or
or
sub
add
sub
add
or
je
add
add
fiadd
es
sbb
and
add
add
add
or
adc
cmp
add
add
or
adc
add
add
adc
pop
sub
add
adc
pop
outs
push
add
or
add
and
add
outs
inc
add
or
add
pop
add
or
jne
add
add
add
add
(bad)
(bad)
call
sub
add
es
je
add
add
add
or
add
pop
pop
outs
push
add
or
add
or
add
add
adc
outs
push
add
or
outs
pop
add
or
push
adc
sub
add
push
adc
pop
adc
sub
or
or
aas
add
push
adc
add
and
adc
add
pop
add
or
add
fiadd
adc
pop
pop
adc
adc
adc
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
add
sbb
add
add
add
add
add
add
fs
add
inc
add
add
xor
add
add
pop
add
adc
add
add
dec
sub
add
and
dec
sbb
jle
add
add
dec
sub
add
and
dec
sbb
pop
lea
add
add
retf
add
dec
or
pop
sub
or
inc
add
push
or
add
add
push
outs
pop
add
or
and
sub
add
xor
imul
add
add
sub
or
pop
add
or
add
or
sbb
outs
pop
add
or
outs
pusha
add
or
outs
popa
add
or
add
or
outs
arpl
add
and
inc
add
add
idiv
(bad)
call
sub
add
fimul
or
or
add
or
add
outs
add
or
add
sub
add
add
add
push
add
add
add
add
adc
push
add
add
add
add
jle
add
add
dec
sub
add
and
dec
sbb
push
sub
adc
add
or
add
add
dec
pop
push
push
sub
or
sbb
sbb
push
adc
jbe
or
jle
add
and
pop
adc
or
add
inc
add
add
add
add
add
add
add
cmp
add
add
or
or
or
jle
add
and
add
and
adc
outs
add
or
pop
adc
or
sub
add
sub
jb
add
jo
add
or
sbb
adc
pop
adc
add
xor
add
idiv
(bad)
call
sub
add
add
outs
push
add
xor
add
add
add
add
add
and
add
add
pushf
add
and
add
add
arpl
pushf
add
and
add
add
adc
pushf
add
and
add
add
sbb
pushf
sub
add
adc
add
add
add
add
add
or
imul
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
pop
pop
or
(bad)
out
add
add
or
add
sub
add
add
(bad)
(bad)
inc
outs
push
add
or
add
or
inc
add
add
idiv
(bad)
dec
push
add
add
or
add
and
or
add
add
or
pop
or
sbb
or
adc
outs
ins
add
or
pop
pop
adc
pop
pop
or
imul
add
add
(bad)
(bad)
dec
sub
add
add
or
pop
add
add
add
add
sub
add
sub
adc
add
rol
add
adc
add
add
lea
add
add
add
add
lea
add
add
movs
add
add
inc
add
or
sbb
add
or
jbe
add
or
add
or
adc
outs
add
or
add
or
add
jo
add
ror
and
add
add
es
add
(bad)
(bad)
call
sub
add
es
add
add
(bad)
movs
add
add
and
add
pop
and
inc
add
pop
jle
add
add
and
add
add
movs
add
add
and
adc
mov
sbb
add
add
idiv
(bad)
jmp
add
add
jbe
add
add
add
add
adc
add
add
add
rol
add
push
jge
add
add
add
add
or
add
add
add
add
add
add
(bad)
(bad)
call
sub
add
add
add
or
jge
add
add
add
add
or
add
add
or
add
and
jge
add
add
add
add
or
das
add
add
add
add
or
sub
add
and
iret
add
add
jnp
add
add
imul
add
add
(bad)
(bad)
call
sub
add
sub
adc
push
add
add
adc
jnp
add
add
jle
add
or
push
or
sub
add
and
inc
add
cs
add
add
(bad)
(bad)
call
sub
add
es
add
add
(bad)
movs
add
add
add
add
sub
add
dec
add
push
or
add
(bad)
movs
add
add
add
add
adc
sub
add
and
or
adc
add
adc
add
sbb
add
and
add
sub
add
rol
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
inc
add
add
fiadd
add
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
dec
add
push
or
add
add
add
jnp
add
add
outs
jbe
add
and
add
and
sub
add
and
add
push
adc
add
dec
add
push
and
jnp
add
add
jnp
add
add
outs
jns
add
outs
jp
add
push
adc
sub
add
and
add
push
adc
add
dec
add
push
and
rol
add
add
add
add
jnp
add
add
jnp
add
and
add
add
add
add
jl
add
adc
push
add
or
add
and
add
and
sub
add
and
add
push
adc
add
dec
add
push
and
rol
add
add
add
add
jnp
add
add
jg
add
and
add
add
add
add
or
add
and
sub
add
and
add
push
adc
add
dec
add
push
or
jnp
add
add
add
add
add
jnp
add
add
add
or
add
add
add
push
outs
jge
add
and
add
push
adc
sub
add
and
add
push
adc
add
dec
add
push
and
rol
add
add
add
add
jnp
add
add
add
or
pop
outs
test
add
and
sbb
add
(bad)
(bad)
call
pop
outs
test
add
and
add
xor
add
add
or
jnp
add
add
or
add
or
add
and
add
add
pop
outs
test
add
and
sbb
add
add
(bad)
(bad)
call
pop
outs
test
add
and
sbb
add
add
(bad)
(bad)
call
pop
jne
add
add
or
jnp
add
add
or
add
or
push
add
or
add
and
add
and
adc
outs
test
add
and
pop
inc
add
add
idiv
(bad)
call
pop
jne
add
add
or
jnp
add
add
or
add
or
add
and
push
adc
sub
add
and
add
push
adc
add
dec
add
push
and
adc
sbb
inc
add
push
adc
jb
add
jo
add
jne
add
and
add
sub
add
or
add
jp
add
or
sldt
add
add
add
and
add
pop
jge
add
add
add
xor
add
add
adc
jnp
add
add
and
add
or
pop
jge
add
add
xchg
sub
add
adc
add
and
add
pop
add
adc
jnp
add
add
add
add
pop
jge
add
add
jnp
add
add
sub
add
sub
add
xor
add
add
add
jnp
add
add
and
add
add
pushf
add
add
add
and
add
add
arpl
pushf
add
add
add
and
add
add
adc
pushf
add
add
add
and
add
add
sbb
pushf
sub
add
add
or
pop
add
add
add
add
sub
add
xor
inc
add
add
add
add
add
add
push
or
add
xchg
add
and
add
or
jl
add
add
pop
sub
add
sub
xor
sbb
add
add
(bad)
(bad)
call
sub
add
sub
xor
inc
add
add
add
add
add
add
push
or
add
mov
add
and
add
or
jl
add
add
pop
sub
add
sub
xor
sbb
add
add
(bad)
(bad)
call
sub
add
sub
xor
add
add
add
add
add
add
or
outs
mov
add
add
add
or
add
push
or
push
outs
mov
add
push
outs
scas
add
push
sub
add
xor
add
add
add
add
add
jnp
add
add
or
add
add
add
or
add
sbb
add
data16
add
add
add
add
sub
push
jae
add
or
mov
add
outs
pop
add
and
pop
dec
add
push
jae
add
or
dec
add
push
fidiv
or
push
outs
xchg
add
or
jle
add
or
add
push
add
add
or
loop
add
sub
push
and
add
or
add
add
add
add
add
adc
and
add
inc
add
add
xor
add
add
add
add
add
add
add
push
add
push
sub
add
or
pop
add
add
add
add
sub
add
or
add
xor
add
add
add
add
add
sub
add
or
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
jae
add
add
add
add
adc
sub
add
sub
push
and
add
jp
add
add
add
and
add
push
add
push
jae
add
push
jge
add
add
and
add
sub
add
jge
add
add
jae
add
or
add
add
and
add
push
add
push
jge
add
add
and
add
sub
add
sub
push
sub
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
outs
xchg
add
or
and
add
test
add
sub
add
pop
jge
add
add
adc
add
inc
add
add
add
add
pop
add
push
and
loopne
add
jnp
add
add
xchg
add
or
add
sub
add
pop
outs
cwde
add
or
and
add
mov
add
sub
add
pop
jge
add
add
sub
add
add
or
pop
add
add
add
add
jnp
add
add
jnp
add
add
nop
pop
add
sub
add
pop
outs
cdq
add
or
xor
mov
add
bound
add
and
add
push
or
call
jnp
add
add
pop
and
push
add
push
cmp
inc
add
add
idiv
(bad)
call
sub
add
es
and
add
push
cmp
add
sbb
add
add
(bad)
(bad)
inc
and
push
add
push
inc
add
add
sub
add
and
add
sbb
add
add
(bad)
(bad)
inc
jnp
add
add
or
movs
pop
add
sub
add
xor
inc
add
add
idiv
(bad)
dec
and
push
add
push
cs
inc
add
add
idiv
(bad)
dec
and
add
push
cmp
inc
add
add
idiv
(bad)
(bad)
cmp
add
add
and
push
add
push
cs
inc
add
add
idiv
(bad)
dec
and
add
push
pop
inc
pop
add
add
add
test
add
pop
add
add
add
add
add
in
add
cmp
add
add
add
add
mov
push
add
push
outs
out
add
cmp
add
add
jnp
add
add
mov
push
add
push
outs
out
add
cmp
fld
add
rol
add
push
add
push
outs
out
add
cmp
jnp
add
add
les
add
sub
add
outs
out
add
cmp
add
add
add
add
enter
sub
add
outs
out
add
sub
jnp
add
add
jnp
add
add
out
add
sub
jmp
add
sub
push
add
xor
add
and
add
jp
jnp
add
add
xor
pop
inc
add
add
idiv
(bad)
jmp
int3
pop
add
sub
add
or
adc
jnp
add
add
jnp
add
add
out
add
push
sub
add
add
(bad)
(bad)
inc
sub
add
and
(bad)
call
add
(bad)
(bad)
inc
sub
add
add
(bad)
(bad)
jmp
jmp
add
sub
push
and
add
add
xor
add
and
add
jp
sub
add
add
rol
add
sub
add
jge
add
add
and
pop
add
sub
add
jge
add
add
add
add
add
sbb
add
and
add
jnp
add
add
fadd
add
sub
add
outs
in
add
add
fld
add
sub
add
and
add
add
add
add
adc
add
dec
add
add
add
adc
jnp
add
add
call
fadd
add
sub
add
cs
add
(bad)
(bad)
call
sub
add
add
sar
add
add
loopne
add
sub
add
sub
in
add
sub
add
sub
add
xor
add
add
add
add
add
jnp
add
add
fwait
add
or
add
sub
add
inc
and
pop
add
sub
add
inc
sub
add
xor
add
add
add
jnp
add
add
fwait
add
or
sub
add
add
or
adc
add
add
add
add
lock
add
sub
add
jge
add
add
add
add
xor
add
add
add
add
sub
add
add
add
xor
sbb
add
(bad)
(bad)
call
sub
add
es
pop
add
sub
add
sub
sub
add
and
inc
add
add
idiv
(bad)
jmp
clc
pop
add
sub
add
sub
xor
add
add
add
add
add
add
add
xor
inc
add
add
idiv
(bad)
call
sub
add
add
pusha
add
push
and
inc
add
add
idiv
(bad)
jmp
cld
pop
add
sub
add
sub
jnp
add
add
push
inc
or
add
add
add
mov
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
add
and
add
push
and
add
push
cmp
(bad)
jmp
add
add
sub
add
sub
ds
add
sub
push
and
add
add
cmp
add
sub
add
or
add
jp
add
adc
add
inc
add
add
adc
jnp
add
add
push
and
add
sub
add
xor
inc
add
add
idiv
(bad)
call
sub
add
es
and
or
add
push
add
push
cmp
inc
add
add
idiv
(bad)
inc
and
add
sub
add
cs
inc
add
add
idiv
(bad)
(bad)
cmp
and
or
add
push
add
push
cmp
and
add
sub
add
xor
add
add
idiv
(bad)
inc
and
or
add
push
add
push
sub
push
add
arpl
add
and
add
sub
add
sub
and
or
add
push
add
push
sub
push
add
arpl
add
and
add
sub
add
sub
sub
add
and
or
add
push
add
push
sub
sub
add
add
arpl
add
and
add
sub
add
sub
jnp
add
add
pushf
add
or
sbb
add
add
idiv
(bad)
inc
sub
add
sub
arpl
add
pop
add
push
and
add
add
adc
add
sub
add
or
add
jp
sub
add
cmp
(bad)
(bad)
jmp
xor
add
sub
add
sub
xor
add
add
add
adc
jnp
add
add
push
and
add
sub
add
cs
push
and
or
add
push
add
push
cmp
and
add
sub
add
xor
inc
add
add
idiv
(bad)
call
sub
add
add
inc
or
add
push
add
push
sub
push
and
add
push
add
push
sub
sub
add
and
add
sub
add
sub
and
add
push
add
push
sub
push
and
add
sub
add
sub
jnp
add
add
pushf
add
or
inc
add
add
idiv
(bad)
inc
sub
add
and
pusha
add
push
and
(bad)
jmp
push
or
add
push
add
push
sub
add
xor
add
add
add
add
add
add
push
add
sub
sbb
add
add
idiv
(bad)
call
sub
add
add
imul
push
sub
jnp
add
add
pop
or
add
push
add
push
cs
add
add
(bad)
(bad)
inc
jnp
add
add
pop
or
add
push
add
push
xor
sbb
add
add
idiv
(bad)
inc
add
add
add
imul
and
dec
add
sub
push
and
add
add
adc
add
sub
add
or
add
push
jp
jnp
add
add
pusha
or
add
push
add
push
sbb
inc
add
add
idiv
(bad)
inc
and
add
push
add
push
sub
push
add
push
push
add
push
add
add
add
sbb
add
and
add
add
add
add
ins
or
add
push
add
push
outs
in
add
and
add
sub
add
sub
add
or
popa
add
add
add
add
add
add
add
xor
inc
add
add
idiv
(bad)
call
sub
add
sub
jnp
add
add
jnp
add
add
out
add
add
pusha
add
push
and
inc
add
add
idiv
(bad)
jmp
das
dec
add
sub
push
add
xor
add
and
add
jp
add
add
or
pop
add
add
add
add
jnp
add
add
popf
add
or
add
add
(bad)
(bad)
call
sub
add
add
add
add
je
add
sub
add
cs
add
idiv
(bad)
inc
jnp
add
add
js
add
sub
add
inc
sub
jl
add
sub
add
sub
add
xor
add
add
add
jnp
add
add
jnp
add
add
out
add
cmp
add
add
add
add
pushf
add
or
add
add
add
add
or
add
push
add
push
xor
sub
add
add
add
push
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
jnp
add
add
out
add
sub
js
add
sub
push
and
add
add
adc
add
sub
add
or
add
jp
sub
add
cmp
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
xor
add
add
add
add
add
add
ins
add
push
sub
add
adc
add
dec
add
add
add
add
jge
add
add
or
and
add
push
pop
inc
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
into
add
add
and
push
add
push
jge
add
add
and
add
push
sub
push
add
arpl
add
cmp
and
push
add
push
jge
add
add
and
add
push
sub
push
add
arpl
add
cmp
add
add
cwde
or
add
push
add
push
sub
add
add
arpl
add
add
pushf
or
add
push
add
push
jge
add
add
push
add
mov
push
add
push
sub
add
add
arpl
add
add
movs
or
add
push
add
push
jge
add
add
sub
and
push
add
push
jge
add
add
sub
add
sub
add
lods
or
add
push
add
push
jge
add
add
sub
add
add
inc
add
or
add
add
add
sub
add
adc
add
lods
add
add
add
add
add
add
pop
and
push
add
push
cmp
pop
and
add
push
xor
and
push
add
push
cmp
add
add
inc
add
add
idiv
(bad)
call
sub
add
es
and
add
push
pop
inc
add
add
fld
add
cwde
add
add
add
cmp
and
or
add
push
add
push
cmp
add
add
idiv
(bad)
inc
and
or
add
push
add
push
cmp
add
cmp
add
and
or
add
push
add
push
xor
inc
add
add
idiv
(bad)
inc
and
or
add
push
add
push
pop
inc
add
add
jne
add
xor
add
stos
add
add
and
or
add
push
add
push
cmp
inc
add
add
idiv
(bad)
(bad)
cmp
add
add
and
or
add
push
add
push
cs
inc
add
add
idiv
(bad)
inc
and
or
add
push
add
push
pop
inc
add
add
cmp
add
cli
add
add
and
or
add
push
add
push
pop
inc
add
add
out
add
add
add
add
add
cmp
add
add
add
pop
add
push
and
or
add
push
add
push
sub
sub
add
and
or
add
push
add
push
sub
sub
push
and
or
add
push
add
push
sub
sub
add
and
inc
add
add
idiv
(bad)
inc
sub
add
and
in
or
add
push
add
push
xor
sbb
add
add
(bad)
(bad)
inc
sub
add
sub
and
or
add
push
add
push
xor
add
jo
add
sub
and
dec
add
sub
push
and
add
add
adc
add
sub
add
or
add
push
jp
dec
dec
add
sub
push
jae
add
push
jp
hlt
or
add
push
add
push
sub
sub
add
and
or
add
push
add
push
sub
sub
add
and
or
add
push
add
push
sub
and
or
add
push
add
push
sub
push
and
add
sub
add
sub
and
or
add
push
add
push
sub
push
and
add
sub
add
sub
and
or
add
push
add
push
sub
push
and
add
sub
add
sub
and
or
add
push
add
push
sub
push
and
add
sub
add
sub
and
or
add
push
add
push
sub
push
and
add
sub
add
sub
jnp
add
add
sub
add
sub
add
xor
add
sub
add
sub
add
jge
add
add
xor
add
sub
add
sub
fisttp
add
pop
add
push
add
add
add
adc
add
sub
add
or
add
jp
jnp
add
add
pushf
add
or
add
add
add
add
sahf
add
or
inc
add
add
idiv
(bad)
inc
jnp
add
add
xor
add
sub
add
cs
jnp
add
add
cmp
add
sub
add
xor
sbb
add
add
(bad)
(bad)
inc
sub
add
and
add
sub
add
sub
fisttp
add
pop
add
push
and
add
add
adc
add
sub
add
or
add
jp
sub
add
and
(bad)
call
add
(bad)
(bad)
jmp
inc
or
add
push
add
push
sub
xor
add
add
add
adc
inc
or
add
push
add
push
or
adc
dec
or
add
push
add
push
or
sub
add
and
fadd
add
pushf
add
or
inc
add
add
idiv
(bad)
call
sub
add
add
sbb
add
(bad)
(bad)
inc
sub
dec
or
add
push
add
push
sub
add
adc
add
stos
add
add
add
add
addr16
add
sub
push
and
add
sub
add
sub
add
and
add
add
push
or
add
push
add
push
sub
add
and
add
sub
add
add
add
jnp
add
add
out
add
add
pusha
add
push
and
fadd
add
lahf
add
or
add
add
(bad)
(bad)
call
sub
add
add
add
add
sbb
add
and
fld
add
pop
or
add
push
add
push
outs
in
add
jae
add
or
add
pop
or
add
push
add
push
sub
add
and
fadd
add
pusha
or
add
push
add
push
inc
in
add
sbb
add
add
(bad)
(bad)
inc
sub
add
and
add
add
or
add
push
add
push
jge
add
add
sbb
add
add
add
mov
and
add
sub
add
jge
add
add
sub
add
and
and
add
sub
push
and
add
and
inc
add
add
idiv
(bad)
inc
and
add
push
add
push
outs
mov
sub
es
sub
add
and
jo
add
sub
add
or
ins
add
push
sub
push
pop
jae
add
push
jae
add
push
adc
jnp
add
add
je
add
sub
add
xor
add
js
add
sub
add
adc
ins
add
push
add
pusha
add
push
and
adc
add
adc
add
imul
or
add
push
add
push
or
sub
add
and
inc
add
add
idiv
(bad)
call
sub
add
and
push
add
push
or
adc
jnp
add
add
jnp
add
add
out
add
push
sub
add
add
(bad)
(bad)
inc
sub
add
and
inc
add
add
idiv
(bad)
inc
jnp
add
add
sbb
add
and
test
add
sub
add
outs
xor
add
and
add
sub
add
xor
sbb
add
add
(bad)
(bad)
inc
jnp
add
add
sbb
add
and
add
sub
mov
add
or
mov
add
sub
add
or
fld
add
sbb
add
and
add
and
add
and
add
or
nop
or
add
push
add
push
or
add
xchg
or
add
push
add
push
outs
in
add
add
or
ins
add
push
sub
adc
add
dec
add
add
add
add
pop
add
push
and
sub
push
push
cs
add
add
(bad)
(bad)
call
sub
add
and
add
sub
push
and
add
add
mov
add
add
pop
add
or
add
push
jp
add
adc
add
jno
add
push
add
add
pop
add
push
and
pop
inc
add
add
add
add
adc
add
and
add
sub
add
cwde
or
add
push
add
push
jge
add
add
add
pushf
or
add
push
add
push
jge
add
add
add
mov
push
add
push
jge
add
add
and
dec
add
sub
push
and
add
add
xor
add
and
add
jp
add
adc
add
push
add
add
add
add
push
and
add
push
pop
inc
add
add
add
add
or
push
and
push
add
push
sub
lods
or
add
push
add
push
sub
sahf
dec
add
sub
push
and
add
add
xor
add
jae
add
push
jp
xor
add
add
add
sub
add
add
add
add
mov
add
sub
add
inc
pushf
add
add
inc
add
add
idiv
(bad)
call
sub
add
sub
jnp
add
add
mov
add
sub
add
xor
inc
add
add
idiv
(bad)
inc
sub
add
and
jnp
add
add
mov
push
add
push
cs
add
add
add
mov
push
add
push
outs
out
add
add
add
add
jnp
add
add
out
add
sub
add
add
add
jnp
add
add
out
add
add
pusha
add
push
and
inc
add
add
idiv
(bad)
jmp
adc
(bad)
sub
push
jae
add
push
jp
and
or
add
push
add
push
add
add
add
sbb
add
and
add
add
add
add
les
add
sub
add
outs
in
add
add
arpl
add
sub
add
adc
add
add
add
add
adc
enter
sub
add
or
jnp
add
add
push
outs
jae
add
and
and
or
add
push
add
push
pop
or
add
add
or
inc
add
add
idiv
(bad)
call
sub
add
add
pusha
add
push
sub
add
add
(bad)
(bad)
inc
add
add
or
add
add
xor
add
add
add
adc
add
jbe
add
and
adc
add
idiv
(bad)
call
sub
add
es
sub
sub
sbb
add
(bad)
(bad)
inc
sub
add
and
sub
add
and
or
add
push
add
push
sub
aam
add
sub
add
sub
xor
add
add
add
adc
jnp
add
add
push
and
or
add
push
add
push
xor
inc
add
add
idiv
(bad)
call
sub
add
es
and
or
add
push
add
push
cmp
inc
add
add
idiv
(bad)
inc
and
or
add
push
add
push
cs
sbb
add
add
(bad)
(bad)
(bad)
cmp
and
or
add
push
add
push
cs
sbb
add
add
(bad)
(bad)
inc
and
or
add
push
add
push
and
inc
add
add
idiv
(bad)
inc
and
or
add
push
add
push
xor
add
add
idiv
(bad)
jmp
lock
add
push
add
push
sub
sub
add
and
sub
add
and
add
sub
add
inc
sub
clc
or
add
push
add
push
sub
jnp
add
add
cld
or
add
push
add
push
xor
and
or
add
push
add
push
sub
jnp
add
add
pushf
add
or
inc
add
add
idiv
(bad)
jmp
add
add
sub
add
sub
or
add
sub
add
sub
add
or
pop
add
add
add
add
jle
add
add
or
add
sub
add
sub
add
sub
sbb
add
(bad)
(bad)
call
sub
add
add
adc
add
sub
add
and
add
sub
add
mov
add
add
ins
add
push
sub
push
dec
add
sub
push
jae
add
push
jp
add
xor
add
add
add
add
add
add
add
sbb
add
sub
add
sub
add
and
and
add
sub
add
sub
push
sub
push
dec
add
sub
push
and
add
jp
xor
add
add
add
add
add
add
add
and
add
sub
add
sub
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
and
add
sub
add
sub
push
sub
mov
add
pop
add
push
and
add
jp
add
or
pop
add
add
add
add
jle
add
add
sub
add
sub
add
sub
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
sub
add
sub
add
and
or
add
push
add
push
mov
add
add
ins
add
push
sub
push
dec
add
sub
push
and
add
jp
add
xor
add
add
add
add
add
and
add
sub
add
sub
add
sub
add
add
or
sbb
add
add
add
add
add
add
cmp
add
sub
add
or
sub
add
jg
add
sub
xor
add
add
add
add
add
cmp
add
sub
add
jge
add
add
and
add
sub
add
jge
add
add
adc
fiadd
add
adc
fild
add
jnp
add
add
push
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
add
cmps
add
or
jnp
add
add
or
jnp
add
add
out
add
sub
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
add
cli
add
or
add
or
or
add
add
add
add
add
test
add
sub
add
add
or
pop
add
add
add
add
sub
add
xor
add
add
add
add
add
add
cli
add
or
add
or
or
add
add
add
add
add
test
add
sub
add
add
or
pop
add
add
add
add
sub
and
add
push
jge
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
push
or
add
push
add
push
xor
sbb
add
add
(bad)
(bad)
call
sub
add
add
pop
or
add
push
add
push
xor
inc
add
add
idiv
(bad)
jmp
aam
add
sub
push
and
add
jp
add
add
add
add
add
xor
add
add
add
jnp
add
add
push
pop
inc
add
add
idiv
(bad)
call
sub
add
add
add
push
jge
add
add
jnp
add
add
add
add
xor
add
add
add
add
add
add
mov
add
and
xor
add
add
add
add
add
add
add
(bad)
(bad)
call
sub
add
es
dec
add
sub
push
and
add
jp
outs
add
push
sub
add
add
(bad)
(bad)
call
add
add
mov
add
and
xor
js
add
imul
adc
add
push
or
dec
add
add
push
and
pop
or
add
push
add
push
cs
and
add
sub
add
xor
add
idiv
(bad)
call
sub
add
es
sub
add
mov
add
and
outs
mov
outs
add
push
and
inc
add
add
idiv
(bad)
jmp
fisttp
add
pop
add
push
and
add
jp
xor
cld
add
add
adc
add
push
or
retf
add
outs
pop
add
push
and
or
add
push
add
push
pop
inc
add
add
and
add
add
and
add
sub
add
cmp
add
sbb
add
(bad)
(bad)
call
sub
add
sub
outs
pop
add
push
and
add
or
outs
add
push
and
inc
add
add
idiv
(bad)
jmp
xor
add
pop
add
push
and
add
jp
outs
pop
add
push
and
add
sub
add
mov
adc
mov
add
and
or
add
or
es
sub
xchg
add
pop
add
push
add
add
push
and
add
sub
add
or
add
jp
outs
add
push
cmp
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
xor
add
pop
add
push
and
add
jp
xor
xor
add
ins
add
adc
and
add
jo
add
sub
add
pop
jge
add
add
add
add
cwde
add
push
sub
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
cmp
add
and
pop
add
push
or
and
add
push
add
push
pop
inc
push
add
add
add
add
add
add
add
add
cmp
add
cmp
add
cmp
add
pusha
add
add
add
add
add
add
add
cmp
add
sub
sub
add
add
(bad)
(bad)
inc
add
lea
add
sub
add
add
xchg
add
push
and
add
or
add
mov
add
sub
add
add
xchg
add
push
or
dec
add
outs
pop
add
push
and
add
push
and
add
add
push
and
add
or
sub
sub
and
dec
add
sub
push
and
add
push
and
add
sub
add
or
add
jp
and
add
js
add
sub
add
pop
jge
add
add
sub
adc
add
add
add
add
add
add
(bad)
(bad)
call
sub
add
es
add
or
inc
add
add
idiv
(bad)
inc
sub
outs
inc
add
or
push
add
movs
add
add
inc
add
add
idiv
(bad)
inc
stos
add
or
pop
push
outs
stos
add
or
add
add
(bad)
(bad)
inc
rcr
add
add
inc
add
or
add
or
pop
inc
add
add
idiv
(bad)
inc
sub
add
add
or
or
add
or
outs
scas
add
or
inc
add
add
idiv
(bad)
jmp
cmp
add
pop
add
push
and
add
or
add
or
add
jp
sub
adc
xor
add
and
add
or
add
xor
pop
add
add
add
add
add
add
push
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
or
add
add
jnp
add
add
adc
outs
mov
add
sub
sbb
add
add
(bad)
(bad)
inc
sub
add
xchg
add
push
and
test
add
push
outs
mov
add
push
sub
sbb
pop
add
add
add
add
add
jl
add
sub
add
sub
add
push
and
add
push
or
outs
mov
add
adc
cmp
add
adc
sub
or
or
add
push
add
push
sub
add
and
add
or
add
push
add
push
or
inc
add
or
xor
inc
add
or
add
sub
add
outs
mov
add
and
sub
add
push
and
sub
add
push
and
or
or
add
sub
add
push
pop
adc
outs
loopne
add
adc
sub
cmp
call
add
(bad)
(bad)
call
sub
add
fimul
adc
(bad)
push
pop
add
sbb
add
or
pop
sub
add
add
add
and
cmps
mov
add
xor
push
add
add
add
add
add
push
sub
add
add
(bad)
(bad)
call
sub
add
and
pop
add
push
and
cmp
add
jae
add
push
jp
add
push
or
push
add
mov
es
push
push
add
mov
adc
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
adc
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
adc
sub
add
push
and
add
and
pop
sub
adc
sub
add
push
and
add
push
sub
and
add
sub
add
and
add
or
inc
add
add
idiv
(bad)
inc
inc
add
or
add
and
pop
sub
add
and
add
push
add
outs
mov
and
dec
add
sub
push
and
outs
mov
inc
add
or
pop
add
or
add
jp
add
xor
aaa
add
add
add
jae
add
push
or
add
add
add
add
add
add
add
sub
es
add
add
pop
inc
push
add
push
jae
add
or
inc
add
or
sub
adc
push
add
add
adc
mov
or
jbe
add
add
add
push
or
and
push
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
or
mov
add
sub
add
cs
sbb
outs
pop
add
push
and
add
or
add
add
sub
es
sub
push
push
add
sub
push
add
add
push
and
add
sub
add
or
add
jp
outs
add
push
cmp
(bad)
call
inc
add
add
idiv
(bad)
jmp
scas
push
add
sub
push
and
add
jp
add
or
push
add
add
add
add
add
add
push
add
xchg
add
push
sub
add
xor
add
add
add
add
add
add
add
(bad)
(bad)
call
sub
add
and
push
add
sub
push
and
add
jp
sub
add
add
(bad)
(bad)
jmp
aam
add
sub
push
and
add
jp
add
xchg
add
push
sub
xor
jmp
add
je
add
add
pop
add
add
push
sub
add
inc
add
or
cwde
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
es
add
aaa
add
push
sub
cmp
add
add
idiv
(bad)
inc
or
outs
inc
add
or
and
push
add
push
pop
inc
adc
add
pop
add
add
add
add
add
pusha
add
add
add
add
add
push
add
add
add
jp
add
xchg
add
xchg
add
add
add
add
add
add
ret
add
add
pop
je
add
add
add
push
sub
pop
movs
adc
add
outs
int3
add
push
sub
pop
movs
push
add
add
add
push
sub
pop
movs
retf
add
add
add
push
sub
pop
movs
push
add
add
add
push
sub
pop
movs
icebp
add
add
add
push
sub
pop
movs
push
add
add
add
push
sub
pop
movs
adc
add
outs
int
add
sub
pop
movs
repnz
add
add
push
sub
pop
movs
push
add
add
add
push
sub
pop
movs
repz
add
add
push
sub
pop
movs
fadd
add
outs
mov
pop
movs
inc
add
add
add
push
sub
pop
movs
add
add
add
push
sub
pop
movs
aaa
add
add
add
push
sub
add
call
and
push
add
add
and
pushf
add
push
sub
sub
pop
inc
add
add
idiv
(bad)
inc
add
and
add
sub
add
and
add
sub
add
add
and
add
sub
add
sub
add
sub
add
sbb
add
and
add
sub
add
call
xor
nop
add
add
add
add
add
add
ja
add
sbb
add
add
(bad)
(bad)
call
sub
add
and
add
push
or
cmp
add
outs
mov
pop
add
add
push
and
inc
add
add
idiv
(bad)
inc
push
and
push
add
push
sub
and
add
push
pop
or
add
add
add
rol
or
inc
add
add
idiv
(bad)
inc
push
and
push
add
push
sub
xor
mov
add
adc
push
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
or
outs
mov
es
outs
rol
or
add
sub
add
cs
sbb
add
add
(bad)
(bad)
inc
jnp
add
add
pop
inc
add
add
add
add
adc
add
aaa
add
add
adc
pop
push
add
sub
push
and
add
jp
and
add
sub
push
add
add
add
cmp
add
sub
add
and
add
jp
push
add
sub
inc
add
or
add
add
push
sub
add
xor
add
add
add
add
add
inc
add
or
push
sub
or
sub
sbb
add
add
(bad)
(bad)
call
sub
add
es
jne
add
add
add
or
xor
add
sub
add
and
inc
add
add
idiv
(bad)
inc
rcr
add
add
inc
add
or
add
sub
sbb
add
(bad)
(bad)
inc
pop
add
lods
add
or
add
sub
outs
mov
es
mov
outs
mov
add
add
sub
es
outs
ret
add
or
dec
adc
les
add
and
sub
add
push
and
inc
add
add
idiv
(bad)
call
add
fadd
add
and
inc
add
add
idiv
(bad)
inc
add
add
fiadd
add
and
fld
add
sub
add
arpl
add
sub
add
add
(bad)
(bad)
(bad)
ficom
adc
adc
idiv
(bad)
call
add
add
add
add
push
add
add
push
and
add
or
add
add
add
mov
push
add
add
adc
add
sub
add
js
add
add
mov
or
add
or
and
push
add
push
outs
mov
push
sub
xor
add
add
adc
outs
mov
add
and
add
push
or
sbb
outs
enter
and
add
push
and
push
add
push
pop
or
add
mov
or
inc
add
add
idiv
(bad)
call
sub
add
add
add
push
sub
add
sbb
add
add
add
add
add
push
add
leave
add
or
pop
outs
retf
or
or
adc
sub
add
or
add
or
add
add
adc
sub
add
or
add
pop
outs
arpl
add
sub
add
add
(bad)
(bad)
call
sub
add
ficomp
pop
jne
add
add
sub
pop
inc
add
add
idiv
(bad)
dec
outs
add
add
add
push
sub
adc
add
add
add
add
add
add
add
add
rol
add
add
add
sub
sub
add
add
(bad)
(bad)
call
sub
add
and
add
push
and
add
jp
add
add
add
and
or
add
push
add
push
jge
add
add
and
or
add
push
add
push
jge
add
add
and
or
add
push
add
push
jge
add
add
and
or
add
push
add
push
jge
add
add
and
or
add
push
add
push
jge
add
add
and
or
add
push
add
push
jae
add
or
add
add
jnp
add
add
cld
or
add
push
add
push
outs
xchg
add
or
and
or
add
push
add
push
jge
add
add
adc
add
add
add
and
add
sub
add
and
or
add
push
add
push
jae
add
or
push
and
add
sub
add
and
or
add
push
add
push
and
add
sub
add
sub
add
or
and
or
add
push
add
push
and
add
sub
add
and
or
add
push
add
push
sub
add
or
and
add
sub
add
and
or
add
push
add
push
and
add
sub
add
sub
add
or
and
or
add
push
add
push
and
add
sub
add
and
or
add
push
add
push
sub
add
or
and
add
sub
add
and
add
sub
add
and
add
push
add
push
sub
add
or
and
add
sub
add
and
add
push
add
push
and
add
sub
add
sub
add
or
and
add
push
add
push
and
add
sub
add
and
add
push
add
push
sub
add
or
and
add
sub
add
and
add
push
add
push
and
add
sub
add
sub
add
or
and
add
push
add
push
and
add
sub
add
and
add
push
add
push
sub
add
or
and
add
sub
add
and
add
push
add
push
and
push
add
push
sub
add
or
and
add
push
and
push
add
push
and
add
push
sub
add
or
and
push
add
push
and
add
push
and
push
add
push
sub
add
or
and
add
push
and
push
add
push
and
add
push
sub
add
or
and
push
add
push
and
add
push
and
push
add
push
sub
add
or
and
add
push
and
push
add
push
and
add
push
sub
add
or
and
or
add
push
add
push
and
or
add
push
add
push
and
or
add
push
add
push
sub
add
or
and
or
add
push
add
push
and
or
add
push
add
push
and
or
add
push
add
push
sub
add
or
and
or
add
push
add
push
and
or
add
push
add
push
and
or
add
push
add
push
sub
add
or
and
or
add
push
add
push
and
or
add
push
add
push
and
or
add
push
add
push
sub
add
or
and
or
add
push
add
push
and
or
add
push
add
push
and
or
add
push
add
push
sub
add
or
and
or
add
push
add
push
and
or
add
push
and
add
push
sub
add
or
and
or
add
push
and
add
push
and
or
add
push
sub
add
or
and
add
push
and
or
add
push
and
add
push
sub
add
or
and
or
add
push
and
add
push
and
or
add
push
sub
add
or
and
add
push
and
or
add
push
and
add
push
sub
add
or
and
or
add
push
and
add
push
and
add
sub
add
sub
add
or
and
add
push
add
push
and
add
sub
add
and
add
push
add
push
sub
add
or
and
add
sub
add
and
add
push
add
push
and
add
sub
add
sub
add
or
and
add
push
add
push
and
add
sub
add
and
add
push
add
push
sub
add
or
and
add
sub
add
and
add
push
add
push
and
add
sub
add
sub
add
or
and
add
push
add
push
and
add
sub
add
and
add
push
add
push
sub
add
or
and
push
add
push
and
add
push
and
push
add
push
sub
add
or
and
add
push
and
push
add
push
and
add
push
sub
add
or
and
push
add
push
and
add
push
and
push
add
push
sub
add
or
and
add
push
and
push
add
push
and
add
push
sub
add
or
and
push
add
push
and
add
push
and
push
add
push
sub
add
or
and
add
push
and
or
add
push
and
or
add
push
sub
add
or
and
or
add
push
and
or
add
push
and
or
add
push
sub
add
or
and
or
add
push
and
or
add
push
and
or
add
push
sub
add
or
and
or
add
push
and
or
add
push
and
or
add
push
sub
add
or
and
or
add
push
and
or
add
push
and
or
add
push
sub
add
or
and
or
add
push
and
or
add
push
and
push
add
sub
add
sub
add
or
and
add
sub
add
and
push
add
sub
add
and
add
sub
add
sub
add
or
and
push
add
sub
add
and
add
sub
add
and
push
add
sub
add
sub
add
or
and
add
sub
add
and
push
add
sub
add
and
add
sub
add
sub
add
or
and
push
add
sub
add
and
add
sub
add
and
push
add
sub
add
sub
add
or
and
add
sub
add
and
push
add
sub
add
and
add
sub
add
sub
add
or
and
add
sub
add
and
add
push
add
push
and
add
sub
add
sub
add
or
adc
add
add
or
sub
add
add
jnp
add
add
push
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
or
add
add
jnp
add
add
add
add
xor
add
add
adc
jnp
add
add
push
inc
or
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
and
push
add
push
sub
mov
push
add
push
sub
ror
add
push
add
push
sub
les
add
sub
add
sub
enter
sub
add
sub
int3
or
add
push
add
push
sub
popf
push
add
sub
push
add
add
add
inc
add
add
xor
add
jae
add
push
jp
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
and
or
add
push
add
push
das
and
idiv
(bad)
call
sub
add
and
add
push
jae
add
or
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
aam
add
sub
add
cmp
inc
add
add
idiv
(bad)
call
sub
add
add
fmul
add
sub
add
sbb
inc
add
add
idiv
(bad)
jmp
rsqrtps
add
pop
add
push
jae
add
or
add
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
and
add
fmul
add
sub
add
pop
jge
add
add
jnp
add
add
xchg
add
or
add
add
or
add
outs
xchg
add
or
add
add
add
jnp
add
add
outs
rol
add
sub
xor
and
add
popa
add
adc
sub
or
and
add
loopne
add
sub
add
pop
jge
add
add
sub
add
xor
add
add
add
add
add
add
add
jnp
add
add
cdq
add
or
or
or
add
add
add
add
add
add
rol
add
sub
xor
add
add
add
add
add
sub
jnp
add
add
rol
add
sub
add
xor
add
add
add
add
add
and
or
add
push
add
push
sub
and
or
add
push
add
push
sub
sbb
add
lods
push
add
sub
push
and
add
sub
xor
add
add
add
add
add
and
or
add
push
add
push
sub
add
add
xor
add
add
add
add
add
and
or
add
push
add
push
sub
and
or
add
push
add
push
sub
sbb
add
mov
add
sub
push
outs
rol
add
sub
add
xor
add
add
add
add
add
and
or
add
push
add
push
sub
add
add
xor
add
add
add
and
or
add
push
add
push
sub
jnp
add
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
jnp
add
add
aam
add
add
add
add
outs
rol
add
add
add
add
sbb
inc
add
add
idiv
(bad)
inc
jnp
add
add
jnp
add
add
aam
add
add
add
add
add
add
sub
add
outs
aam
add
sub
add
add
or
sldt
add
add
add
add
scas
add
push
and
add
sub
adc
add
aas
add
add
add
add
push
inc
add
add
add
add
or
add
sub
add
mov
add
sub
sub
mov
add
sub
push
and
add
add
xor
add
and
add
jp
add
or
sbb
add
add
add
sub
add
mov
add
add
add
add
add
add
sub
add
xor
sub
adc
add
push
add
add
add
add
push
and
or
add
push
add
push
pop
inc
add
add
add
add
or
push
and
add
sub
add
sub
adc
add
sub
add
sub
clc
push
add
sub
push
and
add
add
xor
add
jae
add
push
jp
xor
add
add
popa
add
adc
or
inc
add
add
add
add
or
push
and
add
sub
add
sub
sbb
add
sub
add
sub
pop
push
add
sub
push
and
add
add
xor
add
jae
add
push
jp
add
adc
add
jecxz
add
jl
add
and
add
sub
add
or
and
add
sub
add
or
dec
add
add
add
pop
or
jnp
add
add
outs
cdq
add
or
add
mov
xor
sbb
add
add
(bad)
(bad)
call
sub
add
es
and
add
sub
add
pop
or
and
and
or
add
push
add
push
pop
or
add
add
add
test
inc
add
add
idiv
(bad)
inc
sub
add
add
(bad)
(bad)
jmp
push
push
add
sub
push
and
add
jp
sub
add
sub
add
or
add
add
lods
add
push
and
add
and
jnp
add
add
xor
add
sub
add
and
inc
add
add
idiv
(bad)
inc
jnp
add
add
xor
add
sub
add
cs
add
mov
add
push
adc
and
or
add
push
add
push
pop
inc
add
add
add
add
sbb
add
sub
add
add
add
ja
add
sub
push
outs
rol
add
sub
add
jp
add
sub
push
outs
rol
add
sub
and
add
sub
push
and
cmp
xor
add
jae
add
push
jp
and
add
sub
add
pop
or
(bad)
(bad)
inc
sub
adc
adc
inc
add
add
add
add
adc
add
and
add
sub
add
inc
or
add
push
add
push
jge
add
add
add
inc
or
add
push
add
push
jge
add
add
add
dec
or
add
push
add
push
jge
add
add
and
add
push
adc
add
xor
add
and
add
jp
adc
add
pushf
add
add
add
add
add
add
dec
or
add
push
add
push
inc
xchg
add
add
add
add
aad
add
and
add
and
add
sub
add
or
push
and
add
push
add
push
or
push
add
add
add
jnp
add
add
aam
add
pop
and
add
sub
add
pop
or
add
add
add
fstp
inc
add
add
idiv
(bad)
call
sub
add
es
and
add
push
add
push
pop
or
add
add
add
mov
add
idiv
(bad)
jmp
adc
add
add
add
add
and
add
sub
add
pop
inc
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
and
add
push
add
push
or
add
add
add
add
add
(bad)
add
or
push
push
add
push
xor
inc
add
add
idiv
(bad)
call
sub
add
es
push
add
sub
push
and
add
add
add
or
add
add
inc
add
add
add
or
add
jae
add
push
jp
jnp
add
add
ins
or
add
push
add
push
cs
add
add
(bad)
(bad)
inc
jnp
add
add
jo
add
sub
add
xor
sbb
add
add
(bad)
(bad)
inc
and
add
push
add
push
cs
add
add
add
js
add
sub
add
outs
aam
add
sub
jnp
add
add
jl
add
sub
add
xor
sbb
add
add
idiv
(bad)
inc
jnp
add
add
or
add
push
add
push
xor
add
test
add
sub
add
outs
aam
add
add
mov
add
sub
add
cs
sbb
add
(bad)
(bad)
inc
sub
and
add
push
xor
add
mov
pop
jge
add
add
add
or
adc
add
add
add
add
mov
jnp
add
add
outs
rol
add
sub
xor
add
add
add
add
add
jle
add
add
nop
or
add
push
add
push
sub
add
add
or
push
add
add
add
add
jle
add
add
xchg
or
add
push
add
push
sub
add
add
or
adc
add
add
add
add
and
push
add
push
sub
add
add
or
sbb
add
add
add
jnp
add
add
sub
pushf
or
add
push
add
push
sub
add
add
xor
add
add
add
add
add
add
and
add
and
add
sub
add
sub
add
add
xor
add
add
add
add
add
add
and
add
and
add
push
sub
add
xor
add
add
add
add
add
add
and
add
and
add
sub
add
sub
add
add
xor
add
add
add
add
add
add
and
and
add
push
sub
add
add
xor
add
add
add
add
add
add
add
push
and
add
sub
add
sub
add
add
xor
add
add
add
add
add
add
daa
add
push
and
add
sub
add
sub
add
add
xor
add
add
add
add
add
add
sbb
and
push
add
push
sub
add
add
xor
add
add
add
add
add
add
and
add
and
add
sub
add
sub
add
add
xor
add
add
add
add
add
add
and
add
and
or
add
push
add
push
sub
add
xor
add
add
add
add
add
add
push
add
push
and
add
sub
add
sub
add
add
xor
add
add
add
add
add
add
sub
add
and
add
sub
add
sub
add
add
xor
add
add
add
add
add
add
sub
add
and
add
sub
add
sub
add
add
xor
add
add
add
add
add
add
sub
add
and
add
sub
add
sub
add
add
xor
add
add
add
add
add
add
sbb
add
and
or
add
push
add
push
sub
add
xor
add
add
add
add
add
fmul
add
sub
add
sub
jnp
add
add
push
push
add
sub
push
and
add
add
add
add
outs
rol
add
add
add
add
pop
push
add
sub
push
and
add
sub
add
or
sub
add
add
add
add
add
inc
add
push
and
pop
push
add
sub
push
jae
add
push
jp
jnp
add
add
outs
rol
add
sub
add
xor
add
add
add
add
add
and
or
add
push
add
push
sub
add
push
sub
add
add
or
sbb
add
add
add
add
mov
es
or
add
push
add
push
cs
add
mov
add
sub
add
or
pop
add
add
add
add
sub
add
xor
add
add
add
add
add
add
cli
add
or
add
or
or
add
add
add
add
add
test
add
sub
add
add
or
add
add
add
add
add
add
add
add
sub
add
add
add
push
add
sub
add
push
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
sub
add
or
add
xor
add
add
add
add
add
add
fld
add
and
adc
add
add
add
add
add
fld
add
and
add
and
add
pop
inc
add
add
idiv
(bad)
call
sub
add
es
sub
add
push
sub
sbb
add
(bad)
(bad)
jmp
add
add
fld
add
and
add
and
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
leave
push
add
sub
push
and
fld
add
and
fiadd
add
and
add
sub
or
add
push
jp
push
sub
add
or
sub
add
or
add
or
adc
add
add
add
add
adc
jle
add
add
add
add
add
add
or
adc
add
add
add
add
adc
add
jge
add
add
add
xor
add
add
add
fs
add
sub
add
lea
add
add
sub
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
adc
add
add
add
adc
jnp
add
add
dec
push
add
sub
add
pop
add
add
add
imul
push
add
sub
add
sub
add
push
add
add
add
and
add
or
push
push
add
sub
add
pop
jge
add
add
add
xor
add
add
add
add
add
add
add
add
add
and
add
sub
add
jge
add
add
adc
add
xor
add
add
adc
jnp
add
add
and
add
push
add
push
pop
pop
lea
add
add
add
add
add
add
add
add
fiadd
add
add
jge
add
add
add
xor
add
add
add
add
add
add
add
pusha
push
add
sub
add
add
add
add
fild
add
sub
xor
add
add
add
add
add
jae
add
or
add
xor
add
add
add
add
add
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
or
push
push
add
push
inc
sub
ins
push
add
sub
add
sub
xor
add
add
add
add
add
sub
sbb
add
(bad)
(bad)
call
sub
add
add
add
or
add
sub
add
inc
sub
je
add
sub
add
sub
add
xor
add
add
add
add
add
sub
es
and
add
sub
add
sub
sub
add
sub
adc
add
add
add
add
adc
push
sub
add
sub
add
mov
add
add
adc
sub
add
sub
push
and
add
jp
adc
add
or
inc
add
add
idiv
(bad)
call
sub
add
adc
or
jl
add
sub
add
sub
sbb
add
add
(bad)
(bad)
jmp
test
add
sub
push
and
add
sub
push
and
add
jp
loopne
add
or
outs
fld
add
sub
add
add
(bad)
(bad)
inc
sub
sub
add
or
add
add
(bad)
(bad)
jmp
or
add
push
add
push
sub
adc
sub
add
or
pop
adc
sub
add
or
inc
add
add
idiv
(bad)
jmp
test
add
sub
add
sub
adc
sub
add
or
or
or
fild
add
and
inc
add
add
idiv
(bad)
inc
outs
fld
add
and
or
fiadd
add
and
mov
add
sub
add
xor
add
idiv
(bad)
dec
sub
add
add
or
or
mov
add
sub
add
xor
add
idiv
(bad)
dec
sub
add
add
or
or
nop
push
add
sub
add
sub
add
or
add
add
or
add
sub
add
pop
sub
add
or
add
adc
add
add
jecxz
add
outs
in
add
adc
pop
adc
add
xor
sbb
add
add
(bad)
(bad)
inc
sub
add
xor
popf
add
add
sub
add
sub
push
and
add
jp
in
add
or
outs
out
add
and
dec
adc
out
add
and
outs
call
es
or
add
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
add
or
jmp
add
or
outs
in
add
or
add
arpl
add
sub
add
add
(bad)
(bad)
(bad)
ficom
adc
adc
inc
add
add
idiv
(bad)
call
add
add
push
sub
add
add
add
add
and
push
add
add
sbb
add
pop
add
add
and
add
idiv
(bad)
call
sub
add
es
push
add
sub
push
and
add
jp
sub
in
add
or
pop
outs
out
add
or
add
outs
out
add
or
outs
arpl
add
and
or
sub
pop
outs
add
sub
adc
add
add
or
add
add
xor
add
add
test
add
jae
add
or
add
add
or
adc
sub
add
or
outs
repnz
or
inc
add
add
idiv
(bad)
call
sub
add
es
pop
outs
in
add
adc
sub
add
or
push
adc
(bad)
push
add
sbb
add
or
push
sub
add
add
add
add
(bad)
ds
add
add
add
adc
add
add
hlt
add
or
jae
add
or
add
add
or
cwde
push
add
sub
add
pop
push
sub
add
sub
sub
add
adc
add
add
add
add
or
push
add
sub
add
or
xchg
add
add
push
pop
outs
jecxz
add
and
add
add
outs
stc
add
or
mov
push
add
push
pop
xor
inc
add
add
idiv
(bad)
call
sub
add
es
add
or
movs
push
add
sub
add
or
or
add
or
add
or
and
push
add
push
pop
or
add
or
fld
add
sub
add
lods
push
add
sub
add
pop
add
sub
add
sub
and
push
add
push
pop
or
push
outs
fld
add
and
(bad)
jmp
adc
add
dec
add
add
sub
add
add
(bad)
(bad)
call
sub
add
and
push
add
sub
push
jae
add
or
outs
mov
or
add
or
push
and
add
push
outs
mov
fadd
add
sub
xor
add
sub
add
add
add
(bad)
(bad)
call
sub
add
add
add
and
push
add
push
sub
outs
fld
add
and
add
or
inc
add
add
idiv
(bad)
jmp
mov
push
add
push
sub
std
add
or
push
add
sub
add
or
cmp
add
outs
jecxz
add
add
outs
jecxz
add
and
add
and
inc
add
add
idiv
(bad)
jmp
les
add
sub
add
sub
and
push
add
sub
add
pop
or
add
add
or
int3
push
add
sub
add
sub
add
xor
add
add
add
add
add
ror
add
sub
add
add
or
add
and
add
daa
add
add
inc
add
or
add
add
or
add
add
or
inc
add
add
jae
add
or
or
add
sub
add
or
adc
add
add
add
add
aam
add
sub
add
sub
add
sub
xor
add
outs
fld
add
and
push
add
sub
add
xor
inc
add
add
idiv
(bad)
call
sub
add
add
fmul
add
sub
add
outs
jecxz
add
sub
sub
sbb
add
add
(bad)
(bad)
inc
outs
fld
add
and
inc
add
add
idiv
(bad)
call
add
adc
push
sub
adc
pop
add
push
and
add
sub
add
and
add
or
add
sub
or
add
jp
sbb
add
xchg
add
mov
add
add
lahf
push
add
sub
push
and
add
add
add
or
add
or
outs
in
add
or
or
add
or
sbb
pop
outs
add
sbb
inc
add
add
idiv
(bad)
call
sub
add
es
pop
outs
in
add
or
add
or
inc
add
add
idiv
(bad)
(bad)
ficom
sub
sbb
add
(bad)
(bad)
dec
outs
add
push
sub
add
adc
add
add
add
add
add
add
xor
xor
add
lea
add
add
push
add
sub
push
and
add
add
add
sbb
add
add
sub
jae
add
or
push
outs
push
add
or
add
xor
add
add
add
add
add
and
add
sub
push
and
add
rcr
add
add
inc
add
or
push
add
sub
add
lea
inc
add
push
and
add
or
cdq
add
add
add
add
and
add
sub
push
and
add
add
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
push
add
sub
add
sub
and
inc
add
or
add
or
inc
add
add
idiv
(bad)
jmp
call
push
add
push
sub
rcr
add
add
inc
add
or
sub
add
and
inc
add
add
idiv
(bad)
jmp
in
push
add
sub
add
sub
lock
add
sub
add
sub
add
adc
add
add
and
add
sub
push
sub
push
add
mov
add
pop
add
push
and
add
and
push
add
sub
add
or
outs
pop
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
add
or
and
push
add
sub
add
or
mov
shr
add
add
inc
add
or
add
sub
add
and
add
sbb
add
add
(bad)
(bad)
inc
outs
jae
add
and
push
add
sub
add
call
sub
add
and
add
sub
add
(bad)
out
add
add
or
or
add
add
sub
add
or
add
push
and
or
add
sub
add
adc
add
adc
and
add
sub
add
adc
cmp
add
adc
adc
call
add
or
pop
adc
outs
or
add
and
add
sub
add
xor
inc
add
add
idiv
(bad)
call
add
pop
and
add
sub
add
outs
or
add
and
add
outs
scas
add
or
inc
add
add
idiv
(bad)
jmp
sbb
add
sub
add
adc
and
add
sub
add
pop
adc
adc
adc
mov
jl
(bad)
call
add
(bad)
(bad)
call
add
add
add
idiv
(bad)
jmp
movs
push
add
sub
push
and
sub
or
add
jp
sub
add
push
je
add
add
and
sldt
sub
add
or
pop
shl
inc
add
or
add
or
inc
add
add
idiv
(bad)
inc
sub
add
push
and
inc
add
add
idiv
(bad)
inc
sub
es
add
add
sub
and
add
sub
push
add
cmp
add
and
add
jp
push
outs
or
add
or
jns
add
sbb
add
add
(bad)
(bad)
inc
outs
pop
add
or
je
add
add
sub
or
or
dec
add
sub
add
sub
add
and
add
and
inc
add
add
idiv
(bad)
inc
and
add
sub
add
lea
or
or
sub
add
sub
add
push
mov
add
or
add
or
sub
add
adc
or
push
add
adc
outs
lar
or
push
add
sub
push
and
push
add
sub
push
and
add
sub
push
and
push
add
sub
push
and
add
sub
add
outs
adc
add
and
pop
add
sub
push
and
push
add
sub
push
sub
add
or
adc
or
jp
add
add
add
add
add
or
pop
add
sub
push
add
jp
add
sub
push
and
add
and
push
add
sub
push
and
add
sub
push
and
push
add
sub
push
and
add
sub
add
outs
adc
add
and
pop
add
sub
push
push
and
add
sub
push
and
add
and
add
adc
add
and
add
add
adc
or
and
add
sub
add
pop
inc
push
add
add
add
add
add
fiadd
add
js
add
add
add
and
sldt
sub
add
cmp
inc
add
add
idiv
(bad)
call
sub
add
es
and
add
sub
add
cs
sbb
add
add
idiv
(bad)
(bad)
cmp
and
pop
add
sub
push
and
add
sub
and
pop
add
sub
push
and
add
sub
and
pop
add
sub
push
and
add
sub
and
pop
add
sub
push
outs
rol
add
sub
and
pop
add
sub
push
and
add
sub
and
pop
add
sub
push
and
add
sub
add
inc
sldt
sub
add
cs
add
idiv
(bad)
call
or
clc
pop
add
sub
push
outs
rol
add
sub
and
add
push
add
push
xor
add
outs
aam
add
sub
add
pop
add
push
sub
add
xor
jl
add
pop
add
adc
add
add
idiv
(bad)
call
sub
add
add
aam
add
add
sbb
add
add
idiv
(bad)
jmp
dec
sldt
sub
add
or
sbb
jae
add
and
add
push
push
and
add
push
add
push
pop
or
add
add
or
ficom
inc
add
add
idiv
(bad)
inc
add
add
idiv
(bad)
inc
add
aam
add
sub
xor
add
add
add
and
add
sub
add
and
add
push
add
push
sub
sub
add
sbb
add
add
sub
add
or
add
fild
add
and
inc
add
add
idiv
(bad)
call
sub
add
and
add
sub
add
sub
adc
sub
add
or
add
or
add
add
add
add
push
outs
sbb
add
or
adc
sub
sbb
add
add
(bad)
(bad)
inc
outs
add
pop
sub
adc
add
add
adc
adc
add
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
and
add
push
add
push
xor
add
idiv
(bad)
call
sub
add
add
pusha
sldt
sub
add
xor
add
sub
add
pop
sub
and
add
sub
add
xor
sbb
add
add
(bad)
(bad)
inc
and
add
push
add
push
xor
sbb
add
add
(bad)
(bad)
inc
and
add
sub
add
pop
and
add
push
add
push
pop
sub
and
add
sub
add
xor
sbb
add
add
(bad)
(bad)
inc
and
add
push
add
push
xor
sbb
add
add
idiv
(bad)
inc
and
push
add
push
pop
and
add
push
pop
sub
mov
add
sub
add
sub
add
add
or
inc
add
add
add
add
and
add
push
xor
sbb
add
add
(bad)
(bad)
call
sub
add
add
nop
sldt
sub
add
pop
shr
add
xchg
sldt
sub
add
pop
and
push
add
push
pop
shr
add
xor
inc
add
add
add
add
std
pop
add
sub
push
and
add
add
outs
adc
add
and
add
and
add
push
or
adc
pop
add
sbb
mov
push
add
push
or
add
sub
adc
add
add
add
sub
add
adc
add
and
add
nop
add
adc
add
push
or
add
add
add
inc
pop
add
push
jae
add
or
sub
add
and
adc
add
xchg
add
add
and
add
sub
push
and
add
add
add
add
push
sub
add
add
(bad)
(bad)
call
sub
add
add
add
or
adc
add
and
inc
add
add
idiv
(bad)
inc
add
add
or
add
and
pop
or
sub
or
or
add
or
and
pop
add
sub
push
and
add
or
add
and
add
jp
adc
add
add
and
add
sub
push
and
add
add
add
or
add
or
movs
sldt
sub
add
or
push
push
pop
add
outs
enter
sub
add
push
and
test
add
sub
add
pop
or
add
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
sub
add
or
sub
add
add
add
add
add
add
(bad)
(bad)
call
sub
add
and
add
sub
push
and
sbb
add
and
or
pop
add
add
add
add
sub
add
add
(bad)
(bad)
call
sub
add
es
add
add
or
add
xor
test
add
add
and
add
pop
add
push
and
add
add
add
or
add
or
inc
add
add
idiv
(bad)
call
sub
add
add
add
or
add
add
(bad)
(bad)
inc
outs
sbb
add
sub
add
add
(bad)
(bad)
inc
sar
add
add
inc
add
or
inc
add
add
idiv
(bad)
jmp
lods
sldt
sub
add
sub
sub
add
and
inc
add
add
idiv
(bad)
jmp
mov
add
sub
add
sub
mov
add
sub
add
sub
add
add
or
push
add
add
add
add
and
add
pop
add
push
sub
push
add
add
or
mov
push
add
push
sub
and
add
push
adc
ror
add
push
add
push
(bad)
out
add
add
sbb
add
adc
add
les
add
sub
add
inc
sub
add
xor
add
add
add
add
add
ins
pop
add
sub
push
and
add
add
add
or
inc
add
add
idiv
(bad)
call
sub
add
add
add
push
and
sldt
sub
add
sub
add
or
dec
add
add
add
add
and
add
pop
add
push
and
add
add
add
or
inc
add
add
idiv
(bad)
call
sub
add
add
add
or
mov
add
sub
add
and
and
sldt
sub
add
sub
adc
add
aaa
add
add
sub
add
add
(bad)
(bad)
call
sub
add
es
sldt
sub
add
sub
outs
inc
add
or
sub
add
or
push
outs
xchg
add
or
xor
mov
add
add
add
add
outs
pop
add
sub
push
and
add
add
add
or
and
add
sub
push
and
add
or
add
sub
push
and
add
jp
outs
sbb
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
add
or
sar
add
add
inc
add
or
inc
add
add
idiv
(bad)
call
add
add
or
sub
and
pop
add
sub
push
and
add
or
outs
pop
add
sub
push
and
add
jp
add
or
sub
add
add
add
add
cmp
pop
add
push
sub
push
add
add
or
push
add
sub
aam
add
sub
add
inc
sub
xor
or
add
xchg
add
adc
add
add
sub
add
and
or
add
add
add
add
and
add
sub
push
and
add
add
dec
pop
add
sub
push
and
add
add
add
sub
add
sub
add
xor
add
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
sldt
sub
add
sub
pop
add
or
add
sbb
add
add
(bad)
(bad)
inc
outs
pop
add
or
inc
add
add
idiv
(bad)
inc
add
bound
add
(bad)
(bad)
inc
outs
push
add
or
fmul
add
sub
add
or
call
sub
add
sub
add
push
xor
add
sldt
sub
add
or
mov
and
sldt
sub
add
pop
or
xor
sbb
add
add
idiv
(bad)
inc
outs
sbb
add
sub
sbb
add
add
(bad)
(bad)
inc
outs
sbb
add
sub
add
add
(bad)
(bad)
inc
add
add
or
sub
add
and
inc
add
add
idiv
(bad)
inc
sldt
sub
add
sub
outs
pop
add
or
add
add
(bad)
(bad)
inc
sldt
sub
add
sub
add
add
or
sub
add
and
add
xor
mov
add
adc
and
add
sub
push
and
add
add
add
or
outs
and
add
and
push
add
add
inc
add
or
sub
add
and
outs
sbb
add
and
pop
pop
add
sub
push
add
cmp
add
and
add
jp
outs
jae
add
and
add
sub
add
call
sub
add
and
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
and
add
sub
push
and
add
or
add
jp
xor
stos
add
add
outs
pop
add
sub
push
and
add
add
sbb
add
sub
add
and
sub
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
outs
sbb
add
and
mov
add
pop
add
push
add
cmp
add
and
add
jp
outs
jae
add
and
add
sub
add
call
sub
add
add
add
or
sbb
add
add
idiv
(bad)
call
and
pop
add
push
and
add
or
add
jp
adc
add
pop
add
add
and
pop
add
push
and
add
add
add
or
add
and
imul
or
inc
add
add
idiv
(bad)
call
sub
add
es
sub
add
push
or
clc
sldt
sub
add
or
cmp
or
add
or
add
push
pop
add
sbb
add
or
add
add
(bad)
(bad)
jmp
cld
sldt
sub
add
sub
and
adc
add
push
add
push
pop
or
add
add
or
jbe
add
push
outs
sbb
add
sub
and
add
sub
add
or
outs
jecxz
add
and
add
adc
add
adc
add
idiv
(bad)
jmp
or
add
sub
add
sub
and
add
sub
add
pop
or
add
or
rcr
add
add
idiv
(bad)
jmp
push
and
pop
add
sub
push
push
sub
add
jae
add
or
adc
add
sub
add
sub
adc
add
pushf
add
add
and
pop
add
sub
push
and
add
add
add
or
adc
add
sub
add
pop
inc
add
add
cmp
add
dec
add
add
add
add
and
adc
add
push
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
sub
add
add
outs
and
add
and
mov
add
outs
and
add
sub
je
add
add
add
or
and
pop
add
sub
push
and
add
sub
push
jae
add
or
xor
inc
add
add
and
pop
add
sub
push
and
add
add
add
add
push
sub
sbb
add
(bad)
(bad)
call
sub
add
es
sub
add
push
and
adc
add
push
add
push
sub
add
or
sub
add
add
add
add
cmp
pop
add
push
and
add
add
add
or
and
add
sub
add
inc
sub
add
add
or
adc
add
add
add
and
add
sub
add
sub
add
and
add
xor
add
and
add
sub
push
and
add
add
inc
inc
add
sub
push
and
add
add
add
outs
and
add
and
sldt
sub
add
xor
xlat
add
add
and
pop
add
sub
push
and
add
add
cmps
pop
add
sub
push
and
add
add
add
or
and
adc
add
push
add
push
and
and
add
sub
add
and
inc
add
add
idiv
(bad)
call
sub
add
sub
je
add
add
outs
outs
add
or
add
add
add
and
es
pop
or
mov
add
sub
push
and
add
or
add
and
add
sub
push
and
add
or
(bad)
pop
add
sub
push
and
add
or
add
and
add
sub
push
and
add
jp
sub
add
add
add
add
jns
das
mov
add
adc
add
add
and
pop
add
sub
push
and
add
add
cmps
pop
add
sub
push
and
add
add
add
or
xor
add
sub
add
cs
inc
add
add
idiv
(bad)
call
sub
add
es
and
add
sub
add
sbb
inc
add
add
idiv
(bad)
jmp
sbb
add
add
pop
add
or
add
add
add
outs
daa
add
or
and
add
sub
push
add
add
or
add
and
add
sub
push
and
add
jp
add
xor
add
add
xchg
add
adc
outs
test
add
and
cmp
add
sub
add
cs
inc
add
add
idiv
(bad)
call
sub
add
es
and
add
sub
add
cs
sbb
add
(bad)
(bad)
jmp
sbb
inc
adc
add
push
add
push
sub
je
add
add
add
or
adc
add
push
add
push
sub
add
xor
add
add
xchg
add
adc
outs
test
add
and
dec
adc
add
push
add
push
cs
inc
add
add
idiv
(bad)
call
sub
add
es
and
add
push
add
push
cs
sbb
add
add
(bad)
(bad)
jmp
sbb
push
adc
add
push
add
push
sub
je
add
add
add
or
adc
add
push
add
push
sub
add
xor
add
add
add
add
add
pop
add
sbb
inc
add
or
add
push
sub
adc
add
and
add
fwait
add
adc
add
or
push
add
outs
push
add
or
add
push
add
outs
sub
add
outs
sub
add
push
sub
xor
add
add
add
add
add
and
add
sub
add
sub
add
sub
xor
add
add
add
add
adc
add
and
pop
adc
add
push
add
push
sub
add
sub
add
xor
add
add
add
add
add
and
pop
add
sub
push
and
add
add
pop
add
sbb
inc
add
or
add
or
add
sub
add
or
inc
add
add
add
add
and
add
pop
add
push
and
add
add
add
or
or
add
pop
add
push
and
add
or
add
or
add
and
add
and
pop
add
add
adc
and
pop
add
sub
push
sub
push
add
add
push
add
xor
add
and
add
or
and
add
sub
add
pop
sub
pop
inc
add
add
idiv
(bad)
call
sub
add
es
adc
add
push
add
push
pop
sub
sbb
add
add
(bad)
(bad)
inc
push
push
add
push
popa
or
sbb
add
ins
adc
add
push
add
push
pop
add
add
or
add
add
add
or
add
sub
add
add
(bad)
(bad)
inc
sub
add
xor
add
add
add
add
add
and
add
pop
add
push
and
add
add
dec
pop
add
sub
push
and
add
add
add
or
add
sub
push
and
add
sub
push
add
cmp
add
sub
push
add
outs
xor
add
sub
add
adc
add
add
and
add
sub
add
(bad)
out
add
add
push
and
add
push
add
push
add
add
push
sub
add
xor
cmp
add
adc
and
pop
add
sub
push
and
add
add
dec
pop
add
sub
push
sub
add
sub
add
adc
add
and
add
and
sub
add
or
add
xor
add
add
adc
sub
add
add
(bad)
(bad)
call
sub
add
and
pop
add
push
and
add
jp
js
add
sub
add
or
xor
push
outs
jae
add
and
add
sub
sbb
add
add
idiv
(bad)
jmp
jl
add
sub
add
sub
and
push
add
push
pop
or
add
add
or
lds
inc
add
add
idiv
(bad)
jmp
test
add
sub
add
sub
add
adc
add
test
add
pop
add
adc
sub
add
add
(bad)
(bad)
call
sub
add
and
pop
add
push
and
add
jp
outs
jne
add
and
inc
add
add
idiv
(bad)
jmp
mov
add
sub
add
sub
mov
add
sub
add
or
xor
push
outs
jae
add
and
add
and
inc
add
add
idiv
(bad)
jmp
nop
adc
add
push
add
push
sub
and
add
push
pop
or
add
add
or
inc
add
add
idiv
(bad)
jmp
cwde
adc
add
push
add
push
sub
xor
add
add
add
add
add
add
add
(bad)
(bad)
call
sub
add
and
pop
add
push
and
add
jp
sub
add
sub
push
and
add
jp
outs
jne
add
and
add
or
add
add
or
add
or
and
add
push
add
add
or
add
sub
add
sub
add
or
sub
adc
xor
add
and
outs
jne
add
and
add
or
and
add
push
add
add
or
test
add
sub
add
sub
add
or
sub
add
cmp
add
and
add
xor
add
add
add
add
add
add
xor
push
sbb
add
add
idiv
(bad)
call
sub
add
and
add
push
sub
add
add
or
add
and
or
push
add
add
add
add
sub
add
or
inc
add
add
idiv
(bad)
call
sub
add
and
push
add
push
sub
sub
push
sub
sbb
add
add
(bad)
(bad)
jmp
mov
add
sub
add
sub
mov
push
add
push
sub
xor
add
add
add
add
add
add
dec
add
push
sub
add
add
or
inc
add
add
add
add
sub
add
or
inc
add
add
idiv
(bad)
call
sub
add
add
sbb
add
add
(bad)
(bad)
inc
add
add
or
add
adc
idiv
(bad)
inc
outs
aaa
add
or
add
xor
add
add
add
add
add
add
mov
push
add
push
sub
add
sub
add
xor
add
pop
add
push
or
add
add
add
add
into
add
add
sub
add
add
(bad)
(bad)
call
sub
add
and
pop
add
push
and
add
jp
jnp
add
add
rcl
add
push
add
push
xor
sbb
add
add
(bad)
(bad)
jmp
mov
pop
add
push
and
pop
add
sub
push
and
add
jp
jae
add
or
jae
add
or
push
pop
or
push
pop
add
push
jae
add
push
sub
push
pop
outs
sbb
add
and
add
xor
push
add
add
les
add
sub
add
or
xor
sub
add
add
(bad)
(bad)
call
sub
add
add
add
or
or
enter
sub
add
or
push
outs
pop
add
push
add
add
or
inc
add
add
idiv
(bad)
jmp
add
xor
add
pop
add
push
or
sub
add
sub
push
and
add
jp
jae
add
or
jae
add
or
or
int3
adc
add
push
add
push
jge
add
add
pop
or
push
pop
add
push
jae
add
push
sub
push
pop
outs
sbb
add
and
or
and
add
add
add
add
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
adc
add
add
xor
add
add
jae
add
or
jae
add
or
and
adc
add
push
add
push
or
aaa
or
pop
inc
add
add
idiv
(bad)
call
sub
add
es
adc
add
push
add
push
or
or
add
add
or
outs
sbb
es
outs
cmp
add
and
mov
add
sub
xor
add
add
add
add
add
adc
push
add
push
and
add
or
xor
add
add
add
add
add
add
(bad)
(bad)
call
sub
add
and
pop
add
sub
push
and
add
jp
add
push
add
push
sub
xor
add
pop
add
push
or
adc
rol
add
cmp
add
sbb
add
add
idiv
(bad)
call
sub
add
or
outs
cmp
add
and
add
jge
add
add
outs
cmp
es
add
or
or
add
add
outs
aas
add
or
add
or
add
or
inc
add
add
idiv
(bad)
(bad)
ficom
sub
sbb
add
add
(bad)
(bad)
dec
outs
add
and
add
sub
push
and
add
sub
add
jae
add
or
pop
add
inc
pop
add
push
jae
add
or
add
or
add
add
add
inc
add
je
adc
add
add
xor
add
add
add
add
add
and
pop
add
push
sub
push
and
add
into
add
add
add
add
and
add
idiv
(bad)
call
sub
add
and
pop
add
push
and
add
jp
and
adc
add
push
add
push
xor
and
pop
add
push
and
pop
add
push
jae
add
or
add
jne
add
and
and
adc
add
push
add
push
xor
inc
add
add
idiv
(bad)
jmp
and
add
pop
add
push
and
add
jp
sub
sbb
add
add
(bad)
(bad)
inc
outs
jne
add
and
sbb
add
(bad)
(bad)
inc
and
adc
add
push
add
push
push
outs
xor
add
and
inc
add
or
sub
add
or
pop
sub
sub
add
xor
add
add
add
jae
add
or
push
jae
add
or
pop
sub
xor
add
add
add
sbb
add
idiv
(bad)
call
sub
add
adc
(bad)
adc
push
sub
outs
jne
add
jae
add
or
sbb
add
aaa
add
add
add
or
push
add
pop
add
push
push
outs
sbb
add
and
push
sub
sbb
add
(bad)
(bad)
call
sub
add
es
outs
add
pop
sub
add
add
add
push
add
sbb
sbb
adc
add
mov
add
adc
and
pop
add
push
and
add
add
call
push
add
push
arpl
in
adc
add
push
add
push
pop
sub
add
push
or
and
adc
add
push
add
push
arpl
hlt
adc
add
push
add
push
pop
sub
add
push
and
clc
adc
add
push
add
push
arpl
cld
adc
add
push
add
push
pop
sub
add
push
and
add
add
sub
add
pop
sub
add
push
or
add
sub
add
outs
aam
add
add
or
add
sub
add
outs
aam
add
add
outs
aam
add
add
outs
aam
add
add
outs
aam
add
add
outs
aam
add
sub
xor
add
add
add
add
add
add
or
outs
jne
add
sub
add
add
(bad)
(bad)
call
sub
add
and
pop
add
push
and
add
or
add
or
add
add
xor
add
add
add
add
add
add
pop
add
push
add
inc
add
push
sub
pop
inc
add
add
idiv
(bad)
call
sub
add
es
pop
add
sub
push
and
add
or
add
or
add
add
or
inc
add
add
add
add
and
add
sub
push
and
add
add
add
or
add
add
(bad)
(bad)
call
sub
add
and
pop
add
push
add
cmp
add
add
add
or
add
add
xor
add
add
add
add
add
add
push
pusha
add
sub
push
add
cmp
add
and
add
sub
add
xor
add
add
add
add
add
sub
add
add
(bad)
(bad)
call
sub
add
add
add
or
outs
fld
add
and
inc
add
add
idiv
(bad)
inc
jae
add
or
add
add
or
sbb
add
add
add
add
and
add
sub
push
and
add
or
add
sub
xor
add
add
add
add
add
sub
add
add
(bad)
(bad)
call
sub
add
add
add
or
outs
mov
or
inc
add
add
idiv
(bad)
inc
jae
add
or
add
add
or
push
add
add
add
add
sub
add
add
(bad)
(bad)
call
sub
add
add
add
or
add
add
or
cmp
add
add
add
add
or
add
sub
add
xor
inc
add
add
idiv
(bad)
call
sub
add
add
mov
add
and
pop
add
push
and
add
jp
add
add
or
das
add
add
add
add
and
adc
add
push
add
push
xor
sbb
add
(bad)
(bad)
call
sub
add
add
mov
add
add
inc
add
or
add
xor
add
add
add
add
add
sub
add
add
(bad)
(bad)
call
sub
add
add
mov
add
and
pusha
add
sub
push
and
add
jp
add
or
and
add
add
sub
add
add
(bad)
(bad)
call
sub
add
add
mov
add
add
inc
add
or
add
add
xor
dec
add
add
add
add
adc
push
(bad)
push
pop
add
sbb
add
or
add
sub
add
sub
inc
add
add
idiv
(bad)
call
sub
add
add
mov
add
sbb
add
add
pop
add
push
jae
add
or
add
xor
add
add
add
add
add
sbb
add
sub
add
xor
add
mov
add
add
inc
add
or
add
or
and
add
add
sub
pop
inc
add
add
idiv
(bad)
call
sub
add
add
add
or
add
jp
add
add
xor
add
add
add
add
add
sub
add
add
(bad)
(bad)
call
sub
add
es
jae
add
or
add
xor
add
add
add
add
add
and
popa
add
sub
push
and
add
add
jge
add
add
add
cmp
add
add
add
adc
add
mov
add
adc
jnp
add
add
or
movs
add
add
add
(bad)
(bad)
call
sub
add
es
and
popa
add
sub
push
sub
add
sub
sbb
add
add
(bad)
(bad)
inc
jnp
add
add
and
add
add
add
dec
add
add
push
add
push
add
jnp
add
add
add
jle
add
add
push
add
push
add
add
add
add
jle
add
add
push
add
push
add
add
add
add
or
add
and
add
add
jnp
add
add
add
add
add
add
add
sub
add
push
sub
xor
add
add
add
add
add
sub
add
xor
add
sub
add
and
add
sbb
add
sub
add
adc
add
add
add
dec
add
or
add
adc
sub
adc
outs
retf
or
add
or
and
add
sub
add
and
add
sub
add
or
add
or
add
sub
add
adc
outs
arpl
add
and
sub
push
jne
add
add
pop
adc
sub
sbb
add
add
(bad)
(bad)
call
sub
add
adc
outs
add
adc
add
push
add
push
pop
adc
mov
fs
(bad)
call
inc
add
add
idiv
(bad)
jmp
sub
add
sub
add
or
add
xor
add
sub
add
sub
sub
sbb
add
add
add
add
rcl
add
lea
add
sbb
add
lods
add
add
xor
add
sub
add
or
sub
add
and
and
adc
add
push
add
push
adc
outs
add
add
adc
or
sub
sbb
add
add
idiv
(bad)
call
sub
add
or
add
or
fiadd
or
add
or
mov
adc
add
push
add
push
sub
add
or
add
or
sbb
add
add
(bad)
(bad)
inc
and
add
sub
add
pop
or
add
inc
adc
add
push
add
push
pop
adc
add
mov
mov
inc
add
add
idiv
(bad)
(bad)
fiadd
fiadd
push
sub
add
add
add
add
and
add
add
add
add
add
xor
xor
add
and
add
and
add
sub
add
or
dec
add
or
add
or
add
and
add
jge
add
and
fiadd
push
sub
add
add
add
add
or
and
add
xor
loopne
add
test
add
and
add
push
add
push
or
sub
add
and
push
and
add
sub
add
adc
cmp
adc
call
or
add
xchg
add
and
adc
or
inc
add
add
idiv
(bad)
call
sub
add
ficom
sub
sbb
add
add
(bad)
(bad)
dec
outs
dec
add
or
or
add
or
mov
adc
add
push
add
push
sub
add
or
add
or
inc
add
add
idiv
(bad)
inc
and
add
sub
add
pop
or
add
fiadd
adc
and
add
push
add
push
pop
adc
adc
adc
mov
pop
(bad)
(bad)
call
inc
add
add
idiv
(bad)
(bad)
fiadd
fiadd
push
sub
sbb
add
add
add
add
add
or
rcr
add
lea
add
sbb
add
sub
add
test
sub
add
or
mov
pusha
adc
add
push
add
push
inc
or
push
fiadd
and
add
push
add
push
sub
sub
add
add
add
add
add
sbb
add
lea
add
sbb
add
pop
add
add
sub
add
and
imul
add
push
push
add
push
sub
sub
add
add
add
add
(bad)
sldt
lea
add
sbb
add
dec
add
add
sub
add
or
mov
ins
adc
add
push
add
push
xor
sbb
add
add
(bad)
(bad)
call
sub
add
es
and
add
sub
add
call
outs
push
add
or
fiadd
fiadd
adc
pop
sub
add
add
add
add
dec
dec
add
lea
add
adc
add
push
add
add
dec
add
or
and
add
push
add
push
or
call
or
add
and
js
add
sub
add
pop
or
xor
sbb
add
add
(bad)
(bad)
call
sub
add
sub
adc
add
xor
add
adc
sub
add
and
imul
(bad)
(bad)
call
sub
add
sub
and
add
push
add
push
call
retf
add
add
xor
add
add
lods
add
adc
sub
add
or
mov
add
push
and
push
add
push
call
and
adc
add
jg
add
scas
add
adc
add
or
sub
add
or
adc
test
add
sub
add
adc
adc
push
add
or
add
and
and
add
sub
add
add
(bad)
(bad)
call
sub
add
es
or
add
or
add
add
push
add
push
pop
adc
mov
mov
inc
add
add
idiv
(bad)
inc
outs
mov
sub
sbb
add
add
mov
add
sub
add
or
jae
add
or
and
push
add
push
and
add
push
add
je
add
and
cld
add
or
std
add
or
inc
add
add
idiv
(bad)
call
sub
add
or
add
or
push
sub
add
and
add
sub
add
ss
sbb
add
(bad)
(bad)
inc
outs
sbb
add
adc
(bad)
or
sub
add
fsub
pushf
adc
add
push
add
push
and
push
add
push
add
je
add
and
cld
add
or
std
add
or
jno
add
sbb
add
(bad)
(bad)
inc
or
or
add
outs
xchg
add
or
add
sub
add
xor
and
push
add
push
pop
adc
sub
add
and
inc
add
add
idiv
(bad)
dec
and
add
push
ss
sbb
add
(bad)
(bad)
inc
outs
sbb
add
adc
fld
add
add
pop
push
sub
add
and
add
sub
add
inc
fiadd
add
sbb
add
add
(bad)
(bad)
inc
outs
sbb
add
and
push
add
or
pop
and
add
push
adc
cmp
pop
adc
call
adc
add
push
add
push
lea
add
add
or
or
mov
push
add
push
and
adc
add
push
add
push
popf
adc
outs
xor
add
pop
push
sub
add
and
add
sub
add
ss
sbb
add
(bad)
(bad)
call
add
outs
sbb
add
outs
sub
es
sbb
add
add
(bad)
(bad)
call
add
adc
add
push
add
push
pop
outs
pop
add
or
add
or
add
and
sub
or
int3
adc
add
push
add
push
pop
adc
adc
adc
mov
dec
(bad)
(bad)
(bad)
fimul
or
jns
add
fdivr
add
or
adc
sub
add
add
add
push
add
add
add
test
add
or
add
add
add
add
add
les
add
pop
add
add
add
add
add
add
add
add
xor
pop
add
mov
add
add
add
or
jle
add
or
xor
jle
add
or
and
add
sub
push
and
add
add
jp
add
sub
push
sub
add
or
add
or
jae
add
or
outs
pop
add
or
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
adc
fst
add
add
outs
pop
add
or
add
and
rol
add
adc
outs
pop
add
or
add
or
add
push
add
push
(bad)
fld
add
adc
and
pop
add
push
and
aas
add
sbb
add
or
iret
popa
add
sub
push
and
add
je
add
add
add
add
aam
add
sub
add
call
inc
add
add
idiv
(bad)
inc
jle
add
or
adc
fcom
add
sub
add
call
jle
add
or
fcom
add
sub
add
(bad)
fld
add
adc
add
sub
push
and
aas
add
sbb
add
or
and
adc
add
push
add
push
call
adc
outs
popa
add
or
(bad)
(bad)
ficom
adc
sub
sbb
add
add
(bad)
(bad)
call
pop
outs
add
fiadd
es
adc
fiadd
push
sub
push
sub
inc
xor
add
add
add
add
add
add
add
add
add
add
add
test
add
push
add
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
or
add
push
add
push
push
dec
add
add
add
add
xor
add
add
mov
add
add
popa
add
sub
push
outs
jnp
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
and
popa
add
sub
push
and
add
and
add
or
add
or
add
and
add
and
adc
add
push
add
push
push
add
xchg
add
push
and
add
xor
add
add
add
add
add
add
or
add
sub
add
push
add
xchg
add
push
and
xor
add
add
mov
add
push
add
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
es
adc
add
push
add
push
sub
lock
add
push
add
push
or
add
add
add
idiv
(bad)
jmp
hlt
adc
add
push
add
push
or
clc
adc
add
push
add
push
or
add
cld
adc
add
push
add
push
and
adc
add
push
add
push
push
pusha
adc
sub
es
sub
sbb
add
add
idiv
(bad)
inc
add
add
add
sub
add
adc
or
add
sub
add
and
add
sub
add
push
pusha
and
adc
add
push
add
push
adc
adc
sub
es
add
adc
add
sub
add
push
add
add
add
push
and
push
and
adc
add
push
add
push
adc
and
pop
pop
sub
sbb
add
add
(bad)
(bad)
inc
sub
fsub
sbb
add
sub
add
sub
add
add
add
add
pop
add
add
add
xor
add
add
and
add
sub
add
sub
or
sub
add
add
(bad)
(bad)
call
sub
add
add
add
and
add
sub
add
sub
push
sub
xor
add
add
mov
add
adc
add
add
add
idiv
(bad)
call
sub
add
es
add
push
and
sub
sub
add
sub
add
or
add
add
idiv
(bad)
jmp
sub
add
sub
add
or
xor
add
sub
add
or
add
xor
add
sub
add
and
adc
add
push
add
push
pop
pusha
adc
sub
es
add
and
add
sub
add
adc
inc
adc
add
push
add
push
adc
add
push
add
push
lea
add
add
push
adc
and
add
sub
add
and
add
push
add
push
sub
add
or
push
adc
add
push
add
push
adc
push
adc
push
and
popa
add
add
idiv
(bad)
call
add
or
or
push
adc
add
push
add
push
pop
inc
pop
add
add
add
add
add
add
add
add
add
cmp
add
add
add
and
add
sub
add
ss
inc
add
add
idiv
(bad)
call
push
adc
add
push
add
push
pop
loopne
sub
add
add
(bad)
(bad)
call
pop
and
add
sub
add
pop
adc
sub
add
and
adc
add
push
add
push
adc
outs
jge
add
and
add
add
add
or
or
push
add
or
push
and
add
sub
add
adc
or
or
ins
adc
add
push
add
push
adc
adc
and
add
sub
add
adc
outs
data16
or
cmp
adc
adc
adc
pop
outs
xor
add
and
add
adc
and
add
push
add
push
pop
adc
adc
and
add
sub
add
adc
outs
data16
or
or
or
mov
add
idiv
(bad)
call
or
add
or
sub
adc
and
add
push
add
push
sub
add
and
add
or
adc
inc
add
add
idiv
(bad)
dec
sub
push
sub
inc
sbb
add
add
add
add
out
add
add
add
adc
add
add
xor
add
add
adc
adc
add
push
add
push
lea
add
add
and
add
push
or
add
mov
add
sub
add
push
add
add
add
idiv
(bad)
call
sub
add
es
add
push
and
sub
mov
add
sub
add
or
sub
sbb
add
add
(bad)
(bad)
jmp
nop
adc
add
push
add
push
or
xchg
adc
add
push
add
push
or
adc
add
push
add
push
and
add
push
or
add
mov
add
and
add
bound
mov
push
add
push
adc
add
push
add
push
adc
push
and
push
add
push
and
add
push
sub
add
or
mov
add
sub
add
adc
lea
add
and
add
adc
inc
add
add
idiv
(bad)
dec
add
add
ficom
or
sbb
add
add
(bad)
(bad)
dec
sub
fadd
lea
add
add
pop
push
adc
pop
sub
add
or
pop
sub
add
add
add
add
ja
mov
add
add
add
add
or
adc
add
add
add
add
add
sub
es
add
add
add
add
xor
add
add
add
add
add
add
xchg
add
push
and
add
sub
xor
add
add
push
and
or
add
adc
pop
sub
sub
add
or
add
sub
adc
add
add
add
add
xchg
add
push
and
or
add
adc
pop
sub
sub
add
or
add
sub
add
xor
add
add
add
add
sub
push
sub
add
or
inc
add
or
push
jae
add
or
add
add
xor
xor
add
add
add
add
add
call
push
sub
add
or
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
or
push
jae
add
or
add
xor
add
add
add
add
add
add
mov
add
sub
add
sub
es
sbb
add
add
(bad)
(bad)
call
sub
add
and
push
add
push
sub
add
mov
push
add
push
sub
add
xor
add
add
push
and
push
sbb
add
add
(bad)
(bad)
call
sub
add
es
adc
add
push
add
push
sub
les
add
sub
add
sub
xor
add
add
add
add
add
add
enter
sub
add
sub
or
int3
adc
add
push
add
push
sub
add
rcl
add
sub
add
sub
sbb
push
add
add
adc
adc
xlat
add
push
and
aam
add
sub
add
sub
fcom
add
sub
add
or
push
sbb
add
add
(bad)
(bad)
call
sub
add
es
adc
add
push
add
push
or
loopne
add
sub
add
or
in
add
sub
add
or
add
call
push
add
push
and
adc
add
push
add
push
push
pusha
adc
sub
es
lock
add
push
add
push
or
or
sub
fmul
sub
add
adc
add
add
xor
add
sbb
or
add
add
mov
add
add
das
pop
inc
add
add
idiv
(bad)
call
sub
add
es
add
push
sub
add
add
(bad)
(bad)
jmp
hlt
adc
add
push
add
push
sub
clc
adc
add
push
add
push
or
adc
add
idiv
(bad)
jmp
cld
adc
add
push
add
push
or
add
add
sub
add
or
add
add
add
sub
add
and
adc
add
push
add
push
push
pusha
adc
sub
es
sub
sbb
add
add
(bad)
(bad)
inc
add
or
add
sub
add
adc
adc
add
sub
add
and
add
sub
add
push
pusha
and
adc
add
push
add
push
adc
adc
sub
es
sub
add
add
(bad)
(bad)
jmp
sbb
add
sub
add
adc
sbb
or
sub
fsub
and
add
sub
add
sub
add
add
add
add
pusha
add
add
add
xor
add
add
add
sub
sub
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
and
add
sub
add
sub
sub
add
sub
add
or
or
sub
add
sub
add
or
xor
add
sub
add
or
xor
add
sub
add
or
and
and
add
pop
add
push
and
add
and
add
jo
add
pop
add
jo
add
add
sub
add
xor
add
idiv
(bad)
inc
or
cmp
add
sub
add
pop
outs
imul
adc
and
add
sub
add
or
add
or
adc
add
push
add
push
and
add
sub
add
push
pusha
adc
sub
push
adc
sub
sub
es
add
add
(bad)
(bad)
jmp
dec
adc
add
push
add
push
or
pop
pop
sub
sbb
add
add
idiv
(bad)
inc
sub
fmul
sub
adc
add
add
pop
add
add
sbb
push
add
add
add
sub
sub
add
push
and
push
adc
add
push
add
push
sub
push
adc
add
push
add
push
or
add
add
idiv
(bad)
call
sub
add
and
add
sub
add
or
pop
adc
add
push
add
push
or
pusha
adc
add
push
add
push
or
add
adc
add
push
add
push
and
add
sub
add
push
pusha
adc
sub
or
add
add
(bad)
(bad)
inc
add
pop
add
and
inc
add
add
idiv
(bad)
jmp
ins
adc
add
push
add
push
or
pop
pop
sub
sbb
add
(bad)
(bad)
inc
sub
fmul
sub
add
add
add
add
pop
add
add
add
add
adc
add
inc
add
add
add
jo
add
sub
add
sub
or
mov
and
add
idiv
(bad)
call
sub
add
add
and
add
push
add
push
sub
push
sub
xor
add
add
add
js
add
sub
add
or
push
pop
inc
add
add
idiv
(bad)
call
sub
add
and
add
push
add
push
or
adc
add
push
add
push
or
add
or
sub
sbb
add
add
(bad)
(bad)
jmp
xlat
add
push
sub
add
add
(bad)
(bad)
dec
outs
mov
sub
add
test
add
sub
add
and
push
add
push
push
pusha
adc
sub
es
add
sbb
add
add
(bad)
(bad)
jmp
mov
add
sub
add
adc
nop
adc
add
push
add
push
jae
add
or
add
adc
add
push
add
push
adc
pop
adc
add
add
or
add
or
add
or
push
sub
es
inc
add
add
idiv
(bad)
dec
adc
or
add
adc
cwde
adc
add
push
add
push
pop
adc
outs
jle
add
add
mov
add
idiv
(bad)
(bad)
fimul
pop
sub
pop
sub
or
add
or
add
adc
add
add
and
or
add
add
xor
inc
add
add
add
pushf
adc
add
push
add
push
sub
or
mov
and
add
idiv
(bad)
call
sub
add
add
and
push
add
push
sub
push
sub
xor
add
movs
adc
add
push
add
push
or
push
sbb
add
add
idiv
(bad)
call
sub
add
and
push
add
push
or
lods
adc
add
push
add
push
or
add
or
sub
sub
add
push
and
inc
add
add
idiv
(bad)
dec
outs
mov
sub
add
mov
add
sub
add
and
add
push
push
pusha
adc
sub
es
add
and
push
add
push
adc
add
push
add
push
adc
and
adc
add
push
add
push
adc
pop
adc
add
or
push
jle
add
or
add
or
pop
jle
add
or
add
or
add
or
add
xchg
add
push
and
jg
add
sbb
add
add
(bad)
(bad)
jmp
les
add
sub
add
jae
add
or
or
enter
sub
add
adc
sub
int3
adc
add
push
add
push
adc
pop
adc
adc
adc
jle
add
or
add
or
add
or
add
or
xchg
add
push
and
or
sbb
add
outs
pop
add
or
or
rcl
add
sub
add
pop
adc
adc
push
pop
outs
xor
or
sub
fmul
outs
mov
add
add
add
add
pop
add
add
add
add
add
or
add
add
xor
dec
add
add
add
aam
add
sub
add
sub
or
add
sbb
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
and
adc
add
push
add
push
sub
or
sub
xor
add
adc
add
push
add
push
or
push
sbb
add
add
(bad)
(bad)
call
sub
add
es
adc
add
push
add
push
or
in
add
sub
add
or
add
adc
add
sbb
add
idiv
(bad)
jmp
xlat
add
push
sub
add
add
(bad)
(bad)
dec
sub
add
call
push
add
push
and
adc
add
push
add
push
push
pusha
adc
sub
or
add
add
inc
add
add
idiv
(bad)
jmp
lock
add
push
add
push
adc
jle
add
or
push
jle
add
or
add
or
pop
jle
add
or
add
or
add
or
add
xchg
add
push
and
cmp
inc
add
add
idiv
(bad)
call
add
imul
or
or
hlt
adc
add
push
add
push
bound
or
or
add
push
add
outs
pop
sub
add
jae
add
or
pop
pop
sub
sbb
add
add
(bad)
(bad)
inc
sub
fmul
sub
add
adc
add
add
stos
or
pop
add
add
add
or
inc
add
add
add
add
add
add
mov
sub
inc
add
add
idiv
(bad)
call
sub
add
es
push
add
push
and
inc
add
add
idiv
(bad)
jmp
add
add
push
add
add
push
sub
xor
add
add
add
add
test
add
adc
and
adc
add
push
add
push
adc
sub
adc
adc
call
adc
sub
es
add
add
push
and
and
adc
add
push
add
push
pop
adc
adc
adc
mov
lds
inc
add
add
idiv
(bad)
call
sub
add
add
sub
adc
and
adc
add
push
add
push
adc
sub
or
or
and
add
pop
add
push
and
add
or
add
and
and
add
pop
add
push
and
add
or
adc
add
push
add
add
adc
sub
or
add
add
sub
add
pop
adc
adc
adc
mov
popf
sub
add
xor
add
add
add
or
add
sub
add
jae
add
or
and
adc
add
push
add
push
jae
add
or
and
add
sub
add
jae
add
or
and
adc
add
push
add
push
jae
add
or
and
add
sub
add
jae
add
or
and
adc
add
push
add
push
jae
add
or
and
add
sub
add
jae
add
or
sub
add
add
or
pop
add
add
add
add
sub
add
xor
add
add
add
add
add
outs
add
or
add
sub
push
and
add
and
add
and
add
sub
add
inc
sub
add
xor
add
add
add
add
add
sub
add
add
xor
add
add
add
mov
add
fiadd
fiadd
and
pop
add
push
and
add
sub
add
and
bound
add
pop
add
push
and
add
or
add
or
adc
add
mov
add
fiadd
and
adc
add
push
add
push
sub
sub
add
add
add
add
or
add
add
add
or
xor
add
add
or
push
add
add
add
add
outs
sbb
add
and
add
sub
add
xor
add
add
add
add
add
add
add
jo
add
sub
add
add
xor
add
add
mov
outs
add
or
add
sub
push
and
add
and
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
sub
add
add
and
add
and
inc
add
add
idiv
(bad)
inc
sub
add
or
inc
add
add
idiv
(bad)
jmp
add
jle
add
add
sub
add
and
inc
add
add
idiv
(bad)
(bad)
jle
add
add
mov
add
outs
test
or
inc
add
add
idiv
(bad)
inc
adc
outs
add
or
inc
add
add
idiv
(bad)
jmp
add
push
add
sbb
add
pop
add
push
and
add
and
add
or
add
or
xor
add
sub
add
outs
jo
add
and
dec
add
or
sbb
add
add
idiv
(bad)
inc
jae
add
or
add
and
adc
add
push
add
push
push
adc
inc
add
add
idiv
(bad)
dec
outs
jb
add
pop
sub
add
and
add
and
add
sub
push
and
add
sub
add
lea
add
adc
add
push
add
push
sub
or
add
mov
adc
add
push
add
push
add
adc
add
push
add
push
jle
add
add
adc
add
push
add
push
sub
add
and
add
and
add
mov
adc
add
push
add
push
or
adc
add
push
add
push
or
mov
add
and
add
mov
adc
add
push
add
push
add
adc
or
push
adc
adc
inc
add
add
idiv
(bad)
call
add
add
fiadd
fiadd
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
pop
adc
add
push
add
push
sub
add
or
fs
add
push
add
push
and
ins
adc
add
push
add
push
and
add
add
or
gs
sub
add
and
sub
add
sub
add
and
and
add
push
add
push
push
fiadd
or
add
add
adc
add
add
add
jge
xor
add
add
adc
add
or
add
js
add
sub
add
lea
add
add
add
add
jl
add
sub
add
and
push
add
push
popf
adc
jge
add
and
add
add
push
add
push
adc
cmp
adc
call
add
push
add
push
lea
add
add
pop
adc
and
add
push
and
push
add
push
popf
adc
outs
jge
add
and
imul
sub
add
xor
add
idiv
(bad)
call
sub
add
es
or
cwde
adc
add
push
add
push
call
and
add
push
call
outs
jg
add
adc
and
push
add
push
pop
adc
adc
adc
(bad)
(bad)
call
idiv
(bad)
inc
sub
xor
add
add
add
add
add
push
add
add
push
and
add
push
and
add
sub
add
sbb
add
add
add
adc
add
or
and
and
add
pop
add
push
jle
add
add
cmp
add
and
add
push
or
outs
aas
add
or
pop
adc
sub
add
and
outs
dec
add
push
and
imul
add
add
sub
add
push
and
add
and
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
or
add
push
outs
add
sub
add
sub
push
(bad)
push
or
add
outs
add
push
sub
add
add
add
add
sub
push
add
add
add
add
retf
add
add
add
jne
add
sub
push
and
add
adc
add
push
and
add
bound
add
push
and
add
cmp
add
and
add
fbld
add
sub
push
and
add
cmp
add
and
add
retf
add
sub
push
and
add
rol
add
push
xor
add
jmp
add
sub
push
and
add
add
add
sub
push
cmp
add
movs
pop
add
sub
add
cmp
add
test
add
sub
add
cmp
add
lods
pop
add
sub
add
cmp
sub
add
xor
add
add
add
add
add
movs
adc
add
push
add
push
sub
es
and
push
add
push
sub
lods
adc
add
push
add
push
sub
add
adc
push
add
add
add
and
add
sub
push
and
add
add
jb
add
jo
sahf
add
push
or
jle
add
or
dec
add
or
inc
add
add
idiv
(bad)
call
sub
add
sub
add
and
add
add
jb
add
jo
add
push
dec
add
add
add
or
mov
add
sub
add
sub
es
sub
xor
add
add
and
bound
add
pop
add
push
or
add
add
jle
add
or
mov
add
sub
add
sub
or
push
arpl
add
pop
add
push
and
add
add
xor
add
and
add
jle
add
add
jle
add
or
mov
push
add
push
sub
es
pushf
arpl
add
pop
add
push
and
add
add
xor
add
and
add
pop
jle
add
or
dec
add
or
jle
add
or
dec
add
or
sub
add
and
arpl
add
pop
add
push
and
add
add
xor
add
sub
cmp
add
pop
jle
add
or
dec
add
or
inc
add
add
idiv
(bad)
call
sub
add
or
add
or
dec
add
or
inc
add
add
idiv
(bad)
dec
or
xor
jle
add
or
dec
add
or
inc
add
add
idiv
(bad)
dec
jle
add
or
dec
add
or
inc
add
add
idiv
(bad)
inc
or
imul
xor
add
push
dec
add
add
add
or
add
sub
add
sub
es
add
add
jle
add
or
add
push
dec
add
add
add
or
add
sub
add
sub
es
xor
add
add
adc
add
jle
add
add
jne
add
xor
add
sub
push
and
add
and
add
sub
push
push
sub
add
or
add
push
sub
add
or
add
add
(bad)
(bad)
call
sub
add
es
sub
hlt
add
push
and
aas
add
or
mov
add
adc
inc
add
or
imul
add
outs
dec
add
push
and
add
cmp
add
and
add
sub
push
and
add
and
and
add
sub
add
add
(bad)
(bad)
(bad)
jle
add
add
jne
add
xor
add
sub
push
push
and
adc
add
push
add
push
sub
es
sbb
add
add
(bad)
(bad)
jmp
mov
sub
push
and
add
or
add
sub
and
add
sub
push
and
add
or
add
push
or
sub
add
and
(bad)
call
inc
add
add
idiv
(bad)
(bad)
fimul
adc
push
or
add
outs
add
and
pop
add
push
and
add
jle
add
or
or
add
adc
add
add
xor
push
add
add
sbb
push
add
add
adc
add
or
sub
pop
add
and
add
and
add
sub
push
or
and
adc
add
push
add
push
xor
inc
add
add
idiv
(bad)
call
sub
add
or
pop
data16
sub
push
sub
add
or
and
data16
sub
push
and
add
or
add
and
add
adc
cmp
add
adc
outs
pop
add
or
add
adc
outs
jne
add
and
add
sub
add
cmp
add
add
inc
add
add
idiv
(bad)
call
add
aas
add
add
idiv
(bad)
inc
sub
add
or
inc
add
add
idiv
(bad)
inc
and
add
sub
push
and
add
and
and
add
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
inc
adc
pop
data16
sub
push
and
add
and
add
and
add
and
rcl
add
push
add
push
xor
inc
add
add
idiv
(bad)
call
add
jae
add
sub
push
and
add
and
inc
add
add
idiv
(bad)
inc
and
add
push
and
jae
add
sub
push
and
add
and
add
and
pop
and
adc
add
push
add
push
das
push
sbb
add
(bad)
(bad)
call
add
xchg
data16
sub
push
and
add
and
inc
add
add
idiv
(bad)
inc
and
add
push
and
xchg
data16
sub
push
and
add
and
add
and
outs
popa
add
or
(bad)
(bad)
ficom
adc
sub
sbb
add
add
(bad)
(bad)
call
push
outs
add
pop
and
adc
add
push
add
push
aas
pop
add
add
inc
add
add
idiv
(bad)
dec
and
data16
sub
push
and
add
or
add
and
add
and
clc
add
add
pop
outs
pop
add
or
add
adc
add
and
add
sub
add
cmp
add
add
idiv
(bad)
call
add
add
inc
add
add
idiv
(bad)
inc
sub
add
or
add
add
(bad)
(bad)
inc
and
add
sub
push
and
add
and
and
add
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
inc
adc
add
pop
add
push
and
add
and
add
and
add
and
and
add
sub
push
outs
pusha
add
or
inc
add
add
idiv
(bad)
inc
and
add
push
and
jae
add
sub
push
and
add
and
add
and
outs
popa
add
or
(bad)
call
inc
add
add
idiv
(bad)
(bad)
ficom
adc
sub
sbb
add
(bad)
(bad)
call
pop
outs
add
fiadd
fiadd
and
add
sub
push
and
add
or
add
push
sub
inc
dec
add
add
add
js
add
mov
add
add
add
push
add
add
add
add
add
add
add
pop
add
add
add
push
add
add
add
add
add
test
add
add
add
inc
add
add
xor
add
add
add
add
adc
sub
add
or
inc
add
add
idiv
(bad)
call
sub
add
add
and
add
and
inc
add
add
idiv
(bad)
jmp
loopne
add
sub
add
sub
outs
mov
add
and
add
or
add
and
inc
add
add
idiv
(bad)
jmp
in
add
sub
add
sub
and
adc
add
push
add
push
(bad)
fld
add
adc
or
in
adc
add
push
add
push
and
add
sub
push
and
and
adc
add
push
add
push
outs
pop
add
or
or
add
push
add
push
adc
cmp
add
add
or
pop
outs
mov
add
add
add
or
add
cmp
add
add
and
adc
add
push
add
push
(bad)
fld
add
adc
adc
and
adc
add
push
add
push
and
add
push
mov
adc
add
push
outs
pop
add
or
and
add
push
call
adc
mov
or
add
push
and
add
or
or
add
sub
add
call
sub
add
adc
and
add
push
adc
or
add
or
add
sbb
add
add
(bad)
(bad)
call
add
add
push
add
push
pop
and
add
push
arpl
or
or
and
add
push
cs
sbb
add
add
(bad)
(bad)
call
add
add
sub
push
and
add
and
inc
add
add
idiv
(bad)
call
or
and
add
sub
add
inc
sub
and
adc
add
push
sub
and
add
push
adc
adc
add
push
add
push
pop
and
add
push
inc
adc
sub
adc
sub
es
adc
adc
adc
adc
add
sub
add
idiv
(bad)
call
pop
sub
sbb
add
add
(bad)
(bad)
call
or
or
cmp
add
push
adc
fnstsw
add
pop
adc
fidiv
outs
jne
add
and
add
sub
add
xor
sbb
add
add
(bad)
(bad)
dec
and
add
sub
add
call
add
or
inc
add
add
idiv
(bad)
call
or
or
das
adc
and
add
push
add
push
pop
adc
adc
adc
std
(bad)
call
inc
add
add
idiv
(bad)
jmp
dec
adc
add
push
sub
or
add
sbb
pop
add
add
adc
add
or
push
adc
jle
add
add
pop
add
sub
push
and
add
adc
jle
add
add
pop
add
sub
push
outs
test
add
adc
jle
add
add
pop
add
sub
push
and
add
adc
jle
add
add
pop
add
sub
push
and
add
adc
or
add
sub
push
and
add
sub
push
jae
add
or
pop
outs
pop
add
or
add
or
rol
add
adc
outs
pop
add
or
add
or
cmp
jle
add
add
pusha
add
or
jle
add
add
jle
add
add
pusha
add
or
add
outs
xchg
add
or
add
add
pusha
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
jle
add
add
jle
add
add
pusha
add
or
add
and
add
or
add
add
pusha
add
or
sbb
add
add
(bad)
(bad)
inc
jle
add
add
jle
add
add
pusha
add
or
add
and
add
sub
add
and
add
sub
add
outs
xor
add
and
add
adc
outs
popa
add
or
(bad)
(bad)
ficom
adc
sub
sbb
add
add
(bad)
(bad)
call
pop
outs
add
fiadd
fiadd
adc
and
add
pop
add
push
and
pop
add
push
jae
add
or
add
add
pop
add
or
add
adc
cmp
add
add
or
add
or
add
adc
add
add
idiv
(bad)
call
add
add
pusha
add
or
mov
inc
add
add
idiv
(bad)
call
add
add
pusha
add
or
add
and
add
sub
push
outs
sub
cmp
inc
add
add
idiv
(bad)
call
add
add
pusha
add
or
add
and
add
and
add
sub
add
xor
inc
add
add
idiv
(bad)
call
add
add
pusha
add
or
add
or
add
sub
add
lea
add
add
or
or
pop
adc
add
push
and
add
sub
add
popf
adc
outs
jge
add
and
adc
outs
popa
add
or
(bad)
call
idiv
(bad)
(bad)
fimul
or
adc
outs
add
or
stos
add
add
inc
add
add
idiv
(bad)
inc
jle
add
add
fs
add
push
(bad)
fld
add
adc
adc
and
add
sub
add
or
ins
adc
add
push
call
add
sub
add
and
xor
add
pop
add
push
and
and
add
push
add
push
or
js
add
sub
add
call
add
sub
add
and
xor
add
pop
add
push
and
and
push
add
push
or
test
add
push
call
add
outs
xchg
add
fiadd
fiadd
push
sub
add
inc
add
add
add
xchg
add
add
add
add
add
push
add
add
add
sub
add
xchg
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
or
sub
add
add
add
and
push
add
push
and
add
or
mov
add
add
mov
add
push
sub
sub
xor
add
add
adc
aas
push
add
push
and
add
or
mov
add
jae
add
or
add
dec
add
or
pop
inc
add
add
idiv
(bad)
call
sub
add
add
mov
add
or
sub
sbb
add
add
(bad)
(bad)
inc
outs
mov
add
and
or
outs
sbb
add
and
add
fiadd
and
add
sub
push
and
add
or
add
push
sub
add
adc
add
add
adc
add
sbb
add
add
add
adc
add
jo
jle
add
add
outs
dec
add
push
and
add
cmp
add
and
add
sub
push
and
add
and
scas
add
add
inc
add
add
idiv
(bad)
call
sub
add
es
outs
sbb
add
and
add
add
add
(bad)
(bad)
call
add
add
pop
add
push
sub
add
and
add
add
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
call
add
add
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
jmp
sub
sbb
add
sub
push
and
and
pop
add
push
and
and
adc
add
pop
add
push
and
and
add
and
add
sbb
add
add
(bad)
(bad)
(bad)
jle
add
add
outs
dec
add
push
jle
add
add
cmp
add
and
add
sub
or
cmp
add
sbb
add
add
idiv
(bad)
inc
outs
sbb
add
outs
inc
add
or
add
pop
add
push
outs
push
es
and
add
push
cs
pop
inc
add
add
idiv
(bad)
inc
and
push
add
push
outs
mov
add
and
add
sub
add
pop
or
add
sub
add
xor
pop
outs
xor
add
and
adc
push
imul
add
and
xor
add
and
add
fiadd
push
sub
add
inc
sbb
add
add
add
add
add
add
add
add
add
add
adc
add
ret
add
add
add
adc
add
or
add
dec
add
or
add
pushf
adc
add
push
adc
add
add
add
jno
outs
mov
add
and
add
or
pop
inc
add
add
idiv
(bad)
call
sub
add
or
add
or
add
and
imul
add
or
cmp
add
and
add
or
and
add
sub
add
or
add
or
or
outs
push
add
or
add
or
add
add
push
add
push
pop
adc
mov
ins
(bad)
(bad)
call
idiv
(bad)
inc
sub
adc
add
rol
add
add
adc
add
or
add
dec
add
or
add
movs
adc
add
push
adc
add
add
add
outs
or
add
or
add
or
or
add
or
add
and
imul
add
and
add
or
add
or
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
or
add
or
or
outs
push
add
or
add
or
add
add
push
add
push
pop
adc
mov
outs
(bad)
(bad)
call
inc
add
add
idiv
(bad)
inc
sub
xor
xchg
add
add
add
adc
push
add
or
and
add
push
adc
pusha
or
add
or
sub
sbb
add
add
(bad)
(bad)
call
sub
add
es
outs
mov
add
and
adc
add
push
outs
mov
add
and
inc
add
add
idiv
(bad)
inc
outs
push
add
or
add
or
sub
add
mov
add
sub
add
pop
adc
add
mov
cdq
sbb
add
add
idiv
(bad)
call
add
add
adc
add
xor
add
add
adc
imul
sub
push
and
add
add
xor
add
and
pop
add
or
outs
pop
add
or
pop
add
or
pop
cmp
pop
outs
pop
add
or
add
or
add
push
add
push
(bad)
fld
add
adc
adc
and
add
push
jle
add
or
adc
add
push
jle
add
or
or
mov
pop
add
push
and
pop
add
or
or
add
adc
sbb
add
add
idiv
(bad)
call
sub
add
adc
les
add
push
call
pop
add
push
and
enter
sub
add
call
adc
fisubr
adc
outs
popa
add
or
dec
(bad)
(bad)
call
idiv
(bad)
(bad)
fimul
pop
sub
adc
outs
add
jle
add
or
adc
sub
add
add
add
add
xor
xabort
or
add
add
xor
loope
add
retf
adc
imul
sub
push
and
add
add
xor
add
and
pop
add
or
outs
pop
add
or
outs
pop
add
or
jnp
add
adc
outs
pop
add
or
add
or
add
push
add
push
(bad)
fld
add
adc
adc
and
adc
add
push
jle
add
or
or
fsub
add
pop
add
push
adc
pop
add
or
add
and
add
add
add
idiv
(bad)
call
sub
add
adc
aam
add
sub
add
call
outs
popa
add
or
(bad)
(bad)
ficom
adc
sub
sbb
add
add
(bad)
(bad)
call
pop
outs
add
jle
add
or
adc
sub
add
add
add
add
xor
nop
ret
add
add
sbb
add
out
add
add
add
adc
fcom
add
push
or
enter
sub
push
and
add
or
mov
add
add
dec
add
or
pop
adc
add
push
add
push
adc
sub
add
or
or
add
or
sub
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
push
add
pop
add
push
add
cmp
add
and
add
or
add
or
loopne
add
sub
add
or
push
and
adc
add
push
pop
adc
adc
adc
push
sub
add
sub
push
and
add
or
add
fisub
or
add
pop
add
push
and
add
or
mov
add
and
adc
add
push
adc
add
sub
add
add
add
add
add
and
mov
add
add
xor
add
add
adc
sub
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
imul
sub
push
and
add
and
adc
add
push
sub
add
or
push
add
add
or
add
add
or
add
or
sub
or
adc
inc
add
add
idiv
(bad)
inc
outs
cmps
add
or
lock
add
push
or
xor
sub
push
add
or
xchg
add
or
add
and
adc
add
push
or
add
add
add
add
cmp
inc
jge
daa
inc
add
add
xor
rol
add
int
add
add
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
and
pop
add
push
and
add
and
adc
add
push
sub
push
ins
add
sub
push
and
add
or
add
and
pop
add
push
add
cmp
add
and
add
add
cld
adc
add
push
sub
add
push
and
outs
add
sub
push
and
add
add
xor
add
sub
(bad)
adc
adc
(bad)
adc
adc
or
xchg
add
or
add
add
adc
adc
or
xchg
add
or
add
add
add
or
add
add
sub
add
mov
add
pop
add
push
and
cmp
add
and
add
and
push
add
sub
add
adc
or
push
add
add
add
add
add
and
add
add
add
add
add
sub
add
adc
adc
adc
sub
add
push
and
outs
add
sub
push
sub
mov
add
sub
add
or
add
and
push
add
sub
add
adc
fimul
pop
and
ins
add
sub
push
and
pop
sub
mov
add
fiadd
fisub
and
add
sub
push
sub
mov
add
sub
add
or
add
fsub
or
add
sub
add
sub
or
add
add
add
add
add
cmp
add
inc
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
xor
fld
add
int
add
add
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
and
pop
add
push
and
add
and
push
add
sub
add
sub
mov
add
sub
push
and
add
or
add
add
adc
add
sub
add
sub
add
push
and
outs
add
sub
push
and
add
add
xor
add
and
add
adc
(bad)
adc
adc
(bad)
adc
adc
or
xchg
add
or
add
add
adc
adc
or
xchg
add
or
add
add
add
or
add
add
and
outs
add
sub
push
jle
add
or
add
or
cwde
add
or
add
mov
add
pop
add
push
and
cmp
add
sub
push
add
sub
add
adc
or
push
add
sbb
add
(bad)
(bad)
(bad)
jle
add
add
add
add
and
adc
adc
adc
and
add
sub
add
adc
adc
adc
sub
add
push
and
outs
add
sub
push
and
add
and
add
sub
add
or
add
and
push
add
sub
add
adc
fimul
pop
and
outs
add
sub
push
add
pop
sub
or
add
fiadd
fisub
and
add
sub
push
sub
mov
add
sub
add
or
add
fsub
and
add
sub
add
sub
or
add
add
add
add
add
cmp
add
push
add
add
add
add
add
add
add
cmp
add
outs
add
add
add
add
add
add
xor
inc
add
into
add
adc
sub
add
or
add
idiv
(bad)
call
sub
add
and
pop
add
push
sub
(bad)
adc
adc
sub
push
ins
add
sub
push
and
add
or
add
and
pop
add
push
and
add
or
add
add
sub
add
sub
add
sub
add
push
or
adc
add
pop
add
push
and
add
add
xor
add
and
add
adc
(bad)
adc
adc
(bad)
adc
adc
or
xchg
add
or
add
add
adc
adc
or
xchg
add
or
add
add
add
or
add
add
sub
adc
mov
add
pop
add
push
and
cmp
add
and
add
and
add
sub
add
adc
or
push
add
add
add
add
add
and
add
add
add
xor
add
sub
add
adc
adc
adc
sub
add
push
adc
adc
sub
push
add
push
adc
jnp
add
add
xor
add
sub
add
sub
add
push
and
jnp
add
add
or
or
add
and
jo
add
pop
add
push
adc
mov
add
add
xor
add
and
add
adc
jae
add
or
or
push
ficomp
adc
and
ins
add
sub
push
and
or
xchg
add
or
mov
add
fiadd
fisub
add
pop
add
push
and
add
and
add
sub
add
or
add
fcom
or
adc
adc
adc
sub
add
add
add
add
xor
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
xor
add
add
iret
add
adc
add
or
push
outs
xchg
add
or
cmp
add
sub
add
outs
mov
outs
xchg
add
or
add
sub
add
outs
xchg
add
or
outs
xchg
add
or
add
sub
add
outs
xchg
add
or
outs
xchg
add
or
add
sub
add
outs
mov
outs
xchg
add
or
add
or
outs
xchg
add
or
add
or
outs
cmps
add
or
add
or
cmp
outs
xchg
add
or
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
outs
xchg
add
or
add
or
and
add
sub
add
add
(bad)
(bad)
inc
or
add
or
call
add
and
inc
add
add
idiv
(bad)
inc
outs
call
cmp
add
and
and
add
and
or
add
or
push
outs
dec
add
or
(bad)
call
inc
add
add
idiv
(bad)
inc
outs
xchg
add
or
add
or
(bad)
call
inc
add
add
idiv
(bad)
inc
outs
call
cwde
add
or
(bad)
inc
outs
sbb
add
and
add
xor
add
add
add
add
add
fwait
add
or
dec
push
add
sub
add
inc
sub
add
xor
outs
add
add
add
sub
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
and
add
push
add
push
sub
and
pop
add
push
and
add
sub
push
and
add
and
inc
add
add
idiv
(bad)
jmp
mov
adc
sub
add
sub
push
push
add
sub
add
sub
adc
add
dec
add
add
add
adc
sub
push
jle
add
or
std
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
add
rol
push
and
add
sub
add
or
and
add
push
add
push
sub
xor
add
add
add
add
and
add
sub
add
sub
es
add
idiv
(bad)
call
sub
add
and
add
sub
push
sub
add
or
add
sub
add
add
(bad)
(bad)
jmp
mov
add
pop
add
push
and
add
and
jno
add
pop
add
push
and
add
and
or
adc
add
add
add
sub
add
push
and
add
dec
add
or
or
adc
add
add
add
sub
add
push
and
add
dec
add
or
or
adc
add
add
add
sub
add
push
and
add
dec
add
or
add
add
add
jle
add
add
je
add
inc
add
sub
push
and
add
and
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
jno
add
pop
add
push
and
add
cmp
add
and
add
and
add
push
add
push
sub
cmc
jno
add
pop
add
push
jle
add
add
cmp
add
and
add
and
add
sub
add
sub
add
adc
add
add
add
jle
add
add
jne
add
sbb
add
pop
add
push
and
add
or
sub
add
or
fs
add
sub
add
sub
and
pop
add
push
and
add
and
adc
or
jbe
add
rol
add
and
jb
add
pop
add
push
and
add
sub
add
push
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
and
pop
add
push
and
add
sub
add
push
or
loopne
add
sub
push
and
add
and
sbb
add
add
(bad)
(bad)
jmp
and
add
sub
add
sub
add
or
add
dec
add
or
add
sub
push
and
add
and
jb
add
pop
add
push
and
add
or
add
jle
add
add
je
add
inc
add
sub
push
jle
add
add
sub
es
add
add
je
add
iret
jb
add
pop
add
push
and
add
add
out
jb
add
pop
add
push
and
add
and
add
push
and
add
add
je
add
or
add
pop
add
push
and
add
add
xor
add
pop
add
push
and
add
and
add
push
es
add
add
je
add
push
jae
add
pop
add
push
and
xchg
add
push
and
add
add
je
add
jb
add
sub
push
and
add
and
sub
add
or
add
and
add
push
and
add
add
je
add
mov
add
pop
add
push
and
add
add
mov
pop
add
push
and
add
and
add
push
and
add
add
je
add
test
pop
add
push
and
add
sub
es
add
add
je
add
mov
pop
add
push
and
jae
add
pop
add
push
and
add
ins
push
add
sub
add
outs
imul
and
jae
add
pop
add
push
and
add
and
add
push
es
add
add
je
add
repz
add
pop
add
push
and
jae
add
pop
add
push
and
add
jo
add
sub
add
outs
imul
sub
add
or
add
push
and
add
add
je
add
push
je
add
pop
add
push
and
jae
add
pop
add
push
and
add
je
add
sub
add
outs
imul
and
jae
add
pop
add
push
and
add
and
add
push
and
add
add
je
add
daa
je
add
pop
add
push
and
add
sub
add
push
sub
es
add
add
je
add
cmp
sub
push
and
add
sub
add
push
sub
es
add
add
jne
add
sbb
add
pop
add
push
and
add
sub
push
and
add
sub
add
sub
es
dec
je
add
pop
add
push
and
add
sub
add
xor
add
add
adc
loope
add
or
sub
add
or
inc
add
add
idiv
(bad)
call
sub
add
and
add
push
and
add
or
add
push
sub
add
or
sub
add
add
(bad)
(bad)
jmp
add
pop
add
push
and
inc
jne
add
pop
add
push
and
add
or
mov
add
pop
or
or
outs
sbb
add
and
add
fiadd
and
add
push
sub
sub
adc
add
add
add
add
inc
add
add
xor
add
add
adc
jne
add
sub
push
and
add
cmp
add
and
add
jle
add
add
je
add
iret
jb
add
pop
add
push
and
add
and
jne
add
pop
add
push
and
add
or
add
push
sub
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
add
or
push
and
pop
add
push
and
add
sub
add
outs
jbe
add
and
mov
add
sub
add
xor
push
and
push
add
push
pop
and
add
push
pop
outs
xor
add
and
cwde
push
add
sub
add
lea
add
add
and
add
push
and
push
add
push
popf
or
movs
push
add
sub
add
and
push
add
push
popf
or
lods
push
add
sub
add
and
push
add
push
popf
or
add
or
jne
add
pop
add
push
and
add
or
add
push
sub
add
adc
pop
add
add
aam
add
and
jbe
add
pop
add
push
and
add
add
xor
add
sub
sahf
add
or
add
and
and
add
push
sub
and
push
add
push
adc
sub
add
and
jbe
add
pop
add
push
and
lahf
add
or
add
sub
add
or
add
and
jbe
add
pop
add
push
and
add
and
add
sub
add
or
add
add
mov
inc
add
add
idiv
(bad)
call
sub
add
adc
(bad)
adc
adc
or
xchg
add
or
add
add
and
add
push
adc
and
push
add
sub
add
and
push
add
sub
add
adc
sub
es
ja
add
pop
add
push
adc
sub
mov
add
sub
add
or
mov
add
and
add
sub
push
and
add
and
add
sub
add
or
add
pop
sub
sub
xor
jg
add
aad
add
jle
add
or
adc
add
enter
sub
add
sub
add
push
and
cmp
inc
add
add
idiv
(bad)
call
sub
add
and
pop
add
push
and
add
and
add
sub
add
or
mov
add
jle
add
or
and
ja
add
pop
add
push
and
lahf
add
or
xor
add
and
add
push
sub
adc
add
dec
add
add
add
sub
add
push
and
sbb
inc
add
add
idiv
(bad)
call
sub
add
es
add
push
or
sub
add
add
(bad)
(bad)
jmp
out
add
push
or
sub
add
add
(bad)
(bad)
jmp
hlt
add
push
and
add
adc
add
cmp
add
add
adc
out
add
or
sub
add
add
(bad)
(bad)
call
sub
add
es
add
push
and
push
sub
add
push
or
sub
add
or
sub
xor
call
add
adc
xor
pop
add
push
and
add
sub
add
lea
push
add
or
pop
add
or
outs
pop
add
or
pop
add
or
outs
adc
outs
pop
add
or
add
or
and
add
sub
push
and
add
jne
add
add
add
add
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
adc
inc
add
or
add
outs
sub
es
and
push
add
sub
add
adc
outs
popa
add
or
inc
add
add
idiv
(bad)
(bad)
ficom
adc
sub
sbb
add
add
idiv
(bad)
call
push
outs
add
and
push
add
sub
add
sub
add
add
add
push
add
add
add
or
adc
add
add
add
and
pop
add
push
and
add
and
or
inc
add
add
add
add
mov
add
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
and
pop
add
push
and
add
and
push
add
sub
add
sub
add
or
adc
add
add
add
and
js
add
pop
add
push
and
add
sub
add
xor
add
add
add
add
add
retf
js
add
pop
add
push
sub
add
push
sub
xor
add
add
add
add
sub
add
push
and
sbb
inc
add
add
idiv
(bad)
call
sub
add
es
add
push
and
or
out
add
push
and
add
xor
add
add
xlat
add
adc
mov
outs
mov
es
fcom
add
sub
add
or
call
or
loopne
add
sub
add
xor
add
push
add
push
or
xor
and
push
add
sub
add
pop
or
xor
pop
inc
add
add
idiv
(bad)
call
sub
add
es
push
add
sub
add
sub
sub
add
xor
add
add
add
adc
add
sub
push
and
add
sub
push
jae
add
or
pop
add
or
add
and
push
add
sub
add
inc
or
push
es
push
add
sub
add
or
add
sub
add
adc
add
add
add
add
inc
add
add
xor
add
add
fadd
add
sub
mov
and
push
add
sub
add
or
call
or
add
and
add
sub
add
xor
sbb
add
add
idiv
(bad)
call
sub
add
and
pop
add
sub
add
or
push
or
add
add
sub
add
pop
or
xor
add
push
add
push
sub
sub
adc
add
xor
add
add
adc
lock
push
and
sbb
idiv
(bad)
call
sub
add
es
add
push
and
push
sub
add
push
or
sub
add
add
add
mov
add
add
add
jle
add
add
pop
jns
add
pop
add
push
and
add
and
imul
jns
add
pop
add
push
sub
es
add
add
(bad)
(bad)
call
sub
add
es
add
add
pop
jp
add
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
(bad)
jle
add
add
sar
add
pop
add
push
and
add
sub
or
add
sub
add
sub
add
or
pop
add
add
add
add
add
add
or
add
pop
add
push
and
add
sub
add
or
imul
add
jle
add
add
sar
add
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
add
add
es
add
pop
add
push
and
add
and
imul
jl
add
pop
add
push
and
add
sub
adc
add
sub
add
sub
add
sbb
add
dec
add
add
add
and
add
pop
add
push
and
add
sub
push
and
add
sub
add
and
add
and
add
sub
add
inc
or
push
and
pop
add
sub
add
or
add
sub
add
adc
add
add
add
cmp
push
inc
add
add
xor
add
add
adc
cmc
add
push
and
or
test
push
and
add
add
xor
add
add
add
add
add
add
add
xor
add
pop
add
push
and
add
and
add
xor
add
add
adc
hlt
add
push
and
jge
add
pop
add
push
and
add
or
xor
add
and
add
push
outs
aas
add
or
adc
sub
add
and
add
add
outs
dec
add
push
and
add
sub
push
and
add
sub
es
sbb
add
add
(bad)
(bad)
call
sub
add
and
add
sub
add
or
adc
sub
add
and
push
adc
(bad)
push
or
add
outs
add
and
pop
add
sub
add
sub
sub
add
add
add
xor
pusha
xchg
add
add
add
add
or
sbb
add
add
add
jle
add
add
fdivr
add
pop
add
push
and
add
and
add
xor
add
add
add
add
jle
add
add
pop
jle
add
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
add
add
inc
jle
add
pop
add
push
sub
sub
and
add
sub
add
sub
adc
add
add
add
jle
add
add
fdivr
add
pop
add
push
and
add
sub
push
and
add
or
sub
add
or
imul
jle
add
pop
add
push
and
add
sub
push
and
add
and
sbb
add
les
add
fiadd
add
add
dec
add
or
add
sub
add
sub
fistp
add
pop
add
push
add
cmp
add
sub
cmps
add
or
push
adc
sub
add
sub
add
adc
adc
dec
add
or
add
fiadd
adc
add
push
add
push
pop
adc
mov
fadd
sub
or
adc
and
add
sub
add
adc
sub
push
adc
call
push
adc
and
pop
add
sub
add
pop
adc
adc
adc
mov
fcomp
add
(bad)
(bad)
call
sub
add
and
add
sub
add
sub
adc
add
add
or
add
add
or
add
inc
add
add
add
add
sub
add
and
inc
add
add
idiv
(bad)
call
sub
add
and
add
sub
add
sub
sub
add
push
and
cmps
add
or
add
fiadd
and
add
push
add
push
sub
add
add
add
xor
or
add
inc
add
add
xor
ins
add
add
add
adc
dec
pop
add
sub
add
sub
add
or
add
sub
push
sub
or
test
add
and
mov
add
and
add
or
add
and
or
cmp
add
pop
add
push
or
xor
add
and
add
fiadd
and
add
push
add
push
sub
sub
add
add
add
add
add
inc
inc
add
inc
add
add
xor
aad
add
fadd
add
and
add
sub
add
sub
add
or
sbb
add
pop
add
push
and
add
or
sub
or
add
or
adc
add
push
add
push
adc
sub
add
or
add
or
add
or
add
or
inc
add
add
idiv
(bad)
call
sub
add
and
add
sub
push
and
add
or
add
sub
or
outs
pop
add
or
push
and
add
sub
add
pop
adc
adc
adc
push
or
add
or
add
ficomp
adc
test
add
pop
add
push
adc
xor
add
sub
sub
add
add
add
add
add
mov
add
add
xor
sub
add
fld
add
add
add
or
push
rcl
add
add
inc
add
or
add
and
add
or
outs
sbb
add
and
adc
add
pusha
add
add
add
adc
lea
add
and
mov
add
and
add
sub
add
xor
sbb
add
add
(bad)
(bad)
call
sub
add
es
outs
pop
add
and
add
and
add
sub
add
inc
fs
add
sub
add
inc
sub
push
push
add
push
sub
xor
add
add
fiadd
add
sub
or
outs
mov
add
and
add
push
add
push
xor
pop
add
and
add
and
add
sub
add
xor
sbb
add
add
(bad)
(bad)
call
sub
add
es
outs
pop
add
and
add
and
add
sub
add
inc
js
add
sub
add
inc
sub
jl
add
sub
add
sub
add
sbb
add
fiadd
add
fild
add
and
pop
add
push
and
add
sub
add
lea
push
add
or
pop
add
or
outs
pop
add
or
outs
pop
add
or
adc
outs
pop
add
or
add
or
and
pop
add
push
and
add
and
add
adc
add
lods
add
or
inc
add
add
idiv
(bad)
call
sub
add
and
add
push
adc
sub
adc
outs
popa
add
or
inc
add
add
idiv
(bad)
(bad)
ficom
adc
sub
sbb
add
(bad)
(bad)
call
push
outs
add
and
push
add
push
sub
add
adc
add
add
add
add
add
add
sbb
add
sti
add
add
add
adc
add
push
adc
rol
add
add
sub
push
and
add
and
add
sub
push
and
rol
add
cmp
add
and
add
and
add
push
or
add
add
dec
add
or
xchg
add
push
and
add
and
push
add
push
sub
xlat
add
sub
push
and
add
or
call
pop
add
push
and
add
or
add
sub
add
or
mov
add
pop
outs
scas
add
or
add
sub
add
ds
add
sbb
add
(bad)
(bad)
call
sub
add
es
outs
scas
add
or
add
and
aad
add
adc
sub
es
pusha
add
push
adc
add
add
add
add
or
add
or
add
inc
add
add
and
rol
add
push
add
add
xor
add
and
add
and
pop
add
push
adc
add
cmp
add
and
add
adc
push
popa
add
push
jae
add
or
add
or
add
and
add
add
and
rol
add
cmp
add
and
add
or
cwde
pop
add
sub
add
outs
mov
add
and
add
sub
push
and
rol
add
cmp
add
and
add
adc
sub
cmp
sbb
push
(bad)
push
inc
add
sbb
add
or
and
add
push
or
push
and
push
add
push
or
add
sub
inc
xor
add
add
add
add
add
add
add
add
add
add
add
add
jne
add
jmp
add
push
add
add
add
add
or
das
add
add
add
add
sub
add
add
add
jb
add
jo
cmps
add
add
jae
add
or
add
add
jae
add
or
add
add
add
xor
ins
add
add
add
add
sub
add
push
and
add
push
xchg
add
pop
add
push
and
add
cmp
add
and
and
add
pop
add
push
jle
add
add
cmp
add
and
add
add
test
add
sub
push
and
add
and
add
pop
add
jo
movs
add
add
add
add
xor
add
add
add
add
add
add
add
jne
add
sub
add
add
(bad)
(bad)
call
sub
add
add
adc
add
jle
add
add
add
xor
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
mov
add
outs
xchg
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
add
add
mov
sub
add
pop
add
push
and
add
and
jae
add
or
add
add
add
fiadd
add
add
add
add
add
adc
add
add
push
push
add
inc
add
add
xor
add
add
add
add
add
add
add
mov
add
outs
xchg
add
or
inc
add
add
idiv
(bad)
call
sub
add
add
adc
add
add
add
add
add
or
bound
add
add
add
add
lsl
push
and
add
push
outs
xchg
add
or
inc
add
add
idiv
(bad)
call
sub
add
and
test
add
pop
add
push
and
add
and
push
add
push
sub
push
test
add
pop
add
push
and
add
and
add
push
sub
add
xor
add
add
adc
add
add
mov
push
add
push
sub
and
pop
add
push
and
add
or
mov
add
push
sub
add
or
add
sbb
add
add
idiv
(bad)
call
sub
add
es
sub
or
and
pop
add
push
and
add
and
add
sub
push
and
add
cmp
add
sub
and
das
add
sub
push
and
add
and
add
pop
test
add
pop
add
push
and
add
add
cmp
add
sub
cmps
add
add
xor
add
pop
add
push
and
add
and
mov
push
add
push
xor
inc
add
add
idiv
(bad)
inc
jnp
add
add
and
pop
add
sub
add
pop
outs
imul
or
add
sub
mov
add
jge
add
add
and
add
jb
add
sub
push
adc
sbb
add
and
add
sub
add
jnp
add
add
sbb
add
sub
push
and
add
add
or
add
add
add
add
out
add
push
add
inc
add
add
xor
add
add
add
add
add
add
add
(bad)
aas
add
sub
push
and
add
and
add
push
and
add
sub
push
and
add
and
add
and
or
cmp
add
add
add
add
add
add
(bad)
aas
add
sub
push
and
add
and
add
and
add
sub
push
and
add
sub
or
add
xor
add
add
add
add
add
sub
add
push
and
add
and
or
push
add
add
add
add
sub
add
and
add
sub
add
xor
add
add
add
add
add
adc
add
and
add
fimul
or
outs
sbb
add
sub
sub
add
adc
add
add
add
str
inc
add
add
xor
rol
add
loope
add
and
pop
add
sub
add
or
stos
test
add
pop
add
push
sub
add
push
or
add
adc
add
and
add
add
add
add
and
add
sub
pop
inc
add
add
idiv
(bad)
call
sub
add
add
adc
add
pop
add
add
add
enter
sub
add
outs
popf
add
push
pop
outs
sahf
add
push
and
test
add
pop
add
push
add
adc
add
and
add
sub
mov
add
and
inc
add
add
idiv
(bad)
inc
sub
pop
inc
add
add
idiv
(bad)
inc
add
add
add
movs
add
add
int3
pop
add
sub
add
sub
rcl
add
sub
add
sub
add
xor
add
add
add
add
jle
add
add
mov
sub
add
pop
add
push
and
add
push
and
add
and
pop
add
sub
add
sub
es
sbb
add
add
(bad)
(bad)
call
sub
add
es
test
add
pop
add
push
and
add
sub
adc
add
pop
add
add
add
and
pop
add
push
and
add
rcl
add
push
and
add
outs
add
or
(bad)
xchg
add
sub
push
outs
push
add
or
test
add
mov
add
and
test
add
sub
add
sub
xor
add
add
add
jae
add
or
add
add
and
add
push
jge
add
add
jae
add
or
add
add
sub
add
add
xor
add
add
adc
arpl
add
push
and
add
and
pop
add
push
and
add
or
add
add
sub
add
idiv
(bad)
call
sub
add
and
pop
add
push
and
outs
sbb
add
pop
sub
add
add
and
add
(bad)
(bad)
jmp
add
add
push
or
pop
outs
sbb
add
pop
sub
add
push
adc
and
add
sub
add
push
sub
add
push
sub
add
push
sub
add
push
and
inc
add
add
idiv
(bad)
inc
and
add
sub
push
and
add
jle
add
add
nop
xchg
add
pop
add
push
jle
add
add
cmp
add
and
add
sub
push
and
add
and
sub
add
push
jle
add
add
nop
xchg
add
pop
add
push
and
add
cmp
add
and
pop
add
push
and
add
sub
push
and
pop
add
sub
add
sub
es
add
and
dec
add
push
and
inc
add
add
idiv
(bad)
jmp
lods
xchg
add
pop
add
push
and
add
sub
add
and
add
push
sub
push
add
sub
add
push
add
inc
and
add
jae
add
or
test
add
test
add
mov
add
jge
add
add
fiadd
add
push
and
add
push
add
add
xor
add
sub
mov
add
sub
jnp
add
add
mov
es
add
sub
push
and
outs
sbb
add
pop
sub
add
push
fstp
jnp
add
add
inc
add
push
and
pop
add
push
and
add
and
pop
add
sub
add
and
pop
add
sub
add
and
pop
add
sub
add
jae
add
or
pop
add
or
jnp
add
add
adc
add
idiv
(bad)
inc
jnp
add
add
push
(bad)
jmp
lock
add
pop
add
push
sub
or
adc
add
push
and
add
or
mov
add
fiadd
and
add
sub
push
and
add
sub
add
inc
sbb
add
add
jno
add
sbb
add
inc
add
add
xor
add
add
and
add
sub
push
and
add
jle
add
add
nop
xchg
add
pop
add
push
jle
add
add
cmp
add
and
add
sub
push
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
pop
add
push
jle
add
add
nop
xchg
add
pop
add
push
and
add
cmp
add
and
add
sub
push
and
add
sub
add
sub
es
add
sub
add
add
(bad)
(bad)
jmp
dec
add
push
and
inc
add
add
idiv
(bad)
inc
sub
add
push
sub
add
and
add
push
and
add
push
and
add
fisubr
or
in
pop
add
sub
add
and
pop
add
push
and
add
or
add
sub
es
and
mov
add
pop
add
push
and
add
sub
add
add
add
add
(bad)
add
inc
add
add
xor
add
add
add
adc
add
push
and
add
add
lock
add
sub
add
jge
add
add
jnp
add
add
inc
sbb
add
add
(bad)
(bad)
call
sub
add
and
add
sub
push
and
add
add
add
add
hlt
pop
add
sub
add
and
pop
add
sub
add
outs
mov
es
add
and
cld
pop
add
sub
add
and
pop
add
push
and
add
sub
push
and
add
sub
es
xor
add
add
add
add
add
repz
add
pop
add
push
and
add
sub
add
sub
add
push
sub
add
sbb
add
add
add
adc
sbb
add
push
and
add
add
add
add
add
add
(bad)
(bad)
call
sub
add
and
pop
add
push
and
add
add
sub
add
push
jge
add
add
jnp
add
add
ds
add
add
idiv
(bad)
jmp
mov
add
pop
add
push
and
add
and
pop
add
push
and
add
add
push
add
add
xor
add
and
add
add
and
add
and
add
add
sub
add
lea
add
add
sbb
sbb
add
add
sub
add
and
sbb
add
push
add
push
popf
adc
outs
jge
add
or
xlat
mov
add
pop
add
push
and
add
push
and
add
sub
add
or
test
add
or
adc
add
sub
add
adc
cmp
add
adc
adc
call
add
or
add
sbb
dec
or
add
inc
add
add
idiv
(bad)
(bad)
(bad)
adc
add
add
fiadd
add
sbb
add
add
(bad)
(bad)
jmp
adc
add
sub
add
jae
add
or
add
pop
add
push
and
add
sub
add
sub
and
pop
add
push
and
add
sub
add
sub
and
adc
add
pop
add
push
and
add
sub
add
sub
and
add
sub
push
and
add
sub
add
sub
and
add
pop
add
push
and
add
sub
add
sub
and
pop
add
push
and
add
sub
add
sub
and
adc
add
pop
add
push
and
add
sub
add
sub
and
adc
add
pop
add
push
and
add
sub
add
sub
and
add
sub
push
and
sbb
add
push
add
push
sub
and
add
push
and
add
sub
add
sub
and
pop
add
push
and
add
sub
add
sub
and
adc
add
pop
add
push
and
add
sub
add
sub
and
adc
add
pop
add
push
and
add
sub
add
sub
and
add
sub
push
and
add
sub
add
sub
and
pop
add
push
and
add
sub
add
sub
and
add
sub
push
and
add
sub
add
sub
adc
(bad)
adc
add
add
sbb
sbb
mov
cmp
add
sbb
add
(bad)
(bad)
call
sbb
adc
add
add
add
add
add
lahf
add
add
add
add
add
add
add
add
add
add
or
add
mov
add
push
pop
add
xchg
add
cmp
pop
add
jle
add
add
inc
add
or
dec
add
or
add
sbb
add
add
(bad)
(bad)
(bad)
jg
add
add
push
dec
add
add
add
or
hlt
mov
add
pop
add
push
and
push
sub
or
add
add
add
add
add
or
pop
sbb
add
push
add
push
or
adc
add
or
ja
add
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
inc
mov
add
pop
add
push
sub
pop
add
jle
add
add
inc
add
or
dec
add
or
add
jg
add
add
push
dec
add
add
add
or
mov
pop
add
push
and
cmp
add
sub
scas
add
add
add
or
add
add
(bad)
(bad)
jmp
pop
sbb
add
push
add
push
or
adc
add
or
fild
add
jle
add
add
inc
add
or
dec
add
or
add
sbb
add
add
(bad)
(bad)
(bad)
jg
add
add
push
dec
add
add
add
or
fisttp
add
and
cmp
add
and
add
add
add
add
add
or
inc
add
add
idiv
(bad)
jmp
pusha
sbb
add
push
add
push
or
adc
add
or
pop
push
add
jle
add
add
inc
add
or
dec
add
or
inc
push
add
jg
add
add
push
dec
add
add
add
or
sbb
add
sub
push
and
or
pop
add
or
mov
add
add
add
add
add
or
inc
add
add
idiv
(bad)
jmp
sbb
add
push
add
push
or
adc
add
or
loope
add
jle
add
add
inc
add
or
dec
add
or
add
sbb
add
add
(bad)
(bad)
(bad)
jg
add
add
push
dec
add
add
add
or
or
jne
add
sub
push
and
or
pop
add
or
add
add
add
add
add
or
inc
add
add
idiv
(bad)
jmp
push
push
add
push
or
adc
add
or
pop
add
add
add
inc
add
or
dec
add
or
add
jg
add
add
push
dec
add
add
add
or
into
lea
add
pop
add
push
and
or
pop
add
or
add
add
add
add
add
or
inc
add
add
idiv
(bad)
jmp
ins
sbb
add
push
add
push
or
adc
add
or
jecxz
add
jle
add
add
inc
add
or
dec
add
or
iret
add
add
inc
add
add
idiv
(bad)
(bad)
jg
add
add
push
dec
add
add
add
or
sub
add
push
and
or
pop
add
or
add
add
add
add
add
or
inc
add
add
idiv
(bad)
jmp
jo
add
sub
add
or
adc
add
or
pusha
add
add
add
add
inc
add
or
dec
add
or
dec
add
add
add
(bad)
(bad)
(bad)
jg
add
add
push
dec
add
add
add
or
or
add
and
or
or
mov
add
add
add
add
add
or
inc
add
add
idiv
(bad)
jmp
je
add
sub
add
or
adc
add
or
fild
add
jle
add
add
inc
add
or
dec
add
or
add
sbb
add
add
(bad)
(bad)
(bad)
jg
add
add
push
dec
add
add
add
or
push
and
mov
add
pop
add
push
and
push
sub
or
add
add
add
add
add
or
add
add
(bad)
(bad)
jmp
js
add
sub
add
or
adc
add
or
pop
add
add
add
add
inc
add
or
dec
add
or
dec
add
add
add
add
push
dec
add
add
add
or
cmp
add
push
adc
add
or
add
add
add
add
add
or
jl
add
sub
add
or
adc
add
or
icebp
add
add
add
add
inc
add
or
dec
add
or
add
sbb
add
add
(bad)
(bad)
(bad)
jg
add
add
push
dec
add
add
add
or
adc
xchg
pop
add
pop
add
push
and
adc
pop
add
or
add
add
add
add
add
or
add
add
(bad)
(bad)
jmp
sbb
add
push
add
push
or
adc
add
or
jo
add
jle
add
add
inc
add
or
dec
add
or
pop
add
add
idiv
(bad)
(bad)
jg
add
add
push
dec
add
add
add
or
lock
add
pop
add
push
and
adc
pop
add
or
mov
add
add
add
add
add
or
inc
add
add
idiv
(bad)
jmp
test
add
sub
add
or
adc
add
or
out
add
add
add
add
inc
add
or
dec
add
or
add
sbb
add
add
(bad)
(bad)
(bad)
jg
add
add
push
dec
add
add
add
or
dec
nop
add
sub
push
adc
add
or
add
add
add
add
add
or
add
add
(bad)
(bad)
jmp
mov
add
sub
add
or
adc
add
or
outs
add
add
add
add
inc
add
or
dec
add
or
add
pop
inc
add
add
idiv
(bad)
(bad)
jg
add
add
push
dec
add
add
add
or
mov
add
sub
push
and
adc
pop
add
or
add
add
add
add
add
or
inc
add
add
idiv
(bad)
jmp
mov
add
sub
add
or
adc
add
or
jmp
dec
add
add
inc
add
or
dec
add
or
add
sbb
add
(bad)
(bad)
(bad)
jg
add
add
push
dec
add
add
add
or
and
pop
add
push
and
adc
pop
add
or
add
add
add
add
add
or
nop
sbb
add
push
add
push
or
adc
add
or
jno
push
add
add
inc
add
or
dec
add
or
inc
add
add
idiv
(bad)
(bad)
jg
add
add
push
dec
add
add
add
or
adc
add
pop
add
push
and
adc
or
add
add
add
add
add
or
xchg
sbb
add
push
add
push
or
adc
add
or
sbb
cwde
sbb
add
push
add
push
pop
adc
adc
adc
mov
jge
(bad)
call
inc
add
add
idiv
(bad)
inc
jnp
add
add
mov
outs
mov
sbb
sub
adc
or
push
outs
mov
adc
add
idiv
(bad)
jmp
pushf
sbb
add
push
add
push
or
sbb
or
inc
add
add
idiv
(bad)
(bad)
fimul
adc
add
outs
add
add
jge
add
add
sub
sbb
add
(bad)
(bad)
jmp
std
xchg
add
sub
push
and
add
sub
add
and
adc
and
push
add
push
and
add
pop
add
push
and
sbb
add
jae
add
push
sub
es
and
xchg
add
sub
push
and
add
sub
add
add
add
add
mov
add
add
or
add
add
add
add
add
or
add
or
add
add
add
add
adc
add
jnp
add
add
add
and
xchg
add
sub
push
and
add
jle
add
add
cmp
or
jge
add
sub
push
and
add
or
add
push
sub
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
outs
inc
add
or
add
sub
push
and
add
and
sbb
add
push
add
push
sub
adc
add
xor
add
adc
arpl
add
push
sub
add
add
cmp
or
jge
add
sub
push
and
add
or
mov
add
push
sub
add
add
add
xchg
add
add
add
add
fld
add
and
add
loopne
add
and
add
xlat
add
push
sub
add
add
(bad)
(bad)
call
sub
add
and
xchg
add
sub
push
sub
ds
add
sub
push
and
add
lea
add
and
add
and
add
and
push
add
push
pop
sub
outs
pop
add
outs
xchg
add
or
mov
add
cmc
add
push
and
add
add
add
xor
add
add
add
add
add
add
sbb
add
sub
xor
xchg
add
add
add
add
add
add
or
jle
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
and
pop
add
push
and
add
and
add
add
add
add
and
add
add
add
dec
add
add
push
add
push
add
jnp
add
add
add
jle
add
add
push
add
push
add
add
add
push
add
push
add
add
add
push
add
add
push
add
push
add
add
add
push
add
add
push
add
push
add
add
add
push
add
add
push
add
push
add
add
add
add
jle
add
add
dec
add
add
push
add
push
add
add
add
push
add
add
push
add
push
add
add
add
push
add
add
push
add
push
add
add
add
add
jle
add
add
dec
add
add
push
add
push
add
add
add
push
add
add
push
add
push
add
add
add
push
add
add
push
add
push
add
add
add
add
jle
add
add
dec
add
add
push
add
push
add
add
add
push
add
add
push
add
push
add
add
add
push
add
add
push
add
push
add
add
add
add
jle
add
add
push
add
add
push
add
push
add
jnp
add
add
add
add
add
add
add
sub
add
and
add
add
add
add
add
rcr
add
sub
add
jge
add
add
sub
add
push
sub
add
and
xchg
add
sub
push
outs
push
add
or
push
sub
add
or
push
sub
add
jge
add
add
add
fiadd
add
aam
add
sub
add
jge
add
add
and
sbb
add
push
add
push
jge
add
add
add
adc
add
add
add
add
add
xor
add
add
add
xlat
mov
add
pop
add
push
and
add
xor
add
add
adc
jbe
pop
add
push
and
add
sub
es
and
add
push
jge
add
add
jae
add
push
jge
add
add
jnp
add
add
sbb
add
add
mov
push
add
push
jge
add
add
jnp
add
add
inc
sbb
add
add
idiv
(bad)
call
sub
add
and
add
sub
push
and
add
add
push
add
add
xor
add
sub
mov
add
ja
add
sub
and
add
pop
add
push
sub
mov
add
addr16
(bad)
(bad)
fld
and
add
push
and
xchg
add
sub
push
push
outs
sbb
add
jae
add
push
sub
pop
or
rcr
add
push
add
push
and
xchg
add
sub
push
and
add
or
add
sub
cs
les
add
sub
add
and
add
sub
push
and
add
or
add
sub
es
sub
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
and
sbb
add
push
add
push
jge
add
add
jbe
add
sub
push
sub
mov
add
xor
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
or
jae
add
push
jge
add
add
jnp
add
add
push
add
push
add
add
add
sub
xchg
xchg
add
sub
push
sub
mov
rol
or
int3
sbb
add
push
add
push
sub
add
sub
add
xor
add
add
add
add
add
mov
pop
add
push
and
add
add
add
add
or
jae
add
push
jge
add
add
jnp
add
add
sbb
add
or
push
add
add
add
add
dec
add
push
sub
add
xor
add
add
add
add
add
sub
add
xor
push
add
add
add
adc
add
add
sub
add
or
inc
add
add
idiv
(bad)
call
sub
add
and
add
sub
push
and
add
sub
add
outs
add
or
add
or
cmp
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
cmp
adc
add
and
add
adc
sub
jg
add
sub
push
and
add
les
add
and
dec
add
sbb
add
add
xor
daa
add
add
sub
es
mov
add
pop
add
push
and
add
les
add
and
dec
add
sbb
add
xor
add
add
add
add
add
sub
and
pop
add
push
jle
add
add
lds
add
and
add
or
pop
add
add
add
add
sub
add
xor
adc
add
add
add
and
stos
add
sub
push
and
add
jg
add
shr
add
push
and
add
and
add
fsubr
add
push
and
add
test
add
lods
push
add
sub
push
and
add
outs
and
add
and
add
sub
push
jle
add
or
add
or
add
sub
push
and
add
outs
and
add
cmp
add
add
lods
push
add
sub
push
and
add
outs
and
add
and
add
sub
push
and
add
outs
and
add
and
xor
add
pop
add
push
jle
add
or
add
or
add
sub
add
and
add
push
outs
xor
add
cmp
add
add
lods
push
add
sub
push
and
add
outs
and
add
and
add
sub
push
and
add
outs
and
add
and
add
sub
push
and
add
outs
and
add
and
add
sub
add
and
add
push
outs
xor
add
and
add
test
add
lods
push
add
sub
push
and
add
outs
and
add
and
add
sub
push
jle
add
or
add
or
add
sub
push
and
add
outs
and
add
and
add
sub
add
and
sbb
add
push
add
push
outs
xor
add
add
add
jg
add
out
add
sub
push
and
add
and
add
xlat
mov
add
pop
add
push
add
add
push
stos
add
sub
push
add
add
jg
add
sub
push
and
add
add
xor
add
add
add
add
add
add
or
add
or
add
xchg
xchg
add
sub
push
and
add
and
add
sub
add
xor
add
add
add
add
sub
add
or
add
or
add
xchg
xchg
add
sub
push
and
add
and
add
and
or
sub
add
add
add
sub
add
or
add
and
add
xchg
xchg
add
sub
push
and
add
sub
or
or
sub
add
add
add
sub
add
or
add
or
add
call
add
and
add
and
add
and
or
sub
add
add
add
sub
add
or
add
and
add
xchg
xchg
add
sub
push
and
add
and
add
sub
xor
add
add
add
add
sub
add
or
add
or
add
add
pop
add
push
and
add
and
add
and
or
sub
add
add
add
sub
add
or
add
and
add
xchg
xchg
add
sub
push
and
add
sub
or
or
sub
add
add
add
sub
add
or
add
jle
add
add
call
add
and
add
and
add
and
or
add
add
add
add
add
or
add
and
add
xchg
xchg
add
sub
push
and
add
and
add
and
add
or
sub
add
add
add
sub
add
or
add
jle
add
add
call
add
and
add
and
add
and
or
sub
add
add
add
sub
add
or
add
and
add
add
pop
add
push
sub
add
or
add
sub
add
xor
add
add
add
add
add
add
or
add
and
add
cmps
xchg
add
sub
push
sub
add
or
add
sub
add
xor
add
add
add
add
add
add
or
add
and
add
mov
add
sub
push
and
add
and
add
and
add
or
sub
add
add
add
sub
add
or
add
jle
add
add
add
pop
add
push
and
add
and
add
and
or
inc
add
add
add
add
add
add
fcomp
add
sub
add
and
sbb
add
push
add
push
outs
xor
add
and
add
in
add
sub
add
and
sbb
add
push
add
push
outs
xor
add
and
add
sub
add
xor
add
add
adc
mov
pop
add
push
sub
sbb
add
push
add
push
or
cmp
add
sub
add
and
add
and
xchg
add
sub
push
and
add
and
add
sub
push
and
add
sub
push
sub
add
push
and
add
and
add
sub
add
and
sbb
add
push
add
push
sub
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
and
add
sub
push
sub
sbb
add
push
add
push
or
and
cdq
xchg
add
sub
push
and
add
sub
and
xchg
add
sub
push
and
add
sub
add
and
add
and
add
sbb
add
add
(bad)
(bad)
jmp
xor
pop
add
push
and
add
and
add
sub
push
and
add
sub
push
and
add
sub
add
and
add
sub
add
and
sbb
add
push
add
push
sub
add
push
sub
pop
inc
add
add
idiv
(bad)
jmp
xchg
cwde
add
sub
push
sub
and
cwde
add
sub
push
sub
and
cdq
add
sub
push
sub
or
ja
add
sub
push
pop
sub
add
or
mov
add
and
add
sub
add
or
add
sub
sub
inc
sbb
add
add
add
add
add
add
js
add
and
add
inc
add
add
xor
add
add
adc
mov
pop
add
push
and
add
and
sbb
add
push
add
push
or
cmp
add
sub
add
cmp
add
add
idiv
(bad)
call
sub
add
es
cdq
add
sub
push
sub
pop
add
sub
push
and
add
sub
push
sub
add
push
and
add
and
add
sub
add
and
sbb
add
push
add
push
sub
add
push
and
popa
call
push
and
add
and
add
sub
add
or
and
mov
add
sub
push
and
add
sub
and
fwait
add
sub
push
and
add
sub
add
sub
add
and
add
sbb
add
add
(bad)
(bad)
jmp
pop
fwait
add
sub
push
and
add
and
add
sub
push
and
add
sub
push
and
add
and
add
and
add
sub
add
and
add
sub
add
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
mov
pop
add
push
and
add
push
or
and
or
add
and
add
sub
and
add
sub
push
and
add
fisub
add
sub
push
and
add
or
mov
add
and
sbb
add
push
add
push
or
add
sub
sub
inc
sbb
add
add
add
add
add
add
add
add
add
sbb
pop
add
add
add
and
pushf
add
sub
push
and
add
sub
add
push
sub
add
and
add
sub
sub
add
and
inc
add
add
idiv
(bad)
call
sub
add
sub
add
push
and
add
and
inc
add
add
idiv
(bad)
jmp
cmp
add
and
add
sub
sbb
add
(bad)
(bad)
jmp
add
push
sub
add
and
inc
add
push
and
add
and
dec
add
push
sub
push
sub
add
push
and
add
and
add
sbb
add
add
(bad)
(bad)
jmp
cmp
add
and
add
and
add
sbb
add
add
(bad)
(bad)
jmp
cmp
sub
add
and
add
sbb
add
add
idiv
(bad)
jmp
inc
add
push
sub
add
and
add
sbb
add
add
idiv
(bad)
jmp
cmp
add
sub
add
and
add
sub
add
push
and
add
and
add
jae
add
push
adc
and
add
push
sub
jle
add
or
add
add
outs
mov
outs
mov
adc
sub
or
mov
adc
and
add
pop
popf
add
sub
push
push
and
add
sub
add
and
sbb
add
push
add
push
outs
xor
add
and
mov
or
add
and
add
and
add
or
rol
or
inc
add
add
idiv
(bad)
(bad)
fimul
adc
(bad)
push
inc
add
sbb
add
or
adc
jnp
add
add
and
add
sub
jnp
add
add
bound
add
sub
push
and
add
and
add
or
add
outs
popf
add
sub
push
and
add
les
add
and
add
sub
add
or
add
lahf
popf
add
sub
push
adc
jnp
add
add
cmp
add
sub
add
push
or
fcomp
add
push
pop
outs
scas
add
or
add
sub
add
or
add
pop
outs
scas
add
or
add
sub
add
ds
add
sbb
add
add
(bad)
(bad)
inc
outs
scas
add
or
add
and
mov
add
adc
mov
add
or
sub
add
sub
sbb
add
add
idiv
(bad)
jmp
aaa
sahf
add
sub
push
and
add
or
add
cmp
arpl
add
adc
add
or
add
add
mov
pop
add
push
or
cmp
add
sub
pop
or
add
or
add
add
pop
add
push
adc
xlat
add
add
push
add
add
xor
add
and
add
adc
push
add
push
jae
add
or
add
or
add
and
add
sub
push
and
add
and
add
sub
dec
add
push
and
inc
add
add
idiv
(bad)
jmp
lds
add
push
or
cmp
add
sub
add
add
add
push
adc
adc
adc
jge
add
add
mov
add
push
and
add
or
add
adc
pop
or
add
or
add
scas
mov
add
push
and
fld
add
push
add
add
xor
add
and
add
adc
inc
add
push
jae
add
or
add
or
add
add
or
sub
add
push
sub
add
and
add
and
add
adc
mov
add
and
(bad)
call
inc
add
add
idiv
(bad)
(bad)
fimul
adc
push
inc
add
sbb
add
or
and
sbb
add
push
add
push
adc
fst
mov
add
push
and
add
and
add
sub
add
adc
fidiv
pop
and
mov
add
push
and
xor
add
and
add
and
sbb
add
push
add
push
adc
fiadd
dec
mov
add
push
and
add
and
add
sub
add
adc
fisubr
adc
and
pop
add
push
and
xor
add
sub
sbb
add
push
add
push
adc
fiadd
adc
sub
add
add
add
imul
add
aam
add
push
add
add
add
add
add
add
add
add
add
push
add
add
add
add
pushf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
push
add
add
add
add
in
mov
add
push
and
add
jle
add
add
rol
add
and
add
add
rol
add
and
ret
add
sbb
add
push
sub
add
or
add
and
sbb
add
push
add
push
sub
add
adc
add
rol
add
add
adc
add
add
dec
add
or
push
or
add
push
add
push
adc
push
adc
or
sub
pop
outs
mov
add
and
add
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
and
pop
add
push
and
add
cmp
add
and
add
and
add
push
add
push
or
dec
adc
push
sbb
add
push
add
push
pop
adc
add
mov
(bad)
sbb
add
add
(bad)
(bad)
jmp
outs
mov
add
push
and
add
cmp
add
and
add
and
add
push
add
push
sub
sub
xor
retf
add
add
adc
add
add
sbb
add
push
and
add
and
dec
add
or
add
pop
sbb
add
push
add
push
adc
adc
inc
or
add
or
sub
add
and
inc
add
add
idiv
(bad)
call
sub
add
and
pop
add
push
and
add
or
mov
add
and
add
push
add
push
or
and
add
sub
add
pop
adc
mov
cdq
sbb
add
add
(bad)
(bad)
jmp
adc
add
sub
push
and
add
or
add
and
add
push
add
push
sub
sub
add
xor
sub
add
jmp
add
or
and
add
sub
add
sub
imul
cmp
add
sub
add
add
dec
add
or
add
ins
sbb
add
push
add
push
adc
add
add
add
test
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
outs
mov
add
and
add
and
add
and
shl
add
and
add
cmp
add
and
add
pop
outs
push
add
or
into
add
push
or
add
jo
add
sub
add
sub
add
or
dec
movs
add
sub
push
and
add
and
add
push
add
push
or
and
add
sub
add
pop
adc
mov
push
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
outs
mov
add
push
and
add
cmp
add
and
add
and
add
push
add
push
sub
sub
xor
dec
add
add
add
adc
sub
add
or
inc
add
add
idiv
(bad)
call
sub
add
and
push
add
push
sub
les
add
push
add
cmp
add
and
add
jle
add
add
sbb
add
push
sub
add
or
push
sub
add
and
add
add
push
add
push
adc
cmp
adc
call
add
inc
add
add
idiv
(bad)
dec
outs
mov
add
and
add
or
inc
add
add
idiv
(bad)
jmp
xor
add
push
and
add
or
add
or
add
or
add
or
sbb
add
push
add
push
sub
add
or
lods
cmps
add
sub
push
and
add
and
add
push
adc
dec
adc
and
push
add
push
pop
adc
adc
adc
(bad)
(bad)
call
add
(bad)
(bad)
jmp
adc
add
sub
push
and
add
or
add
and
add
push
sub
add
add
add
xor
out
add
add
add
adc
add
or
and
add
sub
push
and
add
and
add
cwde
sbb
add
push
add
push
adc
add
add
add
cdq
add
add
outs
mov
add
and
add
sub
push
and
add
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
or
add
or
add
and
imul
add
and
add
or
mov
add
or
and
add
and
inc
add
add
idiv
(bad)
dec
outs
mov
add
and
outs
lea
add
and
inc
add
add
idiv
(bad)
inc
or
outs
push
add
or
add
or
add
add
push
add
push
pop
adc
mov
inc
(bad)
(bad)
inc
sub
adc
push
add
add
add
add
and
cmps
add
sub
push
and
add
sub
sub
add
sub
add
push
sub
add
sub
add
push
and
add
sub
add
push
and
add
sub
add
push
and
add
sub
add
push
sub
add
sub
add
and
add
jle
add
add
inc
add
push
and
add
jle
add
add
inc
add
push
and
add
sub
add
and
inc
add
add
idiv
(bad)
call
sub
add
sub
add
and
inc
add
add
idiv
(bad)
jmp
inc
add
push
and
cmps
add
sub
push
sub
add
sub
add
and
add
and
add
and
add
and
cmps
add
sub
push
and
add
or
add
sub
add
push
and
push
add
push
and
add
push
sub
add
push
and
test
add
pop
add
push
sub
add
sbb
add
rol
add
in
add
adc
cmp
add
push
add
sub
or
add
add
dec
add
or
add
pop
inc
add
add
idiv
(bad)
call
sub
add
sub
add
add
or
add
or
sub
push
mov
test
add
sub
add
xor
add
idiv
(bad)
jmp
pushf
test
add
pop
add
push
and
pop
add
or
add
add
sub
add
or
and
add
pop
add
push
and
add
push
lea
push
add
or
add
ficomp
and
add
sub
push
and
add
or
add
fiadd
sub
adc
add
add
add
add
add
xor
add
add
add
mov
add
sub
push
sub
add
push
sub
add
sub
add
push
and
add
sub
sub
add
sub
add
push
and
add
sub
add
sub
add
sub
add
push
and
add
sub
add
and
add
sub
sub
add
sub
add
push
sub
add
sub
add
push
and
add
sub
add
push
and
add
sub
add
push
sub
add
sub
add
push
and
add
and
test
add
push
and
add
sub
add
sbb
add
jge
add
pusha
add
adc
pop
stos
add
sub
push
and
add
or
add
add
dec
add
or
inc
add
add
idiv
(bad)
call
sub
add
and
add
sub
push
add
cmp
add
and
add
add
dec
add
or
or
add
enter
fiadd
ficomp
and
add
sub
push
and
add
or
add
fiadd
sub
add
add
add
add
or
or
add
add
sbb
inc
pusha
add
add
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
add
add
add
enter
sub
add
outs
cmp
sub
add
add
or
pop
add
add
add
add
sub
add
xor
mov
add
in
add
adc
pop
add
add
add
pop
add
push
and
int3
sbb
add
push
add
push
cs
pop
and
sbb
add
push
add
push
xor
inc
add
add
idiv
(bad)
call
sub
add
sub
jnp
add
add
jnp
add
add
jnp
add
add
mov
add
and
outs
leave
add
or
add
add
add
add
push
and
inc
add
add
idiv
(bad)
jmp
or
pop
add
push
and
add
jp
add
or
pop
add
add
add
add
sub
add
xor
add
add
add
add
add
jnp
add
or
jnp
add
or
adc
add
add
or
pop
add
add
add
add
sub
add
xor
add
add
add
add
add
add
add
pop
add
push
sub
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
add
add
add
jnp
add
add
int3
add
or
add
or
add
rol
add
sub
add
or
pop
add
add
add
add
sub
add
xor
add
add
add
add
add
jl
add
add
mov
add
and
sbb
add
push
add
push
outs
int
add
and
add
add
pop
stos
add
sub
push
and
add
add
rol
add
add
add
fcomp
add
sub
add
pop
jge
add
add
add
xor
add
add
add
add
add
sub
add
xor
outs
add
add
add
add
add
or
arpl
add
push
and
add
and
add
outs
aas
add
or
add
add
add
sbb
add
(bad)
(bad)
call
sub
add
es
add
or
add
add
add
outs
sbb
add
and
inc
add
add
idiv
(bad)
(bad)
jle
add
or
add
add
or
add
or
pop
add
add
add
add
sub
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
add
add
enter
sub
push
and
add
add
rol
add
push
add
sub
push
and
add
and
add
sub
add
sub
add
push
and
add
or
pop
add
add
add
add
sub
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
jnp
add
add
aas
add
push
add
add
add
aad
add
loopne
add
sub
add
sub
add
push
and
add
add
or
pop
add
add
add
add
sub
add
xor
add
add
add
add
add
jnp
add
add
inc
add
push
and
add
add
aad
add
in
add
sub
add
sub
add
push
and
cld
cmps
push
add
add
cmc
and
or
lods
pop
mov
xchg
pop
outs
loop
adc
xor
call
sbb
inc
ret
mov
sbb
xchg
push
leave
jp
xchg
out
mov
psubusw
pusha
jo
and
dec
cdq
mov
xchg
sahf
shl
pop
mov
mov
jno
ins
pop
ret
or
mov
xor
mov
cmp
call
xchg
in
repnz
sub
mov
in
mov
mov
gs
push
mov
jmp
cmp
outs
dec
sahf
push
lods
ss
sahf
loopne
enter
sub
xor
addr16
or
ja
mov
dec
je
mov
cwde
mov
das
mov
call
mov
dec
inc
(bad)
xor
cmps
pop
xchg
lds
ins
mov
pop
jmp
popf
jbe
mov
movs
push
stos
leave
mov
lods
and
mov
imul
xor
shl
sub
(bad)
jge
gs
mov
inc
push
stc
xchg
inc
popf
enter
mov
retf
adc
xor
and
icebp
jnp
fidivr
iret
pushf
das
es
xchg
ret
push
jo
neg
and
mov
xchg
mov
mov
out
out
mov
call
jne
pop
loope
cli
xchg
pop
jle
add
dec
jmp
fcomp
test
repz
sar
and
push
mov
imul
ins
sub
push
add
or
(bad)
mov
adc
mov
xor
xchg
iret
mov
cdq
fmul
ror
ss
(bad)
mov
sahf
scas
cmp
(bad)
jb
jo
in
mov
mov
js
cmp
gs
jle
pop
adc
or
popf
sbb
ss
mov
ret
xchg
pop
mov
jno
pop
ja
cmps
mov
(bad)
mul
lock
xchg
dec
fs
arpl
or
mov
movs
dec
es
and
icebp
inc
push
jbe
fcmovnb
cli
dec
out
mov
xchg
mov
pop
add
cmp
push
popf
rol
mul
mov
mov
cmp
movs
or
rcl
mov
mov
add
cmp
pop
dec
and
bswap
or
pop
js
popa
add
and
adc
xor
ja
ror
sbb
xchg
push
int
push
rcl
cld
fild
test
push
test
pop
mov
xchg
cmc
xchg
lods
sub
inc
or
lock
xchg
and
(bad)
jmp
jg
fstp
xlat
pop
das
mov
push
pop
imul
or
outs
aam
mov
adc
jle
xor
mov
sub
std
scas
dec
ins
push
into
gs
out
pop
repnz
sub
push
push
lods
mov
mov
or
fmul
leave
int3
fnstsw
psubq
dec
pop
(bad)
xchg
je
xor
cwde
aad
ins
mov
lds
sahf
xchg
cmp
fs
mov
in
stos
push
daa
clc
pusha
cwde
or
cmps
(bad)
and
jb
sub
aad
(bad)
test
fwait
icebp
lea
jl
xchg
(bad)
fbld
adc
sbb
mov
rcl
pop
mov
mov
sub
add
lea
mov
sub
shl
in
mov
retf
jge
xchg
lock
cmp
mov
push
loope
push
daa
adc
dec
rol
add
pop
cld
and
(bad)
mov
jecxz
jmp
dec
mov
stos
mov
lods
or
(bad)
cli
push
xlat
lods
cmp
test
call
mov
iret
popf
in
sbb
or
movzx
add
inc
sub
adc
mov
into
fwait
push
and
test
sub
outs
xor
push
xchg
sbb
adc
sbb
stos
in
les
fidivr
arpl
jnp
mov
(bad)
add
stc
into
sbb
test
fidivr
dec
out
or
add
outs
into
or
cmp
leave
mov
aam
ficom
shl
(bad)
test
les
call
inc
fadd
mov
xchg
cdq
scas
inc
lea
in
out
gs
cmc
out
sbb
into
into
mov
mov
adc
mov
shl
push
dec
add
jb
xchg
loop
jo
bsf
loopne
stos
jg
mov
(bad)
mov
add
pop
fisttp
xchg
jp
pushf
icebp
fwait
jmp
rol
cmps
pop
mov
repnz
dec
push
mov
fild
add
xchg
and
jns
js
cmp
adc
push
mov
xchg
sbb
aad
jle
call
test
sti
out
les
sub
jmp
loopne
rcr
adc
dec
js
sub
and
jp
lods
cmp
stc
in
xchg
mov
dec
mov
xor
jb
js
dec
lahf
ins
movs
daa
gs
pop
in
mov
jg
sbb
popf
xor
push
push
jbe
popf
sar
stc
(bad)
or
pushf
(bad)
mov
mov
dec
stc
adc
loop
out
jg
cli
jmp
adc
dec
add
sub
inc
or
and
mov
sbb
mov
popf
xor
aam
sbb
xchg
push
ja
lods
mov
mov
mov
ja
adc
stc
rcr
cmp
xchg
stos
hlt
sar
sti
xor
or
fdivp
or
adc
push
retf
ret
fidiv
dec
ins
jl
sub
retf
mov
pop
xor
outs
les
enter
push
add
lea
fxch
cmc
adc
in
jle
dec
inc
cmp
daa
ret
or
and
jb
cmp
xchg
push
sbb
out
mov
push
addr16
outs
retf
mov
(bad)
inc
mov
adc
mov
pusha
std
sbb
dec
movs
retf
mov
jg
mov
or
fidiv
cmps
adc
xor
lock
sub
outs
int3
pop
xchg
push
push
or
mov
xor
fs
mov
inc
je
xchg
cmp
clc
jmp
xchg
bound
push
dec
inc
das
pusha
and
mov
mov
mov
pop
in
push
xchg
cmps
dec
mov
sub
repz
int3
div
dec
jo
loope
inc
in
xchg
jmp
xor
dec
ja
lods
out
ror
push
jle
popf
push
dec
cmps
push
xor
xor
(bad)
cli
dec
add
mov
out
retf
int3
mov
inc
inc
and
or
xchg
aad
sub
inc
ret
inc
in
les
push
cmp
lahf
sub
addr16
enter
call
xchg
je
jnp
jg
ret
gs
repnz
clc
cmp
fimul
xor
mov
and
je
cmps
mov
fisub
js
into
popf
add
dec
mov
xor
sar
shl
xchg
dec
gs
mov
dec
gs
xor
jl
clc
ja
int
sub
jbe
add
movs
mov
cmps
jle
(bad)
jecxz
xor
addr16
jmp
xchg
movs
ficomp
dec
jae
adc
xchg
pop
sbb
xchg
push
aas
rcpps
les
test
fcom
(bad)
ss
pusha
jb
cli
shr
cmc
imul
cmp
mov
sbb
jg
cli
(bad)
(bad)
shl
xor
fisttp
rcr
sti
inc
(bad)
inc
sbb
sti
xor
jmp
jne
jns
fmul
scas
push
bound
pushf
push
pop
out
retf
out
sub
jmp
jne
mov
movs
loop
les
(bad)
fisttp
cmps
iret
outs
loopne
jbe
cmp
iret
fwait
mov
(bad)
into
aas
add
mov
mov
mov
jmp
adc
gs
loopne
retf
mov
xor
das
les
in
mov
ret
push
adc
push
xchg
mov
xor
sub
enter
add
aam
ja
add
stos
dec
adc
adc
mov
retf
mov
xchg
data16
fmul
cmp
(bad)
rcr
push
sti
gs
sbb
mov
outs
in
or
or
mov
les
pop
std
sbb
mov
lods
sub
sbb
test
jecxz
push
mov
cwde
adc
(bad)
std
sbb
lahf
lea
pop
jne
shl
cli
out
push
and
dec
push
js
pop
xchg
popa
jge
ror
mov
pop
fcmovu
out
xor
dec
je
dec
xor
sub
bound
lock
scas
push
iret
xor
and
out
aas
or
jnp
xor
ds
mov
mov
add
jbe
out
stc
arpl
sub
jae
pop
popf
repz
or
imul
add
push
popa
into
arpl
jo
test
sbb
jo
out
jecxz
inc
cdq
outs
pop
push
add
stos
dec
and
(bad)
imul
inc
loope
cmp
pop
std
cld
mov
mov
ss
jb
imul
xchg
jno
scas
push
xchg
xor
add
pop
mov
jg
xchg
pop
movs
mov
aad
mov
inc
cdq
add
push
(bad)
sub
jbe
sti
push
into
jo
xchg
add
or
outs
add
mov
lahf
jl
xchg
pop
pop
pop
and
jmp
push
fdiv
das
xlat
pop
pop
in
pop
movs
add
mov
jae
lods
idiv
mov
movs
sbb
adc
and
(bad)
iret
pop
leave
xor
mov
shr
dec
cs
outs
push
xlat
fild
mov
dec
retf
dec
mov
xor
(bad)
ss
jb
(bad)
cmps
(bad)
out
inc
jns
add
or
cld
push
int3
xor
ror
lods
sbb
dec
inc
adc
out
sub
test
shr
inc
test
sub
out
ins
jmp
or
std
(bad)
xor
sbb
xchg
gs
cmps
and
hlt
mov
les
jmp
sahf
push
(bad)
jae
or
lods
ja
nop
clc
mov
cli
mov
push
adc
dec
rcl
xchg
push
mov
call
lds
lods
mov
rcr
jmp
push
sbb
daa
nop
mov
jmp
sahf
sub
jbe
adc
xchg
and
push
xor
xchg
xor
sbb
cs
inc
retf
mov
test
retf
jnp
mov
cmps
adc
pop
pop
mov
jbe
dec
loopne
jb
retf
rol
dec
adc
fimul
inc
paddb
in
ja
imul
ffree
(bad)
mov
fidivr
adc
fsubrp
lods
popf
mov
mov
or
test
and
fdivr
and
(bad)
xor
sub
inc
nop
ins
popf
into
out
mov
inc
inc
push
mov
push
gs
cli
mov
retf
xor
pop
stos
jecxz
int3
mov
add
repz
and
and
xchg
inc
jecxz
mov
cmp
bnd
popf
xor
les
xor
stos
mov
fist
push
retf
xor
ss
cmp
lea
sbb
mov
arpl
icebp
pop
cwde
(bad)
push
mov
ins
push
out
jb
ret
out
pop
retf
(bad)
js
xor
rep
xchg
add
xor
xchg
jmp
cs
gs
ret
adc
(bad)
stos
loopne
mov
js
pop
jo
pop
pop
mov
pop
pushf
sbb
dec
int
pushf
jmp
les
out
xor
std
inc
xchg
pop
fnstcw
loopne
jg
dec
cdq
js
xchg
in
jb
dec
cld
mov
rcl
add
sbb
inc
sub
mov
jo
test
mov
fdivrp
into
fdivr
inc
ds
mov
rcl
int
pop
adc
push
push
pop
xchg
hlt
lods
cli
and
enter
jle
xor
inc
jno
test
out
push
mov
cmp
lock
dec
push
mov
rcl
daa
hlt
mov
mov
sub
jg
lea
push
jmp
push
int3
outs
mov
lods
loop
add
ds
mov
les
fucomp
jns
sub
cmp
in
mov
push
lea
not
dec
pop
or
add
rol
push
jl
push
mov
push
into
ins
dec
adc
mov
sahf
and
aam
jp
sbb
sub
cmps
adc
xchg
test
jnp
jb
std
in
aad
add
cmp
jge
ins
ds
and
call
jno
sbb
int3
xor
mov
pop
shl
scas
sbb
sbb
retf
test
lods
push
adc
or
jns
fisttp
inc
das
(bad)
movs
xchg
push
fs
retfw
jge
jns
xlat
mov
adc
xchg
and
test
mov
mov
xor
repz
or
push
daa
fisubr
sub
jnp
adc
dec
mov
mov
xor
dec
fimul
cmp
lods
add
and
imul
and
mov
or
xchg
je
sub
scas
sbb
inc
mov
or
xor
nop
jg
shl
adc
pop
mov
sbb
jecxz
jne
mov
loope
adc
movs
inc
pop
mov
dec
push
dec
leave
inc
cmps
jmp
sub
mov
leave
and
push
jno
push
jns
push
fmul
or
add
add
jmp
inc
xor
mov
into
sub
loop
addr16
test
fidiv
nop
fsubr
push
adc
and
dec
in
cli
hlt
pop
(bad)
adc
int
jge
xor
mov
and
movs
xchg
inc
movs
loop
mov
sbb
push
and
adc
dec
pop
push
sub
inc
mov
das
sbb
test
les
les
jecxz
fwait
xchg
cmp
scas
add
les
loopne
popf
fwait
cdq
pop
and
cwde
test
gs
dec
or
cmp
les
mov
xor
sbb
cld
dec
test
and
pop
into
pop
aaa
test
(bad)
fcom
in
popf
jp
ret
mov
jl
push
pushf
imul
push
inc
jnp
sub
ins
push
inc
(bad)
jg
xlat
sub
shl
movs
or
ficom
xor
hlt
lock
(bad)
out
rcr
mov
stos
rcl
outs
ins
repnz
push
add
pop
or
add
jmp
xchg
push
popf
push
push
dec
push
iret
repnz
les
xchg
and
nop
scas
xchg
push
push
mov
mov
ins
sub
jmp
aam
mov
ins
push
stc
xor
adc
push
jle
inc
add
mov
mov
fnstsw
out
xor
dec
xor
sbb
movs
outs
mov
rol
icebp
mov
mov
imul
(bad)
cmp
jo
scas
pop
ss
jnp
in
jnp
jmp
xor
or
fisttp
push
cld
repnz
jge
and
sbb
fs
std
mov
sahf
setg
mov
push
pusha
fistp
dec
popa
imul
in
pop
(bad)
pop
push
push
popa
and
lods
mov
test
cdq
mov
stc
test
neg
add
(bad)
fnsave
mov
popa
sbb
clc
push
(bad)
mov
mov
add
int3
and
or
lods
push
ss
xchg
lsl
dec
stc
and
pop
fsub
jp
cmp
call
cld
call
add
fist
test
aam
dec
shl
adc
fild
dec
add
arpl
push
mov
retf
xor
sbb
mov
jbe
sub
add
push
icebp
lods
stos
data16
push
out
imul
adc
xchg
(bad)
adc
dec
loope
xor
cmp
ror
pop
rcl
icebp
sbb
push
out
inc
lock
inc
fidiv
jb
mov
cmp
jecxz
push
inc
mov
stos
mov
cmc
test
in
ja
gs
or
les
js
(bad)
mov
(bad)
mov
mov
repnz
and
cs
xchg
cmps
jmp
mov
sub
sbb
pop
pop
xor
loopne
iret
inc
inc
fistp
cld
cdq
jmp
push
mov
mov
cmp
mov
mov
lods
and
lahf
mov
adc
call
outs
cmps
pop
neg
mov
push
pop
dec
xor
sub
cpuid
lock
mov
imul
fadd
test
push
loope
ficom
and
mov
xchg
stos
aam
ss
dec
retf
cmc
out
fnstenv
arpl
sti
cld
cmp
mov
push
arpl
jg
(bad)
aaa
jecxz
sub
imul
push
in
lods
adc
pop
pop
xor
mov
sbb
loope
push
mov
ficomp
mov
cwde
test
inc
cmps
push
mov
pop
mov
bndstx
fisttp
movs
or
pop
ins
jle
mov
ror
daa
mov
or
cmp
neg
dec
sahf
aas
stc
test
mov
ja
stc
and
ins
and
mov
or
imul
ins
movs
call
jl
and
int3
mov
inc
(bad)
pop
and
out
fcmovnu
cmp
bound
pushf
adc
or
xlat
loop
fild
stos
cld
in
ret
mov
lods
sbb
push
xchg
hlt
movs
and
xor
dec
xchg
in
adc
cmps
ins
xchg
nop
ins
inc
dec
xchg
loop
loopne
movs
pop
lahf
es
or
fs
sbb
mov
adc
sar
out
mov
ds
and
add
cli
xchg
push
cmp
test
bswap
retf
mov
push
cmp
xchg
shl
pop
ret
dec
(bad)
sbb
daa
mov
sub
hlt
(bad)
shl
mov
lahf
scas
in
bound
retf
sub
mov
mov
pop
dec
call
out
(bad)
jno
mov
cmps
ffreep
sub
dec
call
mov
inc
out
inc
mov
popa
cmp
stos
stos
jnp
mov
and
push
aas
mov
leave
sahf
das
xlat
cmp
mov
dec
push
xchg
jno
xchg
xor
sub
out
inc
dec
stc
or
arpl
test
xchg
or
add
jge
icebp
inc
aad
xor
dec
dec
mov
fnsave
scas
nop
xchg
mov
sar
leave
retf
xchg
dec
enter
loope
xchg
outs
hlt
pop
call
pop
out
push
push
(bad)
nop
push
and
inc
jne
xchg
test
ins
push
out
mov
repnz
mov
(bad)
leave
shr
xor
aam
sbb
sbb
mov
(bad)
xchg
iret
jbe
add
out
outs
inc
data16
and
jmp
jmp
mov
lock
test
xchg
shr
dec
js
shr
mov
stos
out
hlt
or
stos
aad
sub
mov
add
mov
neg
dec
aam
and
test
adc
push
shl
adc
jmp
pop
retf
sbb
fisubr
lods
iret
(bad)
out
mov
xchg
vpshufd
scas
and
inc
add
out
and
std
cdq
push
pop
jmp
cmp
xlat
icebp
(bad)
xchg
aaa
inc
mov
dec
push
shr
mov
sub
mov
js
loope
(bad)
mov
clc
sub
mov
mov
mov
cmp
push
mov
mov
addr16
(bad)
sbb
ins
cmp
leave
sbb
cwde
aam
call
clc
js
mov
jg
sbb
adc
xor
pop
push
fcom
or
rcl
xor
jl
or
popf
sub
pop
or
jecxz
pop
xchg
fwait
ror
movs
jmp
scas
stc
or
mov
cmps
and
test
xor
sbb
leave
cwde
lods
pop
push
and
(bad)
data16
lds
fcmovnu
add
mov
fadd
fcmovnb
stc
and
gs
xor
cmp
(bad)
(bad)
mov
pop
cmp
and
lea
add
push
(bad)
in
mov
stos
call
stos
fwait
push
dec
sbb
pop
mov
inc
rol
and
call
int3
mov
aad
pop
cmps
inc
imul
je
cmp
ror
mov
scas
lea
mov
mov
rol
dec
movd
clc
sbb
pop
popf
mov
push
sub
call
test
xchg
ret
in
push
and
pop
div
outs
jno
sbb
mov
push
cli
sbb
test
and
fiadd
fnstsw
push
or
cmps
repz
setae
dec
xor
xchg
adc
push
push
mov
sbb
(bad)
mov
fadd
and
mov
and
xor
jl
pop
push
jb
ja
stos
fidivr
(bad)
sbb
lods
sbb
lds
nop
iret
fwait
je
push
out
sahf
mov
sbb
cmp
out
repz
jg
adc
pop
pop
inc
adc
pusha
pop
mov
and
not
gs
sub
stc
cld
in
or
xchg
push
rol
js
cs
addr16
push
loope
jg
xor
jo
cmps
ins
pop
les
mov
movs
stos
int3
inc
mov
pop
repnz
mov
jmp
mov
pusha
mov
das
and
jo
inc
lods
xchg
xchg
add
mov
add
jo
mov
pop
xchg
inc
inc
retf
mov
inc
mov
out
jl
mov
adc
push
jmp
xchg
sbb
jb
lds
lods
jbe
xchg
cmp
mov
repnz
dec
cld
popf
int
jmp
inc
dec
(bad)
pop
jg
dec
fmulp
sub
repz
call
xchg
stos
shr
bound
out
retf
loop
xchg
mov
iret
std
push
fcomp
addr16
out
dec
ss
pop
adc
inc
push
add
ret
adc
push
std
sbb
mov
leave
or
icebp
icebp
loopne
shl
mov
in
jg
es
leave
xchg
jns
sub
(bad)
mov
add
mov
adc
sbb
cli
jmp
jmp
push
jne
lahf
jmp
(bad)
dec
push
in
mov
test
inc
(bad)
in
xchg
fisub
repnz
out
jle
test
push
ret
shl
mov
nop
or
xor
loopne
push
call
xor
lock
in
sub
or
mov
adc
fstp
popa
adc
sar
cmp
push
fist
call
push
push
mov
ds
divps
cmps
dec
clc
push
xor
popf
cmps
lods
jg
adc
sbb
es
retf
mov
ins
mov
adc
stos
shl
stos
adc
lods
sub
mov
movs
mov
hlt
mov
in
fisttp
mov
cmp
ror
cmp
loopne
mov
mov
in
mov
or
ficom
mov
test
mov
sbb
dec
jae
int3
lea
in
test
or
mov
or
dec
sub
mov
mov
movq
out
call
scas
cmp
sbb
aas
mov
aaa
mov
push
xor
in
cmp
mov
in
gs
aaa
int
jmp
test
mov
add
inc
xlat
(bad)
arpl
pop
xchg
mov
daa
clc
js
sub
inc
add
jbe
mov
jno
push
aad
test
and
rep
pop
cli
popa
inc
jno
movzx
test
sti
add
mov
div
pop
ds
mov
mov
nop
jno
(bad)
sub
adc
sub
dec
call
fist
shr
and
push
cwde
cmp
mov
mov
imul
out
add
jns
jle
cs
push
into
dec
xchg
sub
into
xor
push
xchg
mov
aas
jns
xchg
gs
xchg
cmp
cld
cmp
mov
mov
shr
test
rcl
inc
and
cmp
pop
and
daa
push
stos
add
stc
call
test
ret
mov
stos
add
sub
xor
xchg
xchg
loop
aad
sub
(bad)
pusha
xchg
rol
into
sahf
cmp
daa
movs
out
fbstp
mov
scas
aad
mov
xor
jae
aas
mov
push
arpl
mov
add
retf
shl
jl
into
sub
cs
lea
push
out
mov
dec
cwde
pop
jbe
arpl
pusha
jmp
xor
inc
repz
xor
fstp
lods
int
jecxz
lea
ins
mov
cmps
out
cld
mov
mov
xchg
xchg
add
cdq
xchg
mov
(bad)
cs
pop
cli
cmp
xor
dec
inc
or
mov
or
inc
retf
(bad)
jmp
icebp
dec
adc
pop
pop
jmp
jbe
je
jl
stos
sbb
shr
fbld
lahf
dec
xor
in
sub
cmp
xchg
cdq
jg
ret
dec
jge
sub
adc
fldcw
inc
loope
inc
dec
cwde
cmps
test
mov
cmp
mov
mov
and
mov
adc
push
repnz
xchg
mov
loop
fidivr
dec
rcr
xchg
xchg
out
out
stc
test
push
(bad)
fnsave
es
pop
retf
pop
jo
or
jmp
fisubr
push
in
and
xchg
cmovo
cmp
mov
jl
in
out
cmps
repz
lods
inc
nop
push
adc
call
or
stos
cmp
enter
cwde
es
not
xchg
aam
xchg
pop
xor
inc
xchg
aaa
xor
ret
push
and
idiv
sti
dec
dec
mov
sti
push
jp
sub
repnz
es
and
inc
cmp
or
xchg
xchg
scas
push
xor
jb
fs
retf
adc
adc
jecxz
cmps
push
stos
cmp
or
mov
hlt
data16
mov
mov
mov
push
mov
xchg
call
sub
ins
sets
cmp
fdivr
lahf
je
jmp
pop
add
adc
sbb
repnz
into
(bad)
cmc
xlat
push
test
js
jecxz
pop
mov
adc
sbb
and
(bad)
imul
push
pop
movs
ret
mov
ds
and
adc
icebp
xchg
dec
push
sub
mov
jbe
mov
push
jle
mov
jno
lahf
push
jmp
xor
cmp
xor
jmp
jmp
push
outs
stos
sar
fimul
mov
add
xor
mov
mov
ret
push
pop
jp
mov
mov
xchg
lods
pusha
clc
(bad)
mov
ret
mov
or
sahf
lock
lea
sbb
mov
jl
idiv
xor
stos
adc
xor
inc
mov
mov
aad
and
cmp
xchg
add
cli
jae
inc
jle
xor
cwde
std
xchg
mov
retf
sbb
cmps
(bad)
mov
int3
xor
cld
dec
pop
jg
int
push
outs
stos
jl
dec
movs
mov
dec
xchg
jmp
cmp
ficomp
shl
sbb
adc
and
pop
add
(bad)
jg
fild
stos
xchg
(bad)
pop
aaa
fnsave
dec
sub
pop
mov
sub
or
lds
(bad)
push
mov
inc
enter
cdq
mov
pop
lds
daa
add
inc
mov
inc
hlt
fstp
lea
jge
es
xchg
push
pavgb
fwait
jl
dec
adc
jmp
and
pop
imul
fisttp
xlat
jecxz
push
mov
mov
mov
xchg
sub
repnz
test
out
inc
pop
gs
scas
daa
cmp
mov
xchg
loop
rcl
push
sbb
int3
mul
or
mov
inc
lahf
out
dec
adc
dec
inc
sbb
add
(bad)
xchg
loope
adc
call
xchg
cmps
aam
ds
imul
jb
push
out
mov
shl
jle
xchg
push
ret
scas
retf
imul
hlt
stc
es
mov
mov
lahf
ins
cli
cmp
jmp
push
mov
lods
loop
xor
pop
loopne
inc
pop
vmread
clc
stos
aad
cmps
mov
loope
pop
inc
cld
ret
in
jge
adc
xchg
rcr
sub
cmps
xchg
aaa
bound
mov
push
xchg
stos
or
mov
xor
jge
jmp
aas
jl
push
loope
scas
push
mov
outs
add
movd
xchg
fst
jne
bound
jbe
push
(bad)
outs
jno
clc
imul
lock
xor
jns
or
ins
popf
test
mov
and
imul
test
fld
mov
mov
inc
mov
mov
jb
scas
popa
hlt
jne
test
and
shl
pop
shl
dec
mov
aam
jnp
push
sti
in
mov
xchg
inc
hlt
push
adc
mov
pop
mov
cmp
add
adc
outs
pusha
and
pop
sbb
sbb
sbb
mov
push
dec
dec
mov
int
mov
or
mov
push
mov
jp
push
pusha
or
pop
int
dec
pop
stc
pop
jns
xor
mov
sub
and
cs
cdq
sbb
add
push
or
ficom
retf
lods
ins
mov
das
pop
fisubr
lods
add
mov
ret
ret
shl
mov
inc
mov
mov
ror
and
mov
cmp
fnstcw
push
xor
cmp
loop
mov
mov
mov
add
pop
clc
pop
fwait
aaa
push
mov
xor
dec
std
dec
out
pop
ficom
mov
outs
(bad)
scas
mov
xor
iret
xor
(bad)
pop
sahf
mov
jne
xor
retf
vcmpss
push
mov
scas
daa
ins
add
sti
xor
sub
fs
mov
es
jp
cli
jg
jge
jae
cmp
leave
xor
mov
mov
adc
scas
aam
rcr
xchg
icebp
imul
and
or
and
add
mov
ss
out
(bad)
pop
add
fidiv
xchg
xor
jo
scas
pusha
test
arpl
xchg
test
dec
scas
adc
xor
mov
cmps
loopne
sub
out
dec
dec
je
sbb
hlt
xchg
and
sbb
sub
adc
je
not
dec
add
jbe
mov
repnz
test
call
(bad)
out
clc
in
push
arpl
mov
mov
xchg
and
pop
jnp
mov
xchg
push
adc
cmp
inc
xchg
jns
inc
scas
fwait
ins
push
pop
dec
mov
xchg
xor
mov
ret
fcom
adc
cmp
imul
sub
jmp
adc
ins
out
out
test
add
mov
push
jmp
test
ret
mov
pop
push
ja
(bad)
and
cmp
popf
mov
js
ret
jo
nop
icebp
adc
and
xor
lock
in
cmp
sbb
sbb
xor
jecxz
jo
lahf
fisubr
xor
call
aam
sbb
out
fiadd
enter
or
les
retf
adc
imul
fs
mov
shl
inc
stos
or
xchg
rcl
call
adc
jb
aam
(bad)
jmp
movs
mov
jbe
cld
int3
jmp
cmp
xor
or
xor
outs
test
sub
iret
mov
jns
je
push
inc
not
in
sub
gs
push
xor
jnp
iret
jge
leave
outs
rcr
bound
mov
stos
push
adc
jge
stos
int3
std
out
dec
fiadd
(bad)
out
in
popa
pop
mov
push
loopne
cwde
mov
bound
xchg
pop
and
mul
xor
adc
pop
inc
ds
gs
dec
call
inc
clc
popa
stos
xor
lahf
ins
add
sbb
mov
movs
and
adc
outs
mov
jle
xor
data16
mov
xchg
fmul
rol
and
loop
and
and
popa
retf
xchg
xchg
rcr
inc
leave
or
neg
mov
inc
movs
out
fsub
(bad)
mov
xor
sub
in
cmps
mov
ss
shl
sub
add
out
stos
fcom
mov
mov
push
jns
xchg
pop
push
jecxz
cmc
or
stos
adc
movs
(bad)
int
cmp
adc
test
es
ret
ret
cld
fcom
loop
xchg
push
push
movs
dec
fs
hlt
push
sub
outs
adc
mov
push
pop
push
push
jmp
mov
cld
add
rcl
xchg
or
cmp
fdiv
into
xor
test
and
inc
test
inc
iret
dec
jge
loope
dec
movs
push
int3
pop
and
int3
sub
test
mov
or
fs
test
shl
iret
stos
gs
push
xlat
and
fwait
and
mov
xchg
test
add
or
inc
das
and
cli
or
dec
(bad)
add
call
pop
arpl
xchg
call
jne
(bad)
sub
ud2
test
and
sbb
xchg
adc
ins
test
sub
int3
dec
test
and
loop
mov
ja
ret
add
jnp
ds
int
and
jns
std
sahf
dec
fimul
ret
inc
adc
fsubr
test
stos
ds
leave
or
xchg
shr
or
test
sbb
cmp
add
ficom
int3
cmp
adc
cmp
movs
mov
test
mov
push
xchg
sbb
cmp
dec
dec
sub
(bad)
in
(bad)
iret
call
mov
and
neg
and
daa
movs
dec
sub
cld
sbb
popa
mov
pop
push
ins
(bad)
xor
dec
retf
xchg
xchg
(bad)
out
test
push
bound
and
fwait
push
xchg
stc
retf
cmps
add
lods
jbe
mov
mov
and
mov
scas
push
ds
mov
mov
xor
cs
call
loope
push
sbb
fs
out
fmul
or
mov
lods
mov
jae
mov
sbb
(bad)
pop
cmp
retf
cld
popa
out
push
add
jmp
xor
dec
inc
ret
rol
xchg
push
dec
inc
aad
xchg
or
movs
dec
call
fstp
je
add
and
stos
jo
mov
add
loop
(bad)
clc
je
xchg
gs
mov
imul
xor
or
pop
push
in
arpl
repnz
in
stc
jle
mov
popa
dec
add
xor
xchg
xchg
mov
dec
mov
push
(bad)
jnp
call
jmp
movs
lea
jp
outs
pop
mov
dec
or
outs
and
fmul
shl
xor
rcl
lahf
(bad)
je
adc
call
and
fs
mov
jbe
mov
fld
js
and
push
clc
jg
add
shl
int3
daa
(bad)
push
adc
gs
loop
daa
xor
sub
test
pop
div
xchg
push
push
ret
or
dec
or
sub
sbb
ins
je
adc
or
jecxz
aas
add
icebp
cmp
mov
mov
mov
cwde
ss
jb
and
fcomp
sti
in
gs
ror
xchg
lds
or
inc
jo
loop
adc
hlt
jecxz
rcl
lock
aad
test
mov
loopne
jl
cli
aas
dec
and
fdivrp
and
xor
lahf
push
cmp
add
adc
shl
and
fdivr
mov
int
and
jae
jbe
repnz
(bad)
ficom
fidiv
mov
mov
outs
jmp
mov
pop
push
jo
dec
aas
xor
jmp
pushf
push
add
xor
popf
jno
(bad)
sti
fistp
fisub
mov
mov
rcr
add
or
jmp
leave
ret
bound
push
xchg
mov
lahf
hlt
mov
dec
adc
arpl
xchg
xchg
ja
ss
xchg
cdq
lock
xor
dec
jp
or
xcrypt-ofb
cmps
scas
frstor
retf
inc
jb
out
sub
adc
in
fwait
inc
xor
cmp
mov
in
fistp
movs
mov
jae
inc
pop
(bad)
enter
faddp
sbb
pop
and
pop
or
jo
xor
mov
aam
mov
sub
loop
sbb
jmp
cmp
sbb
pop
inc
mov
jle
outs
test
mov
imul
inc
push
xor
mov
loopne
lock
(bad)
push
leave
lods
inc
fdiv
cmp
call
popa
sti
cmps
into
nop
std
jb
sbb
aas
call
mov
test
mov
pop
loop
loop
mov
scas
sahf
cmps
lds
pop
sub
push
in
shr
or
inc
dec
and
push
mov
fdiv
xor
sar
xor
fisubr
fstp
ja
ficom
adc
in
sub
cmp
push
not
mov
adc
push
shr
or
push
xchg
scas
adc
sti
dec
dec
cmp
out
retf
cmp
dec
cmps
repz
ret
cld
rol
shl
mov
mov
imul
bound
(bad)
mov
sub
cs
dec
or
jmp
sub
push
mov
js
shl
lds
int
xchg
cs
leave
push
lahf
aad
add
cmp
fnstcw
aam
mov
call
loopne
push
loopne
jle
dec
call
inc
mov
pusha
inc
add
xchg
pop
mov
call
push
and
add
daa
aaa
or
dec
jle
ins
inc
ds
scas
push
(bad)
(bad)
cmp
sbb
ins
or
gs
mov
add
pop
push
cmp
dec
dec
lahf
jle
push
aam
add
in
je
iret
add
stos
mov
and
xchg
ret
ins
clflush
fstp
or
sbb
sub
push
cld
movs
mov
xchg
aaa
aas
shr
pop
xchg
xor
fst
or
pop
in
jbe
fbstp
add
imul
fs
push
push
jne
iret
test
jmp
fstp
aam
sub
jmp
xor
sub
or
push
push
adc
pop
add
jb
or
int3
sbb
jbe
xchg
xlat
cmp
xchg
sub
cwde
inc
fdivr
ror
jae
test
mov
aad
inc
and
sbb
and
sub
imul
pop
mov
and
sub
jb
mov
retf
jp
mov
xor
fstp
jno
dec
inc
(bad)
aad
aaa
js
jae
in
sti
jmp
retf
mov
dec
data16
pop
adc
add
inc
xor
lods
xlat
ins
out
adc
pushf
outs
adc
push
xchg
jecxz
pusha
jmp
jo
hlt
mov
sti
std
pop
inc
mov
(bad)
jmp
enter
jp
ret
xor
or
push
jno
add
cmp
push
mov
cmp
loope
inc
popf
push
frstor
mov
leave
or
icebp
imul
outs
cmps
cmp
pop
and
lds
lahf
in
outs
xlat
bound
pushf
mov
cwde
rcr
aad
test
or
xchg
cmps
mov
inc
aad
pop
push
ins
popf
call
lods
xchg
xchg
rol
mul
out
mov
mov
pop
sahf
(bad)
push
ja
adc
js
pusha
int
(bad)
int
std
jae
fcomp
icebp
pop
repz
and
int
test
inc
adc
jmp
xchg
(bad)
fiadd
mov
jge
into
retf
jecxz
mov
(bad)
dec
arpl
scas
inc
push
cmps
outs
mov
test
mov
jg
jo
add
pop
icebp
fbld
dec
mov
mov
retf
lahf
inc
ret
or
cdq
test
cs
inc
in
cmps
stos
je
dec
xor
mov
out
cmp
adc
jle
jp
inc
push
lods
fbstp
daa
dec
in
aas
ror
in
outs
int
(bad)
sahf
dec
cmc
retf
ret
cmp
mov
mov
or
fdivr
lods
movs
mov
push
jb
movlps
jmp
imul
movs
jmp
adc
cmps
mov
test
stos
cmp
adc
gs
xlat
fstp
aaa
sub
mov
fisubr
cwde
xchg
mov
xchg
in
pop
pop
ficomp
repz
(bad)
mov
inc
ret
addr16
int
outs
and
and
lods
dec
pop
push
cwde
xchg
push
imul
aad
pop
adc
jnp
xchg
add
mov
pop
or
jne
sub
sbb
hlt
cmps
dec
movs
dec
test
fidivr
push
mov
inc
imul
das
xchg
popa
pop
stos
les
imul
mov
std
(bad)
and
aas
mov
(bad)
imul
and
add
mov
pop
movs
mov
out
jae
dec
scas
stos
rcl
aam
mov
or
rcl
ficom
js
xor
push
sbb
xchg
es
or
xor
push
int
fcmovnb
and
xchg
movs
movs
cmps
cs
add
in
xchg
jge
xor
or
(bad)
cmps
adc
in
int3
inc
adc
pop
sbb
retf
xchg
ficomp
aad
cs
clc
loopne
sahf
lods
xor
mov
popa
fs
xor
inc
hlt
fnsave
dec
mov
pop
(bad)
mov
push
xchg
into
sub
icebp
jmp
lods
aaa
jl
jo
and
inc
xor
jl
cmc
nop
test
mov
adc
mov
outs
xchg
mov
sub
mov
aad
mov
ds
dec
sbb
mov
enter
inc
xor
jg
xlat
in
push
into
out
fiadd
jo
push
adc
dec
mov
mov
sti
(bad)
cmps
inc
and
mov
movs
rol
dec
das
push
push
mov
push
clc
xchg
xor
xor
sbb
(bad)
mov
cmp
jl
inc
push
dec
mov
pop
xchg
dec
inc
add
loopne
call
sbb
adc
inc
or
movs
(bad)
cmp
call
nop
pop
into
dec
rdmsr
arpl
das
pop
or
leave
ds
push
bound
mov
inc
test
loop
shr
pop
sub
jge
ins
mov
push
nop
fstp
hlt
add
rol
loop
ror
push
sbb
arpl
test
mul
fcmovnb
or
pop
jne
add
xchg
(bad)
mov
test
jmp
push
call
aas
jmp
pop
xchg
ret
cmps
xor
jg
cmp
mov
xchg
cwde
push
outs
(bad)
jecxz
push
repnz
xrelease
mov
lds
dec
movs
or
xlat
ins
inc
popa
shl
mov
sahf
popa
test
inc
scas
mov
ja
push
lods
loop
push
sub
pop
stc
fstp
das
pop
leave
outs
xor
fild
dec
cmp
jecxz
or
ja
jmp
addr16
xor
push
cwde
mov
xor
movs
mov
cwde
mov
inc
sbb
or
sbb
mul
(bad)
push
inc
jae
push
mov
adc
cmps
scas
les
cmp
out
cmp
bound
test
add
fwait
scas
push
cmp
xchg
test
shl
adc
mov
mov
je
call
aam
inc
or
pop
aas
pop
int
cmc
test
shl
cmp
sbb
cmp
shl
test
mov
cld
jno
fst
adc
cmp
xlat
sbb
dec
mov
xchg
sub
(bad)
scas
aaa
adc
add
repnz
pop
(bad)
in
inc
sahf
fimul
dec
pop
mul
daa
sbb
lock
out
xchg
jns
sub
jmp
mov
retf
mov
rol
ror
push
nop
mov
xlat
mov
add
or
std
cmp
xchg
mov
(bad)
fisttp
scas
and
sub
loope
sbb
vandps
cmp
(bad)
mov
(bad)
retf
dec
mov
mov
lock
dec
mov
inc
cmps
mov
push
into
push
hlt
lea
dec
inc
xchg
mov
push
dec
pop
push
or
repz
jge
xchg
retf
rol
into
jno
push
pop
or
pop
gs
add
dec
in
jbe
xor
jo
mov
add
ret
adc
add
pop
lods
fsub
cli
sbb
cmp
xchg
inc
ss
xchg
loope
xor
pop
in
xchg
(bad)
jb
xchg
inc
pop
(bad)
int
js
ins
outs
mov
mov
cmc
jge
cmp
imul
fstp
fcomi
call
dec
(bad)
pop
hlt
lds
les
push
mov
popf
dec
jae
ins
and
ret
jl
or
jne
jno
(bad)
push
pusha
dec
jl
cdq
dec
cmps
leave
mov
in
dec
idiv
fiadd
into
sub
adc
(bad)
int3
loop
xchg
stos
in
mov
push
sahf
mov
cld
addr16
mov
push
movs
int
cmp
pop
gs
scas
xor
mov
pop
mov
call
adc
in
add
sbb
lock
(bad)
push
stos
pop
fst
add
jnp
and
pop
je
pop
out
pop
push
inc
mov
loope
inc
and
mov
cmp
addr16
xchg
inc
dec
sbb
push
rcr
add
leave
outs
sbb
or
add
mov
adc
je
test
push
in
inc
(bad)
sbb
jae
xor
jl
adc
shr
daa
fistp
in
add
sbb
pop
adc
iret
pusha
adc
sub
fist
sub
fld
cmc
sub
cmp
or
pusha
sub
inc
imul
sbb
scas
push
lds
jg
mov
cld
xlat
sbb
inc
ja
push
cmp
jnp
fwait
lea
dec
aaa
out
push
mov
pusha
retf
mov
imul
and
cmp
in
sub
mov
and
or
cmps
sbb
fwait
add
pop
shr
cmp
cmp
dec
add
sbb
daa
xor
cs
pushf
rcl
int3
add
retf
cmps
push
rcr
leave
xor
shl
or
retf
lock
xchg
out
test
jl
sub
ret
cmove
outs
idiv
cmps
addr16
test
loop
loope
cmp
data16
push
shl
jle
shl
jo
bound
dec
cmps
test
cmp
add
xor
dec
pop
sahf
popa
dec
test
xchg
in
(bad)
pop
pop
loopne
int
pop
mov
mov
test
out
xchg
mov
sar
in
bound
loope
or
mul
gs
hlt
test
add
xchg
push
inc
pop
test
dec
xchg
das
les
rcl
fild
fwait
imul
(bad)
or
sbb
mov
loop
mov
cmp
test
sbb
jecxz
cwde
mov
fmul
jp
xchg
or
push
adc
jbe
or
xor
aaa
loopne
test
mov
jmp
pop
or
(bad)
inc
ja
je
lahf
sbb
lods
jae
inc
inc
cmp
(bad)
and
cld
inc
cmps
imul
test
xor
movs
fnstsw
fucomi
xor
pop
sbb
stos
dec
mov
cmp
in
mov
adc
sbb
div
mov
in
sub
dec
or
push
je
je
cmovno
jns
cmc
pop
cld
or
out
loopne
mov
ret
dec
mov
xchg
jmp
push
pushf
push
into
add
movs
xor
test
add
push
jle
(bad)
repz
ror
cmp
pop
aas
push
fnsave
(bad)
rcl
mov
pop
cld
outs
and
pop
jne
retf
jmp
in
adc
adc
in
cmp
mov
mov
mov
aaa
clc
or
cli
sbb
dec
lds
js
and
lods
pop
lea
cmp
add
mov
xor
nop
or
xchg
pop
pop
stc
popa
and
je
push
push
xor
cmp
mov
bound
and
mov
ret
mov
dec
cmps
jo
hlt
sub
adc
cmp
jne
dec
mov
test
in
gs
sbb
push
adc
xchg
adc
mov
dec
inc
retf
mov
push
ret
clc
icebp
inc
sbb
dec
(bad)
sub
cld
inc
cwde
fist
push
cmp
sub
je
add
inc
js
jmp
retf
test
repnz
and
mov
add
pop
xchg
xchg
mov
fs
jmp
xlat
mov
cmp
(bad)
cld
adc
cmc
(bad)
adc
mov
pushf
test
cmps
mov
in
mov
xchg
mov
int
test
jp
pop
push
cmp
fwait
outs
and
mov
mov
fsubr
addr16
fimul
(bad)
mov
ret
inc
(bad)
icebp
in
add
out
push
pop
pop
adc
ret
jae
push
sbb
mov
sahf
das
mov
sub
retf
(bad)
leave
aad
inc
les
stc
xchg
fst
adc
nop
mov
idiv
std
repz
cmp
call
stos
jne
lds
sub
ins
pop
sbb
es
cmps
je
rol
jns
pop
aaa
shl
outs
repnz
enter
push
cs
push
xchg
mov
out
cmp
iret
mov
pop
test
cmps
push
sub
push
fld
push
xchg
cmp
das
out
cs
das
popf
ficomp
icebp
pop
test
push
jecxz
and
cdq
or
inc
push
(bad)
push
mov
sbb
xchg
xchg
ret
in
fs
jb
call
push
iret
and
dec
das
pop
fsubrp
addr16
sbb
pop
rol
(bad)
jo
pop
call
add
ret
inc
nop
or
popa
add
jecxz
push
adc
xchg
xor
add
ja
dec
and
lds
or
cmp
and
xchg
jle
jmp
pop
cmps
add
adc
(bad)
fdivr
or
in
out
mov
hlt
pushf
inc
dec
push
movs
or
push
pop
pop
mov
cmp
in
push
mov
mov
js
add
add
ficomp
push
das
test
xor
push
push
sbb
imul
addr16
mov
in
mov
cmp
mov
fisub
jns
jmp
(bad)
xor
ss
and
(bad)
dec
mov
cmps
cmp
add
cdq
ds
push
ja
cmp
and
jg
shr
pushf
movs
pop
aam
push
aam
sbb
mov
in
in
cwde
cs
sub
or
cmp
mov
xor
ret
sar
icebp
pop
cmp
xchg
gs
imul
mov
mul
mov
(bad)
call
test
cld
or
inc
loopne
jmp
jne
push
into
xchg
push
addr16
aas
cmp
outs
jne
mov
cli
ins
cmp
jae
daa
popa
daa
stc
jmp
and
mov
iret
sub
or
jecxz
adc
sti
adc
test
xor
mov
push
out
jnp
sbb
sub
cdq
add
inc
aam
xor
or
mov
jmp
jo
xchg
mov
push
stos
movs
gs
(bad)
into
push
dec
jns
out
scas
push
cmp
bound
push
add
and
cs
push
push
cwde
or
dec
aam
int3
test
mov
adc
mov
ror
xor
mov
jno
leave
aad
xchg
mov
rcr
xor
leave
xor
out
and
(bad)
shl
and
dec
test
mov
adc
mov
mov
aad
sub
sub
and
cwde
test
call
dec
jae
pop
fcomp
ins
mov
jmp
ret
popf
jp
cmps
pop
mov
aas
(bad)
dec
js
arpl
ins
(bad)
push
or
and
cs
jecxz
jg
mov
rcr
fs
cs
dec
mov
leave
sbb
inc
arpl
hlt
push
mov
mov
pop
(bad)
clc
addr16
out
and
in
push
int3
or
sbb
dec
jmp
dec
add
or
push
test
lock
test
out
pusha
cs
add
clc
push
mov
(bad)
je
js
lock
xchg
cmp
pop
cmp
mov
repz
push
std
sbb
gs
mov
fsubp
xor
cmps
je
popa
jl
daa
test
fidivr
nop
jbe
sbb
xlat
xchg
pusha
retf
add
or
add
outs
aas
mov
test
imul
ja
(bad)
ins
xor
fadd
cdq
js
push
push
out
cdq
addr16
inc
push
inc
out
imul
jp
(bad)
or
mov
mov
mov
lahf
(bad)
(bad)
movs
cmp
pop
fisubr
out
pop
cmp
popa
pushf
jmp
sub
mov
or
pop
xchg
inc
xchg
push
mov
ins
pop
out
jecxz
pop
xchg
sbb
icebp
ror
sub
fisub
push
cld
sbb
xchg
jae
aas
mov
xor
mov
xchg
lock
ss
mov
nop
jge
mov
das
and
mov
push
mov
push
and
mov
cmp
xor
ja
int3
idiv
push
cmc
sahf
sti
jp
jo
sub
adc
xchg
dec
arpl
push
test
cli
dec
aad
adc
pop
addr16
jnp
dec
or
pop
push
ss
rcl
std
aad
test
and
fldcw
cmp
out
xor
xor
shr
jmp
(bad)
fdivp
repnz
(bad)
dec
dec
and
or
mov
in
(bad)
mov
sbb
in
xor
xchg
mov
ror
outs
movs
or
cmp
aam
push
lea
outs
cmp
pop
xchg
fidiv
xor
test
dec
adc
das
push
sub
inc
fninit
ins
adc
sti
mov
add
retf
imul
fpatan
mov
cli
pusha
pop
push
ins
xor
jae
push
fs
inc
push
(bad)
add
jle
jl
xchg
leave
jmp
movs
in
pop
in
ficomp
jp
cs
mov
jo
xchg
addr16
mov
aam
rep
adc
jp
jle
sub
test
mov
cmc
std
repnz
mov
mov
ficom
mov
sbb
outs
xlat
push
adc
dec
mov
jle
movs
je
push
dec
je
outs
out
aas
mov
mov
dec
scas
pop
mov
jns
xchg
inc
cwde
xor
push
sub
push
aam
push
fsubr
loope
mov
inc
sub
fdivr
imul
mov
jmp
cmp
mov
sub
sub
xor
adc
xor
add
inc
jne
or
push
fsubr
inc
call
ficomp
jmp
lea
retf
push
aam
inc
adc
sbb
repz
les
inc
je
call
pop
or
lahf
push
mov
mov
inc
aad
retf
jno
adc
or
pop
or
fdivr
fist
xlat
sti
out
pop
in
ins
(bad)
push
test
movs
cmp
xor
xor
adc
dec
xor
adc
jb
xor
mov
(bad)
fild
mov
cmps
dec
pop
cwde
call
fdivr
adc
daa
shr
sub
fidivr
push
int3
dec
mov
shl
sar
push
add
daa
jecxz
pop
lock
imul
fsub
mov
mov
enter
xchg
xchg
pop
outs
dec
xor
ins
aaa
test
repnz
mov
call
pop
pop
cld
iret
and
inc
fdiv
xor
stos
pop
push
inc
imul
cmps
mov
cmp
pop
aas
push
xor
lds
inc
xchg
not
xchg
lods
repz
cld
mov
js
mov
scas
lea
rcr
test
out
lods
push
xchg
push
int3
inc
mov
imul
enter
sbb
fcom
movs
sbb
push
push
adc
neg
aad
mov
and
push
fwait
lea
das
jl
ja
adc
aam
and
jno
xor
dec
cwde
push
aas
loopne
mov
xor
mov
inc
repnz
iret
stos
fcmovnbe
adc
mov
adc
out
jb
sbb
leave
dec
add
pusha
fldcw
jmp
pop
mov
rcr
test
mov
(bad)
hlt
jb
push
test
fimul
adc
xchg
sbb
inc
icebp
repz
cmc
push
out
cli
pusha
push
aas
movs
push
mov
pop
inc
out
je
pop
sub
call
sbb
fadd
pop
adc
sbb
js
mov
out
test
imul
ret
shl
mov
jp
jo
push
test
std
mov
test
push
mov
pop
and
test
std
pop
rcl
add
das
dec
mov
pop
nop
dec
jge
sbb
mov
les
cmp
pop
jp
push
sbb
movd
mov
push
xchg
int
cmc
jno
mov
popf
jne
(bad)
sbb
mov
cwde
arpl
inc
sbb
inc
push
xchg
dec
jecxz
call
jl
cmps
cmp
cmp
test
cmp
test
pop
js
mov
test
leave
cld
stc
neg
xor
arpl
adc
nop
mov
movs
pushf
or
(bad)
loope
adc
ins
mov
or
nop
inc
xchg
mov
push
adc
xchg
mov
dec
push
arpl
mov
pop
add
in
jle
mov
cmps
std
psllq
sbb
add
xchg
adc
cld
test
ss
pop
fdivr
shl
pusha
sub
push
push
or
mov
stos
sbb
jecxz
shl
xchg
call
(bad)
add
xlat
pop
das
cmp
jmp
aam
sbb
or
sub
retf
mov
leave
pop
repnz
mov
hlt
push
pop
les
inc
in
jae
sbb
pop
es
push
pop
fcom
mov
in
cmps
cdq
into
aaa
xchg
shl
inc
loopne
adc
xchg
mov
aas
sbb
shl
pop
mov
lea
mov
xchg
xor
or
mov
cmp
ficomp
inc
fisttp
loope
mov
leave
lds
sbb
push
sbb
pusha
and
jecxz
in
push
(bad)
mov
cmps
jge
mov
and
daa
push
call
pop
adc
jns
cmp
add
mov
int
stos
sbb
jne
xchg
push
xor
add
out
repz
sub
js
jmp
sbb
cld
push
pop
int
mov
mov
stos
js
shl
js
cld
gs
call
cmp
loope
ror
push
icebp
pop
cmp
movs
daa
pop
rol
and
call
cmp
xor
or
xchg
sahf
sub
push
fsubr
mov
mov
xchg
pushf
cmps
mov
stos
sub
mov
mov
sbb
test
sub
and
cmp
out
sbb
stc
in
sar
xchg
inc
mov
xchg
(bad)
sbb
(bad)
jge
loopne
jl
seto
movs
push
mov
add
mov
popf
dec
sbb
mov
pop
pop
dec
stos
nop
loop
xor
pop
add
test
ss
sub
pop
dec
push
or
out
ins
in
cmps
ins
cmp
xor
add
xor
fst
movs
and
adc
cmp
imul
les
into
xlat
jecxz
lods
aaa
and
inc
pop
push
mov
cmp
mov
push
push
cli
cmp
mov
cs
xlat
mov
mov
dec
scas
mov
xchg
stos
sub
popa
pop
test
loop
loope
mov
adc
ins
cmp
call
mov
jbe
pop
mov
pushf
ret
into
imul
cmps
xor
sbb
add
mov
push
mov
fnstcw
pop
and
pop
popf
pop
ins
int
jmp
inc
and
push
adc
xchg
jmp
or
test
cmp
dec
or
test
ds
xor
loop
push
jmp
in
xchg
dec
rcr
dec
pop
sbb
pop
scas
jns
sub
dec
ja
sub
shl
cmc
sbb
pop
mov
(bad)
jb
and
loop
mov
xchg
fcomp
pop
xlat
movs
inc
mov
jbe
xchg
les
or
push
jne
sbb
lock
les
gs
jg
in
push
jmp
inc
and
lock
(bad)
call
sbb
xor
pop
mov
iret
cdq
call
rcl
mov
cmp
or
into
push
dec
popa
jecxz
or
ret
mov
nop
data16
sbb
xor
xchg
cwde
adc
fiadd
or
fild
and
fdiv
pop
das
iret
iret
dec
mov
inc
xchg
xchg
cmps
xor
pop
movs
mov
add
pop
movs
mov
ret
mov
cld
add
xchg
js
outs
adc
mov
add
adc
cmp
mov
sahf
dec
mov
add
mov
inc
leave
icebp
sbb
outs
scas
jae
adc
jb
sbb
fcmove
lea
jecxz
xchg
out
in
mov
xlat
push
xor
mov
in
test
inc
and
loopne
mov
and
pushf
jae
push
adc
std
adc
cmp
ins
ins
dec
stos
in
loopne
fpatan
aaa
push
test
pop
sub
pop
dec
shr
je
ret
sbb
ja
hlt
mov
pop
in
xor
mov
aam
xchg
arpl
adc
rol
sbb
mov
popa
cmc
sahf
xchg
test
cwde
mov
retf
pop
pop
cs
cmp
dec
jb
dec
(bad)
out
push
inc
shr
std
pop
mov
in
int3
popa
pop
movs
mov
aad
jne
or
xchg
lock
test
mov
rol
mov
cmp
mov
jge
jle
(bad)
xchg
cdq
push
xchg
inc
xchg
shl
or
pushf
daa
dec
movs
daa
dec
and
jecxz
add
gs
es
in
cmps
ss
jp
inc
rol
mov
test
pop
jne
and
ffreep
sub
aam
sbb
adc
xchg
dec
loop
sbb
idiv
jae
sub
jb
ret
(bad)
out
adc
inc
dec
and
xchg
push
fsub
gs
mov
loopne
repnz
push
xchg
rcr
jge
es
(bad)
inc
aad
loopne
mov
repz
mov
addr16
dec
ins
movs
lock
nop
jns
inc
adc
sbb
lods
xor
push
pop
popf
push
jbe
add
cmp
pusha
add
and
xchg
les
call
adc
in
or
push
test
xor
add
and
movs
xor
xchg
lds
repz
out
in
jbe
clc
das
icebp
adc
xchg
xchg
mov
(bad)
jmp
sahf
repnz
and
test
xchg
mov
arpl
fisttp
xor
rol
sub
add
sub
fst
rol
cmp
nop
sub
dec
adc
pop
aam
add
xchg
xchg
arpl
imul
sahf
dec
lods
scas
and
mov
xchg
inc
stc
xchg
(bad)
(bad)
xor
mov
inc
mov
jns
(bad)
push
mov
stos
xchg
xchg
scas
in
ss
xor
sahf
add
stos
mov
ins
ss
adc
and
sahf
mov
ss
(bad)
bnd
inc
stos
mov
mov
push
lds
hlt
dec
les
dec
jno
xor
mov
retf
inc
xchg
fisub
sahf
outs
xor
sbb
sub
xchg
sbb
cli
mov
retf
mov
xchg
and
cmp
out
stos
xor
lahf
fistp
outs
data16
shr
pushf
cmp
sbb
and
inc
adc
add
xchg
call
in
cmp
fcom
xchg
push
mov
adc
data16
pop
lods
(bad)
cmp
mov
pop
cwde
push
loop
inc
and
loope
add
inc
retf
adc
retf
ds
rol
lods
sub
or
push
retf
outs
scas
loop
xchg
add
nop
lock
cmp
fdiv
mov
xchg
lahf
cmp
stc
loope
jle
nop
shl
and
dec
push
mov
push
adc
lods
ins
pop
stc
arpl
inc
mov
or
movs
mov
xor
scas
and
mov
sbb
addr16
dec
sbb
mov
sbb
es
sub
outs
or
cmp
cli
sub
pop
adc
repz
lahf
push
cmp
mov
pop
(bad)
outs
lahf
fiadd
dec
inc
cmps
lahf
outs
hlt
(bad)
jno
lods
icebp
pop
xor
or
jl
test
xchg
scas
bound
inc
jmp
push
(bad)
mov
mov
pop
jo
add
pop
cdq
scas
fs
je
mov
adc
out
fisub
outs
clc
adc
xchg
sbb
jnp
jnp
cmp
stc
jmp
dec
adc
push
cdq
mov
jecxz
mov
std
movs
and
dec
push
pop
mov
inc
shl
in
mov
adc
pop
dec
stc
adc
or
jmp
loope
push
adc
popf
imul
pushf
fsubr
lahf
mov
dec
pop
sbb
push
in
ds
and
sbb
sar
cmps
enter
dec
repz
arpl
wrmsr
(bad)
xchg
out
sbb
sub
mov
pop
sbb
loope
leave
js
pushf
jae
es
icebp
sar
test
mov
(bad)
sar
lahf
sbb
out
cmps
pushf
and
loopne
mov
lods
sub
sbb
std
jp
mov
adc
push
aaa
std
sbb
fild
cwde
and
ficomp
retf
repz
ror
xor
push
mov
dec
pop
cmp
(bad)
cld
les
invd
aas
sbb
pop
jnp
jns
bound
fsub
xchg
sar
add
sub
jp
dec
sbb
retf
imul
stos
inc
test
push
and
jge
lods
icebp
xchg
pusha
mov
test
push
test
ret
test
cmp
call
cmc
adc
mov
outs
sub
sbb
pop
jno
jp
retf
(bad)
aam
lahf
mov
in
sti
xor
js
ins
mul
daa
pop
pop
inc
fistp
push
add
out
arpl
adc
in
sbb
sbb
ror
adc
fdivr
cmp
je
dec
out
add
xchg
mov
mov
(bad)
sti
jp
nop
int
fsubr
inc
pop
or
sub
xchg
lahf
or
sbb
add
cli
push
adc
test
imul
sbb
jg
push
sbb
popf
shr
(bad)
aam
add
cmp
inc
lea
fld
movs
cdq
cmp
mov
stc
pop
xchg
ds
jmp
inc
in
dec
xor
xchg
and
xchg
retf
dec
cmc
les
xchg
dec
mov
lea
iret
sbb
aaa
sbb
inc
in
pop
cs
pusha
loop
push
sbb
push
jmp
int
(bad)
out
or
pop
outs
test
retf
jg
stos
push
sbb
sbb
push
hlt
cmps
out
test
sub
inc
in
in
loop
push
mov
jns
call
mov
xchg
and
imul
sbb
xor
jmp
push
sbb
mov
push
sbb
or
xchg
imul
test
(bad)
sub
jmp
ins
test
mov
outs
add
shl
add
dec
sbb
cmp
pop
add
sub
pop
dec
push
ins
sub
jg
xor
sub
and
sub
mov
lahf
repnz
adc
sbb
sti
or
xchg
xor
jmp
call
jmp
rcr
inc
or
outs
cmc
mov
add
jecxz
mov
aas
out
shl
arpl
sar
(bad)
adc
dec
fld
cmp
ret
bound
mov
and
mov
clc
icebp
xchg
(bad)
icebp
outs
jne
daa
or
daa
inc
mov
sub
div
xlat
outs
sbb
mov
or
cmp
mov
into
adc
mov
xchg
popf
movs
aam
pop
lods
mov
outs
cmc
adc
inc
mov
jp
inc
outs
cdq
add
test
mov
ss
push
fimul
scas
mov
ret
xor
daa
pop
cmovl
xchg
push
mov
sbb
dec
and
addr16
mov
add
xchg
inc
(bad)
or
stos
pop
jge
test
int
sbb
adc
daa
rcr
xor
inc
cmp
sub
pop
add
inc
icebp
cmp
xchg
(bad)
cmps
test
mov
xchg
test
scas
mov
add
cmp
aam
mov
test
lock
sbb
mov
rcr
xchg
arpl
jge
xchg
adc
push
adc
adc
pop
sbb
(bad)
mov
test
mov
pop
pop
mov
push
push
nop
sbb
xchg
lea
(bad)
cld
add
mov
dec
mov
lods
loopne
push
jg
lds
je
push
fbld
scas
sahf
scas
jbe
mov
mov
(bad)
xor
mov
fild
(bad)
ins
stos
mov
repnz
push
push
or
dec
cmp
pushf
(bad)
mov
scas
scas
pop
xchg
ja
aam
ins
mov
mov
cmps
push
cmps
aam
int
xchg
mov
sahf
push
mov
xchg
dec
cmp
cdq
sar
(bad)
dec
push
dec
fwait
pop
jecxz
bound
les
jnp
xor
inc
mov
jmp
xlat
out
aaa
xor
mov
shl
arpl
jp
repnz
test
adc
loope
add
stos
daa
pop
test
adc
ror
push
call
in
ror
pushf
pop
leave
mov
or
pop
mov
push
inc
mov
mov
pusha
(bad)
pop
xor
les
fld
sub
lds
cmp
cmp
pop
in
out
sub
(bad)
dec
(bad)
rcr
(bad)
mov
sbb
sbb
inc
test
mov
test
cmp
mov
dec
aaa
cdq
sbb
in
rol
push
mov
inc
mov
sub
add
cmc
test
jl
cmc
or
nop
(bad)
das
inc
mov
shl
pop
fwait
sar
dec
xchg
push
popa
pushf
cmp
pop
mov
nop
rcl
out
pop
add
adc
(bad)
(bad)
push
push
cmp
iret
pop
mov
cmp
sub
dec
sub
gs
retf
call
inc
cmps
fdiv
pop
pushf
sbb
or
jmp
push
sub
pushf
test
push
outs
outs
outs
mov
mov
sub
imul
mov
out
sbb
push
retf
fld
push
aad
stos
sti
aad
fwait
push
mov
ror
ret
lods
sbb
sub
movs
hlt
sar
clc
xchg
sbb
dec
mov
mov
xchg
jne
sub
add
imul
dec
(bad)
jp
sbb
std
and
xchg
mov
mov
aaa
cmp
retf
in
add
lahf
xor
and
mov
mov
into
adc
cdq
das
rol
sbb
xor
cmp
ret
das
sub
or
jmp
mov
pop
aad
jmp
jmp
jno
pop
(bad)
mov
ret
cmc
in
dec
mov
cmps
adc
int3
mov
mov
xchg
js
mov
push
pop
pop
dec
cs
jl
popa
cmp
lock
gs
dec
cmps
and
pop
push
popf
pop
icebp
mov
xchg
lea
dec
mov
push
xchg
jno
in
adc
je
aam
or
outs
addr16
cmp
jns
lock
mov
mov
add
jns
and
dec
jno
pusha
dec
ss
rcr
mov
cmp
ret
and
sbb
sbb
sbb
push
pushf
repnz
pop
out
dec
push
fisub
retf
fs
and
fldenv
and
pop
outs
push
call
dec
push
cmp
add
std
pop
es
repz
adc
cdq
outs
arpl
dec
mov
retf
mov
inc
sbb
out
pop
sahf
mov
or
ja
fbld
and
fs
into
mov
push
mov
inc
nop
or
addr16
stc
icebp
into
mov
rcl
leave
mov
mov
in
cmp
xchg
test
push
sahf
(bad)
jne
into
std
jmp
sub
rcr
je
or
ins
pusha
sbb
mov
jns
arpl
fst
cs
icebp
fsubr
retf
mov
push
lock
pop
out
push
in
mov
xor
or
jl
xchg
xchg
inc
fstp
in
fs
push
movs
sub
or
leave
ins
repnz
shl
fcmovnb
icebp
mov
loop
fsubr
adc
mov
push
das
popa
adc
retf
xor
jne
jbe
dec
out
xchg
mov
in
iret
iret
scas
cmp
js
and
xor
imul
xchg
dec
mov
pop
and
mov
jmp
push
or
pop
fwait
cld
iret
adc
push
inc
mov
inc
enter
fsubp
dec
mov
icebp
in
sub
and
xlat
outs
or
mov
stc
dec
sahf
ins
stos
les
idiv
pusha
push
jmp
cmp
cmp
adc
cmps
gs
xor
fsub
ficomp
mov
jmp
shr
js
xor
mov
xor
imul
mov
add
pop
je
loop
adc
in
imul
fcom
mov
(bad)
mov
(bad)
fs
mov
jecxz
xchg
cmps
scas
jmp
mov
or
lds
stos
adc
pop
cmp
mov
(bad)
(bad)
stc
aad
es
fisttp
and
jp
rol
inc
or
into
lea
into
pop
adc
jl
mov
push
jbe
and
sbb
pop
adc
(bad)
sti
mov
jbe
je
arpl
jl
sahf
clc
scas
mov
adc
cdq
arpl
dec
mov
fcomp
es
jecxz
pop
or
dec
mov
mov
ds
and
sar
lods
aaa
jp
pop
dec
stos
lods
in
leave
dec
add
out
iret
xor
mov
call
movs
imul
test
ffree
call
sbb
in
test
inc
sbb
jl
adc
(bad)
loop
or
je
in
push
out
add
div
add
jle
jg
icebp
mov
mov
jnp
inc
sub
fist
popf
lea
mov
daa
out
push
push
aaa
adc
xchg
ret
pop
sub
mov
jb
jle
repnz
fdivrp
arpl
mov
leave
add
rcr
cmps
iret
ja
inc
hlt
jg
retf
sbb
or
or
mov
arpl
sbb
inc
inc
mov
add
xchg
mov
daa
sub
mov
adc
or
loope
dec
cmp
push
daa
ins
fiadd
inc
imul
push
add
sub
std
mov
xchg
imul
(bad)
mov
imul
outs
or
dec
loop
inc
pop
mov
not
adc
mov
cmps
push
out
adc
aad
repz
int3
stc
(bad)
and
in
pop
inc
loopne
out
ja
clc
dec
(bad)
popw
xor
sbb
sbb
mov
push
(bad)
iret
and
cli
and
fucomip
mov
xor
cmp
retf
hlt
sub
xor
ja
fsub
ja
lea
xor
cwde
loope
test
sbb
ficom
mov
std
xchg
mov
das
loop
push
push
ret
mov
(bad)
repnz
push
rol
dec
cmp
xor
mov
xchg
dec
lds
sub
and
cmc
mov
test
fnsave
je
xchg
pop
shl
jbe
aaa
mov
jae
add
mov
test
jns
(bad)
fs
xchg
repz
jmp
in
jmp
mov
cdq
cld
outs
sub
xor
mov
call
jo
out
cmp
adc
ret
cmp
push
test
shl
(bad)
stc
mov
test
icebp
out
or
cmp
out
cmp
aas
mov
xor
js
sbb
popa
into
in
xchg
cmp
pop
fmul
pushf
pop
in
repnz
xor
mov
or
add
ds
push
mov
aam
hlt
into
mov
adc
push
pusha
(bad)
in
arpl
sar
fmul
fucompp
jo
xchg
mov
mov
aad
movs
jecxz
push
pop
mov
out
stos
push
cld
adc
pushf
(bad)
stos
jnp
addr16
pop
pop
xchg
xchg
fwait
xlat
call
add
(bad)
es
and
lods
xchg
dec
dec
cli
jns
fcomp
dec
cmc
dec
mov
aas
mov
cld
inc
jmp
pop
out
push
fsub
adc
inc
inc
xchg
fs
mul
js
dec
jb
nop
mov
out
mov
sahf
sub
mov
hlt
mov
mov
xchg
cmp
xchg
dec
fild
rcr
mov
mov
movs
in
mov
sub
stos
add
out
enter
and
sbb
je
les
in
mov
shl
push
push
out
repnz
mov
fs
sub
or
add
mov
pop
cmp
pop
cmp
in
mov
mov
cmc
test
sub
lods
cmp
sub
scas
in
fwait
and
xchg
cmp
sbb
int3
push
dec
in
in
lock
leave
pmaddwd
adc
jle
pop
xchg
push
push
movs
mov
ret
and
ins
sub
jmp
ficom
cmp
push
repnz
or
rol
ror
pop
push
adc
xlat
jp
jle
add
or
adc
mov
call
shr
(bad)
(bad)
or
div
xchg
lds
js
cmp
jge
cdq
aas
mov
jg
or
lods
or
sub
and
push
(bad)
in
mov
inc
xchg
xchg
(bad)
mov
out
inc
test
aam
dec
push
sbb
push
mov
pop
shl
into
mov
or
mov
mov
pop
cdq
add
mov
out
push
push
pop
mov
push
out
test
movs
pop
sbb
(bad)
out
inc
repz
mov
inc
pop
mov
xchg
stc
imul
jnp
add
xchg
sahf
out
into
xor
(bad)
mov
cmp
add
and
fnsave
inc
mov
pop
aas
push
dec
hlt
xchg
hlt
jge
fiadd
imul
sbb
jmp
call
aaa
or
xor
mov
arpl
sbb
pop
adc
jmp
in
std
dec
xor
inc
mov
mov
pop
retf
pop
sti
test
sahf
jmp
xchg
scas
jnp
push
xchg
adc
arpl
jnp
dec
add
fdiv
xchg
mov
push
dec
or
std
mov
int
push
rcl
sbb
in
add
push
shr
ficomp
inc
mov
add
jmp
sub
shl
clc
loop
sbb
push
sbb
div
pop
pop
mov
cli
data16
xor
pop
xor
mov
aas
jno
shl
fiadd
retf
pushf
pusha
inc
jbe
ja
add
sahf
call
ret
leave
or
gs
addr16
lea
bnd
lahf
stc
push
xchg
shl
mov
lea
not
fisubr
push
jmp
mov
lock
add
pop
mov
xchg
ss
xchg
int3
xor
jg
sub
jo
iret
mov
stos
jne
out
imul
pop
jnp
cmp
(bad)
pop
aaa
sahf
test
or
add
mov
xor
inc
pop
pop
mov
cmps
sub
cmps
mov
cmp
mov
rcl
and
pop
fild
rol
mov
pop
stc
inc
fistp
jae
mov
mov
les
and
adc
out
loope
sbb
(bad)
jno
push
out
pop
cdq
push
xchg
iret
ja
or
push
fs
loope
loope
das
cmps
push
inc
mov
jno
xchg
xchg
or
add
dec
repz
jo
push
(bad)
retf
or
mov
jg
inc
mov
call
js
sub
out
sub
test
xchg
sbb
ret
std
mov
(bad)
push
xchg
popa
mov
fwait
sti
add
loope
cmp
and
lods
mov
dec
stc
mov
mov
or
data16
mov
imul
jnp
data16
out
mov
loope
call
pop
outs
out
dec
dec
es
sar
mov
movs
sub
pusha
add
inc
lods
retf
lahf
jbe
lods
mov
jb
cmp
into
sar
mov
pusha
cmp
shl
push
sbb
outs
add
fild
xor
aas
or
lods
cli
push
xor
push
sub
xchg
stos
cmp
push
mul
jle
add
mov
push
cmc
ret
ins
sti
les
retf
repz
and
rcr
scas
loope
sub
test
or
in
iret
xor
jb
fucomi
fdivr
test
pop
enter
in
aam
popf
push
pop
js
fcom
ja
push
sbb
add
scas
gs
bound
xchg
xor
sub
ins
and
aas
(bad)
enter
fistp
sbb
inc
or
in
add
adc
fisub
cmps
xor
call
aaa
mov
sbb
inc
mov
sub
rcl
clc
pop
push
repnz
call
ficom
cld
mov
pop
test
mov
inc
mov
repz
adc
xor
out
xchg
pop
or
test
mov
push
jo
or
shl
pop
and
pop
stc
or
out
sbb
daa
das
mov
mov
xchg
aas
imul
imul
sti
push
jo
xchg
jmp
int
dec
and
stos
je
dec
fbld
dec
pop
adc
xor
mov
gs
fisubr
ret
push
adc
imul
or
fild
aaa
stc
and
cmp
pop
mov
addr16
cmps
in
pop
xor
or
pop
out
add
and
repnz
xor
jmp
mov
and
mov
ret
enter
xchg
out
ja
fdivr
jmp
pusha
adc
sbb
jg
popaw
mov
(bad)
(bad)
xchg
into
mov
test
adc
and
xchg
mov
dec
cmps
cdq
into
mov
leave
dec
or
inc
ds
enter
scas
gs
data16
ja
cs
cmp
mov
jnp
pop
dec
mov
movs
inc
hlt
dec
cmp
imul
mov
push
mov
hlt
inc
out
push
push
pcmpeqw
hlt
fld
idiv
dec
adc
outs
mov
and
popf
iret
cwde
mov
movs
out
sub
icebp
(bad)
cmp
ja
aaa
add
in
sbb
pop
pop
mov
xor
jecxz
xchg
jg
adc
mov
pop
ds
inc
pushf
cli
fs
inc
inc
xor
cmp
and
cmp
(bad)
jle
sar
lods
pop
stos
rcr
xor
and
pop
fild
xchg
mov
cld
sub
out
das
push
pop
jg
cld
inc
cmp
dec
sub
not
jns
xor
mov
sub
sub
push
and
pop
pop
das
mov
mov
sar
mov
rol
ds
lea
pop
inc
test
push
push
mov
and
nop
test
in
xchg
push
lds
xrelease
adc
mov
cmp
push
dec
dec
cmp
addr16
jecxz
stc
adc
mov
bound
ins
push
mov
aaa
mov
jecxz
cmp
call
dec
sub
mov
das
fwait
sbb
sbb
sub
retf
xor
(bad)
xor
neg
mov
push
push
sbb
pushf
and
lds
mov
push
cmps
pop
std
pop
cmps
jo
pop
and
pop
push
imul
cmc
addr16
or
mov
scas
cmp
mov
or
sub
xor
adc
sbb
cmp
in
mov
iret
in
mov
gs
and
push
repz
test
mov
sbb
out
shl
daa
loope
(bad)
int3
rol
add
lea
push
jo
push
sbb
dec
scas
lea
sub
jge
mov
lods
in
push
cmp
cwde
int
inc
or
ficom
fwait
pop
xor
dec
jno
fs
cmp
xchg
or
movs
inc
repnz
nop
push
ins
fnstcw
jl
jne
stc
cmp
ins
lahf
xor
scas
adc
inc
add
xchg
int3
sbb
ja
mov
test
clc
dec
and
aaa
outs
loopne
jae
mov
or
rcr
inc
xchg
bound
add
pop
and
jno
fcmovbe
dec
mov
addr16
lds
jae
adc
scas
adc
pop
jno
xor
stos
push
inc
rcl
sbb
cdq
lock
ror
or
lea
mov
dec
inc
arpl
dec
pop
daa
movs
loopne
cmps
dec
(bad)
cwde
inc
xor
movs
ucomiss
gs
push
ins
ret
stos
stos
sub
mov
sub
mov
test
sti
cmp
call
movs
scas
loope
je
sbb
mov
xchg
das
xor
pop
or
es
popf
pop
mov
int3
mov
and
ins
jmp
retf
mov
in
inc
xchg
cli
xor
xor
(bad)
push
nop
mov
mov
jns
loopne
bound
jb
js
inc
fidiv
fwait
mov
lods
pop
das
hlt
fcom
mov
cmp
mov
push
pop
adc
inc
mov
sbb
aad
scas
push
mov
call
fldl2t
outs
and
dec
test
sub
test
cwde
es
js
(bad)
daa
xchg
scas
(bad)
(bad)
movs
int
int3
in
and
test
or
push
or
push
fist
cs
xchg
sub
sub
test
neg
pop
dec
mov
xchg
test
fnstsw
lahf
cmp
pushf
or
scas
in
mov
test
int3
xor
mov
mov
mov
pop
ret
adc
sbb
pushw
fisubr
inc
inc
inc
mov
cmp
sahf
inc
in
add
shl
sar
out
sbb
es
(bad)
push
push
repz
mov
xchg
int
adc
mov
xor
jne
cmp
adc
data16
loope
and
push
sti
push
sub
out
inc
pop
mov
lods
pop
jmp
call
mov
add
sub
dec
iret
sahf
cmp
sbb
sub
retf
lods
pop
mov
inc
push
out
and
dec
mov
push
sub
into
mov
and
push
or
das
sbb
(bad)
mov
dec
jecxz
mov
sbb
inc
pop
idiv
and
mov
test
das
js
inc
sahf
test
inc
dec
push
hlt
or
cmp
push
data16
imul
(bad)
and
add
mov
repnz
lds
push
or
ret
sbb
cmp
sub
rcr
or
or
push
retf
aad
leave
add
and
inc
ror
mov
scas
imul
les
(bad)
stc
dec
scas
push
ja
and
hlt
xchg
nop
(bad)
cmp
int3
into
push
mov
jg
mov
adc
xor
pop
inc
sar
xchg
hlt
xor
jge
(bad)
mov
fs
cmp
mov
nop
dec
pop
or
xchg
and
jo
rol
push
mov
mov
adc
xchg
jb
mov
jo
mov
outs
jo
pusha
mov
xor
inc
ds
cmp
mov
bound
mov
outs
fs
pop
pop
aad
ror
add
fidiv
data16
in
cld
and
sbb
sti
or
and
sar
rcr
mov
jns
cmp
push
rol
jge
movs
(bad)
inc
mul
jge
lds
push
dec
pop
cmp
xchg
inc
shr
nop
scas
dec
jbe
pop
call
loopne
xor
aad
push
push
jg
imul
add
leave
push
cmp
inc
cmp
or
mov
xor
shl
fisttp
mov
jno
cmps
hlt
es
in
dec
and
xchg
or
cs
out
maskmovq
mul
push
dec
out
push
ret
movs
adc
adc
mov
popa
data16
imul
mov
push
lods
adc
adc
ja
data16
inc
aad
hlt
xchg
adc
sub
ficomp
jae
das
js
cmps
cwde
mov
sti
sub
inc
sbb
mov
or
xchg
mov
pop
dec
mov
jmp
js
out
loopne
fiadd
test
idiv
sbb
and
mov
pop
adc
cdq
xor
pop
cmp
sbb
cmp
xchg
pop
loop
cmp
xor
mov
and
jae
adc
mov
nop
jle
aam
push
ins
mov
int3
add
and
inc
stc
mov
push
ins
mov
int3
js
shr
add
movs
stc
or
stc
(bad)
xor
xchg
cli
dec
lahf
ins
jmp
cmp
fmulp
add
lock
mov
rol
loop
ins
outs
mov
shr
dec
cmp
inc
sbb
addr16
mov
fnstcw
fwait
xor
daa
and
lds
inc
or
pop
cmp
scas
cld
ss
xor
test
emms
pop
add
cmp
inc
push
jne
scas
rcr
pop
or
cmp
lock
or
add
and
pop
enter
popf
pushf
das
mov
push
(bad)
push
dec
ds
pop
fs
push
sub
rol
adc
stc
jmp
cwde
pop
inc
sub
and
add
mov
enter
pop
and
jne
cmp
das
xchg
xchg
inc
hlt
and
fisub
test
je
lock
and
jno
lods
inc
enter
cmp
pusha
jl
dec
mov
xor
and
pop
stos
hlt
and
sub
movs
fdivr
mov
pop
lds
pusha
add
rol
out
(bad)
popf
or
add
xchg
dec
arpl
sub
scas
adc
push
jl
retf
inc
out
add
es
out
fnstenv
pop
pop
mov
or
in
push
aam
dec
dec
stc
sub
ficomp
or
xchg
out
jb
ins
dec
test
iret
mov
(bad)
shl
cmp
dec
scas
or
in
nop
mov
in
cmp
test
(bad)
scas
aam
aaa
inc
push
push
pop
cs
cwde
shr
cmp
push
pop
and
or
into
imul
enter
or
shl
(bad)
jge
in
and
jmp
jo
mov
arpl
cmp
mov
aam
jb
mov
mov
push
cdq
enter
push
mov
or
leave
push
dec
dec
ror
outs
mov
jg
ds
dec
push
mov
cwde
cs
outs
outs
icebp
mov
daa
ds
jno
and
mov
cli
inc
add
adc
stos
mov
mov
and
lds
cwde
pop
and
push
mov
mov
push
jne
jge
xchg
mov
dec
jg
mul
mov
mov
lds
jmp
stc
xor
cmp
ins
test
xchg
inc
nop
(bad)
pop
dec
xor
dec
cs
pop
and
(bad)
and
mov
cmp
ja
aad
inc
imul
rcl
add
(bad)
lods
and
xchg
cmp
fidivr
lods
add
dec
push
repnz
imul
stc
imul
out
int3
push
push
mov
and
and
mov
sub
sahf
and
repz
mov
sbb
cs
mov
in
jbe
out
push
push
inc
push
test
push
pop
gs
cmp
add
push
pop
or
(bad)
les
add
push
inc
mov
mov
fdivr
push
mov
ins
arpl
dec
js
movs
or
jg
aad
(bad)
lods
add
mov
ficom
dec
mov
or
mov
mov
imul
dec
aad
(bad)
addr16
mov
jg
mov
(bad)
push
iret
(bad)
fwait
xor
fldcw
mov
mov
sbb
mov
lea
cli
lea
jb
ret
fwait
cmp
cs
frstor
ds
cmp
arpl
sub
mov
addr16
repnz
xchg
fld
cli
imul
getsec
call
inc
add
fist
(bad)
or
(bad)
push
push
aad
ret
(bad)
mov
scas
mov
pop
sbb
inc
mov
aaa
push
dec
sub
lock
add
sbb
cmp
mov
and
movs
pop
stc
std
dec
and
jmp
jl
cmps
cdq
cmc
pop
int3
mov
push
push
sbb
cmp
mov
pushf
mov
scas
jno
lods
cmp
push
push
jns
pop
sbb
ins
call
sub
cmp
or
mov
fild
fdiv
cld
cs
(bad)
or
aam
aad
movs
xlat
pop
pop
inc
(bad)
dec
fdiv
sahf
sub
jmp
xchg
xchg
popa
sbb
cdq
enter
test
pop
xor
(bad)
data16
arpl
inc
fistp
dec
je
and
push
inc
cdq
stos
fwait
lahf
add
mov
ins
ja
imul
fmul
or
fmul
inc
mov
pop
pop
fisub
jno
nop
pop
inc
(bad)
xchg
or
scas
movs
(bad)
xor
push
cmps
popa
and
mov
in
popa
aad
aas
sub
call
ror
inc
(bad)
cmc
pop
data16
scas
xchg
jge
ss
xchg
xchg
addr16
xchg
push
xor
mov
in
adc
lock
and
xchg
test
dec
aas
mov
jns
cmp
aad
lahf
stc
pop
ins
mov
inc
inc
fisttp
jnp
sub
xlat
lds
xchg
adc
mov
xor
repnz
popa
mov
xchg
xlat
and
call
add
jmp
mov
pushf
pop
cs
icebp
ins
adc
shld
xchg
scas
stc
mov
push
call
fdiv
nop
mov
ins
ret
int3
add
jmp
cld
outs
push
jo
fistp
pop
imul
(bad)
mov
in
inc
adc
das
je
pcmpgtb
and
pushf
pop
cmc
(bad)
sub
pop
int
and
or
das
xor
popf
pushf
sub
in
jp
stos
adc
xor
retf
scas
mov
icebp
das
inc
test
or
int
adc
js
fwait
fs
inc
adc
aas
dec
push
dec
aas
mov
pop
fst
inc
ss
jp
gs
sar
adc
shl
push
xor
std
and
push
aaa
push
stc
cli
shl
fmul
and
movs
pushf
cmp
mov
in
xor
fst
in
ret
jg
jl
rcr
int
or
xchg
add
jns
adc
adc
jge
xchg
mov
sub
pop
cmp
mov
outs
test
push
mov
xor
test
(bad)
cmp
imul
cs
in
into
shl
inc
es
lds
xor
mov
pop
sub
jg
push
sahf
std
jbe
hlt
je
cs
aad
pop
fs
sbb
fimul
and
lds
xor
call
cs
push
pop
adc
ror
mul
dec
stos
sbb
mov
fild
xchg
(bad)
fwait
pop
adc
repnz
mov
jne
xor
xor
adc
inc
mov
mov
movs
cmps
ret
ins
push
push
xchg
loopne
lods
mov
cs
xor
jb
xor
push
pop
inc
xchg
loopne
mov
push
(bad)
sbb
push
enter
(bad)
icebp
sbb
les
jle
adc
cmp
adc
xor
xor
outs
push
push
jecxz
or
mov
mov
pop
jo
inc
jae
push
jl
xchg
xlat
movs
add
arpl
out
(bad)
xor
adc
sete
push
sub
xchg
(bad)
shl
inc
mov
inc
pop
fisttp
mov
pop
fistp
cld
sar
cli
mov
cmc
sub
and
shl
and
dec
in
mov
push
imul
dec
int3
or
cs
stos
pop
std
pop
aam
popa
sbb
aad
push
pop
movs
sub
popa
cmc
push
scas
sbb
xchg
lods
mov
xchg
dec
fucom
cmp
shr
xchg
sbb
loop
pop
fs
sub
xchg
and
in
fiadd
or
mov
pop
pop
(bad)
sbb
cmp
stc
loopne
push
icebp
enter
add
aad
and
sub
stc
test
push
cld
fisub
lahf
loopne
rcr
repz
movs
adc
imul
scas
fld
push
aam
mov
imul
dec
pop
dec
ror
ror
and
and
sbb
inc
xor
lds
(bad)
popf
and
cld
fisubr
and
xor
or
cs
xchg
into
rol
pop
push
cmp
mov
mov
cdq
add
inc
dec
shl
out
mov
fcomip
je
adc
sub
loop
ins
out
or
fistp
(bad)
mov
out
push
lea
add
retf
mov
jecxz
ins
leave
dec
dec
retf
inc
std
leave
loop
jno
iret
pushf
packssdw
xchg
sub
stos
retf
mov
fsub
inc
(bad)
pop
cmp
imul
and
les
mov
dec
pop
icebp
(bad)
pushf
dec
pop
rcl
adc
popa
sub
cmps
ret
iret
in
repnz
(bad)
sahf
jns
add
fmul
or
arpl
icebp
emms
in
dec
cmp
test
inc
sbb
pop
pop
dec
test
push
xchg
daa
cmp
mov
cmp
pop
and
mov
mov
out
xor
pusha
or
popf
dec
test
sub
xor
jge
ror
mov
loopne
xchg
jnp
add
inc
lock
dec
mov
bound
add
mov
mov
inc
cli
test
xchg
sub
shr
mov
xor
hlt
ja
inc
dec
repz
int
js
gs
jmp
fld
inc
push
push
ret
les
repnz
push
or
xchg
pushf
std
jecxz
loopne
inc
pop
sbb
mov
xor
int3
cmp
or
imul
sbb
mov
ret
sbb
jno
inc
out
out
clc
je
push
sub
call
xor
loop
ret
loope
loop
out
jmp
mov
jmp
in
push
movs
sub
jnp
test
or
mov
int3
movs
fiadd
out
inc
xchg
scas
fsub
jne
and
mov
pop
rcr
xchg
std
daa
push
jae
les
loop
mov
popf
push
pop
out
xchg
dec
jge
push
or
xor
scas
jge
add
adc
xchg
test
stos
mov
shl
in
sub
mov
(bad)
jmp
push
adc
int3
mov
je
test
dec
mov
pushf
add
outs
add
cmp
pop
rep
and
mov
xor
jmp
sbb
mov
bound
and
sub
dec
aam
xchg
out
nop
test
xchg
(bad)
xlat
std
cmp
push
xlat
sub
adc
xor
mov
xor
cmp
xor
call
xchg
add
and
or
out
adc
sub
ins
sbb
adc
inc
ret
jmp
loop
cmc
loopne
mov
adc
les
sbb
outs
xor
add
ins
jmp
pushf
dec
dec
icebp
je
ds
xchg
out
pushf
cwde
je
aad
(bad)
jae
into
jl
and
jae
mov
cmp
in
fld
dec
adc
movs
push
pop
dec
arpl
push
or
fcmovnu
aaa
mov
cmp
and
in
sub
mov
fidivr
sbb
loope
inc
and
sub
jmp
mov
fcom
int
repnz
loopne
sub
ret
jecxz
xchg
popf
and
xor
loop
int3
adc
mov
xor
xchg
retf
ret
leave
icebp
lds
and
or
rcl
inc
xor
jmp
mov
sbb
push
ror
push
pop
ins
mov
out
aad
lods
fwait
pop
xchg
jb
xchg
sub
inc
shr
mov
jp
add
pop
xchg
dec
push
and
or
mov
push
jne
xor
add
cmp
ds
mov
xor
enter
or
shl
clc
pop
cmps
stos
lock
das
sar
(bad)
es
hlt
mov
or
test
jg
xor
jmp
sahf
cmp
imul
out
rol
adc
es
es
mov
dec
stos
test
and
adc
pop
xor
sahf
shr
mov
loopne
retf
adc
lds
fsub
call
jle
iret
mov
jae
push
push
push
add
inc
enter
inc
outs
mov
push
pushf
stos
cmps
mov
mov
retf
sub
push
int3
push
icebp
xchg
sbb
dec
mov
xchg
mov
pop
xchg
cmp
mov
int3
call
in
or
movs
push
fiadd
leave
or
inc
(bad)
mov
mov
sbb
daa
shr
sbb
pop
sbb
mov
add
iret
xor
pop
xchg
mov
mov
adc
loop
push
arpl
xchg
movs
imul
dec
mov
pushf
sub
sbb
push
addr16
out
outs
fild
fcomp
jb
add
loopne
repnz
gs
in
or
shl
dec
jb
sub
mov
pop
mov
jno
leave
dec
mov
dec
mov
sbb
movs
lea
(bad)
inc
mov
nop
ss
mov
jmp
mov
enter
dec
jecxz
iret
or
pop
mov
mov
(bad)
push
or
sbb
(bad)
sbb
fs
cmc
fidivr
push
mov
cmp
sbb
push
sbb
out
or
movs
xchg
sahf
pop
xchg
es
pop
jecxz
lods
fdivr
dec
outs
daa
jp
stos
mov
jb
outs
imul
prefetch
mov
shr
adc
jle
(bad)
cmp
mov
das
add
lds
call
xor
mov
pushf
inc
and
xchg
xor
fs
ins
pusha
add
stos
lds
jmp
jo
and
pop
and
dec
fldcw
xchg
(bad)
dec
in
jo
xchg
or
inc
hlt
sbb
adc
(bad)
fs
(bad)
mov
lds
push
sbb
cwde
push
call
jnp
std
and
add
dec
(bad)
pusha
into
fcmovb
out
aad
lahf
jnp
(bad)
(bad)
adc
addr16
shl
(bad)
xchg
xor
cld
or
outs
cmp
imul
jns
fwait
xor
daa
mov
xchg
lahf
pop
push
gs
inc
xor
pop
aaa
push
push
sar
sbb
rcl
mov
mov
ret
ins
shl
jmp
push
enter
cmp
pusha
push
ja
int
std
pop
popa
fistp
xor
ret
cwde
sbb
(bad)
jl
sbb
dec
or
xor
cmp
add
gs
pop
in
or
mov
and
jmp
xlat
call
iret
aas
cmps
frstor
sti
ins
pop
jo
add
xchg
mov
lock
jmp
sbb
out
inc
pop
icebp
ds
cmps
aas
(bad)
outs
xor
add
dec
mov
sbb
cmp
fwait
jno
jmp
test
push
push
mov
pop
sub
je
(bad)
and
(bad)
mov
sub
adc
sahf
mov
push
shl
sbb
fmul
adc
mov
and
push
jge
test
inc
test
jmp
jb
xchg
stos
bound
or
xchg
mov
in
mov
xchg
push
das
xchg
das
lock
stc
iret
cmp
jno
lods
fld
mov
cdq
or
sub
pusha
sar
cmp
xchg
or
or
inc
sub
ds
cmp
mov
out
pusha
mov
mov
jmp
ins
push
mov
cmp
and
jg
jmp
pop
and
push
cs
test
mov
jne
nop
pop
gs
bnd
cs
mov
mov
out
and
xchg
mov
frstor
xor
mov
mov
test
jg
push
push
hlt
xchg
arpl
xchg
mov
jle
jge
or
aad
addr16
cmp
inc
shl
mov
in
cdq
std
mov
mov
mov
sahf
rep
pop
cmc
mov
aaa
mov
or
jecxz
shr
aaa
sbb
push
shl
cwde
xchg
push
test
sbb
shl
adc
sub
add
aam
ret
pop
cmp
fsubr
add
clc
pop
mov
aaa
lods
cmp
mov
pop
push
test
jge
xchg
dec
ss
cld
jmp
push
ja
test
push
pushf
inc
fs
jne
or
add
xchg
sbb
out
cld
inc
or
and
and
sahf
fsubrp
mov
sub
arpl
and
sub
rol
cmps
mov
pop
cdq
push
dec
or
fwait
xor
(bad)
gs
jmp
cs
cmp
addr16
xchg
pop
dec
ret
(bad)
outs
add
test
adc
cmps
sub
cmp
inc
or
mov
(bad)
stc
lods
mov
cmp
mov
cmc
cs
sbb
nop
inc
in
mov
fdivp
ret
imul
adc
add
jmp
jnp
dec
mov
daa
mov
sub
out
cmps
aad
(bad)
lahf
add
(bad)
xor
and
push
jbe
fld
mov
(bad)
fidiv
cwde
imul
push
clc
inc
mov
and
add
test
push
stc
mov
sti
inc
mov
dec
mov
shl
gs
je
pop
(bad)
retf
in
ds
mov
psrld
xor
mov
add
pushf
mov
pop
jge
jge
mov
neg
pop
enter
inc
call
fidivr
adc
adc
xchg
push
loopne
test
or
loop
loop
jbe
cmps
fwait
mov
sbb
(bad)
mov
mov
add
pop
xchg
cmp
call
sar
ja
call
shl
mov
cmp
mov
jp
daa
lock
cli
push
retf
lock
mov
sub
sub
call
std
rcr
and
inc
cmps
test
js
aam
retf
pop
ffreep
scas
icebp
(bad)
retf
iret
jp
iret
in
mov
jecxz
sbb
retf
push
and
mov
xchg
fs
pop
add
pop
iret
xor
(bad)
ret
jo
inc
xor
dec
cmps
fnstcw
xchg
pushf
or
mov
lahf
test
dec
inc
add
inc
xchg
repnz
mov
call
xor
ins
or
xor
pop
mov
je
repnz
jle
mov
push
fadd
imul
mov
test
mov
dec
or
std
mov
fwait
mov
adc
adc
jo
icebp
xor
xchg
aad
in
aad
data16
xor
outs
xor
jnp
pushf
fnstsw
mov
(bad)
retf
mov
out
test
pop
(bad)
out
call
inc
mov
push
push
rcl
in
cmps
sbb
xchg
mov
fdiv
add
cmps
imul
xchg
and
dec
sbb
pop
fild
inc
inc
movs
iret
test
(bad)
pop
inc
fsubrp
shr
mul
and
mov
sti
sbb
push
pop
sbb
ins
rcr
sar
push
push
out
jle
or
pop
nop
into
(bad)
cmps
test
cmc
mov
enter
rol
call
(bad)
adc
lock
or
jns
in
leave
mov
mov
gs
lods
pop
fwait
and
add
pop
push
push
and
aaa
inc
mov
pop
inc
mov
int
jne
mov
jne
pop
pop
xchg
int
pop
mov
push
test
pop
push
(bad)
xchg
rcl
xchg
stc
shl
jge
jmp
lahf
sbb
sbb
adc
inc
lds
inc
and
mov
or
outs
mov
push
sbb
bound
xor
mov
push
xchg
push
js
inc
imul
sbb
mov
call
ror
(bad)
push
ret
sti
mov
loopne
retf
out
js
test
arpl
iret
mov
fsub
icebp
jp
loop
lds
xchg
mov
mov
in
popa
push
xor
cdq
ins
xchg
sub
push
sbb
inc
dec
xchg
fwait
popa
outs
inc
fisttp
ja
cld
adc
fmul
push
inc
push
jecxz
popa
enter
(bad)
loopne
or
lock
(bad)
stos
mov
int
fidivr
pushf
call
jns
jle
and
xchg
mov
cmp
movs
push
addr16
mov
fdiv
sub
or
sbb
mov
jmp
test
(bad)
push
ins
in
sbb
retf
dec
cmp
mov
jno
mov
ins
test
xchg
inc
test
gs
pop
push
adc
outs
es
jns
shl
aad
push
loopne
addr16
(bad)
adc
test
xchg
push
lahf
shl
fst
sahf
retf
xor
dec
xlat
pop
sbb
movs
imul
cwde
xor
les
(bad)
ins
shl
push
sahf
or
retf
mov
neg
loope
es
test
xlat
cmp
nop
mov
ret
mov
jg
ins
or
xor
add
jl
jmp
call
xchg
cwde
movs
sbb
lods
and
rol
and
rcl
in
sti
fwait
not
clc
(bad)
xchg
sbb
xchg
sbb
push
sti
pusha
sbb
bnd
xchg
inc
les
icebp
mov
(bad)
pushf
dec
gs
call
inc
in
movs
mov
das
inc
xor
jp
neg
jnp
addr16
test
inc
push
daa
cdq
stc
adc
cs
sbb
adc
mov
not
and
add
outs
test
jns
in
neg
sbb
ror
fcomi
in
(bad)
xchg
scas
push
xor
ins
xchg
xor
and
icebp
jecxz
in
aam
sbb
mov
mov
push
fld
or
outs
push
cwde
popf
ret
ss
jb
pop
mov
shl
push
loope
shl
or
in
adc
push
fwait
jae
push
xlat
inc
rcl
lock
xor
cmc
in
dec
xchg
xor
jnp
inc
mov
mov
imul
test
jae
push
add
mov
aas
fwait
ret
add
pop
mov
mov
cmp
jns
cwd
sbb
in
dec
test
add
imul
retf
ror
and
and
ret
pop
clc
push
mov
shl
pusha
jle
adc
adc
mov
fbld
pop
scas
in
sub
adc
jmp
ja
jl
pop
rol
std
push
pop
imul
jge
mov
popf
push
sub
xor
out
scas
rcr
out
dec
pop
xlat
pop
dec
lods
(bad)
js
mov
push
in
jbe
mov
mov
mov
cmc
fld
fnstcw
pop
dec
mov
call
xchg
xor
or
sbb
push
jge
(bad)
daa
gs
loopne
sub
and
aad
cmps
arpl
(bad)
cmps
leave
mov
retf
(bad)
into
mov
sbb
nop
jne
aaa
cmps
cmps
pop
leave
push
bound
es
xor
dec
lods
mov
out
loop
hlt
test
and
mov
js
xor
cmps
add
lock
sub
dec
cmp
cmp
pop
aaa
lods
xchg
cmp
das
(bad)
pushf
pusha
fist
ss
movhps
and
add
lahf
out
adc
mov
mov
pop
adc
lea
stc
xor
dec
cdq
sub
ret
stos
jl
push
add
xchg
(bad)
jnp
mov
icebp
(bad)
scas
sub
and
xchg
es
push
loopne
jl
(bad)
aas
inc
push
imul
and
sub
fld
test
pop
mov
mov
popf
mov
push
ja
xor
mov
inc
pop
xchg
xlat
mov
and
push
icebp
test
imul
adc
cmps
pop
xor
jecxz
mov
dec
sbb
and
retf
fimul
test
cmp
pop
pop
jbe
mov
add
sub
repz
push
out
cmp
jb
sbb
pop
dec
push
gs
xchg
pop
jl
rol
div
mov
sbb
ja
test
pop
in
push
sbb
cmp
push
sub
mov
fiadd
stc
test
pop
popa
mov
sub
push
jno
mov
lods
icebp
fild
shl
test
push
xor
adc
xor
sti
push
inc
push
rcr
jne
xor
test
pop
inc
in
in
mov
push
lock
mov
popa
ror
popf
pop
mov
icebp
mov
aaa
lock
rol
adc
popf
lods
mov
push
cmp
test
xor
fsub
dec
mov
je
pop
xchg
add
inc
mov
inc
pmullw
mov
daa
xchg
inc
push
mov
jnp
pusha
sub
mov
mov
pop
repnz
(bad)
add
or
push
ret
dec
mov
xchg
shr
xor
pop
inc
fcmovnu
sub
scas
ret
fcomp
pop
jne
add
(bad)
out
sub
add
jp
adc
out
repz
cmp
outs
ret
out
pop
aam
bound
sti
sbb
push
fmul
or
int
add
pushf
aas
cmp
pop
mov
hlt
and
push
cmps
imul
mov
stos
push
push
mov
movs
xchg
sbb
push
int
je
xchg
test
push
push
out
pop
jno
dec
sbb
or
and
in
push
stc
aas
jae
data16
out
test
inc
or
sub
ret
into
lock
lea
aaa
(bad)
mov
mov
mov
retf
je
pop
or
jne
out
cmp
call
shl
repnz
stos
ret
cmp
mov
mov
sub
cmp
pop
jp
shl
sbb
cmp
push
bound
xchg
fiadd
dec
or
sub
adc
jmp
mov
mov
(bad)
add
sub
dec
mov
sbb
jge
cmp
into
fst
aas
mov
or
adc
fdivr
fldcw
push
imul
xor
js
and
inc
pop
push
ds
inc
xchg
pop
mov
dec
sbb
pop
int
nop
adc
mov
stos
repnz
sub
ficom
mov
jl
xchg
jge
popa
fwait
push
xchg
(bad)
into
sbb
in
lods
xchg
mov
xor
popf
mov
mov
mov
jmp
or
outs
addr16
push
jmp
cmp
push
inc
inc
fldl2e
xlat
jmp
or
fdivr
pop
adc
out
daa
push
stos
in
and
adc
out
mov
jmp
add
cmp
aas
add
call
aad
mov
dec
scas
cs
mov
fucomp
adc
retf
or
cmp
push
inc
andnps
aas
fs
jo
es
sbb
jmp
jae
popa
and
sbb
test
outs
sahf
call
cmc
sbb
or
mov
jnp
jns
adc
enter
bound
xchg
xchg
mov
xor
cdq
ret
xor
adc
push
push
aaa
ss
jb
add
aad
pop
mov
shl
xchg
repz
cmps
pop
and
cwde
les
xchg
fwait
push
push
mov
pusha
pop
jg
data16
adc
(bad)
mov
pusha
inc
loop
cmp
scas
rcr
inc
daa
jns
shr
xchg
sbb
mov
xchg
call
ret
ss
push
loopne
es
push
adc
push
jle
sbb
cmp
add
xor
ret
addr16
pop
mov
fsubrp
xchg
and
inc
sbb
mov
add
loop
test
rcl
fistp
ret
jne
dec
or
loop
mov
xchg
push
jecxz
(bad)
and
cmp
and
cmc
pop
(bad)
jb
mov
push
jno
push
neg
es
pop
in
add
mov
mov
adc
hlt
pop
push
mov
pop
retf
ins
dec
jno
ja
mov
push
cld
push
(bad)
(bad)
sub
sbb
pop
addr16
sbb
mov
push
sub
push
test
cmove
adc
scas
adc
mov
in
cwde
sbb
sahf
shr
cmp
xlat
and
aad
add
(bad)
pop
les
xchg
clc
or
xor
ja
xchg
inc
and
arpl
pop
inc
and
pop
cmp
out
std
cmps
loop
dec
bound
pop
out
mov
std
stos
test
or
mov
add
dec
jg
pusha
in
dec
ja
pop
pop
or
jl
jae
call
xor
or
add
xor
xchg
shl
add
mov
xor
cmc
xchg
leave
sbb
stc
add
cld
add
sub
sti
movs
fstp
sbb
xchg
hlt
dec
call
xor
dec
sub
push
movs
(bad)
retf
jge
mov
inc
xchg
sahf
dec
cvtdq2ps
ins
cmp
or
inc
idiv
(bad)
imul
out
cwde
aad
and
(bad)
jbe
(bad)
add
and
js
add
and
icebp
jno
adc
and
inc
inc
jne
ficom
(bad)
js
aaa
and
pop
retf
out
jecxz
inc
jbe
mov
cmps
test
mov
mov
adc
lds
and
or
adc
or
cmp
pop
(bad)
mov
loop
into
movs
loope
and
aas
sar
fucomip
inc
sbb
push
push
cmps
dec
mov
xchg
loop
std
das
push
rcl
ins
sub
xchg
and
into
mov
cwde
jbe
fisubr
mov
inc
inc
cmp
mov
aad
test
pop
push
(bad)
jns
mov
xlat
and
jb
imul
jae
add
mov
mov
add
jo
fwait
movs
mov
sub
cs
sbb
cwde
jnp
and
cwde
adc
xor
push
sar
sbb
push
sub
test
repnz
iret
xchg
int3
aas
adc
or
lock
xor
nop
or
xor
xchg
scas
push
imul
add
addr16
xor
mov
xor
cld
cmp
cmp
bound
xchg
lods
add
ficom
or
sahf
mov
adc
fimul
cmp
gs
dec
cmc
pop
scas
add
iret
push
mov
sbb
pop
scas
mov
xor
mov
cmp
jne
ins
xor
xor
pop
inc
stos
ficom
call
xchg
jge
movs
test
call
in
std
outs
or
test
cs
and
fidiv
push
dec
test
add
jl
repz
mov
lods
mov
inc
sar
aaa
int3
jb
stos
push
inc
retf
adc
adc
pushf
xchg
mov
std
sbb
or
push
mov
jbe
in
cmps
push
add
mov
ret
inc
or
jecxz
das
xchg
test
inc
xor
pop
std
cmps
mov
xchg
in
into
imul
jo
lods
or
movs
lock
fistp
mov
dec
mov
mov
mul
icebp
fmul
dec
inc
pop
dec
inc
ss
scas
inc
pusha
ds
test
inc
mov
popa
mov
aam
dec
inc
sub
push
sbb
mov
add
mov
jae
ret
int3
dec
ret
ror
outs
pextrw
(bad)
arpl
dec
xchg
or
jo
call
pop
mov
leave
arpl
(bad)
jmp
ror
adc
dec
mov
idiv
pushf
inc
sub
ret
ret
(bad)
dec
mov
es
movs
dec
jnp
aam
ins
sbb
movs
jo
jnp
inc
out
add
pushf
mov
mov
(bad)
iret
das
mov
pop
(bad)
outs
xor
and
jmp
imul
adc
adc
pop
call
xor
loop
jno
into
fld
adc
ret
xor
dec
(bad)
in
and
xchg
fisub
pop
or
cmp
jmp
sub
out
push
or
dec
int
push
add
(bad)
loopne
jp
dec
push
mov
(bad)
lods
cmp
inc
sub
and
out
movs
sbb
add
in
std
aaa
addr16
sub
mov
outs
sbb
mov
cmp
rcl
mov
addr16
pop
dec
jae
xchg
rcr
and
pop
adc
push
lods
pusha
add
adc
cmp
loope
fisub
adc
stos
sti
jnp
fmul
popa
cld
or
push
inc
fstp
iret
push
inc
pop
nop
(bad)
sbb
out
or
dec
lahf
cli
sub
shl
mov
jnp
jb
dec
scas
push
fld
cmp
mov
(bad)
in
add
out
mov
int3
leave
inc
aaa
data16
dec
adc
adc
data16
(bad)
xchg
mov
mov
push
sbb
cli
loopne
push
loop
xchg
inc
icebp
dec
add
and
aaa
push
outs
sbb
push
push
ins
clc
xlat
cmc
mov
popa
stc
mov
or
push
fidiv
sbb
mov
scas
mov
jno
cli
dec
mov
arpl
mov
aaa
pop
fsubr
retf
pop
adc
push
movs
mov
xchg
dec
xchg
mov
arpl
loop
test
add
ins
sahf
inc
lods
nop
add
hlt
inc
push
loop
sbb
std
sti
rol
aas
mov
pop
inc
cmp
je
movs
movs
imul
push
enter
or
mov
xchg
(bad)
aad
or
repz
inc
outs
cdq
mov
xchg
aas
scas
inc
push
jecxz
dec
call
into
aas
cmp
cwde
out
sub
(bad)
cmc
scas
mov
(bad)
xchg
mov
data16
pop
je
ret
adc
xchg
adc
mov
dec
or
adc
pop
loopne
jge
int3
cmp
jmp
jmp
push
mov
mov
xor
dec
retf
pop
mov
fild
cwde
sbb
cmp
push
inc
nop
jge
loop
rol
fidivr
cwde
or
fwait
lods
out
push
les
cli
inc
dec
mov
jae
push
in
ror
lods
dec
fdiv
jb
test
je
fdiv
jmp
ins
sub
icebp
jno
fisub
inc
dec
inc
xlat
shr
scas
or
push
icebp
xchg
adc
xor
mov
test
jno
mov
jmp
inc
dec
outs
and
call
push
scas
or
or
xchg
fcomi
out
inc
(bad)
sub
out
inc
dec
mov
xor
cmps
and
jge
xor
jb
mov
(bad)
popf
push
mov
or
jp
lds
test
or
and
mov
loopne
mov
loopne
outs
pop
jmp
fld
xchg
nop
lods
dec
mov
fbld
pop
dec
addr16
aas
xchg
retf
pop
adc
ins
retf
popf
xchg
movs
cmp
sahf
mov
cmp
(bad)
loopne
shr
or
popa
jge
mov
dec
lods
stos
aad
push
stc
push
xor
out
jmp
jmp
scas
hlt
aas
mul
sbb
sub
mov
dec
ds
outs
push
fstp
xor
mov
mov
fwait
enter
add
in
popf
add
xor
(bad)
mov
xor
std
sub
push
sub
and
cmp
sub
push
(bad)
cdq
dec
mov
xchg
xor
movs
or
fwait
jns
mov
fisttp
iret
(bad)
mov
stos
scas
jmp
in
mov
sub
push
jle
dec
lods
dec
mov
fwait
jne
push
pop
out
jmp
loopne
shl
sbb
js
jmp
pop
sbb
outs
out
add
aam
sub
cmp
(bad)
push
push
adc
jne
xchg
mov
sub
jmp
sub
mov
mov
or
dec
popf
jg
mov
das
out
mov
or
mov
push
xchg
pushf
xchg
movs
rcl
adc
cmp
cmp
or
sub
sbb
push
stc
mov
lds
or
mov
(bad)
cmc
mov
xchg
inc
imul
adc
fyl2x
inc
jg
xchg
pop
jmp
sub
mov
cmp
jmp
jmp
push
stos
out
out
pop
fld
das
cmp
cmps
dec
movs
mov
sub
add
jnp
jp
inc
stos
and
jge
ds
iret
xor
sub
or
fdivr
sar
fucompp
mov
xor
inc
jnp
sahf
stos
test
in
mov
(bad)
daa
scas
in
stos
adc
sbb
xchg
mov
sub
inc
test
movs
pushf
jno
int
test
mov
pop
xchg
aaa
daa
js
rcr
mov
gs
inc
scas
ret
sbb
call
es
mov
and
inc
not
xchg
clc
adc
lock
jo
shl
les
jae
out
ret
call
xchg
bound
sbb
jp
out
aam
pusha
mov
jg
jle
jecxz
(bad)
imul
(bad)
outs
fucom
loop
(bad)
pop
inc
jmp
repnz
lods
jle
jle
jp
adc
jge
mov
inc
mov
mov
div
stos
in
push
loop
lahf
cmp
cli
or
adc
adc
shl
add
enter
mov
or
or
jge
dec
jge
pop
pop
es
mov
inc
punpckhwd
inc
push
(bad)
in
inc
mov
or
aaa
jne
jge
mov
(bad)
neg
inc
jne
pop
movs
mov
out
mov
xchg
sti
xchg
mov
in
or
das
mov
xchg
dec
jecxz
push
les
fwait
sahf
mov
mov
dec
adc
xor
jns
cmp
push
xor
add
or
sub
daa
pop
push
sub
xor
push
adc
push
scas
cs
xor
and
push
add
mov
mov
int3
inc
loope
mov
sub
jmp
mov
in
xor
lods
jmp
or
mov
out
xor
sahf
cmp
jnp
inc
dec
add
es
aad
movs
pop
in
adc
mov
leave
jle
mov
add
inc
mov
cmc
inc
fnsetpm(287
das
cld
adc
lea
fst
test
jle
pop
outs
popf
sbb
fsub
xchg
jo
mov
xor
imul
int3
cld
dec
(bad)
mov
out
dec
iret
add
add
jp
xor
lahf
pop
test
fbstp
call
dec
ins
inc
cmps
rol
adc
cmp
push
(bad)
cs
pop
mov
fcompp
sbb
and
jns
push
xor
stos
lods
aad
and
mov
adc
dec
cs
adc
pop
sbb
fcmovnu
mov
stos
xchg
sbb
frstor
cmc
add
lock
sub
aad
dec
retf
pop
sbb
add
xor
and
pop
jecxz
imul
mov
leave
icebp
mov
mov
jmp
mov
dec
addr16
retf
out
sbb
scas
jmp
pop
pop
fstp
iret
sub
sti
xchg
test
popa
mov
xlat
xchg
or
inc
jl
loopne
cmp
or
inc
fidiv
pop
and
pop
jns
imul
push
cmc
ss
push
jmp
pop
fmul
sub
jmp
scas
dec
sbb
mov
hlt
mov
popf
daa
xor
cmps
out
mov
sbb
and
pop
addr16
bound
xchg
mov
retf
bound
xchg
xlat
pop
(bad)
rcl
outs
ja
cmp
mov
fs
rcl
push
adc
fwait
push
in
outs
pop
xchg
pop
cli
mov
add
sbb
aad
add
repz
push
into
mov
jne
jp
arpl
mov
xchg
iret
or
add
mov
pop
pop
add
mov
pop
pushf
and
(bad)
ja
pop
sbb
fisttp
les
and
je
pop
jmp
add
test
push
sub
clc
xor
push
int3
std
rol
jp
xchg
jmp
jmp
push
cli
lds
xchg
xchg
das
(bad)
xlat
dec
and
nop
jbe
outs
test
clc
in
cli
nop
or
enter
(bad)
ficom
sti
arpl
push
jmp
mov
cmp
add
mov
ret
mov
push
sbb
xor
sbb
test
aaa
setbe
(bad)
jmp
mov
mov
adc
ss
mov
ins
es
xchg
loope
stos
fcmovne
and
lds
in
out
test
sbb
enter
and
ss
jno
mov
ror
es
inc
movups
dec
fisttp
add
popa
test
(bad)
or
mul
shl
mov
loopne
fdivr
fst
mov
fidiv
pop
sub
int
add
add
adc
cdq
es
dec
cmps
ds
mov
frstor
retf
pusha
push
(bad)
call
and
ins
sub
mov
cwde
xchg
ret
in
jp
les
iret
xor
data16
das
cmp
int3
or
sbb
jecxz
cmp
out
push
mov
movs
jle
jg
retf
(bad)
int
pop
in
test
inc
push
mov
or
movs
test
push
mov
int3
ins
sbb
xor
popa
mov
mov
retf
xor
rcl
xchg
push
call
out
leave
jnp
dec
aaa
leave
shl
mov
cs
xchg
add
jno
outs
mov
aad
xchg
mov
adc
int3
sti
pop
inc
sar
mov
mov
sub
cmc
pop
mov
cmps
inc
daa
xor
int
push
nop
pop
adc
mov
(bad)
mov
mov
scas
loopne
and
in
dec
jmp
out
icebp
adc
aas
sbb
pandn
add
in
aaa
lock
sbb
out
jg
cmp
mov
cmps
cmp
and
add
fild
mov
ss
ds
loopne
pop
sbb
sub
xchg
in
pop
clc
ja
daa
mov
xchg
or
mov
mov
test
or
sbb
aad
adc
data16
sub
add
bound
ins
jbe
rol
pop
ds
push
sub
mov
jmp
imul
mov
mov
movs
sahf
cmp
sub
into
fsubr
aam
outs
push
(bad)
sub
fmul
xchg
inc
cs
fs
push
fisubr
xor
and
mov
outs
xchg
movs
pusha
add
or
leave
jne
xchg
pop
cmps
into
jmp
inc
loope
jmp
int
hlt
das
push
out
cmp
cli
pop
add
or
lock
scas
sbb
lahf
js
push
or
sub
push
and
jmp
pushfw
xor
sub
sub
dec
mov
and
add
pop
cmp
int
mov
add
sbb
push
sbb
outs
repz
jmp
sti
add
or
out
pop
jmp
movups
dec
pop
shl
xor
iret
pop
sbb
imul
push
into
cmps
mov
mov
imul
mov
ds
and
mov
mov
cmp
call
mov
xchg
push
movs
std
aas
or
pusha
mov
ins
sar
test
rcl
pushf
cld
fisub
gs
retf
push
mov
(bad)
enter
aam
imul
aaa
retf
sbb
push
xchg
leave
mov
cli
push
sbb
inc
das
mov
mov
addr16
xlat
mov
adc
or
xchg
or
and
jge
sbb
mov
add
in
js
sbb
push
sbb
ret
adc
pop
xchg
scas
add
pop
push
stc
fbld
xor
scas
test
and
repnz
adc
mov
or
fist
test
xlat
sahf
and
out
cmc
push
or
in
fsubp
adc
inc
(bad)
sahf
push
test
fsub
call
(bad)
ins
push
xchg
mov
test
pop
dec
cmp
and
les
inc
cmp
xchg
hlt
rol
jmp
mov
add
dec
icebp
dec
push
std
mov
sub
sbb
dec
fld
mov
sbb
call
add
mov
pop
mov
repz
movups
mov
ins
sbb
and
cld
mov
js
xor
mov
clc
ret
bound
pusha
popa
loopne
sbb
cmp
data16
fidiv
mov
xchg
add
add
dec
outs
movs
or
out
sbb
and
inc
popf
push
xchg
sub
(bad)
test
cmp
in
lea
fs
adc
test
test
ss
mov
jle
mov
scas
out
mov
xchg
inc
jmp
push
in
es
pop
call
(bad)
out
(bad)
in
mov
jmp
mov
xchg
pusha
dec
(bad)
hlt
mov
stos
jnp
inc
(bad)
ds
rol
fwait
inc
scas
dec
mov
das
es
cli
cmc
dec
mov
add
pushf
jns
dec
adc
or
sbb
dec
cwde
in
lods
xor
pop
sbb
xchg
lock
adc
pop
push
fcmove
mov
stc
pop
sub
repz
fwait
mov
dec
in
or
push
fptan
cli
test
adc
aaa
retf
jno
movs
and
xor
nop
cli
mov
lahf
push
cmc
cmc
mov
or
jp
cs
mov
pop
push
and
arpl
lds
sbb
jp
inc
push
test
(bad)
lock
jg
push
mov
sar
cwde
out
cld
xchg
repnz
dec
stos
mov
repz
pop
ja
(bad)
call
and
adc
mov
add
mov
xlat
js
leave
inc
dec
or
adc
dec
lods
jecxz
and
in
xchg
xor
test
jbe
popf
pop
and
push
sub
mov
add
xchg
mov
ins
sbb
cmp
jecxz
mov
sub
or
cmp
inc
lods
xchg
pop
push
mov
sub
retf
or
or
mov
mov
dec
inc
sbb
mov
test
push
mov
ins
repz
or
inc
fst
loop
sbb
fimul
cmp
sbb
pop
hlt
lods
es
add
dec
rcl
pop
imul
je
in
push
out
fdivp
push
adc
xchg
jg
int
popf
ds
cld
movs
sysenter
out
dec
retf
popf
out
aas
shl
mov
in
test
mov
dec
xor
mov
xchg
loopne
jb
cwde
jle
mov
mov
mov
mov
fbstp
inc
inc
inc
mov
dec
and
inc
sbb
add
bound
imul
pop
inc
(bad)
in
std
cli
cmp
sahf
mov
xor
sbb
pop
xchg
fs
xchg
ror
fisub
push
call
add
inc
ficomp
dec
std
ins
int
jo
icebp
push
or
xchg
test
ret
aad
(bad)
daa
jne
jne
cmp
adc
mov
mov
test
sub
sub
pop
ss
fisttp
sub
add
in
or
js
sbb
imul
mov
cdq
repz
pop
and
sbb
mov
bound
xor
aaa
sbb
addr16
inc
xchg
or
test
in
pop
adc
add
imul
dec
sahf
or
into
les
sahf
pop
cmp
sahf
mov
xchg
mov
push
lods
dec
push
jl
(bad)
xchg
in
mov
jmp
enter
cdq
inc
inc
fs
dec
fild
movs
jno
adc
nop
and
mov
pop
leave
adc
jp
inc
push
adc
cmc
adc
adc
sbb
mov
outs
(bad)
sbb
cmp
pusha
xor
add
iret
nop
inc
sub
mov
retf
test
inc
mov
push
cld
mov
cmp
push
movs
xchg
push
pop
leave
add
add
outs
and
or
ret
xor
gs
ret
push
jo
aad
icebp
jecxz
std
scas
lahf
sahf
test
sbb
(bad)
ss
imul
shr
rol
jb
scas
cli
xchg
inc
dec
push
and
push
pushf
in
std
sbb
xchg
addr16
rcr
add
mov
shl
scas
fadd
call
shr
lock
lds
cmp
mov
stos
out
dec
dec
dec
mov
jmp
jge
stos
lds
(bad)
sbb
xor
mov
ds
scas
push
in
mov
call
mov
pop
mov
add
add
sbb
fidiv
mov
inc
push
jae
jnp
push
nop
add
scas
(bad)
in
or
mov
push
add
out
inc
pop
fstp
push
adc
out
mov
mov
sub
cmp
lods
jmp
mov
mov
xchg
xchg
test
in
and
add
mov
mov
neg
aam
dec
inc
adc
and
in
xchg
push
mov
imul
outs
call
ret
ins
cld
dec
pop
lahf
outs
adc
icebp
cli
sub
mov
push
xchg
fdiv
xor
xchg
mov
and
test
push
push
jl
cmps
sub
pop
rcr
xor
jbe
movs
mov
jnp
movs
pop
sub
and
xchg
daa
pop
jne
cmp
(bad)
fcom
aaa
ja
(bad)
cld
mov
aas
jg
mov
clc
dec
jmp
cmc
add
mov
inc
test
mov
push
or
inc
repnz
es
mov
repz
mov
adc
int
leave
clc
icebp
jnp
ins
data16
jle
sub
inc
mov
xor
xor
fmul
mov
mov
test
xchg
mov
sahf
xchg
leave
int3
and
push
sti
push
pop
sub
ins
xchg
cli
(bad)
adc
mov
pop
cmp
cdq
aad
rcr
inc
fisubr
popf
add
stc
jae
hlt
mov
movs
pop
push
stos
pop
mov
sub
jb
xlat
fld
adc
data16
mov
and
pop
pop
addr16
mov
je
adc
mov
sub
jo
pop
xchg
loope
xchg
mov
pop
popa
inc
cmp
mov
or
mov
nop
dec
add
jbe
xchg
outs
shl
(bad)
test
shr
xchg
sti
jmp
gs
pushf
jle
es
xor
call
cwde
call
dec
icebp
push
sub
jo
sbb
cmp
test
cs
mov
addr16
js
and
mov
out
mov
pop
aam
(bad)
sti
repnz
jge
inc
dec
jno
outs
push
scas
pop
jbe
cmp
xchg
test
fadd
mov
push
jbe
jnp
stos
jl
je
sbb
pop
jmp
sbb
lahf
into
cwde
push
nop
(bad)
push
or
pusha
fcomp
dec
or
loopne
shr
dec
cmp
jg
mov
lock
(bad)
push
sub
mov
mov
call
iret
stos
mov
dec
pop
push
cmps
cmps
or
ror
js
fistp
push
imul
shr
adc
cmp
jmp
stos
inc
mov
cmc
pop
js
cli
lods
inc
movs
cdq
pushf
xchg
sub
xor
jae
and
into
js
mov
daa
fmul
in
pop
mov
mov
sbb
sahf
test
jns
jl
rol
mov
iret
clc
popa
sub
push
aas
mov
call
cmp
jb
dec
rcr
daa
cmc
mov
push
or
gs
fs
fst
xor
stc
push
ficomp
enter
mov
dec
mov
cs
cmp
jmp
cmp
inc
std
iret
push
mov
mov
xchg
xlat
adc
inc
add
sbb
test
in
push
jb
sahf
cmps
imul
cmps
lds
mov
retf
inc
in
xor
adc
rcr
imul
and
jns
jmp
inc
cmp
out
sub
inc
pop
jle
into
mov
or
cmp
xor
and
daa
(bad)
aad
mov
jmp
mov
(bad)
aaa
jge
movs
icebp
data16
push
xchg
inc
inc
call
mov
mov
jg
mov
mov
fs
push
add
and
xchg
test
mov
iret
jae
and
xchg
jmp
sbb
shl
imul
adc
mov
fs
in
xlat
popa
xor
cdq
dec
sub
mov
sbb
mov
loope
out
mov
aaa
jb
push
fild
or
sub
or
jae
movs
xor
(bad)
ins
dec
jmp
jb
push
out
lods
scas
leave
aad
add
cmp
arpl
jg
stos
inc
(bad)
xchg
scas
xor
pop
xchg
fdiv
add
mov
leave
xor
dec
mov
inc
sti
repnz
mov
and
jnp
mov
xor
mov
sub
pop
jbe
adc
rcr
rol
xchg
xor
pop
repnz
push
mov
in
sub
pusha
(bad)
je
mov
imul
adc
mov
ror
or
popf
cmp
ss
mov
call
int3
in
(bad)
jecxz
xlat
rcr
jge
dec
and
nop
fist
enter
inc
out
pop
jecxz
cmps
shl
mov
sti
inc
nop
push
fiadd
neg
inc
aas
add
mov
jno
test
pusha
stc
cwde
pusha
sbb
imul
push
mov
add
shl
inc
xor
sti
push
jp
mov
ret
jnp
sbb
lods
dec
les
sbb
bound
lea
sbb
js
sbb
shl
fdivr
bound
xchg
pop
cmp
test
scas
jmp
inc
aas
and
jbe
loopne
shr
not
xor
(bad)
iret
popa
in
push
xchg
hlt
call
xor
shl
add
lods
les
sbb
ficom
daa
mov
jp
sub
fisttp
mov
sub
enter
sub
push
popa
cdq
scas
inc
adc
aam
mov
fcmovnb
je
lock
vpsubq
data16
and
sub
xor
sub
add
(bad)
rcr
xchg
std
xor
cmp
push
mov
gs
movs
inc
mov
inc
pop
ds
addr16
cmp
dec
outs
ins
sub
in
xor
retf
mov
icebp
xchg
jnp
mov
pushf
retf
fmul
nop
xchg
jbe
int
add
idiv
push
sbb
dec
xor
xor
fcom
mov
arpl
out
dec
rcl
sbb
cmp
jno
sub
xor
and
adc
nop
dec
cld
out
stos
out
mov
sbb
pop
sub
sub
xor
jmp
pop
stos
lods
and
scas
clc
test
test
aam
sub
push
lods
out
and
inc
jl
push
les
jno
jbe
lods
retf
jp
mov
jo
pop
in
lea
xor
sti
sbb
mov
clc
sbb
cmp
cs
shl
mov
jbe
inc
pcmpeqd
nop
dec
out
and
pop
dec
add
pusha
xor
(bad)
adc
mov
xchg
out
sub
stc
sahf
pop
(bad)
sti
mov
sub
outs
mov
jns
scas
sbb
jmp
push
jl
js
inc
out
mov
int
test
sahf
out
out
mov
dec
add
inc
scas
fsub
mov
enter
xchg
add
icebp
rcl
push
fwait
adc
inc
and
sbb
mov
mov
push
stc
mov
stos
sbb
mov
inc
jns
sbb
test
fild
pop
addr16
sar
jmp
sar
int3
ja
pop
mov
pop
cmp
xchg
xchg
test
loope
cdq
ret
mov
int
ins
mov
and
jmp
pop
rcr
retf
sbb
fpatan
add
popa
mov
jns
stos
ins
mov
xor
ret
inc
ja
ins
xchg
mov
pop
fiadd
add
arpl
inc
fwait
and
mov
aas
mul
xor
stc
sbb
lods
xor
dec
shl
fidiv
test
icebp
pushf
sahf
div
ds
aam
jo
gs
cmp
or
xor
mov
push
(bad)
mov
add
clc
stos
sbb
imul
sbb
add
test
jae
push
pop
and
pop
int
faddp
cld
mov
ss
xchg
ret
push
outs
(bad)
out
mov
neg
(bad)
rcr
loopne
sbb
lods
mov
adc
mov
pusha
js
loop
mov
xor
jp
js
mov
add
sub
fs
lods
in
jbe
add
(bad)
cmp
pop
iret
les
mov
inc
sub
or
stos
jmp
mov
jo
retf
push
(bad)
xor
psubd
adc
sbb
pop
out
ret
or
imul
int3
jo
(bad)
mov
xor
sbb
ins
add
mov
jmp
pop
jo
cmp
mov
pushf
mov
(bad)
sahf
sub
adc
(bad)
mov
push
(bad)
stos
imul
(bad)
addr16
fwait
scas
in
mov
cmp
in
pop
loop
pop
mov
cli
adc
jns
add
dec
repz
push
inc
jno
dec
imul
fiadd
xchg
add
sahf
mov
cli
or
fcom
jne
fidiv
xchg
mul
cmps
mov
or
pusha
sbb
xchg
adc
fucom
inc
popa
push
mov
pop
dec
(bad)
hlt
jge
ret
ror
xchg
jo
cld
into
mov
inc
push
int
mov
jbe
pushf
div
out
int
outs
dec
into
mov
adc
repnz
mov
sbb
js
pop
mov
lods
inc
inc
(bad)
mov
test
cmp
stos
jecxz
adc
mov
dec
push
jp
cmp
add
shr
xor
gs
inc
fdivr
(bad)
inc
inc
pop
aam
push
in
sub
mov
test
xchg
retf
or
lods
sbb
push
lea
inc
pop
and
test
dec
lds
mov
dec
lods
leave
cmp
add
test
loop
pop
mov
dec
pop
outs
int
mov
icebp
jmp
movs
xor
xchg
movs
jp
jnp
cmps
or
aaa
lods
int3
sub
push
mov
mov
push
xchg
xchg
inc
daa
scas
pop
sbb
adc
cmc
test
or
push
mov
data16
loope
(bad)
popf
loopne
inc
out
cmp
sub
add
mov
push
pop
and
jno
inc
outs
iret
mov
(bad)
xchg
mov
jmp
retf
dec
xchg
in
pop
dec
pop
xor
sub
push
dec
push
icebp
pop
sbb
into
cwde
adc
sbb
jle
and
jo
aas
add
mov
cld
stos
xchg
and
mov
sar
scas
js
in
dec
sbb
cmc
push
ss
sti
test
movs
in
and
adc
mov
push
callw
and
mov
add
mov
aad
and
fcomp
pop
or
out
hlt
cmps
fild
and
lods
repnz
inc
js
mov
inc
sbb
or
cmp
dec
imul
inc
xchg
fbld
mov
sbb
cmp
pop
outs
fwait
popa
mov
sbb
jle
call
or
mov
iret
jmp
in
xchg
push
and
jge
test
mov
cs
push
sbb
aaa
fimul
jo
retf
push
push
mul
shl
jp
cmp
iret
push
mov
inc
jg
push
out
sbb
test
fnstsw
stos
(bad)
int3
into
loop
mov
sub
pop
ds
fucomip
sbb
sbb
addr16
movs
div
fcmovnb
sub
lods
inc
jno
adc
sub
adc
xchg
push
dec
fld
xor
daa
fisub
sbb
add
je
aas
mov
and
aas
sub
push
ret
mov
paddusw
out
or
pushf
movs
stos
loope
add
mov
ja
push
push
jg
daa
int3
dec
dec
stos
push
inc
in
cmp
mov
adc
jns
xchg
pop
mov
je
xor
mov
inc
pop
pop
adc
cmovns
nop
mov
mov
inc
ja
das
mov
sahf
push
nop
idiv
push
jmp
cwde
bound
fisub
fdivp
mov
push
cmp
mov
fadd
jl
jno
mov
cmc
imul
adc
cld
or
jg
xor
push
pop
sub
cdq
pop
bound
es
retf
pop
(bad)
mov
sub
(bad)
out
push
nop
adc
xchg
lods
out
mov
je
xor
push
mov
mov
sbb
add
loope
shl
dec
xor
or
push
push
cld
outs
cmps
push
mov
imul
fdivr
pop
jno
fwait
or
or
das
sahf
adc
(bad)
xor
nop
xor
dec
sbb
ds
push
rol
mov
in
out
mov
dec
sub
jbe
out
pop
ins
ret
add
push
cmps
dec
add
xchg
cli
mov
sbb
aaa
lahf
jg
mov
shr
mov
retf
xor
test
pop
pusha
jno
adc
stc
adc
sbb
shl
test
or
in
clc
mov
cmp
daa
cmps
push
xchg
ds
mov
xchg
jns
cmp
sahf
xchg
mov
mov
jl
in
imul
mov
mov
pop
jmp
pop
frstor
lods
test
pop
data16
nop
xor
sbb
movs
add
xchg
inc
jnp
das
xor
iret
bound
cld
and
movs
fst
ror
jnp
add
or
sar
and
aas
shl
adc
mov
cmp
shr
xlat
adc
(bad)
call
sti
pop
add
push
mov
aas
inc
xchg
add
jmp
inc
jg
jno
lods
push
out
cdq
push
stc
pop
dec
fld
daa
sbb
aaa
xchg
sub
std
call
sar
and
nop
pop
fs
cmp
push
add
mov
jns
test
pop
loopne
xchg
sub
je
out
sub
gs
outs
xor
mov
xor
or
shl
add
jae
les
(bad)
into
stos
sub
call
and
loopne
prefetch
jl
movs
adc
mov
dec
loope
cmp
sbb
inc
xor
icebp
cmp
stc
sub
aas
fwait
dec
out
movs
jne
xchg
xchg
xchg
mov
jmp
inc
or
sub
pop
retf
push
xchg
xchg
(bad)
inc
mov
out
rcr
movs
push
adc
add
movs
push
out
add
ins
add
adc
fidiv
dec
out
and
mov
jns
jecxz
xchg
mov
sub
pop
mov
call
dec
retf
loop
adc
cmp
fidivr
dec
pop
dec
or
jae
push
cmp
ins
cmps
and
int
add
mov
jnp
adc
in
shr
enter
xor
jmp
repz
rol
popf
pop
dec
mov
in
add
and
in
repnz
into
aaa
adc
cli
mov
sub
mov
sbb
push
inc
xchg
test
dec
ror
jmp
arpl
shr
retf
fsub
xchg
(bad)
dec
fsubr
xchg
dec
inc
jecxz
sbb
(bad)
clc
push
repnz
out
sti
xchg
and
(bad)
scas
out
clc
jns
xchg
mov
xchg
pop
mov
sahf
addr16
lea
pop
pop
retf
stc
adc
push
les
out
mov
xchg
pop
fwait
mov
and
push
xchg
xchg
xor
ins
les
ror
das
pop
call
cwde
xchg
jecxz
sub
jno
add
fdivr
mov
mov
fs
add
xchg
push
bound
pop
or
(bad)
test
test
jb
and
ret
push
and
loope
stos
cs
dec
out
outs
dec
inc
push
enter
out
ss
and
fisub
pop
lea
xor
push
out
cs
and
sub
retf
dec
mov
aas
retf
in
js
arpl
je
repnz
in
cmp
sub
or
je
cli
nop
mov
or
xchg
or
pop
adc
mov
into
test
push
daa
shl
enter
clc
jle
aaa
ja
pop
shl
and
xchg
js
in
bound
mov
mov
mov
push
les
adc
jg
(bad)
jae
mov
pop
push
ja
mov
inc
jge
call
rcr
out
cmp
not
or
je
mov
pop
xchg
fild
std
jp
repnz
enter
or
inc
cmp
push
ins
jmp
pop
xchg
sbb
mov
add
jnp
and
rol
jle
out
addr16
ja
popf
mov
aas
sub
or
inc
xor
xlat
xchg
pop
mov
xor
jg
loope
enter
push
retf
div
pop
shl
imul
mov
mov
je
cmps
test
sar
sbb
mov
fiadd
jb
imul
mov
(bad)
cwde
jecxz
xchg
out
mov
mul
clc
mov
retf
cmp
into
je
inc
cmc
popa
xchg
xchg
(bad)
mov
mov
cmps
(bad)
cmc
imul
adc
and
adc
sub
dec
adc
lea
das
popf
pop
jbe
fidiv
dec
cmp
sub
gs
xchg
mov
push
icebp
cmp
or
cli
mov
push
pop
mov
cmps
das
test
adc
cwde
pop
mov
sub
sbb
add
in
les
das
and
dec
out
in
ret
inc
dec
and
(bad)
pop
mov
push
cmp
push
jmp
sub
adc
int
mov
iret
cmp
jp
pop
(bad)
std
inc
add
mov
adc
lods
into
cwde
mov
sbb
add
mov
inc
fs
daa
retf
dec
inc
and
xchg
jo
sti
jmp
mov
jmp
leave
and
stos
sti
xchg
jl
scas
xchg
fs
jmp
xchg
jo
jne
push
icebp
pop
in
jmp
(bad)
sti
mul
test
aaa
jmp
dec
sti
add
lods
xchg
daa
jl
push
add
es
scas
jmp
sub
ss
xchg
dec
adc
test
inc
or
pop
or
clc
pop
pushf
cmp
mov
test
(bad)
xchg
popf
mov
in
fidivr
lods
jge
mov
mov
push
inc
call
sbb
sbb
das
int3
enter
fbstp
inc
or
add
mov
leave
lods
mov
or
sbb
add
xlat
adc
add
sub
nop
mov
aaa
out
add
sbb
aad
iret
ror
ror
cli
fcom
xor
jb
push
pop
pop
and
push
xlat
inc
sahf
push
dec
or
pusha
xchg
xor
mov
mov
scas
xlat
sub
lea
adc
shr
push
hlt
test
mov
or
in
xchg
cmp
mov
std
fidivr
pop
push
das
push
inc
icebp
cmp
push
les
stos
lods
pop
xor
vcomisd
inc
daa
xlat
push
ror
add
and
inc
inc
inc
push
ins
cs
out
cld
cmp
add
in
cli
or
mov
mov
inc
or
cmp
cmp
je
mov
cmp
add
sub
mov
cld
popa
mov
jbe
push
(bad)
daa
in
xchg
xor
pop
cmp
mov
jmp
rol
aaa
dec
mov
sub
pop
stos
cs
ja
sbb
push
ins
aam
pop
das
dec
xor
arpl
and
push
jae
or
test
xchg
test
or
mov
xchg
ja
cdq
inc
cwde
sbb
dec
mov
fwait
inc
and
xchg
jb
mov
push
sub
lahf
out
or
adc
pop
jmp
dec
add
lock
in
ret
test
inc
sti
(bad)
shr
sahf
sbb
mov
lods
inc
lods
cs
sbb
sbb
cmp
pop
and
shl
add
adc
add
push
adc
cld
sti
dec
ins
xchg
jp
mov
pop
addr16
cwde
cmp
pop
jmp
and
sar
jecxz
movs
or
mov
dec
adc
into
rcr
(bad)
call
pushf
mov
std
ins
fisub
jns
sub
pop
mov
mov
or
(bad)
int
jmp
cwde
jne
xlat
nop
pusha
push
loop
rol
mov
stos
push
gs
stos
xor
and
sbb
sub
div
push
aas
arpl
xor
(bad)
sti
adc
sar
mov
jbe
sbb
xchg
add
xchg
sbb
mov
dec
cmp
push
push
(bad)
pop
xchg
lahf
jns
dec
sbb
shl
out
add
pop
push
xor
or
js
xchg
lea
into
adc
and
cmp
(bad)
out
xor
sbb
out
sti
shl
pop
cmc
mov
ret
mov
xor
and
mov
and
lock
outs
(bad)
rcl
(bad)
sbb
ins
jl
retf
inc
xor
mov
jbe
ins
or
out
idiv
cmp
or
cld
mov
scas
sub
xchg
mov
out
fsub
mov
in
mov
icebp
mov
add
gs
in
repnz
inc
shr
aaa
jbe
xor
push
xchg
sub
movs
popf
loopne
enter
cmp
or
movs
sub
xlat
mov
aam
sar
xchg
mov
loop
mov
fucom
sub
mul
loopne
jno
push
xchg
es
xchg
mov
or
cli
loop
ret
loope
push
fimul
inc
out
fstp
into
dec
pop
push
out
(bad)
jle
lods
pop
mov
jmp
in
out
pop
std
std
cmp
mov
sub
std
ret
addr16
mov
addr16
push
sub
sbb
dec
nop
(bad)
cmp
mov
xchg
fs
fdivr
cli
jecxz
lock
push
mulps
sub
fimul
loop
aas
mov
test
adc
jge
sbb
dec
jle
mul
into
int3
push
xor
cwde
(bad)
call
and
sbb
(bad)
fcmovnbe
xchg
imul
movs
xchg
fld
sub
cld
scas
aad
mov
fadd
and
iret
mov
fs
not
sub
mov
xor
sub
shl
mov
pop
push
and
loopne
fidivr
pop
pop
mov
sbb
icebp
bound
cwde
push
(bad)
and
sbb
sub
test
(bad)
daa
xchg
repz
jae
int3
sub
mov
lahf
stc
es
xchg
cmps
lock
push
(bad)
sbb
pop
(bad)
mov
push
dec
ret
call
mov
cmp
into
adc
sub
xor
(bad)
outs
imul
iret
sbb
frstor
adc
inc
push
imul
pop
push
pop
aaa
push
jmp
mov
sub
sub
mov
out
arpl
shl
cmps
shl
and
ror
cmp
cmp
cmp
jmp
xor
cld
sub
rol
mov
fadd
cmc
adc
scas
aad
jae
imul
cmp
loop
nop
movs
dec
scas
push
xor
lock
inc
pop
retf
das
or
jle
mov
and
add
bound
ins
mov
into
clc
test
and
mov
jbe
out
cs
pop
jno
adc
jle
(bad)
std
inc
test
daa
int3
ja
test
pop
add
dec
nop
cmp
fdiv
ror
or
inc
fmul
mov
adc
out
push
jle
add
xor
icebp
inc
daa
rol
adc
scas
loopne
rol
std
fwait
stos
add
repnz
aad
aam
fild
shl
icebp
cmp
leave
dec
xor
fld
push
xor
pop
push
fldcw
push
call
dec
cli
or
adc
adc
in
pop
jbe
cmp
sub
out
mov
pop
sub
nop
test
xchg
mov
stos
loopne
or
out
rcl
loopne
xchg
push
mov
push
xchg
mov
test
mov
loopne
mov
xchg
mov
lock
push
jno
add
sub
into
mov
movs
nop
loope
or
mul
ret
sbb
mov
enter
and
es
or
mov
scas
adc
out
xor
out
sbb
mov
shl
mov
test
cmp
mov
push
pop
jmp
jg
enter
iret
ss
lods
and
cmps
jp
inc
imul
ins
xchg
xor
push
or
xchg
enter
sbb
inc
pop
mov
mov
test
add
inc
lods
jbe
stos
mov
movs
pop
jge
lds
test
xor
fmul
shr
(bad)
shr
mov
jmp
xchg
cmp
dec
push
jp
shr
inc
sbb
xchg
fisttp
in
(bad)
call
mov
repz
(bad)
stc
push
mov
mov
push
add
mov
mul
mov
aaa
push
repz
adc
repz
movs
dec
mov
push
adc
dec
pop
mov
cmp
jmp
xchg
xchg
cmc
sbb
mov
mov
mov
cli
sub
scas
sbb
ins
ret
mov
aas
sub
hlt
and
mov
lock
mov
jb
mov
shr
mov
enter
das
fsub
xlat
sbb
cmps
cdq
stos
bound
cmp
and
and
fnstsw
in
sbb
sub
inc
inc
dec
in
and
jae
inc
fadd
add
stos
jle
mov
pop
stos
pop
stos
and
cmp
sub
test
pop
or
cmp
sahf
inc
mov
scas
push
xor
mov
loope
iret
jae
das
mov
retf
jmp
lea
cld
je
ja
push
adc
pusha
das
fwait
xchg
and
pop
push
fstp
mov
fidiv
fcom
rcr
push
pushf
sahf
mov
sti
add
out
pop
cmp
sar
cmp
lahf
add
xlat
pushf
out
les
out
adc
mov
addr16
test
stos
cli
xchg
cmp
sahf
dec
mov
rcr
test
mov
in
stos
xor
or
pop
out
adc
sar
fisubr
clc
inc
mov
push
nop
jl
inc
mov
mov
dec
imul
pop
hlt
mov
cmps
jns
xlat
cld
in
pop
nop
inc
mov
or
jbe
loopne
adc
sti
dec
fwait
stc
pushf
add
popa
xor
clc
mov
imul
mov
mov
repnz
scas
out
and
cdq
and
es
ins
je
outs
or
or
popf
and
psubd
mov
inc
dec
movs
aas
sbb
fst
fcmovnbe
aam
ja
and
inc
dec
mov
pop
mov
push
lahf
push
xor
or
pop
cmps
push
xchg
mov
jmp
mov
ja
push
mov
or
inc
xchg
ins
scas
dec
test
dec
inc
neg
add
jmp
xchg
xor
shl
mov
push
jmp
rcl
xor
inc
dec
adc
popa
in
sbb
rcr
fdivr
or
in
test
das
xchg
adc
leave
add
or
es
pop
ins
mov
lods
lea
lods
cdq
jnp
pushf
pop
call
jmp
repz
xor
punpckhbw
inc
push
call
int
and
push
inc
xor
aad
stos
dec
xor
int
hlt
jbe
rcl
and
mov
and
nop
int3
fild
inc
popf
fstp
mov
clc
shl
push
mov
loope
mov
push
inc
cli
cli
xchg
mov
pop
or
into
push
ins
fs
push
dec
outs
loopne
xor
aad
dec
lahf
pusha
ins
loope
aaa
push
repnz
jle
cld
add
nop
hlt
in
stc
scas
ins
dec
idiv
dec
or
xchg
mov
(bad)
outs
test
(bad)
je
jne
push
rcr
mov
pop
and
sar
sbb
sar
pusha
cmps
and
and
loopne
in
jno
cmp
dec
sub
jle
xchg
out
dec
lods
sub
add
mov
or
fidivr
cmp
dec
pop
push
pop
lds
(bad)
pop
fistp
cmp
lahf
test
or
sti
outs
mov
sar
imul
jno
loop
gs
sbb
xchg
mov
daa
scas
cmps
mov
cwde
jnp
push
pop
inc
ror
adc
dec
dec
and
sbb
cmc
test
jl
or
cli
fcomp
and
test
or
scas
dec
cmp
mov
and
jno
lods
push
cwde
dec
pop
mov
inc
nop
hlt
std
stc
dec
pop
lea
mul
enter
repz
pop
mov
mov
dec
xor
loope
(bad)
sti
dec
mov
mov
loope
jmp
in
stos
cmp
add
mov
iret
icebp
popa
pop
and
add
sar
ins
ja
in
pop
push
push
aam
xor
sbb
jmp
mov
dec
mov
or
test
pop
imul
xchg
xor
cwde
pop
shl
sub
push
scas
test
enter
xor
stos
es
push
rcl
dec
xor
sti
imul
mov
lods
mov
outs
mov
into
cmps
push
fs
mov
sub
sub
repz
dec
aam
fsubr
out
push
or
push
mov
mov
outs
mov
loop
hlt
cmp
ror
push
cmp
in
ds
je
cmp
cmp
mov
outs
add
addr16
aad
es
cmc
in
jbe
(bad)
aam
mov
cmc
push
push
fsubr
mov
sub
jmp
jecxz
cmps
call
xor
jmp
sub
aad
gs
cld
inc
adc
jnp
das
in
ins
mov
adc
das
in
or
adc
pop
xchg
or
ficomp
inc
adc
call
add
mov
or
in
iret
outs
or
jmp
cs
repz
sub
leave
ins
ja
push
arpl
repz
mul
cli
add
cmp
and
call
xor
popa
sub
nop
repz
push
mov
adc
push
xchg
push
retf
in
shl
sti
cmp
dec
popa
inc
sbb
sub
(bad)
icebp
lea
ins
push
sbb
(bad)
fisttp
ds
cmp
adc
sar
sub
das
in
jae
fcomi
jno
pop
test
lods
mov
mov
cs
lahf
dec
call
jmp
ror
mov
cwde
cmp
and
ret
jns
test
sub
push
popf
or
cld
xlat
(bad)
and
jns
je
or
xchg
cmc
jle
inc
push
mov
leave
sub
ret
xchg
mov
xchg
(bad)
imul
cmps
add
std
out
cld
xchg
adc
push
xchg
fsubr
add
call
cmps
stos
fsubr
xchg
jge
dec
stc
call
sbb
or
rcl
enter
shr
xor
in
cld
dec
ss
dec
or
gs
push
mov
pop
mov
add
call
add
push
jmp
clc
inc
pop
push
xchg
mov
(bad)
(bad)
(bad)
cli
add
sbb
ins
jo
call
xchg
out
test
stc
movs
and
dec
leave
adc
fadd
jle
imul
xchg
adc
fs
arpl
adc
adc
adc
inc
sbb
rcl
lds
inc
nop
cmps
dec
mov
xor
popf
cmp
adc
sbb
and
bound
out
addr16
movs
jge
xlat
movzx
dec
ins
xor
xchg
and
mov
push
movs
imul
sbb
fmul
push
xchg
movs
int
shr
pop
push
test
dec
in
push
push
pop
xor
sbb
lahf
bound
call
mov
xchg
std
call
push
adc
mov
iret
repnz
pop
mov
into
cdq
xchg
loop
mov
mov
cmc
cld
inc
and
dec
sahf
popa
xor
xor
jle
jb
mov
lds
jbe
or
outs
stc
adc
fwait
sbb
test
div
push
sub
sbb
les
retf
cmp
fwait
xchg
aad
xor
cdq
enter
dec
nop
ins
jl
(bad)
fiadd
and
mov
push
mov
cli
jns
or
std
mov
or
mov
and
inc
xchg
retf
sahf
sar
cdq
xor
mov
fimul
retf
pminub
jns
and
xchg
dec
jecxz
std
call
pop
jns
hlt
call
neg
mov
icebp
stc
enter
je
mov
mov
lock
pop
cdq
mov
lock
out
cmp
push
mov
dec
sbb
std
repz
mov
sub
or
inc
shl
stos
pop
stc
push
call
ret
sbb
retf
mov
jmp
jl
jns
ins
mov
mov
fstp
jns
in
int3
jmp
retf
(bad)
outs
clc
(bad)
cmp
leave
sub
out
std
push
mov
jo
dec
mov
ret
arpl
in
fdivr
push
mov
pop
nop
xchg
fwait
inc
push
ja
call
pop
in
cmp
xor
loop
pop
and
retf
xchg
push
jno
lea
scas
ja
xor
add
popa
mov
std
mov
add
fstp
cli
inc
mov
or
(bad)
imul
or
adc
mov
adc
xchg
and
icebp
lods
das
jno
scas
nop
push
fbstp
in
mov
inc
cmc
rcl
jns
push
scas
push
jge
pop
jecxz
xchg
sbb
ja
pop
imul
shl
xchg
pop
daa
jg
push
imul
not
ins
or
dec
stos
xchg
mov
jle
jmp
test
add
repz
(bad)
lahf
cld
dec
sub
ins
inc
xor
pop
fstp
ss
dec
adc
in
mov
sbb
and
add
int3
movs
pop
ret
xor
mov
mov
ja
aas
mov
sub
cli
call
retf
arpl
clc
scas
push
dec
sub
dec
jae
or
cmp
pop
jnp
or
and
jge
imul
out
je
test
sahf
shl
jne
push
inc
sti
je
ds
sub
scas
jns
call
inc
add
addr16
aaa
pop
cmps
jp
popa
sbb
out
loope
pop
stos
in
and
loopne
sub
aas
cmp
lahf
xchg
mov
lods
popa
jl
xor
xor
outs
jo
shr
in
add
adc
inc
xor
jle
mov
dec
movs
push
or
sub
or
imul
ss
add
pushf
outs
dec
cli
adc
pop
int
jne
add
mov
push
scas
jo
or
int
mov
pusha
or
gs
cli
ds
fdiv
cmp
push
(bad)
nop
mov
cmp
and
sbb
adc
ret
shr
lods
push
sar
mov
mov
pop
test
out
xor
mov
mov
cmp
adc
fadd
lahf
inc
adc
xchg
jb
js
lods
sub
imul
mov
dec
mov
fwait
or
mov
push
test
int3
arpl
mov
fsubr
inc
stc
out
push
xchg
div
dec
lahf
add
sub
lods
bound
mov
xor
mov
or
in
jg
in
dec
xchg
pop
mov
in
mov
push
adc
sbb
(bad)
loopne
add
mov
cdq
(bad)
loope
pop
inc
push
jmp
les
push
push
cmp
sub
add
push
mov
jae
rcr
je
inc
les
(bad)
scas
call
mov
std
jb
xor
cmps
imul
pop
or
mov
pop
lds
inc
inc
ffree
mov
ds
inc
(bad)
and
mov
pop
mov
push
xor
pop
cmp
scas
mov
hlt
je
cli
aas
cmp
cmp
leave
jns
rcl
bound
sbb
ret
sbb
jle
push
xor
ret
stc
sahf
fsubr
push
xor
or
xor
or
and
jmp
dec
imul
push
jae
xor
sub
jge
or
adc
jp
sbb
add
gs
ja
sbb
or
cs
cmp
inc
adc
jne
fmul
pop
mov
sbb
xor
mov
mov
ror
xor
push
pusha
and
and
mov
inc
mov
retf
not
retf
dec
mov
jg
pop
pop
xchg
sub
adc
pushf
popf
mov
jl
mov
mov
ja
cwde
or
pusha
ja
xchg
and
mov
jp
cdq
je
xchg
mov
pusha
push
jmp
mov
jl
jbe
adc
loop
push
iret
scas
ret
test
mov
dec
test
out
int
jne
xor
add
add
mov
ins
inc
and
adc
dec
dec
mov
ds
adc
xchg
outs
rcr
mov
or
pop
cdq
xor
fcomp
retf
movs
mov
mov
sbb
mov
mov
push
mov
xchg
(bad)
lods
mov
xor
sbb
xchg
push
jb
mov
fisub
fimul
test
add
mov
xor
or
bound
inc
call
int3
fnstcw
outs
ret
xor
sub
call
loop
pmuludq
xchg
push
arpl
mov
add
cmp
dec
movs
mov
jne
dec
add
loope
jb
pop
psubsb
xor
fmul
dec
daa
push
sahf
or
pop
fs
jp
ins
(bad)
and
sub
sub
movs
sub
or
inc
mov
dec
jb
loope
popa
xchg
aam
mov
rcr
push
sbb
out
fcmovne
cmp
dec
adc
(bad)
cmp
inc
adc
in
test
iret
cmps
xchg
or
pop
(bad)
loop
sbb
sar
test
in
pop
repz
cmp
pushf
push
xchg
rol
leave
clc
cmp
mov
outs
aad
ins
xor
xor
sub
loope
push
dec
repnz
mov
dec
enter
mov
add
int
xchg
sub
cmp
add
mov
daa
xchg
fisttp
mov
out
pop
fcom
pop
add
cmp
xchg
pop
mov
adc
mov
jns
pop
cmp
ja
jns
push
jbe
ficom
push
ins
mov
scas
es
xor
mov
push
xlat
ins
outs
call
inc
rcr
test
not
inc
mov
popa
sub
sub
int3
push
add
xchg
dec
outs
repz
cli
(bad)
js
sahf
aas
inc
pop
inc
sub
mov
sub
scas
enter
push
xor
(bad)
in
ins
add
retf
xor
push
sub
shl
sub
mov
xchg
lods
aas
test
pop
repz
sub
mov
shl
stos
stos
sti
inc
mov
xchg
les
xsha1
cmps
(bad)
std
add
xor
mov
test
daa
mov
into
lock
cmp
pop
popa
mov
ficom
jmp
retf
jmp
inc
inc
jae
hlt
rol
mov
nop
xor
mov
outs
sub
inc
sti
push
xor
push
repz
test
mov
sub
or
and
jb
adc
mov
repz
jge
aaa
sub
mov
pop
mov
cmp
nop
fcmovbe
and
fs
mov
mov
nop
pop
sti
and
or
imul
imul
mov
sub
or
cmp
lods
adc
add
pop
sar
out
scas
aas
lock
push
inc
mov
shl
(bad)
(bad)
jno
(bad)
aam
and
scas
sbb
cs
mov
loop
cmp
test
nop
mov
(bad)
shl
loop
add
mov
push
sbb
adc
cmp
mov
imul
fs
sbb
cmps
mov
loope
mov
sti
pop
dec
inc
mov
aas
les
test
shl
fsubr
fisubr
sub
jg
cmp
add
add
inc
xchg
mov
and
js
sub
(bad)
push
and
cmp
sub
mov
retf
in
aaa
sbb
add
xchg
mov
cmp
fild
fsubr
inc
jle
dec
jg
adc
sahf
mov
add
mov
inc
jno
jb
pop
xor
push
push
clc
sbb
push
test
mov
mov
pop
pop
popa
jbe
mov
mov
xchg
xchg
jno
gs
push
jecxz
xor
push
(bad)
dec
cmp
sub
cwde
(bad)
out
lea
pushf
retf
in
mov
jbe
pop
inc
in
es
pop
mov
in
sbb
je
pop
aad
sub
xor
and
inc
loopne
retf
jb
js
cld
fdiv
or
daa
stos
jle
ds
push
adc
inc
call
aaa
stos
lods
mov
loop
jecxz
mov
or
mov
jecxz
test
inc
adc
inc
mov
(bad)
scas
test
stos
jbe
pop
neg
(bad)
push
lods
sbb
mov
test
imul
fadd
shl
stos
mov
shl
or
sbb
rcl
cmp
fsubrp
cmps
inc
xor
ja
and
les
jne
jmp
imul
mov
xchg
push
mov
cmp
jle
daa
jmp
(bad)
js
call
mov
fidiv
push
ss
cmp
rcl
pusha
movs
mov
xchg
mov
mov
sets
ret
(bad)
and
ficom
or
inc
push
ror
cwde
mov
adc
mov
inc
lahf
shl
jb
cmp
mov
scas
je
mov
cmc
cmp
js
fsub
sbb
dec
dec
call
call
xchg
xchg
shl
sysexit
jne
fwait
shl
sub
mov
cmc
call
cmps
stos
test
mov
and
cmc
and
pop
test
adc
inc
sub
leave
push
inc
data16
das
addr16
sub
dec
pop
das
inc
jmp
jb
mov
enter
pushf
ror
rcl
cs
mov
mov
jl
sub
xchg
sub
and
fidivr
cli
cld
aas
cs
retf
xchg
ret
pop
sub
mov
dec
push
inc
adc
dec
lods
pop
into
inc
jae
sti
jbe
push
inc
push
inc
in
xor
fisub
mov
out
loop
sbb
jmp
jl
movs
mov
jle
test
dec
xchg
dec
aam
pop
pop
sbb
(bad)
dec
dec
adc
mov
lods
in
add
and
gs
fcmovbe
retf
dec
xor
push
in
dec
or
cdq
stc
mov
call
jge
rcr
cmp
push
or
xchg
test
jnp
outs
mov
popa
pop
mov
mov
je
sub
or
mov
cmp
mov
dec
fsubr
cmp
pop
jmp
js
sbb
mov
xlat
int
sahf
dec
fxch
ja
stos
data16
lahf
mov
outs
xlat
mov
call
in
push
pop
imul
xor
add
mov
lahf
or
dec
sbb
cmps
mov
ror
push
push
adc
cli
inc
es
in
arpl
add
pop
dec
ins
push
lods
mov
rcl
div
and
push
stos
bound
ret
mov
adc
cmp
pop
add
add
mov
dec
mov
ret
out
(bad)
lods
ja
mov
test
xchg
ja
in
cmp
fst
stc
push
jo
push
pop
lea
mov
sbb
das
pop
pop
jbe
leave
inc
int
cmp
jne
sub
add
ror
xchg
add
dec
mov
dec
stc
sbb
fisubr
sbb
ror
sub
dec
jno
dec
jne
out
jno
inc
xor
xor
add
jbe
cmp
xchg
or
sar
mov
or
hlt
sub
jno
and
xor
ret
inc
mov
in
adc
hlt
inc
sahf
push
ds
mov
test
lea
les
push
push
cmps
nop
nop
aam
mov
mov
cdq
popf
push
(bad)
outs
call
xchg
xchg
call
inc
mov
and
adc
lock
xchg
arpl
xchg
pushf
push
mov
sar
(bad)
out
es
jg
adc
(bad)
mov
push
lods
xlat
push
clc
inc
ret
mov
cmp
ss
enter
or
mov
fistp
fsub
daa
loop
jmp
mov
xor
ja
mov
je
mov
fmul
xchg
jge
mov
ds
sbb
cld
rcr
test
cmps
iret
mov
lock
fstp
out
sub
mov
outs
xor
inc
mov
jno
shr
lahf
mov
inc
les
or
les
jb
in
mov
xchg
mov
stos
(bad)
repz
fisttp
push
sub
push
push
xchg
cmp
nop
jo
addr16
mov
jbe
mov
add
add
mov
adc
cmp
and
xor
cli
cmc
and
pop
mov
rcl
or
mov
shl
xchg
mov
xlat
(bad)
ja
jmp
sub
stos
push
test
addr16
das
shr
sbb
enter
mov
xchg
push
int
pop
sbb
sub
and
xchg
mov
cli
and
repnz
dec
add
pop
mov
pop
mov
cmps
push
inc
push
mov
adc
mov
dec
addr16
in
jnp
(bad)
call
xchg
cmp
xchg
scas
pop
adc
mov
xor
push
rol
enter
dec
cmp
stos
sub
jae
push
push
test
jno
push
xor
and
scas
jae
jle
movs
and
bound
je
mov
add
sbb
sub
cmp
jp
jnp
mov
aad
out
mov
jo
out
mov
push
jle
lea
pop
lods
lods
repnz
cmps
xor
pop
and
lock
dec
out
jo
fisttp
and
mov
xor
and
retf
scas
idiv
pop
xchg
sti
pop
(bad)
out
movs
inc
not
sbb
adc
out
dec
mov
jne
enter
jb
pop
cmp
js
test
inc
jbe
(bad)
aad
jge
fdiv
mov
mov
mov
mov
jg
(bad)
and
dec
repz
stos
sbb
pop
loop
push
xchg
sub
inc
mov
lahf
mov
outs
mov
icebp
push
mov
jg
ret
jne
pop
xchg
cmp
(bad)
clc
mov
mov
mov
xchg
adc
sub
pushf
ret
mov
adc
push
lods
loopne
(bad)
out
sbb
add
push
rcl
repz
lods
les
add
jge
mov
mov
add
dec
out
xchg
jecxz
loop
mov
sbb
call
fadd
or
movs
sub
loop
and
dec
mov
sar
add
test
stc
pop
and
jecxz
js
add
jl
sbb
ret
dec
movs
aam
fidivr
mov
lock
sub
aam
retf
cdq
fstp
mov
cmp
loopne
div
out
mov
xchg
pop
das
nop
popa
ins
leave
fidivr
mov
inc
dec
sar
or
icebp
jp
lock
std
das
scas
pop
and
mov
ins
push
and
jnp
in
fsub
jae
or
repz
fs
pop
add
(bad)
call
adc
inc
test
cmp
inc
gs
ficomp
pushf
jne
sbb
jno
inc
add
mov
bound
xor
(bad)
jmp
cmp
jl
aam
gs
fisub
sti
inc
and
push
mov
sbb
sbb
and
adc
sub
popa
push
ret
in
sahf
inc
pop
push
(bad)
test
and
push
or
pop
(bad)
inc
call
pushf
sub
mov
xor
mov
loop
or
out
cdq
sub
pop
neg
std
outs
test
ja
fsub
mov
test
push
pushf
mov
nop
add
repz
sbb
xlat
popa
hlt
or
cmp
sub
or
push
call
xchg
lods
sbb
ja
scas
popf
cli
push
repnz
pop
lahf
mov
(bad)
jmp
adc
mov
aad
test
sti
cmp
sub
add
and
rcr
pop
mov
repnz
clc
push
repnz
add
pop
das
xor
inc
clc
js
into
xor
in
retf
les
jmp
rcr
fistp
test
rcr
imul
outs
imul
or
push
mov
int
push
cs
bound
arpl
(bad)
loop
jge
dec
in
inc
pushf
push
neg
sbb
imul
pop
loope
scas
in
outs
or
sti
outs
jno
jns
cli
nop
jg
shl
jnp
sbb
cli
add
xor
add
add
xor
shr
shl
xchg
mov
js
out
sar
paddsw
scas
mov
ficom
fnstcw
pop
and
xchg
cs
(bad)
mov
adc
xchg
cmp
cmp
xchg
arpl
jl
test
scas
imul
aaa
and
mov
cmp
mov
mul
dec
inc
jg
jmp
mov
xor
ins
xor
mov
enter
or
aaa
inc
pop
mov
test
jo
dec
jno
dec
jnp
out
mov
push
test
adc
push
cmps
sub
fnstcw
adc
pushf
aaa
add
jp
imul
popf
and
sti
mov
pushf
dec
pop
dec
ins
sub
sbb
or
push
lea
jmp
sbb
inc
popa
ficom
mov
movs
push
loope
push
lahf
xor
mov
dec
mov
icebp
cmps
arpl
je
fmul
pop
add
xchg
retf
mov
pushf
adc
xchg
mov
cmp
mov
jb
(bad)
int3
xchg
push
jo
inc
lods
push
lods
scas
pop
pop
xchg
xchg
loop
in
(bad)
iret
sub
fscale
mov
jb
push
cwde
sbb
popf
mov
aam
shr
sbb
xor
jge
mov
mov
mov
ja
inc
ret
shl
rcl
push
js
push
push
cli
std
inc
xchg
pop
inc
push
xchg
xor
inc
inc
cmp
mov
pop
sub
push
aaa
das
mov
sbb
scas
sti
test
jp
out
xchg
popw
inc
xchg
pushf
nop
mov
pop
ins
cmc
sbb
mov
add
inc
dec
xchg
xchg
inc
add
rcr
push
sbb
push
(bad)
movs
aad
(bad)
out
or
jl
je
cmp
imul
xchg
xchg
adc
add
sub
ret
out
lock
mov
rol
cwde
xor
data16
push
aad
repnz
jne
nop
sub
mov
les
cld
int3
inc
push
pop
and
pop
pop
ja
test
jmp
xor
xor
repz
or
and
sub
push
inc
mov
repnz
aas
dec
into
xor
xchg
movs
sbb
fdivrp
mov
lahf
shr
inc
cli
jmp
dec
lods
jae
in
cmp
and
mov
ins
fld
(bad)
xlat
imul
int
aas
or
cmovno
mov
mov
mov
jo
aad
pop
ja
cdq
(bad)
pop
adc
loop
xchg
mov
clc
xchg
mov
xlat
sub
adc
pop
out
push
adc
add
int3
ret
retf
dec
push
xchg
sub
dec
(bad)
ss
aas
int3
pop
fadd
cmp
push
movs
mov
in
dec
neg
jnp
in
sub
mov
imul
test
cmp
jp
sub
sar
pop
mov
bnd
aaa
stos
int
data16
add
mov
mov
(bad)
pop
pushf
lfs
add
test
popf
sub
mov
inc
lods
jmp
ss
int3
cli
addr16
stos
inc
out
xor
push
xchg
mov
loopne
mov
cwde
(bad)
sti
inc
mov
dec
inc
aas
jp
pop
add
jge
xor
jnp
dec
xchg
gs
xchg
dec
rcl
stos
imul
das
push
sbb
mov
xchg
mov
int
not
and
xchg
cmp
or
mov
dec
fild
rcl
cmp
sbb
push
mov
xchg
aad
inc
pop
dec
or
in
retf
pop
pop
es
imul
push
inc
pop
popa
sbb
jb
jl
fwait
fs
mov
push
sub
mov
push
pusha
out
pop
or
jle
pop
lea
loopne
xchg
call
rcl
cli
stc
fwait
sub
ds
pop
mov
mov
pop
sub
jmp
xchg
and
add
xchg
cmp
pushf
jp
cdq
call
add
cmps
mov
data16
sub
ins
loope
jb
movs
shr
cmp
repnz
outs
scas
sbb
sbb
xor
popf
and
scas
jmp
sbb
test
into
loop
cmp
inc
add
fist
inc
icebp
mov
sbb
or
repnz
inc
mov
arpl
mov
scas
jp
inc
pop
mov
xchg
pop
adc
push
ret
dec
jecxz
sahf
pop
shl
add
sti
add
jne
sub
adc
ficomp
add
lock
outs
call
movs
mov
ror
loop
ins
lods
mov
sub
ret
push
loope
inc
sub
push
aam
ror
bound
jg
adc
sbb
mov
je
test
xchg
push
cmp
arpl
cmp
ins
inc
bound
aas
push
loopne
jg
jecxz
(bad)
push
mov
push
xchg
int
cmp
and
fwait
push
push
dec
iret
in
pusha
xchg
xchg
add
xchg
test
xchg
pop
sahf
dec
lods
sbb
sbb
jge
jmp
or
outs
mov
mov
sahf
(bad)
(bad)
xchg
into
jne
std
mov
mov
cwde
xor
mov
sub
and
cmp
dec
shr
jecxz
dec
dec
lods
pop
arpl
data16
scas
sbb
sub
cmps
mov
ret
xchg
lock
jge
push
outs
cmp
inc
xchg
outs
cmp
fwait
mov
(bad)
ret
push
inc
test
jae
not
jne
pop
and
sbb
int
push
sub
in
add
(bad)
xor
js
inc
sahf
out
push
jecxz
pop
call
je
sub
scas
das
out
xchg
xor
adc
clc
ins
dec
sbb
sbb
jno
cmp
or
es
(bad)
clc
xor
adc
mov
popf
inc
jg
test
inc
jmp
dec
pop
pusha
mov
pushf
xor
lods
scas
jg
dec
pop
push
xchg
call
sbb
cmc
xor
xor
sahf
pshufw
dec
push
xchg
mov
mov
in
adc
dec
or
jno
inc
and
dec
adc
xchg
jbe
(bad)
jnp
daa
mov
cwde
jl
sub
pop
jnp
xchg
xchg
lds
or
sub
enter
rol
mov
call
or
jo
jg
inc
movs
jmp
mov
fadd
stos
cmp
and
jle
mov
xchg
inc
mov
jo
adc
mov
pop
or
pusha
and
jae
and
sub
pushf
sbb
out
mov
push
inc
inc
cmp
aam
dec
cmp
inc
jle
ret
in
sbb
cwde
mov
arpl
clc
mov
ins
jmp
mul
lock
scas
xchg
pop
push
jl
sahf
retf
or
cmp
addr16
data16
xchg
gs
mov
(bad)
ror
push
xor
sbb
pop
jl
add
inc
dec
push
sub
leave
cmp
cmp
cmps
xchg
xchg
push
outs
xchg
ja
xchg
outs
jno
(bad)
int3
push
bound
nop
stos
xchg
cmps
push
or
mov
fwait
adc
(bad)
pop
scas
cmps
sub
les
jno
jp
sub
mov
std
shr
out
outs
icebp
sub
mov
jnp
jbe
inc
mov
and
bound
movs
ror
mov
mov
int3
jp
jno
jnp
cmp
adc
hlt
sub
(bad)
mov
int
shl
ss
addr16
xchg
ins
pop
shl
cs
adc
add
mov
jl
(bad)
mov
(bad)
test
ins
cmp
adc
xlat
(bad)
mov
imul
es
retfw
dec
test
jae
xor
cli
dec
cmp
cwde
ja
dec
add
sahf
loopne
lds
fimul
cmp
ins
maskmovq
div
lea
and
and
push
and
enter
cmps
dec
add
sub
retf
mov
sar
hlt
dec
mov
and
jno
jbe
pop
lods
mov
ins
push
jl
inc
add
push
enter
xchg
pop
arpl
and
test
cdq
(bad)
call
inc
ja
pop
dec
(bad)
xchg
int
mov
test
mov
das
call
outs
push
stos
or
ja
loope
xor
pop
push
bound
jno
adc
daa
out
lods
sbb
mov
fistp
ins
jmp
sbb
sbb
into
or
jle
push
mov
sbb
mov
or
daa
aam
push
in
sub
ret
pusha
das
sub
mov
sub
arpl
outs
mul
fdivr
adc
or
add
mov
movs
mov
sub
and
pop
add
out
retf
fist
fadd
mov
add
push
mov
pop
mov
cmp
arpl
arpl
adc
test
mov
popf
(bad)
pop
add
(bad)
hlt
jl
das
inc
jae
repz
ins
xor
sub
mov
call
pop
retf
mov
sbb
lds
cli
icebp
adc
mov
pop
pop
shl
lods
cmp
mov
mul
ins
cmp
xchg
pop
dec
(bad)
and
sbb
daa
icebp
pop
jle
mov
mov
dec
xor
adc
imul
push
test
arpl
rep
aam
push
push
mov
movs
cs
xor
std
mov
xor
adc
stc
dec
mov
addr16
je
or
sbb
es
xchg
sbb
stos
push
(bad)
(bad)
cli
ins
ret
ds
test
or
and
loopne
lock
lahf
sub
cmp
mov
iret
mov
mov
test
les
sub
rcr
adc
fidivr
aaa
aas
and
push
jecxz
push
aam
jp
and
xchg
rol
xchg
xchg
idiv
(bad)
aas
icebp
inc
jmp
pop
pop
mov
push
jp
das
mov
mov
and
mov
js
enter
sbb
popw
test
clc
xchg
icebp
inc
pop
adc
push
cmps
mov
add
mov
pusha
inc
int3
add
adc
push
pushf
sub
mov
jnp
movs
pop
sti
mov
jmp
hlt
adc
and
js
dec
dec
or
push
xor
mov
adc
xor
cmp
xchg
sbb
sbb
fisub
push
and
inc
ja
pop
imul
pop
leave
(bad)
imul
inc
retf
inc
(bad)
movs
xchg
jle
movs
and
je
ficom
sub
push
jecxz
cdq
pop
mov
cdq
sbb
add
push
ror
xor
shl
sbb
sub
xor
fwait
mov
ret
push
fld
sbb
dec
push
(bad)
in
shr
xor
jmp
add
cld
xchg
jae
xor
jle
ret
aad
push
sbb
retf
mov
ret
pop
cld
int3
mov
rcl
imul
dec
sub
sub
pusha
xlat
inc
outs
leave
popf
mov
lahf
pop
push
and
mov
jbe
dec
xchg
sub
jp
sar
jb
je
dec
sub
out
mov
jmp
lahf
sbb
jbe
rcl
fisubr
lahf
sub
push
mov
mov
push
inc
or
repz
das
out
jnp
cmp
pop
add
pop
pop
pop
sbb
jg
mov
cmp
add
int
pop
je
lds
or
mov
mov
das
arpl
bnd
jle
(bad)
adc
aas
ret
ds
popf
and
xor
mov
dec
sub
cmp
mov
or
ins
sub
(bad)
jno
xor
and
not
xchg
mov
(bad)
icebp
sub
into
neg
shr
repz
je
lods
push
sbb
call
add
push
out
jno
and
jge
call
rol
dec
add
or
ins
mov
(bad)
mov
shr
ficomp
push
dec
idiv
sub
sub
adc
sub
mov
mov
adc
push
mov
xor
inc
addr16
in
dec
stos
(bad)
xchg
js
je
js
fdiv
ss
scas
not
mov
and
push
jbe
jp
lods
mov
lods
cmp
fld
stos
pop
std
fisub
sub
jnp
nop
push
ins
dec
mov
inc
std
or
sub
sub
aas
jae
dec
jne
clc
in
add
popf
icebp
pop
bound
int
inc
lods
push
cmps
push
jbe
inc
inc
xchg
scas
fs
shl
fld
(bad)
dec
movs
xchg
inc
sti
gs
adc
mov
repz
jp
cld
cmps
fstp
push
sub
nop
xchg
inc
xor
mov
imul
or
arpl
jae
inc
mov
test
and
and
fcom
adc
add
call
fadd
fiadd
dec
int
stos
out
into
lods
cmps
cmp
and
rol
xchg
mov
pop
inc
cmp
or
mov
mov
scas
cmp
mov
and
pushf
xor
lods
xlat
dec
cmp
push
push
and
pushf
ss
cwde
mov
ds
adc
dec
int3
add
sub
pop
xchg
mov
enter
dec
sbb
jl
in
cmp
pop
ret
sbb
sbb
lds
(bad)
repz
mov
dec
push
repnz
lods
mov
push
mov
data16
das
repz
lods
jp
adc
inc
movs
inc
fwait
loopne
and
mov
sbb
sub
aaa
adc
pop
mov
mov
dec
inc
ficom
inc
or
test
xor
clc
je
cmps
call
ins
lods
pop
mov
clc
jmp
lds
cmp
in
jo
mul
out
movs
adc
sbb
sbb
imul
sub
jmp
dec
dec
or
call
enter
lock
sbb
fwait
dec
xlat
sbb
push
retf
pop
pusha
fdiv
js
pop
mov
xor
xchg
out
sbb
jnp
retf
lock
mov
ins
push
adc
xchg
mov
cmp
ror
pop
pushf
mov
(bad)
call
aad
les
dec
push
or
mov
fmul
jne
call
in
cmp
xchg
adc
lea
sahf
xchg
call
ret
add
out
aas
stos
stos
xchg
dec
mov
gs
and
bound
scas
mov
shl
out
lods
lock
xor
cmps
bound
or
paddsb
xor
push
xchg
sbb
inc
aas
ret
mov
sub
cmp
dec
(bad)
sahf
xor
sbb
stc
pusha
ret
xlat
hlt
mov
mov
out
jnp
dec
dec
iret
movs
sbb
cmp
jge
(bad)
inc
sub
pop
cmps
mov
jmp
xchg
retf
sahf
shr
jno
sub
cmp
mov
pop
leave
arpl
mul
(bad)
aaa
repz
push
adc
and
out
push
sub
xlat
mov
ja
sbb
js
jno
(bad)
fld
repnz
mov
scas
xchg
fbld
pop
mov
adc
(bad)
and
adc
mov
lahf
jle
sub
test
and
std
pop
cmc
nop
dec
nop
and
sahf
add
mov
call
fcmovne
mov
jge
add
jp
int
inc
xchg
jno
mov
ror
sbb
ja
sub
fbstp
int
sbb
xchg
fxch
(bad)
pop
mov
jmp
jmp
inc
shr
inc
scas
out
pop
mov
out
cmp
jbe
test
je
call
gs
sti
jmp
sbb
arpl
mov
movs
in
movs
sbb
sahf
add
nop
push
dec
sahf
mov
xchg
test
inc
and
mov
ds
xor
jnp
cmp
mov
pop
or
jmp
mov
cld
ins
iret
call
xchg
ret
push
pop
jae
loopne
mov
aaa
loopne
pop
les
mov
ret
pop
test
in
adc
mov
in
pop
mov
push
aad
popf
retf
imul
add
or
cmps
add
gs
ss
and
vpsubq
ja
call
mov
in
(bad)
in
pop
pop
es
sub
and
mov
lock
jge
add
repz
push
pop
pop
mov
jmp
jecxz
xchg
into
xor
aaa
outs
adc
sbb
or
inc
shl
call
xor
adc
inc
xor
xchg
mov
push
cmp
fisttp
mov
push
xor
add
imul
pmaxsw
and
sbb
xlat
sub
cmpxchg
lods
fdivr
xor
lods
(bad)
xlat
adc
inc
mov
push
test
pushf
pop
(bad)
ror
lods
dec
xor
fsubr
lock
add
std
cmp
sub
outs
sti
pop
xchg
leave
pop
or
push
scas
stos
dec
push
mov
call
mov
mov
adc
or
cmp
mov
retf
xor
add
test
mov
mov
aaa
or
jle
adc
int
mov
ins
sub
push
pop
std
push
sub
lods
sbb
nop
mov
data16
mov
retf
mov
aad
scas
aaa
pop
out
or
sbb
jb
lock
sub
jo
test
pop
out
cmps
mov
ror
xor
repnz
inc
adc
mov
jle
dec
call
dec
jmp
cmps
sbb
sub
call
fbstp
pop
pop
test
(bad)
cwde
loopne
sub
inc
loopne
inc
or
sahf
and
or
out
leave
enter
inc
mov
dec
lods
ror
lods
and
and
xor
mov
push
div
in
xchg
jno
pop
push
in
sbb
mov
pop
mov
fisub
adc
ret
aaa
jns
xor
in
scas
daa
push
xor
push
ins
inc
add
or
sub
inc
pop
inc
int
add
pop
jge
adc
mov
add
dec
sub
(bad)
fld
push
stos
les
mov
imul
cmp
(bad)
mov
push
into
xchg
inc
or
push
xchg
test
jmp
sub
aam
xchg
push
jg
fucomip
dec
test
mov
in
or
jmp
sbb
push
in
pop
inc
push
xor
pop
inc
out
jle
data16
call
movs
adc
std
push
jno
cli
or
pop
mov
lods
pop
pop
mov
sbb
xchg
ins
sub
jmp
ror
push
fistp
dec
mov
adc
ins
sbb
adc
stc
fisttp
fadd
call
or
or
loope
pop
pop
retf
js
icebp
imul
nop
sbb
xchg
mov
and
push
addr16
push
add
mov
jl
(bad)
addr16
mov
mov
fstp
inc
fild
outs
cdq
test
scas
scas
cmp
mov
retf
add
(bad)
sub
sub
dec
xor
aad
or
mov
rol
in
iret
push
icebp
xchg
shl
adc
mov
cmc
lea
outs
call
(bad)
int
sbb
mov
cld
mov
jae
cld
adc
or
mov
in
xor
daa
jmp
xor
aaa
add
dec
jle
pop
leave
mov
sbb
cwde
cmc
xchg
stos
xlat
add
jnp
pand
std
cmc
xor
xchg
movs
mov
mov
loop
ja
out
jnp
aas
add
xchg
pop
push
loope
shr
fisubr
loopne
sub
les
inc
mov
(bad)
icebp
in
retf
add
and
cwde
imul
into
or
retw
in
pop
xchg
mov
(bad)
rol
sbb
push
loopne
dec
sub
enter
and
push
cwde
sub
in
push
mov
jb
test
inc
dec
cdq
ins
pop
push
retf
out
in
jmp
cmps
sbb
and
or
push
aaa
dec
push
imul
das
lea
xor
jmp
(bad)
jl
sub
popf
jne
f2xm1
nop
mov
jbe
pop
fdivr
stc
xchg
add
pop
push
iret
adc
cmp
inc
jo
mov
inc
scas
loop
mov
sbb
sbb
or
xchg
pop
jns
sbb
mov
push
shl
(bad)
cmp
xlat
aam
pop
stos
aam
xor
imul
xchg
xchg
sbb
push
sbb
xchg
enter
inc
mov
cmp
sar
cdq
sub
nop
ret
into
pop
cmp
or
mov
pop
adc
sahf
mov
fstp
ja
movs
mov
dec
push
sbb
rol
mov
xchg
mov
mov
lahf
ss
add
lods
cmps
out
scas
inc
mov
fs
mov
mov
rol
and
mov
mov
cmc
js
xchg
dec
xchg
lods
(bad)
out
lahf
and
cmp
push
xchg
sbb
sub
repz
dec
sbb
sbb
adc
aad
ja
cmp
cmp
rcl
ror
lods
mov
in
pop
adc
mov
pop
mov
pop
push
push
mov
cdq
mov
and
loop
mov
int3
mov
jae
lea
scas
and
cmp
jecxz
bound
cmp
cwde
mov
stos
mov
(bad)
ret
aaa
jmp
mov
push
test
dec
clc
push
add
xchg
daa
out
mov
or
outs
sar
icebp
xchg
(bad)
push
clc
add
and
push
jmp
loopne
and
and
lea
cmp
jno
push
pop
inc
jbe
xchg
mov
push
push
paddusb
rcr
jmp
or
mov
mov
and
cmc
sti
mov
cwde
ss
xor
inc
add
xchg
(bad)
xchg
jl
pop
jae
adc
scas
sti
mov
push
push
aas
sub
fwait
push
adc
push
push
inc
sbb
mov
dec
xor
mov
outs
cmp
cli
imul
push
call
retf
mov
data16
jo
dec
std
jmp
cmp
out
(bad)
xchg
mov
xchg
jmp
xchg
test
sub
lock
mov
jne
add
lods
and
retf
cmps
inc
ds
(bad)
retf
push
jge
scas
xor
push
ins
outs
xchg
sbb
mov
xlat
inc
call
adc
pop
xchg
dec
inc
cmp
and
jae
mov
bound
(bad)
fild
pop
mov
mov
rcl
sbb
lea
cvtps2pd
fsubrp
out
popf
loop
outs
cmps
xchg
jae
push
movs
sbb
dec
or
push
nop
sub
jbe
call
ins
jno
mov
xchg
and
ins
and
mov
push
jecxz
fdivr
aad
xor
dec
mov
jmp
cmp
cld
aaa
jbe
gs
shl
rcl
out
xchg
push
loope
sub
test
enter
retf
sbb
dec
xor
adc
push
inc
xor
jl
mov
jmp
movs
or
pop
sub
cmp
mov
lea
jmp
movs
and
push
sar
adc
cmps
inc
sbb
int
adc
adc
adc
sub
sbb
fdiv
ins
sub
mov
fdivr
ins
outs
dec
fcom
jmp
adc
fst
fs
jge
call
xor
jae
popa
aas
jle
loopne
scas
call
ins
pushf
xor
loopne
repnz
sub
psubusw
adc
lods
add
mov
sbb
sbb
(bad)
test
jecxz
cmp
adc
or
fld
pop
dec
push
aam
mov
cs
sub
cmp
mov
(bad)
scas
jmp
cmp
fdivr
pop
push
cld
xchg
xchg
(bad)
mov
ins
movs
dec
fnstcw
mov
fadd
sub
and
push
(bad)
jge
movs
or
mov
add
sub
adc
stc
cmp
test
jnp
movs
and
lahf
jne
test
imul
cmps
push
dec
xor
cmps
jb
sar
(bad)
out
pop
push
gs
aad
sub
mov
nop
aam
xor
mov
adc
dec
and
addr16
add
ss
inc
pushf
adc
mov
sub
fwait
pop
shl
imul
scas
pop
pop
(bad)
in
jp
loop
inc
push
xor
push
lods
mov
or
push
retf
dec
sub
inc
(bad)
jle
sub
inc
jae
into
xchg
ret
jo
push
cmps
(bad)
adc
and
inc
enter
shl
popa
scas
mov
(bad)
je
jg
push
popf
(bad)
jmp
dec
into
jmp
rol
cs
leave
jmp
push
sub
push
fbstp
add
icebp
push
sbb
icebp
mov
retf
mov
out
rcl
sbb
inc
sub
and
cmps
neg
leave
cdq
stos
xlat
js
push
adc
xchg
dec
test
ins
xor
fadd
xchg
jmp
adc
or
inc
cmc
clc
aad
adc
mov
xor
dec
dec
mov
jns
ins
mov
addr16
or
pop
sbb
push
fabs
cdq
ins
popa
push
pop
jns
ins
inc
xchg
add
ficom
leave
dec
outs
out
xchg
mov
(bad)
sar
cmp
mov
fist
fnstsw
jg
jns
push
imul
rcr
mov
ins
fwait
stc
adc
adc
test
stos
push
movs
dec
dec
mov
xor
fwait
jle
adc
sub
xchg
mov
outs
jl
rcr
mov
add
lea
cs
cmp
movs
push
and
data16
pusha
and
fidivr
fild
push
loopne
std
push
jns
dec
je
push
popf
nop
cmp
sub
mov
mov
clc
out
arpl
push
fld
retf
mov
loop
mov
and
shl
(bad)
xchg
lds
fadd
mov
pop
leave
aas
in
jb
sub
cmp
je
adc
dec
pop
call
out
mov
arpl
sahf
daa
add
push
mov
int
inc
push
xor
mov
dec
popa
mov
jmp
clc
pop
mov
imul
repnz
add
pusha
lods
inc
pop
arpl
xor
ds
call
push
mov
clc
iret
cmp
retf
pop
neg
divps
and
pop
jmp
pop
movs
pop
cdq
dec
arpl
adc
add
cmp
push
in
adc
ss
fidivr
retf
xchg
daa
mov
cli
and
ror
outs
jo
xor
iret
sub
sbb
pop
sti
dec
aas
test
movs
jp
fwait
inc
sbb
leave
fst
xor
(bad)
cmp
cmps
add
hlt
pop
(bad)
fisubr
xor
xchg
inc
mov
pop
xor
mov
or
jle
xchg
lock
jae
add
inc
mov
jle
scas
jp
js
lds
sbb
femms
adc
stos
call
fbstp
bswap
int
push
icebp
adc
xor
push
jno
daa
pop
jnp
mov
lds
dec
adc
test
jbe
out
jo
out
xchg
dec
(bad)
mov
or
ins
movs
stos
leave
mov
cmp
les
and
adc
adc
push
sete
jp
es
push
dec
and
addr16
pop
dec
movs
mov
mov
clc
lea
push
movs
fwait
mov
jne
scas
sbb
lods
pop
dec
retf
(bad)
hlt
and
test
adc
lea
addr16
or
push
je
ss
jae
js
cld
xchg
pushf
(bad)
and
aaa
adc
adc
shl
sbb
out
xchg
repz
(bad)
xor
jmp
dec
bound
int3
mov
cmp
sub
mov
mov
pop
inc
add
sbb
sar
cld
and
icebp
xor
aas
fstp
fstp
xchg
xchg
xchg
cld
cmps
out
lahf
int3
test
loop
outs
scas
cmp
(bad)
adc
fnstcw
jmp
in
mov
cmp
mov
aas
jl
mov
jmp
jnp
pop
out
dec
inc
mov
xchg
aas
jne
and
ret
repz
fcomp
ins
out
and
je
xchg
cs
jb
pushf
mov
xchg
dec
mov
xor
pop
arpl
mov
das
dec
stc
call
stc
fcmovnb
jno
push
cmp
mov
adc
hlt
xor
inc
or
mov
push
xor
mov
bound
pop
js
sbb
sar
or
mov
outs
imul
ret
sub
dec
fist
jg
cdq
fisubr
ret
fs
mov
sbb
mov
xor
mov
xchg
inc
fmul
add
adc
ficomp
into
dec
jle
jbe
inc
leave
cld
rol
mov
jge
retf
lock
adc
adc
xchg
pop
out
inc
dec
in
pop
mov
outs
in
jg
and
or
jg
mov
imul
add
push
stos
das
sub
sbb
xchg
gs
jp
test
ret
jnp
push
mov
aas
adc
cmp
push
adc
dec
lock
scas
push
sbb
push
dec
mov
dec
call
dec
mov
dec
sub
pusha
or
loope
scas
pop
jno
test
dec
mov
(bad)
hlt
ja
fisttp
lds
adc
ror
xadd
mov
push
stos
push
loopne
pop
in
(bad)
xlat
cmp
sbb
mov
daa
or
daa
and
fsubr
dec
imul
out
icebp
xlat
scas
add
xchg
loop
jp
clc
shl
jl
pushf
inc
pop
sahf
push
ret
rol
sub
or
sbb
pop
mov
scas
emms
cs
jg
push
mov
cmp
and
cmps
sti
add
nop
xor
mov
jbe
pushf
and
sbb
xchg
adc
jg
jl
push
jg
xchg
ficom
stos
repz
retf
xor
ss
and
lock
jae
cmp
sub
mov
or
fcmovne
sub
jnp
cmp
sbb
test
pop
loopne
mov
and
pop
ins
mov
and
xor
sub
pop
dec
sbb
add
movs
xchg
pop
popf
imul
mov
fmulp
lahf
xor
xor
and
clc
xor
cmps
push
mov
push
mov
rcr
bound
add
repz
adc
adc
gs
aam
mov
imul
arpl
imul
icebp
cmp
(bad)
call
add
cld
arpl
jecxz
push
push
ss
call
cwde
push
dec
iret
clc
cmp
and
xor
cmps
js
or
imul
outs
outs
out
push
adc
neg
out
push
mov
mov
adc
inc
ss
mov
jne
push
pop
in
adc
or
push
dec
int
repz
jne
mov
pop
jmp
mov
pusha
and
push
mul
leave
xor
popa
mov
shl
call
int3
and
cmp
stos
rol
sbb
push
test
out
mov
out
pop
xor
lock
inc
rol
cmp
cmp
jo
inc
mov
popa
mov
jmp
mov
or
scas
or
mov
inc
push
inc
xlat
jo
icebp
push
pusha
pop
rcr
jno
rol
mov
outs
fidiv
dec
push
dec
in
jmp
cdq
call
jnp
mov
pop
adc
pop
popa
loop
fist
sar
push
lock
cwde
jns
lock
xchg
inc
jp
(bad)
jnp
cmp
cmp
or
push
imul
and
sbb
push
inc
pushf
sub
add
lock
cs
outs
inc
ret
pop
ret
repz
dec
retf
call
mov
in
sti
(bad)
jns
test
out
ret
dec
test
les
xchg
pushf
or
xchg
or
xchg
add
test
fld
fsub
retf
fld
inc
push
add
fst
jbe
jno
pop
pusha
fidiv
mov
sub
mov
xchg
rol
push
rcl
jbe
fld
test
and
out
mov
fsubr
fild
xchg
mov
fs
xchg
sti
call
inc
jecxz
(bad)
imul
xchg
pop
shl
icebp
aam
sar
mov
push
xor
push
sbb
push
lock
inc
mov
push
jmp
dec
cmp
pop
(bad)
ds
test
add
adc
add
into
inc
mov
or
cmp
(bad)
clc
movs
cmp
(bad)
pop
dec
sbb
ficomp
shl
or
and
inc
or
ret
es
fs
jae
test
and
xor
shl
gs
inc
and
mov
cmps
shl
retf
shl
push
out
mov
stos
iret
jmp
inc
fidiv
and
xlat
jbe
mul
sub
pop
test
pop
hlt
pop
stos
fsub
xor
into
in
fadd
xor
outs
out
nop
lea
jb
push
(bad)
aam
add
push
inc
(bad)
cmp
pop
daa
call
adc
imul
test
outs
jb
pop
xor
and
and
cmc
into
inc
fdivr
outs
ins
and
lods
aaa
push
ja
add
pop
xchg
push
sub
push
push
arpl
mov
mov
dec
jo
hlt
cmps
and
std
out
mov
mov
icebp
in
push
add
dec
js
fld
sub
mov
adc
inc
mov
retf
jns
cwde
pop
xor
xor
sbb
ret
sar
cmp
sbb
push
jp
adc
outs
stc
iret
cdq
fild
fdecstp
lods
xor
sbb
push
out
push
shl
ret
mov
jbe
dec
jmp
adc
push
jno
sbb
mov
pop
out
push
xchg
aam
bound
xor
pusha
sub
dec
push
(bad)
pop
xor
out
iret
add
gs
mov
cwde
or
xchg
and
mov
xor
int3
xchg
jo
iret
mov
pop
mov
jge
pop
sbb
es
nop
std
or
cmc
push
xchg
mov
xchg
add
add
sahf
daa
push
inc
(bad)
jnp
cdq
mov
sub
sbb
xor
pop
clc
inc
retf
call
xchg
imul
cmc
cwde
xor
out
push
xor
pop
adc
cmp
lods
mov
stos
outs
mov
fsincos
mov
xchg
shl
xchg
and
lods
in
dec
dec
pop
pop
retf
push
fimul
xchg
stc
or
lock
add
sbb
aad
sub
jmp
adc
cmp
pop
or
jmp
mov
add
add
fild
shl
mov
xchg
fisub
inc
cwde
pop
jl
in
add
cmp
adc
push
into
xor
in
xchg
xor
push
and
mov
pop
cmp
jecxz
mov
pop
(bad)
xchg
loop
call
or
add
movs
inc
mov
jge
enter
or
outs
mov
in
xlat
dec
hlt
(bad)
hlt
test
adc
imul
cld
jnp
fcom
mov
dec
scas
mov
xor
std
or
mul
mov
adc
(bad)
cs
pop
hlt
nop
mov
and
sar
stos
dec
add
mov
inc
inc
jg
inc
cmp
jno
mov
add
jmp
ret
not
mov
pop
je
or
repz
hlt
xor
jb
mov
inc
dec
inc
xchg
mov
mov
and
ins
outs
es
push
mov
lock
jle
fimul
out
xor
call
jmp
inc
mov
jl
retf
sbb
dec
push
cmp
fbstp
retf
mov
xchg
xchg
sahf
sbb
mov
jl
dec
retf
add
mov
jmp
sub
cwde
repnz
nop
int3
push
pop
fild
les
(bad)
in
adc
and
(bad)
dec
inc
les
xchg
cmc
push
jg
sub
stos
cmp
jp
sub
hlt
push
mov
sahf
shl
inc
jnp
test
ss
ret
xchg
jns
mov
push
mov
mov
sub
xchg
xchg
ret
jno
inc
cld
movhps
jle
mov
jecxz
adc
cmp
sbb
mul
sbb
fisub
fisub
into
push
das
(bad)
mov
push
cli
mov
sub
mov
mov
jne
ins
jmp
out
int
(bad)
jmp
ret
(bad)
rcr
pushf
xchg
ret
outs
mov
cmp
pop
ins
out
fnstcw
sbb
mov
jp
cs
xchg
inc
in
shl
push
inc
dec
adc
sbb
hlt
sbb
push
or
into
mov
stc
adc
dec
ss
jb
lds
pop
ja
pop
addr16
and
mov
jge
jmp
mov
and
sub
in
daa
pop
mov
jecxz
xor
out
inc
jne
mov
and
ret
repz
mov
dec
ins
inc
call
je
int
popf
mov
sar
nop
jecxz
or
add
loope
std
push
dec
lahf
sbb
mov
push
in
test
xchg
or
and
inc
aaa
jl
xor
cmp
pop
repnz
fidivr
sub
aas
mov
popa
inc
jge
daa
idiv
jns
retf
das
fwait
sahf
and
sbb
leave
sub
push
stos
mov
out
adc
je
lea
and
out
sar
test
xor
or
imul
test
movs
mul
xchg
dec
rcl
sar
in
ins
fistp
out
(bad)
mov
cmp
out
add
(bad)
jecxz
or
rcl
adc
cmps
xor
jmp
call
out
rcl
pop
push
call
out
stc
nop
dec
push
mov
sub
dec
mov
mov
movs
out
and
aas
aas
jne
pop
jp
mov
jnp
rcr
mov
jg
xor
fld
sub
and
ret
je
xor
mov
(bad)
jnp
sub
cmp
lea
pop
xchg
pop
jecxz
jp
ficomp
into
cmps
outs
xchg
mov
fwait
es
and
mov
push
ins
mov
mov
pushf
pop
xor
inc
mov
pop
mov
data16
enter
sar
dec
mov
mov
jmp
stc
adc
(bad)
aaa
(bad)
aas
jecxz
data16
pop
mov
add
(bad)
mov
jae
add
cmp
and
fnstsw
sbb
jge
mov
jmp
cmp
shr
stc
pop
outs
push
inc
push
retf
data16
in
shl
arpl
cdq
sub
leave
hlt
bnd
mov
loop
jo
sub
mov
sar
mov
xor
pop
lea
inc
push
dec
movs
fcomp
test
jno
push
xlat
mov
lea
xor
test
xor
sbb
mov
icebp
cmp
pop
adc
pop
ror
repnz
shl
mov
aas
mov
xor
pop
jno
popf
dec
bnd
mov
sbb
cld
mov
and
les
pusha
mov
mov
xor
dec
cmp
retf
pop
outs
xor
inc
cs
jle
dec
enter
xchg
mov
push
sub
jb
test
out
push
inc
and
fucom
push
rol
fcos
or
or
adc
js
pop
(bad)
hlt
out
jg
ins
sub
sub
mov
adc
xchg
lock
push
push
cs
push
retf
out
out
test
(bad)
pop
loope
das
lods
sahf
fwait
push
test
stos
and
nop
mov
push
(bad)
push
enter
and
call
cli
jg
inc
(bad)
movs
lods
shl
test
mov
push
retf
mov
std
or
loope
rcl
stos
scas
mov
mov
mov
das
(bad)
mov
daa
inc
icebp
dec
rcl
fs
js
loopne
shl
xchg
lock
loopne
mov
sub
es
jg
jmp
lods
fs
sahf
outs
stc
movs
popa
loopne
push
jo
cmps
inc
cld
jno
sbb
and
fdiv
je
cld
pop
fcmove
sub
pushf
cmp
or
mov
jns
mov
jns
test
or
jg
repnz
and
xor
cmps
push
int
dec
aad
xchg
aad
sbb
pop
pop
mov
add
push
xor
loopne
shr
jne
mov
inc
xor
repz
jbe
mov
test
lds
fwait
push
retf
fadd
xchg
sub
inc
sar
jecxz
popa
push
adc
out
repz
or
pop
mov
inc
pop
movs
push
and
stos
outs
pop
dec
jbe
cmp
sbb
pop
scas
loop
pop
(bad)
(bad)
mov
add
test
xacquire
cmp
nop
aam
iret
xor
mov
dec
daa
jmp
jmp
out
movs
leave
jbe
fist
mov
sbb
push
sbb
push
nop
adc
jmp
pusha
or
mov
jae
xor
gs
xor
inc
dec
fld
stc
jle
fcomp
and
call
adc
(bad)
jecxz
out
ins
mov
sbb
mov
sub
xor
retf
arpl
adc
retf
push
mov
mov
loop
jl
sub
inc
fidiv
icebp
gs
jge
stos
nop
jnp
loope
and
xchg
icebp
jmp
loopne
mov
jl
loopne
jg
or
xor
call
movs
xchg
push
push
add
(bad)
inc
(bad)
sub
sub
imul
cmp
test
cmp
fwait
sub
inc
mov
aas
xor
cmp
je
retf
out
into
jo
adc
lods
or
sub
loope
popf
sub
adc
ds
and
xor
js
test
cld
xchg
call
xor
or
push
sbb
pop
sbb
mov
ret
std
jno
cld
dec
vdivsd
addr16
jno
gs
and
pop
push
mov
pop
mov
scas
fist
add
enter
push
sub
(bad)
cli
xchg
bound
push
push
loopne
mov
xlat
fucomp
mov
mov
pushf
mov
xor
rcl
movs
push
jmp
mov
fldenv
xchg
mov
scas
pusha
pop
dec
loope
and
jge
fadd
shl
stos
or
and
nop
cmp
inc
ins
mov
pusha
mov
sbb
push
pop
(bad)
sbb
dec
sbb
retf
xlat
shr
cmp
out
jae
xchg
or
pop
les
(bad)
sbb
mov
mov
idiv
xchg
lahf
push
xlat
jl
pop
or
scas
call
and
mov
jns
cdq
sar
stc
jp
xor
stos
xor
dec
jecxz
mov
inc
add
xchg
mov
das
pop
sub
and
stos
je
dec
(bad)
rcl
mov
adc
loop
cli
mov
mov
jmp
rcl
xchg
or
and
call
adc
sahf
push
stc
imul
movs
jg
pop
or
and
rcr
jmp
mov
je
or
(bad)
dec
xchg
push
rol
push
popa
aam
push
inc
pop
jb
aaa
and
mov
and
mov
lea
dec
dec
popa
mov
pop
ds
cmp
fwait
jb
jnp
mov
popf
or
xchg
leave
popf
in
mov
scas
sbb
data16
mov
ja
das
jmp
mov
les
mov
bound
inc
ret
in
adc
push
jl
test
jb
xor
xchg
int3
xor
xchg
fst
cli
ret
push
sub
add
inc
fwait
cdq
clc
push
ror
(bad)
fdiv
inc
pop
jno
neg
pop
jno
daa
cmc
out
shl
bound
test
or
cmp
or
shl
jp
xchg
jg
outs
out
sub
movs
cmp
repnz
(bad)
sbb
push
call
in
pop
out
mov
mov
and
push
add
push
sub
sub
pop
(bad)
in
cmc
in
xor
jb
retf
sbb
lods
gs
ret
or
xchg
jns
data16
loopne
loopne
loopne
ficomp
mov
xor
inc
ins
mov
imul
lea
arpl
data16
xor
(bad)
sub
xor
in
std
mov
pop
inc
jne
(bad)
pop
dec
fild
out
xlat
or
ins
jecxz
outs
pop
lods
scas
xchg
gs
mul
sub
cmp
push
xchg
xchg
mov
loop
and
pop
jg
loopne
loopne
ret
in
test
cli
sub
cmp
popa
add
jmp
fs
jmp
imul
lahf
mov
sbb
mov
int
push
test
or
arpl
jecxz
push
loop
add
fmul
cli
ja
xchg
and
pop
or
clc
(bad)
cdq
and
cld
lea
jmp
mov
xchg
pusha
or
adc
pop
xor
enter
lock
pop
cmp
mov
aad
mov
lea
int
pi2fw
mov
sub
fcom
bound
push
sbb
cdq
ja
mov
popa
pop
das
mov
mov
inc
and
or
retf
pop
fdiv
jo
out
mov
cmp
call
int
jnp
cld
mov
or
rcr
call
adc
inc
pusha
mov
int3
or
push
in
cmp
repnz
mov
mov
fidiv
retf
lahf
nop
popa
dec
pushf
ret
pop
pop
push
and
pop
pop
pusha
push
mov
adc
sbb
adc
fwait
stos
mov
sar
xor
xor
push
jmp
clc
mov
adc
das
cmps
int3
mov
cmp
sbb
xchg
idiv
sbb
int
xor
ins
das
sub
clc
mov
(bad)
scas
mov
cmps
mov
ins
je
dec
xor
mov
gs
or
imul
mov
adc
je
movs
xor
sub
push
mov
dec
fiadd
enter
inc
pop
loope
cmp
dec
add
or
push
pop
sbb
ret
sub
fwait
out
aam
test
nop
fbld
rcl
and
mov
add
inc
repz
lea
hlt
jne
inc
dec
leave
popa
or
lods
outs
jl
std
pop
push
pop
sub
cmp
xor
and
and
and
mov
jns
test
fs
test
push
fstp
pop
add
pop
sub
xchg
icebp
lods
fdiv
nop
les
sub
adc
mov
mov
push
sbb
mov
rol
adc
shl
fsubp
cmps
cwde
adc
(bad)
fistp
iret
jmp
ror
push
movs
inc
sbb
mov
xchg
jmp
mov
dec
jmp
fadd
psubd
mov
(bad)
mov
call
sti
ja
test
sbb
pop
add
test
je
ret
stc
xchg
jb
pop
test
add
mov
repnz
mov
mov
data16
not
lahf
jbe
mov
jecxz
or
dec
sahf
dec
mov
inc
dec
adc
sbb
call
pushf
lods
in
adc
sti
loop
addr16
mov
and
xchg
push
je
xlat
xor
mov
push
or
inc
push
lds
je
loope
jnp
shl
pop
mov
sbb
rcl
or
sub
mov
mov
into
lock
repnz
sub
enter
xchg
mov
scas
das
push
push
ja
in
lea
xchg
mov
xor
retf
es
in
adc
push
xchg
xchg
ret
pop
(bad)
cmps
popf
lea
xor
in
or
push
jb
dec
pop
hlt
stos
mov
js
pop
hlt
mov
dec
xlat
mov
sbb
pushf
inc
or
ret
pop
idiv
jb
stos
adc
fdivr
adc
jns
popa
mov
cli
jp
repz
or
test
xor
xor
stos
jbe
xchg
jecxz
mov
jmp
push
inc
mov
lock
out
mov
lds
mov
jae
inc
in
dec
cmp
sbb
imul
(bad)
and
mov
cs
out
fnstsw
mov
jecxz
cmps
adc
fistp
mov
adc
jb
es
fs
sub
cmp
bound
gs
pop
or
mov
in
ins
cld
in
out
loop
mov
int
push
ds
(bad)
in
icebp
in
dec
pop
popa
pop
pop
fisub
xor
adc
or
mov
pop
in
sub
enter
pop
xor
fwait
clc
pop
inc
add
push
mov
rcr
mov
(bad)
fbld
mov
iret
pop
test
lahf
and
lea
enter
mov
mov
sti
mov
jbe
add
sbb
sbb
inc
rcl
pop
adc
push
bound
dec
jle
cmc
xor
aas
(bad)
scas
fbstp
and
mov
xor
test
dec
mov
inc
fwait
es
std
and
fwait
iret
lods
(bad)
mov
xchg
aad
xor
xor
lods
movd
test
sahf
ret
push
(bad)
adc
cmp
in
pop
test
dec
adc
sub
mov
sub
xor
ret
ins
dec
push
mov
jnp
xchg
and
xor
(bad)
jmp
call
mov
shr
stc
repnz
dec
cmps
sub
ret
inc
cdq
mov
jge
(bad)
aam
aad
icebp
xor
sbb
sbb
js
(bad)
adc
adc
push
xor
frstor
sbb
lods
adc
mov
fs
pop
les
cld
or
inc
add
sbb
clc
(bad)
jmp
and
sbb
loop
cld
cmp
scas
in
clc
pop
pop
cmps
jae
test
stc
push
xor
and
cmp
imul
push
push
adc
push
mov
loope
mov
cmps
retf
mov
sub
gs
or
int
lods
mov
mov
test
into
pop
sar
dec
cmp
(bad)
cmps
xchg
sbb
mov
mov
movs
cmps
(bad)
cmp
hlt
ins
clc
cmp
(bad)
js
push
sti
shl
pcmpeqw
sub
push
test
aaa
sbb
xchg
pop
cmp
xchg
push
sub
into
imul
add
xchg
sub
in
sbb
fs
aas
cmp
loop
pushf
lock
sub
cmc
lods
pushf
fild
mov
adc
sub
cwde
cmp
fsub
ret
aad
mov
ror
stos
aaa
inc
mov
nop
fcmove
xor
cli
push
xor
add
das
pushf
stos
jmp
shl
xchg
mov
jg
cmc
imul
pop
mov
outs
stos
inc
sahf
clc
mov
inc
mov
mov
aaa
out
push
popa
aam
push
xor
fwait
xchg
pop
or
mov
(bad)
fidivr
sub
or
(bad)
inc
ins
popa
pop
into
fmul
sbb
jmp
imul
daa
pushf
inc
push
lea
neg
popa
push
aaa
mov
ficomp
pop
xor
cmc
(bad)
or
(bad)
xor
xchg
adc
xchg
out
pop
dec
push
push
clc
push
imul
lods
hlt
gs
add
cli
(bad)
mov
jge
shl
push
out
aas
out
arpl
and
or
mov
mov
and
popa
or
cmp
in
lods
push
pop
or
std
loop
inc
mov
jge
dec
add
cmp
call
dec
test
imul
push
adc
xchg
xchg
cmp
sub
jbe
cdq
bound
fidivr
sub
add
and
pop
or
std
xchg
push
jo
pop
je
xor
icebp
dec
shl
pop
mov
mov
imul
(bad)
rep
cmps
xor
pop
sar
aaa
mov
fnstenv
ficomp
mov
enter
adc
inc
ds
cmp
mov
and
or
bound
test
sti
inc
frstor
xor
inc
adc
fdivr
dec
inc
int
cdq
sub
push
cmp
add
sbb
cmp
dec
cmc
xlat
loopne
adc
(bad)
imul
imul
rcr
leave
dec
or
lea
xchg
add
adc
cmp
xchg
mov
or
inc
inc
cli
dec
xor
jb
mov
dec
adc
mov
(bad)
loop
mov
or
pop
xor
rcl
sub
mov
mov
dec
sub
pop
das
enter
jns
add
lea
nop
adc
in
lea
jge
sub
jecxz
mov
out
sbb
mov
pop
mov
test
mov
inc
dec
out
pusha
push
inc
(bad)
jmp
adc
mov
pop
std
cwde
out
out
(bad)
je
aas
ret
mov
jno
xchg
mov
arpl
lds
push
mov
call
fldl2e
mov
add
sti
pop
mov
pop
cmp
adc
inc
sti
and
into
cmps
cmp
bound
mov
nop
or
fdiv
nop
dec
cmp
and
call
int3
dec
sbb
dec
add
div
out
adc
in
jne
xor
pop
cwde
cld
cmp
adc
imul
xchg
cmp
mov
xchg
inc
aad
aam
mov
call
pop
mov
inc
fwait
mov
enter
jp
mov
push
ss
jge
scas
jmp
mov
jmp
jmp
mov
push
rol
mov
inc
(bad)
in
ss
call
sbb
xchg
gs
fisttp
ror
mov
mov
ror
xor
jo
int3
cmc
mov
aam
clc
xchg
in
jno
aad
jmp
dec
jno
jecxz
mov
out
(bad)
dec
loope
mul
mov
aad
shr
mov
push
pop
aad
bound
pushf
mov
loop
retf
cmp
loope
pop
mov
fadd
scas
sbb
test
push
adc
sbb
mov
stos
mov
daa
dec
dec
cmps
sub
cdq
mov
pushf
cdq
jle
gs
add
dec
popf
jmp
repnz
inc
dec
xor
iret
cdq
nop
(bad)
ficomp
imul
and
(bad)
mov
push
stos
out
adc
in
outs
ins
pop
hlt
out
aam
fiadd
(bad)
imul
icebp
pop
lods
xchg
xor
push
test
sub
and
sub
and
ret
ret
cwde
pop
sbb
clc
add
nop
fdivrp
sbb
jo
mov
outs
sbb
jg
jmp
mov
or
xchg
and
sbb
or
sbb
lahf
push
sbb
jecxz
mov
dec
mov
pop
cmp
pop
aad
ss
push
mov
and
ror
aam
mov
and
jae
cmps
aas
pop
sbb
inc
cmp
cwde
mov
mov
mov
loop
retf
leave
pop
dec
stos
push
and
xchg
inc
dec
push
and
adc
imul
sahf
mov
movs
mov
leave
scas
xor
lods
fwait
adc
repz
(bad)
int
lods
sub
mov
ret
call
jle
inc
mov
bound
ds
aaa
fdivr
push
jo
movs
adc
cs
mov
sbb
ins
test
enter
push
mov
loopne
inc
push
retf
sub
mov
and
leave
lahf
cs
dec
fs
outs
sti
or
out
add
push
and
sti
jne
pop
inc
shl
out
addr16
mov
int
test
imul
mov
aam
hlt
rol
dec
std
xor
push
retf
and
mov
dec
sbb
dec
dec
pusha
cmps
ret
iret
sbb
lds
(bad)
out
movs
mov
sar
in
test
call
sbb
mov
sub
lock
sahf
xchg
(bad)
dec
(bad)
and
push
data16
imul
xchg
test
jmp
test
xchg
dec
sub
cmp
pushf
aam
sti
hlt
mov
dec
mov
inc
fmul
xor
cwde
lock
cmp
sar
jns
cld
sbb
sti
movs
sub
shl
repnz
push
pop
mov
ins
and
mov
sub
lock
push
aad
ds
xchg
shr
(bad)
popa
(bad)
push
sahf
cli
daa
or
adc
das
jb
call
test
clc
pushf
dec
pmaxub
call
mov
gs
retf
cmps
sbb
loopne
test
icebp
cmp
gs
retf
js
xor
arpl
adc
mov
adc
(bad)
shr
push
and
xchg
cmc
sahf
and
in
shl
movs
jae
nop
js
push
push
out
and
mov
pop
cld
ja
scas
cmp
fcom
mov
sbb
xor
mov
xchg
dec
push
das
inc
or
sbb
sub
pop
stc
retf
add
mov
sub
xchg
mov
fnsave
mov
lds
add
mov
push
(bad)
mov
push
inc
aaa
adc
push
add
les
fwait
lahf
mov
mov
sbb
add
pop
pop
dec
mov
je
inc
mov
sub
lock
pop
lods
out
shr
je
fld
jmp
xor
fisub
dec
sub
add
aad
push
(bad)
lods
dec
push
dec
mov
mov
sub
mov
xchg
out
add
cdq
test
dec
stos
inc
ss
mov
cmc
jecxz
(bad)
and
adc
xchg
sub
xor
push
outs
loope
mov
int
push
push
repnz
out
pusha
aad
or
outs
pop
inc
hlt
test
rep
aaa
xchg
xor
fwait
outs
popa
(bad)
mov
sub
sti
and
xchg
clc
push
call
push
add
pop
xchg
ins
mov
mov
jmp
ret
and
cdq
scas
neg
jns
xchg
aad
cmp
adc
stos
push
xchg
lahf
shl
lods
inc
fwait
loop
data16
fldl2t
jg
push
fst
xor
sub
ret
push
or
retf
sti
dec
jmp
in
inc
bound
adc
or
ins
movs
mov
inc
push
and
fldcw
or
xchg
and
loop
enter
ds
pop
mov
hlt
xchg
pop
dec
mov
(bad)
sbb
dec
add
out
in
ret
xchg
dec
ds
cmps
sub
lahf
dec
sub
mov
cmp
and
cld
scas
or
and
fcmovnbe
pop
xchg
ficom
in
aam
dec
cwde
cs
push
fld
cmp
push
ror
add
sbb
or
popf
enter
stos
cmp
scas
dec
mov
pop
mov
add
mov
jno
lds
call
iret
fstp
out
cld
mov
push
movs
scas
mov
jg
ds
xchg
cmc
test
jecxz
xlat
pop
lods
ja
mov
push
(bad)
scas
imul
sub
inc
jmp
sahf
xlat
pop
fst
les
jne
jl
pop
hlt
cmps
(bad)
fisubr
adc
cmp
ins
js
and
and
test
(bad)
cmp
cmp
repz
call
mov
gs
out
xor
es
push
dec
or
sti
icebp
out
xchg
fnstcw
push
inc
nop
and
push
shr
cmps
icebp
jbe
dec
push
dec
adc
es
or
int3
je
repz
adc
(bad)
test
cmp
aas
clc
pop
ficomp
cmp
xor
push
fistp
add
pusha
(bad)
dec
push
jne
std
jno
and
push
cmp
movs
(bad)
loope
jmp
jbe
pop
inc
les
sbb
dec
push
repnz
xchg
mov
sub
push
jecxz
sbb
xchg
or
add
mov
out
shl
pop
jecxz
sbb
stos
popf
dec
stos
or
fadd
pop
add
inc
cld
aad
jle
repnz
cdq
cli
out
fcmovne
arpl
jl
enter
push
popf
ret
and
(bad)
fld
push
adc
mov
mov
inc
(bad)
lds
enter
xchg
imul
int
mov
in
xchg
sbb
pop
mov
adc
sbb
stos
in
addr16
test
loope
jl
cmp
lea
mov
cli
push
jnp
inc
nop
sbb
loop
inc
dec
mov
(bad)
or
push
movs
(bad)
xchg
je
mov
out
loope
jo
retf
cmp
in
aam
nop
pop
or
pushf
(bad)
hlt
inc
add
arpl
test
pusha
add
jp
data16
mov
adc
pop
bt
enter
and
xchg
retf
xchg
xchg
pop
lahf
popf
adc
xor
shr
into
retf
stos
push
mov
mov
aas
bnd
sbb
adc
jmp
push
mov
fdiv
scas
stos
jg
movs
sbb
rcr
in
push
in
inc
loopne
sub
ret
sub
call
jge
pushf
or
out
and
mov
push
jae
test
mov
jae
push
fmul
push
mov
test
and
or
test
cmps
mov
rol
dec
xchg
repz
js
cmps
(bad)
or
add
icebp
xor
js
cmps
mov
sbb
in
cs
dec
ja
push
cmp
clc
dec
div
xchg
xchg
mov
pop
lds
shl
movs
inc
sub
inc
repz
ret
cwde
or
dec
and
sahf
pop
inc
in
xor
and
fwait
jmp
cli
fbstp
cmp
scas
mov
not
ror
inc
jmp
cmp
mov
sub
jp
and
aas
call
lea
test
into
mov
pop
mov
outs
xor
pop
and
pusha
add
mov
clc
mov
mov
enter
mov
mov
add
icebp
idiv
mov
je
dec
cmp
lea
into
sub
mov
clc
and
add
mov
pop
outs
lods
dec
ja
test
pop
rcr
sbb
dec
ffreep
push
addr16
cmps
xchg
xor
or
pop
call
jp
movs
sti
rcr
mov
push
push
fcmovnb
push
bsf
adc
(bad)
clc
mov
add
push
jo
mov
ror
xor
pop
push
mov
(bad)
jnp
or
adc
dec
sub
outs
inc
lods
cs
rcl
adc
in
pusha
out
shl
stos
jle
cmps
xchg
jecxz
xor
adc
cwde
retf
pop
(bad)
lea
xor
add
push
inc
das
adc
adc
rcl
and
push
sub
add
std
outs
and
adc
cli
ins
pop
int
scas
jno
(bad)
or
popa
push
mov
inc
push
push
mov
add
(bad)
scas
clc
jl
inc
xor
jmp
sub
loope
dec
fistp
stos
in
or
bound
mov
adc
push
sub
dec
jle
test
jno
ds
clc
js
dec
hlt
push
retf
sahf
xchg
inc
(bad)
jb
call
mov
movs
std
(bad)
push
not
into
enter
adc
lea
jae
jle
jnp
or
int3
jne
popf
jb
dec
jmp
(bad)
pop
loopne
and
jae
fwait
pop
fiadd
rcl
std
int3
mov
adc
test
fscale
cmp
ins
outs
sub
shl
mov
dec
xor
jae
inc
in
in
(bad)
jne
push
or
das
sbb
ror
and
dec
cmps
pop
lods
push
pop
pop
push
pop
ja
(bad)
mov
and
in
loopne
mov
sub
hlt
fwait
in
inc
adc
mov
sbb
or
int3
sub
ret
(bad)
mov
jns
jmp
outs
mov
fisub
popf
and
repz
xchg
cmp
or
and
frstor
dec
cli
dec
sbb
aas
lods
mov
sbb
dec
adc
push
das
sub
mov
inc
cmp
push
jb
pop
sub
and
adc
dec
test
mov
and
xor
or
sahf
and
imul
js
or
sbb
call
(bad)
fadd
into
nop
shl
jns
vphaddwd
mov
int
fstp
or
mov
sub
loope
ror
mov
jmp
sahf
aam
retf
sar
fild
pop
in
jmp
in
jg
inc
fild
scas
pop
xlat
sar
out
xor
aam
fwait
xchg
adc
cmp
or
sbb
aaa
jmp
retf
pop
call
imul
out
push
cs
sbb
(bad)
pop
popa
mov
mov
(bad)
push
mov
inc
xchg
js
mov
push
daa
fstp
add
push
mov
push
or
shl
pop
cmc
inc
sub
add
stc
push
push
fdiv
icebp
sbb
(bad)
adc
and
ret
push
add
ins
sub
jmp
ds
inc
das
inc
mov
shl
sub
xor
push
movs
push
into
mov
cmp
out
xor
aad
cmps
inc
xchg
cmp
outs
rcr
dec
ins
adc
ret
fld
stos
outs
adc
xor
ins
sub
stos
add
xchg
test
sub
xor
mov
mov
push
scas
shl
mov
aas
and
cli
aam
xchg
mov
sub
mov
dec
out
arpl
pop
popf
xchg
xchg
jno
xlat
dec
dec
fisubr
adc
xchg
pop
add
xchg
stos
push
cli
push
psubsw
push
jge
outs
or
ins
jl
nop
mov
test
sub
aam
stos
ja
cmc
outs
out
dec
lock
adc
jle
js
pop
sbb
scas
or
mov
add
pop
in
or
and
fst
lods
arpl
ds
lods
sti
mov
adc
loope
mov
inc
test
inc
inc
call
jbe
(bad)
sub
pop
xor
popa
je
popa
or
mov
jl
mov
jp
mov
aaa
dec
enter
pop
mov
ror
dec
jbe
xor
and
lods
vpshlq
pop
push
mov
int
sbb
lahf
cld
shl
sbb
loop
iret
inc
sbb
imul
stc
mov
jg
add
sbb
push
call
mov
xor
mov
xchg
(bad)
jp
scas
jo
imul
cmps
add
jmp
xchg
imul
xchg
cmps
jno
movs
mov
mov
push
jp
or
dec
(bad)
mov
retf
and
ret
xor
add
inc
shl
(bad)
in
or
test
cmp
jns
xchg
fcom
test
sti
daa
or
add
add
ds
mov
addr16
add
pop
test
movs
lods
in
pop
pop
mov
pop
ficomp
push
adc
add
into
xchg
fwait
add
mov
pop
lds
test
push
mov
xor
dec
add
dec
imul
(bad)
push
cmc
dec
out
cdq
sbb
mov
and
fmul
cmps
cmp
in
sub
push
inc
dec
cmps
retf
daa
jp
int
jl
pop
cmp
scas
loop
fbstp
and
ja
(bad)
ja
sar
and
cmp
inc
and
xchg
fcmovu
sbb
jae
cli
sbb
push
mov
cdq
mov
cli
jae
sub
sahf
sub
sti
push
sub
rol
aam
sbb
adc
inc
jg
jle
imul
(bad)
mov
fiadd
(bad)
push
sar
mov
enter
xchg
lahf
push
or
lahf
inc
dec
bound
je
int3
cdq
and
fldl2e
pop
rcr
pop
or
arpl
test
inc
pop
cmp
cmp
xchg
fsqrt
adc
fadd
fadd
stos
es
aaa
jnp
aad
imul
inc
or
or
xlat
and
mov
stos
cmc
nop
xchg
pop
pop
inc
out
mov
test
lods
inc
clc
out
jae
mov
push
sub
xchg
dec
and
mov
xchg
mov
out
jmp
and
popa
mov
cld
std
dec
xor
add
dec
pop
shr
icebp
stc
movs
mov
je
jge
mov
pop
js
inc
stc
gs
and
mov
or
sub
cmp
int3
scas
jb
ret
mov
dec
nop
(bad)
mov
mov
dec
fnsave
mov
sub
leave
fwait
pop
mov
push
fdivrp
jmp
inc
sahf
sbb
pop
push
dec
xor
sahf
ret
cs
(bad)
out
lock
js
xchg
mov
ja
mov
dec
ret
lock
daa
jno
int
(bad)
movs
cmps
fcmovnbe
leave
or
mov
add
ja
sub
xchg
js
pop
fst
and
int
shl
push
cmp
in
retf
jno
jns
adc
push
xor
sub
pop
mov
out
xchg
stos
(bad)
lods
inc
push
mov
popf
mov
add
xor
xor
sbb
fimul
adc
pop
lods
pop
jmp
mov
add
data16
inc
inc
inc
mov
fcom
mov
sub
and
pop
sbb
push
sbb
stos
xor
(bad)
push
movs
shl
out
adc
call
mov
shl
in
(bad)
scas
jecxz
popa
jnp
xlat
mov
jnp
mov
in
cmps
add
repz
fs
enter
sub
adc
sub
movs
rol
adc
sbb
push
out
js
std
cs
scas
mov
mov
cmps
mov
adc
(bad)
pop
push
jp
je
dec
or
(bad)
xor
lods
jo
lock
mov
sbb
mov
and
push
and
not
sub
in
dec
in
sbb
nop
xchg
adc
inc
jns
jecxz
adc
movs
(bad)
out
clc
mov
mov
fisttp
jmp
scas
retf
xchg
mov
push
fsubr
dec
jp
test
sbb
mov
inc
jb
fidivr
push
push
cmp
shrd
jnp
xchg
fldcw
jo
fmulp
mov
(bad)
pop
ins
push
jg
jge
nop
jmp
pop
dec
sar
fisub
or
sub
sahf
jae
add
inc
retf
add
push
dec
cmp
mov
daa
(bad)
or
retf
mov
mov
inc
mov
jbe
leave
pusha
retf
int3
(bad)
or
ret
pop
sbb
xchg
mov
push
mov
mov
nop
iret
test
pop
xchg
mov
popa
sbb
(bad)
sbb
test
push
out
ret
jg
cmp
push
and
jge
sub
jae
aad
push
or
push
outs
inc
push
(bad)
pop
pop
mov
sbb
push
xchg
movs
xor
aad
ret
xchg
mov
mov
cmp
ror
and
inc
mov
pop
or
cmp
popf
pop
aas
movs
mov
ja
dec
fcmove
imul
int
(bad)
(bad)
add
fcmovu
jg
(bad)
sahf
es
mov
fbstp
enter
and
mov
int
add
mov
add
js
scas
rcl
mov
in
or
sub
loope
call
mov
nop
inc
popa
mov
push
pop
fisttp
sub
sahf
daa
xchg
inc
add
pop
push
mov
out
jae
ret
out
stos
(bad)
ret
sbb
push
fs
push
lds
push
pusha
scas
push
mov
mov
inc
repz
retf
sub
jbe
add
out
popf
xor
mov
inc
outs
outs
adc
popf
hlt
movs
inc
xor
add
(bad)
enter
out
test
es
pop
pusha
aaa
daa
sbb
xchg
pusha
xor
mov
pushf
(bad)
dec
sbb
push
push
popa
repnz
jle
jmp
and
pop
iret
scas
repnz
in
pop
push
fnsave
fstp
xlat
cmp
jbe
or
ins
cs
push
jb
mov
hlt
push
data16
stos
cmps
sub
or
ror
outs
xchg
leave
dec
dec
push
push
dec
xchg
hlt
stos
pushf
push
arpl
ds
les
(bad)
push
cmp
cmp
jo
push
or
mov
loopne
push
jmp
xchg
inc
cwde
fstp
movs
enter
push
add
(bad)
mov
sahf
dec
mov
int3
xchg
mov
push
cmp
outs
xor
adc
cmp
int3
mov
or
mov
retf
or
push
add
cmp
inc
cmp
aaa
popf
mov
lods
in
test
dec
mov
popf
sub
sbb
mov
or
in
test
and
pop
sbb
fidiv
(bad)
inc
int3
or
cmps
jl
mov
hlt
jp
push
push
pop
mov
js
pusha
stc
call
nop
cmps
dec
push
and
pop
xchg
and
addr16
jbe
sub
cmp
icebp
sbb
sbb
pop
push
call
dec
sbb
mov
test
jmp
mov
jp
jae
jo
dec
(bad)
mov
jbe
leave
sbb
pop
fadd
jne
out
out
and
stc
adc
add
loop
jge
ins
shl
retf
retf
dec
inc
jae
test
and
jle
dec
add
sbb
or
mov
mov
pop
sub
xchg
ins
push
in
(bad)
outs
test
scas
push
ja
push
inc
pop
or
repz
mov
sbb
arpl
mov
jle
mov
mov
add
daa
out
mov
cmp
mov
mov
aaa
jnp
aam
sbb
pop
inc
inc
lods
sub
xor
dec
ror
jnp
adc
sahf
lock
cdq
test
in
mov
inc
mov
jne
inc
pop
imul
push
(bad)
ja
fsubr
cmp
pusha
xchg
data16
or
dec
ja
mov
add
push
(bad)
push
dec
cmp
(bad)
dec
cli
aaa
sub
add
cli
movs
xor
or
outs
ins
ja
add
mov
ds
dec
jecxz
and
pop
(bad)
mov
push
int3
jp
mov
loopne
cmp
jmp
jno
mov
push
rcl
into
mov
gs
sub
aam
dec
test
cmp
mov
dec
lods
cli
or
out
pop
mov
ror
arpl
pop
jge
in
inc
(bad)
fisttp
adc
sbb
pop
repz
push
stos
(bad)
mov
in
pushf
test
shr
push
xor
sub
cmp
mov
fcomp
in
iret
cmp
cmps
loop
cmp
cmp
ror
add
xchg
aad
mov
(bad)
jmp
aam
sar
rol
std
pop
in
dec
in
cmps
rcr
rcr
pop
adc
cmp
iret
popa
xor
mov
movs
mov
inc
out
retf
lods
movs
jle
shl
cmp
and
mov
int
add
sbb
cmp
sub
push
or
xchg
push
sbb
out
sbb
movs
ja
lods
hlt
inc
cmp
cld
mov
data16
shl
stos
add
rcl
inc
mov
pop
and
retf
dec
add
pop
push
sahf
or
mov
enter
(bad)
pop
inc
loopne
jmp
sahf
pop
sub
out
int
xchg
out
mov
add
cmp
adc
hlt
lea
mov
sbb
push
stc
hlt
into
rol
pop
ret
mov
stos
jb
mov
cmc
(bad)
pop
sbb
sub
mov
xor
and
jns
sub
ds
(bad)
fcomp
or
or
mov
enter
or
repnz
push
jo
in
int
out
mov
pop
rol
icebp
push
and
bound
pushf
cmp
xor
(bad)
out
inc
add
xchg
xor
or
cmp
adc
fldenv
(bad)
shl
pop
addr16
push
imul
outs
aad
mov
jecxz
call
sbb
lea
pop
mov
jnp
test
movs
cmp
out
xlat
outs
mov
cdq
les
(bad)
mov
test
sub
sub
mov
sub
clc
lahf
test
pop
xor
xchg
shr
push
or
push
pop
test
int3
lds
lea
shl
or
out
lods
es
outs
je
iret
sub
inc
jecxz
inc
adc
mov
dec
hlt
out
arpl
mov
fldcw
push
ret
fild
dec
adc
dec
add
(bad)
fwait
mov
ss
popf
ja
scas
mov
pop
or
cmp
neg
dec
mov
mov
or
jl
inc
pushf
xor
cs
repz
cmc
sub
cli
push
mov
test
into
aaa
cmp
movs
iret
bnd
fisub
inc
test
mov
(bad)
push
loop
cmp
lds
xchg
test
jnp
jne
push
adc
or
addr16
arpl
aam
sub
iret
fisttp
jbe
mov
add
xchg
(bad)
xor
dec
ja
shr
mov
mov
mov
adc
outs
jo
or
inc
cmps
outs
push
cmp
mov
sar
and
rol
cli
add
dec
add
(bad)
mov
outs
pop
out
sub
mov
mov
fs
std
mov
out
xor
das
scas
push
lods
push
jl
mov
dec
lds
mov
cwde
add
inc
fs
mov
add
and
mov
addr16
lea
gs
daa
and
mov
mov
dec
aas
push
cmp
fldenv
adc
xlat
das
cmp
mov
cmps
cwde
or
repnz
jbe
ret
cwde
movs
and
and
sbb
pop
rcr
imul
mov
into
and
mov
pop
repnz
std
mul
xor
out
mov
fwait
push
test
shr
hlt
sub
dec
repnz
push
inc
dec
test
xor
mov
fnsave
aam
outs
push
mov
sbb
pop
push
ret
call
(bad)
xchg
loop
imul
pop
bound
pop
or
mov
sbb
pop
daa
aam
jo
cmps
and
jnp
cmp
or
push
jae
into
inc
jno
sub
fnsave
push
mov
loope
push
adc
mov
mov
cwde
out
aad
mov
mov
ins
jge
rol
inc
xchg
jbe
cs
xor
lods
pusha
sbb
clc
popa
jb
into
pusha
aad
pop
jg
cmp
out
les
pop
popf
mov
adc
repnz
cmp
jne
(bad)
push
jg
mov
dec
push
cs
push
mov
push
push
(bad)
mov
push
push
push
mov
sar
xor
or
and
sbb
nop
add
out
popa
sti
xor
cmc
pusha
repz
mov
in
push
cld
je
sub
syscall
iret
icebp
leave
ja
nop
ins
cmc
out
fmul
movs
dec
into
add
dec
lock
push
pusha
aam
stos
xchg
clc
imul
test
add
(bad)
mov
fst
mov
retf
out
xchg
inc
loopne
popf
adc
mov
pop
xor
pop
jle
(bad)
mov
loop
jo
mov
adc
mov
inc
mov
clc
or
cld
jp
adc
pop
dec
inc
adc
dec
pop
mov
mov
fild
aam
imul
mov
and
repz
sub
cs
sbb
mov
pop
xchg
mov
scas
adc
ret
xor
push
inc
adc
and
inc
jno
sbb
imul
add
push
popa
call
xchg
jmp
sub
mov
nop
push
mov
jnp
adc
call
jae
mov
mov
retf
jb
adc
aas
ror
mov
ret
cmc
outs
or
dec
jae
jbe
xor
fdivr
mov
xchg
aaa
xchg
mov
aaa
jo
aam
gs
or
popf
or
jge
jne
stos
add
lods
out
adc
call
shl
pop
lock
dec
or
adc
jge
inc
cmp
mov
les
cmp
popa
cmps
cs
add
adc
shl
call
cmp
out
sbb
je
ins
(bad)
mov
and
jne
inc
sahf
mov
add
pop
mov
in
and
push
inc
jmp
or
adc
adc
mov
xor
outs
loop
lock
in
out
xor
mov
ror
mov
addr16
adc
in
pop
adc
sbb
inc
jp
or
pop
ss
add
pop
mov
dec
mov
push
hlt
lods
cdq
shr
call
add
add
sbb
into
pop
mul
mov
push
mov
(bad)
push
retf
(bad)
push
push
add
ret
outs
pop
jmp
ja
pop
shl
xor
and
dec
pop
xor
retf
mov
loopne
ds
xchg
lds
mov
push
or
cmp
sub
ins
add
inc
jne
mov
movs
fs
icebp
xchg
movs
sahf
cli
adc
xchg
aam
jnp
and
cmps
test
out
inc
xlat
inc
sbb
sub
cmps
call
(bad)
imul
add
int
ret
mov
in
aas
adc
shr
pop
bnd
imul
or
jb
mov
add
jo
clc
pop
pop
(bad)
call
cmp
sbb
sahf
dec
cmp
movs
add
arpl
xor
inc
sub
inc
cmc
aas
xchg
(bad)
(bad)
out
push
adc
mov
outs
push
sbb
rol
inc
mov
push
xor
call
in
mov
mov
mov
repz
aad
or
imul
pop
lock
hlt
stc
pop
bound
mov
mov
dec
xchg
adc
data16
movs
(bad)
int
or
out
adc
inc
jb
(bad)
jmp
xchg
leave
imul
xlat
shr
sbb
aas
outs
aaa
inc
adc
xor
sub
loope
call
in
push
ret
lods
xchg
sbb
adc
and
adc
cld
pop
push
push
ins
or
mov
add
pushf
cmp
aas
jno
fcomp
loop
mov
sub
imul
adc
pop
(bad)
xor
in
and
mov
adc
stc
xchg
xor
imul
clc
and
mov
in
xchg
je
inc
mov
cwde
xchg
and
pop
dec
adc
sub
xor
cwde
dec
dec
ror
sahf
xchg
mov
or
pusha
ja
cli
jmp
push
or
pop
cmp
loopne
adc
lds
leave
sbb
out
cmp
xchg
and
mov
mov
ins
inc
adc
mov
add
bound
add
adc
push
ins
jmp
fucom
mov
repnz
ficom
inc
xor
sub
(bad)
xor
call
sbb
inc
popa
nop
ret
cwde
sub
add
sahf
mov
fisttp
xchg
or
pusha
popa
jmp
jo
mov
ins
cli
stos
std
push
pop
(bad)
jnp
jmp
bound
sar
test
enter
loopne
mov
rcl
inc
dec
leave
leave
leave
pop
or
or
aad
mov
stc
mov
push
xor
adc
ins
div
fild
cmps
pop
cmp
add
cli
and
call
xor
cli
ins
dec
stc
or
mov
mov
jp
sbb
add
retf
adc
inc
cmc
push
fiadd
mov
xchg
test
pop
in
ss
mov
xchg
push
mov
or
arpl
mov
test
in
mov
int
sti
(bad)
adc
pop
xchg
lods
mov
popa
push
sub
adc
mov
cmp
pop
push
push
imul
sti
dec
xlat
add
xchg
mov
ret
pushf
xchg
les
mov
mov
std
xor
or
test
(bad)
clc
pop
loope
jg
ja
adc
leave
xchg
push
or
into
pop
adc
outs
and
test
mov
out
cmps
jmp
pop
cmp
dec
xchg
mov
or
ret
sub
xor
jns
mov
out
sahf
mov
cs
sub
add
cwde
push
jg
test
mov
lahf
outs
or
icebp
out
mov
mov
jno
rcr
mov
dec
cwde
loop
jmp
out
xor
fs
inc
mul
pop
es
xchg
mov
lods
add
mov
pop
loop
fbld
jge
xor
sbb
(bad)
lods
cld
fwait
inc
cmp
lods
test
aas
jnp
mov
push
pop
add
pop
push
mov
out
and
xchg
ficom
ret
cmp
repz
iret
sbb
test
push
and
mov
std
fwait
mov
xor
in
mov
scas
nop
mov
jecxz
or
popa
out
xor
mov
repnz
rcr
xchg
dec
fnstsw
cdq
(bad)
int
mov
cmp
jp
add
test
movs
es
push
das
xor
push
dec
inc
(bad)
dec
and
jns
js
and
lahf
call
(bad)
push
inc
adc
lods
push
in
jb
jle
stos
movs
cmps
pusha
ficomp
xor
dec
dec
je
std
clc
retf
aaa
enter
js
cs
addr16
pushf
jmp
rcr
loope
xchg
sahf
test
or
iret
xchg
add
jmp
add
ret
push
mov
xchg
mov
push
aaa
push
pop
push
and
jmp
lahf
loopne
iret
ds
sub
push
retf
inc
sbb
outs
push
aam
or
imul
aaa
cmp
cwde
fidivr
add
cmp
cs
lds
adc
cli
mov
loop
(bad)
arpl
jnp
mov
jb
push
icebp
or
and
jo
int
push
movs
jp
in
sub
loopne
jb
xor
add
rep
ror
ror
clc
dec
outs
xchg
imul
xor
add
les
(bad)
ror
adc
int3
popa
pop
scas
int3
or
stos
ja
lea
mov
jmp
jmp
fistp
or
dec
xchg
mov
sub
ror
test
int
out
sub
out
or
pop
sar
jmp
inc
fbstp
loopne
mov
scas
rol
ss
jmp
out
test
mov
fdivr
push
in
lods
call
std
xchg
push
out
add
imul
xchg
loopne
shr
adc
mov
adc
jl
lods
loop
inc
cmc
add
xchg
and
jbe
ret
js
mov
into
in
ror
into
xchg
clc
ja
mov
pop
in
add
aas
push
ins
xor
icebp
je
adc
pop
xchg
pushf
test
enter
in
sub
xchg
arpl
ja
dec
add
call
push
xchg
mov
and
je
xchg
adc
and
xchg
or
add
cmps
push
int3
add
mov
mov
xor
add
mov
mov
jb
rcl
jmp
inc
pop
fisttp
mov
iret
jge
out
fsubr
and
adc
pop
mov
pop
lea
call
aaa
retf
jns
test
adc
cmp
sbb
mov
cli
cwde
out
or
fdivr
sub
mov
push
aam
scas
ds
mov
mov
mov
mov
jns
jnp
(bad)
push
mov
fdiv
sub
movs
or
out
adc
jmp
dec
rcr
arpl
ins
mov
inc
aas
lea
mov
ret
jnp
pminsw
fwait
icebp
add
inc
jecxz
add
pop
xchg
fmul
adc
inc
or
pushf
arpl
dec
and
data16
xchg
cmp
mov
(bad)
cmp
(bad)
cli
dec
cdq
dec
push
mov
ror
mov
mov
ins
mov
inc
enter
add
rol
sub
shr
pop
adc
dec
ds
inc
loopne
ins
push
sahf
pop
(bad)
(bad)
inc
mov
sbb
dec
push
sub
sub
popf
mov
test
xor
inc
or
add
movs
retf
pushf
je
sbb
pcmpeqd
adc
in
xchg
cld
jbe
adc
test
jmp
neg
ins
add
push
mov
adc
mov
jp
jbe
inc
push
cmp
stos
xchg
rcr
ret
(bad)
cmp
lea
cmc
test
adc
hlt
(bad)
and
rcr
daa
lea
adc
movs
int3
xor
push
pop
inc
inc
push
mov
jno
lahf
push
in
jmp
les
(bad)
mov
outs
cmp
jo
cmc
add
xor
cmp
dec
pop
call
pusha
pusha
jae
inc
movs
(bad)
icebp
or
loope
mov
add
push
jecxz
jb
adc
and
sbb
xchg
jl
sti
mov
sub
mov
std
cmp
shl
cmc
arpl
push
es
dec
push
xchg
loop
loop
xchg
int3
push
inc
push
jo
and
and
xor
jmp
icebp
add
enter
mov
enter
pusha
jp
jnp
cmp
mov
popf
loopne
mov
cmps
jmp
jno
or
pop
sbb
dec
mov
mov
call
jne
iret
push
(bad)
mov
stos
pop
mov
aaa
adc
nop
sahf
cmp
push
xor
adc
fstp
sub
ror
pushf
aam
pop
inc
or
cdq
or
push
enter
cmp
jmp
adc
fldcw
mov
pop
js
out
and
js
test
push
inc
ret
mov
enter
or
pop
ret
sub
xchg
std
stos
and
rol
lods
daa
add
mov
popf
pop
cmp
outs
dec
inc
and
hlt
mov
push
mov
mov
call
and
sbb
xchg
xor
test
in
mov
or
xchg
mov
mov
sbb
in
ins
xchg
inc
push
fs
(bad)
cmps
mov
retf
enter
adc
mov
lods
(bad)
clc
retf
out
push
sub
(bad)
cli
push
call
leave
loop
(bad)
pop
ja
jle
fwait
and
jo
or
cdq
imul
inc
add
adc
fiadd
fwait
push
mov
dec
imul
out
in
repnz
push
imul
sbb
(bad)
xchg
cs
pop
not
js
adc
cmp
vshufps
bnd
mov
dec
gs
add
adc
rcr
fwait
psubq
push
xchg
and
in
xchg
mov
jno
aad
fst
out
adc
dec
in
jg
inc
xchg
pop
and
and
jp
xchg
or
in
xchg
inc
sub
pop
mov
mov
or
sub
and
adc
daa
xor
cmp
pop
jmp
add
outs
sbb
inc
mov
cmp
xor
lods
cmove
adc
jmp
sbb
test
or
dec
sub
mov
sti
sub
repnz
or
xchg
mov
les
clc
fdivr
pop
jmp
sbb
inc
outs
in
(bad)
aam
jno
shr
xlat
outs
shl
and
pop
clc
cmps
out
not
out
repnz
xor
push
xchg
int3
fmul
loop
js
xchg
jecxz
cld
or
shl
stos
xchg
aad
push
out
push
push
push
int
xlat
call
mov
ins
std
adc
inc
pop
mov
pusha
cmp
jnp
lea
(bad)
push
cld
sbb
push
or
inc
mov
cmp
push
lods
cwde
adc
or
repz
xor
in
pop
xor
out
xor
rcr
pushf
inc
sbb
add
mov
or
add
xor
jl
outs
jae
mov
xor
(bad)
jb
pusha
inc
or
mov
psrlw
inc
out
jmp
and
push
dec
daa
xlat
fdivr
into
outs
xor
inc
les
in
cli
and
inc
xor
scas
jmp
cmp
les
and
jno
in
stos
jle
mov
add
aam
sbb
pop
jmp
sbb
push
pushf
add
sbb
lock
call
mov
in
movs
cmp
pop
jnp
pop
daa
dec
sbb
add
cmp
cwde
and
inc
int
stos
rol
int
xchg
dec
jb
mov
jle
add
aam
dec
sub
pop
xchg
call
das
jp
xchg
(bad)
leave
pusha
cmp
shl
sti
call
pop
popa
fnsave
sbb
pop
inc
jecxz
mov
xchg
mov
xchg
xlat
cmp
out
std
retf
ins
inc
push
hlt
lods
mov
inc
loop
shl
ss
aas
and
push
jns
cmp
xor
jl
dec
jmp
out
data16
inc
out
mov
popa
sbb
pusha
mov
std
or
aad
xchg
jecxz
adc
sub
add
mov
stos
jo
jmp
div
outs
xchg
xlat
jb
mov
xor
or
push
cs
mov
movs
xor
jno
shl
push
cmp
jbe
test
pop
jb
retf
leave
dec
je
jno
inc
ja
pop
jnp
push
mov
xchg
sub
(bad)
retf
sti
cmp
into
inc
lods
cmc
push
cmp
pop
xchg
cli
sahf
cmps
(bad)
mov
iret
mov
lods
enter
inc
js
jbe
inc
sub
cmp
in
jbe
cdq
pop
mov
jg
outs
ret
int3
and
or
mov
sub
cs
jns
cmp
ror
pop
gs
add
retf
lods
movs
pop
out
mov
add
inc
sbb
xchg
(bad)
mov
stos
xor
or
stos
fadd
mov
seta
xor
push
call
imul
sbb
(bad)
push
cmp
fs
xor
in
pop
test
mov
int
xor
fcmove
mov
(bad)
cmp
(bad)
pop
push
cmps
pop
xchg
mov
mov
dec
and
push
dec
xchg
cli
sub
arpl
movs
sbb
push
fisubr
adc
mov
add
push
or
xchg
dec
xchg
mov
(bad)
jns
(bad)
xor
push
scas
xchg
pop
pop
aas
add
pop
and
les
mov
call
(bad)
movs
push
lods
in
cmp
test
sbb
in
sub
jle
push
sub
outs
fnstsw
ins
adc
jmp
pushf
pop
adc
aas
pop
nop
jge
hlt
mov
xor
sub
das
iret
sub
repnz
inc
les
dec
adc
xchg
push
sub
in
sbb
add
mov
mov
out
loope
push
outs
mov
dec
movs
push
cwde
push
lods
or
dec
shr
inc
inc
sub
push
mov
adc
pop
in
lea
add
test
les
repz
dec
imul
in
popf
or
xor
lock
cdq
lods
jge
pop
gs
push
sub
cli
pop
(bad)
into
outs
retf
xor
lahf
fwait
lock
rol
icebp
imul
jbe
cdq
inc
dec
adc
xlat
std
inc
mov
mov
dec
fdivr
and
dec
retf
icebp
inc
mov
sub
fnstcw
(bad)
mov
pop
sub
or
mov
icebp
or
push
leave
loopne
pop
shr
jns
xchg
loopne
mov
dec
pop
mov
das
fiadd
mov
loope
mov
ja
jecxz
jl
inc
add
sub
or
or
mov
test
add
out
mov
cmp
xor
mov
sbb
jns
mov
mov
mov
pop
jbe
imul
loop
inc
stos
test
(bad)
mov
dec
sbb
adc
test
xor
cmp
fiadd
sbb
(bad)
jns
js
std
(bad)
mov
mov
inc
push
mov
mov
stos
cmp
outs
adc
call
jmp
push
add
movs
or
in
and
test
jmp
sub
cmp
add
cmp
and
shl
daa
aad
cmp
aam
mov
xor
imul
repz
not
push
lods
mov
sbb
mov
push
sbb
pop
lahf
push
push
dec
sub
mov
cs
push
in
dec
sub
lahf
aam
dec
scas
dec
enter
(bad)
nop
jmp
add
(bad)
mov
popa
out
pushw
xchg
popf
pop
mov
sub
inc
repnz
mov
mov
push
mov
mov
dec
push
lods
xor
cmc
mov
scas
jmp
inc
mov
int
mov
push
cmps
mov
cs
and
into
mov
pop
xchg
cmp
cmp
ja
int
retf
out
shr
js
cs
cmp
and
int3
pop
retf
cmp
xchg
int3
jecxz
test
(bad)
cmc
mov
or
sti
fcomp
or
push
add
out
and
cld
jnp
push
push
push
sbb
mov
out
or
sub
and
lods
movs
(bad)
adc
jg
jmp
ror
pop
imul
mov
stos
add
lock
or
pop
or
jne
xlat
aam
mov
pop
sub
xor
cs
inc
lock
dec
ret
out
pop
jne
loope
call
loop
imul
call
sub
dec
inc
jle
jge
ja
dec
leave
adc
call
xchg
fdivr
pop
cmp
jl
ret
dec
hlt
jmp
push
push
adc
push
ss
adc
cwde
cmc
in
test
std
add
es
(bad)
jne
ja
add
popa
hlt
cmp
jb
adc
cs
outs
sub
xchg
push
mov
cmps
outs
add
mov
cwde
xor
es
push
sub
dec
xchg
or
pushf
cmp
cmp
std
imul
xchg
scas
mov
test
lods
mov
enter
or
mov
cmps
and
icebp
lods
ds
mov
sub
or
add
jmp
test
cmp
ret
mov
stos
lods
push
(bad)
mov
cli
je
pushf
mov
test
and
adc
cmp
pop
lods
xchg
repz
jp
xchg
scas
inc
test
mov
iret
xchg
cmps
retf
std
jno
dec
push
and
aaa
dec
cmps
inc
std
pop
push
push
pop
test
aam
sub
fwait
push
lods
arpl
xor
popf
mov
xchg
xchg
add
pop
mov
and
cld
xchg
pop
pop
mov
xchg
outs
shl
stos
lds
jl
jmp
sti
test
cmp
or
inc
repz
jo
fidiv
mov
cwde
fidiv
and
(bad)
mov
xor
jno
mov
(bad)
push
sub
push
leave
inc
jb
into
dec
add
dec
inc
dec
in
jno
jmp
(bad)
cld
call
xor
xor
push
ja
sub
mov
dec
mov
inc
push
pop
nop
cwde
mov
ror
jbe
ret
add
inc
shrd
stos
dec
sub
fs
ret
and
xor
into
sub
fistp
bound
aaa
xchg
popf
sub
mov
test
not
rol
sbb
into
and
(bad)
jecxz
push
and
cmc
mov
out
loop
and
push
mov
cmp
fdiv
mov
sar
ror
or
mov
push
jp
retf
hlt
aam
xchg
pop
and
je
inc
mov
fisub
shl
(bad)
aaa
or
sbb
push
push
cwde
outs
shr
cmp
and
pop
inc
lods
test
and
push
push
xlat
dec
jge
rol
scas
dec
push
outs
cmp
mov
add
push
sub
and
pushf
push
outs
int3
movs
addr16
dec
(bad)
dec
es
pop
ins
pop
ret
add
or
push
shr
pop
stc
bound
test
and
jno
xchg
(bad)
addr16
(bad)
pop
cmp
push
popa
push
js
enter
or
pop
dec
mov
jmp
pop
or
fstp
add
test
and
dec
push
fmul
inc
movs
mov
mov
sbb
lods
or
jmp
ret
jmp
mov
loope
js
(bad)
popa
loop
fadd
push
loope
and
lods
mov
fs
jmp
lock
sbb
jmp
push
mov
sbb
adc
sahf
fldenv
mov
leave
mov
dec
cs
xchg
mov
call
mov
mov
(bad)
cmps
or
(bad)
xor
leave
test
push
cli
outs
xchg
pop
daa
inc
das
sub
bound
mov
mov
sub
gs
xor
adc
xlat
mov
leave
dec
jl
int3
shl
test
call
arpl
rcl
fmulp
stos
repz
daa
mov
(bad)
mov
xchg
cmp
mov
push
out
(bad)
mov
jne
sub
sbb
sahf
ror
or
xchg
lahf
imul
jg
lahf
mov
jmp
mov
idiv
(bad)
cmp
test
test
sub
fnstsw
mov
and
clc
mov
out
in
and
pop
sub
jle
mov
mov
test
(bad)
pop
call
popa
pop
add
arpl
out
cmps
or
dec
xchg
scas
hlt
jne
xchg
inc
mov
imul
cmp
lahf
push
xor
push
stos
mov
loop
mov
sub
add
jmp
add
mov
dec
mov
jbe
inc
push
(bad)
xor
(bad)
fwait
lods
jmp
mov
out
mov
leave
inc
sbb
shl
test
stos
jmp
jl
cmp
pop
push
mov
xchg
mov
stos
shl
fidivr
cmp
cmp
dec
mov
jl
je
mov
sub
jp
int3
cmp
lods
in
push
pop
mov
dec
dec
jb
jnp
enter
mov
xor
and
xlat
jae
ret
es
push
mov
mov
fdivr
(bad)
pop
mov
inc
mov
cld
dec
cmp
inc
push
jmp
jmp
cmps
inc
jno
mov
inc
nop
(bad)
sti
sbb
add
xor
cmp
cmp
inc
aaa
ss
jecxz
repnz
or
mov
dec
outs
adc
iret
sbb
mov
push
push
lea
add
dec
push
mov
dec
push
xor
ficomp
rcr
in
xor
push
cdq
popf
js
dec
shl
inc
jbe
shr
xor
cli
and
dec
jnp
test
sub
and
fstp
adc
lods
jg
jge
xor
nop
je
or
add
sub
fs
cli
mov
hlt
aad
xor
mov
push
sbb
sti
sar
xchg
mov
sbb
fstp
mov
jmp
xchg
jecxz
jmp
jl
pusha
rcl
test
pop
mov
and
in
sbb
push
stc
cmp
inc
scas
push
shl
sbb
test
fwait
cmc
or
ret
std
xor
pop
hlt
not
dec
das
sahf
popa
cmp
pop
adc
retf
leave
sub
inc
not
ds
das
push
or
out
aas
push
in
mov
ja
(bad)
mov
inc
into
xacquire
fs
je
fsubr
data16
mov
sub
adc
fst
dec
cmp
push
or
stos
cdq
sub
cli
ret
cmp
pop
mov
ja
or
jg
ins
mov
xchg
xchg
mov
xlat
mov
std
or
rcr
ror
sbb
mov
sub
aaa
aaa
sub
iret
sub
mov
or
jne
mov
dec
push
cmps
out
out
ror
sbb
fisub
leave
(bad)
inc
leave
inc
sub
lods
rcl
jecxz
dec
pop
lds
pop
dec
pop
cli
push
(bad)
enter
out
fwait
movs
jb
pushf
fwait
push
dec
xor
fldcw
mov
inc
adc
arpl
dec
pop
leave
inc
or
bnd
push
fdivr
ret
mov
sub
test
xor
stos
jbe
inc
fcomp
or
popf
ins
(bad)
inc
iret
out
xchg
in
mov
jle
data16
lods
adc
cmp
push
iret
dec
ds
add
in
js
mov
test
mov
xlat
fisttp
inc
dec
sub
gs
fs
inc
test
push
je
xchg
pop
sahf
lea
ficom
aad
(bad)
xor
(bad)
push
outs
fbstp
popa
xchg
xor
mov
xchg
cmp
add
jmp
jno
stc
jbe
int
test
mov
out
xor
jecxz
cmp
popa
push
and
cmc
fwait
inc
ret
enter
rol
mov
push
jl
xor
fld
mov
leave
add
dec
adc
dec
adc
mov
dec
rcr
lock
pushw
xchg
mov
push
in
jp
shr
aas
push
xchg
sub
std
aas
inc
dec
ins
in
add
adc
mov
dec
and
xchg
test
aad
or
inc
lock
dec
sbb
sbb
mov
xor
movs
xor
mov
pop
sub
xor
(bad)
gs
mov
or
(bad)
addr16
or
lods
into
mov
and
arpl
test
mov
pop
push
(bad)
rcl
sub
adc
jns
icebp
loopne
sar
call
jp
cwde
adc
push
jo
mov
sub
xchg
mov
fimul
mov
jne
lahf
sbb
movs
mov
cmps
mov
sub
dec
push
pusha
and
stc
test
or
outs
ins
outs
pop
sbb
or
call
in
push
std
sub
test
ds
xor
sub
repnz
mov
test
dec
inc
(bad)
xchg
xlat
scas
ret
push
mov
cdq
add
jmp
or
cdq
loopne
xchg
cmp
dec
xor
sub
shl
mov
daa
or
pop
rol
ret
nop
(bad)
dec
push
cmc
cmp
fisttp
or
and
jge
mov
arpl
mov
clc
aas
inc
cdq
test
shl
cdq
fst
cli
mov
jnp
inc
cld
data16
xchg
popa
clc
addr16
repz
in
(bad)
jmp
inc
fdivr
xor
xor
sub
adc
ja
pusha
test
jg
push
push
rcl
test
out
add
push
mov
or
pop
dec
adc
pop
std
inc
das
or
jae
fwait
data16
add
call
popf
jge
mov
pop
mov
mov
test
mov
idiv
aaa
xor
fadd
xor
lods
movs
ss
push
stc
fstp
xlat
lea
jne
ror
stc
pop
dec
repz
movs
pop
xor
xchg
mov
aaa
pop
xor
test
out
xor
rol
pushf
sub
push
inc
adc
inc
jne
cvttps2pi
cmp
sbb
dec
aam
sub
ror
inc
pushf
jb
fld
cmp
fimul
shr
and
rol
popa
pop
mov
mov
ins
shl
pop
or
outs
mov
jp
push
add
shl
iret
test
into
jo
dec
mov
mov
mov
adc
xor
out
ss
and
jmp
mov
ds
cmc
shr
arpl
sub
pop
mov
jno
call
jo
xor
dec
mov
das
out
sar
pop
xchg
pop
cmp
es
and
loop
aas
adc
mov
dec
imul
mov
cmps
push
hlt
addr16
inc
mov
lods
pop
cmps
inc
dec
pop
and
mov
int
out
cmp
xlat
ror
int
sub
xchg
mov
stos
push
retf
xor
stos
and
jno
daa
xchg
iret
cwde
lods
mov
push
fist
in
lahf
inc
mov
pop
(bad)
cmp
inc
mov
and
test
cmps
mov
(bad)
mov
sub
fwait
mov
xchg
(bad)
mov
cmp
(bad)
(bad)
les
stos
cmp
aas
retf
int3
or
push
mov
jb
xchg
(bad)
pop
fisttp
(bad)
mov
mov
mov
cdq
xchg
add
pop
cs
cmp
inc
(bad)
jno
cmp
xchg
mov
lods
movups
push
mov
dec
push
loope
fadd
sar
inc
scas
pop
push
loop
mov
rol
sbb
aad
mov
sar
(bad)
out
push
cs
sbb
jp
sub
das
cli
aaa
jmp
test
mov
ins
stc
xchg
stos
(bad)
jg
sar
dec
nop
test
das
jb
fisttp
jg
xor
jmp
adc
ins
mov
xchg
cmp
mov
lods
test
cdq
sub
and
or
pop
mov
test
enter
cmp
aam
push
fidiv
clc
and
sbb
pop
mov
sbb
loope
lods
mov
fsub
lea
push
xchg
jecxz
dec
mov
mov
clc
dec
xchg
push
rcl
xor
popf
mov
cmp
mov
leave
icebp
aaa
and
xlat
and
xchg
jp
jmp
jns
mov
fsubr
dec
std
dec
jecxz
sub
or
idiv
das
xlat
xor
and
(bad)
les
scas
bound
cmp
cmp
inc
dec
jbe
test
add
sub
pop
cmps
mov
push
das
ret
add
adc
add
push
or
dec
pop
xchg
test
push
sbb
xchg
inc
cdq
js
and
scas
sti
and
into
xor
jae
cs
sbb
and
test
pop
js
and
push
push
fcom
pop
popf
clc
dec
push
leave
cdq
add
cwde
fidiv
bound
inc
xor
xchg
loope
or
dec
cmp
jle
loopne
xchg
adc
mov
jp
bound
and
inc
xchg
in
cmp
mov
inc
sbb
fadd
jmp
push
fisttp
inc
add
inc
and
aaa
aad
pop
call
jnp
push
in
daa
ss
sahf
xchg
inc
mul
push
fisttp
mov
inc
rol
(bad)
shr
retf
ss
stos
mov
or
je
pop
adc
pusha
pop
shl
jae
mov
ret
jp
rcr
stos
sub
dec
jp
jmp
sti
int3
fwait
sub
movs
sub
push
xchg
jb
cmps
mov
retf
jge
add
mov
jmp
and
inc
repnz
int
jl
nop
pop
jns
or
dec
add
push
mov
pop
sub
xchg
clc
sbb
or
popa
in
pop
adc
sub
daa
and
pushf
ret
int
adc
popf
jge
or
xchg
add
xchg
and
pop
fistp
not
nop
push
cmp
pushf
xor
outs
mov
loope
or
xor
cwde
popf
fdiv
sbb
xchg
imul
push
xchg
lds
inc
imul
test
les
pop
seto
fisub
mov
out
lods
xchg
lahf
movs
mov
stc
cmps
fisub
rol
cwde
sub
lock
das
push
out
add
add
jecxz
(bad)
pushf
xchg
mov
sahf
shr
lods
ficomp
(bad)
clc
push
xchg
adc
cmp
mov
mov
push
pop
stos
mov
pusha
inc
add
mov
scas
outs
and
mov
lea
jmp
jg
aaa
push
jg
mov
stc
dec
mov
call
stos
or
xchg
fisub
sub
dec
cmps
sub
mov
cwde
(bad)
mov
bnd
push
inc
lahf
lods
sti
pop
sbb
aad
loope
sbb
push
icebp
test
into
aam
dec
and
xor
icebp
lods
add
xchg
pop
mov
call
pushf
and
xor
mov
mov
nop
sbb
mov
ins
add
ja
adc
push
mov
(bad)
jl
inc
gs
pop
les
push
mov
or
fistp
iret
mov
push
movs
sahf
mov
rol
mov
lahf
push
test
adc
fistp
push
push
cmp
(bad)
pop
push
es
adc
fsubr
and
sbb
dec
stos
xchg
mov
mov
fsubr
arpl
mov
adc
stos
sbb
push
cmps
push
sbb
repnz
sbb
pop
dec
sbb
jae
jmp
neg
sbb
test
jg
mov
in
std
or
int
mov
sbb
pop
jle
xchg
test
nop
sbb
imul
mov
mov
sbb
xlat
adc
inc
cli
jmp
hlt
xor
into
push
ret
icebp
jns
push
in
je
add
cwde
std
sahf
inc
outs
and
outs
push
jne
mov
clc
ds
lods
inc
xor
push
outs
inc
js
das
sbb
push
dec
mov
scas
inc
test
pop
xchg
sbb
dec
cmp
into
and
jecxz
into
mov
bound
shr
ror
cmp
stos
cmc
sbb
sahf
sbb
ins
push
jecxz
loopne
clc
or
and
sub
mov
jb
cwde
add
inc
xor
gs
cmps
rcr
outs
ja
aas
mov
and
cwde
stc
cmps
sub
push
adc
sub
cmp
(bad)
and
cwde
or
mov
xor
in
(bad)
fist
aaa
xor
out
mov
mov
aaa
push
(bad)
dec
cwde
sbb
cmp
sbb
sbb
xor
rcl
xor
xor
adc
or
mov
cmp
cwde
mov
inc
cmp
jns
ret
ss
js
jmp
jmp
push
fsubp
lds
fbstp
sar
or
xchg
test
jg
int3
jo
add
xchg
(bad)
push
mov
pop
inc
dec
test
je
lods
push
cmp
sbb
adc
sahf
ret
(bad)
pop
sub
(bad)
scas
pop
test
or
outs
xor
jnp
sbb
enter
in
leave
and
xchg
sbb
sbb
push
retf
pop
sub
jno
lds
jno
cmps
mov
retf
cs
mov
mov
dec
popf
push
(bad)
popa
push
call
ins
add
jl
rcl
and
cmc
jp
jmp
lods
movs
dec
cli
pop
or
fldcw
sub
jg
adc
fild
jecxz
sar
test
push
mov
out
xor
stos
sub
adc
mov
add
imul
dec
fmul
jne
or
jecxz
lock
mov
test
rcr
xor
adc
adc
and
push
add
mov
sub
stc
fwait
cmps
ja
loop
mov
shld
adc
aas
jmp
xor
in
cmp
adc
loop
rcr
into
(bad)
xchg
push
xchg
cmps
push
les
icebp
jmp
aaa
add
fidiv
icebp
inc
mov
dec
bnd
aaa
ja
add
cmp
mov
push
adc
xor
shr
sbb
adc
mov
nop
dec
sub
push
dec
leave
adc
mov
les
jmp
xor
inc
cld
inc
cmp
repnz
sub
fstp
scas
pusha
call
dec
shl
adc
retf
scas
shl
jbe
pop
push
xchg
or
jecxz
out
jle
pushf
retf
mov
jl
mov
mov
aas
cmps
neg
add
add
pusha
mov
lea
mov
dec
or
lahf
or
fcom
imul
test
jmp
push
dec
inc
in
jno
and
leave
mov
std
es
adc
stc
and
or
lods
adc
in
jl
scas
fimul
retf
int
cmp
ffreep
iret
icebp
mov
push
push
int3
inc
call
call
mov
mov
fs
pop
xor
xchg
jmp
call
dec
pop
int3
sub
popf
lock
sub
xor
mov
add
or
xchg
pushf
cmps
prefetch
scas
cmps
pop
fimul
inc
loop
mov
int3
scas
shr
(bad)
cmc
push
outs
cmps
sub
js
jae
mov
mov
popf
call
addr16
pop
sahf
pop
stos
loope
leave
jmp
and
std
movs
pushf
sub
xchg
push
adc
jns
repnz
mov
push
cmp
and
pusha
rol
sbb
rol
mov
and
inc
popa
mov
xchg
test
mov
cwde
test
fistp
mov
pop
mov
addr16
dec
or
sub
ds
retf
xchg
(bad)
xor
or
scas
xor
and
sar
(bad)
shr
or
xchg
or
test
cwde
jae
xchg
in
and
mov
aam
sbb
add
sbb
aaa
fcom
sbb
xor
stos
sti
xor
rcr
xchg
fiadd
cmps
jp
sbb
repz
and
add
pop
les
add
mov
sbb
cmp
mov
arpl
and
adc
enter
xor
imul
(bad)
scas
sar
outs
int
mov
ds
or
mov
repnz
cmp
pushf
out
mov
and
pop
and
adc
std
and
xor
hlt
push
sub
iret
push
mov
fbld
jl
mov
into
mov
xor
(bad)
(bad)
fs
arpl
mov
sbb
xchg
inc
fidiv
jns
push
mov
sbb
fld
cmp
or
ins
cmp
cmp
rcr
mov
test
sbb
test
ret
inc
pop
nop
in
jb
clc
pop
pop
sub
pushf
adc
xchg
fldenv
adc
leave
outs
mov
repnz
and
jle
xchg
push
add
fiadd
lea
xlat
mov
sub
movs
(bad)
push
mov
cwde
add
push
mov
add
and
les
in
or
sbb
(bad)
enter
mov
call
add
in
sti
iret
xchg
(bad)
hlt
add
or
stc
mov
je
std
sbb
inc
aam
(bad)
dec
retf
inc
loop
push
ror
(bad)
jnp
retf
cmp
movs
push
dec
fild
inc
mov
adc
movs
fwait
jecxz
xchg
sbb
mov
mov
adc
mov
mov
jbe
inc
sub
inc
push
pop
xor
retf
movs
sbb
in
jne
mov
out
shl
stos
hlt
jbe
call
mov
es
repz
out
rcr
cld
mov
xor
ret
gs
adc
(bad)
push
jo
mov
pop
test
jmp
mov
rcr
pop
fsub
mov
fidiv
pop
mov
xor
in
les
inc
mov
retf
sbb
cmps
cmp
ret
xchg
cs
and
add
pop
mov
into
xchg
inc
xchg
add
popa
xchg
ins
adc
or
sub
aad
xor
push
sub
daa
sub
inc
ins
cmp
inc
aad
mov
loope
pop
sub
mov
or
pushf
push
shr
add
adc
adc
cmp
dec
arpl
adc
jae
jb
js
(bad)
jge
(bad)
xchg
ins
sbb
and
ins
sahf
sub
sub
sbb
jl
and
ret
mov
adc
ds
int3
xchg
jb
(bad)
push
push
mov
dec
push
jecxz
jg
xlat
cmp
fist
out
xor
cmp
or
loop
les
and
push
mul
mov
add
int
sbb
xlat
shr
fsubr
ins
sub
lods
neg
jmp
leave
ja
mov
xchg
aaa
fisttp
out
mov
sbb
inc
(bad)
cmp
lods
dec
std
mov
int
push
or
out
xor
and
push
dec
test
test
lock
sti
test
cmp
icebp
push
inc
lea
cs
retf
sub
cli
test
(bad)
add
cmps
jno
xlat
xchg
mov
adc
loop
cmps
pop
loop
jecxz
ss
xor
das
mov
bound
dec
mov
cwde
cmp
ins
inc
pop
not
stos
push
sbb
jo
push
xor
mov
leave
enter
arpl
fsub
pop
pop
fs
adc
mov
xchg
fiadd
ss
mov
clc
cdq
call
repnz
cmps
into
out
add
in
pop
pop
add
mov
jb
mov
sub
sub
aaa
xchg
xlat
and
pop
repz
xchg
pushf
sub
push
add
cmps
addr16
pop
mov
push
or
scas
in
sbb
and
push
jp
cld
jg
sbb
cli
fist
push
out
cmps
out
push
push
sbb
and
xor
mov
sub
fist
mov
adc
mov
(bad)
adc
rcr
cmp
add
ins
aaa
mov
xchg
cmps
pop
jbe
mov
mov
sub
xchg
lods
xor
aaa
sbb
fwait
xor
xchg
dec
repz
jmp
das
adc
mov
(bad)
jne
xor
fistp
mov
xlat
sbb
ror
xor
jnp
sub
out
push
and
test
ret
pop
jl
mov
jnp
add
aad
lahf
popf
xor
int3
push
xor
ins
repnz
pop
xchg
dec
ror
jo
loopne
mov
movs
dec
inc
push
cdq
jmp
sbb
and
add
iret
retf
lds
pop
div
repz
xchg
sbb
jecxz
pop
into
mov
in
inc
jb
jne
mov
stc
xchg
jp
pop
xor
jno
std
mov
and
cmp
into
and
xor
fist
add
sub
lods
xchg
shr
adc
xchg
sbb
mov
mov
inc
pop
cmp
inc
fst
mov
mov
(bad)
std
daa
adc
movs
das
adc
and
(bad)
lock
sub
cdq
mov
push
xor
jecxz
popa
xchg
mov
in
xchg
das
or
pusha
adc
fucompp
stos
(bad)
lahf
test
leave
ret
xchg
int3
jbe
add
movs
add
cmp
das
inc
bnd
lahf
sti
or
fimul
xor
xchg
mov
xchg
jmp
sbb
(bad)
cmps
fld
sbb
dec
mov
mov
aaa
xor
fsub
in
adc
(bad)
loop
sahf
(bad)
das
pop
or
movs
inc
fld
test
or
das
or
gs
and
ret
ret
in
add
jae
(bad)
cmps
scas
fadd
sar
adc
ss
jae
es
or
mov
aaa
push
dec
dec
retf
push
in
int3
adc
pop
jbe
or
pop
lahf
or
dec
jns
add
sub
rcr
repnz
push
mov
adc
cmp
retf
cmps
xchg
mov
mov
fsub
adc
push
fisub
pop
pusha
cmp
stc
neg
enter
or
pop
jae
clc
mov
sahf
mov
adc
cs
xchg
pop
rol
shr
mov
sub
adc
dec
dec
cdq
or
scas
mov
pusha
aaa
push
jp
or
cmp
mov
dec
mov
ret
lds
lahf
pusha
push
jns
dec
sbb
mov
mov
mov
jp
inc
cmc
in
fisttp
mov
jb
ret
mov
stc
inc
cmovno
sbb
ja
(bad)
dec
adc
sub
imul
dec
add
and
mov
out
xchg
inc
jno
popa
inc
pop
imul
loope
gs
std
mov
dec
jp
cmp
cmp
cli
sbb
mov
adc
pop
dec
sti
fild
sub
jl
jg
mov
cmps
jns
push
lods
xor
daa
ret
sti
lods
out
rcl
cdq
in
rcr
pop
fldcw
sti
pop
mov
test
loop
sub
fsub
pop
pop
mov
arpl
popa
jge
test
js
sub
ins
inc
mov
in
mov
loopne
out
or
jae
push
adc
lods
and
in
cmps
movs
sub
addr16
pop
jmp
and
mov
sbb
pusha
sbb
xlat
xor
nop
fimul
js
ret
clc
add
popa
movs
into
or
mov
mov
xlat
inc
and
push
ret
pop
fmul
rcr
test
xchg
out
test
cmp
pop
dec
rcl
xor
push
jle
int3
mov
inc
stos
mov
push
or
aam
mov
mov
test
and
icebp
(bad)
cli
xchg
mov
cwde
and
daa
lods
mov
mov
dec
sahf
adc
jge
rcr
or
mov
adc
xor
inc
enter
call
std
lods
test
adc
repz
mov
dec
cmps
loope
hlt
in
sbb
ja
adc
cmp
out
or
in
retf
jns
loope
inc
int3
or
js
pusha
retf
push
cld
pop
call
mov
and
jmp
push
xor
inc
mov
pushf
jp
test
or
nop
in
pop
sbb
mov
push
xlat
loope
in
pop
cmp
xor
mov
rcl
fisttp
adc
and
sti
jmp
push
je
cmps
(bad)
std
push
mov
pusha
mov
int
xor
inc
xor
fnstcw
jmp
inc
fs
sar
push
add
jns
lods
push
loop
mov
jb
enter
cmps
lea
pop
repz
xor
inc
sbb
ret
dec
pop
pop
iret
imul
inc
je
push
mov
and
mov
mov
jns
shl
(bad)
addr16
sti
inc
fcomp
in
mov
pop
out
clc
inc
stos
mov
test
fsubr
ins
sbb
adc
xchg
adc
(bad)
sbb
imul
or
sbb
push
fldcw
push
lgs
fstp
mov
ins
add
and
cmp
sbb
jge
loope
and
xlat
cmp
cmp
popa
or
into
loopne
lods
js
stc
pusha
push
cmps
adc
fcmovnb
mov
ficomp
lods
rcl
test
(bad)
jle
lds
jmp
imul
push
jbe
out
xchg
mov
mov
adc
mul
push
push
fcmovnu
add
nop
in
nop
or
adc
test
mov
sbb
xchg
(bad)
jecxz
call
inc
jmp
or
add
loope
and
daa
mov
dec
xchg
pop
inc
xor
nop
fimul
xchg
aas
jae
retf
cld
in
pop
sbb
cmps
ret
arpl
lock
movs
push
dec
mov
nop
loop
inc
retf
jnp
movs
pop
mov
pop
mov
int
test
aam
add
nop
imul
mov
fsub
cmp
push
jmp
out
ret
and
jecxz
aaa
cwde
mov
mov
xchg
out
repz
sbb
and
shl
cld
mov
xchg
(bad)
mov
scas
jo
mov
add
xchg
cmp
mov
xor
xor
je
or
push
sub
int
and
mov
xchg
add
fwait
popf
cmc
js
mov
neg
jns
inc
inc
daa
inc
sub
daa
cmp
push
pusha
outs
inc
or
sub
repnz
(bad)
sub
jae
into
sbb
mov
adc
jmp
fisubr
int3
sub
int3
sbb
sub
xchg
(bad)
jmp
fdivr
add
jns
xchg
test
and
dec
sbb
push
jb
add
movs
fsubr
jle
mov
popa
neg
inc
fild
ja
loop
mov
js
pop
mov
pop
(bad)
(bad)
cdq
push
stc
pop
add
xchg
stos
mov
cmps
jmp
lods
inc
cmps
(bad)
out
jl
fwait
ja
mov
inc
xchg
dec
lea
add
xor
pop
fnstsw
pop
les
daa
lock
ss
xchg
add
leave
mov
jl
ja
dec
out
pop
ins
lahf
add
cmp
enter
push
xchg
fidivr
(bad)
call
pop
or
jns
sar
xor
push
cli
mov
fsubr
in
(bad)
jbe
pop
popf
movs
and
js
xchg
hlt
mov
(bad)
jnp
imul
and
js
inc
add
js
add
push
dec
ins
popa
jno
xor
cli
cwde
mov
loopne
stos
mov
arpl
loop
repnz
adc
std
xchg
jg
pop
mov
pop
xor
(bad)
cmp
jmp
adc
jp
std
aam
add
das
dec
ficom
mov
or
in
or
es
sub
jns
inc
mov
stos
pop
mov
or
jb
dec
xchg
pop
pop
and
mov
popw
imul
(bad)
imul
shr
or
fldenv
js
shl
jle
or
xor
pop
dec
mov
pushf
dec
lahf
int3
scas
hlt
mov
data16
fdivr
and
outs
jle
pop
fucomi
scas
mov
imul
mov
movs
test
fucom
sub
cmp
xchg
arpl
inc
cmp
jle
or
adc
xchg
adc
das
sub
and
bound
out
jmp
dec
(bad)
addr16
ret
pop
mov
mov
aaa
mov
mov
pushf
lods
or
aaa
ror
xor
inc
mov
xor
mov
aad
imul
test
adc
xor
scas
ins
xchg
mov
aad
aad
pop
ss
push
jo
mov
jle
mov
push
call
js
adc
ret
scas
retf
mov
adc
imul
punpckldq
jg
xor
shl
shl
mov
jbe
fadd
rcl
push
das
push
xchg
stos
lock
jmp
daa
xchg
jnp
in
ins
or
test
mov
xchg
rcl
in
jno
mov
mov
mov
xchg
cdq
rcl
fcom
mov
pop
jbe
and
sahf
add
cmp
dec
fisttp
cmps
mov
aam
sub
pop
jnp
daa
xor
aaa
movs
sub
movs
in
iret
pop
loopne
out
repnz
or
(bad)
call
jecxz
sub
cmp
xor
ds
jmp
scas
bnd
call
outs
mov
movhps
pop
fisubr
push
jns
mov
shl
nop
adc
xchg
cmp
ror
fdivr
xchg
push
ds
ret
push
sti
jge
jns
pop
out
and
push
adc
xchg
cli
mov
in
ss
inc
xchg
push
in
jo
or
sbb
cmps
xor
mov
mov
iret
push
icebp
add
addr16
push
sbb
jne
jnp
mov
sub
pop
inc
mov
ja
mov
inc
shr
bound
and
mov
stos
sbb
xor
cmp
cmp
nop
mov
jecxz
mov
adc
xlat
xor
inc
ror
stos
mov
lods
hlt
test
repnz
jmp
jns
loope
mov
in
ret
jecxz
cmc
jns
in
(bad)
fistp
adc
add
jns
nop
sbb
dec
xchg
pop
in
cmp
cli
mov
jle
mov
fs
test
fiadd
mov
movs
inc
out
outs
add
dec
loopne
sbb
lds
mov
test
inc
and
or
mov
out
daa
cld
daa
aas
or
jb
test
scas
(bad)
repnz
mov
adc
jae
add
mov
(bad)
movs
loope
loope
fistp
frstor
into
arpl
adc
pop
lods
pop
pop
in
sar
mov
sub
and
push
add
pusha
in
in
sub
xchg
adc
pop
out
sti
inc
add
test
inc
and
push
jg
mov
popf
scas
mov
adc
les
adc
pop
cmp
pop
xchg
sbb
fstp
xchg
sub
test
int
jmp
fsubr
into
sahf
xor
add
add
(bad)
add
sub
xchg
(bad)
sti
sub
add
mov
push
outs
add
and
mov
test
fs
and
add
cmp
mov
pop
out
xor
mov
das
imul
(bad)
sbb
mov
and
sbb
imul
ret
aaa
addr16
jae
dec
or
not
pop
push
bound
ud1
rcr
rol
cmp
dec
add
push
ret
jnp
xchg
and
popa
ret
jp
repnz
and
test
lock
aas
and
iret
xor
or
bound
sahf
pop
sahf
xchg
sub
retf
imul
add
mov
mov
jno
in
and
movs
fadd
inc
fwait
in
mov
jnp
pusha
and
or
pop
retf
adc
rol
mov
pop
aas
out
(bad)
xor
or
cwde
or
lds
mov
test
push
call
mov
adc
into
(bad)
xlat
ja
push
pop
cmp
and
xchg
cmp
int
test
or
pushf
shr
mov
xchg
adc
push
sub
aas
pop
mov
popf
popf
cli
fisubr
dec
push
cmps
lea
lea
inc
jnp
adc
mov
(bad)
rcr
shl
aad
xor
in
loope
data16
in
lds
add
shl
stc
arpl
sbb
jl
dec
scas
sar
in
dec
cmp
pop
or
adc
fstp
mov
fmul
inc
jnp
scas
(bad)
into
xchg
lahf
in
fs
pusha
adc
fild
pop
ins
aad
or
es
add
mov
push
out
xlat
sbb
cmp
stos
daa
add
mov
sub
ins
es
mov
inc
movs
and
movs
push
les
xchg
jmp
leave
dec
dec
mov
ret
stos
stos
xor
es
in
pop
repz
jge
xchg
scas
sbb
pop
dec
sbb
leave
or
add
mov
xor
ja
mov
xchg
ja
adc
sbb
mov
or
sbb
jae
xor
fisub
push
mov
mov
push
sbb
adc
sbb
dec
inc
dec
ss
in
inc
loopne
xchg
mov
xchg
leave
ret
frstor
outs
xchg
outs
dec
popa
rcr
adc
jb
(bad)
sub
jmp
cld
pop
rcr
je
mov
dec
mov
mov
imul
in
add
std
jae
fmul
js
cs
push
cs
push
clc
stos
and
sub
sbb
and
push
arpl
sub
add
loop
pop
and
test
push
in
ret
mov
sub
scas
loope
mov
push
cmps
loopne
jno
xchg
mov
xor
clc
(bad)
jo
adc
mov
cmp
fistp
jmp
in
xor
mov
ror
not
cld
in
cmp
add
ins
lea
hlt
pop
adc
push
and
push
dec
xchg
or
(bad)
cdq
mul
inc
fbstp
sub
pop
adc
dec
add
(bad)
cmp
add
push
fld
xchg
adc
imul
jmp
jg
push
xchg
xor
sbb
fwait
movs
dec
sub
sbb
lea
mov
fsin
clc
adc
fidivr
push
sub
int
adc
call
in
add
sar
or
cli
out
mov
and
(bad)
mov
sbb
jge
fwait
mov
mov
in
inc
addr16
mov
adc
xlat
out
push
push
push
scas
adc
jns
jge
outs
or
xlat
xchg
inc
xchg
push
jb
sub
mov
test
mov
inc
imul
movs
out
test
dec
mov
cwde
movs
xor
adc
fnstenv
or
pop
mov
test
je
inc
loopne
adc
dec
loope
or
adc
fsubr
jmp
(bad)
pop
push
les
es
mov
(bad)
inc
pop
jno
stc
xchg
lods
jg
enter
jo
push
ror
cdq
inc
enter
xchg
jmp
lods
jecxz
xor
in
outs
cmp
sbb
push
fmul
inc
mov
(bad)
js
jecxz
test
pop
push
mov
dec
retf
push
inc
(bad)
into
outs
daa
inc
jge
mov
test
mov
std
push
les
js
jmp
das
adc
push
sbb
aad
mov
push
dec
pop
test
pop
add
ret
fild
nop
add
mov
in
jno
loope
stc
ins
test
xlat
aaa
cld
imul
sub
inc
pop
mov
push
pop
jl
(bad)
cmps
xlat
mov
dec
hlt
stos
mov
push
and
data16
aas
sub
cmp
imul
dec
jmp
iret
and
int
jg
push
sbb
sahf
xor
(bad)
mov
xor
lahf
ror
mov
ficom
cmps
test
aaa
sub
push
mov
dec
cmp
pop
jb
or
in
movs
inc
sub
sbb
jae
lods
repz
(bad)
xlat
jb
cmps
push
aas
stc
fimul
pop
cmp
add
out
adc
call
adc
lds
loop
ds
adc
in
sub
add
lods
sub
jbe
jb
mov
inc
inc
and
out
sub
movs
nop
nop
retf
push
les
dec
outs
ja
xchg
lock
mov
pop
pop
cmps
scas
inc
jmp
out
inc
adc
aad
shl
sahf
push
popf
fadd
call
push
ret
cmp
dec
mov
outs
fldl2e
call
in
push
leave
push
cmc
scas
push
fnsave
std
mov
daa
dec
push
pop
pop
hlt
mov
jns
sub
imul
mov
ffreep
fild
mov
pop
pand
enter
clc
ret
inc
nop
pop
mov
out
pop
xor
jno
xchg
xchg
jp
in
fs
cmp
cwde
addr16
jbe
ins
dec
xchg
xchg
add
ins
jbe
out
xor
xchg
jb
mov
sub
leave
push
test
jp
cmp
pop
add
cmp
add
mov
ins
clc
adc
ret
aam
fistp
out
xchg
dec
outs
repnz
fadd
mov
pop
aas
shl
sti
adc
mov
popf
sbb
xor
push
cmp
(bad)
mov
ds
adc
sub
dec
add
or
shl
fdiv
loope
ret
push
xor
mov
leave
xchg
sti
inc
mov
mov
jo
std
jo
(bad)
aaa
xchg
inc
mov
dec
hlt
add
inc
sub
add
jp
push
xchg
xlat
loopne
cmp
push
mov
inc
or
in
mov
int
cmp
retf
(bad)
iret
(bad)
mov
or
ss
mov
ret
sbb
jnp
xor
shr
jns
mov
mov
les
out
shr
or
push
cdq
(bad)
cmp
and
cmp
mov
mov
inc
xor
push
dec
xor
and
enter
xchg
imul
cmp
xor
ins
stos
cmp
test
sub
or
mov
mov
xor
rcr
sub
pushf
mov
jne
loopne
cmps
fsub
std
test
adc
int3
cmp
jns
xor
add
push
push
dec
fcmovnb
mov
inc
sbb
add
mov
xlat
push
test
adc
cwde
lock
ror
pop
addr16
ja
(bad)
sbb
xor
cmp
cs
push
(bad)
push
xchg
f2xm1
push
pushf
rcr
icebp
inc
in
enter
popf
cmp
jmp
push
cmp
jge
mov
in
pop
mov
mov
add
and
push
fsub
cmps
je
lds
test
jns
pop
(bad)
sar
int3
push
sub
xor
scas
outs
(bad)
(bad)
adc
push
sbb
mov
enter
and
leave
call
mov
jbe
fcomp
mul
sub
push
cmc
std
arpl
pop
test
xchg
repnz
cmps
and
(bad)
js
(bad)
ds
push
retf
jb
(bad)
hlt
arpl
retf
ror
sbb
iret
and
call
pop
dec
call
lods
scas
lock
in
mov
cmp
or
sub
div
fimul
mov
xchg
and
mov
jno
or
ins
push
ror
es
ja
scas
adc
xor
xor
cld
push
dec
and
sub
rcr
push
stos
add
scas
arpl
cld
inc
add
scas
push
les
or
fs
loop
js
or
xchg
not
inc
(bad)
retf
sahf
jecxz
(bad)
lock
icebp
aas
(bad)
pop
idiv
aaa
into
and
ins
rol
test
loope
(bad)
lock
movs
push
xor
movs
xor
arpl
pop
mov
ficomp
jb
cmp
lods
daa
ficom
retf
pop
pop
add
aaa
imul
movs
inc
mov
out
pop
dec
mov
push
leave
das
jmp
and
test
out
pop
push
gs
je
xchg
add
(bad)
push
lock
jbe
fs
mov
cmp
clc
test
sub
pop
cmp
adc
int
outs
call
stos
dec
aad
sub
or
addr16
(bad)
psrld
test
push
(bad)
div
dec
sub
add
test
int
push
xor
mov
fiadd
rcl
dec
imul
jbe
test
xor
in
or
pop
dec
push
ins
xor
sbb
jg
or
fsub
xchg
outs
mov
xchg
cld
stos
sti
sar
dec
cld
pop
jo
div
aad
pop
xchg
fdivr
sti
jp
adc
rol
push
daa
jbe
dec
pop
mov
daa
push
xchg
call
mov
stos
xchg
shl
stos
ror
in
sbb
pop
dec
retf
dec
mov
or
jmp
mov
push
push
mov
mov
pushf
mov
bound
aad
stos
shl
jp
leave
scas
outs
(bad)
dec
jnp
test
sbb
imul
jle
(bad)
jp
mov
loope
cld
inc
cmps
shl
xchg
fisub
imul
test
jnp
inc
div
push
cs
mov
lahf
out
mov
xor
push
div
call
cld
add
ror
dec
pop
scas
dec
add
rcr
push
mov
xchg
mov
and
cwde
movs
sub
xchg
push
outs
push
sub
outs
mov
aaa
repnz
test
and
ret
push
cmp
jb
(bad)
(bad)
mov
and
out
dec
call
mov
push
test
or
sbb
mov
push
mov
pop
xor
sbb
and
ins
sti
(bad)
or
xor
cs
sub
pop
(bad)
or
movs
stc
jne
xchg
cmp
inc
in
xchg
mov
xor
xchg
in
push
lods
add
xor
ja
jge
(bad)
mov
in
sbb
cs
test
cmp
push
push
in
inc
rol
(bad)
mov
les
fs
inc
outs
movs
push
jo
rol
add
in
pop
jg
adc
sbb
(bad)
cmp
mov
arpl
jmp
add
lock
cmp
jp
(bad)
gs
(bad)
xchg
pusha
test
mov
xor
jmp
das
aaa
dec
push
mov
jns
add
cli
sub
fistp
out
mov
pop
jae
test
push
cmp
pop
push
xor
out
mov
test
lods
clc
or
cli
mov
adc
adc
xor
int
or
pop
dec
imul
leave
icebp
add
push
inc
hlt
and
stos
aaa
fstp
std
mov
ins
mov
mov
adc
jbe
out
mov
sti
push
call
xor
inc
test
or
cmp
mov
ds
cmp
mov
jecxz
cmp
lods
lds
mov
in
outs
mov
jle
sbb
xchg
icebp
inc
sbb
push
leave
adc
cmp
sti
shl
pop
arpl
sbb
adc
fcmovne
add
jl
fst
adc
jmp
inc
sbb
inc
pop
fidivr
loop
js
inc
push
in
xchg
test
je
repz
lods
rcl
icebp
mov
fld
sub
sub
loope
clc
(bad)
sub
ret
out
aad
mov
repnz
inc
pop
cld
xchg
test
mov
cdq
into
into
outs
int3
ja
mov
cmp
and
fdiv
jbe
neg
std
mov
jbe
in
bound
(bad)
pop
jo
pop
sar
test
inc
pop
mov
push
jno
dec
scas
push
pop
push
pop
sbb
mov
sar
push
xchg
xchg
pop
xchg
push
mov
mov
adc
jno
xchg
cmp
leave
les
pop
jl
ret
addr16
push
call
mov
inc
es
rol
mov
adc
loopne
int
jnp
mov
stc
shr
mov
test
cli
cmp
cmp
fistp
xor
test
test
lds
in
pop
mov
aas
cmp
pop
(bad)
fcmovnb
cmp
xor
xor
xor
adc
enter
fucomp
mov
cdq
cdq
inc
sbb
mov
and
mov
add
xchg
call
xchg
cs
scas
jge
call
and
and
inc
dec
shl
jno
jmp
mov
and
adc
lods
fdivr
or
(bad)
mov
mov
pop
adc
sbb
pop
daa
scas
stos
aaa
pop
or
xchg
jmp
out
pop
in
in
in
push
adc
dec
lds
outs
in
mov
jecxz
sbb
in
idiv
cld
adc
dec
cmp
xchg
test
pop
mov
mov
mov
cld
xor
jae
xchg
push
arpl
sbb
idiv
sbb
in
fsubr
scas
mov
movs
mov
or
ins
jecxz
aam
in
jb
scas
(bad)
scas
aam
add
lods
push
push
and
mov
loopne
cbw
cdq
dec
sbb
and
scas
repz
imul
outs
loop
xor
in
(bad)
jl
retf
fwait
push
hlt
fdiv
shr
inc
dec
dec
cmp
lea
adc
jns
sub
mov
sbb
mov
mov
pop
popa
xor
call
add
mov
xor
cwde
mov
push
inc
push
cmp
sub
cmps
les
and
cld
sar
inc
sub
sar
sub
xor
aad
out
test
jp
stos
pop
cs
jmp
xchg
inc
mov
pop
and
(bad)
sub
push
inc
mov
xchg
push
jl
fs
cmp
or
lea
in
xor
mov
out
cwde
adc
push
pop
adc
push
out
inc
add
out
jns
mov
out
push
fisttp
lods
sub
jmp
ja
gs
shr
in
sbb
(bad)
scas
add
(bad)
movs
in
push
cdq
gs
hlt
ins
data16
cmps
out
cmp
mov
jae
(bad)
data16
jae
(bad)
pop
jecxz
xlat
and
xchg
arpl
push
out
repnz
fimul
stos
(bad)
imul
xor
imul
mov
pop
pop
and
pop
xchg
test
and
jno
mov
sub
or
mov
mov
out
mov
retf
scas
inc
mov
cmp
jns
outs
mov
push
and
in
int3
jo
xor
and
adc
movs
mov
lods
sar
mov
ds
xchg
(bad)
shl
aad
xchg
mov
jo
mov
mov
sbb
inc
sahf
inc
in
pop
jmp
gs
(bad)
pop
bound
push
add
push
and
lods
lods
mov
mov
dec
pop
adc
sti
in
xchg
adc
fst
div
add
mov
mov
mov
ins
sbb
xlat
scas
mov
rol
push
inc
adc
in
sbb
imul
mov
fbstp
sar
stos
sub
icebp
lock
push
jnp
(bad)
ficomp
test
les
sub
js
inc
push
sub
test
je
cs
sbb
adc
lock
test
std
mov
movs
cmp
shr
ja
jmp
out
inc
icebp
or
xor
and
fst
mov
icebp
lahf
iret
daa
(bad)
pop
mov
sbb
int
ins
out
add
(bad)
add
pusha
xchg
(bad)
loop
int
mov
int3
dec
lock
test
repz
fidivr
mov
sbb
sub
jno
sbb
jg
jmp
mov
sub
pop
retf
rcl
jns
loopne
mov
sub
stos
pop
dec
mov
cld
and
cwde
scas
sbb
(bad)
pop
cmp
imul
inc
mov
icebp
int
dec
dec
push
push
jbe
or
inc
xchg
cmp
cs
into
mov
in
push
popa
div
sbb
cmp
cdq
mov
scas
push
jno
ja
adc
adc
inc
mov
fs
nop
cdq
dec
dec
mov
mov
mov
iret
retf
test
xchg
pushf
scas
push
cwde
adc
push
dec
pushf
mov
sbb
xchg
jae
sbb
ret
mov
add
cmp
mov
test
bound
test
pop
and
lahf
xchg
pop
pop
es
in
enter
pop
repnz
dec
out
test
lahf
mov
mov
fucomi
jns
jmp
mov
push
fs
sub
cmps
sbb
jmp
lods
mov
cli
je
test
mov
mov
stos
in
jl
fdivr
inc
outs
nop
pop
push
aaa
inc
rcr
sbb
add
fiadd
inc
sbb
or
mov
push
loopne
mov
retf
jl
js
in
cmp
xchg
mov
lahf
fiadd
daa
adc
lahf
addr16
pxor
fbstp
sbb
add
stc
loop
sub
jmp
jae
into
in
in
call
test
and
push
loop
mov
ds
jmp
jg
movs
adc
std
push
or
jle
push
ror
mov
sub
jns
cmp
cmp
ret
outs
sbb
mov
movs
cld
pop
dec
mov
mov
xor
adc
and
fadd
(bad)
xchg
add
test
cs
jge
jo
dec
(bad)
jmp
mov
inc
pop
dec
rcl
push
movs
sbb
mov
mov
lods
mov
dec
neg
xchg
nop
daa
and
push
jecxz
js
icebp
adc
mov
sbb
dec
sub
push
call
adc
jo
data16
xchg
loop
cmp
not
ss
or
repnz
test
dec
into
imul
(bad)
(bad)
adc
mov
hlt
aam
adc
dec
sub
fist
sub
lea
test
push
add
push
retf
push
mov
pop
xchg
cwde
das
and
mov
int3
clc
in
push
aas
inc
push
adc
jl
fstp
sbb
stos
mov
dec
cmp
pop
lods
pop
mov
(bad)
lds
add
cs
jb
sub
mov
mov
mov
loopne
mov
jp
inc
clc
in
sar
cmp
cwde
mov
stos
jmp
cmps
imul
leave
cmp
out
dec
cmps
outs
cli
shl
inc
arpl
push
mov
test
cmps
test
sbb
inc
outs
pop
adc
popf
(bad)
(bad)
inc
push
pop
cmp
int3
fdiv
mov
lea
add
xchg
mov
mov
jo
mov
push
mov
ficom
sub
or
les
lock
push
cmp
sub
test
pusha
lahf
pop
mov
loope
pop
dec
cwde
test
mov
movs
test
es
add
addr16
daa
sbb
aam
inc
or
imul
mov
fisub
mov
and
mov
dec
cmp
add
mov
ret
mov
lods
data16
push
data16
xchg
ss
mov
mov
xchg
mov
adc
adc
popa
movs
and
and
pop
jg
fidivr
mov
mov
mov
jno
mov
fdiv
jle
mov
inc
mov
retf
mov
in
loop
push
fwait
dec
adc
sbb
jmp
pusha
adc
data16
mov
push
dec
push
mul
cmc
inc
mov
int
mov
or
rcr
xchg
cdq
dec
inc
fcmovb
mov
push
gs
pusha
js
mov
sub
jg
push
shr
inc
ret
mov
cmp
bound
int
xchg
hlt
add
adc
push
and
call
js
sbb
lahf
shl
and
push
out
(bad)
xchg
inc
mov
sub
addr16
jp
adc
out
fistp
aaa
es
int3
dec
test
pop
cmp
inc
xor
(bad)
mov
jno
outs
mov
pop
stos
jmp
mov
inc
(bad)
(bad)
adc
ins
xchg
in
test
shl
mov
push
mov
psubw
cmc
push
mov
es
inc
jp
push
jmp
pop
mov
push
mov
retf
cs
xor
mov
or
dec
das
xor
rcr
jbe
stos
sbb
pop
jae
fwait
sbb
cmps
inc
cdq
inc
xchg
jns
mov
mul
pop
jbe
jnp
xchg
and
push
(bad)
out
cmp
es
mov
xor
add
std
enter
jno
es
aam
frstor
jns
mov
sti
lea
retf
add
cmp
pop
retf
xchg
mov
inc
(bad)
je
push
loop
fisttp
mov
and
dec
add
push
ret
(bad)
jb
cmp
jae
sbb
stos
movs
das
test
cmp
sbb
sbb
mov
fdivr
jne
sbb
xchg
and
stos
sbb
dec
je
punpckhdq
sti
jno
mov
and
jp
push
shl
pop
cmp
push
and
cmp
xor
sbb
push
lods
xchg
and
sub
jge
push
mov
xor
or
fdivr
push
inc
add
neg
dec
pusha
loop
inc
jge
sub
gs
mov
aaa
push
retf
icebp
and
add
das
int3
call
call
pop
push
sahf
in
push
aaa
pop
xchg
std
not
sbb
jecxz
and
mov
lods
cmp
add
shl
xor
lea
pop
xchg
sub
push
xor
mov
popf
popf
fs
std
sub
inc
adc
push
sahf
fdivr
stc
repz
aad
xor
iret
dec
and
adc
leave
jmp
aaa
stc
rol
pop
dec
int3
inc
jge
cmps
push
fcom
sar
cmp
mov
stos
cmp
push
mov
lds
out
push
jb
stos
xlat
sbb
adc
movs
retf
fwait
sub
stc
lea
dec
mov
cwde
(bad)
jge
jo
pmullw
adc
push
cmc
pop
movs
sahf
push
or
xor
in
jecxz
bnd
data16
sar
cmp
or
mov
or
add
mov
cmp
sub
cmps
rcl
and
sub
sbb
pop
xchg
mov
jl
mov
inc
out
jle
cmp
outs
sar
inc
mov
into
das
js
test
mov
cmc
pushf
mov
iret
jge
sub
xor
ffree
and
fld
jmp
push
inc
aaa
jl
pop
mov
in
je
mov
(bad)
jge
in
push
test
inc
imul
dec
cmp
sub
(bad)
lock
jge
or
into
add
adc
popa
mov
fs
add
pushf
push
or
xor
mov
movs
and
hlt
add
mov
pop
jno
loopne
dec
ffree
mov
hlt
and
loope
xchg
lods
mov
mov
fistp
imul
(bad)
ja
xchg
loopne
rol
sub
sbb
mov
pop
cmp
jae
cmp
movs
fld
es
call
int3
sti
stos
repz
xor
mul
mov
pusha
or
push
fisubr
push
into
test
mov
addr16
xlat
jecxz
inc
rcl
(bad)
cld
sub
xchg
outs
jl
cmp
sbb
mov
mov
inc
xchg
(bad)
jns
imul
(bad)
dec
fiadd
repnz
pmuludq
inc
sbb
lods
jb
sub
inc
fldcw
ss
cmp
push
in
in
hlt
or
lahf
xchg
push
sbb
push
dec
loope
in
pop
aaa
add
inc
sahf
or
or
xor
xchg
sub
lods
sbb
arpl
mov
test
adc
xor
add
cmp
outs
das
adc
test
pop
out
mov
pop
push
adc
mov
jle
popa
inc
pop
cmp
sahf
call
cmp
daa
inc
leave
hlt
dec
xchg
aad
add
aaa
ret
add
mov
jno
out
pop
and
inc
cmp
stc
bound
repnz
mov
or
lds
cmps
sbb
call
push
popf
in
stc
pop
mov
xchg
and
mov
inc
push
and
or
xchg
mov
mov
cwde
(bad)
sbb
dec
fs
scas
adc
jge
ret
sbb
sahf
jb
sub
comiss
or
pusha
cs
push
in
jmp
pop
sbb
ret
xlat
fcomp
popa
push
dec
inc
jge
fisub
and
cmc
cs
loop
ret
mov
lea
inc
xchg
xchg
pop
sbb
out
mov
mov
test
inc
cmps
pop
shl
je
and
lea
and
dec
shl
inc
not
ret
mov
jle
sti
mov
jb
mov
ja
mov
jge
xor
dec
and
imul
jmp
rcr
imul
mov
pusha
test
and
lahf
stos
push
xlat
ror
sub
pop
rcl
fs
sar
inc
xor
(bad)
fsubr
mov
(bad)
xchg
xchg
xor
xchg
push
mov
sbb
mov
sub
cwde
mov
cli
jg
cmps
sub
mov
jl
pop
lds
mov
pushf
and
imul
outs
int
push
pusha
xor
xchg
xlat
push
ins
and
jns
adc
sbb
outs
adc
mov
ins
out
loop
or
push
add
fsubr
jle
shr
xor
aas
(bad)
sbb
mov
(bad)
jne
cmp
or
mov
lahf
or
sub
cli
pop
sbb
shr
pop
dec
fsubr
xchg
test
adc
xchg
fstp
push
leave
xchg
ss
adc
pop
movs
ficom
loop
call
mov
adc
out
fsub
push
adc
or
stc
jg
cmp
loopne
mov
icebp
sti
and
mov
cmc
adc
jmp
adc
gs
push
shl
ins
stos
fnsave
cmc
jle
cmp
movs
pop
out
xor
leave
mov
push
test
popf
xor
nop
sub
jbe
iret
sbb
ins
adc
mov
cmp
mov
mov
call
mov
sub
out
std
movs
push
mov
nop
jmp
cmp
je
sti
adc
stc
mov
pop
xchg
lock
retf
lock
mul
jl
push
das
scas
mov
mov
in
retf
cmps
js
cmp
push
loopne
cmp
frstpm(287
pop
into
jmp
mov
xor
mov
ret
mov
sti
dec
fiadd
in
add
mov
xchg
inc
sbb
addr16
jl
(bad)
lahf
and
out
and
fild
outs
adc
cmps
out
sahf
xor
(bad)
clc
adc
cld
stos
push
daa
into
das
pusha
sbb
and
scas
inc
xor
mov
or
imul
data16
test
(bad)
pop
sahf
push
push
pop
or
mov
push
ins
dec
lds
push
xor
loop
shl
jbe
repnz
into
fs
jmp
stos
ins
dec
pop
jl
retf
inc
out
mov
jmp
xchg
js
sub
movs
push
out
aad
adc
sub
retf
mov
xor
and
leave
mul
(bad)
sub
sub
xchg
push
cmps
mov
movs
mov
addr16
and
ror
dec
push
pop
sbb
sbb
ret
aas
aad
cs
mov
cmp
pop
jmp
int
push
mov
cmp
mov
popf
loopne
jmp
push
push
mov
leave
movs
mov
punpcklbw
aaa
mov
adc
not
jge
out
call
adc
push
sub
and
loopne
aad
ja
js
bound
emms
mov
or
lahf
sub
adc
cli
and
mov
ror
popa
pop
(bad)
(bad)
xchg
mov
scas
fadd
dec
or
mov
or
sbb
xchg
in
ret
daa
sbb
push
cmp
fwait
or
xchg
pop
lods
mov
sahf
jmp
in
xchg
jno
xor
pop
and
repnz
mov
sub
(bad)
cld
ja
dec
in
addr16
or
push
push
pusha
cmp
sahf
push
mov
adc
pop
pop
std
sti
add
mov
add
xchg
outs
pop
(bad)
frstor
sti
div
and
cmp
cmp
shr
jnp
ds
arpl
jle
(bad)
mov
and
imul
std
inc
mov
hlt
inc
push
ror
xor
pop
cmp
push
inc
or
ror
cdq
imul
pop
into
jns
lea
iret
push
ret
lahf
scas
dec
sub
pop
xchg
inc
xchg
cmps
push
cli
repnz
pop
cmp
sbb
repz
dec
fbstp
rcr
mov
hlt
lods
lods
ficom
pop
push
aam
inc
lods
ss
and
retf
pop
imul
outs
mov
xchg
das
sub
sti
cli
das
jb
jl
fdiv
xor
mov
retf
(bad)
push
xor
jmp
mov
stos
xor
stc
and
mov
outs
test
jae
ret
fmul
call
(bad)
sar
std
or
fiadd
cmps
mov
push
dec
mov
jmp
inc
pop
dec
jge
mov
add
push
out
(bad)
xor
test
mov
scas
dec
mov
mov
and
mov
popf
arpl
jnp
mov
jno
jb
(bad)
sar
sub
mov
setge
add
js
mov
rcr
mov
xor
cmp
xor
in
arpl
fs
jge
stc
daa
cmp
movs
loopne
out
and
add
xchg
inc
push
or
in
sub
ins
and
pushf
push
sbb
jns
push
icebp
daa
xor
cmp
mov
outs
sbb
sbb
jl
test
call
int3
(bad)
jmp
aaa
scas
test
cdq
jb
mov
outs
mov
icebp
jne
shl
cwde
test
inc
and
bound
dec
(bad)
and
mov
iret
into
adc
stc
push
or
mov
or
fs
scas
les
outs
xor
ror
mov
lods
mov
ret
xchg
xchg
scas
ds
lahf
push
and
add
les
cld
sub
outs
cmp
repz
shl
cwde
fst
and
div
add
ss
int
dec
cmps
xchg
retf
mov
lods
jmp
sbb
mov
sbb
dec
in
fidiv
push
mov
sub
cmp
and
inc
mov
nop
bound
adc
pop
xor
sub
push
(bad)
out
push
and
adc
xchg
aas
out
outs
jl
pop
mov
inc
push
dec
mov
shl
and
xchg
je
ret
pushf
test
jecxz
sub
mov
popf
push
imul
arpl
adc
mov
loope
hlt
fs
or
shl
pop
scas
sub
add
and
xlat
add
mov
adc
daa
es
jmp
test
aam
ins
or
xchg
adc
sbb
enter
adc
sbb
pop
leave
sbb
dec
cmp
mov
repnz
xchg
sub
push
js
in
aas
jecxz
and
(bad)
cmp
sbb
imul
ins
mov
add
dec
jp
jo
mov
imul
jo
retf
push
test
retf
gs
aad
push
xchg
inc
xor
mov
call
mov
mov
xor
data16
mov
test
jbe
push
outs
jnp
ds
mov
pop
sub
push
pop
retf
pop
(bad)
retf
out
push
push
int3
je
or
xchg
cwde
xor
fld
pop
mov
mov
add
sub
jl
push
adc
loopne
mov
leave
xor
cwde
add
out
inc
xchg
out
out
inc
das
jle
js
adc
or
js
fs
cmp
dec
pop
fadd
push
cmc
xor
add
mov
sbb
jbe
or
movs
aas
test
(bad)
test
cs
adc
test
dec
daa
or
test
repz
jb
sub
aad
dec
outs
adc
rcl
xchg
scas
jmp
and
push
rcl
icebp
sub
movs
leave
xlat
push
push
jo
iret
pop
inc
sub
sbb
repz
inc
pop
ret
add
mov
out
push
int
movsx
fucomp
ja
jbe
add
cli
ror
ins
mov
mov
(bad)
push
sub
pushf
pop
fisttp
sub
and
mov
sahf
fmul
fldcw
scas
out
popf
and
test
pop
mov
mov
in
aaa
loopne
pop
mov
pushf
adc
xchg
cmp
retf
ja
mov
outs
cdq
jmp
clc
fs
repz
xor
enter
or
repnz
xor
sub
ror
jl
test
adc
iret
jne
sbb
stc
xchg
adc
repnz
sub
idiv
cmp
push
es
test
inc
arpl
(bad)
xchg
xor
stos
cli
jecxz
js
rcr
and
cmps
mov
ret
push
xor
test
xor
dec
mov
add
lods
lea
lock
fs
fwait
das
jp
add
enter
data16
fwait
sbb
push
pop
xchg
repnz
outs
push
loope
pop
cmp
cs
(bad)
jp
ins
dec
outs
xor
push
mov
movs
pusha
in
lea
inc
cdq
fs
imul
sub
inc
daa
popa
fsubp
out
outs
rcl
inc
pop
fwait
outs
xchg
mov
int
jp
into
xchg
sub
mov
pop
int3
test
les
(bad)
inc
sub
jp
xchg
(bad)
jecxz
ss
(bad)
cmps
aaa
mov
lds
pusha
pop
ja
mov
or
retf
or
lahf
aas
sti
mov
out
lods
sahf
stos
dec
or
dec
mov
sub
ss
cmp
jae
imul
lods
dec
sar
jg
push
cmp
sbb
adc
cli
cmp
int3
test
in
sub
(bad)
repz
jecxz
call
xchg
fcmovbe
ja
xor
pop
xchg
adc
pop
mov
arpl
dec
popa
ds
fnstenv
xchg
jge
shl
add
or
or
mov
test
into
fmulp
mov
adc
mov
cmp
(bad)
out
sbb
bound
mov
std
fistp
pop
and
pop
pop
mov
(bad)
stc
xor
sbb
xchg
(bad)
push
xchg
test
mov
sbb
cwde
push
loop
mov
mov
loope
mov
or
lea
in
jge
fucomp
int
mov
pop
push
dec
or
fs
mov
mov
imul
xor
test
or
and
or
(bad)
int3
push
adc
addr16
mov
pushf
stos
sub
pop
xchg
pop
dec
es
mov
in
ins
(bad)
scas
and
xchg
aaa
push
pop
cs
cs
mov
xchg
lahf
cdq
mov
pop
call
daa
add
or
inc
jo
in
dec
jnp
enter
ret
sbb
dec
add
int
bound
mov
mov
data16
xchg
ret
pop
and
adc
mov
push
test
popa
(bad)
ds
lock
nop
mov
int
add
mov
xchg
or
in
pushf
mov
push
lods
out
adc
jno
sar
pop
mov
jmp
xchg
test
or
frstor
popa
sub
lds
jnp
cmp
sub
xchg
cmp
push
and
xor
int3
push
retf
fwait
int
mov
and
jl
jg
or
cmp
pop
and
push
or
or
dec
add
mov
addr16
ins
cmp
ficom
std
pushf
inc
inc
bound
push
mov
lea
sub
jne
mov
cmp
mov
inc
jbe
mov
aam
out
stc
jp
test
xchg
ror
in
or
(bad)
xor
sub
in
rol
lahf
mov
mov
jmp
inc
mov
jmp
adc
js
cmp
fmul
pop
je
jmp
mov
inc
mov
jp
or
mov
dec
inc
pushf
(bad)
mov
sub
arpl
rol
jb
dec
dec
xor
inc
mov
mov
int3
mov
lock
arpl
jmp
clc
stos
scas
vmwrite
jmp
xchg
(bad)
push
rol
xor
jecxz
sub
dec
stos
pop
push
outs
mov
and
repnz
lods
fstp
adc
push
jb
(bad)
and
inc
xor
dec
les
xchg
pop
mov
lahf
xor
cmp
xor
push
adc
int3
callw
dec
push
sub
mov
imul
push
xchg
mov
sbb
xor
inc
mov
add
dec
xchg
mov
or
repnz
mov
ins
mov
in
cmps
mov
shl
mov
(bad)
in
jge
mov
sti
mov
xchg
sub
lea
dec
push
add
dec
outs
or
daa
fisub
cld
mov
inc
repnz
mov
add
or
das
jl
jge
retf
jmp
lock
icebp
out
div
out
test
lods
std
gs
fld
mov
aaa
fld
adc
xchg
dec
cmp
adc
mov
gs
pop
int3
mov
adc
movs
test
nop
imul
aaa
xor
std
xor
inc
or
fsubr
inc
mov
xchg
(bad)
lock
adc
dec
test
sub
mov
mov
and
ds
jmp
xchg
cmp
scas
shl
les
call
out
repz
(bad)
cdq
xchg
cmp
xor
or
fxch
movs
test
sub
mov
pop
add
pop
mov
pop
sar
pop
sbb
movs
in
fbstp
out
sub
popa
sub
mov
pop
mov
das
dec
ins
mov
jle
sub
pop
ret
xchg
fisub
lods
les
pop
leave
in
cmc
mov
pop
mov
xchg
sub
xchg
stos
jp
jle
push
or
or
leave
dec
jns
(bad)
jp
xor
stos
inc
sbb
mov
loopne
mov
add
pop
int
pop
mov
and
sbb
dec
dec
ret
push
shl
pop
ficom
imul
lods
mov
std
js
sahf
push
dec
xchg
hlt
int3
jne
push
sub
adc
ret
mov
add
jne
cs
inc
push
imul
ins
data16
inc
inc
sub
jnp
ret
and
mov
ret
hlt
xchg
pop
rol
jl
xchg
sbb
xor
fldenv
int
mov
aas
jnp
dec
cwde
and
pop
clc
add
jb
cmc
dec
ins
fwait
inc
pop
cmp
push
jg
cdq
daa
xchg
popa
popa
push
xchg
aaa
ins
xor
or
js
sbb
mov
popa
inc
cmp
mov
push
call
jge
aas
movs
call
pop
fstp
lods
add
ins
stos
ret
fxtract
leave
mov
pop
sahf
rol
push
jle
leave
adc
psrlq
movs
pop
fs
push
push
int
pop
inc
ds
add
sbb
aam
not
cwde
push
mov
jno
dec
cmps
loope
adc
in
push
and
dec
dec
lods
inc
push
xchg
fld
scas
loopne
icebp
(bad)
sub
xchg
and
std
inc
xor
inc
hlt
jne
dec
sbb
mov
cmp
mov
push
loop
cmc
(bad)
shl
pushf
push
fdivr
cmp
popf
jo
and
lock
lock
xor
loopne
lods
dec
add
cmp
adc
int3
and
pop
add
xor
mov
fwait
pop
inc
jbe
inc
xlat
dec
imul
jmp
icebp
test
cli
pop
das
popf
add
inc
pop
aaa
xor
fwait
cld
adc
mov
inc
sub
cmps
push
and
jb
outs
ss
dec
sti
pusha
popa
xchg
fisttp
ror
jl
push
adc
xor
inc
aad
push
jns
arpl
and
(bad)
sti
pop
int3
xor
popa
cmps
xor
lahf
enter
push
pop
dec
ror
fcomip
pop
addr16
outs
lea
sti
adc
daa
pop
add
push
mov
xchg
jmp
xor
cmc
xor
imul
pop
not
xchg
fist
cmp
shl
fisubr
inc
cld
lds
rol
movs
xchg
push
stos
lock
loopne
mov
pop
jmp
lock
push
xor
jns
mov
sbb
mov
and
adc
jle
push
out
sbb
lea
xchg
add
iret
sbb
ret
xor
sbb
scas
add
xchg
out
inc
fild
mov
pop
xchg
cli
or
les
add
xchg
jp
cmc
jo
(bad)
enter
push
add
lods
push
jne
(bad)
cs
jmp
and
icebp
(bad)
jg
jge
mov
lods
(bad)
fbld
fdiv
retf
jno
mov
loop
mov
lods
imul
je
sub
mov
xchg
jg
sbb
jbe
dec
pusha
push
(bad)
sti
sub
cmp
ins
stos
mov
mov
dec
push
inc
sub
retf
js
(bad)
mov
mov
aad
ins
cmc
daa
mov
jp
mov
jmp
inc
pop
or
aad
mov
mov
call
mov
test
and
(bad)
aas
adc
pop
lods
jb
push
in
mov
ds
mov
push
pushf
mov
ret
inc
test
mov
mov
or
int3
(bad)
cld
outs
add
lods
(bad)
shl
or
jno
jg
xlat
xchg
test
mov
out
call
push
push
popf
aas
jo
cmps
loope
jnp
inc
mov
lods
sbb
(bad)
fld
std
leave
xchg
shl
call
jno
aad
pop
lods
pusha
adc
in
scas
fdivr
or
mov
js
inc
jle
sbb
cs
xchg
sub
dec
in
inc
jno
xchg
mov
jmp
push
test
push
adc
out
aas
retf
jmp
std
hlt
(bad)
movs
push
fistp
adc
push
pop
in
ins
dec
icebp
adc
jge
dec
rcl
xchg
bound
dec
loope
cld
out
or
in
mov
mov
sub
dec
(bad)
aaa
pop
sbb
stos
jle
je
dec
pop
cli
pop
mov
leave
mov
cmc
cmps
arpl
xor
lahf
adc
retf
mov
sub
jl
push
into
cs
fcmovne
inc
retf
stc
adc
jb
mov
or
aam
push
pop
add
jecxz
in
cdq
push
jnp
push
fstp
test
inc
ins
pusha
adc
fstp
mov
sti
or
std
jmp
pop
inc
loop
loop
xor
xchg
xor
lahf
shl
leave
jge
dec
lods
lock
push
arpl
sub
cdq
push
push
stc
fdivr
push
xor
mov
add
jo
test
mov
mov
inc
enter
mov
(bad)
xchg
test
adc
cld
or
add
sbb
xor
inc
xor
pop
nop
adc
xchg
pusha
cmp
dec
sbb
idiv
push
add
and
mov
inc
outs
mov
add
scas
or
fnstcw
into
push
mov
pop
addr16
jnp
push
xchg
ins
ror
push
lds
pusha
adc
and
adc
mov
jns
retf
sub
call
or
mov
retf
inc
push
scas
xor
sbb
dec
loopne
cmp
lods
enter
cmp
aad
cmp
adc
cmc
xor
add
or
(bad)
shl
dec
stc
sbb
jmp
sti
dec
xor
mov
loopne
sub
pop
jb
cmp
inc
add
in
imul
(bad)
mov
std
outs
repnz
jmp
dec
addr16
es
ret
(bad)
ss
jmp
mov
push
div
movs
push
fnstcw
push
or
cmps
imul
in
mov
stos
and
bound
leave
dec
sbb
call
leave
in
sti
mov
inc
daa
pop
imul
aam
mov
imul
lock
adc
mov
push
push
jmp
outs
and
dec
js
pop
sbb
gs
loope
pop
cmp
pop
adc
jb
arpl
dec
and
push
mov
icebp
test
mov
test
add
(bad)
jns
pushf
push
and
sbb
lods
ins
loopne
inc
sar
pop
push
mov
jl
imul
aas
mov
mov
(bad)
inc
movs
inc
push
stos
int3
add
adc
in
cmp
inc
cmp
mov
inc
cld
outs
pusha
push
hlt
scas
jle
repz
(bad)
cld
xchg
cmp
(bad)
sar
mov
cmp
xchg
dec
xchg
mov
xchg
adc
cmp
mov
push
push
adc
cmp
mov
jl
cmp
jle
mov
mov
mov
xchg
(bad)
scas
jne
call
repnz
add
pop
leave
retf
jne
loopne
jne
mov
retf
bound
inc
pop
mov
adc
stc
xchg
in
pop
xor
into
sbb
push
sbb
adc
repz
je
mov
jecxz
xlat
dec
sbb
(bad)
cmp
mov
cmps
pop
xlat
mov
lock
rcr
clc
fld
js
loopne
mov
int
aad
cmp
(bad)
cmp
jns
ja
push
mov
add
add
rcr
imul
xchg
mov
xchg
xor
push
jne
mov
mov
push
mov
and
cdq
and
inc
mov
xchg
icebp
shl
imul
inc
mov
mov
mov
adc
mov
xor
stc
cdq
cmc
je
jbe
dec
shl
mov
sbb
mov
mov
fcmovu
jmp
pusha
ret
lods
push
xor
xor
dec
or
sub
dec
in
push
icebp
sbb
setae
jg
or
mov
scas
adc
push
fstp
mov
aaa
sbb
push
sub
pop
or
in
leave
aam
test
arpl
xor
xchg
popf
mov
imul
out
mov
cs
jbe
jmp
stos
jne
mov
(bad)
pop
loope
and
cmp
jecxz
test
iret
xor
sbb
movs
push
cmp
pop
rcr
in
or
dec
jmp
jns
rol
neg
inc
loope
sub
hlt
sub
outs
data16
sbb
dec
or
fnstcw
mov
outs
adc
out
sub
mov
pop
(bad)
or
push
jno
cmps
add
pushf
lea
fistp
sub
data16
bound
mov
lods
stos
lock
dec
xchg
push
pop
ins
xor
sbb
inc
loop
lods
add
mov
pop
push
aad
mov
gs
and
push
mov
clc
ret
rcr
test
mov
xchg
(bad)
sti
mov
es
push
mov
jbe
jle
cmp
ds
arpl
inc
repnz
arpl
push
sbb
cdq
test
xor
mov
(bad)
adc
pop
(bad)
sub
xor
mov
cmc
in
and
in
xor
mov
sub
mov
dec
dec
cdq
sub
add
inc
(bad)
jb
pop
push
cdq
dec
add
cdq
iretw
retf
ja
into
jmp
aaa
scas
mov
push
es
jns
call
mov
dec
sbb
ins
mov
mov
fist
adc
mov
adc
lahf
stc
int3
mov
inc
(bad)
add
cli
aam
jp
add
loop
inc
not
and
sti
ins
sti
push
and
and
mov
xor
inc
(bad)
outs
add
ret
mov
jne
iret
aas
push
mov
aad
inc
pop
xchg
xor
aas
push
pop
xor
jns
sti
adc
(bad)
dec
mov
nop
xlat
retf
xor
arpl
aam
imul
sub
adc
mov
mov
push
js
(bad)
out
xor
xor
js
mov
out
into
sbb
xlat
mov
nop
fcom
sub
cli
jg
je
fwait
pop
jmp
mov
inc
adc
mov
pop
ja
das
addr16
cmps
inc
mov
sub
mov
movs
jecxz
fwait
shr
add
xor
jne
(bad)
sub
mov
dec
ins
addr16
repnz
dec
js
mov
into
cmp
jno
or
mov
mov
fwait
shl
outs
sub
mov
repnz
test
mov
retf
mov
mov
jb
hlt
jle
scas
xchg
jl
push
sub
data16
ins
cmp
jnp
sub
gs
movs
jmp
into
aam
add
mov
retf
icebp
icebp
in
sahf
mov
push
in
pop
sbb
cmp
nop
outs
inc
push
loopne
loope
outs
enter
dec
inc
out
mov
adc
bound
mov
repz
xor
dec
fs
pop
pop
lock
ins
mov
inc
outs
mov
ins
or
imul
lds
cmp
pop
and
mov
add
popa
repz
jae
cmp
rcl
fcmovb
dec
inc
add
add
mov
fdiv
jp
lds
ffree
shl
jne
movs
push
jnp
aaa
and
fiadd
lds
ror
loop
stos
in
adc
imul
cmc
jns
psubq
hlt
pop
stos
sub
inc
arpl
sub
cwde
call
mov
dec
retf
push
cmp
mov
fisubr
push
loopne
or
imul
jge
sub
setnp
xchg
dec
fidiv
out
rol
int
retf
jle
push
xor
jmp
add
pop
lods
mov
dec
mov
fs
xor
(bad)
cmp
jge
pop
pop
xlat
call
enter
and
sub
dec
aas
jmp
sub
xor
out
jmp
das
dec
adc
xor
cmp
ja
jnp
jecxz
lock
addr16
out
je
dec
push
into
pushf
sbb
mov
out
add
fbstp
(bad)
mov
movs
pushf
sub
mov
and
and
movs
pop
dec
(bad)
aam
movs
test
ss
sub
gs
xor
xchg
add
cmova
std
cmc
xchg
push
jmp
data16
xor
inc
fwait
aad
jbe
xchg
push
xchg
rol
push
aad
mov
pusha
fdivr
sub
nop
push
sub
rcr
call
ins
jle
jne
iret
push
xchg
xchg
or
adc
jbe
fiadd
les
clc
pop
cli
sbb
mov
imul
adc
or
mov
pop
fst
or
sub
cdq
arpl
sahf
mov
mov
mov
mov
mov
inc
jg
std
shr
cmc
movs
repz
xor
daa
add
cli
mov
cmc
lods
push
xor
movs
(bad)
push
mov
inc
sub
or
mov
repz
rcl
idiv
stos
mov
cmp
and
jmp
mov
imul
xchg
sbb
cmps
sbb
add
shr
(bad)
addr16
cmp
mov
fnsave
jns
sahf
inc
aas
ja
push
jns
push
and
popa
jns
push
or
loope
sbb
jbe
rcl
dec
mov
mov
gs
pop
sub
out
inc
mov
push
aas
ret
dec
test
out
jle
dec
mov
mov
retf
inc
pusha
jl
pop
retf
sbb
std
jmp
fdivr
repnz
ins
and
mov
(bad)
shl
int3
mov
imul
push
inc
or
dec
xchg
test
lds
stos
test
add
push
sub
mov
call
cdq
pop
push
ins
sub
push
(bad)
cmp
test
sub
add
std
pusha
popf
stos
mov
(bad)
popf
scas
mov
icebp
push
lods
lock
out
jecxz
or
out
push
int
xchg
addr16
inc
xchg
lahf
cmps
xor
mov
mov
aas
test
aad
xchg
and
mov
pop
and
sub
pusha
add
loope
dec
add
fadd
push
in
cmp
add
xor
leave
fldcw
stos
rcl
repnz
push
shl
mov
pop
pop
adc
and
movs
and
sti
mov
jmp
das
gs
pop
(bad)
retf
mov
cmps
cmp
test
cdq
mov
imul
xor
push
pop
sub
mov
pop
lahf
xchg
sbb
and
jae
jmp
daa
xchg
in
cwde
daa
out
jbe
lds
gs
scas
lea
inc
in
clc
push
push
ja
adc
retf
mov
cmc
shl
push
mov
jo
push
xchg
jmp
pop
enter
push
xlat
out
ins
push
sub
jge
sbb
enter
icebp
mov
push
jle
push
sar
je
inc
and
hlt
imul
loop
mov
(bad)
and
stc
xor
dec
and
movs
xchg
std
pop
mov
add
sbb
sbb
(bad)
push
popa
pusha
repz
push
ja
add
ja
das
call
adc
test
and
mov
jp
loop
inc
jb
jecxz
sti
push
movs
push
cwde
jne
inc
pmulhuw
loopne
or
stos
mov
adc
sub
(bad)
xchg
xchg
xchg
cmc
adc
or
add
inc
ds
dec
test
fcmovbe
iret
fcmovbe
lahf
ins
pop
rcl
xchg
mov
push
call
js
add
gs
sub
jbe
dec
je
xor
inc
(bad)
cwde
inc
push
push
outs
xor
dec
inc
ror
push
(bad)
shl
adc
and
sub
test
mov
jecxz
movs
mov
jecxz
mov
jns
inc
cdq
jle
pop
sub
stos
add
cmp
loop
mov
xor
js
or
mov
sbb
cmp
sahf
les
into
in
mov
fs
inc
mov
test
ds
push
or
fisubr
mov
xchg
cld
je
jl
ins
in
aad
pop
enter
xchg
out
cmps
fbstp
push
cmp
push
aam
pop
loope
das
xchg
outs
stos
inc
int
or
pushf
jmp
adc
out
nop
jmp
rcr
repz
sub
ror
jg
jns
sti
xor
int
cmps
cmp
ins
or
(bad)
cmps
jecxz
cli
pop
push
mov
ror
pop
jns
push
scas
dec
ss
stos
and
sti
data16
sub
loop
xchg
xor
jmp
cmp
inc
mov
pop
imul
jne
mov
jns
add
in
push
xchg
inc
xchg
lods
pop
neg
shr
inc
mov
fst
test
pop
(bad)
(bad)
cs
ins
sub
js
inc
push
pushf
xchg
sub
xchg
popf
mov
call
cmp
adc
mov
mov
jecxz
dec
mov
add
lea
aad
lock
jae
lods
mov
add
add
sub
lods
inc
mov
retf
mov
mov
loope
sub
or
movs
mov
pop
int
stos
loopne
mov
push
mov
arpl
lods
mov
xchg
retf
jp
call
shl
and
inc
stos
mov
leave
in
add
ficom
jns
fs
lds
enter
add
js
mov
mov
push
and
pop
(bad)
sub
outs
outs
jmp
call
push
adc
cli
xchg
sbb
mov
mov
push
clc
aam
sub
inc
push
out
xor
scas
lds
mov
stc
dec
mov
push
(bad)
js
ja
and
or
jecxz
mov
and
pop
sti
cld
cdq
xor
push
iret
sbb
push
loopne
movs
sub
addr16
mov
cmps
mov
pop
int
nop
mov
jecxz
mov
iret
fimul
jno
leave
xor
int3
inc
mov
sbb
push
add
cmps
dec
or
mov
imul
sbb
test
mov
or
std
and
adc
cwde
and
das
push
jnp
sub
sahf
pop
ins
fwait
cld
pushf
jmp
shl
aas
neg
or
inc
mov
push
pushf
aaa
xlat
pop
loope
rcr
mov
xchg
sub
mov
cmp
sbb
cwde
xchg
(bad)
mov
sbb
ret
cli
test
mov
xchg
arpl
aaa
mov
les
outs
scas
inc
stos
push
add
leave
scas
sti
adc
xchg
cld
add
xchg
sar
xchg
sahf
adc
jmp
sbb
(bad)
mov
push
xchg
mov
lahf
(bad)
lock
cmc
imul
sbb
inc
mov
jg
dec
xchg
jecxz
pop
sub
push
int
push
scas
je
neg
push
shl
xor
and
mov
inc
ss
jmp
arpl
fsubr
or
cdq
lea
in
jge
pop
add
imul
inc
mov
ss
in
cmc
add
mov
mov
ret
mov
xor
xchg
and
or
ror
(bad)
sbb
adc
pop
pop
mov
lea
hlt
int
adc
sub
lods
clc
mov
or
push
xchg
retf
aas
and
dec
pop
lea
movs
push
fwait
shr
jne
(bad)
and
ret
leave
jmp
jg
retf
jmp
out
push
inc
inc
xchg
dec
sub
sbb
loope
dec
fwait
sub
pop
cdq
pop
fs
jne
dec
outs
add
dec
inc
in
push
sub
cmps
mov
jmp
bound
adc
ins
cmp
adc
push
jne
adc
pshufw
test
dec
or
jp
xor
iret
pop
fcomp
mov
ins
std
in
xor
pop
sbb
pusha
pop
and
sub
cmp
(bad)
aad
leave
pop
fdiv
sbb
jae
(bad)
and
aaa
push
or
xor
push
add
(bad)
or
sti
adc
enter
scas
shr
dec
jge
call
add
dec
add
movs
ds
fld
in
fdiv
pop
mov
xor
jbe
lds
outs
sti
xchg
jp
ret
les
inc
mov
mov
mov
add
into
in
dec
inc
leave
repz
(bad)
rcl
fwait
das
dec
or
mov
adc
mov
mov
adc
push
out
mov
jno
jns
add
rcl
lea
arpl
int
push
in
cmc
lds
jbe
mov
fndisi(8087
and
inc
ins
mov
or
push
sub
add
adc
ins
sub
xchg
and
iret
sub
add
adc
rol
mov
push
cld
sub
push
mov
leave
push
shl
mov
mov
fidivr
or
or
cld
mov
rcr
lds
ret
push
pop
xchg
xchg
fwait
outs
ret
test
pop
dec
popf
stos
popa
cmp
cmp
call
inc
sbb
fist
(bad)
repz
not
xor
jae
ds
xchg
enter
or
sub
sbb
adc
sar
outs
xchg
lahf
je
mov
popf
cmp
jae
dec
iret
and
mov
fnstenv
aam
inc
jno
arpl
sub
or
xchg
data16
out
arpl
and
jl
add
mov
sub
xchg
loop
adc
pop
fwait
lods
rcr
push
and
int
jecxz
aaa
fs
adc
mov
cwde
jmp
pop
lahf
retf
jge
cmp
dec
jp
repz
mov
jp
jmp
rol
lahf
cld
hlt
adc
adc
or
lea
add
int
xlat
mov
pop
mov
push
imul
stos
jb
push
xchg
xor
cld
sbb
sub
enter
in
(bad)
retf
cmp
fsub
pop
or
sub
retf
or
or
xchg
push
push
mov
add
aam
out
icebp
out
dec
pushf
pushf
jecxz
adc
cdq
inc
arpl
push
mov
adc
dec
adc
cmp
push
push
popf
and
arpl
mov
(bad)
push
xchg
pop
pushf
hlt
adc
ins
sub
movs
aad
cld
fld
sub
cld
ret
ss
je
sti
cmp
sbb
aaa
cmp
shr
cdq
cwde
jg
mov
push
sbb
pop
adc
dec
sbb
rcl
xchg
mov
dec
adc
cmp
pop
pop
cli
xchg
pop
aas
mov
iret
jp
jns
push
cmp
retf
out
ret
iret
push
jmp
add
movs
pop
add
loop
or
mov
push
inc
pop
inc
test
add
iret
inc
ins
retf
inc
mov
mov
lea
imul
sahf
cli
xor
fldenv
lods
cmp
add
out
sbb
fdiv
xchg
adc
cmp
xchg
repnz
(bad)
loopne
in
es
lock
push
enter
inc
xor
push
ds
mov
loope
in
hlt
in
cdq
adc
cmc
xor
bound
dec
jg
add
(bad)
leave
shr
sbb
and
cmp
jge
inc
bound
jle
sbb
movs
or
je
in
loope
icebp
mov
sub
cmp
xor
sbb
cs
ret
xchg
xchg
jb
cmps
shl
fcomp
push
shl
test
icebp
inc
adc
out
cmps
pop
rol
mov
sub
jecxz
xchg
or
shr
daa
rcr
push
push
cld
inc
jo
jmp
rol
mov
inc
mov
aas
dec
test
(bad)
push
ins
xchg
xchg
jnp
dec
sbb
int
add
call
mov
outs
pop
lahf
(bad)
xor
pop
movs
dec
outs
ret
pop
fwait
jb
out
lods
dec
adc
or
(bad)
nop
sub
mov
push
sbb
jne
fwait
sub
das
clc
add
sti
(bad)
and
mov
adc
out
mov
dec
mov
jmp
or
lods
stos
(bad)
(bad)
sbb
adc
enter
sub
shl
aad
cmp
xor
mov
retf
jno
outs
jp
pop
ror
mov
lods
stc
or
fdivr
retf
jne
ins
adc
in
mov
or
in
push
xlat
lods
push
popf
movs
and
neg
(bad)
ins
inc
aam
push
pop
and
xor
adc
cmp
xchg
imul
xlat
int3
pop
outs
pop
pop
and
inc
lea
jae
pop
cmp
iret
les
cmp
test
imul
xchg
test
jns
xchg
in
hlt
xor
xor
xlat
nop
or
das
mov
in
clc
adc
push
out
adc
jmp
outs
jecxz
adc
xchg
inc
add
(bad)
pop
call
sar
mov
stc
iret
hlt
push
daa
rcr
pop
(bad)
in
add
dec
push
push
add
mov
mov
add
fsubp
aam
xor
outs
push
shr
sub
sbb
imul
push
jl
push
popa
adc
in
mov
call
xchg
or
pop
lds
pop
int3
mov
ret
retf
fwait
or
clc
lahf
dec
fwait
stos
xchg
out
xor
pop
sar
add
pop
and
add
mov
btc
push
imul
cli
ret
aam
scas
stos
shl
call
in
mov
js
dec
or
ficomp
test
xchg
gs
mov
adc
cmps
or
rcr
outs
jb
cmp
push
jmp
mov
(bad)
out
sbb
ret
xchg
pop
mov
popf
xchg
sbb
mov
shl
jmp
and
jecxz
push
mov
aas
not
cmp
loope
sti
out
cmp
rol
add
fwait
std
or
dec
aam
mov
sbb
bound
push
cdq
cli
outs
sub
cdq
pop
jmp
adc
cmps
sbb
jne
icebp
pop
mov
outs
add
loopne
mov
adc
add
ins
enter
adc
neg
sub
out
add
rcr
inc
mov
and
add
cmp
in
mov
test
inc
or
sbb
inc
add
and
into
add
sahf
outs
push
pop
ja
mov
fisttp
shr
mov
mov
scas
adc
cs
loop
cmp
jle
pop
test
loopne
mov
popf
push
and
rol
lea
test
jle
or
rol
ss
dec
jmp
jmp
jo
test
loopne
(bad)
fsubr
sbb
fucomi
xor
push
add
jmp
sbb
or
push
scas
nop
cld
add
fst
and
xlat
add
or
xor
int
adc
pop
mov
mov
or
mov
stc
push
into
push
dec
in
dec
ins
cmp
call
lods
ins
mov
jno
lea
cmp
sti
ss
jg
push
(bad)
iret
pop
pushf
jmp
cdq
and
pop
repz
fs
popf
dec
retf
ins
cmp
jle
xlat
push
rcr
push
mov
lahf
jle
aad
retf
popf
imul
xor
add
sub
sub
jmp
or
inc
lsl
or
fstp
push
mov
mov
pop
into
push
test
add
xlat
xor
in
in
mov
sahf
and
(bad)
dec
dec
(bad)
cmp
or
loopne
xor
stc
mov
fcom
pop
loope
ret
sbb
cs
fistp
(bad)
mov
shl
sub
(bad)
mov
jo
add
or
push
(bad)
arpl
(bad)
mov
std
add
adc
sahf
arpl
dec
and
mov
lahf
mov
fcomi
fidivr
and
das
lock
rcl
iret
fsubrp
scas
pop
add
and
jmp
xchg
pop
xchg
add
xchg
add
mov
daa
sbb
movs
dec
add
and
je
mov
in
mov
and
popa
sub
imul
int
push
mov
pop
or
std
lods
outs
(bad)
xlat
test
(bad)
in
out
js
ds
fprem
(bad)
xor
stos
lahf
bound
adc
add
mov
and
je
and
push
mov
cmp
mov
int3
cmc
mov
mov
xchg
mov
gs
mov
cdq
(bad)
jmp
call
lea
dec
cli
jne
iret
and
jb
into
sahf
jecxz
mov
pushw
aad
ficom
push
cmps
les
xor
and
push
mov
add
in
mov
sahf
jae
repnz
sub
adc
loopne
repz
mov
push
pop
out
push
cmp
test
test
xor
xchg
leave
mov
push
retf
cs
es
push
scas
mov
lods
(bad)
jne
jae
aam
jae
add
test
out
jmp
cwde
out
mov
mov
jns
pop
and
aam
adc
sbb
sub
daa
(bad)
cs
ret
das
mov
jmp
imul
cmc
jecxz
aad
iret
(bad)
sbb
and
mov
sahf
dec
and
pop
jg
sbb
or
mov
daa
stos
mov
mov
data16
or
std
add
nop
cs
shl
mov
jge
xchg
and
cmp
and
xor
push
sub
dec
pop
call
aas
adc
or
out
adc
and
sbb
aas
leave
ds
sbb
dec
mov
test
sub
pusha
pop
mov
int
jge
shl
and
mov
daa
push
or
sbb
cmps
idiv
(bad)
mov
imul
or
(bad)
xor
xor
jae
ja
dec
pop
bound
ins
loop
cmp
mov
jae
mov
jbe
in
mov
stc
ror
adc
jp
not
cmps
mov
inc
mov
jbe
cmp
xor
outs
jno
inc
adc
lds
rcl
xchg
stos
pop
neg
(bad)
cmps
mov
popa
cmp
pop
pop
jno
jne
fwait
hlt
rol
cmp
cmp
stos
nop
mov
scas
rcl
jae
movs
cmps
xlat
inc
jp
mov
js
aaa
fsub
fldcw
xchg
repz
jle
xor
mov
jnp
pop
mov
dec
imul
cmp
mov
mulps
add
mov
xlat
pushf
test
ret
pop
jae
mov
inc
(bad)
jns
arpl
outs
mov
ret
inc
mov
aad
jae
shl
xor
jno
fmul
cdq
jo
xor
popa
arpl
jne
in
mov
aas
pop
adc
xchg
sbb
sub
adc
jl
leave
jl
nop
leave
out
pop
mov
xchg
into
(bad)
movs
rcl
lock
sub
xor
mov
cmp
inc
inc
retf
mov
sub
mov
sub
sub
dec
(bad)
movs
jo
sbb
lahf
inc
mov
jns
xor
xchg
adc
mov
cmp
mov
mov
shl
jp
xchg
and
jne
xchg
fdivr
cmps
or
in
xchg
cmps
js
inc
inc
(bad)
xor
lea
std
imul
inc
arpl
mov
in
sbb
xchg
cmp
xor
test
in
retf
adc
mov
cmps
loope
or
cmp
cmp
shr
je
mov
movs
fild
cmp
adc
adc
pop
out
movs
test
and
dec
test
and
lods
aaa
mov
mov
adc
push
pop
fdivr
ret
xchg
jno
push
dec
inc
cdq
and
aad
dec
popf
shl
push
or
sub
aad
addr16
lea
mov
xchg
xor
inc
mov
iret
xchg
mov
add
and
(bad)
cld
cmp
aas
shl
loope
dec
mov
xchg
or
ins
movs
ret
and
test
add
out
cmp
icebp
dec
xchg
scas
(bad)
xor
fisttp
(bad)
je
jl
mov
retf
push
cs
dec
or
and
fucomip
mov
scas
ja
or
stos
add
movs
lods
mov
cmp
lock
and
fbstp
push
jmp
inc
sub
push
push
sti
push
xor
int
sbb
icebp
cmp
movs
aam
jmp
mov
inc
test
daa
push
sub
call
(bad)
mov
mov
jae
jmp
scas
add
pop
lock
jmp
fisttp
pop
mov
repnz
sahf
push
cmps
mov
sbb
jno
out
cmps
out
sbb
push
jb
sbb
dec
iret
pop
lods
enter
fcmove
pusha
mov
mov
ror
aaa
xchg
sbb
add
cmps
or
adc
mov
cmp
xchg
daa
mov
inc
cwde
jo
out
jle
cli
inc
jno
jmp
mov
mov
add
sub
jbe
adc
in
xor
add
jmp
xchg
xchg
loopne
mov
xchg
enter
push
ret
retf
push
(bad)
int
fwait
test
iret
sbb
sub
push
mov
retf
xor
mov
popf
iret
outs
test
cmp
add
cmps
scas
push
or
jmp
ret
pause
mov
xor
xchg
sub
and
mov
xor
mov
jg
lods
repz
pop
pop
int
cs
mov
jns
call
cs
and
jae
movs
out
jp
add
stc
ds
cdq
ss
rcl
lods
sbb
inc
jle
ins
mov
or
sub
int3
xchg
jge
or
outs
and
cmps
sub
into
pop
inc
call
in
ror
pop
xchg
outs
lods
bound
rcl
pop
aam
sti
mov
les
call
dec
mov
adc
jg
sub
rcr
mov
cs
xchg
mov
push
inc
fsub
stc
jg
and
pop
add
aas
push
call
js
call
retf
inc
push
cmp
hlt
lods
inc
jae
push
xchg
mov
add
mov
loope
push
dec
cmp
mov
inc
dec
dec
sub
mov
xchg
mov
adc
jecxz
mov
aad
fwait
or
cdq
xchg
pushf
ss
inc
push
cli
or
mov
retf
and
mov
jno
inc
imul
ins
xchg
popf
mov
mov
mov
jns
in
inc
cmp
je
jle
cmp
es
cmp
bound
imul
mov
xchg
or
(bad)
push
imul
inc
inc
push
cld
into
and
call
dec
inc
or
inc
sbb
adc
data16
adc
mov
inc
fst
pop
fsubr
and
mov
in
sub
int3
push
fisub
dec
aad
xchg
jae
mov
mov
cmp
cli
stc
adc
(bad)
ret
jmp
cwde
jb
pop
mov
ss
outs
sub
xor
outs
xchg
mov
and
stos
(bad)
(bad)
popf
fdivp
clc
fistp
mov
inc
dec
xor
rcr
jp
ja
popa
pop
fstp
and
cdq
outs
fisub
inc
push
and
cmps
mov
sub
dec
das
sub
jae
mov
jo
int3
sahf
fcmove
out
ins
jp
cmps
js
jmp
sbb
div
fidivr
sub
cmp
jmp
les
int3
push
jns
jle
cmps
mov
xchg
outs
lods
sub
and
sbb
xor
dec
adc
fisttp
sbb
in
adc
leave
rcr
mov
mov
cmp
mov
das
push
mov
jae
icebp
cdq
data16
dec
dec
push
pop
sbb
jae
pop
imul
mov
jp
add
lods
sbb
cmp
dec
std
ss
jo
outs
pusha
pop
imul
push
(bad)
je
adc
out
mov
out
movs
popf
ficom
inc
sub
mov
inc
imul
sbb
inc
sub
in
xchg
jne
ss
out
inc
les
out
out
repnz
inc
sbb
inc
mov
pop
add
adc
add
pop
imul
rol
jne
add
es
adc
dec
in
repz
mov
mov
sub
or
pop
movs
hlt
sub
repnz
test
jns
sub
mov
outs
test
mov
dec
jle
mov
lahf
(bad)
retf
repz
push
fimul
bound
mov
jno
repz
ins
mov
stos
loope
xor
sbb
xor
mov
and
out
nop
fld
push
int
and
lahf
fistp
mov
and
push
add
xor
or
dec
(bad)
push
or
pop
shl
fcomi
dec
pop
and
jne
jbe
xchg
movs
call
adc
xor
mov
dec
push
sbb
mov
cmp
and
push
xchg
repnz
or
movs
out
adc
inc
pop
rcl
or
dec
es
lds
test
pop
cli
clc
jmp
movs
push
ins
shr
js
(bad)
shl
mov
sub
popa
hlt
xor
mov
or
xor
mov
xor
ins
cs
and
add
aaa
sub
scas
inc
mov
cmp
lods
test
pop
ret
in
push
fs
in
lea
adc
sbb
(bad)
frstor
stc
inc
idiv
dec
jmp
pusha
sbb
lods
pop
mov
int3
cwde
lods
mov
pop
or
xchg
jae
sub
cli
xlat
dec
aas
pusha
pop
dec
icebp
dec
arpl
xchg
mov
stos
scas
imul
arpl
(bad)
repnz
dec
xchg
aas
pop
mov
pop
(bad)
out
popa
or
leave
pop
cmps
cs
adc
sub
fidiv
shr
(bad)
push
outs
call
lahf
ret
call
scas
loop
push
sub
dec
in
adc
mov
xchg
sahf
jno
iret
mov
jl
push
mov
rcr
mul
in
jbe
movs
xchg
mov
cmps
iret
jecxz
push
int3
imul
mov
nop
icebp
sbb
cmp
xchg
leave
dec
cmp
sbb
and
or
pop
mov
and
mov
int3
adc
adc
push
sub
cmps
add
dec
mov
or
pop
push
je
stos
xor
mov
mov
test
xchg
push
clc
jg
aaa
adc
in
into
gs
jle
neg
mov
fimul
jmp
cmp
retf
inc
fisub
jo
mov
pop
dec
jge
mov
stc
push
push
pusha
int
mov
fnsave
add
(bad)
out
sbb
lahf
mov
into
popa
aaa
out
mov
rcl
jbe
or
fs
lods
mov
aas
xor
(bad)
enter
or
into
lods
pop
aas
sbb
cmp
pop
outs
aas
call
lods
inc
push
xor
inc
xchg
push
jp
inc
adc
aas
pop
cwde
call
adc
call
(bad)
ins
hlt
shl
xchg
inc
cs
cmps
pop
push
outs
pop
fwait
call
imul
mov
hlt
fnstsw
jp
fsub
push
mov
aam
push
pop
cs
jnp
out
mov
jmp
scas
cmc
ror
test
sub
fistp
sub
jecxz
sbb
repz
mov
ror
mov
jmp
cld
mov
leave
sub
cdq
jno
(bad)
dec
cmps
adc
cmp
mov
cmp
xchg
push
mov
cmp
cwde
mov
cli
push
mov
push
push
cmps
sub
ret
into
out
inc
push
popf
call
lea
pop
jno
mov
jbe
inc
jne
in
pop
mov
fs
xchg
jge
rcl
cli
sbb
retf
lea
dec
hlt
sub
adc
lods
(bad)
pop
and
or
push
adc
(bad)
out
cmp
(bad)
loope
add
idiv
call
sub
inc
dec
xor
jne
daa
sahf
sub
aad
cs
pop
push
test
pop
sti
cdq
aas
jns
retf
and
mov
sbb
jne
hlt
int3
dec
lock
sbb
pop
inc
pop
mov
in
fmul
hlt
movs
xchg
std
in
cmps
inc
and
sub
(bad)
jg
or
add
ds
add
jecxz
push
xor
xchg
mov
pslld
xor
adc
mov
outs
mov
cwde
imul
mov
outs
sbb
or
jmp
sbb
or
mov
sbb
add
repnz
inc
jmp
(bad)
xchg
add
imul
ss
imul
ret
ins
pop
jmp
repnz
(bad)
jmp
inc
cmp
lods
rol
shr
sbb
mov
mov
dec
movs
jno
test
mov
cmp
push
push
cwde
cmp
push
adc
xchg
enter
into
repnz
ret
dec
stc
add
dec
sub
mov
es
xchg
pushf
cdq
or
test
call
aas
nop
hlt
pop
jg
scas
cmc
lea
push
push
fcmovu
pop
dec
mov
add
add
jno
loope
jecxz
stos
mov
ins
or
imul
sub
lock
push
cli
xor
add
iret
xor
imul
push
fcmovu
xor
fstp
xchg
mov
lds
test
test
pop
fwait
test
fisub
int3
test
(bad)
call
div
jg
and
jg
lds
jecxz
call
lock
or
fisub
ss
fwait
xchg
mov
ret
outs
ins
mov
outs
inc
add
lods
and
or
pop
(bad)
ret
das
out
or
jp
aaa
dec
xor
or
mov
adc
icebp
popf
mov
ret
stc
ins
std
mov
mov
sub
push
mov
aaa
inc
inc
push
std
sub
loope
inc
sub
dec
movs
std
and
inc
mov
add
inc
sbb
cmp
mov
cmps
inc
mov
sbb
pop
aaa
or
pushf
retf
inc
jbe
call
sbb
fs
fsub
fdivr
popa
jnp
dec
shl
mov
movs
adc
gs
add
mov
pushf
dec
cmp
push
loope
jmp
movs
jns
jo
xor
xchg
cmps
and
dec
adc
or
mov
ins
imul
and
jno
adc
dec
(bad)
jmp
pop
or
rcr
dec
in
mov
mov
rcr
sbb
shr
mov
add
dec
pushf
out
sub
lock
jmp
cmp
rol
pop
push
fwait
fwait
xchg
inc
lods
in
xor
or
ret
stc
pop
mov
nop
mov
sub
scas
in
mov
icebp
and
add
push
or
sub
mov
(bad)
pop
dec
es
xchg
or
add
loope
or
out
cmp
jl
push
addr16
dec
xchg
icebp
je
repz
sbb
clc
mov
fwait
jb
pop
jb
jne
ins
or
clc
xchg
add
jne
mov
cmp
jg
movs
inc
ja
fidiv
jg
jae
lock
je
lods
test
scas
repnz
jmp
jb
jne
xchg
retf
mov
shr
jmp
sbb
(bad)
mul
popf
adc
enter
mov
movs
cmp
mov
jnp
call
sub
mov
add
out
dec
dec
es
shl
aaa
jg
popa
and
cwde
dec
test
dec
cld
fimul
xchg
jne
xor
leave
push
shl
imul
neg
push
pop
sbb
ja
(bad)
ss
dec
idiv
push
cmps
lea
popf
outs
call
cmp
add
xor
sbb
neg
in
inc
bound
mov
xchg
fdivr
sbb
add
scas
aaa
sub
cwde
lods
lahf
mul
cs
push
cmp
push
repz
jl
xchg
push
mov
sbb
pop
(bad)
mov
inc
enter
push
pop
pop
xchg
cli
jl
movs
shl
sub
jns
push
pop
js
adc
and
jecxz
test
push
std
mov
mov
sub
std
push
ins
mov
aam
pop
xchg
fcom
(bad)
jmp
mov
hlt
in
sahf
dec
lods
ror
xchg
mov
ret
in
clc
lahf
pusha
and
mov
pop
sar
inc
adc
sub
xlat
pop
mov
das
inc
dec
aam
add
(bad)
in
push
in
mov
and
jo
xor
inc
add
cmp
push
(bad)
stc
ins
and
add
loop
mov
jecxz
mov
jbe
rcl
fldcw
fadd
sbb
test
add
aaa
xchg
add
xor
sbb
loop
pop
les
addr16
ficom
mov
inc
inc
fs
mov
jbe
and
mov
je
adc
sbb
cmp
add
test
idiv
add
and
push
call
ret
push
in
aam
xchg
xor
rol
ss
mov
rcr
jno
std
push
aad
xor
lahf
adc
pusha
in
sub
mov
(bad)
xchg
sahf
daa
cdq
sub
stc
aam
and
dec
sub
xchg
sub
lods
stos
inc
outs
movs
mov
dec
push
aas
enter
pop
or
dec
aad
icebp
or
adc
jnp
jp
add
inc
clc
adc
add
mov
rcl
mov
imul
lahf
mov
inc
retf
jne
inc
js
mov
fsub
ins
pop
dec
std
pop
js
ficomp
add
rcr
inc
(bad)
leave
bswap
inc
stos
push
fwait
and
mov
hlt
leave
push
adc
ins
nop
outs
and
jp
jno
xor
pop
call
rol
ret
mov
xchg
xchg
mov
sub
(bad)
das
cmp
xlat
push
jp
ins
(bad)
and
adc
int
sahf
adc
xor
dec
scas
scas
or
retf
ds
xor
ins
aam
jmp
push
das
jg
mov
shl
call
sub
ss
inc
mov
out
jle
adc
shr
sti
lods
test
sbb
daa
cmp
in
std
scas
jo
scas
pop
scas
mov
add
shl
xchg
outs
cmp
or
cmp
test
daa
popf
sti
repz
aaa
xchg
adc
mov
gs
push
dec
sti
pop
mov
inc
(bad)
out
xchg
in
xlat
les
ss
(bad)
int
cmps
dec
dec
add
add
jmp
arpl
cdq
hlt
pusha
ja
call
push
cs
or
iret
mov
imul
pop
cmp
jmp
and
sub
dec
lods
es
lahf
out
repz
pop
inc
mov
lods
xor
inc
sahf
ins
cwde
ret
ins
sbb
(bad)
sbb
push
leave
je
mov
mov
sbb
into
mov
call
mov
or
dec
outs
mov
imul
out
dec
imul
popa
fucomp
or
mov
mov
and
sub
mov
cmc
and
loop
push
mov
fistp
pop
aad
xor
xchg
(bad)
mov
xchg
(bad)
adc
call
mov
sbb
push
pop
mov
dec
dec
fs
fcmovb
imul
movs
jge
jp
push
xor
ss
sbb
push
mov
jae
or
fwait
ja
mov
call
test
fisubr
adc
lods
mov
pop
scas
inc
scas
and
mov
loop
jnp
daa
dec
push
pop
cmps
div
(bad)
mov
mov
mov
xlat
mov
sbb
cdq
es
cmp
dec
or
loope
mov
xchg
ffree
push
mov
sbb
ss
fs
mov
or
sbb
jge
and
push
ret
push
icebp
sar
push
js
pusha
mov
ret
push
leave
sahf
adc
les
dec
stos
(bad)
test
sti
xlat
call
pop
cmp
adc
int3
dec
cmp
inc
mov
fimul
jbe
mov
repnz
fdiv
or
in
inc
repnz
nop
loopne
dec
mov
aaa
mov
movs
dec
loopne
rep
pop
shl
je
xor
stc
sbb
fild
vminps
push
lock
je
xor
sub
add
add
sbb
inc
test
mov
dec
and
sub
mov
ror
loopne
stc
jmp
jns
mov
xlat
pop
dec
cmps
xchg
lods
js
mov
inc
pop
lock
and
movs
pop
sar
movs
inc
inc
mov
push
inc
ins
stc
mov
xchg
arpl
pop
setae
test
nop
call
xchg
xor
push
test
data16
sbb
mov
sub
sar
pop
test
xchg
mov
jmp
inc
cmp
ins
cmp
push
inc
in
dec
pop
rcl
jl
cmc
lock
or
in
mov
mov
xchg
add
test
shl
mov
mov
(bad)
mov
mov
sub
dec
leave
jns
in
add
push
fbld
lea
dec
(bad)
jb
mov
lock
gs
(bad)
cmp
or
cld
scas
fsub
mov
cmp
jns
add
out
arpl
add
pop
xor
fbstp
cdq
sbb
shr
rol
xor
inc
inc
mov
mov
sub
add
cs
lods
or
and
dec
pushf
sbb
(bad)
mov
push
ja
outs
sti
mul
dec
sbb
and
mov
sbb
int
ss
test
mov
adc
imul
xchg
xor
fimul
push
rcr
mov
xlat
mov
cwde
pop
retf
mov
das
imul
xchg
retw
xor
cdq
scas
pop
aad
jno
clc
popf
pop
adc
push
mov
mov
(bad)
mov
mov
je
dec
xor
repnz
ds
data16
imul
(bad)
xor
mov
push
imul
rcl
mov
fisttp
jle
in
and
add
outs
icebp
sub
js
out
stc
imul
xor
push
mov
mov
lea
nop
ret
es
mov
mov
pop
adc
sti
sti
sub
xchg
and
sub
pop
(bad)
sbb
and
sub
dec
pop
inc
push
mov
pop
jno
xchg
aas
add
pop
daa
fwait
imul
lds
shr
cmp
or
bound
jnp
sbb
arpl
nop
mov
or
mov
scas
and
add
cmp
adc
ins
dec
mov
inc
inc
xor
lods
mov
cmps
fst
inc
daa
sbb
add
mov
adc
pop
mov
add
sub
scas
int3
and
jo
imul
daa
cmc
mov
mul
rcl
in
jl
cmp
imul
add
out
jno
mov
sbb
(bad)
adc
loop
hlt
das
jb
sbb
xchg
mov
loopne
movs
inc
xchg
out
lods
dec
mov
xor
cwde
pushf
mov
stc
outs
inc
xchg
pop
in
and
popa
adc
mov
(bad)
imul
loop
cmp
sub
inc
(bad)
stos
ret
loop
aas
leave
dec
cmp
ficom
(bad)
jne
fs
jno
ss
loope
sbb
cmp
pop
aaa
inc
sar
cmp
bound
push
(bad)
cwde
mov
cmp
or
sti
or
daa
out
inc
add
mov
push
xchg
rol
addr16
lahf
and
stos
stc
sbb
ret
stos
push
and
push
icebp
sbb
sub
sub
mov
es
jg
out
xchg
pop
cmps
mov
je
cmps
jle
out
pop
lods
inc
xchg
arpl
xchg
jl
lock
xor
fs
ror
push
push
imul
jg
mov
jo
sar
jae
js
fld
aam
dec
mov
xchg
ret
xor
xchg
or
stos
mov
sar
lahf
lahf
pop
lods
scas
push
add
test
add
jae
mov
es
fstp
sub
lds
cli
enter
inc
and
cmp
fild
xchg
ficom
es
mov
xor
pusha
mov
xor
retf
xlat
jg
and
js
xor
lods
mov
jmp
pop
scas
int
mov
ror
mov
adc
lods
mov
hlt
enter
stc
mov
push
sbb
aam
mov
lods
in
fs
cmp
push
(bad)
sub
and
pushf
lods
mov
mov
push
retf
fisub
jno
mov
dec
dec
sbb
xchg
sub
fwait
into
cmp
jb
cmp
fist
adc
mov
jmp
mov
cmp
mov
retf
sbb
jb
lods
test
pusha
xchg
push
int3
sub
movs
aam
cli
jns
aaa
cmc
jne
ja
call
pop
js
mov
mov
mov
pusha
mov
daa
dec
daa
cmp
mov
jbe
das
sub
cwde
and
adc
lea
sub
in
xor
mov
cmp
shl
mov
xchg
cli
jmp
sub
push
ror
sbb
pop
das
mov
sub
fist
or
mov
aad
out
outs
sbb
dec
js
add
mov
sbb
xchg
cmp
call
cmp
addr16
dec
out
mov
inc
(bad)
mov
sub
rcr
inc
inc
pop
dec
ss
ja
nop
xlat
cwde
cld
xchg
add
in
push
mov
ret
ins
imul
cs
(bad)
int
pop
repz
rcl
loope
push
sahf
stos
xor
mov
mov
mov
retf
punpckhdq
pop
shr
or
cmp
aam
loope
or
xor
shl
adc
jmp
inc
or
dec
ss
push
ins
jecxz
cwde
je
pop
into
data16
xor
fsubp
xor
mov
fdiv
mov
outs
movs
sti
cmc
mov
push
cld
mov
not
cmps
jne
push
cld
ins
hlt
pop
inc
call
adc
pop
repnz
movs
sub
dec
sub
retf
push
imul
inc
lods
mov
(bad)
cmp
xchg
sub
cmps
jp
jecxz
mov
inc
call
mov
clc
outs
fst
sbb
fsub
mov
cmp
(bad)
dec
dec
push
adc
aas
fiadd
(bad)
lods
mov
mov
rcl
pop
arpl
cli
daa
ins
pop
sahf
dec
push
pusha
inc
out
adc
out
mov
cmp
popa
icebp
mov
inc
cmp
jne
jecxz
or
jmp
std
push
hlt
lds
and
mov
outs
ds
mov
cmp
into
movs
add
retf
inc
leave
ss
pop
(bad)
arpl
out
mov
cmp
or
jmp
inc
mov
inc
les
les
jae
lahf
push
xor
call
and
nop
mov
mov
push
imul
mov
adc
(bad)
div
sbb
inc
cld
pushf
mov
mov
lahf
leave
ins
xchg
add
xchg
pop
sbb
cs
leave
and
jg
dec
mov
std
fidivr
jle
adc
jbe
mov
test
jb
iret
nop
cs
lods
cmc
scas
fs
ins
je
and
sahf
repnz
leave
or
or
adc
sub
das
in
leave
push
fidivr
pusha
in
clc
repz
and
dec
jmp
push
pop
jl
inc
pop
cmp
pop
add
js
jbe
or
call
in
retf
outs
push
rcr
int3
ins
adc
movsx
add
fwait
jae
fldenv
jmp
imul
add
stos
(bad)
into
and
jns
arpl
dec
imul
or
outs
or
lea
jns
fdivr
mov
ficomp
cwde
repnz
push
jl
xor
fwait
ins
adc
sbb
cmps
ss
xchg
pop
dec
push
cwde
push
int
pop
lock
mov
adc
loope
xlat
mov
scas
xchg
mov
test
(bad)
or
sbb
dec
pop
or
mov
out
lods
retf
das
mov
push
retf
pop
inc
adc
retf
pop
jecxz
int
movs
mov
pop
shl
xchg
cld
cli
jnp
mov
sbb
imul
adc
and
es
lea
mul
sbb
and
xchg
pop
pop
mov
pusha
scas
mov
mov
mov
retf
(bad)
iret
sub
xchg
(bad)
push
lea
mov
xchg
mov
and
fsubr
pop
int
mul
jecxz
cmps
cmp
xor
mul
repz
inc
inc
cmp
sbb
outs
(bad)
push
push
jecxz
rcr
cld
dec
or
pop
loope
outs
sub
loope
xor
cwde
sti
test
or
jb
pushf
xchg
adc
stc
push
ins
fldenv
xor
inc
xor
xchg
adc
stos
pop
sub
int
std
mov
test
mov
les
adc
mov
jnp
fucomip
test
scas
sahf
mov
sbb
jno
mov
adc
test
mov
outs
pop
xchg
dec
sub
retf
jne
pop
cmps
mov
mov
mov
xor
or
jae
cmp
jge
gs
inc
jo
xchg
or
int3
shr
out
shr
cmp
icebp
and
iret
add
mov
mov
aam
fdivrp
add
or
jl
mov
cmp
add
push
pop
(bad)
adc
and
adc
repnz
lds
jl
dec
ret
lods
mul
xchg
(bad)
mov
sar
jbe
sbb
stos
pop
cld
ins
inc
cli
movs
inc
cmp
or
add
and
(bad)
ins
outs
icebp
out
add
mov
sub
lods
xlat
jmp
mov
sbb
add
fcomp
pop
into
inc
ins
ins
dec
xor
rcr
movs
bound
das
cmps
sub
pop
ins
push
fldcw
fmul
scas
(bad)
dec
in
sub
mov
rol
cmp
in
add
or
inc
lods
shl
cmc
ret
(bad)
sub
xor
add
sub
in
mov
clc
lock
jge
mov
jmp
jmp
inc
std
or
mov
jmp
in
fmul
xor
sti
rcr
xor
push
shl
jp
(bad)
mov
fwait
pop
mov
cld
and
push
mov
add
pop
sub
dec
and
addr16
aam
pop
jle
jle
jne
sub
xchg
lods
jle
xchg
jnp
jecxz
dec
sti
popf
dec
inc
scas
jmp
shl
rcr
inc
mov
pop
push
dec
mov
and
sub
repnz
in
clc
jmp
sbb
stos
dec
cmp
push
add
(bad)
and
popa
xor
xchg
xlat
pop
je
adc
sar
cmp
fisub
dec
push
imul
push
jb
mov
jo
fs
mov
and
out
xchg
ins
out
sbb
mov
mov
gs
inc
xor
shr
dec
fnstcw
sub
jg
in
hlt
jnp
icebp
mov
movsx
outs
pop
fdiv
das
hlt
popa
jge
add
bswap
xor
jmp
jb
xchg
es
cmp
and
enter
jno
dec
loope
ins
adc
fsubrp
inc
fs
fistp
jns
mul
push
add
xchg
lods
aam
xchg
mov
cmp
xchg
mov
loop
xchg
add
inc
jne
xlat
fst
jecxz
fs
sub
(bad)
xchg
mov
adc
xchg
(bad)
mov
cmp
push
jbe
mov
push
xor
gs
jl
out
push
cmc
push
dec
enter
cmp
adc
cmp
cmp
pop
push
push
stc
adc
pop
mov
jle
xor
sbb
pop
sbb
pusha
outs
pop
mov
lods
cmps
sub
loope
mov
ret
es
xchg
retf
hlt
push
arpl
pop
add
mov
aas
retf
xchg
pop
je
adc
pop
repz
aaa
inc
inc
mov
ins
repz
test
xchg
jg
(bad)
inc
adc
inc
adc
in
iret
sahf
aaa
xor
cwde
push
cmps
pop
repnz
push
test
adc
xchg
ins
mov
stos
(bad)
cmps
dec
pop
adc
repnz
dec
outs
and
cmp
movs
sub
addr16
sbb
ret
pop
mov
(bad)
sti
cmc
aad
ja
sbb
mov
mov
clc
or
inc
(bad)
jecxz
sbb
mov
mov
out
xor
mov
push
fdivr
push
jne
and
ficom
and
adc
mov
dec
adc
mov
or
es
inc
stos
cmp
push
(bad)
scas
sti
and
xor
test
(bad)
jae
movs
fmul
mov
and
test
popa
or
add
inc
aam
lock
std
jne
sub
out
daa
mov
fstp
jae
imul
ror
inc
inc
jge
call
sub
pushf
das
(bad)
call
cs
aas
push
aad
addr16
pop
(bad)
fimul
push
outs
pusha
mov
fwait
sub
sbb
sbb
push
fld
(bad)
push
or
dec
mov
int3
cdq
out
mov
mov
fst
mov
mov
xchg
jns
(bad)
in
cwde
xchg
xchg
rcl
xlat
jg
fidivr
mov
gs
bound
pop
and
div
repz
aad
cdq
pop
(bad)
jg
xor
xchg
leave
add
js
movs
mov
fwait
mov
cmp
push
je
clc
push
in
sbb
lods
in
test
ret
retf
out
(bad)
inc
cmp
cdq
mov
add
(bad)
xchg
sub
loope
ja
jmp
test
addr16
sbb
cmovns
mov
sbb
xchg
push
mov
cwde
nop
sbb
jmp
cs
jge
jmp
js
adc
mov
(bad)
in
pop
sub
adc
ja
clc
les
dec
hlt
or
sbb
pop
ficomp
xchg
sub
mov
sbb
lock
add
pop
dec
mov
or
call
jl
cmc
pop
popf
ins
cmps
dec
fdiv
dec
(bad)
into
call
mov
jmp
dec
test
sbb
jmp
mov
push
repnz
in
jae
dec
cdq
pusha
mov
dec
js
into
jns
shl
adc
mov
cmp
xchg
daa
sbb
js
(bad)
xchg
xor
lods
jecxz
fidiv
stos
popa
into
pop
int
cmps
and
jg
add
jge
cwde
or
adc
and
mov
mov
pop
inc
les
pop
adc
or
(bad)
or
fiadd
and
out
jmp
js
outs
and
test
test
fcomp
adc
inc
loop
push
xor
mov
addr16
push
mov
mov
lahf
dec
xor
sti
adc
dec
aaa
cmp
mov
movs
dec
pop
(bad)
jb
movs
dec
xchg
aaa
pop
inc
imul
ja
add
adc
cwde
or
mov
xor
sub
sbb
out
div
mov
lods
jmp
cdq
sub
push
pop
aas
loope
xchg
cmps
push
pop
retf
jae
mov
adc
lock
shl
je
mov
pop
xor
push
mov
(bad)
sbb
jp
bound
adc
mov
shr
sub
outs
aad
test
cmc
jnp
mov
fnstsw
xor
ret
jno
test
xchg
mov
rol
add
fmulp
push
dec
inc
pushf
popa
mov
(bad)
jp
pop
cmc
add
mov
fucomip
aad
or
mov
daa
je
and
mov
sbb
rcr
push
aad
stos
std
in
inc
mov
pop
mov
pop
xor
xchg
mov
jmp
push
stc
adc
jns
shl
jmp
mov
inc
pop
ss
sub
mov
pushf
cs
call
or
movs
dec
mov
add
call
lods
cmp
mov
imul
sub
inc
rsqrtps
(bad)
bound
mov
test
aam
cmp
mov
and
xor
cmp
jg
xchg
mov
(bad)
(bad)
jmp
imul
jne
cli
mov
imul
iret
ficomp
iret
jp
repz
push
pop
and
pop
movs
out
dec
mov
mov
inc
clc
jge
push
pusha
mov
jns
push
or
xchg
or
and
jnp
in
jp
dec
popf
inc
sbb
adc
xchg
aaa
push
mov
push
not
jb
dec
fs
movs
and
movs
pop
or
(bad)
fbstp
mov
ret
aaa
repz
mov
repnz
jb
xchg
stos
xchg
pushf
cmp
inc
cmps
push
mov
fst
(bad)
jmp
adc
ja
sub
xchg
cmc
aam
add
test
out
xor
xor
mov
or
out
cmova
push
dec
outs
loope
loopne
xor
repz
je
fldcw
ds
xor
retf
and
pop
out
add
daa
sar
loopne
and
sbb
ja
mov
mov
xor
enter
push
or
fisubr
neg
in
jo
push
out
sbb
push
mov
cli
pushf
push
cmp
push
and
xor
or
mov
sbb
lock
push
xchg
jo
mov
pop
lock
add
add
xor
out
dec
mov
loop
inc
and
add
sub
outs
adc
shl
add
mov
rcl
rcl
mov
fidivr
mov
jecxz
stos
je
pop
sub
pushf
cdq
push
cmc
(bad)
jp
fild
sub
xchg
adc
int
rsqrtps
stos
dec
scas
cmp
ja
ins
push
xchg
imul
jae
sbb
arpl
mov
sti
push
test
cli
and
lods
adc
dec
arpl
popf
xor
ror
push
xor
cmp
xor
pop
js
imul
add
lods
dec
sbb
jmp
std
adc
mov
xchg
mov
xor
mov
cwde
(bad)
loop
fdivr
adc
adc
in
rol
pmaxsw
pop
inc
adc
jae
push
scas
cmps
das
mov
je
test
aad
mov
in
xlat
rep
mov
fadd
mov
cmc
popf
jecxz
or
and
mov
push
dec
outs
(bad)
clc
push
jnp
add
in
mov
jnp
enter
(bad)
dec
mov
cs
xor
(bad)
jno
pop
repz
fistp
sub
aam
push
outs
jle
clc
mov
(bad)
in
push
int3
movs
out
fcom
fstp
loopne
adc
int3
or
and
arpl
xchg
sbb
or
mov
cli
pop
cmps
xchg
fwait
jno
cld
shl
push
and
mov
bnd
sbb
pop
dec
fisubr
jle
bound
or
mov
ins
cmp
test
xor
and
cmc
(bad)
stos
(bad)
std
movs
in
jp
add
pushf
dec
inc
(bad)
mov
push
pop
in
xchg
leave
fstp
mov
xchg
or
popf
mov
pusha
js
mov
jb
sbb
inc
dec
cmps
jmp
jp
out
call
pop
data16
lock
out
xchg
push
icebp
mov
aaa
sub
sub
jnp
cwde
out
mov
inc
adc
in
test
test
mov
push
daa
repnz
adc
imul
pop
cmc
das
js
popf
addr16
sub
mov
pop
push
xor
jno
or
jl
clc
test
inc
loopne
ins
push
mov
inc
int
sar
int
(bad)
dec
js
scas
mov
in
push
push
mov
adc
ror
dec
add
loope
xchg
xchg
in
adc
test
out
jmp
xor
jo
shr
test
add
mov
push
cmp
jmp
sbb
add
(bad)
mov
jo
iret
popa
sub
mov
xchg
xlat
popa
rcl
or
mov
arpl
cwde
adc
repnz
add
mov
ja
pusha
ror
mov
out
imul
xchg
cmp
fldcw
movs
sub
ja
mov
add
loop
shl
sbb
add
outs
not
inc
jge
addr16
cs
jae
sahf
cmp
lds
sbb
and
add
and
add
xchg
xlat
ja
cmps
div
fbstp
dec
xor
cdq
jno
out
sub
retf
mov
test
pop
sub
lock
scas
inc
push
cwde
aaa
nop
out
mov
pop
pop
add
mov
xor
sbb
xor
bound
repnz
outs
pop
sub
jns
sar
popf
push
aad
adc
out
or
clc
inc
movs
adc
sbb
mov
jb
scas
jne
(bad)
(bad)
adc
and
push
out
loop
dec
jecxz
pop
sbb
aas
inc
adc
push
nop
es
adc
(bad)
cld
rol
fwait
cwde
push
cli
and
adc
fistp
adc
aam
out
mov
sahf
enter
jmp
fstp
inc
aam
or
mov
mov
repz
cmp
ret
in
add
daa
add
cdq
stos
dec
(bad)
fsubr
or
mov
shl
pop
jle
ds
imul
push
dec
scas
push
fadd
pop
mov
mov
es
in
lock
outs
sub
ret
pop
pop
loopne
cmp
lods
mov
xlat
or
mov
cmps
xlat
dec
xor
pop
jne
mov
movs
inc
adc
xlat
mov
enter
imul
rol
add
test
mov
in
pushf
out
push
retf
lahf
stos
add
cmp
out
(bad)
cld
pop
dec
fs
dec
popa
pop
dec
call
fwait
push
and
popa
dec
sbb
fisubr
scas
xchg
jmp
fadd
push
push
pop
test
movs
jo
add
jns
push
mov
mov
pop
sub
and
lock
inc
cwde
call
pushf
xor
scas
inc
pop
sbb
ret
mov
inc
dec
mov
push
sbb
stos
jmp
inc
gs
movs
pop
xor
xchg
cmp
shl
(bad)
lahf
rcr
sbb
mov
and
xor
imul
jmp
sub
gs
sahf
imul
mov
cdq
jecxz
mov
fsubr
inc
repnz
fistp
mov
mov
jmp
scas
shl
ret
(bad)
aas
daa
xlat
add
inc
xor
lods
sbb
jae
add
push
outs
lea
mov
loop
cmps
(bad)
scas
ins
aad
int3
pop
arpl
mov
mov
sbb
outs
ret
mov
or
jp
sbb
sub
add
nop
out
sar
shr
jle
push
(bad)
sbb
mov
mov
sub
mov
pop
dec
and
xchg
adc
xor
arpl
les
adc
stos
popf
and
inc
push
xor
push
inc
and
dec
aam
pop
sbb
out
stos
xchg
loope
lods
leave
fcmovnu
sar
cld
pop
loopne
lds
popf
pop
inc
push
mov
popa
or
out
push
icebp
ja
mov
cmp
loop
jmp
fnstcw
stc
xor
add
outs
push
jnp
int3
xor
fiadd
imul
call
mov
fiadd
dec
pop
inc
scas
or
jecxz
or
mov
nop
cmp
dec
pop
add
ret
scas
pusha
add
jmp
lock
pop
cli
xlat
mov
mov
aam
pushf
xlat
mov
pop
lahf
sbb
jmp
sbb
js
cmp
sub
mov
dec
or
pop
sahf
(bad)
hlt
xor
out
sbb
test
leave
into
jns
in
aad
rol
push
shl
adc
mov
dec
push
mov
stc
and
pop
popf
in
int3
rcr
and
je
sahf
movs
xor
add
mov
aaa
mov
jb
pushf
rcr
std
push
test
pop
mov
cmps
call
es
inc
sbb
dec
pop
inc
in
dec
mov
test
hlt
cmp
enter
sbb
cmps
add
cmps
sub
fmul
(bad)
mov
out
lods
mov
push
rcr
dec
dec
aas
stos
inc
mov
call
aas
xchg
and
sbb
sub
clc
lds
mov
into
push
sub
pop
mov
xchg
xchg
push
xchg
push
add
or
pusha
mov
test
int3
in
dec
inc
jmp
icebp
dec
pop
inc
mov
mov
stos
inc
or
cs
mov
mov
sub
xchg
jmp
pop
xor
push
cmp
or
div
outs
movs
and
pop
xchg
stc
push
push
js
jo
push
sub
repnz
cmc
dec
mov
cmp
sbb
sbb
fsubr
dec
sub
repz
and
mov
xlat
jecxz
lea
cli
pop
dec
jb
ins
ds
cmp
push
inc
add
mov
das
outs
add
xor
xchg
cmps
and
stos
push
pop
add
mov
or
inc
adc
lock
sub
mov
dec
sbb
and
stos
mov
add
aam
sbb
pop
es
stc
jmp
outs
mov
(bad)
movs
stos
mov
int3
push
inc
int
fist
aam
pop
xlat
das
aad
push
(bad)
das
retf
sbb
mov
pop
mov
ja
ffreep
cmp
mov
xchg
call
xor
loope
mov
add
or
stos
retf
dec
outs
jbe
xor
loop
imul
jmp
dec
adc
mov
add
adc
mov
test
retf
dec
(bad)
in
repnz
sbb
or
sahf
mov
push
xor
(bad)
(bad)
clc
fldcw
push
inc
mov
xor
(bad)
mov
pop
arpl
xchg
push
pop
jno
stc
fnsave
push
dec
mov
adc
fmul
sahf
jmp
popa
or
xchg
mov
pop
inc
add
loope
add
out
pop
fyl2x
inc
add
push
sbb
sbb
xor
test
call
jmp
cmp
(bad)
jmp
in
sub
dec
cmp
inc
nop
sbb
(bad)
pop
add
jmp
std
jnp
mov
add
dec
sub
adc
mov
mov
aad
(bad)
mov
ins
inc
loopne
inc
push
jbe
fild
push
ins
movs
push
jmp
jo
mov
or
sub
cmp
mov
cmp
sti
sub
out
daa
push
mov
adc
in
int3
fnstcw
call
sbb
rcr
sbb
or
jb
test
hlt
mov
arpl
dec
(bad)
pop
in
sbb
lods
mul
loope
or
push
ja
daa
mov
aam
ds
sar
push
bound
aaa
shr
loopne
adc
adc
gs
xor
loope
push
push
adc
mov
sub
fbstp
shr
add
xor
fs
push
pop
xor
test
shr
sbb
retf
shr
loop
sbb
(bad)
mov
push
movs
xlat
add
jne
int
or
scas
push
cmp
sbb
lds
std
mov
dec
rcl
cs
mov
push
js
push
push
or
xchg
and
fbld
maskmovq
idiv
cdq
cmp
in
in
inc
mov
or
push
out
scas
fild
sbb
mov
pop
rol
ins
mov
fist
ds
neg
adc
cdq
out
stc
out
call
iret
pop
out
mov
mov
ins
xor
sti
cmp
xchg
loop
push
pop
mov
sbb
jecxz
arpl
neg
add
sub
xchg
add
adc
data16
xlat
or
inc
pushf
mov
fmul
rcl
daa
cs
pusha
or
mov
out
gs
call
cmp
sti
pop
jmp
add
mov
jge
mov
jg
sub
(bad)
(bad)
mov
shr
push
cmp
shr
mov
(bad)
sub
dec
and
mov
push
cmp
das
jnp
cld
dec
sub
jl
test
enter
stc
xor
mul
shl
gs
mov
out
cmp
loopne
add
jne
push
arpl
mov
push
into
or
jno
xor
jne
mov
cmp
dec
xor
in
scas
loop
sub
lods
pop
int
data16
fsubr
mov
je
adc
fucomi
mov
jno
sahf
imul
and
lahf
jbe
push
adc
and
cwde
sub
cmp
mov
lods
cmp
xchg
inc
(bad)
jle
nop
adc
inc
sahf
adc
push
pop
or
(bad)
int
sub
fwait
(bad)
mul
adc
scas
popf
mov
jecxz
in
outs
cmp
test
in
data16
lahf
jno
inc
push
pop
cdq
cmps
aaa
ret
inc
mov
mov
push
mov
(bad)
or
loopne
or
shl
sar
jmp
repnz
or
loopne
loopne
imul
add
inc
cwde
out
xchg
mov
into
mov
cs
sbb
sbb
js
outs
lock
add
aaa
xor
les
mov
or
dec
jne
test
lods
jecxz
xor
mov
adc
xor
iret
pop
inc
rcr
pop
xchg
fsub
push
movs
retf
rcl
inc
xor
inc
cwde
pop
adc
jp
mov
jno
xchg
test
sub
jo
sub
mov
cmp
stc
retf
scas
mov
(bad)
mov
cmp
fcmovu
and
lock
fbld
outs
ins
int3
outs
push
cdq
leave
or
lods
pusha
aad
and
jbe
cmp
ins
clc
jle
cmp
div
inc
mov
cwde
xchg
xchg
push
dec
addr16
into
pop
lds
jno
call
sar
ins
fwait
test
(bad)
xchg
cmc
rcl
repz
pop
dec
loop
ds
mov
adc
jbe
pop
add
pop
sub
lahf
dec
fmul
out
mov
push
sub
gs
test
push
xchg
xlat
jmp
mov
icebp
push
and
xchg
sub
jmp
ja
jecxz
aas
sahf
pop
mov
adc
dec
lods
shl
jg
stos
cli
sub
fcomp
jne
jae
dec
retf
mov
jp
cmps
pop
test
jae
out
mov
jmp
xor
mov
xor
push
test
sbb
cmp
call
mov
imul
sub
or
sti
call
retf
sti
fcomp
xchg
or
sub
mov
or
dec
les
prefetcht0
jmp
jmp
jle
add
mov
rcl
daa
and
mov
pop
mov
jmp
pushf
sqrtps
push
fwait
mov
sar
xchg
es
jmp
stc
cmc
ret
mov
adc
push
das
pop
jp
loop
jp
icebp
dec
jmp
add
sub
ret
aad
into
les
or
lods
push
int3
mov
or
into
out
lods
push
fsub
jns
sbb
or
or
adc
xor
ss
jg
sbb
xor
add
sar
int
jecxz
dec
or
stos
(bad)
push
sbb
movs
jge
mov
sub
push
jnp
cmp
arpl
adc
(bad)
popf
scas
sahf
repz
or
cmps
in
imul
mov
aad
jb
add
test
and
pop
xor
xchg
xchg
mov
xor
mov
fmul
test
fadd
call
scas
cmc
sbb
fisub
xchg
lea
ror
sub
retf
sbb
push
mov
mov
mov
ret
jno
dec
fsub
xchg
ja
imul
inc
test
lea
and
dec
int
add
push
pop
pop
jns
loope
test
in
ret
test
das
fcmovne
ret
sti
call
dec
pop
and
add
xchg
cmps
mov
inc
push
test
xor
cs
xor
ficom
fwait
pop
mov
mov
enter
hlt
mov
or
cmp
out
xchg
jg
shr
xchg
fst
out
push
cwde
sub
or
hlt
imul
mov
scas
mov
movs
push
out
fcom
imul
retf
lods
nop
xchg
xor
clc
mov
or
mov
push
in
stos
fdiv
push
(bad)
cmp
call
jbe
sbb
not
or
adc
cmp
ins
xchg
inc
mov
mov
dec
xchg
xchg
mov
jbe
loope
int3
mov
jmp
(bad)
pop
dec
dec
out
fcomp
adc
dec
add
sbb
cdq
mov
cmps
mov
push
fs
aad
call
fild
pop
push
add
dec
imul
adc
fsub
dec
mov
outs
mov
(bad)
call
bsr
pop
outs
xor
cmps
repz
xor
pop
or
cmp
sbb
and
jmp
mov
dec
or
mov
iret
push
test
ret
sub
fdivrp
jne
push
retf
pop
test
xchg
and
lods
stc
into
xchg
jecxz
mov
dec
(bad)
jb
(bad)
test
sbb
nop
mov
jno
test
push
sar
dec
hlt
mov
mov
fucomi
add
stos
int3
rcl
rcl
inc
ret
and
ss
inc
xchg
loopne
xchg
and
and
mov
icebp
dec
loope
ror
mov
xor
aad
cmp
in
jbe
push
jae
ja
cmp
lea
jmp
mov
sbb
mov
sbb
fcomp
cld
inc
and
outs
jp
inc
clc
movs
and
aam
loopne
aas
(bad)
jnp
dec
clc
ret
jl
and
loopne
sahf
leave
aaa
data16
add
fxam
or
mov
mov
mov
sbb
mov
mov
sbb
jmp
add
jo
ficom
add
dec
xchg
mov
jne
xchg
push
jecxz
jmp
paddusb
inc
inc
ins
fst
jnp
in
movs
jno
xchg
ds
loop
hlt
ss
inc
std
inc
xchg
loop
fnsave
jmp
aaa
fs
push
cs
in
gs
jbe
mov
test
dec
pop
leave
gs
sbb
cmps
or
push
push
mov
fidivr
jl
loop
or
dec
dec
rcr
sbb
fist
add
pop
sti
sub
stos
retf
sbb
fidiv
ds
sbb
lock
jle
or
in
adc
xchg
sbb
sbb
lods
test
or
sub
push
ds
xchg
sbb
pop
(bad)
xor
repnz
int3
cld
inc
(bad)
aaa
pop
leave
pop
in
push
hlt
rol
or
out
arpl
loop
jno
(bad)
imul
pop
pop
sub
adc
sahf
add
fdiv
jb
inc
ss
fisttp
xchg
inc
mov
ror
ror
cmp
int3
scas
cmp
rcr
jae
mov
sbb
mov
adc
icebp
lods
mov
pusha
test
loop
ins
mov
stos
ins
inc
inc
push
push
jecxz
cwde
out
and
je
sub
push
mov
cli
lea
daa
ror
sbb
jae
in
out
loop
rcl
cmp
sbb
loope
sbb
mov
scas
push
(bad)
fidivr
pop
dec
push
inc
pop
inc
mov
gs
ins
nop
mov
mov
in
adc
mov
push
and
mov
jp
ins
mov
cmps
dec
adc
das
fs
inc
mov
test
in
sub
inc
clc
mov
enter
stc
fwait
sbb
shl
cli
cmps
and
ins
in
mov
xchg
shr
dec
push
cmp
dec
outs
pop
sbb
fdiv
into
push
daa
out
inc
(bad)
inc
aas
inc
movs
call
das
pop
xchg
xchg
mov
xchg
cld
xor
dec
fmulp
lods
call
mov
fst
out
mov
add
inc
(bad)
pop
hlt
xchg
and
mov
mov
or
xchg
sbb
cmp
pop
lock
popf
cmp
adc
ret
cs
inc
leave
xlat
js
mov
adc
inc
inc
lock
cmp
inc
sbb
(bad)
push
(bad)
das
xor
shl
dec
or
xchg
shr
bnd
mov
aad
mov
std
stc
in
xor
xor
or
je
jo
pushf
mov
mov
cmp
mov
xor
xor
repz
jb
cmp
call
push
cld
sbb
sti
mov
and
cmp
cli
xor
sub
dec
fisttp
(bad)
fadd
pop
dec
iret
xchg
mov
xchg
inc
out
into
in
and
mov
cmp
test
mov
neg
test
bound
dec
push
sti
movs
inc
cmp
pop
pop
cld
push
outs
cmp
sub
push
push
mov
cmp
outs
shl
adc
movs
(bad)
mov
fimul
xchg
sbb
mov
xor
sub
in
sbb
xchg
cmp
add
loopne
pop
leave
test
lea
sub
sub
mov
push
cld
xchg
in
sbb
mov
mov
xchg
lock
mov
rcr
mov
mov
cli
out
dec
xchg
push
mov
push
mov
xchg
imul
ror
mov
sbb
in
popa
lods
xchg
xchg
sbb
lds
inc
test
push
jno
push
ins
popf
(bad)
sub
mov
mov
ins
or
add
sub
test
push
fcmovu
fisubr
or
pop
data16
add
cwde
retf
outs
xor
imul
test
retf
mov
enter
add
pusha
jmp
push
jecxz
push
xchg
jg
daa
dec
inc
sub
push
jecxz
mov
ror
ror
shld
xor
push
call
cmp
push
dec
sub
fs
fcom
and
mov
std
test
les
mov
out
arpl
cmp
arpl
fnsave
cmp
inc
push
test
cmps
cdq
clc
sub
and
aaa
pop
movs
jg
sbb
lea
jl
(bad)
(bad)
xchg
ficomp
add
push
out
push
mov
add
add
mov
adc
(bad)
out
ss
out
in
(bad)
ins
stos
aaa
and
ss
cmp
mov
es
cmc
js
mov
or
mov
push
xchg
sbb
push
jnp
sbb
stos
cmps
call
mov
cmp
iret
icebp
adc
jmp
xor
mov
ret
outs
sbb
dec
stos
xchg
dec
lock
mov
fldenv
(bad)
lahf
add
fisubr
stos
fdivrp
(bad)
in
inc
fmul
and
retf
jb
xchg
adc
fcomp
imul
mov
mov
lea
jmp
fisubr
fs
cmp
ret
push
out
ficom
xchg
adc
mov
xchg
lods
add
jnp
fistp
push
pop
cmp
sbb
jmp
add
mov
repz
or
clc
add
clc
pop
jle
mov
test
dec
ins
or
mov
cmp
gs
jno
mov
cmp
aas
ja
inc
mov
dec
xchg
pop
sar
or
push
inc
cmp
cmp
push
jns
mov
mov
mov
push
call
outs
call
fstp
mov
imul
gs
sbb
cmp
loope
dec
js
aam
pusha
pop
or
lea
lahf
(bad)
ret
add
dec
call
gs
inc
pop
mov
mov
dec
out
sbb
retf
aas
aaa
and
fild
mov
adc
pop
shl
ffree
out
sub
in
xchg
jmp
xchg
adc
sub
out
push
adc
rol
xor
xor
cmp
mov
nop
pop
idiv
sub
xlat
popf
xchg
dec
iret
cmc
jmp
aas
int3
push
jo
fimul
dec
js
dec
test
sub
push
pop
stc
and
(bad)
popf
mov
dec
lods
mov
mov
add
dec
shr
adc
dec
mov
pop
inc
push
arpl
daa
scas
mov
lds
aas
mov
xchg
xchg
into
sub
je
aad
push
aas
dec
jl
inc
outs
push
xchg
adc
aad
jno
and
stos
jl
add
sub
add
xor
lea
ins
xlat
stos
ins
(bad)
lds
xor
inc
add
cmps
and
or
(bad)
std
test
jo
and
cmp
lock
cmc
sub
int3
outs
pop
jae
push
xchg
cmp
xor
push
xor
sbb
add
sub
dec
data16
dec
outs
mov
push
pop
fcomp
cdq
hlt
inc
ret
jns
push
sub
inc
sub
out
pop
cli
(bad)
mov
movs
inc
jnp
xor
retf
cli
(bad)
lea
outs
jl
mov
jo
jne
fadd
loope
sub
xchg
aam
xor
jl
jno
leave
lock
jl
stos
add
mov
dec
jecxz
mov
mov
or
xchg
std
lock
pop
add
rcl
fistp
jge
(bad)
fmul
fsubr
sbb
call
(bad)
adc
mov
mov
mov
pop
xor
sbb
daa
js
pop
scas
add
and
inc
dec
xor
and
mov
and
aam
inc
and
ss
sub
sub
(bad)
test
scas
xor
(bad)
aam
das
inc
pop
mov
adc
pop
imul
aas
fmul
lds
es
dec
lock
ror
sti
cli
movs
pushf
adc
sub
push
pop
sub
rol
das
inc
dec
inc
ret
pop
mov
mov
daa
in
push
or
jne
jo
scas
jne
in
pop
and
(bad)
push
cmps
cmps
pop
mov
jp
cmp
mov
int
les
mov
adc
pop
xchg
mov
push
movs
mul
mov
(bad)
dec
in
xchg
pusha
adc
push
sahf
jmp
adc
fisubr
and
sbb
mov
or
loopne
dec
cmp
fcmovnbe
push
jo
inc
call
jmp
jecxz
mov
add
push
pop
sbb
imul
and
mov
cmps
jno
push
pop
inc
sub
push
ja
mov
mov
sub
push
les
push
xlat
adc
loopne
or
scas
inc
mov
aad
adc
aam
mov
test
in
lock
hlt
loop
mov
(bad)
jae
cwde
jle
add
sbb
mov
imul
sub
stos
inc
fstp
call
xor
push
repz
push
out
loope
sar
inc
mov
mov
fdivr
in
jae
idiv
xor
add
(bad)
shl
xchg
adc
sub
pop
jge
inc
sti
or
rol
in
sbb
adc
mov
adc
or
mov
mov
mov
xchg
pop
push
loopne
out
jmp
jnp
mov
fld
lahf
ins
jb
or
xor
mov
sbb
fnstenv
push
xor
pop
inc
cmp
test
inc
lods
aas
jns
or
sbb
jae
xor
inc
out
xchg
mov
push
(bad)
or
inc
or
cmp
push
mov
adc
pop
cmps
pop
(bad)
rol
cmc
cld
fsubr
lea
in
mov
xor
or
data16
mov
call
int
lahf
mov
sbb
sbb
sti
sub
adc
pop
fsin
pop
inc
mov
cmp
mov
pop
aam
cmp
or
push
aas
push
xchg
mov
jecxz
ret
dec
xchg
pop
mov
xor
xchg
lock
sub
retf
out
mov
push
mov
inc
and
jge
sbb
scas
inc
iret
jle
push
das
mov
daa
xchg
adc
add
cmps
dec
add
adc
inc
inc
add
addr16
cmps
sub
sbb
movs
mov
aaa
loop
jne
jmp
cs
dec
ins
dec
in
repz
pop
je
dec
dec
inc
dec
or
sub
xchg
pusha
dec
ror
mov
cmp
jb
mov
test
movs
jne
pop
into
lock
mov
mov
xchg
aad
pop
mov
iret
or
bound
in
(bad)
wrmsr
add
in
sar
xor
ins
(bad)
cli
xchg
pop
pop
xchg
test
jg
rol
pmaddwd
adc
mov
arpl
mov
xchg
mov
je
add
test
ins
repz
sub
je
mov
dec
test
retf
adc
rol
rcl
or
fist
ins
loop
jecxz
frstor
push
shr
sub
mov
sub
leave
imul
push
in
jge
es
scas
push
push
push
push
sbb
shl
mov
mov
jb
lods
loope
push
xchg
dec
pusha
daa
sub
std
mov
adc
in
int
sahf
out
les
pop
cmps
out
fadd
sahf
jb
cdq
xor
into
cmc
iret
adc
cwde
mov
pop
fwait
ss
out
pusha
jmp
adc
stos
fld
and
inc
mov
lds
cdq
xor
arpl
push
arpl
adc
pop
xchg
xor
shl
cdq
sub
loope
and
sbb
mov
test
xor
push
lahf
fdivp
dec
xchg
or
ja
xor
xchg
mov
sbb
rcr
add
pop
pop
and
cmp
inc
cmps
add
add
mov
fistp
loop
jmp
addr16
jle
mov
popa
mov
mov
xor
push
add
lock
out
jge
scas
or
dec
ja
mov
mov
xor
bound
xor
mov
sub
lods
xor
pop
fwait
sub
lods
mov
jg
mov
adc
loopne
fcom
mov
inc
jmp
sub
test
add
aas
lock
push
sbb
adc
hlt
add
lods
test
hlt
add
cmp
cmp
or
pop
fcomip
xor
mov
cmp
sub
repz
mov
mov
test
sbb
xor
xchg
(bad)
cld
(bad)
dec
adc
xchg
mov
adc
imul
data16
scas
push
ja
in
dec
ja
mov
add
xor
adc
adc
out
jno
fsubr
imul
call
test
aam
mov
xor
adc
xchg
sbb
cmp
push
jo
push
movs
inc
mov
sahf
aas
inc
jbe
inc
xor
sbb
mov
into
repnz
rcl
dec
div
xor
ror
adc
xor
xor
leave
clc
sbb
xchg
and
fcmovnbe
hlt
daa
mov
mov
add
add
mov
cwde
bound
mov
cmc
fld
or
fstp
add
in
jg
frstor
mov
and
loope
das
out
cmovno
add
sbb
js
outs
add
xchg
mov
movs
cmps
dec
mov
cmp
cmp
pop
jmp
jne
das
pop
out
lock
cmp
jmp
sbb
adc
dec
jge
or
or
das
cmps
call
or
fadd
push
cmp
fcom
jmp
push
test
sbb
popf
fstp
mov
ds
je
pop
pop
push
rcl
push
xchg
inc
test
popa
movs
fcmovnb
sahf
aam
push
sub
mov
in
jns
out
and
xchg
movs
loop
mov
imul
inc
cmc
add
jns
mov
(bad)
mov
mov
mov
cmp
jmp
mul
fs
inc
(bad)
jmp
cmp
cmp
mov
into
pushf
mov
push
(bad)
adc
mov
sahf
rcl
ja
mov
das
push
idiv
std
imul
push
js
sub
sbb
xor
dec
fsubr
cld
adc
push
xchg
bound
jne
bnd
into
fld
jle
or
adc
push
jns
mov
jnp
add
push
rol
gs
xor
iret
outs
push
loopne
fs
fidiv
lods
daa
leave
clc
xor
sub
pop
repz
retf
int3
sub
aad
popf
jno
out
sbb
push
retf
aam
pop
fnop
scas
aaa
stc
retf
popf
dec
jno
mov
xchg
shl
les
call
push
mov
inc
jo
push
aam
pop
xor
pop
xchg
ret
pop
jmp
movs
or
and
xchg
and
scas
loopne
pusha
or
mov
inc
jae
(bad)
cmc
das
(bad)
movs
sbb
push
movs
das
call
dec
inc
adc
cld
push
popa
je
xchg
jmp
mov
lods
sub
ja
dec
cmp
rcr
in
jge
out
push
xor
push
dec
pop
adc
cmp
jg
dec
repz
sar
bswap
out
add
push
dec
add
popf
sub
mov
shr
pop
adc
mov
hlt
mov
sub
inc
cmps
jmp
js
call
mov
mov
mov
les
(bad)
adc
jecxz
sbb
or
fistp
aad
push
dec
in
int
mov
clc
or
adc
cmp
xlat
xlat
imul
lods
icebp
xchg
pop
adc
inc
rol
sub
repz
cs
mov
dec
jl
inc
test
xchg
fnsave
mov
inc
inc
cld
shl
sbb
adc
and
mov
mov
(bad)
(bad)
jecxz
cmp
rcl
iret
mov
(bad)
stos
push
adc
int3
bound
inc
movs
jnp
add
mov
cmps
push
mov
and
add
inc
fld
push
jl
cmp
and
mov
mov
sti
je
jg
sbb
sub
dec
fs
stc
jp
push
cmp
add
ja
mov
push
mov
mov
inc
fcom
ins
sub
mov
lock
aad
sub
jb
and
push
adc
mov
push
ficomp
xchg
sbb
sbb
pushf
mov
inc
in
sub
mov
sti
mov
xor
fwait
rol
call
add
push
in
nop
mov
xchg
mov
mov
pop
mov
jb
lahf
or
add
out
adc
cdq
jae
popa
aaa
mov
data16
adc
popf
cli
retf
in
rol
cmps
inc
xlat
gs
jecxz
test
movs
jle
lock
aas
repz
push
imul
adc
cmp
int
mov
sbb
jmp
xor
jbe
or
aas
test
xchg
or
mov
and
pop
scas
mov
ds
mov
cwde
test
xchg
mov
mov
mov
scas
sub
fs
pop
and
mov
dec
dec
inc
jmp
jo
push
mov
call
pop
iret
sbb
fst
imul
xchg
test
mov
fs
int
and
pop
and
aaa
and
mov
dec
imul
add
mul
sti
cmp
test
into
sbb
mov
loop
push
in
cs
movs
mov
cmp
clc
add
push
das
loope
icebp
adc
inc
jg
fdivp
and
or
in
add
sbb
shl
fisttp
cs
call
sbb
in
jecxz
sub
lahf
retf
aaa
sub
(bad)
sub
mov
and
out
fs
ficom
push
dec
in
add
jne
lods
xor
lods
add
inc
mov
cmp
ret
dec
cli
cmp
or
xchg
or
push
adc
cmp
int3
dec
popa
jmp
out
pop
mov
lods
fimul
shr
cdq
xchg
mov
xchg
cmp
test
pop
pop
add
mov
ins
dec
and
or
sahf
pop
mov
push
pop
test
xchg
push
fwait
mov
xchg
inc
ror
mov
fcomi
ins
dec
ins
jae
adc
fwait
cmovo
sbb
retf
sub
retf
push
scas
icebp
xlat
outs
sbb
cli
xor
test
nop
test
hlt
jae
movs
repnz
inc
fadd
sbb
mov
sub
inc
push
(bad)
iret
lods
dec
push
mov
xchg
fdiv
jnp
add
call
in
cmp
add
xlat
loopne
mov
xchg
lods
leave
mov
std
pop
icebp
pushf
push
clc
shl
pop
iret
jb
sub
into
out
or
inc
pop
aaa
cmps
pop
mov
mov
ficom
inc
mov
mov
xchg
mov
xor
pop
pop
mov
in
inc
pop
test
mov
push
inc
sub
ds
test
mov
dec
add
inc
arpl
mov
dec
popf
mov
xor
retf
jl
test
add
mov
jo
mov
fwait
jne
out
xchg
fstp
sbb
inc
retf
cmc
sbb
push
arpl
mov
aaa
push
or
push
cli
xor
out
mov
pop
push
adc
xor
sti
push
add
adc
jmp
int
or
mov
cmp
mov
jo
jne
gs
stc
out
fld
test
mov
fldenv
sub
aas
and
sahf
xor
xor
mov
(bad)
mov
xchg
mov
mov
into
je
outs
ret
fisttp
inc
pop
ja
sub
ins
sahf
clc
jecxz
xchg
mov
pop
mov
pop
aas
pusha
push
mov
cld
movs
jbe
pop
das
fidivr
pop
sbb
lock
jmp
aad
test
in
lea
push
fsubr
inc
jl
nop
lods
js
mov
popa
mov
stos
mov
fsub
dec
dec
ja
mul
sbb
mov
mov
pusha
(bad)
push
inc
mov
hlt
dec
mov
add
cmps
pop
test
shr
xor
sub
jns
push
xchg
jl
fs
fsub
inc
mov
cmp
mov
hlt
mov
mov
mov
aad
push
out
sbb
push
outs
cmp
rcr
push
inc
rcl
ret
mov
daa
push
mov
(bad)
std
nop
lock
stc
scas
jle
stc
xchg
mov
mov
clc
iret
lock
jnp
mov
inc
inc
xor
add
fdiv
xchg
stos
scas
fs
in
test
push
jmp
inc
(bad)
mov
popf
add
in
loop
into
mov
mov
xor
mov
cld
retf
push
pop
ins
pop
cmp
aas
dec
and
std
jmp
lds
pop
mov
pop
(bad)
je
into
enter
das
fisttp
pusha
adc
std
(bad)
pop
push
jbe
lea
pop
dec
jecxz
mov
sbb
into
scas
mov
ret
gs
vmwrite
xchg
adc
jnp
sub
lods
dec
les
jmp
cwde
aas
daa
in
(bad)
sar
jg
jl
shr
icebp
retf
or
sbb
movs
loope
das
ret
adc
out
sub
mov
nop
mov
fidiv
scas
hlt
aas
pop
dec
adc
jge
call
(bad)
cmp
mov
xor
xchg
out
jp
jo
dec
pop
jno
and
mov
fstp
xor
inc
call
(bad)
in
inc
mov
pop
scas
xchg
outs
nop
xchg
pop
dec
cmps
outs
mov
mov
cmc
dec
push
xor
enter
dec
stc
dec
int
outs
popf
(bad)
in
jp
cmps
dec
and
pop
pop
pop
jmp
pop
pop
push
fyl2x
shr
icebp
push
cmps
mov
int
mov
int3
sti
fwait
mov
mov
into
sub
xchg
and
add
and
test
pop
pop
lds
or
add
jns
(bad)
mov
adc
cmp
xchg
jo
pop
mov
lahf
pop
shl
mov
shr
jecxz
sbb
imul
mov
pop
or
inc
mov
add
pop
xor
fcmove
movs
sub
mov
or
pop
cmp
bound
(bad)
and
enter
dec
in
mov
cmp
scas
mov
push
inc
(bad)
pop
push
dec
push
push
add
cmp
inc
or
dec
pop
add
popf
(bad)
jmp
ins
stos
mov
xor
push
jmp
div
xchg
fdiv
xchg
and
push
test
push
shr
cmps
cmp
leave
or
fcomp
xchg
(bad)
addr16
sbb
push
adc
dec
and
or
fmul
pop
and
sbb
sbb
xor
xchg
or
fs
ret
stos
or
push
dec
ror
shl
hlt
and
rep
mov
dec
fisttp
or
and
add
ins
adc
outs
mov
inc
lods
sti
lea
sub
dec
mov
imul
int3
dec
and
mov
loopne
inc
mov
das
hlt
(bad)
ins
xchg
dec
jecxz
mov
arpl
ret
or
inc
movs
(bad)
(bad)
in
fs
cli
jne
into
pop
pop
add
dec
sahf
dec
pop
push
adc
sbb
cmp
mov
setge
cmc
lods
mov
or
push
sub
mov
inc
jle
(bad)
jmp
gs
gs
test
jae
xor
mov
scas
fnstsw
(bad)
ins
jnp
add
and
jno
jbe
jge
bound
ja
pushf
pop
setb
add
(bad)
stc
push
cmps
or
bound
fxch
repz
inc
call
(bad)
sbb
fistp
mov
sbb
mov
sub
cwde
in
call
dec
push
mul
inc
mov
dec
jns
jmp
sbb
mov
adc
aam
inc
mov
test
jmp
bound
sub
sahf
push
pop
call
js
jge
cmp
repnz
push
cmp
fs
inc
and
add
push
add
mov
ret
add
dec
fisttp
(bad)
fld
aas
xchg
cmps
test
xchg
push
jb
fwait
add
icebp
xchg
out
xor
loop
loop
jecxz
das
xchg
mov
adc
xor
pop
xchg
pop
push
jmp
push
sti
cli
imul
repnz
jg
(bad)
xchg
mov
adc
(bad)
(bad)
dec
outs
pop
pop
sbb
mov
call
inc
and
loop
lea
push
mov
cmp
cli
js
push
mov
addr16
push
cdq
sbb
lds
xchg
adc
add
dec
inc
(bad)
(bad)
movs
jle
lods
or
test
sahf
xor
icebp
xchg
iret
xchg
pop
(bad)
xchg
loopne
int3
push
ds
pop
jl
dec
or
retf
sbb
mov
mov
push
hlt
push
ret
dec
mov
pop
sar
mov
pop
pop
test
int
pop
xchg
and
cmp
or
inc
leave
scas
daa
add
fdiv
cmp
jg
daa
popf
inc
xchg
mov
in
pushf
adc
fs
sbb
outs
jbe
and
ss
adc
pop
cmp
popf
and
rol
jbe
mov
scas
(bad)
mov
(bad)
inc
xchg
loop
addr16
pop
cwde
mov
xchg
xor
pop
(bad)
adc
rcl
out
rol
in
outs
jge
add
sti
clc
jbe
push
adc
inc
repnz
mov
push
in
inc
xchg
cmps
push
or
pop
adc
call
fcmovnu
ins
pop
xlat
mov
adc
add
loopne
pop
push
jp
add
cs
add
movs
popa
shl
ja
mov
pop
pop
cmps
cs
(bad)
pop
(bad)
loope
cdq
(bad)
iret
inc
mov
pop
mov
xor
add
mov
data16
(bad)
xor
cli
test
push
cmp
cli
mov
(bad)
xor
inc
and
test
fild
mov
jns
dec
xchg
mov
das
fldl2t
dec
lods
repz
mov
pop
pusha
cdq
sub
dec
cmc
fiadd
je
mov
in
sar
jo
xor
pop
mov
pop
mov
push
ret
loopne
mov
mov
dec
jb
xor
adc
push
es
push
test
xchg
or
or
mov
mov
in
pop
cmp
sti
daa
popf
(bad)
loopne
mov
or
sbb
rcl
add
rol
lahf
sub
outs
mov
call
dec
adc
retf
jl
cld
xor
repz
cmp
mov
outs
add
push
cs
scas
add
hlt
sub
push
mov
mov
cli
hlt
dec
mov
in
or
mov
mov
pshufw
cmp
push
cmp
cmps
pop
lods
pusha
pusha
outs
mov
or
inc
das
clc
pop
popf
mov
fbld
add
push
inc
out
lods
mov
fs
or
repnz
into
xchg
scas
out
jg
add
aam
les
stos
and
cmp
xchg
in
cwde
push
clc
rcr
sub
pop
cmp
cli
mov
mov
jne
ret
adc
inc
lods
repnz
leave
scas
shl
call
mov
hlt
jne
inc
xlat
je
sbb
jmp
xor
(bad)
sub
into
outs
and
inc
xchg
es
or
in
dec
dec
push
mov
lods
pop
sbb
push
sahf
mov
inc
push
call
call
mov
xchg
mov
fld
mov
jbe
push
nop
pushf
or
pop
cmps
and
jecxz
mov
xchg
cli
sbb
movs
jg
push
enter
es
out
rcr
pop
aad
jle
dec
loopne
(bad)
ss
scas
lods
sar
jb
fwait
xor
dec
pusha
movs
pop
fnstenv
cli
xchg
in
push
add
adc
out
loope
imul
call
lds
jg
test
in
aad
mov
scas
shl
adc
inc
imul
rcr
movs
jmp
(bad)
jge
imul
outs
mov
and
dec
les
and
aad
xchg
(bad)
jnp
pop
sbb
push
call
adc
icebp
hlt
scas
mov
pushf
push
pop
movs
push
lods
retf
icebp
sbb
jmp
mov
and
cld
addr16
in
mov
xor
call
cs
push
and
cmp
jne
or
or
adc
ja
push
mov
in
arpl
add
sub
or
mov
xchg
push
lea
popf
rcl
sub
es
cwde
sub
dec
adc
ss
push
jae
mov
mov
sub
mov
push
das
cmp
or
enter
jae
(bad)
mov
shl
sbb
sbb
jno
sub
add
xor
jmp
icebp
or
scas
jp
or
imul
not
bound
or
mov
dec
cmp
pop
fld
jp
mov
xchg
loope
and
pop
add
sub
in
xchg
lock
pushf
leave
mov
imul
xchg
out
and
jo
sub
std
jg
mov
pop
cmps
dec
push
aad
xchg
jl
push
dec
sub
mov
das
shl
or
lahf
jmp
sar
mov
es
int3
leave
xchg
sahf
shl
cmps
or
cmp
push
mov
inc
xchg
xor
dec
mov
jmp
push
mov
xchg
xor
jmp
daa
xchg
mov
sahf
fnstenv
xor
jge
xchg
stos
mov
(bad)
aas
xor
inc
sar
and
mov
pop
or
mov
in
xchg
fldenv
ss
ja
fucom
cli
daa
add
xchg
fwait
rcl
pop
sbb
add
or
in
mov
pop
mov
mov
ds
(bad)
mov
cmc
ret
(bad)
out
es
scas
or
or
xchg
test
jecxz
dec
ror
mov
adc
arpl
scas
sahf
jnp
mov
cmp
mov
jmp
cwde
add
jle
jb
lods
add
jmp
test
add
mov
sbb
jp
(bad)
mov
dec
sbb
lea
jmp
sub
or
(bad)
xlat
xchg
ret
lea
jno
jmp
fiadd
mov
xchg
and
sbb
ficomp
cmp
xchg
and
hlt
add
mov
loopne
fisub
sub
ror
jmp
imul
fsubr
push
sub
xor
sbb
cli
pop
xor
in
pushf
push
and
mov
out
push
inc
mov
inc
jmp
mov
push
pop
xor
ret
inc
test
fist
dec
jns
ret
sahf
mov
mov
fucomp
add
xor
push
or
popa
and
push
clc
(bad)
mov
mov
push
cmp
test
pop
cmp
idiv
xchg
add
pop
lock
pop
jno
in
mov
xlat
xchg
xchg
sbb
push
(bad)
mov
aaa
data16
push
jno
clc
pop
pop
enter
mov
sbb
or
or
or
enter
and
adc
out
lock
jne
ret
inc
jae
fstp
sti
sub
lods
(bad)
nop
out
add
hlt
push
gs
aam
gs
sub
inc
push
adc
xor
int
ja
int3
mov
data16
and
es
inc
jne
movs
push
pusha
aam
(bad)
shl
fld
in
pusha
or
jb
inc
fistp
inc
test
push
cmp
xor
repz
ficom
ins
dec
call
(bad)
cmp
pop
ss
fcomp
sbb
mov
sbb
xor
push
or
or
rol
cdq
aas
adc
gs
repz
jb
fistp
cmp
mov
xchg
mov
sub
adc
xor
sub
and
sub
xchg
ror
mov
icebp
adc
xchg
inc
pcmpgtw
repz
pop
test
inc
cmp
inc
and
sub
movs
add
mov
inc
sub
or
stos
ins
xchg
(bad)
pop
sbb
in
int3
aad
call
pusha
mov
pop
les
sti
sub
scas
mov
aaa
pop
out
retf
ficomp
pop
jbe
mov
or
icebp
mov
loopne
cmp
push
pop
dec
shr
not
imul
in
daa
adc
test
jecxz
or
hlt
(bad)
packsswb
ret
and
out
cdq
sbb
movs
test
and
pushf
int3
sbb
push
scas
dec
xchg
repnz
mov
jmp
outs
test
movs
sbb
stos
lahf
int3
inc
and
fnstenv
sub
add
xchg
ret
sub
icebp
cmp
jns
dec
aaa
xchg
js
loope
xor
cmc
inc
jge
(bad)
sub
cwde
push
sbb
jnp
mov
(bad)
jmp
xchg
xchg
or
outs
or
inc
push
fistp
std
sbb
mov
(bad)
js
loop
xor
fsubr
scas
push
lahf
fsubrp
mov
jmp
adc
mov
sbb
sar
ficom
push
mov
fdiv
xchg
popa
adc
into
jmp
push
repnz
test
mov
inc
xor
pop
mov
or
dec
mov
ds
dec
mov
cld
pop
mov
pop
stc
lock
adc
xchg
sahf
(bad)
repz
dec
scas
in
pop
push
pop
ds
pop
dec
stc
cs
test
scas
jbe
xor
out
add
retf
das
ret
xor
int
outs
jns
stc
(bad)
or
idiv
mov
or
(bad)
lods
jmp
outs
push
xor
push
add
mov
pop
push
mov
nop
fwait
(bad)
scas
push
jbe
mov
inc
test
mov
inc
rcl
jno
sahf
or
pushf
sbb
xchg
adc
push
dec
pushf
test
addr16
in
push
mov
xor
fld
jecxz
into
add
mov
sbb
inc
push
ds
aad
pop
cmp
scas
and
sti
lahf
addr16
clc
cli
or
sar
aas
inc
lods
int3
push
add
popa
call
gs
mov
push
je
xchg
ud2
rcl
dec
aam
xlat
clc
push
xchg
adc
out
sub
push
cmc
pop
div
ret
icebp
imul
imul
(bad)
movs
movs
out
ret
jae
or
sub
dec
dec
out
jns
repz
or
test
sub
and
ins
fnstenv
arpl
jb
ins
push
or
xchg
aaa
lock
fdivrp
dec
pop
test
test
fwait
push
dec
icebp
scas
(bad)
hlt
inc
fwait
sahf
std
add
and
div
cld
outs
mov
leave
xchg
push
dec
pop
adc
dec
shl
(bad)
(bad)
jne
adc
pop
xchg
(bad)
adc
movs
aad
fcmovnbe
js
xchg
add
bndldx
push
mov
(bad)
arpl
and
add
jle
cs
xlat
adc
or
icebp
inc
gs
cmp
adc
nop
ret
fld
sub
xor
shl
mov
idiv
sub
sub
pushf
mov
popa
out
sti
push
pop
push
xchg
inc
or
xlat
sbb
jmp
bound
int3
inc
ins
leave
inc
jge
mov
sbb
fmul
in
cld
cmps
into
inc
sbb
movs
mov
fidivr
call
mov
loope
nop
jo
loope
outs
pop
mov
dec
adc
jae
enter
inc
cmp
or
and
fisttp
mov
repz
mov
cwde
jge
push
jb
stos
jecxz
test
test
fsubr
cld
jb
pop
fwait
dec
cli
sub
popf
jl
iret
rcl
test
fdivrp
mov
and
into
xchg
lahf
jb
pop
call
xchg
xchg
xor
mov
(bad)
lahf
cmp
sub
clc
jmp
mov
fs
outs
sbb
fld
and
cmp
push
ror
push
mov
mov
in
or
and
xor
push
jb
jno
shl
les
xchg
pop
cmp
(bad)
xchg
arpl
int3
int3
xor
adc
fisubr
xlat
jmp
mov
add
push
jge
ins
hlt
sub
xor
ror
add
repz
push
imul
rol
lea
in
jb
inc
push
jmp
ja
ins
iret
mov
add
mov
loopne
mov
adc
cmp
fwait
xor
call
cmp
mov
jae
add
xor
idiv
in
stos
dec
test
add
add
mov
repnz
or
pop
shl
fnstenv
add
das
sbb
test
sbb
pop
dec
mov
mov
add
sbb
xchg
pop
pop
xor
and
(bad)
iret
or
and
(bad)
mov
mov
out
sub
xor
lods
test
pusha
push
lock
das
cmp
mov
test
jmp
mov
add
movs
mov
aam
mov
sbb
adc
mov
sub
enter
inc
shr
test
xchg
lock
pop
push
movs
pop
add
sbb
and
and
imul
push
das
push
mov
sub
xchg
xchg
je
adc
sbb
inc
jb
xchg
xchg
(bad)
mov
or
xchg
adc
fs
arpl
movs
add
int
add
add
dec
push
push
ror
sbb
jnp
mov
lds
jne
fild
(bad)
das
jae
mov
cmp
imul
inc
adc
and
cs
sub
mov
mov
inc
jbe
push
adc
xchg
inc
outs
ss
cmp
jle
call
in
lods
fld
out
pop
popa
mov
out
shl
push
dec
mov
int
or
jnp
add
aas
adc
mov
add
cmps
repnz
mov
and
mov
jl
adc
xchg
mov
xor
xchg
jno
push
xchg
jns
dec
fstp
add
mov
adc
pushf
int
sub
ja
jnp
jl
cmps
div
aad
xchg
xchg
mov
mov
pusha
jno
loope
sub
std
add
sbb
mov
loopne
mov
xchg
sahf
pop
jmp
hlt
xor
je
int
retf
inc
push
pop
cwde
fsubr
(bad)
icebp
push
sbb
or
fmul
jecxz
mov
fwait
mov
sub
jge
nop
pop
mov
dec
add
cmp
lods
or
sub
pop
mov
sbb
jno
adc
mov
mov
sar
sub
ret
or
xor
sbb
pop
ins
es
(bad)
(bad)
jb
sub
(bad)
shl
xlat
sbb
repz
pop
retf
call
repz
push
pop
cs
jmp
into
inc
in
cli
adc
out
pop
ins
push
or
jecxz
sub
ds
shl
dec
cmp
neg
popf
add
xchg
mov
cwde
add
jmp
popa
sahf
movs
sub
scas
call
call
dec
dec
scas
mov
pop
outs
sub
push
xchg
xchg
xchg
stos
and
jne
mov
pop
and
test
cld
retf
push
out
fld
stos
jb
pushf
pop
mov
fs
repz
nop
ds
jmp
adc
xchg
ins
inc
das
addr16
dec
(bad)
mov
dec
adc
jo
inc
retf
jecxz
push
out
push
add
in
int3
mov
jo
xchg
ins
std
cli
jge
adc
jmp
adc
pop
in
call
popa
or
loop
push
push
mov
inc
rol
aam
sbb
stos
cs
or
out
fsubr
loope
mov
cld
retf
pop
bound
aaa
add
xor
and
mov
stc
in
push
mov
sub
rcl
retf
nop
mov
aaa
cwde
in
and
fist
push
pop
dec
sbb
ret
in
addr16
fs
sahf
or
xlat
xchg
mov
push
mov
and
loopne
popf
pushf
mov
add
jae
jl
dec
rcl
aas
add
call
and
neg
xor
dec
inc
xchg
add
adc
fsub
inc
cmps
jmp
inc
mov
nop
mov
mov
pushf
or
mov
ror
adc
pop
sbb
and
jecxz
pushf
shl
add
into
adc
(bad)
xchg
jecxz
lds
mov
mov
ins
or
std
xor
or
in
fstp
bound
xchg
or
ror
jns
cli
xchg
inc
enter
lahf
sahf
push
repz
mov
test
leave
test
test
sub
push
sahf
jns
add
rol
jge
call
mov
setno
stos
les
outs
out
or
mov
inc
adc
mov
iret
dec
cmps
xchg
ds
loopne
pop
jg
ret
loopne
mov
adc
pop
adc
pandn
das
(bad)
fs
fild
dec
or
test
cmp
leave
cmp
stc
ds
mov
mov
rcr
sahf
test
popa
mov
shr
fucom
push
mov
jge
sbb
jmp
xor
(bad)
push
fstp
add
lods
stos
mov
bound
mov
in
std
repnz
enter
test
sahf
or
rcl
in
call
dec
inc
xor
cmp
pushf
cdq
pop
mov
int
fsqrt
test
test
sbb
xor
dec
inc
push
cmps
inc
or
xchg
cmc
repz
dec
scas
inc
xor
xor
cdq
cmc
inc
cmps
adc
sbb
mov
test
mov
jecxz
xchg
push
fwait
outs
in
(bad)
mov
or
pop
cmp
dec
mov
push
mov
push
cmps
or
dec
adc
jmp
repz
mov
mov
or
dec
adc
movs
inc
pop
sub
lea
add
movs
jg
jbe
xchg
adc
hlt
mov
mov
hlt
mov
jns
lods
push
push
jns
mov
add
adc
add
mov
rol
sbb
rcr
cmp
shl
adc
daa
cmp
xor
pop
mov
sbb
mov
push
jbe
sbb
pusha
jno
dec
shl
inc
jmp
rol
clc
sbb
jmp
or
loop
(bad)
pusha
mov
jns
shr
sbb
xchg
popw
mov
repz
adc
ret
fnstenv
mov
scas
out
hlt
mov
jmp
xor
xor
lahf
stc
fimul
jne
push
clc
mov
mov
sub
pop
jp
dec
xor
(bad)
js
test
or
sbb
push
push
fiadd
jmp
mov
sbb
mov
cdq
jae
pushf
xor
pop
mov
jae
out
adc
and
mov
adc
dec
popf
fdiv
(bad)
sbb
and
adc
div
sti
jae
rcr
sbb
ja
ficomp
sub
int3
inc
mov
outs
lock
in
fcom
stos
loop
pop
call
mov
loopne
scas
ficomp
sub
and
cdq
inc
data16
mov
das
sbb
repz
(bad)
dec
fld
add
xchg
nop
out
jno
jb
cmps
icebp
mov
pop
imul
rcr
jnp
iret
xor
and
sbb
popf
test
jl
inc
ficomp
lds
scas
test
neg
nop
and
imul
sub
sbb
sub
mov
js
inc
les
push
repnz
and
or
and
dec
or
retf
sub
and
jmp
adc
adc
xchg
out
movs
outs
aam
xchg
bound
call
ins
or
jne
mov
fwait
rol
jno
push
inc
ss
loope
jns
js
xchg
arpl
mov
dec
stc
lahf
pop
mov
addr16
mov
mov
test
add
aas
gs
stos
aaa
cli
aad
inc
jae
push
sahf
and
lods
jns
xor
inc
mov
pop
mov
sub
test
sub
fs
add
push
jno
arpl
call
bound
cwde
icebp
push
cmp
retf
mov
xor
ss
cli
leave
ja
mov
hlt
outs
inc
fcmovb
ds
adc
push
sbb
sbb
cmp
clc
push
push
out
pop
push
push
inc
mov
xor
in
xor
jp
dec
or
pop
sub
xchg
shl
xor
jmp
mov
mov
pop
sub
out
test
cwde
out
stc
arpl
pop
sbb
inc
iret
(bad)
jg
ror
cmp
fistp
push
add
scas
mov
cdq
js
add
in
shr
mov
jl
jno
(bad)
je
mov
outs
push
inc
mov
ror
mov
mov
call
scas
fnsave
dec
imul
push
fist
leave
mov
sub
dec
inc
ror
mov
lock
bound
and
pop
sbb
adc
bound
pop
mov
jge
jmp
loope
inc
inc
mov
stos
retf
xor
in
jb
test
aam
ja
rol
ds
or
jg
pop
xchg
jp
add
jge
sbb
adc
pushf
or
xchg
mov
inc
fwait
pop
mov
rol
cmps
cdq
pop
pop
xchg
mov
xchg
jmp
sahf
lahf
or
adc
sbb
icebp
(bad)
pop
xor
cmp
popa
movs
out
out
push
stos
idiv
jmp
cmps
lods
mov
xchg
jno
aam
xor
pushf
xchg
(bad)
imul
or
stc
dec
mov
or
inc
sbb
jl
test
ficom
add
add
push
dec
sar
xchg
jne
sbb
loope
outs
xchg
xchg
ret
mov
mov
cmp
mov
or
inc
and
lods
in
or
mov
or
dec
rcr
test
outs
ins
push
pop
fsubr
cmp
sub
lods
stc
sub
mov
(bad)
fistp
aam
push
test
lods
mov
sub
shl
jnp
mov
popf
jmp
sbb
xor
inc
movs
retf
pop
sbb
test
ror
mov
dec
xchg
lods
xor
outs
adc
and
or
add
xchg
leave
mov
push
in
jg
(bad)
iret
mov
scas
int3
les
jnp
ror
(bad)
or
ins
aas
or
call
xchg
(bad)
mul
repnz
mov
fnstsw
lock
push
shld
ja
mov
and
mov
mov
mov
sbb
fisttp
loop
and
in
fnsave
inc
push
ins
movs
cmps
aaa
push
rcl
imul
sub
xor
fisttp
cmps
xchg
mov
mov
and
xchg
jmp
jne
rcr
jb
outs
pop
stos
sar
push
stc
add
xchg
sbb
leave
(bad)
lock
in
push
add
add
xchg
push
sub
test
xlat
jmp
pushf
push
dec
movs
pop
xchg
jle
ins
rol
xchg
and
repz
arpl
std
fwait
jbe
test
outs
ss
repz
(bad)
shl
repnz
jnp
jbe
pusha
inc
jbe
loop
das
retf
cmp
nop
cmp
mov
mov
call
cmp
adc
sti
and
inc
and
lahf
and
test
xchg
cmp
jmp
mov
push
je
sbb
loop
stc
test
mov
push
retf
xchg
push
jmp
outs
cmp
inc
in
(bad)
sub
adc
test
add
inc
scas
int3
rcl
icebp
mov
inc
inc
xor
mov
cwde
jo
mov
outs
xchg
(bad)
fisub
(bad)
jnp
int3
aaa
mov
nop
sahf
dec
scas
fidivr
push
ins
sub
outs
or
jbe
dec
pop
enter
arpl
in
xchg
jb
in
maxps
scas
pushf
arpl
dec
xchg
imul
test
dec
(bad)
aad
push
ins
jmp
iret
cmc
(bad)
aad
push
and
xor
sbb
push
fwait
jae
fs
push
mov
pop
xchg
das
dec
js
movs
jp
mov
lea
and
adc
(bad)
ss
nop
mov
pop
inc
sbb
repnz
int3
dec
sub
lea
gs
aam
enter
jl
jl
scas
mov
sti
fiadd
sbb
push
test
sbb
cwde
loopne
and
inc
mov
mov
adc
add
jle
mov
movs
retf
and
in
inc
in
pop
or
hlt
add
loop
add
mov
in
fstp
mov
xchg
or
and
retf
sub
gs
xchg
cmps
xor
loop
adc
stc
rcr
movs
repz
(bad)
pop
jne
fisub
fistp
jmp
or
or
bound
jle
ss
sub
xlat
pusha
dec
stc
outs
pop
lods
xor
aaa
inc
out
loop
push
adc
xchg
jmp
inc
(bad)
gs
sar
lock
and
imul
in
dec
call
ins
adc
xor
sti
lods
mov
pusha
xchg
mov
daa
ins
mov
(bad)
jl
aad
mov
ret
or
repz
fcomp
sub
lods
push
shr
in
(bad)
push
xor
leave
int3
test
fpatan
and
sbb
and
stos
xchg
call
push
fldpi
enter
or
sub
ds
(bad)
out
add
ss
outs
fsub
in
ja
jmp
adc
mov
and
push
repnz
loop
and
out
loop
inc
test
fsubr
xchg
sbb
scas
or
mov
xchg
out
icebp
ja
cmp
sbb
sub
in
adc
ror
push
sti
jl
test
loope
inc
cwde
push
push
(bad)
call
retf
sub
xchg
movs
movs
out
ret
push
push
inc
scas
push
add
loope
loopne
inc
in
mov
inc
out
fwait
mov
call
cmp
test
push
cmp
ins
lods
dec
iret
mov
lahf
add
pushf
sbb
inc
sub
jnp
lods
jmp
enter
daa
bswap
cmp
and
int
push
arpl
mov
inc
into
mov
xor
imul
cmp
je
std
adc
fst
orps
jbe
pop
pop
mov
jmp
movs
pop
pop
pop
fs
inc
mov
rcr
cs
hlt
xchg
cwde
scas
fnstcw
mov
(bad)
call
cdq
hlt
xchg
into
icebp
inc
pop
jae
scas
fist
inc
daa
cs
aaa
call
xchg
aad
cmps
and
pop
jmp
jecxz
cmp
push
inc
pop
sahf
sub
push
or
call
hlt
mov
cmp
dec
stos
lods
in
jae
inc
pop
fnstcw
jb
xchg
mov
(bad)
mov
dec
(bad)
inc
repnz
xchg
mov
push
xchg
cmp
movs
sub
das
aas
inc
mov
xchg
pop
mov
inc
sbb
and
push
in
mov
ror
pushf
sar
add
cli
repnz
retf
les
dec
fistp
cmp
xor
sbb
sbb
sub
cmp
mov
sbb
iret
outs
ret
dec
or
shr
(bad)
fwait
cmps
fstp
push
repz
or
jecxz
int3
push
(bad)
mov
push
aaa
cmps
adc
and
popa
adc
in
jbe
cmp
shl
dec
sbb
daa
inc
add
push
xor
mov
xchg
test
int
adc
sbb
repz
fcmovb
inc
or
ins
pushf
xchg
js
xlat
scas
mov
imul
mov
sbb
dec
aaa
cmp
sub
aam
jmp
inc
dec
cmp
out
(bad)
enterw
cmp
mov
inc
adc
lahf
les
mov
sti
icebp
cmps
mov
dec
inc
dec
cdq
jmp
je
nop
jmp
aam
xor
cmp
pushf
push
and
movs
xor
lds
test
mov
das
mov
icebp
jmp
jo
sbb
bound
mov
movs
adc
adc
mov
sbb
jmp
pusha
je
inc
jmp
iret
push
xchg
fidiv
inc
out
xchg
(bad)
jmp
repz
or
pop
jg
pmulhw
and
outs
daa
and
inc
jmp
movs
scas
cmp
cmp
stc
outs
das
cmp
sbb
sub
fnstcw
mov
scas
and
push
jo
aad
test
mov
jle
jbe
dec
xchg
icebp
dec
mov
push
jp
mov
add
ins
jle
mov
and
jne
dec
or
jmp
(bad)
loop
ins
movs
xor
ja
adc
xchg
or
mov
jo
aam
(bad)
popf
lods
inc
xchg
test
fnstsw
jb
add
add
mov
int
push
ror
in
dec
pop
mov
dec
scas
mov
pop
or
mov
daa
imul
pop
dec
adc
imul
dec
sub
sbb
inc
jecxz
adc
adc
outs
mov
jne
adc
pop
jmp
imul
push
dec
call
fld
popa
outs
pop
sbb
stos
idiv
dec
sbb
movs
inc
ins
and
js
xor
push
add
pop
sub
pop
mov
ins
cmp
adc
mov
sar
lahf
sub
ror
mov
pusha
mov
into
out
jo
add
test
inc
setle
xlat
pop
or
cmp
jb
dec
adc
into
mov
enter
and
xchg
retf
mov
jmp
(bad)
xchg
dec
movsx
leave
shl
fcmovnb
int
jo
jb
rol
popa
xor
int
push
mov
and
push
inc
fist
push
cmp
pop
xchg
jmp
outs
pusha
inc
lods
or
inc
jecxz
(bad)
sbb
loopne
aas
sbb
pop
jns
fdivrp
sub
pop
call
sub
call
dec
les
int
cmp
clc
arpl
xor
xchg
test
test
sub
clc
push
add
xor
push
pop
xor
loop
mov
mov
mov
rol
and
imul
mov
jg
in
jmp
sub
inc
inc
das
sar
fadd
xchg
and
aam
int
xchg
sbb
enter
pop
in
fs
push
mov
push
ret
rcl
adc
fwait
daa
xor
cmp
clc
loop
sar
aaa
jl
add
rcr
and
push
push
xor
aad
adc
stos
mov
push
outs
stc
or
mov
mov
xchg
not
cwde
adc
call
push
push
jecxz
(bad)
into
imul
aad
outs
mov
cmp
xor
ret
pop
stos
les
adc
shr
shr
adc
or
into
retf
pop
(bad)
not
enter
lea
push
fxam
enter
cwde
xlat
jle
fisttp
js
sbb
adc
outs
ins
movs
test
mov
jnp
push
inc
stos
ins
dec
fdivr
jmp
rol
lea
cmc
xor
jnp
xchg
mov
dec
jecxz
ins
loopne
retf
jl
mov
xor
cmps
and
out
out
jmp
add
xor
cmp
out
sbb
into
mov
sub
xor
inc
rcl
mov
jl
shl
fisub
push
test
in
inc
and
daa
pop
mov
(bad)
push
ja
cmps
retf
inc
xchg
or
xchg
jno
push
cmc
mov
mov
or
(bad)
dec
add
retf
dec
inc
sub
dec
jo
iret
mov
or
(bad)
ins
test
xor
push
jb
out
into
fld
out
stos
adc
xchg
call
rcr
jecxz
xchg
ret
shl
push
lea
out
jne
pop
xor
jnp
add
call
sub
mov
test
adc
xchg
mov
and
ret
ror
sbb
pop
add
(bad)
pop
cmp
pop
aaa
mov
rcl
dec
push
xchg
inc
add
inc
cmp
ja
jl
ret
push
add
les
out
cmp
jl
lods
jmp
jl
push
jo
scas
int3
sbb
xor
mov
cwde
aas
sbb
lods
jp
jno
ret
nop
test
fwait
add
lods
icebp
movs
in
je
mov
xor
mov
popa
dec
call
fcom
inc
fiadd
cld
sbb
dec
mov
push
lds
std
ds
push
mov
adc
jmp
push
outs
xchg
aas
inc
xchg
adc
adc
sub
test
add
cwde
and
or
jbe
mov
aas
fnstcw
aad
mov
loop
out
or
mov
popf
xlat
arpl
mov
add
cmp
push
adc
lgs
lahf
rol
iret
and
ror
mov
adc
cwde
lahf
mov
mov
movs
xchg
cmp
xchg
mov
movs
aaa
mov
aaa
aad
push
in
fst
mov
mov
fdivr
lods
js
mov
repz
jp
sahf
and
retf
and
int3
sub
xor
add
mov
and
hlt
test
lods
add
lods
jno
push
frstor
ins
dec
lahf
int3
in
pop
leave
(bad)
cmovno
xchg
xor
in
out
hlt
lods
sbb
rcr
jl
movs
and
(bad)
cmp
pop
retf
cwde
lea
pop
or
repz
push
xor
das
(bad)
xor
ss
fist
ins
jle
fs
xor
xor
(bad)
adc
jmp
xlat
push
mov
jg
xchg
lods
lahf
jb
das
sub
pop
clc
fdiv
mov
inc
and
or
dec
fcom
jp
and
movs
jmp
jae
aas
lock
add
aas
adc
imul
fdiv
mov
add
je
ja
jge
movs
sub
sbb
xlat
or
neg
stos
or
push
pop
sbb
ud0
ds
dec
cwde
xor
pop
push
lds
int3
sti
dec
pop
sub
mov
xchg
in
cmps
test
push
aas
or
xchg
xchg
shr
movs
or
mov
inc
xor
in
cmp
dec
enter
nop
dec
call
imul
(bad)
(bad)
jmp
jg
push
push
adc
movs
pop
mov
rol
xchg
lods
imul
scas
jmp
push
xlat
js
jle
push
ins
cmps
daa
jmp
add
and
les
jnp
aaa
shr
scas
pop
push
push
sbb
add
push
je
adc
mov
call
fdivr
stc
xor
jle
into
inc
fdiv
mov
mov
pushf
out
sbb
lahf
or
cmp
gs
sub
aad
and
push
and
clc
retf
stos
imul
pop
or
inc
jae
ds
sbb
mov
sub
icebp
aam
jge
(bad)
xchg
and
sub
mov
jge
movs
jmp
inc
shl
(bad)
xchg
mov
pop
and
push
loopne
ret
ss
sbb
std
jg
xchg
xchg
sahf
ins
push
dec
dec
test
jb
mov
aaa
push
sbb
in
mov
mov
lods
inc
lahf
mov
sub
fs
dec
cmp
aas
mov
or
mov
movs
inc
adc
xor
dec
pop
fist
or
jns
dec
mov
dec
fwait
scas
in
xor
(bad)
rcr
fisub
aam
jb
jmp
xor
pushf
adc
jo
and
stos
dec
fld
cdq
das
icebp
jbe
(bad)
jmp
not
cmps
mov
xor
cmp
(bad)
movs
xchg
jmp
test
mov
pop
movs
dec
and
inc
ficom
shl
je
dec
dec
jns
cmp
test
popf
into
in
mov
inc
add
test
cmp
ret
add
or
mov
mov
sahf
js
sti
repnz
mov
bound
pop
fist
push
das
mov
sub
and
into
inc
stos
(bad)
xlat
jl
popa
dec
push
ror
int3
popa
lods
retf
dec
or
adc
jge
push
push
cmp
(bad)
mov
add
cmp
movs
cmp
je
mov
fcom
test
mov
xchg
ds
test
outs
repnz
scas
addr16
mov
rcl
pop
jb
pusha
ins
or
pop
mov
cmp
lds
int3
ret
lods
mov
xchg
pop
in
xchg
sbb
jl
sahf
add
sbb
jns
add
bound
sbb
cmp
fs
jno
sbb
int3
push
xchg
in
inc
les
sbb
test
pushf
adc
inc
inc
call
sti
dec
test
rcr
jl
das
mov
cld
jecxz
adc
push
call
lds
jle
xchg
(bad)
mov
dec
xchg
add
js
pop
dec
jle
jecxz
repz
mov
out
test
stos
inc
int3
push
fnstenv
push
mov
idiv
push
scas
ins
inc
xchg
hlt
xchg
xchg
leave
imul
gs
popa
mov
mov
xor
inc
loope
cld
test
ds
and
test
jmp
jnp
xor
mov
lods
push
shl
xor
mov
cmp
dec
inc
aam
jmp
jl
cmp
add
fcompp
fcom
(bad)
sti
push
pop
jbe
ret
ss
sbb
retf
mov
(bad)
mov
daa
dec
dec
add
inc
lahf
or
sbb
iret
sbb
fdiv
dec
test
jns
sub
xor
adc
push
xchg
bound
cs
adc
jae
ss
pop
retf
jmp
out
ja
sbb
and
sbb
push
sbb
out
push
lods
iret
mov
repnz
add
test
mov
sbb
retf
pop
pop
rcl
adc
xlat
or
out
ja
addr16
and
mov
(bad)
add
enter
or
in
jle
mov
xchg
mov
xlat
ret
jo
(bad)
pusha
outs
test
push
jg
push
and
(bad)
pusha
jge
and
pop
test
enter
mov
cmps
aas
or
jecxz
cmp
mov
cmp
jo
into
cs
sbb
dec
cmps
in
push
into
cmps
stc
aam
scas
clc
jle
adc
fiadd
mov
dec
ds
pop
cwde
stos
jg
popa
or
cs
mov
pop
push
jge
mov
out
xlat
adc
out
cmp
jmp
test
jge
jmp
test
pop
push
stc
adc
adc
cli
xchg
push
cmps
pop
popf
inc
(bad)
cdq
int
cmp
out
sub
mov
mov
sub
and
int
dec
add
mov
xor
or
jecxz
inc
arpl
xlat
cmc
adc
add
lods
cmp
gs
and
xchg
loop
mov
add
mov
repz
in
jae
loopne
rol
pop
add
lods
dec
dec
add
mov
test
cmps
movs
jnp
mov
in
imul
jnp
addr16
sahf
xchg
sti
(bad)
mov
fs
nop
test
inc
outs
retf
stos
jle
push
cmp
repz
jl
xchg
icebp
mov
and
retf
add
mul
sbb
dec
ins
and
or
mov
retf
int
or
fwait
test
mov
lahf
push
jle
push
xchg
sub
or
ins
std
cmp
xor
std
ja
fbstp
jge
adc
iret
dec
out
cli
jb
and
dec
repnz
mov
into
xchg
sub
add
push
cli
into
dec
push
fimul
int3
shl
outs
fild
cmc
data16
out
iret
jo
or
or
cmp
mov
pusha
ret
inc
jmp
call
aam
ret
xchg
cmps
sti
aam
movs
in
bound
cmp
cmp
mov
arpl
lds
shl
aam
fisubr
jne
in
push
shrd
mov
imul
xor
retf
or
clc
int
sahf
icebp
aad
jbe
mov
mov
mov
int3
push
icebp
sub
cli
loopne
push
jno
mov
std
cdq
outs
push
nop
pop
test
aad
push
shl
clc
or
fsubr
push
adc
pop
mov
dec
sti
sbb
fwait
sub
in
into
les
and
cmp
adc
aad
sbb
add
dec
xchg
aad
ficomp
cli
jle
pushf
fdivr
popf
cmc
cmp
aas
pop
(bad)
stc
and
mov
out
js
scas
adc
jmp
sbb
inc
xchg
add
nop
xor
repnz
movs
push
bound
stos
cli
or
xchg
in
inc
loopne
mov
or
jp
add
sbb
test
in
add
out
enter
ja
test
and
jo
aad
ret
outs
mov
shl
adc
cmc
sbb
jge
cs
dec
dec
imul
(bad)
mov
sbb
adc
adc
cwde
int3
fnstsw
xchg
sbb
scas
les
mov
loope
jmp
xor
mov
vrsqrtss
mov
or
cmp
inc
ja
add
arpl
je
xchg
inc
push
outs
xor
call
rep
mov
pop
pushf
loop
in
xchg
stos
jb
sub
outs
fwait
adc
pop
jmp
shl
movs
lea
stos
pop
sbb
or
out
and
sub
sbb
xchg
out
in
cmps
xor
mov
mov
es
mov
leave
ds
sbb
mov
xlat
imul
dec
shl
add
mov
movs
movs
stc
or
push
fld
call
cmp
dec
call
xchg
retf
mov
ficomp
lock
sub
or
or
or
mov
inc
push
stc
imul
(bad)
mov
fadd
adc
shl
int
pop
scas
sub
stos
ins
fisub
and
ins
jnp
mov
sbb
and
xchg
jae
sub
cli
xor
ss
pop
xchg
xlat
add
scas
iret
movs
sub
sub
pop
xchg
imul
hlt
repz
div
add
imul
out
dec
daa
imul
je
int
and
lea
add
lods
xlat
popf
cs
mov
xor
jb
sub
test
shl
ret
fcom
cmp
fst
in
stos
loopne
xchg
xchg
dec
mov
cmp
and
call
mov
popf
les
xchg
mov
ret
div
push
shr
movs
pop
ins
cdq
call
nop
das
lea
gs
movs
xchg
xor
inc
inc
sub
test
imul
pushf
ror
lahf
and
xchg
jns
call
loopne
ds
rol
pushf
popf
adc
aaa
or
fisttp
cs
js
jge
dec
ins
mov
pop
xchg
cmc
dec
(bad)
in
shl
pop
imul
fild
out
imul
pop
sar
or
dec
xchg
mov
fcomi
and
add
loope
and
out
scas
mov
adc
xor
dec
(bad)
jmp
dec
mov
call
jecxz
lea
ss
sub
mov
imul
jmp
int
jne
iret
mov
in
xchg
iret
mov
pop
push
adc
imul
les
imul
jg
cmps
lods
sbb
push
outs
movs
icebp
mov
adc
mov
les
sub
adc
mov
aaa
cmp
mov
and
xchg
ret
sti
cmovs
add
push
adc
ss
push
mov
lods
cmp
sbb
mov
mov
int
cmps
(bad)
aas
pop
dec
in
add
xchg
sbb
gs
pop
mov
adc
popa
in
ja
sbb
mov
cdq
call
into
mov
shr
cmp
mov
push
je
adc
jmp
lahf
fcomp
xchg
inc
cmp
sub
or
dec
pop
and
in
mov
aam
clc
push
mov
movs
push
out
test
lock
xor
sub
xchg
pop
dec
xor
mov
push
or
xor
jle
add
sbb
scas
dec
cwde
and
shr
mov
jbe
or
icebp
in
ins
cmp
and
jl
repnz
rol
mov
aam
jno
sti
fisub
pop
sub
xor
sbb
mov
fsub
pop
dec
fisub
loop
fs
dec
inc
mov
psubq
movs
sti
pop
rol
jb
scas
ret
(bad)
in
scas
es
dec
dec
dec
call
div
fcmovb
out
push
and
pop
(bad)
fadd
ret
ss
cmc
inc
ficom
dec
xor
mov
cs
loop
cld
in
outs
mov
int
loope
je
xor
cmp
dec
ficom
in
loop
xor
(bad)
arpl
ret
inc
add
inc
jbe
cld
pop
outs
leave
mov
mov
movs
pop
fcomp
std
ret
sbb
or
xor
out
sbb
push
in
iret
cwde
daa
mov
pop
rol
scas
mov
cmps
push
in
mov
mov
and
fisttp
jmp
jp
ret
loop
xchg
or
jno
cmp
enter
xchg
pop
cmp
jge
add
push
sub
inc
fnstcw
add
add
rol
jb
icebp
inc
mov
xchg
push
(bad)
retf
xor
sahf
add
aaa
cmp
jp
pop
cmc
ins
mov
int
fiadd
sbb
(bad)
rcl
movs
cmp
or
lods
movs
mov
adc
adc
jmp
xchg
(bad)
cmp
add
dec
jne
xor
adc
stos
test
mov
jnp
mov
fwait
dec
pop
movs
les
adc
popa
dec
mov
inc
nop
push
sbb
push
push
retf
shl
mov
call
test
arpl
inc
jle
ds
sub
mov
ret
popa
fwait
retf
pop
sbb
xor
pop
aaa
in
ins
mov
adc
retf
pop
arpl
gs
xor
lods
cmps
mov
scas
sub
ins
inc
in
cmp
dec
fs
ja
in
cmp
sub
cmp
xchg
cmp
ret
sub
movs
cmp
push
adc
fst
and
mov
inc
outs
(bad)
cli
enter
push
outs
or
pop
inc
sub
stos
mov
xor
out
mov
xor
pusha
ret
movs
dec
mov
and
(bad)
fsubrp
cmps
and
sub
mov
pop
sbb
mov
mov
and
fs
lods
jle
or
xchg
icebp
adc
out
inc
jmp
sbb
mov
ja
repnz
push
fs
cli
aam
(bad)
jae
outs
xchg
mov
ss
into
jns
loope
push
mov
fwait
repz
ds
cmp
pop
push
int3
(bad)
inc
into
jmp
aaa
sub
jbe
sub
ret
sbb
int
pop
lahf
enter
add
sub
call
sbb
out
inc
rcr
mov
out
push
sbb
repnz
dec
lea
push
jecxz
cs
pop
scas
out
out
xor
mov
movs
out
int
test
loopne
idiv
mov
sar
sbb
(bad)
fsubr
(bad)
and
jl
sbb
and
outs
ss
out
and
outs
stos
shl
push
in
jno
fisttp
test
mov
jecxz
(bad)
repz
lea
(bad)
xor
loope
inc
in
ins
mov
or
imul
jg
bound
inc
mov
and
xchg
xchg
push
movs
(bad)
pop
mov
lods
push
adc
inc
mov
(bad)
push
adc
or
(bad)
cmp
xor
mov
push
lahf
mov
dec
jle
mov
nop
pushf
imul
dec
aad
addr16
sub
inc
dec
jle
mov
xchg
pop
add
stc
jae
xchg
cmp
adc
leave
imul
pop
xor
push
je
in
test
xchg
repz
in
jbe
pop
jae
icebp
fwait
div
daa
aas
cld
fs
pop
enter
dec
push
ret
test
push
ins
mov
icebp
shl
mov
jae
pushf
cmp
les
add
(bad)
sbb
push
cmps
in
inc
jno
idiv
rcr
pop
sbb
mov
sti
adc
mov
pushf
xchg
mov
retf
hlt
xchg
out
test
arpl
ja
mov
mov
dec
bound
or
lea
xor
cld
rcr
std
sbb
fisttp
xor
add
jb
xlat
icebp
jmp
and
cdq
les
(bad)
(bad)
cdq
adc
call
ret
aas
stos
push
push
leave
test
cmp
lahf
inc
fild
add
mov
cli
inc
sbb
sbb
adc
sbb
cmp
jnp
lock
and
add
push
sbb
sti
inc
lods
jg
mov
fmul
data16
push
icebp
cmp
mov
mov
cmp
mov
pushf
pop
test
push
inc
or
loop
fucom
jge
mov
sub
or
xlat
inc
or
cmp
xor
inc
daa
push
push
fmul
cld
cmp
pop
inc
sub
stc
add
lods
stc
retf
fbld
xor
and
mov
dec
pop
jno
in
adc
cwde
cli
repnz
frstor
ret
pop
sbb
add
iret
adc
mov
jo
cmp
leave
xchg
js
inc
push
xchg
jnp
mov
xchg
sbb
(bad)
test
lods
fstp
xchg
fisttp
jbe
test
out
mov
pop
sub
sbb
jae
std
gs
sub
and
lock
cld
cmps
pushf
jbe
into
cld
sub
mov
push
ins
rcl
ins
dec
call
inc
(bad)
into
mov
inc
sub
push
jno
retf
mov
enter
ror
mov
fstp
into
fs
test
jne
pop
cmps
loope
xchg
or
jmp
aam
mov
adc
mov
and
mov
dec
jnp
dec
arpl
iret
pusha
or
dec
psubw
cmp
mov
ret
(bad)
imul
(bad)
retf
jmp
imul
jmp
xchg
ret
sahf
out
add
sti
lock
into
inc
jns
dec
mov
cmp
mov
scas
xor
cli
sbb
xchg
out
mov
and
jmp
stos
xchg
sub
push
out
pop
sub
(bad)
pop
xchg
stos
mov
popa
out
int
sti
gs
mov
inc
js
sbb
sub
add
and
out
adc
pop
push
and
idiv
push
xlat
mov
adc
cmp
out
repz
aad
or
(bad)
adc
mov
pop
xchg
and
adc
xchg
(bad)
mov
es
push
and
je
mov
(bad)
je
scas
das
sbb
mov
mov
lock
jnp
std
pop
mov
xlat
mov
push
sti
dec
bound
push
mov
jle
sbb
adc
or
sub
int
jp
shl
aad
iret
push
add
pop
mov
cmp
neg
cmp
retf
mov
add
push
or
outs
outs
imul
data16
das
xor
call
repz
mov
and
add
inc
stos
addr16
ins
mov
push
enter
mov
or
(bad)
(bad)
fsubr
and
pusha
shl
and
xor
dec
and
push
stos
sub
adc
pushf
int
jmp
cmp
jo
adc
repz
ja
jns
retf
dec
cs
iret
pushf
push
popa
push
mov
pop
popa
jl
(bad)
jmp
cwde
xor
mov
sub
cmp
lock
dec
bound
sbb
adc
jne
(bad)
pop
push
push
out
mov
sti
sbb
pop
sti
pop
push
scas
dec
(bad)
cmp
int
fadd
ins
into
repz
and
ja
or
idiv
sbb
imul
call
sbb
push
mov
ins
imul
pop
daa
imul
sbb
or
sar
clc
mov
sub
sbb
jmp
popf
cmc
or
outs
xchg
xchg
sar
pop
cmc
enter
lock
jns
into
mov
mov
xchg
fidivr
fidiv
or
retf
and
test
movs
xchg
inc
xor
test
add
dec
daa
lds
cld
add
add
(bad)
rol
mov
lds
loopne
clc
mov
data16
cwde
push
cmp
cmp
lahf
cmp
mov
int3
rol
jne
stos
repnz
jmp
cmp
lods
fdivrp
bt
push
pop
xor
or
fimul
jle
dec
push
(bad)
xchg
push
leave
inc
ret
jne
stc
cmp
or
mov
jno
cmps
push
repnz
lahf
cmp
sahf
push
leave
(bad)
je
or
stos
xchg
fidiv
scas
hlt
add
ins
mov
pushf
out
add
sbb
adc
push
or
inc
dec
aad
fs
inc
stos
cli
xchg
sbb
mov
sbb
cmc
inc
icebp
jg
cwde
fcmovnbe
jle
iret
cmp
add
push
push
test
pop
and
mov
cmp
out
data16
push
mov
int3
jg
mov
iret
fist
jecxz
add
mov
xor
cmp
nop
(bad)
cmp
das
mov
imul
adc
int
adc
adc
nop
and
cmc
into
gs
lods
or
fs
jno
xchg
sub
pop
int
push
inc
cmp
mov
je
pop
jae
fdivr
nop
lea
pop
dec
out
loopne
push
outs
adc
pop
push
sahf
or
fcomp
sub
and
mov
out
sahf
cwde
pop
sub
inc
nop
and
push
fisttp
in
xor
and
dec
repnz
cmp
fiadd
pop
hlt
mov
mov
cmp
mov
repz
es
outs
(bad)
inc
inc
call
pop
das
jp
imul
or
add
cmp
test
pop
adc
not
jmp
imul
popf
push
dec
mov
out
call
pushf
inc
mov
mov
aas
sub
cwd
jge
mov
(bad)
dec
je
xor
push
cmp
or
lea
mov
ret
(bad)
pop
loope
dec
mov
js
mov
ja
dec
xor
jno
out
cmp
and
jg
push
mov
sbb
stos
aad
xlat
(bad)
sbb
or
inc
shl
lock
jae
loopne
cmp
push
xor
cmps
mov
or
jbe
lock
pop
jecxz
push
adc
iret
cmc
movs
inc
fst
cmp
mov
bound
out
lea
cs
push
push
mov
sti
xor
jns
sbb
adc
cld
push
push
add
pop
cs
xchg
jl
cmp
add
push
data16
cs
frstor
les
pop
mov
adc
sub
add
sahf
pop
and
cwde
mov
xchg
hlt
popf
hlt
mov
(bad)
retf
es
scas
test
adc
outs
pushf
and
inc
pop
retf
sahf
mov
sbb
sbb
mov
mov
ins
xlat
mov
mov
sbb
mov
dec
mov
fisub
stos
in
repnz
sbb
test
cmp
jnp
inc
push
pop
lods
xchg
push
jl
jp
mov
in
out
add
das
pop
pop
add
push
test
in
inc
dec
inc
mov
adc
sbb
inc
fwait
test
mov
ja
lea
sub
test
push
lahf
adc
or
mov
cmc
scas
jbe
dec
leave
inc
xchg
pop
loopne
sbb
xchg
pop
inc
pop
jmp
out
fs
push
adc
mov
pop
pop
mov
mov
jp
push
and
std
push
push
das
xchg
scas
addr16
data16
xor
into
cmp
pop
scas
mov
pop
popa
cld
call
mov
loopne
push
and
mov
fwait
mov
pop
and
jle
mov
jmp
jge
int3
loopne
push
jl
jb
aas
sbb
jp
push
inc
cmp
inc
jnp
cmc
in
xchg
sbb
sub
lods
or
xchg
or
loope
out
sbb
inc
mov
hlt
sbb
jmp
jne
push
jnp
mov
xchg
sahf
(bad)
(bad)
inc
add
jo
nop
or
stc
jae
jmp
ds
add
fidiv
ja
jge
out
xchg
mov
or
outs
jecxz
inc
dec
adc
sti
inc
clc
sbb
mov
out
and
add
outs
mov
ins
jo
pop
sar
aaa
sub
or
xchg
jle
ret
nop
sahf
es
push
and
push
shl
mov
inc
mov
sbb
les
mov
pusha
not
xchg
daa
and
adc
and
and
or
jnp
imul
cdq
jo
fyl2x
xor
daa
jae
retf
sti
jbe
ja
or
fxch
div
nop
aam
pop
sbb
dec
cmp
xor
psubsb
xlat
xor
adc
int3
sbb
xchg
mov
stos
dec
das
aam
jmp
or
sub
cmp
lods
mov
and
jmp
and
ja
mov
arpl
sub
ror
sbb
repnz
dec
pop
outs
sbb
or
xchg
stc
(bad)
test
clc
inc
push
call
cld
pop
ss
mov
mov
fwait
xchg
jge
cmp
jg
aaa
inc
inc
sub
dec
loopne
mov
push
push
inc
and
test
mov
in
cmps
(bad)
popf
xchg
fwait
add
cdq
xor
sub
pop
sub
nop
mov
test
sbb
pop
sub
(bad)
hlt
cmp
jno
hlt
push
les
push
ins
adc
imul
mov
mov
jae
enter
mov
vaddsubpd
arpl
retf
test
xchg
push
push
rcl
addr16
les
add
call
add
pop
push
lods
mov
push
and
sub
ins
dec
mov
shr
cs
loop
add
jge
stos
xor
cmp
(bad)
int
(bad)
push
mov
into
mov
ds
iret
(bad)
repz
adc
push
rcl
sub
int3
div
std
cs
inc
inc
cmp
cwde
dec
test
nop
or
in
xor
add
jnp
stc
into
jg
xor
les
xchg
mov
pop
pop
push
shl
popf
sbb
das
mov
ds
cli
rol
sub
pop
rol
and
jmp
xor
mov
aam
xor
adc
push
and
push
jge
add
mov
(bad)
(bad)
imul
xchg
cwde
mov
stc
push
iret
mov
or
jmp
mov
xor
out
xor
lods
jmp
stos
inc
rcr
xor
and
in
jecxz
push
popf
push
inc
cli
add
jae
aad
add
inc
rcl
mov
xchg
call
mov
in
push
mov
jecxz
push
sbb
push
pop
sub
fisub
dec
imul
mov
(bad)
jb
mov
das
test
sbb
jp
mov
fist
mov
adc
dec
jo
ss
retf
clc
lods
dec
cmps
and
or
jae
fstp
or
push
test
add
inc
adc
xchg
dec
jno
outs
lock
aam
and
sbb
jp
mov
and
pop
stos
retf
int
xchg
pop
add
outs
sti
outs
inc
dec
jno
mov
and
ret
jb
iret
fld
or
pop
inc
inc
stos
mov
pop
pop
pop
add
in
test
adc
lods
mov
mov
add
inc
daa
jg
lea
push
xor
div
mov
clc
ret
mov
sub
es
mov
cmp
sti
ror
mov
icebp
scas
cmp
jnp
je
add
imul
loop
ja
jmp
push
sahf
push
pusha
aas
or
cmp
cdq
mov
rcl
add
xor
stc
outs
push
sahf
pavgb
cmp
sbb
pop
ins
jg
mov
push
scas
sub
pop
jge
ret
lods
test
push
daa
sbb
lods
and
mov
add
shr
xchg
not
inc
in
stc
sti
xor
mov
dec
pop
dec
ss
push
or
push
jbe
adc
out
pop
mov
mov
jnp
pop
pop
sti
out
mov
(bad)
cmp
add
sub
push
popw
outs
imul
cmp
and
add
xor
or
loope
aad
cmp
push
xchg
mov
mov
into
dec
lods
add
jbe
and
mov
xchg
mov
lds
sti
mov
loope
(bad)
pop
adc
mov
mov
cmp
cmps
ds
ins
loope
(bad)
and
ja
test
push
pop
in
and
pushf
fnstenv
loopne
std
test
jmp
and
dec
adc
mov
dec
imul
jle
mov
mov
xor
lahf
cs
xchg
inc
or
add
out
inc
mov
imul
cli
mov
adc
gs
pusha
jbe
int
(bad)
jmp
(bad)
(bad)
push
sbb
lds
mov
loop
push
(bad)
cmp
add
adc
stc
(bad)
mov
sub
push
sbb
and
leave
(bad)
xor
jg
mov
retf
clc
stos
adc
xor
mov
fdivrp
jo
cmps
xchg
aaa
sub
arpl
sbb
(bad)
jmp
fsubr
mov
out
xlat
mov
loop
fdiv
out
xlat
jns
in
or
(bad)
jns
sar
in
pop
push
jbe
push
imul
adc
adc
add
sahf
xor
sub
out
jns
popa
and
pop
test
adc
enter
pop
and
xchg
mov
adc
inc
jge
sahf
sbb
in
mov
into
rcr
inc
xchg
aam
push
xlat
pop
jne
stos
xchg
inc
mov
mov
mul
push
scas
push
test
test
push
jge
and
dec
mov
dec
push
cli
addr16
cmp
or
xchg
xchg
jno
imul
shr
pop
sub
retf
iret
fimul
(bad)
aas
not
xchg
xor
sub
pop
xor
enter
mov
and
xor
int3
or
rcr
les
cmp
mov
xchg
iret
lock
lods
inc
into
push
mov
addr16
retf
push
xchg
xchg
jg
in
cmp
fnstsw
cmc
pop
jbe
into
dec
repz
lods
sti
dec
mov
lods
jecxz
mov
cmc
mov
push
(bad)
ds
call
dec
pop
jnp
mov
out
popf
and
adc
daa
xor
xor
jb
xchg
cmp
mov
imul
xchg
push
push
mov
cmp
xchg
pop
sub
dec
fs
mov
push
mov
pushf
and
or
xchg
pop
cmp
inc
clc
lock
std
lods
pop
(bad)
mov
je
adc
in
push
in
pop
xchg
in
mov
rol
neg
jae
inc
retf
inc
repz
xchg
push
fstp
cmp
sub
fld
dec
or
sar
aaa
dec
psraw
push
add
jns
retf
mov
push
aaa
inc
int3
lahf
sbb
inc
mov
cdq
mov
out
cmp
mov
loop
repnz
in
fdivr
sub
sub
lods
adc
arpl
not
sar
lods
jnp
push
fsubrp
push
ins
sbb
xor
arpl
outs
ret
das
mov
frstor
int
jne
aas
and
push
std
mov
pop
fs
out
inc
sbb
or
retf
jl
mov
cmps
mov
xor
and
outs
inc
push
mov
sbb
xchg
push
les
cmp
loope
jno
scas
xchg
bound
and
inc
ret
mov
xchg
rol
push
aas
rol
or
sbb
les
jno
or
sub
out
jmp
fdivr
fwait
outs
pop
push
dec
sbb
or
minps
jmp
je
int3
mov
inc
mov
and
fs
lods
sub
dec
jg
fsubr
inc
ss
aaa
pushf
jg
mov
jns
pop
push
jne
aam
sub
xor
pop
inc
adc
sti
(bad)
fcomp
push
outs
pop
cmp
ja
nop
xchg
pop
cmp
xchg
cmp
fld
daa
les
sbb
ret
shr
retf
mov
pop
or
sub
mov
aaa
ret
rol
outs
push
clc
and
ret
fiadd
jl
inc
(bad)
rcl
idiv
adc
in
scas
or
icebp
inc
mov
sub
cwde
shr
rcl
inc
shl
and
mov
mov
addr16
loop
aad
iret
call
jae
cs
pop
in
jecxz
out
xchg
and
push
xchg
movs
xchg
neg
jo
add
mov
and
fwait
(bad)
scas
jg
loope
inc
shl
add
jle
jbe
inc
lds
mov
cmp
inc
push
mov
in
xchg
inc
pusha
mov
mov
jne
jbe
jnp
sbb
and
mov
aaa
inc
ds
mov
sub
call
ret
pop
mov
add
setl
pop
int3
cmps
push
pop
mov
loopne
xchg
or
push
outs
xor
inc
add
and
mov
jae
inc
push
pop
nop
imul
sub
dec
xchg
adc
jge
add
push
popa
cmp
push
pop
repnz
or
das
stc
add
cs
push
xchg
test
xchg
inc
pop
add
adc
retf
(bad)
imul
mov
xor
adc
add
loop
sbb
popf
adc
xor
adc
inc
cs
mov
mov
out
adc
fadd
dec
lods
imul
fidiv
(bad)
out
push
es
out
push
push
test
cmps
pop
mov
xchg
dec
cmp
adc
fidiv
sbb
jle
add
es
(bad)
xchg
dec
mov
nop
mov
mov
push
shr
shl
and
add
(bad)
out
into
sbb
lea
jne
arpl
js
xchg
xchg
cli
inc
inc
push
push
mov
xchg
lahf
cmp
fcom
out
pop
and
in
cdq
iret
sub
sub
jle
imul
add
jb
(bad)
addr16
movs
push
stos
push
mov
adc
aam
paddusw
and
and
add
test
add
push
dec
ret
shl
fisttp
int3
call
pop
mov
dec
push
and
fwait
pop
cli
aad
xlat
sbb
shr
ja
hlt
out
jae
into
xor
popf
and
outs
mov
bound
xor
lds
adc
aaa
inc
pop
pop
cmc
(bad)
cld
ja
mov
lahf
mov
pop
shl
dec
sub
out
add
ret
xchg
pop
in
inc
cmp
push
int3
xor
scas
sbb
aas
jge
hlt
xlat
or
test
mov
or
out
loop
xchg
lea
or
jecxz
mov
sbb
sub
xchg
cmp
jno
es
sub
loop
cmps
inc
test
pusha
test
and
dec
xchg
xchg
js
push
data16
sti
out
push
scas
pop
mov
movs
lock
dec
loope
shr
pushf
sbb
aas
cs
or
xor
fnstcw
test
hlt
xor
sub
inc
ror
sub
mov
pop
xlat
inc
out
data16
mov
vmwrite
mov
xor
sbb
lds
mov
sbb
push
out
jle
add
fwait
sub
and
stos
rol
cmc
rcl
dec
cmc
out
cmp
pushf
not
pop
arpl
sbb
push
sub
or
dec
outs
mov
pushf
mov
xchg
nop
mov
data16
es
(bad)
jnp
inc
cld
stos
cmp
aaa
sub
std
pop
and
outs
push
mov
cmp
cld
push
or
xchg
call
mov
test
xor
mov
inc
stos
mov
je
in
jbe
jp
clc
jo
push
pop
jl
mov
hlt
cdq
sar
push
dec
sbb
ror
mov
(bad)
stc
push
pop
dec
aad
jge
out
and
hlt
in
fwait
repnz
mov
jbe
jns
stc
pop
add
sub
mov
das
into
adc
sqrtps
lock
int3
mov
ss
je
xchg
mov
pop
pop
ud0
jl
int3
push
mov
mov
imul
inc
out
std
in
outs
sub
lods
dec
das
popf
clc
cmp
pop
xchg
dec
or
retf
pop
pop
pop
ret
pop
pop
mov
push
(bad)
lahf
stc
lea
cmp
ins
dec
sahf
popa
xor
leave
repnz
jle
jns
mov
pop
mov
and
daa
inc
pop
fwait
addr16
gs
jp
xor
retf
mov
fs
jae
adc
push
adc
and
in
inc
pop
or
cmps
sbb
sti
push
fldenv
idiv
in
sub
push
movs
jge
cmc
jbe
imul
cmp
ja
out
and
in
mov
pop
shr
jecxz
mov
bound
imul
aad
test
clc
jbe
lods
jmp
mov
jae
(bad)
in
mov
call
pop
sbb
adc
out
jnp
mov
dec
cwde
adc
jns
mov
cmc
mov
pop
jmp
sar
adc
icebp
(bad)
test
addr16
pop
in
movs
std
das
jle
cmp
das
mov
or
inc
loope
xchg
imul
retf
adc
lahf
sti
fst
cmp
adc
loop
les
cmp
jmp
mov
xchg
xchg
xchg
adc
gs
sub
sbb
cwde
adc
movs
shl
icebp
adc
out
ins
push
xor
out
call
xchg
cmp
mov
pop
cs
dec
inc
xor
cli
sub
cs
fcomp
(bad)
mov
lahf
stos
or
inc
pop
sti
inc
mov
adc
sti
adc
pop
mov
sar
(bad)
imul
(bad)
sbb
pop
(bad)
stc
popf
jmp
push
add
jne
in
or
bound
stos
iret
stc
adc
or
lock
(bad)
lea
loop
rcl
sbb
sar
popf
dec
and
pushf
and
jb
xchg
mov
sahf
lods
fist
in
mov
or
icebp
xchg
xchg
fcom
adc
ins
imul
fs
pop
fwait
test
xor
sub
mov
push
cli
aaa
ss
icebp
imul
cmps
test
and
popa
daa
(bad)
adc
sbb
test
xor
pushf
xchg
adc
hlt
imul
(bad)
lods
cmp
sub
jl
mov
retf
hlt
dec
in
push
xchg
aas
out
mov
cwde
mov
cmp
lods
adc
cmc
adc
(bad)
std
jp
out
mov
or
sub
mov
pop
or
(bad)
int
test
int
repnz
or
pusha
sbb
lock
fadd
loop
cli
les
jmp
les
mov
push
fbstp
mov
nop
jg
das
jbe
push
cs
mov
loopne
pop
dec
loope
dec
in
sti
(bad)
loopne
outs
pusha
pop
stos
or
shl
fwait
in
pop
pop
in
icebp
push
imul
mov
mov
fst
pusha
mov
cmp
enter
je
adc
clc
add
adc
addr16
scas
mov
mov
popa
(bad)
xor
push
jae
in
adc
mov
lods
mov
push
jg
jge
mov
jae
fiadd
into
clc
std
fucomp
xor
jae
pop
mov
mov
or
pop
bnd
push
and
fst
into
and
scas
stos
sar
mov
retf
fs
xchg
and
xchg
test
jae
dec
addr16
(bad)
retf
mov
pop
pop
jno
add
fsub
inc
or
mov
int
movs
and
mov
fwait
mov
inc
hlt
cmp
lods
xchg
shl
jle
out
adc
pop
sub
pop
pop
jo
ror
lods
test
mov
aam
xchg
ja
inc
aaa
jle
xor
jae
(bad)
push
call
and
or
sbb
sbb
and
icebp
xchg
ror
xor
lock
gs
inc
or
sbb
inc
sar
mov
mov
movs
retf
push
ins
mov
cmps
push
sub
xchg
fdivr
fsub
cs
cld
(bad)
hlt
bound
hlt
xchg
pop
out
dec
pop
(bad)
in
and
jl
je
enter
out
add
cmp
loope
jle
or
test
(bad)
push
pop
pop
xchg
xor
retf
add
xchg
or
push
cmp
popf
in
fdivr
jp
pop
pop
outs
mov
adc
scas
push
dec
mov
mov
movs
sub
data16
into
push
push
es
cld
sub
xchg
dec
dec
int
and
and
aam
dec
mov
xchg
and
int
sbb
xor
or
sub
jle
sbb
in
mov
aam
inc
test
mov
add
ret
push
out
or
mov
adc
les
call
xchg
test
sbb
(bad)
std
(bad)
cmc
cmp
dec
ins
xchg
push
jb
addr16
mov
hlt
xor
and
lods
sbb
imul
cmps
stc
out
pusha
mov
ins
sbb
loopne
stc
jge
leave
fild
daa
ss
pop
aam
dec
fwait
mov
mov
xor
sub
(bad)
aaa
jnp
fisttp
nop
std
or
imul
leave
(bad)
into
xor
adc
loopne
mov
ds
into
int3
sahf
jge
dec
popf
jns
pop
lock
and
cs
js
mov
div
sub
pop
shl
jle
or
or
add
jbe
loope
and
xchg
in
lahf
push
into
sbb
adc
mov
mov
xor
jecxz
pushf
cdq
fs
dec
pop
mov
jno
jg
push
jo
fist
pop
mov
or
mov
sbb
(bad)
sbb
test
push
les
loop
push
shl
in
and
sti
push
gs
and
sub
adc
imul
movs
sub
pop
fcmove
ja
xchg
or
add
mov
xor
ins
call
pop
sbb
cmp
mov
xchg
aam
pop
js
cwde
mov
ja
pushf
jbe
xor
gs
cmp
popa
shl
loop
fwait
lods
cli
test
sahf
push
adc
sub
stos
push
repnz
xor
call
adc
ds
and
and
or
out
ror
in
(bad)
or
inc
sahf
cli
adc
mov
(bad)
pusha
mov
clc
fidiv
add
mov
fmul
mov
aaa
cli
add
outs
or
mov
ins
and
cli
daa
inc
into
ret
pop
inc
in
mov
ficom
cmp
pop
pop
movs
ret
xor
pushf
jle
icebp
push
mov
inc
fld
or
push
jmp
xor
inc
mov
popa
into
aam
repz
mov
add
std
sbb
bound
dec
out
pop
dec
adc
xor
popf
jno
xchg
imul
mov
stc
dec
loop
and
scas
push
inc
js
imul
or
jnp
pusha
and
dec
dec
popa
mov
cmp
push
enter
add
jg
xchg
inc
jle
out
pop
adc
push
je
dec
dec
out
imul
mov
sub
mov
jp
xchg
pop
pop
jne
mov
mov
or
cmp
sahf
jge
test
loope
cmp
stc
xchg
mov
adc
sbb
pop
jp
xchg
sahf
xchg
xchg
xor
push
mov
repz
(bad)
adc
jo
(bad)
retf
mov
jns
mov
adc
mov
mov
jns
inc
stos
ror
rcr
inc
aaa
sbb
cmp
xchg
and
mov
sub
fadd
add
or
xchg
inc
sub
icebp
test
call
pop
popf
mov
inc
dec
dec
or
inc
pop
leave
pop
std
push
fwait
push
retf
and
sub
call
mov
out
shl
jb
inc
test
mov
and
adc
mov
ins
out
or
xchg
push
es
mov
icebp
adc
and
mov
mov
push
jmp
fnstenv
or
dec
iret
push
inc
jg
fcmovnb
dec
in
outs
push
lds
pop
inc
inc
test
sub
and
dec
adc
or
dec
dec
or
rcr
add
xchg
fimul
push
pop
inc
xlat
pop
idiv
mov
push
fld
dec
sub
push
push
add
lock
sbb
inc
dec
outs
call
lds
mov
aad
mov
inc
jae
data16
sub
sbb
mov
popa
mov
das
test
lds
(bad)
add
mov
ins
ret
adc
out
pusha
or
and
and
js
aas
sub
ins
xor
mov
xchg
adc
rcr
iret
call
fs
aam
cmovnp
out
leave
add
jp
imul
inc
pop
in
stc
in
cmp
dec
das
aaa
rcl
sub
pushf
ins
ret
call
aam
cmc
xor
jmp
push
movs
or
rcr
fcos
div
cmp
leave
or
not
popf
sbb
bound
cmp
loope
push
xchg
leave
retf
and
jne
inc
call
stos
dec
arpl
cmps
mov
lsl
retf
popf
fwait
mov
gs
sub
fsincos
retf
mov
xchg
mov
sbb
push
and
dec
out
retf
jo
push
fstp
add
das
mov
xchg
adc
xchg
(bad)
repz
inc
xchg
cmps
xchg
pop
retf
addr16
xchg
gs
fwait
cmp
addr16
jbe
ss
into
arpl
data16
nop
retf
cld
lock
enter
mov
dec
hlt
cmp
inc
les
fsub
cwde
inc
pop
shr
mov
pop
gs
nop
test
mov
mov
push
sbb
(bad)
fnstenv
jo
ja
mov
cs
add
out
xchg
aam
dec
outs
push
sar
les
add
sub
test
daa
jge
cmp
fcomi
dec
sbb
jg
dec
dec
add
and
dec
sahf
ret
mov
or
fucompp
and
adc
daa
ret
fld
ja
jmp
rcr
(bad)
mov
xor
jle
rcr
lea
(bad)
sub
sbb
sub
test
cmp
push
push
mov
dec
dec
ror
and
xchg
data16
dec
shl
int3
push
mov
cmp
mov
jno
lods
cli
add
pop
sub
sahf
add
xor
les
(bad)
sti
cli
sbb
adc
shr
cmps
xchg
adc
push
xchg
div
int
cmc
imul
out
push
jmp
jb
ins
fisttp
add
imul
xchg
push
(bad)
or
lock
cs
in
push
fs
(bad)
div
(bad)
aam
out
jae
fcmovnu
or
in
popa
mov
aam
clc
mov
or
mov
fld
push
loopne
sub
jmp
cmp
nop
and
sub
dec
stos
and
xchg
cmps
pushf
loope
mov
mov
push
scas
jnp
in
sbb
fwait
loopne
test
sub
sub
and
cdq
scas
aas
jmp
shl
add
xor
cli
pop
xchg
jno
lods
bound
in
imul
mov
mov
lods
dec
loope
mov
push
jle
(bad)
fcomp
(bad)
mov
and
xor
int3
mov
sub
push
inc
add
in
dec
inc
cli
int
cmp
sahf
sbb
call
push
jmp
unpcklps
push
shl
fs
cld
ins
std
jo
shl
lods
sub
imul
retf
dec
jno
jle
dec
outs
adc
sbb
cmp
mov
push
les
mov
xor
arpl
and
stc
dec
pop
and
outs
lea
mov
or
mov
(bad)
stc
dec
clc
retf
push
pop
ins
jl
bnd
xor
ins
dec
add
jle
pushf
arpl
dec
and
sar
or
ss
lahf
mov
xor
mov
gs
into
repnz
push
push
jle
inc
out
dec
pushf
push
repnz
jmp
add
bound
es
add
push
pop
push
xor
xabort
in
mov
hlt
inc
cmp
xchg
lds
scas
sub
ss
into
imul
fnstsw
mov
fsub
js
mov
pop
cmc
(bad)
jl
sub
cdq
test
jmp
loopne
dec
jecxz
movs
sti
and
rcl
scas
or
jo
jmp
enter
add
cmp
sbb
dec
pop
loopne
fistp
mov
jmp
test
daa
dec
gs
mov
adc
cmps
add
(bad)
fucomp
and
call
or
cwde
lds
push
push
ins
xchg
add
mov
dec
mov
mov
(bad)
mov
inc
mov
inc
sub
in
or
not
mov
mov
sbb
sub
leave
es
add
icebp
js
(bad)
dec
cli
push
add
and
sbb
dec
cs
pusha
cmp
(bad)
mov
sbb
das
push
or
sbb
pop
push
sub
ss
and
mov
xchg
movs
test
or
cs
push
hlt
out
push
mov
(bad)
pop
xor
adc
clc
scas
retf
sbb
mov
adc
push
lods
(bad)
jb
adc
xor
xchg
scas
sbb
cmps
push
push
inc
popa
pop
ret
mov
das
push
icebp
xor
aaa
cmp
in
sbb
mov
add
dec
or
sbb
jmp
mov
inc
gs
ret
jae
add
mov
cmp
jnp
push
cs
xchg
pop
div
cmp
shl
inc
mov
in
leave
adc
xchg
lds
adc
dec
aas
test
hlt
mov
add
sbb
push
jge
out
pop
xor
fiadd
icebp
xor
jle
adc
inc
in
and
push
lea
xchg
(bad)
(bad)
das
push
add
xchg
neg
ss
mov
sub
mov
pop
loope
in
(bad)
nop
mov
sahf
mov
add
(bad)
mov
mov
pop
aas
pop
fwait
jge
xchg
adc
mov
mov
mul
cmps
xchg
(bad)
mov
mov
ret
mov
lods
pavgw
test
xor
dec
cmc
loop
cmp
sbb
mov
mov
aas
popf
aas
jmp
pop
adc
int
pop
jmp
mov
jo
iret
dec
inc
je
ins
push
retf
loop
in
xor
jecxz
mov
mov
lods
and
out
jp
cmp
es
mov
and
ins
outs
sub
aaa
test
sub
push
jbe
xchg
lods
mul
xor
ds
out
xchg
retf
inc
xchg
inc
push
and
mov
mov
add
(bad)
out
mov
ins
retf
pop
cli
xchg
and
pop
inc
or
mov
rcl
data16
mov
imul
cmp
xchg
les
dec
(bad)
cmp
push
rep
stos
or
fisttp
rcl
imul
gs
or
loope
hlt
inc
mov
mov
adc
mov
mov
push
sbb
push
pop
data16
inc
cli
mov
enter
stc
pusha
mov
pop
xor
gs
in
mov
fwait
(bad)
enter
pop
loopne
or
push
add
xchg
mov
in
push
les
pop
push
adc
sbb
cmp
dec
stc
dec
ins
imul
retf
mov
(bad)
dec
movq
adc
or
clc
idiv
iret
ja
pop
mov
out
in
jle
fisttp
inc
outs
xchg
lock
pop
mov
mov
cmc
jmp
jb
mov
fist
paddw
pop
ins
xor
pushf
xchg
xchg
mov
add
test
int3
rcr
jbe
imul
add
push
enter
fs
ret
mov
test
mov
inc
adc
xor
mov
in
and
sub
cdq
les
out
jg
dec
inc
sub
jbe
fwait
ins
out
push
jle
jmp
rcr
out
add
push
jb
mov
sahf
outs
test
xor
push
fnsave
(bad)
pop
jo
and
mov
movs
add
sub
adc
pop
inc
jmp
xor
xchg
mov
xchg
xchg
xchg
cs
xchg
or
xor
mov
push
xchg
and
call
cld
movs
jge
mov
mov
and
cmp
ds
sbb
gs
mov
cmps
dec
rol
inc
mov
mul
sbb
into
dec
push
jecxz
dec
loop
ret
add
inc
jbe
je
inc
cmc
xchg
jg
in
sbb
pushf
jo
jp
test
sub
into
cld
inc
mov
pushf
add
pop
clc
aaa
inc
jmp
imul
adc
(bad)
(bad)
out
sbb
jae
jmp
mov
push
bnd
in
loopne
dec
mov
in
(bad)
xor
cmp
vpmulhw
inc
test
jle
pusha
xor
loope
stos
push
in
imul
pusha
jecxz
aad
adc
shl
push
out
xor
jp
mov
retf
jp
push
xor
bound
mov
push
clc
jle
jg
cmp
xchg
dec
fidiv
cmc
dec
mov
mov
lods
cmp
enter
pop
adc
xor
mov
into
pop
push
in
arpl
shl
lea
loope
push
call
xchg
fld
cmp
js
xchg
and
mov
jle
fs
jbe
stc
jge
test
sub
pushf
pushf
outs
mov
xor
iret
and
inc
xor
sbb
and
ret
dec
add
mov
ret
out
push
jo
cs
je
fs
sbb
movs
int3
outs
adc
call
imul
and
sbb
sahf
jge
dec
test
mov
test
sub
jo
ins
inc
sbb
ds
adc
mov
mov
imul
jg
fild
mov
sti
(bad)
iret
(bad)
repnz
imul
cmp
mov
jmp
adc
loopne
cmp
loope
movs
std
fwait
(bad)
fbld
mov
pushf
adc
mov
pop
mov
imul
fcom
mov
aas
stos
arpl
mov
add
jb
iret
mov
xor
dec
pop
xchg
jge
stc
xor
scas
sahf
lods
stos
aam
sub
shl
push
repz
mov
loop
add
cld
add
jle
test
test
push
pop
fs
loop
push
(bad)
xchg
jo
or
clc
sbb
stc
mov
test
in
xchg
mov
ss
or
pop
test
mov
retf
rol
inc
out
inc
data16
or
fs
xor
dec
movs
or
mov
dec
and
mov
icebp
dec
push
adc
mov
and
fwait
mov
jno
out
sbb
test
or
sub
dec
jge
or
mov
sub
pop
push
sbb
pop
push
dec
and
mov
adc
xchg
adc
sbb
nop
stos
add
movs
out
fdivr
mov
or
mov
lea
pop
out
mov
arpl
dec
mov
sbb
call
jg
popf
retf
xor
mov
jge
in
ss
cmp
rcl
sbb
loopne
push
into
cmps
stos
sub
push
cmps
xchg
mov
and
mov
fimul
mov
ins
push
mov
add
and
ss
pop
test
mov
dec
adc
repz
jae
sti
mov
imul
fsub
aad
fwait
addr16
es
cmc
sub
cmps
call
inc
mov
or
inc
enter
jecxz
out
add
add
mov
or
cmps
sbb
rcr
repnz
mov
in
pushf
inc
xlat
and
xor
ffreep
lock
fld
lahf
xchg
fimul
dec
and
push
out
ret
mov
fcmove
nop
fdiv
xor
mov
cmc
iret
jae
es
popf
(bad)
int3
(bad)
cmp
cdq
(bad)
in
push
jbe
mov
(bad)
ds
mov
push
movs
dec
xor
mov
sub
mov
js
sub
cld
test
mov
add
push
xor
jle
add
xor
int3
and
xchg
inc
retf
ins
shl
jb
or
in
jl
ret
adc
js
adc
push
test
pop
outs
test
mov
ret
mov
sub
enter
pop
frstor
ficom
mov
scas
jmp
add
mov
movs
pop
repnz
pushf
pop
mov
push
out
test
(bad)
test
adc
(bad)
cli
cmp
and
xchg
adc
cli
push
mov
and
jl
lods
xchg
and
jg
sahf
pop
xchg
jle
or
loop
stos
clc
ss
xor
ja
imul
ror
call
sub
cmp
sub
inc
jbe
call
ror
jae
mov
test
and
and
xchg
xor
sbb
dec
adc
(bad)
or
lods
loop
outs
mov
inc
lds
mov
push
retf
jmp
xchg
xor
test
dec
mov
mov
jb
pop
pushf
stos
push
pop
ss
pop
daa
div
lea
fwait
test
mov
adc
mov
pop
pop
mov
adc
call
popa
cdq
add
mov
das
xchg
cli
push
adc
loop
clc
scas
xchg
test
imul
push
clc
out
add
and
fidivr
add
xchg
imul
pop
in
addr16
pusha
mov
mov
(bad)
xchg
mov
je
sbb
sahf
jg
push
jno
push
and
xchg
int3
call
vlddqu
fadd
jo
cmp
and
sub
aam
xor
jecxz
sbb
aaa
add
je
into
fmul
xchg
mov
jo
dec
aaa
xlat
inc
xor
inc
test
xchg
and
cmp
ins
hlt
pop
xchg
mov
sub
dec
pop
(bad)
push
xor
jo
lea
cmps
pop
inc
popa
or
adc
add
mov
(bad)
in
or
dec
in
xlat
xlat
fnstsw
xor
xchg
jecxz
sub
sbb
pop
movs
xor
test
cld
cmc
inc
adc
cmp
mov
mov
dec
scas
adc
cmps
(bad)
push
aam
jae
and
bound
push
cdq
sti
mov
loop
sub
add
in
rcr
mov
outs
jno
jae
xchg
xlat
xchg
and
das
adc
cmp
(bad)
imul
add
jne
scas
imul
shr
adc
push
xor
addr16
das
in
mov
or
mov
nop
imul
jl
aaa
inc
ucomiss
jg
call
(bad)
(bad)
xchg
scas
inc
mov
test
inc
adc
cmc
pop
outs
fsubp
xchg
icebp
or
data16
push
or
dec
push
fwait
jl
mov
mov
ficomp
js
adc
call
sbb
mov
sbb
test
ror
jb
sub
stc
inc
or
pusha
nop
dec
or
fs
jl
add
pop
daa
rcr
lahf
xchg
pop
sub
into
mov
outs
mov
in
mov
adc
add
aam
xor
into
add
fisub
cwde
lock
call
bound
out
xor
imul
fisttp
mov
push
mov
lods
das
inc
lds
jne
into
xchg
call
out
retf
add
lea
mov
mov
clc
pop
repz
inc
jno
sub
lds
fidivr
adc
cdq
mov
ja
add
fisttp
xchg
mov
out
push
inc
ja
pop
sbb
in
fcmovnbe
inc
lds
inc
mov
das
test
sbb
inc
movs
pop
push
jne
pusha
es
push
bnd
xor
xor
lock
stc
sbb
or
mov
sub
xor
dec
sub
aaa
inc
and
mov
das
dec
(bad)
repz
fwait
xchg
and
mov
lods
test
adc
(bad)
loop
inc
pop
mov
adc
mov
call
iret
mov
iret
and
out
add
inc
push
jae
xchg
cmps
rcr
mov
cmps
pop
outs
mov
push
push
xchg
out
xchg
jp
dec
movs
ins
push
call
mov
(bad)
jne
push
and
jecxz
mov
jo
fs
in
fs
inc
cs
shl
mov
mov
jno
out
leave
fwait
pop
inc
sbb
loopne
aad
ficomp
dec
push
hlt
jge
dec
jp
ret
add
sbb
dec
movs
jbe
scas
inc
(bad)
icebp
bound
pop
cmp
call
adc
pusha
and
bound
lods
imul
jecxz
sti
mov
sub
mov
or
(bad)
cmc
jg
cwde
fnstenv
jns
retf
(bad)
sub
outs
sbb
pop
pusha
aad
xchg
add
or
pop
stos
and
mov
(bad)
ds
xchg
lds
sub
pop
fdiv
je
mov
xchg
mov
jno
cmp
out
outs
imul
pop
aas
mov
jmp
pop
rcr
mov
adc
(bad)
mov
push
(bad)
jo
enter
pop
pop
or
sahf
icebp
cli
adc
push
shl
xor
xchg
push
sbb
add
movs
sub
fsub
and
cmp
cli
std
push
or
inc
push
inc
xchg
xchg
movs
jmp
daa
xchg
mov
mov
rcr
cs
daa
adc
fidiv
lods
xor
or
clc
ins
hlt
push
lock
and
xlat
into
push
push
cmp
mov
int
inc
popa
sbb
es
stos
jne
mov
add
(bad)
cmp
hlt
test
pop
pop
mov
mov
ins
push
cmps
(bad)
pop
push
sub
daa
es
outs
in
icebp
aad
xchg
mov
lahf
and
push
repnz
mov
xchg
dec
in
bound
pusha
sub
adc
and
mov
mov
mov
outs
inc
sub
mov
repnz
and
clc
mov
push
mov
fisttp
push
pop
leave
mov
pop
jmp
mov
sahf
test
gs
push
out
sbb
(bad)
mov
popf
xchg
movs
leave
icebp
mov
push
dec
int3
out
and
dec
mov
addr16
call
imul
movs
aaa
imul
fisubr
in
imul
sti
(bad)
inc
cmps
pusha
(bad)
gs
xchg
call
mov
jmp
xchg
call
ds
mov
pop
and
pushf
jns
push
test
std
(bad)
std
sbb
xchg
sbb
pop
xchg
and
sar
popf
aam
shr
test
bound
loopne
jmp
and
push
mov
leave
enter
sub
mov
mov
dec
push
loopne
fimul
adc
outs
in
(bad)
(bad)
sar
movs
and
xchg
daa
or
icebp
mov
ds
cmp
sub
jge
lods
push
idiv
ss
push
stos
aam
push
sbb
push
cmp
and
repz
push
in
dec
test
leave
std
aas
jge
rcr
test
aaa
pop
aad
retf
add
add
xchg
cmc
push
(bad)
scas
or
pushf
addr16
out
pop
xchg
or
je
push
or
push
jge
sbb
mov
int
loopne
xchg
fs
ret
int3
or
add
pop
xchg
fcmovbe
mov
pusha
fdivr
jecxz
addr16
pop
jb
add
ins
das
fucomi
cmp
call
inc
push
cmp
in
dec
dec
test
mov
test
jo
dec
pop
call
push
ror
outs
and
scas
call
cdq
retf
push
pop
repnz
push
in
les
dec
mov
fdiv
clc
dec
into
frstor
xchg
inc
or
repz
stos
jg
aas
xchg
push
test
sub
ins
mov
dec
out
push
not
mov
dec
mov
jbe
adc
aam
(bad)
stc
mov
sbb
mov
test
pop
ss
ror
retf
dec
sbb
sbb
pop
in
lea
pop
mov
sub
daa
out
cmp
push
mov
or
mov
out
pop
lds
xchg
mul
jo
inc
es
and
dec
aas
ja
inc
pop
cmp
scas
xor
or
aad
jg
stos
pop
adc
imul
enter
out
or
xchg
fdiv
fbstp
ret
and
pushf
fs
inc
inc
add
push
pop
mov
add
jl
mov
inc
ficom
daa
rol
xor
fcmovnbe
dec
int
sub
lock
data16
sub
sahf
jmp
stos
outs
popf
sub
push
dec
movs
dec
dec
adc
or
inc
xchg
mov
pop
cs
movs
mov
mov
and
pushf
mov
add
inc
pop
add
push
sub
adc
add
sub
das
(bad)
retf
sub
pop
test
and
sub
xchg
std
inc
repz
jo
hlt
sub
fild
dec
iret
(bad)
xchg
cwde
xchg
into
add
(bad)
ja
inc
sub
in
pop
xchg
pop
into
jp
movs
dec
call
push
iret
lock
movs
mov
mov
test
mov
aas
xchg
stc
mov
dec
adc
ins
inc
mov
dec
test
xchg
int3
pushf
mov
mov
xchg
js
cmps
xchg
add
xor
sbb
push
add
jg
and
push
mov
adc
sbb
fcomp
jle
lods
mov
mov
mov
inc
push
cmp
add
push
mov
lahf
daa
ins
mov
mov
jbe
loop
adc
add
jle
ror
jns
stos
mov
shl
add
cmp
mov
(bad)
fadd
retf
ror
cmps
leave
mov
lahf
mov
test
retf
xchg
pushf
cvttps2pi
je
in
add
scas
push
inc
push
mov
pop
sub
repnz
in
sahf
rol
outs
add
nop
int3
iret
jbe
movs
xor
jmp
and
sub
cmps
mov
cmp
adc
sbb
lahf
xchg
push
ror
and
dec
fcmovnb
and
sbb
stc
mov
jnp
sbb
mul
pop
outs
retf
or
in
in
vmread
mov
xor
pop
out
jl
rcl
dec
ins
scas
nop
pop
jge
mov
and
leave
pop
stos
sbb
fist
jmp
lods
imul
lods
add
retf
jp
movs
push
dec
adc
xor
daa
test
popf
and
shr
xlat
jl
ret
inc
jbe
mov
test
pushf
inc
jbe
mov
inc
hlt
je
test
test
mov
les
movs
mov
sbb
test
in
and
mov
(bad)
in
jb
jno
lahf
push
out
bound
adc
and
pushf
and
arpl
pop
jg
je
jle
inc
mov
hlt
push
dec
adc
adc
mov
mov
jmp
cdq
mov
push
mov
mov
add
add
mov
arpl
out
aad
mov
call
sbb
ret
inc
adc
jmp
sub
(bad)
out
ret
adc
xor
sub
add
out
inc
into
mov
nop
add
fwait
add
xchg
jg
jl
scas
je
iret
call
jbe
dec
jae
fwait
xchg
sbb
sti
jnp
xchg
mov
into
push
mov
jp
test
push
xor
cmp
push
iret
lds
int3
cs
sbb
jae
pop
mov
pop
pop
das
inc
gs
or
mov
sbb
aad
cmp
jns
cmp
fwait
stc
movs
pop
jmp
mov
mov
scas
into
xor
(bad)
in
hlt
ins
pop
lahf
scas
fcom
test
pop
and
mov
dec
mov
out
mov
push
scas
jb
out
mov
sbb
pop
je
(bad)
fxch
dec
jnp
or
loop
add
movs
sti
mov
(bad)
retf
shl
add
rol
add
sar
add
mov
repz
sub
stos
sti
push
leave
sbb
cld
cmps
sub
jae
push
push
jnp
fsubp
pushf
loopne
lahf
scas
pop
psubd
retw
cli
popa
and
(bad)
xor
mov
add
imul
dec
cmc
repz
jns
clc
outs
das
aaa
mov
pushf
mov
jbe
pop
xor
jo
and
mov
cmc
pusha
and
fsub
cdq
mov
adc
add
jbe
loop
xchg
in
rol
xor
shr
pop
pause
push
xor
push
fwait
sbb
stc
inc
xor
push
push
and
inc
clc
inc
aam
pop
aad
adc
pop
mov
gs
mov
dec
push
cli
push
sbb
inc
xor
cmp
jo
out
xor
repz
adc
aam
jne
nop
xor
dec
xchg
dec
jle
int
loopne
lds
sar
pushf
div
pop
inc
rol
out
mov
pushf
jmp
lds
lock
jnp
pop
lods
inc
ficomp
mov
fild
adc
movs
mov
xchg
inc
or
pop
lea
mov
adc
fsubr
test
lods
and
pop
xchg
call
mov
cmps
mov
fbstp
sub
xor
cmc
shl
fwait
ins
pop
imul
jno
icebp
cmps
sbb
jne
mov
sub
sahf
int3
or
es
sub
adc
js
cdq
ds
jge
outs
aaa
movs
dec
pop
mov
outs
(bad)
out
or
add
cmp
mov
push
jp
das
ja
mov
fld
push
retf
adc
rol
lods
lods
mov
jnp
xchg
mov
sbb
js
fimul
out
cmp
pop
and
cmps
push
adc
int
dec
jmp
pop
sub
dec
adc
aaa
pop
jo
cdq
inc
dec
fwait
push
sub
inc
adc
mov
jmp
cld
ds
bound
adc
aas
popa
or
nop
or
dec
mov
mov
je
adc
jmp
jnp
enter
push
call
cmp
aad
rcl
jmp
and
push
mov
pop
adc
test
ret
adc
gs
sar
xlat
nop
jo
cmp
in
mov
dec
cdq
xchg
xchg
add
(bad)
pop
stos
add
or
in
call
retf
fdivr
dec
lea
sub
jb
retf
scas
call
(bad)
mov
loop
arpl
test
mov
cmp
in
pop
addr16
push
xchg
cld
hlt
(bad)
cwde
pop
aaa
and
add
loope
lds
mov
and
xchg
sub
bound
repnz
push
or
sar
xor
or
mov
xor
lahf
jecxz
inc
mov
mov
lock
push
popf
dec
mov
shl
shr
pop
enter
adc
inc
pop
xor
mov
in
mov
adc
arpl
jle
mov
mov
(bad)
(bad)
iret
repnz
mov
lds
sbb
mov
loopne
mov
or
xchg
xlat
push
aad
addr16
pop
mov
mov
das
(bad)
jecxz
(bad)
cmc
mov
add
and
and
sahf
ins
pushf
outs
xor
cld
xchg
add
cmps
push
nop
push
and
int3
sub
adc
outs
jmp
adc
scas
sub
mov
dec
cmp
and
pop
or
sub
sbb
push
test
fmul
push
or
mov
ret
cmp
ins
or
test
push
sbb
mov
shl
jmp
fiadd
aaa
les
adc
call
push
adc
sbb
pop
sub
dec
outs
adc
lods
inc
int3
jb
cmp
mov
mov
in
rol
out
dec
xchg
aad
ins
xchg
sbb
pop
das
dec
bound
inc
sub
sbb
jb
fwait
inc
add
xlat
dec
pop
fcom
pop
in
popf
js
xchg
push
shl
aad
fsubr
aam
jge
mov
add
push
pop
mov
ds
pop
add
pop
mov
mov
loop
push
in
xor
popa
test
shr
out
cmc
cmp
xor
adc
dec
pusha
and
aad
adc
pop
push
int3
add
jp
inc
test
and
rcr
mov
cld
stc
dec
sub
add
adc
sti
pop
dec
or
in
push
xchg
clc
aad
mov
dec
xchg
or
repz
cmp
lahf
ror
hlt
cmps
xchg
movs
mov
adc
cmc
out
mov
dec
pop
popa
mov
cmps
and
mov
ins
jle
cmps
sub
or
addr16
push
xchg
je
(bad)
mov
lods
hlt
mov
push
sub
imul
nop
xchg
cdq
cmp
data16
leave
sar
pop
clc
xchg
push
mov
cmc
adc
cmc
loop
or
jmp
mov
in
inc
aad
or
xor
(bad)
mov
loope
mov
out
xor
xor
dec
jg
not
je
cmp
nop
stos
movs
rcl
add
xchg
xor
pop
mov
xchg
sub
sar
xchg
push
jo
nop
rcl
xor
fs
pop
and
leave
jne
push
ds
mov
shr
xchg
in
jnp
add
sub
mov
push
xchg
cmp
mov
ror
gs
xchg
adc
shl
pusha
aam
js
outs
pop
mov
add
icebp
mov
add
sbb
and
jge
gs
fimul
jge
xchg
call
retf
or
pop
mov
add
in
sub
div
repnz
arpl
dec
xor
ficomp
add
loop
ffreep
mov
adc
aad
adc
sub
vphsubdq
jbe
cli
and
out
add
test
scas
std
and
es
add
xchg
adc
pop
xchg
jno
sub
adc
add
add
push
pop
js
mov
fild
gs
and
push
dec
or
int3
inc
sbb
sbb
jae
mov
loopne
div
mov
in
(bad)
retf
adc
arpl
inc
ret
pop
loope
jg
shl
inc
rol
sbb
cli
dec
pop
cmp
push
cli
aas
mov
adc
sahf
push
stc
mov
add
inc
mov
pop
nop
(bad)
cmps
and
xlat
inc
jb
push
pop
test
add
ja
pop
stc
push
arpl
xchg
xchg
sar
xchg
inc
pop
(bad)
jmp
icebp
test
(bad)
adc
dec
pop
mov
jmp
repnz
test
cli
fiadd
add
(bad)
jecxz
adc
jbe
xor
adc
mov
and
shl
int
mov
ds
test
cmp
movs
bound
push
dec
push
xchg
loopne
aad
fiadd
push
aad
mov
scas
cli
stos
lods
iret
and
loope
push
cmp
fidiv
fs
mov
sub
sbb
add
out
or
dec
sub
fs
lea
jecxz
sub
retf
fwait
adc
cli
es
arpl
ins
push
and
mov
dec
jns
push
mov
sahf
push
adc
ror
or
aam
test
xor
cmc
mov
xor
xchg
test
and
xor
fldenv
repz
icebp
and
ds
mov
and
jl
dec
push
sub
movs
pop
mov
push
pop
push
mov
sbb
push
sbb
das
push
sahf
dec
dec
std
sub
inc
jl
sbb
sbb
pusha
mov
push
xor
jg
push
stos
mov
loope
push
loope
mov
cwde
enter
jne
fwait
mov
call
push
mov
adc
out
pop
mov
test
out
mov
and
adc
not
pop
in
mul
aad
dec
sbb
xchg
movs
lahf
xor
arpl
mov
pop
stc
fs
ds
cld
movs
inc
mov
mov
shl
add
(bad)
in
pop
cmc
mov
nop
pusha
out
ficomp
mov
mov
stc
mov
and
pop
data16
mov
aam
pop
xchg
imul
pop
je
pop
bound
aam
adc
xor
adc
arpl
cmp
push
(bad)
inc
xchg
jns
mov
push
xor
ds
mov
fwait
add
add
adc
jo
xchg
mov
sbb
sub
mov
mov
cmp
mov
xor
mov
ror
jno
stos
cmp
dec
mov
lds
ret
mov
ror
dec
or
xchg
and
sub
iret
pop
xor
mov
sbb
jmp
mov
mov
cdq
and
call
lods
or
jmp
dec
(bad)
ds
mov
std
adc
outs
pop
adc
aaa
xor
loope
inc
jle
or
dec
pushf
imul
sub
icebp
xchg
loopne
imul
popa
jns
sbb
sub
jno
dec
cmps
ret
mov
xor
mov
test
call
lahf
mov
idiv
inc
xchg
push
sbb
mov
nop
sbb
dec
loope
test
cmp
adc
sub
in
xchg
rol
xchg
(bad)
add
sbb
sub
mov
out
sub
retf
add
(bad)
mov
xchg
mov
pop
test
jge
mov
push
lods
mov
push
jp
rol
fld
xchg
or
dec
pop
enter
jae
sub
xor
inc
xchg
cmps
push
xchg
scas
and
xor
mov
sub
jne
dec
fmul
popf
fist
les
iret
pop
sti
fs
mov
xor
dec
xchg
jge
in
out
mov
out
arpl
sbb
into
inc
jnp
push
lock
mov
sbb
sbb
pop
xchg
jae
pop
pop
and
popa
loopne
xchg
addr16
sahf
in
add
sahf
not
retf
mov
and
push
inc
cmp
mov
clc
ins
rcr
mov
mov
ret
mov
sub
(bad)
cmc
mov
adc
add
fwait
push
xor
pop
or
rol
(bad)
arpl
xchg
dec
bound
adc
adc
stos
xchg
neg
adc
dec
out
push
lods
push
mov
mov
and
push
out
fadd
mov
inc
int3
iret
jle
and
out
pop
call
cmps
inc
jmp
aad
out
call
sub
mov
jnp
addr16
pop
lea
adc
shl
dec
mov
add
cmps
add
push
(bad)
cmp
add
cdq
inc
pushf
push
cmp
and
movs
push
fnstcw
mov
icebp
jae
in
loopne
cmp
dec
cmp
(bad)
aas
sub
test
ins
cmps
jbe
lock
and
mov
in
test
js
pop
scas
test
inc
in
push
jmp
gs
adc
out
jecxz
push
push
call
cmp
aad
inc
vmread
mov
mov
mov
sbb
push
stos
idiv
(bad)
mov
data16
xor
outs
mov
ud2
xchg
or
and
int
(bad)
push
stos
ss
and
inc
jns
fs
add
(bad)
loop
xor
shl
test
sub
sbb
push
test
or
js
or
scas
mov
pop
gs
mov
arpl
loop
vorps
les
ficomp
sbb
les
cmp
inc
push
or
ja
add
(bad)
jne
mov
int3
push
xchg
out
stc
xlat
xor
inc
ds
push
mov
pop
sub
cmc
in
pop
test
into
out
call
xor
outs
sub
lock
sub
and
call
jo
and
cwde
push
mov
rep
fmulp
lds
fs
inc
lds
scas
dec
lods
addr16
jns
sbb
inc
nop
btr
inc
adc
je
icebp
cmovge
mov
pop
rcr
call
(bad)
jns
sub
or
pusha
ss
mov
cmp
sbb
bound
sti
frstor
in
retf
xor
adc
hlt
addr16
xchg
pop
mov
sbb
sbb
sbb
mov
push
sbb
xchg
mov
xlat
jle
cmc
adc
cmp
jbe
jp
mov
add
cmps
aam
faddp
les
lock
xor
fcom
and
icebp
xchg
call
call
or
pop
shl
pushf
fstp
bnd
out
inc
lods
cdq
and
cdq
sub
fcomp
jp
out
dec
fistp
fucomip
test
xor
outs
sub
stos
mov
idiv
inc
push
push
ins
mov
repz
rcl
pop
xchg
cmp
jg
pop
push
jmp
mov
cmp
xchg
push
mov
dec
mov
xlat
jecxz
jmp
lea
iret
test
or
pushf
xor
sub
call
pop
push
jno
retf
das
(bad)
icebp
fistp
popf
pop
jg
ds
adc
xor
jmp
dec
inc
cmc
pop
scas
sub
aas
mov
push
cmp
aas
pop
sar
jb
inc
jge
mov
dec
leave
jmp
dec
les
adc
pop
(bad)
cld
jecxz
(bad)
jp
mov
aas
jle
push
mov
xor
(bad)
and
cdq
(bad)
aaa
mov
js
jg
cwde
push
aad
push
push
xor
hlt
cmp
fwait
ins
and
and
jne
push
es
mov
dec
or
in
or
cmp
movs
repz
add
lods
xor
loope
mov
xchg
jae
push
add
jmp
jp
ins
aaa
ins
out
lea
scas
or
ins
out
sbb
xchg
adc
mov
jno
stc
rol
lods
mov
gs
mov
sbb
ror
call
inc
iret
push
mov
jle
dec
js
inc
mov
xchg
mov
xor
xor
adc
xchg
sub
test
in
dec
mov
daa
or
xor
imul
mov
dec
mov
xchg
pop
cmp
mov
xor
and
jbe
pop
stc
out
push
js
xor
pushf
xor
fs
fistp
and
jnp
mov
scas
xor
icebp
fs
fcomp
inc
in
and
push
jae
mov
popa
sahf
popf
or
cmp
mov
test
or
or
std
pop
addr16
cmp
or
and
sbb
popf
inc
or
mov
shl
xchg
xchg
(bad)
fdivr
std
inc
inc
sub
mov
cmc
bound
lods
cmp
fs
jp
mov
data16
sbb
sbb
adc
(bad)
in
in
outs
shl
and
mov
mov
pop
adc
cmc
shl
rcr
lahf
mov
stc
into
mov
jecxz
pusha
push
scas
ins
or
lods
ins
xchg
mov
mov
fiadd
imul
(bad)
fstp
sub
pmullw
lea
dec
lahf
ror
popf
sbb
jle
add
dec
jmp
ret
div
pop
pop
dec
(bad)
movs
sub
sub
dec
sub
pop
(bad)
stos
bound
xchg
xchg
outs
outs
sub
lods
mov
retf
stos
jnp
xlat
pop
ret
or
loope
xor
mov
mov
(bad)
fwait
in
add
loopne
add
cli
inc
call
xchg
lock
mov
push
pop
test
cwde
jb
arpl
push
pop
mov
(bad)
pop
arpl
mov
push
xchg
jg
dec
lock
mov
mov
gs
sbb
dec
ret
lock
aad
xor
sbb
ret
shl
inc
mov
int
inc
jno
popa
fadd
test
movs
cli
(bad)
repnz
stos
iret
mov
push
retf
jne
scas
dec
push
aas
aad
addr16
and
call
pop
dec
cwde
push
pop
loope
shl
push
ret
daa
repnz
iret
jns
dec
enter
das
sti
or
mov
add
cli
dec
test
aam
sub
xchg
retf
sub
mov
mov
ins
cdq
cmps
movs
clc
sar
jne
fucomp
mov
test
jmp
mov
in
loopne
pop
mov
and
jb
mov
mov
test
adc
and
cdq
fsubr
jnp
xor
pop
mov
dec
inc
add
add
and
imul
inc
inc
mov
popa
and
ins
pop
push
sbb
rcr
mov
pushf
dec
xor
mov
inc
fsubr
outs
dec
mov
sbb
push
mov
fisub
push
fisubr
cwde
jge
repnz
cs
jecxz
loopne
ja
xor
pusha
movs
jmp
icebp
push
fist
push
mov
jg
cmp
jg
cmp
movs
jmp
pusha
sub
and
jnp
test
pop
or
adc
xchg
inc
addr16
push
ins
adc
add
mov
pop
sbb
loopne
(bad)
retf
in
xchg
std
pop
inc
xchg
xchg
imul
jne
mov
add
jecxz
sbb
pop
aas
cs
pop
cld
pop
add
xchg
leave
cmp
imul
mov
in
mov
(bad)
sub
in
or
sbb
stos
nop
sbb
inc
push
sar
add
popf
cs
mov
dec
push
dec
scas
mov
stos
or
ret
adc
mov
adc
push
add
imul
(bad)
xchg
test
out
fldcw
rol
jmp
sub
push
ins
out
iret
int3
mov
outs
jmp
aas
xor
and
pop
pushf
bound
jl
lods
push
xchg
call
cmps
fimul
jmp
sbb
add
mov
xor
dec
lahf
xchg
pop
inc
and
mov
push
lock
aam
lahf
mov
fld
inc
push
div
ins
in
push
int3
sbb
aas
cdq
test
stos
arpl
data16
mov
xor
das
ins
out
(bad)
push
mov
cs
jo
mov
sub
arpl
inc
fild
jmp
mov
pop
ins
pop
movs
add
lds
lahf
ret
or
xor
adc
or
push
jecxz
ins
je
jmp
push
adc
xchg
aaa
inc
addr16
cmp
sub
adc
jb
mov
dec
ficom
shl
int3
cli
add
das
fwait
not
mov
mov
xor
push
xchg
out
mov
cmp
mov
pop
lods
ss
or
ror
xor
dec
add
xchg
mov
test
sbb
scas
repnz
mov
adc
(bad)
pop
jno
mov
je
xor
test
xor
fistp
retf
lods
mov
mov
cmp
sbb
dec
iret
add
lahf
sub
push
(bad)
das
dec
sbb
paddb
jecxz
dec
dec
aad
test
pop
int
pop
xchg
inc
sub
cmp
fisttp
sub
aaa
lds
out
sub
sbb
jb
mov
movs
addr16
gs
lahf
push
lds
xor
lds
rol
into
retf
jmp
adc
and
sbb
or
xor
mov
clc
xor
jge
ret
cmp
push
pop
loope
push
gs
inc
rol
call
fldenv
test
jge
lahf
pop
scas
pop
jmp
sar
je
out
xchg
psubsw
dec
cli
fisubr
ins
xchg
repnz
fucomp
out
xchg
wbinvd
push
adc
jns
jecxz
pushf
dec
or
mov
or
sub
sbb
xor
test
fsub
stc
pop
mov
(bad)
sbb
xlat
xchg
outs
sub
sbb
xchg
ret
rcr
test
ss
adc
aad
sti
mov
mov
pop
cs
mov
xrelease
fstp
sbb
jbe
jp
stos
pop
popf
add
adc
pop
inc
add
or
dec
test
(bad)
dec
int
stos
lahf
lods
cli
jg
xor
cmp
pop
stos
int3
xchg
out
jmp
sub
dec
jecxz
sub
shl
inc
xor
lods
push
sub
xchg
push
pop
js
in
mov
xchg
mov
pusha
int3
add
inc
inc
pop
cli
jl
sbb
inc
push
out
icebp
jae
(bad)
cmp
(bad)
mov
xor
jecxz
sbb
inc
push
in
or
out
inc
je
bound
inc
inc
aas
push
mov
(bad)
mov
fwait
(bad)
sbb
pushf
jmp
add
lods
loop
js
retf
test
jp
test
gs
mov
mov
pop
aas
inc
mov
arpl
xor
mov
sub
adc
test
cmp
fwait
loope
add
ret
out
xchg
repz
mov
jmp
sahf
js
dec
in
outs
jnp
(bad)
daa
fadd
jae
aad
inc
jns
ffree
pop
pop
je
pop
sub
out
sub
mov
lods
push
test
in
cmp
pop
gs
out
stc
xchg
pop
jnp
push
mov
cwde
cmp
push
pop
and
xor
cmp
mov
(bad)
dec
inc
outs
mov
into
sbb
push
rdtsc
dec
mov
lds
lea
or
scas
xchg
adc
jecxz
add
lds
icebp
scas
cs
pop
mov
xor
rcl
jle
and
mov
mov
or
pop
pop
mov
call
add
dec
or
push
cld
sub
mov
mov
dec
xor
xchg
mov
and
fwait
movs
pop
(bad)
push
ficomp
jecxz
(bad)
inc
mov
cmpxchg
shl
xchg
scas
mov
dec
rcr
jmp
add
jne
daa
add
das
or
cmp
add
aaa
jno
add
cmp
mov
mov
dec
pop
adc
push
pop
daa
dec
(bad)
and
ret
mov
adc
stc
shr
xor
bound
aad
movs
pop
sbb
repz
or
sti
dec
in
lds
dec
jmp
sbb
addr16
out
ins
popf
push
adc
imul
enter
ss
push
(bad)
repnz
pop
movs
cli
sbb
cmps
shl
in
jl
pop
inc
pop
(bad)
stc
ss
jl
les
push
mov
stc
mov
adc
cmp
add
arpl
mov
in
les
cmp
mov
pusha
or
imul
mov
shl
nop
jns
fcmovnu
movs
fldcw
push
dec
out
ins
adc
xor
xchg
mov
cmp
xchg
pusha
loope
cs
jmp
fdivr
cmp
push
dec
mov
cmp
das
xchg
cmp
fist
rol
push
xchg
xchg
lahf
imul
fidivr
sbb
test
pop
jno
and
pop
jne
jmp
out
push
jecxz
mov
xlat
les
rol
xor
ja
xor
mov
ss
cmp
ja
pop
adc
or
or
ret
cdq
clc
pop
push
data16
imul
cdq
cmc
mov
sub
add
js
pusha
int
jl
jg
lahf
loope
cli
mov
rol
stos
cmps
sbb
jno
and
enter
sar
adc
mov
xchg
es
ret
mov
add
sub
(bad)
cmp
or
mov
repz
pop
cmps
scas
in
adc
pop
hlt
fs
jns
jmp
(bad)
(bad)
scas
jae
out
out
xchg
mov
pop
mov
mov
movs
out
jge
sub
in
sahf
push
sub
push
pusha
mov
or
xor
cs
fistp
jle
mov
jmpw
in
enter
shr
(bad)
pop
adc
push
add
mov
add
pop
xor
pop
xchg
cmp
jmp
mov
das
shr
inc
ret
dec
sbb
call
sub
and
sub
sbb
adc
and
cmp
(bad)
push
ror
ret
mov
sub
pop
jo
fucomip
or
lock
push
(bad)
xor
in
rol
and
pushw
jbe
cmp
enter
arpl
pop
adc
sbb
xor
hlt
mov
or
movs
jbe
jno
inc
mov
sub
mov
cmp
add
mov
out
dec
xor
add
sahf
pop
jl
fisub
aaa
fmul
test
push
outs
lock
test
cdq
mov
add
sbb
popaw
add
sub
jecxz
std
sub
cmp
and
add
xchg
cmps
lea
fisttp
es
mov
push
sbb
add
sbb
fldpi
aaa
addr16
cmp
pop
cmp
rcr
adc
mov
xchg
mov
movs
mov
in
inc
and
push
aad
mov
sbb
inc
cdq
aam
stos
sub
inc
ficom
sahf
jle
adc
movs
mov
popf
aaa
out
and
mov
cli
dec
mov
and
fbstp
fistp
dec
pop
inc
and
loopne
outs
jl
shl
fmulp
mov
mov
test
mov
adc
rcl
xchg
out
mov
sub
mov
jne
cmp
in
dec
adc
cwde
enter
loope
mov
pop
fidiv
sbb
jo
cmps
ficomp
pop
pop
jno
sar
cmc
mov
adc
ret
jp
test
scas
push
mov
mov
jp
inc
mov
adc
xchg
xchg
push
mov
in
dec
cmps
xor
push
add
add
xchg
ds
xchg
test
repz
or
mov
adc
shr
sub
mov
call
mov
inc
std
fldenv
mov
add
add
add
inc
ret
call
shl
(bad)
jns
jmp
cmp
ins
pop
in
nop
or
mov
and
call
call
dec
sub
fist
fist
jge
in
sub
mov
push
xchg
movs
rol
std
addr16
xchg
cwde
mov
shl
fsubr
pop
rol
in
lods
cmp
daa
cmp
int3
arpl
vmread
xchg
mov
aad
sbb
(bad)
jmp
pop
and
in
mov
jge
adc
fmulp
jle
or
sbb
sbb
fbstp
arpl
movs
jne
pop
iret
lock
lea
fs
pop
icebp
addr16
adc
and
mov
add
or
bound
xchg
cmc
push
pop
cdq
test
aas
aad
les
aam
or
sti
xchg
jl
pop
inc
push
mov
out
xor
push
dec
fmul
cmp
mov
jl
gs
cld
aad
mov
fstp
ja
sub
out
or
dec
cmp
frndint
(bad)
mov
pop
dec
lds
and
jb
cli
in
rcr
mov
out
adc
push
adc
inc
sub
and
jo
repnz
dec
sti
inc
inc
(bad)
aas
and
jg
ret
sbb
adc
add
mov
mov
(bad)
fld
mov
xchg
mov
mov
and
inc
mov
rcr
call
jmp
inc
xchg
push
std
push
imul
call
pushf
mov
call
cwde
rcr
jl
or
pop
xchg
inc
and
mov
mov
sub
in
mov
push
fucom
lock
pop
cmp
test
mov
xchg
lock
or
bound
cli
xchg
popf
push
and
repnz
jge
outs
ret
aad
out
imul
inc
xchg
add
cdq
stos
scas
inc
js
jge
push
add
or
test
aad
int
xor
ror
outs
fadd
jo
pop
ja
cmp
pop
push
and
sub
add
push
cwde
add
or
icebp
mov
adc
jmp
inc
ficom
fidiv
jmp
lods
jae
or
fsub
dec
sub
or
fidivr
mov
mov
icebp
cmp
mov
inc
ret
push
aad
(bad)
cli
pop
sahf
mov
(bad)
adc
push
enter
cmp
daa
test
imul
addr16
jl
ja
mov
ds
ror
or
push
mov
pop
sbb
jo
mov
lea
bound
mov
neg
push
inc
and
fwait
popa
pushf
mov
imul
shl
inc
sub
shl
xor
std
inc
dec
cs
mov
jmp
xchg
call
or
or
sbb
outs
loop
(bad)
call
iret
mov
movs
ins
mov
push
js
data16
mov
mov
fstp
dec
mov
mov
jnp
out
inc
bound
das
jmp
push
aam
xchg
in
loope
dec
div
pop
pop
mov
cmp
mov
loop
es
repz
push
pusha
push
jnp
or
inc
clc
cmp
jge
pop
mov
xchg
push
pushf
popa
and
fidivr
jl
inc
push
sbb
pop
cmp
retf
loop
and
retf
daa
jno
ret
sub
loop
adc
cdq
dec
repnz
dec
or
pop
sbb
xlat
arpl
xchg
or
fisubr
lods
aaa
pusha
pop
(bad)
add
hlt
ret
cmp
sub
adc
neg
pop
dec
xor
imul
addr16
out
jns
or
mov
cmps
cmps
adc
mov
cld
add
popa
pop
cmp
fs
nop
sub
dec
lahf
loop
outs
arpl
lss
enter
xlat
aaa
adc
test
cmp
add
push
xor
mov
shr
adc
push
xor
clc
mov
cdq
ins
sub
aad
and
je
or
dec
or
xchg
enter
sbb
sub
lods
push
popa
mov
or
shl
cmp
pop
mov
add
ds
sbb
out
mov
shl
mov
mov
jl
dec
test
cs
push
lock
sub
cmp
mov
into
jge
xchg
xchg
inc
and
cmp
or
lea
sti
and
shl
dec
jbe
mov
xchg
data16
dec
inc
out
les
sahf
jl
xchg
adc
pop
adc
rep
mov
fidivr
dec
push
mov
pop
sub
adc
mov
dec
lea
mov
xor
mov
dec
mov
mov
inc
pop
push
sub
hlt
test
sbb
aad
iret
add
push
test
jg
fsubr
push
int
dec
xor
dec
mov
add
push
mov
pop
jmp
retf
push
pop
and
pop
add
dec
fild
dec
cld
lods
mov
repnz
push
repz
sbb
sub
stc
add
xchg
pop
je
movs
iret
add
stc
adc
pusha
(bad)
cs
shr
sar
ficom
dec
xor
pop
dec
sbb
jmp
pop
dec
cdq
xchg
movs
mov
and
xchg
outs
out
jmp
fstp
repz
push
call
inc
jecxz
pushf
adc
fcom
mov
mov
shl
inc
add
mov
retf
aaa
xor
xchg
push
or
xor
xchg
into
call
mov
and
and
add
and
out
or
xchg
hlt
enter
mov
(bad)
sti
cmps
pop
push
ror
gs
ds
nop
add
inc
add
and
pop
mov
push
outs
lea
popa
sbb
jbe
jns
lds
sub
pop
jg
imul
test
jbe
mov
pusha
inc
mov
mov
loop
repz
sbb
lahf
jo
jmp
sub
mov
daa
pushf
fimul
loope
bound
pusha
adc
shl
int
lea
hlt
cmc
out
mov
es
add
arpl
mov
sub
add
xchg
inc
and
iret
push
xchg
jae
movs
push
movs
xchg
and
mov
push
inc
cmp
mov
dec
inc
sbb
jp
sub
xor
int
fisubr
mov
mov
xchg
dec
dec
ret
aaa
jns
cmps
adc
test
mov
sub
retf
aaa
cmp
mov
sti
ret
icebp
inc
stc
inc
mov
nop
sub
das
cdq
fucomp
add
daa
fistp
xor
pop
dec
pushf
add
or
pop
shl
xchg
int
out
sbb
push
inc
scas
push
inc
inc
or
call
adc
test
pop
mov
je
adc
hlt
add
popa
test
nop
xor
fdiv
aas
mov
int
and
test
ss
mov
add
aas
fimul
jno
mov
xchg
movs
push
outs
mov
mov
sub
jp
(bad)
push
and
gs
popf
rol
sahf
sbb
lahf
test
(bad)
xor
(bad)
(bad)
mov
out
arpl
pop
push
sahf
outs
int
lea
int3
cmp
fisttp
mov
inc
push
sbb
int3
cmp
xor
pop
jns
adc
dec
add
(bad)
adc
in
mov
dec
sbb
ret
add
jmp
rcr
test
in
ds
pop
addr16
fist
arpl
movs
cwde
add
dec
or
mov
mov
mov
dec
xor
pop
lods
jo
repnz
jnp
mov
ja
mov
jo
daa
out
sbb
fisub
outs
mov
sub
add
xchg
gs
mov
rcr
in
mov
nop
sub
mov
ret
aas
adc
push
mov
stos
neg
and
addr16
xchg
ds
dec
add
pop
clc
adc
sbb
pop
fcomp
in
loop
gs
lock
lds
ss
call
jmp
jp
push
and
mov
sbb
pop
popf
and
or
sub
int
cld
mov
sbb
mov
cmp
icebp
jo
fdivr
mov
(bad)
push
sub
ja
int
cwde
rcr
or
rol
into
iret
xor
xchg
push
pop
mov
std
fist
ins
inc
dec
rcr
add
sbb
mov
mov
push
dec
inc
imul
(bad)
inc
jmp
mov
in
scas
cdq
out
add
sti
cdq
or
hlt
or
retf
ret
mov
pop
xchg
(bad)
sub
jno
inc
aaa
cwde
jo
pushf
ja
jne
dec
pop
pop
inc
xchg
imul
jns
int3
mov
pop
jp
sbb
xchg
repnz
mov
imul
xor
xchg
inc
fldcw
repnz
sub
cli
movs
in
pushf
jmp
dec
push
(bad)
pusha
pop
and
outs
pop
xchg
inc
ds
stos
retf
pusha
push
shr
cld
div
stos
into
mov
push
scas
ror
mov
inc
sahf
ins
adc
ins
inc
sub
xchg
cmp
cmp
mov
imul
jae
push
(bad)
in
lea
jl
cmc
and
cs
fcmovbe
mov
xchg
cmc
ror
ins
arpl
push
sbb
jae
and
sbb
cmps
add
arpl
adc
scas
pop
je
sub
shr
pop
aad
jo
gs
pop
jp
clc
pusha
add
rcl
adc
add
cli
mov
adc
aam
jns
dec
pop
imul
add
pop
sbb
mov
pop
jle
lods
xchg
ret
inc
into
push
popa
xchg
jo
aam
xchg
stos
sbb
cmp
dec
jge
not
in
(bad)
xchg
mov
lods
popf
fsubr
add
jp
xlat
and
ret
sti
or
jo
cmps
in
add
iret
mov
scas
dec
rol
je
push
pop
mov
scas
out
sti
shl
inc
jno
in
ret
mov
adc
shr
or
pop
outs
mov
jo
call
pop
mov
enter
scas
and
mov
in
push
jmp
sub
push
adc
adc
mov
sub
mov
mov
repnz
shl
rcl
pop
push
aaa
iret
mov
xor
leave
and
rcl
jae
aad
pop
rcr
sahf
add
cmp
outs
jge
(bad)
and
sahf
mov
xchg
pop
ror
mov
dec
cmps
lock
xor
ds
mov
pop
movs
sub
imul
mov
cmps
popa
sub
lods
addr16
push
jno
xchg
imul
ficom
cmp
sub
jne
adc
outs
xchg
call
imul
xor
pop
outs
nop
sti
xor
repz
daa
and
jnp
mov
add
xchg
xchg
push
cs
xlat
push
mov
ins
rcr
(bad)
lock
dec
adc
cmc
adc
(bad)
dec
pop
(bad)
inc
cmps
dec
retf
jecxz
jg
js
std
ds
jne
ss
mov
test
dec
adc
sbb
push
jge
aam
les
sti
shr
inc
push
add
ror
xor
call
sub
jne
inc
aas
mov
inc
or
mov
sbb
popa
and
into
adc
adc
push
jl
fcomp
movs
xor
jp
clc
cmp
mov
out
xor
dec
or
xor
sub
bound
adc
inc
inc
clc
mov
push
and
mov
add
out
lea
(bad)
jne
mov
iret
push
cli
jge
enter
fisub
test
stos
mov
mov
xor
add
xor
inc
mov
mov
js
lods
daa
pop
mov
sub
shr
push
mov
mov
fld
je
int3
jo
mov
mov
pop
mov
or
xor
lahf
or
cld
inc
push
xor
in
das
jnp
sbb
push
mov
loop
outs
in
and
xor
jno
mov
out
fimul
cmps
movs
addr16
pop
and
jne
fimul
test
call
fild
stos
inc
xchg
dec
cmp
push
sub
and
lea
test
dec
jns
jle
mov
nop
dec
add
test
mov
cwde
jg
push
leave
cld
or
les
repz
gs
mov
scas
push
mov
xchg
cmc
pop
mov
popf
jb
les
retf
push
xor
inc
stos
into
scas
inc
shr
ret
ret
out
sbb
jmp
ja
in
xchg
xor
dec
imul
pop
mov
std
lock
cmp
jns
fsub
ss
ja
sbb
data16
aas
cmp
fidivr
ror
and
push
or
xchg
xor
cdq
push
pop
shl
cld
dec
ss
dec
scas
xchg
std
xor
mov
sbb
movs
in
(bad)
jge
pop
movs
jge
cld
jbe
xchg
cld
(bad)
push
outs
mov
add
inc
ret
sub
fstp
pop
js
dec
in
or
adc
mov
push
arpl
cwde
xchg
(bad)
mov
add
inc
neg
and
pusha
retf
jb
sub
mov
outs
gs
add
ret
mov
shl
and
or
lds
xchg
outs
xor
jle
cmp
aaa
bound
inc
mov
stc
jmp
int3
jb
adc
dec
cdq
call
cdq
or
out
adc
pop
jmp
or
inc
mov
dec
push
ja
push
sahf
push
das
out
inc
dec
lods
mov
jo
push
mov
dec
mov
sub
xor
shr
lods
repz
jne
and
push
retf
stos
jge
adc
mov
stc
ss
je
rcr
fnstsw
dec
and
js
dec
mov
test
mov
push
mov
inc
(bad)
mov
jae
div
xlat
pop
sbb
dec
xor
push
mov
ret
lods
xlat
inc
adc
movs
push
pop
mov
mov
or
stc
lea
or
inc
movs
adc
mov
cmps
ret
adc
xlat
stos
test
in
mov
das
call
fidivr
clc
loopne
mov
cwde
xor
cmp
int
cmps
mov
sti
inc
xchg
out
je
int
fisubr
ret
int3
fs
jo
sub
outs
js
lods
or
push
ror
aad
dec
fisubr
jp
xchg
pop
rcr
pop
lods
sbb
mov
scas
jne
stos
int
dec
xor
rcl
push
(bad)
gs
xchg
mov
ret
or
cmc
push
mov
cmp
mov
pop
in
enter
jecxz
js
sbb
inc
shl
inc
out
inc
mov
push
jbe
push
(bad)
je
push
push
xchg
or
sar
sbb
push
mov
lds
add
jne
shl
adc
loop
jne
jb
loop
rcr
jne
je
lea
mov
ret
mov
shl
mov
je
call
sub
jo
mov
mov
cmp
jmp
push
or
outs
out
ds
inc
sub
pusha
mov
cmp
les
mov
std
or
lock
mov
out
pop
dec
jecxz
imul
dec
jae
cmp
inc
cwde
(bad)
mov
push
cmp
inc
repz
fld
sbb
lods
aad
loope
je
pusha
aas
enter
bswap
mov
cli
ja
sbb
xchg
adc
(bad)
js
ror
cdq
js
xchg
sub
push
cli
sub
xchg
lds
jecxz
xchg
xor
jmp
stos
ins
xor
add
ss
adc
xchg
test
clc
scas
out
adc
popa
stos
cmc
sub
pushf
sub
popa
inc
push
fbstp
call
add
mov
mov
fldenv
call
sbb
jbe
jae
pusha
sub
mov
cmps
push
jmp
xor
leave
sti
push
(bad)
jnp
add
sbb
in
je
enter
out
(bad)
xor
rol
and
dec
aaa
imul
pop
mov
movs
mov
je
pusha
mov
out
div
mov
movs
mov
lods
push
pop
rcr
sbb
mov
jp
or
cdq
xchg
jns
xchg
push
mov
push
pop
in
or
sub
lock
loope
retf
mov
sahf
ficom
mov
rol
add
jp
int3
sbb
popa
jle
push
repz
repnz
sub
pop
aam
jo
scas
sbb
xchg
mov
and
ret
cmp
jne
mov
push
test
loope
imul
jecxz
fistp
push
and
add
pop
jl
xor
mov
leave
int
je
loop
mov
and
sub
cmc
xlat
movs
mov
dec
cmps
leave
(bad)
pop
scas
data16
push
stc
jae
dec
imul
call
and
imul
sahf
inc
repnz
popa
sub
leave
and
pop
out
add
fld
stc
test
cmp
mov
push
int3
pop
or
inc
inc
xlat
adc
pop
add
inc
push
shl
pop
cs
retf
add
dec
jae
pop
fldcw
fnsetpm(287
xor
mov
retf
mov
jg
lea
jns
stos
push
mov
daa
nop
out
push
repnz
cmc
inc
ret
pop
mov
push
(bad)
push
cmp
imul
dec
pop
bound
cmps
push
xchg
cmps
sbb
jmp
or
cmps
mov
enter
adc
icebp
arpl
push
sbb
push
daa
(bad)
push
mov
and
popf
out
inc
inc
dec
xchg
sub
mov
xor
mov
dec
sbb
out
cmp
stos
pop
mov
push
in
lea
sbb
add
in
loop
lock
jg
add
push
push
pop
(bad)
mov
test
in
dec
xor
sbb
or
retf
xchg
inc
sbb
inc
lock
dec
dec
mul
push
je
lods
popf
ss
hlt
and
ins
clc
ret
in
pop
xchg
and
iret
(bad)
pushf
mov
dec
lock
jb
or
mov
push
lea
xchg
inc
mov
jle
pop
ret
or
mov
cmovle
xchg
sti
and
mov
jb
movs
pusha
std
retf
jecxz
stos
cmp
mov
rol
mov
push
cs
fwait
or
xor
mov
cmp
push
int3
jno
pop
cmp
inc
sbb
in
shl
cmp
mov
push
test
inc
jecxz
pop
test
aaa
das
mov
jb
sbb
sub
ja
ret
int
nop
jnp
fwait
push
push
add
inc
ins
call
xor
pop
mov
sti
out
dec
retf
xor
stos
enter
pop
mov
mov
enter
test
scas
lods
ror
(bad)
xor
sahf
cdq
jae
push
lock
cmp
aad
je
pop
imul
jecxz
popa
xor
add
push
mov
bound
nop
call
xchg
xchg
cdq
out
push
mov
es
arpl
pop
int3
mov
add
lds
mov
and
cmp
push
push
in
inc
bound
test
dec
test
jmp
in
push
ja
push
inc
mov
add
stos
ficomp
jmp
pop
jne
aas
cmp
add
aad
inc
aaa
cli
loope
fwait
retf
dec
shl
cmp
ds
xchg
jg
fwait
mov
adc
xchg
inc
je
nop
(bad)
xor
in
fsubrp
sar
jnp
xchg
fadd
sbb
mov
mov
xchg
cmps
xchg
icebp
add
out
mov
xchg
or
cmc
(bad)
lock
std
jns
in
adc
clc
push
add
xchg
xchg
outs
je
in
push
fwait
or
sub
je
jge
sbb
mov
aas
jb
adc
or
mov
sbb
sbb
fcom
xchg
mov
jp
or
mul
repz
lods
add
add
add
test
leave
fidiv
cli
or
(bad)
mov
frstor
mov
adc
adc
dec
push
das
dec
inc
push
mov
and
push
mov
popa
leave
push
out
add
cdq
arpl
ja
(bad)
fcomp
ss
dec
or
sbb
rdtsc
dec
sbb
mov
rcl
or
mov
jmp
jmp
in
add
in
dec
jo
cmps
mov
movs
ret
mov
test
jg
cld
pop
adc
push
cwde
call
xor
dec
cdq
add
xchg
push
rcl
jecxz
push
nop
pop
movs
cmp
mov
dec
retf
fs
lods
ins
data16
push
mov
mov
lea
dec
pop
push
sbb
jne
lods
jle
or
add
lods
mov
push
fisttp
arpl
test
stc
jne
xor
ret
push
sar
sub
mov
dec
xchg
clc
fnstsw
adc
sbb
push
cmp
or
mov
inc
inc
shr
(bad)
xchg
cmps
test
lahf
or
and
xor
cmps
mov
test
leave
pushf
loop
sbb
xor
outs
add
pop
dec
jo
jge
or
pop
mov
imul
jl
fld
out
xchg
dec
mov
mov
add
cmps
xchg
cmps
ss
dec
adc
test
adc
in
pop
test
pop
scas
scas
dec
ins
(bad)
jmp
es
(bad)
in
push
clc
mov
dec
icebp
jle
mov
mov
repnz
outs
cmps
hlt
imul
(bad)
xchg
xchg
(bad)
ss
mov
adc
adc
out
sub
xchg
clc
inc
inc
sbb
rol
mov
mov
call
xchg
push
sti
jle
(bad)
icebp
jo
leave
pop
movs
(bad)
push
ins
test
test
inc
sub
xor
sub
or
out
mov
mov
cs
aaa
jge
jl
jp
leave
aaa
mov
xchg
push
xlat
(bad)
mov
leavew
xchg
jge
enter
dec
sbb
mov
lahf
into
mov
pop
xchg
inc
out
and
and
je
es
enter
jp
and
je
mov
test
test
jb
neg
dec
(bad)
jge
dec
ja
or
aad
push
ret
xor
aas
mov
nop
xor
pop
xchg
lods
test
jmp
jmp
ror
gs
cmp
pop
cli
rcl
es
cmp
pop
jnp
mov
pop
fld
mov
out
call
adc
dec
sub
in
mov
js
lods
jne
aad
push
sbb
or
jae
call
xor
ins
push
mov
or
inc
shl
sti
pop
inc
push
adc
inc
mov
xchg
out
outs
pop
ret
and
push
stos
push
mov
loope
pop
mov
cmc
je
mov
outs
movs
mov
push
repnz
add
div
out
sub
std
and
lods
mov
dec
lods
cwde
and
mov
or
(bad)
fild
ja
and
dec
fiadd
pop
rcl
lods
ficomp
mov
pop
pop
sbb
xchg
and
mov
fisub
xchg
add
xchg
and
ror
mov
sahf
add
add
jo
add
cld
mov
jmp
scas
arpl
or
cli
xor
sub
xchg
(bad)
inc
jns
mov
imul
jbe
push
in
aad
add
out
cmp
sub
or
aam
mov
int3
xlat
ja
dec
mov
ret
shl
cmps
repnz
fcompp
xor
jnp
xor
shl
and
mov
pop
jecxz
sahf
and
xchg
(bad)
lods
(bad)
cmps
call
mov
adc
sbb
fucomp
mov
cdq
lods
mov
ss
out
inc
mov
cmps
mov
mov
sbb
adc
lods
add
pop
movs
psrlq
cmp
cmp
xchg
call
retf
and
adc
cmp
shr
popf
xchg
jbe
add
push
movs
fwait
in
xor
cmp
into
(bad)
repz
jns
push
stos
jmp
adc
les
cwde
loope
ins
call
or
sbb
push
and
mov
fwait
and
rcl
(bad)
test
test
movs
xchg
add
xor
sub
push
mov
mov
out
fs
mov
jnp
cld
inc
cmps
aaa
(bad)
adc
fs
push
in
and
jmp
mov
dec
mov
maskmovq
test
sub
call
pop
out
arpl
sub
add
jnp
mov
adc
fucomi
push
outs
add
jl
aaa
or
lahf
mov
inc
into
movs
push
test
or
mov
cmc
and
out
rol
and
jecxz
ret
jp
not
lea
out
ja
pop
std
inc
mov
out
popa
inc
mov
jmp
jbe
fidiv
retf
sbb
sbb
or
iret
call
arpl
xchg
xchg
sub
fs
jnp
cmp
(bad)
push
sub
ret
pop
hlt
mov
dec
fld
xchg
hlt
in
rcl
mov
mov
jp
pop
inc
out
lock
add
dec
jmp
xor
movs
out
inc
loop
call
xor
clc
cli
leave
lods
xchg
int
mov
jle
sti
call
cmp
push
bound
shl
jo
lea
xchg
mov
pusha
cmp
dec
jl
bound
in
add
iret
stos
jecxz
add
cdq
out
mov
or
out
lods
mov
icebp
mov
jns
dec
repnz
mov
lods
ins
sub
in
pop
in
mov
mov
add
arpl
and
in
repnz
(bad)
xchg
mov
outs
push
ret
push
pop
cmp
mov
sbb
stos
inc
add
mov
sbb
movhps
sub
pop
inc
fidiv
iret
test
jns
cmc
out
popf
inc
sub
lea
mov
ins
sub
dec
jl
cmps
ficomp
adc
inc
pop
jge
cmp
(bad)
or
cmps
adc
fcmove
mov
(bad)
xchg
aam
mov
arpl
iret
jp
ret
pop
dec
pop
pushf
xchg
add
enter
retf
sub
mov
xchg
mov
adc
je
xchg
repz
dec
out
fnstenv
sub
pop
test
mov
pushaw
xchg
push
imul
cmps
fmul
inc
push
mov
outs
cmp
sub
clc
ror
ret
xlat
mov
pop
repnz
mov
arpl
dec
inc
fld
xor
cmps
mov
jecxz
xchg
and
ja
mov
pop
int3
push
scas
dec
jge
lods
ds
mov
pop
jb
jge
shl
dec
lods
lods
xchg
mov
sub
das
xchg
cmps
adc
ss
inc
vpaddsb
and
and
(bad)
jno
mov
repz
mov
and
and
ds
(bad)
stc
or
es
fs
sub
pop
dec
sub
jb
jp
xor
adc
fistp
enter
mov
pop
jl
jo
js
sar
pop
addr16
sbb
adc
retf
imul
dec
mov
push
sbb
mov
leave
sbb
mov
ss
leave
push
jae
pusha
push
mov
jne
(bad)
fidiv
adc
(bad)
ret
mov
arpl
daa
sub
jno
test
jp
loopne
test
sbb
loop
xlat
jno
adc
add
jno
lods
shl
cmps
mov
pop
cmc
shr
mov
or
fmul
cli
gs
xlat
add
popf
add
xor
xor
sub
(bad)
test
ror
sub
ja
push
mov
pushf
xor
mov
xor
or
mov
or
mov
mov
xor
popa
pop
cmc
inc
test
rol
fisttp
dec
mov
cwde
(bad)
inc
inc
jl
jns
sbb
mul
out
or
and
int
sar
popa
iret
dec
xor
add
mov
cdq
adc
push
cmp
rol
out
aad
das
cmps
lea
dec
adc
inc
aaa
jmp
rol
xor
into
mov
pop
or
aam
mov
cmp
and
mov
pop
fnop
jle
test
jno
jnp
test
test
pop
xchg
xor
repz
mov
jge
jmp
sbb
ror
je
or
mov
push
and
or
push
xchg
in
jge
shl
xor
lds
pop
mov
pop
bound
punpckhbw
xchg
enter
lods
dec
xchg
xor
aas
movs
xlat
mov
ficom
xchg
pop
cmp
in
call
popa
imul
push
adc
mov
(bad)
mov
mov
das
cmp
std
les
pop
lds
mov
stos
hlt
fisub
(bad)
dec
(bad)
cmps
cwde
out
and
dec
ror
rol
int
xor
mov
outs
inc
sub
arpl
push
(bad)
pusha
and
jmp
ror
add
(bad)
lock
jae
out
xchg
add
inc
push
xor
cli
ret
fwait
xchg
js
jg
in
js
or
into
jno
ins
sub
pushf
retf
jmp
mov
mov
les
pop
scas
rcl
popa
test
add
fs
sti
int
push
and
adc
jp
push
aaa
pop
in
test
repnz
seto
and
sar
loope
imul
xor
jne
es
dec
xor
icebp
repz
mov
fwait
add
(bad)
repnz
pop
ins
mov
ss
repnz
mov
adc
test
push
cmp
fld
jge
push
push
in
retf
enter
fld
cld
or
or
dec
mov
cmp
hlt
lods
push
xchg
scas
jecxz
in
sub
popa
aas
clc
lds
je
jl
mov
out
push
push
leave
sub
int3
jo
rcl
test
xchg
xchg
int3
scas
dec
sub
pop
jge
mov
push
imul
lock
xor
ret
or
adc
add
add
fsubr
loopne
jecxz
dec
sbb
sub
aam
xchg
jne
test
sbb
call
and
lock
popa
test
push
add
pushf
clc
or
adc
cmp
or
retf
sub
sbb
inc
sub
pop
inc
push
add
test
cmp
push
lea
cmp
scas
dec
cmc
test
scas
inc
ins
lds
xchg
int3
mov
shr
push
les
fiadd
push
mov
inc
push
int3
aas
inc
mov
fsubr
adc
bound
jnp
aad
adc
mov
sub
fldcw
arpl
xchg
jmp
js
call
cs
sub
adc
cmp
jb
bound
jno
dec
fldenv
pop
popf
out
test
jle
(bad)
xchg
cdq
xchg
jmp
out
or
loope
popf
pop
xchg
add
jp
cmc
add
outs
shr
mov
shr
jge
sahf
fmul
jge
in
mov
mov
dec
push
sbb
dec
aad
add
in
sbb
repnz
loope
rcr
mov
mov
jl
jno
(bad)
icebp
ret
cmp
push
push
cld
fcmove
aas
cmp
push
mov
not
sub
shl
push
inc
cs
lods
fistp
(bad)
xor
fadd
mov
mov
shl
fldenv
jnp
ret
adc
(bad)
stc
call
retf
ds
inc
test
scas
sub
adc
in
dec
cwde
repz
xlat
enter
dec
ror
adc
cmp
inc
jmp
xor
cmp
cwde
test
nop
jae
add
jmp
mov
ror
pop
rcr
pusha
push
scas
loopne
xchg
mov
fwait
lods
xchg
outs
sub
dec
adc
out
movs
add
mov
jae
scas
push
xlat
pop
and
aam
jmp
test
pop
sar
out
and
cli
test
jp
stos
mov
movs
jae
rcr
or
jecxz
push
and
out
loopne
(bad)
sahf
push
popa
mov
sub
cmp
cdq
aas
mov
cmp
js
sahf
ins
and
sbb
and
sti
fistp
shr
pop
dec
mov
jne
add
into
jo
fnstenv
dec
jge
mov
je
(bad)
ja
adc
cmps
add
jmp
fcom
mov
repz
aas
push
sub
dec
popa
ds
(bad)
int
pop
sbb
xor
xchg
add
aas
pop
sbb
leave
ja
in
cmp
addr16
mov
hlt
shr
adc
in
movs
clc
stos
jbe
or
out
mov
jns
outs
loop
fwait
jbe
adc
in
sub
sbb
retf
repz
outs
pushf
mov
mov
cmp
mov
and
loopne
sub
mov
(bad)
sbb
add
fadd
mov
pushf
fiadd
or
push
imul
in
xor
daa
call
repnz
mov
out
daa
sub
dec
in
scas
das
shl
repz
leave
mov
xor
cmps
in
push
ins
mov
pop
cmp
push
sbb
es
or
and
mov
mov
out
mov
fnstenv
jmp
and
(bad)
gs
ins
daa
add
(bad)
pusha
iret
das
sbb
cmp
clc
clc
inc
add
div
cmp
cmp
and
adc
fsubr
mov
stos
jle
lock
xchg
mov
sahf
ret
lods
push
enter
xor
cs
out
dec
fsub
inc
loop
test
pop
cmp
cdq
mov
es
dec
call
sub
sbb
idiv
mov
push
cmp
jmp
sar
cmp
mov
(bad)
jg
test
outs
xchg
dec
hlt
repz
mov
xchg
add
push
sbb
push
xchg
std
into
or
cmp
in
push
pop
adc
in
stos
in
jo
and
jg
(bad)
rcr
sbb
mov
mov
and
retf
scas
les
sub
lds
inc
addr16
in
clc
xchg
cmp
push
and
sub
push
sbb
mov
lods
out
pop
loopne
rcr
pop
sub
test
cmp
test
retf
or
movs
mov
push
into
dec
sbb
add
mov
mov
int3
rcr
adc
dec
adc
mov
adc
push
fcomp
xchg
xor
icebp
ficomp
and
mov
dec
and
inc
push
mov
outs
and
or
cdq
sbb
loop
pop
push
dec
cdq
mov
xchg
into
fadd
xchg
add
and
mov
push
fidiv
jnp
lea
scas
aad
pop
lahf
cmp
dec
jb
not
mov
and
fst
lock
div
dec
mov
cmp
adc
ret
sbb
jbe
fsubr
fdivr
mov
push
es
cmp
pop
fild
push
movs
pop
jmp
lods
jecxz
adc
aad
xchg
push
dec
jl
repnz
adc
sub
cli
cmp
mov
and
pop
jp
in
mov
xchg
mov
lock
out
lods
xchg
in
inc
pop
pop
loope
pop
test
jb
push
jle
cmp
out
and
scas
pop
fxtract
sti
jb
mov
inc
dec
pop
pusha
xor
hlt
cmc
cmp
mov
inc
and
add
ud1
add
cmc
mov
push
adc
jns
ds
nop
popf
imul
sub
into
push
mov
js
shr
push
test
adc
and
jbe
and
adc
cs
out
inc
mov
jo
pusha
pop
adc
leave
and
push
mov
adc
shr
xchg
mov
hlt
ret
push
(bad)
pushf
shl
bound
push
rcr
sbb
pop
sbb
xchg
jno
sahf
xchg
adc
test
in
pop
call
(bad)
jbe
or
pop
pop
mov
scas
lods
jnp
pop
imul
icebp
xor
or
(bad)
cmp
pop
inc
xchg
inc
pop
out
cmp
pusha
push
sbb
fdiv
repz
mov
xchg
stc
and
std
and
fdivr
xor
pop
sub
push
sbb
test
mov
pusha
shl
das
in
push
add
dec
xchg
push
dec
push
stos
ja
jae
cmp
cmc
mov
sub
sub
cmp
jne
jbe
add
ret
mov
cmp
ret
jns
sub
fld
inc
push
enter
sub
ds
xchg
adc
into
pop
test
out
mov
pop
movs
sbb
push
stos
hlt
iret
push
adc
cmc
jmp
stos
xlat
jle
pop
jmp
dec
fistp
pop
arpl
or
pusha
pop
sbb
inc
xchg
mov
lea
dec
mov
popf
dec
test
xlat
fdivp
pop
and
loopne
dec
pushf
xor
hlt
call
add
popa
pop
dec
jmp
loopne
dec
(bad)
outs
aam
mov
mov
jmp
inc
pushf
sti
sbb
hlt
and
push
out
and
movs
jns
push
inc
inc
es
and
les
lock
xchg
aaa
jmp
adc
xchg
daa
adc
not
mov
or
inc
xchg
or
fimul
test
dec
mov
loop
fucom
cli
inc
add
movs
mov
aas
mov
inc
mov
ins
in
(bad)
pop
mov
sbb
test
xchg
ret
movs
outs
ds
sbb
sbb
xchg
pop
and
dec
test
shl
jg
sbb
adc
loopne
adc
fst
popa
jmp
sar
lods
dec
jle
sbb
pop
and
enter
xor
mov
mov
(bad)
push
jg
pop
jl
jg
es
push
jne
adc
fsubr
sbb
out
call
dec
ins
movs
mov
je
fimul
cli
cs
fisttp
rcl
push
jns
mov
push
sbb
xor
xor
mov
les
and
icebp
shl
push
sub
nop
int
shr
fistp
fcomip
push
bound
popa
jg
xlat
xchg
nop
int3
add
je
pop
icebp
mov
adc
pop
push
pop
adc
jns
add
stos
arpl
mov
xor
push
cs
scas
mov
fxch
fbld
fist
dec
repnz
dec
jecxz
pop
fwait
adc
rcl
cmp
call
(bad)
call
mov
das
shl
jns
and
sbb
iret
fdivrp
test
addr16
mov
inc
popf
add
jbe
xor
xchg
dec
pop
fld
push
jl
cmp
add
cs
mov
pop
cmc
push
(bad)
cmp
ss
arpl
out
or
adc
pusha
lds
jb
ja
or
repz
sbb
lahf
push
stc
xor
not
sbb
mov
mov
inc
nop
pop
(bad)
dec
movs
sbb
jg
arpl
fldcw
ss
sub
xor
and
add
mov
dec
cmps
cmp
leave
stos
iret
rcl
or
movs
and
sar
or
retf
(bad)
int
fcom
dec
cmps
into
xchg
xchg
jbe
push
sar
into
pusha
mov
cmps
pushf
add
outs
ret
stc
mov
ins
push
ret
fnsave
adc
(bad)
inc
les
add
jns
push
cmp
mov
call
fnstsw
mov
test
sub
aas
shr
idiv
jle
cmps
sub
movs
aad
icebp
loope
hlt
dec
lods
or
repnz
sub
push
addr16
add
inc
or
pop
sub
out
xchg
out
mov
or
movs
or
fist
loop
jnp
int3
push
loope
adc
ror
loop
pop
xchg
mov
ss
mov
xchg
mov
fwait
es
(bad)
push
pop
jmp
mov
ds
xor
pop
retf
xchg
cmps
sub
sbb
pushf
call
and
xchg
sub
push
or
xor
mov
adc
fisttp
jo
pop
mov
adc
xchg
fs
xor
lods
xlat
outs
cdq
mov
imul
test
pushf
fcomp
push
xchg
sub
inc
call
sub
lods
jp
stos
pop
fst
cli
mov
fild
les
fdiv
(bad)
push
pop
(bad)
pop
mov
pop
movs
je
fisubr
outs
cmp
(bad)
idiv
mov
dec
pushf
jmp
ror
iret
mov
mov
imul
sti
cmp
sbb
jbe
fwait
dec
addr16
dec
in
in
cmps
test
xor
cli
inc
jp
fwait
sti
daa
stos
in
pop
aam
(bad)
repnz
lods
xor
xchg
(bad)
jo
cwde
push
(bad)
scas
mov
pop
in
push
rcr
sub
cmp
cmc
xchg
add
mov
lock
ficom
pop
data16
mov
pushf
push
pop
(bad)
sub
xor
pop
rcl
shr
inc
and
xchg
sahf
xor
out
in
scas
mov
ss
(bad)
xor
lods
or
sub
(bad)
scas
stos
pop
(bad)
sub
jl
in
fld
and
sub
sub
in
adc
mov
enter
aaa
(bad)
cmp
fnsave
add
jns
inc
scas
adc
rcr
cmp
or
mov
jle
jecxz
and
sub
cmp
fst
dec
dec
addr16
call
or
in
jge
inc
das
mov
movs
aaa
sub
in
sbb
push
sub
mov
push
fistp
push
cmps
std
cmp
nop
retf
in
mov
cmp
movs
adc
repz
popa
sub
retf
mov
and
(bad)
sub
divps
inc
dec
inc
jo
mov
cld
test
in
imul
pop
fs
test
loopne
in
xor
jo
xchg
scas
stos
sub
xchg
std
dec
push
mov
sbb
shl
movs
dec
inc
push
cs
retf
inc
adc
sub
pop
xchg
jp
scas
int
(bad)
cld
aaa
mov
cmps
mov
xchg
mov
mov
cmp
mov
enter
movups
test
mov
or
mov
stos
push
jle
add
pop
jns
or
ficom
or
jmp
mov
(bad)
iret
xor
ror
fistp
dec
outs
cmp
push
imul
call
jp
int3
cmp
mov
aaa
jecxz
(bad)
test
mov
xor
shl
call
stos
jnp
mov
ret
pop
sbb
adc
pop
inc
popa
jns
pop
lea
loop
pop
enter
scas
stos
xchg
add
(bad)
cmp
rep
jecxz
rol
push
cmps
inc
adc
pop
xchg
adc
mov
(bad)
pop
or
sbb
cmp
pop
fsubr
icebp
xor
or
jle
outs
mov
cwde
xor
dec
mov
mov
(bad)
jp
mov
(bad)
gs
and
mov
dec
xchg
and
mov
jnp
test
aam
lock
xchg
int
inc
or
inc
cmp
xor
mov
mov
mov
cmc
ja
xchg
jp
dec
test
outs
mov
or
ins
in
pop
mov
inc
pop
stos
outs
pop
test
cmp
mov
rol
imul
mov
(bad)
cmc
into
mov
jnp
test
in
mov
sbb
push
mov
sub
and
addr16
inc
mov
std
int
inc
loopne
stos
xor
xor
push
mov
xchg
jg
daa
sbb
jl
cmc
test
adc
sahf
inc
in
test
mov
mov
fild
xor
mov
jmp
loopne
mov
mov
test
loope
sub
sbb
pusha
sbb
mov
mov
fisubr
jmp
arpl
gs
cmp
sub
dec
mov
test
aad
jmp
out
lods
push
dec
popf
fdiv
cmp
or
je
and
icebp
pop
fs
and
popf
popa
inc
inc
cmp
sub
dec
or
add
push
not
sub
std
pop
movs
lods
fwait
clc
data16
movs
pop
sub
xor
(bad)
mov
cmp
cwde
shl
sbb
push
ret
sahf
mov
ss
jne
int3
cld
enter
cmp
in
test
sbb
(bad)
mov
or
sub
lds
sbb
pusha
hlt
cmps
int3
fisttp
dec
and
aam
cmps
mov
pop
iret
jl
stc
jae
jo
push
fdivr
pusha
cmp
mov
rcl
cmp
iret
pop
arpl
lods
mov
movs
or
int
jmp
jle
push
popa
loope
add
adc
lahf
pop
scas
out
pushf
mov
mov
(bad)
cmp
and
adc
inc
mov
push
push
inc
pop
dec
jns
mov
add
outs
fstp
adc
and
imul
xchg
fs
mov
mov
jmp
cs
call
aas
sub
jge
call
push
xchg
out
push
mov
cmps
pop
out
dec
and
jo
mov
movs
out
mov
in
xchg
adc
imul
nop
mov
mov
cmps
in
mov
inc
loopne
inc
pushf
(bad)
call
(bad)
repz
sbb
daa
add
lock
rcr
movs
stos
push
rcr
mov
in
addr16
mov
inc
mov
in
and
ret
mov
sub
or
jno
je
sbb
mov
adc
(bad)
xor
pop
sbb
add
mov
pushf
cmp
leave
cmp
pop
cmp
(bad)
pop
scas
rcl
(bad)
fldz
and
inc
jbe
jb
mov
or
je
or
mov
rcr
fimul
mov
pop
pop
fcom
stos
cld
rcl
(bad)
push
cvttps2pi
pmaxsw
nop
(bad)
mov
add
jg
mov
push
pop
(bad)
or
cmps
mov
fistp
std
sbb
add
icebp
or
mov
pop
lahf
and
cld
jo
loop
sub
fsubr
clc
sub
jbe
pusha
repnz
push
xor
push
mov
push
dec
fs
pop
enter
xchg
xchg
mov
push
xchg
test
fnstenv
scas
movs
inc
mov
inc
or
fsub
mov
mov
aam
sbb
push
lahf
cli
fstp
xchg
fwait
cwde
mov
fwait
mov
shl
sub
inc
inc
jle
scas
movs
cwde
xchg
and
add
or
mov
and
out
adc
cs
lock
mov
jmp
rcl
xchg
imul
iret
sbb
hlt
out
clc
lock
movs
or
cmps
xchg
mov
out
dec
imul
mov
cmp
pop
adc
jae
xchg
xlat
outs
pop
jno
adc
stos
call
ror
aaa
dec
push
jmp
xchg
call
push
jmp
inc
jg
es
mov
jbe
mov
push
ret
mov
xchg
jns
pop
repnz
lods
scas
mov
ret
loopne
push
sbb
inc
(bad)
jp
pop
pop
pop
aam
icebp
pop
(bad)
push
pop
sub
imul
jmp
popf
inc
daa
push
out
enter
sbb
sub
movs
jnp
mov
ss
add
loopne
add
cmp
inc
xor
jg
add
mov
into
sbb
mov
sbb
adc
and
mul
int
fstp
enter
(bad)
in
aas
std
mov
and
dec
jp
call
mov
aas
aad
mov
sub
out
push
cmp
out
int3
pop
and
ss
sbb
pushf
jmp
cmp
in
push
push
add
xor
push
outs
out
je
push
jle
cmp
or
fld
sub
mov
xor
push
mov
sti
stc
cmc
arpl
stos
jmp
jbe
sub
cmp
jnp
push
sahf
inc
add
sub
sti
in
inc
xor
jmp
jnp
shr
pusha
sub
fldl2t
or
sar
dec
stos
sbb
shr
jecxz
aam
mov
retf
mov
and
imul
call
mov
mov
and
mov
adc
sub
or
dec
cmp
jl
push
(bad)
shr
test
mov
call
scas
add
bound
xchg
cmps
stos
push
adc
push
cmps
in
mul
(bad)
lahf
es
(bad)
ins
stc
adc
push
jp
inc
xchg
das
inc
inc
retf
jge
cdq
jmp
or
into
add
jmp
scas
sub
sbb
(bad)
fstp
fild
inc
sub
mov
jne
out
(bad)
and
fidiv
(bad)
int3
aad
jmp
lea
stos
mov
mov
das
adc
pop
inc
pop
dec
ins
mov
les
test
pop
rol
jmp
adc
popf
das
retf
adc
push
jno
dec
jo
sub
inc
daa
xor
test
scas
(bad)
fstp
lea
pop
outs
pop
pop
xchg
mov
mov
push
pusha
vmwrite
jno
dec
lahf
fcomi
and
mov
xchg
mov
mov
sub
lea
retf
fcomp
push
inc
jae
pop
dec
adc
push
mov
aad
addr16
jg
cmp
xor
outs
inc
(bad)
sub
and
fnstcw
test
mov
sbb
mov
lock
in
icebp
ss
sbb
loopne
(bad)
lods
aad
mov
cmp
sub
push
add
mov
imul
stos
ins
dec
mov
lods
fnstenv
sub
clc
mov
and
xchg
and
pop
xor
or
shl
xor
retf
fwait
movs
xchg
das
mov
xor
into
push
shl
cmps
cwde
clc
pop
fdiv
rcl
xchg
pop
mov
stc
outs
ds
ret
fcom
pop
cmc
mul
mov
or
jle
stc
mov
loop
xor
mov
int
pop
in
ror
sub
jl
loope
out
mov
movs
sbb
xor
fst
imul
dec
and
add
cmps
sbb
inc
inc
mov
in
or
lods
nop
out
mov
(bad)
das
mov
(bad)
jecxz
les
mov
push
cmp
jno
xor
imul
int
mov
aaa
sbb
scas
repnz
sbb
leave
push
mov
sahf
push
fidiv
loop
je
mov
adc
imul
cs
ss
lods
iret
pop
pop
jns
es
iret
std
js
push
and
cmps
or
fisttp
sbb
push
iret
jne
jl
push
ret
jno
sbb
xor
cmps
in
adc
mov
jmp
cmp
dec
or
inc
adc
or
js
dec
push
vsubss
cmc
jmp
jle
push
leave
test
jnp
jo
inc
cmovnp
scas
scas
or
loop
sub
inc
jbe
sub
push
pop
std
out
and
mov
mov
xor
out
in
push
push
pop
push
inc
jmp
mov
(bad)
mul
cmc
add
add
jmp
stos
lahf
sbb
scas
movs
inc
in
test
sub
test
out
cdq
jmp
in
jge
dec
jb
test
adc
gs
mov
jge
sub
sub
mov
in
nop
lock
shl
test
jmp
jnp
popa
xchg
mov
rol
inc
add
lock
jp
or
sbb
inc
xlat
loop
nop
ins
retf
shr
test
dec
addr16
mov
fiadd
(bad)
stos
mov
scas
mov
in
mov
enter
enter
fbld
jb
push
test
or
add
out
fisubr
mov
pop
stc
icebp
jp
push
mov
out
xor
hlt
jge
call
jge
mov
mov
neg
cdq
imul
aaa
movs
or
or
push
add
je
xchg
push
mov
inc
lods
sbb
xlat
sbb
dec
or
clc
icebp
xor
dec
or
cdq
dec
into
repnz
push
jle
inc
or
jmp
push
push
cmp
inc
les
hlt
shl
scas
aad
push
test
out
add
pop
or
sbb
ret
loop
adc
jne
popa
adc
test
sbb
mov
ja
imul
sbb
and
mov
and
inc
jns
retf
movs
add
xchg
jle
mov
add
fsubp
dec
enter
sub
loopne
call
mov
cmp
ffree
retf
clc
push
cmp
push
push
xchg
adc
and
xor
sub
mov
imul
lea
dec
mov
bound
std
sbb
pop
les
imul
hlt
or
cmp
fcmove
(bad)
adc
pop
add
mov
adc
sahf
sbb
jb
test
jae
test
loope
push
xor
adc
les
dec
sti
in
mov
lods
xlat
cmps
popa
movs
xchg
xor
pop
fcomp
xchg
mov
jns
test
jle
out
jns
push
cmp
add
mov
push
popf
add
pop
pop
cmp
loop
rcl
fs
push
jecxz
pusha
js
test
popf
jnp
ror
jp
out
sti
movs
cmp
(bad)
stc
mov
dec
xor
fstp
loope
or
int3
data16
imul
dec
cmp
push
mov
pop
sbb
sub
nop
outs
into
fnstenv
inc
les
xchg
wbinvd
pop
aaa
xchg
or
(bad)
loop
push
add
stos
sahf
fucomip
pop
mov
push
dec
cmp
ins
int
nop
or
mov
rcl
loopne
xchg
rcl
jo
pop
mov
es
fld
outs
and
inc
adc
mov
outs
lock
inc
mov
fiadd
xchg
pop
mov
bound
(bad)
mov
cmp
and
xor
pop
inc
fsubr
inc
jo
fnsave
movs
jmp
shl
stos
push
(bad)
xor
(bad)
pop
jle
popa
sbb
mov
div
(bad)
mov
mov
mov
push
add
mov
arpl
(bad)
and
cmp
sub
pop
mov
or
cmp
lods
adc
scas
add
sbb
inc
add
ret
pop
pop
retf
aad
jno
arpl
ins
dec
bound
(bad)
or
sahf
sbb
pushf
cdq
push
lock
add
lods
shl
ds
jle
and
add
sti
and
rcl
mov
dec
dec
sub
add
pop
in
ins
mov
push
stc
xchg
mov
push
retf
clc
sbb
movs
shl
jl
adc
sub
xor
adc
icebp
fistp
fsubr
data16
leave
mov
add
inc
mov
ds
aam
jne
scas
xchg
aas
sbb
into
jo
inc
push
imul
cmp
inc
ins
aas
add
stos
add
sbb
xchg
pop
aaa
jmp
(bad)
xor
xchg
test
dec
ret
or
pop
sbb
sbb
mov
int
push
in
sbb
test
xchg
xchg
fs
mov
in
add
std
ret
dec
add
daa
movs
or
fist
jl
mov
dec
xchg
cmp
nop
enter
ror
(bad)
das
cmp
xor
(bad)
cmps
dec
(bad)
push
xor
cmp
mov
push
les
rcr
xchg
jae
out
daa
pop
add
add
(bad)
sub
inc
cmc
retf
jmp
sar
or
and
ds
cmps
jle
das
int3
pop
mov
scas
pop
js
pop
and
mov
pop
call
xchg
(bad)
xchg
push
cdq
xchg
xchg
add
out
call
das
scas
mov
repz
dec
mov
push
mov
ds
pop
aas
mov
sub
cmps
xchg
mov
xchg
and
jns
xor
ja
shr
and
cmp
xor
pop
push
das
mov
pop
int
stos
push
(bad)
outs
loope
xchg
lds
in
imul
pop
jle
push
or
push
aad
mov
xor
outs
pop
mov
fadd
jns
enter
rcr
pop
aaa
pop
aas
inc
xchg
xor
leave
test
(bad)
fadd
loopne
mov
test
or
add
jbe
pop
add
pop
mov
xchg
test
add
push
sbb
adc
iret
pop
fldcw
aas
cmp
fwait
fs
push
mov
pusha
mov
cli
adc
in
lods
inc
dec
dec
dec
adc
stos
lea
mov
sub
jno
mov
or
push
push
ret
cld
pushf
or
push
push
mov
mov
ins
cmp
es
push
inc
xor
popa
leave
and
pop
pop
stc
or
sar
mov
or
test
cmp
jl
mov
pop
xlat
sbb
sub
sub
xor
push
idiv
stc
or
add
fwait
push
and
push
or
jmp
call
mov
fwait
jnp
adc
mov
xor
sbb
imul
shr
jmp
je
mov
test
adc
add
jae
adc
mov
lea
jno
les
dec
push
in
and
retf
in
jmp
xor
pop
xchg
sbb
pushf
pop
leave
and
jle
jmp
xchg
sar
mov
mov
movs
push
icebp
int
inc
and
push
and
sbb
dec
jae
add
(bad)
add
xchg
rcl
mov
adc
sti
cmp
push
add
cs
mov
lock
aaa
aas
ins
add
xor
repnz
in
and
and
adc
inc
jne
adc
inc
sub
inc
inc
sub
in
jl
jae
jmp
and
test
shl
xor
cmp
xchg
jno
jmp
(bad)
adc
mov
call
repnz
test
adc
adc
mov
jnp
adc
test
fwait
xchg
sahf
pop
shl
or
ins
mov
dec
or
inc
xor
sbb
xchg
mov
and
jae
cmps
sbb
shr
cmp
dec
outs
retf
xlat
mov
outs
dec
cmp
mov
mov
adc
call
xor
or
lds
(bad)
fcmovbe
jl
jmp
add
out
mov
and
icebp
push
aad
adc
xor
sub
stos
lock
sti
mov
sbb
aad
cmp
aaa
test
fwait
in
(bad)
cmp
mov
dec
inc
cld
cmps
data16
jg
jnp
ins
outs
fsubr
sbb
inc
or
sub
and
dec
adc
jle
pop
xor
mov
push
fnstsw
xchg
cmp
fistp
call
(bad)
jae
ret
jmp
mov
cmp
add
cdq
sbb
mov
dec
inc
mov
add
or
call
lahf
rol
cmp
mov
test
inc
pop
sti
cld
aas
add
xor
cs
mov
sub
and
xchg
xlat
fnsave
fmul
mov
test
pop
jnp
sbb
dec
das
mov
mov
mov
mov
jb
sbb
mov
cmp
dec
sub
push
sub
jp
out
icebp
inc
pop
push
repz
nop
and
mov
out
popf
sahf
pushf
pop
aas
ja
aaa
jo
xchg
daa
xchg
xlat
aaa
mov
or
inc
adc
mov
pushw
rep
xor
dec
xchg
inc
push
inc
add
cmps
sbb
call
mov
retf
mov
cmc
jmp
leave
mov
mov
shl
pop
and
sbb
sub
or
sub
inc
popf
mov
jne
push
jge
rcl
(bad)
push
inc
inc
loop
xchg
fistp
mov
clc
cmp
inc
loop
jle
xor
fwait
in
ror
xchg
retf
adc
and
sub
rcl
(bad)
sti
xchg
jmp
mov
fbld
adc
push
fs
jmp
hlt
mov
iret
push
cdq
xchg
pop
jg
sbb
into
ds
(bad)
xor
inc
push
fimul
clc
adc
iret
adc
lock
mov
and
jmp
in
cmp
cmp
(bad)
adc
dec
or
daa
retf
sar
jle
xchg
xor
dec
or
xor
clc
ret
fmul
cmp
pushf
pop
ret
xor
dec
cmps
and
xor
mov
push
outs
gs
data16
mov
cld
adc
pop
cmp
out
xlat
(bad)
adc
in
xor
outs
jl
jb
adc
fild
xor
fs
add
or
push
inc
or
mov
jns
es
mov
mov
dec
imul
test
inc
shl
mov
jge
pop
dec
jle
mov
xchg
ins
add
push
push
ret
add
addr16
add
test
adc
das
push
or
sub
pop
test
fsubr
stc
fldlg2
ds
enter
and
das
iret
jns
stos
out
jne
scas
mov
out
lahf
xor
loop
stos
push
sbb
sti
test
or
out
stos
sbb
ficom
imul
or
into
add
sub
jns
adc
jmp
xchg
sbb
js
shr
(bad)
jo
fst
push
ror
imul
mov
sub
push
lahf
arpl
repnz
sbb
xchg
gs
stos
mov
jl
scas
xlat
xchg
mov
lea
mov
stos
pop
dec
xchg
(bad)
loop
mov
xor
push
pop
jg
cmp
mov
arpl
test
cld
shl
push
jl
std
cs
push
add
pop
sbb
loope
or
jns
pop
stos
push
mov
cmps
test
xor
popa
sbb
cmps
dec
fwait
add
movs
cli
xchg
mov
rol
mov
xlat
pop
loop
jae
test
add
fwait
pop
inc
and
(bad)
nop
bound
fcomp
scas
inc
add
pop
sahf
and
daa
xor
mov
loope
aaa
adc
out
push
mov
sub
mov
addr16
scas
les
sbb
and
mov
pop
leave
sbb
push
mov
scas
push
pusha
push
push
pop
rol
pop
push
add
loopne
sbb
pop
dec
fsubr
jle
sti
(bad)
and
dec
push
cwde
sti
fs
jecxz
adc
pop
pop
dec
mov
enter
adc
inc
mov
jg
test
sbb
inc
jmp
test
aaa
in
fistp
add
movs
dec
out
mov
cwde
movs
push
ds
jmp
aas
xchg
daa
and
dec
adc
paddq
mov
cmps
es
push
repnz
mov
and
movs
mov
js
push
mov
inc
jg
push
iret
call
jbe
push
xor
ret
dec
xor
int3
stos
scas
loopne
mov
inc
mov
sub
adc
jnp
cmp
js
mov
inc
mov
and
aaa
jbe
sbb
fdivr
mov
leave
hlt
jge
inc
jne
aaa
test
cld
test
inc
fist
inc
xchg
stos
stos
mov
stos
(bad)
sub
(bad)
jecxz
(bad)
xor
call
dec
cwde
push
sbb
cmps
push
(bad)
call
jnp
imul
pop
inc
jg
inc
loop
push
sahf
sbb
popf
lods
test
repz
and
movs
push
(bad)
in
adc
inc
pop
mov
add
pusha
sbb
repz
mov
pop
out
cmp
mov
add
rol
jno
inc
(bad)
cmc
aas
and
adc
cmp
mov
push
fwait
jmp
cmc
lock
aad
mov
cli
dec
mov
scas
mov
and
mov
push
pushw
pushf
data16
xlat
cmps
movs
cmp
adc
xchg
mov
ss
jl
inc
inc
sbb
sub
add
int
cmp
addr16
mov
call
mov
fst
xlat
add
mov
xchg
aad
ja
cmc
out
adc
mov
test
ds
adc
cmps
push
pop
jmp
add
dec
loope
pop
jp
xor
test
and
ins
dec
clc
jnp
sub
mov
and
ins
sbb
mov
sbb
je
push
cmps
mov
pop
push
call
sbb
test
sbb
jo
rcl
sbb
call
out
jb
and
inc
imul
sub
push
mov
mov
icebp
sti
sub
movs
(bad)
popf
push
fdivr
sbb
aaa
and
adc
fstp
ret
dec
call
dec
dec
xor
sub
dec
test
ja
adc
sub
mov
fwait
sahf
fisttp
out
pop
push
mov
mov
jecxz
inc
popf
sub
cmp
xor
xchg
test
(bad)
cmp
out
xchg
cmp
xor
cmc
and
stos
sbb
inc
cmp
mov
sahf
and
loope
stos
add
adc
jl
bound
mov
rcl
cmp
or
sbb
cmp
repnz
mov
pop
retf
fadd
sbb
movs
fdiv
imul
add
scas
and
jne
outs
mov
or
sub
sub
jmp
mov
je
push
mov
(bad)
lods
jge
sbb
retf
pop
adc
xor
test
sbb
ins
mov
jae
add
mov
cmc
dec
dec
push
movs
jle
and
mov
bound
push
cmp
ret
sub
inc
stos
int
pop
dec
daa
inc
fcom
mov
int3
js
lds
(bad)
xor
cmps
jmp
mov
jp
or
clc
movs
dec
xor
fsubr
jg
inc
inc
and
dec
dec
add
mov
(bad)
dec
xor
(bad)
fnstenv
mov
dec
adc
stos
in
sub
stc
sbb
mov
dec
fidivr
or
sub
or
(bad)
xor
push
loop
dec
loopne
push
mov
(bad)
(bad)
mov
fsub
dec
adc
inc
(bad)
gs
add
push
inc
inc
sti
lods
es
push
cwde
pop
push
jns
xor
outs
mov
adc
jmp
adc
popa
jbe
movs
adc
mov
js
mov
push
pop
sub
ret
dec
and
and
pop
sub
out
xchg
ret
xlat
iret
fist
sub
loope
cli
xor
shl
push
int3
jno
mov
stc
stos
push
and
pushf
dec
rcl
imul
lds
xor
adc
and
repnz
jo
cdq
out
sti
test
xchg
and
pop
(bad)
push
inc
pusha
clc
push
push
loopne
fld
ret
mov
aam
fst
sahf
mov
cmp
and
mov
dec
ret
in
sbb
pop
cmp
and
add
mov
inc
jmp
add
pop
sbb
je
adc
xor
xor
or
and
jmp
in
pop
xchg
sbb
into
adc
mov
or
pop
mov
jle
cmp
xchg
mov
out
jge
cmp
cmp
fisub
mov
out
or
int3
call
mov
mov
cld
or
sub
xor
cmps
gs
in
mov
repz
push
xchg
mov
imul
push
stos
xor
fstp
call
push
mov
mov
lods
dec
inc
hlt
test
loope
jmp
adc
pop
bnd
dec
push
dec
sub
(bad)
test
repz
add
sahf
xchg
sbb
jmp
(bad)
or
xchg
or
lahf
and
fimul
mov
popa
mov
sbb
cmp
mov
pusha
cs
lahf
xchg
xchg
outs
dec
xor
dec
sar
inc
add
push
dec
neg
das
ror
movs
mov
icebp
int
dec
push
sbb
xchg
or
outs
mov
xor
call
jnp
mov
fdiv
ror
aad
neg
xchg
ins
jae
cli
arpl
mov
arpl
ja
xchg
daa
and
mov
add
sahf
adc
add
scas
cwde
dec
mov
push
leave
pop
inc
aas
ss
ss
imul
pop
mov
fadd
es
mov
xor
jle
retf
loopne
lock
leave
bound
lods
mov
cmp
jo
xchg
ins
pop
dec
inc
popa
sub
aaa
scas
sbb
xor
pop
pusha
xchg
retf
and
xor
lods
lea
mov
ret
lods
mov
sbb
pop
shl
sub
test
mov
lds
inc
cmp
lods
dec
pop
push
add
psubsw
test
mov
mov
ror
imul
and
sub
add
bnd
lods
jns
mov
sbb
movs
mov
cmps
ss
push
mov
rcr
jp
test
mov
int3
push
addr16
movs
ret
mov
push
cmp
cli
and
cli
cdq
aad
aam
daa
pop
loop
mov
pop
or
fsub
xor
loop
in
mov
loope
xchg
or
aam
sbb
jecxz
mov
adc
xor
jne
cld
enter
sbb
inc
xor
adc
mov
pop
mov
jmp
les
inc
inc
add
pop
cld
aas
rcl
adc
inc
pusha
cmps
pusha
adc
mov
inc
sbb
les
mov
adc
call
adc
xor
mov
mov
dec
test
xchg
jnp
mov
pop
outs
imul
in
add
pop
lea
jno
sbb
enter
sbb
sbb
dec
popa
cmp
jae
adc
jb
data16
sub
dec
push
pop
xchg
pop
sbb
call
fmul
or
retf
adc
mov
and
sbb
xchg
in
lods
mov
fistp
fild
jne
ja
js
ds
push
sub
sub
inc
xchg
dec
jge
jns
lods
out
jp
xchg
mov
xlat
loope
jl
fstp
stc
inc
sbb
outs
imul
test
pop
lea
mov
icebp
cld
adc
xchg
dec
(bad)
pop
mov
fiadd
xor
add
pop
test
jmp
lea
jnp
mov
nop
leave
sub
push
jnp
cmp
lock
das
jmp
mov
push
push
aas
pop
aas
mov
or
mov
and
out
jecxz
ss
sti
loopne
in
(bad)
(bad)
mov
mov
sub
(bad)
fcom
mov
jne
out
pop
adc
lods
stos
adc
add
dec
and
cmps
xchg
sub
sbb
pop
adc
ja
pusha
xlat
pop
mov
inc
mov
in
xchg
push
and
loopne
xor
mov
bound
sub
rol
sbb
mov
fstp
cmp
mov
cwde
adc
ret
mov
cwde
adc
sub
xchg
add
cmps
outs
fmul
or
ins
fucomi
movs
movs
iret
inc
push
cmc
sbb
xchg
dec
add
inc
fsubr
pop
add
outs
mov
ror
mov
mov
stos
push
jns
jno
loope
imul
fild
movs
iret
cli
xor
pop
loopne
push
bound
fisub
pop
mov
xor
jmp
add
stos
jmp
ja
add
je
adc
xlat
jbe
loop
cmps
lods
sbb
add
jb
loopne
fild
mov
out
mov
or
les
gs
(bad)
sub
add
xor
test
or
cmp
into
cmps
mov
loop
jg
shl
pop
imul
fstp
cld
push
nop
and
fadd
sub
or
mov
mov
cpuid
push
sbb
aam
cwde
inc
fwait
jg
sbb
jecxz
pop
mov
popf
retf
inc
lods
xchg
jl
dec
and
jno
cmc
loop
cmp
inc
sbb
xlat
ins
mov
mov
jl
cmp
scas
xchg
sti
pushf
lock
ficomp
sbb
nop
adc
cmp
imul
fwait
arpl
and
xchg
xchg
in
mov
adc
and
lds
or
test
outs
cs
nop
inc
jne
hlt
arpl
out
jno
mov
stos
cmp
sub
retf
sti
test
push
or
inc
push
into
mov
and
shl
addr16
pop
aas
cmp
xchg
mov
inc
sbb
nop
aas
scas
and
stos
pop
cli
es
cmp
pop
jb
xchg
push
push
stos
icebp
movs
js
xchg
mov
cmp
xchg
pop
icebp
ins
sub
jb
mov
loop
out
stc
cmp
scas
stc
push
xchg
pusha
sbb
ds
outs
fs
and
sbb
inc
rcr
stos
imul
sbb
ret
mov
test
in
sub
pop
in
jae
cmp
sub
mov
cmc
xchg
std
push
sar
add
call
or
(bad)
sub
icebp
jmp
cmp
test
dec
dec
(bad)
cmp
push
xchg
adc
aaa
dec
push
nop
dec
mov
out
shl
and
jl
or
sub
jmp
data16
popa
or
adc
cmp
fwait
xchg
add
dec
sub
xchg
test
inc
or
push
fimul
test
cmp
outs
inc
lods
je
pop
cmp
mov
and
movs
xor
es
lock
push
in
mov
or
mov
xchg
jnp
test
dec
sti
pop
nop
leave
icebp
xchg
out
pop
sub
sbb
dec
push
pop
cmp
pop
fld
stos
mov
out
mov
rcl
xchg
cmp
push
sub
cmp
push
mov
call
push
mov
ret
ins
loop
ins
ins
stos
mov
nop
nop
shl
icebp
test
jne
fwait
inc
loopne
dec
in
or
out
gs
stos
inc
ins
mov
es
xor
push
jno
into
mov
push
jmp
dec
pop
leave
add
xor
sbb
xchg
fyl2xp1
push
shr
push
mov
inc
ja
or
inc
imul
jp
sub
js
push
inc
inc
adc
gs
loopne
ja
loop
or
cmp
mov
inc
mov
icebp
lea
ror
xchg
ja
loopne
and
jg
test
sar
(bad)
fnstcw
int
mov
inc
add
(bad)
xchg
xor
aad
xor
sti
ficom
loope
jo
jg
gs
lock
add
jg
adc
adc
ror
gs
jg
jecxz
jae
push
sbb
mov
pushf
cmp
sbb
stos
ficomp
pusha
push
cs
push
jge
inc
scas
jl
or
jmp
ret
inc
mov
add
movs
fnstcw
in
xor
fs
fistp
stos
addr16
outs
dec
dec
pop
addr16
in
mov
scas
xor
out
xor
jae
(bad)
fld
ficom
mov
jne
in
sbb
into
aam
mov
xor
push
dec
xor
(bad)
imul
add
sbb
jb
ins
mov
cmp
cmps
pop
ins
jbe
das
ror
ret
or
jb
pop
fmul
pop
sti
mov
push
sbb
mov
mov
cmp
pop
xor
call
mov
sub
pop
fisttp
mov
xchg
push
sub
inc
add
in
out
movs
dec
imul
cmp
test
imul
or
mul
in
xor
fidiv
lahf
dec
sahf
scas
sbb
mov
sti
sub
lds
cld
bound
xchg
cmp
cmp
sub
fiadd
movs
sti
int
mov
fdiv
fcmove
lods
inc
xor
jnp
dec
sub
xor
cmps
mov
jmp
test
jo
icebp
cld
add
push
mov
xlat
push
scas
cmp
sub
sub
pop
ds
inc
jb
mov
mov
jnp
push
movs
jne
in
adc
ret
pushf
sbb
jns
div
sbb
les
xor
repz
mov
aad
adc
test
loop
inc
mov
pop
popf
and
inc
dec
adc
repz
rcl
pop
xchg
mul
ret
jge
add
pop
dec
sti
and
push
mov
test
addr16
and
pop
pop
xchg
cmps
xchg
mov
into
movs
cwde
inc
push
sar
and
inc
ret
scas
(bad)
lods
iret
sahf
js
(bad)
add
pop
dec
scas
nop
add
cmp
(bad)
mov
xchg
or
mov
in
adc
in
cdq
mov
lahf
dec
enter
xor
xor
xor
test
hlt
jb
in
add
lea
popf
inc
or
mov
xor
sub
call
leave
dec
lods
aaa
xchg
ins
iret
mov
sub
sahf
mov
inc
xor
mov
pop
jno
inc
inc
int3
push
add
jmp
sbb
mov
xor
jb
jge
add
bound
xchg
mov
dec
test
xlat
sub
mov
xchg
or
rcl
fs
jnp
mov
xor
add
popf
test
dec
ins
mov
in
lahf
loop
jp
fidivr
mov
lds
cmp
xchg
adc
adc
bound
push
push
fisub
or
mov
adc
adc
imul
adc
dec
mov
clc
retf
mov
ins
mov
in
sub
pop
xchg
(bad)
mov
jae
sub
aas
loopne
push
add
jno
push
pop
sub
clc
jmp
in
mov
xchg
repz
sbb
in
dec
fadd
mov
test
loope
push
and
mov
sbb
mov
sbb
daa
mov
stos
mov
mov
inc
inc
dec
retf
mov
adc
rcl
lahf
add
jle
lea
or
sbb
shr
arpl
sub
mov
stos
adc
add
and
sub
sub
or
loopne
inc
inc
in
jnp
movs
ret
pop
lds
pop
stos
mov
clc
push
mov
jno
sbb
(bad)
call
xlat
xor
(bad)
pop
mov
fist
nop
ss
fst
(bad)
jmp
mov
sar
fidiv
cmp
inc
mov
inc
mov
mov
xchg
cmp
repnz
xor
ret
popf
popa
fild
add
not
lahf
sub
sti
inc
mov
sbb
xchg
pop
lods
sbb
lea
je
add
push
dec
dec
jecxz
cmp
je
add
fmul
push
sbb
ja
pop
push
enter
(bad)
in
(bad)
sti
or
call
scas
lock
jnp
add
shl
jmp
mov
xor
lea
xchg
dec
jnp
sar
inc
mov
scas
inc
pop
mov
xchg
fdivr
cmp
std
aaa
fisttp
add
das
sbb
js
dec
(bad)
movs
fbstp
in
and
mov
sbb
in
stc
dec
cli
xchg
jne
xchg
sbb
cmp
push
adc
movs
icebp
xchg
imul
fisttp
sbb
ficomp
popf
das
jle
jmp
dec
lds
jne
(bad)
xchg
nop
inc
mov
cli
add
dec
sahf
das
outs
popf
push
pop
cmp
rcl
push
lea
js
mov
cdq
popf
movs
pushf
mov
lods
fsub
mov
je
push
pop
ss
addr16
fsubr
je
sub
(bad)
cmp
lods
push
push
cs
cmp
jne
es
xchg
mov
pop
rol
pop
mov
adc
into
aad
or
scas
(bad)
adc
cmp
aas
iret
lds
xchg
loopne
push
call
inc
jno
(bad)
in
cmp
inc
push
mov
(bad)
push
jmp
stos
call
mov
push
aam
stc
dec
f2xm1
sub
movs
jmp
xchg
arpl
mov
sar
or
ror
rcr
dec
(bad)
xchg
outs
(bad)
ja
addr16
outs
stos
in
mov
aad
les
rcr
jmp
sbb
cmp
jle
mov
push
cmp
outs
cs
sbb
xchg
mov
in
pop
mov
iret
mov
sahf
cmp
(bad)
cld
pop
sbb
loopne
mov
jg
(bad)
lea
test
mov
mov
xor
aam
xchg
ss
cmc
sbb
cmp
dec
sahf
pop
mov
and
pop
jb
aaa
cmps
call
dec
add
mov
mov
and
aaa
repz
enter
mov
and
stos
call
push
inc
xlat
mov
(bad)
sub
cmps
fdivr
mov
loop
clc
imul
daa
pop
pop
mov
out
xchg
stos
push
test
adc
push
pushf
movs
sti
xchg
adc
popf
lahf
add
jae
xchg
lahf
push
test
daa
bound
lods
loopne
sbb
and
cli
imul
add
or
and
xchg
ret
push
lds
(bad)
(bad)
(bad)
cmp
clc
push
or
jge
into
js
js
xor
add
lock
(bad)
call
adc
fldenv
popf
fiadd
mov
icebp
mov
test
dec
dec
push
push
pop
int
inc
jg
sbb
pop
lahf
sbb
jne
inc
xchg
js
push
push
pop
xor
ins
stos
mov
scas
rcr
mov
cld
daa
in
clc
push
out
icebp
inc
and
inc
mov
stos
retf
mov
pop
dec
cmp
cdq
or
xchg
jno
sti
pop
push
xchg
(bad)
jg
push
mov
jmp
lock
or
inc
js
pusha
(bad)
and
cmps
cmp
jo
loope
int
inc
imul
outs
repnz
mov
xor
pop
fwait
aam
jbe
pop
adc
fs
fwait
repz
neg
xlat
aam
imul
mov
movs
xor
mov
shl
mov
jle
enter
gs
arpl
gs
daa
dec
(bad)
dec
mov
jg
xor
les
cmp
cmp
cmps
xchg
jns
pop
call
daa
lods
dec
out
test
mov
jmp
outs
loopne
mov
mov
inc
inc
adc
scas
or
cmp
mov
xor
adc
xor
and
int3
or
xor
rol
icebp
scas
inc
retf
sub
and
push
or
lahf
jmp
xchg
mul
sti
fyl2xp1
push
or
push
retf
shl
inc
inc
push
and
out
push
inc
fstp
adc
sub
lods
(bad)
ins
dec
pushf
inc
int
mov
add
adc
scas
mov
lahf
jmp
push
cmp
aad
imul
mov
loop
inc
das
das
xor
lods
adc
hlt
std
sub
xor
ss
xor
add
jae
inc
xor
mov
mov
mov
pop
aas
clc
sahf
jo
jg
mov
push
inc
or
dec
(bad)
dec
inc
sar
push
mov
push
out
mov
popf
sahf
pop
lahf
adc
add
xchg
repnz
mov
adc
pop
idiv
mov
loope
mov
mov
repnz
and
jg
fsubrp
stc
call
lahf
jl
int3
adc
cli
mov
inc
add
stos
pop
pushf
mov
inc
xchg
push
add
std
out
dec
jb
xchg
xchg
or
and
xchg
in
rol
repz
ret
sbb
iret
pushf
cli
pop
jmp
out
pop
ja
rcl
es
jmp
sbb
cmp
pop
and
and
jne
xor
fcmovu
jl
in
adc
in
ret
mov
es
add
xchg
ins
sub
leave
cmp
push
inc
sbb
xchg
mov
scas
les
mov
xor
xor
and
nop
shr
push
nop
mov
cmp
jne
cmc
lods
aam
xchg
je
push
cmp
stos
add
jl
sahf
outs
inc
test
xchg
jae
mov
mov
add
popf
xor
enter
enter
or
pop
pop
test
cmp
imul
add
mov
sub
pusha
jb
mov
push
sub
into
add
add
and
adc
mov
sbb
cmp
jge
add
mov
inc
int
dec
fild
xlat
mov
dec
jmp
or
and
mov
in
mov
je
in
pop
retf
sub
fisttp
cmp
fdivr
aaa
es
loopne
sub
add
aad
and
sub
aam
jmp
or
mov
inc
out
cli
dec
loopne
mov
ins
frstor
add
into
test
(bad)
or
xor
jo
(bad)
and
leave
cmc
xchg
ret
data16
add
jle
mov
xchg
mov
test
vpperm
add
cli
int3
stos
iret
fs
push
movs
stc
inc
(bad)
cwde
stc
or
sbb
pop
clc
lods
ins
shl
test
iret
in
jne
mov
fild
and
jmp
ja
inc
sub
test
aaa
sbb
in
gs
lods
stos
sbb
rcr
cmc
mov
cmp
jnp
std
inc
inc
and
in
shl
retf
mov
sbb
outs
jmp
inc
xor
fwait
mov
add
mov
(bad)
fbstp
or
in
popf
js
rol
test
cmp
fs
ret
dec
jl
outs
xchg
(bad)
mov
cs
es
lods
adc
adc
or
sbb
push
sbb
stos
mov
sub
mov
inc
push
test
xor
leave
sbb
das
mov
add
jmp
inc
cmp
push
xlat
out
test
pop
loope
scas
int3
xchg
inc
les
fs
(bad)
int3
sub
push
adc
cld
out
dec
push
jne
mov
and
out
repz
sahf
push
xor
imul
(bad)
cmc
fsub
add
iret
shr
fst
xor
pop
inc
or
mov
inc
(bad)
rcr
dec
mov
mov
loopne
popa
lds
sbb
and
or
cmp
push
and
and
lahf
or
sbb
inc
and
lea
pop
(bad)
mov
jnp
push
mov
aaa
shr
and
xchg
sbb
out
add
adc
popf
or
mov
cmp
repz
das
or
repz
mov
int
jnp
jbe
js
xor
inc
sbb
pop
or
xor
outs
add
cld
cmps
out
sbb
(bad)
sbb
dec
dec
in
add
addr16
hlt
scas
xor
or
jo
lds
pushf
push
mov
push
loopne
fdivr
scas
push
int3
mov
push
in
adc
stos
inc
sub
test
das
in
jo
retf
xor
inc
nop
int
inc
and
aaa
xor
xchg
aaa
aas
mov
add
stc
jg
ins
ds
sub
push
stos
dec
push
and
pusha
lahf
test
fs
stos
test
mov
inc
jmp
add
xor
mov
mov
lock
jae
xchg
sbb
add
ins
push
add
jecxz
aad
aad
leave
ins
lds
mov
xor
lods
or
retf
push
dec
pop
inc
aad
mov
(bad)
sub
push
adc
out
inc
xchg
scas
sbb
adc
and
fnstsw
adc
cld
cmps
test
xchg
les
xchg
xor
scas
jg
in
(bad)
mul
shl
lods
js
adc
push
push
repnz
aam
xchg
sbb
cmps
xchg
jmp
mov
dec
inc
mov
adc
test
jbe
aam
clc
(bad)
ja
cmps
les
dec
sub
das
arpl
mov
hlt
js
in
(bad)
jecxz
div
pop
mov
mov
pop
mov
mov
mov
sar
jle
jle
dec
or
xor
mov
jg
(bad)
mov
test
and
xor
pop
icebp
jae
arpl
sahf
xchg
cmp
mov
or
jbe
jl
daa
xor
dec
daa
call
comiss
add
jmp
jmp
arpl
dec
test
pop
add
cmp
and
sti
jnp
cmp
test
mov
jle
das
dec
xor
push
nop
sub
xor
or
mov
push
leave
dec
das
xor
mov
sbb
xchg
test
mov
das
xor
jmp
sub
mov
stc
fs
movs
xor
xchg
jns
jnp
jg
jnp
js
sub
cwde
mov
in
push
stos
inc
push
mov
shl
or
gs
jns
arpl
push
xchg
pop
mov
mov
rol
or
jg
lds
ret
dec
shl
sar
fwait
mov
ror
mov
imul
mov
ror
push
cmp
sahf
jmp
mov
mov
test
mov
dec
je
ins
push
xor
dec
jl
sub
jno
mov
push
jl
int
or
sbb
mov
out
xor
js
mov
cs
retf
jbe
xlat
dec
and
test
and
pop
or
cmps
or
sbb
call
shr
imul
sbb
pushf
das
stos
mov
adc
jnp
xor
cmp
in
inc
push
sub
leave
mov
fistp
push
sbb
and
stc
or
cmp
adc
mul
xchg
pop
call
and
push
rol
rol
and
popf
push
in
into
int
xor
rcr
dec
and
(bad)
cld
and
imul
pop
pushf
push
mov
(bad)
fmulp
into
sbb
scas
add
xchg
dec
jp
icebp
ja
xor
nop
clc
mov
xchg
or
pop
aad
sbb
xor
enter
sbb
sahf
pop
(bad)
cmp
push
add
jmp
mov
sahf
add
push
dec
sub
push
or
leave
shr
std
xchg
mov
bound
sub
out
pop
aas
inc
sbb
adc
jne
xchg
sbb
jmp
pop
pop
out
push
ret
fsub
jmp
adc
das
lock
ss
into
lds
dec
dec
dec
sub
lods
cmc
call
jmp
call
ins
inc
mov
ret
test
out
push
xchg
ja
je
push
xchg
addr16
cld
dec
sub
sbb
mov
(bad)
jno
stc
test
jns
lods
pushf
sub
inc
or
mov
repz
adc
and
imul
cld
sub
test
push
aaa
fldcw
xlat
inc
popa
sbb
sub
repnz
push
ja
jl
mov
(bad)
clc
pusha
mov
sti
and
inc
nop
hlt
xor
daa
nop
loope
lea
jmp
shl
repz
xchg
xor
shr
movs
sbb
mov
sbb
mov
and
clc
push
push
or
call
push
xor
in
cmc
inc
ja
lods
sub
lods
js
dec
push
pop
dec
adc
(bad)
(bad)
retf
adc
mov
pop
inc
fwait
in
mov
ror
adc
addr16
pop
les
test
mov
test
cmps
out
sub
(bad)
push
sar
je
sbb
(bad)
mov
dec
inc
fidivr
imul
cmp
jmp
rcr
and
push
dec
fild
pop
pop
adc
adc
nop
out
out
cmp
push
pop
adc
repz
cdq
nop
repz
cmp
fdivp
push
mov
cmp
addr16
mov
ins
ja
or
cmp
mov
inc
dec
mov
clc
push
imul
xor
sahf
fnstenv
ret
mov
mov
les
repz
mov
daa
push
into
movs
dec
jmp
jmp
ins
fst
jae
popf
adc
ret
rcl
dec
outs
(bad)
loope
and
mov
adc
call
pop
push
mov
xchg
and
mov
xor
in
int3
or
aaa
push
cmp
jb
dec
ss
xor
sub
leave
dec
push
rol
sbb
jo
jnp
sub
jl
xchg
stos
sub
push
repnz
push
jb
fwait
stc
or
mov
call
dec
lds
mov
xor
mov
rcr
jnp
xchg
mov
lahf
xor
add
jg
icebp
test
push
pop
jo
lahf
ret
cmp
and
or
jle
hlt
mov
adc
mov
jns
cmp
ja
mov
sbb
mov
or
je
daa
sub
je
sbb
dec
fistp
das
sti
xor
and
aad
sub
fdivr
dec
aam
xchg
and
or
enter
or
jae
or
lock
daa
mov
add
push
mov
ins
icebp
fdiv
adc
mov
out
inc
dec
out
dec
and
dec
or
mov
inc
mov
xor
xchg
(bad)
hlt
stos
inc
fistp
and
jge
stc
scas
stos
ret
in
dec
or
test
movups
test
mov
mov
mov
popf
aad
jp
jge
sub
test
or
cmp
pusha
sbb
jae
(bad)
push
test
jp
rcr
jmp
inc
mov
hlt
cmps
pop
out
repnz
test
pop
outs
jmp
or
mov
xor
gs
push
adc
or
test
cmp
int3
or
shl
mov
lds
xchg
jg
test
addr16
stos
mov
sbb
(bad)
pop
mov
daa
das
ss
or
mov
push
xor
push
push
je
mov
cmp
dec
cdq
loop
jno
push
jg
rol
sahf
pop
lods
int3
pop
aas
pusha
jle
pop
repz
push
call
fdiv
jne
pop
jp
mov
sar
inc
pushf
lods
mov
and
repz
adc
add
shl
push
aam
xchg
jmp
mov
iret
sub
test
xchg
inc
ss
push
retf
sti
sub
cmp
adc
jl
inc
jmp
int
cmp
ror
scas
std
cwde
hlt
jmp
mov
imul
sub
jmp
sub
shl
leave
inc
sbb
xlat
inc
cdq
sub
mov
jg
fsub
pop
fild
in
iret
xor
icebp
sbb
outs
(bad)
fstp
lock
in
xor
add
sub
push
inc
sbb
xchg
sbb
daa
std
mov
mov
jle
adc
mov
or
out
push
mov
out
mov
cli
add
imul
sbb
mov
mov
push
cmps
inc
and
sar
push
popf
test
icebp
adc
je
dec
stos
out
xchg
icebp
mov
and
mov
adc
add
dec
mov
int
sub
shr
adc
cwde
pop
mov
or
xchg
and
fsubr
lahf
scas
fst
jmp
sbb
and
sahf
sbb
clc
fldenv
mov
add
movs
call
pop
scas
aad
aam
sub
mov
lock
pop
pop
and
mov
or
test
out
test
pop
xchg
movs
jb
stc
pop
mov
sbb
xor
(bad)
cmp
pop
out
pop
and
movs
ja
or
rcr
pop
sub
retf
pop
jl
dec
dec
add
addr16
fisubr
sahf
fidiv
in
aaa
xchg
aaa
xlat
or
lds
scas
stos
push
rol
inc
jecxz
test
mov
fisttp
xlat
sub
cld
std
ret
repz
les
ins
cmps
jmp
test
lock
inc
adc
inc
(bad)
pop
aas
inc
dec
cld
mov
push
or
(bad)
jno
sbb
scas
(bad)
inc
retf
sti
out
lahf
xchg
and
(bad)
repnz
mov
loope
outs
add
sahf
jecxz
pusha
into
iret
dec
add
add
or
pop
dec
mov
ror
mov
cmps
push
mov
or
lods
mov
sar
jae
shr
outs
sbb
mov
mov
les
ins
jne
fdiv
jo
fimul
or
mov
fbld
pop
and
mov
push
push
out
std
mov
cdq
movs
inc
(bad)
sbb
inc
or
pop
xor
pop
jmp
pop
in
xor
xchg
dec
xchg
ret
scas
inc
sar
pop
jno
or
sbb
fsub
lahf
jg
pop
es
lods
ins
lahf
or
jp
jnp
and
pushf
out
loop
es
mov
movs
cmp
inc
adc
and
repnz
pop
mov
iret
mov
mov
test
test
push
add
out
aad
je
dec
jbe
cmp
stos
movs
inc
call
sbb
pop
mov
sahf
and
aas
xchg
aad
je
xor
arpl
jne
mov
(bad)
fisubr
loopne
mov
or
out
shl
jecxz
jle
into
lods
cs
pop
dec
cmp
ja
lods
xchg
jl
xor
das
dec
(bad)
imul
jmp
int3
repz
std
dec
jl
xchg
cmps
fisttp
lahf
lahf
aad
imul
add
inc
dec
fcmove
jmp
and
(bad)
cdq
xchg
or
imul
pop
adc
mov
adc
mov
inc
cmps
cdq
jns
xchg
int3
or
or
sbb
inc
fcomp
cmp
cmp
cmp
jo
inc
outs
push
int
add
sahf
lods
stc
mov
cdq
jno
or
cwde
out
and
and
jb
data16
ins
xor
jge
sbb
jnp
pop
leave
popf
ret
fst
pop
sub
(bad)
or
mov
xchg
in
sahf
dec
sbb
retf
mov
fbld
mov
mov
mov
and
push
cmp
mov
nop
mov
and
dec
lds
xor
jae
xor
popa
mov
int3
sub
std
xchg
jp
jp
int3
in
int3
sahf
call
adc
mov
adc
xchg
jo
and
or
pop
imul
not
ins
fs
fstp
retf
dec
call
fdivr
adc
lea
push
push
push
loop
mov
(bad)
cs
cmp
fsubr
sub
xchg
cli
rol
or
pop
sub
mov
nop
inc
fadd
xchg
inc
pop
dec
mov
push
mov
pop
sub
stos
daa
mov
es
scas
jmp
lods
test
scas
mov
stos
xchg
push
sub
cld
inc
add
mov
cmp
movs
arpl
push
inc
cmps
jns
pop
adc
loopne
xchg
ja
shl
pusha
add
pop
lods
pop
jno
xlat
mov
mov
jmp
add
sub
push
xchg
mov
sbb
jbe
jmp
out
inc
fadd
inc
pushf
test
xor
dec
std
and
cmp
int3
hlt
rcl
and
pop
jl
sbb
mov
iret
sbb
and
inc
out
inc
add
pop
out
mov
mov
cwde
(bad)
sub
mov
sbb
sbb
xchg
(bad)
sti
xor
shl
jecxz
xchg
test
pushf
sbb
mov
push
call
addr16
into
cmp
cwde
int
in
mov
dec
mov
div
enter
sub
pop
mov
dec
imul
mov
lds
pop
mov
inc
or
fldcw
rol
pop
sbb
push
test
or
xchg
inc
mov
aaa
dec
out
xlat
retf
xchg
dec
iret
cs
lds
adc
(bad)
sbb
mov
mov
cmc
cmp
shl
and
sub
push
inc
daa
and
xor
and
dec
dec
aas
sbb
adc
cwde
xchg
mov
push
cmp
and
loopne
cmp
sbb
xchg
sbb
neg
mov
xchg
adc
sub
int
fs
mov
cld
mov
cmps
dec
adc
mov
addr16
mov
mov
loopne
jmp
fmul
jne
jne
fst
popa
add
jl
cmc
(bad)
pop
mov
in
xor
cmp
pop
xlat
lds
cmp
repnz
sub
rcl
pop
push
jno
cmps
dec
cmc
loopne
loopne
dec
scas
inc
stc
jnp
inc
push
dec
fdivr
stos
mov
or
icebp
lods
out
jle
ja
pop
iret
cmp
mov
mov
push
cmp
lahf
inc
add
add
jae
call
cmp
cmc
ja
fwait
cmps
xchg
into
sahf
jmp
ds
dec
dec
mov
adc
sub
call
into
inc
dec
jge
out
or
push
cli
cwde
jnp
or
xchg
gs
leave
lahf
imul
out
fadd
test
inc
adc
push
jle
popf
ins
jl
in
in
out
call
ss
int3
pop
cmp
jbe
push
jp
mov
rol
xor
mov
rol
mov
pop
xchg
adc
mov
cwde
dec
les
xchg
cmp
cmp
mov
les
fcomi
jmp
push
pop
sub
cmp
dec
sbb
sub
jle
neg
sub
push
loopne
and
jg
mov
clc
je
arpl
enter
int3
lods
(bad)
fisub
push
pop
add
loopne
or
mov
inc
sahf
fist
xchg
shr
cdq
lock
rcl
push
icebp
cmp
fucom
cmps
lds
in
mov
(bad)
gs
arpl
mov
push
push
and
adc
mov
es
and
test
out
jnp
pop
push
mov
cs
mov
shr
adc
inc
cmc
retf
std
inc
add
dec
aas
out
nop
inc
lods
inc
and
xchg
test
sbb
xchg
aad
push
(bad)
je
cmc
nop
jo
push
pop
ret
(bad)
fisttp
and
mov
leave
not
push
jmp
std
test
inc
clc
gs
dec
push
fiadd
jmp
push
dec
push
or
int3
jge
mov
pop
cmp
shl
mov
iret
pop
add
and
(bad)
mov
jne
or
adc
lods
xchg
pop
pusha
cmp
dec
cmc
popa
pusha
dec
popa
je
addr16
xor
movs
jnp
cmc
or
mov
mov
pop
push
clc
loope
dec
fs
ss
xor
enter
xor
cs
stos
mov
lods
fisttp
jo
std
cmp
mov
jns
inc
push
mov
ror
jmp
adc
adc
or
inc
pop
inc
popf
loopne
and
icebp
jne
ficomp
(bad)
mov
push
or
cs
adc
(bad)
rcr
adc
lods
out
addr16
jbe
xor
inc
imul
or
jmp
das
sub
mov
and
mov
jb
or
jbe
inc
fld
inc
pop
xchg
lock
jno
cmp
enter
jmp
jmp
out
cmc
scas
inc
cs
pop
movs
push
pop
scas
sub
loopne
fwait
scas
popa
icebp
pop
popa
cmp
int
ins
jmp
int3
gs
xor
sub
add
mov
mov
out
fisttp
push
sahf
cwde
push
add
xor
mov
(bad)
fisubr
cmp
inc
ja
call
repz
and
cmp
cwde
inc
inc
cmp
and
sub
xchg
cmc
cmc
in
aad
xchg
movhps
dec
push
mov
inc
lods
dec
adc
ret
or
cmp
ins
cmp
mov
(bad)
rol
push
fld
add
adc
jecxz
repz
push
cmp
rcr
pop
out
(bad)
mov
jmp
and
add
and
(bad)
xor
jae
in
test
das
je
rcr
mov
aas
push
scas
cmp
sub
in
test
sbb
out
lods
and
loop
test
xor
loopne
jo
jmp
push
push
fsub
mov
jae
pushf
pop
jmp
push
and
test
mov
das
test
xor
mov
retf
pop
xor
div
cmp
pop
cmp
ins
or
iret
mov
inc
inc
push
leave
mov
cli
(bad)
lods
sub
(bad)
cmps
aad
xor
pop
mov
(bad)
dec
mov
stos
cmp
outs
leave
add
sar
mov
adc
xor
sahf
mov
es
cmp
fidiv
ins
pop
imul
stc
int3
inc
xor
into
retf
int3
mov
imul
bound
cdq
frstor
or
(bad)
sbb
aaa
or
push
pop
inc
sbb
jmp
stos
cmp
push
pop
arpl
int3
or
add
or
sbb
adc
mov
(bad)
adc
push
adc
es
mov
mov
aad
add
fwait
ds
arpl
test
xor
jecxz
adc
pop
rcr
mov
in
arpl
and
sbb
neg
lock
in
push
push
sbb
pop
xchg
cmp
fdivp
push
daa
mov
aas
cld
mov
or
inc
das
clc
mov
xchg
imul
aas
mov
xchg
jbe
cdq
mov
inc
push
fsub
push
(bad)
(bad)
push
or
mov
cmps
and
sti
inc
sub
outs
sub
mov
js
out
ins
jb
cmp
mov
pop
popa
ds
or
cmp
dec
mov
adc
icebp
add
int3
push
outs
mov
lahf
sub
jns
sbb
les
dec
mov
mov
mov
ins
adc
je
pop
repz
jge
(bad)
jge
dec
inc
cmps
mov
stc
jecxz
push
int
das
ins
jo
ja
cs
adc
xor
(bad)
xchg
push
add
loope
sbb
std
fst
sbb
sub
xchg
scas
sub
in
fs
mov
fidiv
ret
sub
adc
imul
jp
into
minps
es
(bad)
jl
sbb
add
enter
pop
mul
mov
sbb
push
scas
jmp
scas
cld
pop
push
mov
lea
push
push
cmp
cld
sti
xor
inc
mov
aas
inc
cmp
loopne
xor
inc
test
and
mov
(bad)
(bad)
popa
ja
arpl
xor
iret
es
or
cmp
movs
addr16
int
fsubr
pop
leave
pushf
loope
test
js
sub
rcr
sbb
outs
cmc
sub
cmp
lea
sti
fisttp
jmp
xchg
inc
lods
add
aam
mov
(bad)
cdq
cmps
push
outs
sub
mov
ins
dec
sub
hlt
test
fisubr
outs
pop
pop
pushf
shr
ins
adc
sub
mov
mov
pop
into
das
stos
inc
and
mov
xchg
hlt
(bad)
dec
leave
imul
loopne
leave
paddusb
pop
push
test
rcr
pop
jmp
fild
xor
mov
xor
cmp
movs
repnz
dec
inc
and
sub
or
shl
mov
add
push
cmp
repnz
push
cmp
fwait
push
pop
or
push
xchg
(bad)
stos
pop
dec
cli
xchg
jnp
aas
call
out
sub
mov
dec
pop
jle
xchg
xlat
pop
pop
outs
in
add
stos
nop
bound
mov
into
into
aaa
stc
inc
lods
mov
mov
cmps
idiv
mov
or
retf
call
jo
out
xor
and
in
push
add
push
popf
jecxz
jl
scas
or
jecxz
mov
pop
sbb
pop
cmp
cdq
xrelease
or
mov
enter
mov
stos
dec
cwde
sub
(bad)
in
jp
push
sub
cmc
cmp
cs
add
bound
fld
stc
test
xor
(bad)
sub
push
mov
popf
adc
xor
int
mov
or
into
(bad)
jmp
neg
sub
sub
fidiv
dec
aad
fdiv
xchg
jmp
and
sub
hlt
retf
outs
push
ds
lods
sti
and
gs
mov
cmc
pop
cmp
in
lock
inc
leave
and
mov
aad
movs
jne
ja
or
aam
fnstenv
imul
pop
mov
mov
jg
adc
pushf
popa
dec
ins
jne
mov
cmp
and
mov
cli
enter
adc
jg
sub
jno
mov
cmps
sub
mov
js
cwde
out
adc
push
(bad)
push
dec
xor
pop
sub
adc
repz
pop
popa
pop
cdq
rcr
repz
pop
daa
jns
jmp
cmp
ins
test
push
jno
inc
fstp
lea
push
jb
inc
adc
mov
jb
pop
iret
aad
jns
xchg
and
push
xor
push
imul
xlat
dec
std
push
je
test
cmps
in
cmps
inc
adc
and
push
int3
mov
cwde
in
push
jae
xchg
repnz
push
mov
sub
jp
(bad)
loope
jg
push
sbb
add
inc
(bad)
repnz
movs
neg
add
aas
jl
mov
lds
fwait
rcr
lods
xchg
mov
imul
pop
adc
test
jp
mov
push
cmp
mov
adc
jl
sbb
adc
sti
xchg
push
mov
lds
push
jno
jno
bound
push
adc
xor
pop
aas
jb
retf
scas
div
xchg
jno
std
mov
cdq
jmp
or
push
mov
imul
js
and
adc
nop
fcmovb
in
jno
add
in
jmp
data16
ins
mov
repz
pop
addr16
add
rcl
pop
cmp
fs
jmp
out
mov
xchg
ds
fidivr
aad
mov
das
push
imul
adc
mov
(bad)
lods
fadd
pop
iret
rcr
cmp
mov
push
add
icebp
popa
retf
or
and
movs
fldcw
adc
in
mov
imul
dec
push
js
mov
std
jne
sub
dec
or
jnp
mov
and
mov
js
cmp
push
rol
retf
test
iret
jecxz
push
push
sar
stos
inc
pop
fmul
and
jnp
loope
es
nop
add
out
sbb
cmc
loope
push
add
out
lahf
and
sub
ss
loope
and
mov
adc
cmp
das
mov
sbb
cmc
test
mov
adc
adc
mov
lods
pop
push
cli
mov
cmp
in
in
mov
jl
cmp
mov
jne
in
inc
aam
push
mov
ins
scas
dec
pop
imul
fistp
jo
shl
inc
pop
push
mov
es
adc
and
call
jl
or
xor
or
cmps
jmp
push
es
sbb
and
mov
add
cmp
test
cmp
lock
lock
pop
cld
jmp
jecxz
outs
mov
loopne
mov
mov
scas
js
call
mov
out
sbb
sbb
xor
ret
dec
jo
pop
jno
dec
fild
cmps
fucomi
idiv
fmul
xchg
and
dec
mov
mov
test
sub
sbb
xchg
(bad)
inc
dec
lods
dec
and
stos
fwait
in
push
xchg
pop
mov
mov
add
jmp
pop
cmp
lock
xchg
fild
xchg
enter
neg
leave
mov
aas
call
mov
outs
inc
inc
mov
es
rol
add
fst
push
cdq
hlt
mov
imul
xchg
std
and
xor
or
xor
loopne
dec
(bad)
aad
inc
push
and
add
jne
or
pop
mov
aas
nop
inc
xchg
rol
hlt
push
(bad)
xlat
test
add
jle
xchg
add
arpl
sbb
jmp
mov
and
xchg
fmulp
test
xchg
cmp
aaa
lock
xchg
test
or
xor
mov
jle
xor
movs
jl
and
daa
ror
adc
js
mov
nop
cmp
das
adc
cmp
lods
xor
movs
sub
(bad)
js
jno
sti
mov
pop
fdivr
mov
scas
call
ret
dec
es
test
repnz
add
(bad)
inc
mov
in
pop
or
add
fld
jnp
inc
dec
out
pusha
sbb
(bad)
mov
ret
mov
dec
enter
dec
aas
in
pop
mov
retf
inc
psubb
or
xchg
nop
iret
inc
sti
daa
outs
fst
out
dec
hlt
jbe
pop
sbb
fwait
(bad)
cmp
in
sar
cdq
add
mov
xchg
sar
sbb
out
arpl
daa
jecxz
cmp
jge
inc
cdq
iret
and
xor
es
jno
shl
mov
shr
stos
cmp
push
out
mov
(bad)
out
mov
sbb
(bad)
dec
sub
(bad)
cwde
mov
and
arpl
fwait
cmp
cmp
push
(bad)
jmp
inc
jne
cmc
dec
xchg
int
push
popa
jp
movs
test
aam
stc
retf
or
in
adc
sub
jle
sub
jge
jecxz
lods
adc
sbb
mov
icebp
mov
test
xor
rcr
int
pushf
(bad)
mov
into
imul
pop
test
imul
xchg
rcl
mov
in
shr
mov
enter
ins
jno
(bad)
ds
cld
push
sub
stos
xor
cmp
dec
jp
(bad)
scas
sbb
aas
fistp
inc
arpl
ds
inc
mov
sub
(bad)
cwde
shl
inc
pusha
lea
push
test
ss
cwde
int3
gs
mov
clc
jg
imul
adc
cmp
or
rol
retf
sbb
bound
movs
ret
sbb
xor
(bad)
fistp
jno
mov
movs
shl
push
jl
call
or
cld
in
push
or
sub
fabs
nop
pop
shl
push
xlat
mov
push
out
and
xor
scas
jg
add
test
push
mul
(bad)
dec
movs
mov
shl
lahf
cmp
daa
pusha
sbb
or
loope
dec
mov
call
ins
add
cs
div
xor
ror
add
loope
xchg
call
mov
mov
and
lds
sub
mov
movs
fwait
mov
sbb
push
cmp
out
mov
cmp
and
fstp
or
mov
inc
sahf
mov
mov
mov
adc
add
nop
ja
jle
outs
push
mov
pop
and
enter
jg
cli
jecxz
or
imul
pop
push
mov
inc
movs
xchg
(bad)
mov
dec
ins
in
clc
gs
and
stos
sbb
xchg
jno
jecxz
lds
push
(bad)
sahf
popf
mov
xchg
fsubr
ror
jl
jno
pop
das
(bad)
push
sahf
fadd
and
icebp
and
leave
adc
pop
xchg
push
jo
imul
scas
or
lahf
addr16
mov
fcomp
sub
xlat
dec
arpl
lods
mov
xor
bound
push
ins
xlat
or
aam
aaa
mov
cwde
mov
add
ins
adc
xor
jge
inc
push
scas
shr
push
call
cmp
(bad)
push
dec
add
call
rol
clc
ror
(bad)
sar
pop
adc
loopne
mov
push
mov
inc
push
xor
xchg
rcr
bound
mov
repnz
adc
or
cmp
mov
lods
push
cmp
or
fld
push
gs
inc
enter
shl
icebp
shl
sub
mov
lods
adc
pop
imul
cmc
jmp
xchg
icebp
mov
ins
push
jnp
neg
shr
mov
jmp
sbb
push
dec
pop
les
mov
dec
std
mov
leave
cmp
adc
daa
in
push
icebp
sub
into
mov
std
pop
and
xchg
xor
sub
popf
add
hlt
test
sub
mov
pop
mov
cmps
adc
add
inc
jle
inc
mov
adc
ds
enter
inc
test
push
cld
xchg
in
xchg
pop
sbb
scas
hlt
jbe
popa
adc
retf
loope
and
jmp
sub
dec
xchg
jo
cmp
jg
add
push
fwait
pop
sbb
gs
add
(bad)
mov
popa
bound
xlat
movs
mov
les
inc
dec
(bad)
adc
dec
lahf
inc
movs
mov
iret
retf
pop
jno
call
movs
retf
sub
lods
mov
arpl
ror
push
jmp
icebp
sbb
mov
fild
or
adc
jae
dec
xchg
(bad)
in
jmp
out
cli
jbe
adc
cmp
ins
daa
pop
xchg
cmp
ins
test
stos
sbb
pop
sahf
sbb
scas
adc
sahf
test
cmps
shl
addr16
fwait
cmps
pop
mov
or
mov
or
ret
jecxz
cmps
jg
test
rcl
cmc
xor
arpl
push
iret
mov
mov
jae
sub
and
fwait
aaa
adc
or
imul
rol
cmp
lods
xlat
aas
pushf
leave
jle
adc
add
jae
push
xlat
xchg
jl
adc
cmp
cmps
or
loopne
and
cwde
push
lahf
jp
out
cmps
test
mov
rcr
adc
xchg
icebp
mov
lods
inc
mov
movs
inc
ret
scas
shl
imul
js
mov
lock
in
adc
sub
cmps
fbstp
fs
pop
push
aaa
pop
sub
(bad)
and
or
fs
retf
out
mov
inc
into
data16
ret
cmc
lods
aas
pop
aaa
xchg
xchg
in
and
mov
std
stos
div
test
les
imul
mov
stos
push
push
push
jmp
pop
jns
pop
cld
pushf
sbb
xchg
mov
lods
dec
and
mov
push
push
(bad)
pusha
in
cwde
ret
inc
scas
xor
gs
jb
jnp
ja
sub
dec
and
cmp
nop
movs
ins
cmp
sahf
in
scas
ds
je
popa
xchg
sub
es
pop
xor
and
clc
ins
cmp
sbb
fstp
inc
pop
(bad)
xlat
dec
outs
iret
xor
imul
mov
outs
retf
mov
fbstp
jle
mov
and
push
mov
loop
dec
push
xor
adc
iret
addr16
pop
add
mov
mov
and
in
gs
cwde
clc
call
jg
or
pop
push
jno
mov
out
call
sbb
mov
jne
xchg
mov
push
dec
mov
xchg
jmp
push
xor
lock
xchg
mov
out
retf
out
xchg
mov
lock
jns
clc
test
call
sub
outs
dec
inc
lea
fdivr
aad
ss
push
fsub
inc
in
pop
cmc
je
(bad)
scas
mov
cmps
and
inc
push
push
push
push
aas
(bad)
pop
pop
fs
nop
xchg
mov
jl
mov
jno
(bad)
jp
sbb
int
movs
add
ja
and
push
call
aaa
sahf
ins
xor
(bad)
push
jbe
rcl
add
ror
cmp
push
ret
out
enter
inc
iret
(bad)
mov
jmp
push
retf
scas
xchg
retf
cli
push
icebp
loope
push
cmp
dec
ins
mov
dec
mov
das
pop
or
adc
inc
inc
sbb
int3
and
outs
mov
jb
cmp
sub
adc
shl
(bad)
ss
gs
cmp
or
outs
mov
push
(bad)
sbb
loope
mov
out
pop
icebp
and
mov
push
inc
or
jle
cmp
popf
imul
xchg
fidiv
pop
pop
inc
ficom
popa
pop
enter
mov
in
xchg
int3
fadd
fdivp
cmps
int3
pop
scas
xor
in
pop
pop
push
into
ja
lahf
mov
jecxz
mov
xchg
mov
jbe
inc
jns
dec
mov
add
jl
aaa
adc
mov
mov
xchg
and
rol
les
mov
mov
enter
imul
xchg
leave
shr
mov
xchg
mov
xchg
out
adc
int3
lods
dec
push
stos
call
lods
sbb
sub
imul
sub
add
std
clc
popf
mov
retf
push
push
ins
inc
nop
and
popa
or
pop
pusha
out
(bad)
push
(bad)
in
mov
ja
test
icebp
mov
das
(bad)
loope
test
mov
ficomp
ss
movs
fisub
popf
cli
lahf
ins
out
or
push
xchg
push
movs
dec
or
sbb
adc
mov
lods
bound
jbe
cmp
mov
in
or
pushf
and
js
jl
xor
xchg
ins
iret
add
out
dec
or
shr
mov
mov
cli
inc
cmp
shr
fild
xchg
lds
or
push
(bad)
xchg
lods
pop
jo
fimul
push
mov
jecxz
pop
sbb
pop
xor
and
sub
push
(bad)
cmp
xor
inc
cdq
fsubr
push
or
icebp
sahf
enter
pop
pop
aaa
icebp
dec
pop
push
cld
lods
adc
mov
arpl
push
mov
sbb
cmp
pop
out
dec
pushf
mov
sub
adc
pop
or
add
repnz
rcl
adc
xor
ret
inc
xchg
pop
sub
bound
pop
imul
and
stos
mov
es
pop
lods
shl
test
and
hlt
lahf
add
fild
(bad)
pop
loopne
xchg
jno
gs
jg
retf
retf
xchg
inc
icebp
outs
test
jb
imul
dec
clc
inc
es
fist
mov
push
xor
jae
das
or
(bad)
mov
xchg
pop
jle
cmc
out
push
pop
sbb
enter
and
bound
sbb
xor
daa
adc
cmp
add
add
cmp
call
mov
fisubr
adc
xchg
pushf
xchg
push
fidivr
or
or
packssdw
sbb
push
les
lods
test
mov
in
pop
xchg
cld
cli
pop
xchg
fdivr
inc
rol
xor
js
xlat
fsubr
inc
and
dec
mov
push
jnp
push
cmp
ret
in
mov
into
test
jmp
popf
(bad)
xor
rol
orps
fcom
jl
in
test
arpl
mov
cmp
pop
in
mov
fsub
in
test
(bad)
call
dec
lock
stc
in
push
outs
pop
(bad)
inc
add
push
in
es
xchg
pop
mov
pop
jmp
sti
mov
inc
outs
and
mov
push
cmc
sbb
adc
fisub
pushf
add
pop
pop
dec
adc
repz
iret
loopne
out
ins
(bad)
fsub
pushf
pop
mov
xor
or
mov
inc
cmps
xchg
mov
(bad)
dec
sar
push
sahf
sar
pop
mov
ficom
cmp
ins
dec
or
scas
cdq
mov
cld
sbb
ror
sbb
cs
test
das
outs
jle
jo
out
fisub
xchg
sub
addr16
sub
mov
jb
and
nop
xchg
and
out
add
fwait
movs
clc
lods
dec
sbb
pop
imul
add
dec
mov
cmp
scas
xchg
add
(bad)
es
pop
imul
mov
call
cmps
rol
nop
jbe
dec
fimul
xor
adc
aas
mov
data16
aas
das
xor
jo
xchg
dec
dec
es
xor
lods
fisttp
ficomp
fstp
nop
mov
scas
cli
xchg
(bad)
xchg
inc
nop
add
mov
aam
xor
fistp
xchg
jbe
fadd
outs
sub
ja
stc
es
bnd
pop
mov
mov
hlt
out
aam
(bad)
push
xchg
ss
lahf
sbb
inc
push
sbb
pop
aam
inc
adc
stc
jbe
out
popa
nop
(bad)
(bad)
lds
in
dec
cmp
fmul
shl
push
push
in
into
les
je
xchg
mov
int
jne
mov
cld
xchg
xchg
jmp
sbb
xchg
add
stos
jne
ret
xor
adc
in
call
test
xchg
stc
fwait
inc
stos
mov
dec
js
pop
mov
movs
mov
xor
pop
ror
rol
push
mov
gs
xchg
cld
sbb
cld
scas
jmp
inc
fisttp
je
cmp
ret
fdivr
movs
adc
mov
call
cdq
stos
add
sbb
aad
push
cmp
dec
xlat
loopne
shl
std
mov
mov
pop
cmc
push
(bad)
push
imul
sub
push
and
sti
cs
adc
mov
mov
(bad)
movs
lock
mov
out
mov
data16
(bad)
cli
xor
mov
call
outs
xor
shl
ins
add
pop
out
jb
lds
hlt
or
cdq
lock
pop
xchg
sbb
into
sti
add
xchg
loopne
pushf
scas
mov
fstp
push
or
mov
iret
stos
(bad)
adc
dec
xchg
rol
cmps
push
test
jne
dec
mov
mov
idiv
add
xchg
cmp
loop
mov
aad
test
mov
lahf
sahf
mov
or
sbb
xchg
rcl
cmp
mov
add
inc
push
bound
loope
xchg
pop
fs
push
rol
(bad)
mov
jmp
mov
adc
sbb
xor
adc
dec
lock
pop
jp
inc
mov
or
mov
cmps
sub
popa
and
loop
sub
(bad)
jg
push
mov
add
retf
xchg
xchg
inc
jb
dec
iret
sub
mov
mov
mov
sub
fbld
mov
and
cld
and
retf
hlt
(bad)
cmp
adc
and
mov
out
sar
push
arpl
mov
jmp
out
mov
push
and
cvtps2pi
pop
lea
sbb
adc
test
(bad)
fcom
dec
jl
jnp
daa
das
push
inc
xor
aaa
inc
jp
cs
aas
xchg
out
inc
push
leave
stos
stos
mov
test
iret
adc
xchg
stc
mov
mov
pop
inc
inc
add
loopne
in
das
sti
jmp
arpl
ja
(bad)
cmp
cli
enter
mov
inc
mov
sbb
pop
or
and
mov
(bad)
and
data16
pusha
ror
(bad)
out
loope
in
mov
jmp
int
pop
call
mov
jns
cmp
and
into
cdq
pop
jge
int
cmps
test
data16
jnp
leave
xchg
pop
sub
aam
adc
sahf
mov
jne
xor
mov
test
xor
mov
pop
(bad)
leave
inc
imul
out
mov
dec
mov
pop
jae
dec
or
sbb
mov
jle
pushf
fsub
fcomp
sbb
out
inc
lods
cmp
fisubr
or
or
inc
add
loope
xchg
jb
cmp
shl
out
push
mov
mov
mov
stos
pop
and
ja
fs
fstp
pop
mov
jo
loop
cmps
bound
mov
or
or
(bad)
sbb
sub
mov
ss
(bad)
in
adc
jg
dec
(bad)
xlat
rcr
es
sub
(bad)
sbb
adc
rcr
xor
fstp
jle
test
xchg
inc
xor
pop
xor
pop
out
or
sbb
cli
lods
daa
xor
in
and
sub
call
xlat
pextrw
aas
dec
in
add
xor
cs
lds
(bad)
jmp
ins
aam
mov
push
nop
pop
pop
xchg
sub
push
cmp
outs
lock
fnstenv
std
pop
jmp
out
outs
fsubr
sub
or
movs
std
ret
pop
mov
nop
jl
cmp
scas
adc
aam
aad
push
ins
into
test
cmps
movs
push
inc
pop
adc
dec
dec
push
outs
xchg
arpl
movs
test
test
inc
das
stos
cs
xchg
lods
cmp
mov
dec
mov
es
sbb
and
in
xchg
push
shl
jbe
cmps
repz
scas
adc
mov
popa
scas
pop
mov
push
mov
mov
loope
call
dec
mov
adc
call
and
push
cmp
cmp
aam
inc
mov
stos
pushf
jp
aad
dec
iret
div
adc
call
sahf
js
sub
sub
movs
xchg
adc
je
and
mov
loope
or
dec
mov
sbb
(bad)
out
in
cld
fld
fmul
jmp
push
fiadd
or
and
mov
push
lods
cmp
cmp
imul
xor
mov
xchg
cmp
test
test
stc
xchg
pop
lock
pop
sub
leave
shr
xor
and
aad
push
or
xchg
test
sbb
sbb
fisubr
adc
or
cwde
add
stos
arpl
sti
call
dec
neg
sbb
xor
aad
sub
add
push
iret
loop
sbb
mov
and
(bad)
xchg
in
outs
add
adc
xor
jbe
pop
sbb
mov
pop
and
sub
and
dec
cmp
jns
nop
mov
push
push
xor
xchg
pop
mov
aam
pop
outs
ja
or
pushf
in
pop
adc
test
mov
jge
mov
out
jmp
or
fmulp
cmp
jnp
frstor
std
retf
movs
and
mov
mov
into
fimul
cmp
cmps
jmp
pushf
add
ja
fdivr
addr16
retf
pop
fnstcw
fbld
aas
daa
scas
in
cwde
scas
xor
iret
ficomp
mov
add
dec
inc
movs
js
jp
pop
test
adc
push
lods
sub
imul
xchg
and
or
jp
rcr
cdq
jl
lea
nop
mov
jp
push
mov
test
movs
inc
pop
pop
and
frstor
out
imul
cmp
inc
dec
lods
pusha
and
icebp
out
int3
inc
retf
sbb
xchg
dec
adc
and
aaa
test
dec
bound
retf
mov
mov
sbb
cld
shl
dec
adc
jae
test
js
outs
and
int
jns
push
push
fidiv
(bad)
push
jmp
mov
imul
scas
jb
xor
(bad)
jbe
in
push
rol
adc
std
rcl
add
aad
mov
push
(bad)
in
out
out
(bad)
cmp
xor
sub
rcl
fldcw
sub
xor
push
daa
stc
leave
mov
fdivr
and
and
add
lods
sub
add
popa
out
pop
cwde
ss
sbb
retf
jo
adc
cmp
push
movs
scas
cmp
test
cmp
loop
dec
or
stos
cmp
test
push
idiv
fiadd
sub
add
or
loope
int
je
and
pop
push
sub
(bad)
xchg
in
push
xchg
mov
and
imul
mov
jecxz
inc
(bad)
add
mov
inc
jns
and
push
and
jb
int
loopne
cs
repz
idiv
xor
ins
iret
push
xchg
int3
ds
cmp
jmp
and
xor
xor
fs
sub
ret
call
loop
fs
mov
inc
fidiv
or
xchg
test
jb
(bad)
fidiv
xor
jmp
ins
div
out
shr
cmpps
mov
fwait
test
jne
outs
sub
sub
push
mov
ja
cmp
das
popa
mov
adc
sbb
lock
and
push
call
mov
scas
pop
sbb
fcmovne
(bad)
nop
jmp
mov
sbb
adc
xor
rcl
nop
jl
cmp
adc
dec
imul
pop
(bad)
out
mov
xchg
test
inc
sub
loop
aam
lods
hlt
scas
cmp
and
inc
xchg
inc
mov
in
cmps
sbb
inc
ret
push
int3
add
fldenv
inc
push
scas
cli
push
(bad)
movs
mov
push
(bad)
push
add
inc
(bad)
mov
sub
sbb
daa
cwde
aaa
out
into
cmps
(bad)
sbb
sbb
sub
inc
jo
lods
push
sbb
dec
push
sub
cld
xchg
inc
repz
hlt
jae
add
fild
jae
sbb
lock
jl
add
lock
dec
sbb
adc
adc
test
pop
inc
pop
ins
and
(bad)
pushf
cmp
sub
cmp
pop
(bad)
sub
idiv
test
fs
int3
add
mov
outs
ret
call
sbb
pop
dec
or
xchg
ja
(bad)
shl
pop
retf
or
inc
in
into
inc
test
adc
cmp
sub
lahf
xchg
inc
popf
mov
lock
fistp
xor
inc
cdq
mov
aam
add
adc
mov
test
cmp
leave
sti
sub
adc
leave
imul
shl
pop
sbb
je
ds
inc
mov
inc
sub
xchg
enter
popa
(bad)
xor
pop
(bad)
movs
in
mov
sub
adc
mov
in
mov
sar
es
ja
movs
shr
push
sbb
out
imul
jcxz
push
add
shr
add
cdq
pop
ret
pushf
inc
mov
in
repnz
cmp
mov
jg
(bad)
je
mov
out
aaa
cmp
fsub
inc
test
inc
push
stc
fisubr
ds
mov
jge
popfw
mov
jecxz
in
loop
sbb
les
sub
add
push
or
int
cmp
lea
ret
mov
test
or
popf
jge
push
ret
loope
adc
ficom
sub
in
or
aad
mov
stos
ja
jle
aam
sahf
mov
lds
sub
call
push
mov
xor
or
(bad)
call
aas
aam
mov
les
sub
xor
sbb
mov
pop
add
jp
cwde
movs
mov
int3
fldl2t
cmp
jno
scas
mov
push
push
mov
hlt
lods
sar
shl
push
rcl
in
jno
cmp
pusha
scas
mov
popa
push
mov
jg
fs
push
std
push
mov
cmp
adc
das
push
movs
jl
scas
xchg
jne
outs
mov
imul
inc
push
adc
retf
cmc
loopne
pxor
jecxz
jne
cmp
fs
sti
dec
cmps
inc
jle
into
dec
jbe
bound
imul
jle
adc
mov
push
in
jne
or
mov
fdiv
dec
fbstp
push
sub
jg
inc
mov
xor
adc
xchg
lock
inc
push
stos
sub
test
loop
test
sar
mov
cmp
bound
jno
mov
stos
cmps
jne
fst
xor
sub
sahf
cs
(bad)
icebp
repz
addr16
repz
out
cs
mov
ss
ins
iret
cmp
sub
(bad)
movs
sub
sub
imul
arpl
sub
ds
(bad)
mov
out
dec
pop
push
lahf
dec
dec
cs
cmp
xor
sqrtps
(bad)
mov
push
call
imul
add
les
jge
into
mov
adc
pushf
mov
mov
xor
cmps
xor
and
add
inc
xor
repnz
push
(bad)
sahf
frstor
leave
or
pop
fimul
sti
clc
aam
cli
mov
inc
and
leave
repnz
mov
cld
xchg
or
mov
or
ins
cmp
add
lock
pushf
fsubr
xchg
ret
clc
adc
jl
lods
dec
push
lods
dec
sub
in
xchg
outs
jl
xor
outs
enter
jne
popa
mov
pop
mov
ficomp
icebp
repz
jb
xchg
test
aas
dec
in
push
push
add
dec
int
pop
sub
loopne
add
icebp
frstor
test
jo
xchg
dec
hlt
outs
(bad)
or
dec
sahf
jge
jmp
movs
stos
sub
inc
shl
jmp
fwait
jp
adc
ror
add
dec
mov
dec
cmps
cld
adc
sbb
enter
idiv
dec
outs
dec
adc
mov
ret
lods
(bad)
push
add
sub
inc
call
js
pop
jnp
dec
pop
xor
inc
xchg
das
shl
adc
add
into
test
inc
xchg
pushf
pop
sub
jle
add
icebp
or
sub
or
mov
dec
mov
or
cmc
adc
inc
cli
cmc
adc
dec
not
add
jl
mov
or
fistp
sub
xor
loop
out
xchg
jo
or
xlat
out
xchg
xor
jns
enter
jge
movs
pop
jmp
stos
cs
js
addr16
dec
arpl
add
xchg
and
sub
mov
mov
ret
dec
aaa
sbb
mov
cmp
clc
fild
mov
lds
test
sub
xlat
test
daa
sub
loope
aaa
scas
out
sbb
jnp
jl
fistp
cmp
hlt
ins
loope
sub
mov
bound
iret
or
xchg
rol
push
lds
ds
and
icebp
cmp
je
popfw
fiadd
adc
test
out
xor
ins
loopne
mov
sbb
pop
mov
scas
mov
repnz
jns
xchg
adc
pop
pop
xchg
push
xor
sbb
xor
(bad)
jmp
jge
nop
addr16
loopne
iret
dec
cmp
xchg
pop
lock
pop
jmp
sbb
and
ds
lds
or
fcomi
arpl
inc
dec
dec
cs
fldenv
in
ins
movs
mov
gs
pop
xchg
pop
hlt
adc
inc
bound
test
mov
add
pop
mov
gs
scas
rcr
rol
dec
in
sub
xor
xchg
sbb
dec
pop
xchg
add
pushf
xor
xor
stos
inc
retf
push
stos
sub
cmps
(bad)
xor
xor
xchg
mov
addr16
pop
fsubrp
and
sbb
mov
(bad)
jl
and
sbb
mov
in
and
pop
pop
sub
dec
outs
pop
dec
fsubr
sbb
stc
xchg
jg
ja
cmc
aad
jmp
imul
dec
cmps
xor
and
or
mov
dec
shr
fild
sbb
jmp
out
sub
ds
add
pop
dec
mov
jae
mov
add
in
push
sbb
cwde
dec
sbb
sbb
jns
ret
xchg
(bad)
call
push
jmp
aas
cwde
and
sub
fdiv
mov
push
push
mov
cli
nop
idiv
push
dec
retf
xor
or
push
sub
fild
push
out
adc
push
cdq
(bad)
das
mov
jbe
mul
jae
test
jns
stos
dec
sbb
xlat
push
jne
in
cs
mov
mov
mov
inc
(bad)
xchg
mov
xchg
lods
jmp
dec
into
jmp
loope
sbb
out
inc
mov
or
int
aaa
daa
xchg
dec
xchg
cmp
mov
adc
mov
sbb
or
pop
outs
xchg
test
sub
push
scas
sahf
pop
adc
xchg
fsubr
data16
sub
xor
aaa
in
in
stc
inc
dec
dec
adc
inc
sub
xchg
add
mov
movs
adc
mov
push
pop
int3
retf
into
scas
mov
outs
pushf
adc
mov
jmp
pop
sbb
jle
fcomp
repz
fadd
nop
pop
rcl
ror
dec
or
sbb
add
mov
cmc
test
arpl
sub
mov
in
sar
icebp
xchg
lock
mov
or
or
jmp
(bad)
into
push
and
ret
pop
add
sub
adc
loop
inc
cmp
shl
jmp
inc
sbb
inc
test
ret
repz
mov
lahf
adc
shl
rcl
or
add
jne
(bad)
scas
les
mov
sahf
jbe
mov
bound
mov
bound
push
inc
pushf
daa
imul
cmc
in
in
fsubr
outs
rcr
clc
cli
mov
movs
hlt
pop
or
mov
cmp
cmps
es
popf
nop
mov
pop
popa
jnp
mov
mov
js
mov
inc
stc
push
das
jmp
imul
mov
out
add
(bad)
cld
pusha
dec
adc
inc
sti
or
jmp
push
not
dec
ins
sub
shl
ret
(bad)
dec
inc
dec
mov
push
and
mov
add
iret
ja
add
xor
outs
and
sub
mov
xor
sub
fxch
cmp
mov
inc
push
fmul
adc
fld
dec
popf
lahf
hlt
ror
sbb
outs
pop
xchg
add
fcomp
adc
test
inc
cmp
gs
cdq
mov
jl
scas
movs
in
retf
test
sbb
inc
inc
pop
test
int
and
xor
in
mov
sub
in
xchg
inc
xor
pusha
xor
push
adc
mov
mov
nop
test
je
xchg
imul
scas
stos
add
and
xchg
pop
in
mov
push
jl
cmp
cs
jns
movs
jg
out
push
mov
enter
cwde
xchg
or
imul
mov
push
daa
lock
ret
cwde
ja
repz
repz
shl
lock
test
retf
sbb
clc
in
mov
mov
loop
cs
push
aaa
sub
aad
mov
stos
das
xor
add
pop
fidiv
ret
add
icebp
cmp
push
cdq
mov
je
(bad)
push
repz
repz
jno
js
push
sbb
out
mov
jno
std
mov
mov
mov
fiadd
scas
aad
dec
adc
rcr
ret
std
mov
loope
scas
adc
enter
and
pop
fsubp
in
test
sbb
popf
pop
mov
cmp
adc
popa
ds
inc
lock
psubusb
push
call
repz
mov
inc
or
out
pop
ja
movs
das
mov
movs
fild
jecxz
sbb
out
movs
adc
movs
call
(bad)
in
mov
mov
ins
add
outs
inc
cmp
mov
sub
fldenv
mov
add
xchg
inc
lods
pop
mov
ins
dec
sbb
cmc
push
ds
cmps
cmp
mov
scas
add
adc
cmp
cld
inc
pop
dec
or
push
xchg
call
loop
xchg
scas
ss
inc
out
sbb
mov
scas
popa
jno
push
dec
in
iret
pop
pop
js
dec
jne
rcr
cmp
arpl
mov
pop
and
sub
mov
out
xor
add
push
or
mov
dec
test
nop
aad
(bad)
repnz
mov
jns
dec
pop
sub
cmp
popa
fs
scas
sahf
pop
call
ins
sti
push
mov
lock
dec
jecxz
mov
imul
mov
fadd
inc
inc
jb
push
loope
aam
jmp
cmp
mov
push
mov
add
icebp
add
call
xchg
jo
sbb
cmp
std
sub
and
xchg
fnstsw
in
xchg
inc
lea
mov
rcl
pop
test
fucomip
test
xchg
push
dec
scas
sub
jns
ret
mov
jle
neg
cmp
dec
aaa
sbb
popf
push
mov
pop
dec
xchg
xchg
and
aam
shr
xchg
jbe
in
xor
cmp
adc
dec
jecxz
adc
jp
icebp
(bad)
push
sar
fnsave
or
jnp
mov
cmovno
sar
adc
cs
clc
ss
jo
adc
xchg
pop
leave
pusha
loope
fwait
and
add
jne
(bad)
je
push
inc
mov
rol
push
arpl
fwait
int
mov
rcl
mov
bsr
cmp
mov
xchg
and
adc
call
push
loopne
jnp
ins
repz
imul
mov
xchg
(bad)
push
retf
xor
lods
mov
xor
mov
sbb
outs
xchg
cmp
push
cmc
jg
lock
paddsb
sar
cld
test
gs
adc
mov
jnp
jge
jp
sub
jae
cmp
push
push
cdq
push
sbb
ins
jns
jns
jecxz
mov
add
mov
cmps
pop
push
iret
cld
je
lds
sub
push
jecxz
clc
fcomp
aaa
fidiv
bound
mov
jp
push
mov
cmp
ficom
out
adc
ret
push
imul
cmp
fdiv
andps
mov
popf
inc
(bad)
pop
shl
mov
cs
pop
xor
lock
push
mov
stc
cld
(bad)
retf
xor
push
into
add
fwait
add
push
jmp
jecxz
push
ins
clc
stc
mov
mov
mov
mov
rcl
in
mov
cmps
add
jle
bound
or
push
xchg
cmp
pop
mov
ja
rol
fistp
int3
and
ss
gs
push
xchg
add
adc
push
ins
pop
rcl
push
dec
jb
xor
sbb
mov
xor
cld
shl
shl
xor
inc
sub
and
adc
xor
loop
sahf
push
adc
sti
int
sub
popa
ret
push
xor
clc
adc
jo
xor
lods
dec
adc
sbb
sub
or
jecxz
push
les
sti
xor
xchg
add
pop
xchg
pop
sbb
push
adc
fs
stos
aam
or
mov
mov
inc
push
pop
or
les
fst
mov
adc
push
add
sbb
push
hlt
dec
push
lods
add
mov
aam
dec
pop
jb
cmp
push
int3
lea
adc
data16
add
push
push
or
test
xchg
leave
das
icebp
loop
ficomp
dec
sbb
cmp
push
(bad)
cmp
xchg
ss
je
shl
mov
ds
fstp
int3
outs
not
popf
xchg
mov
ins
out
fsubr
jecxz
mov
mov
repz
int
pushf
xchg
fsubr
xor
imul
jge
outs
jno
out
jbe
sub
mov
pop
and
push
jnp
jmp
cmp
and
and
into
mov
ret
stos
aam
or
push
loopne
jo
adc
scas
pop
mov
fld
xchg
imul
xlat
xor
nop
cmp
ss
pop
xor
pushf
fiadd
jno
adc
ror
fisub
cmp
mov
std
sar
push
les
dec
pusha
adc
sbb
inc
pop
sub
sub
mov
popa
ret
icebp
daa
xchg
push
cld
imul
hlt
sbb
or
sub
inc
sub
popa
(bad)
clc
retf
int3
add
ss
bound
push
sub
test
jge
ins
cmp
ret
cmps
adc
mov
xor
(bad)
or
sbb
adc
in
mov
lods
rcl
inc
pop
ins
dec
cmc
jecxz
inc
sbb
stos
pop
sub
ffree
pop
jge
inc
mov
push
mov
mov
mov
mov
cmp
repnz
cmp
lds
mov
xchg
loopne
xor
mov
inc
gs
imul
imul
pop
es
fwait
adc
adc
push
loope
dec
pop
imul
scas
pop
in
les
mov
push
or
push
test
xchg
or
xchg
hlt
aad
icebp
cmps
popa
leave
sahf
aam
inc
jmp
xchg
fimul
or
xchg
ret
dec
push
nop
pop
out
jae
sub
lock
or
(bad)
mov
push
sti
mov
xchg
rcl
gs
shl
fcom
imul
hlt
add
loope
int3
sbb
aas
and
adc
xor
pop
(bad)
fs
neg
or
std
retf
stos
in
xchg
gs
xchg
xchg
test
call
xlat
jbe
or
les
hlt
jnp
dec
xchg
ins
add
mov
(bad)
jb
sbb
mov
push
shr
or
stc
xchg
je
add
push
out
movs
jb
and
(bad)
inc
iret
xlat
cmp
lahf
cmc
call
pop
dec
sub
inc
test
cmc
fiadd
ror
(bad)
pop
inc
pop
sahf
in
fldcw
call
pop
cmp
xchg
rcl
mov
pop
repz
and
imul
retf
movs
jmp
pop
jg
pop
retf
add
or
xlat
mov
dec
retf
ficom
test
jbe
lods
pop
outs
hlt
jmp
adc
cmps
sbb
inc
out
mov
sahf
outs
push
cmps
inc
inc
lods
test
imul
sbb
ret
pop
jge
cli
int3
shr
outs
aad
clc
cmp
les
push
(bad)
out
lods
scas
js
cdq
add
jb
jecxz
mov
xchg
inc
rcr
cmp
fidivr
scas
in
scas
adc
into
and
mov
pop
icebp
test
and
add
xor
jecxz
xchg
call
lock
lds
leave
in
arpl
iret
add
popa
call
rcr
push
rcl
adc
jae
mov
pop
xchg
repz
in
sub
xchg
inc
repnz
sub
adc
push
and
inc
addr16
dec
repz
call
jb
ja
jmp
in
pop
or
(bad)
cmp
xor
mov
xlat
sti
or
dec
pop
push
push
test
jmp
and
push
or
sub
fstp
lods
sbb
sbb
movs
jno
ret
aad
pusha
mov
add
adc
ja
cmps
mov
out
xor
jno
pop
push
inc
mov
inc
jmp
add
sti
push
pop
call
inc
push
in
aad
jae
int3
aam
(bad)
pusha
mov
jmp
repz
mov
or
lods
int3
sahf
pusha
pop
pushf
imul
sub
aas
sub
mov
mov
add
cld
jge
pop
retf
dec
cld
xchg
stos
add
lods
cmps
dec
or
xor
and
mov
retf
cmp
cwde
jmp
aad
xchg
test
xchg
ret
hlt
xchg
cdq
jle
push
sti
pop
cmp
cmp
das
sub
lock
addr16
imul
mov
int
add
xor
sub
movs
mov
fld
push
mov
adc
mov
outs
sub
mov
add
xchg
cmc
test
data16
xor
mov
push
test
jl
retf
mov
addr16
dec
mov
xor
push
lods
cli
mov
in
and
aad
aas
or
adc
push
mov
inc
mov
test
add
adc
bound
and
xchg
(bad)
or
out
mov
xchg
or
in
dec
rcr
fs
pop
gs
loopne
mov
push
xlat
or
ins
jecxz
push
lock
(bad)
imul
pop
int3
jmp
jno
adc
push
and
call
mov
add
dec
sbb
sbb
popf
pop
in
daa
arpl
out
in
push
jae
xor
scas
mov
dec
and
mov
xor
ja
or
in
xor
sbb
or
inc
pop
sub
nop
cmp
and
jge
ins
push
aam
push
test
rcl
inc
pop
retf
xchg
pop
ret
test
xchg
cmp
mov
shl
add
test
test
mov
push
fld
inc
dec
ror
sub
xor
add
(bad)
stos
inc
mov
ds
mov
xchg
xor
pusha
mov
loop
nop
iret
jmp
pop
dec
adc
sub
xchg
not
jecxz
mul
fld
adc
(bad)
mov
inc
push
adc
sbb
and
mov
dec
jbe
jne
fcomp
and
dec
xchg
test
ja
les
rol
pop
int3
mov
daa
mov
xor
xor
push
cmp
aaa
dec
or
cwde
push
and
push
cmp
cmp
sbb
inc
sti
xchg
lds
pop
dec
cmp
pop
dec
imul
je
mov
push
and
inc
inc
mov
and
cmps
test
pop
xchg
repz
aam
daa
or
sbb
pop
jmp
jmp
or
adc
std
repz
xchg
jp
(bad)
out
repnz
cmp
fistp
mov
mov
push
xlat
dec
and
or
test
inc
(bad)
xchg
out
loop
jp
inc
mov
mov
cwde
jle
pop
inc
repnz
mov
push
jae
fsubr
lock
sahf
push
or
aaa
cmps
addr16
daa
retf
inc
mov
cmps
test
sub
pop
loope
(bad)
jmp
jnp
daa
dec
outs
or
inc
push
loope
retf
jae
xchg
je
push
pop
addr16
and
xchg
das
mov
retf
out
xchg
mov
outs
ror
mov
xor
imul
pop
pop
sub
inc
(bad)
jp
xor
adc
test
mov
(bad)
push
inc
int3
lahf
xchg
into
call
cmp
cwde
mov
add
add
mov
mov
sbb
ret
fwait
pusha
pop
pushf
pusha
xor
mov
mov
fwait
(bad)
hlt
inc
add
out
nop
mov
sbb
jl
in
int3
mov
arpl
ins
xlat
aad
push
movs
aam
push
pushf
sbb
push
mov
daa
inc
sub
push
add
arpl
mov
mov
mov
or
jge
add
adc
aas
sub
push
int3
xchg
shl
lea
in
mov
push
mov
mov
inc
repz
cs
cmps
xchg
das
ins
add
jmp
jp
(bad)
fisubr
scas
test
imul
push
sub
cwde
fisub
stc
sbb
sub
jp
cli
out
mov
cmp
(bad)
icebp
int3
pop
jp
or
into
movs
shr
dec
dec
test
push
sub
and
stos
ds
push
xchg
es
retf
jg
push
sti
sbb
jg
xor
sbb
rcl
lds
mov
pop
out
test
xor
jmp
mov
mov
pop
shl
movs
retf
(bad)
jl
mov
adc
lea
jl
pop
(bad)
pop
mov
fwait
(bad)
fstp
pop
scas
sahf
dec
xchg
mov
(bad)
and
push
jo
jnp
xor
pushf
cmp
lods
scas
out
cmps
sbb
cdq
or
jmp
xor
call
je
pop
xlat
gs
call
fisttp
aad
add
ins
out
bound
jae
mov
jle
cmc
mov
inc
fidiv
xlat
ror
test
fmul
fistp
test
mov
outs
in
mov
add
adc
out
cdq
iret
icebp
xchg
or
rcr
or
jmp
in
mov
in
ja
sbb
jno
scas
jo
and
cmp
mov
pusha
xchg
mov
jg
dec
pop
and
xor
cmps
xor
jne
ins
sti
popf
pop
mov
(bad)
mov
out
inc
test
jmp
loopne
dec
pop
sbb
add
fwait
mov
clc
or
cld
xchg
retf
jne
jle
sahf
pop
into
push
stos
sbb
lock
inc
sbb
and
leave
ds
mov
mul
shl
inc
push
popf
fist
cld
mov
es
pop
gs
jno
lahf
test
lahf
cmp
push
movs
test
arpl
std
sub
ja
and
cdq
or
pop
pop
pop
mov
aaa
imul
fcomp
aad
cs
shr
cmpxchg
in
jp
stos
shl
dec
ret
ins
scas
pop
ins
shl
pop
out
cmp
cmp
push
dec
inc
mov
pop
clc
loope
dec
inc
xor
pop
add
movs
lahf
retf
pop
sub
or
sbb
or
xchg
or
out
cmc
test
bound
sbb
ins
leave
sub
daa
arpl
lods
popf
cld
inc
xlat
inc
addr16
or
xchg
xchg
and
inc
xor
pop
push
and
push
test
out
add
leave
xor
dec
sar
ins
mov
push
icebp
inc
xchg
jmp
add
mov
sbb
pop
enter
jae
pop
and
push
mov
fnsave
sbb
inc
test
nop
call
cmp
add
nop
jne
repnz
push
ins
jbe
sbb
mov
inc
shl
mov
pminsw
push
xor
and
mov
or
pushf
cmp
jbe
mov
and
cmp
xor
sar
jnp
cmp
cld
outs
cmp
rcl
pusha
adc
mov
cmps
out
xchg
stos
xchg
loop
xor
dec
xor
scas
adc
outs
int3
clc
inc
rol
push
movs
cmp
jg
push
mov
ja
shl
and
push
pop
iret
mov
jge
in
clc
pop
xor
xor
add
adc
inc
jne
lods
movs
cli
jge
cmp
push
or
mov
xor
cdq
repnz
xchg
dec
cmps
push
adc
mov
inc
lahf
adc
mov
in
xor
aas
hlt
adc
mov
movs
push
data16
in
lea
jno
fld
shl
and
test
pop
loop
pop
test
ss
retf
push
sub
jp
aam
fdivr
sub
pop
jmp
shr
out
xor
cmp
cmp
stos
int
imul
sbb
or
sub
dec
int3
idiv
mov
aaa
lock
(bad)
iret
jle
comiss
push
jno
xor
jmp
shl
cmps
inc
cli
cli
out
jmp
jg
jmp
add
jg
ss
pop
cmp
xchg
jmp
out
mov
cmp
jns
or
loope
out
shl
fcom
pop
mov
enter
pop
cdq
push
fild
por
in
(bad)
into
push
icebp
dec
pusha
ret
lahf
daa
daa
aad
jl
sbb
sbb
movs
test
cdq
scas
out
and
sbb
into
loop
rol
jle
adc
bound
mov
mov
sub
inc
in
sbb
xchg
pop
mov
sbb
xchg
retf
leave
jg
sbb
mov
loope
cmp
dec
adc
xlat
sub
in
mov
clc
mov
movs
sbb
sbb
and
gs
out
and
pop
cmp
out
lahf
cs
cmp
fild
inc
mov
aaa
inc
jge
sbb
push
or
mov
cmp
lods
mov
pop
leave
sahf
cmp
push
aad
pop
or
jge
daa
cmp
adc
and
sar
inc
bound
or
sub
inc
inc
fimul
or
test
adc
dec
xor
ficomp
push
icebp
mov
retf
gs
push
int
lds
ror
outs
sti
jecxz
into
mov
ss
push
jbe
cmc
rol
clc
jo
hlt
fcomp
cs
or
scas
dec
or
int
or
lea
jne
sbb
cdq
stos
xchg
mov
adc
pushf
aam
dec
call
out
pop
test
sub
fcomip
cmps
fisub
inc
or
je
outs
push
dec
in
movs
adc
and
fbstp
or
mov
shr
or
pop
xor
mov
into
dec
test
iret
pop
movaps
push
xchg
repnz
test
mov
or
stos
jl
jns
out
es
test
jmp
mov
xor
out
and
xor
cwde
idiv
neg
adc
cmp
ret
push
lahf
jecxz
cmc
stos
xchg
adc
das
jl
xchg
mov
lds
fst
cmp
mov
leave
mov
fnstenv
scas
jne
add
xor
dec
inc
lahf
repz
sahf
jb
rcr
jmp
or
push
fcom
fiadd
fsubr
mov
mov
iret
(bad)
call
hlt
enter
sbb
pop
inc
dec
lahf
xchg
lods
movs
aas
sub
ins
fst
pop
push
and
adc
sar
bndldx
sbb
mov
(bad)
mov
and
and
aad
add
cld
sub
add
mov
les
add
sub
(bad)
mov
dec
out
jb
pop
pop
cmc
mov
call
xor
lods
pop
mov
mov
cmp
mov
or
sub
(bad)
push
lea
fninit
jbe
push
cmp
ins
add
mov
(bad)
mov
nop
addr16
scas
addr16
jnp
xchg
pop
add
das
fdecstp
cmp
inc
push
push
dec
jnp
ds
lods
jbe
clc
and
test
mov
dec
xlat
or
sbb
pop
cmp
and
je
iret
inc
retf
fs
shl
cmp
icebp
fwait
test
into
push
push
cs
mov
add
pop
jl
arpl
xchg
loopne
pop
mov
shl
push
fcomp
jae
popa
ins
scas
inc
xchg
push
fdivr
pushf
stc
xchg
jmp
out
mov
arpl
jl
jae
xor
int3
js
lods
cmp
dec
xchg
addr16
xor
fdivr
inc
arpl
push
ins
iret
pop
ret
gs
xor
jl
loope
shr
jb
jecxz
and
xchg
pop
cmp
sub
lea
mov
push
dec
ss
repz
in
js
sbb
mov
cmps
adc
mov
test
xor
or
setae
addr16
push
mov
int
cdq
cmp
adc
shl
fcmovne
pushf
out
mov
pop
mov
pop
retf
xchg
fild
jnp
and
inc
xor
add
and
fwait
lds
xor
pop
retf
mov
jbe
lds
imul
mov
std
push
push
sbb
push
inc
pop
push
push
mov
mov
inc
pop
pop
push
mov
int
push
and
sub
(bad)
es
pop
jp
xor
repnz
scas
(bad)
fadd
shl
icebp
mov
jno
in
or
add
test
lods
mov
ret
add
push
test
xchg
and
inc
das
pop
(bad)
icebp
jle
lea
jo
movs
mov
imul
inc
or
mov
aam
adc
jp
(bad)
cdq
mov
mov
xor
fwait
sub
popa
cwde
and
je
sahf
imul
pop
mov
jge
xchg
sbb
movsx
inc
(bad)
into
mov
dec
cmp
mov
out
adc
xor
fisub
push
pop
mov
pop
sbb
imul
xor
inc
(bad)
mov
popa
jbe
and
xlat
nop
jno
in
and
pop
push
iret
inc
dec
ror
mov
call
add
(bad)
loope
cmp
dec
imul
push
dec
xor
enter
jmp
call
ss
loopne
adc
fdivrp
mov
aad
mov
and
fwait
xor
test
push
pop
xlat
out
rol
icebp
sub
test
bound
mov
pop
lds
gs
aad
xor
int3
icebp
xchg
mov
scas
(bad)
jns
call
rcl
mov
cmp
repz
idiv
add
shr
dec
loop
xor
fadd
ins
pop
dec
pop
inc
in
test
icebp
aad
push
dec
in
aam
cmp
arpl
sbb
pop
in
in
inc
shl
fild
imul
inc
jno
mov
aad
repnz
sti
(bad)
push
add
shl
mov
and
(bad)
pop
outs
or
dec
int3
retf
dec
imul
mov
(bad)
lds
or
fnstsw
repnz
(bad)
test
sbb
in
daa
adc
cmp
jnp
out
pop
lds
xchg
and
ret
xchg
pusha
fwait
call
leave
mov
dec
sbb
es
sbb
sbb
mov
call
jnp
stc
call
stos
cli
ror
cmps
push
bound
pop
jmp
or
daa
jbe
popa
bound
push
fisubr
sti
mov
xlat
(bad)
repz
push
divps
pop
or
jbe
inc
jl
cwde
xchg
cs
jle
push
inc
mov
mov
push
push
xchg
jne
and
add
lahf
movs
pop
mov
fidivr
in
sub
jecxz
cld
lods
push
mov
and
adc
sub
cmps
(bad)
mov
pop
scas
nop
imul
adc
pop
retf
xor
mov
adc
push
push
popf
fsub
pushf
std
inc
xor
lds
pop
in
adc
shr
je
add
popf
nop
lds
popa
cdq
cmc
data16
inc
xchg
shl
in
sub
popf
test
push
inc
xchg
daa
scas
fild
xor
in
jg
in
call
push
xor
call
leave
or
xor
push
mov
push
push
(bad)
mov
je
and
ja
movs
and
test
adc
nop
les
addr16
shr
and
rcl
sub
push
inc
jmp
dec
jae
in
(bad)
lods
jno
mov
mov
and
adc
aaa
fcomp
les
sub
jae
test
jmp
add
bound
push
xor
dec
jmp
cld
mov
pop
pop
leave
dec
xchg
out
xor
jle
jne
popf
cwde
sbb
fisub
sbb
mov
or
sahf
aad
xchg
mov
add
shl
je
test
inc
sti
jno
or
push
inc
in
pop
pop
mov
test
sbb
jbe
mov
sbb
push
ins
mov
out
and
mov
aaa
mov
mov
test
call
dec
xor
mov
mov
push
lods
sahf
mov
psubusb
xor
jmp
js
sbb
xchg
and
les
sbb
dec
das
pop
(bad)
sub
idiv
test
sub
arpl
call
lods
mov
pusha
dec
call
std
sar
loopne
call
iret
and
pop
enter
fsub
ret
retf
mov
mov
add
adc
mov
mov
push
push
popf
xor
(bad)
ss
mov
icebp
(bad)
jecxz
(bad)
out
xchg
push
icebp
add
(bad)
(bad)
out
dec
(bad)
call
mov
mov
scas
(bad)
pushf
jbe
stc
xor
inc
pop
ret
popf
cld
mov
retf
and
aad
xchg
mov
lods
jo
je
adc
cmp
jle
int3
push
in
lahf
lock
fstp
imul
sbb
lock
clc
mov
sbb
dec
icebp
sbb
ss
cmc
cdq
push
ror
ins
fiadd
lea
xchg
fwait
dec
add
aam
ds
inc
ins
in
int3
xor
pop
cmps
shr
push
fcomp
(bad)
stos
mov
mov
arpl
sub
add
sahf
add
jmp
jo
ja
dec
std
(bad)
mov
sub
jg
inc
std
pop
push
xor
fadd
mov
ins
push
add
add
addr16
into
(bad)
in
cmp
inc
dec
sbb
lods
jle
leave
add
movs
mov
push
jmp
xchg
cmp
(bad)
jle
and
cmc
ret
cmp
hlt
pop
mov
mov
ror
retf
(bad)
or
jge
mov
enter
into
push
popa
daa
mov
mov
mov
pop
stos
outs
nop
in
cld
or
out
repz
xchg
push
sar
or
lds
hlt
int
xor
sub
pusha
mov
(bad)
push
popf
call
fld
cld
std
xor
push
pushw
dec
neg
test
lea
lods
data16
sbb
scas
mov
mov
sti
outs
xchg
pop
or
out
push
sbb
xchg
out
(bad)
loopne
sbb
outs
jg
repz
imul
or
and
aad
popf
imul
mov
daa
xchg
movs
mov
ds
inc
fwait
adc
sar
mov
cwde
loope
dec
imul
mov
rcr
mov
or
mov
in
and
sbb
inc
ds
mov
repz
push
sahf
xchg
jg
pop
(bad)
out
outs
rcr
mov
dec
sti
ret
movs
push
jno
sbb
push
dec
sub
jnp
mov
inc
rcl
mov
cmp
std
(bad)
pop
jl
out
sbb
push
xlat
lahf
or
enter
jge
sub
retf
hlt
lds
inc
adc
inc
cs
(bad)
lds
xor
xchg
aaa
(bad)
in
leave
sbb
dec
movs
in
cmp
xor
bound
cli
xor
adc
cli
rcr
test
std
cmp
mov
shl
adc
stc
hlt
dec
mov
leave
and
ja
jl
xor
popw
xor
loop
sbb
dec
lods
(bad)
push
nop
ret
ss
jmp
dec
out
mov
icebp
sbb
mov
xchg
(bad)
loope
pusha
arpl
mul
clc
add
xchg
xchg
mov
mov
test
push
jmp
dec
and
test
push
xchg
(bad)
mov
pop
bound
adc
retf
pop
sub
in
push
aam
(bad)
fild
adc
jmp
sub
mov
sub
pop
in
aam
inc
add
cdq
repnz
or
sbb
add
out
retf
out
mov
lods
test
(bad)
cmps
pop
jg
jecxz
(bad)
cld
jle
iret
jle
cmc
xchg
xchg
ds
es
in
mov
in
mov
(bad)
dec
cmp
add
mov
es
cmp
aad
sbb
mov
mov
mov
ins
retf
cmp
ror
pop
jo
fsub
in
shl
inc
add
mov
jg
mov
push
xor
and
mov
sti
mov
rcr
mov
adc
xchg
aad
xor
xchg
(bad)
cs
mov
mov
pop
xor
pusha
pop
inc
xor
jle
ja
aad
repz
stos
loope
scas
out
or
loop
bnd
adc
mov
movs
jbe
cmp
mov
daa
adc
push
pop
imul
or
sbb
xchg
iret
cmp
push
pop
test
addr16
sub
push
add
dec
scas
scas
sub
sbb
add
xchg
adc
data16
ret
and
cdq
and
nop
dec
(bad)
add
xchg
sub
sub
(bad)
xor
shr
std
aad
jg
push
fdivr
dec
mov
mov
test
mov
xor
fidivr
leave
xchg
dec
call
cwde
test
pop
int
add
jmp
cmp
mov
xor
jl
adc
push
xor
lods
jle
in
push
and
ss
and
xor
stc
fistp
push
je
out
aas
xchg
mov
ds
int
adc
lock
enter
mov
jns
mov
push
cli
je
out
push
push
mov
(bad)
out
cmp
idiv
out
in
outs
inc
les
and
lds
mov
mov
stos
sub
test
inc
out
add
sbb
sbb
mov
or
stos
jl
mov
outs
jnp
mov
pop
inc
xor
cld
nop
xor
unpcklps
jge
dec
xor
sbb
sahf
push
cmp
adc
inc
and
iret
mov
mov
xchg
sbb
xlat
jmp
mov
push
fild
push
dec
ins
ficom
jb
retf
and
cmps
adc
mov
data16
(bad)
dec
(bad)
fst
adc
jne
sbb
js
xor
jnp
mov
out
sbb
sahf
mov
inc
xor
cli
adc
adc
lock
push
push
test
push
es
mov
pop
pushf
xor
repz
stos
dec
sbb
cmp
add
sar
cdq
pushf
sbb
(bad)
pushf
fldlg2
std
loopne
mov
or
sbb
sbb
xlat
add
inc
cmp
jnp
pop
push
fdivr
mov
je
pop
(bad)
xor
ret
xlat
cmp
es
pop
lock
sub
jmp
pop
inc
mov
xchg
push
mov
adc
mov
mov
jp
addr16
inc
test
std
xchg
mov
in
mov
cld
jbe
mov
push
iret
ja
out
dec
int3
out
xchg
pop
xor
movs
adc
jmp
aas
fwait
scas
pushf
out
fbstp
loop
jecxz
cdq
fs
data16
sbb
mov
retf
mov
inc
icebp
xor
aas
sbb
(bad)
bound
(bad)
pop
or
pop
lods
jl
aas
and
jg
int3
cli
pusha
fwait
aaa
jbe
mov
inc
xchg
aam
sahf
jmp
mov
into
mov
pop
xchg
fs
push
int3
and
or
jne
nop
xchg
adc
retf
stos
sub
pushf
jno
mov
xchg
call
xor
jg
or
sti
add
jae
rcl
dec
mov
out
push
aam
or
xchg
sar
xchg
jo
pop
cs
and
xor
mov
repnz
test
xchg
addr16
ins
pop
clc
and
jecxz
outs
jmp
xchg
add
mov
dec
cld
ficomp
mov
jb
out
test
mov
adc
pop
lea
jg
pop
jo
xor
adc
add
mov
jl
test
retf
test
popf
cmp
sbb
add
aas
jl
fistp
sub
mov
xchg
dec
mov
ja
addr16
loope
push
pop
push
mov
outs
pop
pop
push
adc
xchg
adc
call
(bad)
dec
out
leave
dec
fcom
xchg
fs
pop
push
cmp
xor
pop
and
fcmove
es
mov
xchg
add
cmps
mov
xchg
pop
cmp
xor
js
jmp
cwde
test
gs
inc
pop
imul
sub
outs
inc
dec
out
xor
mov
sub
leave
rcl
jno
mov
adc
jmp
(bad)
lods
into
mov
mov
jmp
dec
mov
stos
movs
jno
add
pushw
cld
sti
xchg
pop
and
stos
scas
out
push
mov
jle
xor
test
rol
cwde
ret
sbb
pop
sbb
movs
cmps
out
js
inc
enter
sbb
rcl
dec
out
fld
mov
inc
cld
clc
mov
adc
mov
shl
test
or
mov
hlt
mul
imul
test
sar
pop
xlat
cmp
shl
retf
test
push
cmp
ss
into
(bad)
xchg
call
std
sbb
std
jno
xchg
out
sbb
jno
sub
sbb
daa
xchg
(bad)
dec
dec
jns
cmps
or
mov
mov
shl
mov
lods
xchg
in
push
aaa
cmp
adc
cs
arpl
jnp
lods
xchg
movs
ins
lea
push
aam
repnz
sti
push
imul
jnp
push
imul
xor
call
(bad)
xchg
movs
and
ror
jo
sbb
dec
xchg
xor
in
and
out
cmps
inc
sub
xlat
pop
mov
adc
mov
push
xchg
push
add
into
dec
or
gs
loop
inc
and
or
and
inc
xchg
rcl
inc
sbb
xchg
pop
mov
mov
daa
not
loopne
adc
ror
shl
xchg
xchg
cwde
(bad)
cmp
cmp
inc
push
and
push
jmp
out
nop
js
xchg
pop
or
pusha
push
es
inc
mov
fiadd
shl
mov
retf
push
inc
test
jge
inc
adc
and
pop
lds
dec
add
xlat
mov
jnp
or
xchg
mov
hlt
(bad)
call
push
call
and
or
lahf
pop
movs
inc
xchg
push
sub
and
repz
(bad)
sar
ja
loope
jmp
sub
pop
cwde
xor
cbw
sub
dec
inc
push
xlat
cmp
shl
and
test
les
popa
push
(bad)
imul
hlt
pop
es
jae
cmps
mov
sbb
mov
out
jmp
add
or
popa
ins
aam
lahf
and
jmp
xchg
stos
aas
stos
addr16
(bad)
mov
and
clc
dec
adc
sub
mov
xchg
popa
mov
cdq
dec
addr16
pop
inc
pusha
pop
mov
or
test
out
std
xor
shl
ds
jbe
int3
pop
push
dec
(bad)
and
fidivr
mov
or
push
and
pusha
movs
out
push
sub
sti
xchg
sub
mov
pop
cwde
sbb
dec
sbb
pop
cmp
mov
cwde
sbb
and
scas
push
adc
popa
and
into
mov
ficom
mov
imul
leave
add
(bad)
jp
xchg
mov
mov
mov
in
in
or
sub
test
lock
fbld
push
ret
sbb
mov
and
pop
jo
cmp
sbb
mov
movs
xchg
fsub
mov
mov
push
jb
fimul
add
jecxz
add
ins
xor
jo
pop
cmp
leave
(bad)
sub
lds
inc
popf
mov
cmp
mov
dec
pop
xor
imul
and
push
add
popf
sbb
repnz
out
pop
jecxz
cmp
mov
shl
pop
in
mov
mov
cs
pusha
pop
(bad)
cmp
adc
dec
pop
into
sub
sbb
sti
ins
inc
mov
jbe
sub
inc
sbb
cli
inc
sbb
mov
aas
cmps
fwait
adc
push
mov
fwait
cmps
cmp
test
sti
mov
lods
jae
cld
jno
dec
pop
push
and
sbb
push
pop
stc
cmp
fs
fwait
movs
and
jge
mul
mov
(bad)
mov
div
mov
repnz
pop
or
inc
or
sbb
out
xchg
mov
pushf
clc
ret
mov
or
inc
add
or
mov
inc
xchg
outs
add
retf
cs
ror
mov
pop
aad
test
div
popf
mov
pop
test
push
js
lahf
cmp
or
jg
dec
jmp
dec
and
sbb
dec
jle
xlat
mov
jbe
mov
push
lds
out
fisubr
mov
fcomp
pusha
pop
sbb
pop
or
mov
stos
or
stos
mov
mov
jge
jno
imul
mov
test
xchg
fisub
loopne
lods
ins
push
ins
enter
fwait
push
jno
fwait
cmp
hlt
outs
cmp
aas
ret
pop
mov
int3
leave
sti
push
and
fadd
mov
jle
mov
ds
xor
add
adc
jmp
sbb
xor
cmp
stos
mov
and
daa
pop
imul
xchg
push
js
cmp
imul
jae
jmp
dec
mov
ins
cmp
cmp
mov
je
stc
sub
sbb
aaa
or
pusha
mov
stc
push
imul
or
pop
sub
mov
mov
cmc
mov
hlt
push
fcom
(bad)
fdivr
xlat
sbb
mov
nop
xor
retf
dec
(bad)
mov
and
add
xchg
shl
addr16
fwait
(bad)
sub
pop
mov
in
cli
pop
pusha
lods
sub
xchg
jae
xor
add
inc
pop
imul
jecxz
mov
push
sbb
sbb
rcr
repz
rcr
hlt
mov
pop
fsub
inc
out
fs
movs
pusha
cmp
pusha
cli
(bad)
cmp
fld
mov
js
sub
jns
in
test
inc
or
out
setnp
test
adc
mov
push
ret
pop
add
movs
inc
movs
mov
add
fsubp
xor
and
arpl
and
dec
xchg
mov
loop
mov
div
jmp
add
shr
call
mov
ja
mov
push
jmp
mov
inc
aad
jnp
xchg
out
(bad)
xor
pop
out
out
mov
aam
(bad)
pushf
mov
hlt
mov
mov
in
sahf
scas
loop
push
(bad)
sbb
push
mov
jle
test
jmp
cmp
out
test
jo
in
pop
inc
cmps
sbb
retf
inc
adc
mov
push
pop
add
mov
and
add
adc
mov
xlat
pop
pop
pop
sar
jg
jl
mov
cmp
bound
clc
ds
inc
and
mov
shr
or
jmp
pop
xor
(bad)
lods
lods
mov
cmp
jmp
daa
xor
scas
xor
inc
stos
jo
mov
mov
lock
push
jne
cmp
and
mov
ret
or
xchg
pop
(bad)
(bad)
stos
xchg
(bad)
nop
cli
sti
inc
jecxz
test
loopne
pop
adc
pop
iret
cmp
mov
sbb
into
ror
mov
scas
lock
jl
loope
cmp
ins
push
or
shl
in
xchg
adc
gs
stos
out
arpl
dec
std
das
cwde
or
movs
shl
inc
push
pushf
sti
lea
xor
dec
inc
xor
xor
outs
pop
xor
and
ja
pop
mov
fdiv
jmp
jg
(bad)
(bad)
cmp
cmp
lea
add
push
jnp
je
add
lock
fimul
xchg
xchg
xchg
or
dec
retf
inc
xor
repnz
repnz
data16
and
jmp
xor
cld
fld
push
test
push
popf
sbb
jmp
pusha
jae
sahf
mov
dec
ret
mov
loop
xor
inc
(bad)
mov
pop
not
lods
scas
mov
pop
pusha
inc
iret
rol
jb
xchg
mov
retf
lock
dec
sub
xchg
push
inc
jmp
call
jle
inc
movs
iret
cld
popf
repz
xchg
mov
mov
push
cmps
mov
ja
pushf
lea
push
add
adc
mov
bound
push
fwait
call
into
push
aas
jne
popf
rol
xor
ret
xor
pusha
adc
(bad)
mov
pop
sbb
push
sbb
ss
or
mov
(bad)
mov
add
and
cmps
mov
lds
nop
popf
or
lahf
inc
push
test
mov
pop
sbb
mov
sbb
icebp
mov
push
aad
xchg
cdq
outs
dec
fadd
mov
repnz
sti
or
fist
push
daa
cmp
or
jl
repnz
mov
mov
cmc
cmps
mov
test
int3
mov
mov
cmps
out
fwait
cwde
in
fnstenv
fisubr
sub
jns
rol
and
movs
inc
add
outs
std
mov
mov
hlt
jg
clc
movs
stc
arpl
(bad)
rcr
add
mov
leave
adc
inc
push
in
add
fs
jge
test
sub
in
test
scas
cs
jmp
shr
xor
arpl
fld
push
sub
aas
(bad)
cli
int3
push
push
clc
and
pop
loopne
mov
cmp
mov
mov
fs
data16
mov
push
(bad)
sti
neg
xor
repz
inc
xlat
mov
cmp
mov
mov
mov
adc
or
pushf
fwait
mov
sbb
fwait
xchg
ret
xchg
cmp
lods
sbb
push
mov
fsub
dec
(bad)
cmp
js
cmps
call
mov
lds
cs
jg
je
pushf
xchg
push
push
and
in
ss
into
mov
cmps
aaa
add
push
cmp
and
pop
out
mov
sbb
push
push
ins
fidiv
jg
sbb
sub
pop
popf
xor
xchg
xchg
or
add
mov
jnp
and
pop
ror
add
imul
jb
loop
lds
dec
aam
jb
jnp
add
cld
or
inc
ja
std
bound
jge
lea
pop
and
and
mov
jns
and
inc
mov
cmps
and
call
outs
sti
fs
hlt
ret
cs
call
rcr
leave
lods
fwait
jno
bound
pusha
and
pop
mov
movs
jmp
dec
mov
(bad)
idiv
test
cmp
mov
ja
out
(bad)
fcomi
xor
dec
and
test
xlat
inc
push
out
retf
ss
jle
std
dec
add
dec
xor
jno
pop
xchg
push
jmp
loop
inc
dec
retf
jge
and
xchg
mov
dec
and
lods
mov
invd
ins
shr
push
cmp
test
mov
jge
xor
lods
or
rcr
adc
ins
or
or
(bad)
loopne
jb
lods
mov
pop
pop
inc
dec
push
jno
sbb
pop
aad
and
not
stos
ja
xchg
and
retf
pop
pop
inc
rcl
sbb
adc
jb
dec
mov
fcomp
lds
adc
mov
aam
stos
cmp
aad
mov
sub
cwde
gs
mov
fwait
mov
push
loop
fsubrp
push
or
fbstp
pop
pop
xchg
mov
push
mov
cmp
jno
lods
push
ins
(bad)
call
cdq
jb
fwait
rcr
xor
jmp
test
mov
xchg
lods
pop
mov
push
or
dec
xchg
add
in
xor
and
jo
xor
pop
repz
xchg
push
mov
inc
icebp
push
push
jmp
hlt
dec
pop
add
(bad)
ret
sbb
sub
jecxz
sub
mov
std
push
in
icebp
popa
sbb
shr
mov
inc
jge
or
(bad)
pop
push
pop
sub
jb
movs
adc
mov
jbe
sbb
xchg
mov
loop
ficomp
xchg
addr16
(bad)
mov
jne
xchg
loopne
mov
push
push
scas
daa
push
es
add
cmp
jne
out
fwait
or
aam
movs
fwait
hlt
mov
add
pop
out
mov
push
ja
mov
mov
push
dec
pop
mov
out
add
xchg
dec
fcmovu
add
xlat
add
and
fucomi
adc
xlat
mov
jp
add
fiadd
dec
inc
call
jne
sub
add
movs
adc
xor
mov
rcl
not
outs
add
mov
mov
inc
mov
jb
xchg
imul
sbb
fisttp
pop
icebp
sbb
test
pusha
retf
inc
ins
(bad)
fwait
cmc
jae
leave
jecxz
gs
or
cmp
das
lahf
call
imul
aaa
ins
in
add
aam
mov
cmp
jge
mov
push
fldcw
mov
pusha
fisub
mov
jle
push
loopne
popf
das
pop
fnstcw
pop
stos
sbb
xchg
mov
je
cmp
and
xor
sub
xchg
stos
rcl
inc
xchg
sbb
inc
adc
fwait
mov
fisttp
les
stos
cmp
adc
stos
lea
jmp
or
push
xchg
jbe
sub
jns
mov
loopne
loop
cmp
mov
sbb
into
iret
adc
int3
push
fst
cli
nop
sub
fild
fwait
add
or
mov
shr
popf
cmps
ret
pop
pop
popa
or
das
mov
or
fdivr
loopne
enter
fist
and
movs
mov
(bad)
mov
test
fimul
adc
add
dec
adc
adc
int3
ror
mov
das
push
enter
adc
mov
mov
mov
push
jo
into
cli
ins
xor
cmp
test
stos
jno
pop
dec
xor
mov
inc
ins
ja
cmp
scas
mov
adc
aad
mov
(bad)
jo
push
cmps
jb
test
arpl
aad
adc
js
and
xchg
xchg
xchg
clc
mov
(bad)
imul
dec
cdq
add
(bad)
rcl
xchg
imul
inc
ror
repnz
dec
ret
cmps
or
mov
out
out
stos
jmp
out
outs
mov
jmp
xchg
add
out
test
sar
or
dec
and
inc
hlt
and
push
pop
je
and
aad
jmp
data16
add
sub
adc
pop
cmp
cmp
aaa
mov
inc
or
stos
movs
sti
dec
call
sub
xchg
xor
push
jne
or
jg
xlat
(bad)
mov
fs
push
outs
or
loopne
imul
jo
push
pop
xor
pop
gs
or
cmp
outs
add
mov
add
icebp
pop
inc
add
ds
or
dec
ficomp
loopne
movs
jmp
call
mov
nop
add
cmp
pop
mov
imul
mov
dec
ds
imul
or
jmp
in
sahf
sub
cmp
cmovge
stc
daa
rcr
lea
repz
mov
neg
mov
addr16
pop
xchg
(bad)
rcr
bound
dec
loop
push
push
scas
adc
sbb
in
sbb
jmp
jg
fcmove
add
mov
hlt
mov
popa
mov
je
dec
neg
in
repnz
movs
jl
movs
jo
jl
dec
mov
or
in
loopne
push
xchg
or
sbb
or
push
mov
push
and
xor
xor
mov
aam
cld
rep
lods
mov
retf
mov
pop
adc
add
into
leave
mov
(bad)
sub
mov
mov
std
in
inc
ja
pop
mov
fndisi(8087
dec
dec
inc
cmp
or
and
(bad)
or
cs
loope
out
cld
mov
xchg
leave
mov
popa
popf
mov
clc
sbb
scas
cmp
mov
mov
and
inc
xchg
addr16
push
xor
aaa
jle
add
rol
pop
pop
enter
mov
and
dec
nop
mov
pushf
mov
xchg
adc
pop
cdq
fs
pop
jmp
and
or
mov
icebp
jns
jno
xchg
stos
(bad)
js
jl
lods
fsub
xor
lods
cmp
ret
add
or
std
fdiv
push
stc
stos
hlt
mov
xor
xor
fcmovnbe
jno
nop
adc
test
sbb
mov
or
mov
pop
inc
push
lods
inc
lahf
mov
rcr
scas
adc
les
test
ret
and
gs
imul
mov
pop
jmp
xlat
mov
(bad)
ja
adc
or
jo
inc
xchg
adc
or
sub
jl
xor
push
xchg
shl
and
and
or
cdq
jb
stc
adc
cli
xor
inc
mov
addr16
jg
repz
call
inc
scas
stos
sbb
adc
jl
xor
iret
sbb
into
call
add
pop
inc
mov
jo
xchg
pop
ret
mov
leave
clc
dec
pushf
inc
push
ins
or
mov
aaa
push
pop
sti
punpckhbw
xlat
push
test
div
sub
add
sbb
xlat
mov
jns
xor
cmp
xor
xchg
pop
cmp
sub
push
xor
and
jge
fnstenv
je
test
push
popa
test
daa
jge
bound
rcr
mov
out
add
push
fsubr
rcr
into
add
(bad)
repnz
or
cmc
ret
dec
and
inc
pop
(bad)
scas
cmp
les
adc
sbb
jmp
mov
or
inc
mov
sbb
iret
cli
push
adc
cmc
into
adc
popa
fisttp
push
stos
clc
call
and
rcl
loop
cwde
in
shl
inc
pop
mov
popf
fmul
(bad)
sub
mov
jmp
jmp
mov
shl
ret
push
jl
xchg
push
dec
cwde
mov
push
sbb
mov
mov
push
fstp
(bad)
or
mov
pop
mov
sub
(bad)
xchg
and
repnz
and
ror
dec
aas
test
int
scas
addr16
jmp
xor
and
add
or
sti
div
sti
addr16
shr
mov
mov
mov
fild
fisub
xor
pop
jbe
cmps
icebp
ja
jmp
push
es
daa
pop
inc
cmp
aam
mov
push
mov
loope
inc
push
mov
mov
add
jno
dec
outs
shl
sbb
ret
iret
ins
adc
test
ja
jmp
lds
xchg
pusha
dec
push
repz
push
loop
daa
(bad)
mov
pop
popa
sti
loop
adc
fdiv
ja
scas
test
mov
ins
add
and
ror
ret
cmp
cmp
xchg
add
mov
push
jbe
and
lds
or
in
(bad)
fbld
dec
jmp
ror
icebp
adc
mov
or
imul
aas
push
xor
cmp
xlat
push
(bad)
repnz
repnz
inc
jle
jns
popa
dec
sbb
jne
div
or
pushf
mov
shl
cmp
inc
sbb
mov
in
sub
xor
ret
hlt
cmp
jge
add
add
es
retf
cli
std
shr
in
cs
sahf
rol
dec
mov
nop
pop
sti
lahf
pop
inc
dec
pop
cmp
sar
inc
sbb
adc
mov
sbb
outs
push
inc
inc
call
mov
fbstp
mov
test
cli
dec
ror
and
dec
movs
cli
mov
sub
loopne
push
repnz
pop
or
stos
sbb
mov
xor
repz
int
and
idiv
es
lea
inc
out
inc
jp
ins
std
outs
mov
cmp
adc
loope
mov
pop
mov
(bad)
push
sub
jno
loope
xchg
fisttp
jne
mov
data16
(bad)
push
inc
push
pop
or
add
push
jl
or
adc
call
fisttp
mov
shl
or
dec
dec
aad
push
or
cmps
jno
loope
inc
adc
add
(bad)
in
dec
cmc
and
jns
inc
movs
fstp
inc
jb
mov
mov
ror
or
pop
cwde
push
inc
in
cmps
inc
adc
add
push
rcr
sub
mov
pop
popf
nop
sub
leave
test
ror
test
inc
(bad)
mov
in
lock
sub
dec
stos
(bad)
les
cli
cwde
ins
cmps
lahf
push
(bad)
repnz
cmp
and
cs
pop
and
(bad)
stos
mov
push
cdq
cmp
jmp
adc
sub
cld
popa
cwde
pop
sbb
cmp
push
adc
ret
and
mov
push
mov
mov
(bad)
imul
sbb
mov
pop
(bad)
mov
or
xchg
pop
fistp
cdq
xchg
jle
or
cli
repnz
adc
mov
inc
in
xchg
adc
sub
xchg
inc
push
xchg
mov
sbb
inc
adc
popf
xchg
push
inc
shr
mov
sbb
pop
and
rol
jmp
inc
mov
lods
push
movs
cli
mov
shr
mov
dec
(bad)
shl
mov
push
mov
inc
outs
mov
sub
xor
mov
and
in
cmc
fcomp
sbb
push
mov
mov
loope
loope
mov
mov
inc
adc
push
(bad)
out
pop
pop
and
rcl
push
(bad)
sub
pop
mov
jnp
out
jmp
enter
cmp
enter
popa
push
out
les
push
add
sub
fwait
mov
sbb
mov
movs
gs
cs
pop
test
das
clc
mov
and
fst
cld
mov
mov
xchg
test
fild
dec
clc
push
jmp
test
or
nop
jnp
push
mov
mov
(bad)
sub
cmp
xchg
scas
in
inc
mov
jecxz
push
and
xor
cs
jg
ja
xor
cmps
mov
in
sti
imul
int
jg
fnstcw
pop
bound
and
add
(bad)
ds
call
cs
mov
xchg
clc
or
daa
xchg
aas
pop
adc
daa
aad
xchg
xchg
push
pop
dec
out
add
pop
or
xlat
retf
call
cmp
xchg
imul
push
adc
rcl
outs
shl
jno
retf
(bad)
mov
sub
out
aad
mov
call
es
pop
int3
mov
jle
jecxz
jl
jo
fldcw
mov
adc
jns
dec
jnp
inc
push
and
or
int3
and
xchg
pushf
pop
fsub
leave
mov
rcr
clc
pop
ds
popa
daa
pop
icebp
adc
mov
jns
(bad)
(bad)
loop
fcom
ss
jbe
loope
cwde
mov
xchg
mov
push
arpl
mov
mov
imul
push
inc
shr
dec
jo
jbe
sub
sbb
mov
retf
(bad)
lds
cmp
or
mov
xor
loop
outs
inc
popf
mov
adc
jo
aaa
xlat
cmps
push
loopne
mov
ja
daa
scas
imul
inc
dec
ja
scas
dec
js
cwde
sub
xchg
cmps
nop
ret
xor
stos
push
ret
mov
sub
movs
dec
push
jns
pop
(bad)
cmp
in
mov
bound
push
mov
call
add
mov
stos
clc
(bad)
xchg
mov
cmps
scas
lods
(bad)
ins
mov
fnstcw
adc
jmp
mov
push
add
rol
push
fimul
jb
jb
div
or
cmp
fwait
sub
(bad)
cmp
mov
push
add
push
mov
adc
sbb
fisttp
cmp
xchg
dec
daa
sti
push
adc
mov
xor
lods
movs
or
dec
jge
xor
inc
jmp
cmp
sub
and
stos
push
mov
jl
dec
daa
dec
jp
mov
fdivr
add
and
cmp
cs
cdq
imul
and
movs
movs
repz
jl
imul
sbb
xrelease
dec
fwait
and
fisub
ss
(bad)
jbe
in
dec
jmp
gs
jbe
pop
aaa
adc
or
cdq
add
in
sbb
jmp
das
jmp
sbb
pop
pminub
ror
mov
shl
es
adc
jo
pushf
test
call
jle
fidiv
ret
add
mov
ror
dec
add
pop
push
jbe
push
jae
dec
mov
mov
aam
lods
xchg
out
mov
cmp
inc
dec
inc
jbe
xor
ret
popa
lea
and
cmps
add
mov
mov
mov
ins
xor
rcl
mov
fcom
in
xchg
retf
(bad)
dec
ret
pop
push
mov
mov
add
mov
ss
sbb
xor
sub
fbstp
jmp
adc
mov
out
pop
sti
imul
mov
retf
mov
ins
stc
pusha
sub
fucomi
dec
fld
adc
dec
retf
(bad)
add
pop
mov
aas
jl
outs
jmp
shl
or
dec
adc
dec
and
daa
outs
push
outs
pushf
(bad)
test
sub
lea
jne
xor
cmp
out
retf
stc
xchg
popf
movs
mov
sti
sbb
dec
inc
fstp
push
xor
inc
popa
stc
arpl
movs
adc
jl
add
fimul
cmc
sub
into
jle
lahf
inc
out
popa
test
push
stos
lea
xchg
movs
sahf
jnp
xor
jmp
push
rol
add
jmp
and
into
mov
pop
xor
enter
imul
cli
int3
outs
in
dec
xor
cmp
leave
nop
push
fdivr
out
jle
aad
retf
and
sbb
cmp
or
sub
inc
ficomp
or
dec
adc
stos
push
repz
or
popf
pop
push
mov
daa
sbb
sti
dec
dec
(bad)
jnp
faddp
mov
call
jno
das
jg
in
or
or
mov
loopne
out
mov
cdq
dec
(bad)
sbb
imul
push
icebp
push
xor
scas
daa
iret
aam
stc
outs
daa
or
xchg
out
mov
jg
add
stc
scas
mov
call
lock
pop
cli
or
cli
cmc
(bad)
out
test
jp
pop
xchg
add
jne
pop
mov
sbb
push
dec
scas
sub
inc
aad
mov
cli
ins
(bad)
mov
sbb
mov
(bad)
icebp
lea
and
test
and
lds
clc
and
mov
jmp
outs
pop
inc
or
(bad)
ja
dec
outs
mov
loope
xor
jno
ds
xor
ret
jecxz
sub
jne
cli
mov
mov
fdiv
and
sahf
mov
not
dec
jg
jmp
pop
xchg
mov
jge
mov
mov
push
sub
adc
cmc
mov
pop
jbe
and
mov
movs
pop
adc
mov
xchg
movs
xchg
test
clc
pop
sbb
cmp
push
shl
fnstenv
sahf
shl
repnz
inc
mov
loopne
mov
aad
retf
stos
jbe
mov
jmp
jmp
(bad)
jae
leave
or
outs
scas
aaa
retf
pop
scas
adc
add
dec
xchg
fadd
mov
cmps
add
sbb
dec
xlat
repz
xor
aam
mov
jmp
(bad)
jecxz
mul
push
jge
pop
and
lds
(bad)
add
dec
or
adc
in
xor
cdq
jmp
aad
ja
add
ins
add
stos
cli
or
dec
adc
jecxz
pop
fstp
xchg
int
fsub
pop
mov
fstp
add
sar
fdiv
outs
jo
jp
and
mov
lds
mov
push
sub
pop
cmp
std
and
xor
movs
fwait
and
leave
popa
stos
fstp
repnz
outs
push
mov
sub
(bad)
mov
stos
sub
ficomp
sahf
btr
out
retf
sbb
inc
add
test
push
rol
mov
pop
lods
daa
xor
pop
cmp
pusha
repz
or
std
int3
xchg
pop
repz
sar
es
jmp
stos
push
xchg
inc
push
aas
add
adc
outs
pop
dec
jecxz
call
in
jmp
xor
nop
int3
aaa
mov
add
fisub
mov
mul
jp
(bad)
cli
pop
ds
adc
adc
adc
inc
sub
push
mov
test
dec
xor
mov
dec
lahf
ret
cli
cmps
retf
jae
loopne
pop
ss
fsub
push
inc
add
test
ret
and
sub
adc
cwde
xor
push
pop
ret
fwait
icebp
or
aas
str
call
sub
sar
or
aaa
es
aas
pop
dec
xor
xor
or
sub
lock
pushf
jmp
and
or
or
cs
xor
lock
jo
hlt
fadd
lea
jmp
fs
jmp
je
inc
and
lock
rcr
mov
add
imul
and
mov
xor
in
jecxz
push
out
add
add
jno
xor
mov
es
test
jne
aam
(bad)
not
lods
int3
push
and
xchg
movs
pop
dec
call
cli
(bad)
hlt
cli
sub
out
hlt
rcl
nop
push
push
inc
inc
out
(bad)
xchg
enter
jb
pop
dec
jnp
(bad)
inc
mov
sub
inc
jnp
je
sub
push
or
sub
dec
jno
aam
xchg
nop
mov
lea
cmp
push
mov
or
cmps
sbb
inc
fld
movs
mov
push
mov
loope
mov
test
dec
sbb
arpl
daa
fidivr
fisttp
pop
popf
jle
sbb
(bad)
nop
test
mov
push
inc
mov
adc
fdivr
jb
mov
int
gs
jno
mov
pop
pop
scas
and
arpl
and
mov
fdiv
movs
jno
gs
(bad)
fsubr
xchg
loop
test
xchg
mov
ins
mov
dec
cmp
add
and
inc
push
sti
stos
push
dec
div
adc
push
sub
out
lods
add
xor
ss
sar
xchg
call
xchg
cmp
push
xchg
mov
sbb
cld
dec
fisub
mov
js
add
cmp
pop
jbe
jge
out
and
shr
xchg
adc
or
adc
mov
jle
and
mov
ret
jmp
cmp
sub
cmp
sbb
imul
retf
outs
(bad)
bound
stos
dec
popf
sub
add
xor
pop
mov
mov
xchg
and
stc
inc
push
xchg
sub
icebp
movs
lock
(bad)
aad
stos
mul
out
cdq
adc
push
jmp
je
add
add
xchg
mov
out
push
jp
jae
or
mov
fsubr
sub
daa
mov
cs
ja
arpl
cmp
retf
xor
xchg
loop
sub
pop
mov
ins
cmp
jge
stos
fwait
adc
ins
xor
pop
add
sub
or
and
sahf
sbb
fnstcw
aad
cwde
mov
mov
push
gs
xchg
out
sub
addr16
mov
in
fistp
lds
and
into
xor
lods
sub
xor
test
stos
out
jo
aad
js
xor
in
std
shr
fisttp
mov
call
sbb
or
jecxz
int
mov
push
bound
shl
ss
jbe
sub
ret
pop
jno
xchg
or
bound
arpl
jne
or
imul
add
sbb
fisttp
es
push
sub
xchg
and
data16
adc
and
jmp
lods
or
cmp
add
aam
push
lahf
repnz
dec
das
xchg
jle
out
xchg
sbb
mov
lahf
xchg
lds
std
ins
nop
sbb
js
lods
out
jge
dec
sbb
in
imul
cmc
arpl
jecxz
adc
mov
out
icebp
fimul
js
sbb
loop
jl
loop
dec
sbb
stos
mov
cdq
rol
push
mov
or
or
mov
adc
adc
sub
mov
sar
cmps
xchg
in
jae
dec
fdivr
ror
lock
lods
mov
mov
cmp
test
mov
jle
fistp
mov
test
(bad)
pop
(bad)
rcr
sub
jns
call
or
pop
pop
ret
jecxz
cwde
xchg
in
nop
sub
call
mov
and
leave
cmp
xor
inc
mov
mov
or
pop
pusha
dec
aaa
in
jb
add
jecxz
push
add
push
fstp
bound
push
xchg
adc
lods
cmps
mov
sbb
js
int3
sub
sahf
pushf
pop
(bad)
cmp
mov
int
sbb
repnz
cmp
ins
inc
mov
cmp
xchg
jecxz
test
xlat
lock
out
jae
lds
add
mov
mov
mov
sbb
ret
jo
or
add
fld
icebp
scas
lea
shl
sbb
scas
push
imul
jmp
popf
pop
test
xor
iret
dec
push
or
push
sbb
add
movs
stos
in
ja
pop
dec
and
jnp
or
aaa
scas
fsubrp
fsub
inc
in
repnz
pop
fmul
adc
pop
(bad)
sti
lahf
cwde
or
or
out
ficomp
fucomp
dec
sar
daa
sldt
jb
inc
lock
mov
(bad)
sbb
pop
lods
sub
arpl
stos
cmp
inc
jecxz
jl
pop
pop
sbb
jmp
adc
xchg
mov
or
das
dec
jp
add
xor
mov
out
mov
xor
lods
pushf
push
mov
sbb
(bad)
push
sar
movs
outs
xchg
mov
sbb
push
lock
or
xchg
cmp
pusha
mov
add
push
retf
cmp
sub
adc
push
mov
test
and
sbb
and
mov
cmps
xlat
cmps
jle
cmps
push
push
or
out
mov
cli
cdq
sbb
cdq
pop
call
ja
sbb
and
lods
mov
cli
cdq
jmp
xchg
xchg
retf
dec
cmps
fbld
test
ret
or
out
ret
sbb
mov
mov
outs
ror
test
cdq
(bad)
xchg
loope
ss
jp
adc
(bad)
test
imul
mov
mov
lock
shl
add
or
pusha
in
mov
inc
or
popa
mov
shl
adc
add
sbb
adc
cmp
xchg
adc
(bad)
ins
call
mov
fisub
cmp
sub
test
je
stos
jo
mov
xor
cmps
mov
jge
xor
sbb
adc
add
xchg
cdq
out
mov
push
sub
ss
sbb
mov
adc
inc
movzx
div
into
fisubr
dec
je
cmp
jno
cmp
lahf
outs
movs
and
sub
inc
sub
mov
add
mov
mov
mov
je
xchg
sbb
pop
not
sub
xchg
mov
scas
inc
scas
fbstp
xchg
jb
stos
nop
inc
inc
aas
inc
cli
loope
adc
fmul
sbb
mov
xchg
imul
xor
pushf
jbe
lods
mov
push
(bad)
adc
push
mov
adc
inc
cmp
mul
sbb
pop
movs
std
outs
fs
and
xchg
pusha
sbb
gs
imul
sub
jbe
dec
xor
sbb
push
mov
inc
cmp
(bad)
es
cmp
sub
mov
rol
fcmovne
out
push
pop
aam
pop
enter
ficom
ror
popa
mov
pop
cmp
jns
sub
aaa
fisttp
in
add
cmp
push
test
push
add
push
xor
xor
fld
mov
mov
xchg
fbld
int
inc
sar
dec
inc
sub
jle
mov
jo
out
mov
dec
and
jg
(bad)
xchg
sar
ror
js
dec
xor
mov
cmp
sub
lods
jo
rol
ins
pop
sbb
fidivr
sub
loopne
and
(bad)
cs
dec
fnstenv
adc
jb
cwde
dec
out
int3
out
call
push
dec
pop
data16
push
xor
and
and
repz
in
aam
sbb
(bad)
ds
inc
inc
push
cmp
loopne
je
icebp
push
stos
(bad)
sbb
sbb
daa
xchg
or
mov
(bad)
std
sub
adc
sub
mov
es
mov
xchg
fcomp
sbb
jmp
cmp
dec
jns
push
mov
mov
xchg
mov
add
lahf
imul
es
xchg
xchg
das
sbb
movs
cmp
mov
clc
shl
cmps
adc
inc
jp
call
(bad)
push
mov
push
pop
xchg
adc
arpl
jecxz
repz
inc
aas
popa
xor
pop
jmp
outs
jg
add
sbb
out
pop
mov
jbe
fwait
dec
mov
icebp
pop
gs
cli
loope
neg
jg
mov
sub
in
repz
sahf
xor
test
(bad)
sbb
xor
cmc
js
cmp
xor
scas
cmps
fnstenv
xor
fcom
cmps
cli
sub
imul
and
stos
test
aad
adc
sbb
daa
jge
pmulhuw
into
push
xchg
sub
outs
jno
ja
jp
call
lds
push
enter
into
add
dec
pop
ret
and
int3
gs
test
add
add
outs
dec
pushf
jmp
mov
sbb
popf
pxor
or
jl
inc
mov
add
fs
mov
or
rcl
(bad)
(bad)
pop
into
pop
or
stos
pop
addr16
dec
leave
sbb
push
and
loope
or
mov
scas
jg
push
pop
fist
movs
adc
cmp
and
aad
jmp
cmp
into
xor
jnp
and
aam
es
sbb
and
and
or
push
or
sub
imul
dec
enter
hlt
adc
imul
cmp
enter
and
add
pop
ss
jae
sub
push
or
pop
imul
lahf
jb
(bad)
ds
stos
xchg
xchg
jl
cli
mul
std
mov
push
out
sbb
outs
in
inc
loope
fcom
sbb
xchg
enter
mov
movs
retf
and
or
(bad)
leave
ret
xchg
xor
fcomp
leave
or
or
cmc
or
fnstcw
gs
lahf
nop
loop
sbb
in
inc
inc
jg
(bad)
jge
pop
mov
jmp
push
jecxz
adc
pop
mov
fisub
cld
xchg
xchg
mov
hlt
mov
xchg
dec
dec
(bad)
sbb
sub
push
sub
pop
cmp
or
mov
out
xor
jge
push
test
in
xor
in
push
cmp
hlt
dec
add
push
retf
or
popf
xchg
int3
add
jb
dec
pop
hlt
push
stos
retf
sub
sbb
xor
scas
sbb
imul
retf
inc
xor
mov
inc
pusha
ins
pop
neg
xchg
movs
fimul
and
xchg
(bad)
pop
mov
in
test
cmps
add
loopne
cmp
and
and
sub
movs
xor
(bad)
dec
sbb
inc
pop
and
adc
sbb
mov
mov
and
les
ins
sub
mov
in
cmp
jae
mov
xor
add
out
mov
stos
push
test
jle
in
in
ss
jg
inc
mov
cdq
and
adc
ja
sub
sbb
and
adc
jmpw
jle
clc
jmp
sbb
cmp
idiv
pop
movs
lods
outs
dec
or
cmp
cmp
cmp
mov
js
fcom
cmps
dec
cmp
xor
ins
movs
lock
mov
pop
sbb
call
cmp
jo
mov
xchg
js
data16
daa
pop
push
mov
adc
xchg
test
ins
fwait
ss
dec
fild
cld
jmp
pop
sbb
cld
sti
mov
add
jb
xor
or
dec
sub
sbb
push
nop
pop
retf
rol
gs
fstp
pusha
cdq
sbb
inc
sbb
ja
addr16
mov
xchg
addr16
dec
test
pop
aas
sahf
lods
dec
scas
shr
shl
cdq
enter
adc
pop
mov
mov
jns
jp
mov
imul
rcr
test
test
adc
je
in
aas
cmp
out
dec
mov
aam
jbe
rcr
mov
xchg
mul
in
inc
out
fisubr
ror
jmp
or
fild
popf
out
leave
mov
lea
mov
sub
nop
mov
push
fst
(bad)
jg
pushf
or
and
fcomi
pop
add
push
adc
pop
jne
xchg
sbb
fisttp
dec
mov
mov
fild
das
sbb
xor
add
pop
pop
or
movs
xchg
into
mov
jno
mov
fstp
int
mov
cdq
cmp
imul
lock
mov
lock
jno
neg
or
cmp
call
data16
les
mov
xchg
lock
test
aas
lods
js
dec
stos
sbb
in
(bad)
cwde
fwait
or
fwait
pop
and
lods
mov
xchg
mov
std
pop
loop
in
cmp
pop
inc
jne
inc
dec
push
fdiv
call
or
fsub
ja
add
enter
fimul
inc
mov
ror
mov
das
pop
sub
mov
cmp
xchg
push
push
inc
and
xor
push
inc
stc
int
mov
and
shr
mov
pop
pop
dec
add
push
and
cmp
idiv
mov
or
inc
push
push
fsubr
push
sub
jmp
or
mov
and
stc
imul
adc
out
add
enter
push
push
jg
mov
sti
ins
frstor
push
mov
test
cld
enter
sbb
add
add
test
and
sar
jmp
and
jg
addr16
inc
sbb
out
aad
lods
jle
shl
sti
jnp
push
gs
jmp
fwait
not
sbb
int
retf
mov
ja
je
inc
test
dec
out
mov
movs
add
add
push
aam
pop
scas
push
mov
sub
scas
repnz
repnz
cmc
xor
fadd
add
aad
call
xor
pop
test
dec
push
push
xor
sar
inc
or
sub
push
mov
daa
adc
push
mov
(bad)
aaa
mov
ret
add
jle
add
imul
fcom
push
movs
lahf
fisubr
add
std
outs
out
pushf
push
adc
cmps
in
dec
xor
clc
sub
outs
add
and
xchg
xchg
mov
lods
aam
sti
jp
or
push
ds
std
shl
out
mov
dec
ins
pushf
fsubr
jecxz
push
push
push
inc
adc
call
repz
inc
mov
sub
adc
(bad)
sub
outs
cmp
stos
jmp
in
jb
stos
loopne
dec
int3
sbb
or
cli
and
movs
push
ins
xor
cmp
fadd
scas
mov
(bad)
jb
(bad)
jns
addr16
clc
rcl
inc
pop
push
sub
cmp
(bad)
mov
stos
pop
jl
sub
xchg
push
pop
dec
xor
fimul
push
ds
out
das
or
sub
pop
mov
add
loope
(bad)
xlat
xor
sub
lahf
stc
inc
repnz
fdivr
add
jmp
dec
push
xor
int
out
(bad)
jp
inc
test
xor
ret
test
lods
(bad)
mov
jae
fadd
hlt
sbb
inc
or
cmp
fwait
jae
xchg
dec
or
sbb
mov
mov
mov
rol
add
popa
(bad)
xchg
jns
stos
jmp
mov
or
jp
jns
ds
xor
fnsave
mov
or
dec
mov
inc
fs
and
cmps
fild
xor
pop
mov
mov
lds
pop
inc
dec
cmp
je
aas
jl
jno
ja
sbb
es
push
xor
retf
lea
jns
enter
xor
jo
movs
jge
push
repnz
shr
leave
sub
cmc
mov
std
cli
movs
xchg
push
in
mov
jg
sbb
fnstcw
sbb
in
push
fneni(8087
lods
scas
push
xor
fwait
adc
mov
lods
hlt
jns
mov
lods
xchg
mov
sub
(bad)
jns
fisub
or
mov
adc
into
ja
jle
xor
mov
mov
(bad)
cmc
adc
jg
(bad)
cli
pop
or
jae
sub
shl
aas
inc
dec
ins
xlat
mov
sub
mov
sbb
jg
aas
xchg
mov
inc
cmps
mov
out
cmp
enter
push
pop
jno
jmp
stos
fdivr
sar
shl
popa
mov
stc
cmp
out
fnstenv
or
push
stc
push
cmp
pop
ins
xor
xor
nop
xchg
mov
je
out
jg
outs
or
into
fwait
mov
push
cli
sbb
lea
sbb
(bad)
and
push
xor
xchg
outs
fld
dec
sbb
add
imul
xchg
out
adc
jge
jo
jae
mov
sbb
push
and
jp
mov
test
mov
inc
jne
test
or
std
icebp
out
sar
and
into
rcl
mov
adc
adc
in
idiv
pop
xchg
adc
js
or
inc
inc
mov
push
call
push
jg
jge
aaa
fimul
fdiv
shl
sub
pusha
imul
ret
(bad)
hlt
aas
pop
imul
retf
cmc
and
fistp
push
jo
dec
cld
and
sbb
mov
aad
inc
fmul
xor
int
sub
jmp
xchg
inc
adc
mov
mov
out
push
mov
add
popa
out
repz
or
lea
out
nop
stos
js
push
in
adc
out
cmps
stc
stos
test
(bad)
jle
dec
mov
xchg
xchg
push
mov
mov
stc
pop
jns
adc
mov
mov
popa
pop
setg
push
push
rcl
retf
and
push
pop
pop
xchg
dec
clc
out
push
repnz
sbb
mov
add
retf
push
xchg
test
call
inc
jae
xor
sub
jno
jge
jnp
mov
pop
ds
xchg
imul
add
and
cdq
sti
retf
mov
adc
jo
cmp
pop
sub
and
mov
xor
push
pop
gs
repnz
jo
mov
(bad)
aaa
scas
mov
shl
movs
inc
jb
adc
pop
clc
jmp
push
inc
data16
mov
pop
test
ds
inc
ja
clc
and
scas
mov
mov
and
lock
push
les
inc
les
lods
fcom
repnz
leave
nop
cmps
jle
out
xor
outs
loop
ins
out
icebp
pop
cwde
hlt
sbb
jbe
push
xchg
stc
mov
sub
push
and
out
std
mov
mov
call
popf
loope
aas
push
mov
and
scas
lds
jae
mov
aas
movs
inc
inc
xor
popa
ret
(bad)
mov
into
mov
addr16
mov
jecxz
(bad)
fild
cs
push
cmp
pop
push
pop
mov
inc
retf
cmp
int3
nop
mov
jb
jge
pop
imul
mov
int3
xor
dec
imul
out
mov
fistp
scas
stos
pop
cld
sti
cmp
(bad)
mov
xbegin
ficomp
fsub
push
jae
in
adc
inc
mov
(bad)
retf
sub
fist
xor
shr
(bad)
out
inc
test
dec
pop
mov
test
dec
or
xchg
add
out
jp
or
inc
int3
sbb
fs
les
jns
or
cmp
daa
cmp
into
pop
mov
jo
xor
cmp
je
adc
mov
pop
cmp
xchg
jmp
add
mov
inc
inc
dec
xchg
mov
and
jmp
jb
(bad)
dec
jae
xchg
pop
(bad)
imul
jno
or
fs
(bad)
dec
adc
imul
dec
imul
inc
sahf
xchg
push
or
push
imul
ret
fs
inc
xor
pop
div
and
dec
sbb
int3
aaa
hlt
adc
jg
fs
loopne
lock
inc
dec
sar
xchg
cmps
pop
or
(bad)
push
pusha
push
dec
push
ror
inc
loop
xor
sar
dec
and
adc
clc
sahf
xchg
int3
fwait
stos
add
int
dec
lea
sub
lahf
cli
sbb
xor
or
dec
jl
iret
hlt
pop
imul
enter
mov
push
outs
icebp
retf
movs
and
dec
and
sbb
adc
enter
jns
add
jbe
xchg
adc
adc
pop
cmp
(bad)
call
cld
lds
out
mov
jne
sub
mov
lods
xchg
or
and
pop
or
mov
shr
jle
mov
ror
jb
jo
arpl
out
shl
je
retf
pop
repnz
jmp
jecxz
jge
cwde
jnp
shr
out
fldcw
cmp
sub
call
loope
mov
jne
ja
and
inc
call
loopne
loopne
mov
jns
jb
cli
pushf
mov
aaa
lock
mov
outs
mov
ja
mov
rcr
mov
data16
push
icebp
mov
xchg
add
ror
xchg
out
call
out
inc
nop
push
jae
or
shl
cmc
lods
xor
in
imul
test
adc
cs
pop
lods
and
sbb
mov
popf
push
dec
add
fidiv
push
dec
arpl
cmp
mov
pop
jge
sbb
push
fld
jl
stc
adc
sub
fs
pop
cmp
push
jg
inc
jne
sub
lea
mov
add
cmp
(bad)
movs
add
dec
push
xchg
out
xlat
test
add
xchg
dec
out
int
ja
sub
sbb
lea
jmp
cmps
out
sub
jbe
test
dec
nop
outs
int3
mov
jle
and
popa
stos
adc
jbe
and
(bad)
push
mov
xor
iret
aas
loop
xchg
inc
jg
popa
stos
fwait
jle
jae
movs
or
jb
cmc
je
add
ja
(bad)
hlt
cdq
sub
mov
(bad)
dec
dec
bound
in
movs
mov
fdivr
ins
inc
leave
lahf
mov
retf
or
ins
push
cmp
(bad)
in
(bad)
push
(bad)
iret
test
enter
or
int
jp
ror
dec
cmp
dec
loope
pop
mov
fsubrp
mov
xchg
jle
mov
nop
xlat
(bad)
cld
(bad)
mov
sti
inc
inc
scas
push
adc
(bad)
sub
cs
mov
push
outs
mov
pop
xor
jg
scas
cdq
leave
mov
sub
aam
cli
dec
imul
inc
push
xor
aad
push
int3
test
sahf
add
sahf
pop
jb
sar
sub
mov
jmp
jb
(bad)
retf
and
mov
cmp
inc
and
and
mov
js
rcr
inc
inc
inc
mov
push
enter
or
mov
mov
jmp
movs
pushf
shl
sbb
cmp
pop
call
mov
rol
call
test
test
(bad)
pop
loope
sub
jns
scas
(bad)
push
out
imul
mov
sbb
xor
sub
out
xor
mov
cmp
fwait
out
jns
call
and
(bad)
sub
js
add
daa
sbb
jp
lds
adc
mov
sub
ins
cmps
mov
xlat
mov
mov
sti
push
dec
es
push
jmp
loopne
mov
scas
jmp
inc
and
cmps
mov
fs
popf
jne
or
out
ins
xchg
mov
stos
in
push
div
pop
ss
xchg
lea
pop
cmp
dec
lods
pop
xchg
jns
cmp
adc
mov
xor
mov
int
push
test
arpl
ret
rol
fistp
inc
aam
mov
fwait
sahf
aas
sbb
cmp
sbb
cwde
inc
push
lods
jo
pop
cmps
adc
(bad)
mov
mov
dec
jmp
scas
daa
or
cmp
fisubr
add
cli
retf
mov
stc
stos
(bad)
pushf
mov
pop
cmp
gs
and
test
and
dec
cmp
xlat
mov
jnp
inc
or
xor
and
enter
out
shr
mov
or
mov
xchg
xor
pushf
iret
mov
jne
daa
and
cmps
loope
aas
cmp
xchg
jo
xor
adc
push
and
xchg
or
lock
mov
scas
push
fs
in
popf
fs
jl
dec
mov
cld
add
or
and
movs
push
inc
mov
ss
cdq
aas
loopne
push
or
pop
leave
shld
and
ds
push
into
call
adc
xchg
dec
movs
sub
xor
mov
(bad)
dec
or
stc
outs
cwde
add
pop
leave
mov
sahf
rcr
mov
sahf
mov
xchg
ret
cld
pushf
rcr
das
jp
out
cmc
arpl
pop
(bad)
sub
test
mov
pop
cmp
xchg
lahf
xchg
shl
mov
je
jp
cmp
cli
push
push
jg
aas
add
dec
mov
sti
mov
push
mov
(bad)
pop
loopne
pop
adc
imul
jae
mov
jecxz
int
sbb
or
inc
fs
ret
adc
sbb
cmps
test
(bad)
and
inc
add
cs
jg
in
and
sub
and
adc
jp
gs
inc
dec
xchg
repnz
arpl
ret
in
mov
inc
call
in
or
jae
mov
lock
sub
mov
(bad)
and
cmp
cmps
sub
mov
adc
xor
fwait
mov
aaa
test
aad
adc
push
jb
retf
jcxz
jmp
cmp
(bad)
sub
push
cli
mov
daa
sbb
jmp
lods
or
popa
and
or
popf
fdivr
nop
pcmpeqw
cmp
and
hlt
mov
bound
mov
add
xor
daa
cmps
je
sbb
enter
pop
popa
inc
gs
sbb
jne
ret
stos
jns
cmps
cmp
mov
sbb
lock
add
mov
and
push
xchg
jb
cmps
mov
clc
dec
arpl
ja
mov
push
cmp
adc
fstp
jbe
push
jle
cmp
inc
call
pop
iret
dec
int3
sub
jae
cwde
push
daa
jnp
pop
pop
test
mov
pop
push
xor
or
cmp
not
push
mov
fidiv
jns
les
popf
outs
mov
pushf
pop
sub
mov
add
or
dec
(bad)
adc
mov
int3
mov
dec
xchg
cmp
scas
inc
daa
pop
scas
pop
adc
and
xchg
adc
aad
pushf
daa
cli
das
mov
xor
loopne
push
fwait
mov
sbb
mov
sbb
sub
add
in
add
cdq
xchg
(bad)
dec
(bad)
mov
jle
dec
int3
xor
push
xchg
jb
sbb
test
jmp
fstp
mov
stc
aad
inc
xor
das
cmp
push
fsubr
popa
in
fstp
push
(bad)
jno
push
adc
adc
dec
xchg
cmps
pop
clc
addr16
popa
or
jl
push
mov
mov
or
adc
das
imul
lods
(bad)
fldcw
leave
out
ins
mov
test
fucomi
out
retf
out
jl
ins
fxtract
dec
push
fwait
adc
(bad)
jbe
dec
mov
mov
fdivr
dec
ficomp
pop
fs
mul
jbe
in
and
push
mov
jge
mov
mov
xor
fmul
and
ret
loope
test
inc
je
push
mov
mov
sar
clc
sub
mov
pop
shr
icebp
sub
cs
inc
imul
push
sbb
out
sub
dec
xchg
je
aad
out
push
add
out
mov
imul
mov
jns
pop
ret
adc
mov
xor
pusha
push
inc
inc
xor
mov
inc
retf
pop
sub
dec
cmc
mov
and
ret
sti
cs
mov
call
dec
jae
xlat
push
adc
clc
push
xchg
aas
xchg
pop
(bad)
mov
(bad)
or
pop
(bad)
sub
xchg
mov
idiv
jle
and
(bad)
push
and
stos
mov
sbb
inc
loope
(bad)
into
inc
aam
jne
or
or
sub
mov
mov
imul
jmp
jo
push
sbb
js
inc
cld
push
xor
scas
clc
xor
(bad)
xchg
xor
aaa
aas
cmp
or
sub
dec
mov
mov
loop
pusha
(bad)
mov
cmp
xchg
adc
xor
scas
into
enter
test
ds
mov
xor
inc
push
push
(bad)
rcl
inc
cmc
pop
ins
mov
fistp
xor
or
pop
add
cmp
cmp
cwde
fldenv
sub
or
je
pop
rcl
push
xchg
push
xchg
cwde
imul
stos
ins
ins
push
out
sahf
retf
ret
lods
push
xor
mov
mov
fsubr
jmp
inc
sub
(bad)
pop
scas
repz
adc
or
iret
mov
ret
push
jp
xor
icebp
mov
xchg
mov
sbb
pop
inc
xor
es
sahf
or
fprem
lea
xchg
mov
sub
xchg
ficomp
(bad)
fisub
movs
pusha
fnstcw
addr16
test
sbb
ja
mov
cld
or
bound
mov
jae
test
inc
mov
cmp
lds
push
movs
sub
add
or
rcr
adc
add
mov
push
std
mov
int
out
out
adc
div
mov
pop
fldcw
xchg
cmp
call
aaa
stos
ss
mov
add
scas
mov
sub
ins
shl
pop
in
retf
pop
je
or
stos
mov
outs
push
movs
bound
mov
mov
mov
pop
or
in
adc
stos
mov
dec
pop
xor
xor
adc
cmp
push
(bad)
lock
or
mov
fwait
aam
sub
stc
mov
mov
xor
pop
fsubr
(bad)
jmp
iret
int
(bad)
xchg
xor
repnz
jno
adc
or
out
cmp
out
mov
shl
cs
sbb
(bad)
in
sub
out
test
nop
jbe
mov
and
mov
adc
add
leave
fadd
pop
and
dec
fcmovu
jo
cld
dec
nop
push
dec
push
cmp
mov
out
inc
inc
cdq
sbb
js
push
xor
push
lds
sub
repz
je
int
aas
push
jle
(bad)
retf
pop
(bad)
fs
push
js
jno
imul
(bad)
retf
das
jno
shl
xchg
push
cmp
jle
dec
mov
adc
dec
inc
daa
(bad)
outs
xchg
sub
jp
repz
push
movs
jb
jne
stc
les
cwde
outs
or
lods
xchg
mov
and
ins
push
xchg
mov
jmp
(bad)
push
arpl
(bad)
icebp
pop
push
sub
arpl
push
push
mov
mov
in
push
sar
in
sub
ins
mov
ret
add
or
xchg
bound
leave
jge
icebp
mov
call
(bad)
pop
push
ret
repnz
push
and
push
add
jb
pop
or
out
xor
ins
adc
dec
mov
test
mov
cmp
inc
or
sbb
jg
sbb
sub
imul
sbb
mov
enter
xchg
mov
pop
cmps
aaa
(bad)
and
mov
(bad)
push
pop
aas
lea
inc
add
std
push
adc
add
shl
or
mov
mov
mov
clc
(bad)
int3
fnsave
mov
and
cmp
into
in
(bad)
jecxz
sti
loopne
sbb
bound
daa
sub
sbb
mov
jmp
lahf
mov
and
xor
mov
xchg
lea
test
mov
out
or
loop
inc
xchg
mov
xor
fwait
dec
add
mov
test
mov
add
lahf
call
mov
inc
xor
repz
(bad)
lods
mov
ret
and
rcr
jno
stc
push
push
out
mov
mov
popf
(bad)
inc
inc
or
mov
mov
ja
ret
xor
imul
jno
adc
pop
ret
adc
jb
cmps
mov
sbb
in
push
scas
adc
dec
jmp
ret
ins
push
ror
add
out
xor
rcr
aam
jmp
pop
jecxz
push
fst
and
jmp
sar
or
or
push
cs
inc
push
xchg
stos
mov
pop
loopne
popf
js
ds
icebp
dec
mov
aam
push
clc
jo
(bad)
imul
mov
push
fs
out
es
mov
cmp
out
pop
jbe
lods
xchg
push
imul
inc
jo
sbb
xchg
in
jbe
mov
or
jecxz
adc
int3
repz
push
cli
mov
mov
adc
inc
inc
adc
sub
test
xchg
dec
xchg
enter
adc
xchg
lock
out
xor
xchg
inc
sbb
and
cmps
xor
adc
loope
jns
cli
bound
movs
lds
xchg
add
add
pop
test
lods
push
cmp
daa
sbb
push
inc
loope
int
rcr
std
test
test
pop
add
lea
(bad)
jne
ret
pop
sub
mov
out
fisub
mov
cmp
(bad)
out
mov
retf
mov
sub
xchg
mov
mov
xchg
jecxz
jnp
cs
cwd
jb
xor
cli
or
jge
daa
out
sbb
sbb
pushf
fdiv
pop
gs
movs
xor
pop
mov
jne
or
sub
pushf
sub
ficom
arpl
mov
hlt
hlt
add
jle
test
mov
sahf
jo
retf
std
jl
pop
push
xchg
ds
push
sub
sbb
scas
dec
xchg
inc
xchg
add
in
mov
adc
or
jbe
or
scas
mov
in
shr
ret
dec
call
dec
pop
nop
xor
daa
ror
jmp
fwait
jle
inc
sub
adc
sub
adc
pop
adc
sbb
mov
leave
push
and
jp
je
lea
aad
jmp
adc
fidivr
xchg
movs
popf
xchg
cmp
cs
pop
(bad)
test
out
adc
mov
mov
cs
call
xor
or
dec
cmc
fcomp
mov
in
ror
mov
mov
cmps
sub
stc
xor
call
retf
mov
cmps
cmp
test
sar
mov
or
shl
ins
shl
dec
mov
sub
sub
mov
aad
cmps
jb
hlt
mov
in
retf
mov
mov
push
leave
and
jmp
mov
fidivr
pop
and
cmp
mov
or
inc
dec
pushf
xor
shl
inc
mov
(bad)
mov
sub
in
sbb
ror
outs
sub
mov
pop
add
adc
das
jge
movs
ins
movs
xor
xchg
pop
in
and
jp
ds
enter
dec
mov
mov
icebp
pop
pop
cmp
xor
and
mov
lock
pop
(bad)
cld
push
lds
adc
push
sti
jo
add
adc
inc
add
dec
sub
pop
or
arpl
add
jle
mov
or
jl
(bad)
sbb
mov
pop
push
pop
js
stos
xchg
mov
xchg
inc
dec
das
sbb
cmp
cld
xor
jno
jle
je
sub
fld
jmp
mov
jge
inc
mov
sbb
aaa
mov
xchg
xchg
xchg
push
retf
mov
addr16
dec
aas
jns
mov
sub
bound
mov
clc
out
push
ins
sub
movs
sub
push
mov
mov
(bad)
jecxz
or
in
cmp
fdivr
ins
(bad)
mov
xor
inc
outs
dec
mov
push
jnp
bound
ds
clc
imul
iret
and
mov
loopne
lahf
stc
retf
ss
sbb
or
and
fs
sbb
inc
jl
push
test
jbe
fistp
adc
outs
fstp
jle
dec
add
xor
lahf
(bad)
push
hlt
outs
push
jge
inc
ret
fldenv
cmps
and
sbb
jecxz
mov
cmps
repz
out
enter
and
inc
jle
push
mov
and
in
cmp
(bad)
mov
call
xor
mov
les
pop
mov
cmp
daa
sahf
fiadd
or
jmp
xchg
jno
mov
adc
jae
test
cmps
je
mov
cld
jmp
in
jo
nop
mov
push
xor
ja
(bad)
pop
stc
in
sbb
push
inc
dec
cmp
pop
jns
jns
adc
adc
(bad)
loope
add
pop
je
shl
sbb
jbe
(bad)
call
xchg
add
ja
dec
jmp
mov
out
cwde
mov
xchg
xchg
dec
out
sbb
ds
aam
idiv
imul
sbb
add
mov
jne
push
cmps
inc
xchg
scas
or
inc
pusha
movs
repnz
add
sbb
icebp
dec
jp
cmp
fdiv
sub
mov
dec
xor
dec
aam
jg
call
push
in
daa
inc
inc
add
lahf
xor
hlt
dec
ret
lea
enter
sbb
xchg
test
(bad)
in
cli
sbb
lahf
or
adc
pop
push
lahf
push
popa
stc
adc
(bad)
jmp
fcomp
adc
movs
or
jno
add
sbb
jae
sbb
sbb
mov
(bad)
dec
and
jp
push
inc
fstp
push
inc
add
jno
add
inc
mov
ret
imul
dec
add
lds
dec
dec
push
out
sbb
rol
cld
test
sbb
jae
inc
or
call
mov
xchg
push
cmp
jbe
and
data16
and
sbb
mov
mov
sub
lods
rol
pop
mov
fcmovnu
cmp
aad
xchg
xor
ret
dec
fisttp
dec
inc
jnp
push
lds
inc
inc
das
ss
push
das
ds
cld
cld
cmp
push
pushf
add
mov
popa
out
xchg
pop
call
call
bound
inc
dec
lock
cmp
das
int3
aaa
js
dec
cmps
mov
cmp
and
std
aaa
or
and
mov
jg
dec
add
xor
ret
(bad)
sub
loopne
sbb
in
xchg
rol
sbb
push
sub
call
es
mov
repnz
mov
push
and
lea
loope
fmul
jb
sbb
jns
lods
pop
adc
dec
gs
dec
pop
pop
movs
popf
not
jbe
mov
cwde
adc
or
jno
adc
dec
mov
les
sbb
ss
int3
stos
test
and
cld
mov
vandps
outs
mul
xchg
mov
push
jmp
leave
fwait
repz
leave
adc
int3
mov
les
outs
mov
imul
les
push
push
lods
movs
sahf
xchg
sti
pop
out
jns
pop
pop
adc
inc
in
imul
mov
mov
mov
(bad)
(bad)
int3
fst
lock
lahf
int
repz
ror
push
push
xor
jb
shl
(bad)
movs
fisttp
xchg
clc
and
and
xchg
xchg
js
leave
jp
ds
mov
xor
call
sbb
test
call
mov
out
sbb
pop
adc
scas
shl
inc
call
xchg
inc
push
pop
inc
hlt
add
push
nop
and
leave
pusha
movs
add
jl
mov
cmps
pop
outs
mov
sub
pop
jae
sbb
or
inc
dec
xor
js
iret
loop
add
aaa
ins
cmp
and
mov
sub
add
inc
into
adc
cmc
aam
dec
xlat
jns
sbb
pop
(bad)
mul
adc
adc
add
imul
out
push
lea
mov
out
mul
loop
cdq
mov
jmp
xlat
(bad)
cmp
push
aam
push
fst
and
fcmovu
fldenv
adc
(bad)
jns
loope
je
out
jle
mov
mov
jg
push
mov
scas
imul
xchg
(bad)
outs
stc
stos
cmp
aad
in
loop
mov
sbb
nop
inc
inc
pop
ins
bound
add
out
call
xchg
shr
movs
pushf
jecxz
push
mov
loopne
out
mov
push
in
pop
call
inc
or
push
or
mov
cmps
inc
outs
sbb
jns
aam
fadd
cmc
inc
sahf
jl
jbe
aad
pop
inc
test
es
nop
and
cmp
js
adc
pop
jne
call
cwde
cli
cmps
rsqrtps
test
dec
ins
pop
add
push
lods
add
loopne
push
sub
push
dec
sub
sub
aad
jmp
fbld
jne
fsubrp
jge
cmp
xchg
mov
cwde
xchg
sub
cmp
leave
mov
stos
enter
dec
cli
pshufw
xchg
dec
or
push
inc
cwde
add
leave
aam
cmp
(bad)
push
jne
arpl
fst
jmp
mov
sahf
sub
or
jae
movs
test
dec
add
fs
jg
xchg
imul
mov
into
mov
inc
push
lock
mov
jecxz
mov
mov
mov
sar
iret
imul
jecxz
mov
cmp
outs
jo
pop
pop
(bad)
pusha
mov
fild
cmp
out
ret
repz
rdmsr
outs
es
retf
xchg
sub
xor
inc
retf
movs
add
xor
lahf
adc
mov
popf
fcomp
or
cmps
mov
and
xor
in
or
mov
xchg
pop
mov
sti
cmp
or
adc
add
(bad)
cmp
stos
mov
nop
lock
jmp
iret
fs
cwde
mov
stc
ja
mov
inc
dec
fst
fisubr
(bad)
pop
cdq
hlt
(bad)
xor
lods
not
(bad)
pop
mov
sbb
retf
bound
sahf
sbb
push
lds
loop
pop
xchg
push
test
out
mov
push
fcomp
test
(bad)
out
js
out
push
add
mov
ret
or
in
mov
push
and
pushf
cmp
or
les
sub
push
mov
lods
ds
icebp
outs
imul
jo
js
aas
pop
adc
xchg
xor
and
mov
out
or
or
outs
dec
pop
pop
inc
test
clc
push
out
jp
jo
out
xor
jmp
xor
xchg
xchg
mov
rol
pop
cmps
pop
and
push
sub
inc
lahf
sahf
ins
adc
aaa
pop
push
pop
or
cwde
ficomp
call
cmp
or
xor
(bad)
jo
xchg
mov
jbe
xor
bnd
adc
hlt
int
mov
jmp
cmp
jae
(bad)
sub
out
retf
inc
mov
or
leave
into
sbb
xchg
add
dec
pop
xchg
sbb
mov
xchg
jmp
aam
test
cli
pop
dec
cmp
fwait
and
hlt
(bad)
jmp
sbb
retf
mov
cmc
(bad)
loopne
jae
cmp
popa
mov
in
fsubr
inc
cmp
xchg
jnp
shl
rol
jne
loope
inc
push
cmp
int3
cmp
mov
xchg
rol
leave
das
push
aas
pop
ret
xchg
test
ret
cmp
mov
out
sar
jl
or
(bad)
js
or
xchg
sbb
push
(bad)
call
lods
sub
nop
ds
test
in
dec
mov
fwait
push
xlat
xor
jns
xor
or
std
cmp
rcl
add
xchg
xchg
fwait
daa
aas
fcomp
aas
mov
push
adc
aam
jne
js
xchg
je
push
pop
hlt
mov
mov
scas
mov
cmp
inc
push
xchg
cmp
aam
adc
xchg
pop
mov
adc
mov
push
leave
sub
icebp
lods
jno
repz
mov
xchg
fmul
call
outs
mov
push
pop
les
or
jae
add
xchg
mov
repnz
movs
push
sbb
push
fld
js
paddsw
clc
jmp
sub
dec
cmp
movs
pop
push
jmp
sub
lea
mov
add
or
les
clc
xor
loop
add
mov
cdq
or
ja
dec
cmp
popf
jb
fdiv
(bad)
ss
xor
out
ja
repnz
jecxz
arpl
push
ror
mov
into
shl
mov
shl
imul
cmp
cmps
xchg
sub
sti
adc
and
pop
dec
fcomp
lahf
xor
out
jp
dec
mov
scas
rol
mov
mov
push
mov
pop
mov
movs
dec
cmps
xchg
or
jae
js
shl
div
inc
in
popf
and
mov
jp
or
and
lea
retf
pop
xor
loop
add
sar
add
and
pop
jnp
test
mov
add
(bad)
xor
outs
mov
push
movs
mov
xor
inc
xchg
mov
or
scas
jo
(bad)
in
adc
or
bound
and
aas
retf
jb
lods
xor
or
out
sbb
aaa
pop
lahf
adc
ficomp
mov
mov
xor
and
stc
jb
inc
mov
pop
stos
cmps
cmp
aam
pusha
add
jp
rcl
out
mov
mov
les
jne
mov
clc
ins
sbb
sbb
and
aas
out
inc
mov
je
push
call
xchg
jl
jb
mov
scas
mov
retf
sbb
pop
leave
pop
jb
sub
adc
ror
mov
movs
out
call
aam
inc
xchg
daa
pop
icebp
rcr
dec
call
cld
jg
inc
push
or
xchg
xor
and
cs
std
mov
cmc
out
stos
mov
pop
jbe
jbe
dec
add
add
and
data16
add
lock
in
test
or
ins
imul
or
ret
xor
and
int3
div
std
ins
sar
pop
mov
xor
mov
pop
or
sbb
stos
ins
test
loope
adc
xor
jp
ds
std
jp
push
loope
add
jb
mov
into
bound
stos
xchg
xchg
pushf
fsubr
sahf
or
add
fisub
pop
lahf
sbb
inc
inc
dec
pop
pop
nop
dec
or
jno
push
gs
repz
push
test
test
ficomp
or
enter
and
retf
lods
mov
std
imul
cmp
loop
or
sbb
lods
shr
in
cmp
or
aas
or
mov
pop
cs
bound
es
push
dec
adc
adc
cmc
add
fldcw
stos
pop
add
or
lods
mov
add
movs
call
clc
into
mov
dec
mov
into
or
enter
rol
push
add
ss
adc
outs
jle
into
aas
cmp
mov
sahf
arpl
cmp
pop
xchg
push
aad
sar
pushf
mov
inc
cli
ret
pop
cs
rcl
push
sbb
ds
mov
jmp
or
adc
xchg
daa
mov
pop
cmp
dec
cmp
mov
xchg
mov
pop
cmps
fcomp
push
inc
rol
adc
pop
add
sbb
push
or
lea
sub
push
(bad)
inc
fucomip
lock
ins
hlt
jmp
test
or
fild
jl
or
loopne
jns
add
shl
mov
push
inc
mov
loop
sub
and
out
sub
push
add
xchg
dec
pop
cmp
dec
movs
xchg
jae
cmc
mov
ficomp
aam
cmp
adc
inc
pop
sub
out
jmp
push
adc
sub
or
addr16
pushf
repnz
jg
pop
lahf
stos
dec
inc
or
cli
out
fld
pop
lahf
cs
xchg
dec
cmps
xor
fimul
mov
test
fsubr
or
push
int
mov
dec
mov
icebp
fistp
les
jno
pop
push
pop
movs
fidiv
add
shl
(bad)
xlat
sbb
adc
ins
(bad)
in
dec
pop
or
popa
clc
pop
xchg
hlt
mov
cmp
mov
dec
inc
shr
and
xchg
add
loop
inc
dec
or
push
mov
adc
fadd
xchg
xchg
js
lds
mov
ds
pop
nop
xchg
lea
and
mov
pop
leave
jns
pop
pushf
out
mov
and
ficom
inc
in
lahf
or
aad
sbb
fld
in
pop
cdq
iret
les
pop
mov
jns
push
ds
add
lds
call
jo
hlt
adc
mov
adc
lea
add
push
(bad)
stos
rcl
sub
push
jmp
test
dec
add
fsub
in
xor
adc
add
xlat
adc
popa
inc
repnz
jo
or
shl
sbb
scas
test
cmp
imul
mov
out
push
and
js
lods
shl
sbb
mov
fwait
clc
mov
stos
inc
push
push
sub
cmp
sub
lock
adc
push
stos
adc
lock
fisubr
leave
imul
mov
in
mov
pop
adc
inc
xor
xchg
(bad)
imul
sbb
popf
push
push
inc
xchg
xchg
repnz
jb
outs
int
cwde
mov
or
cli
fstp
fst
sbb
bound
push
cmps
test
loop
inc
jecxz
or
test
xor
cdq
dec
inc
out
cmps
jge
cdq
add
mov
(bad)
js
inc
sar
inc
add
in
jmp
sub
ffree
jg
cwde
neg
mov
add
add
cmc
dec
mov
pop
inc
stc
inc
sti
cmp
shl
xchg
inc
mov
pop
scas
or
outs
jmp
popf
add
ja
xchg
imul
cmp
pop
inc
push
mov
and
pop
test
loope
popa
call
inc
test
mov
push
fidiv
scas
sub
cmps
mov
sub
push
ror
dec
das
dec
ss
jo
inc
and
fs
test
mov
gs
xor
sub
xchg
push
or
stc
pop
arpl
xor
mov
lea
mov
sbb
pop
push
ss
sbb
push
sub
cdq
adc
sub
add
fsub
jecxz
add
sbb
popf
cmps
mov
dec
cs
mov
mov
pop
icebp
fld
adc
fistp
jns
pop
mov
sbb
into
adc
sbb
or
mov
jle
jne
(bad)
mov
daa
cdq
cwde
mov
xchg
retf
cmp
sbb
imul
mov
outs
sti
push
mov
scas
outs
lahf
add
loope
mov
cld
sbb
data16
jno
and
pop
xchg
jo
xchg
out
sub
in
jmp
cmc
add
fld
ss
cmp
xchg
popf
mov
pop
lea
pop
stc
inc
pop
pop
lods
adc
pop
mov
in
dec
ins
and
jge
lods
ss
ror
cmps
jns
stc
xor
xchg
sub
inc
adc
fimul
ins
ret
movs
lods
push
(bad)
es
scas
xor
rcr
mov
push
jo
jg
pop
movs
lea
bound
mov
mov
pusha
jge
jg
jbe
inc
push
jno
mov
add
inc
stos
popa
push
pop
(bad)
jmp
cmp
add
xchg
cvttps2pi
dec
fsubr
inc
push
mov
retf
jmp
mov
add
dec
out
push
mov
cmp
(bad)
mov
(bad)
mov
push
aam
outs
jae
xlat
jl
fisttp
aaa
mov
mov
mov
(bad)
pusha
std
xchg
dec
fs
xchg
test
lahf
xchg
push
cli
push
pusha
ja
dec
or
cmp
sets
mov
push
retf
into
(bad)
xchg
cdq
in
push
jp
inc
xchg
xor
inc
pop
(bad)
jmp
push
sbb
ror
pusha
dec
test
es
out
gs
inc
mov
gs
mov
std
loopne
jle
dec
or
mov
out
lahf
outs
in
out
cwd
or
aad
aam
mov
inc
hlt
and
(bad)
cmp
jl
loop
lock
ja
inc
push
in
popf
mov
mov
fcmovnbe
sbb
pop
cs
loopne
(bad)
mov
cld
inc
sahf
scas
xchg
adc
dec
pop
lods
addr16
leave
xor
xor
data16
push
sbb
aam
xchg
jmp
jp
fimul
and
pop
dec
xchg
gs
lahf
sbb
repnz
test
or
loopne
sbb
cld
push
retf
xchg
pop
dec
jmp
sahf
daa
cmp
lahf
xchg
repz
cmp
cmps
push
frstorw
inc
mov
ss
mov
cmps
push
mov
mov
sbb
inc
(bad)
pop
dec
gs
xor
fnstenv
pop
stos
sub
mov
arpl
fld
inc
movs
retf
mov
sbb
cmps
adc
aaa
xchg
outs
mov
(bad)
fwait
mov
jg
enter
mov
out
pop
ss
pop
adc
push
pop
dec
xchg
jp
pop
jmp
sbb
xchg
adc
call
cmp
jmp
stos
in
ret
inc
nop
aam
clc
cmps
dec
pusha
mov
fiadd
mov
(bad)
inc
and
add
lock
imul
pminub
dec
sub
or
(bad)
call
and
out
cmp
lods
jo
(bad)
je
jne
fdiv
jne
sub
nop
mov
jno
mov
push
and
addr16
sbb
jae
add
call
mov
leave
dec
mov
(bad)
fcmovnbe
cs
pusha
mov
dec
or
and
mov
xchg
and
inc
xchg
and
cdq
add
mov
adc
mov
jne
stc
or
std
adc
sbb
in
lds
ins
ds
cmp
(bad)
sub
rcl
sub
mov
add
xor
(bad)
or
sub
cmp
xor
push
dec
sbb
in
jbe
jmp
hlt
cmps
xor
or
and
test
pop
mov
mov
sub
jns
clc
(bad)
mov
(bad)
and
add
dec
icebp
adc
lds
push
sbb
les
leave
fimul
mov
jp
add
daa
dec
xchg
scas
pop
jns
sti
mov
xchg
les
or
lods
xchg
repnz
fdiv
adc
xor
(bad)
shr
popa
lods
fdiv
cli
add
push
mov
repz
mov
and
push
mov
mov
shl
add
in
sar
push
jecxz
push
cmp
xchg
push
add
xchg
mov
test
loopne
dec
adc
repnz
xchg
bound
rcl
fnsave
sti
addr16
ret
test
ins
imul
add
adc
mov
out
mov
mov
mov
in
jmp
(bad)
idiv
fs
in
sti
call
jo
xor
les
xchg
cmp
sbb
loop
(bad)
mov
fmul
xchg
inc
daa
test
jns
iret
cmps
(bad)
outs
idiv
dec
das
das
add
cmp
pop
cmp
xchg
sahf
xchg
mov
dec
sti
lods
leave
stos
cmps
cli
ficomp
mov
repnz
xchg
scas
jl
icebp
les
daa
and
sbb
and
outs
or
mov
mov
fnstsw
jg
sub
sub
mov
stos
sbb
aad
and
sbb
add
sub
xchg
rcr
xlat
mov
inc
outs
cmp
jg
jae
adc
repz
add
sbb
mov
in
push
imul
fnstenv
lds
or
add
cmp
xor
test
xchg
js
clc
shl
in
in
mov
add
or
(bad)
and
jl
pop
push
mov
pop
ja
shl
div
jp
pusha
jl
pop
ror
cmp
and
fnstsw
inc
data16
call
ror
movs
mov
nop
ret
jl
lods
test
mov
cmp
sar
mov
lds
mov
cmp
loope
imul
xor
mov
(bad)
xlat
pop
add
pop
xchg
push
xlat
inc
mov
fwait
xchg
call
jg
loope
aaa
push
cli
mov
test
push
(bad)
adc
lock
jb
dec
push
mov
fldcw
fsub
in
aam
scas
cld
dec
xor
int
sar
sbb
mov
popf
movs
lods
jmp
hlt
xor
push
std
sahf
pushf
es
out
inc
jmp
xor
xor
fistp
movs
es
sti
in
pop
cmps
cmps
jl
dec
dec
retf
xor
xchg
inc
pop
mov
xor
push
push
into
xor
and
nop
sub
pop
das
retfw
mov
frstor
sar
push
cmp
pop
inc
and
mov
aas
adc
cmp
int
shl
sub
arpl
nop
cmc
outs
mov
dec
and
mov
mov
rcl
pusha
xlat
inc
xchg
loope
pop
sub
push
mov
lahf
mov
data16
inc
shr
dec
inc
inc
leave
add
push
cmc
popa
pop
dec
inc
loope
xor
movs
in
xchg
inc
fisub
pop
jb
inc
dec
push
cmps
imul
fcmovnb
movaps
add
mov
push
(bad)
dec
pop
cwde
ds
loope
neg
ds
repnz
xor
stos
cmp
and
neg
mov
adc
jle
test
(bad)
add
ret
cmp
cdq
jl
jl
ffree
arpl
sbb
out
xor
pop
mov
(bad)
std
jl
and
into
aas
inc
call
dec
jnp
(bad)
sti
xor
jne
mov
std
xchg
add
in
lock
sbb
push
rol
mov
(bad)
fimul
sti
shl
dec
aam
aas
call
push
xor
cmp
sub
outs
or
mov
out
mov
push
icebp
lods
pusha
xchg
cwde
test
hlt
mov
ins
fs
sti
mov
mov
jno
sbb
movs
fldenv
jnp
inc
inc
fdivr
and
popa
mov
cmp
jae
push
mov
loop
xor
int3
and
adc
adc
sbb
in
jmp
cld
cmp
jp
xchg
call
sub
cmp
push
and
lss
cdq
fist
cmp
movs
out
xor
dec
aam
test
jae
push
add
dec
cwde
jno
aad
xor
mov
ret
lds
lods
daa
cmps
shr
mov
popf
cmp
sbb
lea
sbb
(bad)
test
sub
dec
sub
dec
(bad)
xor
lock
fidivr
(bad)
popf
fwait
dec
xor
out
add
xchg
into
jmp
jae
fstp
xchg
call
push
dec
scas
movs
sub
pop
push
push
mov
dec
xchg
stc
aad
inc
movs
add
and
cdq
inc
mov
adc
stos
xor
push
cmp
cdq
stc
pop
movs
mov
aad
out
push
xor
test
mov
in
jmp
cwde
in
mov
rcl
mov
not
jmp
lods
mov
push
push
adc
sbb
jge
dec
out
pop
sub
mov
cmp
push
pop
loope
inc
or
pop
mov
in
std
push
sub
pop
mov
call
xchg
lahf
xchg
push
pop
test
clc
sbb
xchg
js
jmp
stos
adc
mov
cdq
out
pop
inc
dec
stc
aam
jns
mov
ret
into
sub
sub
pop
nop
loop
xlat
ins
dec
or
movs
gs
stos
mov
mov
dec
mov
pop
jl
call
call
mov
leave
mov
mov
lds
test
mov
scas
push
sub
lods
sbb
inc
xor
ja
add
and
sub
sub
cmp
lds
test
jnp
into
in
jnp
mov
jbe
mov
popa
pop
into
xchg
cmp
scas
xchg
ret
in
xchg
jns
pop
cdq
mov
and
sub
ret
dec
cdq
movs
or
pop
and
popa
or
outs
sbb
emms
not
jnp
repz
out
nop
dec
test
test
xor
xor
push
and
xchg
repnz
rcl
and
out
lock
shl
adc
xchg
cld
fsubr
aaa
push
out
shl
and
icebp
fsubr
je
mov
mov
inc
sbb
lods
xchg
sub
sub
mov
adc
imul
mov
fidiv
jle
cwde
cli
sar
retf
fcomip
mov
les
mov
mov
(bad)
mov
(bad)
jmp
mov
mov
push
test
(bad)
adc
pop
mov
sahf
mov
ins
shr
jne
es
mov
std
lods
jmp
icebp
rcl
dec
ja
stos
mov
sbb
adc
xchg
jns
aaa
xor
jle
icebp
add
call
adc
jmp
dec
adc
jno
sbb
stos
and
fist
retf
fisub
pop
adc
nop
mov
popa
or
not
cmp
inc
lahf
(bad)
and
and
sub
cli
jns
div
dec
outs
aaa
xor
(bad)
mov
movs
jns
lea
data16
mov
pushf
pop
mov
fdivr
aaa
push
ss
jae
fimul
or
mov
lods
and
shr
and
loop
shl
in
and
jp
push
mov
fsub
add
mov
hlt
call
(bad)
leave
xor
adc
popa
(bad)
jmp
(bad)
les
(bad)
adc
fwait
aam
rcr
stos
xor
aas
xlat
add
ja
int3
ss
(bad)
inc
std
push
loopne
hlt
fs
lods
ja
sar
mov
add
or
rol
imul
jns
fwait
jnp
icebp
test
jecxz
fimul
jmp
(bad)
clc
vmread
test
inc
icebp
daa
nop
jmp
xchg
mov
jo
jb
jg
mov
or
dec
mov
add
cmp
das
mov
mov
int3
in
or
cs
(bad)
popa
push
(bad)
mov
ins
mov
gs
dec
cmp
daa
ins
popf
mov
sub
adc
adc
or
sub
inc
pop
sar
outs
ins
call
add
mov
call
rcl
dec
retf
ja
jnp
dec
jns
pop
popa
or
adc
clc
cmp
cmp
into
jl
push
add
mov
call
repz
ror
int
push
ret
out
push
mov
jge
push
call
xchg
imul
popa
repnz
and
clc
push
mov
jo
setle
jg
div
cs
loopne
mov
inc
push
int
addr16
js
repz
enter
cmc
stos
test
inc
and
mov
out
in
div
lea
mov
adc
repnz
cmp
sbb
push
(bad)
xchg
test
icebp
dec
cmp
push
xchg
outs
fbstp
mov
sbb
mov
mov
jg
movs
aaa
hlt
mov
jnp
aas
pop
test
cmp
cwde
pop
push
jp
mov
jns
jns
xchg
cmp
(bad)
fild
bound
cdq
lahf
cmp
shr
xor
push
clc
mov
pop
and
xchg
lods
popf
leave
(bad)
loop
adc
inc
jnp
pop
and
pop
(bad)
ds
push
adc
sar
ja
push
es
outs
aam
add
inc
add
and
in
test
or
xor
(bad)
and
in
popa
shl
mul
loope
xchg
jnp
sahf
fisub
push
mov
add
aaa
(bad)
fiadd
enter
and
xor
sbb
shl
push
push
hlt
(bad)
lock
or
adc
in
(bad)
mov
mov
test
dec
addr16
push
test
mov
scas
mov
jne
jle
call
(bad)
cmp
jmp
mov
add
xor
pop
dec
jmp
mov
cmp
out
pop
dec
inc
dec
stc
mov
in
test
push
lock
cmp
xor
push
push
fild
int3
sub
jno
and
pop
mov
jecxz
xlat
jle
inc
jb
inc
push
sub
or
pop
push
cmp
rol
enter
sub
leave
push
ins
int
test
iret
fisub
loopne
inc
adc
jl
iret
aam
dec
scas
gs
aas
push
cmp
add
(bad)
mov
es
ins
stos
cmp
movs
push
shl
ret
xchg
popf
or
cmps
sbb
jne
adc
(bad)
stos
call
cmc
pop
mov
jnp
and
cmps
pop
adc
dec
pop
lods
push
(bad)
fs
ja
ds
pushf
sahf
xchg
push
outs
xchg
pop
cmp
dec
sti
xchg
add
into
mov
and
fiadd
(bad)
add
dec
jno
leave
leave
inc
jae
(bad)
mov
xchg
scas
push
fnstenv
test
xor
jecxz
add
jne
mul
sbb
and
clc
pop
(bad)
xor
aam
sbb
mov
addr16
inc
xor
and
icebp
std
pop
dec
add
jae
sar
nop
aam
in
jae
inc
jl
fxtract
imul
stos
fldcw
call
pop
loopne
dec
int3
xchg
ins
mov
pop
cli
imul
retf
ds
or
jle
int
div
mov
or
hlt
mov
das
stos
cmp
popa
push
pop
xor
or
pop
stos
inc
adc
sbb
push
ins
cmp
sbb
call
jg
and
cmps
sbb
sub
sbb
mov
inc
in
xor
sbb
pushf
aam
xchg
ret
mov
mov
xchg
cmp
pop
add
in
and
dec
(bad)
cld
and
test
inc
idiv
mov
add
mov
dec
rol
adc
rcr
dec
dec
add
test
popf
sub
push
pop
jle
mov
fwait
push
int
scas
or
dec
dec
in
push
cmp
xor
cmp
mov
jmp
push
xchg
cmps
out
les
sub
rol
sti
(bad)
jmp
push
fstp
sti
dec
icebp
ss
leave
enter
pop
inc
out
aas
mov
aad
or
aas
mov
mov
sahf
add
jo
or
pop
nop
or
inc
ret
and
gs
rcl
pop
js
ret
into
shr
cmp
mov
cli
pushf
fdiv
add
mov
dec
xor
dec
ret
aad
nop
cmps
pop
lock
hlt
add
pop
dec
adc
xor
cdq
not
stc
dec
shr
cmp
cdq
xchg
dec
inc
xor
push
xor
mov
imul
jne
sahf
pop
sbb
jl
add
jmp
stos
adc
stc
retf
adc
lock
sbb
and
jmp
dec
mov
or
movs
std
outs
mov
dec
jmp
cwd
dec
int
inc
xchg
cmp
retf
jmp
setg
ror
movs
imul
jmp
daa
cmp
lock
cmps
lods
jno
imul
ss
sbb
jp
jle
pop
out
stos
mov
mov
out
fcomip
rcr
add
cwde
test
popa
jne
(bad)
shr
adc
mov
and
dec
sub
pop
dec
into
mov
push
test
mov
inc
xor
addr16
mov
or
jno
inc
test
push
pop
push
sar
inc
sbb
movs
mov
xchg
xor
fucomip
mov
stos
mov
scas
dec
ss
push
aas
int3
push
jmp
mov
dec
gs
and
(bad)
or
sub
fnstenv
in
rol
bound
inc
jmp
or
adc
mov
stos
outs
call
add
mov
jge
dec
fwait
std
inc
cmp
inc
bound
mov
repnz
push
and
adc
add
hlt
dec
xchg
fisub
mov
jnp
mov
sub
add
jmp
mov
cmps
out
lods
and
icebp
push
or
lds
or
icebp
dec
fimul
jo
fmul
mov
push
ret
jmp
add
clc
sub
cwde
cmp
xchg
cli
fld
lahf
je
inc
cmc
call
cmps
(bad)
cli
std
ja
jns
leave
int
fadd
movs
mov
xchg
xor
jmp
movs
(bad)
mov
adc
fisubr
xor
mov
mov
es
gs
sbb
scas
push
xor
add
mov
push
cs
jecxz
js
sbb
in
into
adc
and
movs
loope
stc
dec
xchg
fdivp
mov
adc
fldcw
and
rcr
mov
xchg
xchg
and
mov
xchg
nop
ret
div
mov
inc
arpl
or
cmp
jmp
xlat
xchg
loope
fcmovnbe
lock
shl
push
and
xor
out
jbe
mov
mov
fld
xchg
adc
cmp
psrld
add
pop
xor
rol
(bad)
mov
mov
lea
push
add
cmps
inc
daa
int
dec
push
push
ja
cmp
sti
jg
pop
pop
or
jmp
push
sbb
cs
aad
xchg
outs
retf
adc
push
pop
repz
adc
pop
push
add
arpl
ins
jno
rol
xchg
movs
push
sub
pushf
mov
inc
push
inc
or
je
aaa
clc
les
je
pop
mov
xlat
mov
sahf
daa
inc
pop
mov
fild
inc
test
stc
push
push
push
and
mov
sub
dec
cmp
push
add
cli
retf
sbb
in
add
ins
fs
xchg
int
inc
out
jmp
mov
xlat
into
fist
sar
mov
clc
cmp
in
pop
push
fcomp
cli
test
fidiv
sar
iret
js
sbb
push
or
ret
test
(bad)
add
retf
or
lea
jp
cld
in
inc
sub
xor
daa
pop
xchg
cmp
test
cmps
cwde
clc
jle
lahf
bound
les
fisttp
sbb
jb
mov
fwait
or
mov
mov
popf
mov
pop
jno
stc
shl
cmp
adc
dec
(bad)
dec
aad
push
es
fidiv
xor
test
dec
(bad)
push
mov
sbb
iret
pushf
sbb
sub
push
aad
ds
les
popa
sar
sub
std
cwde
les
mov
adc
jge
mov
xlat
adc
imul
hlt
push
pop
(bad)
cmp
pop
sub
fisubr
mov
cld
test
ins
movs
mov
pop
sbb
mov
(bad)
fcmovnb
mov
dec
pop
cli
add
mov
imul
loopne
enter
frstor
movs
gs
and
stos
arpl
sbb
out
js
lea
fcomi
cmps
jmp
adc
xchg
fmul
and
inc
jecxz
mov
imul
fisub
ret
cmc
sub
dec
mov
pop
inc
or
cmp
inc
aaa
stos
leave
(bad)
retf
fs
call
test
stos
mov
out
aad
les
jnp
shl
in
mov
aaa
inc
fsubr
mov
and
ret
aas
pop
call
cdq
mov
pop
adc
add
jecxz
or
ror
cmp
sub
pusha
test
ja
mov
jno
push
int
xlat
ret
push
pop
leave
add
mov
rol
enter
jb
daa
mov
hlt
popf
aam
jb
bound
push
inc
cmc
call
das
(bad)
jmp
xchg
xchg
lods
mov
ret
jmp
and
sbb
mov
and
mov
inc
cmp
inc
into
sbb
pop
(bad)
push
movs
ja
sbb
inc
call
ja
add
cmps
jb
adc
add
test
or
or
ror
and
aas
mov
enter
(bad)
mov
push
(bad)
adc
xor
fisub
xor
movs
jp
jb
add
stos
icebp
push
mov
or
cmps
ret
jecxz
inc
(bad)
pop
mul
ret
xchg
mov
add
mov
push
xchg
cmp
and
cmp
and
dec
xor
xor
and
add
inc
std
enter
xor
sub
ins
adc
xor
push
fcmovnb
fidivr
fs
pop
test
nop
xor
mov
(bad)
in
jae
inc
movs
movs
adc
push
mov
sub
push
or
or
adc
cli
fiadd
sbb
sbb
push
xchg
into
jmp
add
sub
and
(bad)
adc
and
fsub
sub
push
je
and
mov
inc
sbb
push
xchg
xchg
xchg
js
repnz
imul
inc
aad
xor
(bad)
push
loope
scas
and
aaa
sub
stc
mov
popa
hlt
stos
or
inc
dec
pop
les
int
push
xchg
(bad)
imul
outs
shl
mov
or
adc
in
(bad)
je
mov
fstp
xchg
fs
stc
pop
bound
pop
or
ins
pop
je
movs
test
or
enter
pop
cmp
das
mov
js
ds
outs
sub
movs
push
loop
add
dec
in
fsubr
ss
cmp
stos
sti
lock
xchg
test
iret
add
aaa
cmp
int
test
pop
push
cs
or
scas
pop
hlt
leave
inc
jmp
xor
sub
dec
or
xchg
sub
jae
sahf
arpl
enter
and
sbb
leave
xor
jnp
stos
stc
dec
xchg
dec
jb
sbb
xchg
and
inc
imul
idiv
xchg
push
aas
mov
rol
jg
lds
jns
(bad)
frndint
lods
clc
push
imul
int
or
imul
or
xor
das
or
mov
pop
leave
push
and
fcom
mov
in
js
test
mov
sbb
fsubr
add
jl
clc
mov
mov
jp
cmps
cmp
pop
fsub
pop
into
push
jnp
hlt
in
pop
jecxz
or
jne
fwait
and
adc
mov
fcom
pushf
inc
push
add
inc
ret
(bad)
xlat
in
sub
mov
jle
mov
fisubr
sbb
jecxz
and
movs
retf
xlat
movs
mov
inc
pop
add
mov
retf
int
lahf
es
mov
jmp
xchg
adc
cmp
xchg
jg
push
inc
ficom
data16
mov
push
xchg
adc
rcr
mov
stos
mov
dec
mov
fistp
ret
and
out
in
adc
pop
mov
nop
pop
xor
(bad)
mov
div
add
out
jg
ror
lea
out
push
stc
push
xchg
(bad)
stos
rcr
inc
sub
add
ds
or
ret
jo
shl
xor
add
xor
push
js
retf
push
aas
inc
pop
mov
adc
retf
rcr
call
out
push
setb
ins
leave
int3
add
mov
dec
stos
out
sbb
mul
repnz
je
ins
iret
mov
or
push
mov
imul
push
push
retf
or
in
add
xchg
movs
les
retf
call
mov
inc
popa
fstp
(bad)
stos
pop
loopne
fistp
add
or
sub
fwait
add
aad
ins
pop
arpl
scas
xor
ret
(bad)
leave
call
jne
ins
inc
mul
cs
xchg
popf
push
cmps
aaa
jg
cmp
xlat
(bad)
mov
(bad)
sub
stos
loopne
adc
push
int
daa
push
push
pop
adc
fild
sbb
out
int3
loope
call
and
int3
shl
sbb
stc
mov
jae
(bad)
cmp
jg
cmp
enter
out
fcomp
movs
sub
and
cmp
outs
cmp
sbb
push
sahf
lea
outs
mov
std
push
mov
inc
or
pop
cmp
cmp
in
cwde
sbb
aad
sbb
xchg
call
lods
mov
pop
push
jl
je
xchg
sbb
cli
in
inc
lahf
dec
xor
enter
or
ds
pusha
mov
or
dec
dec
jae
jo
push
sbb
jmp
mov
pop
call
loope
add
(bad)
jmp
xlat
cmp
sub
sbb
rcr
daa
repnz
mov
ret
inc
cwde
cmps
fbld
mov
mov
int
rcr
in
(bad)
mov
sahf
daa
ins
dec
fsub
hlt
sahf
add
je
lahf
sbb
xchg
cmp
pop
movs
movs
jmp
stos
mov
jb
ja
xor
lods
cmp
adc
pop
out
stc
(bad)
cli
sub
jno
cmc
sbb
aas
xchg
adc
ret
aaa
xor
sub
jp
fmul
pop
inc
jo
inc
xor
add
ficom
in
in
sar
sub
add
jns
and
mov
jp
test
loop
push
scas
repnz
push
bnd
sbb
shr
sub
(bad)
add
(bad)
fstp
lock
mov
daa
or
xor
mov
mov
xor
cli
cli
adc
sub
sbb
inc
sub
pusha
xor
and
mov
inc
rol
int
sbb
cmp
lea
sbb
repnz
push
push
push
outs
mov
in
sbb
mov
jl
sti
ss
push
xor
aas
or
adc
stos
call
cmp
jmp
ss
cli
pop
dec
cmp
stc
sbb
ja
pop
(bad)
popf
out
and
test
sbb
push
std
sub
call
and
adc
pop
es
push
gs
jmp
lds
and
jl
or
sbb
dec
scas
out
sub
call
add
retf
push
cmp
popf
sub
mov
and
aam
mov
mov
iret
pop
neg
icebp
push
sub
out
addr16
loopne
out
test
in
lds
push
jb
(bad)
mov
fwait
push
mov
mov
pop
xor
mov
sbb
mov
inc
(bad)
mov
int
ja
xor
push
shr
mov
and
gs
cwde
fisubr
dec
add
push
xchg
pop
bound
adc
sbb
movs
lds
in
ds
sub
sbb
add
shl
dec
jb
push
jg
pop
clc
mov
add
cmp
in
js
int
lods
ror
mov
xlat
or
ins
inc
sub
sub
xor
jbe
les
aaa
pop
push
mov
sbb
iret
sbb
cmp
or
xor
hlt
adc
sub
mov
and
pop
fstp
xchg
add
dec
daa
mov
lahf
mov
hlt
in
push
mov
dec
cmp
lds
lods
adc
loopne
(bad)
daa
jmp
push
dec
das
xchg
call
aam
out
cmp
in
sub
and
(bad)
repnz
cmp
add
mov
add
cmp
mov
ja
pop
iret
jmp
lods
xor
dec
out
mov
or
adc
paddb
inc
cmp
(bad)
sbb
mov
adc
mov
imul
inc
out
rol
pusha
into
in
int3
push
xchg
or
shl
std
xchg
add
imul
mov
cmps
pop
xor
sub
inc
add
hlt
and
arpl
hlt
int
adc
push
cmp
out
fidiv
ror
stos
in
adc
cdq
and
xchg
mov
icebp
icebp
pop
fs
mov
or
das
xchg
adc
mov
and
cmp
pusha
sbb
ja
cmp
repnz
sahf
in
stc
sub
sbb
pop
jae
inc
add
loope
shl
mov
inc
cs
repz
jbe
cmp
mov
or
sbb
cwde
fwait
mov
shl
mov
mov
call
and
mov
adc
jp
inc
mov
jne
retf
cdq
in
jmp
dec
pop
daa
xlat
pop
jmp
aas
mov
fdivr
(bad)
cmp
xchg
xchg
and
outs
repz
les
or
and
cmps
cli
and
and
mov
push
inc
aam
cmps
movs
mov
dec
push
jb
xchg
sbb
nop
aam
(bad)
pop
cmps
fldcw
sub
fwait
xchg
cmc
xor
mov
int3
ficom
and
mov
sub
int
jno
mov
mov
pop
(bad)
out
inc
cmp
mov
sbb
dec
mov
stos
outs
stos
jmp
lea
js
xchg
sbb
mov
ffree
or
mov
sbb
test
mov
dec
add
ret
dec
sub
jnp
push
out
mov
call
xchg
push
sub
fwait
jle
mov
pop
test
cs
jp
lock
add
cli
icebp
les
jnp
mov
std
xor
sbb
jnp
es
outs
dec
hlt
xchg
inc
ins
inc
(bad)
ret
call
or
sub
pop
mov
bswap
sub
push
shl
xchg
(bad)
mov
xor
(bad)
adc
shl
aad
ret
dec
lds
int
rcr
clc
jg
push
inc
inc
pop
or
retf
stos
mov
mov
sub
ins
je
sahf
cwde
xor
out
rcl
mov
push
xchg
sbb
jae
xor
sbb
outs
push
sbb
pushf
imul
push
adc
fimul
nop
dec
lods
imul
aad
jne
jae
jne
mov
call
jge
aam
jmp
mov
lods
dec
(bad)
movs
sub
jo
adc
pop
mov
ins
jmp
out
clc
add
lods
cmp
adc
ror
and
int
lahf
aad
std
(bad)
(bad)
jne
jb
sar
push
das
repz
mov
pop
test
jmp
call
out
and
fcmovnbe
fdivr
dec
sbb
bound
jmp
pop
add
adc
imul
sub
cmp
pop
cmps
jecxz
xor
and
and
jecxz
out
clc
repnz
mov
lock
or
in
call
arpl
loop
jl
mov
sbb
and
ret
xchg
sbb
test
jne
popf
pop
outs
jns
inc
jbe
ins
xchg
inc
je
inc
inc
jo
lea
rol
(bad)
arpl
xchg
gs
mov
in
fsub
adc
mov
addr16
adc
(bad)
outs
and
or
les
sar
das
mov
cmp
aas
mov
mov
fmulp
lods
push
jmp
imul
ds
add
ret
outs
add
mov
bswap
leave
pop
int
lea
lea
mov
pop
xchg
inc
push
jae
lods
or
pushf
inc
retf
xor
xchg
sbb
pushf
lds
loope
sub
aas
push
mov
sub
repnz
xchg
add
xor
inc
mov
fcom
cmp
(bad)
xchg
mov
add
lods
push
out
push
popa
and
imul
inc
xchg
ins
in
loop
and
jne
test
pop
cmp
sbb
cmc
ret
xchg
shr
dec
xor
lock
cmp
xchg
mov
data16
inc
mov
(bad)
dec
out
lods
adc
add
pop
jae
(bad)
sar
mov
jb
aam
jno
adc
(bad)
cmp
lahf
mov
dec
and
inc
push
pop
cmps
call
push
push
mov
push
sub
inc
sub
sbb
sub
mov
int
jmp
in
adc
xchg
jl
aaa
js
in
stc
clc
dec
mov
mov
dec
inc
jge
lea
dec
sub
and
jns
rcr
mov
inc
jo
cmp
dec
les
xchg
enter
icebp
shl
rol
sbb
or
mov
jmp
jmp
dec
js
add
ficom
mov
das
adc
mov
and
and
xchg
(bad)
je
dec
das
mov
js
clc
jmp
inc
rol
xchg
repz
xchg
(bad)
sub
and
inc
das
mov
xchg
ret
xor
inc
xchg
aad
pop
and
cmps
in
xlat
loope
cld
clc
mov
movs
iret
jmp
mulps
(bad)
movs
lahf
jae
xor
imul
iret
sub
sub
pushf
mov
or
popf
retf
pop
pop
sbb
push
inc
pop
sub
aas
jmp
ins
das
dec
push
fwait
cld
dec
sbb
ds
xor
(bad)
hlt
out
movq
cmp
inc
jne
push
sub
add
std
add
push
push
lods
lea
aaa
add
push
mov
push
(bad)
cmp
loope
cmp
dec
xor
jae
xchg
or
cwde
sbb
dec
pop
popf
dec
inc
bound
daa
int
fnsave
mov
xchg
xor
movs
rcr
xlat
pop
jbe
cmp
add
in
dec
ja
cmp
loope
mov
add
xchg
mov
inc
pop
test
pop
addps
into
pop
cmps
push
inc
fcom
add
mov
xchg
xchg
mov
jne
cdq
push
daa
stos
cmp
das
nop
mov
sbb
ficomp
imul
cld
aas
and
push
pushf
xor
cmp
xchg
inc
mov
int
lahf
mov
jl
sbb
cmp
mov
add
pop
jmp
push
mov
push
lock
(bad)
fwait
(bad)
mov
xor
shl
sbb
dec
sub
add
test
jmp
and
rcr
pop
jbe
ss
xor
daa
aaa
or
push
int3
dec
add
pop
cmp
in
ss
and
mov
inc
xlat
or
lods
add
pop
pop
push
(bad)
fcomp
or
push
pop
mov
cmc
inc
aaa
mov
inc
cwde
cmps
jge
xor
cmc
mov
xor
push
repz
xchg
mov
adc
mov
ja
xchg
push
(bad)
lock
pop
stc
scas
loopne
sbb
das
(bad)
les
(bad)
les
dec
sbb
cli
je
shl
adc
mov
test
inc
push
adc
daa
jmp
out
js
push
xor
mov
jne
xchg
nop
loopne
clc
jmp
inc
mov
xchg
cmc
js
mov
pop
pop
sub
cdq
mov
dec
adc
rol
in
xor
dec
jle
mov
cmc
xor
int3
and
adc
inc
js
pop
and
sub
not
inc
jne
mov
pop
fiadd
popa
jns
xor
imul
outs
push
and
jp
mov
jae
xor
adc
jnp
call
cwde
call
repz
sub
sub
jp
out
or
bound
outs
imul
fwait
push
mul
mov
movs
push
add
std
hlt
inc
dec
sub
test
out
(bad)
nop
dec
movs
xor
sbb
mov
sar
pop
add
lds
mov
jge
enter
imul
jmp
mov
out
retf
test
jmp
lds
and
sahf
retw
push
call
loope
mov
rcl
push
or
pop
jp
cli
sbb
inc
sub
xor
jnp
sbb
or
leave
bound
push
lahf
outs
es
(bad)
stc
lahf
repnz
mov
or
mov
pop
cwde
call
rol
or
out
in
dec
retf
cmp
adc
(bad)
int3
and
ins
arpl
inc
cmp
fist
inc
retf
xchg
in
gs
cs
mov
imul
lsl
lods
mov
xor
xchg
pusha
pop
jl
xchg
iret
cdq
test
pop
pop
pop
loopne
inc
mov
add
rol
mov
movs
retf
mov
stos
sub
ficomp
mov
xchg
leave
repnz
cmp
in
jle
nop
fist
int
or
mov
fdivr
add
int
adc
add
pop
mov
mov
dec
fucom
leave
fsub
bound
cmp
fcomp
pusha
aad
pop
out
clc
xchg
sbb
mov
mov
inc
cld
xor
cmp
mov
out
bound
loopne
cmp
sbb
mov
inc
daa
je
push
aad
imul
add
add
enter
or
jge
or
sub
adc
inc
sbb
jb
gs
add
xchg
xor
jg
das
popa
movs
jne
lock
stos
pop
icebp
mov
(bad)
sbb
idiv
push
(bad)
out
xor
cli
pop
push
mov
rol
or
(bad)
dec
hlt
push
stc
das
call
sub
xchg
xchg
sub
push
out
or
imul
mov
loop
dec
lods
mov
xchg
ins
and
mov
mov
dec
movs
out
dec
sub
sbb
mov
jmp
cmc
and
inc
aad
jno
mov
sbb
cld
add
add
jecxz
sub
ins
stc
arpl
repz
cmc
sub
imul
es
lods
pop
cld
inc
cli
test
push
in
retf
mov
aam
jmp
or
sub
or
ins
add
adc
sub
jle
cmp
pop
adc
sar
and
xchg
das
cli
ret
inc
aad
fst
push
pop
ss
cmps
loopne
test
mov
aaa
cmp
movs
test
inc
xchg
aaa
xchg
repnz
fild
adc
mov
icebp
rol
daa
xor
mov
mov
dec
int3
mov
lahf
push
(bad)
xchg
fdivr
stc
mov
lock
mov
into
mov
leave
sahf
xchg
mov
repnz
or
xor
loop
mov
push
(bad)
push
mov
or
stos
cld
add
push
fwait
dec
xchg
repz
es
fucomp
leave
movs
out
mov
xchg
jbe
mov
dec
(bad)
cmps
sub
jmp
loopne
scas
mov
mov
shr
addr16
into
inc
xor
fbld
inc
cmps
dec
popa
xchg
mov
arpl
in
adc
pop
or
inc
cli
xor
push
or
fdivr
std
fs
clc
scas
pop
enter
pop
jns
shl
sbb
xor
test
fist
mov
es
popf
pop
pop
and
lods
push
cld
dec
cmp
cld
dec
dec
test
movs
cld
mov
outs
mov
ror
xor
xchg
mov
stos
jl
jmp
mov
lods
cmp
(bad)
in
mov
mov
rcl
mov
out
xchg
or
pushf
cmp
mov
sub
fwait
cli
pop
repz
fst
mov
add
xchg
jp
or
mov
pop
retf
retf
and
cld
in
stos
cmc
xchg
idiv
jno
add
add
dec
repnz
add
adc
hlt
(bad)
sub
pop
xlat
cwde
cwde
jmp
lahf
int3
jbe
ja
(bad)
gs
mov
cmp
dec
dec
mov
cwde
dec
xor
ret
xchg
pop
bswap
fnstcw
aas
fstp
xchg
repnz
pop
mov
pop
sbb
(bad)
adc
sub
mov
out
dec
xchg
movs
mov
cs
push
dec
sahf
jl
xchg
out
inc
pusha
push
scas
and
adc
pop
mov
stos
test
lods
(bad)
fld1
dec
fild
mov
pop
adc
fwait
mov
loope
pop
rcl
test
hlt
push
call
add
ss
imul
pop
pop
movs
fwait
jnp
cmc
test
(bad)
aaa
aam
adc
or
cmp
fwait
in
push
(bad)
mov
outs
mov
adc
jne
fistp
sub
jae
adc
cmp
mov
jo
fneni(8087
push
sbb
sub
inc
and
addr16
pop
fmul
pop
jb
dec
adc
xchg
ss
adc
scas
clc
sub
aad
jecxz
add
leave
sbb
sub
dec
push
out
adc
mov
ins
fcmovu
mov
sub
ret
pop
jge
dec
clc
pop
daa
or
add
ror
mov
cwde
xchg
fadd
sub
ret
mov
cmp
dec
xlat
add
mov
(bad)
cmps
int
cs
or
cmp
add
das
jo
and
push
loope
loopne
inc
push
cmp
dec
mov
sub
cmps
cld
stc
adc
addr16
(bad)
stos
cmp
out
jl
mov
pop
and
add
cmc
in
mov
inc
dec
sbb
cmp
push
sub
fs
in
xchg
xchg
in
or
adc
and
mov
mov
repz
outs
fwait
sub
lods
js
stc
jl
dec
std
dec
call
cs
outs
mov
cmps
sbb
lods
dec
xchg
xlat
sbb
aad
jle
std
jb
dec
ins
cmps
add
mov
push
and
popf
mov
jmp
js
lea
cmc
inc
inc
mov
cmp
mov
fwait
(bad)
push
sbb
leave
test
jecxz
mov
std
jno
lods
dec
jns
aad
mov
es
dec
loope
mov
ror
(bad)
sub
add
push
adc
cmp
push
push
fs
mov
push
push
repz
xor
jge
hlt
sbb
add
repz
and
loope
cwde
or
cli
mov
scas
cmp
mov
(bad)
movs
in
ja
mov
scas
mov
cmc
aaa
icebp
inc
xchg
bound
cmps
idiv
jnp
fwait
lods
mov
popf
push
mov
rcl
jns
xor
bound
ja
push
mov
cmp
pop
inc
jle
inc
mov
pop
cs
lods
jb
lock
lods
repnz
mov
sub
or
mov
sar
aad
cld
mul
imul
shr
ret
pop
push
not
mov
aam
push
mov
ins
in
ins
or
push
mov
sub
jg
scas
mov
add
cmp
sbb
or
bnd
mov
or
adc
js
das
xchg
sbb
cmps
sahf
jns
inc
mov
shl
and
leave
in
mov
das
xchg
jbe
push
test
arpl
and
out
sbb
add
fidiv
pop
adc
mov
sub
cli
lods
mov
or
xchg
sbb
mov
ins
cmp
jmp
dec
test
push
cmp
sar
push
push
xchg
pop
fnstenv
lods
pop
xchg
sbb
js
in
aaa
jo
das
gs
test
cmps
add
outs
arpl
jno
inc
jns
mov
pushf
jne
pop
mov
and
rol
stc
ja
push
add
or
gs
enter
outs
push
pop
cmc
mov
pushf
pop
es
(bad)
pop
fs
retf
xor
xchg
cmp
dec
(bad)
jmp
retf
sub
dec
sbb
aas
ret
mov
stos
inc
mov
add
xchg
imul
cli
sub
xor
es
add
das
(bad)
cli
pop
and
mov
inc
jp
rcr
inc
pop
cld
cdq
aam
out
sub
mov
pusha
inc
gs
or
jle
xchg
pop
lock
mov
jp
lea
out
sbb
mov
fld
test
pop
inc
pushf
jne
out
push
sbb
outs
ror
(bad)
cmp
or
shl
daa
fisttp
jecxz
movs
push
lods
adc
sar
(bad)
out
adc
xor
xor
(bad)
ds
shl
pop
inc
and
cmps
and
js
mov
or
dec
test
push
mov
aaa
fsub
jmp
add
xor
das
sbb
pop
mov
test
bound
stos
inc
mov
cmp
gs
fs
aas
and
(bad)
fnsave
dec
call
aad
pop
test
cld
adc
xchg
pop
xlat
jge
inc
inc
pop
inc
fld
movs
retf
inc
rcl
jl
sub
rcl
lods
mov
dec
push
add
mov
stos
pop
inc
push
enter
dec
xchg
daa
push
retf
test
not
mov
mov
test
cmps
xchg
mov
cmp
iret
adc
cli
mov
gs
in
out
xchg
jnp
loopne
xor
mov
icebp
jne
mov
rol
push
push
(bad)
adc
out
(bad)
shr
sahf
add
push
push
sbb
xchg
imul
hlt
pusha
js
dec
pop
or
test
xor
daa
push
cmp
aas
(bad)
fucomp
popa
mov
outs
pop
mov
cmc
int3
jp
arpl
scas
push
cld
and
push
or
pop
imul
leave
jns
hlt
(bad)
jbe
aaa
sub
ds
popf
nop
pop
or
cld
inc
cmp
sbb
data16
shl
push
jecxz
adc
jbe
test
cmps
cmp
mov
dec
sub
and
mov
xchg
scas
mov
or
aam
nop
into
pop
lahf
inc
jnp
adc
adc
jecxz
lahf
sbb
cmp
call
adc
(bad)
ret
sub
sahf
push
out
inc
mov
scas
mov
ds
xlat
push
inc
dec
push
add
xchg
and
xchg
sahf
loopne
and
or
pop
jp
(bad)
adc
test
cdq
mov
push
xchg
xchg
out
fs
sti
pushf
mov
stc
cmc
dec
pop
xchg
ds
sbb
(bad)
in
adc
in
jbe
(bad)
ja
push
inc
mov
jg
mov
mov
add
data16
add
(bad)
or
sti
test
jae
nop
xchg
dec
cli
inc
ins
mov
icebp
scas
or
mov
cmc
inc
rcr
gs
jecxz
movs
rcl
jl
push
xor
sbb
scas
test
(bad)
(bad)
adc
(bad)
pop
es
cld
mov
dec
xor
add
adc
inc
push
xor
cmp
pop
inc
imul
xor
sbb
mov
(bad)
(bad)
outs
ins
pop
leave
outs
call
in
inc
jl
loope
sub
not
and
test
mov
mov
dec
paddd
mov
push
mov
aas
mov
mov
inc
sbb
inc
stc
iret
es
sub
add
inc
imul
cmc
adc
inc
or
sbb
add
outs
ror
lods
movs
mov
mov
mov
xor
and
jecxz
pop
dec
sbb
iret
pop
cmp
jns
stc
sbb
sub
mov
(bad)
ficom
(bad)
aam
xchg
mov
(bad)
shr
sub
iret
mov
call
jmp
pop
inc
fnstenv
sub
bound
xchg
bound
sbb
inc
and
(bad)
xchg
push
mov
xchg
fidiv
aad
loope
mov
cwde
cli
popf
pop
call
cmps
lods
or
aam
mov
movs
jns
push
cld
clc
push
mov
mov
std
stos
push
jae
and
rcr
mov
nop
jnp
inc
mov
mov
icebp
mov
adc
stos
fldenv
addr16
hlt
cmp
mov
jp
cmp
aas
cmp
cmp
mov
(bad)
fdiv
cwde
retf
fst
cmp
add
mov
xchg
adc
push
jge
cmp
mov
xchg
push
dec
cmp
aad
and
out
and
retf
xor
rol
dec
or
ret
not
popf
sbb
add
pop
rcl
cmp
enter
push
jnp
fldcw
lds
mov
clc
rcr
sub
stos
mov
sub
fsub
int3
lds
pop
in
push
add
(bad)
push
xchg
and
mov
inc
dec
mov
and
pusha
inc
pop
add
add
xchg
das
ds
sbb
jecxz
pop
lea
dec
arpl
mov
movs
xlat
out
adc
mov
repz
(bad)
cmps
jg
cmc
add
shl
mov
cmp
repnz
mov
adc
les
lods
pushf
retf
out
rcr
out
sbb
xchg
call
or
fs
cmp
pop
jp
fcmovnb
sbb
and
pop
mov
mov
jmp
fadd
retf
jle
scas
outs
loopne
adc
stos
jb
lock
fwait
mov
adc
(bad)
ja
pop
out
mov
adc
dec
nop
xchg
ds
rcr
and
cmp
fisubr
push
cmp
inc
push
jo
out
inc
je
cmc
inc
cld
pop
adc
push
push
xchg
pop
cmc
xchg
fs
lock
push
scas
out
inc
jl
add
adc
mov
fmul
fwait
mov
dec
push
retf
or
nop
and
jns
pop
dec
push
pop
pop
in
stc
xchg
sti
cmp
push
xchg
xor
arpl
aas
stc
mov
scas
rcr
push
sub
loop
pop
jb
jnp
pop
mov
repz
bound
cmp
rol
mov
jno
mov
push
mov
add
adc
dec
cli
addr16
mov
rol
push
add
cmp
sbb
mov
rcl
das
cdq
fdiv
adc
aam
test
dec
rcr
cmps
rol
loope
mov
or
xor
xor
rol
push
dec
mov
jae
and
sub
pop
(bad)
cmp
out
xchg
push
add
stos
mov
pushf
ret
icebp
inc
inc
popa
push
mov
mov
js
out
fbstp
shl
sahf
fimul
mov
add
add
in
push
xor
inc
jne
push
out
mov
xlat
leave
mov
popa
sbb
fidiv
xor
cmp
int3
(bad)
int
test
sbb
rcr
inc
call
sar
ficomp
inc
test
sti
add
mov
mov
sub
mov
(bad)
jne
pop
mov
and
ret
stos
stc
leave
ror
retf
daa
cld
adc
not
add
or
mov
mov
jne
adc
add
(bad)
fsubr
gs
stos
dec
sub
lahf
scas
in
pop
fisubr
push
mov
rcl
mov
or
push
fsub
das
dec
mov
fcomp
(bad)
push
jns
adc
out
fsubr
mov
imul
retf
xor
push
out
sub
stos
mov
(bad)
out
push
sub
rol
loopne
inc
in
fs
aad
js
in
xchg
je
and
push
sub
add
loope
movs
add
and
repnz
xlat
ja
adc
mov
cmps
jne
or
test
xchg
shl
popa
repnz
dec
out
jmp
inc
dec
jmp
push
mov
cmps
cwde
dec
add
ror
sahf
shl
jmp
push
or
push
gs
js
cmp
fdivr
mov
dec
pinsrw
dec
sub
sbb
enter
call
add
cmps
mov
or
mov
xor
jnp
pop
and
sub
dec
sbb
sub
xor
jns
mov
inc
dec
mov
outs
rcl
mov
pop
in
mov
fwait
js
add
lahf
adc
aam
mov
pop
cmp
xor
sbb
das
jmp
pop
popa
pop
xor
mov
inc
push
fstp
jecxz
inc
rol
repz
and
ja
add
inc
jns
push
pop
or
mov
pop
adc
cmps
fsub
rol
test
fisub
cmp
xchg
out
cmps
sar
repz
inc
or
daa
mov
aad
idiv
add
fistp
jmp
in
stos
fist
rol
pop
inc
xlat
es
pop
packssdw
sbb
xor
stos
jae
mov
or
pop
lods
xchg
lahf
pop
inc
add
cmp
outs
sbb
or
scas
jp
push
(bad)
jno
inc
iret
sub
test
adc
ins
sbb
std
add
pusha
adc
bound
cmp
push
mov
test
inc
(bad)
xchg
mov
mov
movs
mov
mov
ror
xor
mov
or
mov
mul
mov
mov
add
push
mov
scas
ins
sub
push
not
sbb
std
xor
retf
fisub
movnti
jmp
lds
dec
mov
adc
out
aad
repnz
mov
adc
jp
jmp
adc
sbb
mov
leave
hlt
fs
movs
daa
pop
cmp
mov
adc
push
daa
mov
jmp
leave
push
dec
xor
sbb
rcl
nop
cmp
fcom
shl
adc
or
pushf
and
dec
sub
mov
ins
cmp
sahf
and
push
pop
int
xchg
sbb
fnstcw
cmp
jmp
xchg
adc
or
je
std
xchg
push
jae
cmps
and
mov
test
addr16
adc
xchg
sub
mov
(bad)
push
fwait
mov
jae
test
jle
(bad)
loopne
and
adc
inc
sahf
jmp
sti
call
mov
in
jmp
mov
enter
jns
xchg
mov
sub
add
mov
jecxz
adc
sbb
fucomi
rol
dec
les
shl
mov
xchg
bound
ss
push
or
fs
push
jno
pushf
mov
repnz
mov
mov
or
jg
(bad)
or
cdq
adc
mov
outs
push
fwait
sbb
fwait
mov
push
or
xchg
jb
sbb
adc
in
sahf
adc
pop
dec
out
inc
(bad)
pusha
inc
sub
leave
push
mov
push
cmp
mov
add
push
lods
cmps
fsub
sub
dec
shl
add
imul
jge
pop
mov
dec
dec
or
sub
push
cmp
cmp
cs
pushf
inc
mov
xor
xor
lds
pushf
xor
fiadd
push
and
inc
mov
jmp
sbb
(bad)
jl
mov
cwde
inc
xchg
mov
sbb
cwde
scas
lods
mov
mov
add
dec
fsub
mov
dec
adc
ret
xor
sbb
stos
lahf
and
ret
jmp
mov
ins
imul
lds
int3
mov
mov
mov
mov
push
cmp
xchg
xchg
push
sub
fwait
push
ja
mov
cmps
fs
jnp
neg
fstp
in
ss
jp
jmp
repz
mov
sub
aaa
ret
setl
and
cmc
sub
arpl
inc
pop
pop
push
push
mov
push
pop
jmp
push
and
ror
cmp
adc
pushf
xchg
jle
add
in
out
sub
cmps
pop
out
mov
mov
loope
lock
mov
push
nop
push
call
loop
xchg
sub
movs
pop
rcr
aam
xor
(bad)
mov
jmp
sub
leave
popf
fnstcw
xor
mov
sbb
test
in
aad
shl
popf
cwde
inc
ins
sbb
jno
icebp
adc
xchg
ret
or
repnz
dec
xlat
push
scas
(bad)
lock
push
pusha
jecxz
test
(bad)
inc
(bad)
xacquire
cmps
imul
rol
sub
xor
aaa
jb
pop
xor
cmps
lds
sub
mov
mov
fidivr
push
jp
nop
ins
mov
mov
hlt
adc
xchg
fisub
sub
repnz
mov
jne
mov
or
imul
pop
xchg
inc
lods
popf
mov
scas
xchg
xor
xor
and
aaa
fist
pusha
mov
test
mov
jb
call
and
mov
shr
test
sub
sti
mov
aam
int
jle
add
and
xchg
loop
inc
or
test
retf
imul
and
pop
nop
hlt
push
(bad)
push
rcr
cmps
adc
dec
sbb
and
or
mov
jns
mov
push
push
arpl
arpl
into
fadd
fsubp
stos
jmp
gs
aad
cmp
daa
scas
and
int3
(bad)
adc
push
pop
bound
sbb
cwde
and
movs
push
repz
push
xchg
rcr
into
mov
sbb
mov
sub
fld
push
xchg
sbb
ins
int3
call
fisttp
dec
mov
add
movs
xchg
pop
popa
iret
cmp
pop
adc
arpl
(bad)
fdivrp
sbb
pop
jne
push
test
ja
mov
jg
in
iret
test
push
sbb
or
(bad)
mov
pop
imul
mov
pop
outs
pop
ret
loop
jmp
inc
dec
popa
mov
jl
sbb
(bad)
jo
pusha
call
fild
aas
xlat
pop
and
adc
adc
pusha
(bad)
push
add
cld
ret
mov
in
test
or
test
int
cmp
gs
int3
mov
(bad)
mov
shl
out
inc
push
mov
test
pusha
jle
fs
dec
inc
push
arpl
into
or
call
xor
fild
cwde
repnz
cmp
ins
push
push
jl
shl
pop
ja
in
and
lea
add
jo
bound
(bad)
les
inc
cli
dec
adc
mov
and
xchg
mov
xor
push
les
xlat
aas
lahf
and
imul
cdq
mov
popf
es
call
push
in
popf
ret
ss
int
jo
sti
cmp
or
push
js
je
in
sbb
mov
and
fild
cmps
xor
push
test
lods
push
push
js
pushf
jecxz
cs
lods
and
repnz
aaa
js
outs
adc
imul
ret
mov
and
aam
inc
mov
adc
cli
mov
push
or
sbb
repnz
xor
jno
pop
pop
lods
stos
and
shl
cld
iret
rcl
daa
ins
scas
dec
mov
xor
mov
aas
into
ins
add
mov
cmps
push
lea
sub
lds
sub
push
into
dec
or
push
pop
mov
mov
jmp
pop
inc
mov
add
stos
mov
jbe
jbe
pusha
mov
nop
cli
xor
adc
cmps
mov
pop
(bad)
movs
push
(bad)
fnstsw
pop
inc
cmc
mov
mov
popf
or
or
xor
test
jb
(bad)
mov
rol
or
jecxz
push
mov
imul
push
ficomp
xchg
cmp
or
mov
jge
pushf
xchg
and
ret
jne
call
popf
dec
mov
arpl
loope
fnclex
dec
in
xchg
dec
push
out
sbb
push
outs
or
aaa
int3
outs
add
mov
and
mov
push
adc
cmps
add
pop
dec
dec
xchg
add
arpl
xchg
and
push
sbb
and
imul
pop
jecxz
adc
mov
cmc
dec
mov
and
neg
mov
daa
mov
sub
js
call
xchg
fdivr
push
int3
scas
cmp
outs
or
xchg
(bad)
shr
push
mov
mov
bound
and
dec
sbb
jne
out
out
rol
cs
jne
or
inc
mov
lods
jle
xlat
mov
cmps
mov
rol
xchg
retf
pop
dec
jo
lock
popf
pop
hlt
dec
adc
xchg
js
push
push
imul
and
pop
loope
cmps
adc
mov
out
xchg
push
xchg
test
call
adc
int
(bad)
jmp
js
push
xchg
test
or
or
aas
xlat
mov
pushf
stc
adc
jl
outs
jo
out
iret
aam
or
pop
sbb
cs
stos
mov
inc
mov
(bad)
cld
adc
popa
pop
jbe
fcomp
sti
fcomp
test
dec
jle
cmp
dec
ss
test
jl
test
cmps
call
test
shl
aas
pop
jo
jmp
sbb
leave
(bad)
js
add
sbb
adc
jmp
xlat
sbb
aaa
push
in
std
push
jno
fwait
mov
mov
or
cmc
mov
test
data16
and
xor
jl
test
sub
xchg
mov
jle
sub
sbb
cmp
add
and
lahf
cmp
shr
cmp
jo
or
sub
mov
outs
fxch
sub
test
lea
rcr
call
mov
lods
adc
jmp
movs
push
dec
ret
data16
cli
adc
push
imul
and
dec
sub
ficom
retf
cmp
mov
inc
mov
scas
ret
jge
inc
jb
sti
nop
sub
rcl
adc
iret
into
sub
ret
ret
push
lods
dec
sub
sbb
xchg
mov
pop
or
sti
cli
gs
adc
push
fcmovbe
fwait
pop
mov
rol
inc
xchg
jae
icebp
dec
push
je
daa
mov
or
arpl
jmp
adc
jg
jecxz
adc
mov
(bad)
retf
fild
inc
jnp
sub
fadd
(bad)
xor
mov
dec
daa
scas
fs
push
cmp
pop
and
pop
out
add
push
push
xchg
pop
jp
push
pop
sub
inc
sbb
cwde
mov
xchg
mov
push
popa
std
dec
shl
mov
cdq
loope
inc
jp
pop
add
(bad)
psllq
add
dec
push
cmp
ficomp
cmp
cmps
idiv
mov
cmp
dec
pop
adc
fdivp
adc
pop
jg
mov
jge
cmp
inc
hlt
mov
call
les
or
adc
adc
mov
jbe
ja
gs
retf
xor
(bad)
or
imul
mov
or
outs
mov
push
mov
jmp
pop
retf
xchg
and
loop
cdq
mov
retf
leave
mov
out
and
es
or
les
and
jbe
aaa
(bad)
retf
mov
xor
push
inc
add
movs
sahf
adc
mov
fwait
js
adc
enter
mov
pop
add
mov
cwde
rol
mov
mov
adc
mov
mov
(bad)
and
lahf
ror
mov
bound
pop
sbb
push
sar
sahf
push
mov
outs
movd
cmc
fdivr
dec
pop
pushf
and
cli
adc
fcmovnu
push
enter
gs
ret
scas
cs
aaa
in
jae
mov
out
mov
and
sub
sub
cmp
fcmovnu
sub
add
ret
es
icebp
test
fwait
mov
iret
mov
dec
jl
jge
stc
sbb
push
ret
test
sub
mov
sub
jbe
ret
inc
jb
sahf
cmp
ret
push
jle
push
ss
or
fcomip
je
les
popf
es
mov
push
cld
aaa
dec
mov
ja
xlat
inc
jo
push
dec
xlat
sbb
sbb
lahf
xchg
push
and
inc
dec
pop
out
popa
popa
mov
shl
mov
stc
test
popa
and
dec
test
outs
daa
fisub
(bad)
sahf
adc
popf
adc
sub
mov
cmps
ss
idiv
inc
jmp
push
pop
in
pop
and
popa
aas
and
and
imul
or
adc
inc
push
mov
push
sub
mov
pop
cmc
aas
jnp
mov
loop
pop
dec
sbb
pop
loopne
push
pop
lea
arpl
sbb
icebp
fist
sub
mov
(bad)
sbb
jo
jnp
ja
movs
popa
idiv
loopne
jge
imul
pop
dec
sbb
sub
js
pop
mov
ins
add
jb
(bad)
loope
sbb
xor
push
inc
ss
ins
ss
push
push
retf
jbe
mov
or
or
xchg
and
jno
xchg
fadd
sahf
push
loope
ins
sub
sbb
sub
xor
cmp
aam
loop
call
call
xor
cmp
dec
mov
inc
jle
sbb
ror
ins
in
sub
test
out
pusha
js
mov
mov
sub
js
daa
push
ins
in
leavew
cdq
sbb
ret
push
xchg
jp
push
xor
sbb
sbb
test
dec
xchg
pushf
xchg
ja
adc
mov
add
inc
push
xlat
neg
inc
cmp
jmp
xchg
and
fst
inc
jg
sub
je
mov
shl
ret
xor
push
adc
pushf
cmp
and
pop
jecxz
jbe
dec
pop
pop
push
pop
cmp
rcl
sti
fdivr
pop
mov
add
fistp
das
jge
retf
mov
cmp
out
cld
push
push
xor
inc
cmp
xchg
icebp
pop
sbb
retf
mov
adc
ja
add
or
mov
jne
outs
adc
ret
push
push
aaa
aam
lock
out
enter
or
push
enter
cmp
das
gs
push
imul
mov
shr
xchg
dec
scas
adc
mov
xor
add
ds
and
sbb
jp
pop
fld
inc
lock
ror
xchg
js
movs
fld
or
xor
mov
sbb
xor
test
cmp
hlt
int3
fild
xchg
add
push
dec
fnstcw
lods
inc
cwde
sbb
mov
pop
jmp
dec
addr16
jmp
mov
jge
adc
cdq
inc
fmulp
jge
cmp
pop
fbstp
mov
imul
ret
sbb
shl
outs
fdivr
mov
or
movs
jo
pop
mov
fsub
retf
pop
repnz
pop
mov
mov
adc
xchg
sar
sbb
in
cmovo
adc
inc
aas
push
test
jmp
push
or
jae
(bad)
(bad)
(bad)
push
test
repnz
dec
and
loope
fisubr
jg
rcl
xchg
lds
dec
loope
jno
jge
and
and
in
jmp
jo
cmp
mov
in
lods
pop
cmc
mov
jb
repz
enter
mov
rol
sbb
jae
add
ds
push
xor
push
xchg
pop
dec
dec
or
jns
adc
mov
lods
xor
loop
dec
cmp
push
dec
and
or
push
sub
jg
mov
dec
arpl
das
rol
shl
sub
ss
popf
nop
adc
shl
in
add
mov
in
(bad)
and
sub
pop
mov
repnz
iret
iret
sbb
fsubr
or
add
fbstp
sbb
call
adc
fsubrp
lahf
mov
mov
jmp
pop
retf
cmp
push
jg
sbb
div
fst
jge
fmul
mov
push
sub
push
lock
cld
jmp
outs
movs
in
dec
or
sbb
add
inc
mov
ret
repz
mov
inc
sbb
retf
mov
and
mov
movs
rcl
xchg
sub
adc
shl
jb
xchg
repnz
cmp
pop
daa
xchg
loopne
int
fs
jo
mov
inc
scas
push
adc
addr16
dec
push
and
mov
repnz
inc
sub
inc
xchg
call
jnp
sbb
mov
jb
push
out
shr
imul
dec
stos
jo
stos
adc
xor
push
or
pop
popa
shr
cmp
int
jae
cmp
adc
mov
push
sbb
iret
sbb
retf
jae
push
mov
ret
daa
pop
imul
(bad)
pop
and
(bad)
retf
sub
or
add
imul
test
jno
dec
push
gs
dec
cld
mov
scas
sbb
xor
jg
mov
dec
mov
int3
xor
sub
xchg
push
sbb
cmp
mov
(bad)
dec
adc
outs
sbb
lds
jmp
mov
cmps
inc
add
cwde
hlt
aas
push
jge
sbb
pop
xchg
out
mov
xor
mov
xor
pop
sub
jp
adc
dec
out
test
test
dec
int
pop
enter
or
leave
mov
inc
shr
gs
cs
xor
inc
adc
fisttp
push
pop
pop
test
repnz
imul
add
pushf
aaa
xchg
push
pop
push
test
data16
push
aam
mov
idiv
or
xchg
rol
xor
popf
jne
test
add
in
pop
mov
scas
stos
call
mov
icebp
pop
sub
add
lahf
mov
dec
jnp
pop
call
cli
jmp
call
ret
cmp
inc
data16
test
test
xlat
add
inc
(bad)
inc
stos
in
(bad)
ret
retf
mov
push
stc
sbb
call
out
call
sub
stc
push
or
xchg
mov
std
fidiv
pop
ret
mov
jb
int3
cmp
aam
jo
adc
aam
xor
sub
gs
fwait
movs
aaa
out
dec
aad
jbe
push
pop
addr16
mov
inc
outs
ret
inc
ja
jle
sub
hlt
mov
mov
pop
les
shr
shl
(bad)
push
sub
out
fprem
call
dec
dec
pusha
jecxz
bound
arpl
adc
jp
jnp
xchg
sub
xor
xchg
neg
sub
into
push
test
or
pop
das
cmp
ror
icebp
or
jo
movs
call
adc
pop
clc
push
push
int3
out
push
xor
in
hlt
inc
jno
dec
(bad)
fild
retf
(bad)
mov
push
cmp
mov
inc
ja
popf
mov
(bad)
lds
jbe
shl
mov
inc
bound
add
clc
cmc
leave
dec
or
sti
shl
popf
call
lods
push
jae
ss
aaa
fwait
retf
push
dec
xor
push
pop
gs
cmp
xlat
add
rcr
mov
lods
(bad)
pop
or
cli
(bad)
sub
jge
cmp
jae
retf
out
xor
scas
pop
sbb
sbb
(bad)
sub
loope
(bad)
cmp
outs
js
pop
and
xchg
mov
adc
lds
xchg
adc
inc
cmp
ret
adc
pop
int3
mov
(bad)
stc
repnz
pop
leave
or
add
sub
push
cmc
adc
mov
jae
jne
out
in
es
es
push
adc
cmps
push
xchg
out
cwde
add
or
pushf
out
(bad)
cmp
dec
dec
push
jmp
sub
cmp
push
fs
sbb
mov
mov
xchg
mov
sub
xchg
cli
pushf
pop
push
add
xlat
or
pop
dec
stc
mov
cmps
xor
int3
add
inc
int3
and
rcl
mov
sahf
loope
es
sti
dec
(bad)
add
inc
sub
fwait
not
int3
pop
out
outs
and
icebp
xchg
xchg
xchg
es
int
add
dec
in
imul
mov
test
(bad)
loopne
fwait
pop
ss
mov
sub
fcmovbe
imul
pop
lahf
push
push
pop
sbb
clc
(bad)
cwde
cld
or
fs
ins
mov
iret
fs
sti
stos
loopne
ds
jbe
call
mov
adc
iret
inc
lods
not
cmps
fdivr
xor
mov
cwde
mov
(bad)
mov
inc
ss
or
and
xchg
(bad)
dec
push
cmp
xlat
or
popa
bound
fild
jg
pop
sbb
sbb
jmp
(bad)
pop
std
movs
pushf
adc
cld
mov
push
sar
mov
sub
and
inc
mov
push
add
cwde
sub
or
push
pop
mov
pop
pop
jl
int
jae
scas
mov
push
inc
add
in
xlat
lock
dec
dec
xchg
push
movs
or
xchg
aaa
(bad)
in
push
bound
sar
rcr
mov
call
fisub
cmc
inc
ds
fld
scas
pop
inc
daa
sub
xchg
cdq
loop
and
mov
stos
jo
cmp
das
sub
stc
outs
push
(bad)
enter
cmp
sub
mov
popa
repnz
add
mov
aas
sbb
rcr
and
inc
mov
retf
xor
shr
mov
ret
sar
stos
pop
ss
loopne
int
xchg
mov
dec
pop
xchg
push
and
add
arpl
and
pop
pop
and
imul
mov
loop
loop
fiadd
pushf
fld
pop
pcmpgtw
int3
xor
xor
sub
inc
stc
jmp
mov
pop
ret
cld
sub
popa
add
add
shl
in
mov
pop
xchg
jecxz
in
inc
xchg
clc
je
xchg
or
lods
mov
add
jmp
jle
jo
mov
dec
fadd
jne
jae
mov
mov
push
inc
xor
push
inc
sahf
stc
sub
fcomip
push
lock
(bad)
cld
daa
daa
or
pop
add
bound
pop
inc
cdq
sbb
dec
jp
sub
fwait
cmps
pusha
rcr
mov
je
jg
inc
sub
into
loopne
inc
cli
dec
mov
or
lahf
repz
rol
ds
hlt
mov
(bad)
sub
jg
add
(bad)
shr
xor
aam
pop
adc
es
mov
out
std
add
outs
out
out
mov
fdivr
out
mov
adc
mov
jecxz
dec
pop
mov
jp
cmp
sub
mov
out
dec
retf
jo
into
icebp
xchg
arpl
sub
ds
push
movs
mov
adc
iret
test
in
sub
jge
sti
or
pop
mov
out
xchg
sbb
iret
xchg
cmp
mov
sub
sub
test
add
test
jns
mov
lods
dec
ret
sub
xchg
in
jo
mov
ss
mov
repz
inc
hlt
out
es
imul
out
sbb
popf
imul
imul
mov
scas
jp
sub
bound
mov
sar
mov
fwait
jmp
and
pop
das
push
jg
pop
push
cmp
dec
mov
loop
aad
ja
mov
push
jnp
xor
es
mov
aaa
mov
xor
push
retf
add
xchg
xchg
nop
jb
lock
mov
mov
pop
inc
mov
sar
xor
(bad)
in
fsub
ins
repz
(bad)
inc
sub
(bad)
(bad)
enter
clc
mov
or
and
mov
sbb
out
adc
lods
or
inc
icebp
rcr
lahf
fmul
mov
outs
xchg
scas
adc
add
cmp
aas
shrd
fdivr
xchg
jle
adc
fstp
jecxz
aas
in
fstp
add
pop
push
(bad)
fbstp
jg
push
aam
aaa
mov
loopne
fld
dec
arpl
es
or
nop
movs
mov
ret
and
arpl
mov
push
je
or
jne
mov
leave
(bad)
cmp
rol
faddp
loope
pusha
mov
xchg
dec
sbb
aas
inc
mov
pop
push
mov
loope
stos
mov
sbb
adc
fdivr
jno
lock
mov
xchg
data16
ror
ds
sbb
dec
mov
and
jecxz
int
mov
sbb
rcl
adc
and
aas
in
aaa
jno
cmp
mov
or
dec
dec
dec
scas
sub
mov
std
jo
xchg
iret
push
push
and
rol
clc
(bad)
jbe
jl
iret
ins
retf
(bad)
mov
xchg
inc
xchg
xchg
addr16
fidivr
lahf
lahf
retf
mov
sub
cli
and
retf
sbb
inc
inc
push
mov
dec
mov
and
push
imul
jo
call
inc
adc
add
(bad)
(bad)
sub
sar
sub
fs
sub
retf
mov
mov
adc
mov
jno
or
ret
cli
(bad)
call
loop
push
sub
lods
test
cld
mov
cwde
in
and
jle
dec
xlat
add
stos
enter
ja
inc
fisubr
(bad)
and
inc
fisttp
lds
mov
arpl
jnp
arpl
cmp
loope
pop
mov
mov
pop
xor
(bad)
xchg
in
nop
mov
inc
test
mov
fadd
xchg
inc
fucomip
cmc
outs
outs
imul
ins
mov
mov
sbb
push
mov
xlat
aaa
movs
(bad)
pop
fisttp
mov
scas
xlat
adc
call
pop
or
js
adc
jae
outs
stos
cs
mov
sub
ret
xchg
mov
ja
xchg
jmp
or
inc
dec
imul
outs
mov
jecxz
cmps
push
xchg
xchg
shr
jg
mov
scas
or
or
and
test
clc
and
scas
aas
jle
and
outs
dec
dec
rcr
or
call
pop
repz
and
daa
push
(bad)
mov
xadd
xchg
and
fnsave
mov
push
je
pop
pop
ss
stc
jp
fsubr
xchg
adc
rcl
pop
xor
mov
add
or
test
pop
aad
push
sbb
mov
adc
push
mov
xor
and
mov
rcr
push
jno
push
hlt
pop
hlt
test
jmp
lea
sub
pop
inc
pop
push
xchg
inc
or
jno
cmp
call
xchg
jge
inc
fidivr
fisubr
push
pop
jecxz
aam
sar
call
push
frstor
add
mov
or
inc
jecxz
and
aad
fist
scas
div
out
movs
inc
dec
fidivr
xor
not
lods
sti
cwde
cmp
adc
inc
cmp
mov
xchg
push
ds
and
pcmpeqw
add
mov
mov
cmp
mov
fisub
jmp
test
jae
xchg
or
add
mov
jle
rol
push
sub
mov
ss
loope
lds
stos
mov
mov
out
fistp
sub
das
xor
sub
push
push
and
mov
mov
xchg
int
xor
mov
jg
nop
inc
mov
gs
jmp
add
das
push
push
cmp
push
clc
lea
pop
and
daa
xorps
pop
pop
jmp
(bad)
lock
jmp
sbb
ret
inc
add
imul
mov
loope
mov
mov
push
ins
mov
outs
sbb
imul
retf
movs
cld
out
shr
mul
dec
icebp
ds
and
rol
js
cwde
mov
jge
pop
xchg
or
sub
sbb
inc
out
xchg
inc
stos
aam
sub
or
enter
mov
add
mov
jg
or
pop
xor
jl
retf
call
jg
aam
mov
sbb
sub
sbb
xor
pushf
lahf
adc
xchg
retf
shl
or
mov
or
mov
inc
(bad)
adc
not
xchg
dec
sti
dec
scas
add
ficom
inc
adc
mov
dec
aam
mov
rcl
test
loopne
call
or
mov
fdivr
jno
jge
cmp
or
pushf
out
add
fxch
out
in
dec
shl
xor
jno
popa
inc
cmps
stos
mov
push
inc
inc
lods
out
cmp
hlt
mov
and
mov
nop
dec
cmp
xchg
pop
xchg
idiv
ss
pop
stc
pop
clc
xchg
mov
cld
adc
add
add
sbb
or
in
add
inc
xlat
inc
test
push
mov
in
add
mov
inc
js
je
mov
xor
jmp
push
adc
pop
pop
push
sahf
jg
inc
lea
movs
adc
pop
mov
pop
jle
jmp
rcl
lods
xor
push
or
pop
pushf
add
mov
mov
pop
xchg
and
test
pop
out
pop
mov
mov
xor
mov
push
(bad)
jnp
or
mov
daa
sub
adc
inc
loop
jle
mov
add
add
add
jp
mov
fmulp
(bad)
xor
arpl
mov
sti
add
es
loop
adc
mov
cwde
pop
xchg
push
ja
inc
cld
xchg
nop
frstor
adc
mov
in
push
inc
mov
(bad)
mov
mov
mov
iret
iret
dec
cdq
data16
ins
mov
jge
cmp
stos
rcl
mov
and
push
das
dec
cwde
mov
dec
cmp
dec
stc
xchg
stos
inc
loope
ss
jle
lahf
xor
add
pushf
or
out
repz
test
mov
imul
inc
(bad)
clc
fild
enter
inc
xor
repz
ins
adc
jno
jb
in
fwait
rcl
stos
lds
ss
inc
lahf
ss
lods
sbb
cli
adc
pop
scas
sub
mov
(bad)
bnd
xor
mov
mov
mov
add
mov
stos
fmul
dec
cli
nop
test
call
repz
ds
(bad)
push
pop
xchg
rcr
dec
xor
adc
mov
pop
enter
add
loopne
pop
leave
scas
cmp
xor
pop
cmp
pop
rol
add
into
lock
fs
retf
cmp
ja
xchg
xor
xor
nop
sbb
cmp
add
adc
(bad)
adc
push
fs
sbb
call
adc
adc
xlat
test
add
dec
sub
into
out
xor
mov
loop
push
jnp
popf
inc
and
cs
push
in
icebp
movs
xchg
mov
aad
add
adc
inc
out
ss
dec
jno
mov
gs
shl
popf
pushf
clc
jecxz
fisttp
adc
popf
xchg
jmp
cmp
xor
and
aaa
cmp
xor
add
cwde
mov
jmp
bound
jbe
push
call
adc
aas
lods
inc
sub
mov
lods
in
pop
xor
fist
sbb
in
xor
jae
addr16
jns
push
mov
xor
mov
jge
aas
addr16
jbe
pop
push
scas
jp
xor
iret
and
imul
pop
add
adc
sbb
sub
enter
movs
leave
out
popf
dec
lods
leave
loope
mov
pusha
sti
movs
dec
xchg
jne
inc
pop
ror
popa
pop
pop
out
pop
add
adc
xchg
cmp
aad
repnz
add
sbb
jecxz
retf
repz
mov
sub
shl
(bad)
rol
adc
inc
fdiv
into
mov
adc
mov
inc
gs
ds
dec
xor
into
sub
das
rol
add
loopne
bound
aas
fisub
mov
pop
xchg
cmps
imul
add
mov
sub
arpl
sbb
dec
sub
cld
or
push
outs
xchg
jle
out
pop
imul
push
pop
icebp
out
adc
inc
je
enter
pop
sub
dec
mov
pop
into
cmp
cmp
clc
push
mov
pop
xchg
inc
shl
sti
aas
stos
scas
sub
lds
cdq
cs
lds
and
jmp
mov
xor
mov
scas
and
sub
dec
mov
mov
jae
lock
xchg
arpl
arpl
fild
ins
retf
xor
pop
mov
xor
movs
movs
xchg
inc
int
sub
add
adc
das
sbb
(bad)
and
(bad)
sbb
sbb
leave
rol
sub
mov
pop
dec
mov
hlt
sar
add
(bad)
mov
(bad)
mov
sbb
pusha
cmc
push
mov
xor
inc
cdq
pop
inc
sbb
pusha
mov
xor
mov
fnsave
adc
mov
xor
mov
pop
outs
mov
shl
popf
jg
enter
mov
test
movs
pop
in
lods
or
pop
cmp
mov
leave
pop
imul
pusha
jne
adc
leave
adc
dec
pop
jne
mov
pop
sbb
leave
adc
call
xchg
adc
jmp
sub
leave
ins
sub
pop
cmp
inc
pop
out
push
mov
pusha
dec
in
cs
xchg
pop
jg
pop
and
mov
in
rcr
xlat
cmps
iret
lea
and
push
xlat
jb
shl
push
cmps
sbb
inc
mov
ss
mov
inc
pusha
cmp
shl
or
(bad)
xchg
out
xchg
pop
frndint
sub
inc
adc
ja
das
lds
cmc
xor
push
inc
or
add
movs
ret
push
test
iret
scas
or
adc
or
push
(bad)
hlt
stos
sti
into
rcr
jnp
xlat
stos
cs
enter
and
imul
push
pop
mov
call
pop
lock
jg
push
jp
daa
pop
xchg
jp
mov
scas
je
jne
test
not
sbb
cmps
xchg
push
inc
mov
push
in
pop
inc
add
sbb
pop
ret
imul
xor
jbe
mov
cmc
jb
test
or
mov
xor
pop
push
mov
das
test
mov
adc
es
add
imul
stos
jb
mov
mov
mov
mov
adc
mov
clc
or
fs
mov
mov
fidiv
xchg
inc
dec
scas
pop
bound
je
dec
inc
and
xor
rol
js
and
mov
push
jecxz
shl
sub
inc
pop
jbe
dec
cwde
sar
xlat
fidiv
sbb
mov
pop
arpl
jno
inc
fdivrp
gs
outs
jns
ret
loop
jl
mov
dec
adc
js
mov
jnp
lea
(bad)
xchg
call
mov
data16
ds
inc
shl
das
push
inc
inc
pop
and
dec
pop
mov
cmc
out
xchg
enter
dec
jae
nop
mov
fwait
arpl
mov
bound
je
push
push
pop
cdq
aad
mov
mov
jl
push
sar
sahf
mov
add
and
mov
mov
retf
cdq
push
iret
clc
imul
xor
add
mov
xchg
scas
ret
fadd
pop
and
out
test
pop
in
nop
aas
dec
push
dec
sbb
jl
sbb
repnz
enter
mov
mov
dec
cmps
sbb
push
jle
imul
xchg
jmp
push
mov
inc
and
push
fwait
mov
xchg
push
fsub
aad
mov
(bad)
cmps
sub
mov
leave
arpl
push
push
xchg
in
jno
out
cmp
dec
fwait
retf
push
jge
sub
mov
push
mov
pop
jl
adc
add
ins
sub
xor
xchg
jae
cmps
sub
das
int
cld
nop
sub
adc
xor
xchg
stos
mov
out
fimul
xlat
in
push
lds
mov
test
stos
(bad)
adc
pop
cli
dec
retf
fs
push
daa
jo
adc
push
movs
jmp
sub
mov
loopne
test
das
lahf
in
fs
icebp
push
jbe
idiv
out
in
adc
jp
jnp
out
mov
and
xchg
pop
xchg
mov
nop
sub
inc
xchg
lock
test
sbb
jno
es
xor
pop
inc
cmc
stos
adc
(bad)
fadd
neg
inc
mov
add
iret
daa
inc
mov
nop
aaa
sbb
xor
push
xor
sub
or
jg
pop
popf
arpl
leave
(bad)
mov
fist
jg
fwait
test
and
xor
(bad)
lock
test
scas
mov
jecxz
jne
xchg
cmp
mov
imul
cmp
mov
shl
mov
add
push
out
jp
push
in
sub
rcr
cmp
fisubr
js
mov
push
ss
shr
in
push
nop
pop
mov
daa
imul
cwde
jmp
aam
in
xchg
inc
(bad)
jmp
cmp
lods
add
pop
ret
fidivr
jbe
sub
movs
pop
push
loop
mov
bound
or
stos
mov
ror
mov
sbb
mov
adc
cmp
add
(bad)
mov
aad
scas
nop
(bad)
in
add
cmp
lods
push
icebp
test
rcl
ins
popf
hlt
clc
aas
int
lea
js
inc
pop
pop
jns
adc
sbb
xlat
mov
je
mov
pop
push
push
call
mov
rcl
aam
sbb
pop
sahf
mov
pop
mov
pop
clc
idiv
retf
inc
nop
sub
push
xor
sbb
data16
ja
ror
sbb
pop
fistp
fbstp
test
cmp
and
sbb
mov
dec
or
or
xchg
nop
push
(bad)
fst
adc
mov
pop
mov
pop
aam
inc
or
add
or
mov
pop
cmp
into
movq
adc
ret
mov
popa
mov
adc
shl
cmp
push
mov
push
and
xchg
pop
and
movs
push
fimul
mov
out
pop
mov
ins
pop
xor
pop
and
xor
jmp
arpl
xlat
cmp
stc
pop
xlat
and
mov
mov
push
stos
stos
mov
push
aam
fimul
sub
or
arpl
and
dec
arpl
not
daa
pop
inc
jae
cs
test
shl
cmp
and
sbb
cmp
shr
sub
jns
test
cdq
arpl
(bad)
jae
add
push
push
cmps
fisttp
jbe
ins
ror
les
les
cmps
inc
fldcw
movs
rcr
dec
xor
inc
push
push
js
loop
mov
xchg
int
je
mov
mov
and
rcr
scas
sbb
adc
sbb
(bad)
fucom
pop
fdiv
out
and
pop
mov
sub
mov
sbb
(bad)
aad
and
cmp
cmp
std
loop
out
stc
and
mov
movs
xor
add
hlt
add
push
pusha
mov
jmp
cli
jb
pop
adc
mov
mov
lods
aaa
sub
cmp
rcl
pushf
and
adc
cli
cdq
iret
mov
shl
jbe
pop
sub
loop
ds
mov
dec
int3
(bad)
cdq
jo
push
push
xor
push
movs
icebp
ror
ds
mov
or
rcl
xor
fwait
xor
shl
adc
pop
dec
jnp
inc
xchg
xchg
dec
fidiv
mov
(bad)
adc
xchg
pop
xchg
ja
pop
js
jne
repnz
jge
push
push
pop
mov
inc
and
jmp
mov
jge
dec
fwait
mov
ins
pop
jg
fnstsw
mov
(bad)
scas
out
jl
cmp
mov
push
fisttp
adc
xchg
jnp
sbb
cmp
sahf
xchg
pop
pop
or
loopne
cmps
push
stc
jge
mov
bnd
pop
(bad)
mov
fisttp
loope
clc
sar
ret
jo
test
(bad)
dec
pusha
cmp
push
inc
sub
fld
(bad)
sbb
or
das
and
test
mov
je
xlat
xchg
jbe
cmp
pop
dec
iret
sar
sbb
or
test
jbe
imul
loopne
test
push
outs
xor
cmps
mov
and
add
mov
push
lock
mov
int3
sar
and
movs
jecxz
movs
test
das
dec
xchg
xor
pushf
fld
loop
fisttp
pop
cmp
in
jb
mov
sbb
pop
sbb
loope
fs
popf
cld
inc
push
pop
cmp
push
jp
stc
push
fwait
repz
cmp
and
js
mov
xor
add
mov
sti
mov
jmp
mov
enter
jae
call
imul
pop
mov
pop
cmps
jbe
repnz
repz
aas
pop
loope
sbb
lods
jg
xor
in
add
ins
sbb
adc
mov
adc
loop
cmp
std
call
les
scas
cmps
stos
mov
inc
in
dec
std
dec
sbb
jne
add
pop
inc
xchg
stos
add
psrad
dec
call
sub
jp
add
retf
lods
mov
mov
xchg
les
xchg
pop
jl
lahf
add
cmp
jl
jge
out
push
xchg
mov
mov
not
push
add
pusha
fidiv
fstp
daa
ss
pop
jmp
pop
mov
cli
xchg
daa
jb
push
dec
mov
idiv
shl
nop
sub
cmp
sbb
add
pop
and
fistp
mov
cld
icebp
pop
push
mov
push
jb
push
xchg
sub
pop
push
stos
bound
inc
mov
vpcmpgtb
xchg
ins
pop
and
cdq
outs
pop
mov
sar
mov
or
les
push
std
jb
fcom
fst
jae
mov
popf
mov
inc
ins
cmp
fcmove
jg
cli
ds
mov
outs
stos
jnp
adc
int3
js
mov
out
ss
adc
jmp
sub
pop
je
and
push
dec
pusha
sub
xchg
xor
inc
sbb
jecxz
movs
aas
xchg
xlat
xchg
outs
jle
push
dec
mov
xchg
mov
fsubr
dec
add
push
lods
retf
std
xor
imul
shl
xchg
or
add
fwait
bound
aaa
inc
ret
adc
out
xlat
add
pop
jge
xchg
daa
inc
dec
push
aad
arpl
(bad)
fdiv
mov
mov
in
popa
mov
xlat
push
icebp
jns
jmp
adc
dec
shr
add
dec
push
mov
sbb
or
push
(bad)
xchg
cmps
outs
add
mov
pop
pop
ret
xchg
bound
push
sahf
sub
call
sub
idiv
(bad)
fild
xlat
hlt
adc
adc
scas
imul
sbb
xor
ins
jne
add
ins
fucom
adc
xchg
(bad)
(bad)
push
pop
fimul
ja
repz
lods
movs
inc
lock
test
daa
clc
jno
mov
sbb
(bad)
jmp
je
pushf
cmp
stos
sub
mov
aaa
fisub
cmp
adc
rcl
sti
sbb
xor
out
jne
sub
loope
and
push
cmps
push
mov
shl
fcmove
mov
imul
ja
mov
xor
jmp
sbb
mov
pop
arpl
inc
mov
scas
aaa
dec
xchg
lds
push
inc
js
std
lods
push
mov
call
ins
lods
add
cmps
cld
cld
icebp
push
int3
adc
int3
popf
call
aad
jae
add
lds
fs
dec
stos
cmps
fidiv
fs
jg
jmp
push
add
jp
adc
test
inc
call
out
xchg
pop
mov
call
jge
popa
sub
push
mov
push
in
or
mov
push
mov
mov
mov
lahf
ja
ins
xchg
popa
loope
out
inc
mov
mov
dec
push
sbb
das
shl
dec
jmp
aaa
jo
xchg
clc
je
cdq
jno
dec
sbb
imul
scas
mov
repnz
in
es
ret
inc
test
out
imul
mov
jno
test
sbb
and
leave
pusha
retf
xchg
ja
aas
mov
icebp
pop
int
std
mov
aas
mov
cmp
or
js
add
loope
sbb
inc
pop
scas
mov
push
enter
mov
and
sbb
and
in
into
lea
call
scas
push
dec
xchg
std
aaa
sub
jl
cmp
mov
and
dec
cmps
mov
pop
bound
sub
pop
sub
xchg
das
dec
addr16
or
xor
jp
push
movs
lods
aaa
cmc
jb
loop
push
movs
inc
mov
ja
mov
sbb
test
push
test
lahf
cs
aaa
rcl
and
bound
jecxz
sete
pop
mov
lds
repnz
sbb
dec
inc
gs
xchg
sub
push
rol
jne
mov
ficom
ret
stos
pop
cmps
xor
xor
mov
movs
fistp
rcl
mov
arpl
add
mov
adc
mov
adc
ffree
jp
das
sahf
shr
not
jbe
add
test
or
gs
in
ds
mov
rcl
push
mov
sbb
mov
or
sahf
xor
retf
out
mov
dec
push
mov
xor
add
mov
cmp
jo
xchg
shr
sbb
sbb
fimul
pop
dec
rcl
xchg
dec
in
jecxz
imul
ror
mov
dec
inc
retf
xor
sti
inc
popf
mov
sar
sub
xchg
icebp
jns
pop
ror
jg
add
(bad)
fnsave
inc
sbb
icebp
xchg
jmp
mov
sbb
add
jmp
dec
inc
imul
inc
aaa
pop
cmc
data16
push
out
dec
mov
inc
into
add
cld
push
mov
push
repnz
out
aad
xor
add
jb
adc
es
es
jnp
pop
and
nop
std
cli
into
popa
mov
jnp
jecxz
movs
and
addr16
(bad)
or
sbb
fld
or
loopne
mov
scas
ror
iret
push
and
fadd
add
cmp
push
jae
push
xor
das
ins
sub
xchg
sub
(bad)
sbb
xchg
sub
fs
popf
push
in
into
in
(bad)
das
jns
aaa
xchg
adc
(bad)
adc
fsin
outs
xchg
dec
sub
data16
add
pop
lods
mov
adc
xchg
loop
push
jg
fidiv
cmp
xchg
sahf
xor
mov
xor
inc
lods
jge
fs
ins
and
lea
loopne
pop
push
mov
je
sahf
out
pop
clc
fstp
dec
arpl
lock
push
mov
stos
mov
xchg
es
dec
ins
xor
and
call
jle
xor
aam
(bad)
in
js
fld
pop
cmp
or
sub
push
pop
add
mov
fwait
add
retf
popa
scas
adc
dec
mov
stos
ja
push
inc
int3
stc
mov
inc
jb
mov
int3
adc
push
aaa
mov
jbe
mov
sbb
fcom
bound
aas
sub
loop
icebp
and
adc
outs
cmps
std
and
fwait
jle
les
retf
into
clc
pop
jbe
nop
daa
iret
loop
sub
push
sub
push
inc
ds
test
pushf
inc
imul
pushf
dec
cmp
add
sub
lods
xor
out
push
jmp
push
sub
sbb
push
push
xchg
push
and
dec
push
ins
fcomp
in
mov
fnstcw
aaa
jno
lods
aaa
or
(bad)
pop
sub
(bad)
cmps
mov
push
into
or
stos
je
cmp
xchg
movs
push
inc
jp
rcr
push
add
aad
and
fs
loop
cmps
cwde
test
push
out
aam
icebp
test
rcr
cmp
in
repnz
les
and
not
mov
retf
ret
xchg
xor
xchg
dec
test
xchg
call
data16
mov
lds
repz
jbe
pop
add
push
adc
not
add
int3
retf
imul
dec
test
pop
fidivr
dec
mov
cmc
mov
xor
out
sahf
or
in
popa
bound
imul
sub
(bad)
cmp
repz
cmp
fsub
(bad)
mov
mov
fstp
and
inc
in
fmul
xor
push
popa
shl
scas
cmp
and
pop
imul
dec
add
pop
aas
cmps
pop
sti
mov
push
and
xchg
(bad)
mov
scas
scas
push
sbb
addr16
(bad)
in
fild
xor
movs
popa
mov
xor
outs
cmp
xchg
or
sbb
pop
test
and
mov
inc
sti
clc
das
sbb
lock
in
mov
mov
push
cmp
or
mov
add
cmp
sub
xchg
cwde
outs
or
jmp
mov
jle
movs
std
arpl
and
fadd
adc
or
adc
dec
cwde
and
mov
out
mov
dec
pop
mov
cmp
cmc
nop
mov
mov
cmps
dec
test
stc
push
mov
imul
or
push
mov
int
mov
xchg
je
ret
xchg
loop
or
rcr
imul
out
aam
jmp
adc
jb
push
push
scas
lods
pop
cwde
sbb
lahf
mov
jp
mov
inc
or
mov
push
inc
pop
int3
push
(bad)
lods
cmps
adc
out
imul
icebp
(bad)
jp
lods
es
ret
ficom
cmp
push
xor
stc
jo
sub
dec
cmp
jbe
iret
ror
gs
push
jecxz
sub
or
adc
pop
mov
call
push
xor
and
mov
mov
or
sub
sub
ret
xchg
div
pushf
cmp
enter
adc
fs
cmp
jno
or
in
test
mov
sbb
push
loop
push
jle
xchg
ins
pushf
aas
lock
lods
cmp
adc
dec
mov
xor
nop
pusha
sbb
jp
in
push
adc
adc
test
adc
jge
inc
and
or
inc
mov
jo
mov
push
jmp
test
out
dec
call
(bad)
xchg
cmp
cli
pop
adc
mov
dec
fwait
out
xor
in
call
mov
shl
(bad)
retf
jb
xor
mov
mov
and
jl
xor
in
mov
xchg
push
in
pop
add
cmps
dec
jae
fld
les
sbb
or
lahf
pop
inc
mov
or
sbb
repz
fisttp
and
dec
test
inc
out
fbld
cdq
test
add
xchg
ss
add
pop
retf
add
(bad)
jle
out
cs
aam
movs
mov
add
es
retf
xchg
ror
dec
in
scas
(bad)
mov
push
adc
mov
push
push
(bad)
mov
aaa
lea
scas
int
std
gs
call
das
mov
call
mov
cli
lods
(bad)
int3
das
outs
mov
rol
sbb
(bad)
adc
fwait
adc
sbb
cli
add
and
push
xchg
lods
outs
push
imul
and
push
enter
sub
mov
mov
cmp
fdivr
or
cmps
push
shr
mov
lds
mov
push
in
or
push
add
inc
adc
(bad)
shr
test
inc
ja
push
jp
jnp
and
aam
shr
add
test
stos
sub
call
add
xchg
ins
sub
movs
shr
mov
rcl
hlt
fcomp
adc
addr16
dec
arpl
in
sbb
jp
nop
push
aaa
cmp
faddp
mov
sbb
dec
push
test
rcl
mov
rcr
jnp
sub
mov
push
int3
cmp
cdq
ja
(bad)
test
in
adc
arpl
mov
sub
inc
mov
push
xlat
or
sbb
call
xchg
les
fisub
and
ror
stos
loop
xor
hlt
mov
mov
popf
fwait
add
addr16
das
inc
call
or
pop
pop
push
push
inc
add
or
into
aaa
jp
pop
repz
cld
repz
xor
or
je
mov
rcr
cld
(bad)
cmp
popf
jno
pushf
mov
ja
loope
clc
mov
push
repnz
ins
movs
push
les
stos
sbb
xchg
stc
into
xchg
into
inc
push
mov
or
jge
les
retf
mov
out
xlat
mov
je
lds
mov
dec
inc
repz
mov
pop
mov
mov
sar
rcr
rol
dec
pop
mov
outs
ret
int
test
sahf
jno
dec
add
jbe
lahf
shr
xchg
mov
fwait
pop
pop
push
cli
je
adc
pop
pop
pop
cmp
mov
fs
add
icebp
fwait
cmps
fxch
aaa
or
dec
movs
in
adc
xchg
add
push
in
rcr
pop
mov
movs
add
int
pop
jns
movs
arpl
ror
mov
out
mov
push
(bad)
in
fcomp
dec
or
push
rcr
mov
push
test
(bad)
push
sbb
xor
push
loopne
daa
repz
dec
stos
push
lock
enter
daa
xor
push
inc
in
jne
jmp
pop
mov
test
jmp
loope
leave
adc
inc
jge
xchg
inc
fsubr
and
sub
lahf
jecxz
push
xor
xchg
ror
int3
inc
mov
out
adc
imul
inc
sub
push
xlat
clc
mov
les
into
test
std
mov
std
xor
xchg
add
scas
inc
shr
fmul
and
out
and
(bad)
(bad)
idiv
cmp
jg
rcr
ret
mov
jle
mov
pop
out
test
push
inc
mov
sti
or
inc
xchg
js
xchg
xor
add
test
ins
or
bound
stc
push
inc
jl
fcom
sbb
xor
or
movs
in
mov
aam
ins
jmp
xchg
mov
enter
xor
dec
add
mov
adc
popf
push
xchg
push
call
sbb
hlt
into
cld
and
pop
ins
push
lods
mov
jo
js
inc
aaa
jle
pop
imul
fimul
pop
daa
add
aam
retf
call
xchg
fiadd
jns
adc
mov
push
in
sbb
sbb
inc
adc
into
leave
cdq
rcl
xor
xlat
movs
jg
push
test
cmps
lea
fbstp
retf
mov
sbb
int
or
cmc
mov
pop
(bad)
aas
aaa
push
push
fcomi
fnstsw
or
mov
pushf
adc
sti
out
push
mov
in
pop
push
mov
or
(bad)
loop
dec
cmp
stos
ins
jno
stos
aas
sub
or
stc
jb
popf
fimul
xor
test
mov
mov
outs
les
mov
aaa
or
push
and
mov
nop
out
jb
mov
mov
not
clc
fwait
jns
data16
mov
fwait
xor
leave
push
aas
pop
mov
les
pop
cmc
(bad)
cmp
bound
add
cwde
fidivr
out
pop
rol
sti
call
fisubr
into
shl
mov
push
push
sahf
cmc
js
xlat
pop
les
mov
jae
fs
mov
je
mov
loopne
daa
mov
fdiv
sub
mov
cmp
push
mov
and
enter
push
clc
call
dec
retf
cwde
in
xor
jne
and
mov
out
mov
push
sar
push
mov
sti
push
shl
lock
sbb
xor
pop
rol
push
hlt
pushf
dec
inc
scas
inc
(bad)
int3
push
mov
lahf
fprem1
das
jns
fstp
call
fisttp
in
and
and
push
jmp
stc
pushf
lods
inc
jnp
sub
imul
push
sbb
bound
mov
jmp
xchg
loop
pop
(bad)
fdivr
jle
pop
sub
xchg
pop
and
adc
add
pop
movs
cli
out
sbb
fwait
jp
(bad)
loop
adc
outs
loopne
cmp
ret
mov
jmp
jp
or
adc
push
add
cmp
cmp
stos
mul
dec
xor
hlt
aaa
or
push
daa
sahf
cwde
push
das
xchg
retf
cmps
fisttp
cli
(bad)
lock
xchg
fs
daa
clc
jae
outs
or
inc
add
pop
jns
pop
xor
and
sbb
loopne
mov
lock
dec
add
mov
fst
jmp
or
jmp
mov
stc
mov
and
mov
lahf
fidiv
add
sbb
aad
pushf
push
dec
adc
fidivr
or
or
sub
movs
fs
inc
dec
sbb
fnstcw
sahf
sahf
mov
pop
mov
sbb
out
push
pop
es
movs
adc
mov
mov
mov
cmc
and
sahf
adc
xor
pop
jbe
pop
inc
sti
hlt
and
push
aad
in
xchg
fdiv
das
fwait
and
jmp
sahf
jmp
icebp
jg
sub
mov
call
mov
inc
sti
arpl
pop
xchg
ficomp
mov
imul
sti
mov
jle
cmp
mov
cdq
jg
mov
loopne
fwait
aaa
les
aam
sar
mov
lea
outs
clc
rep
int
mov
push
ins
enter
push
mov
sub
push
and
mov
inc
or
fisubr
add
sar
dec
xchg
and
mov
not
jg
add
or
xchg
daa
fmul
(bad)
in
pop
jmp
lahf
pop
sti
cmp
add
(bad)
jb
ds
arpl
xchg
out
xchg
ja
test
pop
lods
mov
inc
stos
xchg
sub
mov
mov
and
dec
dec
pop
jmp
(bad)
movs
jae
mov
repz
sbb
xlat
inc
repz
mov
mov
adc
jnp
sub
sahf
and
jnp
xchg
push
mov
cmp
cmp
mov
nop
jnp
push
in
pop
push
aam
inc
fdiv
or
inc
dec
jmp
add
jno
jmp
dec
(bad)
ficomp
pop
cmp
cmps
ins
imul
mov
mov
in
dec
push
(bad)
scas
mov
sub
sbb
cmps
cmp
not
push
sti
into
hlt
(bad)
out
daa
push
inc
aas
mov
loope
scas
into
cmp
sub
test
les
xchg
jb
test
icebp
and
shl
retf
lea
inc
fisttp
mov
jge
or
and
repz
cmc
xchg
cmp
pop
inc
sbb
mov
test
inc
push
mov
jl
inc
das
adc
into
adc
ins
aas
(bad)
sbb
arpl
out
aad
div
rcr
stos
push
call
cmps
daa
or
jnp
cld
cmovle
cmp
xlat
mov
outs
rol
and
xor
sbb
xchg
inc
cmp
mov
cld
in
jmp
mov
xchg
mov
fistp
push
dec
pop
push
xchg
sahf
div
xchg
cmp
mov
mov
push
ror
mov
rcl
test
xor
call
cmp
test
out
dec
add
or
aad
leave
sbb
pop
and
push
fiadd
mov
fsub
sbb
ror
push
pop
mov
add
ret
jle
sbb
clc
xchg
std
iret
sahf
icebp
inc
push
out
push
xlat
mov
out
imul
fisubr
test
inc
fs
or
pop
push
pop
(bad)
in
sbb
out
mov
mov
and
sbb
scas
mov
or
shl
fimul
cmp
dec
pop
dec
imul
ror
cmc
or
ins
sub
fs
cmp
sar
fsubr
aam
cmps
cmc
mov
dec
bound
ret
int
add
sub
push
sub
add
test
test
jecxz
pusha
ret
xchg
xor
inc
sbb
mov
xor
aaa
mul
xor
adc
mov
in
cli
xchg
test
fist
mov
jmp
pop
nop
hlt
mov
dec
repnz
jns
test
les
add
xchg
mov
mov
shr
(bad)
push
fistp
xchg
push
add
sub
int3
mov
enter
mov
movs
js
mov
push
and
mov
jno
bswap
push
nop
inc
jne
xchg
int
pop
jp
rcl
mov
sub
jnp
xchg
addr16
xchg
push
mov
mov
jmp
in
xchg
sub
pusha
xchg
das
dec
inc
and
aam
inc
mov
pop
mov
mov
mov
inc
push
jp
lahf
push
arpl
jg
pop
push
fist
mov
push
push
jle
push
leave
mov
pop
outs
and
outs
sub
add
xor
jl
mov
jne
ins
push
add
ret
paddb
jo
mov
(bad)
mov
in
sbb
sbb
jp
cld
je
outs
ds
out
imul
(bad)
into
push
adc
fcomp
sbb
or
(bad)
cld
mov
(bad)
fnsave
mov
adc
xor
jae
lahf
or
ins
dec
inc
sub
sub
pop
ror
dec
retf
jl
(bad)
or
mov
popf
aad
fdivp
aam
sub
mov
and
mov
mov
data16
jp
xchg
fwait
mov
and
imul
cmc
xor
sub
xchg
jne
mov
test
push
mov
ins
test
(bad)
mov
loopne
std
fs
add
and
and
icebp
fmul
mov
es
cs
push
push
addr16
add
scas
cmp
sti
push
shr
outs
mov
mov
sub
cmp
outs
mov
adc
xchg
ret
inc
fwait
pop
inc
loopne
jl
mov
enter
jl
push
outs
ins
fimul
(bad)
cmp
pop
inc
popf
xor
cmp
add
pop
es
(bad)
adc
dec
arpl
adc
xchg
inc
data16
movs
xor
ret
fiadd
sub
out
cwde
in
cmp
mov
repnz
popa
gs
(bad)
xchg
cld
pop
and
(bad)
sbb
xchg
add
ror
sbb
xchg
inc
jbe
(bad)
sub
(bad)
fcmovnbe
leave
mov
push
(bad)
inc
dec
test
or
inc
scas
lods
out
sar
mov
test
jp
repnz
add
fst
pop
lahf
inc
cld
dec
jl
jb
in
or
in
and
rol
sub
xchg
inc
test
mov
xchg
retf
mov
fstp
or
add
jb
ss
enter
add
add
lods
inc
shl
iret
test
test
xchg
mov
or
popa
test
shr
mov
push
cmp
(bad)
loopne
dec
outs
or
iret
out
and
inc
jmp
enter
shl
cwde
aad
ds
shr
mov
gs
mov
pop
(bad)
pop
mov
punpckhdq
cdq
cmp
test
xor
fsub
jo
movsx
les
les
jg
xchg
dec
and
clc
mov
cmp
sbb
mov
mov
mov
jae
mov
cmp
loop
push
push
lea
das
call
adc
repnz
in
cmp
shl
pop
xor
jae
in
and
xchg
push
xchg
in
mov
jmp
add
imul
mov
out
jge
outs
push
retf
mov
inc
loop
add
inc
out
and
mov
adc
mov
sbb
pop
mov
mov
pop
nop
les
mov
push
inc
arpl
mov
jbe
jb
lods
cs
dec
lds
imul
sub
cwde
and
dec
data16
sbb
mov
pop
sub
push
mov
jp
inc
sbb
or
adc
(bad)
rcr
aam
mov
adc
xor
jae
into
jg
sbb
mov
lahf
hlt
fcom
(bad)
call
stos
fild
retf
ss
adc
add
xlat
sub
adc
add
call
fwait
in
adc
pop
shl
daa
or
les
pop
push
pop
and
xchg
bound
sbb
call
push
push
sub
cmp
(bad)
cmps
mov
inc
jl
int3
cmp
xchg
and
leave
lea
dec
mov
jb
les
dec
adc
push
dec
pop
out
pop
pop
adc
or
ja
fistp
aaa
and
out
sbb
sbb
cs
cmps
pop
popf
lods
jo
sub
dec
add
sbb
jmp
mov
dec
xor
push
mov
and
rol
xchg
sbb
mov
ret
iret
lea
daa
cmp
cmp
xor
jp
imul
rcl
adc
adc
mov
fcom
xor
mov
fwait
retf
jg
icebp
add
add
mov
mov
xchg
xchg
in
cmp
xchg
jb
sbb
push
out
jmp
call
test
sub
and
in
sub
xor
and
jmp
dec
push
sub
test
cmp
or
jo
sub
ffreep
xor
sub
adc
in
and
dec
jnp
xor
dec
loop
fidivr
sub
std
shl
dec
in
mov
mov
bound
loopne
push
xchg
jl
sahf
js
popa
pop
out
es
or
and
sub
jg
cmp
nop
test
bound
or
repz
and
(bad)
clc
push
inc
xor
aaa
fcmovne
(bad)
sbb
mov
cs
out
inc
mov
(bad)
mov
cmps
aas
sub
sub
xor
(bad)
enter
mov
movs
mov
ds
jmp
jb
pushf
ja
jns
adc
jnp
mov
or
cmp
xor
jl
ret
(bad)
mov
(bad)
mov
pop
inc
fldpi
retf
mov
inc
cli
cmps
cmp
sub
dec
jge
sbb
jle
ret
jns
ins
and
call
hlt
sti
jmp
pop
cld
shr
sub
xchg
outs
dec
addr16
or
call
pop
hlt
mov
sub
push
dec
sbb
and
and
mov
xor
addr16
adc
lods
sbb
pop
sub
fs
stos
retf
mov
lds
std
and
(bad)
or
mov
sbb
iret
movs
mov
add
dec
sbb
gs
movs
sbb
rcr
push
int
jno
mov
jge
adc
loop
cmp
push
bound
xchg
xor
pop
cmp
pop
xchg
cmc
cmp
cmps
loope
pusha
push
div
pop
and
aaa
dec
mov
mov
aad
loopne
mov
mov
dec
lahf
mov
mov
and
(bad)
push
arpl
out
pop
xor
add
mov
into
dec
dec
adc
lods
jl
das
ficomp
in
xchg
or
mov
push
add
scas
inc
ja
xchg
lock
idiv
cmp
fistp
sbb
pop
sbb
mov
call
adc
add
or
sar
inc
call
xor
in
fisubr
out
shl
cmp
sbb
mov
ds
pusha
jno
cwde
loope
add
mov
rcl
and
(bad)
mov
shr
retf
(bad)
fs
pop
rcr
rol
loop
es
test
add
sbb
cmc
sahf
jb
std
je
es
dec
mov
jb
jbe
movs
stos
pusha
or
jns
fild
xchg
mov
adc
jmp
lods
loop
leave
fs
or
in
lahf
ins
fdiv
(bad)
fstp
jns
test
pop
arpl
out
sub
call
fs
cdq
daa
ds
pop
cmp
sub
inc
mov
adc
ror
std
scas
stos
and
pop
add
mov
jge
mov
fld
imul
fdivr
push
repnz
jo
imul
push
fsub
sbb
and
ins
stc
cmp
jne
xchg
test
push
sub
mov
shl
(bad)
sahf
mov
scas
data16
cmp
out
mov
fs
fistp
mov
test
jb
xchg
mov
ss
call
mov
cmc
sahf
push
mov
xor
je
repz
sti
sub
jns
pusha
push
jbe
jmp
repnz
sub
mov
test
adc
push
inc
(bad)
jne
mov
pop
and
adc
push
retf
rcl
sub
outs
cmp
sbb
retf
ja
aad
dec
inc
loope
jg
pushf
inc
add
add
ja
xchg
ror
xchg
(bad)
fbld
mov
pop
xor
outs
cmp
xor
xlat
mov
pushf
adc
cdq
jmp
out
call
add
jbe
sbb
jns
aas
in
or
test
sar
add
mov
ds
(bad)
jg
jmp
lds
jno
call
dec
test
fsubr
cwde
xor
sbb
xor
jne
imul
(bad)
inc
pop
xor
jnp
scas
rol
es
pop
pop
jne
pop
paddusw
xor
movs
jmp
sahf
mov
repz
retf
and
fsubr
pop
nop
into
mov
dec
nop
es
(bad)
fucomi
add
not
repz
aam
push
inc
ret
js
pop
mov
push
jno
ins
inc
test
movs
jmp
sub
push
into
pop
outs
hlt
jmp
das
pop
mov
dec
inc
bound
jbe
sub
out
(bad)
leave
(bad)
pop
ss
mov
mov
add
xor
inc
std
cwde
inc
fwait
cld
push
mov
dec
dec
sub
pushf
cwde
aas
icebp
hlt
push
cdq
jb
sub
mov
xchg
hlt
pop
aam
nop
(bad)
inc
sbb
nop
fbstp
adc
cld
inc
mov
mov
cdq
shl
dec
or
shr
out
mov
xchg
sub
dec
cmp
fldcw
jge
nop
jmp
fwait
mov
cmp
cdq
adc
sub
jmp
sub
sub
jns
(bad)
xor
fwait
sbb
xchg
cmc
or
jbe
push
cmp
adc
test
in
in
scas
push
ins
mov
pop
jbe
dec
dec
sub
int
xlat
lods
cld
dec
adc
adc
(bad)
call
jo
fsubrp
mov
rol
sahf
(bad)
test
and
mov
push
sub
mov
sub
out
and
mov
pushf
lds
aaa
sti
stos
mov
push
sbb
jb
idiv
sub
test
push
stos
mov
or
add
mov
mov
outs
inc
push
jle
xor
jmp
js
jb
(bad)
xlat
popf
jge
mov
dec
mov
dec
fidivr
mov
cmp
pop
loope
or
popa
or
mov
mov
and
cdq
mov
cmp
bound
addr16
fwait
stc
rcl
outs
xor
xor
jmp
mov
vpunpcklwd
adc
icebp
push
out
pop
retf
mov
sub
mov
test
jno
xlat
popf
fmul
adc
into
mov
xchg
js
sbb
int
or
mov
ret
mov
hlt
das
dec
fisttp
or
(bad)
add
ret
je
out
addr16
dec
sbb
xchg
rcl
xchg
cmp
sbb
push
call
or
loopne
shl
xor
sbb
dec
and
dec
xlat
jo
mov
neg
retf
fs
test
push
js
adc
adc
push
mov
std
les
sub
mov
into
daa
mov
adc
retf
cmps
xchg
stos
dec
aas
xchg
test
jno
jl
cmp
inc
jp
push
inc
xor
fdiv
mov
sub
and
jno
rcl
dec
int
jb
sbb
xchg
retf
push
sub
lock
mov
mov
gs
(bad)
stos
lods
jno
push
or
add
enter
sbb
mov
enter
pop
mov
mov
push
mov
sar
pop
test
lahf
or
dec
fnstcw
hlt
ins
adc
rcl
adc
lods
pop
mov
sbb
push
out
aaa
(bad)
adc
sahf
mov
icebp
sbb
dec
int3
test
out
sbb
inc
movs
adc
enter
aam
and
sbb
inc
je
or
dec
out
div
mov
xor
lea
out
inc
sub
mov
iret
ja
pop
push
jbe
fistp
fstp
xchg
mov
push
jo
stos
jmp
ins
inc
xor
lahf
and
aas
add
imul
pop
ss
dec
inc
mov
push
push
dec
sbb
mov
fcomp
xor
dec
pop
aam
(bad)
in
xchg
adc
sbb
mov
cld
inc
(bad)
enter
cmc
pushf
fsub
(bad)
or
fwait
sub
js
je
add
jb
jmp
cmps
outs
cmp
in
mov
mov
mov
neg
(bad)
loop
or
stos
add
xor
cmp
jmp
mov
(bad)
jmp
pop
xchg
xchg
and
std
mov
test
shr
dec
iret
cmp
inc
hlt
out
or
mov
mov
test
pop
stos
mov
mov
and
pop
mov
xlat
sar
jmp
or
cmp
or
push
data16
jb
or
push
fcmovb
scas
outs
sub
and
mov
aad
iret
and
dec
adc
inc
aaa
dec
sti
mov
jbe
fbld
lds
push
sbb
dec
adc
dec
add
stos
mov
pop
sbb
in
cdq
stc
das
dec
addr16
fsubr
mov
(bad)
fstp
mov
shr
pop
adc
dec
jns
jmp
fist
xchg
fcomp
rol
xor
loop
push
or
inc
out
and
jg
in
push
repz
repnz
inc
lods
gs
retf
push
int
jbe
je
dec
xchg
mov
fsub
pop
ret
add
pop
das
test
jb
mov
je
xor
lea
push
mov
js
lods
and
enter
(bad)
add
adc
push
into
ja
sub
mov
add
jecxz
xchg
sahf
not
mov
inc
xchg
ret
nop
test
sbb
cwde
adc
dec
mov
das
shl
aas
ins
mov
sbb
cdq
mov
leave
in
and
(bad)
iret
jo
mov
jb
cmp
or
mov
xlat
clc
int3
pop
add
inc
retf
xor
nop
cmc
or
jns
mul
mov
int3
and
lea
shl
dec
cmps
jp
test
cmp
stc
dec
loopne
pop
ss
dec
and
mov
xchg
push
shl
out
lea
xor
int
int
dec
cld
fcomp
ret
mov
add
test
xchg
pop
test
mul
pusha
mov
mov
fistp
add
loop
ss
pop
fwait
jg
out
push
imul
cmps
mov
mul
mov
pusha
xchg
cmp
jl
clc
jge
xchg
inc
outs
aas
aam
jnp
pop
jns
push
shl
sub
stc
mov
mov
std
pop
pushf
mov
push
jnp
adc
jge
dec
pop
fistp
arpl
pop
mov
and
sub
dec
jecxz
push
jnp
data16
mov
mov
ins
cmp
fwait
mov
dec
lahf
xlat
mov
ss
inc
sub
imul
shl
mov
mov
pop
sar
mov
fisubr
jl
sub
mov
lods
fwait
xchg
daa
mov
int
xchg
pop
jle
daa
cmp
cwde
cmp
lahf
fcomp
clc
xchg
xchg
ins
and
cmc
xchg
rcl
daa
add
mov
pusha
pop
(bad)
or
ins
fadd
or
and
int
xchg
push
push
adc
rcr
(bad)
addr16
fisttp
stos
loop
js
sbb
ja
and
mov
sahf
fdivr
std
aas
cmp
mov
mov
jnp
hlt
sub
outs
xlat
clc
repnz
pop
inc
test
add
cs
and
cmp
hlt
addr16
adc
jnp
cmp
pop
scas
out
popa
cmp
inc
ret
repnz
or
dec
add
xchg
mov
xor
les
xor
inc
ret
ss
in
push
gs
ins
das
add
xchg
popa
rep
push
pop
pop
js
repnz
add
mov
jecxz
out
dec
push
rol
fstp
outs
sbb
(bad)
dec
xor
jp
jne
or
xor
js
push
aad
popa
movs
rcr
inc
mov
dec
push
ret
bound
sbb
or
sbb
cmps
pop
gs
jmp
mov
int
xor
inc
add
jmp
xor
adc
pop
out
in
sub
sub
(bad)
hlt
in
in
and
xchg
leave
ins
mov
mov
fadd
and
push
xchg
xchg
lock
out
jecxz
mov
jmp
sub
into
aas
imul
cmp
xlat
scas
and
cmp
(bad)
gs
clc
ja
cld
sub
adc
hlt
mov
push
cmp
mov
cmp
(bad)
and
xchg
int
push
lods
lods
fbld
xor
sub
stc
ror
adc
(bad)
out
loop
lods
mov
(bad)
pop
xchg
and
mov
or
lds
std
jg
pushf
daa
dec
out
iret
cmp
xor
jo
cli
push
mov
cmc
sbb
es
repz
jle
push
xor
les
sbb
stc
mov
out
mov
push
loopne
mov
out
xchg
jmp
fcmovbe
pushf
cmp
das
adc
ret
sub
mov
sub
fild
jnp
dec
jns
icebp
call
xor
pop
in
pop
add
push
outs
jl
sti
inc
mov
js
xchg
cmps
data16
mov
in
add
in
xchg
fldenv
or
addr16
dec
ss
popf
and
mov
mov
ret
sub
xchg
pop
pop
enter
or
inc
push
pop
jmp
ins
scas
(bad)
(bad)
outs
in
dec
inc
adc
xor
sbb
sub
xlat
(bad)
hlt
cmp
fidiv
lahf
hlt
mov
or
xchg
les
fidivr
cmps
jmp
and
dec
xchg
sbb
xor
js
ss
pop
cmp
mov
into
inc
inc
bound
outs
or
add
iret
mov
xor
and
push
iret
or
cmp
sub
xor
stos
clc
stos
imul
(bad)
cmps
scas
xchg
repnz
mov
inc
jmp
aam
imul
pop
scas
scas
jg
dec
lods
stos
cwde
arpl
test
into
jl
cmps
das
stc
inc
sub
gs
mov
lock
jmp
jae
mov
sbb
xchg
inc
in
pop
nop
xchg
xchg
in
xor
pop
out
ins
dec
jne
ja
test
je
mov
inc
add
push
mov
pop
push
out
mov
lahf
jne
in
or
pop
mov
iret
scas
test
es
and
pop
inc
pop
lock
sub
pop
xor
dec
call
add
test
rcl
iret
(bad)
scas
push
push
icebp
call
dec
sbb
inc
and
xor
push
dec
sub
pop
loopne
sub
pusha
xchg
pop
jmp
sub
mov
ss
cmp
fcom
sbb
add
mov
inc
push
rcr
scas
sahf
dec
pop
jns
pop
sbb
fcom
out
cmp
push
push
mov
pop
sbb
adc
and
mov
enter
xor
clc
pop
jo
cwde
pop
push
movs
mov
and
add
in
pop
cmp
rol
sbb
outs
das
arpl
adc
lahf
adc
and
mov
js
loope
pop
push
loopne
jnp
lods
je
les
dec
jp
fdivr
xchg
jle
rcr
pop
mov
mov
sub
xor
push
int
sub
dec
mov
cwde
shl
add
aaa
iret
test
sub
out
into
shr
jp
out
data16
adc
pop
push
aas
mov
pop
icebp
push
pop
push
in
sbb
sub
cmp
test
addr16
pop
pop
xchg
out
fwait
in
sub
dec
ret
sbb
jno
sti
test
sbb
mov
sub
mov
test
repnz
(bad)
xchg
push
mov
ret
out
adc
xor
mov
push
mov
sub
sub
sar
xor
test
mov
mov
lock
push
sub
fdivr
inc
mov
aas
and
and
xchg
dec
cld
xchg
cli
(bad)
jp
or
dec
shl
or
test
arpl
sub
jge
stos
(bad)
stos
mov
dec
add
mov
or
xchg
test
dec
repnz
mov
test
scas
sti
mov
push
pop
ret
jg
ror
mov
xor
nop
(bad)
(bad)
(bad)
loopne
mov
out
scas
and
movs
mov
clc
pop
pop
stc
jmp
cmp
push
mov
sbb
adc
jbe
sar
xor
shl
imul
nop
lock
or
push
movs
sbb
pushw
sub
loopne
or
xchg
jnp
cmc
shl
push
xchg
aam
cs
movs
neg
push
dec
ins
sub
cmp
dec
scas
(bad)
fadd
or
push
loop
jp
inc
test
test
mov
shl
(bad)
shl
xchg
and
fs
fs
jb
xor
lock
and
push
(bad)
mov
es
pusha
pop
dec
dec
lea
fnstcw
add
add
and
in
in
mov
(bad)
sti
js
pusha
mov
jmp
add
scas
pusha
jb
cmc
sub
stc
ins
ret
ins
cmp
mov
movs
gs
sbb
shl
mov
(bad)
js
mov
cmp
sbb
aaa
lea
repz
mov
cmp
xchg
shl
lock
mov
inc
add
inc
shl
mov
sub
pop
cdq
int
add
dec
sub
mov
xor
mov
pop
jge
mov
mov
jbe
dec
(bad)
fadd
cdq
jnp
sub
pusha
inc
adc
add
mov
xchg
sbb
cmc
stos
sub
mov
add
mov
ins
or
fsubr
inc
je
dec
(bad)
sar
mov
sbb
loope
adc
mov
mov
jmp
lock
aaa
ret
js
arpl
xchg
cmps
mov
jg
jnp
arpl
popa
fwait
mov
pop
imul
push
inc
mov
mov
(bad)
mov
test
popa
sub
jns
mov
inc
test
fsubr
xchg
jecxz
jnp
sub
jae
pop
(bad)
xchg
and
and
dec
push
inc
xor
pop
test
imul
cli
dec
dec
stos
hlt
mov
dec
sub
shl
xor
inc
sahf
int3
cmp
fdivrp
dec
(bad)
jne
dec
dec
jl
in
pop
pop
xchg
cs
fs
daa
xor
sbb
icebp
push
fiadd
add
cmc
ins
xchg
iret
pop
sub
js
dec
xor
ror
push
mov
jns
test
lods
inc
(bad)
xor
xchg
jmp
push
imul
outs
retf
xchg
sysenter
jecxz
sub
into
sub
(bad)
cmp
push
xchg
dec
xor
sbb
mov
xor
gs
inc
sub
pop
sbb
call
mov
jecxz
lock
shl
cmc
aas
sub
std
fadd
(bad)
sbb
mov
pop
lods
lahf
test
ja
push
outs
add
dec
sub
pop
(bad)
xor
les
cwde
jo
sahf
add
outs
aam
and
inc
sbb
cmp
test
mov
outs
adc
sbb
test
aaa
fsubrp
dec
jmp
inc
scas
and
je
cmpxchg
pop
push
loop
add
ins
push
rcl
pop
mov
push
pop
and
clc
stos
sbb
ds
jmp
sbb
pop
xchg
adc
lods
dec
hlt
push
es
push
mov
mov
call
cmc
cs
or
sub
xlat
xchg
pop
repz
xchg
pop
xchg
inc
pusha
sbb
arpl
dec
fist
push
xor
xchg
lods
loop
das
jl
sbb
aad
push
out
mov
mov
loop
ror
and
mov
out
pop
push
test
adc
mov
ret
test
add
gs
pusha
inc
push
repnz
pop
inc
lods
rol
add
in
sub
push
and
cmp
mov
(bad)
fisubr
rcl
push
xchg
lods
mov
test
inc
add
test
pop
cmps
mov
sbb
or
sbb
ret
mov
push
ja
jl
lods
nop
or
inc
sbb
fsubr
(bad)
push
inc
rcr
out
and
gs
sar
jo
test
jecxz
lock
cdq
cdq
cmp
jno
stos
lock
leave
fcmovbe
das
mov
cld
and
pop
test
xlat
mov
push
repz
imul
inc
shl
aad
and
mov
or
jl
shl
mov
adc
pop
mov
sbb
mov
jp
lods
ror
adc
or
enter
iret
nop
dec
xchg
dec
push
mov
ss
int
in
adc
shr
push
xchg
in
push
cmc
pusha
xor
xor
mov
push
xlat
fnsave
in
je
sti
fsubr
ret
or
xchg
cmc
test
xchg
in
test
and
lods
inc
test
test
cdq
ss
and
gs
jmp
mov
adc
mov
xchg
ret
es
movs
rcl
jl
jb
frstor
mov
cld
sahf
mov
mov
sbb
das
cdq
push
cmps
ss
mov
sbb
adc
clc
push
stos
jg
inc
clc
pop
push
dec
test
popf
fs
movs
mov
jle
lds
les
push
push
inc
rcr
rcl
xchg
jle
pop
ins
not
test
jp
fnstcw
jmp
ins
cmps
adc
lods
or
cmps
dec
or
inc
push
cmps
inc
or
and
xlat
and
pop
in
mov
movs
ss
nop
pop
out
loope
cwde
mov
ret
ins
pop
add
xchg
push
dec
xchg
dec
test
xor
jne
aaa
jecxz
mov
fimul
push
ds
call
mov
jecxz
push
(bad)
push
popa
xchg
sbb
push
fwait
mov
ss
stos
dec
sub
pop
imul
xor
popa
or
neg
shr
sahf
aaa
(bad)
(bad)
stc
psllw
mov
ficomp
(bad)
(bad)
mov
lahf
pop
xchg
daa
mov
fisub
or
cmp
nop
dec
repnz
sub
xchg
js
cmp
in
int3
cwde
popf
call
jecxz
sub
pushf
cmp
pop
repz
int
push
enter
ror
mov
pop
das
and
sub
pop
(bad)
xor
in
int3
in
movs
loop
xchg
xchg
jbe
rep
lock
mov
jl
jmp
sbb
imul
mov
movs
and
(bad)
retf
jo
and
(bad)
push
mov
mov
inc
adc
int3
mov
dec
arpl
sbb
jb
out
call
mov
sub
or
enter
mov
or
aaa
add
cld
or
adc
int3
mov
js
jne
add
js
leave
dec
dec
xchg
or
xchg
mov
js
call
sub
pop
cmps
jnp
inc
xchg
dec
imul
or
mov
pop
inc
or
es
cmp
pop
test
or
inc
mov
test
cmp
(bad)
pop
loopne
shl
lods
and
mov
sub
int
adc
pop
loope
pop
ins
push
lahf
mov
out
dec
mov
aam
cmp
push
mov
jmp
lods
repz
pop
test
fisttp
sub
cmp
jl
movs
(bad)
mov
mov
fisttp
lds
(bad)
std
outs
xchg
jnp
cmp
call
push
pop
stos
adc
sbb
and
dec
mov
adc
cmps
scas
js
stc
loope
mov
je
ds
mov
rcl
(bad)
push
into
add
(bad)
sbb
popf
movs
sub
lock
adc
out
jmp
outs
inc
test
(bad)
pop
imul
or
adc
dec
test
(bad)
hlt
arpl
call
loopne
ja
mov
mov
lahf
popf
xchg
xchg
dec
test
sbb
out
cvtdq2ps
mov
cmp
mov
xor
into
mov
jb
call
retf
mov
jge
add
pop
and
repz
ds
and
mul
sub
and
pushf
add
ja
inc
in
and
fcmovne
int3
or
aaa
cmp
sbb
fsubr
pop
add
mov
mov
add
jnp
mov
ins
jo
rcl
test
cmp
into
movs
cmp
cmp
cmp
add
mov
push
xor
sbb
mov
shl
scas
jo
div
call
mov
leave
or
mov
lea
lds
cwde
call
test
xlat
aas
test
push
mov
add
(bad)
pop
push
mov
mov
test
lods
cmc
mov
dec
xchg
dec
gs
and
and
lahf
sbb
lds
repz
push
xor
mov
xchg
ja
pop
jo
push
push
add
inc
int3
leave
call
sub
add
scas
cmps
ds
mov
mov
mov
scas
outs
inc
or
ror
inc
fistp
jb
cmp
bnd
repnz
mov
into
pop
(bad)
sbb
xchg
or
jmp
out
js
js
jmp
or
mov
std
test
stos
xchg
pop
call
pop
mov
xlat
sar
jo
cli
mov
mov
mov
ds
out
int3
icebp
or
out
mov
or
scas
mov
xchg
iret
fmul
xchg
xor
pop
sbb
out
adc
call
or
sti
shr
lahf
sub
retf
pop
mov
jmp
inc
dec
ficomp
dec
push
out
sahf
inc
int
adc
sahf
ffreep
dec
fisubr
scas
(bad)
out
imul
jo
xchg
adc
fidiv
out
or
sub
fidivr
sub
inc
and
mov
popa
mov
cmp
fiadd
pop
sub
(bad)
loop
xor
mov
test
inc
js
ret
jg
pop
fist
mov
loopne
xor
ja
or
add
movs
mov
dec
mov
xor
stos
daa
and
push
pop
adc
fadd
cmp
mov
mov
push
scas
enter
jne
stos
arpl
lahf
ret
and
inc
loope
push
sub
clc
adc
mov
stos
pop
aas
test
xor
sub
repnz
pop
or
and
popf
stc
and
lods
add
mov
adc
mov
adc
jge
jmp
xchg
(bad)
mov
stc
pop
cmp
dec
bound
sub
pop
icebp
push
cli
push
jnp
fcmovu
fisttp
push
mov
jns
test
cmp
mov
add
test
mov
add
fxch
mov
pop
imul
aad
xor
in
loop
leave
mov
test
(bad)
xchg
inc
adc
sub
mov
(bad)
jns
cmp
psubq
mov
ins
jo
test
and
dec
cli
test
jg
lds
pop
cmp
cmp
scas
sbb
jp
jbe
retf
sbb
ins
cli
jbe
adc
jns
mov
fisub
inc
mov
xor
dec
nop
loope
cdq
(bad)
mov
dec
dec
div
scas
mov
fwait
(bad)
and
jg
addr16
ret
out
pop
dec
xor
into
push
xchg
lods
es
jb
add
mov
(bad)
pop
mov
add
dec
inc
test
cli
xchg
shl
out
fimul
repnz
fnstcw
pop
cli
xor
cmc
daa
test
mov
fstp
in
outs
call
cli
cmp
movs
push
nop
jo
dec
(bad)
jb
nop
push
(bad)
mov
xor
push
cmp
stos
(bad)
push
fcom
dec
(bad)
push
cld
rol
dec
test
pop
jge
sbb
cmp
pop
mov
std
and
(bad)
pop
sbb
cld
stos
shr
mov
adc
and
pop
mov
cmp
xor
adc
ins
adc
or
adc
and
in
mov
lahf
or
dec
sbb
inc
jnp
inc
xor
sbb
enter
out
dec
cmp
mov
cli
lea
xor
or
(bad)
mov
mov
sbb
js
add
jae
stos
mov
mov
imul
jo
cs
std
push
add
call
mov
das
and
and
sub
nop
xor
cmp
push
mul
jo
rcl
push
pop
add
inc
mov
push
jae
aaa
ins
cli
and
add
lds
or
mov
xchg
(bad)
cmps
xchg
aad
xchg
(bad)
fcomp
cmp
push
and
daa
lods
int
sbb
xchg
scas
xlat
cmp
cwde
jmp
sub
(bad)
mov
stc
xchg
sbb
pop
sbb
fidivr
inc
sbb
push
in
ss
push
push
pop
xor
push
out
add
out
cdq
push
push
jae
fild
cdq
xor
jne
xchg
test
xchg
mov
fstp
jecxz
mov
push
push
sbb
cli
cmp
cmp
adc
jmp
mov
push
fidivr
mov
loop
inc
cs
push
int3
jbe
add
cdq
bnd
sahf
jge
push
sub
xor
popa
sub
imul
pusha
jae
cli
lock
dec
lods
call
imul
sahf
or
mov
cmp
test
xlat
push
popa
dec
(bad)
mov
(bad)
js
add
push
or
xchg
cli
mov
rcl
push
xor
jmp
xchg
movs
push
pusha
jp
or
jno
xor
or
aam
adc
xor
mov
xlat
push
fwait
add
(bad)
retf
pop
cld
inc
xor
popf
push
popf
in
cmp
int
pop
jge
xor
pop
inc
sub
cmp
add
mov
scas
adc
cmp
mov
outs
jecxz
out
push
adc
jg
sub
jno
ret
push
cmp
pop
pushf
cmp
outs
push
repz
mov
inc
cmp
push
cmp
sbb
hlt
cmp
iret
ficomp
pop
pop
adc
mov
push
es
dec
cmps
sub
inc
fs
outs
mov
push
popa
pop
cmp
and
addr16
das
mov
jo
pop
jns
cmps
jmp
mov
or
cwde
loop
imul
push
push
in
jae
push
cmp
sbb
push
in
jg
jbe
mov
data16
push
push
aas
rol
adc
dec
add
mov
lods
push
jnp
mov
retf
and
stc
sahf
and
mov
sbb
out
out
cmp
xchg
mov
push
int3
cmps
sahf
leave
xchg
or
les
je
cmc
sbb
or
iret
sahf
cmp
cmps
push
or
lods
pop
cmc
inc
out
dec
pop
mov
dec
sbb
loope
fst
mov
mov
fstp
pop
cmp
xor
cmc
push
xor
jle
mov
jmp
xor
test
lods
scas
std
jle
jl
pop
sbb
inc
mov
push
adc
icebp
pop
mov
pop
mov
in
add
and
or
jns
mov
mov
cmp
out
js
ins
pop
pop
mov
je
test
mov
jno
loop
sbb
sub
mov
pop
mov
pop
retf
cmp
cwde
dec
sub
rdmsr
fwait
push
jbe
add
adc
mov
sub
cmp
mov
dec
imul
(bad)
jmp
mov
out
jmp
loop
dec
adc
mov
or
sbb
lds
push
bound
daa
rsm
(bad)
cld
cmp
inc
push
sar
push
inc
movs
pop
out
arpl
sbb
jno
mov
lahf
mov
ins
xor
cmp
jnp
dec
jbe
lods
push
popa
ins
std
rcr
xor
cmp
lock
pop
daa
and
les
iret
push
aaa
or
fimul
in
mov
mov
add
mov
inc
mov
loopne
test
xor
inc
jg
inc
test
and
inc
fdiv
fcomip
fnsave
int3
jmp
adc
pop
loopne
outs
addr16
jp
sbb
push
push
xor
mul
mov
repnz
push
xor
enter
sub
sbb
fwait
cmp
bound
bound
inc
pop
jmp
imul
push
sub
jo
ss
lods
add
xor
cmp
inc
xor
fcomp
pop
out
stc
das
add
cmp
jmp
imul
shl
sub
add
mov
mov
call
aaa
fidivr
mul
inc
push
loop
bound
fdiv
stos
dec
(bad)
fsub
jae
xchg
push
mov
int
mov
iret
loopne
add
shl
sub
dec
in
add
fidivr
pusha
inc
js
jmp
inc
cs
jmp
and
xchg
mov
inc
cmp
add
jae
movs
cmp
pop
dec
mov
sub
ss
hlt
cld
imul
inc
push
add
jp
cmps
test
call
div
cmp
pop
sbb
das
ins
cmp
inc
hlt
sahf
sub
movs
and
xchg
add
fst
pusha
xor
add
dec
loope
or
pop
outs
fnsave
adc
bound
(bad)
cmc
cmp
in
cmp
jmp
or
sar
pop
xor
(bad)
clc
mov
ret
cdq
dec
fs
les
aam
retf
test
mov
inc
es
inc
sub
fs
fwait
sub
mov
push
jl
and
inc
and
and
popf
jbe
or
xor
or
inc
mov
xchg
inc
sbb
cmp
mov
sub
cwde
nop
in
add
cdq
cmp
mov
retf
or
xor
stos
dec
push
push
mov
cld
call
sbb
cmp
push
in
cmp
jecxz
in
adc
retf
jns
cmp
cmc
(bad)
push
jecxz
mov
sbb
mov
hlt
jne
cmp
mov
(bad)
add
retf
in
xlat
mov
pusha
mov
lods
repnz
jb
xlat
mov
arpl
lods
(bad)
in
mov
xchg
out
and
mov
shl
std
cli
jl
cs
xchg
pop
pop
pop
xor
pop
and
lea
fcmovnbe
or
cmps
xchg
and
pop
adc
daa
cmp
push
rcl
sbb
jge
jbe
jg
mul
popa
(bad)
scas
loope
retf
lea
adc
cmp
fs
xchg
mov
call
cdq
enter
mov
mov
stos
stos
enter
aaa
inc
aad
hlt
iret
fs
sub
lods
push
(bad)
stc
push
loope
dec
mov
cmp
pop
xchg
adc
mov
fist
inc
adc
out
jnp
ds
jmp
repz
add
mov
scas
xor
mov
jp
jmp
sub
cwde
scas
push
jl
aas
daa
adc
loopne
ins
or
test
xor
and
stc
test
and
pop
mov
mov
in
sti
enter
and
ror
jae
int
jp
dec
mov
or
and
movs
call
or
mov
mov
jo
ins
(bad)
jbe
outs
mov
mov
push
loopne
pop
inc
add
aaa
and
loop
fidivr
imul
leave
adc
fwait
xchg
or
push
mov
add
loopne
movs
mov
(bad)
fisub
sbb
push
mov
push
add
mov
std
mov
aas
adc
sbb
dec
mov
shl
jae
adc
mov
or
fldenv
je
inc
je
push
mov
push
jae
sbb
jl
add
in
out
fwait
or
xchg
loopne
addr16
out
inc
inc
repz
into
cmps
sbb
not
xchg
push
ror
or
fisubr
repz
sub
test
pop
stos
(bad)
loope
xchg
mov
cmp
mov
retf
les
sahf
dec
sar
cmp
sbb
add
or
lsl
aas
push
pop
dec
not
inc
dec
pop
cwde
cmp
aam
xchg
arpl
mov
test
xchg
loopne
int3
movs
iret
dec
fs
or
neg
loop
jecxz
cmp
or
mov
clc
(bad)
call
imul
pop
inc
xor
mov
sub
push
test
inc
sub
(bad)
mov
mov
mov
repnz
push
repz
(bad)
shl
add
data16
pusha
push
les
repnz
inc
call
fcmovbe
pushf
mov
and
jecxz
inc
jle
push
sar
sti
mov
cmp
mov
les
mov
jge
xchg
sbb
pushf
mov
xor
arpl
mov
inc
call
xor
(bad)
mov
dec
ja
test
rcl
aam
inc
in
inc
pusha
pop
loopne
clc
test
jb
scas
int
rcl
popa
push
arpl
sbb
fldenv
rcr
scas
inc
retf
scas
push
mov
mov
outs
lods
movs
mov
dec
fcmovnb
jno
je
(bad)
fild
jl
add
data16
or
je
xor
call
fimul
lods
mov
fcom
pushf
sub
xchg
xor
stos
jae
jbe
sub
jge
out
adc
pop
jno
inc
mov
out
and
retf
mov
enter
add
dec
pop
cmc
into
out
pop
mov
cmp
push
jb
jne
out
inc
mov
inc
pusha
xchg
into
pop
das
pop
int3
or
cwde
dec
dec
jmp
imul
sub
daa
sub
push
cmps
mov
(bad)
gs
dec
inc
pop
cmp
in
pusha
mov
aam
ins
adc
ja
inc
mov
outs
addr16
push
xor
jl
cdq
mov
je
xchg
inc
inc
int
iret
jae
and
outs
mov
dec
in
push
push
in
jo
inc
xor
xor
in
add
mov
or
mov
int3
sbb
movs
cwde
nop
(bad)
enter
dec
(bad)
fdiv
bound
xchg
jl
loope
and
fwait
or
xchg
adc
pop
repz
cwde
mov
lea
or
sub
test
dec
fidiv
cmp
cmc
xchg
mov
jmp
ins
or
dec
or
add
outs
inc
scas
bound
nop
xchg
aam
xchg
or
into
les
mov
imul
or
xlat
in
cmp
repz
repnz
scas
cmc
xor
out
push
inc
jmp
dec
mov
test
jp
cmp
dec
sub
xlat
icebp
or
lea
mov
mov
out
push
mov
push
pop
xor
fbld
pop
mov
add
daa
mov
pusha
icebp
into
jae
data16
arpl
xlat
in
and
xchg
out
call
or
dec
pop
enter
mul
push
(bad)
rcl
idiv
mov
sar
push
adc
xor
mov
inc
aas
pop
pop
test
mov
loope
retf
sbb
leave
leave
cmp
add
jle
lock
mul
cmps
aad
fimul
iret
push
xchg
mov
sub
pop
mov
cmps
mov
test
mov
xchg
rol
or
out
lods
call
int
add
(bad)
mov
icebp
fisubr
hlt
int
(bad)
mov
arpl
sub
pop
fsub
sub
cmp
pop
jmp
push
xchg
in
cdq
adc
repz
mov
jmp
dec
mov
xchg
xchg
ins
fild
shl
dec
shl
xor
es
and
sub
iret
mov
test
mov
cmp
cmp
(bad)
lds
hlt
lods
mov
mov
mov
inc
pop
and
stc
sub
pop
push
mov
cmp
sbb
clc
repnz
xchg
je
int3
sub
mov
inc
add
dec
and
cmp
mov
pop
out
das
(bad)
and
loopne
sub
pusha
xchg
adc
in
add
sub
mov
adc
aaa
(bad)
cld
push
daa
add
repnz
mov
ret
mov
imul
xchg
scas
scas
fdiv
xor
xor
(bad)
sbb
push
aad
test
cmp
icebp
loop
xor
pop
dec
(bad)
jbe
enter
mov
clc
mov
inc
sub
repnz
fisttp
or
mov
cmp
dec
xor
aam
fisubr
out
mov
out
pop
inc
mov
mov
mov
xchg
and
jo
mov
in
dec
pushf
std
es
cld
imul
adc
mov
icebp
and
inc
iret
sbb
fisttp
jns
or
int
lds
push
(bad)
sub
fcomp
lahf
sub
repnz
imul
cs
mov
bound
dec
push
pop
mov
(bad)
mov
movs
jne
pop
ret
mov
sub
xchg
jae
scas
jns
push
fs
push
push
sub
int
aaa
jns
in
jmp
inc
cmp
push
ss
mul
shr
sbb
in
inc
xor
mov
push
mov
mov
loop
and
and
lds
cmp
inc
add
ror
iret
js
fidivr
mov
je
and
sub
adc
dec
sub
cmp
(bad)
adc
push
pop
in
sti
jmp
inc
ror
mov
bound
aad
push
mov
sbb
out
addr16
cld
cdq
jne
push
add
nop
aam
ds
unpcklps
add
jns
mov
xor
mov
push
cmps
mov
mov
sar
test
xchg
push
push
mov
cmp
aas
outs
jae
scas
jle
ds
add
ins
mov
(bad)
mov
jne
in
pusha
mov
jge
icebp
ret
xor
movs
mov
(bad)
adc
pop
jmp
add
mov
jb
out
jno
mov
mov
sbb
ss
mov
popf
mov
test
xchg
dec
out
loop
cli
cdq
inc
nop
xor
pop
scas
mov
cmp
push
movs
mov
into
jns
loopne
xchg
mov
xor
sbb
push
xchg
test
mov
jg
enter
lock
(bad)
aad
mov
and
xchg
dec
inc
jmp
dec
mov
stos
movs
cmps
inc
mov
inc
jns
sub
cmp
loope
xchg
cmp
in
mov
cmp
pop
sbb
out
shl
lock
sbb
mov
dec
fxch
shl
adc
in
cld
mov
inc
adc
and
jmp
inc
jecxz
sahf
adc
inc
idiv
retf
ror
cmps
pushf
cmp
ins
add
dec
in
mov
push
sub
in
inc
and
xor
fst
mov
cmp
test
lea
lea
(bad)
aas
dec
mov
scas
test
add
sub
dec
push
nop
arpl
sbb
mov
push
sbb
enter
pop
mov
out
dec
add
imul
mov
lock
dec
push
push
mov
inc
stos
movs
or
sbb
sbb
push
lods
inc
in
xor
cmp
pop
inc
in
lock
sbb
ds
ss
xor
test
fild
push
mov
add
scas
mov
mov
xor
data16
in
push
sahf
mov
and
sbb
dec
(bad)
es
das
test
jge
mov
dec
aam
xchg
cmp
dec
imul
test
jecxz
push
lea
mov
(bad)
cmp
pusha
cmps
adc
xor
enter
adc
es
inc
cs
jle
arpl
das
lock
dec
inc
adc
out
mov
repz
jle
cmp
popa
pop
jp
pushf
or
adc
ffreep
inc
cmp
jno
xchg
push
aad
mov
mov
cli
xor
scas
test
arpl
pop
mov
in
and
mov
or
cld
add
dec
loope
fwait
xchg
cli
adc
imul
sbb
loop
adc
pop
xchg
cmps
mov
or
fld
inc
das
push
sbb
xchg
mov
repz
push
lods
dec
and
icebp
(bad)
xchg
cmc
jae
xchg
pop
pusha
pop
mov
sahf
mov
inc
test
pop
jg
push
xchg
addr16
sub
sub
movs
jbe
inc
addr16
stc
xchg
dec
cwde
hlt
adc
adc
leave
(bad)
xor
ins
xchg
ins
jge
in
icebp
inc
ds
mov
arpl
cmps
jno
shl
xchg
mov
fnstenv
mov
mov
mov
jns
lahf
adc
jne
cli
mov
inc
mov
push
dec
fwait
mov
addr16
out
mov
or
in
xchg
daa
and
jg
mov
in
movs
movs
mov
or
or
out
mov
and
pop
les
scas
and
fs
pop
xor
mov
shr
js
mov
gs
sbb
xor
aam
(bad)
(bad)
lods
daa
dec
add
adc
xlat
mov
add
pop
pop
mov
fldenv
pop
xchg
mov
iret
loope
int3
les
dec
xchg
mov
shl
stos
jbe
sbb
retf
mov
push
xor
stc
lds
mov
aam
aaa
mov
lock
mov
pushf
mov
aas
jecxz
bound
inc
pusha
mov
dec
jmpw
inc
mov
and
test
or
mov
les
stos
cli
aas
jecxz
aad
aam
inc
dec
bound
fcomp
sbb
iret
xchg
clc
jne
addr16
dec
fldcw
inc
jmp
sbb
call
vmptrld
dec
shl
xchg
xchg
fs
setne
popf
fistp
aam
pop
cwde
popf
mov
lds
ss
mov
shl
mov
or
lea
jl
push
inc
push
lahf
adc
push
mov
gs
adc
enter
fadd
inc
pop
outs
lahf
inc
cs
or
mov
(bad)
pop
ror
movs
add
bound
or
lods
mov
loopne
jnp
sbb
sub
loopne
sbb
push
xchg
sahf
data16
cmp
out
lods
stos
(bad)
aad
call
jns
into
arpl
jecxz
inc
push
loop
jbe
mov
adc
daa
mov
sbb
dec
xchg
fwait
xchg
mov
inc
in
push
test
lea
jge
loopne
jmp
and
mov
popa
sub
mov
sbb
xor
add
inc
push
mov
std
ror
stos
pop
pop
adc
out
loopne
int3
adc
pop
dec
pushf
popa
or
call
in
addr16
push
inc
xchg
inc
and
repnz
outs
data16
add
test
mov
outs
xor
cmps
hlt
pop
loopne
pushw
xor
and
movs
jecxz
push
mov
cdq
mov
movs
sbb
dec
jb
and
(bad)
lods
mov
push
jge
lods
cmp
and
aaa
pop
sbb
in
fcmovu
and
outs
shr
push
clc
out
rcl
add
fdiv
jle
mov
(bad)
dec
aaa
sti
xor
fstp
dec
jle
and
inc
ret
in
add
push
and
(bad)
lock
adc
pop
mov
int
(bad)
test
cmp
pop
pop
adc
into
out
mov
cmps
std
cmps
retf
pop
xchg
xchg
inc
in
stos
std
sahf
jno
jp
into
std
js
add
shl
adc
lods
in
imul
std
(bad)
cs
sub
(bad)
sbb
shl
and
jo
xor
xlat
lock
add
lods
arpl
xchg
sbb
popa
pop
cmc
mov
fs
lds
(bad)
rcl
out
jnp
adc
les
sar
sbb
sub
sahf
push
(bad)
bound
js
sub
out
add
push
dec
lock
fdivr
pop
hlt
inc
sbb
sub
movs
cdq
pop
mov
es
mov
sub
xchg
je
mov
and
cmps
cmp
(bad)
cli
enter
call
das
xor
add
xor
outs
outs
pop
mov
mov
out
fs
stos
repnz
jmp
imul
int
jmp
and
push
lods
scas
leave
and
mov
push
(bad)
shl
mov
lahf
ins
into
loopne
mov
cmps
xor
pop
adc
jmp
addr16
ret
push
inc
fwait
mov
sbb
shl
jnp
mov
mov
jno
scas
cs
lfs
hlt
xor
push
shr
int
inc
pop
inc
mov
sub
inc
sti
cmps
mov
nop
fsubr
rol
and
sbb
xchg
jbe
mov
mov
and
jno
cmp
rcr
daa
fcomp
jns
adc
adc
xor
push
jnp
ja
mov
lock
fstp
jg
jle
addr16
push
pop
pop
xor
stos
aam
push
aas
xchg
inc
in
mov
xor
mov
cwde
push
(bad)
xor
hlt
mov
inc
mov
push
or
push
mov
jmp
lods
mov
sub
sub
lea
jmp
stc
scas
jo
fdivr
ja
add
in
jae
cld
or
mov
jnp
xor
cmp
cli
jno
in
jmp
(bad)
cmps
loope
hlt
hlt
(bad)
lock
ins
push
adc
xchg
sub
test
pop
out
js
inc
addr16
fcomp
xchg
sub
leave
adc
sbb
data16
sbb
cmps
xor
adc
fadd
scas
mov
movs
scas
add
cs
cmc
cmp
enter
sbb
hlt
mov
sub
dec
fbstp
adc
imul
adc
stos
or
add
fninit
cs
mov
lods
jns
cmps
jnp
or
cmp
add
dec
nop
shr
sbb
sbb
stc
pop
cmp
rcl
mov
pop
pop
jae
mov
ja
loopne
xor
gs
adc
(bad)
idiv
gs
aas
xor
jge
out
jle
fisttp
xor
push
push
xor
test
and
(bad)
sub
in
sub
dec
imul
daa
jle
pushf
ret
rcr
int3
repz
gs
mov
(bad)
jne
sbb
and
xchg
test
cmps
add
push
mov
fnstsw
mov
scas
ror
test
jge
xchg
pop
mov
imul
ins
bound
scas
xchg
jno
push
and
je
xor
fadd
mov
nop
jge
push
shr
cmp
cmp
pop
(bad)
pop
(bad)
pop
pop
dec
dec
xchg
lods
xchg
mov
mov
pop
push
pusha
fisttp
stos
and
rcr
or
mov
mov
iret
cli
je
ficomp
in
mov
and
enter
loopne
es
push
jmp
lds
lock
and
sbb
jns
adc
imul
rcl
scas
cmp
inc
add
sar
adc
daa
add
loop
xor
out
and
lods
mov
lods
lock
pushf
sub
push
sahf
mov
adc
sti
addr16
stos
push
mov
fwait
arpl
ror
pop
std
xchg
rcl
sbb
fdiv
in
sar
cld
xor
fbld
aaa
cs
out
test
cmp
mov
ret
mov
jnp
imul
addr16
(bad)
repz
aas
sub
test
arpl
add
popa
dec
mov
call
adc
sbb
pop
ins
pop
icebp
mov
jb
inc
retf
inc
test
ja
out
aas
xadd
mov
add
and
scas
scas
mov
cmps
cdq
ins
aaa
in
push
das
cmps
mov
outs
icebp
or
mov
retf
jmp
pop
leave
pop
or
scas
mov
cmp
es
sub
push
cmps
dec
sbb
or
ss
lods
push
dec
jle
add
mov
mul
shl
jo
shl
fld
dec
mov
mov
dec
and
stc
add
es
mov
add
cmps
push
push
or
test
cmp
inc
ds
(bad)
js
out
cmps
dec
and
addr16
inc
and
not
jge
sbb
jle
add
fcmovb
xor
xor
dec
and
cmp
dec
or
or
cdq
dec
mov
mov
int3
dec
ret
xchg
pop
inc
and
xor
mov
mov
(bad)
fld
jp
mov
cli
push
inc
add
xchg
add
push
lahf
cmp
or
mov
jmp
fyl2xp1
jnp
int3
aas
mov
xchg
jmp
xchg
push
(bad)
inc
adc
cmp
add
cmp
nop
dec
(bad)
test
mov
fwait
arpl
nop
inc
push
sbb
dec
mov
push
jg
(bad)
ficom
jnp
xchg
xor
popf
push
icebp
inc
mov
mov
enter
jae
loope
fs
stos
mov
push
cmp
pop
ins
fcomp
and
cdq
jno
dec
pusha
fisubr
add
movs
cmp
es
push
imul
in
pusha
sahf
inc
das
xor
xor
sti
ror
into
std
push
xlat
xlat
dec
jns
mov
lahf
mov
push
aad
ret
cdq
jbe
mov
(bad)
mov
das
sbb
cwde
fdivr
xor
sub
call
repz
pop
push
imul
data16
jmp
cmp
mov
imul
outs
mov
std
and
call
add
stc
cmps
add
sub
std
sub
ins
lds
sub
mov
mov
dec
jecxz
std
pop
sub
shr
and
sbb
leave
jo
jmp
mov
and
sbb
sbb
mov
jg
out
dec
js
icebp
mov
push
aaa
outs
fldenv
and
push
in
adc
stc
repnz
push
sub
add
ficom
xor
mov
jbe
(bad)
shl
or
rcl
inc
aad
enter
xchg
ret
or
and
cwde
dec
push
(bad)
repnz
pop
outs
fdivr
aaa
js
ds
sbb
cmp
jns
xor
imul
adc
test
loopne
sbb
sub
mov
xchg
push
xchg
imul
cs
inc
stos
sbb
jmp
cmps
call
sti
dec
pop
aam
aas
dec
adc
pop
je
imul
push
mov
shl
jp
cmp
je
cmps
cmps
push
mov
mov
in
in
out
ret
add
and
in
retf
adc
mov
and
shl
dec
test
cmps
and
push
pop
jbe
fld
test
(bad)
pavgb
mov
bound
repnz
test
pusha
adc
js
pop
ficomp
pop
mov
push
stc
pop
call
jne
mov
out
xchg
leave
ret
jg
or
mov
jecxz
sbb
loope
adc
mov
cmc
mov
jp
mov
mov
ins
cmc
aaa
push
dec
sub
jge
sub
add
cmp
sets
in
stos
jno
push
enter
xchg
push
mov
cmovg
pushf
sub
jbe
or
test
cmps
jle
add
int
mov
mov
inc
and
pusha
mov
jbe
mov
cmp
retf
ins
(bad)
rcl
scas
sub
xlat
pop
sub
dec
cmp
inc
std
in
call
test
imul
shl
enter
dec
test
pop
xchg
ret
pusha
aas
pushf
mov
mov
ret
cdq
or
mov
retf
jl
arpl
push
jge
(bad)
iret
add
adc
mov
jmp
jge
pop
cdq
repnz
push
(bad)
mov
push
mov
cmps
addr16
sti
xchg
mov
inc
jg
test
or
cmp
(bad)
push
inc
arpl
push
aas
or
and
arpl
jg
jg
imul
leave
xlat
mov
fstp
dec
jmp
jmp
jne
pop
cmps
ins
mov
and
lods
inc
test
jbe
loop
movs
(bad)
push
into
pop
or
shl
ficom
inc
(bad)
push
mov
(bad)
outs
cmp
js
mov
cmps
xor
push
sub
push
mov
movs
dec
adc
xchg
hlt
jg
or
xchg
dec
pop
jo
iret
(bad)
jnp
test
mov
sub
cmps
pop
out
movs
call
idiv
cmc
pop
faddp
loopne
push
pop
test
imul
imul
sbb
and
xchg
sbb
hlt
xchg
inc
jmp
loopne
cmp
dec
lods
aad
jmp
(bad)
jl
pop
stc
cdq
fdivr
mov
adc
pop
pop
mov
sbb
xlat
mov
or
movs
or
pop
(bad)
dec
fadd
and
and
xor
cmp
bound
adc
lds
add
push
mov
cmps
pop
push
jge
mov
jo
sub
pop
iret
ret
cmc
in
and
shr
repz
neg
aad
cld
lea
xor
std
xor
call
jg
stos
push
or
fcomi
or
sbb
mov
cmp
cmp
inc
pop
jb
lods
mov
dec
loop
fsub
pop
aad
out
addr16
out
repz
in
sbb
add
jl
stc
lock
int3
aas
push
imul
fisttp
xchg
retf
push
mov
sbb
jae
jmp
ror
stos
arpl
retf
pop
sub
jg
dec
mov
jp
mov
or
out
sub
mov
jns
fistp
in
mov
fstp
mov
dec
out
and
es
jg
lods
sbb
push
push
movs
ss
sbb
xchg
sub
dec
jns
jle
sbb
adc
sbb
mov
xor
std
xor
pop
aam
inc
(bad)
mov
xor
not
ret
imul
push
icebp
popa
bound
and
xchg
idiv
xor
ja
dec
cmp
mov
push
imul
sub
stc
or
jo
cwde
xchg
into
int3
test
cmc
push
retf
mov
ds
retf
mov
mov
ss
pop
xlat
out
or
(bad)
cli
sub
push
aas
in
repz
cdq
sahf
scas
and
pop
sbb
xlat
es
test
enter
mov
(bad)
rol
pop
sub
inc
add
(bad)
sahf
jmp
fstp
(bad)
jmp
or
je
scas
inc
outs
add
sbb
push
mov
push
cwde
shr
pop
adc
outs
jns
in
mov
adc
cmps
ficomp
scas
data16
add
inc
stc
cld
add
pop
inc
call
and
rcr
gs
(bad)
sub
or
cmp
into
pop
shr
xor
cmp
sbb
inc
jle
push
adc
ds
xchg
pop
mov
ins
outs
scas
cli
xor
ins
fwait
pop
lea
pop
ret
mov
ret
xor
xor
xchg
gs
(bad)
push
int3
lods
xchg
add
inc
pop
test
loope
xor
cmp
sbb
xchg
fidiv
popf
adc
lods
add
adc
cs
sub
shl
dec
mov
jge
mov
and
test
lahf
add
neg
fmul
dec
rcr
mov
adc
scas
cmp
daa
jbe
sbb
xchg
test
jae
ror
outs
gs
xchg
jnp
enter
stos
lds
ins
or
scas
jbe
loope
cmps
daa
(bad)
mov
out
fbld
stc
sbb
loop
xlat
pop
in
mov
jp
in
jge
cmp
inc
lahf
pop
outs
das
jnp
and
mov
push
push
mov
pop
inc
mov
mov
pop
sar
fs
out
or
leave
or
fwait
pop
mov
adc
stos
data16
test
(bad)
lock
call
enter
nop
in
jo
sbb
outs
mov
push
add
in
loop
enter
test
js
mov
dec
(bad)
xor
xchg
popa
movs
cmps
arpl
push
cmp
aad
mov
iret
outs
cwde
repz
rol
xchg
xor
cmps
inc
cld
xor
xor
stc
adc
lds
out
jae
xor
daa
push
or
sar
(bad)
loope
mov
mov
xor
imul
or
mov
jmp
xchg
and
sub
or
push
test
ret
push
mov
or
and
sbb
aad
mov
or
and
pop
xchg
sub
sbb
adc
xchg
jmp
pop
cmc
in
sti
cmc
pop
or
and
push
pop
dec
inc
bound
and
sar
(bad)
in
ficomp
xchg
lods
cmp
add
rep
mov
dec
push
or
out
inc
cmps
add
in
das
dec
out
shr
xor
jmp
into
xchg
daa
mov
shl
push
inc
test
rol
dec
repnz
(bad)
mov
adc
arpl
sbb
test
mov
cmp
or
mov
xor
fsub
jns
mov
jl
and
neg
(bad)
lds
xchg
or
push
push
mov
sub
or
arpl
xor
pop
arpl
shl
fcmovnb
lds
fsqrt
adc
not
pop
jae
cmp
je
loopne
arpl
jae
aaa
stos
cmp
add
test
xchg
lahf
dec
(bad)
mov
sub
aad
jmp
jnp
or
jmp
lock
lods
push
lods
mov
xor
test
jecxz
test
lock
adc
imul
inc
adc
pop
sub
popa
mov
mov
test
fwait
jo
fiadd
mov
(bad)
pop
shl
int
fbstp
fcomp
push
sbb
data16
mov
pushf
jecxz
and
into
call
fabs
jmp
pop
adc
adc
int3
inc
push
dec
cld
pop
cmp
aam
fsubr
dec
aam
mov
test
pop
fwait
pushf
fimul
add
pop
test
sbb
loope
pop
stos
fisub
push
aas
in
pushf
cld
mov
pop
mov
jbe
mov
retf
mov
dec
pop
mov
(bad)
das
sbb
(bad)
and
push
add
sub
movs
(bad)
fidiv
or
mov
xor
pop
or
xchg
(bad)
jmp
add
or
sub
push
jmp
int
call
jmp
das
(bad)
std
xchg
xchg
xchg
lds
adc
xchg
add
ret
or
call
and
xchg
(bad)
and
mov
adc
or
mov
dec
mov
js
pop
lahf
popf
cmps
cmps
push
rcl
test
ins
push
leave
dec
ds
push
push
mov
jge
inc
iret
dec
cmp
jbe
ja
mov
sub
push
jge
push
lahf
inc
xchg
adc
ins
in
push
movs
test
add
movs
push
int3
sub
jb
dec
adc
jne
mov
test
(bad)
jo
cmovb
fcomp
inc
bound
add
xchg
ret
xchg
aas
fsub
leave
push
push
or
add
inc
and
loopne
clc
aad
outs
push
dec
(bad)
sbb
test
adc
fcmovb
cmp
cwde
call
into
(bad)
mov
or
dec
fisub
(bad)
pop
or
leave
push
cmp
shl
add
pop
mov
sub
(bad)
pop
leave
inc
out
push
in
push
dec
in
je
call
cdq
cvtps2pi
mov
arpl
sub
push
xor
pop
cmp
pop
fcmovnb
xchg
gs
iret
aam
mov
stc
cmp
jmp
jmp
and
or
or
add
mov
das
add
mov
fcom
shr
popf
test
out
or
das
pop
ins
scas
ins
sbb
popa
data16
icebp
mov
hlt
fld
xor
cdq
inc
movs
std
rcr
dec
sbb
and
daa
test
test
sub
inc
aam
dec
jl
das
and
push
xlat
jnp
mov
dec
pop
mov
push
lahf
call
jne
jmp
popf
sub
jno
inc
int3
bound
jp
gs
jmp
and
pop
jns
xlat
lods
jno
adc
jb
scas
(bad)
push
inc
add
sub
xchg
ret
jg
jl
xchg
pop
test
add
mov
push
ins
int
mov
loope
hlt
adc
cli
cdq
jne
jae
mov
cld
sbb
neg
popa
xchg
add
push
mov
sti
fnstcw
ins
inc
pop
jns
cmps
sub
or
je
mov
test
icebp
xlat
jnp
mov
pop
shl
scas
jmp
sti
mov
jmp
lds
push
jge
ror
lods
pop
jle
xor
cmp
pusha
js
mov
(bad)
cdq
test
add
icebp
pop
jbe
pop
xchg
jns
xchg
ss
jns
popa
call
mov
jg
sub
xchg
mov
mov
pop
ins
push
scas
dec
xchg
inc
cwde
fcmovb
mov
cwde
mov
mov
mov
adc
mov
pusha
mov
int3
xchg
fdivr
or
pop
ins
inc
add
push
movs
sbb
in
mov
fimul
out
pop
test
clc
cli
stc
pusha
aam
sar
inc
cmp
xor
mov
ins
int3
jo
hlt
mov
jne
test
in
hlt
add
mov
mov
imul
and
add
es
ins
mov
ror
ror
mov
test
inc
or
or
imul
add
and
and
mov
xchg
sbb
js
test
ins
into
pop
outs
mov
sbb
jbe
arpl
jl
arpl
cmp
test
scas
adc
not
add
push
mov
pop
pop
icebp
shl
pop
rol
cmp
ins
mov
push
dec
inc
stc
lea
jp
addr16
mov
in
pop
xor
fdivr
sub
enter
adc
iret
xchg
mov
iret
imul
cmp
and
xlat
mov
mov
in
jnp
aas
sbb
stc
adc
bound
loop
shl
mov
and
push
cmp
xlat
sbb
mov
in
xchg
loop
fsubr
xlat
test
in
retf
mov
adc
(bad)
adc
jno
cmp
dec
sbb
sub
add
iret
mov
test
cmp
sbb
jb
sub
call
inc
pushf
ins
daa
inc
pop
sbb
add
push
ja
xchg
pop
push
or
mov
jmp
cmc
gs
push
imul
push
adc
fidivr
(bad)
jae
out
adc
bound
loop
inc
stc
xchg
jns
xchg
icebp
inc
inc
les
adc
test
sti
xor
pop
xchg
add
ret
scas
or
inc
mov
cmp
xchg
les
popf
lock
dec
adc
add
and
jp
movs
push
test
imul
or
(bad)
adc
rcr
or
and
mov
jecxz
push
(bad)
or
popf
fs
jge
mov
mov
in
xchg
pop
or
pop
push
jb
cmp
imul
dec
fiadd
jp
or
xor
dec
fisub
mov
jge
sbb
sbb
retf
lods
mov
rol
mov
aam
pop
das
mov
test
dec
cmp
loopne
sub
nop
mov
fisttp
and
lods
(bad)
mov
daa
je
jge
cmp
ja
or
push
mov
sub
test
sub
push
sub
or
enter
dec
and
sbb
popa
ffreep
mov
adc
dec
idiv
std
dec
jbe
pushf
push
add
lods
xlat
dec
dec
xor
rcr
pop
pop
enter
loop
das
mov
inc
or
aad
pusha
mov
or
inc
sahf
imul
inc
loope
jno
pop
push
sar
(bad)
mov
jno
(bad)
leave
add
bound
lea
(bad)
cmp
mov
dec
test
and
xor
call
jmp
cmp
sti
dec
sbb
push
(bad)
jle
fsub
fcmove
(bad)
mov
(bad)
out
fadd
sub
nop
arpl
daa
push
rol
arpl
mov
aad
iret
mov
pushf
jnp
pushw
inc
nop
aaa
and
test
pop
js
pushf
enter
mov
jbe
ds
stc
jmp
rol
cmp
and
sbb
scas
mov
jo
repnz
xor
sar
lea
fisttp
cdq
mov
test
pop
sub
fdiv
stos
repz
add
and
loop
jmp
sahf
cmc
adc
dec
jecxz
or
fistp
adc
sar
xchg
add
movs
cdq
mov
xchg
or
jbe
addr16
and
in
aas
jbe
hlt
push
jge
xchg
mov
push
in
sar
ins
adc
hlt
or
int
cmp
jmp
retf
jae
mov
in
(bad)
in
hlt
jg
mov
retf
push
mov
sub
retf
jae
xchg
loop
js
cli
popf
mov
add
jb
ror
int
mov
sub
and
xchg
int
pop
or
add
xor
lock
push
rcl
sub
sbb
cld
fisttp
adc
clc
or
or
or
int
out
mov
dec
cmps
jo
add
dec
push
ficom
js
lea
and
xlat
sbb
xchg
outs
nop
mov
in
cld
scas
or
adc
test
arpl
jne
mov
mov
icebp
iret
jecxz
hlt
mov
and
sub
test
or
sbb
lds
(bad)
daa
dec
adc
dec
fndisi(8087
fwait
mov
fnstsw
outs
(bad)
int
and
sub
pop
cmps
jno
mov
dec
pusha
aam
mov
pop
outs
xor
or
das
inc
call
icebp
es
dec
inc
pop
inc
cs
les
sub
adc
xor
test
inc
jg
inc
push
lods
ins
add
imul
cmp
pop
scas
pop
popa
xor
mov
sbb
dec
es
mov
or
adc
or
cmp
cmp
or
or
faddp
pop
fcom
or
movs
mov
adc
(bad)
loopne
imul
rol
test
add
pop
es
push
call
push
fidiv
adc
push
movs
fbld
adc
repz
and
sbb
jno
inc
je
cdq
js
jae
jb
pop
mov
daa
icebp
in
pop
cmp
and
stos
scas
cmp
clc
movs
jo
arpl
push
xchg
adc
sub
sbb
cmp
adc
call
and
and
cmc
cs
pop
lods
and
inc
adc
pop
mov
jb
jo
leave
pop
out
xchg
fs
aam
nop
in
mov
xchg
pop
fbstp
out
pop
cmp
pop
cmps
cmp
xor
adc
push
outs
and
jb
jb
jne
lock
sbb
and
into
repz
test
fsubr
xor
add
jmp
mov
xchg
movs
loop
xor
inc
sub
movs
inc
push
pop
push
js
lods
(bad)
cmp
sub
stos
ins
out
rol
add
rcr
or
stos
sub
pop
fcomi
and
sahf
test
pop
rcr
unpcklps
sub
lock
cwde
and
push
(bad)
pop
push
test
jnp
cdq
mov
sahf
xchg
push
sbb
inc
mov
xchg
gs
sar
aad
push
pop
push
jae
xchg
adc
push
xchg
mov
or
lods
popa
in
test
jnp
call
retf
inc
imul
dec
adc
push
movs
mov
mov
retf
add
xchg
iret
dec
add
mov
or
jnp
push
fisub
mov
pop
push
adc
mov
jmp
and
sar
mov
cli
adc
clc
out
hlt
rcr
mov
push
ffreep
popf
cmp
dec
push
sbb
dec
mov
addr16
das
clc
add
cmp
out
nop
retf
mov
xchg
cld
mov
retf
sub
lods
xchg
lods
pop
adc
nop
mov
mov
cmp
xchg
mov
imul
xchg
cmp
dec
inc
xor
hlt
cmp
jno
bswap
mov
and
clc
out
jae
jne
popf
mov
inc
sbb
mov
jnp
jmp
and
sahf
in
leave
adc
xchg
inc
test
in
pop
adc
das
leave
mov
stc
cli
pusha
sbb
push
mov
outs
loopne
cmp
dec
scas
out
dec
jge
add
sbb
push
imul
add
cwde
mov
test
repnz
push
rol
into
push
pop
mov
out
inc
adc
sti
mov
and
and
cli
mov
jnp
je
gs
inc
xor
push
dec
mov
ror
enter
mov
shl
loop
sbb
or
loope
movs
fadd
neg
cmp
ins
push
or
cwde
repnz
je
sbb
inc
cmp
mov
push
push
add
xor
mov
fimul
fld
shl
jns
scas
addr16
movd
pop
xor
repnz
dec
dec
adc
adc
aaa
test
or
repnz
xchg
xlat
cld
add
adc
pop
sahf
and
pop
jle
inc
ins
imul
pusha
jns
cld
lods
outs
mov
or
pop
in
push
(bad)
dec
xlat
(bad)
xchg
hlt
icebp
iret
xor
fdivr
mov
cmp
pop
xor
popf
adc
mov
xchg
scas
(bad)
out
sub
mov
addr16
hlt
xchg
adc
test
sbb
pop
sub
ss
aaa
dec
mov
mov
mov
xor
mov
(bad)
call
sbb
cmp
sbb
mov
or
shl
push
imul
dec
stos
and
mov
repnz
test
fst
jns
in
test
xor
(bad)
ss
add
aas
shr
and
dec
adc
xor
pop
shr
or
leave
js
daa
mov
or
shr
pop
xchg
jb
add
in
outs
inc
popa
pop
pop
fs
jnp
ror
dec
inc
in
push
mov
xor
add
aam
push
jmp
int
mov
mov
push
daa
pop
push
test
mov
dec
ds
mov
out
outs
pop
leave
push
fs
pop
mov
jmp
adc
es
jae
cli
fdivr
mov
xchg
cmps
push
or
add
imul
mov
lods
in
imul
inc
fsubr
rcl
xor
dec
lock
call
shl
in
je
movs
push
sbb
cmps
das
(bad)
cmc
cmps
enter
ja
iret
loopne
outs
loop
retf
inc
lods
in
mov
fcmovnu
lea
dec
mov
popa
retf
inc
test
hlt
mov
inc
sbb
jp
xor
add
jnp
or
addr16
add
and
mov
mov
int3
cmp
fstp
add
addr16
xchg
dec
je
and
sub
mov
(bad)
mov
retf
ret
jge
jmp
dec
(bad)
dec
inc
retf
adc
sub
sub
test
jne
push
mov
mov
or
aam
push
rcl
sbb
xchg
inc
(bad)
cmp
dec
jo
cmp
rcl
ret
xchg
and
aas
mov
sahf
and
test
shl
call
es
rcl
push
outs
push
mov
jle
add
push
int
pop
(bad)
das
and
cmp
jno
xor
outs
hlt
fs
hlt
(bad)
sub
cmp
and
xor
mov
or
arpl
jge
cmp
call
xor
movs
ins
cmps
mov
js
ret
mov
cmp
fdivr
aad
cmps
mov
ror
sub
mov
pushf
(bad)
mov
inc
iret
jne
test
mov
mov
xor
fs
mov
retf
fnstenv
pushf
clc
cmps
scas
movs
inc
jle
and
xor
sar
mov
jg
(bad)
jg
lds
xchg
(bad)
movs
mov
push
arpl
or
scas
jmp
nop
xor
ds
out
cwde
jb
pop
lods
daa
mov
es
inc
xor
cs
jns
dec
push
in
jnp
mov
les
dec
gs
pusha
pop
pop
pop
and
push
rcr
sub
popa
or
xor
int
popa
mov
pop
add
mov
jecxz
fdivr
or
and
xchg
cmps
xchg
add
inc
jp
xchg
add
retf
mov
js
shl
jbe
mov
rcr
arpl
fistp
mov
hlt
call
jmp
xor
(bad)
scas
jae
in
jno
push
stc
movs
int3
inc
hlt
jmp
mov
outs
js
jp
nop
out
cs
(bad)
cdq
dec
fdiv
imul
out
sub
scas
dec
imul
push
mov
adc
rcr
or
stos
cmps
ss
movs
sub
in
loopne
push
sub
mov
sbb
sub
fsub
mov
mov
call
in
xlat
and
arpl
shl
fst
sbb
xchg
frstor
mov
cmp
movs
adc
test
fcomp
sti
in
mov
mov
mov
jns
jg
imul
and
movs
push
and
pop
sbb
xchg
pusha
movs
xor
mov
xor
nop
gs
(bad)
daa
mov
mov
cli
daa
call
inc
pop
fdivr
leave
fistp
mov
xchg
cld
aas
(bad)
nop
pop
cmc
xor
dec
xchg
sbb
out
clc
and
or
inc
stos
adc
stos
jp
data16
rol
jg
adc
scas
iret
ins
pop
aaa
(bad)
fmul
xchg
cs
test
stc
aaa
repnz
in
jecxz
in
out
add
xor
pusha
pop
dec
fwait
add
dec
jae
cmp
std
sub
mov
outs
ins
pop
jmp
fcmovu
shl
mov
push
les
cmc
clc
adc
jle
adc
pop
and
dec
mov
xchg
mov
dec
fwait
jmp
fstp
mov
xchg
lods
pop
adc
mov
ss
sbb
cli
retf
imul
mov
movd
cmp
ror
jno
(bad)
pop
adc
mov
xlat
jmp
sahf
sahf
ins
loop
xchg
push
fxch
xor
push
(bad)
fst
sbb
call
jg
sbb
bound
data16
dec
or
lahf
mov
push
outs
push
xchg
push
inc
xchg
daa
in
iret
sti
or
add
dec
and
test
jae
inc
dec
mov
pop
pushf
mov
(bad)
adc
ret
add
stc
jle
hlt
add
(bad)
sub
add
cld
nop
or
popa
or
sbb
jb
(bad)
icebp
fcom
mov
xchg
pop
loope
lahf
push
icebp
cmp
xchg
(bad)
int
mov
outs
mov
pop
inc
(bad)
aaa
js
repnz
cmc
ret
add
sbb
scas
imul
aad
push
xor
mov
mov
rol
(bad)
sub
fcmovu
retf
imul
push
fimul
sub
push
pop
rcr
and
fcmovu
mov
lods
push
movs
outs
lods
bound
(bad)
ret
pushf
jecxz
cmp
jecxz
inc
xor
outs
adc
adc
clc
jle
rcr
jl
xchg
xlat
sbb
mov
xlat
ins
and
cwde
stc
(bad)
fsubr
cld
stos
sub
jo
rol
cld
les
pop
rcr
cdq
leave
cmp
outs
sub
adc
inc
jo
pusha
mov
mov
call
fild
rcr
xchg
push
or
cli
push
pop
(bad)
push
gs
cdq
or
push
push
das
add
neg
(bad)
mov
mov
ret
loopne
in
popf
popf
lahf
pop
pop
sub
xor
lea
ja
sti
sub
mov
out
pop
fdivr
add
(bad)
fdiv
dec
mov
or
pop
push
xlat
jge
(bad)
fwait
mov
or
lahf
cmp
cmp
mov
std
dec
inc
int3
dec
dec
sbb
dec
cwde
fstp
cmps
hlt
lahf
outs
cld
or
pop
push
outs
jns
les
test
imul
daa
mov
test
daa
adc
je
cmps
push
mov
sub
jae
xchg
neg
push
sub
pop
(bad)
neg
cdq
mov
das
sub
dec
sbb
mov
cmp
cmc
in
sbb
or
pop
das
(bad)
push
inc
add
inc
xor
enter
xor
mov
adc
shl
adc
dec
sub
repz
popa
cmovl
loope
push
xchg
inc
fsubrp
test
mov
out
sbb
sub
mov
push
xchg
lods
and
mov
mov
(bad)
les
push
jnp
and
call
xchg
ror
ja
js
movsx
cld
mov
cmp
add
es
xchg
in
aam
fwait
cli
push
cmps
call
sub
mov
mov
lahf
(bad)
sti
data16
jecxz
lea
jb
pop
movs
stos
mov
pop
jno
xchg
shl
icebp
push
mov
movs
mov
or
cmp
pop
dec
out
cs
(bad)
ret
sub
mov
movs
mov
imul
pop
push
out
hlt
retf
test
call
mov
rcr
cld
mov
xchg
lahf
ins
sub
test
sahf
push
push
mov
(bad)
mov
cmps
fiadd
cld
mov
or
lds
jge
push
retf
ret
xor
gs
mov
test
mov
or
sbb
push
xchg
cmovg
or
call
mov
or
add
jne
xor
jg
cmp
outs
pop
mov
test
test
movs
adc
test
aam
and
cmovb
or
lods
jns
or
jne
inc
jb
gs
loope
sbb
cmp
aad
stos
jbe
sbb
popf
cmp
(bad)
pop
or
ja
sahf
test
mov
pushf
aaa
ud0
aas
xchg
cmp
pop
mov
fst
outs
das
mov
call
dec
inc
fnstsw
pop
adc
cmp
lods
jle
inc
jl
mov
fdivrp
pop
outs
stos
lods
mov
addr16
dec
dec
mov
inc
aas
mov
inc
jno
push
cs
stos
sbb
fcomip
je
lods
leave
test
inc
jnp
mov
add
jl
and
in
mov
loop
mov
adc
in
in
iret
push
iret
clc
xor
xor
add
jg
ret
ins
push
mov
ret
jb
and
sbb
add
jb
push
mov
retf
repnz
jne
lods
xchg
fstp
pop
int
dec
and
mov
in
add
cwde
scas
lock
lods
popa
cmps
or
adc
mov
xor
hlt
in
ret
xchg
cld
addr16
sbb
adc
cmps
xchg
mov
fidiv
daa
push
sbb
mov
retf
lods
add
add
sub
inc
sub
out
sbb
mov
mov
repz
push
xchg
jl
mov
push
es
repnz
stc
push
popf
xor
sti
popa
dec
pop
lods
movs
shl
sub
pop
jl
std
nop
mov
ins
lods
retf
mov
aad
pop
lods
addr16
pusha
jle
outs
push
iret
and
xor
cmp
out
or
xchg
sbb
pop
jnp
popa
(bad)
cli
push
sbb
inc
retf
cs
or
loop
inc
in
fcom
xchg
and
cmp
push
fsub
xchg
pop
sub
inc
mov
ror
sbb
push
and
push
mov
or
mov
xor
inc
int3
stc
retf
cmc
push
xchg
lock
xor
aas
mov
mov
out
xchg
(bad)
pushf
iret
out
popa
pop
(bad)
xchg
mov
cdq
mov
inc
mov
mov
jp
jb
mov
cmp
push
push
movs
mov
popf
je
and
cmps
lods
cmps
aad
pop
mov
inc
(bad)
jmp
std
pop
ja
adc
or
sub
inc
xchg
or
adc
repz
sbb
adc
outs
outs
inc
stos
or
and
scas
out
out
repnz
pop
lods
adc
jge
in
cmp
or
push
mov
lea
cmp
lods
pop
test
pusha
xchg
xchg
(bad)
(bad)
iret
pop
lods
push
pop
xlat
xlat
sub
retf
dec
adc
xlat
jns
cmp
cld
(bad)
push
call
enter
push
jle
push
add
ror
fisubr
das
pop
xor
enter
add
inc
pop
daa
inc
add
jle
dec
scas
jns
add
and
xor
out
jmp
inc
add
xchg
mov
cs
add
mov
das
inc
test
pop
aad
push
mov
mov
jmp
iret
ret
in
sbb
sub
add
scas
mov
inc
mov
mov
fcmovb
adc
pop
outs
addr16
xchg
add
(bad)
movs
mov
cmp
iret
pushw
imul
push
or
iret
mov
push
(bad)
loope
scas
mov
sbb
inc
stos
xchg
mov
lds
jmp
int
sbb
not
loop
and
mov
call
retf
push
ret
rcl
mov
outs
dec
push
push
cld
jl
jmp
(bad)
mov
fwait
sub
test
imul
(bad)
push
cwde
or
dec
push
sbb
cmps
and
cmc
sbb
inc
call
lock
imul
test
out
sbb
in
inc
mov
or
push
shl
mov
pop
push
(bad)
xor
xchg
mov
pop
dec
jp
sbb
and
and
mov
call
pop
mov
jnp
arpl
jle
scas
pop
and
repnz
push
mov
int3
xlat
mov
retf
mov
test
jbe
jo
xchg
les
cli
aam
jo
ret
jb
loopne
mov
ins
adc
sbb
add
sbb
pop
out
rol
xchg
cld
out
mov
lock
hlt
push
ror
pop
fmul
jp
jne
mov
enter
inc
sbb
or
mov
push
jecxz
loop
or
and
test
xchg
pop
int3
adc
dec
sub
(bad)
cmp
ror
stos
push
outs
outs
stc
cmp
pop
inc
(bad)
out
mov
and
xchg
jle
les
ds
mov
dec
pop
je
lock
dec
out
sub
in
jle
ds
add
mov
pushf
cmp
ret
xchg
or
test
sbb
ins
mov
pop
jne
xchg
pop
(bad)
fstp
mov
mov
prefetch
or
mov
xchg
loope
sbb
aad
in
push
loop
cmps
dec
pop
std
xor
cmps
leave
inc
stos
int
outs
add
loopne
test
xor
push
lahf
push
stos
test
scas
sub
data16
add
clc
jg
adc
xchg
je
sahf
or
sbb
adc
cmps
push
fcmovnb
scas
or
and
xchg
cs
adc
xor
push
xor
loope
sub
mov
fist
ficomp
xchg
adc
add
movs
mov
dec
not
inc
add
out
movs
sub
or
dec
sbb
push
js
jge
call
or
(bad)
adc
lea
out
xor
call
push
sahf
push
(bad)
dec
(bad)
and
stos
pop
push
push
push
adc
xchg
adc
push
ret
mov
or
cmp
cmp
push
das
sbb
inc
std
cdq
lock
(bad)
(bad)
push
xor
pop
xor
dec
ret
sub
mov
mov
js
cwde
or
repnz
xor
cmp
inc
(bad)
push
in
mov
mov
scas
gs
ffree
jl
inc
push
stos
ficom
dec
arpl
mov
sub
shr
sbb
clc
sub
fidivr
jp
imul
push
movs
or
hlt
jg
dec
sar
dec
mov
ss
pop
je
(bad)
jmp
xchg
popa
(bad)
icebp
jge
sbb
popf
retf
(bad)
in
loop
xchg
jmp
mul
gs
xor
add
aaa
jle
pop
(bad)
mov
retf
cs
jmp
inc
sbb
mov
mov
mov
mov
sbb
dec
add
inc
(bad)
mov
fiadd
out
cmp
mov
aaa
(bad)
push
aam
retf
mov
in
xchg
test
pop
jecxz
mov
es
xor
dec
push
pop
mov
(bad)
std
sbb
cmc
leave
mov
mov
rcl
stc
enter
dec
or
sbb
adc
pop
leave
nop
xor
add
loopne
int
and
jle
sub
sbb
sbb
repz
jp
jge
idiv
bound
cwde
push
outs
jns
ss
adc
adc
adc
mov
jnp
hlt
mov
fmul
adc
jae
push
pmaddwd
mov
popa
ja
jbe
sbb
dec
(bad)
rcl
mov
mov
push
(bad)
dec
adc
lock
jg
ds
sub
mov
mov
retf
sbb
sub
imul
test
popa
add
ins
dec
and
lods
cmp
push
stos
and
cmp
cmp
mov
push
jbe
pop
int3
push
xchg
fwait
aaa
pop
and
or
mov
or
sub
lock
ins
(bad)
jnp
cmp
dec
mov
idiv
dec
pop
add
mov
adc
fdiv
sub
xor
cmp
int
leave
inc
mov
sbb
pop
sahf
(bad)
mov
cdq
(bad)
stc
mov
jae
arpl
pop
sub
stc
fmul
imul
xor
gs
mov
mov
in
xor
(bad)
sub
test
adc
icebp
dec
mov
js
push
dec
jnp
mov
mov
ds
inc
push
inc
adc
cli
pusha
(bad)
and
pop
test
les
inc
sbb
mov
popf
pushf
call
test
jno
scas
ds
int
daa
lock
or
(bad)
aas
cmp
mov
jbe
dec
ja
fucomp
into
addr16
inc
ror
inc
inc
or
jmp
adc
stc
mov
neg
(bad)
out
inc
xor
das
adc
pop
adc
push
pop
push
cmps
ins
fs
or
add
dec
add
push
mov
stos
xchg
fist
push
push
push
mov
mov
push
bound
sub
pop
ins
mov
ds
loopne
aad
pop
jmp
xchg
xchg
or
xor
xor
push
xchg
and
ret
fimul
mov
scas
retf
jmp
add
cmc
xor
mov
mov
jg
fisttp
lea
popa
pop
mov
ret
rol
iret
cmps
out
mov
or
int
ins
jge
clc
arpl
sub
mov
mov
cmc
fisubr
or
in
dec
cli
pop
rcr
cmp
xor
and
pop
icebp
xchg
push
add
mov
or
ja
dec
pop
jbe
ja
sbb
jo
and
in
push
mov
test
out
mul
add
mov
xor
pop
inc
jge
test
shl
sub
adc
add
cli
mov
jo
sbb
cmp
pushw
stc
(bad)
mov
ja
repnz
fisub
bound
cmp
addr16
adc
aas
ret
add
fnstsw
fsubr
pop
or
(bad)
mov
cs
into
ins
mov
loope
stos
dec
cmp
sub
sub
mov
pop
push
mov
rcl
push
aad
ror
and
xor
ret
jge
push
cmc
rol
xchg
inc
pusha
or
(bad)
movs
(bad)
dec
jno
push
aas
dec
pop
out
adc
inc
sub
ss
or
(bad)
test
inc
out
call
clc
loope
adc
lds
fstp
(bad)
xlat
dec
enter
jbe
add
jecxz
popa
inc
cs
out
cmp
outs
ds
inc
sbb
and
shl
sbb
jae
ret
mov
fsubr
dec
out
push
mov
fisttp
(bad)
iret
mov
cmp
mov
pusha
and
pushf
sub
iret
mov
fwait
(bad)
jecxz
add
mov
dec
int
icebp
xor
fbld
pop
jg
push
inc
imul
pop
into
shl
sbb
jne
in
dec
pop
lea
pop
dec
xchg
cmp
aas
out
sub
(bad)
mov
pop
jge
xchg
popa
cld
mov
dec
mov
add
pusha
inc
test
pop
ss
jg
popa
mov
mov
ret
sub
outs
push
outs
ja
pop
add
xchg
scas
jns
cmps
adc
sub
sbb
retf
test
movs
data16
cmp
mov
mov
jg
es
test
rep
add
and
shr
in
jbe
lahf
cmc
loopne
or
cld
rcl
test
cmc
mov
retf
bound
ja
sbb
lods
rcr
je
in
jecxz
mov
retf
and
jnp
xchg
js
dec
push
push
cmc
mov
jno
pop
imul
push
aam
push
pusha
data16
or
das
bound
pop
or
std
call
mov
je
or
adc
pop
cmc
dec
mov
fwait
repnz
les
or
cwde
sbb
pop
mov
pusha
mov
adc
lock
es
adc
fidivr
das
lea
add
stos
mov
fcomp
popf
pop
gs
not
lds
fs
aas
not
lahf
nop
fidiv
adc
xor
push
add
imul
cwde
mov
mov
mov
pop
xor
or
sahf
sbb
not
stos
jae
dec
adc
das
cmp
and
dec
sti
push
inc
cs
or
dec
push
add
mov
lea
lds
(bad)
out
jns
or
mov
lea
adc
mov
loope
mov
fist
loop
cdq
(bad)
jp
jge
(bad)
je
or
push
aad
pop
push
cs
xchg
les
iret
lods
fistp
sbb
test
std
inc
ds
or
popa
adc
sub
inc
loop
les
mov
xchg
or
pop
outs
mov
cmp
adc
jmp
xor
int
xor
int
sub
inc
jmp
popf
sbb
jmp
sub
push
mov
mov
and
or
push
lahf
inc
and
jmp
sbb
into
or
test
push
pusha
out
loopne
cmp
cmc
shl
mov
(bad)
retf
add
jo
loop
xchg
dec
xchg
inc
adc
stc
jno
mov
jbe
shl
(bad)
int
not
cmp
pop
movs
or
or
push
or
jmp
xchg
fistp
ror
div
dec
retf
movntq
pop
test
and
inc
out
cmc
cmps
xor
mov
call
push
stos
not
test
mov
and
retf
and
aas
inc
add
mov
dec
sbb
jae
mov
adc
sbb
xchg
repz
dec
(bad)
repnz
pop
adc
and
enter
mov
mov
not
cwde
shl
xchg
mov
or
das
or
jns
movs
dec
jae
add
cdq
fldenv
ret
int3
add
lock
std
shr
mov
imul
addr16
dec
add
mov
pop
push
fnstenv
adc
push
adc
push
bound
aam
sahf
push
sbb
pop
cs
lods
popf
mov
mov
popa
mov
cmp
dec
pop
adc
hlt
inc
(bad)
arpl
jne
inc
or
sub
fwait
mov
in
cmp
xor
test
adc
sahf
in
mov
les
repnz
push
aad
sub
pop
mov
hlt
mov
out
hlt
mov
repz
loopne
dec
std
mov
sbb
lock
aad
mov
and
fwait
inc
rcl
daa
jnp
bound
enter
sbb
push
mov
xlat
add
aam
sub
int3
pop
in
cmovge
rol
aas
ficomp
stc
inc
daa
mov
mov
sbb
add
and
mov
sahf
dec
jp
push
gs
fwait
lea
in
(bad)
mov
push
ficom
mov
xchg
pushf
pop
std
push
cmps
nop
test
push
mov
or
pop
je
in
outs
sub
adc
shl
nop
lahf
xchg
pop
ficomp
repnz
sti
or
aam
inc
call
mov
xchg
fsubr
xchg
or
loop
pop
or
icebp
mov
jmp
popa
and
ja
jb
stos
stos
out
imul
adc
int3
push
(bad)
ins
test
xchg
cmp
inc
inc
stos
push
mov
push
leave
and
cmp
lahf
push
(bad)
add
outs
push
(bad)
mov
push
test
shl
shr
jmp
lea
cmp
sub
int3
add
cmp
aas
call
shl
addr16
sbb
(bad)
adc
push
adc
(bad)
pop
outs
adc
xor
xor
jmp
inc
or
mov
adc
cmps
cmp
xchg
in
or
mov
mov
sbb
popf
mov
in
icebp
inc
rcl
xor
push
(bad)
mov
mov
add
out
fimul
or
push
int
jnp
ficomp
inc
in
call
jecxz
push
test
xchg
xor
pop
mov
lahf
sbb
or
(bad)
or
rol
sub
xor
mov
call
inc
xlat
pop
aaa
xor
cmp
and
repnz
mov
mov
dec
arpl
and
cdq
push
mov
aad
adc
movs
stos
shl
stc
scas
sar
std
lods
mov
in
sbb
and
sub
add
popa
push
imul
inc
sbb
test
(bad)
push
test
pslld
into
mov
and
jl
addr16
push
fsubr
jnp
xor
scas
mov
out
jmp
fisubr
aaa
inc
inc
jbe
or
sub
adc
je
cmc
or
jnp
dec
cdq
stos
ins
(bad)
ds
(bad)
jmp
fcomp
push
popa
mov
stos
bound
pushaw
int
adc
std
push
sub
mov
pop
js
push
enter
push
sub
sub
ins
test
push
fcmovnbe
hlt
ins
fisubr
and
push
mov
cwde
cmps
cmp
mov
out
nop
push
pop
or
jmp
xor
mov
mov
cld
jnp
ja
test
dec
cmp
pop
lea
mov
adc
xor
(bad)
sub
loope
dec
mov
in
clc
int
sub
ins
loop
sbb
cwde
and
inc
retf
fcomi
je
mov
sub
sbb
stc
mov
daa
xchg
call
ret
or
mov
out
xchg
fild
scas
imul
sbb
xlat
push
mov
cli
jmp
out
stc
shr
dec
and
sbb
(bad)
xchg
je
fcom
movs
sub
mov
xchg
and
mov
iret
mov
sbb
ret
xchg
test
leave
scas
mov
sahf
xor
stos
pop
push
inc
bound
xchg
icebp
dec
sti
jp
adc
loop
dec
inc
out
sub
adc
add
imul
push
aam
icebp
and
xor
ret
(bad)
fild
cmps
add
fimul
mov
cmp
and
mov
punpckldq
pop
outs
sub
push
adc
and
push
jecxz
sub
scas
adc
scas
cmp
inc
pop
jno
cdq
into
shl
push
pop
mov
add
lods
fst
mov
jb
mov
and
lahf
popa
fadd
pop
xor
loopne
popf
gs
cs
cmp
xor
(bad)
call
dec
jg
push
stos
icebp
xchg
xchg
mov
pop
hlt
(bad)
cmp
and
xchg
loop
leave
std
pop
jl
sub
dec
mov
and
mov
adc
sub
js
hlt
scas
js
jge
(bad)
out
mov
and
ret
adc
into
inc
sub
push
sbb
(bad)
mov
or
pusha
rol
das
mov
fistp
or
dec
(bad)
mov
sti
fmul
scas
push
idiv
xchg
push
jp
adc
fild
jne
(bad)
ret
sbb
nop
dec
mov
hlt
mov
loopne
mov
mov
or
test
jmp
daa
add
and
daa
cmp
cmp
jg
adc
push
and
mov
add
push
pop
loop
jmp
jmp
push
arpl
lods
or
dec
mov
sbb
sti
sub
push
adc
mov
ja
jnp
aas
sub
sub
loopne
mov
adc
cmps
mov
or
enter
mov
dec
test
rcl
lahf
inc
cmp
pop
sbb
jp
mov
add
push
loope
sbb
call
(bad)
cmp
add
xlat
int
scas
jmp
mov
pop
mov
sbb
popf
test
scas
or
inc
lea
inc
add
mov
cmp
xchg
xor
xchg
popa
push
lock
sub
inc
sbb
sbb
fst
rcl
mov
int3
xlat
cmps
inc
mov
jno
pop
imul
jno
sub
xchg
sub
dec
xchg
xchg
test
jbe
or
add
or
mov
jb
mov
xor
inc
xor
pop
aad
and
addr16
mov
lea
ret
lock
xchg
enter
ret
pop
inc
and
and
jle
cli
sub
jp
xchg
inc
nop
cmp
mov
imul
pop
(bad)
sbb
xor
jge
add
dec
mov
jg
jmp
out
cmc
cmp
lock
aaa
inc
lods
test
mov
test
adc
mov
and
pop
sahf
push
enter
movs
push
adc
dec
outs
lds
pushf
mov
rcl
repz
xchg
mov
fsub
inc
fsub
inc
test
mov
cmp
ret
mov
idiv
data16
test
stos
cmps
pop
das
jo
adc
rcr
shl
out
aam
sahf
sbb
jno
ror
add
mov
mov
and
pop
ret
stc
cwde
cmp
das
iret
dec
daa
inc
jle
mov
test
xchg
test
xchg
icebp
and
mov
mov
aad
cmp
sub
push
inc
stos
leave
jns
cs
adc
in
mov
cmps
outs
xchg
sbb
retf
jmp
sbb
into
inc
pop
xor
dec
ins
and
jns
mov
leave
mov
frstor
fwait
rcl
(bad)
cmp
shl
neg
test
push
push
mov
nop
dec
dec
mov
xor
leave
push
cmps
mov
stos
(bad)
mov
rol
jg
inc
mov
cmp
jmp
mov
arpl
stos
dec
cmp
(bad)
rcl
jp
gs
hlt
je
and
and
inc
bnd
jp
aas
shr
adc
push
mov
stc
mov
sbb
and
pusha
inc
mov
fisub
aam
cmp
fsubr
(bad)
jns
ins
fs
inc
xchg
adc
inc
push
jmp
mov
jbe
and
into
sub
in
jno
inc
sub
adc
push
dec
xor
gs
pushf
mov
les
test
dec
cld
cmc
(bad)
std
fs
mov
adc
dec
movs
enter
ins
out
addr16
cmp
adc
fucomp
mov
out
or
leave
inc
xchg
mov
cmp
(bad)
or
mov
js
shr
push
imul
or
sbb
outs
inc
cmps
in
das
xchg
(bad)
jecxz
cwde
adc
or
sub
sbb
fdivrp
xor
cs
fistp
and
mov
push
shl
xchg
in
ret
add
retf
and
mov
or
pop
push
push
ins
dec
sbb
xchg
fdiv
dec
pop
add
push
dec
cmp
mov
nop
call
loope
pushf
push
adc
mov
(bad)
cmc
mov
cmp
outs
aam
push
jo
jge
pop
aam
ror
jbe
or
popa
loope
jg
lahf
mov
fisttp
add
dec
or
fwait
bound
adc
push
jno
or
jo
outs
aad
fstp
jmp
retf
pcmpgtb
xchg
dec
ds
jmp
xchg
lods
pusha
fs
loopne
fs
and
mov
add
stos
movs
mov
push
pop
fidivr
mov
lahf
sub
mov
test
sbb
or
sbb
cmps
(bad)
sub
xchg
push
jb
pusha
not
dec
jecxz
fdiv
adc
adc
icebp
sbb
addr16
mov
clc
imul
fadd
or
sub
jno
pmulhuw
xor
mov
xchg
mov
push
sti
push
je
(bad)
mov
lahf
aas
rol
cmp
(bad)
mov
inc
pop
mov
add
shl
out
test
fist
(bad)
push
push
and
std
jecxz
lods
into
cmp
sbb
ins
in
xor
int3
pop
push
sub
mov
mov
push
sbb
push
stos
fidivr
sti
mov
jecxz
xlat
lods
sub
dec
push
out
retf
cdq
push
xlat
push
and
inc
push
cmp
pop
and
iret
jmp
mov
into
mov
xlat
sub
pcmpeqd
dec
cmp
popf
and
ror
xor
cmp
xor
jbe
sbb
gs
fstp
mov
and
and
aas
call
cmc
pop
lods
rcl
bound
push
cmp
sbb
rcr
fwait
xchg
push
cmp
push
loop
mov
mul
and
push
cmp
or
adc
mov
in
inc
or
push
lock
jecxz
imul
pop
sub
xchg
adc
fidivr
inc
xor
mov
xchg
xchg
sub
cmp
adc
aas
cmp
adc
icebp
jmp
push
add
int
xor
mov
jl
fdivr
imul
lock
dec
add
call
ficom
pushf
jb
retf
pop
sub
out
mov
popa
shr
es
jo
outs
push
into
push
aaa
stc
test
retf
gs
call
mov
ds
js
gs
addr16
adc
(bad)
jp
adc
xchg
mov
xor
jge
mov
xor
cmp
ret
sub
and
fwait
ins
dec
mov
xor
and
sub
mov
retf
repnz
sbb
dec
xchg
dec
hlt
xchg
scas
lds
xchg
mov
adc
or
div
mov
loop
push
mov
mov
dec
xor
out
das
and
mov
stos
dec
stos
xchg
and
fcom
or
sbb
sbb
pop
(bad)
in
out
dec
or
dec
bound
aam
xchg
sbb
movs
push
cs
out
push
xor
jns
xor
dec
xchg
out
xchg
out
jnp
cmp
inc
add
ins
xchg
xchg
push
mov
xchg
jge
or
xor
adc
shr
jne
mov
push
jae
or
lds
repnz
(bad)
in
xchg
sbb
out
(bad)
lahf
outs
ins
dec
dec
(bad)
adc
xor
cmp
jecxz
xor
mov
mov
mov
sub
mov
(bad)
out
aad
sar
pop
pop
aam
in
cdq
or
sbb
in
bound
or
add
adc
xchg
pop
jae
or
jns
movs
mov
int
aaa
mov
jmp
lods
(bad)
jmp
pushf
hlt
sbb
je
outs
dec
in
mov
dec
out
xchg
das
mov
sub
in
adc
xchg
fsubr
dec
test
test
sub
pop
movs
mov
mov
jb
out
enter
mov
pop
xchg
cs
push
sbb
outs
push
and
cli
or
sbb
cld
sbb
push
js
(bad)
cmp
test
retf
push
pop
jno
cmp
(bad)
dec
sbb
and
jb
test
mov
push
xchg
pop
(bad)
aad
in
adc
mov
sti
nop
xor
cmp
cmp
jecxz
fwait
and
mul
jl
jmp
rol
cmp
adc
sbb
dec
and
into
pop
popa
test
fsubr
fnstsw
lods
aaa
mov
or
fxch
inc
sub
sub
xor
fisub
arpl
and
mov
pop
cmp
jnp
jne
hlt
out
push
mov
sub
cwde
inc
cmp
cdq
lahf
pop
in
adc
cmp
fmul
mov
mov
mov
outs
xchg
or
mov
and
xor
pop
push
mov
fcmovnu
pop
cmp
in
ins
jbe
push
pop
loope
sub
in
rcl
outs
jno
jp
pop
sub
arpl
mov
iret
xchg
push
shr
mov
inc
or
dec
data16
push
cli
ja
jnp
xor
jmp
push
mov
dec
mov
sub
pusha
cmp
jp
mov
add
sbb
adc
mov
in
mov
(bad)
fcmovnbe
(bad)
je
mov
adc
sub
mov
cmp
mov
jno
out
push
loope
ficom
test
xchg
xor
mov
mov
or
retf
stc
(bad)
mov
inc
neg
mov
pop
mov
in
push
mov
cwde
or
test
dec
adc
mov
loope
sbb
sbb
inc
into
cmp
inc
stos
fs
adc
pusha
push
push
and
inc
aam
das
add
mov
inc
add
das
push
cmp
retf
xor
gs
push
(bad)
loop
test
mov
sub
mov
sbb
pop
aaa
stos
mov
and
add
adc
loope
repz
mov
push
retf
add
jecxz
mov
sbb
js
rcl
sub
adc
cmp
cmp
adc
xor
and
das
shl
xchg
adc
xor
out
add
lods
push
jno
push
rol
daa
hlt
mov
jl
sbb
jl
mov
xchg
ins
lods
push
les
mov
lods
loope
pop
cld
int3
ret
and
lahf
test
js
xor
sub
add
stc
xchg
mov
dec
cmp
mov
test
pop
ins
lods
xchg
pop
lahf
pop
je
push
mov
push
jno
fstp
bound
out
iret
mov
jno
ss
inc
jne
jne
es
mov
test
outs
les
int3
sbb
outs
xchg
inc
sbb
pop
xchg
aaa
inc
imul
int
or
lock
dec
xor
cmps
btc
test
int
pop
repnz
dec
mov
jge
mov
push
mov
and
les
fincstp
push
cmp
dec
adc
dec
in
cmc
add
adc
rcl
aas
dec
jl
push
test
push
sub
and
add
jb
cmp
sbb
mov
pusha
adc
pop
mov
dec
aad
or
add
ins
push
stc
xlat
sub
in
inc
mov
and
pop
test
mov
push
cmps
or
sub
sub
and
or
fcmove
nop
or
aad
(bad)
je
stos
test
xchg
jecxz
mov
push
outs
ficomp
cs
push
jg
in
out
lock
loope
xchg
push
out
sub
adc
dec
xor
push
aad
lock
repnz
test
mov
pop
aaa
std
adc
gs
repnz
enter
jbe
adc
jmp
imul
add
shr
lea
loope
mov
int
and
cmc
fdivr
bsr
cdq
inc
sub
lds
mov
retf
inc
dec
mov
outs
or
mov
data16
js
and
lods
xor
ds
inc
xor
sar
in
push
pop
fucomip
inc
cmps
add
and
dec
aad
loope
sar
aam
xchg
dec
dec
daa
mov
(bad)
cmp
or
test
fisubr
js
ds
mov
and
test
push
mov
push
pop
and
sar
mov
adc
cmp
pop
(bad)
push
jns
cld
adc
and
imul
cmp
cmp
loop
mov
mov
mov
int
sbb
adc
or
push
lods
(bad)
repz
aad
sub
xchg
push
or
js
ror
loop
fwait
push
mov
stos
call
daa
push
test
test
pop
and
adc
xor
bound
inc
sub
ja
push
mov
sbb
popa
cwde
mov
lods
inc
popa
inc
pslld
ja
adc
sbb
test
js
adc
pop
clc
xchg
shl
mov
mov
jnp
jp
arpl
mov
xchg
or
int
adc
mov
pop
dec
leave
icebp
cli
add
fcmovbe
je
js
fld
adc
fist
push
nop
cmp
xchg
sbb
rcr
call
fcom
adc
sbb
jge
xor
mov
push
push
stos
stc
imul
push
push
repz
inc
push
daa
ss
mov
push
push
dec
repnz
retf
xchg
or
sub
aad
or
imul
add
fs
dec
pop
ins
repnz
pushf
sti
icebp
(bad)
pop
aad
jge
pop
je
sar
pop
xchg
xchg
jbe
mov
fdivp
xor
call
dec
inc
cld
push
xchg
push
xlat
imul
xchg
dec
jns
push
std
push
mov
add
jmp
xchg
out
push
xor
inc
dec
mov
mov
loopne
dec
mov
dec
dec
xor
cli
pop
or
pop
or
inc
arpl
push
adc
push
xchg
nop
mov
out
leave
pop
add
mov
sbb
push
mov
xor
mov
pushf
inc
imul
push
cmps
rcr
out
mov
xor
add
ror
push
add
daa
mov
fwait
shl
rol
mov
jmp
lahf
addr16
popa
pop
cmp
test
push
sahf
fistp
lahf
into
cmps
outs
call
scas
xor
and
push
pop
in
outs
repnz
mov
and
push
in
cld
daa
pop
inc
pushw
fld
ja
pop
test
imul
add
push
retf
xor
cmp
test
movs
xor
xor
loopne
(bad)
in
push
inc
das
retf
jg
add
(bad)
adc
add
push
push
sub
pop
sbb
js
stos
pop
mov
arpl
adc
shl
dec
cli
(bad)
jmp
mov
and
fidivr
sbb
sbb
stc
aad
scas
cwde
xchg
adc
jmp
mov
js
fild
and
or
(bad)
mov
xchg
popf
dec
scas
adc
xchg
sbb
adc
sub
add
ds
cmp
ins
inc
mov
pop
test
(bad)
out
cmp
test
and
xchg
pusha
pusha
fdivr
push
xlat
(bad)
adc
ins
adc
mov
pusha
and
cld
out
mov
(bad)
das
pop
sbb
jge
and
cmp
addr16
retf
pusha
rcl
into
repz
sbb
pusha
push
pop
xlat
fcom
into
dec
cmps
add
xchg
lea
jo
stos
sti
jno
rcl
dec
push
mov
sub
movaps
cmp
fist
fdivr
mov
stos
(bad)
mov
inc
es
jne
js
mov
xor
pop
push
push
popa
js
out
add
jmp
mov
fimul
and
xchg
and
outs
test
cmp
add
sbb
add
mov
stc
jge
mov
jae
mov
clc
xchg
stos
xor
jne
int
sbb
sti
inc
or
cmp
cmp
xchg
inc
retf
pop
sbb
in
or
enter
pop
fisub
inc
mov
retf
jns
(bad)
stos
jo
mov
call
sbb
sbb
fnsave
inc
out
pop
sar
in
pushf
aas
mov
es
dec
in
jge
dec
and
xchg
inc
inc
(bad)
(bad)
or
mov
cmp
aas
in
dec
or
loope
dec
fs
jne
and
mov
mov
fwait
pop
dec
dec
stc
mov
stc
sub
scas
adc
retf
rol
jmp
leave
fisub
add
(bad)
xor
lods
mov
cmps
pop
enter
int3
aad
mov
movs
imul
je
in
pop
bound
xchg
pop
gs
jb
add
mov
ret
push
out
ins
call
inc
inc
mov
ja
or
in
cmp
sahf
call
add
hlt
jb
push
mov
movs
jo
ins
add
loope
sbb
pop
jl
in
fdiv
fimul
jbe
pop
mov
push
arpl
mov
jp
pop
pop
xchg
(bad)
or
jmp
push
repnz
xor
rcl
sbb
pop
fsubr
sbb
cmp
jns
(bad)
call
scas
pop
sub
push
jb
in
in
sbb
jo
stc
fwait
push
in
dec
sar
push
sbb
ds
les
(bad)
mov
and
mov
ret
ins
mov
add
into
js
sahf
pop
add
adc
cmp
gs
jmp
push
imul
push
mov
(bad)
(bad)
(bad)
xor
push
lods
add
fdiv
call
or
jecxz
push
pop
or
cmp
xor
mov
lods
icebp
and
or
test
adc
das
adc
cs
add
test
fstp
push
xor
and
adc
pop
ja
in
and
push
fcom
push
mov
push
mov
mov
or
mov
(bad)
jp
push
out
or
or
fsubr
or
dec
test
ret
mov
jo
stos
jb
sbb
fldcw
cli
popf
or
jp
push
call
rcl
inc
outs
ret
retf
or
jg
jg
mov
and
ficom
pop
and
and
dec
inc
push
adc
iret
jo
adc
or
pop
js
out
mov
mov
and
ret
cli
aas
lods
mov
or
cmp
mov
in
lds
aas
jb
mov
add
dec
loope
and
xor
pusha
mov
cld
iret
loopne
jmp
fisttp
sub
push
xchg
retf
mov
test
mov
into
and
xchg
pop
and
idiv
cmp
fwait
inc
push
push
inc
jmp
push
lock
push
add
push
or
arpl
pop
mov
pushf
jne
test
(bad)
mov
jmp
cwde
outs
es
jno
jae
add
fcomp
mov
dec
hlt
ret
adc
daa
enter
mov
int3
push
movs
and
inc
sbb
outs
repz
xchg
popf
mov
cs
xchg
add
fist
push
cmp
(bad)
xchg
pushf
call
cmp
mov
out
retf
fnstcw
out
mov
xchg
inc
add
adc
cmc
mov
sub
sub
xor
xchg
data16
fwait
pop
stos
int3
cmc
iret
mov
mov
rcl
arpl
and
xor
xchg
mov
xor
shr
rcr
not
push
jo
mov
mov
mov
stos
iret
inc
cwde
dec
pop
push
jo
jb
int3
cmc
mov
dec
in
ja
je
mov
loope
dec
xchg
add
mov
inc
scas
mov
imul
xor
imul
je
mov
loope
cmps
rcr
ss
mov
clc
and
(bad)
xor
jbe
push
outs
xor
fsubr
pop
fs
repz
cmp
push
aad
(bad)
or
jno
movs
and
sbb
cmps
inc
adc
mov
add
jp
push
and
cmc
rcr
push
inc
int3
push
aam
sub
retf
scas
test
xchg
movs
stos
mov
mov
push
(bad)
fwait
aas
cmp
jno
cmp
retf
pop
adc
push
leave
inc
cwde
mov
fcom
cld
stos
inc
dec
outs
test
and
nop
test
mov
mov
push
ds
or
je
inc
bnd
jmp
ja
not
pop
cdq
pop
pop
leave
cmp
jae
clc
cmp
adc
or
aam
out
retf
mov
test
xor
and
sbb
push
sbb
cmc
fwait
push
or
outs
mov
jmp
sub
pop
pusha
xchg
outs
sbb
mov
cwde
cvtpi2ps
or
popw
or
mov
cwde
in
and
push
inc
push
jle
pop
inc
aas
and
jae
hlt
mov
pop
adc
bound
sbb
pop
cdq
xor
push
in
adc
shl
mov
jae
cmp
mov
and
leave
das
dec
mov
jle
shl
adc
scas
ret
push
pop
cs
mov
hlt
jecxz
xchg
scas
and
sbb
push
bound
cwde
mov
cmp
faddp
aam
push
loopne
and
sub
cmp
mov
mov
ret
mov
and
cmps
aam
dec
jns
movs
mov
pop
xchg
push
pop
scas
fadd
or
mov
or
jo
bound
cs
inc
dec
cwde
sbb
and
add
cwde
int
mov
mov
push
jb
jp
adc
add
jmp
outs
pushf
aas
mov
fdivr
fldcw
push
push
sub
out
sbb
cmps
fistp
adc
jmp
dec
imul
push
push
aam
mov
sbb
jmp
sbb
pushf
cmc
add
stos
dec
pop
mov
loope
data16
or
adc
pushf
stos
adc
or
pop
xchg
add
push
xlat
push
out
das
das
ds
push
push
addr16
adc
sti
fstp
sbb
cmovle
repz
sbb
aas
jg
adc
push
jmp
pop
mov
mov
call
add
mov
or
mov
lea
sub
push
mov
mov
mov
bound
ret
pop
pop
shl
fwait
push
das
cwde
iret
pop
pop
pusha
shr
outs
shl
pop
jecxz
loope
xchg
sbb
stc
sahf
fimul
sbb
cmp
imul
fwait
repz
and
dec
mov
jp
sahf
mov
mov
jmp
ror
in
lea
shr
adc
ret
daa
jns
fld
and
add
inc
sahf
xor
jnp
aas
xor
test
inc
xchg
stos
or
pop
sbb
pop
push
movs
stc
jns
adc
repz
add
retf
push
test
jmp
mov
jecxz
mov
js
mov
dec
dec
pushf
push
fdiv
enter
clc
mov
fldenv
mov
int3
push
inc
jne
enter
mul
inc
cld
lahf
rcl
pop
cmp
jbe
scas
sbb
clc
fadd
test
push
inc
dec
stos
mov
add
xor
inc
pushf
sahf
pop
fs
mov
sub
add
dec
shl
call
bound
sbb
mov
cmps
cmp
call
xchg
xchg
gs
and
sbb
pop
jns
out
cmp
test
inc
mov
shl
xor
idiv
out
icebp
in
(bad)
and
lods
loop
mov
jmp
ins
sub
pop
es
adc
mov
je
sti
add
in
mov
jp
jp
shl
(bad)
pop
psubw
fwait
loope
cdq
pushaw
fidiv
fdiv
or
or
push
push
clc
sub
std
ret
mov
stos
adc
sub
fstp
xor
sbb
sbb
pop
jb
and
push
add
mov
fs
jne
mov
jno
popf
dec
jb
jbe
push
jno
jb
mov
aas
pop
jecxz
sub
push
aas
sbb
push
sub
mov
inc
pop
fild
mov
inc
cmp
xor
sub
mov
or
call
cmp
xchg
js
out
mov
dec
jb
dec
jnp
aad
cmp
pop
nop
mov
in
mov
lahf
aad
jb
adc
inc
(bad)
call
cmp
ds
jno
in
and
imul
xchg
sub
inc
pop
mul
stc
push
data16
sub
outs
(bad)
mov
pushf
jne
xchg
xor
or
inc
add
test
add
nop
cmps
xchg
mov
sub
xor
ds
ret
cs
jge
inc
retf
jno
call
scas
pop
mov
test
retf
jmp
stos
inc
jmp
ror
push
xor
(bad)
and
loopne
fstp
test
cmp
movs
cmp
mov
mov
(bad)
fnstcw
and
adc
out
inc
mov
cmp
les
test
repnz
jle
inc
arpl
add
ja
into
nop
cwde
dec
js
popa
or
mul
or
push
jge
and
lock
jns
daa
cmp
or
inc
push
loopne
retf
sti
rcr
inc
iret
inc
call
cdq
cdq
inc
call
test
(bad)
jo
fwait
add
in
pop
fstp
nop
mov
inc
and
sahf
loopne
loope
adc
ror
xchg
jmp
inc
aas
dec
xor
push
mov
popa
or
inc
add
aaa
jno
out
cmp
sbb
stc
loope
xor
in
aam
adc
fidivr
dec
stc
(bad)
movs
imul
jo
pop
fdivr
(bad)
test
js
(bad)
shr
movs
inc
dec
jp
(bad)
adc
jae
push
daa
dec
in
push
push
inc
(bad)
stc
adc
sbb
sahf
ss
sar
sbb
sub
mov
ret
imul
sbb
push
cmp
add
jl
div
inc
pusha
ins
(bad)
das
outs
adc
cmc
jo
mov
jecxz
or
mov
xchg
pop
bound
fucomp
pop
ret
jecxz
xchg
push
in
pop
sub
ins
(bad)
jmp
cmp
pop
add
sub
stos
lods
aad
jp
aam
mov
push
shl
daa
lods
dec
daa
arpl
add
xor
test
and
lea
fs
and
or
out
test
mov
std
dec
out
pop
inc
cmovge
shr
or
mov
ror
mov
inc
mov
retf
push
fst
dec
fcmovnu
push
sub
adc
mov
mov
std
mov
movs
dec
and
(bad)
arpl
pop
adc
sub
push
call
push
aam
hlt
jns
(bad)
xor
(bad)
fsub
mov
push
outs
mov
repz
in
xchg
ins
mov
mov
xor
sub
arpl
xchg
pop
or
mov
fs
sub
sub
inc
jb
jns
sub
push
add
xchg
cmp
and
dec
fcomip
ret
cmps
xchg
lock
mov
outs
jne
adc
mov
jp
lods
popf
push
xchg
cmps
scas
sub
jbe
ins
cli
inc
or
pop
mov
sbb
and
add
sahf
fisubr
test
fld
pop
iret
dec
adc
sub
xlat
dec
xor
push
std
lods
xchg
ss
adc
mov
push
cmp
ror
in
outs
iret
sahf
mov
sar
xchg
jne
fmulp
cmp
cdq
ss
xor
shr
retf
mov
mov
sbb
inc
cld
mov
fcmove
jl
loop
mov
mov
mov
xchg
in
or
push
pop
mov
std
sub
add
xlat
popa
hlt
cmp
js
test
and
push
fistp
jmp
fs
repz
pop
les
mov
xor
cdq
inc
inc
retf
jp
jecxz
push
hlt
jmp
mov
dec
cmp
sub
daa
jns
into
out
jae
imul
cmp
pusha
gs
sub
cmp
in
mov
sub
or
fadd
fwait
jns
test
xor
jno
adc
jbe
dec
into
inc
cld
jge
aas
loope
fdivp
and
in
cmp
sbb
popf
jnp
adc
test
sub
add
jge
rcl
push
sub
(bad)
cmps
cmps
dec
add
pop
imul
hlt
scas
(bad)
pop
ins
(bad)
ds
jecxz
fnstsw
test
pop
test
sahf
or
repz
fadd
and
sbb
push
mov
in
xchg
(bad)
fcomp
je
cld
lods
out
lods
adc
mov
push
out
iret
cmps
jns
mov
daa
xchg
mov
mov
and
rep
lahf
jl
push
in
out
push
(bad)
mov
cli
jae
rcr
in
lahf
push
xor
int
xor
push
xchg
mov
mov
out
ret
aam
xchg
inc
xchg
movs
pushf
repz
neg
test
cmp
les
pusha
stos
pop
ret
pop
sbb
adc
adc
cmp
retf
jbe
loop
or
out
idiv
mov
mov
sub
or
sbb
mov
push
mov
idiv
lds
pop
outs
sub
shl
mov
and
sbb
push
cmp
jp
add
aad
pop
mov
pop
and
adc
jg
and
xor
xlat
call
push
mov
(bad)
mov
add
xor
mov
stos
cmp
imul
and
jnp
dec
add
jl
(bad)
retf
leave
xchg
mov
test
scas
test
inc
imul
inc
mov
sar
xchg
test
lahf
mov
pop
mov
xor
loopne
xchg
sbb
mov
shl
mov
daa
inc
sub
(bad)
jge
loopne
jne
rcr
inc
adc
xor
lahf
nop
mov
pop
add
ror
repz
cmc
les
lock
cli
leave
je
mov
int3
sbb
xchg
out
or
xor
in
mov
and
xchg
inc
call
mov
push
jmp
sbb
pop
cli
xchg
jmp
sub
in
xchg
inc
ins
pop
inc
mov
dec
call
sub
in
add
sbb
xchg
sub
(bad)
xor
adc
inc
ins
adc
cmp
in
sub
fnstsw
pop
loop
jo
(bad)
aam
enter
(bad)
cld
pusha
fldenv
sahf
and
mov
cmp
shl
icebp
aaa
dec
pop
das
je
dec
cwde
dec
sbb
mov
xchg
jp
std
std
mov
mov
bts
in
lahf
adc
inc
mov
xchg
cmp
popa
xor
push
(bad)
jge
std
xor
in
cli
sbb
or
push
test
sahf
mov
jecxz
repnz
sub
pop
jo
pop
les
dec
data16
repnz
and
mov
sbb
cld
lea
clc
dec
mov
in
mov
fidivr
jecxz
xor
fs
jle
lds
add
dec
test
nop
mov
arpl
repnz
or
dec
xchg
add
movs
inc
push
push
jbe
mov
and
arpl
add
lods
adc
arpl
cli
ret
mov
(bad)
mov
mov
or
fisttp
call
add
push
cli
inc
adc
les
jmp
das
cmp
add
and
fwait
inc
test
sub
or
nop
bound
es
stos
sti
mov
stos
xchg
ret
mov
repz
icebp
jge
gs
out
popa
sub
mov
or
pop
push
dec
or
add
pop
leave
mov
or
pop
cmp
outs
in
sbb
mov
mov
sbb
lock
push
je
in
push
(bad)
xchg
pop
mov
xchg
xor
movs
sub
xchg
pusha
sbb
dec
hlt
leave
iret
retf
push
jmp
sar
out
jne
mov
sbb
out
call
out
mov
jg
mov
outs
mov
xor
sub
stos
(bad)
xchg
adc
lea
out
and
mov
lahf
fucom
ins
call
or
jbe
je
adc
xor
xchg
pop
loopne
cmp
adc
push
pushf
icebp
mov
sub
mov
mov
movs
ror
pop
dec
push
dec
mov
std
cdq
frstor
nop
outs
call
neg
inc
fist
inc
lahf
lods
xchg
or
jo
dec
aaa
es
das
pop
inc
ins
test
rol
repnz
rdtsc
fidivr
out
mov
xchg
loop
(bad)
jb
cmp
adc
or
xor
(bad)
cdq
sbb
push
mov
in
ret
sub
call
adc
xchg
out
in
sti
adc
enter
push
sete
dec
inc
adc
mov
mov
(bad)
jmp
(bad)
xor
mov
sbb
inc
fsub
js
adc
popf
push
cld
(bad)
fcomip
dec
push
retf
retf
loopne
or
stos
pop
into
mov
cmp
fs
sub
dec
dec
cmc
xchg
popf
and
pusha
jge
icebp
mov
adc
sbb
mov
jno
ror
adc
xchg
out
add
arpl
movs
xchg
movs
mov
rol
sbb
dec
loope
or
out
xchg
stos
int3
mov
scas
bound
sub
retf
jne
sbb
sbb
(bad)
scas
push
mov
ja
push
pop
sbb
mov
retf
xchg
mov
sbb
data16
push
mov
fwait
pop
mov
adc
fisttp
js
cmp
or
scas
mov
xchg
stos
fadd
retf
pushf
movs
or
loop
pop
mov
push
mov
(bad)
mov
cli
push
pop
mov
cld
add
or
into
mov
push
rol
pop
xor
pop
in
ret
cmp
jns
cmp
out
pop
out
sti
sahf
ja
arpl
cmps
aad
and
inc
pop
int3
cmp
imul
in
std
jmp
sbb
iret
pop
mov
into
outs
fidiv
(bad)
or
icebp
mov
xchg
cmp
in
js
nop
mov
popf
sbb
sub
div
push
cwde
into
jmp
jno
stos
(bad)
xlat
or
jecxz
ret
jecxz
loop
push
sub
mov
xor
and
xchg
jecxz
and
retf
or
clc
jmp
ss
and
jmp
out
movlps
inc
int3
test
xchg
loope
in
ror
cmc
into
mov
pop
push
lahf
fild
bound
data16
fsubr
and
rcr
cld
imul
sub
jnp
dec
cwde
ins
jne
test
dec
jnp
movs
(bad)
xchg
int3
je
gs
xor
sub
pop
popf
fstp
mov
ret
fidivr
shl
shr
mov
pop
into
mov
mov
sbb
push
arpl
repnz
pop
(bad)
stc
xor
fist
(bad)
jg
add
shr
pop
cmp
hlt
call
out
sbb
push
test
push
aad
inc
lock
(bad)
into
mov
inc
xchg
cwde
fdiv
cmc
(bad)
cmp
inc
(bad)
sbb
std
out
sub
int
jno
mov
retf
int3
inc
mov
movs
fnstcw
aam
enter
sub
mov
out
in
fs
lahf
out
xor
mov
aam
push
out
bound
and
in
and
(bad)
push
iret
sub
pop
(bad)
pop
cmp
lds
scas
mov
mov
or
adc
dec
inc
push
and
jmp
cmp
xlat
jecxz
jmp
hlt
dec
mov
dec
ss
mov
pop
cli
pop
xor
sbb
push
pop
ins
xor
fst
out
test
sbb
push
xor
or
pop
cmp
sar
push
jp
sub
icebp
stos
cmp
ret
in
div
inc
cmp
mov
sub
repz
into
test
sub
std
int3
rcl
lahf
dec
push
xchg
mov
and
into
xchg
pop
jno
stos
mov
test
mov
addr16
test
cmovb
or
(bad)
mov
or
jp
pop
ret
retf
es
or
dec
cmp
cmp
mov
test
fwait
inc
lds
xchg
inc
or
out
lahf
(bad)
pop
jbe
inc
add
mov
or
pop
cmp
jmp
cmp
pop
out
fnstcw
add
adc
cmps
dec
mov
loop
mov
mov
mov
xor
or
mov
mov
cmp
sti
rcl
ret
lods
cli
jl
cdq
pusha
pop
sbb
cmp
inc
pop
aas
cmp
push
push
call
stos
aam
enter
jl
pop
or
cld
repz
xor
(bad)
test
mov
mov
fidiv
push
push
push
lock
pop
inc
lea
(bad)
and
pop
imul
dec
mov
cmps
jae
bound
mov
and
inc
jmp
arpl
mov
movlps
push
mov
aaa
cmp
mov
dec
arpl
iret
js
push
add
cwde
push
adc
icebp
sahf
mov
xchg
imul
push
jo
xchg
out
ret
mov
mov
daa
cwde
test
ins
inc
sub
add
dec
test
fsub
daa
(bad)
jp
mov
call
inc
or
test
mov
into
and
lock
das
repz
loopne
xchg
jae
mov
(bad)
sahf
mov
mov
jle
ins
push
add
mov
imul
jg
inc
add
jns
mov
(bad)
xchg
sti
lea
push
call
movs
pop
jns
xchg
or
cwde
(bad)
pop
or
pop
cdq
mov
jmp
mov
test
ins
xor
mov
push
sbb
aas
icebp
add
fnstenv
fist
pop
add
pop
cmps
out
sbb
or
popf
xchg
jo
fs
adc
jecxz
mov
mov
cmps
xor
inc
mov
dec
sbb
popa
pop
aas
inc
and
mov
stos
js
lds
jns
retf
inc
call
test
out
adc
and
or
in
es
pop
lds
inc
push
ins
push
jae
adc
scas
rcl
(bad)
sub
dec
lea
daa
mov
stos
int3
fadd
cmp
shr
fst
fdivr
popf
pop
dec
cmc
or
lods
jge
sbb
bound
xor
jae
jmp
aaa
and
js
dec
jns
pop
loop
xor
xchg
out
and
mov
and
xchg
mov
dec
mov
(bad)
retf
pop
and
xor
push
xor
es
xor
mov
fcomip
push
and
clc
dec
cdq
sub
into
dec
xchg
into
in
enter
daa
ret
(bad)
mov
(bad)
retf
xchg
or
add
and
aad
mov
mov
ins
mov
mov
mov
push
xchg
(bad)
mov
or
inc
push
cmp
mov
ret
ret
cmp
fist
jl
add
push
xor
push
ins
sbb
push
push
icebp
xor
or
popf
jle
clc
lahf
popf
and
popa
lds
sbb
adc
dec
pop
or
sbb
adc
pop
xor
aam
clc
nop
in
dec
xor
xchg
(bad)
clc
ret
and
fistp
mov
loope
pop
xor
arpl
fsqrt
dec
mov
sub
cli
loope
mov
repz
adc
test
xchg
aad
(bad)
mov
jg
mov
fidivr
fnstsw
mov
or
cmps
push
mov
loope
scas
adc
adc
xor
popa
int3
sbb
call
loopne
mov
mov
mov
into
adc
popf
mov
xchg
or
or
or
ror
push
mov
cmp
stos
pop
xor
jp
inc
push
sub
jmp
or
add
scas
cs
mov
fist
sbb
push
shl
call
sbb
jecxz
into
iret
or
inc
out
clc
xor
(bad)
hlt
loope
(bad)
ds
mov
dec
mov
pusha
dec
addr16
xor
cmps
cmps
xchg
and
dec
scas
add
stos
das
jmp
push
lock
mov
mov
or
dec
sahf
iret
test
movs
sbb
cmp
in
ins
mov
jg
fidivr
cli
jno
mov
push
cmp
pop
add
ffree
jmp
and
das
fldcw
adc
xor
(bad)
in
(bad)
in
call
cmps
push
push
sub
pop
in
jge
popf
sub
pop
enter
lea
push
sbb
leave
sti
dec
inc
push
retf
mov
adc
pop
push
jno
ficomp
loope
sub
sub
iret
mov
mov
pop
cmp
outs
retf
mov
out
cmp
lea
mov
sbb
push
pop
mov
pop
push
pop
ins
fwait
mov
cmp
je
sub
xchg
aam
cdq
sub
das
ds
and
jmp
xor
dec
xor
popa
sbb
ins
das
daa
icebp
outs
test
sub
cmp
dec
sar
loop
or
xor
mov
jmp
mul
gs
repz
(bad)
arpl
test
(bad)
(bad)
ss
push
ret
js
and
jmp
mov
xlat
lds
adc
inc
xchg
data16
mov
mov
adc
xchg
dec
push
sub
push
pusha
mov
pushf
push
int3
sub
data16
push
fdiv
mov
std
scas
xor
adc
or
fxtract
sbb
mov
call
dec
(bad)
mov
fst
mov
repnz
mov
fcmovnb
icebp
mov
mov
fnclex
hlt
ins
xor
and
repz
das
push
ins
cmp
jmp
mov
stos
cmc
pop
sar
add
gs
iret
cdq
rep
out
imul
ja
leave
mov
test
jmp
(bad)
xor
push
sti
dec
lock
std
out
in
cmp
sub
mov
(bad)
cmp
mov
lods
cli
jle
xchg
out
sub
push
(bad)
addr16
cmps
push
into
loop
inc
pop
call
push
test
out
popf
sbb
out
sbb
test
scas
fiadd
leave
xor
ror
jp
or
sbb
fs
mov
push
retf
aad
xchg
shr
and
ins
pop
push
sub
das
psubw
and
inc
pop
pushf
stos
push
xor
and
fcmovb
mov
shl
pop
mov
outs
mov
aad
movs
fild
test
cs
int3
xchg
outs
adc
retf
adc
jmp
mov
add
mov
cmc
adc
call
nop
or
xor
xchg
add
lods
arpl
and
neg
xor
add
sbb
pop
ret
push
arpl
dec
cmp
and
daa
cmp
mov
adc
and
xor
adc
std
jmp
stos
mov
jne
push
push
dec
lods
mov
push
mov
jb
mov
adc
ins
xor
push
loope
mov
loopne
stos
push
loop
fild
mov
ficomp
dec
mov
pop
xor
ja
sar
xor
leave
addr16
in
pop
mov
sub
sbb
push
xlat
je
or
sbb
ds
into
mov
sbb
inc
imul
enter
xor
xor
adc
lea
test
jbe
aad
test
inc
cld
jge
adc
push
mov
pop
inc
test
iret
ds
test
lods
cwde
adc
mov
fist
fisubr
adc
test
fstp
daa
lea
pop
ins
stc
sub
into
(bad)
jle
xor
mov
xlat
into
lock
into
scas
add
(bad)
cdq
sbb
repz
fwait
xlat
bound
mov
sbb
das
xchg
mov
es
sahf
js
int
or
loop
ret
loope
test
enter
cmp
jmp
loopne
scas
sub
dec
add
jb
jne
mov
push
mov
mov
sbb
sub
rcl
xchg
xchg
test
test
sbb
push
dec
aas
(bad)
jecxz
ss
push
push
scas
sub
outs
and
out
loope
mov
xor
jle
sti
int3
mov
fadd
ret
nop
popaw
addr16
out
mov
sub
push
pop
fild
sub
pop
jmp
clc
in
push
inc
frstor
test
and
pop
mov
addr16
shl
std
adc
lock
mov
shr
pop
mov
adc
aam
cmp
pop
aaa
not
in
(bad)
dec
jecxz
mov
cmp
scas
mov
or
sbb
mov
js
out
add
jecxz
loopne
dec
add
popa
(bad)
xor
jb
or
(bad)
pushf
enter
push
ja
add
outs
and
mov
movs
xchg
or
loop
and
mov
pop
ins
xor
ins
mov
mov
(bad)
push
cwde
das
js
arpl
test
push
xor
mov
jmp
push
stos
jl
fist
push
pop
mov
xor
sub
xchg
jmp
xchg
stos
outs
mov
in
jecxz
add
ret
add
sub
sbb
pop
inc
pop
add
test
mov
sbb
xchg
mov
das
jae
pop
aas
outs
xchg
push
xor
in
retf
mov
loope
mov
push
xor
data16
add
push
sbb
mov
xchg
mov
jmp
pop
lea
jmp
xchg
and
pop
sub
pop
mov
jmp
test
fidiv
add
mov
sub
ja
sub
cmps
and
jg
loope
sub
add
fwait
mov
or
sar
call
fwait
dec
mov
data16
jb
retf
pop
mov
aaa
jne
add
mov
call
mov
leave
and
jbe
test
xchg
sbb
(bad)
or
fwait
cdq
(bad)
dec
adc
cli
stc
jle
mov
outs
sbb
dec
mov
cmp
push
into
cs
sub
mov
int3
inc
es
stos
mul
scas
cwde
fisub
mov
dec
jmp
jg
xor
ror
mov
sti
lods
mov
jg
pop
outs
or
cmps
sbb
push
out
int
lods
pop
outs
adc
xchg
movs
jge
cmps
in
adc
adc
sub
inc
xchg
shl
adc
xchg
(bad)
sub
cli
jl
scas
sti
iret
add
or
dec
retf
int3
aam
push
pushf
lock
and
retf
out
add
cmp
outs
imul
imul
jbe
repnz
ficomp
xchg
in
daa
pop
xchg
es
pop
sti
(bad)
push
pop
(bad)
jg
mov
pop
bound
cmp
gs
mov
ror
xchg
(bad)
jp
push
call
mov
cwde
loope
imul
ins
xchg
xchg
int
jbe
test
stc
test
xchg
les
xchg
sub
jno
and
jo
enter
adc
or
stc
xrelease
loopne
movs
cwde
sub
push
in
idiv
jecxz
mov
ret
or
push
test
pop
sti
(bad)
sahf
sbb
ins
mov
mov
adc
jle
jns
mov
sub
or
jmp
arpl
nop
xor
(bad)
jb
push
pop
xchg
mov
scas
mov
xchg
cmp
add
je
ins
ret
mov
add
pop
dec
sbb
sub
pop
gs
mov
and
test
aad
in
out
shl
mov
bound
test
(bad)
pop
add
not
cmp
and
sti
sbb
shl
sub
fldlg2
cmp
fwait
or
lahf
fstp
xor
inc
ja
pop
into
sub
js
push
mov
gs
bound
mov
loop
or
lock
inc
(bad)
mov
mov
cmp
retf
std
mov
lods
icebp
mov
cmp
mov
sub
inc
sbb
cmps
lods
mov
(bad)
jg
es
jb
sbb
jae
dec
idiv
ins
xlat
sub
jge
popf
jbe
inc
xor
(bad)
sub
dec
pop
push
test
out
fld
outs
inc
or
push
(bad)
xchg
pusha
xchg
and
xor
cmp
sbb
(bad)
dec
mov
outs
jmp
dec
push
jo
xchg
test
int
sbb
js
pop
pop
jnp
xlat
cld
push
add
idiv
jbe
stos
jo
sar
xor
loope
push
jl
cld
mov
jo
fidiv
gs
mov
and
xor
inc
inc
rcr
lods
imul
ret
fs
dec
mov
fs
out
or
(bad)
stc
mov
inc
inc
xlat
inc
fdiv
out
shl
data16
ret
or
(bad)
out
ror
mov
xchg
inc
add
adc
popa
pop
(bad)
pop
xchg
pop
mov
cmp
icebp
(bad)
ss
add
aad
mov
fild
call
mov
std
cmp
out
sbb
pop
jl
les
ins
push
xchg
push
or
pop
adc
pop
int3
dec
cmp
jmp
shl
imul
cs
int
cmp
ret
repnz
push
mov
test
dec
imul
pop
fs
(bad)
sub
mov
nop
adc
fs
int
push
cs
sbb
xchg
pop
xor
mov
out
ins
dec
fistp
inc
rol
leave
in
jl
mul
aaa
push
movs
pushf
iret
push
push
out
xchg
inc
scas
push
or
or
retf
out
push
(bad)
addr16
jbe
pop
dec
xor
push
pushf
(bad)
push
lock
inc
add
xchg
adc
mov
xor
jno
aad
sbb
adc
mov
movs
pop
sbb
push
sub
les
into
gs
(bad)
sub
(bad)
mov
xor
sbb
xor
pop
mov
push
popa
in
xor
push
inc
enter
cmp
cs
out
push
xor
stos
nop
or
adc
sbb
mov
int3
push
mov
cmp
call
int3
gs
pop
cmp
lods
jae
cmc
or
add
mov
popa
mov
cmp
les
add
imul
fwait
and
or
push
jmp
in
ds
sti
jo
adc
lea
adc
adc
xchg
xchg
mov
mov
sahf
fst
fwait
popf
mov
cli
lods
and
jge
and
mov
fidiv
jno
inc
dec
or
fwait
cmp
adc
jbe
adc
fsub
pushf
push
ins
pop
pop
gs
imul
adc
dec
jp
into
xchg
and
push
mov
jle
ins
stos
les
xchg
outs
shl
dec
cmc
mov
neg
popa
hlt
stos
pushf
xor
mov
nop
jo
into
dec
adc
ret
(bad)
pop
adc
mov
and
sbb
push
icebp
mov
ret
jmp
imul
jo
dec
jle
lock
lock
scas
jbe
add
push
ins
jnp
or
mov
pop
inc
adc
call
dec
scas
aaa
lods
xchg
loopne
scas
cs
inc
xchg
xchg
icebp
rol
pop
stos
mov
mov
dec
cs
repz
inc
push
adc
jb
retf
sbb
jg
fbstp
fiadd
jle
xor
xchg
test
jl
fwait
and
mov
sub
or
and
cmp
adc
inc
das
push
cmp
pop
jae
movs
out
ror
xor
and
ja
mov
xchg
xchg
jmp
pop
jne
pop
push
stos
pop
push
jg
inc
pop
sbb
outs
outs
pop
shr
lahf
jae
xchg
add
ficom
sbb
mov
cs
cli
push
sbb
aaa
jmp
stos
into
(bad)
imul
iret
dec
fwait
inc
mov
xor
pop
sub
jo
jecxz
cwde
jmp
rcr
and
ret
dec
jmp
mov
inc
test
mov
ret
mov
dec
jp
lock
xor
lds
jle
sahf
xchg
out
scas
push
sbb
xor
ins
jo
mov
loopne
jne
aaa
dec
sbb
add
mov
not
movs
add
sbb
nop
movs
cmp
xchg
sub
and
mov
int
xor
imul
sub
sub
adc
sbb
xchg
gs
sbb
adc
fwait
sbb
sub
inc
outs
add
sub
(bad)
mov
daa
add
dec
mov
xchg
shl
outs
popf
popf
ss
out
jl
sar
shl
cdq
arpl
out
pop
or
pop
xchg
fcmovbe
dec
push
ret
xor
push
repz
ins
fmulp
ins
xchg
push
pusha
aad
add
out
clc
pop
jl
mov
js
into
pop
rcr
ficomp
add
mov
imul
(bad)
lea
clc
mov
movs
inc
push
(bad)
arpl
dec
mov
fcomp
sbb
dec
fidiv
imul
add
mov
stc
out
out
mov
xchg
movs
ret
fisubr
das
call
(bad)
call
mov
mov
add
out
adc
and
lock
lods
sbb
jge
outs
jnp
loopne
xchg
js
movs
mov
jmp
cmps
sub
loopne
stc
mov
xor
and
push
in
mov
dec
mov
cwde
loop
mov
fdivr
xor
mov
ret
pop
and
cmc
mov
push
aam
(bad)
fld
add
cmps
cmp
jmp
inc
pop
pop
mov
fiadd
inc
xchg
adc
in
dec
addr16
fmul
adc
jge
test
imul
and
mov
xchg
dec
xchg
push
pushf
xchg
jmp
lods
call
cmp
push
fs
mov
ins
repnz
mov
out
xchg
and
aam
test
xor
shr
push
cmp
pop
jno
dec
fbstp
shl
mov
test
push
pop
std
sbb
xchg
mov
sbb
movs
clc
add
mov
pop
inc
jne
repnz
fimul
mov
ins
pop
or
test
xchg
out
jbe
adc
jno
mov
nop
cmp
mov
xchg
aam
fisubr
ja
xchg
cmp
mov
sub
outs
(bad)
retf
bound
sbb
dec
adc
call
push
mov
stc
sbb
jnp
jb
adc
adc
push
jns
clc
rcr
enter
dec
mov
mov
adc
push
push
addr16
test
sbb
jle
test
jo
iret
stc
cli
enter
xchg
cmps
(bad)
test
dec
pop
(bad)
movs
push
xchg
mov
cmp
call
cwde
push
pop
jmp
pusha
rcr
ret
popf
push
cmp
sub
pop
jne
call
xor
inc
and
mov
xchg
adc
push
fsub
mov
out
(bad)
or
add
sbb
fnstsw
and
xor
xor
jmp
push
mov
and
outs
sub
outs
jae
sub
sub
fdiv
sar
dec
push
repz
mov
cmc
shl
mov
and
xchg
stos
push
outs
pusha
mov
lods
cdq
scas
rol
lea
xor
sbb
je
and
(bad)
lock
inc
sbb
or
pop
jo
inc
mov
fstp
sbb
aas
pop
xchg
(bad)
mov
lods
pop
and
repz
mov
mul
sub
push
cmp
mov
xor
hlt
cmps
jecxz
fs
jo
imul
shr
adc
add
sti
or
hlt
jmp
pop
movs
js
mov
aaa
ins
retf
mov
imul
out
out
pop
push
xchg
sub
aas
fild
push
cmc
dec
adc
sbb
jae
push
ja
add
pop
cwde
mov
es
push
and
sub
icebp
loope
xor
fist
fcomi
ret
lods
enter
enter
push
lods
loopne
cwde
fist
test
rcl
fnstenv
std
mov
pop
add
xchg
pop
xchg
bound
and
call
dec
pop
daa
sub
ror
adc
jl
sub
cmps
mov
mov
sti
lock
push
imul
adc
sbb
push
out
pop
mov
inc
dec
add
add
into
jg
pop
pushf
add
imul
out
push
mov
or
mov
gs
aas
es
mov
add
in
repz
std
add
xor
sbb
add
loop
mov
pop
cmp
retf
jle
xchg
pop
sbb
mov
sbb
sti
adc
sbb
and
cdq
test
xchg
ds
jp
leave
cmp
stos
daa
nop
les
push
xlat
out
not
sub
jns
push
lds
cli
inc
and
sbb
in
pop
loope
fst
fnstenv
xchg
cmp
dec
push
(bad)
jle
jg
mov
stc
push
xchg
push
je
imul
retf
and
mov
cmp
rcl
sub
pop
and
enter
jp
icebp
ins
aas
fimul
and
test
mov
rcl
push
clc
ds
ror
call
jecxz
mov
and
cmc
jecxz
adc
test
pop
lods
ja
into
jns
jecxz
inc
dec
das
retf
mov
xor
bound
mov
mov
stc
mov
sub
lock
fimul
mov
push
mov
mov
pop
jg
xchg
outs
fld
dec
fwait
cmp
adc
push
pushf
pop
cmps
push
inc
ret
push
pop
rcl
adc
mov
mov
dec
add
mov
mov
and
xor
push
cli
sbb
outs
call
mov
lahf
mov
lea
(bad)
sub
or
ror
xor
cld
sbb
into
clc
push
xchg
mov
cmps
jmp
popa
in
xchg
lds
mov
pop
pop
jl
test
xchg
stos
add
dec
or
inc
in
sub
adc
fisubr
mov
scas
pushf
sub
lea
mov
ds
jle
sbb
inc
sub
jno
fwait
enter
mov
mov
jb
inc
fimul
rol
mov
stos
fwait
mov
mov
and
pop
test
dec
fdiv
xor
dec
mov
es
pop
add
inc
test
fnstenv
inc
out
xchg
dec
popa
cmp
rcr
loop
outs
sti
cmp
in
xchg
cmps
jne
(bad)
mov
aam
dec
into
mov
lds
mov
test
int3
and
jne
das
pop
xor
inc
imul
cdq
add
jmp
sbb
cmp
test
push
cli
stos
sub
adc
(bad)
(bad)
cmp
pop
xchg
ficom
les
mov
daa
jg
popf
sub
sub
in
push
sti
retf
inc
loop
lea
loopne
xchg
fild
xchg
jp
mov
jmp
mov
inc
mov
out
outs
push
dec
mov
jle
adc
lods
dec
sub
push
xchg
int3
fsub
or
cmp
in
clc
jl
jmp
pop
js
in
add
mov
xchg
adc
out
and
imul
jo
les
inc
sbb
mov
sar
xor
div
cmp
pushf
ds
test
aam
xor
or
fcos
fistp
into
and
dec
inc
(bad)
ds
(bad)
push
out
cld
push
or
add
and
xor
pusha
pop
jo
lock
sahf
add
into
xlat
test
daa
inc
sbb
jno
xor
dec
(bad)
arpl
faddp
dec
popf
dec
in
dec
call
cwde
daa
cdq
addr16
outs
add
lea
and
clc
push
dec
shl
push
adc
(bad)
mov
mov
jmp
retf
xor
fwait
stc
xchg
(bad)
jge
ja
dec
jbe
std
push
mov
cmp
lahf
jbe
adc
push
and
xor
push
add
pop
cmp
inc
icebp
outs
push
fmulp
ret
movs
cmc
imul
arpl
mov
or
loope
fstp
pop
mul
xor
cmp
xlat
lahf
adc
es
aaa
in
and
loopne
test
sub
adc
lods
icebp
leave
cwde
xchg
xor
mov
inc
ins
push
mov
and
movs
out
mov
cmp
cwde
dec
jne
cdq
cvtdq2ps
mov
add
sbb
xor
mov
mov
popf
dec
ins
and
or
adc
mov
jmp
push
ret
pop
popf
push
fwait
push
sub
add
lock
add
(bad)
std
xor
jns
jge
test
(bad)
lods
cmp
rol
sar
imul
(bad)
clc
jl
addr16
or
test
or
stos
xor
(bad)
mov
jno
xchg
test
popa
mov
push
xchg
in
outs
xchg
adc
add
xor
pop
xchg
arpl
inc
mov
jae
shl
sbb
dec
adc
and
dec
imul
ret
pop
fcomp
mov
mov
(bad)
or
pop
sahf
arpl
loope
cmc
push
daa
movs
fwait
push
sbb
mov
xor
mov
mov
and
pop
pop
call
iret
hlt
pop
sub
and
stos
adc
lods
mov
lahf
out
mov
or
mov
pop
std
ficom
sub
mov
mov
push
jmp
or
hlt
mov
xchg
js
fistp
or
mov
xchg
sbb
clc
xor
int3
cmc
mov
adc
push
aam
xchg
mov
sub
or
xchg
sbb
jl
inc
pop
mov
mov
(bad)
jae
dec
mov
jmp
jne
or
popf
fpatan
(bad)
lea
out
out
push
pop
inc
push
pop
or
int3
jo
or
ins
aaa
and
bound
and
add
bound
and
jecxz
ss
or
je
or
jge
and
pop
mov
shl
test
or
outs
das
xor
mov
jbe
cmps
pushf
jl
(bad)
jge
jp
es
xor
cmc
jae
sahf
and
or
jo
xor
adc
outs
fwait
sub
sti
inc
push
stc
sbb
xor
jo
push
and
sbb
inc
jecxz
dec
mov
test
or
mov
add
and
xchg
ds
mov
cmps
pop
adc
jbe
rcr
push
push
imul
ds
idiv
add
cmp
js
bound
call
inc
fadd
pop
sbb
fst
sbb
and
aad
push
enter
out
js
jno
outs
fs
popa
faddp
xor
and
std
out
push
les
retf
sub
xor
cmps
sbb
dec
jmp
lea
fistp
add
mov
push
into
jnp
inc
shl
lahf
adc
mov
popa
retf
jl
lock
jo
lds
dec
inc
ficomp
adc
js
fild
mov
xchg
mov
das
push
test
mov
pop
fcom
imul
loopne
push
pop
rcr
in
paddsb
dec
and
rcl
or
push
mov
loop
cmp
shl
xchg
imul
cmps
pop
pushf
push
sbb
mov
push
pushf
jne
pop
inc
mov
int3
adc
in
push
call
(bad)
shr
mul
pop
cld
lods
es
pop
inc
icebp
dec
mov
xor
pop
fs
xor
(bad)
add
pop
push
ja
mov
stos
push
pop
pop
iret
popa
mov
or
xchg
pushf
pop
add
(bad)
cmps
std
dec
pop
mov
cmp
aaa
mov
push
addr16
imul
add
scas
jae
cdq
xor
dec
pop
fxch
push
jb
outs
call
or
and
push
jmp
fld
push
inc
mov
add
sub
push
out
js
pop
scas
sub
mov
cmp
sbb
popf
inc
sahf
mov
neg
xor
in
dec
and
scas
hlt
jecxz
jl
adc
pusha
sbb
push
movs
stc
jae
das
repz
push
rcl
push
adc
shl
lods
mov
div
movs
cmp
sbb
sbb
leave
div
sub
xor
pop
push
fnstcw
fs
mov
leave
push
jb
sub
push
lds
sbb
adc
push
push
jo
sbb
mov
pop
push
sub
xchg
jns
out
xlat
inc
dec
sbb
add
hlt
jmp
jnp
lock
call
xchg
outs
jbe
les
aam
sub
jo
in
adc
push
pmullw
push
jae
xchg
or
rcl
in
test
fcomp
ds
mov
je
adc
cs
aaa
jle
bound
and
out
jg
push
(bad)
push
int
fchs
stos
shl
push
jo
push
int
jmp
jo
nop
and
movs
ins
call
loop
(bad)
xchg
xor
les
add
mov
popa
fsubr
test
mov
add
xchg
lods
cmps
outs
add
add
push
add
data16
stc
imul
push
neg
loop
cmps
push
mul
call
(bad)
jg
push
lock
xchg
imul
mov
data16
cmp
mov
test
stos
xor
(bad)
dec
in
aam
mov
xchg
push
cli
and
or
xlat
aad
cmps
sub
cli
push
test
pop
dec
test
lods
mov
in
jle
fimul
(bad)
adc
loopne
call
mov
or
daa
mov
cmc
cmp
xchg
movs
cmp
mov
test
adc
cmp
jns
rcr
in
popf
arpl
test
aad
sub
jae
call
push
sahf
push
add
sub
lock
mov
aad
aas
sahf
sub
cld
mov
sti
mov
ja
mov
into
lahf
pop
mov
ret
or
pop
adc
aad
xlat
aam
into
lock
cs
mov
shr
pop
and
cmps
sbb
fst
cs
mov
pop
adc
retf
test
ins
dec
and
mov
aas
into
inc
pop
xor
push
repnz
(bad)
imul
es
adc
outs
outs
sbb
popf
fidiv
cmp
mov
push
fdiv
mov
cmp
(bad)
pop
jnp
sub
fnsave
and
imul
cmp
pop
inc
movs
xchg
push
mov
out
xor
cmp
bound
cmps
jge
mov
mov
sar
pop
std
mov
or
ds
jno
mov
in
jp
daa
xor
mov
sub
xchg
dec
push
cmp
adc
sub
jmp
out
pop
add
dec
or
movs
dec
ins
jl
nop
inc
push
mov
mov
xchg
pop
les
or
push
jge
mov
dec
movs
add
ja
loope
je
jmp
or
xchg
clc
jp
sar
out
sbb
push
jae
and
cmp
jp
cs
sub
push
ficom
stc
sbb
xstore-rng
cmps
test
(bad)
int
inc
jecxz
mov
pop
jl
push
leave
rcr
lods
pop
mov
lea
clc
push
test
js
inc
xor
jbe
in
or
imul
lock
mov
push
or
addr16
out
popa
jne
pop
jle
in
loope
daa
pop
mov
xor
fild
mov
es
cld
loopne
std
pop
pop
inc
std
jb
adc
jns
dec
sahf
mov
jno
sub
mov
iret
jmp
psubsw
pop
mov
dec
int
jns
cmp
xor
arpl
push
pop
in
inc
(bad)
cmp
pop
push
add
xor
lock
hlt
mov
dec
pop
sub
dec
(bad)
cmc
jbe
jne
adc
aas
fld
rol
xchg
into
adc
and
aaa
mov
mov
and
das
cmp
pushf
xor
int3
aaa
dec
xor
jae
and
in
pop
fstp
ds
aad
scas
shl
inc
push
jle
clc
sti
jl
das
cmp
jle
out
jmp
sar
jp
std
into
mov
test
int
jb
ret
sbb
ret
das
(bad)
and
pop
mov
ret
(bad)
nop
cmp
(bad)
mov
mov
ja
pop
jo
test
cli
pop
loope
test
lea
test
jg
mov
ret
sbb
jmp
push
pop
mov
in
and
lea
mov
xchg
mov
inc
inc
mov
jae
loope
dec
hlt
inc
add
adc
(bad)
aas
in
push
add
xor
push
ror
push
adc
std
std
push
movs
out
sbb
adc
test
aas
sub
jo
mov
in
scas
jo
icebp
inc
jbe
(bad)
jle
cmp
call
test
fcmove
mov
retf
cmp
jmp
lea
mov
pop
imul
xchg
mov
adc
lods
ds
hlt
dec
(bad)
xchg
inc
push
icebp
dec
ja
push
mov
fs
sbb
(bad)
aas
jns
mov
xchg
adc
jl
out
stc
hlt
cld
clc
mov
inc
sub
dec
test
stc
hlt
movs
(bad)
stos
sbb
icebp
loopne
jb
mov
pusha
es
mov
dec
out
leave
push
stc
scas
fst
inc
test
rol
mov
dec
sbb
adc
pop
add
pop
push
neg
add
pop
(bad)
les
dec
push
add
push
stos
push
repnz
mov
jmp
aad
pusha
cmp
mul
or
mov
jno
nop
test
xchg
jo
(bad)
mov
imul
retf
cs
push
lahf
mov
test
mov
inc
lds
ins
or
mov
pop
daa
fist
jg
mov
sar
inc
pop
data16
cmp
call
mov
retf
lods
pop
xchg
push
loopne
mov
movs
xchg
lods
into
not
dec
dec
in
and
test
mov
in
add
pop
test
fcom
(bad)
das
shl
xor
div
jb
in
adc
mov
stos
dec
ds
std
mov
nop
jp
pop
inc
cs
push
xchg
xchg
dec
lds
mov
jecxz
add
ret
sbb
jb
add
add
add
jmp
in
test
cdq
pushf
addr16
mov
mov
or
(bad)
cmp
mov
and
ret
call
mov
rol
mov
xor
sbb
adc
mov
xchg
shl
lock
pusha
mov
stos
retf
test
push
(bad)
jmp
ja
mov
fsub
sbb
mov
inc
ret
jo
les
lock
cmp
movs
mov
lds
test
sub
pop
rcpps
sbb
outs
inc
out
mov
dec
sub
cmp
daa
sbb
and
in
das
(bad)
jo
aas
in
push
jns
inc
xlat
add
out
push
shl
mov
scas
or
ret
inc
cmp
push
test
sub
aaa
or
cli
jo
and
and
xor
pop
call
mov
push
paddsb
enter
iret
push
inc
jae
xchg
jmp
sub
les
arpl
push
outs
ins
inc
mov
loope
popf
adc
push
sub
in
test
mov
in
xchg
and
(bad)
inc
cmps
add
cmps
fst
bound
retf
xor
xchg
clc
inc
js
and
cmc
pmulhw
mov
pop
mov
inc
inc
cli
test
adc
nop
or
adc
ret
mov
sar
cmp
ficom
push
pusha
pusha
(bad)
imul
out
mov
push
fs
gs
mov
xchg
dec
mov
mov
cmc
icebp
add
ja
retf
xor
mov
jecxz
fnstcw
ficom
inc
out
xchg
cmc
arpl
push
fstp
and
aam
outs
rcr
(bad)
jmp
lea
and
jmp
jbe
add
fld
xchg
adc
mov
jmp
push
and
xchg
sahf
xor
jmp
fwait
(bad)
(bad)
cwde
push
sub
fs
(bad)
ins
movs
ret
lock
push
aad
rcl
pop
sub
ficomp
ins
stos
test
and
mov
mov
aam
dec
ins
das
rol
dec
ins
xchg
imul
mov
loope
dec
push
dec
rcr
xchg
add
add
ss
jmp
leave
(bad)
cld
das
and
pop
ret
rcl
ret
clc
adc
push
sar
and
pop
div
xchg
xor
movs
mov
mov
js
adc
jg
ins
inc
cmp
pop
cwde
xchg
dec
popa
mov
adc
inc
(bad)
stos
sar
ret
dec
mov
mov
or
jae
xor
sub
leave
pop
setg
inc
cmp
in
into
out
retf
std
cmp
jnp
cmovnp
fcmovb
mov
xchg
adc
(bad)
outs
and
or
or
cld
cli
or
or
aaa
jbe
and
fild
pop
xor
leave
jno
xchg
push
scas
pop
je
jg
jmp
sub
inc
xchg
shl
push
xchg
mov
push
push
push
(bad)
xchg
std
jge
aam
cmp
mov
mov
jbe
push
fwait
ror
xchg
and
fwait
call
jno
sbb
push
not
cmps
sub
(bad)
sub
xchg
xchg
xor
gs
jbe
out
addr16
push
or
fbld
sti
out
inc
pop
jmp
mov
inc
pop
mov
icebp
dec
mov
mov
dec
push
(bad)
movs
cld
scas
movs
sub
push
add
sub
outs
scas
cmp
fist
mov
(bad)
lock
out
stos
test
out
mov
mov
and
jg
or
mov
les
ja
mov
lea
dec
mov
ja
mov
xchg
cld
jne
sbb
adc
xor
sub
pop
sub
cmc
js
loop
stos
out
xchg
pop
out
out
xchg
sahf
jae
jo
mov
sub
scas
xchg
in
push
xlat
out
mov
jae
or
leave
xor
xlat
adc
mov
jns
pushf
add
cwde
or
imul
sahf
hlt
rol
mov
shl
ja
push
fist
fs
sti
jg
push
pop
inc
and
push
repz
bound
daa
inc
stc
clc
cmp
daa
shr
cmp
inc
push
add
test
cmps
fsubr
fisttp
jnp
push
outs
dec
lahf
push
mov
mov
push
xchg
test
jb
arpl
inc
jbe
mov
enter
mov
aaa
xor
add
int
dec
lock
xchg
jp
mov
mov
les
push
dec
jmp
inc
sbb
loop
sub
scas
dec
scas
mov
pop
pop
pop
(bad)
aaa
imul
push
push
movs
hlt
sub
ins
js
gs
fsub
cmp
mov
sbb
and
add
sub
add
cmc
pop
inc
adc
pusha
in
add
xchg
xchg
or
sub
sti
xchg
dec
mov
in
and
xor
push
scas
jo
jl
push
or
or
movs
cmp
pop
das
or
or
dec
pop
(bad)
repnz
hlt
xchg
add
fs
retf
mov
fisttp
jnp
mov
mov
dec
stos
fmul
std
adc
ds
add
mov
add
sbb
js
test
pop
jp
cmp
ds
aas
and
mov
fadd
dec
mov
mov
mov
mov
jmp
jmp
sahf
mov
or
jnp
in
outs
mov
js
cdq
pop
cmp
adc
ja
inc
lds
(bad)
lods
ins
cmp
mov
movs
div
repz
or
aad
lods
xor
jne
mov
jle
sub
dec
xor
retf
dec
sahf
cmps
out
inc
popa
mov
mov
cld
gs
jo
cmps
aaa
cmps
xor
cmc
pop
not
adc
(bad)
aas
cmp
pop
adc
nop
dec
into
aam
pop
mov
std
adc
(bad)
or
and
pop
and
xchg
inc
xor
outs
sub
inc
(bad)
xchg
fucomp
cwde
mov
cmp
out
xor
xor
imul
dec
xchg
jnp
retf
loopne
fs
test
add
ret
dec
xchg
mov
jmp
idiv
test
shl
push
sub
dec
ins
stos
sbb
xchg
jg
clc
mov
and
push
pop
call
cmc
cmp
mov
push
or
pop
sub
ss
ins
shl
mov
push
out
push
pop
jl
je
loopne
data16
cli
sbb
cmp
xchg
xor
cmps
adc
add
adc
popw
mov
xchg
jp
dec
call
popa
xor
cmp
mov
cmp
push
jnp
or
jbe
loope
jge
mov
dec
adc
(bad)
jnp
fidivr
inc
jecxz
ins
out
jl
dec
out
and
call
jmp
push
jmp
fwait
inc
bound
popf
mov
adc
pop
mov
sbb
out
ret
loop
xchg
ins
jecxz
add
or
jae
mov
push
xor
ret
call
cmps
push
les
pop
pop
icebp
(bad)
jge
push
cdq
cmp
mov
arpl
xor
mov
cmps
dec
pop
cmp
popa
mov
(bad)
and
(bad)
je
push
scas
mov
shl
mov
out
pop
or
pop
xchg
mov
mov
not
cs
adc
sbb
or
(bad)
(bad)
test
or
dec
mov
pop
xor
mov
and
ret
imul
lods
sub
stc
jnp
div
or
(bad)
mov
jbe
sub
std
scas
sub
push
ret
loopne
mov
adc
pop
jnp
test
add
sub
bound
pushf
mov
leave
add
mov
in
lock
xor
cmp
dec
std
sub
pop
mov
and
mov
mov
ror
inc
repnz
push
mov
test
data16
cmp
mov
or
xor
mov
cdq
sbb
mov
into
jne
rcl
(bad)
clc
popa
inc
neg
sbb
das
in
xor
mov
fadd
pop
or
arpl
fdiv
xor
or
fwait
cs
sbb
mov
mov
mov
adc
inc
inc
mov
pop
lods
idiv
xor
clc
loope
in
push
sub
iret
es
xor
adc
repz
cmps
out
xchg
test
aad
dec
cld
mov
dec
or
jno
or
retf
mov
popa
inc
and
outs
mov
ret
dec
mov
and
add
int3
xchg
lea
popa
or
and
icebp
mov
stos
adc
push
inc
pop
or
sub
not
jmp
or
pop
jnp
retf
into
add
(bad)
cmp
movs
xchg
sbb
inc
adc
ja
cli
fidivr
pop
aas
repz
mov
xchg
sbb
dec
out
push
cs
pop
xchg
call
add
aaa
sub
fadd
test
xor
(bad)
jmp
dec
mov
cmps
mov
pop
icebp
cli
add
mov
scas
retf
sub
lahf
icebp
mov
dec
jne
mov
jg
jg
and
out
xchg
in
movs
imul
pop
mov
call
int
xchg
sbb
stc
lods
cwde
std
xchg
add
push
sub
mov
in
std
outs
add
ins
sbb
adc
pop
mul
and
mov
push
es
mov
jne
adc
push
xchg
inc
int3
test
outs
aaa
sub
pusha
xchg
in
ror
out
xchg
adc
push
stos
xchg
fisubr
popf
dec
in
pop
movs
enter
push
movs
push
cmp
imul
aas
out
dec
mov
mov
sub
mov
mov
push
pop
pusha
test
and
adc
ja
clc
mov
clc
fst
cmp
adc
inc
dec
lock
test
mov
nop
sub
lds
daa
aad
inc
pop
aas
aaa
shr
ror
lock
call
(bad)
fdivr
xor
ss
and
mov
ror
ins
pop
adc
cmp
mov
push
out
push
ret
mov
repnz
adc
xchg
sub
fcomp
lock
jbe
cwde
and
dec
aam
inc
stos
or
retf
jno
shl
movs
add
popf
jbe
sbb
adc
loope
rol
out
cs
mov
add
cmps
loope
(bad)
cs
lods
push
mov
inc
sar
(bad)
jo
outs
or
lock
outs
loopne
adc
add
mov
int
movs
add
nop
mov
and
out
mov
nop
mov
push
inc
bound
stos
mov
daa
xlat
mov
addr16
js
ds
rep
xor
(bad)
not
add
adc
add
out
mov
pop
repz
(bad)
jl
pop
xor
dec
aam
lea
das
ror
lods
push
jle
inc
inc
add
jnp
or
cdq
xchg
jecxz
iret
cmp
cmps
(bad)
sahf
dec
or
pop
or
sbb
stos
ins
push
fiadd
es
jo
push
stos
mov
das
xchg
pop
lods
sahf
jge
mov
jge
jae
sti
or
fsubr
fst
rcr
mov
sbb
jp
lods
sbb
inc
movs
jno
jb
mov
mov
call
xor
clc
and
sub
sub
jg
popa
sub
mov
ins
rcl
call
pop
sub
jle
sbb
jnp
loope
shl
jnp
mov
arpl
enter
nop
or
inc
(bad)
ds
push
mov
push
jl
loope
(bad)
sahf
movs
dec
neg
or
je
mov
fistp
arpl
mov
daa
pop
cmp
pop
xor
pushf
xor
xchg
test
sbb
xchg
fadd
xchg
mov
movs
sub
call
adc
lods
mov
inc
push
push
popf
sbb
mov
mov
sar
or
cmp
popa
push
sub
add
cwde
pushf
es
nop
test
pop
leave
ins
ins
sub
pop
not
push
shr
dec
cmps
xor
adc
cmc
out
or
stos
ror
xchg
int3
retf
aaa
or
outs
out
sub
std
jb
or
xchg
ins
push
push
jmp
popf
call
inc
mov
ss
loope
aaa
sub
les
mov
xor
mov
adc
jecxz
sbb
jg
jmp
add
loope
cdq
scas
and
rol
fwait
inc
mov
lock
inc
movs
sub
or
and
iret
pop
add
xor
push
xor
loopne
xor
dec
(bad)
js
daa
test
scas
int
aas
leave
adc
mov
mov
popa
dec
adc
inc
(bad)
dec
mov
mov
push
int3
shl
lea
dec
mov
add
jle
std
mov
not
push
fcomp
(bad)
retf
adc
inc
outs
jge
push
add
into
imul
stos
xchg
dec
dec
fnstsw
and
dec
mov
pushf
pop
add
xor
call
mov
mov
out
push
aam
fmul
in
or
lea
xchg
mov
imul
(bad)
loopne
arpl
ss
cmps
arpl
xchg
mov
loope
ficomp
das
mov
dec
out
call
xchg
xor
inc
mov
cmp
popa
xor
jb
faddp
xor
retf
ret
cmps
dec
sub
aaa
pop
cmp
rol
mov
(bad)
sub
inc
in
les
xchg
faddp
mov
aad
xchg
jg
xchg
push
retf
nop
cli
cmp
repnz
and
xor
add
add
cwde
adc
fbstp
idiv
call
stos
push
loope
or
mov
das
out
mov
pop
mov
ret
mov
pop
jmp
outs
cmp
jno
mov
inc
inc
dec
inc
cmps
mov
imul
movs
adc
cmps
or
sar
cmp
aam
rcl
sbb
jmp
push
movs
popf
sti
or
mov
lods
test
loopne
popa
inc
mov
pop
leave
mov
fs
jmp
out
push
mov
repz
add
es
add
inc
test
adc
push
outs
imul
loop
and
mov
lods
scas
int
sar
call
jmp
sub
jnp
push
aaa
into
je
xchg
call
inc
scas
mov
out
dec
push
outs
repz
in
out
cli
fsubr
and
fs
and
mov
popf
nop
repz
mov
les
push
xchg
stos
or
(bad)
mov
xor
mov
ja
push
loopne
sub
aam
aaa
dec
xchg
(bad)
mov
imul
sti
mov
push
loop
sub
jmp
iret
mov
fs
mov
xchg
arpl
fsubr
inc
or
cdq
stos
retf
data16
das
(bad)
adc
and
ret
lods
dec
push
daa
pop
out
sbb
test
cmp
jno
(bad)
cld
int3
mov
mov
and
fwait
inc
jo
add
lahf
adc
inc
jmp
or
aad
push
or
push
cwde
xor
call
mov
rcl
rcl
test
movs
mov
(bad)
sbb
int
jns
push
dec
ins
and
cli
push
and
jns
mov
pop
sbb
jnp
xchg
and
pop
js
(bad)
pop
adc
mov
xor
inc
or
sub
movs
sahf
fdiv
test
outs
xchg
mov
pop
fwait
iret
(bad)
pop
cld
gs
push
jns
sub
hlt
(bad)
xchg
mov
mov
xor
mov
aaa
ficomp
pop
pop
ret
push
dec
pop
test
dec
or
retf
fs
sbb
outs
adc
mov
call
ret
or
pop
push
cmp
popf
fwait
out
cmp
jo
pop
inc
push
cld
push
int
push
aam
dec
loope
dec
(bad)
add
adc
ds
and
lds
mov
out
stos
pushf
lahf
dec
das
icebp
cs
(bad)
and
repz
sbb
pop
jnp
bound
pop
pop
sub
cmp
mov
xchg
xor
out
ret
push
std
pop
leave
sbb
jecxz
mov
push
pop
scas
popa
mov
mov
cmp
pop
lods
or
sub
cwde
pop
les
jmp
or
sbb
xchg
push
sti
xor
push
mov
jmp
pop
and
test
maxps
or
in
(bad)
mov
movs
add
mov
(bad)
sub
dec
pop
sbb
mov
ret
xor
mov
mov
xor
mov
adc
jbe
sub
sub
add
leave
cmp
shl
sub
sbb
inc
add
adc
fild
add
fmul
or
sbb
or
sahf
in
pop
loopne
pop
xchg
add
pop
add
mov
jmp
dec
es
cmp
xchg
mov
xchg
mov
aaa
add
dec
(bad)
xor
ds
mov
test
fpatan
mov
adc
mov
int
push
adc
push
aam
inc
imul
xor
jle
addr16
mov
or
mov
sbb
add
jne
mov
ret
cli
add
mov
pushf
test
(bad)
fisub
mov
int3
sahf
out
inc
shr
xor
push
pusha
imul
rcr
dec
pushf
fwait
shl
fwait
mov
aaa
pop
cmp
out
leave
mov
test
mov
imul
jbe
xchg
movs
(bad)
nop
jb
in
stos
pusha
jg
test
xchg
mov
or
sahf
mov
and
dec
and
iret
fs
ja
fnstenv
xchg
call
inc
sub
pop
push
sub
gs
out
(bad)
pop
mov
pop
xchg
jmp
or
or
mov
not
pop
xchg
inc
in
xor
push
pop
aaa
xor
mov
mov
(bad)
pop
into
pop
(bad)
test
in
enter
jnp
cmps
cld
mov
sar
adc
fstp
jge
jle
xor
jne
cld
fist
fsub
jno
dec
jae
and
mov
push
retf
test
mov
jae
sahf
fist
outs
push
add
fwait
cld
or
mov
pop
and
sbb
outs
fist
xchg
push
scas
adc
xchg
iret
ins
arpl
adc
mov
imul
mov
push
popa
sub
movs
cmp
aaa
push
mov
movs
sbb
dec
ins
adc
xchg
rcl
inc
arpl
fwait
in
xlat
shl
das
pop
cmp
jp
mov
cmc
fcmovnu
xlat
call
in
fiadd
push
sar
cmp
and
data16
xor
dec
aaa
and
or
idiv
jae
ss
xchg
lahf
mov
out
mov
or
push
mov
mov
imul
neg
sbb
add
and
mov
xchg
(bad)
mov
or
leave
adc
push
add
test
xor
ja
xchg
in
fmulp
mov
sub
push
rcl
mov
jnp
pop
mov
add
or
mov
inc
cdq
cmp
ds
mov
ret
push
add
mov
pop
mov
add
icebp
stos
dec
add
out
cmp
push
bound
adc
(bad)
cld
test
hlt
(bad)
cmp
push
mov
xchg
jae
pop
test
mov
pop
xor
std
cmp
mov
and
imul
aam
mov
cld
fst
sub
(bad)
out
jns
mov
mov
fs
ret
sbb
mov
pop
cmp
fistp
rcl
test
and
imul
sbb
movs
arpl
cwde
lods
push
sbb
mov
mov
mov
mov
cs
mov
ret
lahf
(bad)
cli
push
mov
cmp
ja
ja
aam
stos
pop
icebp
std
aam
mov
mov
imul
cmps
xor
or
fwait
div
pop
(bad)
lock
retf
pop
mov
cld
(bad)
mov
clc
mov
mov
test
xor
gs
mov
pop
jge
cs
xchg
sar
dec
in
scas
dec
adc
fistp
jbe
lock
sar
pushf
add
ror
dec
in
adc
or
repz
mov
and
and
mov
mov
retf
out
add
mov
jae
pop
fnstcw
jp
out
dec
call
dec
es
mov
fadd
dec
mov
or
call
pop
add
pusha
sbb
pop
out
sbb
mov
cli
sbb
dec
or
cmps
jmp
sub
xchg
dec
out
cmp
(bad)
ja
push
inc
test
aaa
ins
push
and
sub
dec
xchg
cmp
popf
shl
jecxz
bound
and
push
and
mov
mov
or
mov
push
out
or
pop
rcl
adc
test
mov
cmp
ins
xchg
mov
adc
push
or
cmps
xchg
ret
inc
jg
(bad)
xor
ss
in
sbb
into
cwde
les
jb
enter
dec
rcr
sbb
and
cmp
in
jmp
sub
dec
cdq
sub
push
xrelease
sbb
loopne
imul
jl
sbb
cmp
pop
inc
rcr
cmp
mov
in
push
stos
hlt
adc
or
(bad)
xor
bound
mov
dec
test
pop
jb
xor
mov
mov
out
pop
es
mov
out
pop
jl
mov
jg
cld
les
or
and
(bad)
jmp
and
mov
jmp
sar
xor
xor
inc
pop
cmovge
mov
ror
icebp
pushf
ins
test
mov
scas
or
cdq
add
out
or
cmp
bound
out
test
fnstsw
sub
neg
aam
(bad)
mov
fcmovb
pop
jle
mov
or
push
cmp
pusha
mov
gs
ja
xlat
mov
mov
nop
and
pop
dec
sahf
mov
pop
cmp
int
adc
scas
das
lods
fistp
shl
out
scas
and
imul
jp
mov
neg
jmp
jno
les
push
mov
ds
leave
push
inc
out
jg
outs
pop
mov
or
(bad)
xlat
(bad)
leave
fs
xchg
xlat
pop
ror
xchg
popa
rcl
or
push
xor
mov
daa
or
(bad)
cmp
mov
pop
adc
push
stc
cmp
(bad)
sahf
push
mov
cmps
jne
movs
mov
xlat
and
push
xor
jno
pop
std
loop
sbb
sahf
sub
or
into
xlat
dec
sub
jnp
rcr
jb
cwde
ss
mov
push
push
ds
jns
sub
xor
jae
inc
ror
dec
mov
mov
outs
and
xchg
pop
loopne
mov
jb
gs
div
(bad)
mov
pop
jae
sti
sbb
test
add
call
imul
jo
fdivr
xchg
adc
push
repz
mov
sbb
push
das
jb
and
iret
(bad)
pop
add
cdq
mov
aam
dec
mov
ins
mov
out
sbb
and
mov
dec
fmulp
jle
out
inc
cmps
test
mov
pop
push
lea
dec
cmps
adc
add
cmp
sub
and
(bad)
sbb
pop
sbb
ror
cmc
inc
sbb
scas
push
cli
cmp
imul
cmps
dec
xor
das
ins
push
test
mov
bound
in
(bad)
mov
cmps
push
sbb
dec
and
ficom
or
aas
jnp
dec
xchg
push
and
jle
jb
and
jmp
push
popf
xlat
add
cmps
(bad)
ja
mov
mov
(bad)
pop
ret
arpl
xor
adc
cmp
fld
mov
add
mov
jnp
setge
inc
jl
mov
pushf
mov
fild
adc
jns
fsub
mov
add
pop
es
int3
mov
jp
push
xchg
xchg
int3
(bad)
outs
ins
xchg
xchg
mov
add
xchg
in
inc
mov
mov
in
adc
loope
jno
inc
addr16
inc
sub
inc
rol
ret
inc
ins
fiadd
add
neg
idiv
xchg
enter
mov
aam
ret
inc
imul
sbb
inc
xchg
and
nop
jl
xchg
shl
mov
fisub
not
lods
ins
imul
lods
or
mov
push
sub
movs
call
test
stmxcsr
add
stos
mov
and
mov
cmp
retf
cmp
sbb
mov
icebp
and
push
mov
arpl
inc
and
xor
(bad)
outs
fstp
push
imul
cmp
ror
jns
shl
mov
rcl
push
mov
xor
sub
jnp
dec
das
ret
mov
dec
mov
(bad)
sbb
push
xor
sar
jbe
xor
jle
add
div
push
jmp
les
xchg
(bad)
sbb
js
pop
add
movs
sub
push
pop
pop
scas
or
ja
movs
test
retf
sahf
shl
repnz
inc
stos
lds
aaa
cmps
fsubr
mov
cli
lea
mul
adc
push
mov
rol
xchg
xchg
repz
xlat
dec
inc
sub
and
xlat
fisub
mov
addr16
xchg
and
test
or
push
adc
adc
(bad)
or
push
inc
jns
rcl
sbb
test
in
jae
xlat
inc
cmp
pop
add
sbb
stos
leave
jecxz
cwde
mov
rcl
cs
arpl
jns
xchg
and
sub
inc
xor
dec
(bad)
ins
sahf
or
in
ret
sahf
dec
pop
test
sub
adc
call
sti
outs
je
repnz
pop
xlat
lahf
adc
pop
sbb
jp
iret
pop
outs
pop
adc
ror
int
frstor
cmp
daa
ret
sbb
push
adc
pop
dec
ror
mov
cmp
lods
cwde
or
cmp
bound
xor
jmp
inc
mov
inc
mov
xor
xor
shl
add
add
add
(bad)
push
mov
or
in
movs
shr
enter
je
test
fiadd
aad
into
and
mov
xchg
push
cmp
jnp
mov
cmp
dec
and
add
inc
scas
or
jnp
(bad)
xchg
ror
mov
dec
imul
cdq
pop
inc
loop
test
mov
jo
jnp
dec
push
dec
outs
in
adc
stos
xor
mov
adc
mov
loop
adc
mov
ins
xor
fs
jne
push
xchg
push
nop
push
sti
mov
jg
daa
out
lods
cmps
mov
dec
jns
cli
jge
and
popf
into
jmp
or
pop
fmul
mov
sbb
retf
cwde
adc
push
gs
mov
scas
pop
xchg
cmp
sahf
pushf
dec
in
mov
mov
into
mov
cli
mov
push
fist
adc
loope
retf
jl
ret
neg
movaps
fisub
in
cmp
retf
js
push
push
add
dec
sub
cmp
mov
push
leave
in
mov
xchg
push
sub
inc
ja
movs
stos
pushf
mov
sbb
xchg
adc
imul
(bad)
idiv
dec
sub
jl
into
pushf
mov
sbb
(bad)
rol
jne
out
mov
test
outs
cmps
add
hlt
push
jg
sahf
aad
jns
lds
aas
cmp
loope
inc
aaa
loopne
sbb
hlt
movs
sub
dec
push
push
pop
xor
mov
jno
jo
cli
sub
(bad)
mov
inc
cmp
cmps
mov
mov
inc
je
xor
aam
push
lock
and
xchg
jo
inc
loope
dec
inc
push
out
jae
xchg
icebp
or
push
lock
xor
dec
mov
gs
inc
push
pop
clc
test
stc
imul
cmps
rol
stos
cmp
push
call
or
xchg
ds
cmp
xor
push
sub
sbb
cmps
pop
pop
movs
inc
xlat
mov
retf
xchg
call
sub
xor
lea
(bad)
into
(bad)
xchg
movs
repz
pop
popf
loop
sub
add
cwde
jmp
push
es
ret
int
jbe
pop
sub
fst
leave
xor
addr16
add
pop
fidivr
dec
mov
test
aaa
and
movs
jns
popf
mov
pop
push
rcl
data16
aaa
mov
arpl
and
sar
ror
add
call
popa
retf
jmp
sbb
shr
jp
mov
into
and
ins
inc
sbb
stos
push
gs
sbb
les
cmp
test
dec
jbe
jae
aam
push
cmp
ja
or
in
out
out
mov
dec
repz
sub
pop
mov
icebp
call
mov
ins
or
jb
xchg
and
nop
dec
pop
jl
aas
jae
mov
outs
sub
int3
(bad)
pop
mov
inc
mov
cld
xchg
clc
es
ja
fcmovbe
sub
push
mov
fcom
pop
mov
xlat
movs
lods
pop
jl
sub
mov
adc
mov
out
inc
mov
push
pop
jge
xchg
inc
xchg
fnstsw
or
test
push
test
shl
xchg
out
inc
aaa
or
fsubr
les
test
je
es
sti
cmps
cmp
cmp
fsub
rcl
jmp
retf
sar
sbb
pushf
or
jp
sar
xlat
xor
(bad)
shl
cdq
(bad)
out
push
sti
std
leave
push
xchg
push
cmps
adc
je
inc
push
cmp
push
sbb
xchg
in
fcomp
inc
and
cmps
pop
and
out
fmul
test
arpl
outs
pop
xor
add
call
lods
adc
sub
in
inc
pusha
push
in
push
out
into
in
sub
mov
(bad)
in
nop
push
retf
arpl
pushf
cs
inc
or
dec
jp
push
mov
sahf
int3
fcomp
idiv
adc
or
idiv
test
retf
cmp
push
adc
enter
mov
add
call
out
das
mov
mov
(bad)
or
add
xor
sub
sbb
mov
push
or
sahf
mov
push
icebp
and
out
push
cmp
(bad)
mov
push
and
mov
pop
out
stc
fist
add
adc
test
fdivr
or
jp
pop
cmc
iret
cmps
fcmovu
outs
nop
xchg
dec
cs
or
cmp
nop
cld
jb
lods
mov
ret
test
sub
inc
arpl
lock
js
push
or
cli
repnz
mov
push
mov
push
xor
cs
mov
ins
pop
and
sub
mov
imul
jbe
loopne
movs
fxch
test
push
icebp
call
cmp
xchg
mov
pop
jl
lods
mov
test
imul
mov
into
cli
jo
push
out
jmp
pop
lods
push
not
xchg
nop
cmp
cmp
lahf
cld
ins
mov
in
(bad)
(bad)
cmp
in
(bad)
mov
push
shl
xchg
mov
sub
ret
cdq
mov
add
dec
movntq
stos
sbb
pop
lods
out
cmp
ss
aad
aas
ret
jb
jne
adc
jle
das
mov
pop
mov
add
(bad)
sbb
lods
cwde
rcr
push
das
loopne
jbe
jae
push
xchg
inc
ins
add
mov
mov
mov
push
dec
push
xchg
cmp
(bad)
sbb
pop
pushf
cmp
in
push
(bad)
pop
and
movs
gs
cmps
xor
shl
in
aad
dec
push
stos
add
inc
push
adc
sbb
call
movs
jle
retf
push
pop
xchg
inc
mov
outs
xor
ja
stc
add
mov
popf
push
pop
icebp
scas
test
das
jmp
das
pop
add
les
adc
ins
(bad)
(bad)
enter
leave
dec
fstp
(bad)
in
cmp
test
mov
or
pusha
(bad)
test
ret
(bad)
pxor
aad
push
loopne
pop
neg
adc
xchg
mov
pop
int3
and
cld
ja
adc
stos
stos
inc
mov
adc
add
jg
add
jecxz
mov
xchg
mov
jp
out
jnp
cmc
mov
or
fld
mov
icebp
enter
pop
mov
push
inc
and
pop
xor
bnd
sub
jae
pop
test
jl
imul
cmp
std
mov
outs
mov
mov
iret
jnp
jmp
jne
in
retf
add
add
clc
outs
mov
cmps
xor
rol
xchg
ret
test
lahf
mov
daa
sbb
cmp
and
fs
outs
adc
out
mov
sbb
sbb
add
dec
bound
je
and
inc
xchg
cmp
mov
jbe
stos
ret
mov
mov
test
pop
push
movs
mov
xchg
jle
jle
cmp
jae
lea
test
ja
jecxz
jnp
ins
pop
movs
lds
adc
mov
cdq
mov
(bad)
fiadd
aas
aad
inc
and
add
jp
fs
xchg
pop
inc
in
repz
bnd
sbb
lods
adc
mov
add
mov
dec
loope
jo
jb
cmp
cmps
stos
sub
or
hlt
adc
cmp
adc
jb
xor
sar
out
push
push
inc
jmp
jo
push
mov
lahf
mov
popa
or
fild
dec
jbe
je
add
or
std
fwait
mov
dec
call
fwait
inc
inc
mov
stos
sbb
pop
ja
leave
or
(bad)
add
jo
test
jmp
div
inc
pop
addr16
ja
mov
cmps
or
sub
push
test
cmp
add
invlpg
sub
cmp
mov
mov
mov
fild
pop
idiv
jmp
int3
push
mov
pop
fs
clc
hlt
repnz
pop
sbb
add
sbb
fwait
push
and
inc
(bad)
adc
clc
movs
and
mov
movs
adc
jb
xchg
add
jmp
popa
call
int
mov
fstp
mov
inc
jne
add
dec
cmps
lods
and
sub
mov
push
or
out
push
xchg
(bad)
xchg
dec
mov
xor
sub
inc
gs
imul
jg
add
imul
ins
int3
fdiv
and
ret
pop
adc
jmp
dec
xor
and
fisttp
push
je
loopne
mov
pop
ss
lea
cmp
add
iret
std
xchg
sub
push
inc
pop
mov
loopne
mov
mov
sub
mov
in
fistp
lea
loope
adc
je
imul
push
add
add
movs
sub
and
out
or
sbb
push
(bad)
das
mov
sbb
jl
shr
lock
sub
into
mov
pop
repz
jb
pop
pusha
or
cmp
and
popf
pop
sub
movs
outs
aaa
div
(bad)
mov
outs
or
or
lods
pushf
mov
scas
test
(bad)
cli
fnstcw
pop
clc
dec
mov
mov
imul
cmp
(bad)
ds
mov
sbb
cmp
or
jae
(bad)
hlt
mov
push
inc
arpl
enter
test
jp
div
inc
sub
js
cmc
cmp
xchg
mov
mov
push
movs
push
xchg
jno
mov
loopne
mov
cmp
les
xor
sbb
jle
out
dec
jbe
cmp
jo
(bad)
mov
cmps
or
ja
pop
popf
in
prefetch
or
rcl
mov
push
cmp
scas
add
jbe
sahf
pushf
xchg
rol
js
fprem1
sar
in
bound
jle
mov
test
dec
les
rol
mov
mov
enter
into
jl
pop
dec
jns
xchg
cs
fcom
add
add
sbb
or
fld
dec
mov
adc
or
mov
pop
cmp
mov
jbe
sub
stos
or
and
and
inc
xchg
lahf
ins
mov
xchg
dec
and
pop
outs
jge
push
jl
push
xchg
push
pop
inc
xor
aad
data16
cld
sub
ins
inc
and
inc
int3
cmp
cli
mov
(bad)
push
jae
mov
xlat
ins
inc
out
xchg
push
push
xor
xchg
mov
fwait
pop
mov
call
dec
leave
lahf
dec
adc
jo
mov
into
push
retf
out
ss
call
stos
repz
jno
mov
push
and
adc
pop
aas
dec
sahf
(bad)
into
mov
dec
mov
sub
mov
push
adc
adc
or
mov
add
pop
xchg
pop
jle
popa
out
rol
pop
stos
mul
mov
mov
(bad)
jge
add
xlat
pop
push
loope
jno
mov
xchg
mov
xchg
fbstp
jno
cs
pushf
sbb
lds
mov
inc
sub
imul
xchg
dec
inc
push
in
sub
shr
and
pop
popf
push
or
mov
push
inc
fdivr
fcomp
and
cdq
adc
sub
frstor
sub
in
or
jmp
(bad)
(bad)
push
sbb
mov
cmp
jle
xchg
test
dec
jle
or
and
test
stc
xchg
or
fldcw
adc
adc
in
test
xchg
or
arpl
out
repnz
iret
je
adc
xchg
mov
es
je
dec
test
mov
div
mov
ja
mov
test
sbb
fdiv
(bad)
neg
inc
or
ret
jbe
push
and
mov
fistp
mov
dec
retf
loop
out
mov
hlt
gs
mov
lods
pusha
jno
cmp
or
in
test
fwait
hlt
cli
add
jmp
or
push
cs
mov
enter
dec
jmp
call
fst
xchg
sti
mov
imul
repz
add
sar
mov
nop
xlat
dec
cmp
mov
jo
push
pop
mov
push
push
fimul
pop
cmp
and
fadd
test
add
lock
(bad)
aas
shl
inc
int3
adc
jo
inc
xor
add
jb
leave
xlat
ja
cdq
adc
or
in
loope
push
bound
sub
mov
or
mov
jle
rcl
pop
sbb
dec
pop
or
scas
pop
or
pop
jl
jge
sar
fild
cmp
pand
outs
sbb
jle
jne
icebp
xlat
or
call
outs
daa
push
sbb
mov
or
fs
mov
retf
dec
mov
push
lods
scas
out
clc
ficom
fdivr
dec
mov
(bad)
push
push
ss
rol
idiv
xchg
enter
mov
adc
adc
adc
jo
stc
jmp
xor
loopne
addr16
pusha
dec
imul
cmc
mov
push
loope
pop
leave
push
pop
xlat
xchg
jmp
jb
aas
xor
push
xor
daa
(bad)
mul
and
leave
sbb
xchg
pushf
fbld
mov
xchg
jnp
enter
aaa
outs
adc
fistp
sub
rcl
xchg
adc
mov
and
fld
lock
xor
arpl
sti
jg
loope
xor
imul
ficom
in
ins
(bad)
les
ins
int3
mov
mov
mov
cmp
mov
mov
lea
cmc
nop
jl
loope
mov
in
lahf
ret
dec
(bad)
in
fld
leave
dec
in
ins
stc
lods
xor
loopne
mov
stos
mov
fiadd
ss
pop
adc
neg
sbb
test
lock
adc
popa
xor
int3
jle
cmps
loopne
cmp
in
xor
xchg
xchg
test
dec
sub
sub
jae
or
fsubp
sbb
and
lock
cdq
sti
aaa
mov
jecxz
push
in
out
(bad)
fs
sbb
xchg
scas
dec
(bad)
push
shr
(bad)
aam
fimul
pop
shl
mov
cmc
jnp
test
mov
out
or
xor
sti
dec
in
mov
clc
mov
inc
sub
jbe
pop
(bad)
stc
je
iret
ret
lds
into
or
sbb
jmp
xlat
fwait
adc
mov
lea
rcl
lds
push
mov
sub
das
mov
hlt
iret
or
mov
sub
jmp
pop
inc
jmp
cwde
adc
xor
shl
shr
retf
(bad)
(bad)
test
sahf
add
cmp
sahf
es
fld
push
xchg
sbb
cmp
cmp
jmp
add
pop
fstp
jno
add
inc
pop
loopne
into
scas
ja
sbb
mov
inc
mov
xor
(bad)
xor
xor
push
and
sar
push
dec
(bad)
fimul
stos
loopne
xchg
in
loop
or
pusha
ret
dec
loope
or
mov
fbstp
fs
call
push
mov
add
or
pushf
jmp
adc
pop
into
lods
jne
daa
xor
or
test
cmp
ret
pop
ja
push
js
icebp
imul
iret
pop
(bad)
call
shl
dec
dec
cmp
push
and
jbe
pop
inc
cmp
sbb
pop
mov
jl
movs
and
popf
mov
fistp
inc
retf
out
out
jne
and
fisubr
fisub
cld
jp
mov
daa
or
(bad)
add
cmp
push
cmp
not
xor
add
hlt
in
add
dec
jae
dec
push
rcl
out
or
cmp
sbb
jmp
daa
(bad)
jmp
pop
cdq
pushf
cmps
arpl
je
(bad)
sbb
fisubr
push
outs
mov
xchg
jb
mov
daa
inc
mov
inc
add
scas
iret
push
cmp
xchg
clc
jge
mov
daa
pop
jp
cmc
mov
stc
call
mov
or
stc
adc
inc
mov
cmps
shr
lock
loopne
pop
sbb
in
fimul
adc
mov
loopne
and
mov
push
xchg
imul
bound
push
test
push
pop
cdq
jg
icebp
mov
mov
or
nop
test
popa
fcmovne
xchg
scas
shl
imul
jae
frstor
cmp
sbb
(bad)
jge
sub
in
out
(bad)
cdq
data16
inc
adc
cmp
(bad)
pop
repnz
add
mov
stos
pop
adc
ret
stos
shr
sar
data16
inc
xor
and
stos
das
adc
mov
sahf
in
jle
in
xor
dec
out
fs
and
xchg
(bad)
cmp
je
and
icebp
dec
sub
lea
pop
imul
ins
stos
aad
stos
mov
sub
cmp
pop
std
jnp
mov
fcomp
ins
inc
lahf
jmp
(bad)
sub
sti
xor
aas
inc
dec
lods
daa
push
movs
(bad)
xor
std
jmp
bound
stc
(bad)
jae
daa
call
or
ins
cmps
mov
fs
addr16
mov
inc
mov
call
pop
pop
cmp
(bad)
lock
push
retf
pusha
push
mov
in
sub
add
adc
xchg
xchg
fnstsw
in
and
pop
mov
fstp
dec
mov
lods
ins
sbb
rcr
cmp
ss
fst
xor
aam
and
pushf
pushf
cdq
into
jnp
cmps
sub
movs
dec
inc
cmp
mov
repnz
xchg
test
dec
loop
loopne
cmp
dec
xchg
shl
ja
and
push
aaa
cld
jb
pop
mov
xchg
mov
and
mov
pop
jl
push
mov
fist
dec
popa
jle
dec
xor
dec
mov
and
call
add
lock
imul
(bad)
mov
cmp
mov
es
out
cmp
stc
sub
xor
repnz
sbb
dec
push
mov
push
pop
pusha
scas
adc
sti
lods
adc
xor
lods
xchg
aam
out
jnp
or
mov
pushf
push
jge
push
mov
retf
sbb
push
dec
repnz
dec
dec
gs
pop
rcr
cmp
xchg
or
imul
sub
sar
outs
push
in
jns
fstp
int
cli
and
jb
test
imul
xor
inc
sbb
sub
mov
xor
and
rep
dec
ja
out
scas
cmp
mov
test
push
rcl
mov
sbb
adc
test
add
pop
adc
adc
and
call
sub
js
mov
std
cmp
xor
push
movs
call
fisubr
cmp
mov
push
adc
push
pop
push
je
stc
xor
push
mov
das
jo
aaa
push
xor
aas
pop
mov
in
cmc
pop
or
push
xor
ds
outs
push
ins
in
xor
jl
call
inc
mov
jg
push
mov
std
sar
repz
add
xor
loop
xchg
fnstcw
and
xlat
fxch
mov
mov
sbb
cmc
sti
ud1
or
in
test
cmp
das
pop
fild
popf
lods
leave
test
cli
cmps
push
add
sub
fistp
xchg
pop
mov
push
and
mov
push
or
out
mov
pop
movs
and
mov
inc
pusha
iret
fucomip
adc
mov
inc
je
xor
cmp
sub
mov
or
add
pop
fcomp
sbb
into
sbb
xor
pop
push
(bad)
jp
mov
jg
pop
cli
xor
aad
jae
mov
mov
imul
test
pop
lods
or
mov
mov
xor
inc
cdq
fld
sub
jmp
popa
jg
sbb
ret
mov
xor
aad
rcr
inc
lahf
xor
rcl
in
sbb
pop
out
and
add
hlt
ret
cli
sbb
pushf
inc
ret
mov
or
push
data16
out
cmp
mov
out
pop
jmp
test
cmp
dec
push
daa
fxch
or
mov
inc
dec
or
cmp
icebp
std
clc
fs
mov
mov
mov
mov
or
sub
ss
adc
dec
imul
clc
or
iret
nop
stos
loop
mov
cmp
inc
push
stos
pop
inc
pop
pop
dec
jb
adc
jmp
push
add
jbe
test
jl
sar
sar
jb
ror
mov
and
js
popf
(bad)
sub
xchg
call
mov
jb
test
mov
dec
iret
stos
add
xchg
shr
mov
xchg
fwait
mov
sbb
or
bound
inc
test
enter
xor
jb
icebp
xchg
popa
cmps
cwde
jl
mov
cdq
push
movs
into
push
scas
and
mov
cmps
dec
adc
mov
mov
ret
fbstp
iret
out
adc
or
pop
and
dec
ss
lea
imul
fsubp
scas
out
call
pusha
imul
push
leave
scas
push
xchg
ret
xor
xor
mov
push
jmp
ja
adc
sbb
pop
fucomip
mov
fisub
and
js
xor
shr
aas
sbb
mov
or
adc
xchg
mov
lea
nop
aaa
jns
shr
push
lods
(bad)
loope
cdq
mov
movs
fadd
ins
bound
imul
pop
mov
push
adc
xchg
jl
ins
add
fs
and
clc
jae
push
in
dec
in
dec
in
inc
fnstcw
mov
fistp
sbb
or
jge
xchg
mov
cmps
pop
nop
xchg
inc
sub
and
pop
and
jne
pop
xchg
dec
xlat
and
ret
jp
mov
in
std
mov
int
mov
push
dec
jg
xchg
xchg
mov
or
and
inc
bnd
and
and
leave
pop
and
mov
xchg
movs
out
jp
sub
jnp
xchg
je
icebp
hlt
das
outs
add
inc
inc
shl
retf
cld
(bad)
rol
outs
xchg
add
lahf
call
mov
xchg
and
icebp
xchg
hlt
sbb
xchg
sub
mov
adc
cmps
mov
pop
sbb
scas
add
lods
push
add
xor
imul
sbb
add
into
adc
in
sbb
(bad)
fwait
xor
or
cs
(bad)
loop
and
(bad)
shl
push
retf
xchg
fwait
mov
lock
fld
imul
pop
ins
int3
imul
inc
iret
xchg
das
fisttp
inc
(bad)
movs
aas
je
adc
test
cmp
fnstenv
and
(bad)
call
ds
add
xor
and
xlat
push
mov
pop
xchg
retf
aad
cwde
ins
loop
stos
test
push
push
ret
loopne
sub
jmp
popa
ins
imul
push
(bad)
push
or
shl
imul
cdq
push
(bad)
mov
and
repnz
lods
pop
cwde
push
jnp
xchg
(bad)
popa
test
bnd
sub
ds
cs
nop
mov
jb
pushf
call
cmp
stos
push
add
push
xchg
(bad)
out
pop
mov
fsub
daa
mov
outs
movs
stc
xchg
push
cmps
jb
mov
or
push
in
rcr
aad
cmc
pop
cs
popa
nop
loope
sahf
dec
inc
inc
push
push
ret
arpl
mov
std
dec
out
jnp
inc
or
(bad)
aaa
scas
inc
sbb
lea
retf
adc
ss
imul
jae
or
data16
sti
jmp
aas
or
xchg
retf
lea
ja
rol
ja
hlt
jge
and
pop
push
enter
dec
out
cmps
inc
jecxz
mov
pop
mov
out
sbb
enter
mov
mov
cmp
mov
or
in
adc
aad
test
cmp
popa
(bad)
inc
int3
jmp
sub
jg
mov
mov
pop
dec
(bad)
cmp
(bad)
mov
or
xchg
xor
enter
inc
jns
pop
xlat
sbb
lds
or
pop
std
sbb
arpl
or
add
nop
xchg
lahf
push
push
aam
retf
jmp
in
or
mov
mov
xor
xor
mov
repz
mov
mov
xchg
xlat
(bad)
jo
loope
adc
imul
jg
shr
xor
test
xchg
ror
sub
cmps
out
jns
fs
pop
jmp
int3
sbb
iret
ins
ja
xchg
mov
fsub
sub
aam
test
xchg
cmps
cmc
lds
mov
mov
cli
sbb
push
or
and
std
sahf
sub
inc
inc
inc
clc
ins
addr16
cmp
faddp
idiv
or
mov
cmp
fadd
or
sub
push
sub
rol
sub
into
sbb
cmc
add
iret
mov
in
and
xor
test
sahf
ss
std
aas
cmc
std
add
and
jb
pop
inc
jb
jae
jns
xor
xchg
cmc
jmp
push
dec
cdq
call
lods
ins
sub
rol
mov
out
cmp
fbstp
out
arpl
clc
in
or
sbb
cmp
jg
cs
pop
add
xchg
dec
rol
into
xor
imul
pop
push
fsubr
shr
test
sub
inc
jne
fcmovnb
or
aas
sbb
mov
sub
call
mov
int3
sub
lds
jge
mov
sbb
sbb
test
fcmovb
call
xchg
pop
daa
xor
sub
mov
test
xchg
(bad)
cmp
xchg
add
xchg
or
or
out
mov
test
je
inc
ins
add
imul
sahf
jmp
cmps
inc
iret
add
ror
test
inc
imul
loopne
in
aas
dec
add
popf
inc
sbb
mov
lods
lahf
js
neg
xor
or
pop
fstp
xor
and
push
push
int
lds
outs
addr16
loope
mov
nop
ins
retf
fld
movs
cmp
aas
cmp
setb
pop
shr
clc
add
fisttp
pop
(bad)
test
cmps
xor
adc
jg
imul
or
or
cmp
sub
xchg
cs
stos
popa
aam
mov
cmps
sar
les
lods
adc
repnz
xor
int
or
mov
mov
jp
pop
push
repnz
inc
inc
jl
fiadd
scas
jb
cmc
pop
xor
popf
stc
adc
lock
xchg
daa
aam
imul
push
cmp
mov
mov
or
dec
inc
push
sbb
and
jge
test
cmp
sbb
call
adc
test
es
pop
ret
std
ins
push
fild
jecxz
jge
add
or
enter
es
cld
dec
popa
or
arpl
out
jle
or
adc
ja
push
pop
(bad)
jnp
(bad)
adc
scas
ss
stos
pop
and
idiv
cld
pop
xor
push
arpl
fcomp
fdivr
or
cmp
xchg
aam
jnp
jp
pop
cmp
je
jecxz
cmp
mov
imul
pop
je
shl
daa
jb
cmc
clc
xor
xchg
fchs
loop
add
mov
adc
add
jl
(bad)
dec
aas
inc
cmp
dec
sbb
push
mov
pop
sbb
jmp
jp
sti
aad
lea
cmps
out
das
leave
dec
inc
cld
xchg
dec
or
imul
cmp
cmp
cli
push
cwde
aaa
fidivr
adc
xchg
jp
lea
in
pushf
es
loope
gs
fnstcw
jge
push
cmp
shl
xor
(bad)
(bad)
pusha
imul
mov
shl
or
cmps
dec
push
hlt
icebp
xor
das
sub
das
loope
xchg
fs
pop
cld
dec
sbb
xchg
hlt
cld
(bad)
sar
in
mov
jp
leave
or
push
sub
daa
popa
jb
mov
pop
inc
scas
ins
fbld
jp
ins
arpl
xor
push
pusha
cmp
stc
xor
icebp
mov
push
movs
jle
test
add
cmc
icebp
ins
xchg
adc
sbb
and
adc
mov
rol
stos
fnsave
sbb
jg
aas
inc
xlat
(bad)
cmp
hlt
test
cmp
mov
ins
aas
and
into
jmp
clc
adc
mov
enter
jg
shr
jp
adc
test
adc
int
or
into
cmps
(bad)
ds
jae
cmp
mov
mov
inc
stc
jmp
arpl
aaa
adc
sbb
loope
dec
or
mov
out
sbb
xchg
ret
mov
mov
pop
mov
test
jo
push
fbstp
fild
pop
sbb
or
out
inc
neg
jno
add
sub
arpl
test
xor
and
shr
sbb
loop
outs
jns
int
mov
dec
sbb
bsf
clc
cmp
bnd
push
mul
mov
xchg
adc
mov
into
jmp
mov
nop
jmp
retf
or
jp
out
stc
and
inc
(bad)
call
cmp
inc
sub
xchg
jno
stc
mov
mov
enter
push
or
jo
mov
adc
sbb
movhps
push
xchg
stos
xchg
push
inc
mov
pop
scas
cmp
pop
sbb
cmps
clc
push
lds
stos
outs
mov
fstp
sub
cmps
rcl
scas
cdq
lock
repz
outs
mov
out
inc
fdiv
jg
jb
xor
cdq
(bad)
jb
xchg
xchg
sub
jmp
out
rcl
sub
jns
inc
mov
mov
aas
jne
jo
push
fidivr
in
mov
add
div
xor
mov
fwait
pop
paddq
adc
xchg
inc
enter
fisubr
adc
cmp
jmp
sub
into
lods
je
sbb
mov
adc
fcmovnb
daa
movs
pop
jo
sub
xlat
shl
cli
dec
mov
mov
push
out
sub
imul
fsub
in
jne
ficomp
fcomp
lods
mov
mov
ret
add
add
sbb
test
dec
add
loope
mov
rcl
or
movs
stc
add
das
xor
adc
xor
mov
std
dec
sar
push
xor
push
outs
jge
jge
push
dec
jmp
dec
pop
and
sbb
push
pop
jecxz
or
adc
xor
es
jo
lock
xchg
leave
mov
xchg
jmp
test
lods
popa
adc
loop
test
jmp
rcl
fdivr
xor
or
dec
mov
xchg
jno
int3
test
mov
ja
add
jge
mov
add
movs
inc
add
mov
loop
stos
xor
add
stc
ret
push
mov
sahf
sub
and
mov
mov
rcr
mov
adc
scas
sbb
mov
mov
push
std
in
shl
dec
repnz
leave
cmps
jge
fucompp
rcl
repz
or
jae
shl
in
imul
jo
cmp
and
retf
pop
add
sbb
cmp
ret
and
add
maxps
inc
fbstp
adc
jb
ja
retf
imul
mov
pop
add
(bad)
jmp
add
and
sti
in
mov
xor
das
loop
nop
xor
push
fist
(bad)
mov
xchg
(bad)
punpcklbw
(bad)
xor
les
div
xchg
outs
or
ret
in
not
popa
outs
cmp
in
div
out
dec
aas
mov
pop
or
and
dec
(bad)
pop
push
fsubr
jno
sub
int3
mov
xor
push
mov
scas
xchg
ret
pop
mov
push
rcr
mov
lahf
sbb
mov
stos
inc
pop
pop
movs
jmp
inc
rcl
sbb
mov
rol
out
xor
sub
stos
push
into
jle
fiadd
sbb
(bad)
cmp
mov
adc
sub
frstor
and
jae
inc
jge
adc
loop
sbb
sbb
cmp
xor
scas
sbb
jbe
and
mov
das
call
lds
lds
popf
jbe
sar
dec
cmp
mov
out
(bad)
int3
dec
and
in
test
les
jmp
push
mov
ja
and
cli
push
iret
jo
xchg
fistp
hlt
aaa
sbb
sbb
mov
mov
jle
lock
or
pop
or
adc
fsub
xor
mov
inc
jae
jge
ins
fadd
xor
fdivr
sub
mov
xchg
push
xchg
and
xchg
or
stos
jge
sbb
stos
sub
ret
mov
fwait
aas
shl
jle
mov
lods
cld
add
mov
lods
icebp
test
bound
push
cmp
sbb
ret
stos
icebp
pushf
clc
mov
push
mov
sub
cmp
and
mov
pop
call
pop
loope
cli
mov
pop
xor
fsubrp
retf
jbe
xchg
mov
rcl
xchg
sbb
jns
dec
clc
xchg
xor
mov
mov
shl
push
pop
pop
dec
mov
out
lahf
add
mov
(bad)
daa
test
fnop
jge
jnp
shl
or
or
inc
aad
add
les
mov
cli
(bad)
fsubp
mov
pop
sub
movs
bound
imul
fistp
pusha
enter
(bad)
retf
mov
jbe
pop
ja
vmovntps
pop
je
cmp
mov
mov
cmp
mov
sub
sub
inc
out
imul
or
mov
lahf
mov
pop
loop
(bad)
call
jmp
cmps
int
es
out
pop
gs
push
ret
xor
movs
dec
ss
arpl
inc
imul
ss
mov
xchg
cmp
retf
lods
dec
jo
mov
sub
cwde
pop
fsubr
(bad)
jmp
inc
push
loop
or
pop
fbstp
mov
(bad)
jecxz
pop
pop
mov
(bad)
mov
dec
cmps
dec
push
xor
xor
movs
xlat
(bad)
rcr
mov
jno
(bad)
mov
nop
out
sub
addr16
cmp
cdq
outs
mov
arpl
cmp
jmp
xchg
cmp
ror
and
sub
sbb
or
arpl
arpl
cmp
leave
movs
sub
movdqu
mov
mov
cmps
sub
shl
or
fsubrp
hlt
jbe
pop
scas
scas
sub
jge
xor
and
cmp
sub
pop
sub
or
cld
jnp
pop
adc
fmul
imul
or
jne
mov
add
cmp
test
into
out
mov
(bad)
(bad)
call
mov
sub
movs
adc
jbe
mov
dec
jle
pop
ins
inc
addr16
cmp
pop
mov
scas
out
mov
inc
and
mov
dec
movs
in
icebp
data16
jecxz
push
xor
arpl
jmp
push
pop
les
sahf
mov
cli
aad
loopne
mov
in
cli
outs
aam
jge
fwait
push
sbb
fsubp
leave
aad
iret
xchg
xchg
aam
(bad)
rcr
imul
jb
fwait
lea
lods
inc
mov
jnp
xchg
inc
cmp
mov
(bad)
(bad)
popf
ror
and
test
or
out
xchg
int3
pop
test
xchg
ret
das
fsubr
sub
inc
pop
test
sbb
and
inc
mov
js
mov
fwait
sub
popa
(bad)
fcom
jmp
and
mov
sbb
add
test
pop
mov
pop
aas
inc
test
mov
pop
or
dec
push
mov
mov
mov
jae
xchg
das
int
push
push
mov
inc
push
mov
jmp
cld
sub
jge
xchg
jb
arpl
(bad)
sbb
and
or
sub
pop
ja
in
mov
push
aas
jmp
repz
push
cmc
fsub
mov
stos
rcl
lock
jmp
(bad)
sbb
aas
call
std
xor
push
aam
xchg
lds
sbb
sbb
hlt
in
pop
add
inc
sub
stc
mov
dec
loopne
fadd
adc
cmc
dec
add
pop
push
cmps
mul
into
mov
push
jo
mov
pop
mov
mov
pcmpgtw
inc
loope
or
xchg
test
stos
add
and
add
dec
mov
(bad)
out
loop
cli
call
cmp
retf
mov
inc
or
sti
add
mov
push
enter
fmul
mov
fldenv
mov
cs
dec
cmc
mov
cmps
sub
in
adc
out
inc
ja
stos
jle
sub
add
adc
mov
and
fld
aam
sub
rcr
fwait
mov
mov
shl
xchg
dec
sbb
imul
inc
cld
int
ss
aaa
mov
pop
in
aaa
xchg
xchg
xchg
xchg
sub
xchg
sahf
adc
cs
in
ins
or
popf
je
sbb
mov
mov
outs
scas
cmp
mov
test
out
es
inc
sub
mov
adc
fld
push
imul
fcom
scas
push
push
enter
aaa
test
dec
ins
sbb
outs
pop
aas
pop
daa
outs
call
(bad)
mov
stc
inc
sbb
aas
cmp
push
mov
(bad)
aaa
xchg
(bad)
adc
push
jecxz
pop
dec
cmp
mov
repnz
push
adc
push
xchg
sub
cmp
mov
push
add
icebp
jno
inc
sub
mov
aam
test
xchg
xor
ret
cmp
inc
xchg
adc
push
mov
jmp
mov
mov
stos
ds
add
mov
inc
or
mov
sbb
jnp
pop
add
ins
aas
cmp
lahf
(bad)
std
sbb
fstp
push
mov
mov
ds
test
das
popf
sti
push
stos
sub
inc
mov
popa
clc
xor
dec
xchg
sahf
xchg
pop
popa
outs
mov
xor
cmp
out
jecxz
loope
xchg
xchg
mov
xlat
adc
and
ds
push
cmp
out
mov
sub
(bad)
push
jge
js
out
test
pop
jmp
fsubr
fsubr
mov
and
pop
push
clc
ret
pop
mov
push
mov
jg
outs
mov
pop
(bad)
fwait
mov
fdivr
adc
push
pop
sar
aas
mov
daa
nop
xor
and
call
dec
and
scas
sub
push
mov
mov
mov
test
loopne
mov
dec
sbb
sbb
fisttp
push
pop
jb
stos
mov
mov
cmp
cmps
push
xchg
out
(bad)
mov
jnp
or
arpl
or
sub
jp
aad
mov
and
jmp
pop
movs
pop
pop
cmp
leave
xchg
repnz
rcr
xchg
jle
stos
or
repnz
push
pop
pandn
xchg
int
cmp
in
jno
iret
jne
inc
pop
push
sti
or
pop
pop
xor
mov
popf
pop
scas
pop
mov
imul
stos
bound
inc
rcl
sti
xchg
pusha
mov
and
stos
shl
(bad)
idiv
and
mov
sbb
cmp
xor
lods
xor
cmp
pop
dec
jb
xor
pop
inc
in
sub
(bad)
jge
or
gs
jb
outs
jmp
loope
cli
repnz
jne
xchg
test
push
test
icebp
daa
aam
jle
addr16
mov
nop
push
jecxz
xor
jne
dec
div
ja
dec
xor
xchg
add
jmp
and
gs
push
adc
inc
sti
jns
out
push
movs
and
mov
inc
dec
dec
jne
sub
mov
popf
sbb
adc
mov
push
push
cmp
out
fldcw
jbe
pop
sar
push
jne
mov
mov
cmp
adc
(bad)
dec
pop
int3
out
(bad)
mov
xor
push
jmp
jl
outs
pop
in
jne
test
push
cs
fstp
push
jmp
into
inc
dec
mov
mov
outs
out
fldenv
sbb
lds
cwde
jge
mov
fwait
inc
mov
es
outs
mov
repnz
ja
xchg
adc
xor
and
and
fs
cmp
std
push
adc
cmc
sbb
retf
stos
mov
outs
ins
push
push
popf
sbb
xor
and
lods
push
push
lods
bound
cld
or
cmp
add
xor
sbb
cmp
inc
xchg
push
or
arpl
adc
test
mov
test
not
mov
je
test
add
jae
xor
or
adc
xchg
dec
sahf
js
loopne
ds
fbstp
adc
gs
cmp
sahf
add
in
sub
nop
jge
inc
in
push
loopne
mov
mov
movs
sub
ins
loopne
(bad)
fs
xor
test
inc
push
aam
xor
xchg
xor
dec
aaa
jp
and
std
push
gs
adc
nop
cld
mov
jle
fldenv
adc
pop
mov
pop
jle
pop
pop
sahf
xchg
dec
and
push
(bad)
xlat
inc
add
jb
ins
cmp
icebp
fbstp
and
push
mov
repnz
pop
mov
bound
inc
dec
xchg
add
jge
xchg
aad
aad
fdiv
out
xchg
mov
hlt
push
xchg
push
push
xchg
pop
in
ficom
xchg
sbb
inc
sar
inc
loope
fwait
movs
jns
aaa
outs
sub
arpl
dec
and
pop
(bad)
mov
js
push
clc
adc
push
and
and
inc
mov
push
lods
adc
mov
cmp
push
xchg
cmp
icebp
lods
cmp
and
test
push
add
mov
(bad)
xor
jmp
or
cs
pop
mov
jp
lods
cmp
cmps
in
pop
mov
dec
ror
sbb
stos
lea
sbb
sub
scas
imul
jp
mov
inc
and
push
cmp
push
(bad)
cdq
iret
out
es
sahf
clc
and
xor
push
inc
int3
sub
jge
icebp
out
pop
sbb
cmps
jle
sbb
imul
je
cmp
push
add
sub
leave
mov
out
mov
xlat
push
fwait
imul
arpl
mov
sbb
fnsave
inc
push
call
les
dec
ins
sbb
cld
outs
aas
or
and
jmp
ret
sub
pop
and
enter
lds
daa
lahf
xchg
neg
sbb
inc
jne
sub
sbb
movs
in
adc
pop
aas
cdq
ss
cmovo
add
push
sub
sti
add
(bad)
xchg
or
ins
xchg
cmp
scas
loope
inc
(bad)
pop
loope
repz
popa
fdivr
mov
and
inc
mov
pop
push
cdq
ror
popa
leave
mul
cld
iret
fild
push
in
mov
xor
mov
add
add
add
cdq
loopne
retf
int
stos
daa
and
dec
dec
imul
lahf
pop
fdiv
aas
push
inc
cs
imul
mov
dec
jg
(bad)
adc
mov
and
adc
xchg
shl
clc
or
out
sbb
or
mov
(bad)
inc
xor
pop
jmp
push
scas
pop
hlt
inc
inc
jae
jne
mov
cli
aas
cmp
sub
mov
push
loopne
aas
out
inc
(bad)
cmps
fidivr
sub
stos
push
push
xchg
mov
mov
pop
(bad)
dec
jns
mov
jb
mov
push
lahf
sbb
push
lds
lods
push
fwait
lds
shl
(bad)
scas
add
adc
jne
imul
push
lea
in
fidiv
adc
ins
jg
jne
inc
aaa
jb
xchg
mov
pop
movs
pushf
leave
cmp
(bad)
cli
jbe
in
rcl
hlt
in
inc
push
test
aas
out
movs
pop
test
retf
es
dec
(bad)
out
fld
xchg
popa
inc
lds
fild
pushf
or
icebp
enter
(bad)
stos
lds
sbb
cli
jecxz
clc
dec
mov
fld
cmp
xor
ret
loope
(bad)
call
push
adc
inc
mov
mov
pop
add
scas
push
addr16
xor
pop
dec
push
add
fcom
jl
(bad)
bswap
ins
outs
or
mov
pop
leave
mov
mov
xor
sbb
add
imul
arpl
sbb
lahf
xchg
stc
in
xchg
add
lea
push
aas
inc
and
fstp
neg
pop
cmp
xchg
(bad)
jo
(bad)
pop
lods
add
ret
jecxz
pushf
popa
nop
add
add
or
xor
push
mov
mov
inc
adc
jns
imul
xor
jg
test
cmp
call
mov
dec
ja
push
stos
mov
fxch
dec
sbb
and
imul
or
mov
ret
cvtpi2ps
cmp
xchg
and
xchg
nop
jge
mov
rcr
mov
daa
test
add
mov
or
push
adc
stc
ror
std
fsubrp
push
repz
das
out
dec
dec
jmp
xchg
jmp
jno
scas
xchg
out
or
mov
das
jb
call
cdq
shl
div
pop
out
or
aad
push
ret
pop
(bad)
jmp
icebp
into
push
cmps
add
adc
(bad)
pop
ret
jmp
hlt
mov
je
mov
mov
cld
xor
adc
lock
imul
mov
leave
jl
mov
pushf
jno
pop
adc
jle
cmp
pop
mov
push
jne
popf
cli
inc
scas
inc
jle
je
aam
sti
clc
dec
ja
adc
aam
es
and
sbb
adc
add
movs
xor
nop
fiadd
jmp
xor
loopne
(bad)
fimul
add
jle
and
out
retf
fnstcw
dec
jg
sub
arpl
mov
xchg
cwde
popa
mov
or
ret
clc
sahf
out
or
adc
rol
sub
enter
inc
or
inc
add
or
fcomip
pop
add
jmp
cmp
push
(bad)
sub
out
jb
data16
test
mov
in
sbb
dec
fbld
mov
fst
out
xchg
inc
out
dec
dec
add
repz
push
and
lea
jmp
sbb
ffree
jp
lahf
and
ret
dec
pop
xor
ja
mov
lahf
pop
inc
pop
ds
hlt
dec
movs
cmps
pop
sbb
loop
pop
dec
xchg
out
mov
mov
jg
mov
mov
ficom
push
adc
call
dec
cdq
mov
vmread
and
mov
into
mov
adc
sub
in
mov
in
add
xchg
shr
fcom
cld
fisub
jge
fdiv
xor
xchg
int3
and
fidivr
push
xor
sti
jno
movs
scas
and
adc
iret
xor
xchg
sub
xor
inc
mov
and
jg
or
enter
jnp
pop
shl
aas
push
cmc
adc
(bad)
dec
fldenv
dec
push
bound
loope
mov
(bad)
invd
fnstcw
repz
into
call
xor
xor
data16
popf
pop
out
xor
fwait
ss
or
mov
retf
fsubr
or
or
popa
ins
adc
cmc
jmp
stc
adc
int3
data16
cmp
call
add
push
jnp
jmp
mov
push
sub
mov
rcl
sub
sub
or
data16
lds
and
in
lahf
pop
push
jo
adc
xor
in
dec
nop
xor
pop
mov
rol
or
imul
mov
xor
or
sahf
movs
jbe
retf
jb
arpl
inc
add
ins
mov
ins
in
mov
cmp
(bad)
jle
jb
pushf
jbe
cwde
push
dec
mov
pop
std
inc
jp
push
mov
sub
movs
mov
stos
repz
popf
dec
and
and
pop
fimul
retf
in
jecxz
and
xor
cwde
pop
call
sar
pop
sti
in
les
add
test
mov
icebp
inc
sbb
stos
pusha
dec
mov
sbb
adc
inc
push
fcmovu
mov
pushf
sub
jecxz
push
cmc
and
lea
(bad)
test
cmp
mov
adc
stos
sub
jl
sbb
add
jo
add
ins
lea
push
ror
jp
cld
jmp
rol
sub
popf
inc
push
mov
and
fmul
bound
loop
(bad)
hlt
cli
clc
push
sbb
push
aam
mov
cmp
push
dec
(bad)
adc
jns
pop
outs
pop
out
sar
mov
outs
cmp
dec
div
loopne
pop
div
cmp
js
xor
or
push
je
xchg
test
or
es
dec
xlat
mov
jo
jl
pop
push
jns
cmps
mov
(bad)
mov
leave
cwde
xchg
pop
mov
xor
and
aad
mov
lahf
and
inc
mov
jmp
inc
push
xor
cmps
dec
add
mov
lahf
mov
jno
test
add
add
cmp
js
(bad)
adc
inc
outs
dec
in
mov
or
or
cmp
dec
fdiv
mov
sbb
rcl
mov
loopne
mov
inc
in
mov
repz
adc
hlt
push
xchg
push
out
(bad)
mov
lds
sar
inc
cs
mul
mov
(bad)
mov
mov
cmps
sub
fisttp
xor
or
sbb
aad
sub
rol
rcr
xchg
push
xchg
pop
into
sbb
js
ja
int
pop
arpl
mov
out
outs
mov
jbe
mov
movs
cmp
dec
and
popf
jmp
push
pop
inc
retf
idiv
(bad)
or
fmul
push
sub
add
jecxz
(bad)
sub
push
shl
pop
sbb
mov
pop
cmps
cmc
inc
add
rcl
sbb
or
jge
mov
pop
loopne
or
or
call
jb
push
add
and
cwde
ja
add
mov
(bad)
mov
in
cmp
mov
in
mov
gs
lea
fadd
xlat
rcr
test
sbb
dec
fadd
mov
ins
mov
popf
cmp
aam
cmc
lds
pop
mov
stos
pop
add
inc
fcom
push
mov
fld
cmc
sbb
in
pop
cmps
test
out
push
rol
mov
pop
jne
xor
gs
pop
movs
jne
mov
loopne
adc
adc
inc
cld
daa
dec
cmps
xor
mov
loopne
xlat
jns
sar
push
inc
jmp
and
in
repz
ds
jle
call
mov
out
xor
ins
iret
xchg
loopne
push
mov
jo
adc
mov
movs
pushf
push
sbb
mov
movs
aas
test
out
lahf
cs
push
xor
adc
dec
cwde
dec
or
loopne
loope
addr16
dec
clc
fsub
(bad)
mov
xchg
jge
add
push
fxch
pop
and
adc
out
push
dec
scas
sub
imul
dec
cdq
popa
pop
rcl
jno
lds
cs
sub
mov
inc
iret
mov
ret
inc
mov
mov
mov
cmp
sbb
std
shl
sahf
neg
add
xchg
(bad)
cld
(bad)
dec
(bad)
lock
enter
popa
sbb
aaa
ds
sbb
das
mov
xchg
push
dec
into
cld
or
and
leave
push
retf
dec
rcl
jae
fnsave
mov
aas
std
ud2
nop
cwde
mov
aam
sub
call
inc
pop
repz
ins
mov
mov
jae
or
jo
xor
or
xor
dec
not
inc
loop
outs
in
clc
dec
das
lods
outs
jmp
push
fst
jnp
rcr
sahf
and
mov
(bad)
out
pushf
add
stc
cmp
mov
pop
pop
jle
retf
sub
and
hlt
das
out
push
enter
cmp
jne
cdq
enter
jno
into
dec
mov
fisubr
and
daa
mov
adc
xchg
and
retf
inc
ret
ret
add
pop
outs
movs
sbb
pop
js
and
cwde
add
mov
loopne
add
(bad)
les
pushf
and
(bad)
(bad)
gs
push
sbb
ins
cmp
js
stc
cmp
cmp
sub
adc
dec
push
push
(bad)
(bad)
fistp
inc
ret
dec
jle
mov
test
add
cmp
and
stc
movs
inc
ds
sti
cld
ins
mov
fdivp
iret
rol
jp
inc
mov
or
pop
push
jle
or
dec
pop
retf
jbe
ins
sbb
stos
lods
clc
inc
sbb
push
adc
and
sub
lods
shl
sbb
jne
jbe
test
jb
sbb
add
imul
cmp
inc
aam
dec
and
xchg
shr
or
push
ficomp
mov
sbb
rol
add
leave
es
or
sahf
loope
dec
cld
sub
aad
pop
into
cmp
dec
lahf
or
call
cmc
pop
sti
jno
scas
xor
jmp
das
gs
test
inc
or
pop
out
fsubr
add
test
je
call
xor
add
xor
fwait
xor
inc
xchg
mov
jb
push
and
stos
inc
sahf
sub
cmps
add
add
inc
adc
cmp
mov
cli
sub
ss
imul
xor
aad
mov
xchg
jmp
cld
adc
dec
movs
push
add
cmp
push
adc
xor
in
mov
es
shl
sub
cwde
xor
sub
mov
int
push
fst
arpl
imul
out
fisttp
xor
mov
lea
pop
cmp
mov
jecxz
jo
or
push
cmp
test
mov
clc
push
or
jl
add
leave
push
sbb
mov
pop
in
imul
neg
cmp
in
aaa
jns
test
scas
fcom
test
mov
(bad)
fxch
push
fst
sub
popa
mov
ret
out
pop
hlt
push
inc
dec
dec
sbb
mov
add
sub
adc
dec
retf
sbb
mov
mov
fild
neg
jle
and
push
sub
loope
jg
jbe
fist
inc
in
lahf
aam
mov
out
xchg
push
inc
sub
mov
(bad)
les
xchg
sub
jecxz
cmps
and
xchg
jge
cld
ret
xor
enter
repnz
mov
stos
cmp
loop
xchg
test
out
pop
fbld
cli
sub
int
int
mov
pop
push
sbb
out
and
jg
ss
imul
es
mov
popa
mov
xor
mov
popf
fmul
clc
fmul
loop
scas
xor
ins
mov
(bad)
mov
jae
pop
das
cmc
daa
stos
push
sti
sahf
cmp
inc
sbb
stos
xchg
les
fdiv
ret
mov
ins
adc
out
xor
xor
and
stos
daa
sub
pushf
ja
imul
out
scas
mov
pop
xchg
loop
sub
or
in
jge
nop
sbb
sub
sub
sahf
sub
(bad)
out
jmp
cmp
cmp
jmp
adc
neg
out
cmp
jge
es
ss
push
cwde
sti
push
dec
inc
mov
int
mov
call
mov
ret
pop
aad
xor
popf
adc
mov
clc
xchg
mov
xchg
(bad)
jl
pushf
mov
adc
xor
call
mov
pop
sbb
icebp
(bad)
sub
fdivrp
scas
cwde
add
or
and
imul
(bad)
out
leave
xor
mov
idiv
pop
clc
pop
jle
push
pushf
cmc
mov
dec
test
cmc
cmp
xor
ja
mul
repnz
std
call
mov
mov
in
btr
xor
xchg
in
add
loopne
data16
fdivr
add
xchg
and
lods
fstp
cmp
push
inc
imul
push
mov
sbb
or
and
les
sub
mov
aam
mov
je
mov
imul
and
cli
inc
shl
sub
mov
xchg
not
enter
jb
arpl
ret
sysenter
and
or
mov
mov
imul
rcr
(bad)
outs
je
mov
or
mov
dec
push
inc
hlt
mov
xor
shl
repz
je
push
sub
cmp
aas
jo
mov
lahf
mov
push
push
xchg
jmp
mov
push
adc
xor
xor
(bad)
and
out
jb
mov
push
adc
(bad)
in
mov
adc
or
adc
in
fild
adc
mov
mov
mov
aaa
sub
inc
data16
mov
ficom
xlat
test
xchg
inc
stos
ja
movs
(bad)
and
fcom
imul
addr16
fldcw
add
enter
repnz
pop
and
push
sar
jb
and
xchg
and
cmc
idiv
scas
cmp
sub
jbe
rol
std
sbb
cmp
scas
mov
xor
xor
int
push
in
scas
jnp
test
xchg
loope
aas
cmp
mov
dec
sbb
mov
xor
dec
and
dec
mov
jl
cld
sub
inc
or
mov
bsf
push
fistp
push
test
sub
pop
mov
popf
jae
scas
ret
loope
(bad)
fidiv
jmp
sbb
sbb
cmp
cdq
push
stos
pop
(bad)
loopne
mov
lods
mov
fiadd
xchg
daa
xchg
xchg
inc
adc
mov
push
inc
dec
loope
adc
sub
jmp
jb
cmp
pop
cmps
mov
inc
nop
movs
loop
fcmovu
push
loop
jno
jmp
jmp
cmp
adc
add
push
inc
sbb
mov
test
mov
mov
retf
das
mov
test
mov
lea
std
loop
inc
mov
xor
pusha
mov
fcomp
xchg
xchg
pop
mov
aaa
fnstsw
arpl
sub
out
inc
aad
mov
int3
(bad)
push
cli
and
leave
jbe
jmp
dec
jno
iret
jecxz
sar
jecxz
cs
fucom
mov
test
imul
pop
ins
out
cmc
push
pop
adc
jge
push
jo
xchg
test
std
jge
or
outs
cmp
fldenv
or
test
mov
and
iret
retf
add
inc
and
icebp
inc
dec
bound
jmp
push
pop
aad
out
stos
ss
mov
mov
mov
lods
pop
cmc
xchg
out
add
ror
xchg
pop
jp
xchg
movs
ffree
fs
outs
lods
movs
test
loop
xor
xor
sahf
jb
sbb
or
xchg
jbe
mov
pop
jmp
sbb
(bad)
and
mov
div
cmc
mul
aad
inc
pop
adc
pop
dec
or
stos
mov
xor
call
aad
call
loopne
movs
dec
arpl
sub
(bad)
aaa
fwait
repz
sbb
lds
ja
jecxz
jo
add
mov
push
hlt
fisttp
clc
loop
add
aad
aam
fwait
test
fadd
pop
xchg
mov
fild
xchg
xchg
imul
jp
adc
jg
xchg
rcl
push
sub
popf
push
xchg
dec
jle
inc
mov
mov
inc
call
sub
jae
xchg
mov
pop
cmps
mov
dec
icebp
pop
or
in
add
mov
lea
stos
out
push
cmp
push
push
cmp
xor
out
jno
xchg
pop
add
cmp
pop
aaa
push
repz
jmp
add
fmulp
hlt
(bad)
adc
movs
lahf
xor
add
xor
std
add
movs
cmp
dec
adc
pop
retf
xor
pop
xchg
push
pop
popa
shl
cld
and
mov
pop
dec
retf
aas
std
retf
jmp
repnz
sbb
cmovo
call
test
adc
ds
dec
sahf
dec
pusha
jmp
enter
retf
jnp
xor
in
scas
cmps
ins
aam
outs
mov
pop
(bad)
mov
xchg
je
jl
push
aad
repnz
bound
cmp
jl
cmp
lea
ins
ret
jmp
mov
les
or
sbb
dec
(bad)
mov
aas
jecxz
aaa
arpl
sub
rcl
mov
call
inc
fst
adc
inc
inc
stc
jge
pop
mov
std
sbb
sbb
enter
test
adc
leave
retf
mov
xor
adc
fstp
and
push
mov
cmps
sbb
or
sti
shl
jae
xchg
imul
dec
scas
xchg
retf
loop
pop
cmp
sbb
stos
push
push
jns
test
xor
outs
call
mov
cmps
ja
js
ror
mov
lods
cwde
adc
js
mov
je
sub
cs
cmp
dec
(bad)
rcl
ja
pop
dec
imul
add
pushf
xor
mov
mov
mov
in
aas
call
jnp
pop
addr16
addr16
lods
cmps
mov
xchg
pop
not
movs
and
xor
loope
ret
add
and
sbb
mov
retf
popa
movs
and
and
or
ins
cmp
mov
fld
repnz
test
repz
adc
jg
ins
inc
mov
mov
mov
push
push
addr16
ret
stos
or
xchg
sub
push
dec
repnz
fisub
test
stos
stos
inc
pop
lea
pop
and
loop
add
xor
fwait
pop
repz
data16
and
push
pop
hlt
fstp
sti
fisubr
pushf
xchg
dec
xchg
sbb
clc
pop
pop
stos
xor
jno
adc
pop
mov
fst
jo
inc
(bad)
(bad)
mov
cmp
test
push
cmp
fild
aaa
loop
dec
sub
add
or
movs
adc
or
aad
push
in
mov
sub
in
fnsave
fisttp
fsubr
cmp
push
mov
fcomp
jo
push
xchg
push
push
and
mul
ficomp
inc
xchg
dec
pop
push
jae
cmp
loope
jmp
fstp
mov
fwait
(bad)
pop
daa
cli
mov
jb
retf
out
add
(bad)
iret
sub
jbe
dec
xchg
push
mov
mov
and
push
dec
les
sbb
loopne
add
or
loope
xchg
sbb
ret
cld
or
jnp
stos
jnp
fidivr
fbstp
inc
push
xchg
xlat
and
dec
sbb
or
cmps
dec
and
mov
mov
xchg
test
aam
cmp
mov
or
push
cmp
pop
fsubr
xor
lods
je
and
retf
push
test
sub
(bad)
push
retf
xor
bound
das
xchg
xchg
sbb
push
jns
mov
and
dec
lds
fwait
cdq
mov
add
movs
out
inc
std
push
lods
scas
stc
add
push
jne
arpl
retf
nop
cmp
xor
dec
in
xchg
out
and
cmc
and
inc
in
adc
add
(bad)
arpl
xor
pop
pop
js
fbld
stos
bound
jl
mov
out
and
and
jp
mov
cmc
sbb
js
sahf
retf
fld
xchg
lods
mov
hlt
cmp
dec
sbb
add
shl
(bad)
fidiv
inc
lods
bound
je
xor
sub
popf
xor
xchg
adc
mov
stos
gs
test
mov
xor
xchg
cmp
mov
push
lahf
pop
mov
pusha
mov
xchg
sub
rcl
dec
aam
data16
push
(bad)
push
test
xchg
jo
rol
sahf
cmp
push
shr
loope
jne
xchg
xor
adc
test
jbe
int3
adc
fwait
mov
enter
scas
aas
mov
scas
in
test
xchg
test
inc
and
xchg
lahf
add
cld
push
pop
hlt
mov
(bad)
fnstcw
sti
push
and
push
pop
jle
push
test
call
je
inc
jge
jmp
mov
fwait
mov
push
add
pop
mov
outs
jl
pop
hlt
inc
out
test
add
pcmpgtb
or
xor
or
or
adc
push
mov
jns
dec
jg
in
out
in
xor
(bad)
dec
xchg
les
cmp
call
xlat
pop
xchg
mov
and
test
call
stos
push
inc
ss
pop
in
scas
aas
popa
push
sub
add
xchg
xchg
cld
fisttp
xchg
adc
add
loope
jns
in
mov
retf
inc
add
sub
inc
aaa
in
push
jno
in
dec
(bad)
or
data16
mov
rcr
mov
or
call
repnz
sub
shl
add
movs
adc
xchg
dec
pop
inc
sar
inc
(bad)
loopne
sub
stos
jns
cmp
push
jmp
aad
outs
and
loop
or
movntq
mov
mov
and
je
mov
jmp
dec
imul
push
fdivr
pop
xlat
mov
(bad)
push
(bad)
arpl
fstp
push
sub
gs
retf
test
sbb
(bad)
(bad)
not
sbb
dec
xchg
cmps
(bad)
cli
mov
jle
xchg
dec
xor
retf
shr
pop
aaa
fisub
repz
push
cs
xlat
sbb
jns
mov
mov
rol
pusha
fimul
jmp
mov
mov
adc
std
and
lods
movs
test
repnz
je
ins
loope
ficomp
add
push
out
sub
fstp
(bad)
xchg
popf
push
jnp
xor
xlat
add
lods
jno
lods
cmps
test
jo
je
mov
shl
fld
enter
movs
bound
loope
sub
xchg
mov
or
cdq
daa
sub
add
mul
and
push
cmp
push
repz
pop
popf
xchg
inc
jmp
sbb
std
dec
ret
or
xor
test
or
fcomp
pop
cmp
fistp
fwait
pop
aad
inc
cld
stos
mov
sub
ins
test
cmp
pushf
les
mov
mov
dec
(bad)
fidivr
inc
aaa
cwde
push
ret
test
sbb
lods
jge
iret
sub
xchg
xor
push
ret
nop
mov
mov
pop
ja
add
hlt
cmps
xor
in
mov
out
xor
sub
push
add
xchg
int
mov
push
xor
xor
mov
call
cmp
movs
ficomp
cwde
out
cld
cs
cmc
mov
ins
sub
xchg
sbb
ror
aam
adc
add
js
and
cmp
jmp
or
js
cmps
sub
test
xchg
out
mov
(bad)
sti
div
dec
imul
jle
mov
movs
jl
test
ds
ss
sbb
popa
and
jp
push
cmp
test
lock
imul
idiv
adc
fs
int
imul
and
and
shl
xchg
daa
int
mov
int3
fs
aam
je
xor
cmp
cmc
(bad)
(bad)
in
jb
sub
xchg
aaa
leave
mov
jecxz
aaa
dec
add
mov
movs
xchg
movs
enter
pop
scas
ror
sahf
and
mov
popa
loopne
add
pop
lds
adc
cs
in
call
add
loopne
cmps
jecxz
adc
ret
sbb
push
icebp
sti
sbb
pop
addr16
xchg
cmp
pop
aad
lds
adc
std
jmp
mov
and
les
sub
in
int3
loop
idiv
jns
out
jecxz
std
xchg
dec
sbb
fidivr
pop
lds
mov
ret
call
pop
outs
jbe
test
lock
push
adc
push
ins
ss
xchg
cmp
aas
xchg
jmp
and
sub
test
loopne
iret
and
iret
in
jmp
mov
jno
cwde
retf
daa
xor
push
(bad)
mov
fdecstp
mov
outs
fiadd
fwait
add
(bad)
neg
lock
pushf
xchg
test
rol
push
pusha
fistp
mov
cmps
dec
or
mov
jl
sbb
push
adc
push
addr16
retf
jmp
sbb
add
cmp
jnp
sub
leave
jno
movs
in
imul
pop
test
or
arpl
inc
aad
mov
loop
sub
jbe
pop
cmp
or
add
sbb
rcl
lahf
std
xchg
push
lahf
test
pop
out
rcl
pop
xchg
push
jg
mov
idiv
sub
jno
(bad)
jnp
(bad)
jo
xor
daa
mov
ja
fcom
es
dec
scas
inc
adc
cmp
mov
aaa
scas
aaa
loope
lods
outs
jle
push
loopne
mov
jno
sub
inc
mov
std
iret
test
test
mov
cs
jecxz
cmp
loopne
cmp
sbb
bound
and
sbb
pop
fs
fisttp
out
lahf
push
sar
sti
fs
aad
push
js
fstp
inc
cmp
imul
mov
das
ins
leave
xchg
or
add
xor
int3
dec
not
pop
js
sbb
pushf
xchg
stos
push
pop
outs
(bad)
push
sbb
fstp
cmp
cs
call
or
mov
pop
inc
xchg
push
test
and
adc
shr
mov
mov
add
std
or
enter
mov
(bad)
scas
sub
or
sbb
dec
arpl
sub
mov
mov
bt
mov
mov
or
jecxz
jl
adc
mov
sub
sub
add
fistp
sbb
and
scas
add
(bad)
cmp
rcr
jle
aam
cmp
push
push
xor
fnstcw
shl
arpl
and
(bad)
scas
data16
jo
or
int
les
fistp
mov
into
push
or
pusha
or
and
xchg
jnp
mov
ds
xchg
jae
ja
xchg
inc
mov
push
pop
(bad)
bound
sbb
lock
les
test
sahf
leave
out
(bad)
dec
imul
xor
iret
jge
push
int3
xor
daa
xlat
pop
cdq
jno
sub
xor
jno
sbb
pop
lea
inc
xchg
repz
pusha
lods
mov
jg
and
mov
add
or
and
call
outs
pusha
into
shl
ja
push
ret
scas
pusha
ja
data16
stos
dec
xchg
adc
leave
sbb
fs
les
cwde
in
fwait
js
das
xchg
fild
fwait
or
add
push
push
jnp
mov
mov
adc
(bad)
rcl
sbb
or
arpl
stos
push
ficomp
movs
add
adc
add
aad
gs
clc
or
addr16
retf
lahf
inc
test
outs
imul
iret
lods
mov
sub
jmp
stc
push
lods
push
sbb
in
repz
out
aam
mov
mov
push
inc
or
scas
fsubrp
mov
into
jns
iret
inc
and
(bad)
loope
mov
cmps
test
push
popf
push
ss
jmp
dec
scas
inc
jge
dec
retf
test
enter
inc
mov
rol
push
jns
xlat
(bad)
stos
mov
shl
adc
cld
(bad)
xor
inc
sub
xchg
iret
pop
xor
nop
add
inc
jae
shl
sbb
jmp
loope
pusha
jmp
and
jne
ins
mov
push
lods
xchg
mov
test
cmp
cmp
add
mov
leave
lea
mov
stos
push
cmp
mov
mov
call
(bad)
rol
sti
jne
mov
jge
push
xor
into
(bad)
sbb
jg
cmp
pop
lods
cld
pop
loop
adc
cmp
cmps
(bad)
fnstcw
sbb
lods
out
adc
jne
inc
jb
or
les
js
test
lock
push
loopne
add
push
or
leave
jg
push
call
adc
xchg
cmp
sbb
call
xor
fsub
cmp
sti
ins
jg
xor
inc
ret
push
or
jp
sbb
inc
into
cmp
ss
clc
mov
and
(bad)
in
out
das
add
adc
lods
clc
xchg
push
stos
ret
jae
mov
test
test
int
pop
fbstp
(bad)
mov
push
cmp
add
jmp
pop
(bad)
cmp
inc
cdq
dec
ficom
mov
sbb
pop
das
jb
ror
jecxz
pop
push
(bad)
dec
test
int
fsubr
cli
mov
lods
inc
push
xchg
sahf
(bad)
xor
and
pop
sbb
(bad)
add
inc
pop
jo
pop
loop
xchg
outs
addr16
imul
lock
and
sub
sbb
mov
sbb
addr16
adc
cs
push
(bad)
mov
in
dec
cmp
jl
scas
mov
lock
jle
rcr
stos
ret
xchg
sub
sbb
fnstcw
sahf
sub
js
mov
dec
loope
js
stos
pop
or
xor
sbb
dec
dec
nop
mov
and
pop
ins
mov
adc
aad
cmps
xor
mov
nop
(bad)
cld
pop
mov
mov
push
or
push
push
sub
call
loopne
fwait
pop
or
sar
or
les
ss
pop
push
cmp
jmp
adc
mov
mov
mov
jno
lods
pop
pusha
and
pop
cmp
shl
inc
fcmove
sub
repz
jno
lds
cmp
movs
fnstcw
cmp
scas
fs
sbb
shr
in
push
xchg
mov
and
shr
mov
and
rcl
mov
or
mov
ret
mov
int3
mov
pop
mov
in
scas
inc
pop
pop
and
jp
cmps
hlt
mov
(bad)
aam
mov
cld
outs
mov
jne
(bad)
mov
popa
adc
adc
outs
mov
xchg
and
jp
add
or
or
jg
add
je
jmp
fsubr
cmpxchg
test
xor
push
pop
cli
test
lahf
jb
ins
xchg
jge
xor
push
dec
mov
iret
and
mov
ret
mov
adc
lea
test
push
lds
xor
bound
repnz
lahf
mov
mov
outs
mov
retf
loop
and
or
mov
call
sbb
loope
mov
mov
add
js
out
or
ret
std
sbb
and
les
pushf
xchg
push
fldcw
movs
adc
test
div
xor
and
pushf
adc
pop
mov
xor
jl
mov
and
(bad)
out
xor
cmp
push
xor
xor
mov
adc
lock
and
mov
inc
push
into
push
out
fldcw
push
loop
adc
ins
push
shl
(bad)
movs
dec
lods
repz
daa
out
jmp
xlat
in
xor
push
leave
pop
pop
inc
jae
(bad)
pushw
out
xor
push
push
lods
sub
pusha
jmp
int3
jno
sbb
dec
adc
(bad)
imul
mov
mov
leave
mov
int3
test
(bad)
xor
aad
sahf
inc
sar
jmp
rol
je
(bad)
lods
mov
sbb
cmp
lods
or
popf
and
mov
or
adc
add
push
or
sub
outs
or
sahf
push
ror
test
aas
je
mov
lahf
or
lahf
mov
jmp
jbe
out
cmp
xchg
cmp
cmps
aas
jo
les
jmp
ja
inc
mov
inc
push
inc
mov
fisub
sbb
push
test
mov
loope
(bad)
mov
jmp
xor
push
fbstp
data16
push
sub
pop
mov
stos
lea
es
rol
lahf
mov
ror
xor
push
add
jns
sub
into
lods
xchg
adc
inc
sub
add
mov
mov
mov
test
push
cmc
repz
jns
inc
adc
mov
inc
(bad)
push
dec
pop
pop
popa
mov
sub
xor
(bad)
cmp
xor
push
jmp
jg
stc
out
std
std
jne
mov
scas
imul
adc
js
repz
inc
repz
cmp
in
call
aas
mov
stos
fiadd
inc
or
mov
push
test
xchg
push
imul
popf
fld
cmps
cmp
push
mov
movs
or
mov
popf
in
jae
or
ror
inc
inc
push
jmp
outs
addr16
fdivr
push
(bad)
push
aad
jae
ja
mov
jne
cmc
xchg
jns
adc
xlat
xor
jnp
and
stos
aaa
aam
inc
inc
scas
cwde
and
jne
hlt
gs
sub
fst
cwde
(bad)
mov
adc
inc
out
nop
jge
fimul
repnz
(bad)
ret
adc
rcl
fild
(bad)
cmps
cmps
or
out
idiv
data16
cmp
or
push
fidivr
div
ja
ror
imul
adc
dec
lods
addr16
shl
mov
mov
dec
mov
das
push
out
inc
inc
test
sub
inc
add
ins
dec
mov
pop
jl
xor
je
mov
enter
out
ins
push
in
inc
mov
cmp
jb
add
adc
pop
icebp
fmul
jae
je
lock
stos
adc
cmovg
ret
jno
sbb
cmp
mov
inc
(bad)
into
hlt
fdiv
stc
(bad)
std
ss
ror
push
mov
test
dec
repz
call
xchg
lods
cmc
pop
and
and
test
mov
push
push
jae
add
dec
es
imul
cld
xor
cmp
pop
adc
mov
mov
(bad)
enter
sbb
sahf
pop
mov
idiv
and
les
jl
and
outs
cmc
rol
ret
test
push
pop
push
iret
jmp
mov
imul
add
(bad)
ror
or
stc
rol
push
mov
pop
(bad)
dec
sbb
aas
(bad)
les
sti
shl
or
jmp
mov
iret
test
ds
bound
or
pop
(bad)
adc
jg
aad
or
out
cmc
aam
pop
pop
and
ror
adc
out
sbb
repz
cmp
inc
dec
fld
xchg
ja
inc
push
push
push
(bad)
ins
mov
imul
inc
mov
in
fsubr
mov
mov
bound
stos
repz
pushf
es
adc
ret
test
push
scas
gs
pop
scas
pusha
outs
pop
xor
pop
es
iret
fs
fiadd
scas
mov
test
clc
into
add
sti
pop
std
rol
ds
mov
cmps
push
cmp
mov
test
xor
push
aam
pop
lahf
push
mov
push
adc
lahf
mov
adc
push
jne
mov
mov
pop
mov
adc
jle
adc
jl
mov
push
and
bound
(bad)
lods
adc
es
sub
jbe
repz
or
xor
(bad)
out
adc
mov
dec
mov
shr
xchg
ja
mov
mov
jg
pop
sub
and
or
int3
jmp
(bad)
cli
ins
inc
mov
shl
sub
iret
xchg
push
dec
jecxz
fsub
sbb
jno
in
mov
movs
imul
test
aad
jno
(bad)
sar
pushf
or
retf
scas
and
mov
jnp
mov
scas
sub
das
push
sti
imul
sub
cmps
jno
cli
and
outs
fs
pusha
adc
in
jmp
jnp
mov
cmc
xchg
mov
test
and
out
or
pop
popf
dec
add
sar
or
ds
cs
pop
sbb
jecxz
inc
inc
in
addr16
arpl
adc
cmp
inc
and
xor
shr
pop
pop
jecxz
fsub
mov
mov
or
out
out
lods
cmp
shl
icebp
xor
and
jge
pop
dec
or
data16
mov
(bad)
push
push
in
dec
adc
pusha
inc
(bad)
ret
call
jge
add
into
js
sbb
dec
push
jle
add
push
mov
lods
push
rcr
ror
cwde
add
cdq
test
push
sub
push
dec
push
outs
sar
jnp
stc
cmc
add
xor
out
sub
jge
loop
and
fsubr
cmovae
movs
je
mov
add
xor
mov
push
pop
out
and
mov
push
cmps
jmp
into
mov
inc
cmps
jp
dec
cwde
daa
std
in
shr
jecxz
sbb
imul
lahf
std
fnstenvw
fadd
cmps
or
pop
xchg
cmp
(bad)
mov
pop
test
in
push
and
cwde
mov
pop
and
mov
mov
ss
rol
addr16
movs
int3
jb
dec
inc
mov
sub
data16
and
push
cld
mov
pop
dec
mov
mov
(bad)
enter
cwde
fiadd
sub
test
pop
and
mov
pop
dec
xchg
leave
jp
ins
pop
popa
adc
sub
test
inc
cmp
and
shr
mov
and
shl
jmp
xchg
shl
sti
inc
hlt
test
adc
in
je
sub
loopne
dec
xchg
xchg
xchg
inc
orps
mov
fxtract
sar
push
ins
sbb
shr
es
rcr
mov
sti
cmp
rcl
or
stc
sbb
or
pop
lds
push
inc
inc
xchg
push
sbb
dec
(bad)
in
mov
(bad)
fistp
sti
cmp
ins
sbb
mov
imul
lock
(bad)
or
lea
dec
out
push
js
sbb
jmp
cdq
add
nop
mov
sub
or
out
rcr
pusha
push
call
dec
xchg
mov
add
mov
inc
mov
out
pop
loop
xor
scas
mov
mov
mov
enter
gs
lods
xor
loope
pop
jl
aaa
pop
mov
or
je
inc
fnsave
push
push
setae
inc
sub
nop
pop
pop
in
push
dec
mov
xlat
jmp
adc
pop
(bad)
sbb
xor
nop
lock
push
lahf
dec
sub
out
repnz
xchg
cmp
aaa
test
jb
xlat
push
mov
mov
pop
and
retf
sar
cmc
xchg
and
lods
push
push
push
mov
ret
loope
cmp
xor
dec
mov
enter
inc
test
mov
pop
mov
in
push
arpl
jle
sub
add
dec
jl
push
cmp
inc
or
sub
and
and
mov
test
bound
icebp
or
lea
ja
adc
sub
in
pslld
adc
jge
mov
add
sub
clc
adc
inc
mov
sbb
ror
movs
dec
inc
pushf
xor
jmp
iret
test
and
mov
aam
(bad)
xor
cmp
arpl
aas
fmul
cld
repnz
cmp
stc
dec
leave
adc
dec
dec
aaa
cdq
fnstcw
imul
cmp
shl
add
addr16
outs
ret
and
stos
test
push
and
jo
sub
fstp
jo
push
lds
cmp
adc
movs
mov
cli
or
pop
push
jae
addr16
xchg
cmp
or
sar
xor
ret
test
inc
mul
pop
cld
jge
push
cmp
mov
mul
std
lea
adc
call
and
addr16
fstp
mov
jmp
nop
adc
loopne
(bad)
mov
ficom
jo
imul
jle
sub
and
ja
mov
jle
ds
ret
nop
push
mov
mov
xchg
mov
push
shr
shl
inc
mov
dec
xor
pop
(bad)
push
jmp
adc
xchg
nop
aaa
jl
mov
loop
test
xor
stos
adc
jne
mov
pop
(bad)
sbb
ins
cmp
pop
mov
cli
rol
push
mov
mov
outs
pop
xor
mov
sbb
enter
xor
repz
xchg
push
(bad)
xchg
add
jbe
jmp
dec
ud2
sub
call
daa
xor
inc
iret
adc
scas
(bad)
fimul
pop
(bad)
call
retf
ucomiss
sbb
lods
dec
push
(bad)
ja
mov
aaa
rol
push
rcl
cmp
(bad)
rcr
fldenv
mov
mov
jo
(bad)
repz
pop
xor
lods
xor
adc
push
or
push
xchg
dec
mov
fwait
mov
lods
call
sti
ret
mov
mov
fcomp
inc
ja
cmp
mov
test
mov
mov
mov
mov
lock
cmps
shl
sbb
int3
cbw
jb
lock
mov
outs
jp
and
lea
mov
dec
outs
adc
mov
mov
jno
dec
inc
ficomp
sbb
dec
into
push
adc
inc
repz
inc
cmp
ss
or
loopne
sub
arpl
jb
mov
das
fcom
fsub
clc
and
fimul
xchg
icebp
pop
and
push
out
ret
ins
xchg
fwait
out
outs
jne
sbb
mov
test
sahf
psraw
pop
popa
jbe
mov
stc
jle
mov
cdq
mov
cmc
outs
pop
(bad)
jmp
push
sbb
ror
cmp
fistp
xchg
and
call
scas
sbb
pop
and
mov
dec
mov
lods
cmp
cdq
aad
data16
pop
(bad)
std
sbb
adc
pop
xchg
fbstp
fimul
js
add
jmp
icebp
ins
movs
xchg
mov
pop
out
data16
mov
fsub
sbb
sbb
cld
ins
xchg
fld
stos
xchg
add
movs
mov
leave
adc
mov
out
sbb
repz
mov
loop
pop
inc
int
mov
std
add
jg
jb
pushf
adc
pop
sti
xchg
ret
movs
stc
clc
loopne
sub
mov
dec
cwde
fwait
cmp
mov
sbb
retf
and
int
mov
loope
sub
loopne
in
inc
add
dec
push
adc
push
cdq
lods
sbb
push
mov
mov
cmp
imul
cmc
mov
sbb
lods
fs
xor
jg
push
adc
inc
or
dec
pop
push
loop
pop
fwait
das
cmp
call
inc
jmp
ret
xor
lds
xor
xchg
xor
jmp
pop
or
cmp
stc
sbb
or
fild
iret
dec
dec
ficomp
pusha
xchg
retf
cmps
syscall
shl
stos
repnz
sti
push
int
dec
inc
or
das
or
jecxz
fyl2xp1
xor
sbb
inc
bsf
sub
or
pop
iret
ret
ror
adc
retf
pop
add
lahf
push
icebp
mov
je
xchg
mov
mov
mov
outs
aad
aaa
mov
or
mov
pop
add
out
jge
aaa
enter
xor
xlat
add
inc
or
inc
xchg
js
sbb
addr16
adc
mov
loope
in
or
leave
push
cld
loop
and
sub
mov
or
lahf
pop
retf
jno
mov
ins
cmp
xchg
mov
scas
dec
xchg
in
lea
into
inc
jge
mov
cwde
lods
adc
xchg
stos
mov
movs
sbb
xor
push
xor
pop
sbb
add
rcr
add
or
ss
aad
or
jne
lods
jo
push
mov
enter
jno
mov
pop
cmp
ds
idiv
lods
sahf
ja
cs
out
jae
inc
inc
jg
add
loop
push
inc
mov
pop
(bad)
aad
inc
cmp
aam
xor
bound
fsub
jl
lds
push
icebp
jo
dec
in
leave
movs
fiadd
sub
scas
push
dec
and
mov
add
or
outs
loop
(bad)
divps
jge
scas
xchg
mov
or
loop
mov
fild
dec
mov
or
stc
sub
sbb
lds
push
and
add
sub
psubsb
push
cmp
and
ins
aas
stc
dec
cwde
cli
hlt
sub
xor
stos
movsx
xchg
push
inc
mov
(bad)
jb
or
jge
in
int
jb
ret
(bad)
or
mov
push
std
add
aam
xor
jl
jo
add
loop
sub
addr16
dec
jnp
dec
fiadd
jno
pop
(bad)
dec
or
dec
push
sub
movs
xchg
fnstenv
mov
sbb
sbb
aad
sbb
jns
leave
sahf
push
cdq
fdivr
inc
jnp
inc
in
(bad)
xor
lahf
sub
pop
inc
xor
das
mov
push
and
cmp
xchg
das
sub
out
push
neg
popa
lods
sbb
pop
push
fidivr
dec
push
bound
scas
jp
and
push
es
arpl
mov
xlat
scas
xor
rcl
mov
xchg
sub
(bad)
ins
inc
push
pop
sar
sub
xor
call
xchg
test
add
out
imul
mov
pop
push
rcl
pop
xor
push
fist
stos
push
movs
bound
xchg
push
push
int3
les
in
mov
cmps
jmp
out
jmp
js
jb
loopne
mov
jp
dec
lods
into
adc
inc
push
mov
push
lock
mov
jae
push
push
jnp
out
mov
cwde
jb
jmp
movs
pop
(bad)
sub
aas
jp
mov
jecxz
sbb
push
push
out
push
xchg
ins
outs
push
neg
(bad)
mov
cmc
push
sbb
add
in
in
jge
retf
mov
in
adc
(bad)
cli
pop
and
arpl
mov
xor
neg
enter
mov
or
inc
or
cmc
mov
push
xor
jecxz
inc
repnz
mov
push
push
xchg
cs
inc
jns
scas
cmp
clc
jbe
pop
mov
ss
or
std
push
mov
out
sbb
icebp
pusha
jl
and
pop
rcr
std
cs
pusha
dec
mul
inc
cmps
pop
lods
in
out
scas
fsub
xor
cmp
out
out
cmp
sbb
retf
jbe
cmp
jo
int
sbb
cs
movs
retf
sub
imul
xchg
leave
dec
and
inc
sbb
sbb
pop
jbe
js
xchg
jmp
cmp
fst
pop
(bad)
fist
jmp
push
test
sbb
imul
sbb
mov
int
pushf
adc
xor
outs
fisttp
jno
inc
fcomip
sub
bound
adc
cmp
dec
inc
or
add
fdivp
dec
loop
hlt
xor
push
mov
xlat
and
jge
loope
retf
push
sub
retf
jmp
shl
cmps
hlt
adc
fist
pushf
fucomp
adc
xchg
mov
adc
mov
stc
test
jo
inc
mov
retf
mov
fnstsw
and
dec
dec
xchg
outs
ss
inc
mov
popa
pop
xor
xor
xor
lds
jmp
inc
push
cmp
(bad)
ins
ins
adc
sbb
(bad)
les
test
adc
xor
outs
out
call
or
jmp
das
inc
mov
bnd
jl
and
adc
mov
aaa
inc
mov
ds
push
test
jp
jg
xchg
arpl
mov
dec
addr16
call
ss
popa
adc
pop
daa
std
jl
and
mov
rol
mov
jb
add
or
sbb
mov
sar
retf
mov
dec
lea
imul
repnz
push
xor
sbb
popf
iret
dec
jbe
ja
push
push
test
push
int
leave
je
call
add
jle
out
popa
fld
fwait
mov
enter
std
or
dec
add
mov
sub
ins
xor
mov
adc
or
push
and
repnz
in
les
or
je
sub
cld
cmp
xor
and
pusha
sub
lods
dec
cmp
call
mov
push
call
(bad)
cdq
or
cmps
call
imul
dec
xlat
cdq
xchg
jp
shl
ins
enter
scas
popf
sbb
jbe
mov
lahf
cmp
int3
adc
dec
dec
icebp
mov
pop
mov
das
pop
jno
push
mov
mov
mov
sbb
adc
and
sti
cmps
inc
jl
push
scas
test
lock
test
retw
add
(bad)
cmp
push
addr16
dec
push
test
repz
das
rcl
xor
jae
(bad)
test
movs
jb
jecxz
repnz
jp
pop
aad
pop
cmp
cmc
add
dec
pushf
pop
push
push
clc
mov
in
xchg
and
rcr
add
xchg
adc
adc
int3
fcom
sbb
neg
cli
fisub
sub
lods
movs
out
fistp
clc
into
adc
inc
or
outs
xchg
cmps
push
pop
in
inc
sub
adc
mov
daa
pop
sbb
rcl
(bad)
push
mov
jle
(bad)
scas
in
movs
jo
xor
(bad)
mov
stos
out
mov
push
add
add
jl
addr16
out
test
mov
shl
xchg
in
icebp
dec
loope
imul
das
cmp
jne
test
sub
daa
mov
test
in
mov
xor
xchg
inc
(bad)
pop
cwd
das
gs
inc
movs
or
fsub
jmp
jg
div
inc
pusha
mov
bound
nop
lahf
shr
(bad)
popf
(bad)
mulps
jno
outs
das
sub
movs
outs
mul
xchg
xchg
mov
ja
icebp
or
xor
mov
fs
js
mov
mov
sbb
fcom
or
loop
js
imul
adc
dec
xchg
repnz
xor
out
push
lods
adc
push
inc
(bad)
pop
push
(bad)
cmp
movs
add
add
add
rcl
pop
mov
push
cmps
gs
sub
fstp
outs
adc
pop
fidiv
gs
das
cmp
adc
xchg
in
cmc
adc
in
enter
add
in
enter
iretw
jp
add
and
cmc
push
pop
mov
adc
adc
movs
loope
ret
xor
cmp
repz
jnp
repz
test
imul
dec
cdq
push
in
test
push
jbe
add
lods
push
dec
and
jnp
sub
sub
inc
jp
aaa
push
imul
adc
lock
imul
stos
push
(bad)
mov
leave
push
rol
lods
imul
cdq
push
sub
sub
sbb
adc
retf
sbb
inc
push
mov
cmp
push
jae
mov
and
mov
sub
pusha
mov
pop
add
fwait
test
add
jne
addr16
mov
rcl
pusha
xlat
mov
pop
or
add
loopne
jmp
fcmovnbe
lds
mov
retf
pop
adc
ins
push
repz
aam
ss
dec
int
aas
adc
mov
dec
fsubp
sbb
or
sub
dec
cdq
mov
sbb
xchg
std
shr
dec
dec
ror
(bad)
mov
bound
outs
sbb
in
add
scas
mov
stos
rol
pop
call
mov
jg
les
xor
inc
loop
and
aad
hlt
dec
xchg
jns
setl
adc
jmp
mov
mov
mov
sbb
adc
fimul
data16
pop
fmul
retf
dec
ficom
or
cmps
xlat
es
int3
xchg
jno
mov
imul
(bad)
mov
push
xchg
pop
push
push
lahf
lea
js
loope
popa
in
scas
pop
sbb
test
and
popa
outs
and
or
lock
fild
push
xchg
hlt
xchg
test
mov
pop
js
jne
cmc
popf
cli
ss
cmp
jmp
fwait
pop
pop
cwde
inc
jmp
pop
retf
test
stos
call
add
cwde
das
and
mov
(bad)
inc
test
shl
test
(bad)
imul
stc
stos
xor
push
daa
(bad)
arpl
xchg
pusha
and
xchg
test
mov
retf
(bad)
ja
stc
sub
(bad)
pop
cmp
loop
push
stos
mov
ja
or
and
dec
push
mov
and
fcom
add
int3
cmps
test
ret
int
jb
test
bound
aaa
popf
scas
sub
in
xor
push
ret
retf
ins
nop
and
arpl
retf
add
call
arpl
(bad)
out
jno
add
pop
add
add
pushf
dec
fiadd
mov
push
or
iret
dec
sub
pop
add
xchg
out
push
add
call
je
and
mov
pop
inc
jb
data16
mov
mov
xlat
jge
xor
(bad)
jg
popf
ins
pop
cmp
add
iret
mov
dec
aaa
pop
mov
int
imul
adc
(bad)
int
jp
out
pop
add
dec
mov
int
jecxz
fs
dec
dec
gs
inc
mov
addr16
sbb
adc
cmp
adc
fsubr
addr16
push
stos
push
stc
and
cmps
stc
xchg
aas
xchg
(bad)
or
adc
outs
out
lds
ins
ds
jo
shl
fild
or
pop
mov
rcr
outs
ss
sbb
push
jg
add
adc
ret
sar
mov
popf
int
mov
push
stos
test
int
dec
sub
lods
pop
push
pop
jg
and
xchg
pushf
out
dec
dec
push
adc
jo
sub
popf
and
icebp
push
popf
dec
pop
in
sti
std
mov
fdiv
stc
pop
xor
nop
stos
mul
sub
sbb
mul
xchg
push
cdq
fst
or
pop
popa
cmp
or
call
movs
imul
mov
cmps
push
(bad)
jecxz
fwait
enter
jmp
je
mov
jo
loope
jne
add
lahf
test
enter
mov
(bad)
test
(bad)
fdivr
ds
mov
mov
mov
aaa
mov
push
fnstenv
jo
scas
shl
in
aaa
jmp
in
test
inc
ficomp
add
bound
mov
pop
pusha
pop
lds
cmp
push
or
cmps
mov
lea
push
cli
xor
out
retf
js
std
or
lock
shl
stos
(bad)
mov
sub
xor
test
fdiv
(bad)
repnz
scas
pop
jecxz
movntq
and
call
or
movs
fst
ja
mov
jle
xchg
mov
repnz
mov
sub
jl
pop
out
cs
inc
(bad)
fcmovnu
push
ja
adc
lock
adc
pushf
mov
shl
sub
push
gs
jecxz
jns
push
div
outs
cmp
les
push
xlat
(bad)
(bad)
push
push
(bad)
ds
das
fisttp
inc
xchg
sub
xchg
movs
test
(bad)
cmp
out
pusha
push
jno
call
cmc
std
cmp
mov
int
test
push
int
outs
xor
pop
mov
cmp
repnz
sub
outs
add
das
je
cmp
inc
dec
and
imul
or
ins
fist
and
fcom
fdiv
and
mov
sub
pop
xor
ins
jp
(bad)
adc
adc
sub
int
int3
cmp
mov
sbb
sbb
jmp
xchg
pop
std
in
fs
pop
int3
stos
fstsw
jecxz
jmp
or
and
xor
mov
inc
mov
adc
push
xlat
jb
jmp
push
or
add
cmp
inc
mov
cmp
inc
ret
mov
jbe
fsubr
loop
sbb
hlt
pop
jne
neg
test
push
inc
shr
fbld
out
dec
and
jne
(bad)
jmp
(bad)
dec
test
loope
ss
cmp
inc
jg
pushf
lea
mov
cmp
adc
adc
mov
pop
push
inc
rcr
iret
test
mov
jne
ja
int3
(bad)
bound
pop
and
les
das
test
hlt
cmp
cs
repnz
ret
icebp
mov
push
dec
stos
adc
sbb
and
push
sbb
inc
ja
or
shl
fdiv
jo
adc
in
stos
out
and
sub
enter
loope
mov
lea
mov
fisttp
add
aam
int3
scas
(bad)
mov
ins
inc
push
sub
push
mov
aad
fs
adc
mov
sbb
inc
into
(bad)
fidivr
mov
gs
xlat
pushf
lea
scas
mov
push
xor
or
cdq
push
sub
nop
mov
inc
(bad)
cmp
btc
movs
sub
push
add
push
es
mov
iret
pushf
loopne
test
pop
gs
jl
jo
mov
cmp
add
inc
bound
shr
add
sar
fs
or
sbb
loope
xchg
int
push
sar
ror
cmc
movs
inc
mov
loopne
jbe
cld
sub
pop
aaa
mov
outs
fmul
dec
popa
xchg
repnz
xor
cmp
repnz
pop
aas
cs
mov
ins
push
jl
sub
dec
push
and
out
and
call
pop
mov
inc
push
mov
shl
dec
ret
inc
sub
mov
scas
stos
dec
sbb
sub
daa
rcr
rcl
ret
pusha
outs
or
ret
pop
add
ins
hlt
cdq
adc
imul
rol
popf
dec
add
dec
jmp
dec
fst
mov
pusha
and
jecxz
inc
fwait
(bad)
and
inc
mov
xor
lods
call
push
lods
ret
in
and
sti
outs
gs
mov
dec
xchg
mov
inc
lds
imul
push
xor
mov
shl
scas
fadd
cmp
test
data16
sahf
pop
and
rol
mov
sbb
adc
addr16
inc
adc
scas
retf
sbb
push
push
clc
xchg
xor
pusha
sbb
test
rcr
int
lea
xor
lock
xchg
xlat
xchg
jge
add
hlt
outs
sbb
and
adc
or
mov
xlat
xchg
shl
aaa
cli
sbb
test
inc
lods
sti
lahf
outs
ret
xor
adc
dec
fst
stos
cld
mov
aad
add
dec
imul
call
sbb
push
cmp
outs
movs
mov
add
sbb
or
sub
inc
call
int
jle
icebp
mov
jg
jbe
xor
jb
retf
int
aam
lods
clc
jbe
arpl
dec
push
ss
push
or
hlt
mov
aam
adc
jbe
xor
ins
pmulhuw
and
and
hlt
rcl
(bad)
dec
je
clc
mov
popf
adc
(bad)
push
fs
test
sub
data16
mov
fsub
mov
fs
jl
inc
div
adc
add
push
test
lock
sbb
cld
jb
sbb
fidiv
stos
shl
mov
popa
add
push
mov
xor
push
mov
xchg
bound
pop
xchg
cmp
repz
mov
mov
rol
jmp
jb
dec
mov
pop
(bad)
pop
sar
idiv
jns
mov
cmps
mov
jmp
bnd
or
test
xchg
push
push
pop
cmp
mov
xchg
sub
(bad)
(bad)
cld
adc
aas
fnstenv
push
hlt
or
xchg
sahf
jo
retf
adc
push
retf
je
adc
xchg
mov
mov
cmovg
int3
rol
mov
lahf
mov
ds
aam
dec
mov
loopne
and
movs
inc
sbb
jnp
and
aas
ins
mov
sbb
mov
push
sti
and
pop
dec
mov
je
mov
mov
(bad)
mov
sbb
test
loop
jg
addr16
mov
repnz
cmp
repnz
pop
jae
pop
pop
sub
gs
xor
dec
cdq
arpl
cdq
pop
push
or
into
mov
hlt
div
mov
sbb
jno
mov
sbb
lahf
pushf
mov
adc
inc
adc
lea
jo
jns
inc
mov
xor
bound
sbb
(bad)
jmp
not
push
jo
pop
lock
ror
xchg
dec
icebp
jle
les
imul
xchg
leave
cmps
(bad)
not
pop
mov
cmp
pop
(bad)
mov
ror
lea
sub
push
jb
test
les
jg
jp
cwde
sar
dec
sub
data16
push
xor
scas
ret
idiv
pop
adc
push
sti
(bad)
or
and
in
cmp
pop
pop
ds
arpl
or
pop
or
dec
and
leave
pop
rol
xlat
outs
mov
(bad)
mov
jg
in
imul
ins
jmp
mov
daa
inc
adc
orps
inc
movs
push
mov
cmps
fwait
in
ret
xchg
sar
leave
adc
ins
outs
imul
retf
stc
cs
imul
push
fs
xor
mul
adc
xchg
bound
and
mov
fs
retf
sti
mov
dec
scas
dec
lock
ins
fcomp
mov
fwait
mov
mov
mov
outs
xor
shl
xor
outs
sbb
fcomp
mov
das
xchg
call
not
mov
adc
and
out
inc
bound
lods
cmp
fs
push
les
or
xor
nop
push
pop
jo
mov
loope
loope
fwait
pushf
lods
or
and
outs
movs
call
mov
lods
lock
aas
int
cmp
rcl
adc
jg
(bad)
scas
adc
(bad)
mov
es
leave
movs
ins
pop
mov
cwde
sbb
push
adc
arpl
(bad)
mov
sbb
mov
mov
(bad)
jo
cmp
das
jnp
push
loopne
les
loope
aam
clc
and
shl
dec
inc
pusha
aaa
add
inc
mov
or
push
add
loopne
stos
adc
pop
movs
popf
jb
out
in
ret
pushf
ret
scas
cmp
(bad)
mov
test
arpl
aad
addr16
cmp
push
outs
cmp
mov
inc
cmps
sub
pop
cld
add
or
jne
adc
push
(bad)
ins
pop
sbb
je
arpl
int3
sbb
and
aad
mov
push
xor
inc
push
scas
or
inc
jbe
jl
sahf
cmp
jbe
pusha
mov
lds
enter
sub
xchg
mov
ret
pop
xchg
inc
aad
xchg
or
call
dec
(bad)
and
out
scas
inc
mov
or
jne
jmp
les
ja
test
sub
sub
cmp
dec
cmp
fisttp
push
xor
jmp
arpl
cwde
jp
in
fild
push
ret
sub
(bad)
jle
das
xchg
adc
xor
mov
push
mov
jbe
push
xchg
stc
ja
mov
jno
mov
stc
je
pushf
sbb
out
repz
add
adc
icebp
sbb
test
inc
jno
jmp
mov
(bad)
and
gs
(bad)
movntq
aas
mov
jmp
fldenv
retf
enter
cmp
in
test
jns
or
jno
jmp
pop
in
cmp
push
mov
mov
push
and
cmps
mov
(bad)
call
cld
std
ffreep
scas
pop
cmp
jns
push
mov
out
rcr
mov
sub
jo
ret
or
das
adc
aaa
stos
pop
test
xchg
jle
mov
jne
lods
cmp
retf
xor
jns
lahf
outs
sub
jg
xchg
(bad)
cld
int
mov
mov
cmp
mov
cmp
push
repz
fst
es
rcr
sub
das
jmp
xor
jmp
mov
movs
push
sub
push
cli
test
push
out
sub
dec
pop
mov
add
mov
dec
push
mov
push
mov
(bad)
push
sbb
loop
cmps
push
stos
xchg
sti
xor
mov
adc
jne
daa
(bad)
push
popf
mov
ja
out
imul
dec
jno
xchg
scas
or
mov
scas
push
adc
adc
xchg
pop
movs
mov
adc
xchg
in
dec
jno
mov
push
out
add
pop
aad
dec
dec
hlt
sub
ins
push
call
mov
jp
(bad)
cld
xchg
scas
sbb
lds
adc
arpl
sub
mov
jle
jnp
ss
arpl
mov
out
outs
repnz
and
jo
retf
and
adc
or
cmps
popf
std
dec
cmovb
xor
scas
les
pop
jns
adc
xor
pop
icebp
and
adc
(bad)
jns
push
lea
pop
in
jmp
pop
rsm
nop
daa
cdq
cmps
mov
push
mov
cmp
loopne
test
push
mov
sti
repz
mov
xor
ds
mov
pop
xchg
loope
sar
lock
adc
dec
and
inc
adc
addr16
scas
push
clc
pop
test
clc
shr
sti
ret
add
cmp
movs
frstor
retf
jmp
add
pop
mov
sub
and
xor
or
imul
xchg
les
sub
lods
enter
sbb
push
shr
loope
jge
cmp
jmp
xlat
test
les
push
in
fisubr
repnz
in
pop
push
lods
or
add
sub
push
and
pop
jns
xchg
jne
test
mov
xchg
test
in
daa
xor
jmp
clc
div
push
jo
dec
(bad)
out
cmp
imul
test
ret
addr16
sub
dec
dec
or
js
sbb
mov
enter
fs
add
mov
aad
xor
xor
shl
dec
jno
daa
cmc
jmp
mov
pop
push
jno
ds
mov
iret
bound
mov
shr
fstp
inc
xchg
(bad)
mov
clc
jno
outs
test
xchg
add
aam
retf
sub
ja
xchg
add
or
dec
or
cwde
mov
pop
jnp
cmp
movs
stos
mov
loopne
in
and
outs
sbb
loopne
xchg
shl
loopne
(bad)
mov
ins
jb
pop
rcr
sahf
push
and
pop
mov
in
xchg
lods
pop
push
movs
lock
out
cmp
test
adc
mov
loop
and
inc
pop
in
repz
jge
jns
inc
pop
shl
inc
scas
push
push
leave
sbb
cmp
inc
js
data16
mov
inc
in
cmp
fild
add
mov
shl
daa
pop
lea
adc
sbb
sbb
mov
xchg
push
jmp
hlt
movs
sbb
mov
or
ret
mov
out
inc
fnstenv
out
add
enter
ret
sub
inc
pusha
push
mov
out
(bad)
test
outs
out
dec
or
cli
fsub
jecxz
cwde
les
(bad)
jp
pop
jno
dec
mov
sbb
inc
sub
sbb
fistp
imul
mov
iret
jbe
mov
test
out
and
add
(bad)
pushf
das
inc
inc
sub
push
nop
iret
jmp
mov
(bad)
mov
mov
mov
arpl
or
pop
sbb
mov
out
pop
xchg
shr
cmp
mov
jecxz
dec
jp
movs
inc
adc
shr
mov
jmp
int
sbb
ins
jo
arpl
jl
push
mov
mov
repnz
lock
shr
jbe
test
pop
in
and
lods
int
scas
aad
and
cmc
sete
xchg
cmp
outs
add
fidivr
mov
(bad)
pop
and
stos
jae
daa
fsubr
sub
cmps
adc
inc
mov
int
outs
frstor
or
jo
adc
loope
gs
stos
aas
stc
ss
jae
cld
inc
or
and
jmp
pop
lock
sbb
mov
push
add
inc
push
add
cwde
and
popf
mov
icebp
and
add
retf
gs
mov
je
hlt
movs
mov
inc
push
xchg
rcr
popf
call
inc
mov
call
cmp
fdiv
lds
in
jnp
xor
sub
aam
pop
arpl
in
xchg
enter
fdiv
mov
call
shl
xchg
add
addr16
ins
mov
mov
ss
scas
imul
dec
sub
push
stos
mov
aam
and
repz
stc
xchg
and
out
inc
sub
inc
inc
call
mov
movs
adc
push
push
xor
add
mov
loope
in
sbb
xor
daa
and
lock
arpl
in
popf
mov
push
xchg
and
xchg
cmps
sbb
adc
sbb
(bad)
int3
aam
mov
imul
sub
push
in
add
push
push
xchg
in
xor
std
jmp
xchg
shl
arpl
mov
pop
adc
adc
jmp
xor
dec
lahf
aad
inc
mov
sub
add
pop
jmp
(bad)
aad
frstor
cmp
mov
xor
push
mov
arpl
(bad)
and
push
loopne
dec
repz
hlt
mov
mov
loopne
outs
daa
ret
bound
test
adc
and
pop
xor
jl
leave
dec
jb
pop
setp
stos
push
(bad)
(bad)
pop
aad
cmp
jmp
adc
lock
lock
push
pop
test
add
add
cmc
cmp
xor
rol
popa
mov
pop
movs
cwde
addr16
pushf
inc
push
cmp
daa
leave
cmp
movs
aas
pop
mov
outs
out
mov
fs
jmp
and
outs
add
xchg
inc
xchg
jbe
mov
rcr
pop
add
cmp
test
xor
mov
xor
enter
push
pop
movs
fcom
out
icebp
cwde
sbb
pop
outs
mov
js
loopne
ss
fnstsw
xlat
dec
scas
idiv
add
lea
nop
cmp
xor
test
icebp
sbb
xchg
int
in
les
cwde
mov
out
inc
pushf
xor
inc
test
repz
mov
ret
mov
sub
inc
pop
adc
jb
inc
movs
push
int3
stos
xchg
cmc
mov
dec
push
dec
in
xor
stos
retf
(bad)
icebp
jno
js
ins
xor
sub
mov
and
sti
sbb
xor
dec
cli
dec
xor
dec
xor
shr
cld
sbb
dec
std
mov
aam
out
(bad)
clc
out
cmps
in
ins
adc
jo
lods
aad
dec
xor
rol
mov
jmp
jle
das
mov
lods
push
shl
dec
dec
sub
fsub
arpl
ins
sbb
pop
fst
sti
out
mov
lods
sub
jmp
lds
jnp
js
push
adc
and
movs
mov
(bad)
push
(bad)
mov
call
(bad)
cli
or
ficom
ins
scas
pop
jle
loop
nop
push
(bad)
pop
sbb
push
sahf
addr16
sbb
lods
arpl
and
data16
xor
fbstp
out
loop
cmp
pop
sbb
je
lds
cmp
mov
rcr
(bad)
push
int3
fucomip
add
add
loopne
cmp
cmp
xor
ins
mov
cmc
jmp
out
dec
repz
stc
cmp
sub
data16
push
cdq
movs
sub
aam
sub
and
stc
xchg
push
out
inc
mov
push
lea
rol
not
sbb
mov
repnz
or
bound
shl
and
in
enter
loope
cs
push
aaa
add
xchg
test
cmc
rcl
cmc
bound
sbb
mov
jle
xor
xchg
aaa
and
ja
cmp
adc
mov
inc
mul
ror
das
arpl
mov
ret
sbb
fs
into
jle
inc
sub
pop
inc
adc
xlat
jne
push
xor
pop
cmp
jmp
fsubr
ror
adc
call
movs
repnz
jl
xor
and
xor
inc
aad
sahf
push
jno
cmp
xchg
xchg
clc
(bad)
(bad)
repnz
arpl
cld
ret
(bad)
mov
retf
ds
call
and
push
stc
cwde
xor
mov
mov
xor
jle
jae
pop
es
stc
pop
mov
jns
pop
mov
bound
in
mul
mov
dec
dec
lea
jmp
pop
push
lock
pop
mov
sbb
cmps
mov
add
mov
and
xchg
in
and
xchg
dec
fsubr
pop
push
dec
popa
imul
das
ret
jnp
mov
enter
retf
fdiv
xchg
iretw
pop
out
mov
adc
dec
repz
mov
dec
cld
mov
adc
mov
outs
cmp
push
pushf
jne
adc
pop
icebp
push
loop
dec
retf
inc
sub
popf
sahf
mov
jmp
ficomp
xchg
aaa
div
push
in
cmp
clc
retf
stos
mov
adc
cld
sbb
push
add
out
inc
add
test
sub
scas
shr
xor
sbb
push
xchg
lods
pop
in
loopne
dec
scas
ds
mov
scas
jge
jl
adc
jmp
add
scas
push
imul
(bad)
div
inc
fld
cmp
xchg
push
repnz
xchg
out
jbe
add
js
xor
mov
xor
nop
fsub
call
mov
or
lea
fnsave
(bad)
jns
add
aas
cmpps
mov
out
arpl
cmp
and
pop
stos
push
xor
or
jg
outs
pop
pop
xchg
repz
idiv
adc
pop
loope
pop
add
xchg
addr16
in
pop
xchg
sub
int
and
mov
aaa
and
fadd
aaa
sub
sub
mov
ins
push
call
call
ds
in
(bad)
test
inc
xor
or
sub
cmp
jg
cmp
in
xor
sub
aaa
gs
sbb
inc
pop
mov
(bad)
xchg
xchg
cmp
dec
add
dec
inc
sbb
lods
aam
mov
or
iret
in
xchg
push
adc
ins
js
mov
inc
fimul
jb
jecxz
sbb
aaa
add
movs
adc
aam
lods
push
mov
sbb
clc
lea
test
pusha
and
push
pop
mov
and
ins
fldcw
push
fsubp
fcomp
cmp
xor
or
and
pop
push
adc
aaa
add
xchg
mov
ins
test
in
(bad)
adc
fadd
add
mov
push
sub
mov
fstp
les
sar
sub
ficomp
mov
fist
scas
pop
cmp
or
add
pushf
or
addr16
fs
and
jmp
imul
iret
repz
lods
out
jne
push
lds
leave
push
inc
adc
adc
call
or
fisub
cmp
add
add
(bad)
jl
pop
mov
popa
ret
cmp
xchg
pop
(bad)
stos
or
lods
bound
sbb
jnp
pop
cld
mov
pusha
inc
inc
pop
pop
fcmove
mov
(bad)
stos
pop
dec
dec
int3
adc
and
xchg
add
into
fbstp
iret
dec
push
dec
pop
cmp
jp
adc
and
xchg
sahf
cmps
xor
repz
out
jo
xchg
mov
jmp
xor
aad
or
in
fist
das
xchg
pushf
fs
imul
xchg
inc
dec
cmp
shld
daa
lods
cmc
nop
and
movs
pop
fistp
test
cwde
add
mov
adc
(bad)
add
push
jl
pop
push
jb
pop
sub
add
sbb
adc
lock
in
jl
(bad)
es
fimul
outs
and
inc
popf
(bad)
pop
popa
cmp
xlat
scas
pop
add
shl
repz
jg
or
mov
sahf
cmp
sbb
cmc
in
popa
mov
jae
addr16
ror
adc
sub
adc
pushf
dec
add
sub
mov
and
retf
adc
xchg
push
lahf
ret
rcl
push
push
or
shr
pop
in
mov
pop
inc
sbb
inc
sub
in
push
dec
and
outs
pop
xchg
mov
add
ins
push
int
nop
test
and
sub
dec
xchg
or
stos
cld
jne
push
jle
sub
push
sub
cmp
jmp
add
outs
xchg
pop
adc
dec
clc
mov
movs
popa
adc
pushf
call
inc
push
mov
mov
pop
mov
jne
addr16
cs
mov
cmp
rcl
aaa
lock
dec
rcl
das
or
popa
sbb
jecxz
push
jno
sahf
popa
ins
adc
ds
and
jge
add
cmp
push
in
scas
fwait
or
cmp
inc
jmp
mov
cmps
or
inc
bound
std
mov
pop
ss
(bad)
sub
ficomp
mov
jb
mov
stos
out
cmp
ins
in
cwde
push
aas
inc
(bad)
cli
lock
jg
sti
jge
cmc
push
xor
aas
stos
add
ins
pop
push
leave
(bad)
cmc
dec
cmps
jno
dec
dec
ret
jnp
xchg
inc
rcl
jmp
mov
ffreep
pushf
pop
movs
aad
(bad)
retf
test
or
pop
repnz
cmp
and
(bad)
iret
imul
add
mov
pop
adc
je
out
xor
ins
mov
into
loope
cli
aaa
push
fmul
sar
mov
xchg
mov
fld
jp
test
pop
ins
nop
push
inc
add
retf
aad
xchg
xchg
and
pop
or
iret
sbb
mov
call
xor
into
jge
pushf
mov
inc
adc
cmp
loop
loop
outs
jb
xor
retf
int3
(bad)
stc
or
bound
add
mov
xchg
jns
and
cmp
inc
daa
cwde
popf
jle
scas
and
xchg
cmp
add
and
int3
add
ss
dec
add
outs
nop
xor
lods
test
inc
cmp
add
aas
mov
jno
shl
(bad)
or
dec
adc
pop
cs
out
or
(bad)
jb
sahf
adc
push
sub
pop
sub
retf
call
fld
ror
mov
mov
jg
push
ret
popf
dec
leave
rcl
movs
sar
xor
aam
xor
jg
cli
adc
cdq
dec
or
sbb
jae
aas
repnz
daa
(bad)
sbb
xchg
cld
sbb
add
in
jns
xor
out
mov
inc
je
mov
xchg
xor
pop
mov
mov
cmp
jbe
mov
dec
mov
mov
test
pusha
imul
outs
cmp
das
sub
pusha
mov
lods
mov
rcl
or
adc
popf
mov
mov
mov
or
out
sbb
add
shr
mov
movs
jae
jp
loopne
cmps
add
push
repz
dec
ret
jp
and
push
sub
xchg
adc
jnp
add
je
imul
inc
mov
test
xchg
sbb
in
test
std
shl
stos
mov
fpatan
mov
push
pop
test
inc
jle
cmc
loop
mov
push
mov
sub
lea
push
sar
ss
inc
into
mov
mov
bound
cmps
cs
push
inc
fs
movs
mov
mov
outs
dec
add
inc
push
pop
iretw
shl
xchg
loop
das
fld
or
call
hlt
push
mov
mov
push
xchg
sub
cld
push
or
and
jbe
cmp
stc
inc
call
lods
pushfw
stos
leave
push
call
or
ret
dec
and
cld
or
punpcklwd
mov
fcom
and
fadd
inc
xor
arpl
jge
in
jg
fnsave
ret
xchg
push
push
pop
dec
cmp
or
cmps
cmp
cmps
push
pop
ins
movs
ins
shl
dec
or
sub
dec
jmp
int
ror
pushf
js
mov
or
les
adc
dec
call
cwde
or
push
fsub
pop
mov
mov
cmp
mov
jmp
ja
fld
push
push
sub
sbb
fdiv
addr16
cmc
jbe
outs
xchg
pop
movs
push
and
fcomp
rol
fs
(bad)
paddw
xchg
sub
push
inc
mov
sub
push
retf
mov
mov
pop
push
adc
cmp
xchg
sub
cmp
mov
jb
inc
les
pop
inc
out
push
ret
clc
add
xchg
adc
mov
jmp
test
xor
add
sbb
(bad)
and
jp
mov
mov
test
adc
retf
sub
dec
xchg
mov
adc
sub
fnsave
addr16
mov
cs
gs
jbe
jle
rcl
xchg
sub
mov
mov
jmp
push
sahf
xor
jmp
cmp
(bad)
xor
fsubr
(bad)
push
shl
inc
ret
push
xchg
cdq
fcom
aad
jmp
add
clc
iret
pop
mov
cmp
lds
jg
outs
mov
int3
out
cwde
jne
call
and
mov
out
mov
imul
xchg
pushf
pop
movs
lds
lahf
sub
call
adc
push
not
clc
xchg
(bad)
mov
inc
int
xchg
cmps
scas
in
mov
test
aas
out
adc
adc
cmc
jne
icebp
jo
call
cmp
popa
sub
xor
jae
pusha
movs
out
das
dec
dec
inc
jae
mov
stos
push
sbb
push
add
(bad)
or
jne
rcl
jbe
out
jbe
xchg
jp
xchg
call
sub
cld
popa
ror
jne
jmp
or
adc
imul
push
stos
(bad)
lds
jg
cmp
jnp
pop
jbe
add
fadd
mov
dec
retf
jbe
in
mov
pop
xchg
xchg
ret
leave
mov
ja
daa
shl
cmp
or
lahf
sbb
and
mov
test
shr
pop
fadd
cmp
arpl
repnz
adc
push
pop
pop
js
lahf
jecxz
aad
or
jmp
xchg
sub
ins
pop
movs
push
retf
or
mov
inc
push
dec
sti
push
push
addr16
(bad)
sti
add
stos
ins
sub
jns
loope
cmc
jmp
outs
and
leave
xor
pop
bound
xor
adc
int
outs
into
out
mov
(bad)
(bad)
imul
mov
hlt
sub
lahf
in
xor
fs
loopne
mov
in
jb
ret
imul
xchg
aaa
imul
jns
sub
add
fdiv
test
loop
les
add
mov
mov
mov
test
push
inc
jnp
sub
int
cdq
fcmovne
jg
xchg
xor
jbe
mov
jno
test
scas
jae
test
push
retf
lahf
outs
test
jae
test
sub
into
mov
dec
sub
addr16
mov
dec
jmp
adc
sbb
shr
mov
xor
pop
cmps
shl
inc
xchg
xchg
sbb
movs
inc
and
jnp
mov
mov
or
(bad)
retf
outs
sub
clc
pop
fsub
pop
and
retf
(bad)
push
add
jmp
jmp
(bad)
mov
imul
aaa
xchg
xchg
cmp
aaa
jl
adc
add
inc
pop
jb
out
loope
add
hlt
adc
sti
or
pushf
cmp
mov
popa
push
repnz
in
cmps
scas
iret
fld
mov
mov
js
cmp
push
aad
movs
adc
xor
leave
or
xchg
int3
shl
and
(bad)
(bad)
mov
jp
(bad)
gs
sbb
cmp
js
inc
fisttp
sub
sahf
jp
nop
push
movs
fs
ins
push
loope
and
mov
aas
imul
call
sbb
lds
cwde
cwde
sbb
jp
mov
ror
inc
push
les
mov
inc
sti
lock
xor
sub
adc
hlt
xchg
cmp
adc
sbb
pop
les
or
lar
cmp
sbb
je
mov
pop
fcomp
(bad)
call
push
xor
jb
mov
fstp
sub
das
fld
scas
movs
pop
and
in
call
retf
ins
shr
jnp
ud1
dec
(bad)
cmc
fstp
or
call
dec
jnp
adc
jge
stos
dec
xchg
call
and
mov
mov
jns
stc
daa
ja
adc
push
out
push
mov
cmp
retf
mov
ss
test
adc
in
(bad)
sbb
cmp
xchg
inc
mov
aam
jae
cmp
cmp
xchg
loopne
aam
xor
addr16
mov
(bad)
push
mov
sub
out
mov
and
inc
jne
xchg
sub
xchg
inc
mov
pop
mov
mov
mov
je
movs
or
xchg
aam
inc
push
xlat
movs
sub
jnp
addr16
and
jg
sbb
adc
stos
sbb
and
sub
int
ds
in
jns
or
push
call
jl
arpl
neg
sar
cmps
jg
xchg
imul
cmp
pop
(bad)
scas
mov
ins
mov
push
(bad)
fsubr
rcr
mov
xchg
push
in
test
or
and
pop
push
test
sti
add
inc
loope
movs
mov
fidivr
inc
and
add
mov
sbb
jmp
pop
and
shl
scas
(bad)
stc
fsubr
pushf
ins
cmc
daa
xor
fbstp
jmp
jecxz
ficom
push
daa
push
pushf
jge
ret
test
sbb
sar
ins
(bad)
js
pop
je
sbb
or
cmp
pop
and
mov
inc
cmp
mov
mov
out
stos
mov
mov
xor
xchg
inc
sub
rcr
sbb
xchg
pop
and
xchg
fs
and
fisttp
sbb
or
push
cmp
cld
or
mov
ins
mov
jg
jns
mov
pushf
les
repnz
into
call
imul
fbstp
push
fild
inc
cs
das
mov
test
dec
and
and
loopne
jmp
add
int
imul
mov
and
jo
jno
push
lods
push
mov
mov
(bad)
mov
lock
add
sti
sub
fs
fsubp
in
pop
cmp
sbb
ror
pop
shl
jno
les
mov
xchg
jg
leave
int3
repz
sub
adc
sub
mov
xchg
ins
fsubr
loop
stos
test
cmps
in
push
pop
cld
dec
pop
jb
or
push
xchg
pop
mov
push
sub
jnp
cwde
inc
mov
jecxz
mov
jl
sub
test
or
movs
adc
stos
xchg
push
mov
and
sbb
ja
sbb
loope
inc
add
jg
and
fisttp
jno
loopne
loopne
inc
xor
cmc
xchg
and
cmp
xchg
shl
xor
repnz
xchg
sets
pop
imul
arpl
mov
jno
add
push
dec
int
retf
add
das
test
test
adc
je
sub
push
js
retf
and
adc
rcl
pop
into
daa
mov
and
mov
push
sti
jae
push
mov
sti
out
jle
retf
cld
(bad)
out
push
sar
lea
sub
mov
dec
ss
mov
in
test
ins
call
sbb
xor
xor
xchg
test
sub
mov
xor
(bad)
push
jecxz
in
in
in
add
pop
xchg
shl
das
or
addr16
jl
or
push
inc
rcr
and
dec
xor
jle
cwde
imul
mov
pusha
push
mov
out
and
jmp
and
mov
movs
retf
push
cmp
cmps
dec
jmp
test
xor
out
js
pushf
dec
add
pop
or
lock
stos
clc
xchg
(bad)
in
mul
cmp
es
out
push
sahf
dec
lds
clc
outs
call
dec
inc
dec
mov
(bad)
aas
aam
aad
push
js
mov
adc
cmp
fld
adc
jnp
cs
jns
std
adc
loop
loop
dec
adc
xchg
xchg
or
push
cmp
(bad)
daa
sbb
hlt
mov
imul
in
fsub
dec
sbb
mov
add
adc
call
push
iret
inc
cmps
and
inc
xchg
push
aam
xchg
mov
xchg
push
and
xor
in
push
mov
jle
cmp
neg
lfs
push
inc
(bad)
sti
mov
add
mov
or
cmp
mov
dec
and
xchg
out
or
jbe
sbb
push
(bad)
push
inc
repnz
mov
pop
mov
inc
jecxz
inc
test
mov
xchg
aam
sbb
mov
loope
sub
pop
mov
outs
mov
mov
inc
cli
daa
xchg
addr16
inc
inc
pop
jl
das
mov
xchg
sbb
pop
aad
xchg
mov
aad
cmp
adc
aas
inc
test
aam
pop
lock
jbe
inc
sub
js
jmp
mov
xchg
or
mov
mov
jns
jge
inc
pop
push
lea
lea
pop
pop
mov
sub
ins
mov
loop
and
mov
mov
(bad)
sti
ds
pop
in
mov
cmp
push
shl
sbb
add
and
icebp
jle
dec
das
cmp
adc
or
outs
push
cmp
ficom
fcomp
ins
scas
xor
add
xchg
mov
jmp
arpl
xor
leave
lods
outs
fld
aas
adc
popf
retf
pop
xchg
add
retf
mov
jge
mov
outs
std
add
test
fadd
nop
inc
xchg
mov
aaa
dec
jb
add
enter
jecxz
addr16
rcr
jb
ins
loopne
lods
sub
pop
jp
mov
jp
xchg
(bad)
push
xchg
jae
loopne
jmp
icebp
add
rcr
and
push
in
mov
push
jg
dec
ret
or
jge
jo
inc
inc
cmp
mov
jmp
xchg
or
jmp
repnz
out
(bad)
mov
mov
gs
les
inc
inc
pop
mul
pop
enter
enter
jle
mov
sbb
shl
into
dec
stos
mov
shl
call
cdq
addr16
mov
call
aad
xchg
pusha
in
stos
mov
scas
push
and
ja
cmp
or
cmp
xor
jae
add
mov
sbb
sub
add
fnsave
out
les
sub
xor
inc
adc
mov
mov
je
dec
xchg
mov
cmp
stos
and
jmp
jmp
sub
das
lea
mov
xlat
inc
inc
pop
movs
arpl
fsubr
loope
test
arpl
adc
pusha
xor
out
add
call
jmp
loope
inc
stos
hlt
into
shr
scas
daa
mov
cmp
es
sbb
clc
xchg
data16
hlt
push
jne
mov
sub
sub
jge
out
cmc
loopne
fldl2t
mov
and
rcr
xor
into
repz
sub
adc
sahf
jecxz
hlt
aad
xchg
aas
or
pop
ja
lods
sub
pop
mov
inc
movs
or
sbb
jl
jp
ret
jns
cdq
loope
cmps
or
stos
sbb
cdq
fld
in
adc
adc
imul
inc
push
test
movs
cli
xchg
retf
and
movs
inc
cmp
xor
add
(bad)
fisttp
setg
push
xor
sub
mov
fimul
fsub
cmps
mov
outs
in
jbe
jb
or
inc
push
out
cmc
xor
imul
mov
inc
fbld
adc
mov
dec
fiadd
cli
je
pop
add
xchg
xchg
jl
sahf
mov
xor
mov
cdq
xlat
icebp
add
and
icebp
push
cmp
andnps
dec
xchg
sbb
shl
not
sub
cmps
sbb
xor
xlat
pop
and
dec
mov
cmps
(bad)
sub
gs
inc
scas
movs
push
int
mov
fcomp
stos
mov
sti
enter
imul
lods
jae
sbb
xchg
mov
test
into
jge
mov
out
push
aas
sub
jbe
retf
call
not
sar
mov
mov
aam
cmp
cld
out
jle
inc
xchg
push
and
adc
je
out
test
jl
inc
pop
rcr
and
push
cmp
pop
ja
dec
adc
and
add
mov
loope
xchg
imul
(bad)
test
std
pop
xchg
sbb
pusha
dec
xchg
sti
dec
push
mov
clc
arpl
lock
fisubr
xchg
add
mov
mov
sbb
cs
sahf
sub
xchg
push
pop
pushf
push
std
fcomp
push
cmp
mov
adc
mov
inc
rol
sub
rcl
dec
sub
jnp
xchg
mov
pop
adc
mov
cmps
inc
cmps
inc
fiadd
cwde
fs
mov
int3
int
pop
pop
imul
test
push
cld
and
add
or
mov
mov
xchg
les
mov
inc
xor
cs
xor
xchg
std
sub
in
inc
mov
jb
aad
and
out
inc
icebp
mov
adc
sbb
jle
jbe
addr16
(bad)
jle
test
dec
jl
push
jg
addr16
mov
in
pushf
jmp
movs
jnp
cmp
mov
inc
push
shl
repz
mov
iret
xchg
gs
or
ds
or
sbb
mov
xchg
sbb
lahf
mov
(bad)
xchg
hlt
and
std
lods
mov
pusha
aad
ins
cmp
test
inc
push
mul
test
mov
inc
sub
xchg
movs
inc
xor
pop
push
or
xor
retf
inc
js
sahf
repz
ret
dec
cmp
xchg
mov
mov
and
xor
loop
sbb
jle
xchg
dec
call
cmp
lock
pop
retf
sub
lods
push
gs
push
fist
jbe
outs
movs
jmp
fistp
iret
push
loop
movs
lds
jbe
stos
mov
cli
in
daa
inc
push
xor
shl
imul
lea
cmp
pop
mov
pop
or
mov
jae
cmp
iret
xchg
movs
xchg
sbb
push
(bad)
icebp
addr16
fld
int3
and
cmp
dec
mov
push
xchg
sub
test
test
sub
sub
jns
dec
xchg
(bad)
iret
cmp
push
inc
inc
cmp
or
aam
push
js
push
jl
push
xchg
pop
jle
inc
(bad)
int3
(bad)
shr
xchg
add
xchg
xchg
(bad)
push
jg
xchg
test
inc
inc
mov
pop
add
ficomp
adc
cmp
and
aaa
xchg
xchg
add
ss
movs
(bad)
sti
call
je
xchg
ret
xchg
test
xor
out
ss
mov
in
push
mov
mov
or
push
ja
not
pop
jmp
test
mov
or
xor
(bad)
stc
xor
test
push
call
adc
int
push
and
scas
js
enter
retf
fistp
xchg
add
pushf
mov
sbb
inc
xor
aad
xchg
je
or
add
dec
ss
jmp
fisttp
cwde
add
je
mov
and
gs
cld
into
hlt
outs
add
push
test
pop
xor
inc
ds
bnd
or
sahf
mov
pop
xor
leave
adc
pop
lds
push
sub
and
aaa
(bad)
cmova
rcl
cmp
pushf
cmp
jmp
mov
outs
fld
pop
cli
retf
cdq
cmp
cmp
test
ins
mov
call
mov
cld
js
and
pushf
jge
movs
shl
fst
jbe
xchg
stos
stos
lods
pop
cmps
pop
icebp
imul
cdq
fsub
push
stc
sbb
sub
push
push
xor
mov
icebp
adc
mov
push
loop
mov
add
arpl
mov
cmp
pop
sub
movs
jmp
imul
mov
pop
xchg
cmp
ds
pop
and
cli
cmp
mov
je
loope
shl
inc
gs
ret
xchg
imul
jmp
xchg
cmps
mov
mov
popa
pop
fnstcw
mov
mov
iret
mov
out
push
jne
pop
cmp
push
cmp
dec
fxch
and
imul
push
cmp
leave
mov
(bad)
or
je
lds
jle
(bad)
adc
mov
repz
or
sar
jns
push
int
ror
dec
aas
ins
cmp
mov
add
loopne
push
loop
test
pop
jmp
ds
cdq
in
(bad)
add
push
mov
mov
cli
outs
mov
cwde
mov
std
sub
push
and
cmp
mov
fisttp
xchg
sbb
sub
jle
xlat
fimul
xor
adc
pop
dec
cmp
adc
iret
push
dec
loopne
ja
leave
mov
xchg
mov
cmp
imul
push
das
popa
neg
std
(bad)
cmp
jle
pop
fst
mov
ja
daa
inc
mov
adc
div
addr16
lds
aaa
and
shl
mov
mov
mov
push
shr
and
movs
adc
push
pusha
jne
mov
cmp
sub
mov
add
cmp
mov
or
stos
sub
add
or
mov
movs
fbld
mov
test
add
icebp
cmp
movs
ficom
out
not
fst
dec
scas
and
jmp
in
or
lods
sub
data16
adc
dec
imul
xchg
cmp
xchg
mov
mov
out
aaa
xor
add
(bad)
and
enter
push
mov
inc
mov
pop
lahf
jne
pmaddwd
hlt
xchg
push
fadd
mov
arpl
mov
sub
mov
xchg
clc
adc
inc
sub
pop
mov
pop
xchg
fnsave
pop
add
mov
or
inc
mov
and
inc
cmp
and
sbb
das
pop
xor
cs
and
pop
test
dec
les
test
sub
rcl
retf
loope
js
mov
enter
ret
icebp
xchg
dec
inc
adc
adc
cmps
sub
je
test
in
ins
add
cmp
jle
(bad)
lods
pop
outs
cdq
cmp
or
sbb
lods
arpl
out
addr16
loop
sahf
cmp
xor
add
jge
add
loop
(bad)
out
xchg
stos
lock
cmp
xchg
xlat
mov
or
push
mov
imul
xchg
ins
sbb
jbe
test
sub
(bad)
clc
mov
xor
mov
and
cmp
cmc
mov
out
call
mov
xor
popa
ficom
mov
fwait
call
sub
inc
std
cmp
or
fnstsw
jmp
jae
into
add
pop
mov
scas
or
jmp
xlat
and
ins
adc
adc
outs
push
lods
(bad)
aam
dec
jo
mov
jmp
imul
repz
push
or
in
scas
push
(bad)
sub
leave
mov
adc
xchg
cmp
mov
fdiv
push
call
shl
leave
sbb
dec
dec
iret
iret
xchg
fsubr
ret
loopne
pop
adc
or
es
ror
sbb
adc
push
inc
xchg
enter
mov
and
adc
mov
pop
jl
inc
dec
pop
push
dec
dec
push
aam
fucom
sub
pop
ins
aaa
mov
in
inc
dec
sub
push
sub
gs
repz
fmul
pop
pop
sbb
xor
ss
js
rcl
cmp
cmp
xor
mov
stos
jbe
or
pop
dec
push
lock
jb
or
push
mov
push
xchg
icebp
sub
arpl
cdq
fidiv
pushf
popf
xchg
ret
test
fld
mov
xchg
retf
cmc
or
jge
and
jne
push
mov
nop
sbb
call
dec
mov
nop
stos
or
ins
add
mov
out
movs
xchg
(bad)
and
mov
shl
out
in
mov
aad
pop
sbb
adc
cmp
mov
cli
shl
fsub
retf
clc
scas
out
fild
test
fild
push
cs
rcl
xor
jnp
mov
mov
out
xchg
ins
std
xchg
repz
xchg
and
ins
inc
cmp
adc
je
or
sti
and
jecxz
(bad)
cmp
into
jns
sbb
sti
or
je
jno
pop
xchg
add
inc
add
test
fstp
je
rol
pop
clc
repnz
adc
jl
push
mov
and
repz
push
fxch
outs
aaa
test
push
add
mov
xchg
dec
push
add
outs
sti
and
xchg
cli
dec
mov
xlat
cmps
cmps
lock
xor
pop
dec
mov
add
clc
sbb
push
inc
cmc
jl
scas
mov
ret
mov
dec
(bad)
jnp
stos
outs
push
mov
call
mov
movs
xor
mov
push
sub
xor
jae
dec
gs
or
jmp
retf
sbb
or
ds
sahf
ficom
movs
in
mov
cmps
jo
xor
push
movs
rol
fimul
out
dec
(bad)
and
ja
icebp
call
cmp
in
ret
out
es
jge
test
repz
retf
sbb
loop
dec
and
stos
xor
in
mov
(bad)
xor
loopne
inc
mov
add
push
push
loope
int3
pop
mov
mov
cld
dec
cmp
or
cs
scas
cmp
pop
div
push
fld
mov
fucomip
mov
jmp
(bad)
pop
out
xchg
inc
ret
push
cmp
sti
jmp
xchg
ins
jl
aam
xor
retf
mov
jp
in
mul
adc
js
in
jmp
ins
add
sbb
cmp
out
sbb
outs
jo
inc
bound
push
js
into
loop
jo
cmp
fld
push
imul
retf
rcl
jmp
sbb
adc
sub
sbb
jge
std
xchg
fs
sahf
aam
test
popa
mov
or
pop
xchg
aad
sub
jl
movs
inc
fs
sub
mov
cs
mov
std
popa
std
cmp
cmp
jo
mov
(bad)
out
popa
rol
out
lea
sub
mov
add
push
jmp
fbld
push
pop
xchg
mov
stos
xchg
mov
ret
dec
mov
(bad)
mov
and
push
out
pop
aas
in
inc
popa
ss
jo
sbb
and
inc
mov
aaa
in
cmp
test
icebp
mov
push
inc
lahf
mov
cmp
jecxz
mov
leave
xor
sbb
lock
lahf
clc
fimul
sbb
pusha
and
and
das
add
or
and
int
and
mov
xchg
dec
mov
lock
scas
mov
push
sbb
ja
mov
push
enter
es
inc
jbe
iret
jae
(bad)
retf
mov
gs
mov
add
add
or
xchg
stos
ret
push
and
aad
mov
sahf
(bad)
inc
xor
jp
jmp
(bad)
fidivr
xor
xchg
pop
inc
and
fs
imul
retf
cmp
call
movs
call
repz
dec
nop
xchg
push
loopne
jmp
in
jge
sub
shl
jno
xor
mov
push
and
inc
imul
inc
pushf
push
mov
and
mov
cdq
es
dec
adc
popa
pop
cmps
mov
sbb
lods
mov
push
jmp
call
sub
dec
mov
(bad)
jns
xchg
lahf
push
pop
mov
mov
xor
push
int
std
stos
mov
sub
int
ror
xchg
sub
pop
mov
mov
loope
bound
cmp
ret
pop
aad
cmp
shl
xlat
push
ja
cmp
into
push
cdq
ja
std
dec
mov
sbb
jle
mov
mov
xchg
aam
shl
or
ins
xor
sete
sub
adc
out
in
jle
inc
cli
pop
cdq
dec
loop
lahf
push
in
call
inc
xchg
sti
jg
fld
jmp
cwde
or
test
xchg
pusha
(bad)
in
push
(bad)
cmp
bound
aad
int3
jl
cld
add
pop
mov
mov
adc
popf
mov
sahf
iret
imul
pop
inc
hlt
popa
cmp
lea
mov
sahf
in
and
(bad)
jno
retf
nop
ja
mov
test
xor
sbb
pop
pop
mov
dec
test
int
retf
in
mov
retf
cld
stos
in
idiv
je
jns
dec
dec
mov
mov
push
les
gs
lods
mul
in
cmp
ror
jno
inc
loope
clc
lahf
or
mov
adc
mov
mov
jmp
and
mov
dec
das
inc
retf
lock
sbb
iret
xchg
ret
outs
aas
jns
and
push
cmp
or
enter
in
out
fstp
dec
push
aam
scas
lods
push
add
hlt
sahf
fs
ins
jge
inc
aaa
cmp
sbb
dec
aam
test
sub
or
or
push
sbb
pop
pop
scas
cli
jp
es
xor
rol
pusha
push
lea
sub
scas
add
cli
hlt
mov
addr16
call
mov
enter
cmps
jg
mov
jb
out
mov
out
cmps
(bad)
xchg
jo
adc
icebp
add
and
clc
sub
cwde
test
pop
cmps
mov
mov
aaa
es
sti
adc
in
inc
mov
cld
leave
js
sub
cmp
fmul
mov
ins
ins
pushf
in
aas
dec
jp
outs
pop
mov
cmp
bound
xor
aad
xor
fwait
mov
outs
mov
lock
xor
adc
int
mov
lahf
dec
pop
and
imul
fiadd
in
enter
lock
pushf
daa
in
or
push
pop
sub
addr16
(bad)
mov
cmp
jmp
(bad)
sub
push
xchg
sbb
pushf
fcom
push
fadd
mov
es
gs
rcl
sbb
lea
js
xchg
retf
shl
push
dec
inc
mul
or
retf
sbb
jbe
mov
inc
in
ds
gs
aas
loopne
mov
sbb
pop
mov
cmp
dec
daa
and
jne
cmp
jge
pop
push
inc
jl
mov
xchg
push
mov
push
outs
xor
dec
rcl
jmp
push
mov
loop
pusha
dec
cwde
mov
int
or
outs
jae
cmp
mov
or
ss
inc
lahf
mov
popf
test
stos
stc
rcr
xchg
les
cmp
cmc
or
jo
(bad)
mov
daa
jno
push
mov
les
mov
mov
loope
jne
jmp
mov
sbb
std
inc
mov
js
inc
dec
push
mov
jg
movs
imul
aas
das
cmp
in
repnz
xchg
shl
inc
gs
jmp
xchg
push
and
add
mov
scas
mov
ins
jnp
aas
mov
mov
loop
mov
jmp
pop
add
cli
pop
push
in
xor
pop
jns
cmc
jo
in
cmp
outs
xor
jmp
jg
fs
jne
rol
xor
imul
dec
outs
or
retf
mov
lds
aam
adc
cdq
cmp
rcr
adc
jmp
inc
mov
mov
xchg
rcr
adc
sub
lock
inc
mov
inc
retf
sub
nop
adc
xchg
(bad)
aad
je
aaa
les
adc
pop
push
jmp
dec
xor
xchg
lea
lods
test
sahf
pop
nop
add
lods
movs
push
sbb
in
sub
popa
pop
mov
mov
aaa
in
daa
movs
push
xchg
adc
adc
in
repz
pop
push
mov
and
sbb
sahf
jno
mov
shr
jmp
inc
sub
std
jbe
pop
test
bnd
es
loope
inc
ins
jmp
inc
jl
mov
(bad)
cwde
cwde
add
pushf
cmp
rcr
pop
fst
imul
(bad)
mov
pop
lods
mov
add
test
test
mov
ins
sbb
cmps
mov
mov
ror
mov
mov
dec
clc
cmp
cmp
imul
not
mov
jbe
pop
xchg
mov
loope
out
sahf
and
xor
loope
cmps
mov
fwait
xchg
mov
mov
pop
add
adc
jecxz
sbb
cmp
or
out
pop
mov
loope
xlat
mov
aas
std
or
popa
lock
xchg
push
ror
adc
mov
retf
pop
push
xor
mov
mov
adc
pop
pcmpgtw
pop
xchg
out
dec
shr
gs
sub
mov
mov
out
jns
jbe
jmp
xchg
in
adc
ja
jmp
pop
sbb
sub
adc
fdiv
jecxz
idiv
xchg
in
imul
cmp
cmp
sti
jl
pop
inc
cli
pop
rol
loope
push
shr
cs
cwde
outs
aas
retf
dec
jmp
lds
mov
fld
retf
mov
rol
int3
das
pushf
out
pushf
jbe
mov
push
hlt
ins
mov
sub
pop
ret
pop
xchg
inc
inc
inc
cld
fistp
mov
mul
jge
data16
in
(bad)
mov
cwde
sub
sub
push
jo
dec
stc
std
and
adc
pushfw
jl
ds
fstp
scas
sub
inc
stc
arpl
add
jp
mov
mov
jmp
xchg
mov
sbb
loope
(bad)
or
mov
jne
sbb
inc
inc
and
rcl
cmp
retf
pop
jecxz
mov
sub
push
inc
xor
xlat
xchg
cmp
sub
pushf
or
out
mov
inc
outs
or
jnp
lods
mov
and
pop
add
mov
lea
push
mov
daa
stos
cmc
sub
fstp
push
adc
bound
pop
add
clc
sbb
addr16
xchg
and
retf
cwde
lods
push
jle
mov
inc
hlt
in
add
or
and
jae
jmp
jp
xchg
arpl
xor
xor
sub
movs
jle
cmp
ds
mov
add
mov
icebp
cdq
(bad)
or
out
and
push
inc
fcomi
ss
jno
sbb
push
inc
jmp
inc
test
xor
aad
mov
int
jecxz
adc
and
cmp
mov
xor
push
mov
and
jo
add
inc
and
xchg
mov
ret
std
xchg
ja
outs
ror
ret
aad
jmp
call
mov
jecxz
aad
sbb
push
xchg
fidiv
lahf
sbb
xchg
scas
mov
push
fwait
(bad)
fisttp
shl
in
clc
or
not
leave
bound
in
adc
and
sbb
ds
imul
inc
cli
mov
pop
push
xchg
jns
push
int
call
ret
fild
jne
cmps
(bad)
mov
dec
mov
and
and
dec
cmp
mov
aad
in
retf
or
cli
sar
pop
les
rcr
sub
sbb
pop
add
fdiv
pop
inc
mov
les
fs
jmp
sub
xchg
ins
je
into
adc
push
add
nop
mov
or
sub
pop
fisub
mov
into
aad
pop
fimul
jecxz
mov
pop
push
cmp
dec
fs
ins
inc
xchg
fist
jbe
nop
or
push
mov
out
nop
test
ror
sbb
dec
or
jmp
sbb
mul
neg
loopne
inc
cdq
lea
sbb
mov
push
sub
dec
sbb
cli
dec
inc
fwait
or
mov
mov
inc
xor
add
aas
xor
cmp
cmp
xchg
in
ret
popa
pop
lds
or
mov
push
out
aad
pushf
scas
sub
scas
xor
and
mov
mov
inc
or
xchg
push
bound
dec
jne
fidivr
iret
pop
jns
enter
lods
add
pushf
cmp
sub
xor
mov
(bad)
xor
mov
pop
lea
addr16
jno
xor
sub
cmps
iret
ror
rol
mov
sub
fstp
(bad)
fsubr
enter
inc
int3
out
(bad)
pop
inc
movs
xchg
mov
dec
call
sbb
pop
sub
or
lock
sub
mov
outs
cld
adc
dec
add
sar
push
mov
jbe
and
ficom
lods
sub
xchg
int3
pop
mov
loop
mov
adc
jmp
mov
push
outs
(bad)
jmp
mov
xchg
xchg
dec
and
retf
inc
fs
xchg
and
test
enter
jecxz
push
jle
sbb
scas
and
sub
fcompp
hlt
cs
add
sbb
pop
or
out
cs
and
adc
in
add
xchg
mov
sub
sub
loop
dec
push
add
aam
pop
lea
out
sbb
call
mov
enter
pop
loop
adc
stos
outs
js
xchg
out
cmps
sbb
mov
aad
inc
std
rol
mov
cmp
push
mov
jae
mov
push
push
push
out
or
lahf
int3
xchg
adc
and
ss
dec
inc
sub
cmp
daa
data16
clc
out
mov
sub
push
xor
pop
xor
push
dec
pop
mov
fcmove
out
or
bound
repz
lds
and
add
add
pusha
outs
sub
push
sbb
gs
es
add
pop
ret
sub
mov
adc
pushf
fstp
(bad)
xchg
jmp
outs
(bad)
arpl
pop
jo
sub
in
sar
lock
ret
xchg
mov
xchg
mov
scas
fild
mov
movs
sbb
mov
dec
pop
in
add
rcl
mov
inc
jl
mov
jb
outs
fadd
(bad)
jmp
scas
mov
(bad)
mov
mov
mov
lods
and
inc
shl
call
shl
mov
and
and
mul
aad
push
pop
ret
sbb
lock
xchg
push
mov
pop
push
sbb
jno
repnz
push
es
pop
pop
fstp
ret
mov
test
call
sbb
popa
into
jmp
fcomp
retf
pop
cmp
lahf
or
or
fcomp
call
or
ins
jecxz
sub
mov
add
jg
frstor
jmp
push
loope
fs
(bad)
push
fstp
in
adc
sbb
jecxz
hlt
pop
mov
retf
jl
out
inc
popa
divps
xchg
pop
adc
fwait
test
mul
or
xor
xchg
pop
jae
dec
mov
pop
mov
(bad)
or
scas
sub
or
repnz
into
aad
xchg
or
and
imul
fimul
rol
mov
jmp
adc
xor
xor
mov
and
rcr
jmp
mov
idiv
ins
test
xchg
pop
mov
rol
cdq
push
mov
push
mul
push
hlt
or
(bad)
push
loope
inc
inc
loop
fwait
push
retf
rcl
mov
dec
add
mov
add
xchg
push
xchg
inc
icebp
sub
movs
push
scas
aad
and
adc
pushf
lods
jge
loope
jp
mov
test
cmp
lods
daa
(bad)
fcmovnbe
xor
pop
lods
xor
into
push
or
xor
scas
(bad)
daa
jne
out
inc
mov
retf
popf
pop
push
cmp
sub
ret
mov
sub
mov
push
mov
inc
cmps
push
(bad)
xor
push
mov
pusha
mov
(bad)
cmp
ins
inc
or
jns
adc
arpl
ins
aad
aaa
mov
add
mov
arpl
lods
inc
pop
sub
outs
jmp
jl
push
fcmovnb
out
(bad)
mov
jb
scas
cdq
jae
test
scas
cld
add
jmp
std
jns
mov
(bad)
ins
cmp
loope
(bad)
les
outs
push
fsubr
movs
xor
test
xor
in
(bad)
mov
or
cmp
stos
push
xchg
xor
pop
rcl
xlat
movs
dec
xor
movs
xor
inc
mov
call
add
nop
cmp
rol
dec
js
or
stos
in
add
jg
sti
inc
push
lods
lahf
retf
(bad)
jmp
fst
xchg
call
es
movs
push
add
aas
inc
(bad)
or
jae
inc
cmc
dec
mov
mov
push
cmp
sbb
pop
sbb
bound
dec
add
push
adc
xchg
pop
sbb
adc
outs
scas
and
cmp
inc
sub
pop
jle
xor
push
ficomp
jo
inc
xlat
pop
bound
sbb
(bad)
or
pop
inc
test
lods
fwait
test
stos
xchg
xchg
inc
jg
scas
leave
pushf
pop
std
mov
dec
test
inc
lods
sbb
fisubr
test
sub
sub
repz
les
retf
adc
inc
popa
inc
cdq
hlt
and
in
ret
jno
and
and
xchg
test
test
or
dec
lea
push
(bad)
out
or
mov
mov
lods
inc
pop
arpl
into
jle
rcr
xchg
adc
mov
popa
mov
aaa
test
shr
or
push
xchg
jbe
loopne
mov
sbb
mov
sbb
inc
pusha
sti
das
pop
test
mov
test
cdq
rcr
jo
(bad)
push
rol
jns
outs
lds
and
in
adc
mov
mov
sub
add
xchg
scas
fbstp
(bad)
scas
or
jo
xor
jno
fidiv
push
movs
in
xchg
loop
or
push
fimul
fcom
jecxz
popa
ss
in
mov
pop
pop
daa
(bad)
sbb
fcom
(bad)
cmc
jle
adc
aam
jae
sbb
in
sbb
inc
mov
xchg
cmps
rcl
call
sub
sub
dec
push
jns
js
in
(bad)
fist
shr
or
mov
adc
add
cmp
ins
mov
cmp
inc
jns
mul
loop
loopne
enter
inc
push
lahf
mov
jmp
int3
and
and
je
movs
mov
and
inc
dec
data16
pop
fmul
mov
mov
inc
add
jbe
xchg
and
sbb
test
or
movs
xchg
mov
jmp
popf
inc
add
call
shl
into
adc
ds
or
lds
in
in
or
in
(bad)
mov
add
sub
xor
mov
dec
lds
in
jmp
jo
cmps
pop
mov
mov
pop
cld
add
cmp
inc
mov
pop
adc
jae
cmps
add
sub
fisttp
jne
inc
aad
call
stos
xor
out
pop
fs
push
pop
push
xor
xchg
adc
push
push
leave
stc
in
nop
dec
lea
in
mov
arpl
pusha
sbb
dec
rcl
xchg
idiv
lds
jge
(bad)
movs
pop
(bad)
(bad)
or
loope
cmp
es
shr
aad
xchg
stos
into
xchg
cmp
hlt
inc
mov
loope
fcmovnbe
lds
xor
mov
aam
imul
test
or
dec
arpl
jns
das
stc
ins
daa
adc
rcr
mov
sbb
sbb
mov
mov
in
test
mov
scas
test
out
clc
ret
int3
xchg
dec
cmp
retf
pop
xlat
cmp
fdiv
imul
(bad)
jb
adc
aaa
enter
ret
inc
pushf
mov
sti
pop
cmp
xchg
push
push
add
add
cmp
fst
jecxz
mov
sbb
xchg
(bad)
fisubr
scas
sahf
inc
cmp
pop
popa
jns
cmp
mov
cmps
test
xchg
movs
inc
dec
aaa
mov
loope
xor
mov
(bad)
cmp
int
push
dec
not
pop
xchg
dec
fcom
out
or
xlat
and
aad
pop
add
(bad)
scas
hlt
jle
push
outs
xchg
pop
stos
ret
pop
mov
call
pop
or
adc
dec
mov
dec
pop
mov
jl
js
out
sahf
cmp
lea
fst
push
in
jge
rcl
call
inc
test
sub
push
sub
repnz
jecxz
jl
(bad)
mov
pop
popf
inc
cli
rcl
mov
out
xchg
cld
stos
movs
push
and
dec
pop
(bad)
out
add
inc
scas
sbb
jns
ss
adc
mov
sbb
into
fidivr
inc
retf
(bad)
push
sub
gs
add
in
push
xchg
mov
mov
test
push
retf
add
add
mov
cli
aas
popf
pop
scas
xchg
fs
clc
in
pop
imul
retf
sub
mov
in
mov
push
add
sti
out
and
sbb
adc
ins
mov
repnz
stos
inc
sub
xchg
test
jle
scas
dec
int3
hlt
into
and
int
push
stos
adc
ins
mov
dec
int3
push
pop
(bad)
dec
stc
xchg
neg
cmp
rcl
mov
fld
pop
pop
pop
xchg
mov
add
test
hlt
mov
sub
sahf
pop
ss
jle
rol
xchg
push
pop
ror
scas
push
into
add
inc
loope
icebp
adc
ss
pop
stos
mov
mov
pop
or
imul
push
ds
and
clc
retf
jno
sub
sbb
inc
mov
mov
arpl
fcmovbe
mov
xchg
inc
leave
int3
sub
xor
sub
cld
fiadd
mov
fistp
or
(bad)
popf
push
dec
add
push
push
fistp
or
retf
sub
aam
imul
push
push
add
hlt
int3
add
mov
mov
push
test
push
inc
lods
(bad)
ret
rcl
test
aad
cmps
push
fwait
ror
lods
and
pop
cmp
adc
jmp
(bad)
dec
mov
test
jmp
inc
sub
cli
cmp
xor
fmul
scas
sbb
shl
icebp
ins
xor
pop
xchg
pop
xor
adc
or
jbe
cmps
shl
xchg
ret
jecxz
das
or
ss
and
je
scas
adc
int3
push
aaa
stos
jl
sbb
aam
les
add
daa
sub
sti
xchg
push
arpl
inc
pop
mov
ss
lds
sbb
imul
pop
cmp
mov
ror
jnp
pusha
dec
(bad)
dec
adc
ret
out
test
(bad)
mov
lods
adc
(bad)
mov
loop
popa
outs
pop
jb
dec
shl
adc
add
push
or
fisub
adc
xor
nop
jb
and
mov
pop
aaa
mov
lds
loop
test
cld
adc
push
sbb
jmp
ins
cwde
fsub
pop
call
div
pushf
ret
popf
into
sbb
inc
jns
sub
mov
(bad)
out
cld
sbb
pop
and
and
cmp
fwait
cmp
adc
mov
add
mov
js
ds
loop
int3
in
adc
cmp
(bad)
mov
test
adc
stos
mov
push
(bad)
fild
adc
(bad)
mov
pop
(bad)
xor
sar
add
ds
and
retf
lods
movs
in
and
jle
cmp
fiadd
jmp
popa
cmp
and
cmps
inc
sub
cli
inc
retf
stos
push
add
jne
mov
xchg
sub
push
add
adc
mov
ds
nop
(bad)
(bad)
jecxz
dec
sbb
(bad)
mov
pusha
inc
push
leave
ret
ret
dec
inc
xor
retf
mov
push
test
cdq
inc
in
mov
jo
ja
(bad)
les
inc
cwde
mov
push
xchg
ret
retf
add
call
lods
(bad)
or
stc
inc
shl
lea
jmp
push
mov
mov
add
or
jmp
mov
add
inc
xor
sub
ds
out
add
outs
dec
and
shl
cmc
sahf
cmp
aam
mov
hlt
add
dec
pop
clc
xchg
add
fbld
jmp
add
scas
mul
mov
das
pop
das
fild
ss
int3
cmp
push
mov
and
inc
outs
fiadd
cmps
fs
cdq
outs
mov
jo
cmps
or
cmps
ss
ins
les
xchg
dec
dec
scas
add
lahf
ins
xchg
cmp
mov
lock
mov
mov
inc
cmp
mov
shr
cdq
dec
fild
pop
ja
ss
mov
iret
bound
xor
sbb
dec
jmp
adc
jmp
dec
and
mov
sub
xor
xor
mov
mov
mov
ret
cmp
into
ja
(bad)
in
shl
or
xchg
int3
push
into
push
hlt
iret
ret
mov
(bad)
repz
xchg
lods
shr
cmps
out
in
xchg
sub
popf
fild
or
xchg
cmp
and
sub
and
pop
pop
mov
mov
nop
(bad)
loope
mov
push
fdiv
sahf
pop
loop
adc
add
(bad)
mov
out
pushf
inc
lds
sbb
fadd
mov
pop
icebp
cld
test
arpl
xor
pop
fcom
jne
xor
sahf
ins
sbb
mov
enter
dec
fst
out
cmp
xor
ss
fimul
and
inc
push
mov
pop
pop
jle
shl
cs
shl
xchg
stc
fnstcw
stc
mov
cmp
xor
adc
inc
sbb
jno
jmp
cmc
aaa
mov
dec
outs
sub
xchg
jge
mov
sar
outs
mov
shr
call
lahf
push
ret
sbb
xor
rol
les
pop
sub
fnstenv
(bad)
pop
pop
clc
fadd
mov
neg
or
cmp
mov
jp
ror
sub
sbb
mul
xchg
mov
pop
xor
pop
(bad)
dec
xlat
das
push
inc
or
or
lods
dec
push
jo
arpl
fwait
(bad)
mov
jle
lahf
mov
push
pop
jb
pop
ja
xchg
and
mov
leave
gs
xchg
sti
pop
fidiv
stos
push
xchg
out
outs
mov
adc
xlat
pushf
pop
scas
int
xchg
or
outs
xchg
adc
push
std
xlat
rol
mov
daa
mov
std
xchg
push
push
xlat
dec
jl
dec
fmul
mov
and
retf
pop
and
push
pop
jl
je
hlt
ror
ds
xor
fstp
mov
pop
xchg
rcl
test
cmp
test
push
mov
inc
dec
jle
int3
mov
in
pop
repz
sbb
mov
pop
out
xchg
inc
fcomp
and
movs
mov
cld
mov
cmps
jg
retf
push
add
pusha
and
mov
add
int
dec
adc
sub
loopne
mov
jle
je
dec
xor
aam
push
dec
scas
xor
addr16
in
jmp
inc
scas
in
std
cmc
scas
push
xchg
pop
jg
mov
mov
mov
test
jmp
mov
mov
ja
test
mov
cmps
jae
xor
cmp
movs
std
call
jp
jae
retf
dec
scas
and
aam
sub
ror
rol
popf
push
dec
inc
lea
imul
cwde
pop
jmp
(bad)
stos
sbb
xor
rol
pop
mov
addr16
and
dec
adc
xchg
cmp
fwait
inc
into
jle
inc
adc
sub
mov
dec
xor
mov
lods
data16
stc
sbb
loope
cmp
sbb
out
mov
data16
rcr
scas
popf
fst
and
ret
pop
adc
nop
xor
ss
mov
xor
es
or
daa
cmps
pusha
and
xchg
jb
mov
sub
nop
fld
shr
push
push
outs
inc
mov
jle
pop
lods
call
inc
test
call
xchg
xchg
cwde
popf
or
sbb
neg
inc
xchg
inc
cdq
pop
inc
inc
std
pusha
sbb
or
jge
ret
into
into
loop
mov
int
push
jg
mul
test
push
cmp
aas
ret
pop
stos
repnz
xor
or
xchg
and
push
gs
hlt
inc
jle
es
adc
(bad)
dec
mov
pop
nop
fidivr
cmp
(bad)
out
dec
clc
add
jmp
sbb
add
repnz
daa
mov
std
and
iret
adc
enter
ror
dec
jb
cld
pop
mov
mov
mov
mov
sub
inc
lahf
inc
or
xor
mov
test
mov
jge
dec
cmps
ja
out
sbb
push
das
dec
push
pop
jg
mov
cli
push
fwait
stc
mov
cwde
enter
loopne
outs
sbb
mov
test
mov
stc
ins
pushf
cmp
xchg
inc
sahf
or
and
mov
ins
cmp
aas
aas
push
fcmove
iret
shl
push
and
adc
sti
and
imul
(bad)
addr16
in
jl
daa
mov
add
mov
xor
sub
jle
pusha
stos
push
ret
and
push
ss
ins
out
cmps
arpl
jns
int3
test
dec
jae
loop
jmp
repnz
inc
(bad)
hlt
pop
icebp
mov
xlat
dec
xchg
add
jnp
and
xor
pushf
jmp
inc
add
jg
aaa
mov
aad
xor
jbe
mov
xor
mov
dec
popf
js
inc
mov
push
aas
xor
mov
(bad)
sar
ins
mov
sub
test
lods
xchg
icebp
imul
xchg
xchg
(bad)
push
sti
je
cdq
mov
sub
arpl
out
stos
mov
push
lods
push
retf
lods
pop
push
sub
das
mov
pop
push
pop
xchg
xor
loopne
mov
add
fstp
pop
and
lock
sub
mov
clc
pop
mov
push
sbb
hlt
jae
mul
lahf
in
into
mov
repz
sub
lock
pop
popf
hlt
or
pop
cmp
mov
xchg
push
nop
mov
stc
fldcw
push
les
adc
outs
aad
sub
ins
lds
dec
xchg
mov
dec
or
sar
cmps
cld
pop
cld
popf
xchg
imul
mov
jne
xor
dec
or
imul
into
test
popa
dec
pop
fild
les
in
dec
mov
outs
loop
ret
fidivr
out
rcl
stos
(bad)
push
imul
xchg
push
xor
js
outs
loopne
and
add
xchg
push
mov
(bad)
repnz
rcr
popf
push
and
es
inc
stos
push
xor
fbld
or
push
outs
shr
test
loopne
add
dec
sbb
in
adc
jge
test
push
or
test
div
xchg
mov
fild
pop
xchg
sbb
shr
or
and
dec
cmp
cmp
hlt
fst
popf
aad
mov
call
es
pop
push
lods
out
adc
lods
std
sub
sub
mov
popa
push
daa
hlt
inc
add
mov
addr16
pushf
pop
and
lea
test
mov
mov
sahf
(bad)
ficomp
lock
jmp
scas
retf
out
mov
sbb
and
popa
test
mov
pusha
cli
and
jne
stos
xchg
push
cs
movs
push
nop
(bad)
ja
in
pop
jle
mov
pop
in
mov
lahf
dec
arpl
dec
fs
shr
inc
pusha
sahf
int
(bad)
daa
lods
cmp
or
aas
push
jmp
lods
add
mov
push
dec
cmc
push
push
(bad)
sub
and
push
loop
div
mov
js
sar
shr
push
inc
scas
ins
ss
fsubr
fdiv
or
jl
sub
lahf
retf
sbb
inc
es
mov
xchg
jno
adc
inc
mov
ret
int3
hlt
inc
scas
div
push
ds
out
adc
xchg
add
lock
push
out
inc
loopne
and
cli
cmp
lea
dec
ds
sub
aaa
sbb
aam
dec
call
imul
mov
dec
cmp
mov
adc
mov
daa
cwde
xchg
sbb
jmp
loop
pop
icebp
scas
clc
mov
sub
pop
pop
dec
stos
addr16
in
sub
hlt
and
out
add
cmps
jns
lods
and
icebp
loope
cli
addr16
mov
les
test
jno
icebp
pop
mov
(bad)
and
arpl
jle
cmp
ror
test
add
(bad)
pushf
xlat
mov
or
rcl
inc
scas
ret
daa
ins
outs
lock
inc
ja
outs
mov
push
xor
cmp
mov
dec
or
mov
lock
and
dec
ja
push
xchg
push
lds
aaa
fmul
jmp
inc
sub
retf
xor
movs
ins
arpl
mov
or
(bad)
xor
sub
cdq
pushf
and
mov
sbb
xchg
and
inc
sbb
cld
mov
adc
sar
in
pop
or
mov
ins
push
ins
test
xchg
xor
inc
test
(bad)
dec
pop
mov
mov
mov
or
shl
add
cmp
je
dec
das
popa
or
mov
push
xor
pop
pop
pop
pop
cdq
mov
cmps
push
pop
add
mov
and
fidivr
jp
or
lds
lods
stos
test
pop
sbb
nop
dec
jns
inc
cld
inc
es
jae
scas
outs
pop
xchg
mov
and
iret
and
xor
xchg
or
lods
sbb
add
mov
aas
rol
pushf
or
retf
std
sbb
add
rol
ins
das
es
jge
pushf
pop
dec
in
inc
adc
push
js
sti
pop
imul
rcr
push
adc
pop
pop
jl
sbb
push
retf
int3
in
cmp
repnz
aad
idiv
push
test
or
push
int3
mov
aas
loopne
push
ret
pop
lahf
add
add
pushf
shl
jp
leave
push
mov
mov
enter
cmc
push
push
stos
dec
imul
xchg
jp
int
(bad)
stc
or
jnp
imul
xchg
ins
adc
enter
xchg
or
sub
fidiv
pop
inc
pop
imul
and
clc
cld
push
and
not
and
add
out
or
push
loop
sahf
pop
loop
xchg
out
adc
out
repz
xchg
sub
sti
xchg
int3
aam
mov
out
shl
fwait
repz
or
cmc
mov
sbb
mov
arpl
dec
adc
adc
mov
clc
xor
add
int3
std
adc
push
push
mov
scas
das
(bad)
cmp
ss
mov
push
mov
dec
jg
retf
sti
gs
imul
nop
mov
mov
sub
mov
mov
repz
jbe
arpl
xchg
sub
adc
xor
mov
mov
mov
jb
fidiv
pop
cli
jae
adc
fldcw
lock
in
hlt
call
fs
pop
ja
(bad)
in
jle
scas
xchg
out
sahf
int
lock
iret
push
sub
sahf
fistp
mov
jl
test
popf
cmp
fs
bound
adc
ins
fisubr
or
lods
cmp
xor
lods
dec
mov
fst
rcl
cmp
or
out
ds
jp
dec
movs
repnz
mov
pop
aam
sbb
rol
(bad)
leave
shl
pop
xchg
cmps
cmp
mov
xchg
fimul
add
push
daa
xor
xchg
jns
call
repz
jl
es
loop
call
mov
adc
in
push
loopne
(bad)
out
mov
mov
xchg
jne
inc
(bad)
dec
js
icebp
ficom
movs
enter
(bad)
dec
pop
push
jle
add
mov
mov
ins
xor
ss
dec
adc
sub
push
in
pop
cld
cwde
test
xchg
out
mov
pusha
mov
out
push
xor
mov
xchg
jg
or
pop
pop
and
push
adc
cli
call
call
mov
(bad)
cmp
in
wbinvd
pop
xchg
in
pop
outs
inc
in
out
ins
out
add
stos
aad
mov
test
sbb
jns
pop
lea
xor
xchg
div
push
mov
and
shr
pop
push
adc
mov
gs
and
mov
iret
push
iret
or
push
daa
popa
mov
out
mov
adc
dec
sbb
jnp
mov
out
sbb
aad
loope
sbb
stc
loopne
mov
in
lahf
loopne
out
cwde
mov
xchg
shl
xchg
push
mov
mov
mov
out
mov
jmp
rol
retf
pusha
add
mov
cld
dec
div
cs
cli
xchg
pop
or
add
cdq
xchg
enter
sub
sti
cmp
jmp
(bad)
jge
pop
sbb
add
scas
pop
pusha
outs
xchg
call
scas
jp
mov
inc
mov
add
js
dec
dec
pop
jmp
imul
push
bswap
fimul
fcmovnb
scas
(bad)
sbb
popa
and
hlt
sahf
mov
mov
and
jmp
push
mov
mov
repnz
inc
pushw
aad
inc
pop
and
inc
sti
add
sbb
test
xchg
push
pop
or
mov
pusha
mov
test
cmp
nop
cli
ja
(bad)
sbb
mov
add
push
fnstsw
or
jmp
pop
mov
push
nop
xchg
sbb
inc
ins
les
sti
sbb
adc
int
or
push
in
xchg
or
je
les
out
adc
clc
xchg
dec
mov
stc
xchg
add
daa
jecxz
das
dec
and
and
outs
mov
jne
push
stos
fcmovbe
and
adc
cmp
ds
xchg
add
dec
cmp
sub
ret
dec
mov
data16
xor
push
pop
ds
(bad)
push
mov
retf
retf
adc
mov
dec
push
dec
call
push
mov
pop
xchg
fsubr
add
iret
(bad)
sbb
pop
dec
inc
push
cmp
pop
inc
loop
jns
inc
sbb
or
inc
xlat
cmp
stos
mov
retf
sub
std
(bad)
dec
push
fcmovnu
mov
mov
fiadd
popa
cmp
ja
fimul
mov
inc
sbb
js
xor
cmp
xchg
mov
sbb
mov
add
cmp
jp
daa
mov
xchg
mov
sbb
jne
mov
sbb
mov
(bad)
shl
adc
aaa
scas
add
push
leave
in
jne
fild
dec
cli
adc
xchg
mov
cmc
cmp
lock
out
stos
mov
(bad)
jecxz
ret
xchg
add
hlt
mov
call
leave
std
retf
jmp
loope
out
add
xchg
cmps
add
ins
xlat
(bad)
icebp
pushf
(bad)
rcl
fimul
sub
movs
out
mov
jo
test
pop
rcl
inc
xchg
xor
sub
sbb
add
pop
and
cmp
sti
and
sbb
xor
and
jae
add
int
ds
sbb
dec
sar
stos
fwait
push
(bad)
pop
and
sbb
push
repz
jns
push
ins
push
pusha
xor
push
pop
scas
mov
push
popf
dec
repz
mov
push
cmps
dec
mov
dec
adc
mov
push
xor
sbb
leave
xlat
ins
inc
fwait
pushf
movs
xchg
int3
std
stos
xor
lods
jp
sbb
cmp
in
cld
inc
jle
mov
ja
je
shl
mov
push
outs
mov
rol
fisttp
pop
push
push
mov
push
mov
mov
pop
vmread
mov
(bad)
sbb
add
jecxz
arpl
push
popf
jmp
xlat
mov
je
jmp
or
cmp
cmps
mov
(bad)
out
cmp
sub
jle
cmp
popf
call
stos
retf
inc
ins
push
sbb
jl
arpl
dec
sub
xchg
xchg
inc
inc
sahf
iret
or
dec
sbb
fstp
pusha
cmc
xor
pop
push
stc
pmaxub
fimul
mov
and
jle
ins
test
loop
dec
dec
jmp
cmp
mov
icebp
jnp
lods
popf
mov
jl
test
call
mov
lahf
shr
sub
(bad)
fwait
div
hlt
adc
ret
ror
mov
jge
into
jae
dec
outs
int
dec
shr
ds
inc
loope
sub
(bad)
enter
xor
jns
mov
ss
push
pop
jno
movs
mov
scas
jmp
and
add
inc
and
adc
repnz
out
in
es
pop
sbb
shld
les
jns
jne
mov
lock
je
jno
pop
mov
mov
not
mov
jne
stos
add
mov
xor
sbb
dec
inc
mov
inc
dec
pop
jbe
xor
push
cmps
mov
or
out
pop
pushf
jb
and
pop
inc
mov
pop
stos
(bad)
stc
cs
pusha
(bad)
les
fwait
(bad)
test
iret
dec
xchg
pop
test
lea
repz
cmc
jmp
xchg
jbe
sbb
icebp
jne
and
dec
push
mov
xchg
out
lods
add
test
mov
es
movs
xor
lock
inc
jnp
sub
mov
mov
jnp
ds
jo
mov
jp
add
jo
mov
xchg
(bad)
fistp
cmps
add
ins
mov
inc
xchg
(bad)
pop
lds
cwde
pop
movs
pop
fcomp
fisttp
pusha
xchg
lds
lock
sar
aaa
mov
(bad)
clc
sbb
cmps
js
cdq
inc
push
xor
push
sub
or
sbb
mov
cmps
push
pop
outs
ror
cmp
addr16
inc
xor
add
ror
cmp
pusha
sbb
mov
in
and
cmp
adc
mov
(bad)
int
adc
retf
adc
sub
jbe
repz
jge
sub
es
fs
and
sub
aad
push
dec
ja
(bad)
xchg
mov
jg
inc
in
push
(bad)
xchg
leave
xchg
pop
cwde
jp
fisub
cld
xor
retw
sub
das
aam
inc
cmc
xchg
and
push
mov
clc
adc
out
pop
lds
mov
dec
stc
fbstp
xchg
adc
data16
mov
in
sar
xor
call
movs
movs
fcmove
or
std
shl
sbb
and
rol
jo
pop
pop
cmp
addr16
out
mov
sbb
cld
mov
cmp
je
push
jp
outs
jmp
push
cmp
cmp
or
cli
scas
aas
loop
xchg
push
sub
mov
int3
ss
xchg
inc
mov
and
push
sbb
in
scas
mov
jp
adc
mov
(bad)
call
inc
call
jo
aas
sub
mov
into
das
pop
(bad)
push
std
and
mov
push
int3
mov
pop
sbb
mov
fwait
ins
loop
jg
sub
and
xor
aad
mov
prefetchwt1
xor
std
fld
das
pop
mov
nop
xor
jmp
stc
neg
xchg
inc
(bad)
pop
inc
outs
lds
les
in
(bad)
fbstp
adc
mov
push
xchg
sub
int
retf
sahf
retf
aad
mov
imul
inc
xchg
daa
fadd
ins
mov
(bad)
adc
nop
inc
or
jecxz
imul
mov
inc
add
push
aam
sbb
mov
lahf
outs
xchg
imul
stos
sbb
int
lods
cmps
(bad)
cmp
dec
add
pop
push
jp
mov
sub
sar
int3
xchg
push
push
cwde
xchg
jb
sub
add
add
mov
mov
pop
push
pop
xchg
sahf
cli
enter
xor
loop
or
(bad)
mov
cmps
les
dec
or
arpl
or
das
pusha
repnz
cdq
fidiv
outs
mov
jl
sbb
jmp
xchg
mov
push
sbb
ins
scas
nop
outs
es
sub
jmp
jg
push
add
xchg
rcr
pop
imul
test
xchg
xchg
shl
loope
or
mov
or
loop
and
stos
loope
and
mov
mov
or
xor
test
imul
pop
inc
ds
or
inc
sub
push
popf
xor
shl
mov
add
mov
mov
and
xchg
call
fmul
adc
xor
adc
fist
retf
adc
test
cmp
pcmpeqb
or
sub
push
leave
mov
loop
fisttp
mov
(bad)
cmp
outs
adc
sbb
call
(bad)
fsubrp
mov
ror
mov
imul
inc
ror
fstp
sub
arpl
and
jle
(bad)
xor
push
jmp
repz
ins
cli
jns
jno
sbb
xor
inc
mov
cmp
repnz
lods
and
call
loopne
mov
dec
xor
xor
sbb
adc
ror
mov
pop
dec
push
lds
(bad)
addr16
icebp
pop
xchg
pop
xchg
dec
lock
daa
push
jle
fstp
les
sbb
sbb
cmp
test
add
dec
sar
push
outs
push
mov
out
test
into
sub
pop
cmp
sbb
sbb
mov
fild
loop
jnp
jmp
or
pop
pop
aam
ror
sahf
int
pop
ins
and
xchg
cld
ja
outs
or
ret
mov
xor
mov
leave
cmp
ja
xchg
popa
push
clc
fnsave
loop
push
movs
dec
push
popa
test
mov
(bad)
mov
sbb
ror
mov
xor
lds
enter
or
jmp
sub
mov
xchg
adc
and
sar
jae
or
in
movs
data16
call
dec
push
pop
sbb
ja
sahf
call
nop
mov
(bad)
stos
hlt
sub
dec
mov
(bad)
pop
stos
daa
test
daa
pop
jmp
sbb
cmp
(bad)
ss
dec
ins
call
arpl
adc
in
popa
cli
sub
pop
fsubr
setge
inc
adc
cwde
mov
sub
dec
mov
in
(bad)
cs
popf
sub
jno
mov
cmp
sub
inc
js
stc
xchg
inc
in
push
(bad)
aam
sbb
pop
mov
sub
repnz
mov
mov
mov
inc
add
dec
aam
jae
or
fadd
imul
add
stos
adc
jne
or
inc
mov
fistp
hlt
jp
outs
je
hlt
pop
xchg
cmps
add
ds
cmp
mov
(bad)
and
xchg
xor
dec
pop
out
pop
pusha
cwde
arpl
scas
pop
popf
popa
jg
cmp
mov
sub
inc
out
movs
xchg
nop
int
ins
cmc
jge
sar
xchg
movs
idiv
mov
dec
out
call
(bad)
xor
repz
or
pop
lods
lea
dec
or
call
sbb
mov
mov
jle
mov
jg
mov
pushfw
sbb
xor
jae
fdiv
pop
ds
jl
aas
sub
sti
sbb
jl
retf
cmp
ds
aas
jmp
pop
outs
gs
idiv
(bad)
dec
inc
dec
adc
dec
mov
ins
ds
shl
cmc
je
stos
and
mov
sbb
fbld
xor
rcr
sbb
xor
gs
mov
sub
iret
fist
lock
adc
mov
mov
cld
adc
mov
xor
cmp
inc
scas
iret
loop
ror
push
xchg
jne
mov
xchg
xchg
mov
out
pop
cli
loopne
(bad)
pop
cmp
inc
pop
scas
punpcklwd
dec
mov
push
inc
sub
sbb
push
loop
mov
cmp
out
jmp
mov
jno
push
test
add
mov
(bad)
xchg
ficomp
sub
(bad)
xlat
dec
pop
fucomp
xor
popf
mov
jmp
sub
outs
jae
sbb
cmp
rcr
pop
fimul
inc
pop
dec
shl
push
pop
push
mov
dec
inc
aaa
repnz
cdq
push
adc
loop
loop
mov
ins
mov
and
call
xlat
or
outs
jp
out
outs
movs
xor
inc
mov
leave
sti
in
lock
mov
into
jo
inc
pop
ret
shl
or
inc
push
pushf
lods
fnsave
xchg
lods
sbb
dec
pop
mov
adc
adc
sbb
sub
jmp
inc
jns
cwde
jg
shl
mov
das
cli
fisubr
hlt
mov
xor
jo
call
data16
data16
sub
in
arpl
lea
aaa
pushf
cdq
xchg
xor
enter
add
push
mov
clc
xor
mov
add
add
nop
mov
imul
xchg
sar
(bad)
into
das
fsubp
cmp
adc
les
popf
ret
out
loopne
inc
sub
sbb
loopne
and
sub
mov
pushf
mov
sub
sbb
inc
loopne
scas
jl
movs
xchg
in
add
imul
cmp
mov
out
icebp
or
and
nop
mov
xchg
jp
pushf
aaa
fimul
popf
adc
div
sti
out
adc
fistp
bound
(bad)
gs
out
cmp
mov
sti
add
adc
sbb
lock
mov
pop
lds
mov
inc
cmc
fsub
lea
fst
inc
sahf
cmp
jp
cli
sbb
imul
hlt
or
stos
dec
sar
xor
int
test
add
xchg
mov
hlt
fisttp
pop
push
mov
test
sbb
stos
outs
dec
mov
ins
dec
sahf
and
adc
push
pop
imul
lock
out
xchg
bound
jecxz
and
sbb
rep
out
lods
add
xchg
dec
aam
rcl
and
stos
sub
inc
idiv
and
ret
xchg
cmps
mov
dec
or
inc
in
mov
out
or
xor
dec
pop
popa
not
xchg
out
retf
sub
push
pop
mov
dec
mov
in
cmp
mov
cmp
mov
mov
jl
inc
jg
arpl
mov
dec
pop
jp
mov
test
(bad)
sar
and
call
jmp
in
scas
rcl
int
dec
icebp
dec
cmp
or
out
arpl
cdq
cmp
ret
add
cs
aaa
js
and
xchg
pop
mov
mov
or
inc
in
push
mov
jmp
adc
shr
lds
mov
jmp
sub
sar
fwait
arpl
mov
loope
cwde
mov
mov
jmp
jp
imul
add
add
inc
rcr
movs
cmp
adc
xchg
pop
pop
sbb
pop
xor
ret
jae
xchg
jo
sbb
mov
or
mov
test
jp
cmp
ja
or
mov
out
cwde
mov
jg
pop
out
xchg
cmp
or
push
cmc
jns
fist
sub
retf
movs
cs
mov
mov
add
mov
clc
mov
xchg
dec
cmp
(bad)
jl
push
je
dec
dec
pop
mov
into
add
idiv
mov
push
(bad)
push
loop
and
dec
cmp
movs
or
or
scas
fcom
movs
lds
jge
je
push
push
lea
shr
pop
repz
ss
xchg
cmp
jb
or
push
dec
inc
mov
or
xor
adc
rol
cli
push
xlat
stc
mov
sub
push
and
enter
sub
cmp
std
in
call
hlt
push
xor
mov
add
dec
hlt
(bad)
push
movs
adc
shl
jg
xor
gs
rcl
mov
inc
rcr
aam
stc
sub
xor
add
sub
adc
mov
sbb
lds
xchg
jle
cmp
jae
loopne
jne
jmp
inc
jmp
dec
lods
fwait
popa
push
sti
sbb
popf
pop
fnstsw
jg
inc
ret
ins
cld
pop
call
and
jmp
sbb
clc
xor
and
or
dec
push
(bad)
out
push
addr16
pop
pop
or
xor
or
sub
push
jl
sbb
push
sbb
mov
and
pusha
inc
fidiv
fdivr
jl
jp
mov
out
mov
sti
push
cld
addr16
outs
xor
(bad)
test
jns
mov
and
mov
push
out
jmp
lds
jmp
jnp
xor
outs
sub
xchg
lds
push
push
adc
int
add
and
adc
pop
je
pop
lahf
scas
xchg
push
cmp
test
jns
rcl
lea
lock
stc
cmp
dec
iret
mov
jne
inc
stos
mov
cmps
push
mov
ins
jo
sahf
loop
jmp
lods
jmp
jne
push
clc
int3
jp
ss
mov
jmp
enter
test
shr
arpl
ins
aaa
cmp
cwde
fdivr
sbb
enter
fcomp
data16
and
jo
pop
in
jo
popa
popf
and
xchg
or
(bad)
es
lahf
out
cmp
jnp
inc
cdq
movntps
bound
add
ja
sti
mov
add
imul
pop
bound
imul
cmp
fs
icebp
pop
or
push
mov
or
add
adc
lds
add
fdiv
ret
stos
or
or
cmp
shl
mov
and
fwait
(bad)
imul
fnstsw
popa
sub
push
xchg
adc
loop
das
dec
js
jb
xchg
mov
sbb
in
mov
sub
je
push
mov
xchg
jge
jp
sub
repz
daa
or
iret
popa
pop
and
clc
imul
cmps
xchg
sub
jne
test
or
(bad)
jae
xchg
test
cmp
sbb
mov
mov
mov
add
scas
xchg
rol
add
mov
mov
mov
and
cmps
inc
push
cmps
js
add
test
mov
cdq
xchg
mov
push
test
not
jl
pop
cmp
cdq
sbb
xor
mov
call
sub
push
xchg
(bad)
pop
and
mov
inc
add
pusha
mov
jp
cmc
mov
xor
adc
mov
mov
inc
aad
mov
mov
icebp
push
xor
dec
fs
rcl
adc
das
and
mov
mov
jnp
adc
test
cli
cmps
pop
test
mov
inc
xchg
ds
xor
cmp
in
inc
add
fsubp
fist
cmp
into
outs
and
mov
jnp
add
es
movs
and
test
cld
retf
das
cld
call
sub
jge
jo
inc
cmp
sub
mov
aad
mov
fsubr
mov
jb
fmul
jb
leave
adc
lea
mov
xchg
adc
rcr
cmp
jne
int3
push
cli
jmp
scas
lods
sub
dec
test
inc
div
mov
sbb
inc
les
lods
adc
push
stc
lock
mov
push
(bad)
int3
pop
call
push
pmaxsw
sahf
push
popf
jne
not
data16
daa
(bad)
bnd
push
shl
push
add
mov
xchg
fdivr
jae
adc
jle
inc
ret
mov
imul
mov
jb
mov
aad
or
neg
(bad)
mov
es
imul
mov
aaa
lods
and
imul
(bad)
lahf
fdivp
mov
test
mov
mov
pop
into
mov
mov
sub
ret
out
or
jl
popf
xchg
mov
sub
(bad)
cmps
push
(bad)
cs
sti
jnp
imul
aaa
hlt
jb
and
shl
retf
in
jne
sub
int
lahf
int
loope
push
int3
data16
or
dec
ret
gs
inc
sub
mov
arpl
xchg
mov
ret
and
cmp
cmp
mov
sub
mov
in
jmp
mov
inc
push
pop
add
test
cmp
popa
and
push
div
dec
xchg
and
jb
and
loop
mov
push
stos
(bad)
jmp
inc
stos
jne
push
jmp
mov
jmp
dec
(bad)
rol
loopne
push
or
fdiv
in
pop
mov
sbb
hlt
ror
fcmovbe
sbb
push
cmps
inc
pop
out
ror
xchg
dec
(bad)
push
shl
fst
cmp
rol
and
arpl
fwait
sbb
mov
cmp
gs
xor
shr
adc
leave
pop
sub
pop
(bad)
pop
or
or
lds
fsub
xor
adc
push
shl
jle
daa
les
retw
mov
and
in
jnp
mov
fstp
(bad)
(bad)
pop
jl
pshufw
call
inc
(bad)
clc
in
jmp
jge
jns
jge
jg
retf
call
repnz
popa
(bad)
lods
fwait
jge
adc
shl
xchg
(bad)
das
stos
popf
push
xchg
xchg
ins
ficom
inc
mov
cdq
pusha
and
mov
inc
cli
dec
pop
xchg
lahf
jne
mov
dec
popa
(bad)
shl
out
ret
jmp
sar
scas
push
call
push
pop
fcomp
add
jg
test
adc
(bad)
xor
jg
aam
push
loopne
out
mov
sbb
xchg
clc
pop
mov
or
jg
jmp
adc
jmp
xchg
lock
stos
call
fbld
ror
and
or
(bad)
sub
scas
push
fwait
push
daa
fwait
or
icebp
mov
repnz
(bad)
test
cmc
cmps
add
clc
mov
es
in
mov
pop
jns
arpl
add
daa
test
xchg
daa
sti
out
dec
lds
jmp
iret
and
pop
mov
mov
mov
cdq
loopne
push
push
test
cmps
bound
dec
adc
mov
test
add
push
shl
mov
lods
xchg
jbe
jle
out
gs
or
fcomp
retf
dec
(bad)
dec
add
mov
lea
imul
shr
cmps
fwait
outs
loopne
call
imul
inc
sbb
aaa
fmul
ror
int3
sbb
int
pop
push
push
cmp
mov
cwde
jg
push
js
test
pop
fwait
jmp
dec
jecxz
mov
outs
mov
std
fnstenv
jecxz
dec
push
ins
jae
loop
int
or
cmp
aaa
xchg
mov
(bad)
jbe
push
pop
in
cmp
pop
aad
stos
cmp
(bad)
inc
mov
ss
scas
mov
sysenter
stc
mov
xor
cmc
mov
pop
ret
jo
call
sub
cmp
rcr
sbb
xor
ins
xchg
sub
cmp
mov
push
int
jns
pop
ins
outs
test
iret
add
in
push
stc
mov
push
stc
shl
inc
lea
sub
sbb
jmp
fnstcw
repnz
inc
adc
xchg
cmp
ins
cld
cmps
ret
cmc
fistp
xchg
in
aas
imul
pop
cmps
loopne
in
mov
push
mov
cmp
mov
mov
add
movs
rol
cdq
and
xchg
pop
mov
jge
(bad)
push
mov
adc
xchg
test
scas
enter
out
stos
sbb
js
ror
adc
sub
rol
mov
xchg
cld
jge
xor
enter
jg
into
mov
mov
ja
push
fcom
aas
jno
rcl
xchg
xlat
mov
scas
rcl
push
cmp
mov
sub
fist
and
xor
jnp
pop
aad
fidivr
push
or
push
jbe
iret
push
ror
jnp
popa
push
sub
dec
fs
xor
ficom
shr
sti
xchg
call
outs
mov
sub
in
(bad)
gs
mov
test
fistp
jp
stc
loope
sub
fs
idiv
mov
stos
jmp
mov
movs
dec
stos
mov
jge
adc
mov
mov
sti
xor
sub
fsubr
aaa
scas
shl
scas
out
sub
cdq
aaa
adc
xor
es
pop
shl
push
stos
dec
popaw
add
sar
xor
mov
(bad)
(bad)
or
add
xor
add
sbb
not
push
shl
add
pop
popf
push
jecxz
push
scas
pop
je
jge
ja
cmpxchg
xor
and
or
bound
add
mov
out
test
add
pushf
movs
jp
xor
ret
loop
sar
and
stos
adc
and
xor
jmp
pop
sbb
push
ret
inc
mov
(bad)
jmp
(bad)
dec
and
pop
mov
fstp
fsubp
and
es
mov
xchg
int3
in
cwde
shl
adc
popf
add
movs
push
cmp
mov
lea
push
dec
imul
inc
inc
mov
repz
out
mov
mov
dec
and
inc
mov
pop
and
sub
xchg
sbb
ins
jmp
push
jg
fdivr
jae
in
xor
xchg
pushf
test
cmp
add
pusha
mov
inc
inc
ins
push
and
lahf
out
mov
popf
popf
fdivr
loop
jnp
stos
cmp
mov
stc
mov
pop
mov
inc
mov
push
mov
imul
enter
xor
pop
pop
aaa
in
and
dec
adc
push
arpl
(bad)
fcmovnb
cwde
dec
gs
jge
mov
retf
xlat
push
push
or
fnstcw
push
cmps
xor
jge
stos
or
jo
shl
ret
pop
inc
arpl
sub
test
popa
mov
fwait
xor
push
jb
mov
adc
mov
mov
hlt
xchg
fisubr
push
add
sar
push
xchg
cmc
jge
add
mov
mov
fwait
pop
adc
push
sbb
outs
daa
sahf
(bad)
sbb
adc
xchg
out
cmp
int
jge
pop
out
xchg
push
sahf
cld
test
sahf
add
add
adc
in
mov
sub
fstp
sbb
add
xchg
icebp
add
in
push
js
xor
adc
jp
cld
aas
dec
mov
and
test
dec
jle
call
jp
clc
(bad)
sahf
addr16
call
cmc
and
mov
sbb
or
out
inc
cmp
cmp
pop
pop
cmp
cmps
add
clc
mov
inc
scas
push
call
daa
data16
(bad)
sbb
(bad)
and
dec
mov
out
cdq
or
ins
push
mov
pop
mov
inc
push
leave
out
adc
mov
fcmovu
out
js
add
cs
aam
mov
add
sbb
test
popf
xchg
ret
cmps
adc
lock
in
mov
jl
test
mov
(bad)
mov
out
pop
pop
push
adc
aaa
repz
fadd
sti
sbb
or
gs
cmp
add
and
loopne
add
sub
inc
(bad)
aaa
adc
inc
push
retf
aas
xor
and
pop
mov
xchg
cs
call
enter
add
(bad)
fdivr
dec
mov
cmp
or
call
pop
rol
add
leave
aam
cmps
jbe
out
and
sar
fadd
sbb
push
punpckhwd
test
add
mov
jnp
jns
push
cmp
sub
sar
pop
xor
clc
addr16
aaa
pop
jp
fld
pop
xchg
jmp
sbb
push
je
jmp
mov
enter
fcmovbe
mov
sbb
cmp
cli
dec
fwait
jmp
pop
lods
or
add
and
(bad)
loopne
test
mov
and
scas
mov
stos
shl
popf
sub
or
or
scas
neg
mov
into
retf
sar
pop
lock
iret
pop
test
enter
xchg
in
nop
fist
mov
into
sbb
adc
mov
adc
fmul
jp
pop
js
xchg
adc
lods
cld
push
(bad)
fwait
sub
sbb
xchg
pop
clc
(bad)
sub
bound
lods
cdq
xchg
push
fwait
sbb
jecxz
imul
cmp
dec
jge
xchg
mov
mov
or
push
sbb
test
or
cmps
jg
xchg
(bad)
out
test
sbb
inc
pushf
and
js
add
xor
mov
pop
mov
nop
dec
mov
cmp
cmc
sub
das
push
call
cmps
loope
test
pop
cmc
stc
xor
(bad)
mov
cmp
aaa
cmp
sbb
xor
sub
cmp
xchg
jmp
sti
ins
sub
push
mov
adc
and
inc
add
leave
and
or
ds
jb
cld
cmps
cld
jl
add
push
(bad)
or
lods
cdq
or
push
int3
lods
sub
xor
ss
repz
sbb
mov
movs
cmp
add
mov
gs
fsubr
mov
outs
sbb
mov
mov
mov
adc
aad
scas
push
aad
mov
lahf
or
clc
repnz
pop
pusha
xchg
jl
and
aam
mov
sbb
adc
shr
mov
inc
scas
xchg
scas
cmps
xor
mov
lds
pop
jg
lods
dec
icebp
in
and
pop
mov
imul
add
pop
stos
out
in
cwde
scas
add
push
test
lock
aad
xor
out
add
(bad)
and
mov
dec
inc
lock
xor
adc
cdq
les
cmp
cmove
pop
xchg
retf
pop
pop
sub
leave
mov
mov
xchg
sub
gs
int3
inc
test
mov
(bad)
out
nop
aaa
fcomp
dec
int3
adc
cmc
sahf
(bad)
jno
adc
shl
inc
test
stos
push
lods
push
in
pop
bound
sbb
sti
inc
jnp
mov
mov
into
imul
in
mov
in
push
lods
cmp
popf
adc
dec
cmp
je
xor
in
adc
ins
lahf
div
jno
(bad)
into
and
push
pusha
cmp
stos
pop
mov
xor
shr
mov
add
xchg
mov
test
mov
inc
push
pusha
sub
aas
pop
stos
mov
loop
(bad)
test
aad
cmps
xor
mov
test
sbb
repz
add
push
xchg
jne
test
xchg
dec
sbb
push
cmps
and
mov
loope
fist
sub
add
and
xor
add
(bad)
cld
push
fidivr
or
jb
jno
daa
mov
loopne
mov
lods
sahf
idiv
lahf
cmp
repnz
loop
xchg
xchg
frstor
or
push
call
inc
jae
and
dec
xor
movs
repz
fdiv
and
dec
jnp
loope
retf
push
js
add
mov
dec
cmps
fild
fs
add
mov
in
add
cmp
int
pusha
test
int
xchg
(bad)
fwait
jp
pop
or
mov
xchg
movs
aad
mov
add
adc
pop
sbb
aaa
idiv
repz
ss
sbb
aaa
sahf
and
scas
adc
rcr
ret
mov
mov
icebp
mov
sbb
jmp
jo
int
xor
fdivr
mov
scas
out
rol
test
xchg
pop
loope
arpl
pop
sub
adc
add
je
cs
data16
inc
xchg
inc
outs
popf
(bad)
sub
(bad)
or
cdq
push
stos
inc
or
ds
cmps
or
jle
fstp
out
lahf
sub
push
fadd
retf
in
sbb
adc
adc
xor
mov
push
div
lahf
and
sbb
jnp
pusha
mov
fiadd
pop
daa
cmc
add
mov
stc
ja
mov
inc
or
push
enter
test
out
gs
fwait
jle
fbld
leave
xor
icebp
sub
sbb
stos
mov
pop
mov
jno
and
call
pop
test
mov
in
out
sbb
adc
and
jle
fs
mov
cdq
in
pusha
clc
or
(bad)
mov
iret
mov
retf
add
cld
xlat
hlt
mov
js
pop
or
repnz
xchg
xchg
push
repz
fild
xor
sbb
fwait
cmps
or
sub
scas
(bad)
dec
push
or
xchg
cmp
jp
pop
cmc
(bad)
mov
jno
enter
jmp
mov
dec
pop
lods
ds
mov
sub
pop
test
sar
(bad)
fdivr
jo
sbb
xchg
int
sub
or
sub
les
popa
lahf
push
sbb
mov
push
mov
push
inc
mov
fnstsw
mov
jmp
cmp
(bad)
add
mov
stos
rcr
add
daa
xor
mov
xor
int
add
pop
jmp
mov
out
mov
xchg
ins
aas
int
push
arpl
jecxz
mov
ret
add
inc
or
or
and
dec
fchs
ds
in
xor
push
sub
push
pop
mov
xchg
icebp
cld
mov
popf
addr16
repz
push
mov
inc
mov
test
or
ja
cmp
icebp
pop
and
rol
mov
cwde
xchg
repz
dec
pusha
nop
mov
(bad)
(bad)
cmp
outs
xor
rcl
jmp
mov
push
sub
mov
pop
lods
pop
push
into
test
adc
ss
scas
je
stos
mov
and
ret
sub
ss
lea
in
pop
push
lock
shr
mov
pop
xor
repz
xchg
stos
nop
test
hlt
and
mov
adc
add
sbb
(bad)
cmp
inc
lds
or
inc
fdiv
rcl
(bad)
je
sub
mov
jb
nop
jnp
call
or
dec
xchg
sbb
fs
xchg
xchg
xlat
xor
mov
leave
cli
(bad)
cld
jns
xchg
je
mov
dec
dec
imul
jl
inc
(bad)
out
les
sub
add
outs
or
push
das
(bad)
popa
jp
jbe
mov
call
adc
js
and
ja
cld
add
retf
jb
push
push
push
xor
inc
pop
lahf
cwde
cmp
pop
ret
jbe
cmps
(bad)
and
push
mov
dec
mov
int
(bad)
call
outs
test
push
mov
cs
bound
dec
add
ret
hlt
jmp
test
data16
in
jb
push
mov
(bad)
aaa
fmul
sahf
cmp
test
addr16
ret
hlt
cmp
stos
sbb
dec
out
jp
mov
loopne
mov
(bad)
mov
and
mov
retf
inc
mov
sub
and
sub
fisubr
adc
stc
mov
xor
adc
xchg
jge
xor
dec
sub
fisttp
lods
aad
jmp
push
aaa
fldcw
outs
(bad)
xlat
out
sbb
push
in
in
inc
aam
mov
je
fwait
pop
outs
cdq
in
xor
add
in
add
jg
adc
aam
test
pop
call
push
movs
add
aad
adc
adc
xor
xchg
sub
inc
ins
data16
aam
movs
mov
push
pop
lock
sbb
(bad)
cmp
dec
das
mov
ss
sti
push
call
inc
fdiv
ja
add
push
jp
mov
jmp
mov
push
dec
jo
cmp
sbb
sbb
xchg
call
xor
(bad)
dec
dec
aam
ret
div
add
jno
mov
push
dec
aad
xor
xchg
popf
aad
mov
push
aad
push
fdiv
(bad)
sbb
inc
aas
lahf
call
inc
jp
test
add
cmp
scas
xor
fs
aam
xor
aam
sbb
pushf
push
fiadd
imul
and
add
lock
xchg
stos
ds
(bad)
fmul
pusha
dec
adc
sar
cdq
(bad)
push
(bad)
movs
and
xchg
test
push
add
dec
and
in
push
or
popa
stc
jbe
gs
jno
test
ds
cli
movs
xchg
mov
jo
ja
cmp
dec
addr16
bnd
inc
sbb
test
leave
push
mov
jne
in
idiv
and
xor
add
mov
ret
scas
mov
sahf
inc
repnz
pop
int
ss
jns
loope
idiv
mov
(bad)
push
cld
test
(bad)
mov
add
ins
fidiv
cmp
jae
jne
lock
imul
ins
cwde
mov
shl
in
push
repz
sar
adc
jmp
leave
push
dec
out
ss
pop
mov
stos
outs
mov
jmp
pop
(bad)
(bad)
adc
int
out
movs
imul
or
add
mov
out
imul
mov
pmullw
mov
test
popf
mov
push
call
dec
mov
pop
mov
xor
xor
xor
cwde
sub
(bad)
aad
sahf
mov
dec
fucompp
adc
push
jnp
jnp
inc
xor
int
cmp
and
lods
mov
pop
(bad)
and
lods
std
cli
mov
jae
cwde
push
imul
add
inc
dec
(bad)
lock
mov
test
cwde
jmp
ret
xchg
add
push
cmp
nop
jecxz
je
dec
cld
int3
leave
fdivrp
inc
int3
outs
pop
les
(bad)
popa
or
push
loopne
xor
dec
or
xchg
cwde
pushf
jp
push
pusha
xchg
in
lahf
cmp
inc
jo
loop
add
cmp
and
mov
fldenv
mov
outs
ins
lods
jg
cli
sub
arpl
mov
fisttp
(bad)
test
mov
inc
dec
fcmovnbe
jl
dec
mov
push
add
data16
sub
enter
loop
mov
mov
loope
and
ins
cdq
xchg
repnz
pop
les
push
adc
sbb
inc
jne
in
(bad)
shr
sbb
cmps
xchg
fbstp
jl
shr
cmp
fiadd
sub
ror
stc
pop
or
je
jmp
popf
pop
outs
or
cmp
les
inc
das
xor
(bad)
imul
ret
jecxz
es
and
(bad)
fwait
out
inc
mov
stc
fisttp
mov
and
jg
in
add
ret
shl
arpl
frstor
aaa
out
dec
hlt
popa
scas
cmp
test
push
jge
into
aas
not
lock
xor
shl
inc
out
mov
jb
les
cmps
mov
jmp
mov
cmp
push
dec
push
mov
ror
outs
xchg
scas
in
outs
jns
add
bound
dec
jp
mov
or
inc
(bad)
(bad)
call
mov
push
xchg
cmp
mov
std
ret
adc
mov
call
dec
cmp
iret
sub
inc
and
xor
aas
cmp
loop
cli
sar
xchg
lock
cli
pop
sbb
mov
fld
repnz
fisub
pop
jae
imul
xor
jns
adc
cmp
nop
cmp
cmps
mov
in
cwde
push
mov
nop
xchg
fisttp
loope
xchg
xchg
aaa
pushf
(bad)
and
lock
inc
sub
aas
pop
xor
into
outs
mov
mov
or
ja
and
pop
mov
aam
adc
sbb
xchg
popa
mov
sub
dec
mov
lahf
mov
jno
push
outs
pxor
sub
cmp
pop
lea
jmp
and
cmp
ffree
mul
ret
cdq
cld
pop
xchg
and
test
push
jecxz
cmp
cmp
cmps
daa
xchg
xor
gs
cmp
les
into
pop
stc
and
lods
push
inc
jbe
inc
fcom
hlt
sub
scas
es
jbe
outs
pop
pusha
mov
test
cld
ficom
jle
pop
ror
and
cwde
popa
inc
mov
jmp
adc
popa
sbb
or
adc
or
xlat
cmc
sahf
dec
(bad)
(bad)
fisub
ss
outs
or
repz
imul
in
fwait
stc
or
lea
jmp
(bad)
cmps
cwde
in
ins
inc
cmc
retf
sahf
adc
sbb
scas
retf
into
sub
and
xor
leave
pop
fild
lods
test
push
(bad)
movs
sub
xchg
sbb
repnz
xor
jle
dec
mov
div
ds
jns
idiv
shl
push
repnz
ret
jmp
xchg
dec
(bad)
adc
test
enter
sub
aad
or
jmp
shr
test
push
mov
add
pop
test
sub
ins
(bad)
pop
sub
and
out
fimul
in
xor
leave
mul
add
test
aam
or
inc
movs
rol
dec
fist
ins
aam
pop
mov
sub
inc
or
pop
jmp
push
dec
xor
cwde
mov
rcl
fsubr
pop
mov
sti
adc
cdq
jno
xchg
mov
adc
iret
mov
and
lods
dec
or
pop
mov
push
add
ja
xor
nop
jg
out
sbb
mov
mov
int
add
hlt
imul
enter
fisttp
add
pop
je
fdivr
mov
mov
inc
out
std
loope
outs
sub
(bad)
push
inc
scas
mov
add
xor
mov
fldenv
dec
push
nop
jg
movs
push
(bad)
pop
push
xor
mov
call
jle
ins
mov
dec
fbld
jmp
in
ins
inc
or
arpl
out
mov
mov
jno
pop
cmc
(bad)
repz
cmps
xchg
xchg
imul
push
xchg
mov
fcmovu
mov
cmp
mov
jnp
in
sbb
mov
sub
call
inc
adc
scas
jb
dec
pop
or
(bad)
adc
dec
cmp
cmp
push
test
xchg
shl
fucompp
rcl
cmp
and
add
xchg
repz
adc
push
xchg
sbb
fadd
push
test
or
test
adc
xor
lds
sub
int3
jne
inc
and
mov
xor
push
aam
loopne
scas
fwait
clc
gs
push
div
data16
sub
fucomip
adc
das
push
sbb
or
sbb
imul
push
mov
mul
jns
fbstp
pusha
xchg
mov
sbb
jmp
inc
(bad)
in
repz
adc
lock
sub
mov
pop
dec
mov
test
stos
jecxz
and
jl
into
push
stos
mov
mov
scas
rcl
push
mov
mov
aam
retf
mov
cmp
sbb
call
xchg
pop
xor
fisttp
test
ret
cmp
adc
fisttp
repz
lahf
mov
sub
repz
sub
stos
xor
test
mov
ja
inc
add
addr16
pop
xchg
jecxz
mov
inc
scas
icebp
shr
jmp
xor
adc
sub
dec
inc
sti
dec
mov
or
xchg
mov
jmp
xchg
clc
jle
adc
stc
inc
imul
into
es
jecxz
popa
aas
and
repnz
fs
shl
fdivrp
js
fs
out
daa
or
and
pop
test
cmp
(bad)
popa
and
jae
mov
call
fwait
mov
xchg
cmp
(bad)
int3
add
mov
add
test
xor
jne
test
pop
test
or
jmp
add
fwait
cli
mul
pop
mov
sub
pusha
das
add
(bad)
ud1
mov
xchg
bound
dec
cmps
fwait
xor
lods
clc
mov
inc
retf
sbb
cmp
fs
pop
mov
call
clc
icebp
push
or
lds
mov
cmp
mov
(bad)
push
inc
ds
push
imul
in
mov
xchg
mov
push
repz
push
mov
pop
pop
mov
mov
dec
xlat
out
stos
mov
jp
ficomp
pushf
pop
bound
cwde
outs
scas
mov
xchg
jo
and
jecxz
push
mov
fwait
je
sar
sahf
jo
inc
leave
retf
or
outs
scas
loope
add
pop
and
rol
adc
xchg
mov
and
adc
or
mov
fnsave
push
data16
mov
iret
sub
aaa
push
fwait
cmp
cmp
push
and
repz
jge
sub
in
aaa
or
ror
xor
push
adc
pop
pusha
and
cmp
fst
fwait
dec
xchg
hlt
pop
mov
or
test
cmps
jmp
mov
inc
sub
pop
outs
dec
mov
xchg
mov
repz
es
push
xchg
mul
les
inc
aaa
xchg
adc
sbb
dec
xor
stos
into
cs
fisttp
lock
inc
xor
int3
(bad)
pop
repz
jle
lds
je
popf
add
out
dec
jp
mov
add
or
ins
stc
in
cs
movs
dec
or
ficom
jo
push
in
mov
or
repz
fiadd
adc
jo
or
std
inc
adc
sub
mov
sbb
push
adc
aam
xchg
jge
pop
lahf
cmp
aas
fsubr
out
xchg
push
(bad)
push
add
inc
int3
mov
pop
ja
rcl
cli
lock
adc
fdivr
xor
mov
fs
or
notrack
or
cmps
pop
and
not
clc
(bad)
retf
or
push
fwait
jnp
sub
mov
int
mov
sbb
scas
inc
push
es
lods
xchg
cmp
cmp
dec
xchg
outs
out
adc
out
xchg
xlat
sbb
(bad)
cli
fwait
mov
das
call
es
(bad)
lock
pop
iret
or
mov
sub
ins
cs
mov
dec
iret
shr
lods
mov
repz
dec
dec
xchg
jae
inc
bound
mov
pop
fmul
mov
repnz
add
pop
mov
mov
pop
fisubr
jae
mov
sub
inc
add
ret
je
jnp
dec
into
dec
push
repz
cmps
inc
add
mov
jmp
je
and
icebp
aad
add
mov
mov
repnz
jge
enter
loope
add
ins
mov
pop
clc
int3
mov
inc
jg
into
test
pop
xchg
add
dec
sti
add
test
repnz
int3
std
not
mov
movs
sub
mov
das
pop
cmp
xchg
pusha
stc
cmps
and
movs
scas
shl
sbb
dec
or
and
cs
scas
xor
mov
jnp
ja
lahf
enter
mov
imul
cmp
jno
push
out
and
jb
adc
repz
es
ss
imul
jo
rol
jns
add
mov
sub
lea
mov
and
xor
push
or
push
cmp
ret
mov
mov
or
push
movs
iret
stos
shr
dec
(bad)
imul
arpl
sbb
(bad)
out
(bad)
outs
xor
shl
fbld
add
mov
std
(bad)
repz
ret
ja
add
shl
mov
and
test
lods
pop
loope
or
js
int3
xor
ja
add
in
pop
(bad)
outs
push
je
int3
push
or
add
mov
cli
and
enter
pop
in
scas
add
dec
push
push
or
sbb
into
mov
mov
jae
loope
add
movs
imul
cdq
pop
push
(bad)
cmps
mov
(bad)
in
xchg
sub
dec
in
daa
inc
jno
sahf
in
pop
add
mov
sub
psrlq
scas
sub
and
cmp
icebp
sahf
xchg
xor
xlat
enter
push
ror
mov
pop
and
mov
fwait
xcrypt-cfb
cmps
gs
adc
movs
out
out
jle
jbe
push
pop
lock
sub
mov
inc
ret
cwde
test
push
cwde
out
fild
pop
stos
int
push
cld
nop
pop
sub
jno
sbb
mov
ss
xlat
jmp
dec
push
mov
jmp
pop
add
push
mov
outs
std
xchg
sub
mov
loope
stc
icebp
jns
cli
mov
mov
or
adc
out
imul
cmp
scas
out
ret
es
dec
fcom
dec
mov
sar
mov
add
sub
xchg
call
lods
shl
sub
xor
push
(bad)
pop
dec
and
mov
pushf
and
int
rcr
mov
inc
dec
and
xlat
fbstp
jle
inc
sub
and
ficomp
and
gs
pop
mov
rol
(bad)
fdiv
jmp
dec
(bad)
or
push
js
or
pop
mov
jecxz
repz
sub
test
rcr
xor
movs
paddd
adc
adc
loope
fsubr
sbb
sti
mov
xor
add
or
inc
lods
jecxz
jns
fdiv
mov
mov
jae
sbb
addr16
mov
sbb
int
outs
pop
mov
in
lahf
bound
adc
xor
mov
popa
add
movzx
push
fiadd
lock
cdq
retf
mov
cmp
addr16
mov
mov
pop
push
into
fisubr
cmp
mov
out
test
movs
in
mov
mov
dec
add
ret
or
inc
mov
loop
adc
inc
scas
enter
dec
dec
iret
and
(bad)
pop
mov
xchg
jge
stos
and
out
ss
arpl
aas
add
loope
loop
push
push
or
pop
sbb
loop
add
push
push
loope
mov
stos
inc
test
imul
mov
sub
pusha
adc
sub
es
inc
xor
dec
mul
add
out
call
jno
push
out
cli
(bad)
push
sub
repnz
fisub
aam
inc
sbb
push
dec
jne
mov
fcomp
and
cmc
cmc
and
fsub
and
mov
imul
js
cdq
inc
and
(bad)
mov
mov
outs
movs
mov
jecxz
js
ffree
shl
mov
pop
xchg
or
aaa
sub
add
shr
neg
fidivr
bound
rcl
sbb
(bad)
cmc
bound
setge
addr16
jl
mov
clc
enter
das
push
add
xchg
lds
adc
mov
push
jns
jbe
xchg
fsubr
in
adc
jbe
mov
mov
push
test
mov
shr
movs
or
mov
add
mov
cmp
xchg
bnd
push
les
and
mov
or
cs
xchg
in
mov
shr
inc
(bad)
jmp
in
dec
push
lock
mov
out
mov
inc
xchg
call
mov
cwde
cmp
jno
into
inc
dec
ins
sub
ret
lea
pop
cvtps2pd
jbe
mov
mov
jmp
scas
bound
lock
das
xor
mov
mov
pop
ja
out
cmps
cmp
jmp
sub
loop
xchg
ror
push
inc
clc
jne
sub
push
mov
mov
or
inc
jno
push
pop
add
inc
push
lds
xchg
loop
and
lahf
cmp
aam
push
enter
scas
mov
mov
add
add
fnstenv
retf
xchg
iret
inc
inc
xor
jb
and
std
xchg
inc
and
fistp
leave
or
(bad)
hlt
inc
movs
js
jp
gs
scas
dec
inc
mov
mov
xchg
cdq
les
cmps
out
sub
rcl
clc
loop
jne
inc
std
mov
not
xchg
fild
xchg
sub
femms
aaa
inc
xchg
in
jecxz
dec
mov
and
pop
add
inc
nop
das
arpl
or
dec
fadd
jns
les
inc
pusha
mov
sbb
ins
jae
xor
jno
repnz
repz
or
inc
jecxz
rol
and
bound
push
xchg
mov
not
jl
pop
shr
dec
mov
(bad)
call
inc
xor
ins
mov
enter
jnp
xor
xor
sub
js
fild
movs
bound
mov
xchg
jecxz
mov
mov
jmp
sbb
jle
dec
icebp
pusha
popf
or
pop
fstp
add
punpckhwd
fcom
dec
push
icebp
scas
push
and
push
es
test
inc
push
ds
push
and
push
out
push
add
(bad)
jb
sti
popa
xchg
fiadd
xchg
popf
pop
lds
into
inc
outs
push
push
sar
inc
mov
sub
cmp
sbb
jns
movs
push
add
into
adc
ficomp
dec
mov
inc
pop
dec
(bad)
push
adc
dec
sbb
pop
push
push
pop
cmp
aam
aas
mov
jmp
mov
mov
lods
push
mov
int
xchg
ins
inc
add
push
mul
cld
enter
out
xor
inc
cmc
inc
cmp
add
mov
nop
sbb
sub
cmc
repz
std
clc
adc
inc
sti
dec
scas
stos
les
jbe
inc
xchg
iret
sub
or
mov
or
and
xchg
loope
aam
jl
movs
jmp
xor
push
dec
dec
push
dec
push
sbb
pop
mov
enter
mov
(bad)
sub
xchg
mov
mov
ret
ret
fxch
push
cmps
pop
imul
jo
mov
shl
add
and
scas
fwait
aaa
sub
inc
pop
outs
cmp
and
cmp
sub
xchg
xchg
ins
or
(bad)
pop
enter
enter
imul
cmp
push
je
pop
repz
retf
stc
jbe
and
push
pop
adc
push
push
mov
mov
push
adc
es
rcr
out
push
sti
pop
ja
mov
sar
mov
inc
xchg
or
pop
lds
(bad)
mov
push
xor
mov
loop
lods
dec
adc
test
lock
jecxz
mov
repz
jns
mov
xchg
das
call
pop
stos
loopne
mov
add
xor
out
ror
mov
mov
lods
stc
mov
pop
mov
jo
sahf
fcmovbe
mov
mov
pop
adc
in
xchg
(bad)
out
div
in
mov
data16
stos
rol
and
xchg
scas
jb
bound
sahf
addr16
jp
movs
call
neg
aam
scas
cli
mov
adc
in
ret
pop
jne
idiv
or
mov
repz
gs
fimul
les
xchg
(bad)
sub
pop
das
sti
add
dec
fist
std
adc
popa
or
movs
neg
push
sub
pop
test
imul
jg
xchg
(bad)
xor
adc
(bad)
push
or
sar
dec
sbb
xor
cmp
aaa
lds
pop
fild
push
xor
jg
stos
xor
mov
rol
div
mov
and
xchg
aas
xchg
ins
push
loope
das
idiv
clc
(bad)
fisttp
push
(bad)
jno
sub
mov
stos
retf
gs
rol
hlt
retf
ss
test
(bad)
push
and
or
icebp
cmp
mov
ins
adc
push
mov
retf
imul
in
sbb
clc
push
and
jge
mov
ror
mov
out
loop
mov
push
enter
add
adc
pop
in
jg
imul
adc
leave
pushf
in
mov
and
test
mov
xchg
retf
rcr
push
arpl
(bad)
inc
rcl
cdq
mov
xor
xor
xchg
dec
shld
pop
psubb
bound
jb
push
outs
movs
mul
test
adc
adc
push
sub
fist
sahf
adc
das
test
jecxz
xchg
or
jns
lahf
aad
movs
cmp
and
jns
push
(bad)
cdq
mov
and
pop
mov
jp
and
mov
cdq
loop
push
fs
jl
fstp
mov
jnp
push
jno
ret
sub
adc
cmc
mov
sbb
or
push
mov
scas
mov
shl
rcl
jo
pop
jb
imul
pop
mov
jg
sub
fwait
xor
scas
mov
inc
mov
xchg
es
stos
cmc
inc
adc
adc
scas
mov
call
jmp
clc
mov
adc
jg
into
cmp
out
jno
ins
(bad)
aam
push
repnz
sbb
data16
inc
scas
cmp
pop
cld
lahf
add
aam
cmovne
mov
clc
inc
lock
inc
dec
mov
mov
in
addr16
and
inc
and
mov
push
xchg
adc
sahf
fucomi
mov
and
leave
into
push
mov
ja
(bad)
enter
pushf
sub
mov
or
xchg
in
mov
loop
clc
xor
jns
movs
mov
(bad)
push
xlat
(bad)
rol
jb
aad
arpl
inc
dec
jno
cmp
dec
add
pop
and
jmp
sub
jo
add
mov
push
clc
iret
movs
push
push
dec
adc
pop
test
inc
jmp
std
shl
std
in
adc
cmp
popf
jno
hlt
push
or
sub
mov
jb
retf
or
push
push
popf
imul
sbb
imul
sub
jp
adc
xchg
int3
out
out
mov
cmp
test
mov
jge
lods
pop
inc
cdq
int3
call
cs
mov
les
jae
jecxz
or
pop
pop
enter
xor
cmps
jnp
and
sbb
dec
test
das
inc
push
cmp
mov
into
mov
fadd
mov
inc
sub
enter
jno
cdq
push
pop
nop
jmp
sub
arpl
aad
int
cmp
test
clc
push
sbb
in
out
cli
scas
inc
and
fldenv
sbb
inc
fadd
imul
dec
jmp
and
cmc
mov
out
xor
dec
or
cmps
clc
dec
sbb
in
sar
repz
pop
lods
arpl
cmps
or
ins
ins
mov
inc
push
xchg
and
push
inc
cmps
add
mov
scas
clc
xchg
cdq
fdiv
mov
sub
repnz
call
outs
push
xchg
lods
pop
xchg
popa
fst
mov
div
push
rcr
cmc
mov
jne
xor
or
int
aad
addr16
sti
int3
push
enter
jp
test
pop
test
ja
movs
or
pop
movs
test
fwait
cli
inc
sbb
clc
and
(bad)
iret
inc
repnz
neg
cmp
or
(bad)
int
and
ror
and
push
js
add
adc
cdq
xor
bound
lds
outs
push
xor
sbb
xchg
ja
fsub
mov
mov
xor
cmp
test
je
ss
das
imul
mov
ficom
stos
pop
gs
gs
retf
sbb
adc
add
xchg
hlt
stos
mov
jl
std
push
push
pop
hlt
adc
xchg
(bad)
jne
mov
daa
enter
cmp
sbb
sub
movs
mov
movs
push
push
add
sbb
fs
jne
push
(bad)
xor
and
imul
mov
cmps
inc
imul
mov
idiv
shr
cmps
mov
jmp
mov
pop
loopne
mov
lea
imul
cmps
jb
push
sub
ins
pusha
push
pop
mov
stc
inc
jle
inc
xchg
loope
in
cmp
dec
cmp
xchg
movs
outs
and
sbb
pop
arpl
jg
dec
movs
push
in
loope
test
pop
inc
shl
push
(bad)
push
inc
out
icebp
outs
leave
add
inc
cmp
adc
js
mov
xchg
lods
and
ss
mov
out
ret
sbb
jno
pop
clc
pop
rcl
shl
cmps
std
mov
push
rcl
aad
add
inc
sbb
fwait
sbb
(bad)
xor
and
jae
lahf
push
pusha
pop
mov
rol
xchg
cmp
mov
in
lods
inc
xchg
imul
(bad)
mov
cmp
jo
xchg
adc
(bad)
jle
mov
aam
(bad)
lds
sub
out
call
sahf
sti
add
sbb
mov
call
mov
repnz
div
cmps
and
adc
xchg
sbb
mov
je
mov
and
in
jl
or
out
add
adc
mov
push
dec
repnz
jl
dec
jno
pushf
arpl
call
or
cvttps2pi
mov
push
mov
jns
add
push
xchg
adc
cmps
xor
sbb
cdq
lahf
push
nop
jg
jnp
dec
mov
sub
mov
cmps
lds
add
xchg
push
and
mov
xchg
rcl
xchg
dec
or
sub
test
out
ss
lahf
xchg
adc
clc
fcmovnbe
adc
test
out
scas
test
sar
lds
or
sahf
ins
xor
dec
call
std
xor
cmc
rcr
test
in
jnp
sbb
xor
or
mov
pop
popa
out
fwait
sub
push
xor
mov
bound
mov
pop
mov
mov
inc
aaa
xchg
adc
add
cmp
popa
pop
das
push
and
pop
inc
in
out
mov
imul
fadd
loop
inc
popa
out
xchg
cld
mov
xchg
pop
and
shl
jne
jo
lahf
jae
daa
rcr
leave
lea
ror
sub
bound
pop
cmp
mov
or
inc
in
data16
ja
add
xchg
xchg
xchg
arpl
lahf
add
or
nop
sub
sub
cmc
mov
xlat
cmp
cli
popa
pushf
sub
(bad)
test
sbb
push
scas
cwde
imul
cli
shl
pop
sbb
mov
push
cmp
cmp
jnp
xchg
(bad)
pop
cmps
lods
sbb
lea
pop
push
imul
push
mov
pop
mov
and
cli
jbe
dec
push
test
mov
fcmovnbe
push
daa
jb
mov
aas
loopne
popa
mov
popa
mov
mov
xor
mov
xor
stos
sbb
nop
imul
inc
stc
xor
int
mov
adc
fsubr
lods
xchg
sub
cmp
and
std
dec
pop
mov
rcr
add
test
or
in
adc
mov
sbb
(bad)
sbb
loope
cld
and
and
out
xor
inc
popa
ret
sub
mov
pop
fcom
pushf
jae
cmp
mov
das
mov
push
mov
adc
xchg
xor
retf
ss
in
sbb
and
inc
cmp
mov
inc
pop
ficom
sub
or
jl
pop
es
pop
dec
push
xchg
or
test
(bad)
cmc
jge
pop
js
sbb
stos
daa
push
or
icebp
add
lds
dec
lds
aam
lock
push
pusha
popa
into
pop
(bad)
cwde
or
popf
jle
popf
retf
test
fisttp
add
sub
in
push
inc
and
mov
fwait
pop
adc
inc
rol
cs
pusha
mov
sub
shl
jo
jmp
push
shl
mov
aaa
retf
repnz
retf
in
hlt
add
ja
or
movs
pusha
retf
icebp
repnz
loopne
hlt
pop
jl
push
and
daa
sub
cli
sub
ds
call
fild
inc
popa
cmps
hlt
jp
xor
xor
mov
add
pop
mov
daa
retf
mov
mov
addr16
mov
cwde
out
inc
fcmovu
inc
hlt
outs
adc
scas
fscale
aad
adc
xchg
push
or
push
fiadd
push
dec
dec
dec
dec
stos
in
add
push
in
mov
bsf
push
movs
lock
sub
add
push
ins
pushf
call
jns
cmp
sti
add
cdq
hlt
sub
sbb
shr
add
jmp
nop
push
cmp
pusha
jb
sub
push
sbb
neg
clc
lahf
mov
mov
mov
clc
xchg
xor
test
ffreep
sub
bound
and
loope
scas
cmp
gs
lods
stos
popf
mov
fistp
xor
push
jmp
pop
cmp
jo
push
mov
mov
mov
adc
mov
push
mov
inc
scas
in
mov
outs
sbb
stos
mov
push
(bad)
mov
cmps
fcomp
xor
rcl
jp
push
xor
mov
cli
sbb
cmp
sbb
icebp
add
cmp
and
outs
push
ja
test
inc
nop
pop
cwde
mov
ins
rol
dec
lods
mov
dec
mov
cli
popa
push
rep
pop
inc
cmc
cmp
jae
int3
xor
scas
jns
mov
test
dec
mov
cli
xor
test
fsubr
jno
inc
test
pop
pop
mov
mov
(bad)
and
mov
shl
or
pop
xor
mov
popa
mov
push
mov
ret
lods
fcmovnb
les
push
pushf
cld
(bad)
outs
aam
jnp
pop
cmps
or
in
test
add
push
sbb
pop
jne
test
dec
xor
hlt
mov
aam
mov
(bad)
sbb
aam
xor
push
(bad)
mov
xchg
jb
cmp
fwait
mov
sub
dec
fmul
pushf
push
dec
rol
mov
pop
push
or
(bad)
imul
call
ins
push
outs
es
in
clc
pop
ins
push
jmp
push
jge
out
push
sbb
sbb
dec
push
das
lock
stc
fcmovnb
cld
and
test
jne
adc
std
lahf
in
push
cdq
and
sub
cmp
dec
jnp
sbb
mov
sbb
push
add
cmps
cmp
pop
out
sbb
test
mov
mov
xor
xchg
xchg
stos
enter
ins
jo
adc
out
xchg
xchg
push
add
aas
int3
adc
or
call
add
push
add
cld
sub
mov
(bad)
loope
and
jge
in
cdq
imul
dec
cmp
cmp
pop
add
repz
push
(bad)
cmp
cmp
fsubr
inc
(bad)
es
or
fsub
and
mov
sbb
sub
movs
sbb
es
mov
packuswb
je
int
adc
jns
test
clc
loop
loopne
gs
in
sub
fs
mov
popw
shr
mov
out
ja
add
dec
dec
sub
pushf
pusha
mov
outs
xlat
inc
inc
inc
xchg
pop
inc
not
(bad)
sti
add
lods
rcr
pop
call
sahf
mov
or
sti
pop
out
in
and
retf
xchg
mov
(bad)
xor
sub
scas
sbb
shl
ret
adc
das
loope
out
jl
push
inc
xchg
jb
das
jmp
(bad)
jmp
sahf
pusha
and
jmp
mov
sub
leave
fadd
mov
push
sbb
cmp
sbb
sbb
jne
adc
vorps
mov
out
xor
ins
push
push
jg
sub
mov
cmp
stc
mov
inc
enter
jo
loope
sbb
mov
arpl
dec
jg
xchg
or
pop
lock
loop
and
pop
pop
mov
jg
cmps
mul
aas
dec
pop
inc
sti
mov
repz
iret
es
or
jns
add
sub
movs
and
xor
jle
mov
mov
add
add
mov
add
dec
repz
in
pusha
mov
jp
xchg
jae
inc
aad
jmp
(bad)
pop
shl
add
ins
cmp
sub
jg
into
or
(bad)
pop
mov
or
and
fsubr
jbe
dec
pop
cmps
loope
mov
int
xchg
sub
cmp
inc
ret
movs
outs
and
bound
adc
sub
out
fcom
mov
mov
mov
inc
mov
mov
repnz
pop
jmp
repnz
fistp
mov
jg
inc
outs
enter
sub
add
sahf
shl
dec
(bad)
adc
mov
or
dec
ror
ins
xchg
aaa
mov
cmp
ds
cdq
fs
pop
scas
loopne
int3
pop
jp
add
xor
int
cmp
pop
adc
mov
cmp
or
loop
adc
mov
jo
jns
mov
push
jle
lea
sub
sub
inc
jne
dec
jb
ficomp
pop
sti
inc
inc
(bad)
push
(bad)
lds
or
sti
and
or
or
(bad)
dec
(bad)
test
push
push
pusha
sar
adc
push
jg
adc
ds
icebp
dec
jp
jne
imul
std
dec
mov
fbld
das
xor
mov
push
mov
push
in
sbb
xor
int3
sbb
lds
call
out
out
push
cdq
xchg
jp
add
xor
mov
pop
pop
fisub
push
outs
(bad)
pop
cmp
imul
fwait
sub
dec
loope
test
aam
scas
rcr
ret
dec
jb
jae
lahf
idiv
sahf
imul
shl
mov
dec
pushf
scas
les
push
push
lea
jbe
scas
jp
pop
jo
cmp
cs
dec
sub
push
aas
nop
retf
adc
mov
pushf
jecxz
xchg
pusha
loopne
mov
push
push
mov
out
add
and
dec
pop
sub
or
cli
cmp
pop
mov
addr16
jno
movs
adc
pop
loope
pushf
stos
sbb
xor
mov
push
ja
stc
(bad)
fsub
push
add
and
sar
push
mov
rcl
push
hlt
lods
nop
arpl
repz
inc
arpl
jmp
je
xor
sub
or
inc
(bad)
leave
(bad)
sbb
or
sti
sub
and
ja
rcr
mov
lahf
pop
mov
push
xor
add
sahf
ins
pop
mov
jb
inc
pop
ins
clc
xor
pop
nop
rcl
fcomp
ret
mov
outs
(bad)
arpl
mov
pushf
and
sbb
jb
sti
sbb
(bad)
sub
cmp
mov
and
push
std
add
fcmovnb
(bad)
jb
sbb
(bad)
jb
or
pop
jne
popf
adc
fnsave
lock
sub
out
(bad)
push
lahf
lods
ins
xor
or
pop
xor
jecxz
ret
pop
in
ja
retf
repz
add
mov
aas
das
cmps
aad
idiv
bound
imul
push
mov
cmp
ins
mov
xchg
cld
pop
outs
sub
mov
(bad)
leave
sbb
xchg
imul
inc
shl
push
lock
ror
aas
in
jecxz
out
pop
sub
pop
into
into
mov
(bad)
push
pop
stos
inc
mov
inc
popa
jo
imul
sub
mov
sub
pop
rol
inc
aas
mov
ins
popf
adc
or
dec
outs
push
mov
rcl
add
les
jbe
int
gs
mov
inc
adc
loop
ins
dec
imul
jb
and
ror
add
or
pop
out
arpl
stos
fnstsw
neg
add
(bad)
mov
lods
or
dec
cs
jno
cmp
sbb
pop
mov
inc
inc
retf
push
sub
mov
imul
mov
adc
ds
xchg
std
or
dec
sbb
iret
mov
test
jmp
or
les
mul
xchg
and
repnz
fsubr
dec
imul
out
jecxz
and
test
daa
inc
fcomp
in
jl
sub
pusha
cmp
cmps
imul
ss
pusha
mov
add
retf
rol
push
shl
mov
add
movs
jns
mov
lea
mov
pop
scas
and
dec
pop
xchg
ret
clc
cmp
inc
push
(bad)
retf
sbb
sti
cmc
retf
into
movs
xlat
inc
add
dec
jno
mov
imul
cmps
or
out
sbb
loop
sbb
sub
jle
jo
adc
pop
mov
iret
inc
ror
dec
icebp
in
popa
jne
js
pop
mov
mov
int
dec
mov
imul
sub
xchg
out
bound
fwait
sbb
push
push
call
test
fidivr
pushf
inc
sub
(bad)
int
pop
int
js
jmp
jns
test
dec
popf
push
sbb
mov
push
sbb
sub
clc
jmp
inc
aas
push
sub
and
in
mov
rcl
mov
add
ins
(bad)
hlt
and
lods
cmp
(bad)
pushf
inc
pop
mov
push
push
jns
adc
arpl
(bad)
shl
sti
pop
neg
mov
jle
mov
dec
test
xchg
ror
adc
adc
sub
iret
test
ror
push
daa
mov
loop
retf
mov
addr16
sbb
jg
dec
inc
fst
sahf
arpl
inc
xchg
(bad)
lds
out
pand
ret
sbb
pop
mov
or
sbb
shr
cmps
pop
dec
and
xchg
jp
push
pop
mov
xchg
or
and
sub
mov
sahf
jbe
xor
add
dec
pop
sub
jb
stc
and
out
xchg
xor
loop
pop
mov
mov
sbb
mov
jae
shl
test
out
fwait
les
stos
mov
test
push
test
mov
cmp
inc
cmps
cli
pop
pusha
lods
and
adc
lds
adc
inc
xchg
fs
jecxz
jmp
push
in
pop
call
fwait
not
stos
call
aas
fincstp
stc
test
cmp
or
stos
sub
mov
aas
xchg
imul
jnp
jbe
sub
add
dec
fwait
test
cmp
jno
mov
dec
pop
daa
cmp
(bad)
mov
mov
repnz
pop
call
lods
mov
sar
mov
rcl
sbb
jae
retf
mov
or
dec
ja
cmps
test
or
stc
gs
inc
cld
fs
and
jns
movs
mov
repnz
jp
test
jnp
pop
xchg
addr16
xor
gs
fld
or
xchg
repz
push
pusha
pop
test
adc
ins
pop
in
fidivr
xchg
and
lea
cmps
xor
and
jns
ds
push
jns
call
sbb
test
sbb
retf
mov
(bad)
ret
push
ret
int
pusha
sbb
cmps
push
or
or
and
cld
ins
and
xor
dec
pop
rcpps
xchg
inc
pushf
sbb
mov
xchg
popa
test
add
mov
xchg
pop
nop
bound
das
data16
sbb
dec
jo
(bad)
cmps
and
call
sbb
jge
cmp
xor
aam
into
test
sub
pop
imul
jae
push
imul
cld
loopne
test
and
fs
mov
je
add
mov
sub
stc
mov
repnz
xchg
div
leave
lods
aas
sbb
pop
mov
cmp
mov
sti
fwait
xchg
js
mov
retf
cmp
inc
inc
sub
test
xchg
fwait
outs
loop
stos
daa
call
inc
ins
fisub
push
mov
and
mov
scas
shl
cmp
sub
mov
xor
inc
jmp
enter
test
xchg
fdivp
in
pop
loope
inc
add
add
pop
rcl
push
inc
jb
push
mov
scas
pop
icebp
or
mov
cmps
ins
lods
pop
cmp
int
xchg
mul
xor
mov
pop
adc
sti
jle
sub
push
mov
and
dec
movs
outs
jae
cwde
sub
sub
adc
arpl
imul
sar
ud2
(bad)
jmp
dec
sbb
(bad)
retf
push
push
xchg
arpl
sub
addr16
add
cmp
fadd
mov
xchg
dec
mov
scas
rol
jmp
imul
cs
add
jg
mov
fs
shl
call
inc
add
fdiv
fdivp
lea
test
bound
sub
mov
push
aad
add
jns
xor
xor
jne
mov
sub
ins
in
mov
sahf
push
shr
xchg
pop
cmp
addr16
cmp
fisttp
scas
stos
or
push
adc
rcl
rcl
mov
dec
push
pop
jge
cmp
popf
clc
add
call
sub
stos
pop
push
ret
dec
(bad)
jmp
or
mov
inc
aam
jbe
push
mov
or
xchg
xor
mov
into
and
jae
lahf
xor
movs
jge
and
(bad)
std
outs
pop
setg
cdq
in
fs
sar
fisub
and
dec
pop
mov
or
sbb
fisubr
pop
dec
hlt
call
mov
pop
or
mov
aaa
push
xor
push
xchg
cmp
das
and
ins
cld
xchg
inc
add
mov
xchg
mov
js
in
mul
daa
loop
ds
retw
out
and
scas
xor
add
mov
mov
mov
test
repnz
mov
mov
push
nop
psrld
sahf
in
lock
fwait
sub
inc
push
mov
mov
jecxz
jp
jmp
jno
xchg
jnp
mov
shr
(bad)
push
adc
add
retf
sar
inc
das
test
sahf
fbld
jmp
out
out
sbb
jne
xchg
pop
rcl
inc
cs
xor
and
xor
ss
test
fcomip
push
das
in
pop
ret
stos
inc
mov
bound
mov
call
mov
adc
push
dec
cld
std
mov
idiv
cmps
add
imul
cmp
popf
stos
mov
inc
cmps
xor
shr
lahf
call
mov
enter
adc
jne
outs
jno
pop
daa
mov
jnp
and
sbb
and
adc
jb
xlat
lods
pop
sub
xor
popa
cs
cs
cmps
int3
mov
sub
hlt
inc
test
ret
mov
xor
cmps
popa
addr16
jecxz
push
dec
addr16
bound
movs
call
push
loopne
add
push
mov
mov
sbb
sub
or
jle
xchg
cmp
or
cwde
push
add
jbe
push
loop
sbb
out
xlat
jg
pusha
jmp
push
ds
push
ja
mov
loopne
inc
mov
mov
xchg
enter
push
sub
cli
hlt
clc
push
movs
mov
nop
jo
add
enter
jno
cld
out
arpl
push
in
pop
lea
jle
jns
lahf
cmp
xchg
push
cmp
mov
int
out
cmps
ss
mov
dec
inc
add
inc
adc
mov
adc
mov
mov
adc
pop
xchg
(bad)
cmp
push
mov
mov
or
pop
xchg
scas
sbb
es
mov
les
xor
mov
bound
xchg
or
jnp
push
shr
mov
test
das
call
push
xchg
lods
and
stc
leave
and
cmp
(bad)
fidivr
jnp
ret
xchg
or
dec
or
jbe
adc
or
into
lock
dec
sub
shr
jo
out
pop
jne
xchg
dec
pop
mov
aad
or
out
xchg
add
outs
fld
adc
inc
or
mov
mov
pop
test
sub
inc
xchg
test
mov
ret
stos
lods
or
push
inc
xchg
push
or
mov
xor
inc
dec
cmp
ret
lods
or
lahf
outs
gs
(bad)
repnz
idiv
arpl
(bad)
mov
and
test
xchg
ror
mov
xchg
pop
shr
jl
stos
clc
cs
xchg
pop
jge
sahf
jno
pop
inc
loop
ficom
lods
jmp
add
sub
lods
retf
ret
xor
cmp
fcomi
jno
inc
inc
movs
cmp
mov
xchg
js
adc
or
out
adc
cdq
ss
loop
loop
fdiv
push
pop
repz
lds
nop
xchg
iret
mov
pop
push
mov
pop
jae
adc
sub
cmp
retf
mov
or
push
data16
add
sbb
add
lods
dec
mov
mov
icebp
pop
mov
mov
jl
jno
fsub
or
jbe
push
jl
xchg
pop
ret
inc
sbb
inc
jns
ret
jge
add
adc
ss
or
ins
loope
retf
pop
aad
push
repnz
add
push
nop
or
movs
jl
jecxz
and
fisttp
pop
jge
pop
lahf
loopne
add
add
leave
or
add
fidiv
movs
jne
cdq
sar
pushf
mov
clc
pop
push
pop
jbe
add
loope
cmps
pop
mov
push
or
cmc
fcmovu
rol
pushf
mov
aas
add
sahf
pop
icebp
lods
fs
popf
adc
cmp
jo
add
ror
jle
and
jecxz
sbb
sub
push
addr16
adc
fisubr
mov
out
dec
outs
loope
ja
(bad)
fst
push
or
pop
aam
pusha
mov
add
sub
xchg
retf
add
add
jo
jl
lds
hlt
add
xchg
mov
jnp
push
jmp
test
enter
cmps
fs
rcl
jge
inc
pushf
mov
xchg
int
sti
add
call
les
fstp
jge
inc
sbb
and
push
mov
sbb
mov
imul
add
xchg
retf
int
jns
pop
arpl
fcom
stc
mov
push
dec
add
xchg
push
pop
push
sahf
ret
enter
adc
mov
lods
cs
in
push
test
dec
loope
sbb
sub
ins
(bad)
lock
cmp
dec
add
rcr
cli
outs
mov
(bad)
inc
cmps
adc
hlt
jp
xor
fs
pop
mov
loope
and
mov
pop
dec
(bad)
popf
mov
mov
mov
add
or
mov
loop
mov
dec
lock
sub
out
mov
pop
sub
adc
iret
cdq
sub
gs
and
add
or
or
xchg
xlat
(bad)
stos
cmp
jmp
bound
fld
int
push
jo
ret
push
mov
pop
out
sti
pop
movs
sub
sub
mov
dec
push
pop
and
mov
mov
mov
cmp
shr
ror
cmp
retf
jmp
mov
jnp
xor
sub
imul
ror
movs
push
cld
scas
popf
hlt
push
and
jne
push
dec
mov
mov
pop
pop
mov
sbb
cdq
es
data16
movs
mov
inc
sbb
adc
pushf
xchg
aad
jmp
loopne
repz
cmp
loopne
shld
loope
retf
out
adc
outs
fwait
sub
jne
bound
push
pop
add
mov
fnstsw
jmp
les
repz
cmp
xor
outs
pop
test
mov
bound
sahf
add
loopne
mov
add
data16
xor
jp
fsubr
or
mov
mov
out
iret
out
lahf
cmovge
(bad)
out
lea
gs
mov
jbe
mov
inc
std
pop
xor
loop
sbb
mov
push
sub
cmp
scas
clc
adc
adc
sub
std
pop
push
ror
stos
(bad)
ins
xor
mov
scas
test
std
scas
(bad)
(bad)
lock
inc
(bad)
(bad)
fstp
pop
(bad)
arpl
dec
lock
(bad)
jne
test
out
cmp
outs
and
mov
sbb
pop
ficom
retf
sbb
xchg
adc
fmul
cmp
xchg
(bad)
pop
out
cmp
mov
inc
xchg
in
sbb
sub
(bad)
push
lods
mov
push
push
mov
outs
(bad)
out
push
inc
movs
sbb
retf
adc
fucomip
sbb
mov
pop
lock
sbb
in
hlt
retf
mov
leave
mov
es
or
(bad)
outs
xor
xchg
mov
cmp
and
mov
dec
dec
mov
dec
jl
mov
and
xor
retf
inc
sbb
xor
push
add
lods
push
movs
cmp
cs
hlt
fwait
cmc
icebp
(bad)
xor
es
movs
jo
out
ss
ins
xchg
mov
dec
add
cmp
jecxz
cmps
out
or
inc
aam
ss
push
(bad)
xchg
cmc
mov
repnz
jb
fstp
cs
dec
aaa
sar
test
lahf
aad
sbb
int
jle
and
add
inc
call
jmp
ins
adc
rcr
push
push
or
ds
jl
and
and
rol
daa
pop
int
cmp
aas
inc
sbb
xor
xor
cdq
arpl
or
dec
fcmovne
mov
repz
addr16
mov
(bad)
jp
repnz
aaa
call
lea
inc
push
test
mov
pop
and
out
inc
sub
aaa
pop
dec
repz
outs
ss
or
and
arpl
xor
add
mov
pop
jmp
jbe
int3
mov
les
sti
ja
jmp
sub
push
mov
retf
outs
test
dec
dec
(bad)
and
dec
dec
mov
enter
pop
push
jnp
in
inc
adc
int3
sub
push
xchg
sahf
outs
mov
mov
(bad)
push
cld
push
dec
fnsave
sbb
push
or
adc
and
(bad)
mov
jmp
mov
sub
ret
scas
in
sti
adc
cmp
or
test
out
jge
sub
adc
imul
stos
jmp
pop
add
stos
jmp
call
jecxz
pop
mov
call
jmp
mov
cmc
sbb
popa
push
mov
jmp
in
setne
xor
(bad)
hlt
xor
xor
cmp
ficom
and
push
test
cli
adc
cdq
push
fxch
lods
test
pusha
leave
sbb
and
sub
sub
and
(bad)
daa
sbb
in
scas
push
mov
jge
jns
and
xor
popf
push
outs
shr
add
mov
shr
sbb
xor
into
inc
xchg
xor
sub
fs
dec
push
sti
pop
in
lods
add
push
bound
add
push
jns
sbb
inc
or
test
jne
fabs
pop
cli
push
cmps
out
ror
loope
ret
jb
pusha
jne
mov
(bad)
outs
ins
dec
movs
frstor
(bad)
fbld
adc
and
sbb
or
pusha
loop
stc
test
mov
call
scas
scas
jb
bound
push
cmp
mov
retf
push
jl
inc
or
(bad)
mov
sbb
sbb
cmc
adc
add
fimul
adc
popf
rol
add
test
in
out
fnsave
jbe
mov
inc
and
add
test
int3
dec
dec
adc
jo
cmc
push
pop
mov
in
jno
or
loop
ror
pop
movs
jl
xor
jecxz
adc
imul
test
dec
in
sub
fsubr
dec
xor
mov
inc
les
or
sub
xlat
xchg
retf
adc
xor
jmp
clc
add
xchg
pop
jecxz
and
sub
idiv
arpl
in
fwait
lea
fidiv
movs
dec
stos
ret
aam
xchg
js
mov
cmc
loopne
sub
bnd
jbe
cmps
leave
lock
fisub
int
mov
mov
xchg
mov
mov
fs
mov
loopne
dec
jge
ins
vmread
(bad)
lahf
sub
cwde
mov
rcr
pusha
sbb
jno
call
add
xor
inc
pop
mov
inc
adc
xor
lar
pop
sbb
aad
push
in
jns
push
adc
out
xchg
cld
ror
loopne
mov
xchg
int
inc
mov
pushf
xlat
pushf
stos
cs
pop
ins
and
push
fstp
mov
xchg
or
popa
dec
sub
movs
ret
aas
mov
add
dec
popf
add
mov
sar
inc
dec
add
lock
out
jl
fidiv
hlt
sub
add
add
in
test
outs
pop
sub
dec
and
xor
mov
stos
loope
pusha
jno
fnstcw
sub
xchg
out
or
xchg
dec
fidivr
xor
xlat
mov
cwde
mov
mov
jge
fidivr
inc
cmp
(bad)
pop
out
add
test
and
sbb
pop
ds
lea
and
out
retf
or
mov
movs
(bad)
and
sub
fdivr
cmps
jg
push
cli
enter
adc
dec
jecxz
faddp
xchg
pop
sub
aaa
enter
call
fwait
and
enter
mov
or
mov
adc
xor
lods
clc
in
sbb
bound
or
jb
xor
shr
rol
test
xchg
inc
cwde
xchg
inc
adc
mov
in
mov
sub
mov
int3
xor
adc
aam
jae
and
push
sbb
repz
cmps
xlat
mov
cmc
inc
(bad)
ror
sar
mov
push
cmp
cmp
cs
test
cmp
icebp
jbe
pop
iret
cmp
es
lods
push
jmp
push
xchg
sub
hlt
xchg
stos
mov
gs
xor
leave
sbb
not
adc
jl
mov
or
cs
repnz
hlt
mov
jo
inc
sbb
das
aad
jl
pop
or
js
mov
cmp
pop
or
dec
dec
sub
das
loopne
mov
and
cmp
popa
push
sub
mov
imul
ins
cmc
cli
mov
xlat
cmp
repnz
mov
leave
xchg
pop
lods
stos
(bad)
jmp
stos
inc
dec
aaa
in
push
dec
push
adc
popf
jns
sub
sub
addr16
jne
push
cmp
loopne
mov
shl
sahf
fild
jmp
and
fistp
retf
jbe
fisubr
gs
xchg
pop
mov
(bad)
in
mov
push
pop
dec
adc
xchg
ret
and
xor
int
cmps
fwait
dec
arpl
mov
scas
dec
sbb
out
adc
push
pop
mov
push
in
push
jecxz
in
daa
jmp
push
(bad)
add
xor
test
lahf
or
inc
push
inc
or
xchg
jmp
ret
push
movs
mov
pusha
je
lock
xor
mov
lods
and
push
dec
adc
xchg
imul
aad
popf
fistp
push
nop
add
push
xor
call
fcomi
pop
pop
(bad)
shr
inc
sub
inc
and
pop
cmp
pop
jge
aas
clc
jno
or
sub
inc
xchg
dec
and
call
jl
adc
mov
das
or
xor
jb
xor
das
lds
mov
push
call
gs
sub
mov
data16
jnp
mov
fld
add
out
(bad)
jo
adc
dec
lods
repz
clc
mov
sub
call
repnz
fs
mov
jne
(bad)
push
les
pop
sbb
cwde
aas
movs
inc
aas
test
cmp
arpl
cmp
std
push
add
fwait
in
nop
xchg
lods
mov
das
into
mov
push
sbb
adc
jb
loopne
push
dec
sahf
loope
fist
jmp
xor
mov
in
gs
adc
inc
xchg
mov
adc
or
fst
jmp
loop
adc
mov
push
stc
xor
into
jmp
test
fimul
cwde
clc
mov
jns
jp
dec
jmp
loopne
mov
sbb
dec
cmp
lods
mov
xchg
xor
add
sbb
xchg
push
or
and
int3
xchg
jnp
sub
outs
jne
xor
fucom
pop
mov
dec
pusha
jns
mov
(bad)
rcl
adc
retf
sub
jbe
xchg
jno
cmc
test
add
sti
fidiv
pusha
test
or
pushf
mov
mov
sahf
push
lods
mov
fs
int
test
movs
sbb
pop
fwait
add
mov
pop
arpl
sbb
push
mov
test
pop
sar
fwait
or
mov
sub
mov
fdivr
adc
test
and
nop
daa
mov
push
ins
inc
pop
cdq
pop
or
js
sub
cmps
(bad)
fnstenv
ins
loop
aam
sbb
or
stos
out
fwait
mov
inc
idiv
mov
stos
dec
outs
ror
adc
loopne
lods
cmps
jg
mov
sub
lods
mov
stc
add
inc
adc
cmp
cmc
movs
mov
jb
imul
dec
pop
jno
bnd
test
es
xor
mov
xchg
in
lds
(bad)
xor
aas
ins
clc
fs
jb
pop
js
cdq
(bad)
out
stos
push
aas
mov
sub
mov
jnp
mov
push
dec
cmp
(bad)
fisttp
fcomp
aam
add
aaa
ss
les
xor
mov
mov
movs
inc
mov
cmp
inc
dec
int3
imul
sbb
mov
jb
dec
or
add
and
mov
pop
and
xchg
loopne
gs
stc
cmp
mov
aam
mov
fimul
mov
mov
pushf
hlt
mov
ret
cmps
call
scas
mov
jmp
cmp
test
(bad)
retf
lahf
mov
int3
push
mov
pop
mov
jl
pop
adc
xchg
test
cmp
mov
sub
icebp
ss
sub
cld
in
xchg
jl
cld
cmp
and
add
sub
fs
clc
lock
add
inc
ds
jmp
push
mov
cmp
mov
pop
mov
push
ret
jmp
sbb
add
dec
ret
cli
cs
jo
sbb
and
out
pop
xor
or
jp
jp
je
(bad)
cdq
mov
hlt
(bad)
in
jae
add
adc
fcomp
aas
das
xor
retf
idiv
mov
imul
mov
es
dec
scas
sbb
adc
mov
xchg
sahf
aad
lahf
mov
push
adc
in
shr
mov
adc
shr
mov
pop
jnp
xor
loopne
push
pop
push
es
dec
es
jno
fwait
mov
imul
clc
and
cwde
push
sub
add
push
cs
mov
iret
mov
lds
or
jno
adc
mov
fcomip
fcmovbe
(bad)
shr
out
test
mov
hlt
pop
dec
std
cmp
dec
aas
xchg
test
or
mov
imul
ret
aas
add
add
stc
push
pop
jp
(bad)
pop
or
into
jnp
xor
(bad)
pop
jnp
xchg
push
jo
push
lods
cmps
xor
scas
addr16
inc
push
(bad)
xchg
xchg
clc
adc
xor
sub
and
and
sbb
sti
sbb
int3
inc
shr
mov
mov
and
test
push
xchg
adc
movs
in
xchg
lock
and
xor
shl
mov
mov
push
sbb
gs
aad
or
push
cmp
out
inc
sub
xchg
call
jno
adc
or
(bad)
jge
dec
ret
das
inc
test
fcomp
rcr
cmp
mov
xor
adc
ret
es
sar
sbb
cwde
shl
outs
xchg
lods
adc
and
jbe
mov
adc
stc
xor
lods
data16
sti
es
push
cmps
pop
jp
cld
data16
int
adc
in
jbe
cmc
lds
cmp
mov
mov
push
mov
cmps
sbb
mov
jge
inc
pop
inc
dec
ja
adc
int3
sbb
repz
xchg
add
pop
stos
or
cmp
adc
jp
ret
shrd
outs
fs
sbb
sub
jge
loopne
stc
adc
pusha
jo
imul
mov
cmp
addr16
fiadd
lds
and
daa
dec
sbb
(bad)
fwait
ret
fidiv
xchg
pop
sbb
push
pop
jmp
jbe
add
pop
xchg
xchg
daa
add
(bad)
push
push
aaa
clc
add
dec
in
push
mov
bound
push
call
movs
or
mov
loopne
cmps
cmps
jecxz
fwait
imul
add
pop
pop
mov
scas
mov
es
inc
call
sahf
push
add
cmp
push
lds
or
mov
das
dec
leave
push
out
or
adc
dec
imul
test
inc
es
sti
mov
call
and
push
scas
and
mov
sysret
xchg
sub
or
jge
ds
add
repz
jmp
cld
add
mov
add
sub
mov
loop
test
xchg
shr
or
repnz
push
and
adc
not
add
mov
in
lods
xor
xchg
add
mov
shl
and
repnz
repz
push
jns
sahf
inc
xchg
pushf
shr
adc
retf
pop
aam
movs
sub
arpl
push
mov
sbb
push
jne
xchg
mov
fldenv
fistp
cmc
jae
loopne
mov
nop
icebp
xor
daa
adc
jmp
xchg
lahf
mov
mov
hlt
xor
cmp
pop
movs
and
push
xor
push
pop
pop
in
outs
fmul
dec
or
add
repz
pop
mov
xor
lods
ja
daa
inc
cmps
(bad)
into
fidiv
cmp
push
mov
nop
sbb
dec
lods
cmp
adc
enter
or
lock
arpl
loopne
cld
cmp
or
test
jbe
dec
cmp
imul
push
imul
rol
std
xlat
xchg
popa
sub
xchg
dec
cs
mov
pop
es
push
aam
jmp
into
fistp
rcl
sub
xchg
mov
xchg
int
cmp
xchg
and
dec
mov
mov
cli
mov
outs
sbb
scas
add
mov
mov
inc
mov
xchg
out
sub
cmp
es
cmp
icebp
dec
call
scas
mov
add
ss
inc
mov
repz
in
push
data16
and
mov
xchg
push
jmp
inc
test
sbb
fcmovne
push
mov
sub
jnp
loopne
mov
outs
sbb
popa
mov
adc
fmul
or
shr
pop
inc
pushf
mov
mov
int
fwait
xchg
retf
add
mov
jl
xchg
outs
push
mov
sbb
(bad)
cmc
cmps
call
(bad)
fisubr
je
inc
stc
imul
jbe
mov
lahf
dec
int
adc
sub
pop
or
and
cs
imul
int3
fadd
(bad)
xchg
test
adc
stos
and
xchg
dec
mov
dec
lds
hlt
jg
cmp
or
xchg
test
sub
icebp
iret
nop
(bad)
cmp
inc
repz
aaa
(bad)
xchg
bound
add
inc
enter
push
(bad)
sar
loope
add
jb
les
sar
mov
cld
loope
loope
xchg
ins
fstp
dec
sub
mov
push
sbb
jl
lds
sub
mov
dec
or
jle
mov
push
add
dec
in
ret
sbb
test
sub
bound
out
push
sub
ffreep
lock
lea
nop
pop
out
and
cmp
es
dec
pop
fist
push
inc
pop
pop
rep
or
add
or
sahf
jns
mov
dec
xor
movs
cmp
sub
inc
jl
push
and
into
call
push
cmp
les
xchg
mov
mov
push
sub
dec
push
mov
movnti
shl
cmc
mov
inc
daa
sti
push
mov
dec
aas
cmp
das
cmp
mov
sbb
dec
popa
push
repnz
ins
mov
pop
bound
and
jp
(bad)
and
xor
push
inc
inc
rol
add
fild
mov
xor
jp
xchg
or
cmps
stc
ror
push
inc
and
xchg
mov
loopne
rol
xchg
cmp
rcr
test
mov
mov
and
shr
gs
dec
in
dec
in
jl
scas
enter
inc
icebp
xor
sbb
dec
or
adc
pop
shl
mov
jbe
mov
mov
test
mov
ins
in
fld
and
cmp
bound
adc
(bad)
jcxz
lods
adc
push
shl
test
les
iret
cmp
push
mov
dec
xor
add
mov
leave
ins
inc
mov
pop
mov
je
sbb
jae
sbb
push
mul
sub
not
mov
push
xor
ret
pop
push
jmp
icebp
ror
or
lds
(bad)
test
adc
push
xchg
mov
pop
jmp
mov
fidivr
xchg
xor
sbb
retf
or
adc
jne
adc
lods
icebp
mov
and
loope
push
retf
sbb
in
xlat
dec
sbb
int
jecxz
lahf
cdq
mov
sub
mov
push
imul
inc
dec
add
imul
sub
push
inc
dec
xor
rol
mov
adc
ss
dec
dec
outs
ins
add
dec
cmp
cmps
add
mov
stos
mov
mov
jnp
xchg
rcl
and
push
aad
es
dec
into
inc
inc
jnp
adc
sub
or
xor
or
xor
sub
sub
adc
push
inc
jno
pop
je
add
sbb
mov
loope
aad
jmp
(bad)
dec
fmul
fstp
mov
pop
(bad)
ss
outs
add
jno
ror
or
xor
and
inc
cmp
xor
movs
in
xchg
out
jg
lods
pop
jb
arpl
mov
cmp
adc
cmpxchg
sub
ret
cmp
aad
cmp
pop
inc
inc
pop
cdq
lods
fdivr
idiv
push
cmp
mov
inc
int
and
ins
mov
repnz
mov
or
and
(bad)
in
nop
xor
xor
pushf
and
push
jecxz
inc
cmp
jl
lods
and
cmp
xchg
add
add
push
shr
jle
pop
ins
cmps
sub
jmpw
push
dec
nop
xor
(bad)
jge
repz
(bad)
call
sbb
mov
lea
data16
bound
xchg
in
xchg
add
repnz
pop
pop
sar
fwait
push
dec
clc
jl
mov
cmp
repz
adc
enter
cmp
xor
push
inc
stc
mov
sub
pop
test
out
in
inc
dec
loope
popf
xchg
(bad)
cmps
(bad)
adc
test
and
in
inc
mov
fld
dec
inc
xchg
in
popf
movs
gs
cmp
mov
shl
lods
dec
cmc
xchg
mov
lds
inc
inc
mov
push
xchg
or
enter
outs
jge
fild
and
psubw
push
dec
or
neg
iret
mov
sbb
or
cmp
cmps
and
cmps
loop
pop
fcom
out
push
ins
sbb
fsubr
sbb
fistp
das
push
out
call
adc
mov
jge
push
or
aas
or
cli
jns
or
pop
(bad)
stc
mov
les
xor
in
rcl
stos
adc
pop
out
jns
gs
jno
xchg
pusha
mov
int3
test
cmp
pushf
je
rcl
call
or
push
mov
hlt
cld
sbb
inc
push
gs
xor
push
int3
and
jb
push
je
lea
xchg
jmp
mov
dec
lock
mov
imul
pop
mov
cmp
cdq
fmul
add
test
mov
add
push
test
test
movs
aaa
xchg
mov
call
sar
dec
or
jbe
mov
cld
fst
mov
fdivr
mov
call
dec
jb
add
ja
loopne
cld
mov
push
add
inc
outs
or
outs
call
cmp
push
inc
loop
(bad)
pop
jl
mov
out
inc
retf
push
add
and
std
ins
fdiv
xchg
lds
cmc
fwait
xchg
pusha
push
inc
outs
xchg
pop
inc
fwait
sub
xor
mov
aam
or
mov
fidivr
aam
xor
xchg
and
xor
add
sub
inc
cld
js
outs
and
shl
dec
movs
mov
sbb
push
sbb
ins
arpl
push
sbb
aad
test
(bad)
scas
push
pop
(bad)
and
push
retf
sbb
sahf
(bad)
jle
arpl
aaa
push
push
mov
add
inc
(bad)
in
mov
in
sub
pushf
in
add
sbb
push
pop
cld
repnz
lods
lods
js
cs
xchg
and
call
jmp
pop
jbe
lds
jo
sub
mov
push
in
lahf
cmp
test
jge
add
pop
inc
jmp
cmp
push
mov
mov
mov
out
mov
xchg
das
add
jnp
mov
loope
inc
imul
adc
fisub
or
rol
mov
cmp
stos
cld
xor
mov
adc
sub
sbb
mov
mov
fwait
int
inc
sub
popf
rcr
repz
add
sbb
into
iret
in
dec
lahf
mov
ja
aaa
and
or
les
mov
ds
dec
push
inc
or
or
add
(bad)
nop
sub
call
jl
pushw
pop
enter
loop
add
in
arpl
adc
mov
addr16
popa
xor
sub
jb
data16
push
push
jb
pusha
jo
stos
dec
inc
ins
ret
jbe
xor
cmps
adc
mov
mov
dec
xor
dec
adc
add
aas
lahf
sub
xchg
imul
iret
loopne
sbb
(bad)
lock
or
mov
jbe
inc
fwait
sbb
sub
arpl
icebp
inc
and
xor
in
mov
pop
sahf
ret
cmp
mov
xor
jecxz
outs
cli
push
xchg
lods
xor
xchg
xor
mov
outs
mov
cmp
pushf
mov
cmp
inc
or
sbb
jo
loopne
mov
rcr
sti
xchg
int3
push
out
popa
gs
pop
jg
sahf
jle
ja
rcl
cmp
hlt
and
adc
out
out
rcr
ret
sbb
sbb
inc
jae
sub
sbb
mov
out
pop
mov
add
pushf
int
shl
stos
sbb
adc
pop
jmp
aad
dec
sbb
adc
jp
fstp
rol
scas
mov
jmp
xor
test
cwde
xchg
xchg
or
mov
dec
dec
mov
xor
mov
xchg
pop
xchg
pop
push
add
cmp
and
xor
daa
arpl
sub
aas
xor
dec
popa
pop
int
and
mov
add
or
mov
jp
jle
jnp
jl
ret
or
fcomip
fwait
lds
xchg
cmp
(bad)
or
add
mov
xlat
into
mov
test
pop
jb
lods
loop
jo
xchg
cmps
int3
repnz
shl
lahf
call
pop
sbb
inc
inc
movs
jg
jp
repz
jg
cld
fs
and
pop
iret
daa
and
je
jp
xor
add
mov
adc
clc
movs
xchg
test
pop
sub
push
sahf
mov
or
mov
cmps
into
jecxz
data16
popa
pusha
ror
outs
sahf
mov
sbb
add
jnp
sbb
and
sti
mov
sbb
test
aad
test
xchg
ret
mov
sub
push
inc
hlt
aas
jmp
inc
stc
icebp
push
mov
xor
movs
gs
frstor
out
(bad)
cmp
adc
dec
xchg
cmp
clc
push
psubsw
aam
mov
xor
jbe
jns
call
jle
call
add
not
xchg
outs
mov
xchg
push
xor
push
xchg
sub
add
cmp
cld
div
adc
xor
xchg
pop
inc
push
int
xlat
aas
xchg
mov
inc
mov
enter
dec
pop
imul
or
fadd
cmp
adc
outs
aam
jno
stc
xchg
faddp
or
jle
push
sbb
sahf
xor
inc
sbb
adc
push
xchg
add
loope
jge
push
(bad)
or
adc
jle
mov
mov
stc
cmp
fisub
les
stos
lock
cmp
dec
or
fsub
daa
and
mov
adc
xchg
push
inc
push
nop
add
cmc
adc
push
cmp
mov
shl
or
or
cmp
jmp
popa
inc
xor
out
sbb
(bad)
jnp
(bad)
lea
movs
sub
pop
pop
hlt
adc
pop
pop
jnp
inc
push
loopne
pop
push
fild
push
push
sub
aam
lods
aaa
pop
mov
xchg
mov
inc
inc
mov
adc
(bad)
aad
stos
pop
cmp
aas
xor
lods
rcr
repnz
sbb
hlt
mov
xchg
add
push
xchg
mov
pop
lods
lds
or
mov
lahf
aaa
add
scas
mov
xchg
xchg
ds
push
cmps
sti
(bad)
push
sti
call
out
xchg
pop
not
jmp
dec
aaa
popf
cld
push
pusha
fdivr
je
fs
jp
fs
clc
shl
out
dec
(bad)
cld
sti
xchg
inc
pop
icebp
lahf
out
mov
fwait
pop
sub
sbb
aas
pop
fnstcw
jge
sti
stc
mov
test
scas
dec
xor
je
xor
jae
nop
jmp
outs
enter
mov
pop
in
jmp
xor
xor
pop
pop
je
push
jg
inc
pop
xor
mov
ficomp
int3
dec
(bad)
addr16
add
adc
jae
mov
imul
xor
shl
call
mov
jg
push
sbb
pop
popf
pop
jnp
xchg
int
icebp
pop
or
add
cmp
aas
leave
ds
mov
jmp
aaa
mov
xchg
pop
inc
push
adc
mov
mov
dec
add
ja
xor
mov
sub
dec
mov
fwait
sbb
mov
add
rcr
dec
aas
and
cmp
jb
mov
add
jmp
test
push
cmp
cmp
test
dec
add
mov
data16
pop
inc
xchg
sbb
xchg
inc
sbb
aas
mov
mov
cmc
jne
jnp
xchg
xchg
into
and
clc
sub
das
add
lahf
push
es
repnz
mov
test
pushf
push
xor
out
int
inc
rep
push
(bad)
fld
dec
or
cmps
jnp
or
inc
(bad)
arpl
push
fcomp
test
cmc
fwait
cmp
mov
jbe
inc
jmp
lahf
and
push
leave
dec
or
and
adc
push
lahf
sbb
js
pop
out
sub
loop
imul
sub
and
fnstcw
xchg
add
mov
sar
mov
or
xor
push
sahf
sbb
out
ds
out
push
ret
ret
xor
test
mov
mov
cwde
push
cmp
sbb
and
add
push
int
addr16
cmp
dec
dec
or
pop
xor
fsub
and
loopne
popf
sbb
sti
mov
xchg
out
jecxz
loope
movs
sbb
lds
inc
cmp
das
mov
cmp
test
call
xchg
add
mov
lock
ss
not
mov
loopne
sub
adc
cmps
fcom
sbb
jl
nop
(bad)
(bad)
jmp
sar
outs
fldenv
jae
and
int3
and
xor
clc
lods
out
in
sbb
dec
repnz
sbb
cli
pop
xor
and
mov
in
jecxz
push
or
cmps
pop
mov
fsub
aas
in
add
data16
inc
aas
stos
(bad)
iret
aam
adc
jmp
movs
std
mov
mov
inc
or
cmc
(bad)
fbld
jo
in
retf
aaa
idiv
sbb
xor
shl
out
out
ins
loopne
jg
cmp
dec
cmp
(bad)
(bad)
daa
retf
mov
and
mov
popa
add
(bad)
sbb
push
cmc
inc
push
xchg
std
xor
inc
xor
not
and
outs
mov
jb
leave
push
pop
clc
jns
in
fadd
adc
jge
mov
push
in
mov
imul
sub
pop
ret
(bad)
movs
inc
jmp
mov
inc
mov
int
and
dec
inc
jae
mov
jne
adc
push
mov
push
adc
clc
mov
mov
enter
pop
retf
call
dec
cmp
mov
clc
xchg
or
lods
sbb
xlat
repnz
(bad)
mov
int3
fs
jmp
sbb
adc
das
loopne
stos
xchg
push
ins
mov
ja
lods
sub
fisub
cs
sub
rcr
mov
pop
cmp
fisub
lds
and
cmp
pop
xchg
fs
xor
out
xor
mov
call
arpl
movs
out
jg
ficomp
lds
mov
inc
cmp
mov
jo
or
cmps
test
inc
int3
iret
xor
sub
push
xchg
mov
in
sub
ret
lds
sub
dec
arpl
scas
and
imul
clc
repnz
jmp
in
add
jle
in
cmp
mov
out
pop
es
test
lahf
adc
sti
dec
in
cmps
test
or
and
idiv
pop
adc
push
mov
stc
mov
shl
pop
retf
push
je
and
sti
test
ret
cmp
pop
sub
je
ins
or
sahf
fld
jge
daa
cmp
cld
adc
mov
repz
das
push
test
adc
adc
mov
into
inc
popa
outs
push
adc
repnz
xor
xor
movs
jle
or
movs
push
lods
call
mov
movs
and
and
(bad)
out
out
fistp
clc
pushw
lea
cdq
jmp
xor
test
and
cli
xor
push
push
mov
push
xchg
aad
inc
xlat
xor
xor
out
lahf
cld
(bad)
mov
in
mov
push
push
inc
je
cmp
inc
sar
addr16
pop
jne
int3
mov
je
fwait
xor
hlt
sub
jb
push
imul
sbb
xchg
and
xor
mov
jb
mov
pop
shr
test
(bad)
sub
rol
cli
fsub
lods
and
int3
mov
bound
cmp
pusha
sub
xchg
iret
jb
pop
pop
add
imul
outs
sub
movs
mov
dec
and
ins
call
xchg
mov
daa
in
out
or
test
xchg
pop
cmp
loopne
mov
mov
aad
(bad)
pop
daa
(bad)
mov
inc
pop
leave
adc
stos
mov
mov
addr16
dec
scas
push
mov
dec
cld
jmp
(bad)
scas
lea
jbe
out
push
call
sub
fdiv
(bad)
rol
sub
retf
ret
xor
xor
mov
add
add
jb
xor
and
push
(bad)
add
xor
push
int3
nop
dec
mov
pop
and
cwde
shl
dec
mov
stos
cwde
loop
jle
xchg
and
add
pop
mov
sbb
fnsave
adc
ja
mov
repz
fidivr
cs
fdiv
icebp
iret
pop
mov
push
dec
jb
pop
mov
sti
mov
and
imul
inc
cmps
in
jo
rol
fucomp
in
push
in
and
inc
mov
adc
jo
mov
popa
gs
sbb
mov
pop
je
mov
push
xchg
dec
xchg
cmps
sbb
mov
lahf
sti
ins
mov
jmp
sub
sbb
jo
sbb
mov
mov
or
loop
ja
test
xchg
cmp
mov
mov
out
cld
cmp
sub
loopne
aad
xor
xchg
mov
int3
pop
mov
and
ja
jecxz
call
fadd
add
and
jns
push
push
xchg
mov
ins
(bad)
and
out
stc
xchg
enter
sub
push
xchg
jnp
cmps
xor
out
(bad)
pop
fs
mov
lahf
call
sti
push
jg
lods
add
imul
sub
ja
fst
inc
test
push
mov
sbb
sub
pop
and
inc
or
jae
inc
and
inc
jne
push
push
jbe
inc
or
dec
cmp
dec
and
add
(bad)
and
ins
mov
ss
ds
xor
fdivr
sub
mov
mov
nop
into
test
push
mov
(bad)
mov
add
sub
ins
mov
inc
cmp
and
mov
mov
cli
ret
adc
int
jmp
repnz
iret
lds
mov
outs
dec
or
cmc
mov
sahf
sbb
cmp
loop
pop
jmp
pop
mov
sbb
movs
(bad)
scas
std
or
and
mov
fdivp
jmp
pop
jmp
int
hlt
push
mov
mov
aam
dec
es
jb
sbb
xchg
mov
sub
adc
scas
jb
mov
bound
push
xlat
jge
les
mov
jmp
icebp
sub
scas
leave
push
mov
and
fwait
inc
xchg
into
xor
sbb
pop
das
sub
pop
and
xchg
(bad)
clc
sub
nop
imul
sub
mov
inc
in
sub
cmc
ja
sub
div
push
test
(bad)
xchg
adc
in
push
add
clc
inc
(bad)
call
popf
in
pop
xchg
mov
sbb
dec
call
popf
neg
enter
xchg
and
sar
add
or
(bad)
or
inc
mov
lahf
adc
push
xchg
dec
popf
out
dec
jp
mov
lahf
jo
add
mov
sti
fstp
mov
xchg
mov
fwait
push
add
and
stos
test
sub
in
jae
mov
xor
lods
gs
mov
mov
xor
push
dec
and
jmp
icebp
jmp
scas
and
and
sbb
inc
pop
cdq
and
push
xchg
push
shl
or
mov
dec
sbb
das
mov
inc
scas
fisub
shl
cmp
addr16
mov
retf
push
rcr
mov
push
adc
jmp
out
mov
sbb
icebp
xlat
push
xor
imul
push
mov
pop
cld
(bad)
(bad)
inc
ins
ja
clts
inc
and
xor
or
jmp
aaa
xor
mov
(bad)
jmp
mov
lea
ja
lahf
adc
movs
add
sbb
push
xlat
fs
loope
lock
inc
loope
pop
cwde
xor
sub
push
and
xlat
cmc
xchg
(bad)
jmp
int3
inc
jge
pop
idiv
stos
xchg
cmps
and
dec
jmp
pushf
mov
sub
sub
rcr
jmp
and
or
je
jcxz
cmps
and
add
(bad)
(bad)
jl
test
jl
fimul
dec
pop
cmp
je
pop
mov
sbb
and
lea
push
add
sbb
jae
cmp
into
mov
push
iret
mov
ja
dec
popf
fs
test
ins
mov
mov
cmp
inc
in
jle
dec
mov
in
sub
movs
add
jmp
fiadd
fld
jle
jns
dec
dec
daa
jo
inc
xchg
(bad)
cmp
mov
daa
jb
jbe
outs
pushw
loop
fwait
xlat
xlat
enter
sub
fbld
pop
mov
stos
inc
ror
scas
cmp
ins
pop
xchg
xor
sbb
jnp
shl
std
adc
fucomp
jge
pushf
xchg
pop
or
icebp
xlat
jno
or
mov
mov
clc
xchg
mov
(bad)
jmp
(bad)
push
mov
lds
pop
pop
mov
sbb
xor
pop
xchg
jge
sub
xchg
or
rol
jge
lock
jbe
int3
dec
repnz
(bad)
fs
rcr
gs
in
mov
rol
sub
test
inc
sub
mov
add
cdq
movs
mov
dec
out
aas
mov
or
xchg
xchg
mov
data16
sbb
cmp
dec
xchg
in
(bad)
int3
clc
hlt
jl
stos
dec
push
imul
call
mov
cmps
sub
fimul
ror
or
add
pop
(bad)
loope
xchg
push
ret
(bad)
js
xor
add
cdq
stc
sub
cmp
leave
cmc
gs
popa
pop
cmp
inc
or
dec
dec
stos
imul
jle
push
lds
mov
cmp
aaa
add
cmp
push
sahf
jns
int3
cwde
ds
data16
and
or
or
jbe
push
add
bound
adc
jp
(bad)
mov
cli
dec
pushf
scas
mov
mov
jmp
addr16
fwait
sbb
pop
sbb
mov
icebp
sbb
fmul
jl
pmulhuw
xlat
and
pusha
scas
mov
jg
sub
cdq
loop
jne
call
test
xchg
add
mov
shr
cmp
lock
ja
cmp
jbe
add
(bad)
mov
push
repnz
cmp
fdivr
dec
xchg
and
sbb
scas
imul
sbb
push
daa
sub
(bad)
fxch
cmp
aas
inc
scas
xchg
cmp
xchg
fmulp
sbb
mov
ja
xlat
push
sub
icebp
fnstcw
jns
push
mov
loope
scas
dec
sub
fisttp
push
jg
jbe
mov
adc
sbb
jne
sub
dec
sbb
adc
push
test
lds
push
add
fisub
es
(bad)
xor
inc
dec
ficom
call
lods
mov
pop
aam
push
std
test
mov
fimul
add
push
pop
sbb
xchg
cmp
jmp
out
mov
mov
cmps
hlt
cmc
lds
inc
jno
push
jne
mov
sbb
jnp
xor
mov
push
mov
fnstenv
xlat
push
cld
aad
dec
push
je
addr16
push
inc
out
cmp
les
mov
stc
sub
in
sub
jne
jl
push
retf
dec
sbb
(bad)
in
lods
pop
ins
jnp
inc
inc
shr
in
daa
sar
mov
or
jecxz
call
pop
out
cmp
mov
dec
je
fsubr
xor
sar
fsubr
sbb
rcr
repnz
add
sub
aas
xchg
adc
bound
cmp
mov
xlat
test
add
or
mov
ret
fsub
xchg
lods
(bad)
aas
xor
or
pusha
das
xchg
into
xchg
mov
mov
out
and
or
repnz
sbb
xor
pop
fbld
mov
call
dec
add
jb
mov
push
cld
cmp
mov
xor
mov
das
lds
lahf
imul
push
xchg
pop
sbb
push
adc
mov
fcomip
cmp
mov
push
adc
pusha
bound
or
cwde
adc
leave
xchg
mov
sub
add
xchg
aas
loopne
push
xchg
fwait
xchg
or
push
dec
mov
out
adc
mov
test
scas
out
je
mov
scas
push
pop
icebp
stos
mov
inc
out
add
pop
pop
jno
dec
mov
adc
xchg
and
xchg
jnp
out
imul
in
xor
fs
lods
aaa
adc
(bad)
stc
mov
push
xor
lods
jae
cmp
xchg
mov
add
inc
scas
mov
push
ficomp
add
sbb
pop
mov
div
int
jae
lods
sub
mov
cmp
mov
inc
inc
in
xchg
in
ja
ja
adc
mov
add
outs
es
mov
int
out
ret
jmp
mov
add
sub
jo
push
xor
pusha
mov
mov
sti
cmp
xchg
pushf
(bad)
ror
fadd
pop
sbb
fnstenv
xchg
movs
add
fisttp
(bad)
push
xchg
aas
repz
xor
sbb
mov
mov
lods
sub
push
ffree
test
xchg
test
inc
mov
add
repz
jp
mov
in
push
popa
sbb
jmp
es
pop
jo
cmp
fld
adc
inc
mov
mov
fwait
jecxz
mov
xchg
pop
ror
xor
fstp
push
xor
add
dec
retfw
inc
and
setb
(bad)
dec
pop
test
and
jno
xlat
and
sub
sahf
xor
mov
jp
lock
adc
xchg
ror
mov
sub
popa
imul
fiadd
xchg
iret
mov
loop
not
into
ret
mov
cmp
xor
sub
mov
loope
mov
in
je
addr16
sbb
mov
xchg
mov
add
sub
mov
adc
in
repz
sbb
mov
push
and
test
mov
daa
jne
adc
adc
xor
mov
ss
sbb
adc
movs
fs
or
cmps
mov
pop
sbb
std
mov
xor
rcr
mov
call
mov
jle
aas
(bad)
mov
mov
sbb
scas
xor
(bad)
movs
loopne
jns
icebp
(bad)
out
pop
loope
dec
sbb
add
ret
jae
sbb
je
ds
jmp
sbb
xor
add
mov
xor
jl
adc
mov
sub
mov
fstp
out
jmp
enter
popf
sub
adc
es
adc
add
retf
cli
pop
out
jne
pop
dec
jbe
into
mov
push
ja
dec
arpl
seto
adc
dec
xchg
adc
popf
xchg
mov
das
pop
sbb
adc
mov
cmp
pop
sub
push
ja
and
push
add
(bad)
and
(bad)
mov
and
mov
shr
jecxz
retf
adc
pushf
out
cdq
add
xchg
stc
xor
arpl
imul
mov
lea
push
jnp
xor
call
dec
jge
sbb
push
or
push
mov
mov
or
xor
dec
pop
push
movs
ret
shr
dec
and
adc
inc
movs
mov
and
das
mov
cmp
sbb
push
out
dec
pop
call
imul
adc
mov
arpl
ror
pop
fidivr
pop
popa
mov
add
push
push
or
mov
sti
xlat
and
push
adc
pusha
mov
mov
mov
xchg
ss
cmp
lock
jl
xor
in
aaa
adc
jmp
icebp
mov
mov
adc
add
into
push
jecxz
or
and
push
and
int
dec
fwait
dec
aaa
sub
clc
or
stc
adc
jns
(bad)
push
les
or
dec
mov
cmps
adc
push
push
scas
xchg
idiv
pop
icebp
and
retf
shl
cmps
popf
cmc
pop
jne
repnz
jnp
mov
jne
mov
adc
out
jo
not
mov
and
pop
sbb
mov
and
shl
clc
sub
push
stc
cmps
stos
(bad)
stos
cmc
adc
les
mov
mov
adc
mov
cmp
sub
pop
push
js
sub
xchg
inc
fwait
loop
sub
or
xchg
jecxz
loope
inc
mov
mov
loope
xchg
add
je
mov
dec
pop
and
inc
lods
movs
and
sbb
mov
inc
push
pop
movs
mov
fmul
sbb
inc
push
fmul
bnd
and
sbb
mov
jns
sbb
pop
pop
xlat
add
hlt
in
push
mov
out
jp
jge
retf
mov
in
cmp
shl
pop
(bad)
fwait
aaa
pop
add
into
ins
imul
in
cmp
cmp
ds
xor
inc
xchg
call
mov
sbb
aaa
mov
push
jb
add
rcr
bound
cmp
sbb
in
inc
inc
pusha
inc
shl
call
rcr
gs
push
scas
push
iret
xchg
dec
xchg
jbe
jg
daa
xchg
in
enter
mov
jnp
xchg
xor
fist
loopne
daa
repnz
jmp
and
das
pop
mov
xchg
xlat
xor
cld
mov
fdivr
sbb
in
inc
movs
ror
push
mov
int
pop
fwait
xchg
xchg
iret
or
mov
xchg
lea
stos
inc
inc
cmp
ss
push
xchg
cld
adc
and
cmps
sbb
mov
ret
shl
add
sbb
jns
cmp
push
sar
pop
aas
and
cmp
retf
sub
out
mov
or
inc
push
mov
jae
shr
push
mov
mov
and
jge
div
mov
push
retf
inc
adc
mov
cmp
rcr
pop
sbb
jg
pop
(bad)
mov
xchg
aad
(bad)
cwde
movs
push
cwde
sbb
xor
push
or
xor
clc
pop
dec
and
sub
das
mov
add
mov
fidivr
into
jo
int3
xor
call
lods
ficomp
or
rcr
dec
subps
cmp
mov
jno
xchg
vucomisd
pop
or
fstp
xchg
cmp
jno
mov
cld
push
es
fs
jg
pop
fisub
sbb
jno
inc
mov
sub
scas
and
pop
cmp
ins
jno
mov
into
jmp
lods
pop
and
repnz
out
int
pop
jno
sub
push
retf
push
mov
enter
push
xor
xor
inc
add
jmp
iret
into
mov
and
xlat
or
jnp
loop
inc
fsub
es
dec
mov
inc
add
sbb
dec
add
push
repz
in
btc
mov
push
imul
inc
xchg
in
jmp
jo
xchg
pop
aad
dec
cmp
mov
or
jge
pop
inc
xchg
(bad)
jno
call
inc
lock
or
arpl
mov
scas
pop
mov
addr16
add
mov
xchg
in
mov
lock
sbb
shl
pushf
int
jne
sub
push
ror
sub
nop
addr16
sub
or
xor
std
or
das
popa
jge
cmc
mov
xor
mov
push
scas
mov
xchg
xor
out
jbe
mov
jl
mov
dec
pushw
fcom
cmp
and
(bad)
or
sub
cli
fnstenv
(bad)
not
push
pop
sbb
lock
inc
stos
outs
sub
fcom
cmp
pop
(bad)
fsubrp
pop
es
rol
push
inc
sub
jecxz
daa
xor
sub
cmps
push
push
mov
mov
ja
push
jmp
loopne
add
in
jg
pop
shl
dec
jecxz
ins
adc
sbb
mov
lods
pop
dec
mov
or
xor
push
imul
add
or
mov
daa
cwde
inc
call
cwde
sub
xchg
cmp
mov
add
in
aas
lds
add
fcomp
add
rcr
dec
sbb
mov
hlt
push
cmp
and
mov
fimul
rcr
xchg
loopne
rcr
push
xor
xchg
push
push
pop
xchg
pop
test
jns
push
out
aad
mov
ds
fwait
lods
call
push
inc
(bad)
adc
add
add
int
adc
sar
inc
enter
bound
(bad)
and
mov
cmp
lahf
inc
add
aaa
or
xor
ds
(bad)
in
pushf
mov
inc
(bad)
xor
cmp
cdq
sti
xor
movs
rcl
test
mov
mov
pop
repnz
mov
mov
outs
fdiv
(bad)
cmp
hlt
sub
ret
jbe
xchg
adc
inc
fidivr
mov
stos
lds
pop
mov
test
addr16
and
mov
and
jnp
adc
das
mov
(bad)
jno
ret
xlat
ret
push
and
es
adc
nop
(bad)
ins
test
loopne
cmp
popa
pop
btc
jae
xchg
popa
adc
clc
push
in
xchg
fsubrp
punpcklwd
mov
retf
xchg
inc
repz
rcr
cmp
out
jl
pop
into
(bad)
lds
mov
(bad)
xchg
scas
dec
in
sbb
dec
xlat
push
in
push
ror
fisttp
dec
mov
or
ja
pop
mov
mov
ins
ja
jecxz
and
jbe
and
or
mov
xlat
jns
in
cmp
xchg
call
dec
mov
cmps
dec
aam
mov
cwde
adc
ds
mov
sub
or
jl
jp
out
jl
mov
popf
outs
mov
scas
inc
or
jmp
je
les
sbb
cmc
mov
out
mov
cmc
dec
ins
sub
scas
jmp
xor
dec
inc
js
cmp
(bad)
in
or
mov
push
in
bound
hlt
cmp
int
test
dec
mov
cmps
inc
xchg
or
mov
adc
or
ror
or
xor
cmp
push
push
sbb
bound
cmp
lods
ret
jle
sbb
push
call
mov
mov
sahf
pushf
test
imul
pop
scas
inc
pop
or
rol
xchg
shl
push
in
push
int
aam
aam
aas
(bad)
int
mov
cmps
inc
loope
mov
sbb
pop
or
dec
ror
icebp
xchg
cmps
and
aaa
cmp
and
retf
bound
push
add
mov
dec
or
retf
push
loope
sub
pop
cmp
aam
cmps
loopne
lds
mov
(bad)
imul
neg
ins
pop
div
sar
mov
cmp
pushf
jno
xor
xor
fisttp
or
ss
mov
imul
das
jns
daa
out
xchg
mov
cmc
(bad)
lods
cmps
nop
pop
js
ja
sti
pusha
dec
jo
mov
or
shr
push
es
jae
mov
jmp
jecxz
repnz
push
cs
std
push
push
dec
pop
ja
outs
ins
jae
add
mov
mov
dec
pop
push
xor
out
add
std
dec
and
ins
mov
mov
pop
call
ret
cmp
adc
je
and
clc
not
cld
fist
jb
std
test
(bad)
pop
(bad)
mov
cmp
xor
or
jne
fwait
(bad)
iret
je
or
mov
pop
sahf
sbb
movs
aas
pop
je
push
fldenv
loop
jae
scas
test
mov
mov
jnp
test
pop
mov
nop
mov
sbb
fcmove
mov
(bad)
fs
dec
shl
dec
xchg
ja
cs
add
shr
pop
mov
pop
popf
jle
ret
retf
ja
xor
gs
push
and
rol
jne
clc
mov
(bad)
jns
cdq
out
les
pop
mov
stc
arpl
mov
xor
xor
mov
push
inc
mov
xor
or
xor
adc
retf
lods
jp
push
pop
imul
cmps
test
mov
sar
fiadd
scas
aaa
xchg
xchg
mov
jp
dec
sar
mov
pop
ja
imul
(bad)
int3
mov
cmps
stos
dec
mov
pop
call
test
mov
mov
or
cmp
lock
repnz
(bad)
in
sub
dec
fisttp
jg
mov
in
or
pop
mov
ret
mov
sbb
sbb
jnp
mov
sub
aas
mov
inc
not
mov
sub
imul
jne
(bad)
mov
test
in
inc
xlat
gs
pop
push
add
mov
mov
(bad)
add
cdq
jmp
rcr
cli
sub
xor
xor
mov
dec
mov
jle
cmp
pusha
mov
jg
mov
push
out
cli
cmp
or
sbb
mov
fcmovnu
cs
inc
mov
out
retf
pop
xchg
enter
loopne
jp
int
mov
fisub
and
sbb
movs
shr
aad
jb
xor
outs
xchg
loopne
inc
loope
jle
movs
mov
cdq
loopne
loop
push
call
mov
hlt
shl
dec
jbe
push
imul
adc
fwait
add
and
mov
outs
push
or
push
mov
shl
mov
jmp
or
xchg
cmp
sbb
mov
push
gs
test
sub
imul
xor
mov
mov
in
aas
frstor
pop
inc
imul
add
mov
or
gs
ss
jb
rcr
jne
jl
stos
mov
mov
sub
pusha
retf
lods
ins
cwde
in
xlat
mov
xchg
xchg
xchg
in
fwait
mov
adc
adc
sti
jno
push
fld
stos
fsubr
push
popf
pop
pop
and
sub
out
vtestps
and
jmp
sub
retf
lahf
pop
jmp
int
lods
pop
dec
imul
call
jno
enter
iret
js
(bad)
push
mov
sbb
jbe
inc
jle
pop
outs
cwde
dec
repz
xchg
inc
jmp
jns
fnstenv
nop
or
in
sub
jb
loopne
fs
pop
enter
int3
xchg
pop
dec
adc
fst
stos
loopne
jae
dec
and
pop
adc
lea
adc
leave
bound
mov
push
movs
jmp
xchg
push
rcl
pop
sbb
adc
sub
pop
sti
push
jno
cmp
adc
add
(bad)
jo
ds
push
push
out
shr
out
add
pop
adc
imul
std
push
imul
xchg
fcmove
cmps
adc
mov
mov
dec
repz
jmp
xchg
loop
scas
push
pusha
xor
in
jne
inc
imul
cmp
push
cmp
shl
or
lock
cmp
jecxz
mov
(bad)
cmp
or
(bad)
into
sbb
inc
in
mov
sbb
out
loope
test
and
scas
lds
mov
adc
sti
jne
push
mov
retf
xor
inc
push
gs
add
(bad)
mov
out
jl
aas
push
sub
push
push
mov
add
rcr
in
mov
(bad)
retf
jb
or
xor
cli
cmp
jb
push
je
sub
lods
gs
push
fdiv
mov
inc
mov
mov
movs
push
call
push
cmp
scas
js
jne
jle
mov
int3
mov
cs
(bad)
mov
test
pop
jge
into
popw
shl
sbb
or
sbb
inc
mov
out
xor
jp
adc
push
mov
push
or
fisub
sub
and
call
daa
lds
inc
std
mov
and
cmps
inc
inc
or
fisubr
mov
jg
sub
or
and
into
pop
jbe
lods
sub
addr16
fucomp
xor
mov
adc
popf
jmp
lock
stos
sbb
movs
xor
xchg
loopne
add
or
pusha
push
bound
inc
gs
push
pop
out
pop
test
je
int3
aam
push
push
ficomp
sub
test
sar
lahf
scas
mov
std
loopne
outs
pop
fistp
mov
cmp
add
mov
jge
mov
cmp
mov
and
jl
jmp
scas
ror
rol
xor
pop
cmc
xchg
stos
bound
xchg
adc
mov
lods
mov
ins
clc
lods
mov
mov
and
pop
inc
stos
data16
cmp
push
or
add
loopne
cmps
mov
das
cmp
jb
mov
scas
das
jp
fdivr
mov
neg
ins
pusha
movs
pop
jle
add
or
ja
dec
leave
xchg
test
or
xchg
or
sub
adc
jno
sub
add
mov
push
call
push
jle
and
push
int
and
inc
mov
(bad)
mov
or
mov
lods
dec
mov
mov
jp
stc
ds
je
jmp
loop
xchg
or
(bad)
addr16
xchg
loope
adc
call
js
popf
dec
inc
dec
shl
lds
mov
les
mov
cmp
add
xor
js
mov
xor
add
mov
push
push
ror
and
push
(bad)
mov
bnd
sbb
jns
and
loope
test
xor
rcl
hlt
arpl
sub
jae
dec
sbb
enter
pop
sub
mov
xchg
pop
outs
daa
movs
ret
aaa
loop
hlt
call
jle
ss
mov
cmps
push
pop
loope
int3
popa
neg
pop
mov
inc
in
mov
cmp
sti
sub
cs
push
fidiv
cmp
gs
repnz
mov
in
sbb
lods
cmp
and
adc
dec
dec
lea
mov
iret
and
and
adc
les
scas
adc
mov
xchg
cmp
adc
cmc
fxch
dec
mov
imul
xor
push
mov
sub
(bad)
cmp
loopne
inc
mov
sti
adc
pop
in
fs
ja
cmp
jne
cmp
jmp
add
fdivr
add
mov
add
lock
(bad)
cmp
loop
xor
dec
sub
inc
sub
outs
mov
(bad)
cmp
fisttp
movs
repnz
(bad)
out
mov
inc
push
push
xor
sar
repnz
mov
fidiv
fcomi
sbb
lock
pop
aam
jbe
vmovq
cli
imul
adc
pop
aam
gs
add
bound
xchg
div
sbb
aaa
shr
xor
test
int
jnp
(bad)
or
and
gs
jmp
mov
and
repz
dec
xor
fild
push
mov
adc
repnz
cmp
cld
stc
fnstcw
push
les
push
test
stos
(bad)
daa
jp
inc
xor
and
not
adc
sbb
lds
js
das
imul
dec
inc
xchg
cdq
mov
sbb
xchg
push
mov
and
or
clc
stos
je
push
sbb
in
pop
repz
enter
mov
(bad)
enter
adc
mov
mov
int3
and
cmp
lock
pushf
mov
sub
std
jae
repz
iret
idiv
sar
adc
lods
int
outs
pop
mov
or
adc
jg
mov
xchg
int3
inc
or
into
mov
fsub
mov
shl
aad
mov
int
jnp
loopne
pop
clc
(bad)
into
outs
xchg
push
ins
out
lock
jnp
mov
pop
dec
loopne
fst
test
in
(bad)
mov
sbb
xchg
and
inc
or
enter
icebp
repnz
mov
retf
and
cmp
sub
adc
das
jb
fsubr
inc
sub
sbb
popa
ret
in
sbb
ds
push
adc
add
pop
add
xchg
jae
cmps
sti
jnp
cmp
mov
popa
inc
imul
dec
adc
jg
out
xor
ds
mov
sub
pusha
push
adc
pop
xchg
test
sti
xchg
js
push
mov
lahf
ja
je
and
pop
jns
nop
fidiv
mov
addr16
and
cli
add
ror
mov
adc
leave
sar
rcl
jns
ja
mov
(bad)
fwait
in
pushf
add
outs
add
dec
xor
mov
(bad)
sub
mov
inc
or
gs
jo
mov
leave
(bad)
mov
dec
and
sub
ret
add
dec
inc
repnz
inc
std
or
cmp
mov
sbb
and
(bad)
lds
je
dec
xlat
xchg
jns
jecxz
fcmovne
add
push
push
cmps
sub
push
inc
sub
sbb
cmp
mov
mov
pop
cmp
mov
test
sub
sub
sbb
inc
lods
imul
sbb
jb
xchg
dec
sbb
xor
cmc
xchg
mov
add
and
out
sbb
add
mov
sub
mov
repz
fisub
js
rol
lahf
(bad)
imul
add
pop
std
and
ds
std
push
jecxz
add
ret
jmp
imul
xor
scas
js
add
inc
cmp
xor
adc
xor
scas
jmp
jnp
lods
sbb
ds
sbb
(bad)
bound
ins
ja
push
jmp
sub
outs
dec
enter
and
std
inc
cmps
sbb
jbe
loop
jl
sar
inc
mov
cmc
xor
push
mov
lahf
mov
push
cmp
and
pop
scas
mov
inc
ins
sbb
xchg
pop
popa
mov
imul
mov
ins
xlat
adc
lock
adc
movs
ret
mov
mov
aad
test
or
inc
dec
xor
data16
xchg
(bad)
xchg
push
mov
stos
inc
cwde
mov
mov
xor
inc
or
sbb
stos
pop
mov
ins
adc
cmp
or
jecxz
retf
(bad)
jp
ins
out
stos
push
das
jmp
jo
inc
loop
and
dec
out
iret
add
data16
jle
rcr
int3
fstp
sti
push
sub
push
aad
and
call
fiadd
pop
inc
xchg
scas
sub
rol
sub
jmp
add
jbe
jnp
lock
addr16
jge
pop
fs
mov
mov
fldcw
inc
ficomp
push
arpl
mov
ds
mov
adc
movs
loop
jnp
adc
out
fistp
cs
(bad)
mov
mov
add
cli
lea
or
pop
push
jg
mov
dec
inc
stos
push
xlat
dec
lock
xor
mov
imul
pop
mov
shl
cld
stos
loope
fistp
iret
lods
jae
push
xchg
and
ret
mov
jo
(bad)
dec
test
cmps
mov
icebp
mov
jl
inc
xchg
cmp
push
inc
pop
(bad)
mov
data16
mov
sub
aam
(bad)
push
push
adc
out
adc
ja
push
cmp
sti
or
das
jne
lods
shl
inc
stos
jp
pop
enter
lock
stos
mov
out
add
movs
jp
push
mov
push
pop
in
cmp
cld
pop
aam
jbe
mov
sub
xchg
adc
mov
ret
dec
and
and
pop
outs
fs
jecxz
inc
mov
cwde
mov
push
loope
cmp
imul
or
ins
pop
fnstenv
xor
push
shr
jmp
sub
xchg
fsub
xlat
dec
pop
sub
vsqrtpd
dec
movs
dec
test
aad
ret
repnz
pop
out
imul
xor
es
pop
mov
js
(bad)
ss
cmp
(bad)
nop
push
push
jge
and
pop
mov
adc
iretw
loop
add
xor
sub
repz
fs
push
test
inc
test
or
shl
out
or
mov
adc
pop
ss
movs
cmp
lods
fwait
iret
or
ins
cli
addr16
mov
je
add
push
push
inc
stos
sub
fld
xchg
mov
(bad)
xor
and
aaa
sar
pop
mov
or
mov
mov
retf
out
cmp
ins
or
and
adc
fndisi(8087
jecxz
sahf
or
lea
pushf
sbb
sub
xchg
or
or
mov
sbb
mov
or
or
out
test
xchg
add
xor
mov
mov
in
mov
jg
xchg
pop
mov
cmp
xor
stos
loop
mov
push
and
push
sbb
xchg
mov
jle
sub
fldcw
bound
xchg
push
push
xchg
test
inc
call
fstp
retf
in
ret
mov
fst
out
fwait
and
sub
xor
mov
ret
pushf
ja
add
mov
popf
sub
call
sti
clc
adc
ret
xchg
mov
xor
push
sbb
lock
cmc
lods
sbb
retf
mov
fld
pop
sar
add
ins
cwde
and
(bad)
push
jmp
scas
shl
inc
push
mov
pop
cmp
cmp
or
or
lock
add
or
es
mov
xchg
cmp
aam
push
loop
mov
jle
outs
xor
dec
lahf
sahf
sub
adc
push
jmp
ret
jge
sub
es
inc
pusha
and
fist
sub
xchg
fisubr
into
mov
dec
mov
cld
loop
push
sbb
fistp
cmp
push
test
inc
sti
dec
inc
add
ins
mov
jb
or
(bad)
lea
aas
stos
fdiv
inc
adc
dec
pop
data16
mov
out
jp
popf
xchg
ja
mov
loopne
loopne
(bad)
ins
stos
jecxz
dec
ja
movs
pop
and
cli
cs
pop
sbb
call
add
jmp
(bad)
mov
inc
cmp
fcom
out
add
rcr
stc
mov
enter
lods
sub
mul
add
dec
jo
cmp
add
mov
test
ss
fidivr
stos
push
pop
inc
sti
push
push
mov
dec
mov
nop
cli
jne
xor
loopne
and
movs
push
shl
push
jbe
cmp
(bad)
lods
add
pop
and
hlt
test
push
ins
sub
pushf
xlat
mov
sub
xchg
loop
sahf
mov
cmp
pop
jle
nop
adc
mov
js
pop
xlat
or
and
rcr
ja
movs
and
ror
mov
add
fidiv
rcl
dec
lea
sar
xchg
cld
cmp
adc
les
mov
mov
dec
jmp
push
mov
mov
rol
mov
stos
mov
lea
add
fcomi
mov
scas
fsub
stc
pxor
xor
in
cli
inc
shl
push
xor
jb
jle
inc
mov
in
call
loope
lock
mov
(bad)
dec
inc
sbb
add
or
add
xchg
les
ins
cmps
ds
fs
outs
adc
jne
inc
test
and
push
enter
and
cs
pusha
aas
fisub
inc
sub
dec
scas
movs
repz
mov
jg
mov
cmps
jecxz
minps
push
add
js
mov
int
outs
dec
xor
(bad)
jmp
sub
cmps
fs
in
and
mov
sub
add
pop
pop
dec
mov
push
inc
push
dec
jns
xchg
mov
lods
cwde
push
fidiv
xchg
pushf
jp
push
test
loop
cmp
retf
gs
fst
and
fst
jns
xchg
lods
rol
aas
int3
test
inc
(bad)
mov
xor
xchg
ins
and
cdq
pop
fild
mov
stos
adc
fstp
xlat
jne
fwait
out
adc
xor
push
mov
cmps
xchg
ret
outs
rol
arpl
sub
repnz
push
adc
adc
inc
push
or
adc
and
fucom
pop
or
inc
push
xchg
mov
pop
sub
mov
cmc
xlat
into
dec
scas
or
pop
sbb
xchg
mov
xor
sbb
gs
hlt
jp
xchg
push
mov
mov
sub
std
mov
or
mov
sub
dec
adc
arpl
jbe
mov
cmp
scas
movs
out
cli
loopne
jmp
cmp
pushf
push
imul
sbb
and
pusha
inc
dec
fdiv
cld
pop
int
(bad)
xor
add
cmp
call
inc
sub
retf
scas
push
and
push
mov
xlat
test
or
test
out
bound
mov
cmc
aaa
leave
imul
cli
xor
nop
icebp
(bad)
pop
adc
test
lea
add
ror
ret
stc
sbb
jle
add
add
pop
movs
test
sub
imul
sub
pop
push
push
pop
popa
lock
loop
mov
jp
imul
std
fild
scas
mov
loop
jae
mov
test
std
sub
cs
call
xor
push
lock
and
xor
jmp
sti
rol
fbstp
xchg
and
cwde
mov
lahf
imul
cmc
ret
ins
inc
stc
(bad)
loopne
xor
pop
or
(bad)
loope
dec
scas
aaa
and
xchg
cmp
pop
arpl
mov
jbe
fs
les
mov
cmc
cmps
repnz
xchg
loop
ss
jae
sbb
and
sbb
aas
inc
push
int3
add
bound
adc
into
cs
mov
cmps
dec
retf
adc
sbb
cmp
jp
jmp
gs
mov
je
jp
xchg
mov
retf
ja
push
dec
pop
lods
rcr
adc
inc
js
loope
inc
sub
adc
jne
xor
fild
ja
jge
int3
cld
xchg
or
xlat
faddp
loop
data16
jecxz
mov
sbb
js
ret
test
and
fst
movs
fstp
movs
stos
int3
xor
xor
ror
inc
cmps
push
imul
jl
cmp
cld
cmp
and
aaa
scas
xchg
pinsrw
dec
cmc
xor
adc
cmp
icebp
outs
ret
js
cmps
jne
repnz
idiv
inc
(bad)
leave
or
or
push
xor
inc
or
push
xchg
pop
xchg
add
pop
stc
add
ret
mov
and
dec
xchg
inc
sbb
mov
leave
mov
cwde
stos
push
push
mov
jp
out
ror
or
bound
jecxz
jmp
std
inc
sub
inc
adc
and
pop
or
test
aam
test
ficomp
repz
movs
out
push
sahf
enter
sub
fidiv
repz
loopne
les
mov
mov
adc
push
call
call
xor
mov
mov
test
call
xchg
sbb
add
shl
sbb
mov
add
mov
jl
sub
sbb
sub
sbb
outs
or
xor
test
pop
mov
nop
push
outs
je
sysexit
sar
push
adc
scas
push
retf
movs
rcr
mov
push
add
cmps
jmp
jecxz
(bad)
xchg
aam
add
gs
popf
hlt
in
add
mov
inc
pop
xchg
mov
fldcw
cwde
xor
loop
int3
jo
mov
or
aas
jnp
cmc
clc
and
push
imul
jg
dec
ret
xchg
sbb
cs
jmp
scas
jb
dec
fcom
dec
add
sti
ins
dec
push
or
push
pusha
popa
int3
sub
jle
daa
call
scas
and
rol
push
fwait
lock
and
cmps
jge
retf
pop
cmps
mov
je
jp
inc
stos
inc
pusha
jae
push
jp
repz
lods
stos
add
and
enter
push
add
sub
bound
inc
iret
xchg
rcl
push
sub
cmp
sub
(bad)
pop
and
or
xor
pop
inc
aad
lea
mov
mov
jnp
mov
mov
stc
shl
mov
mov
mov
and
(bad)
out
add
icebp
jle
sbb
xchg
pop
mov
ja
addr16
daa
inc
icebp
push
xchg
fmul
pusha
dec
call
dec
sti
jmp
loop
add
sbb
adc
dec
enter
int
xchg
sbb
push
inc
mov
xchg
pusha
and
jo
cwde
xor
sub
inc
or
sub
sbb
lahf
repnz
adc
mov
out
scas
push
xor
fisubr
stos
mov
mov
jnp
sbb
ds
(bad)
mov
movs
loopne
push
push
jne
jnp
loopne
mov
test
movs
cmp
cmp
loopne
ins
loop
cmp
dec
push
daa
dec
sub
sbb
mov
movs
es
xor
push
add
fwait
adc
cli
fmul
xchg
add
add
loop
fild
cli
sub
es
sub
and
jg
aad
daa
or
loopne
gs
inc
inc
mov
ja
jle
lods
inc
add
les
loop
mov
sbb
add
mov
add
(bad)
jns
fsubr
mov
data16
rcr
cmp
mov
and
imul
cmp
jbe
jle
inc
and
repz
rcl
mov
and
arpl
pop
retf
jecxz
shr
xor
inc
pop
mov
or
je
dec
aam
ret
rol
rcr
jl
test
std
sub
sub
in
mov
push
fucomip
jb
cmp
out
cmp
inc
push
(bad)
or
in
aad
and
shl
and
or
and
loope
mov
fbstp
rdpmc
into
mov
pop
add
arpl
add
mov
mov
sahf
addr16
bound
sbb
inc
test
sbb
push
rcl
xchg
xchg
adc
or
cmp
jmp
mov
rcr
or
jle
sub
dec
jnp
and
sbb
cld
aad
ds
popa
lock
(bad)
rcl
nop
fwait
jge
mov
aam
das
es
lahf
loopne
in
fsub
fcomp
js
push
shl
dec
(bad)
(bad)
lods
mov
xchg
call
pop
call
prefetch
cmp
sahf
es
dec
outs
and
mov
xor
loop
and
hlt
inc
fdivr
inc
jae
jmp
int
xchg
loopne
add
add
mov
mov
imul
ins
adc
in
pop
mov
add
sti
sub
data16
fsubr
jecxz
je
mov
push
popa
sar
cmp
outs
sahf
mul
xlat
and
sub
mov
call
mov
ret
(bad)
push
lods
outs
sbb
push
jae
xchg
rol
inc
mov
or
mov
inc
cmp
js
mov
and
movs
rcr
(bad)
mov
mov
fdiv
mov
aas
loop
pop
movs
ins
leave
cmp
leave
mov
xor
cmp
adc
into
repz
push
adc
xchg
lock
sub
add
out
das
sar
inc
fidiv
xchg
mov
push
pop
push
mov
cmp
(bad)
in
xor
xor
mov
mov
push
addr16
xchg
inc
xor
cmp
nop
(bad)
stos
xor
enter
xor
fwait
icebp
mov
repnz
(bad)
scas
push
adc
call
and
dec
(bad)
and
popa
rol
cli
jbe
imul
inc
pop
pop
pop
shl
jle
inc
mov
loopne
out
fdiv
fwait
cmp
cmc
addr16
ror
retf
cmp
cmp
jne
push
pop
(bad)
jecxz
adc
mov
dec
movs
add
adc
jmp
inc
push
sbb
int
add
aaa
rol
ret
rcr
imul
stos
push
jecxz
int
aas
stc
mov
into
adc
mov
mov
sub
retf
add
test
and
out
jp
dec
and
(bad)
aam
ret
xchg
cli
sbb
xchg
jmp
iret
ins
inc
gs
imul
sbb
(bad)
loopne
push
ja
and
mov
jge
push
lds
mov
cli
fistp
retf
cmp
int3
xor
test
push
mov
test
sbb
sub
mov
jg
popf
lahf
lea
adc
cmp
popf
xchg
retf
ss
push
enter
xchg
or
loop
scas
cwde
call
shl
sbb
(bad)
test
xchg
aad
adc
pop
sbb
jle
cld
push
cmp
addr16
jl
jb
jns
sbb
retf
ja
mov
and
mov
cmp
mov
mov
xchg
es
sub
aad
ja
xor
je
jp
jae
mov
add
inc
mov
sbb
adc
sub
xor
bound
fist
ret
dec
add
xlat
icebp
xchg
dec
push
jge
dec
stc
test
push
jns
mov
mov
push
cli
and
int3
repz
inc
in
lods
mov
leave
or
pop
adc
repnz
scas
mov
cmps
adc
add
popa
call
(bad)
fild
lahf
aaa
outs
das
or
nop
ins
sbb
hlt
bndstx
xchg
sbb
inc
xchg
mov
popf
es
dec
mov
scas
rcr
retf
lds
loop
cwde
pop
loope
mov
gs
clc
imul
retf
pusha
int3
cmc
out
and
adc
scas
enter
cli
outs
jl
bnd
js
cwde
xchg
push
jno
shl
push
dec
hlt
imul
fcomp
xchg
scas
out
push
pop
mov
inc
int
sub
shr
mov
jns
dec
fld
pop
not
pop
arpl
ja
repz
shl
dec
mov
mov
jo
dec
mov
push
fisub
iret
pop
xor
mov
jge
addr16
cwde
or
sbb
pop
add
fcomp
and
sbb
pop
cmp
mov
sbb
xor
or
jns
inc
or
mov
push
push
push
push
add
pop
sub
addr16
call
test
mov
pop
push
not
and
mov
ret
test
mov
shl
pop
cdq
sub
repnz
or
not
dec
adc
ror
stos
push
in
aad
(bad)
fsub
mov
into
pop
and
mov
pop
jne
push
shl
cmp
mov
fmulp
in
adc
pop
test
add
mov
adc
sahf
cli
jl
outs
imul
into
add
mov
pop
les
leave
fld
ret
xchg
or
add
(bad)
mov
leave
sub
ja
jb
pusha
push
xchg
push
push
jmp
jg
vunpckhpd
clc
cmp
repnz
cdq
pushf
ja
popf
xlat
loopne
das
jg
adc
repz
mov
daa
mov
and
in
jmp
or
xor
pop
push
fwait
mov
pop
jmp
daa
adc
add
popf
mov
mov
cli
int3
lods
sbb
add
dec
leave
cmp
push
inc
aad
sub
and
xchg
fucomp
add
push
fmulp
sar
mov
dec
pop
jb
rcr
xor
and
rcr
xor
push
jnp
sbb
jo
xchg
pusha
adc
mov
(bad)
ficomp
add
cs
mov
gs
pusha
mov
call
add
sti
inc
loopne
or
push
inc
mov
xor
dec
sub
jne
xor
popa
test
dec
push
repnz
mov
xor
(bad)
xlat
mov
inc
jns
inc
aam
lods
in
(bad)
clc
jns
loop
nop
xor
mov
inc
or
fs
mov
loope
cmp
(bad)
mov
cmc
adc
cmp
cwde
xchg
fcomp
sbb
call
mov
pop
adc
pop
inc
in
dec
out
inc
(bad)
mul
add
or
sbb
xchg
shr
xor
mov
test
ds
bound
sbb
mov
dec
adc
sbb
adc
div
pusha
adc
bound
jb
shl
sub
mul
je
mov
ins
pop
mov
cmp
rcl
cmps
fmulp
fs
(bad)
push
or
sahf
retf
fdivp
in
jae
js
int
aam
cli
add
aad
add
jne
imul
mov
lods
ins
outs
sbb
mov
ins
and
stos
cdq
sub
iret
jle
and
jo
ret
cmps
push
rcl
cmc
stos
mov
cdq
jge
mov
fs
jmp
jo
push
fsubp
nop
xchg
adc
pushf
dec
sbb
jmp
sub
arpl
inc
and
inc
addr16
sbb
xchg
idiv
pop
inc
mov
mov
sbb
in
xchg
mov
xchg
rcr
push
push
pop
nop
add
cs
sub
cmc
fwait
retf
lods
int
into
sar
leave
mov
movs
(bad)
mov
ja
bound
outs
pop
hlt
ret
mov
dec
pushf
jg
cmp
xor
pop
or
clc
repnz
popf
je
xchg
clc
mov
add
sbb
arpl
push
jge
enter
pop
mov
sbb
mov
pop
jmp
sbb
cmp
jb
ret
xchg
cmp
test
jle
mov
dec
arpl
inc
push
das
mov
xor
sahf
ins
test
sbb
push
fst
outs
shr
xor
(bad)
cli
popf
jmp
mov
movs
popa
xchg
jb
mov
pop
mov
xlat
jle
jecxz
or
test
popa
pop
enter
aaa
xchg
mov
lods
js
fstp
and
fwait
dec
jmp
shr
mov
or
jl
jmp
mov
push
add
sahf
ja
retf
push
rcl
retf
xchg
pop
xor
xchg
cld
dec
jbe
shl
cmc
ror
push
mov
mov
nop
cmp
sbb
lods
fistp
xchg
stos
add
repnz
imul
mov
inc
adc
in
adc
das
je
out
mov
mov
add
shl
fdiv
shr
mov
sub
inc
das
mov
int
pop
(bad)
(bad)
mov
pushf
sub
push
mov
xor
push
cld
inc
test
sahf
cli
popa
nop
popf
mov
cli
jg
pop
push
popf
je
pusha
dec
sahf
jae
popf
xchg
xor
jg
sub
xlat
outs
inc
repnz
ret
(bad)
sub
rcr
cld
mov
jo
sub
mov
adc
aad
in
ja
sub
dec
and
sbb
mov
adc
jle
(bad)
aam
aas
cmps
rcr
imul
in
push
lods
clc
adc
int
xchg
xor
add
push
pushf
dec
pop
ffree
cdq
push
pop
ret
ins
nop
sbb
add
and
das
out
pop
out
jp
out
cmc
and
pop
xor
ror
mov
retf
retf
into
cmc
inc
adc
mov
imul
jmp
fmul
and
js
mov
xchg
xor
ins
std
adc
ins
mov
test
adc
sbb
mov
inc
call
out
dec
xchg
adc
pop
leave
bswap
and
fidiv
outs
dec
inc
aad
add
enter
pop
add
int3
cmc
adc
shl
js
dec
sub
out
jne
sbb
xchg
shr
jmp
imul
xchg
xchg
cmp
add
stc
or
mov
rcr
scas
cmp
in
popf
jb
mov
ja
aaa
std
loope
call
lods
jl
dec
ret
ret
lods
in
rcr
fcmove
outs
cs
cmps
fcom
ds
out
dec
aaa
mov
jg
dec
out
xor
mov
jo
nop
xor
js
cwde
adc
daa
mov
add
jb
int
and
neg
mov
pop
and
pop
pushf
jns
shl
hlt
mov
cmp
gs
mov
mov
jbe
sbb
mov
xchg
add
mov
les
push
lock
cmp
mov
jns
popa
and
retf
ja
arpl
sub
es
test
rol
and
lds
pop
pop
cmc
adc
bswap
adc
or
lock
push
pusha
fisubr
fld
push
fdivr
jmp
inc
lds
fwait
jp
add
(bad)
stc
mov
push
(bad)
cmps
movs
adc
mov
jge
xor
inc
cli
test
stos
fsubr
in
mov
sub
mov
stos
retf
stos
imul
xchg
cmc
ret
ins
nop
xchg
mov
inc
push
cmp
xlat
aad
xchg
cmc
xor
sbb
ret
ins
cmp
sub
call
sbb
outs
out
shl
sbb
xchg
ffreep
cs
inc
inc
in
pushf
push
push
xor
ja
rcr
xor
loope
adc
mov
mov
lods
ins
inc
jmp
popf
gs
mov
sub
mov
pusha
adc
push
push
jp
pop
sub
inc
jl
mov
cmp
or
mov
inc
shr
jb
push
pop
clc
dec
nop
les
nop
and
fist
pop
mov
xlat
jmp
and
dec
dec
push
scas
push
add
outs
cld
stos
out
scas
xor
xor
(bad)
int
mov
ins
addr16
cmp
mov
cmc
test
test
adc
fs
mov
loopne
dec
(bad)
jl
(bad)
lods
jne
fnstsw
pusha
mul
ds
inc
je
mov
test
lds
rcl
sti
dec
lods
fsubp
mov
mov
push
push
cli
push
pushf
xchg
jo
cmp
and
pop
push
retf
jle
xor
inc
mov
sbb
or
push
cmp
pusha
jl
cmp
retf
jns
(bad)
icebp
push
das
aas
cld
out
aam
jae
xchg
pop
nop
int
scas
jo
cmp
jle
mov
pop
xor
cmp
lock
or
bound
or
pop
mov
test
and
addr16
pushf
or
in
jmp
xchg
or
cmp
js
addr16
xchg
mov
shl
pop
mov
push
adc
test
arpl
mov
dec
or
ds
addr16
xchg
or
jno
and
imul
fld
jb
(bad)
arpl
fidiv
or
cmp
lods
jae
push
and
daa
rcl
cmp
adc
call
and
push
and
pop
ss
out
xor
jns
mov
sub
inc
mov
jns
aaa
imul
dec
push
sub
or
sub
fiadd
sbb
push
or
pop
mov
mov
mov
add
movs
mov
push
inc
(bad)
cwde
nop
push
mov
jno
ja
xor
dec
jo
sahf
ins
mov
xchg
jns
inc
stos
pop
jecxz
not
pop
jmp
movs
into
mov
cmp
test
out
pop
call
call
std
iret
fwait
retf
fisubr
add
sahf
xchg
lods
shl
xchg
lea
mov
ins
or
add
hlt
lods
aad
inc
push
dec
cli
enter
arpl
ror
stos
aam
cmp
sbb
outs
jmp
push
loop
call
ins
push
mov
xor
xchg
mov
xchg
jnp
mov
loope
push
rcl
xor
adc
arpl
pop
jbe
mov
or
dec
pop
push
adc
xchg
push
adc
fstp
call
mov
lods
mov
stos
mov
push
mov
pushf
cmp
clc
mov
shl
dec
cwde
mov
(bad)
mov
push
push
out
xor
xor
scas
bound
and
mov
mul
jl
xor
dec
pop
xchg
out
scas
xchg
cwde
mov
das
stos
mov
scas
out
jo
hlt
mov
test
outs
cli
shl
not
mov
popf
or
pop
pusha
jg
sub
xchg
rcl
ja
mov
fstp
xchg
mov
push
mov
xor
push
fnstsw
pushf
fdivp
push
cmp
outs
mov
mov
inc
xor
arpl
pop
adc
jne
push
inc
imul
pop
out
and
push
popa
es
dec
inc
or
data16
std
stc
call
scas
jmp
xchg
and
repz
out
xor
mov
dec
mov
xchg
sub
xchg
je
pop
mov
xchg
loopne
cmp
adc
sahf
repnz
mov
mov
xchg
mov
stos
ret
fcomp
cmp
mov
hlt
or
add
cs
push
pop
sub
xchg
dec
shl
sbb
lock
fistp
movs
ins
aas
push
jmp
fs
pushw
das
xchg
mov
and
jge
fild
inc
popf
add
add
les
mov
mov
jo
dec
hlt
add
dec
xchg
mov
push
bound
lock
pop
xor
es
sbb
push
jp
in
imul
in
fcom
or
cs
cmp
and
sub
out
dec
push
jl
mov
pop
dec
stos
xchg
xchg
push
dec
mov
leave
sub
into
and
ret
test
repnz
cmp
add
dec
xor
dec
jmp
mov
mov
scas
retf
outs
cmp
aaa
shl
call
cmp
xor
in
int
cmps
dec
shl
fistp
or
push
loope
enter
test
xlat
dec
xchg
jl
cmp
cmp
mov
lock
mov
jmp
sub
into
loop
jecxz
sti
sbb
inc
int
jecxz
retf
pop
cmp
mov
(bad)
dec
fdivr
add
mov
xor
loope
cmc
scas
mov
add
aad
mov
enter
cwde
pushf
pop
and
mov
cmp
ja
rcr
cmp
stos
aaa
fldcw
fwait
mov
or
dec
and
es
repnz
dec
push
out
ja
in
mov
enterw
cmps
lea
lea
cmp
test
ins
push
inc
mov
call
push
cld
jo
push
add
pop
adc
dec
call
push
xor
adc
mov
push
mov
push
adc
mov
dec
fisub
or
xchg
sbb
pushf
int3
cmps
icebp
mov
popa
add
push
or
inc
cmp
(bad)
into
xchg
or
cwde
push
lds
outs
(bad)
or
adc
dec
(bad)
sub
add
icebp
sti
cld
(bad)
xchg
shr
aam
subps
or
fisttp
push
int
xchg
cmps
or
outs
mov
adc
lea
les
mov
xchg
add
lahf
shl
and
lds
in
stos
mov
sub
mov
push
and
sub
pop
in
or
pop
pop
inc
jne
neg
and
jp
pop
cmp
jae
in
in
popa
fsubr
test
lahf
mov
and
jmp
and
ror
xor
sahf
or
sbb
movs
popf
mov
loopne
push
add
mov
lock
mov
mov
repnz
inc
and
fisub
and
and
ss
pop
and
push
popf
leave
jg
fnsave
jmp
push
(bad)
rcl
cwde
imul
fs
ss
mov
ret
test
or
in
outs
js
mov
inc
(bad)
jg
dec
cld
(bad)
xchg
pop
aad
shl
dec
adc
(bad)
int
pop
imul
mov
sub
popa
dec
mov
jmp
jo
sub
loopne
push
leave
ret
inc
ficomp
inc
jmp
inc
ds
inc
out
pop
mov
aas
add
sbb
shl
mov
mov
ds
in
mov
and
jne
pop
xchg
test
cmps
cmp
inc
push
mov
mov
push
or
fisub
cdq
(bad)
arpl
sub
dec
fs
dec
xor
loopne
push
stc
push
aad
xor
sub
push
cmp
popa
adc
clc
fnstcw
sub
xchg
imul
imul
cmps
pop
cmps
mul
mov
xchg
fnstcw
les
gs
inc
push
mov
xor
ror
dec
lahf
aad
(bad)
(bad)
adc
enter
ja
mov
sub
jp
sub
xchg
add
imul
les
repz
jmp
leave
movs
xlat
jle
mov
and
and
cmp
mov
popf
lock
bound
data16
dec
call
mov
ret
test
enter
mov
inc
xchg
cmp
pop
inc
jge
cmp
pop
jmp
push
jle
sar
setb
mov
adc
xchg
je
out
out
es
pop
sub
mov
inc
or
mov
inc
retf
jmp
ja
in
(bad)
adc
test
sbb
icebp
call
cmps
xor
push
fmul
mov
mov
test
outs
mov
mov
leave
pop
cmp
mov
dec
xchg
aam
sbb
nop
inc
outs
out
sbb
inc
fnstenv
fadd
dec
out
addr16
in
stc
push
xchg
mov
call
xor
add
pop
fst
cmp
push
add
mov
add
inc
mov
push
outs
retf
and
test
mov
sahf
scas
ins
sar
and
and
push
xor
aam
add
call
mov
addr16
stos
xchg
mov
out
into
and
cwde
lea
retf
sbb
test
cli
daa
enter
stc
das
fistp
shl
mov
xlat
mov
(bad)
sar
push
outs
add
or
bound
sahf
or
repnz
mov
push
gs
fwait
inc
cdq
hlt
pop
outs
mov
cdq
fcomi
stc
daa
mov
cmp
mov
stc
jecxz
xchg
outs
imul
les
mov
sbb
enter
(bad)
xlat
or
int3
jne
jl
mov
pushf
jmp
inc
xor
dec
ficom
pop
mov
push
fistp
or
and
lea
iret
adc
dec
in
jnp
loope
sahf
xchg
jmp
cdq
dec
in
scas
mov
call
push
mov
mov
cmc
outs
ins
xchg
xor
int
mul
iret
mov
mov
fldcw
ret
imul
xor
sbb
push
cmp
mov
pop
mov
lods
in
cli
mov
jbe
call
popa
scas
or
and
inc
push
and
add
(bad)
imul
lods
inc
dec
cmp
test
lahf
jmp
sub
push
movs
sbb
mov
xchg
out
dec
movs
lock
ret
inc
scas
enter
xlat
jb
cmp
and
xor
in
pop
sbb
outs
sub
rcl
cmp
mov
push
mov
and
sbb
mov
aaa
movs
mov
jmp
pop
loopne
aam
jg
or
xchg
clc
xlat
ins
jnp
or
sub
jne
shr
xchg
aam
sbb
adc
inc
inc
ins
in
cmps
ins
ss
imul
sbb
mov
xor
ds
dec
jl
daa
xlat
cmp
je
pop
movs
fidivr
sub
shl
aam
and
call
dec
mov
retf
add
push
pop
sub
xor
xchg
cmp
fstp
push
repz
cld
test
add
sub
jb
mov
and
test
push
cmps
sahf
push
jnp
jo
jmp
fild
sti
dec
dec
imul
arpl
idiv
jmp
cmp
add
add
ror
jns
ja
por
ror
push
cld
cld
dec
cmp
lea
cmp
add
adc
pop
cwde
ins
mov
outs
sub
ret
fsubr
adc
mov
or
clc
cmp
cmp
inc
mov
mov
adc
inc
out
sub
fisttp
scas
pop
inc
push
pop
ror
nop
xchg
int
sub
push
jns
pop
out
(bad)
int3
mov
adc
ja
push
rol
mov
leave
arpl
inc
cmovs
adc
mov
sti
sahf
push
in
dec
pop
or
xchg
dec
or
pushf
sbb
or
outs
adc
mov
push
sub
push
mov
jg
mov
into
cmp
imul
mov
loop
dec
cwde
pop
popa
ror
push
fsub
mov
cmc
sbb
xchg
inc
pop
je
loop
cmp
ret
cmp
mov
mov
(bad)
and
sbb
rcr
cmps
add
ret
xor
push
xchg
data16
repnz
imul
add
push
xchg
pop
push
shr
fs
mov
sahf
ret
push
aas
mov
int3
and
stos
sahf
jb
fadd
jno
fsub
dec
xor
inc
inc
cs
fs
bound
cwde
fcom
jge
ins
shr
enter
jbe
aam
cmp
scas
cdq
jmp
jnp
loop
mov
test
jae
mov
mov
outs
mov
adc
enter
aad
aam
jo
stos
jb
mov
push
inc
dec
xor
fadd
outs
lea
pushf
stc
and
cmp
or
ret
addr16
mov
xchg
shl
jae
es
xor
pop
ds
push
movs
push
(bad)
std
mov
sub
sar
push
adc
addr16
in
fsub
movs
or
(bad)
push
pop
(bad)
pop
rol
pop
mov
out
stos
loope
jae
mov
call
push
out
push
cld
jnp
sbb
sub
or
add
xchg
(bad)
jmp
fxch
xchg
popa
push
retf
in
dec
aad
cld
or
sub
xor
adc
(bad)
adc
in
inc
push
lea
mov
mov
mov
lods
dec
pop
mov
adc
cld
loope
adc
adc
icebp
cmps
jbe
pop
and
jmp
add
lock
cli
pop
cmps
repz
lds
ret
dec
jle
ja
iret
shl
fs
movs
iret
or
and
popf
sub
or
test
xchg
sub
stos
sbb
jmp
aad
mov
ret
jno
sub
test
mov
shr
push
or
mov
sub
iret
pop
addr16
dec
xchg
dec
retf
retf
aaa
or
mov
sbb
sub
mov
xor
mov
push
(bad)
or
xor
jbe
aam
pop
enter
xchg
dec
mov
add
stos
popa
ss
outs
test
xchg
(bad)
sbb
dec
jge
or
(bad)
pop
cmp
fst
add
fidivr
ficom
daa
sub
cmp
daa
cmps
movs
cmp
or
xchg
xchg
les
dec
scas
or
movs
out
sbb
daa
pop
mov
gs
test
adc
loope
xor
mov
mov
loopne
xchg
lods
ret
pop
xchg
jo
imul
mov
push
and
into
lds
outs
pop
jmp
lds
add
in
fcomp
(bad)
js
call
jmp
neg
sbb
push
(bad)
call
cld
test
push
std
pop
test
push
ficom
mov
int3
jno
in
lock
div
or
sar
ins
ror
add
pop
jmp
jecxz
push
inc
and
jg
(bad)
stos
mov
ds
hlt
mov
(bad)
mov
enter
in
push
jb
or
sbb
sub
dec
inc
mov
add
jnp
loopne
test
sbb
ja
lock
cli
and
sbb
pop
xchg
lods
cdq
sub
mov
fidivr
mov
inc
lods
imul
cmp
xor
call
es
aaa
jae
ret
lock
push
in
mov
adc
popa
repz
push
add
mov
pop
lahf
jbe
and
inc
push
inc
mov
iret
mov
fwait
mov
repz
cmp
pop
jmp
sbb
mov
inc
bound
lahf
adc
sub
jmp
ja
stc
dec
das
mov
out
xchg
call
retf
pushf
sahf
cld
adc
inc
(bad)
xchg
outs
into
sbb
mov
cmp
dec
dec
and
sub
ret
inc
mov
ret
test
jo
mov
xchg
dec
retf
mov
je
mov
shl
stos
fisttp
cmp
daa
pop
and
(bad)
icebp
popf
jbe
lods
enter
pop
ret
cmp
test
aas
retf
das
mov
sub
pop
icebp
adc
jmp
fsub
out
je
cmps
fwait
stos
js
add
add
sar
sar
mov
jno
ins
xor
xchg
mov
mov
retf
mov
xor
and
push
pop
stos
cmp
or
mov
repnz
adc
aaa
jae
mov
sub
ins
inc
in
lods
outs
lods
push
clc
ins
sbb
push
scas
shl
cdq
sub
nop
(bad)
jmp
lahf
pushf
scas
in
fmulp
xlat
sti
es
aaa
and
adc
(bad)
dec
inc
mov
jbe
push
jns
nop
icebp
fstp
pop
call
jnp
ins
dec
and
ja
pop
pop
pop
adc
cmp
retf
and
stos
mov
push
clc
mov
jns
xchg
cmps
cmp
inc
pop
out
and
jns
push
add
sbb
and
fwait
enter
pop
mov
test
add
add
or
imul
test
push
sbb
fs
pop
ins
mov
retf
scas
mov
into
xor
ret
jle
leave
pusha
call
sub
adc
out
dec
(bad)
mov
popf
add
iret
ds
call
cmp
xchg
(bad)
mov
(bad)
std
cmp
push
imul
xor
mov
lods
sbb
inc
inc
retf
jmp
sub
out
push
and
sub
or
je
cmp
imul
xor
popa
out
sub
fcom
xor
(bad)
adc
sar
int
xor
enter
mov
cmp
or
sahf
sar
bound
in
adc
(bad)
adc
mov
cmp
inc
pop
add
push
test
in
movs
out
add
fidiv
enter
(bad)
sbb
pop
jg
or
sahf
(bad)
outs
mov
ds
int3
mov
imul
and
loop
push
push
jo
(bad)
imul
addr16
jns
sub
pop
mov
fcom
mov
ret
cmp
xchg
test
sbb
sub
jo
cwde
nop
mov
push
ret
into
rol
test
jnp
sti
adc
enter
jmp
retf
push
sub
xchg
shl
js
mov
in
jb
fidivr
and
icebp
xlat
cmp
loop
sub
xchg
dec
and
rcl
imul
sub
out
adc
sub
or
(bad)
pushf
fdivr
xor
data16
xchg
(bad)
xchg
cmps
cmps
in
or
mov
sbb
xchg
jg
(bad)
aam
inc
rol
out
sub
retf
sub
pop
push
inc
mov
(bad)
adc
daa
mov
mov
jg
and
push
scas
xor
push
xchg
sahf
or
fidiv
push
mov
(bad)
test
repnz
push
mov
jnp
mov
cmp
mov
xor
in
adc
fistp
cli
inc
div
fldenv
mov
outs
inc
imul
dec
fimul
mov
gs
jmp
aaa
ss
clc
cli
xor
mov
mov
jno
repnz
cmp
xor
or
jle
std
and
popf
fistp
in
xor
popa
and
ins
cs
imul
shr
in
(bad)
and
(bad)
repz
dec
fwait
adc
stos
and
cmps
out
jbe
xchg
add
sub
dec
dec
mov
or
dec
and
out
pusha
les
test
cmp
xchg
not
aam
data16
aam
pushf
call
mov
prefetcht2
lods
inc
in
mov
cmp
shl
xor
push
int
sub
add
push
or
pushf
inc
in
stc
push
popf
dec
fst
ja
inc
cmc
mov
xor
cmp
mov
or
bswap
ret
sbb
xchg
out
push
inc
bound
and
arpl
js
adc
sub
loope
push
fidiv
aas
mov
inc
shl
jne
hlt
jl
test
fstp
adc
dec
sbb
(bad)
(bad)
stos
cmp
retf
stos
and
mul
adc
loop
cmp
add
loope
cmps
adc
xchg
dec
add
repz
dec
pop
cmp
sbb
inc
jle
std
sti
cmps
dec
jns
mov
outs
mov
(bad)
movs
pop
xchg
mov
pop
sub
push
mul
add
icebp
sub
sbb
and
dec
add
xchg
dec
xchg
dec
imul
pop
jmp
jo
cmp
push
mov
retf
pop
shl
(bad)
mov
adc
jge
addr16
in
pop
add
xchg
rol
and
mov
pushf
mov
retf
(bad)
pop
call
adc
scas
adc
xchg
mov
lea
data16
add
lods
sbb
pop
loopne
inc
sub
test
mov
inc
xor
mov
jae
inc
adc
cli
neg
pop
cs
lock
cld
dec
shr
cmp
jecxz
inc
push
pusha
repz
ret
sbb
clc
mov
pop
(bad)
sti
arpl
in
inc
fstp
aas
scas
gs
xlat
retf
int3
jmp
or
int
mov
push
mov
mov
hlt
xor
push
test
mov
jge
mov
mov
scas
push
out
mov
and
pop
jmp
in
mov
and
sbb
(bad)
enter
mov
out
ret
mov
inc
dec
pop
movs
pushf
jae
gs
test
inc
in
je
retf
dec
sub
iret
ror
push
fdivr
adc
or
je
aam
outs
xchg
dec
jg
mov
daa
shl
(bad)
xchg
sub
push
ret
push
rcl
adc
inc
add
sbb
add
xchg
adc
cmp
in
in
adc
mov
dec
jo
and
or
div
mov
(bad)
ret
mov
sar
cwde
xor
sbb
lds
jne
dec
lock
gs
inc
cmp
pop
loope
add
xor
enter
test
popf
jle
loope
and
mov
rcl
and
(bad)
in
neg
mov
inc
outs
mov
mov
dec
sub
push
and
push
mov
cdq
inc
ror
stos
lds
jnp
ss
mov
or
ss
sbb
movs
cmp
xchg
push
ja
xchg
int3
and
cli
fiadd
sbb
xchg
out
idiv
jne
loope
adc
inc
leave
addr16
xchg
jns
(bad)
outs
mov
popa
cmp
push
mov
xchg
jp
fst
mov
or
cmps
pop
mov
adc
sbb
and
popa
outs
push
sub
(bad)
stos
test
pop
add
cmp
cmps
or
(bad)
out
in
jg
inc
mov
mov
mov
test
inc
fsubr
xchg
adc
push
ja
aad
cmc
js
jg
jp
add
mov
out
inc
cmp
out
call
outs
push
pop
add
pop
enter
in
dec
and
arpl
jg
sbb
fwait
lahf
mov
imul
push
jecxz
pop
call
loope
cli
popa
into
sbb
adc
jge
jne
and
iret
repnz
xor
xor
mov
xchg
cli
int
cld
cmps
ss
add
and
lods
and
mov
(bad)
add
mov
cwde
mov
jp
adc
push
imul
push
out
xchg
loopne
in
mov
pop
rol
xchg
cwde
ja
push
gs
jmp
pop
dec
add
loopne
or
aas
jmp
outs
inc
jns
inc
pushf
les
inc
out
fldcw
add
les
repz
mov
stos
call
fbstp
ins
push
add
mov
rcl
out
popa
push
lds
dec
imul
je
scas
in
int3
push
jmp
shr
mov
pop
imul
push
outs
sub
loope
ss
ins
cmp
or
jmp
and
and
out
inc
out
mov
pop
nop
pop
loop
ins
gs
jns
add
jne
(bad)
jg
ins
xchg
jge
in
add
(bad)
daa
loop
pop
rcr
(bad)
push
pusha
and
pop
mov
sub
jb
shr
call
loope
imul
shr
dec
(bad)
push
and
jg
imul
dec
in
das
data16
pop
xchg
sti
mov
adc
mov
fld
sub
cmp
mov
and
mov
scas
in
jg
scas
mov
cmc
cmp
add
cs
daa
push
and
bound
push
or
pop
cli
sbb
and
push
lock
push
add
jmp
(bad)
mov
jns
rcr
sbb
xchg
add
es
or
jbe
test
pusha
xlat
shr
pop
jo
cmp
pop
cmp
mov
pop
adc
mov
jg
sbb
pop
xchg
mov
jns
xchg
pop
test
jmp
repz
mov
push
xlat
and
into
pop
pop
aam
inc
sbb
dec
repz
xchg
(bad)
jle
adc
cdq
sbb
and
xchg
jmp
retf
sbb
sbb
xlat
ds
nop
xor
call
jae
sub
xchg
ja
aaa
cli
inc
mov
sbb
cld
adc
mov
cmp
xchg
scas
xor
adc
mov
and
mov
dec
dec
in
ds
popf
loopne
mov
xchg
ss
cmp
dec
std
xor
dec
(bad)
enter
push
or
push
ja
inc
fisttp
jmp
fsubr
push
pop
ds
or
mov
movs
aaa
or
daa
ins
push
(bad)
mov
pop
or
xlat
call
push
out
(bad)
rcl
cld
mov
stc
pop
hlt
add
mov
add
jecxz
inc
mov
hlt
mov
xchg
adc
mov
sub
fs
leave
fadd
xor
inc
adc
xchg
xchg
cwde
adc
jbe
jp
icebp
fsubr
inc
push
movs
pop
aam
movs
int3
fidivr
push
movs
jne
sub
shl
test
mov
add
nop
aas
in
dec
call
and
outs
jb
iret
les
inc
outs
push
xlat
jo
adc
inc
mov
div
sti
enter
(bad)
and
dec
test
call
add
into
fdivr
dec
mov
fist
mov
dec
sbb
xchg
call
dec
mov
pop
mov
push
cmc
cmps
adc
xor
mov
mov
lea
pop
call
in
test
clc
mov
sti
push
add
fiadd
mov
cld
pop
pushf
stos
inc
sbb
mov
sub
xchg
mov
nop
mov
lahf
call
data16
xor
fisttp
sahf
call
and
jns
fwait
lock
ffreep
(bad)
xchg
inc
push
inc
sub
and
mov
retf
cmp
out
gs
pop
xor
ret
outs
(bad)
sbb
mov
or
mov
lock
into
fcom
add
sbb
(bad)
stos
push
sbb
xchg
ss
imul
popf
pop
(bad)
les
ss
outs
pop
mov
push
aaa
mov
sbb
out
inc
and
(bad)
mov
fisttp
push
in
cmp
ds
mov
sahf
xchg
cs
mov
loope
and
dec
popf
push
out
repz
cmp
fs
pop
adc
fcom
adc
mov
adc
sub
or
aas
fs
scas
xchg
stc
in
mov
jge
out
cmp
retf
pushf
outs
(bad)
out
bound
jmp
cmp
cdq
enter
ret
add
ss
mov
mov
repz
push
fs
xchg
cmp
(bad)
cli
cmp
and
mov
retf
popa
and
xlat
push
xor
test
scas
das
adc
test
test
mov
ret
or
imul
sbb
xor
ror
test
or
or
(bad)
stos
test
sbb
(bad)
or
cmp
sbb
pop
sbb
out
sub
jecxz
nop
in
or
fcomp
jo
cmp
lock
(bad)
retf
int
cli
js
or
mov
test
cmp
sbb
push
or
sbb
adc
fist
fcom
rcl
xchg
fiadd
mov
ficomp
mov
inc
mov
bound
es
push
xlat
and
lds
call
movs
mov
adc
and
sub
ss
ja
add
les
loop
pop
call
adc
pop
sub
lods
inc
int
out
adc
rol
add
dec
jo
dec
xchg
jmp
lods
or
xchg
mov
and
out
imul
out
xor
dec
mov
jge
call
(bad)
push
dec
daa
mov
push
arpl
popa
imul
in
mov
cs
cli
jo
xchg
pop
jo
adc
jl
punpckhwd
mov
(bad)
fstp
xchg
out
outs
jg
nop
or
xor
sub
inc
test
and
xchg
ins
inc
mov
iret
movs
inc
and
shl
xchg
mov
mov
or
adc
sahf
loope
adc
add
and
out
loopne
test
imul
pop
sar
jg
popf
cld
jb
dec
push
xchg
xchg
pop
aaa
push
into
lock
xchg
popa
mov
mov
xlat
push
pop
xchg
or
mov
inc
ja
push
cli
inc
dec
add
int3
sar
lds
shl
add
add
pop
add
cmp
xchg
dec
pushf
cmp
cli
mov
mov
stos
sub
mov
dec
mov
aam
cld
in
jp
arpl
xor
add
enter
test
data16
inc
loop
dec
mov
inc
cmp
mov
and
sub
adc
stos
call
retf
ins
jbe
sbb
cdq
and
ret
push
or
lods
test
add
cmps
sub
cmc
hlt
cli
xchg
mov
iret
shl
lods
or
not
out
lahf
in
outs
dec
or
stos
xor
dec
(bad)
and
fnstcw
sub
cld
movs
mov
pop
into
adc
inc
lock
push
ficom
push
push
outs
and
mov
js
outs
jne
fwait
add
jno
inc
xor
popf
outs
fst
dec
push
sbb
imul
and
pop
cli
fdivr
mov
push
loop
add
jnp
xchg
cli
adc
mov
loope
jmp
fld
push
test
not
les
inc
xchg
mov
cmp
cli
ss
and
(bad)
jge
imul
or
aas
adc
cmc
ins
cmp
push
call
(bad)
xchg
das
sbb
(bad)
fldz
das
mov
jge
sbb
int3
fwait
mov
push
xchg
test
sub
jl
daa
sbb
add
inc
rcr
mov
(bad)
lods
cmc
out
jmp
in
push
pop
and
sbb
mov
or
push
fcmovnb
mov
sub
push
in
jg
sub
mov
xor
cmp
cmp
(bad)
cdq
lock
or
push
gs
dec
sub
int3
out
fwait
rcl
pop
adc
add
mov
call
sbb
int3
mov
mov
nop
fisttp
cmp
bound
add
mov
mov
jno
mul
mov
cmps
call
or
aad
mov
les
or
retf
jp
pop
pop
pop
scas
sahf
push
xor
cdq
or
mov
fisttp
push
adc
mov
xchg
adc
or
pop
cmc
pop
xchg
outs
ins
mov
aad
pop
fadd
add
gs
(bad)
iret
push
sbb
call
mov
rep
jbe
pop
ret
xchg
out
rol
lds
(bad)
jnp
bound
loopne
mov
jns
ret
idiv
inc
(bad)
mul
push
lods
addr16
fadd
bound
mov
loop
inc
mov
es
cwde
int3
(bad)
aaa
pop
mov
sbb
inc
cdq
push
inc
mov
mov
and
outs
adc
push
out
cmp
dec
(bad)
(bad)
sub
repnz
xchg
mov
add
rcl
jne
sti
jle
mov
stc
cmp
cmp
sahf
jg
mov
sbb
xor
xchg
dec
fistp
movs
mov
and
retf
fidivr
sub
shl
push
mov
push
in
clc
icebp
dec
lahf
or
movs
arpl
mov
retf
push
jmp
mov
add
clc
xor
lock
push
shr
xchg
addr16
inc
popf
call
ret
cmp
sbb
mov
push
ror
sub
loopne
ret
call
int
stos
cld
jp
loop
adc
rcr
add
in
cmp
add
sbb
pushf
stos
dec
add
sub
cmp
pop
jle
out
gs
inc
rol
retf
sub
(bad)
fcom
mov
fs
jecxz
sbb
jns
jns
pop
sbb
mov
cld
mov
call
or
mov
adc
inc
inc
mov
dec
sub
idiv
dec
or
add
imul
jge
ficomp
fs
sahf
push
push
sbb
(bad)
in
or
ss
mov
out
xor
enter
retf
(bad)
pop
stos
(bad)
stc
test
mov
mov
xchg
xchg
test
hlt
cdq
movs
add
jge
in
dec
lahf
xchg
mov
push
add
push
cli
sub
rol
add
push
mov
and
xor
je
scas
add
mov
mov
les
in
and
stos
mov
add
jp
jne
mov
inc
pop
lds
fldcw
retf
std
jecxz
xor
rcl
xchg
mov
popa
cs
in
call
pop
jb
test
inc
mov
ja
outs
inc
scas
sub
(bad)
mov
jmp
mov
mov
stos
shl
cdq
sbb
mov
sub
push
or
mov
jbe
mov
mov
xor
xor
aaa
stos
sub
inc
mov
push
push
cwde
aaa
push
mov
imul
cmp
push
cmc
repnz
enter
movs
mov
jp
mul
test
jle
(bad)
retf
(bad)
sub
push
call
bound
xor
(bad)
fist
add
dec
cmp
mov
pop
retf
cwde
dec
ins
lea
mov
push
and
push
scas
fist
cli
push
mov
scas
adc
cmps
push
and
pop
xchg
inc
mov
or
lock
xor
adc
fidivr
jl
test
les
inc
loopne
push
cmp
push
data16
(bad)
jge
in
and
out
mov
out
jns
dec
call
(bad)
bound
mov
aaa
cmp
inc
(bad)
push
adc
sub
aas
pop
ds
ja
adc
leave
fimul
fld
xchg
inc
add
mov
add
lods
xchg
dec
scas
out
into
or
test
jb
sbb
hlt
adc
cmp
inc
gs
scas
icebp
movs
xchg
inc
cdq
rol
imul
daa
xor
fdiv
std
mov
lahf
adc
ret
call
adc
stc
gs
xor
sbb
or
retf
(bad)
inc
mov
outs
cmp
stos
ret
mov
push
dec
adc
cli
imul
test
mov
sbb
adc
push
scas
mov
cmps
je
adc
lods
lods
and
fld
pop
jl
cmp
es
sbb
mov
adc
sar
xchg
dec
sub
jg
lds
enter
and
les
mov
ror
retf
ss
cdq
xor
push
out
repz
jg
add
ins
aam
lea
sbb
mov
or
sub
mul
pop
push
adc
ds
jecxz
xchg
push
pop
cs
mov
lahf
adc
jecxz
(bad)
sbb
or
sub
dec
sbb
fisttp
mov
mov
xchg
mov
iret
xchg
fild
push
push
push
clc
xchg
rcl
je
mov
cmp
jmp
xor
mov
js
add
(bad)
out
sbb
jns
cli
ds
(bad)
mov
fisttp
push
pop
pushf
ins
push
sub
pushf
inc
pop
cwde
fucomp
enter
xchg
xor
clc
rol
pop
js
dec
out
xor
or
test
inc
pop
ret
outs
xchg
mov
lods
push
mov
inc
pop
push
movq
or
int
imul
loop
xchg
cmp
js
mov
mov
adc
mov
dec
push
enter
push
scas
rcl
outs
jb
push
jne
xor
add
loope
pop
pop
jns
aaa
div
fldenv
loope
cmp
idiv
and
(bad)
or
dec
stc
or
or
sub
hlt
ds
push
pop
loopne
call
out
ficomp
sbb
mov
iret
fs
test
add
aad
xor
ins
dec
aas
sbb
push
mov
movs
jbe
sub
outs
sbb
popa
and
jmp
ficom
aam
loopne
xor
loopne
sbb
shl
jmp
mov
sub
clc
cmp
xor
inc
out
xchg
lea
xor
sub
lods
mov
or
neg
push
xchg
cwde
push
mov
neg
loope
loope
out
cmps
add
xor
data16
xor
fld
xor
sbb
(bad)
in
cmp
add
add
outs
int3
iret
xchg
in
fadd
sbb
sub
add
pop
or
and
test
stc
(bad)
ins
push
and
mov
xchg
js
inc
cmp
cmp
adc
test
popf
in
test
je
xor
sbb
cmp
sub
and
lds
ja
add
jmp
dec
add
or
into
std
sbb
cmp
add
rol
push
jl
hlt
mov
rol
dec
scas
jnp
imul
mov
push
mov
add
add
in
xor
or
pop
or
and
mov
out
fdivp
jmp
pusha
mov
add
ror
pushf
fimul
push
leave
and
cmps
aad
pop
inc
adc
fdivr
dec
jle
ins
js
cmc
nop
lods
and
fild
fcom
push
lea
xchg
mov
push
cmp
sub
add
dec
(bad)
cmp
pop
idiv
dec
mov
jae
pop
out
xlat
in
or
cmp
fwait
cmp
out
push
mov
hlt
(bad)
js
jmp
fisttp
sub
lods
cwde
test
mov
stos
jns
fs
ficomp
in
outs
or
bound
jle
pop
movs
lahf
cmp
adc
inc
and
push
not
out
adc
lds
es
mov
in
push
fwait
cwde
or
fwait
mov
jecxz
inc
jle
mov
xchg
sbb
fwait
inc
outs
das
in
mov
or
mov
xchg
cmp
add
push
pushf
loop
aam
cmc
xchg
push
inc
cmp
scas
outs
cmp
mov
dec
lahf
pop
jmp
lods
pop
enter
inc
inc
out
out
movs
mov
leave
ins
pop
cli
mov
xor
add
add
jno
das
cmps
xchg
jns
in
repz
shl
and
dec
cmp
ins
fld
add
pop
call
mov
push
repz
mov
jl
push
mov
outs
add
(bad)
sub
test
lahf
mov
push
mov
jmp
and
fdivr
test
sbb
adc
out
and
mov
mov
call
dec
les
test
jge
jbe
rol
fsubr
mov
and
or
hlt
push
mov
imul
jmp
mov
jmp
push
sbb
fmulp
mov
push
inc
adc
into
add
pop
or
xor
shr
lds
ror
xchg
call
jl
imul
cmp
push
ds
sbb
inc
rcr
xor
xchg
mov
sti
mov
adc
jmp
add
xor
jmp
add
loopne
xor
fsin
cmp
mov
cmp
(bad)
rol
xchg
adc
sub
ja
out
push
xlat
cmp
pop
loope
(bad)
sbb
or
mov
dec
mov
int
iret
xchg
cdq
leave
adc
mov
daa
push
dec
je
xchg
test
inc
add
out
sub
enter
adc
hlt
(bad)
call
inc
ins
cld
lahf
iret
stos
and
dec
sub
addr16
mov
adc
je
data16
lods
and
(bad)
es
xor
sahf
cmp
cmp
and
cmps
hlt
icebp
mov
jo
pusha
in
rcr
hlt
jne
add
movs
cld
jb
jmp
add
retf
ins
mov
repnz
or
inc
adc
xchg
dec
jle
arpl
out
mov
js
call
mov
imul
push
adc
push
add
add
push
mov
cmp
(bad)
jb
or
nop
ret
add
push
loopne
sahf
push
gs
inc
dec
pop
inc
cdq
psrad
call
xchg
or
inc
fcomp
repnz
sbb
(bad)
(bad)
clc
pop
popf
addr16
sbb
out
and
dec
das
xchg
fucom
ficom
jmp
and
outs
into
pop
cmp
or
inc
pushf
pusha
sti
ja
movs
sti
mov
sbb
cmp
dec
or
pop
jl
addr16
scas
outs
mov
aad
jo
jecxz
stos
pop
test
dec
jmp
fucomp
dec
xlat
div
mov
xchg
test
out
jae
mov
xchg
hlt
mov
test
pop
ffreep
xchg
fcom
ja
jg
daa
sub
push
xor
sub
mov
xor
cmp
test
retf
cld
rcr
push
dec
push
out
xlat
(bad)
outs
mov
add
jmp
cmps
mov
sbb
xchg
popf
aaa
clc
pusha
int
xor
enter
or
mov
inc
imul
mov
ret
cmps
push
in
movs
push
sahf
dec
add
int
mov
cmp
xchg
add
test
pop
mov
pusha
popa
inc
pop
push
push
xor
and
imul
fmul
inc
add
xchg
push
sub
test
sahf
xor
test
out
dec
jg
daa
mov
lods
rol
add
pop
lock
xor
stos
mov
mov
lea
cmp
mov
cmp
popf
popa
ja
adc
shr
bnd
push
scas
and
xchg
cmp
jmp
fistp
sbb
outs
cmps
fidivr
xchg
adc
div
xor
add
cmp
cwde
or
jo
sar
iret
dec
pusha
push
mov
cmp
enter
mov
mov
fisubr
mov
jne
movs
and
ss
ins
sub
pop
sbb
and
int3
cmp
lds
jo
gs
sbb
mov
mov
jo
les
add
xchg
pop
xor
fsub
jmp
dec
xlat
inc
out
fnstsw
adc
loopne
repz
pop
pop
xchg
inc
push
pop
add
jmp
stos
sbb
lea
fist
adc
rol
enter
arpl
das
sub
clc
call
sbb
shl
(bad)
push
inc
jae
sbb
daa
sbb
sahf
iret
std
jnp
loopne
nop
or
mov
pop
mov
fcom
add
pop
dec
xor
mov
imul
js
mov
xor
sbb
dec
mov
mov
retf
push
out
inc
mov
jbe
mov
lds
rol
pushf
xchg
(bad)
jmp
lods
in
add
pop
les
nop
cdq
and
aad
mov
es
jb
nop
pop
adc
add
call
les
pop
pushf
sahf
frstor
jg
add
or
xchg
popa
inc
add
(bad)
pusha
imul
mov
sub
mov
push
jle
mov
outs
dec
push
mov
sbb
mov
mov
out
pop
fdiv
out
jg
(bad)
lock
mov
add
lea
repz
movs
pop
mov
or
leave
adc
adc
icebp
cmp
cmovne
fadd
je
fadd
bound
push
jmp
(bad)
ins
fisub
mov
dec
aas
pop
adc
(bad)
aad
pop
fs
into
shl
dec
aaa
test
daa
cmp
pop
jmp
call
dec
inc
or
xchg
inc
fnstenv
xor
jmp
inc
inc
retf
add
adc
mov
stc
cld
jg
inc
inc
add
xor
and
es
je
add
xlat
xchg
lea
mov
(bad)
(bad)
retf
inc
aas
mov
scas
sbb
mov
add
test
retf
into
movs
outs
loopne
and
pop
ja
adc
mov
add
push
xor
xchg
mov
sbb
xchg
push
pop
fcomip
mov
jo
adc
(bad)
pop
sub
pop
ins
xchg
fisttp
mov
out
or
dec
in
sar
xlat
je
add
inc
xor
cdq
std
mov
mov
and
cdq
(bad)
xchg
cwde
inc
and
lods
jmp
test
xchg
fiadd
leave
leave
mov
hlt
ja
mov
fcmovnu
imul
jp
repz
dec
inc
sbb
dec
jbe
int
push
jecxz
mov
clc
and
inc
mov
dec
mov
iret
aam
cdq
in
xchg
push
fwait
cmp
jl
xchg
add
mov
hlt
shr
mov
dec
jg
and
xor
addr16
daa
jne
fldenv
inc
mov
xchg
mov
das
or
cld
stc
adc
xchg
jp
inc
ins
mov
lds
stos
inc
push
into
jae
pop
lds
bound
out
mov
jecxz
(bad)
sahf
(bad)
scas
aas
ds
add
dec
add
dec
mov
mov
pop
dec
jae
lods
push
jle
mov
sbb
in
jbe
aaa
mov
(bad)
mov
jno
popf
pop
jmp
xchg
dec
dec
or
clc
xlat
push
in
aam
in
dec
inc
shr
cld
mov
jg
jmp
xchg
pop
ret
or
xchg
cwde
push
nop
and
mov
lds
push
movs
fcom
aas
and
ret
pusha
rcr
(bad)
and
adc
mov
and
pop
xchg
les
mov
xlat
and
xchg
sahf
dec
lea
test
push
cmc
outs
add
jb
sbb
lahf
comiss
and
in
mov
sub
or
mov
ja
inc
push
cmp
int
bound
into
mov
mov
(bad)
call
aaa
aaa
inc
or
or
add
pop
mov
lods
fcmove
jge
xchg
cmp
dec
stos
pop
daa
push
fisttp
mov
push
repnz
aas
rol
cmp
inc
cmp
(bad)
into
sub
loop
cmps
sbb
leave
and
mov
inc
jmp
hlt
shr
add
(bad)
outs
adc
xchg
xchg
aad
gs
test
pop
out
xchg
adc
mov
xchg
push
xchg
xlat
in
sbb
lock
jno
popa
adc
in
ror
mov
nop
and
sub
sbb
cmps
push
mov
shl
js
scas
push
nop
sub
out
xchg
mov
and
mov
repz
enter
cdq
rcl
jle
dec
rol
pop
push
mul
jb
xor
rol
inc
mov
xor
test
sub
(bad)
lock
xchg
call
(bad)
ror
imul
jp
dec
out
jmp
fstp
rcr
mov
(bad)
into
fwait
sub
cs
sbb
sbb
push
mov
cmps
cwde
mov
or
mov
sbb
push
xlat
and
adc
scas
sbb
sbb
mov
dec
jnp
test
pop
push
inc
dec
sub
idiv
mov
out
fst
gs
lahf
hlt
outs
clc
xor
scas
add
or
sbb
add
cmp
mov
stos
leave
jl
cmp
push
rep
repz
stos
pop
hlt
mov
cmp
in
adc
jge
lods
pushf
out
pop
imul
mov
and
cwde
inc
mov
test
lea
mov
das
and
jae
mov
stos
dec
fnstsw
sahf
daa
stos
jbe
(bad)
xchg
xchg
fsubr
shl
and
lock
dec
in
cmp
in
ja
mov
call
je
adc
in
loope
jnp
(bad)
xor
cmp
lock
bound
ins
popf
add
fidivr
lea
dec
sbb
lods
sbb
les
pop
popf
lock
les
push
cdq
xchg
mov
jbe
dec
jp
or
dec
popa
jae
std
retf
push
or
movs
push
mov
hlt
in
cwde
jp
ja
mov
push
and
xchg
dec
jmp
mov
icebp
cmp
std
ficomp
ficom
jg
test
out
and
retf
bound
dec
jno
fadd
xor
jge
push
and
retf
addr16
or
dec
xor
mov
sbb
cmp
scas
aad
or
in
and
jnp
rcr
pop
inc
std
std
adc
fstp
jmp
call
adc
sub
repnz
out
mov
push
adc
mov
inc
jnp
fadd
mov
dec
je
int
jne
or
sub
and
sbb
jnp
mov
pushf
and
xlat
pop
test
sbb
hlt
and
push
movs
repz
xor
das
lock
pop
jne
imul
jmp
pop
into
mov
test
fucomip
ja
lock
bound
fild
ret
fisttp
retf
pop
inc
mov
jmp
cwde
loope
call
rcr
jmp
push
mov
push
ja
xchg
mov
test
loope
mov
mov
clc
les
call
adc
cmp
lds
jnp
sbb
mov
adc
call
add
vpmaddwd
or
leave
adc
jmp
jb
idiv
retf
cdq
push
and
call
inc
sbb
adc
mov
sahf
sub
nop
lods
mov
jno
aas
inc
add
or
(bad)
mov
and
scas
stos
div
xchg
lea
push
inc
push
pushf
pop
loop
pop
xchg
or
setl
mov
sbb
pop
sub
mov
movs
popa
inc
retf
push
stos
enter
ret
jge
sbb
adc
in
jl
mov
or
mov
or
or
push
or
xchg
or
aaa
ret
push
addr16
js
add
pushf
pushf
jmp
ds
add
loopne
stos
xlat
out
mov
add
push
sar
je
(bad)
push
add
repnz
mov
(bad)
in
dec
mov
call
mov
out
or
mov
shr
jmp
push
fst
jmp
dec
inc
and
cmps
xor
repz
into
xor
push
and
(bad)
jnp
addr16
xor
inc
push
and
inc
fdivrp
scas
xchg
adc
or
daa
into
cmp
ret
sub
sub
push
pop
pop
push
add
xor
gs
icebp
xor
int3
std
jb
ss
pop
cmp
ror
jns
sub
jb
rol
push
adc
ins
mov
popa
ins
add
(bad)
push
sti
sbb
(bad)
pop
and
adc
aas
mov
sub
xor
lds
xchg
xchg
(bad)
sahf
sbb
in
lds
mov
retf
cmps
sbb
xchg
iret
sbb
xor
popa
mov
sbb
ins
hlt
jmp
ret
or
scas
sub
cmp
sub
push
push
movs
and
mov
push
mov
movs
fs
movs
jp
sbb
rcl
or
lea
xchg
pushf
mov
data16
ficomp
fsubr
(bad)
jle
inc
and
pop
std
jmp
adc
retf
ja
pop
lahf
jae
aam
ret
outs
xor
jmp
in
cmp
push
in
int3
xchg
cld
mov
jmp
loop
adc
mov
jne
cmp
inc
fldenv
or
scas
add
or
pop
retf
stc
dec
add
mov
test
cdq
pop
popa
sbb
jmp
inc
or
adc
aam
int
lahf
not
icebp
pushf
outs
xchg
je
fstp
cmp
pusha
cmp
xchg
pushf
cld
push
repnz
cmp
adc
inc
dec
jbe
xchg
mov
rcr
les
fdiv
repz
repz
retf
sub
push
pusha
xor
lock
mov
outs
js
fsubr
add
iret
add
pop
sub
loopne
adc
add
lds
in
call
xchg
jmp
out
retf
pusha
sets
into
in
mov
into
and
jb
nop
fwait
add
jb
or
lea
adc
test
inc
pop
sub
mov
loope
mov
jmp
xlat
jmp
cmovns
movs
nop
stos
in
ret
xchg
mov
(bad)
push
or
jns
xchg
in
dec
sbb
mov
adc
cmp
ins
mov
dec
pop
out
pop
sub
pop
lods
dec
(bad)
fild
mov
stos
and
cmp
cmp
shl
add
loop
jno
add
pop
dec
xor
inc
clc
push
retf
mov
and
fwait
je
cmps
arpl
sbb
loopne
adc
je
add
adc
pushf
clc
fs
fst
jb
adc
xor
or
cli
iret
mov
repnz
ss
mov
inc
lahf
xlat
sbb
dec
jmp
ror
lods
sti
dec
dec
nop
mov
xchg
xchg
mov
cmp
mov
movs
mov
pop
mov
(bad)
test
sbb
out
repnz
add
bound
call
nop
fcmovbe
imul
inc
lock
in
mov
and
cld
in
cdq
jmp
in
(bad)
mov
sub
enter
fisubr
pop
push
out
enter
(bad)
stc
dec
pusha
xchg
mov
jo
sar
sub
jg
push
or
and
xchg
push
cmp
adc
fisttp
(bad)
bound
int
data16
jg
call
neg
bnd
lea
inc
pusha
or
xchg
xor
mov
retf
inc
cmp
ret
mov
cmps
test
aam
jp
neg
xchg
inc
(bad)
adc
imul
jmp
adc
jecxz
fst
mov
sbb
push
fst
mov
sub
test
dec
mov
call
mov
cmc
xor
iret
loop
nop
neg
outs
int
scas
xchg
xchg
stc
add
lds
arpl
outs
stos
js
das
pop
xchg
cli
sub
jmp
cld
sub
fstp
or
jp
pop
cmovae
and
es
or
cmps
and
mov
neg
lahf
ins
dec
std
xor
pop
call
dec
pop
and
repnz
mov
and
dec
mov
sahf
or
push
arpl
push
add
int
inc
retf
jnp
in
test
ins
aaa
sar
add
ja
and
imul
dec
dec
cmp
jp
call
xchg
lea
jmp
push
and
mov
mov
push
call
add
dec
and
cmp
test
jle
inc
xor
jl
(bad)
sbb
push
je
int
xchg
push
dec
sub
mov
js
xchg
in
jno
cs
sbb
dec
lods
jp
pop
mov
adc
imul
clc
adc
mov
xchg
mov
cmps
pop
(bad)
and
data16
pop
fs
push
jecxz
mul
in
in
mov
pop
out
mov
loop
pushf
and
test
cmp
inc
or
and
cmp
repz
and
mov
into
adc
dec
into
mov
pop
popf
(bad)
xchg
test
inc
sbb
fisttp
dec
and
ins
movs
stos
addr16
inc
int3
out
add
fisubr
sbb
or
and
xchg
sbb
ret
xor
jl
mov
mov
push
cmp
push
lods
jno
dec
dec
inc
out
bound
out
pushf
es
loope
in
cmps
aad
mov
cmp
jne
ins
das
sub
dec
ja
mov
in
mov
sbb
inc
mov
jle
in
lahf
or
inc
test
sti
xor
call
xchg
xchg
sahf
mov
(bad)
xor
add
shr
push
mov
xor
jmp
pop
and
(bad)
sbb
mov
(bad)
cmps
es
xor
jne
sbb
jecxz
fld1
inc
call
cmp
lahf
fistp
in
xchg
cmps
js
ror
out
lock
xlat
add
xor
dec
sub
fdivr
leave
push
sub
(bad)
scas
cmp
dec
add
enter
mov
data16
cs
or
out
(bad)
stos
adc
jae
stos
jnp
mov
jo
jge
neg
push
or
push
sub
fiadd
cmp
rcr
xchg
mov
sbb
add
push
bound
pushf
sub
gs
or
or
test
jbe
mov
and
sar
sub
jns
jge
mov
sbb
inc
inc
nop
dec
out
js
int3
(bad)
and
xchg
jge
rcr
imul
test
into
mov
aad
lea
cmp
hlt
or
cs
jmp
popf
cmp
clc
xchg
dec
ins
test
stc
retf
jecxz
sub
aas
test
pop
jae
add
mov
push
call
stc
outs
adc
mov
xchg
lds
shl
inc
pop
mov
nop
xchg
inc
call
jnp
in
inc
iret
stos
jecxz
mov
(bad)
out
sub
imul
retf
adc
cmps
inc
pushf
sbb
sub
xchg
mov
in
jmp
mov
lods
push
test
push
xchg
imul
or
pop
or
aam
cwde
jmp
inc
sahf
dec
push
and
inc
stc
cmp
jp
test
mov
out
popa
mov
mov
pop
pushf
sbb
pop
add
jl
xor
cdq
add
and
(bad)
cli
adc
stc
sbb
test
cmp
jg
cmp
sbb
into
test
ja
shl
mov
outs
retf
add
jp
jbe
addr16
mov
cdq
addr16
xchg
and
(bad)
out
arpl
jl
cli
ja
test
cmp
cmp
sbb
xchg
(bad)
dec
lods
jmp
rcr
dec
dec
mov
ffreep
stc
(bad)
or
call
and
inc
xchg
sbb
push
ror
out
add
cmp
mov
addr16
mov
cmp
fild
jmp
ret
imul
xchg
xlat
push
movs
push
lock
push
lods
mov
pop
adc
xchg
dec
mov
dec
cli
ja
xchg
pop
add
mov
xor
cwde
stos
aas
in
sbb
jb
cs
clc
inc
xor
and
mov
mov
mov
xchg
mov
popa
popa
pop
shl
dec
(bad)
mov
in
jae
mov
ins
xor
fwait
mov
enter
sbb
test
cmps
pop
std
cdq
jns
call
cmc
out
push
out
or
and
sbb
rcl
pop
cmp
jnp
ja
fcom
xchg
xchg
addr16
cmps
push
xchg
push
loop
sti
cmps
movs
in
int3
into
(bad)
xchg
gs
sbb
pop
pop
jp
sbb
add
sti
xor
pop
or
lds
clc
push
add
out
cli
pop
(bad)
cld
or
loopne
mov
pop
rol
retf
jno
sub
rcr
sbb
jb
and
out
cmp
cmp
push
cmp
jl
(bad)
popa
(bad)
pop
jno
push
xchg
dec
scas
push
mov
or
xchg
dec
ret
cmp
add
xchg
mov
call
dec
inc
inc
shl
retf
push
adc
sub
adc
and
mov
cmp
retf
popf
mov
shl
xchg
test
jmp
shr
mov
lods
sti
ret
adc
sub
adc
cwde
and
and
pop
js
repnz
scas
add
inc
into
ror
mov
jmp
pop
jecxz
jne
lahf
in
sti
add
or
inc
inc
xchg
xor
jae
mov
push
shl
loope
mov
push
stc
mov
shl
(bad)
icebp
test
in
or
push
push
dec
xchg
int
sti
mov
div
arpl
ror
movs
xor
sbb
xchg
outs
xor
cmp
xchg
or
add
lea
mov
pop
in
pop
fimul
mov
mov
cmps
nop
push
mov
or
mov
mov
dec
mov
pop
jbe
push
lea
cwde
xchg
das
ds
and
mov
pop
pop
outs
mov
test
xchg
dec
(bad)
or
(bad)
ins
int
mov
fcomip
push
inc
icebp
pop
test
mov
test
cmp
scas
lods
or
fsubr
enter
add
rcl
xor
jne
mov
push
icebp
pusha
xor
cmp
jp
push
pop
push
into
in
cmps
cmp
stos
pop
rcr
inc
adc
int3
mov
jae
and
rol
cmps
fsubr
cmp
cmc
mov
sbb
aad
pop
sti
inc
cmps
mov
mov
cwde
aam
jg
clc
inc
dec
dec
xor
je
sub
push
and
iret
movs
xchg
in
adc
cmp
call
fs
cld
xchg
cmps
(bad)
arpl
push
mov
out
jmp
jmp
inc
clc
adc
repnz
push
sti
js
scas
push
sub
or
js
cmp
push
cmc
xchg
inc
mov
popa
and
xor
lea
push
push
cli
out
cmp
js
mov
cmp
or
inc
aaa
push
pop
dec
jo
push
lds
(bad)
cmp
mov
stos
adc
cli
and
inc
lahf
mov
aaa
lods
loope
inc
mov
pop
pop
mov
rol
int
fdivrp
call
test
mov
mov
test
loop
out
xor
mov
fcom
or
(bad)
loope
sub
jmp
xchg
mov
jno
jg
xchg
xor
sub
lds
pop
inc
adc
js
or
jp
in
repnz
dec
push
push
nop
cmp
(bad)
dec
jbe
outs
(bad)
mov
sub
adc
mov
mov
cdq
add
push
outs
push
fdiv
les
into
and
(bad)
push
aas
push
mov
mov
sti
inc
push
div
sahf
out
iret
mov
dec
imul
cmp
lea
lds
imul
mov
(bad)
out
mov
push
stos
icebp
(bad)
cmp
shr
out
sbb
jp
movs
push
scas
dec
sub
dec
aad
leave
(bad)
push
test
mov
xor
pushf
aad
inc
push
push
call
repz
inc
xchg
xlat
fwait
push
ss
pushf
repnz
push
push
rol
inc
dec
lahf
inc
retf
xor
lods
inc
sbb
cmps
add
and
int3
push
popa
cmp
or
pop
jp
mov
test
mov
lea
leave
mov
sbb
(bad)
std
dec
(bad)
aaa
data16
xor
call
movs
out
inc
mov
pop
bound
and
out
xchg
js
ins
in
dec
sbb
sub
push
adc
outs
push
addr16
shl
sbb
fisubr
call
outs
jae
lahf
xchg
cmp
sbb
add
int
inc
add
xchg
mov
jnp
retf
(bad)
out
jmp
jne
lahf
xchg
retf
jge
jmp
pushf
fild
jp
icebp
ja
sti
ret
retf
dec
shr
fucomi
push
sbb
jnp
push
fild
outs
add
mov
test
adc
push
jno
jbe
loopne
je
dec
mov
mov
int3
fwait
test
(bad)
mov
mov
fnop
hlt
mov
jne
mov
pop
cli
xor
fnstenv
movs
in
aas
jmp
bound
add
adc
or
pop
fnsave
dec
push
mov
bound
loop
shl
lahf
ret
shr
lods
add
outs
inc
add
cmp
stc
je
sub
dec
leave
bound
retf
aad
ds
je
scas
and
call
xor
outs
jl
out
mov
pop
xchg
ins
daa
ror
inc
dec
ror
not
jno
jg
imul
xchg
fidiv
push
jmp
push
mov
ret
icebp
rcr
out
ret
sub
xor
mov
or
ins
add
or
shr
aaa
test
xchg
arpl
jo
sub
push
loop
inc
fstp
add
test
out
into
dec
shr
ds
mov
movs
imul
pop
or
fisub
sub
mov
(bad)
xor
xchg
fisttp
jnp
xchg
xchg
fldl2t
fs
das
mov
inc
or
cwde
(bad)
jmp
xchg
cmp
shufps
inc
fdiv
clc
inc
mov
push
inc
add
mov
jmp
adc
cwde
mov
mov
lds
jp
pop
mov
fs
das
mov
pop
mov
rol
imul
scas
pop
jno
mov
div
scas
sbb
push
inc
aad
paddd
mov
mov
jle
outs
push
add
loopne
lock
xor
iret
mov
cmp
inc
xchg
call
xchg
pushf
add
cs
sub
xchg
dec
loop
fcmove
rcl
enter
aas
in
xor
inc
dec
das
int3
cmp
push
sub
adc
das
dec
(bad)
(bad)
pop
pusha
retf
mov
sub
lock
mov
retf
mov
dec
inc
add
ins
mov
sub
outs
mov
ja
dec
js
bound
test
pop
mov
jne
fdivr
mov
dec
mov
sbb
mov
xchg
add
test
addr16
cmp
sbb
ss
popa
cmp
inc
lock
mov
cmp
jmp
scas
gs
mov
mov
dec
cmp
(bad)
cmp
add
xchg
je
sbb
mov
xor
mov
fist
inc
or
fisttp
xchg
repz
push
out
add
pop
xor
dec
jae
out
fbld
mov
das
stos
adc
je
pop
jo
out
pop
jmp
fimul
(bad)
jmp
(bad)
or
mov
mov
cmp
out
adc
dec
xor
jmp
sbb
fst
mov
pop
xchg
lock
pop
sub
adc
jbe
out
test
and
cmc
sbb
lods
inc
xchg
(bad)
hlt
rol
scas
imul
nop
ds
cdq
js
cmps
mov
mov
xchg
dec
jmp
lea
cmc
lods
ins
imul
xor
inc
cmps
push
jp
mov
and
ret
icebp
push
das
dec
add
scas
(bad)
cmps
hlt
and
push
ins
js
fimul
enter
xchg
mov
push
movs
cmp
mov
mov
add
hlt
adc
loop
arpl
add
adc
sub
test
sahf
inc
cmc
xor
or
sbb
in
cmps
sar
xchg
cli
jmp
jge
mov
pop
sub
shl
sub
pop
mov
and
cmp
xchg
in
in
stos
jb
in
mov
or
pop
xor
mov
frstor
and
and
lea
mov
cld
mov
nop
jle
or
pcmpgtd
loope
jp
pushf
pusha
mov
add
test
ds
fwait
in
push
dec
jmp
(bad)
hlt
mov
movs
mov
xchg
fimul
fstp
or
add
adc
call
out
aam
sbb
arpl
repnz
mov
sub
ja
mov
mov
mov
mov
in
push
and
push
ss
add
lock
adc
leave
xor
mov
aaa
mov
out
sub
dec
ret
arpl
test
push
js
adc
and
rol
fwait
nop
push
lds
stc
adc
xor
or
cmp
cmps
ja
add
push
jns
jno
shl
mov
add
jp
lods
jbe
(bad)
adc
xchg
lds
mov
fiadd
aaa
das
scas
in
ja
push
push
sub
xchg
dec
(bad)
daa
sub
push
push
iret
scas
cmps
mov
and
cdq
adc
and
mov
pop
fldcw
fadd
sub
adc
fidivr
and
mul
cmps
sahf
jmp
mov
mov
fwait
loopne
jecxz
mov
sbb
cmp
sub
add
leave
retf
jae
es
xchg
push
faddp
lds
jle
stc
hlt
cdq
cmp
nop
or
inc
lock
push
mov
sbb
in
int
push
(bad)
pop
or
adc
(bad)
cli
xor
pop
test
lods
dec
(bad)
fmul
sbb
mov
mov
scas
dec
push
dec
int3
push
fstp
xchg
xchg
fldcw
lods
xor
jnp
sub
stos
ret
cmps
cld
cmp
inc
mov
mov
xor
add
dec
xlat
in
mov
imul
scas
sbb
not
stos
nop
jg
in
bound
inc
add
std
lea
or
inc
jp
mov
popf
stos
cmps
sub
jo
inc
fistp
jno
cmp
push
jecxz
mov
adc
loope
xchg
xor
into
test
cmp
xchg
sub
outs
mov
fwait
jmp
xor
pushf
mov
push
ret
push
lahf
cmp
inc
xor
jae
ret
icebp
xchg
adc
out
out
sub
jmp
jmp
and
repz
out
lods
lock
cmp
mov
enter
pop
pop
out
call
cwde
xor
xchg
fiadd
fdiv
cdq
mov
jmp
jns
mov
mov
(bad)
cld
cmp
and
scas
call
add
sub
fxch
(bad)
cmp
or
sahf
sub
sbb
and
sbb
xor
das
sub
adc
jp
push
inc
mov
xchg
les
pop
movs
(bad)
xlat
add
(bad)
icebp
sub
repnz
dec
and
test
push
adc
fisubr
pop
retf
mov
out
cwde
mov
mov
fimul
mov
push
(bad)
pop
jmp
gs
adc
sar
into
icebp
pop
pop
or
sub
imul
or
push
aad
push
mov
shl
or
dec
repnz
add
xor
retf
inc
loopne
mov
ror
dec
push
xchg
xor
gs
mov
mov
xchg
push
or
ja
push
lahf
dec
push
xchg
or
jl
cmc
out
and
test
mov
xchg
inc
and
sahf
into
sahf
push
ins
pop
push
lahf
out
pop
add
out
ret
mov
fucomip
jp
ror
push
sub
fnsave
imul
jmp
cld
jecxz
test
sub
jle
pop
sub
hlt
(bad)
mov
popf
jno
sbb
pop
push
jge
ret
jge
(bad)
pop
add
inc
inc
or
push
pop
lds
fadd
sbb
fwait
pop
pop
cmp
mov
xchg
xor
(bad)
ret
and
into
in
mov
sbb
pop
aam
mov
out
or
cmp
jg
sub
je
push
push
jno
ds
mov
or
jo
stc
dec
sbb
pop
or
sbb
inc
jo
xlat
and
add
inc
daa
xor
rcr
aaa
sub
into
out
mov
pop
dec
mov
cs
xor
pop
aaa
mov
jb
outs
outs
retf
push
mov
pop
sbb
shl
jle
sti
out
mov
sub
cli
imul
(bad)
outs
and
test
addr16
fisttp
jb
fst
or
cmp
cmp
mov
mov
loope
mov
and
(bad)
mov
bound
adc
sub
lock
or
nop
ins
out
cmp
cld
sbb
into
stc
xor
ret
jp
mov
cmps
jl
loope
ret
rcl
xor
imul
inc
push
ret
int
mov
in
and
mov
ins
ret
dec
retf
popa
ret
pop
test
sahf
out
xor
sub
neg
mov
test
out
(bad)
mov
pop
xchg
je
mov
jmp
mov
pushf
jle
cmps
adc
scas
scas
dec
jae
mov
xchg
jp
or
sub
and
jmp
adc
ds
mov
add
mov
bound
inc
and
dec
les
lds
mov
push
idiv
sub
or
xchg
imul
inc
iret
cmp
call
xor
or
test
xor
in
into
fadd
pop
icebp
(bad)
fwait
xchg
xor
popa
push
enter
mov
xor
(bad)
and
or
repz
loope
sbb
loopne
int
add
add
aaa
jno
jmp
outs
arpl
test
add
mov
mov
add
stc
pop
pop
ja
fwait
xchg
ret
cmps
daa
pop
(bad)
rol
mov
pusha
mov
ret
jmp
dec
inc
push
vpaddw
push
fmul
sub
mov
push
or
mov
dec
gs
dec
inc
cmps
lea
movs
adc
fwait
ja
mov
loope
js
je
outs
push
out
or
or
(bad)
and
mov
mov
cmp
je
adc
hlt
xchg
in
and
(bad)
mov
jno
adc
sbb
lahf
loopne
sub
push
(bad)
pop
push
loopne
dec
and
lea
test
retf
jno
jp
and
or
add
jl
xor
xchg
int
lods
into
shl
addr16
cmps
movsx
les
in
(bad)
cmp
sbb
sbb
cmp
adc
iret
mov
in
and
cmc
xchg
dec
mov
dec
xor
out
or
push
jl
test
or
das
cmp
fwait
lods
sbb
pop
adc
jno
popa
mov
adc
in
repnz
inc
push
pop
cmp
leave
ror
mov
scas
mov
or
lds
mov
mov
sbb
dec
mov
stc
retw
loopne
pusha
dec
popf
int
mov
push
cdq
jne
dec
mov
rcr
or
aas
jmp
or
add
aad
jl
aaa
sbb
leave
jmp
data16
and
test
or
inc
jae
xchg
imul
mov
jle
pop
std
aas
retf
ins
xor
fild
and
leave
push
xchg
cmp
jns
hlt
and
sub
mov
ret
sbb
xchg
(bad)
cwde
xchg
jns
adc
mov
out
mov
cmc
cdq
adc
cwde
imul
test
xchg
popa
jl
cmp
dec
mov
cmp
std
jmp
pop
je
mov
jae
sbb
repnz
scas
sbb
ins
cmp
pop
retf
cmc
xor
ins
and
and
jo
je
push
jbe
rcr
mov
xchg
sti
add
sbb
push
lahf
push
cld
push
jbe
adc
stc
sbb
fs
jge
sbb
fwait
or
int3
pop
scas
or
je
xor
loopne
(bad)
out
mov
js
inc
inc
or
sar
pusha
test
push
movs
add
dec
mov
in
shr
(bad)
push
int
xor
dec
cmps
push
jmp
inc
enter
nop
ror
cmp
div
add
dec
mov
push
les
out
sub
adc
in
lods
jno
rol
ja
imul
in
inc
add
cmc
and
cld
or
ss
add
jg
int3
or
pusha
jle
iret
pop
sbb
jecxz
mov
mov
mov
mul
add
jns
jecxz
(bad)
xor
pop
sbb
ss
xchg
enter
sbb
or
jmp
fnsave
repnz
jge
sbb
and
xor
jae
mov
ss
retf
(bad)
mov
jmp
bnd
xor
xlat
ficomp
in
cdq
je
not
imul
pop
sbb
inc
(bad)
or
add
pop
inc
test
(bad)
(bad)
fmul
pop
jnp
test
cld
popa
out
mov
jge
enter
jns
je
imul
or
xchg
popf
xchg
fld
out
inc
cmp
fild
xchg
int
xchg
nop
and
jno
jne
pop
test
shl
in
mov
xor
xor
dec
jnp
aaa
leave
xlat
bndldx
or
mov
(bad)
pop
mov
mov
in
adc
pop
mov
cmp
add
or
xor
mov
mov
out
imul
test
out
or
pop
fiadd
and
sti
sub
test
cmp
cwde
jge
ret
mov
xor
mov
inc
dec
mov
xchg
and
xchg
test
pop
dec
jle
mov
mov
dec
and
call
push
push
mov
sub
push
shl
or
test
adc
inc
fidivr
adc
sbb
push
jne
adc
mov
outs
jns
call
mov
ret
jmp
and
xor
jle
dec
stc
mov
jo
cld
repz
mov
lods
out
adc
scas
mov
pop
clc
stos
int
mov
retf
add
dec
and
jne
mov
jmp
movs
mov
add
cmp
sub
mov
(bad)
outs
dec
cmp
iret
cmp
popa
cmc
mov
add
sar
dec
fs
pxor
xlat
lods
add
xchg
loopne
(bad)
xchg
mov
add
test
cli
fcom
(bad)
push
in
ins
retf
sbb
imul
fldz
xor
test
add
jle
sub
lea
mov
arpl
mov
arpl
scas
shl
retf
cmc
fwait
ds
test
mov
xchg
push
xor
pop
xchg
sub
ror
into
(bad)
out
movs
rcl
out
fadd
jge
xchg
push
sbb
mov
sub
daa
dec
add
std
mov
sub
ret
xor
jle
xlat
mov
outs
cli
outs
ins
jae
in
jmp
sbb
repnz
cmp
xlat
(bad)
(bad)
lock
js
test
inc
pop
inc
mov
mov
jmp
push
sbb
sti
cmc
(bad)
fwait
adc
inc
inc
lods
xor
sbb
mov
and
push
jmp
dec
pop
aam
and
sub
nop
jne
sub
ror
cmp
adc
cmps
into
jge
xchg
mov
mov
dec
cdq
cmp
adc
loopne
in
bound
xor
in
das
or
pushf
sar
rol
mov
jb
out
out
(bad)
jl
adc
retf
aas
push
lea
adc
je
js
daa
mov
popf
lods
fld
push
and
fistp
jmp
shl
jl
pop
outs
xchg
add
das
into
and
pop
xchg
neg
cmp
retf
retf
loopne
cmps
test
(bad)
hlt
test
inc
xor
pop
push
sbb
sub
jmp
cmp
popa
sub
adc
lea
popa
(bad)
fisub
ror
icebp
test
jne
cmp
pushf
inc
pusha
test
jp
sub
aas
(bad)
iret
adc
dec
nop
lods
movs
shr
inc
or
dec
sub
enter
cmp
sbb
cmc
mov
mov
test
jmp
les
inc
stos
mov
xor
sbb
mov
ja
dec
es
std
test
xor
mov
inc
popa
sbb
jns
je
nop
and
popa
cmp
hlt
sub
sti
outs
mov
or
fld
retf
out
or
xchg
dec
imul
inc
sub
loope
push
cmp
mov
ds
mov
push
pop
fcom
inc
or
jbe
push
push
inc
and
ins
(bad)
out
(bad)
shl
imul
fsub
rol
in
sbb
push
jmp
retf
pop
or
and
mov
test
xchg
dec
or
sub
xor
icebp
inc
mov
or
and
cmp
test
pop
jb
sbb
pop
pop
sub
jb
add
sar
sbb
mov
in
cmp
jp
and
(bad)
xchg
retf
xlat
mov
rcr
inc
xchg
aaa
pusha
retf
cmp
out
mov
call
xor
mov
loop
cli
movs
leave
adc
cmp
dec
retf
mov
pop
outs
push
neg
mov
adc
push
push
inc
mov
ror
cmp
sti
xchg
dec
cmp
or
add
idiv
fsubrp
cld
in
xlat
cmp
pop
mov
mov
movs
xor
int
xchg
mov
mov
cwde
imul
inc
sbb
push
(bad)
rol
scas
test
pop
mov
xchg
xlat
shr
sub
push
xor
mov
or
les
gs
in
(bad)
or
jnp
jmp
dec
ja
pushf
cmp
push
xor
mov
pusha
fmul
in
cmp
xchg
xchg
aam
daa
ja
aaa
lock
push
mov
cld
ret
xlat
inc
out
into
xor
mov
into
push
sti
fimul
in
push
sub
repz
jmp
fcomp
ror
enter
call
out
and
mov
jmp
popa
sub
inc
(bad)
(bad)
sbb
shl
xchg
mov
shl
push
pop
xor
adc
(bad)
jmp
and
push
mov
inc
and
div
adc
dec
icebp
add
popa
xor
(bad)
or
sub
pop
daa
loop
shr
dec
pop
pushf
pop
add
jb
mov
mov
adc
call
sub
retf
sbb
mov
push
or
dec
inc
test
jl
add
(bad)
std
dec
cmps
push
jmp
or
not
loopne
pop
(bad)
stos
or
fsub
fst
jno
jnp
push
xchg
mov
fdivr
sbb
mov
or
call
jbe
mov
jo
push
ins
xchg
mov
mov
pop
mov
mov
movs
push
out
xchg
sub
xlat
enter
out
add
(bad)
inc
lods
jmp
xchg
push
popf
inc
nop
xor
popf
nop
int
imul
sbb
mov
cmc
push
call
pop
mov
jge
(bad)
cld
pop
or
sahf
jg
mov
push
pop
jg
jle
mov
std
stos
mov
mov
jne
add
push
test
stos
movs
iret
clc
pop
fs
mov
dec
ror
sahf
push
inc
pop
xchg
cld
jo
loopne
and
lods
test
xor
lahf
sbb
(bad)
test
or
xor
push
(bad)
mov
test
mov
mov
sbb
jae
mov
out
jnp
push
fdivr
jmp
iret
out
les
lock
pop
mov
mov
mov
aas
(bad)
dec
(bad)
xchg
adc
pop
ins
cwde
inc
xchg
fs
test
mov
jg
data16
add
test
leave
fisub
lea
jae
and
movs
jle
pushf
and
pop
cmp
cmps
stos
pop
inc
jp
stos
push
pop
sub
dec
push
add
pop
adc
and
push
rol
and
dec
out
xchg
xchg
add
pop
xchg
sbb
cmps
(bad)
repnz
fsubr
mov
dec
rcr
or
and
not
cld
and
sahf
mov
or
fwait
mov
loop
pop
(bad)
out
ret
or
mov
movs
jmp
and
cmp
cs
sub
fimul
xchg
loop
inc
mov
adc
inc
ret
xchg
rol
jb
pop
or
cs
pop
cmp
and
pop
or
xchg
(bad)
cmc
test
mov
loop
push
in
sbb
inc
or
iret
mov
and
jae
mov
test
cmp
retf
pop
pusha
cdq
mov
mov
add
pop
cli
jmp
jmp
fabs
jge
mov
clc
mov
repz
adc
push
popa
test
in
or
jmp
(bad)
(bad)
mov
into
jecxz
mov
mov
jae
cli
test
pop
mov
popf
out
or
jne
push
fnstcw
jp
cmp
ja
dec
push
dec
lock
ja
add
inc
cwde
repnz
pop
and
push
mov
xor
clc
dec
loopne
sub
jmp
dec
les
call
daa
and
sub
das
jae
xchg
jg
je
jecxz
dec
lods
and
jle
xor
shr
xchg
fs
js
test
mov
(bad)
pop
adc
pushf
fist
outs
aad
mov
int3
sahf
leave
sti
ret
pop
pop
movs
mov
les
add
movs
fist
push
or
jmp
in
push
mov
mov
movs
and
push
dec
lods
jo
call
outs
dec
pop
mov
leave
add
pop
lock
loope
add
push
mov
out
movs
xor
xor
xchg
(bad)
xchg
and
mov
jae
pop
ret
ret
xchg
jns
mov
enter
sbb
movs
cwde
in
enter
nop
lea
shl
iret
pop
mov
fldcw
jne
cwde
sbb
fidivr
xchg
jl
sti
cmps
cwde
dec
ret
xlat
adc
scas
xchg
push
mov
add
cmc
xlat
add
adc
call
push
mov
or
sub
and
scas
test
loopne
outs
in
sbb
inc
fadd
xor
ss
add
jl
xchg
mov
rcl
call
dec
mov
sub
sbb
pop
mov
jbe
push
ds
sbb
jno
push
dec
and
stos
ja
lods
sub
sbb
dec
sub
test
ret
lods
pusha
(bad)
ss
jne
fimul
push
and
mov
imul
(bad)
pop
mov
fadd
dec
out
xor
ret
aas
xchg
push
xchg
cmc
lock
shl
fwait
or
imul
sar
std
mov
fiadd
xor
icebp
jae
cdq
inc
adc
push
cld
adc
cmc
sbb
adc
sahf
fdivp
or
sub
inc
lods
push
xchg
mov
cdq
daa
outs
and
imul
mov
mov
mov
mov
jg
sub
add
sub
mov
dec
xchg
(bad)
mov
adc
sub
mov
inc
sbb
mov
jne
lfs
inc
mov
out
sti
(bad)
imul
out
and
mov
xor
mov
cmp
in
jmp
cmp
mov
in
or
icebp
ds
jge
cmp
out
mov
aaa
sbb
icebp
popa
jg
mov
je
xor
xchg
mov
fisub
xor
ror
xchg
sahf
retf
in
adc
lea
sbb
gs
mov
push
adc
xchg
in
adc
pop
xor
pcmpgtd
ss
xor
icebp
jle
jp
scas
dec
retf
aad
nop
jne
xchg
pop
inc
stc
hlt
or
adc
sahf
gs
repz
jmp
adc
call
mov
push
shl
mov
psubb
shl
jb
stc
add
inc
and
das
mov
loopne
cmp
pushf
xchg
(bad)
xchg
push
in
jmp
popf
xchg
jnp
arpl
loopne
retf
cmps
ret
pop
sub
pop
dec
push
outs
pop
mov
fcom
call
loop
cdq
(bad)
repz
iret
jbe
inc
push
popa
sbb
jp
and
dec
nop
mov
dec
sub
push
jae
sub
push
iret
xor
push
cs
or
icebp
or
mov
adc
add
pop
jns
aam
sahf
jno
fisubr
repnz
and
and
call
dec
xor
fs
and
cmps
fist
or
ret
imul
jne
shl
add
ffree
mov
cmp
in
jno
into
push
shr
xor
pusha
ret
retf
jg
sti
push
xchg
in
add
or
fs
cmp
mov
inc
test
push
adc
iret
daa
jp
int
cmp
jle
(bad)
dec
shl
mov
mov
and
xchg
mov
jbe
test
inc
sub
inc
mov
in
pop
add
mov
jl
dec
pop
push
cmp
sub
sub
inc
jmp
loope
fmul
ins
inc
daa
inc
add
test
inc
push
into
xchg
mov
cmps
mov
mov
lock
iret
mov
popa
pop
add
xor
sbb
ins
(bad)
imul
mov
sahf
sbb
(bad)
loope
jmp
ret
inc
icebp
cmp
pop
int
leave
or
xor
mov
mov
aad
jmp
jecxz
and
push
dec
fs
in
pop
fdivp
cmp
adc
ins
mov
lahf
iret
mov
dec
(bad)
das
mov
aas
sbb
mov
dec
pop
nop
pop
std
jae
lock
adc
and
rol
jbe
aaa
in
lock
inc
vmovaps
enter
push
add
pusha
fstp
arpl
dec
mov
ja
sub
shr
xchg
shl
dec
pop
and
and
icebp
mov
pop
sub
inc
ja
push
ficom
outs
add
dec
sbb
lods
sar
cmp
call
xlat
mov
fxch
int
mov
sbb
add
lahf
pop
xor
push
mov
out
mov
add
mov
imul
push
gs
pop
mov
je
sti
xor
lea
xchg
push
or
jae
xchg
mov
retf
mov
jp
pop
pop
rcr
cli
and
inc
sub
pop
(bad)
jg
xchg
or
out
mov
lahf
(bad)
mov
mov
jb
fcom
(bad)
ds
ja
xchg
fwait
ds
cmp
popf
push
pop
jg
lods
(bad)
jb
inc
push
adc
mov
push
(bad)
jns
retf
dec
mov
push
aad
icebp
mov
lods
outs
add
mov
icebp
lock
or
fnsave
imul
fcom
mov
xchg
call
xchg
loop
xchg
mov
adc
push
add
push
fs
call
sub
int
test
mov
sbb
jbe
push
push
push
sbb
mov
outs
push
jmp
cmc
popa
mov
sahf
dec
push
jecxz
sbb
xor
mov
xchg
dec
pop
push
push
push
popa
pop
icebp
xor
movs
dec
inc
mov
pusha
mov
sbb
rcl
mov
clc
cmp
xchg
aam
jno
dec
push
cld
je
cmp
inc
loop
inc
lahf
xor
in
mov
add
adc
(bad)
lds
jmp
fimul
sbb
sbb
jmp
scas
mov
inc
in
adc
movs
push
jne
sub
jmp
pusha
cmps
push
mov
(bad)
lock
xchg
imul
jb
pushf
mov
lock
mov
mov
data16
jno
adc
pop
into
xor
push
jge
jnp
pop
hlt
aaa
sbb
les
pop
in
out
sbb
pusha
push
push
pusha
dec
enter
fild
shl
inc
push
aas
cwde
mov
out
xchg
push
and
repnz
sub
pusha
arpl
mov
fstp
fwait
dec
mov
push
fdivr
push
sahf
cmp
cmps
stc
sbb
cmp
data16
call
aas
rol
aad
scas
push
mov
add
push
inc
or
push
cli
out
jmp
mov
jp
icebp
add
std
xchg
(bad)
lods
dec
sub
jg
movs
sbb
push
or
fs
test
inc
push
arpl
rcr
outs
mov
xor
jne
call
cli
imul
adc
dec
push
and
aam
mov
scas
push
outs
or
or
xor
push
fnstenv
fnstsw
pop
or
iret
sub
cs
push
jbe
xchg
adc
mov
in
adc
inc
aaa
int
mov
push
retf
mov
xlat
inc
enter
cdq
push
daa
mov
dec
xor
xchg
jo
cwde
or
jmp
cmp
jge
pop
push
test
mov
push
push
xlat
pop
inc
sbb
xchg
mov
inc
aaa
xor
enter
cmp
jnp
and
icebp
and
pop
cwde
mov
mov
test
gs
pop
push
lock
lahf
fst
cdq
outs
inc
dec
clc
add
xchg
fidivr
cmp
enter
and
pop
sbb
add
sahf
enter
cmp
push
jl
sbb
stc
call
xor
std
mov
outs
das
imul
jmp
push
(bad)
ror
cdq
adc
fiadd
jno
xor
retf
sti
or
bnd
sub
jmp
cmp
dec
mov
loop
hlt
add
sar
stos
sub
mov
aam
ffree
pop
pop
scas
jp
imul
mov
scas
xor
adc
ss
sbb
or
xor
pop
jmp
xchg
inc
or
push
push
jmp
or
out
(bad)
enter
jl
cmp
xchg
xchg
loope
pop
stos
adc
ret
mov
arpl
popa
test
xchg
(bad)
out
cmp
xor
adc
mov
cmp
jae
sbb
pop
hlt
mov
and
sbb
pop
je
pop
push
test
mov
sub
jbe
xchg
lods
mov
stc
outs
ss
mov
dec
aaa
mov
push
icebp
pop
stos
ret
xor
(bad)
sti
test
mov
cli
mov
sbb
not
int
out
jmp
mov
cmps
arpl
sub
jge
movs
sbb
repz
push
xlat
or
mov
pop
mov
fwait
mov
mov
scas
sbb
add
fcom
ds
ins
xchg
std
jae
or
or
fnsave
movs
mov
(bad)
lods
cmp
push
iret
mov
lock
cwde
scas
nop
xor
loope
xor
and
sti
mov
pop
add
mov
stos
imul
adc
call
sar
pop
hlt
js
aam
sub
push
stos
outs
push
bound
jge
cwde
outs
add
push
in
mov
enter
jg
inc
jnp
fst
sbb
inc
gs
sub
mov
inc
jae
add
ret
adc
movs
jb
xor
sub
sbb
mov
cdq
and
mov
retf
dec
popf
mov
in
push
jge
cs
cs
pop
mov
sub
adc
test
movs
add
je
mov
or
std
dec
or
pop
jbe
jno
jmp
mov
adc
xchg
pushf
sub
dec
xor
dec
in
lahf
inc
push
into
daa
movs
mov
xor
rcl
sbb
and
rcl
xor
cmp
ss
or
pop
push
pop
mov
pop
or
sub
sbb
in
mov
jg
inc
push
(bad)
out
jmp
mov
or
aas
loope
cmp
aam
rcl
xor
in
or
push
mov
mov
test
push
int3
aad
mov
cmp
and
adc
pop
jmp
jno
retf
xchg
or
mov
ret
repz
xor
fwait
cli
dec
mov
nop
xchg
inc
push
push
mov
xchg
cli
(bad)
test
sub
repz
icebp
(bad)
aas
int3
popf
mov
gs
jle
and
sub
and
add
stos
test
cmp
mov
icebp
dec
not
pop
xchg
pop
in
imul
add
sub
fistp
sub
imul
lods
or
into
lods
bound
ss
dec
dec
add
inc
pop
ficomp
and
scas
push
cmp
cmps
sbb
out
in
and
test
xchg
add
fadd
push
xor
cld
sub
adc
scas
jne
and
cli
clc
sbb
ficom
icebp
pusha
mov
mov
shl
jl
jne
leave
xor
add
pop
dec
adc
cmc
pop
ret
add
push
in
adc
js
movs
call
icebp
fistp
mov
add
std
shl
push
or
in
(bad)
ss
stos
sub
cmps
xchg
test
shl
js
dec
icebp
out
push
xchg
inc
clc
pop
mov
add
push
xchg
sub
aaa
lea
div
cmp
adc
(bad)
jno
fimul
push
movs
lods
dec
push
dec
jl
popa
push
add
lods
(bad)
push
js
gs
cmp
mov
jp
pop
mov
sub
xchg
and
pop
push
mov
das
jns
in
movs
movs
test
sub
fisub
or
dec
inc
js
xor
inc
mov
mov
and
adc
scas
lock
xor
into
fsubrp
push
out
adc
cli
dec
sub
shr
div
or
leave
mov
das
lds
imul
fisttp
rcl
xor
je
mov
jp
icebp
fcom
scas
imul
cmps
test
mov
xchg
and
push
sub
mov
jne
(bad)
imul
shr
jae
out
fs
dec
jbe
xor
jno
dec
rol
icebp
div
test
fimul
mov
jo
popf
fwait
call
iret
cmp
xor
into
dec
sbb
lahf
addr16
or
in
inc
nop
push
cmp
outs
pop
or
mov
cdq
pop
jo
push
adc
call
mov
push
xlat
mov
popf
lods
mov
or
arpl
dec
adc
cmp
dec
int
pushf
push
not
xor
and
lahf
movs
jg
fnsave
sahf
ss
sbb
scas
cmp
jnp
ror
cwde
out
lods
lods
mov
icebp
loopne
icebp
outs
mov
outs
loopne
call
pop
mov
mov
fucomp
pop
xchg
arpl
push
sub
cs
fimul
adc
mov
hlt
cmp
movs
jmp
mov
mov
inc
xchg
push
xchg
pop
out
hlt
cmps
adc
mov
add
loopne
sbb
or
aaa
in
add
iret
pop
cmp
xchg
mov
xchg
sti
xchg
rcr
dec
mov
adc
ja
inc
xchg
mov
mov
mov
fwait
mov
dec
cmp
not
xchg
lds
sbb
arpl
shr
stos
out
cmp
inc
js
lahf
js
sbb
ficom
jecxz
lods
cmp
fld
jp
and
dec
repnz
pop
mov
xchg
or
sub
xchg
sbb
fisttp
fmulp
call
out
xor
lds
mov
mov
(bad)
imul
jno
xchg
lea
inc
add
gs
loop
push
jo
test
ds
repz
out
repnz
xor
mov
xchg
mov
fidivr
xor
mov
das
or
or
xor
xchg
xchg
sub
jl
dec
into
cmp
push
and
vmovups
cmp
xchg
nop
dec
mov
lea
xor
cmps
ins
xor
fwait
jo
xchg
jmp
scas
jp
enter
stc
inc
sbb
xchg
mov
pop
pop
fbstp
ja
addr16
pushf
mov
mov
ins
sti
aad
nop
cmp
retf
loope
mov
out
sbb
clc
mov
push
(bad)
push
jp
cs
push
or
cmc
xchg
dec
mov
xchg
mov
and
sbb
in
sbb
iret
or
mov
cmp
bound
cmp
push
stc
xor
cmc
and
push
stos
rcr
xor
test
clc
test
mov
cmps
sub
in
sub
in
jecxz
or
cmp
mov
mov
pop
push
mov
ss
jns
icebp
push
cmp
out
pop
outs
test
inc
test
push
test
fimul
xchg
sbb
leave
and
mov
fld
or
retf
or
(bad)
int
(bad)
xchg
fbstp
or
out
adc
xchg
dec
adc
ror
adc
xchg
rcr
fcmovb
sub
and
add
scas
adc
xchg
les
adc
mov
(bad)
pop
les
call
pop
pop
cli
test
adc
xchg
xchg
mov
sub
nop
rcr
sub
loop
imul
and
pop
xchg
ds
lods
push
outs
movs
fwait
mov
xchg
sub
inc
neg
mov
push
icebp
(bad)
cwde
and
sub
std
xchg
ins
mov
fisttp
inc
jbe
sbb
ret
mov
push
jge
xor
repz
add
dec
retf
bound
xor
or
out
jbe
sbb
adc
fcmovnu
sub
and
outs
sahf
xor
dec
dec
imul
or
sti
lock
in
adc
xor
nop
sbb
mov
or
aam
sub
daa
xchg
jge
cld
pop
cmp
out
or
mov
fsubr
enter
sahf
imul
xor
mov
and
sub
test
int3
and
sub
ins
popf
popf
(bad)
ins
rcl
cmp
mov
sbb
rcl
int3
dec
mov
hlt
out
push
push
mov
adc
mov
leave
idiv
movs
iret
dec
pop
and
add
cs
push
xlat
fwait
and
mov
dec
sbb
inc
(bad)
and
pop
xchg
scas
push
icebp
sub
pmaddwd
mov
push
in
outs
or
pop
rcl
mov
rcl
ret
arpl
lock
mul
dec
in
dec
movs
jns
test
(bad)
fst
mov
clc
cmps
(bad)
lods
jp
fs
or
fadd
pushf
jp
cmps
push
pop
popf
icebp
and
dec
pusha
or
mov
sbb
jo
ins
stos
cmp
movs
cs
test
sahf
loope
stc
call
xchg
jb
icebp
sbb
jle
movs
mov
xchg
xlat
cdq
std
inc
out
or
and
cmps
xlat
mov
pop
xchg
cmp
data16
lock
mov
adc
and
sar
xor
mov
add
fisubr
mov
out
push
xor
xchg
sbb
push
adc
adc
or
scas
outs
pop
movs
adc
mov
ss
mov
xchg
pop
xor
movs
bound
mov
cmps
xor
cmc
dec
js
or
ds
add
into
into
pop
pop
(bad)
inc
jecxz
sti
fimul
sbb
js
popf
xchg
adc
xlat
and
pop
sbb
dec
mov
dec
jecxz
(bad)
mov
mov
fdivr
test
or
mov
xchg
mov
jmp
jecxz
add
sub
data16
pushf
sbb
pop
jp
xchg
xchg
sbb
sub
mov
jae
mov
xlat
enter
inc
push
inc
aaa
and
aam
pop
sub
mov
call
scas
mov
call
push
addr16
mov
sub
cmp
nop
inc
je
rcr
mov
fwait
loopne
int
cli
movs
jp
jnp
pop
and
mov
jae
mov
sub
enter
test
cmp
jp
in
out
mov
pop
sbb
cmp
push
ins
test
sbb
jmp
adc
cdq
sub
mov
sbb
ret
mov
xchg
sti
xor
and
cmp
cld
push
adc
hlt
mov
loop
or
in
out
(bad)
and
pop
clc
pop
or
shl
lds
cmc
in
fnsave
aad
mov
or
cdq
in
shr
or
push
cdq
jl
jno
cmps
pop
pop
in
lea
sahf
call
jmp
ret
rcl
(bad)
jl
mov
inc
aam
push
mov
adc
dec
ins
aad
jle
or
enter
aas
aad
loope
add
enter
inc
int
and
lods
out
cmc
and
ins
out
test
push
frstor
test
sub
mov
xor
dec
mov
(bad)
in
pop
push
(bad)
mov
adc
sub
repz
cs
aaa
mov
add
enter
inc
cmp
or
mov
mov
enter
fnsave
sti
xor
js
in
test
cmc
aaa
ret
mov
ins
mov
mov
jmp
push
jo
mov
push
pop
cmp
movs
loope
pop
pop
push
cwde
jbe
popf
sbb
(bad)
leave
imul
xchg
lods
dec
fidiv
jmp
lods
inc
sub
sub
dec
fmul
cwde
fld
dec
sub
cmc
jl
cmp
dec
adc
or
(bad)
jo
(bad)
out
movs
cmp
fwait
add
pop
push
loopne
sbb
push
jp
push
pop
inc
or
not
push
shl
adc
clc
nop
jp
pop
sub
push
xor
add
pop
lds
clc
data16
and
xchg
jg
pop
fsub
sbb
ins
mov
dec
pop
xchg
pop
test
lock
sub
mov
push
fs
pop
pop
arpl
repnz
es
xor
(bad)
pop
pop
pop
xlat
cmc
out
adc
imul
cs
jecxz
pop
xchg
bound
push
aaa
fwait
adc
or
data16
shr
push
mov
cmp
shr
loope
push
lds
(bad)
or
idiv
cmc
xor
cmps
push
dec
mov
xchg
xchg
in
push
mov
sbb
cmps
xor
mov
mov
or
xchg
xchg
inc
jnp
test
mov
cdq
pop
loop
dec
arpl
mov
rcl
test
mov
shr
adc
scas
mov
lds
in
mov
and
test
shl
push
add
push
mov
cmp
mov
mov
inc
aas
pop
jnp
add
pop
loop
adc
(bad)
and
out
jp
test
arpl
hlt
mov
dec
mov
test
int3
test
mov
lods
inc
pop
ins
test
xor
xchg
rcl
lods
in
loope
xchg
(bad)
lea
je
or
fisubr
mov
ss
std
lods
in
jno
inc
adc
xchg
push
shl
pop
out
and
jns
ins
clc
lea
test
imul
xchg
loopne
std
pop
mov
lahf
inc
ror
mov
lds
add
push
dec
push
or
(bad)
jno
dec
hlt
repz
mov
push
mov
retf
popf
xlat
or
(bad)
mov
xchg
cmps
(bad)
pop
add
pop
les
hlt
loope
dec
(bad)
in
mov
jp
adc
ret
fs
hlt
add
or
cdq
div
aas
ins
inc
test
clc
int3
jo
mov
aaa
iret
outs
iret
pop
jmp
mov
push
or
add
mov
inc
div
mov
out
in
mov
fsubr
mov
and
into
mov
jl
mov
pop
mov
pop
imul
daa
push
mov
add
mov
mul
inc
push
cs
jl
test
enter
sbb
retf
jne
movs
lods
aaa
or
sti
lds
stos
cmp
out
fwait
xor
xchg
clc
mul
mov
popa
cli
jne
hlt
test
out
sbb
ds
push
dec
pop
lahf
(bad)
or
lock
pop
loop
jl
push
mov
mov
sbb
not
in
cmp
push
dec
sub
sbb
pop
mov
dec
pop
clc
inc
cmps
xor
pop
adc
or
pop
mov
push
xor
dec
lock
fistp
add
xor
out
xor
adc
xchg
pop
jg
test
enter
fwait
sbb
das
jmp
xchg
sbb
cmp
enter
jmp
sahf
js
dec
push
inc
stos
scas
xor
or
pop
mov
mov
push
popa
mov
rol
pusha
xchg
fnstsw
bound
xchg
mov
scas
adc
push
daa
bound
fdiv
add
add
fstp
adc
js
in
pusha
cwde
nop
cdq
pop
fidivr
icebp
ret
daa
retf
add
pop
rcl
lahf
add
test
(bad)
not
adc
sbb
loop
ficomp
or
dec
sub
sbb
cmp
cmp
sub
sbb
jmp
out
sbb
sub
pop
push
rcl
ja
in
mov
rol
mov
dec
pusha
imul
mov
rcr
cdq
call
and
stos
xchg
and
push
out
popf
shl
or
js
and
mov
lods
mov
mov
(bad)
xchg
mov
cmps
push
mov
sbb
xor
sbb
mov
stos
cmp
test
xor
sbb
(bad)
inc
cmp
or
inc
cwde
stc
not
inc
adc
add
not
xchg
lds
jmp
pop
daa
mov
adc
and
or
ret
mov
call
and
fdivp
xor
movs
call
cs
dec
push
retf
fcomp
scas
or
fsub
mov
retf
fwait
(bad)
outs
and
xchg
jnp
arpl
sub
popf
in
xchg
retf
add
inc
adc
icebp
das
and
xchg
dec
ins
or
(bad)
ja
sbb
aam
inc
xchg
icebp
ins
mov
xchg
or
aam
add
mov
scas
push
ds
jo
test
inc
push
cmp
jmp
aam
sbb
popf
push
mov
jmp
fild
xor
repnz
ja
push
fistp
int3
rol
xchg
cwde
push
cmp
jne
or
lahf
sub
pop
(bad)
repz
repnz
mov
push
jl
sub
or
sbb
adc
xlat
mov
(bad)
repnz
sti
mov
or
push
scas
loopne
movs
ret
and
pop
xlat
out
add
mov
sbb
add
dec
sub
mov
nop
pop
cld
bound
loopne
adc
push
mov
inc
and
jge
arpl
cwde
daa
sub
mov
pusha
cmp
neg
rcl
stos
rcl
punpcklbw
data16
in
rcr
enter
addr16
inc
call
ins
dec
inc
fwait
xor
ss
scas
mov
aam
jmp
xchg
jne
cdq
pusha
xor
je
repz
imul
xchg
test
das
retf
jb
adc
mov
jl
sbb
(bad)
mov
mov
lods
inc
(bad)
mov
xchg
mov
outs
adc
sbb
jne
dec
push
(bad)
add
mov
std
xchg
js
addr16
mov
shl
pop
popa
call
add
iret
and
or
jne
inc
pop
sub
mov
jge
add
push
or
pop
stos
lock
fwait
lods
mov
stos
ret
ja
push
dec
rcl
xlat
xchg
sahf
fwait
mov
or
gs
or
inc
xchg
aas
sbb
mov
jp
xchg
or
(bad)
das
lods
dec
out
jecxz
dec
inc
add
xchg
inc
jmp
sub
icebp
mov
ds
mov
lods
add
mov
cmp
es
lahf
push
sub
mov
sti
push
xchg
inc
ret
lods
mov
rcr
inc
jmp
popa
or
enter
mov
imul
scas
stos
push
and
and
out
cwde
in
jmp
cmp
ja
popf
test
ins
call
sbb
out
minps
ins
scas
or
cmp
test
and
dec
sub
fcmovnu
sti
sbb
xchg
cmps
test
mov
adc
das
mul
lods
lock
cld
les
jg
jecxz
inc
jg
(bad)
mov
(bad)
jmp
push
(bad)
adc
(bad)
cmp
test
enter
mov
test
iret
fdivrp
repz
std
push
enter
and
xchg
inc
adc
movs
mov
inc
adc
dec
sub
popf
pop
jl
shr
not
shl
mov
inc
mov
xor
jmp
data16
cmps
sbb
mov
xor
jbe
outs
or
push
lahf
pop
sub
dec
retf
inc
cmp
fidivr
sbb
adc
in
out
mov
adc
mov
movs
xor
xchg
xor
mov
sub
or
sub
test
mov
add
mov
push
or
push
add
push
jmp
arpl
shr
scas
fs
sub
(bad)
fcmovnbe
inc
(bad)
lods
cmps
mov
mov
sub
mov
inc
inc
inc
std
popa
inc
mov
cmps
or
cld
cmp
add
and
jmp
daa
jae
(bad)
pop
jo
adc
ret
scas
xor
push
out
imul
and
daa
inc
aam
add
jae
stos
cmp
pop
test
and
xchg
pop
jmp
fidivr
push
jecxz
cmp
repnz
jp
add
xchg
sbb
mul
cmp
dec
pop
test
mov
add
inc
inc
mov
in
mov
adc
test
xor
add
mov
xlat
pusha
xor
add
stos
add
and
pop
cmc
ficom
dec
adc
add
test
stc
adc
aas
in
push
xchg
movs
mov
jge
mov
push
lock
cmp
jbe
adc
mov
adc
in
test
pop
xchg
or
cmp
sahf
mov
sub
scas
push
stc
jmp
inc
xchg
add
jbe
mov
ins
adc
fs
xchg
push
stc
loopne
dec
push
lods
sar
mov
call
(bad)
xor
bound
add
jp
cmps
bound
imul
pop
and
dec
in
push
add
call
enter
ins
push
pop
or
cwde
adc
adc
or
push
jge
imul
fisttp
mov
push
(bad)
lock
stos
dec
and
int
pop
ins
push
scas
pop
and
nop
mov
pop
jmp
sahf
call
je
scas
xor
xchg
in
ins
pushf
jne
ret
out
sahf
(bad)
(bad)
icebp
call
test
mov
cmp
loopne
dec
inc
adc
in
dec
test
cs
mov
push
cmc
jb
mov
fs
add
cmp
loop
loop
bound
rol
mov
cmp
push
rcl
scas
adc
clc
test
pop
fistp
call
test
mov
and
clc
fisubr
les
shl
fbld
ja
mov
push
clc
shr
mov
icebp
aas
jno
adc
push
aaa
retf
test
and
fs
dec
outs
xor
push
pop
in
addr16
rcr
lea
push
cmp
sbb
sbb
int
pause
pop
das
mov
push
popf
imul
in
movs
pusha
fsub
(bad)
sbb
(bad)
inc
clc
pop
jp
hlt
push
jmp
sahf
mov
js
lods
loope
ror
popf
scas
xchg
mov
mov
cmp
mov
lahf
scas
scas
sub
fmulp
fsub
dec
das
and
pop
xlat
add
es
enter
pop
push
sbb
repnz
outs
jno
aaa
fistp
das
mov
xchg
xor
out
jecxz
add
xor
in
lods
jmp
sub
shr
push
xchg
es
jno
movs
cmp
cmp
jne
(bad)
xchg
ja
loopne
or
je
push
jecxz
xor
xchg
inc
iret
shl
sti
mov
in
push
loope
imul
(bad)
(bad)
mov
jmp
jbe
mov
push
mov
jmp
jae
scas
fist
(bad)
jl
aaa
jle
mov
and
mov
push
in
ficomp
add
cmps
adc
inc
lods
aas
mov
aas
inc
test
enter
retf
stos
arpl
test
sahf
mov
cwde
sub
xchg
fist
push
mov
pop
cli
mov
or
mov
jno
cmp
retf
jmp
mov
out
push
sub
mov
out
jle
pop
pop
inc
loopne
or
out
cmp
jmp
sbb
mov
jmp
in
jno
mov
lds
sbb
push
mov
cmp
jnp
fbld
fcom
xchg
push
mov
cmp
shl
lds
xor
jg
sub
or
and
mov
out
xor
data16
retf
xchg
ret
push
mov
sub
push
cmps
mov
imul
push
inc
push
cmps
or
fisubr
das
shr
popf
das
xor
ret
pop
mov
cmp
add
(bad)
inc
movs
mov
mov
xchg
push
push
dec
push
addr16
xchg
stos
loopne
push
popf
repz
stos
cli
retf
cmps
add
ins
xor
pop
icebp
in
leave
fwait
inc
pop
add
dec
aam
ror
adc
ins
jmp
popf
stos
fidivr
lods
jmp
rcr
pop
loope
fldenv
inc
rol
adc
into
mov
jecxz
loopne
(bad)
std
mov
in
in
inc
jb
faddp
in
sbb
ss
out
(bad)
lahf
mov
aam
out
and
movs
adc
mov
adc
ret
out
jbe
out
out
ins
mov
cmp
or
dec
and
movs
dec
adc
mov
(bad)
sub
(bad)
or
dec
je
inc
ret
enter
xor
test
mov
cmc
in
push
es
push
stos
call
mov
inc
xchg
rol
popa
(bad)
and
aas
in
loope
mov
int
enter
icebp
mov
jecxz
xor
push
push
shr
popf
push
arpl
cmp
out
xchg
inc
ss
shl
mov
stos
jmp
or
into
cmp
push
loop
mov
jg
dec
enter
ret
pop
ss
add
rcl
stos
sbb
sub
mul
frstor
mov
inc
aam
inc
jmp
iret
test
xchg
imul
addr16
mov
cdq
test
sahf
stc
dec
shl
xchg
sbb
mov
in
ret
xchg
sbb
xchg
push
inc
mov
in
(bad)
js
leave
and
add
scas
push
mov
xor
inc
pop
adc
in
into
std
dec
push
push
pop
sbb
mov
test
arpl
out
arpl
adc
pusha
shr
cmp
sbb
retf
jmp
dec
push
xor
aaa
pop
and
fadd
dec
cmp
fadd
pop
fbld
cmp
mov
test
ds
sbb
mov
or
imul
pop
fwait
dec
lods
enter
clc
push
jbe
and
adc
and
mov
sar
ret
xchg
into
inc
mov
rcr
pop
add
data16
push
lods
lods
out
mov
mov
js
mov
dec
pop
pop
arpl
sub
retf
int
push
loop
adc
adc
mov
jb
test
test
mov
xor
mov
shl
ins
dec
and
push
add
cmp
(bad)
out
mov
sbb
aaa
mov
ins
aas
in
shl
stos
js
mov
mov
test
cmp
fnsave
jbe
jne
in
(bad)
dec
ds
ja
push
test
jmp
out
mov
aaa
imul
cmp
jmp
jge
(bad)
pusha
mov
adc
nop
jno
dec
cmps
mov
inc
sub
or
cmp
mov
arpl
das
retf
iret
dec
daa
in
pop
mov
mov
pop
call
into
daa
ins
jp
mov
iret
add
or
push
or
xchg
dec
test
cli
dec
enter
mov
test
jns
or
fld
push
add
xchg
pop
sub
cwde
jge
xor
test
mov
sub
es
jl
ret
adc
ret
jp
leave
lea
sbb
ins
ret
addr16
jnp
adc
jb
push
iret
sbb
ror
sbb
cmp
cs
sub
adc
and
jle
jg
cld
mov
push
das
push
mov
test
mov
movs
les
in
sti
ins
dec
out
dec
fdiv
jne
cwde
push
pop
cdq
imul
scas
push
addr16
sub
dec
and
sub
sti
mov
xchg
mov
sub
popa
loopne
jo
stc
sub
loope
aad
std
cmps
std
push
push
(bad)
bound
push
dec
loop
imul
inc
push
imul
sub
inc
inc
mov
retf
jecxz
cmp
cmp
and
add
push
or
addr16
dec
ds
inc
dec
jmp
icebp
inc
cdq
dec
int3
mov
push
bound
jae
cld
pop
pop
xor
mov
push
popf
adc
sub
shl
adc
xchg
cmp
xchg
sbb
in
test
push
sub
pop
mov
outs
ficom
pop
mov
xor
and
push
push
push
adc
inc
or
jne
gs
pop
aad
add
mov
cdq
ins
pop
daa
(bad)
lods
push
jae
and
jns
sbb
cmp
pusha
sbb
xchg
scas
lods
in
mov
push
test
jecxz
dec
scas
cli
loop
fs
ret
dec
sub
dec
fld
(bad)
aas
jle
push
mov
sti
xor
dec
mov
cmp
xchg
mov
add
dec
jb
lds
cmp
dec
add
sbb
jmp
pop
out
jns
outs
cmps
cmps
aas
jmp
dec
pop
popf
pop
aad
add
push
mov
pop
or
fistp
test
push
(bad)
sub
lock
mov
sub
shr
stos
pop
test
shl
retf
jne
mov
and
arpl
add
or
mov
dec
enter
ret
call
jmp
or
adc
stos
pop
jle
rcl
out
cmp
mov
cmp
xchg
(bad)
enter
jo
xor
adc
sbb
iret
push
and
jle
mov
std
push
outs
mov
bound
stos
or
cmp
inc
inc
mov
test
jp
or
cmps
int3
adc
sti
in
cmp
mov
test
and
jmp
js
mov
mov
std
ror
aaa
loop
mov
xchg
xchg
mov
jp
pop
and
(bad)
fistp
adc
aad
xor
xchg
lock
(bad)
ror
call
ret
sbb
dec
sbb
scas
sub
and
cli
push
push
leave
jl
sub
pop
push
mov
cmp
mov
xor
push
out
pop
jmp
test
xor
inc
xchg
push
xchg
jecxz
and
dec
cmps
and
fs
cmp
inc
mov
cld
xchg
xchg
and
sbb
push
sbb
ret
ins
repnz
mov
jnp
sub
repnz
sbb
mov
rcl
ficomp
xor
and
jmp
idiv
xor
std
sub
scas
pop
out
(bad)
out
mov
shl
stos
jmp
adc
out
fbstp
sbb
out
push
add
mov
clc
out
xchg
inc
cmc
adc
imul
aam
in
gs
sbb
adc
inc
je
cdq
(bad)
lock
cdq
addr16
pop
cmps
mov
sar
shl
mov
sub
inc
cwde
adc
sub
out
push
daa
scas
stos
add
fdiv
adc
and
dec
in
mov
xor
aaa
(bad)
aad
pop
stc
push
bound
xchg
mov
xor
mov
fld
adc
cmp
and
push
jl
jae
rcl
jnp
mov
push
and
in
iret
mov
sub
rol
pop
jg
push
(bad)
mov
push
cmp
and
pop
icebp
push
repz
sbb
sbb
and
scas
add
out
(bad)
ins
pop
add
loope
lock
icebp
lahf
arpl
push
sub
clc
and
sahf
push
push
jae
cli
test
mov
fild
retf
ins
mov
das
dec
sahf
aaa
movs
movs
stos
bound
(bad)
fisttp
push
xor
mov
stc
jae
idiv
sbb
ret
pop
jg
cld
lea
cmp
mov
adc
dec
in
inc
cwde
outs
xchg
cmp
inc
daa
stc
sti
inc
xchg
jmp
push
fcom
fs
or
retf
cmp
mov
stos
cmps
and
pop
adc
(bad)
loop
inc
push
mov
jmp
xchg
fimul
sbb
mov
cs
cld
push
xchg
ret
fimul
call
xchg
retf
in
xchg
xor
mov
push
mov
sub
push
sahf
sub
dec
test
bound
push
and
cmp
mov
jo
dec
out
cmps
test
dec
jmp
int
int
scas
push
aam
xor
cmps
or
fwait
push
or
mov
cdq
mov
bound
(bad)
dec
pop
push
pop
xchg
mov
aad
fld
inc
mov
dec
adc
jp
dec
push
mov
inc
cmps
jns
xchg
push
fbstp
sbb
and
repz
aaa
jl
mov
cs
(bad)
mov
mov
outs
xchg
cmp
fistp
jle
jmp
or
mov
shl
pop
push
loop
add
repz
jp
mov
dec
loop
dec
aaa
push
push
js
int3
sub
out
rcl
pop
adc
mov
in
sub
(bad)
mov
nop
dec
jle
mov
icebp
adc
fadd
add
or
popf
iret
call
add
push
pop
call
and
dec
inc
clc
add
lods
ret
into
xchg
jge
add
xchg
push
ficomp
jmp
and
scas
ret
enter
jg
loope
xchg
pop
stos
jmp
jge
dec
retf
jbe
sub
sub
aaa
or
or
inc
push
jo
ret
dec
(bad)
icebp
xchg
sbb
and
cmp
gs
sahf
test
jb
mov
cmp
arpl
cmps
adc
pop
jno
out
shl
ins
int
sub
fdivr
ret
mov
mov
inc
stos
(bad)
mov
test
movs
dec
(bad)
in
cld
or
push
jl
mov
sar
or
imul
xchg
push
int3
ja
jae
aad
iret
jmp
adc
or
call
div
int3
mov
stos
mov
(bad)
movs
je
daa
xchg
pop
mov
ja
or
fcmovu
test
pop
sub
popf
pop
xchg
pop
aaa
push
mov
inc
sti
xchg
sbb
fwait
inc
pop
enter
int3
mov
fcomp
push
mov
jae
ins
(bad)
retf
jp
sub
xor
adc
cmp
iret
cmc
popa
or
aaa
cmp
or
(bad)
pop
inc
mov
stos
enter
jecxz
mov
inc
in
movs
aaa
push
retf
xchg
mov
jnp
movs
jle
dec
pop
xor
adc
cmp
ror
repnz
movs
std
mov
(bad)
adc
ins
add
xchg
std
test
fistp
or
add
sub
cmp
add
mov
inc
push
sbb
xchg
repnz
cwde
fcom
push
inc
adc
int
lods
add
adc
sti
or
or
adc
(bad)
fisubr
sbb
enter
cmp
and
jnp
mov
mov
or
cmp
movs
inc
sahf
mov
lods
fld
imul
sbb
sbb
xor
inc
aas
mov
pusha
pushf
or
push
lock
sbb
mov
cdq
into
repz
mov
in
adc
jge
fisubr
cld
sbb
xchg
adc
xor
dec
add
repnz
and
pushf
adc
cwde
imul
fiadd
sar
mov
les
lods
(bad)
adc
push
addr16
pusha
in
lock
or
inc
xor
out
dec
fidivr
cwde
aad
jo
pop
rcl
(bad)
es
cmps
mov
jnp
mov
mov
push
mov
jo
sub
and
popa
mov
into
aam
xchg
inc
sbb
inc
call
mov
sbb
popa
sub
and
inc
int3
int3
push
push
push
stos
ficom
pop
fisubr
or
retf
mov
jne
mov
xchg
sub
test
fldcw
adc
lahf
dec
les
fsub
bound
(bad)
loope
mov
call
in
fistp
and
(bad)
push
inc
je
ins
push
xor
stc
sbb
mov
xor
jae
stos
jge
and
adc
cmp
jae
mov
call
and
aas
jmp
or
in
mov
xchg
nop
sub
mov
and
les
xchg
jle
out
shl
test
and
jmp
mov
mov
aam
mov
(bad)
rcr
movs
pop
outs
dec
test
sbb
or
ror
addr16
jmp
xchg
adc
mov
mov
movs
(bad)
jnp
or
or
push
and
sbb
inc
mov
cmp
stos
(bad)
pushf
js
push
push
inc
add
les
inc
icebp
inc
inc
or
push
add
xchg
sbb
push
loop
adc
je
pop
cld
sub
bound
sub
dec
cmp
ret
sti
jp
ss
xchg
cdq
mov
push
push
sti
fstp
or
inc
lock
in
test
pop
or
in
fnstenv
add
ins
outs
aas
neg
pop
psrad
(bad)
cmp
lods
and
gs
push
sub
call
xchg
or
stc
mov
add
adc
ds
enter
fist
add
popf
jne
jmp
retf
jecxz
cld
lea
xor
jbe
ret
add
xchg
mov
lods
ficomp
mov
mov
popa
jl
loope
pop
push
fincstp
retf
mov
pop
xor
cmps
sbb
mov
imul
hlt
sbb
out
add
fidivr
push
and
and
xchg
test
pop
pop
jmp
out
xor
jae
aaa
push
fdivr
xchg
rol
push
mov
mov
cdq
xor
into
mov
xor
loope
mov
sbb
scas
outs
and
test
sahf
and
icebp
stos
int
mov
mov
enter
in
jecxz
mov
int
stos
adc
jbe
mov
mov
xchg
(bad)
mov
sub
push
inc
pop
mov
leave
lock
xor
or
sub
cmp
es
and
in
or
lods
mov
stc
outs
jno
lahf
cmps
xor
aam
push
dec
ds
xchg
add
call
cld
enter
pop
js
scas
shl
mov
push
push
ss
das
sub
icebp
(bad)
fwait
(bad)
mov
pop
arpl
lods
enter
dec
lods
adc
ret
inc
jne
or
movs
ja
(bad)
jmp
int3
jae
cli
repz
in
mov
pop
push
(bad)
addr16
repnz
pop
xor
xor
jns
cmps
jmp
mov
inc
cmp
pop
sub
aad
nop
jle
jmp
and
sbb
push
les
push
pop
(bad)
stc
mov
pop
lahf
pop
mov
and
sbb
mov
loope
jg
leave
mov
and
daa
or
lods
sahf
and
adc
aad
aas
aas
add
(bad)
sub
bound
aad
addr16
lods
movs
fdiv
dec
iret
shl
jbe
add
mov
sbb
push
imul
aam
adc
scas
movs
inc
icebp
pop
sbb
int3
xchg
popa
mov
out
adc
ja
int
daa
ss
inc
pop
lods
or
call
shl
inc
ror
or
stos
pop
sbb
pop
pop
popf
nop
adc
xchg
jb
mov
and
lds
in
push
pop
rcl
std
fs
mov
xor
push
aad
pop
int
sahf
sub
jmp
jg
jge
and
push
dec
add
outs
and
(bad)
mov
xor
ss
jmp
sub
in
xor
clc
mov
sub
sub
fst
sbb
cdq
in
jno
call
out
(bad)
imul
cmp
inc
mov
sbb
out
xchg
and
pop
dec
out
fstp
movs
jo
sub
fwait
xor
sub
sub
(bad)
clc
jle
or
popa
lea
test
pusha
inc
push
or
inc
lahf
push
in
adc
adc
push
xchg
inc
adc
pop
adc
ror
les
mov
movs
jbe
cwde
ja
stos
jmp
popa
push
mov
push
loopne
inc
add
shl
dec
(bad)
pop
mov
fild
jns
addr16
shl
fcom
ins
and
ss
data16
mov
std
popf
and
pop
push
push
(bad)
lock
and
mov
inc
loop
add
jg
int
mov
inc
cmpxchg
pop
and
xor
add
inc
adc
cmc
mov
mov
adc
jb
shl
and
jne
imul
sar
std
ins
retf
dec
xchg
mov
outs
mov
gs
push
cmp
movs
mov
int3
hlt
loope
sahf
enter
jle
and
movzx
and
loope
test
cs
jb
mov
mov
cmp
(bad)
mov
fisub
sub
mov
add
mov
jne
mov
idiv
in
sbb
inc
hlt
test
push
push
and
jbe
out
nop
movs
cli
retf
add
cmp
call
mov
jo
outs
pop
or
sub
or
push
das
sub
fs
or
cmp
lahf
sbb
push
push
and
bound
and
jnp
cld
repz
fwait
inc
(bad)
jg
leave
jb
push
dec
inc
out
into
aam
mov
cwde
and
sahf
push
add
mov
out
test
sub
into
jl
cmovnp
cmp
sbb
test
clc
mov
cmp
loop
jnp
hlt
pop
into
inc
inc
scas
xchg
(bad)
xchg
aam
cmp
pop
add
mov
jae
mov
cmp
cld
test
test
shl
mov
sahf
(bad)
jbe
adc
in
aaa
mov
and
sub
sub
sub
dec
push
mov
pop
cmp
(bad)
mov
sub
movs
loop
push
pop
popf
adc
xchg
je
out
(bad)
movs
mov
fbstp
call
outs
popf
or
jg
aam
xchg
pop
in
sub
jbe
xchg
jnp
ins
and
scas
mov
fsubr
inc
(bad)
mov
imul
out
adc
jb
stos
in
inc
les
adc
push
fmul
push
out
adc
push
dec
daa
repnz
ds
ja
(bad)
mov
imul
inc
call
jnp
jnp
(bad)
stc
xchg
push
(bad)
addr16
adc
jmp
in
and
fidivr
mov
movs
(bad)
into
fcomp
(bad)
cmp
push
push
call
xor
mov
mov
dec
inc
mov
out
call
xchg
jecxz
jge
das
mov
sbb
inc
clc
repz
lock
adc
fwait
mov
ss
add
in
sbb
push
lock
cmp
aad
ja
daa
lock
dec
adc
dec
sbb
test
stc
leave
cmp
or
movs
push
inc
inc
dec
pop
xchg
xchg
push
js
jmp
je
in
inc
iret
jp
mov
pop
mov
push
in
sar
inc
mov
lods
jnp
and
mov
push
cld
out
mov
clc
call
mov
inc
jle
mov
jns
sub
scas
fst
shr
fcmovnu
int3
mov
lea
cwde
push
sbb
jge
(bad)
cmp
xor
fucomip
mov
mov
(bad)
sbb
test
add
push
mov
jl
add
mov
inc
movs
sub
push
test
sahf
dec
(bad)
sub
add
inc
(bad)
sbb
inc
adc
inc
rcl
arpl
call
push
outs
and
or
in
pop
adc
mov
scas
xchg
or
cmps
sbb
in
mov
call
add
mov
xor
sub
xchg
lahf
push
push
add
lods
mov
cmp
mov
sub
test
sbb
(bad)
mov
fimul
jne
out
dec
mul
hlt
mov
add
dec
sbb
cmp
push
stos
and
push
jge
out
sub
push
jb
inc
inc
inc
pop
jg
popa
sbb
jle
mov
add
dec
test
fucomip
sub
in
(bad)
add
xor
xor
lods
pop
scas
mov
icebp
adc
outs
mov
mov
jmp
add
jl
sub
mov
or
mov
mov
mov
lea
adc
mov
mov
sub
xchg
iret
fmul
addr16
dec
lods
ror
arpl
dec
xor
push
add
fisub
shr
pusha
jge
mov
or
out
aas
(bad)
scas
mov
inc
fcom
scas
mov
js
inc
adc
cs
imul
pop
sub
in
idiv
div
adc
jno
inc
pop
sbb
pop
repz
jb
sbb
add
popf
xchg
xlat
inc
loopne
mov
je
aaa
or
mov
xor
push
ss
fucomip
push
je
xchg
xchg
add
test
xchg
xchg
mov
retf
xchg
push
sub
mov
icebp
ins
dec
pusha
aam
ret
js
add
pop
cdq
and
pop
mov
push
sbb
ins
out
xor
repnz
xchg
xor
mov
lea
mov
xchg
aaa
push
add
sbb
push
clc
jle
ja
rcr
inc
in
mov
imul
cmp
or
loopne
je
pop
push
leave
cmc
mov
mov
lock
adc
shr
sub
xor
xlat
adc
jnp
retf
push
repnz
loope
aaa
xchg
int
push
fsubr
push
push
rol
out
cmps
call
cmp
adc
popa
jmp
add
xor
mov
mov
and
push
ret
cs
jne
(bad)
stc
not
sbb
ins
pop
sbb
or
jbe
mov
xchg
into
mov
ja
pop
shl
retf
push
into
add
mov
ss
cmp
leave
imul
push
jle
dec
idiv
dec
test
push
shl
lahf
mov
hlt
mov
dec
fbstp
aaa
ficom
into
xor
shl
out
adc
in
call
fs
ins
adc
xchg
scas
cmp
pop
ins
jne
fadd
xlat
shl
or
scas
jg
cmp
call
mov
mov
mov
jl
test
daa
xchg
sahf
ja
cmc
jg
xor
mov
mov
mov
ins
push
push
out
or
push
(bad)
cdq
cmps
fistp
sub
leave
jmp
mov
dec
inc
jo
pop
iret
mov
(bad)
hlt
xchg
push
xchg
scas
lods
add
cmp
lock
cmc
aaa
out
nop
int3
pop
(bad)
add
ss
or
mov
sbb
push
xchg
jns
ret
mov
pop
push
jl
add
mov
scas
and
and
mov
and
aam
push
in
lock
int3
xchg
mov
std
push
sbb
jno
pop
arpl
and
xchg
sbb
sbb
or
das
out
(bad)
aad
into
cmp
mov
inc
inc
neg
cmp
in
pusha
imul
dec
cmp
(bad)
cmp
push
repnz
rol
sti
pop
lahf
into
and
daa
shl
mov
and
jmp
stos
ret
in
ins
and
mov
jns
and
cmps
ss
repz
inc
xor
or
add
pop
dec
leave
faddp
xchg
cld
mov
pop
and
leave
push
popf
mov
sbb
add
add
add
add
div
bound
test
ds
jg
adc
lds
std
neg
dec
pop
and
mov
in
mov
sub
ss
or
out
xchg
or
bound
sbb
mov
mov
push
xchg
xchg
dec
test
js
pusha
dec
test
jo
in
call
xlat
dec
shl
idiv
icebp
test
inc
fwait
push
mov
hlt
rcr
in
push
hlt
js
fwait
call
das
cld
cmp
xchg
aam
sub
and
idiv
ss
mov
or
sub
mov
int
xchg
xchg
daa
xchg
jno
cmp
mov
inc
or
push
inc
jb
mov
push
mov
test
dec
cmp
ds
inc
mov
pop
loop
daa
mov
das
push
inc
or
nop
sbb
sub
out
add
push
adc
in
sub
movs
and
mov
repnz
dec
les
add
adc
mov
in
jmp
dec
ret
shr
pop
arpl
adc
pushf
push
inc
adc
mov
and
mov
fwait
mov
or
inc
sub
mov
and
dec
stos
movs
pop
adc
ficom
or
iret
js
cdq
sub
test
mov
xchg
adc
ret
fs
pop
je
or
retf
aad
hlt
call
pop
repnz
adc
push
call
jbe
xchg
mov
mov
ror
cld
stc
test
(bad)
sub
jmp
into
pop
sub
retf
fst
push
jae
out
sub
mov
sahf
pop
push
daa
popa
jnp
jmp
jmp
adc
mov
xchg
in
or
leave
inc
cmps
adc
clc
sub
sbb
test
es
addr16
js
icebp
pushf
push
inc
xchg
jecxz
call
xor
aad
push
pop
add
(bad)
bound
mov
xor
push
inc
dec
fstp
sbb
sub
jl
inc
ins
add
jno
push
xor
dec
xor
bswap
cmp
push
popa
push
jns
out
mov
mov
rol
dec
jnp
cmps
jb
or
stos
xchg
jg
cmp
hlt
gs
mov
sub
in
scas
repnz
(bad)
fimul
xchg
push
push
stc
(bad)
cmp
(bad)
fisttp
popa
ret
daa
or
ret
fcomi
inc
sub
test
mov
and
dec
shl
inc
jmp
ror
js
or
mov
jb
outs
out
cdq
cld
or
mov
fwait
inc
shl
(bad)
add
test
cmps
or
clc
arpl
pop
retf
sub
ins
(bad)
jmp
xchg
sub
xchg
jp
enter
and
mov
pusha
call
cmps
ret
stos
ret
sub
pushf
mov
pop
mov
mov
(bad)
fld
cmp
inc
and
inc
sbb
mov
sub
inc
dec
movs
out
aas
(bad)
xor
push
push
pop
xor
lea
scas
out
mov
cmps
inc
sahf
mov
cmps
mov
cmc
sub
or
fwait
in
pop
movs
xchg
movs
mov
jae
scas
sbb
shl
sbb
outs
std
ror
xor
mov
and
movs
mov
mov
cld
lods
mov
fist
repz
adc
sbb
aaa
xor
jb
pop
push
fs
fwait
scas
xchg
add
mov
fmul
(bad)
sahf
aas
jns
jns
push
sbb
jmp
enter
mov
push
test
cmp
sub
rcl
jl
adc
int3
cld
movs
or
mov
inc
lea
cmp
mov
push
test
fld
or
cwde
pop
jno
jl
adc
push
fnstcw
lods
add
adc
add
lahf
(bad)
arpl
adc
lods
imul
add
fild
xlat
sbb
pop
xchg
arpl
loopne
test
cmp
sbb
sub
dec
sub
ret
sub
dec
xchg
fwait
call
(bad)
dec
jge
jg
xor
repnz
xor
or
aaa
cmps
mov
scas
(bad)
pushf
push
cmp
mov
es
ret
movs
sbb
jbe
sbb
aaa
out
ins
or
movs
stos
(bad)
adc
inc
mov
xor
vmwrite
push
popf
mov
arpl
fidiv
cld
pop
pusha
test
xchg
(bad)
dec
loope
icebp
bound
pusha
lock
je
leave
push
push
fistp
dec
scas
inc
push
dec
inc
hlt
push
mov
js
and
out
fdivr
push
mov
frstor
jae
movs
in
test
pusha
sub
cmp
addr16
adc
outs
pop
je
and
clc
lock
movs
mov
movs
in
xor
mov
pop
mov
push
test
dec
add
cmps
ret
pop
pop
lahf
ret
or
xchg
jnp
fisttp
sub
ss
adc
aaa
cmp
sub
cmp
cmp
xchg
jl
xchg
add
in
mov
test
mov
xchg
je
adc
xchg
sahf
lea
mov
add
daa
mov
cmp
mov
sbb
add
add
test
cmps
cmp
retf
js
add
repz
lods
or
adc
scas
rcr
cmp
mul
dec
inc
fadd
jno
lods
dec
(bad)
xor
and
jg
je
bound
mov
xchg
jno
pop
dec
test
push
daa
adc
(bad)
ja
jnp
or
jl
jno
fcomi
clc
mov
push
stos
xor
call
mov
pop
cmp
nop
loope
in
dec
mov
in
cli
push
add
shl
sar
push
sub
in
rcl
jne
movs
and
mov
fistp
enter
test
call
sub
fst
in
adc
loope
sahf
outs
inc
adc
pop
imul
sub
mov
addr16
fs
jmp
mov
enter
lds
sbb
test
sahf
sbb
sbb
fs
xchg
test
push
cmovb
in
(bad)
mov
test
xchg
mov
sti
scas
rcl
dec
push
jecxz
out
push
or
jnp
jno
jnp
pop
fldenv
test
dec
clc
mov
xor
nop
(bad)
nop
imul
mov
clc
ror
sti
mov
xor
out
mov
test
fimul
add
inc
pop
cmps
pop
add
fcomp
push
arpl
sahf
pop
adc
xchg
(bad)
aas
push
call
test
jns
outs
pop
adc
sbb
push
repnz
jmp
ds
add
rol
test
sbb
out
lods
lock
(bad)
and
inc
popf
cmp
cwde
or
mov
shl
xor
je
jb
into
xchg
gs
aam
das
lahf
imul
out
das
adc
cdq
fisub
or
cld
sub
mov
pop
out
xor
jmp
mov
test
xor
fisubr
fcmovu
sub
fisttp
aad
outs
pop
push
mov
mov
pop
scas
rcl
fucom
cmps
pop
lock
dec
(bad)
stos
pop
sub
shl
or
xor
shr
(bad)
xor
ror
sub
(bad)
xchg
push
xor
(bad)
into
pop
into
xchg
sub
sub
dec
jge
inc
sub
mov
mov
pop
test
inc
xchg
inc
je
out
(bad)
stc
cmc
test
mov
fdiv
push
je
cli
inc
hlt
pop
frstor
fwait
ror
jmp
sti
ins
hlt
test
or
movs
pop
ds
jp
hlt
xchg
sbb
jne
lock
(bad)
cmp
mov
enter
jl
xor
push
mov
cmc
or
sbb
(bad)
pop
outs
ficom
push
mov
rcl
mov
xchg
mov
jmp
adc
ret
(bad)
std
dec
adc
or
ja
mov
retf
cmp
stc
xchg
ret
pop
or
in
mov
cmp
adc
ret
or
push
xor
or
cmp
and
fs
pop
push
push
sbb
inc
dec
mov
sub
push
jmp
call
je
in
or
pop
(bad)
ror
jle
inc
and
fisttp
inc
and
cmps
mov
adc
mov
mov
daa
dec
lods
jecxz
sub
sub
movs
mov
loop
fnstenv
int
pop
es
inc
xor
mov
clc
js
addr16
mov
ds
ins
mov
cdq
mov
push
sar
adc
and
add
xchg
mov
xor
sbb
test
daa
shl
inc
cmp
push
mov
js
daa
int3
jb
ja
sub
mov
or
push
cmp
xor
sub
mov
das
jle
(bad)
push
repnz
xchg
add
or
jp
push
nop
sahf
cmp
xchg
mov
sbb
adc
popa
shl
push
mov
jnp
(bad)
mov
arpl
or
ficom
popa
cwde
test
gs
push
ins
add
jmp
inc
xor
cli
call
mov
icebp
sub
aad
cmp
mov
sbb
icebp
xlat
in
inc
push
adc
and
test
inc
cld
das
sar
sbb
out
ins
jae
nop
stc
adc
into
aam
xchg
mov
xchg
jl
or
scas
jbe
(bad)
shl
inc
inc
pop
jle
sysexit
stos
in
and
xor
jecxz
mov
test
out
mov
xchg
dec
repnz
pop
jmp
jo
scas
jle
and
fistp
sbb
js
shr
out
push
sbb
test
dec
test
mov
pop
sbb
loopne
test
adc
loopne
movs
mov
jo
inc
mov
dec
jae
cmps
mov
aaa
jecxz
jmp
sub
int
sbb
(bad)
pop
inc
stc
cmp
push
mov
xor
out
xchg
add
in
mov
mov
cmp
rol
cli
popa
mov
push
out
jnp
mov
mov
pop
bound
mov
mov
mov
sub
push
mov
fs
adc
call
mov
call
inc
jg
sub
xor
imul
jle
test
cs
xchg
xchg
mov
pop
stos
loopne
int
and
dec
dec
retf
cld
adc
jg
ins
mov
xlat
or
mov
mov
sub
arpl
add
shl
pop
cs
pop
xchg
sbb
lahf
pop
push
sbb
mov
es
cmp
xor
mov
adc
bound
loope
mov
push
sub
fs
pop
pop
iret
ret
ja
inc
xchg
mov
test
or
cmp
retf
cdq
jae
mov
sbb
xor
lea
sti
sub
fld
jmp
mov
outs
xor
sar
xor
push
aad
mov
movs
pop
lahf
mov
jecxz
ds
push
out
daa
mov
xchg
jge
jp
(bad)
pop
jne
push
sti
jl
adc
ret
add
gs
jmp
iret
cmps
imul
fst
js
movs
inc
jl
inc
dec
ins
cdq
push
mov
int3
sub
lahf
test
and
std
mul
rcr
popf
mov
jo
xchg
aas
jecxz
pop
dec
sahf
retf
movs
fisub
cmp
jecxz
jge
daa
jae
pushf
sti
inc
jns
or
int
fdivr
and
movs
jb
pop
cld
cmp
cmp
out
iret
cmp
or
pop
repnz
jecxz
sub
jnp
arpl
aad
xchg
leave
dec
call
cmp
loopne
xchg
jle
add
bsr
pop
in
es
fsubr
or
retf
jle
(bad)
mov
call
xchg
stos
cmp
cmc
cld
mov
out
daa
pop
mov
and
es
fisttp
xor
mov
int
adc
jnp
ja
or
cmps
mov
mov
mov
xor
cmps
test
enter
jae
push
mov
cwde
iret
std
mov
push
dec
fmul
cmp
mov
ins
sbb
push
sbb
enter
push
pop
fwait
mov
mov
and
or
mov
jno
aaa
into
xchg
retf
out
xor
(bad)
pusha
out
test
js
lds
add
cmp
push
mov
add
fwait
cmp
push
mov
cdq
stos
inc
mov
mov
arpl
inc
mov
scas
inc
dec
adc
sub
mov
mov
test
ins
xor
jbe
fld
dec
pop
add
cmps
movs
mov
mov
pop
dec
mov
mov
mov
aad
repz
loope
xlat
das
in
pop
add
cmp
addr16
inc
xor
push
test
iret
or
mov
jno
jl
daa
aas
mov
xchg
retf
in
clc
cmps
jns
add
sbb
xor
nop
cwde
and
add
cmp
outs
aam
sbb
outs
cmp
enter
scas
(bad)
(bad)
push
sahf
retf
outs
add
imul
sbb
dec
jge
addr16
jg
or
ss
adc
loopne
pop
retf
inc
pushf
dec
add
pop
(bad)
rcr
cmp
jno
(bad)
dec
aas
push
je
xchg
or
and
xor
push
movs
out
out
popf
cmp
and
arpl
jo
mov
js
lock
jae
mov
test
pushf
inc
in
fisttp
sbb
test
jle
mov
add
sub
add
std
jmp
in
pop
pop
ins
call
(bad)
fild
cwde
repnz
or
mov
adc
push
mov
mov
inc
jbe
jge
lds
aad
or
out
mov
push
adc
inc
sub
sub
test
xchg
loopne
mov
movs
dec
data16
cmps
gs
inc
jmp
add
repnz
movzx
mov
arpl
adc
cmp
push
mov
mov
add
aas
dec
add
pusha
adc
add
loopne
mov
imul
inc
push
pop
or
cmc
xchg
test
and
pop
(bad)
and
push
fwait
inc
hlt
cmps
movs
cmps
stos
and
inc
loop
xchg
adc
(bad)
jo
cli
fstp
pushf
inc
(bad)
adc
mov
mov
add
int
es
dec
inc
mov
push
retf
nop
(bad)
jb
push
repnz
jbe
scas
and
gs
test
mov
push
hlt
inc
adc
fxtract
(bad)
jmp
repz
imul
xlat
jno
dec
(bad)
out
out
popa
jb
in
popa
mov
mov
mov
mov
les
push
pop
jb
shr
push
sbb
imul
jbe
(bad)
lahf
xor
out
ret
fcmovnbe
xor
loopne
fiadd
mov
add
pop
xor
xchg
mov
std
(bad)
(bad)
fadd
pop
in
lds
call
(bad)
out
or
pushf
jl
sahf
mov
sahf
out
or
sbb
or
es
push
sar
add
jg
dec
popf
arpl
dec
imul
xchg
stos
ins
and
cmp
jne
xchg
cmp
dec
std
sbb
ins
fcmovu
hlt
push
xor
sub
mov
das
cli
add
xor
bound
fdiv
sbb
rcr
mov
(bad)
in
imul
mov
out
fstp
ins
jne
jo
daa
pop
jbe
and
pop
mov
out
test
dec
jb
sbb
(bad)
add
cmp
and
int
mov
les
sti
hlt
sub
test
add
retf
es
test
(bad)
push
test
cs
dec
push
movs
cmps
ja
dec
les
xchg
cmp
sbb
pop
mov
dec
dec
xor
int3
mov
inc
(bad)
out
mov
hlt
clc
sub
and
in
lds
rol
sbb
inc
dec
(bad)
fucomi
cs
mov
xchg
sub
mov
ins
xor
jmp
push
sub
and
sub
mov
pop
ficom
mov
leave
(bad)
pop
mov
cmp
mov
les
scas
outs
lods
call
push
fcom
mov
or
dec
sahf
scas
and
hlt
dec
mov
inc
jne
jmp
dec
and
iret
add
cmp
pop
call
popa
pop
xor
in
sbb
pop
xor
mov
jp
dec
sub
and
(bad)
mov
cmp
xchg
sbb
jae
dec
adc
sub
ja
(bad)
jb
aam
jmp
xchg
lods
mov
sahf
les
sbb
mov
repz
mov
sbb
dec
stos
pop
inc
lods
fst
mov
popa
mov
sub
retf
pusha
cmp
outs
jg
dec
or
push
rcl
scas
ret
pusha
dec
pop
push
in
push
sbb
test
sbb
add
mov
and
jp
jo
aaa
dec
in
xor
mov
push
cmp
cli
cdq
cs
popf
jp
in
cdq
loop
pusha
stc
(bad)
aas
mov
iret
add
adc
(bad)
fistp
arpl
jge
cmp
popa
inc
ins
pop
push
mov
fld
ja
push
rcr
and
sub
ds
push
imul
std
push
sub
mov
inc
mov
out
fsub
pop
or
or
sub
repnz
ins
inc
sahf
out
repnz
in
mov
pop
sub
mov
mov
lahf
icebp
(bad)
sub
dec
lahf
outs
mov
mov
aad
jae
out
dec
adc
outs
imul
frstor
idiv
cli
xor
adc
int
nop
mov
in
pop
mov
sub
and
xor
pop
lods
pop
pop
cs
(bad)
and
ret
ret
pop
jecxz
jne
push
clc
test
test
push
mov
adc
lea
dec
retf
fild
push
jl
pop
scas
jecxz
push
in
fldenv
movs
push
jo
or
adc
lods
push
and
mov
add
jge
cmp
pop
push
xlat
xor
mov
cs
cs
push
cmp
test
adc
mov
ret
mov
not
mov
cmp
retf
xchg
movs
pop
mov
push
out
ins
dec
sub
or
fild
ins
fiadd
mov
pop
sbb
sub
push
mov
inc
ret
or
rcr
jmp
xchg
adc
scas
push
aas
clc
dec
inc
and
mov
add
mov
les
sbb
repnz
adc
fs
mov
cmp
repnz
mov
and
test
cmp
repnz
fdivr
xchg
(bad)
sub
add
aam
pop
gs
movs
sbb
mul
(bad)
ror
sahf
and
sub
adc
xchg
dec
lds
es
sti
idiv
pop
clc
in
scas
mov
dec
lock
add
outs
test
pop
cmp
push
xchg
scas
(bad)
outs
fs
push
jge
jp
mov
cmp
mov
cmp
rcl
cmp
inc
sub
ja
mov
ins
sbb
fiadd
and
add
ins
mov
out
loopne
mov
test
rep
(bad)
(bad)
mov
jbe
mov
in
scas
mov
in
mov
xlat
je
mov
dec
mov
in
mov
arpl
leave
xchg
cmp
or
cld
bnd
retf
sti
cmc
data16
jbe
push
push
mov
pop
mov
fisttp
stos
dec
pusha
dec
cmp
push
inc
iret
sub
lds
stos
and
les
fistp
mov
mov
mov
jp
popf
or
sbb
inc
xor
mov
sub
mov
sub
bound
or
or
nop
fnstcw
push
jge
push
js
mov
push
outs
push
movs
jb
rcl
pop
and
inc
sub
add
popf
fdivp
scas
or
fld
fmul
(bad)
pusha
(bad)
retf
call
xor
scas
lahf
int3
pusha
push
sub
popa
sar
pusha
sub
ret
das
push
stos
cmps
adc
sub
(bad)
xlat
xchg
mov
gs
(bad)
loope
jge
fdiv
mov
mov
daa
fwait
hlt
adc
lods
ins
cmp
xor
mov
dec
sbb
int3
pop
(bad)
mov
rcl
icebp
cmovae
mov
add
mov
int
jmp
in
pop
cmps
and
dec
push
rol
fcmovbe
xor
dec
in
xor
adc
xor
cmp
ret
mov
outs
shr
or
arpl
adc
pusha
xchg
(bad)
dec
xchg
adc
sub
out
jne
mov
(bad)
(bad)
fisttp
mov
xchg
sbb
pop
fnsave
xchg
jns
retf
sar
or
stc
lds
mov
out
sbb
ins
dec
jnp
int3
ja
int3
inc
jle
lods
push
fist
sbb
lahf
pop
dec
sub
mov
repnz
add
retf
pop
jae
repnz
push
fs
and
or
push
dec
out
imul
out
sbb
adc
sar
(bad)
es
int3
pop
xchg
adc
dec
loopne
push
jecxz
xor
dec
movs
ins
das
sbb
xor
xchg
dec
das
add
push
jecxz
mov
fild
push
(bad)
and
push
xchg
or
(bad)
icebp
and
lods
jge
neg
in
pop
cmps
scas
jmp
inc
int
adc
enter
xor
or
push
dec
fucomip
cmc
mov
jno
rcl
and
and
xchg
xchg
push
stos
jns
int
mov
cmp
add
and
xchg
test
fwait
loope
fistp
je
movs
mov
or
pop
call
or
xchg
adc
or
mov
xor
adc
jl
cli
push
inc
inc
js
les
inc
mov
ins
fucomi
call
mov
xchg
cmc
and
sbb
push
call
and
xbegin
mov
jmp
mov
push
in
and
mov
(bad)
aad
xor
mov
outs
in
or
repnz
cmp
jb
clc
pop
add
xor
mov
repnz
in
in
movs
imul
sbb
ins
pop
xchg
sbb
or
sbb
ret
or
cli
ficom
js
mov
pop
xlat
(bad)
push
push
push
xor
adc
dec
test
cmp
icebp
iret
inc
stc
ds
sub
test
add
inc
inc
and
add
pop
jbe
pop
loopne
sub
out
mov
into
dec
push
jmp
cmps
xchg
sar
mov
jl
mov
sub
dec
fisub
inc
cmp
pop
mov
push
fwait
stc
lods
adc
retf
dec
fst
pop
daa
popa
jnp
sbb
in
inc
mov
mov
mov
out
pop
mov
cmp
sub
les
xchg
push
mov
ret
enter
lods
xchg
xor
nop
scas
lea
mov
dec
push
aam
xchg
pop
lahf
fcomp
(bad)
paddw
sbb
lahf
dec
xchg
jmp
ret
in
fld
ficom
mov
adc
jnp
shl
dec
ins
mov
mov
je
sub
dec
mov
out
cs
pop
jbe
test
or
push
or
or
mov
add
sbb
jns
push
into
jmp
(bad)
std
jecxz
bound
idiv
and
std
mov
adc
ret
(bad)
test
fwait
xchg
push
sub
push
mov
fwait
call
sub
and
in
fsub
and
xor
and
mov
or
inc
push
and
add
pop
mov
adc
repnz
push
mov
sbb
jnp
les
jge
inc
push
mov
dec
lock
in
loope
jg
jbe
xor
push
mov
inc
dec
adc
aam
jae
pop
scas
sbb
fld
or
xor
dec
push
and
idiv
mov
xor
je
pop
push
stos
clc
inc
les
pop
pop
mov
je
adc
mov
jl
fcmovnbe
dec
and
(bad)
adc
sbb
gs
ds
sub
and
or
mov
lods
pop
mov
push
fstp
sub
cmp
pop
popf
sub
mov
adc
ror
adc
dec
pop
push
lea
cli
dec
hlt
jno
retf
mov
lds
mov
aaa
push
mov
retf
sbb
rol
jl
xor
and
inc
loop
push
rcl
imul
push
shr
ret
push
imul
in
sub
sub
mov
outs
xlat
sti
aaa
shr
mov
dec
dec
mov
adc
(bad)
rep
push
aam
shl
and
cwde
shr
cmps
in
fwait
(bad)
mov
push
push
cmps
out
daa
pop
adc
sub
xchg
rcr
add
(bad)
or
sub
mov
mov
push
sar
and
and
adc
xchg
fistp
cmp
dec
fidivr
jge
inc
sbb
popf
adc
aam
fwait
mov
(bad)
fldln2
rcl
std
pop
pushf
stos
xchg
rcr
jbe
lods
sbb
outs
(bad)
(bad)
xor
shr
mov
add
pop
popa
fcomp
das
div
or
sbb
mov
addr16
jge
and
push
mov
xor
xor
repz
dec
inc
mov
popf
jecxz
pushf
out
and
aam
adc
dec
jg
cmp
jmp
adc
pop
ror
inc
push
pop
xchg
dec
leave
xchg
iret
mov
cmp
movs
mov
daa
sbb
scas
int3
mov
fimul
mov
push
mov
cdq
lods
dec
add
sub
xchg
cmps
aaa
retf
test
jp
sti
cli
mov
mov
add
(bad)
fistp
leave
outs
cli
xchg
nop
sbb
inc
sti
adc
cmp
cmps
or
ret
arpl
enter
mov
stos
xchg
push
mov
jnp
add
jmp
xchg
xor
xchg
sub
mov
and
push
stos
add
cli
iret
pushf
iret
dec
in
mov
shl
push
or
outs
arpl
dec
pop
push
and
(bad)
sbb
into
sub
inc
pushf
adc
add
xor
shr
jnp
test
popfw
push
and
dec
sahf
pushf
fnstcw
fstp
iret
cwde
jb
inc
call
mov
adc
xor
mov
ss
and
mov
xchg
in
xchg
pop
out
sbb
and
(bad)
pusha
imul
(bad)
js
sub
push
mov
sar
lds
jne
sbb
fcomp
add
push
and
loopne
adc
pop
jnp
cmp
fstp
imul
das
int3
dec
cmc
dec
movs
dec
ret
mov
sub
ja
ins
inc
lahf
pop
movs
daa
xchg
add
fdivr
lods
push
xor
fidiv
jecxz
adc
into
push
sbb
xchg
ins
mov
jne
sbb
jl
jb
dec
add
out
xchg
xor
push
mov
pop
dec
jmp
pop
sbb
inc
ret
dec
push
xchg
out
repz
mov
cdq
sub
leave
outs
jns
mov
stc
inc
movs
loopne
sbb
jae
push
xor
mov
sub
or
pop
sar
dec
ins
cmp
sub
data16
xor
xor
jb
sahf
lds
out
lock
and
ret
lea
xabort
pop
loopne
cmovl
xchg
(bad)
cli
mov
mov
adc
xchg
mov
cmp
ds
cmp
pop
in
pop
mov
(bad)
mov
outs
popf
xchg
dec
and
jbe
xchg
jmp
aad
shl
inc
shl
add
mov
or
(bad)
pop
scas
jg
xor
stos
mov
pop
push
cmp
dec
popf
pop
cs
mov
or
neg
stos
test
ret
lea
and
test
clc
retf
lods
mov
cdq
sub
(bad)
scas
dec
xor
and
loopne
push
ds
mov
leave
test
ret
imul
in
mov
mov
and
inc
mov
jb
test
push
ins
sub
adc
mov
inc
push
mov
jmp
sbb
mov
jbe
jg
loope
aad
jb
xchg
jmp
ins
repnz
icebp
rol
aas
(bad)
dec
gs
clc
dec
dec
and
mov
mov
test
sbb
adc
cli
add
stos
arpl
(bad)
scas
mov
and
adc
push
add
pusha
repz
and
fisubr
(bad)
in
push
iret
and
jp
in
clc
pop
mov
jge
ss
imul
lock
sahf
in
out
and
call
mov
shr
mov
aaa
dec
xor
outs
sub
daa
add
fisubr
imul
cmp
pop
mov
xchg
mov
adc
pop
test
xchg
rcl
pop
mov
xchg
push
ins
xor
cli
cli
mov
mov
jg
mov
rcr
mov
ficomp
add
sbb
push
inc
jnp
push
movs
sbb
ret
(bad)
mov
and
jbe
cs
xor
inc
inc
add
sti
mov
xchg
mov
ret
jp
adc
outs
(bad)
push
imul
mov
leave
aas
mov
aad
ins
xor
adc
fdiv
mov
fstp
popa
out
out
lods
test
push
jbe
jne
lods
imul
and
add
js
mov
lea
push
outs
sub
lods
pop
push
sbb
dec
rcl
jle
xchg
cmp
and
add
stc
test
mov
push
arpl
push
pop
mov
imul
cmp
in
mov
cs
int
in
call
sbb
jp
lds
push
or
je
fbld
rcr
int
push
das
movs
dec
and
repnz
jnp
xor
push
mov
adc
push
mov
cmps
cmc
shl
adc
out
lahf
adc
ds
in
push
clc
mov
or
dec
idiv
jecxz
adc
shl
test
jae
cmp
or
fs
lock
push
mov
iret
int
push
loopne
push
mov
std
mov
add
pop
cdq
push
pop
lahf
pop
stc
mov
cld
jp
pop
inc
dec
pop
aas
and
cmp
gs
popf
mov
and
jp
add
dec
push
cmp
icebp
jb
cmp
test
jmp
mov
ret
adc
gs
sub
push
cs
cmp
and
in
push
out
std
imul
ss
mov
and
jno
jnp
lock
in
jge
xchg
adc
and
mov
mov
inc
xor
jg
push
retf
mov
leave
mov
aad
test
push
aaa
shl
in
int3
jmp
clc
jbe
sub
mov
sub
call
dec
sbb
mov
std
shl
outs
push
pop
cmp
cdq
jecxz
jb
stc
call
call
mov
pop
stos
mov
loop
mov
clc
xor
jmp
dec
dec
(bad)
scas
loopne
lds
das
mov
jmp
retf
or
cmp
jmp
daa
or
shl
jne
cli
loope
xor
fsub
push
ds
sbb
jne
ja
fisttp
xchg
int
icebp
jmp
xor
pop
in
inc
in
in
fs
mov
jecxz
mov
push
push
pop
in
mov
push
lods
stos
fwait
adc
jle
rol
shr
out
mov
xchg
gs
fbld
scas
xchg
inc
adc
sub
clc
push
call
out
jno
inc
mov
(bad)
jne
ins
rcl
scas
lock
jnp
in
in
fild
aaa
in
xchg
mov
js
adc
sbb
mov
icebp
mov
dec
addr16
clc
(bad)
movs
out
push
retf
pop
sbb
cmp
(bad)
dec
mov
adc
dec
fs
ins
push
mov
sub
js
push
mov
hlt
adc
xchg
xor
jle
xlat
int3
scas
imul
aad
dec
xchg
or
and
iret
adc
movs
pop
and
(bad)
mov
je
outs
jle
cs
lahf
ror
test
mov
pop
dec
mov
cmp
xor
push
and
retf
hlt
inc
in
jge
inc
jp
pusha
adc
ds
pop
sub
fisub
fcmovnu
je
sub
sar
add
icebp
sbb
push
imul
and
inc
movs
ficomp
cs
dec
jno
fmul
push
push
test
inc
push
and
mov
adc
dec
and
cdq
add
and
es
mov
in
cmc
or
jmp
push
mov
loop
daa
cmp
cmps
or
stos
test
ja
in
out
add
jmp
mov
ds
std
push
mov
sub
jb
outs
or
xor
scas
jmp
xchg
aad
adc
xchg
out
das
push
js
ret
fdivp
mov
xchg
or
rol
sbb
cmp
adc
fdiv
pop
fdivr
xor
sub
andnps
adc
xchg
hlt
add
(bad)
jne
mov
das
cmp
mov
sbb
jnp
mov
clc
ss
dec
sub
arpl
and
push
jne
inc
pop
dec
cli
mov
fs
xor
lahf
xor
mov
js
inc
push
outs
aad
mov
or
jno
mov
adc
or
jbe
xchg
fdivr
fs
nop
mov
or
outs
add
xchg
add
pop
jle
shl
sbb
pop
push
call
sbb
call
or
adc
sub
out
xchg
pusha
(bad)
or
fistp
lahf
mov
xchg
xchg
sbb
pop
push
popf
xor
mov
jo
pop
dec
arpl
in
jmp
(bad)
out
jb
scas
stos
xor
xchg
shr
or
stos
and
pop
mov
sbb
adc
xor
add
push
stos
mov
scas
repz
stos
mov
icebp
cmps
sub
das
xor
or
call
(bad)
fmul
ja
xchg
pop
int3
fs
cmp
mov
mov
push
inc
mov
(bad)
sub
sub
inc
test
add
jns
adc
lods
rcr
cs
dec
jo
iret
xchg
jns
in
add
inc
ss
add
mov
add
stos
xchg
test
loope
mov
ja
push
sbb
add
(bad)
pushf
fdivr
jnp
push
jl
push
repz
inc
sub
lea
push
add
lods
gs
test
and
or
mov
xchg
push
mov
movs
cmc
mov
mov
imul
mov
cli
sub
dec
or
pop
ror
push
(bad)
pop
mov
push
stos
push
lock
fisttp
adc
(bad)
out
imul
cli
sub
xchg
aas
ja
cmps
cmps
fucomip
xor
or
jne
jns
test
sbb
xchg
pop
push
ds
xchg
cmp
mov
dec
mov
out
inc
inc
jmp
and
nop
inc
dec
fcom
nop
inc
and
mov
imul
iret
imul
rcr
cmp
dec
sub
sub
cli
lahf
cmp
push
iret
add
ins
add
data16
enter
es
xchg
jp
mov
mov
dec
pop
or
xor
retf
jno
lahf
ficom
shl
mov
cmps
adc
jmp
push
lahf
out
(bad)
inc
inc
es
jecxz
push
ror
rcr
push
fwait
in
nop
pop
cmps
mov
xor
cdq
clc
int
stos
xor
and
ds
push
ins
fs
pop
int3
cmc
jae
mov
out
leave
jg
fisubr
call
test
iret
and
(bad)
jne
inc
dec
mov
cmps
clc
inc
fidivr
ret
push
mov
in
sub
dec
mov
shl
mov
jns
xor
aad
ror
outs
imul
push
mov
movs
cmp
or
jmp
fld
lds
pop
mov
dec
outs
sar
sbb
mov
repz
dec
(bad)
and
test
mov
mov
test
dec
test
lds
aam
add
fisub
sub
sub
xchg
fisub
pop
enter
pop
cmp
mov
out
fcom
fst
push
std
sbb
jns
icebp
pop
fsubr
xor
mov
fidiv
hlt
cmps
add
inc
sar
mov
dec
dec
cli
dec
cmps
jns
jmp
out
hlt
(bad)
pop
imul
pop
cmp
inc
cdq
test
arpl
in
mov
test
mov
mov
in
inc
cmp
jg
inc
icebp
movs
das
pop
mov
inc
ss
xchg
popa
out
dec
xchg
mov
in
cmp
idiv
mov
cdq
cmps
pop
nop
add
data16
mov
repz
add
pushf
ss
pop
mov
fild
add
sbb
sbb
mov
mov
or
jp
arpl
in
and
call
loope
imul
and
inc
jne
push
adc
mov
pop
push
adc
scas
jne
fwait
adc
and
dec
cmp
pop
retf
sbb
bound
fldenv
pop
(bad)
cmp
pop
loope
inc
gs
mov
test
rcr
ins
out
(bad)
fwait
xor
or
les
cmc
in
out
call
es
sbb
inc
add
xor
popf
push
pop
fmul
dec
fcmovne
mov
sub
clc
mul
stos
add
out
pop
push
push
or
lock
test
outs
ffree
sar
cmp
(bad)
fs
mov
xchg
cwde
rcr
sub
sar
scas
fst
pop
adc
sbb
cmps
jb
sub
aad
cmp
mov
lds
addr16
ret
adc
aad
xor
push
and
pop
xchg
in
test
popf
int3
(bad)
mov
leave
adc
and
add
or
cwde
clc
mov
pop
cld
mov
jp
movs
inc
pop
ins
prefetchw
ins
add
cmp
cmp
call
mov
pop
aaa
and
inc
xchg
dec
push
add
sbb
imul
sbb
aad
or
add
fnstcw
iret
in
in
test
aad
lock
mov
ret
xchg
test
or
dec
xchg
iret
hlt
mov
xchg
cmp
pop
mov
and
dec
and
cmp
rcr
add
pop
mov
push
int
push
aad
and
sbb
xor
sub
(bad)
test
ss
sbb
dec
push
pop
mov
in
xor
pusha
leave
in
mul
add
push
mov
xchg
cmp
stos
das
jecxz
pusha
and
shr
mov
mov
cmps
arpl
in
mov
les
icebp
mov
int3
jle
shl
es
mov
test
mov
adc
in
add
jns
pushf
retf
into
pop
adc
in
mov
mov
scas
or
popf
mov
mov
or
imul
jnp
mov
ins
lea
push
movs
add
inc
xchg
bound
bswap
in
ror
push
cmc
scas
mov
fstp
xor
xlat
push
adc
out
add
xchg
cmp
adc
shr
adc
fisub
mov
out
test
inc
jmp
jmp
ret
xchg
neg
xchg
mov
icebp
inc
cmp
mov
add
rcr
or
dec
push
(bad)
sbb
push
dec
xor
push
jl
ret
(bad)
mov
push
xor
rcr
stos
jne
pop
test
push
icebp
push
call
jne
test
xor
and
xor
fldenv
aam
pop
mov
inc
pop
lock
aad
pop
mov
inc
push
retf
dec
cmps
adc
pop
add
xchg
gs
andnps
push
or
sahf
adc
adc
daa
ds
jbe
hlt
cmp
mov
inc
call
push
jb
inc
cmp
gs
pop
(bad)
and
push
xor
xor
stos
clc
xchg
mov
out
out
int3
aam
add
mov
xchg
sbb
lods
lahf
(bad)
int
jge
inc
mov
popf
mov
xor
push
mov
pop
or
jae
aam
mov
sub
retf
(bad)
aas
adc
popa
(bad)
in
outs
je
and
dec
repnz
lahf
fs
mov
cdq
out
push
mov
sbb
mov
repz
dec
mov
sbb
mov
repz
out
mov
mov
xor
jecxz
mov
sub
addr16
int
pop
retf
call
bswap
sbb
cmc
inc
pop
push
sti
addr16
int
rol
pop
cmp
in
or
(bad)
xchg
xchg
add
pop
pop
ja
sahf
cmc
xchg
sbb
mov
cmp
mov
fnstcw
push
mov
mov
iret
sbb
jg
shl
push
inc
adc
test
nop
cdq
(bad)
jmp
stos
ins
ins
stos
xchg
aam
sahf
pop
(bad)
add
neg
sbb
add
push
imul
fwait
jg
clc
inc
mov
and
adc
mov
sbb
push
fisttp
mov
inc
in
jae
ror
inc
ins
fimul
stos
lods
cmp
ret
xchg
and
fidivr
add
inc
pop
or
movs
icebp
lods
add
outs
mov
adc
inc
aaa
jb
push
out
dec
jne
retf
and
cmp
or
adc
lock
and
and
ja
ins
sub
mov
cdq
jg
dec
push
pusha
inc
(bad)
ins
mov
es
and
outs
mov
xor
iret
rcl
ret
int3
xor
outs
retf
mov
neg
add
(bad)
jmp
adc
jle
jp
mov
adc
sti
lea
loopne
xor
outs
(bad)
xor
jl
enter
xor
mov
pop
pop
lds
out
push
jl
jle
out
cdq
mov
cli
dec
jo
ds
push
pop
inc
and
js
popa
xor
mov
jmp
jmp
sbb
mov
aam
aam
mov
mov
and
add
ret
jb
add
xor
dec
call
jae
in
lahf
and
xor
pop
xchg
jns
jge
in
jecxz
(bad)
enter
sub
add
cwde
ins
aaa
cmp
int3
mov
sti
push
popa
mov
call
inc
push
int
mov
xchg
test
das
adc
or
mov
aaa
mov
adc
or
jp
cmp
stc
lods
pop
ficom
mov
inc
pushf
fs
push
lock
dec
and
sub
inc
jb
daa
push
push
mov
mov
inc
scas
adc
pop
cmp
pop
imul
sbb
fiadd
call
cmp
inc
fcom
push
xchg
jl
es
pop
loope
pushf
or
pause
adc
dec
push
dec
jno
push
mov
mov
pop
jae
and
push
js
jecxz
scas
enter
sbb
ds
or
lods
add
and
sub
pop
sub
inc
pop
dec
mov
adc
jnp
ins
out
scas
scas
adc
loope
jecxz
aam
loope
add
out
outs
cwde
(bad)
pop
retf
fisttp
jmp
mov
mov
xlat
call
xchg
xchg
mov
or
addr16
dec
retf
fsub
push
cdq
mov
out
jno
inc
scas
test
sub
movups
xchg
mov
cmp
sub
out
shl
xlat
cli
push
imul
aam
mov
dec
dec
aaa
stos
jns
mov
jl
jae
test
add
std
dec
fistp
xor
fsubp
(bad)
ja
fsubr
icebp
(bad)
cdq
inc
(bad)
icebp
push
xchg
loop
fwait
dec
push
in
imul
jle
push
dec
imul
loope
cmc
bound
popa
iret
sbb
nop
sbb
sub
sub
and
in
adc
mov
in
imul
inc
jg
xor
out
mov
call
jge
es
rol
add
lods
sub
cld
inc
call
and
sbb
std
imul
bound
inc
mov
jl
sub
add
and
xor
test
adc
jmp
xchg
mov
jge
dec
xchg
aaa
pop
xchg
cmp
test
leave
xor
xchg
pushf
sbb
pop
pushf
or
push
gs
out
mov
in
xchg
iret
pop
mov
dec
xchg
sub
out
or
movs
xor
push
mov
jp
popa
popa
and
in
retf
mov
xor
shr
popa
xchg
jmp
push
outs
cmp
in
push
popf
in
dec
mov
data16
pop
mov
int
out
das
lods
push
or
test
fwait
pusha
in
xor
xlat
cmps
ror
sbb
inc
xchg
js
or
xor
xchg
mov
retf
imul
lods
pop
int
inc
inc
mov
jb
lock
xor
lock
fcmovb
xor
pop
xor
sbb
das
xchg
mov
fmul
jp
ror
sahf
gs
xchg
pop
jnp
(bad)
stos
mov
(bad)
lods
mov
mov
ins
or
std
xchg
lock
in
loope
test
mov
cmps
cmc
ret
ss
outs
(bad)
sub
cmps
stos
lahf
lods
daa
je
push
inc
clc
jmp
scas
cmps
ds
push
cmp
mov
fdivr
adc
lea
jp
aas
pop
stos
fwait
mov
cmps
into
cwde
mov
sub
cmp
scas
lods
xchg
or
pop
sar
add
and
inc
sbb
fcomp
lahf
jb
pop
inc
pop
aad
jmp
mov
nop
fnstenv
stos
js
js
sar
in
sbb
mov
cmp
push
or
repnz
imul
or
test
sbb
push
push
sbb
ins
inc
cmp
push
stc
push
shl
shl
sbb
xchg
repz
xlat
ins
loop
and
push
mov
cmp
pop
xlat
mov
ret
xchg
loope
fadd
mov
mov
loopne
jnp
out
cmp
ss
and
cmps
out
arpl
sub
sub
jae
retf
mov
outs
mov
and
scas
xor
rcr
popf
clc
or
xor
inc
xchg
popa
sbb
outs
popf
mov
add
outs
arpl
xchg
pop
pop
xchg
inc
stos
aam
xor
retf
xor
sbb
and
ror
jne
cmp
out
loopne
ret
cmps
lock
arpl
pop
stos
jns
pusha
mov
loopne
jge
and
push
xchg
push
pop
(bad)
idiv
mov
or
ss
(bad)
xor
data16
div
push
daa
or
mov
xlat
or
test
mov
lahf
mov
movs
scas
or
and
and
xchg
lock
inc
mov
dec
ins
ss
push
mov
mov
inc
push
xlat
ins
loopne
adc
and
retf
mov
daa
xchg
js
pop
(bad)
out
mov
aam
rcr
mov
test
cwde
and
ret
outs
test
dec
iret
jmp
or
movs
inc
sar
sub
inc
sbb
mov
pop
add
sar
dec
jbe
mov
push
clc
jo
or
bound
fstp
push
xchg
push
sar
jns
out
mov
nop
jne
inc
pop
aaa
cdq
jge
(bad)
jne
dec
jge
push
inc
sar
cli
xchg
cwde
xor
dec
jne
lds
jbe
lds
out
sub
outs
mov
outs
jg
nop
pushf
inc
and
push
ins
fcomp
lods
(bad)
fisub
int
xchg
push
out
mov
shl
fild
xchg
and
or
push
fistp
jp
cmps
adc
xor
lds
xchg
mov
adc
xor
sbb
int
pop
add
add
(bad)
imul
mov
adc
je
mov
lods
outs
aas
xlat
and
movs
push
jp
or
add
push
dec
jecxz
sub
cmp
test
ins
xchg
cmp
xchg
mov
mov
lods
icebp
push
int3
jp
sbb
cwde
fisub
into
jno
inc
lahf
dec
les
dec
movs
mov
ret
sahf
dec
retf
pusha
jge
faddp
sub
xchg
add
test
mov
les
mov
jecxz
add
lods
push
lahf
call
(bad)
loopne
ret
xor
repnz
mov
je
push
dec
ss
or
dec
iret
hlt
sar
jmp
shr
pop
push
adc
into
jo
popf
iret
jns
ins
pop
retf
pop
xchg
push
loope
mov
mov
dec
inc
stos
lds
push
aas
jns
pop
sbb
popf
jmp
in
nop
adc
call
call
xor
lods
sbb
lds
mov
or
out
inc
outs
xchg
mov
fbld
jo
(bad)
(bad)
adc
and
xchg
jl
xor
int3
mov
ins
call
pop
arpl
aad
push
xor
push
add
add
ins
jecxz
add
ror
push
adc
ss
adc
fistp
icebp
retf
add
pop
dec
data16
push
xchg
adc
cdq
test
xchg
add
fldl2t
loopne
mov
inc
xor
rcr
mov
aaa
bound
into
repz
mov
rcl
js
(bad)
daa
bound
es
cmps
jl
or
mov
popf
sbb
daa
push
mov
and
xchg
daa
jmp
sbb
sub
nop
jmp
lea
xchg
inc
data16
push
cmp
inc
(bad)
sbb
fnsave
cdq
test
sbb
mov
adc
enter
sbb
test
movs
int3
and
xor
fs
fadd
mov
lods
jmp
push
pop
clc
clc
fs
push
or
cli
mov
popa
cmp
and
loope
shl
adc
push
xchg
xor
xchg
scas
movs
lods
ss
push
push
xchg
pop
sbb
adc
lahf
jbe
lods
icebp
sahf
pusha
daa
or
stmxcsr
inc
push
in
stos
outs
pushf
div
icebp
mov
adc
mov
xchg
xor
ret
ret
inc
fdiv
lahf
fnstenv
jp
outs
sti
xchg
inc
aad
or
sbb
mov
jge
jl
cmp
pop
dec
xchg
add
sbb
test
mov
sbb
cmp
mov
adc
imul
in
inc
std
div
stc
jmp
out
fcmove
cmp
xchg
sbb
add
lods
mov
mov
push
or
xor
xchg
pop
cmp
inc
into
shr
jno
mov
mov
js
retf
out
in
retf
and
test
ja
das
and
(bad)
sub
sub
push
jno
dec
mov
lds
mov
shl
or
mov
(bad)
clc
fwait
pusha
cmp
sbb
sub
push
xchg
into
(bad)
out
(bad)
jecxz
pop
dec
mov
mov
test
inc
mov
push
dec
mov
ret
mov
pushf
push
add
gs
movs
(bad)
jecxz
add
rol
inc
xor
ffreep
rol
add
jle
in
add
scas
cwde
stc
mul
xchg
in
inc
xchg
pop
aad
adc
mov
mov
inc
iret
add
xlat
gs
mov
into
sbb
int
sbb
add
cli
jb
or
call
aas
inc
(bad)
inc
fnstcw
dec
sub
out
mov
inc
add
cwde
fwait
mov
mov
loopne
mov
cs
mov
jbe
mov
add
out
sub
les
add
jns
sub
and
out
push
mov
lds
fsub
out
inc
adc
push
xchg
cmc
pusha
popa
xor
or
inc
or
cld
fbstp
jge
mov
retf
or
sbb
(bad)
std
out
idiv
retf
daa
xor
test
es
mov
cld
and
(bad)
inc
jmp
sub
scas
not
in
push
fistp
(bad)
out
fwait
retf
retf
fs
mov
cs
punpcklwd
and
retf
push
push
pusha
arpl
sbb
enter
sub
or
mov
ret
push
clc
test
sbb
mov
or
dec
adc
aas
jno
imul
(bad)
jns
mov
aam
cmps
jp
out
stc
sub
jmp
pop
pop
cs
push
das
pop
repnz
out
cmp
popa
cmp
cmp
ficomp
and
aam
lahf
jecxz
sbb
xor
dec
push
jecxz
sub
cmp
mov
xchg
or
dec
pop
xlat
lahf
test
scas
int3
addr16
cmps
or
and
add
popa
push
jg
fsub
mov
aad
pop
adc
sub
mov
xor
push
test
(bad)
lahf
test
ficomp
jp
xchg
dec
aas
jae
sbb
aam
adc
xor
popf
imul
fidivr
in
pop
mov
hlt
(bad)
std
ins
clc
xchg
aas
cmp
lods
jp
add
in
fs
sub
int
cli
rcr
pop
out
push
jge
dec
shl
adc
(bad)
in
cmp
addr16
push
(bad)
jg
ss
ds
popf
inc
out
inc
loope
gs
and
ja
sbb
cmp
fdivr
push
popf
and
and
std
sbb
stos
jl
push
add
xor
(bad)
fcmovnb
loope
jg
clc
rcr
inc
in
in
sub
sahf
pop
or
in
(bad)
jle
retf
into
jnp
gs
pop
cmp
jnp
cmp
push
jecxz
mov
retf
dec
loope
push
call
mov
pop
fnstenv
push
inc
icebp
lds
out
fisttp
ins
fs
movs
test
in
sub
fistp
add
ficomp
mov
enter
cmp
sub
sub
(bad)
ror
adc
pop
inc
(bad)
sbb
in
(bad)
fisubr
add
iret
push
popa
sub
das
stos
(bad)
(bad)
lds
lea
outs
fbstp
shl
cwde
mov
ins
fwait
push
dec
icebp
xchg
(bad)
aas
and
mov
mov
pop
cs
sub
leave
lahf
das
xlat
in
ror
js
rcl
pop
dec
cdq
cmp
(bad)
ret
ror
pop
jmp
int
pushf
add
jns
mov
push
push
push
add
push
mov
jmp
cld
or
jl
mov
rol
rcl
xchg
cs
cmps
xor
out
dec
pop
fsubrp
rol
into
mov
or
cmp
mov
cpuid
aaa
jp
inc
jg
mov
and
fstp
push
pop
sub
xchg
xchg
push
movs
inc
imul
jb
fist
mov
fdivr
inc
popa
enter
je
rcl
stos
sti
lds
cli
dec
repz
call
mov
stc
pop
in
mov
sbb
lods
add
je
call
xor
mov
add
cmps
inc
ror
push
push
jnp
test
dec
and
cmps
xchg
test
jnp
xor
rep
cmc
popa
imul
and
lods
and
iret
and
(bad)
je
loopne
mov
mov
pop
hlt
hlt
movs
and
lds
add
fidivr
jecxz
mov
fcom
pop
push
mov
or
jbe
int3
test
ja
pop
dec
mov
xor
or
push
jl
(bad)
mov
xchg
jnp
je
mov
jle
sbb
lods
scas
ret
lahf
(bad)
lock
dec
and
pop
lock
mov
mov
cmp
sar
call
retf
jle
call
inc
xlat
rcl
fild
lods
mov
ja
jle
mul
mov
push
out
cmp
retf
mov
clc
and
mov
push
and
and
mov
dec
pop
ins
xchg
jo
mov
mov
shl
sbb
inc
lock
hlt
add
mov
jge
xchg
(bad)
mov
dec
push
and
sahf
mov
xchg
mov
push
repz
add
push
les
push
sub
hlt
cli
mov
int3
push
outs
mov
sbb
cmp
dec
mov
hlt
jp
fs
xor
jmp
cmc
aad
scas
out
fstp
mov
iret
xchg
test
fs
dec
sar
int3
js
sbb
mov
(bad)
cli
lea
sbb
sbb
ins
out
stos
cwde
rol
pushf
adc
addr16
lds
fisttp
jp
jge
pushf
aas
bound
push
jl
jne
pop
cmp
js
icebp
xor
ret
push
xchg
(bad)
jmp
js
sbb
cmp
push
clc
cwde
rcl
fwait
ds
sbb
rcl
xlat
enter
(bad)
les
cmp
or
or
(bad)
out
inc
lea
or
dec
movq
scas
jecxz
ror
adc
int3
les
cmp
rcl
pop
test
mov
sahf
pop
pop
pusha
inc
inc
call
mov
into
mov
mov
in
dec
cmp
lods
adc
test
mov
std
push
push
outs
push
inc
push
adc
cmp
call
pushf
cmps
pop
cdq
xor
xchg
aad
mov
ds
popa
or
mov
daa
ret
jbe
adc
in
les
fdiv
mov
dec
xor
in
xor
sub
fistp
cs
dec
xchg
js
mov
test
jmp
loope
lods
retf
dec
dec
cmp
xchg
std
mov
dec
pop
js
mov
push
push
jb
stos
sbb
push
loop
rcl
cmp
out
out
push
stos
sbb
retf
mov
lock
scas
jae
dec
dec
push
outs
jle
cld
arpl
jnp
cmps
xor
dec
in
push
mov
lods
push
out
arpl
js
ins
shl
vaddpd
dec
ss
or
cdq
adc
out
adc
mov
gs
mov
shl
sbb
xor
mov
and
call
fstp
push
mov
cmp
and
sbb
cmps
push
ret
dec
mov
outs
jmp
mov
adc
es
add
cs
stc
int3
add
ret
mov
pop
add
xor
ss
jo
das
les
lahf
addr16
aas
loope
(bad)
call
mov
int
js
adc
and
or
movs
jne
push
dec
inc
add
mov
jle
mov
pop
adc
cmp
hlt
int
(bad)
jbe
in
push
mov
and
mov
fdiv
rol
xchg
jne
(bad)
push
ret
out
add
xor
sub
sahf
push
sahf
adc
and
inc
adc
fstp
mov
addr16
cmps
ds
mov
shr
cwde
mov
mov
stc
fsub
pop
mov
popa
mov
les
cmps
stc
xchg
and
inc
dec
sahf
cmc
mov
inc
int3
enter
mov
and
mov
mov
bound
ret
fchs
mov
xchg
ins
mov
pop
iret
mov
sahf
shr
push
mov
addr16
lea
mov
cmp
arpl
push
xor
add
xor
xor
mov
dec
es
mov
sub
jge
bound
(bad)
adc
mov
mov
xor
sub
shl
fisttp
jne
ss
repz
sar
int3
fadd
daa
push
jmp
in
push
cmp
sub
out
icebp
aad
test
gs
dec
pop
icebp
ja
or
mov
and
not
mul
ja
daa
je
xchg
scas
push
jnp
push
xor
or
fistp
lock
xchg
mov
mov
or
dec
push
adc
scas
push
mov
push
inc
push
test
cmp
mov
add
mov
push
fwait
nop
clc
test
push
adc
cmp
cmp
jge
push
sub
fnstcw
adc
ins
test
xchg
mov
int3
out
pop
addr16
mov
call
mov
stos
cmp
mul
pusha
sub
sub
mov
or
shl
enter
xchg
pop
out
(bad)
data16
mov
jge
rcl
xchg
xchg
clc
pop
dec
sub
arpl
ds
jmp
sahf
(bad)
aaa
jnp
dec
jecxz
ret
js
loopne
and
and
jmp
adc
jbe
shr
(bad)
das
cmp
mov
out
ficom
(bad)
jo
push
add
lods
adc
inc
push
cmps
mov
retf
or
movs
out
ficom
lock
push
dec
lea
push
adc
add
(bad)
retf
cmp
retf
inc
jbe
fsub
add
fwait
sti
add
shl
and
shl
xchg
jg
mov
add
xor
cmp
fiadd
dec
int
int3
mov
or
mov
jno
(bad)
add
jae
push
cwde
ins
jne
pop
lahf
mov
mov
inc
adc
jmp
cdq
dec
xlat
scas
cmp
pop
add
das
add
pop
jge
scas
sbb
loope
cmp
aaa
dec
xchg
cmp
icebp
mov
push
fwait
pop
lods
stos
stos
mov
xor
jno
jae
ins
fiadd
aas
loope
or
mov
fwait
cmp
sub
mov
popa
ins
(bad)
inc
(bad)
enter
retf
mov
movs
out
cmp
mov
cli
xchg
les
inc
jle
call
jno
test
test
mov
xor
add
scas
adc
mov
pop
or
rcr
iret
mov
in
das
dec
inc
and
inc
xor
jg
neg
mov
add
fmul
add
push
and
aam
cli
xor
add
pop
pusha
adc
cmps
cmp
xchg
fbstp
mov
icebp
call
lock
lods
fld
jg
mov
xor
or
cmp
(bad)
hlt
mov
xor
stos
inc
xchg
sub
pop
xchg
int3
loope
or
pop
pop
mov
or
mov
sahf
fdivr
jns
outs
fs
mov
or
pop
scas
sbb
mov
icebp
and
out
jno
push
xor
jle
add
fst
jge
ret
mov
jnp
arpl
cmp
sbb
sbb
test
add
stos
sbb
inc
imul
fidivr
outs
outs
iret
sbb
mov
push
ja
mov
adc
fstp
nop
sub
mov
dec
or
cmp
add
sar
sbb
imul
movs
std
iret
jno
pop
and
or
int3
(bad)
or
dec
es
mov
ja
and
inc
mov
test
test
pop
push
fs
add
aaa
int
(bad)
pop
push
test
rsm
xchg
sub
outs
cmp
test
or
jl
lea
mov
mov
inc
cmp
mov
pusha
movs
out
push
mov
ja
mov
fist
or
or
add
cmps
dec
pop
mov
push
sub
mov
sbb
mov
xchg
mov
jbe
ret
mov
jecxz
outs
mov
push
cdq
push
hlt
dec
out
fnsave
fwait
aad
push
stos
aaa
imul
and
pop
sbb
in
popf
les
inc
mov
jb
jno
(bad)
psllw
mov
lods
inc
daa
ficomp
or
pop
mov
jns
pushf
add
leave
outs
ds
jle
adc
bound
mov
adc
sub
sub
cdq
fmul
add
and
lock
test
adc
lock
ja
test
shr
and
mov
addr16
or
mov
pop
mov
and
xchg
mov
retf
out
and
mov
imul
sahf
(bad)
shr
cld
nop
neg
in
jle
lea
loop
enter
lahf
and
data16
ret
sbb
fdivrp
pop
sbb
into
hlt
mov
cmp
cmps
lock
test
mov
cmp
aas
in
popf
cmp
add
lods
repz
js
test
xlat
(bad)
xchg
pop
push
idiv
je
hlt
mov
imul
jns
mov
stos
imul
(bad)
xchg
iret
lds
push
mov
push
mov
sbb
mov
cmp
popf
push
(bad)
pop
fistp
and
cmps
(bad)
push
adc
shr
jg
retf
inc
(bad)
and
ins
cmp
xchg
jns
xchg
sub
pop
cwde
sbb
(bad)
jmp
data16
pop
jo
jns
xor
pop
mov
mov
test
jne
mov
xor
dec
shl
add
push
out
adc
add
inc
or
ja
cld
enter
mov
movs
xchg
mov
cmp
sbb
pop
sar
rcr
add
add
imul
dec
(bad)
pop
xchg
retfw
jnp
jecxz
jnp
pop
fadd
cld
mov
mov
daa
call
ins
mov
cmp
xor
cmp
(bad)
sbb
add
sbb
and
mov
and
inc
xor
sar
jmp
push
das
test
(bad)
cli
fcomp
jl
test
ins
icebp
nop
or
lods
and
mov
pop
aad
lods
inc
mov
lods
or
popf
mov
and
push
sbb
iret
and
icebp
dec
jo
repnz
cli
retf
scas
sbb
fwait
cmp
and
aam
push
fwait
hlt
inc
sub
(bad)
or
dec
dec
out
outs
mov
cmp
cmps
jne
xor
popf
retf
cld
or
cmp
cs
cmp
nop
xchg
arpl
lahf
test
in
jne
adc
(bad)
out
les
scas
pop
rol
fisub
push
sub
repz
dec
ins
mov
pop
fwait
in
mov
(bad)
lods
jmp
xchg
xchg
aad
imul
dec
dec
push
mov
xor
stos
aam
ror
retf
test
std
add
sbb
mov
sahf
add
or
adc
lahf
xlat
inc
inc
repnz
push
cmp
rol
pop
inc
and
add
scas
sahf
sub
pop
cmp
les
pusha
mov
aaa
push
or
sub
jg
pop
ficomp
mov
aas
push
lahf
cdq
sub
sbb
popf
adc
adc
mov
push
(bad)
xchg
mov
adc
or
jo
daa
ins
add
movs
stos
stos
sbb
push
mov
pop
push
sub
mov
pop
sti
dec
sbb
add
sbb
sbb
out
cwde
fcmovnu
jnp
sti
adc
lods
bound
cli
pop
imul
jle
and
adc
test
jbe
push
outs
test
jbe
sub
(bad)
mov
out
mov
ret
mov
ja
mov
dec
fsub
mov
loop
shl
fdivr
cmp
pop
sub
mov
dec
inc
sbb
das
scas
bound
cmp
dec
retf
inc
inc
jns
fnstcw
pop
mov
ror
push
cmp
std
pop
lahf
pop
into
or
dec
call
xor
iret
mov
mov
jge
arpl
add
sub
mov
lods
add
mov
mov
std
xchg
out
daa
into
cdq
xchg
inc
ret
pop
inc
xchg
inc
lsl
sbb
js
idiv
adc
xchg
push
or
shl
add
push
popf
gs
in
sbb
xchg
loopne
xor
mov
pop
icebp
enter
dec
mov
out
pushf
mov
mov
jle
ds
aad
pop
sahf
out
fmul
mov
or
push
or
dec
aas
sbb
movs
sbb
sar
jb
sbb
mov
mov
(bad)
push
pop
add
lahf
dec
lods
das
dec
inc
mov
push
or
dec
or
(bad)
cld
cmp
adc
dec
pop
mov
jge
dec
xor
xchg
inc
and
pop
test
shl
dec
xchg
leave
xchg
rol
aaa
and
xor
popa
mov
out
into
jae
xor
push
dec
pop
into
adc
sbb
pop
std
cmp
shl
xor
jbe
xchg
dec
shl
arpl
push
jl
dec
js
mov
data16
std
jnp
dec
ja
sub
addr16
out
(bad)
push
enter
inc
mov
sub
mov
mov
or
push
outs
out
xchg
mov
dec
and
sbb
xchg
jecxz
push
jo
rcr
loopne
nop
out
movs
xchg
mov
nop
mov
in
pop
cs
mov
sub
outs
cmps
aas
rol
fnsave
pop
or
push
stos
enter
xor
xor
fistp
pop
popaw
mov
or
ins
aad
jl
dec
stos
test
out
xchg
mov
mov
fmul
out
sbb
mov
jmp
mov
jmp
cs
xchg
(bad)
mov
dec
cmp
sbb
dec
(bad)
or
pushf
out
sub
xor
jmp
enter
fucomip
dec
cmp
xor
into
jae
sbb
xor
sub
into
pop
loopne
sahf
push
pop
push
and
push
mov
cmps
ss
(bad)
dec
mov
pop
cmc
lock
jle
shl
xchg
aaa
test
retf
mov
pop
pop
mov
outs
sub
shl
aad
mov
fist
mov
mov
sub
(bad)
and
in
rcr
mov
je
ror
sub
push
and
dec
or
inc
inc
pop
jmp
in
call
mov
mov
ins
outs
pop
pop
pop
add
mov
aaa
sar
test
ret
jb
repz
add
jle
scas
dec
test
adc
mov
shr
fs
lahf
pop
dec
add
scas
out
and
iret
rcr
mov
int
xchg
push
dec
movs
sar
sbb
add
cmps
or
mov
adc
or
push
aam
dec
add
syscall
sub
iret
es
test
mov
je
pop
lock
loope
aas
or
sbb
pusha
(bad)
loop
xchg
or
adc
jbe
pusha
bound
push
icebp
sub
xchg
jns
sub
jns
sahf
ror
cmp
ficomp
arpl
sbb
mov
(bad)
scas
xchg
cmp
mov
pop
ja
xchg
cmp
and
int3
les
aaa
shl
int
jl
sbb
js
nop
ds
jmp
cmp
mov
std
leave
mov
nop
lock
stos
jl
jmp
or
adc
mov
inc
dec
fdivr
or
xor
test
cmp
test
or
popa
imul
mov
retf
cmp
into
ss
adc
retf
dec
jmp
dec
dec
sbb
xchg
xchg
ins
jecxz
pop
ins
stc
pop
jecxz
cmp
inc
cmp
mov
xchg
jg
and
aas
(bad)
sar
mov
in
mov
add
mov
fcomp
daa
push
enter
ins
jo
nop
mov
out
repz
retf
popa
push
(bad)
xchg
movs
pop
stos
xlat
int
jno
jno
in
fs
adc
jl
loopne
lods
dec
pop
xor
add
nop
retf
aam
adc
push
cwde
ret
cmp
jae
out
out
ret
out
or
cmp
xchg
sti
pusha
sbb
fbstp
cmps
mov
sbb
inc
aad
jge
xchg
add
push
mov
movs
fs
mov
mov
pop
push
mov
fst
es
outs
aas
jno
mov
(bad)
adc
cdq
cld
dec
(bad)
mov
fidivr
adc
outs
in
xlat
stos
jnp
push
(bad)
mov
mov
add
add
xor
pop
dec
sub
stos
int3
sub
inc
sbb
(bad)
scas
aad
(bad)
movs
jne
das
daa
ins
xor
loopne
mov
stos
in
int
inc
shl
mov
(bad)
lods
pushf
repz
push
mov
sahf
ins
dec
mov
push
int
cwde
jns
stos
std
stos
and
outs
inc
sub
movs
gs
das
and
pop
aad
fmul
mov
cmp
xchg
sub
(bad)
dec
adc
(bad)
xchg
out
push
nop
jecxz
mov
sbb
pusha
cs
mov
cld
cmc
ret
sbb
shr
pmuludq
sub
sbb
push
push
jp
fwait
aam
out
push
and
nop
jecxz
test
pop
xchg
xor
and
xchg
test
data16
out
icebp
push
and
stos
icebp
push
ret
sub
lods
mov
and
mov
pop
jbe
jnp
mov
add
shl
push
inc
cmp
dec
sbb
mov
cmps
stos
xor
add
push
(bad)
xchg
push
dec
ror
xchg
inc
std
mov
call
leave
call
cmp
adc
addr16
iret
je
xchg
mov
cdq
and
loopne
shr
push
inc
sbb
mov
adc
jb
pop
fwait
push
push
sbb
and
add
cmp
add
in
les
stos
cmp
xor
outs
jl
pop
jge
lods
mov
test
popf
fmul
arpl
or
adc
xchg
ret
mov
in
loope
dec
adc
and
dec
pop
pop
in
mov
push
jns
push
sbb
ds
xor
fnstcw
adc
mov
fwait
out
jecxz
lock
mov
cmps
repnz
cmp
mov
retf
sub
nop
inc
dec
add
shl
int3
idiv
scas
arpl
fld
xlat
push
(bad)
fnsave
mov
out
inc
xor
inc
and
mov
pop
retf
repz
(bad)
outs
jmp
neg
mov
xor
ins
jecxz
scas
push
mov
xchg
dec
jno
cmps
ret
fwait
sub
cwde
ins
aam
sub
mov
rcr
int
cmp
sbb
outs
retf
fsub
dec
into
cld
xor
ret
cdq
jnp
sub
(bad)
std
into
xchg
push
cld
and
pop
shl
jmp
dec
or
dec
rcl
fnsave
xchg
push
mov
fcomp
aam
push
lock
loopne
mov
iret
daa
sub
or
sub
cs
sub
or
pop
repz
cwde
xchg
dec
xlat
in
pop
mov
xchg
xchg
sub
cmps
ficomp
dec
scas
aad
loopne
dec
dec
push
(bad)
cmp
xchg
bound
sub
repnz
gs
enter
dec
mov
aad
adc
mov
push
adc
stos
outs
dec
or
cmp
lds
ss
add
out
div
aas
adc
sbb
ror
or
and
xlat
push
jnp
inc
mov
movs
push
cmps
inc
aaa
outs
sar
mov
cmp
pop
and
iret
jnp
jno
bound
fbld
and
jb
lock
cmp
mov
mov
and
aas
rol
aaa
in
je
cmp
mov
cmc
icebp
push
push
adc
stc
push
into
sub
and
outs
inc
xchg
icebp
jbe
or
sub
dec
jbe
pop
and
imul
ret
dec
in
(bad)
jno
stos
and
cmp
(bad)
push
ins
mov
scas
fst
jge
inc
sti
xchg
jg
f2xm1
in
inc
xlat
push
fwait
pop
sbb
inc
lahf
push
stos
(bad)
out
mov
(bad)
jmp
daa
or
dec
xchg
mov
cli
fs
adc
out
mov
mov
test
call
xchg
icebp
sub
outs
test
adc
movs
push
add
lods
popf
sahf
jne
jle
mov
mov
dec
mov
scas
ror
dec
cwde
mov
and
mov
test
fcomi
push
sbb
sub
imul
mov
mov
cmp
add
dec
mov
xchg
sub
ror
pop
and
pushf
icebp
cmc
std
xchg
push
repz
out
sub
cmp
sub
fldenv
mov
jl
push
out
pop
test
push
jmp
cli
pop
jmp
jb
loop
xor
shr
lea
sub
fld1
inc
jmp
stos
inc
push
cmps
sub
sar
fnop
pushf
pop
cmps
add
out
xchg
mov
popa
cmp
jmp
sbb
push
pop
xchg
fbld
adc
mov
mov
(bad)
addr16
push
mov
pop
and
xor
iret
lea
mov
fimul
or
popf
jge
jbe
imul
or
jmp
fisubr
dec
arpl
xor
sbb
(bad)
xor
retf
pop
xchg
out
jmp
mov
push
xchg
jge
mov
pop
push
jno
clc
push
xor
jg
mov
sbb
push
inc
fadd
(bad)
adc
es
push
push
push
pop
popf
add
xchg
retf
stos
sub
mov
push
retf
xchg
pushf
iret
sub
xchg
mov
or
or
add
daa
iret
fdivr
and
cmp
mov
lock
into
out
loop
and
mov
idiv
mov
adc
dec
and
and
aaa
jnp
in
mov
loope
dec
jnp
ins
or
pusha
jecxz
jbe
add
pop
mov
inc
mov
fcomp
lods
inc
add
jbe
jne
imul
and
adc
in
iret
mov
ins
jb
pop
add
push
xor
add
(bad)
sub
add
push
add
cmp
imul
adc
jecxz
cmp
pusha
lock
jbe
aad
call
sub
cmp
or
pop
inc
pop
pushf
(bad)
cld
call
inc
cli
movs
pop
mov
inc
idiv
aam
mov
call
dec
add
jg
jne
gs
jg
popf
aad
jl
add
imul
loop
fsubr
out
cmp
sub
and
mov
jnp
dec
jp
mov
iret
xchg
ret
in
jp
fadd
push
mov
pop
jo
repnz
aas
popf
mov
cmps
push
rol
sar
mov
sbb
test
mov
adc
mov
gs
lahf
into
aaa
xchg
stc
add
(bad)
fnstenv
jne
test
cmp
mov
mov
popa
dec
push
call
mov
popf
mov
xor
sar
mov
cmps
imul
mov
sub
mov
push
mov
push
cmp
xchg
fisttp
ja
xchg
pushf
js
cmp
dec
stc
std
sbb
(bad)
jp
pop
call
div
pop
push
and
sbb
rol
xchg
jns
arpl
xchg
mov
call
sub
xchg
sbb
or
push
popf
ret
xor
jge
les
dec
lods
xor
out
jle
mov
test
lock
shl
jnp
retf
pop
mov
jmp
or
repnz
push
xchg
or
ins
push
mov
pop
pop
dec
inc
ret
adc
sahf
inc
into
jmp
inc
mov
and
xor
push
push
fistp
hlt
pushf
fwait
sbb
fs
or
repz
cmp
push
inc
rcr
cmp
test
cwde
jno
mov
dec
jno
and
mov
loop
mov
mov
imul
add
pusha
jmp
mov
mov
cmc
pop
icebp
lea
fisub
cmp
dec
pop
pushf
mov
jo
sbb
xor
in
mul
inc
xor
xchg
pushf
aas
ret
in
in
push
clc
fdivr
xor
adc
mov
pop
jp
push
and
cld
cli
push
inc
sub
push
daa
clc
fisub
and
movs
inc
stos
mov
sub
xor
out
daa
aad
pop
clc
jmp
xor
mov
mov
or
inc
xor
mov
mov
scas
or
cdq
dec
popf
lods
add
jge
mov
sub
je
push
js
sub
dec
adc
ja
or
test
xor
push
jge
adc
nop
mov
cmp
lock
shl
jae
mov
push
add
fstp
mov
jle
dec
inc
call
pop
adc
shl
mov
cmp
mov
(bad)
out
mov
sbb
inc
arpl
out
mov
or
push
sbb
cld
mov
xchg
and
inc
cld
in
outs
repnz
jl
das
or
pop
adc
test
mov
and
dec
push
retf
inc
mov
mov
pop
jo
call
and
mov
mov
mov
jp
mov
inc
rcl
jno
sbb
jmp
inc
imul
sub
mov
in
shr
xor
add
pop
cmp
or
retf
push
or
xchg
call
enterw
outs
pop
inc
les
mov
arpl
in
adc
pop
ds
inc
cli
loop
sub
pop
pop
cld
loopne
clc
vmovaps
xchg
repnz
pop
and
mov
sub
cmps
sub
movntq
out
out
neg
inc
xor
cld
clc
xchg
fwait
aas
push
cmp
into
mov
in
imul
push
iret
popa
mov
cwde
fs
fisttp
mov
add
mov
loop
xor
push
xchg
mov
rcl
cmp
jecxz
int
dec
pop
mov
mov
mov
dec
movs
mov
adc
jecxz
nop
mov
fcmove
leave
mov
inc
lds
adc
dec
icebp
daa
add
jnp
cdq
sbb
inc
and
inc
popa
jb
movs
cli
sub
cwde
cmc
pop
or
in
mov
mov
sbb
pop
iret
ds
dec
jae
or
sub
sbb
adc
jns
jp
sar
rol
mov
pop
xchg
stos
mov
sbb
loope
(bad)
dec
test
fdiv
loop
dec
mov
fadd
jae
xor
push
mov
sbb
jo
cmp
mov
pop
xor
mov
jne
iret
sbb
cmp
cmp
dec
mov
adc
add
(bad)
stc
mov
aam
(bad)
das
ror
cmc
loope
push
shl
dec
js
or
stos
popf
xchg
pop
or
or
repz
push
in
movs
xchg
test
pop
jns
rcr
xor
lock
or
inc
por
push
aaa
jg
fsubr
imul
or
mov
cmp
and
pop
jne
aad
mov
out
add
adc
xor
test
test
cmp
add
push
push
xor
arpl
or
je
loopne
fwait
inc
mov
fsubrp
adc
ins
jne
push
enter
xchg
pop
xor
jp
in
jl
xchg
(bad)
push
cmp
sbb
int
xor
mov
ret
cmps
rol
add
dec
push
test
mov
sbb
add
jno
inc
jecxz
pop
sub
dec
pop
pop
adc
shrd
cmps
push
sub
inc
add
or
popa
cmc
pop
push
xor
sub
data16
jo
scas
enter
dec
and
pop
jecxz
jmp
leave
dec
out
jne
fwait
and
pop
repnz
lods
sbb
dec
sub
pop
adc
in
push
js
push
pop
adc
ret
lea
iret
(bad)
xchg
xchg
xlat
fistp
retf
idiv
(bad)
outs
fld
mov
inc
test
cmp
sar
sbb
mov
pop
std
out
mov
jne
sub
xchg
cmp
retf
clc
inc
in
imul
gs
mov
es
inc
in
inc
sub
lock
retf
mov
retf
push
adc
adc
out
pop
adc
push
shl
cdq
into
out
dec
push
aam
sbb
push
mov
sahf
xor
jbe
daa
mov
inc
inc
pop
inc
jno
or
mov
add
push
mov
sub
inc
fcomp
sbb
push
retf
das
aad
sbb
ret
cmp
jle
repz
push
pop
ja
jge
shl
jp
push
in
dec
(bad)
pop
outs
fldcw
popa
xchg
pop
xchg
and
xchg
sub
scas
jmp
mov
sbb
mov
test
xchg
(bad)
outs
pop
int
cmp
or
(bad)
sbb
repz
jo
adc
daa
cmps
adc
repnz
push
cli
loopne
rcr
mov
daa
pop
inc
mov
inc
arpl
mov
call
loope
jno
test
dec
mov
mov
xchg
test
call
ss
in
rcl
hlt
jns
call
jnp
mov
jbe
div
push
js
or
gs
and
ja
iret
pop
add
cmp
call
adc
fadd
(bad)
fnstsw
fs
int
add
sbb
pop
push
ss
mov
lods
(bad)
jnp
aas
push
dec
ret
dec
daa
test
xchg
(bad)
sar
sahf
in
or
add
mov
or
cmps
inc
add
popf
popf
in
add
call
shr
div
cmps
inc
sbb
push
addr16
imul
(bad)
sub
xchg
aas
jne
xor
sbb
fistp
dec
xor
fcmovb
add
ins
(bad)
rol
adc
push
push
dec
(bad)
pop
sub
jmp
fmul
stos
cmps
shr
lds
test
jmp
xchg
jmp
and
popa
sbb
sbb
movs
sub
scas
sbb
dec
pop
pop
inc
repz
outs
push
mov
repnz
sbb
inc
add
xor
sub
out
adc
pusha
push
jmp
cmp
int3
les
sbb
mul
aas
or
xchg
dec
pop
push
mov
jns
or
jecxz
sbb
outs
retf
and
push
test
xchg
hlt
scas
sub
(bad)
jbe
push
fwait
lock
fcmove
adc
pushf
mov
dec
adc
and
retf
sub
ja
lea
add
clc
xor
sbb
push
add
dec
add
push
mov
fs
pusha
imul
lea
movs
call
adc
test
fidiv
add
pop
xchg
push
outs
adc
cmp
xchg
cli
inc
and
sub
pop
inc
jbe
inc
mov
scas
cmp
or
rol
mov
and
push
or
pop
(bad)
ret
cmp
inc
mov
push
adc
fisub
xor
push
scas
xchg
in
jmp
test
fistp
mov
jle
gs
call
add
and
sbb
dec
xor
jp
sub
dec
imul
adc
cmp
xor
stos
mov
jne
rcl
iret
push
or
test
ss
sbb
sub
dec
cmps
je
call
dec
and
(bad)
fisub
test
shr
fs
mov
add
or
data16
pop
pop
dec
loope
(bad)
cmc
pop
mov
sub
(bad)
xchg
mov
inc
fldenv
(bad)
add
ins
jg
cmp
cmps
xchg
fcom
cli
out
sub
inc
jecxz
mov
ror
stc
ins
std
je
mov
sbb
mov
push
xor
outs
movs
xor
in
aaa
out
aad
aas
inc
inc
push
push
cli
jnp
in
or
mov
xlat
xchg
xchg
dec
cmp
iret
test
xchg
add
sti
(bad)
xchg
jmp
gs
adc
push
adc
jle
mov
sbb
xor
sub
mov
(bad)
jmp
mov
mov
cmp
popf
cmp
push
jne
and
push
std
push
push
push
xor
imul
adc
jmp
stos
in
jge
shl
ja
fwait
pop
(bad)
loopne
lds
xchg
pusha
xor
dec
jp
retf
add
lods
ins
jecxz
not
fbld
push
(bad)
loopne
stc
in
movs
and
push
(bad)
cmp
mov
xor
add
loop
lods
pop
(bad)
fisub
(bad)
push
in
xor
shl
or
fcmove
mov
ficomp
lds
xchg
jp
jp
nop
mov
rcr
xchg
repz
movs
jne
outs
addr16
xor
(bad)
arpl
stos
stos
mov
shr
and
jb
fdivr
idiv
push
cmp
sub
stos
sahf
xor
or
imul
movs
or
ret
in
fdivr
push
das
(bad)
cmp
idiv
(bad)
lock
add
add
xchg
test
and
cmp
push
loope
xchg
mov
or
dec
sti
dec
jb
sbb
push
mov
adc
sub
push
adc
jno
sub
fwait
pop
add
ins
xchg
dec
cmc
ins
mov
scas
imul
dec
push
push
in
add
adc
jns
push
pop
lea
push
cmp
push
xchg
mov
push
sub
sti
shl
hlt
stc
add
pop
pop
pop
mov
loopne
xchg
cmc
pop
mov
(bad)
lea
popa
and
fmul
cdq
fcom
adc
xchg
xchg
xlat
and
sti
outs
inc
cmps
cwde
xlat
dec
lock
cmp
inc
sbb
jmp
dec
mov
or
add
push
dec
or
mov
mov
ins
movs
jge
push
cs
xchg
mov
pop
xor
stos
or
repnz
popa
dec
test
mov
ror
sub
and
mov
dec
and
ds
les
loopne
jo
fsubr
adc
jl
out
aaa
test
mov
dec
(bad)
sar
push
loop
popa
mov
stc
mov
stos
and
lods
pop
xor
pop
inc
(bad)
mov
mov
dec
in
cwde
test
cmp
jmp
je
popa
jmp
xchg
adc
iret
mov
adc
push
rol
fisub
xor
cmp
leave
add
(bad)
dec
out
push
ds
daa
dec
mov
sub
in
mov
xchg
jle
mov
cmp
push
mov
stc
int
cld
sbb
inc
xor
or
call
sub
push
int3
inc
fisttp
mov
(bad)
jp
mov
call
(bad)
pop
fld
sbb
or
adc
dec
out
mov
iret
shr
xchg
aaa
loopne
add
inc
sub
sti
push
enter
mov
or
rcl
cli
test
push
mov
test
pop
mov
int
xchg
dec
inc
(bad)
push
sbb
dec
stos
mov
rol
jnp
sub
jns
jo
sbb
ja
hlt
mov
nop
jae
jne
jl
and
retf
fwait
movs
popf
push
push
in
pop
push
inc
daa
cmp
jnp
fs
add
sub
call
push
push
mov
jecxz
sub
aam
jge
and
sbb
mov
mov
mov
pop
push
mov
and
fs
xchg
mov
mov
fdiv
mov
jns
mov
(bad)
sbb
xchg
repz
xchg
adc
mov
or
add
loopne
mov
jg
xor
jno
stos
mov
pop
pop
loopne
(bad)
xor
sti
pop
adc
cmp
or
lds
(bad)
mov
retf
jo
lods
inc
lods
rcl
xor
jo
sbb
retf
inc
xchg
pop
adc
xor
dec
mov
and
ret
rcl
dec
stos
cmp
xchg
sbb
les
setnp
in
movaps
mov
pusha
xlat
ds
sbb
dec
push
shl
push
cmp
push
cmp
inc
mov
or
cmp
jbe
(bad)
es
sbb
imul
inc
adc
or
out
movs
dec
retf
cwde
cs
add
sar
cmp
adc
push
pop
add
jno
scas
xchg
std
je
das
pop
jl
(bad)
cld
cmp
jg
adc
out
stos
inc
mov
dec
jl
mov
jmp
mov
cli
dec
xchg
fistp
loop
dec
imul
mov
lods
push
sub
in
(bad)
xor
sbb
sar
or
stc
add
xor
jbe
inc
(bad)
aas
push
mov
dec
sar
push
xor
hlt
ds
jb
dec
jnp
sub
cdq
(bad)
pop
mov
sub
or
pop
and
enter
(bad)
sub
push
das
out
addr16
leave
cli
test
stc
xor
mov
xchg
outs
dec
mov
aad
int3
jne
pop
jnp
inc
sti
imul
xor
xchg
in
outs
stos
push
(bad)
fisubr
mov
adc
sbb
and
push
retf
(bad)
jl
outs
ficomp
call
xor
ins
mov
xor
mov
add
mov
push
push
pop
jmp
call
addr16
vmwrite
pusha
daa
xor
aaa
push
(bad)
popf
jns
mov
add
pop
xlat
das
mov
jg
mov
scas
cdq
das
ret
and
xchg
(bad)
xor
dec
add
push
in
stc
std
ror
scas
xchg
xor
push
and
add
sbb
data16
xor
push
and
mov
pop
pop
test
test
dec
fadd
nop
sti
jbe
xlat
mov
fdivr
dec
loopne
mov
push
mov
movs
jmp
sahf
or
aad
popf
add
xchg
test
(bad)
dec
xlat
mov
push
pop
inc
jecxz
or
adc
(bad)
call
adc
mov
lock
into
je
push
mov
xlat
jno
sub
sbb
in
cs
icebp
mov
nop
pop
test
push
and
aad
push
out
push
data16
pop
(bad)
gs
(bad)
enter
stos
retf
adc
push
fsub
fwait
sub
xor
sbb
je
cmp
int3
xchg
add
outs
adc
jmp
adc
mov
mov
fwait
ja
lea
xchg
xchg
jmp
adc
sbb
mov
scas
test
sub
xchg
mov
xor
repnz
nop
imul
cmp
cmp
call
xor
pop
punpckldq
ret
inc
adc
mov
xor
call
sub
or
out
mov
repnz
mov
scas
inc
(bad)
(bad)
pushf
mov
repz
clc
sub
pop
ret
and
pushf
into
daa
mov
pop
movs
push
add
nop
sbb
inc
shl
xor
rcl
sub
adc
push
lds
add
fisttp
in
dec
jbe
aas
pushf
fstp
aad
shl
inc
out
cmp
test
popf
sbb
inc
add
pusha
pop
in
js
jecxz
adc
inc
pop
loopne
or
pop
mov
iret
lods
cld
sbb
or
cld
leave
out
bound
bound
sbb
(bad)
xlat
mov
cmp
imul
jbe
test
mov
cmp
dec
jo
(bad)
mov
sub
dec
pop
test
(bad)
fwait
inc
dec
sbb
jmp
jo
mov
std
loopne
ret
xor
test
ds
out
and
out
jle
ins
xor
inc
lods
sub
jge
xchg
movs
scas
test
ds
(bad)
add
add
xchg
(bad)
or
or
push
arpl
nop
mov
sub
add
jl
out
cld
cmps
out
xor
push
dec
cmps
outs
loope
push
retf
(bad)
xor
push
sub
jg
or
cmp
test
call
sbb
jle
aad
ja
retf
mov
pop
jae
and
int
test
adc
pusha
xchg
jp
in
cmp
xchg
xlat
stos
or
inc
jecxz
fwait
sbb
ins
imul
fnstsw
je
mov
cmp
in
fld
mov
aas
fistp
mov
push
not
sub
jnp
cli
rol
dec
push
xchg
loope
in
xchg
add
les
cmp
mov
cmp
dec
shr
add
adc
dec
push
sbb
mov
(bad)
ss
mov
sub
jo
push
jle
sbb
daa
aas
mov
sub
adc
mov
mov
test
adc
jmp
and
cmps
fidiv
into
mov
in
ret
cmp
pop
inc
aad
inc
lods
adc
fwait
mov
sbb
ret
fwait
inc
cmp
inc
inc
arpl
jp
movs
cs
adc
jmp
popf
cmp
sahf
adc
or
pushf
aas
add
or
sbb
cdq
ror
scas
jp
cmps
loopne
push
call
pop
bound
or
rcl
mov
pop
in
in
jge
fadd
ret
dec
mov
push
mov
stc
inc
dec
arpl
jo
xor
stos
sar
mov
pop
add
mov
je
icebp
cmp
pop
inc
mov
inc
and
(bad)
(bad)
mov
(bad)
add
movs
pop
(bad)
cli
int
add
jne
out
mov
fstp
dec
test
mov
push
inc
dec
lods
pushf
mov
fnclex
retf
xchg
sbb
or
test
adc
mov
ins
retf
pushf
push
das
push
or
sar
push
aad
ss
sbb
lds
or
push
jmp
(bad)
mov
outs
sub
cmp
or
inc
ror
shl
cmp
int
xor
push
push
in
imul
push
outs
cld
pusha
scas
popa
push
pop
fs
pop
adc
or
mov
ss
sub
ror
bnd
inc
pop
mov
push
int3
xor
arpl
cmc
push
movs
jmp
loop
imul
stc
dec
and
jg
retf
add
or
out
dec
sub
xchg
idiv
outs
or
cmp
loopne
cs
neg
lods
mov
mov
std
jg
cs
(bad)
cwde
clc
popf
movs
je
sahf
dec
loope
add
(bad)
jmp
enter
ror
jno
mov
xchg
popf
inc
inc
mov
and
cmp
jne
in
test
call
(bad)
mov
mov
dec
pop
add
les
xor
mov
fsubrp
push
or
push
hlt
cdq
popf
mov
sbb
or
or
cli
mov
ss
addr16
xchg
imul
int
and
adc
mov
dec
dec
lock
xor
xchg
sub
pop
ins
dec
mov
js
mov
or
mov
xor
cmps
int
scas
ud1
adc
pop
inc
cli
cwde
daa
in
cld
scas
xor
out
or
(bad)
gs
out
sbb
inc
push
and
cld
lock
xchg
les
in
cld
loop
outs
hlt
xor
or
sub
cmp
test
pop
outs
lea
repnz
dec
or
mov
xchg
rol
rcl
cmp
out
cs
nop
sbb
push
jg
dec
loope
std
(bad)
mov
adc
(bad)
arpl
in
rol
jae
xor
adc
imul
mov
out
pop
addr16
or
xchg
addr16
sbb
bound
adc
fbld
xchg
pop
jmp
sbb
rcr
mov
loope
fs
xchg
les
popa
xchg
mov
out
mov
nop
movs
fs
push
sbb
jb
(bad)
jecxz
jno
sbb
das
fcomi
push
push
fistp
in
fxch
xor
lock
dec
(bad)
loop
push
ins
sbb
xor
xor
jb
jecxz
cli
pusha
das
xor
daa
cwde
gs
lds
jp
ins
cmp
out
add
int
mov
outs
inc
mov
arpl
push
pop
fld
pop
cmp
test
jnp
mov
xchg
call
mov
aas
dec
arpl
imul
adc
scas
imul
(bad)
cwde
pusha
inc
loop
cmp
sub
jns
dec
out
inc
mov
push
sbb
pop
movs
pop
xchg
fcomp
cmp
out
clc
adc
ss
push
mov
mov
leave
pop
xor
nop
xchg
jmp
push
in
mov
pop
test
mov
dec
pop
ds
mov
inc
rol
out
mov
xchg
in
pop
(bad)
cmp
adc
in
repz
mov
test
(bad)
fst
adc
cwde
push
test
xor
test
int
mov
inc
in
push
xor
clc
add
rcl
push
aad
dec
pop
into
call
jl
pop
push
push
jb
mov
lock
enter
mov
call
(bad)
call
or
pop
test
xchg
xchg
dec
dec
aas
adc
pop
add
shufps
cs
enter
outs
jecxz
jmp
aam
(bad)
loopne
push
pop
xchg
rol
sub
in
daa
adc
push
loope
sub
bound
lea
jno
push
sbb
push
mov
(bad)
dec
retf
cs
mov
leave
jo
jmp
enter
mov
mov
jo
leave
mov
mov
xor
mov
push
ins
cmp
not
sub
jnp
outs
inc
not
scas
in
add
aam
ins
mov
fwait
jge
jmp
add
out
cmps
fld
enter
sub
(bad)
add
fst
jecxz
jmp
mov
pop
adc
out
lods
cmp
xchg
repz
shr
fisttp
das
ds
loop
mov
int
inc
pop
dec
dec
ins
adc
outs
sub
push
popf
(bad)
out
hlt
mov
ds
out
mov
(bad)
(bad)
pop
test
loop
and
inc
jl
leave
sbb
mov
imul
adc
dec
pop
popa
in
arpl
mov
enter
and
icebp
xor
gs
(bad)
pop
rcl
push
mov
shl
adc
mov
mov
pop
stos
jmp
in
popf
push
int
mov
pop
lea
ss
lds
rcr
retf
inc
inc
add
dec
jmp
push
push
(bad)
mov
icebp
ret
lods
stos
test
inc
cmp
shl
sub
and
daa
movs
xchg
test
and
push
jb
inc
mov
mov
enter
loop
or
scas
sbb
sub
int
aam
shl
cs
xor
bound
inc
fmul
dec
dec
in
or
lea
adc
cld
sti
pop
push
sbb
lea
mov
mov
dec
jle
mov
rol
sar
movs
stos
jle
call
add
out
dec
adc
(bad)
leave
bound
out
hlt
push
out
leave
lahf
lods
mov
das
cmps
movs
in
jge
dec
cmps
lahf
cwde
call
sahf
adc
fstp
push
push
jo
call
push
ss
push
xchg
fwait
leave
arpl
sbb
inc
pushf
fmul
push
pop
cmps
aam
mov
aaa
jbe
shr
sbb
sub
jnp
sbb
push
(bad)
daa
(bad)
mov
adc
loopne
ins
add
mov
cs
push
pop
xor
int3
xlat
aad
je
ins
dec
jecxz
hlt
cmps
push
mov
jl
cwde
mov
and
arpl
sbb
pusha
mov
pop
cmps
int
loope
inc
dec
shl
xchg
jo
pusha
mov
adc
stos
shl
dec
leave
icebp
popf
mov
mov
xchg
imul
outs
(bad)
cmc
enter
add
push
sub
cmc
stc
push
(bad)
xor
mov
fbstp
adc
jle
ss
push
jmp
retf
test
inc
xchg
or
ficom
jb
shl
imul
dec
pop
gs
push
ja
mov
mov
xlat
outs
fwait
jecxz
xlat
test
movs
mov
nop
inc
imul
mov
mov
cs
inc
sub
daa
pop
xor
add
xchg
icebp
mov
dec
repz
ror
push
cwde
mov
stos
pop
xchg
xor
icebp
sub
and
inc
(bad)
cmp
lods
test
arpl
retf
test
push
das
pop
push
jae
push
xchg
test
push
mov
sbb
into
mov
add
dec
inc
xchg
(bad)
pusha
push
ins
jmp
dec
pusha
and
cmp
push
stc
(bad)
mov
jp
fcmovnu
ror
mov
stos
retf
dec
enter
leave
rcr
fld
jmp
adc
pop
cmp
add
sbb
scas
dec
(bad)
rol
mov
lds
out
xor
stos
fnstsw
mov
mov
mov
push
rcl
mul
out
jecxz
stos
sbb
add
xor
mov
(bad)
dec
lds
or
lea
sahf
pop
xor
jg
dec
jmp
or
retf
push
rcl
add
fldcw
aaa
nop
xchg
out
sbb
js
push
inc
cli
sub
sbb
xchg
push
add
or
xchg
bound
sbb
rcr
sbb
lods
std
and
jae
sub
lods
shr
pop
add
add
out
mov
lds
xchg
jl
das
not
iret
xor
cwde
mov
dec
jge
rol
into
std
push
bnd
imul
adc
cdq
into
lea
ror
push
(bad)
jno
mov
fmul
out
sar
ss
add
adc
sbb
(bad)
mov
mov
mov
push
dec
inc
daa
sbb
popf
xor
xor
dec
or
inc
inc
xchg
je
stc
jmp
push
fcomip
mov
jmp
xor
lock
movs
adc
jmp
sub
pop
inc
cmp
adc
adc
in
fidivr
dec
jg
adc
jmp
and
and
shl
out
xor
test
ficom
call
mov
(bad)
mov
inc
in
xchg
inc
push
aam
or
sbb
arpl
fmul
icebp
add
xchg
das
movs
inc
(bad)
lea
push
rcr
sub
jle
adc
leave
fisttp
mov
mov
loopne
mov
arpl
loope
movs
xchg
jle
jae
rol
sbb
loop
jno
xchg
dec
inc
dec
in
jnp
into
dec
mov
sbb
push
out
aam
sbb
push
stos
loop
out
imul
jle
inc
movs
xchg
cmp
jg
push
jbe
pusha
int
dec
or
enter
pushf
popf
mov
dec
inc
sbb
enter
xchg
stos
mov
test
adc
bound
push
lds
mov
lahf
adc
sub
int
in
jmp
xchg
inc
ret
aam
and
and
push
inc
dec
repz
and
fisubr
push
add
data16
pop
mov
repnz
pop
idiv
les
je
add
jmp
sar
mov
mov
cmp
in
mov
xchg
data16
push
push
sub
add
adc
push
adc
shr
icebp
push
sar
sub
adc
pop
data16
jecxz
rcl
add
push
gs
enter
push
daa
mov
sub
mov
pusha
test
mov
js
push
cs
test
mov
mov
xchg
fidivr
dec
cmps
imul
cmp
jmp
or
loop
int
fcomp
jp
or
dec
es
mov
aaa
cmp
sbb
push
and
xlat
mov
out
bound
pop
int3
inc
xchg
dec
pop
or
jmp
(bad)
clc
mov
xchg
pushf
int3
pop
pop
sub
cld
pop
shr
sbb
jmp
sub
loop
and
xchg
push
jae
out
hlt
xor
jnp
xchg
mov
cdq
xlat
and
bound
push
xchg
xor
push
daa
mov
sbb
xor
aad
dec
test
sahf
out
mov
gs
test
in
in
je
cmp
xchg
jns
in
inc
test
jmp
movs
arpl
arpl
push
pop
mov
cmp
jl
mov
inc
jno
inc
or
out
add
sahf
cmp
lock
jmp
mov
cmp
(bad)
pusha
test
xchg
push
or
arpl
inc
nop
cmp
cmp
int3
lock
inc
jecxz
pushf
popf
add
pop
mov
lock
fimul
test
pop
add
mov
pop
xchg
(bad)
aam
push
jne
aaa
pop
dec
or
lahf
pop
fdiv
je
out
mov
fiadd
(bad)
iret
push
das
rep
frstor
test
cdq
int3
cmp
ja
test
jo
mov
cmp
popf
lock
inc
call
(bad)
sub
inc
mov
imul
cdq
sub
pop
sub
ja
push
leave
retf
ret
jp
rcl
sbb
es
and
xor
inc
pop
adc
cmc
jns
add
sar
aas
pop
outs
bnd
cmc
inc
ss
dec
cmp
mov
div
and
stc
(bad)
aam
enter
xor
fisub
adc
sbb
arpl
rcl
cld
cmp
arpl
jg
dec
adc
pop
pop
push
aad
jno
pop
cmc
mov
mov
ror
mov
(bad)
mov
push
in
adc
data16
sbb
fisttp
das
(bad)
xor
mov
sbb
cs
out
pop
push
push
mov
(bad)
fistp
cwde
mov
loop
sbb
dec
pop
push
xchg
pop
cmp
adc
pop
outs
out
or
mov
inc
sub
lods
xchg
dec
xor
jmp
ins
dec
(bad)
xor
sbb
dec
loopne
xor
adc
lahf
xchg
cmps
arpl
mov
jno
xchg
xor
leave
test
sbb
xchg
enter
repnz
std
lds
std
push
push
dec
mov
ins
ret
stc
stos
movs
xor
jo
es
sbb
jnp
mov
jmp
in
int3
mov
jecxz
or
and
jge
cmc
cmc
cmps
movs
mov
(bad)
pop
clc
iret
pop
hlt
out
fwait
mov
loope
sub
push
add
cld
aas
test
mov
repz
stos
or
mov
push
add
mov
xlat
pushf
repz
cdq
jns
jp
push
outs
mov
ins
clc
xchg
sub
push
ja
or
pop
mov
jmp
fadd
cmc
pop
cmp
daa
sub
or
and
push
jae
sub
out
jg
sub
mov
push
or
sub
mov
nop
or
aaa
mov
hlt
stc
test
sub
xchg
cld
enter
sub
jge
mov
ret
xchg
pushf
(bad)
outs
adc
das
sahf
jg
pop
addr16
sub
mov
push
aad
mov
clc
inc
or
outs
das
mov
dec
jne
xor
adc
retf
imul
and
gs
pop
mov
xchg
mov
retf
comiss
in
stos
das
mov
(bad)
fld
add
pop
xor
popa
cmp
inc
mov
je
dec
jg
or
hlt
mov
mov
mov
pop
push
push
repnz
jg
in
repnz
bound
mov
mov
sub
adc
add
daa
mov
push
cmp
pop
xchg
xchg
sub
xor
mov
dec
push
retf
in
cmp
clc
pop
loop
xlat
add
adc
sub
xor
(bad)
movs
pop
jne
sbb
sub
retf
or
mov
and
mov
add
bound
(bad)
xor
jmp
ins
test
and
push
jmp
dec
cmps
loope
push
mov
cmp
cmc
lods
aam
xadd
inc
xor
or
cmp
shr
and
out
cdq
sbb
and
in
test
xchg
sbb
jnp
(bad)
movs
dec
pop
lea
ins
js
mov
pause
push
sub
clc
mov
jmp
dec
popa
mov
cld
mov
in
add
(bad)
stc
enter
sbb
outs
cli
inc
and
in
push
stos
dec
ja
mov
(bad)
repnz
jp
cmp
inc
mov
out
mov
and
cmps
jmp
pop
(bad)
or
leave
fst
xor
push
fild
repnz
push
push
and
push
aas
fs
test
xor
lea
daa
bts
or
stos
jle
and
mov
xchg
daa
sbb
jg
xchg
das
sbb
jmp
push
test
lods
(bad)
and
xor
mov
jns
outs
outs
sub
loope
mov
dec
sub
push
push
adc
adc
mov
jge
pop
cld
add
adc
(bad)
mov
ror
sbb
sbb
in
pushf
(bad)
int
loopne
rol
sub
fst
dec
push
lock
repnz
ds
sar
push
xor
out
shr
rcl
ja
movs
mov
add
xchg
repz
lahf
ja
xchg
sbb
inc
cmp
adc
inc
dec
adc
mul
loopne
cwde
call
and
add
adc
es
inc
rol
ins
outs
arpl
push
push
xor
imul
and
cmp
mov
ficomp
jb
cs
or
rcl
test
xor
icebp
out
les
test
push
dec
dec
fst
not
fild
mov
sub
push
pop
cmp
mov
daa
rcr
das
inc
or
fdiv
stos
inc
sbb
aas
mov
cwde
sti
(bad)
jnp
arpl
add
inc
push
xlat
xchg
or
call
mov
ret
mov
xor
cmp
or
shl
xchg
inc
int
sbb
(bad)
jecxz
gs
cmp
xor
push
push
popf
jb
mov
dec
xchg
movs
int
jle
in
ja
xlat
mov
les
inc
add
(bad)
sar
mov
clc
jb
(bad)
fwait
jne
pop
jle
es
scas
sub
int
fild
cmps
and
jne
fidivr
xchg
add
leave
ds
xchg
xchg
mov
seto
cmps
pushf
jo
in
outs
push
jo
aas
out
inc
xchg
adc
call
cld
lds
icebp
(bad)
cwde
mov
adc
addr16
stos
popa
cmp
jp
or
push
and
push
test
call
push
repz
xor
mov
inc
sub
outs
popf
mul
xor
(bad)
pop
or
loop
ret
cdq
jb
bsr
push
daa
in
jp
aas
add
fist
daa
fidiv
jno
sub
lock
popf
mov
mov
xchg
(bad)
popa
push
mov
outs
pop
nop
das
and
es
cmp
shr
sub
repnz
jno
mov
pop
push
sahf
add
inc
adc
xchg
sbb
mov
mov
adc
out
dec
cmc
stos
call
jg
outs
pop
(bad)
call
(bad)
or
fadd
jmp
jge
inc
dec
out
jno
mov
xchg
mov
loop
jae
test
xor
mov
jnp
test
out
push
jle
cs
push
or
cs
es
xchg
push
(bad)
sub
mov
aad
or
retf
into
or
push
mov
sbb
cli
sar
add
pop
bound
jmp
xlat
in
xchg
mov
leave
imul
push
inc
xlat
popf
scas
lock
or
fimul
stc
sar
xchg
not
cmp
push
lods
cmp
pushf
rcr
mov
xchg
imul
adc
js
mov
pop
imul
push
(bad)
push
push
aam
pop
push
jnp
push
mov
pop
xchg
stos
aad
ret
and
mov
les
mov
es
xchg
call
adc
dec
iret
pop
outs
cmps
cmp
test
cs
jbe
iret
jecxz
daa
ds
xchg
sahf
push
mov
(bad)
stc
add
stc
xchg
jbe
data16
cmp
xchg
add
cld
mov
shl
xor
mov
leave
jo
bound
fwait
inc
addr16
(bad)
dec
retf
jno
ror
jnp
mov
xor
lea
imul
inc
push
test
cli
jns
push
xchg
adc
gs
pop
stc
pop
push
data16
cmp
aas
fwait
mov
rcr
push
mov
scas
dec
nop
inc
sti
jbe
pop
mov
shl
sub
mov
jae
(bad)
hlt
test
xor
xor
add
cmp
stos
push
pop
outs
xor
and
call
hlt
shr
jnp
dec
push
adc
push
xchg
repz
jmp
mov
sbb
out
js
ja
sbb
jecxz
popa
sahf
popf
xchg
scas
call
inc
shl
xchg
cmp
push
add
jmp
jp
push
std
inc
cmps
xor
mov
je
mov
or
test
(bad)
mov
sub
sbb
xchg
shl
imul
jae
push
fldcw
call
push
scas
adc
mov
das
push
mov
add
and
pop
(bad)
ret
mov
(bad)
jns
sub
(bad)
in
mov
ins
rol
in
gs
xor
xchg
adc
jne
jnp
inc
cmp
ins
shl
in
mov
mov
cs
mov
addr16
mov
sti
(bad)
xchg
imul
adc
popf
mov
sbb
xor
jg
ins
dec
mov
(bad)
call
(bad)
shr
add
gs
pop
cmp
imul
and
mov
mov
iret
sbb
in
xor
imul
push
or
sbb
pop
icebp
xchg
push
sub
stos
inc
fstp
or
inc
popa
pop
out
icebp
mov
jno
pop
add
or
mov
mov
fisttp
daa
call
mov
jl
nop
cwde
popf
(bad)
pop
jmp
aaa
push
leave
adc
mov
in
mov
popa
scas
xor
popa
adc
xor
push
xor
rcl
push
shl
inc
push
lods
retf
cmp
ins
imul
cmp
mov
gs
cmp
mov
bound
inc
and
pop
mov
sub
in
mov
cmps
dec
mov
test
pusha
fsubp
iret
(bad)
jne
in
jmp
jae
or
xchg
cmp
xlat
fwait
stos
add
ins
dec
sbb
pop
(bad)
push
outs
sahf
gs
lods
sbb
out
lock
(bad)
push
pop
fcomip
aam
loopne
outs
push
xchg
jbe
into
into
sbb
mov
jmp
mov
repnz
mov
push
cmp
push
fsub
je
popf
icebp
cmp
or
cdq
add
push
popf
dec
outs
inc
jle
test
cmps
ja
mov
sbb
lods
cmc
icebp
out
popf
mov
mov
sub
movs
lods
aas
lods
in
hlt
fdiv
adc
sub
loopne
pop
not
cmc
(bad)
ins
in
xlat
xchg
or
popf
mov
or
fimul
in
in
pop
jb
dec
outs
(bad)
push
jl
mov
mov
call
lea
push
sbb
pusha
push
xor
sub
outs
inc
xor
mov
cmps
xlat
mov
xchg
adc
iret
inc
xchg
cmps
sbb
push
jno
xchg
rcl
add
(bad)
fild
push
and
aad
xor
gs
pop
ds
and
jg
push
pushf
mov
sub
scas
ret
out
jle
je
hlt
int
ins
stc
out
loope
mov
pop
sahf
sub
mov
sbb
dec
cs
push
(bad)
imul
push
jp
add
push
add
out
push
sub
or
cdq
shl
pop
push
lods
jmp
or
sahf
jnp
fimul
jbe
dec
fiadd
dec
mov
xchg
ins
xchg
sbb
retf
mov
or
mov
(bad)
sar
sub
cmp
retf
loop
pop
(bad)
mov
push
adc
ret
cwde
movs
mov
icebp
xchg
mov
push
fild
sbb
dec
cmp
clc
or
fst
push
dec
fiadd
loope
adc
popa
lods
push
lds
and
das
in
cld
movs
scas
fld
pop
ja
pop
pusha
push
test
cs
lods
shr
in
pusha
sbb
and
outs
repz
dec
ret
(bad)
sbb
ror
out
mov
dec
adc
test
clc
popf
cli
stc
in
es
loope
fcmovnbe
lea
sub
xor
lods
jbe
repz
sbb
fadd
nop
mov
imul
push
jmp
push
test
cmp
and
or
cmp
jb
mov
popf
hlt
mov
sub
std
rcl
dec
xor
leave
add
xlat
ret
cmp
std
hlt
sahf
adc
(bad)
out
es
xor
dec
adc
inc
sbb
(bad)
pop
jo
dec
stc
test
cmps
or
call
jecxz
xchg
or
ja
mov
leave
ret
ror
push
sbb
int3
xlat
pop
add
xor
cmps
mov
scas
push
adc
popa
xor
daa
mov
mov
ficom
ins
jo
sbb
dec
imul
cmp
mov
inc
mov
cmp
jmp
mov
mov
and
add
iret
pop
push
or
inc
inc
popf
test
and
and
jo
aad
fstp
ins
(bad)
pushf
inc
inc
xor
ins
in
jle
or
pushf
and
xchg
xchg
jbe
sub
test
stc
sub
or
xchg
mov
add
les
add
(bad)
mov
pop
pop
ins
movs
jecxz
sub
push
push
or
mov
daa
gs
repz
xchg
js
(bad)
in
or
jno
sar
add
aam
sti
inc
fs
sahf
cli
mov
jecxz
aas
ins
or
jle
fild
jl
fidivr
cld
loopne
xchg
icebp
cmp
cs
cs
arpl
mov
xor
enter
push
mov
push
mov
es
mov
ss
jle
push
shr
mov
lock
mov
clc
sub
pop
mov
jmp
out
mov
push
movs
jnp
aaa
push
(bad)
cmps
je
mov
push
mov
push
daa
and
test
adc
push
or
shr
repnz
pop
jns
or
mov
ss
jmp
inc
fcos
inc
out
out
and
jo
fsubr
idiv
mov
fsubr
mov
int
out
lods
call
adc
mov
or
movs
cmps
xor
cli
leave
gs
cmp
pushf
inc
dec
push
mov
mov
and
mov
in
sbb
mov
in
repnz
mov
jmp
sub
sbb
retf
cmp
jbe
pop
mov
jns
xlat
mov
inc
aaa
lea
rcr
movs
mov
mov
dec
adc
ret
ss
test
dec
in
jp
sbb
cmp
call
or
mov
fdiv
xlat
fwait
pop
sub
scas
ret
call
out
adc
sbb
add
mov
sar
add
jge
mov
add
jns
cmp
clc
adc
sub
pop
test
add
test
loopne
pop
scas
jae
xor
(bad)
retf
lea
fsub
(bad)
adc
idiv
outs
sub
loopne
mov
gs
pop
inc
in
jle
adc
sar
les
mov
lock
retf
mov
and
jno
mov
fwait
imul
add
xor
sbb
iret
push
stc
mov
packssdw
mov
test
loope
or
out
retf
into
std
sub
cmc
ret
in
mov
ja
scas
pop
stos
sub
fld
adc
ficom
shl
cld
icebp
jmp
push
adc
jmp
cmp
and
or
jle
or
sbb
xchg
inc
cmp
inc
ins
repz
sub
mov
jbe
popaw
and
rol
fs
jnp
leave
push
hlt
mov
or
sti
adc
adc
dec
pop
mov
mov
pop
mov
rcl
or
or
xlat
mov
mov
ret
(bad)
inc
loope
into
ja
push
xor
jp
sbb
add
fcom
adc
lahf
sti
aad
jb
test
mov
mov
mov
fcmovnb
in
ret
jo
xchg
push
nop
mov
aas
ret
push
ret
mov
bound
sbb
test
dec
sub
cmc
std
and
add
scas
sbb
ficom
cmp
lods
cli
test
push
(bad)
retf
fist
in
ds
aam
pusha
adc
pusha
repnz
mov
std
inc
xchg
call
ret
hlt
iret
fst
jmp
test
enter
repnz
xchg
jns
pop
jbe
cmps
mov
mov
mov
mov
(bad)
clc
sbb
adc
repnz
push
std
call
in
dec
xchg
imul
inc
sub
sub
inc
into
out
dec
out
mov
icebp
loop
leave
jle
out
outs
movs
ret
ins
retf
popa
mov
jb
adc
and
int3
or
xor
mov
movs
test
mov
sub
adc
lock
enter
jmp
cwde
sar
cli
mov
fwait
bound
mov
outs
hlt
mov
rcl
cld
jg
xor
mov
sbb
fistp
lahf
push
adc
imul
aad
or
add
sub
sub
xor
mov
push
add
add
out
dec
sti
(bad)
jmp
jecxz
jecxz
cmc
gs
aaa
sbb
not
sub
stc
movs
addr16
jns
mov
xor
movs
adc
sub
cmps
outs
mov
mov
movs
inc
push
and
ret
add
adc
inc
mov
jo
pop
movs
cmp
dec
push
retf
mov
mov
add
(bad)
ds
xor
mov
mov
and
adc
rcl
mov
jg
inc
jns
fistp
jns
pop
int
adc
movs
mov
in
inc
fld
ret
push
add
in
cmovne
mov
inc
pop
(bad)
pop
lods
sub
(bad)
iret
xor
ja
xchg
mov
and
mov
fcmovb
jmp
mov
rcr
pushf
xchg
add
or
sbb
push
cmp
jg
retf
dec
mov
xor
loope
jnp
inc
bswap
or
mov
xor
mov
xlat
sti
sub
sub
xor
or
add
push
or
mul
add
and
rcr
dec
(bad)
(bad)
sti
sbb
jmp
push
stc
pop
xchg
dec
lds
sbb
aaa
js
in
(bad)
jecxz
jl
mov
adc
daa
push
cmp
mov
scas
ins
pop
dec
daa
nop
gs
(bad)
shr
sar
js
(bad)
loope
stos
mov
aaa
leave
cmp
icebp
scas
es
adc
mov
stos
sub
outs
clc
sbb
test
sahf
test
stos
and
int
or
(bad)
aam
loopne
mov
mov
pop
cmps
dec
gs
cli
lahf
dec
dec
popa
leave
stos
retf
mov
push
pop
ds
mov
mov
out
scas
pop
fdivp
movs
iret
ret
cmp
aas
std
xor
dec
xor
jge
mov
cmp
ror
push
not
jg
fwait
xor
ret
lahf
cwde
psubusb
dec
mov
stos
dec
mov
push
enter
pop
xor
jl
call
inc
push
(bad)
(bad)
jl
xor
retf
out
fsubrp
ins
pushf
and
test
out
sub
icebp
inc
cmps
xlat
jecxz
pop
pop
outs
shl
push
mov
sub
jae
inc
and
add
push
popa
cmps
or
or
push
inc
frstor
add
mov
cmp
popf
lock
sub
mov
mov
jp
imul
sahf
fidiv
pushf
leave
mov
scas
sbb
daa
aaa
mov
dec
xchg
bound
pushf
sbb
mov
gs
pop
fnstenv
xchg
std
push
mov
xor
hlt
or
dec
xchg
shl
jno
push
pop
cdq
mov
cld
imul
ja
mov
aas
push
sub
inc
jmp
lods
fdivr
jp
push
dec
and
arpl
in
push
movs
retf
push
je
sbb
(bad)
push
mov
inc
(bad)
sub
or
or
dec
or
dec
cmp
ins
and
mov
shl
icebp
xor
shl
xor
mov
and
sbb
dec
or
mov
lahf
pop
repz
xchg
jns
pop
xor
jns
xchg
loope
div
sahf
or
(bad)
mov
jl
jne
push
pop
jb
and
cmps
leave
mov
(bad)
ja
adc
test
es
mov
ficomp
outs
scas
call
sbb
sbb
pop
hlt
mov
jmp
stc
jg
movs
mov
sub
sbb
sbb
imul
fadd
aad
sub
gs
inc
add
sbb
out
push
rcr
add
xchg
xor
(bad)
mov
fbstp
xchg
cmp
lock
repz
pop
cmp
jl
out
addr16
mov
retf
xchg
test
sub
mov
ins
jo
and
imul
inc
icebp
cdq
leave
push
push
xchg
aad
(bad)
inc
xor
shl
or
cdq
add
push
repnz
mov
or
call
xchg
pop
sub
mul
pop
les
add
hlt
popf
pop
xor
in
cmps
add
arpl
mov
or
(bad)
lahf
idiv
icebp
imul
dec
jg
mov
adc
movs
(bad)
inc
out
sbb
pop
xchg
or
ds
push
stc
cmps
rol
mov
or
mov
inc
movs
xchg
sub
jg
iret
sbb
test
adc
out
sbb
lods
dec
pop
std
push
xor
mov
or
mov
cmp
outs
in
mov
aaa
pop
pop
outs
pop
addr16
addr16
xor
ret
mov
ds
mov
imul
mov
adc
pushf
and
xlat
and
(bad)
mul
sbb
mov
loopne
pop
mov
rcl
mov
out
and
add
add
movs
jno
popf
ror
aam
ja
push
add
push
or
fld
pop
add
sub
mov
cmp
inc
pop
call
mov
fwait
mov
lods
sbb
fcom
and
add
adc
repnz
stos
(bad)
data16
xor
pop
jbe
mov
fnstsw
fcmovnb
cmp
popf
mov
lock
sub
bound
inc
xor
adc
lea
std
clc
sahf
jne
mov
or
and
repnz
cmps
stos
or
mov
repnz
cmp
jle
mov
mov
cmp
xchg
fdivr
adc
imul
lahf
int
repz
sub
jae
jg
dec
(bad)
mov
lds
xchg
icebp
ret
pop
sub
imul
shl
cmp
mov
leave
and
inc
inc
movs
aam
ror
mov
lods
lods
test
xchg
(bad)
adc
sub
push
add
and
sub
pop
adc
push
out
mov
repnz
mov
inc
or
movs
outs
push
mov
adc
mov
xor
mov
dec
enter
inc
mov
jg
stos
xor
push
sbb
dec
add
pop
mov
arpl
in
sub
loopne
and
jp
mov
sar
lahf
jecxz
xchg
arpl
lods
movs
iret
cmps
jbe
(bad)
adc
(bad)
test
fidiv
jne
pop
adc
jmp
cli
jae
xchg
push
push
or
adc
adc
pop
test
retf
jmp
(bad)
lock
xor
data16
or
hlt
test
push
adc
jne
jo
inc
int
lods
xchg
stos
inc
mov
les
adc
xor
stos
aas
add
call
int
enter
pop
or
mov
cmc
mov
movs
in
fs
idiv
add
jae
imul
test
mov
fdivr
push
adc
xchg
addr16
rcl
call
xor
jle
rcl
mov
fist
(bad)
push
test
mov
pop
pop
(bad)
jl
in
jl
add
sbb
call
xchg
shl
jmp
jp
enter
adc
push
xchg
repnz
jmp
xlat
or
mov
or
cmc
ret
fsubr
(bad)
(bad)
xchg
inc
fcmovb
sahf
out
xchg
mov
mov
es
inc
cmp
call
mov
xlat
movs
cmps
mov
dec
fisub
push
and
gs
out
icebp
mov
sbb
(bad)
shr
cdq
dec
arpl
inc
and
fdivr
xchg
jecxz
add
ja
lock
cmps
setbe
push
(bad)
out
mov
dec
cmps
cmp
ret
jle
ja
jo
retf
inc
jo
aad
mov
xchg
test
mov
test
rcr
push
and
(bad)
xor
jno
and
xlat
nop
xchg
imul
cmps
adc
or
ins
ss
mov
mov
or
sbb
jp
mov
push
call
repz
sbb
push
mov
push
push
inc
movhps
mov
test
xlat
xor
loopne
adc
xor
fdivr
test
or
xor
sbb
jle
xchg
jne
xor
fist
or
and
call
xor
xchg
daa
cmp
int
shl
rcr
add
mov
leave
push
fs
mov
es
jmp
mov
daa
out
sbb
cmp
imul
cmps
and
xchg
dec
setns
mov
mov
(bad)
loopne
int
out
fiadd
mov
movs
xor
movs
rcl
add
fxch
in
dec
into
jmp
fnstsw
xor
stos
add
cmc
push
push
dec
cwde
pop
leave
push
je
xor
(bad)
daa
mov
sub
cmc
mov
cdq
es
cmc
or
(bad)
xchg
mov
jae
int3
lods
adc
fiadd
mov
enter
mov
mov
mov
neg
hlt
jae
and
mov
out
sbb
inc
jmp
fldz
or
pinsrw
push
int3
sar
(bad)
(bad)
dec
mul
les
hlt
cmp
lahf
and
cmps
jae
lds
icebp
xchg
(bad)
and
dec
fwait
mov
dec
call
shl
es
stos
(bad)
dec
cld
dec
sub
pop
sub
sub
adc
daa
pop
jp
retf
pop
popa
xchg
and
test
or
sbb
or
adc
push
add
lea
sub
scas
lea
pop
mov
xchg
loopne
push
pop
and
dec
mov
xor
fiadd
std
xlat
push
and
shl
mov
sub
out
mov
(bad)
push
lods
inc
push
xchg
xor
cs
enter
int
fadd
adc
icebp
xor
cmp
add
nop
dec
test
fcom
fnsave
add
xchg
pop
ret
xchg
add
cmp
movs
push
mov
dec
xlat
and
mov
jb
pop
jl
jns
jbe
jmp
outs
das
movs
in
jp
dec
adc
scas
dec
xchg
loope
push
pushf
fsubr
in
mov
mov
mov
hlt
ja
pop
ins
sub
cdq
clc
sbb
xchg
test
xchg
pusha
cdq
or
loopne
sub
sbb
xor
ja
out
and
aaa
mov
test
test
mov
adc
xchg
not
dec
jo
sbb
es
sub
xlat
xchg
mov
pop
adc
dec
imul
fiadd
jns
push
add
dec
mov
out
pop
icebp
dec
pop
cs
sub
push
ja
fild
or
leave
gs
jb
ror
mov
cs
jl
sbb
xchg
test
mov
lds
inc
mov
lahf
xchg
mov
sub
es
fcom
(bad)
cld
jb
rcl
jb
ja
pushf
mov
cmp
call
dec
aad
mov
dec
mov
or
sahf
mov
cwde
dec
xchg
rol
jge
cs
sbb
xchg
sub
je
or
test
scas
outs
xor
cmps
inc
inc
ret
mov
and
rcl
push
push
pop
pop
fimul
hlt
gs
stos
fadd
scas
ins
addr16
aas
inc
retf
mov
out
sbb
cmp
mov
xchg
pandn
mov
loope
jp
ret
sbb
aad
mov
inc
ret
push
inc
daa
mov
je
gs
gs
mov
hlt
xchg
cmc
pop
xor
mov
cli
sub
add
pop
cdq
call
fnstsw
xchg
arpl
movs
add
inc
pusha
push
(bad)
out
int
push
xor
(bad)
mov
xchg
(bad)
mov
adc
adc
ins
pop
push
add
xchg
fcomp
lods
cdq
mov
cmp
xchg
popa
xchg
mov
inc
jns
rol
retf
ficomp
out
mov
pop
add
jmp
adc
lds
(bad)
jl
mov
sub
clc
inc
lahf
enter
add
jbe
push
call
scas
nop
pushf
cld
dec
pop
push
(bad)
jne
cmps
aam
icebp
pop
scas
xchg
mov
adc
add
(bad)
aas
ret
nop
rcr
int
mov
mov
inc
lods
clc
fistp
cmp
popf
push
out
sbb
aad
cld
in
pop
into
mov
loope
ret
lahf
js
adc
fcomp
pop
ins
cmps
pop
and
pop
lds
xchg
xor
je
pop
out
ror
pop
adc
and
cmps
pop
cmp
push
arpl
cmps
out
pop
stos
(bad)
in
imul
(bad)
cmp
out
jnp
push
adc
fadd
mov
sub
aaa
jnp
cmps
into
rol
pop
data16
je
xlat
aas
cmp
ins
cmp
push
in
shr
cmp
adc
mov
jle
push
mov
jno
imul
shl
push
mov
mov
dec
ins
scas
pop
adc
push
fwait
sbb
imul
push
inc
sub
pop
inc
lock
jmp
inc
jne
mov
sbb
je
std
dec
inc
sbb
cld
nop
cmp
mov
aad
out
push
aam
jae
lods
or
es
(bad)
mov
mov
or
fadd
cmp
popa
inc
and
adc
push
(bad)
xor
dec
jns
ror
sub
mov
xchg
mov
add
xlat
adc
adc
leave
call
mov
add
sbb
sub
push
cmp
rol
popa
data16
mov
push
fsubr
cmps
popf
mov
or
stos
cs
loope
fcomp
loope
stos
imul
(bad)
sbb
dec
xchg
imul
ins
imul
lahf
mov
and
dec
mov
shr
lar
adc
addr16
cld
mov
add
adc
jo
mov
and
mov
cmp
pop
shl
jnp
mov
jne
lods
xchg
arpl
sbb
pop
aad
movs
sub
mov
jl
mov
scas
adc
push
test
xor
int3
lods
adc
or
dec
sbb
and
mov
jg
xchg
sahf
pop
(bad)
call
fbld
sbb
mov
dec
cmps
pop
xor
ins
sub
or
stc
ss
pop
sbb
popf
jp
mov
or
pop
mov
mov
push
in
ja
mov
jns
into
cmps
imul
sbb
jno
ret
fnstenv
mov
mov
adc
lods
in
(bad)
aaa
pushf
(bad)
sti
(bad)
mov
xchg
inc
std
not
lahf
push
(bad)
pop
imul
icebp
ret
mov
call
ficom
sub
jbe
in
jg
inc
mov
xor
jecxz
and
mov
sbb
scas
sub
push
mov
sub
dec
cmc
fisub
das
jo
push
int3
add
xor
cmps
xchg
fisub
pop
mov
adc
pop
enter
mov
add
jle
inc
lock
mov
jae
dec
push
jge
fdiv
retf
sbb
jae
cmp
and
jno
xor
sbb
daa
dec
mov
jnp
rcr
enter
jecxz
retf
mov
ret
mov
push
add
inc
pushf
fisttp
lahf
sbb
repz
adc
dec
gs
or
mov
cli
xlat
and
xor
inc
fbstp
dec
pop
data16
push
xchg
mov
(bad)
fcom
out
jmp
adc
scas
cli
pop
sub
sbb
adc
outs
lods
movs
mov
bound
test
xor
cmp
leave
lea
jg
and
sub
mov
aad
mov
xor
cmp
fwait
aaa
ss
retf
dec
test
xchg
fld
jnp
and
or
pop
shl
xor
adc
push
dec
retf
enter
and
pop
inc
mov
fisubr
jae
out
cdq
mov
pop
test
inc
addr16
or
out
rol
lea
or
es
js
push
xor
mov
loopne
cld
and
lods
(bad)
cmp
sar
sub
leave
sbb
cs
and
(bad)
sti
aas
sbb
aam
stc
lods
cmps
sub
cdq
aam
mov
call
and
shr
mov
sub
test
adc
(bad)
dec
in
xchg
push
jle
inc
inc
cmp
jns
jmp
hlt
jp
pop
inc
js
movs
js
(bad)
loopne
aas
(bad)
mov
fcomp
adc
mov
pop
jle
xchg
cmc
iret
call
out
aaa
or
icebp
fmul
repz
cmp
pop
push
outs
xor
or
clc
std
(bad)
jne
js
pusha
mov
xor
adc
jg
mov
pop
dec
in
dec
and
cmp
clc
fsub
cld
xchg
push
ret
and
fimul
mov
cwde
add
clc
cs
nop
bound
add
inc
std
xor
sub
pop
repz
xchg
mov
jns
jmp
ins
fwait
movs
jne
mov
push
psrad
fdiv
mul
or
pop
in
dec
xchg
in
xlat
fwait
mov
mov
pusha
jmp
jb
in
(bad)
(bad)
js
into
jge
stos
and
cld
sub
and
imul
aaa
fcom
mov
loope
xor
xor
rol
aas
loope
fldenv
das
movs
mov
pushf
xlat
push
xchg
ds
add
adc
movs
push
sbb
jb
push
ret
sbb
jecxz
shl
xor
fs
cmp
pushf
mov
jo
jnp
rcr
mov
sub
mov
jg
sub
gs
mov
and
or
popa
mov
popf
in
iret
retf
inc
mov
cdq
(bad)
lahf
push
push
add
pop
into
outs
into
neg
mov
dec
adc
push
sahf
pop
(bad)
push
sbb
lods
ret
or
and
fsubp
sbb
movs
adc
push
push
mov
cmp
out
mov
enter
adc
test
and
loop
mov
cmp
dec
sbb
pop
xchg
mov
es
push
jno
add
mov
mov
adc
mov
sbb
ret
stc
dec
ins
dec
cmp
sbb
js
mov
retf
jge
outs
rcr
outs
push
inc
pop
repz
pushf
lahf
aam
popf
fadd
xchg
dec
xchg
mov
push
inc
add
xchg
jmp
adc
inc
retf
xor
mov
retf
mov
push
cmc
push
in
loop
or
mov
push
cmc
mov
aaa
cmp
out
ds
push
jno
sub
(bad)
imul
dec
fucomip
push
cli
daa
push
push
pop
adc
mov
inc
cmp
fisub
test
mov
xchg
add
sbb
retw
rcl
repnz
nop
add
scas
mov
xlat
out
std
dec
fs
add
mov
jmp
popa
jne
pushf
or
adc
das
dec
cmp
inc
and
std
out
sub
xchg
adc
xor
mov
fisub
pop
neg
call
push
mul
mov
add
mov
sbb
(bad)
leave
and
into
aam
cmp
jecxz
sub
jmp
pusha
fadd
sbb
sbb
mov
cmps
add
push
jp
shr
vmovddup
fld
jmp
repz
sbb
sub
pop
call
mov
push
mov
fisttp
pop
xchg
dec
into
adc
movs
addr16
test
sub
cmc
mov
ins
and
adc
add
push
pop
dec
cmp
(bad)
xor
dec
pop
or
pop
and
movs
or
push
jns
push
(bad)
jnp
inc
add
mov
test
mov
adc
push
and
cmp
inc
in
cdq
xor
and
movs
sbb
dec
shr
cmps
ss
sbb
mov
pop
or
push
ret
xchg
add
sub
nop
shr
pop
pop
or
jb
pop
push
or
push
sbb
sbb
stos
mov
add
lds
push
mov
mov
arpl
xor
mov
xor
mov
das
je
lock
xchg
iret
xor
shr
lods
ror
sub
sub
mov
aam
int
icebp
jmp
sub
retf
shr
out
pop
mov
sbb
mov
add
clc
mov
aam
push
into
sub
inc
mov
add
js
(bad)
mov
idiv
mov
test
jmp
cdq
out
cmp
pop
add
mov
jne
rcr
imul
or
aas
inc
test
test
xor
cmps
(bad)
das
and
nop
mov
fldenv
mov
call
and
push
push
fdivr
sub
mov
push
sub
out
sub
in
jae
cmp
ret
jbe
mov
sar
jmp
cmp
dec
xchg
imul
ja
cs
fdiv
and
icebp
cmc
mov
out
scas
sbb
mov
hlt
test
dec
mov
pop
test
or
std
xchg
gs
adc
mov
jbe
jo
lods
int3
sti
push
mov
les
push
cs
rol
cdq
cld
sbb
out
mov
and
sub
out
inc
fsubr
sbb
popf
xor
scas
dec
bound
add
dec
xchg
cmp
mov
imul
dec
cmps
ret
aas
sti
xchg
(bad)
or
push
outs
push
jno
nop
pop
js
les
mov
ins
xchg
and
xchg
fidiv
js
add
bsr
mov
mov
stos
xlat
aad
adc
rcl
aas
inc
cmp
dec
adc
cwde
push
cmp
cmp
and
dec
cwde
push
scas
daa
sbb
(bad)
push
movs
ficom
mov
and
ret
outs
out
ss
add
fxch
in
cli
fsub
pusha
add
cmp
lock
pop
popa
lods
jmp
inc
sub
mov
loop
pop
mov
lods
dec
test
mov
mov
out
mov
mov
adc
fdiv
pop
mov
dec
and
adc
mov
test
pop
mov
punpckldq
xchg
int3
scas
sbb
(bad)
mov
adc
jmp
aad
and
sub
pop
aad
mov
sub
clc
stos
cmp
cdq
rol
fs
xor
in
les
loop
sar
sub
mov
sahf
loopne
mov
test
hlt
mov
pop
mov
pop
xor
repz
xor
ins
retf
cmps
cmp
jno
gs
and
cmps
pop
fsubp
pusha
push
jl
mov
(bad)
push
aas
jns
sahf
int3
cmps
push
xchg
mov
int
addr16
ror
popa
pusha
jbe
loop
mov
(bad)
and
xchg
and
dec
mul
je
pop
add
loope
push
mov
test
mov
jecxz
mov
clc
out
sbb
xchg
sti
(bad)
jmp
test
fbld
mov
jne
jg
stos
push
pop
and
mov
sar
pop
popf
pushf
sbb
hlt
push
fadd
in
pop
dec
pop
sub
lds
sub
pop
adc
add
aas
mov
lods
push
and
nop
mov
lods
stos
xchg
dec
(bad)
retf
mov
loopne
(bad)
sbb
xlat
out
dec
mov
xor
sbb
inc
pop
cmp
sbb
mov
retf
aaa
cmc
test
dec
sub
mov
pop
jns
mov
mov
xchg
out
cmc
push
outs
adc
mov
and
mov
addr16
xchg
or
rol
mov
sbb
stc
shl
enter
icebp
dec
adc
stos
sub
cli
sub
in
movs
add
ficomp
push
in
push
dec
cmps
nop
pop
jb
fwait
(bad)
mov
hlt
dec
dec
pop
sti
ror
jecxz
std
ss
sub
(bad)
mov
(bad)
pop
repz
push
das
arpl
fucomi
into
inc
mov
cmp
in
mov
test
xchg
xchg
xchg
shl
xchg
clc
mov
jne
pop
cmp
(bad)
push
call
pop
cld
into
cdq
push
repnz
jecxz
jns
adc
sbb
mov
lds
pushf
mov
dec
push
inc
fwait
inc
cmc
out
outs
mov
fiadd
xor
or
(bad)
jmp
jecxz
cmps
inc
je
clc
fild
mov
jge
or
mov
mov
mov
sub
and
mov
or
test
mov
aas
repz
cmps
and
pop
push
sub
test
dec
sub
fmul
mov
sub
fwait
and
xchg
repnz
or
inc
cmp
mov
push
push
sbb
jecxz
jge
addr16
cmp
fisub
inc
sahf
mov
arpl
ins
pusha
mov
aam
mov
sbb
movntps
xor
call
xor
dec
rcl
out
les
scas
adc
movs
mov
inc
inc
mov
fcomp
mov
leave
out
mov
pop
push
and
xchg
sbb
(bad)
cmp
mov
mov
push
sub
movs
(bad)
popa
dec
cmps
ficom
pop
mov
test
sub
mov
push
xchg
aam
xchg
(bad)
stc
xor
pop
movs
sbb
cwde
push
mov
fs
mov
cmp
test
call
pop
push
sti
mov
in
fs
hlt
mov
xchg
mov
lock
xchg
outs
or
sbb
scas
jmp
into
cs
dec
ss
or
pop
repz
inc
movs
inc
mov
jge
stos
dec
test
jl
mov
js
loopne
int3
dec
movs
loop
jnp
xor
inc
add
push
mov
outs
pop
and
or
or
sub
add
pop
stos
gs
jb
loopne
enterw
or
pop
aam
pop
jo
xor
popa
pop
call
ds
inc
fadd
leave
pop
push
or
ficomp
jecxz
addr16
jne
push
pmulhw
xchg
in
cmp
sub
ret
test
lahf
pop
(bad)
dec
shr
or
fs
pop
loop
jbe
call
add
repz
repz
or
sub
adc
out
fdivr
in
cmc
cmps
jl
(bad)
je
or
scas
xchg
cdq
inc
push
fwait
push
scas
mov
(bad)
std
jl
sti
psubsw
jmp
jmp
dec
(bad)
or
push
sbb
cmp
xchg
sar
dec
cmp
inc
pop
push
pop
push
dec
fsubr
or
add
out
ja
xor
xor
adc
push
fucomi
cmps
rcr
test
dec
pusha
or
cmp
(bad)
jno
les
arpl
pop
(bad)
out
and
call
jmp
fst
and
int3
xchg
lock
sbb
rcl
aaa
int
sbb
in
mov
pop
stos
pop
shl
sub
or
dec
push
adc
into
imul
xchg
adc
mov
jne
sbb
mov
mov
mov
pusha
adc
or
ffreep
int3
mov
sbb
adc
push
mov
fptan
push
jp
cld
push
xchg
sub
pop
or
repz
lds
sbb
sub
inc
push
cli
in
cmp
and
mov
mov
jns
mov
pop
(bad)
cmp
aad
push
add
repz
jl
test
xchg
icebp
mov
and
push
jnp
mov
es
xor
in
dec
(bad)
into
xchg
push
adc
xchg
(bad)
cli
push
push
dec
xor
sbb
imul
fstp
pop
adc
js
loopne
in
outs
int
cmp
gs
movs
dec
popf
cmp
dec
sub
cmc
in
sbb
aam
lds
jmp
pop
je
pop
sbb
mov
sti
sub
cli
inc
fadd
push
(bad)
pop
rcr
jge
mov
sub
pop
(bad)
outs
test
test
fwait
outs
mov
jb
mov
sub
mov
scas
push
shl
in
repnz
adc
scas
lods
and
jno
jp
xchg
mov
xor
lods
dec
and
adc
hlt
(bad)
iret
pop
repnz
aam
inc
movs
test
jbe
push
push
sbb
and
or
mov
jmp
lds
sar
imul
push
fst
jo
stos
mov
sti
sub
lock
jb
fadd
push
inc
pop
inc
cmp
ja
rol
cmps
popa
clc
push
xchg
mov
aas
btc
pop
sub
or
adc
cmps
mov
and
(bad)
sbb
adc
jb
dec
inc
rcl
nop
mov
lock
xor
iret
mov
movs
jnp
xor
fild
jo
popf
sar
xor
ror
xchg
sub
and
cdq
and
jmp
nop
movs
je
mov
push
enter
aad
push
hlt
and
in
enter
sbb
imul
arpl
jp
bswap
and
mov
sub
aam
ins
mov
mov
pop
cmp
aas
mov
sbb
xor
cdq
and
cld
add
adc
xor
cmps
enter
jno
mov
retf
xor
add
stc
mov
pusha
add
add
sub
sub
sbb
hlt
outs
jle
xor
mov
xor
sub
adc
mov
and
cmp
fisubr
fcomp
and
jmp
add
mov
outs
(bad)
stc
cld
icebp
adc
data16
mov
sub
stos
push
push
inc
jno
sbb
pusha
das
or
push
xor
ror
repz
and
rcr
dec
out
retf
jnp
push
mov
scas
rol
inc
dec
cmp
mov
stos
push
pop
fsub
in
arpl
inc
pusha
push
cmps
xor
push
daa
inc
retf
sbb
cwde
sbb
pusha
fdivr
add
sbb
push
mov
dec
dec
and
sar
pop
(bad)
and
adc
mul
fisub
sti
shl
mov
xor
fwait
push
mov
in
out
mov
std
xor
std
jno
pop
adc
cwde
push
mov
mov
push
push
or
sub
push
div
fwait
or
(bad)
rcr
push
xchg
adc
call
shl
dec
push
fucomp
mov
fcom
ins
sahf
dec
lea
and
xchg
dec
sub
inc
push
fbstp
jmp
loop
ins
cmp
(bad)
bound
adc
ret
sbb
jno
outs
jle
pop
or
cdq
mov
shl
retf
jb
outs
dec
inc
push
adc
mov
cmp
fmul
add
gs
cmps
inc
popf
adc
pop
cmp
and
icebp
fwait
int3
imul
mov
cwde
rol
xor
push
ins
daa
mov
xor
adc
xchg
adc
retf
xor
push
xchg
mov
cmp
stos
scas
sub
cmp
jne
sahf
rcl
or
xor
push
sub
aas
adc
dec
fcomp
inc
inc
enter
hlt
add
dec
bound
sahf
lds
outs
or
xchg
ja
mov
xor
mov
sub
test
repz
pop
or
jge
jecxz
mov
jmp
sub
sbb
jne
cwde
(bad)
pop
and
or
cmp
in
adc
outs
push
scas
or
mov
xchg
(bad)
jmp
out
xor
bound
icebp
mov
scas
aad
data16
pop
mov
je
pop
adc
push
xlat
and
jb
jns
gs
test
sahf
(bad)
retf
sub
push
sbb
cli
stc
inc
push
add
out
cmp
jae
mov
add
xor
jae
sbb
cld
shl
xchg
push
cmp
xor
inc
lods
jnp
jecxz
push
clc
pop
sbb
ja
pop
xchg
imul
xchg
sub
mov
iret
xor
or
inc
ret
cmps
rcl
add
cmps
xchg
mov
shl
sar
mov
imul
mov
jns
push
mov
or
lods
mov
pop
and
inc
cwde
or
je
ffree
dec
scas
fiadd
leave
xchg
shl
sahf
enter
pop
fwait
clc
(bad)
lahf
sbb
pop
int
scas
sbb
ss
sbb
xlat
mov
xchg
and
xor
jge
stos
shl
sub
les
retf
mov
fnstcw
sub
pop
xor
leave
xchg
fldenv
or
adc
in
dec
jmp
cmp
and
test
push
inc
fwait
cld
push
movs
or
cdq
jle
pop
and
iret
int3
not
jno
xchg
pushf
xlat
pusha
and
xor
xor
or
mov
addr16
hlt
sub
gs
fmul
jmp
dec
aas
pusha
pop
jo
stos
pop
jecxz
jb
sbb
xchg
movs
call
xor
test
movs
xor
scas
aaa
dec
add
mov
out
inc
and
inc
lods
idiv
mov
fwait
pop
movs
adc
add
in
xor
mov
out
cmp
jecxz
sub
jmp
nop
jl
inc
fisttp
push
(bad)
int3
add
bnd
inc
cmps
test
fprem1
and
mov
sub
popf
(bad)
push
movs
pop
jmp
retf
shl
call
xchg
push
xchg
cmp
aam
push
cmp
xor
pop
pop
not
mov
leave
sbb
(bad)
aad
(bad)
jno
mov
aaa
in
jmp
loope
stc
xor
(bad)
ror
icebp
sub
movs
imul
mov
push
sub
sahf
movs
pusha
repz
js
sub
mov
mov
ja
inc
adc
adc
movs
pushf
(bad)
out
in
stos
sbb
es
outs
xchg
adc
je
js
push
bound
adc
adc
mov
dec
push
ds
nop
aas
out
mov
mov
mov
push
je
neg
jne
lock
mov
mov
ins
cmp
(bad)
and
fst
mov
sub
repz
aam
mov
ds
cmps
mov
lea
xor
xchg
xchg
pop
movs
xchg
and
fs
sub
xor
cs
inc
mov
mov
or
stc
push
push
mov
push
test
(bad)
test
push
mov
inc
rol
pushf
movs
push
mov
sar
add
or
cmp
pop
inc
scas
adc
lea
dec
lds
shr
xlat
std
jae
sbb
xchg
and
into
loope
sbb
xchg
xchg
sub
loope
icebp
lods
in
data16
push
mov
enter
scas
ror
shr
cli
div
fisttp
dec
neg
outs
into
mov
icebp
cld
mov
jo
nop
xchg
xlat
pop
inc
ror
ret
xor
jb
jecxz
push
jns
xor
les
rcl
sbb
add
das
jecxz
jmp
in
and
adc
rcl
fdivr
sub
cmps
add
xchg
imul
pop
push
inc
outs
sub
xor
mov
push
sbb
jp
mov
jnp
(bad)
int
push
repz
jb
sar
mov
jne
add
rol
mov
push
add
ja
ror
adc
pop
movs
stos
xchg
(bad)
or
loopne
jle
repz
jge
pusha
push
cs
sub
dec
mov
mov
inc
push
test
inc
jbe
or
cli
ja
add
xchg
xchg
(bad)
and
inc
adc
sub
xchg
test
ret
push
int
pushf
inc
imul
popa
mov
inc
test
repnz
pop
jo
(bad)
rcr
sub
mov
or
jp
adc
in
push
test
in
add
in
shl
fs
sub
mov
inc
jl
outs
and
push
(bad)
jmp
cmp
jecxz
(bad)
iret
ret
fisubr
aam
jp
call
in
stc
mov
lahf
adc
out
pop
clc
pusha
cmp
dec
add
adc
xlat
test
iret
test
dec
xchg
fistp
adc
outs
shl
xor
fst
in
stos
stc
mov
xchg
pop
add
xchg
or
std
fs
in
fadd
xchg
jmp
xchg
mov
and
repnz
leave
push
(bad)
push
loope
ins
or
adc
and
mov
mov
(bad)
xchg
mov
je
mul
cmp
into
add
pushf
in
pop
sub
mov
movs
jmp
push
push
mov
lea
jns
push
mov
sbb
leave
pushf
mov
mov
xchg
dec
out
ret
adc
sbb
xchg
not
cwde
jb
arpl
sub
jmp
or
movs
jmp
movs
cmp
iret
jno
jbe
xchg
xor
inc
jmp
adc
inc
mov
ja
or
xor
xchg
add
in
push
push
xchg
mov
out
sbb
pop
lock
icebp
jae
pop
push
scas
xchg
inc
imul
inc
popf
(bad)
in
jecxz
and
loop
push
int3
xor
nop
mov
cld
xchg
xchg
aam
lods
jmp
test
and
dec
fcmovb
in
(bad)
pop
arpl
add
dec
leave
sub
mov
int
xor
push
ds
and
fistp
and
mov
dec
mov
dec
xchg
dec
cmp
mov
rcr
repnz
push
icebp
pop
and
push
sub
sbb
std
sar
inc
mov
cmc
cmps
ins
xchg
js
popa
ret
cmp
ins
mov
sbb
add
out
push
xchg
test
stos
add
(bad)
and
or
push
push
cld
mov
pop
(bad)
jge
adc
add
ret
hlt
add
jge
out
enter
call
cmp
sbb
mov
jecxz
inc
cmp
cmp
jns
call
ss
sti
and
ds
fcom
je
ror
loop
scas
retf
ret
retf
ret
test
dec
loope
xchg
outs
jmp
ror
aaa
cs
sahf
mov
(bad)
std
xor
and
inc
sub
mov
ins
mov
pop
sbb
sub
adc
fldcw
shl
cmp
ret
cmp
add
mov
je
mov
leave
mov
dec
scas
outs
mov
inc
(bad)
pop
stos
and
gs
jle
mov
jmp
iret
int3
cmps
adc
add
loopne
into
mov
adc
ins
iret
cmp
jle
es
sbb
inc
inc
pop
inc
lods
scas
mov
rcl
add
leave
and
movs
icebp
push
data16
sbb
push
xor
aas
pusha
imul
scas
gs
pop
mov
push
out
mov
cmps
xor
pop
out
mov
pop
push
adc
dec
out
xor
dec
in
pop
mov
shl
dec
stc
pushf
retfw
and
mov
adc
clc
push
dec
push
add
mov
not
(bad)
sub
sub
sub
lods
adc
dec
retf
hlt
cli
and
and
dec
dec
or
mov
cmp
hlt
aam
shl
cmp
rcl
and
aam
xchg
ss
add
push
clc
in
mov
cmps
cmps
pop
out
dec
aam
xchg
fcom
pop
cwde
inc
jmp
add
int
int3
push
pop
pop
retf
add
pop
fwait
addr16
test
xor
jno
xor
mov
pop
xchg
sub
pop
out
popf
js
xchg
or
mov
aad
clc
idiv
ret
jge
push
xchg
sub
popa
lods
xor
rcl
rol
ins
les
pop
dec
push
mov
jbe
and
mov
jmp
mov
adc
jne
aad
neg
cmps
lods
repnz
cdq
cmps
cmp
jg
xchg
mov
mov
jb
fisub
dec
in
nop
into
arpl
jmp
jle
cmc
jge
mov
leave
hlt
push
movs
int
cli
sbb
xor
outs
das
mov
les
repnz
loop
inc
inc
adc
pop
jae
adc
push
in
jl
retf
jge
pop
xchg
(bad)
sbb
sub
ret
mov
test
cld
loop
jbe
test
imul
fnstenv
inc
das
ret
repnz
ror
adc
jnp
fstp
mov
jbe
dec
xor
out
jns
fwait
dec
leave
popf
sub
lds
xor
hlt
dec
inc
out
movs
stc
ja
arpl
cwde
enter
xor
(bad)
gs
jmp
jecxz
mov
mov
cmp
sahf
cmp
push
aad
pop
dec
(bad)
and
in
or
mov
fiadd
pop
stos
ret
inc
mov
popa
stc
push
lods
ins
dec
loop
in
dec
nop
repz
les
lods
xchg
aas
mov
add
test
inc
sub
cwde
mov
out
in
mov
scas
out
adc
cmps
loopne
(bad)
mov
aam
cmps
pop
or
sub
retf
or
daa
(bad)
cmps
pushf
mov
test
jbe
loopne
sbb
inc
out
xchg
into
loop
push
xchg
mov
fnstenv
aaa
and
fs
imul
pop
mov
stc
jecxz
in
xchg
ins
into
call
pop
mov
jne
cmps
xor
aad
jb
(bad)
(bad)
sbb
jnp
xchg
pop
mov
xchg
je
xchg
fs
xor
xlat
cmp
or
inc
sbb
xchg
mov
lock
popf
inc
daa
repz
mov
mov
mov
xlat
ds
dec
mov
inc
fnsave
or
es
jmp
push
inc
scas
or
jle
jae
fwait
call
pop
fisubr
and
add
mov
leave
lods
pop
xor
jge
cmp
mov
pusha
cmps
sbb
mov
sbb
div
xchg
inc
fidivr
sar
ins
cmp
push
idiv
jmp
pusha
sar
not
xchg
cmps
pop
xchg
das
and
jbe
xor
(bad)
jle
xlat
(bad)
dec
mov
and
fisub
jp
mov
rcr
dec
dec
or
out
sub
outs
xchg
jo
dec
dec
sub
or
pop
and
in
ret
aas
or
pop
mov
cs
pop
imul
stos
(bad)
pop
iret
pop
lods
fld
out
xor
pop
mov
push
push
mov
jmp
bound
xlat
pop
jmp
jmp
pop
inc
cmc
dec
pop
das
and
push
sbb
stc
jecxz
inc
rol
sbb
call
xchg
push
xor
push
xchg
dec
cmp
std
inc
aad
not
hlt
or
test
jno
jo
inc
movs
mov
cdq
outs
cwde
cmp
pop
scas
pop
or
adc
iret
xor
or
inc
shr
add
xor
push
cs
cmc
leave
call
loop
(bad)
leave
adc
stos
call
jae
out
int
jns
lock
xchg
jns
dec
int3
sbb
lock
pushf
pusha
rcl
cmp
repnz
jno
loopne
cmps
scas
in
out
xor
inc
imul
aad
dec
push
in
jmp
sbb
nop
jl
sti
nop
adc
(bad)
je
rcr
push
(bad)
out
or
not
xor
popa
or
sahf
gs
les
mov
ret
sar
pop
sub
ins
aad
dec
call
and
jl
scas
mov
idiv
test
test
fldcw
sub
stos
push
je
dec
fisubr
ficom
sbb
mov
sahf
mov
les
xchg
sbb
mov
jo
or
or
ds
push
mov
mov
ss
iret
sbb
sub
jecxz
jne
pop
aad
adc
jmp
mov
sbb
cmc
aas
aam
repz
sbb
ret
mov
dec
addr16
push
aaa
mov
or
pusha
sbb
test
jne
cmp
ret
and
push
shl
(bad)
repz
inc
xor
in
sub
cmps
sub
loop
dec
pusha
nop
or
into
and
push
fadd
rcl
xor
dec
loope
mov
mov
mov
push
shl
sub
fstp
sti
nop
icebp
cld
addps
add
aas
out
cmp
mov
test
mov
jne
mov
mov
jle
les
call
lea
in
in
rol
adc
jl
push
push
(bad)
fdiv
cmps
es
sahf
sub
sbb
cmc
std
cmp
cmp
jno
pop
fnclex
xor
or
fisub
cmp
ja
jo
sbb
and
mov
add
stos
fwait
mov
inc
dec
pop
xor
mov
int
jg
xchg
mov
jne
sar
stos
jp
in
xchg
jno
push
xchg
in
mov
dec
fwait
call
mov
adc
out
sub
inc
inc
ret
sbb
xor
pusha
pop
mov
into
ret
xlat
in
sub
jecxz
movs
push
add
or
inc
fimul
dec
ss
out
cmps
cld
sub
pop
xchg
mov
mov
(bad)
or
inc
and
push
jge
jo
adc
cmp
or
xchg
push
icebp
aad
mov
mov
xchg
push
ret
mov
dec
aam
mov
xor
xchg
shr
stc
repnz
jne
int
sub
repnz
mov
(bad)
xlat
xor
rcl
or
pop
lock
in
es
mov
mov
fdivr
fdivr
out
outs
iret
imul
ja
in
pop
cld
push
xor
add
mov
adc
lock
dec
lea
sub
push
fs
cld
adc
add
sbb
mov
add
lock
inc
or
jnp
mov
movs
jmp
push
movs
pop
cli
inc
leave
jmp
aas
add
xor
sbb
dec
test
test
xchg
je
pop
adc
loop
dec
maskmovq
div
int
push
mov
mov
mov
sbb
adc
add
adc
add
mov
jmp
and
cmps
and
out
test
push
ficomp
(bad)
out
jae
add
test
xor
add
sbb
dec
push
jbe
mov
cld
mov
dec
jle
push
cli
ds
bound
in
xchg
push
(bad)
ret
jnp
pushf
push
jae
cmp
jp
mov
inc
mov
imul
cld
mov
les
sub
les
popa
xchg
lahf
sub
mov
shl
pusha
xor
push
ret
sbb
cli
adc
adc
jle
add
jp
or
dec
pop
mul
lock
cmc
mov
nop
add
popf
xchg
popa
outs
jle
add
or
fld
cmps
(bad)
adc
adc
into
jmp
or
and
scas
ret
jae
add
lds
rcr
sti
push
stc
dec
jge
xchg
(bad)
lss
and
jle
je
xchg
sahf
mov
js
dec
cs
or
push
pop
(bad)
and
and
pop
cdq
outs
add
ins
rol
jmp
push
les
out
push
outs
outs
inc
sti
dec
je
nop
xor
xor
not
mov
dec
rol
(bad)
pop
mov
add
dec
icebp
push
(bad)
or
or
adc
outs
rcl
lods
push
cmp
inc
fisttp
xlat
pop
(bad)
push
pop
stc
inc
jmp
bound
cli
add
outs
dec
pop
enter
aam
sub
adc
dec
mov
mov
nop
add
cwde
pop
nop
outs
adc
xchg
outs
les
inc
or
sbb
dec
fucom
pop
pop
icebp
rcl
inc
lods
cmp
push
jae
mov
out
adc
pop
sbb
in
fdiv
add
jno
sbb
xchg
gs
shr
jecxz
(bad)
and
mov
outs
jo
es
sbb
addr16
or
cs
movs
mov
out
ffree
test
and
push
mov
in
(bad)
mov
cdq
add
daa
das
imul
jle
pop
(bad)
jne
daa
adc
push
adc
push
push
sbb
sar
cwde
cmc
test
in
or
aam
shr
push
cmc
ja
dec
mov
fstp
out
out
out
sbb
pop
adc
mov
jne
sub
lods
mov
ror
inc
mov
mov
outs
push
xchg
stos
mov
nop
push
aam
xchg
sbb
movs
inc
inc
loope
xchg
or
push
add
mov
push
out
mov
and
sbb
and
pop
aad
jnp
and
xlat
psubd
mov
ret
enter
jp
ret
push
cmp
dec
mov
push
out
mov
and
mov
xchg
cmp
pop
ja
mov
cmovne
ja
mov
sbb
mov
adc
icebp
cwde
aaa
test
ret
hlt
jp
dec
adc
in
or
addr16
(bad)
std
jns
aam
arpl
rcl
jp
cmp
popf
mov
pop
adc
sbb
or
sub
sbb
add
(bad)
je
imul
jp
add
add
inc
(bad)
sub
loop
(bad)
inc
jmp
mov
mov
push
ret
push
mov
dec
jge
shl
lods
das
sbb
mov
pop
je
adc
jae
and
pop
inc
call
cmp
bound
pop
push
pop
cs
adc
adc
xchg
ret
lods
cmp
push
xchg
retf
(bad)
mov
es
jmp
arpl
mov
pop
adc
ins
jo
jecxz
out
out
jno
or
aas
setne
push
loop
mov
outs
push
mov
lock
jno
mov
fimul
pop
and
xchg
je
loop
pop
push
mov
push
in
scas
dec
test
add
rcpps
push
aad
or
shr
sbb
jge
dec
retf
(bad)
sub
imul
ds
in
sahf
out
add
inc
popa
mov
aam
dec
hlt
dec
add
push
cwde
aad
and
add
out
jecxz
jb
movs
retf
fcom
je
sti
xor
xor
inc
imul
jmp
lea
sub
mov
pop
aam
mov
cmp
push
dec
pop
add
sbb
lea
inc
and
lahf
push
leave
mov
adc
(bad)
lds
mov
sub
xchg
jecxz
lea
(bad)
retf
mov
in
mov
sbb
add
sub
sub
(bad)
fmul
jno
cs
and
cs
(bad)
lock
cmp
mov
fdivr
out
mov
mov
in
mov
hlt
add
jbe
icebp
add
out
adc
xor
fisttp
not
js
scas
mov
xchg
xchg
test
jmp
jne
je
mov
std
into
and
shl
mov
cli
xchg
into
or
pop
fmul
nop
mov
sub
cs
imul
mov
das
out
mov
sbb
test
sbb
test
lock
dec
jg
inc
cmp
dec
shl
retf
data16
loopne
es
pop
lahf
pop
inc
push
mov
push
mov
xor
ret
cmp
into
vmaxpd
iret
dec
invd
pop
push
xor
ror
imul
cmp
push
push
and
or
inc
cmp
ds
xor
mov
clc
call
test
stos
test
psrld
sbb
outs
test
mov
call
inc
gs
mov
leave
fdivp
pusha
push
xor
or
push
xor
clc
in
call
in
lock
lods
dec
jmp
xchg
pop
addr16
test
dec
dec
lock
pop
xchg
mov
mov
daa
adc
icebp
data16
pop
into
push
out
push
pop
jmp
cli
sbb
fs
mov
push
fcomp
inc
adc
adc
stos
adc
popa
je
mov
ins
mov
sub
mov
add
sbb
lock
out
sub
daa
pop
push
inc
enter
out
sbb
repnz
daa
inc
(bad)
mov
xor
push
dec
sbb
xor
mov
mov
icebp
and
into
jp
and
int
cmps
and
fstp
push
mov
adc
mov
jae
dec
lods
adc
push
ins
sar
je
in
or
push
mov
mov
test
push
(bad)
pop
test
adc
ret
sub
cmp
xchg
cmp
sub
test
aaa
inc
and
shl
dec
cmp
jbe
and
cdq
xor
adc
mov
ror
xor
lock
loope
pop
and
mov
mov
xor
mov
icebp
jmp
data16
ror
mov
clc
arpl
jmp
jmp
adc
ja
leave
(bad)
cmp
inc
imul
mov
je
xor
sbb
fild
xor
int3
add
xor
mov
fld
imul
push
and
cwde
mov
imul
addr16
cmp
lock
repz
stos
std
fild
fs
hlt
fbld
sbb
repnz
out
shl
mov
into
(bad)
mov
call
test
mov
xchg
dec
xchg
jp
xchg
xor
and
test
xchg
or
in
rol
push
pop
xchg
inc
inc
stos
push
pop
mov
mov
popa
pop
addr16
repz
mov
aaa
retf
xchg
mov
xor
dec
xchg
dec
adc
mov
cmps
popf
pusha
sub
inc
push
inc
js
cdq
xchg
fild
mov
inc
push
mov
mov
mov
cmp
inc
jne
xchg
pop
mov
xor
mov
add
xor
mov
xchg
push
dec
and
and
cdq
int3
bound
xor
mov
cli
cmps
repnz
frstor
pop
icebp
add
and
cmp
adc
dec
xor
mov
loop
jne
bound
jo
into
(bad)
cmc
test
jmp
push
push
adc
(bad)
sahf
cli
in
fiadd
xlat
push
popa
mov
xchg
and
push
push
mov
mov
lods
fisttp
fdiv
pop
fwait
(bad)
jnp
pop
mov
pop
dec
jns
xor
mov
pop
mov
clc
ret
sti
dec
jp
pop
mov
data16
das
and
dec
loope
push
js
jle
aam
xchg
lea
aas
push
push
xchg
sub
mov
loopne
arpl
mov
mov
mov
lods
pop
ret
das
addr16
or
into
inc
inc
dec
sbb
sbb
outs
mov
add
or
sbb
dec
mov
call
in
mov
adc
jb
std
xor
mov
into
clc
xacquire
pop
fcomip
push
(bad)
or
sbb
in
push
cmps
push
xchg
aaa
push
xchg
rcr
and
pop
ja
pop
xchg
mov
stos
loope
shr
pop
movs
lods
jg
pusha
test
push
pop
movs
ret
cmps
adc
fild
(bad)
and
inc
pop
xchg
in
xor
sub
mov
or
xchg
shl
inc
ja
pop
iret
xlat
cs
jmp
das
popf
stos
mov
jl
pop
pop
in
mov
cwde
fidivr
xchg
cdq
aas
cmps
je
or
jbe
loopne
shl
inc
jmp
add
out
out
cmc
vpblendw
or
mov
jg
jmp
cmps
and
cmp
sbb
or
(bad)
shl
retf
ret
scas
ds
clc
aad
and
mov
xor
aas
sahf
(bad)
imul
sbb
(bad)
ins
test
cmps
xchg
loope
scas
fs
shl
lods
addr16
mov
scas
jne
pop
mov
xchg
jl
mov
lock
cmps
cmp
movs
cld
pop
push
loopne
cmp
and
xor
pop
aas
dec
aam
test
bound
mov
push
and
xlat
clc
sti
mov
xchg
jl
clc
cmp
mov
jmp
cmp
sub
sub
cli
add
gs
xor
(bad)
retf
repz
rcr
and
xor
sar
mov
xor
jo
adc
div
pop
xor
ins
inc
sbb
push
test
retf
push
or
or
inc
inc
arpl
test
pop
test
push
inc
mov
pushf
cmp
rcr
pop
mov
cmp
inc
or
or
gs
dec
jg
sub
and
shr
lods
add
xchg
xchg
sahf
mov
sbb
and
mov
ds
xchg
ficomp
mov
pop
lods
stos
nop
lods
jae
mov
sbb
test
sub
daa
mov
mov
add
push
mov
or
mov
jecxz
neg
and
mov
jnp
mul
in
ins
xchg
sub
jns
jmp
add
pop
cmp
push
push
xlat
stos
lods
sub
push
xor
loop
imul
or
aaa
jmp
xor
lods
add
and
pop
stos
scas
out
cmp
cld
cmc
daa
xchg
xor
test
xchg
inc
adc
hlt
xor
leave
sbb
ins
jecxz
mov
icebp
fimul
sub
mov
stos
xchg
shl
jb
jle
or
inc
mov
dec
lds
or
jmp
mov
mov
loop
fs
cli
mov
sbb
fild
or
scas
cmp
cmps
rol
stc
pop
push
cmp
xchg
sti
leave
fistp
mov
adc
lock
hlt
div
shl
repnz
cs
call
jns
out
mov
and
sub
xchg
push
dec
and
add
popa
mov
sbb
mov
and
mov
test
or
or
mov
outs
lods
out
sbb
push
xchg
arpl
cwde
jecxz
lock
cld
aaa
retf
push
ret
call
aaa
sub
xor
fisub
add
test
mov
cld
call
jmp
mov
pushf
in
daa
lock
pop
inc
test
popf
cdq
shr
aaa
xchg
and
hlt
mov
fist
inc
pushf
inc
add
inc
mov
imul
sub
retf
xchg
xor
sbb
pop
pop
dec
cmp
movs
jmp
sbb
push
push
xchg
stos
int3
stc
ds
and
mov
or
sub
jae
inc
ret
in
push
pop
or
inc
jge
out
stos
inc
or
pusha
pop
mov
inc
add
mov
add
jle
pop
sub
(bad)
add
lahf
sahf
scas
in
jp
out
pop
add
add
or
cmp
push
sub
mov
les
cmp
pop
cmp
daa
(bad)
pop
scas
lds
aam
fsubr
std
mov
add
mov
retf
push
cmp
mov
jg
daa
lods
push
sti
loopne
jmp
mov
adc
mov
ret
adc
sbb
pusha
xor
mov
pop
mov
push
pop
ss
lods
push
aam
outs
cmc
pop
hlt
mov
pop
pop
dec
mov
mov
add
xchg
dec
ffreep
(bad)
mov
xchg
lahf
add
stos
lods
xor
mov
test
jae
(bad)
call
mov
jb
mov
js
jb
add
add
pop
fdiv
shr
sbb
cmps
push
fiadd
scas
loope
loop
lods
mov
pop
stos
lods
sahf
jp
sbb
enter
inc
sbb
pusha
sbb
sub
mov
fbld
cmp
xchg
jbe
retf
fs
xlat
and
loope
add
xchg
and
or
jl
dec
fwait
repnz
in
add
or
in
or
adc
(bad)
fstp
mov
adc
repnz
imul
enter
and
(bad)
xchg
mov
arpl
ss
inc
je
loop
xchg
into
adc
in
fcom
jne
fdivr
dec
bsf
pusha
(bad)
(bad)
leave
ds
sub
pop
xchg
adc
inc
(bad)
mov
inc
ret
outs
jns
push
mov
add
mov
les
xor
outs
dec
scas
fst
sbb
mov
mov
fistp
jecxz
pushf
ins
fptan
cmp
enter
fldenv
mov
and
into
mov
inc
dec
sbb
ret
movs
jecxz
dec
add
sub
aam
mov
xor
adc
and
hlt
fist
je
pushf
cmps
xor
mov
cmp
sti
popf
out
daa
sub
push
fldenv
adc
and
daa
cmp
hlt
inc
dec
fdivp
sar
cdq
push
sbb
sbb
pop
into
(bad)
xlat
push
add
pop
xchg
jo
sbb
sbb
pop
add
int3
ins
shl
(bad)
(bad)
xor
aam
retf
mov
xchg
test
push
(bad)
xchg
mov
sbb
pop
mov
jb
ins
out
fs
ret
mov
pop
mov
jne
addr16
das
jmp
dec
push
adc
enter
outs
ins
mov
loopne
js
add
cmp
mov
(bad)
dec
jnp
ins
iret
out
add
lock
pushf
dec
add
and
loopne
jno
scas
mov
xor
inc
cld
mov
ja
xchg
fs
lea
cmc
bound
repnz
xor
xchg
jne
enter
retf
out
data16
inc
mov
das
push
mov
movs
(bad)
lods
popf
inc
sbb
and
in
(bad)
add
stos
fdivr
push
sbb
cmp
cmps
add
cld
push
cmp
subps
iret
dec
inc
or
cmc
cmp
nop
dec
push
mov
pop
clc
jp
dec
mov
out
(bad)
mov
outs
push
adc
mov
and
in
lods
mov
jecxz
xchg
out
in
daa
jmp
sbb
pop
imul
mov
dec
pop
jecxz
fnsave
mov
in
adc
into
fidivr
xor
adc
mov
cmp
jp
jnp
sbb
jecxz
hlt
sbb
movs
mov
sbb
pop
les
mov
mov
sbb
cwde
jl
bound
frstor
mov
xchg
fucom
repz
retf
mov
pushf
mov
xor
aam
jp
sar
push
jns
push
sahf
hlt
movs
lea
mov
push
cwde
push
dec
inc
push
adc
fwait
push
add
lea
jnp
imul
dec
in
ror
fist
xor
jle
ret
mov
and
ror
rcl
sbb
out
lock
sbb
call
dec
sbb
out
xchg
cmp
cmc
mov
retf
cmp
cmp
pop
xlat
std
sub
pop
in
jb
mov
in
and
pop
dec
out
pop
or
and
adc
mov
scas
add
xor
(bad)
in
xchg
mov
xor
scas
fiadd
push
mov
test
pusha
xchg
fcmovb
in
xlat
rcl
and
enter
sub
(bad)
and
fwait
rcl
jae
into
mov
mov
lock
hlt
mov
jne
mov
and
cmp
repz
cwde
out
mov
mov
sbb
inc
jl
les
jae
sar
frstor
xchg
pop
jb
xchg
iret
loop
xchg
mov
pop
sbb
pop
mov
pop
pop
mov
or
aaa
sub
lods
enter
call
aas
mov
out
or
xchg
cmps
sbb
lahf
loop
pop
jnp
mov
and
and
mov
sbb
and
sub
jp
gs
cmc
jp
mov
bound
das
cmp
(bad)
arpl
bound
mov
mov
xchg
je
cld
push
xchg
mul
pop
push
pop
(bad)
lock
pusha
(bad)
mov
das
and
popa
mov
sub
xchg
inc
ss
data16
mov
cwde
inc
inc
(bad)
and
cmp
cmc
adc
cmps
jmp
sahf
mov
xchg
aad
adc
mov
xor
xor
outs
mov
(bad)
(bad)
cmp
cmp
retf
scas
mov
in
add
mov
add
lods
push
cli
jecxz
and
out
adc
repnz
cli
jg
adc
mov
sub
ret
fs
test
aas
pop
xchg
iret
enter
jo
or
jo
call
xchg
out
add
mov
std
mov
xor
aad
out
pop
into
inc
jns
pop
test
pop
xor
int3
or
mov
into
sar
mov
xchg
pop
cmp
addr16
push
(bad)
mov
sbb
fiadd
stos
adc
push
add
sub
inc
in
sub
and
shl
scas
xchg
and
lods
xchg
cmps
repnz
push
adc
push
mov
call
sbb
mov
xchg
jle
(bad)
jecxz
sbb
std
jg
stos
push
div
popf
cmps
xor
out
jl
cmp
call
xchg
rcl
(bad)
fcmovnb
sub
jbe
sahf
jb
dec
out
mov
lock
xchg
popf
into
cwde
pop
leave
dec
sbb
and
out
retf
mov
pop
(bad)
mov
(bad)
xchg
into
push
imul
mov
jnp
aam
jecxz
jle
lds
out
repz
adc
(bad)
shr
inc
and
dec
cld
jne
fistp
es
jnp
movs
cmp
addr16
into
xor
jnp
and
xor
push
imul
leave
ins
imul
cmp
enter
je
pop
outs
push
lods
icebp
sahf
scas
xchg
cmp
mov
add
imul
push
sub
mov
and
aas
stos
mov
and
icebp
in
mov
dec
aam
es
mov
and
mov
sbb
not
iret
test
sbb
loop
les
sar
dec
std
ficom
test
xor
sbb
xor
ins
cmp
out
data16
iret
adc
rol
aad
stos
pop
in
mov
(bad)
out
in
or
ja
(bad)
xchg
mov
push
push
int3
(bad)
jmp
lahf
daa
fdiv
or
mov
push
pop
fild
das
sub
in
rcl
adc
ja
push
std
jp
das
sub
mov
or
js
sbb
xchg
iret
into
fadd
mov
or
push
cmp
mov
adc
imul
cld
add
dec
lahf
inc
test
dec
pop
cld
retf
push
cmp
cmps
lds
mov
ja
or
xchg
mov
daa
(bad)
cmp
cmps
xchg
(bad)
cld
cmp
mov
xchg
mov
cmps
adc
adc
pop
bound
push
pusha
push
or
out
loope
add
sub
enter
movs
push
mov
sub
(bad)
push
jg
xchg
or
stos
jmp
adc
outs
and
push
in
push
mov
stos
or
psllq
fmul
dec
in
cs
popf
or
mov
pop
sahf
add
mov
jmp
push
shr
repz
cmp
push
call
icebp
sbb
pusha
stc
sub
mov
add
stc
mov
push
dec
(bad)
xchg
leave
sahf
movs
pop
in
inc
or
fs
mov
push
arpl
mov
jbe
cmp
xchg
fwait
push
fadd
call
xchg
jg
or
xor
adc
add
cs
jge
jge
lahf
adc
hlt
and
je
xchg
push
or
mov
js
movs
dec
jge
add
loop
out
and
cmp
inc
jno
mov
stc
mov
jns
lods
fadd
push
pusha
imul
jo
xor
fwait
movs
jbe
add
ja
jns
lahf
popf
and
pop
lds
arpl
mov
aaa
inc
inc
sti
or
fidivr
retf
mov
imul
ins
fwait
xchg
iret
inc
ins
stos
jns
lods
(bad)
clc
jmp
or
frstor
cmps
loop
pushf
repnz
cmp
mov
mov
and
sbb
lock
mov
push
adc
add
jp
xchg
jb
xchg
jmp
enter
xchg
out
inc
mov
mov
or
retf
jl
adc
adc
ins
fcomip
aas
inc
sti
xchg
(bad)
dec
icebp
inc
xlat
cli
push
scas
jecxz
cmp
add
mov
mov
fucomip
cmps
cmp
cld
or
add
cwde
test
inc
mov
mov
pop
lea
mov
fidivr
out
hlt
push
xor
call
ret
out
daa
loopne
jno
mov
test
jmp
xchg
cmp
gs
mov
cmps
sub
icebp
xor
(bad)
inc
(bad)
sbb
jl
imul
push
xlat
fwait
out
xor
fst
lds
rol
or
fwait
js
adc
pop
push
xor
pusha
mov
in
imul
fadd
repz
jmp
ret
popf
stos
and
ret
popf
jecxz
inc
jmp
push
fwait
inc
test
xchg
ror
mov
mul
addr16
ins
fcmovb
sti
xor
push
popf
mov
int3
inc
fwait
mov
lea
pop
and
or
mov
or
test
cld
(bad)
adc
sub
pop
mov
adc
ror
movs
xchg
jns
mov
jns
inc
xor
lahf
ins
lods
into
imul
imul
fisttp
loope
stos
xlat
inc
push
mov
sub
div
shl
ror
test
push
in
mov
(bad)
sbb
mov
popa
xor
aad
mov
dec
fisttp
jnp
cmp
sub
dec
imul
lar
mov
sbb
sub
outs
cmp
cmps
mov
jo
adc
jnp
xchg
mov
push
jnp
push
sbb
sbb
cld
dec
imul
xchg
or
iret
cdq
ds
repnz
adc
daa
or
cwde
push
ror
int3
pop
dec
fisttp
mov
mov
dec
sbb
int3
mov
inc
sub
cmp
or
xchg
sub
(bad)
aad
and
fwait
xchg
in
out
cdq
inc
dec
push
(bad)
test
push
inc
ja
inc
iret
sbb
xchg
scas
push
jmp
dec
sar
jmp
and
lea
stos
add
dec
push
sub
push
sub
jmp
xchg
jae
aaa
(bad)
call
vmwrite
dec
pop
lds
jmp
(bad)
jp
imul
call
sahf
pop
cmps
int3
retf
cmp
inc
into
fidivr
and
lds
pop
movs
jmp
xchg
retf
mov
xchg
lods
mov
pop
sbb
nop
jge
out
push
cmp
hlt
xchg
sub
mov
sbb
inc
mov
mov
rcr
push
add
outs
pop
int3
dec
push
popf
jbe
xchg
mov
cli
icebp
leave
jge
pushf
scas
pop
adc
outs
pop
xor
ret
cmc
lahf
xchg
pop
(bad)
mov
sub
cli
sub
pop
aas
xchg
cmc
ds
pop
add
cmp
stos
xchg
adc
test
repnz
sbb
mov
jae
dec
pushf
sub
hlt
aaa
jl
rcr
jge
adc
or
push
pusha
add
(bad)
jg
xor
cmc
std
loop
push
neg
scas
sbb
pushf
mov
gs
jl
pop
push
and
dec
xchg
sar
fwait
mov
xor
pushf
mov
pop
shl
inc
or
shl
xor
adc
cmp
xor
mov
xor
adc
xchg
rol
sub
scas
pushf
mov
outs
fisubr
pop
adc
ins
mov
jno
pop
cdq
out
sub
sbb
inc
mov
not
pop
ror
sbb
add
mov
fcom
xlat
and
push
test
cld
cmp
out
pusha
arpl
adc
xor
jl
pop
fwait
test
jae
inc
fnsave
das
mov
stc
iret
xlat
dec
and
or
and
cmp
mov
or
mov
inc
push
fdivr
mov
push
add
sbb
test
mov
outs
pop
adc
mov
inc
jne
jb
aas
mov
lods
adc
(bad)
push
cli
idiv
cld
rcl
movs
mov
test
or
jecxz
mov
fistp
or
pop
pushf
sub
jns
cdq
(bad)
mov
fsub
push
test
cmp
mov
pop
sub
or
mov
lahf
int
clc
mov
loop
je
jo
jle
in
inc
dec
dec
sbb
xchg
lods
aam
add
outs
mov
lock
rol
and
sbb
mov
inc
rcr
adc
pop
mov
pop
arpl
fchs
sub
sub
hlt
push
mov
dec
inc
pop
cld
jl
sahf
dec
(bad)
push
inc
data16
scas
ret
adc
pushf
push
dec
jae
jmp
sub
in
test
cdq
(bad)
clc
dec
scas
repnz
mov
xor
shl
out
push
xor
adc
lahf
mov
fstp
call
js
pop
outs
fdivr
pop
add
aam
or
mov
xchg
dec
test
repnz
popa
mov
fs
out
pop
jl
mov
rol
pop
xor
fstp
xor
adc
push
or
ds
out
mov
inc
ins
and
or
(bad)
icebp
sub
pop
mov
in
sub
xchg
or
jge
mov
sbb
and
sub
js
movs
add
sub
enter
cmps
rcr
sbb
inc
fisttp
repnz
aas
mov
push
clc
inc
das
pop
inc
xchg
adc
adc
fsub
pop
pop
sbb
sub
pop
mov
daa
sbb
mov
lds
cmp
sbb
fwait
xlat
ins
outs
and
xchg
jno
mov
pop
fdivrp
dec
ret
mov
lods
fdecstp
in
jmp
ret
out
loopne
inc
(bad)
push
js
dec
xchg
dec
sbb
cmovle
cmp
push
(bad)
test
pop
inc
pop
ret
mov
adc
xor
stos
jmp
sub
mov
inc
sub
inc
std
and
jbe
inc
mov
adc
ror
(bad)
iret
and
bound
leave
or
ds
or
enter
jo
mov
pushf
fldenv
add
push
jmp
rcl
and
jmp
adc
repz
sbb
lods
sbb
ja
repz
jae
mov
pop
inc
inc
test
adc
ins
mov
(bad)
jno
mov
int3
mov
stos
and
jmp
adc
and
inc
add
mov
sbb
icebp
ficom
xor
cmp
xchg
mov
scas
and
jno
cli
jae
mov
leave
add
mov
mov
les
sbb
adc
jb
mov
lahf
fwait
mov
adc
sub
cmp
or
pop
push
les
or
dec
out
and
nop/reserved
sbb
out
jae
mov
leave
mov
jbe
lods
and
xchg
inc
ins
sbb
outs
adc
outs
ins
(bad)
out
cmc
lds
mov
or
or
sub
cmp
mov
lea
pop
jbe
ror
pop
adc
xchg
cwde
sar
and
jbe
addr16
inc
push
lods
jo
bound
sbb
jb
xchg
aaa
rcr
cmps
jb
fsubr
and
mov
or
cwde
add
fistp
pop
xor
scas
and
out
mov
in
jg
outs
jmp
in
mov
stos
loopne
es
lds
adc
pop
adc
lock
mov
stos
and
push
repz
into
mov
inc
cmp
retf
scas
mov
scas
ficomp
rcr
xlat
xchg
imul
adc
call
mov
hlt
ja
inc
inc
(bad)
mov
sti
inc
pop
sub
mov
repnz
add
hlt
adc
jae
arpl
retf
fild
push
enter
js
js
adc
cmp
loope
in
enter
enter
cmps
aad
xor
jne
les
std
dec
sbb
in
rol
mov
mov
add
xor
mov
(bad)
adc
mov
and
add
pop
xorps
add
inc
mov
pop
ins
test
data16
mov
xchg
retf
and
not
loopne
mov
dec
in
jecxz
adc
ja
ins
popf
sbb
jne
sbb
jmp
add
imul
mov
sbb
aad
or
and
xor
jb
xor
and
mov
cmc
mov
imul
mov
pop
sub
test
mov
mov
push
add
aad
inc
jp
or
xchg
lahf
fsubr
movs
fs
(bad)
int
sbb
test
jmp
mov
jne
push
aad
mov
(bad)
pop
fidiv
pop
adc
xor
pop
inc
or
jmp
xor
jo
sub
jno
fmul
lds
push
dec
jmp
rcr
pop
(bad)
neg
retf
jns
sbb
adc
xchg
jl
mov
jae
rol
call
jnp
sub
jecxz
push
fild
sbb
sub
xchg
pop
inc
call
mov
adc
fidivr
mov
pop
jb
adc
and
push
stc
pop
xchg
or
loope
sub
push
mov
sub
dec
push
cmp
mov
(bad)
push
jge
xor
pop
fstp
inc
pop
pop
clc
mov
cmp
push
add
clc
leave
xchg
pop
(bad)
jmp
sub
xor
fcomp
push
xchg
jg
xchg
gs
ss
pop
mov
sub
cmps
clc
lds
rcl
pop
push
loopne
cmp
sar
push
add
adc
mov
lea
jnp
retf
pop
movs
(bad)
xor
stos
data16
jne
dec
int3
js
sub
pop
mov
and
adc
dec
pop
aaa
push
mov
pop
dec
loopne
mov
push
imul
jge
and
pop
popf
inc
add
dec
rcl
cmp
cli
pop
pop
xor
ins
fwait
mov
scas
push
imul
test
add
ja
stc
jnp
add
clc
mov
popf
fwait
xlat
xchg
mov
dec
jb
inc
dec
lahf
adc
test
mov
sti
mov
nop
xchg
(bad)
jecxz
dec
cmp
enter
sbb
inc
fimul
dec
xor
jecxz
les
inc
jo
hlt
dec
in
lds
shl
test
sbb
push
fidiv
jno
jae
jmp
sti
mov
popf
pop
sub
ret
repnz
jnp
jne
dec
adc
jo
dec
mov
ret
add
enter
mov
test
push
mov
ins
icebp
push
adc
xor
test
(bad)
movs
xchg
mov
inc
fisttp
add
popa
jmp
cmp
loopne
loope
pop
bound
je
dec
out
cmp
in
push
xchg
lock
add
test
pop
xor
cmp
xor
adc
pop
cmp
fdiv
mov
leave
data16
jae
mov
loop
dec
shr
fimul
push
out
jnp
pop
xlat
lods
jno
(bad)
xchg
je
stos
lds
stos
iret
add
inc
jns
or
mov
push
or
cwde
std
push
mov
hlt
xor
test
js
fnstcw
jmp
pop
and
or
mov
mov
add
jno
ss
dec
not
mov
add
inc
cmp
pushf
and
push
mov
ret
or
mov
dec
sub
in
loopne
fst
test
stos
cmp
mov
or
push
mov
xchg
mov
xor
push
sub
retf
adc
push
fstp
sbb
inc
into
imul
sbb
and
(bad)
(bad)
cld
pop
sub
add
push
in
test
pop
cmp
(bad)
mov
push
div
adc
clc
pop
outs
xor
xchg
push
fiadd
inc
js
pop
rol
ja
(bad)
jmp
ss
jecxz
sub
shl
or
lahf
cdq
dec
inc
(bad)
into
fcmovnbe
out
ins
sbb
pop
mov
ins
gs
mov
jge
pop
loope
cmc
dec
mov
shl
mov
rcr
jno
cmps
dec
xchg
inc
or
push
daa
out
neg
test
fadd
inc
test
nop
ins
cmp
cli
mov
ins
jmp
mov
and
push
cmp
in
mov
sub
std
(bad)
scas
aam
ins
jp
dec
imul
mov
adc
aas
push
call
xchg
sub
and
sub
and
cld
das
mov
popf
mov
cmc
lds
mov
inc
inc
jmp
mov
into
jo
add
cmp
jge
fstp
inc
fs
shl
ret
mov
fist
push
and
call
xchg
jle
pushf
fwait
(bad)
xor
xor
xor
popf
(bad)
ror
xchg
mov
movs
xchg
add
cdq
test
call
xor
mov
aas
stc
in
stos
pop
xor
adc
push
mov
fisttp
and
xor
sbb
jecxz
fcomp
jns
ja
out
fs
hlt
xor
cmc
fadd
mov
jecxz
out
push
xlat
mov
push
das
jmp
cmp
outs
xchg
stos
mov
(bad)
xor
push
jmp
enter
std
and
and
mov
(bad)
xor
rcl
xchg
inc
adc
dec
pop
push
inc
xor
pop
mov
ret
(bad)
cli
push
push
retf
and
out
cwde
in
ins
ins
pushf
mov
inc
add
sub
repnz
outs
cmps
outs
cli
xor
retf
sbb
or
xor
icebp
aaa
jle
or
outs
ret
or
pushf
add
out
cli
cmps
inc
movs
test
dec
retf
add
pop
outs
jmp
inc
outs
in
cmp
mov
mov
(bad)
idiv
push
stos
push
scas
cs
cs
mov
jecxz
xchg
das
cwde
xchg
dec
mov
jbe
test
fisubr
lods
add
sub
mov
test
in
sub
mov
inc
cli
rcr
dec
in
pop
adc
pop
jl
cmps
sti
xor
jns
fbstp
mov
push
cmp
ins
add
push
sub
mov
and
xchg
dec
imul
fdivr
xchg
add
cmp
shl
sti
lock
add
ins
dec
and
mov
lock
sub
out
adc
jae
adc
push
(bad)
neg
adc
sbb
retf
mov
mov
inc
pop
inc
or
sahf
jo
(bad)
(bad)
cmc
(bad)
aad
clc
div
mov
inc
leave
mov
and
movs
mov
loopne
clc
push
sub
cs
cwde
mov
retf
and
fstp
xlat
push
mov
jmp
add
les
stos
mov
and
pushf
lahf
xchg
pop
jo
arpl
jmp
int
sub
jmp
out
cmp
test
enter
inc
cmp
(bad)
cmp
inc
inc
inc
push
xchg
jg
out
xchg
xchg
cs
ja
dec
ret
inc
or
cwde
mov
cmp
and
rcr
jbe
rcr
add
mul
test
or
inc
shl
pop
aad
nop
jecxz
push
jge
cmp
jge
dec
rep
lds
jmp
imul
sbb
movs
(bad)
scas
push
loop
lods
lahf
(bad)
jmp
adc
dec
mov
mov
rol
sub
xlat
xlat
aaa
mov
and
shr
inc
xlat
inc
sbb
aad
pusha
cmps
mov
jmp
movs
push
imul
push
mov
sbb
xchg
mov
adc
rcl
xchg
paddb
xor
sub
and
dec
inc
scas
(bad)
cdq
sbb
add
sub
call
jle
push
popf
fmulp
dec
leave
div
fnsave
jbe
inc
rcl
sub
sbb
mov
scas
scas
xor
mov
jg
sahf
inc
or
pop
inc
add
mov
or
inc
lods
dec
cmp
fldl2t
popf
retf
pop
push
jo
(bad)
sbb
fs
inc
cmp
movs
push
rcr
mov
je
pop
lea
pop
or
push
rcr
mov
xor
mov
test
xor
adc
(bad)
sbb
dec
std
mov
jp
outs
sbb
inc
cmps
rol
lds
or
sub
xor
clc
std
sahf
cld
mov
and
xchg
retf
xchg
xchg
adc
rcl
inc
repz
xor
pop
sti
ins
and
test
mov
push
gs
jmp
sbb
ficomp
push
je
loopne
fidiv
xor
call
or
popf
add
lahf
aad
rcl
pop
ins
fucomp
and
mov
clc
dec
adc
mov
ins
xor
sbb
ins
xor
inc
xor
pop
jmp
dec
dec
xchg
xlat
inc
ins
pop
sbb
sub
jae
pop
xor
fistp
xor
lds
into
movs
fst
mov
xchg
jns
cmp
sub
mov
push
retf
push
or
bound
mov
cli
add
loop
xor
sbb
mov
inc
cmp
inc
imul
push
ss
and
fld
mov
sbb
(bad)
pop
(bad)
imul
push
popf
jb
fiadd
add
out
jb
inc
clc
pop
jne
mov
xor
add
and
(bad)
js
add
or
cmp
adc
cdq
js
imul
enter
xor
pop
cmp
das
popa
(bad)
call
mov
inc
add
mov
cwde
fwait
imul
ins
cld
iret
jmp
xchg
movs
lock
pop
loopne
(bad)
inc
mov
jno
stc
dec
sar
pop
and
pop
es
fistp
xor
fdiv
in
out
shl
sub
and
dec
sub
jmp
sahf
jno
sar
iret
loopne
popa
and
stos
inc
mov
clc
push
shl
adc
xchg
pop
cmps
sub
cmps
dec
push
jnp
(bad)
xchg
movs
push
retf
jle
dec
push
and
pop
lea
pop
cld
mov
pop
lock
out
stos
test
and
retf
sbb
xchg
sbb
cli
and
jge
sbb
pop
lds
jb
ror
and
lods
adc
frstor
and
sbb
cmp
jae
dec
push
inc
hlt
push
shr
cmp
outs
mov
sbb
sub
fst
xor
adc
mov
adc
add
jge
cdq
xchg
jmp
das
or
data16
popa
fnstcw
stos
sub
retf
fist
jo
dec
ins
les
dec
mov
cmp
(bad)
jle
adc
jne
inc
xchg
imul
lods
or
cdq
push
in
jp
cli
jle
cmp
jb
sbb
push
add
mov
xchg
icebp
xchg
pop
xchg
inc
sub
arpl
mov
mov
icebp
jmp
sti
rcl
mov
mov
bnd
mov
or
cmp
xor
stc
and
repz
imul
jmp
ja
cs
xor
cdq
push
ror
sbb
jg
mov
fdiv
out
call
jo
popf
out
adc
mov
cmps
dec
mov
sub
add
pop
shr
or
cmp
and
leave
test
sub
jle
aaa
dec
xchg
sub
mov
lods
js
jp
xor
retf
mov
enter
out
adc
int3
adc
mov
retf
mov
mov
daa
(bad)
enter
push
(bad)
shl
clc
pop
pop
jecxz
ins
cmp
in
jbe
inc
and
pop
jns
dec
scas
inc
add
ror
mov
sbb
(bad)
cli
sbb
add
clc
sub
fisttp
mov
xor
pop
mov
shufps
pop
(bad)
mov
jmp
add
mov
addr16
cli
dec
and
daa
jmp
sbb
and
xor
sbb
sub
cmps
inc
jg
adc
mov
sahf
repnz
jmp
sahf
call
loopne
inc
pop
push
call
mov
push
inc
stos
rol
mov
scas
sub
imul
(bad)
mov
push
sbb
sbb
movs
ja
jb
int3
xor
add
(bad)
pop
add
les
xor
mov
test
inc
mov
test
cmp
xchg
cmc
ror
jb
daa
xor
cwde
ins
cmc
mov
xor
les
call
ds
cmp
cmp
pop
adc
ins
xor
xor
cmp
jbe
lds
addr16
out
out
fstp
xor
out
gs
outs
pop
je
out
pop
xor
aas
mov
retf
(bad)
and
(bad)
shl
(bad)
loope
pushf
ror
inc
pop
adc
sub
mov
xchg
mov
or
es
jmp
sub
loop
dec
cwde
pop
ins
xchg
push
mov
ret
push
sti
sbb
(bad)
fmul
or
fidiv
gs
xchg
test
pop
or
xor
imul
cld
jmp
dec
sbb
(bad)
fcomp
push
or
int3
and
test
nop
in
mov
scas
pusha
sbb
lods
jmp
stos
or
sbb
loop
push
sti
fst
push
mov
sub
xchg
stos
lahf
addr16
loopne
stos
inc
sbb
imul
and
add
pop
pop
jle
call
sbb
pop
fsubr
adc
movs
es
sub
dec
dec
mov
rcr
cld
mov
jp
push
scas
jnp
rcl
repz
push
jbe
pop
jle
xchg
mov
int
shr
inc
inc
xchg
test
xchg
cwde
mov
dec
fbld
std
(bad)
xchg
out
cmps
mov
sub
mov
mov
inc
aas
sti
push
sub
pushf
in
sbb
loope
in
enter
mov
retf
push
jns
sub
xor
jno
jecxz
ret
cmps
fld
xchg
out
test
jno
call
movs
pop
mov
mov
mov
dec
dec
pusha
lds
adc
mov
sbb
ds
sbb
mov
test
loope
ret
neg
mov
or
into
cld
bound
jne
pusha
in
dec
push
and
push
or
inc
mov
mov
or
pushf
shl
call
add
or
imul
cmp
mov
outs
lock
out
(bad)
loop
arpl
test
add
stos
sbb
dec
shl
repnz
(bad)
jmp
std
xlat
xor
les
sub
pop
mov
xor
sbb
jle
int3
dec
movs
dec
inc
movs
out
lahf
fs
ins
mov
fwait
cwde
mov
das
mov
inc
fiadd
sbb
stc
int3
(bad)
je
pop
push
or
jp
add
push
mov
sub
(bad)
sub
imul
push
add
and
add
push
aas
inc
aas
in
call
(bad)
neg
(bad)
in
push
call
or
mov
shr
cli
das
sar
outs
inc
mov
bnd
aaa
test
mov
iret
mov
add
es
dec
imul
cmp
shr
pushf
test
daa
repz
cs
cld
add
add
js
stos
dec
sub
push
push
int3
push
movs
xchg
add
and
cmps
in
push
xchg
dec
fs
add
sti
in
iret
add
add
fs
dec
dec
popf
jle
jo
idiv
jne
adc
loop
ins
add
ret
aad
cmp
and
aas
add
xchg
mov
mov
or
sbb
(bad)
pushf
push
cld
fwait
xor
ss
repnz
scas
jg
xor
out
mov
mov
xor
push
enter
add
popf
aad
push
push
xchg
xlat
mov
(bad)
out
push
xchg
les
adc
mov
add
push
sbb
sahf
retf
lds
push
imul
mov
mov
div
aas
xchg
pop
mov
mov
test
and
inc
retf
in
int3
imul
movs
inc
sub
data16
ficomp
fisttp
(bad)
mov
cmp
xchg
xor
sbb
mov
xchg
call
fstp
outs
xor
and
adc
fcom
cmp
js
inc
js
loopne
pop
retf
push
xchg
into
int
cmp
cmp
pop
(bad)
addr16
bound
add
jno
mov
jns
cld
popa
pop
mov
cmp
mov
push
test
pop
leave
jmp
add
in
mov
push
and
sbb
loopne
cmps
adc
push
dec
or
and
stos
nop
mov
jae
jl
mov
addr16
icebp
cmp
ror
and
sub
mov
sub
rol
mov
mov
push
aas
in
lar
addr16
lock
call
int3
repnz
add
mov
xchg
cli
mov
xchg
repnz
leave
sbb
mov
sub
xor
(bad)
ins
jecxz
inc
retf
dec
mov
xchg
fnstcw
hlt
pop
mov
jecxz
mov
pushf
push
or
jmp
xlat
in
cmps
icebp
jge
(bad)
out
push
popa
fdivrp
fwait
push
(bad)
fisttp
mov
cwde
inc
stos
add
pop
cmc
cmp
mov
call
retf
iret
push
push
xor
push
xor
pop
xchg
xchg
push
icebp
or
xchg
aad
je
jg
imul
mov
hlt
scas
cmp
jnp
inc
xor
sahf
add
mov
sbb
clc
and
mov
add
(bad)
mov
call
(bad)
mov
(bad)
push
cmp
pop
lahf
jge
jnp
pushf
xchg
jbe
shr
outs
out
in
cmps
pop
cld
out
dec
test
ss
aas
popa
xchg
pop
xor
lock
mov
inc
ja
pop
sti
movs
jp
add
mov
push
outs
xchg
jno
in
cs
dec
je
jle
shl
cmc
mov
push
psrlq
out
sbb
outs
rol
inc
lods
(bad)
and
jge
sub
sbb
ins
inc
xchg
push
jnp
push
cmps
sbb
xchg
jge
sbb
jbe
cli
pop
mov
mov
pop
outs
loope
inc
pop
std
outs
dec
fdivr
push
clc
adc
pop
ds
movs
(bad)
stc
(bad)
cmp
outs
sub
or
jb
stos
mov
in
ret
dec
sahf
pop
(bad)
pop
pop
xchg
mov
sub
jg
sub
fimul
loop
pushf
add
and
dec
mov
jae
inc
cdq
jnp
xchg
adc
shl
(bad)
cmc
push
cs
pop
ja
jl
retf
fld
into
push
fist
mov
stos
pop
mov
rcr
jle
loope
test
mov
fcmovne
xchg
mov
jge
call
mov
mov
pop
aas
or
push
inc
xchg
lods
cmp
add
test
jp
add
or
dec
mov
lds
cmps
mov
pop
mov
ret
movs
xor
push
sub
mov
or
test
adc
mov
or
jge
and
adc
push
jnp
ffree
mov
ret
rol
lea
inc
int
mov
hlt
jne
mov
popa
and
xor
adc
aad
scas
adc
call
xchg
cld
repz
dec
movs
sbb
sub
push
adc
cmp
mov
test
bound
fcomp
xchg
(bad)
mov
int
cmp
call
int
pop
fsubr
and
and
mov
mov
adc
paddw
into
adc
outs
fstp
pop
xlat
test
in
lods
add
or
retf
sbb
sub
push
pop
adc
jns
sbb
fsubr
jb
(bad)
popa
gs
shl
mov
js
and
in
add
xchg
movd
sar
mov
jnp
stos
adc
mov
add
push
mov
jp
gs
or
sub
test
fdiv
push
lock
scas
or
sbb
(bad)
loopne
mov
cld
std
repnz
into
cmps
sub
fwait
inc
xchg
sbb
and
pop
mov
xor
jl
mov
mov
mov
shl
xchg
aad
ins
call
dec
retf
test
adc
xor
pop
inc
mov
cld
dec
mov
test
adc
je
cmp
sbb
lds
repz
aam
call
and
cmc
mov
mov
sub
inc
xchg
pop
jp
or
mov
mov
fwait
xor
stos
adc
loopne
dec
repnz
sub
add
stos
add
push
fwait
mov
pop
sbb
loope
mov
and
int3
jns
pop
out
pop
test
fisub
cmp
sub
and
push
adc
xchg
lds
jae
add
jp
push
movs
retf
cld
fldenv
in
push
mov
mov
jg
ja
movs
mov
sub
inc
adc
fmul
aam
xchg
xchg
(bad)
cmp
cmps
jae
out
lods
lods
mov
jp
not
aam
push
sub
out
and
inc
lahf
xor
fild
ret
mov
jge
out
(bad)
jle
cmp
in
(bad)
pop
pop
imul
cmps
pop
cmp
mov
pop
pop
dec
inc
(bad)
sbb
in
push
pop
jmp
movs
clc
not
test
cmc
or
sub
sbb
cmp
jmp
xor
dec
sbb
aas
int3
scas
sbb
sub
pop
or
enter
out
dec
(bad)
jnp
out
ret
xor
inc
xor
call
sub
fcomi
jae
xchg
call
jo
loop
loopne
and
pop
and
sbb
add
or
gs
xor
mov
mov
mov
sub
add
mov
out
aas
jmp
inc
mov
popf
mov
sbb
std
cmp
retf
es
push
ss
outs
inc
test
jge
ins
inc
jecxz
mov
retf
int
in
and
mov
gs
add
retf
or
xlat
bound
xchg
fidivr
aaa
push
rcl
push
ins
mov
mov
xor
xor
sub
pop
jle
ss
push
test
aad
rcl
aad
ret
mov
and
sub
cmp
es
test
push
dec
aad
fldpi
cmp
mov
and
sub
hlt
fs
out
mov
into
xor
jo
(bad)
mov
lea
push
dec
aam
and
jl
push
inc
in
sbb
push
repnz
pop
xchg
pop
not
dec
retf
cmps
sar
imul
mov
pusha
xchg
sub
clc
in
jbe
int
dec
mov
xchg
pop
sub
or
(bad)
in
mov
out
(bad)
pop
popf
and
push
or
xor
cmp
out
jne
fsub
cmp
leave
add
pop
mov
ficomp
ds
movs
jl
and
jns
ret
mov
push
ror
mov
aas
jmp
out
xchg
rcr
and
xchg
mov
ds
jg
out
cmp
fwait
sbb
mov
hlt
popf
sbb
add
or
(bad)
shr
sahf
sub
adc
ds
icebp
dec
sbb
pop
push
mov
mov
push
and
cli
mul
rcr
xchg
leave
mov
out
enter
imul
jge
scas
movs
shl
dec
pop
xor
cmps
mov
xor
or
rcl
lock
dec
out
sub
and
sub
fld
fwait
movs
mov
dec
jb
mov
in
xadd
repz
popa
cld
out
addr16
pop
scas
shl
xor
sub
in
popf
out
and
cmp
mov
push
(bad)
rol
call
bound
test
push
movs
cmps
in
sbb
fisubr
div
stc
mov
cld
fwait
jg
sub
fadd
imul
retf
and
and
out
lds
push
rcl
imul
es
or
adc
push
inc
inc
mov
pop
ins
cld
not
cs
pop
loop
icebp
mov
sbb
mov
push
je
push
dec
(bad)
xchg
pop
(bad)
out
dec
add
xlat
cmps
mov
sub
shr
xchg
fdivr
inc
pop
lahf
xchg
pop
rol
inc
push
lock
lahf
cs
jne
or
cmp
sbb
test
(bad)
clc
push
mov
fisubr
repnz
or
xor
mov
sub
dec
in
push
mov
inc
imul
xchg
ja
(bad)
mov
out
gs
and
clc
cmp
jns
inc
out
stos
out
mov
vrcpss
int3
mov
int
dec
addr16
xchg
push
shr
adc
imul
pop
pop
sbb
lods
call
adc
cmp
cld
push
push
push
stos
sbb
inc
mov
xchg
cmp
lea
adc
cld
jno
add
sbb
movs
xor
sbb
xchg
adc
in
dec
add
push
jg
adc
mov
aaa
jp
mov
mov
push
pop
jae
jbe
dec
int
push
(bad)
cmc
sub
ds
sub
ja
mov
jb
xor
idiv
sbb
mov
mov
(bad)
jecxz
mov
mov
or
and
dec
loope
or
xor
sti
ja
enter
jns
adc
mov
in
fsubr
out
and
jg
fldenv
fisubr
clts
pop
aas
or
sub
add
ins
cmp
sub
leave
jg
lock
aad
je
xor
out
cmp
sbb
adc
lds
mov
dec
sub
je
test
inc
je
jmp
adc
add
jg
test
push
add
dec
js
mov
adc
fsub
xlat
mov
aam
pop
cmp
dec
cmp
cmps
mov
in
cmp
push
push
fidiv
loope
pop
xchg
xchg
ficomp
adc
cmp
add
adc
push
in
mov
sub
sub
nop
jo
pop
mov
ret
pop
push
mov
call
mov
fadd
inc
outs
mov
cs
stos
clc
adc
mov
inc
jnp
in
add
cli
imul
xchg
jmp
js
(bad)
xlat
aaa
push
xor
jae
dec
in
jle
(bad)
into
sub
xor
int
mov
jp
(bad)
mov
daa
push
or
and
int3
push
inc
and
mov
push
je
loope
gs
and
jmp
out
loop
jae
out
inc
mov
sbb
inc
push
jmp
fdivp
neg
xchg
sub
gs
sbb
addr16
mov
xchg
xchg
mov
ins
xor
xchg
clc
pusha
arpl
adc
add
inc
(bad)
cmp
or
je
mov
js
out
ss
sub
cmps
add
dec
jp
dec
je
and
lea
mov
jmp
xchg
inc
ds
addr16
iret
lods
es
or
add
aad
dec
jo
add
in
in
dec
push
and
cmps
enter
inc
sbb
mov
cmc
int
mov
ror
dec
outs
mov
mov
(bad)
jne
mov
adc
out
pop
imul
dec
pop
adc
mov
lods
and
mov
mov
cld
add
push
push
jmp
mov
mov
mov
sub
daa
sub
mov
dec
sbb
xor
and
les
retf
in
div
pop
add
push
leave
sub
std
jno
repnz
mov
jl
dec
jns
stc
mov
pop
or
dec
adc
pop
xchg
cmp
arpl
test
ss
xchg
and
sbb
xlat
mov
iret
sti
cmp
add
fsub
jnp
scas
fadd
mov
cmp
dec
push
cwde
inc
mov
mov
cs
sub
dec
sub
mov
dec
sub
add
sti
mov
fs
rcr
iret
dec
push
fs
jmp
outs
push
lods
imul
mov
push
adc
pushf
(bad)
xor
in
push
inc
dec
shl
ror
aas
push
mov
dec
retf
mov
dec
pop
mov
in
inc
sti
and
mov
sbb
fcmovne
mov
inc
nop
pop
dec
pop
js
iret
ret
hlt
pushf
dec
je
jo
test
ins
push
jne
scas
mov
pop
pusha
arpl
(bad)
stos
and
and
mov
inc
and
dec
cwde
shr
iret
fistp
cli
push
xor
sub
and
stos
cmp
(bad)
mov
sbb
fwait
inc
aas
dec
clc
and
xor
(bad)
or
fstp
inc
mov
pop
sbb
ds
push
jno
or
enter
gs
jbe
retf
stos
inc
push
cmp
or
scas
adc
je
cmp
mov
jl
je
gs
lock
mov
test
push
push
nop
pop
mov
sub
(bad)
out
mov
xchg
sar
ss
jno
mov
shr
inc
jp
inc
mov
ss
ins
shl
adc
xchg
movs
test
mov
in
sbb
cmps
push
dec
scas
mov
in
jb
aad
mov
inc
test
pop
push
cli
sbb
cld
arpl
dec
(bad)
cli
adc
fmul
das
idiv
inc
and
xor
scas
mov
sbb
or
and
sbb
mov
ret
sar
cmp
movs
pop
xchg
iret
sbb
fidivr
pop
cmp
arpl
pushf
push
mov
and
xchg
push
xlat
or
loopne
iret
int3
test
mov
imul
inc
mov
jae
adc
adc
stos
pushf
div
xchg
add
mov
push
xor
out
std
xchg
into
xor
ret
lock
mov
mov
and
add
mov
mov
movs
js
push
sti
out
pushf
add
mov
dec
popf
xchg
add
cdq
xchg
mov
cmp
mov
dec
outs
mov
dec
sub
inc
lods
push
pop
adc
lods
mov
aaa
dec
cld
mov
sbb
pop
xor
data16
mov
cmp
fild
cmps
daa
push
ror
or
add
sub
(bad)
xor
mov
int3
test
aas
popf
test
inc
sbb
xor
(bad)
push
cmp
adc
stos
sbb
dec
push
(bad)
mov
scas
es
xor
jmp
xchg
mov
test
cdq
add
dec
cdq
ss
xor
aas
sub
mov
movs
mov
inc
shl
mov
bound
fisttp
dec
fistp
pop
(bad)
mov
div
out
mov
pop
push
inc
lock
adc
cwde
enter
ss
lods
fst
inc
and
outs
scas
out
pushf
repz
push
aas
jge
in
add
and
jno
push
add
mov
bound
pop
das
jmp
adc
sahf
into
std
cwde
mov
pop
ds
adc
cmp
push
or
dec
imul
lods
jae
jmp
lods
dec
pop
jle
fimul
popf
and
xchg
stos
jmp
push
sub
inc
or
or
cmp
sbb
dec
stos
push
nop
cmp
pushf
cdq
jns
mov
test
je
adc
cmp
inc
movs
je
lods
mov
pop
sbb
stos
call
mov
(bad)
sub
adc
add
push
mov
jnp
cdq
stos
fs
stos
pop
outs
icebp
cmp
xlat
sti
sti
ins
int3
std
jmp
xor
mov
test
mov
push
xor
jecxz
add
pop
ret
(bad)
pop
fisttp
sti
(bad)
pop
retf
fst
jge
mov
mov
xchg
test
ret
out
adc
cmps
push
cmp
(bad)
ds
call
ins
jle
test
pop
leave
in
or
mov
addr16
sub
das
push
mov
xor
jno
mov
pop
jmp
jmp
and
test
pop
mov
retf
adc
pushf
mov
popa
ins
pop
add
jbe
jns
mov
inc
lds
mov
sbb
inc
shl
jne
pop
jle
(bad)
scas
ja
loop
ror
imul
imul
lock
xor
fsubrp
imul
lods
push
pop
add
xor
cmp
push
lock
in
add
in
aas
sub
push
popf
nop
dec
dec
aas
sar
add
sub
in
vcmpps
arpl
and
js
loope
shr
mov
or
repnz
lahf
data16
mov
xchg
nop
mov
dec
lea
pop
push
or
mov
ja
dec
enter
or
in
cmps
sbb
push
popa
data16
arpl
jne
xchg
rol
sti
loopne
jge
inc
dec
cmps
fstp
rep
pop
in
mov
add
in
push
mov
add
mov
xor
jb
xchg
dec
mov
stos
ja
inc
sbb
dec
ret
fisubr
and
mov
xor
mov
scas
(bad)
loope
(bad)
mov
ja
lods
pop
out
xchg
adc
ja
mov
add
fnsave
push
fidiv
lea
adc
cmp
dec
xor
js
add
xchg
sub
pop
and
retf
mov
(bad)
sub
xchg
loopne
outs
pop
jecxz
and
add
mov
sub
adc
sub
fwait
iret
jnp
lds
pop
jne
xchg
sub
mov
push
add
retf
mov
test
ds
push
test
mov
push
jg
or
movs
dec
jmp
inc
inc
imul
xchg
ins
mov
cmp
imul
daa
sub
es
dec
push
xor
shl
mov
dec
mov
clc
(bad)
shr
(bad)
xor
cwde
lahf
dec
xor
nop
lods
movs
rcl
push
mov
mov
mov
clc
xchg
and
iret
xchg
and
inc
xor
popf
in
je
std
xchg
aad
stc
xor
jl
arpl
jbe
test
clc
xchg
push
fild
mov
fdivr
inc
repnz
mov
jmp
pop
push
call
xchg
(bad)
cwde
or
fwait
iret
scas
test
out
cmp
jns
mov
popa
lock
pop
leave
rsm
push
out
loop
nop
fs
call
pop
mov
adc
mov
bound
sub
inc
mov
daa
adc
cld
jne
neg
stos
push
jnp
aam
sbb
push
add
jge
mov
(bad)
jo
cdq
cmps
fsubp
div
push
cmp
test
jbe
js
add
adc
inc
push
ss
adc
fisttp
jle
pop
push
mov
add
adc
pushf
popf
arpl
and
sbb
adc
mov
sub
mov
dec
call
push
retf
out
xor
mov
cmc
push
sbb
mov
stos
popf
dec
retf
hlt
xchg
xchg
enter
mov
sub
aaa
and
push
stc
add
out
outs
jne
aas
popa
jecxz
scas
addr16
fucom
dec
jmp
adc
mov
ja
daa
in
mov
imul
out
sub
jecxz
or
nop
mov
ins
out
cdq
leave
daa
(bad)
mov
sbb
cmps
cmp
xchg
and
adc
cs
iret
pop
xor
in
cmp
imul
cld
jae
test
out
sub
popa
cs
mov
fisub
fadd
fnstenv
ja
test
aad
cmc
cmp
mov
gs
fld
jo
fistp
push
xchg
sub
pop
xlat
xchg
jb
xor
rol
sahf
test
xor
inc
dec
pop
dec
out
push
outs
or
stc
adc
pop
sbb
sbb
shl
and
and
push
mov
sahf
sbb
cmp
add
xor
adc
cmp
add
loop
outs
aaa
cmp
xchg
push
(bad)
sub
push
sbb
adc
mov
mov
iret
pop
test
mov
sub
inc
gs
test
jle
ins
add
in
neg
ds
push
fadd
outs
(bad)
sbb
push
lahf
dec
shl
add
mov
fild
loope
rcl
jns
jge
fcmovnb
aaa
or
inc
fistp
pusha
mov
add
data16
dec
jg
jmp
outs
or
mov
mov
out
mov
rol
push
add
dec
ret
adc
(bad)
dec
cmp
mov
xchg
add
mov
cmp
out
rcr
and
xor
pushf
(bad)
sbb
imul
and
jle
add
lahf
addr16
(bad)
sbb
imul
stos
sbb
xchg
mov
cld
adc
pop
in
lea
sbb
scas
mov
inc
jns
arpl
rcl
jl
ss
pushf
ret
and
dec
ret
xchg
je
mov
rcr
push
bound
lahf
pop
sti
test
dec
sbb
clc
hlt
xchg
mov
mov
or
push
movs
imul
xchg
cmp
cld
sub
out
fnstsw
mov
mov
mov
push
jle
cmp
mov
mov
out
jno
mov
cmps
imul
fdiv
movs
add
inc
and
hlt
pushf
out
dec
pop
mov
jecxz
out
test
and
inc
or
arpl
gs
inc
leave
pushf
jne
out
mov
rol
push
xchg
ds
push
dec
add
fdivr
mov
inc
call
pop
loope
and
cmp
retf
lods
push
fimul
mov
loopne
iret
cmp
or
arpl
mov
push
shl
fist
cmp
jnp
(bad)
cdq
mov
fmul
(bad)
jp
test
push
mov
add
adc
adc
test
xor
or
lods
es
mov
jge
ins
mov
fmul
pop
cmp
adc
and
out
and
test
fisub
addr16
adc
ins
mov
jmp
dec
dec
lods
adc
jb
cmps
sbb
aas
or
jmp
jmp
adc
popf
add
mov
mov
or
mov
movs
test
mov
mov
or
cmp
fwait
stc
aad
pop
shl
sbb
rol
(bad)
push
sbb
xchg
cdq
call
mov
inc
lods
jl
aam
sbb
pop
push
adc
hlt
xor
call
xor
xor
(bad)
push
dec
xchg
(bad)
mov
(bad)
mov
jno
mov
dec
out
mov
call
daa
jmp
push
cs
push
add
std
xchg
sahf
int
std
or
ins
ds
and
inc
xor
pop
sbb
inc
ds
sbb
push
aas
loopne
sbb
movs
mov
nop
jg
sbb
bound
and
xchg
push
xchg
cmp
dec
xlat
mov
pop
cmc
sbb
sub
adc
ret
mov
(bad)
jno
ret
(bad)
ficom
inc
adc
movs
(bad)
js
cmp
in
je
daa
sahf
imul
test
mov
cmp
jns
(bad)
jnp
sub
jle
repz
and
in
dec
into
jo
cli
inc
pop
(bad)
retf
popf
cmc
lds
ret
jl
or
or
mov
cmps
or
push
in
fs
loope
test
dec
xor
push
sar
sti
data16
std
pop
arpl
test
repz
sub
std
inc
mov
sar
retf
mov
push
push
pop
sub
add
lods
pop
addr16
test
aam
in
mov
pusha
add
mov
call
gs
dec
dec
fistp
and
xchg
shl
out
cwde
inc
inc
pop
movs
sbb
sti
les
stos
repz
adc
mov
out
dec
stos
sbb
add
ret
or
or
inc
adc
xchg
scas
push
jp
fdivr
jge
dec
fidivr
jecxz
mov
push
xor
push
pop
inc
push
jb
sub
sub
mov
adc
je
xchg
aam
mov
push
(bad)
in
fdiv
dec
pop
or
cdq
mov
inc
add
mov
jp
inc
push
pop
ins
test
add
xor
sahf
mov
test
cmps
icebp
inc
mov
add
dec
mov
jge
cmc
push
sub
bnd
fldcw
ss
fisubr
adc
xor
fld
sub
xchg
sahf
ret
cmps
sbb
out
adc
test
and
les
aas
sbb
push
aam
dec
sbb
mov
mov
xor
mov
inc
ins
push
rcr
jne
(bad)
out
jmp
cmp
or
mov
inc
ins
cmp
cmp
push
sbb
pop
sbb
fnstcw
out
pop
cmps
(bad)
retf
inc
popf
pop
mov
movs
loop
into
loope
push
mov
mov
sub
test
aas
dec
dec
cmp
lods
inc
addr16
repz
das
jb
and
jbe
icebp
aaa
pushf
test
adc
out
dec
cli
popf
(bad)
loopne
lods
push
dec
nop
mov
fstp
adc
sub
jmp
lods
pusha
jle
mov
je
push
xchg
inc
retf
(bad)
fs
xor
das
popf
or
lods
addr16
and
add
or
mov
xor
sti
mov
popa
std
dec
dec
add
js
sbb
or
aam
daa
push
out
inc
xchg
int
and
and
imul
adc
dec
push
jle
add
push
pusha
neg
xor
xchg
dec
xchg
out
retf
iret
cmp
int
sti
jl
scas
push
dec
shl
cli
jb
enter
ret
cmps
and
out
mov
in
in
xchg
out
jge
xor
test
sub
movs
adc
jmp
out
mov
sub
mov
ss
mov
or
pop
dec
outs
jo
pop
inc
ja
imul
fistp
les
lods
dec
add
inc
in
inc
mov
jmp
gs
dec
mov
ins
dec
jecxz
dec
leave
cmps
inc
iret
out
mov
pmuludq
(bad)
cwde
popa
mov
xor
xchg
ds
loope
pop
inc
outs
push
xor
gs
add
push
in
jmp
cld
xor
mov
pop
mov
mov
push
jbe
rcr
aam
into
mov
dec
mov
inc
cli
nop
and
sub
sti
aas
bound
mov
jno
or
sar
scas
mov
jge
es
mov
pop
mov
lods
pop
mov
and
enter
retf
js
xchg
popf
mov
neg
mov
add
and
mov
popa
sbb
adc
fs
es
sub
mov
sahf
(bad)
sbb
ret
cmp
cld
push
ds
scas
dec
mov
dec
xor
jge
loop
push
scas
rcr
mov
pusha
aad
and
retf
das
call
dec
pusha
mov
jnp
adc
imul
das
jecxz
jecxz
dec
shl
call
stos
jge
inc
bound
jne
xor
lea
ins
lahf
sahf
xor
mov
mov
inc
xor
retf
push
mov
es
jge
jae
lahf
into
jecxz
add
dec
scas
xor
add
(bad)
enter
lds
jae
out
call
fcom
sub
mov
mov
add
inc
pop
pop
add
lea
into
(bad)
int
xchg
cmp
sti
sub
mov
ins
xchg
sbb
push
sbb
lea
in
pop
or
fcomp
aad
(bad)
in
mov
pop
imul
not
mov
cmp
jno
dec
(bad)
mov
lea
xor
push
lods
pop
shr
or
inc
jmp
stos
add
push
jne
in
inc
inc
shl
inc
bound
(bad)
jl
lods
out
and
popa
mov
stc
push
xchg
lds
adc
call
adc
loop
cli
pop
sar
out
jno
add
and
push
cmp
(bad)
lods
bound
outs
bound
das
jp
mov
add
pop
cli
out
xchg
retf
add
popa
mov
mov
cmc
add
pop
inc
fisttp
and
add
lds
jmp
les
xor
paddsw
scas
fiadd
sbb
pop
inc
es
stc
iret
cld
out
jmp
(bad)
inc
es
mov
push
shl
jne
xchg
push
bound
je
jg
add
retf
lods
mov
and
fcmovu
ret
and
into
xor
ja
push
xchg
sub
or
lds
xor
fwait
loope
cwde
lahf
ret
popa
sub
push
dec
aaa
sbb
dec
inc
cs
sbb
scas
add
push
ins
out
mov
and
call
or
imul
inc
shl
mov
dec
mov
cmps
sub
mov
push
sub
push
mov
inc
mov
pop
je
jmp
or
adc
pusha
(bad)
test
add
cli
retf
sar
add
scas
fldenv
fstp
or
push
push
ret
int
psubsw
scas
jns
sub
bound
and
iret
fisttp
pusha
call
cmp
mov
icebp
fcom
inc
add
pop
mov
cmp
daa
mov
jl
les
adc
ror
or
cmp
inc
push
inc
inc
xor
mov
ret
test
sbb
shl
iret
push
push
enter
aam
cld
inc
xchg
push
div
lods
and
loope
enter
mov
ror
push
not
popf
dec
add
and
repz
fucomp
daa
mov
xor
mov
iret
adc
and
imul
leave
sar
movs
dec
xchg
xor
daa
or
push
adc
mov
add
cld
scas
std
in
and
jmp
or
frstor
pop
mov
cmp
push
jb
in
cmp
pop
nop
js
jbe
mov
fimul
ins
pop
stos
jg
cmp
(bad)
repz
pop
add
lock
fwait
sbb
or
call
mov
jecxz
xchg
pop
dec
jg
xor
xor
iret
pop
xchg
mov
push
das
pop
(bad)
stos
mov
stos
in
cmps
jg
inc
sub
fild
jo
xor
leave
imul
cmp
fwait
mov
sub
lahf
dec
sbb
icebp
pop
out
(bad)
shr
cmp
push
mov
iret
test
out
xor
cmp
add
jle
mov
(bad)
or
jae
adc
into
jmp
pop
pushf
xchg
les
inc
inc
(bad)
sti
mov
push
sbb
ds
mov
mov
fwait
out
enter
or
aam
mov
mov
das
fist
and
gs
fdiv
pop
lods
sub
movs
sbb
scas
pop
sub
std
xchg
es
xlat
lahf
mov
rcr
enter
out
stos
lea
fild
mov
not
test
inc
ret
jae
jg
add
das
mov
adc
pushf
out
sbb
js
pushf
mov
jecxz
push
adc
scas
jno
inc
(bad)
cdq
fwait
stos
push
ja
jl
inc
sbb
xlat
addr16
and
cmp
outs
jmp
sub
stos
lods
mov
ret
mov
stc
mov
cdq
dec
ins
(bad)
lock
pop
test
inc
inc
aam
sti
or
hlt
retf
retf
mov
inc
mov
in
mov
out
loope
adc
call
jge
wrmsr
dec
in
adc
dec
dec
xchg
imul
cmps
aaa
mov
imul
or
out
call
inc
stc
mov
mov
punpckhwd
sbb
aas
push
push
mov
(bad)
push
adc
inc
arpl
aaa
cmp
in
in
push
out
sub
aaa
aas
(bad)
mov
(bad)
jmp
sub
jo
pop
repnz
sub
(bad)
mov
inc
push
in
jl
mov
cmc
rol
test
jns
stc
popa
fdivr
je
pop
push
push
push
cmp
je
mov
push
call
lahf
inc
inc
sbb
ficom
or
not
retf
clc
sbb
outs
retf
in
imul
cs
sub
aaa
int
into
push
cwde
xchg
pop
outs
js
int
xor
or
cwde
out
mov
pop
lods
outs
mov
adc
sub
sub
je
mov
repz
jb
and
retf
fdivr
add
mov
dec
loop
ret
fld
or
sub
dec
add
jnp
mov
sti
sbb
adc
mov
imul
(bad)
dec
jmp
adc
jecxz
mov
shl
aad
lahf
cs
test
mov
add
fsub
(bad)
cmp
jb
push
mov
cmps
repz
adc
inc
ja
out
mov
cmp
int
repz
dec
rcr
mov
sbb
ins
push
adc
inc
and
inc
jle
shl
cmp
push
add
stc
lea
sub
xor
dec
dec
mov
mov
loopne
xor
inc
or
cwde
lds
mov
popa
mov
cmp
add
xchg
mov
sbb
das
dec
stos
mov
js
ret
mov
iret
call
call
bound
mul
ins
dec
loope
gs
call
xchg
xor
pop
xchg
pop
scas
cwde
pop
aad
jns
push
lods
icebp
pop
lods
push
lock
fisub
pushf
push
jmp
jno
(bad)
xor
ror
dec
rcr
sub
inc
movs
mov
mov
pop
std
mov
(bad)
jb
fwait
sbb
adc
inc
pop
sub
lods
xor
in
call
push
stos
pop
sbb
push
movs
repz
pusha
fstp
or
mov
xor
sub
dec
lds
adc
mov
(bad)
pop
add
pushf
push
xlat
mov
cmp
popa
aaa
inc
adc
sahf
pop
jmp
repnz
rcl
ds
push
push
mov
in
adc
(bad)
dec
mov
adc
sbb
test
xchg
and
mov
into
mov
cmp
or
mov
imul
cld
test
xchg
out
jmp
sbb
sub
and
push
outs
icebp
mov
mov
js
add
pop
xchg
or
mov
cdq
ins
cmp
cdq
add
dec
xchg
push
push
inc
or
push
lock
dec
les
sahf
adc
pop
mov
mov
pop
pop
bound
push
(bad)
repnz
jmp
in
stos
and
and
sub
cmp
sar
add
hlt
fadd
addr16
push
mov
idiv
(bad)
(bad)
test
sub
pop
sbb
hlt
cmp
popf
xor
fs
mov
mov
jne
pop
mov
call
cs
loop
stos
adc
test
dec
repnz
dec
xor
aas
sahf
js
mov
enter
xchg
push
jnp
(bad)
mov
pusha
inc
out
stos
rcr
pop
ss
xor
(bad)
xor
loop
or
sbb
jecxz
addr16
push
jno
dec
inc
stos
and
pushw
cwde
repz
mov
sub
push
mov
mov
push
or
cmp
popf
sbb
cmps
xor
or
mov
xchg
pop
std
out
shl
mov
push
dec
mov
pop
xor
xchg
adc
sbb
mov
sub
sqrtps
push
xchg
pop
stos
out
cmp
cmp
iret
cmps
movs
test
mov
fsubp
shl
icebp
jno
push
push
into
pop
inc
jno
push
shr
dec
movs
jge
or
dec
inc
xor
mov
aas
mov
inc
mov
add
or
sar
pusha
sbb
mov
jmp
sti
push
lahf
out
enter
ss
cld
and
ret
imul
or
and
and
push
aad
xor
in
add
fnstsw
les
fwait
add
add
fsub
retf
shr
in
pop
adc
mov
in
aaa
push
(bad)
aaa
outs
xchg
jno
js
ins
xor
inc
jne
and
ins
lods
pop
and
arpl
fs
xor
and
push
push
popa
mov
or
ret
inc
xchg
cmp
xor
dec
mov
cmp
pop
cmp
push
mov
sub
mov
lahf
mov
ja
sahf
mov
fdiv
sub
out
and
add
fild
mov
mov
(bad)
imul
jns
adc
xor
addr16
add
jmp
shl
lods
jno
test
inc
sub
xor
imul
fidivr
(bad)
out
or
(bad)
sbb
int
call
mov
sub
push
push
sahf
aam
sub
aas
jmp
fidiv
fnstcw
pop
movs
(bad)
in
push
jge
jno
out
mov
in
mov
and
cli
sbb
inc
jne
and
test
cs
pop
adc
xor
or
push
jmp
int
jae
push
xlat
(bad)
rcr
push
lock
xor
sbb
fs
sbb
dec
out
inc
loope
xchg
mov
fcom
cld
out
test
fs
fcomp
cmc
push
xchg
dec
rcr
sbb
shr
lea
test
cmp
jge
or
shl
adc
push
fsub
cmps
and
mov
test
aas
push
push
adc
xor
daa
adc
retf
add
jecxz
(bad)
jmp
lock
das
aaa
aad
in
push
into
sbb
mov
xor
int
sub
mul
adc
das
pusha
jle
cs
add
and
fisttp
idiv
mov
pop
xchg
cmp
retf
dec
push
xlat
mov
jecxz
test
shr
outs
jmp
in
pop
sbb
adc
cmc
dec
push
arpl
nop
adc
sbb
add
arpl
pop
or
push
and
popf
cs
outs
and
mov
stos
push
sub
sbb
jmp
xor
xlat
sbb
mov
push
cmps
ss
out
dec
movs
cmp
pop
pop
(bad)
jmp
fnstcw
mov
mov
mov
xchg
mov
(bad)
movs
enter
xchg
lahf
in
test
std
sbb
loope
cmp
jmp
out
jns
je
sub
mov
jle
retf
inc
mov
out
sahf
mov
push
pop
add
sar
imul
fnsave
popf
pop
stos
popa
push
cmps
add
xchg
xchg
pop
cs
int3
add
hlt
les
sbb
xlat
push
add
ss
inc
or
cmp
sub
aas
xchg
pop
xor
inc
in
push
push
dec
mov
inc
xchg
pop
inc
mov
cmp
stc
cwde
jno
mov
push
xchg
add
pop
mov
pop
mov
sbb
cmps
test
addr16
rcr
push
sbb
enter
mov
sbb
mov
outs
(bad)
sub
test
xor
dec
add
mov
mov
mov
shl
enter
jmp
inc
sbb
cmps
stos
cmp
sub
sub
sahf
or
push
(bad)
fdivrp
sub
(bad)
fild
retf
(bad)
fcomi
ss
test
inc
sbb
jmp
retf
and
rcr
mov
dec
movs
(bad)
sbb
rcl
mov
xchg
pop
inc
pop
adc
adc
cmc
or
add
push
mov
shl
les
pop
(bad)
int3
cmp
test
xchg
(bad)
ss
je
dec
loop
test
ins
push
es
rol
mov
imul
int3
cmps
sbb
fst
or
sar
mov
popa
jnp
call
adc
and
lahf
ds
(bad)
repnz
xchg
xlat
and
add
push
test
mov
sub
bound
and
enter
bswap
clc
mov
aad
push
mov
mov
sar
sub
imul
fbstp
jae
sbb
cwde
ds
xor
pusha
mov
pop
push
cmp
mov
loop
aas
sbb
cld
les
das
jno
out
cmp
mov
jp
(bad)
mov
pop
call
adc
mov
sbb
je
push
lea
xor
mov
mov
ret
rol
jecxz
adc
push
dec
add
or
pop
push
mov
lods
stc
repz
aaa
call
call
dec
jecxz
xor
mov
jbe
sbb
test
popa
rep
lds
xchg
loope
call
(bad)
mov
call
jge
xchg
xor
fistp
xchg
out
aas
xor
push
ror
sub
xchg
cwde
jns
jl
cmps
int3
inc
xor
push
and
cmp
fbstp
les
push
inc
jne
test
pop
inc
cmc
retf
mov
add
inc
or
int3
sub
imul
loope
mov
leave
pop
push
pushf
xchg
dec
pop
mov
cld
adc
fmul
mov
jl
xchg
and
and
lock
xor
cmp
cmp
mov
es
xor
jmp
ja
shl
adc
imul
dec
cmp
loopne
cmp
(bad)
add
add
jns
into
push
cmp
xor
or
cmp
jno
jb
inc
mov
repz
mov
fnsave
jmp
rcr
outs
sar
xchg
jmp
(bad)
cmp
xor
cmc
mov
or
pusha
das
or
or
in
xor
idiv
or
push
cli
neg
jno
(bad)
icebp
leave
push
or
das
mov
shl
jne
inc
push
mov
cmp
fbld
rcl
daa
push
jb
xor
xor
dec
cwde
ins
fist
xor
push
repz
imul
sbb
xor
test
sub
adc
loopne
aam
enter
lods
or
or
jg
jecxz
(bad)
fistp
(bad)
cmps
bound
sbb
jl
enter
push
cmp
inc
or
add
xchg
aam
xor
shl
pop
jp
neg
sbb
dec
push
ja
xchg
jno
sar
call
cdq
in
or
pop
adc
gs
jp
int
inc
mov
popa
inc
add
mov
rol
std
xchg
sub
push
test
fdiv
jae
mov
fisubr
xchg
cwde
add
cs
popf
retf
mov
mov
addr16
push
(bad)
inc
cmps
mov
sbb
pop
shl
scas
or
retf
inc
jl
xchg
adc
rol
pop
inc
cmp
ja
in
sahf
xchg
popf
pop
aad
mov
sbb
aaa
je
fstp
add
popa
es
leave
push
(bad)
and
and
outs
and
add
cmps
out
mov
push
inc
mov
mov
stc
ins
add
rol
cdq
mov
stos
push
pusha
sub
xchg
mov
imul
hlt
out
mov
mov
aad
sbb
movs
mov
jge
pop
mov
fs
(bad)
test
leave
icebp
mov
sub
fcom
and
(bad)
jmp
jmp
dec
pushf
rcr
jmp
push
inc
sbb
clc
(bad)
inc
mov
test
jmp
lahf
adc
nop
mov
pop
pop
or
add
push
imul
inc
or
push
mov
fldcw
bound
addr16
add
mov
adc
imul
mov
jle
mov
jmp
dec
icebp
jns
pop
jge
leave
push
jmp
push
add
nop
sub
xor
fst
xchg
mov
xlat
jg
push
call
dec
daa
(bad)
mov
(bad)
mov
aaa
test
fnstcw
sub
add
jo
mov
mov
xor
xor
sbb
out
push
js
iret
addr16
test
outs
sbb
jbe
cmps
int3
ins
add
scas
xchg
retf
mov
mov
fistp
sub
retf
dec
xor
xor
push
je
pop
(bad)
loopne
mov
loope
pop
into
cmp
push
loopne
jo
or
ds
mov
fxch
and
cdq
inc
pop
lahf
iret
pusha
jno
jne
in
pushf
xor
cwde
lahf
mov
and
fpatan
inc
nop
retf
stos
cmc
inc
push
aas
aas
pop
test
jecxz
jp
xchg
mov
mov
jae
iret
xor
ret
lods
and
stos
xchg
cdq
mov
jp
mov
outs
pop
cmc
loopne
cmp
jnp
jge
inc
outs
sar
mov
sub
(bad)
xlat
xchg
data16
je
mov
mov
push
jmp
mov
sbb
xor
push
shl
(bad)
mov
loop
loop
pop
xchg
xor
jge
out
je
mov
fs
and
das
adc
call
xor
mov
mov
dec
inc
rol
jo
sub
mov
sub
sub
cmp
and
inc
xor
xchg
and
aas
jmp
inc
dec
cmp
out
adc
repz
scas
loop
jnp
cmp
push
(bad)
shr
jl
fbld
lds
fwait
push
push
ror
out
xchg
xchg
or
test
das
mov
outs
ds
cmps
inc
mov
lds
mov
pcmpeqb
jnp
movs
xor
xchg
stc
ret
retf
xchg
fbld
pusha
adc
push
cmp
dec
fdivr
sbb
mov
dec
fidivr
out
aad
ds
popf
adc
sub
pop
outs
cmp
into
lea
fidiv
and
sub
ja
ins
inc
clc
call
movs
adc
loopne
push
or
push
fdivr
xor
fwait
pop
int
mov
(bad)
test
ds
pusha
jo
lods
adc
ins
jg
push
jge
icebp
pop
push
pop
mov
xchg
es
fwait
dec
test
pop
cmp
xor
in
enter
lahf
test
sub
jno
xor
mov
dec
icebp
daa
ret
and
lea
mov
ja
fiadd
mov
mov
pop
shl
and
loopne
retf
sub
enter
sbb
repz
test
xor
push
mov
mov
adc
stc
iret
and
xchg
aaa
add
push
loop
xchg
or
mov
shr
aad
dec
jle
xlat
daa
push
scas
inc
in
cmc
push
ins
ret
jnp
jmp
adc
add
adc
sbb
pop
cmp
ret
adc
add
ss
mov
imul
daa
sub
repz
xchg
std
dec
rcl
fsubr
sbb
fcmove
ss
mov
hlt
idiv
fs
mov
retf
ja
xchg
fisubr
pop
pop
repnz
mov
jg
inc
adc
cmps
out
pop
sub
add
mov
jbe
mov
pushf
je
in
ins
popf
ret
cli
xor
mov
add
popa
pop
xor
adc
and
xchg
std
push
icebp
xor
fstp
mov
loop
hlt
aaa
add
mov
sub
pop
cmp
xor
icebp
push
cdq
pop
and
sbb
add
jb
cld
cmp
sub
cmc
mov
cld
lock
pushf
nop/reserved
dec
out
mov
sbb
sbb
mov
in
inc
pop
mov
adc
and
loopne
fistp
cdq
movs
movs
pop
mov
push
out
dec
out
clc
and
pushf
test
daa
arpl
call
call
ds
je
cmp
cmps
push
data16
scas
mov
imul
xchg
or
jne
xchg
int3
mov
mov
sbb
sbb
xlat
out
movq
je
mov
push
xor
jo
int3
and
pop
jl
push
nop
mov
test
push
pushf
mul
xchg
cdq
and
pop
jb
mov
arpl
or
fcmovnb
cmps
mov
imul
inc
add
loope
adc
in
pop
mov
lea
push
and
in
sub
(bad)
leave
(bad)
int
push
mov
dec
fiadd
mov
stos
lods
loopne
sbb
jp
pushf
shr
adc
inc
mov
mov
loop
dec
leave
fimul
imul
push
sahf
mov
(bad)
cmp
clc
repz
ret
jecxz
and
pusha
sub
fsub
jb
je
je
and
mov
sbb
xor
or
aad
inc
xor
jno
popa
mov
cmp
mov
sub
mov
cmp
stos
mov
xor
jo
mov
in
push
mov
xchg
mov
mov
ins
push
inc
ins
add
fimul
jge
lods
pushf
push
pop
inc
std
das
je
movs
mov
enter
or
mov
add
popa
push
lods
inc
sahf
push
movs
not
or
xlat
int3
pop
scas
out
cmp
in
inc
jb
jb
ins
lock
cmc
xor
test
dec
dec
test
hlt
aam
xchg
xor
fmul
(bad)
shl
and
push
jg
inc
jle
imul
pop
xchg
inc
xchg
cmp
jp
and
push
cdq
adc
mov
lods
aas
les
test
sbb
(bad)
xchg
addr16
and
test
cmps
jnp
jb
cmp
repnz
mov
jbe
fcmovb
stc
loope
into
xor
popa
stos
jmp
in
in
je
mov
sbb
lock
xchg
jmp
cmp
push
in
add
push
sbb
(bad)
jmp
cmps
loop
sahf
pop
lahf
loop
mov
rcl
adc
call
mov
(bad)
fsub
mov
xchg
push
or
leave
ss
jnp
xlat
jg
jle
fwait
aas
xor
mov
cmp
lods
push
hlt
ss
scas
xor
adc
push
mov
scas
enter
fldenv
pop
mov
out
popa
jl
inc
in
push
or
jmp
lahf
loop
shl
(bad)
leave
std
outs
dec
in
test
lock
aaa
jecxz
pop
mov
(bad)
(bad)
stos
cdq
cwde
imul
stc
jge
stc
push
sbb
(bad)
stc
(bad)
test
mov
repnz
xchg
enter
pop
jg
or
dec
ins
dec
fstp
test
lock
inc
dec
sbb
adc
xor
jb
lods
in
test
fimul
jg
int
pop
sub
fwait
lahf
pop
mov
lock
jp
jl
stos
dec
std
mov
pop
dec
or
mov
xor
gs
ja
dec
(bad)
xlat
pusha
pop
das
enter
pusha
inc
mov
mov
add
adc
cmps
add
jge
outs
jle
mov
or
mov
dec
cdq
in
pusha
das
fcom
jae
das
fldl2t
mov
inc
cdq
test
(bad)
jne
mov
cdq
cmp
js
inc
ss
add
cmp
mov
and
push
dec
fwait
mov
not
push
jg
pop
mov
jecxz
(bad)
stos
outs
xchg
daa
lock
pop
aaa
dec
inc
sbb
into
add
inc
cmp
xchg
jb
popa
sub
mov
call
std
pop
pop
ins
push
addr16
addr16
push
xor
jb
in
mov
dec
jne
sbb
stos
dec
into
dec
(bad)
mov
xchg
inc
mov
add
jl
cmp
icebp
adc
mov
jbe
or
imul
test
or
xor
stos
(bad)
fst
(bad)
popf
fstp
js
push
xchg
sub
add
mov
or
int3
aaa
mov
inc
in
dec
push
cmp
shl
mov
jae
out
into
ret
dec
mov
or
inc
call
push
fisttp
push
or
arpl
dec
sub
or
divps
clc
dec
mov
lahf
or
ret
popf
test
mov
inc
mov
sahf
mov
xchg
por
inc
xchg
aad
imul
push
xchg
data16
out
and
add
cmp
(bad)
psrlw
sub
(bad)
cs
xlat
stc
xchg
cmp
movs
(bad)
fwait
ja
or
outs
movs
cmp
xchg
xor
aam
mov
or
int
ds
cmp
test
and
mov
in
xor
inc
inc
loop
scas
cmp
inc
icebp
xchg
iret
dec
mul
or
sti
sbb
in
out
in
add
cwde
xor
ins
pop
retf
jmp
and
mov
or
and
cmp
and
mov
pop
jnp
and
ror
fs
cmp
es
jp
nop
mov
xchg
dec
mov
sub
push
sti
in
xchg
push
out
jnp
mov
shl
mov
mov
ret
xchg
mov
stos
add
ret
fstp
lods
mov
call
sar
add
fmul
mov
add
xor
push
iret
call
movs
les
ds
(bad)
sub
push
jae
sub
cmp
leave
cmp
jnp
adc
call
mov
ret
push
pusha
xor
push
mov
stos
sub
lods
mov
jg
in
ret
jmp
sar
fist
movs
inc
pop
dec
cmp
nop
and
lods
or
cmc
cwde
icebp
outs
icebp
ret
fdiv
mov
arpl
add
mov
mov
dec
std
bound
loop
xchg
jae
cmp
dec
cmc
mov
mov
loop
xchg
bound
mov
into
xlat
dec
(bad)
shl
xor
movs
dec
ficom
ins
xor
mov
gs
and
cmp
mov
(bad)
out
test
das
sbb
js
pop
mov
xlat
jmp
xor
dec
loope
jnp
nop
pop
fdiv
push
add
(bad)
das
sbb
adc
and
sbb
jmp
les
and
arpl
aas
cmps
pop
clc
cdq
xor
out
fist
adc
mov
xchg
ss
cld
add
dec
addr16
sbb
into
loope
xor
mov
xchg
aas
cmp
das
retf
icebp
ss
adc
out
sbb
sbb
fs
and
mov
pop
lods
cmp
mov
sahf
ret
cmp
push
bound
add
fwait
mov
jns
sbb
or
push
cmps
ins
add
fild
ret
sub
mov
jae
popa
mov
jg
dec
mov
jg
(bad)
in
and
push
sahf
test
adc
and
movq
adc
adc
sbb
cmp
add
fld
fstp
aam
mov
out
sbb
inc
call
xor
sbb
scas
jnp
xchg
clc
pop
add
fwait
les
xchg
repz
sti
inc
xor
mov
aam
jmp
mov
sti
cs
clc
ins
pop
pop
mov
sbb
mov
add
int
sti
push
push
mov
inc
mov
sub
and
jnp
repnz
(bad)
cmp
repnz
mov
and
push
mov
mov
mov
or
or
mov
xor
xor
push
scas
add
inc
int
aam
pop
adc
int
sub
push
xor
fucompp
out
push
sbb
ja
mov
xor
cmp
fcom
(bad)
and
add
test
ficom
push
push
into
mov
call
mov
push
scas
jecxz
pop
div
hlt
mov
add
adc
cmp
pusha
fstp
fxch
loopne
ror
inc
pop
arpl
lock
xchg
js
pop
cmp
call
add
bnd
inc
cmp
mov
cmp
es
adc
add
inc
jmp
scas
xor
dec
in
(bad)
and
cmp
sub
lahf
sbb
sbb
fwait
jp
movs
push
xchg
sahf
jg
pop
mov
xchg
arpl
jmp
cdq
jno
adc
mov
mov
adc
test
mov
sbb
add
mov
push
or
and
add
cli
sbb
popf
mov
call
call
pop
stos
cmp
fld
bound
fild
jl
push
add
xchg
pusha
mov
jl
cmp
lock
fild
out
mov
jmp
pop
mov
test
pop
wrmsr
add
aad
jbe
xor
cmc
or
mov
add
jmp
dec
xor
push
cwde
mov
or
push
int
mov
inc
mov
mov
ret
test
mov
push
ror
inc
punpckhdq
push
cs
mov
call
in
xchg
sbb
leave
add
sbb
and
or
push
xor
jle
jae
pinsrw
hlt
aas
push
fimul
js
(bad)
jae
stos
jo
test
sbb
xor
or
and
pushf
inc
pop
out
ffreep
push
jp
test
xchg
(bad)
xchg
mov
cmp
fidiv
and
bound
jno
inc
out
fldenv
into
cli
mov
xor
mov
push
stos
imul
xor
ret
retf
pop
sub
inc
rol
and
pop
mov
and
ret
(bad)
mov
xor
cld
fcmovu
adc
scas
shl
lods
sbb
pop
jecxz
push
mov
sbb
cmp
or
add
dec
dec
(bad)
jmp
ret
mov
mov
xchg
mov
add
mov
jg
fsubr
cmc
jg
out
dec
add
ds
xchg
push
dec
mov
call
jp
movs
aaa
(bad)
std
and
xchg
mov
push
out
jae
mov
ins
jne
lods
aam
cdq
dec
pop
xor
sub
push
xor
add
std
adc
popa
in
inc
sar
xchg
in
fsubrp
enter
iret
addr16
imul
std
sbb
rcl
xchg
lock
fcom
mov
test
xchg
sbb
pushf
mov
push
xchg
sub
add
stos
xor
mov
adc
lods
(bad)
jle
ss
jns
xor
sbb
sub
dec
mov
int3
adc
inc
inc
mov
mov
pop
add
imul
mov
jmp
inc
add
shr
cs
mov
jnp
scas
fistp
pop
mov
lea
sub
cdq
inc
cmp
push
cli
call
jae
pop
mov
ins
push
sti
(bad)
(bad)
cli
inc
dec
jns
cmps
cli
inc
pop
pop
sub
pop
push
or
fcomp
scas
jecxz
shl
loope
retf
pop
scas
fild
(bad)
ffreep
dec
fcomp
mov
pop
mov
out
ret
cmp
std
shl
adc
mov
repnz
xchg
mov
pop
jne
cmp
xchg
scas
popa
mov
dec
inc
push
mov
movs
push
jo
push
sbb
xchg
test
wrmsr
inc
ror
cwde
les
cmp
lahf
adc
mov
js
jmp
imul
and
jle
jecxz
or
inc
add
sub
mov
cmps
rcr
test
cs
aad
push
push
inc
cs
jno
dec
jl
dec
jae
in
and
xor
popa
xor
stos
test
not
hlt
jae
mov
dec
movs
jnp
cld
xchg
inc
mov
adc
imul
pop
jl
sub
and
leave
ss
inc
jbe
pop
mov
(bad)
dec
adc
(bad)
ret
jnp
jmp
mov
mov
fimul
adc
test
shl
sbb
in
(bad)
ror
cmps
leave
imul
daa
cmp
dec
cs
cmp
xor
popf
xor
pop
adc
add
push
pop
cmp
ret
leave
jle
xor
mov
das
fsub
int3
outs
movs
cmp
je
push
jnp
and
cmp
mov
or
fadd
scas
enter
pop
repnz
mov
dec
inc
outs
test
xchg
jo
stos
test
dec
shl
push
fsub
test
push
pusha
jnp
add
adc
adc
cmc
loopne
mov
mov
ds
aad
mov
lods
cmp
mov
push
retf
add
mov
adc
addr16
push
dec
test
push
pop
xchg
out
scas
pop
add
push
dec
and
bnd
push
add
mov
mov
add
imul
push
idiv
xchg
pop
rcl
mov
cwde
mov
jl
sbb
inc
loop
push
mov
stos
ffreep
call
adc
leave
inc
pop
push
mov
sub
fwait
cmps
les
aas
iret
dec
je
in
test
imul
push
ins
mov
push
shr
fwait
push
lahf
adc
(bad)
jg
push
inc
push
xchg
dec
mov
aam
push
int3
adc
les
cmc
test
(bad)
adc
push
jbe
jnp
push
push
imul
cli
cmp
cwde
(bad)
aam
adc
lods
stc
push
mov
call
repnz
pop
jmp
sbb
and
mov
sar
jl
rcl
and
cli
dec
loop
mov
jnp
lods
jmp
test
mov
sub
retf
(bad)
inc
jg
in
int
mov
imul
pop
or
mov
ss
lahf
xor
or
aas
push
or
pusha
test
test
fstp
call
pushf
mov
sahf
sbb
cmp
push
dec
pop
xor
ins
add
xlat
mov
push
push
ret
mov
nop
fsub
out
aam
jg
movs
dec
dec
(bad)
das
push
xchg
pop
in
cmps
xlat
jge
ss
out
mov
mov
inc
pop
cdq
jns
rol
push
nop
test
mov
push
mov
sbb
enter
pop
dec
pop
sub
add
js
push
push
xchg
fstp
jg
in
mov
jg
scas
jnp
icebp
xchg
es
xor
loope
int
sti
stos
or
pop
repz
mov
adc
push
mov
pop
ins
loop
mov
pushf
jecxz
dec
int
cmps
dec
(bad)
jmp
test
xchg
mov
imul
push
(bad)
dec
jmp
jl
rcl
lock
iret
int
xchg
push
jmp
jne
sub
push
mov
mov
outs
xor
pop
jb
cmp
add
repnz
cdq
dec
mov
jg
in
jl
cli
lea
mov
xchg
js
fwait
sub
cwde
xchg
adc
out
xchg
add
fxch
call
sub
pop
ffree
xor
sar
rcl
mov
sub
inc
pop
(bad)
imul
aam
mov
bndldx
add
(bad)
and
pusha
ds
pushf
jecxz
xchg
scas
dec
imul
inc
int
test
xlat
mov
xlat
jns
js
fst
mov
iret
sub
in
inc
and
push
jle
and
sbb
sbb
out
ficomp
mov
hlt
ss
out
dec
ins
push
or
add
into
push
fsubp
repnz
sub
nop
test
mov
jl
jne
cmps
pop
stos
sub
pop
mov
push
lea
mov
or
fucomi
movs
dec
sub
xor
fiadd
bound
call
loopne
sub
sbb
or
mov
xchg
jp
xor
data16
outs
(bad)
fst
test
iret
sbb
call
mov
mov
push
out
xor
mov
fisttp
adc
arpl
mov
(bad)
int3
mov
mov
mov
pusha
mov
loop
xor
je
jae
xlat
cmp
repnz
out
adc
mov
adc
mov
add
into
or
inc
retf
loop
in
clc
retf
ss
push
ss
test
mov
or
jg
sbb
xchg
shl
les
(bad)
pop
xor
sti
jge
mov
int
add
ret
sbb
mov
int3
popa
aam
mov
cmp
adc
mov
scas
out
adc
xchg
add
pop
push
inc
pushf
lahf
cmp
scas
pop
mov
stc
jg
mov
jecxz
or
mov
out
add
jns
inc
lea
and
push
repz
pop
cs
pop
sub
ins
cmps
sbb
sahf
xor
cwde
rcr
fs
sbb
cwde
sub
dec
bound
inc
jp
retf
jo
daa
pop
pop
sub
jl
sbb
mov
pop
lods
adc
pop
arpl
fiadd
mov
into
sub
repz
jo
int
stos
out
add
pop
smsw
rcr
sub
xchg
cmp
xor
out
jo
mov
xchg
stos
loop
jle
xor
sbb
mov
xor
adc
arpl
sub
jl
sub
pusha
imul
jg
xor
push
inc
adc
cmc
push
or
jmp
mov
cmp
or
dec
adc
fcomp
dec
push
push
or
adc
dec
xchg
pushf
or
inc
mov
sbb
idiv
and
ss
mov
xor
ds
or
cwde
or
pop
pop
jmp
sar
sbb
xchg
nop
or
sbb
jge
rcl
rcr
lods
mov
push
enter
(bad)
out
push
ja
cwde
jge
das
arpl
push
mov
pop
mov
mov
shl
xchg
lahf
pop
xor
xchg
fs
sub
scas
scas
test
jle
inc
dec
mov
shl
lods
dec
dec
call
xor
jle
sbb
mov
and
jae
cmp
inc
aam
sbb
iret
mov
daa
and
jg
jno
xchg
out
fsub
mov
iret
dec
fnstsw
dec
imul
pusha
mov
and
inc
or
jp
mov
cs
pop
mov
mov
lods
(bad)
(bad)
cs
sub
jecxz
imul
in
sub
(bad)
fldcw
pusha
out
or
xchg
(bad)
jmp
xchg
cwde
push
fwait
test
mov
mov
xlat
and
ss
pop
(bad)
call
mov
adc
push
out
add
lahf
dec
pop
push
mov
and
sbb
ret
mov
sub
xchg
xchg
push
jp
or
in
inc
jmp
inc
sbb
out
mov
das
xlat
out
jmp
cmp
in
jmp
mul
or
dec
jb
int3
jne
jo
adc
xchg
loope
add
xor
out
push
fnsave
xchg
or
pop
jmp
jge
add
xlat
aam
or
sub
jecxz
aaa
mov
push
scas
retf
push
sbb
dec
mov
xchg
loopne
xchg
mov
neg
sbb
pop
sbb
cli
xchg
(bad)
jmp
enter
xchg
retf
sub
pushf
sub
jge
sbb
cmp
jno
ret
push
(bad)
sbb
cwde
xchg
and
std
xchg
and
cli
xchg
xor
pop
push
fsubr
stc
fmul
cmc
lock
test
or
cld
das
ss
sar
out
jmp
mov
xor
rol
jmp
mov
js
pop
sub
or
loope
retf
pushf
bound
repnz
nop
adc
push
fwait
das
(bad)
out
out
or
sbb
xchg
into
jbe
fadd
xchg
mov
les
or
hlt
pop
xor
cmp
push
sar
push
fs
sub
cmp
rcr
leave
inc
sub
jmp
cld
into
xchg
cld
inc
cmp
aam
and
fadd
mov
mov
clc
push
(bad)
and
(bad)
sbb
in
jl
cmc
fcom
lea
pop
ss
cdq
mov
mov
stos
es
frstor
into
mov
ja
jbe
add
jl
push
scas
mov
xor
xchg
cmc
pushf
mov
pop
sbb
jl
imul
adc
mov
leave
scas
mov
push
inc
add
sub
adc
and
adc
aam
jle
pusha
in
ins
rcr
mov
out
test
imul
sub
cmps
push
inc
cwde
and
sbb
and
adc
and
dec
repnz
aas
push
cmp
inc
pop
xor
out
add
ss
mov
in
idiv
cmps
cdq
stc
fsub
add
out
inc
pop
push
push
mov
pop
cmp
xchg
retf
lock
xchg
inc
je
scas
pop
adc
and
xlat
stos
add
dec
xor
(bad)
dec
inc
out
fst
inc
jae
stc
mov
ins
xchg
or
and
jmp
ss
sbb
jnp
aas
xchg
pop
not
(bad)
push
xor
popa
and
shl
dec
retf
mov
ror
test
sub
cmp
loope
test
adc
popa
add
pop
push
popf
jle
mov
leave
into
pop
xchg
cdq
add
dec
mov
into
cmps
mov
cmp
sbb
je
mov
jbe
cwde
mov
popf
icebp
cmc
leave
mov
js
imul
js
mov
push
xor
outs
dec
jno
or
add
add
nop
imul
stos
sub
stos
or
mov
xor
imul
push
out
mov
in
sbb
scas
sub
or
mov
xchg
pop
repz
pusha
ins
xor
ror
out
movs
(bad)
jmp
(bad)
mov
rcr
adc
dec
iret
adc
loopne
cmovbe
dec
cmp
rol
outs
sbb
inc
xchg
sbb
pop
adc
cmp
sub
test
in
pop
loope
enter
cmp
scas
shl
retf
push
ret
push
jno
jne
xchg
cld
jmp
ret
jns
push
js
test
ins
xchg
lds
mov
xchg
jge
sti
inc
and
aaa
jbe
cmc
stos
into
sub
shl
addr16
es
loop
(bad)
pop
enter
nop
mov
xor
add
aad
aaa
push
add
pushf
pusha
(bad)
sti
pop
push
fld
jns
popf
jp
div
sbb
pop
mov
sub
in
mov
pop
or
jmp
outs
jbe
adc
push
ins
sbb
xchg
mov
lea
xchg
movhps
inc
xchg
arpl
in
xchg
cdq
retf
popa
push
fld
movs
fwait
pop
xchg
test
ret
cmp
push
xor
outs
cmp
mov
(bad)
cmp
fwait
jne
test
add
ficomp
mov
inc
test
(bad)
int3
jp
cmp
les
out
mov
add
into
cdq
das
pusha
fwait
jbe
cmp
in
out
loopne
mov
dec
pop
sbb
sar
dec
cmps
dec
pop
jg
jl
call
and
movs
and
mov
inc
fnstcw
add
and
sub
push
frstorw
push
mov
out
lahf
mov
les
ficomp
test
push
mov
xor
and
cdq
mov
jmp
or
xor
les
fwait
or
fwait
push
jne
push
ds
clc
pop
adc
dec
gs
sbb
(bad)
xchg
test
mov
ficom
inc
add
icebp
sub
les
mov
scas
or
jo
aad
sti
aaa
imul
ror
ror
cmp
add
shr
jb
inc
aas
jl
iret
jno
ins
(bad)
mov
mov
jmp
adc
adc
sti
and
scas
cmp
xchg
sbb
cs
nop
and
mov
jp
mov
dec
das
push
jg
shr
jge
cmp
dec
les
push
pushf
loop
inc
cli
arpl
pop
fisub
ins
jmp
enter
(bad)
dec
jp
xchg
clc
xchg
cmp
inc
lds
mov
arpl
rol
jmp
lock
and
movs
loopne
mov
stos
sbb
jns
clc
bnd
xchg
ins
icebp
ficomp
aam
inc
sub
sbb
jno
mov
sub
test
dec
mov
and
shl
xchg
aad
pop
push
movs
leave
out
dec
imul
or
sub
sbb
or
cmps
(bad)
sub
cmps
mov
inc
add
push
fmul
stos
rcl
dec
sar
lds
out
cmps
pusha
scas
stos
out
sti
pop
lods
stos
aas
xchg
daa
int
mov
pop
ss
pop
jmp
out
(bad)
pop
cmp
mov
hlt
loopne
mov
add
imul
mov
adc
mov
sub
pop
enter
add
inc
out
jo
lea
and
ds
cmps
xchg
rcr
push
ffree
fild
sbb
jnp
cmp
pop
(bad)
(bad)
sbb
outs
aam
fnstsw
ins
shr
rcl
popf
das
call
adc
hlt
xor
dec
shl
and
iret
jne
and
into
mov
cmc
push
dec
daa
cli
adc
mov
mov
jp
mov
xor
or
or
je
or
out
test
ins
adc
rcl
and
pushf
aad
mov
pushf
xor
push
lea
inc
outs
cmp
pop
repnz
daa
jno
inc
push
aam
adc
mov
jbe
loope
cmp
pop
movs
cmp
add
xor
iret
aas
inc
in
inc
mov
outs
add
cmp
fstp
mov
imul
dec
or
sahf
push
and
mov
cdq
sbb
jp
and
rcr
test
jle
pop
push
sub
pop
mov
int
push
sub
mov
iret
das
sub
jne
sqrtps
jmp
sbb
(bad)
dec
mov
je
adc
into
adc
(bad)
and
dec
shr
ss
call
outs
stos
and
sbb
inc
push
push
aad
enter
cmp
loopne
sti
sbb
ret
mov
mov
xchg
(bad)
cmp
icebp
(bad)
lods
push
es
lock
in
xchg
jnp
sbb
pop
call
dec
and
das
cs
(bad)
retf
pop
adc
shl
or
mov
bound
jnp
imul
(bad)
in
dec
xchg
sub
jae
ins
mov
jae
lods
fwait
ror
add
sahf
daa
push
cmps
fild
mov
movhps
imul
cmc
xor
lds
retf
jns
lock
jmp
sti
ret
xchg
nop
repnz
jmp
add
cmc
mov
xchg
repz
ins
cmp
jge
push
mov
xchg
or
mov
imul
pop
push
mov
movs
cmp
(bad)
sar
or
popa
sub
das
inc
ds
xchg
cmp
and
push
test
xor
cmps
icebp
adc
fadd
in
dec
test
xchg
and
test
sub
stos
inc
sbb
mov
cwde
sar
pop
imul
mov
outs
repnz
mov
and
dec
and
and
fldenv
ins
mov
push
cmp
xor
je
xor
pop
mov
fstp
movs
lock
ja
pop
mov
jecxz
cmp
cdq
pop
xchg
scas
push
jno
mov
dec
push
daa
dec
or
inc
xchg
pop
jbe
and
mov
mov
xchg
test
xchg
jl
mov
repz
cmp
nop
lds
je
(bad)
movs
ds
jg
or
jmp
fstp
fdiv
xor
(bad)
aad
push
popa
add
add
ds
test
xchg
les
and
jns
or
movs
imul
mov
adc
les
pop
fwait
pop
mov
ins
hlt
push
inc
adc
scas
mov
lods
pop
test
adc
gs
cli
loopne
or
xor
aas
inc
sbb
ret
jmp
js
div
fdivr
ss
jne
cmp
test
dec
(bad)
repnz
add
cmc
add
outs
loop
mov
cmps
test
idiv
adc
xchg
int3
mov
jg
jbe
lods
rol
cs
add
jbe
ins
pop
sbb
xchg
adc
xchg
lea
jmp
aam
lahf
popa
dec
call
(bad)
ret
xlat
je
pop
out
add
icebp
fcomp
shl
push
pop
and
retf
pop
add
sub
push
int3
inc
fldz
ins
jecxz
lahf
rcr
adc
scas
push
out
xor
dec
mov
lock
das
aam
mov
sub
xchg
sbb
in
cwde
xor
shl
jne
pop
add
mov
aad
popf
pop
pop
adc
pop
xor
adc
int3
push
jne
and
pop
sub
popf
mov
int3
lods
or
ss
fld
adc
or
lods
sbb
mov
imul
aas
mov
push
(bad)
(bad)
in
pop
pusha
mov
cmp
call
retf
add
sbb
add
xchg
adc
loopne
xchg
repz
call
lahf
jae
jns
imul
fwait
rcl
mov
js
mov
pop
js
adc
mov
lods
mov
xor
add
xor
inc
inc
xchg
sub
sbb
ret
sbb
mov
dec
xor
fdivrp
mov
cmp
cmp
push
adc
inc
dec
cmp
in
push
dec
imul
jae
mov
add
push
mov
dec
movs
(bad)
push
mov
adc
or
inc
into
rcl
jne
dec
fwait
icebp
sbb
xchg
push
test
mov
shl
cmp
mov
push
ja
lods
push
inc
mov
aam
adc
add
mov
movs
pop
int
lds
cmp
xchg
(bad)
dec
sbb
test
int3
into
movs
add
call
out
adc
push
mov
jmp
iret
xchg
jae
xchg
lods
inc
inc
mov
push
mov
jp
leave
jns
or
cdq
aaa
ret
xchg
or
pop
test
pop
cmc
jp
shl
(bad)
ja
dec
lea
adc
add
xchg
aas
xor
add
adc
fs
leave
fst
or
add
adc
mov
cmps
jecxz
pop
mov
mov
push
add
(bad)
mov
sub
lock
out
sbb
push
test
stos
add
add
popf
hlt
fdiv
inc
pop
adc
stos
add
ret
jae
aaa
and
in
ret
out
and
movs
int3
gs
pusha
sub
mov
lahf
push
inc
mov
push
and
or
inc
sti
(bad)
adc
leave
jbe
jno
mul
aad
or
retf
sub
cmps
mov
or
jbe
pop
mov
cmp
repnz
adc
pusha
pushf
in
daa
adc
mov
fcomp
xchg
int
les
stc
add
inc
bound
inc
dec
es
in
pop
cmc
lods
mov
push
and
fiadd
out
adc
sti
adc
in
add
and
xchg
aas
js
es
add
jae
test
mov
or
push
sub
xchg
jo
lods
scas
xchg
stos
add
pop
sub
push
repz
xor
jno
test
cmps
mov
pop
and
inc
nop
mov
cmps
dec
pop
jmp
cmp
mov
shr
js
sti
inc
outs
pop
fcomp
inc
add
and
dec
ret
sbb
popf
pop
mov
stos
pop
test
push
push
xchg
push
add
mov
out
push
push
or
int
push
jno
aaa
aam
xchg
and
sbb
(bad)
inc
cmc
out
mov
call
mov
adc
inc
loopne
bound
(bad)
adc
(bad)
(bad)
(bad)
xchg
cmp
clc
(bad)
xor
stc
sbb
cwde
pop
popf
es
jo
xor
retf
jb
cdq
retf
sub
cmp
div
fcom
fidiv
data16
jg
cli
pop
shl
xchg
test
(bad)
adc
stc
add
arpl
pusha
stos
pop
fstp
xchg
inc
nop
into
xor
xchg
loopne
pop
cmp
inc
ins
out
sti
mov
outs
jl
jmp
or
pop
xchg
aaa
ds
loope
inc
xlat
inc
mov
fcom
mov
mov
cli
xchg
jle
sbb
je
push
jmp
(bad)
test
pushf
cmps
repz
jecxz
pop
push
(bad)
loope
ror
and
rcr
arpl
jg
inc
not
imul
es
in
mov
jo
mov
mov
inc
inc
mov
pcmpgtd
xchg
lods
bnd
mov
mov
outs
push
shl
add
and
mov
out
ins
push
(bad)
retf
mov
icebp
dec
push
cs
addr16
mov
int
jg
cmp
push
inc
mov
int
inc
and
aaa
ins
sbb
pop
inc
das
push
jmp
pop
(bad)
std
outs
ds
loop
xor
mov
popf
cs
mov
sbb
stc
ret
ds
mov
dec
shl
and
das
aam
sbb
sti
jp
push
rcl
add
(bad)
adc
fwait
xor
cld
(bad)
std
lods
adc
pop
test
mov
stos
sub
retf
call
in
std
inc
stc
scas
pop
push
cmps
lods
je
mov
pop
cmps
loop
and
or
and
push
jmp
retf
lahf
popf
mov
inc
fcomp
push
mov
call
jp
imul
inc
stc
stos
xor
or
ja
add
push
addr16
jmp
nop
cld
sbb
cmp
sub
xchg
test
hlt
(bad)
retf
clc
sbb
adc
mov
push
shl
adc
xor
loopne
adc
ins
fcomp
jmp
xchg
lahf
jae
fnclex
out
jnp
cmp
inc
push
inc
shl
jmp
das
imul
xlat
mov
mov
cli
out
out
xor
ds
jmp
jp
or
ins
and
out
fwait
pop
pop
jns
mov
inc
xor
jnp
test
mov
cmp
and
push
rcl
xor
leave
cmc
fistp
dec
imul
repnz
and
mov
pop
repnz
xchg
(bad)
cmp
sti
cmc
shl
pushf
iret
cld
imul
pushf
sar
ror
shl
fbld
ffreep
push
push
inc
iret
push
(bad)
aam
xor
pop
pop
je
(bad)
mov
mov
mov
xchg
or
or
fist
out
in
cmp
retf
ins
xchg
(bad)
cld
es
rcl
inc
cmps
cmp
sbb
call
xchg
hlt
sbb
push
dec
and
xchg
cmp
imul
int3
push
pop
cmp
lahf
xchg
jle
dec
das
(bad)
mov
movs
js
imul
int3
ficomp
dec
or
mov
push
pop
xlat
cmps
dec
jg
pop
paddusw
cld
aad
add
out
fnstenv
into
sti
pop
adc
xor
jb
cmps
cdq
ror
mul
push
mov
jmp
push
dec
shl
out
pop
nop
pop
rcr
lahf
cmp
les
out
das
test
pop
push
call
lds
rcr
dec
and
mov
or
mov
stos
mov
mov
(bad)
stos
outs
lods
mov
jae
xor
cmp
jl
xchg
cli
jae
mov
cld
call
pop
and
loop
(bad)
lock
xor
or
loope
pop
pop
test
push
lock
es
sub
(bad)
mov
lock
xor
nop
aas
push
xchg
div
xchg
sti
push
jle
outs
push
jp
jge
sub
xor
fbld
adc
pop
inc
xor
xchg
ins
dec
popf
mov
xor
std
cmp
and
enter
dec
push
sub
(bad)
mov
push
fstp
dec
or
ret
lahf
mov
push
xchg
sub
gs
xor
push
es
inc
pop
push
(bad)
jns
jl
frstor
pop
test
mov
push
and
iret
jmp
xchg
push
neg
push
xor
xchg
mov
lods
jo
ret
ja
mov
push
test
lahf
dec
(bad)
ins
sbb
pop
scas
xchg
push
sbb
inc
mov
outs
jb
inc
push
shr
ja
call
xor
pop
add
jecxz
pop
pop
rcl
push
shl
fdivp
test
push
jle
inc
repnz
dec
cmc
sbb
pop
in
jae
mov
enter
nop
(bad)
sti
dec
dec
das
mov
test
cmp
and
test
push
gs
jae
or
sahf
ja
xchg
fdiv
pop
lods
push
int3
into
pop
adc
test
in
leave
jl
dec
fbstp
add
sahf
fisubr
mov
xchg
jmp
xchg
fs
out
inc
retf
add
push
(bad)
iret
jecxz
jg
pop
aaa
cld
jno
pop
cmc
mov
mov
mov
cmp
cmps
inc
into
jae
mov
test
dec
mov
or
mov
fstp
stos
push
mov
sub
out
mov
lock
clc
xchg
fadd
(bad)
mov
out
nop
daa
ret
or
jl
rcl
pusha
push
mov
int3
mov
daa
jecxz
sub
jns
xlat
push
pop
add
jecxz
xchg
mov
pop
ds
aam
cmp
cmp
movs
pop
cmp
in
xchg
sub
stos
fdiv
pop
add
add
aaa
or
jle
aam
mov
mov
mov
jns
jle
jp
sti
bnd
cmp
and
dec
push
xlat
mov
les
jbe
pop
jns
aas
aas
jns
mov
aam
inc
or
mov
inc
add
es
repz
xchg
inc
and
call
pop
in
dec
and
(bad)
mov
je
inc
sahf
xchg
mov
loope
arpl
ds
(bad)
fwait
xchg
je
and
mov
dec
ja
jl
xchg
movs
xlat
test
pop
sub
push
xchg
imul
dec
cmp
dec
mov
pop
aaa
data16
js
jg
mov
add
rol
movs
fdivp
pop
push
loop
inc
dec
xor
movs
xor
leave
mov
pop
test
stc
out
push
sbb
adc
ret
push
cmps
and
cli
pop
sbb
add
jns
ins
adc
sbb
std
out
mov
add
loope
fs
sub
cmp
mov
test
add
(bad)
rcl
cli
sbb
imul
enter
sbb
sub
mov
mov
sbb
mov
stos
into
sub
push
and
(bad)
loop
shr
daa
sbb
ins
mov
xor
nop
add
jge
mov
add
mov
xchg
xor
xchg
leave
loopne
jl
clc
loop
sahf
test
shl
inc
inc
addr16
cmp
xchg
ror
mov
jp
fimul
sbb
stos
dec
cmp
sbb
and
stos
js
inc
lods
or
push
add
pop
adc
scas
jmp
fdiv
inc
sbb
sbb
xor
icebp
aaa
repz
inc
retf
adc
imul
stc
sbb
inc
mov
bound
pop
mov
pop
out
es
adc
lods
daa
xor
push
ret
shl
xchg
pop
popf
lock
jae
inc
xchg
iret
push
mov
lds
sub
loope
jnp
cmc
rep
out
jb
inc
call
or
mov
retf
mov
ss
fwait
and
ins
call
jo
xor
adc
xchg
js
xor
cmp
jbe
out
or
es
mov
shl
stc
repnz
cmps
jb
adc
popa
pop
xchg
and
inc
imul
sbb
(bad)
push
fdivr
sub
sbb
pop
cmp
mov
inc
or
push
or
imul
aas
lock
pop
popf
jp
pusha
sahf
lea
in
dec
mov
fimul
adc
clc
std
imul
or
jmp
push
and
xchg
push
clc
lahf
aas
mov
fsubr
(bad)
lahf
mov
mov
scas
arpl
fstp
cmps
cli
jmp
jecxz
mov
adc
cmps
pop
movs
mov
call
xor
not
dec
mov
imul
shr
sbb
pop
xor
in
inc
mov
scas
pandn
stos
adc
repz
xchg
and
push
sbb
call
jb
mov
adc
dec
mov
add
xchg
add
call
mov
test
mov
inc
cmp
nop
ror
hlt
adc
cld
int
mov
mov
sub
sbb
cmps
ret
sbb
push
jo
add
push
in
push
fild
cmp
jge
ss
xor
jae
aam
loopne
out
ret
fs
cmp
xor
cli
lahf
xlat
jbe
mov
sub
cmp
push
pusha
(bad)
iret
mov
jl
mov
inc
outs
xchg
mov
sub
push
ds
(bad)
ror
xchg
and
mov
pop
xor
das
lahf
mov
outs
mov
cmps
or
adc
cmps
stos
ror
mov
(bad)
jl
mov
mov
out
(bad)
sbb
stc
cmp
or
push
xchg
adc
mov
jecxz
mov
cs
push
mov
repnz
adc
mov
inc
pop
ins
enter
inc
add
mov
psllq
in
push
lahf
pop
and
retf
cmps
enter
xor
jecxz
std
mov
or
mov
add
sub
cmp
sub
push
imul
lods
cli
in
mov
(bad)
fidivr
sbb
xor
test
or
mov
mov
iret
sub
mov
daa
cmc
inc
fcomp
pushf
mov
or
add
test
inc
in
(bad)
adc
daa
and
scas
fild
xor
xchg
jle
fld
ja
fsubr
lock
mov
inc
out
dec
clc
mov
adc
mul
jge
xchg
and
pop
movs
shl
sti
mov
sahf
ins
(bad)
xchg
push
jnp
imul
fwait
xor
ins
sub
cli
sub
dec
jmp
fwait
test
jns
retf
rcl
retf
mov
outs
inc
push
test
jmp
mov
or
loop
ror
leave
fstp
aad
stc
sbb
mov
mov
sub
push
dec
sub
leave
pop
and
cwde
or
data16
inc
data16
jl
stos
mov
xchg
call
test
lods
sub
jecxz
dec
stos
mov
scas
mov
and
mov
xor
je
cmps
adc
movs
pushf
or
dec
aaa
jns
jge
pop
mov
lock
sub
dec
test
or
mov
dec
mov
xlat
dec
test
int
push
xchg
ins
xor
dec
and
cmp
mov
add
cmc
or
cdq
cmp
xor
fidiv
call
jl
imul
pop
mov
pop
or
mov
imul
lock
xchg
and
pand
push
mov
ins
fld
or
aaa
out
pop
push
cmp
jae
jbe
test
repnz
dec
fdivr
pop
or
or
pop
(bad)
add
cs
adc
or
fimul
out
icebp
outs
movs
jb
sahf
inc
(bad)
cmps
mov
fbld
gs
fld
push
push
lds
ins
jl
and
ja
fisttp
sub
cmp
mov
fs
adc
adc
fisttp
std
in
addr16
scas
jmp
out
and
mov
jp
(bad)
dec
in
loop
scas
out
xchg
jnp
fnsave
inc
iret
dec
or
xchg
mov
mov
dec
add
push
and
pop
xor
push
adc
dec
leave
mov
sbb
ins
test
sti
sahf
dec
mov
jmp
ds
jno
sbb
dec
dec
inc
and
cmp
xor
add
push
xchg
pop
inc
ret
pop
jnp
cmp
xlat
and
mov
fwait
push
int
sbb
data16
stos
imul
inc
sbb
packuswb
lea
push
sub
push
adc
les
adc
fwait
bound
add
adc
cli
mov
in
ret
js
pushf
iret
aad
xchg
mov
dec
gs
adc
sub
inc
mov
push
mov
test
sub
xchg
jp
and
movs
pavgb
mov
pop
and
shl
xchg
and
jnp
repnz
leave
cdq
inc
push
out
loopne
or
inc
sub
repnz
leave
repz
xor
mov
pop
mov
ds
push
test
jne
js
repz
dec
inc
pop
mov
xchg
mov
dec
movs
pop
cmp
mov
push
(bad)
and
mov
sbb
xchg
(bad)
mov
jae
das
inc
daa
imul
in
sar
sbb
mov
sahf
rcr
es
dec
mov
div
and
push
div
shl
cmp
mov
enter
mov
movs
retf
cld
push
push
xlat
sub
call
bound
or
pushf
cwde
enter
mov
ret
xor
jle
pop
clc
inc
loop
xchg
xor
es
pushf
enter
jl
mov
mov
inc
mov
push
das
cs
add
adc
or
jle
je
ret
mov
ss
dec
cli
inc
adc
sbb
cdq
push
ins
pop
lock
sub
dec
(bad)
adc
(bad)
loope
sbb
in
in
daa
push
popf
pop
adc
push
in
sub
pop
sub
lods
dec
retf
icebp
aaa
and
mov
jno
ins
int3
fisub
xor
mov
push
inc
stos
popf
mov
xchg
sbb
loopne
jns
inc
cs
fstp
ins
test
inc
cmp
imul
mov
mov
jno
mov
adc
mov
inc
adc
mov
(bad)
lods
sub
setp
pop
jno
sub
je
in
mov
lock
das
iret
sbb
pop
mov
jno
cmc
inc
add
mov
daa
test
mov
into
lds
fs
fwait
repnz
loop
shl
pop
imul
dec
les
jns
fucomi
cld
xchg
jge
das
mov
repz
add
cli
jmp
cwde
jecxz
inc
sub
lahf
(bad)
clc
es
imul
mov
push
repnz
and
pop
jp
(bad)
sub
out
push
stos
pusha
scas
xchg
retf
xor
fs
mov
repnz
pop
dec
push
jns
jae
sbb
leave
stos
aam
ficom
call
mov
jg
shl
out
(bad)
std
mov
movs
mov
mov
out
or
sub
mov
shr
adc
shl
xchg
sub
push
sar
mov
fild
cmps
sti
cmps
xor
sbb
dec
ja
mov
push
mov
sbb
mov
mov
add
jns
pop
push
shl
and
aaa
into
xchg
sar
mov
retf
data16
addr16
bound
in
icebp
cmp
push
cmps
add
cmc
add
mov
cmc
repz
movs
test
lahf
leave
inc
outs
ins
inc
ret
mov
cld
add
inc
aad
cdq
mov
dec
lock
pop
loopne
mov
mov
dec
mov
xor
popf
xchg
sbb
stos
arpl
loope
ret
cmp
cmp
xor
(bad)
mov
lock
leave
adc
aaa
xor
dec
xor
dec
push
pushf
std
jg
add
mov
scas
sbb
pop
jg
test
xor
inc
(bad)
sti
aam
lds
add
jo
and
test
add
inc
in
adc
ins
shl
mov
data16
dec
push
mov
adc
push
xchg
cmps
les
ret
add
dec
push
xorps
cmc
jbe
inc
stc
cmp
ret
mov
adc
cmp
cli
adc
ret
pop
cmp
mov
lds
(bad)
repz
(bad)
sahf
push
xor
push
dec
shl
xor
inc
jne
xchg
hlt
pop
jbe
and
js
cdq
xchg
sbb
fiadd
jmp
pusha
add
neg
inc
dec
cmp
fisttp
and
or
or
addr16
jg
dec
shr
(bad)
adc
out
(bad)
enter
lock
xor
or
xchg
dec
inc
shr
fwait
mov
loope
sub
ffreep
jae
aaa
jle
lock
sbb
cs
mov
or
or
arpl
loope
add
or
test
pop
icebp
mov
xor
mov
fisttp
cwde
rcr
lock
pop
mov
loop
mov
call
inc
sbb
ret
jb
add
mov
jne
jb
aas
mov
addr16
mov
mov
les
clc
add
test
and
in
pusha
fist
xlat
sbb
mov
mov
ret
pop
aad
inc
pop
pop
push
(bad)
dec
inc
cdq
jle
ror
mov
fild
js
lds
mov
movs
adc
sbb
or
adc
je
cmps
rcr
hlt
and
les
sbb
dec
int
xor
mov
fidiv
fbld
sahf
push
sbb
jae
jns
dec
pop
xchg
add
sbb
mov
jne
jecxz
stos
mov
arpl
sub
and
cs
add
sbb
dec
daa
xchg
ins
fcom
in
or
xchg
fucom
sub
imul
xchg
xchg
test
sub
retf
bswap
jmp
mov
xor
sbb
idiv
in
hlt
jne
aad
push
adc
(bad)
pop
fnstcw
fdivr
std
add
pop
adc
pop
mov
mov
ins
mov
mov
or
bound
je
mov
das
push
xor
scas
mov
daa
sbb
xor
aas
lds
sbb
lods
mov
mov
adc
xchg
xchg
aas
bound
pop
sub
mov
xor
xor
push
ins
aas
(bad)
push
out
ins
adc
scas
dec
sbb
pop
inc
xor
jmp
mov
adc
xor
xor
lock
push
xchg
arpl
in
mov
sbb
pusha
inc
div
aas
mov
jbe
sub
std
mov
fistp
and
inc
inc
pusha
js
mov
int3
cmp
xchg
std
or
int3
outs
lahf
xchg
sbb
sbb
or
mov
fst
sub
push
mov
in
out
mov
jecxz
lahf
lahf
mov
sbb
icebp
jo
lods
push
inc
cmps
mov
push
fisttp
inc
test
(bad)
xor
add
push
inc
lea
cmp
cwde
jae
pop
pop
ins
and
jl
dec
hlt
mov
mov
fbld
xchg
adc
add
aas
pop
sbb
nop
add
test
call
push
test
xor
and
adc
jg
xor
add
sbb
sub
sub
mov
fstp
ret
les
inc
fcomp
das
xor
dec
mov
or
push
mov
push
sub
icebp
iret
xchg
(bad)
mov
sbb
loope
mov
push
dec
mov
push
test
pop
xor
ins
loopne
sbb
fwait
add
push
scas
leave
mov
dec
jge
push
xchg
daa
dec
mov
out
daa
cli
je
ret
std
sub
mov
in
sbb
out
xchg
lock
jg
xchg
fs
addr16
aaa
push
xchg
out
or
cmp
jg
xchg
lods
or
push
outs
out
bound
push
rcr
sub
ror
or
push
jl
daa
adc
ins
jno
mov
dec
mov
aaa
shl
cli
(bad)
push
push
lods
and
xchg
and
dec
nop
or
jge
sbb
mov
jle
call
inc
mov
sti
es
mov
retf
sbb
out
and
ins
fcmovb
daa
cmp
xchg
ss
stc
ds
repz
test
add
cmc
sub
call
ret
std
cmp
mov
dec
mov
xor
cmp
pop
mov
cld
fcom
(bad)
cmp
inc
repnz
lahf
js
cdq
xor
repz
adc
cdq
push
or
jle
mov
cli
imul
mov
ret
movsx
mov
not
test
xchg
out
push
addr16
mov
movs
mov
inc
retf
scas
inc
cmc
mov
jae
jmp
stos
dec
mov
fidiv
push
fdiv
cli
jae
popf
dec
out
ret
or
fwait
push
not
(bad)
(bad)
ror
pop
pop
add
inc
repnz
rol
or
(bad)
pop
pushf
jne
and
clc
or
dec
rcl
mov
jmp
add
iret
mov
out
xchg
jo
leave
xor
adc
dec
adc
push
pop
jbe
loopne
jne
push
push
pop
jbe
push
dec
(bad)
dec
and
scas
jg
and
mov
pop
fidivr
add
into
sub
mov
(bad)
sub
ins
loopne
ss
movs
lea
pop
pop
sub
sbb
(bad)
cmp
movs
ficom
aam
jge
mov
aam
(bad)
(bad)
mov
mov
shl
push
(bad)
cmp
pop
sbb
fidivr
mov
xchg
dec
popf
ins
jns
xor
shl
retf
shr
neg
(bad)
jns
jae
push
xchg
test
mov
out
inc
mov
dec
lea
pushf
mov
inc
test
jp
dec
cmp
jmp
xor
and
cld
dec
bound
test
fwait
dec
jp
xchg
pop
ss
mov
cmps
les
xor
std
xor
jno
add
cld
es
outs
das
sbb
sub
imul
push
mov
inc
pop
lods
mov
xchg
nop
mov
(bad)
std
scas
add
xchg
add
scas
sub
and
(bad)
xchg
mov
outs
test
dec
xor
or
aaa
hlt
dec
loopne
sbb
into
pusha
xchg
mov
jne
fnsave
mov
add
call
popa
push
sbb
mov
ds
sar
popf
ins
and
ss
fcomp
in
call
mov
(bad)
std
imul
and
dec
in
mov
sub
add
sbb
add
in
test
cmps
jbe
inc
retf
fs
mov
jl
lds
icebp
loope
inc
xor
and
mov
dec
les
(bad)
movs
push
sbb
dec
push
stos
outs
xchg
mov
loope
je
(bad)
retf
and
call
hlt
pop
(bad)
retf
pusha
in
push
dec
push
xor
mov
inc
clc
push
push
dec
inc
add
pop
ins
ja
mov
gs
jmp
mov
pop
(bad)
dec
rol
pop
enter
mov
sbb
(bad)
retf
jmp
sbb
xor
sbb
xchg
push
gs
js
int3
ret
cmp
mov
cmc
dec
enter
popf
pop
inc
add
test
mov
cdq
pop
rol
(bad)
popa
jbe
mov
jne
lea
inc
dec
pop
fs
mov
jle
js
dec
dec
xchg
push
adc
test
sub
mov
cdq
push
jl
pop
int3
or
xor
icebp
cmp
push
fld
pop
inc
xchg
sub
mov
dec
cmp
(bad)
repz
jne
mov
(bad)
cwde
or
(bad)
in
mov
lea
xor
push
addr16
arpl
(bad)
jne
nop
ss
enter
pop
into
(bad)
add
dec
pusha
xchg
lahf
fisttp
(bad)
scas
pop
rcr
idiv
add
and
sahf
mov
dec
movs
xchg
outs
es
out
test
icebp
pop
push
lods
xlat
das
dec
mov
mov
jp
push
imul
sbb
or
inc
jb
mov
pushf
dec
jmp
inc
test
xor
mov
add
sub
sbb
repnz
adc
(bad)
out
adc
cmp
jmp
push
push
(bad)
adc
test
add
ins
repnz
adc
sti
mov
add
mov
in
adc
cli
les
adc
(bad)
int3
dec
jo
xchg
or
les
daa
add
mov
inc
inc
sub
aad
lock
mov
scas
add
repnz
mov
pop
jbe
mov
or
std
or
outs
mov
mov
jno
rol
push
aam
shr
xor
inc
call
add
in
fmul
mov
test
(bad)
out
xchg
ja
jnp
jno
in
or
sub
jae
inc
call
jmp
jmp
xchg
jne
cmp
fmul
fadd
jg
inc
ficomp
xchg
ja
fwait
jge
dec
ins
adc
loope
(bad)
fnsave
xchg
jg
loope
xchg
ins
imul
movs
movs
xor
in
data16
inc
stc
in
xor
in
mov
mov
or
sbb
inc
test
push
jl
xchg
(bad)
mov
cmp
sar
and
mov
push
xchg
std
leave
test
lods
jbe
lea
adc
jmp
jae
push
aaa
cs
scas
push
dec
mov
mov
inc
jg
xor
in
(bad)
mov
outs
out
cmp
jmp
push
push
xchg
mov
sbb
mov
neg
inc
or
add
je
(bad)
xlat
das
jp
jno
mov
(bad)
mov
out
js
aaa
mov
loop
jbe
fwait
aas
fwait
xchg
idiv
add
inc
xor
inc
inc
xchg
add
mov
sub
mov
lea
sub
push
sbb
lahf
je
fcomp
pop
jns
data16
addr16
mov
pusha
sub
sbb
pop
sbb
ins
mov
aam
pop
mov
repnz
popf
dec
sbb
aam
inc
sub
frstor
ins
hlt
stos
sbb
call
ret
mov
mov
dec
imul
mov
mov
cmp
or
fs
retf
sub
cmp
or
sub
mov
int
fist
stc
femms
mov
dec
or
enter
add
xor
mov
in
push
pop
sti
out
icebp
jbe
cmp
jmp
les
sbb
in
pop
ror
(bad)
mov
and
pusha
cmp
pop
jno
pop
fbld
outs
lahf
(bad)
shl
and
daa
(bad)
jno
pop
mov
pop
push
inc
and
rcr
mov
(bad)
vpcmpgtd
scas
dec
call
or
sbb
mov
sub
sub
mov
stc
pop
or
xlat
xchg
mov
lods
pusha
xor
jg
sub
mov
movs
adc
cmps
out
fsub
addr16
or
(bad)
aad
(bad)
or
cmp
lods
jb
mov
pop
out
push
movs
mov
adc
sbb
cmp
inc
int
and
mov
mov
cwde
pop
fiadd
push
add
retf
xor
dec
dec
shl
pop
adc
into
push
test
(bad)
retf
xchg
xchg
and
adc
jmp
inc
stos
push
inc
fwait
pusha
add
jge
xlat
fxch
ins
repnz
retf
imul
ds
fisubr
popf
test
fcom
cmp
out
jae
add
test
iret
jnp
fsubr
jmp
inc
sbb
leave
(bad)
std
aaa
adc
jecxz
mov
pop
add
mov
push
cmp
and
or
jnp
push
adc
pushf
les
popw
sbb
gs
mov
iret
imul
cs
xor
int3
neg
jg
and
push
icebp
pop
rol
cmp
inc
popa
stos
aam
or
test
mov
hlt
idiv
mov
lds
mov
mov
sbb
(bad)
es
std
sbb
fdivp
stos
and
clc
xor
gs
mov
popf
sub
fld
in
pushf
aad
addr16
rcr
sahf
leave
push
shl
ret
push
inc
fild
ins
les
int
out
mov
aaa
add
add
outs
push
adc
sub
push
mov
jmp
pop
add
mov
pusha
loope
(bad)
mov
lahf
cmp
and
jnp
test
inc
xchg
inc
add
loopne
fdivr
adc
jo
lds
and
xlat
jmp
push
and
xchg
aam
jnp
jmp
loope
mov
fcom
scas
cmp
retf
push
sbb
(bad)
jne
push
xor
adc
(bad)
mov
mov
push
dec
mov
cli
pop
(bad)
ficomp
inc
jno
imul
add
mov
mov
sub
xchg
or
imul
mov
mov
sbb
pop
cmp
jno
mov
cmp
mov
imul
jmp
(bad)
sbb
inc
test
inc
push
xchg
xchg
in
lds
fbstp
retf
pop
jp
xor
les
js
es
(bad)
(bad)
aam
pushf
pusha
pop
or
sub
in
aad
ror
int3
ror
fwait
loope
xchg
dec
std
ins
fdiv
call
icebp
loopne
dec
sub
xor
jns
or
and
popf
jbe
dec
mov
dec
push
ds
scas
sti
xor
adc
pop
dec
and
pop
mov
push
fnstcw
retf
dec
sub
in
loope
dec
scas
lods
test
or
jmp
mov
jns
in
mov
push
outs
ja
scas
je
fstp
or
dec
mov
hlt
mov
fs
cmp
lahf
int
ja
or
mov
mov
mov
loop
lahf
mov
int3
aas
jmp
fsubr
mov
int
jge
mov
scas
enter
ror
cmp
add
neg
mov
adc
dec
adc
sti
sub
cld
stos
cdq
test
mov
push
jecxz
xchg
nop
(bad)
mov
(bad)
jmp
adc
test
jmp
icebp
pop
daa
idiv
gs
(bad)
cmp
inc
(bad)
int3
or
stos
sbb
(bad)
dec
mov
fdiv
push
fnstcw
sub
dec
cdq
icebp
cmp
arpl
and
popf
stos
lea
loope
out
cmc
(bad)
pop
pop
dec
jae
in
push
mov
into
stos
lods
adc
jnp
add
rcl
mov
pop
or
test
das
scas
sbb
cmp
leave
add
cmp
in
mov
xor
xchg
ins
dec
test
sbb
repnz
les
dec
and
call
jmp
dec
jnp
bound
sub
pop
fistp
int3
xchg
jecxz
or
push
inc
je
mov
(bad)
lods
cwde
cmc
inc
and
fwait
jmp
in
out
mov
popa
movs
cli
fstp
pop
xchg
mov
shl
shr
cdq
jmp
jb
inc
jle
pop
lahf
jbe
ss
adc
xchg
fnstsw
adc
mov
cmp
cmp
fdivp
inc
mov
mov
mov
sbb
mov
and
push
dec
pop
push
jno
dec
inc
int3
and
add
jmp
loopne
inc
mov
mov
push
inc
push
fsubr
dec
(bad)
sbb
sbb
push
ds
cmps
push
push
call
or
push
fs
sbb
inc
mov
leave
jno
std
cmps
int
stc
mov
xchg
inc
mov
mov
mov
in
les
mov
mov
xor
mov
mov
pop
mov
mov
inc
xor
add
cmp
lock
sbb
push
and
push
push
inc
out
push
outs
ja
pushf
sbb
jne
jmp
pop
sub
pushf
aam
pop
xchg
and
ins
sub
jns
movs
mov
lock
mov
add
imul
es
xchg
dec
lock
push
inc
js
sbb
sub
pop
shr
dec
bound
xchg
sbb
inc
mov
mov
js
inc
loopne
leave
repnz
sbb
sub
daa
sub
shl
repz
add
cmp
fisubr
jl
cmps
adc
inc
std
sbb
lea
stc
or
dec
(bad)
(bad)
sbb
adc
jmp
std
or
retf
aas
fisttp
cs
lahf
ret
and
dec
mov
cmp
mov
cmp
jo
(bad)
pop
cmp
aas
lock
hlt
cmps
pop
call
push
mov
jmp
jp
jg
test
cld
mov
jle
sub
fld
mov
fwait
mov
sahf
out
movs
retf
or
pop
out
inc
sbb
es
es
inc
retf
adc
fnstsw
dec
xchg
mov
cwde
scas
push
xchg
loopne
cmp
cli
ror
xchg
and
inc
loope
mov
outs
vminps
or
cli
test
js
(bad)
mov
das
add
js
retf
mov
dec
and
adc
test
mov
cmp
fdivrp
pop
pop
fidiv
push
mov
mov
mov
sub
pop
xchg
data16
das
jecxz
fld
lods
push
cwde
test
xor
dec
ficomp
mov
and
jge
cli
jl
loop
pushf
ja
inc
pop
stc
fild
push
inc
lds
sbb
mov
sub
adc
fidiv
in
popa
sbb
jne
(bad)
adc
push
pop
cmp
jg
adc
ins
push
xchg
or
jge
pop
scas
stc
mov
or
add
fwait
jecxz
and
xchg
cwde
clc
in
xchg
push
rcr
je
jae
f2xm1
movs
xor
fmul
adc
ja
sbb
jno
scas
mov
ret
push
out
sbb
outs
(bad)
pop
ja
pop
lds
sbb
xchg
push
or
mov
cmc
in
imul
xor
aas
loopne
jecxz
(bad)
sbb
add
mov
mov
cmps
lock
xor
ja
pop
sti
fisttp
sbb
fisub
mov
mov
fs
sbb
sub
daa
sbb
lock
out
mov
or
test
push
fwait
bound
ret
sub
sbb
fst
in
cld
mov
dec
push
fstp
mov
(bad)
pop
repnz
test
popf
je
or
cld
out
arpl
inc
addr16
xchg
add
pop
inc
and
jge
mov
les
out
mov
popf
inc
out
(bad)
xchg
call
ret
out
imul
fimul
jbe
into
push
sub
mov
mov
scas
push
mov
int
rol
cmp
clc
push
dec
sbb
sub
bound
add
push
adc
adc
sub
sahf
push
cmp
iret
and
mov
je
push
test
xor
nop
mov
dec
fidiv
sub
cs
pop
inc
and
mov
inc
pop
sub
out
shr
add
add
in
imul
jbe
test
xor
in
popf
and
or
push
cmovl
mov
adc
inc
mov
iret
push
lods
pop
dec
xor
test
fbstp
sti
fist
ins
inc
mov
scas
ror
push
mov
mov
cmp
sahf
std
movs
imul
sar
sar
pusha
jo
push
into
push
into
es
movs
jns
inc
xor
xchg
or
dec
cmps
clc
out
xchg
mov
dec
sbb
fisub
mov
into
rcr
pop
dec
(bad)
jmp
inc
xor
ds
xor
jge
aas
jp
imul
or
and
inc
push
addr16
push
shl
popa
lahf
out
aaa
shl
xchg
xor
sbb
jmp
adc
ret
sar
(bad)
aad
sahf
frstor
pmaxsw
push
sbb
jp
xchg
mov
mov
jl
add
mov
mov
sbb
(bad)
cwde
inc
inc
adc
mov
jns
xor
addr16
mov
pop
cmp
(bad)
add
adc
and
cld
in
xchg
into
popf
sub
xor
movs
aam
in
not
aam
jg
mov
pop
pop
sub
cmp
xor
sbb
cwde
arpl
adc
nop
jge
jl
mov
out
cmps
imul
daa
push
scas
in
ss
push
movs
push
ss
ud0
pusha
mov
lock
ds
test
movs
dec
(bad)
jge
mov
mov
call
xchg
mov
push
inc
push
inc
xchg
jnp
lods
push
cmp
gs
mov
sub
push
xchg
xchg
push
test
push
sub
inc
lea
fdiv
inc
pop
and
add
test
ja
int3
scas
sahf
cmc
cmp
xchg
and
fldcw
jl
jle
cmp
xchg
jmp
mov
pop
pop
push
cdq
fidiv
xor
xchg
sar
jns
cmp
fwait
adc
movs
(bad)
dec
int3
ins
test
inc
inc
add
xchg
sar
or
sub
shl
pop
xchg
inc
shl
mov
cmp
out
push
mul
dec
movs
out
lods
jmp
nop
cmp
and
xor
loopne
js
and
push
xchg
push
leave
adc
and
aad
test
xchg
movs
and
daa
sbb
std
cmp
xchg
sbb
xchg
ret
xchg
mov
pop
mov
sub
sub
out
pushf
aaa
mov
test
out
xor
push
pop
cmp
idiv
sahf
push
ret
or
mov
cmp
fisttp
xchg
mov
iret
cmp
dec
stc
dec
test
jb
leave
sub
mov
mov
ja
icebp
pop
pop
push
cmp
lahf
mov
hlt
mov
xor
enter
and
(bad)
ucomiss
or
outs
add
mov
xchg
push
inc
inc
xchg
(bad)
mov
in
xchg
or
sub
xor
pusha
fld
leave
jge
push
push
rcr
pop
inc
imul
add
mov
(bad)
rcr
in
cwde
iret
add
pop
and
stos
rcr
iret
jp
jecxz
jl
mov
mov
dec
cmp
mov
dec
sbb
xchg
or
mul
nop
in
popf
cmp
pusha
scas
jl
xchg
rcr
lds
lahf
clc
and
mov
arpl
inc
jge
ret
in
(bad)
mov
add
loope
push
cli
xchg
lahf
xor
aad
out
jmp
sbb
cmp
mov
call
mov
scas
in
xchg
pop
xchg
jecxz
mov
sub
pop
xor
test
inc
xor
or
rcl
pop
(bad)
mov
test
inc
not
push
sub
into
loop
dec
fimul
xchg
xchg
adc
cmc
sbb
je
stos
movs
out
frstpm(287
ins
in
adc
cmps
rcr
iret
aam
out
movs
or
push
mov
jb
inc
jno
push
sbb
(bad)
cmps
dec
aad
sub
ficomp
je
cmp
push
fimul
(bad)
push
dec
loop
sub
(bad)
inc
or
push
mov
dec
or
addr16
das
sbb
mov
les
push
pop
jbe
sahf
and
jae
cmp
idiv
dec
dec
sbb
(bad)
ror
add
cdq
pop
cwde
mov
and
add
xchg
sbb
test
adc
xchg
or
mov
add
pop
sbb
mov
std
add
sbb
xchg
adc
jmp
xchg
fcomp
jns
es
mov
stc
dec
sbb
adc
xchg
rcl
push
icebp
(bad)
aam
ret
mov
(bad)
pop
int3
mov
mov
stc
test
push
pop
and
adc
cli
das
and
mov
hlt
push
mov
and
in
cli
cdq
retf
call
shl
ret
shl
add
mov
rcl
xor
push
xchg
adc
adc
sub
dec
test
std
mov
imul
mov
ror
test
enter
data16
lods
sbb
inc
dec
int
mov
enter
stos
cwde
addr16
or
and
push
repz
not
jl
gs
inc
mov
nop
pop
xchg
gs
scas
cdq
gs
(bad)
or
in
pusha
jp
fsubp
cmp
jno
call
jge
sub
iret
or
mov
cs
push
dec
js
jns
loop
aam
jae
fs
xor
push
jo
push
xchg
xlat
test
adc
inc
pushf
sbb
repnz
in
cld
sbb
cmp
push
add
adc
pop
cwde
fild
fsubr
mov
sbb
rcl
movs
in
cs
lds
clc
hlt
jle
pop
inc
imul
and
stos
pop
sub
xchg
cmps
or
(bad)
fstp
in
pop
jg
inc
jge
jge
int3
push
mov
inc
test
mov
xchg
int
jecxz
jg
mov
xchg
lock
pop
nop
bound
lea
fnstcw
mov
fbld
or
test
and
(bad)
call
fs
or
sbb
or
ret
jno
(bad)
push
repz
imul
cmc
iret
add
out
dec
test
and
fwait
inc
xchg
fwait
xor
cmc
mul
enter
mov
mov
cld
ret
sub
sub
mov
sti
mov
or
in
std
jnp
jmp
jmp
ret
dec
jp
fadd
in
xor
pop
dec
cdq
sub
leave
dec
cmp
jbe
mov
or
mov
jb
pop
push
xchg
fwait
sbb
not
cdq
inc
adc
ins
jecxz
mov
inc
pop
inc
cmp
repz
daa
cmp
rcl
not
repz
pushf
add
ins
or
xor
push
and
pop
ja
sub
mov
das
call
movs
retf
loopne
pop
or
neg
ins
mov
xchg
xor
xchg
inc
out
pop
adc
adc
adc
jb
inc
dec
cmp
cmps
mov
ja
out
mov
mov
mov
or
adc
mov
cmp
ficom
nop
jb
shr
jnp
xor
xor
pop
mov
jo
jne
arpl
fldcw
xor
sbb
pop
or
cli
sbb
jae
gs
mov
add
xchg
jno
push
add
les
out
add
xlat
in
inc
adc
and
and
xor
mov
mov
and
mov
and
mov
rol
rol
(bad)
cmps
inc
aad
sbb
xchg
call
(bad)
(bad)
outs
loope
(bad)
(bad)
fiadd
jmp
in
xchg
arpl
inc
push
mov
je
pusha
and
inc
mov
pop
fmul
sar
daa
clc
stos
daa
pop
or
rcr
add
inc
inc
xchg
rcr
test
loope
xlat
sbb
out
out
aas
pop
mov
cmc
mov
shr
adc
adc
pop
int3
sub
jnp
pushf
xor
and
jno
je
pushf
std
jmp
push
sbb
pushf
lods
pushf
push
scas
lock
rol
lea
test
adc
aas
loopne
scas
clc
enter
pop
ret
pop
pop
imul
dec
call
mov
jp
xchg
aad
add
cwde
outs
jbe
or
lea
rcl
adc
mov
scas
push
fdivr
pop
and
out
and
mov
ins
and
out
jle
mov
(bad)
mov
mov
stc
ins
int3
mov
jo
cdq
mov
imul
mov
aam
xor
fldcw
adc
pop
sub
mov
adc
xor
out
das
xor
pop
pop
hlt
into
sahf
dec
call
add
mov
add
sub
pop
sahf
jae
cld
push
push
jbe
xor
or
lods
outs
push
hlt
push
jmp
int3
pop
mov
dec
pop
je
(bad)
stos
or
scas
loop
scas
sbb
iret
cwde
jns
jb
add
iret
aas
das
fcmovne
jns
loope
aad
outs
es
cmp
inc
xor
pop
clc
mov
dec
rcl
pop
cli
and
sti
adc
sub
rcr
mov
mov
fcmovnb
xchg
test
dec
mov
xor
mov
imul
fsubrp
outs
mov
test
iret
mov
enter
xor
xor
mov
mov
adc
add
push
mov
jmp
lods
sub
inc
sub
cmps
lods
sub
jmp
je
jo
push
cs
js
or
mov
shl
jmp
data16
scas
xchg
mul
test
sahf
ins
xchg
sahf
pop
mov
jns
dec
dec
clc
xchg
xor
icebp
and
mov
out
xlat
retf
gs
inc
in
(bad)
or
xor
cmp
ror
in
daa
imul
gs
adc
retf
rol
mov
outs
sub
stc
mov
mov
jmp
push
stc
fisub
mov
stos
xchg
imul
out
inc
(bad)
dec
or
xchg
ja
lea
cmp
imul
fidiv
movs
retf
lods
jl
push
xchg
xchg
xor
scas
mov
popf
sbb
push
(bad)
pushf
out
mov
out
(bad)
out
cmps
call
out
leave
and
inc
or
xor
imul
mov
jae
sbb
sub
inc
pop
(bad)
xor
adc
out
pop
jnp
and
rcl
fcmovnbe
inc
mov
cmp
cmc
xchg
dec
leave
pop
mov
mov
xlat
in
ins
mov
(bad)
daa
jb
xor
idiv
xor
xor
push
and
inc
dec
and
repz
adc
stos
in
retf
adc
(bad)
fild
sub
add
in
outs
mov
leave
add
fadd
push
sbb
jo
xchg
xor
mov
cmp
and
fistp
(bad)
das
xor
cdq
inc
addr16
leave
stc
shr
cli
sti
push
loopne
mov
dec
xor
dec
gs
and
outs
jmp
jbe
push
mov
sub
das
cld
lock
inc
out
ds
idiv
iret
test
pop
mov
sbb
xchg
addr16
and
addr16
mov
sbb
push
lods
inc
jbe
add
sti
(bad)
jle
(bad)
stos
and
mov
dec
mov
shl
or
cmps
mov
ret
je
jmp
add
inc
imul
pop
call
push
add
popa
push
es
mov
sub
and
xchg
jno
xchg
aad
add
stos
(bad)
iret
inc
mov
icebp
sahf
mov
sbb
jb
or
(bad)
ss
das
sahf
push
cmp
adc
(bad)
shl
add
add
jmp
fst
popa
stc
fcom
int
xchg
stc
ret
cmc
push
cli
mov
pop
ret
fwait
aaa
ss
or
and
sbb
popf
sbb
(bad)
pop
push
cmps
icebp
lahf
inc
test
and
out
xchg
adc
and
push
xor
cld
out
mov
xchg
jg
push
shl
in
xabort
lds
xor
and
adc
aaa
inc
mov
pop
mov
je
movs
inc
xor
pop
or
aas
pop
fcomp
add
outs
xchg
ins
xor
mov
bound
pop
push
cmp
dec
out
sbb
add
in
adc
or
test
inc
or
mov
js
lds
ds
ja
sbb
push
lahf
sub
cvtdq2ps
sbb
in
push
(bad)
dec
sbb
mov
ds
jle
pop
pop
sbb
aaa
gs
xlat
mov
sub
popa
in
inc
push
mov
push
or
or
(bad)
in
xor
mov
cmp
ficomp
cmp
call
inc
jb
movs
mov
dec
icebp
xor
adc
sbb
push
xchg
test
add
add
or
div
or
icebp
jmp
imul
gs
repnz
or
pushf
lods
dec
dec
mov
push
sub
daa
mov
or
in
mov
mov
add
xlat
add
inc
aam
sub
sbb
jb
fisttp
sbb
sub
jg
in
addr16
mov
sbb
scas
ret
xor
jno
out
mov
adc
push
lds
fisttp
push
(bad)
sti
jb
fnstcw
jmp
in
repnz
fistp
shl
add
xchg
sub
fdiv
repnz
sbb
push
(bad)
dec
push
loopne
jge
jbe
je
test
jge
adc
outs
dec
mov
nop
aad
sub
push
(bad)
test
mov
mov
loopne
jb
loope
(bad)
sti
inc
and
fdiv
mov
sub
sbb
inc
push
pop
movs
rol
das
and
and
inc
in
dec
mov
jmp
and
xchg
and
adc
retf
push
les
sbb
push
es
mov
or
ret
test
int3
mov
rcl
cmp
inc
outs
push
mov
pop
inc
add
cwde
cdq
mov
shl
xchg
pop
pop
push
fistp
or
add
lea
pusha
adc
dec
std
adc
inc
enter
add
sub
into
call
and
xchg
leave
movs
icebp
sbb
bound
out
ins
movs
jae
adc
mov
push
mul
xchg
mov
fsubr
cli
inc
into
ja
in
or
inc
pop
add
mov
add
add
dec
jmp
movs
inc
add
in
data16
stos
daa
jge
inc
push
push
dec
jge
in
cmp
adc
mov
mov
pop
pop
popf
xchg
mov
data16
movups
scas
bound
arpl
cmp
loop
jp
cmovno
(bad)
test
cmp
div
in
cs
xchg
sbb
add
mov
cmp
stos
inc
push
mov
push
or
ins
inc
ins
sub
arpl
sub
mov
(bad)
pusha
dec
or
add
in
idiv
fsubr
push
ins
cli
sub
and
push
push
adc
push
cdq
sbb
cwde
cmps
sti
xchg
out
push
lods
int
inc
in
xchg
fidiv
xor
cmp
mov
lds
or
mul
mov
rcr
mov
fcomi
aam
inc
mov
sbb
dec
mov
loopne
out
les
cmp
mov
arpl
mov
or
mov
iret
aam
push
dec
icebp
inc
test
jge
in
pop
cmp
test
mov
adc
icebp
ds
adc
sub
out
cli
outs
push
mov
clc
jne
pop
shl
ds
int
stos
das
sbb
sub
stc
mov
hlt
adc
and
push
cmp
pop
mov
push
add
inc
fisub
push
add
in
and
mov
xchg
rcl
pop
popa
jp
xchg
and
pop
addr16
xchg
test
add
jl
test
(bad)
(bad)
xchg
std
loopne
in
ss
out
stos
shl
mov
xor
popa
push
and
in
xchg
adc
dec
cwde
movs
or
out
popa
jp
sub
jno
sub
dec
and
or
loope
shl
mov
sbb
jmp
jno
gs
bndstx
pop
repz
ret
sahf
xchg
repnz
js
std
pop
retf
fisubr
sub
popf
(bad)
adc
mov
shl
jne
xchg
pusha
popf
jae
outs
inc
shl
in
sub
dec
outs
mov
data16
lods
jmp
shl
ja
gs
mov
cwde
int
arpl
mov
jmp
xor
movs
movs
jne
(bad)
push
mov
mov
cld
jmp
loopne
mov
rcr
mov
xor
fxch
shl
fidiv
pop
cs
clc
mov
call
xchg
mov
push
push
ja
lahf
icebp
int3
sub
mov
or
sub
inc
lock
inc
aas
data16
mov
and
cmp
cli
jecxz
icebp
arpl
xor
pop
imul
psrlq
xor
loope
call
jne
jp
out
movs
lods
cs
fnstsw
mov
push
bound
xchg
inc
test
rep
aas
mov
dec
push
fnstsw
or
aas
jp
call
les
(bad)
movs
and
pop
jae
adc
sti
(bad)
xchg
aam
retf
jne
cmc
mov
and
ja
push
cmp
xor
cmp
or
dec
pop
dec
mov
outs
enter
bswap
scas
out
jb
outs
leave
pop
daa
pop
cmp
push
outs
cmp
and
ss
sbb
arpl
mov
jno
in
mov
sub
adc
and
aaa
xchg
movs
xchg
adc
xor
add
fmul
pop
aas
xchg
cmps
cmp
movs
mov
dec
or
mov
(bad)
shl
mov
in
pop
mov
(bad)
xchg
mov
aam
rcr
bound
xchg
jnp
in
adc
xor
test
mov
xchg
hlt
mov
jecxz
jne
push
jl
jge
mov
pop
xor
bound
jbe
or
and
sub
pop
(bad)
(bad)
fstp
sub
add
in
mov
mov
mov
sbb
jge
dec
push
dec
mov
sub
inc
push
push
add
pop
add
iret
mov
sub
xor
and
scas
xlat
loopne
out
pop
fmul
mov
call
fbld
xchg
mov
jbe
sbb
mov
and
xchg
shl
(bad)
or
lods
pusha
enter
ins
shl
dec
adc
push
bound
push
or
xchg
jl
mov
movs
fs
rcl
clc
jbe
in
ret
stc
arpl
mov
jmp
int3
inc
xchg
lea
int3
sbb
or
pop
dec
sub
lahf
xchg
or
popa
arpl
sub
cwde
scas
pop
lea
or
jl
xchg
dec
add
add
clc
(bad)
adc
maskmovq
test
sbb
add
inc
dec
push
xchg
(bad)
jle
jno
add
call
imul
jo
xchg
or
sub
sbb
jb
mov
adc
pop
mov
push
add
xchg
xchg
call
mov
fadd
add
or
sbb
mov
xchg
add
mov
scas
sbb
mov
push
jl
dec
mov
add
or
int
and
je
dec
mov
xchg
pop
xor
add
mov
cmps
int
in
and
imul
(bad)
stos
cmp
mov
sbb
jl
outs
retf
add
dec
lea
fcmovne
stc
in
inc
cmp
test
add
pop
jae
rcl
int3
lock
jp
mov
inc
pushf
in
test
xor
jne
lds
cli
out
pushf
ror
out
xor
nop
pop
xchg
jg
push
sbb
mov
push
jle
iret
test
adc
add
test
sbb
add
popf
mov
cmp
stos
in
pop
das
cmc
inc
pusha
retf
push
and
frstor
cwde
pop
imul
fld
(bad)
icebp
pop
popf
or
cdq
mov
adc
rcr
xchg
jbe
into
dec
movs
xor
inc
iret
add
in
mov
jbe
pop
sub
sub
out
jno
cmp
into
xor
add
sub
mov
les
mov
hlt
out
jp
lds
adc
mov
daa
pop
aad
add
imul
das
cmp
mov
mov
push
cmps
cmc
gs
div
pushf
(bad)
cmps
inc
pcmpeqb
cwde
je
inc
stos
addr16
jmp
imul
out
hlt
frstor
pavgw
xor
mov
jge
mov
or
jg
cmps
jp
add
shl
out
imul
leave
xchg
and
jne
xchg
push
test
cmp
sbb
xchg
jmp
push
jle
mov
cli
aas
inc
ds
fsub
and
enter
pop
cmp
inc
cld
jge
cs
add
iret
dec
(bad)
rol
mov
lods
cmp
mov
add
nop
pop
popf
pop
test
(bad)
in
xchg
dec
dec
(bad)
clc
pop
cmps
mov
mov
dec
jbe
scas
popf
test
and
(bad)
jl
jb
pop
scas
mov
sub
fnstenv
mov
xchg
xchg
sbb
js
outs
loope
lock
popa
jae
and
(bad)
jmp
adc
enter
jae
hlt
mov
xor
pushf
fcomp
jne
jbe
cs
sar
ret
scas
pop
xchg
call
inc
pop
loope
jns
sbb
popf
mov
mov
call
in
je
gs
fldcw
fwait
sbb
push
sub
mov
pushf
xchg
and
mov
xor
mov
ins
sbb
ja
mov
xchg
inc
sbb
adc
cmp
fidivr
push
outs
and
fisttp
int3
pop
and
xor
dec
fbstp
mov
mov
dec
jle
xchg
add
pop
pop
mov
(bad)
jecxz
xchg
mov
aad
sbb
lea
bound
pop
and
xlat
xor
push
push
icebp
dec
inc
xor
shl
retf
sub
mov
mov
icebp
sbb
mov
ret
pop
inc
xchg
adc
scas
jno
push
cmp
sbb
add
repz
ret
and
mov
inc
mov
sbb
arpl
pop
adc
jmp
sub
pop
xchg
jp
mov
ror
push
mov
loopne
or
inc
dec
jbe
cs
clc
scas
lds
dec
jecxz
add
xchg
out
adc
pusha
fstp
stos
fmul
idiv
fild
fistp
movs
dec
jmp
mov
push
xchg
mov
rdtsc
lea
pushf
sub
jae
jmp
xchg
sub
inc
dec
jne
lds
ins
sub
mov
into
sbb
xor
xchg
push
xor
nop
repnz
enter
and
cdq
nop
add
xchg
pop
popa
sbb
lahf
jns
and
mov
jne
mov
xor
lods
inc
daa
sbb
adc
push
in
sbb
ss
xor
dec
aad
popf
sbb
in
sub
sbb
pop
mov
mov
or
jle
pop
mov
add
dec
xor
jmp
cmp
lea
ins
xchg
leave
mov
pop
xchg
xchg
push
or
jns
stos
cmp
or
out
or
or
nop
hlt
and
inc
fcmove
push
retf
les
cmp
cmps
into
pop
psubsw
mov
jmp
cmp
sbb
pop
pop
and
retf
aaa
test
sub
fimul
inc
test
imul
loope
iret
ins
jg
shr
mov
push
and
mov
push
(bad)
mov
nop
cdq
fcmovb
repz
ret
fwait
outs
inc
sti
and
cli
and
shl
int3
mov
hlt
scas
into
std
loope
xor
xchg
in
cmp
lods
cld
and
loop
pushf
add
cmp
mov
dec
cwde
std
lds
repnz
mul
cmp
fild
inc
push
cmc
rcl
xchg
sub
push
bound
sti
cmps
(bad)
xor
adc
test
in
jg
push
call
ds
mov
and
jbe
push
cmp
jl
and
loopne
dec
mov
pop
imul
inc
jge
adc
outs
test
dec
mov
pop
add
loopne
sub
mov
in
xchg
out
scas
movs
adc
test
push
adc
push
mov
ins
inc
into
outs
push
jo
dec
(bad)
rcl
xchg
aad
stos
stos
pop
dec
repnz
jg
or
stos
(bad)
out
xor
inc
cmp
int
pop
dec
push
aaa
aam
fidivr
jb
add
fdivr
cmp
lods
sbb
stos
and
neg
sbb
mov
jmp
xor
inc
mov
sbb
or
(bad)
cmc
xor
xchg
inc
xchg
mul
xchg
pop
fwait
jge
fisub
sbb
or
pop
popa
in
cmps
rcr
clc
lods
and
xchg
dec
and
or
adc
jmp
add
mov
cli
mov
or
popa
pop
xchg
pop
sbb
sbb
shl
xchg
jecxz
pop
cmp
adc
dec
xchg
push
repnz
push
pop
stos
push
imul
dec
loopne
into
mov
xor
je
adc
js
xor
je
clc
xlat
cmp
out
jo
and
sbb
and
mov
xor
sti
aas
and
stos
scas
rcl
mov
sub
ret
pushf
cld
outs
jno
mov
xor
xchg
sub
pusha
stos
inc
in
clc
shl
xchg
xor
cdq
aad
mov
int
stos
int
dec
xchg
fsub
mov
adc
int
pop
sbb
mov
clc
jbe
jnp
int3
popf
fisubr
mov
loopne
not
addr16
and
fisttp
xchg
(bad)
scas
pop
cmp
retf
sahf
fidiv
jno
xchg
jbe
lea
ffreep
leave
xor
sbb
add
faddp
mov
(bad)
call
std
dec
sbb
mov
xchg
dec
cwde
fcmovb
sub
cld
cmps
repz
pop
mov
enter
enter
repz
pop
lea
out
(bad)
pop
dec
sub
cwde
sbb
jmp
arpl
sub
out
popf
xor
sub
cmp
js
dec
or
loopne
ins
into
lods
pop
stos
icebp
out
stos
ds
sbb
mov
add
dec
push
xor
push
ins
xchg
and
push
pop
cmp
inc
dec
cli
fwait
pop
or
mov
mov
xor
fwait
loope
shl
add
push
inc
(bad)
outs
xchg
xchg
in
fnstenv
stc
lods
and
cwde
rep
or
xor
add
push
jecxz
or
cmps
push
mov
add
(bad)
int3
jge
das
mov
jg
fstp
xchg
or
adc
lea
repnz
push
pop
sub
jl
pop
imul
not
push
(bad)
and
xor
cmps
rcr
mov
pop
ins
addr16
stos
fst
rcl
addr16
stos
inc
mov
push
outs
outs
cwde
lods
adc
and
adc
bnd
std
push
mov
out
xlat
daa
out
xchg
add
mov
das
push
push
std
sub
push
xlat
outs
mov
sub
or
mov
maxps
sar
cmps
or
pop
add
xchg
ins
fnstcw
aas
mov
cmps
test
xchg
push
xchg
aad
dec
push
mov
cs
jnp
outs
scas
or
call
sub
sbb
sbb
lods
pop
inc
call
repz
dec
and
mov
xchg
jecxz
mov
dec
pop
push
cdq
aas
push
mov
sub
sti
repnz
push
push
add
jge
mov
fnstcw
scas
repz
(bad)
ffree
lods
mov
cmp
sbb
pop
xor
out
and
cmp
jmp
in
fbld
retf
and
ins
push
ins
xor
cmp
aam
out
outs
lahf
fmulp
fild
inc
inc
sti
push
cs
jl
neg
mov
pop
push
push
mov
ins
mov
sbb
adc
add
adc
sbb
add
pop
mov
cmc
popa
inc
add
ds
jno
xchg
jne
cmc
jp
xor
test
lods
mov
dec
(bad)
xor
lods
cmp
inc
in
imul
adc
mov
dec
inc
sub
jmp
ins
xor
and
aam
xchg
sbb
xor
push
xor
add
fidivr
xor
xor
mov
xchg
xorps
lds
mov
loopne
dec
cmps
adc
jg
or
inc
mov
rcl
inc
xor
retf
jno
sbb
je
jg
ins
js
mov
les
mov
adc
mov
mov
add
mov
cs
ins
mov
loope
sahf
inc
pop
arpl
jle
out
and
stos
pushf
mov
aad
in
sbb
(bad)
pop
test
cmp
fwait
adc
popa
or
push
inc
and
mov
pop
mov
sbb
dec
cmp
arpl
ss
sub
aam
push
fldcw
mov
inc
xor
xchg
adc
push
mov
xchg
and
push
xchg
cs
pop
mov
mov
sub
aaa
jmp
jbe
cmp
add
add
les
and
mov
pop
lea
into
ret
fs
out
imul
add
test
fidivr
pop
mov
xor
or
pop
or
dec
push
lods
addr16
push
sbb
outs
retf
pop
adc
test
push
pop
imul
int
mov
inc
int
daa
push
push
pusha
nop
push
sub
xchg
xor
loope
push
into
fist
cdq
hlt
js
mov
imul
mov
ret
pop
xchg
retf
(bad)
xor
fisubr
and
xchg
add
call
int3
enter
inc
jp
test
les
outs
add
mov
cs
mov
ds
or
loopne
cmp
int
xchg
mov
ret
xor
push
fcom
xor
out
lock
fiadd
push
inc
pop
loopne
cld
ds
inc
push
push
dec
cmp
(bad)
push
xchg
add
call
cdq
cdq
pop
stc
and
mov
gs
loop
mov
and
scas
xor
jb
pop
(bad)
cmp
inc
loopne
hlt
scas
push
pop
mov
outs
mov
out
sub
pop
push
loop
mov
inc
popf
ret
mov
cmp
sbb
icebp
push
(bad)
movs
xor
sbb
xchg
outs
in
and
repnz
dec
movs
mov
dec
into
jmp
xchg
mov
sahf
mov
fs
pushf
adc
jmp
lods
cmp
outs
scas
sub
push
and
cmp
leave
fdivr
mov
ret
in
mov
mov
xchg
aam
mov
inc
outs
xor
or
push
add
jge
inc
mov
add
push
(bad)
sub
loop
aam
ds
xchg
inc
les
add
sub
sub
adc
fcomp
cmp
aam
ret
mov
push
sbb
adc
inc
aas
mov
fld
repz
lahf
jmp
jne
cmc
inc
dec
outs
in
bound
(bad)
int
hlt
and
dec
(bad)
lds
jle
or
xchg
ins
gs
lock
jmp
cwde
sub
dec
or
daa
xor
icebp
push
scas
sbb
int3
push
and
(bad)
mov
mov
pushf
mov
and
sbb
loopne
aaa
sbb
fldenv
jb
repnz
mov
add
das
cs
cli
cmps
icebp
test
outs
daa
fdiv
push
pop
in
mov
cmp
jg
and
and
pop
cmp
(bad)
jmp
adc
(bad)
(bad)
(bad)
enter
arpl
adc
sub
xchg
dec
popf
inc
jb
test
lea
fadd
aas
stc
cmp
mov
rol
ins
ja
mov
bound
fcomip
push
jae
in
jae
test
xchg
call
stos
aam
jle
fisubr
mov
lods
mov
push
or
ficomp
jns
inc
inc
cmp
xor
xchg
mov
es
rcr
sbb
push
mov
inc
jge
sbb
arpl
test
call
aas
sbb
rcl
retf
fiadd
push
rcr
cdq
lods
int3
out
dec
lds
retf
jne
jno
sub
cli
pushf
sbb
jo
mov
sar
adc
shl
mov
pop
jmp
ja
ret
dec
cdq
push
(bad)
cmc
or
lods
das
sbb
ins
mov
mov
andnps
inc
es
repnz
and
popa
fsubrp
gs
in
cmp
push
loop
fwait
mov
dec
mov
call
inc
jle
ins
add
out
dec
cmp
pop
std
jmp
xchg
lea
jp
mov
jb
push
dec
mov
dec
scas
(bad)
movs
jb
in
xchg
mov
cmp
(bad)
cld
loopne
retf
cmp
ins
jns
outs
cmps
dec
mov
dec
jbe
jbe
add
out
loopne
and
imul
push
pop
jno
aas
cmp
push
fcmovne
repz
mov
sbb
add
test
stc
in
iret
outs
lea
sbb
mov
cmp
dec
mov
jge
jl
lahf
pop
retf
cmp
mov
ds
xor
call
leave
in
stos
inc
jecxz
xor
push
push
xchg
(bad)
push
dec
call
xor
cmps
test
cs
outs
(bad)
cs
and
imul
mov
and
inc
or
push
jle
out
xor
mov
aaa
cmp
ins
loop
and
push
gs
xor
sti
pop
xchg
push
pushf
jg
call
or
fwait
add
hlt
cwde
aam
enter
jmp
mov
mov
outs
xchg
les
jp
(bad)
push
push
jg
pop
int3
loop
out
mov
cmp
jbe
jnp
aas
mov
pop
cld
push
shl
cmp
adc
adc
and
popa
out
gs
pop
push
mov
jg
shr
pop
pop
inc
push
xchg
cdq
add
sbb
test
movs
cmp
sub
push
test
rcl
xchg
mov
adc
enter
mov
ja
pusha
retf
mov
ja
dec
mov
push
cld
sti
xlat
not
add
in
montmul
cmps
add
mov
add
retf
aaa
mov
ja
cmp
xchg
or
push
cmps
push
sbb
or
fisub
mov
fidivr
mov
mov
sti
push
or
sub
into
fistp
mov
rol
add
call
xor
std
and
test
imul
mov
xor
inc
pusha
push
xor
popf
or
xor
cmp
mov
in
sbb
dec
add
mov
outs
mov
bound
cmp
retf
lds
lds
in
jns
lods
add
ror
sub
outs
pop
xor
dec
sbb
cdq
dec
lods
mov
data16
or
bound
fbstp
pop
pop
xchg
aas
dec
pop
and
add
cmp
push
add
loope
and
std
jne
xchg
mov
stos
mov
cmp
daa
outs
or
push
sbb
add
ror
sub
into
jnp
mov
test
out
lods
xor
push
dec
or
jo
cmp
cmp
in
sbb
mov
pop
aaa
test
ret
mov
gs
dec
sar
test
fistp
je
sti
cld
aas
in
add
cmps
fsub
ror
cdq
psubusw
mov
mov
fs
fsubr
nop
push
(bad)
mov
pop
dec
mov
add
jle
xchg
add
inc
cmps
sti
imul
mov
or
fcmove
and
sahf
cmc
(bad)
cld
nop
(bad)
dec
and
sar
jl
lahf
lods
mov
xor
xchg
pop
int
xor
cmc
aad
mov
or
test
mov
jne
and
shr
sahf
add
and
rcr
sbb
jne
sahf
(bad)
adc
cmp
and
jle
shl
dec
out
mov
pop
mov
xor
push
mov
popa
push
or
ja
lock
adc
adc
lahf
scas
adc
sub
jnp
mov
xchg
(bad)
fsubr
jmp
xchg
sub
das
xchg
ret
dec
fwait
mov
inc
cld
lods
sbb
inc
imul
and
jge
inc
(bad)
cld
xor
ror
jbe
das
ins
xchg
or
adc
ja
push
int
sbb
inc
mov
adc
sub
jg
int
inc
stos
mov
mov
cwde
pop
out
pop
out
ins
shl
loop
xor
inc
dec
and
pop
mov
lds
scas
jge
jmp
pop
mov
movs
sbb
sbb
sbb
cmp
or
push
mov
pop
adc
sub
scas
fs
cwde
mov
mov
cli
xchg
add
add
shl
rcl
popf
and
sub
dec
sar
inc
lods
cmc
ins
and
inc
test
cmps
cmp
add
mov
cmp
lods
sub
out
aad
sub
inc
sub
xchg
sub
test
cmp
pop
pusha
cmp
in
cmp
or
inc
data16
adc
mov
call
mov
mov
xor
fldcw
pop
mov
adc
push
enter
sar
leave
cmp
cmps
mov
xchg
sub
(bad)
or
jno
jnp
ins
ja
xchg
and
out
mov
cmps
cwde
jae
rcl
hlt
out
ds
aas
sbb
(bad)
stos
mov
leave
add
push
cmp
jg
pop
mov
jl
aad
mov
cmp
mov
repz
or
cmc
push
mov
ss
lahf
in
int
dec
dec
xchg
scas
out
addr16
leave
test
mov
mov
fsubr
mov
in
movs
shl
jle
(bad)
std
(bad)
sub
push
sahf
xor
sub
mov
out
push
pop
cmp
js
cli
mov
popf
bound
push
sub
aam
jmp
or
(bad)
cmp
mov
or
xor
shl
push
ror
(bad)
add
sbb
adc
push
xchg
mov
cli
std
loope
dec
mov
fs
pop
add
mov
cmp
jno
xchg
push
dec
add
push
cli
test
push
jge
aas
loopne
dec
jae
ficomp
clc
jns
mov
outs
out
out
xchg
sub
lea
in
gs
sbb
pop
sub
pop
test
jo
js
cmp
jge
in
pop
sub
mov
enter
add
int3
retf
sbb
adc
test
xor
adc
mov
inc
call
imul
sbb
jne
sti
fadd
add
out
jbe
int
adc
xor
jge
xor
shl
aaa
cmps
jmp
pop
pop
jge
dec
push
dec
movs
sub
fst
stc
inc
mov
dec
(bad)
mov
jge
cwde
sub
fidiv
iret
shr
sub
fs
icebp
cmp
gs
pop
xchg
loopne
push
movs
jmp
push
imul
clc
or
cmps
cli
aad
das
(bad)
fsubr
xor
js
imul
dec
int
jge
xor
pop
mov
mov
and
cmp
add
icebp
test
sbb
cmp
xchg
nop
xchg
jl
mov
jmp
lods
arpl
adc
jp
ror
jne
or
nop
jmp
push
ins
pop
mov
hlt
inc
shl
push
adc
xor
cmp
(bad)
imul
mul
push
sub
push
(bad)
call
je
arpl
jge
mov
test
dec
aad
push
and
jne
add
loope
les
ja
mov
lods
pop
push
es
std
inc
cmps
push
gs
int
int3
mov
sub
mov
call
and
gs
stos
retf
mov
sbb
dec
rol
sub
pop
inc
stc
push
dec
and
cld
push
mov
stos
dec
fmul
and
stos
or
sahf
cmp
add
sbb
lock
mov
sbb
scas
int3
mov
sbb
mov
push
ja
jg
and
idiv
push
adc
mov
add
xor
retf
out
call
and
push
out
popa
shl
aad
inc
fwait
or
test
(bad)
xor
pop
test
shl
icebp
fdivrp
xchg
adc
jne
xchg
push
push
std
inc
loopne
mov
fwait
mov
sbb
jp
retf
pop
and
and
rcl
lods
fistp
push
xchg
call
mov
scas
cdq
jae
imul
adc
and
and
fcmove
jmp
sar
repnz
mov
mov
add
pop
cmp
or
neg
sub
and
and
in
into
lahf
rcr
push
mov
mov
loope
icebp
mov
das
jmp
add
ins
pop
das
ret
or
push
loop
push
cmp
aaa
pop
mov
lock
mov
repz
sbb
mov
fwait
inc
xchg
jno
outs
add
or
pop
pop
mov
cmc
cmp
xor
xlat
sbb
cmp
ror
(bad)
movs
sahf
pop
clc
aaa
add
add
or
cmp
dec
arpl
xor
mov
nop
adc
dec
leave
xor
xor
jecxz
adc
fisubr
or
or
jne
iret
icebp
push
shl
xchg
lods
loopne
jmp
dec
out
shl
jmp
ret
or
jno
repnz
xchg
push
or
mov
cmps
ret
cmc
mov
and
jmp
lock
xchg
rcl
scas
jne
(bad)
cli
scas
(bad)
hlt
inc
dec
xlat
data16
pop
jne
mov
add
in
stc
mov
jnp
or
sub
or
xor
aam
jnp
mov
dec
dec
pop
mov
mov
std
(bad)
fdivr
in
leave
addr16
cld
(bad)
inc
jg
enter
push
das
sub
push
and
imul
jb
pop
lock
jl
add
es
add
xlat
aaa
leave
or
(bad)
(bad)
movs
adc
addr16
adc
fidivr
push
xor
jmp
arpl
mov
mov
loop
scas
push
mul
mov
in
jge
jp
pop
enter
movs
sbb
xor
jno
mov
arpl
sbb
jno
data16
pop
(bad)
les
push
movs
sub
daa
inc
xor
pop
imul
push
push
lds
icebp
xor
mov
add
popa
inc
stos
sub
inc
inc
fbstp
shl
mov
mov
out
sub
inc
call
rol
(bad)
mov
ror
or
cmp
mov
in
mov
movs
xchg
(bad)
sbb
dec
mov
imul
add
add
stos
outs
sub
shr
lods
or
mov
mov
enter
inc
bound
ficom
and
mov
mov
xchg
lahf
stc
adc
mov
lods
ins
cli
sbb
ret
push
leave
adc
pop
jb
fs
xchg
mov
out
aas
push
(bad)
arpl
sub
cmp
cmp
cld
mov
pushf
jmp
lods
xor
(bad)
adc
ja
xor
jp
aad
(bad)
in
test
xchg
fcmovu
in
add
sbb
ins
dec
jle
push
pop
aam
hlt
push
and
cwde
mov
xor
lahf
out
ds
and
pushf
cdq
not
fcomip
call
mov
in
sbb
pop
aad
sahf
cmp
mov
or
gs
xchg
(bad)
out
loop
mov
push
cmps
mov
mov
pop
shl
cld
fcom
fdivr
or
xor
xchg
pop
dec
outs
pop
leave
inc
sub
mov
or
cwde
nop
ficom
jb
sub
and
push
(bad)
xor
mov
sub
push
sti
gs
or
cld
iret
movs
or
or
xchg
push
mov
push
mov
or
xchg
scas
neg
aaa
cmps
or
jge
hlt
adc
(bad)
in
and
sti
xor
jns
sbb
jo
inc
add
jle
jmp
xor
sub
test
xor
mov
push
xlat
mov
out
out
outs
add
push
jl
lahf
adc
mov
add
inc
sar
and
push
cmp
data16
pushw
cmps
jle
inc
call
dec
push
lahf
(bad)
jge
nop
jecxz
aas
sub
mov
loop
add
std
push
push
add
test
jge
std
movs
adc
rol
xor
inc
sbb
cmp
(bad)
scas
pop
js
hlt
les
inc
aad
fild
adc
add
out
inc
stc
or
adc
mov
loope
iret
jbe
pop
xchg
mov
push
mov
pop
dec
leave
jns
(bad)
mov
enter
add
pusha
(bad)
push
mov
mov
mov
sti
clc
int
push
xchg
dec
(bad)
xchg
pop
add
xchg
mov
sbb
add
xor
dec
ins
adc
out
ja
out
retf
pop
gs
hlt
dec
inc
cwde
xchg
push
movs
int
or
add
ss
sub
mov
or
fwait
adc
clc
cmp
stos
inc
lods
scas
(bad)
pop
mov
ror
bound
jne
or
mov
pop
inc
int3
add
fmul
retf
xchg
or
push
div
ss
loope
sbb
cmp
int
dec
pop
pop
daa
fistp
cmp
pop
jnp
mov
hlt
add
cmc
jne
push
mov
push
mov
int
cmp
out
retf
inc
mov
add
loop
in
mov
jo
mov
fidivr
mov
lods
das
and
in
push
xchg
xor
aam
sbb
mov
and
cmp
mov
pop
and
jmp
cmps
fwait
ins
stos
setg
test
xor
sub
in
sti
jmp
loope
xchg
add
sub
mov
jb
aas
imul
pop
sbb
cmp
cs
clc
mov
ds
inc
jl
hlt
xor
movs
and
pop
mov
fs
add
pop
jo
xchg
dec
push
retf
not
xor
idiv
loopne
sbb
and
jnp
out
fsubr
clc
xchg
pusha
jo
sub
ds
pop
jnp
pop
int
jge
and
fs
dec
mov
add
lea
icebp
mov
pop
ds
stos
mov
retf
mov
inc
jmp
inc
lock
cwde
inc
dec
and
scas
sbb
sub
out
in
inc
sbb
cwde
scas
mov
add
push
push
out
sub
mov
push
leave
and
sub
dec
daa
call
loop
xor
ret
mov
push
xchg
inc
mov
lahf
push
loopne
lds
ret
sub
sub
mov
add
xor
sbb
push
mov
stc
cmp
in
mov
and
int3
and
push
test
xchg
inc
inc
mov
daa
call
int
nop
dec
cwde
and
fmul
jno
cmp
fwait
jmp
loopne
push
dec
daa
inc
aaa
mov
dec
mov
bound
dec
or
scas
je
call
jmp
iret
imul
inc
mul
add
pop
hlt
jbe
fld
xchg
mov
jne
mov
dec
outs
cmps
je
mov
push
and
leave
call
or
mov
in
pusha
mov
popf
ficomp
in
in
aaa
xchg
clc
lea
mov
mov
(bad)
cmp
push
jmp
push
mov
xor
mov
fcomp
cmps
xor
pushf
pand
dec
sub
stc
mov
or
and
jmp
cmc
cmp
out
shl
cwde
pop
test
fisttp
jecxz
xchg
mov
stos
pop
mov
mov
repnz
lahf
push
xchg
in
test
sub
dec
push
jnp
mov
dec
daa
ds
and
add
(bad)
fimul
inc
int
in
sbb
pop
dec
add
out
jno
aas
mov
lea
push
or
xor
retf
mov
dec
movzx
ss
sub
repz
push
xchg
fistp
sub
out
sahf
(bad)
call
mov
xor
icebp
sub
sub
mov
mov
mov
imul
pop
add
mov
mov
ins
jg
adc
pop
cs
retf
sub
sahf
mov
aam
fbld
mov
nop
(bad)
dec
stos
adc
neg
pop
cmps
lods
pop
jg
aaa
stos
into
das
pop
outs
fdecstp
and
test
mov
xor
add
mov
gs
lock
ret
out
pop
mov
(bad)
jbe
sub
repz
xchg
test
xor
jge
inc
and
nop
cdq
je
sub
push
std
mov
fs
cwde
mov
dec
arpl
dec
fcmovnu
fcomp
dec
cmp
mov
lods
aaa
sbb
mov
ins
inc
loope
xor
jae
jg
lds
shr
scas
std
(bad)
dec
inc
xchg
sub
pop
or
in
push
jo
mov
add
or
jecxz
push
add
int3
pop
or
mov
aaa
dec
xor
shl
add
mov
fidivr
pop
adc
jl
popf
mov
into
repnz
fwait
mov
xchg
jge
xchg
out
lods
js
loopne
mov
sti
inc
add
mov
push
std
jno
mov
nop
nop
xor
lock
mov
push
rol
add
imul
imul
jp
add
or
popa
mov
ss
les
pop
int
fidivr
(bad)
pusha
cmp
sub
mov
test
(bad)
fild
push
jl
jae
ror
ja
stos
or
icebp
es
fs
pop
pop
sbb
retf
mov
jecxz
and
sbb
fs
dec
pop
sbb
fld
mul
xchg
fnsave
cmp
add
rcl
outs
loop
jns
ret
imul
or
cli
cmp
cld
and
shr
mov
jae
ins
push
jecxz
dec
pop
adc
push
mov
inc
sub
jo
rol
xchg
mov
dec
into
adc
mov
ins
ja
cmc
addr16
push
mov
fild
in
xchg
xchg
mov
ffree
lea
pop
jmp
mov
jo
push
inc
aas
fmul
mov
outs
jecxz
ins
call
fcmovnu
icebp
retf
jecxz
nop
sub
sbb
push
push
pop
xchg
lock
test
cdq
mov
jb
mov
add
jmp
push
sbb
cmp
or
pop
fadd
jno
inc
inc
or
(bad)
dec
ret
jg
in
and
adc
fdiv
pop
sbb
dec
pop
xor
stos
adc
leave
ret
xor
neg
cld
int3
test
fmul
jmp
sub
ss
out
movs
in
loop
(bad)
jae
imul
icebp
hlt
fisub
xor
push
mov
ud2
mov
nop
imul
push
mov
sub
xchg
sub
mov
das
cmp
cmp
add
mov
pop
shl
jecxz
mov
jae
addr16
out
mov
pop
sub
jl
js
call
shr
popa
int3
pop
jne
cmp
mov
outs
dec
or
jbe
or
mov
mov
inc
js
in
loop
or
das
(bad)
stc
retf
aaa
ss
push
mov
jmp
add
xchg
jp
sub
addr16
push
mov
and
sub
ror
sub
cmp
xchg
pusha
jge
mov
repz
pop
or
ficomp
pop
(bad)
mov
push
pop
mov
mov
movs
and
sub
mov
rol
pop
ret
sti
xchg
mov
and
out
rcl
sti
mov
cld
and
jl
aas
icebp
pop
ret
cmps
cmp
jle
fistp
mov
not
fidivr
xchg
mov
cdq
or
retf
adc
(bad)
or
jnp
mov
add
dec
dec
enter
lahf
mov
aaa
jns
push
jns
cmp
pop
and
aad
mov
xor
fwait
and
fs
sub
push
call
pushf
jmp
pop
scas
mov
xchg
jge
arpl
fs
inc
je
push
cmp
jo
pushf
adc
xor
call
push
int3
mov
pusha
(bad)
popa
aas
mov
and
jbe
jmp
mov
sahf
call
ss
xchg
lea
cld
neg
jg
shld
stc
leave
out
in
mov
add
cmp
fisttp
and
sub
inc
push
mov
les
sbb
ins
and
mov
pop
and
jmp
das
push
mov
jb
adc
and
cmp
(bad)
das
and
stos
jmp
xor
mov
ss
sbb
mov
(bad)
lahf
daa
cmp
inc
pushf
dec
add
stos
fucomi
adc
jne
jle
ret
adc
mov
push
outs
movs
stos
push
jnp
fwait
mov
sub
pop
sub
cld
pop
out
inc
mov
test
mov
push
jp
push
jmp
push
pop
and
mov
mov
out
dec
jmp
push
fistp
data16
dec
clc
or
pusha
xchg
and
sub
lds
xorps
retf
ficom
add
fstp
push
enter
mov
sbb
scas
push
or
pop
xor
cmp
icebp
cmp
stos
add
mov
inc
pop
mov
cdq
cmps
out
cmp
aaa
enter
repnz
rcl
dec
ret
pop
xchg
push
fwait
jge
aas
xchg
nop
inc
arpl
cmp
pop
fdivr
call
pop
mov
ds
sub
lahf
and
mov
test
je
push
enter
imul
or
xor
sar
pop
push
push
sub
inc
xchg
jmp
jp
jmp
mov
xchg
fmul
lods
mov
aaa
retf
dec
fiadd
inc
push
cmp
pop
out
gs
mov
fnstcw
lahf
cmp
mov
sbb
lods
(bad)
(bad)
jle
mov
(bad)
mov
or
test
xchg
adc
mov
in
rol
(bad)
idiv
icebp
clc
sbb
and
inc
cmp
push
push
cmp
(bad)
ss
mov
ret
inc
popa
mov
cwde
dec
jns
pop
bound
ds
sub
cmp
icebp
pop
mov
xor
mov
mov
push
cmp
test
mov
clc
leave
xchg
xlat
cld
std
push
push
jns
mov
pop
push
jmp
mov
shl
arpl
fwait
ret
jne
xor
call
mov
push
adc
mov
push
not
test
movs
dec
pusha
xchg
adc
adc
xor
mov
push
sub
dec
sub
scas
xchg
dec
pop
int
ins
or
mov
addr16
pop
pop
enter
fcomip
cli
enter
mov
add
ret
and
jp
inc
push
push
cmp
push
adc
dec
inc
adc
daa
scas
and
pop
in
mov
scas
sub
mov
pop
or
mov
cmp
mov
outs
push
(bad)
outs
inc
jmp
add
xor
icebp
imul
cs
xlat
imul
enter
sub
mov
pop
mov
dec
in
mov
push
pop
xchg
dec
mov
mov
imul
and
nop
sub
jb
(bad)
hlt
jbe
(bad)
adc
cdq
inc
add
cmps
mov
std
loop
shr
cmp
call
fcom
mov
movs
pop
lods
sub
push
dec
sbb
out
mov
mov
push
inc
jne
test
or
rol
mov
int3
push
mov
in
adc
cmc
aaa
pop
xlat
retf
xchg
mov
je
shl
enter
or
neg
pop
pop
push
pop
inc
sbb
jae
add
stos
jge
in
imul
push
push
enter
inc
xor
jno
sbb
dec
aaa
fisub
mov
jae
push
push
dec
ins
xor
and
aad
add
mov
inc
adc
pop
idiv
adc
add
mov
mov
(bad)
in
dec
leave
gs
dec
or
pop
pop
icebp
lods
pop
inc
push
xchg
dec
repz
xlat
bound
(bad)
(bad)
sbb
mov
ja
sbb
dec
mov
aaa
jmp
pop
push
mov
out
push
mov
pop
cmp
fisubr
adc
sahf
in
push
pop
dec
xor
(bad)
cmp
call
push
fild
xor
aaa
mov
or
sbb
mov
mov
cmp
imul
jmp
iret
movs
pop
and
dec
cmp
or
xchg
pushf
push
push
mov
fidivr
push
add
jmp
push
loop
rol
fldenv
inc
dec
pop
fbstp
(bad)
dec
and
cdq
mov
retf
mov
(bad)
aam
call
mov
push
sbb
dec
jp
call
test
mov
fwait
neg
jnp
jecxz
lds
fadd
das
sub
inc
fcom
jnp
(bad)
pop
cdq
pop
fwait
inc
jp
dec
xor
ja
cmp
fcom
mov
mov
sar
call
stos
mov
mov
fnstsw
or
cwde
add
xchg
xchg
aad
mov
dec
lahf
fldcw
int3
in
pop
loop
fist
sbb
sbb
mov
sub
cdq
in
xor
and
mov
mov
add
int3
add
cmp
out
mov
sbb
lods
clc
rcr
mov
dec
push
scas
push
mov
fwait
xchg
xor
xchg
into
aam
mov
iret
pop
test
les
xchg
and
in
push
test
les
cmp
inc
rol
pop
dec
int3
xchg
jb
clc
out
ret
cdq
shr
mov
in
test
arpl
dec
in
aas
xor
push
jno
push
jecxz
add
push
and
retf
jmp
(bad)
fidiv
inc
push
test
pop
xor
icebp
shl
mov
inc
inc
outs
pop
loope
retf
scas
sti
xchg
add
dec
pusha
test
add
ins
xor
sbb
js
gs
xlat
xor
mov
(bad)
clc
xor
scas
inc
xlat
dec
mov
test
xchg
push
adc
xchg
jmp
jp
sub
imul
dec
pop
js
dec
test
jp
ins
pop
dec
add
in
into
cmps
(bad)
ret
rcr
ins
xor
sub
pop
ins
movs
fs
jno
imul
cmp
cmc
(bad)
ss
xchg
jle
adc
ror
or
enter
je
aad
fdivr
int3
xchg
movs
add
jecxz
xchg
jae
es
sub
pop
cmps
jle
cbw
adc
mov
popf
scas
fmul
fwait
pshufw
and
rcl
(bad)
sub
into
aaa
enter
idiv
call
mov
cmp
lods
movs
addr16
aas
punpcklbw
xor
adc
pop
pop
aaa
and
dec
movs
out
adc
rol
imul
cmp
imul
or
mov
add
push
mov
xor
inc
imul
add
mov
in
test
stos
jbe
dec
dec
addr16
lahf
cmps
in
xchg
jecxz
cmp
je
loopne
push
pop
nop
mov
inc
push
(bad)
shr
inc
fimul
cmp
aas
retf
rcl
jbe
xchg
data16
out
cmp
push
jns
mov
sbb
pop
shr
repz
dec
(bad)
and
sub
pushf
outs
bound
retf
push
in
pop
fs
stc
or
xchg
jnp
xchg
jmp
mov
and
ja
push
inc
loope
xor
pop
cld
sbb
sub
cmps
es
in
sub
pushf
ins
in
bound
in
and
pop
pusha
pop
sbb
ja
pop
cmp
std
cdq
ins
stos
test
clc
ror
sti
movs
std
imul
or
mov
jnp
cli
xchg
inc
pop
cmp
cmp
xor
arpl
(bad)
cli
mov
adc
clc
addr16
jg
or
push
out
sub
xchg
mov
pop
push
add
mov
pop
outs
sub
rol
in
xor
mov
ror
xor
cmp
xchg
jl
sub
cmps
push
jmp
push
dec
xor
dec
cmps
jge
test
mov
sahf
xor
mov
push
imul
push
push
ja
sbb
mov
cmp
das
and
cmps
rol
dec
out
je
shl
stc
pop
loopne
stos
aam
ins
jne
fstp
adc
mov
pop
push
and
sbb
sbb
sbb
cmp
or
mov
sub
pop
inc
aad
jmp
ds
push
sbb
dec
sti
fidiv
sub
mov
popa
push
push
(bad)
out
pop
test
inc
or
cs
jecxz
lds
dec
neg
cmp
pop
jbe
sahf
mov
push
mov
je
jp
push
or
loopne
jae
stc
das
fstp
and
sub
adc
mov
bound
bound
sub
mov
outs
xchg
mov
repz
aaa
cdq
call
sub
mov
push
imul
bound
mov
lods
push
push
push
lahf
cmp
cmp
add
mov
push
xchg
xor
fnstsw
mov
dec
push
fwait
xor
into
sbb
int3
mov
fst
or
push
cmp
mov
dec
jecxz
cmp
leave
sbb
push
lock
test
test
cmp
repnz
lods
inc
scas
xor
xor
adc
xchg
sbb
xchg
xchg
sub
popf
mov
pop
or
xchg
sbb
xchg
or
pop
sub
push
add
dec
pop
jmp
and
test
push
inc
and
mov
xor
shr
leavew
mov
mov
inc
jmp
xchg
inc
sahf
or
sbb
(bad)
inc
inc
(bad)
fimul
xor
sub
nop
pusha
test
popa
mov
jl
pop
add
pop
ins
push
aas
stc
jle
pop
pop
mov
data16
sub
inc
add
xchg
outs
data16
xchg
mov
ror
rol
xor
dec
pop
mov
pop
inc
and
push
(bad)
sahf
int3
ret
and
fiadd
out
fs
xchg
cmp
sub
icebp
inc
cs
xor
fld
cmps
outs
fisttp
fldcw
ins
pop
cli
xchg
dec
xchg
push
xchg
push
adc
shr
adc
mov
test
out
xor
mov
jle
pop
push
xor
xchg
xor
or
lods
aas
jecxz
pushf
test
stc
aaa
es
dec
cmp
or
scas
shl
fst
fidiv
push
test
add
sets
sub
adc
mov
fdivr
jl
ds
or
jno
aaa
ror
int3
ja
jecxz
adc
adc
sub
and
pop
jno
inc
fs
in
mov
pop
outs
test
mov
shr
lock
ja
test
in
xchg
adc
cdq
jge
rcl
pop
leave
lock
mov
mov
fcomp
jo
sbb
retf
data16
mov
ds
mov
push
adc
shl
stc
fnstcw
mov
outs
dec
scas
mov
push
imul
je
fstp
sbb
movs
lea
mov
adc
sbb
arpl
and
adc
xor
dec
mov
mov
jae
fs
arpl
pop
cld
lods
stos
xchg
nop
sub
ss
jns
and
add
push
imul
cmp
cmp
jns
pop
jle
jae
ins
xchg
pop
cdq
mov
mov
or
outs
sub
fwait
call
mov
mov
mov
in
loopne
cmp
or
dec
clc
cdq
lea
je
cmp
xor
jp
dec
mov
ds
push
es
jmp
inc
xlat
and
jmp
xlat
xor
mov
jecxz
mov
jl
and
xchg
and
xchg
ins
jecxz
pop
xor
dec
add
adc
xchg
cmc
mov
cmc
pop
arpl
dec
xchg
pop
lods
mov
pop
mov
fst
cmps
mov
jp
or
pushf
or
jns
das
fdiv
rcr
pop
jbe
repnz
aam
mov
and
mov
mov
std
or
lea
mov
jnp
push
popa
int3
mov
inc
and
mov
jb
pop
scas
dec
int
lods
xor
int3
je
sub
es
adc
outs
xchg
xor
and
mov
mov
inc
punpcklbw
mov
(bad)
push
jge
(bad)
cmp
cmp
mul
cs
and
imul
test
pop
test
lock
add
cmp
cmp
scas
xlat
push
popfw
ss
sub
shl
cmc
iret
movs
out
pop
mov
int
sbb
pusha
lock
xor
xchg
push
and
test
mov
loopne
add
add
shr
mov
pop
mov
jae
bound
addr16
adc
retf
mov
cmp
adc
inc
push
dec
dec
mov
lds
inc
call
iret
test
dec
out
pop
mov
int
mov
inc
fisub
jmp
add
cdq
call
sbb
cmp
push
and
jno
mov
dec
xchg
out
mov
mov
fs
imul
adc
ret
fisubr
xchg
cmps
push
mov
inc
push
dec
movs
xlat
pop
(bad)
fnsetpm(287
retf
mov
xor
test
mov
loopne
hlt
out
movs
popf
pop
mov
jmp
jl
test
mul
inc
and
in
adc
mov
imul
xor
adc
cmp
fwait
(bad)
jl
pop
xor
iret
mov
mov
movs
dec
retf
addr16
jmp
xor
inc
cwde
or
outs
and
addr16
or
xchg
pop
repnz
mov
and
movs
sub
popa
xchg
pop
adc
ret
popf
inc
les
int
or
and
sbb
ins
retf
gs
mov
out
pop
xchg
cs
xor
dec
xchg
sub
ss
add
jne
mov
xchg
dec
and
mov
inc
movs
mov
out
jb
in
das
mov
push
jb
je
pushf
inc
jbe
ror
mov
fcomip
sub
in
leave
lods
xor
xchg
ins
out
add
dec
stos
xchg
(bad)
outs
out
mov
xor
mov
adc
fisubr
xor
lds
or
mov
adc
sub
leave
push
(bad)
dec
lahf
cli
jle
pushf
enter
mov
jmp
pop
lock
sub
call
lea
cli
cs
mov
repz
mov
push
push
stos
test
mov
jg
lods
not
and
mov
dec
repnz
sub
adc
sub
push
cdq
push
add
rcl
cld
ror
in
sub
scas
aad
popa
jge
shr
js
in
fadd
jle
pop
inc
sbb
xchg
lods
mov
cmps
cmps
rcr
loop
inc
and
and
adc
jb
cmp
xchg
fisttp
mov
dec
xor
mov
push
outs
ficomp
xor
stos
jmp
out
lock
mov
mov
fdivr
ret
rcl
(bad)
ds
push
scas
rol
pop
mov
dec
jle
fistp
stos
jg
sti
outs
loopne
cmp
xchg
push
ret
dec
jmp
fsubr
xchg
adc
test
rcr
or
jmp
jl
pop
xchg
test
mov
pop
les
mov
ja
ss
in
jbe
xor
arpl
lahf
jae
popf
mov
stos
outs
push
(bad)
out
mov
psubusb
push
cmps
nop
leave
mov
and
mov
jge
fisttp
ds
hlt
mov
or
push
mov
je
outs
js
cmp
mov
enter
pop
mov
(bad)
hlt
out
jmp
repz
mov
cmps
mov
xor
cmps
test
adc
addr16
into
mov
add
loop
mov
and
sub
ret
mov
test
mov
push
out
jae
sar
dec
lds
mov
cmp
sub
imul
or
cmc
daa
mov
mov
mov
mov
stc
pop
fsub
and
jne
out
(bad)
out
movs
inc
out
fcom
add
xchg
sbb
dec
adc
loope
aam
fdiv
outs
shr
pop
sub
mov
retf
shl
fisub
or
shr
pop
and
ss
jo
cmp
adc
push
mul
pop
retf
or
leave
cmp
pop
(bad)
xor
(bad)
inc
shr
push
test
xchg
scas
in
xchg
je
adc
pop
pushf
shl
push
cld
test
ror
jne
mov
sbb
popf
jmp
daa
mov
xor
cmp
pusha
loope
sub
jge
movs
jns
hlt
sbb
pop
stc
in
test
lds
movs
cdq
lods
out
sub
jb
dec
jle
aas
loope
out
dec
sbb
out
bound
ret
mov
mov
dec
pop
pusha
mov
stos
xchg
call
rcl
and
div
add
and
push
ds
test
xlat
cdq
retf
cmps
scas
jno
jbe
dec
cmp
arpl
int
repnz
sbb
inc
sbb
ja
push
js
jg
mov
xchg
inc
push
test
ror
or
sub
xchg
in
jnp
cmp
cmovge
into
sub
or
jl
leave
pushf
mov
call
stos
pop
scas
dec
mov
jae
ror
leave
sbb
xchg
stc
pop
cs
adc
cld
push
loopne
cmp
jge
cwde
jae
and
or
mov
fiadd
(bad)
cmps
stos
and
add
xchg
adc
in
in
aas
aam
cmp
jmp
loopne
add
xlat
mov
je
pop
dec
fcom
in
cmp
imul
pop
add
xor
loope
stos
jp
movs
fs
pop
fdiv
add
iret
jl
or
fdivr
pop
push
retf
dec
push
sub
imul
fldcw
retf
lock
mov
add
push
(bad)
outs
add
int
pop
xchg
mov
loopne
adc
in
push
or
inc
push
mov
sub
movs
pop
cmp
pop
scas
pop
mov
aas
mov
push
jno
sbb
mov
xor
mov
retf
sar
jmp
sub
pop
dec
xchg
out
je
sbb
sub
rcr
retf
pop
xchg
add
xchg
(bad)
xlat
adc
arpl
mov
adc
mov
ret
clc
test
adc
push
cmp
cmps
sti
dec
xchg
adc
into
mov
loopne
sahf
out
dec
inc
mov
int3
mov
adc
add
je
inc
pop
push
nop
lock
xchg
hlt
pop
mov
fmul
jae
loopne
cmovle
mov
lods
lods
push
or
out
std
or
stos
add
call
cwde
jle
jbe
jmp
iret
xchg
mov
in
ret
dec
fnsave
out
js
call
stos
pop
pushf
cli
fidivr
or
jnp
sub
xchg
pop
add
mov
(bad)
jnp
fadd
xchg
xor
adc
bound
cwde
sbb
(bad)
hlt
cmps
imul
push
and
stos
std
pop
fs
not
out
mov
outs
gs
bound
into
(bad)
and
(bad)
jb
fwait
retf
ret
jmp
push
xor
add
mov
jnp
stos
rcr
sub
retf
pop
aaa
(bad)
mov
shl
imul
call
aaa
mov
sbb
push
in
fiadd
imul
sbb
mov
lahf
(bad)
nop
adc
bound
dec
dec
jnp
fwait
gs
aad
outs
jl
pop
sbb
(bad)
std
xchg
pop
sbb
or
mov
stc
in
lods
call
mov
add
sbb
sub
out
push
cmp
das
lock
or
in
push
ret
cmp
mov
pop
loope
sub
mov
sub
inc
scas
jge
xor
mov
pop
pop
loopne
jnp
aaa
aad
sbb
outs
lahf
sub
lods
loop
hlt
sub
aam
inc
dec
push
dec
mov
ficomp
popa
repnz
jae
loope
sbb
lahf
fistp
movs
adc
rcl
mov
cld
and
and
add
repz
jecxz
in
xor
mov
cdq
cwde
mov
push
mov
out
mov
xchg
ffree
mov
adc
lods
ins
daa
cmps
xchg
adc
(bad)
loop
lds
std
sbb
cmc
lock
mov
enter
cwde
data16
inc
pop
ret
(bad)
mov
call
repz
xchg
sub
jl
call
push
inc
fst
cli
jnp
aas
dec
repz
imul
daa
pop
call
cmp
jb
repz
ss
aaa
adc
repz
sbb
movs
cmp
std
(bad)
stos
mov
cmc
push
mov
jl
mov
nop
les
popf
fdiv
lahf
xor
mov
pushf
sti
cmc
int3
scas
icebp
mov
dec
push
test
sbb
popf
jno
cmp
sbb
inc
in
out
jp
test
les
sub
rol
retf
scas
push
dec
jo
bnd
outs
xor
add
cmp
mov
ret
fld
jo
aas
sbb
out
pop
sbb
je
dec
lods
mov
sbb
not
jmp
lea
pop
test
je
clc
dec
dec
sub
xor
adc
xor
imul
into
pop
movs
and
inc
mov
lea
cli
dec
add
inc
mov
xchg
sbb
jbe
jg
stos
mov
adc
in
pop
jp
fsub
int3
push
adc
inc
and
outs
icebp
lock
popf
fnstcw
inc
sub
sub
out
imul
mov
jb
adc
(bad)
mov
ins
mov
dec
lahf
dec
cmp
fistp
inc
dec
dec
jns
mov
or
into
fmul
sar
jmp
retf
pop
jmp
pop
sbb
sub
or
pop
jbe
ror
aad
sub
and
(bad)
icebp
xchg
inc
cmps
mov
popf
cmps
adc
movs
add
sahf
jge
int
mov
imul
pop
int
ja
and
mov
rep
retf
xchg
int3
inc
jl
lods
iret
dec
sub
movs
fnstsw
retf
in
mov
push
in
pop
test
adc
sbb
mov
popf
mov
or
cmp
or
mov
(bad)
mov
and
push
inc
(bad)
imul
pop
sub
jl
es
and
inc
xor
cmp
push
or
call
add
pop
test
(bad)
cmp
mov
pop
test
and
dec
push
mov
sbb
dec
pop
adc
inc
inc
and
stc
ret
aas
jmp
fadd
sbb
(bad)
and
adc
sub
jne
dec
ins
movs
loope
or
mov
add
cli
pop
inc
pop
aam
mov
jnp
xchg
sahf
jne
and
push
mov
mov
and
ret
sub
stos
xor
or
ret
mov
rcr
test
das
pop
mov
adc
cmps
push
jnp
jo
sub
movs
jl
push
dec
pop
add
mov
mov
jmp
imul
adc
inc
movs
js
enter
cmc
pop
js
add
push
xor
sbb
or
mov
push
dec
sub
and
mov
scas
cmc
sub
test
call
dec
pop
inc
dec
repz
pushf
cmc
shl
shr
or
adc
lea
cmp
sar
and
outs
xchg
ret
sub
and
mov
dec
cmps
dec
in
inc
aam
push
jmp
out
xor
dec
add
cmp
ds
js
movs
fs
sub
pop
push
dec
ss
jae
cmp
mov
push
pop
sub
mov
mov
and
or
jmp
in
stc
jmp
cmp
mov
inc
xchg
int
mov
aam
sbb
and
xchg
(bad)
mov
loopne
sbb
push
mov
mov
dec
icebp
fwait
cmp
nop
xchg
mov
aas
mov
outs
addr16
jae
fs
mov
push
ins
hlt
shr
loope
stos
gs
xor
sub
repz
das
push
or
adc
xchg
fs
jae
mov
mov
call
jbe
repz
mov
mov
xchg
mov
fdivr
inc
mov
sbb
mov
or
inc
cmp
clc
push
pushf
mov
call
push
gs
stos
ja
xchg
pop
lods
das
stc
dec
pop
fiadd
jmp
cmp
rcr
data16
dec
test
and
shl
pushf
xchg
mov
mov
and
in
pop
mov
xchg
fwait
call
cmps
mov
ins
mov
ret
dec
xchg
push
(bad)
cmp
test
mov
lock
retf
xor
scas
or
sub
inc
mov
sbb
jmp
jl
mov
(bad)
ins
or
js
push
stc
dec
xor
adc
sbb
and
in
ja
xchg
jmp
pop
lods
pop
cmps
std
jnp
mov
or
cdq
repnz
sub
js
sbb
or
imul
cmc
adc
sbb
cmc
jbe
test
adc
outs
inc
push
xchg
cmp
mov
push
sub
scas
aam
lods
sbb
or
sbb
inc
aaa
ins
nop
pop
xchg
inc
in
or
mov
push
adc
scas
and
jb
xchg
jmp
call
ds
popf
mov
mov
adc
push
mov
out
push
add
(bad)
int
imul
inc
jns
inc
and
xor
mov
leave
sub
push
jmp
or
mov
loope
(bad)
xor
out
jg
arpl
pushf
xchg
inc
sub
adc
inc
dec
out
rol
ins
outs
mov
retf
push
aas
sub
(bad)
mov
mov
add
pop
mov
mov
ss
jnp
rcr
sar
xchg
sbb
or
adc
jecxz
aam
test
adc
fldenv
ins
stos
jbe
fst
mov
aam
jnp
sub
inc
in
in
sti
sub
sahf
sbb
test
add
data16
mov
(bad)
in
hlt
rcr
push
and
pop
mov
sbb
sbb
stos
and
sub
add
out
mov
mov
mov
cmp
aas
sbb
es
jl
push
cwde
lds
rol
xor
xchg
imul
out
mov
js
(bad)
cdq
mov
jge
jno
outs
(bad)
js
call
and
bound
push
int
popa
mov
mov
pop
cmps
pushf
xchg
fucom
outs
sti
push
or
stos
das
test
(bad)
outs
pop
fidiv
pop
nop
cld
dec
cld
pop
sar
stc
mov
mov
xchg
lds
je
sbb
mul
data16
fisttp
mov
(bad)
or
popf
pop
or
xor
aas
sbb
add
lahf
xchg
lods
in
shr
mov
sub
cwde
xchg
sar
xchg
sbb
xor
jne
jno
jnp
jmp
cmp
jbe
mul
jo
fwait
out
scas
push
scas
xchg
xchg
call
or
push
(bad)
repz
fs
pop
mov
pop
cwde
stc
adc
(bad)
cwde
imul
out
mov
sub
retf
rcr
push
les
pop
jp
inc
call
mov
xlat
pop
mov
add
arpl
or
sbb
ret
mov
xchg
ret
xor
iret
and
(bad)
jg
js
test
pushf
push
push
idiv
not
dec
jge
call
pop
int3
shr
call
adc
pusha
push
cmps
das
jmp
sahf
xor
mov
movs
xor
sbb
sbb
push
pop
lods
push
dec
jo
xchg
ror
xchg
adc
add
pop
dec
mov
fsubr
adc
cwde
movs
push
push
mov
icebp
sbb
sbb
ins
mov
shl
ffree
int
loope
add
cli
retf
cmpxchg
enter
les
jmp
adc
push
push
push
pusha
dec
mov
xchg
in
xor
push
pop
cmp
test
cs
cmp
scas
and
test
repnz
int3
fs
xchg
in
xchg
cdq
jmp
fsubr
jne
pop
cmp
pop
test
cmp
bnd
aad
lahf
bound
push
retf
pop
dec
cmps
jge
xchg
int3
adc
in
mov
aad
movs
and
jne
daa
xchg
and
ficomp
pop
gs
mov
xchg
pop
push
les
nop
pop
test
outs
ret
into
int
in
and
jno
inc
shl
sbb
mov
cmp
lods
movs
cld
mov
scas
fwait
sbb
push
(bad)
test
rol
out
ins
and
imul
mov
lds
fistp
mov
cli
or
ret
rcl
and
jmp
ret
xlat
bound
or
inc
add
sahf
ror
aam
and
das
aas
pushf
xchg
lods
push
inc
dec
jecxz
and
add
cmp
add
mov
loop
sti
xlat
(bad)
fdivr
jbe
and
adc
xchg
scas
fwait
mov
adc
adc
cli
xchg
out
inc
mov
out
add
push
popa
ret
cmps
lds
shr
or
xchg
add
rcr
enter
push
ds
lods
mov
popf
iret
lea
jmp
fmul
mov
ins
sub
mov
arpl
xor
mov
sti
dec
ret
cmp
in
(bad)
ret
retf
das
and
mov
mov
jns
outs
dec
loope
push
mov
push
das
clc
inc
repnz
fwait
sub
(bad)
loope
lods
loopne
lods
push
adc
mov
jg
addr16
call
in
test
dec
out
inc
and
add
xchg
movs
sti
fcmovbe
mov
adc
mov
test
in
(bad)
idiv
push
je
fcom
sbb
test
shr
in
jl
pop
cmps
dec
sub
test
sbb
or
push
and
int
pop
lds
push
xlat
aaa
dec
loop
dec
sti
pop
and
movs
(bad)
movs
sub
add
dec
mov
xrelease
or
je
sub
jmp
or
cmp
stc
jns
daa
dec
push
clc
xor
repz
mov
add
(bad)
fs
pop
popf
sbb
(bad)
nop
sub
jne
or
or
cmp
scas
sub
dec
jmp
inc
or
mov
jnp
ds
fld
jae
xchg
inc
or
cmps
mov
sub
adc
mov
cmp
sub
pop
(bad)
repnz
jns
and
ins
adc
jmp
pop
xor
cmp
pop
add
sbb
lock
jle
jbe
mul
(bad)
fiadd
xchg
dec
sub
je
xor
mov
pop
push
cmp
and
or
xor
xchg
movs
jmp
jne
xchg
test
lds
cs
movs
adc
imul
sub
test
stos
fistp
das
sub
out
dec
fsubp
popf
das
pop
pusha
mov
fmul
xor
xor
jl
dec
aam
and
cmp
into
mov
dec
jns
sub
pop
xlat
and
inc
xlat
div
pop
or
frstor
mov
sub
sbb
mov
(bad)
sub
or
xor
adc
push
and
ins
aas
ins
xchg
repnz
mov
rcr
loope
pop
ret
add
adc
pop
cmp
xchg
lock
loope
jmp
cmp
ins
and
mov
pop
in
mul
push
xchg
(bad)
mov
sar
sbb
jmp
stos
sahf
inc
xchg
loop
repnz
fcmovb
imul
fimul
mov
jae
pop
push
(bad)
(bad)
fisttp
lahf
imul
test
sbb
in
push
test
xchg
mov
mov
xor
sahf
repz
sub
call
dec
aad
fwait
aas
scas
and
mov
jmp
stos
add
jl
addr16
mov
cdq
test
push
in
fnstenv
hlt
retf
jecxz
lahf
dec
repz
imul
nop
push
jp
adc
aam
and
mov
(bad)
lahf
pop
cmp
mov
and
pop
cmps
push
jae
mov
pop
movs
lods
jecxz
jge
mov
fcomp
and
ret
sbb
xor
scas
adc
sbb
loop
iret
out
adc
neg
sar
push
in
(bad)
aas
test
xor
fbld
nop
int
mov
jmp
jne
inc
and
jmp
(bad)
rcr
jmp
xchg
pop
out
xchg
aaa
lods
or
punpckhdq
and
pushf
rcl
js
or
cwde
stos
test
enter
cli
es
out
xchg
call
in
retf
rcr
mov
pop
jb
or
jne
mov
xchg
mov
cmp
out
add
mov
pop
sar
call
xchg
movs
cmp
inc
xor
mov
popf
ror
neg
es
xor
adc
clc
push
push
adc
pop
xor
test
cwde
aad
inc
mov
(bad)
movs
movs
nop
sub
popf
nop
xor
push
pop
xchg
cmp
jl
cmc
mov
mov
aad
mov
dec
stos
mov
or
and
sbb
fprem1
test
inc
adc
xor
fwait
and
inc
sub
sbb
fisub
sar
retf
xor
jns
out
(bad)
imul
push
sub
mov
adc
sub
and
clc
sti
push
jl
popa
and
cmp
pop
imul
sar
ret
mov
and
cmp
shl
js
jmp
xchg
ret
xor
mov
add
div
inc
ficom
jb
ins
inc
ss
xor
pop
loope
xor
dec
(bad)
clc
sbb
out
mov
outs
xor
jmp
xchg
dec
ror
les
enter
lods
enter
xor
outs
sub
call
out
inc
cmp
xlat
add
in
pop
sbb
pop
xchg
sbb
cmps
adc
mov
js
lea
int3
pushf
out
mov
mov
cmp
add
test
lea
adc
inc
push
fwait
pop
xchg
ffreep
inc
push
sub
nop
jecxz
(bad)
dec
call
repnz
sub
sbb
or
mov
mov
pop
sahf
push
xchg
arpl
std
inc
pop
or
dec
sbb
(bad)
icebp
jle
pop
mov
mov
sbb
not
out
outs
mov
iret
lea
jl
aaa
test
mov
and
xchg
fs
mov
mov
sub
cld
mov
fmul
mov
push
xchg
movs
sub
jge
stos
pop
cmp
cli
mov
pop
mov
jmp
sahf
neg
pop
dec
es
loop
xchg
imul
and
mov
mov
lds
mov
cmp
cmp
xchg
inc
imul
fld
ins
not
retf
imul
out
push
rcl
xchg
and
fisttp
xor
retf
repnz
push
dec
jb
fisttp
mov
shr
stc
lods
mov
xchg
lea
xchg
ret
add
sbb
jmp
jg
ss
fild
pop
cmp
xor
jno
nop
jle
mov
in
mov
movs
add
fcom
fwait
out
imul
stos
in
popf
cmp
push
mov
jo
and
lock
cmp
jnp
imul
pusha
sahf
pop
ss
mov
sbb
or
add
das
mov
ret
test
pop
fldenv
aas
adc
mov
lods
pop
sbb
imul
inc
add
dec
sub
mov
fldl2e
jg
jnp
mov
rcr
xchg
xchg
pop
in
add
mov
rcr
pop
in
adc
jmp
(bad)
inc
out
test
(bad)
mov
fadd
test
xor
cmps
inc
mov
lods
cdq
scas
sbb
adc
and
mov
in
mov
in
retf
test
sub
movs
(bad)
(bad)
adc
mov
adc
fild
scas
leave
sahf
jmp
les
psadbw
rcl
push
and
es
sbb
mov
shr
leave
in
add
stc
push
shr
inc
mov
scas
pop
dec
pop
cmp
(bad)
cli
call
dec
push
pushf
inc
test
jno
icebp
test
jp
dec
xchg
jecxz
dec
loope
inc
outs
hlt
hlt
jb
jecxz
or
ins
ss
jmp
dec
fs
retf
push
add
std
cld
ins
into
ror
or
out
mov
inc
mov
xlat
and
nop
inc
in
ds
add
ins
xchg
cdq
stos
mov
xchg
pushfw
push
sub
inc
hlt
shl
xor
nop
mov
(bad)
mov
jmp
shr
or
push
fidivr
movs
jnp
push
adc
jge
cmps
icebp
rol
jo
push
(bad)
rol
or
movs
and
mov
and
sbb
fisubr
jb
div
add
arpl
pop
inc
cdq
in
and
inc
fwait
jae
mov
add
int3
out
pop
mov
addr16
jnp
dec
repz
data16
push
out
sbb
repz
mov
clc
fcomp
nop
out
xor
pop
ret
inc
push
lods
daa
cwde
cmps
adc
mov
xchg
cmp
popa
fwait
mov
(bad)
(bad)
and
mov
sub
mov
mov
out
jo
mov
mov
dec
xchg
ins
fmul
inc
int
adc
mov
sbb
js
aaa
pop
stos
sbb
pop
into
call
in
into
mov
les
lds
mov
lds
push
adc
adc
and
popa
push
or
mov
pop
fistp
inc
push
xchg
stc
pop
adc
aaa
jns
xchg
mov
fistp
inc
push
enter
scas
dec
clc
shl
adc
xor
stc
je
or
fsub
loopne
call
and
fbstp
int3
xor
stos
out
jne
mov
lds
jp
xlat
cmps
les
adc
dec
imul
mov
fdivr
(bad)
loopne
int
jbe
mov
icebp
lahf
xchg
xchg
cli
out
cmp
retf
mov
mov
test
push
sub
inc
sub
ror
mov
pop
jmp
and
stos
ret
std
mov
and
imul
into
(bad)
xchg
xchg
cwde
mov
fs
mov
loopne
xchg
pop
(bad)
jle
mov
outs
add
scas
cmp
sar
xchg
pushf
bound
adc
jbe
aam
ins
(bad)
dec
daa
pop
lods
es
cwde
mov
pop
int
js
fimul
fadd
mov
push
or
nop
sbb
popf
sub
inc
loope
or
popa
mov
popa
std
push
lods
and
adc
loopne
lds
mov
adc
(bad)
push
mov
inc
xchg
int
adc
int
xor
dec
add
out
sub
inc
mov
inc
and
add
adc
mov
cmp
xor
mov
retf
inc
pop
fwait
xchg
out
mov
sbb
dec
adc
cmp
push
or
into
fld
inc
lock
pop
cwde
add
out
fnstenv
and
dec
arpl
call
xchg
sti
and
fwait
xchg
outs
jecxz
jnp
jbe
and
test
adc
stos
ins
lahf
sbb
lds
arpl
lds
ja
push
sbb
mov
sbb
stos
(bad)
imul
mov
xor
pop
xchg
leave
in
or
lahf
enter
ins
ss
rcr
jo
into
add
adc
lea
sar
hlt
cmp
jge
sbb
inc
in
repz
sahf
xchg
in
jno
mov
adc
jmp
stos
mov
cmps
sub
mov
xchg
pop
cli
inc
cmps
jnp
in
(bad)
mov
das
push
shr
cmp
rcr
scas
sbb
mov
add
pop
aas
xor
popa
loope
adc
xchg
jp
sbb
in
sub
ret
xor
mov
(bad)
scas
sbb
bound
jae
xlat
js
and
out
adc
mov
mov
les
pop
test
sbb
cmps
or
shr
pop
or
(bad)
popa
mov
imul
(bad)
mov
gs
push
test
xchg
lods
rol
mov
(bad)
sbb
push
lods
mov
jp
scas
xlat
in
mov
out
retf
rcl
in
mov
(bad)
int
mov
les
nop
retf
xchg
sub
aaa
mov
sub
call
push
loope
sti
xchg
movs
in
adc
pop
mov
(bad)
xlat
and
mov
pop
fs
int3
sub
inc
(bad)
sar
sub
f2xm1
iret
or
int
or
imul
psraw
push
adc
pusha
rol
sub
mov
call
out
and
dec
je
xchg
fstp
mov
mov
sub
pop
dec
call
adc
mov
pop
mov
cdq
icebp
pop
mov
add
cs
add
imul
jbe
stos
sub
(bad)
adc
cli
test
mov
cmc
lds
sub
jb
xchg
add
xchg
xor
out
cmps
mov
(bad)
rcl
sub
jl
in
pop
fldcw
xlat
scas
pop
sbb
pushf
gs
and
addr16
hlt
mov
ins
and
in
rcr
mov
inc
cmp
(bad)
jmp
adc
les
jnp
cmps
fdivrp
jge
loop
loopne
cs
jb
sub
sbb
lods
jge
call
mov
jg
movs
or
jle
ins
addr16
cmp
test
mov
test
xchg
data16
jecxz
mov
mov
cmp
iret
(bad)
retf
xor
push
push
fcomp
mov
mov
or
xor
sbb
adc
push
xlat
adc
enter
fcmovnb
sbb
aam
push
dec
(bad)
aas
gs
push
rol
les
daa
sti
nop
xor
enter
retf
adc
jg
iret
repnz
sub
jmp
fdivr
mov
(bad)
int
lods
push
ret
mov
jecxz
or
jge
mov
jmp
sub
outs
jl
mov
iret
fdivp
mov
rcr
(bad)
arpl
popa
aas
jb
xchg
sbb
scas
mov
mov
mov
movs
mov
test
scas
enter
ret
ins
and
xchg
(bad)
jge
test
sub
lods
xchg
push
or
push
mov
fst
mov
adc
icebp
cmp
rcl
push
pop
push
adc
or
bound
dec
loopne
jmp
mov
push
mov
popa
sbb
pop
jmp
out
fadd
lods
mov
inc
adc
adc
xchg
daa
retf
les
inc
mov
lods
inc
jo
fs
or
xchg
icebp
movs
loopne
and
lods
inc
push
or
xchg
sti
(bad)
(bad)
mov
mov
addr16
jno
or
shl
sbb
ret
es
adc
movd
dec
sti
pop
test
popf
ret
adc
out
aas
xor
ret
fist
iret
jbe
cmp
dec
jmp
iret
dec
daa
jg
mov
ret
mov
mov
mov
(bad)
repz
leave
in
dec
fsubrp
and
hlt
aam
out
out
cmp
test
outs
or
mov
xor
call
add
into
ds
(bad)
push
fst
cmp
iret
jns
or
dec
retf
push
or
pop
lahf
ss
jle
adc
push
shl
movs
push
movs
add
mov
fisubr
rcr
sti
dec
adc
clc
inc
add
movs
fdivr
arpl
popf
int
(bad)
dec
xor
mov
add
mov
add
dec
outs
ficomp
xchg
jl
dec
add
sub
dec
xor
dec
jge
mov
pusha
add
gs
mov
jecxz
sar
or
pop
call
jno
xchg
jecxz
mov
in
int3
sbb
cmp
(bad)
addr16
xor
xchg
xor
xchg
bnd
sub
adc
inc
xchg
popf
movs
retf
xlat
xlat
jne
lock
xor
clc
cmp
xor
jmp
pop
jmp
icebp
int
fld
mov
and
or
jmp
neg
dec
in
adc
andnps
stc
outs
xor
or
fdivr
xor
add
or
cmps
out
shl
and
ss
pusha
aad
mov
js
jl
cs
xor
hlt
call
dec
scas
jno
int3
cmp
in
add
cdq
pop
mov
mov
jmp
rcr
sub
jmp
out
dec
repz
dec
ret
cmps
sar
jo
or
dec
hlt
mov
jp
mov
dec
push
push
out
cmp
xor
out
fimul
pop
sbb
js
out
int
inc
mov
nop
or
aad
in
test
neg
not
fidivr
ins
inc
dec
and
mov
jns
rol
aaa
daa
lahf
push
and
inc
mov
mov
xor
pop
or
sbb
vphaddubq
jno
sbb
pop
sbb
popf
inc
cmc
rol
push
pop
adc
push
test
es
pop
mov
jmp
or
xor
inc
mov
(bad)
sbb
xchg
mul
inc
test
int
mov
into
out
leave
cdq
movs
test
inc
xor
sbb
(bad)
cmp
adc
out
xor
push
cs
add
leave
fdivr
push
bnd
scas
stos
jo
data16
(bad)
sub
push
mov
(bad)
iret
or
addr16
mov
fld
inc
mov
retf
rcr
(bad)
sbb
pop
pop
mov
jns
ja
xor
jb
push
push
sub
mov
leave
ficom
stos
jge
fsub
loope
add
adc
(bad)
cmps
pop
or
mov
out
jae
push
add
hlt
(bad)
sbb
stos
pop
sbb
fst
adc
pop
jg
in
add
stc
inc
hlt
ficomp
jmp
xchg
mov
push
test
div
xchg
outs
nop
and
int
daa
(bad)
push
push
jmp
sub
(bad)
mov
push
jnp
out
pop
mov
pop
inc
mov
imul
stos
or
cli
mov
inc
imul
out
out
sbb
icebp
add
popa
scas
aam
sbb
mov
pop
sub
mov
outs
xchg
pusha
jmp
sbb
push
xchg
cdq
mov
xchg
and
push
cmp
add
or
cld
mov
jno
aas
outs
in
inc
leave
push
or
stos
mov
enter
mov
call
stc
aam
jns
mul
ret
sub
mov
cmp
xchg
std
mov
xor
lahf
nop
dec
loop
psubb
pusha
mov
test
add
cmp
mov
sub
xor
lock
mov
fistp
stos
inc
in
pop
test
push
mov
ret
push
inc
adc
enter
xchg
jb
(bad)
aas
dec
or
lock
bnd
sbb
cmp
cdq
dec
dec
lock
mov
pop
add
push
xchg
dec
mov
test
sbb
pop
sub
movs
mov
das
mov
jns
pop
fdiv
cmp
movs
mov
cmp
inc
adc
sub
repnz
and
stc
push
repz
xor
aad
(bad)
rol
scas
(bad)
jle
cmc
in
dec
out
mov
inc
add
adc
repz
rcl
adc
pop
repz
dec
and
nop
outs
out
dec
arpl
sbb
into
jnp
test
xchg
inc
int3
mov
pusha
mov
sbb
pop
repnz
inc
and
xor
(bad)
push
rol
adc
rcr
and
xchg
daa
mov
inc
inc
push
sub
mov
iret
mov
sbb
(bad)
jo
out
stos
xchg
or
ss
test
idiv
ror
repnz
retf
lods
cmp
jno
add
lods
add
out
or
push
inc
sub
je
inc
cmp
(bad)
dec
ss
xchg
and
sbb
mov
imul
outs
out
or
jnp
lods
sbb
jge
add
int
shl
out
adc
cdq
push
outs
pop
cwde
out
fsubr
pop
mov
out
and
xlat
cmp
push
retf
arpl
adc
push
imul
lea
out
sub
call
add
push
dec
test
or
or
pop
cmp
cld
mov
mov
mov
push
xor
icebp
inc
adc
adc
cld
retf
xchg
mov
nop
cmp
daa
mov
xchg
and
mov
inc
jmp
imul
iret
loop
mov
xor
ins
addr16
dec
jge
mov
sub
push
mov
sub
jecxz
test
out
xor
sbb
mov
cmp
dec
aam
cmp
mov
cmp
push
xchg
jmp
jne
cdq
or
xchg
shl
imul
xlat
mov
in
dec
cmp
dec
mov
in
fild
cmp
fnstsw
lahf
sub
cmp
mov
and
jbe
pusha
xchg
xor
in
rcr
jl
icebp
xor
jp
loope
loopne
mov
dec
push
sub
xchg
lods
rcl
sub
pusha
retf
and
dec
fs
and
xor
pop
mov
mov
jno
in
lahf
retf
cmps
cmps
add
scas
add
test
and
fwait
add
lock
adc
bound
jp
or
std
sub
shl
les
push
lods
cld
jae
sbb
mov
adc
scas
movs
lahf
adc
call
or
(bad)
cld
cs
push
xor
ins
sti
push
push
cmc
js
sub
push
jae
popa
or
call
and
imul
mov
leave
xor
xor
aaa
cmp
sahf
cmc
int
xor
add
hlt
mov
lock
fist
test
fild
push
xor
(bad)
dec
retf
imul
inc
fwait
sub
or
sub
js
out
mov
ds
xchg
cmps
mov
sbb
pop
and
es
and
pop
arpl
inc
in
sub
pop
xor
movs
jo
adc
mov
jnp
mov
mov
out
out
dec
imul
pop
popa
cmp
pusha
imul
inc
stc
gs
sbb
std
and
add
fild
mov
jge
pop
and
or
or
es
inc
mov
cmp
adc
xlat
mov
aas
test
shl
cmp
mov
lods
mov
hlt
adc
mov
and
jl
lahf
test
gs
xor
pusha
dec
push
cld
pop
scas
repz
rol
jns
adc
fimul
in
leave
fmulp
jne
sub
dec
cs
and
cmp
or
imul
inc
imul
mov
cmp
addr16
int3
mov
cmps
lea
mov
pop
pop
dec
mov
fisubr
fs
mov
or
pop
js
push
jle
rol
xchg
mov
or
int3
sub
fisttp
rol
lods
cmp
xchg
sub
inc
push
loop
fsub
std
repz
pop
aaa
xor
jnp
ficomp
xor
cmp
or
mov
clc
rcr
mov
popf
inc
adc
jge
inc
xchg
push
jle
lods
scas
xor
lea
cld
push
nop
xor
sbb
mov
sbb
lods
dec
out
lahf
cdq
xor
stos
mov
in
add
je
adc
add
cmp
test
xchg
jbe
ret
cwde
pop
and
cmp
push
out
cmp
es
aas
popa
sub
jne
sbb
hlt
jp
mov
sub
jmp
ret
or
popa
or
movs
adc
and
js
neg
sub
lds
push
sbb
aad
sbb
shl
sub
xor
sahf
lahf
adc
jmp
or
js
pop
jg
mov
jge
out
push
enter
sub
repnz
mov
pop
mov
out
xor
cmp
or
gs
test
dec
mov
cmp
loop
push
int
jmp
pop
(bad)
fsubp
inc
sbb
icebp
xchg
rcl
out
inc
sbb
sbb
push
es
iret
xor
dec
fmul
ss
call
mul
stos
lods
pop
inc
pop
js
mov
fld
retf
cmc
mov
or
jecxz
fiadd
int3
adc
mov
repz
xor
movs
outs
jp
sti
cmp
jmp
arpl
mov
aad
shl
rol
xchg
mov
inc
push
test
arpl
mov
stc
ins
add
lods
imul
xchg
scas
inc
pop
retf
inc
jmp
ds
(bad)
cmc
xor
or
mov
into
inc
in
into
daa
xchg
fst
mov
movs
mov
jns
cmp
xor
pop
push
std
sahf
pushf
sub
loope
pop
and
test
data16
cmps
jo
rcr
(bad)
aam
mov
stos
add
mov
lods
es
push
gs
xchg
retf
mov
sub
pop
jge
push
xor
fisttp
mov
pop
dec
imul
and
stos
mov
push
sti
inc
pop
into
btr
and
jp
iret
clc
adc
inc
cmp
sub
lea
lds
dec
jno
and
push
mov
fdivr
loop
dec
repz
stos
push
icebp
jnp
aad
fdiv
jns
inc
scas
adc
test
jecxz
ds
pop
movs
int3
imul
inc
xor
or
(bad)
sub
(bad)
add
and
lods
mov
out
lds
jle
std
lahf
inc
jo
mov
add
dec
pop
push
cmps
arpl
mov
inc
inc
push
dec
push
jnp
and
mov
imul
and
fstp
shl
add
jp
in
in
outs
test
call
in
pop
fsubr
lods
and
add
(bad)
daa
jle
add
stc
inc
xor
inc
mov
dec
push
mov
sahf
lahf
cli
xor
pop
jl
adc
push
pop
sbb
aaa
retf
dec
in
sub
js
inc
mov
xor
aam
push
add
mov
or
data16
jmp
(bad)
inc
test
inc
icebp
hlt
mov
pop
xchg
push
xor
push
lock
dec
dec
stos
out
adc
mov
mov
in
aam
(bad)
shl
inc
pop
cmps
outs
je
xor
sbb
jge
cmp
fcomi
pop
adc
aad
mov
xor
add
add
test
fsub
stos
bound
(bad)
movs
bt
lods
sbb
push
lods
inc
lods
es
or
xchg
push
jl
mov
(bad)
repz
adc
mov
fnsave
push
je
aas
add
mov
inc
xchg
cmc
mov
push
or
or
inc
push
add
cs
sbb
pusha
jb
jnp
imul
adc
jmp
cli
or
mov
gs
mov
jno
dec
int
out
pusha
loop
mov
xchg
cld
jno
xor
ds
out
ficomp
leave
cdq
unpckhps
push
xchg
clc
movs
push
jnp
dec
sti
pop
(bad)
cmps
jmp
stc
scas
xor
mov
mov
push
ins
test
pop
jmp
adc
daa
xor
sbb
dec
push
je
scas
imul
out
mov
push
shl
repnz
fstp
or
adc
lock
cld
push
sub
adc
dec
cdq
enter
in
cmp
push
adc
cmp
int
jge
jecxz
popa
fst
lock
scas
mov
jmp
or
outs
mov
sub
xlat
shr
int
in
mov
fstp
cmp
and
scas
aam
push
fsub
push
lds
std
xor
or
sub
hlt
dec
adc
jo
es
xor
cmp
or
test
push
lods
sbb
lea
mov
inc
sbb
or
and
test
mov
xchg
or
scas
cli
lock
adc
add
pop
sbb
dec
xchg
rcl
pop
push
mov
push
sub
std
push
cmp
jecxz
xchg
aam
pop
xchg
jle
clc
pop
pusha
stc
pusha
add
push
xchg
mov
and
shr
xor
cmps
jo
inc
sbb
leave
xchg
mov
mov
xchg
mov
sahf
fild
call
or
int3
gs
test
es
in
es
or
fst
inc
in
cdq
dec
lds
mov
je
inc
jmp
fucomi
inc
jp
cmp
outs
popa
ss
aad
adc
pusha
mov
push
pop
sbb
sub
fcos
sbb
bound
cmc
xlat
stos
mov
ror
mov
cdq
sub
int3
cmp
outs
test
lea
xchg
jno
jp
addr16
jg
xor
cdq
out
mov
mov
movs
aam
into
imul
imul
ret
push
mov
repz
or
enter
jg
daa
and
add
xor
popa
pushf
inc
mov
fisubr
xor
repz
inc
aam
out
clc
cmc
or
add
and
add
not
and
push
xchg
sub
adc
and
arpl
(bad)
js
xchg
lea
sbb
test
arpl
pop
cmp
lea
ja
add
xor
stos
pop
pop
in
call
pop
in
cmp
inc
and
fnstenv
mov
mov
mov
aas
int3
stos
mov
sbb
pop
push
add
xor
loope
and
xchg
cmp
dec
test
sub
shr
sub
mov
xchg
fldenv
push
mov
mov
sti
int3
stc
shr
rcr
cs
(bad)
jmp
or
cmp
and
push
jne
mov
stos
mov
sbb
nop
inc
test
outs
loope
sbb
es
scas
(bad)
(bad)
(bad)
push
mov
push
pushf
fwait
xor
int3
je
pushf
mov
cs
jmp
inc
mov
in
jle
js
cmps
clc
stos
mov
inc
add
lods
xchg
mov
adc
mov
iret
mov
daa
jecxz
scas
outs
add
cmps
bound
xor
push
out
push
jnp
mov
sub
test
add
jge
cmps
and
cdq
fadd
mov
jge
xor
addr16
sbb
in
(bad)
(bad)
add
cmp
adc
xor
fdivr
sbb
lahf
pop
dec
dec
pop
cmp
adc
gs
inc
mov
push
pop
(bad)
mov
cmp
imul
cmp
push
je
mov
fcmovnu
das
test
and
and
push
inc
add
jo
xor
inc
xor
or
jae
mov
push
adc
or
(bad)
stc
sub
daa
aad
sub
dec
xchg
movs
cld
mov
call
fwait
sbb
xlat
sbb
or
cmp
in
or
jo
or
mov
mov
lea
push
fwait
pop
jg
push
daa
pop
ins
std
mov
fisubr
mov
push
dec
cmp
mov
sbb
jno
jb
xchg
xor
repnz
loopne
clc
int
jecxz
in
(bad)
jg
and
and
call
mov
out
or
aas
pop
rol
jl
or
push
xchg
bound
in
(bad)
std
sbb
jmp
stc
inc
cmp
or
stos
dec
xor
fnsave
mov
adc
mov
loop
repz
xor
mov
sub
inc
jle
or
imul
mov
cli
pusha
pop
sub
xchg
(bad)
sar
mov
pop
jecxz
inc
fcom
xchg
lds
sbb
cmp
aas
scas
add
jbe
xor
cmp
int3
aaa
push
push
cmps
or
jo
call
ret
sub
mov
jb
in
push
jp
push
ja
repnz
xchg
in
bound
ficomp
ret
icebp
sti
fistp
xchg
jns
push
pop
xor
lock
push
ja
pushf
lds
xchg
fs
sub
es
pop
pop
call
call
xchg
scas
pusha
or
or
(bad)
cmp
sub
mov
mov
sti
retf
mov
call
je
in
add
and
sub
xor
lock
call
aam
pop
retf
(bad)
mul
shr
cmps
fsubr
dec
cs
(bad)
mov
pop
cmp
aam
inc
rcr
push
and
sub
dec
test
xor
std
jae
mov
jmp
addr16
outs
js
xor
lahf
sub
ja
das
cdq
leave
dec
ret
mov
popa
and
(bad)
leave
push
popa
mov
push
mov
aam
sbb
mov
jbe
fisttp
or
lea
enter
sbb
xor
cmp
shr
js
out
cdq
mov
repnz
stos
aaa
cmc
imul
aaa
dec
jne
pop
jae
mov
or
xlat
pop
sbb
stos
call
jecxz
jp
pop
and
inc
loop
test
pop
cmps
jmp
movs
in
mov
mov
xlat
shl
cdq
iret
sti
leave
push
repz
sbb
out
and
mov
in
inc
add
sub
(bad)
mov
lea
lahf
xor
push
xchg
scas
sbb
imul
hlt
in
sbb
in
fistp
hlt
or
xchg
or
sub
add
sbb
mov
cmp
push
daa
test
dec
pop
inc
jp
inc
in
bound
data16
leave
imul
pop
xchg
test
inc
mov
inc
jbe
test
(bad)
es
std
lea
cmp
xchg
retf
pop
nop
jo
push
dec
(bad)
ins
inc
mov
and
test
ins
out
xor
fidivr
shr
mov
inc
test
retf
dec
aam
loope
jl
add
(bad)
sti
pop
add
movs
ficomp
jbe
inc
adc
push
mov
mov
pop
sbb
mov
lea
mov
and
dec
mov
and
idiv
fcomp
dec
pop
xchg
push
cmps
add
mov
movs
mov
dec
leave
lds
pop
sahf
inc
inc
fadd
sbb
loopne
dec
aaa
add
xchg
scas
xchg
dec
sar
dec
fisttp
les
xchg
mov
push
jb
sbb
arpl
js
lds
pop
rcl
or
mov
and
push
mov
pushf
xchg
ins
nop
or
or
arpl
pushf
loop
mov
sub
xchg
inc
test
pop
or
lods
idiv
jbe
fmul
and
inc
xchg
sbb
shl
adc
pop
rcl
int3
adc
test
stos
rol
pop
cmps
mov
scas
les
fs
mov
sbb
lock
cmp
jb
in
mov
jnp
jnp
push
xor
mov
(bad)
loopne
icebp
adc
add
lods
inc
loop
gs
movs
cmp
hlt
pusha
frndint
inc
mov
xchg
data16
popa
hlt
jo
push
inc
stos
or
ja
xor
adc
fmulp
in
je
mov
cmc
and
movs
cdq
ins
or
pop
xor
arpl
das
fsubr
push
ror
cmp
in
rcl
inc
pop
jnp
jo
in
pop
dec
mov
(bad)
mov
test
retf
pusha
jmp
mov
sbb
inc
(bad)
dec
mov
cmp
nop
pop
gs
in
mul
inc
rcl
jns
cmc
sbb
xchg
fsubr
fcom
fwait
mov
mov
shl
pop
push
loope
jnp
fsub
mov
outs
icebp
test
and
pop
pop
into
jmp
popf
push
and
pop
jns
(bad)
(bad)
mov
pop
or
cmps
or
jbe
jno
enter
int
cwde
leave
lods
sub
push
cs
repnz
sbb
fs
mov
adc
push
jmp
mov
repz
lds
out
xor
mov
loope
add
aas
push
outs
repnz
shl
jmp
aam
retf
je
xchg
gs
push
push
cmp
inc
add
out
retf
jmp
push
add
inc
lods
scas
inc
mov
xchg
mov
or
int
mov
or
repnz
stos
mov
jne
in
je
xlat
and
movs
adc
mov
(bad)
je
inc
jbe
jecxz
call
mov
mov
add
gs
inc
rcr
inc
or
call
inc
sbb
xor
stos
rcr
loop
and
inc
test
fimul
rol
mov
jmp
dec
rcl
xchg
stc
and
repz
mov
lock
cmps
dec
sub
lods
push
mov
loopne
cs
sub
adc
enter
mov
xor
xchg
cmp
mov
push
imul
retf
sbb
loope
add
xlat
add
xor
jmp
daa
mov
and
push
push
iret
ss
loopne
push
(bad)
fwait
ror
push
jl
inc
mov
xchg
push
int
loopne
sar
xlat
add
xlat
jg
cmp
(bad)
mov
jo
fdivr
xchg
rep
mov
mov
push
xor
push
jmp
mov
mov
adc
sub
xor
dec
repnz
xchg
jno
add
int
inc
stc
xchg
mov
pop
mov
mov
shr
lods
and
push
sti
lds
sub
pop
or
xor
inc
sub
pop
gs
mov
popf
push
add
aaa
mov
sbb
scas
jmp
cmps
aaa
mov
dec
mov
aaa
xchg
addr16
add
jns
stos
js
and
mov
mov
pop
fld
rcr
aad
pushf
test
sbb
call
in
adc
and
div
adc
lods
icebp
lahf
fwait
cdq
(bad)
ficom
jae
adc
ret
call
pop
ficomp
mov
inc
(bad)
scas
push
mov
lea
in
mov
pop
fstp
inc
push
test
sar
outs
mov
into
ret
pop
xor
push
imul
push
dec
lods
shl
lods
xor
add
fimul
lods
xchg
in
sbb
mov
lahf
push
xchg
repz
out
sbb
pop
xor
sub
mov
cmp
cld
jne
(bad)
mov
mov
stos
sbb
dec
dec
mov
sub
lahf
rol
mov
dec
dec
sub
pop
pop
loopne
popf
push
fsub
and
inc
adc
imul
clc
adc
into
jne
leave
mov
movs
jmp
mov
inc
add
mov
sti
imul
dec
or
clc
or
lods
mov
push
icebp
inc
mov
push
inc
mov
cmp
lods
aas
cli
in
aad
push
push
pusha
frstor
js
imul
clc
imul
xor
mov
xchg
les
adc
out
lods
outs
into
xor
in
imul
test
pusha
lock
sar
lahf
pop
mov
push
int3
inc
into
adc
ds
into
fstp
fbstp
push
push
cmp
mov
hlt
inc
and
push
or
or
out
retf
jge
in
adc
add
mov
mov
lock
pop
icebp
xchg
xor
sar
movups
bound
push
mov
xlat
out
mov
jle
loopne
mov
sub
or
cmp
mov
dec
cmp
ds
xlat
cmp
dec
mov
bound
mov
or
retf
jb
sbb
rol
mov
int
sub
sub
aam
sub
sub
enter
push
mov
dec
in
cmovg
daa
mov
jae
into
ins
mov
mov
push
xor
jnp
aad
xor
lock
mov
inc
xor
cmc
dec
sub
or
cs
sbb
dec
jb
cmps
xor
repnz
xchg
jecxz
jge
ins
push
sub
mov
mov
mov
adc
cli
inc
popf
pop
adc
xor
mov
jne
jg
push
rcr
mov
xchg
repz
adc
pop
mov
push
pushf
jne
mov
pop
popf
nop
aad
push
es
loop
jnp
outs
jo
push
mov
and
jo
xchg
mov
je
dec
sub
push
in
ja
popa
and
ret
jns
fisttp
cld
lods
add
xor
adc
adc
loopne
aam
hlt
cdq
icebp
int
mov
pop
imul
fdiv
push
mov
pop
mov
jb
int3
fistp
dec
sub
ins
popf
imul
loop
lods
mov
jmp
sbb
stc
pop
loopne
mov
cmp
fild
(bad)
xchg
mov
jle
xchg
je
jae
jmp
icebp
push
mov
mov
jnp
ret
cmp
pop
adc
or
je
call
call
mov
sbb
into
jo
addr16
sbb
mov
or
sbb
jno
cmp
pop
mov
mov
test
cmp
pop
sub
aaa
xchg
add
fucomp
shl
or
pop
jp
dec
shr
lds
addr16
cwde
mov
xchg
push
jl
(bad)
fnstcw
cdq
jle
out
(bad)
dec
jae
ror
fdiv
jmp
jl
sub
dec
pop
cmp
adc
or
ss
mov
mov
sub
cmps
push
mov
(bad)
dec
jnp
jns
adc
sub
push
add
or
mov
stos
movs
xor
xchg
adc
fsubr
pop
daa
xor
push
ins
cmps
jle
into
mov
cwde
aam
adc
and
and
sbb
fistp
div
mov
jo
adc
cmp
retf
(bad)
jns
mov
mov
add
mov
cmp
push
mov
jg
add
and
and
and
mov
daa
pop
fst
leave
add
jnp
xchg
xor
dec
mov
dec
mov
inc
das
into
push
xchg
je
int3
and
ror
int3
push
xor
and
rol
fcomi
ret
(bad)
fadd
in
mov
inc
jmp
adc
bound
lods
out
xchg
es
test
sahf
xor
push
mov
fs
fisub
mov
mov
pop
dec
mov
(bad)
jns
movs
pop
arpl
xor
in
sbb
sub
lahf
(bad)
push
xchg
fcmovbe
call
lahf
dec
push
cwde
repnz
jle
stos
cmp
cdq
aaa
and
pop
adc
loope
add
imul
or
popf
cmp
cs
call
fs
jmp
repz
hlt
mov
push
(bad)
lahf
sar
fcomp
js
mov
sar
or
mov
push
dec
jmp
bound
dec
outs
fidiv
push
and
ror
or
scas
mov
aam
sub
into
mov
shr
push
and
mov
sbb
mov
adc
push
repz
xor
(bad)
daa
movs
(bad)
int3
jnp
and
dec
inc
sbb
mov
xor
jecxz
(bad)
mov
push
pop
fwait
loope
shl
ror
cld
dec
push
pop
adc
dec
mov
in
cmps
ins
shl
test
stos
push
push
test
(bad)
and
jp
pop
xor
test
pop
(bad)
mov
jp
add
inc
mov
add
mov
popa
xlat
dec
or
hlt
adc
sub
dec
pop
pop
ins
dec
add
lahf
movs
inc
pop
jno
adc
xor
push
pop
in
shr
xor
add
les
outs
and
sbb
popf
out
xor
inc
mov
repz
pop
add
fwait
mov
push
lock
push
jl
popa
mov
inc
in
loope
aaa
jp
dec
and
fwait
and
mov
aam
fdivp
scas
and
pop
jmp
aaa
push
arpl
adc
addr16
fild
les
enter
test
gs
(bad)
jle
leave
dec
loop
pop
or
and
sti
pop
movs
popf
imul
xchg
sbb
cwde
push
pop
rcl
sbb
rcr
ds
fsubr
outs
jecxz
mov
sbb
pop
int3
popf
add
inc
or
xchg
dec
mov
cmp
adc
push
sub
es
iret
icebp
pusha
xor
cld
cmps
shl
or
xor
push
push
jle
push
loop
fs
stos
fwait
mov
push
lahf
clc
mov
or
imul
mov
mov
cs
ret
or
std
mov
aas
dec
sub
mov
add
mov
jne
adc
sub
(bad)
mul
xor
mov
cli
mov
mov
jmp
cmp
mov
adc
jb
repz
cmp
adc
or
lods
jmp
or
cmps
mov
sub
sub
in
cld
push
and
xchg
jae
xchg
xchg
pop
add
bound
jbe
cli
int
sub
sub
or
(bad)
(bad)
push
or
cmps
add
js
add
mov
adc
push
pusha
cs
jecxz
movs
stc
test
lea
fild
mov
push
or
mov
fcom
(bad)
jo
mov
into
xor
xor
fs
inc
mov
or
cmp
and
dec
dec
xchg
xchg
mov
outs
and
out
ret
scas
xor
cmps
mov
pop
and
in
mov
jae
jnp
dec
push
je
add
push
sub
lods
adc
xchg
cs
xchg
(bad)
mov
jne
or
lods
and
out
add
dec
push
dec
mov
arpl
(bad)
lods
pop
add
shl
jne
and
push
inc
lahf
std
cmp
mov
add
push
fld
or
test
adc
cmc
gs
dec
pushf
xor
jmp
push
dec
xor
cld
loopne
gs
push
ja
cmp
push
fcmovb
jne
mov
push
ss
push
add
stos
movs
xchg
and
xchg
or
add
sbb
push
fwait
cmp
dec
pop
mov
pop
or
mov
into
shl
sahf
xchg
pop
mov
xor
(bad)
pop
jo
sbb
mov
inc
inc
xchg
rol
mov
mov
adc
mov
fsubp
push
out
stos
out
sbb
add
xchg
imul
loop
iret
pusha
outs
push
dec
pop
pop
arpl
dec
sbb
mov
scas
in
jne
gs
lods
or
mov
xchg
addr16
sahf
ret
je
pop
mov
movs
sbb
test
shr
sub
pushf
pop
in
pop
cmp
imul
xchg
(bad)
pop
cmp
sbb
mov
shr
test
xor
bound
dec
push
mov
in
les
std
mov
mov
je
retf
dec
jecxz
push
inc
add
xchg
loop
xchg
ss
jae
ds
push
sbb
inc
mov
mov
mov
gs
inc
cs
mov
pop
ss
fldlg2
ret
stos
lock
loop
ds
lods
inc
in
inc
adc
mov
test
stos
or
adc
cs
loope
cmp
(bad)
hlt
bound
cld
add
stos
or
imul
sar
jae
sub
outs
dec
mov
jecxz
push
repz
sbb
push
ss
push
dec
in
mov
sbb
fimul
scas
pop
icebp
fdivr
arpl
inc
add
stos
js
or
aaa
addr16
cli
test
pop
or
adc
imul
idiv
aas
jg
outs
bound
stos
sbb
aad
jbe
inc
jae
lods
aaa
mov
test
xchg
call
hlt
or
cmp
lock
jbe
ins
mov
dec
loope
dec
fisttp
fs
inc
lahf
mov
fadd
push
inc
setg
jecxz
ja
ja
mov
out
jae
jae
ja
scas
(bad)
fisubr
mov
push
and
std
jb
push
xchg
cli
add
bound
inc
imul
rol
push
je
in
(bad)
call
jl
ret
je
scas
xor
leave
sbb
popa
jb
adc
daa
push
cli
out
jae
mov
ins
data16
ud0
cld
and
and
shr
inc
sub
out
cld
call
inc
into
adc
leave
retf
xchg
push
cmp
(bad)
pop
pop
and
pop
dec
ficomp
cmc
sbb
mov
pop
in
add
stos
fsub
(bad)
and
imul
sahf
pop
sub
movs
push
mov
mov
fldenv
dec
dec
jl
mov
cmps
mov
mov
inc
jbe
adc
sub
add
(bad)
jno
jmp
aaa
out
stos
daa
and
pop
xor
fdiv
outs
bound
(bad)
mov
mov
or
nop
test
push
cmp
arpl
jmp
pop
sbb
inc
add
mov
inc
sti
test
add
push
test
ret
or
es
cdq
out
das
out
clc
lods
xor
or
mov
imul
mov
xor
pop
dec
mov
loope
or
dec
cmps
dec
test
fsubrp
data16
cmp
jae
sub
xchg
mov
in
pop
(bad)
shl
cmp
xor
push
and
add
or
inc
mov
adc
cmps
adc
mov
or
movs
retf
clc
mov
push
sbb
hlt
lods
out
lods
xor
les
test
xor
sahf
xor
(bad)
mov
sub
sti
lods
inc
jo
stos
xlat
popa
dec
mov
jg
adc
xchg
inc
push
call
push
ds
(bad)
daa
jmp
and
ret
jg
xor
movs
call
pop
fsub
lods
out
push
mov
pop
fcomip
in
addr16
cmp
fucom
cmps
inc
and
lock
cmp
xchg
add
inc
sub
and
add
mov
cmp
jmp
out
fidivr
push
into
dec
mov
xchg
cmp
fistp
clc
push
push
adc
sti
or
and
dec
sub
mov
mov
jmp
mov
mov
mov
cmps
ret
sbb
mov
stc
ins
jmp
inc
cwde
dec
sti
ja
ror
sbb
inc
jmp
push
int3
adc
jb
ss
sub
jbe
stos
ja
mov
mov
shl
and
cld
or
mov
jne
push
adc
imul
in
out
inc
xor
into
push
sbb
out
pop
push
test
adc
sub
push
mov
ficomp
ds
daa
cmc
mov
lds
cmps
pop
ja
pop
fidivr
fsub
pushf
sub
loope
(bad)
test
ret
repz
in
mov
(bad)
xchg
sahf
cmc
lea
xchg
pushw
lock
cmp
xor
neg
popf
add
dec
pop
mov
mov
add
in
inc
mov
dec
loop
mov
aaa
mov
outs
mov
imul
je
inc
(bad)
jmp
leave
sub
and
movs
mov
cli
in
jo
das
ror
jecxz
pop
mov
ret
loope
loopne
ja
leave
xchg
ins
call
in
mov
push
(bad)
in
sti
test
lea
jnp
aaa
loop
jo
inc
rol
mov
into
shl
loopne
sbb
adc
mov
mov
and
fst
shl
push
xchg
adc
jae
mov
mov
jecxz
rcl
(bad)
jmp
out
jge
sti
and
mov
int3
xchg
mov
(bad)
jno
pop
push
mov
mov
cmp
push
mov
mov
mov
or
cmc
push
add
fstp
loope
lods
xchg
not
shl
jmp
out
out
or
aad
push
xor
les
mov
aaa
repz
in
inc
pop
addr16
push
pushf
in
rcl
sub
movs
mov
stc
fwait
in
retf
fwait
mov
jmp
mov
xor
dec
pop
sar
xor
push
sub
lea
arpl
shl
mov
add
pop
test
leave
imul
inc
int3
xor
mov
xor
(bad)
fldcw
and
in
jecxz
adc
mov
lds
repnz
icebp
out
pop
aas
xchg
push
mov
pop
cli
loopne
mov
sub
aam
xor
pop
lds
adc
xor
and
ror
ss
loope
sub
cmps
daa
xchg
mov
aad
clc
aam
sub
sbb
xchg
dec
add
dec
imul
out
jns
xchg
popa
test
sbb
(bad)
push
popa
pop
mov
test
xor
mov
xor
or
or
cdq
fstp
mov
popf
jno
pop
pusha
mov
imul
cdq
inc
mov
pop
and
mov
sub
jg
inc
cmps
mov
xchg
pop
pop
je
adc
inc
lahf
pop
pushf
add
pop
inc
jmp
push
mov
sub
test
out
jb
lods
fs
or
sub
mov
icebp
mov
fdiv
pop
dec
das
jb
mov
out
and
cli
or
xchg
test
lods
dec
lock
imul
jo
inc
inc
push
popa
push
xchg
pop
aad
aas
ret
and
xchg
ret
sti
(bad)
aas
in
(bad)
xor
sti
pop
std
push
in
lods
push
cmp
fbstp
mov
fidivr
ins
(bad)
cmp
xchg
aaa
test
aas
(bad)
and
adc
das
jle
arpl
sub
pop
inc
add
push
adc
dec
adc
lods
sbb
jl
mov
mov
movs
faddp
icebp
mov
pop
jl
and
ret
sub
(bad)
jns
repnz
jg
mov
inc
lods
push
ret
rcr
fnstcw
int
repnz
add
inc
add
xor
add
and
mov
leave
cmp
push
fiadd
repz
pusha
push
add
(bad)
stos
loope
jnp
jnp
cdq
add
inc
int
sub
mov
outs
cmp
pop
loop
jge
jae
ror
cmp
add
pop
dec
push
dec
dec
loope
xchg
sub
adc
or
mov
mov
adc
movs
mov
cmc
sub
aam
cmp
dec
inc
sbb
lods
imul
xchg
arpl
sub
lods
pop
xor
adc
and
or
fstp
mov
mov
pusha
push
cmc
push
shl
in
mov
out
jmp
cmp
mov
gs
inc
sub
and
inc
leave
and
mov
adc
popa
xor
hlt
arpl
dec
outs
cmp
div
daa
int
mov
xchg
ss
xor
dec
sbb
sub
push
cdq
(bad)
add
xchg
pop
sbb
ss
add
daa
xchg
xor
in
loope
mov
(bad)
out
jge
sub
jmp
mov
dec
push
push
or
mov
dec
add
movs
xor
pop
jae
adc
pop
xchg
out
jecxz
and
pop
test
fs
push
push
test
retf
cmp
jns
xchg
fnstenv
dec
jge
retf
cmp
inc
int3
pop
jbe
pop
adc
jl
jmp
push
inc
repnz
xor
ret
adc
push
je
mov
(bad)
xor
cmp
leave
call
cmp
jmp
not
cmp
mov
pop
jmp
push
fcmovu
push
inc
sub
fdiv
inc
and
or
xchg
out
or
push
push
cmp
or
mov
cmp
les
or
xor
inc
test
loope
inc
push
pushf
test
jmp
mul
cmp
cmc
(bad)
fstp
jae
mov
mov
mov
bound
add
push
adc
sbb
rcr
jmp
push
add
sbb
imul
mov
pop
add
movs
adc
enter
ret
adc
ret
xchg
jb
xchg
jge
pop
aas
dec
(bad)
jmp
mov
enter
push
mov
sub
test
push
push
jge
out
retf
jno
or
fdivp
fld
push
push
sbb
ret
jnp
mov
(bad)
mov
neg
sahf
lds
adc
xlat
xlat
shl
sbb
jle
sbb
ret
ret
mov
mov
push
jle
inc
xor
adc
or
iret
push
stos
cmps
jne
add
stos
push
xchg
add
movs
adc
pop
xchg
iret
adc
clc
es
mov
loope
push
popa
ret
mov
mov
nop
pop
sub
mov
and
mov
cmps
mov
and
mov
xchg
inc
add
lods
mov
adc
add
aaa
cdq
bound
push
int3
repz
test
jo
jbe
out
lds
jae
js
push
inc
shl
push
hlt
addr16
in
or
icebp
int3
sbb
dec
aas
hlt
inc
jmp
inc
adc
push
je
push
xchg
xchg
aam
mov
or
xor
fnstcw
xchg
jbe
sbb
cdq
ja
(bad)
(bad)
cmp
lea
cmps
retf
dec
mov
mov
or
jb
add
fwait
xchg
hlt
popa
sub
fisubr
arpl
jle
jl
sbb
fmul
push
int3
dec
mov
data16
jno
cmp
pop
add
and
sub
fnsave
jo
sub
xchg
repz
cli
and
(bad)
sbb
push
in
clc
movs
xchg
cmps
lds
xor
cmp
retf
pop
das
or
scas
vshufpd
xor
ins
xlat
push
xchg
sub
and
xchg
push
ins
dec
outs
je
into
push
adc
lods
int3
clc
xor
call
and
daa
pop
pop
in
inc
xchg
jmp
fwait
and
(bad)
int3
lods
sbb
and
ror
adc
jl
call
data16
sub
xchg
mov
dec
sub
jmp
pop
jnp
stc
scas
aaa
xchg
jmp
sub
cld
stos
ret
cwde
jno
data16
in
mov
sbb
push
dec
(bad)
and
dec
adc
xchg
add
mov
pop
(bad)
mov
cs
loope
sbb
test
stc
inc
mov
jecxz
fwait
jecxz
daa
lods
addr16
push
fsub
retf
push
xor
(bad)
push
das
out
loop
adc
xor
push
cmp
xchg
add
xchg
sub
in
outs
adc
jmp
cs
add
inc
pop
push
xor
cwde
mov
xor
pop
pop
pop
hlt
xchg
sbb
cmovg
shl
nop
jo
mov
jb
mov
pop
dec
ret
rcr
in
movs
dec
ins
xor
adc
lock
or
rcl
xchg
outs
sub
mov
dec
pop
rcl
rcr
fadd
call
sbb
adc
or
bound
dec
(bad)
jg
test
sbb
sub
int
xor
mov
or
adc
xchg
jo
xor
addr16
jge
jmp
xchg
ds
(bad)
mov
int
mov
push
adc
jne
inc
bound
lock
mov
and
jmp
inc
mov
jne
sbb
mov
add
inc
jmp
xor
dec
retf
jge
fimul
arpl
add
pop
dec
lahf
sub
cmp
stc
dec
sub
xor
in
xor
in
xchg
dec
arpl
push
sub
iret
or
xchg
or
push
and
ss
xlat
imul
sbb
sub
aam
xor
je
mov
add
out
enter
aas
mov
sub
and
push
es
cmp
sar
cmps
out
cmps
stos
fwait
movs
pop
outs
mul
icebp
dec
retf
adc
add
cmps
jae
push
add
pop
lods
cmps
outs
loopne
pushf
in
test
jae
sbb
jnp
push
xchg
rcr
jmp
pop
xor
mov
sub
xchg
cmps
repz
xlat
jae
jo
imul
pop
sbb
mov
sahf
and
pop
or
(bad)
xchg
(bad)
cmp
mov
fwait
cmp
mov
test
fild
adc
adc
cmp
inc
enter
push
ins
neg
pop
adc
xor
pop
cmps
repz
or
push
xchg
out
dec
call
xchg
das
jne
or
loope
rcl
popa
mov
cmp
pusha
jb
pushf
pop
fdiv
mov
shl
inc
xchg
ss
in
shl
mov
mov
mov
pusha
scas
pop
push
fbstp
test
xchg
fs
lock
test
fcmovbe
add
aas
fmul
js
dec
xor
mov
fimul
fstp
push
mov
stos
aam
ss
adc
stos
mov
add
leave
call
mov
imul
jg
test
in
jae
cld
mov
and
imul
leave
or
inc
cld
pop
and
mov
enter
mov
adc
jl
movs
rcr
push
les
aam
xor
pop
cmc
mov
dec
stc
movs
rep
(bad)
pop
push
in
add
and
es
scas
push
cmp
jno
adc
push
push
or
jmp
jae
cld
push
sub
or
(bad)
adc
stos
cmps
cld
scas
scas
sbb
fcmovne
pop
arpl
dec
movs
lods
enter
mov
test
push
inc
sbb
cmp
out
call
int3
mov
pop
lods
dec
xchg
std
jbe
jecxz
mov
add
loope
wrmsr
aad
(bad)
(bad)
mov
pushf
cs
adc
retf
hlt
into
pop
fist
push
aas
jnp
clc
dec
mov
jb
call
pop
seto
stos
dec
xchg
push
dec
adc
inc
lahf
inc
in
push
mov
xchg
mov
jecxz
inc
jmp
mov
push
dec
xor
cmps
adc
sub
push
sar
push
js
cmps
call
and
or
jmp
xlat
mov
dec
cmp
mov
imul
aaa
xchg
sub
xchg
arpl
adc
xchg
dec
jae
imul
push
pop
jecxz
mov
imul
pop
and
outs
or
nop
mov
mov
sub
xchg
test
push
push
sbb
fadd
cmp
mov
xor
pop
mov
or
inc
inc
in
jae
pop
add
fiadd
mov
(bad)
add
into
(bad)
movs
push
mov
and
push
les
jecxz
sbb
sbb
lahf
loop
pop
push
adc
inc
hlt
call
repnz
and
shl
jecxz
rcr
xchg
nop
nop
xchg
dec
mov
(bad)
lea
sar
shl
add
daa
mov
jns
xchg
loop
fimul
fadd
xor
fdivrp
push
xchg
imul
lahf
aas
test
sbb
mov
rol
jmp
loop
dec
std
xor
adc
xor
push
inc
out
dec
mov
in
pop
mov
repz
jbe
mov
push
pop
inc
or
pop
cmp
xor
pop
cmp
push
in
in
mov
xor
imul
cmp
sti
ffree
or
xchg
mov
fist
push
enter
test
cwde
or
pop
call
xchg
aas
pop
nop
(bad)
fnstcw
lods
pop
xlat
scas
and
jmp
mov
imul
push
dec
loopne
mov
pop
dec
mov
xchg
sbb
scas
out
(bad)
call
lds
inc
jmp
ffree
mov
cmp
in
mov
sbb
cmc
loopne
adc
and
loop
out
cmp
inc
sbb
ret
inc
ror
lock
movs
shl
arpl
js
or
cdq
nop
dec
xchg
sahf
xchg
mov
add
mov
or
pop
push
inc
test
push
(bad)
pop
adc
(bad)
aad
test
fnstenv
sbb
jmp
jmp
cld
ja
fwait
and
data16
popf
jae
xchg
adc
lock
cmp
mov
sbb
dec
repnz
xchg
push
pushf
adc
sub
cmp
inc
pop
mov
cli
repnz
sub
(bad)
cmp
xor
add
inc
sahf
test
mov
mov
std
scas
push
out
sub
and
and
xchg
adc
les
dec
cmp
mov
add
cmp
inc
test
jmp
cmps
sub
movs
scas
xor
cdq
mov
imul
cmc
pop
push
xor
and
popa
pushf
push
xchg
jp
add
mov
or
(bad)
mov
ficom
popf
jl
push
add
loope
imul
shr
and
xchg
aaa
stos
mov
frstor
push
adc
mov
cld
rcr
jne
mov
mov
add
adc
popf
cmp
add
cmps
cmp
pop
push
xor
mov
cs
fldenv
pop
pop
inc
into
mov
adc
mov
sbb
(bad)
dec
stc
pushf
push
jge
push
add
das
mov
and
mov
mov
icebp
fisub
fcomp
icebp
add
daa
and
jae
pop
adc
dec
enter
add
call
jb
sub
ins
sahf
jle
push
jmp
leave
jmp
cmp
fadd
je
in
xchg
mul
retf
xchg
lahf
push
add
mov
push
dec
cmp
xchg
jo
repnz
leave
ja
clc
push
lock
sbb
stos
out
or
int
add
in
js
cmps
ffreep
and
aaa
dec
push
call
xlat
xchg
jmp
xchg
(bad)
and
repz
xor
inc
mov
push
fdivr
sahf
jecxz
aas
int3
inc
out
fwait
add
lods
xchg
aaa
sti
xchg
inc
push
out
outs
sub
retf
mov
push
push
xchg
int3
cmps
gs
ror
rcl
dec
jg
inc
ja
sub
cwde
push
cmp
push
sahf
rcr
enter
leave
iret
xor
(bad)
in
sbb
sar
and
into
stc
mov
and
inc
ins
push
sbb
mov
mov
fwait
and
inc
cwde
jae
rcr
loop
lds
outs
push
dec
cmp
aaa
int3
pop
js
push
sub
mov
and
push
pusha
rcl
es
sbb
xchg
addr16
mov
pusha
fisttp
or
pop
outs
jecxz
data16
repz
xchg
pop
xchg
push
lds
addr16
mov
or
repz
sub
xchg
add
out
sub
cmp
ror
and
les
sub
adc
ss
cld
xlat
(bad)
mov
aas
adc
adc
es
icebp
add
hlt
push
loopne
sub
jmp
sahf
retf
leave
inc
(bad)
repnz
cmc
out
or
jbe
adc
out
movs
jp
call
in
jecxz
addr16
fimul
test
xchg
adc
dec
jo
push
(bad)
fimul
inc
dec
sub
out
xor
cli
fimul
adc
jae
inc
out
inc
mov
or
sub
retf
mov
pop
push
int3
mov
dec
loope
jns
popf
ins
mov
sbb
or
mov
pop
or
or
pop
pop
or
xlat
push
and
mov
stos
adc
das
jecxz
ds
fsub
shl
inc
loope
add
movs
ret
test
and
fdivr
outs
adc
movs
dec
test
popa
pop
adc
pop
lock
int3
push
loope
pop
adc
retf
push
mov
pop
fs
inc
out
call
cmp
or
cmps
loop
sbb
sub
xchg
pop
lock
and
and
test
adc
mov
sbb
jnp
data16
dec
mov
in
jg
fcmovu
(bad)
xchg
jg
stc
stc
xchg
and
mov
lods
push
fcmovnu
clc
xchg
(bad)
xchg
inc
(bad)
xor
dec
and
add
xor
sub
or
cmp
call
inc
addr16
rol
add
add
jge
add
and
call
rcl
cmp
fadd
or
ds
lods
push
jle
mov
or
repz
out
add
(bad)
jle
popa
or
push
or
inc
imul
aad
test
mov
add
inc
iret
sub
pop
adc
push
push
cmp
adc
cmp
jle
test
inc
dec
mov
push
fistp
out
dec
out
xchg
loop
jg
repnz
jmp
mov
cmp
sbb
jl
ret
(bad)
xor
cdq
imul
push
pushf
jl
adc
jne
js
sbb
icebp
fdiv
add
jecxz
jge
xchg
fld
dec
shr
pop
sub
sar
(bad)
jmp
push
or
dec
add
adc
cmps
jmp
xor
xor
xor
ds
cmp
mov
lods
xchg
imul
popf
addr16
and
fist
addr16
aad
loop
dec
push
sub
pop
stos
pop
popa
push
stc
mov
xor
int3
test
push
stc
inc
rcl
add
retf
mov
dec
call
enter
sbb
dec
cmps
and
dec
mov
cdq
shl
test
pop
cmp
mov
les
hlt
cmp
mov
lock
cmp
dec
stos
xchg
popa
(bad)
mov
xor
and
pop
xchg
scas
pop
mov
test
repz
push
fidivr
mov
cli
shl
cmps
fs
mov
in
mov
iret
out
sub
pop
cmp
or
xchg
int3
enter
(bad)
rcr
jae
ror
sbb
fidiv
jg
cli
jbe
test
push
xchg
mov
jnp
cmps
pop
sbb
and
jae
repnz
sub
sbb
int
not
rcl
ret
xor
dec
test
pop
xchg
mov
add
test
pop
push
mov
or
xor
mov
mov
outs
cld
es
std
or
rcl
jns
into
test
adc
loope
bound
mov
or
rol
xchg
es
stos
clc
aaa
sbb
add
mov
popf
xor
cmp
data16
xchg
mov
sbb
iret
cmp
imul
leave
jge
in
and
scas
mov
cli
sub
pop
adc
pop
sbb
daa
mov
fwait
adc
shr
daa
xor
mov
mov
mov
dec
inc
adc
mov
stos
dec
jb
or
sub
out
mov
les
outs
xchg
mov
add
mov
or
pop
or
ret
dec
sar
pop
retf
out
pop
gs
and
and
and
loopne
cdq
jge
repz
xchg
pusha
dec
mov
xor
adc
aam
mov
je
jno
mov
sub
or
adc
jmp
sub
mov
out
mov
push
cmp
sub
sbb
xchg
push
and
jne
jnp
shr
sub
fistp
mov
adc
mov
adc
mov
repnz
mov
mov
add
pop
movs
inc
inc
icebp
popa
ds
or
push
xor
push
test
lahf
jbe
sbb
or
xchg
jno
fdivr
fwait
arpl
mov
push
std
into
les
lds
push
stos
cld
jb
mov
dec
push
in
shl
call
inc
scas
inc
lods
sub
mov
xchg
xor
test
inc
out
stos
out
pop
test
push
jmp
ins
cmps
pop
sub
fistp
das
dec
or
xchg
(bad)
jecxz
add
neg
or
mov
jmp
sbb
inc
(bad)
jb
adc
(bad)
lds
aaa
test
mov
sbb
cs
push
jmp
xor
in
movs
sahf
and
and
cmc
into
xchg
pop
out
imul
xchg
call
or
mov
dec
mov
mov
add
movs
outs
ret
dec
jl
xor
mov
(bad)
pop
cmp
xchg
fsubr
or
xchg
test
stc
movs
mov
out
pop
arpl
jns
les
test
icebp
lods
adc
cmp
(bad)
mov
mov
int3
loope
xchg
adc
clc
cmp
add
iret
shld
adc
into
cmp
sbb
cmp
xor
sub
int3
jns
outs
mov
imul
pop
xchg
in
or
jo
data16
add
call
push
sbb
shl
out
sti
push
test
inc
mov
lods
icebp
fisttp
ins
aad
sub
fs
inc
enter
and
and
les
xor
ins
cmc
shl
(bad)
dec
scas
add
adc
or
and
ror
and
mov
fisubr
push
mov
xor
test
imul
xchg
mov
ja
iret
xchg
das
je
cmc
add
pop
ds
movs
sti
aas
mov
cmps
cdq
inc
sti
cmp
push
or
in
mov
xchg
inc
and
mov
or
ss
int3
mov
shl
jge
jge
pop
mov
mov
outs
add
aam
ror
scas
loopne
rcr
popf
cmps
fadd
mov
dec
ins
pop
push
sar
add
push
in
mov
mov
retf
movs
(bad)
out
push
lea
mov
repnz
mov
or
inc
shl
and
and
mov
lea
mov
adc
in
arpl
dec
ins
push
ret
je
ins
push
sbb
(bad)
int
cwde
outs
mov
out
or
mov
(bad)
sbb
inc
outs
inc
sar
loope
aam
call
mov
pushf
std
into
push
add
dec
xor
icebp
cmp
pop
jb
rcr
sbb
push
out
jg
xor
mov
mov
sub
dec
sub
in
fmul
dec
or
mov
push
adc
and
std
pop
aad
lds
sub
cmp
sub
or
(bad)
rcl
pop
ja
xchg
jge
addr16
jle
add
pop
cs
pop
dec
ja
test
rol
jmp
ja
out
jge
loope
cmps
stc
jae
hlt
in
out
pop
mov
cmp
pop
(bad)
ja
neg
mov
mov
in
pop
mov
mov
fisttp
inc
hlt
pop
es
cmp
repnz
dec
(bad)
jmp
ins
bound
jno
push
cli
inc
xchg
mov
jmp
add
push
mov
jmp
retf
push
pusha
mov
es
gs
inc
fwait
pop
retf
mov
pushf
enter
fstp
adc
sbb
(bad)
enter
in
mov
shr
push
lods
pop
hlt
icebp
mov
(bad)
xor
push
cmp
sbb
or
add
pop
std
mov
xchg
add
cmp
xchg
xchg
mov
pop
cmp
imul
dec
in
scas
ret
cmps
inc
(bad)
lock
pop
xor
ins
xor
popf
jp
or
push
fldenv
push
inc
mov
mov
fnop
jne
lock
retf
add
mov
xchg
dec
mov
popf
inc
(bad)
fild
shl
xor
ins
fbstp
ror
push
sbb
sar
outs
fwait
in
or
loop
mov
mov
dec
pushf
sahf
aas
dec
loope
and
popa
repnz
mov
rcr
jo
push
cmp
imul
nop
ins
repz
dec
pop
cmp
popf
sbb
sets
fprem
test
or
aas
sub
xor
mov
(bad)
xor
iret
dec
dec
mov
test
push
xor
pop
clc
mov
imul
xchg
xlat
lods
repnz
lods
retf
mov
mov
js
xchg
fild
dec
outs
int3
or
inc
in
out
enter
sub
aad
push
(bad)
(bad)
(bad)
int
push
mov
sub
sub
sub
test
out
add
cmp
mov
and
mov
xchg
outs
push
lds
cmp
leave
and
add
inc
xor
mov
in
jmp
ds
jb
repnz
sub
sbb
push
clc
cmps
inc
mov
stos
loope
aam
cdq
cli
imul
mov
cmp
xchg
jne
imul
fmul
icebp
cmc
adc
(bad)
cld
and
rcr
icebp
jb
jl
inc
int3
adc
cmc
or
movs
xchg
mov
pop
pop
sti
rol
xchg
in
push
jbe
jmp
mov
push
aam
rcr
fisub
ror
movs
jns
jge
mov
push
mov
ror
pushf
out
(bad)
cmps
aaa
inc
mov
jmp
xor
repz
aam
sbb
push
dec
sbb
cmp
test
add
sbb
cmp
mov
sub
dec
dec
stos
aam
sbb
cmp
push
and
shl
js
out
or
sar
cmc
loop
(bad)
shl
(bad)
mov
pop
shr
xchg
add
retf
pop
mov
adc
cmp
(bad)
iret
dec
ret
cmp
sti
xchg
stos
sbb
sti
mov
in
dec
test
(bad)
in
in
push
xor
icebp
sub
pop
add
sahf
fst
ins
and
cmp
div
or
popf
outs
pop
stos
fnsave
fsubr
xchg
std
jg
out
push
sub
xchg
mov
lock
pop
pop
pop
in
ret
mov
jl
pop
dec
test
cld
repnz
cli
or
mov
gs
stos
loope
mov
add
inc
sbb
ins
pop
push
stos
mov
push
fistp
enter
hlt
into
mov
mov
bound
cmps
mov
push
mov
dec
fwait
inc
(bad)
fisubr
aam
aaa
sub
pop
mov
jns
add
adc
push
dec
xor
pop
adc
dec
pop
es
mov
inc
xchg
nop
jns
faddp
das
lods
xor
iret
xchg
(bad)
sub
int3
ror
dec
fs
shr
mov
int
mov
sar
lea
sar
inc
xor
push
test
pop
pop
dec
jnp
mov
xor
outs
cdq
xchg
repz
add
xchg
idiv
popa
dec
rol
or
jecxz
aaa
retf
bound
lods
dec
jecxz
mov
sub
jge
stos
push
mov
jmp
xor
push
push
out
sbb
sti
add
std
(bad)
movs
sub
jns
enter
(bad)
arpl
daa
aaa
shl
and
ins
out
es
jb
cmc
out
inc
hlt
and
in
xlat
xchg
lods
adc
xor
daa
idiv
mov
lahf
test
retf
cs
lea
retf
daa
adc
and
mov
push
sbb
pop
and
xor
fwait
mov
cli
movs
ja
hlt
push
ror
dec
push
stos
lds
mov
icebp
push
xchg
mov
push
and
cdq
sbb
adc
dec
icebp
aad
mov
jbe
inc
jno
ja
or
popa
jmp
lahf
daa
es
cs
jb
jmp
mov
in
inc
cli
lds
or
fdiv
cmc
ins
test
jecxz
xor
in
mov
movs
adc
sub
(bad)
sbb
and
retf
out
das
mov
jno
loopne
pop
xchg
mov
mov
aas
xchg
xchg
mov
scas
(bad)
gs
push
mov
out
push
inc
scas
mov
dec
psubq
mov
sub
lock
jno
aas
movs
mov
jo
repnz
in
jecxz
test
or
clc
stos
dec
push
test
addr16
pop
mov
pop
out
cmp
mov
es
adc
ret
gs
fcmovu
fiadd
ret
push
in
in
into
add
lahf
xlat
jno
mov
xlat
xchg
mov
add
fistp
(bad)
or
cmp
inc
xchg
jle
fistp
repnz
test
bound
(bad)
pop
fstp
xor
std
outs
je
movntps
aad
je
sbb
dec
pop
sub
in
out
sub
test
xchg
or
push
stos
xchg
sahf
mov
jnp
aam
loopne
ficomp
or
xor
sbb
jo
mov
outs
xor
js
add
inc
ret
(bad)
pop
push
popa
call
cdq
push
jns
push
cmps
mov
or
cmc
or
pop
pop
pop
mov
cmp
inc
jne
jle
(bad)
xchg
jne
sbb
pop
push
loop
mov
mov
pop
jo
dec
adc
(bad)
mov
pop
push
imul
(bad)
and
dec
leave
sahf
push
push
dec
cmp
in
and
sub
adc
xchg
mov
xchg
cmps
mov
pusha
push
and
cmps
(bad)
pop
sbb
idiv
pushf
enter
add
cmp
nop
or
adc
add
stos
cmp
mov
pop
xchg
mul
xor
lds
adc
add
cmp
(bad)
(bad)
xchg
push
xor
add
retf
mov
inc
push
mov
inc
add
xchg
sub
xor
in
mov
jbe
clc
stos
aas
fldenv
lods
in
int3
stos
ja
fcomp
dec
fistp
nop
or
cdq
cmp
ret
xchg
inc
mov
xor
sub
mov
adc
out
idiv
scas
and
add
rcr
mov
sahf
mov
pop
mov
mov
mov
or
fbstp
out
mov
repz
rcr
xlat
mov
push
xlat
test
pop
mov
cmp
pushf
jbe
inc
or
bound
push
mov
fwait
dec
(bad)
mov
cdq
mov
add
lds
adc
cs
loopne
or
ds
or
scas
fst
imul
ss
(bad)
or
inc
mov
cmp
push
jge
sub
xor
or
ret
jmp
pop
jb
mov
cmp
pop
jmp
das
mov
outs
(bad)
xchg
mov
push
inc
jg
and
or
and
pop
cwde
call
aas
arpl
pop
leave
and
js
sub
cmp
mov
loopne
pop
dec
arpl
cwde
cmp
mov
jmp
in
jecxz
icebp
ror
ficom
mov
mov
(bad)
movs
loop
cmp
ds
pop
popa
call
scas
cmp
sub
sbb
xor
sbb
rcr
mov
inc
xchg
pop
outs
aad
cdq
(bad)
cmp
and
(bad)
stos
cmp
adc
sub
mov
lock
push
into
xor
add
in
ja
pop
inc
pop
adc
jae
jo
sbb
lods
inc
sbb
lds
inc
cmp
data16
add
cli
inc
pop
pop
and
out
jp
mov
sti
adc
push
sub
xchg
std
cmps
or
addr16
sar
pop
dec
adc
xor
inc
in
test
sub
lods
and
inc
jbe
les
jge
xchg
ds
push
jmp
mov
ror
lods
cli
xor
ret
cmp
sahf
sub
sar
xor
out
wrmsr
stc
shl
jle
popa
push
mov
ja
cmc
jl
dec
addr16
xor
xchg
sub
retf
pop
push
sub
mov
stos
outs
cmp
repz
ffree
ins
mov
jne
mov
sbb
xchg
mov
add
pop
lods
loop
sbb
clc
(bad)
imul
(bad)
dec
mov
xchg
sub
jne
mov
leave
push
mov
popa
dec
push
bound
push
mov
jbe
(bad)
arpl
dec
retf
mov
or
pop
xchg
xor
jmp
(bad)
push
int
mov
gs
call
mov
mov
mov
cli
xchg
push
sub
scas
dec
adc
xor
and
enter
inc
jo
in
outs
push
test
fwait
xchg
cmps
jge
scas
mov
mov
mov
or
fucomip
and
mov
int
fdivr
pusha
fadd
adc
pop
aaa
push
dec
jecxz
cli
mov
test
mov
add
inc
icebp
sub
mov
mov
loope
and
add
movs
mov
jb
js
or
(bad)
push
inc
xchg
pop
popf
push
in
adc
les
std
mov
or
jae
aas
inc
mov
loopne
pop
inc
push
bswap
mov
cmc
inc
sub
inc
or
and
iret
repnz
retf
push
not
fistp
(bad)
stos
outs
push
loope
mov
scas
adc
push
add
dec
xchg
test
jmp
inc
aas
or
sbb
les
lahf
sub
mov
leave
add
sub
int
aaa
jmp
out
repz
push
adc
test
sti
and
sub
push
sbb
inc
or
iret
xchg
out
sbb
scas
(bad)
mov
mov
dec
sbb
mov
adc
push
cmp
mov
mov
add
cwde
xchg
test
cmp
out
out
test
add
clc
jge
mov
add
jno
stos
lock
hlt
inc
inc
or
pop
in
sub
dec
pop
movs
or
ror
dec
int3
enter
pop
mov
aad
jo
hlt
(bad)
sbb
js
mov
or
dec
lods
xchg
xor
adc
xor
addr16
fcom
or
(bad)
pop
daa
or
das
cmp
mov
xor
add
jecxz
cdq
outs
popf
out
shl
jne
leave
fiadd
fs
push
add
adc
lea
mov
dec
jno
(bad)
pop
into
add
test
dec
in
mov
dec
or
imul
outs
cdq
fimul
ja
adc
sahf
nop
test
xchg
in
push
lock
adc
lods
loope
fwait
push
push
scas
sbb
sub
loop
sbb
mov
pop
repz
out
mul
lods
fld
sbb
pop
dec
mov
push
adc
rcl
aaa
pusha
jl
test
pop
pop
jmp
dec
and
ror
push
push
cmp
shl
xchg
dec
lock
mov
aas
inc
mov
inc
mov
in
jle
mov
add
mov
popa
mov
lods
jl
cmp
mov
sub
cld
mov
pushf
in
cli
xlat
fisub
retf
mov
cmps
jecxz
test
dec
lock
loopne
mov
out
and
leave
sub
pusha
adc
inc
adc
add
jmp
sbb
loope
adc
mov
ss
mov
leave
push
and
jl
mov
xchg
jge
ins
fist
popa
loope
or
adc
pcmpgtb
fldenv
mov
repnz
sbb
cdq
mov
cmc
sub
push
lods
lock
sbb
push
out
inc
adc
call
retf
scas
mov
mov
ss
lods
fs
dec
inc
in
sbb
ins
(bad)
sbb
dec
and
sti
jle
mov
cs
call
repz
push
mov
xor
sbb
jmp
sbb
pop
jns
sbb
or
push
push
push
cmc
xchg
std
and
leave
pop
retf
rcl
cmc
imul
mov
(bad)
and
rcl
add
adc
push
pop
stos
push
jmp
loopne
(bad)
xchg
sub
or
pop
addr16
mov
(bad)
dec
stos
adc
inc
jae
adc
mov
mov
cmps
fwait
sub
retf
(bad)
dec
pop
data16
or
add
(bad)
jno
mov
cmp
mov
add
fs
cmp
or
les
pop
test
sbb
into
sbb
sub
jp
dec
aad
daa
not
or
lds
jmp
jb
and
ds
in
mov
sub
daa
ficomp
lock
cmp
aaa
inc
rol
cli
cmps
mov
ja
mov
mov
pop
test
sub
je
popa
xchg
hlt
jb
add
fcom
add
cmp
xsha256
cmps
xchg
clc
add
mov
fiadd
lahf
dec
jge
scas
fldenv
push
dec
adc
and
icebp
out
xor
loope
or
in
xchg
xchg
add
data16
das
(bad)
(bad)
lea
pop
addr16
jmp
jecxz
(bad)
imul
jge
mov
in
xchg
add
push
outs
add
inc
push
bound
in
not
in
pop
(bad)
or
into
sbb
mov
xlat
pop
nop
mov
bound
adc
mov
je
mov
mov
outs
jmp
stos
xor
xchg
ret
mov
cwd
and
dec
test
dec
mov
push
add
lds
mov
daa
mov
add
sti
and
dec
jl
sbb
fild
add
mov
or
pop
adc
xchg
push
sar
call
mov
fdivr
outs
iret
ins
cmps
icebp
test
or
xchg
(bad)
mov
push
sbb
mov
push
sti
cmp
sbb
pusha
add
jge
sahf
jecxz
jge
cmp
inc
cmp
data16
scas
pop
daa
(bad)
std
add
hlt
adc
leave
call
adc
lds
cmp
mov
jbe
(bad)
shl
adc
or
mov
pop
inc
inc
out
aaa
int
xchg
rcl
pop
mov
pop
push
lds
mov
repnz
enter
or
mov
je
cdq
inc
test
aaa
lea
dec
(bad)
mov
push
xor
jecxz
in
jno
sar
pop
xchg
push
jmp
or
fmul
lods
out
adc
inc
mov
(bad)
jmp
retf
lea
pop
das
cld
and
xchg
sub
shr
mov
push
gs
into
mov
pusha
cmc
mul
nop
test
xchg
rcr
fcomp
or
fcmovb
sub
or
sbb
sbb
xchg
sar
mov
adc
mov
or
mov
movs
mov
dec
sub
das
or
aam
inc
mov
mul
mov
sbb
sti
in
(bad)
push
pop
push
test
(bad)
out
xchg
lods
out
xchg
pushf
sti
test
xchg
xchg
test
push
test
jb
aam
or
and
mov
ins
mov
movs
push
adc
xlat
lahf
pop
clc
jle
adc
shr
(bad)
dec
and
(bad)
imul
add
in
mov
loope
mov
loop
dec
(bad)
iret
inc
xor
mov
xchg
out
pusha
jecxz
push
test
dec
jge
dec
xor
cdq
inc
or
dec
and
jae
stos
ja
repz
cmp
push
cs
retf
pop
xor
jb
mov
jno
xor
mov
xchg
fimul
adc
movs
test
test
pushf
push
sub
adc
test
jne
xor
push
cmps
lahf
pop
bound
lock
xchg
in
fldpi
inc
push
sar
hlt
fstp
lock
add
stc
mov
es
push
xlat
clc
jmp
lods
add
int3
ret
or
enter
test
ret
mov
xchg
jmp
leave
sbb
jnp
mov
pusha
int
and
push
cmps
bound
sub
sbb
cld
lds
movs
sbb
mov
aad
mov
inc
pop
outs
jno
sub
inc
inc
gs
mov
dec
or
inc
dec
push
pusha
mov
bound
and
adc
shl
(bad)
mov
adc
fidivr
dec
cmps
xchg
and
lock
add
or
sub
aaa
mov
add
or
fild
iret
dec
ins
or
js
sbb
and
xor
mov
jle
call
and
jbe
mul
xchg
jmp
stos
movs
sahf
movs
and
jnp
pushf
out
xchg
es
jno
test
cmps
mov
mov
mov
push
retf
loopne
or
push
adc
into
dec
inc
inc
retf
push
mov
jge
mov
into
sbb
sbb
and
jg
shl
dec
push
cmp
and
mov
jecxz
or
mov
arpl
or
inc
jmp
aam
das
mov
adc
cmc
and
mov
in
(bad)
and
or
jno
fadd
mov
test
jns
je
outs
in
lock
adc
xchg
xor
mov
sar
xor
or
sti
push
mov
inc
lds
in
ja
dec
ret
cld
pop
mov
in
add
lds
sub
sbb
in
dec
xchg
fwait
inc
mov
test
or
(bad)
mov
ret
fisub
das
xor
add
jl
sbb
ret
rol
pusha
cmp
clc
mov
mov
aaa
pop
push
jb
bound
ret
repnz
int
sub
fsubr
inc
mov
pusha
fs
in
mov
push
push
movs
sub
mov
xor
pop
cmps
pop
(bad)
xor
out
mov
jae
jb
(bad)
ret
or
pop
and
out
dec
shl
xor
pop
ja
xor
xor
(bad)
adc
xor
(bad)
lods
and
or
(bad)
xchg
mov
ins
movs
ror
or
dec
int3
scas
cmps
and
inc
mov
out
inc
shl
scas
outs
out
push
loope
jmp
jb
icebp
les
ja
ins
inc
sahf
jae
jb
jp
cmp
adc
inc
or
mov
jge
jg
retf
outs
mov
sahf
sbb
lods
jle
add
sbb
mov
aaa
inc
cli
test
xor
xor
aad
and
enter
enter
test
jno
push
lahf
ins
div
movs
sbb
jnp
inc
jmp
scas
out
pop
lods
fwait
sbb
scas
loop
xor
xlat
mov
out
pop
test
push
push
xchg
cli
jae
icebp
outs
stos
sbb
pop
pop
jecxz
ins
inc
add
cs
mov
(bad)
shl
inc
cmp
xchg
or
cdq
add
push
aam
pop
adc
jge
(bad)
es
ja
jnp
mov
sub
jmp
jnp
ins
retf
outs
lds
int
push
xrelease
mov
push
xchg
aaa
mov
inc
xor
push
cmp
sub
int
xlat
xchg
into
push
mov
xor
cdq
pop
sahf
in
mov
nop
in
repz
mov
int3
les
sti
scas
xchg
jno
mov
xor
adc
sub
inc
sbb
movs
or
add
dec
jae
ja
jae
or
pop
sti
pop
not
(bad)
es
popa
outs
inc
fwait
jmp
inc
ins
das
inc
and
retf
mov
push
jecxz
add
and
out
mov
cwde
(bad)
test
cs
jecxz
popf
lahf
mov
bnd
or
inc
and
jb
stc
jle
xlat
adc
movs
ror
aad
inc
jns
pop
cmps
fcmovb
in
ins
cmp
add
jnp
mov
mov
imul
jno
xor
add
test
pushf
out
ins
stos
rcl
test
push
mov
xchg
popf
mov
clc
in
xor
and
push
add
fadd
lods
or
out
pop
cld
and
retf
popa
pusha
mov
mov
out
jle
dec
xchg
test
push
loope
add
out
pop
js
scas
sub
xor
pop
inc
mov
rep
mov
and
pop
pop
cli
call
shr
sub
stos
stc
test
imul
pop
fnstsw
and
mov
jle
cmps
add
cmc
pusha
pop
cmp
xchg
mov
push
stc
ret
call
sbb
test
mov
xor
ret
pop
jmp
ret
retf
dec
inc
aas
xor
ja
and
repz
fld
push
arpl
shl
mov
inc
xor
out
sbb
gs
ror
js
(bad)
lahf
lahf
test
movs
add
rcr
shr
ror
push
or
add
scas
add
es
test
or
icebp
push
sbb
outs
jle
xchg
adc
arpl
adc
adc
out
add
shl
pop
jns
outs
mov
in
rcl
scas
xchg
jg
ins
adc
imul
ror
push
sub
pop
add
arpl
scas
sub
lea
dec
mov
dec
(bad)
fst
popa
sub
imul
cmc
in
jg
and
cmps
int3
(bad)
cmp
jmp
jb
shl
mov
(bad)
movs
add
push
jmp
push
cmp
fld
xor
movs
fs
in
cmp
pop
leave
out
push
lahf
jns
test
sbb
leave
fistp
xchg
ss
or
int3
nop
add
cmp
adc
push
push
(bad)
sbb
rol
mov
pop
inc
fwait
jb
and
retf
mov
out
cmp
pop
(bad)
in
pop
add
add
repz
mov
imul
fisttp
push
xchg
lods
cmc
dec
and
in
ret
out
push
or
cmc
xchg
mov
push
in
shr
ins
sbb
(bad)
in
mov
aam
fadd
push
ret
jb
push
in
mov
out
imul
in
scas
xor
sbb
and
xchg
repz
dec
inc
ins
lahf
aaa
jbe
add
(bad)
push
hlt
repnz
sbb
retf
in
dec
mov
cld
mov
pop
mov
cmps
aam
mov
dec
neg
data16
mov
dec
nop
arpl
mov
cdq
mov
sbb
push
daa
lock
and
aam
popf
push
mov
popf
dec
int3
jae
adc
push
or
sub
retf
jmp
cwde
es
jbe
aas
inc
jge
mov
imul
adc
out
xchg
xor
push
cmp
stos
nop
xchg
(bad)
shr
xor
in
xchg
adc
sub
scas
hlt
sub
dec
pop
cmp
je
pushf
push
sti
stos
pushf
aam
or
or
push
xchg
sub
xchg
ins
aam
xor
out
out
fs
adc
call
push
fsubr
sbb
jecxz
fs
push
push
push
and
push
sbb
ficom
inc
jo
pushf
int
add
lds
pop
mov
scas
repnz
dec
push
out
std
jmp
into
pop
sub
add
cmc
icebp
das
sar
test
sbb
sub
mov
popa
and
aaa
inc
sbb
ror
mov
out
scas
sub
stos
imul
push
push
in
std
mov
stc
mov
rcr
inc
pusha
(bad)
or
xor
icebp
mov
inc
dec
dec
ja
mov
adc
scas
retf
popa
jp
add
hlt
pop
rcl
push
jo
mov
sbb
mov
call
pushf
(bad)
xchg
xchg
inc
push
outs
push
push
adc
push
(bad)
cmp
inc
test
stc
adc
mov
popa
mov
xchg
test
mov
push
(bad)
fnstsw
inc
xor
and
mov
(bad)
gs
call
jne
cmps
gs
sbb
inc
xchg
adc
movs
inc
add
test
sub
(bad)
jecxz
out
fld
leave
xor
xor
test
imul
sub
sub
push
mov
mov
addr16
retf
push
xlat
repz
dec
push
retf
mov
fwait
adc
(bad)
or
fwait
sub
sbb
jl
add
xchg
out
xchg
adc
push
ror
(bad)
repz
add
xchg
jmp
cmps
les
and
adc
rol
outs
xor
dec
fwait
xlat
jle
nop
test
(bad)
cmp
std
adc
and
push
aas
xlat
jns
xchg
push
fistp
fwait
dec
cwde
and
cmp
inc
jmp
test
pop
das
ss
arpl
mov
in
lds
addr16
jmp
sbb
popf
pushf
je
xchg
mov
sub
lahf
push
or
lea
ins
inc
sub
inc
int3
call
leave
pop
jbe
fsub
movs
and
ror
cmp
mov
lods
retf
ins
fstp
adc
dec
pop
add
adc
fstp
pop
jmp
cwd
icebp
or
mov
xchg
pusha
add
push
mov
inc
jno
ss
pop
sub
fdivr
mov
mov
mov
in
cmp
mov
mov
scas
add
jp
movs
push
dec
aad
xor
rol
(bad)
xor
pop
(bad)
cwde
cld
gs
retf
call
pop
xchg
into
jo
lock
adc
mov
mov
hlt
inc
scas
add
mov
add
data16
cwde
add
mov
pop
inc
out
push
xor
out
inc
jg
stc
mov
xchg
jb
or
jae
sbb
sub
inc
cmp
das
call
mov
inc
mov
mov
jb
cwde
nop
add
sbb
cmp
sbb
and
xchg
or
jmp
push
cmps
push
fs
int
pop
cld
scas
cld
ret
xchg
stos
sbb
jecxz
cs
adc
out
fwait
add
inc
jle
(bad)
cmp
push
jae
scas
clc
or
out
fistp
dec
cmc
outs
push
dec
js
and
mov
clc
dec
jl
int3
into
lea
dec
sbb
call
div
pusha
bound
add
jns
dec
movs
adc
add
pop
and
imul
add
out
jl
sbb
fwait
xor
pusha
push
pop
sbb
icebp
add
lock
jb
inc
inc
scas
sbb
xlat
and
mov
xchg
or
pop
jnp
dec
out
sub
std
std
mov
test
jecxz
in
and
mov
call
mov
scas
cmp
pop
test
add
xor
jecxz
cmp
xor
ss
in
inc
fidiv
inc
ss
jae
mov
xor
inc
jge
pop
pop
bound
mov
xchg
imul
and
inc
ja
mov
fild
push
inc
jl
add
je
push
xchg
mov
fdivr
sbb
shl
push
std
sar
adc
xchg
leave
js
in
ins
cwde
pusha
adc
mov
imul
shl
ror
adc
loop
iret
popa
stos
cmp
sub
mov
shl
loopne
repnz
scas
xchg
shl
dec
cmp
jle
fwait
jmp
dec
call
neg
inc
and
xor
sbb
push
in
frstor
xor
cmp
ja
inc
pop
mov
jp
mov
or
shl
cmp
ficomp
leave
sbb
int
push
ja
mov
inc
xor
sbb
inc
cmc
xor
fsubrp
dec
std
mov
push
adc
jmp
adc
(bad)
pop
xchg
sub
out
and
jmp
dec
into
and
pop
or
cmp
mov
sar
les
xchg
call
push
sar
mov
fisttp
in
lahf
aad
enter
cmps
ja
dec
retf
pop
shr
dec
inc
call
es
mov
adc
jns
ins
xor
mov
dec
adc
jl
outs
aas
call
and
inc
js
mov
into
add
dec
cmp
sbb
ins
jae
data16
int
(bad)
mov
cmp
js
sbb
call
int
dec
mov
inc
dec
push
enter
(bad)
mov
sub
popf
mov
dec
adc
pop
stos
mov
rcr
dec
dec
pop
dec
add
jle
add
clc
lahf
or
inc
jmp
outs
push
in
adc
inc
loop
xchg
mov
mov
jae
sub
hlt
sub
das
sub
push
inc
push
sub
sbb
into
pushf
loop
or
sbb
inc
mov
xchg
test
loop
imul
adc
cs
dec
pop
pusha
repz
leave
out
mov
and
adc
lahf
jecxz
clc
adc
xchg
popf
cli
add
inc
inc
sbb
shl
add
mov
jnp
mov
aam
mov
js
into
jno
cmp
jge
sub
xor
(bad)
mov
xor
inc
out
inc
xchg
xchg
fistp
push
xchg
sub
push
push
cmp
fst
fwait
rol
ret
nop
and
ins
dec
sub
cmp
in
cmp
aam
mov
bound
(bad)
es
fdecstp
call
cmp
mov
inc
push
sbb
scas
push
test
inc
mov
lds
pusha
or
adc
xchg
mov
add
sub
fdivr
cmp
jg
daa
jmp
ret
xlat
test
xlat
sub
movs
mov
stc
pop
push
clc
ds
sub
aaa
in
add
cs
cdq
add
pop
and
cmps
repz
loop
push
js
jb
sbb
stos
fnstenv
in
ins
cmp
sub
ins
sti
add
out
or
popa
test
(bad)
call
push
cmp
enter
mov
aam
ror
mov
sti
jne
icebp
jne
outs
retf
jl
pop
daa
ror
adc
in
sbb
aaa
sbb
xchg
and
fdiv
sbb
loopne
(bad)
hlt
mov
aam
sbb
bound
(bad)
and
(bad)
mov
sub
jbe
in
mov
dec
dec
(bad)
mov
sar
dec
pop
in
into
push
jmp
jge
inc
clc
data16
mov
pop
das
mov
lods
dec
xchg
or
xor
jb
stos
test
sbb
ret
hlt
les
or
pop
mov
popf
arpl
push
aad
aad
adc
not
push
arpl
push
sub
mov
or
imul
push
leave
jb
xchg
rol
push
lods
enter
inc
sbb
daa
fbstp
les
in
adc
movs
xor
neg
scas
xor
cmp
adc
je
cmp
add
repz
push
ds
xor
mov
jmp
stc
mov
sub
and
inc
sbb
(bad)
ds
mov
test
lods
jae
dec
adc
xchg
into
pop
outs
inc
fadd
shl
ins
push
gs
sbb
into
loope
sahf
or
xor
shl
adc
sbb
(bad)
pop
xchg
xor
nop
fst
(bad)
imul
adc
xchg
(bad)
inc
rcl
pusha
jge
lock
cmp
nop
add
jb
in
dec
imul
repz
add
and
(bad)
jne
pop
xor
and
iret
mov
mov
sub
inc
enter
pop
sub
inc
sub
jl
fst
ret
jp
inc
push
dec
adc
lock
xchg
mov
inc
ret
fdivr
jnp
adc
adc
mov
jae
sbb
rol
jecxz
loope
aam
xadd
mov
repnz
pop
sub
lahf
and
dec
in
pusha
nop
push
push
push
ins
jp
sub
movs
inc
inc
or
fcom
xchg
sub
cmp
ja
push
xchg
jne
pop
mov
sahf
aad
or
mul
push
shl
pop
mov
sub
pop
push
mov
(bad)
and
test
dec
data16
jb
push
adc
rcr
push
push
shr
movs
std
sldt
call
ins
adc
fist
popa
lock
cdq
dec
jmp
xor
pop
mov
and
push
int
xor
pop
cwde
fdivr
push
push
cld
loopne
cld
popa
out
outs
add
cwde
lea
and
fcmovne
or
movs
xor
jmp
bound
sbb
xor
mov
cs
xchg
mov
xor
dec
(bad)
leave
push
mul
jns
sar
movs
in
daa
add
stos
jno
test
jno
and
ds
add
popa
test
fadd
out
loopne
into
adc
pop
xor
fwait
comiss
aam
aad
xchg
pop
cmps
cmp
cmp
test
jns
outs
jecxz
scas
int
idiv
push
mov
bound
test
xlat
mov
lods
jle
sub
mov
pop
inc
sub
mov
or
and
outs
ins
xor
jmp
cmp
(bad)
sbb
sbb
iret
pop
jecxz
out
neg
jmp
push
fadd
cmps
dec
add
sti
ror
cmp
xchg
test
sbb
test
cld
adc
repnz
shr
cmps
or
xchg
push
pop
(bad)
mov
(bad)
je
or
xchg
cmps
pop
les
inc
(bad)
iret
(bad)
fld
and
jmp
push
xor
mov
mov
repz
jecxz
pop
dec
lds
popa
sahf
mov
sub
mov
aas
mov
bound
stc
into
adc
jle
mov
(bad)
cmp
mov
add
dec
adc
xor
jge
imul
and
out
in
aam
mov
xchg
xor
dec
mov
jg
inc
pop
mov
mov
das
lds
mov
pop
arpl
enter
jmp
mov
cmps
aam
add
push
jge
shr
mov
sub
jns
sub
push
jb
inc
or
xor
sar
jp
pop
pop
daa
and
mov
movs
push
lea
xlat
pop
and
pop
or
retf
and
call
mov
in
lods
add
mov
mov
jo
or
mov
sub
daa
out
(bad)
sub
dec
bound
jb
sbb
and
cmp
dec
mov
push
dec
push
retf
dec
jmp
mul
jne
mov
inc
mov
adc
ror
jmp
int
retf
sbb
mov
sbb
sbb
xchg
stos
dec
inc
mov
loop
(bad)
dec
test
jbe
int
inc
pop
pop
cmp
cmp
dec
scas
ja
and
popa
cmp
xchg
enter
stos
aaa
pop
and
aad
dec
mov
mov
imul
adc
push
bound
push
xor
mov
sbb
sbb
movs
cwde
je
cld
cmps
stos
jp
push
dec
cmp
dec
repnz
mov
jnp
movs
or
aad
mov
data16
lahf
call
sbb
pop
mov
dec
jg
jnp
ret
jge
lds
les
pop
(bad)
xlat
into
pop
cmc
lods
cmps
and
push
loopne
jae
ret
loope
jmp
sbb
dec
mov
imul
arpl
sti
stc
shl
and
ins
mov
imul
push
xlat
pop
lahf
cmp
mov
cli
aas
push
pop
and
int3
cmp
add
out
je
repnz
loope
rcl
(bad)
cmp
and
loop
xchg
and
rcl
(bad)
daa
and
in
(bad)
scas
jp
cli
pop
fld
push
mov
dec
push
sub
mov
ds
add
pop
out
adc
test
jmp
movs
mov
xchg
in
ds
and
xchg
pushf
pop
adc
mov
and
fmul
cmp
mov
adc
mov
sahf
or
sbb
fist
inc
xchg
(bad)
mov
(bad)
ins
out
fs
inc
push
mov
fld
inc
test
loope
mov
sbb
pop
and
loopne
add
(bad)
sub
jmp
xchg
repnz
(bad)
imul
iret
mov
mov
es
inc
jns
dec
rcl
test
ja
inc
test
sbb
or
xchg
mov
inc
and
sbb
push
mov
(bad)
adc
cld
and
mov
xor
mov
push
adc
imul
ret
ret
and
fistp
sar
mov
or
loopne
mov
out
ins
jp
dec
pop
or
xor
and
or
test
xor
loop
(bad)
push
mov
(bad)
fild
iret
xor
pop
jo
out
pop
jnp
jns
fstp
sub
xor
repz
dec
jmp
scas
fs
add
lahf
sbb
sbb
repnz
inc
int
cmp
daa
mov
nop
sbb
mov
pop
es
mov
loope
inc
xchg
jmp
and
push
or
arpl
sti
ja
add
test
imul
bound
scas
xor
xchg
fbstp
and
inc
add
mov
fsub
fadd
loop
pop
fidiv
and
sbb
jnp
outs
lods
hlt
stos
sbb
out
xchg
pop
call
mov
xchg
pop
pop
mov
retf
int3
sub
ror
(bad)
loopne
adc
mov
mov
ss
cmp
int3
mov
retf
jns
pop
push
pop
clc
push
movs
dec
jle
push
out
jl
pop
add
cmp
jle
call
dec
loop
jp
mov
cmp
sub
push
hlt
pop
mov
movs
(bad)
rcl
ins
inc
mov
cmc
scas
cs
inc
in
hlt
jb
xor
(bad)
xor
cdq
cmps
ret
retf
mov
sbb
cli
ret
adc
cmps
js
ror
scas
ss
and
add
clc
or
adc
mov
adc
jbe
mov
sbb
repz
xchg
out
and
les
or
pusha
dec
sbb
mov
add
push
setl
adc
pop
adc
sub
(bad)
iret
adc
mov
xchg
fcomp
push
lea
mov
push
sub
mov
stos
pusha
push
xor
int3
mov
xlat
in
pop
and
popf
retf
ficomp
dec
pop
out
lods
pop
xor
adc
in
inc
xchg
aad
sbb
adc
mov
mov
pusha
fsubr
inc
icebp
sub
out
mov
mov
sahf
jp
loopne
cmp
and
jne
pop
rcl
adc
out
push
pop
xlat
xlat
inc
addr16
(bad)
stc
jmp
call
mov
dec
js
push
(bad)
or
mov
inc
mov
mov
add
dec
jbe
fs
and
and
dec
nop
mov
cmp
lea
dec
cmp
int3
inc
packsswb
or
xchg
xchg
inc
pop
jno
repz
loope
test
fadd
and
push
sub
push
adc
in
lock
cmp
pop
fidivr
outs
inc
push
cdq
cmc
sub
lods
pop
lods
(bad)
sahf
sbb
xlat
sbb
jle
xchg
test
ins
and
inc
jl
lock
mov
movs
addr16
sub
fs
inc
push
mov
pop
cmp
mov
and
xor
pop
mov
sub
enter
imul
call
mov
mov
icebp
mov
les
dec
dec
loope
aaa
adc
mov
jne
pop
call
data16
rcl
in
daa
hlt
pop
xchg
add
es
dec
pop
(bad)
(bad)
shl
cdq
add
jbe
xchg
(bad)
test
inc
or
push
xchg
aas
mov
dec
xor
sbb
xchg
or
jle
mov
pop
stos
pop
push
or
or
movs
cmp
(bad)
div
pop
sbb
xor
lock
imul
js
jge
pop
ret
jl
inc
cli
inc
retf
repnz
mov
neg
and
addr16
push
(bad)
sbb
retf
sub
cmp
aad
scas
clc
loope
dec
cli
pop
cmp
out
mov
das
aam
arpl
xor
jmp
adc
pushf
pop
cmp
push
mov
movs
mov
jo
mov
lock
in
ret
mov
dec
pop
jae
ret
(bad)
xor
retf
push
inc
nop
aam
sub
mov
adc
xchg
pop
push
je
and
or
lock
sti
ja
sub
sub
mov
xor
or
dec
push
in
inc
push
pop
inc
mov
lds
push
call
aad
inc
rcl
pop
xor
in
jl
jle
lock
fadd
mov
aaa
jge
inc
cmp
xor
pushf
mov
jle
mov
inc
clc
(bad)
xlat
jb
lahf
push
js
in
pop
sbb
inc
(bad)
mov
xchg
xor
movs
das
rol
movs
adc
data16
mov
add
pop
dec
(bad)
and
sbb
inc
sub
and
jmp
lds
aas
mov
lds
xchg
sbb
hlt
into
push
shl
push
pop
rcr
mov
add
(bad)
enter
pusha
and
inc
mov
sbb
push
jo
push
mov
push
test
inc
loop
mov
aas
pop
cmp
inc
cwde
mov
inc
mov
inc
pop
pop
pop
or
jmp
rcl
xor
outs
in
xor
inc
jno
pop
aaa
pop
std
fiadd
fisttp
fidiv
loope
fsubr
xlat
add
jnp
in
and
test
bswap
dec
jmp
sub
adc
xchg
mov
mov
in
imul
and
mov
xor
mov
jp
in
mov
dec
mov
loopne
nop
jle
pop
mov
pop
and
in
cmp
sbb
cmp
jo
fild
add
ds
mov
sub
test
les
cmp
ror
mov
and
in
lods
xchg
leave
jae
ins
fidiv
fcmovnbe
ins
aad
movs
stos
pop
pusha
je
popa
in
outs
jmp
das
(bad)
adc
je
int
hlt
pop
out
ds
(bad)
mov
add
cdq
mov
adc
xchg
ins
ret
daa
sbb
jb
jmp
cli
ss
cli
mov
jle
dec
xchg
sbb
dec
mov
jg
pop
push
mov
xchg
dec
or
and
sub
sub
sub
iret
clc
shl
or
outs
pusha
scas
imul
xor
mov
nop
jno
fidiv
cmp
fnstsw
adc
xor
mov
ret
jo
lods
mov
lods
mov
pop
pop
(bad)
icebp
ret
out
(bad)
push
xor
push
jns
and
mov
mov
aad
adc
adc
dec
outs
mov
ss
cmp
add
test
add
out
lock
int3
sub
xor
mov
popa
or
dec
dec
popf
sbb
adc
inc
xchg
dec
xor
mov
imul
aad
mov
out
dec
pop
sub
jae
out
not
ror
cmp
popf
cmps
mov
xchg
lds
fdivr
jb
jge
jns
push
inc
test
xchg
xchg
aaa
adc
ret
or
dec
inc
inc
push
or
or
push
ja
fld
shr
xor
dec
add
sub
nop
cmp
cwde
int
pand
sub
or
mov
in
push
into
or
and
mov
mov
div
(bad)
test
or
(bad)
mov
hlt
loope
sbb
ror
lods
scas
jmp
call
shr
push
aam
(bad)
cmps
cmps
inc
sub
xchg
and
adc
cmc
mov
adc
pop
mov
add
pop
cli
and
jbe
cmps
(bad)
imul
shl
loope
xor
sub
add
cwde
pop
and
sti
sar
jb
pop
bound
mov
cmp
cld
push
fsubr
add
leave
stos
push
jl
and
idiv
repz
stos
out
sar
int
xor
mov
and
pop
or
push
jp
adc
mov
jmp
cli
cmp
and
add
mov
mov
mov
clc
mov
add
std
enter
outs
push
fisttp
enter
cld
and
mov
shl
or
mov
pop
pop
mov
in
push
jg
pop
stos
adc
adc
mov
inc
xchg
lods
gs
dec
movs
cs
sub
bound
mov
shl
or
or
cmc
jp
mov
xchg
cmp
rcl
jge
leave
movs
sbb
cs
cmp
pop
sub
icebp
jge
fldenv
mov
or
xchg
jbe
dec
cdq
and
and
jle
add
add
jae
inc
push
push
into
loopne
not
xor
xor
inc
mov
adc
jae
sub
ja
jecxz
add
fcomp
mov
cmp
(bad)
retf
and
idiv
aas
aad
push
fidiv
call
pop
inc
xor
cmps
rcr
in
xor
inc
cwde
addr16
imul
dec
sbb
lods
aad
push
ret
shl
push
push
xchg
call
pop
retf
daa
hlt
je
pop
std
pop
jbe
ins
and
call
bound
cdq
dec
cmp
in
pop
imul
dec
mov
aaa
xor
test
push
push
mov
(bad)
in
push
test
push
push
(bad)
cmp
ret
int3
inc
sub
xor
ja
mov
rcl
or
std
inc
cmps
or
aas
adc
push
addr16
dec
jg
(bad)
out
mov
pushf
popa
mov
mov
pop
or
add
inc
test
retf
enter
add
stos
jno
hlt
in
mov
rol
pop
dec
add
mov
push
add
into
loopne
pop
or
jns
push
and
dec
jecxz
inc
mov
cmps
jb
inc
stos
xchg
pop
pop
sub
fwait
add
adc
les
cmp
cmp
xlat
mov
pop
mov
jl
icebp
sbb
push
and
fs
xor
adc
test
dec
sti
cmc
inc
and
mov
icebp
adc
or
sahf
repz
xchg
enter
(bad)
std
mov
push
pop
jle
fs
lods
sbb
fisubr
test
popf
punpcklwd
push
shr
pop
mov
xchg
mov
in
cli
out
out
add
fisttp
call
mov
repz
mov
test
repnz
push
or
jmp
mov
jmp
adc
xchg
jmp
pop
mov
shl
push
dec
adc
mov
shl
inc
sbb
inc
arpl
mov
stc
dec
lods
es
or
out
in
mov
add
(bad)
cli
movs
mov
fs
cli
nop
test
test
mov
sub
jle
xor
xor
call
xchg
cli
js
imul
mov
arpl
cmp
add
push
or
xchg
movs
repz
cmp
stos
add
add
pop
and
test
jne
pusha
hlt
push
or
cmps
js
pop
nop
adc
push
mov
sub
loopne
or
stos
or
mov
lds
mov
sar
fstp
xchg
popa
lods
movs
and
outs
jl
jno
gs
jo
data16
sub
xor
sti
and
mov
push
rol
sbb
cmp
jnp
(bad)
fcomp
pop
push
xor
neg
cs
jg
jnp
xchg
in
repnz
adc
sub
pop
or
es
jbe
imul
sbb
frstor
xlat
in
cmps
fst
cmp
push
adc
sbb
test
pusha
icebp
ds
scas
push
cmp
repz
out
mov
mov
push
push
dec
scas
pop
pop
add
jbe
mov
loopne
add
test
pusha
jmp
std
scas
call
dec
jp
cli
ss
ja
jmp
dec
sbb
add
cmp
jb
jg
sti
stc
shl
xchg
ins
lock
fldcw
daa
arpl
(bad)
stc
gs
push
outs
in
ret
dec
ds
inc
leave
mov
test
pop
mov
(bad)
addr16
leave
out
xor
cmp
add
das
cdq
xor
daa
scas
pop
ins
xchg
sub
lods
jae
pop
xchg
adc
ins
sbb
rol
cmp
stos
cmps
mov
mov
inc
cmp
or
loope
sub
pop
mov
cld
mov
call
lahf
nop
or
or
sub
dec
push
outs
pop
loopne
out
call
out
cmc
fs
or
jge
adc
push
aam
sbb
ret
out
mov
or
idiv
inc
scas
ficomp
jae
fild
retf
sbb
inc
icebp
mov
or
sub
and
mov
cld
adc
outs
xchg
inc
cli
stc
cmp
stc
xor
ja
push
pop
adc
rcr
mov
jg
fild
fcomp
or
fist
push
pop
pop
hlt
pop
pop
push
sub
(bad)
lea
(bad)
cmp
jmp
xchg
adc
mov
int3
imul
int
loopne
dec
fsubr
ja
mov
or
mov
pop
push
fadd
test
pusha
es
and
stc
or
push
pop
idiv
or
dec
push
lea
mov
or
jnp
loopne
mov
adc
mov
and
in
xor
adc
ficom
push
std
cmp
mov
retf
add
aas
lahf
lods
cmp
test
out
mov
mov
aam
jecxz
push
ins
mov
jne
mov
inc
jnp
mov
imul
sbb
pop
std
ja
pop
gs
lods
mov
dec
push
mov
and
xchg
aaa
gs
test
icebp
sbb
add
or
sahf
mov
pop
mov
cdq
sub
push
ds
stos
les
xor
push
jno
mov
adc
icebp
pop
outs
cwde
add
lahf
pop
test
cmps
cmp
mov
aas
dec
jo
imul
outs
loopne
pop
fs
push
cwde
sbb
ret
sbb
test
mov
mov
mov
inc
inc
adc
mov
mov
jl
(bad)
aam
(bad)
adc
push
pop
jno
jb
nop
xchg
dec
xor
or
std
sub
pop
call
mov
jg
outs
aaa
adc
aas
call
mov
in
je
or
adc
pop
ja
xchg
(bad)
mov
adc
mov
mov
sbb
add
and
lds
(bad)
pop
(bad)
(bad)
daa
imul
fsubr
push
bound
sbb
scas
mov
ja
outs
in
mov
add
cmp
adc
div
sar
movs
or
aaa
add
movs
lahf
outs
push
push
(bad)
fistp
push
xlat
jle
aaa
stos
push
or
push
loopne
dec
xor
push
jns
and
retf
mov
ins
pusha
adc
jb
xor
mov
stos
inc
data16
sbb
retf
sub
pop
xchg
xchg
adc
and
arpl
mov
shr
das
jbe
jp
push
scas
or
and
jp
(bad)
push
jnp
iret
fmul
push
lods
push
mov
das
cmp
xor
or
lahf
cmps
sub
cmps
cli
push
sbb
mov
adc
jo
cmp
xor
adc
es
retf
(bad)
fidivr
cdq
movs
jno
js
mov
mov
xor
and
stos
cli
ins
mov
test
lods
and
jb
rcl
pusha
push
push
scas
push
cmc
and
adc
mov
adc
aad
dec
cmp
aas
(bad)
mov
jmp
ret
cmp
jns
sbb
icebp
mov
femms
pusha
hlt
pop
add
mov
vcmpps
adc
call
and
rol
or
into
xchg
and
sbb
jno
xchg
xor
lea
push
add
push
(bad)
pcmpeqb
aam
dec
xor
outs
in
ror
add
popf
mov
fisubr
xor
mov
sar
inc
jb
stos
popa
inc
pop
stos
out
hlt
rol
jne
mov
add
mov
popf
mov
xor
cld
mov
mov
(bad)
xchg
inc
and
scas
and
arpl
push
add
sbb
stos
mov
or
lock
lea
or
inc
push
sbb
dec
ret
add
add
or
adc
jmp
mov
mov
ja
or
push
(bad)
cmc
inc
cmps
push
push
jne
mov
repnz
cmp
(bad)
cmp
out
inc
sbb
popa
test
sahf
xor
rol
inc
jmp
outs
mov
mov
cmp
push
stos
pop
fcmovne
push
mov
jle
mov
es
out
fisttp
es
xlat
inc
out
xchg
rcl
mov
je
sub
xchg
dec
rol
cmp
cmp
addr16
inc
test
push
repnz
aas
mov
add
ror
scas
sub
test
xchg
inc
scas
or
aad
add
out
loope
hlt
ja
mov
fimul
adc
or
loop
in
sbb
shl
ret
fidivr
in
sti
adc
push
lock
jg
hlt
mov
out
pop
sub
fisttp
lea
idiv
les
in
xchg
aaa
xor
or
clc
mov
xchg
mov
jecxz
sub
out
or
outs
jle
fsubr
inc
fsub
mov
inc
iret
icebp
and
add
test
les
loop
and
aad
xor
(bad)
xlat
aaa
cmc
push
ret
pop
xchg
sbb
and
test
and
cmp
retf
push
nop
popf
pop
leave
pop
push
jle
dec
inc
lods
rcl
adc
push
pop
hlt
cmc
clc
repz
shl
push
les
bound
mov
idiv
jo
(bad)
int3
inc
popf
pop
aas
sub
or
stos
addr16
jmp
fisttp
pop
xor
test
arpl
(bad)
jmp
push
ja
test
inc
rcl
stos
sbb
dec
push
mov
fs
adc
aam
inc
and
mov
retf
test
add
adc
scas
jns
stos
scas
sbb
add
nop
test
mov
popf
fstp
test
out
ret
adc
rcl
adc
int3
mov
mov
cmp
pop
mov
or
test
and
and
mov
and
fwait
jmp
(bad)
jnp
ror
mov
fldenv
adc
push
jle
xchg
inc
std
push
aaa
inc
cmp
adc
cmp
adc
sahf
mov
or
iret
push
sahf
lds
cmp
inc
jb
and
pop
outs
cmp
stos
mov
outs
addr16
fisub
or
push
(bad)
jns
jg
sub
mov
adc
movs
push
mov
dec
and
retf
out
fisubr
push
inc
pop
fild
jg
sbb
adc
fist
mov
or
add
jne
jo
test
repnz
retf
test
and
retf
int3
xchg
xchg
jnp
stos
stos
sbb
cmps
mov
mov
sahf
sbb
mov
dec
inc
aaa
arpl
aam
(bad)
xor
lea
mov
cmp
jl
in
cmp
aam
cmp
lahf
jl
pop
push
mov
std
fld
jl
gs
add
xchg
scas
sbb
mov
mov
test
lds
loope
loopne
iret
icebp
(bad)
sub
sbb
ins
out
adc
mov
pusha
aam
stc
or
stos
mov
fsubr
mov
cmp
adc
dec
inc
(bad)
stc
vmovmskps
inc
icebp
inc
sub
xchg
pop
mov
push
lods
inc
pushf
xchg
out
pop
(bad)
jnp
pop
cmp
jbe
imul
xlat
push
stos
add
push
jle
cmp
mov
sub
fidiv
jmp
or
pop
mov
adc
lock
icebp
sub
xor
cmp
std
imul
ret
push
outs
jnp
xchg
or
adc
js
dec
test
inc
ret
repnz
mov
and
lahf
add
ss
mul
lds
pop
add
stc
and
test
pop
xchg
push
cmc
imul
sbb
push
push
movs
mov
pop
mov
add
out
push
out
or
rol
jecxz
adc
test
inc
mov
inc
adc
push
pop
mov
adc
movs
icebp
pop
ins
xor
(bad)
fbld
out
or
pop
pusha
and
xlat
fdivp
and
mov
inc
fwait
(bad)
pushf
push
adc
and
xor
(bad)
rcr
setae
(bad)
jmp
ret
mov
pop
loopne
mov
sbb
cmp
stc
push
imul
in
mov
stos
in
aaa
int
jb
arpl
mov
mov
ret
cmp
adc
shl
in
aaa
pop
retf
mov
inc
lds
sub
adc
das
retf
push
mov
out
jnp
(bad)
ins
cdq
mov
add
inc
icebp
push
lahf
cmps
(bad)
imul
cmp
jg
inc
iret
imul
dec
pop
movs
mov
retw
mov
js
jmp
cli
jns
(bad)
sub
push
sub
jl
cmps
add
shrd
push
stos
imul
push
add
pop
mov
(bad)
sbb
mov
int3
sub
ins
sub
cld
cmc
loope
call
add
icebp
fwait
jmp
or
cmc
mov
sub
pop
shl
or
or
dec
dec
popf
je
sub
movs
fldenv
in
fstp
pop
call
jl
scas
(bad)
ins
and
sahf
sub
outs
push
lds
inc
cdq
pusha
lods
mov
fsub
ins
push
daa
pushf
vmread
jno
mov
jns
sbb
test
cmps
adc
std
inc
xchg
js
repnz
fiadd
mov
sbb
push
fwait
mov
ret
dec
sbb
push
out
xchg
or
repnz
mov
outs
sub
jnp
jp
(bad)
scas
jnp
sbb
xor
add
popa
stc
cmp
fs
cmps
sub
icebp
xlat
aas
hlt
int3
cmp
cmp
fwait
pop
xchg
(bad)
retf
add
xchg
test
cwde
aad
(bad)
into
mov
dec
aaa
mov
jecxz
rcl
cli
dec
sbb
mov
pop
cwde
cli
or
bound
retf
pop
and
pop
ret
outs
rcl
ret
xor
xor
out
jg
and
dec
imul
add
mov
jae
fdiv
sub
or
xchg
pusha
add
loope
loope
scas
stc
mov
mov
cmc
cwde
enter
inc
shufps
enter
and
mov
lea
mov
jae
sar
ficom
fwait
sti
push
stc
aaa
cmps
or
pop
adc
sbb
pop
dec
(bad)
nop
cli
les
mov
push
xor
push
std
daa
aaa
jg
jnp
sub
stos
cwde
popf
jno
ret
adc
mov
aad
arpl
(bad)
(bad)
pop
in
lods
and
rep
mov
jecxz
sub
dec
sub
rol
jnp
fs
das
cmc
push
pop
test
leave
ss
enter
push
and
nop
rcr
rcl
cmps
xchg
ret
int
mov
sub
or
xchg
(bad)
das
int
cmc
or
popf
mov
push
(bad)
pop
pop
(bad)
inc
leave
mov
loopne
jmp
add
inc
push
mov
movs
stc
stos
std
add
lods
(bad)
jg
sub
inc
out
xchg
aam
cdq
pop
pop
mov
adc
pop
sbb
jle
lock
cmp
mov
shl
dec
jle
in
jmp
fldcw
retf
or
test
sub
push
xchg
loope
clc
out
movs
es
in
adc
repz
(bad)
mov
mov
(bad)
stos
bound
xchg
mov
mov
into
rsqrtps
xchg
dec
or
pop
and
ffree
pusha
mov
pop
mov
pop
int
pushf
popf
pusha
aam
cld
mov
sbb
(bad)
pushf
mov
fdivr
mov
fcomp
push
ss
pop
mov
lods
out
mov
inc
push
mov
test
xchg
lock
push
cmp
sub
cld
inc
push
pop
push
jb
xchg
sbb
jmp
dec
fst
or
jns
punpcklbw
int
cmp
add
mov
aas
jmp
xchg
sub
lahf
xor
icebp
jne
and
stos
inc
cs
in
push
cmp
lods
cmp
mov
sub
mov
xchg
mov
imul
das
mov
add
push
inc
scas
in
mov
dec
mov
adc
out
xchg
sbb
gs
stos
fisttp
push
push
push
jno
sar
xchg
push
inc
cmp
push
and
clc
dec
xchg
ret
xor
ror
fild
js
xor
cmp
dec
or
inc
mov
xchg
imul
in
jb
sbb
cmc
scas
popa
jmp
stc
mov
loope
xor
mov
inc
dec
rcr
lods
sbb
mov
out
jl
sbb
pop
loope
jmp
out
and
push
shl
ret
jmp
psubb
pop
adc
stos
scas
and
cwde
enter
push
outs
inc
fnsave
adc
sub
and
(bad)
sti
push
add
(bad)
pop
xor
dec
push
scas
xor
fild
aam
lods
mov
add
xchg
mov
inc
push
add
paddw
mov
push
xchg
mov
jo
xchg
push
loop
xchg
dec
xchg
jmp
clc
(bad)
mov
mov
adc
push
cdq
ja
cmp
sub
jmp
pop
outs
xchg
sbb
cld
dec
mov
pop
out
or
retf
ret
retf
cmp
mov
clc
mov
or
rol
leave
sbb
adc
mov
or
cmps
jmp
push
es
je
movs
fwait
mov
and
and
adc
sub
mov
xor
test
fcmovb
outs
pop
cmp
adc
sti
aam
loop
sub
push
or
in
dec
shl
daa
je
pop
out
(bad)
in
add
sbb
inc
jp
sti
mov
sub
rcr
retf
add
push
cwde
ds
sti
and
xchg
sbb
jp
stos
out
pop
add
add
adc
shl
not
ficom
pop
out
xchg
mov
in
cmps
shl
movs
xchg
xchg
int
lods
push
push
fcmovnbe
jmp
push
mov
and
mov
xchg
retf
lds
xor
mov
inc
bound
jbe
adc
sbb
dec
pop
in
stos
hlt
in
sub
(bad)
fbld
ucomiss
fistp
(bad)
cmp
xchg
push
pop
out
mov
out
cmp
sbb
sbb
bnd
jg
cli
mov
mov
enter
xchg
mov
fwait
mov
mov
imul
pop
dec
punpckhbw
push
popa
ss
dec
mov
jbe
inc
jg
or
les
mov
and
or
push
sbb
fcmovu
cwde
sub
in
pop
sub
repz
int
or
inc
leave
int
loope
test
xor
fs
and
mov
mov
ror
scas
popf
aad
pusha
dec
cmp
mov
dec
mov
mov
aas
mov
adc
pop
out
push
sbb
call
dec
mov
not
push
loop
mov
mov
sbb
cdq
scas
std
loop
lods
dec
arpl
xor
mov
mov
imul
jbe
mov
aam
lahf
mov
dec
xor
int3
cmp
cwde
scas
sar
aam
dec
sub
push
push
jmp
push
imul
xchg
daa
jmp
mov
adc
lods
and
cmp
std
add
pop
scas
xchg
mov
stos
pop
enter
push
cwde
mov
xchg
adc
mov
xchg
push
iret
push
adc
inc
in
mov
jg
jecxz
dec
or
mov
lahf
in
loopne
std
inc
mov
adc
cwde
out
test
test
cmp
outs
sub
je
cld
mov
xlat
invd
ds
test
mul
jno
mov
adc
inc
mov
lahf
pushf
popf
aam
out
ja
clc
fcomp
retf
rcr
cld
test
cmp
cmp
xor
les
sub
mov
pusha
xor
adc
xchg
cdq
mov
inc
inc
addr16
cmove
push
mov
stos
fiadd
jmp
fcomp
xchg
inc
sub
aad
inc
sub
mov
clc
or
shr
daa
xor
mov
xchg
ja
add
pop
and
lea
scas
enter
push
or
xchg
cwde
sub
inc
enter
sub
pop
push
inc
imul
add
sbb
sub
leave
in
adc
(bad)
add
push
adc
icebp
mov
aas
inc
xor
loop
loop
add
out
pop
mov
call
pop
xchg
mov
mov
jecxz
(bad)
push
ins
fisttp
sub
or
adc
jae
dec
(bad)
mov
(bad)
sub
cmp
aam
call
inc
push
retf
push
lds
not
mov
mov
fnstsw
pop
pop
stc
jne
dec
xchg
daa
les
(bad)
pop
xor
mov
cs
sub
and
mov
inc
dec
sbb
mov
imul
or
mov
mov
popf
les
cmp
aaa
lods
sbb
xchg
sti
dec
test
and
jl
imul
fidivr
add
sbb
(bad)
dec
push
scas
xchg
stos
and
cmc
pusha
and
dec
mov
ror
jge
inc
and
test
loope
pusha
jno
jo
sahf
pop
es
repnz
(bad)
cs
adc
pop
push
adc
icebp
dec
push
fcmovb
jno
ja
fdivr
iret
inc
pushf
sbb
push
fsub
mov
fbstp
cmps
sbb
pop
rcr
pop
inc
iret
xor
fmul
dec
aaa
sbb
fidivr
push
mov
je
xchg
push
add
cmp
fmul
sub
push
aaa
scas
cmp
mov
setns
in
in
jmp
mov
sub
or
push
call
dec
jge
dec
mov
mov
mov
push
and
pop
push
lock
aad
fs
jmp
fidiv
popa
cmp
js
out
int3
loope
or
mov
scas
jb
imul
sbb
dec
add
sti
pop
aam
mov
mov
add
xchg
sbb
inc
neg
sub
sahf
out
(bad)
push
push
mov
test
jns
dec
in
mov
sbb
pop
imul
ins
lods
(bad)
(bad)
enter
dec
aas
(bad)
fstp
mov
and
add
push
loopne
push
pop
pop
jmp
pop
fwait
out
jae
out
in
mov
gs
das
or
imul
or
push
mov
cmp
pop
retf
and
pop
fsub
cmp
stos
lods
in
shl
mov
in
add
(bad)
cmp
jns
iret
into
in
(bad)
out
cmp
xor
push
in
std
(bad)
xor
dec
cmps
test
xor
ja
inc
xchg
jbe
cmp
xor
dec
dec
in
push
rcl
repnz
or
jo
push
call
ins
les
nop
out
dec
jl
push
es
inc
adc
retfw
dec
popf
mov
sahf
dec
sbb
xor
sbb
pop
ins
pop
test
xor
retf
movs
cld
sbb
outs
stc
mov
add
mov
cmp
and
div
mov
fild
scas
cs
pop
pop
int
mov
scas
es
cmps
int
inc
mov
fidivr
push
xchg
inc
pop
enter
rcr
lods
dec
stos
rcl
push
pop
fild
pop
rcr
test
mov
push
inc
cwde
mov
or
cli
and
(bad)
leave
mov
adc
je
mov
mov
aaa
(bad)
jecxz
pop
inc
dec
mov
mov
popf
call
pop
jns
dec
int
pop
stos
sbb
pop
lea
jg
pop
das
push
sbb
push
xor
jb
cdq
loop
sbb
jecxz
in
pop
pop
push
push
mov
adc
imul
jle
shl
aaa
pop
fldenv
dec
stos
and
fwait
hlt
xchg
mov
pop
mov
jecxz
cdq
imul
cli
jl
lods
dec
mov
(bad)
or
(bad)
stos
mov
sbb
fnstenv
mov
dec
ret
adc
jne
mov
add
and
xor
inc
xor
data16
dec
sub
push
mov
sub
fwait
fwait
mov
push
inc
mov
sbb
ds
jne
jmp
inc
push
inc
mov
aam
mov
inc
js
cmp
out
xor
xchg
add
cdq
hlt
xor
imul
pop
mov
push
out
or
add
addr16
scas
xor
daa
out
mov
pusha
aam
icebp
fcomi
mov
push
sahf
mov
stos
fisub
enter
jae
test
or
imul
pavgb
test
repnz
cmp
fs
test
mov
jl
mov
jg
dec
pop
pop
pop
lods
inc
xor
icebp
in
out
mov
stos
adc
test
(bad)
sbb
ds
lods
cmp
rcl
xor
mov
out
fs
std
push
shl
mov
jl
pop
sub
jo
ja
cmc
or
sub
and
push
cmp
sub
popf
sub
jo
adc
data16
int
push
lods
cmps
cwde
mov
dec
pop
push
test
fdiv
sbb
or
fild
jl
cmp
mov
push
scas
adc
adc
loop
inc
lock
(bad)
out
pop
pop
in
call
or
push
fs
inc
sub
sbb
jnp
or
mov
loopne
not
ins
(bad)
(bad)
mov
mov
push
lea
les
adc
ds
cmps
push
lea
adc
cmp
out
inc
aad
lods
xchg
sbb
ja
and
fild
or
dec
rcl
out
in
rol
dec
add
je
imul
and
fimul
jae
sub
inc
nop
shr
or
xor
(bad)
dec
nop
inc
or
push
pop
in
ins
mov
pop
or
push
out
mov
push
sar
adc
iret
inc
pop
add
or
jge
pop
mov
movs
cmc
shr
and
pusha
cld
popa
lea
jp
mov
mov
pop
mov
xchg
mov
into
fsub
fstp
das
loope
loopne
push
pop
jnp
lea
push
push
repnz
ss
sbb
cs
cmp
adc
sbb
iret
push
cmps
loopne
push
jb
jp
ret
lahf
out
mov
push
imul
ins
call
push
and
xchg
outs
mov
(bad)
(bad)
jp
out
pop
push
imul
jbe
ja
inc
adc
out
xor
iret
inc
imul
sbb
out
retf
jg
inc
xchg
adc
ins
cwde
loop
shr
adc
push
cmp
(bad)
fisubr
cmp
pop
and
int
test
xchg
call
or
aaa
lods
test
xchg
add
fs
les
fwait
in
add
iret
jp
(bad)
push
sbb
loop
inc
mov
fcmovnu
fild
icebp
fdiv
dec
sbb
test
mov
or
pop
ds
mov
imul
retf
nop
and
repz
xchg
test
pusha
sbb
push
js
xchg
push
push
xchg
add
cmp
jp
enter
add
or
in
cs
add
and
pop
xchg
stos
(bad)
adc
pop
xchg
ret
in
and
push
mov
sbb
stos
mov
fs
mov
xchg
inc
lods
sbb
retf
mov
mov
inc
and
(bad)
repnz
mov
dec
out
push
mov
fs
cmps
or
gs
mov
and
mov
frstpm(287
jle
push
mov
sbb
jge
cmp
cmps
dec
shl
xor
int3
dec
xlat
pop
mov
jbe
mov
ret
jns
jns
nop
sub
inc
out
cmps
or
add
push
lea
lea
fucomip
sub
add
fidiv
add
fmul
cmp
aam
shl
call
fist
fwait
outs
add
pop
jnp
and
mov
int3
jo
loop
fwait
sbb
mov
push
xor
cs
(bad)
xchg
arpl
jmp
pop
or
and
pop
push
push
shl
mov
repnz
aas
leave
adc
imul
and
in
mov
daa
xor
cmp
out
xchg
dec
rcr
push
inc
loop
jg
sahf
shl
in
add
cmp
add
mov
popf
jge
or
xchg
dec
dec
cmp
les
ja
add
bound
and
bound
in
pop
push
cmp
adc
sti
outs
leave
mov
loop
pop
pop
dec
es
inc
fist
cmp
jge
pusha
mov
mul
mov
imul
loop
mov
dec
or
jge
cmp
dec
jae
fld
(bad)
mov
test
sbb
or
shl
adc
leave
ret
mov
aaa
data16
mov
jns
ins
pop
fisub
orps
cmp
or
ret
push
test
mov
fisub
lock
cmp
retf
cmps
cli
jge
jb
js
mov
push
or
nop
sbb
jle
jbe
scas
pop
jl
dec
stc
sar
dec
fdivr
fs
fidivr
jecxz
fimul
fld
jb
or
rcr
mov
pop
push
sub
leave
adc
mov
push
xor
mov
add
and
xchg
sbb
cmps
iret
mov
sub
mov
lahf
jle
sub
cmp
or
jne
xchg
enter
dec
cmp
mov
cmp
mov
jmp
jmp
add
push
adc
jbe
sbb
cmp
dec
test
jnp
pop
add
mov
or
mov
pop
jo
jns
retf
leave
clc
sbb
dec
inc
cwde
mov
mov
int
(bad)
jno
xchg
out
(bad)
int
sub
xchg
scas
repnz
pop
ds
fsub
sbb
out
cmps
movs
or
mov
mov
pop
push
cmp
ret
sub
imul
aas
movs
shl
cdq
lods
inc
out
pop
fs
cmp
and
lea
retf
pusha
out
inc
adc
push
fidiv
jmp
xchg
cmp
adc
push
xor
mov
test
je
imul
inc
test
jge
not
push
xor
cmps
loop
(bad)
pop
fnstcw
jae
jmp
repnz
rol
inc
popf
lea
sar
inc
pop
inc
pop
(bad)
jmp
test
scas
adc
pop
or
div
sub
add
add
dec
pop
inc
xor
jae
xchg
and
scas
sbb
aad
test
jle
dec
add
xor
data16
mov
push
xchg
cmc
jmp
(bad)
adc
mov
test
and
sbb
movs
out
xor
inc
mov
mov
in
cmp
adc
lds
fdiv
adc
cmc
jb
mov
adc
pushf
sbb
pop
jmp
xlat
mov
aad
jnp
shl
out
pop
adc
sbb
lea
add
jp
mov
mov
dec
popa
fadd
scas
inc
adc
das
and
int3
loopne
add
jbe
and
scas
inc
sbb
retf
dec
push
scas
outs
sti
js
dec
inc
xchg
adc
add
add
dec
mov
movs
pop
push
in
fisttp
xor
xchg
imul
mov
leave
inc
jb
adc
lds
hlt
sub
call
mov
xchg
dec
mov
add
enter
fld
mov
loopne
test
mov
addr16
jecxz
and
push
movs
sahf
jb
push
mov
clc
in
ins
pop
je
cbw
into
rcl
(bad)
fstp
jno
into
pop
shl
repz
xchg
jae
mov
dec
pop
jo
ret
inc
inc
inc
cmp
sub
pusha
stc
mov
int3
neg
dec
fcom
int
cmp
idiv
adc
(bad)
imul
cmp
fistp
ds
push
jae
jecxz
scas
sub
push
xchg
int
in
jno
or
jns
test
mov
movs
xor
loop
inc
out
jle
push
fsubr
call
daa
or
push
cmp
call
inc
mov
outs
dec
or
add
add
xor
out
mov
les
cli
xlat
leave
stc
(bad)
push
cmps
xchg
cli
xchg
cmps
adc
and
popf
push
iret
sti
cmc
movs
mov
ins
xor
xor
ds
jb
retf
addr16
xchg
pop
and
in
xor
pop
xchg
cs
call
dec
sub
jecxz
pop
mov
ret
mov
mov
pop
jmp
jns
not
xor
cmp
loopne
adc
and
sbb
xchg
in
xor
push
dec
mov
adc
inc
xchg
mov
jge
jnp
pop
or
adc
aad
jmp
ret
rcl
or
lods
mov
or
cwde
and
in
das
push
cld
push
mul
pop
inc
xor
add
pop
in
jmp
mov
jecxz
mov
mov
sub
mul
sub
stos
cmps
inc
push
adc
mov
sbb
test
movs
xchg
mov
loope
ins
xor
mov
xor
cld
enter
add
add
in
in
pop
sbb
cld
xchg
test
jno
pop
and
sub
sub
xor
cmp
xlat
test
bound
mov
addr16
sbb
retf
out
mov
jg
ins
lods
dec
div
xchg
ret
sahf
fwait
pop
inc
cs
push
mov
or
jl
add
mov
jmp
cmp
je
rcl
shl
int3
ins
jb
out
pop
fidiv
lods
js
retf
repnz
sbb
ja
call
rol
xrelease
mov
loop
lea
fistp
adc
out
(bad)
jbe
add
test
cmp
push
pop
mov
lea
addr16
popa
std
in
icebp
popa
jns
jmp
rol
pushf
call
push
push
jl
dec
aam
mov
gs
xchg
enter
cmps
fs
scas
mov
es
and
div
pop
(bad)
cmps
jg
add
(bad)
call
pop
popf
pop
sub
movs
out
pop
mov
data16
adc
dec
sahf
movs
or
pop
lods
mov
xor
jae
ss
mov
cli
pop
xchg
lahf
add
ins
cld
mov
sub
dec
out
or
xor
stos
jge
and
ret
addr16
dec
jle
or
pop
jnp
jmp
out
push
pop
lea
cmp
lods
je
fs
bound
cli
or
cmc
call
jg
and
das
popf
(bad)
cwde
xor
mov
pop
or
inc
pop
mov
cmp
rol
sbb
outs
add
enter
icebp
cmps
pop
outs
push
test
push
sub
jp
iret
jnp
test
sahf
jo
in
push
xchg
in
push
fsub
jb
cmc
push
ret
test
imul
sbb
das
fistp
ret
jecxz
xchg
sub
jbe
es
pop
rcr
jl
adc
push
repz
cmc
daa
inc
fcom
paddsw
ficomp
xor
add
ja
enter
arpl
mov
add
and
(bad)
outs
pop
mov
mov
out
adc
test
popf
es
push
nop
es
mov
test
push
test
add
xchg
rcr
(bad)
cmp
push
jg
bound
test
mov
out
push
mov
jmp
test
or
aad
out
mov
(bad)
sub
and
std
mov
sub
int
lock
scas
xor
dec
sub
push
shr
push
jmp
retf
std
or
movs
pushf
imul
jno
(bad)
cld
pop
inc
cld
mov
test
inc
mov
std
push
sahf
or
aas
movs
test
addr16
sbb
xchg
int
adc
fbld
dec
into
in
imul
mov
jge
ins
add
ret
(bad)
mov
in
bound
call
push
sti
mov
cmp
jns
mov
add
adc
dec
lods
or
ss
sub
in
jbe
sub
mov
xchg
pop
aaa
lds
xchg
xchg
pop
sar
cs
bnd
jno
and
mov
mov
rcl
mov
add
sub
lods
mov
(bad)
lahf
cmp
sub
hlt
add
inc
daa
jmp
sbb
adc
mov
mov
lea
movs
lahf
jo
repnz
push
jp
jmp
mov
out
push
push
cs
lahf
jle
push
jl
push
mov
cmp
jno
ror
int3
fidivr
push
shl
popw
ja
jno
mov
data16
aam
and
retf
xor
pop
xchg
cli
xlat
pusha
icebp
or
imul
movs
mov
pop
and
fidivr
popf
(bad)
mov
inc
cdq
xor
push
mov
adc
cmp
aad
cmc
sub
fcom
push
and
in
popf
xchg
xchg
bound
inc
shl
retf
ret
mov
sti
xchg
icebp
jae
rcl
jae
push
lods
sbb
ins
loop
aad
xlat
data16
mov
dec
and
in
cmp
fist
loop
lea
mov
test
iret
inc
sbb
sti
xchg
xor
scas
sar
popa
stos
mov
test
xchg
test
bound
xor
je
ja
test
and
ja
xchg
cmp
xor
and
mov
ja
xor
add
ins
in
jns
mov
addr16
dec
stos
(bad)
fist
inc
retf
jle
or
(bad)
ins
aas
fstp
sub
cmp
xlat
gs
sbb
mov
and
lahf
pop
scas
cmp
mov
jae
ss
scas
or
mov
scas
push
call
outs
cmc
jl
and
sbb
and
(bad)
aad
cmps
xchg
cwde
stos
clc
dec
mov
cmp
add
xor
sbb
adc
lods
sub
add
loopne
or
and
mov
or
push
push
push
adc
push
xchg
mov
stc
das
cmps
pusha
mov
adc
(bad)
sahf
cmp
imul
jno
pushf
jge
or
cs
push
cmps
(bad)
dec
sub
sbb
cmp
jge
push
pop
(bad)
ficomp
xor
shl
cwde
inc
jmp
inc
jecxz
mov
in
mov
mov
sub
ss
(bad)
adc
push
fs
push
stos
in
or
jecxz
pop
and
pop
pop
sub
cmp
xlat
mov
sub
cmp
popa
loop
mov
push
inc
pop
jno
loopne
call
cli
icebp
(bad)
fnstenv
xchg
(bad)
loopne
mov
cmovbe
test
inc
(bad)
push
inc
rol
int3
mov
(bad)
mov
dec
enter
jmp
out
out
aas
jge
adc
xor
pusha
or
jmp
cdq
mov
test
sti
daa
stc
loop
shr
xchg
scas
repnz
ja
shl
xor
cmp
or
out
add
jnp
lds
inc
test
add
call
ins
aad
mov
cmps
int3
sub
pop
push
in
pop
push
xchg
(bad)
push
xchg
cs
push
xor
movs
jmp
dec
xor
sub
mov
push
mov
icebp
cmp
or
jmp
in
push
out
sbb
lods
inc
mov
outs
outs
je
mov
add
(bad)
sub
or
and
and
mov
neg
arpl
mov
fld
not
aad
lock
push
mov
call
inc
ficomp
ret
push
cmp
or
pop
adc
es
mov
lock
addr16
pop
out
std
repz
pop
(bad)
xlat
retf
push
xchg
in
push
sub
cmp
imul
or
movs
iret
jecxz
jl
lahf
fild
out
pop
xor
push
rcl
hlt
outs
xchg
js
push
ja
sar
dec
cdq
mov
int
aas
mov
lahf
pop
mov
fiadd
test
and
jae
lea
repnz
js
or
cmc
jnp
jne
mov
push
inc
cwde
pop
mov
ror
movs
daa
xchg
cld
hlt
retf
and
into
or
add
mov
sub
imul
sahf
and
jecxz
jge
ret
jo
dec
gs
loop
in
dec
pop
xlat
dec
iret
mov
sti
in
xor
cs
iret
dec
cmp
jle
jae
adc
dec
shr
sar
jnp
(bad)
iret
pextrw
sbb
(bad)
mov
xchg
sub
dec
inc
xor
xor
sar
mov
pop
mov
adc
adc
push
inc
sbb
inc
cmc
jg
or
js
xchg
xchg
jle
nop
int
loop
fimul
cmp
loop
lock
jmp
mov
js
sbb
pushf
lahf
xor
or
lahf
pmuludq
mov
stc
rcr
xchg
cwde
(bad)
out
pop
sbb
lahf
push
retf
cmp
push
rcr
or
jnp
adc
test
(bad)
neg
cmps
ja
mov
sbb
mov
jl
sbb
bound
pop
lods
dec
in
add
and
cli
mov
xor
xchg
mov
ja
into
xlat
pop
xlat
out
adc
loope
xchg
aam
or
sub
push
(bad)
jb
mov
push
and
dec
dec
(bad)
pop
test
add
push
cmps
retf
rol
lea
pop
loop
das
ud1
mov
or
sub
fistp
jbe
mov
je
jmp
or
movs
mov
xor
aam
sbb
pop
sub
fadd
inc
cmp
or
lahf
retf
ds
in
icebp
sub
in
and
push
imul
mov
stos
xor
mov
adc
push
jne
lock
dec
push
shl
or
adc
dec
iret
out
or
sti
xchg
outs
rcl
mov
push
cmp
repz
repnz
pop
fsubr
sbb
cmc
dec
stos
pop
ficom
pop
inc
xchg
adc
dec
pop
pop
cli
(bad)
or
(bad)
or
ss
sbb
push
sub
xor
jne
(bad)
outs
dec
pop
(bad)
lods
add
repnz
ror
push
retf
fwait
rep
mov
pop
mov
ret
loop
cmps
adc
retf
pop
sub
in
adc
out
or
cmp
inc
imul
or
push
fwait
xchg
ss
jmp
push
fild
push
mov
rcr
mov
rcl
add
dec
and
retf
mov
mov
jbe
js
jge
test
dec
push
test
push
dec
fild
data16
mov
(bad)
call
test
and
daa
sub
cmp
mov
(bad)
mov
imul
pop
sub
aaa
dec
pop
push
mov
mov
daa
sbb
(bad)
icebp
call
sub
xchg
jae
jae
xor
push
mov
mov
mov
imul
in
pop
or
sbb
adc
enter
inc
add
pop
dec
and
mov
loop
xor
xchg
(bad)
xchg
cmp
fwait
jbe
movs
adc
out
xchg
stos
or
iret
test
and
mov
out
xchg
and
loop
adc
push
add
mov
(bad)
repz
push
pop
mov
lds
js
add
fwait
das
stos
lods
jb
(bad)
mov
mov
sub
mov
push
sub
sbb
retf
cld
mov
xor
mov
jmp
pusha
fwait
sbb
ss
arpl
pop
rol
loopne
mov
mov
push
cmc
push
je
mov
arpl
cmps
ror
call
pusha
mov
add
jmp
cs
sub
iret
add
cdq
addr16
ds
(bad)
loop
test
push
adc
movs
les
or
cmc
push
sbb
adc
dec
sbb
xor
mov
dec
pusha
cmps
pop
cdq
jne
mov
mov
call
leave
ret
xor
loope
pop
xchg
cmps
repnz
iret
shr
out
cmp
jbe
lods
repz
push
push
adc
aam
or
jmp
jl
add
jmp
sbb
clc
and
(bad)
fcomp
repnz
xor
cmp
(bad)
jnp
loopne
repnz
push
mov
xchg
(bad)
scas
ds
sbb
ja
sar
mov
mov
ror
test
scas
mov
inc
sbb
gs
mov
(bad)
xor
loope
pop
js
and
mov
outs
dec
movs
add
shl
scas
jae
bound
lods
sbb
hlt
stos
add
and
js
pop
add
in
arpl
xor
sbb
add
mov
loopne
inc
(bad)
ss
ins
movs
ret
cmp
dec
dec
dec
sub
push
jp
repnz
xchg
pop
loope
or
loope
stc
pop
push
and
mov
adc
idiv
mov
or
hlt
add
xchg
into
mov
push
dec
cli
mov
and
js
or
sar
push
mov
ins
int
jp
ror
cli
jl
out
push
aad
inc
inc
fsubr
stc
cmp
adc
icebp
mov
pop
std
xor
dec
xchg
out
push
ja
push
out
inc
sbb
mov
pop
add
sbb
int3
push
lds
sub
rcr
or
mov
retf
adc
mov
mov
loopne
(bad)
xor
and
fs
shl
jp
aaa
and
ss
mov
ins
aas
int
mov
sbb
call
call
out
mov
pop
mov
ficom
and
fsub
mov
mov
push
pop
fwait
daa
jno
push
cmovo
mov
mov
push
aam
cmp
lock
enter
out
jmp
cmovbe
cmp
out
cmc
add
dec
repnz
int
call
mov
in
push
or
pop
mov
mov
push
jnp
iret
sbb
jmp
test
push
add
add
mov
jno
cmps
lds
inc
fwait
in
(bad)
neg
int3
imul
cmps
call
aaa
mov
test
ss
push
(bad)
repnz
cmc
jl
dec
and
rcl
add
(bad)
sub
mov
ins
out
pop
ins
sub
xor
pop
dec
xor
and
ds
fnsave
pop
adc
mov
iret
and
out
in
xor
retf
movs
push
xor
xlat
sub
and
or
scas
xor
jo
mov
inc
jne
pop
psubsw
stos
sar
cs
outs
in
not
pop
test
xchg
inc
dec
leave
addr16
push
iret
jne
std
ss
shl
jmp
sub
xor
ins
cmps
inc
jb
xchg
cmps
retf
pop
adc
inc
popa
stos
daa
adc
(bad)
adc
div
adc
add
test
xchg
jmp
ror
mov
and
(bad)
pop
push
cmp
inc
mov
scas
in
cmp
bt
out
push
sbb
fs
repz
mov
shr
mov
adc
cmp
jl
jecxz
mov
jmp
cdq
(bad)
shl
xchg
jg
sub
fisttp
nop
repnz
add
test
sti
popf
push
jmp
lahf
xor
das
push
inc
inc
or
nop
xor
inc
sub
jmp
jbe
mov
cmp
mov
movs
push
inc
in
pop
push
(bad)
cmp
jl
bound
not
inc
sub
ret
add
inc
add
inc
mov
(bad)
mov
shl
(bad)
les
retf
sbb
adc
jnp
std
jp
out
sub
lahf
or
mov
(bad)
jecxz
inc
mov
fild
fwait
test
dec
xchg
xor
ds
mov
shl
lea
lods
adc
(bad)
out
mov
push
push
mov
in
ret
mov
sbb
fisttp
sub
jp
std
push
test
mov
(bad)
cmp
pop
adc
shl
jno
jnp
fidiv
test
mov
mov
sar
data16
sbb
mov
imul
add
mov
aam
push
cdq
add
fldenv
jno
jbe
popa
pop
mov
pop
mov
test
cs
popa
pop
sbb
jp
gs
cmp
out
sub
jg
cs
xchg
push
loopne
pavgw
jmp
cli
add
pop
cli
and
push
adc
loop
inc
pop
inc
lea
je
loop
(bad)
cli
les
aas
sub
xor
inc
inc
sahf
mov
mov
inc
test
fld
(bad)
loop
loop
cmp
ds
or
xchg
add
pusha
call
std
outs
pop
dec
sub
push
out
xor
call
push
imul
lods
push
mov
repnz
mov
popa
loopne
cmp
dec
mov
test
imul
ret
push
inc
jge
inc
shl
fsub
add
not
or
add
xor
pop
retf
inc
inc
sub
pushf
cmp
mov
loop
bound
xchg
jmp
movs
and
jmp
leave
in
mov
imul
fstp
and
and
push
shl
mov
mov
and
ret
pop
fwait
xchg
ja
or
mov
movs
xor
and
cmps
inc
add
inc
push
pop
les
test
icebp
pop
sbb
jns
popa
xor
jl
pop
jle
movs
je
int
scas
out
js
addr16
mov
mov
repz
imul
xchg
pop
xchg
or
test
ret
mov
ret
ja
sub
pop
(bad)
out
jmp
imul
jl
cmp
in
pop
mul
fiadd
cmp
clc
xlat
push
mov
jp
in
add
iret
iret
inc
lods
fild
call
pop
jae
movs
mov
lock
scas
clc
fstp
lock
addr16
push
add
jns
retf
dec
cld
inc
dec
or
add
call
jbe
sbb
rol
add
lock
adc
cmp
jmp
jecxz
inc
test
test
retf
xor
cs
fcmovb
int
loop
outs
into
imul
add
dec
sahf
ret
cdq
loopne
or
scas
(bad)
xchg
cmp
cmp
jge
les
fsin
cli
loopne
push
push
ins
dec
jo
inc
pop
inc
xchg
hlt
aam
adc
pop
pop
mov
sbb
sbb
fmul
lahf
inc
pop
jbe
xchg
inc
or
mov
push
scas
adc
sub
cmp
in
and
cmp
lea
shl
lea
pop
push
bound
jb
dec
sub
adc
sub
out
fnstsw
enter
jge
dec
xor
rcl
inc
xchg
movs
dec
das
fdiv
aaa
sub
dec
adc
mov
cmc
leave
cli
(bad)
call
test
or
in
popf
lods
adc
mov
pop
jge
adc
jle
add
push
mov
(bad)
mov
ret
arpl
adc
aad
call
push
pop
gs
jb
(bad)
and
(bad)
(bad)
les
push
pusha
popf
int3
cmp
cmp
shl
sub
sar
bound
mov
dec
sbb
out
sbb
pop
pop
gs
dec
or
ja
mov
mov
ins
xor
mov
pop
(bad)
xlat
mov
push
daa
sbb
repnz
push
xchg
call
outs
push
mov
shld
movs
mov
jo
mov
pop
cdq
or
xchg
jo
mov
dec
jno
inc
push
push
mov
mov
shl
jl
iret
mov
sti
sbb
fisttp
push
jl
(bad)
nop
movs
inc
sbb
inc
popa
(bad)
adc
dec
push
jmp
mov
mov
xor
mov
push
push
movs
cmc
out
fwait
xor
std
aas
pop
xor
cmps
rol
dec
xor
enter
idiv
cdq
in
sbb
adc
mov
js
and
xchg
je
adc
stos
add
cs
push
(bad)
ss
dec
push
outs
stos
adc
mov
sub
mov
or
test
popf
cmp
rcl
in
dec
sbb
mov
rcl
mov
push
popa
sar
mov
add
rcl
jnp
jb
cli
imul
mov
and
inc
mov
(bad)
push
int3
push
mov
ins
data16
nop
push
in
stc
fwait
int
fiadd
xchg
jo
dec
mov
add
jecxz
sub
int
jns
addr16
push
rcr
aad
inc
xor
sub
ss
cmp
fstp
xchg
push
(bad)
js
and
fild
mov
test
mov
daa
js
xchg
nop
mov
sti
push
xor
sti
stc
fmul
jl
popf
and
xor
or
out
jp
sub
stos
cmps
(bad)
pusha
cwde
in
inc
imul
imul
hlt
and
loop
shr
test
iret
scas
dec
mov
arpl
push
in
int3
ret
jnp
cmp
inc
mov
pop
enter
add
cmp
cmc
clc
jo
adc
jno
cwde
mov
mov
jmp
dec
dec
and
push
call
cmps
pushf
loope
xlat
mov
sahf
ins
adc
sar
dec
sub
pop
sbb
ret
or
movs
adc
mov
mov
pusha
mov
mov
je
je
dec
jno
in
or
outs
ins
mov
mov
daa
jae
aad
imul
(bad)
ret
push
outs
cmp
mov
xchg
(bad)
or
or
and
mov
out
repz
pop
sbb
cmp
sar
push
mov
nop
cld
xor
dec
or
pop
sub
(bad)
fldenv
aas
add
sbb
cmps
xchg
lds
add
icebp
imul
gs
rcl
add
jmp
dec
xchg
mov
xchg
rol
and
jno
lods
gs
scas
rcl
mov
xchg
rcl
or
(bad)
jl
dec
rcr
das
mov
adc
popa
test
bound
sar
sbb
pop
loopne
lahf
jae
(bad)
call
mov
retf
jne
push
inc
mov
retf
fcmovnu
fdiv
push
(bad)
repz
add
inc
jl
mov
adc
popf
outs
pop
test
mov
jp
jbe
icebp
jno
repnz
jecxz
mov
cli
push
xchg
outs
mov
data16
inc
xor
rcr
jnp
pop
mov
dec
xchg
rcr
out
pusha
add
(bad)
push
ins
xor
leave
call
or
leave
popa
cmp
(bad)
icebp
test
dec
js
jnp
movs
sti
out
aas
dec
xor
(bad)
push
adc
or
(bad)
lods
jmp
sub
movs
(bad)
xchg
iret
sub
or
shr
adc
xchg
mov
lock
mov
stc
imul
fimul
mov
call
call
test
stos
addr16
call
retf
push
lods
push
leave
ss
sar
out
pushf
std
in
enter
jb
(bad)
stos
mov
add
or
jle
repz
mov
jmp
clc
cmp
shr
dec
pop
fwait
xchg
icebp
fcmove
jle
scas
js
jecxz
add
les
pop
jne
lods
shl
adc
or
add
lahf
ror
(bad)
loopne
(bad)
pop
sar
xor
cs
pop
and
ins
cld
pusha
mov
fcmovnu
xchg
xchg
pop
pusha
in
rol
adc
adc
push
imul
xchg
mov
out
imul
push
lods
fwait
mov
add
ds
mov
push
pop
cmp
(bad)
sub
movs
push
ins
jl
out
vcmppd
outs
dec
(bad)
jg
ret
sub
bound
call
jle
add
push
test
mov
jecxz
cmp
test
mov
inc
sbb
or
not
ret
jmp
cmps
or
call
inc
push
mov
jmp
mul
inc
mov
fstp
sbb
stos
in
sub
pop
scas
adc
cld
cmp
pop
cmp
fcomp
sti
cmp
lds
in
test
inc
inc
loopne
xchg
arpl
sub
mov
xchg
stos
jae
(bad)
dec
dec
pop
push
ror
pop
iret
mov
mov
push
ror
scas
cld
push
shl
dec
jp
cmp
inc
mov
or
fild
into
aaa
je
push
adc
jle
adc
dec
jg
aad
ret
inc
stos
leave
or
inc
cmp
mov
inc
movs
sahf
jo
sbb
xor
xor
jecxz
sbb
or
cmp
xor
or
test
rcl
test
and
aam
jne
test
loop
dec
sbb
jbe
ins
in
mov
data16
mov
mov
movs
sub
mov
inc
and
pusha
scas
sbb
test
mov
inc
pusha
add
mov
cdq
fstp
stc
cmc
push
jb
daa
cli
and
ret
data16
pop
fimul
add
add
cmc
and
add
xor
int3
cdq
test
ins
push
sub
sub
mov
es
pop
shl
or
in
dec
popa
mov
jo
addr16
cmp
enter
and
sub
shl
jne
(bad)
sbb
xchg
pop
ror
pop
cmp
cmp
loop
cdq
inc
(bad)
jno
xchg
push
or
and
add
or
xor
add
adc
jnp
push
retf
shl
sbb
fistp
in
push
outs
and
lds
push
add
pop
mov
push
out
retf
push
xchg
xchg
jg
fisub
out
ja
and
xchg
add
jne
adc
cmp
jg
call
les
jl
or
sub
push
push
mov
or
not
rcr
fst
mov
mov
in
hlt
out
sbb
les
(bad)
test
or
mov
mov
dec
lea
inc
in
int
stc
xchg
mov
call
lds
add
fsubr
mov
scas
mov
ret
aas
xchg
les
hlt
pop
pop
adc
add
call
ret
fst
mov
scas
adc
mov
das
int3
aam
fcmovne
cmps
mov
mov
or
les
loope
jnp
jno
push
adc
jne
jb
dec
neg
dec
or
dec
cmp
cmp
dec
cmc
xchg
xchg
jl
jl
mov
pop
sbb
ins
out
xchg
xor
sub
pop
sbb
cmp
mov
test
push
mov
push
cmp
in
adc
out
retf
aaa
lea
mov
cmps
stos
lock
push
xchg
std
xor
mov
out
mov
jo
lea
pop
add
ds
cmp
fist
daa
mov
mov
push
out
inc
inc
mov
and
and
mov
push
jno
lahf
and
push
jmp
test
call
add
inc
adc
jb
sar
aaa
and
in
lds
shl
cmps
mul
aaa
push
xor
mov
xchg
jmp
enter
imul
add
pop
cmp
fnstcw
mov
inc
jb
cld
mov
jo
mov
xchg
mov
(bad)
push
call
jno
ret
add
push
add
add
xor
lea
mov
pop
and
mov
xchg
push
movs
leave
stos
inc
jno
xor
push
mov
sbb
cmp
lea
jecxz
mov
mov
ffreep
nop
jo
xchg
pusha
cmp
add
pop
int3
adc
sbb
push
shl
or
pushf
fidiv
loope
mov
rcr
shl
or
fsubr
mov
aaa
pop
xchg
push
test
push
mov
out
add
es
out
adc
push
loop
stc
inc
cmc
or
pushf
out
loopne
in
in
fst
push
jns
pop
ss
and
xlat
pop
aaa
das
cmp
push
aad
movs
pop
xchg
imul
cld
int
jnp
or
jae
jmp
pop
(bad)
mov
rol
in
mov
jmp
xchg
mov
dec
out
xor
mov
mov
addr16
test
push
pop
out
fisttp
loopne
or
and
es
mov
lods
cs
(bad)
cdq
daa
shl
or
mov
ins
mov
mov
inc
pop
inc
or
inc
(bad)
div
dec
adc
xchg
mov
add
mov
add
pop
out
and
dec
mov
sbb
jno
movs
sub
test
daa
pop
sbb
xor
into
dec
sbb
mov
sbb
jmp
ficomp
push
in
adc
push
rcr
inc
mov
sar
sub
lahf
call
gs
loop
adc
fdivr
imul
or
jns
sar
pop
or
mov
sbb
test
xor
sub
mov
inc
xor
rcr
add
das
in
(bad)
sahf
push
cld
mov
sbb
mov
fnsave
xchg
sbb
pop
dec
and
lods
push
xchg
pop
imul
sub
jl
ins
mov
pusha
pop
scas
mov
add
pop
or
cli
std
sub
hlt
mov
bsr
mov
pop
and
mov
add
lahf
xor
inc
(bad)
in
pop
fmul
nop
add
sbb
aaa
rcl
push
adc
jle
jnp
lock
inc
or
push
pop
repz
movs
mov
push
aam
(bad)
mov
mov
sub
mov
xchg
inc
xchg
adc
xchg
xlat
test
pop
jnp
adc
push
es
dec
jbe
xor
mov
push
mov
push
adc
mov
out
cwde
aad
jge
stc
shr
jae
lahf
sbb
push
mov
out
pop
inc
adc
sub
pop
add
xchg
(bad)
lea
out
cld
sbb
add
xchg
adc
push
add
lock
mov
and
mov
int3
popa
jle
repz
out
aam
daa
mov
and
lods
xchg
adc
push
mov
adc
mov
push
leave
fst
sbb
push
out
or
sub
pop
loopne
adc
adc
test
mov
out
mov
aam
(bad)
lods
jge
mov
pop
xchg
(bad)
pop
pop
out
inc
imul
loope
pop
pushf
and
fisttp
jge
int3
(bad)
sbb
cmps
es
push
hlt
loopne
int3
pop
call
xchg
mov
loopne
xor
jp
jmp
ret
aaa
out
fucomp
mov
xchg
mov
fisttp
cmp
xlat
cmps
inc
cmps
(bad)
mov
mov
mov
pop
and
cmp
jle
jne
shl
stos
inc
jmp
aas
push
xor
ja
imul
scas
ds
std
jecxz
adc
push
pop
push
adc
cmps
sub
pop
leave
dec
push
push
or
fdivr
dec
adc
jnp
loopne
jle
mov
call
jo
xor
jle
inc
xchg
daa
stc
and
repnz
inc
xor
call
leave
sub
sbb
cmps
xchg
mov
aam
mov
mov
leave
inc
bnd
dec
test
push
test
sbb
mov
jnp
jmp
(bad)
std
pop
mov
lods
sub
add
adc
jl
jecxz
test
cmps
mov
ins
fnstcw
sti
out
ror
jae
pop
push
and
or
stos
dec
pusha
and
dec
cmps
xor
call
fisubr
push
and
mov
xchg
(bad)
out
stos
inc
neg
lock
dec
inc
inc
lods
mov
sub
pop
xchg
cmps
xor
fcom
and
or
jno
cmp
inc
popa
popa
data16
sub
movs
jl
in
mov
cmps
mov
sub
cmp
push
dec
jp
sti
and
loopne
xor
dec
cs
cmc
jp
inc
fsub
pop
rcl
jmp
sub
addr16
int
xchg
popfw
call
imul
dec
push
pusha
jp
mov
cmc
and
mov
jp
xchg
out
pop
rcl
jbe
push
sti
jns
pop
xchg
mov
cmps
popa
lds
mov
sar
add
lods
movs
xchg
jle
addr16
mov
adc
jp
cs
out
pop
popf
ins
aam
ins
inc
sbb
sbb
cs
mov
and
std
sti
lds
jb
addr16
cdq
pop
sbb
add
sub
inc
pop
mov
rcr
pusha
mov
fwait
push
push
es
adc
std
jecxz
neg
push
push
push
iret
stos
xlat
xchg
mov
sbb
imul
mov
loop
imul
dec
adc
sbb
inc
in
mov
(bad)
sbb
jg
mov
out
cmp
sub
xor
add
push
daa
or
mov
push
mov
mov
push
adc
cmc
push
add
dec
rol
jg
and
xchg
nop
xor
inc
push
sub
mov
loop
bound
sbb
or
repnz
aam
xchg
stos
sar
into
and
fs
inc
cld
fisub
fcom
mul
adc
mov
call
std
cmps
jns
es
in
scas
ds
push
cdq
out
fldenv
pop
cmp
das
fmul
xor
(bad)
mov
enter
pop
cs
pop
mov
ins
enter
cmp
add
rcl
test
cwde
dec
jno
in
or
add
sbb
pop
int
popa
jns
mov
cmp
mov
mov
ret
sbb
or
scas
jp
xchg
sbb
fiadd
loopne
pop
pop
rcl
pop
add
fmul
sbb
and
shl
cmp
and
lahf
push
push
and
lds
outs
xchg
add
xchg
out
dec
into
jp
mov
scas
ret
or
jo
aad
and
inc
ins
or
fidivr
jle
jns
mov
inc
and
or
dec
mov
sub
sahf
inc
repnz
pop
jge
retf
add
frstor
push
mov
dec
retf
aam
cmc
add
out
dec
mov
xor
cmp
add
push
xchg
(bad)
or
mov
call
mov
scas
lea
cld
aas
cmc
mov
data16
sahf
outs
stos
inc
xor
pushf
adc
mov
pmullw
ss
push
popf
mov
fld
pop
movs
dec
xchg
mov
xor
mov
(bad)
ins
cmp
cdq
out
inc
or
sbb
das
mov
out
neg
imul
jmp
hlt
pushf
push
ja
sbb
push
xlat
and
cmp
mov
sbb
scas
sub
add
test
dec
cmps
jecxz
mov
push
inc
ror
aam
and
sub
imul
nop
inc
mov
mov
xchg
lock
(bad)
mov
(bad)
scas
jmp
adc
rol
je
pop
scas
out
call
not
data16
mov
sbb
test
sub
or
add
stos
and
call
dec
into
aad
pop
cmp
jo
outs
or
sbb
jecxz
fcmovu
pop
pop
scas
jnp
dec
push
cmp
loope
pop
jl
cmp
ds
mov
cli
mov
or
fsubp
push
mov
lahf
or
ins
fst
xor
nop
add
sbb
ins
mov
out
enter
push
sub
sub
mov
adc
pop
cmp
sub
cld
ins
push
lods
push
movs
out
cli
nop
xor
jne
xchg
shl
push
movs
sbb
mov
cmp
nop
cmp
cmps
clc
add
test
push
xchg
pop
loopne
xor
or
ds
sbb
(bad)
pop
in
jp
mov
fidiv
repnz
cmp
xor
fld
nop
mov
mov
ds
sbb
inc
jo
lds
push
retf
hlt
js
add
iret
lods
add
jbe
sti
imul
loopne
pop
in
pop
into
and
push
stc
push
jae
mov
dec
popa
jbe
mov
cmp
ins
sub
xor
dec
(bad)
data16
push
shr
mov
push
jge
xchg
dec
and
jb
movs
sbb
sar
fadd
rcr
push
push
pop
clc
sbb
in
cmps
imul
stos
mov
loope
loop
call
dec
pop
add
out
jle
stc
mov
in
adc
dec
jno
fist
cmpxchg
lea
mov
sti
movs
push
pop
sbb
std
cs
jo
jmp
cmp
mov
jecxz
(bad)
data16
and
dec
in
inc
aaa
jns
xchg
mov
(bad)
jmp
jmp
mov
pusha
pushf
sti
mov
js
inc
scas
ins
lods
add
(bad)
push
out
daa
xchg
jmp
imul
cmps
jmp
sti
out
xchg
es
repnz
cdq
cmp
cmp
mov
mov
rol
(bad)
cmps
iret
adc
and
inc
and
lea
cmp
nop
adc
mov
xchg
xchg
mov
ret
pop
imul
mov
icebp
neg
std
ins
jne
loope
lahf
dec
mov
cmps
movs
jne
aas
out
mov
ja
bound
(bad)
push
add
cmps
add
(bad)
fcmovnbe
int3
jg
in
push
loope
or
iret
mov
aam
jne
(bad)
sbb
cld
pop
push
scas
movs
adc
adc
push
sbb
jecxz
pop
lea
push
mov
dec
add
icebp
cli
cwde
push
test
hlt
inc
call
imul
xchg
xlat
inc
fwait
stos
fnsave
repnz
inc
nop
fcmovnu
cmp
imul
cs
shl
dec
popa
popf
xchg
js
push
cmps
sub
jnp
and
jbe
mov
stos
mov
in
jl
sbb
arpl
mov
dec
jp
les
in
fst
fsubr
dec
imul
mov
loopne
push
mov
(bad)
fist
lds
nop
test
call
push
jo
push
outs
pop
bound
add
aad
mov
mov
jle
adc
add
add
es
cli
xchg
shl
lods
cld
pushf
mov
jmp
fs
sbb
outs
lahf
call
push
adc
cmc
push
jmp
inc
mov
addr16
add
fiadd
loop
mov
sbb
lds
hlt
mov
gs
jmp
xor
push
cmps
daa
adc
pop
xchg
mov
int
inc
into
scas
gs
dec
pop
xor
pop
int
adc
jp
mov
outs
sub
daa
fistp
test
xchg
arpl
call
in
loope
mov
imul
paddb
aas
xor
rol
into
mov
in
and
jae
lods
addr16
out
ror
in
push
shl
popf
mov
jmp
in
in
push
jne
(bad)
loop
mov
xor
or
call
lock
std
fld
imul
test
or
cmp
sahf
push
js
lahf
scas
cwde
test
pop
fs
pop
sbb
cmp
in
(bad)
fld
jnp
int3
das
loope
sub
dec
sti
fild
jg
jl
and
push
setp
movs
das
mov
or
js
addr16
mov
shr
test
xchg
mov
cmp
outs
dec
mov
gs
scas
outs
dec
mov
and
cmp
mov
stos
test
sub
mov
pop
push
test
sbb
cmp
mov
jge
out
xchg
sub
ret
das
add
aam
and
lods
dec
pop
xchg
xor
mov
pusha
lock
or
mov
test
ss
and
cmps
jecxz
dec
push
sub
ins
je
jge
retf
dec
scas
push
mov
int
popf
mov
fwait
pushf
fucomp
ja
mov
scas
fistp
add
ja
add
push
imul
jmp
dec
ins
neg
and
out
cmp
inc
pop
ret
popf
dec
dec
js
dec
inc
xchg
xor
cdq
pop
icebp
clc
or
aam
add
das
out
pop
int3
les
sub
adc
mov
(bad)
ins
xlat
sbb
js
leavew
mov
pop
cld
mov
add
loop
fiadd
jge
xlat
and
add
push
aas
xchg
js
adc
js
or
pop
ds
pop
pop
sbb
and
addr16
iret
xchg
fcomip
outs
mov
push
jmp
ret
sub
add
inc
cli
out
(bad)
(bad)
pop
mov
jp
dec
lods
les
mov
fmul
push
jmp
daa
movs
cmp
mov
cmp
adc
push
adc
adc
xchg
and
mov
js
js
and
dec
loope
movs
enter
xchg
loope
(bad)
cmps
mov
inc
pop
enter
fimul
jmp
inc
sub
mov
mov
push
xor
inc
lea
mov
imul
dec
cdq
js
rol
push
sbb
bnd
mov
repnz
retf
sti
not
outs
push
mov
push
sbb
pop
jne
lods
lods
add
fisubr
(bad)
js
hlt
loop
jp
jmp
ds
repnz
pop
sub
sbb
das
adc
add
test
mul
out
outs
sub
add
scas
outs
mov
sbb
shr
es
lahf
outs
pop
xchg
adc
outs
inc
mov
sbb
nop
aas
nop
ss
call
xchg
fwait
mov
and
sbb
mov
jg
mov
ds
push
xor
into
adc
out
add
sub
push
aam
pop
add
int3
(bad)
fs
clc
sub
into
or
inc
mov
jns
scas
push
xchg
xor
test
mov
mov
test
pop
inc
dec
push
fimul
inc
sub
sbb
imul
pop
or
cli
scas
adc
imul
enter
inc
cmps
adc
addr16
xor
sbb
gs
out
mov
ror
scas
add
sub
sbb
jae
mov
sahf
and
mov
cmp
mov
dec
dec
inc
or
ror
cmp
push
jl
mov
and
push
jecxz
and
fwait
xchg
inc
sbb
outs
ja
pop
mov
mov
loopne
jl
cmc
es
fmul
rcr
mov
ja
pop
loope
call
xlat
push
xchg
pusha
in
add
pop
jmp
fsub
mov
loop
mov
inc
(bad)
inc
je
mov
mov
and
(bad)
jb
ror
clc
mov
fmul
and
mov
mov
int3
xchg
movs
aas
pop
adc
mov
pop
sahf
adc
hlt
mov
ins
std
mov
addr16
js
jl
cmp
in
mov
push
and
fsubr
repz
outs
addr16
push
sub
int
mov
and
push
out
aas
test
sub
scas
es
sbb
sbb
pop
rep
gs
pushf
loop
or
lods
mov
in
pusha
fld
cs
or
imul
mov
mov
sbb
mov
jl
adc
add
mov
jae
jbe
gs
and
(bad)
(bad)
lahf
adc
jnp
sbb
out
cld
push
dec
pop
rcl
and
jge
je
xor
ret
(bad)
sbb
sar
scas
lods
leave
test
cmps
cs
lock
jmp
add
(bad)
cmps
sub
lea
fcomp
sub
(bad)
pop
push
inc
stos
pop
adc
mov
jp
cs
add
fdiv
adc
sti
shl
xor
adc
call
cdq
cmps
fisttp
sub
(bad)
mov
fwait
lock
or
sub
push
push
outs
ins
jmp
push
add
inc
in
push
sub
aas
pop
mov
jmp
jecxz
dec
out
rcr
or
call
int3
or
in
inc
cmp
xor
stc
jae
or
sti
push
jns
test
jae
lahf
std
ds
sbb
inc
and
jno
ds
adc
test
inc
out
jno
add
inc
mov
add
jmp
fdivp
in
inc
jmp
inc
ins
push
adc
pop
sub
sbb
mov
or
jmp
rcl
int3
sahf
push
pop
sar
inc
pop
jns
lods
sbb
xor
add
int
add
sbb
int3
jge
pop
mov
ins
xchg
mov
mov
push
pop
jmp
mov
pop
pushf
xor
call
rol
inc
clc
push
fstp
jle
push
lea
aad
hlt
push
xchg
dec
into
daa
mov
and
fs
test
mov
sbb
jbe
pop
sub
push
sbb
stc
out
(bad)
mov
ss
fmul
lahf
push
aad
xchg
mov
aas
std
add
push
or
fucomip
mov
stos
and
inc
ror
stc
cld
nop
sub
sbb
mov
push
mov
push
dec
scas
sub
(bad)
pop
je
sub
mov
mov
mov
test
dec
cmp
sbb
imul
shl
adc
pop
jge
call
mov
loop
pop
add
xchg
mov
inc
mov
mov
outs
das
mov
std
and
sub
hlt
jo
pop
in
nop
or
aad
xor
cwde
adc
(bad)
push
test
(bad)
fimul
inc
jno
(bad)
repnz
les
ds
test
mov
pop
inc
fistp
mov
sahf
call
push
xchg
fadd
idiv
dec
sub
xchg
pop
cmps
adc
mov
mov
ins
pop
movs
push
shl
mov
push
iret
xchg
dec
fadd
mov
bound
shl
rcr
adc
pop
rol
pop
mov
loope
mov
push
add
mov
xchg
cmp
call
mov
lods
xor
jns
rcr
sar
sub
pop
mov
aad
push
push
push
popf
inc
jmp
(bad)
dec
stos
sub
stc
and
push
aaa
fwait
hlt
mov
push
ins
jo
les
sti
jle
in
sub
mov
popa
jo
movs
inc
call
lods
pop
pop
in
js
(bad)
xchg
mov
push
ficomp
loopne
mov
add
int
mov
xchg
sar
lahf
add
adc
push
jae
mov
xchg
stc
rol
or
retf
cmp
push
pop
mov
inc
push
outs
scas
int3
mov
enter
jbe
push
cs
xor
aad
fld
mov
mov
clc
jmp
mov
cwde
mov
pshufw
call
call
or
clc
cdq
jb
and
or
push
or
gs
and
inc
sub
push
xchg
ror
sbb
ja
ins
in
push
int
push
test
inc
pop
(bad)
ds
movs
mov
add
stos
push
xchg
add
rcl
add
call
loope
stos
cli
mov
les
in
xchg
shl
loopne
test
cli
pop
sbb
pop
sub
push
aaa
dec
mov
es
enter
sub
push
repz
pushf
dec
and
jbe
xor
aad
mov
xor
or
jae
mov
xchg
mov
stc
adc
adc
mov
fstp
clc
jae
xchg
in
gs
xor
call
cmp
and
(bad)
xchg
mov
loop
daa
inc
add
push
xchg
push
sub
(bad)
into
push
dec
(bad)
out
sbb
sub
sahf
pop
call
cmps
stos
mov
sub
into
retf
pop
js
cmp
cmp
dec
add
leave
dec
out
pushf
pop
pop
add
ror
in
test
iret
aas
iret
leave
test
and
mov
ins
cmp
sub
ror
xchg
(bad)
mov
pop
xchg
mov
cwde
jmp
xchg
jl
dec
sub
sub
cmovp
stc
jno
sub
(bad)
mov
clc
js
int
xor
test
inc
pop
inc
mov
inc
out
jecxz
jg
gs
jmp
lock
sub
dec
aas
es
xchg
sbb
cmp
xchg
inc
cld
xor
rcl
mov
repz
test
jle
mov
jmp
pop
fisubr
push
lea
pop
call
test
fmul
mov
dec
mov
sbb
aad
mov
or
(bad)
call
inc
and
lods
rcl
lods
cdq
add
add
mov
fnstsw
cdq
add
leave
add
push
sbb
add
inc
leave
adc
cmp
cwde
sbb
shl
jns
mov
je
push
imul
or
xchg
xchg
aaa
mov
xchg
adc
cmp
inc
push
fisub
xor
ret
ret
loope
mov
cmp
cmp
jp
xchg
jecxz
lods
dec
mov
push
cmp
jp
adc
or
jo
dec
sbb
fwait
push
fmul
cld
in
sub
sub
retf
xchg
dec
dec
xchg
lock
inc
cld
imul
pop
retf
pop
xor
or
retf
adc
mov
push
or
cmp
ror
push
pop
in
cmp
push
out
jmp
(bad)
pop
mov
and
and
cdq
and
pop
pop
pop
mov
and
adc
and
lea
test
xor
ret
xor
cmps
fs
push
fiadd
push
cmp
jno
loop
sub
push
outs
fdiv
test
jo
sub
sbb
mov
xchg
jno
in
xchg
mov
js
xchg
icebp
int
icebp
stos
in
add
push
ror
sahf
movs
lods
cmp
es
cmpxchg
not
or
inc
sub
rcr
loopne
dec
cmps
sbb
cdq
jle
jne
jns
sub
call
scas
cmps
stc
sbb
shr
mov
or
mov
fstp
sub
mov
(bad)
and
mov
mov
jbe
fwait
out
add
jp
and
push
popf
inc
cld
or
sub
and
fldenv
jmp
ds
cmp
in
mov
pop
out
cmp
out
in
inc
dec
inc
call
pushf
sbb
ficom
pop
sti
mov
scas
rol
(bad)
xor
test
adc
pop
pop
dec
pop
sub
sbb
aam
movs
lods
mov
mov
cmp
imul
mov
cs
xchg
stc
push
sar
mov
pop
and
pop
jno
xor
stos
neg
dec
dec
sbb
cmp
cmc
push
fild
sbb
push
js
retf
ss
dec
xchg
push
dec
mov
test
mov
pop
sub
sub
sub
rcl
adc
push
retf
mov
dec
jnp
add
mov
or
in
test
jno
push
shr
test
pop
pop
stc
pop
adc
out
mov
adc
pusha
rcl
inc
lock
mov
add
push
in
jge
jp
pop
pop
sar
mov
add
das
xchg
xor
push
repnz
loopne
mov
ror
cmp
mov
adc
cli
add
pop
xchg
gs
sub
sbb
in
in
inc
pop
out
sbb
pop
adc
xlat
cmc
jbe
enter
ret
pop
jle
movs
pop
mov
adc
(bad)
(bad)
icebp
hlt
mov
push
not
mov
mov
sbb
scas
xchg
jnp
sub
jbe
cmc
adc
mov
sbb
pop
adc
pop
les
xchg
dec
fist
pop
jnp
push
sbb
lea
fist
jae
nop
in
lock
hlt
(bad)
call
lods
jmp
or
or
into
int3
adc
pusha
jp
mov
mov
fs
cmp
sub
sub
popf
or
mul
stc
mov
mov
add
mov
retf
adc
rol
push
neg
shl
xor
xlat
or
add
sbb
imul
xor
ja
dec
dec
adc
sbb
pop
repz
cmp
addr16
out
jmp
out
and
or
pop
cmp
or
jns
adc
xor
inc
cmp
inc
jns
mov
mov
cmp
loop
mov
fnsave
cmps
cmc
out
out
ja
add
add
aam
shl
xchg
jnp
loop
pop
xchg
in
ror
and
mov
in
mov
stc
cmp
in
pop
cmps
mov
rcl
mov
mov
gs
cmps
dec
adc
push
jb
movups
add
dec
shl
jecxz
pop
add
sub
sahf
test
(bad)
pop
jp
cmps
sbb
jecxz
jo
push
sbb
push
or
fcmove
popf
xor
loope
addr16
cwde
mov
(bad)
pop
stos
imul
ret
push
iret
aaa
imul
(bad)
lock
jmp
or
fs
xchg
test
add
lock
pop
cmp
xor
jp
in
mul
push
cmp
nop
cwde
sbb
imul
cs
or
in
int3
push
xor
ss
mov
cld
xor
nop
add
push
cli
sub
sub
sub
xor
aaa
push
in
leave
icebp
pop
pop
dec
ja
lods
push
sub
test
mov
inc
adc
mov
adc
sub
xor
xchg
mov
loop
retf
xor
and
mov
add
jbe
inc
adc
mov
and
xlat
outs
and
dec
ror
xchg
stos
lock
ret
push
mov
adc
xchg
rcr
sahf
aaa
xchg
and
mov
fnstcw
jmp
sub
jge
inc
xchg
sbb
mov
inc
jno
out
lods
jmp
adc
push
fnstcw
inc
rcl
jg
pop
sbb
xchg
cmp
sbb
pop
pop
call
xchg
add
cmp
iret
adc
lea
jp
cld
bound
ficom
lods
pushf
cwde
dec
push
pop
xchg
xor
push
ds
xchg
fsub
lods
(bad)
mov
mov
aas
adc
xchg
dec
sbb
adc
inc
in
mov
sbb
xor
lods
mov
xor
mov
cld
mov
xor
sbb
sub
(bad)
rcr
jg
std
mov
mov
mov
(bad)
std
fnstsw
fsub
les
jmp
dec
adc
inc
sbb
push
pop
xchg
fwait
sub
dec
ficom
jns
xor
arpl
xchg
and
add
xchg
ffree
cmps
pop
(bad)
cmc
test
mov
jb
neg
inc
xchg
gs
stc
jb
xor
daa
adc
mov
xchg
mov
sar
mov
stos
sbb
pusha
test
xor
not
cmp
xchg
inc
jl
add
sbb
retf
nop
and
cmp
jle
mov
add
je
stc
pushf
cmp
xchg
sbb
ss
lahf
or
fbld
sbb
xchg
in
aad
rcr
sbb
mov
xchg
mov
jle
sub
(bad)
dec
loope
push
mov
loopne
mov
pop
xor
aad
lods
xchg
pop
mov
xchg
lahf
cdq
enter
scas
mov
inc
in
dec
call
adc
ja
es
retf
je
(bad)
movs
mov
jbe
xor
ror
hlt
out
xchg
fwait
mov
sbb
push
cmp
nop
jp
add
and
sbb
mov
test
add
imul
xchg
sbb
xor
fwait
mov
inc
imul
pop
add
xchg
fsub
mov
stos
sahf
push
sub
dec
shl
(bad)
cmp
sbb
test
mov
and
pop
pop
xor
aad
and
iret
mov
jno
mov
hlt
retf
call
push
(bad)
je
(bad)
ss
adc
mov
dec
and
retf
jno
push
inc
cmp
data16
nop
xchg
call
pop
dec
or
in
repnz
call
lods
dec
imul
(bad)
out
cmp
lahf
pop
mov
in
outs
jmp
pop
test
and
jg
mov
dec
retf
in
pop
idiv
push
and
sub
inc
add
pop
clc
test
mov
outs
add
cwde
jle
inc
jb
mov
scas
sbb
pop
pop
mov
dec
push
push
add
mov
js
lods
push
sub
std
lahf
push
fmul
pusha
sti
dec
icebp
mov
int3
or
sub
jae
aad
xchg
sub
sti
out
inc
mov
lods
lods
mov
movs
cmp
fadd
jecxz
shl
aad
sub
inc
mov
pop
jo
iret
sub
push
mov
dec
lock
fsubr
jbe
inc
mov
call
inc
xchg
daa
xor
mov
xchg
je
adc
jmp
arpl
mov
mov
mov
lea
pop
dec
pop
das
test
fld
push
sub
jl
pop
outs
cli
adc
push
outs
jmp
adc
push
xchg
push
sub
inc
xchg
ret
add
cwde
les
inc
adc
cmp
dec
mov
and
dec
es
aad
pop
lahf
or
push
adc
into
(bad)
fstp
fstp
fwait
fs
xor
rcpps
call
call
and
outs
mov
push
ds
add
cmp
scas
gs
scas
cmp
imul
loope
iret
int
jmp
inc
sbb
jae
push
stos
jmp
test
int3
cmp
imul
and
nop
bound
sahf
rol
iret
add
jmp
sbb
in
aaa
sub
out
pop
leave
sbb
rcl
mov
ins
cmp
icebp
sbb
jmp
pop
mov
and
loope
add
or
(bad)
pop
imul
sub
fidiv
jmp
mov
mov
popf
(bad)
repz
leave
ins
sahf
pushf
push
out
jmp
pop
jno
movs
fwait
repz
cmp
mov
mov
call
loopne
pop
in
xor
mov
xrelease
out
jno
out
addr16
push
or
jmp
inc
or
sti
mov
dec
stos
call
sbb
mov
dec
and
xchg
not
ret
cwde
inc
lods
popa
leave
loop
int3
jmp
inc
ss
je
mov
outs
addr16
inc
inc
cmp
xchg
sub
(bad)
sbb
test
push
cmps
xchg
stos
sbb
inc
cmc
sbb
data16
push
inc
gs
mov
ins
fild
add
push
or
call
js
enter
add
xchg
inc
sub
cmps
adc
xchg
sub
imul
das
aaa
cdq
mov
clc
jge
fist
xor
in
xor
rcr
add
lods
aad
push
das
jne
mov
mov
stos
sbb
mov
pop
dec
jae
aaa
add
sub
add
sbb
push
pop
fs
or
sar
retf
mov
aaa
jl
adc
add
mov
inc
mov
enter
fwait
sub
pushf
jmp
daa
jns
push
pop
mov
xchg
inc
pop
jae
mov
cdq
(bad)
cli
pop
adc
in
repnz
sub
int
push
psllw
xchg
in
ret
cmp
(bad)
cs
ins
and
inc
cmp
sub
(bad)
ja
jecxz
dec
enter
out
cmp
mov
mov
jp
jae
cmp
pop
mov
mov
scas
adc
mov
and
lahf
and
mov
fidiv
xor
dec
jo
mov
pop
dec
push
movs
sahf
mov
inc
mov
sub
gs
push
ret
push
xor
cmp
es
mov
icebp
dec
mov
sub
and
mov
ja
loop
push
fidivr
mov
push
adc
inc
adc
jb
lahf
jmp
jmp
or
xchg
aas
xor
sti
push
aad
fcom
in
ss
not
xchg
push
mov
jnp
xor
xlat
push
add
int3
xchg
clc
jne
mov
push
dec
es
hlt
mov
jecxz
or
std
rol
mov
test
mov
push
cmp
push
cmc
mov
test
mov
add
push
jae
mov
out
add
sbb
xlat
xor
mov
jno
test
mov
out
cmp
inc
ret
outs
ss
js
dec
mov
push
data16
gs
and
lahf
push
push
mov
movs
stc
pop
fild
fwait
retf
out
xlat
sub
push
mov
and
pop
loopne
mov
pop
ds
pop
(bad)
call
xchg
push
xchg
aas
jl
retf
mov
xchg
cmp
pop
and
aad
jp
mov
jge
je
mov
sub
mov
push
mov
and
das
aas
es
sub
pop
pushf
inc
int3
outs
adc
es
(bad)
nop
jge
inc
or
xor
add
lods
jp
call
xchg
inc
pop
mov
xchg
sti
out
xchg
push
push
cmc
jns
cmc
mov
add
push
jg
push
push
xor
xor
xlat
xchg
ret
sbb
mov
ret
pop
adc
es
jnp
call
xor
popf
ds
add
mov
stos
popa
inc
stos
and
adc
out
cmp
xor
jmp
and
jnp
fiadd
dec
fs
movs
mov
sbb
in
xchg
mov
mov
xor
cmps
cwde
repnz
cdq
int
xor
out
add
jno
jne
test
out
adc
mov
out
out
imul
add
test
inc
in
in
mov
jp
fidiv
fldenv
push
mov
jecxz
in
cmps
fdivr
adc
hlt
adc
(bad)
mov
loope
xchg
bnd
shr
bound
push
ds
out
in
sti
adc
or
sti
out
xchg
xor
fdiv
inc
in
pop
and
inc
push
jbe
cmp
mov
mov
adc
sbb
scas
call
mov
sub
aaa
in
mov
mov
pop
rol
adc
outs
jo
mov
or
scas
add
aas
adc
xor
int3
jno
pop
cmps
xchg
jb
in
lock
scas
je
fsubr
mov
jno
mov
mov
adc
inc
imul
xchg
dec
push
clc
cmp
(bad)
and
sbb
imul
push
adc
idiv
dec
mov
loope
pop
cmp
daa
in
popa
ins
ret
adc
jmp
leave
fdivrp
cmp
(bad)
out
push
sub
loopne
add
ja
(bad)
jmp
retf
push
out
fsubr
repnz
jg
push
sbb
test
sub
jbe
sbb
loopne
mov
(bad)
aas
icebp
push
sbb
in
and
pop
retf
or
aam
dec
fimul
inc
xor
mov
cmp
clc
inc
rol
loope
dec
inc
push
mov
shr
pop
fcmovu
in
ds
xchg
add
lods
jno
lods
dec
mov
out
add
adc
dec
pop
mov
js
sbb
inc
push
stc
mov
push
and
fwait
jno
ja
mov
inc
mov
nop
pop
xchg
stc
shl
aad
fstp
cmp
mov
mov
jecxz
imul
add
das
sub
ins
shl
and
fprem
adc
pop
fild
push
lahf
lahf
nop
add
repz
and
nop
fidiv
in
inc
sbb
(bad)
jns
push
xchg
push
sar
mov
push
mov
push
dec
sub
sub
loope
push
ss
xor
xor
cmp
aas
in
dec
xchg
ja
xchg
lods
or
dec
add
ss
mov
add
retf
lds
shl
sti
push
cmp
ret
push
dec
pop
push
(bad)
retf
adc
mov
xchg
faddp
pop
xchg
pushf
dec
sar
leave
or
or
add
jns
mov
cmc
or
popa
int
repnz
arpl
sbb
cmc
test
and
add
fild
pop
mov
xchg
mov
daa
gs
add
mov
pop
arpl
dec
test
lds
clc
sbb
(bad)
hlt
sub
fbld
ja
cmp
or
inc
jp
cmp
arpl
pop
mov
nop
movs
push
or
cmp
outs
pop
jmp
add
icebp
por
hlt
dec
mov
sbb
pop
or
adc
mov
xchg
adc
ss
push
stos
inc
push
(bad)
mov
mov
data16
enter
bound
mov
into
adc
adc
movs
xor
leave
xchg
jno
push
or
(bad)
jg
test
sub
fs
popf
mov
adc
jnp
mov
js
in
outs
and
cmp
xchg
mov
(bad)
mov
dec
aad
xchg
mov
ss
inc
cmc
inc
ins
test
sar
cmp
xchg
rep
outs
mov
jmp
mov
stos
outs
or
stos
test
add
jns
addr16
or
stc
dec
pop
or
aas
loop
lds
and
dec
push
outs
cmps
push
mov
fiadd
pop
retf
in
sub
or
adc
fisubr
mov
lods
pop
cmps
jge
and
push
jno
xor
and
pop
int3
adc
enter
mov
out
cmp
mov
aaa
or
cmp
shl
mov
mov
stc
loop
test
pop
inc
das
mov
sub
rcr
push
xlat
jge
jmp
or
jmp
xor
jge
adc
mov
test
adc
and
lock
in
push
sbb
cmp
pop
and
clc
jge
xor
jae
adc
jns
cmp
xor
aam
dec
and
dec
sbb
frstor
mov
repz
lock
ror
mov
inc
int3
jg
stc
cmp
push
push
pop
addr16
mov
rcr
xchg
cli
xor
pop
push
(bad)
out
pop
dec
hlt
outs
enter
xchg
sbb
adc
mov
iret
repnz
adc
test
cs
add
pop
adc
lea
stc
jae
jns
test
aad
test
pop
mov
mov
or
jl
pop
or
or
scas
dec
add
mov
arpl
dec
push
xchg
stos
inc
add
push
sbb
fcomp
or
es
out
jecxz
gs
sar
dec
mov
loopne
daa
std
retf
pop
imul
enter
std
jmp
std
jmp
js
jo
cs
in
stc
mov
xor
sub
ret
hlt
in
push
xchg
iret
test
xor
test
arpl
clc
in
cmps
sbb
sub
jecxz
push
outs
std
data16
imul
or
call
out
test
sub
(bad)
mov
adc
shr
int3
inc
ret
jg
(bad)
jmp
(bad)
cmps
xor
jl
xor
shl
ss
mov
mov
sub
xchg
sub
push
pusha
fwait
ins
stos
pop
mov
or
mov
cmp
mov
or
sbb
xchg
mov
repz
sahf
sbb
xor
fidivr
test
fdivr
movs
jbe
pop
dec
scas
pop
in
sti
cld
je
imul
shl
ins
adc
xor
ins
sub
scas
call
cli
inc
in
fcom
xor
xlat
add
mov
out
retf
mov
out
sbb
int
sbb
mov
mov
and
xor
shl
pop
outs
xor
addr16
cmps
or
sub
dec
lods
lods
ds
sbb
xchg
sub
push
js
(bad)
mov
xchg
ucomiss
mov
test
dec
out
imul
or
dec
adc
push
imul
pop
repnz
or
je
les
aaa
push
push
div
popf
fnstcw
jmp
pusha
pop
(bad)
adc
add
pop
das
sbb
inc
sbb
fistp
pop
ficomp
out
sub
sbb
ret
div
jmp
dec
shld
jnp
inc
adc
cmp
cmp
dec
xor
jo
aam
test
std
sbb
adc
xchg
push
sub
cdq
fisttp
aas
nop
or
jns
dec
sub
dec
mov
mov
ja
dec
(bad)
mov
sub
cmp
pushf
imul
clc
movs
and
add
mov
in
leave
mov
ja
mov
fist
pop
iret
mov
xchg
cmp
adc
pop
ss
nop
mov
and
cli
pop
jnp
arpl
and
mov
pop
mov
push
fwait
push
aaa
add
rcr
adc
cmp
and
mov
fst
inc
int
lea
push
repz
and
and
or
loopne
cmp
iret
ror
gs
pop
sar
sar
pop
cmp
inc
in
mov
out
jmp
fwait
cdq
fld
shr
popf
mov
call
ds
cmc
jne
mov
push
jnp
mov
fimul
dec
cmps
dec
pop
push
xor
pop
scas
mov
sbb
mov
adc
in
aam
cld
shr
inc
lds
loope
(bad)
int3
ins
xor
pop
cmp
add
inc
jno
stc
mov
xor
jmp
xchg
inc
sbb
repnz
imul
sub
pop
jne
push
inc
jle
push
mov
sbb
or
mov
jg
xchg
adc
lock
addr16
push
jne
rol
aam
inc
inc
cmps
fxch
dec
iret
push
aas
repz
(bad)
push
cwde
mov
pop
sbb
es
push
adc
pop
outs
xchg
sbb
into
idiv
je
loope
mov
out
cmp
cdq
(bad)
js
and
das
loope
mov
outs
ret
mov
fistp
push
xor
dec
mov
or
imul
lods
ins
(bad)
jle
pop
add
aas
pop
movs
inc
mov
mov
jmp
adc
mov
jmp
or
(bad)
pop
and
mov
mov
mov
cmp
shr
adc
js
adc
xchg
adc
cmps
test
cmp
sar
fmul
popf
push
and
push
jne
push
aaa
inc
jae
stc
ss
dec
adc
(bad)
mov
xchg
jnp
mov
or
or
aam
ror
cwde
sbb
jecxz
mov
xchg
loop
out
sub
clc
fistp
sub
cs
mov
scas
(bad)
fbstp
or
push
hlt
jp
scas
cmp
push
mov
retf
jae
scas
cmp
js
enter
cmp
pop
pop
inc
sahf
sub
push
sbb
icebp
cmp
les
cs
(bad)
or
fs
(bad)
pop
rcl
cmc
sbb
cmp
pushf
lock
and
gs
jns
gs
pusha
inc
lea
mov
(bad)
push
mov
or
push
jno
leave
retf
sbb
pop
(bad)
xor
jmp
mov
dec
addr16
sub
sbb
fnstenv
mov
xchg
ret
dec
ins
push
rol
adc
fsub
pop
pop
cmc
and
dec
mov
sbb
or
outs
aad
xor
clc
sahf
inc
push
push
xchg
cmp
xchg
xor
sbb
js
repnz
data16
mov
addr16
ret
scas
shl
sub
hlt
push
mov
or
mov
cmp
cmp
add
mov
xor
mov
inc
cmp
inc
xchg
push
dec
js
into
and
fbstp
mov
rcr
clc
fdivr
pop
mov
popa
add
cs
sbb
inc
xor
jnp
fadd
addr16
and
pop
adc
out
pop
test
jne
cmps
sub
xor
cs
ficom
push
(bad)
jno
and
and
jo
sub
fwait
inc
inc
inc
mov
int
jg
scas
add
push
inc
inc
dec
inc
iret
inc
xchg
stos
sbb
and
dec
fs
outs
popf
movs
mov
or
cmp
mov
fadd
and
push
jae
lods
arpl
jmp
xchg
cmc
push
or
push
mov
ficomp
mov
mov
mov
rol
dec
mov
add
test
mov
cld
or
and
mov
jp
mov
and
movs
int
adc
or
cli
mov
retf
aaa
sbb
leave
ds
pop
xchg
int
shl
xor
sbb
push
xchg
inc
hlt
sub
cmc
add
fiadd
and
mov
adc
jae
xlat
inc
cmpps
mov
pop
ins
and
mov
inc
das
xchg
inc
xor
push
call
and
add
mov
sbb
mov
mov
cmp
(bad)
jmp
cmp
xchg
(bad)
in
(bad)
xor
daa
cmp
or
(bad)
xor
or
or
mov
std
xchg
not
jecxz
jge
out
push
add
dec
push
mov
shr
repz
jle
std
test
or
ins
jmp
cmp
outs
xor
push
sbb
fcomip
jo
(bad)
repnz
mov
jmp
xchg
movs
loope
je
push
sub
call
les
scas
cmc
or
ins
sbb
lea
mov
out
gs
les
shl
push
loopne
iret
(bad)
movs
(bad)
jno
and
(bad)
push
rcl
js
daa
mov
xchg
push
(bad)
cmp
mov
mov
loopne
out
(bad)
mov
stos
sub
push
pop
cmp
daa
mov
sti
inc
call
xor
int3
pop
push
push
out
cdq
rcl
xchg
retf
pop
in
dec
test
sub
mov
mov
xor
pop
nop
repz
aaa
xor
push
dec
mov
mov
mov
push
loopne
ret
and
add
adc
or
dec
leave
pop
fs
fild
push
xlat
lods
push
xor
icebp
xchg
fbstp
enter
push
pop
in
push
lock
fadd
adc
es
call
cmp
gs
push
movs
adc
retf
push
xlat
shr
scas
mov
inc
stc
sbb
mov
cmc
call
popf
(bad)
pop
push
sbb
int
lods
mov
mov
clc
out
sahf
pushf
cmps
xor
jl
(bad)
pop
xchg
pop
sub
loop
add
daa
aad
or
add
pushf
dec
mov
(bad)
daa
cmps
dec
ins
add
lods
rol
clc
inc
fnsave
pop
daa
xor
stos
imul
fimul
mov
js
pop
imul
cmps
xchg
(bad)
call
adc
rcl
jle
sub
sub
pop
xchg
adc
in
sub
bound
cmp
xchg
push
mov
movs
mov
in
mov
fwait
popf
xchg
jo
xchg
adc
xchg
and
adc
push
and
fld
fs
rol
mov
or
data16
push
out
mov
not
data16
jle
mov
fcomip
dec
iret
pop
mov
enter
mov
jp
retf
fcomp
mov
or
and
inc
in
nop
sbb
and
add
mov
ror
fsubr
fisub
daa
shl
mov
lods
je
pop
pop
xchg
add
(bad)
fld
jnp
repnz
dec
push
mov
retf
add
add
push
test
mov
repz
pop
nop
mov
dec
enter
sbb
mov
push
out
fcmovu
(bad)
loopne
xchg
(bad)
cwde
jp
or
addr16
shl
adc
fcomip
dec
jo
inc
cwde
mov
jecxz
test
or
mov
jle
cmp
fcmovnb
(bad)
daa
cli
pop
mov
rol
add
jns
sbb
int3
push
or
add
jecxz
loop
sub
sbb
out
jle
adc
jnp
cmp
mov
cwde
mov
fistp
xchg
add
push
jg
push
xchg
xchg
dec
ss
mov
pop
and
cld
shr
das
push
retf
icebp
jl
fimul
adc
scas
mov
psllw
arpl
mov
test
cld
mov
xchg
mov
push
cdq
dec
out
das
fmul
pop
sub
movs
mov
jecxz
or
fnstsw
add
bound
mov
in
sub
mov
mov
dec
gs
adc
cmp
mov
popa
out
xchg
cli
ins
jge
dec
les
mov
mov
loope
jne
cmps
xchg
xchg
xor
fistp
les
hlt
or
xor
cmp
pop
and
pop
inc
icebp
sbb
das
rcl
mov
xchg
inc
mov
cdq
lock
retf
loop
test
cld
pop
mov
mov
jl
scas
icebp
scas
pop
lds
adc
add
sbb
and
sbb
in
xchg
jg
mov
mov
call
int3
add
paddq
jb
sub
fs
aad
into
pusha
dec
add
jmp
cwde
mov
mov
pop
xchg
xor
pushf
jmp
rcl
sbb
int3
mov
shr
pop
fild
ins
les
pop
jo
icebp
ins
aas
sub
add
push
adc
dec
adc
ja
sbb
cld
jmp
push
iret
call
jb
in
mov
fsub
outs
(bad)
sub
jg
dec
or
out
push
leave
mov
pop
pushf
jl
push
ins
loope
sbb
je
(bad)
ficomp
mov
xor
out
retf
jno
mov
xchg
add
ja
ficomp
mov
xchg
pop
aas
data16
jae
or
movs
mov
repnz
jb
mov
push
arpl
out
or
push
dec
dec
jo
into
pushf
and
std
mov
imul
loop
mov
xor
cdq
pop
movs
dec
test
add
pop
cs
sub
mov
inc
je
mov
cmp
jo
ins
xchg
das
jecxz
inc
(bad)
mul
fimul
xchg
mov
or
cmp
iret
inc
sahf
leave
bswap
dec
scas
push
stc
enter
fsubr
out
outs
enter
cld
push
repnz
inc
sub
mov
push
ss
xor
int3
int3
mov
in
inc
jo
cmp
lds
jp
sti
stos
push
xchg
fadd
jmp
inc
lock
pop
xchg
lahf
and
ret
loop
cmp
sti
scas
jmp
rcl
test
hlt
test
sub
shl
cmps
in
aam
or
or
inc
sbb
xor
mov
xor
cmp
loopne
add
inc
leave
mov
push
loop
repz
fcom
int
cmp
inc
sub
adc
or
scas
adc
and
mov
mov
cs
push
adc
(bad)
pop
fstp
movs
nop
cmp
mov
xor
or
out
ss
mov
dec
shr
ins
call
into
retf
(bad)
gs
dec
dec
add
arpl
inc
push
aas
push
in
inc
repnz
(bad)
xchg
out
sbb
ja
add
pop
call
push
jecxz
push
fisub
xchg
xor
stos
(bad)
lahf
xchg
and
test
and
fcmovb
sub
adc
push
add
pop
and
or
sbb
call
shl
xor
cmp
sub
adc
inc
and
mov
je
es
cmp
and
imul
cs
out
sbb
shl
sbb
mov
in
cli
sbb
jne
loope
ins
dec
sub
add
cmp
add
in
mov
lock
cmp
and
(bad)
leave
fcomp
xor
push
imul
sbb
sub
loope
rcl
jp
sub
jle
iret
mov
icebp
test
loop
out
stc
xchg
js
ss
push
jle
fwait
and
hlt
xchg
jg
dec
jnp
cli
fild
fs
pop
mov
sbb
pop
cdq
bound
sub
xor
mov
cmps
mul
xor
inc
xchg
pop
jl
test
fldcw
es
not
jno
sbb
neg
adc
xor
push
aad
cmp
push
out
inc
sahf
dec
jb
dec
push
mov
push
cmc
lods
mov
or
pop
cmpxchg
xchg
ret
(bad)
js
out
push
adc
in
xchg
rol
movs
pusha
push
mov
inc
shl
jne
xchg
fild
arpl
(bad)
and
xor
cmp
movs
sbb
movs
push
push
imul
jecxz
xor
out
sbb
jle
pop
ss
xchg
adc
in
jp
mov
sbb
dec
sub
push
inc
scas
or
(bad)
mov
cdq
adc
push
jmp
jmp
add
add
retf
leave
sub
mov
sbb
mov
popf
pop
sbb
adc
jge
out
int3
jecxz
sbb
push
xlat
push
icebp
inc
and
neg
sbb
push
inc
cmp
stc
adc
int
movs
push
dec
or
xchg
nop
(bad)
rcl
jno
outs
imul
hlt
push
data16
push
or
xchg
(bad)
scas
retf
ja
push
sbb
push
mov
xor
push
hlt
xor
or
mov
mov
mov
lahf
and
aas
not
and
sub
push
or
sbb
cmps
cld
sbb
pop
fwait
push
mov
outs
(bad)
in
int3
and
dec
sbb
adc
cmp
int3
fdiv
les
(bad)
push
xor
push
dec
push
stos
nop
jg
or
and
add
iret
sti
add
and
adc
retf
mov
xchg
dec
or
movs
lods
mov
call
pop
dec
jg
xor
outs
nop
mov
sbb
push
mov
mov
fidivr
push
pop
stos
ret
fbld
dec
scas
ret
fcomp
mov
adc
cli
or
adc
or
rcr
pop
out
cmps
shr
out
call
cs
ss
int
scas
push
aas
scas
cmp
cdq
or
mov
movs
adc
rcl
test
dec
xor
loopne
leave
repnz
dec
mov
outs
push
sub
jmp
and
sub
cwde
and
jp
std
push
add
jnp
sbb
push
retf
fwait
jns
das
pusha
xchg
imul
push
test
add
ins
pop
scas
pop
push
cwde
mov
in
fs
(bad)
jae
icebp
xchg
aad
int
sbb
(bad)
adc
jmp
fisubr
jge
arpl
adc
jmp
push
mov
ret
int3
cmp
in
xor
jecxz
test
sbb
xor
jg
inc
mov
(bad)
cli
mov
or
(bad)
fcomip
mov
sbb
and
push
mov
inc
ins
adc
push
or
jbe
sbb
jl
dec
loope
adc
mov
adc
cmp
dec
in
and
xchg
adc
call
in
pop
ins
adc
mov
or
jmp
or
repnz
mov
add
xchg
shr
mov
xlat
(bad)
int3
adc
and
std
mov
or
cli
mov
dec
pop
cwde
xchg
jmp
xchg
sub
out
cmps
out
add
pop
cmp
scas
inc
and
pop
inc
sub
lock
popa
add
lea
nop
and
retf
scas
xchg
sbb
int
out
test
in
shr
xchg
and
xor
xor
xor
ins
adc
dec
adc
push
ins
addr16
and
hlt
adc
ja
int
mul
lock
clc
dec
mov
add
mov
test
out
and
pop
lods
sub
test
push
pop
mov
sahf
iret
mov
les
push
nop
fcmovnbe
xor
dec
xlat
aas
add
jle
jmp
sbb
sub
scas
imul
sbb
xlat
adc
pusha
loope
mov
sub
jecxz
push
sub
call
adc
loop
mov
in
ret
adc
cwde
dec
dec
fs
jbe
pop
push
aam
cld
mov
mov
(bad)
mov
sub
pop
and
imul
mov
movs
in
inc
add
daa
mov
fst
rol
sbb
xchg
jae
retf
jp
adc
mov
mov
xchg
popf
sub
add
mov
sahf
xor
fs
jle
jb
xchg
mov
push
xchg
lds
ins
xor
dec
aam
addr16
pop
pop
jno
nop
imul
mov
push
ds
pop
sbb
sbb
push
stc
jbe
mov
xor
xchg
pop
adc
ss
xor
mov
sub
cmp
lds
pop
jge
shld
jae
pop
and
dec
gs
outs
push
lods
sub
push
cmovp
adc
mov
xchg
mov
xchg
(bad)
loope
pushf
fdivr
sbb
mov
aam
sbb
jo
push
(bad)
les
sbb
push
mov
retf
stos
imul
ins
mov
clc
inc
imul
mov
addr16
add
fdivr
cmp
repz
mov
push
cs
cmc
mov
lahf
jne
(bad)
inc
aaa
cli
jo
xor
nop
inc
cmp
enter
mov
fistp
aaa
shr
mov
xor
mov
push
iret
adc
mov
nop
test
cmps
bound
jmp
cs
add
lods
adc
pop
pop
ss
int3
mov
leave
lock
shl
jo
repz
jne
cwde
call
push
and
fs
push
aad
pop
adc
nop
push
(bad)
cdq
jae
inc
sub
xor
sub
xor
into
cdq
mov
into
and
xchg
data16
fcomp
pop
inc
pop
inc
iret
jae
cli
movs
xchg
mov
mov
mov
jmp
pusha
inc
and
inc
mov
or
cmp
dec
lods
cld
xor
arpl
scas
int3
mov
inc
adc
push
and
push
jo
mov
ss
sbb
ror
call
jmp
data16
jl
stos
repnz
jns
or
pusha
test
adc
adc
das
nop
ja
xor
add
cmp
repz
mov
cld
test
ja
pop
pushf
inc
inc
lea
mov
test
sub
loope
dec
xchg
adc
ret
and
sub
mov
cmp
jmp
loope
inc
in
jp
or
pop
sub
jg
mov
fstp
nop
ins
and
in
mov
dec
ins
dec
xor
dec
sub
and
jno
xchg
xor
inc
jb
test
movs
hlt
cmp
or
mov
stc
inc
cmps
push
sahf
xlat
cmps
mov
mov
icebp
xchg
sub
outs
jb
jmp
inc
fld
xchg
push
push
stc
dec
mov
ret
cli
inc
jle
sub
sub
xor
std
dec
mov
and
lahf
aam
mov
or
sbb
mov
mov
ins
jge
cmp
addr16
(bad)
mov
cmp
mov
pusha
mov
sub
pop
das
and
push
jo
(bad)
es
lods
add
jnp
mov
push
(bad)
jl
and
push
in
sub
les
push
push
mov
addr16
sbb
or
test
mov
dec
mov
sub
(bad)
sub
call
test
mov
pushf
adc
jle
mov
sbb
loopne
jmp
xchg
mov
pop
xchg
cmp
sbb
xor
cmp
mov
stos
sub
div
cmps
push
jae
sbb
inc
pushf
int
mov
push
out
jnp
lods
sub
outs
pop
or
scas
xchg
add
push
fstp
ret
xchg
jae
dec
sbb
(bad)
cwde
or
push
cmc
xchg
xor
fldenv
inc
inc
sub
push
daa
out
pmaxub
arpl
(bad)
es
and
(bad)
add
sbb
dec
mov
aas
sbb
bsr
dec
cmps
cmp
cmp
pop
leave
sub
mov
enter
ret
jle
sti
sub
cmp
in
loope
ins
xchg
(bad)
fld
mov
dec
pop
cmc
or
inc
sbb
xor
sub
cmp
xor
xchg
pop
aas
enter
mov
pop
xor
stos
xor
mov
fist
pop
test
(bad)
test
cmp
add
bound
int3
mov
loopne
iret
mov
loop
ins
fdiv
xor
sahf
lods
test
sub
(bad)
fisub
cs
leave
pop
out
imul
mov
adc
xchg
fsubr
xor
dec
add
mov
in
xor
imul
jns
pop
and
movs
mov
push
loop
push
fldenv
and
test
cmp
jmp
call
mov
lds
pop
push
(bad)
arpl
cmp
pop
je
jmp
pop
mov
pusha
cmp
mov
popf
test
cmp
(bad)
mov
repnz
fnstenv
mov
or
shl
fist
dec
cmc
dec
inc
in
ins
mov
sbb
or
scas
push
inc
es
icebp
push
xor
and
xchg
sbb
scas
cmp
pushw
xor
cdq
jle
dec
pop
mov
cmp
xor
ret
sub
cli
test
ins
imul
in
jmp
fidivr
mov
movs
push
adc
sub
inc
xor
lahf
iret
jne
push
inc
or
push
add
xchg
xor
pop
sbb
lods
dec
and
xchg
outs
sbb
shr
inc
lea
aam
dec
push
xor
mov
nop
int3
xchg
cmps
adc
nop
pop
mov
jb
xchg
retf
cmps
mov
xor
jl
xchg
imul
mov
cmp
clc
adc
push
and
scas
add
rcr
and
mov
or
xchg
push
push
in
xchg
lods
xchg
outs
inc
ja
cs
cmp
popa
into
cmp
icebp
imul
sub
push
cmp
cli
cmp
jnp
int3
stos
mov
jg
outs
or
aad
jae
js
or
cmp
pop
xor
pop
adc
fdivr
dec
mov
shl
or
mov
int3
dec
push
in
jle
sub
test
adc
fcom
ja
pop
inc
jp
inc
push
push
sbb
bswap
repnz
(bad)
lods
mov
push
xchg
imul
or
xchg
pop
push
mov
xchg
cmp
pop
int
cmp
inc
xor
jmp
fnstsw
lock
adc
jp
pop
mov
mov
or
pop
es
pop
mov
push
adc
neg
mov
mov
xchg
jge
stc
push
hlt
into
xor
xor
aam
icebp
mov
adc
outs
int
imul
gs
add
pop
add
fisttp
repz
lds
pop
mov
xchg
xor
inc
(bad)
clc
jns
mov
jnp
rol
jmp
sub
retf
add
sbb
inc
dec
mov
push
push
push
retf
rcr
icebp
sbb
xor
jno
push
inc
pop
push
das
loop
inc
(bad)
push
int
mov
sbb
lods
out
xchg
jns
cld
push
and
jmp
pop
cmps
mov
or
jmp
jns
or
icebp
mov
(bad)
dec
sbb
rcr
inc
pop
xchg
fild
pusha
into
xor
cwde
gs
in
fldenv
mov
sar
jno
mov
retf
mov
mov
test
mov
(bad)
xchg
mov
xor
cmp
or
mov
fwait
stc
sub
mov
sti
jecxz
fisttp
shl
(bad)
xor
retf
jle
xlat
jmp
xchg
or
sahf
(bad)
xor
pusha
xlat
fwait
retf
aas
jge
add
pop
add
adc
popa
sti
mov
repz
repz
jg
ret
cdq
loopne
lahf
mov
mov
inc
icebp
xor
scas
fisttp
dec
int3
out
push
xor
inc
icebp
jmp
aas
mov
lds
call
sbb
loopne
sbb
xchg
mov
scas
mov
enter
int3
inc
xchg
mov
aaa
lods
ret
push
dec
xor
pop
(bad)
sbb
jno
int3
cmp
aas
xchg
fldenv
cmp
inc
ds
aad
pop
jg
stos
cs
and
aad
arpl
mov
(bad)
cs
(bad)
sub
stc
icebp
(bad)
ins
je
mov
out
or
or
mov
mov
bound
nop
lea
xor
fldenv
xor
cmp
xchg
out
inc
lahf
mov
push
push
mov
mov
xor
or
and
das
into
test
dec
movs
int
scas
and
dec
cmp
push
mov
stos
jnp
into
stos
sbb
mov
mov
cld
loopne
and
es
xlat
in
scas
lds
pop
xor
ret
mov
jo
pop
mov
inc
mov
push
pop
dec
daa
xor
jno
aas
out
and
cmp
leave
mov
push
mov
cmp
mov
xor
lds
in
dec
outs
mov
cmp
sbb
and
or
push
aad
mov
cmps
xchg
clc
rcr
xlat
sbb
adc
sub
dec
jo
xchg
dec
mov
mov
aam
sbb
cs
or
pop
inc
ss
pop
(bad)
mov
movs
xor
je
daa
sub
add
retf
mov
out
mov
cwde
int3
lock
mov
xchg
ja
lods
jle
mov
jmp
and
sub
xor
adc
adc
loopne
inc
nop
add
mov
and
pop
es
mov
add
inc
inc
adc
push
add
jg
rcl
rcr
adc
sub
sbb
push
and
and
lods
jmp
add
sub
mov
(bad)
lahf
bound
clc
mov
cmp
(bad)
mov
fstp
mov
sub
push
outs
adc
aaa
mov
and
dec
imul
addr16
in
jl
add
call
pusha
call
loope
aad
jb
stc
cmp
sti
inc
cli
xor
xor
or
ret
std
imul
popf
mov
es
test
fcomp
sti
jecxz
int3
jp
adc
add
lea
cld
jb
lods
in
sbb
arpl
push
pop
cmp
pop
loope
ja
das
mov
sub
dec
cwde
xchg
sub
icebp
stos
nop
or
mov
push
xlat
xchg
ror
dec
sbb
jle
jl
mov
xchg
cdq
pop
dec
es
outs
fnstenv
dec
cmp
fnstenv
out
mov
dec
setae
jmp
shl
call
xchg
repz
in
pop
outs
arpl
pop
test
call
gs
hlt
mov
(bad)
std
icebp
jo
lahf
ins
inc
ss
outs
cld
jne
push
cmps
ss
ficomp
mov
push
aad
adc
in
(bad)
out
add
pop
mov
sub
mov
inc
or
and
mov
es
cmc
xlat
shl
stc
sbb
out
ret
xchg
jb
dec
in
jns
dec
or
das
cmc
cmps
xor
cmp
xchg
pop
cmp
xchg
cdq
(bad)
jge
jne
in
sbb
inc
mov
out
or
jb
jno
adc
bound
mov
pop
in
out
jns
pop
push
loop
fldcw
xchg
movs
sub
imul
push
mov
call
jb
ins
cwde
shl
int
iret
loop
(bad)
xor
stc
add
push
ds
and
out
mov
outs
js
mov
in
push
pop
xor
xchg
and
xchg
pusha
cmp
ret
retf
aaa
sub
icebp
xchg
outs
int
fwait
mov
push
pop
dec
ds
inc
push
add
addr16
mov
mov
js
in
or
mov
ss
fwait
sub
sbb
cdq
test
jmp
adc
(bad)
fidivr
mov
test
stc
inc
push
jle
jb
mov
pop
and
push
fucom
(bad)
test
or
std
cs
mov
test
mov
push
adc
stc
not
ret
xchg
and
fld
ficomp
adc
and
ja
scas
pop
sbb
std
jno
sub
cmp
jb
loopne
push
loope
pop
push
cmc
pop
and
addr16
cmp
retf
xor
push
mov
xor
es
dec
shl
mov
call
inc
mov
int3
cmp
pop
xor
add
add
adc
mov
sub
pop
mov
icebp
mov
jae
clc
nop
xchg
arpl
sbb
jmp
sub
add
lods
shr
inc
stc
sbb
cli
add
adc
xchg
adc
adc
xlat
xor
cmp
loope
jbe
and
idiv
out
add
lods
dec
(bad)
fstp
inc
icebp
dec
sbb
adc
adc
arpl
jmp
out
daa
push
out
retf
xchg
into
into
fiadd
mov
ins
lods
push
loopne
xchg
daa
pop
push
ss
ds
jns
inc
add
sub
mov
sbb
cmp
jecxz
aam
imul
(bad)
cmp
inc
aaa
xor
dec
jmp
aam
scas
xchg
ins
and
mov
pushf
cmp
popf
les
sbb
adc
mov
movs
ins
test
mov
and
pop
imul
jecxz
inc
test
fstp
lahf
dec
add
sar
dec
movs
mov
mov
addr16
mov
xchg
inc
jo
test
jo
adc
push
sub
jo
or
jbe
xchg
jle
nop
dec
pop
pop
xchg
sar
xchg
test
push
add
jae
push
mov
je
jnp
mov
xchg
int
and
shl
(bad)
xchg
rol
ror
gs
or
mov
call
pop
ret
rcl
add
inc
stos
scas
into
and
pop
call
out
pushf
adc
mov
jns
das
outs
add
sbb
xchg
cmp
cmp
psraw
and
mov
sti
dec
adc
add
lods
in
add
adc
and
mov
jecxz
addr16
jg
push
inc
pop
sub
xchg
push
mov
ins
out
mov
out
inc
ror
out
or
shr
mov
and
fidivr
(bad)
fimul
pop
mov
and
in
arpl
sub
lds
add
into
retf
test
lods
xchg
pop
rcr
test
dec
sub
sahf
and
in
sbb
adc
pop
ret
inc
inc
push
shl
add
rol
mov
into
cmp
xchg
shl
lods
xchg
icebp
call
adc
xchg
jne
cwde
dec
sti
outs
fsub
cmp
dec
jle
outs
xchg
les
pop
retf
or
in
dec
mov
call
pop
scas
retf
push
int
jo
loopne
mov
mov
lea
mov
idiv
xchg
sbb
jecxz
adc
lods
inc
push
adc
popf
es
test
pop
test
repnz
aad
mov
iret
mov
call
mov
repz
arpl
ficomp
mov
or
or
sub
aam
cmps
shr
dec
clc
mov
rcl
inc
rcr
std
fbstp
ins
push
out
xor
jns
xor
adc
sar
mov
addr16
and
es
data16
pushf
cli
loop
je
fdiv
sub
(bad)
imul
pop
nop
lock
rcr
inc
add
into
lock
into
es
pop
xchg
pop
(bad)
and
cmps
popa
rol
jecxz
imul
inc
adc
adc
jle
or
mov
mov
and
push
aaa
cli
or
mov
xchg
mov
mov
cmp
push
je
jl
(bad)
mov
mov
and
(bad)
mov
xor
sub
aam
mov
adc
cmp
add
inc
fimul
jl
mov
arpl
test
out
ins
imul
ret
jae
dec
mov
pusha
pop
test
aad
push
xor
test
rcr
mov
ss
sbb
xor
pop
inc
pop
(bad)
push
sar
rcr
ins
jge
scas
sti
pop
(bad)
jne
outs
xchg
cmp
movs
mov
pop
mov
les
aam
lods
fcom
les
cmp
stos
test
rcl
pop
jmp
mov
(bad)
push
ins
ja
push
jmp
pop
sub
in
inc
xor
add
ins
cmp
push
ja
sbb
mov
repnz
fwait
cmp
test
adc
(bad)
fimul
(bad)
sub
into
sbb
xor
imul
cmp
stos
loopne
aad
or
mov
stc
movs
inc
mov
ret
cmps
add
loope
test
dec
inc
shld
popa
push
stc
xor
dec
les
(bad)
inc
sbb
stc
sbb
test
fistp
in
stos
ror
sub
xchg
je
inc
jp
jg
fisubr
sub
push
scas
adc
dec
inc
(bad)
in
xchg
mov
(bad)
adc
clc
out
jae
mov
and
or
hlt
lock
jno
adc
pop
push
in
div
dec
pop
dec
or
les
in
repnz
push
jp
pop
pop
mov
in
mov
out
loope
jno
cwde
dec
outs
enter
and
sub
sub
out
das
jo
adc
into
and
mov
inc
sbb
sti
fiadd
enter
add
mov
push
mov
mov
outs
cmp
mov
stc
cmp
jne
xlat
mov
mov
cmp
inc
inc
cmps
shl
jp
dec
sub
mov
push
mov
lea
ret
(bad)
dec
xchg
stos
adc
call
sbb
adc
inc
adc
jbe
sbb
in
retf
out
mov
rcl
mov
cmovns
lock
lods
enter
pop
mov
shr
adc
jecxz
(bad)
(bad)
lahf
mov
sar
data16
or
push
push
sub
jle
sub
jle
into
inc
jo
test
jnp
or
call
lods
pop
das
and
xlat
lock
push
and
sar
pop
inc
es
or
fwait
push
cmp
fiadd
pop
mov
inc
shl
pop
cmps
and
repz
xchg
lea
jp
cvttps2pi
loopne
inc
jl
loop
data16
cmp
repz
pusha
int3
push
jmp
xor
dec
jne
test
or
das
cdq
dec
xor
mov
fcom
ficom
gs
cmp
(bad)
xor
in
jo
outs
fmulp
cli
imul
int
je
sub
imul
pop
(bad)
jle
imul
addr16
xchg
stos
inc
cmp
movs
ror
inc
push
stos
retw
jo
jmp
jo
fidiv
call
pop
and
cli
movs
ds
mov
popf
dec
pop
dec
or
cmc
and
sbb
into
mov
xor
add
adc
arpl
sbb
xchg
fs
clc
push
adc
aas
call
test
jge
xor
sti
and
cmp
push
mov
sti
pop
packuswb
sbb
data16
(bad)
enter
outs
jp
in
(bad)
sub
xchg
add
push
ins
adc
xlat
xor
xchg
(bad)
push
aas
jecxz
push
in
xchg
pop
mov
mov
add
(bad)
mov
mov
imul
(bad)
ds
mov
lods
(bad)
sbb
push
and
jae
dec
dec
push
lds
cmp
sbb
adc
neg
xlat
mov
or
clc
adc
je
(bad)
dec
sti
sub
fcomp
inc
aam
loopne
sbb
push
aas
pop
lock
dec
add
ins
stos
mov
cli
lods
popf
xchg
mov
(bad)
sub
or
pop
jp
mov
mov
leave
jle
mov
mov
in
sahf
cmp
outs
imul
sbb
mov
shl
mov
mov
out
sbb
lahf
inc
inc
jno
mov
add
cld
inc
dec
pusha
push
lea
mov
mov
loope
mov
add
xor
add
enter
xchg
adc
mov
pop
iret
push
test
jae
cmp
xchg
xor
jb
ret
jne
mov
pushf
(bad)
or
sbb
push
rcr
inc
pop
in
mov
pop
rol
mov
xchg
xor
or
call
push
pop
sub
dec
push
pusha
xchg
in
scas
dec
adc
mov
jl
jmp
sbb
icebp
mov
dec
and
int
dec
xchg
imul
pop
cmova
iret
jnp
mov
repz
daa
inc
sub
push
mov
scas
sbb
jne
jge
push
leave
js
xor
xchg
push
pop
pop
jnp
aas
jmp
shl
adc
cmps
sub
call
mov
mov
ret
xor
xchg
ins
mov
daa
mov
sub
mov
aaa
add
inc
ret
mov
add
lods
fistp
pop
sti
dec
psubsb
stc
(bad)
and
lahf
xchg
adc
cmp
test
mov
mov
(bad)
lahf
loope
push
mov
mov
jnp
mov
xchg
mov
aam
cmp
inc
mov
jmp
pop
or
retf
or
mov
call
adc
lea
mov
retf
or
jmp
jnp
add
arpl
mov
clc
(bad)
outs
or
sbb
or
pop
xlat
cmp
scas
jp
mov
data16
pop
retf
sub
fldenv
sub
scas
mov
addr16
fs
xor
jmp
sbb
or
hlt
mov
fimul
adc
or
mov
mov
adc
ficomp
scas
leave
pop
fsubr
mov
mov
int3
mov
xlat
jmp
je
mov
stos
mov
sbb
shr
cmp
mov
adc
cmc
xor
push
in
jecxz
mov
loopne
outs
sub
sub
sti
mov
push
(bad)
sbb
mov
cmp
cmp
aaa
scas
and
cmps
adc
jle
jge
loopne
or
adc
movs
mov
pop
jnp
and
xchg
in
or
call
push
fs
enter
movs
jns
in
dec
jbe
stos
mov
dec
(bad)
xchg
mov
xor
das
add
mov
lahf
cmp
push
(bad)
rcl
jg
mov
bound
test
push
cmp
jmp
es
fimul
and
mov
lahf
fistp
aam
in
shl
bound
ins
sbb
sub
cdq
pop
imul
cmps
or
mov
aaa
call
call
out
aas
(bad)
adc
pop
mov
clc
mov
mov
or
mov
mov
imul
scas
sbb
pop
inc
dec
pop
outs
or
mov
cdq
inc
jns
ret
repz
fild
gs
inc
frstor
in
lds
sub
out
sbb
or
rol
(bad)
aas
div
int
gs
sbb
sti
clc
mov
dec
and
arpl
jmp
rol
mov
xchg
out
call
jno
cmp
add
jns
jbe
push
lock
add
les
dec
push
xor
fild
in
and
outs
pop
inc
xchg
imul
pop
sbb
pop
fisubr
outs
pop
in
mov
pop
jg
js
sbb
das
or
js
xor
in
cmp
out
aaa
cmps
rol
cmp
add
ins
shl
xchg
js
mov
in
int3
jmp
jno
xchg
jbe
data16
jb
dec
pop
jae
pop
outs
push
pop
outs
xor
dec
sbb
add
call
jmp
push
xor
sub
retf
inc
and
add
ds
adc
jp
mov
cmps
or
js
scas
int
add
pop
push
data16
push
rol
sbb
xchg
lods
or
icebp
fs
sbb
mov
and
xchg
scas
lahf
ins
int
aad
fist
cwde
and
sbb
inc
xor
jl
lldt
iret
cmp
jle
pop
xor
ror
mov
xor
mov
mov
imul
stos
pop
push
movs
sbb
fistp
or
loope
push
fsub
scas
cmp
push
lods
push
ins
xchg
sar
or
div
pop
xchg
aad
xor
adc
sub
add
and
mov
jns
mov
das
mov
inc
push
add
fwait
lods
push
stc
cmp
mov
push
js
mov
mov
retf
dec
bound
jb
(bad)
xor
test
xor
push
pop
mov
cmc
pushf
sbb
dec
mov
bound
test
jg
cmp
ror
sbb
lods
cmps
popf
out
jmp
push
scas
xchg
xchg
imul
fwait
pop
sbb
cmp
sub
sbb
add
sar
push
fninit
add
(bad)
iret
arpl
xchg
and
fld
bnd
mov
sub
stos
in
sti
sub
mov
pushf
sar
out
out
cld
dec
movs
or
stos
clc
adc
sbb
push
xchg
enter
xchg
jg
or
mov
(bad)
fldlg2
mov
mov
out
fnstsw
adc
push
test
or
mov
dec
adc
cmps
mov
adc
leave
ja
neg
(bad)
in
mov
inc
ret
mov
push
pop
add
mov
xor
stc
inc
push
mov
cmp
and
movs
inc
scas
cmp
in
sbb
(bad)
mov
mov
push
(bad)
and
stc
jge
cmp
fimul
ins
(bad)
fbstp
pop
and
mov
mov
xor
cmove
push
pop
inc
sbb
loope
or
mov
mov
int3
xchg
imul
lea
and
mov
xor
sbb
test
jmp
arpl
in
pop
jnp
and
test
in
pop
mov
int3
sbb
cs
sti
pop
bound
push
test
mov
in
adc
and
xor
mov
and
not
daa
mov
pusha
dec
sbb
inc
and
(bad)
fiadd
cs
push
aaa
push
or
push
mov
clc
ret
inc
push
shl
and
or
cwde
sbb
shl
or
inc
mov
aas
sub
jmp
ss
pop
jne
sbb
data16
jne
adc
loop
jno
dec
imul
adc
(bad)
retf
rcr
push
pop
popa
lea
pop
jo
shl
pop
daa
fwait
mov
xchg
mov
adc
and
adc
push
sub
push
sub
cmp
add
jne
test
cmps
in
jne
hlt
rcr
jns
inc
push
ds
pop
std
adc
add
stos
stc
dec
inc
jmp
xor
movs
dec
or
je
jg
out
arpl
loopne
iret
xor
mov
sbb
dec
pop
mov
icebp
dec
sbb
mov
lods
add
mov
jbe
dec
xor
icebp
enter
cmp
mov
jp
neg
mov
call
loope
mov
inc
push
lea
ds
fwait
div
out
jp
and
or
xor
ins
jb
js
test
mov
lods
cmp
pop
cs
pop
push
mov
xor
jne
inc
sbb
in
bound
mov
xchg
or
inc
iret
sub
or
jge
sbb
jnp
imul
cmps
push
or
and
dec
inc
sbb
test
or
stos
mov
mov
and
or
inc
shr
loope
add
mov
jge
xchg
xor
sub
enter
push
cmps
dec
imul
add
inc
or
mov
adc
(bad)
rcl
sbb
xchg
loop
dec
scas
jb
shl
nop
cmp
test
add
xor
push
jge
je
fstp
inc
sahf
fsubrp
adc
test
xor
mov
push
sub
add
xchg
in
dec
and
sub
pop
repz
test
mov
leave
dec
jp
dec
int
dec
push
addr16
ret
(bad)
mov
rcl
add
inc
out
imul
hlt
push
cmp
and
cdq
(bad)
div
(bad)
mov
xor
lea
clc
cmp
xchg
rcl
adc
xor
cli
push
sub
lahf
stc
pop
shr
adc
and
ins
shr
xchg
mov
test
(bad)
jp
test
mov
mov
test
out
adc
seto
call
test
sbb
bound
popa
jnp
cmp
out
mov
mov
mov
retf
mov
test
cmp
or
xchg
xchg
and
sub
out
xchg
xchg
pop
rcl
pop
dec
jl
adc
xchg
mov
push
mov
xchg
mov
out
call
add
sub
mov
test
add
jno
rcl
xchg
xchg
jne
neg
mov
mov
xchg
iret
(bad)
sbb
mov
bound
nop
imul
ss
pushf
pop
dec
xor
jae
cmps
popa
mov
div
or
in
mov
mov
ror
imul
add
xchg
xchg
aas
jo
loope
jmp
sub
in
cmp
imul
aam
mov
add
out
xor
sbb
jle
pop
cs
pop
xchg
shl
cmp
push
jb
jnp
jecxz
or
inc
mov
and
mov
sub
adc
xchg
add
test
leave
xchg
jl
cs
popf
scas
pop
xchg
call
xrelease
mov
lock
aad
mov
(bad)
aam
int
push
icebp
dec
sbb
aam
aam
into
mov
or
addr16
pop
adc
cmp
pop
jp
hlt
ins
jmp
sbb
cmp
mov
inc
mov
test
out
xlat
cdq
ins
out
push
jbe
xchg
sbb
cwde
adc
icebp
or
xchg
dec
cdq
push
cs
and
jl
enter
ret
popa
loopne
push
xchg
out
jmp
jo
mov
ficom
mov
add
mov
mov
inc
xor
inc
bound
jo
sbb
popa
sbb
mov
inc
jl
(bad)
(bad)
adc
inc
iret
mov
or
inc
lods
jle
fwait
das
icebp
add
mov
call
sbb
sub
mov
mov
mov
call
fcom
sbb
mov
dec
jb
jnp
test
lods
(bad)
jg
stc
retf
mov
pop
in
ret
daa
ror
xor
pop
ror
or
ss
or
retf
arpl
in
std
xchg
es
data16
(bad)
inc
(bad)
push
and
pop
dec
test
rol
aam
or
ins
fndisi(8087
and
xchg
cmp
adc
jne
mov
push
(bad)
sub
pop
xor
aas
jno
fmul
retf
inc
call
push
mov
adc
(bad)
lahf
lds
pop
nop
movs
adc
dec
xor
pop
sub
cmp
popf
(bad)
lahf
push
lock
cmc
xor
bound
push
add
stos
aad
or
shl
or
mov
inc
cmc
fldenv
movs
push
pop
mov
mov
and
aam
cs
sub
inc
cmp
repz
xchg
repnz
icebp
xchg
dec
in
push
or
lds
xor
(bad)
pop
xor
mov
mov
sbb
rcr
mov
out
cmp
add
xor
xchg
cmc
push
sbb
arpl
xchg
xor
dec
shl
fild
fbstp
pop
fcom
xchg
sub
mov
je
in
dec
outs
xor
or
and
jge
mov
imul
cmps
in
cmp
js
es
test
and
add
pop
push
std
sub
xor
adc
sub
xchg
inc
stos
lahf
push
and
or
mov
dec
cdq
xchg
(bad)
stos
out
cwde
mov
sub
push
repz
or
leave
mov
sbb
mov
sub
(bad)
pop
lds
in
mov
mov
cmp
cwde
jno
sub
iret
loope
and
(bad)
je
push
jae
and
jmp
dec
xchg
jmp
aas
push
retf
(bad)
ss
fcom
lahf
arpl
test
dec
repz
dec
jmp
aam
sbb
lea
mov
in
stc
stos
(bad)
(bad)
mov
je
hlt
jl
mov
push
icebp
ror
pop
lods
mov
cwde
fidivr
(bad)
cld
xlat
jge
mov
xchg
jae
fcom
cmp
outs
fsubp
add
sbb
cs
jae
or
jnp
inc
test
out
inc
hlt
add
out
add
xchg
cmp
xor
dec
std
mov
cmps
dec
jae
push
enter
xchg
and
mov
adc
and
sar
fdivr
and
popf
inc
cli
movlps
cwde
mov
mov
call
cmp
xchg
(bad)
pop
inc
in
ds
ror
leave
add
dec
sbb
mov
xchg
mov
fcmovnu
aas
xor
dec
(bad)
movs
lds
add
dec
shr
sub
push
jecxz
(bad)
pop
stos
push
out
cmp
pop
inc
js
pop
(bad)
sbb
mov
fs
cmp
scas
daa
aad
ds
out
jge
jmp
fcomp
inc
retf
pop
hlt
pop
inc
movs
in
les
or
jo
cmp
dec
cmps
ja
xchg
pop
inc
inc
call
adc
xchg
mov
xor
jb
(bad)
loope
test
cli
mov
mov
and
inc
(bad)
sub
sub
not
test
and
mov
cwde
ss
mov
sub
ret
jb
mov
loopne
call
mov
jl
cmp
xor
movs
cmps
sahf
dec
jbe
add
push
mov
je
sub
jae
xor
mov
xor
retf
or
jecxz
xchg
aad
aam
add
ret
mov
jne
test
or
cli
out
ret
push
mov
test
icebp
ins
xchg
cvtps2pi
out
push
xchg
ret
sahf
js
mov
ror
jmp
jp
mov
fnsave
add
addr16
mov
fsubr
dec
cmp
(bad)
cmp
and
sar
fs
inc
ins
xchg
clc
rol
cmp
cmp
test
pusha
sbb
inc
sbb
pushf
xchg
cmps
test
and
push
mov
push
sar
pusha
add
mov
inc
imul
jl
add
movs
(bad)
inc
push
repnz
pop
repnz
rcl
das
and
and
clc
sub
mov
pop
sbb
and
(bad)
hlt
cli
adc
mov
mov
adc
push
shl
dec
cmp
mov
xchg
inc
sar
ror
(bad)
xor
xchg
cmp
pusha
out
enter
inc
pop
scas
push
adc
inc
pop
cmp
mov
je
imul
add
xor
add
push
xor
pop
jl
mov
sti
cmp
imul
fstp
sar
jmp
ficomp
(bad)
(bad)
adc
fs
ret
mov
into
int
(bad)
test
xchg
jae
pop
aam
repz
add
dec
shl
addr16
xchg
inc
mov
cmp
out
add
(bad)
cmp
push
in
or
jbe
sbb
loop
test
jb
mov
cmp
call
aaa
movs
jp
xor
cmp
int
mov
gs
sahf
xlat
or
cmp
xchg
inc
test
and
outs
ja
data16
add
mov
jnp
sub
sub
or
popf
push
mov
mov
mov
dec
sub
retf
dec
jmp
(bad)
icebp
xor
neg
sahf
jns
out
outs
clc
inc
in
mov
xor
ret
(bad)
div
mov
ret
mov
push
cmp
pop
sub
(bad)
out
imul
ret
jge
mov
mov
mov
cdq
mov
sahf
cs
inc
adc
aad
xchg
inc
call
xchg
xchg
pop
and
sub
cmp
jg
or
loope
dec
aaa
jg
dec
les
mov
loopne
mov
cmp
mov
mov
cmp
sub
adc
adc
rcl
mov
stos
clc
sbb
scas
pusha
dec
dec
in
nop
xchg
and
fwait
jo
sub
aam
mov
push
sbb
push
sub
jae
xchg
cmp
mov
adc
pop
push
and
cwde
arpl
adc
jmp
test
outs
les
retf
lods
gs
hlt
dec
(bad)
sbb
cmp
ins
push
xlat
inc
dec
rcl
clc
aam
mov
in
dec
jo
pop
mov
int3
xchg
sbb
bound
pop
push
mov
int
mov
shld
scas
ror
mov
sub
mov
add
jl
mov
or
pusha
(bad)
inc
inc
test
cmc
pop
pcmpgtd
repnz
dec
imul
sub
(bad)
sbb
in
adc
ss
enter
dec
mov
pop
push
xchg
mov
sub
push
pop
(bad)
xor
pop
or
xor
jl
fcom
sbb
push
(bad)
mov
test
scas
js
xchg
add
adc
jmp
je
mov
pushf
mov
syscall
or
lock
pop
dec
jge
popf
sub
sub
xor
mov
mov
mov
ja
call
std
or
repz
push
mov
and
icebp
adc
cmps
loope
sub
jbe
retf
pop
sti
outs
mov
inc
xchg
stc
inc
lock
jo
fs
ret
fsub
fdivr
or
sbb
mov
popf
mov
lock
lock
jbe
xchg
sbb
jmp
xor
adc
jge
push
mov
cmp
movs
fnstcw
cmp
(bad)
aaa
jl
or
push
fwait
mov
xchg
shl
movs
add
push
mov
mov
add
retf
fcmovnu
add
jecxz
repz
repz
fstp
jl
scas
pop
add
arpl
xchg
or
ret
pop
push
icebp
pop
std
(bad)
jnp
xchg
mov
fcom
pop
jbe
and
ins
or
push
cs
or
pop
mov
xchg
aam
inc
repz
ds
sbb
in
mov
adc
add
shl
popa
mov
movs
bound
out
js
mov
aam
mov
jecxz
cdq
jmp
dec
mov
mov
lock
mul
loop
movs
sub
xor
xor
adc
pop
test
inc
add
pop
add
es
mov
dec
add
adc
xchg
enter
inc
add
mov
in
fcomp
mov
and
dec
push
rol
retf
inc
out
or
mov
dec
push
std
icebp
mov
jne
push
jp
jb
pop
xor
push
sbb
in
call
mov
repz
bound
mov
inc
imul
(bad)
and
rcr
call
sub
ret
icebp
cwde
scas
sti
fadd
xchg
sub
test
inc
outs
add
les
call
sub
sub
dec
mov
clc
retf
sbb
addr16
cmp
sbb
fucom
cdq
push
mov
mov
(bad)
mov
(bad)
iret
pop
lods
jle
dec
or
lds
push
adc
mov
movs
mov
lahf
adc
add
inc
add
xor
test
mov
pop
pop
push
(bad)
call
stos
mov
adc
push
xor
sti
mov
ja
xchg
jg
or
test
push
mov
imul
xchg
mov
mov
pop
inc
push
sar
jno
repnz
in
loop
mov
fist
shl
push
cli
mov
fild
clc
dec
hlt
inc
retf
pop
push
lods
ss
cwde
adc
push
jmp
fsubr
mov
pop
aas
mov
call
in
aad
test
out
test
popf
stos
push
sti
popf
pop
neg
stos
add
test
iret
sbb
lods
xchg
mov
enter
sbb
add
sbb
(bad)
fdiv
loopne
pop
fs
sti
addr16
push
xor
mov
dec
in
ret
jo
inc
imul
xchg
mov
mov
inc
sbb
jbe
mov
pop
add
inc
ret
push
mov
loop
jbe
jecxz
xor
icebp
pop
dec
nop
or
(bad)
imul
sub
inc
call
xchg
push
pop
scas
test
stos
mov
(bad)
imul
pand
jmp
aaa
push
pop
sub
cld
sbb
imul
jb
and
and
iret
mov
fsubr
pop
mov
pop
xor
jp
jne
bound
stc
stos
(bad)
adc
or
cs
dec
sbb
out
add
jmp
fwait
cmp
out
add
mov
imul
sub
sahf
mov
cmp
jecxz
test
popf
adc
leave
xchg
not
iret
inc
xlat
leave
fs
fild
test
cmp
vsqrtps
sub
int3
enter
jle
add
shl
xor
dec
ds
inc
outs
scas
dec
inc
dec
lock
and
sbb
xor
sahf
movs
sbb
push
jecxz
rcr
inc
mov
sbb
(bad)
jne
jg
shl
add
add
cwde
jmp
stos
dec
lods
je
add
scas
xchg
cmp
enter
fcmovnb
into
fcomp
aad
pop
cli
imul
lods
fld
inc
mov
test
xor
movs
cmp
cmps
add
call
jg
test
xor
adc
or
inc
or
movs
addr16
adc
fadd
test
push
je
imul
pop
or
mov
shr
ds
and
xchg
sub
cwde
call
or
lods
jbe
xchg
add
pop
retf
inc
shl
sub
or
mov
repz
sbb
daa
push
shr
mov
or
sar
mov
mov
pop
jmp
xor
aam
xor
xchg
xor
int
sbb
xchg
imul
sar
jae
mov
in
call
xor
sub
ret
push
dec
jge
out
add
mov
inc
cmp
fld
mov
inc
lock
inc
rol
xchg
xor
xchg
add
rol
adc
mov
sub
ret
arpl
jns
xor
cs
je
mov
or
jmp
adc
mov
nop
xlat
mov
pop
inc
mov
mov
dec
xchg
outs
mov
arpl
mov
xchg
mov
cmp
loope
test
push
mov
add
movs
lods
jns
sub
mov
push
mov
push
jmp
lahf
(bad)
shr
add
adc
call
rol
inc
inc
(bad)
xchg
fcmovnbe
mov
jne
adc
mov
jg
sbb
push
repnz
imul
adc
outs
jbe
push
shl
repnz
fistp
(bad)
pop
(bad)
cli
jnp
leavew
pop
mov
sub
mov
ffreep
mov
mov
mov
arpl
in
stc
mov
xchg
or
(bad)
jnp
adc
test
or
aad
sbb
mov
pop
xchg
jge
imul
call
packuswb
xchg
jno
lods
pop
(bad)
mov
push
jbe
test
sub
jnp
mov
and
xchg
and
aam
scas
jp
out
clc
imul
mov
dec
cwde
inc
daa
mov
test
mov
inc
xor
outs
pop
ds
das
push
cmc
mov
mov
(bad)
iret
mov
pop
push
xchg
sub
jle
mov
push
imul
sub
aas
mov
clc
mov
jae
adc
test
dec
cli
gs
(bad)
cld
inc
mov
lods
sub
inc
xchg
mov
mov
aas
pusha
popa
mov
xchg
push
pop
mov
add
scas
hlt
pop
mov
or
fs
in
loop
xchg
adc
sub
fnstcw
stc
cmps
call
xchg
(bad)
mov
sub
sti
test
repnz
clc
dec
sub
xchg
ret
fstp
inc
xchg
out
int
lock
add
mov
jge
pop
cmp
in
cli
test
lds
out
call
push
mov
pop
not
cmp
cmp
lods
and
jae
jge
or
les
jns
addr16
cmp
xor
cld
dec
fadd
ror
hlt
mov
pop
xor
loop
jl
inc
imul
pop
pop
sbb
pop
rcl
push
xor
ret
xchg
xchg
sub
lds
and
in
repnz
xor
popf
jle
sbb
aad
cmp
push
pop
inc
ror
pop
imul
in
add
mov
ins
cmp
push
mov
push
in
mov
pop
xor
push
repnz
(bad)
pop
dec
mov
lods
xor
pop
inc
mov
dec
popa
rol
(bad)
and
xchg
xchg
out
sbb
pushf
gs
out
or
loop
xchg
dec
adc
sbb
and
movhps
in
adc
mov
es
jne
or
mov
push
mov
mov
int
xchg
jno
pushf
(bad)
loopne
fdivr
call
xchg
jbe
push
(bad)
cld
jno
push
push
push
dec
xchg
and
pushf
call
mov
cwde
mov
stos
sahf
pop
nop
mov
add
out
ret
push
mov
cmp
frstor
ins
sub
jnp
push
(bad)
(bad)
cmp
jns
adc
xchg
add
dec
(bad)
pop
lea
cmp
inc
cmp
arpl
(bad)
and
test
loop
fs
popa
mov
xor
dec
and
outs
das
xor
or
enter
inc
(bad)
lods
fcom
loop
adc
aam
movs
dec
mov
sbb
fstp
and
or
pop
jo
call
aaa
xchg
(bad)
lock
dec
loopne
and
ror
jb
and
cmps
push
js
and
or
out
and
mov
add
jae
ds
sar
stos
mov
inc
sub
scas
or
push
fnstcw
sub
fcom
mov
fisttp
pusha
loope
sub
xor
xor
mov
mov
pop
jecxz
xchg
pop
repnz
or
(bad)
test
std
outs
inc
(bad)
adc
ret
push
call
hlt
add
(bad)
rcl
fld
fidiv
retf
scas
push
dec
pop
dec
xor
and
push
jbe
cmp
call
inc
pop
leave
mov
dec
iret
cmp
es
fs
pop
pop
outs
sub
xchg
jl
scas
icebp
push
or
jbe
aaa
(bad)
cmc
dec
aaa
jp
fstp
ficom
int3
jnp
or
cwde
(bad)
mov
ins
add
cmp
add
stc
imul
sub
enter
sub
(bad)
fwait
lea
outs
xor
js
hlt
mov
jnp
nop
sbb
leave
sub
js
and
in
rol
aam
lods
fabs
ret
scas
xchg
test
dec
retf
lahf
bound
mov
test
outs
or
inc
jbe
test
push
push
cmp
retf
data16
push
adc
int3
xchg
std
test
dec
ja
adc
aaa
stos
or
push
xchg
push
add
adc
scas
push
ds
push
sub
mov
mov
xchg
or
mov
nop
ins
mov
scas
hlt
add
xchg
push
shr
outs
out
loopne
loopne
fnstsw
and
push
loop
mul
mov
cdq
(bad)
daa
add
adc
test
adc
fwait
dec
xor
outs
xchg
mov
fsub
repnz
cmp
inc
and
jle
in
pop
and
fcom
in
icebp
cwde
mov
mov
loopne
rcr
jbe
sbb
aas
aas
into
cmp
dec
in
dec
sbb
add
mov
inc
inc
and
inc
rol
fcom
or
adc
ins
cmp
jp
iret
dec
sar
cmp
je
sub
ins
mov
jg
adc
mov
mov
stos
dec
mov
aaa
or
repz
fild
leave
pushf
lods
std
xchg
movs
(bad)
cdq
inc
stos
xchg
mov
jl
sub
sub
dec
and
jne
dec
fmul
add
scas
sahf
call
pop
xchg
scas
hlt
mov
xchg
sub
shr
pop
and
xchg
call
inc
pushf
push
sub
jns
scas
xor
cli
adc
adc
sub
sbb
push
push
outs
sub
jns
ss
push
mov
gs
out
loop
mov
aam
stos
dec
push
jp
iret
cld
dec
mov
adc
fldenv
lahf
aaa
sub
test
mov
jns
cwde
dec
xor
pop
add
mov
cmp
and
hlt
pop
mov
mov
mov
push
call
(bad)
sub
out
fwait
mov
je
xchg
xchg
lods
shr
in
mov
cdq
jge
iret
inc
ffree
inc
pop
pop
aam
movs
xchg
and
sub
xor
jmp
jbe
mov
stos
aam
add
sahf
jl
in
mov
push
out
mov
jp
test
jmp
mov
into
mov
add
out
sbb
inc
shl
in
adc
mov
das
out
outs
outs
scas
xor
aas
pop
je
cdq
xchg
out
adc
push
push
std
in
cmp
and
icebp
and
out
add
xchg
aaa
mov
or
mov
or
jb
in
push
aaa
outs
sub
push
js
dec
cmp
js
pop
cmp
retf
aam
ret
stc
ret
inc
xchg
leave
gs
mov
hlt
retf
adc
pop
push
aaa
dec
adc
xor
jl
out
xor
add
mov
jnp
add
fild
loopne
lods
out
enter
xor
icebp
loop
outs
xchg
lahf
loopne
sar
retf
inc
jbe
lock
push
and
shl
mov
pop
adc
push
neg
(bad)
or
jmp
ins
adc
into
or
je
fisttp
mov
sbb
adc
ins
xchg
(bad)
(bad)
mov
das
xchg
retf
retf
adc
sti
inc
pop
xlat
(bad)
jle
cld
jae
dec
mov
gs
into
dec
shr
xor
ret
or
jne
lock
addr16
adc
jp
mov
sub
xor
push
addr16
fs
nop
lods
dec
movs
cmp
mov
in
call
cmp
sbb
rcl
out
add
add
jg
pop
xor
aas
std
jg
push
xchg
mov
(bad)
fistp
sar
mov
push
aad
(bad)
mov
aaa
lds
push
adc
fyl2x
mov
xor
mov
stos
or
adc
imul
xchg
fs
xor
jae
inc
add
retf
xchg
ja
call
jp
cmp
iret
cmp
dec
xor
std
xlat
mov
and
inc
push
sbb
(bad)
and
or
mov
dec
shr
inc
popf
jo
jne
sbb
sbb
lods
ret
xlat
sti
cdq
cmp
jne
stos
push
push
sub
into
dec
push
pushf
push
mov
and
sub
xchg
mov
inc
mov
ds
push
aad
or
inc
imul
stos
inc
cdq
inc
jg
mov
sub
ins
pop
shr
mov
mov
sbb
outs
aas
inc
xchg
push
mov
cmps
cmp
fdiv
imul
push
jmp
cvttps2pi
std
test
mov
int3
or
sbb
and
jge
gs
cwde
dec
call
adc
fucomi
xor
aas
dec
aaa
ret
add
icebp
mov
fisttp
jae
scas
jo
add
mov
or
or
mov
es
pop
imul
dec
sub
mov
mov
inc
add
stos
xchg
inc
out
pop
pop
addr16
idiv
outs
jmp
cdq
sar
scas
imul
not
mov
cld
add
das
in
fsubr
or
dec
sub
add
stos
(bad)
sub
mov
dec
gs
xchg
and
jl
retf
sub
sbb
loop
jmp
sub
out
sbb
lea
pop
ret
cli
movs
xor
sub
dec
push
test
pop
jns
sub
pop
rol
mov
aam
fimul
ins
or
fndisi(8087
int3
jmp
out
mov
jb
push
or
xor
cmps
mov
mov
jg
and
int
inc
xchg
loopne
imul
fwait
cmps
sbb
cmp
sbb
sub
in
mov
das
call
out
sub
cmp
mov
je
and
sub
mov
test
jne
xchg
xchg
add
fwait
jnp
shl
stos
repz
cmp
or
sbb
inc
popa
aam
scas
sub
aam
rol
jbe
push
sub
(bad)
xchg
jmp
xor
repnz
out
bound
test
lds
jne
(bad)
cmp
xchg
mov
(bad)
cs
jae
inc
(bad)
ror
cmp
das
dec
or
(bad)
sbb
dec
jl
jbe
stos
adc
icebp
mov
sub
mov
cmp
cmp
xor
push
mov
jle
jne
repz
cmp
push
data16
xchg
sbb
mov
retf
cmp
adc
fldcw
(bad)
and
xchg
cmps
clc
adc
xor
jmp
sub
mov
and
mov
pop
adc
mov
sbb
or
stc
out
or
out
jo
clc
cmps
jnp
mov
popf
dec
les
sub
mov
popf
mov
sub
sbb
movs
jmp
test
jle
iret
push
mov
push
hlt
jmp
inc
jmp
push
adc
mov
out
mov
aas
jo
imul
dec
bound
inc
mov
mov
(bad)
idiv
or
cdq
jecxz
ret
in
jp
pop
ret
jae
test
jbe
pop
push
cs
sub
and
ds
fadd
jnp
loop
add
dec
mov
push
bound
inc
jp
or
rcl
push
push
dec
in
rcl
mov
lds
daa
jecxz
cmp
stc
adc
mov
lahf
jl
and
fcom
lods
inc
adc
jae
cmps
xchg
pop
or
test
dec
jmp
scas
jmp
inc
fs
cwde
mov
nop
aad
loope
jmp
neg
call
sub
int3
das
lea
jmp
push
push
es
les
push
ds
div
fisub
aad
inc
aad
cmp
call
jbe
inc
sti
jge
sub
or
mov
repnz
fwait
sub
push
mov
imul
rcl
sar
cmp
jne
dec
jmp
mov
clc
mov
call
mov
fcom
hlt
push
in
(bad)
and
enter
std
adc
in
mov
sbb
fld
xor
ins
push
sub
or
addr16
das
add
sbb
and
imul
std
cmps
inc
cmps
or
sar
sub
jmp
jne
sub
cmp
pop
sar
xor
pop
lock
add
mov
add
movs
test
fucomip
xchg
cmp
ror
in
push
or
addr16
inc
mov
lahf
cmps
popf
pop
sbb
and
lods
pop
ds
or
push
dec
mov
adc
dec
mov
mov
jmp
shl
and
dec
test
mov
xchg
pop
jo
imul
enter
enter
jmp
popa
pmulhw
pop
int
mov
inc
rcr
ret
push
lds
mov
ret
daa
sbb
inc
inc
popa
inc
cmp
push
(bad)
mov
inc
ins
cmp
mov
push
jge
adc
cli
and
sbb
sbb
sbb
add
movs
jnp
xor
sub
retf
push
es
std
in
(bad)
jne
(bad)
jns
ror
jge
cld
and
ror
jg
dec
iret
rol
and
cmc
mov
shr
aas
sti
ss
push
mov
mov
mov
inc
jmp
jmp
jo
and
leave
jo
out
repz
out
cmp
gs
mov
imul
cs
iret
dec
jg
dec
xor
inc
pushf
pop
xchg
push
hlt
push
loopne
dec
inc
adc
enter
fcom
xlat
mov
jp
jo
and
sti
or
jb
mov
add
lea
nop
fisubr
cmc
or
into
pop
xor
nop
test
jbe
nop
cmps
dec
fstp
adc
imul
(bad)
sbb
(bad)
xchg
out
shl
push
enter
icebp
sub
and
inc
push
mov
and
mov
imul
mov
xchg
xor
mov
loopne
add
shr
xor
push
leave
cli
test
jae
scas
add
add
call
(bad)
and
pop
shl
adc
dec
fnstsw
stos
(bad)
push
ins
pop
push
or
mov
push
xchg
aad
push
mov
fsub
test
mov
jecxz
inc
cmps
xor
int
push
imul
(bad)
in
dec
addr16
jae
cmp
cld
lahf
jmp
pop
xor
dec
retfw
adc
arpl
stos
lock
lods
jmp
jp
push
into
mov
pop
push
test
push
xor
add
adc
leave
nop
pop
adc
inc
or
sahf
loope
and
repz
xor
push
xchg
push
jge
or
(bad)
jg
dec
or
push
pop
jg
(bad)
cmps
add
cld
cmp
xchg
xor
pop
sub
pushf
dec
sub
push
adc
fcmove
imul
out
push
inc
inc
jae
lock
shl
shl
xor
mov
xchg
shr
aas
or
xchg
and
xchg
int
mov
jge
cmps
movs
pop
xchg
arpl
outs
cmp
lds
dec
mov
xchg
shl
cdq
loop
jnp
loopne
mov
lods
pop
push
dec
int3
cmc
jmp
xchg
fidivr
in
or
sbb
mov
inc
push
cdq
pusha
cld
ret
cs
mov
inc
xchg
cdq
xchg
fidivr
mov
or
fxtract
inc
xchg
aad
lock
sbb
rol
adc
jmp
pusha
jno
fimul
fmul
cmp
ss
push
imul
mov
xor
pop
dec
loopne
push
das
(bad)
in
aad
pop
push
(bad)
(bad)
cdq
pop
es
(bad)
xchg
dec
nop
jecxz
pop
lock
sbb
(bad)
in
aas
jmp
xor
sub
je
psubsb
jns
lahf
xchg
fld
xor
ret
aam
dec
test
push
pop
xor
adc
shl
test
sub
sbb
loopne
xchg
sti
mov
je
bndstx
pop
fistp
adc
or
mov
gs
adc
push
movs
sbb
imul
out
arpl
xchg
jno
jmp
pop
lds
aaa
popa
adc
popf
dec
mov
dec
mov
mov
mov
cmps
xchg
arpl
sar
fwait
cmp
and
fs
sub
pop
xchg
repz
xchg
stc
and
and
xor
jb
es
mov
repnz
xchg
(bad)
xor
retf
push
data16
add
or
dec
stc
sub
scas
add
pop
lds
dec
inc
and
jo
pop
lock
loopne
push
pop
mov
das
fcmovb
sar
push
aas
mov
pop
xchg
sub
and
push
mul
js
leave
inc
mov
sub
sahf
cwde
inc
xchg
add
test
push
pop
jmp
xor
push
pop
dec
iret
cmp
cli
test
jno
cmp
(bad)
lods
xor
movs
icebp
xlat
xchg
cmp
mov
cmps
cmc
mov
pop
jnp
inc
xor
xor
into
jns
mov
pusha
out
push
sbb
cmps
xchg
mov
push
outs
sbb
sbb
bnd
push
cmp
jle
mov
call
fmul
mov
fild
xor
fsubr
inc
scas
or
sbb
pop
lock
(bad)
aas
dec
hlt
fimul
test
lea
stos
inc
inc
sar
leave
mov
cld
fimul
pop
mov
sahf
inc
inc
inc
mov
std
call
inc
in
(bad)
loopne
xlat
hlt
push
mov
clc
mov
not
push
jmp
scas
mov
mov
adc
leave
mov
jbe
nop
stc
add
push
out
fcom
mov
inc
xor
jne
cdq
test
iret
mov
sbb
into
imul
xlat
outs
or
sti
imul
aam
dec
pop
or
(bad)
push
into
call
jmp
lock
mov
push
sub
cmc
sar
jns
cmp
je
dec
sbb
lahf
cmp
pop
xchg
fild
mov
inc
inc
into
mov
jecxz
int
cmp
mov
lahf
adc
fimul
pop
inc
push
sbb
fisub
out
xchg
inc
sbb
or
loopne
inc
hlt
cmc
xor
mov
les
pop
mov
push
mov
sbb
dec
cmc
loope
mov
lock
(bad)
daa
mov
imul
push
adc
in
push
sub
xchg
gs
jg
mov
popa
ffreep
arpl
(bad)
mov
pushf
dec
mov
rol
sbb
fs
(bad)
cs
ror
jne
pop
push
sbb
jae
pop
ss
ins
xor
sbb
stos
jno
jle
fisubr
xchg
imul
cmp
addr16
loop
lds
mov
sar
add
dec
jb
fwait
and
cs
pop
mov
mov
push
shl
int3
popa
nop
scas
dec
scas
outs
mov
sti
or
jmp
jmp
adc
test
lock
cmc
and
(bad)
xchg
dec
sub
pop
sbb
aad
and
jecxz
xchg
out
test
jg
pop
inc
lahf
jmp
push
mov
shl
loope
mov
push
mov
xlat
out
in
xchg
and
cld
out
jmp
(bad)
cmp
push
ror
sub
mov
popf
inc
sbb
clc
xor
data16
cmps
sub
or
sub
adc
loope
dec
mov
jle
fprem
pop
dec
inc
(bad)
inc
(bad)
pop
inc
push
push
and
retf
xor
fadd
hlt
cwde
adc
test
or
push
fisub
(bad)
lods
pop
jmp
cdq
mov
rol
push
lods
sub
inc
cmp
adc
xor
xor
ins
cmp
shl
(bad)
aaa
out
sbb
sub
push
or
cli
and
mov
loope
lock
(bad)
ins
mov
and
fidivr
hlt
dec
sub
stos
scas
sbb
fst
push
data16
lds
test
sbb
sbb
cmp
dec
dec
out
xor
xor
mov
mov
(bad)
cmps
jno
pop
mov
jo
sbb
fisttp
arpl
pop
dec
pop
(bad)
out
retf
jle
daa
or
push
mov
dec
push
mov
mov
(bad)
cdq
jmp
mov
fiadd
push
fs
mov
into
(bad)
mov
es
dec
sub
inc
adc
stos
loop
or
inc
lea
add
scas
xchg
lods
int
fwait
stos
pop
add
imul
or
sub
(bad)
jg
mov
jo
cmp
push
jg
push
aas
mov
aad
pop
outs
xor
shl
add
sti
cmp
cli
and
push
and
cmps
(bad)
mov
push
fwait
loopne
xor
cmovg
fnsave
nop
inc
dec
push
ja
add
dec
scas
hlt
iret
inc
inc
les
push
dec
pop
iret
aam
cmc
add
stc
repz
pop
jbe
add
aad
push
mov
mov
xlat
pcmpgtd
test
pop
cli
mov
mov
clc
push
jb
pushf
xor
pop
icebp
cmc
cld
cwde
(bad)
loop
int
dec
push
shl
sbb
fwait
out
inc
push
xor
addr16
jmp
loop
mov
fdiv
xchg
(bad)
clc
mov
neg
add
jmp
xlat
adc
jnp
lea
test
sub
fist
ror
xor
arpl
popa
sahf
popf
(bad)
mov
arpl
scas
xor
(bad)
fdivr
add
bound
mov
ret
emms
xor
mov
mov
mov
test
jmp
mov
add
scas
inc
and
data16
and
cmp
in
sub
ss
cdq
loope
adc
jae
cmp
mov
cmp
bts
adc
jmp
pop
mov
adc
or
fisubr
cmp
test
add
sub
or
dec
in
out
outs
in
push
mov
in
(bad)
enter
fld
jo
(bad)
cs
xchg
sbb
leave
aas
inc
daa
adc
adc
adc
aas
add
push
inc
inc
sub
nop
(bad)
into
or
shl
jmp
or
pop
and
arpl
xchg
ins
inc
sbb
adc
push
sar
lea
dec
lahf
in
sub
mov
loopne
loop
mov
retf
cmps
jg
or
rcr
or
lds
sbb
loope
mov
retf
in
push
lea
jne
add
inc
repz
mov
push
lods
out
retf
scas
sbb
in
ins
mov
cwde
and
sbb
inc
ss
and
cmp
int
adc
push
push
stos
iret
and
cmp
push
pop
push
or
xor
pop
cmp
popf
or
(bad)
xor
or
in
mov
mov
cmp
pop
test
pop
repz
stos
je
lds
jecxz
lods
inc
sahf
cmps
inc
clc
lahf
or
ins
xor
retf
cmp
push
outs
inc
test
mov
and
pushf
rcl
and
inc
inc
jg
dec
dec
ins
push
add
and
shl
jb
and
pop
and
(bad)
jp
sub
add
imul
stos
popf
fimul
mov
lods
call
mov
jmp
jl
pushf
xor
clc
rcl
sub
aaa
cmps
mov
clc
dec
or
push
mov
jno
cmp
inc
movs
ror
inc
test
rol
cmps
xchg
mov
ds
xchg
mov
cmp
mov
test
adc
jae
inc
mov
jmp
pop
rcr
sub
and
adc
sub
jle
mov
add
cmps
cmp
or
mov
mov
arpl
cli
cmps
cwde
mov
cmp
fxch
cmps
xchg
add
fcmovnu
(bad)
mov
ds
popa
sub
inc
pushf
mov
pop
jns
or
ret
adc
pop
and
int3
sub
push
mov
cs
or
psllw
jno
iret
ja
(bad)
push
xchg
enter
les
push
loopne
fs
mov
dec
pusha
sub
push
leave
jge
jmp
movs
ins
push
in
pop
jmp
imul
fsub
call
sahf
movs
inc
pop
ret
adc
aaa
hlt
push
fs
dec
or
imul
mov
pop
(bad)
jmp
lods
mov
int3
sbb
xor
stos
inc
shl
add
(bad)
jecxz
scas
fcomp
js
cmp
add
in
fcomp
push
sub
loope
(bad)
mov
dec
jecxz
and
pop
sbb
mov
pop
jo
and
sub
(bad)
cmc
mov
imul
sti
and
push
mov
(bad)
jl
out
xor
mov
jo
repz
jmp
or
daa
popf
inc
rol
push
test
stos
hlt
sub
xchg
into
imul
cwde
popf
mov
or
(bad)
dec
xor
inc
ds
xor
lods
or
sar
clc
adc
cdq
push
aam
add
popf
mov
int
cmp
xor
xlat
dec
jnp
test
jbe
add
cmps
jmp
scas
and
sbb
cs
retf
out
push
cmp
push
and
sbb
stos
mov
scas
lock
cmp
push
adc
(bad)
bound
int
push
inc
stc
mov
adc
mov
int3
mov
out
mov
xchg
mov
packsswb
mov
les
pop
mov
add
pop
shl
push
xor
(bad)
push
sbb
shr
mov
xchg
out
sbb
stos
mov
imul
jp
inc
push
push
sbb
test
sub
(bad)
jl
stos
mov
daa
add
retf
and
rcl
or
and
xlat
imul
sbb
aam
cmps
test
push
and
mov
lds
lds
std
stos
loop
cmp
stos
mov
call
aaa
fistp
je
mov
mov
ins
push
cld
and
dec
xor
mov
xchg
lahf
fnstenv
xchg
outs
or
xlat
inc
add
call
stc
mov
cli
ret
mov
int3
and
inc
or
ret
xchg
mov
xchg
dec
cmp
lods
mov
jecxz
das
mov
add
lds
test
pop
(bad)
xlat
fwait
xchg
stc
mov
aam
dec
jmp
std
lds
mov
pushf
dec
or
jp
adc
stos
fldenv
dec
sub
daa
sahf
xlat
lea
out
cmps
shl
dec
mov
push
add
loope
push
mov
les
popf
mov
sti
cli
ja
outs
stos
mov
movs
loop
pop
add
jge
adc
add
into
data16
push
outs
or
xor
cmps
(bad)
mov
mov
xchg
sbb
cmps
ret
outs
dec
dec
jo
ins
pop
adc
(bad)
outs
mov
in
xor
out
stc
mov
mov
movs
loope
and
or
xor
or
push
rol
clc
ins
cli
mov
call
fistp
pop
jle
ret
sub
loop
cmp
mov
or
repnz
sub
adc
mov
(bad)
cmc
mov
cmp
lods
jbe
in
aad
je
retf
inc
jg
pop
int3
sub
push
push
xchg
rcl
inc
cs
stos
or
push
out
jp
mov
stos
mov
sbb
js
neg
cmp
sbb
mov
aam
sbb
stos
popf
or
or
test
jae
mov
call
das
je
sbb
mov
sub
sub
retf
int3
xor
clc
or
jg
add
in
sar
ret
call
hlt
loopne
add
cmp
sub
fadd
mov
push
out
jmp
shr
lods
(bad)
popf
dec
cmc
mov
jg
cwde
int
aad
js
push
cmps
xchg
fild
sbb
outs
pop
push
mov
stos
sub
por
test
arpl
loopne
loopne
push
ret
add
mov
es
lea
jnp
mov
ror
scas
out
cmp
in
(bad)
or
scas
sub
mov
adc
and
call
rcr
inc
mov
cmp
ja
ss
fcom
retf
jp
pop
pop
ins
xchg
cmp
in
mov
xor
dec
pop
dec
fcmovu
js
(bad)
aad
call
fmul
xor
fwait
enter
sub
bound
and
or
sub
jbe
dec
(bad)
in
push
push
inc
mov
xor
xchg
or
aam
nop
arpl
push
sar
sub
(bad)
js
in
out
mov
aam
cdq
mov
rdpmc
sub
mov
bound
ja
or
loope
mov
jl
iret
mov
jp
dec
aaa
mov
or
jg
das
shl
inc
cld
xor
outs
xor
mov
out
mov
fstp
loope
sbb
sub
pushf
pushf
loop
aas
cs
xor
cwde
into
lods
add
sub
sub
add
add
aaa
jmp
movs
sub
push
add
fidiv
inc
xor
(bad)
arpl
scas
jmp
test
inc
jbe
xchg
not
jb
rcl
test
mov
cmp
loop
or
add
inc
sbb
sub
mov
adc
mov
sbb
dec
ins
mov
imul
dec
data16
xor
mov
mov
nop
push
outs
pusha
push
inc
add
sub
xchg
rol
ins
test
lods
iret
adc
loopne
aam
psrlw
repz
or
lahf
scas
sbb
inc
rol
push
add
push
(bad)
nop
fwait
(bad)
jnp
cmp
mov
mov
mov
jo
ficomp
jle
sbb
ror
test
gs
and
jbe
cwde
push
and
mov
mov
in
add
ins
test
test
je
in
fdivr
ins
lds
or
xor
jmp
fisttp
cmp
xor
push
ror
out
push
cmovb
mov
xchg
cli
daa
and
pop
adc
mov
fimul
jo
nop
push
xlat
jne
adc
sub
mov
pusha
xlat
loopne
jno
sub
push
push
dec
cmp
push
sbb
bound
in
or
mov
into
mov
arpl
ds
pop
sbb
and
out
(bad)
mov
std
ins
in
stc
sub
(bad)
lahf
cmps
adc
xor
adc
test
jae
xor
lock
mov
lods
add
xchg
fcom
mov
add
fstp
or
in
xor
or
jne
sub
int
sub
ins
and
fist
mov
ss
and
dec
inc
mov
retf
sar
(bad)
sbb
cmc
rol
popf
add
shl
xor
adc
sub
icebp
loop
push
rcl
mov
xchg
xor
push
dec
iret
adc
or
jle
dec
jmp
push
(bad)
movs
and
sbb
(bad)
dec
pop
mov
jne
add
dec
(bad)
pop
sub
jecxz
push
inc
fisttp
cli
daa
cli
inc
adc
xor
imul
xchg
aam
out
repz
xchg
jne
inc
and
lea
adc
or
push
jne
sahf
jae
jns
mov
loop
aas
cmps
imul
cmp
fnsave
js
(bad)
jbe
daa
or
cmp
cmp
sub
cmp
hlt
adc
enter
in
pop
xor
ret
sub
fld
in
outs
fs
scas
xor
mov
ffree
adc
sbb
and
add
mov
pop
loop
mov
xchg
mov
or
mov
mov
and
cwde
xchg
add
mov
inc
adc
and
sub
xor
and
dec
xchg
cwde
and
in
repz
push
jge
fbstp
pusha
cld
sub
pop
cmp
in
(bad)
mov
das
and
rcl
jge
push
ins
or
jge
int
mov
pop
test
mov
fdivr
or
(bad)
pop
mov
mul
pop
inc
dec
stos
jg
fmul
xchg
ds
(bad)
fdiv
mov
pop
cs
mov
sub
jne
unpckhps
push
mov
or
mov
popf
jmp
cmps
sub
hlt
sbb
imul
pop
pop
and
in
sahf
pop
ss
xor
inc
cmp
pop
pop
pop
or
cli
mov
dec
std
add
retf
sub
sub
pop
push
jbe
int
xchg
loope
mov
xchg
dec
jae
dec
cmp
xchg
(bad)
clc
jg
ins
push
addr16
test
aad
and
adc
or
inc
add
int
outs
mov
retf
jnp
and
das
retf
ret
push
adc
or
sub
xchg
inc
jo
sub
in
fsubr
aam
sub
jmp
jb
int3
mov
mov
pop
push
jp
inc
xchg
scas
mov
cs
bound
and
cmp
adc
mov
sbb
push
sub
inc
mov
pop
push
jae
fild
es
pop
je
adc
dec
and
ss
lods
mov
dec
jl
and
or
movs
mov
mov
adc
into
lods
stc
in
xchg
je
cwde
jg
inc
stc
test
cmp
mov
dec
test
xor
sahf
stc
outs
stc
cmps
mov
xchg
mov
xchg
popa
mov
pop
and
scas
and
loop
test
(bad)
lock
sbb
icebp
xchg
or
or
mov
div
push
and
cdq
jl
mov
mov
aam
lea
mov
rol
mov
pop
jl
outs
pop
loop
mov
(bad)
pop
push
in
(bad)
pushf
mov
inc
sbb
sub
ins
push
push
idiv
fcom
(bad)
push
movs
pop
jmp
popf
inc
frstor
and
(bad)
push
push
imul
jbe
xchg
pop
les
pop
(bad)
stos
sub
lea
int
pop
in
or
jp
fldln2
pop
pop
mov
leave
lods
or
pushf
cmp
cmp
cmp
lock
aad
retf
dec
sub
std
push
in
dec
cmp
push
out
cmps
xchg
mov
add
pop
add
shl
push
clc
sub
int3
sub
sub
sbb
js
sub
xlat
(bad)
jp
xchg
sub
outs
and
adc
sub
pop
push
sbb
or
cdq
jae
(bad)
pop
retf
scas
ret
pop
push
push
jno
sti
xchg
mov
add
mov
retf
jmp
das
fadd
ficomp
imul
inc
mov
ja
inc
jno
add
pop
std
dec
mov
in
or
and
or
cmp
xor
hlt
push
mov
pop
(bad)
jmp
imul
repnz
arpl
xor
rcl
xchg
sbb
jnp
add
jecxz
arpl
je
pusha
sub
ret
daa
or
pop
fistp
inc
jnp
jbe
fs
ja
test
mov
lds
jmp
or
pop
out
xchg
mov
jno
ficomp
sub
xor
cmp
in
loopne
mov
inc
pusha
mov
add
push
cmp
jmp
or
jb
sbb
dec
(bad)
mov
add
sbb
mov
addr16
fs
movs
dec
cld
xchg
mov
pop
push
jl
lahf
ss
mov
mov
pop
inc
or
xchg
ror
js
loopne
leave
scas
cwde
mov
dec
popa
std
aad
mov
sub
sub
pop
lea
mov
pop
leave
sub
xor
(bad)
int3
cmps
pusha
stos
xchg
mov
ja
jmp
or
aad
mov
sub
arpl
mov
lods
movs
mov
out
or
enter
inc
mov
aad
push
into
stos
mov
push
(bad)
(bad)
cmp
js
iret
pop
or
add
jmp
mov
aaa
lods
(bad)
cmp
and
adc
popa
mov
lods
scas
sbb
sti
out
push
dec
mov
push
push
inc
sub
bound
cdq
add
(bad)
loope
js
in
and
jns
push
mov
cmp
idiv
xchg
mov
pop
enter
mov
inc
lahf
jmp
push
leave
mov
mov
mov
imul
pop
jge
xchg
ficom
lea
sbb
(bad)
sbb
scas
mov
or
test
lods
lds
mov
les
sub
pop
stc
fidivr
pop
push
pushf
xchg
pop
jbe
xor
pop
inc
mov
inc
xor
mov
retf
cmps
add
mov
fbld
sbb
xor
aam
(bad)
cmp
movs
mov
push
and
fidivr
jb
mov
push
test
imul
jmp
gs
sub
mov
pop
into
sbb
retf
jb
cmps
outs
jmp
cli
les
fsubrp
fcmovu
mov
rol
mov
adc
mov
mov
mov
fs
push
in
xor
mov
xor
stc
aas
outs
push
scas
dec
cmc
add
ins
mov
xchg
push
imul
xor
push
call
pop
aam
lods
ror
jg
(bad)
cmp
push
sti
or
xlat
ds
mov
sbb
retf
sub
mov
and
cmp
js
mov
jmp
xchg
inc
loope
and
jmp
cmps
adc
add
scas
das
out
and
or
sbb
push
xchg
mov
push
xchg
sub
push
cs
test
movs
jmp
pop
stos
shl
push
ins
add
xchg
repz
sbb
cmp
mov
sbb
pop
js
movups
pushf
jecxz
pop
test
fidivr
pop
mov
xchg
cs
ins
stos
xor
aam
mov
mov
cmp
cld
bound
mul
loope
add
push
or
jmp
mov
mul
add
xchg
fimul
fidivr
pop
or
mov
xchg
adc
pop
xor
sbb
jb
nop
dec
mov
sub
in
hlt
cwde
or
cmps
cwde
jle
push
mov
sbb
mov
pop
aas
cmps
jg
jnp
clc
xor
in
and
sub
jns
fs
bound
loopne
adc
movs
xchg
shr
sub
in
ss
push
or
add
xlat
out
call
aaa
inc
lock
scas
(bad)
out
ficomp
xor
sbb
dec
loopne
fbstp
push
pop
aaa
jae
add
mov
cmc
jb
dec
cdq
repz
leave
mov
dec
push
lahf
in
aaa
jecxz
sub
test
add
dec
adc
inc
mov
add
(bad)
scas
mov
enter
mov
or
leave
xchg
in
mov
jae
xchg
mov
and
cmp
and
lods
clc
adc
into
dec
xchg
fisttp
xchg
or
lods
xor
scas
aas
popf
out
and
jge
sub
cmp
call
dec
lds
repz
addr16
movs
jecxz
mov
xchg
xor
pop
arpl
push
stc
dec
(bad)
sub
xchg
inc
stc
les
aaa
pop
xchg
mov
outs
add
lea
add
mov
push
shr
push
push
outs
push
jmp
mov
mov
sets
mov
psllq
aam
inc
fyl2xp1
adc
dec
sub
fbstp
hlt
test
add
sbb
cmp
mov
int3
sahf
out
cmps
cdq
lahf
test
dec
hlt
mov
pop
lea
enter
das
repz
and
ret
mov
push
and
ds
xchg
and
mov
cli
inc
sbb
mov
fld
(bad)
shl
or
mov
jmp
xchg
sti
mov
into
sbb
js
and
mov
pusha
or
lahf
(bad)
mov
in
mov
mov
sahf
leave
rcr
mov
add
cmps
shl
add
in
mov
stos
jnp
adc
inc
inc
mov
or
lock
cdq
mov
mov
adc
pop
fldenv
loopne
xor
xor
or
dec
mov
repz
or
mov
sub
dec
adc
inc
xchg
dec
call
sub
xor
jecxz
clc
cld
mov
push
test
and
cmps
mov
add
push
pop
sbb
(bad)
push
ror
pop
aad
xchg
xchg
repz
mov
xor
jg
js
movs
outs
mov
sbb
push
les
push
dec
mov
(bad)
div
or
test
fwait
cmp
mov
xor
push
pop
lods
enter
fisub
inc
retf
push
mov
sbb
dec
fcomp
in
adc
aaa
mov
stos
sbb
lock
dec
jge
push
xchg
loop
loop
sbb
push
in
pop
(bad)
in
ror
sbb
fs
jb
xchg
pushf
xor
daa
cwde
pop
stos
cld
leave
loope
push
popa
test
inc
add
ror
and
aas
pop
popa
mov
sbb
push
xchg
sub
or
daa
pop
pop
loop
pop
mov
into
scas
(bad)
and
pop
jl
clc
movs
cmp
loop
sar
inc
fcom
out
ret
je
ficom
es
rcr
iret
jecxz
ins
ins
clc
outs
out
js
jecxz
sbb
inc
popf
mov
xor
push
cs
mov
hlt
popa
mov
inc
nop
ds
gs
inc
cmp
repz
je
ss
and
loope
mov
stos
jmp
cwde
jmp
test
ds
mov
ins
sbb
jns
leave
mov
rcl
in
mov
imul
mov
out
xor
out
dec
(bad)
ja
pop
sbb
push
cmp
dec
inc
add
repnz
stos
bound
ins
mov
pop
ror
test
cmps
je
xor
outs
test
lock
std
jge
pop
or
pop
jmp
adc
sub
inc
push
push
ret
imul
sbb
xchg
push
xor
dec
shl
stos
jo
iret
loope
fsub
daa
es
mov
les
pop
add
gs
mov
leave
(bad)
jl
mov
add
add
imul
daa
push
ins
loopne
inc
dec
mov
fstp
retf
mov
adc
adc
in
stos
jb
and
or
xor
mov
sub
mov
xchg
inc
jno
sbb
pop
mov
cld
dec
mov
inc
ss
arpl
inc
adc
cmp
mov
mov
add
mov
fsubr
mov
pop
jb
mov
or
dec
cs
into
test
cmp
repz
jb
in
push
iret
arpl
mov
loope
jo
sub
mov
jp
stc
clc
pop
aam
repz
adc
leave
pop
js
push
xchg
retf
cmp
sbb
js
mov
xor
ret
arpl
out
and
inc
adc
fwait
mov
jo
bound
sub
ins
xchg
push
std
pop
fs
inc
dec
jo
fsubr
mov
push
stos
push
cmp
das
adc
add
rcl
movs
sub
mov
js
fs
lahf
or
pushf
push
(bad)
mov
dec
loope
or
cmc
fcmovu
inc
sbb
push
imul
mov
not
mov
test
cmp
cs
mov
and
or
out
(bad)
mov
sbb
sti
fstp
fwait
jb
push
inc
loopne
fisubr
out
in
pop
xchg
cld
(bad)
(bad)
daa
sub
mov
dec
addr16
pop
js
dec
sbb
out
sbb
fcmovu
clc
add
mul
fs
pop
jmp
xchg
das
loop
cmp
fwait
push
xchg
add
xor
lea
and
mov
ret
push
adc
imul
gs
sahf
or
test
(bad)
lock
xlat
fnstcw
cmc
sbb
pop
js
lock
out
leave
jae
xchg
inc
or
sahf
inc
or
adc
dec
dec
dec
pop
push
mov
mov
cdq
sbb
cs
aam
in
push
fs
inc
gs
pop
test
imul
pusha
jg
dec
pop
mov
enter
int3
jns
xchg
inc
test
stos
jecxz
mov
or
out
xor
xor
jl
cdq
pop
push
out
mov
mov
xchg
lea
sbb
add
dec
and
and
jns
iret
leave
adc
(bad)
out
jno
aas
xor
cs
mov
loop
test
lea
add
ja
xchg
rol
sbb
scas
jbe
mov
sahf
sbb
push
pop
mov
xchg
stos
jns
fimul
adc
fidivr
test
(bad)
sub
sbb
ins
dec
pusha
xor
jl
ds
mov
jge
into
aam
inc
stos
cmp
repz
fisttp
pop
imul
mov
mov
dec
and
dec
adc
test
push
int3
cs
mov
enter
pusha
cmp
mov
push
push
inc
adc
inc
(bad)
test
popa
lods
mov
mov
jle
js
test
sbb
outs
jbe
lds
sti
iret
mov
neg
xor
mov
push
or
mov
mov
sub
add
in
dec
in
movs
cld
inc
mov
jne
mov
jmp
pop
pop
test
inc
mov
sub
add
lahf
mov
mov
movs
(bad)
aad
gs
xchg
sti
in
xlat
nop
lock
ins
sub
sahf
call
fld
loopne
pop
and
mov
sar
jl
xchg
dec
or
out
daa
push
rol
mov
loope
pop
sub
loopne
cmc
inc
scas
retf
fcomp
jle
add
xchg
and
test
enter
sub
xchg
xchg
jg
push
inc
jae
test
jnp
mov
fnstcw
sar
sub
sub
cmp
repz
adc
jg
packssdw
in
mov
xlat
adc
jmp
pop
int3
adc
pop
xchg
aad
retf
xchg
and
push
popa
and
out
loop
je
mov
mov
xchg
lods
inc
inc
add
aam
outs
fwait
cmps
je
xor
scas
jns
iret
push
data16
data16
pop
or
test
sar
les
mov
mov
retf
mov
adc
xchg
and
sbb
mov
push
sub
push
repnz
cs
sub
add
lahf
push
sbb
int3
xlat
repz
popf
mov
hlt
cmp
dec
outs
push
mov
xchg
xchg
add
sbb
mov
retf
add
fisub
sbb
adc
scas
popa
(bad)
aam
popf
ds
fwait
lahf
nop
dec
mov
sub
mov
mov
inc
aad
jge
(bad)
mov
outs
rcr
out
sbb
fcmovnu
push
pushf
rol
jl
in
pushf
hlt
scas
sbb
aam
outs
stc
mov
das
xchg
pusha
outs
and
cmc
add
inc
gs
(bad)
sub
and
jo
jbe
sbb
add
jle
enter
arpl
add
xchg
inc
retf
jp
sub
xchg
arpl
xchg
not
sub
loope
jg
test
cmp
dec
in
test
aas
popf
out
push
xor
out
aad
jnp
rcr
stos
fldcw
mov
xor
inc
int3
push
pop
sub
push
lods
sbb
(bad)
out
xchg
ret
sub
dec
xchg
mov
jbe
and
push
and
xchg
fnstsw
mov
or
sub
jmp
xchg
retf
outs
xchg
(bad)
in
jmp
sahf
pop
jne
inc
mov
xchg
leave
loope
add
push
push
or
mov
addr16
sub
nop
sbb
sbb
dec
cmps
js
dec
adc
loop
add
and
test
and
out
sub
shr
pushf
fld
xchg
push
push
popa
aaa
cmps
xor
int3
es
aaa
jmp
xchg
aas
stc
xchg
cld
jb
jecxz
and
xchg
or
loopne
mov
push
adc
mov
rcl
jp
add
fcmovnu
lds
sbb
test
or
mov
arpl
ja
(bad)
das
and
cmp
sub
pop
mov
push
pop
mov
imul
nop
inc
int3
icebp
sahf
in
jo
add
add
xlat
test
sub
stc
inc
fwait
and
out
sub
into
in
das
or
push
push
cmps
sbb
sub
xor
cmps
mov
addr16
jg
sbb
mov
add
retf
mov
(bad)
enter
push
mov
sbb
in
mov
test
dec
dec
not
std
mov
arpl
repnz
scas
jl
xchg
xchg
mov
imul
inc
outs
mov
push
ss
cwde
movs
ds
sub
int
jbe
(bad)
xlat
ror
add
push
ins
inc
inc
mov
rol
sbb
out
xchg
sbb
push
dec
call
push
(bad)
lock
dec
scas
data16
or
and
pop
inc
sub
call
sti
aaa
das
mov
popf
mov
inc
cmp
leave
push
xchg
fdiv
retf
mov
mov
cmp
sub
mov
mov
xor
pop
in
dec
in
lahf
and
jmp
sbb
aaa
rcl
in
add
add
mov
stos
sub
clc
je
mul
jmp
jp
iret
sub
je
lods
xor
stos
xchg
inc
outs
iret
and
sahf
push
cmp
jmp
or
hlt
ja
outs
cmp
jp
push
int3
mov
mov
pusha
popa
inc
pop
ins
mov
ror
xor
cwde
es
lods
jmp
jmp
fstp
inc
repnz
ja
(bad)
pop
xor
jge
cmp
aaa
add
mov
rcr
cli
dec
in
push
adc
pop
aad
(bad)
fldcw
mov
test
cli
(bad)
lea
data16
and
jb
push
mov
(bad)
jne
xor
xchg
mov
inc
ret
stc
aas
dec
pop
and
push
js
xchg
xlat
(bad)
and
jecxz
test
mov
jle
adc
or
mov
cmp
or
in
xor
xor
(bad)
(bad)
dec
fisttp
ret
imul
mov
out
jge
cld
xchg
jmp
ins
data16
inc
mov
stos
aad
or
add
sub
idiv
shl
add
dec
lock
mov
lods
std
and
dec
test
fld1
cmps
or
cmps
jmp
add
pop
and
pop
inc
int
mov
cld
leave
in
loopne
xlat
xlat
in
ja
sub
cmp
mov
and
int
fstp
ja
and
mov
adc
ror
jmp
jno
fdiv
scas
dec
(bad)
out
dec
and
or
dec
iret
out
aaa
mov
cs
push
ret
push
inc
pop
fsubr
icebp
(bad)
jecxz
mov
lds
mov
or
pop
xchg
outs
mov
or
push
lods
nop
sbb
or
fbstp
xor
mov
in
jp
xchg
stc
leave
in
adc
pop
push
into
pushf
or
iret
mov
movs
rcl
retf
xchg
les
or
bound
xchg
(bad)
and
es
movs
repz
mov
clc
addr16
xor
fcos
xor
lods
pushf
in
inc
rcr
lods
les
cmc
je
test
lds
test
in
push
inc
ins
aas
add
js
movs
dec
cmps
call
(bad)
inc
dec
popf
or
movs
cmp
ins
repz
nop
push
les
cs
jno
mov
fwait
cdq
sbb
pop
add
in
push
popa
or
loopne
mov
neg
xchg
jbe
ror
mov
jne
push
sub
retf
add
xchg
imul
jbe
nop
dec
call
clc
jge
xchg
test
jmp
arpl
jp
jmp
adc
repz
cmp
pop
test
lea
adc
and
dec
(bad)
cmp
sti
cmps
bound
movs
int
and
and
jno
mov
mov
jl
sbb
dec
pop
add
push
cmps
iret
in
push
std
add
cmp
mov
repnz
xor
add
and
jae
retf
(bad)
nop
(bad)
pop
loop
div
inc
jg
jmp
mov
movs
test
inc
xor
inc
out
add
mov
jno
sub
or
mov
rcr
les
popf
and
daa
repz
mov
imul
pop
jp
cwde
js
(bad)
mov
pushf
pop
pop
into
call
test
pop
cmp
jecxz
or
add
cdq
or
push
ins
cmp
mov
loopne
sub
cmc
cmp
in
sub
inc
mov
jl
fdivr
mov
mov
xor
shl
rol
cmp
jl
jmp
int3
sbb
out
add
add
test
aam
and
sub
clc
jae
cmp
loopne
push
mov
add
sar
ror
js
ins
iret
fld
test
xchg
push
mov
test
cmp
sbb
in
scas
mov
adc
pop
sub
into
mov
retf
pop
cmps
mov
or
add
dec
mov
jns
pop
push
loop
popa
mov
mov
sub
mov
dec
sti
pop
data16
ja
sub
adc
and
mov
sub
iret
sbb
push
test
dec
jl
ja
cmp
adc
call
lahf
dec
test
jbe
add
stos
pop
stos
adc
aad
mov
pop
sbb
cli
sti
fwait
scas
cmp
xchg
pop
xor
loope
dec
mov
les
fs
or
out
repnz
shr
into
add
pop
pushf
xchg
ret
push
jb
pop
in
adc
ds
sub
push
mov
mov
mov
not
dec
jne
or
pusha
xor
es
dec
add
or
push
xor
adc
shr
iret
xchg
inc
mov
sbb
mov
addr16
scas
sbb
inc
push
test
mov
xchg
aad
inc
adc
ins
adc
xor
xor
mov
fwait
es
inc
stos
ficomp
dec
loope
loopne
stos
ja
jge
jnp
movs
add
js
cmp
and
stc
mov
iret
inc
and
pcmpeqb
mov
mov
cs
push
xor
sahf
jns
arpl
ins
push
push
mov
arpl
dec
lds
(bad)
xor
dec
sub
shl
mov
mov
push
mov
repnz
(bad)
das
imul
fcmovnb
ret
(bad)
add
push
sahf
sbb
ret
xchg
cli
jp
lds
mov
xchg
out
lahf
mov
fcmovb
inc
push
jb
aam
paddw
(bad)
fld
pop
lahf
jbe
mov
idiv
xchg
mov
ret
cmp
fs
outs
sar
cmps
cmp
repnz
lock
push
mov
(bad)
or
sub
es
loope
jnp
dec
cmp
xchg
aam
sti
push
shl
xor
sbb
push
pop
iret
pop
outs
cld
mov
fisttp
adc
add
mov
push
mov
jl
or
ja
out
jmp
pop
clc
test
movntps
stos
mov
lds
jmp
(bad)
mov
dec
sub
mov
test
jecxz
dec
sbb
inc
lahf
inc
aam
sbb
sub
and
stc
add
dec
lock
(bad)
pop
xlat
cmc
cmp
int
(bad)
sub
fmul
push
nop
out
arpl
or
rol
addr16
pop
in
jmp
pop
or
outs
mov
scas
(bad)
sbb
push
cwde
dec
(bad)
in
jle
sub
push
add
js
and
xchg
pushf
dec
push
push
mov
inc
jae
inc
inc
sbb
adc
pop
ds
iret
sbb
hlt
or
xchg
enter
gs
inc
out
les
or
outs
add
clc
cmp
push
and
test
adc
xchg
ja
mov
cmps
or
inc
lods
dec
stos
mov
cld
ret
mov
clc
mov
mov
xchg
mov
aad
ret
lea
in
ins
mov
add
int
adc
cmp
inc
int
push
dec
adc
stc
call
enter
enter
gs
pop
out
leave
mov
cs
out
adc
nop
(bad)
mov
test
pop
in
enter
out
repnz
cmp
call
push
mov
in
(bad)
push
std
adc
and
xor
jecxz
xchg
and
add
stc
jecxz
inc
lahf
cmc
or
cmp
jne
add
and
and
dec
aaa
mov
dec
call
mov
(bad)
mov
js
cwde
sahf
mov
add
pop
aaa
push
(bad)
rcl
test
xchg
das
dec
pop
mov
enter
ja
loope
push
lar
(bad)
loope
mov
fld
inc
fs
cmp
mov
or
pop
and
and
inc
xor
xchg
inc
push
mov
xchg
(bad)
xlat
fs
enter
fmul
repnz
push
(bad)
jmp
and
out
jne
jae
add
add
add
xchg
push
iret
and
ins
xor
sub
sub
or
or
sbb
js
jecxz
sbb
mov
(bad)
sbb
fcom
push
fidiv
gs
mov
test
popf
dec
xor
movq
data16
popa
ins
cmp
inc
jns
and
adc
mov
mov
lock
cmp
fidivr
loope
mov
outs
imul
pop
push
mov
adc
mov
add
lods
lea
add
or
xchg
inc
ins
inc
shr
aam
jae
jae
jae
dec
pop
jne
in
push
cmp
icebp
scas
or
pop
inc
or
mov
outs
sahf
and
inc
dec
sti
hlt
push
test
(bad)
out
push
push
pushf
mov
stos
push
les
jne
jae
leave
jmp
xchg
mov
sbb
cmp
ret
xchg
aad
jg
push
dec
adc
rcl
int3
cmp
in
cmp
pop
jb
push
in
mov
sub
test
and
pop
xchg
enter
inc
fs
(bad)
out
out
div
lahf
jnp
(bad)
push
loope
jle
xor
dec
mov
sar
lahf
inc
in
jnp
fnstcw
loop
ret
adc
mov
and
or
xor
test
cmp
dec
push
cmp
test
pop
popf
xchg
(bad)
jnp
sti
xor
mov
inc
jb
fwait
mov
mov
push
push
rcr
mov
cmp
in
pusha
and
add
stc
pop
jge
xchg
push
daa
aad
cmps
movs
inc
push
loopne
test
sub
fmul
cmps
int3
xchg
movs
sbb
test
adc
dec
mov
sub
mov
mov
cdq
retf
es
jo
sbb
repz
mov
xchg
mov
push
test
and
loop
dec
xchg
adc
je
pop
(bad)
leave
movs
cmp
je
(bad)
stc
call
mov
hlt
mov
cmp
pusha
shl
jecxz
jmp
mov
sbb
loope
mov
(bad)
(bad)
sub
pop
jmp
lods
inc
xchg
lahf
sbb
sti
ficom
popf
ficomp
jecxz
pop
xor
je
pop
xchg
jp
inc
dec
out
mov
xchg
xor
dec
xchg
push
pusha
xor
add
add
dec
push
hlt
(bad)
aam
sub
pop
icebp
imul
sti
jne
arpl
sbb
and
dec
adc
adc
or
and
imul
push
pmuludq
inc
xchg
js
and
ja
ds
dec
inc
adc
xchg
mov
adc
xor
adc
jg
sbb
mov
push
cmp
cmp
pop
jno
cmps
add
mul
popf
sub
fwait
sub
cwde
ja
xlat
sub
mov
cmp
ja
ja
pop
scas
jns
pop
jo
adc
sub
je
shl
cwde
sub
test
sti
jne
mov
std
pop
(bad)
repz
jp
mov
and
cmp
or
(bad)
jle
repz
repnz
push
pop
and
scas
arpl
push
pop
and
pop
jg
inc
add
and
out
inc
or
mov
and
shl
jae
jae
mov
inc
sti
mov
sub
mov
cwde
pop
add
(bad)
mov
adc
fadd
mov
shl
push
ins
nop
mov
xor
mov
movs
add
mov
fild
inc
or
sti
cdq
or
mov
inc
test
xchg
pop
ja
xlat
and
pusha
test
ins
dec
iret
dec
arpl
(bad)
(bad)
jbe
jns
in
push
mov
push
xor
fucomp
xchg
iret
cmp
cmps
or
mov
mov
jl
add
out
adc
std
add
jp
repnz
out
push
pop
lea
fimul
add
adc
imul
call
and
sub
lods
xchg
xchg
cli
ins
mov
(bad)
push
outs
retf
cmps
inc
sar
adc
and
(bad)
cdq
scas
jle
mov
enter
cmp
push
and
push
je
ds
push
pop
pusha
mov
lods
xchg
hlt
dec
jno
cmp
push
sub
(bad)
fucomi
or
jl
lds
add
pop
lds
xchg
data16
xor
mov
(bad)
out
les
push
hlt
daa
(bad)
popf
add
lods
xchg
outs
jl
mov
mov
and
adc
sbb
jnp
test
mov
and
push
dec
push
test
cmp
(bad)
xor
mov
inc
test
retf
(bad)
fisub
hlt
and
sahf
pushf
pop
lea
scas
mov
cmp
sub
inc
in
inc
shl
mov
mov
test
add
outs
adc
pop
in
mov
stos
sbb
xor
imul
fwait
jecxz
dec
scas
imul
stos
ss
dec
in
inc
push
mov
cmps
pop
inc
pop
dec
mov
push
test
ret
adc
sbb
(bad)
addr16
loope
out
or
movs
mov
mov
sbb
mov
stos
sub
fldenv
ret
jle
sub
xor
mov
or
gs
adc
mov
cmp
and
rol
data16
sbb
cmps
xor
ffree
ins
in
ds
int
pop
shl
fnstenv
sub
je
pop
jge
or
sti
cmps
push
idiv
fwait
mov
int
mov
aas
mov
lds
mov
mul
xor
and
xor
js
or
push
mov
loop
div
mov
aam
dec
xlat
or
icebp
stc
in
mov
inc
stos
stc
stos
mov
add
mov
mov
es
pop
pop
aam
mov
dec
pushf
add
add
pop
cli
cmp
mov
stos
pop
dec
cmp
dec
scas
aad
xchg
mov
mov
rcl
inc
push
ds
into
adc
loope
mov
lods
mov
jg
inc
dec
sbb
adc
scas
ret
cmp
dec
dec
stos
nop
cdq
cli
pop
pop
and
and
test
iret
mov
dec
ins
mov
ja
xchg
xlat
xchg
repnz
push
cmp
xor
or
aaa
pop
aad
dec
test
ins
mov
inc
inc
shl
pop
int
inc
imul
adc
enter
mov
std
les
pop
(bad)
dec
les
and
add
pop
sbb
dec
cmp
sub
jp
mov
push
outs
xor
jnp
xor
mov
sub
inc
scas
mov
fadd
nop
adc
sub
jp
es
pushf
jle
aam
jmp
ins
and
nop
inc
xor
jge
test
call
add
xor
arpl
(bad)
cmp
stos
xchg
jb
push
xchg
jbe
imul
dec
inc
push
mov
adc
ret
add
fmulp
hlt
dec
in
lahf
dec
and
scas
jo
shr
stos
mov
mov
lahf
adc
loop
jecxz
sbb
push
or
mov
ret
iret
(bad)
loope
test
pop
push
lods
in
adc
push
loopne
or
push
jp
imul
repz
shr
add
sbb
movs
std
sar
enter
jg
push
bound
mov
out
pop
sub
in
fdiv
xchg
jmp
push
jnp
push
iret
add
mov
(bad)
cmp
out
mov
mov
push
jmp
cmp
mov
push
sbb
cld
pusha
push
enter
js
fwait
dec
(bad)
aad
aaa
mov
and
jo
les
mov
jno
push
mov
dec
jae
adc
mov
loope
or
pop
stos
loop
sbb
in
dec
dec
mov
add
inc
rol
ins
lahf
hlt
pusha
sub
add
movs
js
imul
cmps
jmp
stos
sbb
shr
or
or
in
aam
out
sbb
adc
jmp
jno
ror
and
leave
mov
sub
je
mov
mov
push
jmp
and
or
add
outs
push
pushf
sub
retf
aam
jae
sbb
jp
pop
jns
retf
add
or
test
pushf
inc
cwde
loopne
or
test
mov
stc
ret
push
mov
std
add
jmp
mov
ss
and
jmp
dec
mov
pop
sbb
inc
jb
clc
xchg
adc
cmc
fwait
cmps
pop
push
mov
dec
lahf
push
add
in
jl
ret
leave
pop
int3
aam
sti
neg
sbb
push
test
enter
xor
mov
xchg
xchg
aaa
jge
inc
repz
in
push
mov
in
test
mov
jns
mov
shl
mov
pop
ret
add
fidiv
ret
push
cmps
fwait
jle
xor
fcomp
pop
jl
outs
push
(bad)
jle
jno
pushw
jmp
loopne
(bad)
mov
ficom
retf
mov
cmps
sahf
jae
pop
clc
jp
mov
mov
push
push
ret
in
and
sbb
out
pop
fmul
jmp
push
movs
bound
dec
(bad)
jbe
inc
das
lods
push
push
or
or
out
scas
pop
or
cld
cmc
or
mov
and
stos
int
mov
xchg
inc
push
and
sub
push
push
ret
jno
fadd
inc
or
cmp
mov
dec
les
push
(bad)
dec
xor
sub
loopne
adc
jp
mov
hlt
jl
shl
xor
mov
ret
std
fild
dec
jno
pop
int3
xchg
movs
gs
mov
push
sbb
hlt
sbb
mov
dec
lock
cmp
adc
ds
cld
dec
sti
pop
dec
ficom
loope
xor
sbb
test
mov
nop
daa
dec
push
xchg
xor
jmp
sbb
inc
sub
cmp
push
jge
in
cmc
mov
pop
idiv
mov
or
ret
inc
inc
lods
div
into
push
add
in
nop
cmp
and
dec
and
sub
xchg
mov
pop
ja
xchg
xcrypt-cbc
cmps
adc
sbb
mov
jmp
pop
xor
jecxz
ret
retf
xor
push
xchg
pop
jb
hlt
or
jle
cmp
sub
call
stc
fcomp
sbb
dec
call
sbb
adc
jge
push
lea
mov
xor
or
mov
test
jae
inc
or
stos
mov
jmp
mov
loope
mov
add
hlt
add
jecxz
cmp
ss
repnz
push
imul
scas
popa
pushfw
scas
cwde
iret
test
adc
and
jecxz
jmp
lock
loopne
movs
sub
cmp
xchg
sub
ss
les
sar
mov
mov
push
jp
outs
ins
outs
adc
push
es
lods
fidiv
sbb
mov
dec
sub
(bad)
sub
retf
test
fimul
mov
popf
mov
pop
ja
add
xchg
mov
xor
ss
mov
push
or
jl
xor
push
xor
mov
or
mov
xor
and
enter
sahf
push
xchg
adc
loope
cmp
add
ret
mov
leave
leave
mov
or
pop
and
movs
sbb
jbe
mov
adc
call
test
pop
cmp
jl
mov
lods
inc
pop
(bad)
pop
inc
(bad)
aas
leave
push
stos
clc
jb
test
and
add
push
mov
dec
mov
pop
movs
call
loope
cmp
retf
xchg
rcr
cli
dec
xchg
test
cdq
int3
jmp
push
es
add
cdq
mov
add
repnz
xchg
add
xor
cmp
mov
retf
scas
and
(bad)
pusha
out
jl
pushf
dec
pusha
into
es
aas
sbb
push
inc
movs
sbb
in
xor
leave
adc
dec
(bad)
mov
cmc
ret
loope
inc
and
jbe
sub
in
pop
xchg
or
into
fwait
dec
ret
xchg
pop
ret
sub
add
inc
push
push
mov
jb
sub
imul
ds
sub
(bad)
inc
mov
je
pusha
push
pop
aad
dec
sti
dec
cli
lods
mov
(bad)
ins
repz
(bad)
leave
sbb
repnz
leave
inc
mov
or
imul
sar
dec
jbe
inc
dec
jne
sar
and
sub
cld
aaa
mov
sub
pop
inc
loope
dec
pop
or
scas
ret
inc
stos
ficomp
mov
add
into
adc
clc
push
stos
pusha
sub
fsubr
mov
fldcw
and
icebp
add
xchg
test
(bad)
pop
std
xor
ret
js
popa
call
popa
repnz
mov
in
aad
adc
fdiv
dec
icebp
push
pop
leave
(bad)
xchg
cmp
pushf
xor
mov
ret
dec
pop
leave
inc
xor
test
xor
add
push
adc
jb
aad
dec
jmp
retf
and
cld
add
push
xor
sahf
je
sbb
xchg
inc
push
mov
push
pop
sti
and
and
mov
mov
movs
test
ficomp
(bad)
lods
mov
sbb
push
jbe
clc
arpl
mov
xchg
mov
add
call
cwde
(bad)
aas
popf
rcr
push
inc
sub
dec
or
les
ins
mov
div
out
mov
mov
xchg
mov
cmc
mov
test
xor
pop
aaa
daa
jl
xchg
scas
pop
pop
xor
ja
outs
pop
pop
retf
mov
xchg
xchg
and
cdq
dec
add
mul
xchg
lock
add
xor
inc
imul
or
cmps
ror
inc
ret
jb
sbb
lods
and
into
add
bound
test
lahf
outs
pusha
retf
mov
and
cld
dec
in
test
inc
jl
sub
push
sbb
xchg
sub
out
addr16
dec
ficomp
cdq
mov
loope
(bad)
inc
xor
outs
mov
pop
xor
sahf
inc
ret
adc
add
aam
test
push
jmp
das
ret
pop
jns
rcl
xor
or
jmp
inc
cmc
dec
ins
dec
sub
push
pop
mov
mov
add
cmp
hlt
scas
adc
xor
push
repz
mov
dec
enter
dec
repz
pop
cdq
stos
push
lock
jecxz
jle
inc
pop
in
cdq
and
jle
or
aas
out
sub
(bad)
ins
xor
aas
pop
add
mov
cmp
pop
mov
rol
cld
pop
out
in
scas
xchg
popf
xor
or
cmp
adc
mov
mov
push
add
and
lahf
scas
enter
call
xor
sub
pop
test
test
cmc
or
jne
(bad)
scas
xlat
fldcw
sar
pop
je
neg
mov
sub
pop
out
xchg
jl
jle
mov
call
movs
dec
push
and
daa
xchg
pop
jmp
pop
sbb
push
xor
std
inc
adc
jl
pushf
pop
dec
int3
lock
and
push
pop
stos
jecxz
jmp
ins
or
fwait
jecxz
mov
jne
mov
test
xchg
call
int3
dec
scas
add
test
mov
in
inc
repnz
ins
nop
add
gs
out
inc
jnp
mov
mov
push
vandnps
mov
lahf
ret
sbb
fnstcw
sbb
mov
cmp
cwde
inc
repz
loop
or
cmp
pushf
add
jno
adc
pop
clc
push
inc
ins
add
scas
in
cmc
cs
lods
sub
ret
arpl
sti
(bad)
and
jbe
sbb
add
mov
push
mov
jnp
popa
push
ffreep
lods
ins
es
ds
cld
adc
inc
mov
iret
rcl
add
or
jnp
mov
push
xchg
pop
inc
sub
sub
mov
sub
rcr
mov
and
push
pop
sub
mov
mov
inc
dec
in
pop
fistp
jnp
fsubr
test
mov
adc
mov
lea
sbb
lahf
or
pop
in
sub
(bad)
mov
repnz
cmps
mov
mov
unpcklps
inc
lods
int3
in
sub
cmp
data16
out
or
shl
mov
test
push
cmp
popf
retf
add
add
cmp
fndisi(8087
push
pop
rol
aam
pop
jno
test
stc
int
in
push
bound
pusha
or
cmp
outs
sub
push
loopne
clc
pop
mov
test
jnp
xor
adc
mov
adc
(bad)
clc
adc
retf
add
sbb
or
clc
push
daa
lahf
sbb
dec
and
mov
jno
test
enter
ja
bound
ja
rol
(bad)
sbb
outs
sub
xor
and
pop
push
aaa
sub
mov
and
icebp
sub
xor
fs
push
adc
stos
mov
mov
iret
push
les
push
hlt
cdq
adc
fs
mov
es
sub
popf
cmp
mov
lods
dec
loope
cmp
repz
leave
out
stos
xchg
xlat
out
jmp
lds
cld
imul
adc
inc
iret
cmps
out
lock
inc
cwde
je
fwait
xor
sahf
xor
xlat
inc
mov
inc
jae
push
and
rcl
fcmovu
iret
and
retf
popa
das
xchg
sbb
lea
cdq
shl
xchg
mov
adc
std
cmp
mov
sub
xchg
(bad)
loopne
cs
mov
inc
stos
cmc
shl
dec
sub
in
ficom
jbe
sar
out
dec
dec
sub
call
xchg
sahf
fdiv
cmps
ffree
je
jne
pop
scas
(bad)
movs
pop
cmps
xor
xor
xchg
(bad)
scas
ret
push
mov
sub
(bad)
loopne
adc
outs
mov
adc
adc
xor
in
pop
xlat
dec
mov
sbb
test
pop
mov
es
loopne
or
dec
fld
ficomp
mov
dec
cmp
pop
add
or
test
xchg
(bad)
adc
out
imul
ror
cmp
jb
or
aad
push
hlt
(bad)
shl
imul
icebp
mov
mov
repnz
mov
jmp
xchg
scas
push
pop
shl
cdq
xor
retf
mov
je
adc
mov
or
mov
icebp
nop
and
mov
test
ds
dec
jmp
jg
or
jge
push
or
mov
dec
data16
fist
das
add
add
loop
inc
or
inc
jecxz
push
imul
rol
cwde
jmp
inc
arpl
dec
rol
(bad)
in
ret
push
arpl
xor
cmp
mov
or
lods
or
neg
mov
jb
mov
addr16
rcl
mov
and
sbb
popa
scas
and
mov
(bad)
sbb
lahf
or
data16
loope
push
jmp
and
inc
pop
mov
out
mov
mov
pop
inc
ins
pushf
add
xchg
ret
jmp
jmp
ror
(bad)
mov
movs
lds
jbe
es
add
xchg
(bad)
mov
fadd
or
test
daa
test
mov
(bad)
mov
jnp
out
lea
xchg
dec
je
sbb
pop
cmc
retf
sub
mov
sbb
mov
aas
loop
xor
jmp
retf
loopne
push
mov
pop
xor
or
in
adc
rcl
xchg
mov
in
hlt
and
jl
ss
and
addr16
aad
jge
repz
push
arpl
aad
test
popf
aas
les
and
das
ret
mov
cmp
sbb
je
add
inc
in
cwde
cmp
mov
das
and
sub
adc
movs
add
xchg
std
dec
enter
push
movs
add
cdq
cmp
cmp
outs
and
(bad)
(bad)
xor
jns
inc
mov
push
sbb
cmp
mov
fld
ja
ror
(bad)
adc
ins
sub
std
push
repnz
dec
out
jecxz
dec
mov
mov
pop
jle
jle
jae
adc
pop
cs
enter
mov
ret
mov
inc
jbe
fstp
and
test
pop
or
mov
fcom
mov
xchg
mov
inc
dec
mov
mov
lods
jb
stc
dec
mov
sbb
push
movs
add
hlt
sbb
fist
mov
mov
imul
mov
ret
dec
mov
add
pop
mov
js
pop
mov
and
aaa
inc
out
and
and
in
push
fldcw
fsub
fnstenv
jmp
jmp
ss
xchg
xor
push
movs
pop
and
das
jmp
push
out
sub
and
mov
jle
push
arpl
inc
movs
sahf
jns
xor
pushf
lea
adc
mov
pushf
sub
and
cmps
and
jecxz
shl
cli
test
jmp
lahf
lahf
xchg
ss
outs
stos
push
adc
sar
xlat
arpl
int3
pushf
xchg
test
popf
stos
fnsave
ins
scas
loop
rcl
pop
dec
mov
mov
aam
dec
ds
jl
inc
cmp
lock
fisttp
adc
stos
adc
popf
xor
and
push
inc
mov
je
mov
stos
mov
and
inc
loop
punpckhdq
jge
mov
and
or
mov
inc
and
dec
sbb
jae
inc
adc
inc
adc
xor
rol
fwait
xchg
(bad)
(bad)
fstp
inc
rcr
cmp
or
pop
lods
add
rcr
rcl
mov
addr16
outs
scas
ror
mov
mov
jle
and
das
push
sbb
fnsave
data16
cli
ss
inc
or
inc
jno
xor
(bad)
push
fbld
or
jge
sub
jecxz
rol
xor
ins
ret
pop
or
pop
or
out
fwait
sbb
push
dec
hlt
mov
imul
stos
pop
and
xchg
mov
adc
das
jns
js
inc
lods
repnz
push
dec
push
mov
pop
jle
cmp
ja
in
rcl
lea
pop
sbb
retf
iret
cmp
sbb
jmp
lock
aas
or
jecxz
xchg
inc
jo
add
mov
lea
test
or
xchg
xchg
push
add
imul
aad
jne
(bad)
jmp
(bad)
stos
pop
ins
sbb
push
fwait
outs
fimul
in
into
push
push
or
xchg
jne
inc
pusha
pop
pushf
lods
lods
push
add
inc
xor
push
push
scas
lock
out
sbb
(bad)
aad
adc
ins
pop
rcl
adc
dec
and
adc
retf
xchg
inc
jge
jg
mov
jmp
loop
popf
xchg
or
cmc
mov
pop
dec
or
jmp
out
std
sbb
popa
in
cmp
mov
xchg
fldenv
mov
xchg
jmp
dec
out
data16
into
in
stos
push
cmp
aaa
push
sbb
neg
jnp
sbb
mov
lods
movs
pop
jge
pop
punpckhdq
cmps
aas
mov
out
mov
jmp
xor
std
stos
stos
pop
test
into
daa
int3
pop
cdq
mov
mov
cmp
jle
in
fnstenv
std
arpl
mov
dec
rcl
popa
mov
adc
mov
mov
dec
cmp
cs
aaa
idiv
pop
stc
data16
fwait
jbe
stos
push
js
add
cwde
or
popf
icebp
jns
test
xchg
add
jmp
lods
aam
adc
or
pop
sbb
popf
in
data16
cs
fmul
xchg
call
sbb
ror
fdivr
dec
in
sub
mov
xor
jmp
lods
mov
jbe
sbb
lahf
or
aas
test
mov
(bad)
loopne
and
aaa
cmp
mov
cs
arpl
mov
push
shr
and
add
jmp
shr
fmul
loope
dec
fistp
fisubr
les
cwde
and
push
test
push
lahf
inc
retf
cmp
pusha
push
mov
mov
pop
dec
fldl2t
push
fcomp
(bad)
fidivr
sar
shl
call
xor
fadd
cmps
mov
or
js
add
jmp
ds
pusha
add
test
push
adc
shl
(bad)
pop
retf
mov
bound
ds
jp
xchg
jecxz
retf
jl
pusha
or
out
cmp
(bad)
inc
and
lea
lahf
jnp
inc
mov
dec
ror
push
aad
adc
mov
cwde
pop
mov
adc
scas
(bad)
es
push
imul
mov
ins
jge
sbb
fist
push
add
xchg
xor
pop
popa
xchg
dec
shl
jbe
xchg
cli
int
ror
int3
mov
mov
push
sar
retf
mov
cli
push
fs
fdivr
lock
sbb
gs
into
adc
sub
sbb
jbe
rcl
pop
add
adc
mov
or
ret
ss
js
mov
cmps
div
xor
push
retf
shr
mov
scas
int
in
movs
ja
xchg
jmp
retf
test
lds
fs
test
jns
hlt
cmp
inc
lahf
pop
mov
pop
or
lods
adc
jno
(bad)
stos
test
cmp
cdq
cmp
or
mul
pop
popf
cmp
jmp
mov
clc
imul
pop
cwde
adc
jl
out
inc
fsub
cmps
jge
jae
xchg
mov
cli
pop
or
clc
rcr
push
mov
sbb
ret
cmp
imul
ds
pop
sub
mov
mov
hlt
xchg
jne
sar
or
add
cmps
add
xlat
sahf
inc
xchg
pop
jge
addr16
xlat
sahf
mov
sbb
push
test
call
pop
push
jne
test
mov
outs
cmp
jne
or
jae
iret
test
and
dec
xor
jnp
sub
jns
stc
cmps
(bad)
sti
popa
ins
in
sbb
add
xor
mov
jmp
and
cdq
sbb
out
inc
cmps
push
fistp
shr
xor
jo
xchg
push
fild
and
fmul
sub
sysexit
movs
inc
xor
mov
dec
daa
xor
nop
fistp
pop
pusha
jbe
lods
cmp
mov
jg
rol
movs
and
mov
xchg
repz
ins
das
push
sbb
pusha
xlat
mov
test
mov
dec
iret
mov
enter
ja
adc
out
rcl
sub
inc
add
jno
sti
hlt
inc
cmp
ret
and
hlt
mov
jmp
mov
inc
mov
pop
das
mov
jg
mov
dec
das
shl
push
push
stc
push
cdq
and
shr
push
fs
imul
aas
or
mov
sbb
ds
jnp
das
ja
ret
loope
pusha
jae
ret
push
neg
dec
and
sar
pop
pop
inc
les
hlt
push
mul
fimul
rep
aam
and
ficom
or
jmp
mov
inc
fnsave
sub
jb
adc
cdq
or
js
xor
test
push
mov
xor
lea
inc
add
mov
xchg
js
cmp
or
cmc
jno
dec
fcom
ins
inc
sbb
pop
and
inc
out
loope
out
pusha
inc
cmp
pop
hlt
push
and
popa
ud1
shr
jbe
out
inc
popa
neg
sbb
sbb
lods
add
add
push
add
into
popf
test
xor
ficom
sub
jl
inc
into
es
cmp
sbb
aam
fst
add
mov
or
push
add
pop
test
in
and
frstor
sar
inc
loopne
pushf
sbb
mov
ja
push
add
imul
sub
(bad)
xchg
mov
shr
lock
jge
test
push
nop
inc
out
cdq
push
jmp
push
(bad)
(bad)
loopne
clc
mov
arpl
mov
or
push
mov
lahf
push
adc
std
mov
(bad)
fidiv
outs
aam
(bad)
test
dec
and
(bad)
cld
sub
or
sti
cld
mov
jmp
mov
ds
mov
jbe
pop
or
cmp
repz
pop
jo
loope
aaa
dec
adc
mov
imul
ror
aas
jmp
xchg
and
fwait
mov
cmp
bound
popa
jbe
std
retf
adc
cmps
sbb
add
xlat
lods
popa
es
ror
xchg
pop
std
(bad)
std
scas
hlt
enter
jmp
(bad)
dec
stos
sub
mov
pusha
adc
enter
(bad)
cmc
jmp
pop
adc
inc
jl
aaa
sub
(bad)
imul
pop
test
cli
jecxz
bnd
push
mov
or
mul
bound
scas
mov
jmp
sbb
daa
aaa
test
cwde
sar
loope
test
adc
pop
leave
mov
ss
in
scas
shr
leave
sub
and
sbb
adc
mov
pop
pop
add
mov
push
xor
out
test
cmp
inc
movs
fldenv
ja
mov
xor
enter
mov
fsqrt
cmp
and
fdiv
add
sub
cdq
pop
in
je
(bad)
inc
das
jb
js
aaa
rcl
push
fld
mov
dec
mov
retf
scas
adc
jnp
sbb
adc
push
add
arpl
lods
pop
push
rcr
mov
xchg
fcom
nop
mov
in
ins
ds
sbb
ror
retf
jne
stos
inc
bound
adc
mov
loope
xchg
xchg
mov
sbb
dec
mov
fs
retf
lods
sbb
neg
cmps
add
jp
xchg
adc
out
dec
dec
ss
mov
lods
jae
mov
pop
cmp
xor
ds
bound
sbb
popf
jp
inc
and
sub
scas
push
jg
int3
arpl
add
sti
mov
jo
jl
or
add
lods
mov
pop
mov
lds
dec
fidiv
das
or
xor
in
sbb
xor
iret
mov
adc
js
sbb
les
adc
js
inc
xor
in
or
je
sub
stos
aaa
jno
retf
jb
fcomp
out
mov
push
or
dec
mov
loopne
mov
fdiv
cmp
xor
sbb
mov
outs
aad
cmp
sbb
inc
xchg
in
push
jo
pop
mov
pop
out
(bad)
loopne
add
and
cmps
fnsave
lea
ret
xchg
int
push
xchg
add
push
das
je
xor
gs
dec
popa
ins
jbe
mov
xor
xor
sbb
fnstsw
clc
cmp
stc
psubq
ja
fstp
push
xchg
or
ins
push
push
pop
mov
mov
mov
add
ret
dec
hlt
and
test
or
cmp
dec
lods
push
(bad)
xor
mov
sub
push
cmps
push
enter
mov
mov
adc
sbb
pusha
pop
popf
enter
ret
out
out
adc
(bad)
cmp
cwde
ds
inc
xor
aad
mov
xchg
test
sub
sbb
rcl
pop
xor
dec
cmp
mov
call
jp
jl
hlt
repz
es
ss
inc
ins
push
jp
test
add
push
mov
nop
jno
fsubr
mov
cld
stc
cwde
xor
inc
push
fidiv
scas
fiadd
imul
inc
iret
scas
sbb
cmp
mov
call
jb
push
push
jmp
adc
push
jle
retf
and
cmc
xor
xor
daa
sub
adc
or
pusha
dec
test
mov
inc
mov
pop
(bad)
push
addr16
lods
ds
pop
fdiv
xchg
sahf
out
inc
mov
fdiv
jp
lods
push
stc
mov
shr
xchg
sbb
push
ins
cmc
adc
mov
mov
sbb
add
xchg
sub
jg
mov
push
and
call
dec
xchg
outs
mov
(bad)
xchg
or
pusha
(bad)
push
pop
xchg
push
inc
xchg
les
xor
jmp
mov
into
push
into
cld
lahf
shl
(bad)
inc
sub
and
xor
add
jae
mov
sbb
call
inc
sbb
loop
rol
imul
push
sub
es
pushf
ja
adc
in
mov
adc
mov
ss
dec
cmp
jecxz
ds
lods
push
add
inc
mov
fimul
jns
adc
lahf
pop
test
int
xlat
sbb
cmp
jbe
jnp
or
cmp
ja
sbb
stos
aaa
jmp
sub
jecxz
ja
or
cli
fld
lea
in
cwde
jl
movs
jmp
lahf
cmp
cmc
fld
pop
xor
adc
mul
cmps
pop
mov
or
xchg
mov
adc
mov
iret
push
cmp
and
mov
sbb
cmps
add
ja
inc
add
cs
jmp
mov
pop
or
jmp
lock
call
js
mov
repnz
mov
jno
jmp
stos
lock
sub
(bad)
and
push
leave
jae
loopne
out
sbb
fwait
jmp
in
pop
sbb
hlt
xchg
out
inc
out
in
loopne
mov
or
or
mov
ja
stc
or
ret
cwde
int3
push
imul
mov
cdq
xor
dec
test
ins
mov
movs
xchg
sahf
sub
loope
nop
gs
sbb
add
cld
stos
repnz
fdivr
jnp
cli
shl
lock
push
sbb
cmc
stos
fisttp
dec
dec
mov
stc
jle
loopne
mov
adc
ss
jp
xchg
pop
cmps
push
cmps
inc
push
adc
mov
cmp
lea
add
aad
push
repz
jmp
pop
inc
loop
arpl
sub
jns
imul
mov
mov
and
sub
cld
mov
test
cmps
rol
cmps
sub
inc
and
bound
pusha
dec
dec
in
sub
adc
adc
in
inc
fnsave
dec
push
mov
mov
setne
xor
stos
add
mov
mov
ret
(bad)
aaa
stos
in
xchg
adc
movs
mov
fcom
pop
add
jne
stos
jge
and
cmps
test
mov
rcl
hlt
dec
jle
aaa
mov
es
fsubr
ret
loope
pop
lods
mov
and
mov
ja
cmps
push
sbb
bound
mov
outs
fbstp
cmp
xlat
dec
int3
dec
in
call
sub
hlt
inc
mov
pop
int3
add
adc
jmp
jp
push
cmp
pop
push
(bad)
imul
(bad)
sbb
push
mov
xor
shr
jmp
push
fbld
jnp
arpl
pop
push
leave
jns
loopne
fcomp
(bad)
lock
inc
xor
frstor
mov
ins
dec
jbe
pop
mov
mov
push
jbe
rcr
and
or
sbb
jmp
mov
out
adc
jae
ret
xor
stos
sub
adc
adc
neg
sub
inc
icebp
call
lock
addr16
mov
(bad)
idiv
fs
and
pop
mov
arpl
add
leave
ret
(bad)
jg
popf
and
push
rol
cmp
inc
pusha
inc
imul
movs
add
pop
xor
jg
inc
mov
repz
cmp
xchg
std
jae
movs
ja
arpl
xchg
cs
jb
sahf
pushf
add
inc
cs
dec
(bad)
mov
stos
inc
xlat
jns
or
jg
test
lahf
fcomp
push
inc
(bad)
jecxz
scas
mov
icebp
or
lods
sub
mov
outs
adc
test
dec
jg
pop
(bad)
adc
(bad)
aam
xor
icebp
nop
pop
add
retf
fldenv
dec
push
daa
mov
add
bound
ja
jo
fimul
hlt
push
in
test
or
sub
popa
pop
dec
sub
out
ret
xlat
aad
pop
cmp
je
dec
sbb
mov
gs
fdiv
data16
inc
or
addr16
adc
stos
inc
jl
xor
dec
daa
mov
cmp
sar
jecxz
retf
xchg
dec
ret
and
sti
pop
stos
sub
scas
mov
stc
dec
arpl
scas
icebp
jb
retf
sub
rol
adc
ficomp
xor
fstp
mov
fidiv
outs
adc
imul
retf
or
push
xor
push
jnp
xor
popf
out
xchg
pop
adc
(bad)
fs
xchg
mov
rcl
sti
loope
arpl
cmp
jmp
leave
out
test
pop
xchg
mov
mov
scas
sbb
ds
in
mov
leave
fldcw
aam
loopne
mov
sub
and
cmp
jns
test
inc
das
add
out
pop
and
stos
xor
test
cs
sub
arpl
(bad)
(bad)
sub
push
pop
adc
mov
jb
and
fistp
pop
add
add
rcr
push
mov
dec
mov
gs
push
sti
enter
popa
clc
lods
and
or
test
gs
out
jl
pop
(bad)
repz
popf
ins
jns
and
arpl
mov
cmps
mov
pop
xor
jb
pop
gs
xchg
mov
sti
aad
int3
imul
not
arpl
cli
mov
mov
int3
add
ror
fwait
nop
mov
jnp
pop
pop
jmp
mov
inc
scas
das
popf
mov
ret
dec
and
daa
out
push
hlt
mov
inc
jge
(bad)
pushf
push
or
outs
mov
pop
adc
xchg
cmp
push
nop
shr
movs
xchg
shl
imul
imul
movs
pop
xor
cmp
inc
aas
mov
ins
push
movs
push
jp
fnstenv
arpl
add
push
(bad)
and
or
push
(bad)
pop
sti
aam
mov
cmp
and
data16
jne
loope
mov
je
es
enter
test
mov
cmp
dec
dec
rol
daa
sub
jp
dec
dec
sahf
push
fsubrp
cdq
mov
fild
mov
adc
pop
cmps
adc
leave
xor
stos
sbb
xchg
jnp
jae
cld
jo
leave
icebp
xchg
add
or
shr
xor
inc
or
test
mov
ret
sub
outs
sub
mov
push
or
fdiv
jmp
jo
aad
cmp
neg
add
adc
repz
les
jle
sbb
in
lods
pop
arpl
cs
fmul
xchg
xlat
enter
loope
repnz
jno
adc
and
jmp
push
xchg
cmp
mov
jno
and
repz
pop
loope
dec
dec
cmp
xor
retf
sahf
dec
fist
retf
cld
xor
(bad)
je
outs
loope
inc
ror
imul
mov
call
push
push
ds
cmps
iret
add
push
fimul
int
push
(bad)
adc
sub
bnd
add
or
mov
push
out
das
mov
in
push
dec
mov
lds
mov
xor
bound
enter
and
inc
js
shl
mov
mov
or
popa
pop
(bad)
fsubr
mov
fst
xor
xor
adc
pop
mov
inc
outs
sbb
aad
mov
sbb
jno
push
mov
cmp
cmp
dec
inc
add
cdq
inc
adc
push
mov
push
mov
outs
je
mov
sahf
js
and
lock
int3
stos
or
inc
cmp
leave
xchg
push
mov
sbb
adc
xor
xor
add
push
push
mov
mov
dec
sub
in
stc
into
xlat
outs
call
jmp
fld
jno
leave
popw
jl
sbb
dec
les
adc
fistp
fbstp
repnz
imul
jnp
leave
mov
pushf
inc
imul
lea
loope
mov
sub
retf
dec
out
shl
xchg
outs
cmps
cmp
int
clc
inc
cdq
push
dec
xor
sbb
das
xchg
shl
int
cmp
jnp
mov
push
inc
add
push
cmp
(bad)
pushf
fptan
push
int
fs
push
jnp
cs
add
xor
imul
pop
sub
mov
dec
mov
das
sub
pop
xchg
mov
pop
add
sub
(bad)
cli
aaa
iret
cld
mov
sub
les
aas
adc
mov
rcr
add
or
iret
jbe
add
test
mov
fwait
ss
and
mov
mov
test
cs
das
jmp
pop
imul
push
ror
push
in
sub
(bad)
rol
fld
sahf
cmc
fs
sub
adc
call
mov
and
ins
mov
test
in
sub
movs
hlt
mov
inc
mov
jno
add
fsubr
fsubrp
inc
mov
jmp
add
enter
inc
fsubrp
daa
int
arpl
outs
out
cmp
fs
scas
test
add
sub
jno
idiv
or
sar
and
test
jno
xchg
imul
xchg
add
push
ret
adc
mov
inc
retf
cmps
fnstcw
or
pop
xchg
cmp
gs
mov
retf
mov
fs
add
arpl
xor
neg
pop
fstp
ins
pusha
mov
pop
(bad)
retf
lds
sbb
or
pop
pusha
cmps
cmc
fstp
or
ins
fcmovnb
(bad)
clc
stos
loopne
ins
mov
mov
std
sub
(bad)
sub
dec
sbb
test
scas
ss
add
inc
outs
jl
xor
shl
push
fdivr
fdiv
adc
pop
bound
sar
mov
fsubr
lods
jo
stos
xor
shl
clc
fs
pop
cmc
xchg
shr
xchg
in
xchg
pushf
sub
push
clc
xchg
push
push
setp
pop
js
cdq
rol
sbb
fimul
out
or
fyl2x
mov
rol
xchg
cs
and
dec
aas
pop
or
jge
in
jp
mov
retf
cmps
icebp
addr16
or
pop
xchg
fild
mov
adc
jmp
loope
push
adc
test
pop
add
jbe
xchg
mov
dec
push
inc
pop
out
sub
sub
push
push
out
test
add
pop
retf
out
or
popa
ret
jg
outs
mov
ss
sbb
call
dec
lahf
cmp
lahf
fld
push
test
jle
(bad)
mov
and
and
jmp
lock
fld
pop
push
adc
cld
fwait
mov
mov
pusha
popf
mov
xchg
bsf
int3
xchg
adc
nop
add
jbe
mov
add
idiv
call
mov
xor
jbe
add
or
rcr
inc
adc
into
cmp
push
push
fcmovnbe
push
xchg
ss
sbb
(bad)
sbb
add
stos
or
dec
outs
fs
call
(bad)
lea
fwait
mov
mov
pop
jl
sub
sub
rol
dec
cmps
loope
(bad)
mov
cmp
ins
lods
and
inc
fidivr
and
push
cdq
sbb
aas
push
scas
inc
inc
icebp
mov
lods
fwait
mov
aam
scas
cmp
rcl
sub
pmullw
outs
pop
mul
push
pop
xor
cmp
mov
aam
pop
and
fldenv
add
aas
ret
lods
ins
and
sub
xchg
xchg
xor
xor
inc
xchg
mov
xchg
adc
int
cwde
popf
shr
xlat
xchg
sahf
rcr
jo
or
ja
mov
adc
jp
pop
add
xor
sub
jnp
dec
adc
stc
or
rcr
cmp
push
cmp
mov
sbb
mov
lds
jne
pop
xor
mov
and
test
sbb
fwait
or
mov
aad
jns
add
int3
mov
les
pop
out
outs
mov
stos
fisubr
cmp
add
lahf
stc
daa
lock
pop
lock
mov
pop
out
fisub
jle
sar
mov
aas
retf
jmp
outs
inc
mov
aam
test
cmc
retf
aaa
push
adc
lods
push
xor
nop
xchg
pushf
adc
loope
pop
call
mov
cmp
ins
mov
mov
into
ins
lock
adc
push
fldenv
icebp
stos
adc
ret
fidivr
sbb
push
or
enter
rcr
ins
sub
retf
jg
mov
push
and
dec
ficomp
(bad)
and
push
mov
cmp
(bad)
stos
retf
dec
std
mov
xchg
xor
push
mov
dec
stos
mov
out
mov
and
sub
push
jmp
mov
test
fcmovne
sub
enter
lea
movs
test
pop
cdq
pop
retf
xchg
or
fs
push
fdivr
daa
xor
ffree
adc
fld
inc
rol
xchg
rol
(bad)
jns
sub
dec
and
cmp
or
ficomp
xchg
outs
aas
ja
mov
scas
imul
jmp
xchg
test
dec
mul
jbe
sbb
ja
mov
(bad)
outs
sub
mov
mov
ret
(bad)
jne
js
dec
stos
mov
xchg
fs
and
cmp
pop
outs
sub
sub
sahf
mov
and
(bad)
jae
movs
cmps
jle
sbb
popf
shr
out
cwde
mov
add
mov
ss
dec
ins
jb
xor
test
and
fldl2t
inc
mov
(bad)
mov
repnz
pusha
std
dec
xor
fwait
mov
vunpcklpd
outs
fcmovu
cmp
sbb
retfw
mov
repz
jg
es
imul
mov
cmp
lods
pop
rcr
ins
hlt
mov
cmp
jae
jmp
loopne
arpl
inc
xchg
mov
aad
adc
dec
fiadd
mov
movs
fwait
jle
xor
add
movs
aaa
sar
in
scas
jb
dec
icebp
stos
rcr
cmp
test
mov
out
xor
and
repnz
or
clc
push
out
cld
out
and
xchg
or
inc
test
mov
mov
jo
scas
daa
fwait
dec
fstp
stos
inc
mov
jns
movs
pop
outs
aaa
stos
addr16
iret
and
sbb
popa
push
mul
add
loop
mov
xchg
aaa
and
pop
cmp
push
adc
jb
push
xor
imul
jmp
popf
cmps
sub
pop
pop
or
jp
out
jbe
or
jae
xchg
inc
sub
das
sbb
mov
out
dec
ins
pop
push
xchg
push
xchg
mov
cdq
mov
out
sub
(bad)
dec
cmp
loopne
sub
bound
xor
sar
xor
test
loopne
pop
out
mov
scas
shl
sbb
xchg
cld
loopne
xchg
cs
ret
push
inc
js
test
fsubr
add
push
aas
call
mov
mov
pmaxub
or
bound
adc
addr16
ss
fdiv
(bad)
clc
outs
or
out
push
fs
call
sar
jg
jbe
adc
mov
neg
xchg
add
pop
adc
lds
mov
xor
xor
push
in
adc
fimul
push
or
mov
xchg
xchg
into
retf
mov
jmp
(bad)
push
icebp
or
dec
arpl
dec
lods
ret
and
or
mov
pop
xchg
mov
sbb
mov
jp
(bad)
mov
sar
popf
pop
std
sub
fst
xchg
xchg
xchg
jno
sbb
icebp
(bad)
sub
(bad)
pop
ja
add
xchg
ffree
(bad)
icebp
shl
mov
xchg
and
lds
shl
mov
pusha
mov
jbe
dec
pushf
adc
popf
fcmovbe
neg
in
cmps
pop
xchg
popf
inc
push
xchg
xlat
and
mov
call
out
jle
mov
test
jge
push
mov
sahf
lea
and
mov
adc
inc
mov
mov
add
int3
getsec
(bad)
push
fimul
mov
adc
inc
cmp
push
int
aas
or
shr
adc
or
cmp
xor
outs
xchg
mov
jnp
jg
push
leave
and
test
pop
push
shl
das
pop
rcr
scas
es
mov
xchg
jns
sub
xor
out
and
sub
mov
sub
mov
mov
xchg
xchg
das
loopne
push
pop
push
cmc
arpl
adc
outs
popf
cmps
ficom
cwde
ficomp
inc
xlat
daa
mov
sbb
movs
mov
and
std
ins
movs
shl
test
scas
add
mov
(bad)
fild
adc
lods
push
inc
dec
add
(bad)
mov
mov
jo
aas
(bad)
out
repz
sub
sub
and
and
dec
nop
out
fs
dec
lock
hlt
cdq
in
test
dec
repz
add
inc
jne
jmp
jns
ror
aad
cmp
sub
or
pushf
xor
je
lahf
dec
addr16
pop
mov
sahf
mov
mov
jg
lods
inc
lock
popa
movs
adc
add
sahf
lock
retf
out
sti
jp
inc
sub
mov
xchg
aam
rcl
stc
sbb
hlt
test
add
jmp
cmp
outs
xchg
leave
int
icebp
mov
mov
xchg
int3
sti
push
test
and
sbb
jb
mov
cmp
sbb
adc
pop
fwait
leave
pop
pop
(bad)
(bad)
jp
pop
pop
jge
jge
dec
in
push
or
ja
rcl
sub
div
test
je
dec
call
sti
(bad)
and
ins
jne
popa
aam
xchg
retf
(bad)
popa
pop
cs
push
into
fbld
pop
mov
lahf
retf
xor
bound
pop
xchg
sub
inc
arpl
imul
add
mov
aaa
sbb
fnsave
dec
adc
adc
add
mov
sbb
cmp
inc
or
add
sti
inc
in
dec
cmps
loop
jmp
mov
aaa
lock
sub
lahf
ja
data16
sub
dec
xor
add
pop
or
(bad)
outs
jmp
mov
div
outs
sti
push
aas
adc
pop
dec
fwait
lods
mov
pop
sbb
and
sub
push
sbb
pop
xor
retf
(bad)
mov
and
nop
repnz
mov
lds
add
out
int
(bad)
pop
xchg
sub
adc
adc
je
jle
mov
stos
and
sub
je
(bad)
stos
mov
pop
popf
stos
mov
mov
or
cmp
sub
jmp
cmp
outs
inc
in
xor
sbb
shl
mov
mov
jne
mov
adc
add
add
xchg
push
xchg
lea
jns
xlat
ret
push
push
push
dec
lock
aas
xor
cs
xor
adc
test
jmp
(bad)
cmc
push
inc
jecxz
add
push
push
(bad)
mov
enter
test
jle
sbb
dec
jl
cmp
add
pop
xchg
pop
in
icebp
mov
pusha
sti
push
or
dec
mov
es
or
jp
dec
(bad)
pusha
dec
mov
pop
add
lock
dec
sbb
dec
pop
(bad)
or
push
cmps
mov
xor
mov
movs
sbb
sti
sbb
jb
xlat
fs
lock
outs
mov
and
pop
mov
xor
and
ret
(bad)
or
lods
shl
push
inc
cmp
pop
bound
cmp
mov
sbb
push
aam
adc
xchg
retf
sub
lock
mov
push
aad
aas
out
stos
push
cdq
mov
ret
ret
enter
add
inc
ret
pop
adc
jne
sbb
fisubr
into
es
pop
shr
dec
mov
jmp
data16
add
add
sbb
es
out
pop
or
fwait
pop
ss
out
sub
and
push
jmp
cld
dec
scas
mov
xchg
je
mov
pop
popf
mov
mov
clc
add
pop
xchg
pop
jb
enter
mov
adc
aaa
push
push
iret
cs
je
sbb
pusha
push
lds
sub
mov
xor
push
mov
pusha
jns
inc
mov
out
adc
mov
das
xchg
jmp
call
xor
xor
mov
pop
push
xor
adc
fist
inc
add
in
int3
xchg
sbb
jno
jge
pop
cmp
xor
sti
jle
leave
test
movs
add
call
fdivr
cdq
push
inc
test
xor
mov
shr
fld
mov
imul
xchg
cmp
or
cwde
cmp
rcl
fbstp
imul
sbb
or
out
mov
repnz
int3
cmp
movs
adc
movs
inc
sar
mov
fcompp
lea
div
sahf
pop
mov
or
dec
cli
out
mov
sbb
or
lock
mov
sub
xor
add
sbb
test
fwait
push
mov
pusha
in
jecxz
xor
arpl
data16
jecxz
push
int
or
jno
mov
adc
das
dec
popa
jg
ret
mov
mov
or
sub
inc
(bad)
adc
in
xor
js
xlat
mov
inc
mov
push
mov
lods
les
std
ds
shl
pushf
jecxz
jg
out
movs
dec
fadd
movs
ret
adc
call
and
cmp
mov
mov
jbe
inc
mov
xchg
fwait
mov
or
out
ret
jmp
cmp
enter
dec
inc
cmps
mov
dec
div
mov
popa
or
mov
popa
pop
shl
jnp
add
push
lods
aaa
popf
dec
jl
test
outs
push
fsubr
loop
clc
add
into
out
mov
sub
lods
and
sub
fstp
fld
mov
xchg
ins
cld
pop
sbb
pop
shl
pop
(bad)
mov
scas
int
clc
jbe
xor
arpl
fidivr
and
inc
jo
aad
fmul
pop
pop
loope
fiadd
cmp
inc
mov
or
mov
xchg
repz
aas
into
push
sbb
in
fwait
adc
sub
hlt
dec
mov
(bad)
fstp
out
inc
pop
leave
sti
cli
iret
xchg
pop
and
mov
pop
aam
out
stos
test
cmp
ror
mov
(bad)
scas
xor
push
pop
xchg
test
icebp
or
jl
or
test
movs
jne
sti
sbb
call
(bad)
loopne
xchg
sbb
adc
sahf
(bad)
mov
mov
mov
fld
test
cld
retf
(bad)
xchg
mov
and
sbb
cdq
das
mov
pop
mov
loopne
stos
imul
ds
pop
or
cmp
daa
ds
push
test
mov
out
jb
or
repz
xchg
and
inc
cmp
dec
sub
in
cld
test
fidivr
stc
mov
dec
mov
and
dec
mov
or
fild
arpl
xlat
mov
retf
push
rcr
jno
ins
jle
hlt
aas
dec
sbb
mov
bnd
in
inc
(bad)
sbb
fisttp
mov
cli
jg
jne
mov
xchg
call
cmps
push
mov
mov
stos
neg
shr
in
int
movs
inc
cwde
cmpxchg
fcomp
mov
int3
int
pushf
xor
mov
push
pop
jo
aam
jmp
cld
cmps
pop
mov
xchg
mov
adc
pop
push
add
out
pop
pop
pop
rcr
inc
(bad)
jmp
test
scas
xor
sahf
add
inc
add
cld
enter
test
test
enter
outs
scas
retf
movs
in
jne
fmulp
jge
xchg
fdiv
fwait
jb
sbb
dec
aaa
sub
jg
fadd
mov
fucomip
sub
leave
mov
mov
ret
push
adc
xchg
neg
out
(bad)
add
fs
lods
cdq
aaa
push
mov
or
fst
mov
retf
push
push
(bad)
icebp
xor
data16
jb
sbb
cmp
cld
inc
(bad)
je
rcl
and
xlat
inc
pop
sti
out
inc
push
adc
(bad)
into
push
adc
sub
jmp
test
cmp
imul
jo
in
dec
ja
lods
mov
mov
dec
fsubr
xor
cmp
aam
(bad)
and
mov
ins
jo
pop
inc
outs
inc
(bad)
dec
sub
adc
jp
jecxz
into
dec
dec
sbb
jnp
ror
pop
dec
jle
bound
das
mov
pop
add
lds
jl
or
xor
pop
retf
jae
xchg
sub
push
int3
lods
mov
add
dec
int3
int
push
pop
aas
cdq
mov
(bad)
cwde
idiv
mov
push
in
sbb
mov
cli
outs
ret
aad
push
repz
in
out
stc
fst
je
clc
stc
ds
rcl
mov
mov
push
mov
adc
imul
mov
inc
shr
dec
jbe
mov
movs
mov
cwde
out
xlat
ror
mov
movs
out
sbb
stc
js
cmp
mov
aaa
fmul
xor
xor
movs
or
lods
and
cld
adc
cmp
std
mov
popf
and
mov
outs
pop
es
popa
retf
out
mov
dec
jae
test
mov
(bad)
repz
mov
xchg
mov
stos
popf
cmp
pushf
xor
adc
xchg
mov
ja
sahf
and
jno
dec
clc
jmp
sub
scas
fstp
scas
push
(bad)
mov
dec
cld
daa
outs
jnp
cmc
aaa
mov
push
shl
out
aaa
push
sti
mov
mov
push
out
pop
pop
push
jno
shl
jecxz
aaa
test
aas
sub
jne
out
add
jg
pusha
mov
lea
jo
fadd
mov
lods
push
mov
sahf
neg
(bad)
loop
cmp
mov
loop
xchg
sbb
ss
push
cmp
add
inc
sub
fimul
pusha
je
lock
test
enter
mov
xor
pop
test
dec
jp
pop
sbb
cmp
mov
cdq
not
mov
dec
sahf
stos
xchg
retf
sbb
test
scas
or
outs
cli
mov
sbb
out
mov
ret
inc
cwde
xchg
or
pop
fst
sahf
in
aad
mov
lock
loopne
cld
push
pusha
sub
or
popa
mov
jne
fsubr
cdq
popf
outs
mov
lahf
xchg
mov
mov
mov
xor
mov
sub
xor
xor
cli
cdq
fwait
sbb
pop
adc
je
retf
js
xor
retf
pop
push
xor
or
bound
mov
loop
mov
add
leave
call
js
or
jbe
jno
add
sub
call
lahf
or
sub
psubusb
nop
sbb
(bad)
icebp
ins
xor
stos
fldenv
pop
dec
imul
xchg
mov
xor
aaa
jge
aam
and
inc
push
jp
inc
pusha
mov
stos
sbb
jns
sahf
jg
iret
xor
ins
adc
pop
rcr
cmp
outs
add
ins
mov
add
jno
jno
repz
test
jg
dec
repnz
ret
jae
hlt
cmps
jecxz
mov
test
cmp
repnz
ja
test
xchg
xor
shl
shl
vpmovdb
scas
iret
out
lahf
repz
push
sbb
adc
xchg
fld
test
cli
loopne
pop
stos
cmps
in
inc
das
fild
dec
jg
fwait
(bad)
std
jae
sbb
mov
jl
and
xchg
loopne
dec
push
std
iret
dec
in
scas
xchg
shl
xor
adc
pop
pop
loop
jmp
sar
mov
cmp
neg
stos
jo
ret
outs
lahf
inc
cli
xchg
popf
xchg
loopne
adc
jmp
inc
jmp
outs
and
pop
adc
push
push
jb
dec
ret
pusha
neg
lds
into
cmp
mov
jnp
push
sbb
mov
sub
xchg
das
push
mov
cwde
mov
ret
aas
and
jae
push
mov
pop
or
xor
mov
dec
(bad)
outs
xor
push
enter
mov
jmp
not
imul
dec
ss
add
pop
pop
cmp
retf
cmp
mov
push
cmps
mov
or
jle
cmp
xor
sub
add
jno
inc
sub
jae
mov
mov
mov
outs
dec
(bad)
pushf
test
sar
test
call
xchg
outs
cli
stc
adc
test
rcr
xchg
and
repz
jg
add
fistp
mov
shr
std
call
call
sbb
test
pop
sub
test
cmps
mov
dec
xor
mov
xchg
mov
mov
mov
pop
out
push
popa
inc
cmp
(bad)
or
xor
inc
les
adc
push
sbb
lds
aam
out
outs
ins
xchg
out
clc
mov
lahf
sbb
leave
or
push
daa
outs
mov
dec
ret
sbb
adc
sbb
shl
sahf
or
xor
inc
mov
js
bound
mov
mov
or
stos
out
push
jno
push
stos
sbb
sbb
test
pop
and
cmp
stos
movs
and
retf
(bad)
cli
dec
mov
jbe
xchg
push
mov
retf
lods
imul
cwde
std
xchg
and
jbe
js
fadd
iret
adc
or
xchg
mov
push
loopne
or
test
call
sub
movs
(bad)
pop
in
jno
cmp
outs
xor
push
push
jle
jp
stc
in
nop
nop
(bad)
hlt
lods
cld
mov
adc
and
shl
fwait
xchg
or
pop
out
xor
push
dec
and
lds
aas
aad
dec
or
mov
push
mov
add
cmc
(bad)
fisttp
cs
imul
or
cmps
and
add
outs
cli
mov
dec
loop
bound
les
sbb
int3
xor
sub
xor
cmp
mov
and
mov
pop
mov
jne
mov
jecxz
ja
mov
test
in
add
or
and
test
jns
int
dec
adc
push
ja
xchg
hlt
out
sub
enter
(bad)
pop
repnz
inc
sub
and
dec
jmp
lods
and
fld
mov
sbb
pop
mov
mov
push
les
pop
stc
cmp
(bad)
outs
rcl
dec
pop
push
push
xor
adc
mov
ret
movs
inc
sbb
or
adc
pop
sbb
mov
push
add
dec
into
scas
retf
(bad)
and
test
out
js
push
push
dec
stos
xor
std
jg
pop
imul
stos
scas
into
stos
outs
push
jmp
test
in
jle
dec
movs
xchg
lds
sub
ror
imul
jl
(bad)
push
sbb
scas
aad
imul
xchg
rcl
xor
xchg
fwait
std
jne
gs
pop
cmp
addr16
and
push
outs
sbb
scas
xchg
cmp
pop
out
or
add
call
addr16
dec
dec
add
int3
aaa
(bad)
mov
and
sub
inc
sub
retf
mov
popa
(bad)
out
cmp
rcr
(bad)
jnp
jns
add
sbb
sub
jb
clc
stos
xchg
add
xchg
add
imul
xchg
mov
movs
sbb
call
out
pop
ss
push
nop
arpl
mov
scas
es
outs
add
mov
jle
hlt
jo
es
cmp
outs
adc
loop
cmp
cdq
sbb
(bad)
pop
imul
popa
stc
sbb
adc
rcr
jnp
imul
xchg
inc
pop
cmp
test
stc
pop
femms
(bad)
push
lds
jg
repz
sbb
push
cld
jo
mov
rcl
jp
fistp
mov
in
push
pushf
fcmovnb
adc
or
push
jbe
mov
shr
xchg
bound
push
mov
lea
into
dec
xor
mov
adc
ins
jne
xor
mov
sub
ror
js
push
push
mov
rol
ins
pushf
inc
or
push
inc
jnp
pop
pop
xchg
mov
movs
es
in
add
pop
mov
mov
retf
lds
pop
fcomp
pinsrw
sub
mov
in
jo
cli
mov
cmps
std
addr16
jns
mov
push
mov
pop
test
jns
xor
add
pop
mov
stos
jno
mov
jno
stos
scas
pop
pushf
outs
sbb
out
rol
stos
test
push
stos
es
and
add
cwde
cmps
sti
mov
xchg
mov
adc
add
jmp
jns
mov
cmp
test
push
adc
int
jns
aaa
std
xchg
frstor
aas
jae
dec
jno
jmp
cmc
mov
icebp
cmps
ja
sbb
xchg
lahf
mov
inc
sbb
inc
(bad)
sub
addr16
(bad)
in
dec
fadd
jmp
stos
(bad)
fist
popa
imul
daa
lock
sbb
adc
inc
push
add
inc
add
ret
mov
inc
mov
ret
pop
jg
push
inc
push
or
jl
arpl
and
pop
(bad)
dec
pushf
(bad)
xchg
pushf
or
sbb
push
das
cmp
cli
adc
xchg
push
push
jge
adc
je
cmp
push
std
movs
test
mov
or
int3
push
adc
adc
cmp
(bad)
xchg
daa
pop
add
sahf
push
pop
out
mov
mov
neg
mov
fdiv
ins
or
and
ss
add
cmovnp
lods
push
call
(bad)
test
sub
cmp
mov
(bad)
in
jmp
add
lea
mov
push
(bad)
jnp
test
(bad)
repz
sub
gs
test
cmp
hlt
call
into
cmp
es
cmp
dec
stc
jmp
ret
push
inc
push
test
(bad)
cmp
sahf
das
stos
xor
int3
(bad)
jmp
cwde
js
in
sbb
fild
ss
leave
jecxz
ret
mov
out
cs
rol
mov
rcr
in
add
or
aad
lods
inc
sbb
lock
ret
add
mov
xchg
sbb
adc
jle
xchg
xchg
pop
or
jl
in
mov
clc
cmc
dec
dec
add
xchg
sub
mov
or
es
imul
icebp
and
in
adc
fwait
inc
sbb
mov
ret
mov
push
fsub
outs
jns
or
mov
out
push
jp
fmul
jbe
scas
pop
sbb
js
addr16
retf
cmp
imul
mov
jo
mov
stos
repnz
stos
dec
leave
das
dec
sbb
leave
dec
inc
add
sbb
mov
test
pop
mov
jmp
adc
and
dec
in
mov
loope
(bad)
cmp
jmp
cmp
push
cmc
cmp
jp
mov
in
mov
ret
pop
cmp
mov
cs
ficom
push
mov
xor
(bad)
adc
loop
lds
aad
pushf
dec
cmp
test
or
jp
sbb
jp
dec
mov
ja
shl
push
les
shl
int3
push
xchg
cld
scas
pop
xchg
or
fs
and
in
mov
mov
enter
sbb
outs
mov
add
push
out
int3
mov
xchg
mov
add
pusha
or
mov
or
sbb
pop
(bad)
jle
(bad)
out
test
out
cmp
scas
mov
xchg
stc
mov
xchg
imul
aas
and
xor
mov
add
cs
lds
cmp
retf
mov
rol
push
xchg
push
sub
push
fmul
mov
sbb
dec
in
hlt
mov
call
xchg
push
jp
jae
xchg
stos
pushf
shl
out
cld
cmp
out
jne
jl
(bad)
in
cmp
push
mov
dec
loopne
imul
push
mov
mov
jnp
lds
add
mov
mov
clc
jne
rcl
rcr
in
stos
add
inc
jmp
stos
sub
test
dec
dec
sub
jno
mov
outs
or
cmps
or
push
jne
rol
adc
aas
cmps
test
popf
sub
adc
pop
nop
inc
sbb
iret
ins
mov
sbb
popa
cmps
sbb
inc
pop
mov
mov
imul
icebp
xchg
mov
in
sub
out
xor
adc
aaa
les
pop
int
das
lea
jle
iret
jb
dec
jmp
enter
adc
cdq
stos
repnz
imul
jmp
cs
call
je
and
icebp
push
xor
sub
mov
pop
xor
cmp
ds
pusha
sbb
dec
loopne
enter
ins
jmp
out
les
jge
xchg
mov
movs
mov
inc
nop
hlt
and
test
jns
mov
xchg
scas
xchg
xchg
mov
out
pop
jno
cs
jbe
dec
pop
jecxz
cmp
rcr
xor
lods
inc
cwde
mov
scas
sub
mov
mov
add
sbb
and
jae
in
jle
je
call
in
das
xchg
xchg
jo
lods
dec
shl
ffree
pop
inc
xchg
cmovno
sbb
popf
mov
add
sub
or
pushf
push
cmp
aam
repz
imul
push
outs
(bad)
dec
leave
inc
mov
mov
inc
ja
(bad)
js
ins
dec
iret
add
add
mov
add
movs
cmp
in
call
mov
outs
xchg
push
and
scas
test
nop
sbb
and
cmps
mov
and
mov
shr
lods
inc
pop
not
nop
mov
syscall
retf
xchg
ror
repz
ds
jmp
outs
dec
loop
cmp
mov
xor
cmp
and
jmp
out
in
popf
(bad)
repnz
shl
push
sbb
out
mov
mov
xchg
cmp
stos
mov
outs
add
and
jg
les
out
shl
in
ins
jg
jle
mov
fisttp
xor
mov
push
das
cwde
push
pop
mov
(bad)
sub
cmp
xor
stos
dec
aaa
push
mov
shl
mov
lock
fiadd
cmp
pop
fcomp
jp
sub
sbb
push
outs
jbe
dec
(bad)
xchg
jo
sbb
push
push
pop
or
sbb
xor
push
shr
dec
adc
mov
jmp
lods
xchg
retf
dec
mov
fwait
add
arpl
ret
fdivr
lock
mov
mov
inc
arpl
inc
imul
sub
push
(bad)
imul
shr
ret
add
clc
gs
pop
jle
dec
mov
std
in
sub
xchg
stc
cli
and
cmp
add
ins
and
jae
int3
xchg
or
fcomp
push
mov
push
cwde
out
arpl
add
int3
shl
data16
jle
and
int3
push
ret
call
inc
push
push
and
(bad)
adc
mov
and
jecxz
xchg
adc
gs
mov
inc
push
cmps
sub
dec
add
and
mov
pop
pop
adc
sub
push
xchg
inc
scas
or
mov
pop
inc
sub
push
sbb
push
push
mov
xor
scas
or
sub
ss
xchg
sbb
and
out
pop
std
xchg
adc
cwde
mov
and
ins
iret
pop
add
xchg
mov
or
pop
clc
(bad)
or
ss
test
test
rol
xor
add
sub
(bad)
cmp
data16
idiv
jecxz
popf
outs
sub
pop
dec
cmps
nop
test
(bad)
imul
xor
dec
jp
inc
imul
(bad)
aam
jl
push
xchg
mov
mov
call
sub
imul
or
pushf
in
push
push
daa
mov
sbb
movs
movs
jl
fld
aas
fild
icebp
fimul
pop
mov
retf
cmp
cmp
or
enter
les
sbb
jmp
ja
mov
icebp
fcmovb
push
in
cmp
jmp
pop
jge
outs
inc
test
rcr
fmul
add
add
sub
xchg
push
(bad)
pop
xor
or
sbb
das
or
cmp
in
imul
jno
cli
push
xchg
imul
and
dec
push
es
and
in
mov
mov
push
daa
enter
into
fwait
nop
mov
mov
lds
aad
mov
(bad)
lods
(bad)
pop
mov
imul
fs
sbb
(bad)
loopne
mov
fucomp
cmp
pop
add
push
pop
mov
daa
ret
pop
xchg
popf
sbb
nop
pop
out
loopne
mov
inc
sar
test
sbb
shl
pop
movs
pop
jns
daa
(bad)
aam
xchg
and
push
mov
repz
mov
add
into
lock
les
xchg
adc
mov
es
sbb
push
mov
jnp
sbb
push
lods
xchg
jp
retf
cmp
mov
add
push
or
adc
adc
lods
push
in
scas
jo
add
xchg
xor
mov
add
mov
fidiv
sub
inc
mov
cmp
call
xor
dec
scas
add
add
scas
bnd
sbb
push
(bad)
pop
repz
xchg
jp
fisubr
retf
in
mov
aad
and
outs
enter
adc
cmovge
std
stc
and
jb
inc
popa
mov
dec
xchg
pop
inc
ret
shr
jmp
aad
or
jns
pushf
js
inc
leave
xor
movs
hlt
lea
xor
and
arpl
sahf
adc
adc
fisttp
mov
xor
arpl
sub
data16
adc
stc
xor
loopne
sbb
(bad)
out
nop
and
push
fs
sbb
repz
jmp
push
fadd
and
inc
int3
add
test
cmp
ss
ds
sub
inc
(bad)
cmp
and
fdivr
sub
repnz
lods
iret
xchg
ja
(bad)
mov
sub
jae
and
movs
mov
push
scas
bswap
out
lods
lods
test
mov
sbb
rol
ins
cs
mov
mov
mov
test
cmp
cli
and
mov
jae
pop
fmul
xchg
pop
test
mov
push
xchg
push
sbb
jmp
xchg
pop
pop
es
xchg
addr16
add
jnp
in
jbe
push
dec
mov
imul
loope
das
cmps
nop
out
add
movs
jnp
adc
sar
or
or
pop
inc
enter
scas
mov
cli
fs
mov
add
mov
ja
xor
sbb
aad
xchg
mov
cmps
lahf
mov
mov
outs
in
mov
push
inc
pop
movs
jmp
mov
ret
cdq
fs
sbb
clc
xchg
and
or
push
push
lahf
jecxz
pop
cmc
rol
mov
imul
enter
ins
(bad)
jecxz
xor
and
jle
xchg
push
xor
inc
mov
jl
sbb
pop
imul
and
leave
int3
sbb
adc
dec
or
loopne
mov
lods
out
push
out
sub
movs
xchg
les
jnp
aam
adc
test
out
xlat
ss
clc
fnstsw
mov
fisttp
jle
cmp
hlt
cmp
cmc
xlat
mov
mov
(bad)
dec
(bad)
mul
sbb
repz
dec
or
cli
dec
adc
icebp
int
div
xchg
dec
cmp
pop
mov
dec
je
inc
and
nop
fs
sbb
neg
les
(bad)
outs
jge
adc
adc
pusha
shl
ror
push
ror
mov
jg
push
int
scas
sbb
or
enter
inc
lods
aad
dec
cmp
xor
xchg
push
xor
inc
mov
fcmovu
sahf
or
mul
lahf
mov
jp
xlat
mov
pop
call
sbb
jne
cmp
cmps
inc
mov
out
dec
mov
or
stc
sbb
daa
es
push
xchg
fadd
xor
cmp
dec
cmp
jp
mov
push
pusha
jo
dec
shl
aas
adc
and
call
out
mov
jmp
repz
ja
jnp
xchg
call
add
mov
pop
xor
iret
add
nop
jae
mov
test
mov
sub
out
and
adc
jns
rcr
jge
dec
xchg
cwde
shl
mov
popa
outs
dec
sbb
aas
xchg
imul
dec
jecxz
mov
test
pop
push
xchg
paddsb
loop
dec
inc
call
cmp
dec
int3
lods
sub
inc
js
dec
cmc
xor
sti
iret
dec
xlat
call
addr16
and
or
jge
adc
mov
push
jno
sti
test
adc
ja
xor
int
add
sub
mov
xchg
sbb
sbb
rol
(bad)
fwait
lea
xchg
cmp
sub
jno
cmp
loopne
cmp
data16
xor
xchg
jmp
pop
aaa
ds
ja
addr16
or
aam
icebp
or
sbb
out
mov
dec
stc
mov
adc
adc
mov
aad
call
xchg
sub
les
xchg
push
daa
pop
sub
adc
cmp
repnz
scas
stos
sub
pop
or
fild
aas
dec
movs
call
test
push
fsincos
mov
mov
dec
mov
adc
das
jno
std
cmp
or
xor
xchg
loopne
fidiv
jecxz
ins
mov
xchg
and
or
into
adc
dec
ins
hlt
dec
jmp
mov
xchg
mov
pop
out
call
push
and
xchg
xchg
sub
ror
pop
or
inc
cmp
fsubr
mov
cmp
or
mov
push
mov
xor
push
(bad)
stos
out
int
aaa
das
ins
retf
fstp
data16
mov
cmp
mov
or
jp
sbb
aas
sub
add
test
js
xchg
call
dec
gs
add
fcomp
stos
mov
mov
inc
imul
mov
push
dec
pop
loopne
out
inc
setbe
mov
mov
ja
mov
enter
daa
xchg
sbb
iret
mov
mov
jne
js
dec
popa
mov
in
bnd
pop
loope
inc
adc
out
dec
test
jns
jecxz
ins
add
js
hlt
cmp
sbb
jne
pop
mov
jl
push
iret
pushf
push
mov
lds
inc
dec
test
in
mov
in
xchg
dec
pop
int3
mov
push
push
add
mov
dec
shl
cmp
shrd
inc
loopne
sbb
mul
bound
xor
sahf
aas
cmc
mov
(bad)
xchg
fnstcw
xchg
mov
mov
mov
lahf
aaa
loopne
popa
std
outs
fucomip
jne
fisttp
retf
pop
inc
jb
jne
mov
shl
loopne
pop
fs
cmp
jp
sub
sahf
imul
data16
xchg
push
movs
and
add
cmp
in
aas
inc
test
or
pop
aam
mov
mov
ror
mov
adc
psraw
push
xor
mov
pop
adc
sbb
pop
xchg
inc
out
jmp
ins
movs
jo
and
push
sbb
push
lods
mov
nop
push
xor
mov
fsubr
mov
inc
and
scas
pop
dec
jne
addr16
pushf
les
in
scas
cs
out
dec
xchg
ins
cdq
mov
mov
lock
add
cmps
jl
dec
mov
les
not
cwde
pop
test
inc
adc
mov
push
pop
inc
jge
jb
je
push
or
dec
pop
ds
repnz
dec
out
sub
lods
inc
pop
mov
jmp
dec
xchg
jbe
cwde
lods
and
movs
push
mov
dec
out
bnd
ror
sbb
ins
(bad)
mov
sbb
aad
xor
dec
in
dec
sub
mov
push
mov
sub
xor
jge
pop
and
loopne
je
dec
mov
jns
leave
sub
int3
jbe
loope
or
das
sub
aad
cmc
mov
jmp
data16
xchg
repnz
mov
mov
ss
add
cmp
or
mov
push
jns
fisttp
and
fdivr
fimul
and
pop
mov
or
xchg
les
mov
stc
push
jmp
or
cld
fcmovnu
and
cmc
inc
outs
imul
and
out
xchg
shl
fisttp
data16
leave
push
mov
das
pushf
adc
adc
inc
out
out
test
xor
fild
pusha
in
sbb
movs
pop
daa
xchg
mov
jl
(bad)
or
jl
cdq
pop
or
xchg
pusha
xchg
mov
cmc
mov
sub
shl
push
sub
popf
iret
dec
xor
loop
fisttp
xor
pusha
jle
mov
loopne
inc
lods
or
jmp
sbb
sub
icebp
xchg
xor
fistp
xor
pop
push
sub
pop
xor
sub
call
push
(bad)
(bad)
or
mov
and
xchg
jbe
call
scas
cmp
jno
or
cmp
adc
cs
jmp
pop
(bad)
cmc
pop
std
outs
ds
cmps
mov
arpl
or
pop
or
fstp
imul
adc
add
test
ins
outs
add
cmp
pop
dec
mov
cmp
retf
pop
int3
data16
and
daa
cwde
rol
stos
cmps
out
xchg
ror
hlt
adc
jmp
aam
xor
jns
imul
(bad)
sub
out
and
inc
addr16
jae
xchg
clc
stos
inc
aaa
xchg
aad
stc
in
mov
out
and
fwait
inc
mov
jbe
ficomp
ds
push
adc
add
mov
(bad)
cmps
or
bound
dec
add
mov
ret
in
sbb
in
mov
imul
movs
jmp
inc
jp
and
pop
scas
pop
std
sub
mov
mov
aam
retf
movs
ret
mov
xchg
jmp
ins
pop
ror
sbb
mov
pop
scas
cmp
mov
movs
arpl
mov
jmp
sub
sbb
add
fstp
ror
lods
mov
mov
mov
daa
pop
ins
js
mov
outs
push
mov
mov
mov
mov
mov
out
data16
adc
xor
xlat
dec
add
inc
mov
cmp
sbb
push
retf
pop
mov
ins
fnsave
jns
loop
in
iret
repnz
outs
add
(bad)
adc
mov
mov
cmp
cmps
out
xchg
mov
xchg
pop
popf
call
mov
cli
sub
scas
xor
pop
cs
sbb
ins
mov
xor
xchg
inc
dec
jle
push
pop
es
xchg
shl
pop
or
mov
adc
mov
in
stos
es
pop
out
fistp
sbb
add
xchg
mov
loope
jmp
xor
int3
addr16
(bad)
xchg
arpl
leave
bound
ss
mov
fld
jnp
mov
ffree
je
add
and
xor
scas
ret
xor
jo
sub
lods
mov
sub
sub
or
mov
cmp
jne
les
ret
cdq
out
mov
rol
xor
test
sti
loopne
push
fld
sbb
push
fsub
inc
mov
scas
mov
fld
je
jge
xchg
cmc
inc
jecxz
(bad)
outs
xor
hlt
fnstcw
mov
iret
js
out
and
dec
test
ret
aam
(bad)
mov
popf
mov
data16
ja
and
loop
scas
xor
mov
sahf
mov
imul
test
dec
pop
movs
cmp
push
ss
nop
or
dec
dec
mov
mov
gs
adc
imul
adc
in
mov
imul
push
stos
push
xchg
push
push
mov
mov
ror
gs
inc
aam
outs
pop
adc
ins
cmps
pop
imul
pop
push
leave
daa
and
les
mov
xchg
pop
sbb
test
inc
popa
shr
(bad)
jb
lahf
pcmpeqw
ret
jae
test
call
call
movs
fidivr
clc
sbb
or
pop
in
shl
xor
movs
ror
push
jp
xor
or
popf
inc
push
popa
leave
jne
cmp
push
out
push
stos
pop
jl
sbb
xchg
and
stos
fstp
jb
pop
mov
add
inc
fdivr
cmp
ins
icebp
in
xor
nop
pop
dec
push
(bad)
pusha
pop
dec
out
ja
sub
pop
clc
jg
lea
dec
jg
push
pop
mov
(bad)
mov
xchg
hlt
xor
mov
cdq
fnstenv
mov
mov
xchg
pop
cli
out
in
jb
jno
lahf
pop
outs
jmp
or
xor
clc
imul
dec
data16
fwait
and
loope
ins
retf
mov
es
mov
pushf
jae
mov
in
dec
nop
mov
cmc
out
dec
js
push
imul
add
mov
(bad)
popa
sub
in
ja
enter
xor
mov
call
mov
cmc
inc
nop
push
pop
pop
cmp
or
adc
movs
mov
dec
sbb
mov
sbb
jbe
xchg
inc
push
lea
iret
ret
psubw
test
or
arpl
enter
xchg
stos
cmps
or
lahf
sbb
inc
and
xlat
or
mov
xsavec
aaa
adc
fwait
jo
int
lahf
clc
imul
retf
cs
inc
sub
arpl
scas
retf
cmc
(bad)
fld
stc
mov
add
ds
xchg
jge
or
nop
(bad)
idiv
(bad)
fwait
add
divps
ds
ret
ins
mov
shl
int3
call
aaa
mov
xchg
or
fwait
jae
mov
ja
int3
lock
jo
lods
outs
mov
mov
icebp
std
xor
ins
das
ror
pop
sub
xchg
repz
cmp
into
dec
mov
mov
lods
inc
pop
fst
sub
je
jecxz
dec
jns
ss
jmp
push
jmp
mov
stc
jnp
ret
xchg
and
mov
(bad)
jmp
ror
test
xor
int3
out
sub
ins
daa
(bad)
lods
dec
xlat
(bad)
push
adc
or
jnp
xchg
lock
add
(bad)
xchg
mov
fidivr
or
push
mov
fwait
mov
fistp
call
push
into
cmp
les
retf
cmc
push
shl
push
xchg
lahf
mov
jns
out
sub
push
shl
out
fisttp
fstp
mov
mov
and
dec
aaa
mov
call
repz
arpl
cmp
in
retf
sti
or
adc
xchg
stos
bound
cmp
push
mov
pop
ret
cmp
cmp
in
jnp
jno
fdivr
int3
pop
jbe
(bad)
in
repnz
aas
ds
add
xchg
pop
bnd
jle
mov
xchg
pop
mov
jnp
push
jecxz
sub
les
pop
sbb
xchg
or
mov
mov
push
sbb
jo
inc
shr
adc
mov
pop
loop
test
push
out
ss
pop
test
xchg
adc
sbb
push
ins
(bad)
xor
dec
popf
hlt
xchg
dec
nop
mov
pop
std
add
pop
mov
cmp
xchg
dec
movs
(bad)
movs
(bad)
jnp
lods
sub
scas
mov
and
lds
cs
mov
xlat
add
rcl
je
icebp
mov
cmp
sub
aas
add
arpl
mov
popa
add
lods
nop
scas
sar
or
adc
icebp
mov
adc
lea
mov
xlat
mov
or
mov
into
movs
mov
into
shl
sub
sub
lods
or
push
dec
loope
test
je
addr16
dec
pushf
ss
xchg
mov
mov
(bad)
or
mov
stos
or
mov
scas
mov
js
movs
cmp
lods
push
add
or
popa
push
int
and
xchg
mov
test
jge
adc
ficom
dec
or
xchg
repz
mov
arpl
cmp
mov
inc
lea
jp
call
or
mov
cmp
pop
lds
push
arpl
xchg
xor
mov
sub
ror
movs
or
sbb
stos
cmc
test
adc
add
pop
jl
xchg
dec
mov
mov
cmps
add
jl
push
je
dec
call
xchg
cmp
inc
pop
pusha
mov
fwait
or
ins
imul
cmc
hlt
lods
ss
xor
cli
mov
mov
mov
or
sub
shl
cmp
lods
sar
je
push
sbb
and
(bad)
dec
sub
(bad)
leave
xor
and
push
cmps
mov
jecxz
jns
int
cmp
test
cdq
in
pop
sub
popf
pusha
mov
mov
mov
enter
pop
pop
sub
mov
xchg
popf
jl
dec
or
mov
loopne
fs
test
sbb
pop
mov
das
pusha
jns
push
add
test
ficomp
(bad)
dec
pop
(bad)
scas
pusha
mov
dec
ins
fs
xchg
mov
imul
movs
stos
pushf
pop
mov
lds
sub
out
dec
add
inc
and
pop
(bad)
cmc
(bad)
fcom
movs
sar
enter
mov
push
sub
sbb
out
mov
(bad)
aas
dec
or
addr16
int3
int
test
fadd
jecxz
cli
rol
daa
sti
or
cmc
cs
add
std
sub
cmc
dec
jge
mov
dec
lahf
jbe
cmp
and
sub
popf
fimul
or
inc
xchg
cmp
retf
ss
test
rcr
call
xlat
(bad)
repz
xchg
add
cmp
add
add
outs
push
xor
lods
xchg
xor
or
inc
lds
sbb
sbb
dec
push
out
in
jns
mov
pop
fs
aad
adc
push
cmp
inc
and
jp
(bad)
push
mov
stc
mov
call
out
sub
movs
retf
fs
mov
inc
push
sahf
adc
fisub
cdq
arpl
jge
cs
jns
clc
dec
fstp
mov
inc
leave
nop
loop
jbe
adc
inc
test
call
jmp
sbb
out
mov
je
jmp
jp
sub
outs
scas
pop
out
mov
dec
adc
popa
xor
lea
lods
stc
shl
adc
cmp
int3
leave
xor
fcmovb
push
jg
mov
mov
and
fdivrp
jl
add
mov
es
mov
pushf
fnsave
retf
gs
gs
aas
data16
xor
test
ret
repnz
cmp
mov
mov
pop
jne
sub
scas
cmp
adc
jmp
or
test
pushf
into
neg
jle
push
push
or
out
mov
jmp
dec
fwait
or
js
mov
xor
mov
rcl
hlt
enter
test
adc
div
lahf
adc
sbb
pushf
xchg
rcl
pop
sub
dec
pop
fcmovnbe
(bad)
jmp
les
dec
mov
stos
test
arpl
pushf
imul
jae
stos
test
mov
jle
sub
sbb
mov
fstp
mov
gs
push
sbb
or
push
mov
movs
jp
mov
xchg
test
ret
adc
inc
sbb
or
adc
rcr
mov
dec
and
pop
test
jge
or
cdq
stos
sti
les
mov
test
and
js
mov
sar
test
fldenv
enter
ins
sub
mov
cmp
cli
test
pop
(bad)
icebp
push
fistp
mov
xlat
mov
mov
jmp
mov
mov
sbb
ret
es
into
jno
or
out
sahf
mov
mov
adc
jae
leave
shl
cmc
push
loopne
pushf
jmp
inc
cmp
imul
mov
push
pop
fistp
sbb
xor
cdq
dec
pusha
fimul
cli
and
popf
mov
xchg
mov
fadd
rcl
sbb
jmp
add
jmp
in
xor
add
push
ret
hlt
mov
jbe
(bad)
cld
sahf
pop
daa
je
fimul
xchg
jge
std
stc
fild
mov
ins
push
push
mov
sbb
xor
and
(bad)
aad
fadd
(bad)
inc
fwait
in
xchg
aam
or
xor
or
add
fld
mov
dec
xor
or
and
push
fiadd
retf
call
inc
aam
dec
sub
sbb
mov
and
gs
mov
xor
pop
xchg
sub
add
test
sbb
sub
mov
adc
jo
test
xchg
ret
adc
fwait
movs
add
xor
dec
xchg
cmp
cmp
inc
mov
mov
dec
xchg
inc
or
mov
(bad)
ins
test
dec
in
pop
inc
lods
rep
scas
pop
xor
jl
mov
rcr
push
and
sub
push
and
jmp
inc
jno
cmp
loop
xchg
aas
xchg
je
cdq
sbb
sbb
scas
daa
sub
mov
aad
dec
retf
(bad)
sahf
das
pop
push
mov
cmp
lods
sbb
and
dec
push
enter
xlat
loop
idiv
in
out
out
cmp
mov
test
inc
scas
push
add
(bad)
jmp
lea
(bad)
xor
dec
sub
add
adc
lds
pushf
into
cs
adc
dec
mov
mov
dec
(bad)
push
push
inc
dec
sbb
mov
adc
and
xor
add
daa
dec
aam
pop
mov
ins
loope
xor
push
sbb
icebp
jno
pop
das
scas
das
clc
sbb
adc
add
jo
mov
mov
jecxz
push
(bad)
cli
xchg
cmp
xor
push
into
pop
and
xlat
ret
(bad)
call
ret
retf
std
int3
out
push
jmp
fild
addr16
pop
xchg
jb
mov
or
mov
inc
adc
inc
mov
pop
das
test
push
loop
ja
fdivr
xchg
inc
in
push
aas
adc
aaa
jmp
push
mov
jmp
sbb
xchg
push
xlat
std
mov
xlat
jmp
fnsave
adc
retw
dec
sub
out
jb
sti
dec
aad
add
les
(bad)
cmp
pop
aad
lods
ds
pop
scas
js
mov
std
mov
and
out
pusha
pop
mov
cmp
mov
push
das
and
sub
scas
and
xchg
mov
rcl
in
and
mov
pop
jns
inc
pop
sub
repnz
in
pop
lahf
xor
jle
scas
test
lods
fadd
dec
cmp
sbb
sbb
iret
cmps
rep
pop
push
pop
ins
or
(bad)
xor
arpl
in
jno
jnp
ss
pop
pop
cmp
xor
lods
movs
inc
int3
mov
pop
adc
pop
and
xchg
lds
jp
add
jne
pop
pop
fsubr
retf
sbb
and
jg
mov
sbb
push
mov
xchg
pushf
leave
mov
mov
push
pop
xchg
jns
mov
adc
jmp
xchg
ins
jbe
fisttp
sub
imul
mov
mov
and
sub
call
adc
adc
lahf
call
mov
add
out
(bad)
mov
imul
inc
adc
jmp
mov
jge
jmp
jecxz
lock
add
test
test
and
add
shl
cld
lahf
sti
dec
lods
loop
add
xchg
cs
lods
cmp
shr
push
cmps
aaa
cdq
jmp
aam
movs
inc
jmp
add
je
(bad)
cmp
sub
pusha
aaa
sar
stos
mov
cld
push
sub
jbe
loop
mov
mov
dec
es
jp
jmp
jae
std
dec
lea
mov
stos
sub
pop
out
enter
jmp
and
test
xor
js
pop
jnp
mov
clc
xchg
xor
icebp
int
nop
mov
in
repnz
push
std
out
loope
pop
xchg
add
xchg
rcr
in
pop
out
pop
rol
mul
mov
(bad)
sub
pop
inc
xchg
pop
mov
sub
push
ret
jmp
pop
arpl
cmp
and
add
and
bound
iret
add
cld
mov
xchg
leave
push
addr16
popa
outs
or
mov
mov
mov
mov
sbb
leave
jecxz
inc
push
aad
xchg
mov
push
imul
movs
je
ds
in
adc
loop
fmul
mov
jo
and
xchg
jg
in
addr16
inc
jmp
inc
popa
shl
in
pop
rol
sub
sbb
out
cmp
cmc
stos
aas
out
and
popf
bound
xor
ror
and
repnz
mov
stos
cmps
sub
rcl
mov
xchg
cmp
pop
adc
ret
popa
sub
aaa
sbb
(bad)
dec
movs
hlt
mov
test
loopne
jg
cmp
ror
mov
mov
ret
pop
inc
push
pop
push
dec
and
or
adc
inc
pop
mov
iret
dec
test
fadd
xchg
dec
or
push
and
inc
sub
outs
xchg
cs
dec
mov
add
inc
pop
test
addr16
repnz
icebp
dec
addps
add
pop
sbb
or
inc
pop
push
adc
push
jb
and
adc
mov
rol
mov
arpl
xchg
adc
inc
test
in
mov
in
push
push
push
repnz
arpl
jl
inc
and
jno
dec
inc
test
gs
cdq
jecxz
pop
pop
imul
movs
or
arpl
adc
(bad)
mov
fist
or
daa
(bad)
adc
js
cmp
sbb
shl
inc
sub
not
mov
inc
pop
cmc
int
ja
jne
scas
imul
scas
call
mov
jbe
jl
in
xor
shl
jle
push
xor
in
jmp
out
cmp
xor
test
cld
jmp
lahf
xor
jg
fdivrp
lock
inc
mov
loop
iret
adc
sub
pop
es
cwde
jecxz
and
popf
imul
sub
jnp
inc
sbb
dec
pop
push
popf
push
sbb
xchg
inc
ins
mov
cmps
xchg
addr16
icebp
push
push
xor
scas
(bad)
sbb
in
sbb
minps
ror
inc
lahf
jae
sub
retf
outs
mov
sti
repnz
xor
fisub
lea
pop
push
sahf
mov
std
cmps
neg
call
sub
pop
xchg
(bad)
jns
push
js
movs
mov
and
jns
outs
fisubr
and
sub
shr
xchg
loop
pushf
pop
mov
adc
leave
mov
adc
sahf
jb
into
cs
les
mov
mov
cmc
dec
fbstp
sub
cmp
(bad)
dec
push
and
and
stos
cld
sahf
outs
xlat
jnp
dec
dec
pmaxsw
retf
dec
pop
mov
add
cdq
lock
adc
push
jo
arpl
mov
popa
test
test
dec
repz
cmps
addr16
rcl
rcr
pushf
xor
xchg
mov
cmp
jnp
cmc
inc
add
mov
jge
(bad)
cdq
lea
dec
inc
jle
nop
dec
mov
mov
push
in
or
(bad)
cmp
(bad)
(bad)
inc
pop
nop
pop
add
lea
in
gs
mov
cld
sbb
mov
loop
and
sbb
mov
dec
sub
mov
ins
cmp
cmp
cmp
push
aad
inc
out
push
sbb
movs
jge
test
rcr
(bad)
jb
mov
sbb
out
jnp
add
sub
shr
fcomp
(bad)
mov
or
out
dec
inc
push
jle
popa
pop
loop
lahf
mov
aam
xchg
nop
arpl
nop
mov
fld
sub
mov
loop
nop
repz
or
mov
mov
ret
imul
sub
mov
pushf
xchg
jbe
mov
fwait
hlt
repz
ret
loopne
sbb
scas
sti
sar
inc
clc
jbe
ret
(bad)
push
jge
fimul
stos
hlt
jne
xor
and
sar
inc
push
sub
push
push
jae
sbb
sti
push
movs
cmp
xchg
mov
sti
imul
pushf
mov
mov
xchg
pop
push
push
mov
test
sub
test
lods
jbe
shr
(bad)
sbb
retf
jmp
js
xor
inc
loop
lods
(bad)
cdq
push
xor
mov
fisubr
aad
mov
rol
push
out
xor
cmp
pop
lods
sbb
in
xchg
popa
xchg
aad
pusha
loope
mov
in
in
les
jo
popf
cmps
sahf
fisttp
push
lahf
mov
test
mov
add
ds
mov
retf
imul
shr
xor
push
sahf
data16
pushf
ss
ror
loopne
xchg
rol
pushf
out
fidiv
js
jns
inc
xchg
mov
cdq
cmp
ins
xor
mov
xchg
or
pop
sub
out
mov
and
inc
and
or
loopne
mov
mov
push
ds
or
movs
mov
outs
cmps
mov
scas
mov
enter
mul
sbb
push
adc
and
aad
les
add
daa
ror
fs
jge
hlt
int
inc
mov
sub
ret
cmps
call
shl
inc
ret
xchg
add
mov
xor
jns
in
xchg
scas
add
push
push
rcr
push
shr
inc
ret
rol
adc
mov
pop
imul
mov
loope
sahf
das
lods
ss
xor
or
jmp
out
aaa
xor
adc
jge
cmp
gs
fxtract
out
sbb
mov
popa
or
cmc
inc
inc
nop
aas
inc
inc
cs
fwait
sbb
jmp
jns
dec
xor
call
les
(bad)
rcl
bound
xchg
and
dec
cmp
push
cmp
push
and
xchg
in
xchg
cmp
jle
mov
xor
inc
mov
jecxz
pop
loop
test
add
pop
inc
pop
cwde
mov
jbe
cwde
cmps
test
adc
in
or
pop
(bad)
sbb
ins
dec
jbe
popa
ins
scas
xchg
adc
in
push
and
fs
sbb
icebp
pop
jg
push
or
jmp
mov
test
mov
mov
add
(bad)
jb
mov
test
out
mov
ret
pusha
je
sub
leave
cmovs
pop
push
or
sbb
push
push
jmp
mov
shl
dec
cmp
ficom
jne
(bad)
mov
push
(bad)
out
xor
and
fnstcw
aam
out
sahf
in
(bad)
push
shl
mov
adc
jmp
das
inc
xchg
jmp
jmp
pop
test
add
mov
adc
adc
out
inc
mov
test
jmp
push
test
xchg
push
nop
or
pop
sub
sbb
xor
in
sub
adc
sub
cld
xchg
out
popa
stos
fiadd
test
test
or
inc
in
lds
or
retf
cdq
in
sbb
popf
push
fadd
(bad)
jnp
add
or
cmp
pop
add
jns
pop
shl
arpl
test
out
popf
adc
sub
shr
in
iret
sub
or
lahf
or
cmp
(bad)
shr
pop
arpl
adc
xchg
dec
jb
aas
sahf
pop
fwait
cpuid
mov
enter
dec
jmp
mov
scas
push
gs
cmp
or
pop
jge
sub
or
push
imul
enter
add
out
or
mov
aam
sub
xchg
sbb
push
fwait
popa
cmc
pop
mov
and
ss
inc
mov
inc
xlat
dec
div
xor
push
aas
cs
call
or
or
vorpd
mov
mov
retf
add
cmp
mov
rcr
pop
in
imul
gs
xor
ss
push
movs
jecxz
xchg
stos
push
dec
retf
jnp
out
retf
mov
sub
inc
or
xchg
pop
inc
dec
adc
jno
push
adc
bound
jl
inc
movs
xchg
jl
inc
xchg
and
ret
(bad)
sbb
jns
ret
mov
loop
cli
inc
repnz
sti
std
fidivr
sbb
les
and
rcl
xchg
and
(bad)
sti
out
mov
add
cmp
fld
pop
lods
fs
loopne
ret
xchg
jg
rol
ret
pop
sub
add
sahf
xchg
stc
dec
jl
out
(bad)
int
shl
test
int
mov
adc
sbb
push
sbb
mov
mov
arpl
call
push
mov
cmp
cmps
push
retf
inc
cwde
adc
je
mov
adc
cli
lahf
cmp
jmp
mov
test
xlat
mov
xor
push
mov
add
ins
mov
mov
pop
int
data16
add
cmp
jo
mov
xchg
add
xor
dec
bound
rcl
aam
push
mov
sub
add
jmp
pop
jno
icebp
fwait
xchg
cs
aas
jne
and
(bad)
push
aas
shl
pop
leave
mov
test
and
xchg
or
jl
sbb
int
neg
aad
mov
dec
sub
mul
jo
cmp
pop
or
sbb
dec
enter
rcr
leave
pop
xor
pop
sbb
add
jne
mov
mov
sbb
mov
xchg
aad
adc
xcrypt-cfb
cmps
fs
out
nop
clc
add
lock
sub
lods
xchg
adc
rcr
or
inc
jle
or
scas
shl
stos
jecxz
fwait
jb
cmp
repz
adc
xor
mov
call
push
mov
push
cmova
mov
int3
pop
lds
mov
test
push
mov
jg
inc
bnd
in
push
push
retf
sbb
jae
mov
aam
dec
xchg
mov
stos
sub
add
in
inc
lock
ret
dec
jb
dec
int3
xor
mov
jnp
lds
sar
lods
push
push
or
inc
jnp
jp
mov
add
mov
jne
pusha
jl
outs
call
sbb
repz
(bad)
xor
jb
std
dec
sbb
mov
xchg
add
repnz
xor
adc
sbb
test
into
mov
add
loop
mov
leave
in
stc
sbb
imul
adc
loopne
and
js
repnz
(bad)
mov
cli
mov
pop
push
lock
sub
mov
sub
push
int
xchg
adc
push
jecxz
cmps
test
jns
mov
jp
push
test
xchg
xchg
mov
mov
xchg
pop
push
call
push
dec
fbld
mov
mov
dec
mov
ror
push
arpl
aad
shl
dec
pop
xchg
xor
adc
ja
lock
inc
lock
ins
fdivr
and
stos
mov
mov
jbe
call
or
sahf
cmps
add
adc
loope
mov
dec
jle
push
jmp
(bad)
jno
sub
jno
push
mov
stos
imul
inc
xor
(bad)
call
cs
sub
jmp
mov
clc
or
push
xor
dec
mov
sbb
out
xor
ja
pop
mov
xchg
sub
ja
xor
js
imul
mov
inc
mov
aam
int
lock
push
loopne
scas
dec
in
ins
jmp
sti
sbb
pop
sub
call
sub
sar
out
xlat
inc
and
jecxz
loop
add
mov
movs
jmp
mov
ror
dec
mov
xchg
dec
mov
das
jns
(bad)
lds
aaa
data16
leave
cwde
and
mov
loop
sbb
idiv
mov
jnp
cld
adc
mov
jge
jne
pop
outs
das
push
add
mov
mov
dec
mov
xchg
mov
pop
call
mov
cmp
scas
lock
push
sub
stos
mov
in
fsub
jbe
cmp
cmp
xor
cmps
or
les
mov
dec
add
mov
dec
les
in
(bad)
movs
inc
enter
dec
imul
ret
adc
test
(bad)
jp
(bad)
sti
mov
dec
aas
and
and
das
ins
add
fiadd
jmp
popf
push
test
jbe
cdq
sub
mov
mov
lea
cmp
sbb
add
outs
inc
xchg
jb
xchg
and
and
ror
jo
mov
outs
and
xor
adc
in
imul
rcl
cwde
out
xor
jle
movs
mov
add
ins
mov
inc
sbb
inc
repnz
mov
out
fsubr
arpl
add
out
call
(bad)
(bad)
jle
pop
ss
inc
mov
or
fild
pop
call
mov
loop
push
adc
mov
xchg
lds
pop
cmp
inc
ds
jno
popa
idiv
mov
or
dec
sar
(bad)
nop
jnp
lock
dec
data16
pop
add
out
call
pusha
jle
(bad)
push
fimul
lods
sub
lds
adc
xor
test
adc
repz
shl
ins
div
(bad)
jno
cs
cmps
xchg
jnp
test
pop
hlt
movs
mov
push
popa
outs
pop
aad
sub
and
fsub
test
int
enter
call
or
add
mov
adc
or
adc
nop
dec
leave
and
ret
sbb
rcl
addr16
das
pop
popa
shr
out
pop
outs
aas
push
into
xchg
iret
hlt
pop
xchg
ins
add
lds
and
jbe
pop
cmp
dec
adc
jg
cmp
rol
or
push
push
outs
adc
(bad)
pop
jb
push
mov
jge
pop
mov
fistp
sbb
test
stos
loopne
mov
fdivr
test
or
ror
es
xchg
mov
sub
adc
push
pop
mov
or
inc
fimul
xchg
jp
jnp
stos
jmp
pop
ins
js
pop
xor
dec
dec
mov
adc
sbb
imul
idiv
arpl
rcr
add
add
xchg
outs
mov
and
inc
xchg
leave
xor
mov
je
inc
sbb
lock
xor
jg
(bad)
pusha
cmp
cdq
arpl
popa
push
or
mov
mov
sub
retf
and
xchg
pop
out
jbe
mov
or
push
jno
push
shr
cmps
dec
pushw
and
test
icebp
adc
dec
dec
hlt
dec
xor
dec
xchg
sahf
(bad)
mov
and
idiv
jns
jae
cmp
(bad)
jmp
sahf
out
lods
xchg
xor
cmp
mov
or
xchg
jns
mov
and
cmp
pop
xchg
add
add
daa
cli
add
popf
mov
aad
out
fstp
add
lods
rcl
jge
jbe
stos
in
ss
add
pop
mov
stos
or
pushf
inc
adc
rol
xlat
call
mov
bound
pop
sar
es
out
inc
sub
int
icebp
lea
sub
cmp
add
pushf
clc
js
cdq
sub
mov
push
imul
dec
inc
mov
sbb
sub
jmp
fnstenv
sbb
mov
fsub
neg
xor
fdiv
hlt
jns
xchg
cmp
push
sub
out
imul
sti
inc
add
cwde
sub
push
add
daa
sub
sub
shl
retf
sub
shl
sub
pop
adc
jle
mov
pop
ins
rol
dec
(bad)
fwait
inc
or
retf
or
ss
xchg
dec
jno
push
bound
pop
inc
cmp
mov
inc
xchg
mov
xor
push
das
stos
inc
push
dec
sbb
div
mov
std
pop
push
jge
add
mov
mov
bound
ds
cmp
pop
lock
fimul
jle
add
ss
and
pop
jecxz
dec
aaa
push
push
arpl
cld
mov
xor
cmp
add
call
and
dec
jae
xlat
push
scas
(bad)
out
xchg
sbb
mov
pop
sbb
outs
xchg
cmc
adc
jmp
mov
fisttp
repz
adc
pusha
jmp
movs
jle
mov
fcomp
or
call
jbe
jmp
in
push
add
jge
sti
dec
fldcw
mov
xor
ds
stos
hlt
ins
stc
dec
inc
imul
sbb
and
(bad)
mov
fldcw
cmp
add
pop
add
or
cmps
cmp
push
add
lds
test
sub
jl
cmp
xor
mov
pop
sahf
stc
cmp
jnp
leave
popa
(bad)
gs
fidivr
sub
(bad)
loopne
pop
pop
jle
and
nop
mov
cmp
push
and
scas
jmp
imul
bound
sub
aad
dec
jb
or
add
or
jp
movs
loope
xchg
(bad)
cmp
dec
ja
mov
xchg
ror
mov
pop
call
lds
jne
cli
mov
lods
shl
xchg
test
pop
lods
push
adc
les
cmp
dec
or
xchg
loopne
mov
sbb
mov
jne
call
pop
mov
cmc
push
adc
ds
mov
cwde
mov
xchg
std
mov
cdq
scas
in
je
jmp
retf
jl
and
cmps
data16
push
xchg
lock
add
pop
jg
mov
push
push
scas
mov
mov
lods
mov
jg
dec
cli
pop
pop
jle
cmp
lock
fadd
jg
sub
mov
mov
and
popa
test
add
movs
or
out
inc
cmp
mov
pushf
inc
xlat
fmul
ss
out
sbb
lahf
imul
add
add
mov
repz
sub
retf
popa
adc
movs
pop
mov
fnstsw
stos
sbb
test
ins
int
in
cld
pop
mov
push
fisttp
sub
pop
add
push
stos
in
mov
sbb
push
mov
into
pop
test
jns
jmp
push
ret
adc
push
push
adc
xchg
push
mov
add
or
call
sbb
cmp
jno
fs
ins
sbb
inc
pop
into
(bad)
dec
mov
test
sub
inc
add
add
(bad)
(bad)
mov
rcr
cmp
push
sbb
mov
sti
pop
pop
pop
pop
mov
push
mov
jo
mov
fdivr
in
jbe
or
cmps
ret
loop
cmps
(bad)
or
imul
sbb
xchg
test
movs
add
push
imul
mov
movs
push
adc
int
lahf
mov
xor
and
xchg
or
jne
mov
in
shl
mov
lds
pop
adc
mov
push
div
mov
pop
inc
xchg
sbb
sbb
jle
mov
xchg
repz
fdivr
dec
and
cmp
mov
cld
sbb
fisttp
sub
pop
push
cmp
push
test
pop
or
outs
push
mov
sub
aaa
in
mov
pop
lock
pop
push
ret
addr16
inc
rol
lock
int3
push
pop
mov
cmp
sbb
lock
sbb
enter
icebp
test
(bad)
and
pop
xor
test
add
cld
ss
and
mov
int
aaa
cmp
or
xor
adc
sub
stos
daa
or
jbe
std
out
jne
mov
movs
push
or
je
arpl
shl
sbb
pop
xor
sub
xlat
push
pop
mov
scas
(bad)
clc
mov
das
call
mov
push
sub
push
cwde
ret
fisttp
push
inc
das
mov
inc
dec
mov
push
popf
inc
inc
retf
push
inc
fs
dec
jnp
fbstp
and
push
in
and
cs
fiadd
cli
lock
leave
repnz
sti
repnz
xchg
mov
lahf
sub
cmp
cmc
loope
xchg
shl
ja
cmps
dec
aam
jno
stos
push
adc
pop
mul
push
into
leave
loopne
mov
hlt
sbb
adc
outs
out
test
cld
movs
pop
enter
sub
iret
aaa
imul
push
popa
loopne
xchg
push
mov
addr16
adc
stc
ret
in
mov
loope
sub
push
mov
add
cmp
lds
pop
add
pushf
push
arpl
test
dec
xor
outs
push
bnd
xor
cld
cli
das
(bad)
push
push
push
mov
test
cmp
aas
and
push
dec
jns
sub
dec
or
jmp
jns
std
cdq
mov
and
dec
mov
js
aad
pushf
(bad)
and
jmp
sub
aas
gs
adc
inc
and
(bad)
fidivr
jnp
adc
dec
sub
xor
mov
mov
dec
inc
jnp
lds
movs
ins
mov
shl
ret
adc
std
neg
xor
add
pop
scas
imul
inc
jmp
add
or
fs
jmp
sub
xor
mov
jne
cld
jbe
outs
scas
xchg
imul
cmps
xchg
mov
and
dec
les
pop
or
jl
ja
mov
cmp
mov
jns
pusha
ret
and
add
or
pop
mov
imul
gs
imul
xchg
stos
frstor
mov
fwait
sub
cmp
inc
jno
sub
dec
adc
mov
es
call
inc
je
cmps
call
leave
dec
mov
push
outs
xchg
aad
pusha
cli
sbb
sbb
hlt
add
adc
(bad)
and
mov
bound
add
push
xchg
mov
push
push
movs
sub
adc
inc
rol
or
push
clc
add
mov
sbb
xchg
out
mov
mov
(bad)
in
sbb
es
pop
test
in
aaa
scas
pop
push
pop
aaa
sbb
pusha
hlt
mov
mov
jle
and
mov
push
add
pop
mov
mov
pop
les
jnp
leave
jnp
pop
mov
push
pop
sbb
popf
xor
cmovne
lahf
neg
les
shl
aam
push
sub
ret
sub
jp
fwait
sbb
cmp
lods
nop
xchg
or
cli
mov
call
push
cmp
xchg
jae
addr16
nop
popf
push
test
cwde
mov
sbb
inc
sub
inc
add
ret
pop
and
fsubr
aam
jo
call
(bad)
mul
test
imul
inc
mov
js
out
mov
mov
push
adc
arpl
jg
push
pusha
cmp
pop
cli
daa
mov
xchg
jmp
xor
stos
sahf
jg
mov
pop
adc
xchg
adc
lds
cmp
shl
and
or
ins
sbb
dec
mov
aad
repz
in
sub
shl
jns
mov
xor
mov
pop
xor
push
js
mov
call
imul
and
in
push
cmp
int
div
mov
cmp
aaa
enter
add
adc
icebp
pop
lds
retf
js
inc
out
ficom
or
or
ds
inc
out
fsubr
sub
sub
out
inc
jnp
outs
or
xor
ins
fsubr
cli
int
inc
lods
fwait
xlat
jmp
pop
cmps
(bad)
jno
fstp
jge
mov
jo
mov
ins
lea
gs
rol
push
jno
sub
add
and
inc
aaa
test
xor
ret
jmp
outs
sbb
fist
in
je
test
jecxz
shl
mov
pop
xor
jle
into
ins
retf
sbb
mov
and
cmps
out
cld
outs
daa
fnop
and
bound
mov
mov
or
ret
pop
rdpmc
push
rep
int
pop
ins
into
pop
jbe
or
fild
test
sub
pop
dec
mov
retf
outs
nop
xchg
or
aad
sub
arpl
or
aas
and
ror
or
movs
inc
push
inc
and
jno
mov
and
jae
adc
aam
loope
mov
sbb
adc
xchg
mov
loope
mov
cmp
dec
bound
(bad)
arpl
push
dec
or
or
imul
hlt
and
sub
mov
jl
sbb
xor
cs
jge
int3
xor
jo
pop
or
call
xchg
mov
(bad)
scas
(bad)
pop
dec
mov
xchg
xor
dec
int3
pop
inc
sbb
call
leave
cmc
and
and
ja
mov
pop
lock
xor
push
add
adc
outs
and
mov
pop
iret
aam
jmp
(bad)
lods
mov
jo
cli
das
jae
jmp
in
adc
iret
jmp
movs
(bad)
sbb
int3
pop
mov
rol
cld
jge
pop
lock
mov
pop
mov
cmp
or
shr
test
lods
cmp
adc
mov
push
pushf
xor
pop
imul
mov
mov
cmp
push
mov
xchg
sub
mov
cmp
pop
pop
push
leave
push
sub
cmc
leave
call
cs
push
adc
fwait
lods
into
fnstenv
dec
movs
(bad)
imul
test
dec
fxch
in
ret
test
stos
repz
xor
mov
imul
adc
loope
dec
out
loopne
or
add
ja
ins
icebp
jg
std
jecxz
mov
mov
psubusb
xchg
cwde
jg
inc
xchg
leave
sbb
fs
test
fmul
push
cdq
or
jbe
jecxz
or
jns
ud0
push
hlt
je
outs
data16
enter
stos
cwde
fsubr
jo
sbb
scas
popa
jle
loop
or
mov
xor
ins
pushf
jns
sbb
mov
(bad)
sti
scas
aam
push
mov
pusha
gs
inc
cmp
ins
cs
push
cmps
stos
push
jp
icebp
jge
retf
inc
inc
pop
xchg
mov
nop
xor
inc
outs
jecxz
xor
fucomip
mov
xchg
clc
test
and
push
call
jno
es
rcr
jmp
inc
into
icebp
(bad)
clc
das
icebp
mov
nop
lock
sub
sub
pop
shl
dec
stos
mov
mov
cmp
in
int3
pop
lahf
popa
pop
inc
inc
xlat
in
stos
jns
les
out
imul
jo
dec
aad
dec
pop
in
aam
jg
add
or
inc
mov
push
pop
adc
ja
xchg
rcr
cmp
iret
sahf
popa
sbb
adc
adc
jo
push
out
and
push
out
jae
cmp
ret
cmp
scas
ss
xchg
add
out
sbb
arpl
(bad)
cmp
sub
fisubr
adc
es
xor
sar
test
mov
imul
mov
cmp
dec
scas
mov
je
lea
js
(bad)
hlt
mov
sar
push
dec
imul
scas
xor
jl
inc
bound
movs
in
fst
sub
dec
jns
dec
arpl
jmp
sbb
data16
clc
call
push
add
loope
sbb
sbb
push
pop
arpl
imul
dec
push
ret
shl
out
cmps
pop
(bad)
pop
lea
js
adc
pop
jle
push
pop
jmp
jnp
outs
sahf
dec
jp
imul
in
sub
scas
mov
call
pop
loop
retf
call
add
mov
pusha
mov
fst
mov
push
cmp
jne
movs
inc
outs
xor
adc
or
shr
jle
adc
inc
xor
cmp
js
lods
xchg
adc
les
mov
jae
aad
adc
and
jp
ins
repnz
dec
add
sub
fld
add
(bad)
cwde
in
(bad)
adc
jmp
out
pop
jbe
jmp
or
xor
sbb
cmp
popf
ror
lahf
movs
in
push
stc
lods
outs
add
mov
jg
add
std
lods
jbe
aaa
(bad)
popf
or
movs
inc
loope
and
test
xor
mov
aas
and
xchg
ret
in
fldenv
(bad)
fiadd
and
shl
loopne
enter
dec
jmp
out
cmps
pop
xchg
xchg
aad
and
or
stos
push
sbb
mov
stos
or
sub
xor
add
lods
mov
xchg
addr16
out
fwait
jmp
xchg
sbb
mov
adc
outs
push
jmp
xor
mov
inc
ss
out
nop
sub
push
pop
cmp
dec
xor
sub
and
sbb
wrmsr
loope
dec
mov
pop
ret
iret
ins
mov
cld
test
xchg
adc
jecxz
popf
movs
dec
mov
mov
pop
outs
movs
dec
sbb
xchg
jb
or
ss
loopne
sub
das
imul
jb
loope
mov
cdq
ins
or
push
loopne
or
push
(bad)
mov
jmp
xor
enter
inc
cld
loopne
lahf
(bad)
xor
leave
sub
fisub
mov
push
fwait
pop
rcr
les
clc
and
cmc
pop
mov
push
adc
cld
mov
adc
cmp
jmp
sbb
out
xlat
sub
xor
and
rcl
cmp
jnp
addr16
cmp
test
mov
sbb
mov
imul
retf
xlat
fldl2e
sub
mov
test
and
cmp
ficom
pop
or
xchg
out
rol
adc
inc
nop
cli
ret
cmp
sub
sub
in
arpl
xor
mov
imul
xchg
repz
aaa
or
push
jae
lahf
test
mov
icebp
pop
(bad)
adc
inc
adc
ret
inc
add
loope
fdivr
xor
xor
cmp
in
fimul
in
hlt
inc
or
hlt
call
call
cmp
mov
cs
or
das
cmp
out
adc
fild
jo
call
es
xchg
cs
or
lds
add
mov
ret
cmp
mov
mov
lods
fidivr
jmp
fcomip
mov
aas
test
je
push
cli
jb
jge
jbe
pop
add
adc
pushf
(bad)
ffree
pop
dec
rcr
sbb
stos
fwait
pop
fwait
arpl
test
icebp
mov
adc
(bad)
in
bound
jmp
cmp
sub
dec
je
xchg
adc
xchg
jmp
mov
mov
test
lods
sbb
pop
in
out
outs
leave
xchg
pop
xchg
popa
jmp
push
pushf
nop
inc
(bad)
das
push
pop
ss
inc
rol
call
loop
mov
and
dec
jmp
push
pop
push
jns
jbe
mov
mov
js
rcl
xchg
pop
div
arpl
ja
xor
scas
fst
loop
movs
or
shl
mov
fdivp
sub
add
data16
lahf
adc
add
rcl
(bad)
sbb
adc
mov
mov
sub
fldcw
jl
mov
mov
mov
push
inc
(bad)
dec
mov
loop
mov
jecxz
adc
pop
push
pop
es
loopne
mov
shl
and
dec
cli
or
imul
sbb
repnz
cmp
les
sub
jb
sbb
call
fld
popa
mov
enter
push
dec
inc
ret
push
sub
or
popa
movs
jne
fdivr
or
dec
adc
outs
cmp
getsec
mov
and
xchg
mov
pop
movs
push
mov
ror
sbb
retf
das
mov
xor
inc
movs
(bad)
push
out
jb
sti
cmps
pop
mov
fs
inc
mov
mov
push
aam
mov
imul
jne
sbb
sub
mov
jno
fs
inc
nop
adc
mov
js
cmps
addr16
jp
mov
pop
mov
hlt
pop
push
test
(bad)
ds
lock
je
mov
hlt
jno
pop
sahf
lods
arpl
mov
and
mov
sbb
sub
(bad)
pushf
cwde
fcomp
add
mov
retf
pusha
dec
add
pop
xor
sar
mov
mov
dec
pop
mov
cmp
hlt
inc
dec
ins
mov
mov
pusha
or
sub
scas
inc
arpl
jno
or
stos
adc
xchg
mov
push
dec
add
std
cwde
jns
(bad)
ja
addr16
aaa
jns
jmp
jmp
retf
nop
inc
add
int
jle
js
mov
mov
or
mov
es
mov
pop
mov
cdq
add
jbe
and
les
(bad)
adc
fidiv
jno
out
bound
repnz
push
das
cmps
icebp
mov
push
outs
gs
retf
cmp
adc
or
dec
test
jno
aaa
sub
scas
lahf
xor
pop
and
(bad)
sahf
out
aaa
jo
mov
dec
mov
jle
jmp
jmp
inc
jge
stos
adc
pop
adc
out
ja
sbb
ins
adc
or
arpl
cdq
jecxz
out
jnp
out
arpl
jns
ret
push
retf
dec
hlt
xchg
cli
xchg
fcomip
cmp
pop
mov
rcl
inc
popw
cmp
test
repnz
loopne
add
popa
jmp
call
in
not
mov
jne
pushf
jbe
pop
mov
out
scas
add
imul
inc
in
idiv
dec
clc
mov
aam
pop
xchg
rol
jl
adc
(bad)
leave
mov
cmp
call
sub
mov
popa
les
and
inc
repnz
ret
push
out
call
jecxz
lds
daa
jae
call
stos
pop
jne
mov
push
stc
stc
arpl
gs
outs
sbb
adc
in
mov
jo
jg
scas
enter
popa
popf
jnp
inc
aam
pusha
fwait
jns
bound
dec
and
pusha
xor
jge
pop
inc
cmp
adc
xor
ret
mov
shl
sub
adc
sbb
pop
or
neg
mov
outs
jb
xlat
stos
mov
mov
int3
jle
add
std
mov
sbb
jns
sahf
or
lods
dec
rcl
lea
fdivr
scas
leave
mov
xor
cld
(bad)
imul
mov
cld
pop
out
push
std
or
xchg
(bad)
adc
iret
add
ret
leave
inc
out
out
sub
lods
inc
dec
data16
inc
inc
xchg
call
sub
inc
pop
cmp
xchg
sub
add
(bad)
mov
dec
pop
pop
call
mov
data16
push
mov
leave
xor
lods
push
mov
sub
or
sbb
push
scas
dec
and
cmp
test
aaa
jecxz
out
rcl
gs
pusha
and
push
leave
aad
fs
dec
mov
push
je
sbb
adc
enter
into
push
or
cmp
fistp
xchg
push
fsubr
dec
(bad)
jecxz
push
test
aaa
(bad)
xchg
ins
scas
cli
mov
mov
xchg
(bad)
sub
idiv
pusha
sub
gs
(bad)
fistp
jb
rol
les
xor
or
xor
sub
popf
test
nop
inc
data16
xchg
and
xchg
ret
popf
mov
pop
out
fild
movs
pop
ss
push
dec
push
mov
lea
sub
retf
in
stos
(bad)
inc
lds
mov
add
cs
push
lods
mov
add
push
xchg
push
pushf
ins
shl
jb
push
adc
sub
das
dec
inc
mov
push
jno
hlt
ror
jno
adc
aas
jp
out
xchg
stc
xchg
dec
or
arpl
sbb
push
xchg
add
or
stos
jecxz
pop
movs
and
add
adc
jns
daa
gs
dec
and
dec
cdq
push
xchg
sub
aam
jecxz
lods
fstp
aaa
sbb
mov
jecxz
mov
div
mov
pop
scas
mov
pop
xor
retf
mov
data16
or
daa
or
pop
pop
cmp
pop
in
aaa
int3
mov
mov
inc
js
outs
sub
push
cmps
rcl
adc
add
in
aam
cmp
aas
popf
xchg
inc
pop
mov
fwait
jl
mov
mov
pop
push
icebp
(bad)
(bad)
pop
addr16
lahf
push
addr16
jge
aad
shr
sbb
out
and
add
addr16
rcl
nop
adc
mov
int3
pop
stos
add
inc
inc
popf
adc
ret
jo
(bad)
retf
iret
cmp
in
push
jecxz
adc
packuswb
in
push
fisttp
in
sub
in
xchg
add
popa
and
sub
xor
push
cld
in
cmp
jns
in
xor
js
bound
cmps
clc
sbb
test
or
push
call
jle
mov
cli
aam
call
ret
sub
loopne
retf
add
neg
jmp
gs
rcl
rcl
fistp
ins
xchg
mov
outs
lods
lea
fstp
neg
pop
mov
gs
xor
sub
dec
mov
or
or
lds
inc
mov
loop
(bad)
outs
test
stos
int
aas
cmps
shl
aaa
xchg
mov
mov
ins
add
and
out
call
ret
sbb
pop
jp
pop
mov
dec
sti
lods
mov
daa
bound
mov
jg
into
lds
fstp
xor
jmp
jbe
call
test
xchg
cmp
jge
in
sbb
(bad)
sahf
out
mov
pop
or
cli
xchg
je
lea
je
or
inc
(bad)
lods
sbb
cmp
and
pusha
dec
add
loopne
xor
push
pop
(bad)
cmc
(bad)
sbb
or
or
xchg
xchg
xchg
sbb
lahf
xor
dec
pop
pop
or
in
in
push
stos
xchg
sub
xchg
lods
jne
push
retf
pop
rcl
pop
dec
lock
adc
and
fwait
lods
push
cs
sbb
test
jbe
lahf
pop
adc
in
or
(bad)
sub
dec
push
rcl
dec
mov
in
xchg
cmc
adc
xor
iret
fisub
jmp
(bad)
cwde
sub
mov
int
adc
push
mov
loopne
mov
aam
adc
dec
mov
cmps
or
mov
mov
(bad)
jns
pushf
pop
push
cli
(bad)
mov
popf
sar
retf
inc
rcr
or
out
sub
adc
or
fmul
jle
sahf
stc
pushf
jmp
inc
mov
adc
jg
push
aaa
scas
push
sbb
std
xchg
mov
mov
mov
jnp
sub
aad
repz
(bad)
push
pop
(bad)
ss
adc
sbb
aad
sub
mov
test
out
dec
pop
into
cdq
adc
call
sub
fmul
pop
mov
sub
test
jecxz
ja
jecxz
push
push
enter
les
call
jns
inc
aam
dec
pop
or
cmp
cdq
arpl
cld
mov
mov
in
adc
dec
fwait
mov
sar
xchg
pop
push
xchg
stc
iret
mov
add
loope
adc
ins
inc
(bad)
rcr
and
cmp
cmp
push
aad
pop
fst
fwait
aas
pop
popf
pop
out
jmp
jl
jp
mov
sar
ficom
and
movs
test
xor
into
mov
and
add
sub
test
aaa
out
cmps
sti
mov
mov
push
push
xor
jecxz
(bad)
lock
in
in
cmp
xor
xchg
addr16
push
sti
daa
cmc
or
or
sbb
ret
rcl
rol
mov
rep
push
in
sub
bound
sbb
jne
and
mov
dec
dec
retf
leave
out
test
mov
pushfw
sbb
dec
hlt
scas
daa
inc
jecxz
imul
rcr
(bad)
movs
jl
aad
cwde
dec
jecxz
add
rcr
aam
in
pushf
and
mov
jmp
jg
jae
adc
sbb
mov
sub
jl
sbb
retf
push
push
fwait
and
mov
pop
cmps
jecxz
out
mov
sub
arpl
jae
das
popa
sbb
jle
sub
daa
stos
jns
inc
mov
mov
push
jl
das
call
add
dec
retf
fidiv
stos
lock
dec
stos
push
aas
xchg
cmp
retf
retf
mov
push
div
dec
and
dec
jecxz
lods
iret
ins
add
adc
sahf
ss
jns
(bad)
data16
lods
mov
ss
mov
lds
cmp
dec
test
repnz
inc
fist
int3
mov
and
addr16
add
mov
aaa
push
test
xor
aas
imul
cld
pop
rcr
shl
call
push
call
mov
in
or
das
rol
test
psubsb
xchg
jb
inc
inc
inc
cmp
dec
add
sub
nop
fistp
imul
das
jmp
out
add
xor
mov
push
enter
pop
clc
out
in
pop
adc
pop
jae
mov
clc
cmc
mov
mov
dec
adc
xor
inc
bnd
ins
in
lods
or
mov
sub
cmps
test
ins
and
popf
push
xor
jns
(bad)
cld
adc
inc
xchg
xchg
mov
call
sbb
and
jmp
fnstsw
cdq
push
cmps
leave
and
add
xchg
sbb
ret
lods
mov
int3
mov
jb
push
fimul
fcom
jp
sti
cli
pop
mov
xchg
mov
pop
ins
les
push
rcl
test
mov
add
inc
hlt
and
imul
ret
cmovp
mov
repnz
into
xchg
cmps
push
or
pusha
stos
loopne
xor
rcr
cld
popf
jo
jae
fsubr
(bad)
mov
in
into
cmp
cmp
aam
mov
inc
sbb
cmp
aam
and
jno
test
pop
sub
xchg
mov
push
cmp
popf
rcl
fwait
lods
inc
pop
repz
sbb
ins
fprem
and
jmp
mov
movs
xor
pop
stos
jo
adc
aas
fs
mov
jae
retf
sbb
cmp
add
mov
or
ret
jae
pop
(bad)
lahf
mov
fsubr
adc
cmps
(bad)
xlat
dec
cdq
movq
icebp
inc
fsubp
xor
cmp
adc
mov
push
pop
pop
nop
mov
and
adc
ja
mov
fmul
jmp
jno
add
fbld
cli
sbb
pop
aas
mov
jb
test
xchg
ins
push
jg
loop
adc
rcr
test
dec
dec
cmp
xchg
imul
dec
sbb
push
jmp
sbb
fs
icebp
sub
pushf
in
rol
dec
xor
in
ror
adc
imul
push
dec
retf
repnz
enter
pop
not
fld
sbb
call
out
(bad)
mov
inc
cld
cmp
es
mov
jno
dec
mov
cmps
repnz
scas
dec
mov
ja
or
sub
pop
cmp
sbb
or
cs
sub
or
sub
cs
and
pop
mov
loop
and
dec
cmp
xor
not
xchg
cli
add
add
into
aam
push
cld
sub
add
les
shl
lea
or
icebp
mov
pop
sub
mov
mov
ret
or
daa
mov
outs
xchg
jb
push
push
add
dec
sub
dec
pushf
gs
push
popf
je
pop
push
add
repnz
xchg
out
in
xchg
add
lods
imul
pop
shl
add
les
imul
mov
frstor
jno
xlat
push
add
jb
xchg
pop
data16
pop
dec
into
bswap
stos
cs
(bad)
xor
sbb
sub
pusha
imul
sub
inc
xchg
add
sub
push
and
hlt
test
adc
cmp
neg
xchg
mov
es
clc
mov
add
or
inc
fnstcw
mov
adc
push
mov
jp
jb
xlat
jbe
pop
packsswb
xor
inc
dec
push
xchg
fisub
rcr
dec
out
inc
add
in
adc
push
aaa
and
jge
and
mov
xchg
movs
js
lahf
mov
fs
into
imul
ins
adc
adc
inc
xor
dec
jge
or
pusha
or
adc
(bad)
inc
xchg
ror
adc
cmp
in
out
jnp
(bad)
movs
imul
mov
fwait
ins
aas
lds
xor
gs
push
push
popa
jno
ins
bound
jmp
jae
test
scas
sbb
dec
ja
cmp
retf
retf
sbb
mov
mov
stos
fs
xchg
in
and
fadd
cmps
sbb
pop
test
addr16
dec
mov
adc
push
out
jecxz
addr16
mov
jg
and
push
sbb
mov
dec
or
and
cmp
adc
ins
jmp
push
lods
push
adc
mov
mov
xchg
(bad)
xor
mov
popf
xlat
cmps
in
cmp
aam
daa
or
xor
dec
sub
pushf
push
gs
or
xor
rcr
ror
sub
xchg
imul
pop
mov
std
mov
or
sbb
outs
push
lods
out
(bad)
std
rcr
pop
mov
mov
mov
xor
imul
fidivr
mov
sbb
das
int
mov
add
and
shl
lea
test
sub
push
pop
pop
cmp
cmp
lahf
std
pop
mov
lahf
stc
add
pop
mov
hlt
sbb
fdiv
lods
vmovapd
sbb
js
sub
call
cmp
test
fisubr
push
(bad)
cli
push
push
push
pop
jp
scas
mov
jns
jmp
jl
mov
dec
dec
or
xchg
pop
lods
sar
or
outs
fstp
xor
xchg
xor
cmp
pusha
in
sub
dec
cs
add
mov
add
sbb
and
mov
ret
xchg
aaa
stos
jbe
sbb
dec
pop
or
(bad)
xor
test
pop
call
loopne
sub
and
test
cdq
test
mov
jge
stc
inc
push
std
and
mov
dec
xchg
mov
xchg
pop
(bad)
mov
scas
jg
cmp
cs
es
nop
mov
add
inc
imul
push
inc
adc
mov
xchg
mov
pop
stc
aam
add
neg
clc
lea
test
or
retf
pop
inc
mov
adc
mov
xchg
dec
retf
nop
nop
enter
push
rol
int
cli
repnz
and
sti
into
sbb
arpl
adc
xchg
lods
mov
mov
xor
popa
add
sub
gs
sbb
jmp
mov
cmp
shl
mov
push
mov
inc
scas
mov
out
push
repnz
popa
and
in
xchg
pop
jnp
and
xchg
add
or
icebp
pop
jne
sbb
dec
pop
popa
cmp
xor
push
test
test
xor
sbb
push
add
add
cs
jns
ret
adc
sub
shl
clc
es
out
es
and
xor
sub
scas
sub
xchg
popf
mov
mov
mov
push
enter
cmp
push
adc
(bad)
dec
sub
pop
mov
adc
jecxz
outs
inc
sar
dec
pause
retf
test
and
(bad)
retf
cmps
xor
or
cmp
push
mov
(bad)
div
fs
push
stos
xor
(bad)
fistp
mov
xchg
iret
pop
fs
xor
push
adc
xor
aam
aas
mov
and
pop
or
(bad)
xor
dec
mov
cli
mov
ret
sub
(bad)
adc
je
push
leave
retf
arpl
lea
pop
imul
fwait
cdq
xchg
ins
xor
out
mov
dec
daa
xchg
cdq
stos
clc
cmp
(bad)
shr
push
hlt
sub
jl
fimul
cmp
mov
movs
loope
dec
jg
jg
xor
push
inc
jns
cmps
add
mov
repnz
test
loopne
pop
mov
test
inc
mov
ins
inc
test
sub
adc
cmp
hlt
xor
ss
mov
lods
inc
mov
ret
push
imul
sub
stos
jl
and
inc
repnz
cmps
jmp
outs
fnstcw
and
jbe
mov
jle
leave
jmp
jp
jg
jmp
xor
pop
xchg
ja
inc
mov
jne
dec
push
push
popa
mov
jns
jno
jg
mov
sbb
xor
mov
mov
pop
push
movs
pop
push
fsincos
xlat
rol
stc
cmps
sbb
sub
loop
test
or
push
sub
cmp
mov
data16
mov
jne
fwait
or
or
dec
mov
add
mov
scas
stos
push
jno
(bad)
outs
pop
jb
les
lea
mov
sub
add
outs
cdq
scas
repnz
add
dec
ret
psubsb
push
leave
(bad)
adc
mov
or
adc
sti
xchg
(bad)
or
addr16
adc
shl
(bad)
pop
or
cmp
mov
mov
add
adc
pop
retf
pushf
cdq
addr16
adc
aad
xchg
cmps
mov
aaa
jmp
mov
(bad)
mov
mov
test
or
fsubr
pop
out
xlat
and
and
xor
mov
mov
mov
fistp
das
inc
push
ja
jge
cmp
jmp
popa
popa
push
jmp
out
xor
pop
ror
and
loopne
xchg
push
xlat
dec
imul
out
loopne
xchg
and
dec
out
and
call
jle
xchg
div
into
data16
shl
xchg
sub
dec
ficomp
add
rol
push
imul
lods
jle
mov
cdq
stos
outs
out
or
sub
lock
pusha
das
out
jo
and
std
cwde
sbb
inc
mov
or
or
or
sti
cmp
xchg
or
xor
popa
or
fsub
aaa
mov
push
xchg
sahf
mov
cmps
xchg
in
mov
call
bts
or
fwait
sub
dec
into
imul
xchg
push
mov
mov
ins
adc
ja
out
adc
mov
adc
xor
daa
mov
sbb
mov
ret
mov
adc
js
stos
jns
jle
in
lahf
in
aaa
xlat
mov
mov
add
add
cmp
pop
push
neg
gs
arpl
(bad)
fcomp
dec
and
sub
pop
jne
jecxz
loopne
iret
xchg
lahf
pop
inc
lods
or
out
ins
cmp
dec
push
mov
int3
or
fmul
fs
xchg
outs
push
or
pop
adc
jg
sar
out
mov
or
rcl
sub
or
mov
gs
out
pop
bound
or
mov
lds
xchg
retf
mov
cdq
lock
or
ja
add
outs
and
or
ret
cmp
call
push
push
inc
dec
jne
inc
add
rol
fistp
popf
and
retf
mov
push
adc
dec
or
repz
rcl
mov
rol
jne
mov
ret
mov
push
jge
mov
mov
mov
ficomp
jnp
and
xor
adc
popa
out
loop
rcr
outs
rol
xchg
jo
inc
lods
inc
loop
fldcw
adc
mov
out
repnz
ds
lea
pop
iret
add
adc
dec
pop
add
xor
pop
xchg
icebp
lds
jmp
adc
shl
int
fadd
rol
jp
dec
jno
ins
rcr
pushf
mov
sbb
mov
xor
and
pmullw
jmp
adc
jo
stos
cld
sbb
into
inc
push
or
ret
inc
test
mov
add
inc
shl
dec
ja
sbb
push
fcomp
push
push
push
shl
test
sahf
stos
mov
shr
iret
inc
mov
xchg
cmp
test
iret
daa
fisttp
fstp
pop
pop
cdq
(bad)
loope
dec
test
fist
out
fdiv
add
lahf
enter
je
cld
mov
sbb
sbb
jae
std
mov
mov
push
ror
movs
je
adc
aam
dec
lahf
mov
ficom
jl
pop
(bad)
lods
cmp
mov
fld
jnp
cmc
repnz
rol
adc
cld
inc
or
cmp
fldcw
js
mov
cmc
and
add
(bad)
mov
push
xlat
sbb
sub
mov
jecxz
push
xchg
push
and
adc
adc
lds
jne
mov
sub
and
clc
and
ds
pop
ds
add
or
mov
(bad)
mov
mov
or
xlat
fist
ror
(bad)
mov
repnz
push
jge
cmp
mov
adc
add
mov
dec
mov
fs
sub
pop
and
inc
retf
inc
mov
gs
mov
jmp
push
pop
in
jno
scas
pop
inc
leave
mov
movs
dec
push
jo
int
inc
push
mov
call
xchg
call
punpckhdq
xor
cmp
not
ret
sbb
leave
add
sub
std
mov
stc
dec
cmp
neg
lods
jo
mov
fild
mov
mov
leave
in
aaa
jmp
je
aam
ds
inc
adc
inc
mov
cs
fmul
outs
lock
js
jl
xchg
cmp
call
fs
jnp
gs
mov
fld
out
cmp
(bad)
stos
sbb
pop
fisubr
mov
sbb
es
shl
outs
clc
add
bnd
push
imul
jne
fisttp
jb
cwde
mov
xchg
jae
sub
cmp
lds
test
jmp
retf
pusha
adc
daa
fld
mov
xchg
or
sti
mov
xor
into
sub
loopne
out
and
jb
add
scas
sub
shl
pop
dec
dec
add
inc
aas
or
out
shl
fisub
js
loopne
loope
jg
das
repnz
xor
cli
(bad)
adc
stc
mov
xchg
mov
jnp
sub
dec
cmp
mov
mov
scas
sbb
ds
jecxz
dec
(bad)
out
mov
sahf
push
mov
ss
inc
loop
mov
inc
mov
or
sub
mov
xor
out
dec
lods
jbe
inc
jmp
pop
jmp
push
rcr
ret
adc
cmp
test
loop
fidiv
inc
hlt
lahf
call
xor
jno
xchg
pop
fwait
adc
sub
sti
mov
mov
xor
inc
inc
xchg
mov
ds
jmp
adc
cli
ins
rol
adc
or
xor
cmps
pop
push
pop
idiv
pushf
fsub
fdivr
aas
aad
add
jno
jno
test
and
dec
dec
mov
sbb
push
jmp
outs
fwait
aam
je
xchg
mov
push
mov
cmp
(bad)
mov
imul
xchg
fadd
xchg
mov
push
aam
sub
jne
adc
ss
xor
(bad)
pop
rcl
das
push
mov
retf
inc
add
push
add
adc
mov
pop
pop
jb
jno
sbb
mov
add
pop
adc
out
nop
add
sti
sub
mov
mov
cmp
shl
push
int3
add
jmp
xchg
cmps
inc
lahf
inc
push
mov
or
shl
adc
mov
cmp
arpl
jmp
jl
cmp
shl
xor
cwde
sahf
outs
xchg
xchg
jno
test
mov
clc
loopne
cmp
sub
sub
pop
sbb
out
mov
inc
ret
(bad)
in
or
(bad)
sub
je
push
cld
and
add
push
adc
mov
sub
jb
scas
jne
mov
jo
or
add
sbb
push
and
stc
mov
jne
push
mov
fld
loop
cmc
outs
into
jg
xchg
and
stos
push
mov
imul
jmp
cmp
jno
mov
xor
push
add
jmp
inc
add
loopne
or
adc
int
lahf
push
xchg
mov
sub
mov
outs
jo
sbb
sub
add
lods
in
xlat
push
fidivr
push
xor
sbb
mov
adc
(bad)
dec
mov
sbb
aas
sbb
jmp
push
shl
mov
test
jno
adc
xchg
and
push
idiv
retf
dec
gs
and
jp
pop
ds
clc
loop
mov
bound
scas
push
jae
pop
test
inc
mov
dec
in
mov
aaa
and
push
js
or
ins
inc
cs
and
xchg
jmp
out
xchg
addr16
in
std
movs
(bad)
jp
mov
movs
push
out
dec
cmp
imul
jle
jb
push
add
sub
es
xor
mov
cmp
test
xor
xchg
sub
popa
add
daa
xchg
push
push
test
stc
cmc
xchg
shl
fs
int
scas
xchg
mov
xchg
js
les
or
and
add
mov
or
inc
and
movs
ss
mov
cs
fdiv
xchg
mul
xor
inc
test
or
ja
fld
push
test
and
cmp
jns
adc
nop
inc
jp
out
stos
test
and
mov
test
push
inc
jbe
mov
cmp
push
mov
cmp
mov
(bad)
mov
imul
cmps
js
data16
int
hlt
adc
or
pusha
and
into
(bad)
pop
inc
cdq
loope
xchg
sbb
xor
push
cmp
xchg
retf
inc
neg
ror
push
ins
add
or
pop
fistp
out
jns
aam
out
retf
ret
sub
(bad)
(bad)
and
xchg
je
xor
call
retf
xor
je
xor
repz
pop
ror
fcmovbe
jbe
sahf
loop
cdq
mov
fs
fsub
push
fwait
jge
imul
repz
cmp
push
add
pop
and
mov
sub
sti
(bad)
iret
sub
dec
adc
enter
inc
not
mov
lahf
or
adc
add
fisttp
outs
mov
(bad)
mov
int
mov
mov
xchg
loope
add
xchg
jae
enter
cmps
cmc
rcl
push
adc
repz
add
inc
(bad)
in
xchg
sub
nop
aam
pop
jb
pusha
pop
(bad)
shl
sub
pop
mov
sub
cs
pop
mov
inc
mov
dec
jmp
popa
cdq
add
mov
cmp
sbb
mov
or
jmp
push
out
jle
bound
fidivr
shl
out
lock
mov
jno
xchg
gs
inc
xor
xor
push
dec
test
push
cld
retf
mov
pop
mov
or
jl
scas
imul
jae
ja
shr
in
push
lock
loop
rol
(bad)
jmp
inc
stos
repnz
push
mov
pmuludq
inc
ins
jl
fisubr
stos
out
mov
out
sbb
jg
leave
cwde
mov
dec
in
imul
xchg
mov
cmp
inc
dec
push
loopne
or
dec
sahf
cmps
push
mov
jno
cmp
xchg
inc
xchg
inc
sub
loopne
aas
sub
add
stc
movs
stos
jle
test
mov
add
les
mov
xor
sbb
push
fist
lahf
les
lods
or
test
in
daa
cmp
or
sahf
sub
cvtps2pi
xor
pop
shl
call
pop
into
and
xchg
out
imul
mov
stos
sub
sub
shl
sbb
push
shl
je
test
jl
repnz
adc
cs
sti
add
(bad)
mov
or
inc
xor
std
or
xchg
dec
addr16
adc
jge
mov
jmp
mov
movq2dq
(bad)
xchg
dec
mov
mov
(bad)
lock
push
mov
inc
and
(bad)
adc
push
(bad)
mov
sbb
push
lock
fimul
adc
dec
pop
jb
jmp
pop
jmp
sub
repnz
xchg
shr
fild
xchg
outs
push
pop
ror
test
xchg
jno
mov
sahf
out
mov
in
loope
mov
cmp
mov
jno
or
dec
in
sub
(bad)
pop
mov
in
(bad)
and
pop
adc
mov
adc
in
pop
pop
mov
pop
pop
icebp
bound
adc
jo
call
mov
mov
loopne
je
(bad)
stc
pop
repnz
mov
mov
ja
arpl
iret
fidiv
push
lahf
ficomp
in
push
xor
scas
loope
or
push
inc
xor
cwde
sar
test
enter
dec
loope
cmc
call
jb
cs
ret
xchg
dec
cmp
xor
out
pop
ss
cdq
add
inc
jmp
(bad)
push
or
sbb
loope
iret
cmp
ror
mov
push
ret
jne
div
daa
clc
mov
cmc
jmp
xor
sub
cmp
int
dec
jnp
aam
pop
out
adc
stos
stos
jl
mov
jmp
gs
nop
mov
mov
retf
and
adc
in
mov
rcr
test
cwde
add
push
pop
push
sub
sbb
pop
scas
mov
and
mov
adc
or
push
mov
movs
mov
in
push
iret
pop
inc
test
les
repnz
and
ret
arpl
fbld
dec
and
sbb
and
ret
outs
push
mov
inc
inc
add
(bad)
mov
sub
out
dec
pop
call
mul
pop
xchg
ins
out
cmps
adc
xchg
mov
shl
scas
fisub
pop
push
je
outs
cmps
mov
pop
into
adc
ret
push
mov
or
std
leave
mov
and
mov
jno
aad
ins
cmp
lods
mov
push
dec
jmp
mul
scas
gs
inc
shl
jmp
mov
xchg
dec
xchg
js
stos
in
aam
sbb
shl
rcl
and
push
shr
xchg
iret
adc
ja
cs
adc
(bad)
in
in
mov
ja
jo
xchg
xor
add
cmps
dec
popf
out
inc
retf
outs
jo
mov
pop
jb
in
ja
loopne
adc
mov
(bad)
scas
sub
in
cmp
jecxz
gs
call
in
lahf
retf
inc
test
pop
pop
jmp
or
jl
or
imul
leave
add
mov
mov
cmp
inc
or
xor
sahf
pop
ret
in
inc
mov
mov
repnz
jp
ficomp
mov
repz
(bad)
cs
popa
addr16
das
jo
add
sahf
sbb
cmc
stos
dec
inc
cmp
mov
sbb
add
retf
icebp
sahf
sbb
lods
sub
aas
out
loop
mov
mov
leave
int3
mov
das
popf
daa
retf
jo
lahf
je
sbb
repz
repz
push
dec
pop
aam
mov
xor
cdq
(bad)
aaa
call
jns
mov
pop
push
pop
pop
cdq
mov
sbb
xchg
cmp
call
sbb
push
mov
fwait
mov
jno
or
or
outs
or
jb
push
into
push
jo
aam
imul
cmp
pop
stos
sar
cmc
sub
(bad)
aaa
repnz
push
xchg
test
adc
dec
cmps
pop
das
mov
xchg
sbb
(bad)
lock
mov
and
ss
add
retf
jo
popa
int3
(bad)
mov
jle
dec
xor
mov
xor
jg
xchg
sti
pop
sub
cdq
mov
mov
inc
in
sub
sub
push
adc
pop
adc
movs
cmp
mov
mov
aaa
mov
mov
icebp
mov
out
or
inc
stos
je
xor
push
xchg
imul
push
lods
cdq
icebp
cmp
xlat
pop
adc
inc
xchg
add
adc
cmp
inc
add
pop
cmps
jns
(bad)
in
push
add
test
xor
xorps
lea
inc
(bad)
out
add
mov
cmp
adc
cmp
rcl
scas
fwait
sub
mov
sub
xor
in
xor
mov
mov
fdivr
adc
aas
mov
imul
adc
dec
clc
mov
sahf
or
jg
pop
icebp
xor
adc
cmc
cmps
cdq
movs
movs
mov
or
pop
jg
pop
jmp
loopne
dec
sar
iret
cmp
dec
outs
push
sbb
jbe
xchg
psubsw
jo
adc
push
jo
vpsubq
ins
push
push
icebp
jp
jnp
mov
mov
cli
movs
dec
shl
jge
scas
or
dec
fwait
test
jns
push
xchg
or
test
out
sub
lds
cmc
inc
sub
mov
out
aam
mov
ror
mov
push
dec
out
mov
(bad)
repnz
inc
inc
iret
mov
sub
les
sub
cmp
cdq
ja
jne
pop
sub
movs
lock
ja
aad
jmp
and
je
dec
and
(bad)
pushf
mov
out
imul
scas
xchg
popa
mov
ret
retf
mov
(bad)
out
cmp
add
xchg
cwde
(bad)
lods
jmp
aad
pop
add
stos
adc
rcr
es
ret
cdq
sbb
mov
push
sbb
retf
hlt
mov
dec
mov
imul
jb
(bad)
sbb
sub
jnp
fidiv
and
inc
in
lahf
pushf
rcl
jnp
and
and
fild
adc
das
in
push
push
int3
sbb
fstp
(bad)
imul
xor
mov
jmp
hlt
ret
into
inc
xchg
jno
int3
aas
push
sbb
add
dec
aas
pop
inc
je
or
push
out
ins
fadd
ret
pushf
div
mov
jne
ja
xor
leave
push
nop
jae
mov
jge
jl
bound
hlt
inc
repz
sub
mov
loope
mov
pcmpgtb
fmul
adc
mov
stos
cmp
pop
fimul
push
loop
jecxz
in
or
mov
sbb
cld
out
sub
jo
test
mov
lahf
nop
sahf
mov
mov
adc
jg
push
cmp
int
pop
and
sub
cmc
gs
add
jns
pop
ds
dec
dec
inc
out
and
and
adc
cmp
out
add
(bad)
test
jnp
fidivr
xchg
cld
pop
xor
imul
mov
test
sbb
jmp
xor
inc
daa
mov
xor
in
ficomp
push
push
pusha
cmps
pop
lods
test
mov
push
scas
push
sbb
jmp
mov
lock
ror
and
jae
and
jo
psubd
sub
mov
ins
ror
mov
xchg
fild
xor
add
mov
outs
(bad)
inc
movs
fist
mov
repnz
or
ror
and
aad
ret
fmul
xlat
xor
jmp
push
cli
pop
sbb
dec
repz
cmp
mov
adc
dec
adc
shl
mov
sbb
cmps
dec
mov
jo
mov
xor
xor
pop
call
mov
fcomi
pop
test
cmp
push
cmp
ins
in
(bad)
and
popa
mov
push
sub
ja
adc
mov
dec
icebp
pop
imul
add
xchg
stos
lds
ss
bound
inc
cmps
ds
arpl
jmp
nop
push
pop
adc
push
dec
adc
adc
cmp
loop
in
call
int
addr16
mov
inc
repz
out
jae
(bad)
int
test
jnp
lods
(bad)
pop
aas
push
pushf
pusha
cmp
stos
mov
outs
mov
retf
add
sbb
je
enter
sub
jbe
mov
push
cmp
xor
mov
frstor
enter
mov
dec
and
pop
leave
nop
leave
xchg
inc
mov
jb
loopne
dec
push
sbb
adc
fistp
stos
bound
setge
imul
inc
sbb
pop
outs
je
inc
dec
push
mov
and
add
pop
xor
rol
mov
ss
xchg
push
sbb
inc
mov
pop
cmps
sub
cdq
push
loope
jae
test
sub
jne
out
pop
(bad)
cli
xchg
int3
and
mov
xor
mov
(bad)
(bad)
fcmovnu
lahf
mov
jecxz
xchg
aas
push
push
sbb
imul
or
gs
pop
sti
out
pop
pop
test
aad
mov
mov
mov
jmp
in
(bad)
jns
std
outs
adc
pop
adc
call
cmp
ret
inc
es
stos
lods
jae
pop
mov
mov
push
adc
push
call
out
jmp
inc
jnp
out
out
xchg
mov
fisttp
inc
ds
cmp
loopne
push
hlt
je
cmp
jae
pop
ret
pop
fucom
push
and
add
repz
sbb
sub
sbb
mov
pop
mov
in
mov
enter
imul
faddp
lods
xor
outs
retf
cmp
arpl
aas
scas
js
aad
add
sti
push
inc
jle
fnstenv
inc
scas
retf
cmp
inc
pop
imul
ja
xchg
(bad)
push
ret
scas
retf
cwde
pop
cld
jg
(bad)
mov
dec
pushf
outs
inc
pop
test
cmp
rcr
test
cdq
inc
dec
pop
sub
mov
pop
mov
scas
stos
out
pop
inc
(bad)
mov
repnz
inc
fmul
push
xchg
jns
xchg
mov
in
iret
jbe
mov
inc
mov
pop
shr
dec
shr
pop
mov
mov
pop
mov
test
or
dec
mov
pop
lds
jnp
loope
ret
iret
fcomi
jmp
push
test
and
(bad)
leave
clc
mov
(bad)
ja
adc
lds
ror
adc
dec
je
sahf
(bad)
(bad)
and
mov
and
hlt
mov
leave
jno
int3
cmps
jle
cmp
pop
daa
sbb
scas
pop
pop
stos
xor
scas
sbb
pop
adc
adc
gs
mov
push
fwait
cmp
add
jmpw
adc
jmp
data16
ins
jle
jle
mov
data16
pop
jb
ja
xchg
jb
pushf
rcr
sub
out
test
inc
push
pop
vpacksswb
cwde
lods
or
push
adc
sbb
cmp
(bad)
cdq
aaa
cmp
fisubr
push
mov
push
fld
inc
fs
adc
dec
cmps
dec
das
adc
mov
inc
mov
outs
mov
pop
js
pop
sub
test
out
cmc
test
adc
mov
scas
add
sub
xor
sub
mov
jb
add
pop
es
push
in
(bad)
mov
adc
xchg
add
ret
ss
push
pop
or
push
arpl
nop
push
(bad)
pop
or
leave
or
rcr
ror
adc
rcl
xchg
cmps
xchg
cdq
or
mov
in
dec
push
push
scas
jmp
sahf
ss
and
mov
(bad)
psadbw
fild
ficom
ins
sbb
sub
pop
jb
jp
in
cmp
adc
rol
inc
xor
mov
dec
inc
inc
stc
mov
sahf
fistp
fbld
xchg
imul
aas
out
cmps
mov
or
int3
addr16
jne
add
hlt
fsubr
gs
lods
les
pop
dec
inc
cdq
nop
jge
xchg
and
jmp
fldenv
cli
sub
cmp
jp
dec
lods
(bad)
shl
push
ds
push
int3
sbb
cmps
cld
jp
cmp
jcxz
sub
imul
es
dec
add
push
mov
fld
xlat
pop
je
sub
cmp
sub
js
mov
pop
jmp
jns
cmp
sti
mov
fs
out
and
cmp
pop
adc
xchg
(bad)
sbb
pop
out
or
inc
test
cdq
push
in
ror
push
sbb
jp
fild
pop
inc
(bad)
inc
pusha
mov
and
arpl
xchg
xor
mov
cmps
or
jl
call
out
loopne
pop
jecxz
into
cmc
xor
loopne
ret
adc
outs
pop
push
scas
mov
push
rcl
and
into
or
xor
mov
xchg
ret
mov
push
adc
outs
xor
das
lahf
dec
jae
pushf
lahf
xchg
xchg
inc
(bad)
loop
or
shr
and
sbb
test
or
push
adc
mov
outs
jns
pop
push
jge
hlt
adc
dec
mov
push
cmps
inc
leave
cdq
test
aad
lods
jbe
pop
fnstcw
enter
int
bound
(bad)
jmp
rol
xor
loop
push
inc
and
movs
sbb
mov
aad
fcomp
(bad)
mov
ror
test
cmp
mov
clc
fwait
xor
fcomip
aaa
mov
or
mov
les
push
fsubr
addr16
mov
add
push
mov
les
fdivr
aas
cmc
mov
push
cmps
push
repz
dec
stos
lods
xchg
or
mov
aaa
cld
lahf
add
dec
shr
jbe
adc
je
mov
mov
mov
xchg
cmc
leave
fldcw
push
mov
es
(bad)
xlat
mov
jno
push
dec
test
xor
test
sbb
mov
popf
adc
cmp
add
and
jmp
inc
popf
jmp
movs
add
les
push
dec
(bad)
fild
in
push
mov
adc
enter
clc
movs
clc
mov
lea
int
idiv
mov
sbb
jno
inc
push
cmp
and
jmp
fstp
int
dec
push
stc
(bad)
nop
int
ja
mov
outs
push
outs
repnz
push
loop
hlt
fs
(bad)
sbb
mov
push
inc
adc
jecxz
xchg
retf
loope
mov
mov
sti
sbb
ss
mov
cmp
inc
pop
or
popa
call
ins
ins
out
out
fcomip
cmc
retw
dec
cmp
xchg
or
adc
jle
test
shl
push
(bad)
ins
adc
xor
dec
(bad)
xor
call
and
jmp
xor
inc
jl
in
push
into
gs
xchg
in
stos
fwait
shr
sbb
mov
add
cli
retf
repnz
(bad)
enter
fidivr
shr
jns
ret
mov
cmp
xor
mov
sbb
lds
and
dec
int
push
mov
pop
mov
das
in
push
cmc
pop
mov
xchg
jecxz
jno
mov
push
call
and
pop
push
and
jbe
mov
loop
xor
fimul
ret
loope
inc
jmp
mov
sbb
popa
movs
(bad)
outs
push
cwde
leave
sub
sbb
inc
xchg
mov
sub
jmp
mov
popa
mov
dec
test
int3
fisubr
fdiv
out
int3
jge
mov
xchg
into
les
adc
jno
ret
aad
jb
dec
inc
loop
cmp
lods
mov
xchg
jb
xor
call
lock
ja
fistp
pop
cli
inc
sbb
out
mov
inc
mov
add
movs
jae
pusha
jb
lds
sub
mov
mov
(bad)
ret
sub
xor
cmp
fs
ror
dec
dec
dec
dec
add
aas
mov
loope
das
mov
mov
aam
sub
push
in
mov
pop
fwait
push
cmp
loopne
jno
jne
mov
mov
inc
nop
rol
cmp
mov
sbb
xchg
mov
sti
and
clc
sub
test
sub
hlt
fld
pop
xlat
dec
jl
call
repnz
jbe
rcr
mov
mov
xor
data16
jge
mov
leave
pop
mov
scas
hlt
add
mov
push
ficom
pusha
sahf
pusha
nop
mov
push
jae
not
inc
cmp
cwde
and
add
push
add
test
out
fwait
sbb
jp
jbe
fs
jmp
sar
mov
ret
push
mov
(bad)
movs
aas
fidiv
sbb
js
cs
add
aas
div
pop
leave
inc
mov
or
jg
dec
push
outs
cmp
rol
push
test
ret
mov
rol
add
push
stos
adc
sbb
sar
add
loopne
movs
push
hlt
std
pop
pop
xchg
fcomip
les
mov
dec
div
sbb
jp
int
retf
jmp
mov
or
pop
(bad)
fild
je
hlt
mov
add
int3
sub
fsubr
clc
mov
and
jecxz
stos
cmps
imul
or
movs
sbb
call
pop
in
inc
mov
xchg
or
jb
int
pop
pop
inc
ror
hlt
div
inc
inc
push
in
xchg
in
jnp
push
mov
mov
dec
jecxz
icebp
call
fdiv
iret
mul
mov
movs
xchg
into
inc
adc
pop
outs
push
out
or
xchg
cmp
aaa
jecxz
and
iret
pushf
push
je
or
adc
sbb
(bad)
int3
out
mov
cmp
sbb
sbb
or
outs
xchg
adc
in
mov
jb
fadd
movs
dec
mov
mov
enter
lods
xchg
mov
sahf
iret
mov
mov
adc
push
and
fild
ret
aaa
adc
cmp
dec
clc
or
adc
cwde
(bad)
pop
call
sbb
push
daa
push
mov
inc
imul
sbb
mov
data16
mov
cmc
push
or
jbe
sahf
cmc
xor
inc
inc
push
adc
cmc
add
mov
jo
sub
lock
pop
adc
jl
mov
inc
xor
clc
jb
and
and
mov
sub
and
ins
dec
dec
mov
and
test
aam
mov
sub
clc
sub
xchg
movs
mov
adc
or
and
jge
jno
push
push
ja
jb
jmp
ins
std
fistp
jecxz
cs
sahf
mov
add
cmp
push
push
in
adc
cmp
test
jecxz
add
out
(bad)
rcr
jl
shl
nop
lea
cmp
je
xchg
cmp
sub
push
lahf
adc
mul
ds
loopne
in
mul
push
inc
das
adc
or
rcl
pop
xlat
sbb
test
mov
retf
call
pop
mov
cmc
rol
add
(bad)
mov
sbb
pop
xor
xchg
mov
sbb
int
xchg
int
(bad)
fist
pop
xlat
dec
(bad)
pop
jns
push
adc
mov
xchg
push
retf
xor
push
mov
fcom
push
xor
mov
cdq
(bad)
pop
pop
or
ret
cmp
(bad)
lods
jo
clc
es
adc
call
(bad)
movs
add
rol
and
cdq
jns
js
dec
mov
mov
mov
jno
nop
retf
popa
cmp
dec
push
aam
pop
sub
sub
fiadd
mov
fnsave
rol
xor
dec
(bad)
or
in
pop
out
or
and
push
mov
xor
jns
jbe
leave
and
rol
push
imul
xor
ficom
fist
je
pop
or
loope
(bad)
push
jo
mov
sbb
mov
call
pop
in
shr
fidivr
das
mov
jb
or
pop
imul
sub
or
cmps
mov
mov
sbb
push
add
inc
xor
jge
jmp
dec
adc
or
add
add
cmp
dec
dec
inc
and
mov
fcomp
ret
inc
shl
dec
adc
adc
pop
push
out
movs
sub
test
and
push
popf
or
shr
mov
adc
and
mov
xchg
mov
sbb
outs
popa
fmul
lock
xor
or
sub
les
pop
nop
jne
fsub
mov
enter
in
add
cmp
dec
retf
adc
fs
std
jns
adc
fcom
int3
jb
xor
(bad)
daa
cs
cmp
cmp
lahf
cmps
popf
sbb
xor
jne
mov
mov
dec
div
dec
enter
push
addps
mov
sar
lods
das
neg
(bad)
popf
test
enter
mov
push
repz
cmp
xor
dec
cmps
pop
pop
dec
adc
mov
mov
(bad)
fcomp
push
(bad)
sub
lods
push
cli
push
pop
mov
mov
mov
bnd
inc
and
ins
lods
cmp
pop
push
inc
inc
cmps
jb
aaa
jbe
or
shl
push
dec
push
xor
xchg
int
inc
outs
sbb
stos
sahf
push
js
xchg
aad
arpl
xchg
lods
ret
inc
sahf
enter
jmp
xchg
jnp
aad
fidiv
mov
gs
mov
js
int
int3
dec
dec
(bad)
jecxz
jmp
xchg
test
xchg
or
call
jne
xor
fild
add
sub
pop
jle
dec
jg
dec
push
jmp
sub
xlat
lea
retf
(bad)
mov
ja
outs
pop
leave
scas
jg
pushf
int3
pop
fstp
pop
(bad)
pop
shl
fisttp
popf
retf
add
inc
enter
fisubr
mov
mov
mov
jge
nop
out
ss
cs
sbb
cmc
scas
rol
xchg
movs
ins
push
xchg
cmps
loopne
mov
fs
xor
stos
fsub
ja
in
je
jecxz
rcr
jno
in
test
ja
xchg
bound
sub
fldcw
push
fnstsw
gs
bound
loopne
mov
leave
jmp
(bad)
add
popa
inc
(bad)
repnz
adc
int3
loop
pop
push
movs
bound
iret
xlat
mov
cmp
pop
icebp
and
in
mov
cmp
iret
daa
jp
xchg
xchg
fldcw
popa
(bad)
cmp
adc
cld
xor
mov
loop
and
xchg
cmp
out
push
mov
jg
or
sbb
retf
stos
mov
mov
mov
jb
add
popf
inc
loop
cs
icebp
push
fbld
jp
je
push
adc
rcl
fcomip
lahf
mov
js
div
xchg
push
xchg
imul
shl
fadd
push
call
test
mov
adc
aas
enter
test
jp
loop
loopne
imul
ja
stc
lods
loopne
movs
je
sbb
mov
adc
rol
push
mul
retf
lods
push
or
loope
sub
dec
iret
aaa
sub
xchg
pop
fstp
daa
aaa
add
mov
paddusb
lds
jno
arpl
mov
inc
fiadd
push
jmp
push
enter
test
pop
and
adc
repz
push
push
adc
leave
xor
jnp
xchg
imul
in
cmp
mov
jle
add
or
iret
inc
inc
mov
or
mov
adc
aam
mov
mov
je
mov
jge
add
outs
mov
xor
stos
cmps
sbb
or
dec
(bad)
mov
mov
in
push
dec
inc
and
sub
xchg
popf
dec
and
mov
push
ret
sbb
jmp
and
jp
jge
pop
(bad)
outs
sbb
jp
test
inc
xchg
inc
dec
ret
mov
or
enter
xchg
xchg
sub
mov
and
je
arpl
pop
mov
(bad)
fild
xchg
push
aaa
scas
loope
adc
fdivr
ss
inc
out
mov
call
jne
out
jae
sub
int3
das
adc
inc
mov
mov
xchg
or
dec
cmp
or
mov
xor
cdq
std
cli
call
pop
adc
jg
jecxz
scas
push
fisub
retf
inc
mov
add
jmp
clc
dec
push
jg
xor
or
adc
aaa
sti
jge
xchg
repz
add
ror
jp
scas
jmp
test
xor
hlt
popa
mov
mov
push
(bad)
icebp
loope
shr
dec
jns
mov
mov
mov
out
in
mov
fst
add
mov
mov
cmp
sub
ins
dec
adc
(bad)
jns
(bad)
and
lea
je
lock
jae
cmc
pop
push
das
cmp
test
cwde
mov
xchg
cmc
imul
es
push
(bad)
cmp
icebp
dec
sbb
jmp
popa
pushf
daa
sub
push
xchg
ds
in
mov
cli
stos
and
or
out
pop
mov
pop
mov
xor
inc
hlt
outs
pop
(bad)
mov
mov
mov
rcl
xlat
xor
push
iret
xchg
jecxz
push
(bad)
xor
sub
xchg
rcr
sbb
sbb
mov
push
mov
retf
into
dec
in
jl
jmp
ds
aas
stc
xchg
push
(bad)
sub
jl
dec
lahf
jbe
push
cmp
add
push
or
mov
std
xchg
jp
cmps
in
mov
clc
stos
adc
add
inc
cmp
out
jo
mov
call
sbb
jmp
ret
mov
jns
movq
mov
jne
xchg
and
std
fsubr
inc
mov
mov
pop
cmp
lahf
retf
sbb
mov
pop
stos
fld
sbb
lods
div
adc
fsqrt
pop
in
dec
push
imul
(bad)
iret
xchg
cmps
sbb
mov
out
xor
xchg
test
cmp
sahf
repz
mov
pop
into
push
adc
add
mov
int
dec
stc
imul
pop
mov
pop
push
sahf
or
shl
pop
iret
(bad)
mov
push
in
(bad)
shl
(bad)
pop
rcl
hlt
cmps
call
aad
arpl
add
push
adc
leave
movs
xchg
xchg
pop
sbb
mov
ss
dec
inc
int3
(bad)
fisttp
lock
imul
mov
cmps
ds
aaa
scas
neg
ret
aaa
add
inc
loope
stc
jne
mov
inc
fcomip
xchg
mov
mov
(bad)
in
or
or
outs
pop
push
or
adc
add
adc
iret
xchg
ins
cmp
(bad)
cwde
shl
in
(bad)
hlt
pop
out
fiadd
outs
jno
scas
cmp
leave
sbb
stos
mov
in
enter
sbb
inc
ror
mov
retf
mov
pop
stos
(bad)
stc
fild
ins
jo
xor
std
imul
and
out
outs
mov
and
ins
push
jne
iret
adc
pop
sbb
test
jecxz
mov
mov
adc
cmps
pop
sub
out
mov
mov
add
enter
and
data16
ds
lods
push
popf
test
dec
das
sbb
jno
mov
pop
jmp
and
retf
dec
stos
ins
mov
mov
es
imul
inc
ret
repz
out
mov
inc
imul
jno
xchg
aaa
mov
sub
hlt
nop
je
jg
jp
xor
dec
cmp
lds
dec
movs
pop
xchg
movs
cmps
add
adc
xchg
or
and
cmp
push
loopne
jmp
or
(bad)
jns
fcom
mov
in
inc
mov
fnstsw
sub
into
test
lods
sbb
xor
lds
je
call
shr
jecxz
(bad)
mov
cvtdq2ps
push
xchg
sti
idiv
push
cmp
movs
sar
rcr
clc
mov
mov
add
cmp
fnstsw
and
mov
cdq
or
test
scas
xchg
and
cld
mov
jmp
xor
xchg
cli
gs
cmps
imul
cmps
das
push
sub
and
pop
cmp
xchg
test
xchg
xchg
mov
inc
xlat
arpl
pop
dec
cwde
retf
test
push
mov
sub
mov
xor
push
pop
in
hlt
mov
loopne
outs
mov
cdq
aad
ror
in
and
add
in
movs
pop
push
scas
add
sti
ret
cmp
shl
popf
bound
add
retf
jnp
addr16
inc
hlt
inc
cmp
cmp
idiv
inc
lods
dec
mov
push
adc
pop
les
nop
addr16
fdivr
cwde
dec
clc
mov
ror
(bad)
into
iret
inc
out
and
mov
std
mov
dec
lahf
int
out
movs
js
jne
xchg
inc
(bad)
adc
stos
jns
jne
jb
add
xor
jbe
push
loopne
stos
fcmovnbe
(bad)
fdivp
jae
cmp
call
or
mov
(bad)
hlt
in
mov
call
shl
popa
ds
(bad)
outs
xor
ja
je
inc
pusha
xor
mov
adc
ss
jmp
ss
mov
xchg
and
jo
cmp
or
mov
dec
add
adc
fs
push
pop
bound
in
push
rcr
mov
xor
push
lock
and
(bad)
mov
mov
and
mov
jne
dec
pusha
jle
jge
sub
push
sar
test
not
icebp
outs
and
cmp
pop
jae
push
inc
arpl
sar
test
mov
jmp
or
jge
mov
mov
lds
adc
mov
or
mov
cmp
aas
xor
int
cmp
stos
enter
not
inc
ins
das
int3
xor
dec
and
mov
repnz
lea
push
cmp
sub
jno
ja
push
add
sub
fidivr
or
mov
push
imul
and
pop
in
and
icebp
loop
dec
les
fst
mov
adc
and
push
cwde
pop
leave
and
mov
add
popa
addr16
test
mov
jg
sbb
sub
dec
enter
dec
push
jg
add
es
sub
inc
mov
dec
jbe
xchg
xor
xchg
jmp
scas
mov
pop
pop
sbb
push
sahf
inc
and
arpl
(bad)
daa
lock
add
or
test
jecxz
dec
pop
dec
mov
test
in
pop
dec
ds
stos
push
pop
add
push
je
jecxz
in
hlt
sbb
loop
pushaw
add
xchg
or
cmp
ficom
adc
jp
mov
cmp
push
or
adc
(bad)
pop
push
(bad)
pop
sbb
jmp
sub
scas
das
mov
mov
lods
cs
xchg
addr16
push
(bad)
pop
push
jl
mov
les
xlat
push
mov
push
repnz
call
sub
pusha
xor
mov
neg
dec
fs
push
test
js
adc
enter
scas
cmp
mov
xor
push
jle
das
dec
mov
iret
mov
clc
push
stc
xchg
shl
nop
call
frstor
fnstsw
sbb
outs
(bad)
(bad)
xchg
push
jmp
clc
push
shl
mov
mov
out
mov
enter
push
stc
add
mov
loopne
jecxz
cmc
cmp
in
push
adc
enter
stos
add
pop
sbb
pop
fmul
cwde
sub
pop
clc
shl
sbb
push
fucomi
mov
xchg
xor
jnp
mov
mov
js
mov
xor
test
sbb
ins
gs
das
jae
retf
xlat
lods
mov
dec
(bad)
sub
and
shl
and
clc
mov
in
les
xchg
push
add
push
inc
push
mov
add
xchg
outs
mov
xchg
stos
fnsave
loope
fdiv
jecxz
lods
mov
lds
bound
cmp
cld
dec
ror
rol
jns
ret
test
sbb
mov
jnp
shl
mov
pop
mov
(bad)
pop
fadd
pop
nop
hlt
push
add
mov
cmp
adc
aam
jnp
jno
inc
sar
daa
xlat
push
(bad)
cs
mov
call
ret
(bad)
popf
fldenv
fisubr
gs
ja
pop
push
dec
mov
xor
xor
(bad)
jl
in
out
stos
and
sub
into
stos
fcomp
shl
push
pop
aad
sbb
cmp
push
data16
cmc
lahf
stos
xchg
(bad)
push
mov
sub
dec
ins
movs
dec
fnstsw
call
adc
cmp
cmps
rol
xchg
in
iret
cmp
(bad)
arpl
outs
test
pop
shr
in
dec
push
mov
(bad)
jle
loope
test
mov
mov
sbb
clc
cmp
xchg
into
stos
xchg
mov
mov
push
adc
mov
cmps
xchg
xchg
inc
clc
es
aas
sbb
loop
les
inc
xchg
and
shr
add
xor
imul
movs
and
mov
mov
add
in
call
fld
js
(bad)
cdq
add
sar
aas
sahf
or
push
lahf
dec
out
push
sti
movs
cmp
lds
fwait
xor
mov
ret
add
or
xor
jp
scas
mov
mov
push
adc
sub
pop
cld
in
mov
pop
lahf
es
mov
xchg
repnz
test
enter
push
(bad)
neg
into
jo
inc
ret
add
mov
add
loopne
push
pop
test
call
pop
inc
out
loopne
xor
call
pop
mov
addr16
lds
stc
sub
mov
rol
aam
pop
fucom
cmp
mov
mov
pop
js
pop
mov
daa
inc
mov
ss
push
loopne
jae
xor
xor
jb
mov
push
push
daa
jecxz
lods
ss
lea
jmp
arpl
jne
ret
sbb
cli
jge
adc
test
and
cmp
repnz
rcl
stos
not
enter
or
loopne
push
push
jb
xchg
adc
mov
jmp
push
xchg
mov
sahf
gs
sbb
add
jnp
adc
add
test
mov
das
ret
cli
popf
clc
jl
add
jp
out
retf
inc
call
mov
or
out
jae
jne
ret
(bad)
add
jmp
sahf
sbb
lods
stos
pop
fwait
cmp
jg
and
retf
sti
and
pusha
xor
xchg
loopne
fisub
test
out
sahf
adc
jae
push
push
pop
out
sbb
cwde
cli
mov
jmp
inc
cmc
cwde
(bad)
in
sub
sub
add
lock
pop
ins
inc
mov
out
lea
dec
dec
adc
je
js
ficom
add
lea
(bad)
mov
mov
sub
dec
lods
inc
shr
cs
in
stc
pop
retf
inc
adc
les
and
jbe
idiv
push
jp
retf
push
(bad)
out
repnz
clc
popa
dec
mov
jbe
mov
ins
lods
mov
call
mov
in
loop
ss
push
dec
fmul
in
stos
jle
inc
in
movs
jmp
dec
push
push
lods
les
push
popf
dec
xlat
stos
sbb
mov
out
xor
mov
and
jge
div
je
fsub
arpl
cwde
adc
aas
add
and
enter
mov
jnp
iret
cmp
mov
pop
cwde
or
cwde
push
cmp
test
movs
aad
aaa
clc
ds
xchg
sbb
mov
ss
xchg
(bad)
mov
mov
pop
inc
push
mov
mov
mov
add
mov
pop
push
(bad)
div
fadd
mov
sub
mov
jmp
(bad)
std
inc
out
daa
sahf
mov
cmp
pop
pushf
iret
add
pushf
inc
xchg
cmp
inc
(bad)
mov
adc
test
pop
sbb
lds
fmul
pushf
fdiv
stos
in
cmp
xchg
xor
xor
test
enter
out
in
and
push
ja
push
out
push
xor
cwde
inc
or
out
lock
dec
test
es
xchg
int3
fadd
sbb
ins
cmp
add
mov
add
push
jmp
mov
cdq
ret
idiv
pusha
inc
xchg
outs
pusha
out
sti
ins
es
test
imul
jns
mov
or
and
and
test
dec
fiadd
in
pop
push
mov
mov
mov
not
lock
cmp
cmp
aad
pop
in
shl
arpl
add
mov
sbb
mov
mov
je
sbb
ds
cmp
int3
inc
loope
inc
addr16
retf
nop
xor
inc
mov
xchg
cmp
and
addr16
or
mov
add
ficom
sub
fisttp
shl
adc
ror
icebp
sbb
fmul
dec
xchg
sar
jnp
ror
sbb
lods
js
pop
loopne
or
mov
pop
and
or
push
mov
loop
pop
test
or
div
xchg
js
sar
(bad)
push
jecxz
popa
xor
sub
cmps
dec
jno
cs
push
ret
dec
mov
loop
mov
aam
lahf
cmp
lods
cmps
test
mov
retf
sti
cld
scas
cmp
and
clc
pop
xlat
mov
iret
out
pop
out
imul
in
ja
cmps
enter
repnz
cmp
push
cmps
and
adc
imul
aad
sbb
xor
adc
hlt
and
pop
mov
xchg
xor
test
push
push
pop
into
lods
jle
pop
mov
iret
sbb
and
lahf
out
out
sub
jl
xchg
mov
add
xchg
aaa
mov
cmp
sub
push
adc
and
out
mov
je
mov
pushf
ins
inc
(bad)
int3
xchg
cmp
push
mov
and
add
push
ret
and
ins
push
stos
inc
repz
push
pop
aam
retf
sbb
aad
xor
mov
daa
movs
imul
mov
in
popa
xlat
dec
xchg
mov
xor
nop
sub
inc
aaa
cmp
cwde
pusha
ja
retf
inc
ss
out
mov
mov
shl
stos
add
add
imul
mov
push
ja
push
je
stos
mov
fcomi
sbb
fs
xchg
in
adc
push
jns
ja
sub
mov
pop
fucompp
call
fsub
into
sub
dec
mov
adc
sti
sbb
es
repnz
movs
cli
or
pop
sub
outs
sbb
clc
push
lea
pop
retf
idiv
in
adc
(bad)
xor
cmp
mov
xlat
cmc
jl
ja
jg
imul
sbb
outs
cmp
lods
push
int3
jb
fwait
jno
out
sub
mov
(bad)
cmc
cld
push
or
jmp
jno
and
retf
movs
and
pusha
pop
cmc
xchg
out
ja
pop
cs
and
out
sbb
cmp
pushf
pop
pop
and
lock
aaa
inc
mov
and
pop
(bad)
in
in
push
jnp
ficom
push
lahf
add
cmps
(bad)
and
add
inc
mov
cmp
jb
cmps
push
je
in
mov
sbb
push
push
inc
jno
push
mov
gs
bound
adc
jg
xor
push
adc
dec
test
add
cmp
dec
lock
enter
mov
leave
les
popf
(bad)
lahf
xor
sahf
add
fst
pop
(bad)
sbb
push
inc
rcr
mov
leave
and
pop
mov
pop
loope
jnp
mov
mov
imul
mov
es
daa
fwait
stc
xchg
or
and
pop
hlt
pop
mov
adc
aaa
mov
outs
ins
add
loope
and
paddq
in
aaa
aam
in
and
sbb
retf
arpl
stc
push
jns
imul
sub
jl
int3
cli
cli
neg
cmp
hlt
scas
xor
dec
sbb
pusha
idiv
test
ret
test
cs
jp
nop
and
dec
dec
into
add
jle
xlat
fcmove
mov
dec
fstp
enter
es
lods
jg
sub
and
sti
mov
jno
or
ins
pop
xchg
pop
outs
movs
cwde
sub
adc
lods
sub
mov
clc
ins
out
daa
cs
push
push
cmp
push
stos
(bad)
jne
cmp
into
test
add
or
push
xchg
or
push
jle
jge
inc
jbe
or
pop
sbb
rcr
sub
xchg
fdiv
in
sub
dec
pop
cmp
lds
test
xchg
lahf
push
xchg
fcom
push
sub
sar
aaa
cli
jb
clc
lods
adc
adc
mov
mov
adc
test
call
sub
jae
jmp
inc
(bad)
js
or
call
jo
fs
sub
ds
mov
dec
into
lds
sub
jmp
jmp
fs
or
lock
cmp
and
loop
in
lea
stc
fwait
dec
sub
rcl
push
jle
das
mov
pop
loope
mov
pusha
mov
mov
mov
mov
int3
xor
in
sbb
mov
push
addr16
pop
add
xchg
repz
cli
or
lock
lahf
mov
sub
pop
xchg
jg
arpl
jo
jbe
ret
xchg
fadd
push
cmp
shl
and
fs
frstor
(bad)
hlt
jmp
lods
xor
mov
ds
stos
and
pop
iret
sub
outs
sub
push
push
mov
push
mov
pop
cmp
stos
dec
into
ins
inc
jl
ja
(bad)
push
inc
pop
nop
mov
scas
iret
sub
fnstcw
jmp
test
or
data16
adc
sub
cli
int3
scas
inc
mov
and
les
cli
mov
sub
inc
adc
add
sbb
inc
jl
mov
push
enter
push
fldenv
and
jbe
popa
xchg
cmp
mov
inc
aas
xor
js
or
mov
dec
xor
outs
icebp
fadd
out
mov
mov
repz
jmp
mov
adc
add
enter
pop
sbb
jb
push
jne
idiv
push
jo
ins
lahf
mov
sahf
sbb
mov
push
pop
call
sti
icebp
pop
test
xor
cli
jns
cmps
hlt
pop
int3
mov
rcr
push
sbb
dec
mov
pusha
push
cmps
sub
xor
dec
mov
outs
or
pop
ret
aas
sub
xchg
mov
ins
fs
inc
xor
sbb
rcr
out
lds
cmp
cdq
xchg
xor
mov
(bad)
lahf
dec
cmp
daa
cmp
nop
in
and
jae
add
or
fmul
inc
pop
cmp
pop
(bad)
movs
mov
scas
xor
sub
push
and
and
inc
cmp
mov
cld
jge
pop
retf
jne
stos
adc
fwait
sub
pusha
cld
push
push
jne
adc
je
sbb
lods
push
ins
sub
and
fisubr
loope
jnp
jge
ds
jge
popa
add
bnd
xlat
inc
int
sub
sbb
sub
gs
out
inc
test
xor
int
mov
fild
movs
xchg
or
xor
push
pop
dec
leave
inc
gs
inc
clc
test
call
test
cdq
std
xchg
mov
rcl
rcl
push
push
sub
in
stc
lock
sbb
inc
ins
xor
cmp
push
cmp
out
cwde
inc
or
out
lods
pusha
cmps
std
rcr
mov
lea
adc
clc
imul
jge
cmc
cwde
ret
pop
mov
pcmpgtb
pushf
or
mov
stos
sub
pop
push
adc
push
pop
jbe
std
pushf
iret
test
cmp
or
mov
out
movs
cmc
or
pop
sbb
into
in
and
pushf
out
xchg
shl
push
jl
imul
pop
and
hlt
in
or
mov
(bad)
cmc
xor
mov
std
mov
nop
pop
mov
cmps
jg
aad
jb
mov
sub
sub
xor
js
(bad)
int
movs
xchg
fnstenv
fsub
jae
dec
xchg
cmp
mov
xchg
icebp
xlat
data16
sahf
fbld
nop
out
jmp
daa
mov
fidiv
and
sahf
pop
push
out
aaa
xor
movs
adc
lock
cmp
xchg
sub
popa
or
jo
pop
shr
push
test
lock
adc
and
jns
idiv
pusha
mov
mov
push
xchg
pop
xor
cmp
ins
cmps
nop
ins
js
aad
xchg
pop
push
fdivr
enter
add
cmps
out
arpl
mov
and
out
repz
nop
sti
add
and
retf
cmps
rol
cld
sub
fisttp
aaa
mov
add
inc
jle
ss
mov
lods
mov
inc
xchg
rol
push
mov
push
out
lds
mov
or
pop
xor
mov
xrelease
push
jg
bound
mov
mov
cmp
jne
outs
pop
pushf
ins
adc
jae
int3
sti
jg
sub
loope
mov
rcl
jnp
jecxz
loope
add
dec
push
into
pop
mov
xchg
int3
xchg
xor
icebp
aas
dec
mov
push
jns
ja
mov
pop
jge
cld
shl
arpl
(bad)
xor
stos
rep
add
cmp
ret
push
fstp
addr16
adc
leave
sbb
jbe
(bad)
cmp
les
pop
and
xor
mov
jno
sub
push
and
push
inc
test
and
or
mov
(bad)
jecxz
(bad)
mov
in
mov
test
xor
test
dec
and
out
vmovapd
(bad)
push
ret
ret
adc
loope
in
neg
jns
mov
push
mov
ret
jno
call
adc
inc
xor
leave
hlt
xor
jecxz
or
fs
(bad)
sahf
jle
and
push
ror
cmp
xlat
push
and
idiv
jne
nop
stos
mov
xor
xchg
mov
inc
sub
lea
xlat
jb
sbb
cmc
dec
xor
ja
cmp
pop
fiadd
ds
mov
pop
lds
call
mov
out
inc
add
loopne
loope
mov
pop
retf
inc
bound
hlt
dec
repnz
jne
into
jae
sub
add
sub
and
fdiv
push
adc
cmp
fild
into
stos
and
test
out
(bad)
xchg
sub
dec
sahf
xor
imul
(bad)
mov
dec
inc
sbb
mov
jo
pop
and
jmp
pop
dec
mov
cmp
pop
sbb
js
pop
out
in
push
xchg
pop
popf
xor
jns
ss
pop
pop
jmp
fimul
pop
popf
mov
test
sub
xchg
sbb
or
arpl
ins
pop
das
mov
data16
bound
jns
or
ret
xor
lea
arpl
iret
rcl
dec
in
call
mov
lods
rcl
imul
repz
(bad)
and
jle
fcmove
xor
cmps
pop
push
xchg
or
adc
and
in
int3
ds
jae
loopne
push
mov
icebp
retw
movs
out
push
aam
or
into
mov
and
in
inc
push
sub
(bad)
fcom
outs
jg
sar
fs
enter
add
adc
push
and
pusha
mov
cmps
xchg
mov
dec
enter
(bad)
outs
shl
frstor
dec
ja
aam
pavgw
sbb
mov
pop
and
leave
inc
dec
sbb
les
mov
adc
(bad)
jl
and
ret
loop
jne
mov
jae
test
inc
dec
imul
mov
(bad)
sbb
je
mov
aam
sub
mov
std
enter
mov
sar
inc
push
xor
cli
sti
xchg
jo
cs
jo
xchg
mov
sbb
les
cmp
mov
dec
jmp
test
movs
les
push
loop
inc
(bad)
out
jns
xor
in
(bad)
xchg
gs
cmc
test
cmp
aad
lock
pop
(bad)
push
jno
dec
in
cwde
lahf
js
fld
not
xor
jl
cs
das
std
sub
jo
mov
lods
rol
loop
popf
retf
cmp
mov
lods
lahf
adc
add
ja
(bad)
lock
inc
jp
mov
or
mov
sbb
sub
in
in
int
jbe
lahf
jle
pop
xchg
cs
jne
mov
mov
test
sub
add
jnp
sub
pop
ja
fs
test
mov
ret
or
cmp
mov
frstor
mov
aas
shl
jo
mov
out
test
mov
and
jmp
xor
imul
test
sbb
ins
std
mov
push
ins
fidiv
dec
ins
sub
mov
xchg
je
or
ja
fsub
mov
adc
inc
push
rcl
jmp
push
mov
jmp
cmp
sub
cmp
movs
add
jge
lock
xor
add
xor
and
add
lock
fwait
in
into
mov
mov
ins
int3
cmc
cdq
pusha
cmp
pusha
pop
sbb
es
cmc
add
mov
xor
lock
mov
dec
jge
leave
mov
xchg
jnp
lds
icebp
sub
sbb
lea
pusha
dec
je
xor
pusha
mov
int
adc
test
and
(bad)
clc
ret
cmps
push
es
fiadd
(bad)
bound
mov
lahf
inc
inc
in
and
jmp
sbb
pop
push
mov
xchg
fiadd
ret
push
icebp
outs
ins
push
enter
push
push
sub
mov
sti
ins
adc
fsubr
sbb
inc
iret
dec
jne
ins
ror
inc
xor
sub
icebp
xor
or
sbb
cdq
push
jge
adc
pushf
dec
inc
ins
scas
fs
xchg
mov
jge
adc
fcomi
mov
ret
sub
data16
cmps
cdq
fmul
lods
(bad)
into
push
push
adc
pop
sbb
arpl
inc
and
test
popa
mov
es
xor
add
mov
fsubp
xchg
jg
cmp
sub
sub
pop
bound
aam
in
mov
cmp
push
mov
sti
ret
cmp
jne
movs
in
or
push
enter
outs
mov
call
sahf
jnp
mov
fcmovnbe
inc
jmp
sti
rol
int3
xchg
mov
dec
cmc
jecxz
xor
inc
pop
lea
mov
sbb
xchg
into
popf
mov
jmp
cmp
outs
jp
inc
into
xor
xchg
adc
dec
cwde
scas
pop
dec
mov
test
push
jp
mov
push
sbb
es
sbb
aas
add
leave
mov
lods
sbb
xor
mov
or
mov
jae
lahf
fmul
loope
dec
mov
xchg
sub
cmp
jl
fwait
push
push
mov
fld
sub
daa
dec
pop
jl
ins
aaa
dec
adc
pop
fbstp
int3
loopne
adc
push
and
cmp
mov
mov
sahf
push
mov
int
aas
push
jno
fstp
sub
in
mov
test
jg
or
fldlg2
pop
mov
and
sbb
repnz
bound
jo
sub
push
jmp
or
fidivr
ja
lods
add
mov
sbb
and
dec
lea
mov
pusha
jnp
ja
sbb
and
cwde
cmp
pop
sar
mov
jns
add
test
in
jno
nop
sahf
xchg
cmps
loope
push
std
mov
jmp
icebp
cli
fld
test
imul
enter
add
jo
aaa
inc
xchg
add
jb
call
adc
fild
pop
into
fisttp
or
jl
pop
xor
and
xchg
ja
sub
repnz
mov
pop
not
inc
xchg
retf
jbe
clc
rcl
jne
inc
push
jbe
or
lock
imul
adc
adc
cmps
es
mov
add
and
jb
sti
jmp
loope
aaa
cmp
aas
cs
inc
cmps
(bad)
or
test
inc
dec
fprem1
sub
mov
or
ins
inc
(bad)
fadd
das
jo
mov
add
jo
mov
in
xor
psubd
repz
lods
add
ins
jg
(bad)
add
je
xor
xor
hlt
test
push
repnz
aas
push
inc
xrelease
or
in
mul
mov
shr
pop
mov
push
mov
add
sub
jmp
out
xor
sbb
or
pop
repnz
hlt
and
outs
leave
adc
add
dec
adc
mov
pop
jg
mov
adc
call
add
cmp
loope
cwde
dec
pop
inc
scas
int3
push
ficom
add
sahf
jmp
loop
or
iret
(bad)
mov
hlt
pushf
not
or
mov
and
and
push
jg
pop
push
jns
sub
outs
jb
cmps
mov
cmc
retf
adc
dec
mov
pop
dec
mul
mov
xchg
(bad)
mov
push
lods
add
call
jo
fisttp
push
fst
addr16
in
mov
jg
or
xchg
shr
pop
mov
push
pop
sbb
cs
and
mov
jb
fwait
push
adc
xchg
das
int3
jge
scas
fldenv
or
or
push
xor
sub
mov
stc
pop
and
add
push
mov
(bad)
xchg
dec
es
hlt
cmp
mov
(bad)
aas
lock
jnp
or
jp
and
pop
pop
loopne
and
lahf
pop
push
jo
jge
sbb
pop
sbb
inc
mov
mov
inc
push
outs
div
mov
dec
and
fwait
std
pop
clc
pop
pop
push
xor
pop
mov
pop
lds
cmp
fwait
sbb
inc
sbb
mov
sub
fs
dec
push
imul
xchg
fdivr
iret
pop
dec
imul
mov
ins
pop
out
rcr
test
jmp
ins
push
add
stos
push
out
scas
pop
fisubr
iret
mov
outs
imul
xor
cmp
sti
cdq
inc
fdiv
push
sub
pop
mov
lds
clc
sbb
(bad)
pushf
sub
and
mov
inc
pusha
call
jbe
mov
xchg
lea
mov
xlat
call
retf
aad
arpl
nop
test
cmps
cmc
pushf
pop
pushf
mov
lods
add
(bad)
call
mov
cmp
les
cmp
je
ss
sub
and
dec
aas
jne
sahf
into
ret
dec
xchg
sti
lea
shl
rol
gs
ins
push
outs
in
dec
cmps
lods
push
mov
leave
ror
mov
lods
add
inc
push
pop
int3
mov
lods
das
out
mov
add
add
outs
mov
xor
ret
cwde
sbb
cmps
ss
enter
in
inc
add
cmps
je
pop
or
mov
cmps
data16
(bad)
icebp
movs
lock
jg
pop
scas
shl
mov
inc
je
stos
jo
hlt
std
(bad)
xor
(bad)
pop
repz
gs
xor
iret
cmc
icebp
jo
pop
leave
shr
jns
jecxz
inc
clc
outs
add
test
js
jns
mov
mov
mov
sub
push
mov
or
xor
xchg
jmp
lods
or
pop
mov
ficom
xchg
ss
dec
push
imul
inc
aaa
sahf
dec
inc
fldenv
xchg
fstp
iret
jo
sbb
out
test
leave
call
dec
dec
mov
xchg
enter
repnz
test
pusha
adc
push
and
sbb
sbb
ror
ret
pop
scas
repnz
idiv
pop
es
test
mov
or
inc
fdivr
shl
inc
add
cmp
dec
jno
mov
add
mov
(bad)
cli
jns
movs
(bad)
popf
cmp
cmp
adc
dec
and
pop
popa
jns
xchg
dec
stos
push
movs
inc
and
fld
test
add
movs
adc
mov
jo
fdiv
adc
adc
cmp
sub
xchg
jecxz
mov
and
ja
mul
test
les
daa
inc
iret
call
xchg
push
inc
outs
sub
jns
mov
pop
jle
repz
loope
call
and
popf
mov
in
sub
ror
(bad)
jne
outs
adc
mov
add
les
sbb
or
xchg
rcl
sub
jmp
adc
mov
shl
or
movs
sub
xor
fidiv
xchg
iret
adc
push
jmp
sbb
mov
pop
inc
sbb
clc
add
ds
mov
jcxz
mov
xor
cmc
popf
lds
(bad)
adc
call
mov
aam
jecxz
lea
std
cmps
jmp
aaa
fld
push
int
inc
out
sub
adc
jb
iret
pop
sbb
stos
xor
lock
call
(bad)
mov
xchg
mov
fs
and
xor
add
sbb
jae
mov
xchg
cld
mov
das
or
pop
jp
imul
jecxz
stos
out
mov
(bad)
mov
scas
pop
dec
aam
loope
add
cmc
xor
ret
outs
repnz
push
mov
loope
adc
push
sbb
jle
xor
movs
mov
pop
jbe
imul
jp
push
lods
dec
test
into
push
xchg
push
call
cwde
adc
dec
mov
jne
fs
ror
xor
jnp
icebp
pop
and
outs
dec
data16
stos
inc
fiadd
sbb
int
inc
inc
test
pop
and
sub
int
add
sub
sub
xor
pop
or
jb
jnp
sbb
jnp
and
call
mov
push
aam
adc
mov
pop
(bad)
xchg
cmp
mov
std
stos
into
test
adc
(bad)
lds
mov
in
(bad)
mov
das
adc
push
jno
fistp
add
dec
in
lods
jbe
xor
out
in
add
and
imul
nop
mov
and
mov
lods
mov
mov
sub
jns
add
and
jae
sub
das
out
lss
mov
enter
sar
(bad)
ficomp
pop
popf
push
cld
mov
or
dec
in
jp
xchg
dec
scas
enter
in
cmp
std
fwait
sbb
mov
jno
(bad)
pop
int3
mov
in
push
(bad)
sbb
ss
mov
addr16
adc
shl
adc
dec
push
xchg
pop
fistp
mov
pop
jne
push
es
cs
cmp
pop
adc
xchg
inc
inc
in
jne
mov
sub
push
adc
mov
inc
daa
mov
or
mov
js
mov
shr
ds
js
push
imul
lahf
fidiv
push
xchg
stos
ret
scas
mov
lock
ror
push
int3
push
les
and
fwait
call
jo
adc
push
pusha
inc
les
jno
inc
cmp
js
movs
jae
adc
jecxz
cmp
mov
mov
push
pop
ins
xor
mov
xor
pop
jns
mov
cmps
into
dec
jo
(bad)
movs
mov
out
dec
iret
cmp
push
mov
sub
mov
(bad)
out
dec
sub
push
or
sbb
adc
in
and
cmps
pop
or
dec
repnz
or
out
inc
jp
xlat
lods
inc
inc
cmc
mov
aad
(bad)
sar
pop
jne
sti
cs
xchg
pushf
xchg
daa
popa
adc
dec
jmp
into
xchg
imul
adc
xor
sub
ja
sbb
in
aas
adc
leavew
adc
div
stc
pop
mov
test
mov
fsub
jbe
sub
std
movs
aad
mov
cmp
cmps
cmp
add
inc
lahf
aam
pop
jp
mov
(bad)
xlat
shr
jmp
jl
cmps
sahf
iret
sub
and
push
int
fnsave
fiadd
add
fmul
xchg
push
jne
xor
xor
pop
bound
and
mov
pop
retf
bound
jns
call
jbe
neg
ds
inc
or
adc
lahf
sbb
int3
mov
dec
into
call
ja
ins
into
push
test
and
cmp
mov
xchg
or
(bad)
(bad)
cmp
mov
xor
add
cmps
and
pop
jae
out
repnz
xor
dec
pop
dec
in
mov
fdiv
add
cdq
add
stos
inc
neg
xchg
push
pop
xchg
popa
stc
lods
jnp
jne
lods
mov
dec
stc
ret
bound
pop
retf
jmp
add
fs
sbb
stos
push
pop
scas
mov
sbb
inc
shl
or
outs
data16
xor
fist
mov
jbe
mov
dec
lahf
pop
hlt
imul
rcl
pop
aas
fcom
jle
adc
hlt
aad
(bad)
rol
sbb
shr
pop
test
rol
dec
cmp
jns
adc
mov
push
test
mov
and
and
int
dec
and
and
ja
xor
test
sahf
data16
adc
mov
xchg
shr
cmp
xor
jg
push
imul
dec
push
outs
loopne
out
sub
jne
mov
adc
add
xchg
adc
pop
inc
jns
adc
or
push
fmul
jmp
push
and
sbb
or
dec
dec
mov
mov
stos
ds
lahf
test
pop
add
in
and
scas
sub
mov
sub
add
jns
add
ds
stc
scas
fadd
clc
leave
mov
cld
sub
jmp
mov
inc
mov
mov
or
cmp
sub
ds
outs
jg
fdiv
(bad)
jnp
cmps
adc
inc
xor
stos
mov
cli
in
cld
scas
cs
cmp
push
fmul
retf
or
mov
mov
movs
test
mov
dec
pop
adc
lock
lea
pop
popa
addr16
xchg
xor
push
cs
and
sbb
inc
jae
add
imul
jne
in
jp
lds
mov
mov
adc
push
xchg
cmps
xor
push
mov
jbe
add
movs
movs
adc
cmp
ins
jae
sub
fwait
sbb
lahf
idiv
pop
aas
int3
sbb
enter
mov
xor
stos
cmp
xchg
sub
dec
hlt
inc
mov
sub
fidivr
inc
sub
shl
dec
pop
jne
mov
xchg
leave
mov
(bad)
pop
xor
int3
inc
int3
adc
lea
inc
dec
push
fsub
or
enter
sbb
popa
jp
(bad)
jecxz
adc
in
pop
dec
adc
dec
jae
ins
std
icebp
inc
enter
lock
fisub
sub
sub
(bad)
xchg
pop
xlat
add
test
sub
push
gs
scas
dec
mov
jne
test
mov
pop
cmc
or
daa
mul
or
rol
jb
cmp
jle
jl
mov
cmp
shl
scas
jns
cmc
xchg
push
adc
repz
sub
lock
dec
repnz
rol
aad
xchg
mov
mov
mov
inc
inc
dec
push
push
mov
sub
inc
add
or
daa
sar
cmp
ret
loope
pop
sub
and
sbb
loop
sbb
les
ret
sahf
pop
pop
inc
xchg
xor
movs
push
sbb
dec
push
cwde
sbb
xchg
xchg
daa
cmps
pop
mov
imul
xchg
out
mov
out
cmp
fwait
inc
cld
mov
pop
aad
lea
xor
int
(bad)
loop
sbb
xor
jae
dec
ror
xor
loopne
lahf
add
mov
and
arpl
sub
adc
adc
ja
add
movs
fild
mov
add
movs
gs
mov
push
in
mov
jg
cmp
test
cmp
leave
mov
cs
repz
ds
fsubr
jge
xchg
fdiv
jb
sbb
sbb
lods
mov
loop
out
popf
lods
enter
mov
cld
push
fcom
add
mov
mov
jge
xchg
push
dec
jbe
sbb
add
or
sti
outs
sbb
jl
or
inc
es
push
cmp
xchg
ficom
out
push
nop
add
mov
add
popa
aaa
cmp
bound
jg
jo
imul
cmp
rcr
jmp
aad
sti
sub
jbe
jge
xchg
test
(bad)
xlat
adc
jg
fnstsw
xchg
out
cmp
adc
jmp
sbb
inc
cmp
dec
xor
push
mov
movs
lods
jmp
out
cmps
sets
ret
jecxz
loop
lock
xchg
lods
out
cmp
bound
out
gs
call
fcomp
arpl
rcr
movs
dec
sbb
idiv
sar
xor
out
cwde
cmps
in
jne
mov
pop
and
test
(bad)
(bad)
xchg
loop
push
call
shl
dec
adc
lock
pop
or
out
ret
out
mov
fimul
sub
add
popf
test
pop
or
dec
mov
and
bound
mov
mov
xchg
cmp
and
add
mov
push
mov
(bad)
push
imul
repnz
clc
mov
out
pusha
xor
cmp
and
(bad)
mov
rcl
ins
dec
fisub
push
and
movs
mov
pop
jmp
jnp
ins
mov
add
mov
loope
mov
les
xchg
int3
inc
out
jge
dec
push
pop
pop
loopne
xchg
mov
mov
push
mov
je
aad
push
xor
jmp
xor
int
retf
syscall
popa
lods
mov
cld
outs
pop
and
ret
adc
and
arpl
jb
mov
adc
arpl
stc
out
xchg
jl
pop
je
mov
aad
shl
fist
stos
inc
jl
arpl
pusha
out
xchg
mov
jle
movd
xor
stc
add
inc
(bad)
iret
sbb
or
inc
add
sbb
fwait
les
mov
clc
mov
inc
pop
in
dec
jl
pop
in
sbb
or
sahf
mov
int
test
rcl
mov
pop
jb
mov
ret
loope
stc
sbb
(bad)
jne
in
xchg
or
fbld
div
push
cwde
add
ror
ss
jecxz
cmp
jl
stos
pop
jb
in
jno
js
cmp
sub
xor
mov
aaa
mov
dec
stos
pushf
adc
cwde
xchg
mov
mov
xor
adc
xchg
push
jno
push
dec
xchg
jmp
sub
push
cmc
cmp
mov
movs
addr16
mov
xor
cdq
je
gs
xchg
pop
(bad)
pop
jo
push
mov
cmps
mov
jp
je
jg
or
ret
adc
pop
int
loope
adc
icebp
cmc
mov
jno
dec
aaa
(bad)
adc
call
mov
cwde
push
fcmovbe
push
call
imul
fst
cmp
loope
fdivr
push
sbb
jecxz
inc
mov
and
jnp
fdivr
icebp
into
xlat
mov
in
xchg
push
lods
add
retf
in
xchg
stc
stc
add
xchg
aad
mov
loopne
fnsave
int3
ss
lea
addr16
hlt
push
int3
rcr
test
xchg
addr16
aas
daa
push
shl
aam
sbb
mov
mov
ret
cli
movs
out
mov
imul
pop
dec
out
push
inc
dec
in
aad
movs
es
popf
lods
retf
or
xchg
fistp
rol
(bad)
pushf
push
inc
scas
sub
jno
dec
not
aam
pop
loop
mov
cmps
call
into
adc
sub
push
mul
dec
add
inc
or
push
cld
(bad)
in
sbb
(bad)
cs
dec
out
jbe
sbb
out
lods
(bad)
dec
mov
(bad)
and
das
xor
cmp
sbb
jo
sub
add
test
lods
mov
shl
int
cli
fmul
add
rol
packsswb
daa
arpl
addr16
pop
popa
dec
jbe
pop
sbb
push
jecxz
and
repz
xor
jle
inc
in
push
and
sbb
not
retf
mov
out
fwait
(bad)
enter
xlat
mov
jge
mov
ret
fs
dec
imul
(bad)
loope
add
xchg
jl
or
jae
sbb
adc
xor
out
fld
inc
push
ret
pop
xor
and
sub
cli
gs
mov
cld
pusha
test
jb
mov
sti
add
movs
test
icebp
dec
shr
or
rcr
call
aad
pop
rcr
or
inc
dec
push
mov
fnstenv
mov
pop
dec
cdq
dec
adc
hlt
std
cmp
popf
cmp
cmp
leave
cli
inc
addr16
jge
dec
mov
jg
aam
xor
mov
inc
and
jns
and
retf
sbb
dec
mov
aaa
xor
retf
xor
iret
sub
cmp
inc
and
out
jne
(bad)
sub
sbb
push
cdq
fstp
imul
sub
push
arpl
dec
mov
cmp
push
xlat
fisttp
rcr
push
jp
add
push
inc
loop
pop
or
(bad)
mov
pop
mov
fcomp
icebp
mov
sbb
cmp
sub
add
inc
movs
fwait
retf
ret
mov
je
test
pusha
cmp
sbb
jmp
jp
mov
xchg
add
and
or
dec
jg
add
aas
mov
lahf
and
pop
cli
mov
mov
loope
xor
(bad)
mov
cmp
mov
cmp
add
icebp
add
xchg
leave
gs
cmps
js
xchg
mov
iret
push
fdiv
stc
js
loopne
call
dec
sbb
sub
inc
hlt
addr16
jb
lods
dec
jl
nop
push
jae
cmps
mov
xchg
es
mov
dec
push
xchg
and
xchg
adc
and
inc
js
into
and
jg
add
jb
pusha
shr
movs
cmp
xor
(bad)
cmp
mov
(bad)
stos
xor
or
inc
fild
(bad)
not
imul
imul
or
add
mov
cwde
scas
push
xor
clc
lock
ret
inc
jmp
neg
inc
ror
cdq
out
sub
ja
push
out
mov
nop
jp
push
into
cmp
(bad)
icebp
lods
stc
inc
cmp
fs
jnp
pop
fdiv
lods
ins
add
sbb
lods
loope
lods
and
stc
imul
or
test
es
jmp
or
cmps
mov
lar
adc
mov
cmp
scas
xchg
mov
dec
and
or
repz
pop
sub
or
sub
fdivp
movs
fs
(bad)
cmp
fwait
inc
inc
ds
mov
mov
mov
push
jne
adc
and
dec
inc
inc
push
jge
dec
mov
jno
ror
push
mov
mov
jnp
push
sub
test
neg
sub
sbb
pop
mov
test
hlt
(bad)
cld
fs
adc
dec
rcl
test
out
adc
popa
xchg
repnz
cmp
and
sbb
mov
call
adc
test
mov
fiadd
push
sub
js
dec
cld
xchg
and
cmps
cld
cmps
mov
iret
xchg
and
inc
pop
std
(bad)
push
(bad)
gs
test
pop
sub
sar
leave
into
jns
ins
je
mov
retf
lods
and
dec
outs
loopne
mov
rcl
inc
jp
mov
mov
sti
pop
in
adc
pop
aaa
inc
ins
inc
xor
inc
test
xchg
adc
dec
inc
xor
lods
repnz
xchg
daa
jae
jo
cld
push
sub
fild
sub
sub
mov
imul
inc
cdq
stos
rcl
inc
or
mov
(bad)
pop
out
mov
mov
pop
fistp
xchg
int
fstp
mov
(bad)
fiadd
dec
inc
jmp
mov
loop
shr
adc
mov
inc
mov
in
add
inc
or
jnp
pop
jg
cmp
pop
push
sbb
and
pop
mov
cld
adc
inc
xlat
fmul
jmp
jecxz
popa
cdq
das
push
test
sti
pushf
mov
xchg
int3
iret
lds
xor
pushf
jle
js
repnz
aaa
push
mov
fucomip
call
xchg
sub
jns
push
fcmovnbe
in
scas
jbe
loope
aam
pop
(bad)
cmps
rol
loop
int3
push
xor
(bad)
das
pushf
xchg
jecxz
test
jne
aad
xlat
test
sbb
cmps
adc
xor
out
jnp
test
cwde
pop
rcl
adc
lahf
jne
lds
jne
shl
jno
mov
popa
sbb
and
movs
rol
ins
sahf
mov
movs
xor
cmps
test
add
sub
sub
daa
loop
pop
bound
int3
xchg
pop
sub
or
mov
lock
xchg
mov
es
sbb
lods
pusha
inc
nop
ret
pop
es
sub
aas
enter
mov
imul
sahf
aam
xor
shl
ror
test
out
test
jae
ins
sbb
xchg
dec
cmp
mov
leave
aam
and
mov
aad
in
mov
stc
clc
fdiv
sbb
fld
mov
pop
xor
inc
leave
cmp
xchg
xchg
ja
(bad)
fbstp
add
js
leave
repz
imul
jbe
jl
jp
push
idiv
mov
inc
out
pop
pop
out
sbb
rcr
xlat
adc
(bad)
aaa
daa
mov
jle
call
xchg
ins
leave
out
addr16
(bad)
mov
scas
out
mov
jns
mov
sar
sahf
nop
movs
mov
jle
pop
(bad)
push
push
or
fwait
cmps
pop
in
les
jae
pop
sbb
pusha
leave
or
ret
mov
call
mov
nop
sub
or
inc
adc
lea
jne
or
pop
mov
mov
jmp
jmp
sub
sub
inc
std
repz
jns
jge
mov
cmp
ins
mov
ffree
xchg
ins
add
retf
jnp
hlt
cmovns
mov
movs
sub
add
mov
mov
fwait
pop
push
(bad)
mov
mov
inc
mov
jmp
outs
push
push
ror
inc
or
sub
out
stos
mov
hlt
cld
cmp
ret
sbb
cwde
(bad)
in
test
sbb
int3
dec
popf
clc
repnz
leave
cmp
adc
jno
into
lds
enter
cmp
ds
retf
(bad)
pop
(bad)
jle
or
shr
xor
push
mul
outs
adc
xchg
push
dec
jbe
adc
pushw
mov
xchg
std
lss
pop
xchg
cld
cmp
pop
xor
test
mov
das
mov
(bad)
stos
inc
ins
inc
mov
fldcw
push
and
jecxz
pop
dec
pop
fcom
mov
mov
es
mov
push
sbb
push
jmp
cwde
cmp
aas
loopne
nop
(bad)
jle
adc
cmp
inc
mov
fisub
shr
jb
cld
out
inc
add
sbb
popa
dec
movs
or
addr16
aaa
fs
gs
pop
pop
adc
movs
mov
and
daa
inc
imul
jo
push
xor
mov
or
fs
mov
iret
stos
rcr
in
push
retf
stos
sbb
(bad)
arpl
xor
ins
dec
mov
(bad)
arpl
inc
test
fnstenv
push
ds
xlat
data16
and
lods
pop
int
cmc
aad
dec
cli
cmps
dec
jnp
std
sti
push
mov
sahf
mov
fs
xchg
orps
mov
clc
add
stos
jmp
jne
(bad)
adc
out
adc
pusha
mov
mov
add
jecxz
xchg
(bad)
mov
clc
(bad)
fs
sbb
pop
jbe
inc
sub
xor
in
add
cmp
cmps
mov
mov
xchg
xchg
and
add
cli
shl
sbb
jbe
addr16
cmp
dec
sub
scas
mov
popa
pop
cmps
loop
sbb
popf
lods
or
gs
sub
ror
xchg
or
jne
xchg
dec
mov
fidiv
add
cdq
add
scas
pop
sub
mov
retf
imul
mov
inc
add
pushf
cmc
mov
pop
cmc
inc
jb
jmp
mov
cli
pushf
retf
int3
aad
sub
loopne
imul
xchg
test
mov
lea
(bad)
jecxz
pop
jg
loop
daa
out
popa
xchg
rcr
fdiv
test
ds
xor
adc
mov
arpl
pop
push
sub
mov
adc
rcr
fisub
adc
push
aad
add
fnsave
inc
or
xchg
ror
mov
push
aaa
test
stc
int3
bound
scas
push
in
mov
adc
popa
mov
cmp
cmp
xchg
inc
jbe
mov
jmp
cmp
popf
sbb
retf
(bad)
repnz
dec
push
nop
ja
pop
fbstp
imul
(bad)
in
mov
add
push
adc
lock
daa
fsub
xchg
jle
lods
jnp
fdiv
scas
std
mov
push
cmp
mov
adc
icebp
movs
outs
call
push
sahf
cwde
cwde
test
out
jle
fadd
or
push
mov
ins
inc
cdq
inc
pusha
sbb
jmp
aaa
jae
jl
xchg
xchg
aad
cwde
jae
pop
cmp
inc
lods
les
inc
ret
push
cmp
jb
jle
stc
add
in
dec
pop
push
lods
pop
pop
xchg
(bad)
mov
cmp
into
aas
mov
aad
adc
or
fucomi
mov
sub
pop
je
push
push
xchg
mov
inc
(bad)
out
xchg
xchg
leave
sub
jne
xchg
or
add
lods
pop
repnz
fdiv
push
dec
daa
repz
in
cli
dec
inc
ds
icebp
scas
retf
pop
aam
mov
mov
jae
icebp
pusha
call
loopne
mov
fsub
jmp
mov
out
add
cmps
sbb
mov
(bad)
int3
mov
(bad)
in
rcr
das
cwde
repz
sub
(bad)
push
out
out
dec
pop
or
jb
inc
jo
pop
cwde
popa
into
ret
mov
fidivr
movs
sub
jmp
lods
(bad)
aas
jo
test
into
fxtract
and
aas
dec
add
gs
mov
int3
mov
popf
sbb
fisubr
mov
popf
push
rcr
test
iret
dec
pop
jmp
mov
or
addr16
mov
push
call
jecxz
xchg
data16
xchg
and
(bad)
movs
inc
add
call
sub
dec
in
cli
fucomp
aas
jnp
hlt
gs
push
pop
adc
in
mov
xor
and
or
aas
inc
retf
stc
mov
jg
ret
inc
add
aas
jno
fmul
and
sbb
das
xor
dec
aaa
adc
or
bound
call
(bad)
or
pop
cmp
jne
ins
std
cmps
das
std
jne
inc
shr
call
xor
sar
mov
push
test
mov
mov
jnp
mov
xchg
jno
mov
shl
lea
out
add
dec
mov
shl
push
push
arpl
fdivr
loope
aas
fimul
cs
sub
out
jle
outs
test
ins
popa
in
repnz
in
add
(bad)
xor
and
dec
and
sub
(bad)
mov
jle
test
cmp
mov
pop
ficom
retf
pop
jge
leave
out
enter
sub
into
push
das
stos
retf
mov
scas
hlt
mov
or
and
out
test
mov
mov
lods
adc
mov
lods
sub
das
jp
cmp
sub
test
retf
lss
mov
int3
(bad)
into
mov
into
les
ja
aas
mov
or
fisub
adc
sub
cwde
je
and
fdivr
mov
out
aad
ret
dec
test
in
test
adc
test
jl
ror
pop
inc
stc
addr16
inc
addr16
push
call
cmp
loopne
loop
mov
xchg
jmp
xchg
hlt
lahf
xor
adc
js
stc
hlt
inc
push
or
push
adc
popf
sub
in
dec
dec
mov
xchg
outs
xor
add
and
stos
dec
inc
lds
cmp
les
adc
stos
test
pop
jo
adc
mov
xchg
mov
inc
shl
mov
ss
fdivr
xchg
pop
fmul
push
inc
push
sbb
je
and
mov
icebp
jg
movs
dec
idiv
icebp
push
xchg
mov
in
imul
sub
add
xchg
xor
jne
xchg
push
out
sbb
outs
ja
push
fwait
sbb
xchg
shl
clc
cmc
fisttp
cdq
fs
stos
or
jl
or
pop
lds
out
movs
inc
adc
pop
enter
adc
and
divps
retf
nop
mov
inc
mov
stc
push
jb
int
imul
mov
clc
pop
xor
cmp
fiadd
ins
enter
xlat
pop
jno
scas
push
movs
cmp
loopne
adc
movs
mov
xor
jl
or
pop
fisubr
hlt
fs
ins
in
repnz
adc
and
shl
xor
test
mov
or
out
out
leave
jae
mov
idiv
sub
mov
hlt
sbb
cmc
cmp
ins
jg
push
call
jns
aam
cld
sub
sub
loop
and
data16
lods
mov
fwait
or
(bad)
aaa
(bad)
jmp
push
imul
mov
adc
xchg
das
push
nop
sbb
sub
or
pusha
add
fwait
pop
sub
push
pop
adc
aaa
or
and
jae
ds
jle
adc
mov
cmps
adc
fiadd
call
scas
xchg
lods
push
das
les
ret
cwde
jecxz
outs
jo
xchg
mov
xchg
mov
xor
lods
xchg
in
enter
pop
shr
mov
mov
into
push
outs
jecxz
cmp
aas
clc
inc
mov
sar
cmps
push
retf
retf
rcl
dec
xor
cmps
mov
cwde
or
xchg
adc
pop
mov
xchg
retf
ficomp
sti
mov
rcr
inc
stc
mov
jl
int3
mov
(bad)
ficom
repz
sbb
imul
arpl
xchg
out
dec
xchg
push
jbe
push
outs
sub
in
test
or
rol
hlt
not
rcl
jl
xor
inc
jnp
mov
pusha
or
mov
jo
inc
into
inc
inc
cmps
xchg
and
stc
aam
(bad)
jmp
ror
fisub
sbb
in
shl
lock
cmp
pushf
shl
and
je
aas
ja
xchg
nop
sbb
lods
inc
push
jmp
push
adc
dec
les
rcl
(bad)
(bad)
mov
or
dec
sbb
pop
xor
jne
inc
cmp
ret
inc
outs
jle
inc
fst
cld
xchg
jne
rcr
icebp
jg
arpl
inc
ret
test
repnz
in
repnz
jmp
pop
xor
fwait
shl
adc
in
addr16
ror
inc
addr16
(bad)
imul
mov
in
xor
xchg
out
lods
cmc
push
jg
mov
push
pusha
push
cmp
mov
cmp
jno
nop
adc
jl
rcl
adc
mov
sbb
inc
iret
mov
rcr
pop
mov
loope
aad
inc
out
(bad)
int
adc
xchg
xchg
les
add
ror
push
pop
ds
xchg
mov
push
push
fisttp
mov
cmps
outs
mov
cmc
outs
sbb
add
aaa
mov
mov
mov
loopne
daa
push
sub
fild
add
dec
pop
push
movs
hlt
cmps
inc
jbe
out
jecxz
not
sub
in
dec
ss
jb
and
add
stos
xor
cmp
popf
sti
cmp
mov
out
test
popa
dec
jl
or
bound
addr16
fist
inc
jle
push
sbb
and
mov
ret
stos
test
pop
movs
jno
xor
leave
das
pop
inc
adc
mov
scas
pop
out
adc
leave
movs
dec
pop
lock
stos
jle
cmp
adc
les
xchg
sbb
ret
mov
aad
push
outs
dec
cmc
out
jp
addr16
xchg
(bad)
jge
test
mov
mov
xor
xchg
stos
loope
cld
mov
repz
imul
and
out
jbe
lahf
or
pop
in
xchg
cli
inc
sub
es
push
fld
and
xchg
mov
sbb
int3
push
mov
popf
sbb
dec
popa
and
aad
push
cmp
(bad)
sub
cmps
xchg
jmp
in
push
(bad)
or
mov
mov
xchg
inc
stos
outs
inc
mov
not
arpl
cmp
(bad)
add
stc
push
adc
pusha
add
lahf
cli
popa
cmc
dec
fstp
sub
retf
mov
in
int
or
mov
jge
std
movs
(bad)
mov
add
pusha
sub
pop
inc
push
das
inc
fist
rcl
xor
mov
pop
fistp
(bad)
mov
sub
cmp
jne
imul
mov
(bad)
fst
add
(bad)
or
in
or
push
cmp
jle
sbb
out
in
jmp
cmp
popa
jp
xchg
inc
mov
jbe
xchg
mov
pusha
push
sub
dec
jns
xchg
mov
lods
adc
or
jmp
xor
mov
into
ret
hlt
sub
in
add
test
sub
cwde
imul
mov
sbb
jge
mov
xchg
adc
test
dec
retf
fdiv
xor
or
adc
mov
mov
mov
mov
pop
push
mov
jb
inc
mov
jmp
cmp
cmp
(bad)
or
popf
gs
loop
cmp
or
int
and
mov
and
out
icebp
scas
(bad)
mov
ret
retf
leave
in
fisttp
or
in
mov
inc
lods
pushf
mov
in
out
in
outs
or
in
xor
clc
add
mov
jp
and
or
jmp
mov
xlat
in
fisubr
in
mov
and
pop
inc
mov
es
or
lods
ins
and
fdiv
sahf
retf
test
fidiv
pop
and
jb
leave
test
repnz
fistp
cmc
(bad)
outs
out
inc
xor
or
sub
sbb
dec
aaa
pop
mov
sbb
leave
dec
pop
xchg
popa
sbb
push
test
jecxz
mov
jmp
(bad)
dec
lock
add
dec
and
(bad)
xor
xchg
cmp
jnp
push
cli
xchg
outs
rcr
sub
std
jl
mov
push
test
sub
aas
sub
inc
mov
aaa
mov
xchg
mov
hlt
inc
pop
stos
mov
stos
mov
fistp
add
popa
out
cdq
pop
push
mov
mov
xor
mov
ret
dec
test
add
push
in
out
push
repnz
cmp
and
xchg
cmps
inc
test
lock
pop
std
pusha
popf
push
jae
retf
mov
fwait
and
movs
jl
adc
ja
popa
pusha
and
or
mov
clc
cmp
retf
pop
mov
je
xor
outs
adc
repz
les
pop
test
push
les
dec
rcr
out
cmps
mov
jo
fidivr
shl
inc
inc
or
mov
frstor
cdq
das
int3
out
pop
adc
fidiv
imul
jb
fwait
adc
es
sub
adc
xlat
mov
push
ficomp
test
sub
push
les
mov
jae
push
test
sbb
or
cmp
dec
retf
xchg
(bad)
mul
inc
pop
jb
retf
les
cmp
mov
sbb
sub
cmp
add
xchg
jl
and
mov
or
xchg
pop
jl
div
std
xchg
inc
cmp
mov
repnz
inc
fldcw
mov
mov
pop
mov
lock
mov
(bad)
jnp
sub
fidiv
mov
mov
fstp
sti
xor
jbe
push
jp
iret
add
dec
fstp
call
cmp
hlt
pop
mov
sub
mov
or
fmul
dec
cmp
sbb
pop
mov
inc
mov
adc
popa
mov
hlt
hlt
call
pop
in
pop
pop
mov
fsub
out
pop
shl
test
xor
stos
data16
lock
in
cmp
scas
push
les
adc
sub
cmc
xor
loopne
push
int
push
popa
jbe
mov
mov
arpl
int
cld
shl
rcl
out
iret
sbb
cmp
mov
jmp
jbe
repnz
add
mov
cmp
and
mov
into
push
jp
fwait
pusha
cmps
movs
pop
mov
das
jl
adc
retf
(bad)
stc
sti
(bad)
push
cli
mov
aam
ds
shr
mov
and
and
jl
cld
inc
fldcw
and
lods
adc
or
sub
pop
push
push
adc
xchg
mov
xor
ret
cmp
adc
jge
inc
lods
xchg
test
jp
mov
add
ror
mov
mov
mov
fnsave
inc
mov
mov
push
push
imul
inc
or
gs
fadd
sbb
ss
mov
and
es
jg
pop
cmp
fcomi
add
dec
repz
je
pop
mov
inc
pop
inc
add
or
in
sti
jno
clc
mov
sub
push
ja
adc
xchg
pop
stos
jmp
(bad)
retf
lods
adc
jnp
xor
sbb
mov
std
mov
xchg
cdq
fs
push
aam
call
adc
inc
cmc
outs
sub
dec
sbb
mov
fwait
sub
mov
xchg
jmp
in
jbe
jmp
mov
ror
je
ins
mov
lahf
and
mov
sbb
and
stos
pop
retf
xlat
jmp
les
iret
mov
mov
ins
sub
call
jbe
call
cmps
pop
pop
aad
(bad)
dec
popa
outs
xchg
sar
mov
fmul
inc
inc
sbb
loopne
cmps
ds
repnz
sub
mov
inc
ret
push
sti
pop
out
xchg
push
div
iret
int
popf
addr16
dec
test
ret
arpl
inc
mov
mov
cmc
or
test
and
das
jecxz
mov
(bad)
mov
mov
push
das
ins
repz
loop
xlat
bound
or
fcomp
repz
cmps
mov
mov
dec
cmp
popa
fcomp
iret
mov
xchg
adc
xor
cld
popf
ret
mov
cwde
dec
or
adc
fcomi
jae
cs
push
sti
push
jge
push
xor
int
push
jg
sub
les
xor
outs
sbb
stos
rcl
add
dec
mov
cmps
push
mov
ss
movs
shl
(bad)
xlat
inc
imul
lods
pusha
dec
sbb
or
inc
inc
retf
or
sbb
vcvttss2si
jne
ret
mov
mov
xchg
mov
int
sub
add
and
les
aam
mov
cmp
enter
aas
pop
or
mov
mov
mov
jmp
or
lds
push
fstp
push
imul
pop
pop
xor
add
dec
sbb
jmp
inc
jmp
push
enter
ins
shl
rep
pusha
cmps
movs
in
jae
xor
faddp
pop
shl
ret
inc
in
xchg
pop
dec
jae
dec
in
inc
nop
movs
push
push
call
fwait
or
jp
dec
fs
imul
xchg
push
push
aam
cmps
std
clc
loope
fnstcw
ja
jno
cli
into
and
loope
rcl
outs
and
shl
inc
xor
pop
or
div
adc
mov
pop
imul
mov
mov
xchg
sbb
sahf
clc
jbe
adc
push
dec
(bad)
repnz
das
fcom
pop
pop
xor
repz
mov
fs
dec
or
sub
or
jecxz
jecxz
push
rol
es
fild
adc
mov
movs
into
xor
dec
out
loope
sub
jae
jl
es
xchg
imul
cmp
cmps
pop
xor
sub
adc
sbb
mov
add
nop
adc
mov
pop
in
int
mov
test
not
and
mov
sbb
movs
arpl
lock
lahf
(bad)
fdiv
call
and
pop
mov
xor
fidiv
mov
xchg
cmp
sub
push
leave
mov
ret
mov
add
mov
ds
xor
xchg
inc
mov
dec
and
push
fsubr
stos
xchg
stos
xor
movs
inc
arpl
jno
xchg
icebp
ss
or
xchg
sub
pop
pop
repz
inc
push
inc
cli
pop
xor
fidivr
not
or
jo
mov
mov
ret
cmp
pop
push
jl
push
dec
int3
cmps
aad
adc
(bad)
push
inc
sbb
lahf
jne
loopne
pop
out
aam
xchg
aad
push
pushf
rcr
cdq
xchg
mov
lahf
daa
add
ins
test
data16
stc
std
add
pop
lds
cmp
retf
cwde
mov
pop
sbb
push
test
jnp
or
gs
out
dec
sub
adc
sbb
out
xchg
pop
imul
xchg
inc
stos
mov
mov
fisub
mov
nop
or
in
repz
sbb
repnz
pop
dec
out
movs
push
sbb
xchg
adc
hlt
repz
test
adc
mov
push
outs
push
or
inc
add
shr
in
lock
addr16
lahf
(bad)
xor
loopne
int3
inc
mov
cld
dec
sbb
xchg
pop
sub
push
jle
and
daa
push
or
shl
sub
adc
xchg
add
inc
dec
scas
ja
cmp
jle
cmc
push
test
add
(bad)
loope
adc
sbb
xchg
unpckhps
gs
js
push
or
xchg
jge
push
inc
popa
movs
cmp
inc
cmps
pop
dec
jmp
aam
inc
nop
test
es
(bad)
lds
jp
sbb
xor
push
int
xchg
dec
jmp
sub
pop
loopne
test
push
dec
push
std
ds
adc
das
clc
leave
inc
fidiv
call
jbe
adc
dec
inc
adc
jmp
push
mov
sbb
lods
mov
mov
ja
pushf
push
ret
stos
pop
inc
(bad)
hlt
test
enter
les
jmp
pop
inc
mov
pop
or
mov
outs
dec
jno
repz
xchg
pop
xor
inc
xchg
xchg
pop
hlt
inc
movs
mov
mov
test
pop
sbb
fstp
es
loope
add
out
lds
outs
sub
and
mov
aam
lods
mov
xor
cmps
into
xchg
pop
mov
cmps
(bad)
rol
imul
and
jge
sub
pop
outs
jmp
adc
sahf
out
inc
inc
xchg
iret
sub
mov
loope
cmps
mov
in
xchg
cld
and
mov
dec
cs
sub
sbb
xor
cmps
inc
fldcw
jmp
jae
mov
addr16
mov
fnstsw
and
pop
dec
xor
or
repz
mov
cmps
int
xor
in
stos
stos
mov
adc
pop
inc
inc
and
ja
out
std
es
loope
in
dec
mov
nop
arpl
xchg
mov
mov
mov
enter
out
jb
sub
dec
test
cmp
(bad)
fdiv
mov
(bad)
jmp
adc
lahf
inc
add
loope
(bad)
in
inc
inc
enter
int
sahf
inc
daa
inc
aad
adc
daa
pop
popf
inc
int3
jg
or
fmul
sub
test
arpl
cmp
fmul
aas
loope
jbe
outs
lea
test
in
dec
push
leave
popa
mov
push
mov
mov
leave
inc
rol
pop
xchg
or
std
icebp
pop
mov
mov
and
inc
ret
test
adc
push
movs
sbb
je
ret
int3
enter
enter
icebp
sti
adc
call
mov
in
adc
out
or
iret
(bad)
paddb
or
jno
daa
mov
repz
imul
scas
icebp
lock
pop
repz
fmul
adc
gs
mov
cmps
mov
and
add
mov
mov
jns
rol
in
cmp
cmps
xor
dec
pop
inc
clc
hlt
jne
dec
or
mov
jae
rcl
out
xlat
add
js
adc
icebp
mov
mov
or
dec
sub
and
pop
fld
pop
cmc
repnz
adc
dec
pop
pop
scas
(bad)
xlat
inc
(bad)
rcr
xchg
addr16
or
xchg
ins
cli
jnp
div
addr16
ret
or
pop
test
pop
loope
rol
and
sub
pop
sub
cs
jmp
pop
xor
sbb
movs
pop
push
adc
push
sti
cmp
jp
inc
inc
jae
fsub
and
sbb
push
add
addr16
jb
push
mov
test
rcl
or
xchg
sub
and
cmp
jge
mov
xor
inc
fisub
arpl
repnz
mov
cli
stc
arpl
sahf
sbb
or
xchg
cmc
int
or
dec
cmp
sbb
mov
inc
mov
xor
xor
movs
dec
jge
mov
mov
sbb
popa
lods
adc
dec
jl
pop
jecxz
mov
into
into
jmp
inc
fistp
fidiv
rcl
mov
add
hlt
lock
out
xlat
repz
push
das
in
mov
inc
xchg
int3
loope
jg
mov
fiadd
clc
add
popf
or
daa
or
aas
jl
mov
xchg
inc
mov
push
sbb
sar
std
es
cs
xor
add
pop
or
push
jnp
push
shl
das
js
int3
and
jo
mov
mov
(bad)
inc
nop
sub
or
xchg
test
add
cmps
jne
or
stc
push
(bad)
je
outs
mov
pop
iret
cmp
pop
ins
pushf
add
cli
cmp
pop
lods
idiv
enter
(bad)
adc
mov
stc
cmp
loop
test
push
sub
fwait
gs
push
push
inc
loop
jge
xchg
mov
lahf
test
mov
(bad)
jns
and
and
mov
in
clc
out
fsub
movs
inc
and
pop
jae
pop
fwait
push
adc
jo
aas
pop
sub
and
jo
push
adc
pop
pop
rol
test
into
mov
or
fld
stos
adc
inc
add
jp
pop
repz
and
fbld
pop
(bad)
xchg
je
cmp
push
mov
lock
(bad)
sahf
clc
mov
int
out
in
stos
or
sbb
push
aam
shl
call
in
push
gs
or
xor
hlt
dec
retf
loopne
sbb
sub
xchg
jmp
shr
dec
das
jg
pusha
xlat
imul
icebp
adc
jge
jno
sub
add
fsubr
inc
xor
in
inc
adc
sub
retf
or
sar
xchg
xor
js
(bad)
push
jne
cwde
pop
call
fbld
pop
ror
(bad)
add
fild
cmp
outs
and
fst
xchg
sub
stos
jns
lock
iret
push
pop
(bad)
jo
cmp
pop
fld
adc
mov
xchg
jnp
outs
inc
mov
fist
(bad)
pusha
push
or
mov
inc
xchg
jp
fdivr
sub
sbb
lods
xor
es
and
cmp
jae
sbb
mov
cmp
(bad)
adc
sub
pop
and
addr16
fcmovu
sub
(bad)
xchg
inc
or
adc
xor
mov
cwde
out
cs
ror
mov
sub
(bad)
mov
popf
mov
add
and
lahf
mov
push
jecxz
ss
or
shl
add
or
add
cmp
es
mov
adc
pop
scas
stos
and
xor
and
pop
iret
mov
inc
jno
scas
loop
and
outs
imul
aam
jge
ror
out
cmp
pop
aas
lds
xor
sub
inc
scas
data16
fwait
or
nop
lock
sub
xchg
push
or
jge
sub
adc
jmp
int
fsubr
out
push
mov
fist
mov
mov
cmp
inc
xor
dec
aam
shl
sbb
aaa
adc
fstp
pop
mov
dec
xchg
cwde
xchg
dec
jbe
add
xlat
scas
push
xchg
add
or
ss
pop
daa
movs
pshufw
cmp
and
mov
ja
xchg
in
push
sbb
push
mov
jb
cmps
and
(bad)
dec
(bad)
mov
mov
pop
clc
jo
clc
adc
fiadd
loope
push
push
adc
xlat
or
or
pop
xchg
inc
lods
add
inc
pop
jns
adc
dec
out
imul
enter
fsub
mov
movs
icebp
add
mov
bound
js
push
out
jne
mov
daa
ds
jne
fist
mov
out
or
in
pop
out
mov
jmp
pop
(bad)
clc
push
pushf
out
icebp
cmp
add
lahf
mov
jo
xor
push
cwde
ror
xor
or
(bad)
ds
inc
xor
jge
and
xor
pop
adc
inc
das
es
dec
mov
loope
mov
out
movs
inc
in
aas
scas
leave
ficomp
xor
jmp
lock
mov
pop
fidivr
sbb
push
clc
(bad)
stos
mov
sub
xchg
adc
xchg
lods
cli
jmp
mov
into
out
fwait
mov
(bad)
jmp
pop
xor
push
lds
pop
ret
jne
cmp
aaa
ja
stc
in
dec
aad
adc
rcl
fsubrp
adc
(bad)
fimul
loope
or
shl
adc
xchg
push
iret
sbb
adc
xor
sbb
cwde
mov
xchg
xchg
mov
aam
hlt
adc
and
lds
push
idiv
lods
push
call
mov
jbe
(bad)
scas
ins
aas
int
pop
pop
les
add
mov
push
repz
jle
retf
retf
hlt
lds
mov
std
adc
ficomp
inc
or
cmp
imul
push
mov
push
and
xchg
sbb
sbb
jl
push
xchg
push
push
jne
and
jo
out
dec
xlat
das
test
sbb
enter
dec
stos
test
out
push
clc
mov
jbe
lahf
mov
into
pop
mov
add
add
fsubr
mov
sbb
sti
sbb
or
mov
jne
(bad)
adc
sbb
popf
sar
jo
xor
mov
addr16
jg
sar
mov
aas
or
mov
ret
imul
(bad)
daa
mov
xchg
cmovae
xchg
xchg
lock
sub
pop
cmp
xor
scas
inc
retf
ins
pop
jnp
jmp
iret
cmps
shl
mov
lock
pushf
aad
icebp
rcl
sbb
mov
sbb
adc
aas
inc
cmp
jmp
cmp
lods
mov
cmp
or
mov
fmul
jle
ss
mov
(bad)
inc
pushf
pop
daa
push
mov
dec
mov
outs
push
neg
xor
sets
iret
dec
neg
sbb
xchg
xor
mov
pop
test
test
push
dec
sbb
call
cmp
js
push
xor
push
jnp
adc
push
push
adc
jge
ja
(bad)
cmps
pusha
push
mov
sti
fistp
xlat
add
retf
popa
das
mov
inc
scas
and
jl
outs
mov
or
sbb
int
mov
retf
mov
add
add
or
out
dec
mov
pusha
sub
dec
jg
stc
pop
shl
aas
pop
push
pop
push
stos
jno
out
mov
sbb
push
pop
inc
pop
pop
mov
in
and
xlat
mov
sbb
or
mov
fcomp
push
mov
ins
jmp
pop
test
mov
xor
movs
and
push
mov
std
sar
aam
mov
mov
aaa
or
stos
(bad)
jne
scas
and
sub
mov
fild
stos
mov
or
pop
mov
(bad)
enter
in
ret
add
cmc
and
arpl
pop
add
sahf
ror
lds
mov
dec
push
jnp
sub
shl
jmp
ret
loop
mov
outs
jge
aam
sbb
ror
leave
push
out
jo
popa
pop
cdq
cmp
adc
imul
retf
cmp
mov
rcl
add
scas
fcomp
push
lods
jne
xor
iret
dec
(bad)
xor
xor
repz
mov
inc
popf
rcl
mov
jae
mov
(bad)
xchg
rol
cmp
inc
ds
movs
fisttp
mov
sub
jp
pop
mov
test
mov
scas
inc
xlat
xor
js
stc
cwde
jle
xchg
mov
ds
inc
sub
fst
repnz
mov
in
mov
mov
inc
les
sub
(bad)
jle
lds
addr16
sbb
adc
jl
jmp
in
mov
mov
or
arpl
add
(bad)
dec
mov
stos
outs
rep
mov
or
test
fsub
xor
jae
inc
data16
ds
hlt
inc
jmp
mov
jecxz
rol
mov
cdq
jp
sub
mov
pop
cmps
add
ds
es
push
mov
adc
sti
adc
sahf
rcr
mov
ss
mov
xchg
push
leave
(bad)
gs
int
jae
outs
cs
outs
ror
xor
adc
sub
fimul
dec
sub
jmp
mov
and
int3
jg
xlat
xchg
scas
xchg
pop
outs
(bad)
(bad)
popf
dec
sub
call
pop
push
and
xchg
or
mov
mov
das
pushf
test
(bad)
xor
retf
push
into
inc
mov
fist
push
mov
mov
sar
inc
sub
sub
dec
sbb
inc
pop
test
outs
add
lds
stc
iret
cdq
jmp
ret
lods
xchg
jecxz
push
sbb
dec
retf
push
ins
push
cli
push
cmp
scas
xor
sbb
ja
or
adc
and
adc
lea
hlt
aam
xchg
nop
adc
(bad)
sbb
repnz
in
sar
or
or
js
sbb
xor
test
lods
or
jle
sub
xor
sahf
test
sub
ins
aas
fadd
(bad)
mov
fcmovbe
(bad)
loopne
test
out
inc
mov
aas
cmp
jb
adc
add
mov
mov
loop
and
fwait
les
scas
add
mov
aas
sub
cmp
outs
cmp
jb
retf
xchg
jmp
push
fisttp
pop
cmp
xchg
rol
aaa
sub
mov
hlt
pop
sub
mov
scas
push
sub
xlat
ror
jne
outs
add
mov
inc
push
lock
ror
sub
and
inc
rcl
add
aam
idiv
outs
loope
call
mov
mov
xchg
adc
or
(bad)
sub
out
xlat
aaa
loop
cmps
lock
pop
repz
fst
sub
out
aaa
pop
sahf
sbb
icebp
jbe
inc
dec
xor
cmps
addr16
push
sbb
pop
pop
jmp
mov
mov
dec
mov
sbb
int3
dec
sbb
movs
xchg
jb
(bad)
jp
(bad)
sbb
sub
xor
clc
and
cmp
into
call
dec
(bad)
enter
xor
ficomp
push
hlt
jmp
cwde
sub
cwde
push
or
sbb
les
dec
mov
or
das
sbb
test
dec
lock
dec
jb
xchg
(bad)
icebp
test
mov
sub
(bad)
adc
xchg
dec
pop
scas
xchg
rdseed
inc
test
sahf
jb
pop
ds
movs
add
aam
loope
cdq
cmp
xchg
xchg
push
in
dec
es
das
sub
int3
addr16
mov
(bad)
cwde
shl
xor
xor
cmp
rcl
sar
adc
in
jmp
xor
push
sub
xchg
mov
aad
push
sub
fcom
neg
inc
add
jne
ret
jbe
cdq
test
and
mov
pop
jne
call
(bad)
xchg
rol
jns
mov
sbb
and
mov
das
add
cdq
push
dec
das
sahf
cmps
adc
mov
stos
cmps
cmp
lods
add
add
shl
fadd
ins
retf
dec
or
bound
cmp
add
lods
mov
sbb
call
std
adc
(bad)
dec
cld
xor
jo
icebp
frstor
mov
dec
pop
xchg
ss
aaa
dec
pop
ins
mov
jne
pop
std
mov
xchg
sti
mov
in
shl
inc
ins
xchg
xchg
fst
outs
pop
jle
int3
test
cwde
fisubr
mov
inc
jne
or
pop
xchg
mov
cmc
les
sub
inc
adc
push
jmp
cmp
cmc
fistp
mov
out
xor
ret
adc
mov
ins
imul
shl
fld1
sbb
das
push
test
mov
cmp
stc
and
es
lods
sbb
jo
pop
dec
inc
xchg
sbb
retf
out
push
fnstsw
sar
sbb
(bad)
mov
mov
test
(bad)
mov
mov
cs
rcr
es
sub
int3
adc
std
lods
inc
scas
(bad)
dec
cmp
mov
jne
xchg
data16
cld
mov
or
push
out
aam
icebp
push
mov
scas
pop
imul
ror
jne
xor
jp
test
mov
out
xchg
mov
cmp
(bad)
jns
pop
and
xchg
cld
sub
jns
xchg
or
sti
out
fwait
inc
fst
mov
movzx
push
cwde
daa
in
mov
and
dec
ret
(bad)
xor
stos
dec
pop
imul
jmp
jae
sahf
dec
pop
loope
icebp
mov
cld
jle
xchg
movs
mov
xchg
je
imul
jge
pop
js
sub
dec
dec
push
xor
mov
xchg
push
pushf
xchg
(bad)
rcl
aad
ds
jno
fnstsw
xchg
push
cli
pop
and
inc
in
je
push
outs
fucomp
or
fstp
mov
lods
pop
ja
out
and
jp
pop
adc
pop
jnp
xchg
(bad)
push
(bad)
cmp
mov
inc
out
fcmovnbe
sti
(bad)
add
in
in
fwait
jecxz
loop
pop
xchg
sub
shl
dec
(bad)
test
or
std
xchg
(bad)
cmp
sbb
inc
data16
out
sub
xor
pusha
lods
adc
inc
add
repz
inc
inc
popa
fimul
and
lock
cdq
test
das
xchg
aam
fs
jmp
ins
aas
js
or
sbb
cmp
jl
clc
jmp
xchg
mov
add
loope
jecxz
pop
mov
mov
push
or
and
jle
inc
retf
adc
jne
push
sub
scas
(bad)
adc
mov
fld
pop
sub
dec
inc
pop
popf
pop
in
pop
mov
int3
sbb
xchg
mov
and
idiv
fiadd
cmp
test
mov
bound
push
push
daa
je
test
lock
pop
add
or
addps
xchg
lahf
test
fdivr
ins
imul
or
in
mov
lds
test
cdq
leave
xchg
dec
test
push
add
cmp
in
popf
add
cli
and
les
outs
lea
mov
jo
int
mov
push
inc
scas
addr16
(bad)
mov
div
bnd
xor
mov
int3
ss
push
ret
hlt
push
add
mov
test
jp
sar
out
push
sahf
fmul
cmp
fsub
es
cmps
sti
int
imul
inc
iret
pop
mov
out
test
lds
sbb
fnstenv
sbb
push
sar
mov
repz
jmp
cmps
jl
dec
mov
xor
cli
mov
jle
jae
push
jb
push
cmps
xchg
pusha
xchg
mov
pop
xchg
(bad)
adc
mov
inc
in
adc
div
dec
sti
inc
xor
dec
jp
test
or
jge
(bad)
lods
pop
cwde
xchg
inc
mov
je
jbe
add
fdiv
addr16
pop
dec
mov
jo
xchg
bound
mov
pop
pop
xor
and
lahf
repnz
scas
outs
adc
ss
(bad)
inc
add
jbe
jle
test
out
cld
add
mov
into
aaa
int
inc
inc
out
test
mov
icebp
jno
(bad)
pop
out
add
lock
sbb
shr
pop
dec
pushf
jbe
adc
xchg
mov
mul
movs
in
mov
mov
pop
scas
(bad)
daa
jle
cmp
mov
mov
rol
lea
arpl
call
push
cld
shl
jnp
push
cdq
movs
adc
iret
cmp
pop
xchg
lahf
adc
sbb
xchg
mov
cmp
sub
pushf
jb
dec
addr16
call
imul
cmps
jae
or
sbb
cli
sub
push
(bad)
aas
dec
mov
hlt
xlat
outs
rcr
in
xor
imul
jne
push
call
or
aaa
pop
xchg
sbb
loop
inc
in
cmp
out
or
movs
ja
or
inc
xor
dec
outs
movs
out
xor
adc
pop
pop
out
loopne
pop
sbb
lahf
rcl
mov
imul
and
inc
test
and
pushf
shr
daa
mov
shl
mov
movs
dec
js
test
ja
adc
mov
jl
fldenv
stos
add
mov
mov
mov
mov
xchg
push
mov
in
mov
inc
into
inc
(bad)
pop
add
push
retf
ins
pop
dec
das
mov
push
inc
or
and
mov
mov
xchg
movs
dec
call
scas
js
sub
inc
sub
cli
push
adc
shl
adc
add
out
sbb
fist
pushf
push
push
sbb
adc
loope
(bad)
push
mov
dec
fidiv
add
addr16
jp
lds
lahf
fistp
cmp
fisubr
mov
push
sbb
sbb
or
pop
and
add
mov
push
scas
out
dec
push
mov
jae
sbb
lahf
loopne
or
mov
add
push
cmp
jb
and
cmp
in
mov
pop
pop
rcr
inc
xchg
xor
std
push
cmp
dec
lods
jbe
cdq
mov
(bad)
cld
in
mov
je
dec
mov
sahf
pop
sar
js
sbb
imul
loop
outs
sbb
push
and
les
adc
mov
imul
add
adc
loop
jno
loope
sbb
push
lea
nop
inc
xor
cmp
or
into
repnz
(bad)
std
mov
cld
adc
mov
cs
cmp
mov
cli
xor
push
fwait
push
add
add
int
sbb
add
data16
stos
fmul
int3
mov
bnd
adc
lds
and
fsubr
mov
dec
arpl
popa
mov
popf
(bad)
loopne
cmp
imul
es
sti
cmp
xchg
(bad)
loop
pushf
mov
call
jmp
cmp
and
je
cld
xlat
mov
pop
rcl
(bad)
fist
lods
add
sub
inc
sub
fsubrp
in
push
push
push
add
pop
adc
push
fcmovnbe
pop
(bad)
fist
fldcw
xchg
shl
jae
sti
adc
mov
pop
dec
fucomp
popf
mov
dec
mov
pop
add
jmp
xchg
frstor
pushf
(bad)
inc
inc
repz
sub
and
out
mov
sbb
jb
or
arpl
fs
pop
xchg
daa
das
push
rcr
dec
xchg
xchg
lock
out
jge
out
lock
sti
push
add
inc
icebp
ins
add
pop
fmul
adc
lods
xchg
data16
add
cwde
mov
enter
aad
fcmovnbe
adc
inc
adc
aas
das
xor
push
(bad)
push
(bad)
ja
mov
dec
push
sbb
lods
je
mov
pop
push
int
sub
and
fnsave
retf
gs
cmps
cmc
jecxz
pop
dec
xor
sahf
sbb
cmp
(bad)
in
fst
movs
pushf
mov
int3
sub
popf
test
xor
dec
add
push
jge
cmp
cmp
and
lock
int
ficomp
loop
je
sub
xlat
pop
inc
mov
(bad)
lahf
push
sbb
mov
fstp
test
mov
mov
sar
icebp
xor
mov
mov
xchg
aad
lock
dec
xchg
and
sub
pop
loope
mov
loop
push
jp
and
arpl
push
sbb
fiadd
fist
imul
int
retf
or
lahf
fistp
xchg
xchg
xchg
cmps
mov
jmp
(bad)
(bad)
movs
mov
repz
imul
sti
outs
pop
pop
cmp
(bad)
or
cs
fcmovne
jno
fld
lods
fs
popa
stos
sub
mov
test
push
sbb
pop
pop
pop
mov
cs
nop
pop
(bad)
lods
(bad)
call
neg
into
mov
out
push
mov
fld
pop
and
movs
test
lds
sub
or
mov
adc
inc
cmp
test
xchg
in
jb
jmp
cmps
lds
pop
adc
push
not
cmp
dec
stc
popa
ds
mov
loop
sti
popf
(bad)
retf
pushf
push
pop
cli
out
je
inc
es
jecxz
es
xchg
lahf
jmp
shl
test
sub
test
sbb
loope
out
popa
aaa
inc
and
in
loope
sub
mov
add
leave
mov
test
icebp
cmc
ja
fwait
inc
mov
xchg
icebp
repnz
pusha
adc
rol
stos
outs
iret
out
pop
pop
cmp
inc
cli
inc
pop
into
mov
imul
imul
shl
jge
push
js
js
fisub
inc
pop
call
(bad)
mov
sbb
xchg
sbb
adc
imul
inc
sti
shl
push
push
nop
push
popf
int
rol
and
(bad)
or
dec
pusha
sub
xchg
mov
pop
es
into
aad
neg
mov
(bad)
out
test
push
icebp
inc
cmp
shl
adc
int3
add
add
cmp
nop
inc
push
scas
ss
(bad)
stc
sar
stos
ins
pusha
data16
jbe
aad
icebp
scas
mov
pop
xchg
cmp
test
mov
lea
inc
mov
cmc
push
mov
fldcw
mov
fwait
mov
dec
adc
add
adc
jecxz
push
popf
ja
shl
sbb
cmp
out
es
lods
mov
and
or
push
imul
dec
cmp
lea
repz
xor
mov
inc
and
pop
inc
push
adc
std
hlt
jecxz
es
sub
pop
(bad)
cmp
xlat
pop
xchg
inc
ins
bound
clc
lahf
jp
mov
aaa
cli
int3
jnp
call
fsub
test
cwde
repz
jp
in
sub
mov
jb
pop
lds
leave
xchg
sbb
mov
mov
cmc
lgs
mov
mov
or
cli
adc
cld
iret
xchg
sbb
int3
fisttp
fstp
mov
inc
jae
es
adc
retf
dec
jne
std
adc
push
cwde
cmp
fnstcw
push
mov
sti
mov
hlt
jb
sub
cmc
sbb
pop
and
push
mov
movs
jle
stos
jp
xchg
or
shr
inc
stos
pushf
mov
xchg
stc
aad
add
rol
mov
mov
cmc
nop
enter
cmp
mov
sub
mov
and
adc
and
int
push
imul
enter
out
daa
jecxz
mov
xor
fcmovb
dec
leave
push
ins
xchg
ror
lds
loop
loope
push
lds
rol
int
std
mov
mov
inc
clc
dec
dec
sahf
push
mov
xchg
add
and
mov
test
retf
mov
enter
(bad)
sub
fidivr
out
sub
and
pop
loopne
movs
test
sub
dec
shl
mov
pop
cmp
sub
(bad)
popa
pop
inc
test
cmp
(bad)
mov
shl
js
mov
cmp
sub
nop
mov
(bad)
ja
inc
fistp
inc
call
retf
(bad)
sub
add
lds
xor
ret
push
test
repz
and
push
pushf
xchg
mov
and
fimul
inc
std
xor
data16
cmps
ret
mov
movs
stos
inc
sub
adc
cmp
es
sbb
sub
ja
dec
sub
retf
stc
scas
cld
jnp
fwait
jl
pop
xor
jns
dec
hlt
cdq
xchg
jle
sub
in
adc
mov
adc
push
outs
inc
lds
shl
es
jmp
bound
dec
fucomip
pop
in
iret
repnz
aad
aaa
push
cwde
xchg
enter
sbb
push
inc
test
xchg
mov
mov
lds
jmp
mov
out
inc
adc
imul
mov
sar
adc
shl
fwait
jbe
push
cli
ds
clc
inc
xor
push
jae
cs
sbb
dec
jbe
ror
mov
popf
inc
or
stos
jmp
inc
loope
mov
xor
cmps
push
jno
cmp
fwait
mov
add
cld
(bad)
leave
mov
mov
pop
leave
nop
(bad)
sysret
test
jg
xchg
mov
ret
scas
xchg
test
lds
ins
pushf
daa
sub
push
sub
sub
ror
inc
mov
(bad)
es
sbb
mov
mov
pop
xchg
cmps
mov
jnp
adc
xor
pop
ins
les
out
fnstsw
(bad)
lods
retf
lahf
sub
fist
dec
into
in
gs
dec
mov
inc
fs
or
jns
cmp
je
dec
push
sub
mov
dec
inc
(bad)
lock
dec
outs
mov
mov
mov
adc
xchg
icebp
or
add
xchg
hlt
mov
pusha
popf
mov
clc
je
pop
and
push
mov
fcom
and
dec
sahf
hlt
das
jns
(bad)
push
aad
cmp
lock
xor
lea
cld
xchg
lds
repz
add
push
mov
mov
clc
shr
xchg
push
sub
mov
fnstsw
mov
pop
ja
jle
test
leave
xchg
loop
not
mov
mov
xchg
jge
mov
xlat
ror
icebp
add
imul
inc
push
je
mov
dec
mov
or
pop
sbb
ja
sub
ds
pop
add
or
mov
stc
or
inc
ins
fcomp
inc
enter
test
inc
inc
retf
cli
jns
call
cmps
or
mov
sub
lods
xor
mov
iret
xchg
jo
or
and
rcl
stos
push
dec
mov
hlt
mov
adc
(bad)
fucomp
jno
jbe
or
sbb
test
dec
fucomp
pop
xor
js
hlt
fmul
ja
mov
mov
(bad)
xor
je
xchg
lahf
adc
es
sub
xlat
cdq
mov
popf
mov
jmp
and
push
dec
sahf
xor
and
cmc
out
mov
int
mov
xchg
adc
(bad)
mov
repz
cmp
xchg
ss
or
stc
push
mov
movs
icebp
leave
mov
mov
xchg
or
xchg
pop
and
or
hlt
dec
fstp
ins
jg
xchg
or
data16
lods
aad
aam
dec
outs
jecxz
inc
imul
(bad)
mov
test
retf
fs
enter
mov
shl
jl
loope
sub
and
inc
dec
sub
aad
and
jns
inc
test
mov
int3
xchg
jns
push
cs
cmp
daa
or
dec
cs
jbe
or
ds
xlat
mov
lods
bound
scas
xor
sbb
mov
nop
fstp
into
test
jno
mov
icebp
xchg
add
(bad)
iret
or
jg
sub
mov
fdivrp
aad
shl
sbb
aad
ss
mov
maskmovq
div
scas
lods
loope
xchg
mov
xlat
push
push
sub
jbe
xor
adc
loope
lock
cld
mov
xchg
std
stos
sbb
test
popf
cmp
sbb
xor
call
cmp
push
sub
sbb
into
in
or
inc
arpl
lds
jge
add
push
pop
pop
mov
xor
dec
inc
in
into
xchg
retf
ss
ja
repnz
ror
loop
inc
pop
jp
outs
ins
adc
aad
es
mov
sub
jl
sbb
ret
in
sti
inc
rol
cmovp
call
xchg
lahf
pop
adc
xchg
and
dec
push
ror
shl
out
ret
or
jbe
dec
or
or
and
mov
mov
push
xor
out
imul
mov
stos
data16
fsubr
jl
mov
and
int
movs
pop
inc
or
fidiv
lahf
retf
jle
int3
or
sbb
or
xor
pushf
adc
mov
dec
lahf
mov
ins
fs
js
outs
movs
mov
xchg
pop
dec
sbb
mov
ficom
ja
lock
jmp
dec
mov
nop
rol
test
ret
jne
into
iret
aad
imul
jge
jnp
fs
sub
loope
cmc
or
jge
and
mov
fisttp
ja
inc
fadd
cmp
in
je
int3
test
mov
ss
pop
das
ret
aas
xchg
push
push
add
shl
call
pushf
lea
or
xchg
inc
cld
mov
mov
push
xchg
jns
out
loope
loop
xor
push
retf
js
xchg
inc
mov
(bad)
setne
add
out
cmp
mov
retf
ins
xchg
js
mov
mov
or
mov
aad
cli
or
dec
jb
in
or
ret
ret
xchg
ins
pop
mov
fs
ins
mov
inc
cmps
sub
hlt
jmp
push
cwde
jo
(bad)
sbb
mul
jae
jae
outs
mov
cmp
rcl
sbb
dec
loopne
dec
pop
xor
dec
dec
das
leave
inc
dec
mov
hlt
into
dec
retf
mov
jae
fwait
mov
mov
je
ins
push
je
xchg
jnp
ss
loop
int
loopne
pusha
das
js
aad
sub
jmp
int
cld
or
mov
loope
cmc
cdq
jb
retf
xchg
cmps
mov
(bad)
sahf
sub
ins
jecxz
jae
data16
mov
in
rcl
enter
arpl
ret
adc
jmp
das
aam
ins
repnz
jnp
add
sub
out
scas
adc
in
out
adc
rcl
cmp
icebp
pop
mov
stos
ins
dec
mov
cdq
dec
ss
pop
pusha
fcom
outs
cdq
jo
arpl
ret
test
adc
push
ret
(bad)
cdq
mov
pop
daa
sbb
sbb
imul
in
xchg
jecxz
pop
jl
and
test
cvtps2pi
aad
pop
in
sub
and
jmp
cmp
hlt
cmp
pop
test
ins
int3
push
or
repz
dec
rcl
cmp
leave
add
cmp
adc
aam
dec
ss
push
jg
inc
pusha
lea
xor
and
fnsave
inc
or
hlt
imul
ret
(bad)
add
pop
adc
shr
out
in
pushf
ror
mov
push
mov
adc
ds
xor
xchg
adc
and
add
stos
rol
fwait
inc
mov
xlat
inc
xchg
aas
dec
es
adc
jl
dec
xlat
pop
add
add
jbe
and
cli
ins
sub
pop
xchg
call
aas
test
adc
xchg
pop
lahf
xor
in
push
and
cs
push
sbb
jp
retf
and
jbe
sub
iret
retf
lods
jo
sbb
pop
shr
aam
dec
dec
rol
ja
lds
jl
xchg
adc
push
cdq
pop
scas
pop
jmp
cmp
dec
push
sbb
data16
popa
push
mov
xor
mov
outs
sbb
mov
mov
and
cwde
aas
inc
bound
cmc
test
repz
xor
or
outs
xchg
xchg
and
ins
push
mov
adc
cli
out
inc
daa
sahf
in
in
add
pop
adc
xor
movs
jge
xchg
imul
ret
mov
cmp
cmp
mov
xchg
and
jae
sub
mov
sub
pop
js
out
jg
gs
push
push
movs
fist
xor
xchg
xchg
test
cmp
ror
cwde
cmp
mov
rcl
inc
sub
pushf
jle
sbb
mov
mov
pop
into
ret
sbb
bound
(bad)
add
add
xor
enter
sbb
std
dec
jne
repnz
outs
push
mov
test
or
xor
and
enter
ror
ss
inc
or
sbb
rcl
pop
xchg
xchg
ja
repz
int
pusha
arpl
icebp
jb
cmp
retf
test
out
add
sbb
sti
lahf
inc
fst
sti
ss
inc
(bad)
adc
lods
jbe
je
test
sbb
cmp
push
cmp
mov
ret
ja
adc
pop
sub
jne
stos
sar
mov
mov
mov
sahf
leave
sahf
nop
(bad)
or
inc
and
leave
sbb
pop
cmp
arpl
push
sbb
cmp
cli
cli
scas
daa
xor
push
sub
in
jge
inc
scas
mov
cwde
imul
mov
or
mov
pop
jbe
cmps
popf
adc
jae
or
fcom
pop
in
aam
and
pop
add
xor
out
arpl
xlat
sahf
or
addr16
cmc
(bad)
lods
jbe
rcr
adc
sbb
lea
repz
and
cwde
add
(bad)
or
inc
dec
loopne
inc
ja
arpl
stos
jae
push
push
fadd
ror
push
sbb
inc
pop
mov
mov
and
cmps
add
mov
dec
out
cdq
dec
jmp
aam
mov
pop
mov
mov
mov
jbe
and
mov
or
or
pop
fist
mov
pusha
pop
push
fs
in
push
inc
xchg
xchg
inc
xlat
test
mov
xchg
mov
adc
or
add
pop
ficom
add
and
hlt
xor
aas
mov
push
xor
jmp
pop
xchg
data16
scas
mov
test
xchg
push
add
popa
sti
test
mov
push
stos
add
fisub
push
mov
mov
sbb
dec
ins
test
ror
leave
jnp
mov
and
movs
test
arpl
mov
jb
jl
jb
repnz
test
xchg
mov
pop
xor
pop
lock
add
scas
or
dec
mov
adc
jnp
cmps
inc
addr16
test
xor
inc
jns
imul
ret
mov
jnp
sahf
mov
dec
mov
sbb
mov
movs
int
push
jge
stos
mov
ror
sahf
jmp
lods
(bad)
mov
call
fs
cmps
sbb
cmps
jb
dec
push
push
shl
pop
in
bound
sar
mov
cmp
cdq
jg
popa
mov
shl
scas
add
mov
pop
inc
out
mov
add
jns
mov
popf
daa
sbb
cwde
cmp
(bad)
enter
enter
stos
inc
shl
mov
sub
jnp
nop
adc
sti
mov
punpckhbw
loopne
shr
stc
mov
xor
cmp
dec
cmps
mov
popa
push
std
arpl
jnp
jno
clc
push
pushf
daa
mov
xchg
jo
pop
pop
test
ds
scas
call
and
dec
cmp
sbb
addr16
jne
or
ret
push
inc
enter
cmp
push
pushf
lods
sub
(bad)
enter
add
in
dec
xchg
cmp
cmps
inc
retf
inc
cwde
xchg
(bad)
push
popf
imul
nop
pop
xor
gs
imul
pop
mov
cmp
es
xchg
cld
mov
pop
outs
scas
ret
pushf
test
mov
mov
adc
sub
aad
sub
mov
push
ins
adc
push
out
sbb
and
(bad)
ins
or
mov
jae
push
rcr
add
mov
xor
pop
add
jbe
pop
shr
imul
mov
enter
inc
add
xchg
aam
jb
cwde
mov
mov
test
ds
in
cmc
pop
dec
push
or
rcl
add
push
fisub
adc
out
outs
pop
(bad)
push
je
push
outs
cmp
cwde
ins
xchg
sbb
lock
fcom
or
(bad)
scas
cmps
add
bound
loopne
add
xchg
pop
retf
mov
mov
(bad)
xchg
out
fld
pop
xchg
dec
or
js
arpl
dec
mov
in
adc
imul
mov
xchg
adc
aaa
cmp
mov
cld
mov
(bad)
cli
stc
aad
dec
mov
or
je
shr
inc
div
iret
mov
stos
xchg
cmp
outs
es
mov
jno
mov
aam
(bad)
addr16
outs
push
sbb
aam
cmc
adc
in
sahf
sub
push
inc
push
call
dec
cvtps2pd
lahf
outs
enter
push
dec
pop
ins
lea
mov
xchg
(bad)
jl
cwde
cmp
fdivr
out
xchg
inc
jmp
dec
call
jp
and
inc
in
jne
mov
lock
enter
pop
push
sbb
pushf
ins
jmp
ss
and
xchg
jmp
es
in
into
sbb
sbb
add
pop
imul
(bad)
retf
mov
add
leave
fsubr
mov
ins
std
mov
xchg
cmp
mov
ret
jns
(bad)
mov
dec
stc
cmps
push
call
mov
inc
lock
(bad)
aaa
addr16
jnp
mul
xchg
xor
mov
imul
push
sbb
arpl
cmp
mov
rol
(bad)
sub
mov
fimul
inc
cmp
shl
jae
mov
jae
loopne
inc
in
gs
(bad)
jl
out
adc
imul
scas
add
mov
add
mov
mov
test
cmc
mov
add
mov
or
jnp
retf
sbb
(bad)
sahf
and
mov
pop
and
aam
pop
and
xor
out
xor
xchg
adc
or
das
jge
out
mov
jmp
mov
sahf
mov
cmp
jmp
pop
inc
outs
test
or
(bad)
imul
shl
inc
jmp
cmp
scas
aad
dec
cmp
mov
push
ret
fild
xor
ja
sub
mov
cmp
mov
and
xchg
cwde
and
mov
sub
int
sbb
shr
imul
xchg
pusha
loope
mov
mov
adc
jb
or
iret
ins
sub
rcr
daa
dec
imul
in
dec
pop
dec
push
in
jl
push
push
movs
mov
and
jo
scas
outs
shl
enter
mov
lahf
mov
mov
retf
lds
icebp
loopne
enter
add
rcr
xor
dec
pop
js
pop
bound
and
sbb
sbb
sti
cmovp
(bad)
adc
stos
or
sub
scas
xchg
xchg
jne
push
das
popa
arpl
ror
xor
int3
movs
cdq
sti
int
hlt
push
bnd
fstp
jl
cmp
and
test
cmp
ss
sbb
xchg
mov
xchg
cmc
push
scas
add
imul
std
mov
inc
gs
ror
cmp
outs
mov
idiv
cmps
pop
lea
outs
inc
push
xchg
cmp
scas
and
out
xchg
push
dec
fstp
pusha
les
je
fwait
imul
jb
inc
pushf
or
xchg
or
push
in
hlt
gs
cmps
jb
cmovno
inc
test
shl
add
nop
mov
retf
cmps
and
test
mov
cmp
(bad)
jnp
aaa
jb
cld
push
jne
fwait
add
pop
sbb
movs
cmp
xor
ror
dec
lods
xchg
xchg
popa
addr16
push
in
xchg
jno
sbb
mov
loopne
into
int
mov
pop
fnstcw
push
test
into
jg
or
call
mov
std
icebp
repnz
mov
ret
or
and
test
xor
repz
imul
loop
scas
mov
cmps
shr
mov
dec
cmps
mov
fnstcw
push
jl
mul
out
ds
outs
jno
cdq
inc
ret
bnd
sub
dec
fstp
out
pushf
add
push
adc
dec
mov
xchg
xchg
popa
mov
div
mov
and
cmps
cld
shr
enter
call
pop
pop
push
cmps
add
int3
shl
pop
pushf
icebp
pop
nop
xchg
sbb
xor
and
enter
and
inc
add
cli
mov
inc
xlat
je
sub
popa
cmp
and
imul
sub
lea
xor
xor
mov
hlt
test
call
push
jne
scas
ret
mov
(bad)
in
cmps
in
cmc
retf
fisub
ss
mov
shl
mov
rol
jno
xor
call
xor
ins
xor
mov
out
pop
xchg
sub
or
lea
fwait
jmp
fcmovbe
fistp
addr16
out
xchg
push
icebp
cld
std
das
fpatan
sbb
dec
sbb
les
mov
hlt
cmp
movs
leave
push
(bad)
in
jmp
out
lods
rcr
inc
mov
out
push
jmp
jecxz
add
daa
rol
(bad)
mov
jp
ret
push
div
jo
mov
and
mov
cmp
retf
sub
fs
out
add
mov
and
sbb
and
jg
stos
push
fdiv
sub
not
mov
jle
and
adc
xor
and
and
pop
out
fistp
daa
test
mov
icebp
call
fild
and
mov
data16
repz
adc
jbe
jle
jnp
ja
add
inc
jb
mov
shl
call
push
and
jo
and
cwde
adc
(bad)
pop
test
jl
pop
test
hlt
shl
imul
pop
retf
stos
mov
dec
retf
add
mov
popa
call
xor
fisubr
sti
stos
in
mov
xchg
rcr
hlt
aaa
hlt
stos
jmp
push
out
scas
in
dec
into
push
adc
xchg
mov
leave
fmul
jmp
mov
cmp
xchg
sbb
or
cmps
adc
std
iret
aad
and
ins
pop
add
dec
xor
pop
push
test
push
and
loop
push
xchg
aas
and
scas
adc
hlt
aaa
dec
xchg
xor
mov
loop
sbb
jnp
fisttp
inc
and
pushf
mov
push
inc
cdq
xchg
psubw
xlat
xchg
dec
pop
push
(bad)
(bad)
sub
jnp
sub
imul
pop
push
imul
jg
stc
ror
or
fisub
and
fcomp
pop
cs
aas
cmp
shl
cwde
jno
ja
cmps
xchg
push
jle
xor
add
mov
mov
addr16
jle
stc
aad
xlat
or
loop
loope
and
ins
push
push
repnz
rcr
(bad)
rcl
div
int
cmp
dec
and
out
jns
push
fild
out
pop
mov
and
bound
lock
adc
xchg
dec
iret
mov
dec
loop
xchg
cmps
adc
repnz
jge
out
data16
(bad)
pop
cmp
add
sbb
hlt
fisub
xchg
out
or
loope
pop
daa
out
jp
push
mov
aaa
lods
sbb
hlt
push
movs
mov
adc
push
jle
mov
mov
mov
ret
mov
push
out
add
pop
inc
(bad)
imul
daa
je
fdivr
push
push
mov
jnp
ret
sbb
aas
stc
arpl
dec
addr16
loope
or
bound
mov
sbb
ins
(bad)
adc
pop
jp
repz
aaa
outs
cmp
ret
cdq
mov
imul
push
gs
dec
push
sbb
cmp
mul
aam
(bad)
arpl
sbb
ds
(bad)
out
movs
(bad)
push
or
stc
inc
or
jge
(bad)
xchg
daa
mov
fldcw
xor
pop
mov
and
pusha
mov
sbb
retf
std
push
call
das
xor
das
push
jl
lds
mov
pusha
test
pop
pop
dec
mov
inc
inc
cli
not
mov
(bad)
enter
int3
add
xor
mov
icebp
jl
xchg
popa
pop
gs
add
push
push
and
(bad)
or
mov
int
cmp
sub
mov
jge
cmc
out
mov
or
imul
imul
sub
and
js
xor
adc
sbb
fld
imul
shr
cmp
fwait
sti
mov
jp
adc
sub
cdq
xlat
mov
cld
xchg
add
test
jecxz
in
iret
retf
repz
pop
or
jmp
imul
arpl
fisubr
mov
dec
or
sub
daa
cmp
jbe
stos
xchg
add
nop
retf
mov
sbb
(bad)
pop
jg
jne
adc
lds
mov
or
mov
cmps
add
scas
jae
inc
xor
mov
adc
xor
loop
dec
xchg
enter
pop
dec
inc
popf
sub
xor
icebp
lea
into
movs
xor
push
xchg
push
shr
jecxz
sbb
ds
jp
sbb
adc
sbb
scas
es
call
rcl
add
add
addr16
adc
mov
push
add
add
sub
test
mov
bnd
imul
or
and
xchg
pop
pop
fisttp
fild
mov
xchg
jb
loope
call
aas
stos
push
mov
mov
jecxz
and
es
or
or
test
dec
cmp
dec
ins
int3
jecxz
inc
test
ret
(bad)
lock
mov
call
push
rcl
sti
clc
adc
lods
push
arpl
sbb
icebp
jge
stos
cli
std
adc
inc
dec
fcom
push
jo
lock
gs
push
(bad)
xlat
or
popa
iret
pop
adc
rol
rcl
jmp
icebp
sub
lock
pop
(bad)
cli
cwde
jnp
cs
xor
aam
(bad)
pop
out
mov
enter
cmp
sub
in
shl
or
adc
inc
repz
outs
stos
pop
push
xchg
jns
arpl
test
shl
mov
mov
mov
retf
mov
push
mov
jmp
jnp
cmp
jns
imul
and
dec
iret
pop
test
adc
popf
lds
push
pushf
mov
ret
loop
push
outs
inc
lods
mov
bnd
rol
adc
lods
stos
retf
lock
dec
retf
sbb
mov
jo
sahf
add
dec
and
push
test
fs
(bad)
cs
movs
sub
pop
(bad)
std
xor
xor
scas
clc
jae
mov
test
sub
jbe
or
mov
dec
xlat
ret
aam
(bad)
xchg
and
and
jne
push
jge
mov
adc
push
push
inc
outs
cmp
out
jbe
pop
popa
imul
dec
push
add
dec
dec
inc
pop
mov
and
stos
adc
lea
sbb
lahf
movs
lods
lock
rcl
test
test
xchg
push
sahf
ins
push
or
push
cmp
mov
jb
(bad)
or
inc
push
imul
push
(bad)
push
jne
mov
test
sar
cdq
test
push
sar
and
mov
cmc
jb
inc
dec
ins
or
nop
pop
mov
int
inc
sbb
inc
rcl
enter
in
loope
dec
pop
cmp
mul
mov
lods
inc
sbb
jle
push
fstp
mov
sub
ins
add
and
or
ficom
(bad)
fidiv
outs
inc
add
sbb
cli
test
mov
fist
scas
adc
cdq
aam
dec
lods
add
xchg
cmp
sub
xchg
rcl
es
dec
std
adc
test
outs
test
fild
add
add
sbb
or
dec
retf
push
sahf
jno
cmc
push
cli
push
cli
data16
ja
adc
loopne
add
add
call
inc
aad
fstp
inc
cmp
mov
push
mov
js
and
imul
and
push
outs
jno
mov
arpl
cmp
jge
mov
cmp
sbb
fadd
out
sahf
nop
fidiv
fwait
sbb
ret
mov
ins
xor
aas
cmp
addr16
(bad)
jmp
cmp
dec
jg
pop
xchg
pop
jp
mov
push
in
bnd
jae
dec
jb
lahf
dec
cdq
dec
sbb
push
and
sbb
cwde
add
sub
xchg
sti
xchg
int3
fadd
rcl
daa
mov
inc
adc
xchg
out
fs
adc
aaa
adc
mov
pop
clc
or
xor
fs
jae
rcr
outs
xchg
js
jno
and
xor
fcomi
inc
adc
sbb
aas
(bad)
loopne
push
fsubr
aad
out
popf
sbb
mov
in
xchg
adc
cli
or
mov
loope
test
in
inc
pop
stc
gs
mov
shr
out
mov
mov
push
sbb
or
mov
lock
fdivrp
mov
pop
cmp
fld
ja
xchg
push
push
in
cmp
dec
jmp
out
xchg
retf
dec
inc
mov
cmp
test
fdiv
cdq
(bad)
jmp
lock
dec
xchg
rol
arpl
pop
not
or
cmp
mov
in
out
aas
imul
adc
out
aam
pop
popf
popf
mov
pop
sub
in
xchg
push
fcomp
ret
mov
(bad)
push
push
ins
inc
je
xchg
pop
xchg
sub
fmul
stos
xchg
ins
pop
das
fdiv
inc
sbb
add
int
lods
inc
js
jb
sub
adc
pop
cmp
aad
xlat
cli
or
jmp
ret
xchg
in
bound
push
sahf
out
mov
lods
aam
cs
ret
das
scas
icebp
lods
mov
dec
jle
aas
rol
aaa
mov
adc
adc
mov
daa
scas
jnp
lahf
jae
cmp
push
(bad)
xor
ins
sar
test
hlt
inc
movs
iret
shl
mov
stos
in
jg
adc
stos
xor
lods
cmp
cmp
out
out
xchg
mov
adc
fistp
or
lds
push
mov
std
mov
es
gs
push
add
in
in
daa
cmp
arpl
sbb
adc
jae
lea
add
in
push
push
out
fadd
sbb
mov
enter
sub
loope
test
cwde
mov
mov
scas
loopne
or
pop
inc
xlat
movs
inc
push
cld
test
outs
mov
outs
aaa
es
ja
push
add
and
and
loopne
add
aam
adc
pop
mov
call
sub
hlt
lods
adc
ins
imul
in
aaa
imul
mov
repz
and
ins
xor
rol
test
mov
or
in
xlat
js
and
pop
je
pop
retf
mov
push
xlat
mov
pop
xchg
push
cmp
mov
sbb
sbb
stc
repnz
or
cmc
es
mov
push
xchg
pop
inc
(bad)
inc
lea
lock
inc
rol
rcl
cmp
in
pop
mov
push
xchg
cmp
mov
sub
lods
aam
retf
jmp
push
cdq
in
mov
mov
and
adc
ins
mov
or
or
rol
mul
push
int
xor
jmp
fld
data16
addr16
pop
adc
inc
in
and
xor
es
and
(bad)
sub
popa
icebp
clc
imul
popa
dec
pop
adc
pop
ret
fs
jp
(bad)
sbb
scas
test
jmp
fsubp
sti
les
mov
and
iret
fild
mov
retf
dec
cmp
jmp
and
jo
in
(bad)
push
hlt
sbb
pop
in
pop
inc
cmp
into
loopne
and
dec
pop
cld
push
mov
(bad)
(bad)
std
ds
int3
cmp
leave
das
(bad)
lods
xchg
(bad)
push
sahf
adc
push
inc
lea
les
cs
lahf
repnz
adc
adc
jbe
test
jne
clc
sar
lahf
mov
jae
das
mov
je
and
and
lods
fdivr
test
inc
not
xor
(bad)
test
push
sahf
push
ret
add
jbe
fst
mov
add
add
add
shl
dec
dec
jno
out
mov
fwait
ins
outs
arpl
dec
cmps
sub
add
test
icebp
mov
retf
jns
xchg
loope
fistp
sahf
(bad)
imul
out
xor
xlat
jnp
mov
lds
mov
jmp
inc
sti
outs
pop
jns
push
adc
sub
inc
xor
sbb
and
test
imul
lahf
mov
adc
cmp
mov
into
and
or
ins
fcmovbe
ins
push
inc
nop
and
xchg
push
(bad)
int
nop
adc
adc
jle
mov
xchg
gs
je
stc
hlt
dec
pop
aam
outs
sub
aas
int
pusha
leave
movs
das
push
pop
imul
dec
mov
or
jo
loop
fstp
jb
dec
xchg
cdq
xchg
adc
xchg
call
xor
repnz
or
push
or
pushf
ins
dec
add
sub
hlt
sub
ror
jmp
cmp
mov
pop
or
rcl
int
lods
outs
sbb
cs
hlt
or
in
mov
scas
pop
clc
hlt
add
xchg
(bad)
sbb
dec
push
mov
out
xchg
ficom
mov
fldenv
hlt
xchg
(bad)
sbb
stos
les
lods
ret
js
lods
call
and
movs
arpl
mov
xor
stos
iret
movs
out
mov
pusha
es
xchg
stc
cmp
scas
push
icebp
cmc
test
rol
fst
cmp
aaa
nop
mov
fld
mov
ja
fadd
push
cdq
int3
adc
and
(bad)
out
das
xchg
mov
pop
fstp
dec
xor
(bad)
fst
mov
mov
mov
mov
ds
inc
add
shr
mov
lea
call
data16
adc
stos
sub
add
enter
movs
out
stos
cli
ins
xchg
fstp
rcl
out
xchg
inc
pop
fwait
test
lods
imul
mov
(bad)
lock
lods
cmp
movs
pop
jo
dec
stos
mov
jle
(bad)
movs
nop
test
sahf
bound
leave
mov
retf
imul
push
loope
clc
iret
ss
mov
and
loopne
call
and
out
mov
adc
pop
pop
outs
call
scas
loope
js
repnz
cmp
mov
and
(bad)
cmc
js
jecxz
aaa
movs
jnp
test
(bad)
pop
sbb
push
shl
out
adc
pop
cmp
jns
aas
sbb
jo
add
mov
and
xchg
push
push
add
jp
sub
bnd
push
aam
outs
call
popf
sahf
aad
lock
ja
sub
lds
retf
leave
out
ins
ins
jno
jp
push
push
ds
fcom
sub
mov
fstp
(bad)
sub
push
rcl
mov
xchg
sbb
mov
shr
addr16
jb
ins
sar
loope
jmp
mov
aam
fwait
lds
daa
push
pop
sahf
pop
jb
dec
sub
dec
push
or
ja
adc
jg
imul
jae
and
(bad)
push
das
fild
jmp
and
stos
mov
test
rol
push
cmp
xor
cmp
xor
ret
push
cmp
ins
add
pusha
fist
inc
retf
(bad)
test
imul
in
popa
mov
repnz
fcom
dec
sbb
adc
repnz
jp
xchg
sub
ret
pop
shr
rcr
out
push
mov
leave
loop
mov
pusha
xor
(bad)
fwait
cmp
xchg
fsubrp
ds
dec
sbb
retf
pop
(bad)
lods
sti
les
or
inc
test
out
mov
sbb
jbe
and
jge
std
adc
or
movs
scas
das
pop
std
mov
aaa
hlt
inc
sbb
ins
ror
icebp
add
pop
es
sbb
xlat
pop
outs
add
repz
sub
out
and
pop
(bad)
cld
mov
inc
push
xor
xor
fstp
outs
inc
mov
mov
aaa
jecxz
add
dec
jmp
sar
jge
jbe
adc
repnz
inc
dec
cmp
call
fild
dec
jnp
mov
js
aaa
xchg
sub
cs
and
mov
js
or
inc
les
jge
cmp
pushf
lea
(bad)
movs
ret
mov
or
fld
sahf
mov
or
lahf
jmp
repnz
adc
int3
mov
mov
jmp
ins
or
mov
lods
push
fstp
lods
(bad)
dec
fld
sub
or
scas
jg
xchg
add
push
jmp
div
pop
leave
ret
add
shl
or
adc
cwde
jae
push
sub
das
pop
pop
xchg
adc
sub
inc
mov
mov
pushf
jmp
push
cld
ror
adc
jnp
mov
jg
fisttp
fimul
das
cmp
xchg
in
aaa
popf
pop
popf
pop
mov
test
test
push
jmp
ss
das
cmp
shr
or
imul
mov
cmp
pusha
(bad)
push
mov
push
push
pop
mov
imul
ja
je
pop
jp
pop
jno
dec
xchg
pop
push
or
adc
outs
inc
loopne
punpckhbw
mov
ja
xchg
jb
mov
fcmovnu
sbb
sti
in
fisttp
cmp
inc
mov
call
pop
pop
push
fdiv
dec
cdq
xor
rol
stos
adc
mov
add
faddp
push
push
das
lods
mov
inc
leave
adc
loop
add
xchg
adc
inc
lea
in
xor
pop
test
imul
mov
hlt
in
push
xor
lods
je
lods
sbb
cmps
push
xchg
stos
mov
adc
sbb
popf
lods
jo
loop
and
or
sti
jne
or
cli
clc
dec
fld
mov
ja
push
adc
aas
pop
fwait
sahf
xor
fucomi
jp
icebp
test
shl
jne
shl
xor
push
jge
aad
inc
cmc
jns
jae
mov
jmp
aaa
jecxz
ins
lock
xchg
or
jge
add
sbb
pop
stc
push
es
xchg
add
(bad)
sbb
mov
rol
(bad)
fist
cdq
pusha
xor
in
adc
cs
sub
fs
push
mov
pop
sub
in
push
xchg
xlat
jg
add
in
adc
hlt
push
mov
jge
xchg
and
pop
fldenv
inc
sub
mov
mov
dec
dec
push
(bad)
jbe
bound
lods
ficom
sub
or
jge
add
rcl
fwait
cmp
int
push
xchg
in
push
leave
imul
mov
add
rcl
sub
dec
adc
add
mov
iret
test
scas
ins
dec
and
pop
shl
adc
sub
sbb
mov
loop
rol
icebp
push
and
push
sub
mov
adc
sub
inc
jecxz
scas
scas
les
sahf
xchg
sbb
cmp
je
pusha
out
(bad)
push
dec
adc
ror
mov
jg
cmp
js
pop
out
dec
int3
and
test
les
push
(bad)
jle
push
sbb
gs
int
push
sub
retf
int3
inc
ja
outs
mov
aad
(bad)
aam
bound
push
add
xor
xor
mov
mov
cmps
dec
test
(bad)
xor
ret
sub
add
cld
and
push
add
push
mov
repz
jno
dec
dec
lods
cmps
and
daa
in
cmps
repz
sub
mov
adc
test
mov
mov
inc
outs
clc
add
or
fsubr
dec
test
and
aam
out
shl
cwde
popf
mov
mov
cmc
vaddps
retf
jbe
sub
call
std
xor
xchg
xor
daa
push
and
loopne
pop
and
push
out
mov
adc
je
sub
out
pop
mov
scas
jge
sbb
popa
addr16
or
add
xor
pusha
xlat
sbb
push
lods
mov
or
or
out
mov
(bad)
movs
cmp
(bad)
outs
pop
push
mov
out
inc
mov
mov
mov
jne
sbb
cmp
movs
jnp
das
or
push
cmps
outs
ret
inc
mov
or
xchg
cmp
nop
dec
inc
cmps
(bad)
in
and
fidivr
dec
mov
cs
lahf
push
pop
aaa
pop
cs
pop
daa
leave
sub
sti
lds
ins
inc
int3
in
or
and
cmp
in
enter
test
push
ficom
push
xchg
pusha
jno
jbe
adc
sub
jne
cld
pop
frstor
rcr
es
out
and
or
int
stos
add
dec
and
pop
test
dec
jo
xlat
lea
clc
std
mov
lea
xor
aam
cs
jmp
pop
xor
ret
jb
rcl
shr
adc
push
ins
or
cmp
repnz
(bad)
hlt
nop
outs
or
xlat
pusha
mov
ins
mov
and
stc
sub
ret
push
sbb
inc
sub
and
(bad)
std
sub
(bad)
fisub
nop
jmp
lods
pop
pop
and
shl
rcl
mov
dec
mov
aas
add
add
les
fcmovnbe
xor
lahf
mov
sub
repz
into
fldcw
jae
cmp
add
sub
sbb
pop
and
(bad)
inc
xchg
(bad)
xor
adc
icebp
in
lea
out
dec
xchg
ja
pop
jge
iret
test
jns
mov
cmc
xor
pop
les
pop
popa
push
and
push
ss
repz
cmps
adc
xor
xor
(bad)
mov
push
daa
cdq
ins
and
movs
jo
push
inc
dec
sub
cmps
fucomip
xor
lds
(bad)
or
jmp
or
dec
xchg
sbb
hlt
arpl
cmp
sub
fbstp
pop
sub
movs
push
sbb
and
outs
sub
arpl
push
scas
aad
xchg
vpaddusb
cmps
mov
frstor
(bad)
jle
adc
pop
inc
aam
imul
icebp
es
sbb
pop
mov
div
dec
jecxz
mov
push
aam
sbb
add
mov
push
cli
scas
mov
inc
push
jl
fstp
cmp
popf
pushf
pop
ins
dec
pop
mov
jae
out
pusha
jo
pop
mov
test
ds
test
push
inc
jg
pop
enter
clc
or
and
pusha
scas
mov
lods
fsubr
in
add
es
leave
ficom
les
and
xchg
add
int3
inc
into
cmp
nop
mov
xor
dec
in
mov
and
mov
mov
repz
jp
cmp
push
js
ret
out
in
adc
test
imul
push
add
or
jg
jecxz
int
retf
fsub
sub
pusha
call
(bad)
(bad)
xchg
ret
xchg
lea
mov
mov
(bad)
in
mov
cwde
fwait
xor
mov
fist
and
pop
mov
xchg
pop
sub
jle
mov
cmps
jbe
pop
push
cmp
int
inc
sub
ja
jl
pop
pop
loop
jbe
xchg
mov
mov
lds
add
fcmovnb
or
retf
mov
or
pop
in
outs
ins
aad
sahf
adc
adc
mov
sub
cmc
jo
std
loop
mov
sbb
das
loope
les
fwait
cmp
movs
sti
in
ror
ins
sbb
sahf
dec
and
push
adc
dec
ss
dec
popa
jge
mov
shr
mov
push
imul
sbb
iret
jo
mov
scas
jmp
adc
push
sub
sar
mov
out
gs
int3
fwait
repz
mov
mov
pop
push
or
xchg
(bad)
ficomp
or
rol
add
cmp
push
lods
mov
push
sub
stos
sti
sub
fwait
mov
popf
cmps
push
fucom
xchg
call
jecxz
dec
(bad)
and
dec
pop
cs
add
inc
jb
hlt
add
lahf
mov
or
jmp
imul
popa
xor
pop
fild
mov
dec
sti
gs
cmp
outs
sub
pop
stos
pop
in
sahf
xchg
adc
arpl
das
outs
out
sub
xchg
shl
adc
rcl
pop
icebp
repnz
cmps
sahf
mov
sar
leave
inc
je
daa
mov
pop
mov
cmc
jo
push
add
or
sbb
ret
or
or
(bad)
xchg
add
inc
lock
inc
out
ins
das
and
js
mov
sub
add
mov
mov
push
les
push
pop
clc
fldenv
cmps
pop
push
mov
rol
popf
fs
or
mov
xor
adc
sub
retf
stos
and
dec
mov
retf
or
repnz
pop
hlt
out
scas
mov
bound
imul
hlt
arpl
out
inc
movhps
xor
xchg
fs
lock
push
push
dec
mov
jmp
aaa
aad
sbb
xchg
out
jle
or
out
and
outs
mov
test
xchg
dec
sub
clc
xor
adc
sbb
mov
es
push
and
mov
xor
(bad)
aad
and
fistp
sti
mov
xor
push
push
es
pop
jnp
cmps
(bad)
xor
cmp
mov
cs
jge
nop
fistp
inc
pusha
test
add
pop
cmp
inc
int
sti
xchg
pop
loop
pop
push
cdq
push
xor
add
fisttp
xchg
(bad)
sub
jns
enter
sub
test
outs
stc
inc
cmp
cmps
daa
mov
and
pushf
fcomp
xor
pop
cmps
stos
daa
xchg
sbb
cmp
pop
les
mov
and
(bad)
adc
adc
sub
sbb
and
xor
movs
je
cli
je
mov
(bad)
shl
in
mov
ficom
(bad)
pop
xchg
mov
xchg
pop
mov
(bad)
jl
aam
in
dec
dec
mov
in
xchg
(bad)
aas
movs
idiv
(bad)
(bad)
loope
jae
arpl
rcr
gs
test
ds
inc
push
sub
fwait
imul
cwde
repnz
sar
cwde
sub
adc
xor
cld
mov
cmp
gs
add
inc
xor
or
into
paddq
bswap
jb
jb
rcr
pushf
xor
push
inc
jg
(bad)
aad
mov
out
or
ins
aaa
mov
sti
sub
nop
xchg
pop
imul
pop
data16
stc
add
sbb
cmp
movs
mov
cmp
sub
sub
push
xlat
pusha
retf
dec
push
xlat
and
mov
inc
mov
imul
aaa
ds
int
or
sbb
adc
or
adc
pop
movs
cmc
and
fwait
mov
sbb
adc
cs
mov
adc
pusha
mov
pop
jmp
push
and
data16
push
dec
hlt
cmp
retf
cmps
push
inc
sbb
xchg
jecxz
imul
fidiv
rcr
cli
dec
cmc
push
mov
dec
stos
imul
push
jl
test
cmp
add
adc
adc
pop
(bad)
call
mov
imul
dec
jnp
imul
jge
fldcw
jecxz
jle
inc
mov
bound
repz
adc
mov
stc
ss
aaa
push
pop
cwde
mov
sbb
into
sub
dec
cld
out
push
ins
je
mov
ins
das
sbb
data16
cld
push
lahf
retf
movs
mov
push
xor
adc
mov
sub
pop
in
rcr
or
jg
loop
pusha
pop
dec
mov
movs
xchg
mov
push
test
ins
sub
stos
adc
and
adc
xchg
test
push
imul
dec
xchg
ret
test
shr
sar
ficomp
dec
out
ins
adc
push
push
pop
sbb
(bad)
push
ja
lods
push
or
leave
imul
adc
mov
loop
movs
fwait
cwde
addr16
or
lea
(bad)
cmp
and
aam
add
mov
pusha
dec
pop
not
add
cmps
(bad)
or
ret
jae
out
or
aas
popf
xchg
or
push
shr
adc
fist
(bad)
pop
bound
mov
jo
das
pop
jg
xor
xchg
add
jo
jecxz
jbe
mov
mov
outs
mov
sbb
test
and
jnp
dec
sbb
int
jmp
rol
pop
ds
jo
(bad)
adc
dec
std
repnz
mov
add
popf
test
sbb
adc
loope
mul
pop
jno
aaa
add
push
xor
xchg
xchg
int
cmp
push
mov
leave
inc
sbb
xor
and
xor
xlat
dec
push
lds
clc
rol
adc
lds
inc
pop
enter
pop
fdiv
jge
xor
or
inc
mov
jecxz
jmp
pop
jg
jbe
add
xlat
daa
xchg
ret
mov
sti
or
sbb
inc
shr
popf
or
cmp
pop
fisub
xchg
xor
add
mov
loopne
cmp
or
add
mov
xchg
enter
and
cmp
inc
inc
out
leave
and
or
dec
xchg
jo
(bad)
and
popf
push
inc
ss
cmps
fsub
or
sbb
xlat
jp
pop
pop
pop
push
push
push
mov
ficom
loopne
hlt
nop
mov
popf
lds
jp
xor
or
shl
leave
enter
fsub
das
neg
mov
xchg
mov
inc
js
xlat
(bad)
jnp
push
pop
mov
xor
jbe
or
jmp
scas
cmp
dec
rol
pusha
and
add
loope
mov
into
pop
test
cmp
call
mov
imul
jp
aaa
pop
dec
sub
out
xchg
mov
(bad)
rcl
shl
ret
sahf
js
mov
add
fs
je
aam
push
int3
dec
iret
inc
js
fs
in
out
out
rcl
imul
adc
(bad)
xchg
int3
and
das
inc
sub
(bad)
cdq
call
shl
stos
pop
lds
rcr
call
jae
je
js
enter
dec
rcl
adc
sbb
mov
pushf
call
or
pop
cmp
hlt
repz
dec
test
jl
mov
mov
sbb
inc
fnstsw
fimul
inc
ficomp
test
mov
out
mov
cwde
fnstcw
xchg
xchg
or
mov
fucompp
cmp
jge
ss
jmp
dec
mov
in
cmp
fstp
inc
pop
adc
adc
mov
push
and
add
inc
cmp
ret
test
jo
retf
fs
push
sub
je
add
push
leave
out
adc
das
add
jae
push
push
push
mov
je
xor
push
and
push
jno
adc
outs
jp
xchg
or
mov
or
fdiv
rcr
stos
dec
xlat
imul
mov
mov
movs
cmp
mov
pop
add
xor
and
cmp
fdivr
retf
int3
mov
sbb
ds
and
scas
mov
call
aas
not
fwait
imul
test
hlt
inc
jle
inc
or
int3
lods
enter
mov
inc
inc
inc
shl
in
out
sub
push
imul
jle
(bad)
neg
and
fdivr
movs
mov
aaa
dec
xchg
xor
inc
aas
in
xchg
mov
(bad)
(bad)
in
push
cld
aam
ins
test
jb
fwait
ins
fwait
mov
test
cmp
xchg
pop
dec
sahf
push
pop
sub
int
xchg
stc
scas
and
pop
xchg
into
nop
movs
and
add
and
ins
out
rol
ror
xchg
xor
pop
lea
mov
std
jnp
mov
dec
mov
leave
test
jp
push
mov
mov
je
aas
lds
ins
(bad)
out
cmp
ror
and
sar
jno
add
or
fcom
lahf
pop
pop
adc
dec
cs
aaa
cmps
xor
dec
int3
or
mov
shl
cmp
cmc
mov
aam
mov
jmp
jecxz
and
les
ins
add
sub
mov
mov
repz
repz
shl
cs
pop
fs
sub
inc
sbb
out
inc
fs
(bad)
repz
ficom
or
lock
cmp
cmp
adc
lahf
pop
iret
sbb
pop
repnz
mov
pusha
movs
or
(bad)
jge
movs
dec
out
(bad)
hlt
inc
fwait
mov
jp
and
and
pushf
in
scas
dec
sub
cmovne
inc
dec
mov
movs
je
out
mov
mov
outs
in
cmp
inc
xlat
push
sbb
add
cdq
add
and
dec
inc
movs
lock
pop
scas
xor
mov
in
sahf
iret
mov
ds
mov
mov
sub
test
outs
sub
push
test
add
and
cmp
(bad)
out
adc
sub
mov
pop
xchg
push
int3
retf
push
xchg
jne
sub
push
mov
pop
dec
shl
jecxz
dec
cmp
dec
push
(bad)
cmps
fs
sbb
xchg
and
mov
push
mov
pop
jmp
dec
or
push
mov
jo
xor
xor
int3
dec
adc
repz
mov
jns
xchg
xchg
mov
ss
lea
pop
sub
ret
call
add
lods
fidiv
mov
and
std
sub
push
mov
sbb
ror
test
sub
inc
pusha
sub
cmps
sub
sbb
or
(bad)
cld
cld
sub
inc
jno
push
inc
(bad)
dec
or
cli
or
cmp
sbb
aaa
fild
xor
lahf
xor
cdq
not
popa
and
mov
cwde
dec
dec
sti
scas
fist
stos
mov
mov
mov
xchg
sbb
jp
(bad)
sbb
out
dec
divps
outs
mov
push
or
js
add
mov
in
push
and
sahf
sar
ss
mov
xchg
clc
loopne
bound
ss
fisub
into
lahf
sahf
cmp
imul
dec
(bad)
mov
test
mov
cs
dec
xor
mov
or
data16
call
enter
in
jbe
les
icebp
int3
mov
fst
mov
jecxz
inc
sar
adc
ins
push
lds
adc
mov
in
jns
cmp
(bad)
iret
mov
push
imul
test
out
fwait
xor
aam
mov
lods
mov
jmp
(bad)
dec
leave
loope
aad
lods
in
cmp
in
inc
pop
mov
cmp
scas
cmps
mov
lods
cmp
jb
push
(bad)
cmps
fs
test
jmp
out
adc
pop
dec
stos
bound
jmp
call
outs
adc
(bad)
jecxz
and
mov
repnz
dec
call
arpl
and
or
xchg
iret
out
retf
jns
inc
clc
(bad)
mov
imul
mov
retf
jno
ins
push
dec
mov
dec
(bad)
mov
inc
xchg
rcl
or
cmp
in
fisttp
stos
mov
into
and
aad
xchg
icebp
cmp
sbb
jns
and
pop
push
mov
test
or
pop
pop
mov
sub
inc
sbb
xor
fwait
mov
and
enter
test
mov
inc
pop
jle
mov
and
inc
gs
lods
pushf
js
inc
fsub
gs
xor
arpl
mov
lods
cmp
jb
xor
fs
sbb
lock
cmp
je
cmp
pop
movs
int
jmp
mov
sahf
xor
ret
mov
movs
sub
stos
leave
(bad)
jg
sti
ins
ins
jle
ss
or
and
jnp
(bad)
(bad)
and
rcr
in
cwde
xchg
sbb
push
in
es
inc
adc
std
(bad)
pop
pop
sbb
mov
js
sbb
mov
pop
fincstp
lods
mov
pop
ins
call
outs
in
inc
push
dec
and
cmp
push
call
test
out
neg
sbb
(bad)
std
out
rol
hlt
adc
test
sub
and
fld
mov
ins
push
bound
ss
hlt
sbb
(bad)
dec
das
adc
lahf
in
cs
mov
scas
mov
push
cmp
ja
jae
xchg
shl
xor
imul
frstor
mov
gs
pop
test
scas
xor
ret
mov
push
aad
mov
or
sbb
jae
sar
fstp
arpl
pop
out
inc
into
stos
iret
cli
movs
inc
adc
inc
pop
push
cmp
mov
mov
push
(bad)
or
iret
and
out
xchg
mov
dec
sub
add
sub
mov
mov
loop
xor
in
jp
rcl
push
(bad)
xlat
lea
inc
mov
jge
jl
leave
lea
not
sbb
or
retf
xor
jo
xchg
or
pusha
lods
pop
int3
das
xchg
sub
or
int
pushf
sar
iret
sahf
dec
adc
js
xor
pusha
lock
sub
sub
cmp
je
jbe
adc
mov
and
ret
pop
sbb
inc
jbe
sbb
mov
mov
and
cs
retf
shl
hlt
imul
dec
mov
es
xchg
pusha
cmps
sbb
outs
inc
ret
mov
es
inc
retf
retf
jg
dec
cmp
fiadd
xchg
sub
mov
lods
lods
fs
jl
push
pop
or
sub
retf
adc
aas
fmul
call
addr16
push
mov
fs
sub
mov
mov
sbb
lock
aam
inc
add
in
imul
repnz
xchg
fild
mov
xchg
mov
push
mov
inc
push
pop
out
cmp
sbb
mov
lock
les
paddsb
fsubr
add
outs
mov
dec
test
sub
mov
popf
cli
sbb
adc
xchg
out
in
dec
mov
lds
loop
or
xchg
icebp
cmp
push
pop
jge
mov
mov
jecxz
call
aas
inc
xchg
in
inc
dec
inc
cli
or
adc
mov
sar
pusha
in
clc
xor
mov
inc
fbstp
es
gs
add
int
pop
add
cmp
inc
pop
pop
in
xor
xchg
loop
dec
(bad)
outs
stos
mov
jnp
pop
mov
xchg
inc
test
adc
fmul
ret
sar
aad
aaa
sbb
sbb
and
or
and
mov
daa
xor
test
xchg
imul
das
jae
mov
sub
dec
pusha
push
add
xor
inc
xchg
out
mov
cld
push
dec
arpl
shl
sub
xor
das
inc
or
stos
xchg
mul
jl
inc
dec
mul
or
or
div
pop
sbb
add
sub
mov
es
stc
cmp
scas
stos
cmp
xor
adc
sahf
push
mov
jne
aaa
in
inc
push
sti
mov
shl
not
shl
and
mov
leave
sub
jmp
iret
push
dec
outs
lds
jp
or
jno
lods
jg
pop
leave
xchg
mov
pop
xchg
out
inc
cmps
xchg
and
dec
or
cmp
inc
sar
aaa
test
aam
test
fsubrp
cs
stos
mov
lock
push
inc
jl
hlt
fisub
js
jecxz
dec
scas
jge
push
cld
mov
stc
mov
std
push
outs
xor
dec
cmc
adc
bound
stos
mov
cwde
clc
jle
out
cdq
mov
sbb
cmp
daa
mov
add
loop
jbe
(bad)
jecxz
fadd
dec
push
(bad)
push
int3
addr16
sbb
adc
iret
mov
loop
inc
ds
(bad)
(bad)
mov
pop
mul
push
add
pop
fdiv
cdq
pop
gs
pop
iret
pop
mov
loopne
fucomip
adc
bound
dec
jge
das
popa
idiv
add
add
or
dec
pop
mov
mov
dec
sub
xchg
push
xchg
mov
into
in
jmp
lds
mov
push
or
xor
mov
push
fadd
inc
pop
aam
test
ret
xlat
jae
loop
add
jp
out
leave
int3
mov
popa
scas
fsubr
pop
mov
ret
(bad)
lahf
mov
or
int3
lods
mov
repnz
add
aas
movs
pop
iret
icebp
into
(bad)
shl
in
shl
icebp
and
adc
popf
cdq
mov
sbb
sahf
loopne
and
and
pop
push
dec
jmp
mov
xor
test
mov
xchg
xchg
mov
mul
dec
inc
ror
cwde
mov
sub
inc
gs
xchg
ins
out
jb
push
repz
xchg
scas
fdivr
push
mov
jmp
push
pop
icebp
aaa
in
xor
lods
das
mov
sti
or
add
cli
or
jb
sub
jmp
fwait
xchg
push
sbb
dec
sbb
scas
xchg
jne
outs
dec
sbb
or
arpl
outs
icebp
(bad)
jmp
dec
add
jno
hlt
inc
jle
mov
xchg
movs
push
add
fs
xchg
mov
gs
inc
lods
or
push
sub
dec
pop
mov
add
cs
sub
and
mov
lahf
jae
mul
mov
xor
sbb
fidiv
ret
push
jle
leave
out
mul
pop
jbe
pushf
cs
not
ja
mov
jns
inc
mov
xlat
inc
jb
dec
and
call
int
jb
mov
cmps
scas
xlat
outs
jae
ficom
inc
mov
mov
jg
inc
jns
mov
int
mul
sbb
mov
or
cs
faddp
push
lds
(bad)
loope
imul
(bad)
push
sar
sbb
push
and
fwait
xchg
dec
shr
xor
sbb
int
(bad)
out
out
(bad)
test
dec
movs
loope
xor
mov
popf
(bad)
cmp
adc
in
cmc
sub
int
push
cwde
xchg
pop
(bad)
jmp
jns
cmp
xchg
lds
fstp
rol
outs
xchg
push
aam
ins
mov
outs
std
pop
pop
add
dec
jmp
adc
push
pop
lods
dec
in
fnstsw
aas
xchg
lods
xor
into
imul
fdiv
push
xor
xchg
movs
xor
retf
cmp
xchg
mov
sti
xchg
mov
or
add
popf
push
jo
out
sub
mov
sub
dec
adc
sub
jge
movs
das
into
sub
ja
ret
mov
stos
pop
sbb
fisttp
fs
loopne
mov
daa
mov
repz
pop
jne
sub
sti
push
(bad)
fadd
(bad)
inc
ds
push
add
ins
mov
xchg
and
repz
pop
js
jecxz
(bad)
mov
cs
jecxz
cmp
mov
fidivr
in
ins
jbe
sub
sti
cmp
fs
int
mul
loop
popa
aam
pop
mov
retf
loopne
scas
cli
pusha
out
xor
push
add
js
stc
sahf
loope
loope
cmp
and
rcr
mov
mov
inc
repz
cdq
cmp
lock
sbb
mov
mov
sub
jg
xchg
jno
mov
ret
stos
jmp
out
and
int3
sbb
push
xchg
mov
cmp
not
inc
ins
xor
mov
push
out
push
mov
hlt
lods
push
dec
adc
mov
repnz
call
outs
fs
push
arpl
add
iret
push
retf
imul
retf
xchg
setbe
xor
hlt
xor
add
scas
sar
rol
rcr
jle
(bad)
push
fisub
fdivr
cmp
sub
mov
test
fisub
mov
call
test
add
(bad)
push
mov
sub
loope
in
cmps
popa
pop
pop
cmp
add
(bad)
cmp
jmp
retf
mov
push
cmp
sbb
dec
jg
sahf
cmp
pop
ja
inc
daa
mov
jge
inc
(bad)
(bad)
iret
mov
lea
pusha
cld
adc
enter
jmp
cmp
imul
mov
es
adc
int3
fstp
and
mov
hlt
fcom
cmp
mov
shl
mov
repnz
jno
call
or
ja
pop
loope
inc
sbb
bound
dec
into
fdivr
adc
adc
cmp
movs
in
jbe
sti
pop
sbb
mov
mov
stos
adc
in
sub
lods
fistp
fdivr
das
push
pop
jb
pop
mov
out
popa
je
mov
cmps
repz
xchg
je
or
imul
inc
inc
rol
addr16
in
sti
adc
dec
enter
rol
xchg
jo
mov
xchg
jbe
aam
retf
in
std
sub
call
imul
hlt
add
inc
scas
test
sbb
pop
fcmovne
push
fistp
adc
fmul
dec
stc
stos
jo
inc
pop
enter
jno
pop
lods
and
xor
out
nop
in
ja
out
aas
add
pop
adc
js
mov
addr16
loopne
(bad)
inc
retf
loope
add
adc
push
sub
xchg
scas
xchg
movs
das
dec
xor
xor
(bad)
loopne
imul
ins
stos
adc
and
mov
mov
sub
mov
leave
rol
jmp
sub
jae
(bad)
cmc
jne
sbb
cli
loope
add
call
push
dec
lahf
jbe
push
cmp
cld
leave
adc
sub
(bad)
std
cmp
add
xchg
dec
push
in
mov
(bad)
stos
fdiv
mov
ds
imul
mov
xchg
xchg
xor
cmc
stos
stos
adc
cs
jg
add
jmp
popf
in
mov
mul
inc
pop
bound
ds
inc
adc
(bad)
cmc
retf
cmp
sub
xchg
leave
lods
in
(bad)
adc
aaa
lahf
inc
retf
jl
dec
shl
or
inc
arpl
rcl
enter
sub
adc
cld
rol
in
mov
in
sbb
stc
enter
cmp
fadd
sub
mov
pop
lea
or
adc
fwait
test
sti
sti
fdivrp
cld
mov
xchg
(bad)
(bad)
mov
push
out
and
cld
in
push
lahf
dec
outs
cli
and
push
das
lods
lods
shr
clc
(bad)
mov
cmps
cmp
scas
fucom
out
or
adc
sub
es
mov
adc
movs
xor
sub
sahf
xor
jb
jno
push
ret
outs
inc
frstor
pop
adc
mov
popf
push
cmp
outs
mov
adc
cmp
push
jl
jns
dec
cmp
jne
mov
xlat
ret
pop
jle
cmp
push
imul
pop
mov
push
leave
dec
cs
movs
mov
les
dec
fwait
xchg
mov
retf
push
mov
loope
adc
mov
out
xchg
sbb
jg
jle
cld
test
add
int
ret
push
push
cdq
mov
pop
dec
bound
dec
jo
movs
inc
repz
rol
and
mov
es
push
sub
pop
jle
cs
inc
pop
xchg
or
push
pop
mov
cmp
pop
addr16
aad
dec
jno
lahf
xchg
push
mov
mov
(bad)
pop
xchg
pop
or
out
and
lock
cli
sahf
std
jmp
push
lea
mov
mov
fwait
pushf
inc
lock
pop
pop
xchg
mov
imul
jne
icebp
iret
pushf
sbb
pop
lahf
jbe
lea
pusha
loopne
adc
mov
mov
push
cmp
es
outs
test
fs
jae
data16
add
(bad)
retf
add
iret
into
fs
je
mov
cmc
fs
cdq
lods
jb
in
sbb
lock
mov
mov
and
fstp
movs
repz
sbb
cmps
jecxz
repnz
pop
jbe
xchg
pop
pusha
fnstcw
in
cmp
call
mov
mov
in
mov
std
movs
mov
cmp
leave
in
add
lods
mov
test
je
popa
inc
mov
repnz
mov
aaa
lock
xchg
ror
or
fsub
jae
movs
xor
sbb
cmovle
add
movs
push
out
inc
bound
mov
or
dec
repnz
jns
xor
int3
lods
stos
mov
(bad)
fnstenv
in
sbb
ror
arpl
adc
mov
ins
ficomp
aaa
out
mov
cwde
add
shl
or
popf
out
cmp
clc
aam
xchg
(bad)
sbb
into
or
adc
mov
cwde
add
test
lds
fwait
rol
sbb
mov
mov
fidivr
jl
mov
imul
mov
lods
(bad)
xchg
pop
mov
call
sbb
in
sbb
aas
and
popa
in
shl
push
ret
sbb
iret
inc
pop
xor
dec
push
out
sub
stos
mov
add
nop
cwde
mov
dec
(bad)
test
les
add
cmp
in
mov
pop
and
mov
hlt
sar
sub
test
cmps
inc
in
pop
adc
mov
lods
lods
pusha
in
cld
sub
es
lock
push
scas
xchg
jmp
leave
fsubrp
xor
mov
or
test
inc
das
mov
sbb
stc
pop
neg
xchg
jecxz
int
and
mov
sbb
popa
daa
ret
jle
and
sbb
adc
test
int3
aam
cwde
aam
mov
into
and
push
das
test
and
inc
ret
fisttp
rcl
adc
das
mov
xchg
pop
or
fnclex
(bad)
idiv
adc
rcl
mov
and
(bad)
addr16
push
mov
jmp
mov
int3
add
ret
jg
sub
loope
gs
mov
add
adc
fsubr
ds
jl
push
mov
data16
addr16
adc
and
sbb
stc
jecxz
lea
mov
jp
mov
jl
pop
stos
repnz
add
out
retf
call
shr
mov
pop
mov
fisub
push
das
into
sbb
jno
or
aaa
xor
mov
scas
fdiv
test
enter
int
mov
adc
adc
and
pop
(bad)
and
js
daa
int3
sahf
gs
fcomp
jl
ins
adc
push
lea
mov
push
movs
xor
push
add
push
scas
jns
xlat
test
(bad)
and
pop
(bad)
out
mov
jge
dec
cli
xchg
in
or
inc
outs
sub
imul
cmps
mov
lods
adc
mov
jmp
out
adc
mov
sti
out
sub
fstp
retf
add
int3
dec
mov
add
pop
vmresume
addr16
pop
in
adc
dec
out
sub
and
add
cmp
sub
or
nop
mov
stc
retf
fdivr
test
mov
(bad)
(bad)
mov
dec
mov
cmps
lds
bound
retw
rcl
into
sbb
add
fcom
mov
mov
pop
push
fld
fcom
mov
out
pop
repz
mov
shl
mov
aaa
pop
popa
popa
fnsave
mov
clc
fwait
xchg
test
shl
fs
ficom
mov
and
cli
adc
cmc
add
icebp
int
and
cmp
inc
std
push
cmc
dec
and
sbb
data16
mov
dec
xchg
pusha
jmp
xchg
or
adc
mov
ss
(bad)
pop
sahf
fsub
xchg
push
rcr
jns
push
call
scas
rcr
mov
cdq
fmul
hlt
inc
fsubr
sti
fs
push
adc
addr16
cmc
mov
inc
xchg
das
leave
(bad)
pop
mov
cmp
lahf
jp
inc
mov
mov
or
pop
ins
daa
stc
aas
xchg
mov
mov
outs
test
inc
jecxz
ins
push
or
sbb
pop
push
bound
jbe
fmul
adc
inc
fcom
push
mov
push
daa
cmp
pushf
xchg
push
repnz
ficom
outs
(bad)
in
xor
xchg
int3
mov
xor
cmc
sub
iret
aam
enter
sbb
jl
aas
pop
clc
daa
dec
hlt
push
xor
adc
int3
int
push
add
shl
mov
lds
unpckhps
lea
cmp
in
mov
push
gs
aam
loope
ds
test
mov
outs
call
fmul
mov
cli
pop
fist
or
pop
mov
ficomp
or
(bad)
push
out
mov
(bad)
sbb
pop
enter
and
shr
sahf
ins
mov
(bad)
xor
mov
out
mov
imul
push
mov
call
fldcw
xchg
lahf
les
sbb
push
jmp
mov
mov
(bad)
mov
and
(bad)
fistp
int3
inc
popa
or
mov
enter
out
out
in
add
mov
cmc
mov
fdivp
lods
sbb
outs
mov
sub
in
js
lahf
mov
popf
inc
aam
pop
daa
push
mov
mov
add
fistp
dec
sub
jns
inc
jnp
xchg
xchg
sbb
dec
aaa
enter
mov
test
or
cmp
sub
ret
(bad)
jno
xchg
jbe
mov
lahf
jmp
inc
pushf
add
jg
cmp
icebp
xor
rol
xor
js
clc
jmp
xor
sub
inc
mov
(bad)
loopne
jae
lods
(bad)
bound
bound
sbb
ret
sub
mov
and
daa
mov
sti
pusha
ins
outs
mov
inc
out
adc
popf
pop
mov
es
jnp
pop
or
add
push
jmp
mov
mov
add
inc
daa
aas
xlat
dec
out
popf
mov
pop
jbe
inc
and
sti
adc
inc
push
dec
scas
push
pop
dec
pop
dec
bound
mov
mov
jno
pusha
dec
jno
fst
jo
cmp
mov
out
mov
aad
sub
adc
xor
mov
out
pop
fdivr
jnp
or
cmp
dec
fucomi
das
adc
loope
xchg
and
adc
jg
jne
(bad)
and
out
test
jnp
jp
jns
retf
xchg
fsubr
pop
inc
sbb
add
sub
(bad)
cmp
call
mov
popa
fnstsw
outs
popf
(bad)
adc
sbb
int
push
inc
xchg
aaa
sub
mov
sbb
cmps
mov
lock
cli
xchg
xor
mov
inc
pop
mov
(bad)
mov
and
ds
mov
loop
adc
xchg
mov
imul
outs
sub
stos
or
scas
lods
sbb
lahf
cmc
stos
ja
sub
cmc
dec
and
out
mov
das
aaa
rol
xlat
test
cld
xor
pop
push
lods
jno
sub
bound
sbb
mov
mov
pop
mov
push
cmp
lahf
lods
call
mov
cmovp
xchg
or
aas
test
jae
and
fisttp
lahf
nop
add
dec
jmp
ret
push
cld
sbb
mov
sbb
fistp
xor
jne
ud0
and
xlat
es
fisttp
sbb
xchg
cmps
bound
popa
mov
sub
cmp
xor
and
mov
inc
es
mov
and
cmp
js
mov
imul
out
jmp
push
jnp
mov
cmp
mov
cmp
iret
pop
addr16
std
ins
bound
push
stos
fadd
inc
xor
mov
ret
shr
mul
jge
imul
aad
cli
mov
mov
xor
sub
nop
fwait
enter
into
rol
and
mov
mov
or
add
test
test
adc
shr
js
pop
xchg
xchg
pop
cmp
cs
fsub
movs
cmps
mov
adc
adc
jae
add
and
cmp
les
clc
pop
(bad)
sar
or
xchg
scas
les
xchg
jg
loop
in
xor
lds
cmp
or
mov
mov
cwde
cmp
hlt
cwde
cmp
xchg
add
pop
jb
jecxz
adc
scas
mov
xor
dec
out
xor
xchg
mov
rcr
inc
xor
clc
mov
inc
pop
cs
push
hlt
lock
mov
push
mov
jbe
xor
inc
mov
mov
cmp
movs
rcr
dec
test
(bad)
inc
popf
icebp
pop
retf
cmp
sub
mov
sub
mov
cmp
xchg
shl
inc
test
(bad)
retf
cmp
pop
dec
out
xor
mov
test
(bad)
popf
and
fs
push
cmp
test
sbb
loope
pushf
inc
call
jno
frstor
fistp
jne
addr16
cmp
mov
xor
xchg
aas
aas
aad
repz
scas
clc
dec
add
pop
or
xchg
cmc
test
sub
push
xor
shr
lea
fild
gs
xor
fnstcw
int3
jle
pop
enter
jl
xor
loopne
ss
movs
adc
push
rol
push
div
lock
pop
clc
or
xor
pusha
add
mov
pop
out
mov
pushf
jmp
pop
(bad)
mov
push
xchg
or
call
dec
mov
mov
(bad)
es
sbb
dec
test
mov
adc
pushf
ds
mov
retf
(bad)
shl
sub
inc
cmp
pop
jbe
mov
pop
repz
push
sub
add
inc
shr
push
sub
dec
ret
push
adc
cmps
pusha
dec
or
test
out
mov
cmps
in
rcr
xor
jbe
dec
sti
out
scas
adc
sahf
cmp
hlt
retf
and
mov
fldenv
cmps
retf
pop
sub
pop
add
pusha
repz
mov
jmp
and
and
mov
fst
shr
dec
inc
sub
jnp
(bad)
rcl
inc
dec
mov
ds
pminsw
mov
adc
mov
inc
jle
mov
cmp
mov
clc
or
sub
and
cli
mov
dec
inc
jl
dec
sub
mov
push
rol
xchg
je
cmp
mov
xor
sbb
(bad)
out
add
mov
inc
movs
mov
xchg
mov
clc
sub
pop
mov
in
xchg
hlt
jns
aas
mov
daa
fcom
jecxz
mov
inc
cmp
inc
sbb
xchg
shr
movs
out
fcmovne
or
ret
lea
mov
cmc
aad
pop
mov
mov
adc
into
imul
adc
pushf
das
popa
add
inc
sbb
push
mov
addr16
inc
nop
or
mov
je
rol
add
xor
popa
push
inc
jo
pop
xchg
enter
in
adc
dec
xlat
adc
push
rcl
cmps
mov
add
mov
stos
jns
mov
jno
push
push
or
fbstp
stc
cdq
ins
add
jmp
clc
dec
pop
into
mov
out
pop
adc
cmps
pop
(bad)
retf
std
inc
jmp
add
xor
icebp
mov
xchg
inc
mov
mov
js
adc
iret
scas
mov
mov
pop
dec
aas
xor
and
xor
pop
mov
retfw
fwait
imul
inc
add
mov
pop
popf
lock
push
add
jl
aam
hlt
pushf
sbb
push
mov
jae
das
jbe
das
lahf
mov
jmp
fs
jo
xchg
sub
pop
mov
adc
lea
mov
cmp
and
ss
add
fstp
add
pop
mov
fisub
or
mov
inc
push
div
call
xchg
push
cmp
xchg
out
push
scas
cmp
loope
inc
push
fnstenv
and
xchg
fsub
out
cld
jmp
mov
(bad)
or
das
mov
sti
mov
popa
inc
dec
dec
shl
mov
fnstenvw
add
imul
bnd
sbb
mov
stos
rcl
shl
lea
push
and
mov
pop
movs
xchg
xor
mov
push
fsubr
div
cmp
gs
leave
jmp
hlt
aam
out
cmps
jbe
xor
sbb
xchg
test
rcr
pop
push
xor
in
arpl
shr
scas
lock
add
clc
adc
jne
xor
nop
scas
sar
mov
push
xor
sti
nop
xchg
cmp
fwait
mov
int3
popf
out
mov
pop
aas
out
xor
ins
scas
inc
enter
dec
jl
push
and
push
cs
xchg
sahf
int3
jle
and
popf
es
(bad)
test
test
and
in
fs
cmovle
push
pushf
fwait
es
jno
or
xchg
jns
xor
aad
fwait
dec
lea
outs
dec
mov
mov
hlt
adc
sbb
hlt
in
sar
in
lds
push
aad
rol
mov
fcomp
xchg
rcl
or
mov
dec
ret
test
jp
cmps
xchg
sub
in
xchg
repz
lods
mov
sub
adc
pop
sbb
sub
int
add
shl
aam
cmp
sar
arpl
jbe
iret
retf
js
fs
sbb
sbb
xor
sub
clc
sbb
and
sub
das
push
mov
out
inc
cmp
xchg
sahf
int3
out
leave
cmp
fist
mov
test
cmp
pop
push
mov
inc
jmp
push
aaa
xchg
jb
hlt
outs
cld
sahf
push
push
scas
movs
mov
(bad)
cmp
sbb
push
shl
adc
add
dec
jno
mul
xchg
icebp
fstp
(bad)
ret
xchg
adc
popf
dec
aas
mov
cmp
xor
and
sbb
xor
push
cli
cmp
js
div
mov
out
stc
(bad)
cmp
inc
mov
jle
mov
mov
ret
cld
iret
and
hlt
cmp
shr
or
or
imul
test
loopne
mov
pop
jae
xlat
lea
mov
hlt
(bad)
sbb
leave
pop
outs
inc
jge
xlat
sti
retf
jg
sub
lods
daa
jmp
xchg
mov
fild
sahf
es
arpl
dec
mov
lock
je
push
retf
xor
ins
inc
fsubr
dec
xor
les
jle
xlat
(bad)
outs
aad
jne
stc
das
xchg
dec
dec
xchg
(bad)
stos
aas
popf
test
int
(bad)
dec
cli
jmp
push
inc
dec
mov
adc
outs
pop
mov
sbb
mov
and
sahf
dec
lahf
add
fld
and
scas
xchg
sbb
cld
jo
movs
ucomiss
cld
adc
adc
sub
xor
movs
sbb
mov
mov
jge
ins
or
jb
sub
movs
fxch
mov
scas
mov
leave
jmp
push
sbb
ret
popa
repz
mov
and
(bad)
ds
adc
cmps
outs
pop
stc
into
inc
dec
adc
inc
inc
es
ret
call
repz
jecxz
outs
mov
lods
dec
js
sub
mov
lods
fisub
and
outs
(bad)
movs
and
call
out
mov
arpl
aaa
enter
sub
sbb
dec
inc
jno
mov
arpl
add
pop
int
adc
push
add
xchg
clc
fsubr
lahf
dec
pop
jnp
mov
xor
pop
mov
jecxz
xchg
cli
xor
imul
adc
icebp
mov
in
sbb
in
jg
fbstp
dec
pop
lock
xchg
gs
(bad)
imul
lods
dec
adc
inc
loopne
sub
mov
push
int3
int3
inc
sahf
sub
scas
shr
adc
sub
mov
cmp
shr
xor
outs
and
fisttp
ffreep
xor
dec
and
xchg
movs
test
ror
movs
gs
xchg
(bad)
fcomp
pop
xchg
and
mul
idiv
adc
adc
or
(bad)
ins
cli
(bad)
push
cmp
(bad)
fadd
mov
jo
loope
icebp
add
cmp
rcr
xchg
mov
sahf
sub
push
sub
fnstsw
push
rcr
xor
pop
ret
cmp
and
stc
cmc
dec
test
xchg
and
es
ss
fisub
mov
sbb
ins
mov
jle
or
call
je
sar
mov
mov
mov
mov
jmp
and
sbb
mov
push
outs
jb
cmp
and
cmc
fild
xor
pop
out
sub
xor
lods
inc
test
loop
add
sbb
pop
pop
ror
call
xchg
or
ja
mov
loope
sbb
mov
scas
std
test
mov
cdq
xchg
push
mov
int3
add
jmp
call
add
(bad)
cmp
fsub
sub
pop
daa
pop
iret
test
icebp
lahf
gs
adc
and
cmp
cmp
ror
out
jecxz
cmp
iret
mov
dec
rol
nop
dec
xor
stos
sbb
fcomi
jae
jnp
sbb
xchg
sbb
fdiv
loopne
movs
push
mov
or
adc
push
pushf
jecxz
cmp
mov
pop
add
lods
adc
test
(bad)
(bad)
fimul
ss
fnstsw
repnz
fdiv
push
adc
inc
push
popf
movs
mov
or
rcr
mov
retf
push
cmp
mov
jns
outs
xchg
pop
dec
inc
mov
jg
rol
imul
ret
sti
(bad)
pusha
xor
fcomp
sub
or
dec
fisttp
ja
in
push
icebp
in
xor
xlat
loop
fs
out
mov
into
sbb
test
add
mov
lods
mov
shl
into
dec
xchg
repz
je
jnp
pop
and
rcr
sub
addr16
rcl
jle
dec
sti
in
rcl
pop
push
pop
cld
mov
dec
or
in
scas
shl
test
je
mov
lods
jl
pusha
dec
lods
mov
loopne
fstp
loop
out
std
or
or
dec
and
push
inc
mov
push
fwait
pop
xchg
leave
inc
adc
or
push
xchg
lods
das
in
sub
mov
cmps
(bad)
(bad)
cmps
push
fist
xlat
mov
popf
(bad)
das
xchg
ja
std
ret
cmp
sbb
lods
or
scas
mov
inc
and
inc
inc
test
daa
sub
(bad)
mov
jmp
lea
ficom
pop
movs
add
inc
mov
push
shl
cdq
hlt
icebp
xor
jp
pop
popf
push
iret
(bad)
jmp
mov
adc
les
out
mov
cmps
test
faddp
packsswb
and
cmp
push
pop
mov
mov
jo
inc
mov
and
jge
dec
fidivr
or
out
sahf
sub
and
mov
mov
mov
add
test
in
hlt
scas
mov
sub
add
rcr
sub
(bad)
into
cld
or
or
mov
cdq
ret
or
dec
test
mov
das
cli
ret
jo
sbb
stc
stos
push
int
jae
jl
pop
and
mov
addr16
jne
sbb
dec
fstp
inc
lods
push
cmp
fisttp
xchg
data16
lds
jbe
jbe
mov
mov
ja
pop
push
(bad)
fisubr
sbb
shl
call
fild
nop
mov
icebp
adc
inc
out
mov
fisub
nop
mov
or
cwde
dec
cmps
sub
(bad)
mov
ins
mov
mov
ja
cmc
ja
jecxz
jle
mov
pop
int3
pop
push
imul
and
and
jl
or
movs
dec
es
lds
repz
push
sbb
addr16
mov
jb
dec
adc
mov
and
adc
cdq
xchg
lock
xchg
leave
pop
mov
out
add
push
ss
ficom
sub
cmps
fucomip
inc
leave
sahf
icebp
in
cwde
dec
and
pop
inc
adc
mov
sbb
enter
shl
popa
cdq
popa
shr
inc
(bad)
jg
sub
jns
fwait
outs
mov
cmp
xchg
inc
fs
dec
adc
xor
cmp
int
jbe
sti
(bad)
sar
xchg
ins
mov
loopne
adc
(bad)
cmc
pop
out
mov
push
je
shl
mov
jns
jg
sbb
add
cmp
ds
add
dec
xchg
in
movs
jp
imul
call
call
fmul
push
push
lods
ss
dec
repz
pop
pop
mov
stc
icebp
leave
repnz
test
mov
ror
push
pop
mov
xor
mov
(bad)
int
dec
(bad)
arpl
lahf
lds
adc
jnp
cmc
xor
loope
hlt
push
inc
repnz
test
gs
sbb
adc
scas
int
sti
aad
jns
sahf
push
lahf
sub
push
push
ins
ret
mov
ja
out
add
or
sub
pop
xchg
rcl
popa
dec
cli
and
push
sub
sub
bound
sti
std
in
jae
or
or
shl
push
das
xor
xchg
jns
xchg
lea
mov
cmp
in
mov
movs
adc
sahf
dec
jo
add
inc
add
push
sub
pop
pop
mov
cmp
in
push
mov
mov
pop
cmp
jecxz
adc
scas
(bad)
loop
(bad)
rcl
mov
xchg
sar
xchg
add
jp
inc
inc
pop
pushf
mov
fidivr
js
ror
mul
mov
movs
jne
(bad)
cdq
dec
and
fisttp
pop
repnz
hlt
add
js
cs
jmp
and
in
idiv
mov
test
mov
ja
push
sbb
xchg
xchg
jnp
shr
sbb
dec
push
rcr
pusha
ret
cli
add
scas
js
fisttp
ja
push
and
adc
xor
imul
jmp
(bad)
fsub
cmp
lea
aad
shufps
sbb
add
xor
adc
mov
in
push
imul
adc
sti
jmp
dec
mov
out
outs
icebp
dec
iret
cmp
and
popa
add
cmp
dec
push
fbld
retf
xor
std
inc
dec
jo
popf
xchg
lds
pop
dec
xchg
fcmovb
mov
data16
js
push
or
out
ficomp
or
outs
add
push
outs
push
mov
mov
cmp
inc
in
pop
loopne
loope
cmp
scas
xchg
movs
jle
(bad)
aaa
maxps
inc
or
lods
add
dec
jae
add
add
pop
sbb
enter
out
shl
push
pop
cmp
cwde
mov
mov
in
call
je
jbe
fcomi
mov
dec
dec
xor
popa
ret
ins
test
or
pop
sti
bound
jns
iret
sahf
mov
mov
(bad)
leave
jns
fwait
into
push
cmps
or
movs
hlt
mov
aaa
ss
imul
mov
jno
push
scas
popf
pop
pop
aam
add
adc
jns
mov
js
push
mov
fbld
(bad)
cdq
(bad)
out
xchg
loop
cmp
push
outs
pop
(bad)
mov
shl
sahf
and
and
int3
fwait
cdq
xchg
gs
(bad)
loopne
mov
jo
ror
(bad)
mov
movs
cmps
adc
push
adc
jno
stos
jbe
lods
vbroadcastss
dec
cwde
out
jecxz
xlat
or
jle
stc
div
xchg
jge
sub
adc
push
repz
addr16
adc
cmps
sbb
lods
mov
jmp
repnz
jecxz
push
push
fmul
popf
or
cld
and
sub
lea
mov
and
mov
sub
mov
addr16
movs
or
and
imul
pop
cmps
addr16
or
ret
daa
mov
test
cmps
mov
xor
das
arpl
mov
sub
stos
inc
aad
push
inc
mov
shr
inc
enter
imul
jb
(bad)
or
mov
in
inc
mov
push
popf
jb
jl
js
mov
sahf
ins
test
mov
or
lahf
mov
jp
movs
fmul
push
mov
adc
in
pusha
mov
pop
dec
pop
imul
sub
sub
adc
pop
jne
popa
push
pusha
rol
mov
mov
sub
ds
out
add
push
(bad)
cmp
jmp
js
sbb
cmc
add
fs
sub
xchg
mov
fidivr
inc
add
div
es
dec
adc
xchg
sub
adc
movs
sahf
xchg
xchg
push
dec
sub
jbe
mov
pop
aad
xchg
xor
mov
mov
add
mov
jb
dec
or
and
xor
js
pop
jb
add
sub
lock
jne
or
and
xor
out
dec
sbb
les
xchg
jp
add
sbb
push
in
dec
leave
cdq
aaa
arpl
icebp
retf
sahf
and
cld
jle
pop
dec
sar
test
test
(bad)
mov
std
fdivr
jge
daa
xor
les
enter
mov
mov
sub
adc
enter
xchg
(bad)
(bad)
je
pop
inc
adc
stos
sbb
xor
dec
(bad)
cmc
push
dec
movs
or
test
clc
cmc
jg
repz
call
fldcw
cdq
rcl
xchg
mov
pusha
cdq
jo
sub
rcl
push
arpl
cld
add
cli
shl
repz
adc
cmp
aaa
stc
pop
cdq
cmps
div
mul
int3
inc
fst
nop
fiadd
fidivr
sub
jge
idiv
dec
cmp
lds
test
es
add
inc
mov
cli
adc
pop
retf
(bad)
call
pop
les
jge
lahf
push
sub
push
push
in
int
jne
cmp
cdq
ficom
xchg
addr16
ficomp
imul
pop
xor
push
or
shl
(bad)
neg
jae
lds
jno
rol
bound
enter
dec
adc
daa
xchg
push
pushf
dec
or
xchg
dec
ins
call
ds
rcr
mov
sti
xor
jbe
push
pop
pop
aad
and
pushf
int
jecxz
repnz
aam
or
shr
add
(bad)
out
inc
inc
mov
fs
adc
in
daa
pop
cmp
push
sti
ja
adc
sbb
jae
inc
sub
mov
ja
inc
mov
into
daa
push
in
fidiv
adc
daa
xchg
mov
jno
loope
jecxz
mov
fcom
cmps
aaa
mov
fmul
sub
gs
out
call
lock
sub
shr
inc
xchg
les
sub
push
mov
enter
sbb
loope
fst
cmps
jle
arpl
out
mov
(bad)
int3
jb
in
push
xor
mov
push
fs
inc
mov
aam
daa
lea
mov
cli
test
pop
mov
mov
int
sahf
xchg
repz
dec
test
mov
sub
and
lods
cmp
cmp
sbb
lea
cmp
jo
out
iret
inc
dec
xchg
aad
jb
inc
aaa
shl
cmp
sbb
inc
bound
cmp
mov
cmp
lahf
shr
outs
cmp
add
movs
or
add
repz
pop
dec
fistp
pop
jmp
and
xchg
loopne
rcr
inc
cmp
dec
aam
add
int
mov
mov
dec
mov
mov
jecxz
out
jp
imul
and
mov
dec
ret
aas
cmc
out
mov
mov
xlat
loop
sbb
retf
not
out
jmp
sub
leave
mov
push
fst
pop
push
fisub
mov
pop
push
jl
jae
shl
movs
lods
mov
push
cmc
xchg
repnz
in
stos
inc
push
push
icebp
xor
and
je
adc
in
xor
push
or
call
movs
mov
lahf
in
and
fistp
xor
mov
fisubr
xor
inc
fist
lods
inc
(bad)
cmp
pop
mov
call
in
mov
std
leave
and
xchg
jle
mov
leave
mov
clc
loope
dec
mov
push
out
leave
add
xchg
jl
push
iret
out
push
inc
lods
sbb
out
push
xchg
adc
sbb
daa
or
outs
test
mov
ins
and
in
shl
enter
xchg
retf
or
test
out
fld
sub
cdq
sub
aam
mov
repnz
or
pop
sub
sub
sub
mov
(bad)
mov
fisubr
fwait
cmps
sahf
sub
and
mov
cmp
(bad)
cld
pop
pop
mov
mov
mov
xor
inc
mov
cmp
fcom
mov
mov
cmp
clc
mov
xor
aas
out
movs
or
xchg
sub
xchg
xor
mov
sbb
dec
stc
jg
pop
movs
cmp
pop
movups
mov
in
xor
pop
add
sti
out
(bad)
inc
in
cmps
hlt
add
mov
outs
xor
aad
sub
aaa
cld
cmp
sbb
push
mov
(bad)
aad
jl
inc
frstor
fistp
or
loop
js
push
xchg
mov
bnd
pusha
popa
push
cmp
rcr
sbb
ins
fisubr
mov
cmp
pushf
xchg
sub
and
clc
add
(bad)
(bad)
stc
pop
ins
mov
int3
das
int
adc
xchg
into
(bad)
pop
iret
js
jge
(bad)
test
imul
fwait
retf
xor
out
pop
es
dec
mov
mov
dec
int
mov
shl
pushf
add
inc
mov
les
in
pusha
add
repz
or
lds
jmp
xchg
push
lods
push
scas
mov
je
mov
(bad)
jle
rol
fucomp
pop
loope
push
xchg
sbb
sbb
lea
(bad)
cmp
int3
pusha
jmp
add
xchg
(bad)
dec
outs
dec
add
xor
(bad)
ss
add
fsub
test
and
rcr
sahf
mov
mov
mov
and
sub
pusha
data16
xor
or
jne
mov
movs
add
aaa
xchg
into
jb
fcmovnbe
and
mov
lea
mov
ret
cmps
shr
(bad)
jno
mov
mov
add
pop
aad
std
jne
les
jb
pop
dec
movs
mov
repz
mul
xchg
imul
cdq
rcl
std
mov
in
sub
dec
sub
call
fcomp
ins
sar
mov
cmp
das
(bad)
jecxz
in
jge
or
sbb
add
daa
jmp
xor
inc
mov
cmc
shl
and
lock
pop
cmc
xor
cmp
push
loop
scas
push
mov
mov
mov
push
sbb
(bad)
or
mov
loopne
movs
in
sti
mov
add
stc
cmc
add
call
add
xchg
arpl
inc
xor
mov
push
lahf
and
or
fld
(bad)
sub
sbb
and
sub
adc
mov
sbb
std
mov
loop
sub
or
add
call
aad
aas
jle
pushf
stos
(bad)
(bad)
call
mov
js
mov
push
loope
xlat
pop
in
or
movs
add
cmp
loop
pop
mov
mov
adc
aam
loop
xlat
xchg
mov
into
js
adc
lock
xchg
and
jg
stos
fimul
mov
outs
rol
psrlq
mov
pusha
adc
mov
push
ret
cmp
mov
popa
push
adc
pop
or
fs
popa
inc
xor
sub
into
dec
xor
inc
push
in
jo
mov
fcmove
div
mov
out
push
sbb
and
popf
dec
push
nop
cmp
outs
fldenv
push
movs
inc
movs
xchg
rol
sub
das
outs
xchg
add
popf
jae
jmp
aam
pop
xor
inc
jecxz
stc
push
push
and
sbb
adc
mov
mov
hlt
sub
add
adc
sbb
mov
(bad)
icebp
fstp
outs
les
and
icebp
jmp
mov
into
pop
mov
es
inc
call
imul
movs
rcr
push
jno
ror
or
sbb
mov
mov
mov
cmps
js
shr
and
dec
mov
push
nop
mov
xor
and
(bad)
movs
jp
out
pop
push
push
mov
in
pop
outs
(bad)
data16
(bad)
fwait
jne
xor
(bad)
stos
jb
push
mov
pushf
popa
out
adc
sub
stos
jmp
dec
sar
sbb
push
scas
ins
dec
stos
int
retf
mov
(bad)
jb
pop
test
test
sub
cmp
nop
and
loopne
loop
pop
ins
adc
les
loopne
ss
pusha
push
inc
jle
popf
cmps
jno
cld
mov
push
clc
mov
rol
sti
ficom
cmp
or
rcr
xchg
shr
ror
rol
dec
inc
mov
push
lods
repnz
xor
fstp
fild
jb
pop
scas
mov
scas
fisub
fst
hlt
jo
mov
xor
repz
sub
xchg
xchg
or
mov
push
shl
loop
adc
inc
sub
lock
imul
test
dec
out
add
enter
sbb
icebp
push
jne
inc
dec
fcmove
pop
lods
out
sbb
stos
mov
xor
push
lock
jp
das
loope
sbb
add
xor
ss
test
push
ret
adc
shl
arpl
std
data16
repnz
pop
mov
movs
mov
push
dec
jo
jbe
loopne
retf
(bad)
mov
lods
xor
and
jge
rol
or
cdq
pop
fwait
in
iret
push
bound
arpl
pop
xor
les
jne
xor
fwait
cmp
inc
xchg
int3
frstor
popf
sbb
icebp
aam
fnstenv
iret
cld
(bad)
shr
lock
jns
adc
lahf
xor
call
cmp
add
mov
mov
retf
outs
ffree
mul
mov
or
xchg
cmp
mov
(bad)
ds
jne
sub
cli
dec
fwait
ret
sbb
dec
leave
test
rol
je
add
push
std
mov
push
(bad)
pop
or
fcmovnb
test
das
leave
repnz
scas
and
push
ds
call
rcl
dec
movs
xchg
fnsave
mov
or
mov
xor
jo
outs
dec
in
je
cmp
hlt
xchg
add
cmp
test
mov
(bad)
push
shl
jne
fdivr
xchg
pop
fst
sub
cld
int3
test
(bad)
in
cs
jmp
sub
shr
cmp
sub
xor
push
jno
adc
in
mov
stc
in
jmp
jle
dec
mov
and
adc
sbb
pop
dec
out
pop
orps
inc
out
rcl
pop
mul
mul
pushf
ficom
sti
lahf
test
dec
call
in
jl
shl
or
or
push
jge
mov
(bad)
call
mov
and
xchg
inc
xchg
mov
aad
enter
outs
push
jp
jns
lods
jp
in
xor
ja
xor
call
or
mov
or
sbb
imul
stos
iret
clc
inc
(bad)
outs
rcr
ins
cwde
scas
lahf
mov
imul
dec
push
sbb
les
mov
mov
inc
loop
sbb
pop
push
pop
cmp
xchg
movs
aad
idiv
mov
sbb
ins
jg
gs
inc
out
xor
test
xacquire
out
adc
rcr
in
in
pop
ins
lock
rcl
mov
mov
add
ds
adc
popa
pop
sbb
mov
bound
enter
sbb
mov
or
(bad)
aaa
cli
test
jmp
dec
push
adc
cdq
pop
(bad)
ja
push
mov
adc
shl
sbb
sar
popa
jge
xchg
mov
sub
fldenv
loope
daa
cli
test
(bad)
loope
fmul
fstp
mov
cmp
cmp
jg
add
jg
pusha
push
in
loopne
mov
cmp
call
adc
jo
and
(bad)
retf
aam
fwait
repnz
imul
sti
xor
les
xchg
outs
aaa
sbb
add
popa
jp
xor
and
sub
call
(bad)
mov
pop
jle
xchg
ds
dec
inc
push
neg
ss
mov
mov
ja
cmp
pop
test
and
push
call
mov
in
das
inc
jbe
sbb
test
test
mov
int
shl
mov
and
and
js
push
push
lds
js
and
cmp
or
dec
push
daa
in
or
xchg
and
dec
(bad)
sub
stc
inc
dec
xlat
cmp
repz
mov
cmp
lea
cmc
aad
push
cmp
push
pop
xchg
xchg
lds
lahf
xchg
out
jmp
test
daa
and
xor
adc
mov
repnz
mov
scas
add
(bad)
cmp
and
xor
jp
pop
xor
xor
add
mov
jbe
fnstenv
fstp
or
push
or
lods
movs
xchg
or
jns
adc
pop
push
inc
mov
jnp
mov
addr16
dec
mov
push
andnps
inc
pop
xchg
sbb
retf
jg
mov
add
jp
add
pushf
cmp
adc
add
mov
mov
adc
out
scas
mov
(bad)
pop
adc
mov
shl
movs
inc
pandn
mov
jae
push
out
jns
xchg
test
mov
in
jle
repnz
cmps
cdq
sub
cdq
dec
aaa
out
xchg
scas
pop
sahf
call
(bad)
mov
mov
xlat
dec
jle
jl
inc
inc
or
push
mov
ja
js
mov
addr16
pop
cmp
mov
cmp
dec
addr16
ror
out
loop
and
inc
xchg
add
xchg
enter
push
cs
jp
repz
into
mov
fsincos
nop
pop
dec
iret
push
das
sbb
imul
es
or
sub
xor
shl
cmp
pop
jne
cmp
in
movs
mov
pop
add
mov
das
lods
(bad)
dec
das
ret
adc
mov
inc
test
movs
and
stos
jge
xor
imul
adc
mov
mov
fwait
popf
pop
pop
dec
fnsave
icebp
(bad)
test
aam
(bad)
mov
push
call
gs
mov
mov
arpl
data16
jle
mul
mov
and
inc
dec
(bad)
mov
adc
aaa
xor
lods
stos
cwde
jle
rol
xchg
mov
jp
pop
push
adc
stos
mov
shl
sbb
mov
ss
aaa
mov
dec
pop
fwait
retf
xchg
dec
cmp
mov
xor
stos
adc
ret
sub
aas
mov
xlat
xor
and
data16
jle
push
xor
inc
ret
int
or
or
push
pop
and
aaa
add
mov
mov
ficom
add
movs
shl
cmp
and
ret
leave
adc
ret
pushf
sbb
push
popa
cmp
stos
fimul
dec
into
out
(bad)
pusha
dec
dec
fsubp
(bad)
adc
outs
push
jmp
add
fcomp
sub
mov
movs
dec
mov
idiv
imul
mov
sub
mov
dec
aam
pop
in
fild
cmp
mov
inc
leave
adc
lock
mov
xor
nop
stc
mov
lock
push
add
add
fst
int3
cmp
lahf
das
fist
add
xor
out
lock
lahf
js
inc
add
sar
jae
xor
add
(bad)
mov
icebp
mov
mov
jae
jns
scas
push
or
pop
retf
les
imul
ja
pop
icebp
cmp
mov
or
repz
jle
je
or
adc
or
xchg
nop
es
jo
add
retf
fistp
sub
icebp
shr
repz
aad
push
xor
or
fdiv
push
rcr
int
shl
mov
rol
shr
ds
loop
inc
cmovnp
push
ret
mov
repnz
mov
mov
ins
pop
ins
xor
call
addr16
(bad)
mov
inc
xor
inc
inc
push
out
cmp
sahf
sub
xor
out
push
mov
movs
jl
fwait
sti
(bad)
scas
clc
mov
mov
jle
mov
sub
or
sbb
into
sbb
aad
or
fs
and
mov
mov
call
jbe
jo
int3
jge
mov
cld
pusha
cmp
xchg
jmp
call
loope
xor
cmps
cld
stc
dec
pushf
jecxz
imul
stos
mov
lods
adc
push
jmp
add
aad
xchg
call
mov
stc
aad
add
xor
jb
and
mov
test
xor
adc
clc
movs
jle
xchg
mov
sar
xlat
push
gs
loopne
push
cwde
fist
and
xchg
in
dec
imul
inc
sbb
mov
mov
clc
test
ja
outs
jecxz
and
ja
sub
ins
in
cld
repz
push
fsub
ins
loopne
outs
pop
cwde
mov
xor
xchg
adc
mov
aaa
inc
repz
lds
ins
adc
sahf
mov
cmc
xchg
inc
ja
pushf
call
sub
outs
pop
cmp
sub
sbb
stos
dec
test
mov
test
cmps
enter
jnp
ds
js
mov
pop
out
jo
(bad)
fisttp
jl
lods
xor
(bad)
and
sub
pop
sub
sub
dec
rcl
xor
cdq
idiv
sub
and
adc
ficomp
out
mov
test
int3
adc
aaa
out
adc
push
icebp
sbb
cmp
fsubr
xchg
movs
outs
lods
or
ss
loop
sti
dec
adc
stos
jmp
mov
idiv
(bad)
xlat
push
inc
popf
dec
pop
(bad)
shl
pop
loopne
scas
imul
xchg
test
or
sub
popf
dec
loope
or
fsub
mov
das
and
out
enter
out
idiv
mov
(bad)
call
dec
mov
xor
adc
jmp
in
test
dec
lds
push
add
add
adc
out
es
jae
mov
cmp
mov
and
push
mov
(bad)
in
sub
adc
ins
iret
ins
inc
enter
pop
std
mov
xor
xor
add
test
movs
inc
ds
loope
mov
xchg
js
fsubrp
movs
sbb
fsubp
ret
clc
mov
ret
pop
add
cmp
inc
or
repz
cmp
mov
pop
sub
call
out
lahf
sub
jg
pop
sub
pop
arpl
xor
sbb
mov
aaa
or
int3
cmp
xor
and
fwait
inc
mov
push
dec
in
adc
mov
cli
fdivr
cs
pop
fadd
aaa
rcl
daa
daa
mov
nop
cmp
rcr
outs
mov
cdq
add
stos
dec
cmp
inc
push
ret
and
retf
sub
icebp
lods
pop
mov
in
and
retf
in
jnp
mov
xor
aam
enter
adc
in
xor
jmp
leave
iret
dec
adc
test
dec
movs
mov
out
mov
shl
mov
arpl
(bad)
push
mov
jnp
retf
mov
ret
sbb
fsub
es
push
cdq
test
std
in
pop
les
jl
sbb
clc
or
shr
mov
xchg
sbb
adc
adc
idiv
cmp
clc
xor
inc
fdivrp
loopne
jp
push
xchg
ins
push
pop
int3
push
push
xor
fisttp
outs
jle
xor
pop
addr16
mov
sti
(bad)
adc
fdiv
outs
lods
mov
mov
jbe
nop
jge
push
call
sbb
out
lock
iret
pop
add
daa
imul
(bad)
cmp
rcr
jecxz
test
mov
(bad)
in
cmp
jne
shl
mov
dec
fsubr
ins
cmc
and
(bad)
ss
ins
mov
push
push
and
add
iret
mov
inc
jae
mov
add
aaa
and
repz
push
mov
test
adc
es
jmp
pop
mov
push
adc
js
mov
pop
adc
hlt
imul
loop
sbb
dec
stos
cli
jns
jbe
sbb
call
fmul
dec
mov
mov
call
clc
shl
inc
fdivr
fcmovnb
mov
and
pushf
imul
jge
in
iret
mov
popf
retf
(bad)
xchg
rcl
stos
aam
jg
and
xchg
mov
jecxz
stos
pop
daa
mov
xor
mov
aas
daa
(bad)
in
adc
jmp
div
jmp
cli
push
adc
fidivr
pushf
into
mov
add
call
int3
mov
mov
mov
mov
icebp
or
sub
xor
inc
bound
std
fwait
xchg
outs
les
int3
aam
mov
adc
enter
cmps
scas
inc
es
call
pop
enter
dec
cmp
arpl
add
dec
add
int
aas
loop
lods
dec
stc
sub
sar
pop
xchg
sbb
mov
cld
mov
ins
pop
mov
xchg
jmp
jmp
and
(bad)
push
jp
sub
inc
sub
sub
push
mov
sub
adc
mov
daa
leave
clc
add
loopne
ret
dec
inc
xor
daa
adc
mov
repnz
imul
call
shl
ins
or
sbb
std
jmp
jne
add
sub
leave
mov
retf
rcr
scas
mov
xor
test
adc
retf
sbb
nop
fist
cmp
ret
xor
pop
xchg
dec
sti
nop
pop
pop
jle
repz
adc
inc
ret
mov
mov
mov
dec
rcl
adc
sti
sahf
in
mov
mov
xor
push
ret
mov
jnp
stc
imul
nop
or
movs
or
setnp
pop
jmp
dec
scas
pop
jmp
xchg
(bad)
pmulhuw
lock
daa
inc
ret
jae
gs
push
(bad)
sbb
pop
test
aad
out
or
mov
je
mov
or
push
(bad)
aad
adc
xchg
aas
enter
push
ret
mov
pop
out
inc
loopne
inc
dec
stc
dec
mov
xchg
mov
call
aas
ror
and
test
pop
push
out
cdq
ror
gs
arpl
repz
push
push
inc
lods
nop
fiadd
popf
in
ror
retf
xchg
jge
add
sahf
out
cmp
out
jnp
push
lds
jge
cmp
xchg
push
scas
xor
ins
xor
mov
ins
sub
movs
push
outs
lahf
sbb
scas
cmps
mov
repnz
in
jne
je
into
mov
cmp
(bad)
out
mov
mov
rcl
pop
adc
push
add
(bad)
sti
mov
adc
jp
das
ret
repnz
js
repnz
mov
xchg
leave
stc
add
pop
shl
inc
cmp
mov
push
and
pop
mov
movs
loopne
mov
mov
adc
adc
test
mov
icebp
cld
dec
popa
(bad)
or
mov
jns
lahf
stos
xlat
loope
mov
lea
clc
mov
adc
aas
sbb
sbb
and
push
loope
cmps
sub
sbb
push
pusha
daa
aaa
push
cmp
push
sbb
jae
iret
pusha
push
(bad)
xchg
int
enter
dec
pop
hlt
mov
jae
scas
adc
adc
std
out
(bad)
aam
mov
adc
in
test
leave
jmp
push
cdq
loop
xchg
cmp
stos
jne
adc
push
into
pop
ret
or
cdq
sahf
and
mov
add
movs
enter
ins
gs
push
int
sbb
mov
cmovb
push
and
xchg
push
loop
pop
pop
fld
cs
and
and
xchg
std
push
cmp
cs
mov
jnp
push
sbb
push
stc
bound
push
push
repz
and
or
jle
sahf
ror
mov
adc
addr16
sbb
cld
cs
(bad)
xchg
mov
or
sub
push
fisubr
pop
js
xchg
in
cs
xor
out
fstp
inc
pop
mov
aas
fwait
and
inc
lea
dec
pop
dec
lea
adc
mov
xchg
fild
jmp
pop
inc
ds
frstor
out
sbb
cdq
imul
or
adc
popf
jle
xor
shl
fistp
lahf
mov
or
into
lds
adc
inc
shr
jge
sub
call
push
add
cmp
aad
jle
ja
xchg
pop
fsub
mov
mov
(bad)
call
imul
push
cmp
leave
std
mov
dec
int3
push
mov
or
jl
jnp
mov
adc
cwde
pop
not
and
fmul
sti
mov
int3
inc
xlat
or
out
lds
jbe
rcr
push
xor
test
(bad)
and
and
inc
imul
xor
or
and
mov
xlat
das
hlt
adc
clc
jmp
call
push
jae
test
cdq
stos
into
ficomp
xchg
inc
aad
fst
jb
inc
dec
gs
(bad)
jbe
cwde
add
mov
sbb
pop
mov
push
(bad)
repnz
xlat
in
xor
add
push
pop
fdiv
bound
pop
(bad)
jg
cs
movs
inc
test
inc
xchg
aaa
std
(bad)
cs
or
out
aaa
inc
fadd
arpl
aad
mov
sub
jge
rcl
sub
push
jbe
aam
dec
loope
push
lea
xor
enter
popf
cmps
es
fprem
les
add
sbb
rcl
adc
jg
add
add
mov
pushf
mov
enter
pushf
dec
inc
dec
mov
and
imul
inc
push
mov
stos
jbe
data16
xchg
cmp
shl
adc
imul
mov
rcr
dec
fisttp
outs
imul
mov
add
outs
scas
and
jae
mov
lock
xchg
lds
or
outs
mov
inc
add
push
cmp
clc
mov
jmp
pop
loopne
pop
xchg
imul
in
out
cdq
xor
sub
xor
lahf
div
js
fild
icebp
aaa
jnp
aas
bnd
pop
test
nop
adc
cs
fwait
aas
add
aad
jecxz
stos
nop
or
addr16
addr16
or
adc
cld
cli
sti
and
inc
push
jge
pop
adc
sahf
ficomp
xchg
daa
mov
and
lods
ins
and
add
lahf
sahf
cs
xchg
out
inc
push
pop
adc
and
inc
push
fs
fistp
imul
movq
call
push
adc
ret
mov
xor
sti
jge
ret
out
cmps
sbb
jg
js
push
leave
pop
mov
fdiv
mov
sub
push
sbb
mov
dec
mov
shl
pop
cdq
xor
mov
aaa
mov
xlat
ins
imul
stos
inc
pop
add
out
xor
shl
pop
jl
mov
pop
jg
sti
dec
nop
dec
push
jg
gs
scas
pop
ficomp
test
sti
(bad)
fs
cmps
repnz
stc
addr16
xor
jmp
movs
inc
push
test
cld
imul
mov
aaa
sub
push
and
jl
(bad)
div
rol
sub
inc
mov
jns
pusha
clc
fs
mov
pop
call
mov
lds
adc
and
mov
mov
sub
or
cmp
mov
mov
inc
adc
icebp
or
aad
jle
(bad)
stos
mov
data16
int
jg
add
adc
in
ins
xchg
jecxz
and
push
mov
(bad)
daa
xchg
cwde
retf
sbb
pop
sbb
push
cmp
adc
inc
dec
daa
jne
mov
dec
dec
xchg
(bad)
clc
mov
test
inc
mov
jecxz
das
inc
in
jmp
and
leave
push
pop
cs
in
cld
or
movs
fdiv
cs
movs
or
in
jo
xchg
fild
inc
iret
dec
loopne
out
(bad)
leave
cmp
adc
jo
mov
xor
adc
out
sbb
push
mov
mov
xchg
cwde
in
popa
adc
fcmovu
in
dec
aaa
mov
mov
and
cmc
xor
aad
pop
test
out
cmc
clc
inc
dec
test
mov
leave
wbinvd
shr
(bad)
push
cmp
test
xlat
cs
(bad)
add
or
popf
jb
sub
fld
fnstsw
popf
test
mov
and
xchg
gs
js
mov
mov
xchg
icebp
test
inc
and
scas
inc
jno
int
add
mov
push
mov
push
lea
dec
pop
fmul
sti
fs
test
sbb
mov
jl
cwde
push
(bad)
mov
and
sbb
adc
(bad)
imul
cmp
adc
xchg
in
jle
adc
add
stc
jne
mov
sub
das
stc
fmul
dec
pop
repnz
inc
mov
cmp
ret
out
xchg
inc
and
gs
sbb
pop
sbb
fsubp
xchg
repz
je
data16
stos
add
push
mov
je
xchg
sbb
xchg
jle
mov
xchg
push
dec
push
xor
dec
gs
xor
sub
mov
jmp
sub
jo
out
jo
cmp
fdiv
sub
aam
lahf
cdq
stc
shr
pop
cmp
sahf
inc
bound
out
lods
dec
xor
fmul
pop
jecxz
scas
icebp
nop
mov
inc
call
push
sub
cdq
scas
adc
cmps
arpl
or
inc
repnz
jle
mov
enter
jo
xchg
push
in
or
inc
jo
(bad)
pop
mov
xor
in
fwait
xchg
add
mov
mov
shl
inc
mov
hlt
mov
mov
sub
clc
stc
sbb
out
lds
ret
xlat
mov
dec
gs
es
adc
cld
in
mov
mov
ds
pop
adc
sub
stos
lea
cdq
inc
mov
push
add
sbb
jge
imul
add
cld
je
jbe
stos
xchg
mov
inc
test
dec
mov
call
ds
dec
xchg
mov
inc
fs
xchg
arpl
ins
xor
adc
cmp
aad
icebp
arpl
jae
fwait
jmp
lock
bound
stos
rcl
jne
or
std
jo
jnp
dec
fist
stc
pop
mov
scas
mov
xchg
lods
jecxz
ins
dec
push
sub
mov
int
lods
lods
adc
jmp
js
dec
mov
sbb
fld
inc
pop
in
mov
fiadd
sub
std
das
mov
dec
sub
push
cwde
add
test
test
ja
lock
push
out
jmp
sbb
idiv
or
repnz
shl
cmp
inc
test
cwde
mov
or
out
inc
sbb
repnz
out
adc
add
xor
rol
mov
lahf
scas
adc
(bad)
repz
(bad)
adc
add
loop
in
in
jl
mov
lds
mov
ret
mov
jnp
movs
(bad)
out
mov
les
push
xor
cdq
fwait
repz
in
enter
push
gs
dec
pop
dec
jns
movs
repnz
out
aam
and
sti
jne
push
aaa
and
adc
jle
dec
jno
cmps
mov
fwait
int3
jmp
rol
xor
push
xor
in
out
out
dec
pop
pop
cwde
test
test
fwait
sbb
inc
xor
xor
push
call
sbb
sar
jb
fstp
adc
mov
hlt
ret
call
jle
xchg
inc
jbe
movs
neg
and
mov
mov
push
mov
jge
sti
imul
sbb
out
hlt
stos
mov
xchg
pop
mov
mov
mov
jge
adc
sub
inc
xchg
jo
lock
jb
gs
inc
dec
nop
jl
ror
jno
fnsave
ds
mov
mov
sub
or
stc
stc
rol
push
push
ins
cmp
push
addr16
add
dec
mov
add
sahf
xor
cdq
mov
fs
sub
ds
addr16
dec
dec
enter
cli
or
push
and
out
add
mov
shl
imul
xor
sar
cdq
not
icebp
clc
cmp
sar
jne
xor
or
loope
movs
aam
or
stos
mov
movs
push
clc
inc
and
add
div
out
sub
loopne
sbb
push
add
cmp
and
mov
fld
dec
push
call
mov
stos
test
pusha
mov
data16
movs
ret
adc
pusha
fsub
(bad)
call
push
cmc
loop
inc
in
sti
(bad)
loopne
mov
loop
xchg
pop
mov
in
push
mov
pop
repz
mov
or
pop
lock
xchg
cmps
test
xor
xchg
aaa
mov
mov
push
pop
xor
std
in
in
xchg
pop
cmp
dec
aaa
pop
aam
inc
push
add
xchg
call
rcr
pop
jp
inc
mov
mov
or
hlt
xor
lock
and
pop
mov
not
pop
or
stos
ret
xor
in
repz
cs
jg
ret
(bad)
and
bound
jnp
jae
pop
push
or
and
int3
mov
push
ins
cmp
inc
sbb
xchg
ss
or
shr
xor
sub
setge
(bad)
outs
adc
xchg
daa
fwait
mov
inc
pop
cmc
(bad)
jle
push
dec
jecxz
gs
scas
pop
(bad)
inc
xor
mov
xor
in
std
lods
jne
lods
loopne
push
stc
push
lods
add
into
sbb
xchg
mov
sub
fist
leave
test
(bad)
xchg
push
and
sub
and
test
in
sub
xor
dec
clc
das
popa
scas
cmps
aam
(bad)
stos
sbb
sbb
mov
xor
es
mov
test
sub
xchg
out
xchg
leave
or
pop
dec
in
add
inc
push
jg
adc
push
xor
popf
jo
jae
dec
push
sbb
jb
fldcw
stos
xor
pop
retf
stc
les
outs
and
dec
fs
mov
jg
lock
cmp
inc
push
enter
xchg
jo
xchg
mov
sbb
mov
jg
stos
mov
dec
rol
jl
add
ins
fwait
mov
fisub
adc
shr
mov
gs
inc
jae
sub
jnp
xchg
cmp
arpl
mov
pop
dec
out
repz
dec
cmp
ret
sbb
jns
adc
dec
adc
sub
icebp
mov
inc
and
out
shl
into
aaa
jecxz
fmulp
into
test
jl
mov
test
xor
inc
scas
sub
adc
aaa
push
pushf
xor
push
imul
lds
(bad)
jg
ins
std
push
lods
leave
arpl
out
jnp
inc
mov
repz
pusha
xchg
inc
mov
push
cli
xlat
out
or
lahf
mov
dec
mov
ror
bound
pop
gs
into
test
sub
fadd
(bad)
and
test
jl
inc
out
leave
pushf
mov
out
sbb
lock
mov
es
xchg
pop
jecxz
or
iret
ret
retf
add
call
cdq
jle
push
pusha
fwait
push
and
cmps
mov
jne
mov
aad
call
dec
test
popf
xchg
push
movs
fsub
adc
in
jb
int
xchg
fbld
mov
add
or
neg
adc
dec
push
es
fldcw
add
out
leave
add
jle
call
mov
repz
push
adc
cmp
sti
ja
addr16
cmps
add
push
mov
mov
push
add
and
out
lods
mov
into
daa
mov
mov
dec
movs
mov
shr
jg
mov
ins
push
inc
mov
pop
adc
xor
int3
or
dec
xor
cmp
je
lea
sbb
pop
sub
xchg
sahf
sub
jne
in
jns
inc
fwait
int
cwde
dec
jmp
daa
daa
or
or
pop
loop
mov
mov
or
xchg
jl
iret
pop
imul
data16
ror
daa
mov
sbb
push
ins
sub
cli
dec
add
(bad)
outs
imul
xchg
lea
jmp
movs
xor
test
push
dec
jae
jp
xor
cdq
or
xchg
push
cmp
in
dec
xchg
or
je
mov
mov
inc
jl
ss
jle
push
push
imul
imul
call
inc
jmp
jle
ds
sub
push
test
stc
in
stc
enter
adc
add
xor
(bad)
jmp
sbb
cmp
retf
aas
lahf
(bad)
out
dec
cmps
jnp
call
push
arpl
mov
push
mov
stc
or
jmp
inc
and
mov
or
jno
clc
out
mov
adc
repnz
jle
es
lea
mov
pop
shr
mov
pop
fdivr
sub
mov
xchg
push
cmp
xor
mov
add
ret
and
add
mov
and
sub
inc
mov
cmp
push
xchg
(bad)
xchg
xor
rcl
je
jbe
sub
ins
mov
cmp
push
pop
mov
mov
mov
lahf
dec
and
xchg
adc
imul
into
xlat
jmp
sti
pop
adc
fisubr
repz
int
bound
pop
imul
dec
lea
jne
(bad)
jmp
mov
sub
cld
cld
xchg
fwait
inc
loopne
pop
lea
in
aam
mov
pop
lea
xlat
out
dec
push
nop
stos
cmps
inc
or
xor
pop
xor
xchg
pop
sbb
and
xchg
mov
sbb
fdivr
fwait
cwde
test
jno
or
pushf
cld
sbb
cld
cs
jnp
clc
adc
aam
add
rcr
(bad)
mov
aam
fimul
in
xor
inc
cmps
pop
fst
mov
and
sbb
sbb
out
cmp
pop
and
clc
fwait
mov
fsubr
lods
sub
lock
pushf
adc
scas
add
jo
push
ss
aam
sub
jmp
mov
pop
dec
(bad)
stos
ret
mov
mov
outs
cmp
scas
adc
and
lds
fcmovnbe
movs
jge
mov
xchg
mov
je
outs
arpl
shl
mov
xchg
mov
sar
pop
sbb
mov
movs
mov
not
dec
es
jle
cmp
shr
dec
cli
repz
and
jns
sahf
dec
mov
dec
sbb
das
cmp
inc
mov
test
je
arpl
and
pusha
mov
scas
push
lods
(bad)
stos
ficomp
and
push
cmc
stos
xchg
movs
popf
rol
movs
mov
push
pop
cmp
mov
dec
push
xor
and
add
jne
hlt
test
iret
dec
cwde
push
hlt
(bad)
or
nop
xchg
add
cmp
and
jo
imul
mov
xor
pop
je
jbe
mov
pop
mov
jno
jae
jmp
jecxz
aaa
or
xchg
adc
xor
xor
gs
sub
lea
(bad)
adc
or
(bad)
int3
call
xlat
sbb
(bad)
mov
add
or
pop
jbe
lea
int
loop
je
ins
jmp
mov
in
ins
pop
adc
loopne
pop
jl
dec
mov
(bad)
lea
mov
and
leave
movs
xlat
not
imul
imul
fsubr
mov
arpl
add
fcomp
(bad)
mov
xor
xor
mov
cmp
jnp
std
mov
xchg
lds
cli
mov
jg
and
fst
jle
jmp
pop
sub
pop
jmp
push
xchg
pop
enter
or
(bad)
xchg
adc
push
dec
inc
sub
cmp
push
mov
scas
stc
pop
sub
shl
mov
adc
and
lds
mov
sub
mov
ins
push
outs
outs
retf
cmps
mov
stos
fwait
xor
fnstcw
push
fist
fcomp
dec
jns
mov
and
clc
xchg
movs
je
sub
shl
nop
int
shl
jmp
push
mov
cdq
test
into
rol
rcr
push
inc
jmp
adc
cli
ss
jbe
fcom
in
repnz
imul
sar
daa
sets
cmp
in
fstp
inc
std
(bad)
sub
inc
outs
adc
lea
aam
push
arpl
loopne
mov
ss
lea
nop
aas
push
sbb
arpl
sub
adc
test
pusha
pushf
pop
pop
adc
cmc
or
inc
xor
xchg
fwait
mov
push
mov
dec
adc
or
clc
add
or
aad
(bad)
lock
(bad)
fcmovnb
push
xchg
fidiv
loopne
pop
xor
xchg
mov
jo
pop
cmc
mov
push
add
pop
fst
hlt
or
data16
add
into
mov
add
fwait
int3
(bad)
jmp
add
and
dec
pop
sbb
mul
push
sub
xbegin
adc
inc
adc
das
(bad)
je
jbe
jp
or
call
mov
es
imul
dec
int
dec
rol
ja
pop
xor
cmp
push
xor
xchg
jmp
xchg
loope
cmps
int3
out
cmp
add
push
dec
fwait
dec
mov
lods
sub
pop
pop
pop
or
pop
stos
dec
pop
in
outs
(bad)
cmp
mov
push
sti
ss
jae
in
ins
mov
rol
cld
jl
iret
sbb
out
add
mov
out
mov
out
aas
test
ja
mov
xor
fcom
cli
out
mov
pop
cmps
out
jne
fist
into
dec
(bad)
adc
fisttp
push
pop
in
pop
mov
add
ret
jmp
jno
fidiv
sub
cmc
mov
mov
sbb
repnz
dec
(bad)
dec
into
repz
cmps
sub
lods
mov
addr16
cmc
sub
dec
xchg
sbb
test
push
fwait
jmp
add
imul
loope
mov
jae
push
dec
dec
aaa
lea
daa
stc
cs
mov
adc
outs
inc
sbb
rcl
push
test
xor
mov
int
leave
js
and
scas
into
cmp
mov
mov
jbe
dec
jmp
cld
adc
inc
xchg
pop
mov
(bad)
adc
loopne
pop
xchg
mov
jge
ins
pop
test
clc
ret
movs
imul
mov
int
rcr
sub
in
xor
fdivr
inc
popa
push
shl
(bad)
imul
xchg
xor
mov
pop
fbstp
mov
jge
adc
cmp
mov
fild
fnsave
(bad)
in
pop
test
add
cli
mov
mov
outs
(bad)
inc
pop
jecxz
mov
pop
in
xor
daa
cld
xchg
call
push
jmp
sbb
mov
mov
pop
dec
ja
rcr
movs
mov
fdiv
ins
ficomp
pop
in
icebp
sbb
call
mov
jnp
pop
pop
mov
lods
jmp
mov
and
or
retf
pop
dec
iret
stos
mov
jecxz
repz
jno
sbb
int3
inc
adc
mov
adc
jmp
imul
in
cmc
mov
sub
mov
mov
cmp
jp
test
popa
enter
stos
push
stos
setg
mov
or
out
leave
jns
jmp
or
dec
addr16
push
loop
stos
mov
jge
jmp
jge
hlt
add
clc
jo
add
adc
addr16
sub
imul
jle
fbstp
dec
cmps
push
mov
sbb
cli
adc
adc
repz
cli
sub
cs
ficom
add
xor
push
mov
sbb
nop
sar
test
pop
jg
jecxz
mov
dec
mov
mov
dec
xchg
mov
out
aad
push
adc
and
stos
jae
mov
pop
cli
aad
sar
inc
cli
or
sub
xchg
pop
bound
jp
push
jmp
aad
push
scas
add
fisttp
repz
inc
mov
movs
mov
outs
out
add
stc
cdq
cmp
and
inc
dec
(bad)
sub
fmul
call
cdq
pop
ds
xchg
mov
idiv
push
in
or
push
add
mov
dec
jo
cmps
bnd
push
mov
es
sbb
fwait
(bad)
(bad)
add
and
push
pop
int
add
or
push
pop
lods
in
pop
cmp
dec
jecxz
jae
ins
cmp
out
jecxz
rcl
sbb
or
scas
imul
lock
movs
js
movs
mov
pop
push
jp
hlt
callw
int
cli
push
inc
iret
pop
jb
adc
mov
mov
ins
adc
arpl
ins
icebp
movs
push
push
das
pop
ds
aaa
das
sbb
jl
in
shl
or
mov
std
ins
(bad)
aam
cmp
sub
jae
fcomp
cmp
xor
inc
jge
add
fistp
leave
mov
cmp
fs
and
(bad)
cwde
mov
cmp
and
jecxz
mov
mov
cld
aam
retf
pop
fist
dec
popa
(bad)
mov
push
inc
inc
or
nop
fstp
fs
adc
pop
push
mov
jae
(bad)
in
add
ss
inc
xchg
sbb
xor
sub
repz
cmp
popf
add
test
jo
stc
push
shr
push
pop
add
fmul
in
popf
movs
lea
into
jns
and
mov
dec
cmp
inc
cmp
jb
push
les
mov
or
and
je
stos
jo
pop
fcom
cmp
idiv
cmp
jno
aam
jle
std
cmps
lds
retf
push
stos
cmps
jge
ror
and
test
stos
mov
pushf
cmp
int
xor
mov
and
inc
pmullw
push
mov
outs
mov
mov
push
jns
loop
pop
push
lods
xchg
mov
mov
test
outs
add
ins
inc
int
mov
pop
cmp
pop
dec
into
div
or
imul
xor
xor
pushf
xchg
mov
(bad)
jmp
inc
aad
jmp
popa
push
sar
outs
lock
add
adc
adc
mov
test
test
mov
and
shl
mov
xchg
(bad)
jl
jno
imul
std
jp
jge
stc
dec
sti
mov
mov
pop
inc
pop
mov
imul
retw
mov
dec
fdiv
test
cdq
test
js
adc
xor
cmp
rol
outs
adc
dec
jbe
inc
retf
(bad)
scas
jnp
add
mov
push
add
push
test
pop
jl
out
arpl
rcl
jb
psubsw
int3
aaa
and
mov
pop
pusha
ret
dec
push
cmp
out
dec
pop
cdq
int3
out
fidiv
mov
and
xor
push
mov
rcr
sub
fistp
jo
and
jge
pushf
(bad)
xlat
loop
mov
fsubr
daa
push
sbb
mov
dec
jns
mov
(bad)
or
mov
cli
lahf
jb
ret
ins
outs
scas
xchg
(bad)
mov
mov
mov
iret
pop
clc
inc
and
(bad)
sbb
xchg
or
test
mov
pop
ficomp
jns
adc
xor
imul
rol
dec
adc
mov
inc
stos
sbb
shl
cmc
xchg
(bad)
and
(bad)
jg
pop
call
rol
(bad)
out
push
xor
gs
pop
imul
and
stos
or
outs
test
add
ror
sahf
mov
xor
and
xor
fdivr
jl
xor
test
sbb
dec
cmp
retf
mov
xor
adc
jbe
jne
jmp
mov
cmp
out
cli
jp
add
push
push
inc
scas
bound
adc
xlat
fcom
add
cmp
or
mov
nop
popa
ins
mov
in
sub
dec
inc
pop
test
push
push
fdivrp
nop
or
cld
dec
(bad)
imul
jmp
retf
cdq
imul
out
xor
xor
(bad)
xchg
dec
cmp
retf
pop
movs
(bad)
shl
sub
jl
jns
std
pop
adc
inc
call
jo
repnz
fs
xchg
aam
cdq
push
(bad)
jmp
jmp
(bad)
repz
dec
mov
mov
cwde
xor
mov
add
mov
fidiv
dec
sub
rcl
(bad)
aad
enter
and
dec
iret
loop
cmps
aam
push
(bad)
call
pop
aaa
mov
stc
lods
(bad)
jmp
pop
xchg
aas
adc
push
ja
popf
jb
(bad)
adc
pop
call
xchg
jle
sbb
adc
cmps
mov
or
cdq
test
lea
in
push
mov
push
mov
inc
mov
jecxz
pop
mov
retf
or
mov
mov
in
dec
cmp
jmp
mov
xor
fisubr
icebp
lahf
sbb
call
xlat
ss
and
icebp
test
push
scas
pop
lods
xor
cmp
jl
enter
dec
retf
repnz
mov
dec
pop
dec
push
push
sub
jle
test
aaa
scas
cmp
pop
adc
push
sub
stc
sbb
daa
out
cmp
outs
xor
sub
push
pop
xchg
ror
dec
movs
pop
pusha
add
aad
cld
xchg
(bad)
pushf
cmp
sbb
push
mov
add
mov
pusha
les
xchg
cmp
pop
xchg
adc
xlat
cmc
dec
ss
ins
dec
xor
es
gs
sbb
pusha
je
jg
xchg
mov
mov
push
adc
jg
sub
mov
mov
add
mov
hlt
dec
xlat
inc
call
sub
int3
ror
sar
push
addr16
icebp
into
repz
add
mov
(bad)
mov
enter
mul
push
int3
in
lods
test
cld
inc
jle
stos
repz
jg
iret
jmp
add
loope
ins
mov
pop
rcr
cmps
and
xchg
push
in
mov
outs
mov
sbb
adc
shr
lods
pop
jnp
arpl
pop
fs
cmp
clc
xchg
push
cmp
push
pop
pop
mov
xchg
es
mov
xor
fild
mov
xor
jge
xor
xor
mov
ret
mov
es
ret
enter
aaa
sub
(bad)
loopne
aas
pop
fwait
xor
cdq
xchg
jge
push
jp
jnp
pop
xor
add
inc
xor
hlt
out
dec
hlt
in
inc
jns
imul
push
pop
push
or
in
push
pop
xchg
mov
mov
(bad)
out
cmp
pop
push
pop
cmp
sbb
sub
lahf
in
dec
push
dec
xchg
loope
test
aad
mov
fwait
hlt
dec
sahf
outs
mov
(bad)
mov
mov
repnz
push
dec
bnd
push
bound
loope
jle
xchg
inc
mov
pop
or
or
push
sub
cmp
push
xchg
jmp
fs
(bad)
jmp
cmps
ret
push
jno
enter
xor
push
leave
outs
rep
retf
xchg
pop
cmc
push
jmp
jnp
(bad)
daa
mov
adc
repnz
or
inc
icebp
cmps
adc
mov
lahf
pop
fbstp
dec
jle
pop
sbb
mov
arpl
mov
adc
sub
inc
test
adc
push
fwait
mov
adc
popa
(bad)
shl
clc
stos
sbb
fidiv
lar
dec
leave
pop
pop
lahf
mov
test
lods
mov
test
enter
inc
mov
(bad)
fisubr
push
or
pop
and
outs
jmp
jae
test
sbb
xor
aad
mov
mov
dec
daa
imul
jmp
xchg
sub
sbb
cmps
fcomi
retf
ins
std
cmp
mov
int3
(bad)
out
pop
push
sbb
out
jl
retf
mov
inc
jge
dec
out
and
pop
pop
das
dec
mov
mov
jg
pop
sub
stos
xchg
mov
push
add
inc
repz
mov
dec
leave
ror
adc
stc
push
dec
nop
cmc
dec
cdq
pop
sbb
mov
sbb
ins
mov
dec
jmp
loopne
(bad)
retf
pop
retf
je
cmps
enter
mov
adc
lds
add
je
dec
repz
mov
test
and
or
cmp
push
mov
shr
inc
jmp
ss
(bad)
aaa
mov
ins
or
cwde
jmp
outs
loopne
or
push
das
pop
out
fisubr
or
xchg
test
les
nop
lds
jmp
add
jmp
inc
data16
push
ss
lods
inc
mov
adc
add
jge
jmp
and
and
mov
cdq
fild
jnp
ror
add
outs
mov
imul
sbb
and
push
add
pop
lods
lods
cmp
daa
push
aad
popf
mov
fild
ja
and
xchg
jge
mov
mov
or
sub
sbb
and
inc
cdq
inc
add
xor
and
xor
fnstsw
jno
add
ror
xchg
neg
inc
pop
mov
cmp
ins
push
ds
loopne
fwait
arpl
test
es
xchg
mov
push
(bad)
fisub
(bad)
cwde
dec
jg
cmp
(bad)
adc
shl
cli
test
inc
movs
jecxz
cmp
rcl
cmp
push
or
dec
hlt
xor
push
cli
repnz
cs
jbe
add
sahf
push
shl
cmp
fidiv
and
push
pop
outs
cmps
cdq
std
push
jne
sar
stos
pusha
lods
mov
test
fist
(bad)
xchg
xchg
ss
and
arpl
jge
push
push
and
xchg
push
add
jl
xor
dec
sub
pop
cmps
sbb
fsub
popf
popf
cmp
mov
push
mov
push
(bad)
cmp
repz
xchg
lea
mov
dec
or
dec
nop
dec
adc
inc
pop
call
jecxz
iret
aaa
sub
dec
sbb
mov
add
xchg
adc
mov
xchg
nop
mov
or
in
sahf
getsec
push
(bad)
call
cmp
shl
mov
sub
movs
add
in
mov
jae
loope
pop
in
mov
xor
imul
adc
xchg
lods
cld
dec
test
nop
mov
sub
push
jae
call
ds
pusha
imul
in
adc
adc
push
mov
pop
ret
add
out
aad
or
pop
ss
adc
les
or
ja
out
(bad)
or
retf
adc
ret
aas
or
pop
(bad)
mov
repnz
out
sahf
ds
clc
add
js
cmp
jnp
pop
adc
shl
cmp
adc
aaa
add
inc
mov
sub
xor
in
daa
inc
inc
pop
lock
js
cld
pop
inc
hlt
(bad)
adc
adc
dec
mov
cs
out
inc
mov
imul
in
inc
or
clc
test
ss
inc
cmp
and
jp
xor
pop
stc
aaa
cli
outs
xchg
lock
mov
aad
sahf
jge
mov
adc
sbb
mov
fwait
sub
icebp
bound
int3
into
xchg
adc
xlat
das
out
sub
inc
mov
into
pop
sub
test
call
ret
repz
mov
clc
xor
push
mov
jge
rcr
cmps
loop
shl
jo
repnz
jbe
jge
maxps
cmpxchg
dec
cmps
jp
push
arpl
enter
scas
mov
mov
xchg
push
call
add
add
movs
(bad)
mov
xor
xadd
movs
ins
adc
inc
arpl
and
push
loopne
fld
jnp
jbe
jle
sahf
scas
mov
dec
mov
xchg
dec
jmp
int
cmps
inc
inc
xor
mov
in
imul
mov
mov
sbb
mov
pcmpeqd
cmp
xchg
call
ficom
daa
cmp
push
out
adc
or
add
les
push
sub
(bad)
pop
dec
push
cmp
xchg
mov
or
push
(bad)
and
inc
sub
fdivrp
jns
loop
repz
mov
shl
cwde
sbb
ins
pop
cmps
push
lock
fsubrp
lea
fimul
cmc
xchg
loopne
sti
daa
cld
fisub
jno
sub
mov
loope
pop
xlat
push
sbb
loopne
xchg
jge
cmp
ds
push
out
jge
ret
sbb
pop
das
pop
shl
cli
xchg
arpl
sub
int
cmp
xchg
inc
shr
arpl
mov
sub
ds
rol
retf
xchg
jb
in
adc
pop
jecxz
xchg
jb
aam
hlt
popa
or
cmps
mov
pop
cmp
or
nop
and
mov
ds
mov
stos
push
push
repz
sahf
or
jmp
fidiv
and
jge
fnstsw
jmp
fist
xchg
arpl
lods
fcmovnu
fisub
cmp
out
mov
(bad)
(bad)
add
test
jbe
sub
dec
cld
and
jmp
push
sbb
les
mov
pushf
push
aaa
cld
repnz
out
test
inc
inc
dec
call
inc
and
mov
cs
test
xchg
jnp
push
mov
xchg
sub
jnp
sar
pop
sub
inc
daa
lods
iret
and
addr16
pop
push
sbb
mov
dec
jne
ret
das
dec
imul
shl
cs
movs
and
push
mov
sub
push
fsubr
jge
mov
or
stos
rcl
stc
dec
xchg
ret
sbb
daa
jne
inc
mov
mov
fimul
xlat
add
mov
(bad)
(bad)
int3
sbb
add
add
lea
(bad)
xor
retf
(bad)
idiv
shl
mov
jbe
outs
dec
stc
call
les
xor
not
bound
fdivrp
adc
mov
push
in
loop
cli
xor
lea
mov
cli
cwde
fbld
imul
test
jle
cmc
les
mov
jmp
nop
xchg
mov
jne
inc
fisubr
xor
pusha
in
jb
add
inc
add
cmp
sbb
daa
jae
add
sub
adc
in
pop
xchg
pop
xchg
lods
je
cmp
in
push
jmp
cwde
add
out
mov
xor
push
ret
jb
arpl
xor
mov
add
(bad)
repnz
pushf
add
mov
imul
inc
retf
dec
not
scas
jno
pop
(bad)
xchg
adc
test
pop
dec
adc
adc
dec
jmp
sbb
bound
mov
lahf
(bad)
xchg
popa
(bad)
leave
jbe
out
and
xchg
jb
or
jecxz
in
mov
pusha
leave
or
pop
adc
out
jbe
sbb
leave
xor
aad
xchg
jnp
shl
call
jmp
adc
popa
or
jge
jge
pushf
call
xchg
mov
lahf
cli
(bad)
mov
inc
mov
inc
cmp
sub
inc
xchg
jle
int3
or
cmps
xchg
inc
loope
sar
cmp
jb
push
adc
xor
int
popf
add
add
inc
dec
shl
mov
xchg
cmps
xchg
int
xchg
mov
cmps
adc
fucom
mov
mul
and
jae
cdq
cmps
test
xor
sbb
imul
xchg
ret
inc
pop
sbb
jo
mov
loope
stos
or
cmp
mov
sar
in
jmp
cdq
xor
xor
or
test
inc
and
cmps
jmp
pop
cs
mov
cmc
sub
lds
retf
push
pop
sbb
in
loopne
daa
mov
imul
pop
adc
sub
jo
dec
jb
or
push
mov
sti
lock
cmp
neg
pop
push
test
mov
cld
bnd
into
mov
mov
sbb
sbb
leave
call
out
cli
push
sbb
cwde
cmc
retf
or
push
(bad)
stc
xor
outs
sahf
pop
adc
inc
mov
fdiv
pop
stos
les
aaa
arpl
cmp
sbb
pop
xchg
enter
pop
dec
int
in
(bad)
fwait
shl
lods
inc
shr
dec
xor
inc
or
dec
leave
test
inc
add
pop
sbb
cld
clc
push
lds
pop
in
leave
add
enter
mov
ja
cmp
stos
and
pop
fist
les
out
ss
inc
xchg
ss
and
pop
leave
in
mov
(bad)
mov
icebp
sub
jl
pop
xlat
jl
int
out
sahf
clc
cmp
sbb
cld
out
out
mov
push
cmp
sub
cmp
xchg
ror
(bad)
fistp
xchg
ins
les
mov
inc
sbb
cmp
dec
push
icebp
sbb
out
mov
out
pop
mov
sub
cli
lea
sbb
adc
pop
call
hlt
out
or
lahf
retf
fsub
(bad)
or
pop
xchg
fistp
pop
push
adc
jb
or
mov
cmp
mov
dec
adc
js
xchg
rol
aas
dec
out
(bad)
xchg
add
fcmovb
hlt
or
jmp
call
aad
ja
add
cmps
mov
adc
xor
ja
(bad)
mov
(bad)
cmc
clc
out
stos
stos
movs
in
repz
fst
(bad)
mov
xor
xchg
sub
dec
mov
in
in
dec
xor
push
mov
dec
or
mov
js
adc
sbb
and
or
sub
sub
pop
mov
mov
and
jb
mov
fcmovnb
pushf
repz
dec
jg
pop
jbe
mov
mov
aam
pop
cwde
push
scas
cmc
addr16
out
cmc
cmp
(bad)
cli
mov
mov
push
jns
les
add
inc
pusha
call
push
push
mov
mov
mov
xor
mov
dec
adc
and
jnp
into
jge
adc
push
out
cs
jl
jmp
outs
neg
adc
add
mov
mov
test
sti
inc
or
ds
xchg
jnp
daa
stos
popa
jmp
jbe
pop
jae
out
sub
jne
aaa
outs
fcom
into
out
ds
adc
dec
das
inc
in
and
push
push
adc
in
fwait
jl
sbb
add
jle
sbb
add
fist
cld
jecxz
mov
icebp
mov
xor
or
into
xchg
sbb
fldcw
aad
and
jnp
fst
jmp
test
imul
jnp
sar
(bad)
fistp
js
push
mov
inc
cmps
mov
push
call
jno
into
ins
or
inc
push
cmp
and
jg
cwde
pop
adc
in
daa
xchg
rol
lods
mov
(bad)
push
xchg
(bad)
test
jmp
retf
rol
lds
mov
ror
pop
xor
fild
pop
and
mov
pop
movs
pop
or
clc
js
test
push
out
repz
fisub
mov
jbe
bound
adc
sahf
mov
fnstenv
outs
aaa
in
test
push
cmp
in
fisub
jbe
in
mov
mov
ficom
retf
and
aas
hlt
das
inc
es
or
mov
cld
jg
es
pop
xchg
fld
les
leave
cmps
inc
test
test
xor
mov
pop
int3
je
adc
xor
xchg
or
out
pop
mov
xor
and
ds
fmul
jl
jns
jg
test
movs
sti
cmp
dec
cmp
mov
ins
stc
or
fsubr
adc
push
cwde
call
mov
scas
outs
(bad)
jl
daa
or
mov
gs
jle
mov
clc
call
adc
sahf
cmp
jb
icebp
mov
pop
add
jmp
push
fdiv
stos
and
lock
fdivrp
mov
mov
dec
ret
jne
and
adc
inc
int3
mov
fadd
mov
std
test
push
stos
loop
cmp
mov
stos
ds
outs
(bad)
dec
int3
mov
movs
ss
stos
jne
pop
xchg
movs
jp
je
mov
mov
into
jp
mov
cli
adc
sub
aad
lahf
add
adc
movs
mov
push
das
enter
jecxz
jne
mov
mov
add
inc
in
xor
xor
jmp
imul
sub
adc
sbb
mov
sar
push
ds
test
aad
adc
hlt
adc
push
and
mov
(bad)
aaa
data16
xchg
retf
pop
sbb
add
push
mov
or
test
push
and
xor
mov
out
mov
inc
je
pushf
mov
pop
leave
or
dec
jmp
rcl
ja
adc
shr
push
and
xchg
mov
mov
(bad)
in
or
outs
test
mov
lods
xchg
stc
lds
call
cmp
ins
and
dec
cmp
jge
add
gs
call
fst
sidtd
imul
das
call
sbb
push
jmp
mov
test
stos
push
popa
jl
lds
daa
sahf
xor
jbe
hlt
icebp
mov
or
xor
fisub
xor
std
in
loope
(bad)
(bad)
sub
and
mov
daa
loopne
adc
or
bound
add
or
add
add
mov
add
aas
int
imul
or
out
arpl
xor
add
leave
iret
fstp
pop
test
dec
adc
scas
sbb
adc
test
jns
scas
cmc
inc
les
and
jbe
xor
gs
mov
lahf
stos
std
add
jmp
dec
repnz
out
aaa
mov
not
out
imul
jnp
inc
xchg
mov
les
(bad)
dec
and
jecxz
add
aaa
adc
and
sbb
addr16
jo
daa
adc
lods
mov
cdq
pop
arpl
ret
fcom
out
pop
(bad)
popa
push
sub
push
call
ja
xchg
sti
dec
cmp
hlt
mov
push
mov
mov
repnz
mov
mov
mov
mov
sbb
jno
sub
int3
cmp
aaa
xchg
mov
nop
or
aas
cmps
sahf
pop
stc
xchg
aas
xor
mov
sub
dec
mov
xchg
jl
or
inc
mov
inc
jae
sbb
scas
lods
or
xor
ins
xchg
aas
test
ds
iret
pusha
jmp
mov
cmp
xchg
movs
push
pop
mov
aad
add
test
jmp
add
pop
pop
adc
xchg
cmp
aas
xchg
inc
xor
pop
fmul
ret
push
fldenv
xchg
jb
pop
xchg
pop
mov
sub
mov
sub
or
ds
pusha
cmp
jg
adc
mul
push
dec
jg
mov
cdq
cmp
ss
stos
ret
stos
mov
sub
sbb
daa
sahf
jo
call
xchg
xchg
or
popf
lsl
ret
mov
int3
rcl
inc
dec
popa
jns
push
movs
and
shr
add
inc
in
push
imul
cmps
in
retf
and
data16
repz
not
add
je
ret
cmp
(bad)
retf
fisubr
stc
stc
fwait
add
xchg
leave
dec
ret
jae
xor
fmul
push
gs
ret
popa
lar
test
daa
mov
sbb
pop
push
(bad)
mov
scas
(bad)
sbb
xchg
(bad)
push
imul
not
xor
std
pop
cwde
cmps
movs
push
adc
mov
mov
mov
jp
jns
in
mov
dec
mov
cdq
xchg
xlat
lds
test
dec
mov
into
mov
ffree
lods
adc
into
loope
or
(bad)
cmp
cmp
inc
inc
xchg
mov
sub
cmp
lods
into
or
loope
and
enter
loopne
addr16
sqrtps
mov
scas
push
inc
push
cdq
lods
retf
fs
popf
mov
in
jmp
mov
sbb
fs
cmps
lock
mov
mov
mov
or
sar
fsubr
lea
lea
ins
jmp
mov
push
mov
cmp
xchg
scas
rcr
adc
jb
ja
xor
or
rcl
fmulp
mov
out
loope
mov
mov
lods
pop
cmp
das
and
inc
test
inc
xchg
js
and
mov
sti
push
aas
imul
mov
outs
mov
loopne
mov
push
stos
mov
mov
movs
cmc
and
cwde
gs
push
pop
sbb
outs
stos
mov
(bad)
lock
dec
mov
add
loop
ds
cdq
jmp
cmp
dec
jp
in
sbb
push
cmp
lock
pop
sub
inc
mov
js
test
add
jmp
lods
inc
fcmovnu
retf
cmp
popa
and
inc
std
mov
je
mov
dec
or
ins
cmc
add
iret
stos
outs
(bad)
pop
imul
and
mov
movs
inc
adc
cmp
jns
jno
pushf
rol
jge
stos
outs
js
mov
jg
ja
ret
jne
out
call
or
cld
in
and
push
mov
mov
mov
ss
shr
mov
pop
out
cmp
push
es
nop
ret
cmc
sbb
push
fwait
push
in
fs
ins
enter
mov
mov
adc
push
fwait
mov
jp
or
rcl
pop
dec
jmp
mov
xchg
(bad)
pusha
mov
dec
push
xor
neg
jae
rcr
mov
push
aas
int3
(bad)
cld
repnz
or
fwait
or
pop
lods
xor
push
out
mov
cmp
aam
cdq
mov
test
ret
mov
retf
mov
movs
in
mov
lock
in
cmps
sub
(bad)
xchg
addr16
pop
and
jge
push
int
outs
leave
data16
nop
and
movs
shl
jbe
jmp
push
aaa
in
sbb
cld
icebp
mov
lock
les
fdiv
mov
inc
les
aad
mov
mov
and
xchg
push
mov
push
jns
or
mov
sub
or
test
cmps
retf
xchg
push
mov
faddp
repnz
cwde
push
or
(bad)
imul
enter
xor
test
ds
mov
in
or
xor
movs
dec
adc
call
outs
mov
xchg
xor
mov
stc
fdivr
call
push
xchg
out
push
fs
jl
sub
mov
loopne
push
test
(bad)
sub
push
mov
or
mov
pop
dec
lea
and
xor
mov
xchg
int3
push
inc
aaa
enter
enter
shl
or
nop
neg
fs
jo
sub
push
repz
jno
pop
ret
scas
dec
sbb
and
(bad)
adc
stos
mov
adc
cmp
push
mov
call
pop
pop
push
(bad)
call
xor
pop
out
rcr
jb
js
aad
popa
xor
jno
mov
pop
cmp
xor
cld
push
mov
dec
xchg
std
dec
mov
or
lds
pop
(bad)
sbb
jnp
inc
mov
cwde
push
clc
orps
add
std
push
sub
aam
mov
inc
fwait
stos
test
sbb
clc
lea
mov
test
daa
and
or
mov
mov
sbb
add
in
pop
fld
arpl
je
imul
aam
mov
imul
fiadd
das
xor
sub
push
movs
xor
jne
pop
pop
loop
fisttp
xchg
push
les
jmp
xchg
add
fs
jb
xchg
stos
xchg
jmp
pop
fimul
add
movs
jp
mov
cdq
outs
jno
adc
ins
sbb
adc
push
jns
inc
sbb
inc
add
mov
jne
adc
aam
add
imul
hlt
lock
aad
xchg
xchg
cmp
pop
adc
adc
sub
cmp
daa
or
loope
ret
mov
popa
outs
mov
test
mov
mov
add
or
add
mov
out
dec
cdq
adc
jg
sbb
mov
cs
movntps
mov
cmp
not
sahf
push
or
jp
int
push
inc
imul
add
or
xor
mov
xchg
call
sub
push
fdivr
xor
aam
pop
jp
dec
sbb
pushf
xchg
inc
mov
mov
mov
push
xor
test
xor
movs
jbe
mov
and
lds
inc
arpl
pop
mov
mov
(bad)
and
sbb
mov
pusha
sbb
in
sar
cmps
push
push
(bad)
mov
cmp
loopne
cmc
outs
loopne
inc
fwait
xchg
jns
test
out
aad
pop
add
push
xchg
in
fwait
out
ret
sbb
mov
push
sahf
outs
push
sbb
pushf
aam
add
lods
idiv
mov
outs
lods
inc
in
ror
cmp
add
mov
mov
xchg
clc
sub
sahf
and
jle
repnz
or
and
cmp
loope
mov
stc
sbb
jmp
adc
jecxz
shl
fldcw
xor
push
dec
out
das
sti
xor
cmp
sub
sub
ja
rcr
adc
ds
out
adc
xchg
xchg
sar
adc
xor
push
xchg
imul
add
adc
mov
lods
jl
repz
add
mov
cs
xchg
mov
(bad)
icebp
jbe
pop
add
repnz
or
push
retf
ror
shl
xchg
sub
lock
lods
and
test
pusha
jp
cdq
stos
push
mov
in
clc
sub
rcl
int3
dec
adc
jmp
aam
hlt
jb
sbb
out
test
pop
adc
adc
cmp
mov
pushf
push
test
xor
cmc
adc
loopne
sar
adc
dec
dec
mov
mov
sbb
imul
adc
push
adc
mov
imul
inc
popa
pop
inc
neg
sbb
icebp
lods
cmp
xchg
ficomp
cmp
sahf
test
icebp
outs
xchg
idiv
mov
push
loopne
jp
(bad)
(bad)
sbb
push
(bad)
lahf
and
jmp
xchg
lds
pop
pop
mov
jbe
sub
sar
push
fs
cli
jnp
icebp
ja
js
xor
and
sub
out
add
jp
fsubr
xchg
sbb
bound
mov
sbb
cdq
jecxz
mov
adc
dec
or
adc
push
(bad)
daa
sti
enter
add
jmp
retf
mov
mov
xor
jne
test
xchg
cld
xchg
mov
sub
imul
and
std
imul
add
pop
cmp
mov
scas
aam
mov
aad
leave
(bad)
push
sbb
jmp
popa
jmp
adc
inc
shl
retf
xor
sub
les
ret
pop
mov
test
pop
pop
pop
adc
xchg
lock
int3
es
cli
adc
sub
ret
jne
cmp
push
adc
and
dec
xor
dec
rcl
xor
nop
mov
popa
and
scas
fstp
xchg
cmp
jmp
and
and
mov
fdiv
fs
xor
fstp
adc
jecxz
push
adc
pop
repnz
push
fidivr
jp
adc
outs
not
out
(bad)
fs
adc
hlt
psadbw
mov
inc
jmp
lds
push
jmp
xchg
clc
inc
push
and
popf
sti
mov
mov
add
jbe
dec
js
dec
call
out
add
adc
pop
test
xlat
shl
je
xchg
jmp
sbb
lods
aaa
push
loope
jne
adc
shl
xchg
(bad)
sar
std
aad
clc
pop
rcl
fidiv
jg
or
sbb
mov
test
xchg
push
or
stos
les
(bad)
fwait
js
xor
ret
popf
sbb
push
addr16
pop
cmp
dec
inc
jae
mov
out
pusha
adc
jge
call
call
stos
adc
fstp
leave
out
sub
shl
jge
inc
mov
cmp
shl
ret
inc
stos
xchg
mov
mov
push
mov
adc
imul
pop
adc
mov
adc
mov
outs
pusha
int3
pusha
jno
imul
pop
cli
pop
jb
xchg
mov
(bad)
mov
inc
addr16
mov
xchg
dec
push
ja
es
xor
mov
outs
sbb
fwait
loop
aas
adc
div
inc
(bad)
cs
popa
shl
lock
jns
(bad)
popa
pusha
push
jmp
sbb
pop
pop
ss
cmp
enter
call
fisubr
and
or
ds
xchg
in
add
cs
pop
and
and
popf
jno
and
loop
call
adc
rcr
mov
jg
fwait
cmp
ret
mov
xor
mov
sbb
mov
push
(bad)
(bad)
out
pop
jle
out
add
cmp
mov
leave
cmp
movs
mov
fidivr
push
repnz
adc
jle
adc
sub
pop
inc
push
mov
mov
mov
inc
and
dec
dec
push
add
pop
in
movs
mov
icebp
repnz
or
sub
sar
ret
push
or
jmp
je
jbe
cmp
pop
cmps
je
shl
(bad)
push
stc
sbb
push
pop
popf
push
sub
push
lahf
xchg
mov
mov
adc
stc
mov
retf
pop
mov
loop
in
call
adc
leave
sahf
pop
adc
lods
imul
stos
cmp
jae
xor
inc
gs
sbb
sub
test
out
sbb
iret
movs
cdq
leave
push
jno
(bad)
cmc
sar
push
cli
mov
arpl
mov
jmp
adc
retf
daa
mov
scas
and
fld
push
jl
jmp
imul
pushf
mov
nop
fild
mov
mov
je
lods
sub
imul
gs
leave
out
xchg
out
ds
fwait
retf
pop
shr
movs
mov
lock
sub
icebp
loope
dec
loope
add
dec
out
and
cmp
sub
add
dec
cmp
sub
mov
and
mov
je
test
jmp
clc
or
xor
add
cmp
or
inc
ins
xor
or
xchg
call
sub
jg
(bad)
push
inc
inc
push
cmp
movs
xlat
repz
aad
and
and
mov
(bad)
inc
sti
ins
mov
pop
fwait
movs
scas
cmp
xlat
dec
fs
cmps
fiadd
data16
ret
and
in
or
jne
jl
lock
sbb
xchg
or
jae
fwait
lods
test
loope
out
pop
outs
lahf
pop
cmp
sub
fnstenv
ins
and
hlt
xchg
scas
sar
fisttp
xchg
push
jecxz
xor
mov
movs
cli
fdivr
pop
call
jge
stos
sbb
out
ss
mov
and
push
and
scas
dec
sar
cmp
les
adc
out
sbb
scas
out
hlt
push
push
cmp
lahf
mov
dec
push
daa
(bad)
mov
call
adc
jmp
xchg
shl
mov
retf
(bad)
cmc
jl
xchg
daa
nop
cmp
dec
mov
shl
adc
and
test
xchg
and
mov
dec
scas
mov
or
and
xchg
out
cmp
sbb
test
jmp
and
sbb
fld
sbb
fsubr
jne
sbb
mov
mov
out
fnsave
mov
call
pop
(bad)
out
xlat
int3
cld
add
jae
mov
add
inc
xchg
ss
pusha
add
xor
mov
adc
ja
cli
xchg
cmp
ret
push
adc
(bad)
cmp
mov
fsub
lods
mov
jecxz
out
test
sti
push
sbb
jno
sub
jo
mov
sahf
scas
sbb
mov
jge
not
cmps
aaa
jle
and
int3
gs
imul
js
call
cs
or
jecxz
dec
sbb
pop
mov
je
fstp
add
sub
outs
ins
dec
sbb
cmps
inc
aaa
(bad)
test
repnz
test
adc
out
call
mov
mov
cs
xor
xchg
sub
dec
mov
mov
in
neg
sti
cld
xor
stos
nop
push
add
xor
pop
sub
loop
lods
test
adc
nop
jbe
sar
(bad)
mov
add
jno
xchg
imul
int3
xchg
and
sub
inc
gs
icebp
fidivr
sub
(bad)
mov
mov
xlat
jl
sub
imul
or
or
dec
scas
mov
xchg
hlt
sar
ins
mov
cmp
add
jle
imul
fisttp
fild
pop
fldenv
jns
jae
test
mov
out
sbb
repz
cli
push
cmp
sahf
push
adc
dec
repnz
add
inc
movs
cmp
fisttp
cdq
add
int
cmp
jno
ror
and
int3
cmp
ins
jmp
xor
pop
retf
repnz
popf
cmp
and
(bad)
data16
mov
push
cmp
mov
ret
push
popa
jb
and
cwde
stc
(bad)
push
xchg
sti
popa
dec
les
leave
push
pop
mov
ds
in
pop
out
aas
aas
push
jecxz
lods
es
out
mov
cmp
retf
inc
mov
and
pop
sahf
nop
adc
pop
or
scas
cmp
mov
mov
mov
(bad)
or
push
mov
lods
xchg
scas
sbb
xchg
pop
and
jle
sub
jns
jae
out
push
scas
cmp
push
xchg
je
jle
iret
xchg
inc
shl
cwde
repnz
push
or
mov
sbb
in
cmc
jbe
(bad)
mov
adc
jmp
loop
dec
inc
aas
push
addr16
arpl
jo
(bad)
cmps
imul
jae
popf
in
push
cmp
xchg
jl
stos
aas
sub
pop
cmps
adc
and
cld
ins
mov
add
nop
jg
cld
dec
sub
fcmovbe
dec
and
add
xchg
(bad)
adc
inc
ja
dec
lsl
rcr
sub
mov
jbe
ins
push
and
(bad)
mov
sbb
pushf
mov
imul
fucomip
aam
popf
sub
push
add
fcomi
pop
and
setge
or
imul
loop
pop
and
std
push
das
clts
popf
push
sbb
sar
aas
lahf
mov
pop
mov
pop
inc
popf
jl
ds
fild
jge
daa
in
fwait
cmp
sbb
mov
pop
push
cmp
pop
mov
inc
jg
stos
shl
push
cmps
mov
push
dec
fmul
cmp
mul
xchg
jmp
addr16
lods
sub
test
imul
scas
jp
int
addr16
sub
pop
mov
int
mov
inc
and
mov
dec
fst
jbe
or
aam
and
xor
xor
lods
scas
and
pop
sbb
dec
fs
rol
push
lock
retf
jp
lahf
loope
add
retf
aad
fsubr
icebp
mov
xchg
and
lods
add
outs
invd
leave
ret
mov
(bad)
add
sbb
jp
xchg
mov
movs
inc
int
xchg
mov
int3
pop
mov
(bad)
cli
mov
push
jno
lahf
xor
sub
or
sub
fld
pop
out
xor
add
add
and
sbb
jbe
sbb
sbb
jnp
rol
and
mov
sahf
js
enter
pop
pop
lds
jg
aas
int
xchg
cmps
fnstenv
add
add
cmp
mov
les
xor
mov
shr
push
imul
je
rol
std
call
sbb
inc
cmp
jns
icebp
add
jg
stos
addr16
cmp
jns
iret
ror
(bad)
fstp
repz
fistp
das
fisub
call
mov
nop
jo
mov
push
cmp
adc
rcr
and
jb
inc
in
movs
push
push
pop
mov
int
imul
jne
mov
mov
cli
ss
mov
or
aas
cdq
xchg
jmp
ret
cld
fwait
push
pop
jmp
arpl
test
shl
jmp
iret
in
ret
dec
xor
test
sbb
push
(bad)
sub
inc
mov
pop
dec
gs
adc
sub
scas
or
fldenv
mov
mov
(bad)
call
je
pushf
jge
mov
pop
aam
stos
test
push
(bad)
jmp
outs
repz
imul
test
pop
push
jmp
arpl
ret
dec
mov
jg
cmp
adc
out
arpl
je
aas
cmc
xlat
(bad)
cmp
jo
fwait
js
pop
xchg
inc
rcr
ret
clc
or
xchg
fist
ins
repz
lahf
cmp
mov
or
push
or
sbb
dec
pop
aad
jae
push
jnp
pop
ror
mov
inc
or
pop
push
add
ins
lea
ins
mov
adc
iret
fmul
dec
cmps
arpl
adc
pop
mov
jb
sub
or
into
jmp
(bad)
sub
fs
jns
xchg
inc
(bad)
jnp
fimul
aaa
aaa
sbb
neg
sar
add
fld
imul
test
dec
sbb
(bad)
imul
(bad)
xlat
int
adc
pop
mov
xor
stos
push
xor
ss
mov
jmp
jg
sbb
out
aad
push
bound
cmp
(bad)
je
xchg
movs
mov
jne
mov
mov
pop
popa
pop
in
jmp
push
inc
fimul
push
xchg
popf
add
(bad)
fwait
or
stos
(bad)
in
mov
frstor
pop
sbb
cmp
mov
(bad)
movs
xlat
jg
mov
movs
pusha
push
arpl
mov
and
jmp
jmp
push
push
out
mov
mov
jmp
sub
pusha
xchg
pop
mov
pop
int3
(bad)
imul
(bad)
test
jno
cmp
pop
daa
test
xchg
jno
push
adc
data16
dec
mov
jp
or
sbb
mov
ja
retf
adc
mov
mov
cdq
sub
xor
push
into
in
jge
pop
mov
shl
sub
rcr
je
pop
rol
xlat
repz
jns
dec
mov
aas
popa
aad
cmp
in
xchg
test
jecxz
shr
lds
test
sbb
mov
out
rcr
pop
mov
(bad)
jb
push
repnz
mov
add
pop
nop
popf
movs
push
pop
lahf
shl
push
in
mov
test
sar
push
mov
ret
sub
cmp
loopne
loope
add
inc
outs
je
hlt
imul
stos
(bad)
not
jecxz
fidiv
pop
lds
sar
ret
fstp
jno
add
cmps
jno
retf
aam
fistp
test
frstor
outs
pushf
fild
pushf
push
in
fwait
and
sub
test
xor
push
sar
in
cmc
ret
in
pop
jnp
and
je
mov
nop
test
inc
push
xor
lods
mov
or
xor
(bad)
enter
fcomp
mov
pushf
or
push
xor
loop
jmp
icebp
cmc
mov
pushf
nop
int3
adc
sub
adc
js
xor
stos
data16
jb
pop
mov
dec
mov
jb
cmps
sub
stc
lods
in
cmp
sbb
pushf
mov
or
xor
xchg
sbb
dec
retf
fs
push
mov
cdq
pusha
mov
dec
mov
mov
nop
addr16
mov
sbb
repz
dec
cmp
push
repnz
(bad)
iret
add
add
cs
pop
sti
arpl
xor
dec
out
push
cld
ja
push
sub
test
in
sti
push
scas
test
lds
sahf
scas
retf
sub
pop
pop
inc
cld
addr16
xor
lock
adc
mov
xchg
sub
aas
fmul
jo
xchg
es
push
ja
adc
cmp
cmp
mov
es
(bad)
mov
mov
and
mov
cmp
jg
inc
or
jb
cmp
ds
frstor
push
test
dec
lds
sbb
mov
inc
ins
mov
pop
mov
call
mov
cwde
aad
adc
pop
adc
fst
sub
xchg
push
sbb
and
aam
cmp
pop
popf
or
cdq
retf
into
and
jnp
xor
mov
int3
ror
nop
push
icebp
pop
in
add
sbb
int
out
das
dec
and
mov
xchg
push
bound
popf
fs
call
xlat
add
xchg
xor
fwait
xchg
dec
out
sub
clc
mov
add
(bad)
stos
mov
jbe
sub
sbb
push
mov
xchg
push
mov
int
test
push
add
nop
aaa
sbb
inc
add
mov
cmps
xchg
xor
ror
jns
fs
push
stc
xchg
mov
push
and
jo
call
stos
pop
adc
retf
je
pop
dec
dec
retf
inc
sub
push
pushf
arpl
(bad)
ficomp
jae
and
dec
pop
fnstenv
dec
loop
call
xchg
mov
sahf
and
jecxz
iret
xchg
mov
popf
rcl
sub
cwde
sub
outs
adc
popa
in
out
inc
icebp
and
rcl
test
das
test
addr16
and
mov
mov
jl
sbb
dec
stos
or
pop
sub
bnd
adc
out
push
daa
adc
adc
push
dec
sub
(bad)
cwde
xchg
mov
dec
sub
ss
cld
int3
int3
push
shl
jmp
dec
jb
ret
sub
xchg
vpavgw
push
sub
outs
mov
jmp
fild
push
scas
mov
inc
retf
adc
movs
js
mov
ror
js
push
js
mov
rcl
sbb
push
push
lock
mov
pop
cli
loopne
push
les
add
pop
xor
repz
mov
inc
loope
sub
out
add
mov
ud1
sub
sbb
mov
push
inc
out
iret
xacquire
arpl
xor
js
mov
push
mov
sub
add
sbb
mov
add
mov
loop
inc
inc
push
sbb
sahf
adc
pop
dec
outs
call
outs
inc
and
push
cmp
xor
dec
outs
mov
rcl
and
and
and
xchg
ret
nop
test
iret
repnz
out
fdivr
sub
aaa
sub
jno
test
sti
(bad)
mov
cmp
popf
mul
pop
ss
inc
pop
loope
mov
cmp
(bad)
aad
inc
mov
(bad)
rcr
xor
scas
test
ror
mov
pop
outs
mov
and
cld
cld
or
pop
mov
cmp
dec
fcom
outs
pop
rcr
clc
test
inc
jns
scas
retf
ficomp
push
fs
inc
inc
jmp
cmp
xor
clc
enter
mov
push
pushf
fwait
add
sbb
call
popf
or
ret
sbb
xor
push
mov
rcr
dec
mov
and
std
xchg
pop
loop
xchg
jno
cwde
and
aaa
xchg
xchg
jb
cmp
arpl
jb
xchg
xor
fild
dec
xor
shl
mov
rcr
pop
jle
xchg
mov
rcr
icebp
nop
test
movs
mov
loope
mov
shr
pop
push
or
and
cmps
add
loope
js
push
shr
outs
xchg
or
dec
addr16
pop
cmps
sub
jne
mov
(bad)
imul
mov
inc
sbb
sub
addr16
jle
dec
cmp
scas
retf
sahf
xlat
pusha
pop
push
fwait
fwait
shl
cmp
and
adc
or
test
push
cmp
or
imul
xchg
xchg
pop
jg
js
in
jecxz
xchg
(bad)
xor
movs
loope
lahf
xlat
stc
and
dec
cmp
enter
cmp
daa
loopne
or
xor
call
nop
push
dec
jae
jle
(bad)
in
pop
xchg
dec
in
std
out
mov
push
cmp
adc
js
sbb
aad
out
(bad)
popa
int
dec
mov
call
mov
mov
paddsb
and
stc
xor
arpl
hlt
aad
ins
loop
retf
rol
enter
cmp
jp
retf
dec
jbe
push
adc
daa
pusha
es
mov
test
(bad)
jns
aad
jo
jle
inc
mov
and
sub
hlt
scas
dec
push
in
xor
dec
mov
inc
sti
xor
cmp
add
mov
retf
mov
xor
dec
test
lds
and
cld
psubsb
in
inc
(bad)
mov
inc
out
movs
and
pop
(bad)
imul
add
adc
and
scas
push
int
push
cmp
lods
call
inc
jmp
pushf
sbb
ds
dec
cmp
and
cld
(bad)
push
sub
vxorps
mov
test
inc
cs
sbb
int
or
jne
add
aad
in
adc
dec
mov
push
mov
sub
imul
xor
shr
sub
sub
or
push
xchg
jbe
repz
sub
sahf
pop
or
or
les
mov
ret
mov
clc
jecxz
xchg
pop
jmp
jae
mov
ret
into
and
mov
sar
or
pop
cmc
jle
sbb
xchg
push
shl
nop
dec
mov
xchg
sub
inc
push
fs
leave
push
adc
mov
fld
sbb
punpcklwd
cmp
xor
das
movs
jnp
pop
mov
jbe
jmp
and
mov
xchg
lods
ror
cmps
push
rol
pusha
and
dec
movlps
out
inc
xchg
sbb
pop
leave
jp
out
add
inc
ror
data16
push
cmps
xchg
push
sub
popa
mov
outs
test
fsub
push
pxor
dec
ins
mov
jle
xchg
shr
cmp
ins
movs
arpl
out
pop
and
xor
jmp
and
sbb
test
out
test
(bad)
lods
jmp
ret
stc
sub
or
cmp
int
icebp
in
mov
inc
cld
cmps
sbb
stos
lods
scas
add
xchg
pusha
call
dec
xor
repz
mov
mov
add
ret
xchg
mov
test
fcmove
pop
cmps
push
in
sub
push
and
push
lods
lods
fs
loopne
sti
lea
xchg
sti
cmp
loope
cmc
push
sahf
aam
inc
pop
addr16
xchg
adc
push
call
fbstp
dec
enter
push
xchg
and
in
sbb
sbb
xchg
jne
jne
out
idiv
xor
inc
mov
out
call
pop
mov
int
pop
push
xor
mov
xchg
mov
repnz
pop
mov
sub
mov
pop
ficom
mov
lahf
inc
pop
inc
fsub
or
push
push
and
lds
repz
popf
daa
ja
icebp
mov
(bad)
cmps
push
stc
and
pop
or
loope
add
dec
inc
icebp
aam
cmc
mov
sub
mov
sub
in
scas
pusha
cli
popf
lods
and
xchg
inc
xor
lds
sbb
sub
and
movs
dec
add
test
call
sbb
cmp
jno
(bad)
outs
imul
adc
iret
sbb
xor
shr
scas
jns
add
in
mov
or
jo
push
inc
fnsave
movs
push
jnp
and
ficom
loopne
arpl
test
or
add
ins
push
jbe
fadd
or
xchg
aad
mov
mov
xor
inc
ret
fsubr
mov
je
jne
pop
lods
cmp
dec
pop
mov
repz
cdq
mov
or
shr
pop
es
mov
or
mov
pop
xchg
mov
(bad)
inc
das
xchg
lods
xor
fisubr
and
fld
jge
xchg
test
pop
gs
lock
aad
add
std
add
pop
pop
scas
add
mov
test
cmps
lods
and
pop
jmp
mov
mov
push
data16
mov
ffreep
mov
pop
mov
mov
sbb
aad
popa
out
and
sub
inc
ret
ficom
mov
retf
fdivrp
adc
add
outs
fsub
sub
jle
outs
mov
push
leave
push
or
xor
jmp
push
xchg
sub
out
add
add
xor
dec
movs
nop
lea
ja
mov
daa
sbb
push
sbb
and
aas
pop
inc
push
cmp
(bad)
les
repz
test
sbb
ja
add
mov
dec
cld
movs
jae
xor
cli
int
movs
test
pop
push
dec
call
mov
lock
call
mov
mov
or
add
fidivr
pop
adc
lods
pop
xchg
push
fsub
xor
les
pop
int3
fdiv
xchg
js
stc
std
retf
das
push
sbb
and
outs
test
inc
mov
hlt
dec
clc
xor
dec
and
xor
xchg
stos
mov
push
add
mov
jne
(bad)
mov
cli
data16
int3
nop
enter
dec
xchg
into
jle
scas
cmp
mov
loop
in
push
loop
or
jmp
pop
mov
fwait
scas
mov
mov
xchg
in
inc
repz
and
push
sub
mov
or
stos
and
shl
ret
inc
retf
xchg
xor
or
lds
fidivr
fs
and
test
into
je
test
sub
iret
mov
pop
dec
(bad)
stc
sbb
push
pop
je
dec
push
xchg
push
sub
xchg
add
fs
mov
aam
movhps
and
cmp
dec
dec
push
jb
pop
pop
and
je
sbb
push
(bad)
retf
push
outs
and
shr
xor
mov
inc
dec
(bad)
mov
loopne
sub
(bad)
int3
push
or
mov
lds
imul
xchg
ret
(bad)
pop
push
leave
in
sub
or
xchg
jmp
sub
fs
dec
mov
rol
jl
das
imul
aaa
pop
and
adc
aam
or
dec
into
inc
add
and
cwde
lods
retf
push
cmp
jecxz
(bad)
aad
adc
scas
je
xor
into
cmp
test
scas
into
cmp
jbe
scas
fbstp
jmp
cmp
mov
dec
repz
sub
xchg
jb
pop
enter
retf
data16
pusha
adc
fnsave
fwait
les
push
or
mov
fimul
mov
in
lock
stc
xchg
dec
aaa
retf
enter
les
or
iret
les
inc
dec
rcl
xor
pop
push
iret
push
pusha
fcomp
pop
cmps
push
cmp
jae
jmp
push
aaa
adc
sar
inc
push
sub
scas
push
cmp
out
mov
loope
hlt
jns
stos
cld
fld
push
into
in
xchg
sub
dec
pop
rcl
pop
dec
clc
pop
movs
jl
sub
dec
mov
inc
fs
jmp
mov
(bad)
int3
call
dec
pop
xlat
sbb
(bad)
fist
add
xchg
scas
jno
out
or
mov
and
xchg
cmp
push
mov
sbb
ss
test
dec
xor
push
enter
cmps
leave
aad
aad
push
stc
nop
pop
mov
inc
xlat
mov
rcl
out
adc
lds
mov
outs
test
in
jb
cmps
mov
adc
and
sbb
or
and
dec
call
push
lods
std
xchg
test
mov
jbe
in
mov
repnz
xchg
cmps
mov
sbb
shl
test
ins
cmc
sbb
mov
(bad)
push
adc
xchg
int
sahf
cmp
aad
dec
add
mov
cmp
arpl
mov
xor
inc
inc
adc
repnz
add
mov
imul
pop
je
pop
scas
lods
lods
cmp
(bad)
xor
mov
xchg
lea
inc
arpl
repnz
add
cli
int
lods
xchg
or
retf
pop
jns
cdq
sub
mov
imul
mov
sbb
outs
mov
mov
push
cmp
add
pop
ret
inc
inc
jle
cli
shr
push
es
xchg
imul
jb
and
xchg
and
scas
imul
div
call
fidivr
fld
and
pop
test
pop
out
sbb
loop
jl
mov
lods
xor
rcl
aas
mov
mov
frstor
jbe
mov
xlat
(bad)
shl
scas
pop
pop
mov
push
mov
sub
xor
dec
lds
test
pop
shl
(bad)
out
cmp
aas
sub
mov
jg
repnz
push
inc
dec
mov
mov
fstp
xor
std
clc
sub
mov
lock
test
jno
xor
aam
imul
(bad)
scas
pop
iret
mov
cmp
test
rol
xchg
xchg
push
jmp
sbb
imul
adc
mov
inc
adc
sbb
or
and
mov
xchg
mov
and
rcr
aad
xlat
xlat
mov
push
cmc
xchg
pop
inc
mov
aaa
(bad)
jmp
xor
div
lahf
lock
sbb
jmp
shl
jp
adc
mov
mov
(bad)
in
cld
xor
mov
push
out
test
sub
js
mov
mov
mov
loopne
stc
cmp
or
and
fdivr
ins
sbb
mov
sahf
xor
dec
sub
jecxz
xchg
out
or
mov
sbb
or
jle
inc
fld
push
jae
out
out
jl
jl
push
dec
xchg
test
popf
dec
dec
cli
hlt
xchg
jnp
push
addr16
jg
or
cmps
es
out
clc
xor
lahf
pop
sbb
es
inc
int3
push
mov
jg
or
cmp
test
mov
lods
sub
cmp
retf
mov
and
les
cmc
sub
adc
pop
lods
ds
dec
mov
mov
dec
add
outs
or
lods
pop
sar
inc
cmp
cmps
mov
aad
mov
les
ret
pop
xor
inc
cli
or
retf
ins
xchg
sub
js
pop
mov
push
jae
xlat
test
add
sbb
lods
jo
aad
out
sbb
cwde
stc
and
pop
out
mov
push
div
(bad)
push
call
lods
lahf
xor
clc
stos
dec
add
xor
and
daa
(bad)
adc
stos
and
sbb
adc
es
mov
add
adc
addr16
cmp
and
jle
call
lds
in
popf
fild
fadd
mov
out
aad
add
dec
xrstor
popa
div
pop
in
sub
adc
call
scas
popf
in
loop
cmp
mov
jle
daa
sub
cwde
popa
cmp
add
jge
retf
add
add
js
pop
ret
stos
ds
jl
ins
arpl
add
pop
scas
in
xchg
fst
cmp
addr16
cmps
out
(bad)
enter
jbe
and
in
iret
je
dec
xchg
ins
jecxz
sub
pop
jmp
push
les
loope
mov
iret
cdq
aam
xor
mov
xor
outs
out
inc
ror
leave
dec
xchg
mov
add
das
adc
pminsw
push
retf
cli
jmp
icebp
push
arpl
ficomp
jle
inc
(bad)
jmp
jno
out
inc
clc
ret
sub
test
cmp
jb
add
mov
mov
sub
adc
sbb
xchg
dec
mov
call
test
lods
jae
lds
fisubr
lea
loopne
jnp
jmp
jnp
test
ds
sub
fnstcw
mov
jns
(bad)
mov
cld
jle
jo
push
push
xor
aam
jl
dec
or
cwde
dec
daa
dec
pop
jp
add
inc
loope
jp
int3
cs
iret
in
mov
test
mov
mov
mov
jg
push
mov
mov
pop
and
push
(bad)
daa
stos
lods
mov
lock
or
imul
outs
pop
(bad)
adc
scas
mov
add
xor
cmc
mov
(bad)
mov
(bad)
adc
pushf
test
out
sbb
push
(bad)
sub
mov
mov
loopne
gs
loope
ret
mov
xlat
sub
cs
mov
or
or
test
mov
call
or
pop
fmul
popf
xor
push
ds
cld
adc
mov
leave
or
popf
push
cld
movs
or
mov
adc
jnp
sub
loop
bnd
push
jo
out
daa
push
es
jmp
push
push
hlt
pop
xor
idiv
mov
(bad)
test
cmp
cmp
shr
loope
fwait
cmp
jge
dec
add
out
sbb
dec
add
xchg
sbb
stc
jne
inc
inc
cdq
leave
dec
hlt
xchg
frstor
mov
adc
inc
jnp
nop
rol
popf
pop
test
test
pusha
mov
bound
sti
gs
cmp
add
jmp
jbe
and
jno
and
fist
xor
cmps
je
mov
adc
or
pusha
lahf
inc
jle
lock
pop
daa
pop
jmp
xor
cmps
pop
out
div
pusha
icebp
mov
push
loopne
adc
fcmovne
pop
test
push
xchg
daa
test
add
lds
je
int3
dec
nop
push
pusha
xchg
gs
sahf
jo
cs
inc
inc
(bad)
fild
scas
mov
and
dec
(bad)
push
fisub
cdq
rcl
cs
shl
sub
fisub
clc
(bad)
test
shr
or
(bad)
sbb
push
xchg
sub
rcl
pushf
xor
mov
mov
rcr
push
mov
xlat
add
test
push
jne
mov
push
fcomip
cmp
in
mov
xor
cmc
mov
repz
sbb
pop
inc
fwait
sub
mov
popf
loope
dec
mov
xchg
xor
nop
rcl
mov
and
adc
inc
sbb
lds
in
jae
scas
(bad)
pop
mov
jge
lods
mov
inc
pop
int3
out
test
cmp
arpl
jecxz
cmc
pushw
pop
leave
fucom
ja
adc
popf
mov
or
jle
out
stos
mov
pop
leave
mov
fucom
cs
sti
dec
cmp
sbb
or
idiv
repnz
or
adc
sbb
or
xchg
out
mov
fbstp
scas
mov
push
cwde
xchg
hlt
sub
and
cli
fmul
dec
and
fsubrp
xchg
icebp
cli
aaa
dec
pop
sub
jae
inc
cli
imul
mov
je
or
fld
jle
and
push
out
add
mov
dec
jl
add
mov
push
or
mov
out
sbb
add
lods
call
and
mov
cs
sub
shl
not
sub
inc
out
in
add
cmp
cmc
outs
sbb
mov
or
jb
pop
xor
(bad)
push
(bad)
jl
and
mov
cmp
icebp
inc
ror
sub
int3
fldcw
mov
je
mov
gs
sbb
dec
jne
loopne
pop
lods
mov
leave
or
aas
idiv
or
in
jne
stos
rcl
hlt
in
and
jbe
enter
add
cmp
or
(bad)
pop
sub
mov
sar
lods
and
cmp
in
adc
cmc
scas
mov
rol
cmc
pminub
cmps
jmp
leave
pop
jle
sbb
fcmovnu
out
jb
xchg
(bad)
pop
inc
xchg
adc
xchg
inc
mov
js
pop
shl
inc
int3
cmp
mov
push
shr
push
in
dec
or
ins
sahf
movs
outs
inc
mov
sbb
jmp
mov
pop
rol
mov
add
mov
imul
mov
repz
outs
pop
icebp
(bad)
or
mov
loop
jns
rcr
imul
fwait
sbb
mov
fwait
aaa
push
dec
mov
retf
cld
retf
sbb
mov
rcr
mov
sbb
sub
cmp
cmp
ins
rol
xchg
mov
arpl
xchg
dec
(bad)
xchg
repz
jns
lahf
cmp
mov
mov
sbb
lea
mov
pusha
cmp
fwait
pop
and
sahf
test
mov
outs
or
jmp
in
push
push
rol
lds
adc
xor
or
mov
pop
in
add
mov
push
xchg
outs
adc
lods
inc
sbb
xchg
sbb
test
daa
inc
adc
and
adc
daa
imul
std
shl
dec
cdq
rcr
adc
out
loop
jl
jns
and
and
stos
test
lds
ds
addr16
jnp
mov
xor
cmc
jo
mov
and
arpl
pop
dec
sbb
mov
add
pop
push
jmp
push
cs
jecxz
scas
jp
cmp
fist
dec
movs
pop
pushf
lahf
xor
sub
ins
shl
adc
or
xchg
in
fwait
jge
lds
dec
mov
rcl
jno
fwait
(bad)
fistp
cs
mov
sahf
(bad)
cmc
xchg
mov
shr
ret
sbb
es
test
pushf
div
push
out
(bad)
mov
xchg
push
shl
or
(bad)
xor
(bad)
pusha
stos
push
pop
jle
sub
bound
lock
cmp
lods
int
pop
sub
rcr
(bad)
repz
cld
push
push
pop
shl
cld
stc
xchg
fsub
jbe
lahf
push
mov
pusha
lods
test
movs
or
fucomp
adc
jmp
mov
and
stc
or
(bad)
loopne
loopne
dec
xchg
jnp
test
(bad)
push
rcr
mov
or
arpl
sub
push
(bad)
adc
repz
(bad)
fs
dec
mov
nop
mov
mov
inc
mov
cmps
out
sbb
test
push
fnstenv
test
cmp
and
mov
inc
push
dec
in
push
sub
push
loop
xor
sbb
mov
jg
and
cmp
adc
daa
push
push
aam
fisttp
bound
addr16
pop
or
sbb
and
nop
shl
xor
and
add
jle
dec
aaa
fwait
adc
aad
fld
aam
mov
bound
cmp
dec
xchg
add
cld
add
xor
pop
aas
ror
dec
call
(bad)
(bad)
cmps
mov
cmp
mov
fsubp
hlt
push
sub
mov
jl
ret
sbb
xchg
aaa
daa
repz
jae
(bad)
clc
cs
fadd
leave
add
jmp
add
jnp
idiv
and
adc
xchg
mov
mov
pop
push
xchg
ror
xchg
(bad)
ins
jl
mov
push
iret
into
jecxz
mov
int
mov
xor
(bad)
arpl
ss
stc
mov
sbb
lds
(bad)
push
and
xor
push
loop
mov
jmp
outs
xchg
and
push
std
jbe
fld
jns
call
xor
adc
ins
sti
sbb
adc
repnz
repz
int
jo
and
push
push
(bad)
rol
jecxz
adc
xor
add
dec
cmp
adc
fisub
lds
popf
jo
les
mov
mov
cmp
jne
sub
add
scas
jmp
shl
in
xchg
int3
cdq
mov
adc
cld
mov
fcom
fs
push
je
xchg
pop
fdiv
inc
pushf
mov
into
cs
xchg
bnd
fild
ins
or
fcmovnu
mul
scas
push
outs
and
bt
cmps
dec
inc
pushf
xlat
dec
dec
pusha
cmp
bound
fnstcw
sbb
jmp
in
cmp
int
adc
(bad)
cmp
jb
repz
pushf
jns
test
int3
cdq
cmp
inc
aad
sbb
movs
addr16
sti
pushf
scas
leave
(bad)
test
sbb
ret
imul
and
retf
cs
test
push
adc
push
sar
and
scas
adc
repnz
repz
repz
gs
loope
mov
sbb
sub
cmp
call
mov
cmp
inc
xor
inc
cmps
pop
test
mov
std
(bad)
pop
test
cld
xchg
jl
mov
outs
mov
movs
mov
xchg
mov
scas
or
jbe
add
jo
retf
shl
imul
iret
retf
(bad)
xchg
repz
pop
sbb
in
jmp
out
(bad)
sbb
fld
fsubr
loope
inc
aad
cmp
xchg
loop
aas
cli
rcl
out
inc
popf
mov
add
dec
push
add
push
xchg
icebp
fist
test
push
dec
lds
xchg
xchg
fs
out
adc
mov
mov
out
aaa
das
int
push
fstp
imul
jo
pop
and
cmps
pushf
stc
sbb
inc
add
mov
div
icebp
out
mov
jl
jns
outs
pop
out
pushf
xor
test
jle
mov
cld
ds
loop
icebp
fstp
fs
jl
cld
shr
inc
outs
or
xor
inc
fstp
jmp
inc
xchg
stos
inc
sub
in
dec
inc
call
inc
mov
leave
(bad)
dec
sub
ss
es
jg
or
sub
xchg
adc
jmp
sahf
mov
jg
or
sub
repnz
sbb
lahf
mov
mov
idiv
movs
dec
sahf
jg
shl
cmp
cmp
loope
pop
imul
dec
adc
pusha
mov
mov
xchg
or
shl
out
lock
cmc
and
add
into
mov
adc
add
sub
sbb
ja
repnz
xor
ss
adc
loop
cmp
xor
sbb
mov
sub
daa
call
pop
inc
cmp
dec
sbb
mov
sub
(bad)
movs
mov
inc
mov
inc
fmul
lahf
mov
fiadd
add
push
add
mov
lea
ins
out
or
repz
addr16
pop
cwde
jmp
and
add
or
arpl
mov
clc
push
shl
aas
xchg
in
xor
mov
push
lea
(bad)
je
ret
inc
pop
pop
leave
dec
fstp
in
(bad)
in
imul
push
ret
cmp
adc
push
sub
pop
dec
push
cmp
inc
xchg
add
dec
aam
mov
hlt
aaa
add
xchg
cmp
pop
mov
stos
fcomp
xchg
jmp
icebp
pop
cmp
mov
ss
or
outs
pop
add
or
lods
add
mov
call
sbb
js
dec
pusha
xor
sub
data16
mov
inc
loop
dec
add
inc
ror
ins
sub
jp
mov
inc
pop
test
mov
movs
out
fimul
ror
ins
iret
push
mov
inc
mul
in
mov
push
pushf
xor
xor
lds
or
(bad)
cmps
ja
cmp
(bad)
sbb
mov
mov
mul
loopne
add
dec
xor
sbb
(bad)
icebp
enter
jbe
dec
add
mov
sbb
sbb
arpl
mov
and
mov
(bad)
int
cs
(bad)
jno
int
mov
mov
pop
jne
cmc
outs
sub
add
les
cld
cmp
outs
push
inc
in
mov
leave
add
mov
inc
out
dec
pop
xor
stc
out
adc
outs
push
loope
push
pop
bound
scas
test
sub
inc
pop
adc
xor
out
das
inc
dec
int
stc
int3
ret
fdiv
inc
mov
inc
or
outs
xchg
sbb
fs
mov
inc
mov
add
jl
mov
mov
or
int
jbe
aad
clc
cs
xor
fisub
repz
sbb
sbb
aad
xor
cmps
push
sub
fiadd
or
mov
cmp
xchg
mov
test
dec
xor
outs
lods
xor
xchg
jg
xor
xor
stos
dec
push
xchg
mov
nop
push
sbb
xlat
hlt
and
(bad)
add
ret
pop
sub
(bad)
push
sti
pop
pop
movs
sbb
mov
lods
retf
cmp
push
jl
scas
add
not
cmps
pop
in
aas
inc
inc
inc
(bad)
pop
outs
(bad)
mov
and
dec
add
lds
outs
or
sbb
add
dec
dec
test
mov
push
jge
int
jmp
xchg
loope
add
jmp
push
xchg
mov
dec
shl
sbb
sub
jmp
inc
push
dec
cmp
push
mov
jecxz
mov
int
mov
pop
push
mov
enter
jl
cwde
lds
sar
stos
dec
cmp
push
and
test
sbb
out
out
xchg
data16
xor
enter
std
xchg
jle
push
inc
cmp
mov
das
test
out
inc
push
sahf
into
inc
in
jg
cmp
push
mov
mov
(bad)
mov
push
retf
out
pop
inc
enter
xchg
pop
pop
in
cdq
mov
addr16
jmp
stc
ins
jp
scas
aam
pop
cmc
xor
imul
and
push
mov
mov
inc
sahf
mov
retf
jecxz
mov
dec
pop
pushf
jno
inc
mov
repz
dec
dec
jg
jb
dec
daa
sbb
mul
xchg
xor
push
xchg
inc
fwait
xchg
cmp
push
cmp
das
fsubr
stos
je
int
rcr
aas
push
mov
stos
retf
mov
mov
pop
fld
ja
fldenv
sbb
xor
and
jno
ror
movs
mov
jg
sub
mov
or
les
pop
mov
jp
clc
dec
add
mul
or
ss
mov
aad
(bad)
lea
lds
fisub
xchg
pop
aas
fisub
push
ins
jnp
cmps
sbb
or
jle
sbb
push
jnp
das
scas
mov
jae
cmps
inc
aas
imul
ja
add
dec
adc
cmp
xor
aam
xor
sub
iret
ret
mov
xchg
loope
hlt
sub
pop
dec
mov
cmp
ficomp
sets
jns
ds
mov
movs
sti
cwde
(bad)
sbb
pusha
cdq
xchg
xor
loop
aam
sbb
inc
inc
enter
(bad)
jmp
es
cld
loop
xor
mov
xor
loopne
cmp
fsubr
ss
out
gs
mov
and
test
jae
sbb
push
jg
(bad)
lock
mov
xor
jmp
mov
cmps
add
mov
int
dec
fsub
cmps
sub
rol
dec
cs
push
push
pop
(bad)
cdq
jl
gs
ds
lods
inc
jl
(bad)
aad
in
cmp
not
mov
xchg
jmp
daa
pop
mov
mov
lds
fcmovnb
stos
adc
data16
pop
ins
fild
ins
jle
cmp
mov
arpl
out
pushf
jne
mov
mov
mov
push
das
(bad)
mov
pop
rcr
jns
sub
push
push
push
faddp
dec
je
inc
jne
(bad)
or
and
mov
adc
dec
mov
pop
and
fild
cmps
pushf
fisub
mov
daa
mov
pop
es
add
pop
adc
xor
fwait
xor
jl
mov
pop
mov
lock
xchg
jno
or
jle
inc
push
jmp
(bad)
sub
push
mov
iret
fcomp
dec
cmp
mov
daa
mov
mov
inc
pop
xor
jle
or
lahf
inc
neg
sub
cmps
imul
adc
xor
pop
ror
jmp
loopne
stos
add
xchg
loopne
sub
sub
cld
mov
fstp
ret
ret
push
loop
ja
stos
pop
cmp
mov
dec
mov
leave
jp
or
ret
cmp
stos
repz
jmp
mov
sub
jge
xchg
xchg
pushf
and
inc
mov
xchg
scas
xchg
iret
ror
retf
test
pop
ret
rcl
cmps
rcr
ins
dec
pop
rcr
jne
scas
push
outs
dec
mov
pop
test
test
mov
aam
enter
ins
jbe
add
test
jno
or
push
mov
jbe
sub
dec
cdq
fidiv
jo
push
adc
aad
push
cdq
fisttp
enter
pop
sbb
pop
sub
stos
lahf
or
mov
xchg
pop
push
sub
or
xchg
enter
adc
lahf
pop
and
in
cmp
jl
jge
popf
mov
adc
ror
jg
sub
add
inc
inc
or
movs
inc
push
ins
scas
cli
dec
retf
scas
jae
mov
imul
mov
mov
or
fidivr
pop
fstp
icebp
test
add
and
repnz
and
cmp
mov
xor
jno
pop
mov
sbb
inc
hlt
or
mov
pop
cmp
sbb
xor
xchg
aad
xchg
popa
into
ret
push
sub
sbb
pop
(bad)
dec
jne
xchg
xchg
test
setne
xor
jl
pusha
mov
(bad)
mov
push
stc
sbb
in
or
and
movs
(bad)
lock
adc
add
neg
add
daa
sub
scas
clc
fistp
xchg
mov
inc
push
pop
div
adc
lock
ss
add
mov
sub
in
scas
mov
js
sub
xor
xor
out
pmaddwd
out
aaa
sbb
pop
cdq
mov
mov
mul
ret
xor
mov
sub
sub
cwde
fmul
pusha
leave
fisubr
repz
mov
call
das
jg
in
(bad)
jnp
sub
call
mov
gs
in
add
cdq
retf
into
shl
and
xor
jnp
mov
cdq
push
xchg
add
pop
add
in
dec
movs
scas
cmps
mov
(bad)
and
aam
int
in
pop
xor
jns
push
aad
retf
jns
jb
mov
enter
(bad)
(bad)
out
scas
adc
or
xchg
mov
neg
mov
jns
in
jae
les
xchg
push
lahf
push
cld
sub
int3
leave
lea
jae
dec
jns
inc
and
push
pop
push
js
call
lods
idiv
shl
dec
pop
add
ffreep
mov
mov
xchg
inc
das
into
retf
lods
pushf
pop
mov
cld
dec
xor
cld
addr16
iret
push
push
call
jmp
fdivp
add
sub
inc
ret
sub
in
aaa
or
sbb
idiv
xchg
dec
xchg
into
call
mov
or
jmp
pop
outs
cmp
test
mov
jo
or
test
mov
dec
sbb
arpl
cmps
leave
jecxz
daa
lods
stc
mov
cmp
les
mov
das
rcl
shr
add
sti
(bad)
jle
jmp
out
jnp
jae
jl
add
xlat
test
jmp
stos
inc
test
movs
ins
push
mov
cmp
nop
es
int3
cmc
sub
push
sbb
aas
sti
ds
pop
leave
push
int
test
dec
pop
icebp
retf
fist
inc
aam
push
add
jl
push
mov
inc
loope
pop
repnz
loope
clc
and
xor
call
mov
(bad)
cmp
lds
jl
sar
xor
inc
or
or
retf
out
or
sbb
iret
ja
out
(bad)
dec
mov
ja
sub
or
pusha
cld
adc
inc
cs
lods
jg
sbb
mov
ins
movs
ja
pop
sub
cmp
inc
ja
push
pop
aad
sub
rcl
adc
adc
lds
xlat
push
call
adc
cmps
adc
jg
or
mov
xor
in
outs
ins
or
or
ins
xlat
sar
or
cmp
ins
adc
inc
add
push
js
add
repnz
int3
xlat
mov
aaa
out
mov
push
adc
(bad)
rcl
push
stc
mov
in
loop
int
lea
aam
leave
sbb
scas
iret
inc
fld
sbb
mov
fldenv
adc
xchg
dec
js
(bad)
cwde
bnd
dec
dec
test
fiadd
dec
scas
pop
ret
xchg
push
mov
sahf
push
clc
cwde
xor
hlt
in
mov
add
sbb
jle
inc
add
inc
scas
mov
in
in
mov
pop
ins
push
nop
adc
lahf
je
cdq
sar
out
adc
call
mov
cmp
in
stos
or
scas
sub
and
cmp
dec
and
push
out
(bad)
fimul
mov
xlat
daa
lahf
or
pop
sbb
pop
fbld
sti
les
dec
or
popa
dec
and
xchg
xor
movs
adc
sub
xchg
fs
adc
pop
adc
psubd
lock
adc
mov
xor
mov
jle
or
or
sti
scas
aas
loope
push
jg
xchg
sub
into
mov
or
push
in
call
ins
mov
call
in
ins
adc
pop
xor
push
push
ss
fstp
cmps
push
ins
jb
popa
adc
pop
fmul
mov
fxch
mov
mov
jle
inc
movs
cmps
push
jno
call
pusha
push
pushf
sahf
push
imul
add
sahf
jnp
imul
jns
cmp
xor
arpl
je
rcl
mov
push
or
mov
mov
jno
mov
ds
in
cmp
popf
xor
leave
add
pop
push
into
dec
dec
daa
into
cld
(bad)
into
leave
hlt
dec
leave
ret
ins
xlat
add
fiadd
and
pop
sub
in
pop
pop
es
rcr
and
xor
sbb
in
outs
cmp
dec
scas
jno
jle
and
lahf
mov
imul
xor
or
mov
push
popf
sub
xor
arpl
ins
sbb
fstp
or
jmp
int
add
mov
gs
pop
outs
and
pop
lea
mov
ret
ss
adc
sbb
dec
icebp
jecxz
mov
(bad)
mov
xor
jmp
xchg
les
ja
push
ret
jns
jae
jp
jns
jecxz
iret
mov
xchg
ror
pop
out
(bad)
xchg
pop
sub
cmps
stos
lods
mul
jp
and
jmp
hlt
daa
test
mov
or
push
retf
jne
or
sub
mov
dec
ins
aas
push
push
in
jo
pop
cmp
jae
inc
dec
mov
out
pop
xchg
sar
js
push
xor
fcomp
in
jmp
pop
inc
add
pop
mov
dec
pcmpgtw
or
xchg
mov
add
movs
mov
pop
in
mov
shl
jp
and
xlat
mov
lds
or
push
xor
inc
and
fwait
pop
mov
jl
and
loopne
pop
mov
and
fild
aaa
push
or
mov
test
lea
xor
popa
loope
pop
ror
rcl
lods
jecxz
js
mov
(bad)
adc
repz
pop
imul
int3
adc
xchg
scas
push
stos
std
cmps
push
addr16
fcom
(bad)
shl
fst
sub
loopne
xor
retf
dec
push
adc
retf
loopne
mov
mov
xchg
leave
das
adc
add
int
stos
cli
call
cwde
mov
bound
xchg
mov
mov
fnstcw
(bad)
repz
in
inc
push
cli
out
add
enter
sar
or
pop
pop
mov
rcr
and
test
int3
adc
mov
add
jl
jb
or
sub
mov
jecxz
sahf
jle
loop
mov
push
sub
mov
cmp
sub
les
mov
pop
les
cmp
rcr
sbb
test
mov
es
jmp
mov
jbe
jecxz
cs
bound
and
push
movs
ds
pop
fidivr
and
call
adc
bsf
mov
xchg
sti
std
dec
(bad)
icebp
push
cmps
pushf
jae
mov
push
call
dec
push
das
leave
xrelease
dec
shl
mov
ret
and
loopne
pop
cmp
xor
pushw
loop
add
xor
mov
pop
and
hlt
jnp
dec
mov
cmp
xchg
into
jo
add
or
std
ret
gs
add
mov
mov
(bad)
cmp
jmp
xchg
inc
pop
pop
mov
dec
mov
mov
cwde
dec
retf
inc
push
fcom
xor
sar
mov
(bad)
mov
(bad)
(bad)
cmps
mov
frstor
out
aas
test
ss
mov
inc
jl
sub
jl
loop
ja
jp
(bad)
retf
aad
div
or
inc
jb
aad
stos
mov
(bad)
inc
add
cwde
cdq
xchg
inc
cmps
dec
and
inc
inc
xor
jmp
jp
sbb
call
addr16
into
inc
push
push
xlat
(bad)
std
outs
adc
push
sar
add
in
mov
cmps
xchg
daa
mov
mov
(bad)
rol
push
jecxz
js
and
xchg
pop
xchg
jnp
fisttp
(bad)
adc
nop
fcomp
call
and
scas
ror
dec
jecxz
out
xchg
sbb
or
push
adc
fiadd
sahf
or
pushf
inc
arpl
push
mov
pusha
js
stos
dec
test
lds
test
sbb
inc
fwait
sti
popf
(bad)
pop
sbb
cmp
jle
mov
stos
sub
out
js
add
or
sbb
in
pop
cld
inc
and
cmp
(bad)
mov
and
adc
shl
into
or
cmps
repz
mov
(bad)
and
int
out
mov
add
outs
lods
ins
int
fidiv
(bad)
imul
icebp
dec
push
cmp
push
mov
cli
xchg
push
fdiv
xor
into
nop
in
jg
mov
mov
test
test
fwait
shl
cwde
fistp
fsubr
xchg
mov
xchg
es
in
aad
pop
(bad)
repz
pop
dec
mov
xchg
(bad)
neg
scas
mov
out
add
ficom
dec
ret
rcr
pop
sbb
leave
jmp
fisttp
aad
mov
push
mov
(bad)
xchg
add
aaa
out
aaa
repz
and
mov
outs
push
mov
cwde
mov
lods
stos
outs
cmp
jl
js
or
push
mov
adc
pop
cdq
adc
dec
sbb
inc
push
mov
(bad)
inc
and
pop
xchg
adc
scas
js
mov
fisttp
mov
hlt
inc
or
mov
dec
leave
jg
bound
inc
daa
imul
cmp
repnz
ins
(bad)
mov
loop
jae
jno
mov
scas
popf
mov
rol
aas
add
(bad)
int3
jge
repz
repz
jnp
dec
mov
push
push
ins
mov
pop
in
adc
imul
out
push
into
mov
imul
fldcw
xor
add
mov
mov
not
fisubr
push
in
jo
cli
xchg
movs
ficom
iret
push
test
stos
mov
or
das
stos
sar
or
adc
jl
loop
iret
ja
xchg
sbb
cmp
cmp
icebp
push
repz
xchg
jmp
addr16
ficom
mov
call
ror
pop
add
push
mov
adc
je
sub
dec
jmp
or
ret
fwait
or
or
aad
mov
(bad)
cmps
test
loopne
jns
dec
push
bound
cdq
int
xor
bound
adc
push
jbe
xor
inc
test
jp
stc
and
les
pop
add
mov
sbb
push
cmp
nop
outs
ins
stc
adc
adc
jl
mov
jae
xchg
enter
mov
and
movs
mov
and
mov
inc
mov
ins
cli
ret
mov
pop
push
shl
mov
mov
jbe
push
and
pushf
hlt
addr16
cwde
test
or
push
push
mov
fwait
lods
sbb
cmp
adc
mov
mov
cwde
mov
retf
nop
ficomp
shl
mov
ss
and
hlt
cmp
daa
aas
shl
cli
ss
ret
cmp
fldenv
loop
daa
cmps
push
shr
push
inc
xchg
cmp
rcl
dec
ds
rcl
mov
into
hlt
shl
dec
fs
(bad)
(bad)
(bad)
pop
pop
jle
outs
inc
dec
test
(bad)
pop
ffreep
adc
adc
fs
sub
gs
adc
mov
das
ret
loope
stos
loope
push
mov
inc
mov
dec
xor
adc
pushf
push
fnstenv
xchg
pop
pop
lea
dec
loop
jo
(bad)
and
xchg
push
mov
test
adc
sub
jmp
sbb
adc
lds
addr16
sub
add
cmps
dec
xchg
sbb
addr16
(bad)
stos
inc
inc
cld
xchg
jbe
push
dec
inc
cmps
(bad)
cmps
sub
push
lahf
outs
jnp
push
cmp
push
sub
and
call
pop
mov
and
xchg
push
sahf
leave
jne
les
and
jg
mov
imul
daa
int3
mov
imul
cmps
clc
scas
inc
sbb
call
jns
jmp
pop
in
sub
dec
xchg
sbb
mov
inc
fdivr
mov
xor
fcmovnu
mov
cmc
jge
mov
popa
push
jl
setp
push
add
add
or
aaa
fdivr
aad
inc
ret
imul
and
cmps
adc
jae
ficomp
(bad)
pop
js
outs
or
ins
mov
cmps
fisttp
adc
jo
pop
mov
movs
mov
mov
loopne
inc
jl
inc
cmp
push
jmp
data16
xlat
jmp
fld
adc
sub
xor
lds
sbb
sub
(bad)
es
js
repnz
cmp
imul
sbb
dec
mov
pop
rcl
mov
ficomp
call
mov
lods
fld
ret
lock
inc
jns
xlat
aaa
dec
lods
xchg
sbb
mov
push
jecxz
pop
jmp
jns
mov
test
xchg
push
xchg
mov
fcomi
shl
xor
mov
leave
hlt
dec
mov
lahf
sbb
inc
mov
xchg
push
xor
dec
into
mov
jge
popa
xchg
xchg
clc
inc
push
call
imul
pop
popf
mov
call
das
push
fcomp
inc
aas
or
shr
add
stos
dec
mov
adc
add
sti
xor
scas
inc
sbb
sbb
inc
sub
pop
lods
cmp
xchg
inc
imul
jae
test
sbb
movs
hlt
fisubr
mov
in
jp
cld
icebp
outs
xor
sbb
inc
test
xor
(bad)
push
and
sub
ret
mov
dec
gs
shr
push
in
xor
and
cli
je
push
inc
out
nop
vpacksswb
test
jle
(bad)
outs
sbb
push
pop
dec
imul
jbe
fmul
outs
mov
pop
ss
lock
push
dec
sbb
sbb
aaa
call
in
jl
(bad)
scas
sahf
sar
sbb
leave
enter
loope
sub
(bad)
adc
and
add
adc
xchg
xchg
pop
out
leave
cmps
mov
sbb
dec
xor
retf
out
lds
sbb
cmps
xchg
adc
call
aad
xor
das
ret
xor
das
dec
dec
or
xor
adc
mov
xor
or
push
out
repz
jbe
data16
inc
int
and
sub
and
fucomi
ja
in
inc
push
je
in
call
sbb
add
enter
dec
add
int
enter
xchg
ror
loopne
dec
aas
mov
jb
sub
rcr
xlat
fidivr
mov
imul
imul
push
jbe
jo
mov
shr
aam
std
mov
data16
xor
ins
inc
aas
mov
sub
cmps
sbb
add
jbe
or
xor
push
pop
inc
enter
sub
(bad)
jo
in
cs
jae
inc
add
xchg
pop
xchg
sti
cmps
push
pop
add
jb
aad
sub
mov
pushf
jl
xchg
adc
mov
test
addr16
repz
add
inc
dec
push
cmp
jb
jbe
add
mov
mov
sbb
repnz
dec
movs
xchg
dec
and
gs
dec
aam
cld
lods
mov
lods
push
and
je
jl
shl
mov
fwait
mov
mov
dec
jo
(bad)
xchg
pop
idiv
dec
les
outs
or
sbb
adc
xchg
dec
sbb
xchg
outs
lods
movs
mov
fwait
test
shl
scas
call
fistp
pop
sbb
pop
sbb
mov
js
dec
mov
push
push
sbb
(bad)
xlat
or
jno
popa
mov
shl
inc
or
add
mov
into
ds
jmp
mov
aad
icebp
jno
pusha
mov
inc
ret
stos
pop
out
fs
sbb
test
lods
sbb
das
ins
dec
inc
loopne
push
in
jns
inc
ror
ret
cmp
rol
mov
mov
push
outs
scas
mov
xchg
or
dec
hlt
icebp
mov
cmp
pop
inc
push
movs
jmp
ins
pop
sub
retf
push
retf
fdiv
inc
out
int
xchg
add
dec
loopne
xchg
push
cmps
mov
add
xchg
pop
shl
push
fucomip
out
stc
add
test
sti
xor
mov
push
not
pop
xor
into
dec
xor
pop
push
push
into
imul
test
mov
data16
nop
repz
jle
loope
xor
mov
lods
mov
mov
dec
sbb
dec
pusha
adc
inc
inc
and
push
xchg
push
dec
lock
add
in
test
int3
push
jp
or
jmp
xor
xor
dec
loop
cmp
lods
inc
rol
aam
cli
test
mov
call
mov
sub
inc
jmp
cmp
fcomp
(bad)
mov
jmp
je
loope
and
xor
stos
imul
mov
ins
leave
cmovo
aaa
bound
jp
fbld
leave
pop
mov
aad
sub
sbb
push
fsubr
pop
cmp
jbe
mov
sbb
mov
mov
loope
test
or
icebp
lahf
repz
ret
cmp
push
pop
cmps
ins
push
in
mov
loopne
fisttp
jo
adc
mov
xchg
inc
or
inc
idiv
xchg
mov
jmp
inc
fwait
mov
leave
je
and
ds
call
cld
lods
rcr
sbb
repnz
xchg
dec
xchg
mov
jbe
pop
or
popa
(bad)
mov
xchg
out
sub
sbb
add
mov
adc
arpl
push
mov
cwde
and
sub
and
dec
scas
shl
jae
xor
std
mov
test
(bad)
call
add
mov
or
push
inc
adc
ds
jb
in
fdiv
dec
fsub
arpl
pop
out
out
add
mov
test
jo
sbb
sahf
lahf
mov
cmp
add
in
stos
sub
add
sahf
jb
outs
push
imul
sub
and
(bad)
mov
loope
enter
fidiv
xchg
into
out
js
ret
pop
cmp
cmps
push
mov
pop
mov
cmp
jmp
sub
mov
out
and
push
in
inc
xchg
cmps
pop
mov
popw
inc
pop
adc
ja
out
xchg
add
sbb
xchg
mov
or
jne
pop
loope
shr
cmps
mov
cmp
and
sbb
ret
mov
push
lea
fwait
lea
pop
hlt
lods
movs
imul
xchg
sahf
mov
mov
adc
es
xchg
jo
sub
pop
enter
sub
push
rcl
imul
xchg
les
cli
or
retf
mov
jge
jmp
mov
dec
das
jp
repz
mov
pop
sub
pop
in
inc
ins
mov
imul
pop
or
mov
inc
inc
or
jbe
mov
pop
inc
push
mov
sbb
inc
iret
data16
dec
and
frstor
and
fdivr
xor
int3
jo
mov
sub
cmps
and
push
sub
inc
xchg
pop
cmp
imul
pop
outs
cmc
arpl
loop
mov
mov
test
cmp
lahf
hlt
imul
xchg
jl
int3
mov
mov
imul
lea
retf
sbb
mov
dec
aad
enter
jo
xor
mov
int3
mov
add
and
pusha
pusha
push
pop
outs
or
mov
ds
jmp
xor
ror
fstp
mov
and
cmp
inc
push
adc
(bad)
pusha
mov
fprem
mov
inc
mov
xchg
retf
hlt
mov
sbb
ror
int3
pop
or
cmc
aas
loope
sbb
add
mov
add
xor
shl
jge
test
or
fsub
xchg
jbe
repz
fdivr
mov
sub
or
and
aaa
imul
mov
and
ja
cli
or
or
nop
leave
xor
jmp
ins
pop
ja
sub
fsubr
or
movs
fstp
inc
retf
scas
out
out
xchg
sbb
lods
mov
stos
loope
rol
(bad)
gs
inc
outs
pop
cmp
mov
fistp
not
adc
popa
mov
call
rcr
cwde
jmp
or
and
test
test
sub
or
out
adc
movs
loopne
ret
jle
and
mov
push
prefetch
jle
cmp
test
xchg
pop
xor
out
imul
in
out
aad
nop
pop
sar
sub
sbb
(bad)
arpl
mov
push
aam
arpl
jno
xor
mov
pop
out
and
(bad)
scas
into
pop
pop
aas
sbb
repnz
pop
xchg
cmp
and
cdq
push
fld
int3
pop
mov
inc
mov
lds
out
mul
jae
ror
pop
inc
and
repnz
int3
es
test
add
push
push
xchg
sbb
sbb
mov
or
jecxz
sub
and
inc
in
ds
cmp
mov
mov
mov
aas
(bad)
pop
dec
leave
adc
les
add
out
mov
or
repz
mov
dec
gs
aad
xor
lahf
xchg
(bad)
mov
jle
pop
in
sub
lds
lahf
ret
outs
test
clc
jmp
and
lea
inc
(bad)
jl
push
pop
push
and
adc
out
and
or
and
ret
cld
jge
and
ins
pop
jmp
mov
inc
sbb
mov
mov
and
adc
and
jbe
icebp
sub
xor
stos
dec
lock
sbb
push
add
mov
add
loope
adc
addr16
mov
sar
je
sbb
icebp
jmp
lods
push
retf
or
mov
push
movs
push
pop
jge
and
into
rol
inc
sbb
mov
das
inc
outs
ss
dec
push
test
mov
push
repnz
pushf
xchg
fisubr
aas
movs
int
pop
in
dec
jno
xchg
mov
das
cmc
outs
adc
lds
cmp
outs
mov
retf
shl
fistp
ins
scas
fild
sbb
sub
push
mov
mov
iret
jo
push
mov
int3
movs
pop
xchg
xor
xor
or
in
inc
dec
mov
sub
dec
push
ds
cli
pop
out
into
(bad)
mov
xor
mov
push
pop
sbb
call
pop
sbb
dec
outs
psrld
fstp
call
dec
aam
mov
push
sub
rcl
stc
xor
add
xor
bound
adc
jle
hlt
and
xchg
inc
dec
pop
icebp
inc
add
stos
mov
jmp
imul
adc
sbb
dec
xchg
mov
mov
stos
pop
push
push
cli
xchg
cdq
sahf
fisubr
icebp
inc
push
inc
call
outs
push
mov
fild
push
pop
jno
jbe
or
mov
lods
dec
mov
mov
mov
push
shl
fild
sbb
iret
xchg
dec
(bad)
lds
shl
push
fs
fbld
rcr
js
jns
dec
test
sub
sub
popa
mov
fsubr
(bad)
xor
fadd
es
repnz
or
sub
stos
add
shl
jmp
aad
mov
mov
dec
lea
les
std
mov
adc
cmp
retf
dec
or
jge
and
outs
fcom
xor
cmp
xor
out
xor
shl
daa
jno
retf
mov
cs
adc
jae
aad
xchg
outs
xor
stos
jbe
sbb
push
and
pop
inc
mov
push
xchg
ror
pusha
(bad)
dec
cmp
call
push
nop
shr
sub
cmp
xor
mov
inc
jg
loop
pushf
pop
ret
adc
sbb
jne
pop
inc
lock
dec
arpl
push
mov
push
addr16
cmp
pop
pusha
push
and
inc
dec
push
bound
and
adc
mov
jmp
pop
add
ret
inc
push
adc
jmp
mov
mov
retf
jmp
ret
xchg
xchg
push
enter
sub
add
ret
mov
pop
mov
jbe
mov
popf
lock
nop
pop
cmp
aaa
xchg
fisub
add
adc
add
mov
mov
push
imul
pop
fnsave
ror
and
jmp
and
sbb
aas
dec
out
cmp
pop
or
jp
fisubr
xlat
mov
jmp
push
cmp
ret
cmc
in
jo
stc
mov
xchg
mov
cmp
adc
or
into
rol
cdq
add
sub
sub
es
adc
mov
mov
push
push
das
shl
movs
idiv
sbb
push
mov
pusha
dec
jl
out
cmp
add
sub
push
in
xor
adc
in
retf
mov
mov
popa
mov
pop
or
adc
cmp
ror
lock
mov
repnz
add
bound
gs
mov
or
inc
dec
movs
inc
das
outs
lds
xchg
adc
xlat
hlt
sbb
sbb
cmp
(bad)
jns
sbb
mov
sub
mov
imul
or
cld
adc
mov
add
std
cmp
imul
sbb
xor
into
adc
sub
sbb
je
in
mov
sub
xchg
fiadd
jno
js
cmp
iret
out
movs
inc
mov
mov
stc
jno
sbb
cmps
addr16
iret
in
jmpw
and
push
xrelease
xchg
in
and
loope
test
out
jbe
aas
mov
mov
xchg
jmp
or
jp
push
pop
popa
dec
sub
mov
dec
xchg
mov
mov
cmp
xor
les
sar
sub
mov
cmc
cmp
fcom
push
in
lahf
sub
mov
jne
mov
stos
or
scas
add
xor
(bad)
jb
sub
adc
(bad)
out
push
aam
or
push
mov
(bad)
adc
jmp
mov
pusha
icebp
imul
cmp
lods
mov
mov
cmp
test
call
pop
pop
mov
daa
push
int
push
or
stos
xor
fidiv
cld
jmp
icebp
addr16
jge
lahf
dec
mov
rcr
sub
add
in
cwde
mov
jmp
mov
movs
push
ja
dec
push
arpl
or
mov
dec
pop
mov
mov
shr
ror
mov
cld
hlt
and
add
push
aam
dec
lock
xchg
repz
sbb
pop
imul
sub
jbe
cmp
aas
mov
cmp
std
inc
pop
mov
arpl
and
cmp
add
sbb
es
adc
fdivp
mov
cmp
jns
pop
or
jg
mov
cs
dec
dec
jge
imul
push
aaa
fs
ins
mov
mov
pop
mov
ja
int3
mov
loopne
cmps
lahf
cdq
dec
jg
or
pop
in
dec
mov
and
sub
cmp
mov
push
arpl
and
out
xchg
retf
inc
in
in
out
mov
movs
cld
sbb
cmp
in
mov
loopne
dec
push
cdq
in
pop
into
in
push
xchg
sbb
scas
outs
mov
out
inc
mov
sar
push
jge
leave
jl
movs
add
pop
ins
std
inc
dec
xchg
or
jmp
push
adc
mov
jmp
pop
push
mov
mov
aaa
mov
cmp
jnp
addr16
mov
pop
or
sub
adc
push
movs
xchg
and
inc
pop
int
(bad)
and
retf
mov
int
add
scas
xchg
lods
adc
pop
jo
scas
addr16
or
cmp
jmp
cmp
out
std
out
pop
or
ss
popf
and
loope
sahf
push
fwait
movs
cli
xchg
xchg
mov
iret
sub
adc
sahf
icebp
lea
popa
sbb
pop
mov
test
repnz
jmp
loope
mov
enter
call
ss
or
movs
jg
pop
mov
lock
outs
xchg
add
lds
inc
xor
pop
pop
pop
inc
mov
adc
into
aas
push
cmp
in
loope
and
or
mov
test
xchg
movs
mov
les
repnz
cli
movs
sub
loop
lods
rcl
mov
aad
xchg
cmp
ins
dec
mov
jns
out
in
fucomi
xor
retf
mov
push
test
pop
addr16
das
cmps
lods
push
push
cdq
ret
or
mov
push
bound
push
lock
out
inc
ror
mov
leave
xchg
outs
repz
add
mov
jmp
and
xchg
mov
add
sbb
jmp
xor
sar
pushf
push
xor
pop
mov
xchg
in
lods
arpl
repnz
mov
push
jb
push
(bad)
adc
jae
sub
inc
rcl
jns
and
ror
or
aad
(bad)
mov
xlat
xor
popa
loop
push
xor
sub
cmc
ret
je
add
sub
fidivr
inc
outs
mov
fsub
fisttp
xchg
sbb
dec
mov
loopne
or
mov
add
stos
sbb
jne
dec
(bad)
jns
jmp
push
aam
xor
add
dec
lahf
call
pusha
mov
cmp
fdivr
dec
test
inc
jno
sbb
inc
and
popf
push
sbb
sub
add
shr
lahf
(bad)
mov
lds
sub
sub
(bad)
and
fiadd
loop
scas
pop
jp
sub
sti
retf
shr
adc
cmc
(bad)
int3
data16
lahf
dec
xor
pop
add
xor
in
push
call
xchg
shl
jecxz
cmp
jb
sahf
(bad)
mov
push
lock
xor
(bad)
loopne
mov
jnp
aam
outs
mov
adc
and
mov
pop
lahf
aaa
cmp
xchg
push
jae
jmp
push
ret
cdq
out
loopne
or
and
xchg
xchg
sti
push
cmp
jp
pop
push
sub
sahf
not
imul
inc
not
cmp
or
(bad)
mov
loop
mov
xor
xor
xor
rcl
and
loopne
(bad)
sub
push
or
xor
push
pop
push
sahf
xor
pop
popf
lock
fstp
stc
ficomp
inc
sar
rol
mov
and
push
inc
sqrtps
mov
leave
arpl
mov
xchg
rol
ret
sub
sub
xchg
dec
or
sahf
inc
jb
(bad)
push
adc
and
and
cdq
xor
mov
pusha
and
das
mov
dec
mov
mov
inc
pop
int
in
inc
popf
pop
lods
aam
pop
inc
push
inc
es
jnp
iret
push
pop
mov
sbb
scas
ds
sahf
shr
add
out
and
call
sub
sub
ret
out
xor
fwait
dec
mov
jne
cld
sbb
push
scas
jle
jnp
and
jns
pop
dec
pusha
jae
dec
dec
fbstp
jbe
push
retf
mov
retf
in
xchg
pop
jb
inc
cmps
xchg
inc
pop
jmp
and
aam
mov
sub
pop
ret
call
and
mov
nop
push
rcl
out
ds
jne
ja
mov
cmp
sub
mov
pop
mov
retf
or
adc
out
dec
push
adc
fild
push
xchg
pop
mul
or
pop
cli
in
repz
push
xlat
cmps
sbb
or
adc
ror
pop
pop
sbb
mov
das
push
shl
sub
gs
xlat
add
in
pusha
sar
adc
pop
or
jmp
movs
call
test
xor
pushf
loop
fmul
fidiv
push
jnp
ins
popa
stc
xor
push
outs
lock
xchg
or
ja
sbb
jbe
push
repnz
std
jno
mov
add
cli
xlat
dec
(bad)
mov
jnp
jmp
pop
fnstcw
cmp
adc
xchg
das
sub
dec
push
jae
outs
(bad)
hlt
fild
jg
xor
sub
test
xlat
sub
jmp
ins
jns
mov
aas
outs
into
in
in
push
xor
loop
test
and
js
mov
in
sbb
gs
cmp
std
cli
pop
shl
ins
and
jle
gs
retf
cmovp
mov
mov
mov
pop
sbb
dec
arpl
(bad)
pop
daa
push
sti
mov
xchg
adc
or
push
enter
mov
dec
and
and
(bad)
sbb
fstp
lods
dec
xor
scas
pop
mov
sub
pop
cli
mov
jle
xchg
xor
mov
inc
cmp
(bad)
push
mov
cmps
fst
and
push
(bad)
retf
cmp
jbe
xor
mov
out
ja
movs
xor
sbb
cmp
xchg
pop
scas
jge
ucomiss
adc
pop
jmp
imul
in
lock
bound
stc
xchg
bound
jl
xor
cmp
jbe
cmps
push
pusha
mov
fwait
(bad)
mov
int
push
outs
jns
push
and
sbb
cwde
dec
push
adc
jns
xchg
mov
dec
test
adc
ss
cmps
xor
fmul
arpl
test
push
sbb
add
outs
jg
mov
call
dec
scas
adc
mov
in
fs
cmp
shl
push
sub
mov
adc
out
pop
jge
loop
loope
test
ficom
sub
inc
fmul
scas
lea
out
fild
sahf
inc
(bad)
retf
scas
mov
pop
pop
movs
test
adc
sub
sub
rcl
mov
hlt
cmp
fisttp
fmul
iret
scas
pushf
pop
scas
or
sub
push
jno
push
mov
cmp
mov
pop
lea
or
push
gs
dec
iret
(bad)
ret
cwde
sahf
call
cli
jge
ins
push
loop
(bad)
or
sbb
mov
xor
inc
pop
xor
shl
sbb
mov
dec
xchg
inc
sti
fwait
repnz
mov
aaa
in
xchg
cmps
xlat
into
hlt
mov
jl
shl
test
retf
adc
(bad)
hlt
jg
mov
mov
mov
inc
outs
add
jns
mov
sbb
stos
pop
sub
xor
loop
inc
push
jno
pop
sub
jnp
imul
mov
in
push
nop
xchg
pop
daa
push
xchg
cmp
arpl
cdq
pop
inc
addr16
mov
jnp
xchg
sbb
jl
add
mov
pusha
frstor
xchg
inc
jo
adc
pusha
cld
aaa
fwait
inc
aaa
retf
pushf
in
cdq
scas
cmps
lods
pushf
ror
stc
push
jmp
adc
jecxz
shl
jl
scas
aam
cmp
mov
fcmove
ret
xchg
shl
inc
sahf
inc
es
cmp
push
ss
bound
dec
xor
sahf
push
jle
push
xor
jne
js
mov
shr
pop
or
data16
push
inc
mov
adc
dec
xchg
mov
dec
pop
cmps
outs
lea
fwait
or
xchg
(bad)
pop
inc
mov
fldenv
pusha
out
or
xchg
or
fbstp
fbstp
mov
mov
daa
retf
dec
sbb
xchg
sbb
inc
js
mov
mov
nop
mov
xor
loope
or
adc
xacquire
mov
xchg
and
sbb
inc
and
mov
mov
or
dec
pop
jae
cmps
mov
int
mov
in
dec
jle
and
(bad)
sbb
ss
aaa
push
aas
cs
or
dec
pop
add
imul
mov
mov
cmp
cmp
scas
mov
sub
rcl
sahf
data16
imul
inc
inc
cwde
push
jb
push
mov
adc
add
dec
jp
mov
div
mov
lods
pop
mov
jae
fidivr
and
pop
dec
inc
push
pusha
dec
fs
ds
sub
call
jns
jno
mov
test
pop
adc
push
adc
inc
cmp
shr
je
jmp
sbb
and
(bad)
pop
mov
lods
pop
loopne
xor
or
jnp
test
cmps
mov
jb
pop
test
(bad)
or
sahf
in
imul
jo
rcr
xor
lea
movs
or
adc
stc
mov
js
xchg
das
fadd
aam
ror
mov
push
das
hlt
jg
sub
pop
sub
sar
fnstcw
fidivr
in
dec
(bad)
mov
addr16
pop
cmp
aad
into
fwait
mov
sub
pop
ret
mov
imul
cmp
js
cmp
(bad)
cld
dec
in
cld
lock
mov
mov
cmp
and
cld
out
adc
movs
sub
pop
or
push
int
dec
jo
cmp
pop
aam
enter
jae
xchg
pop
jno
sub
sbb
mov
scas
or
dec
and
xor
adc
xchg
lds
rcl
mov
daa
ret
loop
rol
in
ja
cmp
int3
int3
inc
push
push
popf
loop
mov
xchg
mov
in
adc
and
nop
pop
sub
and
(bad)
cdq
test
push
adc
adc
(bad)
in
mov
and
aam
outs
js
je
and
cmps
mov
(bad)
jge
and
ja
dec
sbb
ds
test
ins
mov
ret
xchg
inc
jbe
push
adc
lea
call
and
int
sub
pusha
out
jb
push
xchg
jno
out
(bad)
iret
jmp
shl
jmp
in
inc
jne
hlt
ds
(bad)
sbb
fiadd
aad
inc
bound
out
mov
mov
xchg
and
cli
add
arpl
xchg
in
scas
nop
sub
stos
mov
and
mov
push
(bad)
fcom
mov
ret
fnstenv
cmps
lds
mov
push
adc
dec
std
jne
cmps
mov
popf
jae
out
mov
in
das
mov
push
retf
xchg
xchg
mov
int3
xor
popf
xchg
icebp
in
and
push
dec
or
sahf
jne
sub
fldcw
adc
xchg
loope
idiv
jno
inc
out
push
fcomp
xlat
cmp
mov
add
into
sub
sbb
sbb
call
inc
mov
cmp
and
cwde
(bad)
cld
mov
bound
sti
(bad)
jge
jo
mov
out
fiadd
mov
mov
adc
cmp
outs
push
cld
add
pop
sub
jns
push
mov
fwait
outs
int
jmp
inc
and
xor
cdq
out
sti
xor
arpl
jne
push
sub
mov
movs
pop
mov
lds
fisttp
fs
vmulss
jg
std
sbb
lds
movs
cmp
dec
fsub
sub
es
mov
and
(bad)
loopne
scas
scas
daa
xlat
jl
movs
pop
jns
stos
(bad)
ds
dec
popf
mov
sbb
loope
lods
data16
jb
xchg
cli
ins
test
mov
add
add
test
xor
les
fbstp
jno
mov
inc
jle
xor
fucom
lahf
enter
loop
mov
stc
mov
gs
mov
xchg
scas
cmps
mov
sti
or
jge
lock
(bad)
outs
cmps
xor
mov
mov
jl
bound
dec
retf
loop
push
xchg
add
loopne
adc
shl
xor
jle
xchg
jno
shl
mov
sahf
aas
cs
mov
sub
push
mov
(bad)
outs
mov
sub
ins
add
and
loope
pop
jns
loopne
in
sbb
or
cmp
addr16
xchg
cmp
stc
pop
pop
xchg
jb
jecxz
out
mov
pop
push
in
icebp
cdq
adc
shl
enter
push
fs
std
in
mov
pop
(bad)
out
addr16
pop
movs
lock
pop
fs
or
cmps
inc
push
hlt
je
inc
jge
inc
inc
std
daa
add
cmp
xor
inc
xchg
xchg
repz
mov
mov
test
mov
in
sbb
xor
dec
add
loopne
fwait
cmps
jmp
push
sti
repz
mov
test
inc
aam
(bad)
sub
inc
jnp
cmp
bound
sar
(bad)
jae
and
fwait
les
not
and
fs
jb
adc
push
sbb
and
pop
push
mov
wbinvd
test
jo
ror
and
int3
mov
imul
dec
mov
shl
ss
push
jns
sbb
jmp
(bad)
aaa
aaa
rcl
push
stc
icebp
movs
mov
in
jmp
mov
popf
(bad)
out
gs
cli
lahf
dec
mov
loopne
jge
mov
push
fcom
das
add
and
out
mov
(bad)
inc
pop
ret
shr
(bad)
cmp
mov
repz
mov
push
aaa
lock
push
sbb
aas
into
lahf
sub
pop
(bad)
push
(bad)
pop
xor
aas
xlat
jecxz
in
inc
cmp
stos
into
cmp
clc
rcl
pusha
pop
sub
add
arpl
jae
bound
iret
test
or
shl
imul
mov
not
dec
cmp
mov
out
mov
fisubr
mov
sbb
retf
(bad)
add
xor
xor
push
push
(bad)
gs
cmps
xor
adc
out
(bad)
das
inc
not
(bad)
fild
mov
and
xchg
daa
xchg
cmc
or
shl
or
iret
scas
jmp
shr
jle
pushf
ins
icebp
pop
pop
into
cmp
mov
inc
sahf
push
dec
ret
sub
sbb
pusha
es
addr16
inc
out
sub
js
call
bound
cmc
je
push
sub
mov
mov
push
call
and
movs
mov
push
jp
jne
loop
xlat
sti
in
iret
push
movs
xor
pop
(bad)
(bad)
inc
test
mov
push
push
mov
loope
ins
and
mov
inc
sbb
mov
jns
pop
inc
adc
out
dec
daa
add
fwait
mov
xor
mov
mov
xor
mov
pop
inc
das
aad
and
dec
and
jne
inc
scas
outs
hlt
pop
mov
xor
cmp
cmp
movs
sbb
adc
dec
sbb
addr16
adc
js
test
(bad)
outs
(bad)
int3
and
adc
icebp
pop
push
or
and
(bad)
sub
xor
mov
push
movs
retf
imul
push
push
pop
pop
mov
retf
sbb
jo
sahf
xchg
mov
out
fidiv
out
mov
icebp
push
or
aam
mov
fsubr
call
cmp
xor
mov
inc
stc
inc
xchg
and
popf
and
jle
scas
arpl
mov
dec
and
jmp
adc
mov
scas
add
stos
add
in
daa
int
in
push
fs
cmp
jge
jg
popf
mov
pop
sahf
pop
je
push
fnstsw
int3
mov
fstp
nop
pop
xchg
jne
inc
cmp
or
mov
mov
adc
mov
sti
iret
out
jge
or
aaa
fcom
je
push
sub
mov
inc
adc
ja
aam
aad
mov
shr
(bad)
stos
xlat
push
imul
xchg
(bad)
scas
jno
mov
loope
or
jb
ficomp
mul
mov
or
test
pop
and
cdq
shl
iret
xchg
in
pop
push
ja
adc
in
cmp
jmp
xchg
xchg
iret
mov
xor
add
daa
mov
jb
fnstenv
ss
pop
mov
movs
lds
sbb
adc
loope
daa
adc
sti
cmovne
test
inc
cmp
loopne
pushf
dec
lock
or
sub
adc
(bad)
inc
mov
lea
imul
clc
out
push
jle
popf
sti
mov
or
cmpxchg
xor
push
mov
fimul
xor
add
test
jl
out
jmp
fiadd
call
pop
std
dec
rol
mov
sbb
push
pop
pop
out
mov
in
push
sbb
inc
mov
adc
test
aas
into
outs
bound
aas
dec
and
aaa
clc
and
sbb
push
cmp
pop
data16
mov
push
ret
dec
inc
ret
jge
jns
sbb
fmul
xchg
retf
movs
sub
jo
pop
retf
js
mov
mov
repnz
dec
pop
aaa
push
adc
xchg
sbb
cmps
or
add
inc
pusha
fs
loope
or
jb
cmps
inc
lock
xchg
std
pop
adc
xchg
call
push
inc
or
push
das
xor
mov
test
jne
mov
nop
sti
fild
repnz
out
std
and
daa
sahf
pop
cdq
daa
out
popa
sub
aas
cmps
jb
rcl
adc
pop
fcom
es
add
add
push
cmp
rcr
std
or
je
xor
cmps
push
imul
pop
enter
pop
cmps
lods
fsubr
je
rol
test
adc
and
push
aaa
in
mov
sbb
dec
cmp
mov
jge
int3
pop
add
pop
mov
mov
push
mov
outs
adc
push
push
rol
aaa
cwde
xchg
clc
jg
in
dec
add
(bad)
jo
jb
push
dec
and
cmp
pop
das
shl
fwait
add
jmp
and
jmp
dec
push
jb
jnp
sub
cmp
adc
pop
int3
add
cmp
dec
iret
xor
ret
out
mov
mov
retf
and
pop
mov
mov
jo
out
mov
dec
repnz
sbb
sbb
lods
mov
jle
inc
int
sub
mov
xor
gs
adc
push
jo
in
mov
lea
jmp
shl
cmp
imul
sar
iret
inc
aad
rcl
popa
(bad)
clts
mov
xchg
cs
out
xchg
or
adc
adc
sbb
xchg
pop
xchg
jo
popa
lea
ds
mov
in
sub
call
sahf
mov
icebp
cmp
iret
call
sar
int3
ja
or
cld
jmp
daa
or
stos
fst
repz
jg
adc
dec
imul
test
jo
ret
or
enter
pusha
pop
enter
add
nop
xor
loopne
inc
or
push
cmps
push
and
js
push
lods
loop
aam
push
mov
or
xchg
stos
mov
dec
jno
or
outs
loop
(bad)
fisttp
lods
cwde
push
cli
std
mov
cmc
jmp
sbb
mov
sti
jl
sub
pop
mov
and
pushf
jle
add
in
cmps
fsubr
cdq
jae
test
push
cmp
bound
xchg
cld
inc
jno
inc
xlat
fistp
jns
mov
outs
and
in
cmps
in
(bad)
mov
sbb
aas
mov
xchg
or
pop
out
mov
outs
int3
xchg
jno
inc
mov
test
movs
mov
aam
mov
(bad)
repnz
xchg
and
add
repz
das
popf
jae
push
pop
mov
(bad)
cmp
js
mov
and
xlat
leave
lds
imul
jne
cli
ins
retf
inc
adc
and
mov
cli
test
jp
mov
out
cmp
dec
jns
pop
movs
fisub
arpl
mov
popa
popf
and
in
mov
pop
sar
jp
mov
out
aaa
mov
ins
mov
ror
ins
shl
sub
addr16
(bad)
ins
fidivr
test
push
or
(bad)
sbb
mov
cmp
add
or
mov
cs
mov
int3
ret
dec
lds
cmp
mov
mov
in
fdiv
push
mov
stos
lea
movs
push
outs
cmp
lods
cld
hlt
adc
cmp
and
ins
cmps
jne
cwde
popw
js
ja
cmps
scas
leave
pop
ja
stos
imul
cmc
inc
mov
push
shr
xchg
pop
dec
jnp
pop
ror
jo
hlt
mov
adc
mov
xchg
mov
jecxz
idiv
xchg
xchg
imul
pop
gs
out
push
fcomp
jmp
ret
lahf
jecxz
jns
test
xor
sub
and
hlt
push
push
lea
out
in
jg
(bad)
and
push
test
lock
and
mov
(bad)
mov
add
out
cmps
inc
(bad)
scas
test
dec
aaa
push
ds
push
shr
arpl
mov
push
inc
stos
sub
mov
mov
pop
cmps
push
sbb
jl
inc
mov
clc
inc
xor
es
test
cmp
adc
mov
loopne
loope
clc
push
clc
loope
sub
int
inc
jae
rcl
xor
fld
(bad)
mov
aam
adc
mov
and
xor
sti
jle
mov
cwde
aad
dec
or
hlt
push
jmp
xchg
mov
mov
js
pop
mov
mov
push
mov
sub
xor
sub
lods
inc
push
test
mov
mov
movs
mov
or
mov
inc
rol
daa
lea
xor
inc
jecxz
pop
mov
jmp
sbb
dec
mov
xlat
sub
fcomp
std
sbb
mov
jo
xchg
sub
rol
js
xor
js
mov
jg
ror
fs
sbb
and
fld
cli
js
inc
push
sub
imul
jp
aam
dec
mov
pusha
ja
cmps
lds
adc
movs
out
xchg
adc
sub
sar
pop
sbb
xchg
sub
pop
fist
adc
ror
jae
arpl
cwde
sub
add
xor
push
adc
nop
je
fs
and
xchg
(bad)
es
pop
out
retf
mov
or
test
ror
xchg
mov
adc
clc
imul
loopne
cmp
mov
push
inc
data16
addr16
cmp
add
movs
fwait
test
sub
loopne
dec
add
pusha
repz
mov
stc
cmp
and
jnp
inc
sub
pop
test
outs
fidiv
iret
dec
enter
jo
and
pop
xchg
jmp
cmp
pop
cwde
and
push
lahf
push
jmp
sbb
dec
cmc
pop
adc
lods
xchg
sub
mov
mov
loop
in
leave
in
mov
sbb
scas
and
push
(bad)
ficom
xchg
jmp
clc
jo
sbb
dec
jnp
dec
mov
dec
pop
pop
pop
jmp
cmc
add
cmp
jne
loopne
and
jno
popf
outs
pop
jp
enter
jae
popf
cmp
sbb
push
add
push
pusha
dec
mov
push
and
sub
ins
mov
fwait
xor
add
lahf
mov
les
xor
cmp
xchg
xor
mov
fs
test
neg
lods
repz
cli
or
pop
cmc
scas
or
inc
bound
push
outs
and
sti
ret
xchg
adc
mov
sbb
ret
pop
add
fstp
loopne
pop
scas
nop
mov
outs
mov
lds
jmp
adc
sbb
inc
mov
mov
icebp
test
sti
push
les
jl
or
jmp
xor
sub
sub
imul
xor
aas
or
(bad)
out
movs
mov
or
ja
repz
sar
mov
lods
pop
mov
jl
movs
pop
loope
popf
retf
dec
jg
outs
jne
lahf
inc
pop
out
xor
jno
mov
loop
pop
fwait
xchg
lods
idiv
rcr
sbb
nop
xor
es
mov
ins
lods
jge
push
inc
fist
fs
arpl
mov
and
push
paddusb
ins
pop
sbb
inc
adc
retf
mov
loope
scas
lods
bound
xchg
jl
mov
out
sub
jbe
dec
cld
jns
repnz
jns
xor
test
mov
(bad)
cld
fwait
jg
pop
retf
push
nop
leave
lods
(bad)
adc
push
clc
jge
and
mov
xlat
shl
arpl
loope
out
jmp
rcr
or
push
dec
or
ret
adc
xchg
ins
add
mov
cmps
sub
adc
(bad)
retf
nop
retf
data16
lods
dec
fcomp
retf
scas
aad
mov
into
xchg
sub
dec
pop
mov
(bad)
mov
mov
xchg
bound
pop
add
in
push
jbe
or
cld
das
mov
dec
sahf
inc
cli
pop
ins
out
mov
call
jns
lahf
ret
jl
aam
scas
retf
outs
inc
adc
sub
loope
xchg
ins
push
mov
pop
dec
rcr
fadd
mov
(bad)
retf
(bad)
sar
das
inc
push
rol
imul
in
add
xchg
call
xchg
cmp
mov
jns
clc
pop
mov
test
dec
repnz
dec
std
mov
and
sahf
or
add
aam
and
cli
shr
sub
mov
jno
xor
je
add
dec
xchg
and
cmp
push
cwde
es
je
aaa
pushf
ss
loop
pop
mov
mov
cmp
push
mov
xchg
jmp
push
test
add
shr
fdiv
mov
mov
dec
xor
mov
outs
jne
pop
cmp
mov
sbb
out
mov
test
outs
leave
(bad)
dec
adc
lods
int
shl
cmps
or
fwait
xor
inc
pextrw
sbb
outs
ins
test
xor
cwde
stos
inc
or
lahf
jle
cmp
mov
std
sti
imul
and
rcr
mov
sub
or
adc
cmp
jmp
fsubr
jns
inc
push
mov
out
mov
enter
jns
xor
mov
sbb
test
pop
test
dec
mov
cmp
xor
std
imul
pop
fimul
cmp
cli
mov
call
mov
mov
jne
dec
fwait
push
jae
sub
inc
not
fiadd
(bad)
(bad)
bnd
lods
xchg
fiadd
lds
sbb
dec
movs
jbe
sar
push
jmp
bound
mov
sar
inc
push
je
mov
jnp
pusha
jle
in
sbb
popa
clc
inc
jp
adc
or
and
je
pushf
mov
push
pop
test
call
xor
mov
fisub
aam
push
or
call
xchg
adc
arpl
cmps
xor
lds
pop
xchg
(bad)
push
xlat
fwait
cmps
pop
cmc
mov
(bad)
dec
aas
xchg
mov
adc
jge
cmp
push
sbb
pop
dec
ins
mov
(bad)
xchg
sbb
push
push
(bad)
sbb
jge
adc
push
es
xchg
hlt
pop
mov
clc
xlat
cs
or
leave
pushf
aad
(bad)
jnp
cmps
inc
push
pop
add
xor
push
pusha
fsubr
push
add
pop
push
test
pushf
cmp
ins
xchg
scas
push
jl
fstp
sub
in
in
sbb
cmps
lds
icebp
mov
mov
lods
pop
xchg
jno
cwde
repz
and
repnz
fistp
rol
in
test
mov
(bad)
sbb
push
popa
in
lds
mul
xchg
mov
cwde
pushf
into
mov
jmp
out
mov
dec
rcr
repnz
inc
jno
sahf
lahf
jno
ins
pushf
shr
cmovp
inc
pop
mov
cmc
arpl
jo
add
jle
dec
push
mov
cmp
adc
or
cld
mov
fwait
mov
shl
ja
aaa
movs
adc
sbb
rol
and
xchg
mov
inc
dec
sar
pop
fldcw
jne
rcl
push
adc
adc
add
test
add
jle
adc
push
xchg
mov
push
jno
ins
repnz
movs
mov
mov
dec
(bad)
mov
mov
and
pop
sub
mov
cmp
xor
mov
push
enter
sub
es
ja
xor
daa
jl
add
mov
dec
lods
fidiv
push
push
div
lock
(bad)
stos
push
das
adc
dec
pop
mov
stos
sbb
xor
jbe
add
jp
jno
xor
sub
push
test
inc
push
and
pop
bound
adc
ret
add
int
dec
bound
rol
shr
jp
movs
(bad)
iret
lock
sub
jge
dec
popf
push
mov
adc
pop
jno
and
or
unpcklps
adc
stos
ret
fadd
inc
push
adc
pushf
mov
push
push
ret
repz
sbb
loope
push
and
call
(bad)
repz
lahf
or
mov
mov
cmp
pop
adc
pop
out
in
fild
ror
call
add
adc
pop
repnz
lahf
add
jl
(bad)
loop
sbb
xor
pop
xchg
mov
mov
stos
sub
pop
adc
inc
mov
mov
inc
outs
pop
int3
and
neg
cld
adc
pop
out
jge
int3
lods
in
pop
ss
(bad)
shl
outs
leave
dec
loopne
fmul
inc
movs
pusha
xchg
cld
mov
movs
hlt
mov
mov
into
cdq
adc
fistp
cmps
cmps
jmp
xchg
stos
cmp
add
mov
arpl
(bad)
daa
jecxz
out
std
inc
stos
hlt
jnp
test
ins
and
enter
xchg
movs
mov
test
jge
pusha
mov
xchg
and
mov
ins
das
add
and
inc
in
sub
arpl
call
mov
bound
(bad)
sti
aam
pop
test
jae
pop
mov
xor
add
jle
call
mov
mov
cmps
cld
stc
adc
adc
out
push
mov
jb
gs
(bad)
sub
dec
mov
jle
adc
mov
cwde
mov
mov
hlt
daa
dec
jp
xchg
out
cmps
xchg
not
or
sbb
test
ins
cs
loop
jns
cli
call
dec
jo
sub
ficomp
popf
fstp
lahf
out
test
out
adc
mov
imul
dec
jle
cmc
pop
jo
inc
shr
mov
test
inc
mov
and
push
sub
dec
sbb
rol
mov
lea
in
stos
or
inc
stc
mov
cli
jb
dec
nop
push
out
popa
or
fisttp
mov
fisubr
pop
cmp
xor
outs
dec
jge
or
pop
jnp
enter
clc
cli
jmp
add
pop
mov
popf
push
jnp
add
xchg
lock
or
mov
pop
xchg
dec
mov
cdq
dec
fwait
pop
mov
(bad)
sub
or
cmp
addr16
jecxz
iret
xchg
sahf
js
pop
jecxz
or
nop
scas
mov
mov
out
jle
test
mov
jae
jbe
stc
adc
add
push
clc
push
lea
jecxz
(bad)
call
mov
aaa
stos
aad
mov
out
xor
mov
(bad)
jnp
push
sub
(bad)
fisttp
fwait
outs
jecxz
in
sbb
sub
mov
clc
mov
leave
out
cld
push
mov
test
in
push
imul
sub
retf
push
add
imul
or
rol
push
dec
jo
repnz
dec
and
cmp
imul
repnz
ins
add
sub
cdq
sub
ja
xlat
push
movs
push
dec
xchg
je
mov
(bad)
(bad)
jns
sub
push
mov
cwde
add
sub
or
scas
test
loopne
adc
cmc
and
pop
mov
je
int3
mov
dec
add
jl
cmps
(bad)
sub
out
inc
push
inc
mov
sub
and
sbb
test
ss
sbb
lods
xchg
fucomip
fsub
mov
or
bound
sbb
mov
dec
jno
mov
mov
sahf
(bad)
loop
in
push
push
retf
shr
dec
cmp
test
and
fidiv
stos
pop
push
xor
xchg
push
jae
retf
out
and
jne
daa
sub
pop
cmps
and
daa
movs
mov
fcmovne
pop
or
dec
mov
clc
xchg
mov
lea
out
adc
jns
fstp
mov
in
sahf
dec
fsubr
mov
aam
outs
pop
aad
adc
xor
call
xchg
xchg
lea
xchg
rcl
xchg
jge
cmp
jo
push
cs
sti
pop
lds
mov
cs
pop
pusha
(bad)
loop
sbb
mov
gs
mov
lea
pop
dec
xor
ss
hlt
rcr
in
call
neg
xchg
mov
dec
jge
jo
dec
sbb
repz
push
ds
pop
stos
lock
push
inc
(bad)
test
and
std
jb
jmp
add
imul
sub
out
add
cmp
fstp
cwde
inc
leave
repnz
mov
mov
jmp
mov
sar
out
dec
retf
jp
dec
cli
or
mov
mov
es
loopne
in
loopne
mov
dec
popf
scas
or
or
and
fsub
call
adc
test
mov
punpckhdq
mov
xor
aas
mov
jne
gs
ins
sbb
and
push
mov
fs
call
aaa
sti
sub
add
inc
inc
sub
ja
cmp
jnp
in
loop
cmps
lea
movs
add
in
mov
or
mov
sub
pop
shl
xchg
jmp
iret
jmp
cdq
mov
dec
mov
bnd
push
pop
adc
stos
xchg
enter
or
and
mov
aaa
daa
jmp
jbe
and
out
xor
sub
mov
xlat
jnp
mov
push
cmp
mov
cmc
cld
mov
popf
pop
pop
lock
out
paddd
push
or
fiadd
sar
(bad)
fnstsw
jno
std
adc
jmp
sub
add
into
cmp
xchg
dec
pop
hlt
iret
sar
fs
or
clc
aad
dec
inc
dec
or
dec
or
inc
imul
lds
xor
and
out
mov
movs
inc
(bad)
sbb
cmp
sahf
add
sub
lahf
out
test
sub
loope
mov
or
or
leave
aas
cmp
xor
and
dec
mov
stos
ins
xor
(bad)
(bad)
nop
and
and
and
xchg
sbb
pop
mov
and
test
ror
(bad)
sbb
in
mov
jbe
mov
test
or
jbe
jnp
add
ja
inc
inc
sbb
lods
inc
adc
mov
xchg
push
push
pop
int3
xchg
cld
sbb
sub
ss
mov
sahf
jo
sub
sbb
sti
and
pop
or
push
idiv
or
jg
mov
imul
cdq
lahf
cmp
mov
scas
gs
cdq
add
mov
or
mov
rcr
mov
sti
aas
jne
add
ror
inc
enter
xor
(bad)
or
push
sub
cdq
cmp
iret
sbb
push
cmp
jl
push
aad
outs
jns
ror
mov
xchg
test
xchg
add
adc
jg
shl
ret
repnz
sbb
(bad)
lods
outs
(bad)
push
mov
pop
push
cdq
and
cmp
jge
lds
mov
call
and
out
scas
mov
xchg
icebp
adc
cmp
(bad)
(bad)
enter
ins
dec
(bad)
clc
in
mov
jne
repnz
and
fstp
xchg
cmp
and
cmp
add
push
jno
aad
test
sbb
cmps
pop
inc
sub
xchg
mov
pop
xchg
xchg
mov
jbe
xor
fwait
scas
jmp
cwde
cmp
fsubr
jno
jmp
rcr
call
fstp
aad
xchg
scas
inc
sub
sub
sti
ds
mov
pop
add
mov
cmp
add
ss
add
rcr
and
fcomp
test
mov
into
popa
cmp
cli
add
outs
dec
sbb
mov
xor
ror
ins
and
inc
retf
jecxz
idiv
out
pop
cmp
mov
inc
pop
repnz
out
adc
ret
rcr
stos
inc
jecxz
out
int
xor
int
adc
push
pop
out
dec
hlt
sbb
sub
jl
mov
arpl
xchg
lods
jne
fld
sub
mov
cs
xchg
int
mov
dec
jns
mov
mov
push
mov
mov
add
xor
addr16
into
mov
sbb
inc
imul
cmc
fsub
cmp
mov
adc
icebp
out
movs
add
adc
jmp
sub
sbb
in
in
daa
arpl
sbb
sub
int3
or
inc
ficomp
push
cmp
jae
ins
dec
sbb
add
scas
inc
adc
or
mov
cmp
data16
dec
jmp
adc
add
cmp
mov
into
push
fld
jne
sub
add
mov
fist
mov
icebp
scas
ja
mov
retf
call
mov
xor
xchg
adc
call
or
clc
out
xor
cmp
xor
pop
sub
sar
sbb
fwait
sbb
mov
loopne
jae
lods
jbe
inc
jmp
pop
or
loope
(bad)
loopne
ins
lds
or
jecxz
loopne
ds
xchg
push
mov
push
js
enter
mov
test
nop
pop
inc
das
xchg
and
ret
ins
fistp
scas
mov
push
stos
test
jae
inc
fbld
es
js
pop
pop
(bad)
sbb
pop
xchg
addr16
movs
aam
aas
pop
sub
mov
loop
cmp
pop
cdq
mov
dec
(bad)
js
addr16
pop
(bad)
push
das
cmp
xchg
mov
fcomp
dec
mov
and
or
sub
test
stos
je
and
cdq
inc
test
xor
ja
adc
mov
sti
ss
xor
push
pop
xor
test
pushf
add
cs
shr
gs
cld
(bad)
lock
les
ss
movs
lock
or
xor
and
lods
test
cmp
sbb
dec
cmp
mov
inc
js
loopne
nop
adc
lock
jo
cmc
jl
fidivr
test
jns
ins
jl
inc
in
idiv
dec
xor
call
jbe
mov
mov
sar
jl
mov
movs
mov
fldcw
ret
xor
jnp
inc
pop
xor
out
sbb
test
jg
lods
mov
popf
cdq
cmp
or
(bad)
mov
push
pop
or
dec
loop
in
and
pop
call
xor
fs
cmps
sub
jmp
dec
adc
and
mov
stos
fs
test
dec
jg
fcom
jle
push
or
adc
dec
xor
fiadd
iret
fbld
neg
(bad)
or
addr16
xor
push
cmc
test
sti
jnp
aam
(bad)
test
inc
stos
ss
leave
shl
gs
in
cld
sbb
xor
adc
jbe
push
ins
in
call
mov
xor
enter
mov
inc
cmp
pop
popf
adc
mov
push
pop
jge
xor
xchg
dec
jle
pop
addr16
cmp
nop
xchg
jno
or
inc
xor
adc
lea
mov
pusha
jl
out
js
inc
jae
loop
aam
jecxz
(bad)
in
dec
lods
mov
add
sti
jecxz
mov
pusha
ret
add
cli
adc
adc
aam
pop
jne
sbb
adc
jg
mov
xchg
mov
out
js
jmp
test
xor
(bad)
aas
clc
lods
aaa
mov
lea
retf
or
pop
popf
mov
out
mov
mov
call
cs
fwait
in
out
and
call
mov
dec
test
retf
aaa
fwait
mov
ret
jmp
jmp
movs
sub
or
nop
hlt
sti
add
sar
int
enter
dec
inc
sar
icebp
or
cs
mov
jae
fs
mov
psubsb
call
pop
fidivr
mov
div
and
sub
xchg
xchg
adc
js
movs
mov
mov
scas
sub
xor
outs
mov
cmp
jo
add
xchg
stc
retf
gs
dec
fist
pop
add
add
call
(bad)
xchg
ficom
cmp
add
int3
mov
nop
imul
in
push
call
inc
xchg
scas
not
xchg
sub
cmc
shr
or
mov
mov
mov
sub
and
pop
gs
ja
lods
or
pushf
cmp
aas
xchg
mov
dec
mov
loopne
in
adc
cwde
push
out
xor
sub
cmp
inc
or
jg
out
mov
adc
pop
pop
mov
xor
stc
shr
mov
xor
add
mov
cdq
stos
xchg
mov
adc
test
push
inc
and
or
pop
shr
pop
aaa
pop
pop
pop
mov
loopne
cmp
ja
xor
xchg
mov
leave
popf
push
rol
mov
addr16
jb
mov
loopne
sbb
jne
in
xor
(bad)
push
bound
xchg
rcr
xor
inc
dec
addr16
dec
xchg
push
mov
inc
test
add
sbb
cmovg
sbb
add
and
mov
mov
nop
aas
or
jne
ficomp
pop
(bad)
cs
test
in
hlt
jae
mov
inc
out
sbb
repnz
es
ja
ret
pushf
mov
jmp
popf
sbb
rcr
lea
pop
rcr
ss
test
push
cmp
fidiv
adc
jl
loopne
into
cmp
and
push
in
or
mov
jae
mov
ficom
and
mov
pop
fstp
mov
add
push
jmp
cwde
test
scas
inc
sbb
int3
fcomp
dec
sbb
out
ins
pop
pop
ror
les
es
std
adc
jg
cdq
jmp
inc
fsub
outs
push
and
mov
shl
xor
das
lea
bound
rcr
inc
push
pop
(bad)
or
ror
dec
cmp
shl
cmp
fst
xor
mov
mov
jns
int3
pop
sub
arpl
inc
popf
jmp
xchg
in
inc
sbb
dec
push
mov
add
inc
dec
mov
add
in
mov
ret
jl
push
adc
xchg
push
or
fcomp
aad
es
sbb
ret
paddb
sbb
ss
mov
mov
arpl
sbb
bound
mov
cld
leave
in
mov
iret
out
pusha
xchg
cmp
(bad)
int
cld
out
mul
push
add
mov
pop
imul
mov
in
fcom
inc
pop
ins
dec
repz
inc
or
mov
js
mov
pop
outs
movs
popa
cmp
add
repz
cmp
call
fs
mov
dec
data16
mov
nop
sahf
cmp
popf
pop
mov
sub
push
cmp
out
sahf
enter
repz
popf
adc
dec
retf
sub
lock
push
les
shl
cmp
xor
ins
sbb
push
retf
adc
mov
ret
ror
inc
push
call
add
mov
xchg
xchg
jp
ficom
gs
xlat
ret
hlt
and
adc
mov
jo
dec
psubb
cld
ins
push
cmps
push
pop
test
into
jnp
jae
int
cmps
pop
test
mov
mov
mov
push
(bad)
pop
test
xchg
pop
inc
movs
mov
push
lds
adc
dec
mov
push
(bad)
xor
mov
repz
pop
std
mov
rcl
push
add
xchg
jmp
sahf
push
(bad)
scas
js
into
int
(bad)
in
mov
mov
cmp
cmps
int3
inc
jmp
add
sbb
(bad)
push
fadd
repnz
xor
nop
outs
out
mov
(bad)
mov
or
aam
not
cmc
imul
stc
mov
in
clc
and
out
xlat
xchg
cwde
jle
pop
jl
fwait
retf
(bad)
aas
dec
leave
cwde
inc
test
dec
int3
jecxz
mov
inc
mov
push
xor
jae
cmp
or
pop
(bad)
cmp
pop
outs
in
jge
stos
test
into
pop
inc
int3
sub
sub
mov
pusha
mov
int
or
rcr
mov
or
lods
mov
jp
mov
into
mov
call
lock
sti
out
pop
daa
loope
or
loope
push
sub
ds
jbe
ja
sub
xor
sbb
dec
es
aas
jmp
std
sbb
sub
inc
xor
aam
inc
scas
inc
dec
cmp
rol
aam
add
dec
pop
(bad)
stc
add
mov
pusha
fwait
mov
and
jg
xchg
(bad)
hlt
call
cld
fisttp
adc
dec
outs
loope
ret
leave
hlt
les
mov
retf
mov
pushf
retf
pop
push
adc
xchg
jae
jmp
add
sub
in
fdivr
cmp
ret
or
sub
mov
iret
add
sub
enter
in
xchg
dec
pop
sbb
sbb
or
pop
mov
mov
sub
repnz
pop
sbb
scas
in
push
in
xor
ds
jmp
jns
add
ja
xor
push
in
aaa
iret
and
lods
lods
and
dec
hlt
jae
dec
mov
mov
pushf
je
mov
bound
test
out
or
enter
aad
mov
xchg
or
repz
push
std
xlat
dec
or
push
mov
xchg
push
pusha
(bad)
retf
fld
aas
loopne
sti
xchg
shl
mov
sub
add
cmps
lods
push
icebp
add
cmp
inc
jl
repnz
es
dec
fwait
jno
dec
int
icebp
jecxz
dec
mov
xchg
loop
into
cwde
inc
xor
scas
int
sbb
pop
add
mov
mov
lods
in
cmc
lods
stc
into
aas
dec
xchg
stc
enter
push
jle
jle
push
ja
mov
aas
out
into
movs
ret
fsubrp
jns
(bad)
bnd
cli
or
loope
jae
scas
mov
popf
push
repnz
mov
dec
loope
and
jecxz
js
dec
jne
lock
jge
mov
add
outs
js
cdq
cwde
fwait
adc
dec
jmp
movs
jmp
mov
sbb
sbb
(bad)
les
out
mov
xchg
add
add
cwde
inc
cmps
sub
mov
add
ss
int
js
dec
push
dec
ss
in
mov
not
fcom
enter
scas
cmp
retf
loope
xchg
dec
mov
cli
(bad)
mov
xchg
and
jp
test
sbb
or
xlat
xlat
push
ret
or
jns
sub
and
cmp
push
loop
dec
es
cmp
loope
cmp
jmp
(bad)
ds
rcr
gs
or
jnp
xchg
jnp
mov
sub
call
leave
repnz
or
pusha
add
jb
push
xchg
mov
or
ds
mov
and
xchg
dec
mov
popa
adc
mov
fmul
in
fwait
or
out
jmp
inc
aas
test
pop
test
push
inc
cwde
add
cmp
dec
(bad)
dec
stc
(bad)
jecxz
jae
nop
push
jno
or
mov
adc
mov
arpl
lahf
pushf
and
xchg
mov
and
test
cmp
ror
xchg
cmps
mov
jno
push
mov
in
adc
sub
xor
mov
fbstp
mov
popf
out
dec
in
nop
daa
inc
xor
inc
or
popf
dec
lods
jno
cs
adc
mov
retf
daa
or
rol
and
(bad)
lods
outs
lds
ret
imul
data16
xor
iret
mov
ret
dec
mov
xor
stos
jecxz
pusha
mov
ja
loopne
mov
fcmovbe
inc
cld
adc
inc
addr16
xor
fs
push
jns
sbb
add
sub
repnz
xor
in
pop
retf
les
xchg
adc
cmp
mov
push
push
sbb
inc
cmp
mov
pushf
test
xchg
scas
jmp
ficom
dec
push
mov
xor
jb
or
inc
sti
lock
out
mov
xchg
repz
clc
pop
(bad)
(bad)
in
stos
jl
push
loope
ss
idiv
cmp
lods
push
inc
pop
inc
fist
lods
movs
(bad)
xor
in
aam
push
clc
mov
idiv
xor
dec
int3
sub
stos
add
dec
add
push
xchg
sub
fs
cld
sbb
dec
or
aas
pop
sbb
out
ins
xchg
add
cld
dec
sbb
clc
jge
nop
cmp
fiadd
pushf
fcom
popf
mov
mov
rcr
or
test
sbb
scas
sub
lock
cs
add
push
mov
pusha
out
aam
jmp
push
mov
inc
movs
aad
sub
adc
or
mov
aad
fisttp
jle
lds
js
pushfw
mov
push
loopne
jns
imul
pop
ds
daa
div
sub
mov
movs
sbb
data16
in
pop
cdq
retf
jns
adc
add
add
adc
mov
cmp
inc
mov
or
mov
in
pop
xchg
stos
call
in
cdq
jne
xchg
adc
loope
jg
rol
inc
mov
shr
mov
add
cdq
cmps
dec
jmp
cmc
pop
push
scas
xchg
push
(bad)
hlt
outs
mov
and
int
cmp
push
das
mov
push
sbb
and
lock
loopne
jmp
and
add
shl
repz
pusha
movs
shl
sahf
jp
sbb
push
push
outs
int
xor
ds
pop
mov
sbb
repnz
sub
in
cmps
imul
cmp
rcr
dec
lea
xchg
sahf
mov
imul
mov
retf
(bad)
clc
jae
and
in
sub
adc
lds
mov
add
pop
mov
fldenv
jno
pop
pusha
scas
mov
ret
pop
or
cmp
cmp
mov
dec
pop
sbb
pop
scas
add
test
and
in
and
test
lods
inc
xor
fst
push
xchg
in
aam
mov
gs
and
mov
and
add
mov
sub
ds
retf
pusha
adc
add
xor
sbb
lods
mov
inc
mov
stos
jmp
pop
movs
jp
in
dec
ret
(bad)
jp
add
(bad)
jb
push
push
out
mov
icebp
lahf
dec
int
mov
dec
jo
xor
in
sub
or
es
and
mov
out
int
cmp
jno
stos
in
jmp
in
sti
aad
pop
scas
jmp
push
add
mov
add
fisubr
ins
add
pop
and
mov
mov
cmp
push
es
adc
push
jl
jne
jecxz
pop
out
ret
pop
and
out
dec
jecxz
test
xchg
jb
sub
inc
lahf
xchg
call
adc
adc
push
and
dec
jp
ficom
(bad)
pop
xchg
add
inc
rcr
in
cmp
and
repz
push
int3
mov
not
and
sub
xor
mov
pushf
shl
mov
push
sbb
cmp
les
hlt
mov
sbb
pop
outs
lahf
hlt
fcmovnb
das
xlat
dec
add
stos
fsub
or
push
clc
xor
push
ins
fcom
jmp
mov
push
sub
pop
xor
clc
jb
retf
sub
xor
sbb
mov
push
lea
mov
pop
push
mov
fucomi
jmp
pop
xor
shl
or
mov
leave
cwde
loop
popf
push
enter
jl
jbe
add
lods
rcr
sti
push
mul
cmc
jmp
add
leave
icebp
push
das
leave
pop
cli
test
cmovns
cmc
mov
pop
or
add
fwait
(bad)
call
rcl
into
inc
out
adc
stos
sub
pop
push
arpl
enter
xor
xchg
mov
shl
bound
cli
push
mov
int
mov
in
or
sti
mov
mov
inc
jne
clc
pop
push
ret
sbb
jne
in
lods
scas
jbe
xor
cmp
inc
stc
mov
dec
int3
jle
add
fwait
mov
lahf
xchg
cmp
sub
xor
iret
inc
ret
add
enter
cmc
xchg
xor
cld
rol
cmp
inc
pop
sbb
sahf
lods
rcl
mov
jnp
jl
aas
hlt
dec
add
fidivr
dec
or
add
cli
sub
dec
cdq
(bad)
sbb
cmp
dec
lods
push
frstor
and
adc
or
push
xchg
and
ss
jno
mov
mov
lods
xor
jnp
xchg
test
push
call
xchg
jp
in
(bad)
daa
ss
sub
cmp
inc
xor
movs
jno
leave
call
mov
jmp
cmps
and
mov
pushf
cld
mov
aas
stos
loop
cmp
cmp
ds
retf
in
fsub
xchg
jmp
ret
fsubr
movs
pop
in
sbb
mov
pop
sbb
sub
jns
in
adc
mov
push
push
mov
mov
fdiv
bswap
add
sbb
dec
xlat
jg
jmp
adc
dec
push
aaa
and
dec
retf
les
mov
(bad)
push
xor
xchg
add
inc
frstor
and
adc
xlat
out
shr
sub
inc
pop
fcomp
std
or
cmp
hlt
stos
mov
push
sbb
mov
cdq
shl
inc
out
rcr
ja
mov
gs
repnz
sub
sub
hlt
pop
mov
enter
ss
inc
les
xchg
pop
aas
ret
pushf
inc
mov
jo
(bad)
iret
mov
jae
jnp
fisubr
or
cld
std
popa
pop
cmp
pop
arpl
xor
cmc
into
fdivrp
xor
test
fild
int
cmp
out
and
arpl
sub
mov
dec
lahf
add
mov
iret
mov
movs
int
add
out
lods
push
fild
vpshufhw
enter
out
imul
dec
and
mov
mov
jns
daa
aaa
pushf
sub
scas
ss
cmp
fstp
clc
mov
jne
or
in
inc
gs
fidivr
les
clc
xor
push
mov
cmp
js
push
add
mov
push
pop
xchg
retf
ret
adc
or
push
out
xchg
mov
sub
(bad)
aam
xor
pusha
mov
cwde
xor
dec
add
mov
jne
adc
loop
daa
repz
add
daa
and
add
cmp
cmps
push
popf
lea
pop
sub
ins
cmp
mov
and
jle
sbb
imul
call
inc
in
mov
or
nop
fmul
xor
jle
dec
xor
sub
inc
push
fwait
mov
inc
mov
in
sbb
cmp
add
push
dec
ret
or
inc
pop
sbb
inc
add
hlt
ds
pop
in
outs
mov
or
mov
mov
pop
or
mov
adc
jl
inc
jns
mov
adc
push
adc
dec
scas
xchg
inc
mov
nop
sub
lods
cmp
repz
cmc
je
shl
test
retf
add
fdivr
push
or
jecxz
cmps
ret
std
leave
push
mov
add
stc
cld
xor
shr
imul
or
mov
enter
xor
int3
aam
pop
rcr
add
or
and
rcr
test
push
inc
out
cmc
push
data16
mov
ror
inc
and
mov
int3
aam
clc
cmp
mov
mov
or
jmp
test
test
lds
loopne
sbb
ret
or
jl
out
enter
sbb
nop
enter
or
jle
add
leave
fild
push
add
jmp
jns
jecxz
fcomip
add
push
call
cmp
xchg
je
popf
nop
pop
shrd
adc
inc
shl
fbstp
mov
add
push
cmps
cdq
nop
push
adc
cmps
or
mov
ficom
cmp
or
icebp
and
shr
js
dec
xchg
xchg
add
icebp
cwde
in
mov
mov
hlt
adc
jb
sub
adc
ss
pop
mov
out
ficom
mov
sahf
pop
mov
adc
mov
enter
pop
fcom
sbb
sub
cmp
inc
mov
ss
adc
sbb
fs
push
in
jmp
bound
jmp
repnz
mov
in
lds
ret
mov
data16
xchg
nop
or
add
in
cmp
sub
mov
es
push
mov
cdq
push
outs
push
imul
rcr
push
(bad)
cli
loopne
pop
push
pop
std
mov
mov
and
sub
push
jns
imul
int
dec
div
out
(bad)
push
test
inc
add
fdivr
dec
das
(bad)
mov
push
inc
loopne
movs
jnp
or
inc
mov
adc
xchg
adc
imul
cmps
xchg
call
mov
pop
aad
pop
pop
stc
lock
push
push
fwait
mov
movs
test
xor
xor
arpl
inc
les
sbb
mov
sub
or
repz
xchg
loope
repz
or
sahf
inc
(bad)
xor
xchg
push
or
inc
xchg
mov
fsubr
pop
adc
int
push
push
mov
push
pop
pop
cmp
fld
xor
xor
mov
mov
sbb
mov
jecxz
sbb
daa
and
sbb
jb
jge
push
push
dec
ins
loop
enter
fdivr
pop
sbb
mov
clc
shr
jbe
jo
mov
jae
loopne
add
rcl
ret
imul
jp
sbb
(bad)
mov
lock
leave
jecxz
aas
stos
xchg
inc
leave
pop
dec
add
rol
jmp
fiadd
pop
loope
shl
pop
shr
sbb
xor
adc
outs
les
mov
jo
ins
cwde
xor
cmp
loopne
push
out
lock
sbb
mov
sub
adc
and
xor
jo
sbb
xor
call
add
sbb
jmp
jge
test
fdiv
jo
arpl
pop
cmps
(bad)
imul
(bad)
call
inc
enter
pop
ret
dec
mov
pop
pop
stos
pop
cmp
cld
repz
data16
out
aad
mov
pop
(bad)
or
jle
call
dec
sar
bound
lahf
sti
push
push
pusha
ret
aaa
mov
push
arpl
test
pop
pop
outs
movs
push
fst
jecxz
enter
shl
jbe
out
xchg
push
aaa
fisubr
adc
or
xchg
mov
ja
xor
adc
in
sub
mov
jl
jnp
xor
mov
and
lods
mov
sti
lods
sbb
dec
add
pushf
cli
retf
cli
popf
mov
xchg
sti
lods
mov
ret
in
add
lods
mov
dec
sub
aad
and
pop
fwait
pushf
stos
push
fsub
dec
lods
mov
push
or
call
or
mov
push
cmps
rol
xchg
imul
mov
mov
or
test
push
pop
jmp
mov
xchg
jmp
or
cmps
movs
pop
test
sti
pusha
mov
jg
sub
cmp
fcomp
test
mov
aas
cmps
imul
test
and
sahf
push
out
and
pushf
and
leave
xor
retf
add
retf
sbb
xor
push
mov
ds
out
pop
ins
add
or
gs
in
sub
in
sub
lods
or
push
mov
bndstx
aad
jge
out
stc
pop
in
mov
popa
jle
jle
jp
jns
aas
iret
push
pop
push
adc
push
sub
mov
xor
popf
dec
add
enter
and
fbld
in
out
call
in
mov
push
push
inc
inc
and
dec
ret
movs
ins
repnz
pop
ja
jmp
(bad)
and
fcom
out
mov
jecxz
sub
fidivr
xchg
xchg
leave
xor
iret
loop
in
inc
sbb
icebp
and
sub
pminub
mov
jb
sbb
sbb
push
ins
cmp
rol
test
adc
mov
pop
or
mov
aas
jae
mov
jmp
push
in
int3
dec
sar
retf
inc
or
inc
aaa
pop
xchg
xor
push
fsub
mov
aaa
push
add
or
xchg
sbb
sbb
js
jl
dec
and
es
ret
das
lea
call
jp
pop
out
stos
cmp
inc
cdq
fs
pusha
arpl
scas
lds
add
dec
retf
(bad)
aas
xchg
pop
adc
and
rol
dec
sbb
add
and
push
adc
dec
faddp
outs
test
mov
(bad)
dec
punpckhwd
dec
mov
fidivr
fisubr
and
loope
lds
pop
mov
sbb
xor
idiv
pop
in
push
std
jl
arpl
sar
push
push
test
lea
outs
out
mov
jecxz
outs
xchg
int3
(bad)
pop
cld
cmp
jnp
fimul
fadd
or
mov
(bad)
mov
xchg
push
push
jno
jno
nop
(bad)
ficomp
loop
sti
fdivr
mov
or
or
pusha
push
pop
aad
jl
ret
add
xchg
mov
out
stc
cdq
(bad)
and
adc
or
stc
mov
add
int
je
iret
pop
test
jmp
xchg
les
std
pop
and
pusha
push
shr
out
sub
mov
shr
(bad)
mov
rdpmc
call
and
sbb
inc
test
pushf
sbb
adc
xchg
push
mov
ror
and
and
je
call
sub
fisub
retf
dec
and
mov
ins
leave
xor
dec
lds
outs
cmp
or
dec
pop
xchg
shl
xor
test
add
push
aaa
pop
repz
scas
xor
cmp
std
cmp
add
clc
cmp
xor
lock
jg
call
sahf
fist
lods
cld
mov
out
jnp
in
xchg
pop
retf
xchg
stc
mov
(bad)
(bad)
push
mov
sbb
into
test
dec
push
retf
lds
dec
mov
sub
or
fimul
test
fbld
stc
cmp
xchg
into
sub
ss
into
call
cwde
(bad)
pop
push
iret
sbb
pop
cmps
aad
aas
dec
out
fwait
mov
scas
lea
in
das
test
xor
cdq
adc
xchg
in
inc
push
retf
dec
loope
stos
bnd
test
shl
in
jp
je
cmps
(bad)
dec
sbb
cmc
push
les
addr16
data16
ins
mov
movs
lahf
out
xchg
cmc
mov
cmps
mov
(bad)
push
rol
add
sub
es
inc
out
fmul
adc
adc
lods
pop
(bad)
mov
mov
mov
sub
clc
or
mov
inc
lahf
inc
test
mov
xchg
sub
gs
or
out
pop
mov
sub
sbb
pop
and
mov
mov
cmps
xlat
mov
retf
aam
mov
jmp
ss
and
dec
jmp
pop
cmp
mov
dec
pop
add
dec
or
cld
xchg
adc
scas
pop
mov
sub
push
cmc
xor
sub
adc
in
inc
test
call
into
jmp
test
in
call
sub
js
test
mov
sbb
(bad)
in
cmc
(bad)
mov
stos
sub
fcom
mov
xchg
fwait
cld
and
sbb
aas
and
imul
sub
ins
xchg
mov
popf
push
cmp
in
sbb
cs
(bad)
in
das
xlat
push
pop
push
mov
fstp
jecxz
add
les
or
adc
(bad)
movs
cld
repz
jns
cmps
jns
xchg
into
push
adc
push
xor
pushf
inc
fs
mov
inc
sbb
ret
arpl
lahf
pop
(bad)
fs
pop
sahf
sbb
jnp
enter
loopne
inc
ret
fnstsw
inc
push
push
add
test
movs
sti
lahf
mov
push
mov
jle
dec
scas
aam
push
push
jb
mov
pop
repz
idiv
sub
push
aam
stos
pop
and
hlt
mov
outs
stos
ds
sbb
jp
mov
out
mov
push
jo
cmp
aaa
add
arpl
ins
xor
rol
fcomip
mov
fwait
jbe
pop
dec
movs
hlt
inc
push
loop
in
and
lods
cmps
jmp
and
jp
mov
pop
sub
xchg
and
call
jo
pop
gs
popa
pop
dec
imul
pusha
or
lock
add
fild
stos
sbb
sub
jl
retf
mov
cmp
ja
out
cmp
push
xchg
mov
addr16
into
into
or
stos
push
add
pop
mov
jmp
inc
xlat
pop
std
dec
(bad)
sysenter
mov
mov
cmps
shl
sub
jb
(bad)
jb
push
test
adc
addr16
sahf
jb
call
mov
jns
pop
mov
add
cmp
mov
dec
in
adc
test
shl
lock
pop
pushf
(bad)
(bad)
scas
outs
push
or
aaa
icebp
add
stos
xlat
iret
jo
jp
js
ret
int
xchg
into
repnz
xchg
add
ja
scas
imul
or
cmp
mov
push
cld
ins
dec
push
mov
push
push
inc
(bad)
mov
cdq
xor
jb
and
test
sbb
outs
and
sbb
repz
fwait
mov
call
inc
pop
jo
in
cmp
imul
xchg
jns
jmp
cwde
mov
mov
push
add
outs
jecxz
and
inc
adc
int3
mov
call
out
out
(bad)
ror
mov
jp
test
test
dec
and
cmps
cmc
pushf
pop
sbb
movs
ret
int
xlat
js
inc
addr16
ficom
jp
adc
sbb
pop
add
or
adc
xor
mov
cmovo
inc
cmp
sbb
and
mov
cld
pop
xchg
mov
sbb
push
scas
jge
in
jno
cmp
sbb
mov
xchg
pop
sub
mov
pop
mov
sbb
scas
test
pop
ret
sub
mov
dec
pop
cld
ror
xchg
jns
xchg
mov
daa
and
push
mov
push
or
pop
mov
stos
mov
std
xchg
and
shr
xchg
bnd
mov
lahf
outs
and
mov
xor
sbb
addr16
cwde
or
aas
in
jmp
and
into
xchg
sub
inc
lds
out
mov
sbb
imul
outs
and
hlt
mov
and
fldenv
cmp
xchg
pop
push
mov
(bad)
ror
fs
and
add
out
outs
aam
fdiv
mov
ror
jns
outs
cdq
add
jg
je
mov
mov
je
clc
inc
rcl
and
bound
push
inc
test
cdq
aas
clc
add
imul
scas
jmp
ss
std
lods
mov
inc
(bad)
cmp
fstp
in
test
and
jg
mov
(bad)
mov
imul
jmp
or
cmp
and
mov
mov
imul
clc
int
pop
call
lock
jo
or
aas
loope
shr
cmp
(bad)
js
mov
in
add
push
push
outs
xor
push
call
call
sbb
shl
jmp
lahf
shr
loop
mov
cld
pop
(bad)
sbb
pop
jnp
jbe
les
les
push
sbb
adc
mov
sub
push
dec
xor
push
jp
pop
xor
sahf
dec
mov
jo
and
ja
inc
rcr
push
mov
mov
sti
mov
jmp
pop
mov
mov
push
mov
out
or
mov
dec
ss
cli
push
push
cmps
sub
mov
inc
cmp
dec
sbb
push
xchg
fsubr
push
(bad)
add
loopne
and
adc
mov
scas
in
movs
int3
mov
dec
mov
add
jo
sub
and
push
xchg
jmp
ret
or
test
adc
lods
xchg
loop
mov
xchg
sar
(bad)
out
add
mov
jp
dec
push
sti
xor
sbb
into
aas
add
rcl
or
push
mov
and
imul
loop
int3
add
mov
out
into
add
push
inc
call
cmp
fs
mov
stos
fdivr
cdq
cmp
stos
xchg
addr16
xor
idiv
aas
pop
es
loop
or
sbb
jmp
rol
hlt
push
lock
ins
out
lods
cwde
nop
loop
xor
sbb
xor
push
pop
mov
pop
in
sbb
repz
jbe
test
rcl
inc
add
add
and
jmp
jbe
jp
mov
push
shl
shl
jnp
test
xchg
pop
xor
mov
outs
dec
and
ror
cs
cmp
or
and
adc
lahf
push
(bad)
hlt
push
xor
jae
ret
pop
adc
adc
out
outs
jl
leave
ret
(bad)
pop
enter
dec
adc
adc
pop
mov
fiadd
loop
or
in
push
mov
pop
lahf
jb
sbb
push
dec
lods
push
jecxz
mov
push
mov
mov
push
mov
pop
repnz
fmul
dec
mov
cmp
mov
rol
add
push
mov
pusha
mov
daa
jg
out
imul
jo
push
add
inc
xchg
pop
mov
cbw
retw
push
lea
daa
movs
arpl
jl
or
adc
leave
lock
jl
pop
fwait
(bad)
mov
mov
repz
push
dec
add
inc
adc
mov
sbb
leave
lds
mov
lds
push
pop
and
lods
adc
jbe
push
mov
into
addr16
and
sbb
ins
pop
xchg
shl
sbb
fdivr
retf
jle
in
pop
in
sahf
xchg
mov
lea
ins
test
push
xchg
mov
es
out
sub
fidiv
call
retf
sahf
mov
dec
ror
inc
mov
fbld
ja
dec
mov
outs
mov
bound
arpl
(bad)
call
mov
std
add
stos
mov
add
jnp
out
cmp
loop
inc
jb
mov
outs
(bad)
xchg
dec
scas
dec
cld
inc
adc
retf
int
std
mov
adc
mov
(bad)
loopne
lea
mul
movs
ins
push
sbb
(bad)
icebp
inc
(bad)
je
cmp
dec
mov
call
xor
xor
pop
xor
cmp
and
rol
movs
pop
lahf
in
(bad)
adc
sub
fldcw
mov
inc
repnz
jge
sbb
frstor
cmp
not
mov
jl
mov
into
mov
lods
lods
cmp
stos
mov
test
cmp
sub
push
popa
addr16
and
jae
jmp
movs
cmp
test
call
and
xchg
jnp
(bad)
loope
and
dec
dec
aas
lods
mov
mov
push
mov
adc
cmps
mov
xchg
test
cld
jmp
clc
jbe
jp
icebp
fdivr
and
xchg
pop
cmp
or
sbb
push
pop
xor
xchg
inc
leave
dec
xchg
imul
mov
or
jmp
or
xchg
mov
jecxz
jbe
sbb
push
xor
push
out
ja
push
popf
dec
push
pop
inc
sub
icebp
fwait
mov
sbb
aad
push
loopne
fwait
add
lea
xor
fsub
lock
push
nop
cmp
rcr
(bad)
test
sub
sub
gs
mov
popa
data16
(bad)
in
retf
or
pop
gs
push
into
cmp
sub
cmp
jge
sub
inc
icebp
or
(bad)
jne
and
xor
loop
inc
cmp
sbb
or
sbb
push
ss
dec
push
lock
fstp
pop
xor
adc
je
xchg
inc
jne
dec
mov
mov
cmps
into
cmp
add
mov
mov
fst
and
xchg
lods
leave
(bad)
pop
sahf
inc
and
fcom
push
movs
push
ror
pop
inc
cmp
(bad)
and
(bad)
sub
popa
dec
sub
(bad)
mov
or
sbb
mov
popf
jae
mov
(bad)
(bad)
repz
mov
(bad)
push
mov
(bad)
shr
or
jne
push
jl
fwait
sti
test
ja
mov
iret
inc
mov
pushf
mov
pushf
cmp
cmp
mov
aam
scas
mov
(bad)
xor
add
and
ins
retf
mov
ins
stos
test
jmp
jno
cmp
mov
jns
and
and
jecxz
js
xor
fild
adc
push
sar
mov
jg
xchg
js
sub
arpl
nop
fist
sub
out
or
(bad)
mov
mov
repnz
add
or
push
in
lods
mov
sbb
ret
xchg
ror
cmp
xor
jmp
cdq
and
add
arpl
pop
fisubr
movs
and
fld
aam
hlt
int3
(bad)
int
dec
xchg
push
cmp
mov
sbb
popa
fst
jecxz
add
jl
xor
adc
mov
and
jb
aas
push
cwde
cmp
daa
adc
retf
dec
xchg
add
sti
fisubr
xor
sub
push
icebp
test
mov
jne
scas
imul
mov
repz
sub
mov
movs
sub
sub
push
jnp
shr
cmp
sbb
mov
and
mov
and
in
jecxz
cmps
mov
movs
test
dec
mov
sub
inc
pop
push
fwait
add
mov
les
ss
loopne
ins
or
cld
jns
cli
xlat
jg
idiv
sbb
lock
cli
div
ficomp
stc
hlt
test
cmp
push
dec
pusha
loope
cdq
rcr
lds
repz
popf
jg
ss
xor
sbb
sub
pop
in
sbb
ins
aaa
pop
and
sub
push
mov
add
sub
jbe
adc
rcl
sub
inc
int
push
push
or
retf
popf
xor
or
pusha
sbb
add
add
jmp
xchg
jno
xchg
iret
sti
xlat
repz
nop
(bad)
rep
cmp
jb
rol
imul
mov
mov
adc
in
clc
jp
mov
call
fdiv
shl
jbe
ret
in
xor
add
mov
das
stc
mov
lods
out
pop
inc
sti
pop
dec
ins
dec
sbb
push
call
xchg
sahf
call
xchg
fst
push
call
cwde
(bad)
pop
data16
pusha
and
ficomp
nop
out
addr16
in
(bad)
repz
imul
idiv
lods
inc
in
nop
(bad)
fisub
psubb
mov
out
neg
xor
inc
adc
or
jmp
adc
and
(bad)
push
mov
mov
enter
pusha
jecxz
mov
gs
and
into
test
scas
(bad)
(bad)
sub
jo
rol
xchg
out
les
outs
jae
add
icebp
xlat
out
jle
outs
mov
push
mov
cs
lahf
push
stc
dec
pop
pop
jns
jae
add
jb
call
jl
adc
xor
adc
push
push
arpl
push
push
pop
xchg
pop
ins
into
or
or
add
ss
(bad)
lods
add
in
pusha
and
(bad)
out
ret
add
popf
pop
push
pop
sub
add
popa
mov
push
popa
call
ins
jle
jne
idiv
stc
sbb
cmp
or
push
cmp
daa
(bad)
and
xor
hlt
push
fmul
shl
or
mov
inc
adc
cmp
rcl
mov
test
push
cmp
cli
mov
push
test
xor
xchg
or
js
(bad)
jle
push
jecxz
jo
cmp
sub
add
mov
popa
hlt
ret
(bad)
jecxz
pushf
(bad)
sbb
xchg
cmp
dec
adc
mov
mov
outs
fnsave
add
or
pop
test
out
and
cmp
jmp
cli
mov
or
retf
jbe
inc
loope
lock
push
daa
or
mov
push
push
adc
lock
popf
and
test
mov
add
pop
jmp
mov
xchg
add
test
cmp
push
mov
or
and
mov
inc
jmp
inc
adc
mov
in
sbb
shl
std
adc
test
xchg
or
clc
pushf
arpl
lods
sets
mov
inc
test
inc
mov
sbb
ficomp
(bad)
dec
popa
popa
test
dec
dec
adc
pop
cmp
xor
movs
push
push
(bad)
or
retf
outs
mov
jo
pop
jge
xchg
sahf
xchg
push
or
cmps
stos
pushf
xchg
call
ds
xchg
mov
das
lahf
fsub
(bad)
dec
push
xor
add
jmp
stos
and
lods
rcl
loop
pop
mov
shr
xchg
int
ret
popf
pandn
movs
(bad)
or
pop
clc
xor
xchg
lahf
out
add
je
xchg
ins
add
je
sbb
test
push
aam
inc
inc
cdq
push
jae
xchg
jg
push
dec
xor
mov
iret
jmp
add
inc
dec
inc
(bad)
cmp
popa
in
stc
xor
xchg
jno
fwait
inc
es
(bad)
jmp
pop
test
or
cli
jne
cmp
sbb
sbb
(bad)
jg
fwait
xchg
xchg
js
clc
mov
enter
ins
ret
cmps
mov
push
(bad)
sbb
and
push
and
mov
mov
mov
sub
inc
repnz
outs
pop
adc
xchg
push
iret
out
(bad)
sti
enter
ds
and
sar
mov
mov
call
cmp
xor
and
cmp
xchg
adc
and
aaa
push
in
test
xchg
leavew
push
fdivr
test
stos
pop
aam
hlt
into
and
mov
int3
jae
xchg
fisttp
call
test
inc
jns
ret
pop
lahf
(bad)
nop
cmc
int
in
inc
loopne
pop
dec
pop
jns
fwait
scas
inc
push
pop
mov
push
imul
or
adc
nop
retf
fisttp
push
test
leave
lds
into
bound
mov
sbb
or
lea
pop
cmp
jmp
ret
arpl
ss
cwde
std
(bad)
pop
adc
ins
aas
loopne
out
sub
inc
pop
(bad)
mov
jbe
or
pop
jbe
xchg
js
sahf
stos
loop
loopne
sbb
aas
test
and
inc
xchg
rol
mov
in
mov
push
popf
(bad)
jmp
inc
aaa
sahf
jnp
jb
push
pusha
outs
push
sar
add
xor
in
test
rcr
xchg
sbb
jge
(bad)
ss
sub
dec
xchg
xchg
or
or
push
add
sbb
mov
xchg
mov
cs
jl
push
jmp
iret
rcl
sbb
mov
jae
pop
sbb
push
pop
pop
xor
test
jo
lock
in
pop
ss
and
xor
test
leave
push
test
dec
cmp
mov
sub
js
fcomp
and
fs
cmp
cdq
enter
std
pushf
fld
pop
xor
add
sbb
pop
bound
sahf
in
sub
mov
retf
push
fs
dec
into
scas
es
les
lock
mov
pop
cmc
dec
fild
mov
inc
add
sub
lods
pop
hlt
jne
popa
in
sbb
hlt
fbstp
ret
stc
dec
or
inc
iret
xlat
push
pusha
sbb
cs
push
(bad)
push
rol
sbb
inc
hlt
jp
cs
in
lea
fstp
(bad)
or
daa
mov
adc
(bad)
loop
cmps
jmp
js
outs
inc
mov
jg
lods
fsubr
out
xchg
call
cmp
or
push
cmp
adc
scas
sbb
pop
ds
aam
push
mov
inc
push
inc
test
fwait
dec
aaa
pop
mov
into
out
jo
xchg
movs
fdivr
(bad)
add
sub
jg
sub
and
jno
add
inc
clc
sub
(bad)
repnz
adc
inc
fiadd
mov
mov
dec
dec
daa
enter
je
sbb
jnp
cli
clc
pop
xor
or
aas
or
inc
ror
les
push
out
fs
bound
in
or
in
clc
push
test
dec
fidiv
xlat
fst
xchg
add
mov
or
xchg
jmp
sbb
das
jns
sbb
sub
call
mov
sub
(bad)
jno
sub
and
ss
jbe
sub
adc
jl
fisttp
xchg
mov
pop
inc
push
pop
xor
adc
shl
inc
in
icebp
inc
stos
or
lahf
mov
inc
clc
xor
xor
adc
push
rcl
mov
sbb
mov
dec
push
inc
pop
cld
adc
(bad)
cld
add
xlat
outs
xor
test
ret
sti
or
and
mov
pop
inc
and
or
sahf
and
inc
ja
stos
jmp
sub
dec
inc
add
(bad)
repz
xor
sub
add
gs
fst
or
pop
adc
ret
(bad)
loope
mov
mov
xor
pop
jp
icebp
sub
xchg
retf
adc
lahf
sbb
inc
div
fs
aam
mov
adc
fst
test
scas
push
inc
(bad)
push
adc
call
mov
in
fstp
inc
out
sbb
outs
test
clc
stos
or
push
mov
repz
or
push
cld
xchg
jle
js
jecxz
inc
push
ss
push
cli
sti
add
xchg
(bad)
movs
mov
cmp
jg
sbb
dec
jecxz
test
mov
mov
in
or
rcr
out
add
mov
fiadd
mov
xor
mov
jb
add
dec
(bad)
pop
(bad)
jmp
jmp
jae
push
inc
fs
idiv
xchg
cld
lods
ds
(bad)
mov
jmp
or
inc
into
mov
test
ds
and
mov
inc
aam
sbb
adc
xchg
(bad)
mov
outs
cmc
retf
leave
adc
div
mov
icebp
scas
ficom
retf
or
or
inc
xchg
jb
xor
pop
and
call
xchg
je
popa
out
mov
scas
ds
pop
push
inc
jne
jl
pop
es
mov
ds
cli
rol
(bad)
jl
lds
fsubp
cmp
in
mov
and
stos
or
xchg
das
retf
test
xchg
ds
jecxz
outs
xchg
jmp
or
push
sahf
xchg
add
mov
mov
outs
add
gs
(bad)
adc
fimul
mov
iret
ja
jo
mov
add
sti
mov
adc
fsub
xchg
sbb
jmp
xchg
hlt
push
outs
mov
adc
cmp
xchg
inc
addr16
stc
inc
sahf
int
add
js
cmp
fwait
out
call
lods
inc
jmp
xor
cli
cmps
add
and
cmp
call
xchg
jb
mov
mov
jg
lods
inc
adc
mov
push
xlat
stc
ja
cmp
sbb
movs
or
dec
stc
adc
and
out
xor
mov
add
xchg
enter
aam
mov
xchg
loop
pushf
cld
dec
ins
adc
mov
push
int
hlt
cmps
mov
and
and
pop
cmp
adc
out
pop
cs
jp
fimul
nop
sub
jo
mov
call
pop
or
cdq
add
add
cdq
adc
iret
cdq
lock
jae
gs
push
xor
sbb
mov
mov
cwde
fstp
loopne
mov
cdq
(bad)
mov
repnz
xchg
(bad)
jecxz
mov
mov
sub
adc
jae
or
or
mov
rol
sbb
xor
pop
lods
mov
in
xchg
int3
inc
repz
inc
nop
dec
movs
adc
or
in
or
mov
or
lods
xchg
jae
(bad)
out
sub
out
mov
cmp
jae
mov
lods
leave
bound
push
xor
mov
sbb
das
int
or
into
loop
js
(bad)
jno
jo
sti
jns
inc
jb
mov
dec
nop
push
or
(bad)
fist
cmp
inc
(bad)
push
jmp
xor
ficom
cdq
lahf
xlat
push
cmp
jmp
inc
pop
xor
ins
(bad)
jle
mov
push
xor
in
je
add
sbb
adc
test
inc
dec
aam
xor
aad
xor
mov
inc
mov
xor
rcr
jne
dec
aaa
jo
(bad)
mov
push
adc
mov
pop
sbb
inc
fist
sub
rcl
int
dec
jg
in
xchg
mov
push
retf
scas
fmul
or
and
movs
cmp
ret
into
mov
pop
test
js
xchg
clc
std
aas
in
pusha
lods
sbb
jo
cmps
loope
cmps
push
pmaxsw
mov
repnz
mov
aam
aaa
retf
dec
cs
mov
lahf
and
add
enter
adc
dec
dec
jg
mov
rol
sbb
adc
pusha
ins
arpl
xchg
jmp
xor
stc
and
mov
sti
and
stos
aam
lods
js
imul
mov
cmp
in
dec
fiadd
dec
outs
fiadd
dec
and
out
push
add
imul
jnp
hlt
addr16
pushf
enter
nop
jl
addr16
cmc
fwait
jmp
(bad)
pop
(bad)
xchg
cmp
fadd
aas
mov
fst
fiadd
sub
sbb
cmps
ret
mul
retf
je
pop
cwde
jmp
xchg
mov
sbb
ss
jge
xchg
xchg
push
inc
into
sbb
dec
xchg
mov
and
or
push
pop
jae
pop
repnz
mov
push
js
shr
cmp
pushf
dec
ds
dec
dec
push
inc
div
sbb
pop
fwait
cwde
pop
dec
push
xor
or
push
jp
in
fdivr
dec
arpl
das
sub
cmp
mov
jecxz
dec
or
jge
mov
add
pop
and
(bad)
cdq
fld
sbb
push
jge
iret
test
sbb
sub
adc
sbb
and
inc
(bad)
popf
pop
cmp
dec
aad
test
add
push
inc
dec
mov
jp
adc
push
dec
sbb
add
xor
loop
add
aad
mov
cmp
add
(bad)
aas
cmp
mov
mov
push
inc
jns
adc
retf
imul
xchg
or
pop
rcr
mov
std
aaa
ret
or
xor
mov
pop
inc
sti
aad
sbb
call
sti
mov
xor
xor
and
sub
rcr
sbb
popf
add
fldcw
jmp
retf
mov
add
sbb
adc
xor
lods
xor
dec
repz
jno
pop
pop
ret
and
test
jmp
shl
push
jo
sbb
int
call
sub
sub
sbb
iret
inc
outs
in
jmp
jmp
and
dec
repz
ret
loopne
pop
inc
fldenv
jmp
ins
mov
pop
inc
pop
test
sbb
out
sar
stos
leave
mov
pop
jmp
loop
ins
jbe
(bad)
(bad)
mov
mov
retf
cmp
adc
shl
push
ss
icebp
test
sub
imul
dec
jmp
xchg
or
imul
in
pop
cmps
or
int
mov
sti
jnp
or
loop
and
dec
mov
inc
das
jne
mov
imul
(bad)
in
ja
clc
movs
jo
int3
jmp
adc
mov
push
cmc
inc
sti
nop
aaa
in
mov
mov
xchg
out
rol
test
into
jae
popf
mov
test
xor
loope
add
dec
data16
sbb
mov
out
(bad)
retf
mov
jle
adc
ror
lods
sbb
ds
jecxz
cdq
mov
xchg
out
or
call
(bad)
(bad)
mov
xor
sbb
outs
cmp
xor
cmp
mov
fwait
das
aad
pop
add
jo
mov
lods
bound
and
jbe
repnz
cmps
add
and
pusha
and
cmps
arpl
stos
sub
adc
clc
ss
call
xor
adc
sub
pusha
int
fsubr
sub
add
adc
jecxz
imul
push
in
cmp
mov
xor
jmp
cmp
jl
test
cmp
rol
jmp
imul
mov
xor
and
std
pop
mov
(bad)
aaa
retf
mov
xchg
nop
stos
xchg
outs
dec
pop
xchg
push
das
inc
sbb
test
gs
ja
xor
fsub
into
int
lock
xchg
cmp
adc
pop
adc
push
sbb
(bad)
outs
inc
add
push
xchg
ss
pop
xchg
rcl
sub
pop
out
cmps
add
idiv
and
or
sahf
and
inc
fidivr
xor
push
repz
clc
inc
xchg
ret
pop
add
ret
cmp
fisttp
mov
or
jl
out
test
push
pop
or
and
(bad)
into
cdq
xchg
pop
ja
xchg
cwde
sub
xchg
js
arpl
or
push
test
pusha
mov
sub
and
add
rol
mov
mov
stos
mov
jne
shr
fdiv
jo
lods
ins
add
adc
mov
jbe
push
loope
nop
mov
lods
adc
shl
sbb
pop
push
out
sbb
sbb
popf
sub
sbb
xor
iret
adc
mov
inc
adc
push
fcmove
retf
pop
inc
push
arpl
stc
and
jmp
popa
call
stos
pop
xlat
inc
xchg
xlat
test
and
xor
call
xchg
sti
xor
mov
xor
popa
dec
mov
addr16
mov
sbb
jno
das
les
mov
pop
jmp
lock
inc
cmps
jns
xor
pop
mov
xor
push
adc
pop
dec
sbb
outs
retf
popa
std
scas
cli
inc
rol
into
or
mov
mov
je
aad
gs
push
mov
xchg
inc
add
loop
adc
mov
mov
xor
dec
es
mov
push
lea
or
cmp
jnp
jns
dec
pop
add
test
pop
sbb
(bad)
xor
inc
mov
push
scas
loopne
lds
div
xor
test
mov
push
pop
loope
lds
xor
sub
daa
push
div
adc
mov
cmc
aaa
mov
xchg
mov
std
imul
adc
jmp
mov
dec
jmp
adc
xchg
lods
out
push
push
fld
xor
push
out
aad
movs
pop
shl
push
mov
adc
aaa
mov
add
out
test
or
xchg
mov
clc
sar
mov
xor
jmp
jae
scas
mov
dec
in
jge
adc
(bad)
js
(bad)
cmp
movs
adc
push
mov
ficom
adc
cs
aaa
xlat
inc
aaa
pusha
cmp
and
loop
pushf
mov
pushf
sub
cli
cli
sub
call
sbb
xor
jnp
mov
rcl
adc
cmps
or
mov
addr16
or
jecxz
ficomp
dec
xchg
popf
pop
pop
push
adc
icebp
or
push
cmp
mov
(bad)
mov
inc
xor
cmp
mov
mov
pop
dec
dec
dec
push
or
je
push
inc
cmps
jle
retf
mov
xchg
jge
movs
mov
sar
mov
cmps
mov
sbb
adc
retf
into
dec
mov
push
or
jge
in
jecxz
retf
fbstp
outs
ret
in
fsub
pop
retf
cwde
inc
out
mov
jecxz
sbb
dec
push
pop
neg
leave
rol
mov
mov
jo
jge
xchg
enter
pop
dec
ss
lock
cmp
cmp
ficomp
adc
xchg
leave
out
mov
dec
outs
mov
and
inc
or
cmp
jns
mov
cmps
retf
dec
and
and
cmc
pop
mov
jno
scas
jecxz
cmp
adc
daa
pusha
mov
push
test
jle
mov
dec
mov
mov
mov
fstp
loopne
jmp
xor
aad
pop
jae
retf
sbb
ins
and
test
fistp
bound
and
ins
mov
push
jl
cld
icebp
jg
jmp
fnstenv
mov
ss
cli
test
scas
mov
sahf
sbb
or
scas
ds
lock
mov
xchg
cmps
fisttp
and
xor
push
cmps
fist
mov
inc
imul
push
ss
and
and
les
mov
pop
loopne
iret
jnp
outs
jbe
hlt
movs
xor
aam
dec
div
test
pop
pop
push
push
push
test
jno
stos
mov
not
sbb
mov
mov
cmp
jns
adc
out
outs
cmc
out
jno
ss
(bad)
jnp
adc
int
mov
fcom
dec
mov
je
cmp
jnp
hlt
fwait
(bad)
out
stc
fs
dec
sub
jae
add
mov
enter
out
xor
popa
add
pop
mov
mov
(bad)
repz
rcr
mov
scas
jmp
aaa
jmp
cs
push
popf
cmps
and
test
push
(bad)
cmp
push
lods
in
or
cvtps2pi
(bad)
adc
int
and
mov
(bad)
mov
sbb
xor
inc
mov
sub
(bad)
push
jnp
xchg
in
fs
jge
sub
jo
cmp
mov
pushf
mov
push
push
in
iret
frstor
mov
inc
push
arpl
imul
cmp
adc
adc
push
loope
xlat
daa
js
sub
sbb
lods
(bad)
mov
lds
in
mov
adc
push
jge
push
movs
jecxz
or
fnstcw
jmp
fsubrp
mov
xchg
out
mov
(bad)
rcl
add
dec
pop
movs
les
push
inc
cmps
es
dec
sbb
std
add
cmps
inc
bound
dec
iret
fsub
cdq
aad
mov
data16
and
scas
jb
pop
jmp
outs
cmp
inc
loop
stc
push
icebp
push
cmp
mov
pusha
mov
test
mov
push
cmc
repnz
xor
das
mov
pop
sbb
aas
popf
mov
daa
jmp
pop
add
sub
in
sub
jmp
dec
ret
mov
pop
pusha
ins
cmps
mov
subps
cdq
fcomp
jmp
mov
sub
and
push
cmp
pop
mov
rcr
or
mov
loope
(bad)
aas
or
cmp
stc
std
out
xor
push
mov
add
dec
in
pop
or
push
pop
(bad)
cld
cmps
push
sbb
and
cdq
ins
mov
lods
mov
push
cmp
jb
dec
retf
xor
sub
bound
pop
leave
movs
pop
add
lds
lds
mov
(bad)
sbb
jl
in
in
fwait
cmps
inc
add
and
fsub
outs
add
mov
xchg
mov
jbe
mov
rol
es
jmp
fild
ins
shr
jae
push
leave
or
lds
mov
xor
ss
mov
inc
js
clc
jmp
loopne
adc
mov
sahf
adc
xchg
loop
shl
xchg
rol
sub
dec
in
sub
pop
ss
xor
jb
add
cmp
inc
arpl
jbe
pop
ja
loopne
push
inc
mov
jo
push
cmp
das
das
sti
mov
mov
jbe
sub
adc
test
retf
xchg
ja
adc
(bad)
ins
inc
daa
sar
push
push
jae
push
(bad)
push
adc
mov
add
sar
popf
pop
cwde
adc
pop
into
loop
je
dec
sub
xchg
xor
mov
fbstp
shr
add
add
call
scas
stos
push
dec
inc
mov
cmp
inc
cmp
adc
clc
inc
jge
push
sub
mov
cmp
inc
jle
sbb
out
sbb
add
ins
dec
mov
mov
leave
pop
vpsubq
fmulp
xchg
inc
or
bound
cmc
mov
mov
mov
les
push
popf
out
pop
cdq
sti
ror
icebp
aam
out
(bad)
jo
in
mov
pop
imul
or
inc
ret
fwait
mov
sbb
and
or
das
xchg
and
jae
fld
(bad)
push
add
aas
jl
adc
fisub
scas
mov
loopne
adc
inc
xor
loope
repz
push
fistp
dec
sahf
and
ds
dec
mov
mov
sub
outs
cmp
push
out
(bad)
xor
pop
or
sbb
mov
mov
ret
dec
scas
aam
fld
sar
mov
into
cmp
mov
popa
pop
mov
in
shl
sub
inc
mov
and
xchg
test
mov
add
push
mov
dec
(bad)
cmc
in
rol
icebp
ds
pop
addr16
iret
movs
int
call
xchg
inc
out
ins
adc
(bad)
into
out
cmp
cli
ss
mov
pop
inc
sub
push
mov
in
addr16
pop
repnz
sub
stos
cmp
push
call
push
xchg
and
mov
xchg
jnp
jnp
push
cmps
pop
push
mov
cs
push
adc
push
lea
push
push
retf
movs
inc
retf
push
lahf
mov
stos
add
and
dec
retf
mov
sbb
retf
jno
mov
jl
sbb
inc
pop
push
test
jno
pop
aaa
cmp
or
sti
mov
push
mov
and
stc
es
jmp
cmc
(bad)
push
les
mov
shl
push
mov
imul
in
add
daa
jmp
add
arpl
adc
adc
dec
lods
in
call
push
mov
div
inc
popf
inc
ins
xor
push
and
lds
movs
mov
add
sar
mov
inc
es
adc
rcr
xchg
pop
inc
les
push
fst
out
dec
in
in
push
xchg
or
cmp
popf
inc
pop
sahf
movs
pop
call
pop
(bad)
add
add
cli
jge
jbe
sbb
mov
xor
cmp
mov
mov
jmp
daa
xchg
or
fsubp
cmp
neg
jo
mov
cmp
and
ja
inc
in
push
xor
sahf
(bad)
pop
je
jno
adc
(bad)
mov
push
in
movs
add
xlat
cmp
dec
cmp
inc
pop
jg
sbb
mov
add
inc
daa
push
sub
mov
push
fist
dec
xchg
adc
(bad)
adc
imul
sub
ja
test
jmp
xchg
xor
jecxz
mov
inc
psrld
out
retf
in
repnz
cmp
aas
xor
mov
jnp
xchg
fsubr
xor
dec
sbb
enter
outs
aaa
sbb
jae
pop
lahf
pop
arpl
and
iret
mov
pop
pop
jmp
fcomp
inc
sub
popa
cs
call
es
push
pop
fcmovu
push
out
inc
gs
jno
adc
mov
push
sub
push
adc
daa
fadd
repnz
and
movs
sbb
jo
aad
dec
or
lahf
sbb
or
mov
sahf
js
inc
loope
mov
aad
sahf
stc
jo
sar
sahf
retf
or
sub
dec
cld
(bad)
xor
mov
jo
sub
dec
iret
ins
test
inc
cmp
inc
cmp
clc
mov
mov
movs
jge
dec
sub
push
fcmovu
leave
dec
aam
push
ret
inc
xchg
adc
xor
mov
in
pop
xor
push
(bad)
sbb
adc
loop
inc
sbb
pop
icebp
cli
mov
int3
push
(bad)
sub
jae
mov
xchg
inc
retf
add
cmc
add
(bad)
shl
xchg
and
repz
jl
cmc
mov
add
mov
outs
pop
das
push
bound
mov
adc
mov
pop
adc
dec
mov
stc
mov
pop
sub
ins
mov
sbb
test
in
xchg
sub
lahf
push
dec
in
adc
ficom
dec
gs
ret
popf
mov
adc
aaa
pop
enter
ret
dec
push
clc
cmp
sbb
and
mov
je
sbb
add
fsub
call
xchg
pusha
inc
adc
loopne
fmul
dec
or
lds
pop
les
jmp
jnp
les
es
mov
arpl
outs
push
push
sbb
pop
push
lahf
adc
add
lahf
cdq
out
call
mov
fstp
ja
cmp
adc
or
cmp
dec
test
(bad)
inc
or
rol
cli
pop
push
sti
out
dec
xchg
xor
fld
lods
xor
je
pop
sbb
into
les
mov
out
cmp
push
sbb
push
cwde
scas
or
(bad)
jnp
js
je
mov
xor
inc
neg
mov
or
sub
retf
dec
movs
cld
pop
cmps
sti
mov
jl
lock
and
gs
(bad)
shr
xor
lds
lds
fiadd
adc
xchg
cmps
iret
jmp
imul
pop
sahf
sub
adc
hlt
jbe
xchg
pop
push
and
push
and
and
test
push
push
mov
push
jmp
mov
shl
or
cld
sbb
adc
fwait
clc
adc
fs
jae
xchg
pop
xor
sbb
inc
test
ret
jp
xchg
shl
enter
daa
pop
push
pop
xchg
test
mov
inc
fisub
je
dec
sbb
push
mov
sbb
fisubr
cmp
je
jmp
(bad)
jmp
xchg
adc
push
fincstp
imul
in
push
mov
xor
adc
(bad)
dec
aaa
sbb
xchg
cmp
std
movs
pop
sbb
out
or
dec
mov
xchg
aaa
push
cmp
adc
jmp
dec
outs
cmp
push
(bad)
call
or
jl
test
push
stos
mov
cmps
movs
jns
and
cmp
cmp
dec
pop
(bad)
lds
mov
mov
xor
xchg
push
push
call
call
push
xor
push
inc
jno
aad
jp
push
(bad)
imul
pop
je
das
sbb
or
mov
sbb
jge
mov
mov
lods
leave
adc
mov
xor
sub
pusha
fs
call
jl
loopne
daa
xchg
rol
cmp
neg
push
in
aaa
enter
lods
sahf
or
add
popa
lods
inc
stos
sti
cli
call
nop
and
in
xor
jg
push
sub
adc
push
gs
out
punpckhwd
push
gs
cmp
(bad)
dec
loope
ret
fsub
jg
inc
leave
into
ret
or
call
sub
clc
or
mov
xor
sbb
jo
cmp
sbb
loope
call
cwde
pop
add
mov
push
call
push
adc
xchg
aas
(bad)
mov
add
ret
cs
in
loopne
xor
out
mov
push
inc
stos
test
cmp
and
int
cmps
bound
std
mov
jo
mov
push
mov
or
not
and
mov
xor
pop
cmps
push
add
and
jle
je
lds
push
mov
inc
pop
sub
pop
aas
aad
mov
aam
out
mov
inc
sbb
mov
clc
jge
add
mov
cmps
add
mov
pop
inc
repz
hlt
les
push
add
add
push
add
aaa
push
adc
mov
(bad)
xchg
mov
imul
and
iret
adc
mov
cs
jns
loop
nop
aas
cmc
(bad)
push
sub
pop
das
and
xor
cli
add
or
pcmpgtb
mov
push
push
xchg
fistp
xchg
sub
movaps
jbe
test
inc
jno
jl
jmp
dec
cmp
mov
rcl
es
in
xor
cld
xchg
aas
pop
pop
xchg
sbb
mov
dec
les
push
fstp
sti
push
fwait
shl
pop
fldcw
in
inc
mov
lods
pop
cmc
divps
daa
cdq
leave
cmc
mov
test
mov
(bad)
xlat
popa
cdq
mov
movs
lods
lock
mov
rol
ins
daa
aam
ins
push
retf
mul
add
mov
mov
out
nop
data16
sar
loop
pop
jecxz
pcmpeqw
ja
mov
dec
iret
pop
pop
sub
test
lock
mov
(bad)
enter
and
add
mov
mov
push
movs
lods
imul
ret
ins
pop
adc
dec
ja
jle
jg
shl
loopne
pop
and
xchg
or
cld
inc
retf
imul
aam
mov
jb
sbb
ret
loopne
add
add
out
jne
repnz
cmps
xor
test
shr
xchg
xchg
nop
outs
xchg
jns
into
cmp
and
mov
jno
jo
pushf
fild
test
and
pop
xchg
call
rcr
fidiv
popa
mov
mov
or
and
test
xor
imul
fnstcw
jge
cwde
or
fcomp
jle
iret
cmp
add
retf
cwde
push
add
in
out
push
xor
inc
mov
mov
pop
and
jns
dec
stos
int3
push
pop
call
inc
xchg
retf
test
push
cmp
data16
or
bound
push
(bad)
jnp
xchg
inc
pushf
shl
mov
push
sbb
das
and
(bad)
in
jge
jl
xor
or
or
pop
lods
retf
jmp
jnp
mov
inc
cld
mov
int3
cmp
adc
mov
(bad)
mov
mov
cmc
ins
lods
pop
inc
into
test
mov
xor
mov
stc
xchg
cmp
inc
jnp
fbstp
std
jo
mov
popf
dec
(bad)
jo
daa
and
sbb
sub
push
dec
pop
add
sub
add
fmul
test
cmp
imul
xchg
adc
push
out
push
lds
jg
or
cwde
aas
sub
adc
xor
sbb
stc
cmps
jge
sbb
sub
repz
mov
and
loope
jno
lds
jnp
push
push
iret
dec
daa
out
dec
nop
in
mov
pop
or
scas
popf
adc
fst
adc
(bad)
ficomp
ins
arpl
movs
lahf
xchg
fcomp
push
cmovbe
push
push
jp
mov
adc
jmp
mov
shr
inc
xor
test
sub
std
cmp
add
xchg
mov
lods
or
lods
es
fldcw
into
mov
inc
lds
push
stc
fcom
fcmove
pop
mov
loop
iret
jne
sub
gs
mov
push
test
add
div
lea
ds
pop
punpckhdq
push
cmc
aad
mov
hlt
sub
and
inc
lods
test
inc
loope
in
loopne
fistp
sbb
cmps
leave
xchg
rol
pop
das
popa
xor
icebp
lods
push
iret
leave
loopne
jb
xor
in
add
push
xchg
push
xor
xor
sub
xchg
xchg
fs
pop
mov
push
push
es
lods
out
scas
push
inc
ret
cmp
in
fild
mov
stos
jecxz
push
shr
mov
js
movs
arpl
pop
jne
sub
xor
cmps
jecxz
xor
out
ins
aaa
add
pop
je
imul
push
inc
mov
lahf
add
rol
cmp
mov
inc
fmul
ja
retf
jecxz
scas
pop
stos
mov
jp
in
sti
cmp
test
jecxz
xor
idiv
scas
and
push
loopne
out
xor
frstor
add
out
sbb
inc
push
mov
or
add
jmp
xchg
cs
(bad)
xor
aaa
xlat
xor
jp
bound
inc
mov
or
mov
sar
push
jo
js
fidiv
xchg
lods
dec
mov
add
in
mov
call
in
jae
jp
and
pusha
loop
in
sub
pusha
adc
xrelease
lods
fsub
dec
jnp
in
and
pop
test
dec
scas
xor
mov
inc
in
addr16
or
xor
pop
push
pop
stos
loope
not
push
enter
jae
and
hlt
xor
imul
js
mov
sbb
mov
test
bnd
sub
jne
dec
adc
or
inc
(bad)
pusha
loop
push
and
test
dec
jae
ret
call
std
dec
icebp
mov
jae
and
cmc
push
movs
hlt
iret
mov
fmul
add
push
and
mov
mov
test
jns
sub
pmovmskb
inc
and
push
pushf
push
xchg
call
mov
adc
retf
int3
and
test
adc
or
movs
scas
cmp
cmp
xchg
pop
sub
jnp
jae
out
xchg
cld
sahf
loope
push
pop
int3
sub
jbe
inc
mov
cmp
inc
push
ja
ror
sti
fdiv
sti
cmp
in
pushf
in
scas
xchg
inc
addr16
adc
mov
fsub
popf
mov
xlat
xchg
popa
or
mov
test
cli
(bad)
mov
mov
pop
push
cmp
mov
leave
movs
fbld
push
out
xchg
imul
adc
mov
sub
pusha
jp
cmp
pop
jl
cmps
inc
sbb
cwde
retf
xchg
and
retf
popf
test
mov
add
dec
dec
fsub
jmp
cli
in
sbb
cmp
sbb
pop
fcom
sbb
(bad)
fwait
pop
out
scas
adc
loop
ficom
js
and
xor
fld
push
fldcw
and
mov
scas
sub
fwait
jae
xchg
push
xchg
(bad)
mov
call
test
cmp
cmp
movs
mov
adc
or
mov
mov
mov
xor
pop
jle
mov
mov
into
push
xor
mov
mov
data16
or
add
xor
in
mov
push
inc
mov
jnp
daa
cmc
retf
and
call
inc
adc
mov
pop
dec
pop
(bad)
add
pop
mov
out
pop
iret
add
sbb
mov
rcl
mov
loop
loope
sbb
popf
pop
mov
push
jmp
out
push
sub
pop
push
mov
lahf
or
and
stos
dec
sti
add
mov
pop
sub
push
lock
adc
mov
popa
popf
and
rol
dec
fist
shr
test
jle
mov
retf
call
xchg
inc
jbe
int3
push
push
js
xchg
stos
test
(bad)
jl
bound
add
shl
mov
pushf
mov
xor
push
das
arpl
sbb
xchg
sbb
adc
repnz
test
xchg
xchg
cld
add
or
push
imul
lock
pop
fdiv
(bad)
es
pop
adc
ret
sbb
mov
cs
mov
test
sbb
cmp
push
imul
fistp
pop
frndint
sub
cmp
inc
jmp
and
neg
addr16
dec
cmp
fwait
lods
iret
(bad)
xor
xchg
pop
mov
sub
push
jne
xchg
jno
adc
les
movs
push
cli
aam
dec
xchg
loopne
imul
xchg
js
sbb
or
xchg
sub
popa
mov
aas
push
mov
stos
push
scas
fcmovb
mov
pop
add
fstp
pop
addr16
in
adc
jno
inc
in
pusha
repz
sahf
cmp
ds
sub
neg
pushf
repz
int
sub
pop
les
sbb
cmp
and
cmp
mov
pop
mov
and
ja
sub
jp
add
xchg
rcr
mov
cmp
sahf
and
mov
mov
xchg
jnp
shr
sub
push
out
rcl
stos
sbb
pusha
popf
xlat
mov
outs
push
jg
mov
sub
pop
jge
dec
nop
int3
mov
mov
(bad)
std
dec
je
shl
pushf
rcl
loope
push
mov
mov
push
ret
jl
sub
call
dec
push
pop
gs
out
fstp
fsub
jge
leave
inc
jge
lds
out
inc
or
aas
jnp
int3
add
test
pop
mov
fild
loope
push
inc
mov
test
ins
loopne
pop
dec
adc
pusha
rol
sbb
call
cmc
dec
out
sub
loope
mov
ss
lahf
add
and
and
add
sbb
dec
adc
mov
and
dec
arpl
shl
jno
pop
or
sar
retf
sub
cmp
cmp
pop
call
sbb
sub
jae
mov
(bad)
call
push
int
aas
mov
mov
inc
push
std
gs
mov
test
sbb
jb
int3
and
sti
xchg
sar
pop
sahf
push
cmp
xchg
ficom
mov
add
and
mov
(bad)
sub
out
jo
jno
out
add
mov
jl
jmp
cmc
adc
in
nop
inc
(bad)
std
ret
gs
adc
popf
fcomip
cmp
push
scas
add
sahf
or
push
jno
mov
jb
mov
xor
(bad)
int
fadd
push
adc
dec
out
mov
xor
(bad)
iret
add
xor
jmp
ss
jg
and
jmp
dec
(bad)
xchg
sbb
outs
and
inc
rol
mov
xchg
ins
and
ins
retf
push
pop
ja
sbb
jg
push
sar
push
add
and
clc
jne
adc
pop
es
adc
mov
and
out
jae
mov
sub
mul
inc
lods
in
xchg
mov
mov
pop
das
mov
aam
stos
sub
nop
cmp
imul
icebp
mov
popf
sub
out
lea
iret
cmc
dec
mov
aad
jb
adc
movs
call
pusha
sbb
dec
nop
(bad)
sub
and
add
sbb
inc
std
mov
loop
cmps
es
pop
sbb
popf
(bad)
imul
jbe
jg
arpl
mov
inc
stc
inc
jbe
xchg
aaa
fisub
es
data16
cdq
idiv
pop
js
dec
aaa
cmp
jno
cmp
pushf
sbb
cdq
fnstsw
inc
lods
(bad)
xor
xor
jge
rol
jge
jns
mov
addr16
out
mov
adc
ins
pop
mov
inc
or
fnsave
inc
movs
fwait
mov
cwde
cmp
hlt
fiadd
clc
mov
pop
dec
in
int
mov
call
loopne
add
das
lods
lods
(bad)
jg
mov
cmps
fadd
jns
inc
fisub
arpl
ins
bound
push
cwde
add
pop
mov
push
fdiv
daa
sti
out
cmp
jp
in
pushf
ds
mov
mov
enter
hlt
loope
inc
pop
arpl
mov
mov
add
lods
fistp
ss
iret
ja
enter
shl
jne
loop
ins
mov
loopne
fs
cmovae
add
xchg
out
test
add
das
push
sbb
dec
add
mov
fadd
out
fisubr
add
adc
lea
pop
jno
fisttp
js
dec
push
inc
inc
into
dec
fwait
(bad)
xchg
sub
jb
mov
imul
push
jge
or
inc
div
sahf
and
das
addr16
or
lods
test
xchg
shr
adc
mov
shr
xchg
sbb
jbe
aam
push
shl
inc
and
les
sti
add
sub
test
scas
aas
rcl
imul
add
mov
icebp
or
jecxz
inc
out
mov
dec
jle
scas
dec
ds
add
inc
dec
mov
mov
adc
jp
mov
enter
neg
adc
stos
rol
repz
mov
push
push
lock
in
mov
fisttp
shl
jle
pop
pop
jae
xor
fcmove
sub
enter
arpl
sbb
cmc
mov
sbb
outs
xor
or
pop
push
nop
xchg
adc
pop
and
(bad)
sbb
and
mov
popf
or
or
inc
test
dec
sti
stc
test
test
stc
push
push
adc
cmps
add
in
xchg
jge
lahf
loope
pop
jns
shl
test
inc
mul
mov
out
fbstp
and
retf
and
lahf
dec
and
mov
cmp
clc
(bad)
into
xchg
mov
mov
cli
push
call
scas
in
loopne
pop
vaddss
and
and
pop
dec
xor
jae
xchg
dec
shl
call
pusha
sar
and
scas
xchg
popa
inc
xchg
jle
std
dec
cmp
inc
sti
pop
and
les
inc
scas
push
cmp
or
sbb
out
push
and
jmp
jae
outs
sub
rol
add
push
mov
loopne
xchg
loop
xchg
pop
dec
dec
adc
mov
hlt
dec
call
mov
outs
push
(bad)
push
mov
and
jge
call
dec
push
xchg
imul
iret
and
pop
das
sahf
mov
ins
pop
xor
xchg
outs
idiv
add
add
aad
cli
cwde
(bad)
mov
call
out
cdq
les
jns
and
fmulp
repz
jmp
mov
arpl
push
shl
jbe
into
fstp
mov
jne
dec
in
and
cmp
pop
out
call
pmulhw
stos
jge
push
jnp
(bad)
imul
lock
jno
daa
retf
pop
loope
jb
movs
cmps
add
xchg
pushf
mov
fmulp
aad
dec
or
xor
mov
adc
adc
fadd
sub
movs
mov
stos
out
fadd
enter
les
cmp
fidiv
inc
sbb
cmp
sub
sbb
shl
leave
mov
out
cmps
lahf
retf
xchg
loop
and
retf
jg
mov
bound
scas
sti
jae
in
jns
mov
add
arpl
sti
repz
mov
movs
mov
pop
aad
fidivr
cmps
outs
cli
stc
retf
hlt
pop
push
nop
repz
aas
daa
dec
inc
(bad)
mov
and
stc
shr
sub
not
cmp
and
sub
pop
pop
push
sub
mov
imul
sub
jg
push
inc
inc
cdq
clc
jmp
push
in
mov
push
in
jmp
mov
xchg
sub
inc
xchg
cmp
sub
and
sub
stos
mov
push
test
or
test
pop
jnp
mov
xor
adc
lock
fcomip
rcl
fsub
mov
(bad)
outs
lock
mov
ret
or
shl
addr16
dec
retf
jbe
jle
dec
push
stc
loop
inc
mov
push
and
je
mov
retf
jno
sub
js
cmp
push
cmps
inc
or
imul
push
cmp
or
inc
ret
imul
nop
jmp
rol
addr16
scas
inc
loop
fld
sub
rcl
test
aam
jmp
inc
pusha
inc
push
mov
stc
xor
xor
inc
jp
mov
push
and
or
mov
pop
jge
test
pop
and
xlat
inc
mov
mov
push
jl
add
sbb
mov
ins
pop
pop
ins
repz
arpl
mov
cmp
and
test
inc
daa
and
iret
test
adc
xor
mov
mov
pusha
push
push
popa
lods
int
mov
shr
xchg
cmp
inc
ja
mov
cmc
or
mov
sbb
lods
or
ret
or
and
jnp
das
jns
iret
in
call
iret
nop
call
push
mov
(bad)
xlat
and
xor
jno
xor
and
jmp
popa
xor
pop
adc
je
sub
in
std
fadd
adc
jnp
jl
jbe
push
mov
enter
out
sub
shl
cmp
dec
and
retf
lods
movs
mov
and
pop
test
repz
jge
rcl
sbb
shl
sbb
xlat
inc
sub
mov
ffree
fmul
mov
push
(bad)
pop
in
pop
pop
or
add
das
mov
inc
cmp
sahf
dec
xchg
shr
jno
jno
fs
(bad)
push
sar
jb
and
xor
add
cld
cs
mov
enter
repnz
push
pop
popa
sbb
loop
mov
push
mov
xor
pushf
mov
sbb
sub
pop
enter
xlat
sub
inc
cmp
sub
sbb
dec
(bad)
in
cwde
test
xor
dec
pop
adc
mov
xor
(bad)
xchg
inc
repnz
int
cs
inc
jno
scas
xchg
lods
pop
sahf
adc
jns
add
mov
mov
and
(bad)
js
fucomp
dec
dec
mov
mov
scas
mov
and
out
jle
pop
jno
gs
or
enter
sbb
mov
jnp
cmp
and
je
in
cmp
mov
retf
or
(bad)
out
push
mov
jle
lods
cmp
inc
std
push
scas
push
rol
dec
sub
(bad)
sti
jge
std
xor
addr16
xor
lods
ror
inc
pop
add
xchg
sti
mov
aas
xor
and
js
mov
mov
fwait
cmp
fidivr
cs
sbb
pop
fadd
cmp
inc
xor
in
or
repz
adc
(bad)
fild
das
cmp
scas
aad
xlat
and
adc
repnz
add
lock
cmp
dec
sub
xor
out
cs
das
imul
sub
push
mov
xor
sub
lods
sbb
dec
cmp
and
cmp
popa
sub
xor
jno
test
sub
cmp
out
sbb
or
push
lods
int3
xchg
mov
adc
jno
nop
sub
imul
mov
iret
out
mov
je
push
call
data16
dec
push
fidiv
call
loopne
pop
jae
fdiv
mov
das
(bad)
(bad)
iret
sbb
cli
sub
add
movs
fmul
or
xchg
adc
(bad)
leave
loopne
jg
push
aas
out
fs
sub
add
push
int
push
shl
sub
push
call
imul
into
fmul
cmps
add
sbb
loopne
cmps
cmp
ds
mov
pop
inc
mov
fwait
and
inc
ja
arpl
mov
cdq
in
mov
ss
adc
xchg
push
mov
sahf
dec
out
pop
js
adc
inc
pop
lods
das
popf
or
fidiv
fs
std
stc
and
shl
inc
inc
push
outs
loop
jge
lds
out
jmp
call
xor
sbb
dec
push
gs
fcmovne
or
sub
inc
mov
pop
mov
popf
xchg
fwait
add
cmp
mov
add
icebp
sbb
call
outs
cmps
xchg
test
mov
bound
mov
shl
in
mov
jbe
inc
xchg
shr
lock
add
pop
lds
xchg
cmp
sub
mov
sub
push
ret
loop
push
pusha
popf
std
hlt
retf
push
cmp
push
ins
cld
stos
pusha
cmp
sbb
push
sbb
sbb
sub
loopne
aaa
xor
jmp
jo
das
aam
in
loope
jle
outs
mov
test
les
movs
std
inc
data16
daa
lahf
pusha
jge
movs
mov
or
or
rcr
test
cli
fbld
jle
mov
cmps
cmp
imul
sbb
and
call
mov
js
cdq
gs
mov
mov
test
aad
pop
pop
jl
adc
lods
mov
mov
sbb
xchg
and
cmc
and
ss
scas
mov
aas
cmp
push
push
cmp
jmp
retw
add
cli
movs
add
pop
fwait
pusha
into
mov
aas
in
in
sbb
jne
or
and
pop
adc
sbb
add
or
jl
push
cmps
inc
pop
and
jmp
gs
add
mov
shl
hlt
add
mov
mov
mov
jl
cmps
mov
mov
mov
shr
xor
out
ds
xor
js
mov
jg
sub
adc
cmp
sbb
repnz
mov
outs
adc
jnp
fs
pop
repz
mov
mov
fdivr
add
repnz
bound
jne
sub
shl
dec
cmp
(bad)
mov
mov
out
sbb
lds
dec
xor
jp
or
mov
xchg
pop
cmp
iret
stos
arpl
sub
or
push
retf
xor
inc
ret
add
push
dec
cmp
cmps
ins
popf
mov
jle
jnp
jge
pop
xchg
mov
les
mov
and
xor
pop
cmp
adc
lea
inc
je
test
cwde
cmp
fwait
jmp
stos
sahf
cli
mov
add
(bad)
mov
ds
(bad)
or
add
das
ja
fs
push
dec
popa
and
js
cmp
cs
mov
cmp
inc
push
cli
xchg
bound
(bad)
pop
dec
pop
mov
pop
mov
push
inc
mov
lods
sub
outs
push
in
pushf
xor
pop
xor
mov
clc
loopne
out
xchg
xchg
ds
push
push
movs
leave
or
inc
add
mov
push
and
and
inc
xchg
jmp
cmp
mov
sub
fidivr
pop
scas
pop
cmps
mov
test
cmp
and
das
loopne
dec
es
sbb
xchg
inc
iret
bound
mov
xor
pop
jnp
cwde
shr
mov
stos
sahf
or
xor
xor
and
adc
pop
mov
pop
loop
push
push
and
xor
ins
or
sub
xchg
fsubr
fcmovu
and
nop
lds
inc
sub
pop
mov
adc
jae
enter
enter
in
jp
push
jb
sbb
retf
sbb
ins
cmp
xchg
outs
or
jle
and
das
pusha
adc
push
jmp
mov
lods
dec
iret
jecxz
int
sub
or
mov
sub
mov
test
or
cmp
adc
or
and
and
(bad)
fwait
push
xlat
and
pop
cmp
std
(bad)
mov
pop
mul
pusha
xchg
push
sbb
fsubr
(bad)
loope
push
(bad)
and
sbb
adc
movs
fnsave
mov
imul
jae
ror
push
add
jp
or
mov
and
and
in
mov
ins
xchg
xchg
movs
adc
mov
mov
and
jle
es
cmp
mov
sti
inc
jle
stos
ret
mov
add
inc
fs
jle
test
call
das
jl
imul
loop
call
xor
and
xchg
mov
jmp
sbb
adc
pop
les
push
fisttp
inc
sbb
xchg
pop
enter
out
cmp
inc
add
mov
mov
les
pop
mov
sti
call
add
bound
outs
and
sub
shl
shl
clc
cmps
jno
inc
inc
mov
inc
push
lods
data16
fwait
in
push
std
and
pusha
jmp
out
ds
loope
clc
ja
out
aam
scas
outs
push
and
rcl
rcl
in
pushf
dec
mov
ins
jle
ins
ret
jnp
dec
jns
push
add
dec
gs
in
jb
xor
push
or
(bad)
call
addr16
fwait
and
xchg
sub
xchg
sub
sbb
ret
inc
in
sbb
aam
call
adc
sub
mov
cwde
(bad)
adc
jnp
sub
test
pop
mov
push
sub
pushf
int3
ror
dec
outs
js
call
jae
pop
or
das
lahf
xchg
push
repz
mov
push
pop
or
jmp
ret
push
fwait
imul
call
shr
dec
bound
aas
js
pop
pop
and
fst
xchg
add
aas
aam
mov
cmps
mov
xor
xor
shl
sbb
das
mov
cmc
ret
stos
in
retf
inc
test
nop
xor
cmp
dec
adc
xchg
sahf
out
mov
clc
fstp
and
hlt
fidiv
jne
xchg
adc
in
sub
dec
pushf
(bad)
push
push
push
push
jo
xchg
call
sub
aas
leave
inc
pop
out
ins
aaa
and
mov
inc
pushf
pop
data16
jmp
into
jle
sub
xor
xlat
adc
jp
mov
fisttp
hlt
sub
lds
and
rcr
aaa
test
bound
xor
push
scas
mov
mov
pushf
push
inc
jg
adc
fdiv
ret
dec
xchg
ss
dec
pop
ss
xor
add
push
js
add
sub
cld
es
push
xor
das
cmp
es
rcr
adc
stc
add
jge
xor
stc
pop
or
retf
mov
(bad)
adc
sbb
push
pop
ret
push
pop
shl
arpl
push
sub
pop
mov
mov
popa
into
aaa
call
cmp
daa
loope
jmp
push
jmp
sbb
or
mov
jge
hlt
sahf
push
sar
xchg
pop
mov
inc
xchg
ins
adc
(bad)
add
mov
inc
pop
adc
movs
je
mov
add
jl
sub
outs
sub
sub
dec
mov
lods
sub
enter
cld
ins
jmp
mov
into
shl
xchg
jg
popa
lahf
and
or
mov
add
xor
sub
push
ja
movs
xor
sub
pusha
inc
pop
lock
mov
jb
pop
push
jge
bound
jo
xchg
or
pop
or
addr16
and
mov
fsubr
mov
jmp
xchg
push
fdiv
test
pop
dec
pop
mov
push
mov
aas
or
adc
adc
jge
cmp
loop
in
pop
sbb
shr
xor
mov
test
and
sbb
lock
rcr
push
pop
push
push
arpl
or
pop
jns
jns
cmp
ins
popf
nop
mov
mov
xor
push
jmp
xor
ret
and
sub
pop
(bad)
and
stc
jg
fs
bound
xchg
test
leave
xor
jmp
repz
jb
ficomp
(bad)
mov
int
ja
push
shl
sub
pop
(bad)
inc
adc
inc
lahf
and
jne
dec
mov
mov
pushf
inc
(bad)
sti
pop
int
lea
sbb
in
ror
xor
in
xor
sbb
loop
mov
pop
or
(bad)
pop
loope
add
or
out
inc
test
cld
pop
gs
fisttp
push
mov
pop
or
aaa
cmp
xchg
cmp
and
int3
loope
mov
and
mov
jbe
add
or
adc
fwait
sar
stos
mov
pop
sbb
pushf
mov
loop
hlt
xchg
adc
xchg
fs
test
into
arpl
push
or
and
fstp
adc
cs
xchg
push
mov
out
outs
repnz
and
fwait
sbb
dec
outs
mov
xchg
adc
push
mov
(bad)
mov
jnp
jbe
mov
push
jecxz
mov
scas
sbb
sub
sti
mov
xor
lea
inc
daa
es
jmp
inc
out
cmp
sbb
jae
sbb
sub
jmp
or
cmp
jmp
stc
je
mov
xchg
inc
xchg
scas
jecxz
xchg
jge
jnp
mov
stc
cmps
mov
repz
xor
test
sub
inc
sti
mov
jmp
xchg
mov
sbb
std
mov
sbb
xchg
and
std
cld
mov
and
fidivr
rcl
mov
inc
out
inc
push
imul
mov
xchg
rcl
mov
mov
jge
movs
mov
push
jnp
mov
dec
lods
and
xchg
loope
inc
aam
add
jnp
dec
sbb
bound
xor
mov
sti
popa
push
out
add
aam
pusha
inc
aas
out
stc
(bad)
and
mov
iret
fs
int3
iret
adc
sbb
jge
rol
jo
cld
movs
(bad)
mov
not
(bad)
dec
add
xchg
gs
addr16
pop
into
fs
por
add
push
jno
inc
std
into
jne
sbb
xchg
test
cld
mov
adc
jmp
test
fnsave
mov
iret
and
mov
stos
cs
scas
or
inc
out
cmp
pop
ror
inc
lock
iret
dec
(bad)
movs
pop
out
dec
add
xor
pop
popf
inc
jl
mov
sbb
mov
sbb
ja
xchg
and
or
data16
adc
push
pop
pop
iret
rcr
xchg
add
enter
dec
cmp
jae
fs
pop
ja
popf
test
inc
push
mov
lahf
enter
pop
jae
pop
jp
cmps
jge
adc
int
das
out
add
mov
fistp
scas
jle
das
pusha
pop
xchg
lods
push
leave
push
data16
cwde
fcmovbe
je
mov
in
cmp
leave
and
out
(bad)
add
mov
jo
jns
in
dec
mov
mov
out
dec
cdq
(bad)
cmps
lea
xchg
aaa
repz
jb
fsubr
cmp
fs
jge
std
out
jp
push
xchg
xchg
mul
ja
sub
fsubr
push
jb
and
add
imul
add
std
fstp
or
push
inc
aas
std
lods
jl
cmp
mov
mov
lock
inc
imul
push
shl
idiv
int
test
xchg
pop
pop
sbb
jnp
sbb
adc
push
rcl
dec
sub
idiv
ins
icebp
push
jl
leave
jae
pushf
call
in
jae
mov
mov
(bad)
fidiv
adc
dec
mov
scas
shl
fisubr
das
mov
jnp
shr
push
or
and
mov
clc
mov
dec
test
movs
stos
jl
jg
cmp
out
xor
mov
cmp
xchg
imul
inc
jmp
clc
leave
(bad)
cmp
(bad)
js
gs
movs
lods
shl
inc
leave
mov
pop
cld
test
fsub
gs
stos
lds
push
scas
push
jle
retf
stos
shl
sbb
add
inc
leave
fnsave
out
adc
fcom
mov
xor
dec
mov
mov
dec
push
lods
movs
sti
cwde
jne
mov
jae
push
stos
shl
cmp
or
and
sub
fwait
xlat
or
fisub
and
nop
fnsave
mov
mov
sub
pop
sub
sub
sub
retf
inc
jbe
pop
jb
(bad)
push
mov
in
pop
dec
pop
sahf
and
in
out
int3
ds
or
xchg
movs
mov
xchg
aad
ins
into
sub
push
(bad)
xchg
add
push
pop
mov
outs
jmp
lock
push
loope
lea
or
mov
dec
dec
aad
sahf
sbb
js
dec
pop
mov
sub
jnp
lods
adc
fsub
push
sahf
or
dec
jmp
add
or
mov
in
and
test
int
mov
xchg
sub
xor
nop
or
retf
adc
cdq
mov
pop
mov
push
add
retf
and
test
mov
lds
icebp
inc
out
test
push
test
iret
hlt
hlt
je
push
or
add
mov
popa
daa
inc
movs
stos
popa
test
fist
push
inc
rol
push
jp
fisubr
pop
inc
fld
pop
and
daa
sbb
adc
dec
add
dec
pop
retf
and
clc
push
shr
aas
(bad)
mov
xchg
lahf
jae
jne
(bad)
mov
sar
mov
xchg
mov
or
jnp
les
jbe
lahf
dec
je
repnz
push
pop
and
push
sbb
ins
push
sbb
nop
inc
int
out
jp
aad
and
fstp
sub
push
add
pop
ja
imul
fdiv
stos
jg
xor
sub
or
int3
xchg
and
mov
pop
ja
cli
sbb
inc
adc
xchg
fdiv
fldenv
sbb
jno
add
push
jnp
inc
mov
and
popf
fadd
and
vmovlps
adc
int
and
int
mov
fwait
bound
fwait
mov
lahf
push
xchg
and
xchg
xchg
sbb
push
into
outs
and
clc
addr16
(bad)
sub
mov
pusha
mov
xchg
add
in
popf
shr
mov
jae
jns
jle
stc
outs
mov
xor
cmp
in
cmc
or
xor
adc
pusha
imul
fdiv
fldcw
je
push
bound
and
jmp
daa
lods
mov
stos
loop
int
jge
leave
xchg
xor
in
push
xor
lods
xchg
(bad)
sbb
pusha
jp
push
dec
loop
psrad
jmp
(bad)
mov
pop
or
fisubr
sahf
nop
mov
push
mov
dec
xchg
pop
ins
xor
sbb
pusha
push
jle
dec
sbb
pop
(bad)
xchg
pop
ret
push
xchg
push
mov
fucomi
ret
or
or
lahf
int
mov
adc
or
cmp
lock
mov
cwde
mov
xor
add
cmps
cwde
pop
fisttp
in
push
call
xlat
jne
and
and
xor
icebp
add
out
lods
push
or
sar
and
movaps
or
jecxz
or
adc
add
inc
arpl
jp
and
mov
xchg
mov
fwait
cdq
cmp
out
jecxz
dec
nop
or
push
shl
gs
imul
das
popf
push
fistp
mov
mov
fwait
xchg
mov
lods
sbb
jb
xor
aad
repz
mov
or
mov
gs
jo
ja
dec
push
and
dec
sti
rol
sub
dec
or
lods
fld
(bad)
jnp
push
adc
dec
imul
(bad)
(bad)
jmp
pop
xchg
adc
lods
jo
add
inc
push
and
popa
xchg
fadd
imul
in
and
xchg
mov
xchg
push
jno
xchg
jle
cwde
imul
mov
ret
push
xor
or
or
cld
call
loop
aas
mov
push
jmp
dec
cmp
lahf
push
je
and
hlt
into
jg
and
popf
test
jg
mov
mov
and
mov
mov
dec
(bad)
outs
mov
int
repz
pop
xchg
sbb
clc
mov
mov
sbb
and
rol
enter
in
dec
test
pop
or
and
xchg
jg
mov
ret
rcl
pop
add
xor
(bad)
imul
fldcw
sahf
pushf
mov
adc
xchg
push
bound
or
xchg
pop
xlat
je
fs
sbb
push
call
pop
mov
out
daa
(bad)
ja
push
sahf
dec
push
push
mov
jnp
push
or
pop
pop
dec
push
iret
xor
ins
pop
pusha
test
arpl
int3
fdiv
push
inc
xchg
aas
sti
inc
jle
stos
add
xchg
sub
and
stc
ror
pop
xchg
and
jmp
and
into
adc
adc
dec
iret
daa
cmp
lahf
js
adc
sub
aaa
fisttp
arpl
mov
mov
cmp
sbb
lds
jl
mov
mov
fadd
pop
add
push
jae
add
bound
movs
ins
call
fdivr
pop
mov
jle
push
mov
pop
jmp
mov
and
bound
cwde
xor
push
push
push
sub
cmc
(bad)
fcom
adc
xlat
dec
inc
inc
ins
ins
mov
add
cmp
mov
mov
mov
(bad)
adc
data16
xchg
sti
push
xor
cs
add
push
in
in
adc
jl
dec
sub
iret
adc
add
icebp
std
ret
(bad)
mul
push
xchg
cmps
xor
(bad)
dec
icebp
sar
or
fmul
mov
and
mov
ins
inc
jg
out
clc
fmul
jne
add
sub
inc
scas
dec
cwde
pop
adc
jae
xlat
mov
xchg
and
cmp
lahf
adc
cld
xchg
sti
dec
imul
and
and
movs
push
ror
sahf
movs
xor
xchg
ret
je
mov
inc
js
loopne
das
adc
ret
leave
aam
jo
mov
in
cmps
or
jle
jns
push
out
jl
cwde
(bad)
aad
xor
mov
rol
call
ins
(bad)
movs
int
and
mov
xchg
mov
ficom
mul
push
rcl
out
sub
push
fdivr
xchg
inc
movs
xor
pop
or
inc
(bad)
(bad)
in
add
adc
popa
mov
mov
or
jg
adc
aam
inc
sbb
pushf
jo
shl
out
mov
cmp
pop
mov
out
aaa
je
ss
xchg
call
or
cmps
sbb
fnstenv
xchg
das
clc
cwde
xchg
retf
daa
jp
sub
sub
popa
arpl
lods
mov
cwde
addr16
and
retf
clc
dec
jns
imul
mov
dec
gs
ror
sbb
dec
cli
mov
rcr
mov
sbb
in
retw
adc
push
sub
xchg
jnp
(bad)
js
xchg
pop
rol
jb
les
mov
in
jecxz
jmp
pop
hlt
(bad)
add
(bad)
mov
inc
push
retf
iret
xchg
push
pop
jge
gs
dec
ffreep
in
jmp
pushf
adc
sbb
mov
dec
sub
(bad)
sbb
and
jg
shl
inc
in
arpl
mov
fstp
frstor
and
jle
pop
loope
add
aam
ins
adc
xor
jmp
dec
mov
pop
ret
cmp
cld
leave
pushf
pusha
jmp
or
pop
jne
sbb
pusha
inc
test
add
pop
les
and
sbb
into
cld
pop
das
or
mov
(bad)
call
call
mov
jae
dec
loope
push
leave
jl
js
jp
cmc
pop
je
aam
adc
(bad)
sbb
xor
retf
mov
cmp
push
mov
xchg
xchg
adc
mov
mov
cld
mov
sbb
jnp
lahf
retf
jmp
mov
xchg
shr
push
jns
ja
xchg
(bad)
push
push
xchg
test
dec
inc
sub
xchg
retf
rcl
and
ds
mov
pusha
xacquire
mov
jae
xor
dec
jae
push
adc
push
retf
jmp
xor
mov
push
pop
or
xor
mov
add
dec
lahf
push
(bad)
xchg
or
xor
cmp
jne
sub
popa
mov
sbb
add
setl
push
mov
dec
pop
jmp
xor
movs
cmp
cmps
in
jne
out
xor
mov
call
ins
je
mov
adc
push
and
repnz
inc
or
shr
test
add
xchg
div
loopne
test
pop
sbb
xchg
imul
(bad)
sub
xor
and
inc
popf
in
fsubr
ficomp
shl
or
outs
mov
out
cmp
pushf
or
mov
in
dec
pop
clc
rcl
and
jns
sbb
in
xchg
jp
xchg
leave
and
(bad)
lahf
ret
cmp
shr
and
test
pusha
inc
xchg
(bad)
cmp
mov
push
sbb
pop
jae
lods
mov
fisubr
call
stc
xchg
xchg
push
lahf
lods
lds
cmp
push
jns
cmp
jnp
int
daa
mov
cmps
jle
enter
imul
mov
test
sbb
pop
mov
xchg
(bad)
fwait
cdq
stos
jns
scas
les
(bad)
(bad)
repnz
add
pop
jns
jne
mov
mul
dec
loop
iret
adc
pushf
dec
inc
mov
je
das
leave
cmp
loop
popf
mov
mov
jg
fisubr
pop
jb
sub
cwde
jp
jne
mov
push
cmps
fcmovbe
push
enter
pusha
cmp
pop
std
xor
mov
int3
adc
ja
not
dec
mov
pop
and
xor
cmps
and
jb
out
inc
pop
sub
retf
mov
(bad)
xchg
(bad)
ret
pop
pop
xor
loopne
fwait
and
xor
shl
add
shl
jns
or
das
in
(bad)
mov
je
cdq
sbb
iret
sbb
pop
mov
mov
sub
repz
pop
pop
repz
jae
add
mov
mov
sbb
adc
les
out
push
daa
sar
mov
or
and
icebp
cli
aas
pop
movs
rcr
push
add
adc
pop
pop
movs
imul
or
popf
sub
lahf
or
jle
jp
cmc
dec
and
in
adc
sub
in
mov
pop
jmp
movs
mov
data16
or
(bad)
cmp
imul
dec
sbb
lds
cmp
mov
add
out
(bad)
out
jp
repnz
cmp
sub
or
mov
movs
sti
(bad)
je
cwde
pop
fwait
ins
xchg
push
mov
sub
xchg
mov
movs
cli
mov
pop
ins
mov
or
popf
dec
cmp
cmp
push
xchg
sbb
push
mov
xor
xor
jo
jbe
loope
stos
movs
je
sti
mov
xchg
and
mov
or
sub
aam
sbb
inc
jp
inc
and
jae
add
mov
and
fldenv
jns
inc
push
retf
jne
push
or
mov
push
mov
sti
xchg
scas
(bad)
js
loope
pop
(bad)
xlat
fnsave
aad
lahf
dec
daa
push
hlt
(bad)
pop
outs
lahf
mov
aad
jbe
scas
inc
mov
xchg
fsubr
cwde
leave
nop
mov
sub
xor
mov
aad
jle
sbb
call
inc
es
daa
outs
outs
pop
(bad)
xor
xchg
mov
out
mov
mov
mov
push
pop
(bad)
xchg
jmp
mov
mov
jecxz
mov
pop
std
dec
cmp
push
ds
rol
push
std
pop
aad
mov
cmp
inc
sbb
xchg
inc
xchg
xlat
inc
cmp
aam
pushf
in
xchg
test
xchg
(bad)
cli
add
mov
cmps
in
xor
push
sub
es
and
ds
inc
cmp
or
push
loopne
mov
call
cli
aam
add
stc
mov
loop
inc
fidiv
sub
stc
mov
xchg
stos
adc
dec
mov
jo
lods
mov
ret
test
sub
jo
jno
mov
mov
ret
into
jno
pusha
push
(bad)
xchg
nop
int
into
(bad)
push
in
push
push
mul
dec
gs
(bad)
jp
xchg
pop
adc
scas
adc
dec
adc
das
movs
lahf
or
push
push
aad
pusha
sub
xchg
out
push
jle
mov
inc
pop
fdiv
loop
into
into
add
in
push
repnz
test
sbb
lods
and
cmps
xor
lds
rcr
cmp
(bad)
pop
das
inc
xchg
push
jno
dec
call
std
mov
ins
sbb
jl
mov
repnz
or
cmc
repnz
and
(bad)
sti
out
(bad)
push
fist
stos
push
pop
outs
xor
mov
adc
and
in
outs
cli
pop
xchg
and
cmp
sub
jb
push
xchg
or
int3
and
cmp
fcmovbe
retf
loope
addr16
retf
sub
les
inc
aaa
pop
mov
jle
or
cmp
imul
fwait
cli
pop
shr
push
or
mov
jno
fcmovbe
push
fld
or
jmp
daa
jg
mov
inc
mov
aas
mov
dec
ret
sub
(bad)
js
(bad)
fidiv
sub
dec
loope
sub
jns
pop
retf
jge
cs
push
mov
mov
xchg
fadd
aaa
jge
and
or
push
inc
(bad)
jnp
pop
jo
add
mov
das
call
xchg
cmps
movs
cmp
push
mov
add
mov
push
xchg
stc
xor
push
add
lock
lods
iret
mov
mov
xchg
sar
push
ja
xchg
imul
test
cmp
ss
loope
xor
jmp
pop
and
sbb
daa
je
sti
jne
lods
jo
cmp
(bad)
(bad)
enter
xchg
cmp
inc
imul
shl
lock
out
mov
push
dec
mov
je
xor
and
xor
lds
mov
test
aad
cmc
ret
adc
push
pop
in
rcl
lahf
adc
xchg
stos
ins
jno
jecxz
lea
jmp
dec
inc
mov
enter
rcl
fdiv
cwde
mov
add
shr
push
ficomp
sahf
mov
mov
jno
and
lahf
repnz
popa
xchg
out
mov
aam
and
jmp
jmp
push
push
and
mov
jp
retf
rcr
xchg
cmps
push
js
and
div
xchg
in
gs
pop
icebp
pop
fist
ret
cld
xchg
dec
mov
getsec
int3
adc
pop
int
jb
(bad)
in
push
sbb
xchg
xchg
(bad)
jmp
pushf
inc
fmulp
leave
xor
pop
xor
cmp
adc
inc
popa
jge
imul
gs
sub
adc
clc
mov
lock
dec
xor
aas
jne
or
pop
ja
pop
pop
xchg
push
ins
push
xchg
xor
xchg
xchg
sbb
mov
repz
sti
mov
mov
jle
mov
push
retf
push
fcom
adc
scas
inc
in
cs
pop
sbb
fwait
xchg
std
push
mov
lods
pop
mov
push
lahf
in
or
lods
int
(bad)
call
sahf
inc
pop
fimul
je
xor
out
shl
hlt
int
out
and
push
popf
sbb
cmps
fild
rol
inc
out
movs
push
sbb
jecxz
mov
fisubr
dec
nop
pop
leave
xor
jne
inc
dec
test
cmc
inc
cmp
mov
add
jp
call
push
mov
xor
jp
sub
sahf
test
aad
es
push
xor
bound
cmps
call
add
mov
daa
pop
ins
ds
out
lods
jne
or
stc
jb
inc
add
outs
sub
adc
and
mov
out
and
lea
inc
jle
loop
sub
mov
or
ja
push
out
mov
push
inc
and
addr16
sbb
shl
icebp
or
mov
push
mov
inc
ss
dec
xchg
hlt
arpl
int3
mov
out
inc
inc
push
add
push
add
lods
push
and
xor
data16
sub
sbb
xchg
jo
or
call
sbb
adc
push
or
cld
xchg
sar
push
sbb
jne
cmp
es
pop
and
jg
fdivrp
cmp
dec
or
mov
xchg
fldenv
retf
xchg
mov
cwde
(bad)
bound
mov
xor
push
mov
jns
xchg
push
and
jmp
jne
sar
out
std
sbb
jp
mov
call
jle
js
sti
mov
ins
ret
mov
aam
popf
or
addr16
fsubp
mov
call
div
call
pop
dec
sbb
fist
xchg
clc
mov
in
retf
dec
in
out
mov
in
movs
int
in
xchg
nop
mov
pop
imul
push
test
inc
adc
movs
outs
retf
xchg
movs
mov
ja
imul
and
into
adc
sub
adc
in
call
cmp
adc
scas
sbb
daa
(bad)
pop
test
ins
xor
push
inc
xor
out
cmp
fisttp
leave
aaa
push
aas
mov
sub
hlt
xor
inc
inc
int
push
(bad)
cdq
clc
jno
push
leave
xlat
pop
pop
xchg
jns
test
loope
ins
ins
jb
daa
std
out
or
push
jmp
scas
out
int3
xchg
mov
jbe
and
in
fwait
pop
mov
je
inc
rcr
int3
sub
push
mov
jo
movs
sub
cmc
adc
leave
leave
in
pop
es
dec
prefetcht2
(bad)
mov
sar
rcl
xchg
shl
loope
ds
leave
js
mov
push
scas
lock
push
push
lahf
xor
cs
add
(bad)
retf
dec
outs
mov
aas
or
xor
(bad)
dec
out
xchg
inc
aam
lods
push
pop
stc
loopne
in
jecxz
out
add
retf
(bad)
(bad)
sahf
loope
cdq
push
mov
sti
pop
sub
mov
test
gs
add
add
mov
cld
arpl
leave
inc
lds
xor
xor
push
dec
push
mov
ror
and
pop
movs
retf
inc
dec
lahf
xchg
jmp
jge
and
and
cmp
js
popf
sub
mov
jp
popa
cmp
test
in
stos
mov
pop
ss
loopne
stos
daa
mov
push
aad
cmc
xchg
mov
push
in
xchg
sbb
ins
nop
mov
xchg
fmul
adc
xchg
cmps
sti
jns
pop
movs
std
shl
and
fwait
push
pop
jb
scas
dec
xor
(bad)
sar
xor
adc
inc
nop
and
lahf
int
bound
sahf
sbb
dec
sub
dec
and
sbb
jno
xchg
mov
jmp
out
inc
or
iret
(bad)
sti
sti
jg
daa
cs
fimul
movs
adc
and
mov
jmp
ins
push
retf
sub
add
or
or
add
mov
(bad)
loop
bound
jecxz
nop
popa
imul
jmp
ret
sub
aam
mov
xor
add
jne
mov
mov
shl
sbb
cli
adc
or
pop
xchg
and
or
ds
and
xor
xlat
ss
cli
jno
clc
mov
arpl
mov
mov
scas
mov
pop
outs
test
inc
fwait
mov
retf
jg
jo
jl
out
rol
inc
gs
ja
sub
xchg
imul
or
cdq
adc
mov
add
repz
mov
psubsb
mov
daa
cmps
push
push
adc
and
pop
push
jg
fldcw
mov
retf
cmps
cmp
and
das
sbb
cmps
repnz
call
mov
cmp
cli
mov
push
xor
in
dec
sahf
sbb
stc
push
int
pop
jae
xor
pop
jnp
loopne
pop
test
mov
arpl
scas
mov
jmp
out
dec
arpl
pop
push
call
in
dec
gs
or
jmp
mov
jg
xor
adc
jae
mov
mov
ins
or
push
cmp
out
call
mov
shl
call
adc
cld
rcl
sub
cs
sbb
pop
xchg
shl
and
ins
xor
lods
inc
lds
pop
cmps
mov
add
push
push
ret
fdivr
jmp
push
cld
test
push
xchg
aaa
cmp
mov
retf
jl
and
xchg
or
mov
scas
aas
(bad)
push
and
aad
mov
sub
(bad)
jp
fsub
sti
jmp
xor
sbb
movs
xchg
sub
sbb
aas
out
(bad)
xchg
cld
inc
or
or
add
adc
cdq
cmp
xchg
mov
pop
stos
leave
mov
lahf
fstp
mov
imul
dec
not
icebp
retf
jg
mov
add
ret
and
and
pop
xor
add
or
cmp
(bad)
pop
addr16
jmp
cmp
cmps
sbb
push
test
xor
dec
movs
outs
idiv
push
xlat
xor
out
loop
mov
call
stos
mov
jecxz
dec
sar
cs
les
mov
(bad)
xchg
mov
(bad)
int3
inc
ins
and
lea
test
push
mov
cmp
inc
mov
xor
push
repz
push
sar
or
sbb
es
dec
and
cdq
sub
mov
cmc
dec
cmp
sbb
imul
mov
add
sub
mov
ins
repz
sbb
fstp
jnp
sbb
sub
in
rcl
mov
rcr
test
adc
mov
xor
pop
pop
push
aam
lock
ds
jg
into
es
push
inc
hlt
fs
in
cmp
clc
pop
mov
sub
test
mov
(bad)
mov
js
retf
push
add
rol
push
adc
ret
gs
adc
xor
les
aas
enter
in
mov
shr
dec
popf
sahf
jmp
jmp
adc
mov
jp
or
or
ins
push
ja
mov
xchg
mov
inc
sub
sti
pop
pop
repnz
cli
or
mov
mov
jmp
sub
loopne
jle
lahf
pop
xchg
jb
ja
mov
(bad)
jmp
daa
jbe
mov
push
retf
mov
pop
scas
shl
pop
pushf
fiadd
xchg
lock
shl
jnp
ds
lods
lahf
or
cmps
(bad)
rcr
push
stc
out
es
aas
xchg
aam
cdq
movs
movs
fadd
lds
sub
stos
mov
aam
loop
jae
aas
sti
inc
inc
xchg
in
jp
sbb
pop
and
sahf
iret
inc
dec
dec
xchg
fwait
inc
clc
push
jge
pop
jno
fidivr
loopne
inc
(bad)
jns
sar
adc
inc
inc
sub
push
adc
inc
mov
(bad)
stc
(bad)
sbb
out
push
pop
scas
xchg
test
lea
lock
dec
sub
idiv
pop
js
mov
xor
xor
lds
outs
sub
sbb
loope
imul
mov
sahf
inc
sbb
xchg
cmp
mov
adc
outs
icebp
icebp
pushf
jl
cwde
aam
inc
call
sub
pop
in
and
(bad)
cmp
add
jbe
xor
clc
bound
sub
and
push
das
int
mov
push
push
imul
mov
retf
jmp
ficom
adc
movs
in
adc
jbe
dec
retf
js
hlt
pop
sbb
jmp
adc
mov
inc
out
enter
mov
push
out
aad
mov
sub
xchg
sub
pop
fwait
pop
mov
lahf
stos
ror
cmp
xchg
jb
(bad)
(bad)
or
not
rcl
xchg
dec
push
out
mov
leave
stos
inc
dec
mov
xor
mov
ins
div
nop
in
adc
inc
add
inc
add
or
sbb
fldcw
std
jp
jg
jbe
jmp
cld
call
inc
cld
cmp
in
inc
mov
popf
push
pop
rcr
jne
pavgw
sbb
add
(bad)
sub
iret
rcl
push
sbb
test
sbb
(bad)
sub
sahf
imul
sbb
cwde
jg
mov
dec
or
outs
(bad)
aad
mov
mov
push
pop
dec
pop
pushf
sahf
enter
mov
inc
push
push
jnp
mov
adc
pop
cvtpi2ps
ds
mov
mov
adc
sar
in
ins
(bad)
cld
pusha
add
add
jb
jmp
mov
cmp
inc
fadd
pop
cmp
jmp
inc
mov
xor
inc
daa
jae
mov
xchg
cmp
mov
stc
fcom
cmp
jmp
(bad)
xchg
inc
cld
aas
scas
pushf
out
adc
or
iret
inc
cmp
jb
ss
popa
and
cmc
sbb
mov
sbb
ror
icebp
and
sbb
inc
push
and
push
fst
jno
jecxz
dec
push
xchg
call
jge
loop
push
mov
inc
fisubr
push
sti
push
sub
int
aam
(bad)
jbe
pop
pop
push
mov
test
mov
jbe
push
jae
test
leave
push
nop
fnstcw
push
inc
and
mov
jmp
mov
mov
fiadd
adc
loope
mov
mov
push
loop
xor
add
inc
lahf
jns
mov
and
jmp
jnp
clc
and
sti
ja
nop
pushf
xor
out
ss
lock
enter
and
or
jno
pop
ret
and
fsub
scas
(bad)
movs
jns
in
jecxz
inc
cmc
xchg
sub
sahf
add
jp
fwait
dec
sub
stos
test
sub
ins
inc
cmp
mov
sbb
pusha
mov
pusha
push
cmp
into
mov
or
xlat
inc
jb
movs
cmp
sbb
add
cmp
adc
sbb
and
icebp
sub
cmc
cs
popa
mov
or
push
call
and
mov
aaa
data16
fnstenv
xchg
les
adc
(bad)
ret
(bad)
mov
adc
mov
stos
pop
mov
mov
dec
enter
jmp
xchg
inc
dec
xlat
inc
mov
rcl
rol
mov
sub
pusha
sar
retf
xor
dec
test
cld
jecxz
xchg
rcr
jmp
push
int3
xchg
inc
gs
fwait
cwde
mov
or
jb
repnz
loop
fwait
test
lds
ins
or
loopne
movs
das
adc
cmp
sub
popa
mov
bound
inc
dec
xor
mov
sbb
inc
sahf
mov
push
mov
jne
inc
mov
push
sub
test
(bad)
(bad)
sbb
mov
push
(bad)
xchg
imul
push
sbb
or
shl
test
xor
loop
inc
movs
add
pop
and
ja
icebp
pusha
ds
cdq
int
cmp
out
ss
inc
and
add
js
sbb
cdq
fucomip
pop
and
(bad)
scas
je
and
xchg
icebp
and
in
cmp
fwait
cmp
int3
lock
bound
dec
shl
repz
(bad)
cdq
(bad)
or
pop
adc
sbb
mov
add
stc
(bad)
sar
cmp
dec
xor
je
mov
push
mov
dec
mov
hlt
jmp
push
dec
fsub
fwait
test
dec
and
fsub
inc
pop
mov
repz
pop
xor
jbe
dec
in
and
(bad)
jno
and
lock
dec
mov
and
sub
(bad)
aas
scas
inc
sbb
in
mov
pop
mov
es
jne
in
push
xor
pop
adc
dec
sbb
adc
pop
push
mov
pop
punpckldq
pop
stos
sar
daa
push
jl
mov
mov
adc
mov
hlt
stos
cmps
jl
jmp
cmp
ja
js
cwde
mov
adc
in
mov
sbb
sub
mov
lds
dec
(bad)
push
(bad)
std
mov
leave
push
push
repnz
popa
or
cwde
popa
cmp
mov
push
mov
add
cmp
fadd
sub
out
enter
repnz
shl
jbe
in
ret
adc
cmps
leave
inc
dec
scas
ds
(bad)
in
call
sub
xchg
shr
test
pop
inc
mov
add
ret
push
rcl
pop
iret
ror
xlat
or
sbb
(bad)
xchg
(bad)
xor
ds
push
imul
scas
and
fwait
jle
xchg
rol
scas
test
test
sub
mov
pop
mov
dec
ja
sub
inc
sub
popa
cmp
es
push
aam
sub
xchg
xor
mov
xlat
sub
pop
or
fstp
btc
mov
add
push
jae
pushf
ret
pop
xor
(bad)
nop
adc
cld
into
jo
test
jmp
adc
pop
xchg
and
jo
jno
sbb
out
dec
inc
jp
xchg
jp
push
jle
xor
fild
dec
mov
jmp
arpl
xchg
sub
leave
adc
add
shr
add
xor
sbb
cmp
cld
pop
cwde
mov
push
jmp
sub
jg
in
or
mov
retf
mov
mov
test
sub
repnz
in
pop
clc
mov
test
xchg
pop
adc
leave
(bad)
pop
xchg
outs
add
inc
in
adc
call
and
nop
pop
mov
add
cmp
call
movs
out
adc
sub
int
and
test
fwait
out
call
push
adc
pop
jmp
fadd
retf
in
xlat
xchg
call
xchg
in
cmp
sub
sbb
mov
jno
pop
shr
or
loope
push
jns
xor
mov
repz
scas
inc
stc
fimul
div
and
mov
loop
rcr
push
mov
sbb
fs
test
xchg
jo
data16
push
sbb
jmp
fs
out
gs
mov
adc
adc
addr16
loope
dec
pop
dec
push
cld
ja
int
inc
lock
shl
jnp
xchg
push
pop
shr
(bad)
lock
ins
ins
jne
test
xor
sbb
retf
imul
ins
not
(bad)
leave
sahf
div
ror
call
lea
or
fsubr
cmps
dec
pushf
imul
sub
inc
rol
pop
cmp
push
dec
in
call
fisubr
rol
jnp
out
pop
div
mov
ja
sub
pop
into
push
mov
into
jbe
xchg
je
adc
push
fmulp
cmp
shl
jbe
ins
movs
sub
scas
sub
and
and
(bad)
aas
cmp
ss
xchg
mov
dec
dec
(bad)
in
sbb
jecxz
imul
push
xchg
ins
cmp
pop
and
cdq
unpcklps
adc
pop
into
push
sti
pop
movs
or
rcr
gs
cmps
jmp
xor
shl
mov
or
dec
push
test
icebp
movs
fmul
in
sbb
arpl
aas
pop
loop
mov
std
pop
jg
sub
icebp
sub
add
pop
enter
data16
xor
sbb
push
test
cmps
jle
dec
das
or
xchg
cli
push
add
out
xchg
loop
hlt
lods
shr
xor
pop
outs
pop
mov
(bad)
pop
hlt
lahf
ret
mov
add
mov
in
add
mov
mov
xchg
xchg
ja
int
into
fidivr
sti
or
inc
shl
call
xor
cwde
cmc
int
jmp
sub
xor
cld
jp
les
pop
jmp
leave
sbb
add
movs
(bad)
fcomi
imul
icebp
mov
cld
adc
push
lea
loope
out
iret
dec
sub
add
int
or
push
jne
popf
sbb
xchg
and
xchg
cmp
mov
mov
hlt
aaa
out
popa
jb
xor
in
lock
in
icebp
rcl
ds
iret
pop
sbb
popa
call
inc
push
mov
push
stos
mov
dec
sub
jno
add
dec
sub
lahf
clc
(bad)
xchg
nop
call
sbb
xchg
dec
xchg
add
in
call
and
mov
and
bound
mov
sbb
mov
in
inc
inc
mov
add
sbb
or
add
fisub
(bad)
inc
pop
and
xchg
inc
jmp
lea
and
movs
daa
inc
pop
pop
push
test
mov
jmp
lock
pop
dec
imul
sub
sub
push
cwde
imul
sbb
out
outs
stos
cmps
jp
push
mov
adc
cmps
rcr
mov
or
inc
sub
scas
push
xchg
inc
fnstsw
jle
and
dec
xor
jecxz
or
mov
out
idiv
and
movs
movs
jno
inc
clc
and
and
fcmove
cmp
ror
xchg
mov
pop
outs
popa
in
out
add
mov
in
mov
ret
cmp
xchg
in
adc
in
xor
sbb
in
add
ins
cmps
jmp
cmps
scas
cmp
idiv
mov
dec
adc
(bad)
lock
mov
mov
fsub
lds
icebp
mov
pop
cmp
jg
or
xchg
sti
sbb
mov
sub
cs
rcl
mov
inc
div
add
rcl
mov
pop
sub
rcl
cmps
push
sbb
iret
ret
push
sub
(bad)
cmc
dec
xor
mov
jns
js
jnp
jle
cmp
mov
sbb
or
movs
imul
fwait
mov
push
mov
adc
push
fcom
xchg
push
sahf
dec
in
stc
pop
xor
int3
cmp
xor
xor
arpl
sbb
jb
pop
(bad)
mov
outs
add
mov
in
mov
(bad)
dec
inc
push
mov
shr
enter
cmps
push
retf
mov
push
or
fsub
(bad)
je
xor
(bad)
inc
xchg
sub
mov
sbb
arpl
jb
add
scas
cld
outs
adc
fld
jae
or
pusha
fisttp
cmp
fucomip
aas
or
jl
pop
dec
xchg
mov
xchg
sbb
mov
push
inc
jp
jmp
adc
xchg
sbb
inc
mov
xchg
pop
mov
sbb
xchg
sbb
shr
mov
xchg
cmp
jecxz
jne
push
ja
mov
sub
jge
les
adc
sti
inc
cmc
pmaddwd
fcmove
shl
and
scas
out
mov
outs
xlat
sub
aas
jp
repz
movs
and
pop
xchg
in
fdiv
clc
call
rcl
add
pause
xor
icebp
call
int3
push
add
es
rol
scas
push
call
aam
pop
lods
loopne
fs
xchg
jmp
mov
test
inc
mov
pop
jmp
or
mov
call
cmc
push
push
xchg
pop
(bad)
pop
(bad)
rol
pop
(bad)
js
scas
add
popf
jb
daa
int3
sub
sahf
inc
pop
xchg
or
and
add
lods
adc
jbe
fwait
pop
fld
dec
out
mov
xchg
hlt
xchg
inc
or
or
xor
pushf
out
mov
(bad)
mov
icebp
cmc
mov
js
addr16
in
retf
nop
retf
jmp
sbb
sub
cmp
xlat
lds
xor
shr
inc
fist
data16
mov
jge
jle
repz
jl
call
mov
(bad)
std
adc
pop
mov
ror
sub
mov
(bad)
outs
mov
add
inc
ds
pop
mov
in
lds
push
imul
sbb
mov
call
clc
or
add
stc
pop
sbb
dec
pop
in
mov
mov
ror
retf
fstp
xor
xchg
(bad)
jmp
mov
sti
scas
xchg
imul
adc
pop
mov
adc
cmps
xchg
in
ins
push
push
fs
rcr
(bad)
in
in
mov
retf
repz
mov
add
mov
jbe
inc
cmp
fs
movs
sahf
(bad)
(bad)
fwait
cmp
sti
dec
idiv
hlt
jmp
jle
imul
js
aas
loopne
push
pop
sbb
les
test
cld
iret
inc
pusha
pop
repz
sub
dec
loopne
dec
mov
jle
mov
push
dec
push
lock
add
add
xchg
aad
push
sub
inc
or
cmp
std
ss
xor
xor
cmp
rcl
dec
push
inc
jbe
fwait
xor
js
add
mov
lds
(bad)
mov
adc
push
push
rol
pop
pop
(bad)
test
jmp
cli
inc
fist
jnp
push
mov
xchg
aas
jbe
in
sbb
gs
mov
push
cmp
arpl
push
push
add
jae
iret
adc
scas
(bad)
fnsave
test
xchg
pop
fisub
leave
pop
stos
data16
into
mov
dec
or
push
(bad)
fdiv
push
and
cmp
sbb
bound
lea
pop
les
push
stc
popf
push
(bad)
sub
mov
xor
xlat
aaa
test
pop
mul
sub
mov
push
movs
movs
das
pop
outs
hlt
jg
rcl
fild
nop
pcmpgtd
jbe
cmp
xlat
pop
xor
inc
or
(bad)
pop
xchg
adc
sahf
jp
out
dec
in
jecxz
pop
or
sahf
xor
and
popf
dec
dec
xor
leave
in
jmp
add
or
pusha
jmp
xchg
push
and
dec
mov
std
out
mov
push
cld
mov
dec
xor
add
dec
mov
push
mov
imul
pop
jecxz
cmps
mov
ja
popf
fld
lahf
cs
pop
add
mov
loope
and
and
xor
mov
imul
cld
pop
and
xchg
xchg
dec
pop
lods
pop
jmp
mov
call
mov
sub
jge
leave
xor
push
inc
mov
pop
loop
push
ret
inc
out
and
push
push
push
xor
and
push
xchg
fnstcw
cmp
aad
jle
dec
push
xchg
jno
cli
and
cmp
leave
jns
fsubr
jge
mov
movs
sbb
adc
fs
xor
adc
mov
push
shr
addr16
stc
dec
xor
or
jp
inc
cmc
lock
push
jg
pminsw
inc
repnz
mov
(bad)
pop
xchg
and
xchg
jnp
xchg
push
inc
jge
iret
loopne
xor
daa
xchg
fucomp
mov
aas
xor
in
pop
inc
(bad)
div
pop
push
ja
cmc
xchg
xchg
arpl
push
cli
test
in
pop
jne
test
cmp
jae
sub
jne
push
or
fidivr
pop
jns
xchg
mov
cmc
push
or
xor
inc
int3
xor
leave
or
push
fs
pop
sub
adc
or
mov
in
mov
adc
rcl
xor
sub
jecxz
mov
retf
sub
sar
push
data16
dec
xchg
loope
aaa
mov
mov
ins
inc
(bad)
sub
lods
or
and
stos
mov
in
add
sub
pop
cmp
jl
cmps
or
test
sbb
int
sub
or
dec
inc
and
inc
repnz
xor
(bad)
out
das
push
cmp
les
cld
mov
cmc
stos
popa
pop
in
add
call
repnz
dec
pop
mov
add
int3
mov
or
xchg
dec
pop
adc
int3
mov
sahf
dec
mov
mov
popa
cmp
mov
test
jmp
inc
mov
call
and
es
cs
dec
shl
or
stos
inc
push
int
push
pop
pop
pop
push
es
pushf
xchg
imul
loope
inc
rcl
je
fiadd
lds
inc
jmp
mov
retf
gs
cmp
xchg
rol
push
cmps
std
popf
stos
in
cwde
xchg
std
nop
pop
mov
pop
push
cs
sbb
pop
loopne
fnsave
jbe
ficom
out
adc
sbb
fwait
into
sub
xlat
js
shl
inc
or
ins
(bad)
cmp
mov
inc
cdq
ror
xchg
mov
call
inc
dec
dec
lods
push
mov
jl
mov
mov
adc
imul
popa
sub
dec
fisttp
adc
inc
fwait
sub
shr
retf
test
stos
push
arpl
jno
jl
dec
hlt
cwde
mov
sub
xchg
lahf
push
into
sub
dec
inc
adc
pushf
push
rcl
jecxz
out
pop
ja
or
movs
and
jl
jg
std
inc
sub
retf
jbe
dec
shl
aam
cmp
pop
and
fcomp
push
into
dec
repz
retf
jb
ins
add
(bad)
sbb
adc
jne
sbb
icebp
sbb
add
dec
int
lods
adc
sub
fst
(bad)
mov
or
xor
adc
mov
sbb
test
in
in
pop
cmc
inc
or
sahf
mov
inc
iret
in
jg
xchg
xchg
mov
adc
push
xchg
xchg
jns
sub
pop
sub
add
fist
push
repz
ss
out
les
push
scas
dec
xor
pop
xchg
mov
mov
jo
fld
jmp
adc
shl
daa
test
and
pushf
pop
jge
mov
dec
test
xchg
sub
cmp
jmp
cs
fistp
test
dec
fnsave
xor
sub
int3
stos
mov
adc
mov
xchg
mov
push
shr
(bad)
hlt
call
test
lahf
in
loopne
sbb
neg
jae
cmp
(bad)
(bad)
pushf
out
popa
jg
add
loop
cmp
std
fnsave
mov
or
adc
adc
add
ficom
outs
and
adc
inc
loopne
sbb
(bad)
inc
shl
cmp
pop
dec
xchg
jae
es
leave
adc
jl
lds
dec
stos
push
jno
pop
stc
dec
push
jae
maskmovq
outs
dec
cmp
push
pusha
(bad)
js
out
adc
dec
or
inc
iret
sub
add
or
call
je
sbb
sbb
jno
outs
adc
mov
(bad)
daa
icebp
inc
dec
push
cwde
je
dec
pop
scas
icebp
xor
mov
out
bound
clc
mov
push
fwait
cdq
sub
test
(bad)
push
scas
cmc
imul
and
mov
adc
jae
clc
cs
adc
data16
xlat
xlat
xchg
pop
pop
cs
and
aam
imul
aam
inc
mov
ds
std
movs
test
jmp
mov
add
lahf
mul
dec
dec
and
test
ja
dec
jmp
stc
inc
push
jle
nop
cmp
dec
inc
sti
xchg
push
push
dec
mov
int
fidiv
dec
push
mov
jb
and
mov
and
push
rol
lods
push
outs
arpl
dec
inc
or
out
(bad)
and
scas
pop
mov
dec
sbb
jp
sbb
jle
mov
adc
lock
push
movs
out
adc
xor
test
gs
std
sbb
sub
in
mov
pop
dec
sbb
or
mov
sub
pop
ftst
jg
(bad)
outs
das
sub
in
jle
mov
add
mov
test
out
xor
iret
sbb
rcr
inc
jnp
not
pop
das
jbe
cmp
push
clc
lods
fcmovne
ds
scas
fcom
hlt
jge
jb
imul
test
(bad)
div
ins
jno
es
shr
pop
jno
hlt
retf
push
std
lds
push
inc
or
xlat
pop
inc
xor
adc
pushf
jecxz
dec
in
js
mov
jne
or
movs
mov
imul
jg
push
lahf
push
sti
rcr
sub
aam
shr
daa
cwde
lea
xchg
jbe
inc
adc
pop
and
sti
rcl
cmc
mov
aad
mov
icebp
or
std
mov
add
mov
cld
mov
sahf
dec
mov
mov
pop
(bad)
push
std
popa
call
pop
pusha
(bad)
fsub
pusha
push
ins
test
cmc
(bad)
cli
test
scas
xor
mov
inc
or
xchg
inc
push
retf
push
js
enter
(bad)
adc
mov
sbb
jecxz
dec
popf
adc
jle
dec
jecxz
dec
xchg
popf
or
push
push
xor
mov
mov
repnz
stos
ret
adc
repnz
xchg
xchg
sbb
popa
mov
xchg
jae
push
or
sahf
sbb
scas
and
ds
dec
push
pop
push
or
push
(bad)
lock
popf
xchg
mov
adc
dec
sub
jbe
add
and
daa
inc
retf
jae
and
loop
std
dec
xor
test
sub
inc
mov
bound
retf
cmp
stos
lock
rcr
or
je
das
mov
lods
or
sti
mov
pop
xchg
mov
jb
movs
mov
lods
int
add
cmp
test
mov
adc
mov
pusha
and
je
aam
add
and
cs
stos
inc
lahf
and
jecxz
xlat
cmp
mov
sub
jmp
js
sahf
in
xor
lahf
not
push
add
cs
(bad)
out
mov
mov
popf
push
lods
adc
mov
push
sub
je
sub
mov
dec
add
fstp
movs
xor
(bad)
pushf
test
out
pop
nop
xlat
rol
aam
jae
pusha
xlat
mov
fstp
call
adc
push
or
retf
cwde
ror
pop
fwait
adc
repz
inc
fwait
aad
mul
xor
mov
movs
add
leave
icebp
imul
ror
sahf
push
sar
leave
dec
imul
mov
mov
jg
add
out
jmp
(bad)
xchg
xchg
fidivr
pusha
(bad)
push
rol
mov
pushf
pop
xchg
mov
stc
cmps
mov
ret
in
pop
xchg
or
cmp
pop
aad
inc
mov
out
cdq
add
pop
call
leave
arpl
scas
retf
push
jne
(bad)
mov
retf
inc
push
adc
sti
js
(bad)
(bad)
sbb
lods
mov
jo
adc
xchg
test
mov
lea
mov
or
push
xor
fadd
xor
mov
sub
in
stos
outs
fnsave
in
mov
add
or
imul
xchg
jne
iret
lods
js
pop
scas
pop
repnz
jmp
ror
mov
jb
xor
inc
jecxz
xchg
mov
rol
pop
loop
push
mov
xlat
rol
mov
cs
fimul
xchg
xchg
push
xor
and
jmp
push
pop
push
and
scas
push
mov
jno
not
mov
mov
jbe
daa
mov
iret
add
pop
xchg
(bad)
aad
shl
add
cwde
xchg
mov
iret
(bad)
mov
cmps
pusha
outs
repnz
mov
out
into
mov
and
call
fs
mov
add
sbb
in
mov
mov
xchg
inc
sar
xchg
aaa
push
xor
xchg
bound
pop
cmp
test
mov
cmp
cmp
sub
sbb
fdivr
push
rcl
fs
scas
pop
add
sbb
or
sub
dec
xlat
mov
mov
out
sbb
add
adc
(bad)
data16
push
or
(bad)
xchg
out
fidivr
jb
nop
pusha
jmp
out
push
xor
sbb
repnz
in
lock
xchg
or
sbb
push
pop
jae
mov
jp
outs
push
jmp
add
(bad)
cs
pop
push
(bad)
icebp
movs
add
xchg
xor
addr16
inc
in
add
fwait
pusha
inc
lods
dec
ss
push
js
sti
(bad)
mov
(bad)
mov
loopne
hlt
push
mov
(bad)
cli
out
lahf
sbb
retf
jg
jo
int
pushf
inc
adc
popa
out
retf
and
div
xchg
mov
cmp
push
fcom
xchg
adc
(bad)
sub
lods
lods
xor
(bad)
mov
add
xor
dec
cmps
dec
fs
sbb
jmp
cmp
imul
lock
or
mov
icebp
fs
repnz
(bad)
mov
rcl
xchg
mov
add
out
hlt
test
ror
push
adc
mov
in
fsub
je
jnp
xchg
retf
push
inc
push
repnz
pop
mov
imul
movs
out
stos
jnp
out
test
mov
popa
add
arpl
jno
or
fisttp
sbb
aam
je
in
xor
xor
fild
mov
dec
imul
dec
jbe
jae
xchg
sbb
xor
inc
shr
adc
and
sbb
leave
dec
inc
ror
add
xchg
push
addr16
mov
or
jns
aad
arpl
out
mov
popa
add
dec
mov
jge
rol
mov
and
sahf
mov
push
test
pop
adc
adc
pop
(bad)
shl
pminub
push
sti
ja
fwait
dec
xchg
inc
push
movs
pusha
sbb
rcl
sbb
pop
and
mov
ins
fsub
mov
jge
pop
mov
jp
xchg
mov
es
ret
sub
dec
jbe
call
in
and
div
aad
mov
(bad)
fisubr
aad
mov
mov
leave
loope
into
imul
cli
add
pop
rcl
xchg
scas
aaa
and
js
cmp
cmp
out
xor
lds
fisttp
int
jl
ins
sbb
popf
fcmovb
mov
and
cmps
cmps
push
dec
es
(bad)
fild
xor
(bad)
push
ror
mov
retf
push
xchg
mov
ds
push
call
cmps
mov
bound
ja
addr16
xor
xor
push
call
jb
mov
mov
inc
test
or
dec
outs
and
pop
xor
mov
das
sbb
add
dec
das
stos
xor
xor
inc
mov
push
jb
cli
push
sub
sbb
inc
pop
jmp
neg
popa
cs
(bad)
jg
pop
xor
push
js
test
add
push
mov
aas
sub
xchg
sub
add
loopne
rol
pop
cmp
adc
popf
or
mov
mov
sbb
retf
pop
jae
mov
retf
pop
mov
popa
les
xor
sub
xor
js
imul
push
bound
ss
mov
aaa
dec
call
ss
sbb
ss
fst
mov
xor
jb
iret
ds
movs
jl
mov
mov
cmc
int3
push
mov
in
cmps
push
rol
movs
mov
cmc
dec
sbb
xchg
arpl
fldcw
sar
call
xor
outs
dec
rol
pop
inc
mov
push
fcom
sti
loop
mov
test
add
bound
pop
sub
inc
imul
mov
aaa
mov
ins
les
and
test
cld
fistp
mov
int3
sti
stos
test
adc
imul
shl
mov
scas
arpl
mov
mov
sub
pop
jg
inc
(bad)
cmp
xchg
or
push
sub
jmp
(bad)
std
cmp
cld
cmp
adc
cmp
ins
xchg
inc
or
call
psrad
lods
ins
pop
ins
mov
xchg
test
push
adc
jmp
repz
(bad)
pop
fs
mov
in
mov
pop
mov
or
mov
iret
mov
adc
inc
and
ja
nop
xor
ins
pop
pushf
mov
addr16
ret
mov
mov
push
mov
push
ss
jae
mov
hlt
and
pop
cmp
out
lea
jl
mov
mov
pop
or
(bad)
mov
scas
xchg
stos
or
into
imul
dec
and
arpl
fistp
xlat
shl
xchg
jl
popf
ins
(bad)
pop
push
test
ret
scas
jne
inc
mov
stc
sub
lods
cmp
cmps
mov
cmp
cli
push
repz
sub
rcr
add
xchg
push
cmps
iret
(bad)
popa
mov
stos
push
pop
cmp
adc
sbb
stos
loopne
imul
mov
xor
and
pop
cmp
shl
sub
sub
pusha
dec
mov
mov
out
test
imul
into
inc
lock
cmp
fst
pop
xor
jmp
popf
pop
pop
call
mov
and
xchg
vpcmpgtd
and
push
xchg
lods
lods
sbb
push
push
pop
ret
jmp
lds
sbb
ds
push
sub
out
jg
sar
test
pop
cmc
stos
(bad)
jecxz
jne
outs
sub
ret
pop
test
in
cli
xchg
mov
add
inc
dec
xchg
push
pop
add
fist
fndisi(8087
jae
adc
pop
clc
pushf
sbb
mov
loopne
and
and
mov
das
xchg
pop
mov
push
add
pop
inc
mov
mov
sar
jne
fnsave
ja
sub
(bad)
cmps
sub
fstp
ret
in
idiv
push
imul
inc
xchg
ret
xor
rcl
sahf
and
sbb
xchg
push
les
add
or
movs
cmps
pop
cmps
ror
std
jle
xchg
xchg
jmp
push
or
int
retf
mov
xchg
adc
retf
push
dec
scas
call
add
adc
pop
test
push
jo
imul
mov
test
mov
popa
add
pop
jo
retf
adc
xchg
sub
sub
in
ins
aas
push
fbld
fnsave
and
mov
jb
or
sbb
cli
mov
mov
sub
mov
pop
fdivr
in
push
inc
sar
test
stos
icebp
ret
adc
les
fcomp
xchg
repnz
mov
mov
inc
ret
xchg
(bad)
loop
sub
ins
fnstenv
cmp
sbb
pop
jbe
dec
mov
fist
ret
push
inc
rol
aad
adc
int
bound
jb
cmp
cli
mov
jmp
jns
test
dec
mov
xor
cs
mov
cmps
push
mov
shl
push
fistp
pop
adc
popf
or
mov
iret
and
imul
mov
and
pop
ret
neg
or
in
xchg
and
or
cwde
xor
arpl
cmps
push
ficomp
xor
outs
jmp
js
sub
adc
(bad)
push
cmc
popa
mov
and
iret
in
jmp
jno
jmp
test
jns
and
or
jno
arpl
fild
(bad)
mov
mov
hlt
es
or
xor
std
adc
xchg
mov
loopne
jns
add
cmps
mov
popf
sub
push
sbb
jae
das
shl
js
dec
xchg
add
mov
ret
xchg
ins
int
xor
push
xchg
jno
sbb
sbb
dec
and
imul
xor
rcl
and
cmp
jge
sbb
xor
push
mov
mov
xchg
aam
(bad)
fist
stc
pop
cmc
call
daa
mov
scas
std
cld
jo
cmp
sub
outs
jnp
bound
add
lock
cmp
push
or
and
mov
dec
fmul
jmp
sub
movs
outs
pop
test
mov
jne
shr
cmp
inc
ja
sub
loope
call
int
mov
xchg
adc
je
cmp
retf
sbb
fwait
popf
cmp
mov
outs
cwde
pushf
(bad)
cmc
js
sub
jne
mov
fistp
fwait
jl
jbe
lds
fiadd
cmp
push
rol
and
adc
xchg
cmc
mov
pop
pusha
out
adc
inc
pusha
leave
nop
mov
lods
mov
(bad)
dec
fidiv
sub
add
ja
dec
adc
imul
popa
(bad)
out
mov
cmp
rol
dec
sti
jecxz
push
out
inc
int
movs
jl
call
dec
outs
imul
sub
les
loop
inc
lods
or
pushf
fwait
xchg
inc
cmps
mov
cmp
add
or
or
inc
ja
mov
shr
fs
ror
push
rcr
mov
(bad)
call
mov
inc
ror
int3
repnz
dec
cmp
add
pop
inc
push
jmp
pop
push
(bad)
inc
test
lock
sahf
call
inc
push
ret
retf
jb
cmp
ss
repnz
(bad)
push
inc
aad
ja
mov
inc
pop
mov
cmp
out
push
lods
xor
xchg
sbb
add
test
dec
jg
ret
cmc
in
sub
(bad)
cli
pop
mov
add
jecxz
retf
call
pop
or
dec
les
lods
loop
jmp
fsub
or
aam
imul
jo
pop
jp
mov
data16
sbb
outs
fadd
cmp
jbe
push
xor
leave
out
and
dec
push
scas
mov
enter
xchg
mov
lds
push
push
into
in
pop
fwait
inc
push
dec
mov
xchg
jmp
out
into
mov
jno
xchg
call
(bad)
idiv
ucomiss
hlt
sub
icebp
mov
dec
mov
and
jmp
jl
sub
sbb
xchg
lea
pushf
and
fiadd
lock
jge
xor
mov
into
fdiv
jae
iret
pop
test
xlat
push
mov
jnp
movs
loopne
pop
(bad)
ss
adc
nop
lods
xor
inc
arpl
mov
lea
fdivr
mov
xor
push
dec
(bad)
imul
imul
jae
inc
je
mov
es
inc
push
pop
scas
cli
(bad)
pop
jmp
pushf
lds
mov
xchg
shl
push
jmp
jnp
xor
push
ss
mov
xor
aad
pop
ss
add
fisttp
mov
dec
push
call
jb
mov
sub
xor
cld
shl
pop
lahf
ins
test
dec
jmp
in
xor
push
push
pop
int
bswap
aas
cmp
push
gs
sbb
jge
xor
cmp
push
mov
mov
add
mov
sub
mov
and
adc
inc
jns
clc
sahf
bound
mov
fidiv
mov
push
out
ror
and
les
mov
frstor
dec
mov
popf
ret
cdq
and
jmp
and
mov
pusha
xor
das
push
inc
xor
jne
shl
pop
out
mov
fwait
push
jae
cwde
mov
jnp
das
out
dec
dec
or
mov
inc
clc
movs
dec
mov
scas
mov
xor
cdq
sub
sbb
xor
push
test
xchg
dec
xchg
aaa
or
icebp
mov
pop
rol
pop
sbb
leave
sub
ja
or
mov
(bad)
out
jmp
add
(bad)
arpl
arpl
xchg
imul
sub
pushf
and
jmp
movs
mov
test
cmp
out
adc
imul
mov
dec
in
in
mov
xor
mov
mov
pushf
mov
push
daa
ficomp
jns
and
je
aad
cwde
movs
add
int3
jmp
jp
jp
cld
cmps
or
dec
xor
mov
xchg
xor
add
lods
(bad)
mov
mov
frstor
adc
ret
pusha
(bad)
dec
loop
mov
test
ficom
fistp
rcr
and
nop
dec
mov
sti
outs
jmp
mul
add
xchg
xchg
das
(bad)
inc
pop
mov
fadd
dec
xchg
and
fs
imul
dec
push
cwde
and
fiadd
xor
mov
adc
js
pop
ins
outs
xchg
adc
sbb
aaa
xchg
and
mov
xchg
sbb
popa
aaa
js
fadd
in
imul
jne
add
add
inc
loope
lds
add
mov
push
call
sbb
jns
mov
fbld
xchg
and
xchg
loop
pop
shl
sbb
test
adc
or
mov
(bad)
mov
ja
retf
push
dec
ret
imul
mov
xchg
xor
sbb
sub
dec
and
aaa
inc
or
imul
push
cmps
add
bound
test
popf
xchg
mov
cld
pop
es
lock
js
stos
jb
dec
sub
jmp
inc
out
out
xchg
inc
jmp
push
outs
les
adc
sahf
lea
sbb
rol
cmp
jnp
outs
xchg
lahf
ds
inc
cli
mov
retf
lea
push
clc
arpl
xchg
fstp
ins
xlat
nop
cdq
lods
push
ficomp
dec
hlt
hlt
cmp
xlat
cmp
je
jmp
sti
jp
addr16
(bad)
int
sahf
inc
jne
adc
jmp
xor
lods
cdq
jle
add
int3
(bad)
mov
mov
mov
idiv
push
pop
add
popf
sbb
or
adc
jge
int3
(bad)
(bad)
retf
daa
rol
pushf
lds
mov
push
pusha
jle
pop
add
jl
push
pop
push
cmp
dec
jae
arpl
movs
mov
movs
(bad)
add
cld
repnz
dec
push
inc
pop
inc
mov
mov
xchg
inc
mov
push
add
pop
jle
movs
arpl
xor
or
dec
pop
adc
rcr
leave
cmc
sti
xchg
idiv
jbe
mov
add
outs
cld
pop
dec
push
jge
adc
cld
lods
gs
inc
add
ins
enter
mov
jmp
or
fistp
into
cmp
pop
xor
fidivr
loop
inc
sbb
sub
pop
pop
jne
push
std
cmp
mov
or
into
lock
mov
jno
stc
xor
lods
mov
(bad)
sub
pop
jmp
lock
lahf
adc
jo
lds
out
mov
aam
adc
push
mov
sub
cli
scas
pop
pop
rcl
icebp
pop
jmp
mov
repnz
sub
push
jmp
(bad)
es
movs
xchg
mov
add
cld
mov
fnstcw
scas
fsubr
hlt
mov
test
mov
int
and
popf
sqrtps
out
loopne
pop
mov
bound
rcr
add
and
xor
sub
test
sahf
sub
out
pop
daa
mov
xor
mov
xchg
add
push
jbe
or
enter
xchg
test
fsub
mov
ins
div
mov
jns
stc
mov
jo
sar
adc
mov
adc
jns
(bad)
xor
or
mov
jle
sub
call
(bad)
fistp
pop
adc
in
push
fs
jge
and
mov
add
push
(bad)
pushf
pushf
jmp
sbb
push
mov
adc
mov
or
arpl
loop
outs
dec
cmp
push
leave
push
sbb
daa
inc
push
pop
daa
ror
(bad)
jmp
rcr
sub
repnz
aam
shl
or
imul
sub
mov
fdiv
inc
cmp
xchg
mov
nop
mov
adc
shr
fnsave
movs
inc
mov
xchg
call
add
js
push
or
push
mov
and
cs
in
and
scas
sbb
lods
add
sbb
in
test
call
xchg
cmp
ins
add
jae
ins
call
pop
cmp
xchg
ficomp
xchg
mov
call
sbb
sbb
adc
xchg
(bad)
jmp
shl
int
or
imul
pop
ss
test
cmp
sbb
in
pop
fs
shr
jne
popa
xchg
je
sub
inc
mov
adc
pushf
pop
sbb
jo
je
xor
aaa
cdq
pop
push
dec
add
cs
pop
imul
mov
dec
popf
ds
shl
and
inc
sbb
sbb
loopne
arpl
dec
xchg
xchg
xchg
mov
in
call
add
mov
sbb
mov
fdivr
xchg
test
jl
aas
cdq
or
aaa
xor
xchg
pop
iret
(bad)
(bad)
jb
inc
and
rol
push
mov
test
mov
(bad)
(bad)
pusha
scas
ja
mov
sbb
aas
rol
push
pop
sbb
xlat
ret
cld
cld
ja
mov
arpl
in
sti
cmp
shl
movs
and
jge
xor
pusha
call
into
or
outs
inc
fdiv
enter
mov
cs
mov
int
(bad)
cmp
add
pop
mov
mov
jmp
pop
call
jle
dec
jnp
sub
fadd
xchg
lods
cmp
xchg
or
sub
clc
xchg
push
push
cmp
push
fwait
xor
add
mov
shl
imul
jb
jae
arpl
xchg
mov
pop
sub
enter
add
loopne
(bad)
loop
inc
mov
ficom
test
daa
mov
pop
mov
repnz
loopne
aad
jns
cmp
inc
push
mov
mov
sbb
add
sub
or
jg
push
cmp
ret
xlat
rcr
sbb
mov
xlat
sbb
sub
pmaxub
sbb
pop
jb
jae
test
and
xchg
js
(bad)
xchg
cmp
xor
sbb
adc
xchg
or
xchg
push
push
(bad)
imul
push
mov
jge
or
xlat
cmp
outs
jb
es
jne
out
sbb
jo
mov
pushf
lea
in
add
pushf
aaa
sbb
data16
push
cmp
adc
dec
inc
call
hlt
in
sub
in
pop
cli
pop
or
fs
mov
inc
mov
fisubr
xchg
jl
mov
xor
mov
or
mov
retf
mov
fs
imul
call
test
loope
pop
test
outs
sahf
mov
and
and
mov
sub
imul
xchg
cdq
xchg
call
popf
in
sbb
and
cdq
test
inc
test
in
(bad)
pop
dec
dec
adc
ret
addr16
movs
sti
xor
scas
das
mov
arpl
cmp
movs
mov
int
jmp
xchg
(bad)
loopne
pop
xchg
pop
pushf
sbb
es
cdq
jne
fbld
pop
jle
int
jge
call
mov
(bad)
mov
(bad)
jae
call
mov
mov
and
xchg
call
dec
xchg
or
shl
cmp
mov
(bad)
inc
les
push
cmps
sar
adc
lahf
adc
in
pop
dec
xor
add
dec
ffree
pop
rcl
mov
pop
pop
test
ret
mov
(bad)
cli
jge
nop
jmp
ss
outs
xor
das
ins
test
sar
push
pop
xchg
bound
hlt
clc
sub
scas
xchg
adc
ins
inc
daa
cmps
in
popf
cmps
inc
push
mov
test
sbb
jo
mov
test
adc
ins
jo
in
ret
dec
pusha
cmps
(bad)
mov
adc
sub
and
lds
rcr
in
jmp
jecxz
push
and
xchg
pop
xor
xchg
loope
sub
popf
ins
mov
enter
cmp
push
mov
mov
sahf
in
fwait
aam
nop
add
outs
fcmovnu
inc
pop
add
sub
bound
xchg
nop
cmps
ret
lock
ja
(bad)
out
pop
imul
fld
daa
xchg
xchg
xchg
mov
push
cld
push
inc
mov
(bad)
pop
sub
jl
addr16
loopne
imul
outs
repz
xor
(bad)
mov
les
cmps
cli
(bad)
sub
cld
ret
pop
call
pop
(bad)
xor
pop
dec
fsubrp
cmp
fs
xchg
mov
pop
dec
mov
dec
loopne
fidiv
fidiv
mov
das
jmp
(bad)
mov
mov
arpl
(bad)
mov
iret
lods
int3
add
nop
or
mov
(bad)
fwait
push
out
fiadd
add
ins
xor
jns
call
mov
jp
bswap
das
fcmovnbe
ror
xor
jae
mov
jo
and
cli
mov
sar
jno
sub
mov
jnp
push
fwait
into
ds
jmp
jmp
sub
repnz
add
pop
std
adc
sbb
stos
out
jns
ins
mov
dec
ss
outs
xchg
clc
stos
or
ja
in
add
or
xor
mov
jbe
or
or
push
aad
imul
mov
jp
in
push
dec
xor
loopne
mov
enter
xchg
icebp
sar
cmp
stc
xor
test
loop
int3
pop
movs
dec
cli
xchg
div
repnz
mov
push
jne
mov
stos
cwde
mov
cwde
mov
dec
test
pop
dec
add
xchg
outs
or
cmp
push
sbb
mov
xchg
cmp
xor
repnz
call
cs
cli
mov
push
push
inc
pop
les
fistp
jns
and
xchg
ret
inc
push
fwait
jg
data16
mov
and
xchg
aad
or
xor
movs
fld
pop
sub
cld
mov
lods
xchg
add
cmp
push
mov
cmp
pop
inc
cmp
add
pop
xor
dec
mov
xor
clc
add
mov
mov
mov
dec
jle
es
das
dec
cdq
mul
mov
scas
shr
cmp
jb
mov
xor
mov
pop
inc
sub
aas
push
adc
stos
jae
add
clc
mov
sub
outs
jns
adc
add
inc
or
dec
mov
or
sar
xor
fstp
test
stos
in
int
dec
xchg
ds
push
loopne
aaa
adc
popf
mov
cld
call
xchg
sar
jg
neg
jecxz
out
adc
daa
sbb
clc
in
pop
jno
psrlw
jge
push
mov
retf
es
xchg
outs
stos
add
out
out
out
clc
stos
stc
mov
aad
cli
push
test
mov
sub
xor
pop
jp
stos
mul
movs
sbb
pop
sbb
jae
push
xchg
adc
push
dec
xchg
pop
jns
loop
pop
dec
lods
xchg
mov
cld
scas
stc
push
sub
mov
outs
jecxz
mov
out
fiadd
cdq
jmp
jecxz
pop
mov
cli
in
pop
or
mov
or
jnp
dec
adc
push
xor
bound
or
dec
int3
add
add
aaa
outs
mov
add
stc
pop
or
xor
add
into
xor
sti
dec
pop
pop
cmp
(bad)
sbb
enter
sbb
fs
xchg
std
cmp
cmps
das
sub
xor
pop
xchg
les
jae
ja
push
mov
aad
jl
and
sbb
mov
movs
(bad)
inc
sbb
xchg
push
imul
je
pop
aas
mov
push
dec
rcr
pusha
push
aaa
lock
sub
and
jp
inc
(bad)
cmp
movs
sbb
push
mov
mov
imul
lods
es
mov
jb
sbb
outs
cli
sbb
mov
ja
mov
pop
pop
aam
outs
stos
sti
pop
fist
scas
dec
pop
jno
mov
ror
stc
std
mov
jge
es
clc
pusha
push
mov
push
fsubp
mov
rol
and
dec
or
inc
popa
retf
ja
push
icebp
fs
sbb
xor
inc
xor
sub
in
xlat
mov
push
shl
jb
fst
push
push
mov
jl
std
and
push
ins
shl
dec
jmp
cld
aaa
xchg
icebp
cmp
mov
jle
pop
or
inc
push
in
data16
out
mov
pop
shr
xor
iret
xor
inc
idiv
cld
add
mov
add
push
push
mov
mov
fst
xor
lahf
aaa
ins
stc
jge
lea
mov
outs
xchg
inc
addr16
adc
sub
jae
lods
out
xor
les
js
inc
sub
mov
stos
test
jno
add
lods
dec
test
ret
mov
mov
in
mov
xchg
sar
sbb
cwde
fwait
push
jb
pmullw
icebp
aas
adc
push
mov
xor
lea
push
or
mov
pop
cmc
xor
fisttp
ins
and
cs
mov
push
pop
call
lds
add
jmp
sub
aaa
fstp
loopne
jmp
lock
and
fs
inc
pusha
sub
adc
or
mov
shl
mov
stos
mov
cmps
movs
xor
jg
inc
addr16
(bad)
xlat
push
inc
aas
lahf
stos
sbb
retf
mov
test
enter
and
or
xchg
in
push
shr
jp
add
enter
and
pop
mov
popa
and
stos
add
std
xchg
mov
cmp
mov
(bad)
pop
jecxz
sbb
sub
xlat
lahf
(bad)
rcr
xor
(bad)
retf
fs
jo
(bad)
jg
xchg
or
mov
xor
jl
cmp
je
jo
retf
movs
push
jbe
imul
xor
outs
push
mov
push
add
rol
dec
cmp
mov
out
mov
call
gs
pop
popf
sbb
mov
mov
pop
retf
fsubrp
lahf
jmp
mov
test
xchg
test
mov
pop
push
out
test
inc
dec
push
xchg
mov
push
ins
shr
dec
sub
imul
adc
ror
xchg
mov
popa
sub
mov
sbb
(bad)
jmp
push
lds
add
xchg
mov
iret
lahf
nop
mov
hlt
in
push
(bad)
call
add
push
dec
into
dec
movs
jno
aad
mov
push
cmp
jg
(bad)
sub
mov
das
mov
xchg
mov
aas
jl
icebp
inc
dec
pop
loopne
call
popf
sub
and
call
jecxz
xchg
cld
sub
push
fdivr
push
xchg
sbb
jle
cmp
mov
xchg
stc
add
xchg
std
mov
push
mov
add
sbb
dec
or
jno
out
dec
dec
adc
cs
test
fcmovb
popfw
stos
int3
or
cli
mov
dec
cmp
sbb
(bad)
aas
push
adc
fs
outs
pop
repz
mov
and
ins
call
outs
(bad)
repz
pop
out
aas
ins
push
dec
lea
mov
aas
int
push
mov
inc
shl
call
sahf
leave
mov
int
inc
rcr
jb
in
sub
sub
sbb
jecxz
test
mov
aam
jne
adc
dec
push
jge
jbe
xor
dec
jb
fadd
cmp
inc
mov
sbb
dec
push
mov
lds
shr
and
sti
jp
iret
jae
stc
adc
in
popa
hlt
sub
push
inc
inc
xchg
test
dec
cmps
(bad)
sub
push
fidivr
and
jbe
and
rcr
sbb
je
sbb
sub
add
adc
mov
es
adc
ds
das
mov
xor
cmp
add
mov
(bad)
mov
rcr
push
jp
js
fnsave
nop
or
out
pop
les
add
ja
add
mov
cmp
jae
jg
jmp
pop
mov
ins
out
out
cli
sbb
sub
push
pop
inc
cmps
fsubr
push
rcr
jmp
pop
cmp
stc
jo
and
pop
stc
pop
push
outs
jns
lock
stos
pop
jne
enter
out
ins
test
stos
adc
stos
and
sub
mov
push
push
adc
imul
pop
and
xor
cmp
jne
lock
sub
test
stc
jbe
sbb
outs
mov
loopne
xchg
push
js
mov
cs
(bad)
pusha
fwait
ins
sahf
cmps
pop
add
stos
cmp
xchg
pop
ror
loopne
or
push
mov
xor
fs
mov
int
xchg
mov
push
mov
jmp
retf
cs
jecxz
fsub
mov
mov
jbe
inc
ss
push
jmp
(bad)
sub
(bad)
aad
shl
mov
xchg
and
pop
pusha
cmps
clc
dec
push
cdq
add
test
jecxz
dec
leave
(bad)
repz
aaa
not
sbb
dec
mov
mov
je
(bad)
dec
xor
ret
data16
inc
call
cmp
jne
mov
mul
and
outs
xor
rcr
loopne
ja
daa
adc
xchg
nop
movs
xchg
sbb
inc
dec
inc
or
jo
mov
cwde
mov
in
mov
loop
xor
repz
jmp
lds
gs
dec
arpl
sub
cwde
cmp
mov
shr
and
(bad)
test
add
aad
scas
outs
mov
sbb
cmp
jne
popa
jnp
rcr
xchg
push
jae
xor
pusha
movs
jge
out
arpl
out
sbb
jmp
mov
pop
jge
sbb
xchg
pop
rcl
sub
push
shr
loope
pushf
jns
clc
add
or
fs
xor
out
(bad)
pusha
test
(bad)
mov
sbb
jae
(bad)
dec
adc
call
dec
xlat
movs
shl
pushf
adc
std
popa
and
jmp
das
mov
pop
jae
jbe
aad
aad
and
fmul
jno
xor
aad
ret
cli
out
cmp
jmp
retf
shr
cmp
je
lods
es
and
add
std
mov
xchg
or
pop
or
dec
add
pop
cmc
cdq
mov
ror
sti
popf
fwait
pop
dec
out
mov
fldcw
push
push
jbe
jnp
frstor
sar
enter
ins
jmp
outs
sbb
jne
adc
popf
inc
xchg
sub
or
or
ret
inc
jnp
mov
leave
xlat
and
(bad)
loop
cld
out
icebp
jnp
adc
and
movs
loopne
inc
push
inc
jne
sbb
test
retf
sub
movs
int3
popf
pop
rol
push
mov
jle
jo
sti
mov
loope
xchg
jae
jbe
sub
je
adc
pop
mov
sbb
mov
add
or
shr
movs
dec
dec
repz
pusha
xlat
and
daa
cmps
sahf
pop
mov
sbb
rcr
loope
(bad)
cmps
jnp
mov
movs
xchg
sub
loop
add
cmp
jbe
out
pop
(bad)
push
jb
cmp
mov
mov
aaa
xor
mov
xor
test
jo
and
xlat
in
std
inc
ret
add
sbb
and
rcr
std
pop
or
stos
jmp
dec
push
dec
dec
test
xchg
retf
aas
(bad)
out
scas
mov
sbb
leave
in
xchg
mov
mov
xor
retf
enter
ficomp
aaa
sbb
mov
or
bound
arpl
(bad)
xchg
dec
or
jge
add
sbb
pop
xor
fcmovne
mov
sub
fiadd
stc
add
xor
push
and
inc
jnp
pop
and
cmp
mov
dec
imul
xchg
in
std
pusha
mov
(bad)
jle
add
push
mov
loop
lea
lods
inc
imul
jge
enter
retf
sub
pop
inc
dec
push
fsub
xchg
xchg
(bad)
ficom
fistp
loope
xor
out
lea
cmp
or
pop
sbb
mov
mov
icebp
or
pop
mov
jnp
mov
imul
push
sub
mov
sub
adc
repz
pop
aaa
cmps
jmp
ins
cmp
ss
(bad)
call
add
mov
mov
sbb
cmps
sub
xchg
adc
repz
inc
test
jno
ret
and
repnz
inc
jno
sbb
call
cdq
fs
push
push
stos
or
out
(bad)
fstp
outs
out
call
xor
pop
dec
xor
nop
pushf
lods
pop
sub
xor
dec
adc
cmps
fwait
loopne
push
pop
popf
aam
ins
sbb
mov
inc
xchg
ror
and
cs
mov
xchg
or
out
mov
mov
inc
popa
inc
cld
popa
ja
lods
and
xor
add
sub
and
outs
sub
xchg
add
xchg
mov
mov
movs
stos
pop
mov
cmp
movs
mov
mov
neg
add
in
pop
(bad)
mov
fmul
or
int3
mov
stos
imul
jmp
es
shr
rcr
(bad)
jo
addr16
pop
sbb
push
(bad)
mov
cmp
es
fldenv
stos
jbe
stos
leave
push
xchg
dec
js
icebp
mov
js
aas
inc
adc
in
sti
add
ret
jb
inc
pop
lea
mov
xor
jne
jmp
and
push
push
inc
jo
stos
inc
(bad)
push
cdq
std
rcl
stc
cmp
das
jo
icebp
fsubr
ret
retf
xchg
pop
xchg
mov
and
mov
shl
pop
push
lods
push
mov
scas
scas
rcr
dec
pushf
push
push
in
dec
pop
push
cmp
ret
xchg
or
add
xchg
lahf
shl
xchg
hlt
jle
pop
sub
fadd
cmp
lods
adc
and
ja
das
cmp
sbb
sub
xchg
dec
jp
fmul
dec
shr
fs
or
ja
imul
es
add
push
fidivr
retf
add
loop
jae
jns
pop
add
and
out
lds
or
mov
out
(bad)
icebp
adc
shl
push
test
jp
add
cmp
cdq
in
(bad)
push
jmp
fcomp
and
fs
jns
fidivr
loopne
xchg
lds
and
xor
loopne
add
jne
aas
retf
mov
jns
jb
mov
jle
push
jmp
(bad)
xchg
rcl
js
dec
pushf
std
inc
inc
ins
retf
fist
cmps
pop
jecxz
sbb
repnz
mov
das
js
push
inc
lods
call
pop
fist
movs
mov
shr
adc
mov
lods
lods
dec
adc
mov
loopne
pop
xchg
mov
xor
scas
adc
mov
ficom
test
xor
test
popa
sub
lds
or
push
call
push
aam
bound
mov
sub
mov
(bad)
scas
adc
sti
lods
out
loope
mov
and
jmp
pop
cwde
movs
shl
xor
jo
aas
sar
cmp
sub
mov
cmp
cmp
stos
ret
(bad)
bound
xor
inc
out
cmps
js
push
in
dec
push
xchg
jl
inc
push
aaa
imul
aad
mov
into
adc
dec
sub
mov
ret
jg
push
neg
cmp
cmp
or
and
xchg
and
jmp
in
test
aas
daa
pop
bound
pop
push
daa
dec
gs
mov
icebp
(bad)
xlat
mov
mov
xor
rol
test
adc
jle
ins
xchg
xor
jno
scas
shr
imul
mov
inc
out
sub
inc
fisttp
cli
mov
jp
mov
fmul
ins
dec
stos
push
in
mov
push
nop
test
test
lock
rol
dec
fnstsw
fiadd
adc
aad
dec
pop
test
inc
adc
push
out
xlat
(bad)
adc
movs
adc
movs
sub
sub
jg
cmp
xor
add
jl
mov
in
inc
out
inc
repz
fistp
pop
add
(bad)
sbb
test
sbb
or
sub
fs
movs
shr
in
fimul
xchg
push
xchg
xchg
out
std
xchg
outs
addr16
fstp
or
sbb
stos
and
cmp
scas
aaa
int3
dec
int3
popf
jns
ret
sub
ror
cmp
imul
mov
push
dec
cli
jnp
or
fwait
or
adc
test
dec
imul
xor
sub
iret
mov
scas
out
das
(bad)
cli
push
push
cld
leave
push
and
sub
cwde
mov
adc
ror
test
bound
jmp
(bad)
popa
out
cmp
js
lods
test
pop
lahf
adc
int3
int
repnz
jae
lods
adc
or
int
sti
ror
sbb
in
pop
cmps
cmc
lock
add
and
push
fwait
mov
jne
and
loop
mov
mov
mov
dec
shl
xchg
aad
dec
sbb
push
or
pop
push
ret
outs
push
dec
or
mov
push
inc
shl
mov
out
push
xor
fcom
les
retf
mov
les
bound
pusha
(bad)
ficom
shl
ss
xor
mov
or
repz
jmp
and
retf
sub
cmp
push
add
jne
in
cmp
icebp
aaa
jne
setae
mov
stc
xlat
addr16
lock
lock
aas
sub
in
pop
clc
iret
cmp
gs
ins
outs
jl
cmp
mov
in
adc
jp
rcl
sti
push
mov
in
mov
bound
aam
call
out
mov
push
shl
mov
mov
popf
sub
mov
lea
push
out
in
mov
lea
aaa
out
je
int3
in
pop
in
aad
adc
nop
stc
cmc
movs
adc
and
mov
or
xchg
mov
adc
rcr
cli
jmp
mov
or
sbb
cmc
test
xor
mov
mov
push
or
or
js
out
test
mov
mov
(bad)
daa
mov
pop
mov
xor
sub
addr16
mov
cmp
data16
ja
push
fisub
ds
aas
cmp
sbb
(bad)
mov
sahf
fbstp
cmps
sbb
jmp
and
shl
fdivr
(bad)
cmc
retf
jo
xchg
xchg
retf
fsubr
xchg
add
ja
push
xlat
push
cs
push
pop
popa
jmp
xor
inc
or
(bad)
jne
sub
cmp
mov
pop
mov
xchg
pop
bnd
adc
dec
xchg
pusha
jecxz
mov
adc
in
adc
pushf
outs
xchg
jg
push
xor
cmp
xchg
cmc
xor
add
cmc
lods
dec
in
into
mov
out
and
les
pop
adc
pop
xchg
cmp
mov
int
les
imul
jp
and
out
out
mov
pop
inc
adc
fmul
pop
loop
ror
loop
stos
mov
mov
sbb
int
pop
pop
add
dec
mov
leave
clc
jno
scas
ja
shl
cli
ror
imul
daa
sti
adc
je
push
sbb
pop
addr16
imul
dec
push
ror
mov
movs
pusha
xor
adc
dec
jmp
ret
xor
iret
sbb
pusha
out
movs
push
xor
cmp
mov
jo
or
ja
jo
add
xchg
les
hlt
cmp
ret
mov
push
xor
dec
pushf
out
ins
shr
pusha
and
pop
add
sub
add
jb
aam
jno
jmp
jno
push
or
lea
add
iret
and
repz
cdq
shl
fucomp
fst
xlat
shl
cmp
or
in
mov
dec
test
std
sbb
jmp
data16
pop
cmp
pop
xchg
add
lock
ret
and
pusha
push
lahf
mov
jmp
icebp
mov
loop
mov
int
cmp
cld
cmp
je
jo
jmp
daa
inc
cmp
add
cmp
xchg
mov
mov
xor
pop
mov
in
and
clc
inc
jns
xor
cmps
pushf
sbb
rol
imul
dec
mov
sbb
xchg
cmp
push
push
dec
rol
sahf
retf
aam
xor
sbb
pop
(bad)
push
call
sub
pop
shr
and
sub
out
imul
mov
scas
sub
out
lahf
test
inc
cmps
into
cmp
pusha
xchg
cld
cmp
xor
inc
sbb
push
ror
push
pop
pop
outs
cmp
sar
mov
adc
ss
sub
ret
cld
mov
sub
popa
pop
loopne
adc
rcr
outs
xor
mov
fsubr
and
(bad)
cmc
les
mov
retf
pop
xor
(bad)
pop
(bad)
hlt
jbe
ins
mov
(bad)
or
push
loope
vpsubb
add
push
cmp
int3
lahf
dec
addr16
jae
mov
rcr
scas
push
inc
inc
les
adc
cmp
add
sub
in
xchg
push
or
adc
call
xchg
push
mov
push
inc
push
inc
dec
lea
mov
test
mov
mov
lods
ret
jne
psubd
popa
xchg
cmps
push
imul
mov
pop
rol
(bad)
inc
sahf
fwait
mov
xlat
outs
out
mov
add
daa
test
sub
adc
inc
fmul
pop
fisttp
icebp
mov
xchg
daa
mov
or
pusha
pop
test
sub
test
pop
fldcw
dec
(bad)
repnz
cmp
pop
adc
stc
sbb
shl
hlt
dec
push
or
and
test
aaa
dec
pop
dec
adc
hlt
mov
dec
mov
jns
xlat
enter
mov
scas
clc
nop
push
addr16
cli
rcl
test
add
pop
inc
loope
pop
sbb
ds
cmp
lahf
sti
xor
fisttp
mov
add
adc
mov
scas
or
in
sub
xchg
add
sub
lea
jbe
cmp
leave
sbb
jle
lahf
sbb
inc
pop
call
(bad)
int
jl
mov
or
push
iret
test
lahf
data16
imul
call
push
jp
add
(bad)
jns
jnp
lock
xor
test
sbb
mov
mov
mov
repz
es
jmp
inc
(bad)
mov
add
clc
mov
xchg
jg
int
sub
push
jecxz
imul
and
leave
ror
push
add
push
sbb
mov
xchg
lods
adc
jo
mov
cmp
test
inc
mov
fcmovu
and
mov
or
out
sbb
pop
lahf
mov
mov
in
daa
push
retf
cmp
(bad)
cmc
sub
jnp
push
cmp
mov
inc
jge
xchg
rol
push
sub
push
mov
popf
(bad)
mov
fcom
in
rcl
je
imul
icebp
cmp
mov
xlat
out
push
lea
repnz
and
in
pop
push
mov
xchg
(bad)
fsub
xchg
(bad)
mov
in
xchg
adc
mov
jae
lds
mov
push
xor
call
stos
ror
mov
rcr
mov
push
pop
push
mov
sbb
inc
xor
dec
inc
ss
push
xor
dec
aam
mov
call
or
pop
ja
push
hlt
leave
mov
and
das
push
add
ins
jno
inc
dec
dec
inc
ss
repz
adc
push
adc
inc
inc
(bad)
into
jg
sub
mov
add
loope
es
pop
push
or
ret
gs
sahf
push
ins
out
out
or
dec
mov
jge
sub
loopne
rcr
test
sub
xchg
add
jl
jbe
pop
clc
out
aad
or
into
mov
stc
and
pushf
sub
lea
sbb
iret
in
pop
dec
cmp
mov
into
shr
repz
cmps
out
es
cwde
mov
gs
sbb
in
or
icebp
push
mov
mov
iret
ret
jle
out
mov
jle
test
dec
scas
push
pop
push
ins
or
sub
popf
dec
mov
jb
lea
mov
xchg
repz
dec
(bad)
adc
lahf
(bad)
mov
inc
jns
shl
lahf
jnp
out
fst
clc
inc
stos
sub
dec
push
xchg
cmp
pop
jmp
and
lods
mov
mov
push
mov
inc
into
cmp
imul
dec
leave
dec
imul
shl
ret
xchg
pop
jl
dec
shl
dec
jae
out
and
pop
push
xchg
or
cs
cmp
(bad)
jmp
inc
pop
mov
cmc
sbb
daa
lds
xor
lods
cmp
sub
call
jbe
pop
mov
jnp
test
and
cmp
adc
fdiv
leave
jp
sub
push
or
test
ins
test
jae
cmp
daa
in
jmp
(bad)
in
jno
in
ss
and
xchg
pop
cdq
imul
retf
movs
sub
(bad)
outs
xchg
or
cmp
loop
sbb
aas
dec
pop
sbb
stos
sub
jnp
mov
loopne
pop
xor
rcl
or
fstp
push
add
adc
enter
cmp
pop
inc
aad
stc
dec
aad
(bad)
and
mov
fstp
pop
inc
sti
sub
test
cs
int
leave
cmp
and
popa
push
(bad)
dec
(bad)
fild
mov
cmc
lods
sub
out
in
mov
and
push
xor
xor
and
(bad)
movs
ret
sbb
xor
pop
cmp
ror
imul
inc
(bad)
bound
and
sbb
mov
and
gs
movs
push
adc
(bad)
aam
loopne
adc
xchg
aam
iret
sbb
and
jle
and
add
sbb
js
test
repnz
aas
or
cmp
push
data16
adc
jecxz
xchg
xor
mov
loop
icebp
test
stos
into
sub
jmp
mov
mov
(bad)
sub
inc
sbb
xchg
push
inc
cmp
jp
cmp
cmp
test
jne
retf
mov
in
adc
sar
and
ficom
pop
repz
into
mov
push
arpl
push
cmps
das
ss
add
ja
push
ja
xchg
lods
cs
dec
test
out
icebp
inc
hlt
imul
ss
xor
ror
hlt
cs
ja
xlat
into
das
scas
call
repnz
ins
into
mov
inc
inc
jmp
and
rcl
ja
adc
cmps
mov
mov
cmp
(bad)
and
mov
sub
arpl
sub
cmps
jmp
cmps
sar
imul
lds
int3
pop
test
les
sar
inc
stc
xor
add
mov
aaa
sbb
or
add
(bad)
ins
lock
out
addr16
push
popf
fwait
jnp
movs
jp
cmps
jmp
sbb
retf
xor
push
(bad)
sub
and
add
add
cmc
or
pop
popa
adc
fistp
std
out
imul
lods
push
pusha
int3
ins
xor
out
ds
pop
xchg
push
sbb
cmp
ret
lods
out
pop
enter
in
repnz
jo
push
cmp
xor
pop
push
push
leave
fs
into
pop
sbb
cmps
inc
imul
sbb
arpl
lods
jge
repz
lea
dec
inc
into
loope
and
cmps
je
and
or
mov
sahf
popf
sub
fldcw
pop
jb
dec
mov
addr16
xchg
dec
cmp
xor
xrelease
test
xor
daa
mov
xor
mov
gs
dec
sub
jp
cwde
test
dec
movs
xor
and
mov
adc
leave
sbb
xlat
in
adc
pop
pop
or
sahf
adc
into
out
and
sub
pop
clc
lahf
cld
or
jbe
(bad)
outs
ds
cmp
in
xor
in
jnp
mov
lods
or
inc
popa
cld
or
cmp
fild
jp
ss
fs
pop
daa
cs
adc
test
inc
jg
push
cdq
pusha
outs
in
hlt
lock
setl
lods
jecxz
push
in
push
inc
scas
jmp
je
push
sar
push
(bad)
fwait
lods
cmp
pop
mov
pusha
jge
cmp
iret
mov
sahf
jmp
mov
add
inc
jns
addr16
mov
dec
xor
mov
push
arpl
adc
jnp
xchg
and
mov
lock
jecxz
neg
adc
push
ja
lock
mov
mov
mov
test
dec
leave
cwde
loopne
xchg
enterw
mov
adc
pop
push
aas
inc
jl
call
mov
mov
cmp
ret
and
add
xchg
xlat
repz
pusha
jbe
sub
(bad)
mov
cmp
pop
cmp
xor
jno
(bad)
push
pop
dec
push
sub
ret
test
mov
outs
out
std
dec
jmp
or
fst
into
inc
dec
adc
jnp
lds
adc
jbe
into
repz
jae
jae
test
xchg
push
jns
jg
jnp
adc
test
loopne
xchg
pop
hlt
pushf
pop
test
mov
into
sbb
xor
lods
stos
fcom
out
sbb
mov
cmp
mov
ret
addr16
bound
cmp
popa
gs
add
call
daa
push
in
mov
jnp
push
shl
add
mov
jmp
ret
or
xlat
mov
jo
das
sahf
jb
mov
adc
cmp
push
mov
and
adc
mov
test
out
outs
ret
mov
bound
in
sub
adc
loope
jge
mov
dec
(bad)
dec
adc
sub
fist
cmp
adc
shl
sub
pop
xchg
cmc
div
loop
aaa
in
mov
push
pop
stos
push
iret
sbb
ds
aad
push
mov
inc
jne
mov
jl
cmps
sub
mov
sbb
sbb
jae
sbb
dec
mov
stos
sbb
test
arpl
rcl
retf
icebp
dec
data16
js
stos
mov
dec
xchg
mov
shr
jle
pop
xor
shr
fwait
inc
xchg
mov
fld
cmc
adc
pop
in
lods
out
(bad)
push
loop
xor
add
jp
cli
(bad)
int
mov
lods
leave
push
push
or
jns
jge
clc
jne
xchg
dec
mov
cld
aam
inc
outs
mov
xchg
sbb
movs
in
pop
and
shl
mov
jnp
mov
cmps
cmp
fsubp
or
loope
push
aas
add
imul
test
xor
dec
pop
std
jg
int
dec
xchg
sub
ja
fnsave
adc
mul
mov
test
sbb
cld
ror
push
repz
inc
cmp
scas
fiadd
or
or
jbe
mov
cmps
jns
mov
imul
clc
sub
xlat
pop
cdq
push
cmps
in
and
out
mov
xor
xor
es
lock
ret
(bad)
pop
xchg
push
adc
mov
adc
add
or
add
aad
call
mov
mov
ficom
clc
mov
pop
cld
xchg
cs
cmps
(bad)
mov
fdivr
mov
inc
popa
mov
cmp
nop
ss
jnp
jmp
cs
pop
xor
ins
sbb
lahf
mov
ins
in
test
loope
inc
mul
sbb
mov
test
jle
fdivr
add
movs
aaa
mov
gs
sub
jns
mul
aaa
sbb
jno
adc
test
pop
and
and
or
sbb
jnp
daa
dec
arpl
aas
fnstsw
jecxz
arpl
cmp
ror
or
jno
aaa
clc
movs
or
rol
xchg
repnz
jg
(bad)
sti
ins
aas
cmc
hlt
pusha
pop
jmp
aam
pushf
mov
sbb
mov
iret
cmp
cwde
sbb
out
sahf
jns
lds
mov
ret
mov
pop
cmp
xchg
pop
iret
add
dec
cmp
mov
xlat
sti
xlat
fisttp
movs
mul
and
out
dec
cld
cmp
cld
lods
sbb
repz
mov
test
outs
cmc
iret
rcl
or
or
mov
inc
pusha
(bad)
out
mov
push
out
dec
leave
enter
jg
aad
pop
mov
loop
aam
jno
push
cmp
or
jae
cld
mov
mov
data16
mov
test
pop
sbb
and
daa
js
mov
ja
and
loop
out
pop
push
xchg
mov
ins
mov
or
popf
sbb
leave
retf
inc
mov
mov
fstp
addr16
jne
jae
mov
imul
mov
inc
arpl
jle
mov
hlt
cmp
inc
mov
leave
leave
les
icebp
js
lods
cmp
bound
pop
mov
inc
rcr
mov
and
int
lock
repz
pop
daa
test
mov
mov
mov
popa
jecxz
dec
jl
push
inc
xor
pop
cli
int
cmps
pop
shl
movs
inc
xchg
xchg
cmp
loop
dec
fwait
mov
pop
iret
fisub
sbb
stc
mov
pop
arpl
cmp
daa
es
pushf
das
push
out
rcr
sahf
cli
or
mov
retf
pop
or
mov
bound
mov
sub
mov
push
sbb
mov
xor
test
out
je
lods
add
mov
sub
ror
lds
cmp
mov
stos
pusha
xchg
mov
stc
sub
push
jmp
repz
pop
cld
cmp
iret
cs
adc
sbb
das
push
test
xor
nop
retf
fist
into
loop
fild
jne
mov
fst
int3
sbb
mov
adc
dec
lods
addr16
add
enter
popf
sub
push
xchg
movs
inc
fs
js
jbe
fldcw
fadd
cmps
or
cdq
call
jmp
mov
xchg
stos
mov
xchg
xchg
repz
cmp
sub
jbe
adc
lahf
test
xlat
cmp
push
stos
repz
hlt
out
lods
push
iret
sbb
mov
(bad)
jo
popf
jle
int
sub
adc
inc
call
into
shl
stos
and
icebp
jmp
sti
ja
(bad)
sbb
es
push
xchg
or
ror
or
pushf
lds
sar
test
jae
repnz
fimul
push
xchg
mov
out
fnstenv
mov
cmp
ret
sbb
dec
in
clc
not
stc
(bad)
push
retf
dec
mov
xchg
scas
adc
outs
mov
jmp
sar
idiv
mov
dec
lock
jmp
jne
inc
push
jmp
xchg
test
xor
int3
adc
xor
int
loop
inc
scas
ins
popf
push
shl
pop
nop
push
and
sbb
inc
shrd
out
jo
add
mov
cmp
xor
push
jae
and
sbb
int
mov
out
add
cs
les
lahf
call
xchg
outs
or
push
add
popf
daa
jnp
inc
jg
ss
cmps
jp
ret
inc
scas
popf
(bad)
inc
dec
call
jmp
int
ret
out
mov
in
pop
call
lods
retf
mov
lahf
push
lea
or
mov
and
out
test
movs
dec
or
(bad)
jp
mov
mov
lea
(bad)
xchg
sbb
or
pop
push
lods
inc
pop
jl
pop
fdivr
(bad)
out
aas
sub
retf
loopne
adc
and
pop
inc
pop
neg
jbe
mov
das
cmp
pop
cmp
daa
cdq
rcr
cmp
fs
fucomip
adc
sub
repnz
sub
fisttp
sar
and
lods
cmp
cmc
mov
sub
inc
arpl
rcl
(bad)
push
cs
and
push
cmp
mov
addr16
sbb
js
lea
idiv
pushf
shr
scas
dec
adc
push
std
dec
cmps
jo
out
jns
xchg
jp
sbb
pop
cmps
xchg
sti
gs
lea
in
movs
sbb
xchg
sub
mov
push
repnz
xor
aas
(bad)
dec
xor
cdq
push
mov
test
or
pop
and
dec
out
xchg
add
jne
and
pop
enter
shr
or
sbb
xor
movs
xchg
inc
adc
mov
mov
shr
test
xchg
mov
imul
es
add
(bad)
(bad)
call
push
xlat
pop
sbb
stc
adc
aam
jge
xor
ja
aas
lahf
add
test
pop
into
stc
and
xchg
out
ja
mov
lods
cmp
movs
ins
daa
les
xor
add
adc
adc
shr
pop
inc
jnp
add
ret
cmp
movs
inc
inc
sti
adc
or
adc
fwait
call
scas
mov
jb
into
and
cmp
inc
xchg
or
mov
jmp
mov
pop
retf
adc
sub
inc
jno
or
psubb
mov
repnz
add
pop
out
xchg
or
mov
clc
jae
addr16
dec
popa
(bad)
jmp
rcr
or
xchg
cmp
pushf
mov
cdq
mov
int
shl
sub
adc
cmp
xor
and
push
mov
imul
or
dec
mov
mov
jne
outs
sbb
adc
dec
sbb
icebp
movs
push
or
mov
sbb
sub
inc
mov
xchg
inc
test
mov
or
inc
loope
xor
lods
daa
hlt
cdq
sub
mov
adc
cmp
inc
aas
lods
movs
imul
sbb
es
or
std
mov
fsubr
(bad)
mov
lea
es
push
fstp
push
and
inc
out
sub
xchg
and
xchg
pop
xor
fiadd
rcl
mov
ret
mov
arpl
jl
sbb
dec
mov
int
leave
stos
es
or
ins
aam
iret
jo
or
aad
stos
xlat
add
ins
ja
(bad)
popf
in
adc
in
xor
sub
cdq
ds
stos
loop
in
cs
sti
shr
dec
icebp
mov
hlt
jl
mov
sbb
sbb
in
adc
sbb
cmps
fdiv
jecxz
xor
out
in
jne
(bad)
xchg
dec
xchg
fsub
cmc
xchg
xor
lea
mov
retf
adc
es
dec
add
jno
call
(bad)
neg
sbb
fbstp
push
test
xlat
add
ret
fistp
dec
inc
and
retf
ret
mov
cmp
lods
sbb
dec
add
mov
cld
shl
mov
std
icebp
or
mov
jge
repz
pop
add
jmp
jnp
aas
add
dec
ret
adc
movs
test
outs
sub
xchg
ds
cmp
hlt
mov
push
lods
add
push
and
mov
sub
pop
rcl
mov
lds
xchg
retf
ins
sbb
stc
aaa
inc
aas
arpl
call
xchg
push
xor
js
fadd
repz
sub
(bad)
jmp
icebp
or
xor
push
pop
and
stos
addr16
les
push
out
pop
adc
mov
jo
jmp
imul
ret
mov
adc
sbb
in
popf
push
jmp
xchg
ror
neg
or
dec
lods
push
or
cmc
mov
dec
ins
mov
xor
leave
pop
xchg
add
fistp
pop
ins
jo
sub
cld
push
out
mov
add
mov
cmps
test
push
mov
shl
mov
out
cmp
aaa
cmc
ins
xchg
jge
call
cmp
jmp
cld
pop
add
das
ss
loope
inc
cmps
sub
xor
or
sbb
aas
(bad)
push
or
push
aad
ss
mov
xchg
push
mov
inc
mov
adc
fadd
xor
stos
fld
mov
push
movs
and
cmp
retf
xor
push
push
out
aas
lods
mov
mov
jo
lea
cmc
jge
xor
push
fucom
ja
or
inc
aas
fdivr
mov
int3
jo
dec
push
fmul
mov
sbb
push
retf
ja
(bad)
adc
daa
in
mov
mov
movs
jmp
push
nop
outs
mov
sbb
dec
pusha
retf
add
jmp
jbe
push
mov
(bad)
adc
and
pushf
aaa
icebp
fadd
test
add
adc
pushf
and
enter
dec
cmp
leave
aaa
cld
jg
xchg
inc
inc
adc
jp
and
inc
push
adc
sub
mov
loopne
imul
enter
les
mov
or
repz
xor
fist
add
add
ins
je
and
jl
stos
cdq
scas
movs
mov
jmp
adc
fwait
jno
cdq
jle
and
mov
dec
fisubr
in
in
sahf
xchg
cmps
mov
into
sub
mov
sbb
ret
cmp
push
int3
adc
lahf
scas
xchg
movs
cmp
mov
mov
push
xor
and
movs
das
sti
xchg
ins
add
sbb
sbb
dec
adc
vpsrld
xchg
movs
pop
out
ss
adc
es
outs
mov
stos
leave
mov
mov
and
stos
fsub
cmps
sahf
inc
dec
daa
repz
repz
pop
in
mov
or
fucomp
mov
mov
or
push
std
popf
dec
cmp
(bad)
mulps
fisubr
dec
scas
and
jns
dec
pop
popf
mov
je
ins
out
add
xchg
jno
jecxz
fdiv
pop
xor
xor
add
and
sbb
push
inc
add
mov
in
lods
fsubr
popa
dec
aas
xchg
push
mov
int3
ror
daa
mov
xchg
mov
(bad)
pop
pop
add
rol
push
mov
jne
jmp
xchg
jno
call
int
push
cmp
ret
push
dec
adc
(bad)
ins
inc
xlat
xchg
push
xor
and
rcr
addr16
jmp
shl
lods
fcom
pop
sub
jb
lock
fmulp
gs
cdq
ins
data16
cli
loope
out
cli
cmp
push
(bad)
pop
cmovb
and
xchg
cmp
jp
in
fbld
dec
jmp
xor
rcr
mov
fild
in
mov
mov
or
retf
test
mov
push
push
or
sbb
or
mov
leave
inc
and
test
mov
ret
cmp
pop
pushf
and
fwait
lgs
adc
mov
ret
cld
scas
dec
xor
test
and
mov
sub
sbb
add
ret
mov
dec
dec
push
mov
cmp
pop
clc
fild
sub
jno
jecxz
push
sbb
out
pusha
aaa
cmp
icebp
into
jl
jae
pop
and
cmp
aam
mov
pop
call
neg
sbb
adc
xchg
das
push
jge
cmps
mov
sbb
(bad)
scas
adc
lock
retf
add
iret
ins
ror
mov
sbb
(bad)
(bad)
mov
cld
ret
cs
pop
jl
mov
mov
cdq
push
sti
add
aas
outs
mov
and
loop
pop
mov
or
cs
jb
mov
and
(bad)
jg
(bad)
fisub
dec
sbb
fsubr
inc
mov
mov
repz
sbb
les
cmp
xchg
test
xchg
es
or
jmp
lock
xor
mov
ret
stos
lods
fs
add
cld
sbb
mov
xchg
dec
jne
mov
inc
or
add
sub
das
inc
leave
and
aam
fisttp
out
cld
mov
push
mov
mov
pop
xor
jae
or
aad
push
cmp
aaa
sbb
inc
cmp
(bad)
ins
gs
mov
sbb
and
mov
addr16
inc
outs
and
push
lods
mov
scas
cmps
jp
sub
cmp
add
xor
shl
ss
jge
pop
fistp
fistp
cmp
sbb
movs
jle
mov
iret
inc
sbb
shl
mov
fwait
imul
lds
mov
je
clc
jge
sbb
imul
push
addr16
enter
mov
mov
cmps
js
mov
gs
cmp
imul
aam
sub
xchg
cli
(bad)
div
jg
(bad)
lods
dec
push
outs
test
aas
nop
icebp
test
push
push
bts
(bad)
pop
(bad)
out
stos
loopne
addr16
(bad)
pop
inc
mov
call
call
dec
mov
push
jbe
mov
xor
pop
fcom
(bad)
cdq
sbb
mov
adc
and
(bad)
mov
sti
add
clc
(bad)
jne
dec
je
jo
jnp
push
enter
mov
adc
call
mul
xchg
rol
and
dec
or
aad
fst
add
jmp
mov
push
mov
mov
das
xor
addr16
pop
out
and
jp
xor
idiv
and
adc
out
push
mov
xor
mov
jecxz
lds
cmp
jle
aaa
inc
fstp
stc
lods
icebp
fwait
test
enter
aad
mov
ja
xchg
imul
out
pop
and
push
and
rdtsc
sahf
test
stos
push
into
and
add
fcom
xlat
push
or
lea
cmps
imul
or
jno
stc
cmp
nop
lahf
push
jmp
repnz
xor
pusha
(bad)
push
push
sub
imul
adc
test
je
fdivr
(bad)
adc
add
add
pusha
out
push
ret
jecxz
loop
inc
and
pop
lods
(bad)
and
movs
pop
push
out
xor
lds
test
sbb
imul
int3
clc
loopne
scas
repnz
(bad)
and
push
add
or
add
adc
sbb
cli
ficomp
mov
cmp
xor
push
lahf
pop
lods
rcl
icebp
shl
sbb
int3
cmps
sub
sbb
test
xor
loopne
shr
jae
inc
jno
jmp
cld
or
xchg
xor
jp
cmps
arpl
dec
mov
add
or
out
dec
xor
xchg
dec
lods
adc
mov
mov
push
fs
int
mov
add
imul
sbb
mov
xor
(bad)
(bad)
adc
push
add
sbb
mov
xchg
test
add
cmc
or
xchg
fcom
jg
push
int
push
jle
sbb
inc
add
mov
jecxz
add
imul
or
jg
mov
scas
ret
or
xor
loopne
push
sub
cmp
mov
cmp
cmp
pop
ins
popa
scas
dec
ret
loopne
movs
jg
mov
(bad)
out
push
setle
ror
jmp
inc
push
ret
shl
rcr
jnp
aam
pop
or
not
pop
stos
mov
outs
aas
mov
sub
mov
data16
(bad)
lea
(bad)
es
jns
scas
test
jl
xchg
inc
mov
shl
mov
(bad)
sbb
pop
pop
mov
dec
hlt
xchg
dec
pop
test
xor
call
cld
dec
jmp
hlt
inc
dec
inc
cmp
push
scas
lods
dec
inc
and
cli
mov
test
xor
xor
push
pop
mov
jp
int
loop
and
das
xor
jae
ins
sub
and
mov
ins
aad
pop
dec
sub
inc
or
xlat
leave
fstp
mov
cmps
stc
ins
leave
sbb
ret
mov
int
aad
xchg
lods
xchg
cmp
(bad)
push
add
fild
dec
xchg
(bad)
xor
outs
aaa
out
add
cmp
jb
jle
test
xor
into
xchg
(bad)
lahf
push
int3
xor
mov
inc
add
daa
and
jne
and
jbe
gs
sbb
rcl
jo
jbe
cmp
daa
iret
and
hlt
enter
outs
sbb
jb
leave
lods
jge
push
aas
rol
or
xor
inc
gs
cmp
sub
sbb
sub
and
inc
cmc
inc
and
pop
jo
push
in
mov
push
je
aas
jmp
or
js
pop
cld
jb
push
xlat
movs
fdivr
mov
push
icebp
retf
cwde
adc
rcr
cmp
not
mov
adc
jmp
hlt
or
adc
stos
test
jge
push
cmc
xor
popf
ss
rcl
fld
add
stos
mov
retf
xchg
in
hlt
arpl
shr
mov
and
cmp
add
pop
push
loope
and
loopne
jae
scas
inc
adc
inc
xor
fisubr
adc
fld
pop
mov
pop
std
mov
xlat
jo
mov
mov
les
retf
ss
je
ds
sti
inc
(bad)
push
adc
out
inc
inc
inc
test
out
lahf
push
pop
cld
jmp
jbe
jmp
hlt
fisttp
pop
rcr
and
das
xchg
push
lock
mov
sbb
mov
adc
jae
pop
stos
xchg
jmp
(bad)
mov
or
xor
jle
jg
or
(bad)
jg
add
ror
jmp
push
imul
add
shr
sbb
pop
test
xor
mov
sub
mov
pmulhuw
mov
int
adc
xchg
cli
repnz
int
mov
test
mov
inc
pusha
mov
add
push
scas
mov
jbe
add
iret
mov
mov
pop
les
lods
jecxz
xor
in
call
in
ret
fst
ret
add
fucomip
das
cs
xchg
test
test
mov
jns
dec
sub
retf
add
push
neg
inc
sbb
sbb
fst
addr16
jg
add
outs
test
mov
cmp
std
inc
iret
mov
inc
addr16
pop
mov
movs
ins
mov
mov
or
jnp
mov
xchg
push
cs
xchg
cmp
imul
fdiv
jecxz
or
ins
lea
pusha
lods
xor
rol
dec
sub
sub
and
mov
cs
popa
sub
dec
sub
mov
iret
cmps
movs
push
test
movs
test
cmp
and
loopne
mov
push
sbb
aas
ficomp
mov
adc
rcl
mov
and
mov
imul
hlt
not
cmp
jmp
fisub
mov
xor
rol
sti
mov
sub
jecxz
pop
cmp
bound
int3
xlat
(bad)
into
imul
fcmovnb
hlt
(bad)
outs
dec
mov
adc
aaa
stos
mov
mov
and
fdivp
mov
sbb
mov
in
jmp
adc
cmps
call
pop
jnp
js
jb
jno
inc
(bad)
imul
push
inc
(bad)
mov
fadd
stos
fwait
push
inc
lahf
or
jbe
scas
scas
repnz
or
mov
fsub
mov
mov
push
mov
fwait
sbb
xor
and
dec
mov
inc
sub
lahf
push
ret
mov
jp
pmovmskb
(bad)
jmp
pop
inc
push
cmp
cdq
int
sbb
jp
scas
bound
imul
shl
aam
std
cmp
mov
and
mov
test
fs
xor
addr16
inc
push
adc
xor
int
add
mov
mov
dec
cmp
push
aaa
in
push
addr16
vcvttpd2dq
test
dec
sbb
ja
push
mov
push
popa
and
call
pusha
mov
(bad)
pop
pop
ror
aaa
aam
outs
sub
and
lock
scas
sub
mov
sahf
xor
ret
xchg
sbb
stos
pop
push
push
int3
mov
(bad)
sahf
push
das
or
call
movs
outs
cmp
xchg
or
call
fs
jecxz
icebp
test
mov
(bad)
shr
fs
and
cmp
cld
dec
xchg
dec
stc
(bad)
or
or
test
out
mov
push
jle
cmp
inc
retf
jb
arpl
jo
idiv
test
lahf
and
cmp
out
push
adc
xchg
push
adc
push
jno
movs
in
out
lahf
outs
jo
mov
add
dec
(bad)
pop
and
dec
push
jg
gs
add
inc
or
repz
out
push
mov
xchg
lahf
pop
xor
test
xor
data16
jmp
mov
pop
push
mov
dec
mov
mov
mov
js
push
adc
jno
mov
mov
add
pop
xchg
in
or
adc
or
in
adc
xchg
sub
mov
fist
and
xchg
int3
sti
inc
sub
and
out
cwde
push
pop
xor
rol
aad
or
fstp
jb
imul
dec
and
adc
cmp
je
outs
enter
push
aad
pop
cmp
jp
das
and
imul
sub
cmps
or
add
ins
jns
xchg
ret
add
inc
dec
mov
xchg
inc
sub
dec
inc
adc
jbe
mov
mov
push
aas
out
loop
dec
arpl
mov
push
mov
jecxz
movs
push
call
or
inc
fstp
outs
ret
adc
xchg
mov
mov
dec
xchg
loopne
jno
aam
sti
xor
push
or
scas
imul
xchg
pop
ja
lahf
aam
mov
jmp
inc
in
add
gs
repnz
outs
fbstp
out
adc
sbb
pop
aam
push
and
rcl
addr16
dec
jg
scas
mov
fild
enter
ret
sti
sbb
lods
push
les
(bad)
or
and
lods
mov
ins
pop
and
iret
(bad)
repz
mov
imul
push
into
xchg
stos
loopne
ss
and
dec
mov
jno
add
inc
add
dec
push
je
or
mov
cli
out
jne
pop
rcl
add
mov
les
inc
jns
shl
sbb
adc
test
push
call
clc
cmp
loopne
adc
mov
xchg
cmp
dec
pop
push
psrlw
inc
inc
cmp
ds
mov
gs
test
outs
pop
cmp
dec
or
cdq
push
ins
push
sahf
ins
call
call
data16
cmp
addr16
int
or
rcr
push
fdivr
jb
xchg
in
add
nop
inc
mov
repnz
jns
jo
mov
iret
fmulp
push
mov
add
movs
add
cwde
dec
enter
jb
adc
sbb
cmp
jmp
and
inc
dec
inc
inc
adc
dec
daa
loop
and
enter
mov
fwait
ins
in
lea
jo
out
fucomi
add
and
inc
ins
scas
sub
sub
aad
out
mov
int
daa
jecxz
out
xor
push
cmp
jae
jmp
inc
mov
jp
int
(bad)
push
test
xchg
daa
xor
ret
je
addr16
jno
inc
retf
lock
lds
sub
jle
push
sbb
pop
inc
xor
add
mov
jle
mov
ss
push
test
cmp
adc
gs
adc
ret
sub
mov
mov
lds
fisttp
popa
stos
lea
and
sbb
and
pop
add
int3
mov
mov
jmp
lods
movs
add
xor
pushf
cdq
push
repnz
sar
inc
aam
das
out
push
ds
mov
mov
push
jns
push
dec
test
ins
inc
(bad)
lods
mov
(bad)
inc
fild
mov
mov
xor
inc
mov
cmps
mov
call
cmp
xchg
call
movs
mov
int
lods
cmps
enter
push
out
mov
mov
cmp
jecxz
in
mov
pop
push
mov
ss
mov
xor
ja
and
sub
xor
mov
push
xchg
inc
movs
sahf
fld
mov
in
ret
in
in
sysret
cwde
push
and
adc
gs
jp
mov
pop
outs
xor
push
cmp
nop
jb
popf
mov
cmp
retf
sbb
add
scas
aaa
lods
jp
mov
xlat
pop
xor
daa
sahf
addr16
adc
and
ins
rol
out
movs
xor
jmp
xchg
cmp
leave
xor
fbld
sub
cmp
dec
and
mov
or
mov
cdq
pop
mov
push
push
outs
iret
ins
mov
adc
and
bswap
mov
mov
and
sub
sub
sbb
jbe
push
mov
push
js
add
cmp
inc
adc
mov
pusha
cmp
pop
sbb
lods
mov
fs
test
mov
adc
add
mov
push
in
cmps
call
in
push
aaa
jmp
jae
mov
mov
sub
ins
imul
rcr
ror
mov
(bad)
and
(bad)
fwait
test
pop
pop
outs
sbb
jp
xchg
scas
or
aad
lea
enter
sbb
jb
pop
and
fcom
rol
mov
xchg
std
(bad)
popa
mov
inc
ins
push
inc
in
popa
xlat
mov
cmp
test
mov
xor
mov
mov
stc
sbb
iret
sub
cmps
xor
aaa
in
inc
sbb
pop
mov
ins
movs
mov
jmp
push
outs
cmp
sar
jno
sbb
sahf
push
bound
sub
inc
inc
call
shl
and
pop
test
in
sbb
in
iret
les
jge
cmp
dec
cdq
jecxz
add
xchg
jne
in
(bad)
cmp
hlt
add
int3
adc
lahf
in
mov
inc
jns
adc
adc
nop
adc
jmp
int
popf
dec
stos
xor
out
call
sbb
rol
movs
lods
add
cmp
mov
pushf
retf
int
repnz
pop
(bad)
fstp
cmp
pop
stc
fwait
xor
mov
and
jnp
mov
and
call
jge
(bad)
push
mov
jno
xchg
push
hlt
ss
adc
mov
scas
sar
leave
jne
cmp
in
stos
(bad)
jmp
sbb
fnsave
in
test
aam
loope
add
inc
ret
xor
(bad)
lahf
mov
sbb
mov
(bad)
pushf
jmp
push
lods
rep
out
mov
xor
sbb
push
rcl
and
aad
mov
sbb
dec
stos
inc
add
or
cmp
mov
ss
or
xchg
in
das
cmps
test
dec
mov
unpcklps
scas
stos
ins
jp
sbb
sar
or
mov
arpl
cmp
mov
mov
es
je
enter
or
jno
popa
sbb
sub
xchg
and
mov
iret
pop
(bad)
push
cmp
pop
mov
scas
sbb
aam
adc
data16
add
aam
inc
cli
les
xor
ss
add
sbb
sbb
sar
xor
pop
sbb
mov
enter
inc
mov
sub
setle
mov
xchg
hlt
xlat
addr16
in
std
int
lahf
shr
pop
sbb
sti
mov
sbb
or
in
mov
push
fild
mov
in
pop
xchg
pop
xor
sub
pop
out
mov
cli
push
mov
(bad)
xchg
fdivp
clc
lock
xlat
xchg
adc
arpl
mov
retf
jae
ucomiss
cmp
sbb
xchg
shr
sahf
sahf
pop
pop
(bad)
sbb
inc
sbb
arpl
lds
jnp
mov
or
clc
out
mov
retf
scas
push
mov
push
pusha
fidiv
arpl
lods
and
and
das
sub
cmp
cmp
hlt
sub
push
int
inc
es
mov
inc
or
(bad)
xor
pushf
popa
cmp
push
int3
pusha
fidivr
das
sub
and
mov
mov
ss
das
adc
mov
mov
mov
jae
fld
cmp
sbb
push
add
ficom
push
dec
sub
cmp
ret
data16
lds
push
imul
es
inc
inc
test
mov
sub
sub
mov
mov
int3
(bad)
hlt
mov
fsub
sbb
loop
hlt
sbb
dec
nop
adc
inc
xchg
fist
add
mov
and
test
pop
add
xchg
fwait
mov
mov
scas
jp
retf
pop
jbe
add
mov
dec
xor
pusha
cli
sub
xchg
xor
in
push
xor
fcmovnu
sahf
ss
or
das
pop
pusha
aaa
sbb
aas
pop
xor
fnsave
retf
(bad)
xchg
fistp
arpl
push
or
mov
les
test
pop
jp
(bad)
jmp
sub
lods
ins
out
cmp
out
fimul
fcmovnbe
ja
or
dec
inc
or
aas
push
out
jle
and
clc
pop
dec
test
pop
je
cmc
push
leave
jbe
repz
push
rcl
xor
inc
popa
mov
out
dec
fst
mov
sbb
and
mov
pop
popf
out
push
faddp
push
jcxz
ja
das
pop
mov
push
cmps
dec
mov
lods
adc
int3
add
into
jp
ins
dec
fst
sbb
dec
in
(bad)
sbb
aaa
cmp
lock
outs
popf
fsubr
push
mov
xchg
je
jno
and
dec
mov
fs
mov
shl
sbb
pop
div
jns
ret
xchg
dec
and
xchg
add
jle
test
push
xor
inc
or
loop
in
out
call
int3
mov
cli
sbb
lds
jne
cmps
push
dec
ds
cs
jmp
loope
test
ja
idiv
std
movs
les
pop
push
addr16
loopne
call
pop
adc
loop
or
mov
dec
sub
dec
sbb
mov
data16
nop
daa
int
out
fwait
xchg
pop
or
ds
leave
xor
repnz
into
add
lahf
jno
scas
xchg
lods
ss
nop
gs
dec
adc
cmp
cmps
xchg
cmp
jmp
push
pop
mov
dec
pop
test
inc
push
int
stos
into
and
nop
in
(bad)
xlat
mov
jbe
inc
adc
nop
push
jle
add
mov
iret
jge
mov
outs
outs
and
fsubp
ss
call
cli
daa
cs
nop
test
ds
xor
ins
dec
dec
call
out
call
ins
and
aas
sbb
inc
ret
outs
mov
imul
dec
lahf
mov
call
xor
outs
jmp
xor
adc
sbb
sti
cmp
or
xchg
add
jne
pushf
shr
test
js
push
out
inc
push
adc
out
xor
mov
cmp
dec
jnp
ret
das
lea
push
daa
adc
das
loopne
std
cdq
push
xchg
setnp
fcmovbe
dec
cmps
sub
lock
cmps
bound
jle
dec
cmp
and
in
dec
jbe
sub
das
push
popf
in
sbb
or
xchg
mov
lea
or
cmp
je
mov
divps
repnz
sub
jo
pop
or
pop
adc
iret
loop
cwde
lea
adc
cmp
int3
fwait
iret
pop
in
cmc
pop
lea
lods
ins
cli
leave
(bad)
xchg
inc
js
xchg
xor
fsubr
frstor
and
bound
sub
cs
dec
push
and
pop
mov
dec
(bad)
pop
cmp
cmp
popf
sbb
in
not
loop
jge
push
mov
add
lahf
lock
hlt
and
gs
cmp
fisttp
outs
push
mov
mov
and
dec
pushf
imul
jns
addr16
cmp
outs
mov
stc
arpl
imul
jb
push
adc
sar
int
push
daa
jge
int3
push
jae
pop
out
inc
inc
adc
cmp
aaa
mov
xchg
mov
test
mov
and
out
xlat
jbe
push
ret
pusha
sbb
xchg
rcl
xor
pop
in
xor
xlat
movs
lock
mov
sbb
daa
cs
into
xchg
xchg
sahf
popa
add
mov
cdq
xchg
sbb
bound
daa
xor
or
shl
or
sbb
inc
xchg
neg
movs
push
(bad)
mov
ror
push
sub
add
aam
jp
ror
jecxz
pusha
xor
test
push
add
xchg
add
sub
and
push
mov
cmp
nop
loopne
test
cld
adc
fcmovnu
(bad)
imul
out
popa
cmp
es
jmp
and
pop
or
jnp
jae
mov
out
push
pop
fwait
cmp
std
cmp
jno
pop
push
add
adc
mov
dec
push
inc
mov
dec
adc
mov
mov
call
(bad)
push
int3
dec
imul
jno
sub
jge
sub
neg
std
push
pop
sub
push
dec
outs
jle
sbb
inc
xor
inc
scas
mov
push
cmp
mov
push
pop
push
sahf
pushf
repz
fiadd
repnz
in
scas
mov
addr16
sbb
pop
cmp
ret
scas
icebp
mov
dec
shr
push
or
outs
(bad)
pop
adc
push
fsubrp
out
xor
dec
(bad)
shl
inc
out
sbb
inc
pop
ret
or
int
or
daa
push
frstor
lock
adc
lods
outs
mov
xchg
shl
scas
sub
inc
and
sar
and
and
sub
stos
jmp
cmc
push
xchg
adc
lock
and
cmp
outs
imul
(bad)
nop
add
popf
test
or
movs
mov
inc
mov
cmp
rol
jge
pop
sub
imul
ja
retf
jmp
cld
add
xor
popa
stos
out
icebp
loop
adc
xchg
dec
pop
mov
aaa
inc
ja
jmp
mul
lock
xchg
dec
or
pop
sbb
popf
jne
fbld
dec
fwait
add
dec
push
sub
repnz
pop
aad
dec
nop
mov
rcr
xor
(bad)
adc
cli
out
call
and
push
dec
fs
or
into
xchg
les
mov
jmp
rol
jbe
movs
movs
jne
pop
out
repnz
jecxz
mov
test
cwde
xlat
and
js
dec
jl
sub
pop
jns
int
push
cmp
stos
sub
ret
dec
sbb
inc
pop
xor
scas
adc
lods
pop
imul
jge
xchg
and
shl
pop
push
mov
and
ss
mov
out
cmp
mov
iret
sub
adc
lods
test
sar
and
sbb
push
and
dec
fstp
fldenv
push
in
sbb
int3
add
dec
or
and
leave
mov
xchg
jmp
mov
aam
in
cmps
jle
xlat
rep
ret
cli
adc
mov
daa
add
dec
sub
xchg
xchg
xchg
popf
pop
lods
push
loopne
mov
rol
retf
sbb
push
fimul
push
repnz
cmp
mov
(bad)
xor
push
shl
sub
cmps
cwde
mov
add
in
mov
fsubr
xchg
mov
adc
dec
sub
fs
rcr
addr16
xor
sub
(bad)
adc
inc
(bad)
adc
or
mov
inc
jae
cdq
pop
(bad)
fidiv
popa
cmps
mov
sbb
arpl
cmp
adc
mov
adc
jae
xchg
adc
pop
add
or
xor
push
pop
xor
imul
bound
pop
daa
add
adc
and
ret
sbb
pop
nop
push
aas
sbb
mov
adc
and
mov
imul
add
push
dec
aaa
xchg
xchg
and
addr16
pop
adc
push
mov
jle
retf
or
rol
or
pusha
xor
rcl
icebp
retf
push
fs
mov
fist
pop
fbstp
and
mov
in
sbb
mov
adc
sbb
jb
pop
inc
pushf
(bad)
int
retf
inc
mov
hlt
mov
adc
mov
add
xchg
js
sub
cmps
mov
or
jmp
sar
ror
loope
in
or
into
mov
xchg
test
mov
xchg
scas
pop
(bad)
jp
or
call
add
jbe
std
jnp
sub
mov
scas
(bad)
das
pop
mov
cmp
and
inc
pop
sahf
lods
call
lock
ffree
mov
out
cmps
ds
pushf
loop
(bad)
xchg
and
fldenv
xor
(bad)
mov
pusha
into
daa
gs
cmp
sub
push
jo
pop
sahf
add
jne
pop
add
push
test
dec
mov
loop
mov
sub
imul
ror
gs
lahf
aas
jns
sar
aas
push
or
xlat
push
loopne
shl
jmp
ja
(bad)
call
sahf
push
pop
inc
inc
das
in
inc
je
int
jecxz
pop
adc
xchg
xlat
les
dec
dec
mov
loop
fmul
fild
jmp
jmp
and
pop
xlat
call
mov
imul
xor
clc
pop
jl
inc
mov
outs
inc
outs
inc
icebp
sub
push
fwait
cmp
fs
cmp
or
push
mov
(bad)
mov
push
or
hlt
add
cmp
add
aam
lea
ss
mov
or
iret
xchg
sbb
imul
pop
loopne
fcmovnb
mov
push
push
out
cmp
sub
arpl
mov
cwde
jle
mov
sti
add
lods
lock
adc
rcl
dec
aaa
mov
(bad)
test
sbb
je
push
sbb
stos
xchg
repnz
scas
dec
mov
repnz
xchg
das
pop
pop
mov
push
mov
push
adc
adc
sbb
ss
mov
popf
and
push
out
mov
shr
ret
mov
jmp
(bad)
aas
mov
jmp
adc
fstp
mov
cli
xchg
arpl
adc
movs
ss
sar
push
sbb
aaa
push
sub
sbb
push
sbb
es
mov
mov
nop
lds
xchg
rcr
repz
mov
push
sub
fiadd
enter
adc
xor
test
adc
cdq
int
or
dec
xor
loop
mov
xor
adc
cdq
lods
pop
call
mov
jecxz
stc
push
(bad)
loopne
sub
sub
xchg
lahf
xchg
movs
es
push
inc
sbb
pop
and
xchg
sub
leave
jbe
retf
(bad)
mov
(bad)
push
in
ss
arpl
adc
adc
push
fisttp
or
jo
adc
and
aad
xchg
iret
or
fdiv
adc
add
dec
mov
pop
loop
jb
loope
adc
or
repz
fs
call
ins
push
cs
pop
mov
and
sub
nop
push
jle
push
push
jae
or
mov
xchg
shl
call
test
loop
dec
ret
sbb
xchg
stc
lahf
repz
loope
adc
loope
sub
and
xor
fdivr
cld
mov
mov
fadd
and
and
cmc
(bad)
sti
jecxz
and
call
and
xor
mul
push
(bad)
sub
test
inc
xchg
cmp
mov
dec
push
pop
inc
ret
out
cmp
cmps
cmps
out
movs
jmp
scas
cdq
iret
mov
sar
sti
pop
ror
push
push
mov
into
aam
jae
mov
cli
and
sbb
dec
xchg
imul
jae
enter
adc
sbb
pusha
mov
dec
cdq
les
jno
fst
sub
pushf
js
dec
xchg
push
lods
inc
xchg
mov
(bad)
mov
lods
or
dec
retf
sbb
mov
aad
and
jo
movs
sub
xchg
mov
mov
jnp
loope
dec
xchg
(bad)
cld
pop
addr16
xor
je
pop
jo
push
test
and
sbb
cwde
dec
or
inc
ror
add
sbb
mov
jge
cld
xchg
iret
mov
inc
ja
(bad)
push
jmp
mov
cwde
fld
shl
stc
mov
adc
xlat
in
dec
test
jo
addr16
das
sbb
xlat
and
xchg
cmps
sbb
jle
repz
pop
pop
jb
leave
mov
dec
jmp
pop
cdq
pusha
dec
jecxz
fld
push
cwde
dec
pop
mov
jne
sbb
inc
das
fdivr
xchg
sbb
jae
dec
pop
aad
fidiv
cmp
leave
pop
icebp
dec
cmp
aam
repnz
jmp
call
movs
xor
hlt
push
shl
adc
push
inc
mov
jecxz
stc
xchg
std
mov
daa
sbb
pop
popa
jbe
pop
mov
xor
xchg
imul
sahf
js
mov
and
xor
lods
sub
jge
or
dec
das
xor
fyl2x
xlat
pop
push
outs
dec
dec
lahf
jmp
gs
push
xor
mov
jno
xchg
popf
mov
inc
imul
jle
mov
daa
add
and
cmp
dec
and
push
pop
popf
jb
sbb
adc
or
jo
fst
adc
jge
pop
jno
dec
mov
inc
adc
fcomp
push
mov
and
scas
push
mov
pop
pop
push
leave
jp
es
mov
gs
ret
jmp
(bad)
leave
cld
inc
fcomp
sbb
jmp
int
outs
mov
dec
std
addr16
jmp
arpl
aad
sub
mov
cmp
stc
test
mov
xchg
mov
sub
jns
test
fcomi
ret
ds
pop
xchg
adc
popf
fisttp
daa
xlat
mov
mov
nop
dec
xor
pop
jmp
sub
aaa
fnstenv
retf
sti
sbb
bt
scas
retf
cs
test
jae
add
je
cwde
les
lds
adc
add
or
add
mov
adc
daa
ror
in
outs
aam
pop
sbb
xor
jl
cmp
push
cmp
adc
dec
out
add
icebp
in
mov
push
shr
sbb
ret
adc
lea
cmps
sub
mov
in
stos
pop
mov
adc
or
jp
xchg
ds
lods
stos
mov
sbb
fs
sahf
mov
xchg
xor
scas
add
rol
jge
jg
and
xchg
inc
aaa
adc
lahf
or
cwde
inc
scas
ds
cmp
sub
jae
cmp
enter
aas
push
inc
push
and
shr
out
cwde
gs
push
or
shl
pop
les
cmp
xor
mov
je
aas
popf
cdq
out
call
test
stos
in
int3
gs
daa
fs
daa
sbb
aaa
pop
mov
push
lods
mov
arpl
repz
mov
mov
shr
and
aaa
cmp
dec
das
push
es
ds
movs
stos
sbb
(bad)
cmp
pop
mov
pop
dec
push
int
push
mov
aaa
bound
inc
cmc
sbb
push
or
pop
ds
xchg
cmp
push
cmp
mov
sbb
cmp
dec
ja
add
adc
cmp
fnsave
add
xor
xchg
outs
cmp
cmp
add
xlat
pop
mov
dec
test
and
cmp
sar
push
xor
in
std
jo
in
call
in
fstp
aaa
scas
mov
sbb
xchg
mov
or
cdq
dec
lahf
cwde
test
mov
pushf
mov
dec
fdivr
repnz
scas
inc
in
pop
mov
cmp
add
xchg
add
ficom
sub
and
mov
rcl
add
add
add
add
add
jbe
xor
xor
add
add
add
add
jge
add
jle
add
add
scas
add
and
jb
outs
addr16
add
add
add
adc
add
and
dec
inc
add
add
daa
add
and
outs
bound
add
mov
add
lods
add
add
push
push
add
add
add
add
add
mov
or
add
add
add
add
add
add
add
inc
add
ja
add
fld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
das
add
add
add
add
add
add
add
add
das
add
add
das
add
add
das
add
add
das
add
add
add
pushf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
pop
add
add
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jbe
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
das
add
add
jb
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
pop
add
aaa
add
ds
inc
add
dec
add
pop
add
addr16
je
das
add
add
mov
mov
das
add
add
add
add
add
fld
in
das
add
add
add
sti
add
add
das
add
add
push
das
add
add
push
das
add
add
push
xor
push
xor
push
pop
push
push
add
pop
push
push
add
add
add
add
add
add
add
add
push
xor
push
xor
push
xor
push
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
inc
add
add
pop
inc
add
add
pop
inc
add
add
or
add
add
inc
add
add
add
das
add
add
add
add
das
add
add
das
add
add
add
add
add
or
or
add
or
or
add
or
or
add
or
or
add
add
sub
push
add
loopne
push
add
or
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
or
add
or
add
cmp
push
add
lahf
or
or
add
add
or
or
add
or
or
add
or
or
add
or
or
add
add
cmp
push
add
cmp
push
add
cmp
push
add
js
push
add
add
add
lods
or
push
add
add
or
or
add
or
or
add
or
or
add
or
or
add
cmp
push
add
or
or
add
or
or
add
or
or
add
cmp
push
add
cmp
push
add
cmp
push
add
cmp
push
add
cmp
push
add
add
add
add
add
or
add
add
or
or
add
or
inc
or
pop
or
jl
and
test
push
add
or
fimul
jecxz
test
push
add
or
test
push
test
push
add
push
test
push
add
test
push
add
push
das
add
add
das
add
add
das
add
add
das
add
add
xchg
push
push
add
add
add
push
xchg
push
push
add
push
xchg
push
push
add
push
pop
clts
add
movaps
push
add
sub
push
add
sub
push
add
sub
push
add
sub
push
add
add
add
add
add
add
comiss
push
add
pmulhw
push
add
psubw
push
add
adc
femms
add
adc
femms
add
adc
femms
add
stc
femms
add
stc
femms
add
stc
clts
add
in
push
add
adc
add
add
add
add
add
adc
push
add
adc
push
add
adc
push
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
add
das
add
add
das
add
add
adc
add
add
adc
add
add
adc
add
add
adc
or
cmp
and
or
dec
adc
or
pop
adc
or
ins
adc
adc
adc
add
add
add
add
add
add
add
add
add
adc
(bad)
adc
adc
add
adc
add
add
add
add
adc
adc
add
add
add
adc
adc
add
add
add
(bad)
adc
ltr
add
add
add
adc
adc
sbb
add
adc
xchg
adc
adc
add
adc
add
add
xor
add
add
adc
adc
add
adc
add
add
add
add
add
adc
adc
add
add
add
(bad)
adc
add
add
add
(bad)
adc
add
add
add
jbe
push
add
add
add
add
pop
add
add
add
adc
adc
add
adc
adc
add
add
add
(bad)
adc
add
adc
adc
add
add
add
(bad)
adc
add
add
add
(bad)
adc
add
add
add
cmps
add
mov
(bad)
adc
add
add
add
adc
adc
add
add
add
adc
adc
add
add
add
mov
mov
add
adc
mov
retf
add
adc
mov
int3
add
adc
mov
rol
add
adc
mov
add
add
adc
mov
add
add
adc
mov
add
add
push
add
icebp
add
add
add
xor
add
add
push
add
icebp
add
add
add
add
add
(bad)
adc
add
push
add
icebp
add
add
add
push
add
icebp
add
add
add
add
add
push
xlat
push
xor
add
push
add
icebp
add
add
add
add
add
pop
xlat
push
push
add
add
add
adc
adc
xlat
push
xor
add
add
add
pop
xlat
push
or
ret
add
add
add
add
pop
xlat
push
push
add
add
add
xlat
push
xor
add
pop
xlat
push
xor
add
add
add
(bad)
adc
add
add
add
xlat
push
adc
int
inc
add
add
add
add
add
add
xlat
push
xor
add
add
add
pop
xlat
push
and
add
add
add
pop
xlat
push
and
add
add
add
pop
xlat
push
xor
add
add
add
pop
add
or
loope
add
add
add
xlat
push
sbb
add
add
add
sbb
push
sbb
add
add
add
xlat
push
or
out
add
add
xlat
push
xor
add
add
add
xlat
push
or
test
add
jp
(bad)
adc
add
add
add
or
sahf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
push
sbb
add
add
add
sbb
adc
add
add
add
add
add
add
add
add
add
add
sbb
adc
add
sbb
adc
add
sbb
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
adc
add
add
add
add
add
add
add
add
sbb
adc
add
add
add
(bad)
adc
add
add
add
sbb
adc
add
sbb
adc
add
sbb
adc
add
add
add
sbb
add
add
add
add
add
sbb
adc
add
add
add
sbb
adc
cmp
ins
add
add
add
add
add
add
add
or
cmp
add
add
add
xchg
add
adc
mov
add
xchg
add
sbb
add
add
scas
add
sbb
add
add
scas
add
sbb
add
add
add
add
sbb
adc
add
sbb
adc
add
add
add
(bad)
adc
add
mov
add
add
mov
add
add
or
or
sbb
add
add
add
add
sbb
add
add
add
sbb
xchg
add
add
add
add
sbb
cwde
add
add
add
add
(bad)
adc
add
add
add
(bad)
adc
add
add
add
add
add
add
sbb
mov
add
add
add
sbb
mov
add
add
push
(bad)
adc
add
add
add
add
add
add
adc
inc
push
add
xor
add
add
add
add
xor
add
add
add
add
add
add
adc
scas
push
add
xor
add
add
add
push
add
xor
add
add
add
push
add
xor
add
add
add
add
add
add
adc
aaa
pop
add
xor
add
add
add
(bad)
adc
add
add
add
add
xor
add
add
add
add
add
add
adc
mov
add
add
xor
call
add
and
add
sub
inc
add
dec
and
add
jo
inc
add
push
dec
and
push
adc
add
jns
js
push
sbb
mov
add
and
add
add
nop
add
and
nop
add
add
add
add
ja
add
add
and
and
and
add
add
inc
add
add
mov
and
add
add
add
and
add
add
and
add
add
and
xor
push
and
jne
mov
and
mov
add
and
std
and
pop
es
es
add
inc
add
add
add
add
es
add
es
add
add
add
daa
mov
daa
add
add
inc
add
add
add
add
daa
add
add
daa
inc
add
add
add
sub
sub
add
add
add
add
sub
sub
add
add
sub
adc
sub
add
mov
sub
add
add
add
add
sub
sub
add
add
sub
adc
cmp
add
mov
sub
add
add
add
sub
sub
sub
add
add
sub
adc
dec
sub
sub
sub
add
add
add
sub
sub
sub
add
add
sub
add
add
add
add
add
add
add
sub
add
add
sub
add
push
dec
and
push
sub
shr
in
add
repz
in
add
adc
xor
in
add
pop
xor
add
jnp
in
add
popf
xor
add
mov
and
in
add
add
in
add
and
add
add
imul
mov
in
add
lods
xor
add
add
xor
xor
icebp
xor
add
add
xor
add
push
dec
and
push
and
add
mov
ins
add
stos
xor
push
or
ins
add
out
xor
add
mov
add
xor
add
add
xor
add
add
xor
inc
add
jne
xor
xor
add
add
add
inc
add
add
add
add
cmp
add
add
cmp
add
add
add
cmp
add
add
add
add
add
add
add
add
cmp
add
add
cmp
add
add
add
cmp
add
add
add
add
add
add
cmp
add
add
cmp
add
add
cmp
add
add
sub
add
add
add
add
add
jne
xor
xchg
cmp
add
mov
add
xlat
cmp
add
stc
cmp
cmp
add
cmp
add
add
lds
adc
mov
add
add
aas
jne
xor
cmc
aas
jne
xor
pop
inc
add
add
lock
add
add
inc
jne
xor
jecxz
repz
add
add
clc
add
scas
inc
add
rol
add
repz
adc
add
push
inc
add
jns
ins
add
add
push
add
add
push
add
add
add
add
inc
inc
add
add
dec
inc
add
add
dec
mov
dec
add
add
add
dec
repz
add
repz
add
add
add
dec
repz
push
dec
and
push
add
movs
dec
and
push
add
and
push
sub
and
push
or
and
push
sub
loope
imul
nop
add
add
add
add
dec
push
add
add
dec
push
add
add
add
add
add
add
add
add
add
add
xor
dec
cmp
add
add
inc
add
add
inc
add
inc
add
jne
add
xlat
push
add
dec
add
dec
add
push
add
push
add
jo
add
in
add
add
push
lahf
add
movs
add
cmps
add
lock
add
add
push
movs
add
mov
add
andnps
push
jne
add
push
push
mov
and
push
xor
mov
push
adc
mov
push
cmp
mov
push
sbb
add
mov
push
sbb
rcr
push
and
mov
push
add
add
mov
push
or
add
mov
push
sub
add
jne
push
and
test
xor
mov
add
pop
jne
add
(bad)
pop
and
add
and
push
push
dec
and
push
add
cmps
add
cmps
add
cmps
add
cmps
add
cmps
add
cmps
add
cmps
add
cmps
add
cmps
add
cmps
add
cmps
add
cmps
add
cmps
add
cmps
add
cmps
add
jne
push
cmp
push
add
mov
pop
mov
and
push
and
dec
pop
mov
or
add
pop
mov
dec
mov
and
push
add
ret
push
push
sbb
xor
gs
enter
xor
add
add
mov
pop
rol
add
test
add
pop
ret
push
add
in
pop
movs
add
jne
add
retf
push
movs
add
mov
push
fild
push
push
dec
and
push
add
push
push
adc
push
push
cmp
ror
fild
push
add
fild
push
sub
fild
push
or
push
and
iret
bound
add
add
bound
and
adc
add
add
add
mov
push
jbe
add
ins
fs
adc
mov
push
add
add
ins
add
add
ins
movs
add
movs
add
movs
add
add
add
outs
add
add
outs
add
add
jo
add
add
add
add
add
add
dec
and
push
cmp
or
sbb
dec
and
push
cmp
je
or
add
(bad)
push
and
(bad)
push
add
push
and
or
or
stos
jne
or
or
(bad)
xor
out
jne
add
push
dec
and
push
or
or
jmp
jp
or
or
push
jp
or
or
xchg
jp
or
or
fdivr
or
or
cli
jp
or
or
ds
or
jne
push
and
or
jg
push
and
jnp
or
jg
push
or
jg
push
sub
or
jg
push
xor
or
jg
push
xor
jl
or
jg
push
sbb
jg
push
add
pop
jge
or
test
test
test
test
test
add
stc
cmp
jg
add
add
add
add
add
(bad)
jg
add
add
jg
add
add
cmp
xor
sub
add
add
add
add
jne
xor
xchg
xor
add
out
mov
add
add
mov
add
add
mov
add
push
mov
add
jbe
jne
add
cwde
mov
add
add
add
mov
add
dec
and
mov
add
add
add
add
add
add
mov
add
in
mov
add
push
lea
add
xor
push
lea
lea
(bad)
repz
add
add
(bad)
repz
add
(bad)
repz
push
dec
and
push
sbb
mov
push
add
push
push
push
dec
and
push
and
push
push
add
mov
mov
mov
(bad)
xchg
push
xor
or
add
add
(bad)
add
add
add
add
add
xchg
(bad)
add
mov
add
stc
cmp
cmp
add
cmp
add
(bad)
nop
add
add
nop
add
add
xchg
xchg
push
add
sub
mov
xchg
mov
xchg
sahf
push
add
xchg
xchg
cmps
push
adc
rol
xchg
mov
xchg
jne
adc
les
out
jne
and
or
sub
dec
xchg
mov
xchg
fmul
adc
nop
xchg
fisttp
adc
mov
loop
xor
and
add
add
add
add
add
add
add
xchg
add
add
xchg
add
add
xchg
add
add
add
add
add
add
add
cdq
add
add
lods
add
adc
push
add
add
cdq
and
push
add
call
lock
add
add
call
jne
push
add
inc
add
add
add
add
fwait
jne
adc
adc
add
pushf
add
add
add
fwait
jne
push
add
add
fwait
jne
push
and
add
add
sbb
pop
cmp
add
pusha
and
add
add
add
add
add
add
add
add
and
add
shl
add
add
add
and
add
in
and
add
add
add
add
and
add
add
add
test
add
add
add
and
add
add
add
add
and
add
add
add
add
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
add
add
xchg
add
call
add
add
add
add
add
add
add
and
or
les
add
add
xchg
sbb
pop
cmp
or
sbb
add
add
xchg
xchg
and
and
add
add
add
add
add
add
xchg
add
and
and
add
add
add
add
add
add
add
sbb
and
adc
pusha
and
add
and
adc
movs
and
add
and
adc
cld
and
sbb
and
adc
adc
add
add
mov
and
adc
cmp
add
add
xchg
xchg
and
daa
add
add
xchg
sbb
pop
cmp
adc
test
add
add
xchg
add
sub
pop
sub
add
add
add
shr
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
sub
or
add
xchg
add
cs
add
add
dec
add
add
xchg
add
cmp
sbb
jl
add
add
xchg
add
iret
add
add
xchg
add
iret
add
in
dec
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
das
jecxz
and
jl
add
add
xchg
add
jecxz
and
js
add
add
xchg
add
aad
and
movs
push
add
add
xchg
add
add
add
add
xchg
sbb
pop
cmp
add
add
add
xchg
add
add
pop
add
add
xchg
add
aaa
add
add
xchg
add
add
add
xchg
add
inc
add
sbb
add
add
xchg
add
add
pop
add
add
xchg
add
add
add
add
xchg
add
xor
xor
mov
add
add
xchg
add
xor
ss
pop
add
add
xchg
add
xor
cmp
ins
pusha
add
add
xchg
add
push
add
add
popa
add
add
xchg
xchg
and
popa
add
add
xchg
add
xor
add
add
add
add
add
add
popa
add
add
xchg
add
xchg
add
add
add
add
xchg
add
cmp
cmp
enter
add
xchg
add
add
add
add
add
add
xchg
inc
xor
mov
add
ds
arpl
add
add
add
add
arpl
add
add
add
add
add
add
xchg
mov
add
add
add
or
inc
add
add
add
xchg
in
xor
dec
add
add
or
inc
add
add
add
xchg
and
jl
inc
add
add
add
xchg
sbb
pop
cmp
inc
add
add
add
xchg
xchg
and
add
add
xchg
add
add
add
add
add
add
xchg
add
pop
inc
add
add
add
shl
add
add
add
movs
data16
add
xchg
xchg
and
data16
add
xchg
sbb
pop
cmp
dec
add
data16
add
xchg
add
cmps
add
add
add
add
add
ins
push
xchg
sub
push
add
add
aam
add
add
xchg
xchg
and
imul
add
mov
push
add
add
add
imul
add
xchg
xchg
and
imul
add
xchg
add
aaa
mov
imul
add
xchg
add
aaa
mov
imul
add
xchg
add
cmp
dec
add
ins
add
add
xchg
add
jno
dec
add
add
add
ins
add
add
xchg
add
add
add
add
xchg
sbb
pop
cmp
dec
add
add
add
xchg
xchg
and
jae
add
add
add
je
add
add
add
je
add
add
add
je
add
add
add
je
add
add
add
jne
add
add
add
jne
add
add
add
jne
add
add
add
jbe
add
add
add
jbe
add
add
add
jbe
add
add
add
ja
add
add
add
js
add
add
add
jns
add
add
add
jp
add
add
add
jp
add
add
add
sar
add
test
mov
add
add
add
xchg
ret
ds
dec
add
jle
add
add
add
lock
add
add
dec
add
add
add
xchg
sub
cmps
add
fadd
xchg
dec
aas
cmps
add
push
mov
add
add
add
jl
add
add
xchg
add
add
add
add
lock
add
add
add
sbb
add
add
xchg
add
out
push
add
add
add
xchg
sbb
pop
cmp
push
add
add
add
xchg
add
add
xchg
add
and
add
add
xchg
add
inc
sti
add
aam
add
add
xchg
add
add
push
add
add
add
xchg
add
or
push
add
add
add
add
push
add
add
in
fwait
add
add
add
cmp
or
add
add
pushf
add
add
add
inc
cmps
add
cmp
add
add
add
inc
int
pop
add
add
add
add
inc
dec
add
jl
add
add
test
popf
inc
cmps
add
pushf
add
add
test
mov
add
add
add
add
inc
push
add
ins
popf
add
add
add
inc
push
add
sbb
add
add
les
inc
inc
pop
add
push
sahf
add
add
les
imul
lahf
add
add
test
mov
add
pop
mov
test
lods
inc
add
add
xchg
iret
inc
cmps
add
ins
mov
add
inc
int
arpl
adc
add
add
test
adc
arpl
pusha
mov
test
xor
add
mov
sbb
and
mov
add
inc
inc
add
dec
mov
add
inc
int
imul
add
xchg
xchg
and
movs
add
add
xchg
add
inc
jno
imul
add
xchg
add
inc
jno
imul
add
xchg
add
add
xchg
add
inc
jno
imul
add
xchg
add
cmp
imul
add
xchg
xchg
and
add
add
inc
push
add
add
add
add
and
inc
pop
add
add
add
add
and
inc
pop
add
add
add
add
and
inc
data16
add
add
add
and
push
outs
add
add
add
inc
outs
add
add
add
add
and
add
add
add
inc
jle
jae
add
add
add
and
inc
xchg
jne
add
add
add
and
inc
mov
ja
add
add
add
and
inc
xchg
add
cmp
add
add
xchg
add
sahf
add
add
add
add
and
movs
add
or
xchg
add
add
add
add
xchg
add
add
xchg
add
inc
jno
add
add
sbb
and
stos
add
add
xchg
push
dec
mov
add
stos
add
add
or
dec
mov
stos
add
add
xchg
gs
int
add
stos
add
add
xchg
jne
mov
stos
add
add
add
dec
add
stos
add
add
xchg
add
add
lods
add
add
xchg
ja
cmps
add
add
xchg
xchg
and
lods
add
add
xchg
xchg
and
add
add
add
add
add
add
add
add
add
add
add
add
xchg
mov
add
add
add
add
mov
in
scas
add
add
xchg
jae
loop
mov
mov
add
add
xchg
xchg
dec
dec
add
add
add
add
add
add
add
add
xchg
sti
dec
int
lea
hlt
mov
add
add
add
add
add
add
add
add
add
dec
cld
add
add
add
add
pop
add
add
mov
dec
pop
add
add
add
add
add
add
add
dec
and
lahf
add
add
add
add
add
das
add
add
mov
dec
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
push
add
add
add
add
pop
add
add
add
add
bound
mov
add
add
add
test
xchg
and
mov
add
add
add
dec
outs
add
add
add
add
add
add
mov
ins
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
mov
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
inc
mov
xchg
test
cmps
add
add
add
add
add
add
add
add
add
add
add
add
dec
dec
add
add
add
add
test
mov
add
add
add
pop
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
mov
add
add
add
add
stos
add
add
add
add
add
add
mov
mov
add
xchg
xchg
and
add
add
add
add
add
add
dec
mov
add
add
add
add
lds
int
add
add
add
mov
dec
bound
rol
sar
xchg
xchg
and
rol
in
mov
xchg
push
dec
push
add
add
mov
xchg
add
rol
rol
cmp
add
aad
aam
mov
add
add
add
mov
xchg
add
loope
(bad)
add
mov
mov
dec
push
add
add
add
add
mov
and
fadd
fs
xchg
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
jmp
fiadd
add
add
add
mov
dec
repz
add
add
add
add
add
bound
in
mov
add
add
add
xchg
xchg
and
add
add
mov
xchg
xchg
and
add
add
mov
xchg
xchg
and
add
add
add
add
xchg
or
add
add
add
add
add
add
add
add
and
jmp
add
add
add
add
add
add
xchg
sbb
pop
cmp
jmp
add
add
add
add
add
add
xchg
xor
sub
add
mov
xchg
inc
dec
xor
add
add
add
add
xchg
add
and
mov
xchg
add
add
add
add
xchg
add
dec
dec
add
add
add
add
xchg
add
and
icebp
add
add
add
add
rol
add
xchg
add
and
add
rol
add
xchg
add
and
rol
add
xchg
add
and
cmc
add
add
add
xchg
add
and
test
rol
add
xchg
add
and
test
add
xchg
add
and
clc
add
add
add
add
add
add
add
add
add
add
add
rol
add
xchg
add
and
rol
add
xchg
add
and
ret
add
xchg
add
and
ret
add
xchg
add
and
ret
add
xchg
add
and
add
cwde
ret
add
xchg
add
and
ret
add
xchg
add
and
add
add
xchg
add
dec
test
les
add
add
add
add
lds
add
add
add
add
add
add
xchg
add
push
rol
pusha
lds
add
add
add
add
add
add
xchg
add
push
iret
add
add
add
add
add
add
add
adc
pusha
mov
add
mov
push
out
adc
jl
add
add
mov
push
out
add
add
add
add
add
add
push
add
add
add
add
mov
sbb
add
mov
add
add
add
add
add
add
add
xchg
add
push
pop
add
add
add
xchg
add
push
sub
add
add
xchg
add
add
add
add
xchg
add
cmp
add
add
xchg
xchg
and
int3
add
add
xchg
sbb
pop
cmp
and
add
add
add
add
add
add
push
cmps
add
add
int
add
add
add
add
add
add
add
add
sub
aam
add
add
add
sub
add
add
add
add
sub
pusha
rol
add
add
sub
je
add
add
xchg
dec
push
jne
sub
rcl
add
add
add
add
add
les
sub
add
add
add
add
add
les
xchg
push
xchg
add
add
add
loope
pushf
push
cwde
add
add
add
loope
mov
add
aam
add
add
add
add
add
add
xchg
xchg
and
xor
xor
add
add
xchg
call
add
add
add
add
add
add
add
add
xchg
xchg
and
add
add
add
xchg
jne
retf
add
add
add
xchg
adc
xor
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
ss
aad
add
add
add
add
add
add
aaa
add
fadd
add
add
add
add
fld
add
add
add
add
add
add
aaa
add
add
add
add
add
add
xchg
fist
add
add
add
cmp
aam
add
add
add
cmp
movs
fadd
add
add
add
add
add
cmp
sbb
add
add
add
cmp
test
add
add
add
cmp
cmp
add
add
add
cmp
push
fild
add
add
add
add
add
add
cmp
add
add
push
cmp
add
add
add
add
add
add
add
add
add
add
add
aas
add
add
aas
add
call
add
inc
add
jmp
add
inc
add
add
add
push
inc
add
jmp
add
add
clc
jmp
add
add
add
pusha
in
add
add
add
inc
add
add
add
add
add
add
add
inc
add
add
add
loope
stos
pop
cmps
add
nop
in
add
add
add
inc
add
add
add
out
add
add
xchg
xchg
and
out
add
add
xchg
xchg
and
inc
add
add
add
push
inc
add
add
add
add
sub
add
add
add
xchg
out
add
add
xchg
xchg
and
out
add
add
xchg
xchg
and
out
add
add
xchg
inc
pop
xor
dec
add
out
add
add
xchg
pop
pop
cmp
dec
add
add
add
push
dec
add
add
push
dec
add
add
add
add
out
add
add
add
dec
add
add
add
add
dec
add
add
add
add
push
add
add
push
push
add
add
push
push
add
hlt
add
add
add
push
add
hlt
add
add
add
push
add
test
add
add
pop
add
add
add
add
add
add
add
xchg
mov
jl
pop
add
test
add
add
add
bound
mov
add
add
add
add
cli
add
add
add
add
cli
add
add
add
push
inc
cld
add
add
add
ins
add
add
add
push
outs
add
cld
add
add
add
jo
je
add
add
xchg
xchg
and
push
jb
inc
inc
add
add
add
xor
or
pusha
jmp
jae
ins
add
xchg
jns
repz
jae
or
add
add
xchg
mov
push
jae
and
add
add
xchg
xchg
pusha
inc
jae
xor
add
add
xchg
cmps
pusha
push
add
push
add
add
xchg
mov
or
add
xchg
jne
retf
add
add
add
xchg
(bad)
pusha
call
push
add
add
xchg
aam
retf
add
add
add
xchg
jecxz
call
pop
add
add
xchg
repnz
int
ja
cmp
add
add
xchg
add
add
dec
pop
add
add
add
js
movs
pop
add
add
add
jns
aam
add
add
add
jns
hlt
pop
add
add
xchg
push
popa
cmps
add
or
add
add
xchg
out
pop
cmps
add
sub
add
add
xchg
adc
cmps
add
jo
add
add
xchg
and
add
add
add
aam
add
add
xchg
inc
popa
cmps
add
hlt
or
add
add
add
test
add
add
xchg
fs
cmps
add
mov
add
add
add
add
add
jnp
adc
add
add
add
jnp
jo
add
add
add
jl
les
add
add
add
jge
mov
add
add
add
jle
pop
or
add
jle
hlt
push
add
add
add
jg
adc
add
add
xchg
pop
bound
sgdtd
add
xchg
bound
sgdtd
add
xchg
je
dec
add
add
add
add
add
add
add
add
sgdtd
add
xchg
mov
pop
test
hlt
sgdtd
add
xchg
mov
pop
test
sbb
add
add
xchg
mov
pop
xchg
inc
adc
add
add
pop
xchg
ins
adc
add
add
pop
mov
xchg
adc
add
add
add
add
add
pop
mov
in
add
add
xchg
mov
pop
mov
or
add
add
xchg
mov
add
add
add
xchg
mov
pop
lea
pop
adc
add
add
pop
mov
adc
add
add
pop
pop
test
add
add
xchg
mov
pop
nop
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
xchg
and
xchg
add
adc
add
add
push
xchg
add
adc
add
add
pop
xchg
add
adc
add
add
add
add
xchg
lahf
arpl
pushf
add
add
add
xchg
lds
add
add
xchg
jmp
int
pushf
add
add
add
xchg
adc
pushf
add
add
add
add
add
les
aaa
fs
adc
add
add
pop
popf
add
add
add
xchg
xchg
and
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
xchg
push
cmps
add
add
add
add
add
add
add
and
mov
add
add
pop
mov
add
add
pop
mov
add
add
pop
movs
add
add
add
xchg
add
add
xchg
add
movs
pop
cmps
add
xchg
add
rol
add
add
add
xchg
add
gs
lods
add
add
add
xchg
add
add
scas
add
xchg
add
data16
mov
sub
add
add
xchg
add
and
mov
pop
sbb
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
xchg
add
xchg
or
add
add
or
add
add
add
or
add
push
add
add
xchg
add
ret
add
add
add
xchg
add
addr16
or
add
xchg
add
(bad)
or
add
add
add
xchg
add
add
and
add
add
or
add
add
add
or
add
and
add
add
or
add
add
add
xchg
add
or
rol
xchg
and
add
add
add
add
and
add
add
or
add
add
add
add
add
add
add
xchg
add
sbb
fld
cmp
add
add
xchg
add
and
fiadd
add
add
add
xchg
xchg
and
add
add
add
add
add
add
dec
cmps
add
add
add
add
add
add
pop
add
add
add
add
add
add
pop
fild
add
add
add
xchg
xchg
and
add
add
add
add
add
add
dec
es
add
add
add
add
add
pop
add
add
add
add
add
add
sub
in
add
add
add
xchg
xchg
and
add
add
add
add
add
add
dec
xor
out
add
add
add
mov
dec
cmp
call
add
add
add
inc
or
add
add
add
add
add
add
add
add
add
add
dec
dec
or
add
add
add
add
add
push
or
add
add
add
add
add
arpl
hlt
add
add
add
add
add
add
add
add
add
add
dec
imul
add
add
add
add
add
jbe
cli
add
add
add
add
add
test
inc
mov
add
add
xchg
add
lea
add
in
add
add
xchg
add
add
add
add
xchg
add
push
mov
add
or
add
add
add
add
add
add
or
add
add
or
add
add
add
xchg
add
(bad)
or
add
xchg
add
add
add
add
xchg
add
add
add
add
xchg
add
imul
add
or
add
add
or
add
xchg
add
push
or
add
xchg
add
push
or
add
sub
add
add
or
cmp
xchg
add
jmp
add
add
or
add
xchg
add
push
pop
sbb
loopne
add
add
xchg
add
push
or
add
add
or
fdiv
add
add
xchg
add
add
xor
add
add
or
add
add
add
xchg
add
imul
and
jl
add
add
xchg
add
and
and
add
add
or
add
add
add
xchg
add
add
add
or
add
add
add
xchg
add
imul
sub
xor
add
add
xchg
add
imul
sub
add
add
or
add
xchg
add
imul
add
xchg
add
add
xor
add
add
or
xor
xchg
add
je
xor
add
add
or
add
add
add
or
js
add
add
xchg
add
add
add
add
xchg
add
fild
inc
add
add
add
xchg
add
add
add
add
xchg
add
add
cmp
add
add
or
xor
add
add
xchg
add
ins
fild
inc
add
xchg
add
ins
ror
add
xchg
add
ins
retf
or
clc
cmp
add
add
or
sbb
add
add
xchg
add
outs
loopne
dec
add
cmp
add
add
or
and
add
add
xchg
add
push
add
test
add
add
xchg
add
push
add
mov
add
add
xchg
add
add
add
add
xchg
add
add
add
add
xchg
add
add
add
add
xchg
add
outs
hlt
or
cmp
xchg
add
outs
fimul
pop
add
add
add
xchg
add
outs
dec
pusha
add
add
add
or
push
add
or
add
add
xchg
add
push
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
mov
dec
push
or
add
add
add
mov
dec
or
add
add
add
add
pop
jo
mov
add
add
or
add
add
xchg
add
leave
add
pop
inc
add
add
xchg
add
or
lods
inc
add
add
xchg
add
jo
or
aam
add
add
xchg
add
jo
or
sbb
add
add
xchg
add
jo
or
inc
add
add
xchg
add
jo
or
mov
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
sbb
and
inc
add
add
mov
and
call
add
add
add
jno
or
add
jno
add
add
jno
or
add
and
xchg
or
add
inc
movs
or
add
jb
or
add
jb
or
add
jb
or
add
jb
or
add
inc
aad
mov
pushf
inc
add
add
xchg
add
add
xchg
add
jb
or
add
add
or
add
add
or
add
add
add
add
add
or
add
add
add
add
xchg
add
and
add
add
xchg
add
jae
add
add
add
or
add
add
or
add
add
add
xchg
add
mov
dec
add
add
xchg
add
test
add
add
xchg
xchg
and
dec
add
add
xchg
sbb
pop
cmp
lds
add
add
add
and
jbe
or
add
add
add
jbe
or
add
add
add
jbe
or
add
add
add
jbe
or
add
add
add
jbe
or
add
add
add
jbe
or
add
add
add
jbe
or
add
add
add
jbe
or
add
add
add
ja
or
add
add
add
ja
or
add
xchg
add
or
add
dec
add
add
xchg
add
add
add
add
or
add
add
add
or
add
push
add
add
xchg
add
ja
or
add
add
add
xchg
add
ja
or
add
xchg
add
js
or
add
xchg
add
js
or
add
push
add
add
xchg
add
js
or
add
push
add
add
xchg
add
js
or
add
push
add
add
xchg
add
add
add
add
xchg
add
or
push
add
add
xchg
add
or
add
add
xchg
add
or
add
add
xchg
add
add
add
add
or
add
add
xchg
add
add
add
add
xchg
add
js
or
add
add
xchg
add
js
or
add
add
xchg
add
jns
or
add
add
xchg
add
jns
or
add
add
xchg
add
xor
add
add
xchg
add
cmp
add
add
xchg
add
inc
or
add
add
xchg
add
dec
or
add
add
xchg
add
int3
pop
add
add
xchg
add
add
xchg
sbb
pop
cmp
bound
pop
popa
add
add
xchg
xchg
and
popa
add
add
xchg
or
add
test
add
add
add
jle
add
mov
add
or
add
add
xchg
add
add
add
add
add
je
add
add
xchg
add
add
add
add
xchg
add
jle
add
inc
add
add
xchg
add
jle
or
add
add
xchg
xchg
and
add
add
xchg
add
mov
add
add
xchg
sbb
pop
cmp
ins
add
add
add
add
add
add
and
sub
add
add
and
xor
add
or
add
add
and
push
jae
add
add
add
and
add
push
xchg
add
add
add
add
xchg
add
and
or
add
add
xchg
add
cmp
push
add
add
or
add
add
xchg
add
or
jbe
fsubr
add
add
or
add
add
xchg
add
or
add
add
xchg
add
xchg
add
clc
jbe
add
add
or
add
add
xchg
add
add
add
or
add
add
xchg
add
xor
jge
and
add
add
xchg
add
or
add
jnp
add
add
add
hlt
jl
add
add
add
add
add
add
add
add
push
add
jg
add
add
push
xchg
fadd
xchg
add
add
add
add
xchg
add
add
add
add
xchg
add
xor
add
add
add
add
xchg
add
test
xchg
add
add
add
xchg
add
test
xchg
add
xchg
add
iret
or
add
add
xchg
add
or
add
add
xchg
add
add
add
add
xchg
add
add
add
add
xchg
add
test
xchg
add
mov
add
add
add
add
add
add
add
add
add
add
add
or
add
add
xchg
add
push
xchg
add
xchg
add
add
xchg
add
add
xchg
add
test
cdq
add
xchg
add
add
xchg
add
test
cdq
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
xchg
add
jo
add
add
xchg
add
mov
add
add
add
add
add
xchg
add
mov
pushf
add
add
xchg
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
add
mov
push
mov
add
mov
movs
add
add
add
mov
stos
add
add
add
mov
or
add
mov
mov
add
add
add
and
add
add
add
mov
mov
mov
add
add
add
mov
xchg
sbb
pop
cmp
ret
mov
xchg
lds
add
add
add
or
add
add
xchg
xchg
cmp
cmp
xchg
mov
mov
ret
mov
xchg
aad
int
ret
mov
test
cli
(bad)
cmps
add
add
add
add
xchg
out
push
add
add
add
add
add
movs
add
add
xchg
or
adc
add
add
xchg
ds
int
ret
movs
add
add
xchg
pusha
nop
cmps
add
add
add
add
add
add
add
add
add
add
xchg
sbb
pop
cmp
ret
cmps
add
add
xchg
xchg
and
cmps
add
add
add
xchg
cmps
add
add
add
add
add
xchg
cmps
add
add
add
add
add
xchg
cmps
add
add
add
add
add
ret
lods
add
add
add
ret
mov
add
ret
add
add
add
add
ret
add
xchg
sbb
pop
cmp
ret
add
add
add
add
add
add
add
mov
and
les
add
sbb
add
les
push
add
add
add
cmps
add
add
mov
les
or
les
test
add
add
les
pushf
dec
cmps
add
add
mov
les
lods
dec
cmps
add
add
mov
sbb
and
mov
xchg
or
xchg
out
les
ins
mov
xchg
or
xchg
in
push
les
cmp
or
xchg
repz
les
xchg
mov
xchg
or
xchg
cli
push
lds
enter
add
xchg
or
xchg
cli
push
lds
cld
mov
xchg
or
iret
or
add
add
xchg
xchg
and
rol
add
xchg
sbb
pop
cmp
lds
pop
ret
add
xchg
or
add
xchg
or
xchg
iret
or
add
add
xchg
or
xchg
iret
or
add
add
xchg
or
add
add
add
xchg
or
xchg
iret
or
add
add
xchg
or
iret
or
add
add
xchg
or
iret
or
add
add
xchg
or
add
add
add
xchg
or
xchg
iret
or
add
add
xchg
or
xchg
iret
or
add
add
xchg
or
xchg
iret
or
add
add
xchg
or
add
lds
add
add
or
add
add
xchg
or
add
add
add
or
add
add
xchg
add
xchg
jno
lds
nop
mov
add
xchg
jno
lds
fs
add
add
xchg
add
cwde
dec
lds
in
add
add
xchg
add
cwde
jno
mov
iret
add
add
xchg
add
jno
mov
rol
add
add
add
add
rol
add
add
add
add
rol
add
add
add
add
add
add
xchg
add
or
enter
add
add
xchg
add
add
xchg
add
cwde
leave
add
add
add
add
add
add
add
add
add
add
add
xchg
xchg
and
fadd
add
add
add
add
add
add
xchg
xchg
and
fadd
add
add
bswap
add
fadd
add
add
add
add
fld
add
add
or
add
fld
add
add
add
add
add
add
xchg
jge
push
add
add
add
add
add
add
add
add
xchg
jecxz
push
or
add
xchg
xchg
and
fld
add
add
or
add
fiadd
add
add
add
add
add
add
xchg
imul
fiadd
add
add
add
add
xchg
xchg
and
fiadd
add
add
add
add
fild
add
add
add
add
add
add
xchg
xchg
and
fild
add
add
add
add
add
add
xchg
xchg
and
fild
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
lock
add
add
dec
add
add
add
add
and
add
add
aaa
dec
add
add
add
add
dec
add
add
or
add
add
and
add
add
aaa
dec
add
add
add
add
add
pop
add
dec
add
add
push
dec
add
add
jl
add
add
jmp
add
dec
add
add
dec
add
add
add
add
dec
dec
add
add
aaa
dec
add
add
add
add
dec
add
add
or
add
add
dec
dec
add
add
aaa
dec
add
add
add
add
add
pop
add
dec
add
add
dec
dec
add
add
push
dec
add
add
jl
add
add
add
adc
add
add
add
add
jmp
add
dec
add
add
imul
dec
add
add
jl
add
add
mov
add
add
add
pop
dec
add
add
jmp
add
dec
add
add
mov
add
add
mov
add
add
imul
dec
add
add
jl
add
add
jmp
add
dec
add
add
pop
dec
add
add
adc
add
add
dec
add
add
adc
add
add
add
add
jmp
add
dec
add
add
jl
add
add
jmp
add
dec
add
add
and
add
add
dec
add
add
and
add
add
dec
add
add
imul
dec
add
add
jl
add
add
dec
dec
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
dec
add
add
lock
add
add
mov
add
dec
add
add
mov
add
dec
add
add
imul
dec
add
add
jl
add
add
enter
add
ror
add
add
add
add
dec
add
add
dec
add
add
and
add
add
dec
add
add
cmp
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
mov
add
add
dec
add
add
mov
add
dec
add
add
or
add
add
add
add
add
add
add
push
add
add
mov
add
add
push
add
add
xor
add
add
mov
add
add
add
add
add
dec
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
jge
add
add
xchg
add
add
add
add
add
add
push
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
mov
add
add
xchg
pop
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
pop
add
add
mov
add
pop
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
pop
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jge
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
dec
add
add
imul
dec
add
add
jl
add
add
jmp
add
dec
add
add
imul
dec
add
add
jl
add
add
jmp
add
dec
add
add
jo
add
add
jo
add
add
imul
dec
add
add
jl
add
add
jmp
add
dec
add
add
jo
add
add
jne
add
add
jo
add
add
jne
add
add
imul
dec
add
add
jl
add
add
jmp
add
dec
add
add
jo
add
add
jne
add
add
jp
add
add
jo
add
add
jne
add
add
jp
add
add
imul
dec
add
add
jl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
lock
add
add
ret
pop
add
add
stos
outs
add
add
ret
pop
add
add
stos
outs
add
add
imul
dec
add
add
jl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
adc
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
icebp
add
add
add
cmp
loope
xchg
and
and
pushf
cwde
add
int
jno
sbb
cmps
add
xchg
and
imul
xchg
add
add
add
test
add
add
loope
xchg
and
leave
add
and
mov
xchg
and
fld
and
mov
add
add
and
stc
add
icebp
add
imul
add
add
lahf
push
adc
(bad)
and
inc
add
lahf
int
inc
add
add
and
pop
xchg
and
lahf
je
cmp
sti
lahf
jnp
dec
add
mov
adc
push
and
sub
xchg
and
dec
add
add
cmps
add
add
mov
xchg
and
add
add
adc
add
cmps
adc
adc
adc
add
leave
push
mov
cdq
mov
mov
mov
push
add
push
shl
mov
shl
fldenv
sbb
add
push
shl
repnz
or
shl
pop
mov
mov
mov
mov
cmp
add
lahf
jnp
pop
add
mov
sub
inc
mov
sbb
add
push
dec
mov
push
mov
sti
lahf
jnp
ins
add
mov
pop
mov
sub
mov
pop
mov
ins
mov
mov
mov
add
add
leave
or
cmp
jno
xchg
and
adc
adc
lea
xchg
mov
pushf
mov
test
jno
jno
mov
mov
inc
pop
ret
mov
shl
leave
mov
mov
iret
mov
xchg
and
adc
(bad)
mov
out
jmp
mov
add
xchg
and
adc
adc
and
add
mov
inc
dec
jl
leave
push
shl
mov
cmp
inc
mov
dec
mov
pop
mov
push
add
mov
xchg
xchg
mov
out
pop
cmps
add
push
popf
mov
hlt
lahf
pop
adc
push
cmps
mov
shl
mov
sti
lahf
jnp
jl
or
sub
mov
(bad)
add
adc
push
test
movs
adc
int3
mov
aam
mov
imul
imul
jns
out
mov
xchg
and
lahf
jnp
mov
or
jecxz
push
adc
mov
add
add
push
clc
mov
add
push
add
adc
add
mov
sbb
mov
xor
dec
mov
push
mov
jg
aad
mov
adc
add
adc
add
jb
test
add
jo
push
add
add
add
push
scas
dec
addr16
add
add
add
mov
xchg
and
mov
in
dec
add
add
mov
push
movs
mov
and
movs
mov
loope
inc
dec
int
loope
daa
movs
cmps
add
add
movs
push
add
adc
add
leave
add
add
adc
push
xchg
and
movs
icebp
adc
add
and
adc
push
jg
jbe
mov
ja
dec
adc
push
add
push
and
imul
add
add
add
add
add
add
add
add
add
movs
(bad)
adc
xchg
adc
lahf
adc
stos
adc
stos
adc
add
mov
xchg
mov
fsub
mov
xchg
mov
xchg
mov
xchg
and
and
and
adc
add
pop
xor
out
movs
rol
mov
out
pop
cmps
add
add
movs
rol
xor
xchg
and
add
add
add
push
cmp
stc
movs
adc
cmp
add
pop
movs
push
push
popa
add
xchg
and
push
push
push
add
add
xor
and
or
add
movs
sbb
add
jno
dec
movs
push
add
popa
movs
push
add
jne
bound
jno
test
xchg
and
and
xchg
and
and
add
xchg
and
add
add
add
mov
nop
push
and
mov
add
movs
mov
movs
int
fld
std
movs
lahf
adc
or
push
cmps
mov
inc
add
iret
or
leave
add
add
add
push
popa
add
pop
cmps
add
add
cmps
push
add
inc
cmps
fild
mov
push
leave
push
pop
cmps
loopne
sub
xchg
and
add
pop
cmps
push
add
add
add
jno
cdq
add
add
add
add
push
add
add
add
add
add
add
add
lahf
push
adc
xchg
cmps
mov
sbb
lea
cmp
add
mov
xchg
and
leave
push
shl
sti
lahf
jnp
lods
add
mov
sub
xchg
and
lahf
push
adc
add
add
cmps
daa
sbb
add
cmps
push
add
add
add
xchg
and
add
xchg
and
sbb
inc
dec
cmps
add
shl
cmps
cmps
add
and
mov
jecxz
push
adc
xchg
dec
push
add
xchg
and
and
or
xchg
and
add
add
add
add
pop
hlt
lahf
push
adc
push
mov
xchg
and
mov
pushf
mov
xchg
and
and
cmps
sbb
jecxz
cmps
sbb
adc
adc
push
shl
fsub
xchg
and
mov
(bad)
and
inc
add
cmps
in
push
mov
(bad)
and
sbb
sbb
sbb
sbb
sbb
sbb
push
(bad)
and
sbb
add
and
sbb
sbb
(bad)
and
sbb
sbb
(bad)
and
sbb
std
cmps
ficomp
imul
add
add
add
lahf
push
adc
adc
xchg
and
jno
push
dec
push
add
xchg
and
les
xchg
and
and
sbb
add
add
cmps
cmp
cmps
inc
sbb
add
cmps
jbe
fld
push
cmps
jge
add
nop
sbb
sbb
xchg
cmps
aad
jns
mov
push
add
add
mov
cmps
mov
sbb
sbb
push
add
adc
cmp
mov
int3
add
lahf
call
aam
or
pop
test
add
int
cmp
and
sub
ds
add
add
adc
pop
add
and
adc
add
int
jns
xchg
test
add
mov
add
and
xchg
and
test
sbb
add
jno
retf
test
sbb
sbb
(bad)
test
sbb
add
and
cdq
add
adc
and
cdq
add
adc
cdq
add
add
mov
test
sbb
sbb
popa
test
pop
test
sbb
sbb
sbb
mov
xchg
and
rol
mov
call
mov
stos
test
mov
cmps
add
pop
les
test
dec
dec
sbb
pop
or
iret
test
xchg
and
add
pop
fsubr
sbb
sbb
pop
in
je
fld
xchg
and
and
lahf
push
adc
add
push
add
add
test
lea
fist
add
add
add
add
add
add
jecxz
push
adc
push
sub
mov
or
lea
aam
mov
mov
in
rcr
mov
out
pop
cmps
add
add
add
add
add
stos
or
stos
clc
add
add
stos
push
sbb
add
sbb
stos
xor
pop
mov
xchg
and
add
in
add
add
add
add
lahf
jnp
cld
add
mov
test
ja
cld
add
mov
dec
mov
lea
jecxz
enter
or
xchg
and
add
add
add
add
push
add
shl
stos
clc
add
add
lahf
call
adc
or
cmp
add
push
add
add
stos
icebp
sbb
add
add
lahf
or
outs
add
add
add
add
add
add
and
in
mov
add
popa
cmps
add
add
add
add
iret
or
push
sbb
cmps
add
cmp
add
lahf
push
adc
add
stos
push
and
and
xchg
and
sub
push
mov
out
stos
or
and
xchg
and
stos
mov
rol
add
mov
xor
lea
jecxz
push
adc
xchg
and
lahf
call
dec
add
mov
test
cmps
mov
pop
add
add
lahf
cmps
sbb
lahf
push
adc
lahf
call
ins
add
mov
jecxz
push
adc
sti
lahf
jnp
je
or
dec
mov
sub
xchg
and
and
and
xchg
add
add
add
push
add
test
push
mov
jecxz
push
adc
movs
add
mov
lods
add
add
cdq
and
lods
add
call
or
and
xchg
and
add
add
pop
and
ret
adc
int
cdq
add
pop
adc
sbb
les
push
mov
lea
test
movs
xor
adc
mov
cmp
stc
pop
and
inc
pop
jmp
pop
mov
test
and
add
dec
stos
int
jns
pop
stos
jg
popa
add
push
add
jae
int
jns
sub
stos
int
jns
scas
stos
xchg
pop
jns
mov
pop
iret
stos
aad
jns
call
add
jns
pop
lods
jo
jns
adc
pop
and
lods
aad
mov
aas
lods
aad
inc
add
jns
lods
loope
mov
ret
pop
and
xchg
and
and
and
add
add
add
add
pop
xchg
lods
and
pop
add
jns
mov
xor
rol
dec
push
add
shr
pop
adc
pop
and
push
pop
cmps
outs
and
push
fsubr
lods
int
test
add
add
dec
push
adc
add
add
add
add
push
add
xchg
and
add
add
lahf
call
hlt
add
mov
add
xchg
and
and
pop
xchg
and
add
pop
and
adc
xchg
and
and
add
add
mov
and
loope
sbb
sub
sti
lahf
sub
stc
add
lods
push
add
add
lods
int
loope
dec
lods
cmps
add
add
int
mov
and
and
add
lods
push
add
add
jns
jmp
add
add
add
movs
cdq
and
add
test
pop
cmps
mov
xchg
and
mov
and
and
add
and
and
and
add
add
mov
(bad)
lods
or
jmp
and
inc
mov
xor
cmp
leave
push
shl
and
leave
push
shr
fild
out
lods
jne
mov
cld
lods
dec
add
add
pop
xchg
and
pop
xchg
add
inc
adc
adc
add
scas
fsub
jmp
adc
add
cmps
add
add
scas
loope
mov
sbb
and
out
and
ss
push
add
and
add
add
rol
dec
scas
push
and
add
add
mov
and
xchg
and
mov
pop
scas
push
add
jecxz
push
adc
test
jecxz
push
adc
adc
ja
jge
add
xchg
and
lahf
cmps
sbb
mov
push
shl
outs
scas
les
rol
mov
shr
xchg
and
scas
push
add
xchg
cmps
mov
or
jecxz
cmps
sbb
add
add
inc
and
push
mov
(bad)
scas
popf
pop
sbb
xchg
scas
lahf
add
add
add
add
scas
mov
scas
mov
scas
int
sub
push
scas
je
loope
sbb
or
lahf
add
and
push
sub
xor
add
mov
inc
scas
std
and
add
scas
add
push
add
add
scas
push
and
sbb
mov
and
fld
fwait
movs
xchg
adc
add
movs
pusha
and
dec
add
and
int
adc
xchg
push
or
push
mov
scas
scas
mov
sbb
sti
lahf
ret
add
mov
lea
mov
cdq
and
sub
xchg
and
and
add
xchg
and
and
push
add
mov
add
add
add
add
add
lahf
ret
add
mov
sub
ret
scas
cmps
add
int
push
rol
rol
rol
add
lea
jg
fisub
rol
sub
jecxz
add
dec
add
cdq
and
dec
add
call
push
daa
leave
push
out
pop
adc
pop
out
scas
sbb
add
lea
xchg
push
push
add
add
jl
or
and
add
xchg
or
sub
mov
adc
push
add
add
add
add
add
add
add
mov
or
add
add
add
add
lock
add
add
add
cli
add
add
add
add
add
mov
push
add
add
nop
add
add
add
cwde
add
add
add
mov
xchg
or
mov
add
jl
or
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
add
add
mov
add
test
inc
or
lods
add
or
mov
or
or
mov
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
add
add
push
add
add
add
add
add
sbb
add
adc
add
add
add
add
add
add
add
mov
or
sub
add
add
add
add
add
mov
or
cmp
add
add
add
jl
or
inc
add
add
add
add
add
mov
or
test
add
add
add
nop
add
add
add
cwde
add
add
add
mov
add
add
or
add
add
or
add
or
or
inc
or
adc
adc
adc
or
sbb
sbb
push
or
add
add
and
sub
add
add
xor
xchg
or
cmp
cmp
inc
or
inc
add
inc
add
dec
add
dec
add
push
add
push
add
pop
add
pop
add
pusha
add
push
add
add
add
xchg
or
je
add
jl
or
jl
jl
or
add
add
mov
mov
nop
add
xchg
add
cwde
add
pushf
add
pop
push
mov
or
pop
push
xchg
or
fs
mov
or
push
add
add
add
inc
or
je
add
push
adc
add
ror
scas
add
add
or
or
or
icebp
or
cmc
or
adc
mov
add
adc
add
add
push
scas
add
add
scas
add
add
add
xor
add
xor
add
xor
add
adc
add
xor
add
cmp
add
add
xor
add
add
add
add
add
add
add
add
ret
push
xor
pop
pavgb
or
mov
add
or
mov
and
or
mov
inc
or
add
add
add
add
add
mov
or
mov
arpl
or
or
ret
or
jecxz
or
mov
add
or
mov
and
or
mov
and
or
mov
inc
push
or
mov
inc
push
or
mov
popa
push
or
mov
arpl
or
mov
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
or
dec
pop
mov
or
addr16
mov
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
mov
adc
adc
ins
adc
xchg
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
stc
adc
sub
adc
push
movs
push
scas
push
mov
push
in
push
call
or
adc
sub
inc
pop
pop
pop
jbe
jnp
nop
pop
test
pop
repnz
and
sub
sbb
arpl
scas
sbb
or
sbb
pop
sbb
into
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
inc
sbb
arpl
ret
push
es
inc
push
jb
cdq
push
lahf
push
mov
push
call
pop
bound
jae
mov
cmps
pop
mov
mov
ret
pop
aam
ficomp
cmc
pop
pop
and
and
xchg
xchg
and
and
and
and
and
and
imul
xchg
and
and
and
and
and
push
and
data16
jne
xchg
pushf
and
and
and
and
and
push
and
test
mov
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
inc
and
jns
jg
popf
and
add
inc
es
es
jnp
test
mov
es
es
es
add
add
mov
add
add
add
sub
push
add
pop
add
add
add
add
add
push
add
adc
imul
and
xor
inc
lahf
inc
sldt
lods
add
pop
lahf
dec
sldt
push
add
push
sldt
push
add
pop
inc
sldt
js
js
add
sbb
lahf
or
add
adc
sbb
xchg
sldt
pushf
sbb
sbb
lahf
movs
sldt
js
js
add
test
add
loop
test
add
mov
add
lahf
les
add
retf
lahf
les
add
ficomp
dec
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
push
add
add
add
adc
add
add
add
sbb
add
pop
add
add
add
add
add
add
add
add
add
add
cmps
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
cmps
add
add
jbe
add
add
add
add
add
add
add
add
dec
adc
test
jle
test
mov
adc
adc
adc
jmp
sbb
sbb
sbb
sbb
jp
xor
sbb
sbb
sbb
sbb
sbb
sbb
mov
sbb
push
push
sbb
pop
push
cmp
push
push
pop
push
addr16
sbb
push
test
push
icebp
push
and
sub
push
and
and
and
and
and
loope
xor
cmp
push
add
popf
pushf
add
add
dec
add
add
mov
add
add
push
add
pushf
add
inc
add
(bad)
pushf
add
add
push
add
pushf
add
add
pop
add
pushf
add
add
pop
add
pushf
add
add
pop
add
pushf
add
add
pop
add
pushf
add
add
popa
add
pushf
add
push
add
icebp
pushf
push
add
add
add
popf
add
add
jecxz
xor
in
aas
popf
add
inc
add
add
popf
add
add
jmp
add
add
add
popf
add
add
in
add
popf
add
add
out
add
popf
add
add
icebp
add
popf
add
add
repz
pushf
add
add
adc
add
adc
add
add
add
add
sbb
add
sbb
add
sbb
add
add
add
add
and
inc
add
add
add
and
add
add
cmp
push
add
add
inc
add
pop
sahf
add
inc
add
addr16
add
push
add
jns
add
inc
add
add
add
push
mov
or
xchg
sahf
add
push
cmps
sahf
add
push
mov
add
push
iret
sahf
pop
add
adc
out
add
inc
add
push
sti
sahf
add
inc
add
add
add
add
add
cs
(bad)
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
das
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
push
add
add
add
add
add
add
add
or
sbb
add
add
add
and
sbb
and
sbb
and
add
add
add
add
add
add
add
add
add
add
inc
add
push
add
push
add
push
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
add
adc
ins
add
ins
add
outs
add
outs
add
jo
push
add
push
add
pop
add
pop
add
push
jbe
push
ja
push
add
add
xchg
add
lahf
add
add
cwde
add
lahf
add
add
cwde
add
lahf
add
add
call
add
add
add
add
add
add
pushf
add
lahf
add
add
pushf
add
lahf
add
add
pushf
add
lahf
add
add
fiadd
fistp
addr16
lahf
add
add
imul
add
aad
fistp
fld
fistp
fild
fistp
fld
fistp
fild
fistp
loope
fistp
loope
fistp
jecxz
fistp
in
fistp
out
fistp
jmp
add
add
add
lahf
add
add
in
add
lahf
add
add
out
add
lahf
add
add
icebp
add
lahf
add
add
repz
lahf
add
add
cmc
add
lahf
add
add
test
add
stc
add
lahf
add
add
cmp
lahf
add
add
pop
add
lahf
add
add
jae
fistp
ja
fistp
jns
fistp
jnp
fistp
rol
add
add
ret
add
lahf
add
sbb
rol
lahf
fadd
hlt
sbb
cli
sbb
add
sbb
jno
fadd
cli
sbb
cli
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
pop
jbe
xchg
fadd
stos
pop
repnz
pop
js
cli
sbb
cli
sbb
add
and
add
ret
sbb
add
daa
and
and
add
add
add
add
add
add
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
cs
ins
add
arpl
ins
imul
gs
cs
bound
push
jns
je
ins
add
jae
gs
cs
popa
je
add
jae
gs
cs
popa
outs
popa
gs
outs
je
push
jns
je
ins
cs
outs
outs
imul
je
outs
outs
add
jb
gs
xor
cs
ins
add
fs
ins
cs
ins
add
popa
jo
cs
ins
add
jbe
jo
xor
cs
ins
add
jbe
jo
xor
cs
ins
add
gs
xor
fs
ins
add
gs
outs
jbe
fs
ins
add
xor
xor
xor
xor
add
je
outs
outs
pusha
xor
inc
arpl
popa
je
jb
inc
jo
inc
outs
ins
popa
imul
ins
outs
je
js
gs
imul
jne
outs
je
jne
ins
inc
js
gs
imul
jne
outs
je
jne
dec
push
popa
outs
addr16
js
gs
imul
popa
jns
inc
jae
outs
arpl
ins
ins
bound
imul
je
jb
bound
add
je
imul
jb
gs
add
je
imul
popa
addr16
je
jb
bound
add
fs
ins
popa
addr16
outs
jb
popa
je
js
gs
imul
inc
outs
outs
jbe
jb
gs
inc
outs
outs
ins
gs
outs
add
data16
inc
jns
add
popa
jb
inc
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
jb
popa
jns
imul
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
imul
jb
inc
outs
je
jns
inc
imul
jb
pusha
xor
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
dec
gs
outs
ins
ins
arpl
outs
add
jne
gs
je
jb
inc
jno
popa
ins
imul
jb
jb
xor
dec
inc
outs
ins
ins
arpl
outs
pusha
xor
dec
inc
imul
jb
pusha
xor
dec
inc
outs
jne
gs
bound
xor
dec
inc
outs
jne
gs
je
jb
xor
dec
inc
jno
popa
ins
imul
jb
jb
xor
dec
dec
imul
imul
inc
outs
ins
ins
arpl
outs
add
imul
jb
add
imul
jb
inc
outs
jne
gs
je
jb
dec
inc
outs
jne
gs
je
jb
dec
dec
imul
ins
arpl
outs
pusha
xor
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
dec
bound
arpl
fs
add
jns
fs
outs
ins
ins
arpl
outs
pusha
xor
push
gs
fs
outs
ins
jns
outs
ins
ins
arpl
outs
pusha
xor
push
gs
fs
outs
ins
jns
outs
ins
ins
arpl
outs
inc
popa
jae
add
ins
gs
popa
ins
jne
inc
outs
ins
ins
arpl
outs
add
jae
gs
cs
outs
ins
ins
arpl
outs
jae
push
jo
arpl
ins
imul
ins
jo
outs
outs
je
outs
outs
jbe
jb
gs
push
jns
je
ins
cs
outs
ins
jo
outs
outs
je
outs
fs
add
arpl
jo
imul
imul
imul
jae
bound
je
jb
bound
add
imul
jae
bound
je
je
add
jns
gs
gs
jb
jo
outs
jb
outs
outs
je
js
add
gs
outs
outs
jbe
jb
gs
push
jns
gs
gs
jb
jo
outs
jb
inc
outs
outs
imul
je
outs
outs
dec
popa
outs
popa
addr16
inc
outs
outs
imul
je
outs
outs
push
gs
imul
outs
jbe
jb
add
ins
push
je
imul
je
ins
cs
popa
je
cs
jno
push
jns
gs
inc
popa
je
push
imul
imul
ins
gs
je
add
jne
addr16
push
jns
je
ins
cs
imul
imul
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
ins
gs
gs
imul
add
outs
arpl
jae
push
jb
arpl
jae
outs
fs
add
outs
arpl
jae
je
jb
dec
outs
outs
add
outs
arpl
jae
push
add
outs
arpl
jae
push
inc
outs
ins
ins
arpl
outs
add
bound
inc
outs
jne
add
jbe
jb
outs
ins
outs
je
push
jo
arpl
ins
inc
outs
ins
fs
inc
jbe
outs
je
jb
jae
inc
jbe
outs
je
popa
outs
fs
gs
inc
js
gs
imul
je
jb
dec
outs
outs
add
jae
gs
cs
ins
outs
bound
imul
add
ins
bound
push
je
ins
gs
inc
jne
add
jae
outs
arpl
jae
ins
je
dec
inc
outs
ins
jo
jb
bound
xor
dec
inc
outs
outs
jbe
jb
imul
imul
ins
add
outs
jb
popa
je
jb
jbe
fs
dec
outs
je
add
je
xor
dec
outs
je
xor
dec
outs
je
je
add
jbe
ins
imul
imul
jo
imul
popa
jb
push
gs
fs
push
jns
je
ins
cs
dec
add
outs
popa
jb
push
jb
je
jb
inc
outs
ins
jo
gs
imul
add
jae
gs
cs
dec
cs
outs
ins
jo
gs
imul
ins
popa
je
push
je
gs
ins
add
arpl
jns
inc
imul
jns
outs
outs
add
ins
add
ins
gs
arpl
jae
add
ins
gs
outs
outs
add
ins
gs
outs
fs
ins
gs
push
inc
imul
ins
add
ins
gs
jns
je
ins
inc
jbe
outs
je
jb
jae
inc
imul
ins
inc
jbe
outs
je
popa
outs
fs
gs
inc
imul
ins
dec
outs
outs
add
ins
gs
jns
je
ins
push
popa
je
push
dec
inc
js
gs
imul
outs
jb
push
je
gs
ins
add
je
data16
imul
popa
je
add
outs
popa
ins
gs
jbe
outs
je
jb
jae
push
outs
popa
ins
gs
jbe
outs
je
popa
outs
fs
gs
push
gs
imul
popa
ins
add
jb
popa
ins
push
gs
fs
push
je
gs
ins
push
jb
je
jb
push
je
imul
gs
push
je
imul
gs
push
gs
push
gs
fs
push
gs
push
jb
je
jb
dec
popa
outs
popa
gs
outs
je
popa
jae
dec
bound
arpl
popa
outs
popa
gs
outs
je
bound
arpl
popa
outs
popa
gs
outs
je
bound
arpl
ins
ins
arpl
outs
add
outs
popa
gs
outs
je
bound
arpl
jne
gs
je
jb
dec
popa
outs
popa
gs
outs
je
bound
arpl
popa
jb
push
bound
arpl
gs
add
jb
push
push
gs
bound
arpl
popa
je
add
fs
gs
popa
outs
fs
add
ins
je
arpl
je
gs
gs
je
add
je
push
gs
gs
inc
popa
arpl
dec
gs
ins
add
jae
gs
cs
gs
inc
popa
arpl
add
je
push
gs
gs
inc
popa
arpl
push
outs
ins
imul
jne
jae
inc
popa
arpl
push
outs
ins
imul
jo
je
je
jae
outs
fs
jae
gs
cs
gs
dec
je
jo
bound
jno
gs
add
je
push
bound
jae
outs
outs
jae
add
inc
outs
fs
outs
imul
ins
outs
bound
push
jb
jo
jb
imul
je
ins
cs
gs
dec
gs
outs
jb
dec
outs
outs
jb
popa
je
outs
outs
add
inc
outs
outs
outs
arpl
outs
dec
outs
outs
jb
popa
je
outs
outs
add
bound
arpl
je
outs
outs
add
bound
popa
fs
outs
ins
ins
arpl
outs
add
bound
jno
gs
add
bound
jae
outs
outs
jae
add
je
ins
jo
gs
outs
je
fs
js
gs
imul
push
jne
jo
jb
gs
js
gs
imul
ins
popa
bound
xor
dec
bound
arpl
bound
arpl
jae
outs
jae
fs
js
gs
imul
jb
je
outs
addr16
jns
je
ins
add
jb
ins
inc
jb
popa
jns
je
jb
bound
add
popa
je
outs
jb
dec
inc
add
gs
add
outs
outs
ins
add
jae
ins
bound
push
jns
je
ins
cs
gs
arpl
outs
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jne
je
jb
inc
je
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
popa
ins
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
imul
imul
jae
gs
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
gs
imul
imul
imul
imul
ins
popa
addr16
inc
outs
outs
jae
jb
arpl
dec
outs
outs
add
popa
ins
imul
outs
add
jae
gs
cs
gs
arpl
outs
cs
ins
imul
imul
add
inc
outs
fs
inc
outs
fs
dec
jo
jb
outs
fs
jns
add
outs
popa
je
jb
dec
gs
jo
jb
inc
jbe
outs
je
outs
outs
add
arpl
je
outs
outs
dec
popa
outs
fs
imul
jae
dec
jo
imul
gs
fs
outs
outs
add
jne
je
ins
inc
je
jb
bound
gs
jb
jbe
fs
dec
outs
arpl
push
popa
jb
popa
bound
outs
outs
add
ins
bound
inc
imul
ins
bound
dec
outs
outs
add
ins
bound
push
jns
gs
dec
gs
outs
fs
popa
jae
add
je
outs
fs
outs
fs
dec
gs
outs
fs
outs
outs
add
fs
add
jb
ins
gs
jb
outs
outs
add
jb
ins
gs
jb
outs
imul
jb
jo
jb
jns
outs
outs
add
addr16
popa
jb
ins
gs
jb
outs
jne
je
js
gs
imul
outs
ins
jbe
inc
jbe
outs
je
jb
jae
push
gs
ins
jbe
inc
jbe
outs
je
popa
outs
fs
gs
push
gs
jne
arpl
popa
outs
popa
addr16
push
jns
je
ins
cs
gs
jne
arpl
add
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jo
jb
jae
dec
ins
fs
jae
inc
je
jb
bound
add
ins
push
imul
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
ins
dec
ins
jo
jb
inc
je
jb
bound
add
dec
inc
push
dec
dec
inc
add
outs
jne
dec
imul
jae
popa
ins
add
jb
push
inc
je
jb
bound
add
je
je
jb
bound
add
jb
arpl
jns
jne
inc
je
jb
bound
add
ins
popa
outs
popa
addr16
jns
add
outs
je
ins
gs
imul
fs
add
outs
je
ins
gs
gs
outs
fs
popa
outs
fs
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
jns
add
inc
jb
jo
outs
push
gs
imul
imul
je
ins
cs
arpl
imul
je
addr16
jo
jns
dec
popa
jae
inc
ins
outs
jb
je
ins
add
jb
jo
outs
push
jb
outs
jae
outs
jb
add
inc
xor
popa
gs
ins
ins
gs
imul
imul
je
jb
je
arpl
outs
inc
js
gs
imul
je
ins
cs
arpl
imul
je
je
push
gs
outs
arpl
push
jns
je
ins
cs
arpl
imul
arpl
popa
ins
add
inc
arpl
jne
je
push
arpl
imul
imul
outs
imul
arpl
jae
dec
gs
ins
jae
push
outs
imul
ins
jo
jb
outs
outs
popa
je
outs
outs
dec
gs
ins
add
outs
outs
ja
dec
fs
je
je
add
outs
ins
add
jb
outs
add
jb
outs
addr16
outs
ins
jo
jb
jae
outs
add
jb
outs
addr16
jo
imul
jae
push
jns
je
ins
inc
js
gs
imul
outs
imul
je
ins
cs
gs
add
jo
jne
add
jae
gs
cs
gs
cs
gs
popa
jb
js
jb
jae
imul
outs
jne
add
outs
jne
inc
outs
ins
ins
arpl
outs
add
je
push
arpl
jbe
ins
jne
je
jb
push
gs
push
gs
jo
imul
jb
outs
addr16
jne
ins
fs
dec
outs
je
jb
outs
arpl
add
jae
gs
cs
push
imul
imul
gs
add
gs
fs
bound
je
js
gs
imul
gs
fs
outs
je
jb
jne
je
fs
js
gs
imul
gs
fs
je
jb
add
gs
push
imul
ins
bound
imul
imul
add
add
gs
outs
fs
outs
je
add
outs
je
xor
push
dec
outs
je
xor
push
dec
outs
je
je
add
imul
gs
jns
add
jb
imul
add
je
inc
outs
outs
je
js
add
je
push
gs
outs
outs
jae
add
je
push
outs
push
gs
js
gs
imul
je
dec
popa
outs
fs
gs
inc
ins
imul
imul
addr16
push
jns
je
ins
cs
bound
push
dec
add
outs
je
outs
ins
add
add
dec
outs
fs
gs
fs
xor
arpl
bound
popa
cmp
xor
bound
xor
xor
ss
data16
add
xor
xor
xor
xor
cs
add
jae
ins
bound
outs
outs
inc
je
jb
bound
add
bound
fs
arpl
fs
xor
cmp
data16
cmp
data16
arpl
aaa
arpl
gs
aaa
data16
xor
xor
ss
xor
add
xor
popa
cmp
xor
xor
xor
xor
xor
xor
arpl
xor
popa
popa
xor
aaa
aaa
xor
data16
aaa
aaa
arpl
fs
xor
xor
arpl
cmp
xor
arpl
aaa
aaa
xor
popa
xor
xor
xor
bound
popa
popa
add
cmp
data16
bound
xor
data16
arpl
xor
cmp
xor
arpl
add
cmp
data16
xor
popa
bound
xor
popa
aaa
xor
xor
xor
cmp
arpl
arpl
xor
xor
xor
xor
xor
ss
xor
cmp
xor
xor
xor
cmp
popa
ss
bound
xor
xor
arpl
xor
arpl
xor
xor
xor
bound
gs
xor
popa
aaa
xor
cmp
cmp
arpl
data16
bound
xor
xor
arpl
xor
xor
xor
cmp
data16
xor
xor
xor
bound
xor
ss
popa
xor
xor
cmp
xor
cmp
add
xor
xor
xor
xor
xor
aaa
xor
gs
ss
xor
cmp
arpl
xor
gs
xor
cmp
xor
cmp
xor
xor
cmp
xor
arpl
xor
aaa
xor
cmp
xor
xor
xor
bound
popa
xor
xor
arpl
bound
data16
xor
popa
xor
xor
xor
xor
xor
arpl
bound
add
xor
popa
data16
cmp
bound
aaa
xor
arpl
cmp
xor
data16
arpl
xor
popa
cmp
xor
xor
cmp
arpl
cmp
xor
xor
add
xor
cmp
xor
fs
xor
cmp
xor
popa
xor
arpl
cmp
xor
data16
xor
xor
cmp
aaa
xor
add
xor
bound
xor
xor
gs
popa
cmp
xor
xor
arpl
arpl
xor
xor
xor
ss
xor
xor
xor
xor
arpl
cmp
xor
xor
cmp
bound
arpl
popa
arpl
xor
xor
arpl
add
popa
arpl
cmp
aaa
gs
bound
data16
xor
xor
data16
add
cmp
xor
arpl
xor
arpl
aaa
xor
cmp
xor
add
xor
bound
xor
popa
bound
bound
data16
xor
cmp
cmp
arpl
gs
bound
cmp
xor
xor
cmp
bound
data16
arpl
aaa
cmp
xor
bound
xor
aaa
xor
cmp
arpl
data16
xor
arpl
arpl
cmp
cmp
gs
arpl
xor
bound
xor
aaa
xor
xor
ss
cmp
xor
xor
xor
data16
ss
arpl
aaa
xor
cmp
arpl
cmp
bound
xor
cmp
bound
xor
xor
xor
aaa
bound
data16
arpl
bound
bound
bound
xor
cmp
fs
xor
add
fs
bound
inc
gs
je
jo
inc
outs
ins
ins
outs
outs
add
xor
xor
cmp
cmp
aaa
xor
xor
popa
xor
arpl
xor
xor
xor
arpl
arpl
ss
fs
xor
aaa
xor
bound
popa
aaa
popa
cmp
xor
bound
xor
add
cmp
popa
xor
bound
fs
arpl
xor
xor
data16
xor
aaa
xor
add
xor
xor
xor
popa
bound
xor
xor
xor
xor
xor
data16
data16
xor
popa
xor
dec
fs
je
imul
gs
outs
outs
jae
data16
dec
jae
outs
add
bound
cmp
ss
cmp
xor
cmp
cmp
xor
arpl
popa
cmp
dec
inc
jb
popa
jns
dec
popa
jbe
push
arpl
jo
inc
outs
outs
jae
jb
arpl
add
jbe
push
arpl
jo
push
popa
jb
ins
gs
jb
add
bound
arpl
jae
outs
inc
outs
outs
jbe
jb
add
outs
outs
inc
outs
outs
jbe
jb
gs
arpl
xor
bound
bound
cmp
fs
xor
xor
data16
jae
outs
inc
outs
outs
jbe
jb
gs
outs
ins
ins
arpl
outs
add
cmp
bound
arpl
xor
popa
xor
xor
xor
data16
add
outs
outs
dec
popa
outs
fs
gs
dec
jae
outs
dec
outs
outs
jb
inc
je
jb
bound
add
outs
outs
push
jb
jo
jb
jns
je
jb
bound
add
outs
outs
push
gs
fs
arpl
gs
xor
xor
xor
bound
aaa
bound
cmp
cmp
xor
xor
add
outs
outs
push
gs
fs
js
gs
imul
outs
push
gs
popa
ins
imul
inc
js
gs
imul
gs
outs
arpl
outs
outs
jo
popa
outs
fs
imul
outs
push
gs
popa
ins
imul
outs
outs
push
outs
imul
arpl
aaa
xor
arpl
xor
cmp
xor
aaa
xor
bound
arpl
add
imul
add
jb
popa
je
imul
outs
push
jb
je
jb
arpl
bound
cmp
cmp
xor
xor
xor
xor
xor
xor
bound
add
outs
outs
push
jb
je
jb
js
gs
imul
cmp
xor
popa
xor
xor
arpl
xor
cmp
cmp
gs
add
arpl
xor
cmp
arpl
aaa
arpl
xor
ss
xor
bound
cmp
xor
xor
arpl
xor
xor
cmp
xor
arpl
popa
xor
xor
cmp
data16
bound
arpl
popa
xor
xor
cmp
xor
arpl
ss
xor
xor
gs
cmp
xor
xor
xor
aaa
bound
cmp
popa
cmp
xor
xor
xor
arpl
arpl
bound
xor
xor
xor
data16
xor
xor
data16
data16
arpl
xor
xor
bound
xor
bound
xor
cmp
xor
cmp
add
cmp
xor
fs
xor
bound
xor
aaa
xor
popa
bound
gs
xor
arpl
xor
xor
cmp
arpl
xor
xor
aaa
data16
bound
aaa
fs
xor
bound
add
arpl
xor
xor
arpl
arpl
xor
xor
data16
data16
popa
pusha
xor
arpl
popaw
gs
bound
xor
aaa
xor
xor
popaw
bound
cmp
cmp
add
cmp
bound
aaa
xor
xor
xor
xor
aaa
ss
cmp
arpl
xor
popa
xor
gs
aaa
fs
popa
xor
aaa
cmp
arpl
xor
xor
xor
xor
xor
xor
cmp
data16
xor
xor
arpl
popa
xor
data16
xor
xor
ss
bound
xor
cmp
xor
arpl
cmp
fs
xor
xor
bound
aaa
cmp
xor
xor
cmp
xor
xor
arpl
ss
xor
cmp
aaa
xor
xor
arpl
xor
aaa
arpl
add
cmp
arpl
xor
xor
cmp
xor
gs
bound
aaa
xor
arpl
aaa
add
fs
cmp
bound
bound
xor
xor
xor
xor
aaa
cmp
cmp
cmp
xor
arpl
bound
xor
popa
aaa
xor
data16
cmp
popa
xor
xor
arpl
xor
xor
xor
xor
popa
arpl
arpl
cmp
xor
aaa
xor
xor
xor
arpl
xor
data16
xor
cmp
xor
cmp
arpl
popa
add
xor
xor
cmp
cmp
xor
cmp
xor
popa
popa
xor
xor
add
data16
xor
aaa
cmp
xor
xor
ss
popa
xor
cmp
aaa
aaa
arpl
add
xor
xor
popa
xor
xor
arpl
xor
xor
popa
xor
xor
xor
xor
xor
arpl
popa
cmp
xor
cmp
cmp
popa
bound
aaa
fs
cmp
xor
add
xor
arpl
fs
xor
cmp
aaa
data16
xor
xor
xor
bound
xor
arpl
add
xor
arpl
arpl
xor
cmp
popa
xor
bound
xor
xor
cmp
add
gs
gs
xor
popa
aaa
aaa
xor
gs
cmp
popa
xor
xor
xor
add
xor
xor
gs
popa
popa
xor
popa
xor
arpl
xor
aaa
popa
bound
popa
popa
arpl
add
xor
xor
bound
xor
xor
xor
cmp
cmp
xor
add
popa
xor
aaa
data16
cmp
xor
arpl
xor
xor
bound
xor
xor
xor
xor
cmp
xor
bound
aaa
cmp
ss
add
xor
bound
fs
xor
xor
xor
xor
popa
cmp
xor
xor
cmp
data16
bound
gs
xor
xor
xor
cmp
fs
xor
xor
xor
xor
ss
xor
xor
ss
aaa
cmp
xor
ss
arpl
xor
arpl
cmp
data16
ins
jne
imul
je
jo
inc
jb
ja
gs
fs
jo
gs
arpl
cmp
cmp
aaa
xor
xor
xor
cmp
cmp
xor
ss
arpl
popa
xor
popa
xor
xor
cmp
popa
add
arpl
xor
xor
fs
xor
xor
xor
aaa
xor
xor
arpl
xor
xor
aaa
xor
arpl
cmp
aaa
cmp
xor
arpl
xor
xor
xor
cmp
xor
bound
bound
arpl
popa
xor
arpl
cmp
xor
xor
xor
xor
xor
bound
xor
arpl
data16
bound
gs
cmp
bound
xor
cmp
xor
cmp
xor
xor
cmp
arpl
xor
xor
aaa
aaa
arpl
xor
gs
cmp
aaa
xor
xor
aaa
add
xor
gs
bound
aaa
cmp
xor
cmp
arpl
popaw
arpl
xor
cmp
xor
xor
arpl
xor
xor
xor
aaa
xor
popa
gs
xor
xor
xor
xor
xor
arpl
cmp
cmp
xor
xor
ss
xor
bound
xor
cmp
fs
gs
xor
xor
xor
gs
gs
xor
xor
arpl
bound
arpl
ss
cmp
data16
gs
data16
xor
xor
cmp
xor
xor
arpl
xor
cmp
xor
xor
bound
aaa
xor
gs
xor
gs
arpl
add
data16
cmp
xor
xor
fs
xor
ss
xor
cmp
arpl
outs
jb
arpl
data16
popa
arpl
aaa
bound
cmp
cmp
xor
aaa
xor
cmp
xor
arpl
xor
xor
arpl
xor
xor
cmp
xor
cmp
xor
arpl
add
xor
xor
cmp
cmp
data16
xor
xor
xor
gs
add
aaa
xor
fs
cmp
bound
xor
xor
aaa
popa
fs
xor
popa
xor
bound
arpl
cmp
xor
xor
xor
xor
cmp
fs
xor
popa
xor
arpl
add
cmp
xor
xor
xor
data16
cmp
xor
data16
xor
add
cmp
xor
xor
data16
data16
bound
cmp
data16
cmp
data16
cmp
xor
xor
xor
xor
bound
cmp
xor
xor
cmp
xor
add
je
imul
aaa
popa
cmp
gs
xor
xor
xor
fs
xor
cmp
aaa
add
xor
xor
data16
xor
data16
bound
xor
gs
popa
xor
je
add
ins
jne
pop
pop
add
data16
popa
xor
popa
popa
xor
xor
gs
arpl
data16
aaa
xor
popa
xor
add
cmp
xor
fs
xor
xor
xor
xor
aaa
gs
xor
cmp
bound
data16
aaa
popa
gs
cmp
xor
cmp
xor
xor
xor
add
arpl
xor
ss
bound
xor
fs
xor
popa
ss
xor
fs
arpl
popa
aaa
popa
aaa
xor
ss
data16
xor
xor
bound
arpl
arpl
xor
arpl
bound
aaa
xor
xor
cmp
popa
bound
xor
xor
aaa
xor
cmp
arpl
xor
xor
arpl
popa
aaa
xor
data16
xor
xor
xor
add
xor
xor
cmp
cmp
cmp
xor
xor
xor
xor
xor
data16
xor
xor
bound
ss
arpl
xor
gs
data16
cmp
xor
xor
xor
xor
bound
aaa
xor
aaa
xor
xor
cmp
data16
xor
add
cmp
popa
bound
cmp
gs
cmp
xor
popaw
popa
ss
xor
aaa
popaw
xor
arpl
xor
aaa
bound
xor
xor
xor
xor
cmp
cmp
popa
cmp
arpl
xor
xor
bound
xor
xor
popa
cmp
ss
xor
xor
add
aaa
bound
xor
xor
xor
cmp
aaa
aaa
xor
xor
ss
xor
add
ss
aaa
gs
data16
bound
cmp
xor
bound
xor
xor
add
xor
xor
fs
xor
cmp
arpl
xor
arpl
cmp
xor
add
xor
arpl
arpl
arpl
cmp
cmp
xor
arpl
aaa
bound
xor
xor
arpl
cmp
xor
cmp
cmp
xor
xor
data16
xor
xor
add
bound
arpl
data16
xor
bound
xor
xor
cmp
gs
data16
popa
aaa
bound
cmp
aaa
cmp
xor
aaa
popa
cmp
xor
xor
aaa
xor
add
popa
xor
bound
popa
xor
arpl
xor
arpl
arpl
xor
gs
bound
arpl
gs
cmp
xor
xor
popa
bound
bound
ss
xor
popa
add
bound
fs
popa
xor
xor
gs
aaa
xor
xor
popa
ss
data16
aaa
popa
popa
xor
ss
fs
popa
arpl
bound
bound
xor
arpl
cmp
xor
xor
arpl
xor
xor
aaa
xor
popa
fs
fs
bound
xor
xor
aaa
add
xor
cmp
aaa
xor
arpl
xor
aaa
xor
xor
popa
xor
xor
add
popa
bound
popa
aaa
bound
xor
xor
data16
xor
xor
xor
xor
add
bound
xor
xor
gs
fs
aaa
arpl
popa
popa
xor
cmp
xor
xor
xor
arpl
xor
cmp
xor
xor
cmp
arpl
cmp
popa
xor
bound
xor
add
bound
bound
cmp
xor
fs
arpl
aaa
xor
arpl
xor
aaa
arpl
xor
add
popa
gs
popa
xor
arpl
xor
aaa
arpl
ss
xor
cmp
xor
arpl
cmp
xor
xor
xor
bound
cmp
xor
xor
cmp
arpl
data16
data16
aaa
xor
fs
fs
arpl
xor
add
ss
arpl
arpl
gs
xor
fs
xor
bound
gs
arpl
fs
xor
ss
cmp
cmp
popa
cmp
bound
aaa
xor
arpl
xor
bound
cmp
arpl
arpl
aaa
popa
gs
xor
cmp
gs
xor
xor
xor
arpl
bound
bound
xor
cmp
xor
xor
cmp
xor
xor
xor
xor
data16
cmp
cmp
xor
data16
popa
cmp
xor
xor
xor
popa
cmp
arpl
cmp
popa
bound
bound
xor
ss
bound
cmp
xor
data16
add
arpl
arpl
data16
xor
arpl
xor
xor
xor
arpl
xor
cmp
xor
xor
xor
xor
xor
bound
cmp
ss
cmp
cmp
xor
arpl
cmp
aaa
xor
xor
cmp
bound
cmp
bound
arpl
xor
bound
gs
xor
add
cmp
xor
xor
popa
xor
xor
bound
gs
popa
arpl
aaa
cmp
xor
xor
xor
xor
data16
xor
arpl
cmp
xor
gs
cmp
aaa
xor
ss
xor
bound
ss
xor
arpl
xor
aaa
add
ss
gs
popa
ss
xor
popa
ss
arpl
add
arpl
cmp
cmp
xor
xor
xor
arpl
bound
cmp
ss
xor
cmp
arpl
ss
data16
fs
ss
xor
xor
popa
add
popa
xor
xor
xor
xor
xor
popa
xor
data16
bound
fs
add
cmp
fs
xor
xor
gs
bound
bound
xor
xor
add
xor
arpl
xor
fs
aaa
bound
cmp
xor
popa
arpl
xor
bound
arpl
arpl
bound
bound
cmp
aaa
xor
bound
popa
bound
arpl
xor
bound
arpl
xor
xor
popa
popa
xor
xor
cmp
cmp
xor
aaa
xor
xor
arpl
xor
arpl
xor
arpl
data16
cmp
xor
xor
cmp
gs
popaw
add
ss
xor
bound
bound
xor
cmp
xor
xor
cmp
arpl
cmp
xor
gs
cmp
cmp
xor
xor
xor
xor
arpl
arpl
xor
xor
xor
xor
cmp
xor
aaa
xor
cmp
bound
popa
add
arpl
xor
bound
xor
bound
xor
bound
cmp
xor
xor
arpl
popa
xor
arpl
xor
xor
xor
cmp
cmp
xor
xor
cmp
cmp
add
arpl
xor
cmp
xor
cmp
cmp
data16
cmp
xor
add
xor
xor
gs
xor
xor
arpl
cmp
aaa
xor
arpl
add
xor
ss
ss
xor
xor
ss
bound
add
popa
cmp
popa
cmp
cmp
popa
aaa
cmp
data16
xor
xor
arpl
xor
aaa
xor
xor
arpl
arpl
aaa
cmp
cmp
cmp
xor
add
xor
cmp
ss
xor
xor
xor
xor
xor
aaa
gs
popa
aaa
add
xor
xor
xor
arpl
xor
xor
arpl
xor
popa
cmp
xor
data16
arpl
fs
cmp
xor
gs
xor
xor
xor
cmp
bound
arpl
xor
fs
cmp
cmp
popa
xor
aaa
xor
aaa
cmp
xor
add
gs
cmp
xor
arpl
xor
arpl
xor
add
xor
bound
fs
xor
xor
aaa
xor
aaa
xor
xor
xor
xor
add
xor
popaw
popa
xor
arpl
xor
xor
xor
xor
data16
arpl
popa
xor
arpl
popa
xor
cmp
xor
cmp
data16
xor
cmp
bound
xor
cmp
arpl
xor
bound
xor
bound
xor
bound
bound
xor
xor
xor
xor
add
xor
cmp
xor
cmp
aaa
data16
cmp
aaa
arpl
xor
add
xor
xor
arpl
popa
fs
arpl
bound
xor
ss
xor
bound
add
popa
xor
aaa
xor
cmp
aaa
xor
xor
bound
xor
popa
xor
data16
add
popa
xor
xor
arpl
xor
popa
xor
xor
popa
xor
xor
ss
fs
add
ss
bound
bound
gs
fs
data16
xor
data16
cmp
xor
add
fs
fs
xor
arpl
cmp
arpl
bound
xor
fs
xor
data16
popa
bound
xor
bound
xor
cmp
xor
cmp
ss
xor
popa
cmp
xor
xor
xor
popa
bound
fs
fs
cmp
arpl
xor
xor
bound
aaa
fs
xor
aaa
cmp
xor
aaa
bound
xor
arpl
xor
popa
bound
arpl
xor
cmp
arpl
xor
xor
xor
add
popa
arpl
xor
xor
cmp
popa
cmp
popa
popa
xor
xor
aaa
bound
data16
xor
popa
data16
xor
xor
bound
xor
xor
xor
popa
add
xor
bound
popa
xor
xor
xor
cmp
cmp
popa
xor
popa
xor
xor
arpl
gs
xor
xor
popa
ss
xor
xor
xor
xor
xor
xor
xor
xor
popa
xor
gs
popa
xor
xor
arpl
xor
xor
add
popa
cmp
data16
xor
xor
xor
data16
xor
cmp
bound
xor
arpl
xor
xor
arpl
aaa
xor
xor
data16
arpl
xor
popa
popa
xor
arpl
bound
xor
cmp
cmp
fs
xor
cmp
cmp
xor
add
cmp
xor
fs
arpl
xor
ss
aaa
xor
aaa
cmp
xor
bound
popa
gs
add
popa
xor
arpl
cmp
xor
bound
xor
xor
xor
arpl
popa
fs
cmp
arpl
xor
xor
cmp
bound
xor
cmp
cmp
cmp
fs
data16
add
arpl
popa
bound
xor
data16
bound
cmp
xor
xor
bound
xor
arpl
arpl
popaw
popa
fs
xor
arpl
bound
xor
bound
data16
data16
add
arpl
fs
arpl
xor
xor
xor
popa
xor
xor
popa
xor
data16
arpl
arpl
cmp
bound
xor
xor
xor
xor
arpl
xor
xor
cmp
cmp
xor
xor
ss
xor
xor
data16
xor
bound
cmp
xor
cmp
cmp
bound
popa
aaa
xor
arpl
bound
xor
ss
xor
popa
bound
arpl
xor
xor
xor
add
aaa
xor
xor
bound
xor
cmp
bound
xor
aaa
aaa
popa
popa
xor
cmp
bound
arpl
gs
xor
arpl
gs
xor
ss
xor
add
xor
xor
bound
xor
popa
ss
xor
xor
xor
xor
aaa
xor
arpl
cmp
popa
bound
cmp
xor
cmp
xor
gs
arpl
xor
arpl
cmp
arpl
arpl
arpl
bound
cmp
aaa
cmp
bound
arpl
xor
data16
xor
xor
fs
xor
bound
xor
xor
xor
popa
xor
xor
aaa
data16
bound
xor
xor
xor
aaa
cmp
xor
xor
xor
add
xor
popa
cmp
xor
fs
xor
xor
xor
xor
add
popa
aaa
cmp
xor
xor
xor
fs
xor
aaa
cmp
xor
xor
add
xor
xor
gs
cmp
xor
aaa
cmp
cmp
popa
xor
add
xor
bound
xor
data16
popa
xor
bound
xor
xor
xor
xor
cmp
popa
xor
xor
fs
popa
ss
xor
cmp
aaa
xor
arpl
xor
popa
bound
xor
bound
xor
xor
popa
xor
ss
bound
xor
aaa
cmp
arpl
xor
data16
xor
bound
ss
ss
ss
xor
cmp
data16
xor
popa
xor
xor
xor
xor
popa
arpl
xor
ss
xor
bound
xor
arpl
xor
ss
xor
arpl
gs
arpl
fs
fs
bound
cmp
add
xor
aaa
xor
bound
ss
xor
bound
xor
data16
bound
xor
popaw
add
aaa
aaa
cmp
ss
xor
arpl
cmp
bound
arpl
xor
popa
popa
xor
xor
add
arpl
bound
cmp
cmp
bound
xor
popa
xor
arpl
xor
popa
add
cmp
xor
xor
aaa
bound
cmp
arpl
xor
xor
xor
xor
add
bound
arpl
xor
xor
cmp
popa
ss
xor
xor
add
xor
xor
xor
xor
xor
xor
xor
arpl
popa
aaa
gs
xor
add
ss
cmp
aaa
gs
xor
xor
xor
arpl
xor
arpl
aaa
xor
xor
xor
bound
bound
gs
xor
popa
cmp
xor
arpl
cmp
xor
arpl
popaw
arpl
xor
data16
popa
xor
gs
xor
arpl
aaa
xor
xor
cmp
data16
cmp
xor
cmp
xor
xor
cmp
xor
bound
xor
xor
bound
aaa
xor
popa
xor
aaa
xor
xor
xor
xor
xor
arpl
popa
cmp
popa
xor
xor
ss
xor
aaa
cmp
xor
fs
add
xor
gs
popa
xor
xor
xor
data16
aaa
xor
data16
xor
add
arpl
xor
popa
xor
bound
cmp
xor
arpl
gs
bound
xor
arpl
arpl
cmp
bound
xor
bound
xor
bound
cmp
xor
arpl
arpl
ss
xor
gs
xor
arpl
arpl
cmp
arpl
arpl
xor
xor
fs
bound
bound
fs
xor
cmp
xor
fs
popa
xor
xor
popa
xor
xor
data16
aaa
data16
xor
xor
cmp
arpl
arpl
gs
xor
xor
bound
cmp
xor
xor
ss
arpl
xor
add
xor
popa
xor
ss
xor
xor
xor
ss
xor
xor
add
xor
bound
gs
bound
bound
xor
arpl
xor
xor
fs
add
aaa
xor
xor
popa
xor
xor
xor
xor
popa
xor
bound
data16
xor
cmp
xor
cmp
popa
xor
aaa
xor
xor
xor
xor
arpl
xor
xor
cmp
xor
xor
ss
xor
xor
cmp
popa
popa
arpl
popa
arpl
xor
data16
xor
xor
popa
xor
xor
xor
arpl
cmp
cmp
cmp
xor
bound
xor
bound
cmp
xor
xor
arpl
gs
cmp
cmp
data16
bound
xor
xor
bound
fs
xor
arpl
arpl
xor
arpl
cmp
popa
xor
cmp
xor
popaw
xor
xor
arpl
gs
bound
cmp
xor
cmp
data16
gs
xor
ss
add
fs
aaa
xor
arpl
xor
xor
xor
cmp
bound
cmp
arpl
cmp
bound
xor
cmp
cmp
arpl
cmp
xor
data16
arpl
xor
xor
popa
bound
ss
cmp
ss
xor
xor
cmp
xor
aaa
xor
cmp
cmp
xor
cmp
xor
xor
xor
arpl
add
je
arpl
data16
xor
xor
data16
cmp
xor
xor
cmp
xor
jae
je
arpl
data16
xor
xor
data16
cmp
xor
xor
cmp
xor
addr16
dec
outs
arpl
inc
jo
inc
popa
je
push
popa
je
add
je
dec
outs
arpl
inc
jo
inc
popa
je
push
popa
je
add
ins
jne
add
je
push
outs
popa
ins
imul
popa
je
push
popa
je
add
je
push
outs
popa
ins
imul
popa
je
push
popa
je
add
je
push
imul
outs
je
imul
add
je
push
imul
outs
je
imul
add
data16
arpl
xor
popa
cmp
bound
bound
xor
data16
xor
bound
data16
cmp
bound
xor
popa
xor
cmp
bound
add
xor
popa
ss
xor
fs
aaa
arpl
data16
gs
arpl
cmp
arpl
xor
aaa
xor
xor
xor
bound
aaa
xor
aaa
xor
xor
xor
ss
aaa
xor
xor
arpl
xor
xor
ss
arpl
xor
cmp
bound
xor
xor
bound
xor
popa
aaa
xor
xor
xor
popa
cmp
add
xor
xor
xor
xor
xor
xor
xor
xor
cmp
aaa
arpl
add
data16
popa
aaa
cmp
bound
cmp
xor
xor
xor
aaa
aaa
add
arpl
cmp
data16
bound
bound
bound
xor
xor
xor
arpl
xor
arpl
gs
xor
cmp
xor
cmp
xor
xor
data16
xor
cmp
aaa
xor
xor
arpl
xor
xor
xor
cmp
data16
add
xor
gs
popa
cmp
xor
popa
cmp
xor
xor
xor
xor
arpl
fs
xor
xor
data16
cmp
cmp
xor
xor
xor
add
xor
popa
xor
popa
xor
bound
cmp
xor
cmp
xor
cmp
xor
xor
add
popa
aaa
xor
xor
aaa
data16
xor
xor
popa
xor
xor
add
xor
xor
aaa
cmp
xor
xor
xor
cmp
arpl
xor
arpl
cmp
arpl
xor
xor
xor
xor
aaa
fs
popa
add
xor
xor
popa
cmp
fs
cmp
arpl
cmp
xor
arpl
xor
arpl
xor
xor
xor
cmp
xor
xor
xor
xor
cmp
bound
gs
arpl
data16
cmp
xor
bound
cmp
arpl
cmp
xor
cmp
bound
popa
xor
arpl
popa
xor
xor
arpl
xor
aaa
xor
arpl
gs
cmp
xor
aaa
add
aaa
bound
ss
xor
popa
xor
xor
xor
xor
data16
xor
fs
xor
xor
fs
xor
cmp
gs
cmp
xor
ss
cmp
add
popa
bound
xor
cmp
xor
arpl
bound
xor
data16
xor
cmp
fs
xor
add
cmp
cmp
arpl
bound
cmp
xor
bound
xor
popa
cmp
cmp
xor
add
cmp
xor
xor
popa
xor
cmp
xor
xor
xor
cmp
add
cmp
xor
bound
cmp
cmp
cmp
xor
xor
aaa
xor
xor
xor
arpl
add
aaa
arpl
arpl
xor
arpl
fs
xor
arpl
gs
xor
cmp
data16
arpl
xor
cmp
xor
cmp
data16
data16
xor
xor
xor
xor
cmp
cmp
arpl
bound
aaa
xor
arpl
aaa
xor
popa
cmp
arpl
xor
arpl
xor
xor
arpl
popa
arpl
cmp
xor
cmp
cmp
arpl
popa
xor
xor
aaa
cmp
xor
xor
xor
arpl
bound
xor
aaa
xor
xor
add
xor
xor
xor
xor
gs
aaa
xor
xor
xor
popa
add
bound
arpl
aaa
xor
xor
xor
xor
xor
data16
xor
arpl
popa
xor
xor
xor
aaa
xor
xor
fs
popa
gs
cmp
arpl
add
ss
xor
gs
xor
xor
bound
xor
xor
xor
xor
arpl
xor
bound
gs
bound
xor
cmp
xor
xor
xor
cmp
arpl
xor
cmp
xor
fs
data16
cmp
xor
xor
xor
aaa
add
xor
xor
arpl
bound
xor
xor
aaa
popa
xor
xor
xor
arpl
arpl
popa
popa
xor
xor
arpl
cmp
arpl
bound
xor
xor
cmp
arpl
arpl
add
xor
aaa
xor
cmp
popa
arpl
arpl
xor
xor
xor
bound
xor
gs
bound
xor
fs
cmp
xor
aaa
xor
aaa
data16
xor
xor
cmp
arpl
xor
xor
xor
gs
xor
xor
arpl
gs
xor
arpl
xor
xor
xor
xor
cmp
cmp
xor
popa
xor
xor
arpl
xor
aaa
cmp
cmp
xor
gs
fs
add
xor
xor
xor
gs
xor
xor
cmp
arpl
xor
arpl
cmp
bound
cmp
cmp
xor
xor
popa
xor
cmp
xor
ss
add
bound
xor
popa
data16
popa
data16
xor
aaa
arpl
bound
xor
popa
add
aaa
xor
aaa
xor
popa
cmp
bound
xor
xor
xor
popa
aaa
xor
xor
cmp
xor
popa
xor
xor
arpl
aaa
bound
xor
cmp
arpl
arpl
arpl
cmp
xor
arpl
xor
bound
xor
popa
aaa
arpl
xor
arpl
xor
cmp
data16
fs
xor
fs
popa
cmp
bound
xor
xor
add
cmp
aaa
xor
aaa
cmp
popa
popa
bound
xor
gs
arpl
popa
arpl
add
xor
bound
aaa
xor
xor
bound
xor
xor
xor
arpl
cmp
bound
aaa
xor
xor
arpl
popa
xor
xor
cmp
arpl
xor
arpl
bound
cmp
xor
ss
arpl
cmp
xor
bound
bound
xor
data16
xor
xor
fs
aaa
cmp
xor
xor
aaa
arpl
popa
xor
gs
add
xor
xor
arpl
xor
cmp
xor
data16
cmp
xor
arpl
add
fs
data16
cmp
xor
xor
xor
xor
cmp
xor
add
cmp
arpl
xor
fs
xor
fs
arpl
cmp
bound
xor
cmp
cmp
xor
arpl
xor
cmp
arpl
xor
bound
add
arpl
xor
xor
xor
xor
bound
cmp
xor
xor
add
xor
fs
bound
gs
xor
popa
xor
data16
xor
arpl
xor
fs
fs
xor
popa
xor
arpl
fs
xor
xor
arpl
xor
arpl
bound
bound
xor
xor
bound
bound
add
arpl
xor
xor
xor
ss
cmp
xor
popa
data16
xor
add
arpl
xor
xor
arpl
xor
xor
xor
popa
aaa
bound
cmp
add
bound
arpl
cmp
cmp
xor
xor
arpl
xor
xor
xor
arpl
xor
data16
bound
xor
xor
xor
xor
xor
data16
xor
xor
xor
xor
popa
xor
xor
xor
xor
popaw
popa
fs
cmp
arpl
popa
xor
aaa
xor
xor
fs
arpl
add
ss
fs
cmp
xor
xor
xor
popa
xor
xor
cmp
xor
arpl
xor
bound
cmp
popa
xor
xor
xor
xor
xor
data16
xor
add
bound
cmp
popa
xor
aaa
arpl
gs
bound
xor
xor
cmp
arpl
arpl
arpl
xor
xor
bound
xor
xor
cmp
xor
xor
arpl
arpl
xor
cmp
xor
xor
xor
fs
xor
gs
cmp
xor
xor
arpl
aaa
aaa
xor
ss
cmp
xor
cmp
data16
xor
aaa
popa
add
data16
xor
ss
xor
xor
data16
xor
cmp
arpl
arpl
ss
aaa
arpl
data16
fs
aaa
cmp
aaa
cmp
cmp
xor
cmp
add
xor
arpl
xor
xor
aaa
popa
aaa
bound
xor
popa
xor
bound
xor
xor
xor
xor
xor
bound
xor
arpl
xor
arpl
xor
cmp
xor
popa
arpl
xor
xor
gs
popa
bound
xor
ss
cmp
xor
xor
popa
xor
cmp
cmp
gs
popa
bound
xor
arpl
fs
bound
data16
cmp
cmp
popa
xor
xor
gs
ss
arpl
data16
xor
xor
bound
xor
aaa
xor
xor
bound
bound
arpl
cmp
xor
xor
xor
ss
popa
xor
cmp
cmp
ss
arpl
aaa
xor
xor
arpl
arpl
xor
xor
xor
data16
bound
cmp
add
xor
cmp
aaa
aaa
arpl
xor
cmp
xor
xor
cmp
cmp
add
xor
cmp
ss
ss
popa
xor
cmp
arpl
xor
xor
gs
arpl
cmp
aaa
xor
xor
bound
xor
xor
ss
xor
arpl
data16
arpl
data16
arpl
xor
bound
xor
arpl
xor
xor
xor
xor
arpl
gs
xor
xor
popa
xor
arpl
popa
xor
arpl
arpl
xor
xor
xor
bound
xor
xor
aaa
xor
arpl
aaa
gs
popa
xor
arpl
arpl
popa
xor
cmp
xor
add
xor
cmp
popa
cmp
aaa
xor
arpl
xor
cmp
cmp
aaa
arpl
arpl
cmp
data16
arpl
arpl
xor
xor
cmp
xor
xor
xor
add
xor
xor
bound
fs
bound
popa
xor
bound
ss
xor
add
cmp
xor
xor
bound
gs
xor
arpl
xor
xor
add
xor
xor
arpl
cmp
arpl
xor
xor
xor
arpl
aaa
xor
arpl
xor
cmp
xor
popa
xor
xor
aaa
xor
xor
popa
ss
xor
xor
bound
cmp
xor
arpl
xor
xor
xor
cmp
xor
add
bound
xor
ss
cmp
xor
cmp
xor
fs
xor
xor
arpl
xor
bound
bound
fs
arpl
xor
cmp
arpl
fs
xor
data16
arpl
ss
data16
xor
popa
cmp
arpl
xor
arpl
arpl
gs
bound
xor
xor
xor
gs
data16
xor
arpl
xor
data16
arpl
bound
arpl
xor
xor
cmp
cmp
fs
arpl
xor
xor
xor
popa
xor
xor
cmp
xor
ss
arpl
arpl
xor
bound
xor
gs
xor
cmp
xor
popa
bound
data16
popa
bound
arpl
cmp
popa
xor
arpl
bound
xor
xor
xor
xor
arpl
xor
cmp
arpl
cmp
xor
popa
bound
xor
xor
xor
aaa
data16
cmp
xor
fs
arpl
popa
cmp
popa
arpl
arpl
xor
xor
xor
xor
add
gs
xor
aaa
data16
xor
bound
xor
xor
xor
arpl
arpl
data16
fs
popa
xor
xor
bound
add
xor
gs
xor
xor
xor
bound
gs
xor
add
xor
ss
xor
xor
arpl
arpl
xor
cmp
cmp
arpl
arpl
xor
xor
xor
bound
cmp
xor
fs
aaa
data16
xor
add
xor
xor
arpl
bound
xor
popa
xor
arpl
cmp
xor
cmp
arpl
popa
bound
popa
bound
cmp
bound
cmp
xor
xor
fs
data16
xor
cmp
arpl
xor
xor
aaa
xor
arpl
xor
cmp
bound
data16
xor
xor
xor
arpl
bound
bound
xor
xor
aaa
xor
cmp
xor
arpl
cmp
add
fs
cmp
xor
aaa
xor
arpl
xor
xor
xor
add
cmp
bound
xor
xor
cmp
xor
xor
fs
arpl
arpl
xor
cmp
arpl
aaa
cmp
xor
cmp
gs
cmp
arpl
xor
bound
xor
xor
arpl
cmp
xor
ss
fs
aaa
cmp
xor
cmp
data16
xor
arpl
xor
cmp
data16
popa
xor
cmp
aaa
aaa
xor
add
xor
xor
bound
cmp
xor
gs
arpl
xor
xor
xor
popa
cmp
xor
xor
xor
popa
xor
xor
arpl
arpl
xor
xor
add
xor
xor
bound
xor
gs
xor
cmp
data16
xor
aaa
xor
xor
xor
gs
xor
xor
cmp
xor
xor
xor
gs
xor
aaa
add
xor
bound
cmp
ss
xor
xor
xor
bound
xor
ss
add
xor
popa
popa
bound
arpl
xor
arpl
xor
xor
aaa
bound
xor
arpl
cmp
xor
xor
aaa
popa
xor
xor
popa
bound
xor
cmp
xor
popa
xor
arpl
xor
cmp
xor
xor
data16
aaa
arpl
ss
xor
arpl
xor
gs
xor
xor
popa
aaa
ss
xor
arpl
bound
xor
add
xor
xor
xor
xor
arpl
xor
xor
xor
data16
cmp
xor
xor
arpl
xor
ss
ss
popa
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
ss
xor
xor
xor
aaa
xor
arpl
cmp
addr16
inc
jne
add
je
inc
jne
add
je
inc
jne
fs
jb
popa
je
add
je
inc
jne
fs
jb
popa
je
add
xor
ss
cmp
xor
arpl
xor
data16
arpl
popa
xor
arpl
add
popa
arpl
popa
xor
xor
xor
ss
xor
xor
xor
add
xor
aaa
xor
popa
xor
xor
xor
xor
xor
add
xor
popa
arpl
xor
aaa
aaa
popa
cmp
arpl
xor
xor
xor
xor
xor
arpl
xor
gs
bound
xor
xor
arpl
xor
bound
cmp
gs
arpl
arpl
aaa
xor
fs
bound
xor
xor
xor
aaa
arpl
aaa
cmp
arpl
arpl
ss
xor
bound
cmp
xor
xor
ss
bound
xor
add
bound
ss
popa
arpl
cmp
aaa
fs
xor
cmp
popa
xor
bound
cmp
xor
xor
bound
aaa
cmp
xor
cmp
xor
arpl
cmp
xor
aaa
xor
bound
gs
bound
cmp
arpl
xor
aaa
bound
cmp
add
xor
xor
cmp
bound
cmp
aaa
cmp
xor
arpl
xor
xor
xor
aaa
ss
xor
xor
xor
xor
popa
bound
bound
popa
xor
aaa
xor
aaa
cmp
add
cmp
xor
cmp
xor
xor
xor
xor
bound
cmp
xor
xor
arpl
arpl
xor
arpl
fs
ss
cmp
xor
add
xor
bound
cmp
cmp
xor
xor
xor
xor
aaa
xor
popa
add
data16
gs
popa
xor
arpl
xor
popa
cmp
aaa
arpl
xor
popa
xor
arpl
cmp
arpl
xor
arpl
xor
xor
xor
fs
arpl
xor
arpl
cmp
cmp
xor
xor
xor
xor
bound
xor
outs
bound
arpl
gs
outs
add
jbe
imul
jb
arpl
jae
popa
outs
fs
add
outs
arpl
jae
outs
outs
jb
popa
je
outs
outs
inc
ins
popa
jae
add
outs
arpl
jae
outs
outs
jb
popa
je
outs
outs
add
outs
arpl
jae
outs
outs
jb
popa
je
outs
outs
dec
outs
addr16
add
je
jb
dec
outs
addr16
add
imul
add
ins
ins
bound
imul
outs
fs
outs
jbe
imul
gs
ins
je
arpl
xor
arpl
bound
aaa
cmp
arpl
cmp
cmp
gs
aaa
add
fs
arpl
bound
data16
xor
xor
xor
ss
bound
xor
add
bound
data16
xor
xor
xor
cmp
ss
xor
xor
xor
xor
arpl
data16
cmp
xor
xor
xor
cmp
xor
xor
data16
xor
popa
xor
bound
arpl
gs
xor
cmp
cmp
xor
xor
arpl
bound
cmp
xor
xor
cmp
xor
arpl
arpl
xor
gs
data16
jne
push
outs
jb
add
cmp
xor
aaa
xor
xor
aaa
xor
xor
popa
popa
data16
xor
arpl
arpl
xor
cmp
aaa
xor
xor
bound
popa
bound
gs
xor
cmp
xor
xor
xor
arpl
cmp
popa
fs
aaa
gs
popa
xor
xor
xor
aaa
cmp
add
cmp
xor
arpl
xor
xor
bound
xor
fs
xor
xor
xor
add
push
ins
jne
imul
add
push
gs
imul
je
popa
ins
imul
je
ins
gs
gs
imul
pop
arpl
aaa
xor
xor
xor
xor
xor
bound
xor
xor
aaa
add
je
gs
imul
jb
add
imul
gs
imul
imul
outs
outs
add
je
ins
jne
imul
inc
outs
push
je
jb
add
outs
jo
inc
outs
push
je
jo
dec
outs
jae
popa
ins
ins
add
imul
add
outs
imul
add
jo
inc
outs
inc
jne
jo
ins
jo
jne
jo
je
je
imul
gs
bound
popa
xor
xor
data16
cmp
xor
ss
cmp
xor
arpl
xor
xor
xor
cmp
ss
popa
xor
bound
xor
bound
push
gs
add
inc
bound
addr16
jb
jae
outs
je
ja
add
jb
ins
add
gs
xor
fs
xor
cmp
cmp
xor
data16
outs
popa
ins
add
je
dec
popa
ins
add
arpl
xor
xor
xor
xor
aaa
cmp
bound
popa
xor
cmp
xor
arpl
xor
inc
jno
popa
ins
jae
outs
bound
data16
arpl
outs
add
bound
inc
gs
popa
jae
inc
outs
fs
pop
inc
jno
popa
ins
imul
outs
gs
popa
ins
imul
jne
inc
jne
arpl
arpl
ins
arpl
outs
add
jo
arpl
jns
arpl
xor
ss
xor
xor
popa
xor
xor
popa
xor
aaa
xor
xor
xor
jo
jb
ins
gs
jb
add
je
push
popa
jb
ins
gs
jb
add
jo
jns
ins
imul
popa
push
arpl
jo
dec
bound
arpl
gs
imul
jbe
ins
add
je
push
jb
add
ins
jae
add
ins
ins
add
fs
arpl
xor
xor
bound
ss
arpl
ss
popa
data16
aaa
arpl
cmp
bound
add
xor
fs
xor
xor
xor
xor
xor
cmp
bound
add
xor
xor
data16
ss
xor
xor
xor
arpl
xor
arpl
gs
arpl
data16
ss
bound
xor
bound
data16
xor
add
imul
gs
popa
ins
imul
arpl
outs
fs
je
add
outs
jbe
jb
gs
add
gs
popa
ins
imul
arpl
jns
add
imul
ja
imul
fs
jae
outs
add
popa
fs
outs
bound
arpl
jo
add
outs
inc
outs
outs
jbe
jb
add
xor
popa
xor
bound
xor
fs
cmp
arpl
xor
add
data16
xor
xor
bound
bound
bound
cmp
gs
bound
data16
cmp
arpl
xor
cmp
xor
popa
xor
aaa
cmp
gs
xor
popa
bound
popa
add
xor
cmp
cmp
xor
popa
xor
xor
ss
xor
aaa
arpl
add
cmp
xor
xor
xor
xor
arpl
popa
xor
cmp
bound
fs
arpl
cmp
xor
xor
xor
xor
xor
xor
bound
gs
xor
aaa
add
xor
xor
xor
xor
cmp
cmp
bound
xor
xor
arpl
data16
arpl
cmp
xor
ss
xor
xor
xor
cmp
xor
arpl
arpl
bound
bound
xor
aaa
arpl
popa
xor
xor
data16
data16
arpl
xor
xor
bound
aaa
data16
xor
arpl
xor
xor
xor
cmp
ss
xor
cmp
xor
xor
cmp
xor
arpl
bound
data16
xor
xor
popa
arpl
bound
cmp
xor
xor
aaa
fs
arpl
xor
fs
bound
bound
xor
bound
xor
gs
arpl
xor
bound
xor
arpl
xor
bound
popa
xor
xor
xor
data16
arpl
xor
arpl
arpl
xor
xor
xor
xor
xor
aaa
ss
bound
add
xor
cmp
cmp
xor
cmp
xor
popa
gs
xor
cmp
xor
bound
add
cmp
arpl
xor
xor
xor
bound
aaa
xor
xor
bound
aaa
gs
arpl
xor
xor
cmp
xor
cmp
cmp
xor
gs
xor
add
cmp
bound
xor
data16
bound
xor
aaa
popa
gs
fs
add
xor
arpl
xor
cmp
data16
xor
xor
aaa
xor
arpl
bound
xor
add
xor
xor
bound
xor
bound
xor
xor
bound
arpl
xor
xor
popa
xor
xor
xor
xor
xor
xor
xor
xor
xor
popa
fs
inc
jb
outs
jb
jb
ins
outs
jbe
pop
inc
jb
outs
jb
push
jb
je
push
gs
ins
je
dec
jae
outs
push
gs
outs
outs
jae
add
jae
outs
outs
jae
add
imul
outs
add
inc
jb
outs
jb
add
popa
bound
bound
xor
xor
xor
cmp
arpl
arpl
add
je
arpl
xor
ss
arpl
bound
arpl
data16
xor
fs
bound
add
jb
jo
jb
jns
popa
ins
add
outs
jo
jb
jns
popa
ins
add
je
push
jb
jo
jb
jns
popa
ins
add
je
push
jb
jo
jb
jns
popa
ins
add
xor
xor
cmp
xor
xor
xor
xor
cmp
xor
xor
xor
data16
cmp
xor
cmp
xor
bound
xor
add
xor
xor
fs
bound
fs
cmp
arpl
xor
xor
ss
xor
cmp
xor
bound
xor
xor
aaa
xor
data16
cmp
xor
cmp
cmp
xor
aaa
add
xor
xor
xor
xor
xor
xor
cmp
cmp
cmp
popa
xor
arpl
xor
xor
arpl
popa
fs
xor
aaa
aaa
fs
arpl
cmp
xor
aaa
add
aaa
gs
xor
bound
cmp
cmp
xor
xor
xor
xor
arpl
popa
add
popa
cmp
cmp
xor
bound
aaa
xor
xor
xor
xor
xor
bound
gs
ss
bound
aaa
cmp
xor
xor
data16
addr16
push
jne
je
inc
push
gs
push
outs
imul
jns
add
je
push
popa
ins
jne
add
je
push
popa
ins
jne
push
jns
add
arpl
arpl
cmp
cmp
arpl
xor
fs
arpl
bound
arpl
bound
xor
aaa
xor
add
xor
arpl
cmp
aaa
xor
gs
xor
cmp
aaa
bound
add
xor
bound
cmp
xor
aaa
popa
xor
xor
arpl
data16
data16
arpl
aaa
xor
cmp
xor
xor
cmp
xor
xor
arpl
xor
xor
xor
ss
arpl
cmp
cmp
popa
aaa
xor
xor
xor
cmp
xor
cmp
add
xor
xor
arpl
arpl
aaa
xor
ss
xor
cmp
bound
add
cmp
bound
xor
xor
ss
aaa
arpl
xor
xor
xor
add
xor
xor
xor
arpl
bound
xor
ss
xor
arpl
cmp
cmp
xor
bound
xor
arpl
bound
ss
xor
push
gs
add
cmp
xor
xor
xor
xor
popaw
gs
xor
arpl
add
cmp
xor
bound
bound
cmp
cmp
xor
xor
data16
xor
cmp
popa
cmp
arpl
fs
xor
xor
cmp
arpl
gs
xor
arpl
gs
xor
xor
fs
popa
xor
gs
fs
xor
bound
xor
xor
xor
xor
xor
bound
popa
popa
xor
add
aaa
xor
xor
xor
xor
fs
xor
aaa
arpl
xor
cmp
xor
xor
xor
arpl
arpl
aaa
xor
xor
popa
cmp
xor
gs
xor
xor
arpl
xor
arpl
arpl
ss
xor
aaa
cmp
popa
arpl
xor
xor
xor
cmp
arpl
bound
data16
arpl
gs
xor
gs
xor
xor
xor
bound
xor
popa
xor
arpl
add
gs
xor
cmp
xor
xor
bound
xor
gs
cmp
bound
add
xor
cmp
arpl
xor
xor
xor
xor
ss
cmp
arpl
add
xor
xor
xor
xor
xor
gs
cmp
xor
bound
aaa
cmp
xor
xor
xor
xor
xor
xor
xor
data16
data16
aaa
ss
xor
aaa
cmp
data16
cmp
cmp
bound
cmp
fs
add
cmp
xor
xor
xor
aaa
xor
cmp
cmp
xor
xor
bound
xor
xor
arpl
aaa
cmp
xor
popa
cmp
aaa
data16
xor
xor
popa
bound
xor
gs
add
popa
xor
xor
xor
xor
xor
popa
xor
ss
xor
add
arpl
aaa
data16
xor
xor
xor
cmp
xor
ss
xor
xor
arpl
bound
cmp
gs
xor
gs
aaa
arpl
cmp
popa
xor
xor
add
cmp
xor
cmp
xor
xor
aaa
aaa
bound
xor
cmp
popa
xor
add
xor
xor
bound
arpl
xor
data16
arpl
gs
xor
xor
cmp
add
xor
bound
xor
data16
xor
xor
xor
cmp
xor
fs
xor
xor
xor
arpl
cmp
xor
data16
xor
cmp
arpl
popa
arpl
ss
xor
inc
ins
outs
jae
add
popa
arpl
xor
xor
xor
data16
bound
cmp
xor
add
cmp
bound
aaa
xor
ss
xor
bound
xor
xor
gs
aaa
bound
add
arpl
bound
cmp
xor
popa
xor
arpl
xor
xor
bound
data16
bound
xor
xor
xor
cmp
bound
xor
xor
arpl
xor
arpl
aaa
popa
xor
aaa
arpl
xor
cmp
aaa
ss
xor
arpl
cmp
arpl
xor
xor
cmp
xor
aaa
arpl
bound
data16
arpl
cmp
xor
popa
xor
arpl
xor
cmp
xor
bound
popa
xor
cmp
xor
aaa
popa
cmp
add
bound
bound
data16
xor
ss
popa
bound
popaw
ss
aaa
xor
add
xor
xor
bound
popa
xor
xor
fs
xor
bound
popa
xor
arpl
arpl
xor
cmp
xor
gs
bound
arpl
bound
gs
xor
arpl
arpl
cmp
popa
arpl
cmp
xor
xor
aaa
bound
aaa
xor
cmp
data16
xor
xor
xor
xor
arpl
aaa
aaa
xor
popa
xor
arpl
ins
gs
popa
add
outs
gs
js
gs
imul
outs
jb
dec
outs
outs
jb
add
jb
popa
ins
imul
aaa
aaa
ss
bound
xor
popa
xor
xor
aaa
xor
cmp
add
xor
xor
aaa
aaa
cmp
popa
aaa
xor
xor
xor
xor
arpl
arpl
popa
arpl
xor
arpl
aaa
bound
fs
cmp
xor
xor
arpl
cmp
ss
xor
data16
bound
xor
xor
addr16
push
gs
outs
arpl
outs
outs
jo
popa
outs
fs
imul
pop
push
gs
outs
arpl
outs
outs
jo
popa
outs
fs
imul
pop
inc
outs
outs
jbe
jb
gs
add
gs
popa
ins
imul
ss
xor
xor
popaw
fs
fs
aaa
arpl
xor
xor
cmp
xor
arpl
xor
cmp
popa
data16
xor
arpl
cmp
bound
xor
cmp
xor
add
bound
cmp
aaa
cmp
xor
xor
xor
cmp
xor
cmp
xor
add
xor
fs
xor
popa
bound
xor
gs
xor
bound
data16
xor
fs
xor
xor
xor
fs
xor
popa
aaa
bound
ss
aaa
data16
data16
xor
popa
xor
aaa
xor
bound
cmp
xor
data16
xor
cmp
arpl
xor
fs
bound
xor
xor
xor
fs
data16
aaa
xor
xor
xor
xor
cmp
xor
xor
xor
xor
xor
xor
cmp
cmp
popa
add
xor
xor
xor
aaa
fs
fs
arpl
aaa
cmp
xor
data16
je
js
push
jb
je
jb
push
outs
outs
push
jb
je
jb
arpl
xor
aaa
xor
xor
arpl
bound
xor
xor
gs
popa
xor
aaa
add
xor
arpl
cmp
xor
cmp
bound
xor
xor
cmp
xor
cmp
add
xor
bound
bound
fs
data16
arpl
xor
aaa
xor
xor
xor
xor
xor
bound
arpl
xor
xor
xor
aaa
xor
xor
arpl
cmp
xor
popa
xor
aaa
xor
xor
xor
xor
xor
arpl
gs
cmp
xor
data16
xor
xor
aaa
fs
xor
aaa
xor
data16
add
bound
cmp
fs
arpl
xor
cmp
xor
xor
cmp
popa
arpl
cmp
add
outs
add
popa
jb
dec
bound
arpl
je
jb
inc
jb
popa
jns
push
jb
jo
jb
jns
popa
ins
add
ins
ins
outs
je
dec
outs
je
addr16
inc
ins
outs
popa
je
inc
outs
fs
bound
arpl
outs
fs
jb
popa
jns
inc
outs
outs
jae
jb
arpl
add
add
xor
xor
bound
xor
xor
xor
fs
bound
popa
bound
add
outs
jae
add
outs
jo
jb
jns
dec
outs
fs
je
add
popa
bound
bound
xor
xor
xor
aaa
xor
xor
xor
cmp
add
xor
bound
xor
data16
xor
xor
xor
bound
xor
arpl
data16
bound
xor
xor
xor
cmp
cmp
xor
aaa
bound
add
popa
bound
xor
xor
gs
xor
xor
cmp
bound
xor
xor
arpl
fs
xor
popa
popa
aaa
cmp
cmp
arpl
data16
data16
xor
arpl
ss
ss
bound
xor
cmp
arpl
xor
bound
cmp
xor
arpl
gs
popa
gs
fs
gs
xor
aaa
aaa
xor
xor
cmp
ss
xor
addr16
arpl
aaa
arpl
xor
xor
arpl
xor
cmp
xor
gs
aaa
xor
xor
add
je
push
jb
je
push
je
je
add
je
inc
outs
jb
popa
je
imul
pop
inc
outs
jb
popa
je
imul
pop
dec
outs
fs
je
je
outs
outs
add
je
dec
outs
fs
je
je
outs
outs
add
je
push
jne
je
inc
push
gs
dec
outs
fs
je
push
gs
dec
outs
fs
je
push
gs
push
jne
je
dec
popa
ins
add
je
push
jne
je
dec
popa
ins
add
jne
push
je
push
je
jb
dec
bound
arpl
jb
je
inc
outs
fs
bound
arpl
jb
je
push
je
jb
inc
jb
popa
jns
push
jb
je
inc
outs
fs
jb
popa
jns
push
jb
je
push
jb
jo
jb
jns
popa
ins
add
imul
bound
popa
cmp
xor
cmp
xor
aaa
cmp
gs
arpl
aaa
popa
xor
xor
arpl
cmp
gs
xor
xor
xor
gs
popa
xor
bound
fs
cmp
xor
bound
ss
xor
xor
arpl
xor
arpl
bound
cmp
fs
data16
xor
bound
bound
aaa
bound
arpl
xor
aaa
xor
cmp
cmp
xor
xor
arpl
bound
popa
xor
xor
xor
xor
add
data16
xor
xor
aaa
xor
fs
cmp
fs
xor
add
bound
ss
aaa
aaa
xor
xor
cmp
xor
xor
popa
aaa
bound
xor
ss
xor
push
jb
je
dec
jne
ins
add
imul
imul
imul
popa
jbe
push
arpl
jo
add
imul
add
imul
outs
je
je
js
add
imul
jae
popa
arpl
ja
add
push
arpl
popa
jb
add
jb
jns
je
jb
add
cmp
xor
arpl
arpl
bound
aaa
cmp
arpl
cmp
xor
aaa
xor
xor
arpl
add
xor
xor
cmp
xor
cmp
xor
aaa
xor
xor
xor
arpl
bound
arpl
data16
popa
xor
aaa
popa
bound
xor
arpl
xor
add
xor
fs
fs
cmp
xor
xor
bound
ss
add
xor
xor
arpl
popaw
xor
bound
bound
aaa
xor
xor
data16
add
je
arpl
xor
data16
arpl
fs
cmp
xor
xor
xor
xor
add
je
arpl
xor
cmp
xor
aaa
xor
bound
xor
cmp
xor
xor
xor
bound
arpl
popa
add
je
arpl
xor
xor
xor
xor
data16
bound
xor
xor
bound
data16
je
arpl
fs
arpl
arpl
fs
xor
data16
arpl
xor
cmp
arpl
addr16
arpl
xor
data16
xor
cmp
xor
xor
bound
cmp
add
je
gs
outs
jb
je
ins
add
gs
add
xor
xor
xor
xor
cmp
cmp
xor
xor
fs
cmp
arpl
arpl
xor
xor
xor
xor
gs
xor
aaa
xor
arpl
xor
aaa
cmp
xor
bound
cmp
data16
gs
cmp
addr16
arpl
gs
popaw
bound
arpl
ss
aaa
cmp
gs
arpl
aaa
data16
add
je
arpl
gs
popaw
bound
arpl
ss
aaa
cmp
gs
arpl
aaa
data16
add
xor
xor
data16
arpl
xor
xor
gs
xor
xor
add
cmp
ss
xor
xor
xor
xor
cmp
bound
xor
xor
add
xor
xor
ss
cmp
ss
bound
popa
arpl
ss
xor
xor
xor
xor
cmp
xor
xor
cmp
cmp
gs
xor
ss
arpl
data16
popa
xor
aaa
xor
ss
cmp
cmp
aaa
cmp
xor
arpl
bound
aaa
cmp
xor
arpl
gs
cmp
xor
xor
arpl
xor
aaa
cmp
xor
xor
arpl
cmp
xor
xor
xor
xor
fs
aaa
xor
cmp
gs
cmp
bound
arpl
add
ss
popa
ss
arpl
xor
popa
popa
xor
xor
xor
xor
cmp
add
xor
arpl
xor
gs
cmp
xor
arpl
xor
xor
cmp
add
cmp
xor
xor
xor
gs
popa
popa
gs
cmp
xor
add
cmp
xor
xor
aaa
xor
data16
xor
xor
cmp
ss
cmp
add
xor
xor
cmp
xor
xor
aaa
bound
cmp
arpl
data16
xor
arpl
fs
xor
popa
xor
aaa
xor
xor
xor
xor
xor
xor
xor
aaa
bound
arpl
xor
arpl
arpl
xor
popa
bound
bound
xor
xor
xor
arpl
aaa
add
arpl
cmp
xor
xor
cmp
bound
xor
popa
xor
xor
ss
add
xor
xor
ss
xor
xor
bound
xor
popa
data16
cmp
aaa
arpl
arpl
cmp
data16
xor
xor
aaa
xor
arpl
xor
fs
aaa
arpl
add
xor
cmp
popa
xor
bound
popa
bound
xor
cmp
bound
popaw
popa
xor
add
xor
xor
aaa
popa
xor
xor
popa
xor
arpl
cmp
aaa
cmp
xor
add
arpl
xor
aaa
arpl
xor
arpl
popa
xor
cmp
xor
xor
arpl
xor
xor
xor
cmp
cmp
xor
xor
xor
fs
add
xor
bound
cmp
bound
cmp
cmp
xor
cmp
cmp
gs
xor
xor
xor
xor
xor
xor
xor
popa
xor
xor
xor
xor
arpl
bound
popaw
ss
xor
aaa
fs
aaa
arpl
add
xor
cmp
arpl
xor
ss
cmp
xor
cmp
xor
xor
xor
popa
jb
xor
popa
jb
xor
arpl
xor
xor
popa
xor
xor
xor
cmp
cmp
cmp
xor
arpl
xor
xor
popa
ss
xor
xor
xor
ss
bound
gs
arpl
popa
xor
add
bound
xor
xor
data16
xor
gs
xor
xor
gs
add
aaa
bound
xor
gs
xor
data16
xor
xor
popa
add
cmp
xor
xor
xor
ss
xor
aaa
arpl
popa
xor
popa
xor
arpl
bound
cmp
xor
cmp
xor
xor
aaa
data16
xor
arpl
cmp
aaa
cmp
fs
data16
cmp
bound
xor
xor
xor
arpl
arpl
arpl
arpl
ss
xor
xor
xor
xor
ss
popa
ss
xor
cmp
arpl
xor
cmp
xor
xor
gs
xor
fs
data16
xor
xor
cmp
cmp
cmp
fs
xor
arpl
arpl
add
xor
xor
cmp
data16
popa
xor
gs
popa
xor
xor
gs
add
arpl
xor
popa
xor
arpl
xor
xor
cmp
cmp
xor
add
xor
aaa
arpl
data16
xor
cmp
xor
xor
xor
xor
add
arpl
gs
fs
xor
bound
xor
gs
cmp
xor
xor
popa
aaa
xor
xor
cmp
xor
aaa
arpl
xor
xor
xor
xor
gs
popa
xor
popa
xor
data16
xor
xor
xor
bound
xor
xor
add
xor
fs
xor
arpl
cmp
cmp
data16
xor
popa
cmp
cmp
add
xor
data16
xor
cmp
cmp
xor
bound
xor
arpl
xor
bound
xor
cmp
xor
gs
popa
aaa
ss
cmp
xor
add
xor
aaa
cmp
xor
cmp
aaa
xor
xor
xor
xor
bound
xor
cmp
xor
xor
xor
xor
cmp
aaa
xor
ss
aaa
data16
aaa
xor
cmp
arpl
arpl
xor
xor
xor
bound
fs
xor
ss
xor
xor
add
gs
cmp
xor
xor
xor
arpl
xor
xor
ss
fs
cmp
arpl
xor
arpl
xor
cmp
aaa
xor
aaa
xor
xor
xor
xor
add
xor
popa
arpl
aaa
xor
xor
xor
fs
bound
popa
arpl
popa
cmp
arpl
cmp
cmp
xor
xor
aaa
arpl
cmp
fs
xor
xor
bound
xor
add
xor
xor
xor
cmp
xor
xor
xor
xor
bound
popa
data16
xor
xor
xor
xor
cmp
xor
cmp
fs
xor
data16
xor
cmp
xor
xor
xor
add
xor
xor
aaa
data16
xor
xor
xor
xor
xor
xor
xor
cmp
add
data16
cmp
cmp
gs
xor
xor
cmp
xor
data16
xor
popa
add
xor
cmp
xor
bound
popa
xor
xor
xor
xor
popa
aaa
xor
arpl
xor
aaa
xor
cmp
arpl
xor
xor
cmp
cmp
bound
xor
popa
xor
bound
data16
gs
arpl
xor
popa
xor
data16
arpl
fs
xor
ss
cmp
aaa
cmp
fs
xor
fs
xor
xor
arpl
arpl
xor
xor
ss
fs
popa
xor
xor
xor
popa
xor
add
popa
xor
xor
xor
xor
cmp
arpl
ss
aaa
fs
bound
add
arpl
data16
aaa
bound
xor
aaa
bound
cmp
aaa
xor
data16
xor
add
bound
popa
ss
cmp
xor
xor
xor
data16
bound
xor
add
xor
bound
aaa
gs
xor
cmp
xor
xor
popa
xor
bound
cmp
bound
xor
xor
xor
xor
bound
xor
xor
xor
xor
xor
bound
bound
xor
popa
cmp
bound
add
cmp
xor
xor
xor
popa
xor
popa
bound
aaa
ss
xor
arpl
xor
xor
gs
cmp
xor
popa
cmp
xor
popa
xor
xor
popa
add
cmp
ss
ss
bound
xor
xor
arpl
gs
xor
xor
add
xor
xor
fs
xor
xor
aaa
data16
bound
ss
xor
arpl
xor
arpl
aaa
xor
gs
bound
bound
xor
xor
xor
data16
xor
xor
xor
arpl
aaa
xor
xor
xor
bound
bound
arpl
aaa
xor
ss
xor
popa
xor
data16
aaa
popa
cmp
xor
ss
arpl
aaa
aaa
arpl
cmp
arpl
xor
xor
popa
bound
cmp
xor
xor
add
gs
arpl
xor
xor
xor
xor
bound
add
bound
xor
xor
cmp
arpl
xor
xor
xor
xor
xor
arpl
bound
cmp
aaa
popaw
xor
arpl
popa
popa
cmp
aaa
ss
xor
aaa
xor
arpl
xor
gs
bound
fs
gs
xor
cmp
xor
xor
xor
add
arpl
popa
cmp
xor
xor
aaa
bound
xor
cmp
xor
data16
add
add
xor
xor
bound
bound
xor
xor
ss
xor
cmp
gs
add
aaa
xor
xor
xor
xor
xor
xor
xor
bound
add
cmp
xor
xor
xor
arpl
arpl
bound
xor
xor
xor
bound
data16
xor
popa
xor
cmp
xor
xor
xor
gs
popa
add
aaa
xor
popa
popa
popa
cmp
xor
xor
xor
xor
xor
bound
cmp
add
xor
xor
xor
cmp
gs
aaa
gs
cmp
aaa
add
arpl
xor
cmp
xor
ss
xor
xor
aaa
xor
data16
xor
xor
arpl
cmp
xor
xor
gs
arpl
popa
xor
xor
xor
xor
xor
xor
arpl
xor
xor
xor
popa
fs
aaa
xor
cmp
xor
bound
add
arpl
arpl
bound
ss
fs
xor
xor
aaa
bound
xor
aaa
xor
xor
cmp
arpl
xor
popa
cmp
popa
bound
arpl
arpl
add
xor
fs
xor
xor
arpl
aaa
arpl
aaa
cmp
xor
cmp
cmp
xor
arpl
xor
xor
xor
gs
data16
cmp
data16
popa
cmp
add
xor
aaa
xor
bound
xor
xor
xor
arpl
xor
popa
cmp
xor
bound
xor
xor
xor
xor
popa
arpl
xor
xor
popa
xor
aaa
cmp
fs
cmp
arpl
fs
xor
xor
xor
xor
bound
xor
aaa
cmp
cmp
popa
bound
arpl
aaa
xor
cmp
gs
popa
xor
bound
arpl
xor
bound
popa
aaa
bound
popa
add
xor
xor
gs
xor
xor
xor
popa
xor
cmp
aaa
xor
add
arpl
popa
aaa
arpl
cmp
cmp
xor
xor
xor
xor
xor
cmp
add
cmp
popa
xor
xor
cmp
arpl
popa
arpl
xor
xor
cmp
cmp
cmp
xor
arpl
xor
xor
cmp
arpl
data16
xor
popa
cmp
arpl
cmp
add
arpl
gs
xor
ss
gs
bound
xor
xor
popa
aaa
add
aaa
xor
xor
cmp
xor
aaa
xor
xor
gs
data16
xor
add
xor
data16
aaa
popa
xor
ss
xor
arpl
bound
cmp
arpl
xor
data16
xor
fs
xor
cmp
cmp
xor
xor
xor
arpl
xor
data16
xor
xor
bound
xor
xor
popa
popa
fs
xor
add
xor
cmp
arpl
xor
aaa
xor
bound
cmp
ss
popa
fs
xor
xor
arpl
cmp
xor
arpl
xor
aaa
xor
cmp
cmp
xor
aaa
arpl
aaa
add
cmp
gs
xor
xor
popaw
xor
popa
xor
aaa
cmp
gs
aaa
cmp
add
cmp
bound
bound
xor
xor
xor
bound
xor
xor
popa
data16
arpl
arpl
data16
cmp
xor
arpl
gs
data16
bound
data16
xor
arpl
xor
bound
xor
xor
xor
cmp
xor
arpl
data16
add
xor
fs
bound
xor
xor
bound
cmp
xor
cmp
cmp
arpl
data16
gs
xor
cmp
bound
data16
data16
data16
aaa
popa
cmp
xor
cmp
bound
cmp
xor
ss
xor
cmp
fs
xor
xor
xor
xor
xor
gs
arpl
xor
xor
add
xor
fs
xor
bound
aaa
xor
bound
bound
xor
cmp
xor
arpl
xor
xor
xor
xor
xor
cmp
cmp
xor
xor
cmp
xor
xor
arpl
arpl
arpl
ss
ss
ss
xor
add
xor
aaa
arpl
arpl
xor
cmp
aaa
xor
aaa
arpl
fs
data16
xor
xor
xor
bound
xor
bound
popa
cmp
arpl
cmp
fs
data16
xor
xor
cmp
xor
arpl
fs
xor
data16
xor
xor
xor
arpl
arpl
arpl
cmp
cmp
xor
gs
xor
fs
xor
arpl
cmp
arpl
cmp
cmp
xor
xor
cmp
popa
xor
aaa
aaa
xor
xor
xor
cmp
xor
xor
xor
aaa
arpl
cmp
xor
xor
aaa
add
xor
xor
xor
cmp
xor
xor
xor
ss
popaw
xor
arpl
xor
xor
cmp
bound
xor
xor
xor
xor
bound
xor
popa
xor
arpl
xor
cmp
data16
xor
cmp
cmp
xor
gs
arpl
add
xor
cmp
cmp
arpl
ss
data16
xor
aaa
cmp
xor
xor
add
xor
xor
xor
gs
xor
xor
bound
xor
add
bound
xor
xor
xor
data16
xor
xor
cmp
arpl
bound
xor
xor
arpl
xor
xor
cmp
popa
xor
cmp
xor
arpl
xor
xor
bound
cmp
arpl
arpl
arpl
ss
cmp
xor
ss
popa
aaa
cmp
bound
add
cmp
gs
bound
bound
cmp
gs
cmp
aaa
xor
xor
cmp
arpl
add
xor
arpl
xor
bound
xor
cmp
popa
xor
xor
xor
xor
xor
xor
xor
xor
cmp
xor
xor
xor
xor
data16
cmp
arpl
arpl
aaa
arpl
xor
xor
arpl
aaa
xor
cmp
cmp
xor
xor
arpl
xor
cmp
ss
xor
xor
xor
xor
data16
arpl
xor
xor
xor
popa
xor
popa
xor
ss
xor
arpl
xor
aaa
bound
xor
arpl
xor
xor
arpl
aaa
aaa
bound
data16
cmp
add
xor
arpl
arpl
xor
aaa
bound
xor
gs
cmp
xor
bound
arpl
xor
xor
xor
xor
cmp
bound
xor
ss
xor
add
xor
bound
bound
popa
popa
xor
fs
popa
xor
xor
xor
xor
xor
add
arpl
popa
bound
xor
gs
arpl
cmp
xor
xor
xor
xor
xor
add
popa
xor
xor
arpl
xor
cmp
aaa
xor
ss
xor
xor
popa
popa
popa
aaa
add
popa
bound
gs
aaa
xor
xor
aaa
xor
ss
xor
aaa
fs
data16
fs
aaa
xor
xor
xor
xor
xor
xor
ss
popa
cmp
arpl
xor
xor
popa
xor
cmp
cmp
cmp
xor
arpl
add
xor
cmp
xor
cmp
xor
cmp
bound
xor
xor
bound
xor
xor
xor
xor
gs
cmp
arpl
cmp
bound
arpl
arpl
ss
add
xor
xor
cmp
cmp
popa
bound
xor
xor
aaa
fs
aaa
xor
xor
arpl
gs
gs
popa
popa
xor
arpl
xor
xor
aaa
cmp
cmp
cmp
arpl
arpl
gs
xor
cmp
xor
gs
ss
cmp
ss
arpl
xor
xor
xor
aaa
bound
cmp
cmp
xor
xor
popa
add
arpl
xor
data16
xor
cmp
xor
arpl
fs
xor
arpl
xor
xor
xor
arpl
xor
cmp
xor
fs
arpl
xor
arpl
ss
cmp
xor
bound
data16
cmp
xor
arpl
xor
xor
bound
xor
xor
xor
popa
bound
xor
ss
arpl
xor
add
cmp
cmp
xor
cmp
bound
xor
cmp
xor
xor
xor
add
aaa
xor
arpl
cmp
data16
xor
arpl
xor
cmp
gs
arpl
xor
xor
xor
cmp
cmp
xor
xor
xor
xor
add
xor
xor
popa
xor
xor
xor
xor
aaa
cmp
xor
cmp
xor
xor
xor
data16
arpl
cmp
aaa
xor
xor
popa
cmp
xor
xor
aaa
xor
gs
bound
xor
xor
cmp
xor
arpl
arpl
xor
xor
cmp
bound
ss
cmp
arpl
cmp
aaa
xor
bound
arpl
aaa
xor
xor
cmp
cmp
xor
cmp
xor
bound
xor
arpl
arpl
xor
aaa
xor
cmp
xor
gs
xor
cmp
cmp
popa
popa
xor
add
aaa
xor
popa
arpl
cmp
cmp
xor
xor
arpl
cmp
cmp
aaa
xor
add
xor
xor
cmp
cmp
arpl
cmp
fs
xor
aaa
add
xor
bound
popa
xor
cmp
xor
xor
xor
cmp
xor
add
xor
popa
xor
cmp
gs
arpl
cmp
xor
data16
bound
data16
xor
cmp
gs
xor
data16
xor
bound
aaa
cmp
xor
data16
cmp
xor
xor
xor
cmp
gs
xor
xor
arpl
arpl
fs
xor
cmp
data16
xor
xor
arpl
cmp
xor
xor
arpl
xor
bound
xor
xor
xor
xor
popa
fs
gs
cmp
xor
aaa
xor
xor
bound
xor
cmp
xor
data16
bound
xor
popa
xor
xor
popa
xor
cmp
xor
xor
xor
xor
arpl
xor
xor
data16
xor
aaa
cmp
xor
cmp
xor
xor
fs
add
bound
cmp
popa
gs
data16
xor
xor
arpl
popa
xor
add
bound
xor
bound
xor
xor
xor
xor
fs
fs
arpl
ss
bound
ss
cmp
fs
xor
data16
bound
arpl
popa
xor
xor
aaa
xor
xor
aaa
cmp
xor
popa
fs
xor
xor
xor
cmp
data16
xor
xor
arpl
arpl
xor
cmp
arpl
xor
xor
arpl
ss
gs
ss
cmp
xor
popa
xor
xor
add
xor
xor
arpl
gs
xor
cmp
xor
xor
xor
cmp
arpl
bound
arpl
arpl
cmp
aaa
cmp
xor
cmp
ss
cmp
arpl
xor
cmp
bound
ss
xor
xor
fs
xor
xor
gs
cmp
arpl
xor
aaa
xor
xor
xor
cmp
cmp
xor
ss
cmp
xor
arpl
xor
arpl
gs
cmp
xor
xor
xor
fs
xor
xor
gs
xor
ss
xor
xor
aaa
cmp
ss
xor
xor
bound
addr16
arpl
arpl
bound
xor
xor
xor
xor
bound
bound
xor
xor
bound
xor
xor
cmp
bound
gs
add
fs
arpl
aaa
cmp
xor
cmp
aaa
gs
xor
cmp
data16
arpl
xor
xor
xor
xor
xor
cmp
bound
cmp
xor
add
cmp
xor
xor
bound
cmp
xor
xor
bound
xor
ss
cmp
arpl
xor
xor
cmp
aaa
bound
xor
bound
xor
data16
xor
xor
popa
cmp
xor
xor
arpl
xor
ss
cmp
ss
xor
aaa
xor
add
gs
xor
xor
cmp
xor
bound
cmp
data16
cmp
arpl
aaa
xor
cmp
fs
xor
xor
data16
xor
xor
add
xor
xor
bound
cmp
aaa
xor
cmp
xor
gs
popa
aaa
add
xor
aaa
popa
bound
xor
xor
xor
bound
xor
bound
bound
add
popa
gs
xor
cmp
arpl
arpl
xor
data16
xor
add
arpl
xor
arpl
gs
popa
xor
xor
cmp
arpl
bound
cmp
arpl
ss
xor
cmp
ss
aaa
xor
xor
cmp
bound
arpl
arpl
add
gs
gs
xor
ss
xor
cmp
xor
xor
xor
bound
aaa
add
cmp
xor
popa
bound
fs
xor
popa
xor
cmp
xor
xor
arpl
cmp
aaa
xor
cmp
popa
xor
data16
xor
ss
cmp
bound
add
xor
arpl
xor
popa
cmp
xor
aaa
xor
ss
aaa
cmp
bound
ss
add
xor
xor
aaa
aaa
xor
aaa
popa
popa
aaa
popa
xor
arpl
xor
xor
add
cmp
bound
bound
xor
xor
fs
fs
cmp
xor
gs
xor
arpl
xor
xor
xor
xor
xor
data16
bound
arpl
bound
arpl
xor
cmp
data16
xor
cmp
xor
cmp
xor
xor
add
xor
xor
arpl
xor
gs
xor
xor
aaa
bound
add
popa
bound
cmp
fs
bound
gs
bound
cmp
xor
xor
cmp
arpl
cmp
xor
bound
xor
cmp
fs
cmp
xor
popa
aaa
add
xor
popa
ss
xor
bound
cmp
data16
arpl
popa
arpl
arpl
popa
gs
arpl
aaa
xor
fs
bound
data16
bound
xor
popa
cmp
cmp
xor
xor
cmp
arpl
xor
xor
arpl
xor
xor
data16
bound
xor
data16
arpl
bound
xor
xor
popa
xor
arpl
xor
xor
xor
data16
ss
xor
xor
xor
xor
cmp
cmp
xor
cmp
arpl
aaa
bound
arpl
bound
cmp
cmp
aaa
bound
popa
xor
xor
aaa
xor
arpl
xor
cmp
xor
fs
popa
bound
cmp
fs
add
aaa
bound
bound
xor
popa
cmp
cmp
xor
xor
aaa
cmp
aaa
add
popa
popa
xor
fs
xor
bound
popa
fs
popa
cmp
xor
arpl
bound
arpl
cmp
cmp
xor
bound
bound
xor
data16
arpl
bound
data16
xor
xor
data16
xor
xor
aaa
xor
fs
xor
xor
arpl
arpl
popa
cmp
xor
cmp
xor
xor
xor
bound
xor
cmp
popa
xor
cmp
add
xor
xor
arpl
popa
xor
cmp
xor
xor
cmp
xor
add
xor
popa
xor
xor
xor
bound
fs
xor
fs
popa
add
xor
aaa
arpl
xor
cmp
ss
aaa
xor
xor
xor
xor
xor
xor
xor
bound
cmp
gs
xor
xor
bound
arpl
add
xor
xor
gs
popa
cmp
cmp
xor
cmp
arpl
xor
xor
add
xor
popaw
bound
xor
xor
aaa
bound
xor
xor
xor
add
bound
cmp
popa
aaa
xor
arpl
xor
gs
bound
popa
xor
data16
arpl
xor
xor
xor
aaa
arpl
data16
xor
arpl
arpl
cmp
cmp
arpl
aaa
data16
xor
ss
cmp
xor
cmp
add
popaw
xor
fs
xor
cmp
xor
bound
fs
xor
arpl
xor
arpl
popa
popaw
xor
fs
aaa
cmp
xor
arpl
xor
xor
popa
popaw
xor
cmp
data16
popa
xor
cmp
cmp
arpl
xor
xor
arpl
xor
aaa
bound
cmp
arpl
arpl
xor
xor
aaa
xor
xor
xor
xor
xor
xor
xor
xor
fs
add
cmp
xor
xor
arpl
xor
xor
xor
xor
cmp
add
cmp
data16
popa
aaa
xor
aaa
cmp
popa
popa
aaa
arpl
aaa
xor
xor
xor
cmp
cmp
fs
xor
xor
bound
popa
popa
xor
xor
xor
xor
xor
arpl
xor
xor
gs
xor
xor
xor
bound
xor
xor
cmp
add
aaa
popa
data16
ss
gs
arpl
bound
gs
arpl
arpl
cmp
bound
cmp
arpl
popa
data16
xor
arpl
fs
cmp
arpl
cmp
xor
cmp
cmp
arpl
popa
cmp
xor
cmp
data16
bound
arpl
xor
aaa
cmp
xor
aaa
xor
xor
ss
xor
xor
xor
arpl
xor
arpl
xor
xor
xor
popa
xor
bound
cmp
ss
xor
xor
bound
xor
add
xor
arpl
xor
arpl
cmp
xor
arpl
bound
xor
xor
arpl
xor
arpl
arpl
xor
xor
xor
cmp
xor
popa
bound
cmp
bound
aaa
xor
arpl
arpl
bound
aaa
xor
xor
xor
xor
xor
xor
arpl
xor
arpl
arpl
xor
xor
cmp
cmp
fs
fs
xor
xor
xor
ss
xor
xor
xor
fs
xor
xor
cmp
arpl
xor
cmp
cmp
bound
data16
aaa
xor
ss
xor
xor
aaa
cmp
cmp
add
cmp
xor
xor
gs
xor
fs
fs
xor
cmp
add
xor
cmp
arpl
cmp
cmp
xor
aaa
fs
cmp
aaa
add
bound
arpl
xor
aaa
xor
cmp
bound
xor
popa
aaa
popa
add
bound
cmp
aaa
xor
ss
fs
xor
arpl
cmp
xor
xor
xor
arpl
cmp
xor
cmp
xor
cmp
popa
arpl
xor
bound
xor
popa
add
xor
cmp
popa
fs
xor
xor
arpl
arpl
cmp
arpl
gs
ss
xor
aaa
cmp
cmp
fs
ss
xor
cmp
xor
popa
add
xor
cmp
bound
xor
cmp
xor
xor
xor
cmp
cmp
cmp
ss
cmp
arpl
ss
bound
xor
xor
arpl
arpl
xor
xor
bound
arpl
arpl
aaa
cmp
cmp
xor
aaa
xor
xor
cmp
add
cmp
aaa
bound
ss
xor
cmp
fs
data16
arpl
xor
arpl
xor
xor
cmp
ss
xor
xor
fs
fs
xor
aaa
xor
arpl
ss
popa
xor
popa
xor
cmp
arpl
add
xor
xor
fs
cmp
xor
xor
aaa
cmp
bound
arpl
xor
arpl
arpl
xor
xor
xor
xor
gs
popa
xor
fs
arpl
aaa
fs
popa
aaa
add
xor
xor
gs
cmp
arpl
gs
arpl
add
xor
data16
xor
popa
aaa
xor
arpl
xor
xor
popaw
add
arpl
bound
arpl
popa
xor
cmp
cmp
cmp
arpl
gs
xor
xor
xor
cmp
xor
bound
data16
bound
xor
arpl
xor
arpl
cmp
arpl
arpl
bound
bound
xor
xor
gs
xor
popaw
xor
xor
arpl
arpl
xor
gs
arpl
popa
ss
bound
cmp
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
bound
bound
xor
xor
arpl
gs
fs
ss
xor
aaa
xor
cmp
ss
xor
data16
cmp
xor
xor
popa
xor
cmp
ss
xor
arpl
cmp
xor
xor
cmp
arpl
xor
cmp
cmp
cmp
xor
xor
cmp
xor
xor
cmp
arpl
gs
cmp
xor
xor
aaa
popa
xor
xor
xor
cmp
popa
add
xor
bound
cmp
xor
cmp
xor
aaa
bound
add
xor
fs
xor
xor
popa
xor
xor
xor
xor
arpl
xor
add
xor
xor
xor
xor
data16
xor
bound
xor
aaa
xor
add
aaa
ss
popa
cmp
xor
gs
xor
xor
aaa
data16
xor
aaa
gs
xor
cmp
arpl
xor
popa
ss
xor
cmp
cmp
xor
arpl
xor
xor
gs
xor
xor
aaa
aaa
xor
xor
xor
xor
cmp
gs
add
cmp
data16
xor
bound
cmp
data16
xor
xor
popaw
data16
xor
cmp
xor
fs
xor
cmp
xor
fs
xor
arpl
aaa
xor
popa
fs
xor
xor
cmp
fs
xor
add
xor
bound
xor
xor
cmp
bound
xor
xor
popa
bound
xor
add
cmp
bound
cmp
xor
data16
xor
xor
xor
popa
xor
ss
cmp
arpl
bound
xor
arpl
cmp
bound
cmp
arpl
bound
ss
xor
add
bound
aaa
xor
aaa
xor
aaa
ss
cmp
cmp
cmp
cmp
xor
arpl
xor
fs
xor
xor
cmp
popa
arpl
xor
xor
arpl
cmp
xor
gs
cmp
xor
bound
cmp
popa
arpl
add
bound
xor
xor
xor
arpl
cmp
arpl
cmp
arpl
popa
cmp
xor
arpl
xor
xor
gs
xor
xor
aaa
bound
fs
cmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
xor
aaa
bound
cmp
arpl
aaa
popa
bound
aaa
cmp
aaa
xor
xor
aaa
aaa
popa
data16
cmp
xor
xor
add
xor
cmp
xor
xor
xor
xor
xor
xor
data16
bound
bound
cmp
arpl
xor
arpl
aaa
xor
xor
bound
aaa
xor
xor
arpl
xor
xor
xor
arpl
bound
xor
xor
xor
xor
xor
arpl
aaa
cmp
add
arpl
cmp
cmp
xor
cmp
arpl
bound
cmp
cmp
xor
cmp
aaa
ss
xor
xor
xor
xor
bound
xor
xor
bound
arpl
arpl
data16
xor
xor
bound
xor
cmp
gs
bound
bound
add
xor
gs
xor
cmp
ss
xor
xor
data16
xor
xor
xor
arpl
gs
arpl
popa
xor
aaa
aaa
xor
cmp
aaa
cmp
xor
xor
arpl
xor
cmp
xor
data16
popa
aaa
xor
popa
cmp
cmp
bound
arpl
popa
bound
bound
xor
xor
xor
ss
cmp
xor
xor
xor
fs
arpl
ss
bound
xor
xor
xor
bound
data16
arpl
bound
xor
add
arpl
cmp
xor
arpl
xor
cmp
fs
xor
ss
add
popa
ss
cmp
xor
xor
xor
xor
xor
xor
xor
xor
bound
xor
arpl
arpl
xor
xor
cmp
xor
cmp
xor
data16
xor
add
xor
fs
xor
cmp
popa
aaa
xor
arpl
xor
cmp
xor
cmp
xor
add
xor
xor
arpl
arpl
gs
cmp
arpl
gs
gs
popa
xor
xor
cmp
cmp
fs
bound
xor
arpl
fs
xor
xor
cmp
xor
xor
ss
aaa
xor
aaa
xor
xor
cmp
arpl
xor
popa
aaa
arpl
bound
bound
xor
xor
arpl
xor
ss
ss
cmp
xor
cmp
xor
cmp
xor
xor
bound
add
xor
cmp
popa
arpl
xor
cmp
xor
xor
popa
xor
popa
fs
arpl
ss
xor
cmp
fs
xor
cmp
gs
popa
xor
cmp
add
cmp
bound
xor
xor
xor
arpl
cmp
cmp
ss
xor
popa
xor
bound
popa
add
xor
xor
aaa
arpl
arpl
xor
bound
aaa
gs
xor
cmp
add
xor
arpl
xor
xor
fs
xor
cmp
arpl
xor
arpl
xor
xor
aaa
xor
xor
xor
cmp
xor
arpl
xor
xor
gs
xor
arpl
xor
bound
fs
xor
arpl
xor
xor
data16
xor
ss
xor
cmp
arpl
xor
data16
xor
popa
cmp
xor
xor
xor
xor
aaa
cmp
ss
add
popa
xor
bound
xor
cmp
bound
cmp
arpl
xor
add
xor
arpl
xor
xor
ss
aaa
cmp
popa
xor
xor
xor
arpl
xor
xor
fs
xor
popa
xor
xor
fs
add
xor
xor
xor
bound
bound
xor
xor
aaa
xor
xor
cmp
add
cmp
popaw
arpl
popa
bound
ss
gs
xor
cmp
xor
xor
xor
bound
bound
bound
xor
xor
cmp
xor
popa
xor
aaa
data16
add
ss
xor
xor
aaa
xor
xor
data16
cmp
arpl
xor
xor
cmp
arpl
xor
xor
gs
arpl
bound
xor
popa
xor
xor
add
xor
cmp
xor
xor
cmp
popa
aaa
xor
bound
cmp
fs
arpl
aaa
xor
cmp
aaa
xor
cmp
aaa
bound
xor
xor
bound
cmp
xor
arpl
bound
ss
cmp
xor
cmp
xor
bound
xor
add
xor
xor
xor
data16
xor
aaa
xor
gs
cmp
xor
xor
xor
arpl
xor
gs
data16
xor
xor
gs
aaa
xor
arpl
arpl
bound
arpl
cmp
xor
popa
cmp
bound
xor
cmp
cmp
bound
cmp
xor
add
arpl
data16
xor
popa
xor
cmp
xor
bound
data16
add
cmp
ss
popa
data16
xor
fs
bound
xor
aaa
popa
xor
xor
ss
bound
xor
cmp
ss
xor
xor
xor
arpl
add
cmp
cmp
xor
xor
bound
xor
xor
data16
xor
xor
arpl
xor
xor
popa
aaa
ss
xor
xor
xor
popa
xor
xor
arpl
xor
popa
arpl
xor
xor
xor
xor
xor
xor
arpl
bound
arpl
cmp
bound
cmp
xor
fs
cmp
xor
arpl
arpl
add
arpl
cmp
aaa
xor
cmp
bound
cmp
arpl
xor
add
je
push
gs
jne
arpl
popa
outs
popa
addr16
addr16
inc
jne
je
jb
add
je
inc
jne
je
jb
add
je
pop
aaa
jp
add
je
inc
jb
ja
gs
fs
jo
gs
addr16
gs
popa
add
aaa
popa
arpl
ss
popaw
xor
cmp
bound
xor
bound
xor
xor
arpl
xor
cmp
cmp
cmp
cmp
cmp
cmp
xor
ss
bound
cmp
add
cmp
xor
xor
bound
xor
ss
popa
cmp
arpl
xor
xor
add
bound
ss
xor
xor
fs
xor
xor
xor
xor
arpl
cmp
gs
aaa
cmp
xor
xor
fs
popaw
arpl
xor
add
xor
cmp
xor
xor
xor
xor
xor
xor
cmp
xor
ss
add
xor
xor
aaa
xor
xor
fs
ss
aaa
cmp
xor
arpl
popa
bound
aaa
bound
cmp
xor
xor
xor
popa
xor
xor
xor
arpl
arpl
bound
bound
xor
aaa
aaa
xor
cmp
aaa
cmp
add
bound
xor
xor
gs
fs
cmp
xor
gs
gs
arpl
cmp
xor
xor
gs
xor
cmp
ss
xor
bound
xor
xor
addr16
arpl
aaa
xor
xor
popa
popa
popa
xor
xor
xor
aaa
popa
ss
cmp
xor
cmp
add
je
arpl
cmp
fs
xor
xor
fs
xor
fs
xor
arpl
bound
add
je
arpl
xor
xor
cmp
cmp
bound
xor
xor
xor
xor
cmp
cmp
addr16
arpl
xor
bound
cmp
popa
aaa
xor
cmp
ss
xor
ss
bound
xor
addr16
arpl
xor
bound
xor
aaa
bound
cmp
arpl
xor
xor
arpl
xor
gs
arpl
cmp
aaa
bound
xor
arpl
popa
xor
xor
cmp
xor
xor
aaa
xor
xor
addr16
arpl
xor
xor
arpl
aaa
cmp
xor
fs
xor
cmp
cmp
add
je
arpl
xor
aaa
xor
fs
xor
xor
arpl
xor
popa
popa
xor
xor
xor
add
je
arpl
popa
xor
xor
xor
xor
popa
xor
arpl
xor
xor
arpl
xor
add
je
arpl
xor
bound
gs
xor
xor
xor
xor
ss
xor
addr16
arpl
cmp
aaa
xor
xor
xor
xor
cmp
xor
xor
fs
popa
add
je
arpl
xor
xor
xor
cmp
xor
cmp
bound
xor
xor
xor
add
je
arpl
xor
cmp
xor
cmp
xor
aaa
xor
xor
xor
data16
popa
xor
xor
add
je
arpl
fs
data16
xor
arpl
cmp
xor
bound
xor
xor
cmp
addr16
arpl
xor
aaa
xor
xor
popa
ss
xor
xor
cmp
xor
xor
xor
cmp
add
bound
xor
aaa
xor
xor
xor
arpl
arpl
ss
bound
arpl
add
popa
bound
xor
popa
cmp
xor
cmp
xor
xor
xor
arpl
xor
add
xor
popa
arpl
cmp
arpl
cmp
cmp
xor
aaa
gs
xor
add
cmp
bound
xor
xor
ss
cmp
bound
xor
xor
aaa
xor
xor
arpl
bound
xor
fs
cmp
xor
arpl
xor
arpl
gs
cmp
xor
arpl
xor
fs
data16
xor
xor
xor
bound
xor
add
data16
xor
gs
xor
popa
ss
cmp
cmp
aaa
cmp
cmp
cmp
cmp
arpl
cmp
xor
xor
xor
gs
cmp
gs
arpl
aaa
xor
add
xor
xor
cmp
cmp
xor
xor
bound
aaa
xor
xor
bound
aaa
xor
xor
xor
popa
popa
arpl
cmp
aaa
fs
popa
xor
arpl
bound
aaa
bound
xor
add
bound
xor
xor
xor
cmp
xor
arpl
xor
popa
bound
cmp
cmp
xor
arpl
xor
xor
arpl
xor
xor
cmp
xor
bound
cmp
xor
arpl
cmp
popa
xor
xor
bound
popa
fs
xor
arpl
gs
bound
xor
fs
xor
xor
xor
xor
fs
arpl
add
aaa
xor
popa
xor
cmp
xor
xor
xor
aaa
ss
arpl
xor
xor
cmp
xor
popa
cmp
aaa
bound
bound
aaa
xor
xor
cmp
xor
arpl
add
xor
aaa
cmp
gs
xor
xor
cmp
cmp
xor
xor
xor
arpl
arpl
xor
xor
cmp
xor
xor
arpl
xor
popa
cmp
xor
add
xor
xor
ss
bound
cmp
xor
popa
xor
data16
xor
xor
arpl
xor
xor
gs
xor
bound
xor
xor
xor
xor
xor
arpl
xor
arpl
data16
popa
xor
cmp
xor
xor
aaa
cmp
aaa
arpl
aaa
bound
add
bound
xor
cmp
xor
xor
cmp
xor
popa
bound
data16
bound
cmp
add
popa
xor
arpl
cmp
xor
ss
cmp
bound
xor
xor
xor
arpl
xor
bound
xor
xor
xor
xor
aaa
xor
add
popa
cmp
popa
xor
popa
xor
cmp
bound
xor
xor
fs
xor
arpl
xor
xor
arpl
ss
cmp
xor
xor
xor
popa
xor
xor
bound
xor
xor
popa
bound
arpl
arpl
xor
aaa
arpl
xor
gs
xor
popa
data16
ss
xor
aaa
xor
xor
xor
xor
arpl
xor
xor
bound
xor
xor
arpl
ss
data16
gs
xor
xor
aaa
bound
xor
gs
add
arpl
xor
cmp
xor
xor
cmp
xor
xor
bound
add
xor
cmp
cmp
xor
xor
xor
xor
arpl
xor
xor
aaa
xor
arpl
xor
xor
fs
xor
xor
xor
xor
cmp
arpl
xor
arpl
popa
popa
xor
xor
gs
ss
bound
xor
cmp
ss
arpl
xor
xor
data16
xor
popa
arpl
cmp
gs
xor
xor
add
xor
arpl
fs
xor
popa
data16
arpl
bound
add
ss
ss
bound
xor
fs
xor
xor
gs
popa
jae
inc
jb
outs
jb
inc
ins
outs
jae
dec
popa
outs
fs
add
outs
push
jb
arpl
jae
inc
gs
jne
jb
outs
je
jb
arpl
jae
add
fs
imul
inc
gs
jb
arpl
fs
jae
add
je
ins
popa
jae
dec
popa
ins
add
outs
arpl
jae
gs
gs
add
je
dec
jae
gs
popa
bound
inc
imul
push
jne
jo
outs
fs
push
add
jae
ins
gs
push
add
outs
push
push
add
push
jne
jo
outs
fs
jb
arpl
jae
inc
gs
outs
fs
gs
imul
js
inc
gs
jb
arpl
jae
ins
popa
addr16
imul
push
jne
jb
inc
jne
ins
push
jb
arpl
jae
ins
popa
addr16
popa
ins
add
gs
inc
outs
jae
gs
arpl
push
gs
jo
outs
dec
gs
js
push
gs
jb
popa
je
dec
gs
js
push
gs
gs
popa
ins
jne
inc
js
push
gs
ins
outs
jae
dec
gs
push
gs
jne
jb
push
popa
ins
jne
inc
js
push
gs
gs
gs
dec
gs
push
gs
gs
gs
push
popa
ins
jne
add
addr16
outs
jne
dec
gs
js
push
gs
outs
jne
push
popa
ins
jne
add
addr16
jne
jb
dec
outs
outs
dec
gs
inc
gs
jns
je
ins
dec
gs
imul
gs
imul
push
outs
ja
xor
jb
arpl
jae
inc
gs
jne
jb
outs
je
jb
arpl
jae
inc
gs
outs
fs
gs
popa
outs
fs
add
je
popa
jae
inc
jb
outs
jb
dec
jo
outs
push
jb
arpl
jae
outs
imul
inc
jne
ins
imul
imul
js
inc
jb
popa
je
inc
outs
jbe
jb
outs
ins
outs
je
ins
outs
arpl
inc
gs
jb
jns
outs
jbe
jb
outs
ins
outs
je
ins
outs
arpl
push
popa
imul
ins
gs
bound
arpl
gs
js
je
outs
fs
jb
arpl
jae
inc
jb
popa
je
push
jb
arpl
jae
jae
jae
jb
dec
outs
arpl
inc
jo
inc
popa
je
push
popa
je
add
popa
ins
imul
popa
je
push
popa
je
add
imul
outs
je
imul
add
imul
add
ins
add
jb
ins
gs
jb
add
outs
je
inc
push
outs
imul
jns
add
ins
jne
add
outs
jbe
jb
gs
add
fs
je
je
outs
outs
add
fs
je
push
jne
je
dec
popa
ins
add
ins
je
jb
add
jp
add
outs
ja
gs
fs
jo
gs
gs
popa
add
push
add
add
je
dec
popa
jae
popa
ins
jne
add
jo
outs
add
je
outs
jne
gs
je
jb
addr16
inc
jne
jb
outs
je
dec
jae
jne
ins
dec
jb
ins
jo
jns
push
gs
popa
arpl
dec
outs
jbe
dec
gs
add
gs
jb
addr16
inc
jne
jb
outs
je
outs
ins
popa
imul
push
gs
jne
arpl
gs
ins
jbe
add
fs
inc
jae
gs
bound
gs
ins
jbe
add
je
js
arpl
imul
ins
bound
dec
outs
popa
add
popa
jb
jae
imul
popa
outs
imul
jae
jne
arpl
je
gs
ins
add
je
inc
jne
ins
dec
popa
ins
add
fs
data16
bound
jb
outs
add
outs
arpl
add
je
popa
outs
imul
jae
jne
arpl
popa
ins
gs
inc
gs
outs
jbe
jb
outs
ins
outs
je
popa
jb
popa
bound
inc
gs
outs
ins
fs
popa
je
add
je
gs
imul
add
je
inc
imul
outs
outs
add
jb
popa
je
push
gs
outs
jbe
add
outs
ja
jb
inc
outs
outs
je
imul
pop
inc
outs
jne
je
inc
gs
gs
add
imul
ins
bound
add
ja
jne
add
je
inc
jo
push
gs
imul
je
dec
je
ins
add
jb
add
je
inc
gs
jne
je
inc
gs
je
imul
pop
push
outs
je
ins
push
arpl
fs
push
ins
gs
push
jo
imul
add
je
inc
popa
arpl
push
outs
ins
imul
push
gs
outs
outs
jae
add
je
push
je
je
jae
outs
fs
je
gs
outs
outs
jae
push
je
gs
ins
add
je
inc
outs
outs
je
outs
je
outs
addr16
add
popa
fs
jns
gs
addr16
dec
gs
fs
add
je
push
push
inc
cmp
inc
gs
jns
gs
jae
je
dec
gs
outs
add
je
inc
outs
outs
je
outs
je
jns
add
je
inc
outs
outs
je
outs
je
outs
addr16
add
je
push
imul
inc
gs
gs
gs
push
je
gs
ins
add
imul
inc
push
addr16
dec
outs
addr16
add
fs
imul
inc
popa
jae
ss
je
imul
outs
je
xor
push
outs
dec
outs
je
xor
push
outs
push
imul
outs
inc
outs
jne
ins
add
outs
arpl
outs
jo
add
je
push
outs
imul
outs
je
jb
add
je
dec
push
push
gs
imul
pop
push
ins
popa
je
outs
jb
add
je
push
gs
imul
inc
jb
popa
je
jb
push
inc
jno
popa
ins
add
je
dec
popa
push
jb
addr16
dec
imul
outs
add
imul
gs
fs
outs
je
xor
inc
gs
imul
jns
popa
ins
add
je
imul
inc
imul
imul
je
outs
jae
outs
outs
add
je
imul
imul
popa
je
inc
imul
jns
addr16
inc
popa
jae
inc
imul
jns
jae
je
inc
imul
jae
je
inc
jb
jne
outs
je
add
je
push
jae
push
push
js
arpl
add
je
inc
jb
popa
je
dec
outs
push
imul
gs
push
je
jb
dec
outs
outs
add
imul
je
push
gs
fs
ins
ins
push
gs
add
popa
jae
ss
je
imul
je
inc
ins
ins
push
gs
add
dec
outs
ja
jb
push
outs
push
jo
gs
inc
outs
ins
jo
je
dec
popa
jae
add
push
popa
jb
add
outs
ja
jb
outs
jbe
jb
popa
outs
je
addr16
inc
push
inc
dec
dec
add
popa
fs
ins
ins
dec
imul
outs
fs
outs
fs
dec
outs
jae
jb
add
je
dec
je
ins
add
jb
popa
jns
push
jb
je
inc
ins
ins
dec
imul
je
push
outs
jae
je
outs
outs
add
js
inc
jns
gs
inc
gs
jne
data16
push
gs
jb
add
je
jb
inc
js
je
push
gs
fs
jns
add
je
dec
push
add
je
dec
gs
jae
je
inc
popa
jo
arpl
jns
jae
je
push
outs
jae
je
outs
outs
add
gs
je
inc
arpl
jo
outs
jb
addr16
dec
outs
jo
je
ins
outs
arpl
imul
pop
dec
jne
jo
je
ins
outs
arpl
imul
outs
jae
outs
jb
inc
ins
outs
arpl
push
jb
outs
jae
outs
jb
inc
imul
arpl
popa
fs
inc
push
add
fs
inc
gs
gs
add
fs
push
outs
popa
ins
gs
je
dec
outs
je
data16
imul
je
inc
outs
popa
bound
popa
imul
outs
je
add
je
inc
outs
popa
bound
popa
imul
outs
je
add
popa
fs
ins
ins
inc
jns
gs
inc
gs
imul
push
jb
je
inc
ins
ins
inc
jns
gs
inc
gs
gs
jo
imul
dec
outs
jbe
add
je
inc
jne
ins
push
popa
je
add
jae
js
outs
jae
outs
outs
add
ins
jo
jb
push
outs
add
ins
jo
jb
add
je
inc
popa
jo
arpl
jns
addr16
dec
jae
je
popa
arpl
add
jb
add
je
inc
js
jae
jae
inc
outs
outs
je
imul
inc
gs
popa
ins
add
je
inc
outs
fs
popa
jae
add
je
dec
outs
arpl
push
popa
je
add
je
dec
jae
ins
imul
jb
add
je
push
imul
pop
dec
gs
push
push
gs
dec
outs
jbe
jb
popa
outs
je
jne
je
jb
add
je
jns
gs
outs
fs
je
jns
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
je
outs
fs
gs
addr16
dec
outs
fs
gs
popa
outs
fs
add
jae
ins
jbe
push
jns
gs
popa
outs
fs
add
jae
ins
jbe
dec
gs
outs
fs
popa
outs
fs
add
je
gs
outs
fs
jb
ins
dec
popa
outs
fs
add
je
imul
gs
gs
outs
fs
outs
fs
addr16
inc
arpl
imul
add
je
push
gs
jb
push
jns
add
inc
gs
popa
ins
jne
add
je
jns
popa
ins
imul
outs
add
gs
je
inc
gs
gs
je
add
je
popa
ins
jne
add
je
outs
fs
je
outs
arpl
push
popa
jb
imul
jb
addr16
dec
outs
arpl
push
popa
jb
popa
bound
add
je
dec
outs
arpl
push
jns
add
je
dec
jae
imul
fs
jb
jne
outs
je
inc
gs
imul
add
je
outs
arpl
push
imul
add
je
outs
imul
outs
jb
push
gs
js
gs
imul
je
popa
jb
ins
gs
jb
add
je
dec
jae
je
je
arpl
addr16
dec
jae
popa
ins
jne
push
jns
add
imul
push
gs
jns
add
je
push
popa
jb
ins
gs
jb
jns
add
je
popa
ins
jne
add
je
dec
outs
fs
add
je
outs
gs
arpl
addr16
outs
je
add
jo
addr16
dec
jo
jb
outs
fs
jns
add
jae
ins
jbe
push
je
imul
pop
push
imul
outs
ins
jbe
push
imul
add
jae
ins
jbe
dec
gs
outs
add
je
dec
gs
outs
fs
popa
outs
fs
add
je
push
jns
gs
popa
outs
fs
add
jae
ins
jbe
inc
imul
je
inc
imul
fs
add
jae
ins
jbe
push
jns
add
jae
ins
jbe
dec
gs
bound
add
je
dec
gs
bound
push
jns
add
ins
jo
jb
inc
js
push
add
gs
jb
gs
fs
add
gs
jb
outs
outs
je
outs
je
addr16
dec
jne
jo
je
addr16
push
gs
outs
outs
jae
add
fs
jb
outs
jb
addr16
inc
jb
outs
jb
push
gs
outs
jbe
inc
je
push
gs
jae
push
jo
arpl
dec
jae
gs
gs
jb
imul
dec
jne
bound
add
dec
gs
gs
inc
outs
ins
jo
jb
dec
jb
imul
je
outs
outs
jbe
jb
gs
inc
popa
outs
inc
outs
outs
jbe
jb
inc
jb
ins
add
outs
jbe
jb
push
outs
dec
outs
jbe
jb
popa
outs
je
je
imul
jbe
jb
inc
jb
ins
dec
outs
jbe
jb
popa
outs
je
je
imul
jae
imul
inc
jb
ins
add
outs
jbe
jb
inc
jb
ins
add
inc
imul
inc
jb
popa
je
dec
outs
jae
popa
outs
arpl
inc
popa
outs
inc
outs
outs
jbe
jb
push
outs
add
jo
push
outs
add
je
dec
gs
addr16
dec
gs
imul
jns
inc
gs
popa
ins
jne
dec
jb
gs
jne
je
dec
popa
js
dec
imul
dec
jae
jb
popa
jns
inc
gs
outs
outs
jae
jb
arpl
jae
addr16
inc
ins
imul
imul
inc
popa
ins
ins
bound
imul
outs
je
gs
outs
arpl
addr16
dec
jae
outs
jne
add
je
imul
je
inc
gs
jb
jo
imul
pop
dec
jae
bound
jb
arpl
gs
dec
jae
outs
je
jb
popa
arpl
addr16
dec
jae
outs
gs
arpl
gs
imul
outs
outs
add
je
outs
outs
jae
jb
arpl
add
je
dec
jae
outs
gs
arpl
add
je
outs
gs
arpl
gs
imul
outs
outs
add
je
dec
jae
ins
popa
jae
add
je
outs
fs
popa
jb
ins
gs
jb
add
je
outs
je
jb
popa
arpl
add
je
inc
popa
jae
push
jns
add
je
ins
gs
outs
je
jns
add
je
inc
imul
add
je
push
jb
jo
jb
jns
jns
add
je
inc
jbe
outs
je
popa
outs
fs
gs
jns
add
je
gs
bound
add
je
inc
popa
outs
push
gs
add
je
inc
popa
outs
push
jb
je
add
fs
popa
outs
add
je
jb
jo
jb
imul
inc
jne
je
ins
inc
je
jb
bound
gs
addr16
inc
jae
gs
bound
inc
imul
gs
add
imul
outs
gs
arpl
add
ins
inc
outs
add
je
dec
jae
jne
ins
add
imul
push
gs
fs
imul
jo
gs
outs
jbe
jb
popa
outs
je
push
jb
ins
add
je
jb
arpl
jae
jae
jns
popa
ins
add
je
push
push
jae
addr16
dec
add
outs
jae
dec
popa
imul
ja
dec
imul
dec
popa
jae
js
je
add
je
jne
jb
outs
je
addr16
push
jae
jb
addr16
dec
popa
imul
add
je
inc
imul
addr16
dec
popa
outs
fs
add
je
jb
arpl
jae
jae
inc
gs
outs
imul
jbe
jae
dec
outs
jbe
imul
je
outs
add
push
jb
jns
dec
popa
jae
dec
outs
fs
data16
imul
push
imul
outs
ja
popa
je
push
imul
ins
inc
imul
dec
gs
add
jo
outs
fs
gs
add
je
push
je
dec
outs
ja
addr16
inc
jne
jb
outs
je
push
add
je
dec
popa
outs
popa
addr16
push
dec
add
jb
add
ja
push
jb
outs
arpl
add
gs
popa
jo
inc
popa
je
push
je
imul
inc
jae
gs
bound
popa
ins
add
je
push
jb
arpl
jae
popa
ins
add
jp
dec
data16
je
popa
jae
push
imul
outs
jb
addr16
push
je
jb
dec
outs
outs
add
je
push
gs
popa
outs
fs
jb
dec
jne
jo
je
jae
je
push
gs
popa
outs
fs
jb
inc
jb
outs
jb
addr16
push
je
outs
fs
jb
dec
jne
jo
je
addr16
inc
outs
fs
push
je
gs
ins
add
jo
outs
fs
imul
pop
push
je
outs
fs
jb
inc
jb
outs
jb
push
jb
ins
push
je
jb
add
je
jb
arpl
jae
jns
add
je
push
inc
ins
outs
bound
push
jb
jo
jb
imul
inc
arpl
gs
fs
imul
jae
addr16
push
outs
jb
add
je
arpl
gs
arpl
outs
outs
outs
arpl
outs
jae
addr16
push
gs
outs
je
inc
outs
fs
outs
imul
outs
jae
popa
je
add
je
dec
gs
add
imul
add
je
jb
jne
je
push
gs
outs
arpl
jno
popa
ins
jae
inc
gs
bound
arpl
popa
fs
gs
addr16
inc
jb
jne
jae
add
call
icebp
iret
dec
stos
mov
pop
stos
add
mov
pop
push
sbb
mov
mov
pop
jg
aad
cmp
sbb
adc
sbb
adc
sbb
adc
adc
sbb
add
add
add
push
add
adc
adc
push
add
add
push
add
add
add
add
sbb
and
add
adc
adc
add
adc
push
or
push
adc
add
add
add
add
add
add
add
add
add
adc
add
push
add
add
sbb
push
adc
add
add
adc
loope
add
push
adc
add
cmp
add
add
push
add
and
sub
add
adc
add
adc
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
adc
adc
push
adc
push
add
push
push
adc
pop
add
sbb
or
add
adc
add
add
push
or
add
push
adc
add
add
adc
push
add
push
add
adc
add
add
push
and
add
push
push
add
add
push
add
sbb
or
add
add
or
add
add
add
add
sbb
add
cmp
add
adc
inc
add
add
fld
add
or
add
adc
pop
push
adc
push
add
add
add
add
add
add
add
push
push
add
add
adc
or
add
push
adc
adc
adc
pop
add
sbb
pop
add
sbb
or
add
mov
push
adc
add
add
add
and
add
sbb
add
and
push
and
add
adc
add
fld
push
or
add
or
add
sbb
add
sbb
or
add
add
add
add
push
push
add
adc
push
pop
add
adc
add
adc
add
adc
add
adc
add
adc
add
or
sbb
add
or
adc
add
sbb
sub
and
add
sub
add
add
adc
ins
pop
and
add
cmp
jl
and
adc
add
cmp
mov
adc
or
add
sbb
sbb
and
je
adc
mov
adc
je
adc
adc
sbb
and
or
or
sub
sbb
adc
or
or
and
adc
or
adc
adc
sbb
and
or
or
or
sub
or
or
add
sub
sub
sbb
and
add
sbb
and
add
sbb
sbb
adc
and
adc
sbb
and
add
sub
cmp
add
or
and
or
adc
or
add
sub
add
adc
adc
or
sbb
and
sub
add
add
add
sbb
and
add
and
movs
adc
or
and
sub
and
add
add
add
or
adc
add
adc
adc
add
add
sbb
and
sbb
add
or
adc
push
adc
or
sbb
add
adc
add
add
add
add
add
push
adc
push
push
add
add
pop
add
add
or
add
or
add
or
add
or
add
push
or
add
add
add
push
adc
push
adc
push
push
add
add
sbb
add
push
sbb
add
or
add
sbb
sbb
add
sbb
pop
add
sbb
adc
add
add
or
add
push
add
sbb
add
sbb
adc
rol
add
adc
add
sbb
cmp
cmp
add
or
adc
add
or
or
add
adc
adc
or
add
adc
or
add
adc
adc
add
or
sbb
add
push
sbb
push
adc
or
push
sbb
and
add
add
add
and
add
or
add
adc
add
sbb
adc
add
sub
adc
push
and
add
adc
push
adc
add
adc
cmp
add
adc
adc
adc
add
add
add
hlt
add
mov
adc
adc
add
add
add
add
and
add
xor
and
add
xor
add
add
add
and
adc
add
add
and
add
adc
sub
push
adc
adc
adc
add
in
push
and
add
sub
and
adc
sbb
sbb
and
adc
or
add
cmp
add
adc
adc
or
add
adc
mov
add
or
add
cmp
and
adc
mov
add
add
add
adc
or
add
adc
add
adc
cmp
push
adc
adc
add
push
push
adc
add
adc
or
adc
adc
add
cld
add
add
and
add
add
xor
cmp
and
add
adc
add
add
add
or
add
or
add
or
and
add
push
add
add
pop
add
add
add
add
and
add
sbb
and
add
sbb
push
adc
add
adc
add
mov
adc
add
adc
or
add
adc
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
or
or
adc
add
adc
push
add
add
or
or
or
adc
add
add
add
add
push
add
add
adc
add
adc
add
add
adc
add
add
add
add
adc
adc
push
add
push
add
adc
add
adc
adc
push
add
adc
push
add
adc
push
add
add
adc
add
add
adc
add
add
adc
add
push
add
adc
add
adc
add
adc
add
adc
add
add
add
add
push
add
add
adc
adc
push
add
add
add
add
sbb
ins
add
add
add
sbb
cmp
cmp
xchg
adc
add
adc
cmp
cmp
add
push
adc
push
or
add
adc
add
adc
push
add
push
push
add
add
add
add
add
or
add
add
and
adc
adc
adc
adc
or
add
sub
adc
adc
adc
adc
adc
or
add
sub
and
adc
adc
adc
adc
adc
adc
push
and
add
add
add
and
and
adc
adc
add
adc
push
add
push
add
add
add
push
or
add
adc
adc
add
sbb
add
add
sbb
add
add
cmp
add
adc
adc
cmp
cmp
mov
or
add
cmp
add
cmp
add
adc
adc
push
adc
adc
push
adc
pop
add
sbb
cmp
adc
adc
add
cmp
add
cmp
or
add
sub
add
sub
sbb
lods
add
add
push
adc
adc
cmp
mov
xor
cmp
cmp
cmp
sldt
sbb
cmp
cmp
push
push
push
push
add
add
adc
add
add
adc
push
add
add
adc
adc
add
or
add
push
push
or
or
add
adc
adc
push
push
adc
push
add
push
push
or
push
add
adc
add
or
pop
add
add
or
add
or
adc
push
adc
sbb
add
add
cmp
add
add
or
add
add
add
push
pop
add
add
add
adc
add
add
add
push
push
add
add
push
push
pop
adc
add
push
add
pop
add
add
adc
add
push
push
pop
and
add
adc
push
add
add
sbb
add
sbb
sbb
adc
add
sbb
adc
add
sbb
adc
sbb
adc
add
or
adc
add
sbb
add
add
or
push
add
add
push
add
or
add
push
or
push
adc
add
adc
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
or
or
add
or
push
or
or
or
or
or
add
or
push
or
sbb
add
or
push
or
push
or
or
add
or
push
str
or
or
adc
adc
push
add
or
or
adc
sbb
add
or
adc
sbb
adc
sbb
sbb
adc
add
push
push
push
add
add
or
or
push
add
push
push
sbb
add
add
sbb
push
push
pop
add
sbb
push
add
add
push
add
adc
push
sbb
push
add
add
push
sbb
push
or
add
adc
push
push
add
add
adc
or
push
push
or
add
sub
or
add
sub
add
add
push
push
pop
add
sbb
push
add
push
push
add
add
push
add
add
sbb
add
sbb
or
add
adc
add
adc
adc
or
push
add
push
sbb
add
add
adc
add
add
add
add
add
add
add
add
adc
add
or
or
add
add
adc
add
sub
adc
adc
add
push
adc
add
adc
add
add
add
add
push
add
sub
add
push
push
add
add
push
add
add
adc
push
push
add
adc
add
adc
or
add
or
adc
js
jo
ins
add
jb
add
pop
add
push
push
add
pop
add
or
push
add
add
add
push
add
xor
or
push
push
add
add
add
add
sbb
add
add
adc
add
add
adc
test
sbb
mov
sbb
add
add
sbb
add
or
add
add
adc
sbb
or
sbb
push
adc
add
adc
add
push
add
adc
adc
pop
push
adc
push
add
adc
jo
add
je
add
pop
add
jb
outs
add
jae
add
inc
add
add
je
add
add
adc
sub
push
adc
adc
adc
add
and
add
adc
push
or
add
or
adc
sbb
and
add
adc
add
add
and
push
adc
or
push
add
or
adc
push
add
sub
sub
add
mov
add
add
add
add
inc
ins
ins
outs
ja
jne
je
jo
add
sub
sub
add
hlt
add
add
mov
sub
sub
adc
adc
adc
or
jmp
add
add
add
and
add
cmp
and
add
push
inc
add
xor
jae
gs
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
push
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
add
or
add
add
pop
adc
push
add
push
add
add
pop
add
adc
xor
adc
adc
adc
and
adc
add
adc
push
adc
push
add
push
add
add
adc
pop
add
push
pop
add
adc
add
adc
adc
adc
adc
add
adc
xor
push
pop
add
adc
pop
add
or
add
add
or
sbb
pop
add
adc
add
add
push
push
push
push
push
add
push
adc
push
adc
push
push
adc
adc
and
push
adc
push
push
push
adc
add
cmp
cmp
adc
sbb
push
adc
sbb
push
adc
sbb
push
adc
sbb
add
add
push
sbb
and
add
adc
jge
adc
pop
adc
adc
or
pop
push
push
push
push
push
push
adc
adc
ins
adc
jge
push
push
push
adc
add
add
jge
adc
adc
or
add
sbb
add
adc
add
add
push
adc
add
add
cmp
cmp
adc
adc
add
add
sub
sub
adc
adc
adc
adc
or
add
adc
push
pop
add
adc
adc
pop
add
sub
add
push
push
sbb
add
or
add
test
adc
push
adc
push
adc
adc
push
or
add
push
add
jne
and
push
sbb
sbb
add
push
or
sbb
add
add
adc
push
push
push
push
push
or
add
push
sbb
sbb
sub
add
push
sbb
pop
pop
or
adc
adc
push
or
sbb
and
push
and
add
xor
adc
adc
adc
adc
add
xor
add
adc
or
add
add
or
pop
push
push
adc
push
or
adc
push
adc
push
sbb
adc
adc
add
add
sbb
pop
add
or
or
add
or
and
adc
add
push
adc
or
add
or
pop
add
inc
adc
adc
push
adc
inc
pop
adc
adc
pop
add
sbb
add
push
pop
and
push
sbb
add
or
add
sbb
add
add
add
adc
or
inc
adc
cmp
adc
adc
adc
adc
adc
js
adc
pop
adc
cmp
add
cmp
sbb
adc
or
add
fld
and
or
or
add
cmp
add
add
adc
adc
push
add
add
add
add
add
add
sbb
and
add
sbb
pop
add
add
add
or
sub
sbb
sbb
or
add
sbb
add
sbb
or
push
adc
push
adc
add
add
adc
add
adc
push
sbb
push
adc
sbb
pop
add
push
adc
pop
or
push
push
sbb
add
sbb
and
sbb
add
push
sbb
pop
sub
push
push
push
push
push
or
sbb
push
push
add
or
or
adc
push
sbb
adc
push
adc
or
adc
push
or
push
or
add
add
adc
or
add
jne
and
add
add
adc
push
or
add
adc
adc
or
add
or
adc
push
and
add
adc
add
or
add
add
add
sbb
or
add
push
adc
or
add
adc
or
add
sub
adc
or
adc
sbb
or
push
or
add
adc
add
or
or
or
or
add
add
push
or
or
add
or
adc
sbb
add
adc
add
add
pop
add
adc
or
adc
add
cmp
sbb
or
or
sbb
add
or
and
adc
or
add
sbb
or
and
add
xor
mov
sub
and
add
sub
pop
add
sbb
add
sbb
push
pop
add
or
add
sbb
adc
add
and
adc
adc
or
add
sbb
sbb
adc
or
sbb
pop
add
ins
adc
add
pop
sbb
sbb
add
xchg
adc
or
adc
sbb
add
sbb
pop
push
push
adc
imul
sub
adc
adc
ins
adc
cmp
cmp
ins
adc
adc
push
pop
or
adc
imul
sbb
adc
add
cmp
mov
and
add
add
add
cmp
add
add
add
sbb
adc
or
pop
add
or
xor
or
sbb
pop
add
cmp
sbb
adc
or
add
adc
or
add
or
jge
adc
add
cmp
adc
cmp
cmp
or
adc
add
add
push
add
imul
add
sub
jge
adc
adc
sbb
push
adc
sbb
add
sbb
add
and
or
and
adc
add
adc
add
add
adc
add
push
or
add
adc
add
and
add
add
add
add
and
add
add
add
fld
pop
add
push
add
push
sbb
sbb
add
add
sbb
sbb
and
push
push
adc
adc
add
ror
adc
or
add
cmp
add
add
push
add
add
adc
or
mov
sbb
sbb
pop
add
xor
pop
or
sbb
adc
or
adc
or
and
add
add
and
adc
adc
sbb
sub
lea
add
adc
mov
sub
sub
or
and
adc
add
and
add
and
add
add
lds
and
mov
adc
add
adc
adc
add
mov
and
adc
add
sbb
pop
add
or
push
and
add
add
sbb
jno
adc
adc
adc
xor
jno
adc
pop
adc
xor
adc
add
cmp
sbb
adc
or
and
add
adc
sbb
sbb
or
and
sbb
pop
add
adc
or
add
add
add
add
int
and
sbb
pop
or
or
sub
mov
add
sub
push
adc
adc
or
adc
cmp
and
adc
adc
or
and
add
sub
sbb
and
adc
or
and
and
adc
cmp
and
adc
cmp
and
adc
adc
adc
adc
adc
adc
add
add
push
add
add
add
add
and
adc
add
pop
and
add
adc
add
and
and
adc
add
sbb
adc
jge
adc
adc
add
add
loopne
pop
add
add
hlt
add
add
add
pop
add
sysret
add
add
adc
add
push
add
add
sbb
pop
add
push
sbb
xor
add
or
adc
or
or
add
cmp
cmp
pop
add
sub
add
cmp
or
add
add
xor
pop
add
cmp
add
adc
push
add
adc
add
sbb
and
sbb
cmp
pop
add
adc
adc
and
or
cmp
mov
add
add
adc
add
cmp
adc
add
or
adc
add
cmp
adc
adc
adc
adc
pop
pop
add
adc
adc
adc
or
add
pop
add
sub
and
or
add
mov
adc
jno
adc
sbb
adc
adc
sbb
and
add
sbb
sbb
or
add
push
adc
add
lea
pop
add
or
add
adc
or
add
and
add
or
or
or
or
or
xor
cmp
xor
cmp
pop
add
or
pop
add
adc
pop
and
adc
pop
add
adc
add
add
add
sbb
and
add
adc
add
adc
add
pop
add
or
or
add
or
or
or
or
or
or
or
adc
add
pop
add
push
add
add
add
add
add
add
add
add
adc
add
adc
add
adc
push
add
add
adc
add
pop
add
add
add
adc
add
adc
add
pop
add
add
add
push
add
adc
push
add
pop
add
adc
push
add
push
add
adc
adc
push
add
adc
push
add
adc
adc
push
add
pop
add
adc
push
add
adc
add
or
adc
push
add
adc
adc
push
add
add
pop
add
add
push
adc
add
and
add
add
add
pop
add
push
add
adc
push
add
adc
push
add
add
add
pop
add
add
add
add
pop
add
add
sbb
or
adc
cmp
add
adc
adc
test
sbb
sbb
adc
adc
adc
adc
and
adc
add
sbb
cmp
adc
push
adc
push
add
add
add
xor
or
mov
sub
push
add
add
or
add
sub
mov
and
adc
add
xor
or
and
add
jge
adc
aad
pop
add
rol
mov
cmp
or
pop
push
adc
sbb
add
mov
sbb
pop
add
and
sbb
adc
add
mov
sbb
adc
sbb
sbb
add
push
adc
add
sbb
adc
cmp
sbb
add
adc
add
adc
add
cmp
add
adc
adc
sbb
or
adc
adc
mov
adc
or
or
or
adc
push
sbb
add
add
cmp
add
add
pop
add
cmp
add
cmp
push
adc
adc
add
push
add
push
add
push
pop
and
add
adc
push
push
adc
adc
push
and
add
adc
ror
pop
add
add
add
and
add
sbb
sbb
or
xor
cmp
sbb
adc
pop
add
sbb
add
add
xchg
sysret
add
icebp
adc
icebp
or
pop
add
push
adc
or
sbb
xor
push
push
sbb
pop
pop
add
pop
pop
add
pop
pop
add
add
cmc
push
pop
add
adc
sbb
add
add
push
pop
add
and
add
adc
push
adc
sbb
xor
sbb
push
add
sbb
pop
or
adc
push
push
sbb
adc
or
adc
adc
push
push
adc
add
and
adc
sbb
or
and
sbb
sbb
push
sbb
sbb
sbb
add
sbb
add
add
pop
or
or
sbb
jge
push
push
or
adc
add
sbb
add
add
or
or
or
or
sbb
adc
pop
add
or
or
pop
pop
or
add
push
push
or
add
or
adc
or
adc
pop
or
or
or
add
xchg
or
or
add
adc
or
adc
adc
add
adc
or
adc
push
push
sbb
or
or
xor
add
add
or
add
adc
add
sbb
add
adc
add
sbb
or
add
or
add
or
sub
sbb
sbb
sbb
pop
pop
adc
cmp
adc
adc
push
push
adc
adc
or
add
adc
adc
or
or
adc
adc
adc
sbb
push
push
or
add
or
add
sbb
add
adc
es
or
push
adc
sbb
adc
add
push
adc
sbb
adc
push
add
push
or
add
sbb
sub
sbb
sub
pop
push
push
sbb
or
sbb
push
or
xor
sbb
push
adc
or
pop
push
sbb
xor
adc
adc
xor
or
sbb
adc
adc
pop
pop
add
xor
xor
adc
add
cmp
xor
sbb
cmp
add
push
sbb
sbb
pop
or
adc
adc
adc
or
adc
push
or
add
adc
xor
or
or
or
pop
add
xor
adc
adc
adc
sbb
pop
add
push
adc
push
adc
push
add
sbb
pop
pop
add
sbb
add
add
add
pop
pop
push
adc
adc
sbb
or
or
adc
and
sbb
pop
add
adc
or
and
sbb
and
adc
adc
cmp
cmp
adc
adc
push
pop
or
push
sbb
or
pop
add
push
adc
pop
push
sbb
add
push
adc
push
add
add
sbb
adc
or
add
or
mov
cmp
sbb
adc
add
add
sbb
xor
add
pop
pop
add
or
adc
adc
add
or
and
adc
add
add
and
adc
add
add
adc
or
adc
or
pusha
push
adc
add
pop
add
sbb
xor
add
or
das
pop
push
push
sbb
push
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
adc
push
or
or
push
push
adc
push
push
adc
push
or
add
sub
sbb
sub
add
add
pop
and
add
adc
sbb
adc
pop
and
push
push
adc
add
sbb
add
or
adc
adc
adc
adc
pop
add
push
adc
or
pop
add
adc
xor
adc
push
push
sbb
xor
sbb
adc
push
sbb
xor
add
or
add
push
push
adc
push
sbb
xor
add
pop
pop
add
push
pop
add
xor
and
or
adc
adc
add
add
add
or
add
jge
add
add
pop
adc
and
xor
inc
add
add
cmp
xor
inc
add
add
add
sub
add
cmp
sub
add
add
add
add
xor
sub
add
aaa
add
xor
inc
add
add
cmp
cmp
inc
add
xor
and
adc
add
add
dec
add
inc
add
dec
add
inc
add
dec
add
inc
add
dec
add
push
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
dec
add
push
add
add
bound
ins
add
arpl
dec
add
jns
push
add
imul
add
cmp
add
bound
ins
add
arpl
imul
add
je
outs
add
add
cmp
add
inc
add
dec
add
inc
add
dec
add
inc
add
dec
add
outs
add
add
pop
pop
add
outs
add
jb
jns
jo
je
add
add
pop
add
outs
add
ins
add
arpl
and
ins
add
je
push
add
add
add
jae
and
outs
add
je
and
jae
jne
jo
jo
outs
add
je
and
data16
jne
ins
add
add
ins
add
jne
jae
add
das
jne
outs
add
js
jo
add
je
add
add
jo
add
popa
add
add
add
add
add
add
add
add
adc
add
add
pop
ficom
add
add
outs
jb
ins
ins
dec
popa
imul
jb
gs
ins
add
add
add
and
