test
or
xchg
xor
add
pop
add
add
add
sbb
add
outs
std
(bad)
jmp
dec
adc
mov
xchg
stc
out
in
adc
lds
cmp
dec
mov
leave
mov
fnstcw
jecxz
and
push
loopne
sbb
jne
loop
clc
mov
jg
push
fidiv
loop
pop
push
mov
fdiv
inc
or
pop
or
ret
jbe
mov
push
lods
mov
loope
or
je
mov
js
(bad)
loop
data16
sub
xor
pop
add
retf
sub
loope
mov
loope
aaa
jo
lods
cwde
jle
daa
out
dec
mov
push
inc
ss
cmp
cmp
div
xchg
fst
out
outs
arpl
(bad)
rcl
js
jmp
or
dec
push
mov
xor
cmp
push
and
pushf
call
xchg
mov
mov
xor
sbb
(bad)
data16
inc
das
cmc
imul
call
pop
int
sbb
dec
mov
mov
pop
mov
or
jmp
stos
adc
rol
outs
dec
adc
cdq
xchg
sub
dec
and
xchg
and
dec
xchg
hlt
push
adc
shl
xor
sbb
in
fs
out
lods
and
jp
xchg
outs
mov
or
ret
shr
pop
cmp
arpl
inc
pop
xor
xchg
jb
inc
ja
mov
or
or
stos
inc
mov
lds
iret
aaa
clc
push
xor
xor
imul
(bad)
imul
inc
mov
jecxz
(bad)
pushf
(bad)
into
iret
add
sbb
ins
jo
inc
xchg
adc
dec
aaa
or
loop
cmp
fldenv
adc
jl
adc
test
fsub
daa
lds
fmul
pop
inc
mov
add
inc
pusha
jmp
inc
sbb
mov
data16
repnz
add
add
mov
pushf
mov
aam
cmps
les
int
jmp
repz
pop
xchg
pushf
xchg
bound
lock
call
dec
test
dec
mov
outs
cmp
ss
jnp
inc
pop
and
or
cwde
test
push
mov
jecxz
shl
fmul
jge
fwait
je
jmp
cmc
loope
add
jecxz
test
push
or
ret
iret
jle
mov
sbb
fbld
(bad)
sti
leave
sub
mov
sbb
inc
ins
sbb
xor
jecxz
aam
int3
jp
mov
ror
lock
sub
imul
jp
ja
inc
js
dec
or
adc
xchg
loopne
xor
xchg
and
jg
xchg
sub
repnz
mov
sub
into
pop
cmc
mov
sub
and
cwde
adc
inc
push
adc
xchg
cmp
test
and
lea
sbb
clc
adc
call
daa
add
cmps
and
test
ins
test
xchg
pop
cmp
ins
cs
push
sub
mov
or
lock
xlat
pop
les
dec
mov
stc
cmp
leave
mov
adc
dec
and
gs
shl
xor
xchg
jecxz
popf
movs
push
inc
cmp
aad
inc
inc
xchg
sbb
out
push
call
dec
ja
loop
xor
into
cmps
jl
neg
aad
fs
xor
out
(bad)
sbb
das
loop
repz
cmps
cmp
mov
scas
movs
mov
retf
ror
fisub
push
pop
or
or
push
push
xchg
mov
ja
fcomp
jmp
rcr
jne
pop
xor
sbb
cmps
cs
lods
sub
sub
xchg
jb
xor
sub
push
push
icebp
xor
cdq
popa
pushf
int
idiv
mov
cmp
arpl
mov
sub
mov
repz
dec
jnp
xchg
push
dec
lahf
movs
add
ins
cmp
in
inc
aad
xlat
aad
dec
mov
stos
clc
iret
xor
pop
retf
loopne
fld
dec
outs
outs
cmp
dec
mov
ins
(bad)
fptan
clc
loopne
push
rcl
je
sti
lods
pop
and
retf
or
or
in
mov
push
jns
int
or
sub
mov
dec
add
add
pop
cmp
add
and
in
pop
mov
xchg
lods
cmps
jl
ss
ds
popa
sbb
fcomp
in
and
sub
aam
push
xchg
mov
repz
out
arpl
les
gs
jmp
push
dec
call
aaa
adc
jg
sub
ficom
jmp
leave
mov
aas
and
out
mov
mov
sbb
cmps
sub
add
jmp
rol
adc
lods
in
in
xor
sar
shr
xor
mov
and
sti
fcomp
lock
aaa
int
xor
push
xor
dec
xor
stc
pop
out
xlat
mov
outs
cmps
xchg
stos
jmp
add
cmp
jg
hlt
mul
push
push
ss
sar
test
loope
mov
xor
and
imul
add
mov
add
(bad)
std
arpl
add
cld
jno
xchg
into
int3
stc
(bad)
push
sbb
js
add
(bad)
(bad)
fdivr
sub
sub
(bad)
out
mov
jge
aaa
mov
dec
cmp
xchg
lock
cmp
mov
out
add
popf
js
pop
add
clc
pop
jnp
cmc
mov
data16
mov
jne
sbb
adc
out
xchg
sar
fsub
adc
jmp
mov
std
xchg
shl
and
out
jp
(bad)
mov
(bad)
push
in
sbb
or
pop
pop
jo
stos
mov
cmp
mov
cld
sub
mov
les
lock
xlat
loop
dec
jbe
adc
cld
push
adc
push
cs
xchg
popa
sbb
mov
or
pop
and
sbb
ins
cmp
push
les
(bad)
call
popf
jno
in
dec
jne
inc
sub
cmps
or
repnz
pop
enter
xor
jecxz
arpl
mov
cs
dec
mov
adc
sub
jg
test
outs
inc
sub
scas
push
call
jo
mov
outs
and
in
jge
mov
sar
clc
aaa
jmp
mov
cmp
hlt
xor
nop
mov
jno
jae
cwde
jecxz
mov
nop
mov
test
fisub
ja
std
shr
fbstp
jns
je
adc
lods
mov
pop
jno
movs
cmp
dec
mov
popa
and
pop
pushf
ficom
sub
jge
inc
mov
adc
(bad)
dec
xchg
jg
jg
adc
xchg
cdq
pop
push
xchg
outs
mov
je
add
mov
iret
pushf
pop
(bad)
fisub
cmp
mov
jnp
stos
mov
fisttp
pop
cmc
jnp
out
dec
pushf
imul
mov
push
imul
add
mov
pushf
inc
int
adc
push
and
xor
rcl
jne
daa
call
jb
(bad)
mov
xor
pop
fcom
loopne
loopne
jge
in
jmp
xlat
jmp
lock
add
fdivr
data16
push
mov
pop
cmps
pop
xlat
sub
not
aaa
cli
dec
mov
in
push
(bad)
retf
mov
and
(bad)
(bad)
popf
inc
xchg
xchg
imul
dec
mov
mov
push
retf
sub
lds
pop
je
mov
xchg
test
fmul
inc
fwait
push
push
jl
inc
adc
pop
icebp
cmp
xor
and
push
(bad)
popa
jp
sti
lock
sbb
xor
dec
mov
push
sbb
ins
jp
mov
fwait
push
adc
retf
scas
xchg
and
lahf
jecxz
aam
xor
mov
xchg
popa
or
xchg
sar
stc
jbe
inc
mov
ss
push
movs
call
cmp
jecxz
hlt
stc
je
fiadd
mov
xor
das
fsub
and
loopne
push
sahf
repz
bound
in
xchg
push
int
jnp
mov
and
(bad)
adc
sbb
sysenter
adc
fcomp
mov
and
sub
popf
cdq
in
mov
in
fistp
std
int3
sar
into
push
repz
add
xchg
scas
jne
fmul
inc
mov
aas
lea
ins
adc
and
dec
sub
dec
and
loopne
scas
or
(bad)
loopne
fild
add
mov
mov
mov
stos
sbb
es
push
add
or
pusha
mov
push
push
lahf
cmp
add
repz
cld
pop
jmp
das
outs
xchg
mov
ret
(bad)
movs
mov
test
outs
fldenv
inc
mov
mov
jns
lods
dec
pop
push
sbb
push
mov
retf
pop
xchg
mov
xlat
mov
mov
int3
rol
leave
scas
jl
pushf
stos
mov
inc
mov
mov
push
es
mov
je
xor
and
mov
hlt
stos
add
jg
xor
xchg
mov
cmc
mov
xor
inc
mov
fstp
adc
aaa
xchg
scas
out
daa
cmp
adc
xor
xchg
ret
jle
in
jae
clc
ja
mov
pop
mov
(bad)
and
pop
mov
in
jbe
dec
adc
sbb
mov
jmp
jbe
jl
out
pusha
int3
add
cld
mov
cmp
inc
scas
pop
push
int3
xor
cmp
lock
stos
(bad)
sti
sub
cmp
or
jp
jmp
cmp
sub
push
fdiv
cmp
pop
push
sahf
sti
jmp
mov
cmp
stos
data16
sbb
mov
mov
shr
loopne
sbb
test
repz
sub
test
aam
(bad)
sbb
jl
push
mov
sub
dec
pushf
pop
mov
imul
xchg
(bad)
out
or
cdq
dec
mov
cmp
out
test
or
(bad)
inc
push
addr16
sti
bound
in
or
popa
ds
outs
ds
and
mov
fcom
add
or
fs
cmp
(bad)
test
out
in
push
mov
mov
push
scas
in
stos
(bad)
je
jmp
sub
push
xor
in
(bad)
fsub
mov
dec
xor
sub
dec
(bad)
push
imul
add
(bad)
dec
loop
and
repnz
in
fisttp
aas
dec
push
data16
push
sub
test
adc
bound
mov
imul
imul
mov
mov
in
scas
outs
cld
aad
mov
push
dec
mov
ja
in
sbb
sbb
and
xor
mov
popa
popa
nop
jl
lock
int3
stos
stos
leave
stos
mov
mov
fcom
cmp
xchg
or
ss
jl
(bad)
test
pop
cli
ret
adc
push
xor
or
arpl
xor
inc
mov
mov
jmp
fxch
jns
iret
xor
xchg
imul
ds
popa
stc
lods
inc
mov
sub
popfw
jl
(bad)
shr
adc
int3
jnp
sahf
(bad)
(bad)
cdq
dec
cmc
retf
mov
dec
mov
pusha
out
ds
adc
adc
test
das
xor
mov
cmp
jb
mov
xchg
sub
mov
scas
aam
imul
dec
loopne
out
outs
movs
fisubr
call
(bad)
rol
cmp
movlps
out
pop
xchg
sbb
cmp
repz
push
jp
cli
inc
xchg
inc
test
in
dec
retf
and
lock
push
and
in
into
repz
jmp
pop
cwde
or
inc
jmp
dec
adc
paddq
mov
dec
lock
xchg
fcmovu
dec
jo
scas
xor
xchg
(bad)
jb
into
imul
push
sbb
(bad)
fist
ins
shl
fcmovne
ds
sti
(bad)
jb
inc
lock
out
xor
push
popf
mov
and
and
mov
mul
inc
adc
outs
and
rol
jp
loopne
(bad)
fild
or
fcom
mov
neg
mov
fild
push
(bad)
(bad)
xlat
jecxz
in
es
fiadd
inc
push
test
inc
out
pushf
je
adc
mov
js
test
fld
popa
lock
xchg
jmp
nop
or
test
out
jo
in
push
mov
pop
shr
cdq
ins
add
outs
loop
fidiv
adc
sahf
shl
push
dec
rol
push
std
adc
inc
shl
dec
div
popa
loopne
sti
dec
mov
loope
dec
loopne
imul
(bad)
int
fucomi
call
mov
popf
push
push
mov
scas
stos
lea
jge
adc
paddd
mov
jmp
adc
jge
push
retf
mov
icebp
jge
fadd
push
sub
sbb
add
(bad)
iret
cmp
xchg
(bad)
fsubr
mov
call
enter
mov
movs
cdq
dec
loopne
mov
add
push
mov
into
cs
xchg
dec
sub
adc
xor
cmp
push
pop
pushf
stc
adc
std
inc
adc
push
retf
out
mov
pop
sbb
push
mov
lods
arpl
out
xor
inc
stos
es
inc
pop
fadd
inc
cmc
lods
into
imul
mov
mov
ror
and
and
fadd
daa
leave
xchg
fstp
cmp
ins
xor
daa
add
mov
(bad)
mov
push
sub
jge
std
sub
test
fmul
ffreep
repz
into
adc
call
fwait
into
xor
mov
into
sbb
sub
mov
aad
ja
or
cmp
lock
and
xor
pop
stos
(bad)
mov
mov
add
js
xor
xchg
addr16
mov
or
or
xor
jmp
jle
(bad)
fld
cld
ins
xor
or
push
sub
(bad)
pop
loopne
sub
mov
fwait
mov
cmp
or
in
add
sub
mov
cmp
cmp
xchg
cs
mov
(bad)
clc
call
inc
jns
sbb
add
cmp
es
lahf
dec
mov
ins
xor
adc
mov
in
dec
or
push
(bad)
shl
test
add
push
and
or
sub
jb
sbb
push
mov
outs
mov
mov
or
shl
cmp
sbb
dec
xor
imul
ss
and
pop
jmp
add
fadd
pop
les
dec
clc
pop
xchg
xor
je
into
call
out
jmp
sar
sbb
jne
and
fnstcw
push
xchg
xchg
dec
xchg
movs
mov
das
imul
xor
out
out
inc
sub
jecxz
sbb
mov
mov
aas
push
adc
jbe
ret
xchg
pop
psubw
jno
dec
inc
stc
out
das
div
push
or
xchg
test
in
popa
(bad)
push
sbb
jne
call
or
cmp
aaa
sub
fucomp
loopne
dec
cmp
gs
ds
mov
icebp
mov
inc
cmp
dec
mov
inc
jae
mov
imul
mov
and
cwde
add
dec
bnd
pusha
dec
inc
daa
mov
dec
mov
push
aaa
cwde
push
enter
xchg
scas
xchg
push
and
cmp
jns
ret
aaa
adc
nop
mov
sahf
push
mov
out
ds
cmps
test
sub
push
pop
jle
test
int
mov
push
fisub
xor
add
js
jmp
pop
push
cmp
ret
push
cld
retf
mov
mov
enter
push
xchg
scas
arpl
mov
icebp
out
mov
fld
mov
gs
clc
cmc
dec
test
cmp
fisub
stc
rcr
mov
xchg
push
fbstp
inc
mov
movs
aas
je
cmp
in
(bad)
sub
sti
rcr
mov
loopne
aad
fcom
xor
shl
iret
outs
add
mov
cmp
push
enter
mov
xchg
mov
das
add
(bad)
jp
mov
das
addr16
iret
sub
call
(bad)
out
mov
ss
retf
daa
mov
out
inc
outs
mov
clc
xor
fs
mov
mov
test
inc
fiadd
push
in
repz
(bad)
mov
in
jb
and
or
in
xchg
jmp
dec
out
xor
(bad)
mov
call
movs
ja
mov
and
in
mov
and
jne
inc
cwde
jbe
movs
pop
int
mov
and
mov
ins
loop
sbb
add
sbb
pop
fldcw
xchg
jmp
ins
fidiv
or
loope
and
pop
fmul
fisttp
into
mov
imul
add
dec
pop
sub
mov
lea
xchg
fbstp
add
enter
in
ins
mov
adc
lahf
mov
les
xchg
add
pop
loopne
mov
test
fcomp
dec
sbb
xlat
mov
pop
mov
jge
inc
sub
das
sub
and
fwait
add
push
add
(bad)
jmp
pop
push
cmp
xor
mov
jmp
add
mov
xchg
adc
push
pop
cmp
fs
in
sub
movs
das
sbb
pand
or
(bad)
pop
movs
jle
enter
sbb
push
xchg
(bad)
dec
fwait
pop
icebp
(bad)
fdiv
pop
shl
sub
mov
jecxz
pushf
enter
mov
(bad)
push
inc
aad
inc
cmp
retf
xor
cmp
mov
or
(bad)
idiv
icebp
and
fidiv
fdivr
inc
fist
(bad)
inc
push
and
xor
inc
or
pushf
sub
sti
sub
xchg
pop
mov
mov
shl
mov
jl
test
shl
mov
xor
inc
adc
add
dec
sbb
cdq
push
in
sbb
dec
pop
dec
dec
push
push
push
sbb
mov
test
mov
jae
jl
sub
mov
ins
sub
je
or
(bad)
hlt
jle
(bad)
call
into
mov
stos
adc
jge
lahf
cmp
daa
popa
das
sub
adc
retf
int3
cmps
or
(bad)
ds
(bad)
out
and
push
or
add
or
dec
test
xor
or
out
ds
(bad)
dec
cmp
inc
push
aam
add
jmp
jge
ss
(bad)
(bad)
adc
sar
jns
int
or
ins
xlat
and
xor
bound
xchg
mov
loope
popa
add
ret
jmp
inc
mov
das
xchg
and
mov
cwde
lods
lds
hlt
mov
pop
aaa
outs
inc
jae
ins
inc
rol
and
mov
data16
jbe
fs
(bad)
iret
mov
adc
pusha
repz
and
mov
mov
cmp
push
iret
jecxz
jp
je
(bad)
mov
sub
cmp
mov
push
inc
jnp
call
pop
sub
lahf
pop
outs
pop
(bad)
sub
jmp
(bad)
mov
lds
dec
and
sbb
xchg
or
jae
popa
jmp
pushf
sub
(bad)
jns
jne
fsub
cmp
lds
call
adc
test
jb
xchg
call
int3
mov
or
sub
adc
mov
dec
xor
(bad)
and
mov
mov
fwait
push
test
leave
inc
ins
in
stos
dec
inc
xchg
jb
mov
cmp
(bad)
cmps
xchg
bound
mov
mov
jns
lods
stos
hlt
ja
in
push
cdq
sar
cmp
retf
fdiv
jbe
cmp
(bad)
mov
inc
test
xchg
pop
mov
dec
or
push
test
add
inc
cmp
inc
and
inc
adc
jmp
retf
pop
mov
cmps
mov
jo
bound
fidiv
jg
clc
push
fisttp
jo
js
test
stc
inc
outs
dec
pop
test
add
ins
sbb
sahf
add
out
lods
lea
div
sti
sub
ret
inc
stc
lahf
xchg
mov
loope
rcr
mov
dec
lds
sub
jg
xchg
inc
cmps
and
mov
push
and
loop
cwde
or
cmc
enter
rol
pop
mov
xchg
mov
aas
jne
cmp
ins
loopne
popf
ret
sbb
xor
push
mov
pop
cwde
cs
xchg
in
xchg
and
lock
inc
adc
stc
jno
adc
pop
ds
es
xchg
cmp
rcl
out
xchg
push
and
and
xor
stos
es
xchg
xor
stos
mov
mov
add
pop
cmps
push
pop
rcl
rcr
leave
test
nop
(bad)
aas
inc
jmp
inc
loop
lock
adc
mov
inc
outs
stc
aam
xchg
fisttp
mov
imul
sbb
add
test
loop
push
xchg
out
(bad)
test
lock
mov
ret
mov
sbb
sbb
hlt
mov
mov
imul
sbb
and
jae
popf
jns
sub
push
cmp
or
cmp
mov
loopne
mov
cmc
cmp
xchg
xlat
adc
idiv
daa
sbb
mov
sub
dec
test
mov
mov
xor
add
push
jl
adc
sub
xchg
add
adc
inc
jne
mov
stc
fcomp
jne
add
js
mov
dec
icebp
lds
ret
out
aam
mov
fldl2e
push
fnstcw
icebp
jmp
jmp
lahf
jge
xor
stos
mov
sub
mov
push
hlt
int3
lods
mov
push
iret
les
push
jo
mov
ss
inc
lock
jg
pop
in
sub
pop
ja
xor
mov
jnp
aad
test
or
add
enter
loope
push
fwait
and
inc
adc
push
sar
mov
(bad)
push
js
lods
cmc
inc
xchg
pop
add
ret
and
ins
or
dec
ret
mov
mov
sbb
ret
push
xchg
stos
pushf
cmps
into
push
adc
dec
fstp
imul
fwait
push
mov
rcr
addr16
push
sbb
shl
push
xlat
test
or
in
xor
xchg
adc
pop
cmps
dec
xchg
lock
ret
aas
push
nop
xor
inc
cmc
shl
bound
jp
xlat
bound
jp
das
and
fild
pop
jno
test
jbe
ins
mov
arpl
dec
retf
jecxz
push
aas
lods
dec
or
je
shl
jbe
pop
adc
and
nop
das
cld
stos
xchg
add
mov
das
and
sub
ror
or
pop
inc
or
jns
rcl
adc
out
scas
mov
add
xchg
or
loope
push
mov
stc
xchg
mov
je
xchg
call
iret
scas
pop
jnp
in
cdq
mov
leave
pop
mov
std
outs
pusha
xchg
add
inc
mov
jnp
mov
(bad)
xor
gs
cld
ins
test
jecxz
sahf
leave
loopne
xchg
sahf
adc
adc
dec
jmp
sbb
mov
jl
add
movs
or
leave
inc
mov
imul
inc
xor
jg
mov
imul
xor
and
ret
or
aas
xchg
jecxz
sbb
xchg
clc
retf
mov
movs
into
imul
bound
scas
fcmove
test
movs
jb
xchg
js
mov
fmul
stc
in
or
mov
ja
das
cmc
mov
mov
leave
inc
dec
call
and
cmc
adc
rol
sub
sub
repz
mov
(bad)
or
popa
aaa
ja
cwde
and
xchg
mov
sub
mov
xchg
outs
jge
pop
movmskps
(bad)
lods
cmp
jmp
icebp
cmp
push
cmp
stc
out
adc
sahf
dec
xor
add
ins
mov
fimul
stos
repz
stc
and
sub
ficom
stos
inc
mov
xchg
les
or
in
and
or
inc
dec
clc
inc
test
jbe
mov
dec
push
jmp
adc
mov
dec
int3
sbb
pop
(bad)
gs
(bad)
pop
xor
xchg
mov
pop
outs
test
mov
sti
retf
call
lds
pop
push
sbb
mov
fild
dec
xchg
pop
repz
xor
mov
pop
cmps
fbstp
xor
into
add
and
rcl
js
jnp
in
xor
pushf
popf
in
push
cmp
cmp
add
cmp
add
push
xor
push
arpl
mov
fld
loopne
or
or
out
ins
and
dec
mov
adc
stos
or
mov
and
or
hlt
cld
iret
sub
mov
xchg
stos
test
xor
jne
sbb
lods
outs
cmp
cdq
fimul
cmps
cwde
pop
sub
pushf
test
fsubr
mov
retf
es
inc
push
arpl
ins
gs
ret
call
xchg
sbb
cs
cmp
cli
fistp
jno
adc
stos
scas
sbb
outs
ds
xor
sti
xchg
sub
(bad)
jmp
sti
or
pop
xor
or
jp
inc
sti
ja
push
push
or
scas
test
shl
je
in
outs
arpl
sub
or
neg
xchg
jo
inc
fistp
xchg
rcl
call
cmc
push
pop
inc
xchg
mov
jmp
pop
jno
cmp
sub
add
imul
pusha
rcl
jns
mov
repz
out
pop
icebp
dec
ins
ret
sbb
dec
add
es
(bad)
fst
jp
jl
imul
xchg
cmps
les
sub
mov
adc
and
push
shl
int3
aaa
popa
int3
xchg
sbb
gs
dec
test
cmp
xor
inc
cmc
mov
push
mov
call
lock
dec
cmp
jnp
mov
sub
scas
add
mov
ss
cmp
jnp
push
lahf
fidiv
mov
xor
jp
fwait
inc
lock
or
mov
add
mov
sahf
xchg
stc
inc
cmp
ins
gs
mov
sti
cmp
cmp
stos
imul
pop
cdq
adc
sbb
iret
dec
jns
jmp
dec
cdq
cmp
add
fidiv
out
inc
mov
scas
popa
mov
pop
call
out
movs
int3
loop
inc
xor
fs
push
cmp
aad
lods
or
retf
je
mov
pop
ret
mov
aaa
jecxz
or
fiadd
push
jg
sbb
or
push
sub
or
xor
rcl
jo
out
mov
aas
mul
sti
xlat
pop
and
mov
sub
xor
xor
test
adc
jb
inc
jb
and
btr
(bad)
mov
ds
pop
push
stc
stc
call
sbb
jecxz
dec
js
test
leave
inc
mov
in
ja
add
int
in
mov
xor
sti
test
aad
push
cmp
(bad)
jnp
sub
dec
out
xor
lahf
cmp
movs
cmp
pop
gs
jae
mov
ins
xor
jmp
sub
test
mov
add
cwde
dec
bound
jo
dec
jns
inc
xlat
(bad)
fst
lahf
cwde
in
cmp
dec
jmp
mov
sbb
iret
jne
pusha
das
(bad)
sbb
sbb
ins
xor
inc
mul
cmps
push
cld
mov
sti
push
pusha
or
rcr
adc
fstp
mov
cwde
movs
ins
sub
scas
jae
dec
lds
rol
push
out
repz
mov
ds
(bad)
or
ror
enter
test
fwait
cmp
push
pop
add
data16
sbb
xor
je
iret
imul
jne
scas
dec
out
jp
mov
call
mov
or
mov
mov
fsub
popf
xor
mov
mov
dec
repnz
(bad)
in
jle
sub
and
iret
pop
int
jo
mov
inc
inc
push
ss
idiv
push
loopne
pop
cmp
popa
add
mov
sub
inc
push
sub
fs
movs
ficomp
inc
dec
sahf
jl
pop
fistp
jo
frstor
adc
and
adc
cld
dec
es
jecxz
push
mov
sahf
cwde
loope
arpl
enter
cld
cmc
xor
cmp
(bad)
xchg
enter
(bad)
xlat
popf
ds
ins
out
mov
in
in
mov
jg
push
pop
sar
(bad)
cli
loope
jno
daa
sbb
xor
fcomp
dec
mov
shr
add
pusha
ins
xchg
pushf
sti
out
icebp
inc
sbb
pop
jbe
pushf
ds
push
inc
loopne
cvtps2pd
cmc
sbb
in
bound
inc
xlat
fdivr
xchg
mov
imul
sar
pop
iret
ret
hlt
fdiv
in
mov
xchg
in
inc
in
inc
xor
or
ja
les
out
dec
outs
das
sub
xchg
fiadd
in
(bad)
ins
mov
and
data16
leave
fucomip
ja
xchg
lods
add
adc
fnsave
in
out
inc
adc
or
pop
fwait
mov
mov
test
out
out
mov
test
loop
and
xchg
fwait
inc
or
(bad)
jecxz
test
fwait
cmp
fnstenv
outs
xor
pop
ins
cmp
push
repnz
xchg
adc
xchg
xchg
shl
imul
add
cmps
gs
mov
les
dec
push
xor
test
adc
stos
or
into
push
adc
jge
pop
push
scas
not
mov
pop
fsub
test
xchg
fild
cmp
ins
pushf
fidivr
inc
ror
scas
ret
js
cli
jb
popf
mov
(bad)
in
test
or
loope
lock
xor
cmp
push
add
pop
into
push
mov
pop
mov
mov
arpl
xchg
ss
jl
xchg
rol
fcomp
gs
in
mov
leave
pop
retf
adc
int
lock
ja
jne
(bad)
xor
out
or
adc
xor
jle
imul
fnstsw
sbb
xchg
xor
jle
push
js
mov
inc
mov
cmps
shl
mov
dec
mov
pop
mov
daa
ds
in
pop
jmp
xchg
fwait
je
outs
xchg
(bad)
xchg
dec
adc
and
mov
mov
xchg
repz
push
fimul
cmps
mov
pop
and
(bad)
cmps
xor
(bad)
xchg
aaa
xor
arpl
lods
and
fwait
push
(bad)
imul
ins
stos
fs
(bad)
(bad)
or
jno
mov
fidivr
in
fistp
ja
xor
sbb
or
or
or
leave
xchg
iret
(bad)
dec
test
sub
pop
push
rcpps
cmp
clc
outs
pop
pop
ss
rcl
pop
xchg
test
rol
enter
jae
int
jnp
ins
pop
inc
jecxz
fild
stos
push
repz
ds
aad
sahf
hlt
inc
sbb
xchg
inc
pushf
sub
mov
push
leave
mov
test
ja
ss
jmp
mov
call
mov
mov
(bad)
or
adc
fmul
call
mov
outs
fld
into
and
mov
and
dec
jp
fiadd
dec
sahf
jno
add
cld
push
mov
jno
mov
jmp
mov
ds
retf
loopne
adc
rol
dec
and
inc
test
add
ret
prefetch
outs
xor
pop
out
mov
mov
inc
(bad)
pop
sub
sar
xor
arpl
and
push
mov
jnp
jne
movs
loope
mov
fld
adc
lahf
and
daa
cld
inc
mov
cli
jmp
retf
mov
cs
lds
mov
or
ins
test
pop
xchg
jne
or
inc
cmp
sbb
shr
jg
sbb
imul
shl
cmps
jae
les
jne
sub
inc
int
movs
out
icebp
push
adc
or
cmp
(bad)
pop
adc
mov
(bad)
jo
or
lds
into
ror
mov
pop
xchg
jne
jnp
mov
call
mov
mov
mov
push
pop
adc
pop
dec
mov
or
popa
cmp
push
stos
adc
les
jmp
pop
jmp
ins
mov
sub
dec
hlt
mov
jle
mov
dec
imul
stc
push
or
outs
mov
dec
or
pop
in
or
je
mov
int
ja
test
sbb
mov
iret
xor
adc
mov
stc
aas
cld
and
cs
ja
dec
cmp
mov
cmp
pusha
mov
pop
xchg
scas
scas
sahf
stc
cs
xchg
adc
jmp
or
fwait
or
dec
pop
xor
dec
test
push
mov
adc
mov
push
ja
push
movs
add
sar
mov
push
mov
stc
rcl
shl
dec
jle
(bad)
mov
in
int
and
jbe
pop
add
push
adc
dec
or
mov
jecxz
sbb
push
cmp
mov
mov
or
jge
ins
dec
mov
jne
inc
ret
jge
movs
or
mov
cmp
stos
fst
mov
add
jb
cmps
and
push
mov
mov
add
(bad)
adc
ja
mov
mul
pop
les
mov
mul
in
and
aad
jle
add
xor
inc
fstp
xchg
bnd
or
xchg
fiadd
add
jne
iret
nop
mov
xor
or
test
jo
fild
es
mov
(bad)
fnsave
push
and
mov
call
scas
pop
adc
add
fimul
sar
mov
pop
out
adc
fisubr
fcmovb
ja
fdiv
pop
mov
and
dec
adc
push
and
paddusw
jp
add
and
arpl
mov
stos
jp
into
xor
fsubr
pop
cld
xor
jno
and
mov
sub
test
(bad)
jg
ins
cmps
pop
or
lahf
rcl
jb
fidiv
adc
add
shr
call
cmc
fdivr
and
sti
es
and
retf
mov
test
inc
rol
push
cmp
pop
push
sub
add
mov
repnz
call
out
lods
lahf
rol
fs
frndint
dec
xor
cmc
jo
ret
push
shl
aam
neg
xchg
jp
fstp
cmps
scas
and
inc
and
mov
cwde
(bad)
loop
test
xor
bound
lods
sbb
pop
xchg
lds
xor
add
sub
in
ins
jbe
mov
out
push
lahf
and
std
jle
and
lods
lea
push
hlt
stc
adc
xchg
adc
xchg
pop
xchg
cmp
mov
movs
sbb
jmp
pop
es
dec
sub
cmp
test
or
jbe
jae
mov
fsub
xchg
ss
in
push
mov
fwait
pop
lds
adc
leave
jne
lods
out
cdq
xchg
xlat
fdivrp
cli
jmp
xor
dec
repz
loopne
xchg
and
in
and
xchg
push
fcomp
sub
mov
xlat
mov
shl
add
pusha
xchg
sub
adc
das
es
xor
dec
(bad)
fisubr
or
(bad)
fisttp
fstp
jg
and
ficomp
sbb
push
outs
sbb
in
jl
stos
jge
jne
push
add
(bad)
bound
stos
xor
jnp
push
mov
mov
push
pop
fsub
sub
gs
cmp
pop
or
sbb
adc
cmps
mov
fcom
ins
aad
xchg
sbb
mov
mov
mov
sub
xchg
add
push
retf
fld
ins
scas
dec
out
adc
out
fdiv
adc
jg
mov
iret
adc
imul
mov
cmc
repz
add
sar
iret
not
stos
and
xlat
lds
xchg
pusha
mov
mov
pop
fwait
stos
outs
(bad)
rcr
mov
pop
icebp
xlat
out
add
(bad)
push
loop
mov
les
(bad)
jecxz
push
(bad)
fidivr
inc
aas
and
adc
mov
xchg
xlat
jg
jmp
lods
sub
push
adc
sub
add
sti
shr
cmps
xchg
popa
repnz
test
mov
aad
mov
es
jbe
sahf
or
jmp
stc
sbb
or
popa
mov
int
les
lods
rcl
dec
pop
loope
cmc
jmp
and
mov
fadd
sub
inc
ror
out
pop
pusha
xor
dec
out
mov
loope
cmp
les
aam
mov
aaa
push
fwait
add
cli
enter
adc
push
jb
sar
rcl
scas
mov
jp
fwait
push
adc
fstp
mov
mov
ror
ds
scas
add
in
jmp
sub
add
inc
loopne
int
call
cmps
ret
arpl
(bad)
or
repnz
mov
pop
jns
dec
mov
leave
adc
sbb
aad
sahf
fsubr
cmp
add
add
cld
out
sti
jnp
int3
inc
adc
retf
push
fsub
mov
cmps
ins
xchg
or
mov
xor
push
add
ret
jmp
ret
jge
hlt
in
fld
out
scas
jno
inc
jmp
xchg
mov
cmp
sbb
int
arpl
rol
xor
test
jecxz
std
sub
add
retf
push
js
outs
movs
dec
mov
fwait
ret
scas
in
or
call
cmp
repz
(bad)
and
adc
jo
mov
cmp
xchg
add
cdq
cmc
and
imul
ins
cli
ds
push
aad
loop
ins
pop
cmp
inc
xchg
pusha
aam
pop
jge
adc
into
push
std
je
cmp
push
jne
sub
sub
retf
sti
ret
fnsave
sbb
xchg
mov
jge
fucomp
jmpw
mov
movs
dec
fsub
push
fnsetpm(287
xchg
pop
aas
aam
outs
int
imul
mov
lods
push
adc
mov
dec
inc
mov
mov
fs
mov
pushf
out
nop
popf
mov
fcom
jo
mov
pop
(bad)
mov
mov
push
add
retf
not
adc
xchg
dec
cmp
inc
add
pop
call
cmp
jb
int
(bad)
(bad)
pop
test
add
rol
(bad)
cdq
gs
lock
imul
inc
pop
dec
popa
xor
add
mov
push
popa
sbb
mov
adc
imul
aaa
xor
ret
and
add
jp
adc
push
fs
es
shl
pop
dec
cld
push
mov
cld
dec
outs
pop
mov
mov
mov
sub
aam
mov
in
push
sub
outs
xor
sbb
bndstx
push
dec
cs
xchg
mov
xchg
mov
rcr
mov
cmp
push
mov
sub
ins
push
or
mov
fidivr
and
repz
mov
popf
xor
(bad)
sub
std
push
or
or
aad
addr16
cmp
cmp
imul
fmul
or
aas
dec
sbb
cmp
jo
adc
mov
sbb
iret
in
pop
movs
aam
and
dec
mov
mov
push
sbb
mov
js
loope
mov
inc
inc
ror
cmp
std
sub
fld
pop
lds
call
cmp
cmp
int3
shr
imul
cmp
inc
mov
mov
lahf
dec
xor
ret
pop
jmp
jbe
add
cld
pop
mov
jns
jne
push
pop
dec
aam
xchg
sbb
(bad)
je
sbb
adc
fild
pop
jns
fnsave
(bad)
clc
xchg
dec
adc
and
sbb
in
pop
xor
cmp
ins
push
inc
dec
or
cmp
mov
adc
mov
or
xor
lahf
shl
and
and
into
ret
adc
imul
stos
test
daa
xlat
(bad)
clc
pop
hlt
pop
push
mov
in
cli
mov
jle
cs
mov
test
sbb
iret
or
sar
call
mov
test
fisttp
xor
and
iret
mov
mov
pop
test
pop
popf
imul
movs
inc
ins
pop
xchg
dec
mov
xchg
out
inc
jno
inc
in
std
pxor
push
in
push
mov
mov
cmp
shl
adc
repnz
push
arpl
sbb
aaa
mov
out
or
shr
fisub
jg
xor
xchg
(bad)
push
mov
js
mov
stos
adc
push
mov
push
mov
or
lods
mov
js
inc
adc
lahf
test
xchg
fsubr
int3
pop
fist
sahf
call
and
out
xor
shl
adc
xchg
push
fwait
jns
mov
cmps
pop
push
push
das
dec
mov
popf
clc
cmp
xchg
adc
push
pop
xor
push
cmp
outs
je
hlt
dec
aas
push
(bad)
in
xchg
push
and
(bad)
cwde
dec
dec
xchg
cdq
or
sub
in
scas
aam
dec
mov
xor
or
mov
aaa
mov
jg
sar
test
lods
mov
mov
add
xchg
lods
test
int3
xor
aaa
pop
adc
xor
xchg
jae
or
xor
mov
outs
adc
sbb
xlat
pop
inc
add
and
(bad)
push
loop
aas
mov
fcomp
pop
retf
mov
aaa
inc
movs
push
jl
jo
mov
mov
jecxz
cmp
adc
gs
addr16
(bad)
adc
rol
cmps
pop
hlt
mov
jg
ret
jmp
push
adc
ret
mov
nop
and
daa
in
enter
pop
dec
in
retf
rcl
xchg
call
js
mov
pop
nop
jb
mov
in
cmp
mov
push
mov
int
dec
pop
inc
in
add
cs
pop
inc
jl
cmp
jg
ret
rol
dec
ret
jmp
mov
mov
xor
loope
jns
seto
call
mov
adc
mov
cmp
xor
or
fidivr
ins
fild
push
xor
sbb
rcr
jecxz
sbb
adc
and
mov
push
imul
in
inc
std
mov
cmp
lods
ja
xor
mov
out
cmp
das
and
loop
adc
xor
lea
int
in
dec
mov
pop
mov
push
(bad)
scas
retf
cmp
test
pusha
cmp
daa
and
ins
push
mov
aaa
jb
movs
push
(bad)
xor
and
mov
lahf
push
push
push
cmp
js
daa
aad
dec
imul
sub
xchg
imul
stc
xchg
je
xchg
xchg
inc
pusha
mov
sub
mov
test
and
mov
in
jne
xor
xor
lds
inc
xchg
shr
push
aam
sub
sbb
pop
add
fcom
cmp
mov
ss
xor
inc
ds
mov
imul
ins
repz
jo
push
into
bswap
out
jge
jl
clc
pop
mov
xor
loope
mov
mov
or
cmp
xlat
ins
xchg
mov
add
inc
stos
cli
daa
or
mov
sbb
fdiv
cmps
jle
mov
ret
in
int
mov
je
dec
jecxz
fistp
jnp
(bad)
frstor
dec
ss
add
lahf
call
mov
iret
and
test
push
sbb
mov
(bad)
out
imul
sbb
push
cs
pop
cmps
and
mov
cmp
data16
sub
pop
pusha
xchg
ds
xchg
sbb
and
sbb
jl
retf
in
cmp
enter
hlt
sar
rcl
jmp
sti
test
cmc
dec
mov
mov
cmp
arpl
adc
pop
test
xchg
stos
and
(bad)
xchg
iret
add
or
mov
push
sbb
jne
mov
loop
fiadd
add
xchg
dec
jge
out
or
repz
retf
sbb
add
add
add
add
adc
mov
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
mov
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
mov
mov
mov
lea
mov
mov
movzx
mov
shl
mov
dec
mov
movzx
shl
dec
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
shl
lea
cmp
jae
mov
mov
add
loop
mov
xor
mov
mov
add
mov
xor
cmp
je
movzx
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmp
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzx
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmp
lea
mov
jle
mov
sub
mov
movzx
mov
shl
mov
lea
mov
and
cmp
lea
mov
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
cmp
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmp
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmp
mov
jg
mov
jmp
cmp
jg
sub
jmp
sub
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmp
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
sub
sar
mov
mov
cmp
lea
mov
je
xor
cmp
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
mov
jmp
sub
sub
mov
mov
shr
mov
sub
mov
mov
add
mov
mov
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmp
mov
jg
add
cmp
mov
jle
mov
mov
shl
mov
lea
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmp
ja
cmp
je
shl
movzx
shl
inc
or
shr
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
mov
mov
mov
mov
mov
add
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shl
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
inc
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmp
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
