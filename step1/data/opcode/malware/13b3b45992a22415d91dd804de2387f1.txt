push
xchg
add
add
add
add
add
add
add
sbb
add
push
and
add
dec
add
add
dec
add
mov
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
inc
push
inc
inc
push
sub
add
mov
add
popa
add
add
add
add
add
aas
out
ins
arpl
jle
pusha
pop
adc
jle
and
jle
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
frstor
ins
outs
inc
fbstp
aam
test
aad
adc
push
pop
sbb
or
jge
pop
add
xor
pop
syscall
jge
or
inc
xor
pop
sub
push
inc
adc
add
dec
jae
push
gs
pusha
pop
gs
and
arpl
nop
lea
pop
gs
pusha
pop
gs
pusha
pop
fs
push
pusha
pop
ja
ins
pusha
pop
gs
xor
jle
pusha
pop
gs
pusha
pop
gs
pusha
jge
jle
bound
jp
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
rcr
outs
pusha
pop
gs
pusha
pop
gs
ins
jo
gs
jo
outs
ins
pusha
pop
gs
jo
gs
pusha
pop
gs
pusha
pop
or
pusha
adc
ins
pusha
cmp
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
loopne
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
jge
jle
pusha
pop
gs
pusha
pop
gs
pusha
push
inc
jle
sub
jle
pusha
pop
gs
pusha
pop
dec
or
sbb
gs
movs
outs
pusha
jle
inc
pop
gs
gs
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
ins
pusha
cmp
ds
pusha
dec
gs
add
jle
pusha
pop
gs
push
ins
pusha
pop
gs
pusha
pop
gs
pusha
sbb
xor
jle
ins
pop
gs
loopne
gs
pusha
pop
cmp
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
fidivr
gs
gs
pusha
adc
pop
pusha
jle
pop
pop
bound
pop
data16
pusha
dec
gs
sub
jle
je
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
outs
dec
pop
gs
dec
inc
addr16
imul
pop
gs
loopne
gs
adc
jle
loopne
gs
adc
jle
loopne
gs
adc
addr16
gs
dec
pop
gs
pop
popa
pop
push
ins
pusha
pop
gs
push
pop
gs
xorps
addr16
gs
pusha
dec
push
jg
outs
pop
gs
pusha
pop
je
outs
pusha
pop
popa
adc
pop
outs
je
pusha
pop
dec
jle
push
pop
gs
pusha
pop
data16
jno
data16
xor
ins
push
dec
jle
dec
pop
jbe
ins
pusha
push
gs
fs
outs
adc
jp
ins
pop
gs
dec
pop
arpl
ins
addr16
pusha
pop
gs
pusha
dec
addr16
jno
gs
jb
gs
dec
pop
arpl
pop
jbe
ins
pusha
push
gs
pop
outs
outs
dec
dec
gs
push
gs
pusha
dec
push
jg
outs
pop
gs
pusha
pop
je
push
jns
pop
outs
je
pusha
pop
dec
jle
push
pop
gs
pusha
pop
ins
jle
jno
dec
imul
outs
push
ins
data16
ins
pop
popa
pop
jge
ins
pusha
push
gs
(bad)
pusha
jle
jnp
outs
push
ins
pusha
pop
dec
je
data16
jl
dec
pop
arpl
pop
outs
ins
pusha
pop
ins
jle
jno
ja
xchg
jne
gs
data16
ins
jnp
jnp
inc
ja
gs
jae
fs
pusha
pop
gs
pusha
dec
sbb
pusha
push
jmp
pop
je
pusha
pop
dec
jl
pusha
jbe
gs
pusha
push
sbb
pusha
push
outs
inc
ins
pusha
pop
gs
pusha
pop
jnp
inc
ja
gs
ss
ins
frstorw
ins
fs
ins
frstorw
ins
fs
jle
dec
inc
gs
je
arpl
pusha
pop
push
pusha
ins
pusha
push
or
pusha
push
dec
ins
ins
pusha
pop
dec
jle
pusha
dec
push
jp
dec
pop
gs
pusha
pop
je
js
pop
arpl
jl
jle
inc
shl
xchg
pop
inc
fist
lea
jge
jle
movq
addr16
inc
gs
push
dec
push
pusha
pop
dec
jle
pusha
dec
push
jbe
or
jle
pusha
pop
je
inc
inc
pop
gs
push
pop
gs
push
jge
gs
jno
gs
dec
inc
mov
daa
push
inc
pop
clc
cmps
inc
dec
pop
ins
pusha
pop
jae
push
pop
fs
je
inc
jle
push
inc
jae
addr16
pop
cs
ins
pusha
pop
jge
push
pop
fs
jbe
(bad)
jns
je
bound
je
dec
pop
ins
pusha
push
inc
push
ins
pusha
dec
push
jp
es
gs
pusha
pop
je
push
pop
popa
pop
or
jns
pop
mov
ror
dec
pusha
pop
arpl
jbe
pop
arpl
addr16
gs
adc
gs
inc
or
ins
inc
popf
pop
jbe
dec
jge
jle
cmova
imul
gs
pusha
pop
dec
jle
jae
popa
jle
pusha
pop
gs
pusha
dec
push
pop
ins
pusha
push
imul
add
gs
jbe
or
pusha
push
ins
push
jle
imul
jle
push
jp
loopne
pop
gs
jne
popa
jns
jbe
jmp
add
gs
fs
ins
pusha
push
arpl
xor
ins
push
arpl
out
jmp
jp
fs
pop
lahf
xchg
lahf
mov
pop
outs
ja
dec
pop
gs
gs
pusha
dec
pusha
push
ins
pusha
dec
push
jnp
in
gs
pusha
pop
je
add
gs
dec
pop
gs
test
dec
dec
dec
dec
leave
mov
inc
inc
pop
gs
dec
pop
gs
cmp
jle
addr16
gs
icebp
mov
les
inc
inc
pop
gs
jnp
gs
push
pop
gs
push
pop
gs
sub
ins
popa
jge
or
jge
inc
fdiv
jle
data16
ins
sub
ins
jnp
jae
ins
data16
ins
sub
ins
popa
push
pop
jns
pusha
pop
jno
push
pusha
pop
gs
dec
pop
gs
push
pop
shr
pop
jne
ins
jno
outs
je
ins
push
inc
jg
pusha
pop
imul
jle
dec
pusha
inc
jl
pop
gs
arpl
jp
add
mov
push
push
xchg
jmp
jle
popa
dec
popa
push
movs
jle
dec
arpl
pusha
pop
gs
pop
jmp
xor
push
mov
gs
arpl
pusha
pop
and
addr16
lahf
pop
gs
mov
imul
push
jge
jle
pusha
add
imul
push
rcr
icebp
jno
jb
jle
dec
arpl
pop
repz
ins
pusha
pop
gs
pusha
pop
jnp
inc
ja
gs
jae
addr16
pusha
pop
outs
ins
pusha
dec
data16
push
pop
gs
pop
pop
gs
data16
ins
pop
bound
jle
pusha
dec
gs
arpl
jle
push
push
jle
push
pop
jle
pusha
pop
arpl
pop
dec
imul
push
pusha
dec
gs
bound
jns
pusha
pop
imul
ins
dec
dec
gs
inc
les
or
gs
jge
jle
jbe
or
pusha
push
jb
pusha
pusha
pop
fs
jbe
ins
jle
jnp
jno
ins
push
bound
pop
pusha
pop
outs
fsub
pop
(bad)
jbe
jle
gs
pop
pop
gs
data16
ins
pop
imul
gs
arpl
push
shl
dec
or
jge
inc
inc
pop
gs
in
pop
gs
ins
push
jae
iret
push
pusha
pop
fs
jbe
jb
inc
jno
gs
jmp
jns
jne
jle
push
pop
jle
pusha
pop
arpl
pop
outs
dec
outs
pusha
aam
jle
jne
outs
push
push
pop
gs
imul
gs
dec
dec
gs
packssdw
addr16
pop
jg
pusha
sub
push
push
inc
ins
pusha
push
outs
jle
pcmpgtb
ins
dec
push
or
pusha
push
jbe
push
addr16
jae
bound
pcmpgtd
addr16
sbb
pusha
pop
je
jl
xor
ins
push
gs
cmp
jbe
fs
bound
dec
call
jg
addr16
bound
xor
ins
push
mov
gs
jo
gs
dec
pop
sub
gs
arpl
jle
pusha
pop
gs
add
popa
jl
cmp
pop
jle
push
dec
pop
ins
pusha
push
arpl
push
pusha
pop
outs
push
sub
inc
and
je
pop
pop
gs
inc
pop
gs
addr16
dec
jle
dec
pop
gs
gs
and
pusha
dec
gs
pusha
cs
jle
push
jae
inc
inc
pop
addr16
and
je
addr16
or
ins
pusha
push
cmp
cs
pop
outs
pop
mov
addr16
pop
jb
addr16
or
ins
pusha
push
fwait
jp
imul
gs
dec
pop
ins
push
ins
pusha
pop
pop
ins
push
shl
gs
pusha
pop
adc
sbb
adc
add
add
sbb
dec
str
sbb
add
dec
jge
or
pop
cmovl
sbb
adc
adc
jae
push
pop
dec
ins
dec
pop
cs
add
adc
add
inc
inc
or
ds
xor
sbb
pop
aas
push
dec
or
ds
dec
pop
pop
outs
push
sbb
fs
sub
adc
cmp
adc
adc
add
or
movaps
sbb
jl
pusha
pop
addr16
pusha
pop
gs
xor
cs
or
dec
xchg
inc
pop
gs
pusha
pop
gs
pusha
pop
inc
sbb
pop
push
jle
pusha
xor
ins
adc
jle
pusha
cs
ins
minps
jle
pusha
cmp
ins
adc
gs
pusha
inc
add
pusha
cmp
ins
adc
pusha
aas
adc
pop
dec
jle
pusha
cmp
or
sbb
dec
das
sbb
jb
push
gs
pusha
pop
popa
jle
fst
test
ins
pop
test
cmp
rcr
inc
in
xor
pop
popa
popa
mov
push
push
add
mov
rcr
add
aam
dec
or
adc
in
in
dec
dec
daa
outs
fs
jl
pop
and
or
out
dec
xchg
js
xor
xchg
add
pop
push
mov
call
dec
mov
fldenv
std
adc
push
adc
imul
ins
xchg
mov
adc
popf
bound
popf
pop
stos
mov
and
jp
movs
mov
adc
scas
js
movs
into
shl
push
mov
imul
mov
dec
fwait
cs
xchg
xor
fcomp
lahf
and
mov
(bad)
fldln2
push
outs
adc
sub
aaa
jg
ret
out
xchg
(bad)
lods
jae
push
pop
popf
data16
dec
(bad)
jecxz
mov
test
(bad)
bound
stos
popa
pop
xchg
popf
fadd
pop
push
xor
(bad)
fdivr
stc
fistp
fist
cmp
lods
icebp
xchg
cmc
xchg
outs
inc
inc
scas
mov
(bad)
std
adc
stos
sbb
movs
lods
loope
out
xlat
xor
out
test
out
retf
mov
mov
xchg
mov
adc
arpl
fmul
fst
ja
ins
test
imul
dec
mov
ins
nop
dec
ja
fcmovne
lods
adc
pop
add
arpl
(bad)
pop
jle
jne
stos
mov
cmp
push
xor
mov
pop
cmp
mov
ret
data16
inc
arpl
repz
lds
push
popa
out
(bad)
jmp
push
xchg
push
in
push
(bad)
sahf
cwde
lods
int
mov
(bad)
std
ss
lods
or
add
adc
icebp
outs
lods
add
jl
test
ja
cs
fidiv
dec
add
sub
mov
ror
push
jge
cmp
cmp
sub
mov
cdq
cmp
add
sti
seto
inc
or
pop
push
sbb
push
out
add
retf
div
pop
jle
test
pop
mov
dec
jo
js
cmp
xor
test
xor
or
aam
and
jbe
out
clc
imul
sub
inc
in
xchg
inc
add
mov
mov
nop
hlt
sti
and
pop
ins
sbb
out
jbe
retf
sbb
out
inc
lods
test
pop
bound
fisubr
sbb
popa
xor
xchg
jne
sub
test
push
add
xchg
test
ret
dec
scas
rcr
or
mov
daa
adc
in
sub
adc
mov
mov
dec
fsubrp
dec
js
xor
data16
cmp
mov
push
xchg
inc
adc
mov
je
fldenv
enter
test
ins
jnp
xchg
call
xor
shl
inc
aad
and
pop
or
sub
sub
or
addr16
push
in
int3
jno
loop
dec
fcomp
adc
arpl
call
dec
dec
pop
fcomp
push
ret
jmp
enter
sar
push
fld
fist
sub
xor
and
inc
xchg
or
xchg
popf
jg
cmp
inc
push
movs
inc
pop
xlat
dec
aad
xchg
ins
aaa
imul
cli
into
xor
mov
xor
lds
mov
shl
inc
mov
pop
ds
push
mov
mov
cli
jnp
xchg
test
sub
sbb
or
addr16
push
pop
push
cmp
pop
in
retf
inc
fcom
(bad)
push
mov
es
(bad)
jne
mov
add
add
inc
add
retf
sub
js
push
std
gs
or
xchg
mov
bound
sub
cmp
test
jge
mov
not
push
into
mov
add
in
icebp
or
mov
loope
(bad)
ds
int3
pop
sbb
or
or
ret
scas
sbb
stos
sub
clc
xor
sub
jle
es
in
sub
jmp
sti
push
mov
inc
add
add
push
push
xor
pop
xor
pop
dec
jl
call
movs
loop
push
jo
push
es
push
addr16
mov
or
pop
movs
dec
sub
outs
in
pop
pop
loopne
imul
adc
ror
inc
lods
jp
mov
pop
lods
mov
fcomp
xchg
test
and
lds
jae
cmp
cmp
dec
rol
xor
fsubp
mov
into
jp
fsubr
add
or
and
fs
inc
cli
out
pusha
sbb
push
xchg
(bad)
(bad)
xor
sbb
mov
push
div
pop
pop
les
mov
es
jmp
lods
adc
inc
push
adc
scas
xchg
loope
dec
imul
cmp
cmp
push
iret
in
imul
ret
or
out
ds
ss
pop
and
icebp
xchg
inc
add
inc
add
inc
push
fs
jb
xchg
xor
push
and
hlt
cmp
add
lea
imul
xchg
mov
scas
and
nop
fwait
dec
repnz
out
and
add
aam
jle
mov
arpl
mov
mov
stc
sahf
add
dec
pushf
je
mov
dec
adc
(bad)
in
sbb
push
in
jbe
add
(bad)
pop
lods
cwde
pop
sub
or
sbb
jge
pop
iret
lock
lods
sub
ret
push
xchg
imul
jmp
div
out
inc
out
outs
or
repz
jle
int
xor
imul
aaa
rcl
jl
push
xor
sbb
and
push
ins
cli
fcomp
inc
cmp
cdq
mov
into
fadd
xor
mov
enter
ret
or
dec
call
ds
int
test
pop
cmp
adc
shl
lods
fcmovnbe
or
mov
clc
cmp
mov
stc
jne
iret
mov
shr
push
and
fdiv
fwait
inc
mov
xchg
scas
mov
adc
cmp
jnp
xor
rcr
leave
mov
sub
mov
pop
inc
xor
jecxz
mov
outs
jl
push
sbb
pop
in
sar
int3
push
gs
rol
or
(bad)
retf
int3
dec
gs
push
leave
fwait
cs
sar
or
xor
xor
stos
sub
inc
test
movs
in
jecxz
pop
in
int3
mov
push
sub
clc
xchg
jmp
pushf
inc
sbb
jge
cmc
push
es
lea
aaa
and
cld
cs
das
in
mov
pop
dec
fdivp
sub
inc
int3
mov
pop
fadd
jle
ds
(bad)
ss
jnp
std
adc
adc
test
pusha
pop
or
pop
stos
push
xchg
(bad)
lock
push
xor
and
and
mov
inc
inc
pop
lods
inc
or
test
js
or
push
add
lock
push
clc
pop
mov
retf
mov
cmp
fimul
dec
cmp
adc
xchg
aas
sahf
pop
mov
dec
add
adc
xor
sub
cmc
mov
inc
push
dec
into
dec
retf
add
sub
ss
xor
cdq
int
pop
xor
and
and
(bad)
scas
cmp
(bad)
loope
imul
fcom
xlat
scas
ja
loope
xchg
lods
cmps
fst
jns
xor
(bad)
in
int
daa
in
pop
fwait
jno
inc
inc
mov
push
jmp
jecxz
retf
xchg
outs
push
rcr
imul
sub
sbb
mov
call
jne
jae
cdq
arpl
ja
inc
jmp
push
or
adc
pop
inc
movaps
jecxz
sbb
pop
call
sbb
xor
mov
movs
push
or
mul
mov
dec
popa
test
fs
aas
mov
pop
(bad)
mov
aam
cmp
mov
adc
ins
sbb
mov
cmp
mov
retf
add
dec
sti
scas
push
rcr
jecxz
jnp
repz
mov
or
out
mov
and
pop
or
jnp
div
in
push
push
ins
adc
pop
pop
sub
(bad)
outs
xor
push
jmp
movs
xor
or
xor
jmp
mov
mov
dec
sbb
lea
push
dec
adc
jno
pop
nop
jae
out
push
inc
inc
pusha
or
scas
and
pop
das
inc
dec
push
shr
inc
or
jbe
loope
pop
std
push
int
mov
xchg
cld
mov
push
cmp
out
cmps
in
cmp
popf
jnp
xor
push
nop
shr
(bad)
xor
fwait
dec
shl
mov
jns
adc
shl
mov
cwde
xchg
stos
jb
xchg
push
pusha
sahf
pop
sbb
pop
or
push
mov
mov
or
cmp
add
into
ja
(bad)
iret
sub
inc
out
fidivr
fstp
jg
jne
mov
loopne
std
dec
ret
fst
popf
pop
push
cmc
pop
xor
or
(bad)
aas
push
neg
sbb
and
imul
jne
push
push
sub
mov
test
mov
sub
cld
mov
xchg
xchg
sub
mov
icebp
adc
test
xor
jmp
cmp
imul
push
mov
(bad)
sbb
pop
jno
call
adc
or
mov
retf
lods
das
dec
and
mov
mov
aas
mov
mov
push
jmp
xchg
xchg
inc
or
lds
cs
es
(bad)
mov
les
inc
(bad)
daa
mov
std
aad
outs
(bad)
mov
scas
int
inc
cmc
push
jp
sbb
or
loopne
stos
mov
cli
cmp
mov
(bad)
xor
inc
fmul
mov
fistp
fwait
(bad)
mov
xor
js
pop
mov
pop
test
imul
push
cmp
mov
adc
cmp
mov
cmp
fmul
inc
fistp
int3
mov
or
push
xlat
int
shl
sub
pop
inc
xor
ins
inc
in
mov
jb
push
adc
stos
icebp
xlat
pop
xor
enter
rol
sub
xor
loopne
loopne
scas
cmp
lock
and
push
mov
inc
and
mov
and
mov
mov
fidiv
pop
sbb
loopne
pushf
rcl
mov
(bad)
jnp
mov
mov
stc
shr
and
push
dec
pop
fldenv
test
or
jne
loop
push
clc
mov
mov
outs
inc
and
in
fnop
in
pop
jo
(bad)
or
aas
out
xor
cdq
daa
xor
je
cdq
dec
lods
out
jae
jnp
sub
jb
inc
cmp
ja
add
pop
pop
rep
loopne
sub
sbb
xor
xchg
push
(bad)
call
(bad)
fnsave
cld
enter
es
jno
jne
dec
(bad)
xor
scas
leave
out
jne
fs
cld
stos
into
cdq
dec
mov
cld
cmp
mov
cld
mov
ss
frstpm(287
xor
sbb
and
movs
fwait
xor
pop
inc
jp
rcr
pop
xchg
pop
fsub
inc
popa
sub
das
outs
dec
aam
xlat
pop
inc
outs
jne
mov
xchg
into
inc
or
imul
repz
fdivr
inc
in
jnp
mov
(bad)
std
xor
(bad)
mov
adc
adc
fs
fwait
neg
sti
sub
add
ror
push
addr16
es
ss
add
retf
call
sub
or
xchg
in
test
mov
dec
loope
inc
and
fwait
ret
adc
sub
test
pop
scas
fnstenv
adc
js
popf
xchg
addr16
sbb
cwde
cmp
xchg
jnp
jnp
jmp
or
in
outs
jb
call
pop
lahf
loopne
fimul
daa
test
int
sub
push
or
mov
aam
mov
call
inc
mov
leave
xor
aas
scas
mov
jle
or
pop
std
inc
adc
(bad)
in
(bad)
mov
dec
adc
mov
push
(bad)
pushf
pop
(bad)
les
sbb
loopne
xor
sbb
push
out
(bad)
lds
xchg
mov
(bad)
rol
fmul
retf
xor
xchg
test
fisttp
outs
sbb
scas
mov
mov
shl
add
cmp
sub
sbb
and
inc
popa
je
(bad)
mov
push
ins
jne
fcom
xlat
out
imul
and
fsubr
mov
lods
(bad)
(bad)
rol
push
fild
cmp
dec
mov
inc
xchg
dec
ja
ret
(bad)
lods
scas
sbb
pop
add
aas
cmps
ins
xor
scas
pop
ret
popa
cli
(bad)
xchg
sub
xor
inc
in
fs
aad
clc
xchg
fild
jmp
jp
jbe
cmc
sahf
mov
add
ret
dec
ficom
xlat
nop
sbb
loopne
and
add
dec
mov
int3
push
clc
dec
cmp
jl
and
loopne
jno
sbb
or
cld
mov
fadd
bound
std
movs
lds
hlt
nop
cli
mov
xor
fcomi
mov
or
push
stc
inc
adc
add
mov
addr16
sub
loope
dec
push
jne
mov
call
mov
mov
sahf
xchg
pop
test
ret
int3
and
pop
popa
(bad)
loope
xor
sub
dec
data16
gs
shl
and
rcl
hlt
ds
ins
add
ror
xchg
xchg
out
cmp
xchg
add
fnstcw
addr16
mov
loop
pop
jmp
nop
jae
lea
iret
jbe
adc
scas
test
hlt
leave
or
inc
call
push
push
jo
repz
imul
into
cmp
pop
dec
cmps
mov
cmp
mov
bound
mov
mov
das
clc
(bad)
jmp
cs
mov
(bad)
aas
pop
pcmpgtd
(bad)
pop
movs
jg
pop
es
jp
enter
imul
ret
jo
sbb
pop
call
scas
dec
clc
ret
inc
mov
push
mov
les
ret
sbb
movs
fld
in
jnp
(bad)
repnz
stc
dec
pop
call
jns
test
cmp
and
sbb
ja
movs
iret
push
sti
test
jns
add
mov
addr16
pop
cmp
imul
push
inc
pusha
cmps
or
sbb
adc
(bad)
jmp
cmp
cmps
add
enter
sar
icebp
sbb
cmc
sbb
dec
lea
out
add
fmulp
pushf
jmp
sbb
adc
adc
or
mov
mov
inc
repnz
(bad)
jae
mov
jmp
mov
xor
pop
sbb
or
cdq
inc
xchg
jl
inc
cmp
cwde
test
push
nop
das
and
stos
lods
sub
popa
test
cmp
stos
pop
add
mov
mov
aaa
popa
in
mov
cmc
add
cdq
sbb
sbb
stos
(bad)
xlat
movs
dec
or
push
jmp
cmp
cmps
inc
adc
pop
push
hlt
dec
ss
aam
add
adc
xlat
inc
mov
fnstsw
push
adc
push
aaa
mov
sub
aad
scas
mov
sub
mov
mov
loopne
or
sbb
ss
nop
aaa
icebp
mov
xchg
pop
fisttp
test
mov
mov
out
rcr
xor
mov
push
call
sub
mov
push
dec
push
cdq
rol
cld
xor
xchg
dec
cld
(bad)
out
sti
test
xchg
ss
sbb
sub
or
xchg
adc
sub
fstp
cmps
bound
outs
out
add
sub
adc
push
push
daa
sti
push
push
call
sbb
jecxz
lods
add
sbb
add
sbb
sbb
scas
push
or
push
mov
sub
mov
or
loop
push
mov
syscall
into
jle
mov
sub
jmp
arpl
mov
lods
fcmovbe
inc
nop
pop
mov
js
mov
adc
out
xchg
call
mov
cmp
cmp
pusha
pop
cmp
sbb
popf
out
(bad)
int
sub
mov
fisubr
pop
jmp
push
add
adc
pop
mov
mov
dec
adc
inc
inc
mov
icebp
jb
cmp
in
retf
popf
adc
add
push
mov
ja
repnz
or
push
jp
sbb
mov
jne
inc
ror
pop
sub
xchg
sbb
xchg
out
sub
inc
and
div
adc
ins
test
cmps
test
daa
cmp
adc
sti
call
xor
sub
aam
adc
and
dec
imul
mov
(bad)
push
inc
mov
or
(bad)
xor
arpl
xor
pop
cmps
xchg
ret
sbb
repz
push
imul
test
loopne
xor
pop
push
pop
push
and
shr
addr16
add
mov
pop
fbstp
pop
mov
shl
mov
call
push
add
dec
push
sbb
into
(bad)
fcom
dec
jl
jl
rcr
and
xor
mov
add
les
or
pop
mov
add
(bad)
fdiv
mov
test
call
or
push
jae
pusha
adc
add
pop
je
adc
lods
cli
mov
cdq
jecxz
in
cmp
pushf
pop
jecxz
push
adc
lds
pusha
jbe
lahf
jmp
mov
push
sub
mov
xchg
or
inc
jo
dec
xor
(bad)
dec
or
or
aaa
xchg
xchg
in
fist
popa
push
test
add
xchg
jo
outs
popf
sbb
xchg
jne
popf
add
stos
xchg
mov
xor
shr
add
push
cmps
fstp
pusha
retf
xchg
out
std
inc
mov
xchg
cmps
mov
push
arpl
jle
call
cld
les
shl
mov
pop
lea
sub
push
leave
fcomp
push
lahf
mov
cmp
mov
repnz
out
les
jl
(bad)
cmps
inc
in
adc
cmp
outs
rcr
fs
gs
test
sub
into
and
test
leave
sub
les
pop
add
in
cdq
jae
clc
jnp
mov
mov
xchg
xchg
aam
rcr
mov
mov
es
pmullw
push
add
retf
adc
aam
int3
push
pop
loopne
jbe
and
hlt
(bad)
push
and
sbb
adc
or
pop
and
pop
scas
jae
out
std
rol
inc
inc
xor
fimul
cmp
hlt
fisub
jb
int
js
mov
xor
imul
and
cli
mov
push
in
loopne
das
adc
add
xor
cmc
mul
sub
pop
adc
mov
push
daa
imul
mov
jbe
pop
xlat
or
retf
mov
daa
retf
inc
xchg
stos
cmp
or
into
inc
mov
sti
mov
in
out
clc
lock
aas
push
stc
pushf
out
jecxz
cld
fistp
inc
imul
inc
sbb
sub
gs
inc
sub
hlt
inc
push
mov
icebp
aad
xchg
pop
xchg
inc
push
or
loope
and
xor
aad
adc
daa
lock
test
mov
rcr
gs
jle
test
retf
les
xchg
nop
jnp
cmp
and
and
int
and
cmps
mov
mov
jb
retf
(bad)
mov
lock
lods
and
xchg
loopne
fiadd
mov
in
imul
xlat
repnz
stos
scas
jns
(bad)
movs
ins
inc
xor
dec
in
sub
into
imul
pop
stc
int3
test
sahf
ret
pop
movs
mov
shl
inc
inc
and
sub
rcr
fld
xor
xchg
mov
add
ins
sbb
or
loopne
cmp
and
bound
dec
enter
clc
cmc
vucomiss
xchg
dec
lea
push
jns
sub
(bad)
std
or
ucomiss
loope
push
stos
arpl
sahf
leave
inc
bound
sbb
in
xchg
lock
mov
or
or
inc
cmp
xor
test
ins
pop
jae
fld
jbe
inc
jmp
xor
int
mov
mov
mov
mov
stc
out
and
or
xor
xchg
and
daa
mov
(bad)
push
add
add
es
push
stos
xchg
jmp
mov
mov
cs
jnp
mov
call
add
icebp
push
jmp
in
out
mov
imul
mov
sub
test
mov
nop
xor
mov
(bad)
shr
call
jnp
inc
mov
xlat
add
mov
dec
into
aaa
rcl
sbb
push
mov
adc
fld
addr16
push
call
inc
sub
das
shr
push
push
fstp
in
call
cmps
sub
mov
fmul
lods
fisubr
add
xchg
xor
inc
push
cld
adc
mov
xor
lea
adc
mov
or
sub
cmp
adc
mov
(bad)
xor
and
lahf
or
xor
pop
(bad)
add
call
stos
(bad)
sti
push
in
stos
mov
push
arpl
iret
dec
adc
xor
imul
cmps
jl
in
out
fidiv
out
dec
cmp
add
dec
aam
sub
ds
test
mov
or
jmp
fld
mov
xchg
mov
ja
mov
leave
pop
and
and
ins
lea
mov
push
push
xchg
test
cli
popa
ss
cmp
sbb
jecxz
shr
ret
icebp
lods
pop
fist
call
and
jge
mov
mov
cdq
xor
xchg
stos
fimul
mov
push
push
push
sbb
ret
xchg
xchg
xor
jp
cli
xor
xchg
jns
pop
sbb
xor
mov
icebp
dec
lods
call
xor
loop
sub
mov
xlat
jns
out
setle
nop
cld
pop
mov
push
sub
loope
dec
aas
lea
js
cmp
xchg
mov
push
test
push
popf
xor
call
addr16
xchg
stos
adc
dec
push
(bad)
xor
or
push
imul
mov
jb
and
adc
mov
sbb
inc
mov
(bad)
xor
repz
sar
adc
xchg
and
dec
push
inc
movlps
test
and
push
fdivr
retf
call
push
xlat
retf
mov
sbb
xchg
xor
mov
mov
mov
or
jne
mov
push
and
mov
sbb
sub
and
cmc
mov
jp
add
adc
and
jg
int
xor
hlt
fldenv
test
lock
inc
cmp
das
mov
mov
imul
lods
cmp
pusha
mov
pop
in
cmp
out
adc
ja
mov
mov
push
je
inc
out
cmp
stos
shl
adc
push
loop
out
add
dec
(bad)
mov
xchg
ficomp
pop
stos
popa
movs
adc
xchg
or
into
test
add
leave
mov
mov
inc
(bad)
sbb
test
pushf
js
push
dec
sbb
add
mov
fstp
cmp
push
sbb
adc
jmp
sub
sar
xchg
cmc
sbb
push
jne
fwait
mov
mov
mov
(bad)
cmp
movs
sub
or
xor
mov
out
movs
stos
js
stos
xchg
jp
xor
ret
xlat
cmp
mov
enter
sub
jns
dec
cmp
sub
jecxz
mov
mov
cmp
lds
pop
sub
mov
sbb
adc
outs
pop
test
sbb
xchg
cwde
mov
jns
popa
sub
test
test
sub
jb
sub
dec
or
jbe
adc
or
add
inc
xchg
mov
shl
xor
stc
cmp
xchg
cmp
repnz
or
xor
sar
cmps
or
pushf
ins
mov
cmp
leave
ins
pop
cmc
fdivr
cli
or
ret
xchg
lahf
mov
sub
pop
xor
into
jo
pop
ret
sub
cwde
dec
pop
xchg
test
retf
arpl
bswap
loope
push
mov
sub
xchg
add
(bad)
adc
repnz
popf
cli
mov
jl
jns
(bad)
jge
cmc
(bad)
or
pop
mov
enter
mov
cmps
and
mov
sub
or
(bad)
mov
cmc
cmp
aas
cmp
jo
inc
out
and
pop
xchg
test
adc
mov
xor
sbb
xor
rcr
stc
(bad)
sub
cld
inc
daa
sub
iret
mov
inc
adc
sbb
pop
std
xor
aaa
out
stos
sbb
add
lahf
cs
lds
fdiv
and
mov
gs
xor
aad
add
xchg
retf
mov
xor
jl
inc
xchg
lods
cdq
out
in
popw
jmp
mov
enter
fcmovu
fisub
add
out
xchg
(bad)
sbb
int
lods
fld
mov
fdiv
xchg
scas
les
pop
or
push
addr16
(bad)
push
jae
mov
lock
aas
mov
(bad)
or
stos
fbld
daa
pop
shr
movs
sub
out
jg
rcr
mov
(bad)
add
xchg
jp
test
pusha
cli
cld
sub
mov
and
push
(bad)
mov
std
inc
xchg
ins
push
cdq
mov
dec
xchg
add
div
lea
test
fstp
xor
jbe
cli
xchg
int3
lds
jne
das
push
push
sub
adc
imul
rcl
loopne
out
push
push
cmp
dec
jle
xchg
inc
mov
add
pusha
jo
inc
out
imul
loopne
xchg
mov
sti
mov
fisub
add
mov
jle
jno
aad
mov
mov
cmp
pushf
repnz
mov
xchg
sar
adc
xor
mov
nop
adc
mov
dec
jne
fs
jp
jl
stos
fsub
mov
xchg
(bad)
mov
mov
jg
push
jae
or
adc
repz
cmp
cs
cmp
add
ins
fdivr
stc
enter
js
or
sub
fsubr
jmpw
pop
cdq
xchg
push
xchg
add
ds
jp
pop
jecxz
lds
add
mov
loope
ins
daa
jg
jmp
inc
mov
push
fild
cld
call
(bad)
sub
mov
add
add
aad
xchg
adc
gs
dec
pop
push
cwde
jmp
fistp
inc
hlt
enter
icebp
gs
cli
or
mov
cdq
fiadd
iret
push
mov
xor
ja
adc
adc
xlat
stos
inc
mov
movs
sbb
dec
mov
retf
cmp
push
jb
and
inc
pop
cli
xchg
popa
sub
adc
out
data16
add
xchg
add
fild
int
bswap
and
into
ret
outs
xchg
dec
push
stos
lods
jle
inc
mov
cs
cmp
push
cwde
pop
sub
fnstsw
pop
xchg
call
mov
mov
cmp
ror
cwde
mov
push
sub
cmc
stos
inc
adc
pop
pop
adc
cmp
sbb
js
adc
fld
enter
repz
mov
in
iret
int3
push
clc
xchg
and
mov
pop
dec
ins
inc
mov
loop
xchg
(bad)
dec
mov
dec
and
mov
adc
dec
ins
iret
mov
xchg
es
jb
xchg
mov
push
out
cmp
or
in
cdq
push
lods
(bad)
sti
ss
adc
pop
addr16
ret
out
mov
mov
jmp
mov
pusha
out
jecxz
mov
int
xchg
jecxz
or
(bad)
and
and
adc
xlat
push
sar
pop
fisttp
leave
(bad)
mov
xchg
popf
repz
jnp
std
retf
aam
jg
push
mov
dec
pop
pop
push
push
mov
ret
cwde
pop
leave
stos
adc
into
ja
(bad)
mov
into
lea
cmp
jmp
popf
aad
push
stos
push
mov
push
pop
jecxz
and
sbb
cld
push
or
mov
pop
dec
dec
jle
push
movs
fisubr
adc
add
sub
inc
loopne
(bad)
(bad)
mov
cmps
mov
gs
mov
stos
out
xor
js
add
mov
push
mov
fcom
mov
sar
dec
bnd
or
mov
fnstsw
(bad)
dec
or
mov
fwait
es
xchg
or
cmc
mov
sbb
xor
push
sbb
dec
stos
ins
mov
fs
dec
jmp
scas
push
jbe
clc
out
les
sti
and
add
enter
cmp
push
xor
lds
mov
lea
loop
jno
ret
jb
es
mov
int
xlat
add
sub
xchg
push
rol
inc
popa
lock
lods
pop
dec
push
mov
pop
mov
mov
sub
jecxz
je
cmps
ret
test
and
(bad)
fistp
rcr
xchg
out
sbb
and
lds
xor
xor
xchg
pop
repnz
ret
xor
std
cli
mov
fwait
mov
stos
or
pop
(bad)
push
push
xor
in
cmp
call
lds
loope
(bad)
fidiv
pop
or
fidiv
retf
mov
out
sbb
mov
xchg
mov
push
lahf
inc
or
pop
jno
mov
sbb
ja
imul
inc
mov
add
xor
mov
cld
fwait
std
bound
outs
fld
and
inc
aad
push
jb
mov
clc
in
inc
cdq
leave
loope
out
ret
xor
add
fiadd
sbb
outs
sub
jo
int
or
in
pop
sahf
jge
loopne
in
sub
aaa
jne
adc
test
in
retf
sbb
inc
adc
not
inc
shr
sbb
clc
pop
cmps
adc
or
nop
clc
stos
inc
nop
mov
leave
stos
lea
iret
jmp
dec
dec
fistp
dec
and
push
cmc
xchg
cmp
cld
mov
rcl
add
clc
shr
push
push
arpl
mov
std
lods
push
repnz
lds
fbld
repz
inc
xchg
es
mov
lods
push
pop
aad
or
fwait
lods
scas
sbb
fidiv
and
inc
push
cmps
adc
dec
pop
(bad)
mov
jnp
inc
inc
cld
jno
enter
push
enter
lock
push
iret
or
std
loop
out
jbe
cld
mov
aas
pop
popf
pop
push
cs
jbe
cmps
daa
cmp
popa
dec
mov
lock
xchg
inc
dec
add
xor
mov
or
ficomp
test
mov
push
push
sub
mov
lock
inc
mov
ins
rcl
push
lds
push
dec
cmp
ror
loop
stos
(bad)
or
lock
iret
gs
jmp
int3
sbb
push
push
dec
push
xor
loop
fwait
pop
jp
(bad)
std
jbe
popf
js
movs
xchg
dec
pop
mov
xchg
mov
inc
or
xchg
or
iret
fidiv
jae
jp
inc
inc
xchg
fstp
ret
adc
psraw
(bad)
stos
mov
pop
push
or
or
stc
cwde
mov
mov
mov
push
push
sbb
adc
sbb
sub
push
jns
jmp
adc
cmp
in
cmps
sbb
or
inc
ret
dec
pop
fadd
jae
sbb
into
ins
mov
add
cwde
cld
adc
(bad)
mov
mov
mov
aam
cmp
repz
push
jle
sub
dec
cmp
test
dec
imul
cld
les
out
ficom
xchg
sub
fisttp
sbb
adc
rcr
outs
push
xchg
in
inc
mov
sar
(bad)
push
popa
fnsave
out
pop
cmp
sbb
xchg
cmp
cmp
sub
sbb
mov
enter
clc
dec
(bad)
mov
es
leave
sub
(bad)
aaa
jmp
add
test
add
xchg
push
std
xchg
inc
mov
nop
dec
sar
add
fwait
xchg
cld
popa
mov
test
shr
clc
mov
mov
test
stos
inc
(bad)
jmp
dec
xor
shl
sub
mov
retf
push
xor
sbb
cdq
ja
sbb
imul
int
lahf
or
data16
sub
out
not
push
stos
std
cmp
aas
popf
in
and
or
jae
jbe
clc
jg
sbb
sbb
fadd
pop
add
cmp
dec
dec
mov
push
sub
test
push
push
mov
pop
je
imul
inc
and
dec
push
int
xor
inc
sub
rcr
mov
mov
cli
(bad)
xor
add
movs
jg
mov
dec
cmp
lods
das
es
sti
(bad)
or
cmp
adc
mov
pusha
mov
mov
sbb
je
(bad)
repnz
shl
ds
aaa
(bad)
mov
loop
pushf
adc
jmp
ror
adc
fiadd
test
xchg
xchg
push
sub
adc
rcr
stos
jb
dec
adc
jle
jl
iret
js
push
mov
pop
hlt
loop
dec
enter
lods
dec
test
xchg
cmps
add
xlat
xor
pop
dec
mov
jne
push
jge
dec
ss
aad
mov
and
pop
xor
cwde
or
scas
fstp
lods
jp
fiadd
mov
dec
sti
mov
adc
dec
xchg
arpl
sbb
dec
aam
fiadd
ds
pop
push
test
aaa
sbb
rcl
jb
mov
fdivr
push
loopne
test
outs
movs
ffree
iret
test
push
movs
test
loope
push
jno
outs
fimul
mov
sub
pop
rcl
dec
repz
sub
jle
mov
fmul
jge
fisttp
shl
pop
mov
add
cmc
mov
add
push
fld
ins
mov
stc
pop
xor
pop
jae
shr
jo
jp
mov
mov
in
(bad)
int3
mov
pop
pop
jo
adc
inc
or
or
push
inc
inc
cmp
dec
ins
fwait
mov
xor
dec
test
aam
add
dec
jmp
rcl
xchg
jbe
or
ret
arpl
xchg
mov
ret
test
in
jl
mov
aam
bound
xchg
(bad)
call
lods
xchg
sbb
aad
cli
(bad)
pop
xchg
xchg
and
aad
fwait
jbe
cmps
mov
mov
adc
cdq
adc
sub
and
sbb
adc
dec
push
push
imul
lds
inc
or
in
sti
out
push
(bad)
nop
pop
xor
in
add
or
cdq
leave
pushf
fld
sahf
sub
inc
adc
inc
lahf
mov
mov
sbb
mov
dec
and
sbb
xchg
dec
daa
dec
pop
push
push
mov
mov
mov
icebp
dec
test
out
add
stos
test
xchg
sub
cmp
pop
jge
fcmove
out
jns
rol
(bad)
imul
in
jl
sbb
fs
sub
(bad)
and
fst
sbb
cld
scas
cli
call
mov
add
test
and
test
push
pop
inc
popa
leave
add
adc
mov
mov
pusha
loope
push
cmp
retf
ror
jmp
cmps
push
sahf
jbe
inc
std
icebp
aam
nop
test
and
add
xchg
cli
test
sbb
imul
sysexit
ja
shl
or
(bad)
ficom
pop
gs
outs
add
out
ror
push
or
retf
iret
xor
pusha
and
sahf
cmp
shl
cs
xchg
ss
fwait
dec
push
(bad)
xchg
mov
out
jno
dec
xchg
enter
das
mov
enter
jle
push
or
mov
add
jb
sub
gs
and
and
sbb
call
and
dec
xchg
nop
shr
stc
xlat
outs
inc
fwait
outs
cmp
xor
mov
repz
dec
mov
push
in
rcr
shr
jne
shl
int
inc
lods
push
fistp
jl
cmps
mov
imul
jmp
nop
sbb
and
(bad)
(bad)
stos
not
scas
sti
lods
dec
loop
push
aaa
add
in
ficom
bound
push
and
mov
sub
sbb
cdq
push
cli
mov
adc
jp
mov
std
xchg
outs
xchg
scas
push
loope
pop
bound
out
cs
pop
cli
push
ret
mov
jne
jno
imul
repnz
mov
and
mov
mov
mov
sub
cmp
jo
loop
xchg
ret
call
test
push
push
adc
scas
mov
cmps
imul
jno
std
dec
mov
jmp
jp
adc
mov
mov
(bad)
jg
retf
fs
mov
cwde
sbb
fstp
xchg
pusha
mov
sub
sub
mov
jg
aaa
and
or
add
jne
or
jg
cwde
lods
or
nop
jg
xchg
arpl
ror
rcr
inc
sub
jns
inc
(bad)
aas
or
xor
mov
(bad)
xor
inc
mov
fs
sbb
retf
imul
ins
(bad)
cmp
mov
mov
jb
or
repnz
mov
pop
in
mov
mov
mov
test
dec
inc
adc
jae
dec
sub
ja
shl
and
pop
ret
out
scas
cmc
inc
jae
retf
jle
sbb
pop
outs
jmp
cmp
sub
gs
mov
cdq
push
xchg
pop
fs
pop
sti
dec
cmp
sar
push
fcom
push
mov
fwait
mov
scas
mov
fs
dec
dec
cmps
or
mov
(bad)
mov
adc
cmp
dec
clc
adc
add
(bad)
out
jmp
mov
xchg
shl
pushf
aam
leave
add
and
clc
jno
or
mov
sbb
xchg
loop
sub
fisub
rcl
mov
mov
mov
das
lds
pop
rol
inc
cs
xchg
or
fcomp
not
mov
call
adc
(bad)
pushf
popa
sbb
pop
pop
cmps
mov
fs
pop
and
call
add
js
cmp
aas
stos
ror
and
mov
sub
lock
ss
ins
daa
dec
push
call
daa
jg
movs
cmp
dec
int3
iret
in
pop
mov
out
and
xchg
push
xor
popf
or
aam
out
fwait
inc
cwde
cld
sub
cdq
outs
rcr
jmp
call
mov
sub
cmp
pop
lahf
mov
sbb
adc
sbb
adc
es
fisubr
pop
jmp
jne
lds
sbb
int
jl
push
push
add
inc
mov
pushf
inc
test
leave
jp
stos
jo
lahf
xchg
loope
adc
cli
sub
stos
scas
dec
popf
or
lds
inc
retf
daa
pop
push
push
inc
inc
bound
jp
add
sub
ret
gs
add
ret
mov
add
xchg
push
rol
in
jbe
sub
mov
es
mov
jo
jge
fcom
addr16
adc
xor
mov
jns
rsqrtps
mov
inc
cmp
fstp
xor
push
data16
sbb
and
jnp
push
pop
mov
ret
adc
xchg
scas
jl
(bad)
fidiv
add
neg
mov
jmp
lods
dec
jp
or
mov
outs
fwait
jo
fild
mov
sbb
mov
mov
mov
jbe
outs
je
sbb
imul
inc
push
test
std
mov
inc
adc
or
cmps
sbb
or
shl
or
mov
sahf
mov
shr
sahf
dec
das
or
fs
pop
gs
jo
sub
xlat
add
mov
stc
lds
dec
and
sbb
and
jbe
fs
ror
repz
mov
or
push
cli
cli
ds
lahf
call
or
push
popf
sbb
push
or
ja
inc
add
pop
xchg
xchg
xor
pop
mov
xchg
lock
out
mov
aam
or
xchg
mov
push
(bad)
std
jb
ret
add
mov
test
pop
nop
fisttp
scas
sar
or
mov
mov
cmps
jnp
rcr
mov
push
jb
cmp
mov
cmp
mov
jecxz
faddp
test
lahf
and
int3
jbe
lds
out
adc
loop
shl
and
neg
stos
sahf
push
call
push
mov
loop
dec
fs
xchg
in
sbb
mov
rcl
cmps
pop
pop
mov
int3
mov
pop
push
add
jbe
imul
clc
cmp
cwde
mov
push
dec
push
bt
pop
lds
cmp
addr16
sar
popa
and
scas
push
neg
inc
in
cmp
xchg
push
aaa
in
data16
or
sub
push
pop
stos
adc
and
dec
stc
dec
push
fcom
push
js
dec
stos
jmp
add
cmp
lock
mov
mov
std
or
ficom
add
mov
loopne
mov
scas
test
aaa
pop
xchg
or
js
inc
lahf
pop
fld
xor
in
sbb
pop
cmp
adc
xor
mov
xor
adc
lahf
sbb
mov
fcom
sub
mov
mov
jae
inc
ins
stos
fimul
dec
(bad)
fcom
fisubr
xor
mov
mov
xchg
test
push
pop
push
dec
call
mov
pop
inc
pop
icebp
push
dec
xor
out
adc
fist
lds
xchg
sub
pop
in
fbstp
fisub
test
mov
mov
scas
test
lahf
push
icebp
sar
int
dec
mov
mov
fdivr
fsubr
scas
and
cmp
fild
mov
mov
lds
and
outs
or
mov
out
mov
adc
scas
shl
mov
out
call
fdivr
xchg
repnz
xor
push
and
mov
scas
push
mov
gs
or
jl
aad
cmp
cld
and
loop
fwait
into
fistp
rcl
inc
aaa
pop
outs
adc
std
xlat
inc
retf
js
add
inc
mov
push
add
nop
cld
pop
shl
jle
shl
ret
and
ror
dec
xor
mov
jmp
lahf
loop
xchg
mov
(bad)
jge
sti
sub
addr16
mov
mov
lds
les
shl
mov
jno
xlat
sub
mov
jno
mov
shl
in
xchg
mov
pop
sub
mov
test
popf
pop
cmp
jle
call
sbb
adc
xor
mov
or
mov
fs
sbb
sar
out
add
(bad)
jmp
movs
mov
mov
pop
popf
cld
sub
mov
push
sti
ret
mov
mov
out
xchg
ja
clc
mov
pop
mov
and
ins
ret
arpl
pusha
ror
sti
outs
dec
xchg
adc
imul
sub
repnz
movs
(bad)
inc
shr
scas
mov
mov
ret
add
dec
shl
iret
cmp
push
dec
adc
jmp
jg
adc
and
mov
daa
gs
mov
cmc
xchg
jmp
call
lahf
iret
xor
dec
daa
push
mov
xchg
mov
ror
shr
pop
mov
add
xchg
ja
in
lea
dec
pop
(bad)
xor
int
sub
sbb
sbb
hlt
fwait
bnd
movs
xchg
arpl
add
adc
pop
pop
cli
movs
sub
pop
dec
add
mov
pop
(bad)
outs
xor
ss
ds
adc
cmp
shl
daa
int
btc
mov
mov
and
adc
jp
pop
(bad)
cmps
aad
int3
retf
call
adc
call
fdiv
add
sbb
dec
add
int3
cwde
mov
pop
leave
pop
push
pop
cwde
idiv
js
lahf
mov
pop
repnz
stos
rol
xchg
push
lahf
popf
dec
call
and
leave
not
retf
arpl
cmps
dec
xchg
push
jle
cmp
push
mov
sub
mov
cmps
(bad)
int3
adc
lock
test
push
aaa
push
adc
mov
mov
jae
std
icebp
rcl
cld
ja
ret
cmps
mov
xchg
adc
fisubr
ins
pop
das
xor
pop
mov
retf
xchg
pop
mov
mov
jb
push
jmp
jmp
ins
test
dec
add
aad
and
jo
scas
mov
mov
loopne
cmp
jo
std
iret
ins
push
dec
push
ss
shl
pushf
push
xchg
gs
ret
or
jg
and
scas
push
cmp
rcr
nop
addr16
jmp
out
in
cmps
add
pop
cmp
add
sub
mov
clc
pop
jp
adc
test
mov
xchg
loop
cmc
dec
lahf
mov
or
inc
movs
push
xchg
cmp
ins
mov
pop
and
js
arpl
dec
retf
dec
pop
lods
imul
xchg
xchg
inc
loope
dec
loope
adc
adc
and
cli
xchg
loop
add
mov
icebp
ins
sbb
mov
jecxz
or
xor
mov
or
sbb
std
ror
rcl
sub
jae
es
(bad)
adc
ret
sub
call
inc
nop
out
dec
push
mov
inc
xchg
out
popa
das
cmps
sti
cmp
pop
sti
sbb
aaa
ret
arpl
add
jbe
pop
xor
cmps
xchg
out
iret
mov
dec
scas
les
(bad)
add
call
dec
inc
daa
cs
mov
ins
adc
jge
repz
fmul
mov
pushf
cwde
adc
push
xor
mov
inc
rol
mov
mov
cs
add
nop
imul
lahf
(bad)
ficomp
sub
in
imul
pop
and
mov
sub
psrld
pop
mov
jo
leave
stos
call
push
sbb
mov
or
test
repnz
cli
push
push
int
daa
pop
cmps
loop
xchg
cs
inc
mov
aas
mov
aam
mov
stos
push
repz
(bad)
call
mov
ins
retf
add
fwait
out
add
in
fwait
cmps
add
add
or
xchg
jb
jmp
dec
rcr
or
push
lds
gs
mov
lgs
scas
or
mov
outs
inc
outs
rol
lods
push
cmp
test
adc
jp
sbb
es
(bad)
rcl
dec
ficomp
(bad)
ret
nop
mov
lock
daa
loop
sbb
xchg
add
push
shl
popa
adc
dec
fnstsw
jns
xchg
push
or
movs
cmps
sub
stos
add
or
outs
sub
sub
pop
push
int
cs
inc
mov
xchg
test
test
push
mov
fcom
jecxz
fdivrp
ds
std
dec
pop
and
mov
mov
jecxz
jecxz
repz
xlat
mov
repz
and
mov
jl
je
or
xchg
leave
jne
cli
ret
xchg
rcr
shl
stos
mov
sbb
int3
dec
retf
test
mov
sti
int3
or
leave
xchg
sub
ret
outs
inc
sbb
mov
xor
out
movs
addr16
xchg
jne
outs
aam
iret
dec
pop
push
call
and
mov
add
dec
arpl
repnz
scas
das
sbb
add
shl
(bad)
rol
fcom
je
push
(bad)
mov
mov
jnp
imul
addr16
mov
xlat
sub
jmp
mov
ret
dec
into
fsub
jmp
and
pop
cli
movs
mov
and
in
or
rcr
push
mov
cdq
lahf
xchg
xor
ficomp
in
test
outs
add
xchg
xchg
movs
shl
sbb
ds
pushf
mov
jo
add
jle
fwait
icebp
lea
stos
mov
ss
inc
retf
(bad)
aam
jne
pusha
mov
mov
mov
popw
test
xor
sbb
or
pop
in
xor
dec
jbe
xchg
pushf
cmp
add
bound
scas
add
dec
xchg
inc
or
adc
ror
ja
aas
sub
cmp
pop
enter
pop
adc
xchg
leave
mov
mov
rol
inc
push
xor
es
loope
cmp
inc
push
std
sbb
cmp
inc
(bad)
push
xchg
(bad)
loopne
push
sbb
out
xlat
lods
and
enter
add
lods
push
mov
int
jg
les
jge
sub
mov
mov
push
adc
fimul
pop
inc
cli
cmps
add
pushf
sbb
cmps
loopne
mov
jo
cmps
add
retf
aaa
vcvtsd2si
adc
repz
into
adc
into
imul
mov
rol
mov
push
pop
fimul
mov
int
inc
adc
retf
push
adc
mov
imul
mov
stos
mov
js
sub
arpl
outs
push
movs
push
mov
mov
cmc
add
xor
scas
dec
mov
mov
xchg
fs
arpl
mov
jge
jne
jg
outs
lods
adc
xlat
dec
out
call
ds
and
xor
inc
or
mov
rcl
inc
lods
or
dec
mov
sti
mov
enter
sub
int3
add
int3
ins
jne
mov
ins
ins
out
lds
repnz
fidiv
fst
ret
push
stos
xor
mov
inc
mov
(bad)
pushf
mov
stc
in
pop
inc
ds
jmp
scas
das
jp
jecxz
mov
sbb
add
add
xchg
or
jmp
in
cdq
push
push
mov
int3
xor
ret
ret
scas
or
push
jmp
inc
(bad)
push
stos
ror
add
push
inc
jge
pusha
ret
jg
pushf
inc
mov
jmp
arpl
ss
xor
push
or
pop
in
fs
jge
out
sub
mov
clc
aam
out
inc
cwde
jne
jge
retf
jns
sbb
cdq
dec
mov
dec
add
inc
jae
and
dec
loop
and
dec
or
std
js
iret
sahf
ds
ss
arpl
in
sar
test
mov
enter
fs
sbb
mov
push
ins
adc
dec
cmovb
ins
sub
setae
arpl
fcmovb
mov
adc
es
jno
xchg
add
retfw
lods
adc
pop
cmp
lods
jo
fndisi(8087
xor
sbb
cmp
pop
sub
and
out
xchg
and
jecxz
mov
add
mov
adc
cdq
inc
sub
sbb
cmp
xchg
xchg
adc
add
pop
(bad)
dec
xchg
(bad)
loopne
loop
mov
imul
push
push
ja
or
in
scas
imul
mov
imul
rol
push
push
sbb
jae
push
sbb
ins
push
in
shl
mov
test
out
inc
ja
into
fcmovnb
xor
sub
lods
es
mov
rcr
je
test
inc
mov
leave
mov
mov
xchg
add
enter
mov
es
test
add
add
xchg
mov
cmp
inc
popf
push
jae
aad
std
push
sub
push
add
push
lahf
enter
hlt
xchg
loop
fistp
cmp
scas
jne
sahf
aam
adc
fmulp
and
push
dec
out
and
sti
pop
loop
lahf
mov
mov
inc
mov
mov
mov
dec
int
js
mov
cmp
in
jle
frstor
lahf
adc
ins
ror
mov
loope
movs
jae
jae
mov
bound
in
mov
icebp
in
jbe
mov
push
lds
movs
jmp
pop
lea
cmps
mov
inc
add
test
ins
sti
(bad)
cmp
leave
leave
fwait
dec
sub
xchg
push
inc
add
or
lea
mov
test
std
xchg
xchg
push
mov
xor
cli
fdivp
retf
ds
adc
xor
retf
push
call
iret
mov
and
xchg
loop
inc
cld
rcr
call
sub
(bad)
sub
jle
sub
or
and
add
cdq
popf
icebp
xchg
jo
or
jle
adc
mov
xchg
fmul
sub
cmp
add
add
cmc
hlt
add
or
out
lock
movs
lods
fbstp
repnz
xor
push
xchg
sbb
jb
div
cs
je
mov
call
movs
mov
dec
pop
jo
addr16
call
pusha
scas
adc
gs
and
or
inc
out
sbb
sti
jecxz
inc
leave
mov
fist
sbb
jnp
in
xchg
adc
ins
push
sub
push
loope
shl
jbe
cmp
stc
daa
push
or
xchg
(bad)
sbb
sub
imul
ret
adc
inc
or
rcr
mov
adc
push
mov
ins
xchg
mov
or
add
push
clc
cmp
adc
(bad)
ins
add
test
fist
mov
(bad)
adc
fwait
dec
stc
sub
in
dec
outs
pop
bound
mov
dec
mov
push
dec
iret
iret
mov
mov
iret
jl
(bad)
jl
stos
hlt
mov
mov
sbb
or
aaa
loope
xor
push
mov
jmp
jne
push
or
inc
or
push
or
pusha
jge
inc
dec
push
cmps
cmp
mov
jae
mov
movs
dec
popf
jne
fnstsw
push
call
pop
pop
int
mov
adc
add
sbb
or
xchg
loope
iret
fucomip
or
rol
jbe
fcomp
xchg
xchg
mov
retf
hlt
out
test
pop
xchg
xor
hlt
jmp
or
idiv
push
xchg
in
xor
je
scas
lock
pop
ffree
out
jae
outs
mov
int3
add
xchg
dec
daa
pop
or
push
es
xor
stc
sbb
dec
pop
das
ficomp
cmps
xlat
pop
stos
(bad)
pop
movs
xor
xchg
out
jno
push
pop
sub
mov
mov
mov
mov
xchg
ins
in
adc
mov
imul
vcvtdq2pd
(bad)
nop
imul
fdivr
push
and
movs
pop
loop
and
cmp
dec
gs
out
inc
dec
inc
mov
fwait
and
jmp
adc
imul
outs
mov
cmps
mov
aad
inc
bound
cmps
jle
daa
mov
mov
ror
scas
pop
mov
jg
cmps
dec
nop
add
(bad)
mov
inc
das
cmp
shl
popa
inc
push
cli
shr
add
sahf
cmp
fsub
mov
push
rcl
jbe
imul
cmp
lods
inc
add
jno
mov
fwait
and
fwait
jmp
dec
push
lods
mov
jo
inc
ins
(bad)
mov
pop
int
jecxz
pop
push
in
or
retf
arpl
push
jno
repnz
fwait
mov
pop
(bad)
ficomp
jb
xchg
scas
or
mov
push
sar
sbb
add
push
fist
stos
cdq
bound
ret
push
and
xor
out
add
xor
sub
adc
push
cmp
sbb
mov
dec
test
jne
cmp
es
fsub
mov
xor
shl
mov
cmp
add
fnstcw
(bad)
leave
iret
loop
shl
sbb
test
xor
scas
and
sub
cs
stos
loopne
cs
cmp
call
adc
inc
xchg
cli
test
ror
iret
mov
nop
add
sahf
cmp
jecxz
shl
lea
dec
jecxz
push
mov
ret
jmp
int
retf
imul
rol
pop
jp
daa
and
mov
mov
pop
jmp
push
inc
test
dec
jne
in
ins
jmp
xor
jecxz
jmp
dec
mov
hlt
mov
data16
xchg
fnstenv
sar
mov
clc
push
pop
mov
imul
or
pop
daa
imul
cmp
ror
pop
(bad)
xchg
push
idiv
cdq
nop
lahf
adc
pop
xchg
psllq
mov
pop
inc
ss
adc
outs
mov
jae
push
or
cdq
out
cdq
push
dec
je
clc
cmp
retf
or
cs
mov
test
cmc
arpl
pop
xlat
xchg
adc
or
(bad)
test
sub
es
or
leave
sub
scas
jbe
push
pop
mov
cmp
push
shl
jo
jo
gs
mov
jo
ins
inc
pop
out
and
sar
xchg
fdivr
(bad)
movs
xchg
fnstsw
inc
fisubr
push
lahf
mov
jl
push
sbb
dec
mov
in
jbe
xchg
(bad)
bound
bound
jmp
xor
pop
into
mov
push
inc
popaw
push
rcr
popf
xor
and
jae
arpl
movs
test
lods
nop
outs
xor
pop
sub
lds
nop
jp
(bad)
lds
fistp
jmp
jns
repnz
add
fbld
pop
pusha
aad
mov
cmps
clc
cwde
inc
addr16
das
xor
mov
inc
shl
aam
or
inc
inc
xor
pushf
cmp
mov
xchg
ins
stc
pop
int
inc
fldenvw
sbb
inc
(bad)
outs
mov
pop
enter
clc
gs
(bad)
(bad)
int
enter
xor
sub
test
out
jnp
fwait
push
imul
inc
movs
sbb
push
jbe
mov
jecxz
rcl
cmc
sbb
or
cmp
scas
pop
sgdtd
sub
sbb
xchg
cmps
mov
sbb
ins
mov
pop
inc
in
inc
aaa
cmps
push
daa
aaa
inc
outs
mov
lods
fisttp
cld
stos
jp
or
inc
xchg
sbb
push
dec
jbe
jge
test
jbe
test
in
xchg
int3
sub
mov
dec
loop
jg
pop
scas
push
mov
jl
mov
jnp
or
ds
add
pop
test
jmp
cwde
stos
dec
popf
add
imul
mov
sub
cwde
nop
aam
loope
arpl
mov
sbb
outs
and
xor
jp
push
sbb
push
push
(bad)
xlat
xchg
or
ds
jo
or
add
test
mov
push
jecxz
mov
fwait
scas
cmp
sub
sbb
xor
stos
shr
xchg
sub
and
mov
mov
sahf
(bad)
popf
mov
xor
(bad)
out
aaa
lock
shr
js
ins
cmp
cld
sub
call
pop
cmp
stos
movs
cwde
outs
(bad)
xor
retf
test
repnz
jbe
call
gs
ins
xchg
lea
mov
or
icebp
ret
push
jo
inc
jnp
stos
mov
jmp
push
pop
ret
push
sbb
sub
or
cmps
icebp
pop
rol
mov
add
(bad)
js
xor
outs
mov
mov
dec
mov
cmp
dec
mov
add
push
pop
data16
faddp
xor
push
adc
pop
jmp
adc
cdq
sahf
mov
inc
js
fbstp
add
or
test
arpl
les
pop
es
pop
cmp
dec
ret
sbb
std
(bad)
leave
cli
out
sub
sub
mov
dec
stos
(bad)
pop
cmp
xchg
lods
push
fdivr
cli
pusha
cmp
adc
idiv
fcom
mov
adc
cmps
add
sbb
pop
sbb
or
cmp
stc
cmc
mov
mov
jns
dec
aad
push
cmp
jp
dec
cdq
push
xchg
lods
xchg
out
adc
pop
mov
sahf
mov
je
sar
(bad)
pop
gs
mov
retf
sar
(bad)
arpl
dec
call
ins
push
(bad)
dec
push
cmp
mov
pushf
cs
ret
iret
mov
add
mov
ret
int3
push
xlat
daa
push
fucomi
cmps
int
pop
pop
cmp
pop
mov
in
sti
cwde
push
ins
pushf
inc
mov
cmp
pop
sbb
push
jmp
dec
enter
jp
sar
lea
dec
mov
pop
fnstsw
test
xor
sub
xlat
push
add
std
push
mov
sbb
adc
fbld
cwde
and
popa
fdivr
mov
jb
sbb
jae
cmp
clc
sub
dec
add
xchg
adc
adc
out
stc
hlt
pop
(bad)
jmp
shl
(bad)
imul
pusha
test
dec
and
clc
inc
mov
je
stos
pop
loope
mov
aam
stos
pushf
dec
test
mov
fidiv
enter
mov
dec
adc
repnz
iret
scas
call
inc
fadd
mov
push
ss
movs
adc
loopne
dec
mov
(bad)
mul
or
jo
mov
jp
fiadd
dec
stc
add
pop
jge
(bad)
popa
out
ret
lea
mov
out
dec
addr16
dec
mov
cmps
cmp
sti
cld
sahf
not
xor
push
mov
sub
inc
mov
mov
jecxz
push
or
add
cwde
inc
and
jo
push
sub
movs
repnz
outs
xlat
or
sti
jle
push
mov
xchg
sub
ja
xor
xchg
xchg
pop
shl
movs
sub
push
popf
or
pop
imul
sub
rcl
div
es
aaa
jp
scas
loope
(bad)
sub
jne
or
or
push
loope
dec
inc
call
imul
mov
pusha
fadd
out
adc
pop
sbb
push
bound
fs
pushf
jecxz
repnz
push
and
in
int3
loope
addr16
(bad)
imul
fadd
rcr
ss
xor
data16
add
inc
sub
sbb
imul
adc
jmp
clc
jmp
lods
inc
inc
cmp
cmc
push
dec
mov
jmp
cli
lods
mov
fbld
dec
cwde
cmp
shl
cmc
rcl
mov
movs
jp
add
dec
out
cs
push
adc
lods
adc
xchg
lea
scas
int3
pop
jg
fist
or
mov
and
(bad)
jge
sbb
cs
dec
lahf
retf
not
inc
add
xchg
jl
ins
popa
pop
enter
ins
xchg
jb
pop
popa
xor
xchg
rcr
sub
stc
retf
retf
xchg
mov
fwait
cmps
or
dec
jecxz
cmp
jb
mov
faddp
xchg
adc
mov
sbb
add
pop
out
rcr
(bad)
push
or
mov
mov
adc
(bad)
or
retf
aad
lds
ret
inc
test
xchg
ins
imul
xor
sbb
mov
sub
mov
inc
push
jnp
outs
shr
call
xchg
mov
or
jbe
dec
sbb
iret
dec
mov
mov
mov
fwait
fwait
sub
inc
clc
add
repz
add
ins
sub
std
pop
jecxz
xor
jne
mov
ds
test
pop
push
xor
push
mov
mov
or
enter
or
xchg
add
std
fstp
dec
out
daa
jmp
cmp
cs
dec
mov
mov
inc
cli
jl
dec
into
movs
push
xchg
dec
fnsave
dec
jb
mov
psubd
xor
push
cwde
and
test
jo
cwde
retf
int3
mov
mov
pop
adc
iret
(bad)
xchg
scas
jle
aam
fnstenv
fdiv
sub
mov
jmp
inc
sub
int3
(bad)
push
rol
ror
ja
jae
popa
cmp
mov
xor
ins
dec
std
ja
cmp
das
inc
mov
pop
in
adc
dec
stos
dec
mov
push
mul
xchg
sbb
push
dec
xor
aaa
jae
adc
iret
stos
sub
mov
cs
inc
sti
test
and
jge
leave
sbb
outs
loopne
xor
inc
fwait
adc
popf
hlt
add
lods
out
stos
iret
cmps
out
fsub
mov
fcomip
neg
cmp
jge
imul
stos
int
or
in
jge
adc
mov
pop
dec
mov
call
sahf
ss
lods
movs
fistp
xor
fmul
repz
sbb
push
sub
pop
sar
retf
push
ins
mov
jg
pop
pop
sbb
ret
dec
lahf
dec
xor
xchg
mov
rol
xor
frstor
shl
jns
mov
sar
xchg
jle
pop
or
mov
jae
mov
je
test
sbb
xor
inc
sub
push
mov
and
retf
sbb
lods
pop
mov
ja
mov
adc
dec
cmp
ret
movs
rep
adc
lea
lods
mov
adc
(bad)
and
mov
icebp
lds
je
das
sub
ficom
das
adc
dec
arpl
out
adc
dec
mov
loope
rcl
not
xor
xlat
pop
ins
scas
popa
pop
xchg
idiv
mov
mov
add
mov
int3
fiadd
retf
sub
adc
xchg
sbb
or
test
arpl
jns
sahf
inc
clc
pop
(bad)
cmps
arpl
ret
gs
mov
xchg
pop
cmp
xchg
mov
or
outs
cmp
push
jmp
jbe
sbb
arpl
dec
les
(bad)
cmp
stc
mov
sub
out
fcmovu
in
pusha
pop
inc
mov
pop
or
cli
(bad)
inc
push
sub
call
dec
aaa
jo
sbb
jnp
add
mov
adc
(bad)
ins
dec
dec
in
xor
(bad)
repnz
push
pop
sbb
ror
mov
outs
xor
dec
fld
push
pop
add
sbb
push
add
inc
push
loope
ins
sbb
jb
push
shr
(bad)
ficomp
sti
aas
ins
pop
rcl
push
call
pusha
mov
adc
fcom
imul
out
mov
cld
mov
add
sub
sbb
jmp
jmp
xor
cmps
les
xor
sti
stos
xor
cmc
push
iret
pop
pop
into
(bad)
push
shl
popf
and
adc
lahf
sub
cs
lock
push
fdivr
lds
das
in
outs
out
data16
xchg
ins
int3
jbe
sub
call
loope
(bad)
call
dec
xchg
and
retf
cli
push
out
sar
adc
out
inc
sar
dec
test
xchg
in
mov
inc
pusha
jo
xchg
(bad)
pop
push
outs
repz
add
out
and
es
mov
and
cmp
inc
addr16
scas
and
sbb
inc
mov
mov
sbb
(bad)
mov
sub
in
mov
adc
xlat
sbb
inc
jns
ins
out
pop
(bad)
int
mov
dec
cmps
adc
ds
ds
adc
fsub
in
test
pop
lods
and
ret
or
xchg
push
sbb
dec
add
xchg
fsincos
call
add
daa
push
dec
leave
sub
rcr
int
add
int3
shl
push
sub
fst
cmp
retf
mov
adc
cmp
cmps
add
(bad)
loopne
add
jl
and
fdivr
scas
cli
cwde
push
inc
or
xor
js
cld
mov
sub
sar
jmp
daa
sbb
jl
xlat
mov
jmp
clc
mov
das
and
lea
iret
std
ins
pop
aad
adc
pop
add
loopne
stos
(bad)
mov
jecxz
xchg
jmp
xor
sti
xchg
not
jecxz
mov
ret
nop
push
sbb
adc
fs
xchg
fmul
mov
arpl
rcr
cmps
fsub
call
(bad)
ins
push
xchg
dec
inc
xor
mov
sbb
cli
xor
xor
mov
adc
pop
pop
popf
stos
ja
ins
clc
mov
push
fst
add
nop
aad
cwde
xchg
in
retf
mov
sbb
js
dec
dec
ret
lock
into
rcr
das
and
cwde
xlat
adc
push
(bad)
lods
and
xor
test
push
xchg
clc
push
aad
inc
test
imul
cmps
inc
dec
std
(bad)
push
call
cld
xor
repnz
xchg
(bad)
popf
xlat
push
out
mov
stos
mov
push
xor
mov
(bad)
imul
sub
dec
xchg
in
mov
push
dec
mov
adc
test
inc
ss
jle
xor
stos
fldenv
fld
cld
aam
(bad)
jns
mov
pop
mov
and
jg
(bad)
pop
clc
stos
push
call
and
jno
std
shl
cmps
out
retf
popf
fwait
retf
mov
out
or
aam
sub
inc
mov
pop
dec
call
inc
shl
ret
nop
stc
jo
dec
mov
cmp
icebp
push
loop
push
fistp
jb
or
pop
sub
inc
cwde
inc
aad
aam
pop
push
cdq
cwde
inc
enter
nop
inc
or
and
nop
rol
(bad)
jmp
int3
adc
sub
scas
dec
push
int
daa
push
scas
out
outs
or
arpl
loope
dec
mov
sar
mov
jecxz
lds
sub
test
and
push
mov
or
inc
and
test
ss
mov
retf
imul
xchg
and
cmp
repnz
push
ss
xchg
ss
push
push
hlt
inc
loopne
sti
scas
jmp
sbb
xchg
mov
inc
and
(bad)
xor
or
addr16
outs
adc
out
daa
sub
xor
in
inc
mov
lods
push
dec
adc
ins
fldenv
cdq
addr16
shl
(bad)
mov
dec
sbb
into
out
mov
and
sti
adc
dec
popf
inc
pop
xor
mov
dec
(bad)
or
mov
aad
mov
pop
or
call
int
pop
adc
xlat
adc
fs
push
cdq
cmp
ror
inc
jae
das
fxch
cmc
loopne
rcl
sub
xor
daa
and
mov
mov
movs
adc
int
mov
push
adc
push
(bad)
loop
out
and
call
xor
adc
sbb
(bad)
addr16
lds
mov
cmc
push
xor
adc
pop
das
inc
xchg
ret
cmp
shl
lds
lock
or
test
xor
push
(bad)
repnz
mov
push
cmp
sbb
mov
sti
xacquire
cmp
aaa
les
add
cmc
shl
aad
test
stos
pop
pop
loop
sub
bound
xor
xor
out
in
sahf
js
leave
lea
int3
add
mov
mov
gs
aas
jbe
and
mov
adc
inc
mov
jnp
out
mov
xor
stc
out
fdivr
adc
cmp
mov
outs
and
dec
data16
loope
add
inc
movs
es
mov
xor
xor
add
push
mov
movs
jl
addr16
xchg
or
xchg
lock
ins
lock
loopne
ss
mov
mov
xchg
xchg
pop
fs
xor
or
xor
stos
test
cmp
mov
(bad)
xlat
dec
add
jmp
pop
retf
and
mov
ret
inc
push
(bad)
sti
push
aaa
std
add
jp
dec
dec
jae
cmps
mov
sahf
int
scas
idiv
dec
jnp
out
adc
push
inc
mov
mov
push
jmp
aas
aam
int3
shr
push
movs
std
test
mov
and
adc
stos
xchg
shl
push
retf
mov
and
test
cmp
xchg
test
clc
aam
int3
inc
mov
sar
add
cmp
scas
cwde
dec
or
sbb
popf
aas
repz
cmp
sbb
jl
inc
cli
test
add
push
cdq
pop
jmp
push
mov
add
push
adc
out
mov
adc
ins
hlt
frndint
sub
sub
or
pop
mov
jg
xchg
retf
mov
aam
sbb
popf
mov
jecxz
loope
retf
xor
lds
dec
rcl
push
loop
push
xor
push
xor
retf
jecxz
adc
fmul
shl
xor
push
fnstsw
and
int3
pusha
xlat
call
shl
stos
jp
in
and
addr16
call
call
sbb
test
movs
ds
pop
xchg
punpckhbw
inc
add
movs
scas
fsub
ret
das
cs
arpl
push
sbb
sub
into
dec
sbb
leave
loopne
sbb
ins
les
adc
mov
and
outs
mov
inc
cmp
dec
dec
mov
iret
(bad)
loop
aam
shl
pop
inc
jbe
adc
sahf
retf
rol
pop
jge
addr16
dec
sbb
(bad)
xor
into
mov
xor
adc
leave
enter
mov
sbb
lods
xor
mov
hlt
inc
sub
(bad)
or
jge
fdivp
mov
or
dec
outs
inc
fdiv
mov
add
and
mov
mov
push
jbe
dec
and
xor
pushf
jnp
shr
cmp
cdq
mov
jecxz
inc
cli
in
inc
fcmovu
test
adc
inc
into
lea
mov
fistp
add
rcl
or
aas
or
fwait
dec
sub
in
gs
jnp
retf
and
sti
pop
out
mov
lahf
addr16
scas
jnp
es
arpl
stos
cs
push
das
(bad)
cmp
stos
loop
jecxz
fwait
mov
scas
sub
icebp
mov
xchg
xor
popf
stc
cwde
pop
aad
xchg
(bad)
adc
loope
adc
sbb
les
mov
fcmovbe
or
bound
push
lods
pop
jne
mov
push
xchg
jb
cmps
push
push
imul
fwait
jne
jb
inc
loopne
fs
cmp
add
jae
cs
mov
movs
lods
sub
or
dec
ret
adc
push
push
fidivr
jp
and
sbb
inc
mov
out
pop
loope
aaa
aad
pop
shl
div
in
sbb
call
push
lods
(bad)
rol
mov
imul
add
aaa
cmp
cmp
fldenv
stos
inc
sar
in
jns
lahf
ja
ins
push
push
mov
fs
clc
inc
jnp
repz
loopne
adc
cmps
fs
pop
mov
xor
mov
fdiv
sbb
mov
adc
jns
dec
ret
push
test
lods
jae
jmp
neg
mov
pop
sbb
fucomp
mov
enter
popf
pop
out
pop
or
mov
rcr
sbb
cdq
push
es
xor
pusha
fisttp
retf
mov
push
cmp
pop
mov
xor
mov
mov
cs
pop
scas
stos
sub
mov
mov
call
mov
je
sub
pop
mov
mov
mov
mov
sub
icebp
cld
sahf
ss
lahf
ror
pop
adc
push
mov
push
ins
inc
add
es
sbb
adc
mov
mov
jmp
push
xor
lahf
cmc
call
in
inc
cmp
inc
test
xchg
test
adc
lds
push
dec
xchg
dec
loope
mov
dec
cmp
jns
test
adc
std
add
lahf
jne
inc
xor
cdq
mov
jb
cmp
jp
mov
sbb
xor
shl
iret
ficom
fisub
and
iret
rol
push
lods
mov
icebp
fdiv
icebp
stos
movs
mov
cmp
push
jbe
arpl
test
add
movs
xchg
sub
sar
les
xor
sbb
cwde
push
push
int3
stos
push
inc
fs
adc
pop
fld
shl
icebp
stos
add
jp
aad
cmc
ret
sub
fimul
push
jns
in
shr
inc
popf
ret
jmp
inc
jne
inc
mov
enter
popa
mov
popf
push
arpl
jb
and
pusha
shl
jecxz
pop
(bad)
mov
pop
cs
mov
sub
add
add
(bad)
gs
mov
ffree
and
iret
sbb
scas
ja
jbe
and
pushw
(bad)
dec
push
mov
add
outs
sub
jmp
pop
inc
cmps
sub
push
mov
mov
push
repz
xchg
out
sub
out
mov
jo
adc
cwde
(bad)
cmp
in
test
sbb
sbb
add
or
push
and
mov
fdiv
not
jmp
inc
jb
pop
and
repz
mov
fnstsw
ret
push
mov
retf
pop
and
mov
pop
std
sbb
test
xchg
test
cli
xchg
movs
jns
push
stos
sti
sub
mov
movs
ret
add
pop
sbb
mov
popa
into
push
jle
pop
loope
stc
and
cmp
jmp
add
shr
inc
rol
or
sbb
adc
jl
sbb
icebp
ds
sub
(bad)
and
adc
mov
xor
cmp
rcl
xchg
sbb
push
jb
dec
inc
popa
pushf
fiadd
in
test
pop
xor
inc
pushf
fcom
and
or
(bad)
pop
je
mov
adc
pop
push
sub
cmps
ins
mov
repnz
dec
mov
dec
out
push
mov
outs
pop
jne
mov
pop
mov
retf
sbb
mov
push
push
inc
jl
retf
test
cdq
xor
(bad)
ja
sbb
into
mov
mov
jle
mov
and
in
cwde
mov
or
enter
jns
cld
jo
jne
xchg
jbe
je
imul
repnz
mov
or
jo
mov
mov
cmp
movs
add
sbb
test
jne
dec
out
pop
push
xchg
cmps
ja
addr16
inc
pop
xchg
dec
push
daa
and
enter
imul
sbb
pop
or
mov
(bad)
mov
mov
cld
clc
xchg
xchg
sub
rcr
mov
es
xchg
push
into
pop
les
dec
mov
fsubr
mov
ficomp
or
jmp
pop
shr
and
mov
mov
aad
dec
adc
xor
and
sub
shl
aad
dec
cmp
sub
xor
cli
test
pop
jb
and
adc
xchg
mov
mov
fcom
jb
cwde
mov
xchg
out
and
push
mov
sahf
fld
xor
inc
cmps
add
push
iret
and
push
(bad)
cmp
aas
stos
pop
mov
pop
and
dec
add
stc
add
cs
or
(bad)
nop
jnp
aam
cmp
jp
or
fstp
cld
jecxz
xor
and
fist
adc
mov
into
in
arpl
stos
mov
mov
aam
pushf
imul
jecxz
test
(bad)
stos
loopne
sub
js
cmp
add
pop
jb
into
sub
jbe
mov
dec
(bad)
lock
test
into
js
xchg
mov
xchg
mov
inc
xlat
mov
mov
push
push
adc
xchg
cmp
mov
jmp
shld
and
mov
icebp
mov
sub
lods
inc
xor
imul
js
sub
dec
mov
mov
adc
push
out
inc
movs
pop
mov
mov
mov
mov
ficomp
sub
sar
js
pop
sar
xchg
xchg
aas
inc
mov
xor
push
std
jbe
add
adc
pop
sbb
(bad)
pop
fcomi
(bad)
dec
mov
mov
jno
xchg
test
mov
cli
xor
or
addr16
inc
jnp
mov
jecxz
pop
lods
sbb
cmps
jmp
push
movs
adc
mov
shl
adc
fdiv
cmps
cs
pop
sbb
inc
cmc
pop
loop
jno
sub
and
xchg
outs
cmc
dec
cmp
shr
push
hlt
xor
ror
scas
or
xor
or
fcomp
mov
aas
xchg
lods
das
(bad)
xchg
inc
push
aaa
and
js
loop
push
sbb
fadd
call
pushf
push
lds
mov
push
cwde
sahf
rcr
(bad)
pop
sbb
cmp
cmp
aaa
leave
movs
and
jge
sbb
or
mov
jae
popa
sub
jg
push
mov
fst
mov
cmovle
fidivr
mov
xor
dec
movnti
mov
and
and
and
lock
push
or
xor
addr16
dec
ret
je
jae
jg
in
dec
cmp
and
push
test
enter
mov
sub
popa
(bad)
add
lods
mov
sub
psubusb
jne
xchg
test
mov
scas
and
out
enter
fwait
add
push
mov
ins
std
call
aad
or
pop
std
imul
sub
jne
clc
lock
lock
(bad)
je
fwait
jae
xchg
adc
push
pop
lahf
push
cld
add
cmp
xchg
xchg
push
dec
mov
jo
push
mov
std
mov
dec
jb
push
jecxz
addr16
test
enter
sbb
xor
jmp
mov
lea
les
cmps
xor
and
dec
and
adc
xor
test
and
cmc
adc
xor
or
das
mov
je
xor
adc
ret
sbb
mov
mov
jae
sar
lods
enter
jmp
mov
jo
xchg
xchg
lahf
int
inc
jp
mov
std
pop
shl
sahf
xchg
dec
sub
(bad)
in
test
out
sub
js
xchg
aad
loopne
(bad)
mov
iret
dec
sbb
jmp
mov
mov
arpl
sub
mov
mov
cmps
rcr
mov
loop
push
sbb
cmp
add
ret
or
scas
leave
jbe
mov
fcomp
into
xlat
mov
imul
mov
fld
leave
dec
and
mov
or
mov
imul
jae
loop
icebp
fcmovnu
mov
mov
std
sbb
outs
or
shl
mov
adc
cld
ss
xor
call
pop
xchg
dec
pusha
into
sub
and
imul
and
fs
in
cmps
xchg
arpl
mov
pop
hlt
stc
loopne
in
xlat
fisttp
retf
jecxz
mov
add
jns
sub
inc
inc
dec
sbb
rol
hlt
les
je
or
pop
sbb
sbb
and
adc
sub
push
pop
adc
cmps
fist
xor
add
dec
fs
or
mov
xlat
dec
and
loope
outs
es
lock
test
icebp
mov
jmp
fild
enter
leave
fcom
adc
jp
jg
rcl
sub
outs
jecxz
push
pusha
push
mov
jnp
jb
out
pop
mov
das
sub
ret
cmp
lods
mov
repnz
fld
dec
pop
lea
pop
xor
cmp
fiadd
pusha
test
dec
addr16
xor
aaa
xchg
sub
retf
sahf
std
cmp
push
dec
cmp
fcomi
js
mov
sbb
fst
std
fdivr
mov
pusha
pushf
xchg
lock
mov
push
test
out
outs
outs
mov
jmp
lods
jmp
sahf
test
mov
xchg
sbb
inc
es
pop
mov
jbe
clc
test
sbb
out
clc
in
and
push
and
adc
mov
js
imul
pop
push
test
in
cmc
test
es
cmp
lods
xchg
mov
in
inc
sbb
rcr
mov
retf
mov
xor
sbb
sub
cmp
jecxz
ficomp
lods
gs
sbb
movs
cmp
sbb
cs
call
adc
mov
pop
push
adc
jecxz
jg
jbe
stos
mov
xor
xor
loope
retf
jns
movs
jb
das
daa
or
dec
inc
call
pop
test
pop
imul
mov
cmp
stos
xchg
jmp
retf
or
arpl
sar
(bad)
push
sar
jge
or
sbb
push
or
push
cmp
lods
test
inc
add
mov
imul
mov
fcomp
and
cli
and
mov
fist
xor
lods
(bad)
clc
es
mov
pop
loop
fidiv
or
push
dec
sub
mov
mov
mov
(bad)
pop
adc
push
sbb
mov
inc
imul
shl
mov
push
ins
xchg
or
inc
lods
dec
ds
jo
out
dec
push
out
jo
jne
mov
fadd
xchg
jbe
jecxz
xchg
or
les
jb
jmp
ins
mov
in
xchg
push
push
test
ror
scas
jp
sbb
cmp
add
jne
xchg
shr
popa
add
mov
test
(bad)
outs
cmp
jae
jg
xchg
mov
mov
(bad)
dec
aaa
sbb
sbb
repnz
(bad)
jmp
xor
adc
push
shr
into
and
sbb
push
ss
mov
out
cmp
std
inc
ja
and
and
mov
pop
push
pop
in
xchg
out
xor
lods
aaa
or
xchg
(bad)
dec
cs
fwait
mov
(bad)
js
add
cli
call
stos
or
push
cld
scas
pop
gs
xchg
pop
daa
sub
sub
or
sub
or
lods
mov
mov
and
ror
xor
or
xchg
dec
es
add
repz
fldenv
jge
lods
fwait
cmps
xor
aas
dec
ins
daa
inc
add
iret
jle
dec
add
mov
add
sub
sbb
dec
fcmovnbe
leave
xchg
mov
lock
xchg
or
das
xchg
mov
ins
jo
push
call
lods
xchg
dec
inc
dec
inc
ja
data16
aas
mov
das
(bad)
(bad)
pop
dec
stos
mov
mov
fcomp
je
xor
dec
or
mov
loop
test
inc
nop
or
jmp
out
sbb
ss
dec
sub
into
mov
sbb
fs
mov
xchg
mov
adc
fidiv
and
add
sub
mov
shl
inc
jno
mov
inc
mov
mov
adc
mov
out
mul
dec
xchg
pushf
div
add
mov
(bad)
xchg
cmp
repnz
ss
ja
inc
dec
adc
cmps
adc
add
imul
pop
push
pop
rcl
daa
popa
adc
adc
ret
xchg
sub
sahf
fsub
lock
fild
(bad)
push
jo
jecxz
mov
in
outs
movs
outs
mul
mov
out
outs
mov
in
scas
mov
rol
aad
lea
pop
outs
pop
nop
sbb
fs
sbb
inc
xchg
cld
mov
sub
(bad)
icebp
pop
std
lea
dec
ins
pminub
fbstp
arpl
inc
enter
loop
jbe
fld
fwait
add
int3
lea
pop
enter
es
adc
iret
stos
push
xchg
pop
cmp
mov
movs
xor
jo
push
cmp
ror
cmc
outs
jg
sbb
cli
mov
and
push
or
inc
or
cmp
dec
aas
imul
fs
sub
cmp
aad
mov
loope
mov
add
out
dec
sub
in
imul
movs
fstp
test
adc
addr16
lods
loopne
push
es
iret
or
test
sti
push
xor
es
in
mov
mov
jle
jae
aas
jg
dec
into
pop
pop
aam
repz
xchg
mul
loop
push
adc
inc
cld
test
pop
int3
fs
add
(bad)
rcl
imul
jmp
mov
ficom
shr
add
sar
or
repnz
jl
je
sub
dec
mov
mov
sub
inc
xchg
scas
call
xlat
adc
call
mov
mov
mov
xor
push
pop
ins
dec
das
sbb
jne
out
dec
cmp
gs
pop
test
movs
mov
fmul
hlt
mov
outs
or
pop
pop
fisttp
aam
adc
xor
cmps
xchg
ret
pop
or
cs
xchg
js
cmp
xchg
push
jne
mov
xor
cmp
ins
(bad)
sub
fadd
out
pushf
movs
inc
loope
fadd
lds
loopne
(bad)
fcom
inc
cwde
sbb
sub
cdq
mov
ja
popf
push
js
call
mov
stos
mov
out
call
aad
dec
ja
fcmove
adc
hlt
addr16
pop
clc
into
aad
or
push
add
cwde
and
jb
mov
cld
cmc
push
inc
mov
popf
cld
push
push
mov
mov
int
sbb
dec
jl
int
push
ds
xlat
xchg
mul
or
retf
aam
das
mov
lods
mov
loopne
push
jmp
loope
es
mov
dec
push
adc
or
add
mov
lock
mov
shl
or
xor
dec
call
xchg
push
inc
rcr
je
call
in
in
mov
sbb
in
mov
pop
or
push
jle
out
rcl
shl
mov
xchg
jae
out
dec
add
les
adc
jbe
imul
ins
iret
int3
sti
call
in
clc
sbb
fcomp
cmp
ss
inc
inc
lahf
aad
mov
imul
jp
mov
stc
call
nop
scas
dec
pop
mov
add
das
adc
add
push
xchg
mov
inc
lock
jne
fisttp
repnz
sbb
sub
ss
lock
push
mov
add
xchg
test
pop
into
imul
pop
mov
mov
and
js
fist
ret
push
xchg
ja
call
hlt
mov
and
lock
pop
repz
jmp
int3
sub
jmp
adc
fimul
ret
pusha
pop
outs
jle
dec
in
pop
push
push
or
movs
sbb
js
add
mov
sub
frstor
inc
xchg
cmp
pop
xor
lods
int3
sbb
int
outs
mov
rdpmc
in
(bad)
sbb
test
jbe
ret
inc
mov
nop
xor
scas
stc
inc
fisubr
push
inc
test
jp
xchg
sbb
cld
pop
jno
iret
fcom
fld
mov
test
xchg
jno
or
mov
movs
mov
dec
jle
sti
cli
xchg
out
add
dec
ins
mov
lock
aad
lds
sbb
lods
xchg
adc
xor
pop
push
lods
or
jae
mov
(bad)
(bad)
es
push
mov
jbe
mov
in
dec
mov
adc
ins
out
(bad)
pop
sbb
pusha
in
push
shl
jno
sbb
xchg
xchg
or
mov
mov
in
mov
rol
sbb
push
adc
lea
xchg
cmc
and
rcr
or
or
mov
das
xchg
arpl
les
jle
inc
sub
mov
mov
or
cmps
dec
xor
leave
neg
xchg
fdivr
mov
and
cmps
pop
das
jge
ror
movs
jno
test
in
mov
mov
rcl
cs
shl
sar
repz
dec
dec
pop
mov
pop
in
mov
stc
pop
fst
pop
push
pop
sbb
push
cdq
or
sbb
add
adc
sbb
xchg
out
jb
mov
xor
cld
xor
fist
icebp
dec
mov
cmp
in
jno
cmp
popf
in
shr
fs
inc
sub
dec
icebp
lea
stos
enter
and
or
add
mov
sub
clc
xor
mov
out
cmps
mov
test
cmps
sbb
or
dec
cli
imul
ins
arpl
mov
cmp
sbb
sbb
pop
or
sbb
xor
lock
iret
dec
or
fild
retf
xlat
inc
lahf
das
movs
aad
in
sbb
add
pop
pop
cdq
sub
and
(bad)
add
retf
shl
std
sub
xchg
adc
je
jmp
test
and
cmp
sbb
fincstp
pop
pop
out
push
mov
mov
popa
mov
mov
(bad)
movs
inc
or
inc
mov
push
rcr
(bad)
cld
push
push
outs
dec
push
xchg
dec
(bad)
jmp
mov
cmp
pop
(bad)
leave
jnp
int
stos
cmp
adc
mov
push
mov
push
adc
mov
xchg
push
setne
daa
jecxz
pushf
adc
xor
mov
mov
xchg
push
stos
rcl
lahf
imul
aad
aad
cdq
xor
dec
add
pop
mov
in
sub
inc
cld
inc
inc
push
not
int
scas
popf
sbb
rcl
aam
js
xchg
mov
sub
in
adc
lods
loop
push
sbb
(bad)
fiadd
jmp
mov
das
mov
faddp
jns
loopne
pop
adc
mov
sbb
hlt
add
sub
mov
retf
cwde
cmp
mov
pop
pop
jle
or
fadd
mov
sbb
mov
dec
out
xor
sub
mov
mov
xchg
xor
scas
iret
add
popa
jge
cmp
(bad)
lods
cmp
inc
and
and
fdiv
ja
stc
ret
jecxz
add
mov
push
cmp
inc
fisttp
repnz
(bad)
clc
xor
popf
dec
cmp
mov
pop
jae
mov
test
(bad)
das
test
neg
add
les
dec
push
in
nop
push
into
mov
cmp
popf
retf
sub
jp
xchg
test
pusha
fisttp
pop
adc
out
jl
test
cmp
rcl
mov
sub
cmp
das
adc
mov
dec
xchg
pop
dec
not
fild
mov
outs
jmp
retf
scas
cdq
jg
stc
dec
and
pop
lahf
and
mov
test
sbb
dec
add
lahf
enter
adc
push
cmp
int3
dec
cmps
bound
xlat
adc
jmp
aad
inc
loopne
out
cmpps
(bad)
loop
les
push
cdq
test
scas
adc
rcl
aad
cs
ret
call
popa
jns
out
inc
enter
pop
adc
xchg
push
cmp
sbb
cmp
xchg
nop
shl
ficom
jbe
shl
in
add
or
out
inc
fstp
dec
add
lods
imul
add
pop
data16
jmp
outs
inc
xor
aaa
arpl
loope
and
mov
xchg
dec
cmp
dec
mov
mov
les
hlt
jno
int
push
mov
pop
sbb
fsub
jle
sbb
lock
shr
fild
sub
and
pop
div
add
xchg
and
mov
adc
jae
inc
scas
dec
je
and
repnz
jno
fidiv
sub
mov
push
out
xlat
xchg
ins
or
jmp
sub
movlps
fucomp
fsubrp
xchg
and
jae
mov
daa
pusha
or
pushf
mov
les
inc
adc
in
xor
mov
add
scas
jno
pop
in
push
enter
jns
bound
test
(bad)
cmps
iret
jp
and
cwde
mov
popf
loop
dec
cld
push
mov
pop
mov
push
jmp
push
ds
mov
push
mov
popa
inc
add
xlat
jmp
frstor
or
fidivr
push
jecxz
sub
(bad)
xchg
lods
mov
push
loop
add
jecxz
aaa
sbb
out
lea
push
aad
mov
sub
xchg
clc
add
inc
mov
pop
or
mov
hlt
xchg
loop
mov
mov
(bad)
mov
rcr
and
cmp
popa
mov
stos
mov
shl
and
push
jecxz
or
test
mul
adc
cmps
dec
gs
and
mov
push
(bad)
into
ret
dec
inc
pop
sub
mov
(bad)
aam
jno
mov
fwait
pop
sub
in
retf
xlat
daa
aas
(bad)
shr
ins
mov
into
jns
jmp
mov
bound
leave
icebp
mov
dec
mov
xchg
add
pop
pop
ins
mov
mov
fdivr
in
(bad)
lea
ds
fstp
cmps
shl
cld
adc
mov
call
fucomi
push
in
xor
lock
dec
out
movs
sub
or
xor
push
add
or
ror
xor
dec
es
aad
imul
pop
cmp
mov
test
xor
jp
in
inc
movs
fidivr
pop
arpl
cmp
xor
ds
add
xchg
in
jo
in
je
(bad)
pop
pop
push
pop
push
out
lods
sub
mov
adc
dec
add
ror
test
jne
jnp
mov
add
or
cmps
cwde
enter
and
aam
das
or
push
movntps
jo
nop
push
inc
movs
pop
dec
mov
ror
fs
cmp
xlat
loope
shl
cmp
inc
out
pop
pop
mov
test
add
mov
mov
sbb
sti
fisub
ficom
jle
mov
mov
mov
adc
mov
ins
add
jmp
xor
sbb
fidiv
stos
(bad)
imul
xor
hlt
and
inc
retf
xor
jne
gs
idiv
jp
test
dec
test
cld
sbb
sub
dec
mov
stos
pusha
lahf
sub
mov
in
jo
aas
pop
aam
xor
sahf
out
push
push
and
rcl
pop
aam
mov
cmp
add
cmp
sbb
jno
adc
xlat
mov
mov
xchg
out
(bad)
jnp
jnp
imul
mov
sbb
push
inc
movs
push
lods
outs
xchg
or
mov
rol
(bad)
jp
mov
clc
pop
loope
xchg
(bad)
or
mov
pop
shr
int
out
pusha
jbe
aas
sub
xchg
jno
test
ret
aad
or
mov
(bad)
call
test
repz
ins
push
cld
ror
inc
cmps
ja
fcmovnu
imul
(bad)
adc
jl
fiadd
loope
(bad)
movs
cmp
ror
pop
sbb
in
loopne
rcr
jno
ss
cs
clc
mov
aad
or
imul
rcl
adc
mov
xchg
push
jb
xor
add
and
mov
adc
call
mov
retf
out
xchg
inc
dec
fwait
inc
pop
into
and
pop
movs
outs
imul
fidivr
out
js
jmp
or
outs
sub
ja
stos
lods
fs
ret
lea
pop
out
jl
cmp
mov
sub
mov
and
cmp
pop
ja
xorps
mov
jo
test
add
xchg
nop
nop
in
or
pop
stos
mov
mov
movs
imul
xchg
or
or
xor
push
mov
sub
clc
sahf
inc
aad
adc
sub
mov
sti
mov
ret
outs
pop
jecxz
loop
jo
push
jno
pop
icebp
or
inc
or
dec
nop
cmp
pop
add
pop
add
pop
pop
push
loop
jmp
retf
add
ja
and
mov
and
int
stos
es
ds
cmp
adc
or
data16
loope
ja
lock
jo
int
jg
pop
cmpps
mov
scas
aaa
xchg
sbb
in
ins
xchg
mov
jge
(bad)
clc
mov
mov
int
not
adc
loope
movs
jp
(bad)
jnp
mov
inc
pop
popf
sbb
popa
or
cmp
in
cmp
retf
xor
(bad)
out
(bad)
mov
mov
cdq
sub
jmp
retf
or
ja
scas
mov
shl
xchg
xchg
(bad)
enter
cli
xchg
pop
andnps
mov
dec
inc
dec
xor
mov
jecxz
adc
xchg
(bad)
sbb
dec
mov
jbe
dec
add
fld
mov
imul
mov
(bad)
scas
push
sbb
mov
(bad)
int3
sub
(bad)
je
inc
rcr
xchg
bound
lahf
gs
jmp
rcr
fcomp
aad
adc
movs
push
ins
leave
int
push
jb
mov
mov
mov
movs
sub
xchg
(bad)
ror
mov
mov
xchg
mov
loope
dec
retf
int3
add
jns
out
xchg
mov
js
jmp
dec
stos
cmp
movs
mov
jnp
inc
ret
dec
std
fimul
popa
bound
das
add
pusha
xchg
clc
es
xor
push
add
xor
pop
sti
sub
jo
in
mov
jge
jne
ss
add
and
jmp
pop
push
jge
pop
imul
mov
adc
sub
mov
or
ins
jecxz
xor
and
sbb
in
fld
arpl
xchg
and
add
fucomi
es
popa
push
shl
outs
stos
dec
or
xchg
arpl
pop
xchg
cmp
dec
(bad)
pop
(bad)
dec
mov
mov
not
std
repnz
jno
fcmovne
xchg
add
push
stos
cmp
pop
ins
xor
(bad)
xlat
cmp
loope
cmps
ror
xchg
mov
sbb
adc
push
lock
outs
pop
adc
ja
imul
enter
lahf
xchg
xor
pop
jns
hlt
inc
mov
lahf
faddp
ja
test
pop
jecxz
shl
pop
mov
iret
mov
loopne
sub
lahf
inc
sar
adc
cmps
cli
push
push
mov
arpl
xchg
(bad)
fstp
scas
jp
hlt
in
add
out
out
fs
js
pop
je
stos
dec
int
xchg
test
pop
mov
aaa
xor
mov
add
jno
sti
dec
test
ret
pop
js
scas
and
mov
jbe
mov
dec
mov
daa
out
inc
nop
jl
inc
or
leave
outs
xor
mov
je
(bad)
stc
xchg
xor
and
and
pop
mov
rcl
sar
jmp
jecxz
and
nop
dec
xchg
clc
outs
cmp
sub
rol
jle
jge
rcr
test
add
xchg
sbb
int3
pop
(bad)
call
enter
jecxz
push
pop
push
iret
mov
xchg
aam
scas
fisubr
push
das
test
xchg
pushf
add
sti
jbe
stos
aas
aad
push
movs
pop
push
mov
and
pop
push
out
inc
xchg
cmp
push
sti
xchg
mov
sub
adc
movs
mov
jmp
cmp
(bad)
aas
nop
mov
or
mov
mov
mov
dec
sub
cwde
push
repnz
xor
sbb
mov
add
pop
push
(bad)
frstor
out
pop
ins
xchg
imul
ror
dec
cmp
cli
sub
ins
jo
(bad)
jnp
lods
add
or
aas
test
loop
ss
aam
nop
or
(bad)
in
pusha
jecxz
loope
mov
sub
(bad)
cmp
xor
sub
lods
mov
lea
sub
jbe
repnz
cld
jmp
in
out
inc
xlat
fnstenv
test
not
mov
or
dec
daa
xchg
shl
xlat
test
bound
push
mov
lods
std
mov
aaa
movs
xor
call
jmp
xchg
pushf
aad
ret
shl
call
pusha
mov
(bad)
idiv
jne
mov
mov
push
fbld
mov
bound
call
enter
shl
dec
xchg
lds
mov
ret
xor
fnstsw
je
fisub
arpl
jno
mov
imul
cmp
call
sub
sub
mov
pop
mov
pop
add
push
xchg
rcl
cli
and
pop
adc
cmp
inc
push
push
in
mov
push
out
loop
test
call
loope
add
mov
pop
mov
push
imul
sti
es
mov
xchg
pusha
mov
jns
mov
push
push
fs
jb
push
test
fcom
dec
arpl
addr16
js
mov
mov
test
mov
js
fs
mov
jl
pop
mov
xor
jmp
inc
in
(bad)
push
cmc
and
pop
xor
paddq
sub
in
lods
sub
dec
pop
inc
retf
pop
add
or
ins
cmp
add
push
add
cwde
sub
pop
or
and
mov
xchg
mov
test
adc
fist
or
pop
mov
(bad)
sub
sbb
fistp
jnp
xchg
imul
mul
inc
jmp
ja
pusha
sub
mov
mov
les
mov
sbb
sahf
mov
leave
lds
imul
cdq
sub
lock
es
pop
and
lahf
sub
aam
(bad)
aas
cli
sub
shl
cmp
fsub
cwde
sub
ret
cmp
lock
mov
xor
out
fwait
adc
push
scas
or
sbb
nop
test
ins
mov
fwait
or
out
imul
pop
mov
mov
mov
xor
iret
shl
shl
ret
(bad)
and
inc
pop
cmp
pop
or
xchg
enter
sbb
mov
gs
inc
inc
push
add
mov
mov
dec
ror
and
sub
pushf
sub
dec
mov
cdq
inc
pop
adc
(bad)
aam
jnp
xor
leave
popa
popa
hlt
es
jnp
ret
sbb
aam
mov
sub
add
dec
add
(bad)
out
iret
(bad)
data16
dec
adc
in
retf
sti
fwait
or
add
mov
adc
dec
push
push
mov
mov
int
ret
mov
fisubr
rcl
dec
mov
fmul
loopne
add
mov
std
xor
repnz
in
in
stos
push
adc
or
sub
je
dec
int
xlat
fld
dec
push
mov
addr16
cmp
test
shl
cmp
loope
pushf
stos
mov
je
bnd
push
xchg
fld
loopne
mov
inc
or
and
dec
jb
pop
stc
dec
sub
push
adc
daa
push
cmp
aad
sbb
loop
out
sahf
pop
push
jmp
lahf
idiv
int
mov
add
clc
clc
or
out
push
pop
jle
inc
cld
jmp
movs
aam
lock
out
and
push
mov
and
fadd
repnz
jg
mov
mov
adc
add
mov
lods
sub
dec
jge
add
mov
std
test
imul
push
(bad)
jb
or
(bad)
xor
adc
stc
or
fimul
mov
repnz
fstp
jne
xor
stos
jnp
outs
mov
dec
in
call
test
pop
and
(bad)
ja
sahf
in
lods
lahf
xor
outs
loop
ror
sub
jne
aas
test
retf
adc
dec
mov
sub
test
lods
stos
add
hlt
adc
test
(bad)
aaa
test
outs
outs
or
sub
cmp
jno
dec
xchg
mov
cmc
mov
sbb
cmp
sub
fs
mov
inc
mov
fdiv
dec
jbe
setne
inc
mov
je
jl
gs
sar
pop
and
mov
jp
xor
sbb
xor
push
jl
xchg
aas
outs
sub
inc
pusha
jg
leave
mov
xchg
pop
mov
xchg
adc
stos
and
dec
adc
bound
inc
cmp
gs
add
push
icebp
fstp
sbb
mov
pop
push
inc
ficomp
jnp
and
cli
cmp
adc
add
push
icebp
ins
push
jl
lahf
mov
test
or
mov
arpl
xor
jle
pop
jns
outs
mov
mov
xor
daa
call
pop
push
jae
jae
aaa
mov
icebp
push
rcr
push
out
mov
jg
sub
jge
scas
inc
pop
dec
popf
and
loopne
mov
push
cmps
pusha
adc
xchg
dec
stc
jl
mov
or
ins
les
out
fwait
mov
(bad)
or
dec
or
sti
adc
add
mov
xor
cmp
loop
out
pop
in
pop
sub
sbb
jp
daa
into
inc
and
fcmovnb
test
mov
aam
les
iret
mov
lahf
retf
retf
mov
mov
hlt
aaa
enter
fldcw
push
add
mov
fdivr
mov
sbb
cmps
jb
pop
inc
xor
cmp
cmp
push
cmc
mov
mov
dec
sub
mov
dec
int3
mov
sbb
xchg
xor
push
mov
add
pop
mov
repz
jb
push
adc
imul
adc
jmp
stos
sbb
inc
dec
loope
sub
je
push
xchg
test
mov
mov
push
pushf
jmp
nop
out
add
out
clc
ror
sti
dec
xor
jmp
sub
mov
div
push
or
imul
inc
sub
push
dec
inc
jb
mov
sub
xchg
and
xchg
sbb
clc
(bad)
(bad)
vcmpsd
jmp
stos
xchg
loopne
jmp
cdq
xlat
dec
(bad)
popa
push
sbb
add
pop
ja
dec
in
cmp
mov
out
shr
(bad)
push
jbe
mov
sti
and
ja
mov
mov
pop
and
mov
retf
xchg
pop
adc
arpl
push
jmp
cmp
push
ror
fcomp
jbe
fs
call
mov
cmps
test
scas
test
jmp
jns
ret
jb
lods
and
push
mov
jg
mov
in
clc
test
add
jle
stc
loop
dec
add
inc
out
(bad)
push
inc
mov
and
add
mov
mov
ins
fdivr
add
enter
inc
dec
cwde
jo
out
out
xlat
or
jnp
scas
and
dec
bound
push
jmp
movs
in
es
xor
dec
test
jge
nop
jl
xor
outs
into
loop
or
cmp
fsub
mov
je
xchg
pop
fcmovnbe
xchg
adc
bound
jae
(bad)
pop
and
pop
pusha
mov
lods
pop
sbb
retf
pop
shl
add
mov
or
fdivp
xchg
in
mov
mov
fbstp
mov
pop
stos
sahf
dec
pop
jbe
call
mov
jns
push
sub
fdivp
js
std
pop
in
rol
stc
push
in
imul
jle
dec
adc
push
test
ss
mov
sub
repz
pop
and
inc
(bad)
retf
lods
das
push
push
sub
ret
pop
cmps
movs
in
lds
nop
mov
loop
ret
and
test
jmp
or
pextrw
inc
push
jmp
jge
xor
xchg
cmp
scas
pop
cmp
in
aad
push
xor
clc
dec
and
adc
fwait
jbe
and
xchg
xchg
add
and
and
sub
mov
fcomp
and
pop
mov
dec
add
enter
xor
(bad)
adc
jmp
push
pop
stc
stos
dec
rcr
add
cmp
xor
dec
imul
icebp
jb
push
loopne
mov
adc
jg
add
repnz
jmp
gs
fstp
push
sub
dec
cld
push
jle
cwde
sbb
cs
cli
imul
int3
stos
movs
sub
or
out
(bad)
stos
sbb
push
je
hlt
nop
rcr
mov
iret
or
mov
mov
cwde
cld
pop
ja
(bad)
rol
xchg
inc
pop
push
and
mov
fwait
test
sub
inc
pop
dec
cmp
fisttp
mov
in
lea
jnp
imul
lahf
pusha
pop
fwait
push
jae
call
push
sbb
xor
or
or
add
jmp
pop
xchg
jno
leave
(bad)
popf
sahf
push
add
sub
int3
shr
pop
sbb
jb
pop
xchg
popf
sbb
xlat
sar
popa
imul
(bad)
lock
jbe
lahf
aaa
push
fcmove
jne
jo
cmp
adc
inc
scas
(bad)
pop
or
push
gs
mov
mov
gs
in
pop
sbb
and
pop
and
xor
adc
jecxz
cdq
fisttp
add
fwait
adc
jae
repnz
aam
out
or
jle
inc
(bad)
pop
les
jg
rcr
push
or
dec
sub
xlat
xchg
push
sub
mov
adc
stc
les
sub
outs
bswap
movs
stos
js
rcr
shl
fimul
sbb
xor
stos
shl
idiv
cdq
pusha
push
mov
inc
scas
mov
cld
jle
jp
mov
xchg
ja
ja
loope
add
(bad)
sbb
mov
arpl
loop
loopne
sbb
jg
inc
pop
dec
sub
das
pop
pusha
mov
fwait
mov
imul
mov
mov
xchg
enter
outs
and
xchg
pop
jnp
clc
pop
ret
lods
jo
imul
xchg
mov
jmp
mov
jmp
or
sub
push
jbe
add
ins
mov
out
(bad)
jg
mov
dec
outs
cmp
mov
jl
test
xor
push
nop
sbb
cmps
xchg
mov
loope
pop
jg
fcom
out
adc
jne
loope
sub
jmp
adc
enter
pop
mov
mov
aad
pop
cdq
inc
shr
icebp
test
inc
or
cmp
aaa
imul
pop
retw
inc
fidiv
aaa
cmc
adc
aas
jne
cmp
sbb
dec
sar
jne
inc
or
mov
cmps
push
inc
ret
dec
xor
lds
pushf
xchg
enter
icebp
int
and
popf
sub
je
int
mov
out
push
mov
fwait
push
int
je
test
xor
rcl
pop
mov
jb
jp
shl
mov
jecxz
es
adc
push
xor
and
out
adc
or
push
scas
fsub
js
cli
das
into
daa
xchg
nop
mov
repnz
inc
pop
pop
add
call
fs
mov
out
shr
ja
pushf
scas
inc
mov
mov
sbb
dec
sub
stc
cli
xor
sbb
xchg
push
fs
jae
jno
enter
add
movs
test
jle
sbb
div
gs
imul
jg
and
shr
jo
inc
push
iret
push
stc
or
or
(bad)
fcmovne
and
mov
pushf
and
dec
add
or
ins
or
xchg
(bad)
mov
sbb
mov
jle
(bad)
addr16
sar
popa
aad
or
and
stos
or
cmp
jno
lea
xchg
push
dec
pop
push
xchg
sahf
mov
int3
aas
sbb
and
cmp
(bad)
xchg
pop
fidiv
aas
fadd
mov
sub
or
aaa
pusha
and
push
popf
loop
(bad)
(bad)
fadd
fcomp
or
rcr
leave
inc
ror
adc
mov
ins
mov
cmps
pusha
test
scas
(bad)
std
call
inc
bound
pop
sbb
sub
jno
fdiv
jl
mov
push
xchg
sub
sub
loopne
repnz
mov
into
push
sar
ret
and
iret
fdiv
std
push
pop
or
lods
inc
or
push
jne
movs
cmp
(bad)
aad
or
loopne
jns
xchg
fcom
repz
xchg
cwde
sub
test
jnp
push
cmp
out
bound
loopne
lods
call
xor
jg
sahf
cmp
and
leave
xchg
mov
mov
je
sbb
add
cmps
call
popf
jae
jno
mov
dec
clc
sbb
mov
in
mov
jne
sbb
div
int
cwde
xor
xor
mov
mov
loop
mov
in
mov
mov
sub
lea
xchg
push
retf
dec
sbb
xlat
pop
inc
add
call
int
pushf
pop
mov
cmp
xor
add
and
rcl
stos
outs
test
mov
sar
push
popa
inc
or
outs
popa
and
test
lods
mov
imul
xchg
movs
xor
add
(bad)
pop
xchg
bound
test
stos
enter
cmp
enter
mov
test
retf
inc
bnd
aas
mov
mov
xchg
push
jecxz
(bad)
aas
pop
retf
neg
jle
mov
aas
fiadd
imul
(bad)
scas
mov
add
into
push
jmp
daa
mov
jge
push
popa
out
mov
and
arpl
dec
sbb
sar
dec
fdiv
shr
retf
aam
stos
mov
mov
fldpi
xchg
imul
inc
loop
sbb
loop
hlt
sub
(bad)
out
stc
rol
mov
(bad)
in
pusha
xchg
data16
or
int
scas
repz
(bad)
fsub
mov
js
jl
xlat
dec
adc
sbb
mov
inc
retf
ins
adc
fisub
mov
mov
(bad)
mov
dec
fldenv
(bad)
cli
test
adc
mov
sbb
inc
pop
pmaxsw
fs
inc
lods
pusha
ficom
scas
int3
sub
sbb
repz
aam
add
sub
jnp
in
lds
mov
arpl
aaa
mov
xchg
adc
shl
stc
in
sub
or
cmp
ss
and
sbb
sub
inc
lock
ja
sub
push
mov
jp
into
jnp
pop
push
mov
pop
pop
test
or
dec
jp
pop
aam
xchg
nop
sbb
bound
push
push
repz
push
and
in
in
mov
fisubr
push
or
in
cmps
jp
or
inc
and
cmp
pop
mov
fst
iret
shl
inc
xchg
das
pushf
sbb
cmp
jbe
hlt
xchg
pushf
sti
dec
in
fwait
(bad)
jb
je
push
dec
or
nop
movs
sub
inc
mov
lods
mov
xor
(bad)
cld
aam
xor
out
push
push
xlat
dec
inc
sub
cmp
sbb
dec
dec
xor
mov
loop
sbb
dec
fst
and
jo
rcl
pop
out
retf
inc
call
jp
lock
imul
or
cmp
and
pop
ret
neg
jmp
xor
mov
cmp
cdq
sar
(bad)
jle
outs
mov
inc
mov
lock
in
in
and
nop
sbb
cli
jns
aaa
and
loopne
jb
dec
movs
mov
mov
mov
jne
push
mov
loopne
xor
sbb
mov
cdq
imul
mov
add
or
adc
xchg
out
mov
test
sahf
in
push
mov
movs
dec
icebp
push
sahf
inc
mov
sbb
push
out
mov
retf
xchg
rol
jecxz
cmp
rcl
mov
push
aaa
mul
das
cmc
xor
or
aas
fld
add
push
xchg
outs
fsubr
cld
cmp
dec
div
pushf
cmp
call
push
(bad)
cld
mov
aad
inc
test
dec
in
sub
shl
dec
lods
(bad)
nop
out
ret
inc
jle
xor
mov
jne
adc
out
xchg
mov
out
test
sbb
fisub
sub
scas
repz
movs
aam
push
xchg
push
ds
stos
daa
ja
mov
or
add
stos
ret
out
xor
jmp
lahf
stos
jns
jge
dec
jbe
outs
dec
fwait
add
pop
xchg
scas
rcr
mov
xchg
or
pop
repz
add
xchg
daa
push
or
mov
sbb
add
xchg
sti
mov
mov
leave
in
inc
push
xor
pop
pushf
stos
and
adc
or
push
xor
in
out
or
push
rol
sbb
cmps
sti
stc
pop
stc
xchg
shr
mov
dec
outs
dec
les
jmp
and
inc
iret
inc
test
movs
dec
cs
(bad)
in
(bad)
xchg
bound
mov
adc
sbb
add
out
icebp
(bad)
jae
pop
xchg
dec
(bad)
mov
aaa
adc
push
std
add
mov
pop
dec
mov
and
xlat
(bad)
cs
and
xchg
stc
jg
data16
inc
(bad)
or
add
gs
cmp
mov
mov
xor
pop
adc
fcomp
pop
xor
aaa
fbld
or
push
dec
(bad)
mov
add
(bad)
jb
jb
fiadd
in
cmp
jb
std
loopne
adc
adc
sub
ret
test
repz
call
cmc
adc
cmc
iret
dec
pop
mov
push
mov
cmp
push
xchg
mov
add
xchg
add
lock
pop
mov
(bad)
iret
fs
xchg
dec
popa
xchg
mov
stos
repz
push
ss
retf
or
inc
ins
push
push
ins
dec
imul
outs
cmp
mov
fldenv
popa
xchg
dec
(bad)
jmp
mov
mov
pop
add
pop
xchg
sub
ficomp
stos
add
mov
inc
xor
jle
iret
enter
pop
(bad)
mov
test
push
cld
ja
xchg
jl
mov
sub
mov
inc
call
outs
(bad)
cli
fist
pusha
popf
jae
cli
mov
xor
sti
mov
imul
jno
sbb
inc
dec
out
dec
nop
dec
inc
and
jae
cmp
and
push
mov
aas
xor
cmps
mov
cdq
mov
cld
push
retf
push
sub
jl
add
sub
sahf
std
push
push
cmp
jl
shr
push
out
add
mov
xor
mov
out
out
repnz
jl
cmps
retf
pop
adc
dec
pop
sbb
(bad)
sub
push
cmp
dec
jmp
rcl
aaa
scas
sub
int3
(bad)
ret
lea
pop
inc
sahf
fdiv
neg
pusha
aaa
xor
xor
lods
sar
fmul
push
fidivr
je
popa
mov
pop
sbb
xchg
adc
sbb
cmps
mov
or
jmp
hlt
jecxz
mov
cwde
mov
pop
or
sbb
and
jl
bound
and
jno
imul
pop
(bad)
outs
nop
pop
shl
push
int3
sub
popa
sub
pop
stos
cwde
mov
neg
idiv
adc
push
add
fadd
jg
icebp
xor
mov
data16
pushf
ins
sbb
fdivp
inc
call
pop
fldenv
popf
jg
cmp
jmp
xchg
pop
or
cmp
jg
jg
lea
loope
mov
frstor
jl
xchg
xchg
adc
pushf
xor
xchg
push
lock
xchg
pop
call
(bad)
mov
adc
in
xchg
fadd
mov
fisub
xor
mov
ja
pushf
aam
xchg
scas
jmp
xor
adc
retf
sub
jecxz
sbb
bound
ins
iret
clc
mov
jbe
push
xchg
ss
cmps
sbb
das
out
jp
jo
mov
rcr
sbb
or
mov
xor
xor
xor
movs
push
push
popa
les
popf
xchg
mov
pop
call
sbb
stos
xchg
xor
iret
xchg
int
sbb
dec
cmp
ins
push
fisubr
repz
stos
push
sbb
outs
imul
int
mov
pushf
test
push
pop
retf
or
dec
jge
mov
or
loopne
outs
inc
pop
dec
sub
enter
sub
loopne
add
mov
cs
js
nop
test
sub
nop
push
jne
repnz
xchg
adc
inc
loop
mov
(bad)
cmc
stc
pop
push
xchg
sub
dec
sbb
out
iret
push
in
aad
rcl
push
pop
pop
push
xchg
dec
xor
push
(bad)
mov
data16
mov
cmp
imul
(bad)
dec
inc
cmp
inc
mov
(bad)
int
cwde
pushf
mov
leave
add
mov
mov
or
jbe
pop
fnstenv
pusha
add
repz
fs
dec
pop
mov
pop
scas
jo
das
ss
xchg
adc
inc
ins
adc
mov
(bad)
xlat
inc
inc
push
push
jecxz
in
sbb
sbb
push
and
jg
push
sbb
cmp
in
pop
iret
and
cmp
adc
and
cmp
mov
sbb
lea
out
icebp
add
xchg
xchg
jle
xchg
(bad)
lea
ret
aas
es
cwde
dec
cmps
fcomp
das
clc
pop
jae
out
add
rol
sub
dec
fcomp
adc
fs
fild
iret
jl
int
fdivr
jp
outs
cmps
or
in
rol
loope
dec
sbb
jg
in
mov
inc
cld
lock
mov
pop
loope
mov
ins
mov
inc
mov
rcr
dec
retf
fs
or
pop
jle
stc
sub
ss
jmp
inc
(bad)
sti
cmc
sbb
xor
in
adc
in
jge
cwde
dec
leave
adc
lahf
aam
jp
fsub
into
dec
(bad)
mov
movs
ins
jns
popf
adc
test
or
mov
cmp
cs
mov
mov
adc
arpl
sahf
dec
adc
addr16
cmps
outs
loope
mov
lods
jmp
sbb
pop
fistp
mov
add
rol
mov
stos
lea
inc
(bad)
push
jne
inc
push
enter
das
dec
das
fidivr
dec
xchg
jmp
cmc
movs
sti
inc
or
cdq
mov
add
ret
fistp
ret
fptan
jnp
nop
inc
lods
in
out
dec
dec
sub
scas
mov
call
mov
sub
dec
dec
sti
(bad)
jnp
xor
ret
mov
jo
loope
out
shr
mov
or
pop
repz
adc
xor
pop
sahf
mov
ret
test
adc
into
(bad)
jmp
retf
outs
cmps
jb
mov
and
adc
mov
sbb
daa
push
mov
ret
adc
xor
jmp
mov
adc
addr16
lea
pop
(bad)
cmp
retf
xor
mov
adc
test
jmp
mov
push
cmc
rcl
or
xor
mov
mov
cmp
(bad)
cmp
and
pushf
mov
mov
jne
out
jecxz
jb
adc
arpl
pop
and
cmp
fwait
mov
mov
loope
mov
sub
push
ret
std
sub
mov
xor
xlat
adc
mov
mov
stos
mov
cmps
js
sub
fstp
push
or
push
cli
fs
pop
(bad)
xor
cld
inc
retf
sub
or
add
movs
cmps
pop
xor
inc
cwde
icebp
in
inc
sar
out
call
jae
push
jnp
test
inc
ins
adc
scas
add
sbb
(bad)
ins
xchg
loope
aaa
jg
sahf
add
jp
xlat
add
pop
fwait
add
(bad)
test
inc
in
xor
cdq
push
sub
sbb
mov
mov
cdq
or
jns
and
jns
int
rol
adc
ja
cli
pop
cmp
pop
push
or
push
(bad)
repz
bound
gs
pop
fstp
(bad)
outs
js
js
lock
jae
or
das
cmp
dec
dec
cmp
mov
stos
loop
fldenv
pop
adc
les
call
in
pop
pop
test
into
sbb
mul
rcr
jb
and
int
test
sub
lods
aas
cmp
xor
int
clc
mov
popa
jnp
xchg
out
lds
push
shr
into
popf
dec
ins
ror
ret
setnp
ins
dec
pop
push
and
outs
aas
rol
fwait
dec
sbb
scas
and
cmp
lods
push
inc
jbe
mov
adc
jg
rcl
inc
ret
xor
fldenv
pop
sbb
daa
cmp
fmul
jne
cmp
out
nop
shl
jle
push
addr16
inc
mov
call
adc
out
aas
lds
loope
dec
imul
enter
lds
mov
in
xchg
leave
cmp
ja
fadd
or
jmp
jne
ret
les
out
out
pop
retf
fisubr
js
or
(bad)
xor
outs
ffree
call
mov
lds
xchg
mov
out
sbb
test
aad
loop
fcmovbe
bsf
mov
popa
hlt
fsubr
xor
pushf
sbb
xchg
pop
mov
jle
mov
out
out
pop
mov
dec
in
cmps
pop
mov
cmp
jmp
inc
fcom
or
out
add
jo
jl
xchg
sar
ficom
fwait
adc
jb
in
jg
aad
ds
dec
frstor
fist
iret
mov
call
inc
out
cmps
mov
cld
mov
fcom
push
mov
inc
arpl
inc
fistp
inc
mov
dec
push
lds
jmp
cmp
dec
shr
sub
mov
mov
dec
cmp
mov
bound
inc
and
imul
aas
in
jo
jmp
arpl
in
fnstenv
sti
bound
sub
and
mov
pop
or
daa
jo
dec
sbb
jnp
pusha
mov
lock
out
mov
arpl
fadd
call
aas
mov
fdivr
jge
test
jno
push
stos
dec
sub
lds
push
mov
push
dec
and
popf
ja
loop
jae
push
push
jg
mov
in
loopne
ins
mov
sub
loop
pop
test
daa
jb
lods
int
jno
mov
fstp
mov
lds
clc
mov
or
mov
loop
sub
adc
add
loop
add
and
xor
repz
dec
pop
and
adc
jmp
and
stos
fimul
xor
mov
test
bound
xor
mov
sub
hlt
push
cdq
lds
movs
or
rcr
loopne
pop
das
push
ficom
(bad)
or
pop
inc
inc
dec
inc
xchg
push
push
xchg
mov
repnz
jl
in
jne
and
out
and
inc
sub
out
cmp
add
mov
(bad)
stc
into
stc
daa
mov
adc
push
xor
and
ret
repz
repnz
cmp
push
pop
or
dec
mul
popf
mov
lods
pop
out
or
(bad)
mov
lds
sub
xor
loope
cwde
ret
dec
nop
(bad)
cmp
xchg
sbb
daa
scas
cmp
jo
jae
jmp
arpl
pusha
adc
push
(bad)
data16
pusha
daa
mov
movs
rcl
xor
scas
mov
fldenv
mov
lds
cli
push
call
xor
out
dec
xor
adc
sub
nop
mov
inc
iret
xor
shr
add
out
nop
pmulhuw
xchg
lods
in
xor
ds
mov
mov
imul
mov
pop
test
sub
and
lods
ror
and
push
out
jne
push
push
or
(bad)
adc
push
or
mov
pop
jmp
xchg
pop
(bad)
retf
mov
test
(bad)
sahf
pop
jno
xor
inc
clc
je
inc
icebp
or
popa
xchg
(bad)
daa
pop
adc
jns
adc
jns
retf
mov
dec
ins
test
cmp
mov
fs
(bad)
push
in
loopne
sub
(bad)
enter
test
repz
and
push
mov
cli
fisub
imul
je
ins
icebp
movs
fwait
jnp
xchg
xchg
push
fld
and
call
fisttp
arpl
pop
pop
(bad)
xchg
retf
jp
shl
sar
cld
inc
bound
cmc
in
lods
call
into
inc
sahf
pushf
push
dec
movs
mov
and
pop
push
adc
lahf
cdq
dec
mov
aad
inc
cmp
mov
aaa
xlat
add
lea
push
sub
in
fwait
mov
jge
pop
shl
iret
loope
jge
mov
xor
addr16
shr
push
call
stc
push
fs
mov
call
sub
mov
xchg
xor
out
shl
outs
push
dec
cmps
popa
imul
mov
mov
push
popa
sahf
std
cdq
cmp
adc
xor
or
(bad)
pop
jo
ret
xor
sbb
shl
loop
pop
call
mov
jecxz
adc
cmc
xor
cmps
pop
ret
mov
ror
push
in
ins
mov
push
fild
mov
mov
mov
pop
xchg
repz
jmp
dec
xor
or
xchg
das
cmps
pop
pop
out
dec
fild
fwait
leave
imul
sbb
jns
jbe
mov
in
imul
rol
retf
jl
sub
push
pop
bound
pop
sbb
test
mov
xchg
and
(bad)
xlat
inc
xor
jmp
ficom
frstor
gs
jecxz
movs
stc
sub
bound
push
inc
push
arpl
xchg
xor
cmp
cmp
adc
(bad)
xor
xor
jle
shl
dec
pop
xchg
inc
cmp
nop
cmp
dec
hlt
ret
mov
sub
mov
inc
bound
fnstsw
xor
pop
add
into
outs
and
sbb
and
(bad)
add
fimul
add
pop
mov
out
or
stos
push
adc
push
in
cmp
dec
mov
sub
or
test
adc
mov
lods
dec
movs
or
loopne
out
inc
or
and
and
add
fs
in
pop
adc
cwde
les
mov
scas
add
addr16
scas
iret
xor
fs
ins
out
adc
xchg
out
push
sar
leave
pop
fadd
jne
ins
pop
mov
test
mov
out
(bad)
out
iret
jae
xor
cmp
bound
or
cld
rcl
movs
xchg
jnp
ja
test
mov
cmp
xchg
xchg
in
and
adc
retf
les
data16
jmp
fwait
aad
(bad)
xchg
mov
mov
push
inc
ja
dec
iret
xchg
rcr
pop
jle
outs
es
or
fidivr
popf
(bad)
adc
jae
push
mov
pop
pusha
mov
inc
call
pop
test
sub
icebp
fs
out
mov
repz
hlt
pop
push
adc
cmp
cmp
mov
test
mov
fucomi
ins
or
pop
mov
dec
jne
int
sub
and
xchg
daa
(bad)
(bad)
xchg
rcl
icebp
cmp
call
mov
retf
mov
jg
jmp
fcom
test
xchg
pop
dec
loop
jne
lods
push
inc
pop
popf
pop
fdivr
gs
pop
add
cli
dec
repnz
adc
xchg
cmc
sbb
push
pop
xlat
jmp
adc
sub
div
jne
fnsave
mov
cdq
loopne
push
jnp
sbb
pushf
vpcmpgtd
cwde
add
mov
or
jno
push
xor
or
fnstsw
cmp
cmp
int3
rcr
mov
sbb
fild
jbe
inc
fdiv
xchg
add
adc
push
lds
xchg
xabort
sahf
ds
adc
xor
xchg
jo
mov
or
ret
test
and
mov
dec
dec
sahf
arpl
sbb
or
or
aam
inc
(bad)
jmp
scas
pop
ret
mov
outs
test
cmps
pop
arpl
pop
fcom
mov
dec
adc
test
jne
inc
loope
out
adc
push
ds
lods
mov
arpl
int
hlt
pop
push
sbb
sti
push
mov
movs
xchg
mov
sbb
and
mov
xor
add
jbe
lods
adc
ret
(bad)
(bad)
std
and
cmp
arpl
into
add
and
or
(bad)
mov
je
daa
jle
add
xchg
sub
xor
popf
stc
out
rcl
movs
dec
xchg
je
xchg
jno
mov
fwait
dec
xor
mov
aas
and
and
or
loopne
push
js
or
enter
cld
add
xchg
nop
test
sbb
and
mov
shl
mov
aad
pop
pop
mov
pusha
push
cmps
fcmovne
push
cmp
pop
or
ss
loopne
mov
inc
int3
push
mov
fpatan
je
and
cli
ret
pushf
mov
(bad)
cmp
fdivr
lea
fldenv
loop
adc
pusha
dec
out
ja
inc
jno
dec
cmp
inc
push
cmp
and
dec
inc
cs
(bad)
jmp
clc
jns
pop
cmps
sub
xchg
daa
mov
je
das
sub
mov
cdq
mov
test
push
push
iret
shr
icebp
adc
push
sub
add
mul
cmps
sub
xlat
daa
pop
and
mov
iret
xor
jmp
dec
outs
fcom
pop
popa
pop
jmp
out
cmp
sbb
xchg
test
xchg
stc
fld
adc
mov
clc
inc
sbb
jp
pop
mov
loope
xor
push
sbb
or
stos
xor
mov
and
push
popa
fwait
scas
jb
ret
dec
xor
mov
jl
scas
push
in
retf
cmp
push
into
out
sbb
jnp
popf
aaa
stos
fidiv
pusha
dec
rol
dec
push
jno
push
stos
les
adc
outs
frstor
in
sahf
stc
xor
lods
scas
dec
xchg
rcr
jae
sub
cmp
mov
jle
lahf
es
lock
push
dec
test
cmp
sub
leave
or
stc
das
scas
mov
int
out
inc
rcl
cmp
mov
sbb
mov
and
inc
add
adc
push
fwait
(bad)
mov
xchg
movs
ins
(bad)
pop
test
xchg
dec
push
mov
sbb
jg
mov
cmp
push
fnstcw
pop
mov
mov
jge
pop
in
fidiv
repz
dec
pop
pop
jno
pop
pop
mov
cmc
cld
sub
sbb
scas
or
mov
or
fcom
pop
pop
shr
inc
mov
ja
inc
loopne
cli
daa
fsub
idiv
pusha
mov
jne
push
jecxz
in
repnz
sub
and
or
and
xchg
bound
fdivr
sbb
cmp
shl
ret
jmp
cmp
dec
mov
jmp
dec
push
adc
outs
pusha
popa
inc
or
adc
and
cmps
sub
inc
inc
jbe
iret
adc
mov
ins
mov
pop
dec
ss
out
mov
aad
in
fwait
aad
sbb
dec
inc
retf
iret
lock
jmp
push
xlat
neg
fcmovnb
push
mov
fsub
or
pop
jnp
test
les
rcl
push
jno
mov
sar
cmp
add
lock
xor
jecxz
arpl
inc
popf
iret
mov
mov
xor
xchg
retf
popa
and
sbb
inc
repz
js
lods
mov
xlat
pushf
jo
or
and
push
ins
imul
cmp
jge
and
repz
mov
adc
sbb
mov
imul
fnstsw
(bad)
xchg
inc
mov
mov
jge
stc
ins
call
icebp
and
fdivr
cmp
or
(bad)
xchg
cmps
push
lock
lds
jmp
fdiv
dec
fisubr
cs
stc
mov
sti
jb
adc
xchg
inc
xlat
in
inc
jmp
mov
mov
cmp
xchg
ja
jmp
pop
xchg
dec
pop
pop
loopne
lds
or
sti
unpckhps
popf
mov
ffree
popa
int
cmps
xchg
int
cmps
repz
movs
into
push
fisttp
lea
sub
mov
gs
data16
push
outs
nop
retf
cdq
jnp
add
jo
not
inc
mov
dec
mov
ret
mov
sti
mov
xlat
sbb
cli
clc
icebp
sahf
(bad)
adc
adc
adc
loopne
outs
and
and
push
xchg
loope
adc
call
nop
and
pop
mov
inc
cmps
pop
pop
fcom
fwait
adc
imul
or
ret
mov
and
ds
ds
outs
sub
in
dec
out
movs
scas
push
ss
sahf
mov
mov
out
adc
stc
int
add
mov
dec
xchg
ret
out
adc
call
sub
or
retf
imul
stos
xchg
sub
xor
mov
es
cs
ret
pop
or
ror
mov
repz
scas
mov
sub
mov
inc
mov
push
cs
mov
pop
sar
sub
daa
cld
data16
adc
mov
jae
popa
popa
pop
movs
or
shl
xchg
adc
dec
out
add
jne
mov
push
loop
mov
rcr
mov
inc
fadd
(bad)
cmp
add
or
cwde
sub
xchg
ficomp
adc
cmp
mov
(bad)
push
sbb
jmp
add
pop
call
pop
shr
xchg
test
lahf
add
jae
lds
cli
ret
lods
sar
lds
data16
adc
jnp
test
and
pop
adc
mov
xchg
add
inc
outs
outs
outs
rcl
jmp
inc
mov
outs
fwait
in
inc
mov
jb
out
push
test
adc
out
sbb
aas
imul
fidivr
mov
add
movs
mov
sub
stc
cmps
retf
and
ret
add
(bad)
xlat
push
cmp
or
lds
push
mov
aad
test
mov
pop
jbe
(bad)
repz
dec
dec
dec
(bad)
mov
dec
mov
or
add
dec
or
xor
ror
int3
(bad)
fnstcw
stc
shl
push
ret
add
dec
rep
adc
mov
lods
sub
hlt
lea
cld
int
add
cdq
pop
pop
jl
push
adc
stc
(bad)
loope
and
xchg
(bad)
hlt
scas
xor
fcmovu
sbb
aas
pop
push
sub
lock
push
sub
adc
or
(bad)
lahf
add
stos
inc
mov
inc
out
ficom
push
jle
lahf
shl
cmp
sti
push
sbb
cmp
stc
xor
jmp
mov
sar
test
leave
icebp
mov
inc
cmps
mov
jecxz
or
sbb
push
sub
ss
out
sbb
gs
jl
add
clc
fdivr
or
icebp
push
retfw
fstp
pop
xor
ds
fisub
xor
loop
das
dec
push
loopne
adc
xchg
pop
push
(bad)
int3
icebp
retf
test
mov
in
adc
push
and
es
or
je
ret
sub
mov
and
popf
js
fld
lea
fcomi
push
shl
xchg
mov
mov
aaa
push
daa
aas
push
jne
add
adc
ror
mov
jmp
or
pushf
pop
pop
into
sub
mov
xor
push
add
adc
push
int3
fbstp
pop
and
push
fcomp
jae
mov
loope
adc
test
sbb
xor
test
imul
push
dec
sub
dec
sub
pop
or
mov
ds
pop
jns
in
adc
dec
cmp
xlat
push
pop
jo
add
push
mov
cmc
xchg
fstp
ror
pop
sub
nop
dec
pop
jns
mov
fs
(bad)
mov
shl
jl
cmp
and
test
mov
mov
dec
sbb
mov
loopne
les
inc
mov
mov
shl
sbb
in
add
jmp
mov
inc
sub
push
adc
jle
das
and
outs
lock
or
clc
movs
adc
pushf
das
xchg
mov
sub
mov
neg
je
not
(bad)
pop
xchg
call
add
jb
out
int3
aam
sbb
mov
push
jns
inc
movs
pop
shl
dec
sbb
test
retf
jmp
mov
and
sub
rol
adc
arpl
add
dec
cwde
sub
scas
cmp
ins
dec
mov
pop
or
arpl
and
in
adc
ins
in
cmps
cmc
sbb
or
pop
push
push
repnz
mov
sub
int3
mov
aas
out
lock
xor
lods
xchg
or
and
cmp
sbb
cmps
adc
imul
addr16
mov
push
dec
add
mov
pop
jns
shl
out
pop
loop
xchg
and
push
jle
inc
jg
(bad)
test
cld
push
std
xchg
mov
pop
scas
jb
shld
lahf
mov
pop
fist
sbb
xor
outs
xchg
iret
push
and
mov
push
dec
out
cld
and
mov
mov
bound
mov
ins
xchg
push
push
push
or
stos
cwde
pop
cmp
shl
enter
xor
mov
xor
push
icebp
xor
pop
rcr
xchg
xor
cmp
loope
pop
pop
pop
jmp
sub
or
add
stc
div
add
div
test
push
test
cmp
fisubr
sbb
ins
out
inc
pop
sbb
data16
cmc
imul
(bad)
push
sbb
push
in
add
add
adc
lock
ins
jmp
inc
ins
or
pop
sti
push
cmp
cmp
adc
add
test
pushf
mov
movs
inc
or
mov
scas
pop
xchg
pop
fild
inc
outs
mov
fcmovnb
jae
int
int
xlat
lahf
jg
cmps
adc
push
outs
nop
test
mov
inc
outs
icebp
sub
popa
mov
add
hlt
out
dec
imul
jbe
pushf
mov
jo
sbb
inc
pop
jecxz
xor
push
int
sbb
das
adc
loope
jmp
push
xchg
xchg
push
int3
pop
sbb
ret
out
adc
dec
adc
ja
jle
and
xor
cmps
push
(bad)
mov
adc
or
jmp
das
pop
jmp
fsubr
cmps
test
dec
mov
and
and
ret
sub
inc
jae
jbe
repnz
icebp
and
mov
mov
arpl
push
stos
jge
add
push
jmp
cmps
pop
aas
jnp
in
xor
test
mov
mov
xchg
ret
jnp
dec
adc
lods
sub
repz
sub
inc
xor
mov
shl
cmp
scas
mov
or
shl
xchg
push
(bad)
mov
cmp
mov
dec
cmp
jo
cld
les
icebp
ins
mov
xchg
shr
cmp
je
(bad)
lods
mov
jne
add
sub
xchg
in
add
mov
xchg
nop
arpl
adc
repz
push
mov
push
xchg
neg
sti
inc
shl
out
out
sub
xor
push
pop
mov
mov
add
inc
sbb
add
hlt
ret
dec
sti
jmp
fild
xor
out
call
push
cmp
pop
es
jge
popf
mov
mov
push
xchg
push
mov
hlt
fistp
enter
and
call
pop
inc
cld
leave
mov
sbb
dec
mov
sahf
mov
movs
cmc
cmp
sbb
mov
adc
mov
fist
pop
(bad)
retf
inc
dec
add
jno
push
mov
jge
lods
aad
sub
adc
cmc
mov
mov
adc
mov
lds
cmp
push
movs
inc
xor
(bad)
mov
test
inc
daa
sub
mov
jp
inc
out
ror
jmp
enter
shr
sub
inc
popw
and
test
imul
jg
mov
lods
mov
out
mov
inc
mov
dec
cld
lods
lds
aaa
jae
(bad)
in
sbb
popf
enter
std
sbb
pop
cld
dec
lds
daa
inc
stc
xor
inc
pushf
call
rcl
sbb
xor
mov
out
imul
adc
lods
jno
jmp
ins
and
cmp
sbb
fdiv
jne
shr
or
cmp
out
(bad)
and
or
sti
lock
(bad)
cld
cmp
add
out
dec
dec
mov
sbb
daa
jmp
mov
and
add
inc
pop
mov
pop
ret
rcl
mov
push
mul
sar
mov
bnd
gs
mov
into
call
cmp
rcl
push
jmp
lods
add
hlt
js
call
retf
add
shl
jno
pusha
mov
mov
dec
out
cwde
adc
movs
sar
jg
pop
pop
cli
retf
mov
dec
ror
scas
mov
repnz
pop
inc
cmp
outs
loope
pushf
es
push
shl
push
arpl
test
sbb
xor
mov
push
cwde
pop
popa
jge
jl
out
push
fmul
pop
icebp
jge
add
xor
push
add
enter
jecxz
jb
ret
lock
adc
cmps
push
xchg
sbb
mov
sub
aaa
test
mov
pop
jmp
jp
retf
xchg
mov
es
mov
inc
xchg
ja
mov
dec
cmp
mov
sbb
mov
fbstp
dec
mov
adc
pop
push
ret
iret
outs
mov
pop
add
out
sbb
std
mov
dec
jbe
pop
cmp
xchg
stos
fmul
imul
dec
pop
add
or
pop
push
pusha
aam
imul
jmp
dec
mov
stos
push
jae
xor
mov
repz
loope
(bad)
cld
or
shl
add
push
je
dec
jb
test
outs
mov
inc
push
adc
xchg
pop
jl
pop
retf
scas
adc
sub
mov
mov
dec
out
into
cmps
jb
inc
bound
mov
jp
fcmovu
repnz
sbb
inc
or
fwait
ret
retf
add
sub
pop
outs
xchg
repnz
out
iret
pop
add
cmp
pop
sbb
fstp
mov
data16
add
or
loope
push
shl
fs
loopne
jp
pusha
out
xchg
mov
sub
inc
jge
loopne
dec
ins
mov
xor
or
xchg
push
fisub
pop
sbb
mov
xchg
push
jae
adc
cmps
outs
jo
push
iret
repz
push
nop
mov
xchg
xor
pop
shl
sub
mov
mov
jmp
inc
(bad)
cmp
dec
test
fwait
or
cmp
mov
lds
xor
jle
or
popa
mov
cmp
pop
mov
inc
adc
fidiv
mov
mov
das
pushf
std
retf
add
repnz
jmp
jb
pop
or
mov
ja
xor
cdq
cli
rep
loopne
test
jl
iret
out
cmp
pop
(bad)
ins
addr16
cmp
jmp
pop
sub
pop
or
test
outs
jg
leave
mov
outs
leave
mov
stc
mov
adc
das
adc
ins
in
out
sbb
xchg
call
sbb
inc
jl
cli
stc
sbb
or
(bad)
pop
stos
lods
inc
or
dec
xchg
mov
pop
mov
rol
in
add
mov
mov
pop
mov
idiv
pop
ja
adc
xchg
pop
or
nop
adc
pop
push
adc
ja
mov
(bad)
loope
(bad)
in
inc
stos
scas
sbb
pop
jge
dec
pop
pop
xchg
or
(bad)
(bad)
pusha
cwde
leave
and
mov
mov
cwde
test
or
stos
pushf
adc
call
jg
test
imul
call
jmp
jnp
shl
dec
and
jne
xor
mov
ins
repnz
or
and
inc
(bad)
jp
xor
(bad)
mov
push
sbb
clc
pop
mov
imul
or
xchg
repnz
cmc
idiv
jge
xchg
loopne
adc
aas
js
dec
mov
idiv
dec
sub
ja
xlat
inc
fst
cmp
xchg
sbb
les
loop
loop
mov
inc
mov
add
movs
out
repz
jae
xor
mov
and
aas
fiadd
cmp
cmp
or
mov
adc
imul
inc
or
mov
jge
iret
sub
inc
test
mov
cmp
jno
add
call
pop
push
aam
daa
jne
call
push
xchg
pop
inc
bound
jo
mov
sub
mov
jmp
sbb
lea
mov
cwde
cmp
lods
stos
mov
add
xor
dec
xor
(bad)
arpl
and
stos
(bad)
jbe
xor
shl
jl
enter
in
(bad)
jnp
mov
stc
bnd
inc
jbe
jmp
jbe
cmp
jecxz
icebp
outs
and
repz
push
cmp
adc
mov
ins
into
ja
adc
push
shl
adc
add
iret
mov
or
out
ror
jg
xchg
mov
popa
cmp
inc
jmp
inc
stos
aaa
movs
es
jmp
daa
outs
xchg
push
lock
jmp
icebp
mov
jb
setge
mov
adc
fwait
inc
outs
test
(bad)
popf
ror
and
pusha
and
mov
ins
xchg
sub
pop
fstp
cmps
repnz
and
mov
xchg
shr
into
out
mov
stos
pop
bound
hlt
and
inc
in
cmp
jne
or
cmp
retf
hlt
in
jmp
dec
repz
test
xchg
adc
jb
push
not
push
jmp
cdq
pop
pop
push
or
gs
imul
and
jle
jecxz
inc
ffreep
icebp
adc
add
outs
cli
call
push
add
push
add
sbb
in
popa
pusha
mov
and
jge
and
or
sbb
dec
and
jecxz
mov
xchg
(bad)
dec
scas
push
xor
lods
add
fistp
mov
dec
mov
jmp
push
loopne
pop
sub
xchg
xor
repz
adc
pop
mov
rcr
sub
xor
push
popa
push
nop
lock
pop
cmp
cmp
cmps
fbstp
mov
stos
jno
push
mov
xor
fdiv
rol
or
inc
pop
idiv
push
fwait
stos
not
dec
into
sar
xchg
rcl
(bad)
cmp
jne
pop
repz
ins
cmp
mov
xchg
mov
xchg
inc
shl
push
add
xor
aaa
les
push
les
mov
and
push
fiadd
outs
mov
dec
pop
(bad)
mov
xor
and
and
outs
or
xchg
imul
int
mov
loop
movs
pusha
sub
inc
jge
loop
repnz
add
adc
test
push
push
loopne
mov
inc
(bad)
ret
xchg
jb
dec
(bad)
imul
fs
je
xchg
(bad)
out
lea
adc
(bad)
cli
sub
xor
push
jb
dec
(bad)
jge
ins
sub
mov
ret
shl
mov
cdq
arpl
inc
inc
jl
cmp
mov
mul
fsub
sti
in
mov
aaa
xor
pop
data16
push
in
inc
mov
dec
jle
sub
adc
js
push
pop
stc
dec
mov
int
cmp
lea
rcr
mov
rcl
adc
rol
xchg
adc
add
(bad)
pop
bnd
mov
(bad)
fdivr
or
jo
mov
ror
call
das
fwait
adc
cmc
scas
fs
(bad)
mov
sbb
cmp
sbb
call
test
outs
test
(bad)
bound
mov
mov
lods
mov
inc
out
dec
pop
aas
cmps
cs
mov
jle
out
cli
ins
dec
push
imul
outs
call
loop
pop
sub
mov
or
pop
or
cmc
adc
jnp
jl
push
sub
imul
mov
mov
and
mov
pop
in
ret
sbb
pop
cmp
stos
pop
jmp
inc
or
add
rol
mov
mov
repz
in
and
sbb
ret
cmc
or
mov
xlat
hlt
cli
pop
add
popa
fild
cmp
mov
jecxz
loopne
lahf
test
out
inc
inc
push
mov
out
push
into
mov
cwde
sbb
out
fsub
push
xchg
lahf
xchg
(bad)
ins
loope
add
mov
cli
cmc
out
in
call
imul
sub
pop
into
xchg
cmp
repnz
xor
adc
leave
add
sub
lods
xchg
push
out
add
or
jmp
inc
push
xchg
lds
ins
cmp
ja
pop
arpl
sub
sbb
ficom
xchg
push
cli
push
sahf
mov
and
aaa
call
loope
and
iret
dec
das
mov
push
pop
icebp
xor
and
jae
pop
repnz
lock
std
ja
jne
adc
out
out
cdq
aad
test
nop
push
and
xlat
out
cmp
mov
jl
cwde
(bad)
out
mov
int
push
sub
cmc
icebp
xlat
sub
sub
test
pop
sbb
in
or
rcl
cmp
ficomp
lar
and
cmp
inc
cmps
call
xor
pop
mov
adc
xor
jno
je
push
add
dec
bound
xor
jbe
cmp
loop
mov
mov
xchg
add
mov
or
or
ret
pop
inc
jae
or
cmp
jp
pop
sub
mov
(bad)
cmp
push
pushf
cmp
dec
fmul
das
fwait
jg
mov
jno
mov
or
cmp
(bad)
ja
dec
mov
dec
pop
dec
shr
pop
out
rcl
dec
jp
cs
cmc
cmc
pop
loop
sbb
mov
ss
aad
mov
lods
and
scas
arpl
mov
inc
cmp
xchg
cmps
pop
push
mov
(bad)
aaa
outs
mov
sub
nop
add
xchg
pop
imul
add
mov
pop
dec
mov
inc
cmps
neg
and
or
scas
sbb
jmp
int3
loop
push
test
pop
out
aam
push
mov
and
xor
adc
movs
jmp
lahf
test
xchg
(bad)
jmp
xchg
ins
in
inc
outs
cmp
xchg
jecxz
icebp
fdivr
pushf
jns
sti
pusha
pop
mov
ss
jge
dec
loope
mov
data16
fld
push
add
sti
das
mov
add
jne
addr16
dec
outs
fwait
cmp
sub
dec
pop
mov
mov
loope
pop
in
cmp
mov
xchg
jb
imul
daa
fnstenv
add
int3
pop
mov
je
xchg
inc
dec
clc
addr16
nop
aam
in
ret
es
mov
add
sbb
cmc
fstp
or
test
bound
mov
pushf
adc
push
ret
ja
add
adc
sub
and
aas
adc
jno
mov
mov
pop
xchg
and
jnp
(bad)
jns
loop
(bad)
mov
mov
pusha
pop
popa
repnz
loope
push
addr16
dec
pop
mov
and
xchg
xchg
xchg
pop
shl
cmp
or
mov
mov
mov
stos
adc
xor
jmp
int3
ficomp
or
data16
push
mov
push
lods
jb
pop
pcmpgtw
fstp
mov
fcmovb
std
clc
icebp
and
cdq
lods
xor
repnz
ss
jl
add
xchg
sahf
xchg
cmp
out
fucomi
cmp
popa
add
fstp
adc
mov
data16
cmp
jb
and
pop
enter
mov
mov
push
mov
adc
mov
xchg
lods
jmp
sub
inc
mov
ficom
cmp
ret
int3
(bad)
mov
adc
jmp
mov
in
arpl
movs
scas
loope
movs
adc
retf
mov
push
arpl
es
ins
xlat
dec
mov
xor
or
pop
in
mov
add
pop
scas
push
adc
pop
sti
retf
je
pop
ss
pop
push
leave
rcl
inc
sti
mov
xchg
inc
mov
mov
xchg
iret
inc
out
push
adc
pop
bound
xchg
retf
and
mov
sub
call
cmp
inc
xchg
loope
lods
into
cli
data16
dec
xchg
mov
pop
push
stos
add
(bad)
js
cmp
cmp
pop
add
sbb
mov
cmps
clc
lds
fcmovnb
mov
sbb
and
push
jns
cmp
xor
pcmpeqw
arpl
pop
out
and
gs
cmps
jmp
or
rcl
jmp
push
dec
mov
mov
jmp
pop
mov
aaa
push
pop
mov
sub
std
pop
jnp
mov
sub
xor
adc
jmp
xor
not
out
aam
cs
sbb
jns
out
movs
add
lahf
arpl
(bad)
mov
stos
jbe
(bad)
add
jmp
adc
push
mov
test
inc
into
fsubr
xchg
into
cmp
xor
pop
and
mov
dec
(bad)
jns
imul
ret
icebp
xor
xchg
jae
fcmovnb
and
pop
jns
or
push
fdiv
mov
pop
pop
cdq
push
adc
fwait
add
ja
inc
push
test
loopne
femms
call
(bad)
sar
adc
dec
stos
xchg
inc
repz
fdivr
xor
repz
nop
cmp
je
loopne
mov
adc
jp
inc
fwait
push
cmp
or
mov
mov
jge
mov
pop
push
sbb
jg
(bad)
sbb
inc
push
(bad)
std
sub
loope
pop
mov
mov
mov
in
mov
inc
jne
icebp
in
xchg
dec
cs
iret
fwait
mov
mov
loop
push
cmp
loopne
outs
mov
sbb
and
add
mov
daa
mov
hlt
je
cmp
nop
ffreep
jg
dec
jae
adc
mov
test
(bad)
stc
or
div
fsub
std
popf
adc
pop
ja
sub
shl
fmul
xchg
mov
sbb
retf
mov
xor
jnp
and
inc
ds
js
push
lock
mov
mov
(bad)
mov
or
and
xchg
repnz
xor
cmp
inc
xchg
cs
add
jnp
stos
jb
push
push
or
cs
std
dec
gs
(bad)
test
lock
sub
dec
dec
xor
push
ins
push
aad
fsub
arpl
pop
sbb
or
xchg
call
jns
retf
dec
(bad)
xchg
in
ins
sub
in
jb
jge
mov
inc
int3
(bad)
pop
adc
lods
mov
and
push
xor
adc
(bad)
mov
fs
daa
mov
jle
mov
pop
into
bound
pop
and
sbb
sbb
jmp
push
pushf
and
xchg
adc
pushf
dec
pop
mov
sub
mov
and
jg
mov
cmpxchg
mov
jl
(bad)
repnz
movs
mov
icebp
(bad)
rcl
cmp
dec
int
xchg
inc
loopne
pop
jmp
or
and
push
aas
dec
std
mov
jle
mov
dec
cmps
or
scas
cmp
adc
and
(bad)
jns
lds
into
fbstp
xchg
jg
aas
in
(bad)
fstp
stc
mov
mov
test
not
sbb
aad
not
pop
mov
xchg
inc
(bad)
mov
imul
mov
in
jbe
retf
and
adc
mov
push
jecxz
mov
les
fdivr
mov
stos
pop
stos
int3
fidiv
push
xor
push
cli
pop
ins
fs
push
xchg
sbb
addr16
jmp
mov
xlat
jae
pusha
stos
cmp
call
retf
and
cmp
sbb
ficomp
int3
std
lods
dec
pop
push
fistp
and
sbb
ror
fs
imul
dec
jg
push
in
inc
jo
mov
add
enterw
cmp
dec
in
aad
hlt
add
mov
mov
inc
push
jae
(bad)
or
mov
push
test
in
pop
xor
rol
mov
jmp
nop
push
nop
dec
add
xchg
sahf
call
pop
mov
nop
sbb
(bad)
xor
test
js
shl
(bad)
out
or
mov
dec
jnp
popf
jle
add
lods
fwait
sub
pop
jle
dec
or
aam
inc
mov
jg
fidiv
xor
and
call
sbb
xor
cmp
and
xchg
ret
icebp
scas
jmp
test
ins
mov
enter
jmp
xor
ja
fwait
push
sbb
add
mov
cmps
or
mov
popf
dec
in
jg
repz
test
ret
adc
jo
pop
(bad)
cli
mov
inc
pop
add
sub
inc
mov
pop
cmp
fsub
mov
pushf
out
scas
outs
push
out
cmp
adc
jge
adc
xchg
pusha
cmp
out
sahf
sbb
mov
cvttps2pi
pop
xchg
ret
(bad)
cld
out
or
dec
ret
add
fwait
stos
lods
jmp
bound
dec
cli
loopne
out
mov
push
adc
mov
out
imul
jmp
mov
in
push
cwde
loop
in
mov
call
mov
aad
popf
inc
les
add
pop
inc
push
pop
or
add
sbb
mov
mov
jnp
lea
push
pop
jb
xchg
movs
adc
sbb
mov
(bad)
mov
mul
inc
add
sbb
or
inc
leave
mov
mov
call
inc
inc
sar
(bad)
xlat
mov
push
and
icebp
call
mov
cmps
stos
mov
sub
scas
push
add
inc
repz
push
movs
xor
test
push
cwde
xor
sbb
shl
inc
and
in
cmp
jb
mov
gs
xchg
or
std
add
pop
arpl
mov
dec
push
inc
aaa
mov
cmps
push
mov
inc
push
cmp
rcr
jecxz
mov
out
jl
sub
loop
pop
xor
and
pop
or
mov
inc
or
or
jmp
pop
mov
nop
stos
aam
inc
scas
pop
out
rcl
les
or
or
xlat
add
mov
adc
pop
sub
mov
mov
adc
lahf
clc
mov
or
arpl
sar
rcl
ror
jnp
mov
std
cmp
nop
in
ss
push
pop
pop
adc
dec
jp
sub
stc
enter
cmp
sbb
movs
jmp
cmps
sbb
adc
test
sub
mov
xchg
ss
and
mov
ds
push
cmp
pop
sub
jmp
jns
fistp
js
aaa
retf
test
not
push
pop
test
sbb
adc
mov
xor
cld
jp
lahf
or
pand
cmp
or
outs
aas
push
push
mov
ret
push
pop
dec
adc
test
add
xor
call
mov
sub
mov
rcl
shl
retf
les
leave
jae
int
xchg
cdq
pop
dec
fstp
sbb
retf
xor
fistp
and
out
xor
sub
push
enter
je
inc
jg
ret
clc
xor
icebp
jp
and
xor
cmc
inc
outs
jae
es
imul
xor
stc
es
cmps
arpl
cdq
sbb
adc
push
lea
clc
xor
jle
mov
xchg
xchg
inc
or
mov
in
push
cmps
in
inc
cs
dec
lea
cwde
and
cli
int
rcr
pop
dec
out
lds
or
es
scas
sbb
cmp
sbb
(bad)
loopne
sbb
xor
call
js
mov
add
mov
jg
mov
mov
xor
pop
imul
mov
in
cmps
dec
fwait
xchg
loope
mov
(bad)
jno
cs
xchg
and
ins
dec
rol
dec
dec
and
stc
in
in
gs
cld
repz
cwde
ret
outs
inc
pop
dec
ds
and
and
fidivr
in
scas
push
sub
sbb
and
mov
ret
sbb
mov
mov
xor
fdiv
cmp
loopne
out
cmp
jge
xor
mov
shl
jl
ret
mov
les
call
xchg
mov
test
dec
gs
mov
mov
sub
pop
jne
test
ret
push
mov
fbstp
gs
out
es
cmp
hlt
repnz
dec
mov
fwait
or
sbb
loope
call
push
sbb
xor
xor
sub
jmp
fbld
xlat
mov
in
cs
push
in
in
pop
pop
inc
mov
loopne
inc
mov
jl
(bad)
leave
pop
rol
jb
push
loopne
imul
sub
xor
or
lods
inc
cld
sub
int3
push
ror
lea
pop
xchg
push
lods
and
fdivp
and
sub
outs
add
cmp
shl
cdq
imul
outs
aas
mov
jo
lock
test
aas
push
arpl
push
daa
inc
xchg
rol
out
push
sub
call
cli
xlat
cmc
mov
cmp
mov
out
adc
sbb
pop
jl
fs
sti
add
add
in
int
jle
pop
jnp
mov
pop
fsub
xchg
mov
mov
mov
cmp
movs
in
lea
inc
movs
pop
lahf
nop
cs
jmp
push
xor
xchg
sub
mov
sbb
xchg
stos
test
pop
cmps
fwait
xchg
popf
or
ror
mov
fisttp
xchg
mov
ror
pop
loopne
out
sub
and
lods
add
xor
gs
jmp
inc
adc
retf
ss
icebp
and
jo
xchg
sbb
xchg
push
(bad)
addr16
or
sahf
mov
mov
iret
add
lea
or
out
ja
out
or
(bad)
aam
pop
repz
test
ret
dec
pusha
addr16
jge
mov
sbb
lods
xchg
push
hlt
sub
clc
into
xor
inc
and
push
or
or
loopne
lock
cmps
ins
test
xchg
test
xlat
sbb
mov
or
in
lea
dec
sbb
push
outs
out
and
add
movs
iret
fcomp
adc
xor
inc
sub
cdq
dec
movs
in
scas
and
sbb
and
repnz
push
imul
add
xchg
add
or
js
dec
cmp
into
pop
cmp
cs
fdivr
mov
xchg
jecxz
repnz
mov
mov
dec
push
aaa
pop
aas
out
xchg
retf
imul
pusha
or
leave
and
mov
mov
cmc
scas
imul
cmp
xor
adc
ret
loop
mul
daa
xchg
and
test
out
ins
fadd
or
dec
xchg
push
jl
int
add
cmp
jo
cmc
pop
sti
adc
lods
mov
or
daa
pop
out
loopne
jmp
add
cmp
jbe
and
xchg
push
je
inc
(bad)
ins
and
mov
push
lods
scas
cmp
arpl
aaa
out
mov
movs
dec
mov
mov
jl
mov
pop
xchg
ins
cli
iret
xchg
jae
(bad)
out
and
xchg
xor
push
and
or
ins
in
xor
iret
pushw
and
icebp
jno
icebp
imul
cdq
jb
bound
push
(bad)
cmps
adc
dec
xchg
loope
jb
pop
stos
or
jl
icebp
pop
mov
es
push
cmps
xchg
pop
xchg
mov
push
sar
retf
mov
int
pop
pop
adc
push
icebp
or
push
ds
mov
test
scas
mov
mov
aaa
stos
in
(bad)
aad
jne
jmp
inc
mov
retf
jecxz
mov
sub
dec
js
lahf
in
mov
fs
call
lods
sub
arpl
sysexit
mov
cld
and
xor
mov
xchg
ja
imul
jge
xchg
mov
xchg
adc
add
sbb
mov
xor
pop
pop
pop
clc
cmp
sti
sahf
stc
mov
cdq
popa
ror
mov
xlat
jmp
lock
data16
mov
arpl
arpl
in
mov
mov
cmp
jnp
pop
sbb
daa
sub
cmps
or
retf
mov
int3
div
pop
movs
cmps
test
stc
test
pop
lods
les
inc
aas
add
into
add
(bad)
cmps
xor
sub
cmp
mov
icebp
test
leave
and
mov
dec
das
cmps
add
nop
push
(bad)
jno
mov
add
pop
sub
push
fbld
fwait
gs
inc
addr16
mov
scas
lds
stc
xchg
aam
fs
inc
jecxz
xchg
mov
cs
mov
and
jecxz
or
call
jmp
fidivr
push
jmp
cmps
int3
dec
loopne
in
lea
pop
sti
mov
in
pusha
push
stc
push
shl
je
cmp
jb
mov
mov
mov
cmps
arpl
aaa
cmp
out
sbb
sahf
adc
mov
jbe
mov
in
xchg
xor
add
xor
sar
call
out
popf
retf
cmp
sbb
(bad)
hlt
jmp
mov
or
leave
ja
cli
aas
lods
popf
test
adc
inc
(bad)
fbstp
jp
push
pop
push
into
pop
stc
push
push
sbb
je
cld
je
jecxz
retf
and
stos
nop
jge
dec
pop
in
aam
add
enter
(bad)
rcl
fisttp
lea
inc
inc
test
in
mov
daa
adc
cld
pusha
cmp
aam
jns
cmps
imul
dec
xchg
retf
sub
or
test
lds
mov
outs
test
mov
pop
repz
jb
pop
punpckldq
fst
jno
cwde
out
pushf
add
cmp
mov
(bad)
jbe
push
in
les
lock
and
scas
outs
inc
mov
adc
mov
add
sbb
or
or
scas
cwde
icebp
or
xchg
or
jmp
inc
inc
jo
push
jne
push
xlat
data16
in
dec
mov
pop
xchg
fs
sbb
lods
(bad)
iret
addr16
pop
mov
jo
sbb
mov
repnz
xor
push
and
(bad)
fbstp
nop
xor
enter
(bad)
xchg
xchg
pop
aam
int3
retf
loopne
rol
dec
push
cmc
shl
cmp
hlt
in
lahf
movs
pop
(bad)
gs
dec
push
retf
scas
test
mov
icebp
mov
cmps
in
jg
add
fwait
xor
pop
cwde
push
mov
sbb
inc
je
jge
outs
in
(bad)
mov
aad
cmp
outs
add
jno
xchg
rcl
stos
test
cwde
gs
rcr
dec
mov
repnz
ds
call
enter
imul
jmp
adc
loopne
adc
out
ds
data16
js
xchg
mov
mov
push
inc
(bad)
js
out
xchg
js
into
dec
pop
fldcw
(bad)
pusha
in
jmp
jle
push
sbb
push
not
push
push
sbb
jae
out
push
iret
lods
jg
jbe
mov
ins
mov
test
in
mov
and
out
nop
scas
inc
frstor
mov
cmp
add
mov
dec
adc
fnstsw
out
jns
cmp
ret
push
push
and
xchg
push
pavgw
loop
sub
dec
ds
jae
xor
sub
jbe
test
jecxz
add
mov
mov
outs
leave
sahf
fisubr
pop
movs
call
leave
xlat
pop
fisub
xchg
pop
cmovne
sbb
inc
mov
sub
fcom
in
(bad)
mov
mov
ja
cli
inc
enter
jp
(bad)
rol
mov
dec
aas
in
hlt
fsub
out
push
pop
xor
retf
sbb
daa
xchg
arpl
mov
xchg
test
stos
sub
ins
data16
scas
movs
(bad)
ja
mov
sbb
jnp
call
movs
xlat
fidivr
je
leave
fbstp
xlat
(bad)
aad
cmp
push
jb
mov
sub
cmps
inc
mov
inc
pop
shr
jbe
or
addr16
mov
ja
pop
int3
call
xor
or
retf
add
jl
daa
adc
jmp
pop
push
std
and
push
and
fsubr
lods
inc
cmp
stos
ds
les
leave
adc
ins
jle
jp
pop
and
test
repz
les
and
push
hlt
out
out
icebp
movs
cmps
hlt
cmp
push
sub
jno
push
pop
xor
pop
repz
ret
dec
ret
push
xlat
xchg
dec
jne
adc
jae
pop
dec
movs
fisubr
outs
jg
mov
dec
into
mov
jmp
adc
ret
(bad)
int
adc
movs
lea
jecxz
out
test
iret
ja
(bad)
ficom
push
stc
dec
xor
sar
sbb
sub
fisttp
mov
push
(bad)
mov
mov
stc
xchg
pop
mov
loop
nop
jbe
stos
cmps
add
aad
and
les
or
idiv
aam
idiv
retf
push
movs
sub
adc
mov
test
sub
sar
out
jmp
inc
mov
dec
mov
call
sahf
pop
ins
and
repnz
xor
or
xchg
cmp
mov
ret
pop
les
mov
in
dec
les
in
sub
outs
popf
test
inc
fmul
dec
fimul
jge
shl
int
test
out
jbe
sbb
retf
mov
mov
fstp
or
movs
xor
and
leave
add
test
cmc
or
sbb
inc
add
adc
xor
hlt
sbb
mov
stos
push
inc
ret
imul
cdq
fsub
mov
daa
push
xlat
unpcklps
jecxz
repz
inc
xchg
xchg
push
jns
sbb
inc
cmc
cdq
jnp
es
add
jo
iret
fiadd
fs
aad
(bad)
shl
js
(bad)
jnp
aam
pop
and
inc
jo
cmps
sbb
push
mov
jl
jl
inc
dec
inc
lea
test
cmp
sub
es
das
and
into
and
gs
(bad)
mov
stc
dec
pop
arpl
es
and
sub
dec
adc
aad
scas
push
mov
cmc
(bad)
cmp
jle
xor
push
(bad)
clc
or
jns
sub
or
mov
ja
push
call
mov
mov
lds
inc
repz
mov
mov
sbb
std
and
push
rol
dec
push
xchg
aam
cmp
push
xchg
mov
not
mov
mov
sub
ja
xchg
ja
and
sbb
aas
call
push
lea
repz
stos
push
inc
jge
mov
sti
mov
sti
sahf
sbb
jl
and
lock
jl
cmps
inc
sub
pop
xor
adc
test
mov
push
dec
mov
in
aam
pop
imul
mov
push
outs
into
mov
pop
outs
imul
xchg
xchg
pop
stos
xlat
in
(bad)
jno
or
push
xchg
shr
int
mov
mul
or
and
xor
inc
pop
nop
fsub
outs
test
out
ins
test
test
mov
xchg
call
push
aaa
or
test
pop
jbe
xchg
jmp
mov
fdiv
int
push
mov
js
jns
ja
leave
aad
pushf
(bad)
mov
or
iret
cmp
push
movs
add
stos
das
jno
cmp
inc
pop
inc
adc
fiadd
test
and
xchg
xchg
loop
scas
icebp
jae
cs
sbb
xchg
fisubr
xchg
push
jnp
push
add
xchg
mov
fstp
ins
mov
stc
mov
mov
aam
int
test
cld
mov
inc
dec
retf
hlt
sbb
and
(bad)
div
push
movs
movs
inc
popa
cwde
lock
mov
aas
(bad)
outs
push
mov
push
mov
stc
in
ds
jns
ror
cs
sbb
sub
data16
push
fwait
or
mov
loopne
jne
stos
pop
je
jecxz
xor
push
fisub
jmp
or
pusha
int3
jns
aad
sub
stc
xchg
dec
shr
in
mov
xchg
mov
mov
pop
pop
int3
add
jae
xchg
xchg
add
mov
int3
add
inc
inc
and
inc
mov
pop
(bad)
fidiv
xor
leave
inc
lods
cmc
enter
pop
outs
xchg
mov
sbb
sub
and
dec
(bad)
jns
test
pop
int
es
data16
push
push
scas
mov
out
fbstp
ds
cmc
jecxz
add
cmp
xor
rcl
ins
es
fsubr
bswap
push
aam
or
mov
xor
ja
dec
retf
xchg
mov
adc
push
std
stos
fcomp
jmp
call
imul
jp
cmc
push
and
add
sbb
aaa
hlt
daa
inc
movs
adc
stos
lahf
cmp
dec
sub
sbb
push
popf
push
or
xor
pop
jl
mov
or
jp
mov
stos
aam
sti
daa
lea
out
out
and
pop
jbe
adc
mov
cld
out
jbe
int
jo
ja
cmps
pop
fldcw
aas
mov
push
jae
sbb
pop
cmp
jmp
lods
pop
lods
xchg
les
xor
dec
push
xor
xchg
call
sbb
cmp
sbb
mov
xor
pop
mov
(bad)
lods
and
add
cmp
ins
enter
or
add
out
aaa
mov
jbe
cmps
or
or
dec
push
(bad)
jl
clc
xor
cmp
push
pop
pop
jb
xchg
sub
movs
add
ins
cmp
std
xor
fiadd
add
out
sub
pop
sbb
cmp
lds
xchg
aas
dec
xchg
arpl
fidiv
call
or
sub
es
add
jmp
in
pop
scas
lock
daa
pop
xchg
imul
jns
clc
inc
dec
les
cmp
out
mov
pop
cli
mov
inc
mov
push
pop
fisttp
sub
stos
xlat
lods
or
outs
addr16
cmp
push
xchg
adc
mov
mov
add
mov
push
sar
xchg
cmp
jne
inc
mov
pushf
push
mov
add
icebp
inc
mov
arpl
mov
stos
loopne
sub
jne
dec
cmps
add
mov
aam
loopne
lods
mov
sahf
xchg
shl
sub
pop
push
inc
ss
les
mov
movs
pop
outs
push
frstor
adc
push
adc
js
inc
jno
mov
xor
bound
enter
sub
(bad)
lock
scas
(bad)
adc
js
fld
mov
sub
fs
cmpxchg
push
pop
test
push
add
jae
fsubr
clc
ja
mov
cs
adc
push
(bad)
jmp
in
adc
mov
xchg
dec
iret
repz
(bad)
cmp
mov
jae
movs
cld
mov
dec
out
mov
jecxz
dec
shl
sbb
adc
scas
cli
push
jl
jmp
sub
jge
out
cmps
test
inc
mov
dec
jno
jae
adc
outs
xchg
mov
inc
mov
xchg
mov
movs
cld
lea
jp
fcmovb
xlat
cs
shl
mov
and
sbb
jmp
mov
sbb
jns
jno
hlt
dec
push
sahf
xchg
adc
icebp
add
sbb
rcr
jmp
push
test
dec
add
adc
js
clc
xchg
and
or
jns
mov
jno
stos
ficomp
jno
shl
and
movs
mov
call
js
sti
xchg
(bad)
mov
inc
out
(bad)
(bad)
dec
gs
mov
mov
or
cmps
mov
mov
mov
pusha
mov
pop
xor
int3
stc
pop
inc
cmc
push
fsubr
cli
xchg
add
popf
hlt
lea
pop
and
xlat
mov
mov
sbb
or
inc
rol
inc
ret
push
dec
add
jnp
mov
sub
aad
test
int3
push
jmp
inc
out
imul
les
add
cmc
xchg
mov
jle
aam
je
inc
add
shr
xchg
mov
adc
xor
aaa
fadd
(bad)
scas
jne
mov
xchg
in
in
(bad)
ja
cmc
cld
fnstcw
inc
cmps
stos
xchg
mov
fistp
(bad)
rcl
sub
sbb
inc
int3
js
std
fild
shl
mov
mov
(bad)
aaa
out
int
sub
mov
xor
inc
loop
sti
xchg
sti
jg
sub
iret
jnp
xchg
scas
mov
int3
pop
ror
repnz
mov
inc
cmps
mov
sbb
xchg
pop
cdq
lods
mov
and
es
fmul
stos
pop
lods
inc
cmp
call
xor
cdq
cmp
add
xor
movs
and
sub
test
inc
push
outs
out
js
div
lds
scas
sar
rcl
ss
icebp
jl
loope
in
cmc
sahf
scas
pop
sub
jno
mov
mov
mov
in
xor
test
push
imul
das
jmp
xchg
xchg
push
jne
mov
fild
cmp
or
jg
or
adc
mov
dec
pop
or
push
inc
popf
mov
lahf
inc
jl
mov
imul
or
sub
shrd
and
stos
inc
fwait
add
jno
mov
in
cmp
jne
jb
jl
popf
das
outs
data16
fld
push
cmp
dec
pop
add
and
popf
mov
loop
das
inc
in
lods
data16
xlat
sub
bound
leave
daa
pop
sbb
int3
loop
sub
xor
fstp
fimul
outs
xor
dec
and
mov
and
adc
xchg
outs
(bad)
push
push
cmp
pop
inc
sbb
sub
cs
mov
icebp
ficomp
dec
sbb
xchg
jge
push
pop
ret
or
xchg
ja
mov
push
clc
mov
retf
or
jne
sbb
xchg
sbb
adc
add
mov
lahf
or
retf
fisubr
jp
bound
push
(bad)
neg
mov
sbb
sbb
cmp
or
sbb
out
or
sbb
and
xchg
lock
mov
xchg
loop
jg
pushf
sub
test
callw
(bad)
cwde
mov
iret
pop
ins
aam
mov
and
fwait
icebp
mov
push
dec
inc
xchg
mov
fimul
mov
test
iret
out
cli
ins
dec
xor
js
pop
pop
dec
mov
xor
scas
inc
sbb
jae
inc
ss
pop
mov
out
xchg
sbb
std
mov
scas
mov
mov
repz
adc
adc
dec
ds
adc
mov
daa
not
stos
xchg
fist
add
shl
mov
out
rcr
inc
nop
sbb
xchg
add
lds
jmp
mov
stos
dec
pop
dec
sub
pop
call
ins
mov
mov
ret
add
sub
xchg
sub
cmps
(bad)
dec
dec
mov
mov
inc
inc
or
cmc
xchg
lods
or
stc
mov
push
mov
lea
ret
mov
ret
(bad)
test
call
popf
adc
movs
cdq
fstp
xchg
iret
ins
push
adc
test
add
pushf
sbb
xor
add
sub
ror
mov
lea
mov
ficom
cmp
enter
sbb
dec
pop
dec
mov
outs
cmp
fwait
mov
and
js
push
jl
in
dec
std
sbb
sub
sbb
repz
in
daa
fist
mov
mov
inc
mov
xchg
retf
mov
mov
imul
push
add
or
jb
sbb
push
sub
mov
inc
ret
hlt
mov
adc
shl
pop
fwait
xor
push
stc
mov
arpl
in
inc
jecxz
rol
scas
(bad)
enter
add
je
cmp
sub
pop
push
daa
inc
dec
cmp
jle
(bad)
cmp
int3
adc
mov
cld
xchg
pop
jmp
ss
loope
add
jecxz
push
mov
addr16
cmc
repz
addr16
cs
mov
sub
retf
mov
sub
dec
jne
jp
fs
jbe
or
xchg
mov
push
mov
sbb
sti
push
or
jmp
fsub
aaa
test
es
inc
jne
rcl
or
shl
pushf
push
cmp
ss
icebp
jns
and
sti
xchg
in
cmp
dec
addr16
loope
data16
int3
mov
test
cmc
sub
in
pop
leave
fucomi
addr16
int
sbb
pop
je
xor
pop
inc
jnp
lods
xor
pop
mov
or
sbb
xchg
jge
aad
xor
inc
dec
iret
xor
bound
inc
add
xchg
retf
jmp
scas
cld
out
das
retf
inc
pop
cmps
or
fst
xor
lock
sbb
xor
in
xchg
daa
popa
popa
(bad)
shl
jecxz
fldpi
pop
fisub
add
mov
mov
dec
push
adc
test
out
fistp
sub
int
popa
retf
and
icebp
cmp
in
mov
pusha
in
pop
scas
dec
or
cli
fst
outs
je
shr
loop
and
xor
jge
cs
sub
neg
dec
shr
fdiv
add
push
mov
or
dec
aam
mov
sub
imul
fmulp
add
mov
add
aad
pop
jne
mov
mov
pop
and
int
sub
mov
push
push
adc
pop
push
mov
jmp
mov
data16
das
js
jnp
xchg
imul
in
ret
xchg
xor
pop
inc
lds
sub
jae
call
inc
imul
jb
leave
(bad)
jl
dec
mov
or
adc
cmp
sbb
sti
(bad)
xchg
shl
push
jmp
jl
inc
adc
cmps
inc
fwait
mov
push
jge
dec
fs
ret
cwde
mov
aaa
or
dec
push
xchg
fwait
xchg
jmp
xlat
cs
push
fcom
ss
mov
adc
cwde
out
aas
adc
jecxz
push
dec
mov
in
ror
mov
in
cmps
(bad)
sti
dec
daa
cmp
add
pop
or
jge
rsm
push
push
je
sub
cld
mov
jmp
mov
jo
xchg
adc
sub
push
pushf
mov
xchg
fs
lds
push
mov
ds
mov
pop
xchg
jns
test
dec
daa
xchg
repz
out
ficomp
lds
lods
mov
jl
pop
pop
mov
inc
dec
jg
cmp
mov
or
push
push
add
imul
sti
mov
and
les
dec
jbe
adc
fistp
or
fnsave
push
imul
sbb
and
inc
arpl
fstp
hlt
xchg
rol
xor
adc
mov
hlt
or
xchg
call
ins
in
push
in
adc
popa
adc
int3
xor
jmp
in
std
adc
cdq
test
push
call
mov
lds
dec
pushf
mov
jae
xor
leave
outs
adc
movs
sub
jmp
sbb
outs
add
std
pop
scas
push
push
aaa
xlat
retf
pop
jno
pop
test
xor
sbb
cmp
rol
outs
sub
out
rcl
add
push
xchg
pusha
cmp
inc
ret
and
xchg
aad
fwait
mul
mov
mov
cld
xchg
jp
loop
sbb
mov
js
jnp
fld
scas
aad
jns
jbe
mov
jo
cmp
pushf
cmp
adc
stos
push
sbb
add
movs
aaa
cmp
outs
adc
je
push
repz
(bad)
(bad)
push
pop
mov
and
mov
cld
pop
retf
and
hlt
dec
div
jmp
inc
shl
dec
sub
outs
sbb
cwde
xrelease
in
retf
or
in
mov
mov
fwait
jae
lods
mov
leave
add
push
sahf
mov
jns
inc
inc
adc
mov
fidiv
mov
mov
ret
push
arpl
ss
push
adc
xor
add
aad
cmps
ds
adc
call
cmps
int3
dec
adc
mov
mov
pop
jge
int3
or
mov
mov
pushf
mov
rcr
add
in
xor
mov
scas
aad
fisub
and
inc
lods
push
push
repnz
sbb
std
add
fidiv
pop
pop
imul
fisubr
adc
push
aaa
cmp
jnp
stos
sub
ss
sub
inc
adc
inc
jle
jb
pop
aam
imul
push
sub
(bad)
stos
fadd
mov
adc
cli
clc
aaa
in
sti
ja
xchg
xchg
bound
xchg
jbe
pop
or
push
mov
push
sub
out
sbb
mov
cdq
cmp
(bad)
adc
mov
out
(bad)
push
arpl
mov
and
lahf
sub
push
pop
(bad)
push
or
repz
pop
mov
xor
sub
fs
int3
nop
or
adc
les
fld
add
movs
outs
dec
mov
sub
les
push
hlt
xchg
retf
adc
adc
or
outs
mov
repnz
call
arpl
stos
lods
out
adc
pop
or
sbb
leave
scas
xor
cmp
ror
sbb
or
and
out
mov
lods
xor
scas
outs
cmp
shr
packsswb
cmc
mov
pop
and
gs
add
nop
in
cmp
adc
ret
retf
out
das
jl
out
int3
dec
or
js
(bad)
xchg
pop
adc
das
xor
pushf
cmc
mov
add
loope
cmc
test
mov
aaa
mov
mov
and
sbb
scas
xchg
dec
jb
pop
jmp
or
pushf
ja
add
inc
xchg
jle
loope
cmp
cmp
sbb
sbb
dec
sbb
jmp
scas
not
jo
daa
jg
dec
dec
jmp
dec
retf
fst
out
mov
pop
rcr
loop
call
fwait
stos
xor
inc
je
es
pop
sub
xor
outs
enter
out
clc
mov
(bad)
or
in
cdq
sub
sahf
xor
push
mov
inc
lock
mov
mov
push
repz
in
cmps
sbb
fwait
in
rcl
sbb
inc
adc
loope
dec
(bad)
mov
mov
cmp
lods
in
xchg
sub
sub
mov
mov
test
mov
enter
mov
sbb
inc
jnp
mov
iret
fmul
loopne
mov
inc
imul
xchg
sahf
out
and
out
imul
inc
sub
pop
jnp
shl
xor
test
xchg
pusha
or
mov
push
xor
ins
dec
mov
inc
inc
mov
or
mov
ficom
mov
sub
aas
sti
mov
lea
pop
lds
mov
clc
jecxz
pop
rcl
sbb
sbb
frstor
push
lds
cmp
mov
xor
ins
bnd
scas
lahf
jge
(bad)
pusha
test
mov
mov
out
mov
inc
push
push
xor
mov
movs
test
or
clc
jp
inc
push
movs
pop
cmps
jg
push
pop
mov
adc
sbb
mov
sahf
and
cmp
int
cmp
or
add
or
mov
xchg
cmp
lods
adc
xchg
addr16
and
dec
xchg
adc
dec
pushf
mov
inc
pusha
cld
shl
push
xor
mov
rcr
ja
stos
js
mov
push
mov
int3
xchg
xor
repz
icebp
inc
call
gs
dec
mov
idiv
mov
bndldx
xor
sbb
cmp
xchg
in
mov
adc
ficom
xchg
sbb
pop
mov
repnz
pop
push
cli
(bad)
out
in
ror
jne
stc
dec
push
push
es
push
fwait
push
cmc
cli
or
push
jmp
add
xchg
in
dec
mov
add
sub
xor
sar
sub
cmp
mov
sub
mov
mov
mov
(bad)
popf
pop
dec
iret
or
mov
imul
dec
stos
call
mov
aam
or
pop
cwde
jae
sti
lods
jl
inc
mov
cmc
in
(bad)
xchg
adc
dec
inc
dec
jbe
aas
mov
aas
xchg
push
xchg
addr16
loopne
push
jmp
push
inc
mov
(bad)
ror
mov
lea
pop
xchg
push
ret
xchg
adc
jle
mov
ror
aam
rcl
sbb
jecxz
jge
sub
in
stos
add
mov
dec
test
and
pop
sub
push
aad
and
jae
es
push
sti
addr16
daa
stc
xchg
jo
aad
push
scas
std
xchg
mov
in
adc
std
add
and
xchg
lea
jmp
test
mov
(bad)
xchg
fdivp
popf
lods
jmp
xchg
push
ja
rcr
cld
test
pushf
sbb
stc
lock
mov
test
int
retf
movs
(bad)
loopne
(bad)
call
ror
test
fmul
pop
rcl
inc
xchg
inc
fldenv
mov
and
jle
xor
(bad)
sahf
push
mov
jno
outs
fwait
jne
mov
xchg
loope
jo
lea
enter
cli
jo
imul
sbb
test
mov
fnstenv
sub
mov
in
xchg
fsub
inc
jecxz
push
in
(bad)
out
ror
call
inc
pop
inc
call
add
sub
dec
call
arpl
dec
in
rol
clc
nop
(bad)
retf
loope
mov
inc
xor
imul
push
mov
fild
or
pop
jb
lock
lods
push
push
cli
stos
sub
and
sbb
add
push
jmp
xor
aad
and
aaa
and
and
xor
mov
mov
in
lds
mov
ret
addr16
adc
(bad)
push
jne
fst
stos
inc
(bad)
jae
pop
arpl
xchg
dec
lock
mov
adc
rcr
shr
dec
mov
ja
fisubr
nop
pop
div
in
adc
call
mov
daa
dec
cmps
pop
and
outs
add
jmp
dec
pop
and
test
sahf
push
test
ins
and
out
cdq
sbb
popf
clc
sub
push
imul
jnp
mov
push
sbb
cmc
rcr
jns
fisttp
push
dec
push
inc
in
ror
sbb
mov
push
and
sub
pop
add
pusha
push
(bad)
das
jg
retf
loop
xchg
push
jnp
jg
cmp
or
pop
add
push
jo
and
ins
call
xor
cmps
xchg
push
fiadd
cmp
or
inc
add
out
dec
add
inc
xchg
fs
movs
add
ins
or
xor
out
push
cmps
mov
pusha
push
je
loopne
lock
jns
xlat
mov
xor
sbb
xor
call
jmp
adc
cmp
(bad)
ss
aad
js
pop
stos
or
ins
repnz
xor
add
sbb
mov
imul
jne
mov
test
cld
inc
daa
pop
stos
pop
pop
add
into
mov
loope
push
int
ins
lods
test
sbb
and
mov
mov
cmc
outs
aas
adc
xchg
and
imul
out
pop
icebp
out
add
cmc
std
nop
jne
mov
or
call
mov
sbb
int3
hlt
cmp
fs
mov
rol
xchg
dec
adc
test
cmps
mov
cdq
sbb
dec
stos
out
shl
in
add
cmp
lea
mov
mov
mov
pop
ins
xor
pusha
retf
inc
pusha
xchg
and
mov
adc
movs
enter
data16
shl
mov
(bad)
and
jae
and
mov
lds
pop
arpl
fwait
int
mov
ret
mov
mov
pop
adc
add
xchg
adc
stos
loope
lods
cmp
mov
jae
nop
or
jle
(bad)
pop
xor
mov
cmps
add
jmp
jmp
lea
test
shld
push
add
xor
fisttp
mov
push
xor
ds
or
test
add
lea
mov
and
popa
push
xor
sub
loope
loop
clc
inc
mov
rcl
fwait
and
cmps
jmp
vpminsd
jmp
xchg
mov
mov
sbb
inc
cmps
cmp
popf
loop
mov
sub
dec
jae
cmc
mov
into
pop
sub
stos
popa
xchg
test
lods
out
mov
jmp
enter
js
push
test
and
(bad)
fs
add
jg
sub
mov
pushf
mov
sbb
sub
xchg
add
test
push
aaa
mov
or
dec
lds
xor
push
push
mov
dec
outs
cmp
sub
mov
iret
fucomp
push
aam
fmul
ins
(bad)
cmp
mov
or
sub
mov
inc
adc
out
mov
mov
cwde
(bad)
out
jns
jg
fidivr
enter
shl
dec
scas
mov
ins
mov
jno
test
mov
mov
pushf
jne
stos
mov
cmc
popf
mov
mov
aad
push
icebp
push
outs
push
outs
pop
retf
adc
pop
pop
and
pop
sbb
sbb
jecxz
rcl
dec
(bad)
lods
ret
xchg
sbb
jno
or
push
scas
sbb
cmp
icebp
mov
push
jle
test
dec
into
mov
jecxz
xchg
arpl
hlt
cmps
pop
dec
mov
aam
cmp
jbe
sub
sti
dec
int3
rol
dec
fisttp
mov
in
pop
or
and
mov
mov
sti
mov
test
jmp
or
jge
and
adc
test
mov
mov
test
rol
mov
sub
jg
mov
enter
cdq
or
popa
ins
pushf
xchg
(bad)
test
cmp
ins
lods
jo
add
sub
cwde
mov
mov
retf
adc
mov
imul
sub
lds
pop
xor
test
sub
adc
jnp
mov
test
push
jl
mov
sub
inc
xchg
xchg
call
aad
js
inc
and
or
outs
jmp
sub
icebp
dec
adc
loopne
mov
mov
mov
ja
jle
int3
les
mov
in
or
dec
imul
push
and
out
mov
and
xor
popf
bound
add
push
mov
int3
xchg
and
nop
sbb
push
pop
mov
test
sbb
and
test
and
pop
icebp
(bad)
dec
xchg
js
loop
aad
pop
shl
stc
dec
jbe
(bad)
xor
mov
fcomp
lods
je
push
and
cli
test
xchg
sub
(bad)
pop
push
pop
fs
cli
(bad)
pop
cmps
and
inc
out
xor
inc
pusha
pop
sub
mov
cld
mov
push
sub
call
add
add
fiadd
dec
xlat
push
pushf
das
cwde
stos
js
mov
(bad)
js
ror
push
xor
cld
cwde
loope
(bad)
bound
popf
aam
in
adc
ins
dec
or
xor
push
push
cmp
jae
setl
xchg
scas
xor
cmps
or
(bad)
cmp
mov
(bad)
cmp
push
inc
cmp
test
into
sbb
sbb
repnz
outs
stos
jo
jl
xor
xlat
mov
mov
das
les
push
push
aas
pop
xor
fbstp
das
sub
and
imul
sbb
mov
loope
cmp
inc
loop
jo
pop
(bad)
and
call
jg
dec
fucomip
inc
ja
mov
xchg
in
push
scas
test
enter
lahf
out
jo
jg
hlt
shl
popa
popf
(bad)
mov
sub
fidiv
inc
mov
xor
push
dec
jmp
inc
xor
push
(bad)
and
push
xchg
pop
lea
and
shl
in
mov
mov
mov
pop
sar
jmp
mov
add
dec
out
loop
jns
cmps
mov
pop
out
inc
(bad)
xor
adc
mov
mov
lahf
xlat
sar
lea
dec
sti
les
adc
out
mov
nop
test
(bad)
sbb
test
pop
mov
pop
and
mov
ins
cmp
fcom
jno
mov
adc
xor
ror
std
jo
xchg
std
dec
pusha
stc
cmps
xor
das
push
rcr
movs
(bad)
cmp
jmp
dec
pop
dec
cwde
in
lahf
ins
aas
pop
push
(bad)
loop
inc
xchg
lds
cmp
and
in
mov
push
das
adc
jb
push
retf
pop
push
ret
xchg
fistp
and
or
fcmovbe
push
xchg
(bad)
and
lods
xchg
sbb
push
mov
push
mov
xchg
push
inc
clc
or
adc
or
push
mov
retf
mov
mov
into
lods
int3
sbb
cmps
icebp
xchg
dec
pop
push
sub
mov
nop
out
pusha
pushf
push
dec
cmp
mov
cmp
fst
ja
fsubr
sub
mov
xor
jmp
es
mov
icebp
add
in
jl
xor
cmps
bound
iret
outs
rcl
sti
out
xor
xchg
(bad)
dec
inc
xchg
mov
or
sub
gs
test
cmc
(bad)
and
xchg
xchg
movs
sahf
push
jmp
ficomp
dec
jmp
jle
lods
fs
xor
(bad)
sbb
push
pop
scas
and
and
add
or
gs
mov
xor
aam
mov
push
stos
xor
les
dec
movs
xchg
fmul
jno
scas
gs
loope
outs
mov
jmp
fisttp
fld
inc
add
dec
pop
outs
sub
cmp
cmp
dec
sahf
push
add
xchg
mov
sar
xchg
es
jg
ss
(bad)
jmp
int3
dec
out
movs
inc
dec
pop
fist
(bad)
inc
scas
lods
into
jnp
fiadd
xor
or
scas
and
scas
shr
xor
retf
arpl
and
jp
and
adc
ja
push
jae
repz
mov
dec
stc
jle
and
cmc
inc
lods
aaa
jmp
popf
xor
and
fcomip
fs
push
cli
arpl
out
mov
nop
and
(bad)
jns
push
fsubr
dec
xor
lods
fwait
sub
inc
jmp
scas
pop
retf
lods
mov
pop
lods
mov
cmove
pop
rcl
adc
jae
inc
fmul
add
ret
aam
jmp
xchg
mov
ins
xchg
lea
jg
dec
pop
push
fiadd
idiv
jbe
sub
(bad)
pop
in
and
and
push
dec
or
cs
mov
mov
scas
cwde
movs
pop
jge
(bad)
push
add
xor
cmovl
inc
daa
mov
arpl
loop
pop
imul
xchg
fidiv
ret
imul
sub
aad
test
mov
hlt
sbb
mov
cdq
loopne
push
fiadd
fcmove
jae
mov
test
pop
fsubr
fs
mov
mov
pop
inc
jne
sub
in
inc
push
fist
and
cmp
in
dec
jg
neg
ror
scas
mov
jnp
xor
stos
pop
fiadd
dec
fcomp
cmc
(bad)
push
shl
jge
cwde
(bad)
mov
neg
rcr
(bad)
pop
(bad)
ins
das
aaa
out
dec
adc
and
call
pop
mov
ins
loopne
popf
repnz
loopne
aas
adc
cmp
jecxz
cmp
push
cmp
inc
fisub
xchg
aad
cmp
jmp
or
(bad)
sub
gs
imul
test
cld
fld
push
pop
and
pushf
cvtps2pd
ds
push
adc
or
mov
dec
xchg
out
shl
xchg
inc
pop
cs
mov
test
push
fmul
cdq
cwde
mov
inc
mov
in
mov
or
lea
ja
sub
data16
fdivr
add
mov
pop
and
mov
mov
dec
cld
call
in
jo
icebp
lock
mov
call
adc
scas
sub
xor
adc
addr16
pop
aaa
(bad)
ror
les
cli
leavew
leave
and
or
inc
push
and
inc
aaa
int
(bad)
pop
js
jge
aad
pop
scas
dec
mov
stc
dec
sub
movs
push
dec
aas
jge
or
xchg
add
or
sahf
jns
lahf
in
mov
pop
sar
push
or
call
sbb
mov
or
retf
retf
push
or
iret
jbe
xchg
lds
push
cmp
imul
imul
out
dec
pop
stos
je
sar
cmps
test
jmp
rcl
stos
jne
xor
lods
mov
dec
movs
(bad)
(bad)
mov
jns
mov
mov
cdq
add
cli
das
in
and
pop
jbe
iret
adc
repnz
ret
int
add
dec
enter
retf
jno
mov
test
cmps
inc
enter
adc
std
leave
push
add
jg
mov
scas
test
stos
div
push
jns
xchg
test
(bad)
(bad)
movs
dec
ja
push
xlat
shr
dec
add
aam
scas
(bad)
hlt
jle
xchg
mov
or
rol
aam
mov
sbb
aad
call
repz
jecxz
cmp
pop
mov
mov
sub
mov
adc
icebp
sub
pop
push
arpl
sbb
out
enter
or
pop
cdq
push
xchg
ins
out
cmp
into
inc
out
xor
mov
ja
cmp
lahf
(bad)
out
mov
cmp
call
fidivr
and
mov
and
test
jnp
mov
cs
(bad)
shr
mov
hlt
and
push
jl
hlt
in
cwd
push
cdq
xor
push
jp
imul
xchg
aam
xchg
scas
sahf
and
xchg
rcr
cmp
jecxz
fcomi
in
cld
stos
pusha
push
loop
aaa
popa
inc
add
push
movs
fsubr
bound
rcr
sbb
mov
imul
sub
sub
push
cmp
ficom
sub
mov
dec
jns
cmp
loope
popf
push
pslld
mov
mov
sti
loop
les
mov
test
shl
mov
adc
mov
lea
fisttp
sar
mov
mov
lods
push
mov
(bad)
loopne
lahf
pop
add
push
mov
les
bound
call
in
push
mov
sub
sbb
dec
add
cmp
mov
push
mov
sub
sbb
sub
es
xchg
cmp
data16
cld
add
sbb
push
ins
adc
mov
arpl
add
pop
test
imul
adc
test
dec
mov
adc
out
shr
or
cmp
push
mov
sub
xor
mov
(bad)
sbb
cmp
call
cmp
lods
add
inc
in
push
dec
mov
out
or
mov
ds
adc
and
inc
repz
int
or
adc
pop
sub
jmp
test
adc
mov
mov
or
xchg
sub
mov
gs
lahf
cld
push
ret
in
fnsave
gs
adc
mov
adc
std
xchg
pop
mov
fldenv
sub
push
dec
push
int3
loop
js
jmp
into
(bad)
pop
inc
cmp
gs
cmc
and
or
fcom
data16
fidiv
inc
movs
addr16
cwde
out
sub
mov
(bad)
ss
pushf
mov
aaa
xor
mov
jle
cmp
sub
cli
adc
je
mov
test
into
jmp
jns
push
adc
retf
adc
aas
mov
adc
(bad)
cmc
rcr
ror
mov
(bad)
push
jmp
and
xor
pop
mov
pop
mov
sbb
inc
or
cli
aas
sub
(bad)
fsub
and
mov
adc
fcmovbe
pop
jecxz
movs
clc
sar
adc
iret
push
sub
or
pop
rol
imul
inc
push
jnp
or
adc
jns
test
mov
or
aad
fiadd
cli
arpl
dec
es
cmc
pop
push
daa
mov
int3
jg
div
xchg
rcr
mov
retf
push
out
pop
push
jmp
(bad)
cdq
push
scas
or
std
mov
add
lock
jae
add
fisubr
arpl
fbstp
ins
pusha
mov
jg
out
xchg
jno
and
ds
jecxz
pop
adc
std
jae
mov
jle
cmps
popa
in
pop
in
(bad)
mov
pop
pusha
mov
xchg
adc
sub
add
fistp
adc
inc
sbb
test
cmps
inc
sub
dec
jge
push
adc
(bad)
xor
retf
iret
(bad)
fwait
mov
call
in
repnz
jnp
cmp
and
outs
mov
dec
(bad)
lock
(bad)
lds
mov
out
jg
sub
or
sub
sbb
push
stos
mov
dec
pop
nop
je
sbb
in
arpl
jno
mov
sbb
sbb
add
fadd
test
call
(bad)
push
(bad)
mov
inc
in
mov
aam
fimul
std
inc
cmp
ins
dec
inc
mov
mov
ficom
mov
nop
adc
jae
sbb
lahf
inc
stc
jb
fs
lock
das
lea
jo
jns
mov
mov
popa
sbb
repnz
cld
inc
jbe
sbb
(bad)
mov
ror
test
pop
div
ins
cmp
cdq
(bad)
out
xchg
in
imul
push
ss
cmp
xchg
out
push
sbb
movs
pop
mov
xor
pop
inc
imul
jmp
adc
aas
arpl
xchg
test
jge
xchg
icebp
cmp
mov
xchg
xchg
je
sub
jge
sub
pandn
cmps
pop
push
and
mov
cmp
inc
sbb
jp
sahf
nop
mov
or
sbb
sbb
idiv
pop
das
sub
ins
shl
repnz
cld
push
mov
sbb
mov
(bad)
mov
pop
fs
fcmove
mov
out
gs
add
imul
out
jno
jl
sbb
pop
cmp
mul
mov
mov
mov
add
mov
mov
or
xchg
jo
xchg
fmul
or
ss
mov
mov
xchg
fs
xchg
or
pop
jb
leave
dec
cmp
fmulp
or
cmp
xchg
xchg
sub
mov
xor
and
inc
inc
stc
xchg
(bad)
mov
and
inc
jno
outs
fcomp
inc
dec
(bad)
xchg
ins
adc
sub
lods
ret
idiv
dec
rcl
cli
xchg
push
test
fild
mov
sahf
adc
fsub
shr
test
(bad)
jg
neg
xchg
mov
test
jmp
ins
xor
sub
sbb
mov
add
cwde
sub
inc
imul
test
std
inc
adc
outs
std
mov
adc
mov
and
out
imul
adc
mov
jl
vandnps
jg
sub
fistp
fimul
sahf
adc
leave
(bad)
stos
loopne
lods
mov
das
pop
popa
fdiv
or
cdq
mov
repz
jne
add
popa
push
or
push
pusha
movs
xor
adc
sbb
push
mov
jl
adc
add
dec
mov
(bad)
fisttp
es
pop
jne
out
(bad)
dec
int3
pop
cmp
mov
add
push
xchg
aam
add
mov
inc
mov
gs
xlat
push
stos
into
loopne
or
lds
push
adc
xor
gs
lods
fwait
shl
ja
pop
cmps
push
cmps
sti
mov
xchg
retf
jmp
or
popf
cmps
test
mov
jo
dec
sti
cs
gs
repnz
inc
jp
addr16
sahf
nop
adc
es
add
inc
in
pop
xchg
int3
pusha
xor
mov
sti
xor
lods
(bad)
and
fs
bound
out
mov
and
adc
inc
mov
ss
(bad)
outs
jle
push
sbb
mov
daa
data16
inc
mov
inc
adc
and
out
and
sub
xchg
outs
cs
pop
mov
ds
and
mov
aaa
cwde
mov
xchg
cmp
sbb
retf
mov
mov
inc
scas
out
fdivr
lea
push
jg
pop
mov
inc
adc
retf
aam
cmp
add
imul
pop
pop
xor
push
ret
js
push
or
enter
jmp
mov
jmp
scas
rol
mov
and
arpl
sti
call
jmp
pop
movs
(bad)
ds
xchg
cmp
movs
repz
xor
daa
dec
add
pusha
int
ins
stos
jle
pop
fldcw
ds
pop
fisub
push
add
xor
xor
jp
fwait
sub
std
dec
outs
cmp
call
repz
xchg
xor
sub
mov
cs
xchg
and
cmp
push
mov
(bad)
(bad)
out
push
pop
jno
mov
shr
adc
cdq
sub
hlt
ret
or
push
out
inc
sar
rcl
cmp
enter
mov
add
push
sub
sbb
(bad)
imul
and
add
add
(bad)
jo
lahf
fdivp
pop
mov
xchg
and
addr16
adc
dec
ret
gs
ret
and
mov
fcom
push
(bad)
rol
loop
mov
addr16
mov
stos
push
into
push
or
jns
sub
xchg
out
inc
cmp
popa
ins
inc
loopne
dec
retf
les
or
and
push
in
fwait
inc
sub
fsubp
mov
or
fdivr
mov
pop
inc
xor
adc
mov
mov
sbb
mov
test
dec
ins
addr16
call
add
mov
idiv
(bad)
mov
addr16
mov
inc
cmp
outs
jmp
shl
popf
jmp
out
mov
loopne
sbb
sub
sti
out
sbb
push
or
and
adc
xchg
mov
in
xor
jae
pushf
jns
cs
xchg
sbb
loope
aam
std
cmp
adc
push
add
or
fs
test
cmps
mov
rcl
push
pusha
cmps
jmp
mov
push
movs
loop
(bad)
out
or
es
pop
dec
sahf
xchg
fdiv
test
lods
xor
sub
fadd
push
test
js
(bad)
jp
cmp
dec
rol
sub
jne
(bad)
cdq
scas
cmc
mov
into
mov
cld
lods
xchg
ins
or
jle
push
pop
scas
xchg
jg
ret
jmp
and
inc
cmps
test
leave
adc
jnp
jns
pop
dec
pusha
loopne
jno
mov
jp
cs
in
jbe
cmp
ficom
fcmovnbe
fidiv
fcomp
mov
fs
mov
fidivr
rol
test
aaa
push
adc
pushf
movs
inc
and
jbe
and
lahf
xchg
and
shl
mov
adc
xor
(bad)
jno
sub
enter
loop
inc
js
mov
(bad)
fcmovnu
(bad)
stos
mov
add
pusha
lds
sub
jecxz
cmp
int
xor
add
jecxz
fnstcw
stos
lea
call
ret
jo
ja
retf
loopne
mov
into
mov
stc
adc
cdq
pop
je
jmp
sbb
aaa
sub
cwde
mov
clc
xchg
xchg
and
push
aad
loope
icebp
mov
rol
stos
out
aaa
mov
cmps
add
ins
add
push
cs
xchg
mov
mov
mov
push
cmp
cld
out
ret
in
xor
cmps
push
test
push
loope
scas
mov
mov
cdq
rol
(bad)
aad
lods
xlat
pop
jae
inc
lahf
icebp
adc
mov
xchg
into
jg
(bad)
sbb
es
fldenv
push
pop
sub
add
ds
push
add
(bad)
mov
mov
add
not
cwde
pop
pop
shl
and
xchg
add
mov
dec
iret
or
xchg
sets
and
mov
mov
shl
loopne
(bad)
cli
mov
daa
hlt
jmp
loope
stc
cmp
or
ins
into
imul
call
and
test
int3
ja
nop
cli
popf
out
sbb
push
cs
jmp
xchg
in
mov
or
mov
dec
sbb
fisubr
rcl
mov
pop
shl
sbb
rol
sbb
pop
mov
pop
xchg
pop
call
into
pop
pusha
loop
(bad)
les
or
push
mov
pushf
cmp
jnp
in
test
jg
xor
clc
pop
cs
fidiv
lods
test
pusha
inc
stos
adc
retf
arpl
pop
lds
ins
nop
adc
addr16
inc
xor
cmp
inc
sti
dec
aas
cmp
test
imul
mov
loope
mov
pop
or
scas
and
shr
(bad)
aam
stc
pop
inc
stc
push
xchg
dec
les
fstp
hlt
call
out
adc
jge
enter
push
cmp
mov
dec
sub
push
rcl
adc
and
xchg
sahf
aam
xchg
push
scas
test
xchg
hlt
fcom
sub
mov
jne
(bad)
hlt
xchg
sub
push
stc
inc
mov
mov
mov
mov
pop
mov
jp
mov
dec
cmp
push
cmps
xor
(bad)
ds
sub
icebp
daa
mov
call
inc
aaa
or
mov
popf
movmskps
cmp
mov
xchg
sbb
sbb
xchg
lock
push
cmp
das
mov
adc
jne
loope
pop
add
sub
arpl
xor
loopne
push
mov
(bad)
cmp
stos
xchg
daa
shl
cli
mov
mov
imul
in
and
por
sahf
sbb
call
(bad)
mov
inc
pop
mov
fstp
mov
aas
jnp
xchg
push
push
xchg
adc
(bad)
mov
cmps
imul
retf
jnp
jmp
xor
movs
frstor
fild
movs
jmp
xchg
and
data16
sub
and
mov
sbb
ja
pop
or
pop
sbb
mov
test
and
mov
mov
dec
inc
jle
cwde
jbe
mov
or
and
ins
and
std
out
scas
or
adc
mov
mov
mov
xchg
int
or
jge
test
sbb
dec
in
gs
outs
push
jecxz
fwait
xor
fist
jne
or
iret
push
dec
dec
leave
xor
push
xor
sbb
ins
std
lahf
add
and
xchg
pop
xchg
fwait
sub
or
outs
mov
pop
inc
in
ds
and
adc
mov
loop
mov
jle
aaa
loopne
test
fsubr
inc
stos
adc
xchg
call
mov
inc
hlt
xchg
mov
repz
add
hlt
jae
xchg
inc
enter
pop
arpl
cwde
fistp
popa
push
jecxz
lahf
retf
mov
sar
mov
cmp
or
xchg
movs
je
sbb
mov
cmps
push
nop
xor
add
and
push
(bad)
ja
cmps
sub
xchg
xchg
adc
clc
ftst
jno
bnd
popf
sub
daa
inc
push
mov
push
lods
idiv
xor
call
out
xchg
std
or
push
std
mov
addr16
adc
inc
mov
mov
jecxz
imul
lods
aaa
push
lods
rol
popf
cmp
mov
cmp
cmc
adc
and
mov
pop
pop
jmp
mov
out
fwait
dec
pop
mov
mov
jle
hlt
fstp
xchg
sar
push
outs
test
jl
mov
mov
mov
or
ja
mov
aas
mov
sub
outs
call
push
fmul
into
(bad)
push
add
mov
fstp
addr16
stos
pop
add
ss
cmps
loope
nop
xor
jnp
sub
sbb
cmp
add
mov
inc
sub
out
push
es
mov
mov
mov
cmp
jmp
loope
jle
or
neg
cwde
xchg
xchg
xchg
outs
adc
retf
fstp
std
dec
sbb
dec
mov
(bad)
fisttp
xchg
jle
xlat
pop
leave
jo
aaa
jbe
add
fdivr
mov
sbb
mov
jmp
sbb
add
aam
lahf
mov
out
test
sbb
mov
mov
imul
push
cmp
cmp
xchg
jns
add
shr
adc
and
push
and
ficomp
push
jae
mov
mov
and
jg
push
add
nop
pusha
clc
popa
mov
jmp
jne
or
jle
and
sar
adc
out
ret
iret
fist
mov
or
div
pop
hlt
dec
imul
mov
add
shl
adc
push
mov
daa
retf
in
and
cmc
les
adc
xchg
mov
mov
push
mov
in
jne
data16
xchg
std
addr16
shl
nop
fwait
sbb
mov
stos
and
sar
xchg
cmovbe
sbb
jmp
psubq
add
(bad)
jae
iret
mov
call
pop
(bad)
(bad)
xor
lods
jecxz
cmc
mov
mov
out
or
aam
jecxz
(bad)
mov
shl
pop
in
jecxz
pop
push
cs
and
loop
cmc
mov
dec
jnp
movs
mov
icebp
popa
cs
adc
mov
fiadd
mul
xchg
sar
loope
int
mul
cmps
fcom
repz
inc
adc
mov
dec
mov
xor
cmp
fcomp
add
mov
inc
inc
clc
adc
cmp
repz
mov
add
ss
std
jg
pop
add
fld
addr16
mov
aam
rcr
les
je
sbb
movs
hlt
push
outs
mov
movs
retf
inc
xor
adc
xor
(bad)
push
(bad)
scas
push
inc
add
sbb
movs
cwde
lods
adc
fwait
cmp
xchg
mov
xor
data16
dec
jnp
ins
(bad)
mov
mul
and
popf
mov
imul
(bad)
in
mov
popf
adc
jb
ret
or
aas
cmps
or
add
xor
cmp
pop
bound
push
dec
mov
loope
mov
jbe
mov
jmp
adc
retf
pop
inc
aam
adc
jecxz
imul
lea
push
cdq
mov
mov
inc
sbb
inc
cmp
push
mov
bound
out
mov
mov
jo
(bad)
(bad)
gs
jbe
jns
pop
mov
mov
mov
les
lock
mov
push
mov
hlt
ret
sbb
mov
pop
sub
repnz
iret
or
daa
lock
ror
or
mov
and
mov
sbb
mov
std
jl
neg
or
out
push
dec
and
mov
mov
movs
nop
mov
mov
push
idiv
outs
cmp
mov
mov
aad
push
stos
clc
or
inc
fwait
mov
dec
mov
inc
ds
pop
xchg
cmc
cmovns
test
in
cmp
inc
dec
push
icebp
leave
retf
call
pop
sub
xor
(bad)
adc
jle
sbb
scas
add
lea
adc
mov
and
sub
dec
mov
es
xor
jo
and
or
xchg
scas
movs
lods
adc
es
jmp
add
out
jl
dec
ins
xor
call
add
fs
jae
cmp
jne
push
jo
movs
xchg
adc
pop
lahf
fnstsw
or
xor
dec
sbb
mov
adc
cmp
ret
xor
pop
pop
nop
mov
mov
sar
add
int
dec
dec
pop
sub
out
sub
push
jmp
mov
inc
cli
cmps
jmp
data16
jl
or
jae
xchg
xchg
mov
mov
cmp
or
jge
outs
lods
mov
scas
hlt
or
es
mov
lea
mov
sub
aad
inc
dec
push
mov
pop
add
jp
int
lds
sti
test
jae
arpl
lahf
push
out
arpl
aad
sbb
mov
ds
das
sub
push
(bad)
jg
jb
cmp
rcr
mov
cdq
int3
in
mov
sar
inc
dec
bnd
loopne
stos
retf
scas
movs
std
pusha
fist
(bad)
iret
mov
mov
mov
test
popf
xor
test
inc
call
ss
ja
sub
mov
sbb
mov
outs
or
add
mov
lock
cmp
add
std
ret
icebp
scas
mov
and
kmovb
(bad)
push
inc
jnp
jno
and
pop
cdq
mov
ret
jne
adc
sbb
out
jecxz
mov
rcl
aam
mov
cmp
iret
mov
pop
in
pop
mov
leave
inc
ret
cmps
inc
shl
loop
fild
jge
dec
iret
pushf
xor
test
fistp
stos
mov
out
rol
dec
test
mov
fidiv
dec
inc
sbb
inc
stos
sub
push
popf
xchg
retf
xchg
cmp
inc
leave
and
jp
jecxz
push
aad
rcr
enter
mov
retf
fsub
ror
adc
pop
cmps
cmps
fidivr
pop
inc
mov
imul
add
cmps
inc
fisttp
int3
push
cmp
mov
adc
mov
mov
mov
pop
sub
ins
mov
pop
stos
add
push
jb
cmp
sub
mov
loopne
mov
xchg
jg
sub
(bad)
addr16
sub
xchg
jmp
dec
mov
mov
sbb
sbb
inc
xchg
std
int
jne
(bad)
mov
dec
mov
dec
outs
rol
enter
dec
sbb
xor
loop
test
call
test
xchg
in
scas
mov
mov
mov
fisttp
jne
sbb
or
xor
sub
adc
ds
mov
xchg
ja
pop
(bad)
lds
pop
scas
xor
ror
(bad)
cmps
xchg
imul
jne
add
xor
fcom
mov
lea
cli
jmp
repnz
scas
push
xor
aad
loop
mov
in
and
cdq
leave
cmp
imul
stos
sbb
jmp
push
lods
mov
jo
aaa
shr
mov
mov
adc
add
test
xchg
cld
xchg
mov
jns
(bad)
(bad)
arpl
retf
out
test
push
mov
sub
pop
inc
xchg
fs
xchg
jnp
dec
ins
shl
and
adc
pop
retf
test
add
push
sub
push
ret
rep
jne
adc
or
sbb
push
scas
mov
test
inc
pop
adc
sahf
lods
(bad)
ins
dec
push
mov
fwait
loop
pop
outs
lea
mov
sub
xchg
add
imul
and
gs
sub
push
in
inc
mov
sub
sar
(bad)
push
adc
dec
imul
ins
mov
sar
(bad)
jle
aas
mov
push
jae
fwait
sti
rol
loope
adc
inc
std
push
mov
ficomp
mov
adc
xchg
push
xchg
ins
inc
enter
and
jecxz
das
jne
fs
into
cmp
sub
jne
xchg
jno
inc
mov
adc
data16
cmp
lods
pop
(bad)
cld
cmps
jo
daa
push
in
add
push
mov
sub
loopne
push
mov
push
retf
sub
push
pop
push
out
jle
xlat
cwde
jmp
dec
cld
test
in
inc
mov
imul
cmp
(bad)
cmps
imul
sbb
mov
sub
movs
mov
data16
and
or
jl
dec
cmp
int
xchg
mov
repnz
mov
jno
ret
aas
dec
xchg
js
sub
leave
push
cld
pushf
cmp
or
les
adc
mov
mov
das
add
sub
push
hlt
repz
adc
or
jo
xlat
cmp
aad
std
jp
lock
mov
push
sbb
mov
cmp
sbb
fnstenv
mov
je
in
jmp
inc
adc
clc
call
(bad)
(bad)
xchg
nop
fsub
hlt
inc
sbb
out
test
inc
xor
xchg
add
nop
inc
(bad)
(bad)
call
aaa
(bad)
movs
mov
std
pop
push
ret
das
out
xchg
jbe
div
cmp
fst
xor
mov
mov
nop
in
mov
adc
inc
sub
sbb
in
mov
xor
(bad)
and
push
aaa
(bad)
out
jmp
sub
bound
push
adc
cmp
xor
add
xchg
inc
retf
stc
ins
sbb
jno
enter
popf
dec
push
push
xor
mov
loope
xor
add
dec
div
mov
jb
mov
fldcw
test
aaa
retf
leave
adc
repnz
mov
(bad)
loopne
jns
cmc
scas
cmp
std
inc
stos
loope
fisubr
mov
jb
shl
dec
inc
jmp
push
dec
rol
cmp
fidiv
add
imul
mov
mov
mov
mov
fldcw
fadd
mov
jp
mov
clc
pop
xchg
jnp
imul
push
lods
adc
test
aaa
aas
pusha
das
jg
pop
or
add
jnp
adc
cmp
mov
or
push
pusha
aam
sub
jg
data16
test
mov
push
iret
cmp
push
mov
ror
xchg
inc
std
adc
sbb
pop
lds
adc
outs
loop
jmp
dec
shl
dec
sahf
inc
arpl
leave
xor
mov
nop
mov
push
fidiv
movs
into
jb
dec
repnz
xor
arpl
add
in
add
adc
lods
das
cmp
clc
mov
in
cmc
les
mov
test
dec
int
sbb
in
iret
sar
cmc
hlt
lahf
jno
adc
jge
hlt
push
stc
cmp
rcl
(bad)
retf
push
aad
adc
ret
repz
push
adc
arpl
xchg
repnz
push
scas
pusha
xor
jb
fbstp
adc
inc
daa
stc
and
pop
jp
adc
int3
int
push
dec
dec
leave
dec
aam
push
xchg
cmp
arpl
daa
sub
fs
es
add
mov
sti
dec
fcom
and
es
and
jge
cmp
or
cmps
push
aam
into
pusha
add
sti
dec
int3
sbb
inc
or
cmp
jp
push
pop
push
adc
ds
rol
mov
xchg
fidiv
jno
movs
mov
imul
aad
js
aad
inc
mov
sbb
mov
leave
movs
jns
jl
or
call
xor
inc
shl
sbb
shl
aas
and
add
jle
ret
push
pop
mov
dec
add
xor
or
aaa
daa
adc
je
sub
xchg
rcr
pop
int3
cmp
pop
xchg
aas
fisubr
xchg
jo
lock
mov
push
ret
cld
popa
std
imul
leave
mov
or
lds
enter
fisub
ins
push
je
(bad)
bound
add
push
in
adc
jle
or
jecxz
inc
sub
mov
retf
call
or
in
(bad)
stc
adc
mov
clc
pop
and
int
pop
sub
xchg
inc
mov
je
movs
mov
mov
jp
data16
addr16
movs
inc
popa
ins
cld
inc
(bad)
rol
(bad)
leave
addr16
lea
inc
cmp
stos
dec
hlt
jl
mov
(bad)
jle
stos
push
inc
dec
sbb
pusha
xlat
adc
xor
in
mov
or
jns
pop
cmc
leave
cwde
pop
jecxz
scas
cmps
push
jmp
sub
inc
inc
mov
in
js
call
xor
xchg
adc
pop
push
aas
(bad)
dec
sub
jmp
dec
or
jnp
stc
xchg
lahf
fmul
mov
sub
push
lods
xchg
xchg
jle
shl
pushf
pop
rcl
test
add
in
movs
gs
mov
scas
add
xor
pop
jmp
mov
push
or
xor
popa
xor
fwait
mov
retf
xchg
mov
retf
outs
mov
in
bound
stc
adc
mov
pop
dec
retf
ffreep
mov
jbe
outs
(bad)
jmp
jns
pop
in
jo
out
inc
mov
ins
dec
pop
xchg
xor
out
movs
ss
dec
jle
fild
or
inc
mov
push
scas
mov
out
adc
retf
mov
in
bound
add
fwait
int
mov
loope
sbb
inc
in
retf
xchg
shl
jno
jne
sahf
sbb
mov
sub
jne
std
cmc
jle
push
sahf
cmp
sub
push
xchg
xchg
fisub
in
jmp
and
adc
mov
call
(bad)
cmp
push
fldcw
mov
loope
push
cmc
into
cs
popf
int3
add
(bad)
sbb
lea
cmps
mul
sub
inc
imul
adc
mov
pushf
jmp
inc
sub
(bad)
rcl
mov
lahf
mov
mov
ins
cmc
not
stc
ret
test
push
pop
cmp
retf
sub
data16
dec
mov
xor
or
jb
push
fidivr
(bad)
sbb
pop
jmp
jo
stos
outs
and
cdq
dec
mov
dec
xchg
xchg
ret
inc
xor
outs
xor
cmps
xor
add
test
mov
xor
aas
push
ins
imul
adc
call
cmp
push
mov
or
or
xchg
cmps
mov
mov
push
dec
ins
test
mov
mov
loopne
into
xchg
mov
lahf
std
mov
psrld
(bad)
aam
nop
cli
or
call
and
repz
jbe
aad
neg
in
pop
cmp
out
and
sub
int3
inc
pop
jo
adc
jno
inc
mov
cmp
inc
mov
repnz
rcr
jmp
xor
add
movs
les
pop
inc
sub
pushf
jno
jns
stos
sbb
repnz
pop
outs
cmc
test
jnp
adc
add
cdq
xchg
cmp
clc
and
pop
jg
shl
dec
movs
sub
fcomip
jge
lods
push
and
add
mov
fistp
cdq
sbb
loope
ret
aam
jb
imul
mov
mov
mov
adc
cld
dec
xchg
das
repz
inc
ds
pop
scas
fdiv
(bad)
icebp
xor
inc
(bad)
sar
fwait
stos
sub
loopne
loopne
movs
inc
ins
mov
ret
xchg
sbb
dec
in
dec
add
in
jmp
push
mov
dec
xor
jbe
mov
mov
movs
in
rcr
fisubr
adc
cmp
push
sbb
xchg
adc
xor
shl
mov
mov
or
pushf
retf
push
dec
ror
in
and
mov
jmp
sar
aam
xor
xor
repnz
xor
push
jne
mov
jmp
rcl
mov
std
add
xor
mov
lahf
mov
pop
popf
mov
enter
jno
sbb
(bad)
lea
mov
xacquire
sbb
jnp
aam
mov
frstor
jmp
xor
inc
mov
in
sbb
out
stos
mov
mov
shl
add
xor
fs
xchg
ins
xchg
int3
xchg
shr
cmps
out
das
mov
mov
sub
inc
mov
cmp
mov
jmp
push
(bad)
cmp
xor
jmp
sbb
mov
mov
or
xchg
jae
mov
mov
mov
mov
sbb
pop
jbe
int3
enter
outs
xchg
(bad)
cmp
int3
outs
fnstcw
fisttp
ins
gs
call
adc
sbb
sub
mov
mov
shl
nop
fcom
mov
call
shr
lods
xchg
dec
mov
add
pop
or
jg
les
mov
js
push
mov
mov
or
pop
sbb
outs
or
or
retf
and
cmps
dec
inc
js
test
push
mov
jg
sbb
jmp
or
cli
mov
aam
jae
add
cwde
jb
fcmovb
and
in
repz
inc
cmp
jmp
push
test
das
(bad)
loopne
lds
mov
dec
jmp
cmps
jmp
pop
sub
xor
sub
xlat
(bad)
nop
out
mov
mov
xlat
cs
push
and
jmp
mov
mov
pop
(bad)
add
sub
push
mov
cli
or
cmp
push
push
popf
jecxz
inc
bound
(bad)
movs
sti
mov
push
int
jnp
jae
sar
repnz
enter
push
adc
dec
sub
push
xchg
pop
enter
adc
adc
cli
sbb
mov
nop
adc
icebp
push
jbe
adc
adc
dec
into
das
cmps
pandn
ins
lds
or
sbb
shr
test
repz
ss
retf
aas
and
mov
pop
sbb
(bad)
push
movs
mov
loope
(bad)
out
sbb
aam
sub
fild
xchg
mov
in
lea
pop
cmp
ins
dec
repnz
frstor
imul
out
xchg
test
mov
add
and
xchg
cmp
xlat
xchg
sbb
cmp
sub
add
jne
ror
xchg
sbb
xchg
pop
(bad)
jmp
sbb
icebp
bound
daa
clc
leave
in
sub
jmp
lods
jae
std
adc
fimul
sahf
in
jecxz
les
pop
sub
icebp
push
push
cmps
xchg
sub
adc
inc
out
mov
and
test
dec
hlt
and
cmp
test
add
mov
sti
inc
aam
cmp
lahf
in
repnz
stc
cli
adc
repz
xor
mov
mov
ins
push
dec
jnp
mov
dec
push
pop
or
and
outs
mov
xor
mov
test
lods
popf
mov
pusha
mov
mov
push
out
push
imul
aaa
outs
sahf
xchg
xchg
or
sbb
fs
inc
outs
or
dec
lods
stc
jae
cs
and
jns
pop
jnp
xlat
fsubrp
jne
retf
cli
mov
cdq
push
xchg
loop
sbb
mov
push
inc
lock
mov
cs
call
push
xchg
sbb
out
loopne
and
add
sbb
push
jne
shl
fisttp
pop
ja
and
mov
pop
aam
push
ja
ds
retf
mov
movs
or
pop
std
ss
das
loope
jl
ret
jae
dec
push
ins
adc
loop
xchg
in
cdq
and
jl
jmp
push
sbb
push
push
xchg
mov
loopne
mov
rcl
and
pop
js
mov
out
cdq
test
jno
cdq
jne
cld
sub
or
sub
js
lods
cmp
daa
sub
dec
stos
movs
arpl
movs
call
xor
je
(bad)
shl
push
out
pop
adc
pop
pop
rol
push
cli
outs
inc
loop
push
push
jmp
add
cmps
inc
mov
mov
hlt
stos
mov
mov
add
pop
(bad)
xchg
movs
add
and
push
sub
and
int3
outs
repz
pop
xor
mov
nop
out
std
mov
pop
repz
mov
std
js
cmp
lahf
and
call
sbb
scas
clc
lea
shl
retf
xor
ins
or
and
xchg
rol
push
addps
xor
pushf
(bad)
hlt
push
jle
aad
mov
fs
lock
xchg
adc
mov
mov
jne
in
cwde
shl
sub
aad
shl
push
lods
outs
xor
out
addr16
jo
mov
ds
pusha
out
mov
or
dec
fnstsw
pop
mov
mov
hlt
mov
adc
sbb
pop
mov
adc
sub
scas
mov
fs
rol
or
mov
mov
push
sti
jae
jmp
ror
dec
loopne
in
or
loop
mov
xor
retf
loopne
inc
jp
cmp
jecxz
js
fs
pusha
cmp
and
jns
fimul
adc
icebp
(bad)
repz
and
xchg
adc
imul
xlat
mov
pusha
sbb
or
cmp
jae
cwde
cmp
sub
rcl
(bad)
(bad)
jle
lds
bound
cmc
outs
pop
jp
add
mov
je
sub
ins
xor
cli
fist
shl
xchg
push
fsub
or
outs
jbe
inc
outs
out
fcom
mov
ror
rol
adc
and
in
inc
jge
push
aam
add
and
fcmovnu
jns
in
and
cmp
push
je
cmps
aas
dec
test
dec
outs
lods
ror
cmps
or
test
xchg
and
ins
sar
add
xor
adc
pop
xor
jmp
sub
jmp
cmp
mov
scas
bound
sub
pop
imul
sti
or
dec
adc
mov
inc
jecxz
cmc
pop
cmp
or
jp
fist
int
mov
push
mov
pusha
test
jge
mov
daa
cmp
call
or
(bad)
cmp
mov
scas
push
sub
mov
and
jle
sub
xchg
xchg
push
sbb
dec
(bad)
sub
sbb
jno
pop
sar
icebp
arpl
aas
movs
xor
fs
(bad)
jbe
test
adc
push
jns
or
mov
adc
jp
shl
outs
shl
daa
js
push
movs
shl
jb
jae
test
ins
gs
rcr
mov
rcr
in
test
jbe
dec
into
out
xor
sbb
scas
or
jecxz
outs
bound
mov
fild
shl
in
clc
mov
(bad)
xor
pop
mov
inc
mov
icebp
and
test
or
cmps
jnp
adc
push
ret
pushf
cmp
emms
in
mov
inc
rcr
outs
push
gs
adc
cmp
sub
cmp
pop
inc
enter
in
fs
sub
jmp
mov
dec
(bad)
out
fwait
mov
inc
ins
jmp
cmps
inc
mov
jb
rcr
test
lods
sbb
mov
cmps
ror
(bad)
add
push
fcomp
push
div
sbb
adc
dec
xor
mov
fiadd
sbb
xlat
mov
sub
pop
mov
add
sbb
mov
imul
mov
call
pop
xchg
test
inc
jae
cdq
(bad)
mov
cmp
mov
test
fs
popa
imul
test
add
mov
std
test
adc
out
sbb
leave
push
jp
add
(bad)
int3
mov
mov
or
mov
out
loope
pop
gs
mov
add
sbb
pop
cdq
mov
shl
int
xchg
mov
jecxz
xchg
pop
test
sbb
loop
mov
push
dec
and
pop
jno
add
test
imul
shr
scas
inc
push
xor
fcmovnu
inc
(bad)
(bad)
dec
pop
stc
sbb
lods
out
sbb
adc
loopne
sti
mov
ja
add
push
clc
mov
cwde
jecxz
adc
sbb
pop
stos
rcr
xor
inc
sbb
pop
push
test
adc
cmp
in
jmp
pop
and
sbb
(bad)
ja
das
pop
jo
pop
sbb
mov
inc
adc
and
jle
xor
push
daa
and
adc
std
std
ror
sbb
dec
fwait
xchg
cmp
push
inc
push
dec
fcmovnb
addr16
inc
pop
fldcw
ss
mov
or
cdq
(bad)
test
jo
add
dec
arpl
cdq
jge
je
ffreep
and
movs
xor
pop
jo
and
dec
arpl
mov
fimul
mov
call
js
pop
cmps
inc
call
pusha
fild
outs
adc
add
jmp
mov
or
and
cmp
sbb
xchg
std
mov
xor
lods
jno
(bad)
cmp
pop
dec
sar
xor
xor
fistp
cmp
mov
aas
iret
push
dec
or
or
push
stos
retf
pushf
xchg
mov
jmp
fcomip
jno
fcmovnu
inc
mov
jmp
mov
fwait
inc
arpl
stos
shr
or
mov
loop
adc
pushf
cmp
repz
cmp
aad
es
fcom
bound
ins
popf
lock
and
xor
dec
std
push
clc
and
xor
mov
xor
xchg
shr
ins
neg
ret
add
push
and
test
fild
loopne
xor
xchg
pop
pop
xor
jne
mul
lock
ss
cmps
cld
sti
pop
(bad)
mov
jg
or
xor
mov
xchg
sub
aas
jmp
stos
fiadd
imul
or
inc
lods
jb
ins
retf
in
push
mov
fwait
in
test
loope
and
imul
lods
pop
leave
fidivr
jne
popa
in
jmp
movs
(bad)
mov
lds
adc
(bad)
in
(bad)
int3
pop
pop
sahf
dec
mov
nop
aas
adc
outs
fs
loopne
sbb
pop
xchg
push
ins
cmp
ins
push
adc
hlt
jno
jo
sti
inc
out
fisttp
mov
test
xor
retf
(bad)
out
dec
leave
stos
sti
ins
sub
imul
mov
adc
dec
call
xchg
sbb
and
or
xor
jmp
loopne
push
mov
push
std
push
out
mov
add
mov
inc
test
pop
arpl
xor
pop
mov
out
or
mov
mov
adc
ds
cld
pusha
lock
pop
add
nop
pop
das
jae
je
mov
xchg
mov
out
xchg
loop
add
arpl
cmp
inc
adc
loope
pop
lods
mov
pop
mov
lahf
out
mov
les
mov
mov
pushf
bound
mov
sbb
leave
pop
mov
or
mov
sub
rol
xchg
bound
lods
call
add
fld
xor
pop
pop
xor
repnz
fninit
add
pop
cmp
push
(bad)
cmps
jle
je
jo
push
leave
mov
sahf
lds
lea
or
inc
test
jo
fadd
cmp
dec
js
out
out
loope
cmp
push
ins
jg
outs
add
in
sub
ds
mov
inc
cmps
sub
popf
or
in
push
(bad)
pusha
not
in
adc
mov
inc
add
mov
jmp
xor
mov
ret
cmp
(bad)
mov
inc
mov
push
leave
add
mov
dec
or
dec
daa
and
outs
movs
pop
(bad)
fisubr
mov
(bad)
in
dec
inc
mov
adc
jmp
dec
shl
add
xchg
dec
jg
addr16
jmp
xor
pop
and
xchg
sub
(bad)
cli
mov
lahf
xlat
mov
jne
mov
pop
(bad)
mov
mov
bound
aam
mov
and
push
enter
test
daa
push
sub
stos
mov
mov
call
mov
inc
sbb
or
shl
jp
mov
fwait
enter
pop
lahf
stc
ja
xor
popf
rol
rcr
sbb
inc
adc
pushf
iret
or
mov
cmp
test
mov
dec
mov
xchg
push
popa
es
test
pushf
push
shl
aam
(bad)
jmp
jae
push
push
shr
add
call
lods
fld
das
cmp
push
aam
mov
enter
mov
or
jno
movs
jns
mov
std
jmp
in
or
pop
pop
in
adc
loope
xor
out
int
hlt
push
and
dec
fcom
mov
sbb
push
stc
and
jecxz
data16
mov
cmp
dec
loop
cmc
sbb
lds
mov
fist
add
jae
int3
xlat
enter
or
sub
div
dec
xchg
sbb
push
inc
dec
arpl
pop
mov
adc
push
es
jecxz
jp
aas
mov
aam
addr16
pop
cli
stos
inc
loop
mov
add
pop
dec
inc
jmp
cmp
lock
inc
mov
ror
andnps
push
cli
int
sub
or
out
mov
dec
and
bound
in
int
pop
dec
out
pop
sbb
shl
fsubr
cmp
lods
push
jo
cmp
mov
or
push
repnz
rol
add
jmp
cmp
cmp
test
adc
(bad)
ret
dec
sub
xchg
mov
ins
stos
imul
shl
xchg
inc
fdivr
repz
xchg
and
addr16
cld
and
arpl
add
imul
pop
xor
mov
sub
mov
mov
je
enter
fwait
mov
mov
push
add
outs
bnd
sbb
jecxz
push
js
dec
mov
fild
repnz
cmp
popf
pop
or
das
push
xchg
ins
daa
(bad)
mov
ins
mov
ret
inc
fldenv
sub
out
sbb
pop
dec
ficom
mov
mov
push
cmp
shl
popa
pop
lds
mov
xor
icebp
movs
mov
ret
push
mov
(bad)
mov
ins
shl
popf
inc
arpl
mov
imul
or
test
mov
inc
adc
mov
pop
cmp
sbb
sub
jne
cmp
xchg
dec
popa
aas
or
ret
or
jg
push
repz
ret
mov
ret
out
and
jbe
add
mul
inc
pop
mov
cli
fdivr
movs
out
push
or
add
push
jbe
icebp
mov
lahf
jae
dec
popf
inc
fidivr
jl
cmp
xchg
mov
loope
sbb
std
loop
mov
test
mov
dec
cmps
cmp
mov
in
sar
inc
scas
sbb
cdq
les
je
pop
pop
sbb
repz
mov
je
mov
mov
add
mov
(bad)
outs
mov
jecxz
es
cmp
not
loope
outs
adc
mov
push
scas
jae
aaa
adc
xchg
sub
mov
lock
dec
sar
inc
loop
and
add
sbb
or
mov
or
inc
data16
test
mov
mov
test
loopne
push
sbb
out
gs
out
sar
sbb
xchg
push
fist
fidivr
js
sbb
sub
xchg
(bad)
in
and
and
sbb
fbstp
push
sub
clc
mov
rcr
adc
and
xchg
ins
arpl
clc
cmp
mov
cmp
(bad)
jecxz
out
call
push
or
mov
pushf
(bad)
mov
cmp
inc
mov
push
sub
push
sbb
sbb
mov
mov
lahf
fidiv
fcmovu
xor
adc
mov
out
push
(bad)
cmp
xor
cmp
sbb
mov
scas
jmp
gs
push
sti
nop
add
dec
mov
sar
push
inc
and
ror
adc
inc
mov
sbb
loopne
stos
rol
pop
or
stc
xchg
adc
adc
or
cs
or
push
leave
ja
sbb
out
mov
inc
push
jmp
and
sub
sar
jne
std
add
sbb
inc
mov
arpl
aad
arpl
jno
std
mov
outs
jle
(bad)
adc
xor
push
daa
aam
bound
ins
stc
add
(bad)
int
mov
jl
mov
lock
fstp
xchg
mov
mov
out
movs
call
fisub
or
pop
dec
sub
ret
or
inc
xchg
pop
pop
mov
cmp
mov
scas
ins
aam
mov
mov
and
jge
xor
xor
int
sub
scas
add
(bad)
dec
int3
sub
fucom
mov
mul
cmps
cmp
sbb
stos
rcr
pop
jge
dec
call
add
lock
data16
pop
mov
iret
test
or
xor
mov
inc
scas
rol
mov
pop
mov
cmp
mov
call
nop
out
cmp
lods
mov
lds
nop
mov
cli
mov
ins
sti
sbb
xlat
sub
scas
(bad)
icebp
mov
in
js
sub
nop
sub
adc
clc
or
mov
mov
lds
lds
les
cmp
shl
jmp
lds
repnz
aam
jl
iret
jp
popa
dec
mov
aam
inc
sar
call
add
or
add
push
push
or
in
cmps
fcomi
sbb
inc
lds
xor
inc
sbb
sbb
leave
inc
inc
xor
lock
jp
sbb
jnp
outs
jo
(bad)
outs
bound
and
inc
push
adc
adc
fwait
inc
mov
xchg
add
sti
jae
pop
std
fwait
mov
adc
adc
nop
stos
test
stc
pusha
adc
idiv
sbb
mov
mov
xchg
ss
mov
(bad)
jns
mov
mov
sub
push
jl
out
cmp
and
mov
mov
sub
xlat
cmp
push
push
test
pusha
push
mov
retf
fmul
int3
cld
dec
dec
ret
pop
push
mov
ficomp
cmps
fbstp
ss
ja
rol
scas
lds
das
imul
mov
and
and
inc
pop
aad
jmp
inc
sbb
dec
sub
scas
imul
daa
imul
inc
adc
cmp
jne
or
stc
fcom
adc
(bad)
ror
inc
leave
shld
add
xchg
xchg
lahf
sbb
inc
or
fwait
adc
scas
movs
xor
jbe
mov
jmp
lods
pop
xor
xor
jns
sbb
jmp
cmp
xlat
mov
or
push
mov
mov
enter
repz
gs
add
jbe
or
dec
sub
mov
mov
shl
and
pop
push
push
push
movs
add
popa
pop
and
repz
xor
fiadd
daa
test
cmp
int3
sti
sbb
adc
mov
(bad)
repz
adc
jmp
dec
add
aaa
rol
mov
loope
pop
icebp
or
fwait
jp
or
dec
dec
pop
cmp
aam
mov
sub
js
ds
stos
shr
enter
repnz
jle
push
lods
arpl
sub
xor
mul
or
cmps
cmp
jge
push
(bad)
mov
inc
adc
fcom
jo
sbb
(bad)
mov
lea
into
inc
dec
mov
addr16
adc
fnstenv
push
dec
pop
pop
sbb
pop
and
mov
jne
cmp
mov
enter
lods
pop
test
xlat
lahf
aas
mov
sub
fisub
js
loope
inc
cdq
cmps
xchg
or
repz
sbb
repnz
test
outs
push
and
cmp
sub
ret
fwait
dec
push
ret
fiadd
jle
inc
sahf
mov
jb
jnp
pushf
fucomp
dec
mov
add
or
push
mov
push
mov
aaa
mov
ins
adc
add
mov
out
std
jp
and
clc
out
xchg
xchg
pop
imul
push
lods
dec
es
push
or
add
shl
add
xchg
iret
push
cmp
push
or
sub
inc
dec
addr16
int3
jbe
icebp
add
movs
inc
adc
or
fsubr
pop
jl
into
xor
mov
push
sbb
add
xchg
adc
dec
in
mov
dec
push
loop
jge
push
data16
jae
mov
dec
and
jg
movhps
xchg
xor
jmp
addr16
push
lods
dec
jle
add
sub
out
je
jmp
cs
pop
ret
mov
test
xor
sub
inc
cmp
movs
or
punpckhwd
xlat
scas
push
mov
push
pop
pop
scas
out
ins
xor
cmp
ds
pushf
sar
scas
xchg
fwait
shl
xchg
mov
mov
cmp
xor
in
nop
int3
popf
scas
push
push
mov
sub
rcr
bound
xchg
sti
cdq
add
push
cwde
mov
outs
je
or
adc
mov
xchg
movs
into
sbb
ret
fbld
dec
repz
shl
pop
or
dec
mov
es
xor
xor
sbb
xor
or
pop
fld
push
mov
sbb
mov
ret
xor
push
pop
in
push
retf
push
lock
ins
and
mov
leave
and
cmps
dec
imul
jbe
adc
jmp
les
loop
inc
out
mov
or
leave
mov
dec
out
jl
pop
cmc
sub
in
mov
js
cli
pop
cdq
mov
inc
push
mov
sbb
ret
call
jl
out
ja
fs
test
add
or
inc
fmul
ret
or
cmp
imul
sbb
icebp
cmp
and
mov
movs
call
aas
fmul
xchg
xchg
push
cmp
addr16
cwde
mov
stos
pop
les
add
icebp
in
or
xchg
mov
jmp
lds
jb
fisttp
ret
push
nop
pop
iret
sub
mov
xchg
or
and
fscale
fstp
inc
iret
mov
(bad)
mov
dec
mov
push
je
xlat
push
xor
retf
js
pop
fs
jecxz
inc
out
loope
or
push
iret
xor
mov
sar
mov
stos
in
inc
imul
fs
sbb
lds
jmp
mov
cmp
and
into
add
test
nop
mov
xchg
mov
add
pushf
or
and
cmp
movs
jg
mov
mov
inc
into
mov
or
hlt
retf
sbb
sar
dec
jmp
nop
add
aaa
xor
pop
fimul
jmp
movs
and
call
int
call
imul
jno
push
pop
cmp
scas
(bad)
(bad)
out
jmp
retf
ror
and
adc
neg
dec
lds
out
cmp
xchg
mov
mov
lahf
call
out
ret
das
push
jp
(bad)
dec
ds
movs
loope
cmps
test
adc
mov
lock
test
pop
stc
inc
jo
dec
sbb
adc
sbb
lock
into
pop
(bad)
sbb
cmp
fistp
dec
adc
cdq
in
jno
loopne
test
mov
int
jb
xchg
pushf
test
mov
je
dec
gs
sbb
mov
push
test
mov
push
stos
fsubr
cmps
mov
xor
inc
aad
push
je
mov
or
(bad)
sub
lods
inc
dec
jne
mov
pushf
inc
cmp
adc
mov
shr
mov
dec
xor
jmp
jg
sub
dec
push
enter
in
pop
push
popa
xor
dec
sbb
daa
xchg
rol
ds
(bad)
cmp
adc
xchg
jmp
mov
or
and
cmps
fnsave
dec
neg
test
adc
movs
cmp
sbb
jle
idiv
sub
out
loopne
xchg
ins
iret
push
test
outs
jno
push
mov
pop
push
test
xor
pop
mov
stc
inc
pop
(bad)
in
push
cs
test
(bad)
fmul
loop
dec
mov
mov
adc
jmp
retf
in
ins
test
mov
dec
mov
and
(bad)
inc
test
ret
adc
lods
add
push
inc
jne
icebp
cmp
sbb
lea
xor
out
xchg
es
stc
push
push
outs
aam
in
es
fidiv
sbb
loope
retf
inc
stos
sbb
pop
and
xchg
xchg
mov
fst
inc
out
adc
or
xchg
jne
popa
movs
push
xchg
outs
stos
ficom
jp
sbb
and
pop
outs
pop
cmp
daa
es
ins
cmp
dec
adc
sbb
jge
lods
xlat
xor
xchg
add
fidiv
jl
ret
xchg
leave
test
push
(bad)
lock
adc
in
lds
add
xchg
cmovae
cwde
xchg
mov
sub
and
mov
stos
pop
loope
add
push
mov
repnz
or
or
repz
xor
and
mov
aas
push
mov
ror
pop
call
mov
or
out
(bad)
jno
xchg
dec
lock
je
sub
adc
mov
xchg
out
outs
mov
or
sbb
sbb
jo
or
mov
xor
or
mov
mov
repnz
inc
mov
in
mov
sbb
inc
jmp
and
sub
pop
clc
arpl
push
lods
sti
xchg
shr
or
retf
adc
xchg
enter
push
dec
jae
pop
test
stos
inc
sbb
mov
mul
xor
fwait
sub
lock
mov
or
popf
pusha
lahf
cld
stos
or
daa
dec
xchg
aam
sub
add
mov
cs
enter
popf
jne
and
nop
(bad)
sbb
jg
adc
std
loop
jmp
shr
leave
out
ret
sub
mov
stos
in
mov
xchg
pop
dec
js
movs
daa
daa
(bad)
imul
div
out
stos
bound
mov
mov
dec
pop
in
push
push
dec
jnp
add
pop
shl
jmp
adc
imul
or
cdq
neg
into
xchg
in
xabort
push
add
inc
ins
sahf
lock
xchg
mov
fwait
out
int
dec
jecxz
cmp
test
fild
pop
sbb
xchg
shl
xor
mov
mov
test
sub
mov
inc
cmp
imul
aad
add
sub
ss
mov
ror
jmp
cmp
xchg
dec
aas
jl
arpl
sub
(bad)
jb
mov
xchg
jl
push
repnz
adc
and
pop
lea
dec
es
jb
rcr
mov
gs
pop
pusha
(bad)
imul
inc
adc
inc
retf
icebp
fcomi
jmp
bsr
or
xchg
sbb
pusha
xor
xchg
push
in
mov
adc
ins
mov
pop
xchg
sub
fnstcw
out
jns
rol
add
adc
mov
test
push
dec
addr16
pop
leave
popa
fdiv
test
xchg
push
outs
and
xchg
push
lods
jl
(bad)
int3
and
mov
push
addr16
dec
pop
xchg
mov
test
(bad)
in
pop
cmp
mov
shr
ror
aas
push
mov
sbb
sbb
(bad)
xlat
inc
loop
and
fcomp
jno
pop
daa
dec
sub
cmps
pop
push
inc
xchg
mov
sbb
jmp
rcr
(bad)
rcl
test
mov
popf
mov
test
mov
cli
add
sbb
sbb
xchg
jae
cmc
fsubr
and
mov
retf
pop
test
retf
sbb
imul
xlat
repz
stc
test
movs
jecxz
aas
ins
leave
inc
call
(bad)
sub
bound
inc
fisub
aad
jo
mov
inc
lahf
das
fucomi
inc
rcl
out
call
in
outs
pop
mov
dec
int3
sub
(bad)
cwde
in
xchg
cmps
xchg
call
idiv
cmp
xor
mov
xor
ret
and
ins
cmp
outs
aaa
fnstsw
add
jl
and
fisub
out
ret
aaa
cmp
jmp
dec
repnz
cmp
xlat
mov
inc
pop
inc
xor
test
(bad)
out
sti
fbld
dec
aad
inc
adc
mov
dec
stc
out
ds
dec
jns
sub
cli
daa
scas
adc
pop
in
mov
mov
loopne
push
or
data16
push
cmp
xchg
inc
test
(bad)
sar
mov
mov
out
(bad)
lea
ffree
or
sub
movs
gs
ins
clc
jp
cmp
shr
cli
pop
jmp
retf
in
xor
sahf
mov
mov
xchg
daa
mov
cmp
sbb
sbb
retf
idiv
push
fisubr
scas
push
mov
(bad)
lods
loope
jle
ins
enter
mov
aaa
hlt
cli
test
test
outs
mov
ins
cmp
lds
bnd
test
and
push
dec
or
outs
jle
nop
jns
or
push
jmp
xchg
dec
in
bound
mov
push
stos
cmp
adc
rol
xchg
mov
out
pop
test
js
jns
mov
mov
pop
push
inc
iret
ins
sar
dec
mov
dec
xlat
push
retf
jbe
iret
rcl
gs
adc
outs
test
mov
adc
movs
adc
dec
enter
or
addr16
loopne
cmp
xchg
test
mov
cmps
pop
sub
inc
pop
mov
cmp
pop
hlt
adc
push
aam
not
pop
xor
pop
add
and
adc
mov
mov
retf
repz
jnp
xchg
iret
fwait
leave
and
inc
adc
push
inc
out
mov
inc
xor
jecxz
mov
sbb
adc
pop
cli
in
push
lods
hlt
add
jmp
out
iret
push
inc
test
enter
xor
lods
lods
mov
aaa
clc
(bad)
fld
push
mov
push
outs
or
lock
lods
xchg
dec
arpl
jmp
cmp
aaa
xchg
inc
sub
and
push
(bad)
(bad)
push
or
push
aam
mov
push
aam
jmp
cld
jno
das
loope
xchg
or
pop
mov
and
cmp
mov
(bad)
inc
xchg
fld
xor
mov
jg
jmp
xchg
sbb
ins
out
pop
pop
xor
sub
not
leave
cmp
xchg
xor
adc
cmc
call
scas
mov
add
fstp
cmp
dec
in
movs
ins
and
lock
ret
xlat
jecxz
outs
mov
dec
dec
jnp
push
sbb
pop
jnp
xchg
in
dec
cmp
pop
pushf
and
fisttp
mov
jmp
in
sar
ss
mov
cmp
in
push
seto
div
cld
test
mul
fwait
(bad)
mov
fnstcw
out
adc
jae
jnp
mov
pop
rol
loopne
jl
cwde
add
add
sbb
add
pop
fisttp
scas
data16
sbb
or
in
test
sbb
mov
clc
sbb
inc
sbb
adc
scas
dec
aas
pop
fsqrt
daa
dec
out
les
movs
cmp
push
pop
sbb
pop
or
and
dec
adc
or
adc
lock
inc
xchg
out
sahf
cmp
lds
xor
mov
jp
cwde
pop
or
inc
in
lahf
mov
mov
mov
scas
pushf
leave
dec
sub
daa
add
jmp
in
pop
push
fisubr
out
leave
mov
push
pusha
bnd
icebp
int
ja
repz
int3
push
push
jle
or
xlat
out
xchg
jb
movs
inc
clc
jne
mov
(bad)
mov
jbe
aas
xor
(bad)
(bad)
out
xchg
and
pop
retf
lea
repnz
std
jno
icebp
mov
imul
pop
mov
xchg
fldenvw
push
jp
aad
enter
aaa
push
xlat
ror
in
jmp
aaa
std
cmp
dec
jecxz
xor
cmps
nop
bnd
sbb
jp
push
dec
cmp
(bad)
jle
test
(bad)
push
jle
jno
dec
aad
(bad)
pop
sbb
repnz
push
sbb
or
fs
loope
retf
mov
outs
mov
push
sti
addr16
mov
pop
dec
sub
cs
push
sbb
mov
add
push
and
shr
xchg
lea
sbb
ss
push
jbe
jp
dec
cmps
xchg
cli
dec
in
jne
dec
data16
xor
mov
mov
xor
xchg
mov
add
scas
pop
sub
fadd
mov
mov
jnp
ror
imul
push
ds
dec
jecxz
ds
lods
test
push
retf
imul
and
mov
sub
fldcw
or
jae
cli
mov
mov
jmp
push
in
xlat
pop
xchg
adc
div
push
cmp
mov
jp
dec
adc
sbb
cmps
dec
inc
mov
cmps
xor
jg
dec
jbe
and
out
es
pop
out
jb
jmp
shr
mov
cmp
movs
in
xchg
clc
test
xchg
and
sbb
cmc
call
sbb
push
gs
sahf
or
push
inc
movs
ds
jmp
ins
fcomp
cmp
mov
and
xchg
and
dec
mov
outs
dec
push
push
dec
cld
xor
cli
jne
std
repnz
push
(bad)
ins
pusha
push
sbb
retf
jno
mov
gs
push
pop
rcl
xor
int
ins
or
aaa
jge
stc
cmc
push
push
mov
loopne
aaa
and
dec
inc
mov
pop
add
enter
rcr
xchg
mov
lahf
add
fisubr
or
fs
movs
lock
xor
lds
push
jl
call
shr
or
cmc
ss
call
mov
fldenv
jnp
and
mov
repnz
fisttp
push
xor
cs
movs
shl
jne
les
ja
xchg
xchg
pop
xchg
lods
frstor
push
scas
test
pop
jecxz
stos
stc
pusha
ror
add
pop
push
and
inc
jne
das
push
mov
sti
adc
mov
mov
cmps
pusha
lock
ins
and
jne
mov
ins
jmp
sbb
shr
jmp
ret
jne
iret
push
push
hlt
js
lock
mov
pop
sar
fisubr
les
movs
jno
jb
cmp
dec
pop
or
jge
xor
das
mov
push
aaa
sbb
xchg
lods
inc
test
mov
adc
test
cwde
pop
ins
push
shl
inc
or
adc
fist
mov
gs
xchg
xor
and
(bad)
adc
xor
test
xor
mov
mov
and
les
frstor
adc
mov
popa
jb
(bad)
aad
xchg
xor
scas
xchg
push
outs
add
inc
fcom
mov
mov
jb
and
nop
cmp
mov
mov
dec
retf
adc
cmps
adc
pop
cli
lock
(bad)
xor
arpl
or
scas
or
xor
jno
mov
and
hlt
pop
stos
sub
or
xchg
in
scas
js
jl
outs
fsubr
mov
fdivr
mov
rsm
or
add
shl
shl
cmc
pop
es
ins
cli
outs
ffree
in
push
jno
mov
pop
fist
fld
daa
jb
dec
add
push
xor
sbb
dec
push
mov
retf
inc
cmps
loopne
(bad)
movs
ins
and
dec
rcl
ins
add
cmps
mov
mov
aad
sbb
add
ror
jmp
adc
rol
jnp
and
jnp
mov
mov
sti
add
call
scas
aam
imul
xchg
adc
adc
sbb
inc
scas
sbb
shl
add
mov
push
cmps
scas
out
cmp
movs
pop
xor
(bad)
lahf
(bad)
cmp
inc
outs
sub
mov
mov
test
inc
sub
movs
fnstsw
mov
or
pop
ins
mov
inc
sbb
inc
in
xchg
mov
cli
mov
or
mov
mov
daa
cmp
adc
(bad)
mov
movs
movs
fcom
push
mov
jl
or
cmp
test
int
cmp
fisttp
jne
jns
addr16
mov
adc
aaa
add
arpl
xchg
hlt
daa
pop
mov
inc
cmp
cmp
rcr
js
sub
and
out
fnstcw
or
sub
xlat
iret
dec
mov
pop
pop
pushf
pop
int3
ret
mov
sbb
shl
rol
pop
pop
scas
ins
ja
xor
add
lods
sbb
jg
inc
call
and
dec
mov
xchg
mov
scas
pop
dec
fist
es
sbb
mov
leave
aas
loope
add
fiadd
inc
shl
sar
in
jb
movs
loope
nop
js
(bad)
dec
dec
xchg
adc
clc
nop
sub
or
add
in
lods
or
ins
jl
or
mov
leave
test
pop
sbb
sbb
icebp
pop
inc
push
in
retf
lods
adc
enter
jmp
cs
mov
ins
int3
push
cwde
cld
mov
cmc
fcomip
movs
(bad)
das
push
nop
dec
pushf
movs
in
aad
fisubr
mov
xor
cmp
mov
mov
and
dec
push
repz
das
adc
mov
push
imul
stc
push
push
jns
push
sbb
mov
clc
hlt
retf
sbb
mov
adc
xor
push
lds
mov
lahf
cld
jae
fdiv
fcom
addr16
lahf
mov
stos
aad
retf
cdq
div
scas
mov
push
fmul
jg
cli
mov
pop
ror
cli
pusha
in
inc
mov
mov
xchg
mov
pop
in
enter
and
popa
pop
bound
dec
paddq
and
nop
push
sar
fs
sar
jg
les
lock
mov
dec
aaa
fdivr
leave
ins
sub
lahf
sbb
gs
and
sub
mov
push
movs
lods
dec
daa
cmps
jno
xchg
ror
add
movs
nop
jp
repz
je
pop
cmps
sbb
(bad)
push
and
fcmovu
ds
and
add
pusha
jecxz
iret
cmps
xchg
imul
mov
je
enter
mov
sub
adc
test
pop
sub
and
jmp
stos
add
xor
adc
movs
sbb
mov
sbb
push
adc
hlt
dec
cmp
out
sbb
(bad)
gs
and
repnz
pop
fwait
inc
push
fwait
mov
and
xlat
adc
mov
jmp
sar
fidiv
adc
das
fsub
xor
popf
call
iret
imul
cmps
les
mov
xor
and
daa
sar
xchg
mov
inc
lds
imul
xlat
ds
out
test
pop
fnstenv
lock
or
or
jge
pop
xor
test
in
repnz
aaa
or
enter
sbb
aam
nop
sbb
mov
cmp
(bad)
jo
pop
mov
cld
pop
dec
and
xchg
cld
(bad)
out
add
cs
sbb
pop
sahf
imul
inc
pop
jmp
and
inc
test
and
fbld
sbb
mov
cdq
imul
push
and
xchg
pop
gs
cli
icebp
xchg
and
xor
scas
call
fwait
les
ficomp
lds
mov
das
std
popf
aam
push
in
cmps
out
aam
fcmovb
sub
sbb
inc
jbe
push
mov
sub
pop
sub
(bad)
jno
mov
jne
add
stc
xor
sub
inc
dec
jp
pop
adc
lock
inc
shl
bound
loope
mov
xchg
and
in
pop
ret
or
sub
(bad)
pushf
ds
jb
mov
mov
dec
jne
repnz
setp
cwde
xchg
push
(bad)
into
icebp
cmp
mov
adc
(bad)
lock
pop
movs
shr
icebp
rcl
or
ds
dec
push
in
adc
sbb
xor
sti
loope
push
nop
shl
inc
mov
test
mov
or
xor
xor
mov
mov
fld
or
repz
in
mov
xchg
jmp
add
pop
dec
out
push
inc
(bad)
gs
pop
enter
pop
bnd
pop
repz
movs
pop
mov
or
fwait
inc
out
jl
and
pop
jg
aas
rcr
pop
pop
movsx
dec
or
add
pop
and
cmps
test
fnstsw
test
jns
xor
cmps
cmps
cli
mov
cmp
push
push
cdq
xor
out
pop
mov
lea
cmp
push
iret
xchg
cmc
cld
dec
aaa
arpl
lea
outs
and
lahf
lahf
pop
(bad)
(bad)
xor
pop
dec
into
aas
enter
adc
ins
cmp
push
ds
popa
icebp
cdq
lock
adc
cmps
or
das
sub
xor
jno
mov
outs
add
and
sub
lods
ss
jmp
into
cmp
mov
push
jmp
jnp
inc
adc
and
shr
jbe
jle
out
jns
sahf
shl
shr
mov
aaa
aaa
or
ret
repnz
scas
sbb
(bad)
pop
ret
pop
(bad)
pusha
inc
inc
inc
push
or
(bad)
(bad)
sub
je
stos
jle
jle
pop
pop
(bad)
shl
add
popa
xchg
lea
or
jbe
popf
rcr
fnstenv
dec
int3
xor
test
mov
jo
sub
mov
inc
fsub
pop
xor
mov
jmp
cmp
xor
inc
scas
xor
aam
inc
or
adc
mov
out
and
sti
test
cmp
outs
mov
adc
mov
repz
and
push
repnz
pop
test
dec
enter
jo
sub
paddsb
mov
(bad)
mov
pop
test
out
pop
into
mov
inc
mov
outs
or
or
sbb
fidivr
cs
inc
push
pop
(bad)
sahf
xor
loopne
add
cmp
or
data16
jb
xchg
clc
jnp
push
xor
and
adc
add
test
ror
jecxz
ins
jbe
(bad)
cmp
sbb
xlat
jp
and
fadd
mov
sub
cmp
jle
ret
pop
je
sub
fcmovbe
retf
mov
mov
xlat
adc
aam
scas
jmp
stc
jle
fs
xor
call
xchg
test
cmp
mov
inc
pop
or
fadd
leave
add
jecxz
(bad)
gs
test
add
pop
adc
add
push
cmps
repz
push
inc
ins
xor
jp
push
pop
or
(bad)
xchg
fsub
in
dec
pushf
daa
in
xor
loop
add
add
dec
cmc
adc
cli
xor
bound
nop
sbb
push
sti
mov
ja
pop
pop
jl
icebp
in
add
ins
xchg
js
les
cmp
push
jne
sbb
cmc
retf
loop
inc
fwait
sar
js
retf
(bad)
mov
sub
jno
test
pop
pusha
out
cmp
mov
test
xchg
int3
mul
mov
aam
xor
popf
mov
dec
adc
pop
std
and
mov
sub
movs
mov
push
xlat
push
mov
mov
jnp
sub
outs
lds
cmps
retf
fidivr
jae
add
outs
inc
xor
in
mov
test
xor
and
pop
pop
fs
pop
cmc
retf
ror
adc
cmc
push
outs
mov
popf
ins
es
movs
jae
add
adc
ror
cmp
inc
stos
xchg
sbb
and
les
mov
pop
sar
inc
cwde
fld1
bound
iret
cmc
nop
and
mov
stos
outs
sub
mov
sub
xchg
xor
sbb
stos
inc
xor
mov
inc
mov
sbb
movs
retf
in
push
stos
inc
jb
and
ins
(bad)
adc
add
scas
repz
inc
(bad)
push
in
addr16
lock
cmp
loopne
fbstp
icebp
lds
push
retf
int
inc
xor
enter
popf
push
mov
ja
movs
jle
xchg
and
mov
retw
sti
icebp
retf
fwait
add
sti
inc
shl
retf
loop
cli
xchg
inc
sub
xchg
mov
aas
in
fcos
outs
loope
shl
mov
sbb
mov
retf
cmp
das
mov
mov
cli
jmp
out
mov
and
pushf
mov
dec
es
cmp
dec
jmp
out
movs
xchg
adc
mov
or
xchg
jns
adc
dec
movs
and
adc
stos
cmp
lds
and
(bad)
not
stc
xor
jmp
pusha
jno
nop
imul
ja
stos
nop
push
iret
(bad)
cmc
pop
and
mov
xor
xchg
repz
rol
loope
dec
das
pop
outs
push
dec
cmp
adc
arpl
sub
into
cmp
call
cmps
arpl
cmp
ficomp
lea
xor
push
adc
pop
lea
cmp
push
xchg
mov
adc
cs
cmc
and
pop
jo
pushf
adc
enter
jge
addr16
jo
outs
mov
sahf
xchg
push
call
mov
pushf
movs
aad
test
push
(bad)
sbb
fistp
popa
or
dec
data16
lea
xor
neg
add
mov
xor
call
mov
std
sub
fcom
test
cvttps2pi
into
lods
retf
jg
rcr
xor
arpl
mov
fisub
push
push
retf
or
xchg
imul
jmp
int
xor
and
leave
add
fs
lods
fs
ss
inc
mov
dec
adc
lods
push
je
mov
mov
pop
test
ret
push
xchg
xchg
inc
sbb
push
xchg
dec
jns
test
cmp
mov
push
daa
fisub
jl
outs
dec
movs
mov
and
imul
xor
in
and
jne
dec
outs
cmp
js
lea
add
into
push
in
outs
repnz
cdq
daa
xchg
cwde
mov
xchg
aad
pusha
sti
les
pop
mov
mov
dec
mov
sbb
fs
dec
cs
in
popa
fld
and
jecxz
pop
dec
popa
(bad)
add
adc
inc
jns
push
hlt
stos
mov
fadd
retf
xor
mov
outs
aad
lahf
mov
sbb
jmp
cmp
iret
lock
ds
sub
(bad)
sbb
mov
adc
add
repz
call
jmp
or
jbe
xchg
and
xor
jne
fimul
add
sub
lods
push
xor
(bad)
(bad)
rol
sbb
ret
add
scas
jle
push
add
ja
cmps
xor
shr
rcl
ret
push
mul
fchs
pop
fcmovne
(bad)
and
mov
mov
sbb
pop
fisttp
pop
(bad)
xchg
fcomi
mov
adc
xchg
or
into
push
xchg
pop
mov
pop
inc
xchg
jno
sub
mov
daa
mov
sbb
aam
jno
nop
inc
in
fistp
or
adc
xchg
jb
pop
shl
mov
fadd
mov
push
ja
jnp
(bad)
jbe
pop
iret
cmp
jo
cmp
scas
leave
xchg
sbb
xchg
push
mov
sub
sub
mov
sets
cmp
popa
sbb
mov
or
xchg
xor
jl
js
(bad)
adc
sbb
push
into
aad
ret
jns
add
add
(bad)
jmp
adc
cmp
sub
mov
pop
inc
ins
xlat
or
jmp
daa
jb
fiadd
xor
inc
push
test
jbe
inc
dec
inc
pop
mov
jecxz
nop
cdq
das
push
jno
out
rcr
jecxz
test
lds
loope
mov
xchg
dec
test
mov
mov
sub
pop
mov
je
push
dec
nop
jb
out
int
aam
pop
or
pop
cmps
sbb
enter
fisttp
mov
dec
mov
jb
lock
push
cmp
sbb
add
cli
into
xor
shl
aaa
or
sbb
inc
xchg
sub
dec
imul
pop
lahf
mul
(bad)
stc
fcomi
and
push
scas
das
cwde
div
into
loopne
adc
repnz
dec
cmp
cmp
adc
mov
pusha
jmp
movs
pop
dec
clc
clc
cmps
mov
sub
sti
bound
pop
loope
divps
aas
jno
popf
sbb
sbb
ss
and
movs
inc
jb
cmp
sbb
inc
shl
or
cmps
inc
sbb
push
pop
xor
push
dec
jmp
sahf
sub
outs
movs
bound
cmp
or
jmp
je
mov
xor
lahf
push
jnp
pop
sub
lods
mov
inc
mov
mov
ds
mov
or
or
sub
jl
test
imul
repz
scas
jno
pushf
call
loope
dec
out
std
out
aaa
cs
xor
sahf
jecxz
dec
mov
mov
pop
fwait
push
mov
jae
inc
sbb
xor
or
in
mov
jbe
jl
dec
js
mov
mov
add
jmp
popa
cwde
ins
outs
es
fistp
gs
sub
jns
imul
mov
ror
fstp
(bad)
rol
aad
sub
xchg
outs
dec
ret
dec
test
ss
cwde
mov
mov
(bad)
dec
jbe
jbe
popf
stos
mov
rep
imul
xlat
mov
outs
mov
and
nop
shr
mov
iret
inc
fwait
stc
lds
add
xchg
cmps
pop
clc
mov
shl
fnstcw
into
xor
mov
jmp
fisttp
xor
sub
add
cdq
xor
call
dec
test
mov
xchg
call
dec
push
push
rcl
cmp
cmp
(bad)
mov
(bad)
sub
push
mov
ret
pop
push
call
les
cwde
out
call
sbb
out
mov
cld
je
sbb
js
push
outs
and
mov
retf
pop
fsub
enter
in
shl
fdiv
push
clc
outs
mov
mov
fdivr
xor
xor
aas
cmp
scas
dec
dec
adc
pusha
lea
push
test
aas
gs
jmp
cmps
adc
test
jg
das
jecxz
jmp
push
mov
or
inc
and
mov
das
push
and
pop
lock
adc
je
shld
mov
mov
pop
xchg
leave
shl
(bad)
hlt
push
push
int
mov
sti
out
cmp
add
es
jns
das
pop
aas
rcl
dec
add
mov
cmps
cmps
dec
aam
mov
mov
sbb
mov
dec
jnp
inc
push
sub
xchg
(bad)
fadd
shl
mov
out
jg
pop
mov
out
inc
cmp
(bad)
retf
adc
das
icebp
xchg
ins
mov
jnp
aas
stos
nop
mov
mov
je
xor
adc
sub
cld
push
mov
call
adc
stc
mov
adc
rcl
ja
or
jbe
adc
adc
sbb
fadd
loopne
loopne
xchg
mov
cmp
(bad)
jnp
jecxz
out
sbb
cli
addr16
mov
addr16
or
add
mov
in
adc
xchg
imul
xchg
fwait
or
mov
jg
add
and
aad
sub
icebp
outs
imul
cmc
movs
or
mov
sub
fild
jp
mov
push
imul
add
sub
inc
mov
cmp
das
imul
(bad)
mov
and
pop
iret
aam
aad
adc
jmp
adc
call
xlat
jo
xor
sub
test
jmp
std
xchg
icebp
fstp
pop
bound
cmp
dec
pushf
imul
(bad)
pop
jno
movs
cmps
inc
or
popf
mov
or
cmc
sbb
adc
sbb
xchg
and
xchg
jns
cmp
mov
and
mov
into
sbb
pop
add
push
pop
add
or
outs
jb
and
push
mov
mov
cli
test
dec
in
data16
imul
jbe
adc
xlat
dec
test
enter
je
sub
jecxz
mov
inc
adc
mov
jmp
cli
cwde
shl
movs
and
add
fisub
jne
add
mov
clc
sti
dec
and
lods
xor
pop
pop
mov
push
fs
and
or
inc
clc
push
fwait
hlt
add
fist
mov
push
(bad)
loope
or
or
pop
xchg
dec
cmovge
sub
pop
ss
ins
or
(bad)
into
das
push
scas
adc
push
test
daa
mov
jns
mov
jnp
push
int
pop
add
inc
adc
or
xchg
or
inc
cmp
inc
(bad)
jecxz
std
push
fwait
in
jl
ds
mov
push
les
adc
inc
cmovno
push
pushf
cdq
in
adc
inc
sub
fimul
xchg
sub
out
inc
adc
pusha
jmp
movs
push
js
movs
or
cwde
pop
in
cmps
adc
loop
cmc
sub
mov
lahf
adc
jmp
push
scas
sbb
sti
pop
pop
dec
adc
mov
and
add
call
xchg
sub
les
ret
mov
push
pop
and
cmp
ins
(bad)
dec
cmp
jbe
popf
(bad)
adc
sub
jo
test
icebp
or
mov
jo
(bad)
mov
pop
inc
cmp
mov
and
je
sbb
enter
inc
sahf
xchg
mov
dec
cdq
mov
mov
in
fisub
pop
fld
xchg
add
sbb
jp
lods
loope
xlat
shl
xor
in
in
int3
out
and
mov
sub
(bad)
mov
jne
js
std
and
fdiv
adc
mov
mov
cmps
inc
adc
ret
push
mov
gs
cmps
push
dec
cwde
gs
xor
mov
test
xor
aas
aas
dec
jle
mov
cmc
adc
mov
lds
mov
mov
dec
jmp
sub
mov
pop
push
shl
cmps
cmc
cmp
lock
xor
fidivr
inc
xchg
je
adc
icebp
dec
or
and
pop
cs
jmp
and
outs
xor
mov
ins
dec
out
(bad)
sbb
imul
mov
sub
sbb
jbe
test
stos
sbb
and
outs
out
ds
cmps
sbb
ins
add
mov
push
cs
int
inc
in
outs
(bad)
retf
push
inc
adc
fidiv
addr16
hlt
pop
int3
xchg
lea
ss
neg
mov
(bad)
sbb
sub
dec
push
repnz
test
rol
mov
pusha
in
mov
out
inc
mov
lods
fstp
add
lods
sbb
stc
xchg
mov
or
and
dec
test
fnstsw
rcr
and
pop
dec
ins
sbb
add
popf
aaa
xchg
sub
or
cmp
sbb
dec
repz
mov
test
inc
popa
std
push
jg
pop
shl
lds
xor
mov
dec
and
xor
xlat
jle
cmc
nop
push
sti
xor
(bad)
xor
inc
ror
repnz
es
imul
mov
push
push
adc
sbb
push
xor
imul
adc
adc
push
sbb
mov
(bad)
hlt
dec
out
push
cs
test
jb
cmc
cmp
inc
les
mov
lods
fisubr
int3
xchg
pop
outs
rcr
inc
fmul
and
pop
lods
push
add
jno
(bad)
pop
and
sbb
cwde
adc
xor
inc
loopne
xor
pop
sub
pop
sub
pop
lods
iret
mov
mov
push
call
dec
ret
sub
js
sbb
sbb
pop
clc
mov
sub
arpl
loope
das
dec
fwait
je
loop
aad
fadd
mov
pop
jp
sub
pop
xor
call
pop
cmp
push
mov
stos
mov
pop
dec
push
and
mov
and
xchg
stc
fisub
fistp
or
imul
and
sbb
sbb
jbe
test
popa
push
mov
retf
(bad)
xchg
and
into
cmp
test
inc
rcr
dec
imul
sub
bound
daa
clc
push
mov
mov
aas
dec
imul
mov
les
imul
push
sbb
loopne
fdiv
sbb
int3
jo
xchg
lods
dec
mov
xchg
lods
js
mov
and
fimul
jmp
scas
jecxz
ja
sahf
aas
loope
pop
fisub
dec
in
fs
(bad)
arpl
pop
jmp
sti
repz
aad
repz
pop
sbb
(bad)
add
das
cmp
sub
mov
pop
mov
cwde
data16
and
pop
repz
enter
push
cmp
dec
pop
dec
jp
jne
in
outs
imul
gs
mov
or
sbb
jl
ret
mov
sub
cwde
mov
mov
and
popa
fs
jmp
out
jp
adc
aam
in
ret
push
pop
mov
addr16
adc
pop
mov
inc
fdivr
sbb
out
mov
xchg
ficomp
xchg
shr
mov
add
sbb
inc
in
inc
inc
dec
mov
imul
xlat
test
icebp
mov
fld
aam
imul
pop
scas
sub
test
push
(bad)
mov
iret
sahf
lock
adc
push
ret
pop
ret
stos
les
enter
frstor
retf
pushf
cmc
push
mov
sahf
out
jne
pusha
inc
pop
xchg
jmp
jnp
add
rcl
sub
or
adc
mov
aas
mov
addr16
inc
les
retf
in
loope
sub
push
dec
mov
push
dec
xchg
stc
mov
out
xor
stos
call
cmp
fld
iret
add
js
or
sub
shl
sub
stc
cmps
mov
dec
sahf
jno
or
fisttp
mov
mov
adc
jne
je
test
pop
pop
xor
sbb
cmps
mov
mov
mov
xchg
dec
imul
lock
push
nop
inc
into
mov
popf
mov
and
ins
and
loope
imul
add
fsub
mov
lods
sub
rol
nop
adc
jb
movs
or
mov
dec
test
shl
lock
push
dec
inc
xchg
sub
in
shl
test
test
test
and
jp
adc
xor
cmp
xchg
xor
ins
gs
pop
push
inc
retf
xor
inc
outs
shl
jp
retf
into
lods
(bad)
aam
loop
fistp
xor
jge
mov
xlat
sbb
cld
mov
stc
repz
ficom
std
iret
push
push
pusha
inc
call
add
call
repz
jmp
aaa
pusha
push
jno
dec
cmps
adc
(bad)
cmp
mov
xchg
add
(bad)
out
fcomp
inc
push
div
inc
adc
mov
dec
leave
(bad)
sub
pushf
pop
(bad)
cld
sbb
dec
push
xchg
push
call
jb
js
jo
dec
mov
fmul
cmc
push
mov
adc
ret
xor
and
push
mov
or
test
pop
lahf
adc
div
and
xchg
pop
mov
mov
pushf
(bad)
push
jae
pop
pushf
mov
inc
mov
xor
cmp
dec
jno
ffree
rol
aad
inc
popa
rcr
adc
push
and
out
mov
in
call
stc
ret
mov
adc
(bad)
cmp
outs
jge
mov
mov
mov
leave
not
push
ret
js
xor
jle
mov
lock
lea
jl
and
iret
xchg
lock
xchg
movs
jno
adc
adc
(bad)
push
mov
fwait
repz
sbb
inc
lods
cmp
adc
rcl
cmps
fcmovne
pop
sub
sub
add
pop
sbb
sti
pushf
repnz
scas
adc
pusha
(bad)
sbb
lahf
out
cmp
push
or
mov
xor
pusha
mov
add
aam
cs
lahf
jg
xor
sbb
inc
sub
lock
retf
loope
mov
add
mov
enter
(bad)
imul
in
mov
xchg
ds
xor
scas
ins
inc
rcl
enter
xchg
lds
mov
pop
lea
and
push
mov
adc
inc
fwait
and
ins
jge
inc
(bad)
cs
sbb
inc
cmp
loop
inc
add
mov
in
stos
loop
dec
xor
inc
ret
test
cs
mul
mov
inc
sar
inc
iret
lods
mov
ins
popf
vsqrtsd
retf
lds
in
mov
mov
movs
ins
dec
cwde
adc
xchg
scas
and
in
cmps
cmp
repnz
push
lods
stc
adc
adc
lahf
add
dec
and
mov
ror
in
cmp
jno
mov
ins
cmp
(bad)
sar
hlt
mov
es
cld
movs
lods
arpl
stos
or
pop
mov
add
retf
shr
shl
jno
and
aaa
je
in
fidivr
jge
test
xchg
xchg
mov
or
adc
shr
sub
int
(bad)
xor
or
daa
cmps
loop
inc
inc
pop
fs
aas
cmp
aam
mov
mov
das
gs
sub
sub
pop
add
jecxz
xor
mov
inc
in
push
imul
or
sbb
mov
fs
or
adc
mov
push
jnp
repz
sub
dec
cli
sub
sub
mov
cmp
das
(bad)
loope
out
jge
xchg
add
mov
adc
mov
sbb
mov
cmp
mov
sub
xchg
or
sbb
stos
sub
dec
cli
or
gs
sub
mov
retf
xchg
dec
pusha
retf
sbb
xchg
dec
fist
adc
daa
xlat
imul
test
add
in
xor
pmulhw
jo
pop
addr16
inc
mov
xchg
(bad)
cmp
and
mov
call
add
sub
jg
inc
push
xor
lds
leave
mov
fcomp
rcr
jnp
test
pop
adc
sbb
fisub
mov
sbb
js
push
les
popa
push
add
out
retf
bound
call
mov
mov
js
adc
cmps
idiv
sub
in
test
inc
cld
or
loop
dec
xor
clc
dec
or
ret
sub
jle
push
movs
enter
or
mov
adc
add
sbb
or
mov
xor
and
jae
(bad)
cmps
out
imul
fisubr
fwait
cs
popf
mov
call
add
add
pusha
inc
mov
out
adc
and
and
mov
fdivr
stos
mov
mov
pop
jp
sub
sbb
call
and
push
sub
dec
xchg
mov
xor
in
mov
pop
pop
fwait
xchg
adc
or
int3
fs
pusha
mov
mov
outs
jmp
cmpxchg
jle
icebp
test
push
ins
mov
(bad)
aad
jmp
jl
je
nop
add
daa
adc
push
sub
daa
jecxz
pop
mov
xchg
and
out
xchg
outs
out
mov
mov
imul
pop
fisub
mov
xchg
mov
xor
fimul
mov
push
and
js
sbb
jecxz
fist
data16
or
inc
inc
(bad)
xchg
or
out
mov
add
(bad)
jne
adc
adc
pusha
ret
xor
mov
sbb
aad
mov
mov
pushf
mov
mov
push
add
bt
inc
mov
nop
ins
and
sbb
cmc
dec
imul
(bad)
nop
(bad)
ror
push
adc
(bad)
cmp
jb
xchg
movs
movs
jecxz
or
dec
push
icebp
jl
adc
bound
cmp
ret
movs
pop
lods
mov
inc
mov
icebp
cmp
lods
pop
add
adc
adc
sub
dec
imul
iret
out
and
mov
mov
and
push
pop
xor
jge
leave
pop
scas
jb
enter
in
push
add
push
mov
inc
adc
or
cmpxchg8b
and
inc
les
push
and
stos
mov
pop
stos
push
mov
push
sbb
mov
pop
add
jae
jl
cwde
and
idiv
dec
mov
mov
xchg
adc
cmps
cmp
fdivrp
sbb
lahf
mov
add
imul
fucomp
int
jne
aas
(bad)
cmp
xlat
arpl
and
xor
sbb
(bad)
ficomp
mov
jno
jae
mov
mov
div
movs
push
mov
add
cmp
(bad)
in
mov
data16
sti
icebp
sub
fwait
cmp
jg
add
dec
and
pusha
pop
mov
push
cld
lods
xor
mov
repnz
xchg
sbb
out
cmp
jmp
and
out
cld
xchg
mov
push
mov
jnp
pop
mov
pop
mov
call
test
pop
test
inc
cmp
out
and
mov
jmp
push
ins
jno
xor
data16
(bad)
je
mov
pop
rol
sbb
and
or
imul
repz
pushf
scas
loopne
sub
jl
loope
call
or
xlat
mov
mov
daa
arpl
(bad)
arpl
inc
adc
jge
(bad)
sbb
mov
test
xor
mov
mov
jae
popa
or
enter
adc
fild
cmp
cmp
add
add
outs
enter
fstp
jbe
lods
test
retf
jno
pop
in
in
xchg
cli
dec
pop
xor
and
xor
push
dec
repz
sbb
(bad)
fcmovb
hlt
fisubr
pop
jae
or
dec
icebp
es
(bad)
inc
cmp
fiadd
inc
test
repz
inc
(bad)
(bad)
sub
mov
mov
fnsave
(bad)
jne
fadd
retf
ss
ins
cwde
xchg
jb
and
test
stos
xor
imul
xchg
(bad)
fisttp
inc
or
xor
scas
imul
jnp
(bad)
mov
fiadd
inc
jle
je
sub
or
push
sub
pop
and
movs
cmp
stos
or
dec
pop
dec
fwait
push
cld
mov
cmp
int3
fwait
inc
adc
and
data16
shr
mov
push
sbb
std
enter
push
in
ds
jmp
ins
retf
and
fiadd
iret
or
push
hlt
scas
jmp
clc
call
ins
xchg
push
cmps
add
or
out
sahf
sub
sub
inc
shr
push
call
bound
lea
in
add
iret
ret
(bad)
or
mov
arpl
mov
mov
push
ds
frstor
aam
and
lds
retf
dec
sbb
push
imul
lea
in
je
and
jp
pop
repz
aaa
lahf
inc
inc
jb
dec
add
mov
(bad)
and
xchg
ror
mov
popa
je
pop
inc
mov
mov
and
mov
xchg
and
mov
(bad)
(bad)
not
retf
popf
jg
(bad)
shr
push
out
add
mov
sbb
adc
cs
add
pop
outs
xor
jo
lahf
push
add
push
in
js
xor
mov
loopne
lods
(bad)
out
jl
fadd
and
xlat
mov
mov
ret
ins
jecxz
lods
aas
cmp
retf
in
addr16
pop
adc
and
cli
idiv
test
inc
in
inc
sbb
sti
leave
jns
push
jp
xchg
scas
sbb
dec
and
push
sahf
dec
xchg
xchg
int3
aad
cmp
dec
icebp
lea
xor
mov
xchg
and
scas
sub
xchg
jle
xchg
sub
test
ds
aam
jo
and
mov
test
sbb
and
xor
inc
scas
sti
add
cmc
dec
dec
fmul
jg
push
pop
xchg
int
outs
cwde
and
and
xor
push
outs
pop
or
inc
int
inc
cmp
sahf
lds
or
and
dec
sbb
push
popa
jp
mov
pop
push
xchg
sbb
jns
(bad)
pop
fstp
and
lods
icebp
out
imul
arpl
arpl
push
jecxz
pusha
scas
mov
mov
aas
push
ret
push
stc
popa
mov
stos
icebp
cmps
sti
int3
(bad)
sahf
jbe
jp
or
xchg
xchg
or
std
inc
minps
push
or
mov
add
psubusw
fsubr
and
jmp
cld
pop
outs
inc
jl
in
xchg
repz
add
and
mov
and
enter
(bad)
stc
bound
xchg
mov
cmps
test
leave
sub
pop
rcl
mov
jmp
mov
inc
sub
shl
add
fldenv
push
call
cwde
push
lods
pop
rcr
adc
enter
sbb
(bad)
mov
dec
mov
cwde
call
cmp
ror
outs
push
jae
das
sbb
push
repz
lock
das
xor
inc
add
pop
inc
icebp
or
test
pop
mov
sub
repz
enter
jl
aaa
loopne
and
pop
lock
sbb
mov
inc
pop
call
call
in
sbb
adc
ret
or
inc
inc
inc
fst
clc
sub
mov
pop
cmp
(bad)
ficomp
and
outs
aas
int3
cmp
movs
ret
push
fdivr
ss
popf
push
mov
cmp
shl
mov
(bad)
addr16
popa
test
cmp
and
jecxz
jg
jns
jmp
mov
scas
ja
xchg
jmp
xlat
jle
jmp
or
sub
push
popf
(bad)
leave
enter
shl
retf
mov
into
test
jmp
bound
mul
or
les
mov
pop
dec
lods
data16
cdq
xchg
fidiv
mov
and
mov
mov
push
div
arpl
cmp
scas
sub
or
leave
sub
mov
xchg
and
dec
jecxz
mov
dec
das
(bad)
lods
ins
das
pusha
cmps
mov
aas
mov
push
gs
push
mov
and
test
inc
je
call
aad
cmp
adc
(bad)
cmps
data16
push
jecxz
jg
cmp
mov
adc
mov
cmc
and
xor
push
pop
mov
dec
fist
adc
repnz
mov
call
aaa
test
popa
mov
call
or
test
(bad)
lods
test
adc
cmp
mov
aaa
lods
xchg
push
sbb
sub
test
push
sbb
or
outs
sti
les
and
mov
push
stos
js
mov
ret
sub
popf
or
adc
and
and
or
cmp
int
sbb
clc
mov
add
mov
or
inc
push
xchg
xor
and
das
xchg
hlt
mov
mov
retf
out
add
pop
mov
xor
lods
mov
dec
shl
outs
retf
dec
in
(bad)
cdq
call
(bad)
or
inc
or
lods
mov
ror
in
dec
mov
add
fcmovb
hlt
mov
sahf
and
test
adc
dec
cmp
adc
push
or
sbb
fwait
popa
aas
cmp
out
out
rcl
movs
shl
lds
mov
push
(bad)
jo
neg
adc
ds
ins
out
gs
mov
xchg
mov
loopne
rcl
dec
call
jmp
sbb
in
rcl
(bad)
mov
cmps
xor
xchg
or
lods
das
push
shl
mov
inc
ins
jp
scas
ficomp
retf
aam
push
adc
cmp
mov
scas
jae
ret
push
sbb
imul
mov
and
xor
js
inc
xchg
inc
push
clc
pop
(bad)
adc
movs
scas
xor
and
repnz
push
fsub
sbb
add
hlt
cli
pop
cdq
sbb
adc
ja
fiadd
inc
dec
dec
pop
lds
cwde
call
xor
push
mul
out
arpl
outs
out
xlat
ss
add
cmp
fnstsw
mov
icebp
ror
xor
mov
adc
add
and
call
xchg
mov
push
dec
pusha
cmp
shl
ss
xchg
fmul
imul
lods
test
cmp
imul
stos
cmp
out
cmp
scas
pop
push
imul
or
sar
dec
addr16
ret
shr
cld
adc
rol
push
push
lea
fstp
je
cli
imul
mov
and
popf
and
jae
shl
sub
and
nop
in
into
push
fucomp
test
adc
ins
inc
cmp
ds
stos
rcr
or
jnp
mov
hlt
idiv
mov
lea
out
adc
fist
push
push
sbb
nop
and
push
mov
mov
sub
dec
and
sbb
pusha
or
dec
test
or
imul
aam
fdivrp
mov
cmp
mov
rcl
rcl
cmp
pop
fwait
retf
jns
cwde
xchg
outs
push
pop
iret
std
sbb
pop
cmp
loopne
dec
inc
xchg
stos
pusha
aam
or
mov
mov
xchg
push
pop
push
ins
pop
fs
cdq
cmp
cli
xor
lods
push
or
adc
mov
fcom
xchg
jae
pop
scas
movs
ja
lea
xor
add
add
and
push
mov
mov
shld
push
daa
jge
sbb
loopne
pop
push
ja
adc
mov
lods
add
mov
cdq
mov
ds
cmp
fxch
pushf
jo
xchg
sub
dec
pushf
in
xchg
loope
mov
xchg
in
pop
out
out
ret
out
fisub
cmp
mov
jl
mov
shr
pop
les
fnstenv
dec
stos
sar
sub
test
gs
mov
std
add
iret
popa
cmp
es
rcr
or
xchg
not
mov
enter
iret
push
and
cmp
jmp
ins
je
mov
dec
pop
popf
popa
adc
shr
pop
mov
jb
pop
call
in
sub
test
outs
out
dec
pop
test
pop
push
inc
mov
aaa
ret
mov
cmp
push
inc
xchg
repnz
loop
rol
das
and
mov
push
ret
dec
ins
enter
cmp
jb
xor
imul
and
(bad)
sub
xor
xchg
aaa
pop
xor
inc
add
mov
cs
or
push
call
bound
sbb
stc
rcl
inc
push
in
dec
push
cmp
xchg
mov
mov
scas
sbb
jge
repz
sahf
cdq
xchg
lds
pop
lds
daa
out
(bad)
call
lea
int
div
fiadd
jo
inc
or
sub
(bad)
mov
push
cwde
adc
inc
int3
rcl
or
xchg
sti
in
cmp
and
jl
aam
test
(bad)
icebp
xor
mov
jbe
jns
out
cdq
call
imul
cmp
dec
repz
dec
xchg
adc
dec
int
add
push
mov
mov
dec
inc
dec
dec
push
xchg
pop
out
sbb
daa
xchg
repz
dec
outs
icebp
inc
xor
xor
shl
(bad)
jmp
rcl
mov
in
adc
dec
push
dec
mov
aad
ja
mov
mov
mov
jnp
dec
in
clc
stc
xchg
(bad)
cmps
sbb
sub
xor
clc
loop
sub
out
gs
dec
dec
and
data16
ret
aam
xlat
jb
test
scas
push
mov
xchg
std
ins
shr
mov
adc
and
jns
cmc
fsubr
clc
repnz
icebp
sbb
sub
add
sbb
(bad)
lahf
pop
xor
and
xchg
pop
mov
cmp
jmp
push
cmp
jb
ret
mov
pop
mov
sbb
add
add
scas
loopne
add
xlat
movs
fild
or
cli
ja
cli
xor
in
sbb
jle
test
and
fcomp
push
and
mov
test
je
pop
push
jnp
mov
addr16
loopne
fcom
add
not
imul
mov
mov
push
mov
stos
add
outs
inc
das
movs
dec
jecxz
and
mov
arpl
cmp
scas
cwde
inc
int
cdq
jbe
loopne
loopne
mov
or
stos
adc
aad
push
ins
ss
sbb
pop
ror
push
(bad)
jnp
adc
int3
dec
inc
jo
ins
cmp
sbb
les
jge
pop
push
pop
js
add
add
bt
xchg
cmc
div
aas
inc
xor
leave
(bad)
dec
inc
jmp
add
pop
push
xchg
popa
jae
out
add
mov
(bad)
push
repz
jo
xor
adc
arpl
dec
fwait
and
jbe
mov
push
xchg
mov
sbb
mov
fmul
push
(bad)
jp
loopne
(bad)
fld
movs
fcmovb
fiadd
(bad)
jge
hlt
fisttp
aad
xchg
stos
pop
ja
cmps
cmps
pop
jno
mov
retf
xor
push
jmp
loop
inc
popf
jl
push
jecxz
cmps
mov
out
fild
add
movs
inc
outs
sahf
je
jne
mov
push
mov
sbb
and
pop
mov
or
dec
sbb
xor
pop
or
dec
int3
std
jmp
push
mov
ds
or
inc
mov
sar
popa
fmulp
add
sbb
push
add
icebp
or
scas
jo
test
mov
loope
test
lods
mov
jp
and
in
push
pop
inc
mov
mov
inc
jns
pop
mov
inc
sub
sub
ss
int
out
jno
mov
pop
pop
movs
xchg
sbb
repz
dec
or
aaa
cdq
jae
ror
test
fwait
test
jns
jmp
es
xchg
(bad)
mov
scas
or
mov
fcom
or
sbb
dec
sahf
lds
adc
cmp
dec
ss
pop
mov
(bad)
fidiv
cs
in
fbld
adc
stos
ss
inc
cmp
or
pop
in
int3
jbe
inc
sbb
test
xor
mov
scas
add
dec
dec
js
xor
jbe
cmc
movs
pop
fcomp
mov
movs
mov
retf
cwde
push
inc
pop
shl
add
test
cmp
pop
or
mov
inc
inc
ja
pusha
push
mov
hlt
nop
retf
push
lea
xchg
inc
add
push
mov
jo
div
jmp
jae
xor
cs
vpor
shl
mov
jmp
pop
add
jnp
cmp
sub
jae
aad
adc
movs
and
stc
mov
cmp
add
add
std
and
std
sbb
shl
ins
aad
das
mov
pop
out
push
mov
sub
les
cmp
jae
ds
pop
aaa
dec
jae
call
cmps
push
xlat
xchg
popa
js
and
or
xor
mov
pushf
xor
cwde
cmc
jns
out
add
test
mov
jmp
inc
or
mov
xlat
sbb
lods
or
repnz
cdq
or
add
mov
push
fimul
adc
cmovae
(bad)
(bad)
adc
jbe
test
repz
adc
dec
call
fisub
dec
jbe
in
mov
mov
mov
sbb
stos
xor
mov
dec
pop
int3
cdq
mov
lods
jge
inc
nop
push
cli
jge
mov
rcr
inc
mov
cmp
pop
inc
cmp
and
rcl
xchg
pop
inc
push
add
pop
pop
fimul
int3
aaa
adc
(bad)
mov
ds
cmp
inc
icebp
mov
je
stc
pop
into
sbb
movs
mov
or
lods
sub
retf
xchg
inc
cmp
mov
dec
imul
sahf
cmp
inc
mov
add
and
mov
pop
test
sar
mov
or
stos
stc
movs
xor
lods
pop
inc
or
out
push
in
aas
pop
jb
iret
pop
fisttp
xor
inc
pop
push
stos
sbb
push
jns
loop
aas
pop
addr16
xor
mov
cld
dec
test
dec
gs
lahf
rol
mov
mov
xchg
sar
xchg
pusha
loope
mov
mov
ret
sub
imul
shl
fnsave
imul
(bad)
mov
aaa
movs
ss
mov
jmp
sbb
xchg
xor
mov
jnp
shr
lahf
push
xchg
mov
push
js
call
call
test
xor
xor
popa
inc
rcr
jbe
sbb
xor
push
ret
pushw
add
or
xor
or
mov
sub
nop
pop
outs
push
jl
(bad)
out
jno
push
dec
aad
mov
push
inc
adc
add
mov
mov
inc
xchg
push
sbb
lods
iret
push
sub
jp
inc
pop
dec
dec
mov
movs
cmp
movs
push
add
rcl
out
jnp
loopne
fcomp
bound
or
test
fs
neg
enter
jmp
mov
push
scas
addr16
push
xchg
stc
adc
jmp
rcr
sbb
xor
and
cdq
xchg
xor
cmp
and
fcmovnu
scas
aam
int
retf
dec
jns
cmc
mov
or
fcomip
iret
aam
mov
shl
mov
push
stos
pop
xchg
aam
call
retf
out
fwait
call
dec
outs
mov
das
xchg
clts
sbb
sub
popa
je
rcr
in
and
xor
push
xor
and
mov
loope
mov
inc
xchg
stc
mov
enter
jmp
fidiv
mov
sahf
shl
mov
(bad)
pop
add
loope
enter
cs
inc
popf
arpl
jg
imul
cmc
mov
dec
xor
and
mov
xchg
mov
push
jbe
mov
sub
fwait
cmp
loop
xlat
jbe
adc
fnstenv
dec
mov
jmp
add
dec
xor
mov
mov
add
test
or
outs
lahf
jae
es
mul
stc
dec
push
adc
retf
ins
adc
(bad)
iret
dec
xchg
imul
ds
push
xchg
push
add
adc
cmp
adc
hlt
mov
stos
add
int
retf
cdq
jmp
jge
jo
pop
cmp
outs
pop
mov
fldcw
xchg
cmc
je
mov
inc
xor
jecxz
or
cwde
and
push
inc
pop
ret
test
adc
scas
enter
cs
ss
(bad)
mov
fdiv
adc
ins
scas
mov
shr
pop
mov
jge
in
inc
push
mov
mov
dec
sub
mov
mov
cdq
and
add
push
fcmovb
jns
dec
adc
sbb
fisub
fs
ret
enter
(bad)
imul
daa
retf
scas
and
add
retf
or
fsubr
in
jb
ss
fistp
int3
test
aam
shl
pop
jne
fadd
loope
inc
xchg
sti
test
sbb
cmp
jb
(bad)
shl
add
cmp
ins
stos
ins
neg
or
outs
mov
add
and
scas
cli
and
add
fidiv
add
cmp
loopne
or
push
test
pop
aaa
fmul
jbe
add
jne
ret
xchg
lahf
mov
and
push
and
jne
popf
stos
repnz
xchg
js
push
sbb
lods
and
fadd
mov
push
mov
mov
jo
rcr
mov
inc
xor
jg
outs
pop
cmps
mov
cmps
inc
jle
aaa
cmps
dec
ror
push
mov
mov
xchg
(bad)
pop
xor
hlt
mov
xchg
inc
je
pushf
rcl
push
(bad)
loop
movs
inc
pop
repnz
out
ins
out
pop
cmp
pushf
dec
mov
mov
dec
ret
cmp
pop
jbe
cdq
iret
arpl
lea
int3
mov
rep
clc
test
arpl
addr16
mov
mov
mov
faddp
push
mov
dec
adc
cmps
fcmove
mov
pop
(bad)
cmp
sar
xor
xor
and
inc
and
mov
js
push
jmp
add
call
clc
mov
adc
pop
mov
int
add
inc
push
out
xchg
ret
nop
in
out
loopne
add
jne
stc
adc
dec
div
leave
mov
and
xchg
sbb
cmps
cli
stos
sub
pushf
pop
call
sbb
enter
retf
fist
cmp
mov
adc
mov
(bad)
out
fs
aam
xchg
push
adc
xchg
push
shr
test
into
and
sbb
xor
inc
call
inc
xchg
gs
dec
jge
or
adc
fcmovnu
pop
sub
test
cmp
dec
daa
push
in
inc
inc
sti
pop
data16
out
cvtps2pi
dec
push
bound
in
push
std
cld
aas
repnz
mov
loopne
jae
cmp
ja
add
lds
mov
lahf
repnz
inc
test
loopne
sbb
xor
rcl
and
mov
call
inc
mov
jle
mov
adc
dec
lds
or
and
inc
(bad)
jmp
pop
shl
pop
sahf
loopne
stc
add
movs
mov
(bad)
(bad)
(bad)
js
inc
jno
cmc
and
lds
sub
pop
push
cli
mov
xor
pop
test
dec
pop
add
loop
cli
icebp
sbb
xchg
xor
jge
adc
mov
push
mov
test
inc
mov
inc
dec
lods
call
stos
sbb
aad
jb
rol
mov
aaa
or
and
push
mov
mov
pop
cmp
xor
cmps
outs
and
fdivr
ins
xor
fdivr
test
les
jae
in
or
loope
fcom
add
mov
sbb
lock
out
jge
cmp
cmp
mov
bound
(bad)
cmp
xchg
stc
dec
out
or
or
repz
mov
mov
jle
and
cmc
mov
mov
out
mov
les
mov
loopne
add
cmp
aad
xor
xchg
xor
sbb
scas
adc
ret
ret
retf
push
adc
scas
jae
push
pop
(bad)
xrelease
dec
les
or
std
pop
out
xchg
fnstsw
mov
sbb
mov
cmovg
mov
dec
cld
add
rcr
xor
hlt
and
fcomp
loop
add
xor
xchg
lea
xchg
clc
xlat
test
xlat
mov
dec
cs
jb
xor
retf
aad
movs
nop
xor
sbb
and
mov
fwait
push
out
and
fldcw
imul
xor
iret
int
inc
and
enter
sbb
mov
arpl
mov
out
clc
int
arpl
xor
push
scas
mov
cmp
lock
pop
iret
mov
cmc
push
je
mov
int
(bad)
aas
lock
xlat
adc
or
repz
fstp
xchg
stos
inc
cmps
sti
or
add
mov
sub
mov
mov
inc
mov
imul
pop
cmp
test
jbe
or
add
push
sub
jo
test
not
enter
in
mov
mov
fs
sbb
pop
aaa
rcl
pop
lods
pop
xchg
adc
and
or
push
aam
fsubr
inc
or
inc
dec
jl
inc
pop
movs
push
jb
mov
popf
xor
xchg
dec
inc
xchg
iret
sub
retf
fisttp
push
sub
pop
in
inc
push
and
mov
scas
push
inc
aaa
out
sub
cmp
push
sub
mov
push
cwde
jne
and
cmc
js
cwde
dec
ror
cld
ror
mov
xor
xchg
sub
cmp
repnz
or
mov
cmc
das
dec
vaddsd
bound
inc
jo
add
pop
xlat
idiv
lahf
pop
repz
mov
je
ficom
repnz
sub
(bad)
lods
pushf
add
inc
xchg
xchg
aas
popf
test
sbb
ss
dec
fidivr
sahf
lods
inc
ror
call
dec
cmp
xchg
repz
in
xor
int
xchg
pop
dec
push
jecxz
sbb
adc
sbb
add
sar
stc
lock
lds
and
jecxz
jnp
(bad)
(bad)
mov
les
pop
push
mov
fld
retf
jns
jg
test
pop
add
pusha
enter
aam
rcr
sahf
xchg
xchg
jp
sub
ror
xor
ds
test
outs
test
out
cld
int3
mov
adc
lea
and
adc
and
call
mov
popf
gs
js
test
mov
aam
daa
xchg
dec
or
xor
sub
pop
push
xchg
jmp
jb
pop
and
pop
fs
pop
lods
push
cwde
ds
jg
mov
or
out
mov
inc
sub
sub
pop
test
mov
enter
sub
and
mov
mov
sahf
push
movs
data16
imul
pop
mov
or
inc
jnp
inc
add
in
or
(bad)
mov
mov
fidivr
dec
scas
jbe
imul
ror
addr16
cmc
mov
stc
pushf
sbb
enter
push
dec
add
sar
mov
outs
add
mov
aad
aad
pmaxsw
jns
(bad)
mov
cmc
add
xor
mov
push
test
push
adc
(bad)
jp
popa
test
test
sar
add
sub
repz
and
leave
jg
cmp
cwde
lock
mul
leave
pop
sbb
add
movs
iret
lea
retf
(bad)
fldpi
inc
push
je
mov
ins
dec
jg
retf
sbb
rol
ins
gs
aad
mov
jmp
(bad)
cmp
mov
mov
fstp
lock
jnp
jns
adc
fs
cmc
xor
adc
sbb
repz
inc
in
sahf
lock
jecxz
mov
sbb
and
pushf
ja
mov
jb
adc
xchg
jbe
icebp
mov
or
pop
cdq
dec
inc
add
cmp
das
into
adc
jmp
std
pop
pop
and
mov
aad
inc
jmp
jb
retf
ins
inc
and
rcr
stos
push
pop
xchg
mov
sahf
jb
or
mov
aam
jp
shl
fsub
nop
ror
test
hlt
jg
(bad)
sti
fbstp
retf
inc
mov
xchg
(bad)
js
push
dec
adc
push
out
test
adc
xchg
and
adc
push
sbb
jns
xor
inc
(bad)
sub
xor
loopne
iret
out
inc
lds
hlt
fidiv
jae
not
test
adc
jmp
fcmovbe
inc
dec
loopne
pop
or
jb
in
sahf
call
mov
stos
sub
shr
push
jb
stos
inc
jmp
out
stos
jecxz
fwait
call
cmp
or
mov
mov
loope
xor
jle
mov
scas
pop
les
icebp
stos
stos
cmp
ss
xor
cmp
adc
es
sbb
sub
jbe
icebp
and
outs
popa
xor
xlat
lock
jecxz
cmp
xor
inc
sbb
gs
aad
cs
aam
call
popf
ja
mov
add
xor
and
out
add
mul
int3
xchg
aas
sbb
sbb
mov
inc
inc
cmp
or
mov
push
js
imul
jns
enter
cmp
or
adc
adc
add
daa
je
ins
jg
jp
lds
das
sub
frndint
stos
daa
sar
mov
push
int3
pop
sbb
push
in
outs
(bad)
adc
dec
iret
rcr
push
outs
test
test
int3
clc
into
inc
arpl
jecxz
mov
jl
xchg
cmp
popa
add
pop
cmp
sti
push
push
in
inc
arpl
repnz
push
ficom
mov
sub
repnz
xchg
or
jns
or
dec
sbb
icebp
and
mul
mov
fistp
xchg
pushf
shr
or
add
test
and
ss
add
cmp
dec
aaa
fbstp
pop
inc
xchg
cmc
into
xchg
mov
mov
(bad)
mov
fs
mov
les
xrelease
test
lahf
fistp
outs
jne
cmp
mov
les
scas
in
retf
pop
scas
test
mov
push
sub
sbb
jb
repz
mov
scas
push
in
jge
mov
shr
inc
stos
inc
stos
and
mov
lods
mov
imul
mov
jae
fcomp
jns
imul
lds
out
jnp
cmc
push
loope
sbb
jmp
ss
hlt
push
ret
nop
popf
inc
sbb
stc
ret
test
popa
add
jb
mov
jg
inc
scas
add
leave
in
ins
dec
inc
not
movs
push
sbb
fisubr
jb
adc
ja
out
mov
mov
out
ss
imul
push
test
inc
in
in
cmp
pop
push
scas
mov
jmp
das
add
xchg
mov
inc
or
popf
inc
(bad)
shr
shl
mov
sbb
mov
push
sbb
mov
xchg
rol
aas
inc
movs
xor
retf
or
fisubr
ins
lds
fdiv
lock
scas
inc
xor
pop
je
in
mov
cdq
xor
or
(bad)
out
into
loopne
inc
daa
xchg
jns
out
out
stos
dec
xchg
or
fdivr
fwait
push
mov
int3
dec
fsubp
adc
hlt
movs
out
sti
lea
mov
sbb
sub
lods
icebp
aaa
ret
in
sub
sub
cmps
mov
clc
xchg
ss
mov
shr
(bad)
int
jle
hlt
fist
cmp
in
bound
mov
and
ror
add
seto
jnp
or
or
mov
fld
in
mov
inc
inc
lods
mov
xor
mov
bound
xor
outs
mov
xchg
mov
mov
pop
retf
stos
les
dec
dec
mov
push
scas
loop
gs
cs
(bad)
jnp
mov
sub
xchg
popf
mov
sub
xor
xchg
loopne
mov
out
inc
aas
enter
in
push
inc
push
sub
mov
jno
and
cwde
test
clc
lahf
mov
(bad)
push
pop
cmc
cli
out
mov
push
call
test
int
dec
sub
shr
test
repnz
or
dec
xchg
loop
das
sbb
stc
retf
mov
std
or
jnp
push
push
push
movs
mov
outs
retf
jnp
dec
repz
xchg
repz
imul
xor
cmp
push
or
inc
in
push
loope
pop
mov
push
cmp
and
arpl
call
ins
shr
jmp
inc
lahf
stos
movs
fistp
fwait
ret
call
icebp
adc
imul
push
stos
mul
push
hlt
in
or
shl
mov
bsf
les
aad
scas
or
call
lods
aas
xchg
pop
enter
pop
ret
jb
pop
cmp
popa
pop
in
adc
nop
stc
enter
mul
and
aam
push
sbb
shr
sti
pop
adc
shl
fdivr
and
mov
aaa
dec
sub
stos
cmc
cwde
cwde
push
and
jmp
add
adc
sbb
cwde
dec
pop
lahf
pop
scas
stos
les
inc
adc
stos
jecxz
repz
and
pop
mov
stc
jge
imul
mov
(bad)
mov
inc
sub
aad
sub
stc
xchg
lods
mov
out
movs
test
mov
adc
and
retf
jno
adc
mov
and
push
adc
cmps
push
icebp
pop
inc
std
cmp
sub
xchg
mov
mov
dec
ins
add
call
mov
fdecstp
out
test
mov
movs
cmp
inc
ret
or
div
or
je
es
sbb
div
aad
aam
dec
sbb
mov
pop
jmp
movs
or
dec
cmp
neg
cmc
inc
popa
cmp
xor
dec
loope
ds
add
mov
loopne
pop
add
jle
push
jmp
sbb
int
std
bound
and
mov
and
neg
pop
jo
ret
imul
xor
xor
cmp
mov
cmp
mov
and
cmp
sbb
call
sub
dec
mov
mov
push
sub
or
int3
into
xchg
arpl
popf
push
fnstsw
(bad)
shrd
sub
push
push
test
jmp
outs
push
movs
and
sbb
cdq
cld
lea
jne
and
xchg
outs
push
mov
xor
pop
(bad)
adc
scas
mov
cmp
fidivr
and
cwde
sahf
add
mov
lods
or
inc
mov
bound
loope
ret
shr
push
cmp
shl
add
popf
or
push
push
inc
mov
and
aam
retf
mov
dec
mov
inc
xchg
out
jl
jne
dec
mov
rcl
(bad)
fdiv
lock
fistp
xchg
adc
call
inc
neg
popa
dec
js
daa
inc
test
imul
das
xlat
arpl
cs
push
sbb
jae
dec
mov
(bad)
call
cmp
xor
mov
fidiv
fisubr
inc
sbb
mov
jo
test
mov
add
icebp
es
in
xchg
mov
not
imul
push
cmp
and
adc
mov
push
and
and
js
ret
data16
mov
retf
stos
ss
dec
arpl
xchg
cmp
ds
stos
pop
xor
sbb
iret
xchg
ds
mov
data16
mov
jo
call
fbld
pop
sub
add
dec
xor
call
js
pop
gs
push
adc
rcl
or
fist
jmp
push
push
fsub
mov
out
icebp
mov
outs
xchg
lods
pop
jns
test
adc
cmp
int
push
mov
imul
pop
ins
pop
mov
adc
std
(bad)
and
mov
hlt
loopne
dec
neg
mov
cmp
jl
jecxz
mov
sbb
inc
dec
sbb
pop
adc
push
jle
les
stc
icebp
inc
cmc
mov
xchg
dec
inc
sub
fcmove
mov
xchg
pop
and
fcomi
imul
mov
mov
and
jo
add
movs
push
inc
ds
xlat
movs
xlat
jne
cmps
pop
mov
sbb
sub
or
mov
(bad)
mov
inc
popf
cmp
sar
mov
jbe
mov
cmps
movzx
daa
cmp
(bad)
push
cmps
jb
mov
xchg
push
sbb
xor
pop
int
(bad)
push
sbb
aas
ds
retf
inc
lods
pop
add
mov
data16
pop
popa
xor
inc
mov
inc
mov
lahf
imul
dec
dec
mov
std
das
cli
jge
and
fild
ins
sbb
mov
retf
sub
adc
je
add
icebp
ror
xchg
jne
jnp
or
loope
cmps
loop
outs
mov
ss
pop
inc
pop
cwde
ss
or
inc
mov
cwde
push
(bad)
mov
out
pop
sbb
fwait
daa
push
pcmpgtb
xchg
add
push
repnz
and
sbb
pushf
ret
pop
sti
mov
xchg
mov
push
bound
movs
movs
or
xchg
gs
or
jmp
ins
mov
push
and
pop
sub
mov
fsub
sub
cmp
add
popa
lea
and
and
mov
and
inc
and
mov
cmps
xor
xor
out
sbb
ret
aaa
mov
mov
inc
popa
pop
inc
xchg
jnp
mov
je
pop
out
xor
xchg
lods
xchg
and
out
retf
sub
adc
out
(bad)
in
sub
pop
repnz
mov
inc
xor
cmp
nop
sbb
or
jae
add
sbb
sbb
fstp
inc
lea
daa
idiv
int
sbb
adc
add
cmc
or
fs
xchg
(bad)
and
stos
repnz
loopne
dec
js
and
cmp
mov
rol
in
and
ret
fdiv
les
mov
call
push
xor
dec
lods
pop
fsubr
sub
mov
inc
cs
test
fidiv
jbe
mov
(bad)
fisubr
shl
add
cmps
fcomi
(bad)
pop
dec
shl
or
fisub
outs
popa
aam
in
pushf
cli
sub
push
scas
dec
std
dec
mov
aad
lea
jl
jecxz
gs
fwait
mov
int3
sahf
ins
(bad)
mov
fisubr
into
retf
cli
dec
inc
mov
movs
(bad)
stc
add
push
in
inc
in
xor
(bad)
xchg
stos
sub
ficomp
inc
dec
push
dec
shl
jno
lds
ds
lock
sti
inc
frstor
(bad)
mov
inc
sbb
aam
and
fist
jp
aaa
les
inc
mov
cmp
pop
fwait
mov
jnp
fwait
clc
mov
adc
cwde
dec
ja
in
jmp
ret
cdq
pop
mul
fucomi
mov
add
mov
mov
lock
outs
cmp
cmc
mov
cs
call
mov
mov
int3
ins
jl
add
test
push
push
and
sub
cwde
sbb
sub
mov
lods
push
lods
and
les
out
xor
sbb
mov
imul
loop
lds
xchg
pop
inc
dec
mov
in
mov
mov
fidiv
xchg
ja
xchg
or
pop
push
jno
mov
or
inc
jne
jb
cmp
daa
cmp
sub
enter
and
inc
aam
pop
pushf
push
push
mov
mov
cmp
add
mov
(bad)
cwde
repz
push
dec
sbb
mov
dec
push
cmp
jbe
mov
(bad)
push
or
jp
(bad)
movs
mov
mov
cdq
jb
dec
pop
je
ret
and
jnp
inc
dec
aad
dec
mov
mov
shr
not
xchg
cmp
mov
aaa
push
mov
cmp
xchg
jbe
test
lock
cdq
inc
cmp
mov
sbb
jae
inc
repnz
add
data16
sub
in
pop
mov
pushf
ret
nop
inc
pop
in
xchg
push
and
lods
xchg
and
mov
dec
pop
iret
stos
(bad)
add
push
jmp
mov
lock
hlt
fimul
in
les
in
(bad)
jp
adc
and
cmc
data16
dec
cmp
sub
test
aas
pop
gs
jmp
inc
pop
pop
add
jnp
sar
add
sbb
retf
add
inc
xchg
hlt
cmp
(bad)
mov
aas
jo
sbb
ror
mov
mov
mov
mov
imul
push
test
fbstp
sti
fidivr
dec
(bad)
ffree
dec
jno
fsub
inc
dec
jne
pop
dec
or
stos
mov
stos
leave
sub
push
jb
cmps
and
in
mov
sub
aaa
push
pop
xor
inc
sub
cmps
(bad)
scas
test
dec
push
data16
js
dec
inc
and
and
bnd
test
dec
daa
loopne
in
jp
int3
in
into
add
mov
outs
movs
iret
mov
add
push
jns
imul
jge
add
icebp
pop
jb
cdq
out
jge
pop
sub
jecxz
cmps
push
sar
xor
dec
cld
test
mov
ja
jecxz
vmovss
jle
jl
pushf
xor
popa
sysret
bound
or
mov
add
cmps
fwait
gs
popa
aas
shl
xor
push
mov
gs
mov
jae
dec
and
ret
aas
arpl
popa
imul
lods
pop
add
pop
movs
xor
cld
xchg
retf
mov
ret
movs
stc
sub
out
fdivr
call
movq
imul
push
mov
ins
sbb
and
pop
xchg
pop
mov
popf
lock
push
(bad)
bound
outs
pop
cmc
sbb
push
out
mov
jle
hlt
mov
mov
jb
sub
jmp
adc
adc
jl
cmp
(bad)
test
push
and
or
les
ds
xor
ins
jmp
fwait
call
xchg
or
out
inc
(bad)
aam
and
or
jmp
fistp
adc
ret
or
sbb
std
test
call
push
and
mov
jg
sbb
icebp
or
imul
shl
ins
fwait
dec
adc
fcmovnb
lea
repz
jecxz
adc
mov
cmp
xchg
xchg
pop
sub
das
sbb
push
xchg
xchg
or
fiadd
rcr
popf
pushf
xchg
mov
mov
jmp
rol
xchg
cwde
xchg
and
pop
js
sub
outs
jmp
dec
mov
pop
mov
push
adc
sub
or
or
mov
and
aam
mov
cmps
mov
out
imul
lock
int
jmp
ins
adc
loop
sub
shl
inc
xchg
pop
xchg
fwait
mov
imul
sbb
mov
das
xor
dec
cwde
jae
lock
(bad)
xchg
retf
rol
jno
add
cmp
sub
stc
or
iret
push
add
stc
push
mov
sbb
test
jecxz
pop
movs
jmp
test
je
ins
cmovno
add
imul
dec
fimul
(bad)
cmc
jne
imul
pop
movs
jae
aam
mov
idiv
out
cmc
aaa
jno
xlat
push
adc
bound
or
push
out
or
sub
or
pop
inc
push
push
rcl
xor
imul
jns
jae
cmp
mov
cmps
test
cmps
fist
mov
ret
mov
jl
push
ja
jne
cmps
shl
repz
add
pcmpgtd
inc
movs
je
dec
mov
push
xchg
in
cmps
xchg
push
sbb
and
fsubr
test
rol
nop
pop
cmp
lahf
clc
sbb
mov
inc
stos
mov
cmc
(bad)
pop
jmp
and
imul
mov
push
ror
jp
mov
cs
loope
shr
push
js
pop
aam
and
mov
jmp
push
mov
jmp
adc
dec
push
in
dec
rol
out
into
adc
inc
test
gs
cmp
mov
dec
pop
cmp
jmp
cmc
clc
sub
das
mov
(bad)
fsub
or
pop
fisubr
out
fisttp
scas
jbe
retf
xchg
gs
cmc
cmp
cmp
sub
or
mov
in
xor
fwait
push
push
push
jge
fwait
adc
fcmovbe
or
div
pop
in
cs
fidivr
(bad)
jae
(bad)
mov
call
enter
adc
fdivr
data16
nop
xor
or
xor
adc
and
dec
xchg
retf
cmp
std
fdivr
push
and
jb
sub
add
lahf
adc
fdiv
mov
pop
ret
pusha
and
sub
sar
mov
adc
movs
and
push
xlat
jge
mov
pop
xchg
ins
mov
stc
and
retf
jnp
ds
mov
push
pop
jle
fdiv
mov
mov
cwde
(bad)
shr
lea
mov
icebp
ins
jmp
scas
mov
jmp
int3
jns
js
xchg
adc
stos
and
addr16
pushf
test
sub
pop
es
rol
xor
test
inc
(bad)
imul
imul
out
in
arpl
xchg
test
popf
push
xchg
movs
in
add
leave
aas
push
jno
sub
or
push
rol
push
mov
pop
mov
dec
pop
cld
push
clc
daa
adc
xor
pop
push
xchg
pop
test
cmp
mov
add
and
ja
mov
push
cmp
add
and
cmc
out
cwde
stc
in
imul
outs
movs
mov
(bad)
pushf
enter
ds
test
push
pop
js
adc
lods
hlt
pushf
adc
enter
pop
or
push
lea
(bad)
cmps
xor
daa
sbb
xchg
(bad)
(bad)
fild
mov
mov
jo
xor
push
fwait
add
hlt
push
je
(bad)
xor
pop
or
cmps
imul
and
push
cmp
jb
nop
rcr
arpl
sahf
mov
add
xor
and
iret
rcr
ss
fcomp
movs
xchg
jg
mov
jecxz
js
inc
add
sbb
sbb
dec
mov
xchg
pop
repnz
out
mov
in
ret
and
cmc
dec
and
inc
cmp
or
xchg
xchg
cmp
jne
xchg
mov
loope
inc
rcr
and
inc
push
mov
sbb
or
call
lods
into
push
pop
push
push
retf
cmp
gs
sahf
add
sub
test
mov
pop
(bad)
outs
jo
into
mov
mov
test
or
in
imul
or
cmp
dec
sub
mov
inc
rol
add
adc
out
scas
(bad)
mov
aam
pop
hlt
fs
daa
test
pop
push
icebp
push
inc
mov
neg
cmp
dec
cmps
mov
popf
mov
clc
ficomp
jge
jae
cwde
jg
jns
rcr
adc
in
mov
sub
pop
or
lds
jo
in
mov
pop
push
cmps
out
(bad)
cwde
test
or
push
pop
cli
xbegin
push
pop
loop
int
ret
(bad)
lock
inc
lea
imul
inc
cdq
mov
mov
mov
shr
or
sti
xlat
inc
mov
jg
stos
xchg
retf
dec
cmp
icebp
std
mov
mov
dec
out
push
jp
loopne
setle
arpl
ret
lds
ja
add
rol
fadd
lods
mov
xchg
inc
pushf
int
jae
add
or
popf
push
sti
push
pop
outs
jmp
outs
or
and
lods
sbb
pop
je
aad
loopne
sub
clc
push
pusha
jnp
push
push
lahf
inc
icebp
into
ins
pop
movs
movs
jle
mov
ss
fdivrp
mov
cld
push
(bad)
ja
scas
sub
jo
cld
cmps
adc
aaa
sahf
lock
pop
fsub
and
cmp
stos
sbb
sbb
icebp
neg
add
out
dec
pop
into
xchg
xchg
out
xor
adc
fldcw
jb
loop
ins
jmp
push
out
loopne
inc
push
(bad)
arpl
pop
sub
jmp
inc
bound
push
pop
(bad)
imul
ins
mov
int3
push
mov
fxtract
std
sbb
movs
rol
lahf
out
push
push
mov
stos
scas
sbb
pop
pop
nop
ins
rol
rol
adc
or
xchg
push
mov
jg
out
push
pop
add
inc
or
pop
bound
cmp
cmps
dec
dec
scas
dec
jp
pop
mov
out
fcomp
jecxz
and
test
(bad)
pop
jae
je
and
shl
retf
aad
es
dec
jecxz
in
pop
(bad)
lahf
sbb
imul
mov
mov
cwde
or
xchg
mov
mov
rol
mov
mov
(bad)
fild
jg
(bad)
mov
push
repnz
mov
in
mov
cmc
neg
jbe
mov
popa
jo
fisttp
inc
(bad)
lods
jle
(bad)
sar
(bad)
cdq
cdq
leave
and
sub
dec
xchg
cmps
cdq
cmp
es
sbb
popa
mov
cmps
jl
into
shl
test
lahf
and
ror
sbb
in
cmp
jge
out
sbb
shr
pop
int
mov
add
dec
or
add
add
push
push
aas
je
test
cmp
jl
clc
rcl
aad
pop
jle
je
mov
mov
pop
and
mov
inc
scas
rcl
fs
cli
sbb
scas
fwait
sbb
pop
cmp
push
or
push
or
dec
mov
fsubr
int3
cld
inc
(bad)
fdiv
add
xchg
jle
pushf
dec
cmp
pop
mov
push
mov
or
push
inc
cmc
xchg
xchg
xchg
jp
xchg
jno
mov
popa
in
xchg
jne
es
xor
(bad)
cmps
cmp
mov
in
ret
add
mov
lahf
out
loope
fucomp
call
jo
add
or
stos
retf
xor
lea
scas
fcmovb
out
aad
cmp
nop
jae
jl
push
ret
mov
or
dec
dec
mov
out
lea
adc
ins
out
mov
(bad)
shl
inc
cld
retf
rol
rol
sub
sub
cmp
fwait
xchg
shr
mov
clc
sub
es
push
aas
(bad)
jnp
add
scas
xchg
jne
push
sbb
jns
jmp
jg
cmp
push
aam
cmp
ficom
jnp
pusha
mov
fwait
mov
dec
sbb
ja
cmps
and
add
mov
mov
lea
sbb
cdq
mov
cmps
xor
jp
aad
imul
sbb
adc
add
pop
mov
xchg
imul
out
shl
push
imul
loop
leave
pmuludq
sub
xchg
leave
mov
xchg
ja
push
sbb
inc
fwait
das
mov
dec
jo
xchg
jmp
ins
mov
pop
fs
call
sub
push
out
lods
out
clc
mov
cmp
and
adc
aaa
aam
stos
es
mov
icebp
pushf
mov
mov
jmp
add
xor
jmp
adc
loop
push
jnp
inc
sbb
and
out
leave
xlat
pushf
mov
fcmovnb
in
inc
or
jb
and
jmp
ja
add
rol
mov
arpl
in
add
push
xor
cld
add
test
retf
fs
mov
into
mov
mov
ret
test
add
movs
mov
mov
loope
arpl
dec
pusha
(bad)
call
mov
push
mov
sbb
popf
xchg
ja
out
daa
in
(bad)
jno
fwait
or
(bad)
dec
std
test
jae
and
ds
ins
cmp
je
xchg
mov
sbb
fcomp
ror
pop
mov
test
movs
fcmove
lods
xlat
push
jmp
into
mov
push
std
or
cmp
loop
outs
(bad)
xor
test
(bad)
mov
enter
mov
xchg
jo
test
aaa
call
test
xchg
inc
pop
sbb
cdq
call
jno
push
es
jl
gs
(bad)
shl
cmp
lea
mov
mov
push
cwde
test
int3
sub
or
sub
(bad)
sti
xor
or
repnz
xchg
and
pop
sub
ss
call
xchg
sbb
inc
xor
leave
fwait
mov
ret
push
int
mov
mov
(bad)
fsub
xlat
dec
mov
cmp
mov
imul
jo
test
hlt
dec
push
sub
mov
dec
fcomp
ja
add
mov
jp
cmp
push
rcl
sub
call
mov
push
cmp
adc
sub
and
test
(bad)
lods
push
daa
jle
inc
pop
dec
dec
cwde
lods
movd
cmp
cli
add
cmp
scas
fidivr
sub
xor
mov
pop
rol
aad
in
popf
xchg
jns
stc
ss
stos
pop
outs
sub
cdq
imul
aaa
adc
call
jmp
or
adc
dec
fwait
cmc
push
dec
xchg
(bad)
push
pop
and
mov
loope
and
xor
xor
adc
xchg
inc
lds
jnp
add
adc
mov
pop
ss
movs
lods
test
sbb
xor
mov
pushf
lods
inc
mov
loopne
mov
mov
mov
es
stos
push
dec
fwait
ror
inc
push
(bad)
push
cdq
adc
(bad)
sub
pop
fs
(bad)
push
pop
xchg
cmp
fs
pusha
sbb
push
cmp
(bad)
mov
fsub
sahf
pushf
xchg
stc
xor
push
call
inc
hlt
repz
(bad)
iret
mov
push
int3
pop
sbb
xlat
call
sbb
pop
dec
out
mov
stos
mov
rol
xor
jno
mov
jb
js
mov
jge
jecxz
ins
loopne
out
pop
adc
jo
test
push
jno
(bad)
cmp
dec
push
adc
and
mov
imul
lds
inc
or
aaa
imul
cmps
repz
sbb
and
lock
inc
push
das
xor
push
gs
daa
xchg
outs
inc
stos
test
call
je
cmp
pop
pop
and
pop
xchg
fisubr
jmp
jne
inc
adc
cmp
add
out
daa
outs
ficom
retf
in
dec
dec
sub
xchg
leave
or
push
test
jge
mov
call
sahf
iret
or
movs
adc
add
xchg
sbb
icebp
adc
retf
pop
cmp
popa
inc
int3
movs
mov
cmp
pop
aas
pop
adc
shl
push
sub
mov
add
movs
and
jno
fsubp
dec
aaa
mov
mov
in
mov
mov
jb
fcomp
and
mov
ja
jmp
xchg
and
xchg
dec
pushf
ror
sti
xchg
rcl
popf
push
stc
js
adc
sbb
(bad)
pop
(bad)
cmp
js
pusha
or
lea
mov
(bad)
cmps
fisub
push
inc
cmps
retf
mov
out
das
out
xor
pop
dec
jp
mov
stos
ret
push
push
test
shr
cmps
sub
mov
mov
call
xchg
cwde
cdq
xchg
cmp
ret
sub
mov
bound
push
mov
inc
add
idiv
mov
xor
sub
mov
sub
repz
push
ficomp
js
cmps
or
inc
mov
jo
clc
imul
aam
push
jne
repz
push
and
mov
jno
add
div
pop
cmp
ds
into
add
into
xor
fdiv
sbb
fs
jg
lock
cmp
mov
pop
adc
and
loope
retf
dec
push
popa
adc
push
hlt
pushf
lahf
jmp
clc
pop
test
xchg
dec
add
in
jg
xchg
stc
out
sub
adc
jo
clc
adc
adc
cmp
lock
push
sbb
cmp
sub
rcr
jb
add
jmp
pop
mov
mov
adc
add
in
jle
sbb
mov
add
loope
call
or
outs
xlat
mov
(bad)
add
test
ret
packssdw
cmp
mov
pop
nop
jg
enter
sub
in
mov
das
pop
aas
xor
push
and
into
in
and
mov
test
xchg
push
or
cmp
mov
pop
out
jl
xor
jo
dec
cmps
adc
mov
mov
sub
aam
call
sbb
out
sub
jmp
push
movs
in
mov
push
data16
or
sub
mov
mov
pushf
xor
mov
and
(bad)
retf
fstp
adc
mov
xor
(bad)
mov
add
sbb
iret
lods
div
fcomp
add
mov
jmp
add
setg
mov
rcl
jmp
mov
jle
sub
adc
add
push
and
test
cmc
add
cmp
ud0
jno
popa
add
xor
xor
ret
imul
push
or
mov
mov
xchg
dec
sahf
or
in
faddp
mov
aaa
(bad)
les
ret
gs
(bad)
jnp
fild
mov
scas
xchg
ret
jg
fst
jae
lods
rol
lahf
ret
mov
mov
jbe
xor
adc
jbe
cmp
xor
xchg
retf
dec
add
and
push
aaa
pop
cmp
jno
mov
out
dec
(bad)
sti
outs
leave
inc
mov
pop
fpatan
fwait
ja
pop
mov
test
xchg
arpl
repnz
push
pushf
adc
mov
mov
sub
xchg
jecxz
in
in
gs
sub
repnz
mov
hlt
push
stos
movs
jecxz
test
dec
adc
popa
xlat
addr16
adc
cmp
pop
(bad)
test
repnz
loop
(bad)
jmp
aas
dec
dec
inc
pop
retf
in
daa
add
xchg
ror
icebp
arpl
addr16
cmc
dec
add
retf
mov
fnstsw
sub
push
mov
dec
sar
jle
outs
popa
mov
add
shl
sub
cmp
inc
mov
dec
mov
mov
shl
mov
mov
mov
dec
jmp
cmp
js
fdivr
push
or
scas
inc
rcl
xor
mov
imul
add
popa
jae
xchg
retf
inc
loop
out
dec
mov
adc
push
cdq
int
add
sbb
xor
test
dec
add
out
inc
cmp
add
add
rcr
imul
lds
fidivr
dec
fcmovbe
and
fsubr
retf
sub
lods
movs
movs
push
adc
aam
push
int
dec
js
mov
mov
enter
stos
xchg
rcl
cmp
push
aam
and
pop
jns
add
xchg
clc
(bad)
call
xchg
test
cmp
rcl
sub
ret
fdiv
int3
adc
dec
rcr
stc
sbb
(bad)
sbb
jmp
ds
and
test
mov
push
mov
mov
jl
xchg
ss
cmc
(bad)
imul
cdq
scas
inc
ss
ror
dec
lds
bnd
pop
mov
inc
dec
out
lahf
hlt
das
ss
cdq
test
inc
mov
out
jmp
push
test
fcomp
mov
fcomp
push
inc
shl
pop
out
nop
adc
dec
inc
test
or
aas
(bad)
pop
and
xchg
out
cld
jp
imul
(bad)
cmp
ins
stos
xchg
loopne
mov
movups
pop
adc
jmp
test
(bad)
mov
(bad)
lods
rcr
push
mov
xor
push
mov
and
xor
in
cmp
shl
or
adc
mov
(bad)
das
xor
adc
or
mov
(bad)
jmp
dec
ffreep
xor
enter
cmps
xchg
dec
lahf
cdq
mov
out
cmps
mov
imul
jo
jmp
sub
sti
cmc
sbb
ror
jbe
adc
add
mov
jge
adc
retf
scas
dec
ja
jo
and
repz
push
pop
or
or
mov
fst
int3
rol
adc
mov
imul
cmc
mov
pop
imul
mov
push
movs
inc
fs
in
lods
imul
int
cli
pop
ret
adc
xchg
aas
jg
ret
jmp
push
out
(bad)
aam
jne
loop
and
sar
into
and
jle
mov
dec
push
or
push
xor
stos
pop
jne
pop
dec
data16
stc
cmps
js
inc
stc
adc
cmp
jle
das
jo
mov
push
es
or
add
loop
or
or
mov
not
push
movs
(bad)
push
add
inc
dec
sbb
xchg
inc
push
movs
inc
add
imul
xor
(bad)
mov
lea
pop
retf
push
retf
xor
push
and
imul
sub
loopne
addr16
cmp
add
or
jnp
mov
test
or
jge
push
push
mov
xchg
dec
bound
or
jbe
and
mov
pop
in
pop
test
ss
jmp
or
mov
addr16
mov
in
shl
movs
call
clc
and
ret
sub
repz
cmovne
dec
xlat
add
inc
ins
je
enter
mov
pop
xor
jo
fld
jmp
pop
iret
add
jbe
dec
add
fbstp
sbb
cmp
pop
loope
mov
ds
mov
cmp
fisttp
jns
repnz
ror
stos
jmp
inc
in
jmp
fbstp
movs
sub
cdq
or
arpl
add
sbb
cdq
pusha
aam
ds
out
jne
hlt
cmc
outs
punpckhdq
xor
fiadd
jne
push
sbb
cmp
and
rcr
outs
inc
push
js
cld
(bad)
out
jl
sub
cmp
mov
fs
add
shl
mov
out
jbe
inc
addr16
mov
inc
sub
aad
lds
mov
sbb
into
sbb
mov
jb
je
add
pop
jns
mov
ret
lods
adc
lods
push
cmp
ins
xchg
fnstsw
or
icebp
shl
ja
or
rep
jbe
repz
call
shl
sbb
sbb
popa
mov
cdq
imul
ja
call
out
lods
sbb
jne
or
in
push
and
popa
mov
pop
loopne
lahf
lds
fsubr
cwde
ins
rcr
jae
cmps
jmp
out
imul
inc
mov
outs
mov
lock
jg
mov
in
rcr
sub
push
(bad)
push
jno
loopne
push
fidiv
mov
(bad)
jmp
iret
je
sbb
cmc
adc
sub
repz
add
stc
sub
outs
std
icebp
lds
jns
mov
jmp
mov
bound
mov
xchg
outs
push
add
and
sar
aad
mov
retf
sbb
inc
inc
imul
stos
pop
mov
das
pusha
fisttp
into
test
shl
mov
jae
or
mov
movs
data16
add
rcr
loop
add
(bad)
stc
mov
mov
mov
int3
add
int3
jne
ret
xchg
icebp
test
add
movs
inc
push
mov
hlt
int
jne
add
mov
mov
ds
inc
mov
mov
sub
xchg
pop
fldcw
ins
dec
add
fsubp
sub
mov
sbb
iret
out
(bad)
hlt
jo
push
xchg
jl
inc
inc
int
fwait
cmps
mov
jb
(bad)
jle
outs
mov
(bad)
lahf
mov
jns
push
shr
les
dec
inc
outs
or
mov
mov
sbb
rcr
bnd
pop
icebp
cdq
mov
outs
pop
test
outs
mov
gs
adc
push
jnp
out
mov
dec
stc
jl
dec
scas
or
mov
jne
sbb
fild
test
call
call
cdq
jae
mov
clc
sahf
sub
pop
(bad)
ins
(bad)
inc
fs
mov
aad
jge
es
cmc
mov
inc
inc
sub
cmp
das
pop
pop
add
and
mov
or
fwait
ret
pop
repz
call
movs
dec
mov
out
in
push
mov
jle
popf
pop
or
fs
sahf
xchg
gs
sub
and
add
mov
mov
lahf
fwait
mov
xor
mov
fist
dec
outs
aaa
cdq
sub
test
jp
and
pop
pop
cmp
pop
pop
imul
jl
ins
test
pop
cmps
dec
lods
push
and
or
push
stc
xor
loopne
aaa
xor
fiadd
xchg
in
sub
inc
sar
push
push
ja
mov
mov
push
inc
imul
jle
mov
(bad)
repz
mov
pop
mov
xor
movs
loope
jp
shr
mov
cmp
rcr
retf
shl
sbb
pop
inc
cld
mov
pop
es
bound
shr
sub
mov
call
push
fadd
and
dec
adc
outs
cmp
ret
cwde
ret
jl
dec
fild
rol
repnz
inc
push
add
mov
dec
push
hlt
dec
push
push
enter
popf
loop
mov
jo
aas
inc
scas
xchg
loop
inc
cmp
leave
call
dec
add
cmp
test
in
add
arpl
inc
mov
cmp
adc
adc
ja
jmp
call
mov
fisub
outs
fucom
sahf
pop
cmps
xchg
inc
or
jnp
pop
push
ins
push
or
and
ins
mov
je
sub
xor
shl
mov
ret
jp
mov
push
clc
mov
dec
push
jne
in
iret
ins
pop
mov
inc
xchg
test
dec
(bad)
clc
scas
rol
dec
push
jp
call
fs
into
call
dec
add
sub
add
stc
retf
mov
add
xchg
pop
scas
add
add
push
adc
int3
mov
mov
jo
lods
jne
movs
cmp
push
or
pusha
pop
mov
push
and
sti
sbb
out
ret
adc
call
fs
pushf
call
ins
aam
scas
test
sbb
add
or
mov
pop
sub
mov
or
ficomp
shr
clc
cmp
or
outs
mov
sbb
xor
daa
dec
mov
add
shr
push
adc
cmp
into
and
loope
loope
jp
lea
shr
in
mov
lods
shr
retf
cdq
cs
push
iret
arpl
jae
rcr
jecxz
mov
cmc
jno
or
test
or
fimul
xor
test
jnp
jmp
push
xchg
add
jmp
clc
xchg
stos
pop
and
into
jge
push
xor
jecxz
adc
je
ss
ins
and
mov
xchg
lods
or
stos
jmp
movs
jge
inc
ret
pop
add
outs
in
into
in
or
int3
pop
ins
xchg
mov
je
xor
adc
sbb
hlt
arpl
(bad)
or
sub
or
das
nop
push
mov
mov
test
push
ror
in
loope
or
arpl
mov
xor
mov
push
daa
popa
cmp
neg
(bad)
adc
push
cmp
add
xor
inc
cmp
in
popf
bound
in
mov
xchg
lock
xlat
rol
mov
cld
int
add
xor
xchg
cmp
je
icebp
adc
inc
iret
into
push
icebp
dec
mov
push
mov
(bad)
xor
fadd
mov
dec
inc
das
and
popf
icebp
xlat
daa
pop
mov
mov
popf
adc
stos
xchg
lock
jmp
cmp
pop
fistp
ss
adc
and
adc
lods
and
jp
xor
sbb
call
cmp
push
sbb
lods
scas
sbb
add
push
jnp
fucom
rcr
mov
cmp
arpl
or
cwde
mov
mov
fcom
shld
or
and
retf
neg
jp
xor
(bad)
les
add
xchg
and
xchg
int
cwde
adc
gs
sar
push
xor
in
xor
stc
inc
inc
fdivp
out
pushf
cmps
sub
xor
fldcw
call
je
and
adc
rcr
jb
xor
adc
sti
adc
or
in
stc
aam
mov
imul
or
lock
push
rcl
or
imul
mov
push
imul
out
xchg
repz
mov
mov
and
push
in
nop
dec
and
sar
mov
sub
push
push
cmps
inc
sahf
push
and
mov
cmp
mov
xchg
push
sub
retf
pop
je
and
ret
pop
ss
pop
sub
data16
and
in
dec
popa
leave
into
xchg
cwde
push
pop
adc
arpl
xlat
nop
mov
xchg
rol
(bad)
cmp
arpl
ffree
clc
or
neg
adc
or
ins
add
jne
mul
jno
push
icebp
sub
mov
jno
mov
outs
shl
sub
nop
pop
es
adc
movs
stos
test
out
and
mov
jmp
imul
ror
stos
mov
sbb
push
int3
popf
das
fcomp
shr
out
imul
cwde
mov
jb
jg
add
sub
mov
add
aam
out
inc
pop
and
rcr
fwait
movs
sbb
in
(bad)
fistp
jno
or
pop
ins
xchg
(bad)
aas
sub
popa
adc
inc
int
jo
and
(bad)
push
mov
mov
cwde
movs
mov
clc
mov
add
pop
pop
sbb
fistp
fadd
dec
and
or
push
adc
test
dec
(bad)
cmp
aaa
cmp
stc
push
dec
pop
cld
add
dec
pop
dec
test
sub
leave
ds
or
test
push
test
pop
and
xor
js
jnp
fld
jne
sbb
jmp
and
xchg
mov
cmp
dec
fwait
(bad)
retf
scas
mov
jns
pop
retf
ret
xor
xchg
addr16
fild
and
repnz
retf
and
imul
ja
(bad)
ficom
(bad)
push
in
mov
mov
or
mov
into
dec
out
jae
jns
jnp
or
xchg
mov
mov
inc
int3
cmp
mov
xchg
xor
jnp
data16
aaa
imul
sub
shl
dec
aaa
stos
sub
xchg
popf
mov
cmps
jl
and
(bad)
sti
enter
inc
test
fdivr
push
pop
adc
mov
push
push
xor
fs
mov
(bad)
test
dec
dec
retf
outs
fwait
mov
out
pop
inc
sub
pop
mov
(bad)
int3
ja
test
(bad)
xchg
aad
or
(bad)
dec
inc
xchg
sub
fcomip
xor
data16
cdq
cmp
mov
ror
sbb
addr16
push
icebp
xor
lahf
mov
mov
stc
jle
pop
xor
jbe
lahf
inc
pop
fwait
push
idiv
inc
add
iret
pop
in
jae
dec
retf
dec
repnz
loope
xor
adc
cmp
ret
sub
in
xor
bound
scas
inc
mov
xchg
jmp
inc
push
popf
cdq
or
push
cli
pop
adc
xchg
sbb
stc
mov
push
xchg
ror
xchg
dec
(bad)
arpl
pop
jns
push
mov
add
(bad)
mov
in
mov
xor
ret
jmp
frstor
cli
dec
mov
retf
call
xor
push
ret
and
pop
std
mov
lahf
cmp
jl
push
pop
imul
jns
loope
add
sub
dec
leave
aaa
and
pop
pusha
arpl
lods
dec
ins
fnstsw
movs
movs
loopne
fcmovb
mov
sub
(bad)
aas
xor
cmp
push
loop
push
sbb
jl
sbb
fdiv
xor
lods
retf
in
xchg
push
test
and
mov
mov
nop
add
adc
sbb
cmp
mov
xchg
ret
jl
mov
outs
dec
mov
scas
inc
hlt
addr16
in
sub
lock
lahf
bound
or
jl
cdq
(bad)
(bad)
cli
sbb
pushf
pusha
fwait
aas
push
inc
je
sar
hlt
ja
pushf
push
push
rep
mov
or
cmps
aas
inc
mov
and
bound
mov
jle
addr16
rcr
push
pop
xchg
cli
lahf
stc
fld
ss
mov
mov
jecxz
popa
xchg
mov
jbe
or
(bad)
cmp
inc
dec
addr16
add
and
fldenv
xchg
lods
loopne
scas
loopne
arpl
retf
push
mov
push
pop
dec
mov
cmp
jp
mov
(bad)
scas
mov
sbb
mov
xchg
cmp
out
mov
(bad)
adc
cmps
jge
or
pop
mov
aas
in
push
push
scas
cmp
jle
xchg
push
out
lock
movzx
dec
retf
int
int3
and
sub
mov
push
in
mov
std
dec
fdiv
lods
outs
outs
xor
std
sar
mov
inc
mov
repnz
retf
imul
dec
push
cmp
movs
mov
mov
cmps
xchg
in
shr
(bad)
xchg
fidiv
cmp
ja
inc
ins
dec
es
mov
es
fwait
cmp
out
ret
je
jbe
in
cmp
jo
pop
and
out
dec
out
sub
test
push
ret
push
mov
pextrw
ja
loopne
mov
cmc
push
(bad)
jns
sub
sahf
jbe
out
rcr
push
ss
mov
jo
das
and
inc
mov
push
xchg
(bad)
out
ins
cmp
sbb
das
retf
adc
xchg
and
cwde
hlt
test
fsub
shl
inc
mov
dec
or
lahf
mov
stc
jg
xchg
ficom
xor
adc
mov
popf
or
popf
push
in
mov
sbb
push
addr16
cmps
or
cmps
push
jbe
xchg
push
stos
in
and
ja
jbe
mov
pop
jae
sar
push
arpl
call
mov
mov
stos
into
cld
sbb
dec
mov
add
in
repz
retf
(bad)
fcmovnb
fs
mov
push
mov
popa
xor
adc
out
and
and
scas
(bad)
call
or
sbb
add
popa
mov
or
sbb
xlat
dec
test
inc
xor
fs
retf
mov
inc
fnsave
mov
je
in
jo
xor
or
jb
cs
sub
push
test
call
cmp
fsubr
jb
sbb
pop
mov
mov
pusha
push
dec
hlt
(bad)
dec
push
ror
xchg
mov
cmp
cwde
adc
jbe
into
mov
jne
sar
sbb
push
data16
push
neg
jp
int
movs
repz
jo
mov
scas
and
jecxz
push
fwait
or
cmp
push
call
fnstsw
aas
jno
xchg
pop
lea
in
fxch
test
hlt
movs
aas
sbb
dec
inc
in
jge
test
popa
mov
jbe
(bad)
ds
(bad)
ins
mov
and
hlt
inc
fnstcw
in
jmp
cmps
adc
sbb
aad
test
pusha
sahf
cmps
dec
dec
jnp
leave
pop
sbb
mov
or
in
loopne
ss
and
pop
mov
(bad)
inc
inc
dec
mov
mov
cwde
scas
in
int3
lds
push
mov
jl
jg
mov
js
inc
mov
cmp
and
or
movs
xchg
je
call
rcr
add
mov
push
cmp
(bad)
and
dec
jmp
ret
movs
cmps
cs
push
push
aas
cmp
in
fs
pop
or
push
aam
push
retf
out
lods
cmp
pop
movs
jb
sti
les
inc
jmp
dec
aad
es
jge
cwde
(bad)
fld
mov
dec
in
jp
dec
xor
inc
or
push
rol
push
les
adc
and
dec
adc
mov
pop
stos
cs
cmc
push
add
cs
cmp
and
ret
loopne
ds
mov
fs
mov
cmps
pusha
test
cmp
or
mov
retf
fisttp
mov
adc
lods
mov
mov
xor
push
and
cmp
imul
xchg
jno
sbb
cwde
xlat
cmp
cmps
dec
das
test
int3
adc
xchg
ds
sbb
mov
gs
and
mov
or
jb
push
inc
jge
pop
inc
out
jnp
mov
cmps
push
add
cli
jo
xor
call
out
inc
(bad)
fs
scas
adc
rep
inc
mov
mov
test
test
mov
xchg
cmp
pop
aad
jne
jb
jmp
ret
hlt
daa
int3
mov
fst
ins
scas
scas
test
cmps
jno
add
push
mov
adc
mov
jb
stos
sahf
dec
ins
and
sar
xor
call
add
and
mov
inc
mov
cmp
pop
pop
inc
jne
jo
shl
cli
cli
leave
add
xchg
pop
ret
xor
jmp
jmp
cmp
aam
sbb
loop
sar
push
xor
push
sub
repnz
outs
mov
push
sub
frstor
pop
mov
jnp
fstp
or
and
mov
pop
cmp
pop
pop
lock
xor
cld
lods
outs
jp
or
jmp
lea
scas
paddusw
inc
mov
inc
dec
loope
test
cwde
and
call
test
cmp
std
and
ins
jmp
pop
pop
in
xor
cwde
call
addr16
jge
mov
adc
mov
call
mov
mov
xchg
add
or
sbb
mov
cmp
cwde
adc
fcom
cmp
xchg
cmp
xchg
cdq
xor
das
push
ror
add
dec
mov
mov
xor
lea
mov
frstor
xor
or
xor
jb
cs
sub
lahf
test
jnp
lea
ror
cmps
push
add
add
in
jl
movs
dec
pop
push
es
je
sbb
and
mov
jg
push
mov
lea
xlat
sbb
jle
add
dec
aam
jg
jae
fucomp
ins
mov
ret
fld
leave
ins
jo
retf
pop
outs
retf
ds
retf
and
mov
pusha
seta
and
mov
sub
and
mov
inc
jecxz
xchg
cld
mov
(bad)
sub
pop
sahf
sub
sbb
mov
mov
shl
stos
jmp
std
add
call
mov
and
pop
cli
cmp
jo
mov
and
sbb
jle
xchg
fs
jle
dec
sub
cmp
mov
push
imul
push
je
(bad)
loopne
in
fiadd
adc
sbb
mov
sbb
fidivr
or
xchg
aaa
sub
push
shr
mov
inc
out
rcr
mov
pop
ss
jmp
fsub
dec
(bad)
retf
movs
adc
and
in
out
inc
ins
sub
lods
adc
push
mov
jne
jb
(bad)
jge
call
idiv
sbb
xor
stos
push
dec
mov
sbb
call
jae
out
inc
movs
mov
scas
mov
mov
retf
movs
pop
jmp
xchg
test
sbb
sub
or
cmc
dec
and
mov
jo
dec
push
lods
aaa
repnz
les
mov
xchg
cdq
cmps
aas
nop
dec
jmp
add
icebp
jo
hlt
push
add
inc
mov
dec
ror
fs
mov
lahf
into
aas
(bad)
retf
jno
sbb
sahf
leave
inc
iret
lods
cli
cmp
loopne
loope
cmps
out
inc
iret
mov
mov
call
cmp
imul
pusha
std
das
in
int3
shl
jl
jg
xor
push
movs
dec
pushf
push
push
inc
pop
retf
dec
test
sbb
xor
(bad)
test
inc
out
ret
mov
sar
pop
cmp
retf
cwde
sub
and
imul
(bad)
aam
loop
into
dec
mov
ret
and
sar
fisubr
xchg
outs
fdivr
ins
xchg
xor
cmps
dec
into
cmp
rol
aam
das
call
mov
shl
pop
(bad)
mov
xchg
xchg
fstp
sbb
aas
sub
or
imul
cld
xchg
xor
jbe
rol
and
push
ds
mov
sub
push
fcmove
dec
mov
std
add
rcr
in
or
xor
jmp
dec
int3
pop
pop
jg
(bad)
aad
adc
push
xchg
ret
sbb
add
icebp
imul
data16
xor
fwait
or
(bad)
std
dec
popf
adc
maskmovq
imul
xor
gs
pop
xchg
mov
sahf
dec
xchg
ror
mov
xchg
pop
fxch
fisubr
aam
and
les
cmp
xchg
int
daa
imul
bound
fwait
cdq
jb
xlat
lods
cmps
inc
(bad)
out
loope
and
xor
or
test
cdq
dec
pop
mov
sub
sar
lahf
and
div
aas
jl
inc
stos
xor
lods
sbb
test
mov
jmp
loop
and
not
xchg
add
out
jnp
mov
and
xor
gs
jns
dec
xor
mov
dec
sti
test
sub
sub
cmp
stc
sub
inc
movs
in
mov
or
pop
fs
and
popf
lahf
loopne
adc
sub
ss
int
or
ins
add
xchg
in
jl
inc
ins
inc
jno
lods
and
push
xchg
arpl
sub
and
int3
stc
inc
cmps
fld
jecxz
push
mov
and
ror
sub
jns
imul
xlat
test
jg
test
mov
xor
(bad)
push
push
push
push
adc
dec
sbb
aaa
add
add
cmp
enter
xor
retf
loopne
push
add
lods
ret
pushf
mov
dec
sahf
dec
sbb
nop
pop
cdq
inc
and
mov
test
(bad)
loope
les
sti
mov
jb
les
in
sub
mov
xor
in
jmp
dec
add
out
xchg
in
dec
call
movs
leave
cmp
ror
sbb
test
lods
jmp
movs
cmp
loopne
repnz
sbb
ficomp
inc
sbb
sub
inc
jmp
push
std
sahf
mov
retf
ret
cmps
test
jae
lods
xor
pushf
clc
xchg
pop
xor
(bad)
pusha
sbb
push
cmc
and
mov
mov
push
xor
popa
mov
ja
pop
sub
or
fsub
aad
push
cmps
add
aaa
xchg
jmp
jne
lods
clc
ds
and
push
cmp
pushf
fcomp
jne
jp
jb
mov
xlat
jb
iret
push
or
int
mov
icebp
pop
enter
sbb
mov
cmp
mov
sbb
inc
cs
(bad)
jg
icebp
in
shl
jae
(bad)
int3
(bad)
mov
add
adc
jecxz
cmp
mov
adc
xor
xchg
pop
gs
pushf
push
push
adc
sbb
sbb
adc
out
and
popa
shl
lock
pusha
retf
inc
pop
fnstsw
sbb
jnp
aaa
mov
in
aam
pushf
cmp
push
aad
jmp
mov
bound
sub
shr
outs
xchg
and
ins
shl
shr
stos
dec
pop
push
xor
push
leave
mov
or
(bad)
call
mov
pushf
outs
daa
aas
outs
push
mov
(bad)
xchg
test
mov
pop
in
leave
lods
jb
outs
or
shl
dec
jl
xor
sbb
cld
data16
sahf
cdq
stos
adc
xchg
xchg
or
mov
adc
mov
push
sub
adc
inc
in
enter
(bad)
sub
push
lock
mov
xlat
jnp
adc
rcr
jecxz
and
push
adc
es
leave
jb
jo
pusha
sbb
and
(bad)
add
or
bound
stos
dec
aad
loop
jmp
pop
rcl
popf
mov
cmp
nop
dec
ret
adc
pop
jne
and
scas
fcmove
dec
mov
daa
lds
mov
mov
stc
repz
adc
xchg
out
je
cmp
push
xor
stos
mov
xlat
pusha
mov
daa
call
pushf
ja
in
jmp
ins
adc
repz
(bad)
or
push
xchg
ret
push
push
dec
adc
mov
(bad)
clc
test
and
cmp
xor
push
(bad)
in
cmp
fbstp
or
das
jno
and
shl
pop
sbb
jnp
leave
xor
cmp
xor
cwde
cmp
loop
movs
imul
ret
or
not
inc
ret
cmps
adc
scas
dec
sar
mov
pop
(bad)
lds
inc
pop
imul
lds
stos
cmp
mov
mov
mov
pop
aam
adc
inc
mov
jmp
icebp
sar
inc
imul
out
call
int3
dec
imul
pushf
or
sbb
push
add
or
ja
or
mov
popf
sbb
gs
call
icebp
call
mov
pop
pop
(bad)
and
mov
daa
popf
add
pop
adc
jno
popa
mov
xor
jl
in
push
add
(bad)
fmul
mov
(bad)
mov
adc
pop
pop
pop
dec
test
sub
ret
in
mov
call
inc
popa
push
pop
mov
jp
aad
adc
jno
dec
jg
das
sar
icebp
aaa
nop
pop
adc
mov
sub
ins
add
hlt
sub
mov
push
aad
xor
pop
pop
jmp
mov
ins
out
stc
push
push
cdq
sbb
add
fadd
jecxz
adc
push
add
cmp
mov
sub
mov
xor
(bad)
sub
xor
daa
es
enter
adc
and
neg
fcmovnu
dec
hlt
push
push
add
icebp
das
ds
into
push
xchg
cld
or
aam
retf
in
loope
adc
repz
mov
xchg
mov
int3
out
in
jl
mov
sets
and
push
inc
loopne
mov
retf
cld
adc
dec
sub
std
outs
mov
out
out
aas
sub
clc
icebp
ja
icebp
gs
pop
mov
jnp
icebp
ss
mov
xchg
add
jmp
adc
add
imul
add
or
jbe
popa
pushf
xor
lods
xchg
call
push
adc
sub
sbb
sub
sahf
(bad)
out
push
stc
jne
xor
aas
add
cmp
add
mov
(bad)
popa
ds
pusha
xadd
aam
out
inc
mov
cwde
sub
mov
pop
push
dec
pop
mov
push
rcl
cmp
jb
adc
mov
mov
dec
in
xchg
jg
fild
pop
imul
(bad)
mov
cmp
test
shrd
push
pop
pop
dec
dec
sub
movs
or
mov
daa
lods
push
fisubr
sbb
pop
or
mov
cmp
jmp
shl
add
push
sar
sub
aaa
sbb
(bad)
fsub
xor
push
xadd
loope
test
xchg
ins
push
aam
pop
dec
mov
imul
xor
retf
lods
inc
cmp
clc
push
dec
lods
pop
add
lods
jle
push
stc
sahf
fsubr
and
movs
push
fucomi
inc
cmps
dec
mov
push
mov
push
push
sti
es
mov
xor
adc
pop
aas
sbb
fisub
and
call
inc
fstp
fsubr
dec
(bad)
mov
out
jae
adc
je
or
cmp
cli
dec
sub
int
repnz
les
mov
iret
push
or
bound
add
stos
mov
or
movs
adc
stos
imul
cmpxchg
aas
and
fstp
mov
push
lods
icebp
jnp
loopne
sahf
mov
or
add
std
sti
in
ins
lods
and
sbb
and
sub
push
or
lds
in
xchg
sub
jns
fistp
(bad)
inc
fimul
hlt
jmp
cmp
cmp
popf
icebp
and
je
mov
add
(bad)
cdq
cmp
jb
dec
rcr
les
repz
out
push
imul
lahf
sbb
fimul
add
inc
test
xchg
or
js
in
in
out
and
sub
mov
ins
mov
ret
push
sub
dec
neg
xor
xor
aaa
inc
mov
scas
fsub
cmps
cli
outs
out
popa
lds
mov
frstor
(bad)
push
pop
push
push
jge
das
push
fistp
and
pop
dec
test
cs
mov
xchg
xchg
pop
inc
add
sub
nop
retf
pop
jmp
leave
arpl
sub
pop
jnp
out
idiv
sbb
ja
pop
and
loope
dec
scas
out
fwait
ret
jmp
outs
daa
jmp
fcomp
mov
imul
cmp
aam
cwde
test
push
pushw
or
pop
xor
dec
xchg
mov
in
sub
jne
pop
das
scas
xor
cs
scas
dec
sub
jl
and
ja
pop
aam
repnz
push
sub
cmp
cmp
sub
sub
das
ret
xchg
add
jns
repz
cs
out
mov
sub
inc
push
cmovs
inc
fistp
sbb
push
sub
pop
arpl
fisttp
mov
mov
xor
aaa
mov
jmp
loop
repnz
cmp
movs
xor
push
sub
leave
mov
test
repz
mov
xor
pop
cmp
shr
jle
gs
pop
xlat
and
lods
and
and
(bad)
adc
nop
mov
pop
dec
xlat
je
push
cld
sub
dec
inc
mov
lock
repnz
mov
cmp
mov
sub
test
stos
mov
ins
mov
add
dec
xchg
jns
sub
jno
push
xor
lods
mov
dec
js
push
xor
(bad)
nop
jmp
mov
mov
ja
movs
jo
push
push
dec
arpl
xor
stc
add
jp
fstp
jns
js
pop
mov
pop
mov
xchg
jne
adc
shl
jae
rcl
jmp
bound
imul
cmp
push
pop
js
rcr
mov
jbe
inc
push
sar
xchg
aas
in
retf
inc
dec
pop
mov
ss
inc
dec
sbb
xchg
jae
dec
inc
(bad)
in
pop
pop
inc
aas
out
ror
(bad)
movs
int
jge
and
xor
sub
shl
fsubr
inc
push
adc
call
lahf
ret
jo
sub
adc
movs
pop
retf
cmps
int
cmp
adc
iret
dec
imul
(bad)
enter
jge
dec
dec
imul
lahf
repz
lods
and
ret
(bad)
or
fnstsw
js
pushf
ins
xchg
ins
mov
arpl
add
int3
test
pop
cli
leave
addr16
jmp
fdivr
ins
or
cmpxchg
movq
dec
shr
mov
or
outs
xchg
stos
lods
mov
imul
cmp
xchg
adc
fisubr
je
push
int3
ficomp
stos
adc
dec
dec
in
inc
out
cwde
sbb
ja
mov
pusha
inc
icebp
xchg
mov
push
cmp
loopne
and
jne
repnz
jl
mov
push
aam
int
in
cmps
mov
enter
mov
enter
and
jne
sbb
out
jg
(bad)
cmp
dec
lds
ja
pusha
int3
sub
pop
das
add
jns
pop
aad
sar
imul
hlt
(bad)
sbb
add
push
mov
bnd
jmp
jo
add
mov
ret
dec
and
mov
lock
sbb
arpl
pop
cmp
pop
mov
xor
call
sub
lahf
mov
adc
std
and
loope
(bad)
cmp
(bad)
out
mov
xchg
xor
sbb
sbb
call
(bad)
jge
les
ror
jns
sti
jno
ffree
aad
in
out
lods
outs
cmps
ror
xchg
dec
pop
in
into
cmp
cli
mov
jae
out
dec
scas
outs
icebp
fdiv
mov
jge
jo
mov
std
push
xor
push
dec
xchg
test
repz
jo
shl
les
mov
push
movs
jge
retf
out
fsub
add
ins
push
inc
xlat
cs
xlat
dec
xlat
sbb
xchg
sub
inc
sub
shr
les
jmp
out
repz
push
int3
sbb
mov
mov
cdq
inc
std
ror
ins
aaa
pop
outs
inc
lock
sbb
adc
hlt
mov
cs
xchg
out
or
dec
imul
xchg
ret
push
sbb
sbb
push
test
pop
clc
stos
aad
retf
add
ins
fwait
(bad)
shl
or
nop
lods
loope
jg
in
xchg
in
push
mov
add
mov
cmp
mov
movq
and
mov
mov
or
pop
mul
push
outs
call
xchg
and
adc
pop
ret
push
sbb
xchg
test
pop
inc
mov
or
cmp
test
pop
add
add
(bad)
add
mov
jg
sbb
mov
int
lods
push
stc
jecxz
imul
dec
jbe
lods
mov
ss
xchg
mov
jnp
mov
in
int
scas
js
pop
mov
xchg
add
in
dec
std
sbb
add
push
xchg
sub
adc
xchg
xor
iret
xchg
call
sbb
jbe
shl
adc
dec
add
fmul
movs
sub
or
stos
sub
stc
push
xor
inc
les
push
or
add
js
retf
out
xchg
xchg
leave
jnp
lods
mov
cli
(bad)
or
mov
push
and
fs
push
push
jo
push
aad
(bad)
pop
stc
in
out
ins
dec
jmp
or
sbb
cmp
lahf
push
bound
fdivr
idiv
test
ret
sbb
add
test
lahf
add
push
call
push
pop
movs
or
inc
daa
mov
cmc
push
jns
aam
int
loopne
push
and
inc
aas
call
add
xchg
dec
fcomi
cmc
sti
jns
popf
xor
ret
scas
inc
xor
es
iret
jns
mov
mov
sbb
inc
mov
pop
daa
(bad)
rcr
scas
mov
adc
das
jg
push
das
mov
inc
aas
mov
mov
lds
inc
pop
das
pushf
loop
(bad)
pop
xchg
aaa
mov
add
mov
shl
jae
cmc
iret
fsub
inc
xchg
call
or
test
sub
sub
or
iret
sbb
mov
shr
sub
repnz
mov
fild
stc
mov
xor
cmc
cld
mov
retf
sub
add
jmp
cmp
std
cdq
xor
sti
idiv
inc
pop
ret
in
sub
adc
jae
(bad)
adc
aam
mov
retf
mov
jg
rcr
dec
sbb
sbb
jae
bound
sbb
out
jbe
add
sar
loop
fidivr
mov
inc
xor
xor
and
mov
xchg
sub
mov
jmp
jecxz
mov
out
sbb
callw
pop
cli
call
mov
rcr
lds
(bad)
adc
fstp
jbe
addr16
(bad)
in
xor
fsubr
mov
out
mov
and
and
pop
dec
(bad)
int3
pop
es
imul
call
test
xor
dec
push
xchg
pop
je
xchg
ins
pushf
in
enter
pop
jmp
psubw
pop
inc
ror
xchg
pop
lock
inc
sahf
mov
cli
lock
ficom
out
jbe
jnp
sub
(bad)
and
add
mov
int3
loop
sbb
(bad)
iret
xor
fldcw
ins
test
jb
lods
xchg
mov
inc
jne
pop
movs
mov
cmp
leave
mov
mov
jmp
pop
jge
push
rol
addr16
cmps
inc
jns
je
mov
push
sbb
fs
sahf
push
adc
arpl
dec
popa
in
mov
fcom
xor
inc
inc
push
outs
dec
lea
imul
inc
jno
xor
out
add
int3
push
pop
lds
jnp
js
cmp
rol
mov
enter
fwait
push
jnp
push
push
mov
rep
adc
xor
sbb
mov
in
and
arpl
leave
xchg
loop
repz
xlat
lods
inc
fistp
inc
jo
add
sar
inc
imul
sub
pop
push
hlt
jae
cmp
xchg
push
std
mov
xchg
mov
std
fs
retf
shr
push
in
jo
leave
int
mov
pop
cmp
mov
out
pop
(bad)
ss
dec
cmps
scas
pop
out
enter
je
dec
inc
sbb
xor
shl
les
push
push
popa
push
fcmovb
inc
mov
xlat
pushf
and
fbstp
(bad)
(bad)
inc
sub
mov
sub
out
sub
dec
dec
or
add
adc
popa
dec
and
or
mov
push
push
push
adc
sbb
fidiv
and
repz
out
movs
fimul
lds
add
add
sub
outs
(bad)
movs
dec
call
pop
outs
jmp
sbb
inc
loopne
stos
pop
pushf
lea
adc
push
inc
imul
scas
jne
jne
or
jl
cmps
aas
push
push
test
aaa
jg
lds
lea
imul
xchg
cmc
fwait
out
add
sub
xchg
mul
inc
ficomp
inc
icebp
cmps
sbb
push
es
push
xchg
mov
jo
int
lds
dec
daa
jle
lods
ins
jbe
dec
stos
sbb
pusha
bound
test
sbb
jae
adc
arpl
shr
dec
xor
sbb
sbb
mov
mov
pop
sub
mov
loopne
sbb
and
mov
push
shl
das
xchg
(bad)
fsubr
call
ins
lods
movs
xchg
sub
iret
mov
push
into
lea
add
mov
fild
daa
add
fisubr
mov
or
push
mov
jmp
arpl
shl
mov
cmp
mov
inc
cmp
xchg
mov
xor
into
adc
xor
and
int3
or
loope
or
es
fsubr
cs
xor
xchg
mov
mov
push
xchg
and
je
sub
jmp
mov
lahf
pop
scas
icebp
sub
mov
(bad)
fmul
out
inc
xchg
stc
sbb
int
mov
ss
mov
in
jmp
aas
dec
adc
mov
fisttp
cmp
add
loop
int
test
xchg
pop
lea
scas
and
ins
call
pop
lea
aad
sub
mov
or
adc
shl
aad
and
push
mov
and
jmp
ja
dec
sbb
lahf
pop
jmp
in
push
jne
out
bound
or
mov
xchg
push
jg
adc
scas
sub
mov
mov
je
inc
mov
in
stos
xchg
sbb
mov
sub
pushf
mov
nop
pop
in
xchg
sub
dec
sub
test
dec
dec
mov
xchg
push
mov
cmps
daa
mov
(bad)
fcmovb
std
sar
cmp
mov
mov
jbe
or
jmp
lods
(bad)
xchg
retf
mov
mov
cli
repnz
xchg
push
dec
fistp
(bad)
mov
add
inc
sub
mov
jl
mov
cmp
enter
jns
out
and
pop
pusha
mov
(bad)
mov
addr16
int
pop
xchg
gs
pop
nop
jnp
inc
jo
sbb
idiv
push
sbb
shl
hlt
dec
xor
in
xor
cli
sbb
adc
mov
and
cs
popa
in
cmp
jnp
sub
pop
push
cmc
add
inc
add
inc
(bad)
out
push
ror
xchg
gs
repz
xor
cwde
or
jmp
mov
xchg
pop
xchg
hlt
push
push
pusha
push
cmps
and
(bad)
sti
xor
mov
pop
cwde
aaa
in
mov
cmp
mov
ltr
inc
int
mov
adc
leave
retf
xchg
call
jno
lahf
cmp
dec
and
jp
and
jbe
in
bound
xchg
adc
aad
jg
pop
lea
dec
loopne
stc
arpl
push
mov
movs
int3
cmps
je
mov
fcomip
cli
in
aaa
shl
aam
cmc
fisub
adc
xchg
aam
mul
dec
adc
stc
shl
inc
sar
mov
scas
sti
icebp
xlat
dec
xor
sub
call
fnstsw
nop
iret
dec
jl
xchg
movs
sub
icebp
les
shl
inc
in
inc
pop
retf
lahf
out
enter
xchg
aam
push
xchg
retf
cdq
test
les
and
adc
out
add
push
mov
lods
les
sub
add
dec
movs
mov
cmps
jno
add
cli
ja
xlat
data16
fadd
ret
in
sti
int
xlat
lods
(bad)
fucomi
xchg
imul
inc
dec
(bad)
jecxz
std
cmp
mov
dec
pop
sbb
cwde
hlt
jmp
ret
jmp
cwde
shr
mov
sahf
and
lahf
push
imul
mov
xor
lahf
out
iret
xchg
xor
jmp
aaa
in
sbb
inc
sti
and
out
int
jmp
mov
push
ret
jl
aad
out
jmp
mov
imul
jle
aad
sbb
xchg
sbb
push
add
mov
int
adc
ret
neg
and
test
sub
repnz
lahf
sub
mov
fild
fwait
sahf
pop
hlt
(bad)
cdq
and
jmp
mov
(bad)
mov
jo
shl
rcr
icebp
mov
pop
mov
cmp
mov
mov
xor
xchg
jno
lds
inc
push
fs
pop
rcl
mov
mov
or
pop
jns
jp
ss
dec
sbb
lahf
xchg
es
pop
xchg
mov
ins
adc
sbb
out
cmp
pop
pop
mov
das
pop
test
stos
sub
ja
xchg
dec
movs
cld
xor
stos
mov
jp
and
fnstcw
sbb
and
sti
es
les
stos
ins
call
iret
mov
les
jns
sbb
xchg
pop
data16
leave
push
jge
test
and
out
(bad)
call
jge
inc
add
jge
dec
jg
push
test
push
call
dec
jb
sbb
sbb
sub
scas
mov
sub
cmc
ret
(bad)
pop
outs
out
sbb
mov
mov
nop
jbe
pop
dec
sahf
push
in
jg
int3
outs
add
and
ins
jbe
sbb
lods
in
push
cmps
aad
sbb
mov
int3
aas
add
das
dec
loop
out
adc
xchg
mov
(bad)
movs
aad
xchg
push
fldcw
rol
aaa
pop
fs
je
mov
sar
push
sbb
mov
loope
in
push
xor
in
sbb
mov
imul
retf
mov
int3
scas
push
mov
repnz
dec
or
dec
and
xor
nop
cdq
cmps
xchg
out
pop
mov
pop
rcl
outs
cmp
dec
xchg
jmp
cdq
ss
test
jnp
rcl
mov
rol
pop
jle
jmp
movs
mov
sub
fild
jmp
inc
aad
scas
push
cmc
jnp
arpl
cmps
cmp
mov
into
lahf
inc
stos
fldcw
dec
pop
push
test
mov
std
mov
dec
push
out
sub
adc
das
xor
paddsw
sti
js
sbb
stos
jg
xchg
jmp
and
jge
xchg
fmul
stos
xlat
into
shl
lds
neg
and
jne
in
or
sub
pop
les
sub
cs
push
jae
pop
jno
add
push
ins
adc
(bad)
(bad)
in
fisubr
cli
(bad)
mov
xchg
loopne
jl
mov
cwde
sbb
inc
jecxz
and
xor
sbb
jmp
ja
push
stos
cs
add
stos
jnp
fs
loope
and
adc
push
out
test
xor
xchg
daa
int
jecxz
push
mov
push
scas
outs
stos
ins
out
xor
cli
pushfw
cmps
sub
pop
data16
cmp
fisub
bound
jl
popf
or
mov
stc
xor
adc
into
ret
gs
in
xchg
inc
sar
pusha
push
mov
cmp
dec
cmp
jno
add
fbstp
lock
pop
inc
out
push
mov
test
xor
xchg
add
cwde
(bad)
dec
iret
icebp
jno
xor
inc
arpl
xchg
movups
pop
push
retf
nop
fdiv
icebp
pop
pop
mov
xchg
(bad)
dec
inc
jne
loope
adc
ja
ror
sub
add
push
mov
or
or
jae
push
lds
rol
push
sti
or
mov
(bad)
jmp
pop
cmp
or
inc
out
(bad)
lock
cmp
pop
lea
or
push
sbb
imul
or
xor
sub
fcom
in
imul
xchg
inc
fisubr
add
pop
mov
mov
pop
adc
xor
in
daa
iret
outs
and
push
call
enter
(bad)
mov
cmc
mov
in
int3
stc
push
inc
lods
or
lahf
cmp
je
out
mov
pushf
and
sbb
pop
sub
loopne
in
cmp
and
xchg
sub
pop
aad
dec
inc
jmp
add
pop
les
inc
enter
xor
fcomp
out
ss
dec
cmp
sahf
add
neg
mov
popf
outs
out
sbb
jno
xchg
adc
js
daa
xchg
jle
dec
mov
mov
adc
fild
stos
cmp
push
rcr
mov
add
jecxz
xor
adc
into
pop
pushf
mov
jp
or
dec
push
sub
push
(bad)
sar
and
xchg
sub
stos
fs
mov
cmp
and
js
(bad)
aam
or
mov
xor
wrmsr
stos
xchg
aaa
pop
pop
(bad)
xchg
and
dec
sbb
push
stc
je
into
jge
ss
ret
mov
div
cdq
sub
fmul
lds
in
pop
enter
xchg
mov
push
or
add
cmp
xchg
inc
js
movs
pop
dec
stos
in
pushf
push
loopne
aas
mov
and
xor
loopne
jno
xor
retf
mov
mov
jle
mov
fwait
pop
arpl
push
(bad)
sbb
add
movs
popf
das
cmp
sub
in
mov
adc
xor
push
dec
popf
xchg
loopne
stc
mov
push
xchg
xchg
cwde
mov
aam
mov
xor
push
xor
adc
adc
outs
or
inc
add
mov
sub
ss
(bad)
lahf
fwait
and
pop
out
xor
inc
mov
ror
and
in
mov
jge
das
and
mov
pop
dec
or
popa
or
dec
sbb
ror
cmp
sbb
jle
pop
push
fsubr
dec
dec
push
adc
jl
retf
xor
dec
sub
adc
fst
fs
mov
mov
cld
inc
pushf
pop
into
mov
push
push
push
add
repz
lods
push
bound
movs
(bad)
cmps
jp
scas
and
bound
cmps
lea
daa
mov
(bad)
sti
cmp
ds
in
sub
scas
xchg
aad
pop
icebp
jecxz
mov
cmps
fistp
adc
stos
dec
cld
pusha
js
arpl
rcr
mov
cmp
dec
jbe
jl
std
pop
mov
int
sbb
ds
add
sub
pop
push
mov
pop
mov
add
repz
jns
pop
pop
ret
sub
mov
fxch
ds
dec
pop
jle
out
movs
cs
not
jae
dec
out
mov
nop
fnstcw
adc
xchg
xor
pop
or
mov
fmul
jmp
or
cld
sti
out
push
and
movs
arpl
popf
nop
popa
mov
hlt
nop
mov
and
push
xlat
adc
mov
sti
sar
mov
movs
xchg
cmps
or
outs
clc
stc
xor
sub
jne
xchg
push
push
pop
mov
(bad)
push
mov
mov
(bad)
xlat
call
shr
sub
shl
leave
cmp
inc
adc
pop
cmps
jnp
add
jmp
fcom
fsubr
inc
mov
cdq
push
mov
ja
mov
repz
add
test
dec
jne
dec
sub
add
cmps
in
xchg
sbb
or
div
push
retf
xchg
push
test
call
fnstcw
add
xchg
jb
xor
xor
fist
push
scas
jno
add
mov
mov
lds
dec
jg
daa
xor
sti
call
pop
add
mov
popf
loop
gs
sahf
(bad)
jmp
add
inc
(bad)
sar
jno
in
jne
pop
addr16
push
cdq
popf
loopne
sub
inc
lahf
test
sbb
stc
push
jp
cmp
movs
and
pop
push
add
fiadd
xchg
and
push
movs
mov
pusha
push
in
or
jmp
loop
pop
mov
push
aaa
sti
lea
in
aas
cmp
and
popf
mov
repz
push
and
(bad)
cmps
and
fst
mov
add
popf
int3
cmp
jp
lahf
(bad)
xchg
popa
jmp
movs
xchg
(bad)
daa
mov
(bad)
cmc
cmp
(bad)
call
jl
icebp
fwait
mov
or
jg
popf
jbe
out
iret
mov
aaa
xor
mov
jge
jne
movd
xchg
jmp
xchg
stos
jns
pop
leave
inc
sub
jmp
jge
pop
add
fist
jne
inc
call
(bad)
xlat
push
add
pop
inc
jge
and
ja
out
push
ret
xchg
fistp
mov
or
test
mov
mov
lea
(bad)
or
out
and
push
mov
xor
lods
xor
ins
xor
sbb
inc
lods
mov
std
fidiv
pop
adc
lds
adc
pop
cmp
jbe
inc
sub
pop
mov
mov
xchg
cld
inc
das
sahf
cmps
or
push
sbb
xlat
clc
data16
push
stos
in
mov
mov
mov
nop
ins
fisttp
popf
or
jecxz
sbb
or
mov
sub
mov
rol
jnp
push
push
test
add
jle
(bad)
pop
adc
repz
ffreep
xor
retf
movs
and
pusha
xchg
xchg
pop
fstp
ds
cmp
sbb
movs
jmp
fidivr
mov
dec
out
lds
nop
std
in
inc
cmps
les
push
(bad)
cmp
xchg
(bad)
movs
iret
loopne
dec
retf
stc
mov
mov
ds
sub
arpl
push
push
xor
jbe
popf
mov
retf
fiadd
out
loop
cmps
xor
in
mov
mov
mov
jg
outs
test
iret
rcl
pmaxsw
xchg
lods
ret
sub
adc
scas
sbb
adc
cmp
(bad)
jg
or
sbb
sbb
add
sbb
sub
lock
adc
xchg
mov
and
cmps
aam
out
stos
nop
stos
stc
scas
mov
lock
mov
inc
popa
lods
xchg
pop
mov
mov
jbe
mov
push
ins
pop
mov
mov
pop
and
pop
repz
jb
push
stos
data16
mov
push
ss
mov
mov
arpl
pushf
fdivr
call
(bad)
sti
neg
call
ds
fisub
ror
rcr
dec
ror
mov
loope
dec
div
cdq
push
dec
mov
push
imul
mov
add
inc
sahf
jns
fist
dec
push
scas
hlt
movs
sahf
cmp
sbb
jmp
pop
dec
fmul
cli
popf
out
out
jg
xor
xor
jge
mov
jp
out
add
sub
nop
push
push
into
mov
shl
ret
jg
sub
ins
push
mov
adc
push
jmp
in
shr
dec
mov
repz
adc
push
test
jmp
fld
imul
out
daa
mov
jne
test
pop
mov
(bad)
jg
sub
inc
out
je
leave
repnz
inc
inc
xchg
fldlg2
cmc
push
cmp
inc
lods
aas
and
mov
sub
mov
jle
mov
cli
pop
retf
and
jl
es
test
dec
mov
cmps
dec
sub
mov
mov
push
mov
cmps
pop
sub
out
xor
es
rcr
lahf
xchg
xlat
ss
xor
sar
loope
enter
inc
call
loopne
push
call
mov
test
xor
rcr
sub
sub
das
addr16
jne
jb
rol
push
in
dec
mov
xchg
ins
and
neg
xchg
push
enter
cli
loopne
int
dec
rol
lds
in
xchg
mov
jne
add
cmp
(bad)
jl
dec
dec
pop
xchg
test
xchg
jl
cmp
lock
inc
aaa
xchg
add
repnz
call
pop
add
enter
xchg
sbb
rol
jne
lods
xlat
adc
inc
sbb
dec
mov
ins
pop
jp
sub
mov
add
std
aad
out
push
into
hlt
rol
cld
lods
mov
pop
jge
mov
jmp
fst
push
mov
ret
mov
movs
jb
lock
jge
daa
dec
ins
mov
mov
push
dec
lahf
pop
adc
dec
mov
cmp
lea
imul
xor
push
leave
add
jge
or
loope
lds
pop
mov
in
not
add
sbb
jmp
das
das
(bad)
push
xlat
not
fwait
mov
stos
data16
cli
rdmsr
pop
pusha
push
and
icebp
mov
and
pusha
call
fisub
outs
in
jno
sti
dec
cmc
call
pop
lods
and
sbb
addr16
inc
jl
test
int3
push
retf
or
cmc
jmp
fwait
call
imul
movs
xchg
je
lock
jno
fsubr
lods
fadd
pop
ins
push
mov
outs
test
xchg
mov
add
aas
mov
add
and
push
jmp
or
dec
jo
and
jmp
test
out
pusha
je
mov
or
dec
dec
jae
cmp
retf
cwde
inc
inc
arpl
out
into
xchg
lods
xchg
movs
xchg
push
lea
mov
xchg
sub
in
or
in
xchg
sub
push
daa
jbe
in
sbb
xchg
imul
loop
xor
xlat
clc
retf
hlt
jmp
pop
jae
dec
sbb
and
pop
mov
inc
xchg
push
fisub
cmp
sub
(bad)
mov
mov
xor
cmp
push
mov
mov
jae
pop
inc
push
es
sbb
je
leave
pushf
mov
es
cmp
lods
jecxz
shl
push
je
lock
out
std
xchg
mov
or
repz
add
out
sub
scas
jae
sub
in
pusha
mov
jl
sbb
jecxz
xchg
(bad)
cld
add
test
out
mov
inc
add
pop
xchg
in
xchg
mov
pop
fwait
shl
test
cmp
aad
and
mov
or
adc
pop
xchg
sub
scas
or
xchg
sbb
into
fwait
xor
and
dec
fidivr
mul
adc
jmp
sub
jnp
enter
adc
dec
push
jb
mul
mov
nop
into
fwait
xor
in
aam
sub
in
add
inc
mov
pop
test
xor
xchg
push
adc
jmp
out
hlt
jnp
jno
jo
call
pop
sbb
xlat
jg
in
sbb
mov
sub
mov
nop
mov
pop
xchg
adc
xor
xchg
and
aam
lock
jo
cmc
sbb
in
ret
fidiv
in
movs
xchg
mov
jne
add
fdiv
es
adc
stos
nop
int
and
or
pushf
xchg
ds
iret
ret
xchg
(bad)
cmp
or
les
xor
jmp
cmp
fisttp
dec
mov
(bad)
mov
and
stos
push
hlt
(bad)
fdivr
jb
pop
fwait
jl
mov
arpl
sbb
xor
jp
repnz
arpl
fdiv
mov
push
movs
add
mov
inc
jmp
mov
ret
imul
fwait
fwait
rcr
push
and
ss
add
les
or
jo
lea
push
arpl
xchg
popf
sbb
ret
ins
(bad)
or
mov
push
xchg
and
sub
addr16
cdq
call
pop
das
in
(bad)
test
mov
cdq
loope
dec
mov
or
cmp
and
cmps
retf
stos
gs
sbb
(bad)
scas
jmp
cmp
inc
repz
cs
jmp
movs
add
cs
xor
ret
and
ficomp
loopne
ss
dec
xlat
pop
ins
dec
cwde
mov
inc
jns
call
outs
pop
pop
cmovo
fdiv
(bad)
test
(bad)
je
sub
push
les
inc
or
int
and
push
push
fcomp
jo
hlt
nop
inc
mov
xlat
test
movs
int3
stc
shr
or
sub
jo
cwde
gs
sbb
ret
pop
push
xor
mov
and
scas
mov
sbb
imul
cmp
fld
retf
jb
dec
(bad)
sbb
push
jp
rcl
(bad)
jmp
rcr
push
jle
pop
movs
push
test
and
or
mov
(bad)
and
idiv
ret
retf
stos
push
jge
fldcw
sbb
retf
pop
pop
scas
pop
cmps
out
test
fisub
ret
jl
dec
(bad)
cdq
loope
mov
sub
lea
cmp
or
dec
loopne
add
cmp
push
mov
aad
jae
xchg
bound
push
cmp
jge
arpl
pop
dec
xor
shl
dec
jmp
je
inc
data16
out
aas
add
mov
movs
ror
adc
cld
or
mul
jmp
cdq
dec
aaa
ins
jp
aas
(bad)
nop
jo
call
xchg
mov
scas
bnd
pop
mov
xor
mov
loopne
adc
arpl
out
cld
inc
(bad)
jno
std
loope
std
push
pop
ficom
push
inc
mov
dec
pop
cmp
mov
sub
or
hlt
push
sub
(bad)
mov
scas
call
pop
mov
pushf
(bad)
mov
add
push
and
lea
mov
fs
sub
and
xchg
ss
mov
and
pop
mov
cmc
add
pushf
out
out
mov
or
scas
and
pop
fwait
cmp
xor
pop
mov
mov
mov
dec
frstpm(287
in
xchg
jge
shl
loop
inc
outs
or
fnstcw
loopne
aaa
jl
adc
inc
outs
or
dec
xor
mov
pop
repz
sahf
in
fld
nop
push
int3
jnp
sbb
xor
inc
movs
int
loop
push
ror
sbb
fdiv
(bad)
sbb
xchg
mov
pop
mov
mov
mov
repz
mov
rcr
int
xor
sub
mov
retf
inc
cmp
call
shl
imul
movs
in
cli
bound
dec
(bad)
aam
pop
std
cli
cmc
mov
test
js
mov
movs
jl
repnz
aam
push
repz
pop
leave
xchg
and
pop
daa
ss
(bad)
sbb
(bad)
out
add
loop
popf
dec
dec
mov
out
inc
push
mov
scas
cwde
cs
jns
push
pop
mov
mov
ret
fcom
hlt
call
stc
(bad)
xchg
stos
push
dec
pop
ins
push
sub
and
ins
add
addr16
lods
inc
mov
les
sbb
movs
cmps
jb
or
dec
add
rcl
out
aam
xchg
popf
sbb
inc
(bad)
mov
xor
mov
pushf
xchg
cmc
and
cdq
adc
movs
dec
dec
xchg
or
mov
pop
shr
in
les
mov
iret
ffree
lods
lods
in
jae
push
lock
jg
jne
sub
dec
rcr
mov
lods
inc
pop
mov
retf
adc
sbb
add
or
in
and
mov
push
mov
pop
mov
xor
cmp
test
pop
inc
fcomp
xor
mov
fptan
cmp
fst
or
jne
fsubr
sub
mov
xchg
nop
cmp
je
ret
test
push
push
imul
fild
ins
sub
dec
daa
sub
(bad)
mov
mov
ret
mov
(bad)
mov
or
jecxz
imul
movs
outs
bnd
or
sbb
inc
addr16
daa
cmp
sub
jge
js
popa
mov
pop
sar
sub
add
movs
pop
adc
pop
int3
sbb
sub
sbb
scas
cs
in
add
xchg
push
mov
hlt
xchg
call
push
mov
or
jl
(bad)
jle
sti
mov
stos
pushf
loopne
push
xchg
lds
in
mov
mov
cmp
adc
sti
xor
jns
xchg
pop
xchg
add
test
push
jb
push
dec
inc
sbb
stc
jb
pop
stos
mov
mov
and
adc
jle
fcomp
ss
rol
aad
adc
arpl
sbb
fcom
rol
inc
jo
shl
push
xchg
push
les
shr
xor
push
or
daa
sar
pop
mov
into
test
pop
ja
xchg
call
ss
mov
cmps
add
mov
and
xchg
push
out
lods
outs
retf
and
lock
cmps
sbb
jmp
inc
xchg
sbb
cmps
mov
push
xchg
stc
jo
pop
clc
(bad)
ficomp
iret
sub
adc
stc
shr
shl
push
push
mov
stos
xchg
test
repnz
cs
ret
test
fcomip
pop
mov
loopne
scas
das
(bad)
repz
cmps
dec
add
jmp
cmp
out
repnz
xchg
addr16
repnz
repz
fs
inc
mov
in
sub
cmp
cwde
lods
movs
les
mov
mul
xor
mov
(bad)
pop
pop
mov
add
sbb
inc
or
sub
and
adc
mov
dec
cmps
inc
jg
mov
arpl
enter
xchg
push
out
push
jae
cmp
add
cmp
in
push
(bad)
pop
lea
mov
add
mov
dec
or
adc
mov
stos
in
hlt
imul
cmp
sub
dec
jne
lods
stos
inc
(bad)
(bad)
call
push
xchg
hlt
call
arpl
sar
icebp
xor
xor
xchg
sub
mov
loop
jno
fisub
push
mov
test
push
(bad)
popa
leave
pop
add
div
aas
inc
add
lahf
stos
rol
xchg
call
idiv
jo
outs
test
adc
into
ret
outs
jg
iret
and
and
jp
aad
movs
std
cdq
neg
call
mov
mov
or
mov
aaa
fdivr
fwait
adc
pop
mov
loopne
or
mov
test
cli
adc
int
sbb
(bad)
mov
in
cmp
pop
ficomp
popf
outs
mov
sbb
adc
sti
or
mov
pop
or
jmp
cmp
inc
nop
popa
mov
xor
out
loope
(bad)
sbb
push
mov
fld
mov
adc
lds
cld
iret
nop
sbb
mov
add
(bad)
adc
mov
jnp
push
mov
mov
add
jl
sahf
jae
call
push
sar
movs
mov
pop
iret
push
adc
bound
jmp
dec
popf
or
push
jge
mov
mov
xor
xchg
nop
xlat
gs
fstp
pusha
(bad)
shl
mov
lods
imul
add
je
and
daa
shl
lods
cs
mov
xor
jo
ins
in
or
shl
inc
fstp
in
aad
xlat
ret
cmp
in
xor
jp
sar
popf
out
and
xor
sbb
out
(bad)
jae
push
loope
ins
pop
sbb
das
or
loop
xchg
pop
fbld
xchg
sbb
cld
loop
push
js
cmp
lds
mov
jl
cmp
test
mov
aam
int3
sbb
jl
dec
mov
mov
mov
mov
mov
mov
pushf
sti
mov
adc
mov
lock
bound
enter
(bad)
cmp
dec
xor
(bad)
sbb
push
std
into
(bad)
daa
out
je
mov
push
push
std
cwde
xchg
jmp
pop
mov
test
cmp
adc
test
je
xor
js
mov
jno
jp
ret
pusha
sbb
and
enter
ret
mov
pusha
inc
rol
push
test
pop
sbb
push
xor
mov
jo
jecxz
ret
xor
popf
push
pop
push
mov
jno
jae
gs
jno
loopne
add
pop
xor
std
pop
es
mov
sbb
in
cdq
xor
stos
sub
mov
jbe
xchg
sbb
pop
jp
mov
movs
sbb
fsubr
sbb
ret
fidivr
mov
ret
add
out
dec
loopne
mov
loope
fld
jae
stc
mov
movs
push
xor
jle
outs
sub
daa
or
mov
pop
add
add
mov
fnstcw
pop
adc
and
xor
inc
loop
(bad)
test
xor
rcl
mov
retf
std
adc
ins
sbb
call
xchg
xchg
pop
ja
pop
push
push
call
add
xor
xlat
retf
stc
dec
jecxz
adc
dec
push
cmp
xor
aas
(bad)
push
xor
les
out
fld
adc
mov
mov
mov
in
gs
xor
test
cs
jnp
push
mov
retf
ds
cld
push
ja
loopne
mov
dec
mov
call
fild
adc
xor
cmp
loopne
outs
out
push
cmp
add
pusha
pushw
sub
pop
popf
cmp
neg
pop
jp
mov
sti
sar
and
mov
push
xor
out
in
cli
sub
and
aaa
adc
mov
sbb
pop
sbb
icebp
ds
test
gs
out
adc
cdq
mov
movs
sbb
cmp
mov
jge
mov
xchg
sbb
(bad)
cmps
lds
dec
imul
or
adc
mov
add
add
mov
(bad)
(bad)
retf
ins
loop
fs
mov
data16
daa
sbb
push
push
add
(bad)
das
cmp
mov
das
xor
and
add
retf
push
popf
and
int
(bad)
push
xor
in
and
inc
scas
dec
lods
jb
cli
lds
and
stc
xor
les
xor
lods
cmp
js
mov
or
mov
push
or
inc
sbb
mov
sub
mov
and
iret
cs
test
pushw
pop
mov
icebp
cmp
mov
(bad)
aad
fsub
add
and
mov
dec
mov
pop
dec
shr
mov
je
cmp
adc
push
mov
add
rcr
leave
cmp
out
js
mov
push
outs
js
pop
dec
fadd
rcr
inc
(bad)
jl
sbb
div
pop
in
cwde
inc
cmp
shl
pop
jp
dec
loopne
push
(bad)
je
(bad)
aaa
jmp
mov
pop
movs
jo
out
in
arpl
pop
fidiv
dec
mov
das
mov
jle
jmp
mov
rol
xchg
enter
xor
stc
(bad)
sbb
cmps
fisttp
div
xchg
inc
outs
(bad)
xchg
clc
(bad)
xor
mov
sbb
aad
aad
mov
pop
pop
push
popf
push
and
xchg
outs
mov
imul
and
lds
push
shr
cmc
call
or
lock
es
cmp
add
cmps
fsubr
pop
lahf
bound
sbb
sub
movs
retf
xor
cmps
dec
jno
fwait
scas
jae
dec
shl
xchg
add
ret
xor
xor
jae
add
mov
or
sbb
popa
pop
cmp
mov
nop
add
iret
fs
sub
aad
fucomip
div
add
xchg
aam
cmps
test
mov
sub
lock
sahf
cmp
loop
ret
xchg
arpl
call
jae
test
in
adc
adc
sbb
sub
test
pop
or
iret
lock
out
or
iret
imul
xor
lock
dec
inc
inc
in
jmp
cmp
fcom
inc
lea
mov
xor
add
push
imul
ja
xchg
sub
loope
and
pop
js
lods
enter
out
mov
test
mov
mov
xchg
mov
lods
popa
mov
sbb
shr
shl
or
mov
mov
gs
sub
repz
cwde
fwait
ss
cli
test
xchg
das
cmps
fdiv
std
lock
mov
cmc
pop
add
mov
sbb
std
mov
imul
pop
jecxz
loopne
(bad)
icebp
mov
or
loopne
in
not
call
sti
jne
repz
nop
push
leave
dec
pop
pop
out
cmc
jmp
mov
(bad)
out
and
out
sbb
mov
ret
and
daa
mov
mov
xchg
fisubr
adc
push
xchg
mov
add
xchg
es
sbb
loopne
mov
icebp
icebp
(bad)
jmp
imul
add
push
xor
sbb
(bad)
fstp
xchg
jl
stos
xor
jle
adc
daa
mov
sub
fcmovne
cmps
xor
jge
cmp
xor
and
(bad)
jbe
cmp
inc
pxor
pusha
mov
adc
mov
ins
add
or
ret
add
loopne
movs
jl
fldcw
inc
outs
lods
popf
(bad)
xor
push
ret
shr
pusha
adc
inc
movs
sub
je
out
push
in
adc
repz
add
sbb
and
xchg
cmps
mov
jle
pop
movs
shl
inc
fst
daa
shr
xchg
cmp
jmp
jo
sbb
retf
lods
xor
mov
lds
mov
fldcw
loope
(bad)
mov
sub
jge
lea
hlt
int
add
jae
mov
xor
xchg
retf
push
pusha
mov
xchg
push
push
arpl
and
iret
ins
shl
or
retf
inc
mov
sbb
fdiv
jo
mov
pop
sub
push
cmp
xor
lock
mov
or
nop
outs
jbe
pop
push
ds
mov
addr16
mov
push
shl
push
ss
test
stos
cmps
stc
ret
jmp
data16
int
adc
cmps
mul
cmp
ins
ror
inc
retf
jns
pop
lds
push
out
xor
push
sub
test
add
mov
or
pop
(bad)
mov
push
or
inc
add
pushf
nop
dec
call
xchg
aad
mov
in
nop
sbb
add
imul
mov
or
div
mov
std
movs
fs
test
hlt
fbld
fdivp
jmp
cmp
push
fist
push
jge
add
add
lahf
mov
sahf
test
popa
scas
mov
mov
ins
cmp
or
shr
retf
sbb
adc
cli
int
daa
and
cmp
bnd
pop
imul
mov
outs
sub
sub
jle
mov
mov
inc
retf
fimul
push
push
repnz
div
sbb
add
inc
scas
dec
arpl
and
dec
out
dec
sti
xor
push
mov
jecxz
and
jo
(bad)
(bad)
and
dec
mov
xchg
jle
shr
dec
popf
jmp
sub
adc
rcl
int
cmp
out
clc
in
sahf
stc
or
fisttp
mov
ds
adc
pusha
mov
outs
mov
jno
rol
stc
mov
adc
rol
ror
das
cmp
xor
(bad)
jmp
sti
fmul
pop
mov
in
in
dec
fnsave
jecxz
daa
adc
ja
mov
xor
sub
mov
cmps
retf
das
cmp
(bad)
adc
stos
mov
fdivp
into
push
mov
jg
ja
les
out
out
ret
cmp
into
xor
add
sub
(bad)
cwde
pop
jo
retf
fmul
ds
push
xchg
or
push
ret
dec
ret
ficomp
jmp
pop
sbb
xchg
xchg
repz
cmp
xor
push
and
bound
lods
cmp
xchg
xchg
or
sub
dec
jl
ja
xchg
mov
pusha
xchg
adc
gs
add
inc
push
add
addr16
clc
mov
push
pop
jle
dec
fcmove
and
jmp
jmpw
pushf
xchg
pop
push
jmp
xchg
jmp
addr16
jmp
push
enter
mov
push
mov
data16
inc
jecxz
fldenv
lods
jle
arpl
cmps
fist
xor
xchg
jno
dec
push
rcr
pop
and
out
mov
out
lahf
dec
(bad)
mov
or
stc
or
pop
je
lea
les
jl
outs
jg
sahf
test
jo
cdq
inc
neg
xchg
aas
dec
stc
mov
aam
cld
nop
bound
inc
and
adc
adc
cmp
mov
mov
fcmovne
jnp
stos
nop
push
xchg
arpl
inc
stc
shr
jae
fnsave
push
cwde
add
cld
xor
in
inc
rcl
dec
loopne
std
dec
push
push
jle
loopne
xchg
mov
call
and
inc
out
jno
popf
scas
mov
ret
ror
mov
cmp
pop
sub
loop
test
adc
cld
add
(bad)
and
pop
dec
int
test
mov
dec
push
xor
outs
jp
mov
clc
loopne
mov
adc
ret
repnz
sub
cwde
push
cmps
fdiv
bound
jge
jp
xchg
les
xchg
mov
jge
stos
je
jecxz
pop
mov
enter
mov
js
sbb
fisubr
pop
dec
das
mov
jge
xor
sub
pusha
popa
jp
ret
mov
lods
mov
jne
mov
jbe
loop
iret
imul
adc
or
cmp
call
mov
inc
cmp
dec
retf
or
or
into
(bad)
loop
rol
push
sbb
cld
lock
test
loope
(bad)
cmps
pushf
mov
sbb
aad
ja
(bad)
or
cmps
mov
inc
std
lods
push
jae
dec
sahf
nop
and
test
imul
cli
jne
into
dec
rcl
push
ret
test
push
inc
hlt
(bad)
je
fiadd
pop
test
aam
inc
xor
add
cld
sub
inc
in
ss
nop
aad
dec
push
pop
cmp
xor
and
jbe
jnp
gs
clc
sub
mov
mov
adc
clc
(bad)
sub
cmp
or
cmc
adc
popa
and
mov
mov
xchg
xchg
sub
jg
es
sub
pop
adc
add
mov
in
mov
pop
push
out
or
jle
xchg
or
std
jg
fmul
add
xor
xchg
mov
push
and
sbb
mov
idiv
ror
lock
add
jecxz
cmp
nop
mov
push
retf
shr
pop
(bad)
shr
pop
or
inc
call
dec
mov
cmp
mov
data16
add
inc
vmovlps
jge
scas
push
in
sub
xchg
jl
test
pop
(bad)
cmp
jae
and
in
mov
xchg
mov
imul
ret
jo
js
mov
pop
fstp
es
mov
pusha
arpl
hlt
retf
xor
jp
leave
xor
ret
(bad)
sub
or
dec
cmp
iret
cs
adc
popf
and
mov
aaa
xor
outs
retf
or
cmp
cmp
sbb
in
ret
cmp
or
ror
push
sbb
xchg
aaa
lock
push
shl
loopne
mov
mov
out
jge
call
outs
fcmovne
jo
xchg
push
mov
out
inc
cmp
mov
mov
nop
cld
xor
pop
or
xchg
nop
test
nop
cwde
lahf
arpl
mov
xlat
adc
std
sbb
iret
dec
test
imul
outs
jns
loope
sbb
seta
dec
adc
xchg
or
(bad)
sahf
xor
fidivr
jl
(bad)
inc
shl
mov
sti
jne
xor
scas
leave
mov
int3
lahf
inc
xchg
push
jecxz
push
mov
ret
mov
mov
out
add
jbe
scas
and
lock
mov
popf
sub
imul
aaa
out
mov
mov
xlat
push
or
mov
rcr
ret
les
test
cmps
jb
icebp
call
gs
cs
mov
ficom
sub
push
jle
fld
sbb
cmp
repz
push
mov
and
loopne
in
sub
ss
popa
ss
stc
jp
xchg
push
icebp
xor
cwde
hlt
cdq
push
out
jnp
icebp
fwait
test
inc
test
mov
mov
add
data16
loopne
fdivr
inc
(bad)
jge
nop
(bad)
fst
cmp
mov
loop
(bad)
shr
lds
dec
cmc
mov
pop
int
jnp
les
ret
dec
popf
pop
xchg
inc
pop
adc
sbb
push
push
ins
xor
xlat
ret
data16
add
or
pop
outs
inc
mov
imul
mov
jg
(bad)
inc
jl
sub
jno
jle
arpl
stos
fs
inc
ret
pop
dec
out
cld
mov
lea
and
adc
jmp
fwait
mov
mov
fs
(bad)
(bad)
leave
jmp
and
lock
pop
repnz
jge
fcmovb
cmps
cs
ins
xchg
jns
pushf
cli
xor
ja
and
push
jle
imul
sub
stos
xchg
data16
sub
daa
les
xchg
jp
ss
ret
in
enter
jle
dec
aad
int3
pop
in
dec
sub
fnstcw
fiadd
dec
call
jne
cwde
cdq
(bad)
add
test
ins
sbb
cmps
push
les
jg
xchg
push
sar
sbb
mov
shl
adc
les
inc
fs
push
mov
pop
fwait
stos
mov
mov
inc
ins
out
add
add
clc
nop
inc
popf
xor
repz
xor
dec
data16
adc
popf
push
int3
dec
ss
sub
and
mov
cmp
popa
sbb
lds
int3
repz
ins
push
aam
mov
es
cmp
or
mov
xlat
mov
shr
cmps
scas
retf
or
sub
sbb
cmps
cmp
cmp
sub
int3
push
mov
leave
retf
in
mov
adc
loop
jo
test
pusha
add
jp
sahf
add
mov
xor
out
or
xor
or
inc
mov
or
mov
xlat
les
cdq
mov
adc
push
push
out
stos
stc
bound
(bad)
out
pop
imul
shr
inc
imul
add
(bad)
xchg
push
xor
ins
sbb
xchg
pop
bound
enter
test
push
and
sbb
push
inc
pop
(bad)
push
movs
retf
aad
mov
sub
ins
adc
xchg
push
and
add
sub
inc
cld
mov
movs
mov
ret
cmp
leave
(bad)
xchg
shl
sbb
inc
cmp
mov
cmp
push
jg
or
adc
(bad)
xchg
sub
scas
loope
ret
add
inc
xchg
push
ins
add
jmp
fimul
in
cmp
mov
leave
mov
iret
mov
sbb
mov
cmp
movs
jecxz
scas
jb
mov
clc
fsubp
push
in
pop
mov
call
js
push
ficomp
pop
scas
ret
push
ror
sub
fld
popa
(bad)
int
inc
mov
retf
jle
fadd
in
mov
adc
cmps
dec
dec
sub
dec
push
sbb
mov
icebp
push
add
add
pop
inc
clc
(bad)
call
lea
movs
mov
inc
lods
inc
dec
adc
fistp
cmc
or
addr16
push
inc
movs
mov
mov
xchg
inc
push
in
xor
sti
scas
sbb
sbb
mov
sub
mov
cmp
pusha
lock
in
or
add
xchg
xchg
daa
lods
test
sbb
imul
(bad)
sbb
adc
call
pushf
jp
cmps
dec
xchg
adc
in
es
xlat
cmps
retf
inc
sbb
adc
fst
dec
repnz
mov
in
int3
jmp
shr
push
pop
adc
test
daa
mov
sti
sub
test
jno
iret
out
sti
add
lods
cmp
adc
mov
mov
xchg
jmp
jle
dec
mov
push
scas
int3
sub
(bad)
in
jno
sub
and
aam
nop
pop
test
fistp
jmp
sub
cmp
daa
jg
sti
call
aam
xlat
inc
adc
fwait
push
nop
xor
imul
mov
js
(bad)
aaa
sbb
retf
mov
rcl
fdivp
cli
icebp
fnstenv
cmp
cmp
mov
add
jge
ins
mov
cmp
out
ret
cmp
cwde
iret
out
lods
cld
sbb
stc
or
dec
popf
clc
stos
ret
push
cmp
out
movs
push
xchg
dec
pushf
push
sub
sbb
dec
aaa
out
pop
mov
xchg
xchg
and
sbb
mov
xor
out
inc
jl
push
inc
mul
mov
mov
push
out
dec
dec
arpl
push
mov
jge
outs
std
mov
call
mov
cmp
mov
idiv
leave
xor
push
mov
jb
or
and
ret
dec
ja
scas
popf
test
adc
call
rcl
inc
in
ret
pop
push
mov
mov
cmp
adc
loop
imul
mov
fsub
adc
mov
stos
push
push
mov
(bad)
fcom
ja
push
jp
push
mov
enter
ffreep
stc
std
jnp
and
imul
dec
xor
cmp
fidivr
mov
mov
movs
mov
xor
shr
scas
push
mov
jecxz
adc
xor
and
and
leave
pop
jl
sahf
sbb
icebp
test
sbb
(bad)
cld
mov
clc
ds
cld
pusha
cmp
lods
imul
jmp
xor
cmps
xchg
adc
push
js
xor
push
jle
or
sub
test
loop
or
nop
add
movs
sub
sub
xchg
test
push
lods
out
call
shl
arpl
ror
cdq
cmp
ja
cmp
addr16
mov
das
mov
jmp
movs
leave
xlat
mov
pop
push
js
data16
and
mov
mov
aad
push
sti
push
(bad)
mov
push
mov
test
xchg
dec
push
mov
pop
push
cmp
pop
inc
cdq
sti
or
retf
add
dec
sub
pop
mov
aam
inc
dec
test
cwde
inc
imul
int3
dec
mov
add
sub
or
lahf
cmps
dec
mov
xor
ins
std
call
(bad)
lahf
cmc
outs
pop
pop
push
adc
add
out
xchg
xchg
xchg
cmps
jne
cmp
clc
icebp
icebp
movs
ss
xor
and
jbe
push
and
lods
cmps
mov
out
stos
ret
sub
fldcw
mov
scas
mov
sahf
ror
and
std
arpl
mov
outs
nop
add
inc
xor
rcr
inc
pop
ficom
shl
adc
fisub
add
out
ins
mov
sub
xchg
bound
cmp
pop
outs
les
repz
cmp
push
dec
sar
add
int
cli
jge
pop
inc
dec
ret
fbld
ss
pop
lods
push
mov
xor
(bad)
mov
jp
fwait
sub
popa
or
add
pop
(bad)
stos
test
pusha
add
dec
jae
(bad)
aas
inc
pop
into
mov
fs
push
inc
sub
enter
push
jnp
push
jecxz
in
aas
cmps
and
xchg
sbb
mov
or
shr
mov
jb
cli
dec
fs
rcr
pop
mov
lock
jns
fcomp
rcr
jmp
test
xor
cs
lods
mov
outs
dec
jbe
sbb
out
arpl
cmp
mov
adc
sub
and
sub
dec
push
inc
inc
fbstp
push
(bad)
adc
dec
retf
mov
out
jmp
jmp
pop
stos
dec
xor
adc
dec
pop
or
jb
outs
inc
mov
dec
and
sub
aad
dec
(bad)
call
xor
xor
or
push
push
pop
mov
add
jmp
stc
cmp
push
dec
fwait
call
and
leave
call
lock
xor
mov
mov
adc
icebp
mov
or
adc
dec
lds
lods
sub
in
mov
clc
fsubr
scas
adc
xchg
jo
aas
cmp
and
loopne
mov
mov
das
out
(bad)
fild
or
jo
iret
stos
and
mov
sbb
push
sbb
xor
rcl
cmps
cdq
xchg
adc
xchg
bound
jp
cmp
add
mov
popa
aas
bound
lock
movs
test
outs
push
sub
push
std
sti
mov
cmp
call
loop
dec
lods
jmp
jmp
jns
or
cmp
and
fdiv
int
push
pop
or
fistp
dec
mov
(bad)
call
popa
std
or
ja
mov
xchg
dec
cmc
movs
les
retf
cmp
mov
out
rol
inc
xchg
sbb
jecxz
int
iret
imul
or
mov
aam
adc
add
not
les
sbb
inc
cmp
sub
fstp
nop
out
test
xchg
rol
mov
retf
gs
addr16
jle
mov
lods
nop
inc
cmps
test
dec
ret
stos
pop
push
out
mov
(bad)
sbb
test
add
aam
push
pop
jmp
push
lods
dec
stos
cmp
pop
loope
jle
xor
and
imul
fidiv
ret
fwait
dec
jnp
push
xor
in
mov
call
sub
jo
push
pop
xor
jo
sbb
jae
push
adc
int3
retf
add
sbb
enter
and
sbb
pop
lock
push
and
js
push
in
bound
cdq
sub
and
pop
je
stos
push
shl
sub
retf
cwde
pusha
sub
and
test
mov
or
sbb
clc
add
adc
inc
mov
(bad)
cli
inc
or
sub
push
add
add
sbb
or
xchg
in
and
mov
xor
add
sub
cli
or
sub
loopne
sbb
dec
shl
inc
popa
mov
dec
push
ror
into
jecxz
and
outs
or
call
inc
mov
mov
mov
add
inc
mov
fdiv
adc
add
mov
inc
out
inc
ds
lods
out
mov
mov
or
add
xor
pop
aad
xlat
ja
jp
repz
add
push
out
gs
(bad)
cwde
jecxz
mov
repz
mov
scas
cld
push
outs
fnstcw
cs
int3
out
test
enter
pop
sub
das
test
adc
(bad)
cmc
js
mov
or
sbb
(bad)
dec
jecxz
jle
sub
scas
pop
retf
ss
test
or
out
jmp
mov
idiv
mov
or
mov
mov
mov
sbb
cs
repnz
push
iret
sub
cli
add
add
call
loope
mov
mov
in
inc
sbb
lahf
sbb
jge
int3
scas
lea
cmp
jp
sbb
inc
(bad)
sub
jbe
cmp
ss
out
mov
push
pushf
add
mov
or
jno
cld
sar
aad
and
mov
mov
sbb
lods
cmp
loopne
mov
fcomp
aad
adc
jmp
xor
xchg
sub
and
aas
(bad)
fucomip
test
jp
mov
and
icebp
test
push
fdivr
mov
cmp
bound
and
and
xor
(bad)
dec
jl
fisttp
int3
push
add
xchg
and
push
movs
sahf
out
push
fist
dec
push
pop
and
aam
or
dec
leave
jo
jmp
mov
mov
push
(bad)
mov
enter
loopne
leave
pop
mov
jmp
sbb
popf
out
add
cwde
dec
xor
inc
cmp
lahf
imul
pop
and
dec
pusha
add
mov
mov
or
push
sbb
sti
xor
push
add
fiadd
mov
test
cmc
rcr
lea
mov
cmc
(bad)
(bad)
enter
imul
jg
(bad)
jmp
sub
adc
xor
leave
les
or
fwait
and
push
outs
sub
mov
popa
call
xchg
arpl
mov
sub
pop
dec
retf
dec
iret
outs
rcr
dec
push
xor
sub
push
stos
jle
cmp
stos
pop
xchg
push
iret
lock
fxch
mov
(bad)
mov
std
xor
fist
out
bound
test
lahf
or
xchg
jg
arpl
mov
(bad)
mov
fsubr
pop
idiv
mov
adc
xchg
fsubp
mov
xor
dec
out
clc
icebp
adc
sar
palignr
mov
dec
pop
pusha
pop
inc
mov
or
rol
xor
sub
mov
in
pop
movs
xor
cwde
xor
dec
jnp
and
mov
enter
mov
leave
push
push
fisttp
xor
mov
outs
xor
push
xchg
push
mov
int3
loope
xchg
push
dec
pop
pop
ds
sub
dec
inc
in
mov
and
popa
cmp
cmp
(bad)
cmp
bound
or
add
(bad)
shl
inc
clc
ficomp
int
and
push
ds
jo
aas
mov
or
xchg
add
enter
mov
add
enter
ja
xor
lods
sub
ret
repz
xor
inc
fcomp
(bad)
out
jge
out
push
mov
jo
jns
(bad)
out
clc
repnz
add
push
test
je
xlat
or
aaa
adc
push
push
popf
test
mul
imul
and
xchg
rol
push
jo
dec
cli
sub
out
or
mov
pusha
aad
mov
clc
fcomi
inc
js
sub
and
inc
xchg
xor
jecxz
jb
stc
arpl
fs
mov
jno
mov
dec
pop
pusha
ret
and
dec
xchg
fnstsw
and
jae
(bad)
cli
jmp
push
add
cmp
jae
(bad)
call
out
adc
pop
iret
adc
ins
call
xor
or
push
sub
mov
mov
jbe
lds
adc
jno
cmps
imul
xor
jno
(bad)
inc
cmc
mov
cli
or
mov
adc
(bad)
(bad)
lahf
(bad)
sbb
add
shl
test
arpl
pushf
fisub
das
xchg
sar
fld
outs
test
mov
out
xchg
rcl
cmp
jecxz
dec
or
aaa
ror
(bad)
in
hlt
scas
or
xchg
ror
xlat
ror
js
or
aaa
pop
outs
cmc
inc
add
test
xchg
push
into
test
mov
mov
jecxz
in
cmp
inc
or
popf
or
pusha
into
fisub
test
xchg
or
aaa
adc
mov
mov
xchg
outs
imul
retf
sbb
push
ss
es
dec
(bad)
(bad)
int
mov
adc
in
dec
cwde
dec
test
clc
aam
sub
mov
jmp
sub
xor
mov
ins
sahf
push
mov
adc
or
xchg
std
or
and
cmp
mov
xor
neg
shr
adc
fild
jg
sbb
xlat
js
(bad)
(bad)
xor
adc
in
in
ror
gs
lds
retf
into
or
and
bound
pop
sub
mov
aas
cmp
rol
jl
cmc
(bad)
movs
mov
add
hlt
ins
push
test
enter
aad
mov
retf
lods
and
cmps
mov
xor
retf
mov
mov
ret
fs
sbb
pop
add
adc
hlt
rcl
mov
sub
movs
lods
cmc
inc
imul
mov
ret
imul
test
mov
mov
and
jo
lahf
cld
mov
loop
push
pop
movs
push
mov
jno
sub
inc
(bad)
cli
data16
sar
adc
sbb
pushf
icebp
sub
call
ins
sbb
out
sub
mov
adc
imul
mov
mov
test
stc
aad
loopne
stc
cmp
jbe
jg
cmc
or
push
xor
push
sahf
ret
sub
jmp
pop
in
nop
mov
div
pop
adc
rol
add
jnp
repnz
adc
sub
sub
dec
jbe
mov
fwait
pop
sub
scas
imul
retf
xor
mov
sti
jb
dec
jne
or
pop
fwait
lahf
add
clc
pop
das
xchg
jle
lea
jne
outs
data16
lods
pop
sub
cdq
lahf
js
inc
push
rol
cld
call
into
sbb
aaa
pushf
cmc
mov
pop
push
inc
mov
xchg
add
inc
lds
mov
jne
fs
std
push
sub
mov
sub
fdiv
int3
or
adc
xlat
mov
xor
std
gs
mov
hlt
mov
ds
repz
aad
mov
mov
std
jno
xchg
pop
or
or
sbb
fucomi
aas
push
inc
push
or
pop
xchg
push
repz
aaa
jmp
xor
sub
fisttp
repz
jb
pop
or
push
add
jne
ret
aad
and
mov
push
mov
mov
jbe
das
movs
mov
dec
shl
pop
popa
mov
call
cmp
mov
in
lods
sub
jo
jbe
mov
sub
pop
mov
imul
cmps
inc
ret
in
dec
sub
sahf
lods
sahf
mov
mov
bound
sub
push
outs
jmp
mov
dec
cmp
cmps
pop
jbe
jle
xchg
aad
mov
cmp
adc
pop
sub
mov
sbb
pusha
loope
add
push
sbb
dec
adc
rcr
and
and
mov
fwait
arpl
in
push
mov
mov
shl
pop
or
icebp
sub
cmp
dec
fsub
push
and
or
jbe
lock
mov
loop
dec
test
or
js
dec
pcmpeqb
dec
iret
call
mov
or
xor
xchg
pusha
(bad)
jge
mov
mov
bound
sbb
cld
or
outs
mov
inc
pushf
mov
outs
aaa
lea
jbe
out
fwait
retf
mov
fimul
sbb
retf
inc
test
xchg
nop
popf
ret
xor
js
test
not
cmp
fwait
xchg
nop
rcr
mov
test
xchg
int
jmp
mov
mov
int3
js
ret
ret
aam
mov
jecxz
pop
sbb
sbb
pop
mov
fwait
mov
sub
or
into
neg
and
sar
arpl
push
les
jne
xor
shr
pop
push
in
or
jb
jbe
mov
inc
and
adc
outs
scas
jmp
xor
push
shl
cmps
rcr
pop
mov
fcom
aaa
sub
loope
ins
xchg
jl
inc
call
push
loop
pop
add
adc
mov
dec
imul
mov
loop
dec
jmp
enter
ret
addr16
cwde
mov
fadd
xor
dec
shl
loopne
jecxz
mov
bound
mul
inc
outs
xchg
cmp
mov
xchg
jne
xor
add
cs
and
add
mov
mov
and
add
jno
and
xor
fmul
pop
cmp
imul
mov
imul
loopne
enter
arpl
push
add
stos
adc
xor
leave
int
mov
fst
mov
pop
mov
jmp
call
clc
pop
sub
imul
xchg
inc
dec
stc
and
loopne
push
mov
shl
and
push
dec
xor
sti
adc
pop
fwait
xchg
ret
loop
add
mov
cmp
mov
in
shl
dec
test
imul
or
js
dec
jns
adc
lods
dec
ret
cmp
adc
and
stos
inc
rcl
les
sbb
aad
mov
repz
(bad)
aad
outs
icebp
jmp
inc
xor
jge
out
movs
(bad)
jge
scas
popa
xor
jbe
ss
fldenv
das
lea
ret
xchg
rol
push
cs
(bad)
(bad)
call
add
xor
inc
aam
cdq
lds
jae
push
pop
pop
mov
out
jns
enter
mov
or
gs
ror
in
dec
and
pusha
pushf
jae
xor
fnstcw
push
inc
sbb
shl
nop
repz
mov
inc
sbb
adc
sbb
mov
(bad)
(bad)
jp
jb
sbb
fs
adc
jnp
push
sti
jmp
cmc
gs
mov
lea
jp
mov
clc
pop
cmps
into
fmul
cmp
mov
or
movs
push
cmc
fwait
push
icebp
scas
push
test
xor
or
cld
pop
popa
loop
sbb
in
inc
and
test
cmps
das
sahf
adc
cmc
mov
jmp
out
mov
mov
inc
ss
ss
cmps
push
rol
clc
fisttp
bound
inc
shl
pop
lods
popa
dec
xor
add
jp
nop
and
jp
shl
jns
icebp
ret
outs
stos
div
les
gs
into
scas
cmc
push
dec
(bad)
cli
or
out
retf
dec
dec
inc
idiv
sbb
inc
and
mov
mov
push
shl
ret
lea
and
and
pop
popf
movs
mov
adc
cmps
(bad)
jnp
(bad)
adc
sbb
inc
cmc
push
scas
push
adc
jmp
ret
mov
sub
push
test
lods
loope
mov
mov
sub
sar
sub
cmp
jns
and
pusha
xchg
push
aaa
cmp
int3
push
sbb
stc
jmp
mov
jbe
jae
or
mov
ds
into
fbld
mov
pop
lock
mov
in
shl
mov
sti
lahf
int
out
into
jecxz
mov
sub
mov
mov
add
ins
adc
imul
ror
pusha
ss
jb
push
add
mov
sbb
ffree
inc
push
and
fadd
xor
hlt
mov
xor
ja
or
fsub
mov
cmp
adc
in
movs
dec
inc
xchg
aad
das
pop
repnz
pushf
sbb
pop
add
in
push
mov
cmp
cdq
jl
pop
es
test
out
mov
rol
pop
xchg
xor
lock
mov
test
pop
sbb
lods
inc
lea
mov
jmp
and
int3
mov
mov
stos
sti
shr
push
outs
jnp
out
inc
ja
clc
call
dec
sbb
mov
pushf
inc
mov
cld
popa
push
cdq
into
test
aad
mov
test
xor
cmps
mov
add
pushf
out
sbb
dec
dec
loopne
outs
sbb
fs
fcom
xchg
add
cmp
(bad)
add
sbb
sti
cwde
out
dec
push
fmul
jmp
and
fidivr
(bad)
scas
and
cli
adc
pop
rol
push
scas
push
rol
sti
and
jns
fsub
inc
xchg
jnp
jo
mov
std
cmps
dec
dec
and
aad
xor
mov
mov
call
(bad)
jmp
mov
adc
sti
retf
sub
add
mul
lock
sub
or
nop
xchg
xchg
repnz
cmps
push
fwait
int
dec
pop
into
or
or
mov
xlat
cmp
or
push
cmp
ds
adc
mov
iret
retf
adc
loop
mov
mov
push
in
mov
jmp
jmp
fidiv
out
shr
sub
add
movs
pop
enter
mov
jmp
mov
inc
sub
enter
or
shr
cs
cdq
call
(bad)
or
or
ror
mov
xor
or
out
sub
fwait
push
xchg
push
inc
cld
mov
mov
cdq
or
xchg
cwde
add
push
pop
mov
rcr
addr16
int
movs
jne
sbb
push
stos
mov
retf
xchg
rcl
cmp
and
dec
and
lods
out
xchg
push
jnp
push
or
mov
push
jbe
mov
jl
dec
mov
push
mov
loop
mov
cdq
cmps
inc
mov
mov
and
mov
out
dec
cmps
fistp
daa
ret
dec
(bad)
sbb
aad
retf
pop
aad
mov
jb
arpl
jo
sub
mov
cwde
xchg
xchg
inc
in
aaa
cmp
enter
jmp
add
sub
test
adc
pop
out
jo
sbb
push
mov
cli
sub
in
outs
xchg
lds
repz
shl
sub
sahf
ins
lods
mov
push
push
dec
pusha
or
jge
cld
rol
int
repz
cmp
add
adc
sbb
hlt
clc
and
push
push
pop
pushf
jge
pop
(bad)
jmp
and
jmp
push
mov
or
cld
inc
retf
scas
jo
sub
add
test
fwait
je
jmp
lea
frstor
inc
lahf
test
imul
xor
(bad)
enter
into
mov
sub
or
imul
scas
repnz
nop
add
gs
fdivr
jno
je
sbb
into
xor
cmps
mov
sbb
icebp
sti
or
mov
add
push
jp
cmp
je
rcr
in
and
scas
jecxz
xchg
addr16
lods
mov
mov
push
mov
mov
xor
test
and
inc
aad
mov
popf
sub
and
daa
aad
popa
mov
mov
mov
popa
add
push
pusha
jo
cld
cmp
popa
inc
and
or
lds
push
popf
or
loope
push
cs
sahf
push
popf
add
imul
cmc
sbb
retf
mov
mov
cmp
push
ror
mov
test
sub
pop
add
and
ds
cdq
(bad)
mov
sbb
sbb
jbe
jmp
push
icebp
mov
xor
push
xor
test
xchg
lds
mov
call
xchg
xchg
fwait
outs
push
sub
iret
js
xchg
fld
fld
cmp
pop
ins
popa
jns
std
leave
inc
dec
sbb
(bad)
mov
adc
ret
xchg
ret
xchg
mov
dec
(bad)
and
mov
add
pop
push
xor
and
push
push
and
dec
push
std
in
mov
aad
jecxz
call
rcr
out
retf
bound
xor
mov
dec
clc
mov
add
lods
and
mov
(bad)
xchg
mov
xor
mov
repnz
mov
jno
repz
cld
mov
movs
call
push
xchg
mov
and
xchg
push
(bad)
aas
jl
js
les
add
cmps
cmp
loope
sti
jmp
dec
pop
pop
iret
into
pop
lods
and
or
loope
jno
inc
cmp
lock
popa
mov
loop
jns
add
fsubr
es
fmul
test
cmp
mov
(bad)
jns
xchg
xor
dec
iret
adc
lock
add
int
in
mov
cmp
lahf
xchg
dec
hlt
push
mov
pop
movs
call
or
int
imul
imul
push
or
pop
stos
int
mov
xchg
pop
into
fwait
test
ins
and
fisubr
pusha
in
cmp
xchg
rcl
std
adc
stc
add
call
and
aad
test
fild
js
jle
jmp
cmp
js
fbld
pop
and
dec
in
fst
movs
daa
(bad)
sar
jge
inc
add
mov
cld
push
ins
lock
xor
icebp
enter
mov
in
add
mov
cmp
sub
or
jle
popa
std
movs
lods
and
pop
(bad)
xchg
mov
push
out
in
push
push
cld
or
mov
mov
pop
push
mov
sub
jle
js
lods
sahf
shr
push
push
mov
adc
cld
add
mov
xchg
les
sahf
(bad)
sbb
push
adc
popa
mov
add
aam
pop
sbb
or
mov
scas
lahf
inc
repnz
jns
push
arpl
scas
sbb
jl
mov
clc
xchg
aas
pop
fadd
and
inc
mov
mov
es
jns
sti
leave
pushf
xor
scas
jmp
dec
sbb
mov
popa
les
jb
jmp
out
add
push
test
imul
sahf
lods
cmp
nop
push
or
mov
add
push
sbb
pop
ins
cli
mov
jecxz
jns
ins
mov
push
xchg
push
dec
(bad)
cmp
clc
movs
dec
icebp
in
frstor
pop
add
ret
jg
mov
scas
out
test
push
les
test
jmp
or
aas
scas
push
xlat
sbb
(bad)
daa
(bad)
jmp
icebp
mov
add
ror
push
add
add
movs
cmp
retf
sahf
inc
imul
out
sub
shl
push
cmp
enter
lahf
xor
mov
mov
xchg
pop
mov
bnd
add
cmc
aad
jne
add
xchg
cli
lock
sub
int3
shl
sub
mov
fiadd
mov
pop
aaa
push
xchg
jbe
lea
jb
adc
add
and
hlt
icebp
stos
ss
movs
inc
idiv
out
lock
scas
aas
not
ins
dec
int
adc
mov
add
(bad)
adc
jle
sub
stos
inc
mov
mov
ja
js
in
stos
inc
mov
popa
mov
(bad)
aaa
icebp
lea
pop
and
xchg
ret
cmps
js
dec
push
gs
mov
inc
mov
fwait
mov
add
mov
adc
pop
ret
or
stos
adc
add
rcl
mov
cmp
mov
add
push
push
rcl
rcl
inc
out
push
fs
jl
call
mov
sbb
mov
fisttp
mov
retf
push
xlat
dec
ds
js
in
aad
sti
(bad)
mov
add
sbb
dec
inc
and
or
xchg
xor
and
push
stos
aad
clc
or
mov
xchg
add
rcr
cmps
int
mov
dec
in
leave
xchg
add
movs
dec
(bad)
lahf
add
(bad)
fucom
add
test
ds
push
sbb
enter
(bad)
fadd
mov
jnp
pop
mov
fidiv
loopne
shl
mov
loop
loop
or
xor
sbb
in
test
pop
mov
dec
(bad)
je
fwait
mov
fdivr
cmp
inc
out
lods
inc
sub
leave
dec
or
xor
ror
leave
loop
mov
lods
hlt
and
add
or
in
lds
mov
mov
stos
xlat
mov
mov
enter
cmps
sbb
out
jno
mov
retf
mov
pushaw
rcr
nop
cli
push
(bad)
cld
(bad)
adc
push
xchg
repnz
cwde
aas
inc
arpl
lods
mov
ss
mov
mov
aas
add
rol
retf
sbb
push
jecxz
jns
das
and
lods
inc
jecxz
adc
mov
pop
in
adc
aad
sar
and
adc
adc
mov
nop
mov
(bad)
das
or
dec
jp
test
lods
movs
aam
imul
stos
imul
repz
mov
test
add
mov
push
test
test
add
sahf
rcl
jns
push
mov
fdiv
outs
scas
test
xchg
ins
in
jae
dec
mov
push
push
test
adc
pop
ret
jmp
xchg
out
retf
ins
sbb
push
out
push
cwde
rcr
movs
add
push
mov
sbb
ret
shl
call
jb
dec
jb
mov
repz
push
in
jle
mov
push
adc
pop
loopne
dec
xor
repnz
push
xor
and
dec
icebp
lock
pop
bound
lea
xchg
cmp
ret
and
(bad)
into
push
jno
fidiv
(bad)
push
xchg
ret
xchg
push
pop
imul
pop
xchg
mov
mov
pop
dec
addr16
pushf
neg
and
jmp
fild
adc
int
inc
push
outs
dec
bnd
int3
nop
and
jae
sar
and
xchg
add
adc
xchg
pop
mov
xchg
sti
mov
jae
or
pop
cmps
test
jmp
hlt
movs
loope
(bad)
aas
push
inc
ret
repz
cs
aaa
adc
dec
sti
cmp
mov
lahf
aas
mov
cmp
xchg
cmpxchg
or
aam
mov
jmp
imul
push
push
imul
and
pop
ins
in
imul
stc
dec
sub
fs
imul
retf
jg
and
fdiv
push
add
sar
sub
call
pop
inc
pushf
inc
es
fdivr
fwait
jnp
xchg
pop
das
iret
retf
xor
popa
push
xor
inc
out
dec
cmc
imul
dec
and
out
cs
fsub
mov
xor
cmp
push
retf
(bad)
neg
sar
jne
adc
dec
shr
xor
sub
xor
push
xchg
repz
ret
ret
mov
jl
sbb
stc
and
fcomp
jno
pop
xchg
nop
test
jecxz
xchg
add
pop
(bad)
test
inc
nop
inc
mov
pop
inc
outs
jl
push
adc
test
mov
xor
fldl2e
test
stos
pop
pusha
lea
mov
and
cmp
pop
movs
addr16
mov
mov
or
test
(bad)
jmp
sar
pop
outs
push
fwait
(bad)
pushf
mov
fist
adc
adc
test
shl
or
xchg
and
nop
and
test
cmp
movs
sub
xor
cdq
or
mov
inc
dec
enter
push
dec
adc
stos
xchg
rcl
aad
mov
push
xor
sub
and
mov
sti
imul
mov
fs
adc
in
mov
dec
sub
adc
fprem1
mov
scas
mov
ins
cmps
imul
arpl
icebp
cwde
jmp
cdq
cmc
into
push
push
test
mov
dec
in
pusha
fwait
adc
push
sub
call
test
lea
jo
stc
jecxz
stos
push
bndstx
sbb
loop
sbb
inc
movs
push
data16
lea
jns
inc
(bad)
retf
cwde
mov
xchg
jmp
shr
ds
mov
popa
push
aas
xchg
pusha
out
xchg
aas
gs
test
dec
jmp
leave
mov
pop
xor
xchg
lods
ss
and
dec
add
push
iret
pop
mov
adc
jno
push
mov
cmc
and
or
(bad)
jo
adc
in
sub
xchg
inc
jne
mov
add
mov
test
les
or
aas
cwde
mov
call
xlat
imul
mov
xor
fs
pop
outs
arpl
mov
daa
repz
jns
adc
sub
imul
fwait
out
test
repnz
add
and
mov
out
push
inc
ja
test
mov
fwait
cmp
mov
clc
pop
mov
repz
fisttp
xor
xlat
stos
adc
(bad)
push
sub
mov
add
in
lods
fnstenv
sub
js
data16
cs
and
(bad)
out
outs
imul
cs
jno
cmps
clc
rcl
inc
bound
xchg
sub
fidiv
sub
outs
fs
shl
in
push
jne
pop
lea
jmp
scas
cmp
rcr
in
sbb
cmp
xor
jp
in
fs
cmp
mov
(bad)
sar
das
into
pop
sar
cmp
mov
adc
mov
pop
sbb
out
aad
gs
cwde
push
pop
dec
cwde
dec
jmp
jl
rol
xlat
loop
popa
imul
jg
lds
neg
imul
(bad)
jge
iret
pop
cmp
xchg
fimul
push
int3
movs
xchg
bound
hlt
jmp
or
jmp
sub
aaa
xchg
push
cmp
scas
aad
fcomp
psubd
mov
rcr
(bad)
pop
xchg
retf
daa
cmps
cmp
xchg
add
mov
inc
lock
int3
ret
jne
fmul
adc
in
xchg
sti
mov
stos
sbb
cli
adc
pop
jg
inc
jmp
scas
pop
into
jg
rol
inc
jge
bound
cmp
cwde
xor
xchg
jmp
pop
clc
js
je
fadd
dec
and
jo
mov
fstp
pop
sbb
xchg
(bad)
fucomp
mov
mov
movhlps
arpl
mov
push
mul
ins
or
popa
call
cmp
repz
dec
jg
icebp
inc
lods
cmp
cmp
mov
xchg
and
dec
jae
add
sub
cmp
dec
js
(bad)
sub
int3
sbb
inc
xchg
pop
aas
inc
jmp
and
pop
neg
or
mov
xchg
cmps
iret
sahf
(bad)
je
gs
scas
pop
in
aas
jno
or
xor
in
mov
out
loop
sahf
inc
inc
inc
ins
stos
hlt
add
in
xor
es
dec
cli
dec
mov
out
xchg
push
shl
sbb
or
fnstsw
xor
adc
mov
sbb
hlt
jns
inc
jle
cmp
cmc
xlat
(bad)
xor
inc
sti
aas
imul
shr
ins
dec
mov
pop
fisttp
mov
cmp
inc
nop
retf
out
imul
clc
mov
out
add
lock
mov
xor
jo
adc
xchg
dec
call
in
les
dec
movs
ror
push
inc
sub
xor
pop
adc
xchg
repnz
ret
fld
dec
cmp
loope
cmc
mov
adc
in
pop
jb
mov
pop
in
xchg
test
or
push
cdq
pop
jg
cmp
xlat
mov
xor
pop
and
int3
jne
mov
xor
add
push
ret
ja
scas
stos
mov
jecxz
dec
es
push
cmps
inc
loope
add
mov
push
push
lea
sbb
frstor
pop
mov
sub
mov
adc
fsub
call
or
std
cmps
push
shl
and
int
jl
push
hlt
or
arpl
popa
push
les
sbb
rol
jp
add
pop
cmp
pop
fisubr
adc
arpl
fwait
mov
imul
cmc
imul
push
lock
jae
sbb
push
shl
jo
jmp
inc
jns
rol
mov
sub
in
in
test
repz
xor
(bad)
fcomi
dec
and
push
push
cmp
sub
fsubr
add
lock
xor
inc
dec
loop
push
mov
les
or
cmp
jne
out
adc
xchg
xchg
fstp
push
jp
dec
leave
mov
js
sub
ins
test
repz
fld
push
adc
enter
scas
mov
loop
mov
fild
mov
popf
cli
cmp
(bad)
(bad)
pop
aas
into
push
cmp
cmp
mov
fdivr
mov
stos
or
jb
pop
add
mov
mov
push
push
icebp
imul
or
cdq
or
inc
gs
stc
xchg
pop
std
cmps
inc
pop
dec
call
(bad)
test
sub
pusha
iret
sbb
call
sar
cmp
retf
lahf
ret
dec
mov
push
push
dec
pop
aam
jecxz
jne
sti
mov
add
and
ficom
ret
out
aad
sbb
dec
xchg
enter
pop
call
ret
pop
push
pop
test
(bad)
out
les
adc
adc
mov
ds
movs
movs
inc
in
adc
mov
movs
ss
js
or
push
xchg
(bad)
pop
aad
dec
jno
scas
inc
ss
popa
out
and
inc
cmc
mov
cmps
add
xchg
arpl
ror
fcom
add
or
(bad)
and
add
xor
xchg
cmp
out
out
fist
loop
xchg
sbb
push
sub
xchg
lock
mov
fistp
fucomi
push
outs
mov
sub
fwait
jo
dec
push
lock
fsubr
jmp
mov
outs
and
pop
arpl
nop
retf
dec
fcmovu
xchg
bound
(bad)
sub
xchg
(bad)
jno
jmp
out
adc
push
cmp
mov
cld
adc
pop
ret
movs
xor
fmul
xchg
mov
jmp
cmps
out
add
jge
jp
loope
and
arpl
loop
adc
fisttp
and
mov
xchg
push
adc
ret
mov
cwde
mov
sub
sub
jne
dec
jns
movs
mov
rcl
fsub
in
dec
cli
jle
cmp
shl
xchg
scas
push
int
jb
mov
loop
adc
ret
(bad)
xchg
jg
aaa
mov
fisubr
fldenv
adc
mov
lock
inc
jecxz
cmp
jmp
sbb
push
scas
shl
pop
or
retf
or
enter
pop
movs
(bad)
xlat
cwde
cmp
test
mov
cmp
dec
sub
or
jmp
mov
xchg
mov
iret
dec
out
movs
or
or
outs
mov
jecxz
repnz
jb
sub
xlat
cmps
popf
aam
inc
fiadd
dec
add
stos
push
xchg
mov
push
out
and
dec
(bad)
push
ja
ror
push
jb
mov
repz
mov
push
pushf
fsubp
sub
cwde
cmp
xor
push
push
ja
xchg
outs
inc
jmp
cld
pop
mov
bound
mov
out
dec
in
add
mov
das
jmp
jl
sub
dec
add
cmp
clc
aas
cld
in
cmp
pop
jle
jne
ror
outs
out
push
xor
or
nop
ret
rol
mov
aad
xor
ins
push
pcmpgtd
dec
ror
push
cmovg
shl
lea
sub
jns
jbe
arpl
sbb
push
dec
mov
jle
inc
cmps
out
mov
pushf
mov
dec
ins
jnp
mov
sub
lds
js
cdq
add
push
daa
mov
mov
mov
call
leave
outs
imul
dec
stos
cmp
hlt
in
sub
jp
mov
mov
xor
or
push
sbb
jno
mov
add
stc
aas
rcr
mov
push
xor
rcr
pop
jl
dec
pop
push
lods
sub
inc
mov
mov
(bad)
add
lock
add
fist
or
jmp
inc
push
(bad)
(bad)
and
pop
shl
loop
push
xor
stc
int3
xchg
stos
bound
mov
cdq
mov
xor
loopne
mov
les
test
shr
xor
jne
stos
(bad)
push
retf
dec
jno
(bad)
call
cmp
gs
mov
cmp
(bad)
cmp
cmp
inc
cmps
mov
ror
fucomp
xchg
push
inc
adc
cmp
sbb
ds
dec
es
cmp
and
test
stos
add
or
ins
xchg
fist
inc
das
outs
rol
xor
outs
add
or
push
adc
sbb
test
stc
das
es
add
ficomp
push
jnp
fidiv
scas
and
addr16
sub
outs
mov
psubq
sub
dec
hlt
test
inc
jo
call
inc
sub
mov
jmp
int3
(bad)
pop
mov
jmp
lods
int3
inc
push
out
pop
(bad)
jne
repz
loopne
(bad)
sbb
add
jnp
(bad)
ja
aaa
ret
fs
sub
and
sub
pop
fisttp
dec
pop
outs
mov
inc
in
int
push
jne
mov
inc
xchg
sub
bnd
loope
ret
jl
xlat
inc
sub
cmp
or
mov
inc
imul
test
aam
call
pop
mov
ret
xor
mov
lods
movs
cmps
(bad)
jge
sbb
sbb
shl
popa
aad
xchg
mov
or
jno
leave
inc
inc
imul
add
fdiv
rol
mov
cmp
into
sbb
rcl
and
dec
mov
lds
sbb
test
sbb
push
xor
add
dec
lock
(bad)
leave
cmps
cmp
fsubr
xchg
ret
sub
adc
xchg
in
add
mov
movs
clc
and
xchg
xchg
cmp
and
int
adc
or
sbb
xor
mov
or
test
popa
push
fcomi
mov
mov
data16
pop
ins
and
dec
inc
push
jns
jns
xor
sub
cld
dec
fcomip
push
je
or
fbld
sbb
les
pushf
jmp
or
hlt
mov
nop
int
addr16
sbb
pop
jne
test
mov
sbb
ss
and
movs
add
aad
pushf
push
shl
cdq
xchg
pushf
xor
or
stos
adc
jg
jbe
jmp
add
mov
pop
adc
push
pop
jge
xor
arpl
and
lds
fucomip
(bad)
arpl
repz
in
les
or
add
push
into
into
mov
or
mov
cmps
pop
xor
lods
fdivr
xchg
lods
stos
jg
imul
mov
test
xchg
daa
out
icebp
push
retf
pop
aad
adc
cdq
cmp
xlat
sahf
xchg
mov
pop
stos
push
dec
cmp
leave
mov
or
cwde
cmp
dec
fisttp
fdivrp
jp
pop
jne
pushf
clc
and
jge
hlt
sub
fst
pop
sbb
sub
mov
mov
push
or
mov
push
cmp
mov
hlt
iret
loop
jnp
xchg
add
pop
add
fdivp
test
jecxz
jbe
arpl
ficom
stos
test
shr
push
call
jp
fsubr
cmc
aaa
js
je
ja
jl
mov
fucomi
inc
mov
idiv
(bad)
in
std
jg
scas
pop
or
fwait
adc
or
in
ins
cmp
retf
inc
dec
adc
pop
inc
or
pop
scas
les
cli
jnp
in
mov
sub
cmc
adc
mov
fs
stc
add
fisub
pushf
loope
jecxz
sbb
mov
mov
xchg
lock
mov
retf
lds
xor
nop
pop
adc
push
and
jno
fldcw
push
movs
inc
pop
mov
push
jmp
add
das
stc
ror
cwde
mov
ds
add
repnz
add
xchg
les
popa
imul
push
add
mov
and
into
xchg
fidivr
xchg
imul
ror
pop
nop
mov
mov
push
cmp
dec
fdiv
pop
ss
stc
leave
mov
jne
les
popa
cmc
addr16
ss
mov
dec
dec
jecxz
mov
movs
jmp
push
jb
sbb
loopne
fcmovb
jmp
(bad)
frstpm(287
add
outs
jo
ret
mov
cs
lds
inc
lock
jmp
test
test
dec
lahf
or
fild
sahf
adc
push
push
inc
mov
inc
push
mov
dec
into
sbb
mov
shl
mov
dec
dec
stos
addr16
fisubr
add
jl
jmp
mov
pop
jno
inc
ja
cld
mov
mov
rcr
icebp
mov
je
push
ins
jmp
outs
retf
jmp
sbb
lods
and
xchg
or
push
xor
stc
inc
cmps
sbb
dec
jne
xlat
retf
and
rcl
xchg
(bad)
out
pushf
sbb
sbb
jmp
mov
push
xor
mov
pop
pusha
sbb
or
ret
push
sub
int
inc
ds
in
sbb
pop
mov
je
fsub
push
jae
push
jmp
inc
arpl
daa
xchg
das
fs
les
scas
push
sub
or
clc
mov
sub
jbe
cmp
aas
mov
or
and
cwde
ds
and
fild
int
mov
dec
mov
psrad
int3
mov
aas
xchg
call
js
repz
movs
cld
ds
jl
jp
outs
xor
mov
jnp
daa
push
(bad)
sar
cmps
xchg
call
jmp
dec
(bad)
cmp
mov
jecxz
push
mov
call
xchg
cmps
xchg
add
mov
dec
pop
enter
mov
mov
ret
dec
clc
mov
hlt
test
addr16
test
jo
ins
dec
jge
inc
test
cmp
pop
jecxz
dec
xchg
dec
(bad)
sbb
cmp
mov
dec
push
popa
repz
ja
pop
push
pop
arpl
dec
sar
xchg
cmp
scas
js
xor
mov
fsub
stc
shr
pop
dec
js
outs
repnz
fcomp
xchg
dec
mov
pop
mov
repnz
shr
ror
cmc
sbb
sahf
xor
fld
movs
inc
dec
dec
mov
ja
cmc
call
and
and
inc
repnz
mov
es
dec
jle
pop
test
shr
stos
and
ret
xchg
loop
dec
movs
int
jne
mov
inc
das
shl
xchg
xchg
add
xor
sub
enter
(bad)
jge
cmp
sbb
cmp
adc
(bad)
cmps
(bad)
clc
adc
std
test
out
xchg
shr
cli
mov
xchg
adc
ret
test
ins
adc
mov
in
fidiv
or
inc
xchg
lahf
(bad)
xchg
mov
push
and
das
jmp
mov
pop
cmp
(bad)
xchg
outs
dec
std
rcr
mov
aaa
cmp
cmps
into
les
sahf
jle
jle
push
push
test
adc
push
dec
xchg
(bad)
pop
sbb
loope
adc
dec
ins
std
lea
mov
bound
jge
push
popa
inc
movs
(bad)
hlt
xchg
jge
sbb
fmulp
outs
inc
shr
icebp
outs
or
jmp
mov
push
dec
push
add
es
xchg
ret
pop
dec
int3
or
add
lods
xchg
es
and
jl
xor
fadd
mov
push
sub
sahf
mov
pop
sub
outs
cli
jg
xor
and
dec
cmps
push
pop
pop
cdq
sbb
shr
rcl
adc
out
xlat
mov
(bad)
cwde
add
lods
fdivr
xchg
xlat
ret
jmp
cmp
std
mov
jb
add
adc
stos
hlt
bound
xor
loope
or
push
retf
cdq
mov
sar
push
ficom
xor
sbb
push
jmp
jl
(bad)
(bad)
loopne
ret
sub
mov
adc
adc
and
mov
out
and
lock
sahf
push
cwde
pop
rcl
pop
mov
(bad)
fcmovnu
xor
jecxz
sub
mov
lods
push
push
lahf
push
xchg
sahf
pop
call
int3
sub
out
das
dec
dec
repnz
push
mov
inc
xchg
mov
xchg
pop
mov
mov
in
outs
or
push
jno
leave
cs
repnz
shl
pop
imul
push
jb
mov
adc
iret
or
sbb
es
mov
dec
cdq
inc
or
cmc
ret
hlt
enter
inc
cdq
call
xchg
ret
into
xchg
outs
scas
repnz
fisttp
mov
pop
icebp
pop
cmp
cli
pcmpgtw
pop
fisttp
cmovae
aaa
fadd
test
inc
aaa
mov
xchg
or
out
rol
jecxz
imul
inc
test
jo
and
(bad)
ficomp
neg
in
pop
push
mov
jmp
pop
repz
inc
push
pop
loope
jl
retf
xchg
cmp
mov
ja
cmp
in
xor
mov
stos
stos
aam
aad
test
std
or
or
mov
inc
out
xchg
mov
jle
stos
cmps
les
test
leave
pop
fisttp
cdq
lods
sbb
vhsubpd
and
mov
adc
imul
pop
mov
loopne
lock
leave
(bad)
por
pop
push
lahf
ja
imul
cli
adc
and
cmp
xchg
rol
mov
in
mov
push
fsub
sub
cmp
xchg
xor
adc
push
aas
push
retf
test
data16
xor
dec
cld
lea
pop
or
sub
hlt
push
ficom
stos
retf
je
stc
add
stos
adc
push
jle
popa
imul
push
imul
cwde
jb
and
cmc
cld
out
bound
mov
sub
mov
mov
mov
sub
stos
add
dec
push
test
adc
mov
mov
call
cwde
sbb
aam
cmp
pop
mov
dec
fldenv
add
into
sbb
jge
mov
out
jge
xlat
inc
pop
push
neg
mov
xchg
mov
cmp
outs
dec
std
mov
xor
sahf
jmp
pop
jmp
dec
inc
add
movs
mov
aas
jl
ret
fbld
xlat
enter
xchg
scas
xor
pop
(bad)
mov
and
jae
nop
out
nop
and
push
fdivr
mov
(bad)
sahf
mov
pop
mov
je
in
jl
das
lea
inc
daa
xacquire
(bad)
xchg
les
and
cmp
inc
inc
xor
out
xlat
and
jmp
pop
mov
xor
pop
cwde
xchg
sbb
imul
jne
add
stos
icebp
sub
into
jae
ret
xchg
enter
pusha
dec
cld
push
sbb
cld
ds
inc
mov
mov
pop
jnp
outs
xor
push
inc
sbb
cmp
outs
mov
pop
and
loopne
mov
icebp
sahf
dec
loope
and
push
cmovns
xchg
push
mov
jns
dec
adc
jmp
jns
pop
mov
pop
sub
bound
jecxz
mov
and
lock
push
arpl
xchg
loop
dec
mov
jge
mov
inc
adc
add
add
mov
inc
out
xor
out
lock
push
fst
repnz
sti
sbb
sbb
sub
xor
adc
xchg
pop
inc
pop
sar
fstp
inc
cmp
int
enter
jno
int
cmp
cmps
pushf
loopne
rcl
inc
movs
sahf
in
pop
int
imul
aad
sahf
sub
lods
les
jle
aad
aaa
push
test
(bad)
out
xor
or
aad
adc
push
pop
test
sahf
(bad)
pop
xchg
adc
jne
push
in
dec
inc
not
inc
leave
inc
inc
es
out
fxch
mov
xlat
in
push
out
pop
sub
stc
outs
std
jbe
scas
pop
jmp
fcmovu
test
clc
lods
mov
push
fcmovb
popa
cmp
jb
xor
addr16
xor
inc
sub
repnz
add
popf
xchg
jnp
je
jno
mov
jno
mov
push
cmc
dec
sbb
sbb
and
pusha
jne
das
data16
xor
xor
(bad)
cwde
xchg
sbb
pop
and
ror
cmps
jbe
(bad)
adc
mov
add
jg
aam
adc
adc
ja
xchg
sbb
in
cwde
xchg
or
add
adc
outs
cdq
lods
into
retf
(bad)
jne
lea
sub
sub
retf
fwait
add
cmp
sub
add
stos
cmp
mov
(bad)
cmc
xor
add
out
pop
mov
xor
push
and
ja
faddp
jge
sbb
mov
mov
cwde
or
test
and
(bad)
pop
pop
and
ror
sbb
fsubr
mov
out
addr16
in
pop
dec
push
lock
and
in
mov
movs
sti
and
fnsave
pop
imul
hlt
inc
inc
retf
and
rcr
mov
pushf
aad
mov
lahf
cmp
jmp
rol
fcomp
je
aad
ror
fs
dec
cmps
pop
ja
xchg
ror
mov
icebp
daa
push
retf
jo
mov
pop
dec
jbe
add
or
popf
imul
popa
std
ja
xchg
inc
mov
mov
scas
out
lds
mov
nop
jo
outs
ins
cmp
repz
popf
jge
es
pop
enter
fs
cmp
mov
(bad)
mov
mov
js
popf
sub
mov
cmp
push
jbe
mov
mov
push
pop
mov
dec
dec
in
pop
(bad)
inc
out
scas
into
mov
(bad)
dec
mov
out
or
pushf
jns
jne
push
div
mov
dec
js
(bad)
push
jns
mov
daa
mov
sbb
cmp
shr
xchg
movs
and
pop
push
test
fsub
cmp
movs
xchg
xor
es
xchg
call
les
loop
ds
ja
xor
pop
xor
cs
jmp
pop
add
inc
shl
movs
stos
sub
fild
rcl
loopne
adc
ds
aad
pop
(bad)
pop
bound
jl
mov
adc
test
fwait
je
rol
cmp
pop
pop
jecxz
sbb
adc
jmp
(bad)
icebp
es
sbb
ins
push
mov
xchg
pop
aam
xchg
dec
jns
lds
push
mov
pop
xor
and
jl
lods
addr16
jp
div
fcom
js
xlat
adc
(bad)
cmp
or
pop
scas
sbb
pop
adc
push
outs
lock
adc
xor
shr
int
mov
mov
mov
movs
repz
call
pop
cmp
inc
push
fbstp
lds
into
fadd
aaa
mov
cmp
add
inc
mov
daa
lods
pop
mov
rcr
lods
stos
sub
cmp
dec
mov
sbb
pop
aad
test
cmps
(bad)
in
cmps
xchg
imul
cmp
pop
mul
dec
mov
mov
out
out
(bad)
nop
xor
stos
dec
sti
mov
in
push
lea
cmp
pusha
add
xchg
cwde
ror
movs
js
aas
outs
cdq
pop
dec
test
xchg
xlat
adc
ret
fiadd
lahf
mov
adc
xor
test
(bad)
jne
aad
pandn
shl
popa
lods
cwde
and
mov
cmps
rcr
xchg
jle
pop
mov
jp
scas
add
std
xlat
stc
aam
outs
mov
mov
sbb
dec
imul
mov
push
mov
mov
(bad)
hlt
shl
mov
inc
inc
loopne
mov
(bad)
rcl
icebp
imul
mov
(bad)
jge
sub
pushf
sbb
or
pushf
fstp
lods
add
stos
mov
add
jge
addr16
or
int
call
sub
aam
sahf
xchg
cdq
dec
xlat
pop
cdq
mov
pop
jmp
outs
sahf
jnp
aad
mov
mov
push
sub
mov
in
in
stc
or
cwde
jmp
jmp
add
(bad)
repz
ds
mov
and
sbb
and
stos
cmp
push
mov
in
sub
xchg
push
sub
ins
push
fsubr
outs
add
inc
cmc
push
sar
fnstenv
arpl
jmp
int
push
std
aam
mov
push
scas
fs
bnd
or
pop
fstp
movs
xor
into
(bad)
in
aam
fidivr
xor
das
pop
inc
out
cdq
ficomp
test
or
enter
pop
aad
and
and
out
stos
mov
or
shl
cwde
and
mov
(bad)
(bad)
neg
aas
clc
out
and
lods
xchg
pushf
sahf
ret
and
rol
mov
sub
in
neg
xchg
gs
adc
cmp
mov
dec
pop
repz
addr16
(bad)
ficomp
jo
ja
cli
push
pushf
dec
or
inc
pop
jg
push
loop
sub
adc
aaa
or
fisub
xchg
sbb
inc
or
push
cld
mov
lock
ins
cmp
std
jecxz
sbb
cmp
jmp
icebp
dec
cdq
out
dec
xchg
lods
test
add
stos
xchg
or
xlat
stos
gs
sti
adc
scas
push
ficom
inc
mov
mov
sbb
jl
pop
xor
xchg
int
pop
icebp
push
pop
or
nop
cmp
push
jbe
movs
adc
ss
imul
cli
xchg
inc
inc
and
test
xchg
js
jmp
fs
jnp
or
in
mov
adc
sub
(bad)
sbb
(bad)
mov
shr
(bad)
fisub
sbb
repz
jmp
dec
push
xchg
add
lock
cmp
push
inc
inc
shl
sbb
daa
mov
(bad)
fidiv
and
jge
call
add
ret
fs
shl
mov
popa
ss
ss
cmps
sahf
xchg
retf
jl
or
ds
xor
stos
sub
push
fild
push
enter
retf
jmp
or
adc
scas
inc
lods
mov
aaa
xor
add
enter
call
push
gs
xchg
jg
inc
enter
out
add
js
clc
aad
mov
movhlps
inc
lods
push
xor
pop
xchg
movs
add
push
aaa
pop
jmp
add
and
cs
stos
in
cwde
add
sbb
sbb
inc
mov
or
pop
xor
out
adc
mov
pop
outs
adc
push
sbb
push
fwait
dec
(bad)
push
add
jns
sbb
int
push
gs
popa
das
pop
mov
inc
mov
enter
iret
cmp
adc
push
pop
or
dec
cmp
mov
arpl
lods
push
sub
push
pop
lea
(bad)
addr16
or
movs
mov
mov
sbb
mov
shr
(bad)
mov
dec
push
mov
sahf
shr
out
test
dec
(bad)
pop
call
das
sbb
mov
sub
outs
inc
dec
add
push
mov
or
aad
test
test
div
popf
lds
add
icebp
or
retf
push
add
inc
cmp
test
stc
fdivr
stos
pop
jb
xor
ds
shr
sbb
cdq
push
lods
mov
ucomiss
add
fcom
inc
loopne
sub
pop
mov
dec
adc
nop
imul
add
and
mov
out
aad
loope
inc
inc
in
sbb
pushaw
mov
(bad)
pushf
sbb
loopne
xor
mov
or
int3
pop
pop
sub
inc
xor
in
je
shl
call
test
push
mov
call
ja
sbb
test
pop
js
mov
(bad)
arpl
loop
adc
addr16
shr
lods
icebp
movq
mov
dec
lods
cli
sub
xchg
jp
dec
push
sti
scas
(bad)
in
enter
bound
(bad)
sbb
jge
add
out
cmp
bound
inc
adc
ja
icebp
ss
and
sahf
or
cmp
xchg
nop
clc
ins
sbb
jne
aas
loope
jo
push
cwde
sar
cmp
mov
mov
ins
adc
inc
popa
add
gs
and
pop
clc
mov
out
fstp
xchg
sbb
mov
pop
mov
lods
jae
sar
retf
je
repnz
mov
(bad)
sbb
fimul
loope
jle
stc
sub
and
sbb
mov
sti
pop
sub
ret
mov
mov
fprem1
cmc
pop
pop
adc
or
xlat
dec
ins
mov
jge
stos
movs
mov
inc
add
cli
stos
jge
mov
jecxz
mov
pop
aas
adc
sub
mov
cmp
sbb
ret
out
adc
fwait
sbb
dec
adc
fiadd
inc
stos
int
xor
int
mov
pop
jecxz
mov
lods
or
lods
outs
lahf
sub
rol
lahf
jo
mov
cmp
sbb
inc
and
mov
ja
mov
nop
inc
loopne
inc
dec
sbb
jecxz
js
adc
jg
aam
sbb
sub
xor
sar
sti
fsubr
mov
fisubr
sub
fcmovb
xchg
cld
test
cmp
and
loope
push
aaa
push
sahf
sbb
mov
pop
pop
xchg
loop
adc
cs
mov
es
cmovnp
(bad)
fsubr
(bad)
and
pusha
clc
jno
test
sar
sahf
jbe
push
adc
fiadd
pop
add
ds
ja
icebp
mov
adc
jae
lods
adc
pushf
jne
rcl
out
push
ror
stos
or
inc
into
mov
retf
mov
shr
cli
pop
add
mov
inc
repnz
push
fidiv
mov
sub
loop
dec
sti
cmp
mov
xor
cmp
retf
mov
movs
fst
lahf
(bad)
in
mov
adc
push
sbb
test
pusha
or
add
xrelease
xlat
cmp
cmp
sub
scas
add
push
ror
sbb
fst
not
or
dec
add
jmp
push
loopne
call
mov
push
addr16
ds
xchg
add
xor
loope
add
mov
jbe
arpl
imul
int3
jo
push
cmp
xchg
and
xchg
xor
pop
add
in
sbb
sbb
out
fstp
mov
push
aam
ins
dec
dec
cli
or
cmp
push
cmps
push
push
cmps
rcr
pop
popf
inc
push
clc
cmp
push
(bad)
int3
lods
xchg
retf
push
dec
mov
push
call
into
(bad)
and
clc
sbb
push
pop
lahf
test
push
xchg
xor
mov
adc
xor
or
in
mov
in
test
lea
xor
jns
push
das
and
sbb
mov
and
sbb
fsub
sti
pop
repnz
scas
or
cdq
inc
add
adc
cmc
cmc
or
jbe
idiv
cmp
add
adc
repz
mov
adc
popa
mov
mov
jle
in
mov
or
ss
mov
xchg
les
stos
xor
cdq
repz
fucomp
dec
inc
je
pop
xor
ret
mov
inc
mov
sbb
iret
cdq
stos
inc
and
dec
fnstcw
in
cmp
or
lods
aam
sbb
mov
and
lds
push
daa
sbb
push
in
jle
pop
jp
(bad)
(bad)
jae
fiadd
or
(bad)
ffree
mov
loop
push
cmc
out
bound
dec
out
mov
pushw
xchg
in
adc
push
jbe
loop
pop
in
xlat
inc
jge
rol
stos
call
sbb
jbe
mov
enter
ret
mov
cld
or
inc
cmp
xchg
or
fs
outs
dec
fdiv
and
xor
ror
pusha
xchg
out
(bad)
aam
loopne
mov
push
and
or
(bad)
fdiv
sti
sbb
mov
or
popf
mov
jae
(bad)
test
int3
pushf
dec
xor
jne
jae
mov
xor
cmps
xchg
cli
call
imul
and
mov
adc
pusha
inc
dec
dec
lods
add
ret
movs
push
js
mov
lock
js
pusha
xlat
movs
leave
pop
pop
mov
xor
in
out
and
rol
xchg
inc
mov
pop
inc
mov
push
retf
nop
repz
shr
cli
pop
(bad)
fmul
xchg
loop
fmul
mov
mov
sbb
fst
call
div
int
jnp
sbb
das
ins
imul
cmp
movs
or
test
int
(bad)
push
xlat
cld
jl
inc
add
xor
cmp
push
out
add
pop
stos
retf
sbb
and
bound
cmp
out
mov
outs
cmp
mov
shr
cld
xor
fadd
xchg
je
rcr
mov
stos
cmp
sub
das
adc
jo
inc
aas
xchg
stc
test
in
test
inc
mov
or
dec
ja
ins
add
jne
mov
lods
pop
lods
retf
sbb
(bad)
dec
pop
(bad)
ror
ror
cmps
loope
sbb
call
stos
fdiv
call
das
jbe
adc
data16
mov
(bad)
push
cmp
rep
out
adc
ins
push
icebp
pop
call
ins
daa
ss
mov
xor
xor
loop
inc
and
mov
cdq
cmp
es
ds
adc
int
and
inc
xor
mov
addr16
inc
sbb
xchg
movs
and
xchg
dec
mov
add
push
dec
outs
mov
loopne
adc
icebp
xor
inc
inc
daa
mov
and
sbb
inc
add
xchg
(bad)
add
repz
lods
xor
push
das
adc
fild
sub
sti
es
fwait
pop
xor
cdq
add
adc
lahf
push
movs
cmp
add
or
jnp
std
dec
sbb
ja
aad
fwait
es
mov
in
add
pusha
es
sub
test
and
mov
in
push
mov
sbb
push
stc
mov
push
and
mov
mov
adc
outs
sbb
ins
jo
loop
xlat
(bad)
pop
dec
cmps
xchg
popf
ror
jmp
mov
and
movs
std
mov
fnstenv
lea
jp
mov
dec
push
xor
outs
pop
mov
dec
dec
ror
xchg
ja
jae
pop
out
sbb
call
inc
push
mov
ins
jo
sub
push
xchg
push
cmp
(bad)
adc
das
loopne
and
push
and
push
lds
movs
mov
sub
push
jae
outs
imul
and
xor
mov
addr16
ret
imul
ficom
inc
cmp
add
in
jnp
jns
adc
in
out
out
and
mov
xchg
mov
movs
clc
pop
mov
int
pop
push
add
bound
in
(bad)
fcmovne
repz
xchg
or
icebp
and
or
push
or
hlt
inc
int3
pusha
cmc
scas
out
dec
arpl
jmp
push
fwait
js
push
and
push
push
out
out
sbb
inc
xor
aaa
ja
xor
xlat
addr16
lahf
jae
ret
inc
xor
inc
and
pop
sub
js
mov
sbb
or
(bad)
push
sub
(bad)
dec
les
neg
jne
(bad)
lods
inc
adc
sub
nop
cmps
cmp
(bad)
retf
mov
jmp
in
scas
xchg
sub
cmp
mov
lods
daa
scas
mov
ret
stos
fsqrt
clc
cli
mov
jmp
dec
stos
mov
xor
int
xchg
clc
in
out
das
icebp
pop
sti
pop
lea
sub
loopne
daa
xor
adc
sub
jl
(bad)
cmp
aas
shr
movs
icebp
add
aaa
and
dec
pushf
lea
ror
js
cwde
mov
leave
aaa
dec
xchg
jmp
clc
xor
fdiv
cdq
mov
fadd
or
push
enter
xor
add
movsx
pop
cld
pop
and
sub
int
mov
(bad)
xor
(bad)
push
add
sbb
aam
jne
jae
push
shl
aam
and
cmps
cmp
mov
sti
mov
push
repz
add
enter
fwait
retf
pop
in
stc
xchg
xchg
and
and
neg
pop
fisub
scas
nop
pop
aam
sti
sbb
arpl
imul
mov
aaa
cmp
fnstcw
call
je
jne
mov
ror
mov
dec
mov
(bad)
aad
ds
sbb
shl
test
shr
test
pop
in
imul
in
xor
in
adc
and
loope
or
inc
in
inc
mov
test
and
in
sub
scas
mov
push
psadbw
mov
fmul
inc
jp
sbb
imul
pop
leave
push
shl
mov
and
stos
out
adc
repz
push
dec
arpl
es
mov
or
shl
or
jmp
jg
cmps
push
jns
push
xor
xlat
in
lods
dec
xlat
cmp
and
stos
fstp
repz
dec
pusha
inc
retf
mov
movs
ja
pop
inc
stos
jnp
retf
xchg
fcomp
fiadd
std
xor
dec
jmp
pop
inc
fist
dec
rol
push
retf
lock
outs
sar
popf
cmp
jp
imul
and
jmp
mov
add
and
cli
mov
mov
pop
movs
call
xchg
jmp
pop
addr16
cwde
retf
push
mov
mov
jae
push
cmps
or
scas
sar
and
sbb
jae
dec
bound
(bad)
(bad)
cmp
(bad)
cmp
jecxz
loopne
(bad)
xchg
adc
push
jns
pop
pop
fwait
popa
aas
dec
cld
sbb
lods
js
popa
xchg
sub
dec
jmp
pushf
cdq
sub
push
ficom
pop
add
mov
add
in
pop
(bad)
int3
(bad)
push
pusha
jnp
scas
rcr
jge
ficomp
ret
mov
out
mov
push
dec
xor
or
xchg
sar
jne
test
aas
into
sub
and
fidivr
mov
shr
and
das
xchg
sbb
scas
jge
xchg
(bad)
aam
inc
int3
dec
jno
jo
nop
lds
aas
repnz
dec
mov
lds
sub
sbb
jns
mov
mul
shl
imul
mov
xchg
clc
adc
ficom
je
iret
dec
mov
sbb
ss
mov
sbb
mov
add
and
in
jo
stos
push
mov
sub
cdq
int3
loopne
addr16
neg
out
jmp
sub
inc
pop
repz
xor
repnz
ret
int3
enter
push
inc
ret
xlat
or
xor
mov
dec
mov
pop
(bad)
jne
pushf
std
push
das
pop
jge
or
neg
and
cmp
call
pop
std
iret
cmp
sub
mov
and
fnstcw
mov
pop
pop
push
(bad)
test
pop
int
dec
ss
repnz
clc
jo
(bad)
jmp
and
push
mov
nop
jae
or
mov
xchg
sub
pop
aaa
add
xchg
dec
xor
xchg
in
pop
push
push
sbb
retf
test
pop
inc
jl
ins
jns
call
cdq
or
call
add
dec
adc
pushfw
fadd
test
mov
dec
jmp
out
stc
sbb
xlat
inc
test
jo
sar
mov
(bad)
sub
fild
fidivr
cmc
stos
mov
lock
(bad)
enter
push
inc
pop
inc
imul
ds
sbb
popf
push
out
leave
add
cmp
outs
sub
dec
rcr
mov
cmp
or
aaa
xlat
sbb
es
mul
ss
push
gs
cmps
pop
inc
sahf
mov
(bad)
jbe
(bad)
push
mov
ss
aad
mov
ret
(bad)
jge
cmp
xor
in
int3
jb
cwde
shl
ficom
sbb
inc
fwait
pop
lock
mov
dec
inc
push
fnstenv
xchg
sub
mov
mov
fldl2e
and
bound
and
jmp
and
inc
cmp
les
sub
mov
mov
outs
inc
cmps
in
push
inc
sub
jmp
jp
jbe
out
aas
add
and
call
mov
in
aam
jo
pop
xor
popa
mov
pop
mov
jb
cs
mov
std
add
pop
sub
inc
in
outs
xchg
test
lock
dec
es
xchg
jno
out
and
mov
dec
add
shl
add
(bad)
not
sti
arpl
mov
mov
or
inc
jmp
jbe
jl
fistp
push
sar
jecxz
js
popa
sbb
in
mov
pop
(bad)
iret
or
es
into
push
lock
les
and
mov
xchg
arpl
mov
ss
mov
pop
adc
jbe
dec
sub
aas
fs
dec
jecxz
loopne
cmps
xor
leave
push
jno
inc
push
mov
fdivp
xlat
and
inc
inc
(bad)
loop
call
jo
ds
adc
mov
fiadd
fsub
mov
mov
imul
icebp
sub
pop
xchg
or
jg
mov
or
pop
mov
leave
(bad)
leave
xchg
or
jbe
repz
mov
mov
inc
and
outs
sub
dec
cmp
pusha
clc
dec
push
ss
mov
ins
(bad)
cmps
hlt
lahf
add
lods
pushf
fimul
cmp
ins
(bad)
mov
pop
stos
adc
sahf
popf
nop
inc
test
rol
jnp
sbb
sub
scas
std
in
mov
mov
jmp
dec
xchg
stc
and
js
dec
dec
mov
push
jae
sbb
lock
retf
xor
(bad)
cli
(bad)
xchg
push
repnz
ins
push
xlat
pop
out
mov
std
ret
and
adc
cwde
adc
retf
xor
push
and
not
sbb
mov
xchg
dec
mov
sub
pushf
(bad)
inc
xchg
fild
mov
jns
leave
mov
pop
shl
push
int3
or
adc
mov
mov
out
sub
and
nop
and
in
jae
fist
pop
rol
cmp
pop
outs
pusha
cli
add
ins
inc
sbb
mov
add
or
into
add
fild
xchg
bound
jne
(bad)
pop
pop
aad
leave
jns
push
aas
pop
pop
dec
mov
lahf
add
lock
nop
ins
(bad)
call
mov
cld
fmul
add
test
mov
jp
adc
stos
pop
mov
jmp
dec
and
cmps
or
cmp
add
sub
sbb
outs
jnp
or
pop
imul
fmul
mov
outs
in
sub
aad
pop
sbb
cmp
and
call
jg
into
jmp
mov
mov
sub
xor
popf
xchg
lock
rcr
(bad)
fcmovne
inc
cmps
lea
sbb
ret
popa
jne
lods
retf
adc
mov
enter
int
idiv
dec
jb
push
or
jge
les
test
push
in
leave
or
test
or
dec
aad
es
cmc
push
sub
add
mov
jecxz
sub
das
jmp
and
sbb
ss
movs
rol
call
push
add
int
mov
mov
leave
adc
ja
xor
aam
movs
jo
xor
addr16
adc
sbb
mov
and
lea
popa
and
rcr
xlat
test
and
mov
xor
cwde
retf
repz
icebp
push
(bad)
aaa
mov
mov
stos
mov
sub
call
lock
pop
bound
leave
and
aas
inc
cli
ret
test
shl
add
mov
ja
(bad)
inc
cmp
adc
adc
icebp
cmp
jg
loopne
xchg
(bad)
mov
(bad)
cli
or
scas
adc
fwait
xchg
pcmpeqd
ins
ror
outs
dec
iret
pop
jnp
je
push
mov
and
lods
xor
push
add
xchg
and
mov
adc
sub
xor
jnp
mov
xor
cmp
int
out
jno
rol
ins
clc
pop
loop
aad
sub
cdq
retf
mov
icebp
jl
push
outs
stc
mov
jl
dec
jns
jge
xor
cdq
xchg
ss
sbb
retf
ds
cli
ins
lahf
mov
mov
and
jb
xor
xchg
mov
jo
ja
adc
mov
stos
jecxz
stos
ins
cdq
sbb
rcl
jmp
call
iret
and
and
jmp
cs
movs
mov
scas
clc
mov
pop
mov
jmp
in
mov
in
mov
daa
push
ja
jne
inc
iret
push
pusha
stc
es
add
lahf
jae
dec
push
xor
es
leave
retf
add
push
mov
mov
pop
hlt
call
outs
loope
xor
sub
mov
add
jmp
(bad)
cmp
fimul
aaa
(bad)
in
add
ins
fsubr
mov
shl
jmp
das
aas
lock
int
ss
add
call
scas
int
sub
call
data16
(bad)
or
fcom
jns
std
jmp
arpl
and
sti
sbb
scas
lods
xor
push
test
mov
repnz
int
retf
add
ror
sub
sub
ror
inc
icebp
add
inc
pop
jo
dec
jnp
xchg
mov
add
sbb
pop
or
xchg
add
cmp
loope
and
ins
ins
sub
xor
ja
in
sbb
adc
cmp
jne
call
test
dec
dec
sbb
adc
sub
xchg
ds
fadd
xor
retf
outs
imul
sub
hlt
push
fisttp
dec
test
xchg
stos
movs
and
mov
mov
mov
and
outs
cmp
jno
push
arpl
fild
or
pop
repnz
cmp
jne
adc
scas
hlt
adc
das
sbb
pop
repz
cmp
sbb
in
jp
je
ds
sub
cmp
or
mov
stos
je
ins
dec
or
add
sub
push
mov
and
adc
xchg
icebp
icebp
stos
pusha
mov
pop
sbb
sbb
adc
and
stc
push
adc
mov
and
sahf
enter
sub
test
jns
aaa
pop
mov
cmp
mov
shl
jae
jp
sbb
mov
sbb
mov
call
and
fnsave
shl
jae
xchg
mov
cmps
sti
inc
shl
push
cmp
mov
inc
test
adc
jnp
(bad)
xchg
add
cmp
inc
(bad)
mov
add
pop
mov
adc
add
ror
in
not
dec
add
sti
jmp
pusha
jp
fsub
stos
fs
mov
inc
pop
or
push
sub
jmp
mov
jae
jge
sbb
add
xchg
mov
in
repz
pop
out
aad
(bad)
mov
cmp
mov
pop
push
ror
das
(bad)
pusha
push
fcomp
imul
pop
mov
pop
and
mov
jecxz
dec
popa
xchg
fnstsw
jp
inc
mov
nop
popa
or
fnstenv
scas
mov
inc
rcr
sub
ror
jno
sbb
cmp
mov
cmp
clc
push
aad
fucom
sub
jl
inc
xchg
clc
cmp
add
xor
rcr
or
mov
bound
(bad)
in
sub
inc
mov
in
jl
fistp
retf
test
mov
lahf
leave
dec
push
xchg
and
lahf
inc
fwait
movs
push
cmp
cmp
mov
sub
loopne
addr16
stos
movs
lock
mov
pop
sbb
dec
div
or
je
inc
scas
jo
dec
es
add
cld
idiv
aad
ret
retf
mov
sub
pop
push
aam
adc
addr16
loop
call
mov
pop
pusha
inc
outs
sbb
push
xchg
add
js
repnz
loope
(bad)
ins
inc
adc
jb
mov
frstor
jg
aam
sub
fist
jnp
and
outs
mov
xor
dec
ins
fs
push
or
push
pop
nop
push
sbb
mov
sbb
or
(bad)
shl
xchg
(bad)
jge
push
loopne
int
inc
das
aad
mov
xchg
rol
cmp
or
push
sti
stos
jb
in
ret
clc
dec
dec
pop
loop
adc
sbb
sub
sub
movs
lock
stos
(bad)
dec
mov
cmp
push
sub
mov
mov
xor
adc
iret
clc
jne
retf
fcom
inc
jnp
jge
dec
inc
sub
mov
or
dec
jae
retf
pop
cmc
mov
ja
scas
fldcw
push
adc
mov
in
lahf
or
jbe
mov
(bad)
mov
pop
mov
out
mov
push
or
popa
fcos
cmc
jmp
jnp
or
retf
outs
imul
jg
jle
push
and
adc
scas
gs
pop
std
mov
rol
add
int3
cli
sbb
test
cmp
inc
(bad)
mov
and
xor
or
add
jl
or
adc
dec
mov
movs
sbb
jbe
stos
std
mov
addr16
mov
enter
or
mov
(bad)
mov
push
mov
mov
and
loop
sahf
(bad)
repnz
cmp
or
push
xor
add
and
jnp
mov
pop
and
clc
js
sub
xor
xchg
jmp
out
lahf
leave
jo
mov
xchg
add
push
outs
push
pop
dec
out
push
add
lea
lds
xchg
sbb
stos
nop
lock
or
fsub
mov
or
push
sbb
add
sub
pop
and
xchg
mov
pusha
mov
push
xchg
sub
shr
push
pop
add
or
xor
inc
mov
mov
out
ja
add
or
and
jp
cmp
mov
jns
mov
xchg
add
sar
inc
add
mov
pop
pop
mov
add
and
pop
xchg
push
mov
in
mov
mov
in
test
inc
je
jle
jo
jmp
pop
ffree
test
cmps
dec
loope
mov
pop
add
int3
cmp
adc
lods
js
cmp
xchg
lea
scas
in
mov
inc
mov
das
dec
add
rcr
cdq
inc
mov
jae
gs
test
pop
inc
xor
cmc
leave
adc
push
jbe
push
adc
mov
cmc
inc
ins
push
(bad)
push
jecxz
sbb
inc
sbb
stos
adc
mov
mov
fidiv
jge
lods
enter
sbb
mov
cmp
dec
add
jnp
arpl
push
mov
cmc
or
jmp
(bad)
pop
sub
inc
clc
and
enter
(bad)
aad
pop
rol
repz
xchg
dec
jnp
out
add
fild
sub
mov
bnd
leave
movs
or
fwait
adc
inc
retf
or
sub
stc
ret
dec
mov
cmp
add
and
scas
mov
jbe
ret
cmps
cmp
jns
pop
daa
out
fisub
xchg
arpl
pop
out
fidivr
rcl
arpl
jo
stc
fbstp
sub
out
inc
setge
pop
dec
and
adc
mov
cmp
jb
pcmpeqb
aad
cwde
xchg
inc
xchg
pop
xor
test
aas
sbb
and
hlt
loop
mov
sub
sbb
dec
or
xchg
test
mov
pop
pop
ficom
pop
in
mov
jne
cmp
push
cli
aas
dec
and
test
pop
xor
xor
jbe
push
out
das
adc
pusha
add
xor
adc
in
push
dec
mov
jg
dec
xchg
call
sub
inc
xchg
push
sbb
nop
pop
lea
adc
inc
jae
in
popf
in
add
fdivr
xchg
or
mov
jns
push
loopne
fsub
add
inc
retf
and
aas
adc
mov
fs
test
mov
dec
mov
shr
mov
repnz
test
test
mov
inc
je
cmp
ficom
sar
test
fwait
int3
inc
dec
(bad)
bound
dec
adc
cmps
loop
xor
(bad)
xchg
loope
jge
stc
loopne
or
mov
or
mov
jno
popf
push
lock
jb
and
mov
jno
(bad)
pop
fs
dec
out
cmp
inc
cdq
sub
std
mov
not
shr
sbb
jno
pop
popf
fld
pop
or
xlat
movs
ret
shl
add
pop
dec
mov
sbb
mov
mov
iretw
jl
or
test
call
movs
pop
cmp
xchg
mov
mov
mov
shl
dec
pop
inc
(bad)
jae
retf
aam
xchg
jo
mov
xor
daa
shr
mov
adc
test
shl
(bad)
clc
xchg
sbb
xchg
sub
dec
(bad)
inc
mov
ficom
ds
out
mov
mov
rol
ins
jecxz
or
adc
lods
xor
in
div
leave
mov
add
jle
movs
jp
jmp
lock
(bad)
jmp
in
pop
scas
mov
out
and
test
dec
gs
loop
int3
icebp
stos
ins
sub
sbb
inc
xor
loop
stos
pop
xchg
addr16
mov
gs
outs
xchg
sahf
imul
jne
inc
and
inc
jg
mov
sbb
mov
cmps
cli
xchg
adc
add
cmp
stos
adc
jg
and
arpl
mov
inc
xchg
mov
or
(bad)
push
stos
into
sbb
push
cmp
(bad)
xchg
test
sbb
clc
mov
lods
mov
and
test
adc
push
or
or
ss
sbb
daa
push
push
clc
jmp
ret
xor
iret
sbb
adc
pop
cdq
xchg
mov
xor
aad
das
push
inc
or
movs
sub
xchg
xor
pop
mov
adc
xor
jl
add
dec
and
pop
xlat
mov
inc
jo
mov
inc
xor
rcl
dec
jb
(bad)
pusha
xchg
in
pop
jns
or
lahf
pop
dec
(bad)
mov
or
(bad)
out
nop
adc
cdq
mov
jl
ficomp
enter
outs
sub
hlt
and
xor
sti
loop
mov
movs
data16
push
retf
loopne
push
cmp
jne
lds
rcl
arpl
sub
in
xchg
dec
pop
xchg
dec
cmp
loope
leave
pop
jg
seta
dec
dec
addr16
mov
xor
mov
sbb
out
inc
lds
adc
call
cli
popf
mov
sub
sub
sub
adc
jmp
push
mov
xor
movs
aaa
pop
adc
push
arpl
xlat
dec
in
stc
cld
aas
mov
ss
movs
out
je
outs
das
push
popf
pop
shr
push
jno
mov
add
(bad)
jmp
out
push
push
xchg
and
or
retf
movs
in
mov
or
call
popf
js
jge
mov
fsubr
(bad)
loope
mov
nop
push
xchg
dec
or
jge
and
mov
xchg
inc
lea
jmp
jb
mov
mov
je
fiadd
addr16
jle
push
adc
sbb
xchg
pop
or
add
inc
int3
sbb
mov
sub
shl
aas
mov
mov
mov
push
cmp
or
outs
arpl
mov
ret
call
fistp
repnz
in
mov
arpl
pusha
push
inc
cdq
int
lahf
fisttp
mov
push
push
stos
jae
in
fisubr
or
imul
mov
jb
xchg
ins
fild
shr
xchg
repz
pushf
not
adc
or
jmp
mov
test
out
mov
dec
xchg
aad
ja
lods
adc
ins
aad
scas
xchg
push
out
or
lods
mov
dec
aaa
push
cmp
fsub
xor
fwait
adc
(bad)
mov
sbb
pop
sbb
xchg
adc
out
inc
ins
stos
sub
fmul
adc
jne
je
push
ret
pusha
jmp
int
ss
jmp
sbb
jno
pop
mov
jmp
mov
mov
inc
mov
nop
dec
pop
rol
pushf
dec
mov
cwde
jecxz
push
and
adc
cmp
dec
dec
fldcw
pop
repnz
(bad)
fisttp
arpl
sub
sub
neg
or
xchg
xor
sub
in
jne
jno
sub
jno
cmp
xchg
xor
cli
loop
sub
ret
xchg
mov
jl
cdq
jno
mov
inc
xor
pusha
retf
xchg
and
stos
in
ins
je
adc
add
sti
in
test
xor
inc
xor
mov
xchg
test
vxorps
or
dec
pop
clc
and
loopne
mov
xchg
ret
mov
rol
dec
sar
rol
shl
mov
in
xchg
clc
mov
(bad)
neg
dec
out
xchg
ins
sbb
jmp
dec
in
jmp
and
ror
cmp
sbb
lds
shl
fldcw
int
or
xchg
outs
cdq
retf
pop
(bad)
movs
aad
dec
add
or
adc
mov
or
or
jne
aas
dec
push
push
fsub
(bad)
sub
sub
inc
into
lds
push
(bad)
mov
dec
nop
mov
aad
stos
or
cmc
in
push
jmp
mov
mov
(bad)
lock
ja
pop
inc
dec
jo
dec
daa
cwde
pusha
aaa
add
jp
adc
sub
jnp
scas
cwde
xor
mov
sub
ss
ds
out
push
icebp
pop
mov
or
mov
sub
(bad)
pop
or
add
ins
and
rcr
or
push
out
pop
cli
paddusw
std
out
outs
cmp
lahf
sub
retf
xor
add
dec
imul
movs
mov
or
pop
mov
retf
xchg
and
jns
push
in
push
add
or
and
imul
ret
xchg
xor
mov
push
mov
mov
(bad)
outs
mov
cmp
pop
push
jmp
lds
jo
jg
and
std
sub
jg
push
cs
dec
jne
jle
mov
pop
add
adc
inc
mov
adc
mov
jg
xchg
int3
ins
adc
outs
inc
pop
push
rep
mov
(bad)
adc
in
xchg
pop
mov
xchg
ror
inc
outs
sbb
sub
pop
pop
imul
aas
out
repnz
js
mov
cld
mov
adc
sbb
fld
cmp
pop
jmp
mov
lock
inc
adc
leave
ror
pop
test
test
push
sub
out
fadd
push
jo
sbb
ja
es
mov
ins
push
pop
mov
mov
call
xor
fwait
pop
push
lock
push
dec
push
add
aaa
ja
inc
or
xor
iret
enter
cli
xchg
es
retf
xchg
sub
ret
add
ror
pop
jae
inc
jae
push
pop
in
mov
shr
mov
xchg
fld
pop
rcr
outs
pop
repz
add
push
xor
pop
daa
adc
jmp
aad
dec
mov
loopne
jo
out
cs
frstor
into
cmps
shl
mov
jmp
add
data16
pop
xor
jge
pop
jle
inc
outs
inc
pop
xor
(bad)
stos
mov
xchg
lods
fs
out
push
xor
jmp
jg
setns
imul
shr
cmp
inc
lds
mov
lods
cdq
xchg
jns
dec
mov
rcr
stos
inc
into
and
pushf
cmp
push
fadd
cdq
adc
sbb
cmp
jns
mov
dec
mov
cmps
cs
out
test
push
jbe
xchg
in
fidiv
clc
inc
shl
lds
fcmovu
adc
lock
outs
out
sub
loope
inc
popf
mov
pop
out
mov
push
sahf
sbb
inc
sbb
mov
rol
or
mov
loope
mov
div
cmp
xchg
xor
mov
dec
push
pushf
or
rol
push
cmp
xchg
cwd
mov
pop
jle
push
sbb
lds
push
jbe
imul
(bad)
push
inc
xor
sti
mov
in
jg
leave
adc
lock
lock
outs
(bad)
fisttp
cmp
fwait
mov
aad
adc
push
xor
fist
xor
outs
push
bound
addr16
in
pop
mov
adc
rcr
push
push
jmp
gs
aas
jmp
sub
cmc
fwait
and
cmp
icebp
jae
ror
sbb
lds
and
scas
cmp
mov
adc
sahf
jp
mov
add
jecxz
push
rcr
push
or
and
(bad)
lock
aas
mov
dec
fsubr
ret
int3
cdq
mov
and
mov
in
nop
or
fs
sbb
fild
fild
and
or
inc
mov
jmp
popa
mov
std
aas
fwait
mov
cmps
jns
pop
jne
push
daa
icebp
in
sbb
xchg
pop
mov
sub
shr
imul
jp
test
push
retf
sub
rcr
(bad)
clc
int3
das
popf
xchg
aas
pop
call
pop
mov
jbe
lock
imul
cld
inc
and
enter
jp
sub
mov
mov
push
ret
lahf
jmp
mov
pop
fild
loope
jmp
data16
adc
or
into
sbb
daa
pxor
enter
stos
mov
or
in
xchg
push
adc
mov
mov
push
mov
sbb
mov
outs
adc
cld
adc
mov
jmp
les
push
sbb
mov
or
mov
shl
out
retf
aaa
ret
in
push
sub
pop
jg
xchg
inc
cmp
pop
xlat
sti
test
pop
pop
sbb
nop
jmp
ror
outs
xchg
pop
fst
add
xor
push
nop
push
or
int
imul
sbb
imul
mov
js
mov
ror
xchg
push
imul
std
test
cs
retf
adc
test
mov
je
neg
xchg
pop
arpl
inc
xchg
sbb
push
lock
pop
cmp
movs
pop
pop
jg
inc
sbb
pop
inc
retf
daa
xchg
jecxz
xor
add
dec
and
adc
iret
shr
cld
xlat
and
mov
xlat
ins
pop
ins
cs
dec
sbb
or
add
stc
lock
or
and
mov
lods
cdq
pop
xor
jmp
scas
(bad)
psubd
pusha
aad
cli
call
int3
sub
ins
push
dec
inc
pop
lahf
dec
or
sub
ja
test
push
stc
jge
in
or
add
push
fst
test
or
pop
not
xor
scas
cdq
xor
call
pop
stos
cwde
mov
and
jp
cmp
add
jmp
pop
pushf
xor
pop
mov
push
cmp
imul
es
mov
xchg
lea
jecxz
jecxz
mov
fidivr
call
cmp
mov
mov
cdq
jp
ror
jl
mov
test
inc
ds
jle
cmc
or
mov
cwde
repz
xchg
and
jo
jns
or
fs
lds
jecxz
or
clc
loope
test
mov
xor
mov
lea
adc
mov
mov
test
sbb
mov
pop
data16
mov
xor
frstor
int
mov
and
adc
mov
pusha
enter
cmp
mov
out
ret
out
aas
fxch
call
or
jmp
mov
jb
xchg
mov
or
lods
loopne
and
pop
inc
test
pusha
retf
sbb
nop
int
jle
aam
sub
xchg
push
pop
sar
int3
jg
pushf
cmp
fst
dec
enter
xchg
(bad)
fwait
js
jo
jb
dec
enter
(bad)
loopne
push
fs
je
in
fisttp
sbb
mov
ffree
cmp
lahf
adc
jmp
xor
xchg
fld
push
js
pop
adc
lea
arpl
adc
stos
and
push
mov
fwait
adc
push
and
faddp
inc
lock
lsl
cmc
jg
ja
pop
lds
mov
xchg
or
(bad)
scas
add
cld
inc
out
or
mov
add
mov
push
xchg
aad
push
mov
in
xchg
(bad)
cld
cdq
cmp
jp
scas
(bad)
enter
push
dec
adc
cwde
xor
sub
mov
addr16
push
push
inc
jg
and
int
pushf
pop
mov
idiv
pop
aad
hlt
ins
add
jb
pop
xor
sar
iret
push
cmp
in
loop
stc
lahf
dec
sub
pusha
adc
pop
cmc
dec
(bad)
fild
jbe
add
mov
cmp
pop
ror
xchg
popa
repnz
push
cmp
add
sbb
xor
lock
inc
shr
fdivrp
mov
leave
mov
dec
jnp
hlt
jp
pop
arpl
pop
lea
enter
or
aad
sti
sub
mov
out
in
pop
dec
and
lds
ss
(bad)
fmul
js
mov
adc
jo
out
pop
js
(bad)
cdq
dec
aad
pop
sbb
push
dec
cmc
(bad)
(bad)
mov
jmp
je
int3
lods
dec
push
xchg
mov
test
push
rcr
adc
mov
sub
and
shr
imul
mov
out
outs
cmp
movs
sbb
jg
inc
push
jmp
test
lock
or
inc
je
ins
inc
jo
not
adc
mov
push
idiv
and
sbb
into
xlat
mov
xor
leave
int3
ret
push
daa
mov
cmp
lods
jmp
popa
sar
push
repnz
sub
cmps
das
jge
ds
lahf
(bad)
scas
idiv
int
test
enter
iret
aas
data16
inc
imul
je
mov
jge
addr16
xor
mov
mov
loopne
mov
push
inc
and
jle
sub
mov
xor
ret
mov
push
sub
arpl
in
es
data16
add
jmp
jns
out
iret
imul
add
in
rol
aaa
or
dec
push
enter
adc
mov
mov
dec
jp
adc
imul
cmp
mov
and
jmp
call
jmp
pop
push
add
pop
cmp
iret
inc
pop
js
pop
test
pop
adc
xchg
aas
es
mov
jecxz
sub
mov
inc
xor
dec
xchg
mov
add
fldcw
call
pop
adc
push
aam
movs
push
outs
mov
pop
sti
push
sbb
sbb
cmc
movs
ret
stos
shl
lods
movs
and
jle
mov
sbb
push
(bad)
jmp
test
in
fldenv
push
mov
push
or
in
xor
add
adc
jno
and
push
not
popa
in
loopne
fild
movs
mov
or
sbb
and
fld
popf
push
sub
xor
loope
inc
lods
jne
fisttp
xchg
mov
xchg
sub
ror
cmps
(bad)
pop
pop
fsub
pop
dec
call
mov
jl
call
inc
iret
or
fnstsw
mov
pop
add
xchg
jnp
nop
sub
sahf
jp
in
int
mov
je
or
inc
xchg
pop
add
out
inc
into
sbb
stos
jecxz
xlat
jp
fbstp
cmp
mov
jp
or
repnz
add
xor
jb
xlat
fwait
mov
ss
mov
pop
and
inc
(bad)
xor
hlt
fsubr
xor
clc
in
mov
loop
or
cmps
js
mov
xchg
mov
loopne
int
pusha
fidivr
xchg
jno
clc
push
daa
int3
xchg
jns
xchg
ror
mov
jge
mov
stos
mov
movs
loop
adc
shl
pusha
mov
cmp
mov
jmp
and
fstp
mov
iret
mov
loope
sbb
popf
stos
xor
pop
fs
pop
stc
jmp
lock
mov
dec
(bad)
ret
cmp
push
adc
jge
mov
stc
inc
lds
or
aaa
retf
fs
je
push
mov
dec
lea
gs
lea
dec
sub
fsubr
test
stc
push
mov
pop
or
fucom
inc
jno
stc
push
inc
retf
lea
js
jecxz
mov
and
pop
push
test
push
in
pop
mov
cmp
sbb
jae
loopne
pop
or
push
fisub
push
outs
pop
mov
nop
fistp
cld
std
ja
out
mov
jp
stc
push
or
sub
retf
adc
ins
data16
mov
dec
mov
sub
xchg
lahf
cmps
add
sbb
xor
sub
dec
cmovbe
test
fldenv
ss
ds
pop
xlat
stos
jno
aas
ds
imul
bound
pop
movs
mov
mov
lock
xchg
lods
fs
clc
xchg
fs
outs
lea
in
loope
neg
mov
cmp
cmp
imul
movs
push
lods
push
jg
loop
xchg
pop
arpl
ds
dec
mov
add
icebp
mov
mov
out
push
push
mov
daa
or
lds
mov
cmp
adc
cmp
and
inc
jae
jmp
xor
je
add
xchg
rcl
xchg
xchg
je
or
(bad)
mov
ins
(bad)
sub
retf
test
in
std
mov
pop
jae
xchg
(bad)
mov
std
mov
jge
pop
adc
or
test
xlat
mov
es
adc
fnop
pop
hlt
push
je
(bad)
pop
ffreep
mov
xchg
mov
mov
jge
and
and
stos
js
push
mov
ds
test
and
xchg
lahf
jae
pop
bound
mov
rol
xor
jecxz
sub
mov
pusha
push
test
ja
ja
loop
lock
(bad)
jg
sub
jno
sub
ds
enter
repz
cmp
mov
test
in
inc
push
hlt
out
or
rcr
push
test
fldcw
fxch
hlt
cmp
push
jo
call
mov
nop
sub
lea
ss
cmps
dec
repz
sar
sub
xor
test
das
aam
(bad)
mov
sti
xor
cld
retf
cwde
pop
mov
(bad)
ror
xchg
mov
push
ficom
dec
stos
jg
out
sbb
mov
dec
fsubr
je
out
and
mov
xchg
xchg
add
inc
or
lods
sti
dec
fptan
pushf
pop
mov
push
cmp
adc
inc
add
pop
es
mov
cmp
fild
fucomip
or
loopne
mov
stc
out
push
sbb
inc
sbb
jmp
dec
mov
push
dec
sbb
(bad)
mov
push
stos
push
test
dec
std
ror
sub
push
out
cmp
mov
ret
sbb
push
daa
jle
xchg
test
fmul
out
bound
das
cs
cdq
push
movs
jge
fstp
jo
jns
test
not
les
jno
mov
ins
mov
call
hlt
or
loop
imul
mov
adc
lock
or
jl
push
mov
jnp
fbld
or
les
xchg
gs
inc
in
(bad)
fisub
repnz
mov
mov
mov
ret
cwde
xor
ins
inc
bound
mov
mov
das
mov
mov
push
and
cmps
(bad)
jne
pop
or
dec
ror
addr16
pusha
push
mov
xor
sti
jmp
out
xchg
mov
(bad)
add
jo
and
push
nop
sub
mov
xor
loopne
call
ret
or
in
jno
inc
rcr
push
lods
ret
ja
adc
int
push
fimul
in
sbb
ret
call
or
mov
or
sbb
pop
movs
jge
add
ins
popf
es
(bad)
dec
mov
repz
repnz
je
pop
xchg
dec
test
cmps
data16
cdq
in
add
dec
pop
in
enter
gs
sar
inc
and
sub
jge
call
aam
test
push
sbb
xchg
push
jnp
xor
rol
aad
jno
fdiv
mov
sub
sbb
syscall
int
jl
je
and
xchg
dec
lea
add
pop
inc
rcl
test
in
mov
adc
loop
push
adc
bound
pusha
leave
jo
fs
ror
xlat
pop
fild
mov
call
lahf
lock
in
addr16
ja
aaa
stos
enter
xor
mov
or
mov
xor
push
loope
xor
sahf
mov
jle
fs
aas
scas
cmp
mov
push
cmp
js
nop
pop
pop
push
fld
or
jp
inc
mov
aam
adc
sub
pop
xchg
addr16
movs
xor
stos
mov
je
dec
xor
cmp
adc
jns
inc
inc
inc
jge
mov
mov
call
(bad)
ins
jne
arpl
xor
mov
inc
ds
in
div
or
popa
fmul
push
lods
out
fs
push
xor
pop
adc
mov
dec
lods
ins
cmps
dec
mul
(bad)
ret
lahf
hlt
arpl
popf
and
xchg
fdivrp
push
add
outs
ret
jno
push
sqrtps
sbb
aaa
stos
and
out
pop
inc
cmp
mov
dec
movs
ins
nop
pop
inc
sar
dec
lock
mov
mov
xor
or
mov
jae
rcr
sub
dec
popf
pop
lods
mov
stos
rcr
adc
and
mov
sbb
mov
jp
xor
adc
call
ins
sbb
push
inc
adc
or
lahf
push
jmp
jno
fisttp
inc
and
sub
out
inc
inc
shl
stc
js
mul
lock
jns
test
mov
stc
outs
mov
dec
test
or
(bad)
or
sbb
loope
les
or
mov
aam
xchg
adc
inc
test
rcr
outs
mov
repnz
xor
and
stos
fst
mov
jecxz
(bad)
mov
push
jns
jns
sub
mov
ins
hlt
mov
ins
pop
or
pusha
ja
mov
xchg
rol
ds
inc
aad
and
cmp
push
jbe
pop
fnsave
sub
mov
ss
sub
pop
or
cmp
lahf
out
xchg
outs
dec
jmp
or
retf
mov
or
daa
add
jo
inc
push
or
es
sbb
(bad)
jge
mov
ins
xor
lahf
out
pusha
sub
mov
sbb
inc
push
ret
aad
push
(bad)
jg
movs
xor
imul
ins
add
fwait
cmp
xchg
add
rcl
test
push
mov
inc
lahf
xchg
addr16
adc
pusha
or
or
into
adc
xor
sahf
mov
sbb
xchg
xchg
stc
out
bound
movs
mov
test
shl
push
fistp
add
jb
inc
mov
in
icebp
cmp
nop
loope
pop
call
mov
cdq
(bad)
movs
test
dec
out
scas
fnstcw
cmps
test
push
out
push
push
hlt
aaa
cmp
dec
into
and
mov
mov
xor
ins
push
xor
mov
hlt
jle
add
mov
xchg
push
dec
pop
ss
leave
mov
mov
mov
xchg
mov
fiadd
loopne
aaa
adc
cmc
ja
sbb
dec
dec
xor
mov
clc
adc
inc
push
xor
push
sub
test
xor
sbb
push
pop
sub
cmp
es
mov
cli
xchg
imul
or
lock
jl
leave
sub
sub
fcmovnu
and
leave
inc
dec
jle
xor
jne
dec
xor
lds
ins
push
pop
jb
test
lahf
imul
mov
inc
pop
jp
pop
in
in
pop
pop
test
sbb
push
(bad)
cmp
push
adc
push
es
ja
stos
pop
pop
cmp
or
mov
out
rcl
ds
mov
adc
imul
lea
movs
dec
xor
pushf
jmp
mov
and
mov
push
mov
test
cdq
mov
pop
dec
push
lds
pop
jle
loope
jl
add
sar
in
nop
lods
es
fnsave
sbb
or
mov
out
dec
pusha
js
test
pop
or
or
mov
pop
mov
fs
add
movzx
iret
push
ret
(bad)
rcl
fadd
dec
push
sub
clc
push
fwait
cmp
lods
jge
out
push
pop
sti
lahf
xchg
out
xor
jmp
xor
xchg
mov
ror
sar
pmaxub
push
stos
adc
retf
jnp
sub
leave
(bad)
iret
cmp
repnz
ss
div
dec
fsubr
pop
shl
aad
fstp
repz
add
push
in
mov
or
push
or
cmp
and
ins
(bad)
fild
scas
mov
push
sbb
dec
xchg
or
mov
mov
retf
xor
mov
jl
jp
add
mov
stc
idiv
and
loopne
jmp
les
sub
in
sar
dec
je
push
mov
stc
not
push
push
repz
cld
std
inc
dec
xor
jmp
js
mov
push
jbe
sbb
sub
popa
push
xor
dec
retf
inc
addr16
add
push
adc
mov
mov
sahf
movs
pop
popa
gs
fild
jle
add
push
push
mov
inc
adc
scas
mov
cld
cld
pop
xchg
cmps
cs
sub
popa
sti
and
xlat
ret
xchg
pop
dec
sbb
pop
(bad)
or
push
mov
adc
cmp
mov
into
cli
jge
fucom
stos
movs
cmp
dec
lahf
stc
inc
lock
cmps
dec
fwait
arpl
jnp
mov
icebp
cmp
sbb
test
ins
mov
(bad)
pop
(bad)
lahf
xor
ins
jae
mov
lods
xlat
scas
push
mov
xchg
nop
jmp
mov
stos
mov
and
push
push
fild
xor
mov
mov
dec
sbb
vminss
ds
out
in
adc
xor
sub
mov
inc
scas
pop
add
cli
aad
mov
ss
pop
xchg
dec
pop
xchg
aaa
popf
jo
aad
cmp
and
dec
jl
out
fsubrp
mov
ss
dec
inc
icebp
fsubr
jmp
test
aaa
pop
out
je
xchg
jle
add
adc
mov
mov
xchg
ds
push
movs
push
or
pop
test
scas
mov
ds
push
addr16
pusha
jne
cld
out
test
cmp
cwde
pop
xor
mov
das
loop
fdiv
aad
ret
push
push
mov
movs
ja
mov
aam
jmp
jae
adc
or
aas
pop
in
pop
fdivr
mov
cld
xor
pop
iret
mov
in
push
fcomi
push
clc
sbb
mov
call
in
add
mov
or
sti
xchg
popa
sub
cmp
add
imul
add
bound
xchg
jl
fs
popf
clc
sub
sbb
loope
push
pop
into
xchg
das
jecxz
and
dec
daa
jp
inc
loopne
iret
lods
rcl
inc
pop
cld
jecxz
leave
test
nop
imul
or
sub
and
xchg
sub
inc
or
(bad)
adc
cmp
iret
mov
add
jle
stos
jne
icebp
dec
mov
(bad)
ds
(bad)
mov
cli
sub
lods
in
in
iret
cmp
test
fcomp
sub
xlat
inc
(bad)
clc
cmp
mov
lds
rcl
jbe
dec
outs
int3
adc
mov
(bad)
loopne
pop
cmp
imul
(bad)
popa
push
fidiv
mov
xor
push
dec
les
xor
je
add
push
call
push
paddb
jno
ror
iret
ins
popf
test
xor
outs
iret
out
xchg
bound
fisttp
out
sar
pop
jg
cs
lods
jp
or
mov
adc
push
xchg
out
mov
int3
(bad)
xor
(bad)
mov
mov
mov
mov
and
push
cmp
push
jmp
fnstenv
(bad)
in
movs
or
ret
jne
in
scas
or
(bad)
adc
mov
scas
ss
mov
mov
fdiv
or
sub
adc
push
lahf
fistp
into
fdiv
repnz
jge
xchg
mov
jg
xor
int
inc
push
shr
mov
and
adc
mov
ret
add
cdq
fdiv
into
jmp
xchg
pop
popa
xor
mov
mov
stos
out
mov
jb
cmp
call
imul
and
or
sbb
jnp
cmp
mov
sub
aaa
mov
mov
and
enter
mov
jg
sar
fwait
ins
cmp
fwait
jae
movs
jle
add
adc
cmps
push
imul
push
cld
mov
jae
icebp
outs
push
pop
pop
mov
cs
outs
mov
or
daa
add
jbe
adc
push
push
adc
out
scas
fdiv
cld
repnz
push
popf
or
je
(bad)
xlat
nop
mov
les
jp
mov
cld
pop
shl
and
retf
js
and
adc
push
mov
mov
xchg
js
jnp
cmp
jb
clc
sbb
mov
sub
inc
fidivr
jns
addr16
add
mov
nop
idiv
pop
pop
sbb
fmul
push
lods
xor
dec
mov
iret
mov
(bad)
add
mov
iret
jo
and
mov
pop
push
mov
mov
ret
sbb
or
fsub
push
ins
mov
ss
sub
lock
(bad)
(bad)
mov
enter
icebp
mov
push
cmp
pop
fxch
mov
push
sub
out
mov
pop
cmps
push
mov
call
clc
test
mov
and
mov
movs
mov
add
mov
xchg
lahf
(bad)
js
adc
hlt
bswap
mov
add
sbb
or
popa
mov
mov
sub
mov
retf
out
lahf
xchg
addr16
cmp
cmp
mov
sub
xchg
ficom
inc
add
icebp
and
dec
lahf
aas
gs
repz
jl
add
mov
mov
mov
xchg
xchg
(bad)
sbb
rcr
xor
inc
lea
add
test
out
pusha
pop
aam
(bad)
xor
ret
mov
mov
cmp
jmp
sub
(bad)
fwait
sub
in
into
xlat
out
xchg
rcr
jns
push
jns
mov
inc
js
ds
push
cmp
dec
push
cmp
fisubr
pop
pop
mov
fisttp
movs
sbb
inc
call
cmp
and
xor
inc
lea
bound
fsub
and
mov
rcl
xchg
fadd
fiadd
adc
lock
fs
mov
jns
mov
adc
in
xor
(bad)
pop
shl
(bad)
imul
or
mov
pop
push
rol
push
nop
in
or
inc
push
movs
jp
dec
inc
(bad)
push
jge
jb
call
sti
jnp
ja
sub
out
nop
pop
or
jecxz
data16
add
dec
cli
inc
push
test
ins
and
lea
ror
adc
lds
xchg
mov
loop
ins
test
adc
sub
inc
mov
ss
mov
cmp
imul
(bad)
xor
fld
dec
data16
jp
jmp
shl
loope
push
lea
popa
lods
aaa
pushf
inc
adc
test
add
pop
cli
lahf
shr
sar
pop
jge
cmp
mov
ror
sub
aas
mov
movs
hlt
stc
cdq
sbb
xor
xchg
stos
adc
dec
dec
dec
outs
dec
lock
je
mov
mov
mov
in
jmp
rcr
sbb
mov
push
pop
mov
and
outs
inc
jnp
inc
mov
mov
add
and
test
xor
cmps
dec
push
jmp
mov
jnp
repz
sbb
jge
xlat
sub
retf
mov
xchg
aad
add
sbb
jnp
int
test
dec
sub
shr
aam
fidivr
jp
or
shr
inc
mov
cmp
sub
xchg
fiadd
adc
aaa
add
cmps
jmp
dec
icebp
fwait
xlat
pop
jne
mov
push
mov
retf
iret
shl
scas
loop
adc
add
mov
icebp
fbld
add
sub
je
ror
inc
bound
ror
rol
clc
sti
imul
sub
ds
and
xchg
and
jle
into
mov
icebp
jge
mov
shr
xchg
inc
add
and
sbb
xor
mov
cmp
dec
aam
adc
outs
mov
cs
sub
inc
movs
sub
jge
scas
inc
bound
pop
add
es
retf
(bad)
test
push
out
pushf
xchg
sti
mov
out
loop
dec
in
add
and
mov
push
xchg
jg
test
mov
dec
jl
xor
pushw
(bad)
data16
pop
cmp
sub
cmp
xchg
cmp
and
loopne
clc
pop
retf
lahf
test
cs
and
arpl
outs
add
sbb
xchg
jbe
retf
stc
mov
sub
cmp
stc
or
sub
stos
push
imul
int3
iret
xor
ins
sti
rcr
call
xchg
cld
push
in
mov
jg
sbb
fcom
nop
dec
jge
cmp
cs
fsubr
sar
ret
lea
dec
xchg
xchg
scas
jno
mov
mov
pusha
or
inc
fisttp
ds
mov
or
fld
loopne
pushf
dec
mov
imul
es
cmp
and
aaa
and
fild
cmp
nop
jae
retf
enter
sub
pop
xor
mov
adc
stos
fwait
int3
push
pop
scas
inc
push
push
mov
rol
call
and
ins
dec
add
or
pop
lods
adc
inc
int
mov
and
and
imul
mov
ss
cmps
test
fisub
lods
lock
(bad)
popf
ja
jns
inc
into
jno
shl
pop
aaa
sub
or
mov
sbb
jae
xchg
add
inc
cs
pop
jge
sub
pop
pop
sbb
inc
adc
jl
and
out
cmp
call
cli
sqrtps
arpl
clc
loopne
repz
sbb
or
and
sti
popa
iret
and
fwait
add
cmps
xchg
mov
in
or
cld
repz
or
or
jg
mov
sub
mov
sbb
mov
icebp
sub
stc
and
retf
jns
aam
dec
jge
xchg
push
mov
inc
loope
jo
push
cmp
xchg
outs
stc
les
scas
jne
fs
ins
int3
push
adc
pop
jmp
daa
adc
inc
fwait
cdq
xchg
sbb
cmp
mov
mov
loope
mov
sub
inc
or
rol
shr
out
jne
add
and
push
popa
jno
jbe
iret
add
loop
fcmovne
ret
jmp
sub
and
pop
into
mov
fwait
pop
out
sbb
sbb
cmps
and
sahf
or
lods
cmp
and
cdq
pushf
mov
in
push
hlt
lea
fild
pop
and
sub
pop
sbb
pop
aaa
in
mov
fsub
in
and
out
pop
or
pop
out
xchg
jg
hlt
aam
cmp
xor
(bad)
arpl
sub
psubw
dec
sbb
adc
popf
jge
or
push
popf
push
pusha
in
adc
push
dec
mov
and
xchg
fidivr
cmp
(bad)
scas
aaa
repnz
stos
dec
sub
mov
test
inc
stos
mov
mov
dec
mov
pop
pop
xor
push
cmp
adc
cdq
add
add
sbb
ja
ret
fwait
adc
icebp
ficom
fistp
leave
xchg
dec
hlt
lock
xchg
in
xchg
fistp
and
and
push
add
(bad)
shl
adc
clc
add
test
test
or
mov
jmp
mov
jp
mov
or
outs
sub
sbb
pop
jl
mov
call
sahf
xchg
sbb
mov
aaa
test
rol
dec
movs
mov
xchg
and
shr
push
sbb
mov
rcl
sub
mov
addr16
sbb
jnp
into
clc
mov
outs
scas
outs
cmp
mov
ret
jecxz
enter
push
pop
pushf
ja
in
adc
bound
imul
adc
cli
adc
push
sbb
or
loopne
sbb
repz
dec
cdq
rcl
movs
jnp
jns
cmp
daa
xchg
sub
adc
push
rcl
jmp
cmp
add
sbb
pop
pop
stos
and
adc
daa
xchg
jmp
xor
outs
xor
rcr
rol
mov
pop
sahf
dec
out
mov
int3
pop
ins
arpl
dec
jns
(bad)
imul
mov
aad
fstp
mov
loop
lahf
jmp
mov
or
xor
xchg
dec
ror
mov
imul
jbe
sbb
(bad)
dec
sahf
jmp
stos
sub
(bad)
sbb
inc
addr16
add
movs
add
test
mov
xchg
(bad)
int
or
cmp
fild
aas
ret
mov
sub
jl
lock
jg
scas
pusha
out
pop
jbe
jo
dec
stos
aas
retf
cdq
lods
xor
aaa
dec
mov
push
aam
mov
aas
jae
test
or
cmp
inc
xchg
retf
das
dec
(bad)
xchg
pusha
xor
mov
adc
iret
mov
mov
popf
dec
sbb
frstor
xchg
xor
out
jnp
movs
xchg
mov
add
adc
int3
lods
adc
test
rcr
xor
xor
push
repnz
in
jno
sub
aas
cmp
arpl
test
cmps
xchg
xchg
aaa
clc
mov
or
dec
jl
shr
popf
jno
imul
outs
pop
ds
jbe
mov
jbe
dec
test
imul
xchg
and
adc
adc
adc
hlt
pop
fs
xor
ins
mov
pop
pusha
inc
movs
div
clc
push
or
ficomp
pop
push
mov
or
pop
adc
es
xor
imul
clc
jbe
js
(bad)
(bad)
jl
adc
sar
int
sub
sbb
test
leave
mov
jg
hlt
and
mov
sahf
mov
div
add
and
xchg
lods
push
push
push
mov
daa
popf
fisttp
and
int3
adc
cli
mov
mov
aam
fwait
dec
sbb
mov
cmps
mov
cmc
sub
mov
sbb
dec
loope
mov
in
aas
pop
dec
retf
xchg
dec
mov
mov
cld
and
test
mov
js
mov
adc
or
sub
mov
sub
stos
pop
sub
lock
stos
(bad)
mov
xchg
daa
sbb
xchg
test
sub
in
jge
push
je
add
jmp
bound
mov
sbb
pop
jae
jb
repz
adc
adc
pop
and
dec
xor
test
aad
test
add
ins
scas
fs
sbb
mov
xchg
cmps
fld
js
movs
xchg
and
mov
(bad)
push
aad
or
xchg
inc
adc
stos
in
xor
or
sub
ucomiss
hlt
movs
sbb
cmc
out
xchg
pop
mov
mov
xchg
outs
sub
aas
popa
mov
lea
cmp
int
mov
out
stos
cmp
inc
jae
sbb
outs
or
xchg
bound
mov
pop
gs
loope
fisubr
add
pop
scas
data16
push
mov
scas
call
mov
popa
push
inc
sub
je
outs
sub
out
in
pop
shl
mov
fnstcw
push
leave
xlat
xor
cmps
and
xor
dec
and
fistp
mov
test
jae
mov
or
jecxz
cmovp
ss
adc
pop
xchg
push
mov
push
jnp
(bad)
call
xor
adc
test
(bad)
mov
sub
mov
and
outs
xor
sub
mov
and
idiv
adc
call
add
(bad)
idiv
pop
sbb
dec
aad
add
test
push
mov
dec
out
push
fidiv
cmp
or
xor
out
inc
mov
rcr
pop
sbb
scas
movs
lahf
imul
(bad)
sub
shl
setns
push
ss
inc
sti
pop
inc
dec
js
cwde
js
cmc
popa
outs
retf
add
sbb
xor
in
lock
sahf
mov
int3
pop
pop
(bad)
xor
push
mov
enter
retf
inc
mov
fstp
into
or
loopne
push
push
add
pop
push
fiadd
mov
(bad)
shl
out
rcr
hlt
lea
cmps
imul
and
(bad)
sar
call
cs
xchg
inc
cmc
or
into
aad
push
jmp
mov
ret
xchg
fwait
push
push
into
out
mov
fldlg2
cmp
mov
clc
sub
cdq
loopne
vshufpd
xor
repnz
inc
shr
lds
ins
push
lock
and
mov
push
inc
rcr
pop
jecxz
dec
ss
mov
cmc
mov
ret
gs
jbe
xchg
xchg
xchg
xchg
out
pop
and
hlt
popa
ret
gs
adc
jns
das
repnz
mov
es
adc
xchg
nop
cmp
mov
(bad)
gs
adc
call
ss
test
cmp
or
in
pop
push
cmp
cli
mov
int
mov
mov
xor
loope
pop
xchg
mov
inc
out
jle
dec
out
add
mov
add
pop
les
mov
mov
cs
jns
or
jbe
xchg
cmp
xchg
pusha
nop
mov
jp
sbb
jbe
in
popf
imul
xor
dec
mov
bound
(bad)
in
loop
inc
inc
repz
sbb
sbb
mov
push
xchg
cmp
pop
dec
int
jae
mov
(bad)
iret
out
dec
ss
mov
xchg
mov
pop
and
inc
loope
cmps
add
das
and
in
push
inc
cli
enter
sbb
inc
jp
leave
test
inc
fimul
ret
stos
xchg
dec
sub
jg
mov
xchg
stos
stc
jg
jmp
and
inc
loope
loopne
mov
pushf
cmps
xchg
push
in
xchg
jb
lods
lods
pop
mov
mov
mov
inc
imul
(bad)
dec
ret
and
pop
cmc
fprem1
std
jmp
cmp
xchg
pop
mov
dec
push
sub
or
push
call
mov
movs
sbb
pop
ins
mov
in
sub
aad
xchg
std
cmp
add
adc
mov
int
daa
ja
sub
mov
outs
cld
and
pushf
mov
push
push
jp
cli
and
gs
adc
hlt
hlt
test
cmp
mov
xor
ds
in
pushf
(bad)
sahf
mov
jmp
mov
push
stc
nop
mov
test
push
fisubr
aam
mov
retf
sub
xchg
idiv
sub
fstp
inc
movs
adc
dec
jg
inc
adc
xchg
xchg
call
mov
pop
lds
(bad)
push
popf
push
push
ins
pusha
std
cmp
movs
mov
dec
mov
cmp
cmp
mov
fdiv
jmp
add
mov
mov
cmp
xor
xchg
inc
mov
pop
xchg
sahf
xchg
and
enter
std
lds
enter
les
mov
mov
jno
rcr
pop
jo
inc
mov
das
add
(bad)
add
pop
jne
or
int
je
and
xor
imul
test
repnz
imul
push
and
movs
and
jne
loopne
int3
and
ds
jg
sahf
push
mov
(bad)
jmp
xchg
out
add
adc
inc
xor
xchg
push
xchg
rcl
or
mov
jmp
add
pop
dec
es
mov
mov
fwait
pop
arpl
lds
mov
outs
push
push
and
shr
retf
(bad)
(bad)
lea
(bad)
addr16
idiv
or
sti
dec
int
fldenv
mov
jne
pop
sbb
je
ds
ins
in
test
jle
and
add
ins
push
test
stos
arpl
inc
xor
pusha
je
push
adc
clc
call
retf
mov
sbb
pop
push
sar
in
pusha
jnp
dec
mov
add
or
imul
and
xor
cmps
mov
imul
ins
adc
sahf
inc
xor
or
push
push
cmp
xchg
sbb
mov
int3
cmp
mov
mov
mov
rcl
fsub
test
retf
add
dec
inc
xchg
sahf
add
sbb
dec
dec
leave
loopne
push
inc
mov
inc
cwde
outs
xchg
cwde
fwait
inc
pop
jg
inc
jbe
jae
push
retf
cmp
out
ds
add
sub
or
jno
rcr
xor
ret
out
push
mov
out
mov
cmp
push
ins
cmp
inc
mov
mov
mov
iret
push
cld
(bad)
aas
push
dec
jg
mov
fist
inc
sti
push
xor
shl
call
movs
or
xor
add
aam
pushf
not
cwde
arpl
and
outs
cmps
adc
pop
in
pop
mov
sbb
sbb
out
pop
jmp
and
lds
add
cmp
es
mov
in
pop
out
pop
scas
xchg
xchg
xchg
push
mov
imul
push
adc
jmp
fisttp
in
outs
mov
and
loopne
xchg
xchg
das
hlt
pop
cmc
out
fisubr
(bad)
aam
cmp
outs
retf
add
push
outs
sub
pop
push
in
outs
mov
outs
les
pop
jge
rcr
add
inc
pop
push
gs
out
ror
pop
cmps
test
xor
stos
pushf
retf
sbb
lea
sub
mov
je
pop
cs
pop
pop
(bad)
push
dec
loope
retf
jecxz
ss
in
ins
jno
jne
mov
inc
pop
retf
ins
or
fnstcw
in
ins
sbb
inc
aaa
test
jmp
in
int
pushf
jo
dec
inc
xor
popa
fmul
mov
dec
cmps
addr16
xor
inc
mov
retf
in
cmp
mov
scas
pop
inc
cmps
mov
inc
adc
fmul
push
cmp
popf
movs
jae
push
das
(bad)
js
add
jg
retf
les
inc
jge
add
sahf
and
pop
in
scas
sar
or
or
clc
push
adc
ficom
(bad)
mov
push
mov
out
and
or
mul
dec
mov
dec
in
sub
xchg
push
outs
mov
imul
xchg
cmp
ror
(bad)
pop
or
and
jl
imul
dec
cmps
mov
sub
popf
cli
mov
(bad)
cld
or
sbb
mov
xchg
call
(bad)
cld
call
mov
pop
cmp
rcr
scas
sub
int
mov
push
jmp
stc
xor
test
shr
pop
outs
sbb
xchg
mov
shr
outs
or
jmp
sub
stc
mov
inc
lahf
ins
enter
fisub
mov
ins
xor
mov
inc
dec
fcomp
push
push
jns
out
cmps
adc
adc
js
and
and
call
into
jo
sbb
aam
mov
xor
test
cld
dec
xor
sbb
test
in
or
sub
lock
out
popa
ja
inc
aam
iret
mov
ds
cmps
or
jno
outs
stos
cli
arpl
push
pmuludq
addr16
push
jmp
mov
lods
pop
shr
sbb
iret
lds
sub
push
pusha
bound
ror
or
jne
call
sbb
inc
inc
jge
mov
outs
div
ja
nop
mov
fdiv
cmp
mov
mov
fisubr
jmp
mov
adc
mov
jbe
stc
pop
sbb
fldcw
pop
push
sbb
fisttp
mov
mov
jb
das
sbb
inc
ss
and
icebp
(bad)
pop
cs
ror
ins
xlat
les
adc
std
in
and
gs
jb
pop
call
jecxz
or
out
iret
jle
pop
sub
adc
jb
test
mov
cmps
data16
push
fild
cmp
and
adc
popf
aas
mov
mov
popf
fistp
sub
add
xchg
cmp
cmp
idiv
sub
arpl
cli
aas
jmp
mov
xchg
cwde
shl
add
nop
push
retf
dec
pop
jne
and
lea
xor
adc
(bad)
mov
push
jo
cmp
pop
jp
mov
je
push
push
push
leave
add
or
call
and
mov
inc
into
imul
or
mov
mov
cmp
and
neg
cli
xchg
xchg
out
pop
jp
and
nop
push
leave
push
movs
push
pop
jae
xchg
ins
sbb
mov
pop
and
sbb
cmp
add
jl
and
mov
ror
retf
push
xchg
gs
cmp
jg
daa
jb
fdiv
pushf
pop
int
adc
mov
or
mov
sub
dec
mov
dec
jo
rcl
imul
sub
(bad)
mov
cmps
xor
(bad)
lods
dec
mov
aas
mov
movs
mov
fld
loop
sub
inc
sar
ins
scas
sub
daa
mov
cmp
(bad)
sub
outs
sbb
mov
push
push
sbb
out
adc
repz
dec
into
ror
jae
xchg
jne
pop
out
xor
jne
sub
xor
jp
rcl
jbe
mov
mov
jecxz
sahf
out
lea
aas
mov
sub
cld
push
fs
imul
push
adc
je
mov
adc
icebp
fisubr
fst
scas
addr16
ror
mov
popf
outs
clc
pop
inc
and
fsub
cmp
frstor
pushf
mov
loop
dec
pusha
nop
and
push
sbb
and
or
cmps
and
fidiv
aaa
bound
sbb
cmps
mov
mov
call
jno
jp
dec
lods
jne
sub
add
cs
xlat
cwde
sbb
push
ins
ror
rol
hlt
(bad)
mov
stos
not
pop
fxtract
add
pop
push
push
test
inc
xor
add
or
add
into
ficomp
fdivrp
data16
mov
ret
sbb
adc
cmc
pop
push
dec
xchg
clc
das
adc
push
push
xor
jp
out
ret
fs
mov
stos
ret
lahf
loope
rcr
cmp
cmp
pop
push
clc
mov
ret
cmp
scas
jne
add
mov
mov
mov
idiv
jae
stos
push
cli
mov
mov
je
xor
mov
push
jle
lock
rcl
jle
cmc
pop
inc
stos
stos
cdq
mov
pop
jne
or
mov
push
bound
push
pop
inc
cmp
add
enter
das
dec
cmp
idiv
test
out
mov
sub
retf
ret
inc
fsub
cmps
int3
pusha
fwait
loopne
jecxz
or
or
ret
outs
cmc
sub
stos
(bad)
push
loop
mov
or
and
and
mov
sub
xchg
or
push
sbb
test
sub
daa
repnz
into
adc
mov
mov
xor
retf
mov
or
mov
pusha
and
jns
mov
mov
out
sar
sbb
sbb
inc
shl
in
sub
jge
hlt
fmul
xchg
push
jae
cmp
or
lds
cmove
jmp
popa
hlt
pusha
jg
enter
pop
mov
fisub
pushf
mov
sbb
lahf
std
fnstcw
jns
mov
and
daa
outs
or
ret
mov
dec
push
shl
jp
or
mov
push
xlat
stos
pop
arpl
or
xor
jmp
ja
cmps
sbb
pop
daa
outs
adc
mov
in
lock
int3
add
fsub
stc
leave
mov
jae
data16
jno
gs
repz
mov
or
test
int3
add
dec
int
cld
adc
add
aam
sahf
mov
xor
or
cmp
mov
and
push
movs
iret
xlat
ret
fistp
xchg
(bad)
out
fcom
mov
add
(bad)
mov
xchg
aas
jae
inc
rol
shl
je
popa
std
sub
aas
retf
int3
call
imul
mov
repnz
div
das
sub
adc
adc
cld
pusha
xchg
push
repz
rcr
(bad)
push
cli
nop
inc
rol
fwait
pushf
imul
adc
test
scas
fs
dec
std
mov
(bad)
iret
sbb
ror
push
cmp
pusha
out
ret
(bad)
mov
push
pop
test
cdq
jno
mov
lods
dec
add
adc
enter
mov
inc
aaa
mov
dec
jmp
lahf
inc
popa
push
mov
punpcklbw
and
outs
lock
inc
mov
out
dec
fist
adc
ror
or
mov
loop
stos
adc
xor
iret
pop
cmp
xor
test
loop
mov
xor
sbb
jns
out
fdiv
jo
mov
adc
repnz
int3
adc
nop
lods
leave
xchg
adc
mov
sub
xor
cwde
adc
push
test
or
and
jmp
dec
popa
int
push
mov
add
dec
sub
dec
mov
out
sub
es
scas
dec
pop
sub
rcl
mov
adc
cmp
std
(bad)
pop
push
and
inc
cmp
ror
jbe
lds
sbb
and
mov
js
inc
iret
pop
inc
pop
xchg
fcmovnu
aaa
ja
push
call
ffreep
rcl
jl
(bad)
iret
pusha
push
add
inc
mov
es
popf
int
cmp
jno
push
cmps
cmp
pcmpeqd
mov
scas
jmp
sbb
or
xchg
mov
jmp
inc
fcmovnb
sbb
das
mov
sbb
sub
push
(bad)
pop
shl
daa
xor
mov
pushf
rol
add
mov
lock
pop
ror
xchg
retf
xchg
sahf
inc
lea
ins
sbb
lock
setge
call
sti
call
test
or
imul
out
jb
add
mov
(bad)
hlt
mov
das
cmps
mov
movs
push
in
jmp
mov
and
jae
inc
pop
jne
call
pop
popa
mov
movs
push
cmp
push
xchg
pop
xor
pop
xor
imul
data16
inc
jae
jl
inc
mov
cmp
sar
jl
add
data16
loopne
xchg
push
sti
sub
dec
jae
gs
jp
cmp
(bad)
int3
adc
scas
cmc
add
cmp
and
adc
push
dec
cmp
sahf
jmp
ror
retf
adc
push
sti
mov
ins
(bad)
dec
mov
dec
adc
mov
std
lock
int
sub
sub
mov
jle
and
nop
jl
in
sbb
jmp
push
imul
push
push
mov
add
dec
mov
mov
pop
mov
or
dec
sub
sahf
sbb
cmp
(bad)
mov
int3
leave
scas
mov
call
jle
mov
pop
cmp
mov
rcl
fdivr
lock
adc
mov
add
and
push
jl
sub
aad
loope
(bad)
pop
and
push
add
xor
and
lods
in
dec
(bad)
cmp
sub
fnstenv
fisub
adc
mov
push
aad
and
rcl
cmps
lds
push
out
and
cmc
pop
inc
enter
scas
je
inc
xor
pop
and
clc
imul
cmp
fadd
mov
push
mov
sbb
aaa
jle
(bad)
fcmovnb
fcom
adc
jg
inc
sbb
cmp
inc
in
xor
mov
(bad)
push
inc
js
adc
std
and
les
pop
mov
or
mov
push
enter
or
mov
mov
xchg
xchg
inc
push
mov
xchg
mov
test
aas
cs
ss
mov
arpl
sub
es
cwde
jecxz
inc
add
or
cmp
cli
outs
imul
sahf
pop
adc
and
adc
push
mov
test
repnz
inc
call
cs
in
mov
sbb
or
or
inc
xchg
cli
cmp
jne
or
out
loop
xchg
cld
mov
push
pop
and
movs
cmp
and
lods
gs
cmp
xchg
dec
dec
dec
sub
inc
out
jbe
inc
mov
lods
mov
aaa
les
xchg
and
mov
mov
(bad)
mov
jecxz
cs
gs
and
adc
movs
popf
add
ret
call
and
or
xor
rcl
sbb
or
cmp
cs
adc
xor
pop
sti
or
sti
mov
push
mov
fdivr
add
test
iret
ss
stos
mov
pop
xor
pusha
out
mov
push
ins
call
lahf
(bad)
fild
fwait
mov
out
xchg
outs
cwde
adc
cli
inc
dec
inc
in
cdq
ins
sub
movs
in
ins
pop
bound
aaa
fadd
xor
test
leave
push
jl
sbb
imul
scas
and
sbb
dec
popf
ja
in
imul
push
xlat
jbe
outs
dec
dec
xor
jnp
jae
ret
sub
push
call
arpl
mov
fucomp
out
xor
popa
push
cmp
mov
mov
dec
scas
lods
push
jne
mov
popa
inc
sbb
das
repnz
rcr
das
sbb
mov
jae
pop
arpl
add
pop
fldenv
xor
daa
psubusb
mov
fnstcw
lahf
adc
mov
(bad)
ss
sub
pop
fisubr
xchg
jnp
adc
mov
pop
mov
lods
imul
jne
cdq
add
mov
xchg
push
pop
and
xor
call
pop
pop
inc
hlt
repz
loope
sbb
mov
xlat
fsubr
paddd
retf
and
inc
xor
out
lahf
push
lods
cmp
out
mov
movs
loope
clc
pop
fs
rcl
jecxz
call
sbb
(bad)
std
arpl
inc
fwait
daa
adc
pop
daa
pop
push
sahf
(bad)
xchg
movs
scas
icebp
clc
and
loopne
test
mov
ins
mov
sbb
add
jnp
cmps
mov
enter
pop
dec
jl
jnp
add
sbb
cmp
add
fsubr
adc
inc
mov
ins
mov
std
jl
cld
pop
xchg
xor
lahf
cwde
(bad)
jge
and
push
(bad)
mov
or
(bad)
pop
aam
mov
stos
ret
popa
dec
sbb
aas
mov
lock
pop
inc
xchg
arpl
inc
mov
into
inc
inc
mov
pop
call
imul
cdq
push
fisttp
dec
nop
push
pop
dec
cld
or
sub
leave
add
mov
loop
mov
mov
adc
or
cmp
mov
inc
shr
aaa
jnp
mov
cmp
repz
mov
pushf
fcomp
jle
inc
mov
pop
dec
int3
popa
jg
or
mov
rol
je
sbb
enter
pop
test
ins
sub
lahf
or
jmp
jg
adc
sub
jo
sbb
out
pop
mov
mov
mov
jge
and
je
add
jle
cmp
retf
mov
out
inc
sub
imul
retf
leave
mov
or
mov
xchg
jmp
add
inc
jne
scas
(bad)
dec
mov
loopne
or
mov
loopne
les
jle
in
movs
lods
(bad)
jnp
test
ror
mov
cmps
adc
xchg
std
jl
iret
mov
mov
ss
sti
mov
jge
jb
add
mov
sbb
jns
loopne
mov
cld
cwde
or
push
retf
ds
cld
pop
ja
ret
add
mov
mov
ja
cmc
push
jnp
movs
lods
fdiv
mov
popa
addr16
je
std
adc
lahf
adc
lss
scas
fisttp
push
xchg
sbb
sbb
iret
mov
idiv
sub
fisttp
add
inc
mov
pop
inc
fmul
or
mov
outs
xor
test
mov
pop
xor
ret
popf
popa
pop
jle
aas
lea
mov
scas
pop
loopne
bsf
sub
icebp
sar
cli
xor
sbb
mov
popa
mov
mov
int
nop
jl
nop
mov
loope
cmp
test
lahf
xchg
push
out
outs
jmp
mov
mov
inc
data16
int
xor
mov
cmp
(bad)
mov
call
cdq
adc
adc
sub
aad
stos
aam
test
jecxz
dec
jae
sti
retf
sub
inc
or
icebp
fcom
sbb
div
lahf
xbegin
aaa
ins
pop
cmp
pop
fidivr
int3
imul
xchg
push
cmc
loopne
dec
pushf
xchg
loopne
aas
lods
lea
or
loope
sbb
or
mov
cmp
xlat
jge
fxch
xchg
xor
popa
push
(bad)
fucomip
push
lods
call
stos
(bad)
push
movs
inc
(bad)
imul
mov
xor
sbb
gs
out
mov
add
arpl
rcr
xchg
dec
pop
dec
sub
shr
gs
add
adc
jne
fld
push
xchg
(bad)
mov
mov
and
movs
inc
dec
mov
inc
in
mov
cmc
rcr
loop
cmps
rcr
lahf
rol
mov
push
dec
cmc
or
pop
or
jl
and
mov
out
push
arpl
cmp
(bad)
dec
je
add
add
xor
add
mov
mov
fwait
jmp
mov
fnstenv
dec
mov
or
inc
mov
sar
push
jo
and
lds
hlt
(bad)
aam
inc
push
mov
inc
test
cmp
aam
bnd
ja
clc
pop
test
iret
and
mov
or
add
jnp
inc
aam
jmp
inc
fld
in
jecxz
cmp
or
mov
add
fmul
sub
and
pop
or
adc
add
sub
xchg
adc
(bad)
jmp
sbb
ror
or
mov
mov
dec
and
in
cld
and
or
lods
sbb
aaa
mov
sub
xchg
xchg
call
mov
pop
xchg
adc
retf
out
ins
and
xor
adc
retf
mov
mov
pop
into
(bad)
cmps
add
mov
inc
mov
sbb
mov
xchg
mov
cdq
add
push
push
js
popf
push
std
mov
pop
clc
lods
xlat
and
movs
in
(bad)
mov
inc
das
pusha
mov
nop
jno
test
inc
gs
bound
pop
mov
std
(bad)
fucom
or
loop
(bad)
xor
or
in
jnp
mov
(bad)
in
mov
mov
or
neg
xchg
call
sub
sub
(bad)
adc
out
lds
fbstp
cmp
cmps
lds
cs
nop
cdq
jno
inc
mov
pop
mov
ss
cld
xor
pop
jecxz
js
adc
mov
add
pop
mov
mov
push
add
inc
dec
mov
out
sbb
lahf
jmp
add
cld
add
sub
xchg
test
mov
pop
aaa
fucomip
mov
iret
mov
mov
mov
mov
in
not
fnstenv
int
inc
lds
and
leave
in
xor
nop
jo
or
sub
adc
xchg
scas
cmps
mov
in
dec
movs
jl
dec
sub
mov
and
push
jo
mov
pop
jmp
lods
loope
mov
cmp
mov
out
and
pop
jnp
adc
shr
or
jmp
sub
adc
mov
pop
mov
lods
lods
adc
cmc
add
pop
and
xchg
xor
test
pusha
ja
push
mov
and
mov
shr
dec
inc
retf
pop
xchg
mov
jle
push
les
inc
adc
mov
out
ja
jmp
adc
xlat
repz
cmp
call
jl
sub
mov
stos
push
add
xchg
cmps
or
mov
in
sbb
adc
fmul
pop
jmp
or
adc
or
cmp
or
and
xor
dec
push
test
popa
push
sbb
sub
loope
inc
jnp
mov
ins
std
dec
(bad)
push
jae
inc
call
shl
ret
or
call
mov
fs
jecxz
sti
pop
repz
xlat
push
adc
and
in
in
xor
nop
push
lock
aas
push
sbb
scas
rcr
pop
cmp
mov
pop
test
clc
xor
cmps
mov
and
ror
daa
fs
(bad)
sbb
pop
daa
fincstp
(bad)
dec
pop
pop
clc
xlat
mov
adc
jl
jae
jae
int
in
in
call
inc
cmp
fs
es
sub
pop
stc
imul
pop
repnz
inc
dec
xchg
sbb
and
adc
mov
add
and
mov
in
xor
ja
and
pop
or
movs
push
in
xchg
pop
enter
mov
ror
push
adc
fcomp
push
fdiv
xor
pop
sub
and
jg
lock
adc
inc
fdivrp
jo
push
mov
push
ds
push
je
scas
fild
fldenv
sar
movs
jmp
mov
inc
test
ds
jo
jge
mov
ret
mov
dec
loopne
mov
aam
mov
jge
or
enter
imul
sbb
fwait
test
fdivr
addr16
scas
xor
xor
push
push
pop
mov
and
xlat
or
das
jbe
xchg
(bad)
out
int3
and
inc
dec
dec
push
std
in
ficomp
(bad)
sbb
lea
push
adc
sub
and
mov
xchg
sub
push
in
xchg
sahf
lds
les
lods
mov
jecxz
in
leave
aad
and
xchg
addr16
xlat
xchg
mov
lds
jl
push
cmp
mov
mov
dec
mov
sub
jo
cmps
ret
into
(bad)
lock
or
pop
jmp
repnz
dec
xlat
data16
jge
test
jl
lock
add
jae
in
xlat
arpl
xor
out
aaa
or
inc
cmp
sbb
loopne
aaa
call
mov
pop
xor
push
sub
inc
xor
sbb
sub
cwde
mov
dec
jbe
out
and
pusha
mov
sbb
ja
adc
sub
mov
and
add
dec
inc
mov
cmp
xor
mov
mov
std
int3
sbb
xor
and
inc
or
cmp
mov
sub
scas
popf
push
and
pop
push
mov
mov
push
pop
mov
out
xor
dec
cdq
cmp
outs
mov
dec
shr
adc
xor
sahf
xor
jmp
outs
mov
inc
movs
shr
inc
or
dec
cmps
mov
xchg
jbe
mov
arpl
xor
ja
cmp
mov
cmp
sti
fst
or
fidivr
stos
fs
xchg
mov
dec
lods
jmp
cmp
mov
mov
cmps
div
sbb
cmps
jae
into
inc
imul
jge
pop
icebp
clc
in
int3
enter
push
lds
add
xor
xchg
jl
enter
test
add
out
stc
ds
jne
loopne
xchg
movs
sub
pop
sub
cmp
mov
jo
mov
js
clc
outs
jecxz
fnstenv
(bad)
push
div
jmp
pop
popa
mov
or
mov
(bad)
(bad)
repnz
cdq
pushf
fisttp
fisttp
in
test
into
(bad)
jno
(bad)
out
push
repz
or
cdq
jne
add
hlt
cmp
push
clc
addr16
clc
call
xchg
aaa
addr16
movs
je
cmp
stos
(bad)
movs
xor
int
jmp
and
add
pop
aam
mov
mov
xor
popa
xchg
dec
xor
sub
add
xlat
cmps
mov
jb
jns
aaa
add
mov
cmps
sub
sti
scas
pop
dec
mov
mov
inc
imul
mov
adc
stos
sbb
outs
ja
mov
pop
rcl
jb
repnz
pop
leave
int3
pop
pusha
jae
pop
xlat
(bad)
fist
jnp
mul
(bad)
ficomp
ret
jcxz
out
mov
cld
mov
cmp
dec
jl
shr
dec
dec
cmp
inc
in
sbb
adc
stos
xor
mov
fucomi
scas
add
pavgw
outs
push
pop
pushf
push
aad
data16
int3
push
or
xor
inc
or
ins
jae
jno
(bad)
sub
adc
div
dec
sar
hlt
jae
mov
fsubr
test
jno
(bad)
ret
xor
int
aad
dec
inc
mov
xchg
jmp
sub
inc
test
mov
sbb
and
or
pop
pop
inc
inc
mov
fnstsw
lds
retf
cmp
xor
out
mov
int3
movs
call
jns
and
push
dec
test
pop
lahf
dec
add
cmp
js
rcl
ins
mov
pop
lods
out
jb
in
mov
mov
inc
push
cmp
sbb
gs
push
jno
mov
jge
retf
ins
adc
or
cli
call
sbb
rcl
mov
stos
xchg
(bad)
xor
and
popa
sahf
ins
cmps
mov
adc
stc
and
adc
std
in
aam
mov
push
bound
movs
and
outs
imul
es
jb
(bad)
mov
dec
pop
pop
int3
inc
push
cdq
push
mov
jp
push
ss
mov
out
int
xchg
repnz
xchg
pop
dec
mov
xchg
inc
jecxz
das
ja
adc
xchg
jge
rcr
rcr
cdq
xor
or
pushf
(bad)
dec
cmps
sbb
inc
inc
jecxz
dec
add
push
push
xchg
pop
ror
cmp
mov
add
push
or
retf
jno
jmp
cli
rcl
push
xchg
xchg
cmp
hlt
test
mov
sub
pushf
xor
aam
wrmsr
jnp
aam
aam
push
adc
sbb
(bad)
int
icebp
jo
ja
call
sbb
sti
je
fst
sbb
imul
push
push
add
aam
sbb
ins
call
cmp
loopne
pop
ja
daa
dec
arpl
jecxz
mov
stos
retf
lods
je
in
pop
xor
push
add
pop
xchg
mov
pop
es
loope
dec
xor
ds
test
pushf
lods
enter
ficom
test
adc
lea
fcom
fwait
push
sbb
daa
test
pop
mov
inc
xchg
repz
mov
or
(bad)
cmp
push
ins
fiadd
jns
inc
jo
int
and
std
jmp
xor
and
mov
sbb
adc
adc
or
test
out
add
cld
jo
add
xchg
mov
push
xor
test
push
xchg
ficomp
movs
gs
pop
xlat
xchg
mov
cli
loopne
jg
push
sahf
jno
lds
xor
sbb
das
xor
push
mov
rep
mov
pop
sbb
mov
and
pop
dec
inc
retf
out
je
jmp
std
inc
mul
push
fcos
stos
add
test
mov
imul
xchg
and
xor
adc
jp
and
sbb
dec
std
pop
pop
or
pop
push
pop
fimul
xchg
jo
fucomi
pusha
push
add
inc
and
jl
stos
and
dec
ins
test
outs
lds
lds
jmp
push
inc
test
jmp
lods
int3
and
jp
jge
jg
pusha
sahf
test
ins
jecxz
mov
stc
js
jl
ja
sti
mov
stc
out
lahf
into
outs
mov
add
sub
arpl
(bad)
inc
xor
and
cdq
arpl
retf
repnz
sti
ins
outs
adc
cdq
shl
dec
push
nop
imul
sub
push
cmovl
std
sbb
lahf
arpl
loope
sar
mov
push
jb
xlat
mov
clc
idiv
loopne
mov
jle
inc
inc
enter
mov
adc
mov
dec
int3
rcr
xchg
sbb
sub
mov
mov
xchg
sub
bswap
call
js
int
inc
add
imul
dec
push
aas
lods
mov
dec
xchg
cmc
cmp
ss
pop
out
mov
add
cs
or
cmps
push
(bad)
ficom
jmp
inc
jecxz
(bad)
fdivr
dec
cdq
js
mov
imul
std
jge
cld
(bad)
mov
mov
dec
sti
xchg
mov
and
ins
imul
ud0
sar
mov
or
mov
arpl
retf
retf
pop
leave
inc
xor
out
dec
cli
push
adc
push
cmp
push
loope
adc
inc
xlat
repz
js
iret
loop
lods
jnp
mov
retf
push
stc
dec
xor
lods
pop
sbb
cli
aad
fs
and
leave
pop
jmp
addr16
cmps
lods
adc
jmp
push
pop
sti
jg
jge
pop
(bad)
push
and
add
int3
rcr
rcr
mov
mov
stc
dec
out
(bad)
cmp
loop
test
fs
iret
ret
sub
jp
std
stc
inc
ins
or
mov
pop
dec
sbb
stos
inc
push
dec
adc
nop
inc
adc
mov
jle
jge
xor
jge
push
push
pop
mov
adc
adc
ins
in
mov
jae
pop
jmp
push
xor
movs
xchg
(bad)
adc
gs
dec
je
stos
xchg
fadd
mov
int3
inc
xchg
std
or
sub
aaa
adc
imul
test
aas
cmp
(bad)
into
ins
jo
mov
or
inc
mov
and
xor
mov
aaa
int
jmp
xor
jo
jl
(bad)
neg
fisubr
es
fild
out
add
in
hlt
icebp
pop
jb
xchg
lods
sar
ror
and
gs
or
sbb
fidivr
movs
movs
jb
dec
or
out
int3
and
popf
movs
pushf
retf
sub
jbe
shr
xchg
pop
xchg
sahf
and
movs
dec
lea
fild
jmp
test
fptan
addr16
mov
je
mov
stc
mov
xor
mov
inc
in
scas
imul
cmps
pop
mov
cmp
dec
mov
xlat
popa
or
mov
mov
add
mov
dec
test
stc
pop
fwait
sbb
sbb
or
mov
das
inc
dec
popa
xlat
xor
sub
add
int3
xchg
push
push
jmp
push
or
movs
ins
pop
lods
dec
outs
dec
sbb
sub
fsubr
push
mov
stos
sbb
iret
call
xor
xor
lea
fs
jg
jne
cmps
mov
lods
mov
mov
fs
je
push
(bad)
ja
addr16
dec
lds
push
sbb
push
xor
lods
sbb
fcmove
mov
mov
ret
cmp
cli
cld
into
fnstenv
inc
fldcw
dec
jae
cmovl
int
xor
dec
cmp
test
sub
sub
jmp
or
cld
mov
jg
ins
adc
pop
movs
loope
cmc
sbb
ss
inc
inc
jg
push
adc
iret
mov
popf
push
sub
jmp
fs
mov
in
xor
jl
gs
or
sub
fadd
loopne
mov
test
nop
cs
cli
mov
adc
ret
inc
(bad)
jl
mov
iret
sub
ffreep
aas
mov
adc
data16
ret
scas
adc
cmps
inc
out
push
and
and
scas
sahf
clc
cmp
test
shl
mov
mul
scas
dec
repz
pop
xchg
repnz
mov
xor
mov
(bad)
xchg
and
jb
call
or
and
jo
enter
pop
leave
jge
jecxz
adc
jge
push
inc
aad
pop
jl
gs
pusha
dec
fucomi
fdivr
in
xor
push
sbb
jae
pop
(bad)
imul
xor
dec
pop
les
fnstenv
retf
dec
adc
hlt
push
movs
ret
fidiv
mov
pop
arpl
daa
in
dec
fcomp
inc
sbb
stos
mov
jle
pop
jmp
inc
shr
jecxz
xchg
imul
pushf
imul
rol
push
mov
pop
in
loopne
call
ins
out
jmp
mov
jecxz
rcr
std
fsubr
(bad)
call
inc
xchg
iret
push
cdq
fmul
fsub
data16
dec
dec
sti
adc
push
test
(bad)
daa
mov
xlat
xchg
data16
push
adc
mov
jne
jmp
push
xchg
lods
retf
std
mov
stos
cmps
pushf
sahf
sbb
iret
gs
fwait
or
xchg
xor
js
call
mov
xor
in
pop
into
outs
or
test
inc
cmp
call
pop
pushf
cmp
dec
jmp
rcr
movs
jnp
ss
int3
jp
clc
cmp
jo
int3
popa
mov
adc
push
lods
pop
repz
in
push
daa
not
cmp
pop
mov
xor
inc
dec
sbb
cli
dec
pusha
xor
inc
fwait
out
inc
sub
movs
mov
fnsave
sahf
xor
adc
int3
or
cli
and
js
iret
xor
bound
sub
mov
aas
enter
or
scas
sti
xchg
das
cmp
in
pop
push
cmp
loope
(bad)
ins
cmp
test
lods
jecxz
and
fdiv
sub
dec
inc
inc
xchg
pop
fimul
inc
ficomp
mov
jge
cwde
cs
loope
sbb
cmp
aas
adc
mov
adc
and
into
es
(bad)
xchg
int
sti
mov
(bad)
jge
enter
aaa
add
aaa
push
lods
dec
fldcw
gs
jne
and
nop
mov
js
mov
loope
dec
mov
lock
repz
fxch
push
shl
xchg
pop
sti
iret
ss
mov
push
cmc
add
mov
dec
add
mov
pop
rcl
sub
outs
(bad)
stos
lods
cmps
or
adc
sub
mov
mov
inc
xor
jnp
push
(bad)
pop
in
sub
jbe
cmp
adc
and
cmp
xchg
imul
outs
popa
push
pop
adc
pop
test
dec
or
das
sub
retf
nop
inc
mov
inc
adc
push
pop
dec
push
hlt
inc
out
loope
xchg
test
xchg
movs
movs
cmp
dec
lock
popf
daa
xchg
cmps
mov
push
sbb
xchg
in
push
lods
jl
es
mov
mov
push
test
cmc
add
cmp
adc
xchg
(bad)
repnz
and
mov
fwait
mov
mov
fs
push
ror
fdivr
cld
adc
xchg
mov
nop
push
jg
repnz
cmp
in
ja
outs
add
adc
sbb
push
mov
or
or
repz
das
xchg
inc
or
cwde
pop
clc
mov
adc
xor
(bad)
test
mov
pop
pop
int
mov
iret
scas
imul
mov
xor
out
inc
and
mov
push
sbb
inc
and
daa
inc
fisub
push
or
out
push
repz
and
mov
jge
or
inc
pushw
scas
jle
lahf
movs
fbstp
push
call
gs
js
sub
in
and
jno
(bad)
pop
jecxz
jne
popa
pop
dec
sbb
call
push
fdivr
add
xchg
sbb
fiadd
jle
aad
jge
pushf
(bad)
sub
add
xchg
arpl
repnz
cmp
sbb
mov
pop
mov
inc
adc
int3
in
xchg
mov
sbb
(bad)
leave
pop
push
xor
dec
sub
mov
push
imul
(bad)
cmp
popf
push
mov
inc
fisubr
xchg
add
add
test
jb
jl
jo
or
fistp
ret
ins
pop
jmp
sub
pop
int
cs
pop
rep
(bad)
jle
dec
add
scas
mov
pusha
ficomp
(bad)
fstp
cmp
adc
push
jmp
sbb
adc
repnz
adc
and
mov
mov
stc
rcl
cmp
(bad)
popa
pop
test
push
and
mov
shl
mov
xchg
arpl
jp
mov
inc
pusha
or
popa
sub
rol
and
pop
and
push
xchg
mov
das
pop
cmp
jno
adc
xchg
mov
xchg
mov
repnz
fmul
xor
test
outs
out
mov
lea
adc
and
cmps
into
and
push
mov
push
shl
jl
retf
repnz
retf
push
xlat
retf
jae
dec
mov
push
retf
test
add
loopne
loopne
icebp
jmp
add
faddp
ds
out
aad
ret
or
ret
xchg
aaa
pop
lock
push
stos
jmp
sub
fcom
jp
icebp
push
call
iret
adc
sbb
lods
and
popf
mov
scas
sub
ror
mov
mov
inc
shl
jmp
movs
adc
cld
jmp
outs
mov
aaa
pop
push
xchg
popa
int3
jecxz
add
jmp
xor
ins
mov
fld
icebp
mov
mov
pop
add
aad
dec
(bad)
sub
push
xchg
pop
stc
xchg
cli
or
out
push
arpl
adc
cmps
lock
and
add
fstp
icebp
cdq
icebp
mov
dec
inc
shr
arpl
test
adc
dec
in
jp
sbb
mov
mov
clc
jno
pusha
dec
fild
adc
das
pop
and
or
inc
addr16
das
test
movs
cmps
hlt
mov
std
cmps
sbb
inc
leave
lods
dec
je
mov
or
mov
mov
out
pop
cmp
and
mov
xor
fisub
mov
xor
(bad)
popf
and
popa
push
add
sbb
ins
inc
or
js
push
add
fs
xor
iret
pop
les
mov
movs
lahf
fwait
addr16
pop
push
inc
mov
or
mov
out
sub
retf
ret
dec
sub
or
pop
and
pop
pushf
ret
sbb
gs
pop
or
imul
cmp
cmp
jge
pop
pop
int3
lea
into
mov
stc
test
cmp
mov
lea
jge
mov
inc
push
mov
push
push
sbb
loop
mov
rcl
int3
test
movs
inc
and
cmp
arpl
cli
int3
push
pop
jo
outs
fbld
mov
mov
mov
retf
or
mov
pop
in
loope
xchg
hlt
js
xchg
sub
cmp
adc
mov
ja
cmps
aad
adc
xchg
(bad)
jp
push
adc
mov
or
jl
cwde
in
icebp
(bad)
fwait
cmp
imul
add
push
adc
xor
push
outs
xor
jmp
inc
popf
jecxz
dec
fistp
(bad)
arpl
or
xchg
aad
retf
inc
test
fnstsw
inc
xor
(bad)
pop
jae
stos
dec
mov
sbb
and
xor
mov
sbb
ret
(bad)
mov
ret
call
sub
sub
add
push
dec
fadd
ret
or
mov
pop
xor
mov
adc
addr16
inc
popf
or
dec
lahf
in
dec
out
cmp
cmp
mov
into
mov
into
dec
jns
add
idiv
dec
add
dec
(bad)
mov
or
test
sbb
scas
idiv
pop
cmc
sub
les
jmp
nop
ss
(bad)
inc
xor
sbb
cmp
pop
ret
mov
sti
xchg
or
push
add
pop
and
cwde
lahf
push
mov
callw
aas
sub
pop
fbstp
stc
pop
xor
jo
fld
and
mov
push
popa
push
push
inc
cmp
add
popf
jo
pop
jg
adc
ret
fs
mov
jle
in
outs
popf
and
xchg
shl
das
(bad)
scas
das
(bad)
test
sar
mov
jl
jns
pusha
fcmovb
adc
or
xor
leave
mov
push
es
rcl
xor
xor
or
jecxz
pushf
lods
call
adc
push
jnp
mov
sub
mov
push
outs
mov
cmp
sti
mov
(bad)
xchg
je
mov
call
loope
sub
imul
add
push
push
adc
jo
cmps
push
fadd
pop
mov
aad
retf
xchg
or
test
adc
bound
rcr
and
inc
sbb
add
mov
aad
add
pop
pop
adc
mov
test
pop
adc
jo
pop
push
push
loop
inc
lods
out
pop
rcl
movs
mov
jg
loop
xchg
retf
retf
cmc
add
fisub
mov
xchg
dec
dec
xchg
jbe
pop
daa
mov
adc
sbb
clc
aaa
aas
adc
sbb
xchg
ins
dec
aad
add
mov
add
mov
lahf
inc
mov
and
sub
fs
data16
or
xchg
mov
int3
mov
(bad)
jmp
ficom
adc
jne
test
ja
stos
je
jbe
dec
daa
or
cmp
div
cmc
mov
movs
outs
push
out
jo
lods
stos
std
popa
adc
and
push
mov
jmp
(bad)
(bad)
cmp
sbb
sti
aad
mov
push
mul
retf
pop
repz
hlt
fistp
mov
inc
stc
sub
test
pop
pop
pop
aam
test
mov
ds
jnp
gs
popf
inc
in
push
jbe
push
ja
jg
mov
faddp
pop
pop
sub
(bad)
mov
int3
or
sub
pop
fstp
jns
adc
aas
les
mov
cwde
scas
sbb
repz
mov
fcomp
(bad)
xchg
cmp
and
fcmove
(bad)
sbb
scas
shl
cdq
inc
addr16
xchg
jecxz
and
add
add
inc
daa
test
add
xchg
or
ds
jbe
test
pop
and
fsubr
add
push
das
data16
aas
and
adc
sbb
imul
adc
pushf
mov
push
mov
inc
test
mov
imul
lea
movs
repnz
xor
mov
xchg
mov
mov
mov
dec
cmp
or
cdq
popf
(bad)
mov
jae
mov
xor
out
ja
dec
imul
push
ss
pop
mov
inc
jmp
sbb
retf
mov
adc
retf
and
sub
aam
(bad)
ret
sbb
inc
jg
adc
push
mov
cmps
mov
pop
(bad)
cld
xor
std
add
jecxz
mov
or
int
enter
cmps
mov
pop
mov
stc
push
out
sub
jmp
cmp
cli
cmp
mov
adc
and
xchg
inc
imul
bound
dec
js
test
aas
mov
dec
or
fstp
add
add
movs
add
pop
push
mov
cmps
lahf
sar
inc
sub
icebp
and
fstp
cmp
or
iret
mov
repnz
jb
adc
mov
ins
call
jmp
outs
xchg
mov
pop
mov
repnz
aas
sub
imul
mov
add
jle
push
aas
clc
mov
mov
call
mov
mov
jne
add
repz
mov
sahf
(bad)
movs
inc
push
jo
rcr
and
fwait
cwde
lahf
mov
sub
sahf
mov
test
cmp
mov
xor
retf
int3
pop
inc
add
jmp
sub
push
mov
loope
or
mov
inc
add
sub
(bad)
lahf
call
inc
shl
gs
test
(bad)
xchg
mov
stos
and
xor
xor
dec
sub
jl
es
mov
jmp
add
rcr
add
enter
sub
inc
push
outs
ss
add
fwait
das
push
cmps
gs
jne
mov
ins
in
mov
movs
sbb
stos
dec
sub
add
xchg
shl
shl
mov
pushf
sahf
add
mov
xchg
fs
nop
cmp
je
cmp
out
pop
and
out
jmp
sbb
jge
xor
pop
xor
add
adc
idiv
push
cwde
rcr
outs
std
xacquire
push
push
sbb
cmp
jge
jecxz
repnz
ds
(bad)
leave
adc
jp
add
mov
and
jae
fsubr
push
test
dec
mov
sbb
mov
mov
pop
xchg
fwait
in
es
sub
dec
bound
test
xor
push
add
hlt
dec
mov
popf
movs
cmp
jnp
shl
repnz
je
add
mov
jmp
pop
jmp
add
call
xchg
xlat
rol
sub
fdiv
or
leave
push
mov
mov
xlat
jmp
in
mov
jmp
xchg
imul
mov
retf
loopne
pop
push
adc
push
loopne
lea
out
cmp
mov
(bad)
adc
mov
cmp
mov
jl
sbb
inc
jp
cwde
and
mov
aam
cld
or
xor
into
in
cld
ds
add
rcr
fwait
movs
jp
xchg
fstp
adc
lea
push
icebp
sbb
jp
mov
xchg
mov
cmps
shr
mov
add
cmp
mov
mov
fidiv
scas
ins
jmp
xor
mov
sbb
mov
lods
mov
dec
test
sahf
test
cmovge
pop
lock
mov
into
mov
shr
xchg
mov
(bad)
mov
(bad)
adc
aam
sbb
pushf
test
or
and
ja
loopne
int
mov
aaa
iret
dec
ficom
sub
pusha
cmps
push
xor
xor
push
shl
mov
js
arpl
inc
push
aam
ret
loopne
imul
xchg
dec
inc
call
sub
(bad)
push
jmp
rcr
in
icebp
mov
inc
ds
vcomisd
retf
clc
jb
xchg
cmps
xor
inc
mov
int
jb
es
adc
cmp
mov
hlt
sbb
adc
or
movs
sar
xchg
dec
loopne
fs
push
mov
xlat
out
nop
and
cmp
jl
sbb
rol
cmp
aas
mov
out
xchg
aad
pop
call
mov
xchg
ror
scas
ins
push
xchg
mov
sbb
cmp
movs
jb
stos
enter
out
call
pop
mov
movs
mul
scas
sub
mov
mov
cmp
jae
test
dec
js
add
cwde
imul
into
imul
jo
push
jl
scas
in
mov
ins
lahf
fwait
push
jg
jecxz
cmps
xchg
stos
or
dec
sub
sub
cmp
push
retf
jbe
and
jmp
add
aaa
mov
sbb
mov
jl
shl
pop
enter
xor
adc
adc
data16
out
or
repz
xlat
push
dec
xor
dec
pushf
add
jmp
pushf
or
dec
mov
adc
shl
ror
dec
les
and
mov
and
push
push
lahf
push
test
lods
retf
fwait
sbb
shr
inc
div
or
popa
pop
stos
stos
add
sub
(bad)
ja
rcr
not
shr
jge
xchg
cmp
es
es
adc
scas
in
mov
xchg
jge
mov
push
stos
mov
in
or
cmp
jl
and
xchg
test
mov
jae
mov
sbb
cmp
sahf
cdq
bound
cmp
pushf
fild
mov
cli
cmp
arpl
pop
dec
leave
cmps
dec
fild
sar
jge
sbb
jmp
aaa
in
push
addr16
mov
mov
popf
cwde
inc
sbb
out
xchg
loope
push
cmp
jp
cwde
xchg
ret
sub
xchg
(bad)
ss
or
xor
loope
scas
cmp
je
cld
fdivrp
pop
jae
inc
dec
iret
out
into
jecxz
pop
inc
sbb
stc
push
cdq
into
push
in
enter
pop
ficom
mov
ret
lock
sbb
fimul
stos
out
xchg
aad
and
mov
fidivr
and
ror
in
repz
stos
sub
iret
aas
pop
nop
pop
repnz
lods
mov
adc
into
leave
sub
(bad)
outs
mov
aaa
out
pop
ror
(bad)
ins
fs
sbb
mov
xor
add
ret
mov
adc
mov
xor
and
lea
test
in
jns
sub
and
movs
xlat
cmp
out
(bad)
retf
or
push
jae
xchg
mov
and
dec
adc
ds
aaa
mov
cs
xor
fisub
in
ss
sbb
rol
xchg
xor
xchg
mov
iret
inc
enter
cdq
adc
addr16
sub
(bad)
sub
sbb
xor
adc
pop
or
sbb
call
cmc
retf
mov
cwde
ficomp
and
xchg
out
dec
dec
and
inc
sti
or
xor
sub
mov
or
and
sbb
outs
mov
pop
leave
push
inc
dec
pop
mov
inc
adc
dec
out
fstp
xor
inc
jno
push
mov
adc
iret
ja
popa
gs
pop
fmulp
imul
pop
sbb
fwait
mov
mov
jg
les
shl
pop
int3
stos
(bad)
(bad)
jmp
push
mov
cld
scas
cmp
jmp
cdq
sub
test
(bad)
sub
jmp
dec
aas
outs
js
sbb
scas
adc
push
sub
mov
gs
lds
fisttp
mov
add
fisub
cmps
jecxz
sub
mov
mov
or
into
(bad)
dec
pop
fmul
jne
div
inc
sub
mov
rcr
xchg
pop
push
lds
xor
retf
sub
lds
jl
popa
mov
leave
jecxz
clc
mov
pop
std
inc
inc
les
inc
sub
cmc
popf
jecxz
and
sti
cmp
push
aaa
pop
fidivr
jae
adc
fadd
ins
xchg
gs
and
push
jo
inc
push
int
xor
loop
jno
call
mov
inc
(bad)
jecxz
test
dec
pop
in
xchg
inc
out
and
xchg
les
xchg
add
push
ja
rcl
xchg
bound
jb
ja
jmp
dec
and
jl
sub
add
popf
mov
lds
mov
jnp
retf
fisub
add
or
repnz
movs
and
sbb
leave
(bad)
loop
cwde
xor
mov
or
loope
aad
retf
les
mov
xchg
xchg
mov
jae
xor
cs
or
push
xor
sahf
fwait
adc
cmc
and
xchg
in
rcl
addr16
fst
mov
adc
add
and
fiadd
dec
or
gs
scas
mov
ret
into
cmps
popf
ins
cmp
gs
mov
pop
test
movd
neg
(bad)
stc
ss
jg
fcomp
retf
cmps
cld
fst
push
fbstp
push
mov
fwait
push
test
dec
scas
add
lods
clc
inc
cli
aas
rcl
pop
jbe
lds
and
dec
outs
mov
or
sbb
daa
shr
sub
stc
sar
jg
jnp
mov
int
je
lock
add
cli
push
pop
(bad)
loop
mov
cli
dec
push
mov
out
inc
loope
fnstcw
cmp
sub
cmp
xchg
cmps
mov
jge
into
in
shl
adc
jp
push
inc
jmp
icebp
pushf
pop
add
lods
dec
ja
(bad)
cmps
pop
sbb
mov
sar
dec
sub
jbe
sbb
push
cmp
xor
call
rcl
adc
inc
(bad)
sbb
push
inc
lds
mov
sbb
cwde
mov
in
mov
jle
test
add
mov
adc
rcr
ja
mov
sub
shl
aad
mov
add
mov
(bad)
rcl
neg
lock
in
mov
xchg
outs
(bad)
clc
rcl
jb
and
sub
lahf
push
lods
aam
ret
pop
fdiv
aaa
in
mov
(bad)
fdivr
sub
push
xor
fs
adc
push
xchg
inc
mov
jo
mov
sbb
sub
hlt
int
cmp
std
mov
xchg
imul
xlat
add
or
sbb
mov
iret
jbe
sar
cmp
ins
leave
loopne
imul
pop
xchg
push
retf
cdq
jmp
add
mov
int
adc
xchg
or
xchg
inc
cmp
xor
sbb
hlt
js
sahf
mov
push
cmps
(bad)
xchg
pop
jbe
mov
in
push
lea
sbb
test
jno
(bad)
adc
add
add
scas
and
adc
lock
sub
(bad)
pop
mov
(bad)
inc
stos
ins
pop
faddp
dec
je
push
hlt
lea
aaa
repz
rol
setae
aaa
push
xor
sub
xchg
push
mov
movs
sub
pop
es
outs
rcl
add
inc
and
ret
cli
cmps
xlat
sub
xchg
retf
xor
push
and
fwait
and
xor
gs
pop
ss
retf
aam
ins
and
gs
aaa
sar
xchg
cmps
add
lahf
xchg
push
adc
xor
fsub
dec
out
outs
jmp
std
shr
sub
and
push
(bad)
mov
fisubr
jg
pop
mov
jo
das
outs
push
imul
cmp
push
lahf
outs
dec
dec
aad
cmp
pop
loopne
mov
shl
scas
pop
inc
mov
cmp
rol
dec
dec
fimul
icebp
add
movs
outs
sahf
mov
mov
pop
call
cmps
(bad)
mov
call
and
jg
(bad)
ins
pop
nop
es
lods
pop
pop
jns
push
aad
sbb
test
jge
dec
(bad)
pop
pop
stos
xor
dec
mov
lods
xchg
mov
jl
xor
pop
pusha
sub
mov
jmp
test
ins
jb
lahf
xor
int
cwde
fdiv
sti
scas
push
cmp
retf
test
(bad)
mov
or
stc
mov
dec
mov
call
push
push
xchg
inc
mov
mov
scas
and
cmovle
std
fdivr
popa
push
pop
inc
(bad)
icebp
jmp
pop
xor
movs
mov
out
inc
xchg
xchg
xchg
dec
out
cmp
cmp
repz
aas
or
(bad)
scas
fstp
ins
stc
mov
xor
mov
mov
add
sub
push
test
mov
sub
push
push
shl
aam
sar
pop
mov
push
aad
iret
retf
imul
jmp
idiv
dec
mov
fmul
pop
push
or
inc
mov
test
std
push
jo
cmp
mov
push
sbb
fwait
jmp
cmp
(bad)
(bad)
aas
and
stos
(bad)
movs
inc
enter
loopne
cmp
out
mov
stos
not
fisub
push
iret
lock
or
movs
push
lods
cmp
retf
inc
imul
mov
sub
enter
sbb
jae
mov
rcl
adc
add
mov
inc
sbb
mov
push
outs
lea
xchg
out
stc
cmp
aad
add
inc
xchg
lock
dec
mov
gs
mov
push
xchg
retf
hlt
push
les
xchg
dec
mov
stc
aaa
std
adc
stc
pop
div
pop
ret
sbb
ins
scas
pop
call
scas
cmp
sbb
sbb
sub
adc
dec
imul
pop
fs
mov
ins
push
cs
mov
push
sbb
adc
gs
jmp
dec
mov
dec
test
xchg
add
xor
fdiv
inc
mov
addr16
outs
rcl
and
mov
adc
jbe
stc
push
nop
retf
in
les
ins
cmp
dec
mov
inc
push
(bad)
ins
(bad)
sub
fnstcw
sub
add
add
mov
or
inc
push
inc
clc
imul
pop
ret
int
sbb
jns
pushf
xor
dec
outs
fsub
mov
pop
pop
ins
sub
xor
cmps
cdq
cs
mov
cmp
movs
mov
ffree
push
sbb
mov
(bad)
ds
inc
and
or
leave
add
mov
sub
dec
mov
ja
or
fist
or
push
cli
cmp
out
mov
or
dec
cmp
or
mov
js
mov
pop
pusha
xchg
jecxz
mov
dec
in
fstp
je
push
xchg
cld
pusha
jecxz
lock
xchg
outs
inc
pop
sub
das
sub
(bad)
mov
and
add
xchg
xor
xor
aaa
into
inc
imul
xor
icebp
ret
mov
mov
outs
jp
aam
pop
js
add
test
mov
(bad)
rol
cmp
std
jmp
imul
xor
(bad)
out
push
shl
nop
xchg
repnz
push
pop
pop
retf
movs
in
dec
and
push
jnp
imul
cmp
sbb
xchg
mov
fild
sbb
push
fstp
adc
int
xchg
push
faddp
pop
or
lds
sub
add
aam
int3
(bad)
cmp
push
stos
cdq
clc
lods
fidiv
scas
pop
sar
cwde
push
mov
mov
pop
aam
mov
pop
loope
movs
shr
(bad)
fld
loop
cmp
out
sbb
(bad)
in
push
fild
fisubr
pop
xchg
mov
mov
xchg
dec
mov
mov
(bad)
fldenv
sar
test
jne
mov
dec
dec
aad
or
dec
mov
psrlq
in
mov
push
pop
ds
ror
shr
mov
fs
mov
sar
ret
jle
xchg
cmp
or
in
xor
into
addr16
dec
xchg
sub
fdivr
xchg
ja
xor
pop
jge
aas
cmc
or
call
xor
push
and
fs
or
inc
and
mov
push
out
mov
lods
sbb
pop
les
jle
movs
and
ss
xchg
int3
cs
inc
lds
mov
gs
cmc
add
cmp
aas
data16
bound
mov
inc
and
jmp
stc
test
fild
mov
mov
cld
and
xchg
fcom
mov
push
fwait
adc
mov
inc
jno
adc
stos
adc
rcr
and
sub
int
sar
cli
(bad)
push
std
stos
imul
mov
sar
leave
add
popf
inc
push
xor
cmps
pop
pop
adc
in
fst
or
aas
mov
mov
xor
jmp
in
pusha
movs
pop
imul
dec
(bad)
push
inc
(bad)
add
and
rcr
cwde
repnz
and
sub
in
test
add
mov
dec
arpl
in
aad
nop
(bad)
sti
movs
loop
pop
fadd
cmp
outs
fist
lock
(bad)
cmp
mov
rol
scas
and
pop
in
sbb
loop
or
and
aam
loope
xchg
call
sbb
xchg
push
xlat
and
adc
stos
jne
popf
cmp
stos
xchg
xchg
out
pop
fmul
xchg
out
in
sbb
std
add
outs
adc
jne
dec
shr
les
cs
mov
hlt
mov
cmc
or
data16
in
dec
enter
jmp
(bad)
push
ds
mov
add
lahf
jbe
rol
sub
ror
mov
push
jg
pop
mov
scas
xor
sub
jnp
jl
rcr
mov
mov
dec
mov
jnp
fidivr
lods
mov
inc
data16
shl
xor
mov
sub
pop
cmp
inc
call
xchg
dec
inc
ins
std
dec
xor
mov
add
aaa
cmc
cld
add
dec
cmp
jb
mov
scas
vunpckhps
shr
mov
movs
cmps
fnstcw
xor
mov
rcl
dec
mov
std
(bad)
fiadd
call
imul
stc
dec
xlat
xlat
inc
test
xchg
(bad)
ss
mov
add
sbb
loope
add
mov
jl
int3
sar
xchg
mov
mov
(bad)
push
fwait
int3
std
mov
push
mov
push
or
ins
popf
ins
push
in
and
aas
mov
fdivr
nop
push
mov
xchg
cmc
and
add
inc
jne
inc
cmps
lods
cli
xchg
fisubr
mov
xchg
pushf
(bad)
pushf
nop
add
cmc
sbb
add
jg
fnstenv
dec
and
sub
sub
pop
out
ret
clc
cld
mov
xchg
sub
xor
mov
push
jb
(bad)
sbb
ja
in
shl
pop
or
jbe
std
jp
in
push
and
stos
sub
icebp
adc
sub
mov
mov
jl
add
pop
jg
fmul
adc
dec
aam
mov
ret
int
loopne
jns
int3
xchg
dec
jnp
outs
ror
mov
and
in
or
xor
test
pop
cmps
ret
repnz
inc
pop
inc
push
mov
aas
ins
leave
out
mov
xchg
mov
xor
jge
adc
ins
pop
push
fld
movups
push
sahf
xchg
push
push
mov
pop
pop
mov
xor
fdiv
push
ss
sub
add
mov
sub
and
xchg
jp
mov
adc
jmp
xor
mov
add
and
inc
sub
je
cmp
add
push
add
sbb
scas
push
inc
mov
cmps
fistp
frndint
ins
or
sbb
enter
fcmovnb
jl
cld
mov
std
sub
stos
movs
sub
mov
jl
push
jmp
inc
xchg
mov
stc
xor
retf
int3
ja
cmp
repz
inc
xor
or
pop
arpl
(bad)
sbb
adc
inc
leave
dec
cmp
sbb
mov
dec
pop
das
inc
test
sti
arpl
sbb
cmp
sbb
(bad)
mov
dec
(bad)
and
loop
dec
ins
mov
scas
mov
push
fisttp
or
test
data16
movs
cmps
mov
mov
jp
stos
mov
test
xor
lea
pushf
sub
cld
vldmxcsr
mov
sbb
les
out
aaa
ins
mov
ja
jg
inc
test
pop
cs
ret
in
xchg
xchg
adc
shl
jbe
repz
pop
jne
adc
xchg
(bad)
ret
push
fnstsw
repz
mov
sub
jb
push
rol
outs
arpl
push
jns
and
inc
cmp
mov
fs
adc
cmp
cmps
pop
sbb
into
lods
push
data16
xor
inc
and
mov
pop
and
pop
inc
cld
cmc
mov
jmp
fimul
retf
xor
dec
fcom
lea
(bad)
movs
outs
out
mov
cmps
add
ja
add
sub
bound
add
jb
mov
jne
inc
mov
xchg
push
cmp
adc
adc
lds
or
test
test
add
fld
sahf
xchg
(bad)
sbb
sbb
mov
shr
pop
ret
dec
mov
(bad)
fist
lods
out
pop
shl
data16
test
adc
dec
js
or
dec
jge
fsubr
inc
in
push
cmp
jo
mov
mov
push
pop
dec
ss
push
jno
add
and
ds
mov
mov
lea
sahf
mov
cs
mov
dec
ds
ret
push
mov
sbb
sub
shl
jl
test
inc
pop
jge
in
and
adc
jno
(bad)
fmul
jl
clc
in
inc
add
leave
jnp
neg
mov
mov
lods
jnp
mov
jnp
sbb
into
(bad)
cmp
sub
imul
inc
es
(bad)
out
cmps
mov
cli
add
stos
imul
retf
mov
adc
ret
loop
imul
jp
pop
mov
mov
dec
inc
movs
sbb
shr
inc
cmp
mov
cmp
jbe
jns
push
dec
add
sbb
inc
imul
jns
fcom
jmp
xor
or
cmps
scas
mov
aam
mov
push
int
in
push
shl
push
mov
cmp
(bad)
popf
mov
mov
imul
push
(bad)
jl
cmp
and
xchg
jle
sahf
std
push
push
cmp
repz
push
xchg
aaa
iret
inc
mov
push
and
retf
out
jl
inc
xor
bound
das
(bad)
dec
and
add
push
neg
cmp
cmp
add
push
sbb
pushf
sub
(bad)
mov
js
fwait
mov
gs
xor
add
pop
pop
xchg
ds
loop
sbb
inc
mov
popa
fcmovnb
pop
into
pop
cmps
out
jmp
xor
into
pop
jne
xchg
(bad)
cmp
dec
popf
mov
fistp
js
repz
fs
out
pop
push
mov
lea
lock
mov
gs
mov
jb
and
pop
jne
es
jecxz
mov
and
dec
cmps
fs
pop
pop
xor
hlt
rcl
jmp
jo
mov
push
in
inc
stc
mov
sar
or
test
mov
or
mov
xchg
inc
add
pop
push
dec
out
xor
ja
or
stos
adc
mov
adc
mov
push
pushf
mov
cmps
std
out
imul
bound
daa
mov
stos
inc
pop
dec
js
rcl
pop
jmp
dec
adc
fcmovu
loopne
mov
into
movs
add
into
and
out
mov
fisttp
test
jo
out
jecxz
(bad)
js
push
or
xor
inc
icebp
xor
cmp
aas
cmc
cmp
popf
nop
cmp
push
(bad)
dec
inc
and
dec
daa
(bad)
pop
sbb
fcomip
out
xor
and
mov
ins
inc
add
push
ja
stc
push
or
(bad)
add
mov
call
xchg
xor
cmp
jecxz
pop
test
pop
(bad)
push
stos
pop
(bad)
loop
push
sahf
sub
pop
xchg
pop
or
mov
call
mul
or
popf
ret
and
clc
imul
push
and
retf
sub
fwait
xchg
jb
ror
mov
jns
cmc
jle
mov
and
xor
mov
jnp
in
jo
call
xchg
xchg
lods
iret
xchg
add
xor
sub
dec
cmp
fist
xchg
inc
sbb
sbb
icebp
adc
xor
aaa
out
loopne
int3
ret
mov
sbb
pop
sub
das
cmc
mov
call
leave
outs
mov
ret
add
cmps
xchg
add
cmp
stos
xchg
movs
mov
(bad)
call
fnsave
test
adc
mov
shr
or
ja
mov
mov
sahf
movs
mov
push
enter
adc
enter
or
mov
push
mov
mov
ss
dec
daa
retf
mov
or
sub
add
inc
mov
js
movs
(bad)
movs
add
xlat
push
sar
ja
dec
sar
call
push
daa
mov
push
xchg
jne
test
rol
es
imul
wrmsr
adc
add
dec
stos
repz
or
sahf
sbb
stos
pop
mov
jecxz
les
and
cmp
aam
xlat
or
cli
ret
and
jecxz
sti
inc
mov
clc
out
cmps
sub
mov
sti
mov
pop
sbb
movs
jbe
hlt
jne
mov
mov
add
mov
ja
mov
hlt
daa
inc
dec
xchg
test
or
push
mov
mov
call
mov
cli
jb
or
mov
jns
inc
xor
nop
fiadd
retf
push
in
cmp
cmp
(bad)
aad
test
jno
pusha
call
lods
push
jo
aas
popf
fidivr
bnd
rol
pop
fcom
adc
add
pop
fdiv
into
cwde
faddp
int3
rcl
data16
sbb
fidivr
fld
popf
mov
outs
stos
sbb
fs
fadd
cmp
or
retf
loopne
mov
push
out
mov
pushf
sub
loope
ins
xchg
cmps
es
(bad)
sub
stos
out
pop
or
mov
stos
int
cmc
nop
jl
std
dec
cmc
inc
aaa
pusha
retf
or
call
aam
jmp
popa
mov
addr16
add
(bad)
mov
push
ret
sbb
es
(bad)
or
cmp
jbe
inc
fsub
stos
fmul
retf
mov
pop
loope
adc
jne
xchg
(bad)
in
dec
sbb
dec
stos
in
inc
xchg
stos
jo
mov
dec
adc
mov
jno
lea
and
mov
movs
mov
sbb
inc
jne
(bad)
fs
dec
xor
movs
loopne
jae
mov
inc
cmp
sub
call
cmp
jno
aad
sub
sub
pop
pusha
outs
fistp
and
mov
shl
inc
push
bound
je
cmp
les
and
mov
or
lea
sar
addr16
lock
outs
cmp
jl
inc
movs
jle
add
repnz
out
adc
dec
push
cmp
shr
inc
sub
mov
xor
rcl
fwait
adc
leave
mov
cmp
scas
test
cmp
in
push
adc
mov
ret
out
or
gs
aaa
aam
stc
xor
mov
xchg
fsubr
cdq
adc
push
cs
xchg
mov
sbb
adc
jmp
add
pop
mov
push
xchg
lea
js
and
jns
inc
inc
test
gs
inc
and
push
std
cli
jne
inc
xchg
fwait
lahf
gs
popf
jns
test
dec
(bad)
mov
jno
(bad)
shl
dec
push
clc
movs
int
les
daa
fld
sub
mov
pushf
mov
add
bnd
bound
js
or
sub
pop
pusha
push
cmps
inc
push
mov
xchg
loopne
sbb
xchg
addr16
pushf
data16
add
neg
fldenv
pop
(bad)
inc
inc
movs
xor
bound
mov
cmp
fsubr
enter
jg
push
jnp
retf
xchg
iret
fwait
jne
ret
les
inc
mov
les
(bad)
and
ins
sub
dec
popa
in
ja
es
inc
push
pop
adc
mov
fmul
aad
xchg
sbb
cmp
in
cmc
dec
cli
inc
cmp
pusha
and
fwait
pop
lock
cmps
pop
gs
sub
and
sbb
push
add
je
std
jnp
lea
xchg
test
inc
sbb
ficomp
add
retf
sub
dec
(bad)
pushf
jb
or
aad
out
jle
push
sub
nop
push
inc
mov
adc
or
test
xor
movs
jb
mov
inc
popa
mov
dec
sbb
mov
pop
sahf
popa
cli
std
rcl
add
jno
jns
add
or
ja
data16
xchg
rol
cld
std
xchg
fcom
ror
mov
push
adc
ret
scas
mov
dec
mov
jno
inc
sahf
mov
fild
scas
sub
xchg
xor
imul
push
lahf
imul
push
sub
test
sub
sub
jo
adc
mov
fadd
fdivr
lahf
add
fcomp
ja
test
mov
or
dec
mov
ins
lock
mov
mov
push
mov
ret
add
(bad)
pushf
lock
pusha
push
pop
or
add
mov
adc
cmp
cwde
in
arpl
test
jmp
out
or
mov
cwde
mov
jl
stc
aam
into
jb
out
enter
xor
arpl
imul
loope
out
dec
inc
adc
int3
jbe
jbe
mov
dec
jae
fsub
or
shld
ins
scas
jp
(bad)
sar
sahf
sub
rcl
jecxz
and
inc
xchg
mov
pop
in
std
imul
ret
xchg
ins
outs
retf
push
dec
retf
inc
pop
(bad)
das
mov
push
cmp
pop
cwde
sbb
pushf
xor
das
js
sub
sbb
test
pop
ficom
add
inc
(bad)
sbb
dec
out
cwde
inc
lock
loope
mov
dec
std
(bad)
or
inc
mov
pop
xor
push
xlat
pop
aam
ja
cmps
fdiv
inc
js
xor
jmp
xor
xchg
add
xchg
or
jmp
outs
cmp
and
enter
mov
and
popa
push
test
mov
mov
int
cmps
cmps
mov
int3
ins
push
rcl
push
pop
mov
and
sahf
loope
stc
inc
and
lahf
cmp
lds
ss
inc
cmps
fild
shl
push
cmp
cmp
or
xor
inc
inc
xchg
jae
jb
cmp
push
mov
cmp
nop
out
scas
les
ins
gs
jbe
and
and
xchg
mov
das
mov
jmp
or
stos
add
ror
sbb
outs
mul
(bad)
(bad)
outs
movs
(bad)
xchg
mov
push
push
pop
mul
push
repnz
fs
icebp
add
call
in
cmps
aam
arpl
pushf
js
in
sbb
pop
mov
cld
mov
inc
add
pop
xor
shl
lds
mov
shl
mov
mov
add
xchg
sub
jbe
lea
int
xor
int3
add
fist
fdivr
push
mov
sbb
jmp
mov
sbb
mov
sub
cmp
push
cmp
ja
sbb
clc
push
xor
cmps
sub
or
call
fscale
pop
stc
(bad)
cmps
clc
cmp
jecxz
xchg
scas
add
xor
stos
and
(bad)
stc
stos
les
inc
push
and
in
and
and
pop
sub
mov
(bad)
mov
pop
(bad)
dec
arpl
inc
or
pop
push
das
test
mov
jb
jnp
dec
inc
int
jne
or
aad
loope
xor
mov
and
out
mov
mov
xchg
ds
ss
dec
jne
mov
(bad)
sub
cmp
dec
sub
gs
sti
in
nop
xor
and
mov
loop
into
pop
dec
pop
fwait
call
adc
jle
dec
ins
mov
iret
xchg
ss
clc
out
mov
test
or
outs
rol
(bad)
jmp
or
or
cmp
shl
jg
dec
jl
lock
lds
mov
rol
mov
pop
enter
and
inc
iret
add
addr16
nop
inc
cmp
stos
add
out
dec
pop
outs
js
xchg
in
jne
push
ja
hlt
cdq
sahf
out
out
stos
and
lahf
mov
setp
shr
sahf
dec
sahf
ins
test
xchg
ss
fst
fstp
xchg
outs
sti
lods
jne
in
int3
mov
mov
loope
mov
fadd
cmp
rcr
pushf
jp
test
jb
iret
loopne
push
sbb
js
dec
call
jne
out
mov
dec
or
add
shl
cmp
or
jp
mov
movs
adc
aas
fist
cli
mov
xchg
cmc
mov
sub
pop
neg
nop
xchg
cmp
push
xlat
mov
int
and
add
lods
push
add
ja
push
mov
movs
test
ds
in
sbb
popf
popf
test
out
test
xchg
cmps
sbb
xchg
les
cmp
push
mov
pop
jmp
mov
cmps
jns
adc
cmp
in
add
out
movs
jecxz
cmp
cmps
stos
fisub
push
test
out
push
mov
mov
test
inc
dec
cld
mov
popf
call
daa
add
mov
jnp
leave
xchg
inc
ss
test
jp
cmp
add
mov
inc
xchg
xchg
pop
test
jmp
jle
mov
xor
fnsave
inc
or
sub
mov
dec
dec
outs
mov
out
push
sub
pop
xor
push
inc
fdiv
jg
dec
and
cmp
inc
je
adc
data16
dec
imul
fmul
add
and
xchg
repz
cmp
pop
mov
xchg
jge
gs
ds
push
jg
fistp
sahf
push
jae
mov
mov
das
cld
and
adc
xlat
xor
ret
out
data16
popf
xor
jo
mov
in
sub
cmc
cmp
and
popa
imul
cmp
mov
sub
jge
xchg
or
or
jne
cdq
push
xchg
pop
mov
les
and
push
add
xchg
mov
neg
fbstp
nop
push
int
pop
ins
pop
pop
outs
mov
addr16
cmp
pop
adc
pop
lods
xor
mov
adc
lea
adc
pop
inc
xchg
sbb
into
fldenv
dec
sahf
test
mov
xor
ret
and
out
loop
inc
imul
hlt
nop
xor
iret
jns
sub
inc
(bad)
dec
mov
or
lods
mov
fadd
test
pop
(bad)
cwde
clc
mov
addr16
test
retf
sub
jecxz
scas
jns
in
xchg
push
mov
or
rcr
jle
xchg
bound
arpl
ins
xor
ret
jmp
rol
mov
scas
fmul
in
mov
dec
pop
(bad)
stc
movs
call
inc
mov
pushf
sbb
std
push
mov
xor
or
sub
gs
xor
push
sub
lock
cwde
movs
andnps
aad
fld
push
jmp
mov
(bad)
push
dec
push
mov
ss
cmp
mov
add
ins
xchg
xchg
sti
xchg
pop
cdq
xor
or
sti
ret
inc
es
push
add
imul
push
aas
adc
jb
pop
mov
push
inc
inc
mov
add
pop
sub
lds
sub
mov
out
cld
ja
or
jne
mov
xor
xchg
cmp
and
fwait
pop
(bad)
fwait
jecxz
mov
pop
mov
xchg
std
pusha
pop
movs
icebp
adc
mov
sbb
out
push
cmps
pusha
sbb
or
test
lock
fs
loopne
das
sbb
aaa
stc
mov
and
pop
sub
xor
push
leave
and
mov
ficom
daa
popf
cs
inc
mov
sbb
sub
mov
inc
xor
or
pop
inc
sub
daa
dec
mov
or
mov
mov
mov
jns
xor
sbb
fisubr
mov
leave
cs
ins
sbb
sbb
fmul
cmc
jl
add
pop
fild
mov
data16
mov
mov
cmc
lock
cmp
or
mov
rol
mov
fstp
gs
xchg
(bad)
pop
(bad)
and
xchg
out
mov
dec
and
xlat
mov
ror
mov
or
outs
pop
dec
out
sahf
lods
lahf
sub
icebp
inc
add
or
push
pop
mov
in
fnsave
sbb
mov
imul
es
in
cs
inc
ja
sbb
mov
not
daa
cmp
call
adc
dec
xchg
cli
into
pop
popa
out
mov
std
mov
scas
int3
in
movs
imul
test
dec
cmp
cmc
jae
inc
mov
mov
jo
mov
dec
pop
aaa
dec
fisttp
mov
mov
clc
add
test
iret
ret
jne
jns
jb
push
jae
inc
shr
push
in
inc
inc
bound
fistp
mov
mov
or
mov
mov
loopne
dec
bound
sbb
hlt
fdivr
and
push
sbb
push
fadd
call
frstor
dec
jecxz
das
int
mov
inc
rcr
adc
movs
mov
xor
cld
inc
push
add
ja
in
inc
sbb
xchg
(bad)
cmp
cmps
test
int3
ret
pop
sahf
or
out
mov
pop
pop
rcl
dec
pop
repnz
cmps
cmp
pop
js
rol
sbb
mov
push
fstp
bound
outs
xchg
sbb
mov
lods
mov
push
fwait
(bad)
jae
adc
xchg
ins
dec
cs
stos
xor
rol
dec
and
jne
add
fistp
sbb
inc
push
jnp
dec
imul
mov
jo
xchg
xor
mov
and
adc
push
mov
addr16
pop
mov
sbb
stos
out
fs
into
or
sbb
and
shr
add
xchg
popf
daa
rcr
xchg
inc
cmps
fs
test
pop
clc
ds
mov
fcomp
shl
scas
dec
jo
cwde
jnp
mov
push
cwde
es
movs
or
push
lock
jbe
(bad)
icebp
mov
(bad)
cmc
xor
imul
or
in
jo
sbb
ror
cmps
std
aaa
dec
movnti
xchg
cmp
movs
xchg
xchg
xchg
sub
(bad)
ret
cwde
cld
push
mov
jg
hlt
jne
fistp
fsub
push
mov
or
movs
xor
pop
or
jno
xor
bound
fnstenv
cmp
mov
ja
and
sub
push
sub
sub
int3
inc
jmp
dec
push
or
inc
adc
push
mov
pop
pop
not
xor
jle
(bad)
sti
inc
xor
mov
xor
outs
sub
cmp
loop
test
dec
or
loop
adc
mov
dec
xor
mov
push
jne
inc
sub
mov
add
or
mov
and
sbb
stos
mov
jno
(bad)
push
mov
mov
sbb
(bad)
sub
retf
(bad)
adc
mov
ror
mov
mov
cmp
popf
neg
jmp
push
pop
xchg
gs
cmps
sub
fidiv
adc
jmp
xor
jl
pop
mov
pop
pusha
ret
sub
out
mov
pop
cmc
loopne
outs
mov
xlat
mov
xor
fisttp
out
push
fidiv
inc
out
cmp
ret
das
ret
adc
pop
mov
arpl
and
das
je
(bad)
sub
dec
mov
movs
fs
fwait
and
pushf
sub
mov
xor
outs
pop
sub
nop
add
mov
mov
cmp
scas
xor
repnz
shl
loopne
jo
fnstsw
adc
mov
and
and
test
push
inc
stos
stos
jb
pop
test
lahf
idiv
sub
test
dec
mov
aad
mov
push
inc
pop
pop
cli
xor
xchg
push
cmc
add
rcl
mov
push
xlat
pop
rol
jp
shl
mov
pop
mov
sti
mov
(bad)
push
or
adc
or
mov
sbb
int3
jl
pop
fild
lods
or
push
es
loopne
(bad)
cmp
xor
cmc
movs
cmp
in
shl
or
mov
call
mov
bound
in
ss
je
xor
adc
adc
jp
ins
sbb
lds
sbb
add
push
lahf
and
pusha
cdq
cwde
retf
repnz
pop
inc
clc
bound
out
mov
or
je
jecxz
pop
lds
adc
xor
daa
movs
mov
leave
push
push
cs
push
arpl
call
cmp
or
dec
xchg
hlt
int3
aaa
fs
and
dec
mov
repnz
(bad)
pop
jmp
arpl
pop
push
and
rol
shr
cmp
add
stos
dec
call
loope
mov
sub
jno
xor
mov
cmp
and
cmc
add
cwde
aam
add
push
push
rcl
adc
jg
fs
push
mov
ss
je
imul
adc
gs
or
cmp
or
add
int
xchg
outs
push
xor
pop
fidiv
fsubr
jle
push
jecxz
scas
rol
loopne
in
ins
imul
out
in
inc
inc
sub
imul
or
sti
push
test
sbb
ret
ficom
cmp
push
sub
ins
mov
(bad)
iret
jnp
inc
and
mov
fdivr
je
jmp
mov
std
push
and
test
pop
outs
xor
cdq
in
mov
fcmovne
sahf
cmp
push
pop
xbegin
cmp
test
hlt
lea
out
mov
cmp
mov
cmp
mov
push
jns
retf
popf
jo
xchg
lea
stos
mov
int
mov
xor
sub
sub
xor
fsubrp
div
xchg
in
dec
div
cmp
mov
ss
test
jle
cdq
cld
sub
and
sub
mov
aaa
jecxz
aam
or
addr16
lock
ins
popa
std
sar
loope
popf
push
xchg
cmp
pop
outs
xchg
push
add
mov
xchg
icebp
push
lea
or
and
fstp
out
cmp
das
cwde
jns
cmps
cs
add
jb
and
bnd
fsub
sti
les
cmp
out
add
sub
xchg
or
test
aaa
mov
jle
lds
inc
ret
in
cld
xlat
sub
adc
test
out
jl
inc
sbb
and
adc
lods
xchg
pop
into
jb
shl
pop
and
push
mov
push
sub
inc
push
and
scas
(bad)
pop
cmp
push
cmp
retf
mov
adc
jg
sahf
(bad)
jmp
or
inc
push
enter
sub
pop
in
es
imul
ss
int3
adc
test
imul
push
dec
jae
clc
sti
push
shl
push
jmp
inc
cmp
shl
int3
mov
jg
xchg
imul
mov
in
hlt
sti
pop
jns
xor
jmp
int3
pop
jg
sti
clc
adc
or
(bad)
sbb
retf
inc
test
jmp
les
scas
ret
add
xchg
and
inc
mov
sub
cmc
push
sub
fs
jne
lahf
scas
mov
mov
fs
in
xchg
shr
popf
xchg
cld
sub
pop
mov
test
mov
sahf
out
mov
mov
loopne
rcl
in
xchg
ds
adc
push
addr16
mov
push
and
je
jecxz
scas
jecxz
xor
or
out
imul
cs
or
nop
mov
inc
js
dec
pop
xchg
rol
leave
retf
icebp
xchg
outs
popa
xchg
scas
cmp
leave
bound
retf
sbb
add
sbb
shl
inc
push
dec
adc
ret
inc
outs
jl
add
push
push
jo
mov
adc
movs
or
aad
pop
loope
add
les
icebp
add
icebp
xchg
jp
leave
sar
adc
mov
iret
inc
xchg
in
nop
out
fistp
mov
mov
loope
js
clc
sbb
sub
jmp
ja
iret
pop
movs
dec
in
enter
sahf
repz
stos
fstp
jp
push
adc
push
sar
mov
pusha
out
mov
outs
call
outs
sbb
jle
dec
jbe
dec
pop
add
push
pop
mov
aas
inc
jp
xor
test
pop
into
fild
jg
std
cwde
sbb
outs
std
xchg
test
push
js
adc
inc
lods
std
iret
mov
inc
sub
mov
inc
stc
mov
and
ja
dec
pop
mov
jle
cmp
lds
pop
mov
(bad)
(bad)
sbb
sahf
cli
inc
xchg
stos
loope
stos
adc
push
aad
adc
xchg
and
sbb
mov
pop
stos
mov
add
xor
sub
adc
rol
mov
jp
repnz
pop
push
repnz
sub
and
stc
mov
and
jmp
mov
cmc
out
sar
push
pop
inc
frstor
inc
(bad)
std
push
dec
sub
mov
jl
dec
xor
mov
inc
pop
imul
repnz
xchg
loopne
mov
pop
sub
jno
inc
pop
xchg
mov
pop
call
push
ja
sbb
arpl
retf
ficomp
mov
jge
popf
xor
das
imul
mov
call
dec
shr
mov
jg
xchg
adc
aam
dec
leave
jp
movs
sar
push
fcmovnbe
mov
jmp
or
xor
inc
sub
cmp
inc
sbb
xchg
push
mov
mov
test
xchg
stos
ret
sahf
out
lods
jae
(bad)
mov
mov
xchg
pop
push
div
pop
stos
dec
xchg
adc
xchg
arpl
mov
mov
jo
mov
out
cmp
sbb
rol
into
adc
fs
imul
sub
mov
pop
mov
sub
mov
icebp
ret
test
xor
cmp
mov
fstp
mov
cwde
mov
cli
mov
test
stos
mov
je
cmp
add
jge
imul
and
movs
stos
dec
test
inc
cli
xchg
pop
repnz
loope
popa
imul
pop
push
nop
push
iret
lds
sub
xchg
mov
rol
pop
loope
add
jp
test
mov
xlat
call
add
aam
lahf
pusha
xchg
in
mov
inc
clc
ja
mov
xor
mov
push
sti
mov
inc
inc
or
stos
rcl
cdq
mov
sbb
sbb
cmp
mov
xchg
popf
fwait
data16
add
pop
pop
xchg
pop
ins
xchg
sub
mov
xlat
sub
sub
xchg
mov
push
add
clc
xor
lock
cmp
addr16
mov
retf
mov
addr16
cmp
xchg
add
mov
and
pop
pop
push
dec
dec
jmp
dec
push
call
and
push
adc
mov
push
or
cli
mov
shl
scas
push
or
test
sbb
div
mov
mov
and
fdiv
sahf
sbb
xor
lahf
ins
dec
jno
sbb
adc
cmp
cmp
cmp
popf
jo
shl
pop
or
cmps
jmp
in
mov
stos
jbe
mov
or
rcr
mov
cmps
inc
movs
std
add
add
stos
fwait
xor
fisubr
cli
adc
sbb
dec
pop
sbb
int3
push
aas
xchg
fs
iret
imul
(bad)
push
stc
sahf
dec
fstp
cmp
sub
(bad)
nop
aam
retf
nop
mov
xchg
pop
daa
pushf
mov
scas
cld
dec
push
std
cmp
mov
in
loope
rol
mov
enter
xor
in
std
and
(bad)
fcomp
xlat
push
loop
loope
ss
out
lds
aad
sbb
stos
into
and
mov
mov
ins
nop
add
pop
mov
jns
jo
mov
jp
dec
xlat
(bad)
sub
(bad)
pop
mov
cli
fistp
or
stos
push
mov
inc
fmul
cmp
jbe
push
out
int3
add
(bad)
rcl
push
pusha
and
mov
cmps
shl
in
test
std
xlat
outs
and
xor
mov
sahf
stos
out
xchg
mov
xchg
cmp
sbb
scas
add
scas
push
and
mov
mov
mov
aas
lea
(bad)
and
sbb
mov
push
mov
mov
cmp
fisub
add
xor
jp
mov
je
jns
mov
sbb
jg
cwde
icebp
rcl
hlt
imul
add
jo
push
sub
(bad)
shl
fld
pop
shl
fbld
es
(bad)
stc
out
jae
sbb
push
ja
mov
mov
lods
xchg
aad
pop
jae
jle
lea
out
and
push
mov
loop
fsub
sub
imul
mov
xor
rol
push
scas
std
(bad)
mov
mov
and
mov
lahf
leave
mov
push
inc
inc
sub
pop
or
xchg
sbb
in
fdiv
test
cmps
xor
mov
(bad)
mov
mov
lods
mov
adc
and
imul
lods
cmp
lea
fnstsw
jmp
push
cmp
jo
dec
inc
and
lds
shr
push
mov
popf
dec
sbb
daa
pop
mov
xor
add
ins
leave
stos
cs
pusha
sbb
push
ja
inc
pop
loopne
cmp
mov
add
or
xor
pusha
dec
iret
lea
nop
int3
pop
out
and
pop
push
pop
add
stos
scas
pop
dec
sbb
sbb
cmp
stos
mov
imul
dec
mov
js
cmp
cmps
ror
dec
sbb
mov
xchg
sub
push
cmp
fs
and
inc
cmc
shr
jmp
jbe
inc
push
js
mov
or
push
sub
jne
add
inc
mov
sbb
cli
daa
pusha
pop
das
and
es
ficomp
aam
mov
ret
popa
pop
sub
pop
test
je
xor
xor
push
push
cmps
xchg
in
xor
mov
in
inc
pop
mov
pusha
out
std
clc
push
fwait
push
imul
les
jge
cmp
xor
mov
or
ja
xor
lods
inc
mov
(bad)
xchg
mov
push
pop
imul
cmp
lea
loopne
mov
fiadd
jbe
loopne
lea
fstp
dec
shr
out
xchg
xlat
aad
sbb
add
aad
and
loop
arpl
sar
gs
into
add
and
test
scas
adc
sbb
test
cmp
lock
sbb
cli
packuswb
cmps
mov
dec
repz
sub
scas
inc
or
mov
inc
icebp
daa
js
test
xchg
jnp
(bad)
rcr
arpl
adc
or
dec
inc
je
mov
in
push
loope
cmp
xchg
imul
jecxz
loopne
fcmovnb
pop
or
sbb
ret
xor
sub
ficomp
and
ds
scas
in
out
or
sbb
xchg
dec
inc
jle
inc
mov
out
sbb
mov
jbe
jg
sub
sbb
leave
mov
lods
loop
push
sub
sub
jns
sbb
in
cmp
inc
mul
das
cmps
stos
scas
and
and
cmp
xchg
adc
xor
(bad)
hlt
mov
mov
iret
das
push
push
out
into
and
(bad)
pop
mov
jl
dec
or
cmp
loope
push
mov
inc
mov
out
sar
inc
in
jae
mov
xchg
pop
lds
test
fucomi
(bad)
cwde
pop
call
dec
or
stc
push
aaa
aas
imul
dec
sub
lods
mov
push
mov
ret
cmp
lahf
mov
jbe
and
adc
cmp
into
push
outs
push
stos
jne
jmp
sbb
sbb
and
out
out
(bad)
call
movs
rcl
xchg
push
push
sbb
mov
add
or
pop
daa
xchg
mov
or
ins
or
adc
mov
les
and
xchg
clc
ins
dec
and
arpl
and
das
push
jmp
mov
and
xor
mov
adc
adc
mov
fcomp
inc
and
lods
je
lahf
das
dec
xchg
jno
mov
cli
lds
fild
ret
inc
push
(bad)
pop
jae
lods
arpl
in
test
outs
jb
dec
ds
push
ret
mov
call
inc
push
cmp
jbe
ds
(bad)
jmp
daa
aas
nop
sahf
clc
not
rcr
sbb
call
pop
push
repnz
cmp
mov
cmp
and
xlat
xor
jecxz
xchg
adc
js
dec
xor
adc
jle
pop
jmp
pushf
fiadd
or
mov
xor
mov
add
popa
sbb
retf
jnp
mov
mov
ins
sar
neg
inc
cmp
mov
jg
jge
xor
xchg
push
jb
xor
sbb
add
cmps
jl
imul
inc
mov
mov
sbb
(bad)
bound
je
add
mov
inc
fdiv
inc
fiadd
fmul
in
mov
ds
adc
ja
pop
inc
gs
mov
mov
ret
push
loopne
mov
dec
scas
das
or
xchg
jbe
pushf
sbb
jp
loope
pop
sbb
add
fs
fldcw
sbb
push
mov
inc
inc
xchg
inc
push
mov
stos
pop
pop
out
in
call
stc
clc
ins
sub
or
scas
inc
cmp
dec
push
sbb
mov
arpl
sar
mov
push
dec
xchg
pop
inc
push
pop
cld
stc
xchg
mov
dec
adc
pop
ror
call
and
shl
sbb
cmps
push
call
icebp
in
inc
jb
sub
dec
push
int3
(bad)
nop
mov
daa
pusha
les
ds
outs
stos
repz
gs
cmp
push
mov
sub
movs
xchg
test
xchg
jmp
das
sahf
sub
sub
adc
sti
inc
test
add
sbb
pop
jmp
jno
in
fdivr
cmps
cmp
adc
je
aad
clc
sub
sub
mov
lahf
js
fucom
add
mov
ficomp
mov
jecxz
fsubr
adc
and
imul
fs
dec
push
jle
aaa
jno
dec
and
cmps
ins
mov
pusha
shr
movs
mov
or
mov
cmp
adc
jne
jns
cmp
fcomp
cmp
inc
sub
pop
jno
fcmovnbe
sub
inc
(bad)
jne
std
xchg
pop
pop
push
push
jp
nop
adc
mov
push
out
dec
arpl
mov
loopne
cli
xlat
xchg
mov
or
arpl
pop
lahf
sbb
aaa
daa
inc
data16
push
xchg
(bad)
aaa
cmps
out
mov
inc
fcom
cmp
test
xchg
and
ret
jns
xor
adc
push
add
xchg
fs
cwde
test
xor
or
and
sub
fcom
call
neg
mov
jmp
pusha
test
lock
dec
jg
cmc
out
ror
stc
jns
add
jo
push
sbb
dec
pop
cld
es
xchg
cmp
fstp
mov
mov
cs
push
cdq
(bad)
cmp
imul
rol
pop
lods
xchg
mov
mov
sti
movs
add
shl
pop
(bad)
cs
push
jbe
cli
es
enter
add
enter
data16
(bad)
mov
(bad)
in
jge
cmc
adc
mov
xchg
lock
sar
or
dec
push
mov
lock
div
or
pop
push
repz
fwait
pop
mov
pop
test
mov
xchg
dec
push
pop
int
not
or
xor
jae
ss
xchg
loope
and
jo
jecxz
mov
xor
mov
mov
pop
inc
xchg
ins
pop
and
popf
into
lahf
test
stos
dec
dec
adc
out
mov
xchg
cmp
mov
addr16
jle
sub
pop
test
sub
addr16
xor
retf
add
fst
iret
out
pop
call
outs
je
(bad)
lahf
arpl
movs
popf
ins
call
cmp
xlat
lds
mov
inc
cld
mov
inc
sahf
cwde
pop
repz
cmp
scas
add
mov
jecxz
mov
sbb
jecxz
pop
out
jne
cld
inc
push
and
jl
sub
sbb
ret
lahf
pop
add
call
dec
pop
loopne
dec
popf
shufps
add
(bad)
adc
enter
mov
sub
repz
jno
push
(bad)
(bad)
pop
xchg
push
inc
mov
fwait
xchg
fstp
inc
lods
and
push
mov
dec
push
mov
pop
xor
add
mov
sbb
rcr
push
adc
xchg
ret
adc
pop
sbb
inc
adc
push
aas
popf
repnz
mov
inc
or
bound
out
pop
lods
pop
mov
loope
fiadd
jge
sub
lea
rcr
cli
dec
cli
and
xlat
and
in
movs
pop
inc
sub
jne
mov
mov
loop
rol
repz
push
cmp
mov
(bad)
mov
push
cmp
pop
js
jne
cmp
sub
fstp
sub
int3
sti
std
or
jmp
cmp
xchg
repnz
xor
mov
mov
mov
cli
and
call
lock
mov
sub
js
fnsave
xchg
lock
mov
(bad)
sbb
lods
and
sub
mov
xchg
stc
aas
push
cdq
test
mov
jmp
clc
sbb
mov
test
inc
or
xchg
mov
fwait
sbb
adc
test
pusha
adc
outs
mov
stos
push
adc
push
push
cmp
mov
sbb
cmps
sbb
scas
or
fcomp
xchg
mov
jmp
out
push
jp
(bad)
inc
maskmovq
mov
pop
adc
les
outs
cmps
imul
arpl
loop
xor
mov
xchg
stos
loope
in
sti
test
adc
or
cmp
pop
dec
bnd
imul
push
jmp
mov
mov
imul
or
xchg
mov
out
cmps
xor
bound
mov
call
xlat
out
pop
mov
dec
xchg
jge
add
cmp
dec
mov
mov
fdivr
cmp
pushf
add
outs
mov
sbb
jmp
mov
inc
pop
xchg
int
addr16
pop
mov
in
je
jg
pusha
inc
cmp
adc
cli
ret
cmp
inc
jb
(bad)
(bad)
push
sbb
sub
mov
jae
clc
mov
jl
loopne
popf
inc
push
jb
ins
imul
cld
mov
mov
aaa
mov
dec
dec
sub
xor
and
test
push
lods
cmp
mov
dec
sbb
fsub
repnz
mov
add
jg
pop
test
in
pop
mov
sbb
xchg
pop
por
rcl
je
jle
jno
call
aas
or
cld
jg
sti
push
call
lods
jnp
ret
mov
lods
mov
adc
add
iret
ja
xchg
cmps
sub
cmp
popf
pop
xchg
jp
enter
cmps
je
add
es
fcom
movs
add
cmp
movs
ja
dec
lock
lahf
pop
pop
je
mov
fistp
jg
popa
dec
movs
mov
xlat
movs
dec
push
loope
dec
sub
ret
cmp
cmp
add
out
sbb
mov
popf
mov
cmps
test
mov
cli
call
or
icebp
inc
into
push
or
(bad)
lds
addr16
adc
fs
sar
mov
hlt
retf
out
gs
aas
sbb
xchg
dec
iret
push
xor
xchg
sub
popf
(bad)
add
(bad)
loop
adc
aam
or
jnp
sub
ja
push
cmps
and
xor
scas
mov
xchg
add
mov
(bad)
call
or
sbb
lahf
sbb
push
sbb
xchg
sbb
cmove
(bad)
(bad)
pushf
(bad)
jg
jnp
rcr
out
fild
ror
inc
push
sbb
fcom
mov
dec
jmp
sbb
fcmovu
jmp
inc
fistp
enter
or
mov
push
fistp
iret
push
repnz
test
loopne
lods
fwait
or
sub
and
push
aad
cwde
scas
outs
out
movs
sbb
cmp
out
xchg
mov
popa
daa
test
and
lock
adc
adc
mov
enter
fstp
sbb
mov
inc
mov
sahf
mov
jb
or
in
cmp
out
jmp
sbb
jno
dec
xchg
pop
or
dec
xchg
leave
fdiv
inc
jae
push
cdq
clc
inc
mov
xchg
and
addr16
xchg
pop
add
push
cmp
lea
(bad)
das
xor
outs
sub
mov
fsubr
xchg
addr16
int
push
push
retf
ror
sbb
es
sub
xchg
xchg
hlt
ss
vpminsw
xor
cmp
add
ret
add
pushf
shr
popf
cdq
stos
add
push
or
dec
sbb
mov
pop
test
jle
das
dec
retf
imul
(bad)
jns
int3
mov
or
dec
loopne
inc
push
sub
test
xchg
pop
mov
mov
stc
push
pop
fidiv
(bad)
test
iret
sbb
repnz
xlat
xor
idiv
imul
clc
or
or
cmp
loopne
pop
xchg
gs
fmul
dec
out
push
je
aad
stos
mov
imul
fild
retf
ins
pop
adc
mov
push
jp
sub
inc
pop
push
fwait
cmc
xor
(bad)
mov
cli
mov
mov
mov
mov
mov
aas
das
dec
cmp
imul
inc
sbb
stos
sahf
cs
inc
mov
retf
push
jnp
mov
xchg
jge
gs
xchg
xor
aas
mov
adc
pop
fwait
jae
cmps
icebp
jecxz
neg
imul
stos
movs
push
cmp
sbb
adc
mov
add
pop
cdq
shl
jge
push
xchg
xlat
pop
mov
in
inc
fwait
mov
hlt
xchg
(bad)
std
ror
push
stc
retf
popa
push
je
stc
xor
or
mov
inc
sub
jmp
xchg
fimul
div
call
rol
mov
push
repz
popf
jo
dec
fisttp
lock
pop
sub
push
popa
aas
imul
fwait
mov
xchg
in
repz
mov
sti
jge
push
ins
out
aaa
push
sbb
(bad)
and
push
inc
stos
lea
pop
mov
pusha
pop
imul
hlt
mov
jo
cmp
cmp
pushaw
push
ds
cmp
push
ss
popa
push
imul
or
mov
mov
push
out
jmp
and
popa
dec
xor
xchg
cmp
ins
shr
popa
mov
lahf
(bad)
bound
jl
stos
jb
aam
inc
int
iret
cmp
aaa
imul
es
add
and
out
mov
leave
cli
mov
sub
mov
fwait
adc
xor
pop
cmps
inc
push
mov
sub
or
pop
cmp
ss
or
jns
and
popa
add
cmps
add
cmps
mov
sbb
mov
adc
cmp
add
in
ret
shl
mov
xchg
movs
push
mov
shr
lods
push
rcr
xor
pop
push
lods
add
or
stos
push
sbb
in
in
mov
mov
pusha
mul
add
xlat
mov
fisttp
int3
stc
repz
js
je
jecxz
jno
sti
pop
or
cmp
or
mov
push
cmp
cmp
jns
push
cmps
loopne
(bad)
xchg
cmp
outs
pop
stc
ret
cmps
lahf
fcmovnb
(bad)
mov
dec
call
imul
jge
stc
dec
push
inc
loope
inc
jmp
and
sub
lock
mov
and
std
mov
pop
sbb
and
or
fmul
cli
scas
imul
retf
fisttp
dec
xor
enter
jmp
sbb
dec
adc
mov
lahf
dec
mov
xchg
sub
or
cmp
or
cwde
fdiv
push
push
test
movs
nop
mov
cmc
mov
mov
sar
add
mov
adc
cmp
xlat
(bad)
scas
xchg
or
cwde
and
lock
sahf
adc
cmps
ror
addr16
push
sbb
mov
or
mov
sbb
push
inc
call
xchg
ins
mov
in
dec
mov
int3
(bad)
bound
bound
mov
dec
jb
test
jmp
xchg
jae
je
imul
fnstcw
sti
sti
fwait
inc
adc
dec
ins
lods
xor
sub
mov
xor
mov
push
stos
test
jae
ror
ins
jmp
jbe
mov
(bad)
push
rcl
xchg
xor
fist
ins
xor
xor
push
dec
xor
mov
adc
pushf
ds
xchg
rcl
cmp
lahf
mov
sbb
add
(bad)
gs
push
loopne
add
imul
sub
mov
(bad)
push
fadd
jbe
jbe
jge
cmp
sar
stc
addr16
jmp
sbb
sbb
int3
pop
retf
sub
and
cmp
pop
int3
jbe
loope
or
std
cld
pop
popf
outs
fcom
gs
out
loopne
nop
fidiv
or
sbb
jge
mov
add
dec
test
aad
xchg
sbb
ret
test
jge
add
xor
dec
push
lea
lock
jmp
push
mov
pop
pop
jge
mov
adc
push
sbb
ret
das
or
mov
stos
push
fnsave
out
out
(bad)
push
adc
mov
and
int
lds
or
sbb
inc
inc
out
dec
cmp
into
or
pop
stos
xor
sub
xchg
ss
(bad)
cmps
daa
cli
cwde
aam
call
push
movs
fsub
scas
imul
mov
ror
sbb
ss
std
cmp
loope
or
xchg
mov
ss
cld
rcr
cld
jecxz
pop
es
mov
sbb
xor
mov
ins
mov
push
push
pop
test
mov
popf
fwait
aam
inc
mov
sbb
mov
stos
add
scas
fstp
mov
ja
icebp
sbb
mov
std
scas
mov
es
mov
sbb
cwde
sahf
push
pop
jae
mov
push
lahf
in
test
adc
leave
and
jns
jno
xor
add
test
mov
mov
pop
xor
test
xor
lds
sbb
rep
mov
mov
push
jno
pop
jbe
repnz
rcl
rcr
add
fistp
rcr
sub
pop
and
sbb
mov
arpl
enter
inc
adc
push
mov
xor
push
xlat
mov
jg
jae
mov
push
add
out
and
inc
mov
(bad)
movs
jne
lock
or
int3
idiv
inc
xor
pop
mov
imul
shl
fist
ins
inc
aam
sbb
mov
mov
adc
cdq
sub
inc
int3
(bad)
sti
or
or
mov
xchg
jg
xor
stc
xlat
std
dec
call
xor
push
lods
adc
cmp
or
in
adc
jmp
xor
mov
ds
sahf
cli
or
sub
jb
fnsave
ficomp
es
ret
lods
lods
add
cmps
jecxz
(bad)
nop
xor
neg
adc
fstp
dec
test
fstp
jle
fs
xor
loopne
popa
and
sbb
cmp
ss
and
jno
or
ins
lahf
mov
pop
push
xor
xchg
adc
inc
mov
xor
movs
push
imul
dec
mov
add
push
push
mov
movs
imul
arpl
pop
add
jo
pusha
mov
repz
ins
pop
cmp
cmp
out
sub
push
pop
xor
out
loopne
xchg
sub
push
ja
jns
sbb
shl
pop
dec
cmp
ins
pop
iret
push
sbb
xchg
and
in
add
gs
repz
repnz
lahf
jmp
jne
xchg
ror
add
popa
inc
inc
push
fsub
repz
push
cmp
push
rcl
push
xchg
pop
fdiv
inc
sti
clc
dec
mov
xor
lods
cmps
popf
pop
pushf
sar
addr16
mov
shl
ret
fst
cmp
push
pop
dec
sub
jmp
dec
push
push
pop
xchg
xor
add
leave
fs
(bad)
iret
pop
pop
xor
rcr
cwde
stc
dec
adc
addr16
div
mov
xor
retf
fdiv
sbb
mul
dec
pop
xchg
ins
mov
dec
repnz
adc
add
ret
mov
lods
cwde
cmp
pop
xchg
lods
fadd
ins
dec
out
pop
repz
es
add
xor
pop
add
mov
inc
mov
push
pop
addr16
in
das
stos
sub
fdivr
cmc
inc
sub
sbb
mov
mov
test
das
and
or
scas
sub
not
mov
pushf
pushf
inc
out
adc
dec
sub
(bad)
clc
push
mov
pop
in
add
jl
movs
aaa
xor
int3
xor
push
inc
dec
into
mov
movs
xlat
or
out
hlt
sub
mov
dec
push
in
jge
addr16
adc
arpl
das
jecxz
aam
xor
jae
jo
call
push
mov
mov
mov
mov
into
dec
es
add
mov
or
xor
xchg
and
jmp
inc
add
sub
(bad)
adc
stos
sbb
pop
movs
add
(bad)
in
fidivr
das
pop
or
test
mov
cld
pusha
inc
cwde
test
mov
rol
and
dec
push
xchg
sbb
jb
std
addr16
jne
adc
push
js
and
lock
cmp
pop
std
sbb
in
imul
repz
imul
sub
sub
xchg
daa
ret
and
or
adc
test
movs
sub
test
xchg
cmp
pop
hlt
dec
mov
add
stos
jb
data16
push
cmp
inc
mov
rol
je
out
fist
pop
mov
sbb
jb
imul
call
jbe
(bad)
(bad)
pop
lahf
fidivr
xlat
xchg
xchg
pusha
inc
imul
sbb
cwde
xor
jbe
mov
leave
jb
mov
and
out
and
inc
hlt
test
loopne
hlt
mov
mov
push
test
lods
pop
leave
mov
sub
leave
aam
sub
gs
xor
ins
arpl
test
movs
inc
nop
mov
cmp
push
cmp
jl
(bad)
jmp
movs
jg
inc
in
(bad)
int
cmp
sbb
dec
mov
sti
fistp
cld
clc
push
jmp
pop
mov
cmps
jmp
movs
sti
mov
iret
cdq
xlat
jl
sub
mov
(bad)
stos
or
ret
call
jae
(bad)
mov
mul
mul
push
push
inc
imul
jge
into
cmp
mov
ss
mov
mov
add
mov
rol
sbb
sbb
mov
push
(bad)
and
push
mov
ins
popa
inc
adc
pusha
cwde
clc
ins
outs
pop
imul
bnd
push
sbb
ret
jo
mov
dec
cmp
mov
xor
ins
mov
add
fwait
sahf
mov
out
data16
mov
int3
mov
cmp
add
cmp
and
cmps
pop
clc
icebp
adc
sbb
(bad)
shl
movs
mov
fdivr
xchg
and
pop
mov
ds
mov
aam
mov
add
jnp
cmp
pusha
stos
fiadd
int3
pop
inc
aam
jne
lahf
adc
js
sbb
cdq
dec
push
hlt
movs
imul
lods
add
fistp
(bad)
out
dec
(bad)
stos
(bad)
cmp
inc
cwde
test
sti
xor
imul
(bad)
pop
pusha
es
pop
enter
fcom
fsubr
(bad)
ror
push
and
and
xor
sub
rol
stc
push
push
cmp
mov
cld
or
call
test
push
pop
mov
imul
test
cmp
pop
push
xlat
adc
jecxz
and
addr16
xor
ds
mov
cld
not
and
jge
jne
call
test
imul
les
jmp
and
dec
adc
stc
dec
retf
inc
inc
movs
mov
stos
cld
mov
xchg
icebp
mov
cld
sub
aam
lods
or
jl
sbb
xchg
adc
fnstcw
mov
stos
push
add
jb
xor
push
adc
imul
push
dec
sub
mov
push
daa
add
pusha
ret
mov
in
push
dec
cli
mov
iret
jmp
shl
sar
push
mov
mov
mov
adc
ret
sub
xchg
mov
jecxz
or
jae
xor
xchg
xchg
mov
push
ja
lock
(bad)
push
xchg
mov
cmp
and
push
cmp
cmp
stos
adc
jmp
mov
cmp
shl
mov
mov
push
sub
pop
mov
sahf
out
push
dec
adc
adc
clc
mov
sbb
fistp
mov
retf
pop
inc
retf
arpl
lahf
lods
push
jp
dec
loopne
scas
daa
ins
push
loop
mov
xchg
xor
xchg
jbe
mov
adc
retf
int3
or
popf
mov
xchg
test
stos
(bad)
(bad)
xor
data16
and
sub
ret
cmp
retf
mov
inc
mov
retf
cs
push
std
lahf
jns
xchg
lea
sbb
sbb
into
pop
lods
add
push
fadd
repz
cmc
push
mov
mov
dec
xor
cmp
sbb
and
leave
jmp
hlt
shl
pop
enter
pop
fdiv
stos
lods
addr16
jecxz
test
or
cmc
inc
mov
out
adc
idiv
enter
aaa
sbb
jae
fdiv
xchg
mov
movs
xchg
xor
jns
arpl
mov
jnp
cmps
jge
out
rcr
cs
add
push
in
mov
mov
movnti
mov
sub
mov
push
or
int3
inc
jne
ss
sub
and
shr
outs
pop
imul
add
popa
inc
cmp
imul
ds
es
fild
pop
test
sub
mov
or
add
ret
cld
repnz
nop
mov
or
std
mov
cwde
(bad)
out
xchg
imul
or
dec
inc
(bad)
mov
inc
cmps
mov
cmp
sub
inc
mov
stos
aas
shl
jb
enter
mov
lods
pop
mov
jecxz
and
pop
out
scas
add
inc
mov
cmp
pop
push
outs
and
mov
das
popa
addr16
cmp
sti
dec
mov
or
dec
stos
or
fs
mov
push
ror
out
scas
xchg
mov
xchg
imul
sbb
jle
mov
xlat
xor
cmp
jl
outs
neg
inc
and
enter
jp
push
jo
pop
addr16
(bad)
sbb
mov
int
cmp
jne
mov
sbb
xor
fwait
push
pop
jmp
ret
push
(bad)
jecxz
xchg
test
push
pop
outs
pop
add
cld
js
mov
cmp
ja
cwde
cmc
movs
je
inc
jmp
icebp
push
test
or
pop
and
xor
lods
inc
and
xor
popf
xchg
or
out
cmps
ret
mov
cdq
push
test
or
mov
lds
imul
movs
or
loope
dec
nop
jno
inc
test
imul
push
mov
out
jle
add
inc
add
push
into
xchg
imul
shr
jecxz
(bad)
jecxz
lea
xor
mov
dec
adc
in
clc
jg
movs
out
std
jmp
inc
xchg
pushf
add
add
add
xor
and
mov
inc
mov
call
call
mov
cwde
imul
cmps
push
stos
mov
das
and
popf
mov
fbld
jne
mov
shl
or
sub
sbb
test
mov
out
pop
jns
add
call
outs
adc
mov
(bad)
pop
push
mov
stos
aam
loope
imul
mov
je
sbb
mov
xlat
inc
push
xchg
in
into
adc
div
cmps
daa
or
popa
jae
punpckhwd
or
lods
cli
mov
ffree
ficom
sub
push
dec
cmp
dec
stc
dec
mov
fidiv
outs
mov
leave
dec
lea
xchg
push
mov
jmp
in
in
pusha
pop
pop
push
out
daa
jo
mov
push
sar
div
rcl
xchg
nop
adc
push
push
xchg
mov
sahf
stos
rcr
mov
test
fldcw
loope
inc
outs
and
ret
paddusb
test
jne
push
mov
sbb
pop
jecxz
adc
cld
or
push
xor
sbb
daa
outs
leave
or
and
push
aam
in
jo
mov
sub
mov
bound
jbe
jmp
div
xchg
lock
(bad)
(bad)
ins
loopne
cmp
movs
jle
lock
mov
push
or
lahf
imul
imul
cmc
adc
imul
and
les
mov
repz
cld
add
jle
gs
adc
dec
xchg
in
repnz
mov
imul
jmp
pop
and
jne
or
mov
mov
dec
xor
rcr
add
test
add
pusha
pusha
jmp
shl
je
popf
test
mov
mov
adc
mov
mov
jg
lock
bound
pop
pop
xlat
popf
clc
pop
fisttp
inc
mov
push
call
and
inc
inc
fisubr
pushf
dec
popf
push
jmp
mov
mov
int
ficomp
(bad)
iret
push
cld
fisub
xlat
cmc
mul
inc
movs
sbb
ss
inc
mov
out
iret
mov
icebp
pop
inc
or
inc
imul
mov
and
push
and
dec
push
imul
xchg
icebp
push
sbb
sub
pop
cmps
push
shl
scas
imul
hlt
xor
jl
iret
fimul
test
in
push
jne
mov
xchg
jnp
sub
pop
shl
test
inc
cmc
push
pop
test
cmp
fcomp
adc
and
pop
sub
add
vpcmpgtb
in
mov
out
(bad)
cmp
fidivr
push
(bad)
xor
dec
mov
jo
in
cmps
and
jge
not
inc
into
nop
(bad)
jg
adc
lea
rcl
in
mov
and
and
rol
push
movs
repnz
jb
mov
fstp
ret
push
cmp
sbb
mov
or
aad
fld
int
push
push
sbb
adc
std
adc
sub
ret
adc
xor
jg
jg
sbb
mov
ds
je
push
mov
inc
imul
cs
mov
stc
pop
mov
cli
xor
cmp
lods
inc
xchg
mov
shl
pop
mov
lds
push
imul
js
mov
bt
dec
add
aas
pop
scas
mov
mov
sbb
sbb
mov
rcl
test
out
jno
cdq
add
mov
jo
fs
mov
js
sahf
jmp
xchg
loopne
mov
xor
sub
pop
sub
in
loope
or
pusha
cmp
fsubr
inc
jge
pop
retf
push
add
lds
int
lock
stos
push
dec
jge
cmc
or
repz
in
or
fs
out
sub
adc
xor
ficomp
(bad)
lahf
hlt
aad
iret
popf
in
test
mov
pop
ins
lahf
lea
lods
nop
rol
out
inc
loopne
xlat
or
lds
jb
add
out
mov
or
or
cmp
lds
std
jb
scas
cdq
mov
fsubr
ret
aam
inc
sbb
dec
cli
dec
jg
clc
les
or
into
pop
je
cmp
mov
mov
aas
push
ins
cs
clc
popf
ins
dec
pushf
call
inc
jmp
mov
mov
mov
es
outs
dec
sub
cmp
sub
aas
pushf
pop
and
fimul
ffree
scas
jle
(bad)
fidiv
ins
outs
lock
cs
add
(bad)
mov
je
sahf
pusha
xchg
cmp
lods
mov
das
repnz
sub
inc
sub
arpl
jp
fisubr
xor
(bad)
push
pop
sub
cmp
xlat
out
cli
mov
mov
loopne
inc
mov
nop
push
push
xlat
jno
sub
sub
xor
mov
pop
pop
add
push
xchg
cmc
adc
push
and
adc
(bad)
mov
sub
jb
pop
call
lds
dec
ss
cmp
vmovd
popf
pop
xor
shl
std
jg
and
stos
push
inc
mov
(bad)
mov
lock
mov
lods
cmp
mov
adc
jmp
pop
adc
cli
sahf
mov
in
inc
jl
jae
xor
inc
arpl
adc
xlat
sub
sub
mov
mov
retf
mov
popa
lea
inc
test
lods
xor
adc
jmp
xchg
mov
mov
pop
inc
int
sub
mov
test
lods
pmaxsw
(bad)
ins
push
push
jle
fst
or
xchg
jns
inc
adc
ds
fldenv
jne
in
leave
pop
cmp
cmp
pusha
xchg
jbe
pop
fldcw
cwde
dec
popa
ror
retf
mov
lahf
cmc
jnp
xchg
mov
dec
test
pusha
mov
stc
stos
shr
outs
dec
call
in
scas
mov
(bad)
dec
das
std
xchg
jmp
pop
jo
(bad)
stc
inc
mov
sub
sbb
(bad)
sub
addr16
mov
dec
gs
arpl
mov
mov
sbb
call
int
(bad)
fdiv
xchg
outs
sbb
inc
outs
cli
mov
nop
scas
dec
or
jge
pop
dec
mov
lods
scas
push
push
shl
les
mov
in
test
jecxz
or
jbe
test
jb
outs
data16
loop
cmp
loopne
mov
shr
jae
push
test
push
or
inc
add
sbb
inc
pusha
rcr
ret
mov
push
ret
fbld
inc
mov
mov
data16
movs
pusha
mov
iret
mov
sub
int
enter
imul
inc
cmps
out
leave
cmp
adc
out
mov
push
inc
pop
mov
inc
test
and
and
fdiv
retf
std
out
jmp
mov
popa
movs
aam
pop
inc
pop
stc
cli
push
jmp
inc
jmp
or
int3
pusha
mov
(bad)
iret
or
inc
push
pop
xchg
xor
pop
sub
jne
popa
push
shl
mov
jecxz
inc
shl
inc
(bad)
mov
xchg
(bad)
imul
popa
mov
xor
jmp
mov
icebp
loope
mov
adc
xor
lods
(bad)
jb
xchg
mov
xchg
cmp
add
outs
push
test
jp
mov
add
jmp
fdiv
adc
ret
and
ja
fsubr
push
xor
jecxz
xchg
sti
dec
or
cmp
push
mov
or
push
jno
sbb
cmp
push
sbb
aas
jae
shl
add
sahf
mov
pop
es
or
inc
inc
sbb
mov
test
inc
or
aad
daa
shr
fs
call
mov
(bad)
mov
push
jbe
dec
sbb
neg
add
cwde
mov
jle
dec
dec
push
cli
popa
out
fbstp
int
nop
call
out
ficom
aam
ja
lods
loopne
sahf
dec
mov
jl
stc
push
adc
push
leave
fsave
das
retf
outs
xor
xor
sub
adc
fldcw
cmps
and
leave
xchg
push
dec
lea
fisubr
in
int
pop
mov
ffree
dec
sub
sub
pop
mov
sub
clc
cmp
push
cli
lds
mov
imul
push
sub
sahf
xor
call
or
outs
or
sub
out
and
xchg
fsubr
cmps
mul
mov
mov
xchg
cwde
pop
aas
or
dec
sahf
sub
jns
adc
dec
(bad)
dec
jae
inc
sti
test
in
adc
jnp
out
out
stos
xchg
jo
ins
inc
ror
mov
fdiv
cmp
push
sbb
lea
jge
mov
mul
mov
movs
out
mov
cmps
js
out
mov
xor
sbb
pop
xchg
mov
(bad)
neg
test
dec
jecxz
pop
in
sub
mov
cmps
inc
popa
adc
data16
push
in
sbb
sub
and
(bad)
or
ss
mov
pusha
sub
mov
jl
dec
repnz
and
push
cmp
adc
sub
adc
cmps
jnp
cmp
in
jb
pop
ficomp
retf
add
push
dec
push
sub
sub
pushf
(bad)
std
push
leave
in
sub
jl
ficomp
(bad)
ins
(bad)
ja
(bad)
jo
mov
add
cmp
sahf
xchg
jmp
scas
stos
cmp
inc
cmp
pusha
or
loopne
add
inc
mov
in
in
scas
imul
repz
js
xchg
xor
jbe
inc
in
shl
xor
xor
xor
xchg
(bad)
fidivr
xchg
ror
or
(bad)
in
pop
fld
rcl
in
jl
lea
xchg
and
scas
ins
sub
or
addr16
retf
push
shr
stos
sbb
(bad)
shl
mov
pop
lahf
jl
dec
cmc
call
sbb
out
ins
jge
adc
add
ret
mov
ret
stc
popf
pop
fdivr
and
test
icebp
dec
add
cdq
and
mov
pop
aam
xlat
cwde
adc
out
jae
push
mov
mov
inc
lock
out
cmp
push
movs
aad
push
and
sub
shl
jmp
or
sbb
cdq
outs
push
xchg
out
repz
retf
mov
jnp
shl
bound
loopne
mov
mov
enter
ret
inc
imul
mov
pushf
adc
int3
mov
movs
mov
or
fwait
add
push
addr16
jns
adc
imul
dec
lods
dec
fldpi
mov
jmp
adc
iret
loop
jo
daa
js
cwde
sahf
mov
aas
jno
shr
lods
jns
push
pusha
pop
and
or
fs
test
sbb
aad
xchg
xor
xor
fadd
shr
(bad)
jns
inc
sbb
data16
lods
jmp
les
mov
cmps
int3
mov
mov
(bad)
push
xor
push
loopne
ret
jo
leave
outs
xchg
cwde
fcomip
inc
shl
add
imul
sbb
or
xchg
je
mov
imul
xor
jae
adc
xlat
(bad)
pop
add
jmp
mov
ins
and
inc
push
cmps
cld
adc
push
loop
push
fiadd
call
iret
nop
sub
mov
xor
sbb
out
cmp
xchg
cmp
sbb
sar
mov
in
(bad)
push
jae
jns
cmp
adc
aas
(bad)
jl
(bad)
jae
inc
jmp
imul
sar
cmp
fcom
sub
sbb
adc
enter
loope
sti
(bad)
adc
push
rcr
dec
mov
cmps
jno
jmp
xchg
ret
fwait
inc
(bad)
mov
inc
xchg
push
test
ds
enter
jns
push
cmc
mov
adc
jge
cld
fdivp
adc
movs
cs
cmc
pusha
and
sub
ror
lds
call
xchg
add
call
inc
adc
mov
jmp
nop
pop
lock
stos
out
pop
pop
shl
add
adc
outs
xor
not
pop
cld
or
cmp
adc
push
add
xlat
cwde
xlat
movs
add
cmps
(bad)
dec
mov
dec
sbb
mov
(bad)
mov
enter
inc
in
xchg
clc
fst
es
mov
dec
std
ret
into
pop
mov
xor
cli
add
mov
scas
sbb
push
js
or
mov
icebp
out
shr
cs
mov
gs
wrmsr
xor
xor
push
aad
test
fist
je
pop
xor
xor
int3
(bad)
cmp
push
je
aad
mov
fs
mov
dec
sub
repnz
dec
cmps
pop
leave
cmp
and
loopne
movs
in
cli
xchg
shl
loopne
xchg
mov
adc
loope
das
mov
mul
cmp
scas
push
fnstcw
int
mov
retf
jmp
add
out
sub
fwait
loop
gs
les
pop
int
outs
xor
and
sub
mov
mov
std
stc
inc
rcr
fistp
cmp
mov
cmp
loop
jo
cli
scas
sbb
mov
sbb
outs
and
inc
aad
popf
les
pop
movhlps
sar
aad
loopne
outs
cmp
sbb
shr
adc
mov
push
xchg
dec
(bad)
dec
adc
popf
in
(bad)
mov
push
adc
in
lods
push
cld
jbe
adc
dec
mov
sub
mov
adc
xchg
xchg
repz
retf
jmp
or
or
ror
aaa
push
cdq
fdiv
inc
mov
inc
mov
popa
pop
add
les
std
into
cld
pop
pushf
sbb
imul
sub
repz
out
(bad)
ss
dec
ret
clc
int
xlat
mov
mov
into
dec
or
jge
pop
pop
xor
mov
or
mov
sbb
xchg
call
out
jno
xor
or
mov
shr
or
or
adc
xor
inc
jecxz
xlat
out
out
in
mov
rol
jb
sub
arpl
mov
out
in
loopne
mov
or
inc
cdq
xchg
sub
jno
outs
std
(bad)
mov
in
sbb
cmps
repnz
es
retf
cmps
sub
bound
in
dec
test
loop
xchg
cmc
mov
scas
sar
dec
xchg
jns
jg
sbb
dec
adc
mov
stos
sahf
jbe
rol
aad
and
jo
cmc
retf
dec
pop
pmulhuw
dec
and
sub
out
xchg
mov
pop
ss
mov
fisubr
mov
push
daa
pop
and
ds
pop
loope
mov
pop
nop
inc
inc
aad
xlat
adc
inc
mov
push
repz
test
test
mov
ret
jmp
pop
add
jbe
adc
test
es
ret
dec
sahf
push
and
mov
outs
adc
sti
pop
jg
fwait
mov
sbb
jge
out
pop
xchg
mov
and
(bad)
jle
cmp
cmp
mov
retf
sub
push
or
xchg
fnstsw
cwde
and
dec
mov
push
push
out
sbb
in
sar
test
pop
mov
pop
inc
adc
push
xor
mov
mov
cmp
sahf
fdivr
or
jne
dec
sbb
cmp
int3
fsubrp
mov
shl
(bad)
fnstenv
repnz
out
ins
cmps
sbb
and
test
cld
daa
jnp
fmulp
lods
inc
pusha
or
cmp
jecxz
pop
inc
scas
test
xchg
xchg
(bad)
hlt
lods
jl
sbb
jne
fisubr
in
test
movs
cmp
data16
fnstcw
mov
mov
add
mov
adc
cld
mov
push
dec
mov
into
add
in
add
and
cmc
movs
jo
or
call
mov
ds
sar
and
stos
daa
sti
cmp
mov
mov
sbb
or
sub
(bad)
loop
mov
es
cmp
rol
stos
enter
jecxz
jns
push
jns
stc
mov
adc
pusha
xor
sbb
loope
scas
dec
adc
repnz
in
test
push
xchg
aam
jg
xor
push
mov
scas
aad
shr
pop
(bad)
fimul
shl
push
pop
or
mov
cmp
mov
fiadd
and
retf
push
mov
mov
stos
psllq
pushf
call
in
mov
push
and
mov
inc
fmul
cwde
push
stos
aam
std
mov
jb
sub
mov
rol
pop
movs
and
ss
icebp
sti
and
mov
rol
fstp
sub
dec
ins
and
xchg
dec
xchg
sar
out
inc
ror
push
movs
arpl
nop
stos
sbb
jmp
outs
xchg
xor
lahf
shl
xlat
cmp
int3
add
dec
mov
and
inc
mov
dec
call
sbb
cmp
xor
retf
cld
cmp
stos
mov
jmp
psubd
push
je
sbb
repnz
out
mov
in
xchg
jecxz
mov
mov
add
lds
mov
(bad)
rcr
dec
aam
sbb
icebp
mov
in
add
ja
addr16
push
daa
das
xchg
jmp
imul
hlt
ins
and
xor
xlat
sub
adc
inc
xor
aam
sbb
jecxz
xor
cmp
mov
jo
dec
cdq
jge
aas
mov
push
sbb
jl
mov
inc
jmp
call
daa
pop
mov
sub
adc
xor
cwde
xor
stos
lods
ds
mov
icebp
stc
mov
enter
pop
dec
(bad)
jmp
rcl
arpl
scas
jb
repz
sub
(bad)
leave
mov
mov
dec
mov
mov
mov
fcomi
sbb
gs
mov
and
mov
push
pusha
mov
out
push
push
mov
aas
add
mov
mov
lds
stos
or
pop
ja
test
mov
scas
and
sbb
out
xor
pop
cwde
cs
mov
jle
push
jge
ror
popaw
aam
inc
dec
mov
and
mov
xor
jnp
repz
xchg
mov
inc
adc
adc
mov
fdivr
ins
jle
adc
xor
fsubr
push
test
xlat
(bad)
adc
pop
sahf
dec
stos
retf
mov
movs
or
retf
or
inc
xchg
mov
mov
rcr
test
xchg
sahf
call
or
xor
mov
clc
jo
xor
cmp
and
hlt
xor
out
inc
push
sub
xor
mov
shr
sar
add
xchg
mov
call
lods
repnz
ja
call
inc
adc
rcr
imul
adc
outs
fimul
mov
inc
mov
sar
imul
jbe
mov
ret
lods
push
mov
hlt
cwde
adc
push
adc
jbe
mov
cmps
ins
mov
pusha
add
or
jp
or
or
inc
xchg
fcom
and
or
stc
xchg
xchg
and
inc
xchg
fwait
mov
mov
hlt
mov
adc
test
mov
sbb
push
stos
fincstp
sbb
lea
int3
inc
mov
jl
xor
xor
dec
hlt
xor
add
test
rcr
fcmovbe
mov
add
inc
repnz
retf
dec
outs
clc
prefetch
fcomp
adc
call
cmc
push
pop
or
cwde
and
push
mov
pop
adc
mov
in
out
pop
mov
out
and
xor
and
cmp
pop
daa
mov
jmp
pop
mov
retf
cli
shl
xchg
xchg
pxor
sub
xor
jge
sbb
ins
cmp
pop
cwde
scas
jno
xchg
pop
xchg
cmps
pop
mov
rcl
dec
cmps
(bad)
shl
dec
ss
stos
pop
push
movs
js
xor
mov
retf
inc
lock
pop
jmp
jmp
scas
ins
enter
adc
inc
ins
xor
jp
(bad)
(bad)
xchg
inc
das
(bad)
or
scas
or
icebp
dec
push
sub
aam
ret
mov
ja
xor
push
movs
loop
sbb
in
dec
aad
xor
mov
lods
adc
mov
jl
xchg
dec
shl
cmps
addr16
rol
outs
xor
push
inc
popa
inc
mov
sti
adc
data16
sti
mov
out
outs
cmps
inc
loope
aad
or
xchg
mov
pop
sbb
lods
dec
add
dec
inc
sub
shr
pop
ja
js
dec
outs
mov
aam
cmp
imul
aas
mov
fs
mov
iret
ror
cmps
and
mov
cmp
retf
push
adc
(bad)
sbb
cmp
fstp
cmp
call
sbb
shl
call
dec
fdivr
pop
call
dec
pand
jmp
mov
adc
sar
fs
sbb
push
dec
xchg
ins
fs
push
jl
jge
pop
inc
xcrypt-ofb
cmps
ins
xchg
sbb
loop
bound
mov
test
pop
in
popf
cmp
mov
inc
pushf
stos
pop
dec
data16
mov
cmp
dec
pop
push
inc
xchg
movs
xchg
sahf
cmp
jb
cmp
xor
movs
test
xchg
xor
pop
cmp
jb
add
push
mov
cmp
test
and
cs
mov
nop
pop
nop
inc
aam
les
and
xor
out
pop
sahf
or
push
push
ss
xor
in
cmp
and
neg
cmp
jno
(bad)
and
call
mov
mov
fidivr
dec
pop
lea
mov
(bad)
sahf
inc
fistp
(bad)
leave
and
lahf
cmp
adc
mov
fsub
aas
push
add
imul
mov
adc
sub
movs
mov
or
icebp
adc
movs
inc
jae
neg
cmp
jns
ss
test
push
lods
push
in
scas
fwait
stos
scas
and
stc
cmps
xchg
or
mov
(bad)
pop
in
mov
cmp
cmps
cmp
daa
in
cmps
(bad)
and
clc
rcl
retf
xchg
push
mov
popf
iret
sub
retf
aad
icebp
pop
fnstcw
pusha
xor
aaa
cmp
jg
xlat
dec
pop
or
fwait
popf
addr16
jecxz
or
cmp
xor
cmp
lods
and
(bad)
outs
pusha
or
aad
fs
hlt
inc
int
dec
push
inc
or
cs
fsubp
mov
and
xchg
das
movd
xor
sbb
mov
stos
fild
fucomp
fiadd
jmp
dec
adc
loop
and
pop
xor
adc
push
ins
mov
das
xor
ja
cmps
fst
lods
fcom
mov
pop
dec
cmp
sbb
mov
sub
(bad)
xchg
std
push
xor
jnp
int
xchg
sbb
inc
addr16
jmp
popf
adc
scas
and
adc
pop
out
adc
out
loopne
mov
repnz
jbe
mov
cdq
jp
or
and
mov
out
inc
pop
loop
sub
inc
push
add
mov
lahf
dec
mov
xor
movs
inc
hlt
arpl
push
outs
jle
rol
sbb
into
mov
xor
movs
and
lea
and
(bad)
cmp
xor
or
and
dec
jbe
hlt
in
mov
mov
xchg
lea
std
fist
xor
jno
xlat
pusha
add
loop
fiadd
mov
sbb
lahf
jmp
loop
dec
sbb
jmp
or
loopne
mov
mov
push
mov
imul
jb
push
aad
pop
cdq
pushf
cmps
je
pop
loopne
or
aaa
dec
and
(bad)
aaa
dec
jmp
int3
mov
sbb
loopne
sub
add
sub
pop
(bad)
jmp
outs
leave
aaa
sub
push
push
scas
jns
xor
fmul
jg
leave
push
jg
mov
xor
call
add
dec
mov
sub
push
mov
fst
sub
movs
inc
call
stos
outs
imul
dec
push
bound
sub
jp
push
sub
fs
out
mov
lea
adc
aam
sbb
jb
sbb
ret
jne
mov
push
push
jns
adc
call
aas
movs
popa
push
mov
movs
retf
xchg
sub
mov
jns
enter
xor
jae
dec
loop
adc
and
xor
pop
cld
ss
aaa
inc
mov
mov
inc
cmp
push
jo
je
dec
mov
neg
push
ins
ret
xor
stc
lea
das
aas
inc
test
loop
mov
fxch
rcl
push
pop
lods
stos
cmp
xchg
jbe
scas
pop
push
ret
scas
mov
mov
in
cmp
mov
inc
sar
pop
push
test
ins
fisubr
xchg
jmp
ss
sbb
ror
jmp
cdq
hlt
push
sar
xchg
mov
dec
lahf
movs
mov
mov
mov
jmp
stos
inc
xchg
sar
fdiv
add
mov
sbb
jl
mov
outs
sar
call
pop
mov
out
jb
nop
aaa
in
inc
(bad)
test
icebp
dec
es
sbb
mov
out
sahf
fidiv
rcl
movs
inc
xchg
and
add
out
adc
push
mov
cmp
sbb
mov
fwait
repz
push
imul
adc
mov
push
mov
pop
fs
unpcklps
xchg
mov
sbb
out
mov
sbb
push
sbb
push
(bad)
iret
xchg
scas
sbb
lods
repnz
shl
sub
mov
clc
retf
mov
fnsave
into
jmp
jle
jb
(bad)
mov
pop
or
fsub
arpl
add
mov
xchg
adc
add
test
cmp
or
xchg
in
pop
adc
pop
pop
pop
add
in
xchg
adc
cmp
out
jmp
inc
sbb
stos
mov
shr
jecxz
mov
and
int
aaa
sbb
test
xchg
sub
pop
jae
jnp
sub
pop
xchg
push
pop
sub
sbb
push
sbb
mov
mov
mov
cwde
scas
(bad)
pop
add
mov
mov
call
in
push
mov
sbb
imul
inc
fsub
pop
pop
mov
xor
iret
fldln2
jp
in
push
cli
hlt
xlat
les
int3
cmp
retf
addr16
mov
ds
shl
daa
xchg
or
inc
rcr
push
jns
push
mov
out
cdq
xlat
cwde
cmp
arpl
fdiv
mov
dec
jg
div
imul
lods
aad
push
pusha
push
xchg
pop
push
or
movs
xchg
lods
mov
adc
xchg
jae
xchg
jmp
fstp
test
mov
in
mov
jno
shl
hlt
mov
jo
and
push
xor
push
ror
(bad)
int
mov
imul
adc
lock
or
and
imul
adc
into
mov
out
mov
mov
mov
xchg
int3
sbb
mov
pop
push
jbe
mov
retf
(bad)
cdq
cwde
pushf
sub
inc
test
bound
mov
mov
sub
dec
sub
jmp
inc
jae
stos
xor
iret
fiadd
and
push
loopne
and
push
push
ins
loop
lods
and
and
pushf
imul
dec
add
xchg
xchg
sbb
add
iret
out
mov
or
cmp
sbb
cmp
dec
jo
mov
xor
push
jl
jmp
inc
push
mov
movs
sub
iret
cmps
or
in
sbb
ficom
ret
dec
mov
lea
mov
lods
fcmovnb
in
dec
push
test
jno
fisub
mov
xor
es
or
test
or
fsub
sub
jl
loope
add
loop
push
inc
jb
sub
sbb
fsubr
xor
setb
rcr
int3
pop
mov
xor
(bad)
les
fwait
or
push
lahf
cmp
xchg
pop
or
nop
imul
das
mov
aad
inc
push
gs
pop
add
jno
popa
xor
xor
mov
push
cdq
add
pop
ins
xchg
dec
loop
lods
sar
cmps
jne
cmp
cmps
or
and
mov
jmp
(bad)
popf
add
xchg
cmp
fwait
mov
push
xchg
out
and
cmp
inc
push
inc
xor
lds
jmp
retf
es
arpl
jmp
jmp
js
sar
fdiv
and
jmp
test
sbb
mov
out
mov
pop
imul
and
in
test
cmps
or
add
mov
xchg
imul
xchg
pop
cmp
mov
pop
test
pop
inc
test
mov
mov
popa
daa
or
add
lahf
sahf
ss
add
je
sub
or
push
jno
sbb
xor
(bad)
sbb
xor
push
call
ficomp
stc
push
cmp
and
inc
aam
xchg
scas
addr16
shr
adc
jo
mov
dec
fs
mov
test
xlat
sub
ret
push
and
sub
stos
lods
sahf
push
push
jnp
add
ins
stos
pushf
jecxz
xor
daa
mov
pop
or
sahf
std
xchg
and
dec
fisub
push
outs
and
arpl
sub
enter
or
mov
jmp
push
aas
and
out
xlat
stc
jnp
inc
jge
or
pop
xchg
add
pop
fimul
call
add
or
cmp
retf
mov
ja
push
js
test
mov
xchg
imul
idiv
xor
mov
sub
aad
test
add
mov
aam
call
mov
out
loope
mov
mov
js
test
pop
popa
loop
shr
inc
jno
cmp
imul
xor
sub
pop
inc
push
mov
dec
loop
std
arpl
and
dec
push
and
cmps
cli
and
addr16
test
shr
pushf
pop
jae
jle
push
popf
push
pushf
out
inc
lea
xchg
xchg
jecxz
dec
enter
test
push
cmp
and
push
test
(bad)
xchg
inc
icebp
adc
and
add
jmp
into
movs
sbb
outs
xor
fist
adc
loope
cdq
adc
xchg
cmc
or
push
mov
pusha
lods
out
xor
sub
hlt
fbstp
adc
inc
xchg
mov
lods
xchg
test
cmp
or
pushf
lds
xor
imul
and
mov
mov
jge
popf
dec
lods
mov
mov
push
in
enter
sbb
pop
xchg
aas
push
or
mov
test
mov
and
adc
cwde
add
cli
ss
ins
call
or
xchg
xchg
retf
jmp
mov
add
dec
out
shl
jp
les
xchg
int
cmps
pop
(bad)
xor
(bad)
xor
je
sbb
popa
sbb
and
push
and
jle
jmp
pop
adc
jle
rcl
mov
mov
inc
std
pop
popa
sbb
jle
add
push
dec
pop
je
retf
xor
adc
add
mov
cmp
cmp
popa
xor
ins
xchg
(bad)
inc
fcomp
arpl
not
popf
lea
xlat
cs
test
les
pop
jne
mov
call
mov
aaa
and
and
xor
mov
dec
dec
xor
fldenv
mul
enter
xchg
pop
add
sub
xchg
cdq
and
mov
lahf
(bad)
sub
fidivr
inc
mov
mov
or
in
rcr
push
jecxz
scas
leave
mov
dec
icebp
jge
mov
lds
mov
imul
test
cmp
or
ins
enter
jmp
out
out
test
shl
xchg
inc
sahf
push
jp
adc
cmp
rcl
jmp
lahf
imul
imul
fld
mov
jo
shl
mov
mov
xlat
push
popa
dec
mov
jmp
outs
pop
add
add
pop
fcom
outs
mov
and
and
cli
mov
ds
jg
mov
jno
cmp
mov
les
pop
imul
mov
(bad)
jbe
sub
fbstp
les
shl
imul
mov
pop
dec
cmp
pop
dec
sub
sub
inc
adc
jl
xchg
pop
call
aaa
inc
retf
dec
mov
std
push
call
xchg
(bad)
popf
xchg
out
push
pop
mov
push
sahf
mov
nop
in
dec
retf
or
add
test
jecxz
sbb
add
xor
hlt
xor
mov
aam
dec
(bad)
mov
cmp
jmp
in
mov
(bad)
jmp
xor
ins
and
adc
sbb
dec
sbb
push
popf
cmp
dec
jmp
push
mov
or
mov
popa
dec
stc
iret
popf
xor
xor
push
cmps
mov
jbe
imul
cmp
push
pop
mov
not
pop
push
jns
fimul
iret
pop
popa
loopne
jmp
sbb
leave
test
push
leave
or
push
jo
neg
push
pusha
push
mov
or
fs
inc
inc
mov
int3
call
sti
cli
mov
fidiv
data16
pop
mov
scas
mov
and
jo
and
cmp
adc
sbb
int3
mov
bound
inc
or
pop
inc
popa
jg
bswap
(bad)
fcomi
cmp
ja
sbb
fst
out
rol
aas
pusha
leave
pop
in
jo
outs
inc
cmc
xchg
inc
into
scas
jl
or
push
push
or
sub
aam
icebp
xchg
clc
push
retf
idiv
sbb
lods
ja
sti
fwait
xor
in
outs
add
mov
aad
or
into
and
push
inc
mov
and
push
cdq
out
retf
sbb
mov
jo
push
push
jo
scas
or
jnp
ss
pop
jmp
cmp
fwait
pop
mov
mov
cld
sub
or
scas
mov
and
and
or
xor
xchg
lock
jo
fnstenv
mov
arpl
push
enter
cs
and
mov
push
and
shr
push
jae
jae
sbb
jo
call
aas
jg
cdq
div
arpl
pop
mov
ds
inc
and
mov
jno
dec
(bad)
ret
ss
pop
xchg
mov
mov
clc
sub
scas
xchg
into
pop
jo
sub
das
xor
retf
xor
mov
jmp
dec
cmp
push
jg
cmps
iret
mov
cmp
(bad)
cmps
(bad)
fldcw
test
dec
pop
lods
fmul
enter
or
mov
pop
mov
in
mov
sbb
addr16
loope
in
sahf
fdivr
rcl
pushf
aam
adc
popa
pop
pusha
(bad)
xor
jo
mov
sub
adc
sub
movs
int3
sahf
sti
inc
lahf
(bad)
and
or
dec
xchg
addr16
imul
cmp
(bad)
push
xchg
fsub
and
imul
cmp
push
fadd
mov
push
sub
jg
ins
fadd
add
add
fcomp
jbe
mov
daa
(bad)
ds
push
add
sbb
mov
mov
dec
or
lock
movs
xlat
out
xlat
or
stos
inc
retf
push
or
sub
jp
movs
push
jge
loopne
xchg
xchg
ret
xor
cdq
popf
aaa
jl
in
xor
jns
mov
mov
loop
popa
cs
lock
cli
jl
aaa
push
neg
retf
and
xor
push
jp
xlat
sbb
clc
xlat
lds
add
push
(bad)
jno
pop
lds
adc
push
aaa
push
cmp
rcl
jmp
loopne
xor
fld
sti
or
pop
imul
dec
scas
arpl
or
mov
dec
dec
and
div
lahf
xchg
hlt
cmovs
aam
(bad)
cmc
retf
imul
or
dec
or
jmp
push
arpl
jl
into
jb
jnp
cmc
push
popa
xchg
jge
cmp
and
jns
bound
jmp
push
push
sbb
sub
mov
sub
xor
pop
mov
mov
push
fisub
pop
ss
out
popa
mov
mov
ss
std
pop
mov
sub
ja
cmp
imul
inc
movs
loop
cmp
mov
loope
ret
std
sbb
mov
imul
sub
sub
xchg
les
or
push
jmp
into
aaa
ficomp
mov
mov
hlt
aas
add
dec
xor
jl
div
test
push
jg
cmp
cmp
popf
ret
sahf
rcr
mov
sahf
(bad)
adc
ret
shr
mov
adc
scas
out
jmp
data16
sub
in
pushf
shl
retf
cmc
xor
xchg
add
push
icebp
aaa
sbb
and
fwait
or
xor
fdiv
push
pop
inc
inc
stc
inc
popa
(bad)
in
outs
jnp
mov
mov
dec
data16
and
sub
arpl
fild
hlt
push
aad
cmp
jnp
cs
ror
inc
inc
mov
jmp
inc
sub
push
ror
in
sub
(bad)
fiadd
xchg
out
jns
pop
mov
sub
push
rcl
lea
into
push
mov
pop
sbb
shl
aaa
pushf
jmp
retf
or
mov
add
push
mov
ja
push
push
(bad)
adc
adc
xlat
inc
adc
mov
imul
mov
movs
retf
idiv
in
jns
(bad)
sub
cmp
cmp
test
retf
in
repnz
dec
in
sbb
into
data16
xor
push
bound
add
into
and
mov
ins
shr
adc
push
(bad)
fistp
jge
mov
lea
mov
les
call
add
cmp
jo
div
dec
sub
aaa
add
fcmovnbe
cmp
dec
mov
and
xor
xor
add
xor
mov
inc
cld
dec
out
push
xor
loopne
and
sbb
enter
and
popa
and
fwait
jp
sub
fild
imul
rol
js
cmp
scas
or
pop
and
movs
stc
popa
add
mov
mov
sbb
jmp
fcomp
out
mov
xchg
sar
rol
mov
sahf
retf
(bad)
lods
mov
fisttp
and
sub
inc
add
mov
add
ja
mov
inc
xchg
inc
sbb
push
scas
cmps
and
sbb
mov
sbb
stos
loope
cmp
pusha
imul
mov
aam
jmp
sub
call
lock
rcl
cmps
pshufw
pop
xor
pop
mov
movs
icebp
xor
jns
inc
jmp
sti
jp
mov
dec
hlt
inc
(bad)
inc
pop
inc
(bad)
pop
fucomp
pop
and
out
xlat
int3
push
mul
jne
out
inc
sub
lods
adc
aaa
inc
mov
ss
mov
sbb
or
push
dec
sar
sub
addr16
inc
shl
xor
mov
sbb
mov
mov
or
sti
mov
movs
jno
test
es
popa
dec
cld
test
mov
jns
iret
dec
ficom
loopne
add
fiadd
and
int3
dec
jae
pop
ins
add
dec
aas
lock
and
rcr
lahf
gs
imul
aaa
call
inc
jle
dec
adc
add
stos
push
lods
lods
in
dec
fisttp
jne
pop
stos
fadd
loop
sbb
mov
retf
fcomp
dec
imul
dec
jns
imul
xchg
pop
retf
(bad)
movs
fild
jmp
scas
sbb
bound
dec
hlt
xchg
adc
fmul
mov
cmp
xor
cmp
sbb
jmp
cwde
fdiv
cmp
mov
and
(bad)
sub
mov
test
scas
addr16
xchg
sbb
inc
cmp
pushf
inc
pusha
pop
hlt
loop
xor
je
cmp
jle
jle
fmul
(bad)
popa
pop
data16
xor
in
lods
cwde
out
shr
inc
inc
je
mov
mov
(bad)
retf
repz
mov
sbb
mov
aad
inc
xchg
add
adc
push
mov
mov
sbb
jnp
push
fild
out
out
adc
and
mov
lods
dec
lock
hlt
pop
cli
ss
xor
loop
add
nop
pusha
fisub
xchg
push
mov
scas
inc
jmp
push
jecxz
dec
inc
push
pop
jb
rcl
pop
xor
hlt
clc
pop
popa
call
pop
add
into
nop
jmp
and
call
push
inc
jae
push
gs
push
test
and
sub
inc
movs
xchg
sbb
sub
jl
jnp
push
push
test
xor
inc
icebp
and
sti
int3
push
push
cdq
sbb
mov
imul
pop
sar
mov
sub
inc
rcr
sub
dec
jmp
jne
cmp
cmc
cmp
cmp
mov
inc
scas
pusha
xchg
faddp
iret
sbb
dec
xchg
mov
int3
aam
cli
test
push
jb
mov
dec
mov
add
xchg
fwait
sub
cmc
mov
int3
jb
(bad)
imul
out
inc
add
popf
repnz
nop
or
pop
cmp
sbb
mov
xor
loope
inc
aaa
ds
sbb
test
push
dec
xchg
fsubr
shl
pushf
out
rcr
lods
mov
cmps
cmp
adc
aaa
lea
sar
sbb
(bad)
push
aas
cmp
mov
cdq
jecxz
jecxz
stos
fild
pop
popa
out
repnz
lahf
push
hlt
mov
mov
push
sahf
es
(bad)
gs
in
loopne
bound
cmp
clc
cmc
cld
push
xchg
sbb
push
jnp
std
adc
inc
push
lods
dec
mov
or
mov
push
jae
jo
arpl
test
out
outs
repz
sub
clc
rol
int
cmp
and
adc
cmp
inc
aam
aad
push
xchg
inc
jl
cmc
lea
fnop
out
adc
sub
mov
add
das
hlt
inc
xchg
push
out
adc
rol
test
xchg
mov
scas
scas
push
jp
mov
dec
push
dec
pop
push
and
clc
sti
outs
and
push
and
ret
adc
push
push
cmp
in
push
cmp
in
jmp
ds
aam
push
mov
out
push
ins
sahf
int
enter
mov
pop
mov
sbb
mov
xor
fndisi(8087
fild
mov
mov
into
push
or
int
xlat
jg
ror
fist
cmp
adc
dec
jnp
(bad)
loopne
stos
push
repz
les
jp
lahf
popf
sbb
ins
div
nop
sbb
inc
xor
cmp
mov
sbb
test
or
sbb
loopne
xor
imul
sub
and
movs
and
out
jg
int
sar
jo
jne
push
jbe
mov
(bad)
pop
int3
mov
sbb
test
add
xchg
mov
mov
shl
sbb
fidivr
sbb
xor
bound
jbe
mov
cmp
or
mov
cmp
adc
mov
aam
mov
stc
push
fwait
jle
rol
mov
xchg
jmp
push
jl
jl
and
or
lea
pop
jge
sbb
fldenv
and
(bad)
mov
enter
dec
sbb
pop
bound
and
mov
ds
repz
ret
add
retf
ss
fisub
bound
pop
pop
cmp
lods
dec
cdq
inc
icebp
dec
xchg
and
test
dec
xor
push
jmp
lahf
mov
bound
shr
in
loope
and
and
pop
cs
xchg
jb
sbb
or
xchg
push
adc
pop
lods
mov
dec
adc
pop
test
scas
inc
mov
adc
mov
call
retf
mov
xchg
and
(bad)
xor
sub
sbb
cmp
adc
rcr
cmp
sar
imul
(bad)
fdivr
xor
jmp
xchg
(bad)
in
jo
mov
cmp
pop
(bad)
jecxz
pop
out
add
xchg
cdq
mov
(bad)
cmp
dec
pop
push
xlat
fcmovnb
mov
ret
(bad)
xor
sbb
mov
into
jmp
push
jmp
mov
bound
sbb
ds
xor
out
lods
mov
jmp
dec
fistp
push
cwde
ret
adc
ins
adc
call
push
pop
and
push
shr
into
int3
or
and
add
add
out
mov
ins
xchg
out
lds
fcomp
enter
mov
es
icebp
in
das
xor
std
dec
jmp
test
xor
push
cmc
cmp
and
(bad)
sbb
add
leave
and
dec
and
xor
adc
in
mov
cs
mov
and
repnz
push
xchg
adc
js
int
mov
data16
fucom
(bad)
retf
jae
and
lods
ror
xchg
aaa
cmps
inc
mov
mov
xlat
pusha
data16
mov
aam
jbe
sub
out
ins
data16
cwde
gs
or
cmps
push
or
sub
xor
sti
enter
sti
(bad)
sub
retf
pop
mov
pop
ret
loop
sbb
xchg
xor
mov
dec
mov
pop
bound
or
mov
out
push
aaa
add
(bad)
push
lods
loope
sbb
jbe
(bad)
shl
shl
sbb
dec
fisubr
sub
cli
jmp
mov
xchg
push
mov
inc
imul
es
sbb
xchg
std
test
push
popf
or
or
sbb
inc
je
or
mov
pop
push
lahf
out
dec
popf
sbb
jno
repnz
pusha
cwde
out
dec
push
mov
daa
ss
push
add
ret
sub
pushf
xlat
ins
cmp
es
(bad)
adc
mov
movs
popa
adc
inc
rcl
or
and
mov
jns
cld
rcl
dec
xchg
mov
pushf
in
xchg
xchg
cmp
fld
aas
cs
mov
test
mov
dec
mov
pushf
adc
mov
ficom
lea
or
test
xor
xor
sbb
jle
shl
adc
mov
movs
mov
das
xchg
into
fnsave
int3
pop
jns
mov
push
add
mov
push
cmp
into
data16
ss
or
xchg
mov
adc
sub
sbb
lods
test
ret
add
jo
sbb
jle
ds
jbe
pop
repnz
call
in
stos
pop
sar
ins
fadd
cmp
xchg
dec
xor
pop
ins
push
xchg
cwde
xlat
mov
fistp
inc
add
rcl
sbb
call
jmp
mov
cmp
dec
push
(bad)
push
or
dec
and
mov
xchg
sbb
js
inc
and
pop
fld
imul
and
jmp
mov
sub
pop
dec
xor
jae
jmp
(bad)
in
mov
add
stos
dec
movs
mov
cmp
ret
pop
les
fdivp
(bad)
ins
adc
push
ja
or
or
fisubr
jb
adc
int
loopne
sahf
ds
ss
das
lea
sti
sub
retf
test
xor
mov
inc
jno
mov
(bad)
pop
lahf
mov
jp
clc
mov
into
inc
fmul
add
push
pop
data16
repnz
(bad)
cmp
xchg
ds
inc
mov
dec
sahf
sub
cmp
jmp
lea
inc
or
add
push
les
push
out
cmp
jnp
test
call
(bad)
ficom
pushw
or
inc
and
pop
jnp
cmp
test
cli
or
daa
or
xchg
ret
pusha
stos
mov
xchg
pop
xor
das
sub
in
es
xor
jmp
sub
fld
dec
xor
arpl
clc
mov
add
add
jp
inc
aad
leave
mov
pop
mov
xor
dec
pushf
mov
out
lock
mov
lods
je
jne
loop
scas
imul
sub
call
push
jge
xlat
fdivrp
mov
jmp
outs
and
popf
mov
inc
cmp
pop
repnz
dec
repz
pop
xchg
xor
ds
and
iret
stc
cmp
dec
dec
add
(bad)
movs
(bad)
or
sub
xlat
mov
and
lods
cmp
repnz
push
enter
loopne
sahf
dec
mul
dec
popa
push
sub
ins
test
mul
dec
jbe
(bad)
push
and
popa
mov
cmp
in
mov
mov
add
xchg
adc
test
sub
scas
mov
out
fnstcw
add
repz
inc
xchg
mov
ja
rol
fadd
inc
aas
fst
sub
dec
sub
mov
xchg
jmp
mov
xabort
fst
repz
pop
enter
sbb
in
cmp
inc
adc
ror
inc
adc
sbb
xor
scas
dec
mov
push
inc
sahf
dec
mov
es
daa
ins
mov
jp
sbb
xchg
push
mov
loop
add
inc
popa
addr16
ins
push
push
sbb
push
mov
movs
sub
test
sbb
fisttp
or
retw
add
cli
hlt
stos
aaa
mov
mov
dec
mov
mov
push
addr16
and
dec
push
aam
xchg
lods
sbb
das
mov
ret
dec
fisttp
sub
add
je
rcl
xor
sub
jno
cs
stos
aam
test
cmp
repnz
adc
mov
xchg
adc
mov
and
ret
sub
pop
in
mov
xlat
and
dec
ds
add
cmp
pop
push
std
push
test
xor
gs
push
sub
jp
gs
jns
mov
mov
sbb
cmp
jmp
push
or
cwde
inc
or
and
and
(bad)
pop
add
dec
fistp
sub
je
ds
sbb
(bad)
xor
scas
sar
(bad)
loopne
mov
hlt
imul
sti
adc
cmps
aas
jp
rol
cwde
imul
cmp
(bad)
xchg
outs
adc
(bad)
pop
cmc
push
mov
shr
and
inc
ret
ret
imul
mov
and
cdq
push
ss
sub
jae
stos
dec
movs
ss
cmps
frstor
fadd
sbb
into
or
sub
jl
adc
je
push
test
les
xchg
ss
movs
add
inc
int3
fidivr
cli
dec
inc
(bad)
(bad)
pop
scas
cli
sbb
push
mov
repz
mov
xchg
xor
repnz
or
pop
jp
jg
test
add
cwde
push
daa
test
outs
and
dec
mov
cli
cmp
add
out
sbb
ss
sub
push
mov
test
retf
scas
fs
xchg
(bad)
push
(bad)
cmps
mov
fsub
add
or
sub
test
mov
xchg
mov
stc
test
xor
stos
mov
call
movs
jmp
movhps
out
mov
mov
dec
sub
mov
and
(bad)
fwait
in
es
test
adc
movs
cmp
sti
test
xor
test
add
fdiv
jmp
inc
and
sbb
pusha
mov
mov
in
adc
mov
or
inc
add
jmp
jb
jns
push
push
dec
sub
bound
ins
lods
mov
dec
add
or
cmps
mov
sahf
jmp
xor
sub
and
cdq
add
adc
sti
sbb
cmp
jecxz
sub
mul
fdivr
into
mov
pop
jmp
fcomp
lods
adc
pop
sbb
push
sub
ins
loope
push
jle
mov
push
mov
iret
(bad)
pop
push
inc
cmp
sbb
or
push
ds
les
mov
mov
(bad)
shr
aam
mov
aam
cwde
outs
data16
and
ds
mov
ror
push
(bad)
(bad)
mov
cmp
xlat
add
add
pop
pop
add
cmp
xchg
pushf
add
test
mov
xchg
mov
(bad)
jmp
(bad)
sbb
dec
inc
repnz
cmp
add
loope
mov
add
leave
jns
mov
pop
pop
aaa
adc
inc
ins
xchg
ds
mov
mov
sbb
push
cli
xor
xor
enter
dec
xchg
not
(bad)
push
scas
sub
push
rcl
sbb
ja
inc
jne
fbstp
jp
into
shr
lea
cmp
or
int
dec
mov
int
xor
call
js
push
call
mov
mov
cli
fisttp
test
xchg
mov
addr16
iret
push
mov
xor
aam
mov
pop
pop
mov
or
push
imul
mov
sub
sub
cvtdq2ps
cmp
pop
(bad)
mov
jmp
clc
out
imul
inc
fbstp
push
fsubrp
cmp
call
std
mov
or
inc
and
shl
dec
int
cli
cmp
pop
repz
add
sbb
push
call
xor
push
push
fisub
cmp
int3
in
in
mov
daa
popa
inc
mov
(bad)
(bad)
adc
pushw
out
leave
mov
sar
cmp
jmp
pop
add
cld
gs
movs
shl
aam
jae
sbb
cmp
xor
sbb
leave
mov
jmp
adc
je
in
push
int3
mov
js
inc
jecxz
(bad)
movs
shr
jbe
outs
stos
dec
leave
sub
daa
loopne
inc
inc
cmp
fsubp
clc
retf
mov
fwait
inc
popa
fisttp
scas
jae
sbb
xchg
dec
inc
ret
pop
(bad)
pop
daa
xchg
jmp
fst
pop
stos
push
rcr
dec
or
fmul
mov
inc
dec
into
dec
mov
cmps
jge
int
xor
mov
cmp
cmp
setle
push
clc
mov
(bad)
sahf
(bad)
mov
ins
mov
movs
fbld
out
scas
inc
out
and
mov
adc
push
test
adc
retf
hlt
pusha
mov
sbb
popw
sub
sub
or
fs
mov
xchg
test
icebp
(bad)
stc
aaa
jge
xchg
outs
ja
push
pushf
(bad)
and
popa
popf
mov
jmp
outs
pop
lods
jbe
push
mov
jg
cmps
int
jbe
sbb
add
sub
inc
sbb
test
jg
int
ret
xor
mov
scas
test
mov
test
dec
out
pop
test
imul
mov
mov
daa
(bad)
pushf
sub
in
addr16
sub
mov
mul
sbb
pop
sub
cld
pop
inc
pop
fnstenv
loop
jecxz
jp
pop
adc
shl
xchg
outs
fild
inc
int
sub
and
iret
sub
or
add
mov
xor
lahf
ins
sbb
loope
push
std
ds
xchg
cmps
js
mov
ins
mov
lahf
add
xor
or
xchg
jp
shr
and
(bad)
xchg
sub
aad
jg
mov
(bad)
and
ds
test
aad
push
mov
mov
ins
push
lea
pop
mov
xchg
and
mov
push
(bad)
fsub
imul
dec
add
cmc
and
popa
pop
(bad)
push
sbb
gs
or
xchg
int
movs
out
out
icebp
adc
aaa
xor
lds
in
test
xchg
enter
and
imul
dec
xlat
jge
les
pop
jns
mov
cli
inc
or
jl
retf
jmp
dec
add
sbb
dec
add
ret
(bad)
popf
fisubr
pop
mov
push
das
mov
push
push
add
pushf
aam
movs
iret
xor
xchg
jp
mov
or
clc
pop
cmp
test
jge
mov
adc
mov
imul
or
out
retf
popa
or
sub
call
(bad)
or
adc
adc
stos
mov
sbb
cwde
jns
aas
mov
inc
retf
cmc
jmp
dec
add
cmp
(bad)
stc
jmp
jge
xor
rdmsr
add
xor
in
add
jmp
and
sahf
add
cld
inc
loop
mov
fcmovu
mov
test
sub
jno
sub
cmc
adc
pop
adc
sub
mov
retf
stos
pop
cli
loopne
mov
enter
xor
gs
pop
dec
pop
jne
mov
sahf
fsub
xchg
mov
mov
xchg
fsub
mov
lea
inc
push
pop
dec
ss
sbb
mov
mov
les
enter
loopne
sub
hlt
mov
add
leave
sub
fcmovbe
ret
inc
and
dec
and
(bad)
call
xor
jo
arpl
into
cmp
xor
adc
sub
mov
dec
cli
mov
xor
push
dec
daa
pop
jae
cmp
ss
popf
daa
fcom
cld
fwait
ror
xchg
std
scas
out
stos
les
cmp
test
cmp
inc
jecxz
fmul
and
dec
loop
outs
push
jecxz
mov
or
out
ret
je
mov
sbb
out
or
test
shr
cmp
jle
stos
imul
jne
outs
sub
out
leave
adc
pusha
outs
lock
shr
xchg
mov
jbe
sbb
sub
or
movs
mov
js
xchg
xor
mov
sbb
movs
or
jno
sar
cdq
test
or
loopne
jmp
pause
inc
cmp
lods
clc
call
mov
sbb
(bad)
jecxz
leave
sbb
scas
add
push
jno
pushf
loope
ins
mov
cmp
repnz
dec
leave
les
fisubr
pop
ins
arpl
inc
enter
mov
pop
pop
iret
xor
jo
jno
int3
clc
cmp
ss
push
push
jae
shr
lock
or
jnp
in
ficom
mov
rsqrtps
mov
add
mov
fisttp
mov
out
pushf
sub
in
xor
lods
add
pop
movs
aas
sti
stos
xchg
sti
pop
xor
mov
add
adc
pop
xor
(bad)
or
and
cmp
retf
cmp
stos
jnp
jne
int
and
rcr
jbe
addr16
and
push
inc
mov
es
(bad)
out
inc
push
js
sub
lds
push
and
push
test
pop
xor
dec
sbb
stos
adc
or
xchg
add
leave
out
(bad)
mov
ja
int3
ins
ret
bound
ds
xor
dec
imul
and
mov
inc
(bad)
mov
es
xchg
pop
nop
scas
mov
pop
pop
lods
loop
jne
or
jo
push
std
leave
adc
and
jle
icebp
pop
out
or
cmps
ret
mov
das
mov
add
sub
mov
mov
inc
into
fld
aad
ret
popa
jae
test
and
hlt
fiadd
pop
mov
rep
cwde
or
je
add
es
adc
sub
and
mov
jb
int
adc
in
push
icebp
dec
(bad)
fdivr
in
lock
mov
ret
daa
mov
push
test
push
mov
xchg
je
sbb
or
cs
mov
inc
mul
inc
daa
xchg
lock
in
dec
outs
push
(bad)
cld
call
jle
mov
ror
inc
xchg
daa
cmp
push
das
out
pop
rol
fs
sbb
cli
fcmove
(bad)
pop
add
push
xchg
or
push
xor
aad
out
in
outs
inc
out
fbstp
or
jnp
xchg
mov
ss
and
dec
retf
sub
(bad)
mov
aad
and
mov
jg
jne
inc
scas
das
xor
dec
sub
mov
ins
pop
adc
int
xlat
out
mov
aas
in
push
push
mov
shr
int3
inc
push
loopne
bnd
lods
or
outs
sbb
mov
(bad)
mov
jge
je
movs
(bad)
(bad)
popf
jne
(bad)
ret
popf
cdq
and
repz
sub
pop
dec
sbb
jmp
cld
mov
cli
cmp
sbb
adc
xor
outs
lock
jae
inc
and
lea
xchg
iret
hlt
mov
dec
test
in
sub
pushf
lods
repnz
adc
xchg
in
mov
sbb
dec
js
jmp
xlat
enter
lds
adc
xor
movs
mov
mov
(bad)
pop
push
xchg
hlt
sub
adc
push
popa
call
cli
iret
cmp
ds
hlt
cld
cmps
or
xchg
xchg
sub
lods
(bad)
add
retf
adc
add
mov
mov
mov
xchg
leave
out
test
push
mov
pusha
lods
jne
mov
lahf
mov
push
popf
fdivr
popa
out
mov
xor
inc
mov
mov
sbb
inc
ss
or
je
data16
xchg
sahf
push
sub
int3
aas
out
adc
jns
fisubr
sbb
jecxz
cld
cmp
test
cwde
push
es
icebp
push
dec
scas
retf
add
mov
shl
(bad)
cmp
mov
adc
add
sar
not
imul
xchg
or
adc
dec
nop
sbb
mov
(bad)
iret
int3
mov
hlt
hlt
xlat
xchg
dec
mov
movs
and
pushf
add
xor
mov
cld
(bad)
xchg
ss
rcr
mov
dec
jne
xchg
jnp
push
mov
sbb
and
jecxz
repnz
mov
push
(bad)
js
neg
imul
mov
sub
sub
mov
fdiv
sahf
sahf
lea
jg
pusha
pop
dec
(bad)
call
xor
mov
call
adc
and
(bad)
cs
outs
jb
ins
xor
jp
sbb
push
xor
(bad)
xor
fsub
(bad)
inc
les
jne
je
int3
mov
stos
mov
dec
xchg
adc
mov
sub
dec
mov
out
scas
gs
shl
popa
pop
xchg
dec
retf
lds
lea
mov
fdiv
gs
adc
sub
lods
xchg
mov
lods
(bad)
and
movs
add
in
lods
mov
pop
lods
nop
fnsave
outs
mov
xchg
popf
cld
or
retf
fxch
(bad)
push
mov
xchg
jmp
sub
mov
lods
lods
cmps
into
xchg
lock
sbb
(bad)
sti
dec
add
or
adc
jp
or
sub
sub
pusha
pop
add
fxam
add
xor
adc
cmps
cmp
ds
xlat
jecxz
aam
scas
sub
fist
jmp
fcom
xchg
movs
xor
stos
mov
data16
jae
jns
in
mov
outs
jmp
div
sahf
aad
stos
sub
aam
arpl
mov
es
pop
mov
movs
xchg
adc
mov
xchg
mov
into
popf
sub
retf
mov
jo
or
cwd
inc
stc
test
cmc
out
sub
mov
popf
stos
jae
fiadd
pop
xor
test
pop
xor
test
xchg
xor
mov
cmp
push
inc
push
inc
dec
arpl
out
rcr
mov
lock
mov
out
outs
lods
loopne
aaa
push
push
xchg
rol
sar
in
cmp
lds
jecxz
cmp
out
push
aam
xchg
jb
sbb
xor
pop
push
aaa
fwait
inc
xchg
xor
cmp
imul
mov
inc
jb
ror
test
sbb
pop
div
push
fcmovb
jl
dec
cdq
cmp
and
leave
mov
outs
adc
xchg
mov
fstp
inc
jmp
add
call
jns
ins
and
into
jno
and
xchg
scas
sub
sub
mov
popa
hlt
dec
xchg
inc
pop
sub
pop
cs
bound
mov
mov
push
clc
mov
mov
adc
(bad)
int3
cmps
pop
subps
out
adc
xor
dec
(bad)
xor
cmp
arpl
in
push
adc
dec
xchg
fcomp
or
aam
scas
lea
ret
fisubr
in
loop
xor
lea
adc
stos
inc
(bad)
pop
js
mov
inc
pushf
repnz
pushf
pop
sub
push
jl
jbe
sahf
lahf
add
call
les
xchg
mov
mov
lea
cmps
jne
mov
dec
ror
cmp
inc
pop
mov
dec
mov
fld
leave
jmp
push
in
lods
push
jge
pop
or
mov
jno
cmp
aaa
out
mov
dec
cwde
stos
sub
pusha
dec
fwait
inc
sbb
lahf
es
pop
rcr
cdq
enter
iret
pop
in
mov
pop
outs
(bad)
in
xchg
mov
and
pop
mov
cmp
sbb
sub
pop
fidivr
(bad)
sbb
out
jbe
test
push
or
in
pop
pop
mov
jp
cmc
loop
ror
call
and
push
mov
retf
or
pop
sub
das
xor
pop
xlat
xchg
mov
adc
jle
sbb
push
in
push
movs
dec
xchg
push
add
push
mov
jbe
sub
pop
lock
neg
loope
xchg
ds
adc
pop
les
ja
shr
xchg
dec
pop
movs
mov
fldcw
sti
xor
addr16
fstp
or
or
lahf
or
out
sbb
xchg
es
repnz
fiadd
aam
das
dec
mov
sub
cmc
gs
xor
ins
pop
enter
mov
sahf
mov
sti
test
adc
cmp
stc
sti
jns
ins
or
imul
push
fdivr
mov
dec
inc
xor
mov
fisub
imul
enter
outs
xchg
repz
jb
sub
add
ins
inc
bound
xlat
sub
push
(bad)
retf
cmp
cmp
dec
sub
jmp
out
popa
out
or
daa
imul
xchg
outs
jmp
sbb
or
push
aad
mov
fsubp
mov
movs
rol
xor
std
das
aaa
mov
rcl
cmc
fistp
ins
jb
out
loop
inc
pop
jnp
sbb
out
cmp
dec
xchg
jmp
ins
xchg
dec
fs
pop
xor
jmp
test
jo
ja
jo
jne
clc
leave
(bad)
aam
mov
mov
pop
adc
aaa
xlat
popa
mov
pop
push
pop
adc
mov
or
sbb
dec
inc
jp
jmp
bound
lock
cmc
mov
aad
call
popf
mov
xchg
push
mov
sbb
call
sahf
dec
and
popf
pop
mov
dec
daa
jmp
lds
cmp
mov
ja
push
rcr
mov
dec
shr
cmp
or
jmp
mov
lahf
push
mov
lods
sub
pop
movs
scas
mov
out
into
pop
xor
mov
in
add
fisubr
daa
pop
fild
and
sbb
imul
outs
cmp
dec
fnstcw
jle
push
jno
inc
aad
jae
fbstp
cdq
aam
cld
out
xchg
rcr
ds
jmp
cmps
xchg
mov
mov
(bad)
pop
xchg
fisttp
mov
hlt
push
and
sbb
pop
loopne
ror
out
stos
mov
lock
pushf
fild
ins
popa
dec
pop
dec
ds
push
data16
sahf
daa
xor
jbe
or
(bad)
mov
jmp
xor
dec
add
and
data16
aam
repz
and
shl
push
fsub
rcl
in
add
or
cmp
retf
movs
push
add
mov
mov
out
int
data16
pop
js
test
shr
loop
leave
inc
mov
aam
sbb
push
jmp
push
or
mov
xchg
mov
ds
adc
cmp
stc
sub
into
rol
dec
in
pop
pusha
fbstp
ds
or
add
sar
fwait
pop
test
mov
sahf
cmp
mov
outs
repnz
test
xchg
push
and
inc
push
jg
xor
push
adc
push
push
inc
out
jp
jmp
loop
jne
pop
adc
jo
xchg
ins
mov
inc
sbb
sub
jbe
imul
sub
lea
inc
ss
lds
aaa
jl
xor
sbb
call
inc
push
adc
xchg
popa
clc
(bad)
aaa
lea
inc
in
pop
test
sbb
adc
fsubr
mov
sub
jmp
jb
stc
xor
test
or
shl
fisubr
push
fcom
pop
sbb
or
mov
xchg
cmps
fadd
outs
xor
jb
mov
sub
loopne
mov
mov
sub
sbb
stos
test
in
and
pusha
xchg
mul
adc
test
into
or
add
aad
out
inc
ss
retf
or
xchg
call
mov
mov
stc
or
aad
xchg
xchg
mov
sahf
jp
jnp
mov
loope
daa
or
ja
mov
int3
popa
int3
scas
cmps
loope
sub
cmp
nop
dec
sub
xor
and
addr16
jmp
jp
imul
ja
jg
jg
(bad)
pop
cmp
out
mov
push
and
test
enter
mov
retf
jecxz
cmp
fs
pusha
jmp
inc
mov
jbe
adc
imul
xor
pop
int3
scas
fstp
bound
dec
jmp
retf
jae
cmp
loop
xchg
jecxz
jbe
outs
fwait
test
adc
xor
std
call
pushf
rsm
(bad)
cmp
fwait
pop
jle
xor
iret
cmps
(bad)
mov
sbb
mov
adc
and
and
or
nop
and
stos
xlat
xchg
mov
xor
cmp
inc
ins
push
std
cmovl
xor
push
cld
neg
jmp
adc
jg
mov
add
(bad)
iret
xlat
push
stos
push
mov
in
push
or
mov
cli
ss
add
cld
push
dec
cmps
xor
shl
xchg
enter
repnz
inc
mov
fistp
sbb
jno
clc
push
dec
les
nop
mov
fadd
inc
data16
cmp
les
push
mov
dec
fcom
pop
shl
push
or
mov
in
and
mov
inc
outs
dec
fcom
out
stos
xchg
ins
mov
icebp
dec
jne
push
js
sub
cs
pushf
inc
cmp
and
nop
adc
jno
out
test
and
stos
test
xor
fsubr
and
add
xor
mov
mov
jecxz
sbb
test
out
std
jmp
(bad)
cmp
lods
inc
(bad)
or
cmp
ins
and
(bad)
xchg
add
fisttp
pop
and
pop
pop
sub
mov
cmp
test
aad
test
stos
xlat
jmp
int
and
ret
or
pop
inc
mov
dec
in
clc
cmp
and
jno
je
lods
sub
pop
sbb
sub
xor
jo
mov
fst
xor
or
jl
adc
and
stos
in
mov
add
dec
xor
pop
sub
add
rcr
ja
mov
lds
int3
mov
cmp
ret
mov
pop
jp
imul
jmp
lods
sub
ficom
xchg
add
adc
rcr
mov
cmp
pmullw
xor
dec
dec
cmps
jae
and
inc
test
adc
mov
mov
xchg
(bad)
fild
xchg
sbb
push
mov
popf
sar
rol
sub
pop
shr
div
cmp
retf
imul
sti
cmps
cmp
jbe
lds
inc
ret
test
fidiv
mov
movs
lds
and
dec
jno
sub
adc
push
js
jae
sub
out
push
add
shl
mov
addr16
mov
xlat
sbb
shr
(bad)
shl
aas
stos
mov
outs
sub
loopne
mov
sbb
out
mov
out
loop
pop
jmp
mov
ficom
movs
cli
(bad)
xor
cmp
dec
lock
loop
arpl
(bad)
(bad)
sub
sti
cdq
jb
out
and
retf
push
sub
mov
xchg
inc
fld
(bad)
pop
and
dec
pop
dec
loop
sub
xchg
ins
jnp
outs
inc
ja
sub
rcr
lods
add
nop
mov
in
push
mov
stc
sbb
cmp
outs
xchg
(bad)
std
add
fldenv
in
retf
add
in
ret
pop
popf
aaa
sub
aas
dec
imul
sahf
pop
mov
xor
adc
dec
pop
xchg
fs
jge
stos
or
jge
push
mov
adc
add
push
jo
mov
and
xor
mov
sub
mov
dec
cmp
call
or
jmp
mov
ds
mov
pop
data16
in
xor
xor
mov
mov
jb
sub
sbb
push
outs
push
xchg
jne
adc
xchg
adc
repz
jns
pop
jmp
inc
addr16
outs
jle
clc
jo
sbb
(bad)
jmp
leave
cli
jo
movs
push
jns
stos
out
(bad)
cmp
sub
in
ret
adc
(bad)
fnsave
dec
aad
cmp
sub
mov
(bad)
pop
ss
pop
inc
sbb
sar
cld
fistp
xor
mov
test
xor
mov
xchg
mov
add
int3
and
mov
ret
icebp
popf
outs
jge
stos
in
push
(bad)
call
xchg
jbe
loopne
inc
stos
and
int3
mov
stos
xchg
pop
and
mov
sahf
push
hlt
mov
ins
in
nop
or
test
push
xchg
xchg
cld
imul
in
adc
jmp
rcl
stos
enter
addr16
mov
jle
and
sar
mov
mov
pause
shr
aam
and
(bad)
inc
mov
icebp
lock
(bad)
call
jae
mov
fs
dec
les
xchg
mov
lods
rcr
cdq
add
jecxz
xor
ins
cmps
mov
ins
retf
mov
sub
(bad)
mov
cmp
repz
movs
xchg
sub
sub
sub
loop
ret
sbb
cld
test
jnp
sbb
adc
pushf
fcomp
dec
sbb
pop
cmps
lods
into
sbb
add
fucom
adc
or
imul
movs
clc
mov
cmp
test
fwait
retf
enter
dec
and
clc
addr16
xchg
in
mov
push
fist
repz
fistp
jb
lods
enter
mov
js
xor
gs
or
neg
ret
mov
mov
or
lds
fidivr
pop
add
mov
out
jnp
add
je
fwait
jmp
pop
pop
iret
leave
add
cdq
daa
fistp
ja
test
add
push
or
push
pop
mov
mov
cmps
shr
jnp
push
add
les
das
rcl
cmps
jmp
inc
test
push
mov
jbe
mov
sbb
(bad)
inc
adc
mov
adc
out
sub
xchg
jnp
jo
(bad)
jmp
add
mov
dec
hlt
leave
inc
sub
clc
(bad)
or
xor
fimul
mov
les
addr16
lahf
cmps
rcl
mov
xchg
lods
inc
add
test
push
and
icebp
sbb
or
ja
popf
pop
aam
jbe
mov
inc
mov
movs
add
cmps
xchg
mov
mov
pop
scas
cdq
jge
mov
cmp
dec
sbb
or
and
push
adc
and
outs
(bad)
dec
imul
test
sub
mov
adc
adc
jge
sub
stos
jl
ret
(bad)
xchg
pop
enter
imul
ins
cmps
(bad)
in
lahf
(bad)
push
xor
hlt
int3
dec
imul
or
dec
adc
cmp
neg
inc
movs
jmp
popa
inc
test
(bad)
xchg
xor
ret
sbb
(bad)
mov
test
jge
or
sti
pop
cmps
mov
add
mov
adc
push
pop
jmp
mov
lods
jb
mov
mov
in
repnz
mov
int
push
mov
xor
jecxz
push
mov
mov
mov
in
psraw
cmp
sbb
outs
scas
push
mov
or
mov
(bad)
icebp
data16
fs
xchg
lods
or
push
mov
imul
sbb
xchg
out
jb
sub
repnz
sub
add
dec
stos
imul
fldz
xchg
enter
push
mov
rol
pop
lods
aas
ror
cmps
in
stos
pop
in
inc
xor
sbb
xor
imul
int
mov
sbb
inc
cmp
test
jmp
adc
adc
dec
sti
pusha
jg
out
xchg
imul
retf
push
sahf
adc
fld
movs
mov
xor
ins
data16
and
sub
fmul
lock
or
mov
jecxz
add
fwait
add
jmp
popf
mov
jno
mov
popf
sbb
shr
mov
fstp
push
jge
daa
imul
mov
and
adc
leave
cwde
inc
mov
push
inc
mov
jne
gs
dec
xchg
push
int3
fsubr
pop
push
stc
and
retf
or
mov
lea
cmp
adc
push
push
jnp
jbe
in
mov
sub
mov
test
xchg
out
sbb
pushf
mov
dec
lea
scas
cmp
mov
cwde
int3
pop
imul
xchg
pop
dec
js
or
aad
jnp
stc
cld
add
fist
pushfw
and
push
cld
daa
es
pusha
das
jl
cld
add
fdecstp
push
popa
rcr
xchg
lods
fsqrt
push
or
repz
outs
ret
es
dec
ret
or
cld
xchg
or
jecxz
movs
pop
jnp
fdivr
loop
les
mov
add
mov
or
cmp
push
inc
jb
mov
jnp
test
mov
dec
shl
and
cmc
jne
mov
xchg
call
les
fldl2e
pop
jge
and
mov
lods
loopne
inc
cld
scas
fistp
ret
ficomp
out
les
jae
sub
(bad)
adc
cmc
adc
les
mov
push
dec
jbe
pop
mov
jge
imul
arpl
cwde
add
(bad)
push
dec
sbb
cli
nop
jle
ror
adc
leave
dec
cmc
jo
scas
pop
clc
retf
push
jp
mov
loope
call
jmp
cmp
fwait
sti
movs
add
xor
sub
mov
adc
xor
adc
inc
popf
outs
pushf
mov
in
add
lea
inc
pop
loop
sbb
das
leave
addr16
call
out
popf
sub
push
mov
into
leave
fucompp
mov
mov
std
or
ins
xor
pop
jmp
pusha
mov
aas
mov
mov
into
pop
or
and
stc
inc
lea
repnz
out
in
fild
xor
call
lock
ficomp
shl
test
jnp
ret
fwait
mov
xchg
xchg
jno
add
lods
rcl
les
mov
sbb
mov
bound
aad
mov
cdq
icebp
jmp
shl
jne
jp
loopne
jg
fcomip
adc
jmp
ins
(bad)
mov
mov
hlt
inc
and
xchg
mov
cmp
mov
ret
fbld
mov
jns
pop
push
idiv
inc
div
loopne
pop
repz
sbb
loop
jmp
cmp
lods
and
adc
sbb
movs
ins
sbb
test
aad
dec
add
jbe
jle
leave
mov
push
stc
jnp
fmul
jle
cmp
adc
mov
lds
jbe
ins
mov
repz
mov
jl
jmp
inc
(bad)
aad
sahf
inc
and
call
add
jge
mov
xor
push
fidiv
in
add
mov
sub
mov
ror
pop
into
inc
jmp
sar
(bad)
mov
push
xchg
sbb
repnz
call
mov
mov
or
rcl
adc
xchg
sub
cmp
jb
mov
iret
pop
jb
inc
pop
xchg
repnz
icebp
pop
imul
addr16
(bad)
pop
popf
ret
jnp
sbb
jmp
mov
shl
int
lahf
ret
movs
test
aas
lods
or
fidivr
call
and
retf
sti
rcr
outs
in
mov
fs
test
jae
sbb
pop
add
scas
jecxz
or
mov
pop
jae
cmp
inc
pushf
add
mul
mov
add
mov
cli
sbb
fldcw
jbe
cmp
push
bnd
dec
jbe
dec
(bad)
int
jb
aas
mov
cmp
adc
pop
test
pop
lea
int3
ret
scas
add
or
retf
cmp
arpl
lods
in
gs
inc
and
ret
jmp
mov
aaa
div
or
cs
repnz
loope
outs
movs
xchg
fiadd
in
adc
or
cli
dec
lods
mov
cli
cmp
setns
nop
jg
jns
jae
jle
push
das
dec
into
test
fwait
sti
mov
stos
mov
sbb
mov
pop
cmp
iret
mov
gs
test
cmp
mov
sub
mov
mov
sub
jb
or
rol
mov
push
repz
cwde
cmp
in
shl
jb
cwde
out
shufps
push
adc
scas
test
add
fmul
or
pop
add
xchg
shl
popa
cmps
cmp
mov
daa
rol
cmp
adc
rcr
mov
dec
cs
cli
or
out
gs
lods
cld
sub
fwait
in
mov
mov
push
sub
push
xchg
and
fild
int
(bad)
aam
dec
retf
dec
in
push
or
pop
aad
mov
jg
out
pop
xor
pop
hlt
lods
shl
mov
addr16
sub
loopne
inc
mov
lock
js
fcomp
jmp
outs
inc
pop
jecxz
inc
mov
sbb
xor
cmp
cmp
sbb
fstp
mov
cli
jae
jl
aam
sub
stc
cmp
je
jl
sti
mov
ficomp
adc
xor
ins
pop
in
adc
dec
fwait
jg
into
ficom
mov
(bad)
jne
outs
ucomiss
xlat
jecxz
pop
inc
imul
gs
or
dec
cwde
ret
and
dec
les
in
pop
xor
inc
xchg
loopne
int
sbb
gs
aam
sbb
mov
pop
jns
outs
std
mov
adc
mov
jbe
hlt
inc
fst
or
xor
mov
mov
clc
xor
mov
ret
push
mov
es
(bad)
ja
bound
js
leave
out
adc
add
add
movs
loopne
xor
mov
mov
call
xor
(bad)
imul
mov
jecxz
(bad)
xor
pop
and
cwde
cmp
adc
(bad)
pusha
clc
inc
ficom
pop
fsubr
lock
dec
jnp
jl
sbb
ror
(bad)
push
ins
or
cmp
fwait
pop
out
add
xor
ja
add
lock
fcmovnb
dec
fs
loopne
xor
pop
movs
mov
cmps
adc
(bad)
popa
hlt
mov
sbb
cmp
loope
jle
not
into
mov
aam
clc
xchg
rcl
cmp
test
rcl
ret
inc
(bad)
cld
hlt
and
xchg
(bad)
rol
push
aas
cld
mov
jecxz
hlt
cmp
arpl
ret
jle
or
cmp
int3
pop
mov
push
or
fst
aad
idiv
and
shl
lods
xchg
or
sub
push
dec
and
xor
dec
jno
fs
add
out
es
sbb
arpl
mov
out
xor
and
jns
push
sub
int
cmp
cmp
jg
repz
adc
xchg
outs
ret
pusha
inc
clc
inc
pop
iret
int
mov
cli
push
iret
mov
into
hlt
mov
es
dec
dec
cmps
add
add
aad
jmp
sahf
pusha
nop
std
adc
cmp
pop
or
or
sub
mov
sbb
sub
cmps
pop
mov
mov
mov
jp
dec
mov
dec
scas
or
std
add
lods
movs
inc
adc
cs
lods
mov
in
jnp
jmp
ud1
pop
mov
cmp
aaa
cmps
stos
mov
mov
dec
inc
xchg
xchg
dec
or
inc
adc
fdiv
adc
nop
xor
jae
(bad)
cmp
sub
lods
or
mov
sahf
mov
rol
lds
repz
jne
add
mov
ins
xchg
mov
adc
shl
fbld
sbb
push
not
test
adc
aad
nop
sub
stc
adc
aam
pop
jo
pop
inc
mov
dec
pop
popa
jmp
(bad)
sbb
dec
jecxz
dec
xor
dec
shl
adc
push
cmps
sti
xor
cdq
xchg
and
mov
lock
ret
mov
rcr
and
adc
sub
inc
fisttp
cmp
mov
or
das
imul
(bad)
dec
or
push
dec
in
cmc
data16
jb
hlt
mov
or
mov
cdq
leave
imul
test
mov
jno
xchg
sahf
daa
mov
in
or
out
(bad)
push
sub
or
mov
adc
cs
push
fisttp
xor
lods
inc
std
cdq
pop
sbb
cmps
or
jge
or
jmp
cmps
jne
jmp
sub
pop
sbb
xor
pop
cmps
das
inc
or
sbb
add
mov
xor
mov
mov
cmps
cwde
cs
movs
jp
les
and
push
cs
fcomp
into
hlt
inc
mov
sbb
repz
iret
jmp
fisttp
xor
imul
ret
sub
out
js
jp
mov
pop
pop
mov
or
and
push
cmp
test
cmc
dec
cli
mov
inc
(bad)
jg
cmp
test
pop
ret
cmp
imul
fisub
into
rcr
add
retf
ret
js
sbb
js
lods
pop
(bad)
mov
xchg
adc
dec
ins
or
dec
jle
lock
mov
mov
mov
dec
push
cli
scas
jns
sub
or
xchg
popf
test
in
inc
mov
inc
mov
call
call
fbstp
push
cdq
in
adc
xor
lods
in
xchg
enter
or
adc
mov
pop
aas
mov
test
jae
fs
mov
adc
jo
cmp
imul
pop
aad
lea
sbb
stc
push
enter
icebp
dec
ficom
fwait
sub
loope
loopne
pop
jmp
retf
add
push
mov
cmps
je
add
add
xchg
lods
xor
mov
mov
push
test
pop
lock
stos
xchg
inc
hlt
sbb
adc
lds
addr16
jbe
rcr
clc
(bad)
popf
ds
cmps
pop
pop
inc
in
enter
add
stc
and
(bad)
mov
sar
and
cmp
lods
push
mov
add
mov
inc
and
inc
mov
cmps
ret
pminsw
xlat
push
xor
fst
in
aaa
es
retf
ret
popa
sbb
repz
in
mov
and
sub
and
sbb
clc
cwde
sbb
push
loopne
sbb
mov
adc
jo
sahf
jg
xchg
pop
test
ins
pop
or
mov
fisubr
in
addr16
lock
fistp
ins
retf
mov
mov
xchg
ss
popf
sbb
mov
jp
mov
dec
outs
sub
xor
push
mov
jge
or
retf
bnd
jmp
mov
iret
out
lods
stos
mov
fcom
lea
(bad)
leave
dec
xchg
not
or
ss
xor
mov
movs
call
adc
sub
into
fnsave
sub
mov
bound
jg
rcr
outs
cmp
push
lods
shl
cli
fiadd
push
mov
pop
sbb
mov
add
and
jno
clc
fld
inc
inc
add
rcr
pop
stos
inc
dec
nop
call
pop
daa
mov
imul
popa
xor
jae
ret
dec
mov
retf
aam
cwde
lods
dec
add
cmp
int3
mov
sub
dec
xchg
sbb
or
jecxz
or
mov
les
fldenv
outs
and
loope
lods
push
fs
(bad)
dec
inc
xor
int
lds
test
call
add
jg
add
adc
out
inc
xor
or
fisub
cmp
not
cli
fcomp
or
mov
mov
mov
xchg
aam
xchg
pop
pop
mov
mov
dec
das
enter
cmps
cmps
ins
cmp
mov
stos
js
xchg
rcr
test
hlt
xchg
cmc
push
add
gs
adc
jns
cmps
pushw
and
das
push
push
mov
dec
sub
xor
aam
aas
add
and
jnp
imul
mov
ja
adc
(bad)
or
xchg
mov
mov
fwait
iret
leave
ret
xchg
ror
fadd
sahf
add
xor
in
je
pop
xor
xor
xor
fldenv
xchg
mov
test
push
jecxz
fiadd
lds
push
push
pop
pusha
mov
dec
aaa
dec
mov
jns
(bad)
enter
lds
int
xchg
push
repnz
mov
pop
gs
mov
sbb
jno
stc
xor
pop
test
(bad)
or
sbb
js
leave
and
jmp
cmp
enter
sbb
loope
or
xchg
fsub
push
jg
xor
xchg
iret
imul
test
add
mov
add
cmps
cmp
mov
daa
push
xchg
or
out
xor
inc
test
es
(bad)
out
icebp
and
adc
rol
cmc
ins
daa
stos
das
ins
arpl
push
shl
out
lea
sbb
data16
retf
and
jnp
fdiv
lds
addr16
sub
fstp
xchg
dec
push
xchg
adc
mov
push
outs
retf
push
fild
pop
mov
in
loope
jmp
cmp
jo
xor
dec
das
cmp
inc
fsub
mov
ror
fsubr
sbb
clc
inc
js
scas
cmps
xchg
adc
xor
hlt
iret
cmps
das
cdq
jl
out
cmp
pop
popf
rcr
jecxz
xchg
ror
inc
lods
cwde
pop
mov
adc
sub
cmp
fbld
(bad)
imul
cmp
in
in
jo
mov
sub
call
or
rcr
aam
adc
sahf
inc
jecxz
lar
dec
push
inc
fistp
in
jp
sbb
or
jecxz
and
dec
dec
loope
mov
inc
sbb
sub
scas
mov
sub
dec
jae
std
mov
retf
xchg
or
mov
or
mov
into
rcr
jae
sti
sbb
gs
push
sbb
enter
pop
dec
gs
mov
pop
or
daa
xlat
stos
push
ds
xchg
xchg
pop
call
cmp
test
pop
movs
dec
xor
or
add
pop
les
gs
adc
fbld
or
mov
cmp
leave
and
add
and
inc
cmp
repnz
test
ds
call
ja
cmovno
mov
mov
sbb
jg
scas
xchg
or
and
(bad)
mov
iret
imul
and
jmp
aas
aad
mov
inc
leave
pop
xchg
push
stos
push
inc
pop
rol
lock
jo
or
mov
ins
call
data16
imul
mov
outs
push
jmp
clc
cmp
xor
fwait
push
push
rol
stc
xchg
cmps
lea
and
mov
leave
out
aam
lods
xchg
xchg
add
(bad)
jmp
(bad)
fs
mov
adc
pop
mov
data16
xchg
jae
xchg
shl
leave
push
es
add
mov
pop
add
(bad)
addr16
call
inc
imul
mov
and
ins
mov
xor
pop
cmp
das
int3
add
add
xchg
inc
xor
mov
xlat
aad
ja
mov
outs
dec
adc
imul
ror
push
sti
mov
xor
outs
pop
mov
ss
les
rol
or
add
push
loop
jnp
inc
ins
fwait
dec
mov
mov
leave
popf
pusha
mov
ror
sbb
sbb
mov
mov
dec
in
and
or
sbb
cmc
cmp
dec
inc
cs
daa
jge
sar
and
xchg
lahf
dec
leave
or
icebp
fs
lods
xchg
repz
das
call
jmp
retf
int
out
aam
call
inc
cmp
inc
out
cli
cld
cmp
cmp
and
ret
inc
lea
test
xchg
sub
stc
inc
push
cmp
xor
cmps
inc
sub
mov
sub
fmul
mov
test
sbb
jl
sti
movs
je
push
jmp
cld
or
scas
int3
inc
mov
stos
sar
ret
lea
lods
mov
pop
stos
xchg
jmp
sbb
fdivr
mov
inc
lahf
mov
(bad)
in
pop
lds
mov
pop
jmp
ret
inc
and
iret
gs
ss
adc
sti
push
sbb
fsub
ds
cs
cmp
xchg
xor
movs
pop
jl
aad
ret
outs
pop
outs
xor
pop
mov
gs
(bad)
stos
pop
dec
pop
mov
xchg
inc
sub
shl
jns
push
cs
dec
jo
into
call
loop
shr
not
inc
nop
(bad)
jmp
ret
cdq
dec
cmp
mov
push
shl
ret
(bad)
adc
xor
stos
ror
and
mov
mov
add
push
sub
xchg
mov
inc
loope
pop
aaa
imul
outs
dec
push
push
gs
pop
mov
outs
stos
xchg
push
mov
inc
cmps
call
fnstsw
ror
jno
stc
jb
and
sub
and
jae
adc
fld
xor
rcl
xchg
dec
xor
retf
(bad)
ffree
jge
jecxz
movs
xlat
ds
outs
movs
in
inc
jns
push
fdivr
jg
aaa
xor
mov
pop
xor
aam
cld
xor
xchg
xor
mov
jp
pop
jge
call
mov
push
cmp
jns
int
fild
rol
movs
adc
(bad)
data16
sub
cmps
pop
adc
(bad)
xchg
stos
adc
ficomp
dec
mov
stos
sbb
mov
or
enter
jno
sub
inc
pusha
rcl
sub
iret
jecxz
push
int3
jle
mov
data16
push
jb
ins
in
popf
sbb
inc
(bad)
sub
call
repnz
adc
mov
test
xchg
arpl
mov
add
pop
or
lock
cmp
add
fbld
mov
loopne
adc
ins
pop
in
retf
jb
fild
adc
movs
cdq
lahf
lock
sub
push
push
ss
sbb
mov
mov
sub
add
mov
push
adc
out
pop
test
(bad)
jne
sub
xor
sti
sub
int3
scas
jns
jl
push
mov
and
push
sub
call
mov
or
and
xchg
dec
xor
push
out
loop
clc
pop
push
das
lds
adc
cmps
cmp
(bad)
mov
xchg
call
jmp
push
mov
push
out
pop
retf
jne
(bad)
mov
xor
fdiv
je
and
xchg
aaa
std
cld
inc
leave
xchg
fld
shr
out
or
push
pop
cld
cmp
mov
xor
jl
adc
leave
mov
test
in
mov
or
mov
mov
fwait
aad
inc
aam
push
adc
pop
or
call
idiv
jns
das
pop
in
add
pop
shl
inc
sub
aam
mov
lock
jmp
std
clc
jmp
add
clc
shr
sbb
ss
push
int
pop
stos
pop
add
add
pop
in
mov
xor
sbb
in
fist
xor
out
addr16
imul
in
(bad)
scas
fist
jae
in
push
retf
loope
inc
mov
sub
hlt
xchg
lahf
push
adc
sub
xor
jns
and
ret
js
or
les
mov
or
ins
shr
(bad)
ins
jns
ret
sbb
lahf
outs
xchg
xchg
sbb
fsub
push
in
data16
mov
jl
jg
loopne
jae
mov
outs
xchg
push
pop
(bad)
sub
add
cmp
mov
inc
inc
scas
adc
cmps
fdiv
jno
jecxz
addr16
into
push
jnp
fucomi
push
int3
lea
jmp
xlat
repz
inc
push
adc
sub
(bad)
and
sbb
or
adc
pop
fistp
jb
inc
pop
arpl
mov
dec
icebp
ret
js
mov
mov
repnz
hlt
in
test
bound
inc
pop
fcomp
or
stos
adc
rcl
cmp
pop
inc
push
jmp
cmp
cmp
push
int3
push
jns
mov
loop
mov
dec
fs
cld
mov
cmc
scas
enter
adc
adc
xchg
imul
in
xchg
test
ficom
pop
fild
and
dec
adc
sbb
mov
dec
gs
stos
dec
inc
(bad)
outs
mov
xor
mov
xor
(bad)
(bad)
jne
loopne
fwait
lods
sub
pop
jecxz
rol
mov
jecxz
add
jbe
loop
stc
cmps
shl
(bad)
jns
fwait
xor
punpcklbw
ficom
mov
fsub
fidivr
in
lds
repnz
out
cld
lock
xor
stos
js
dec
jmp
imul
adc
sbb
cli
mov
jge
aaa
(bad)
xor
jge
pop
sub
pop
add
(bad)
pop
std
fadd
nop
xlat
jns
jb
inc
ror
in
ins
ret
cmc
dec
push
test
xchg
out
aas
adc
hlt
adc
(bad)
stos
jmp
cmp
jle
ins
inc
arpl
retf
add
test
mov
or
jno
cmp
outs
adc
sbb
mov
sti
mov
leave
neg
test
dec
fistp
or
hlt
xchg
jb
sbb
arpl
mov
push
popa
ins
add
lds
mov
add
mov
add
pushf
adc
sub
(bad)
adc
stos
mov
mov
jo
adc
push
shl
push
mov
push
mov
inc
push
pop
fild
cmps
jae
pop
xor
or
fiadd
adc
or
xor
or
mov
cld
jmp
dec
arpl
mov
scas
les
fisttp
idiv
xrelease
sahf
movs
add
hlt
mov
sub
rol
adc
xor
jae
sbb
(bad)
sahf
jle
lahf
add
stc
cmc
xor
push
mov
mov
popa
push
(bad)
loopne
lea
loopne
inc
and
push
movs
sub
sahf
jmp
push
mov
movs
xor
movs
cdq
adc
and
push
in
push
fisub
dec
dec
std
aad
out
xchg
cmp
stc
cdq
adc
pop
test
mov
imul
mov
repnz
cwde
sbb
push
xchg
call
lock
mov
jmp
pop
dec
stos
mov
loopne
push
movs
bound
pop
imul
jecxz
shl
aad
pop
and
jno
fiadd
pop
pop
pushf
push
cli
sub
push
aad
push
xor
loopne
popa
mov
popf
xchg
in
push
sub
aad
iret
sahf
(bad)
sahf
mov
add
sbb
mov
lock
push
jne
(bad)
adc
jbe
cdq
repnz
lea
out
cmp
or
daa
jns
or
je
or
and
retf
jl
mov
inc
cwde
and
jp
adc
jae
lahf
pop
push
loopne
int3
inc
and
mov
fsub
jns
sub
gs
bnd
std
jb
ins
inc
test
push
dec
cmc
cmp
jns
or
mov
and
xor
mov
xor
mov
test
inc
jbe
cmp
lea
mov
mov
inc
add
mov
sbb
sub
mov
mov
jmp
call
rcl
ror
idiv
sbb
mov
sbb
pop
mov
push
dec
xchg
xor
sbb
cdq
inc
inc
inc
xor
outs
call
retf
lods
push
pop
dec
or
adc
cmc
fidiv
cmp
dec
sub
dec
push
xchg
in
pop
mov
cmps
add
xor
mov
repz
or
(bad)
pop
in
push
call
je
test
stos
adc
jno
outs
(bad)
sub
pushf
xor
xchg
addr16
aam
mov
repnz
adc
clc
jle
sar
dec
mov
push
xchg
dec
ss
push
xchg
pop
in
sti
dec
and
xchg
mov
fisttp
bound
mov
sbb
or
std
in
jne
cmp
jmp
jo
clc
adc
mov
cmps
and
rol
clc
mov
pop
fld
mov
in
xchg
imul
jbe
icebp
xchg
or
jecxz
out
je
in
pushw
mov
in
jns
inc
shl
push
aaa
add
and
push
stos
in
pushf
mov
and
mov
push
(bad)
mov
sub
lds
mov
fisub
add
xchg
ss
mov
or
stos
(bad)
dec
jecxz
jl
int
pop
sub
in
test
test
push
pushf
mov
shl
mov
pop
xor
add
dec
jle
sub
mov
sub
(bad)
fst
call
popf
loopne
push
fwait
rcr
pushf
mov
retf
lds
stos
fimul
in
and
or
aas
xchg
sbb
dec
pop
cld
fcom
into
jb
(bad)
push
popa
adc
jmp
xor
popf
pop
out
in
scas
push
nop
xchg
mov
push
fild
das
shl
mov
retf
dec
mov
cmc
mov
xchg
mov
sbb
ss
adc
lods
sub
std
or
int3
(bad)
jmp
in
out
retf
and
mov
int
out
xchg
gs
clc
jecxz
or
sbb
(bad)
mov
(bad)
jns
add
and
scas
(bad)
lock
pop
cmps
jae
jp
daa
mov
fnstenv
and
mov
xlat
in
out
mov
push
jg
xchg
sahf
pop
add
aas
or
into
ds
adc
or
ficomp
pusha
cmp
arpl
shl
jbe
ss
and
iret
addr16
xchg
scas
mov
mov
cs
ins
shl
mov
mov
imul
mov
fist
and
test
xchg
mov
pushf
add
pop
jge
and
jne
inc
dec
int
mov
xchg
(bad)
imul
setno
je
cmp
or
mov
cli
push
pop
push
dec
into
or
cmp
in
(bad)
jmp
push
push
sub
in
mov
mov
or
call
ss
movs
xchg
or
cmp
and
adc
call
(bad)
test
cwde
mov
inc
nop
hlt
and
(bad)
ficom
and
mov
movs
dec
rcl
jmp
in
inc
call
push
lds
aam
iret
adc
pop
repz
test
sub
in
cmp
xor
mov
add
add
push
fucomi
pop
xor
scas
and
pop
sbb
mov
push
jb
jp
lods
mov
into
out
loop
xor
les
rol
aas
pop
jbe
push
and
cs
sub
in
mov
sbb
add
and
jle
cmp
out
stos
hlt
pop
call
clc
push
and
jmp
xor
ins
push
or
push
jge
mov
pop
imul
cmc
and
jae
jecxz
(bad)
out
(bad)
(bad)
ds
shl
dec
xchg
pop
ret
je
out
aas
retf
ins
loop
mov
popf
sub
push
sub
int
mov
mov
jnp
adc
jl
ins
mov
push
xor
inc
in
push
jne
in
(bad)
jne
xor
repnz
movs
cwde
cmp
es
and
stos
mov
or
not
lahf
retf
arpl
in
inc
iret
xchg
or
mov
es
inc
cmps
fldenv
sbb
ss
mov
out
xor
jecxz
out
and
in
dec
int
or
mov
pop
ins
jae
ins
dec
cmp
xlat
idiv
dec
mov
mov
test
clc
cli
pop
cwde
xchg
inc
or
and
test
gs
cmp
rcl
xlat
inc
out
je
ret
xor
xlat
ja
clc
push
loope
add
or
cld
cli
shr
sbb
adc
hlt
xor
movzx
int
push
rcr
icebp
and
jmp
dec
and
enter
or
mov
scas
out
adc
cmp
jge
pop
daa
or
mov
adc
fcmovnb
mov
jns
cmps
xor
dec
push
xchg
retf
mov
imul
mov
cmps
xchg
mov
int
loope
jne
popf
ficom
mov
mov
inc
and
pop
dec
ins
retf
jl
jne
jecxz
aaa
dec
repz
cmp
mov
je
fist
mov
ins
(bad)
xor
int3
push
jnp
mov
(bad)
les
inc
and
xor
bound
call
sar
jecxz
sti
xchg
ins
push
outs
jo
push
lea
shr
mov
int3
push
in
cmp
sbb
adc
push
lods
rcr
push
xchg
sub
add
push
inc
push
(bad)
sub
fadd
aam
int
cmp
adc
in
jae
add
outs
mov
pop
xchg
jmp
dec
mov
xor
(bad)
mov
lahf
fmul
sub
popf
dec
mov
je
je
addr16
xor
shl
aam
(bad)
cmc
jb
loopne
add
cmc
sub
(bad)
(bad)
addr16
pop
aaa
xlat
inc
mov
das
je
mov
popa
mov
mov
lea
nop
outs
mov
pop
in
sbb
xchg
mov
loop
sbb
test
pop
sub
ret
inc
aad
daa
mov
fadd
or
dec
in
dec
sti
arpl
push
loope
push
sbb
rol
push
xchg
pop
adc
jmp
das
scas
mov
jbe
mov
add
adc
(bad)
repz
dec
rcr
rol
hlt
jl
shr
push
add
pop
cmc
movs
retf
add
xchg
inc
mov
mov
pusha
mov
outs
outs
jbe
mov
xchg
ror
xchg
mov
pop
ret
movs
sbb
pop
adc
pop
(bad)
push
inc
(bad)
call
lock
xor
or
pop
pop
pop
js
pop
add
jecxz
add
or
jnp
sub
les
int
inc
scas
add
std
or
mov
test
and
mov
sbb
sbb
data16
jno
div
mov
lods
mov
push
mov
jo
lsl
es
loope
pop
cmp
fbld
retf
mov
xor
fbstp
lahf
nop
jecxz
js
icebp
or
inc
movs
test
scas
add
andnps
je
fs
rcl
pop
sbb
add
mov
jmp
ja
adc
xchg
dec
push
mov
mov
or
lea
xor
jno
iret
nop
xor
outs
cli
ins
adc
(bad)
in
hlt
push
adc
inc
retf
adc
dec
cmp
push
push
xchg
adc
add
in
add
cwde
lock
push
fdivr
dec
mov
shr
mov
aas
cdq
bound
in
mov
out
ja
stos
aam
fidiv
(bad)
pop
mov
ret
mov
lods
int3
shl
mov
les
inc
ins
pusha
xchg
aas
lea
sbb
out
fldcw
xchg
jecxz
cwde
sbb
and
jno
add
fs
ins
xor
mov
pop
clc
pusha
jne
adc
cmp
mov
loopne
dec
mov
lds
rcr
inc
aaa
pop
(bad)
shl
clc
adc
jb
mov
cmps
sbb
fwait
mov
jbe
ret
mov
adc
mov
mov
ret
popf
stos
call
stos
cld
adc
ins
mov
mov
clc
hlt
call
gs
or
jbe
int3
lods
js
cmps
add
in
jmp
lods
dec
adc
mov
nop
add
ds
jmp
xchg
stos
push
mov
popf
push
or
mov
inc
inc
mov
(bad)
cld
(bad)
cli
lds
repnz
lea
bound
pop
push
lds
repz
sbb
mov
or
mov
fmul
rcl
cmc
push
or
nop
dec
jbe
push
cmp
sbb
sbb
mov
jne
aas
scas
aas
movs
ja
(bad)
daa
inc
cmp
aas
or
or
nop
push
ds
cmps
add
js
repnz
push
sbb
sub
sub
sbb
test
mov
jg
sub
outs
int
sub
rol
mov
mov
out
push
fist
xor
sub
push
shr
(bad)
fstp
xor
push
xchg
push
push
adc
adc
push
test
movs
sbb
push
or
mov
dec
jl
test
loope
clc
test
(bad)
scas
daa
sbb
sbb
jns
loop
add
or
adc
popa
(bad)
out
sub
ins
mov
mov
loop
cmp
icebp
ss
mov
cwde
inc
mov
arpl
or
pusha
mov
ja
xor
cmps
call
cwde
mov
mov
rcl
or
push
cmc
fistp
or
lea
dec
movs
mov
or
adc
ret
inc
dec
mov
mov
dec
jg
popa
pop
jmp
ror
sti
outs
add
or
addr16
inc
rol
hlt
in
dec
shl
popa
shl
jns
jge
pop
push
std
fisttp
dec
or
xlat
push
sbb
(bad)
xchg
push
fisttp
jo
sub
lds
jle
shr
mov
jecxz
adc
add
jge
sub
cli
sbb
sub
(bad)
jne
dec
(bad)
jl
cmp
dec
sbb
out
inc
sbb
xchg
retf
adc
cmp
std
and
inc
jmp
dec
js
mov
inc
mov
mov
test
jp
mov
ins
cmc
push
not
nop
(bad)
cmp
cmp
cli
or
sub
xor
pop
movs
(bad)
stc
jg
mov
movs
fild
ffreep
shl
push
stc
dec
cmps
mov
nop
out
sub
in
sub
sbb
jp
and
sub
mov
mov
jae
lea
mov
add
enter
push
fild
fdivr
xor
lock
and
(bad)
movs
dec
int
jmp
xchg
(bad)
std
in
xchg
inc
adc
jge
adc
cdq
push
jg
xchg
sub
fldl2t
push
loopne
mov
push
imul
rcr
xchg
jg
out
adc
rcr
inc
ds
ss
or
clc
cmp
cmp
mov
dec
jmp
scas
dec
getsec
pop
pop
es
div
std
cmp
enter
mov
jbe
jl
mov
movs
ror
sar
xchg
cdq
xchg
pop
outs
fidiv
jae
pop
mov
fsubr
sub
repnz
hlt
mov
lods
mov
(bad)
daa
xchg
push
mov
fnstcw
cmovnp
cmp
sbb
jmp
sbb
push
pop
jg
outs
ins
fsubr
cmp
mov
and
mov
lds
jo
test
adc
retf
or
dec
sti
fild
inc
mov
adc
adc
push
mov
in
gs
sub
test
ins
not
and
or
mov
jb
jge
push
fcmovb
inc
mov
les
adc
or
sbb
mov
hlt
push
clc
sub
jmp
or
aam
shr
ret
(bad)
push
fld
mov
mov
stos
jmp
inc
fwait
inc
pop
jle
and
xchg
adc
inc
int
int
jg
or
jmp
fist
sbb
lods
sbb
sbb
xchg
pushf
test
(bad)
lods
stc
dec
cmp
mov
cmp
mov
fs
xor
mov
mov
(bad)
jmp
das
fcom
sbb
adc
mov
push
dec
cs
sub
push
sti
and
push
les
mov
mov
fld
and
mov
push
jle
daa
fild
movs
jmp
jecxz
and
cld
xchg
push
mov
iret
rcr
mov
xchg
mov
add
aad
push
pop
push
lock
xor
bnd
jo
stc
movs
cli
ss
mov
iret
add
test
test
xchg
fistp
and
jg
push
pop
ret
push
fidivr
jbe
sbb
xor
sti
jo
lock
retf
sub
mov
movntq
out
sub
pop
dec
or
add
jle
adc
or
cdq
mov
inc
sbb
jne
mov
js
out
sub
mov
mov
add
fucom
push
xchg
push
mov
out
mov
mov
push
nop
fidivr
sub
jo
inc
dec
xor
cwde
push
xchg
mov
mov
sar
das
adc
sub
jp
ds
xchg
pop
movs
and
cli
cwde
xor
pop
fwait
loop
stos
xor
sbb
cdq
mov
inc
(bad)
lods
pop
lahf
je
nop
mov
ret
sub
mov
jns
inc
add
sub
sti
(bad)
fstp
mov
or
nop
psrlw
clc
pop
xor
div
icebp
sub
push
push
inc
shr
adc
fisubr
out
inc
gs
and
out
jecxz
idiv
aaa
sbb
sub
cmp
cs
hlt
aas
jge
sub
pop
push
or
ins
cmps
ss
mov
add
nop
es
shl
xchg
cdq
cmp
or
sbb
enter
mov
ret
mov
xchg
psrlw
cmps
pop
fsubr
nop
mov
sbb
jmp
inc
daa
pusha
dec
(bad)
jo
push
retf
mov
fadd
cmp
popf
cmp
ret
les
inc
add
pop
pop
enter
or
shl
(bad)
mov
pop
jae
movs
add
inc
test
cmps
xor
add
aaa
cmp
das
stc
cmp
mov
inc
pop
push
mov
aaa
popa
dec
cmp
in
and
add
sbb
daa
push
jge
xchg
cmc
add
xchg
xor
dec
inc
ss
ins
mov
sti
cwde
or
mov
push
pushf
sub
xor
repnz
call
jge
xchg
jae
fwait
je
cmp
mov
push
ins
push
cmp
mov
retf
imul
sub
xchg
icebp
call
das
mov
xchg
pop
xchg
loop
dec
gs
jmp
ret
js
aad
rcl
push
and
into
mov
cmp
xchg
addr16
loope
inc
xchg
stos
retf
push
inc
(bad)
pop
vmwrite
dec
push
dec
push
pushf
xor
jbe
int
pop
cmp
dec
test
dec
mov
or
bound
scas
not
push
outs
pop
xchg
int
sub
je
imul
sti
bound
in
rcr
repz
rdmsr
loopne
xor
dec
mov
push
movs
lods
dec
push
add
inc
jmp
mov
cmp
shr
lods
inc
or
(bad)
das
mov
jo
xor
fwait
(bad)
das
or
inc
jnp
inc
out
mov
cmps
add
aas
xor
ins
mov
loop
shl
jo
mov
mov
ds
int3
or
mov
cmp
inc
mov
sbb
test
popa
inc
push
aaa
sbb
(bad)
mov
gs
loop
int3
jecxz
(bad)
mov
stos
xchg
dec
push
or
not
das
pop
and
fstp
shr
imul
fcomp
xchg
pop
push
xor
aas
jmp
xchg
jns
sub
inc
arpl
mov
call
sub
enter
mov
mov
sub
jmp
or
jle
sbb
xchg
pop
out
mov
test
cmps
pop
sar
or
adc
ds
jae
mov
clc
and
test
daa
repz
or
push
cwde
cmp
xchg
mov
and
cmp
pop
cdq
call
mov
add
or
cmc
outs
ins
lock
dec
jg
xor
or
jo
iret
aam
ds
mov
iret
add
int
ins
in
xor
push
cmps
(bad)
mov
jbe
cli
repz
pop
add
(bad)
hlt
push
add
jns
lock
pop
or
aad
sub
adc
out
je
mov
ret
outs
out
sar
scas
push
dec
pushf
idiv
push
jmp
add
push
cmps
emms
jmp
mov
jecxz
push
iret
scas
movs
adc
out
mov
dec
inc
push
ret
imul
retf
imul
cmp
or
inc
out
ins
cmps
into
pop
mov
pop
les
int
mov
sub
test
sub
jg
retf
xchg
pop
add
jno
dec
emms
sub
ds
shl
pushf
jmp
nop
je
int3
std
sub
test
and
das
cli
adc
sub
inc
arpl
jecxz
movs
xchg
pop
fisubr
push
push
ss
fs
retf
sub
dec
inc
push
out
movs
fcom
add
or
call
mov
das
ficom
jo
xchg
dec
leave
(bad)
push
jg
xor
jmp
mov
pop
shr
test
inc
aaa
ss
std
ins
mov
fcmovnu
mov
jmp
jmp
jae
scas
mov
lods
xor
mov
hlt
mov
fistp
mov
mov
jle
aad
jge
loop
push
aas
pop
dec
cld
out
cli
cmp
and
clc
mov
adc
mov
call
push
mov
add
xor
push
mov
push
add
movs
retf
pushf
mov
ins
js
jb
sahf
hlt
shr
jmp
sbb
xchg
pusha
push
xor
stc
sub
idiv
mov
xor
adc
not
cmc
test
sbb
inc
dec
movs
inc
mov
jmp
call
sub
pop
inc
call
sub
push
jle
push
inc
lahf
cwde
cdq
aam
mov
pop
hlt
or
xchg
or
xchg
dec
fwait
out
ins
ja
xchg
je
push
mov
add
pop
cmp
and
jecxz
fnsave
mov
adc
adc
fist
sar
mov
add
or
retf
test
lahf
or
add
ss
inc
out
outs
dec
vpmacssdd
dec
dec
mul
(bad)
mov
sahf
add
lock
es
pop
adc
clc
add
cmp
mov
cdq
xor
outs
inc
jp
mov
inc
inc
mov
and
(bad)
mov
cmp
mov
sub
mov
in
(bad)
call
inc
(bad)
xlat
pop
jmp
mov
sub
jo
js
sub
mov
cmp
xor
frstor
adc
cld
add
movs
mov
add
or
sub
mov
jle
je
popf
mov
add
jle
out
adc
sbb
sahf
addr16
mov
aas
jne
lods
jg
inc
daa
and
xchg
rcr
add
daa
mov
jmp
fistp
sub
cmp
push
mov
add
sub
adc
or
in
rcl
fwait
inc
(bad)
sub
add
loopne
mov
mov
adc
xchg
add
xlat
nop
movs
gs
(bad)
jl
add
jbe
outs
sub
es
xchg
push
fisttp
xor
inc
add
jge
pop
movnti
repz
adc
sub
(bad)
imul
xchg
mov
test
add
mov
pop
movs
push
adc
test
shr
outs
add
mov
jne
sbb
movs
cmp
mov
(bad)
lock
aas
mov
xlat
and
sbb
push
add
neg
pop
cmp
fdivr
out
mov
cmc
cdq
push
or
inc
arpl
or
clc
fidiv
shr
popf
pop
std
loop
pop
jp
adc
sahf
sbb
add
or
jmp
out
fwait
xchg
push
cmp
or
add
test
dec
xlat
fild
ds
jl
shl
mov
mov
mov
and
adc
cmc
in
hlt
dec
loopne
lods
in
fdiv
and
les
int
ret
sub
lods
call
mov
jle
test
push
paddsb
pusha
inc
pop
cld
xchg
cmp
jne
lahf
scas
inc
pop
add
data16
adc
cmp
leave
fcom
in
xchg
inc
(bad)
cmps
je
(bad)
popa
and
pop
xor
das
aam
cld
jl
mov
xchg
lods
dec
cmp
mov
mov
mov
push
mov
adc
loope
xchg
pop
mov
adc
mov
mov
inc
das
lods
enter
push
js
data16
fild
and
(bad)
sbb
cli
sub
outs
cmp
pusha
inc
stc
and
loopne
jne
and
add
xchg
mov
xor
retf
sbb
mov
(bad)
ds
pop
add
cmp
push
js
pop
jns
and
cmp
jbe
inc
sub
xchg
jb
stos
or
xchg
nop
or
fstp
popa
call
fcom
or
pop
stos
ret
mov
mov
inc
adc
sub
sbb
rcr
rcl
sub
fstp
in
aam
mov
adc
retf
lods
add
retf
ja
cmps
xchg
jb
mov
(bad)
mov
mov
push
cwde
pop
mov
imul
ret
mov
pop
outs
iret
xor
adc
and
push
inc
xor
fldenv
jmp
ja
in
(bad)
pop
movs
jnp
loopne
dec
es
jbe
xchg
in
cld
push
mov
das
jp
adc
ins
xor
xor
fdiv
mov
mov
mov
sub
(bad)
aam
mov
lea
mov
aaa
mov
or
call
stos
pop
dec
push
add
mov
sbb
fcomp
or
mov
adc
pop
mov
add
inc
sbb
jge
imul
cmps
retf
xor
ret
loope
xchg
or
call
dec
jb
and
adc
xchg
daa
sbb
jns
push
pop
adc
push
push
je
call
mov
dec
or
(bad)
cs
jbe
add
jle
xchg
pop
mov
test
mov
aad
cmp
mov
out
shl
packuswb
aaa
sbb
test
cmp
(bad)
pop
pop
mov
frstor
sbb
cmp
ja
je
dec
mov
and
jno
mov
retf
loope
loopne
jecxz
and
dec
arpl
xchg
jecxz
test
(bad)
cdq
push
xchg
and
mov
pop
movs
sub
inc
pop
pop
out
sahf
mov
and
mov
sub
movs
out
(bad)
sub
mov
adc
and
pop
int
dec
push
fidiv
push
lods
icebp
les
inc
add
jge
ss
jae
ret
xor
jo
inc
lods
xor
mov
cmp
sbb
pusha
mov
shr
dec
test
mov
jp
dec
mov
aas
sbb
adc
xchg
fisubr
(bad)
inc
dec
mov
xchg
mov
sbb
icebp
test
push
pop
es
mov
call
xchg
xchg
and
aas
retf
movs
lds
setbe
add
adc
ret
rol
push
test
fcmovnbe
fisubr
push
mov
or
jns
mov
mov
push
outs
or
push
push
push
sub
cli
mov
(bad)
xor
jmp
add
test
loope
and
aaa
test
call
scas
jle
sub
xor
cmp
lahf
sbb
mov
push
stc
jbe
adc
out
xor
rcr
or
fwait
cdq
daa
leave
das
pushf
pop
sbb
pop
cmc
movs
lods
jb
popf
gs
push
dec
enter
movs
sbb
push
idiv
adc
sbb
pop
scas
mov
jno
fs
sub
xchg
xchg
loopne
inc
(bad)
cmp
ja
and
mov
mov
lods
adc
shl
cwde
cmp
sbb
cmp
push
xor
jno
add
mov
push
cmps
xchg
fsub
pushf
jecxz
push
add
sbb
not
outs
fidiv
cmp
loope
je
mov
mov
ja
or
daa
cmp
or
cld
ins
sbb
add
idiv
adc
bound
int
retf
into
jno
jno
sbb
imul
xchg
cmp
scas
push
add
ret
(bad)
nop
jecxz
inc
jmp
pop
sub
cmc
push
sbb
cmp
sbb
ss
gs
and
cmp
imul
into
scas
push
sub
xchg
xchg
fistp
mov
inc
daa
out
pop
mov
add
(bad)
push
lods
add
stos
pop
sar
outs
ins
or
fwait
sahf
inc
scas
dec
les
pusha
cmps
ins
sbb
ins
aad
out
out
pusha
mov
push
in
jge
imul
nop
div
les
xchg
(bad)
xchg
fwait
sbb
out
push
and
movs
xchg
jo
ss
push
jbe
mov
jmp
mov
xor
sub
cdq
xor
mov
in
xor
pop
and
sub
in
scas
je
jne
xor
popf
call
mov
mov
jge
stc
addr16
scas
out
das
in
fxch
xchg
inc
push
cmp
ss
add
(bad)
sahf
retf
mov
pop
mov
mov
sbb
inc
inc
sbb
call
xchg
and
sub
mov
xor
dec
rcl
dec
out
inc
and
fst
mov
jp
stos
xchg
sbb
rol
dec
fwait
ins
ss
popa
mov
mov
in
or
xchg
sub
xor
ds
setg
inc
add
cmp
cmp
ret
icebp
add
(bad)
cmps
in
scas
push
loopne
push
sbb
ficom
mov
adc
clc
adc
xchg
dec
cmp
xlat
loopne
lds
inc
xor
lods
sbb
icebp
das
leave
cmp
dec
ja
push
xor
adc
std
xor
or
repnz
cld
loope
ins
int
in
xor
or
cli
pop
or
xor
cwde
xchg
dec
cmp
push
mov
push
mov
outs
(bad)
mov
loope
nop
mov
aas
cmp
pop
std
jle
pushf
fild
add
and
inc
int3
cld
xchg
ins
mov
lods
mov
(bad)
cmp
add
cwde
retf
ret
inc
mov
jb
enter
sub
sti
mov
mov
pop
fdivr
push
mov
or
(bad)
push
aas
pop
sti
jbe
lods
fidivr
jmp
mov
mov
cmp
push
sahf
mov
out
sbb
cs
cmps
hlt
add
imul
lds
inc
shl
fisttp
das
aaa
dec
and
loope
mov
lahf
dec
inc
xlat
jge
mov
test
sbb
dec
fdivr
xchg
pushf
add
nop
mov
xor
xor
je
scas
(bad)
xchg
stc
div
in
lea
out
mov
cmps
test
nop
data16
scas
sub
jecxz
push
inc
es
mov
push
icebp
popf
cmc
xchg
dec
add
lods
xchg
(bad)
xchg
mov
scas
movups
jle
clc
inc
ret
in
pop
mov
or
jge
inc
jg
arpl
jp
(bad)
sbb
lods
call
cdq
xchg
mov
jp
push
jns
inc
pop
sbb
mov
sub
test
mov
push
sub
and
imul
popa
mov
xchg
fbstp
(bad)
imul
addr16
loope
js
adc
dec
push
je
fdiv
cmps
pop
sbb
lock
xchg
xchg
sbb
repnz
sub
iret
push
dec
pushf
jp
shl
aas
sub
pop
fstp
xlat
inc
mov
pop
pop
in
lahf
cmc
pop
neg
loop
mov
jmp
ins
jnp
xchg
sub
jb
retf
xor
std
js
jnp
cld
cmp
xor
cmp
mov
lods
pop
inc
int3
inc
stos
fcomp
mov
retf
stos
pop
(bad)
mov
sub
outs
fild
xor
cmp
mov
test
or
xchg
bound
mov
out
aaa
sbb
es
pop
stc
add
loope
call
imul
adc
and
pop
lahf
xor
mov
sbb
js
popf
das
and
enter
ins
jp
sbb
adc
dec
stc
fistp
push
or
in
mov
xlat
cli
ins
dec
pop
pop
sti
jge
adc
loope
dec
jo
lock
push
sub
out
popf
xchg
or
retf
inc
push
jecxz
scas
or
jb
push
sbb
mov
test
mov
jl
pop
mov
inc
mov
push
loopne
jmp
ds
fsubr
cmp
mov
movs
jne
test
xor
call
jmp
sub
jecxz
test
ins
shr
and
xchg
shr
out
lahf
push
call
jno
jb
sub
push
cwde
mov
pusha
mov
inc
and
pop
cld
fdivr
mov
jne
ret
cmp
(bad)
lahf
mov
leave
add
test
add
rcl
xor
and
dec
cmp
enter
jp
mov
inc
or
jnp
test
cmp
es
xchg
mov
dec
jmp
add
fisub
dec
das
movs
(bad)
mov
sub
loopne
ja
jge
aaa
jl
loope
cwde
push
call
inc
jae
mov
and
and
fmul
test
stos
xchg
lods
xchg
mov
stc
outs
not
mov
pop
xchg
mov
neg
dec
imul
in
rol
jb
int3
sub
js
xchg
lods
xchg
push
and
jbe
xor
mov
dec
stc
cmp
cdq
push
mov
jb
mov
jmp
shr
jns
cmp
xor
pop
cdq
inc
retf
jle
dec
push
adc
add
lock
lods
cli
shl
imul
adc
sub
dec
add
push
aad
hlt
push
test
push
imul
nop
dec
jbe
stos
lds
fwait
movs
jp
ja
fcmovnbe
repnz
js
mov
jb
ror
call
pop
shr
or
mov
inc
jp
push
sbb
addr16
mov
ja
into
fidiv
(bad)
jmp
and
rcl
out
jecxz
and
inc
out
push
out
repz
(bad)
jmp
jmp
(bad)
jo
mov
mov
test
fwait
cmps
jnp
pop
xchg
and
sbb
sbb
push
std
test
sub
in
sub
aas
icebp
xchg
es
xchg
or
mov
lds
popa
xor
push
out
dec
mov
dec
cmc
mov
jg
lods
pop
popa
movs
xchg
data16
mov
xor
cmc
(bad)
popf
jmp
sub
jno
mov
jnp
nop
lods
in
(bad)
xor
sbb
popa
pop
push
popf
add
push
cdq
fbstp
adc
fidiv
and
inc
and
rcr
sub
pop
das
ss
sbb
nop
or
aaa
mov
addr16
xchg
pop
jo
sahf
(bad)
sbb
arpl
xlat
jg
xor
xor
lahf
imul
aam
dec
jge
je
xchg
cmps
inc
test
sub
outs
aaa
mov
jecxz
sbb
pop
je
dec
fstp
mov
aaa
ss
fisub
rol
out
lea
mov
jo
fisubr
bnd
xchg
sub
inc
jp
mov
ret
adc
dec
mov
sti
nop
cmps
xor
inc
pop
push
inc
leave
sub
xchg
mov
or
adc
push
pop
ret
out
or
mov
dec
enter
ds
stc
cdq
dec
mov
les
pop
push
cmp
arpl
push
dec
cdq
sbb
and
bound
inc
ret
sti
in
cmovb
mov
cdq
cmp
nop
add
and
jmp
jbe
repz
rol
out
dec
(bad)
out
sbb
jg
mov
lahf
push
sbb
bound
add
dec
inc
sub
jle
pushf
adc
repz
aas
cmp
mov
add
fist
xchg
and
cld
cli
and
mov
xchg
aam
test
jmp
cwde
sahf
inc
mov
ins
mov
js
add
stos
lahf
xchg
cdq
pop
in
sub
jne
mov
std
cs
jle
dec
xor
push
pop
pushf
je
jne
cmps
movs
stos
inc
fyl2x
xchg
mov
popa
cld
xor
popf
xor
push
add
pop
mov
scas
mov
push
and
int3
xchg
retf
icebp
fistp
pop
mov
push
stos
push
sub
pop
(bad)
enter
cmp
loope
dec
mov
imul
movs
push
mov
jge
(bad)
dec
mov
pop
mov
es
pop
in
mov
test
adc
fild
lahf
test
mov
ds
push
stos
jmp
int3
retf
fst
ret
loope
mov
inc
fiadd
mov
jne
cmps
push
xor
cmp
fst
mov
retf
rcr
ins
in
xchg
xor
movs
inc
scas
ins
scas
ror
imul
das
in
pop
and
aad
push
je
out
cmp
push
cmps
mov
lock
push
sub
dec
xchg
fucomi
neg
or
dec
pushw
mov
mov
js
inc
pop
xchg
cmp
out
sar
mov
scas
sahf
xchg
sti
stc
or
das
rol
shl
daa
adc
gs
ficomp
mov
(bad)
call
out
xlat
sub
adc
and
int3
js
pop
push
js
cmc
in
adc
or
xor
fisubr
cli
cmp
push
dec
mov
cmp
pop
push
ss
daa
mov
jns
call
outs
cmc
or
xchg
xor
sti
jmp
shr
test
cmp
cmp
xlat
jmp
jl
push
cdq
test
aad
fisttp
out
pop
push
xor
daa
mov
ja
les
dec
push
mov
or
sbb
jbe
adc
adc
or
pushf
pop
sbb
pop
xor
imul
jae
mov
inc
and
sbb
cmp
(bad)
out
sub
or
and
pusha
xchg
dec
addr16
movs
xchg
push
cmc
addr16
test
inc
and
or
push
sub
or
inc
clc
xor
lea
cwde
rol
repnz
lods
ret
fisub
push
rcr
js
sbb
out
scas
ret
ficom
or
xchg
shr
or
out
(bad)
call
dec
fdivrp
and
pop
in
fstp
or
jmp
(bad)
cmp
mov
in
mov
je
enter
in
sbb
sti
sub
shr
jp
adc
mov
sbb
mov
stos
int3
out
cmp
adc
rcr
call
xchg
dec
out
push
xor
or
jo
adc
call
stc
mov
lods
xchg
fmul
pop
xor
cmc
add
fcomp
jo
push
stc
inc
push
cmp
mov
test
inc
pop
in
fwait
jo
js
adc
add
(bad)
fiadd
inc
(bad)
rcr
fnstcw
pop
push
mov
movs
(bad)
mov
dec
mov
(bad)
jns
aaa
lea
xchg
out
push
push
xor
or
sti
jae
dec
das
(bad)
scas
push
push
jle
jno
mov
inc
sub
or
xchg
int
pop
sbb
cmp
inc
int3
lods
imul
xchg
inc
pusha
mov
sbb
cmp
jmp
loop
movs
pop
push
cmp
arpl
out
add
loop
or
xor
dec
cmp
repz
inc
add
bound
push
pop
ins
mov
add
aad
ins
ret
loopne
test
fnstenv
or
cmp
xchg
cmp
out
xchg
sub
leave
pop
or
and
and
adc
fnstsw
test
sub
test
push
dec
lahf
leave
ret
fstp
rep
loop
clc
daa
rcl
and
xchg
inc
shr
pop
ds
xorps
mov
cmp
jb
inc
lods
sbb
movs
ret
lods
shl
mov
jmp
(bad)
add
retf
(bad)
cmp
out
mov
jl
mov
jae
fs
lock
les
jp
pop
push
jp
cs
jbe
mov
fs
or
dec
std
mov
add
pop
fwait
jbe
jle
aas
adc
jmp
stos
test
adc
push
and
xlat
test
ds
clc
fstp
mov
inc
loopne
mov
pusha
jae
je
jmp
out
cmc
daa
ret
int3
jb
mov
push
sub
scas
clc
stos
inc
in
xchg
fidiv
mov
sub
mov
push
pop
ja
cli
jbe
jae
push
add
push
adc
call
push
js
mov
inc
xchg
shl
(bad)
or
mov
scas
(bad)
mov
retf
rol
cmp
pop
cmc
fistp
inc
leave
int
adc
sti
aaa
sbb
mov
jle
mov
dec
stos
or
pop
xchg
jne
add
movs
mov
mov
xchg
pop
dec
(bad)
js
int
sub
sbb
jno
or
push
inc
in
inc
je
xor
dec
repnz
sbb
lds
add
int3
ret
add
xchg
jb
mov
inc
jg
aaa
jecxz
pop
das
std
pop
add
test
jle
clc
sbb
dec
mov
or
cmp
stc
test
sbb
mov
mov
cmps
fld
movs
loope
inc
mov
and
add
sub
pop
daa
imul
(bad)
jb
mov
jbe
and
shl
adc
dec
push
frstor
mov
mov
xchg
mov
mov
jne
aaa
adc
jg
imul
jge
mov
pushf
push
out
fcom
call
xchg
bound
lea
jo
stc
in
xchg
dec
xor
retf
enter
mov
sbb
mov
jge
and
pop
xchg
shr
dec
and
jl
and
hlt
or
xor
cwde
sbb
adc
mov
inc
ret
sbb
mov
clc
jmp
add
sub
out
js
sbb
push
pop
and
cdq
test
pop
push
dec
adc
mov
pop
pop
lock
add
pusha
stos
jg
and
dec
sti
es
fnstsw
in
pusha
fadd
mov
dec
push
clc
es
dec
push
and
mov
enter
rol
cmp
cmp
adc
aas
dec
outs
sbb
aaa
push
add
stos
les
jl
inc
jmp
ds
jo
push
jg
icebp
jl
lods
test
dec
pop
jge
sbb
push
mov
mov
and
xchg
lods
mov
jnp
jb
std
ror
out
sub
xchg
fs
jno
icebp
ret
adc
outs
lock
mov
scas
sub
enter
xlat
jmp
or
test
add
mov
or
inc
or
xor
(bad)
xchg
cmp
xchg
ror
inc
sahf
mov
inc
stc
retf
cli
push
shl
stc
ret
mov
pop
push
in
fist
xchg
in
sbb
mov
inc
outs
xor
lods
xchg
mov
jecxz
adc
gs
test
mov
push
mov
cmp
adc
pop
pop
mov
or
mov
dec
mov
xlat
stc
inc
retf
movs
xchg
call
pop
sub
mov
retf
jp
cmp
push
adc
ins
add
pop
pop
paddb
out
aas
std
js
jle
mov
frstor
call
test
xor
mov
mov
push
sub
sbb
and
jbe
out
pop
jge
mov
movs
inc
xor
fdivr
(bad)
mov
shr
add
add
or
mov
jae
inc
arpl
daa
add
cwde
bswap
ja
outs
mov
int3
xchg
adc
call
dec
gs
xchg
xor
adc
adc
iret
dec
sub
lods
daa
push
ss
mov
jns
push
retf
rcl
mov
rcl
repnz
mov
test
pop
dec
jl
jns
int3
mov
in
mov
or
xor
cmp
sti
(bad)
push
retf
lock
sub
xchg
dec
xor
push
inc
mov
(bad)
shl
and
out
add
rcr
inc
push
jne
stos
cwde
test
mov
pop
cmc
(bad)
loopne
ds
pop
jne
outs
push
sbb
int3
mov
sbb
sub
je
ins
adc
xchg
ret
pop
pop
aas
mov
mov
rcr
inc
fadd
jle
and
arpl
movs
movs
push
ins
(bad)
jne
out
imul
lds
aas
mov
lods
(bad)
jb
std
or
and
dec
movs
push
dec
sbb
enter
add
int
or
cld
jnp
dec
jb
cs
xchg
and
mul
out
cmp
lea
ss
daa
or
rcl
das
sub
pop
inc
mov
mov
je
in
es
rol
mov
and
cmp
dec
jl
pop
push
jmp
dec
ss
xchg
movs
xor
xor
popa
and
pop
pop
xor
pop
inc
je
or
inc
mov
ins
cli
jge
test
or
js
cwde
jo
mov
out
pop
rol
stc
out
nop
test
pop
xchg
icebp
jmp
mov
jp
mov
add
adc
movs
push
mov
mov
xchg
mov
loope
shl
xor
nop
mov
xor
mov
jmp
hlt
stos
inc
xor
add
push
je
mov
jns
add
inc
out
jbe
mov
mov
jb
xchg
fsubr
dec
hlt
inc
cmc
jae
into
and
mov
call
and
sti
xor
push
push
inc
jnp
mov
or
mov
jbe
jne
fadd
into
icebp
jl
fstp
dec
retf
mov
adc
sbb
jg
leave
nop
jle
ret
into
fdiv
push
or
push
and
inc
and
je
sti
ret
fwait
push
adc
sub
jmp
jnp
popa
cmp
inc
sbb
hlt
cmp
dec
jbe
repnz
cmp
mov
and
or
les
imul
imul
std
pushf
mov
ins
and
lods
mov
retf
(bad)
stos
ret
loopne
rcl
lahf
in
and
hlt
arpl
add
call
pop
mov
adc
sub
cwde
and
dec
mov
ror
ja
call
das
scas
popa
cs
cld
pop
push
dec
je
mov
int3
pop
push
mov
jmp
ret
push
test
mov
aaa
push
movs
dec
inc
mov
ja
jl
int
push
xchg
mov
js
xor
push
lea
xchg
jns
scas
arpl
fcom
ror
fs
xchg
fdiv
jno
jl
dec
mov
cmp
sbb
sub
movs
(bad)
aad
in
lds
stc
add
dec
dec
mov
adc
inc
sub
xchg
jo
xor
test
imul
xchg
push
imul
inc
add
add
adc
xor
dec
das
lods
in
and
cmp
inc
add
and
repnz
fwait
cmps
out
xor
and
dec
cmps
scas
and
out
add
xor
popf
sbb
iret
lods
cmp
add
xchg
push
adc
jge
fistp
hlt
daa
test
mov
mov
(bad)
mov
pop
xchg
dec
call
psadbw
add
sti
aas
mov
cwde
int
in
or
dec
es
adc
popa
cmp
or
pop
pusha
nop
and
lea
mov
imul
and
xchg
cwde
mov
mov
sub
push
in
mov
aas
outs
or
into
in
rcl
mov
push
stos
cmps
(bad)
lea
sahf
mov
in
xor
(bad)
mov
call
adc
(bad)
imul
shl
cmc
mov
ja
push
push
push
lods
shr
add
ret
mov
lods
ds
outs
jle
mov
xor
sbb
dec
sub
mov
jno
iret
lock
and
xchg
ss
xor
out
push
xchg
test
xchg
icebp
shl
test
jle
stos
cmp
or
inc
jl
fisttp
pop
scas
cmp
in
xchg
jno
sbb
imul
pop
pop
mov
lea
or
rcr
js
test
ins
movs
add
sbb
cmc
cmp
lea
or
pop
fidiv
jmp
scas
ins
movs
mov
jge
pop
add
cmp
hlt
shl
popf
xchg
lods
push
jmp
or
xor
adc
imul
movs
jmp
lods
pusha
push
pop
mov
std
sub
hlt
mov
and
pop
mov
add
outs
daa
and
(bad)
pop
jno
out
add
sar
and
ret
clc
add
sub
mov
sbb
xchg
hlt
gs
das
sub
or
add
jecxz
and
sbb
or
or
sbb
jmp
retf
aaa
lock
icebp
pop
and
ret
imul
add
cmp
aas
out
movs
sub
fsub
push
fnsave
fstp
add
dec
(bad)
loopne
pop
and
jmp
leave
jbe
(bad)
xchg
cmc
lods
aaa
or
cli
fsubr
pop
cdq
fsubr
xchg
out
js
add
(bad)
repz
lock
add
mov
and
fst
mov
push
sbb
jecxz
pcmpeqb
(bad)
nop
sub
or
adc
push
pop
xchg
sub
add
jp
out
mov
mov
or
ins
sub
(bad)
sbb
xchg
popa
das
sub
mov
adc
icebp
fist
out
aad
adc
or
and
cli
and
movs
xchg
push
scas
dec
int3
test
push
ins
xor
add
sub
out
scas
int
xchg
(bad)
xchg
imul
inc
lods
(bad)
loop
sbb
push
mov
xchg
outs
or
nop
mov
and
mov
dec
sbb
cmp
les
(bad)
add
leave
jo
mov
adc
stos
fdivr
mov
retf
or
cmps
es
sbb
push
push
ret
mov
mov
add
repnz
fadd
push
lods
add
das
dec
lds
or
das
mul
and
test
fs
xchg
repnz
xchg
in
fucomip
imul
or
(bad)
jmp
mov
inc
mov
aas
ror
jnp
mov
sub
ja
dec
sti
mov
jecxz
lea
movs
jp
dec
xor
or
movs
pushf
mov
mov
sbb
(bad)
pop
mov
retf
inc
sub
stos
sbb
xor
not
in
dec
fdiv
mov
add
and
push
pop
(bad)
mov
in
gs
mov
jge
fdiv
or
and
and
mov
inc
popa
mov
push
cli
cli
retf
mov
clc
pop
enter
ins
mov
aas
sbb
xor
cmp
adc
inc
aad
adc
jl
dec
add
retf
in
pop
or
mov
jns
cs
mov
dec
xor
mov
push
jo
out
adc
pop
out
jo
push
and
inc
test
aas
(bad)
inc
hlt
pop
test
fs
enter
pop
mov
lock
or
xchg
add
movs
add
or
mov
dec
jnp
movs
or
adc
push
pop
rol
xor
leave
rcr
fwait
cmp
mov
in
xchg
test
push
sbb
js
je
adc
imul
int
push
pop
cmps
movs
push
inc
adc
cmc
dec
arpl
sbb
cmp
mov
jecxz
mov
iret
or
mov
imul
je
cmp
inc
cwde
cmp
jmp
xlat
fild
and
ret
(bad)
aad
sar
ins
pop
cmp
adc
(bad)
jg
xlat
jmp
mov
push
add
sti
in
mov
adc
inc
jae
nop
sub
jo
in
push
pop
sbb
mov
dec
test
jl
sbb
inc
ret
jge
in
aaa
inc
dec
aas
lahf
and
popf
mov
cmp
cmp
or
add
(bad)
gs
mov
in
arpl
mov
and
xchg
gs
mov
in
xchg
dec
pop
or
je
dec
outs
cmps
pop
mov
inc
mov
mov
ins
cmps
pop
ja
xchg
into
xor
pop
inc
les
and
repz
mov
fst
jle
stos
mov
lahf
shl
mov
scas
jg
pop
lds
cmps
sbb
dec
sub
test
and
cmps
xchg
in
pop
xchg
mov
test
bound
jb
or
fist
or
imul
loope
push
push
xchg
aam
repz
repz
sbb
out
jb
jne
xor
aas
aaa
arpl
push
xchg
cwde
pop
cmp
push
sub
jns
lods
lods
cdq
xor
mov
shl
mov
mov
ret
cmps
cs
pop
sbb
sub
shl
jg
sbb
dec
packuswb
pop
push
pop
xor
(bad)
ins
mov
inc
fsubr
in
jns
out
in
out
jl
mov
add
mov
and
xlat
sub
add
push
mov
sub
dec
cld
jmp
dec
dec
xor
push
sbb
add
cwde
pusha
fisttp
xchg
mov
popa
ret
push
into
inc
lds
sub
test
(bad)
mul
and
push
adc
loopne
je
jno
cmp
mov
pusha
dec
and
jmp
(bad)
mov
pop
js
call
les
sbb
push
xor
test
aaa
sub
adc
mov
jecxz
movs
daa
jo
scas
ret
ja
dec
push
out
cmp
mov
test
ja
jae
dec
mov
les
xchg
sub
sub
and
jo
in
pop
adc
add
arpl
adc
iret
bound
inc
sub
push
pusha
fsubr
aad
inc
sbb
dec
pop
push
add
add
mov
rcr
cld
fwait
ins
aas
stos
stos
movs
call
jge
jp
arpl
lahf
lahf
sub
adc
pop
cmp
and
push
inc
pop
stos
loope
xchg
enter
xor
lock
jns
fmul
adc
fcom
mov
jl
test
xchg
scas
in
pop
xchg
jae
(bad)
xor
lea
xchg
cmc
add
jnp
icebp
bound
fstp
mov
sti
addr16
ins
jnp
xor
sahf
loopne
pop
aad
mov
dec
addr16
push
sbb
cmp
retf
dec
(bad)
sbb
sub
adc
xor
stc
fs
pop
test
daa
mov
stos
aad
fwait
xchg
dec
pop
add
mov
inc
pop
add
xchg
push
dec
or
int3
ficomp
shl
dec
jl
(bad)
push
icebp
out
aas
mov
jge
cli
mov
adc
jg
enter
push
(bad)
aaa
test
shl
dec
xchg
sbb
test
inc
jae
and
out
lock
loopne
xlat
movs
popf
sub
out
pushf
sbb
out
(bad)
test
fs
out
outs
push
jmp
or
pop
mov
xor
add
test
cmp
and
adc
aaa
repnz
jl
lods
dec
sbb
dec
sub
fstp
aad
out
jnp
out
and
xlat
xchg
adc
push
sbb
xlat
imul
pop
add
push
enter
adc
mov
inc
jno
dec
dec
and
push
mov
dec
bound
(bad)
jb
pop
inc
xchg
mov
lods
adc
addr16
(bad)
push
inc
inc
mov
sahf
sbb
xchg
pop
shl
ins
inc
gs
or
in
mov
es
add
sub
mov
pusha
out
mov
mov
or
cmps
push
hlt
leave
sub
mov
jns
cmp
imul
mov
in
jne
dec
pop
gs
pop
loop
retf
pop
add
mov
sar
and
cmp
lods
lods
cmp
repnz
mov
pop
jae
js
sub
jo
test
ss
(bad)
dec
pop
push
mov
nop
adc
push
(bad)
in
sub
bnd
xchg
ja
sbb
stos
inc
in
adc
pop
sbb
add
mov
pop
mov
xor
add
shl
out
mov
(bad)
int3
pop
std
fs
dec
sbb
and
pushf
jecxz
jg
aam
rcr
cmp
hlt
jge
pop
(bad)
aaa
(bad)
cld
pusha
fstp
das
add
lea
inc
mov
int3
mov
(bad)
add
outs
nop
pusha
ror
jno
cmp
dec
std
scas
push
rcl
add
test
mov
mov
cmp
jmp
push
data16
cdq
push
xor
int3
push
in
popa
inc
xor
mov
inc
mov
sbb
sub
ja
mov
xor
sti
data16
or
lahf
in
cmp
adc
les
cs
adc
imul
xor
lods
nop
fmul
test
push
jg
add
sbb
adc
inc
pop
stc
(bad)
mul
mov
ja
mov
sub
test
fcmovnbe
aas
test
cmp
adc
shr
pop
test
fmul
cmp
cwde
mov
pop
push
test
lahf
scas
xchg
adc
sbb
mov
xchg
mov
dec
int3
in
pop
stos
ins
jmp
outs
or
inc
outs
sbb
add
push
bts
inc
push
jge
jo
jo
xchg
push
in
fs
add
call
push
leave
ret
mov
jo
cmp
or
(bad)
dec
inc
cmp
mov
and
adc
jecxz
or
mov
xchg
sbb
lahf
in
loopne
pop
xchg
pop
and
pop
fs
add
aam
xor
movs
jecxz
scas
fsubr
lea
stc
std
inc
in
pop
dec
xchg
mov
lock
pop
or
ret
pop
cmc
retf
and
mov
sti
cdq
dec
fcomp
dec
clc
dec
adc
push
pop
mov
loop
or
lds
adc
dec
cdq
mov
dec
dec
inc
loopne
lds
sbb
iret
inc
(bad)
mov
or
jb
sbb
movs
sub
ret
repnz
in
pop
aaa
add
repz
test
cmp
push
(bad)
xor
xchg
cli
aaa
sbb
add
test
fmul
dec
rcr
jle
push
stc
mov
(bad)
jb
mov
pop
retf
hlt
in
lahf
jle
jo
jmp
inc
mov
dec
adc
cdq
ins
test
add
adc
pop
ss
sti
jne
out
xchg
inc
and
and
pminsw
loop
pop
xchg
and
mov
(bad)
mov
fldenv
aas
aas
or
inc
cwde
pop
aad
adc
sub
or
shr
cld
ins
lahf
aaa
push
or
jo
mov
jnp
mov
xchg
shl
test
push
lea
mov
add
sbb
outs
mov
in
es
xchg
inc
xor
cli
aas
ja
aam
or
aad
(bad)
pop
sbb
idiv
inc
adc
sar
fstp
push
adc
xchg
sbb
or
(bad)
pop
sbb
and
shl
cmp
pushf
das
repz
sahf
ret
or
fwait
lds
adc
sub
mov
jmp
test
adc
stos
outs
xchg
fwait
dec
cmps
sti
ror
retf
push
inc
inc
out
nop
mov
cmp
sbb
(bad)
xchg
in
inc
mov
jg
popa
or
imul
sub
lea
mov
imul
(bad)
sbb
mov
mov
ins
not
xchg
cmps
jge
pop
mov
mov
ss
jnp
cdq
cmps
in
mov
xlat
stc
ret
xchg
dec
jecxz
or
mov
sbb
lds
aaa
mov
dec
push
std
lods
mov
xchg
ds
mov
jb
xchg
sbb
xchg
cmp
mov
xchg
mov
adc
fmul
int3
aam
into
jecxz
pop
push
sub
stc
(bad)
out
mov
jmp
and
ja
lods
loopne
mov
jp
ret
mov
push
jl
dec
mov
call
sahf
mov
cmp
out
cmc
ss
jg
cmps
dec
out
in
fidiv
test
test
jnp
clc
stc
push
out
aad
adc
lahf
enter
cdq
mov
das
js
adc
pop
(bad)
cmp
sbb
add
xchg
adc
pop
mov
adc
mov
out
mov
retf
(bad)
sub
add
jbe
pop
lds
sbb
cmc
xchg
aaa
rol
push
test
sbb
and
or
add
or
dec
mov
pop
push
push
daa
dec
sahf
sbb
lds
or
push
nop
xor
ret
retf
mov
arpl
das
sub
cmp
dec
stos
and
cdq
sbb
pop
pop
imul
sbb
std
lods
mov
retf
jp
mov
push
push
mov
(bad)
int
mov
shl
dec
jnp
jp
mov
arpl
mov
dec
mov
sub
xor
mov
loop
nop
(bad)
jae
(bad)
aaa
mov
mov
mov
mov
xchg
shl
mov
and
push
sbb
jno
jb
add
clc
pop
add
in
inc
xor
mov
mov
aaa
or
outs
pushf
pop
and
lds
jnp
ds
cmc
jge
ret
movs
pop
mov
mov
sahf
push
jnp
push
or
int
mov
loopne
imul
adc
fistp
fild
mov
push
ja
or
push
test
push
or
mov
loopne
fsub
push
xchg
dec
imul
ins
fwait
jmp
lock
fs
out
loopne
dec
xchg
scas
jmp
pop
std
loope
mov
retf
mov
pop
icebp
mov
jmp
test
outs
cmp
and
cmps
ror
mov
call
dec
pusha
ja
int
fld
cmp
sub
scas
gs
cmps
loope
xor
(bad)
jmp
jae
xor
fdivrp
pop
jnp
(bad)
ss
push
push
jmp
sub
mov
loope
hlt
adc
or
hlt
repnz
(bad)
sti
(bad)
cli
fcmovne
aaa
fwait
mov
aas
aad
push
daa
and
mov
jge
(bad)
pop
je
jmp
inc
in
xchg
rcr
xchg
adc
or
test
shl
adc
mov
jge
scas
pop
mov
lea
(bad)
jb
in
cmp
cmc
mov
inc
and
mov
sar
lahf
hlt
je
and
rol
mov
adc
in
dec
sahf
imul
xchg
xor
pop
in
loope
jo
push
scas
xlat
mov
or
call
pop
push
sbb
scas
mov
(bad)
out
mov
int3
push
add
fadd
mov
pop
leave
ror
fild
arpl
cmp
clc
push
int3
outs
nop
test
sar
ficomp
xchg
add
mov
adc
pop
push
xchg
jne
ror
inc
aam
sub
ins
(bad)
fld
add
dec
xor
sub
test
movs
cmps
xor
xchg
mov
aam
(bad)
push
or
(bad)
pusha
mov
arpl
mov
add
mov
fstp
jbe
cmp
ja
das
and
test
pop
xor
bsr
ficom
jnp
adc
pop
adc
lock
add
shr
and
stos
nop
push
gs
cdq
je
pop
mov
push
xor
adc
add
fdiv
mov
cwde
jmp
movs
jae
movs
aad
push
mov
stos
hlt
push
es
clc
jno
add
pushf
test
dec
adc
sbb
test
into
pop
cmps
movs
sbb
pop
fcom
pop
jle
push
int
cmp
add
popf
nop
cmp
or
imul
dec
stos
push
ret
pop
cs
cmps
dec
retf
jb
jb
test
inc
push
mov
(bad)
ret
sahf
mov
sbb
pop
shr
jbe
xchg
mov
cmp
jg
movs
dec
scas
outs
fld
jmp
sub
int
inc
nop
push
inc
xchg
je
sbb
pop
cmp
cmp
push
inc
mov
jo
jge
xor
mov
ins
xchg
pop
rcr
repnz
jns
sbb
mov
pop
add
cmp
push
(bad)
rcr
dec
cdq
lock
in
cmp
sub
in
adc
adc
nop
pop
adc
push
cs
test
mov
ins
jle
add
or
push
sbb
sbb
ja
sbb
xchg
cli
cmps
les
mov
aam
loop
pop
jecxz
xor
es
xchg
xchg
inc
jmp
inc
cmpps
cmps
ret
cmp
mov
(bad)
cmc
lods
push
push
adc
jbe
aam
call
jno
xor
gs
mov
dec
call
repz
sub
xchg
cmp
cmp
mov
pop
push
inc
push
cs
xchg
in
push
loope
and
add
dec
jg
stos
cmps
into
xor
retf
push
call
jno
mov
cmp
mov
xor
rol
(bad)
jmp
sbb
inc
call
mov
xor
cmps
jo
(bad)
icebp
clc
jb
cs
imul
shl
jmp
push
sbb
in
cdq
stc
(bad)
adc
fs
pop
and
enter
xor
mov
xchg
sbb
cmp
dec
(bad)
push
mov
sub
cvtps2pi
adc
push
cmp
jns
ins
fchs
or
movs
(bad)
mov
jmp
and
inc
ds
push
jb
cwde
int3
sub
jns
cmp
mov
sub
rcr
mov
and
cmps
or
loop
or
fsubr
outs
or
xchg
or
push
dec
fstp
dec
aaa
mul
gs
mov
xchg
retf
mov
or
xchg
int3
ret
test
inc
fs
sti
jnp
sbb
dec
adc
(bad)
rol
cmp
cmp
(bad)
(bad)
push
jmp
push
test
fs
ins
push
adc
sub
lock
in
mov
sbb
rol
mov
xor
mov
cdq
nop
iret
jb
neg
enter
mov
sbb
dec
popf
in
repnz
and
mov
in
mov
xor
ss
xor
pop
pop
jno
xchg
movs
push
or
sti
mov
rol
inc
rcr
hlt
enter
je
inc
loop
aam
ins
clc
ins
lahf
add
xlat
cmc
jae
mov
mov
ja
add
mov
fstp
mov
push
lahf
push
cmps
sub
(bad)
rol
or
pop
mov
or
dec
dec
inc
or
xchg
(bad)
(bad)
cs
jno
jl
dec
(bad)
push
rcl
loope
dec
push
jbe
xor
mov
jb
jg
add
push
jge
fs
mov
adc
hlt
stos
mov
add
pop
leave
sti
mov
int
mov
xor
pop
xchg
loope
xlat
test
sbb
jecxz
rcr
jns
pushf
sub
mov
pop
mov
sar
scas
lock
inc
pop
retf
retf
dec
mov
and
hlt
and
imul
push
adc
pop
dec
xchg
adc
lds
xchg
fsub
push
xchg
loopne
xor
loopne
cli
(bad)
pop
jmp
fs
sahf
mov
push
and
inc
cmp
pop
out
aad
and
out
dec
cmp
xor
icebp
adc
fwait
bound
icebp
mov
lea
rdmsr
inc
pop
sub
push
jecxz
dec
cmp
cmp
outs
lods
and
mov
sub
rcl
shl
mov
aas
sbb
cmps
sbb
and
hlt
fcom
mov
out
loope
lds
push
sar
sub
int3
popf
bound
inc
sbb
xchg
push
std
inc
push
in
mov
stc
shl
scas
mov
mov
rcl
mov
mov
dec
shl
inc
jmp
inc
(bad)
lock
pop
jmp
add
ret
add
mov
xor
clc
jbe
push
fcom
cdq
pop
jns
dec
mov
jge
fldcw
sub
leave
pop
iret
jecxz
adc
and
fldcw
adc
push
push
xor
bound
cmp
loop
shr
(bad)
pop
(bad)
icebp
(bad)
loopne
pushf
popa
test
adc
in
cmc
scas
hlt
imul
pop
mov
ret
inc
jp
and
push
pop
mov
pop
fs
mov
popa
and
pusha
sbb
(bad)
push
sar
or
lds
ins
adc
sbb
jns
and
out
stos
punpcklwd
mov
jp
mov
sub
lods
adc
lahf
mov
call
lds
cmp
push
push
xor
out
out
outs
push
xchg
jnp
xlat
inc
mov
scas
mov
fld
in
push
mov
cmp
pop
pop
pop
mov
push
mov
dec
and
out
mov
inc
jmp
inc
or
sti
push
dec
mov
mov
push
push
lods
cmp
sbb
jle
aad
sti
popa
xchg
push
and
rcr
and
jno
sbb
ss
or
xlat
(bad)
xchg
arpl
sar
rcl
fwait
pop
mov
(bad)
ins
mov
ret
daa
sar
jne
(bad)
ja
fdivp
faddp
pop
lds
pop
lea
fisubr
push
fstp
out
inc
sbb
sbb
or
and
xchg
pop
rep
and
adc
pop
dec
loop
sub
add
bound
dec
test
or
inc
imul
test
adc
bound
mov
outs
mov
retf
dec
dec
sar
mov
sbb
inc
or
sar
(bad)
jge
inc
xor
inc
aad
cmp
push
daa
loope
and
sets
(bad)
(bad)
scas
sub
mov
jmp
and
cmp
mov
inc
cmp
adc
mov
xchg
pop
and
leave
mov
mov
add
and
cli
pop
add
or
mov
mov
cmp
movs
push
inc
cmps
mov
or
mov
jne
ds
jae
pop
mov
das
pause
mov
push
xlat
or
adc
loope
sbb
push
or
cdq
clc
fdivp
jbe
sbb
out
xchg
sub
sahf
adc
inc
cdq
push
push
loopne
daa
and
repnz
shr
dec
les
jl
sar
not
or
sub
push
pop
push
mov
mov
push
mov
(bad)
ja
cli
imul
mov
push
dec
data16
loope
cmp
jl
rol
sbb
add
add
inc
inc
or
cdq
out
mov
mov
stos
je
add
repnz
or
ja
lahf
add
and
xchg
daa
sub
popa
movs
sub
and
fist
shr
pop
jle
pop
mov
fisubr
adc
sub
dec
aaa
pop
push
dec
mov
(bad)
dec
cmp
outs
push
pushf
popf
cmp
or
inc
gs
(bad)
pop
in
dec
fild
add
les
inc
cmp
add
mov
push
mov
pop
js
xlat
mov
push
and
ja
retf
cdq
mov
fbld
daa
push
or
jnp
cmc
xchg
cmp
int
jo
cwde
mov
cmps
mov
adc
repnz
and
or
fimul
mov
mov
call
mov
sbb
fwait
lock
inc
sbb
add
xor
xchg
fsubr
jecxz
rcr
cs
sbb
jnp
popa
adc
cmp
xor
shl
daa
xor
dec
pop
ret
cmp
fsub
pop
jno
test
(bad)
mov
fimul
push
push
retf
js
xor
mov
cmc
test
mov
lods
adc
jae
and
jmp
jae
adc
mov
aam
lahf
push
(bad)
jge
int
jl
adc
addr16
add
fcom
int3
(bad)
ror
cwde
retf
ja
loop
xor
or
test
dec
outs
jb
out
addr16
jmp
mov
add
call
stos
ins
push
pop
ficom
sbb
mov
shr
lods
xor
fs
loopne
mov
mov
fidiv
ja
xor
(bad)
imul
scas
nop
or
ret
dec
dec
cmp
pop
mov
ss
je
jmp
in
sub
out
cmp
shl
loop
sbb
rcl
call
or
ss
dec
push
cmps
xchg
mov
cmp
and
mov
sub
push
cmp
dec
repnz
cmp
stos
(bad)
(bad)
cli
pop
lahf
jno
adc
inc
fucomi
test
pop
dec
jne
rcr
leave
or
add
xchg
call
mov
ror
or
sub
out
popa
cmp
xchg
push
lahf
inc
in
xor
out
sub
inc
push
pop
test
ja
dec
sbb
jno
and
mov
scas
cdq
cli
adc
fst
imul
shl
and
cs
inc
fimul
mov
mov
sahf
and
push
cmp
imul
push
push
and
out
xchg
and
call
fadd
add
dec
cmp
cld
jne
addr16
leave
adc
sub
gs
je
(bad)
movs
test
push
shr
imul
retf
dec
(bad)
xor
test
sub
call
addr16
mov
icebp
lock
jo
imul
and
mov
add
mov
das
or
jg
sub
fstp
mov
and
(bad)
ficomp
inc
fidivr
bound
fst
fcmovb
pop
mov
push
int3
mov
mov
adc
aad
lods
aam
jnp
mov
mov
or
dec
mov
xchg
add
push
ins
mov
iret
enter
xor
inc
std
ss
inc
inc
lods
dec
cld
aad
mov
pop
call
mov
push
in
fiadd
test
call
test
imul
fldcw
inc
or
(bad)
xor
mov
mov
movs
mov
loop
mov
dec
add
fidiv
and
sbb
icebp
stos
rol
push
inc
dec
or
push
push
rcr
hlt
cmc
loopne
and
cmp
je
and
push
mov
fs
stos
or
xlat
cwde
xor
xchg
xor
adc
push
shr
in
mov
rol
jge
or
mov
push
jnp
sbb
mov
xor
aas
fstp
jge
int3
out
adc
cmp
arpl
dec
or
inc
jb
fdiv
jbe
ds
fs
test
mov
arpl
fnstsw
jno
dec
mov
mov
jg
add
je
fsub
sar
and
push
sub
jp
loope
push
push
clc
(bad)
lods
pop
imul
jae
movs
rol
lods
ss
inc
cmp
mov
jo
neg
ror
cld
jb
mov
test
mov
fstp
ja
scas
fisttp
mov
les
shl
sbb
ror
das
push
hlt
icebp
mov
idiv
pushf
sbb
jge
pop
push
jge
cli
in
cmc
dec
in
shl
les
out
popa
mov
outs
aad
(bad)
int
pop
mov
sub
mov
inc
sbb
mov
inc
mov
pop
pop
repnz
clc
mov
out
sub
xchg
test
mov
or
out
xor
mov
cmps
adc
push
jl
push
or
or
adc
in
outs
sub
push
jnp
int
lods
xchg
or
rcl
shl
jle
dec
mov
sub
pop
daa
ror
(bad)
leave
popa
test
loopne
addr16
add
pop
xor
cli
inc
dec
cmps
pop
inc
push
lgdtd
daa
sub
(bad)
mov
inc
stos
mov
mov
pop
popf
je
inc
aas
les
icebp
jne
pop
retf
inc
retf
jb
adc
std
ins
xchg
or
aam
adc
adc
pop
or
sub
pop
clflush
or
outs
dec
test
mov
jge
sub
movs
in
cmp
inc
fidiv
dec
jle
mov
fstp
test
pop
ret
stos
pop
sbb
mov
mov
test
test
outs
jge
mov
jl
pop
loopne
add
mov
jo
dec
adc
push
sbb
pop
cmps
mov
es
idiv
jb
and
inc
sahf
pop
stc
pop
dec
adc
cmp
inc
in
fwait
test
addr16
bnd
sbb
jg
push
cmp
(bad)
push
fwait
test
pusha
call
mov
xor
ins
pop
sbb
xchg
inc
andps
aas
pop
sub
xor
jb
jge
inc
test
mov
pop
mov
inc
push
stos
or
mov
cmp
adc
lock
adc
ret
push
test
sbb
jg
mov
jbe
cvtpi2ps
and
stos
fstp
push
sub
adc
pop
ss
fisub
mul
pop
pop
imul
dec
imul
adc
jp
jo
inc
(bad)
push
add
jb
aam
add
in
pop
jns
or
cmp
aaa
and
(bad)
mov
aaa
bound
sub
in
push
mov
sbb
in
push
div
inc
pop
aaa
jne
add
mov
xor
ret
inc
xor
out
mov
ficom
in
sub
aas
frstor
rcl
fisttp
(bad)
loop
mov
fcomp
mov
jmp
push
mov
sbb
(bad)
mov
dec
call
cld
pop
inc
sub
xchg
push
clts
xor
and
add
dec
sbb
xor
push
cmp
inc
jg
push
pop
mov
(bad)
inc
xchg
pusha
push
pop
neg
(bad)
dec
pop
retf
and
push
inc
add
mov
lahf
jbe
sub
dec
xchg
pop
cli
or
mov
arpl
stos
cmp
in
push
pop
pop
add
or
dec
movs
xchg
mov
lea
jp
test
scas
mov
and
xor
jno
xchg
jne
out
push
mov
test
ins
loope
sbb
jns
test
ror
adc
adc
dec
push
rcr
xor
fdivr
xchg
push
movs
iret
outs
loopne
aaa
cld
sbb
das
jne
retf
cmp
out
pop
jmp
pop
(bad)
call
jae
mov
mov
test
cmp
inc
mov
jnp
mov
pop
mov
adc
dec
mov
lds
scas
pop
cdq
jmp
cmp
out
sub
ins
inc
loope
sub
lahf
inc
loopne
fidiv
lods
out
sbb
in
cdq
pop
adc
adc
test
mov
ins
out
stc
retf
mov
cmp
(bad)
out
inc
daa
mov
jae
push
enter
inc
dec
xchg
inc
out
mov
repnz
neg
inc
push
xor
add
xchg
es
xlat
xchg
lahf
leave
push
mov
xchg
jns
imul
setno
test
xor
sbb
adc
popa
dec
stos
sbb
cmps
and
test
jp
out
mov
imul
push
enter
imul
aam
aas
mov
xchg
retf
mov
push
push
and
mov
lea
leave
and
pop
add
mov
jae
adc
enter
lods
push
pop
bswap
gs
jo
scas
jo
test
mov
push
paddq
xor
(bad)
int3
inc
cmc
or
jmp
daa
daa
scas
adc
push
jae
in
dec
div
das
test
dec
fnstenv
cmp
pusha
nop
add
iret
loop
cdq
mov
dec
adc
mov
movs
adc
mov
daa
inc
mov
not
push
fcomi
adc
call
mov
or
cmp
mov
std
adc
into
sub
inc
mov
jge
push
xchg
inc
add
jmp
xchg
ficomp
cmc
mov
out
scas
adc
movs
and
xlat
rcl
push
cmp
mov
sbb
cld
int3
aam
rol
arpl
shl
jo
pushf
lods
adc
inc
push
adc
ss
lods
in
fwait
ds
fld
test
clc
popf
into
stc
cmps
inc
push
jb
shr
lea
js
daa
mov
mov
daa
rcr
xchg
stc
jmp
es
aam
je
add
mov
xchg
lea
xchg
test
xor
dec
sub
xchg
js
clc
and
in
scas
mov
lds
popa
mov
test
sbb
mov
and
sub
sahf
call
das
xor
dec
outs
add
cmp
mov
pushf
cmp
mov
mov
mul
jae
test
cmp
lods
pop
cmp
inc
push
pushf
mov
imul
xadd
mov
xor
test
(bad)
retf
inc
movs
inc
inc
jno
je
repz
adc
cmp
dec
fs
data16
jae
mov
es
lods
out
fistp
dec
and
mov
inc
mov
adc
fistp
pop
hlt
cmp
mov
push
pushf
ins
mov
loop
mov
adc
stos
add
jl
push
dec
popw
fild
inc
push
pop
sub
(bad)
cld
push
in
cmp
or
arpl
mov
(bad)
xor
in
add
add
add
and
call
aas
mov
ret
fdiv
mov
ret
mov
push
call
mov
jno
add
jo
jne
add
shl
(bad)
out
call
push
addr16
adc
leave
sti
sar
mov
mov
ret
repnz
mov
dec
cmp
pop
inc
test
sbb
int3
pop
scas
in
mov
push
mov
xchg
in
adc
test
sar
or
add
xchg
mov
mov
inc
adc
inc
xchg
ret
pop
push
and
loopne
mov
cwde
xchg
pop
sbb
test
jo
jbe
mov
xor
mov
mov
fist
lahf
pushf
out
clc
add
pop
scas
xchg
mov
outs
lods
mov
mov
test
mov
call
data16
js
push
add
add
ret
mov
mov
pop
xchg
adc
lods
iret
pop
xchg
inc
mov
sar
jmp
cld
mov
ret
mov
xor
rcr
(bad)
jg
ja
sbb
imul
push
mov
fwait
sub
jne
sar
test
xor
ds
inc
cmp
inc
popa
add
inc
retf
xor
push
popf
(bad)
mov
es
sbb
add
xchg
mov
stc
cmp
or
cld
push
mov
dec
int
adc
shl
pop
sub
cdq
adc
mov
xchg
push
xchg
pushw
inc
sahf
push
sbb
enter
sub
(bad)
pop
(bad)
mov
fdivp
cli
je
mov
fsub
shl
test
mov
jb
xor
and
mov
adc
stos
xchg
adc
mov
jmp
test
mov
add
in
shl
ret
xchg
xchg
repnz
sub
(bad)
pop
jno
and
out
mov
jnp
ds
xor
ja
mov
int3
cmp
fsub
xchg
push
and
pushf
ret
clc
mov
ins
int3
jno
push
and
cmc
sub
inc
add
add
jo
sub
(bad)
call
int
mov
fisubr
pop
xor
iret
mov
cli
ins
mov
dec
int
sahf
std
movs
mov
push
out
xchg
push
sar
and
fldcw
lods
pop
push
clc
(bad)
in
jae
test
stos
hlt
and
sbb
movs
repnz
mov
dec
jo
xchg
nop
xchg
push
ins
ja
sbb
jle
adc
cld
pop
xchg
jo
imul
lock
pop
inc
into
and
sbb
rcr
(bad)
xchg
inc
adc
jl
ins
push
clc
dec
fucomp
je
stos
test
mov
mov
jno
mov
dec
repz
leave
dec
ss
enter
in
(bad)
cmp
shl
jno
push
cmp
cmp
call
and
pcmpeqw
fst
jno
mul
sub
rcr
jl
push
mov
mov
inc
js
stos
xlat
sbb
dec
ins
shr
mov
inc
js
xor
sub
loope
bound
xor
outs
es
je
mov
enter
xor
add
fld
cld
addr16
leave
adc
imul
xchg
pop
jecxz
jns
jl
and
dec
icebp
xchg
ret
xchg
adc
js
jp
std
das
std
loop
xchg
jp
push
sbb
mov
pop
jle
lods
jecxz
out
cmc
or
outs
int3
test
push
test
inc
xchg
pop
aas
stos
pop
sbb
pop
mov
loope
repnz
sbb
push
popf
pusha
jg
fmul
(bad)
jmp
jbe
scas
aad
cmp
call
enter
pop
xchg
lock
lahf
xchg
adc
xchg
fucom
inc
push
fstp
(bad)
int
clc
cli
sub
xor
aam
add
mov
cmp
push
iret
adc
xor
mov
jl
lock
jmp
fisub
cmp
cdq
lahf
sub
add
call
xchg
arpl
fisub
jmp
imul
data16
mov
lahf
fidiv
test
cld
cmps
or
xor
cmp
sbb
sti
sti
cmp
sbb
sbb
mov
sub
aam
(bad)
add
out
jge
mov
mov
icebp
jle
pushf
adc
jp
fimul
into
std
mov
movs
jle
idiv
add
call
mov
sub
es
data16
repnz
sbb
sti
pushf
push
or
arpl
out
xor
test
pop
jne
cmova
cmc
sbb
cmc
push
cmp
or
adc
jmp
xor
das
and
ins
or
shr
fisttp
jmp
mov
xlat
cmp
in
stos
adc
mov
mov
outs
std
mov
cmc
jns
and
pop
mov
xor
gs
lds
enter
aad
push
add
mov
les
push
push
adc
inc
inc
loopne
outs
mov
popa
push
adc
or
test
pop
cmp
and
cmp
sbb
int3
cld
movs
daa
in
retf
and
jns
adc
sahf
mov
xor
or
cmc
aam
bound
dec
pop
sbb
xor
cmp
mov
and
cmps
push
push
pop
xor
stos
mov
out
inc
test
je
cmps
fbstp
dec
cwde
mov
dec
push
inc
in
add
push
jno
push
pop
rol
scas
mov
pop
push
bound
push
popf
mov
nop
dec
jecxz
cmp
xchg
sti
sbb
or
into
test
inc
and
adc
daa
pop
xor
ret
bound
adc
icebp
mov
mov
push
mov
xlat
movs
repnz
lods
add
mov
adc
je
lods
xchg
add
cmps
retf
add
jne
stos
rol
sti
out
repnz
pop
mov
or
fprem
dec
push
das
mov
add
pop
stos
clc
pushf
idiv
pop
(bad)
xor
int3
stos
movs
test
sbb
sbb
lds
rol
sub
jle
mov
sub
mov
(bad)
rcl
mov
into
test
ja
adc
jecxz
cmp
jnp
lahf
mov
or
pop
xchg
jnp
fild
jnp
push
or
loopne
adc
mov
or
ret
mov
mov
and
retf
fmul
add
ja
pop
adc
sbb
xchg
stos
ficomp
fwait
mov
cmp
ret
pop
inc
cmp
(bad)
arpl
or
push
sbb
inc
lock
add
mov
jbe
push
pushf
push
es
cmp
ins
push
xor
mov
sbb
cmp
cld
lea
jg
push
shl
mov
adc
mov
pop
dec
sub
shl
loopne
ficom
xchg
enter
fisttp
sub
lods
adc
cmp
adc
xchg
lock
and
cld
lods
lahf
lea
sub
cmp
and
xchg
push
mov
push
pop
pop
adc
mov
std
ds
scas
xor
mov
jecxz
or
test
and
pop
sub
sub
xchg
js
xchg
inc
pop
inc
xchg
arpl
outs
(bad)
or
pop
les
xchg
bound
pop
js
es
inc
sub
pop
cmp
and
fbld
adc
les
sti
inc
addr16
mov
ss
mov
jmp
lahf
sbb
add
iret
shl
or
int
bnd
xchg
mov
dec
movs
jge
scas
imul
loope
or
push
mov
out
or
sub
pop
jmp
add
add
dec
xor
retf
sbb
aad
push
push
bound
sub
ins
mov
or
lods
aas
cwde
jno
cmp
ror
shr
and
xchg
in
push
mov
mov
ja
xlat
cwde
loope
dec
ja
jmp
call
cmps
inc
xor
test
ret
in
jbe
dec
mov
neg
cmp
jmp
jle
out
aaa
cs
lods
and
xchg
cmp
jge
aad
leave
les
xor
shl
mov
dec
mov
push
pop
push
js
inc
nop
mov
lock
(bad)
mov
call
cmp
cdq
pop
fs
dec
out
push
retf
fbstp
jg
(bad)
jne
mov
adc
dec
sbb
data16
sbb
jns
xor
sbb
jg
test
loop
mov
sbb
inc
out
ret
out
imul
xor
shl
xor
or
pusha
dec
in
inc
push
mov
pushf
(bad)
mov
movs
dec
aad
das
jne
pop
adc
and
adc
std
scas
sbb
int
out
push
movs
mov
jno
mov
jge
push
and
adc
rcl
or
out
mov
sub
adc
int
cmc
xlat
(bad)
hlt
hlt
push
and
adc
in
movs
retf
enter
and
arpl
inc
imul
int
and
cmc
push
fnstcw
mov
and
and
icebp
outs
idiv
add
push
xchg
xor
dec
movlps
adc
jnp
retf
pusha
out
mov
inc
fsub
push
pop
sar
cmps
call
ss
lea
mov
cwde
lahf
pop
push
sbb
shr
shl
pop
adc
sub
inc
jmp
imul
(bad)
test
ds
xor
repnz
loop
mov
(bad)
cmc
in
add
xor
or
push
shl
ins
out
or
add
pop
sub
inc
mov
inc
xor
mov
loop
cmps
ins
mov
(bad)
(bad)
out
(bad)
pop
xchg
fdiv
mov
add
mov
pop
cdq
jp
sbb
mov
stos
and
push
nop
imul
mov
or
into
cmp
xor
lock
in
sub
xor
icebp
(bad)
lods
rcr
ins
and
jp
adc
shr
mul
(bad)
call
mov
pop
jecxz
sbb
int3
mov
in
sub
mov
pop
movs
cmps
dec
outs
fistp
or
fstp
sub
(bad)
sbb
dec
add
pop
jmp
xor
mov
loopne
cdq
fsubrp
dec
addr16
dec
in
aad
(bad)
aad
int3
aas
adc
push
sahf
sbb
movs
push
sub
fisttp
ja
cmp
imul
fidivr
data16
mov
xchg
xchg
fist
addr16
ja
adc
add
les
lahf
or
xor
dec
cld
mov
adc
xchg
pop
stos
test
cli
mov
adc
jge
mov
jmp
mov
sbb
xchg
pushf
fcomi
ret
bound
xchg
call
aaa
mov
shr
jl
xor
push
pusha
push
dec
or
(bad)
call
pop
loopne
and
sbb
shr
shr
xchg
push
mov
xchg
cmps
pop
mov
jmp
and
pop
mov
aad
or
(bad)
jae
pop
adc
adc
stc
retf
ds
call
test
mov
repz
xor
push
sbb
mov
pop
jno
jb
push
and
(bad)
std
cs
shl
fcom
nop
xor
lahf
or
outs
test
hlt
scas
in
leave
scas
xor
imul
nop
inc
and
stos
xchg
xlat
fstp
stos
es
inc
popf
xchg
xchg
cmps
add
pop
int
(bad)
push
mov
rcr
ds
fidivr
inc
cwde
enter
out
xchg
call
leave
xchg
int3
lock
iret
test
rcl
jl
cmp
xchg
add
sbb
ins
dec
push
std
shl
pop
icebp
fidiv
mov
popa
ret
xor
fiadd
jl
pop
pop
outs
pop
and
mov
inc
daa
pop
js
add
loop
sti
add
outs
push
inc
xchg
adc
mov
sti
call
xor
popa
test
ud1
out
es
and
sbb
cs
xchg
fwait
mov
dec
add
mov
call
shl
add
stc
jns
ret
nop
sub
push
mov
mov
es
pop
js
sbb
into
popa
pop
add
ins
pop
jmp
cli
push
mov
js
repnz
cmp
jmp
jbe
jmp
test
ud2
dec
add
ins
cmp
cld
cmp
jo
(bad)
cmp
fdiv
movs
cmps
sti
and
jb
ja
sahf
ja
mov
movs
lods
sbb
inc
push
out
and
or
pop
das
mov
cwde
out
jle
fwait
sbb
lea
(bad)
fiadd
add
push
retf
mov
sub
imul
inc
(bad)
fisttp
and
mov
fiadd
fmul
cmc
popf
inc
dec
jbe
test
int3
jmp
fcomp
push
adc
inc
push
add
out
call
imul
pop
cwde
aas
cli
or
mov
pop
leave
es
mov
mov
or
or
(bad)
xchg
add
ds
ins
ja
xor
sbb
or
xor
xor
or
sbb
imul
fcomp
dec
mov
and
repnz
sti
jmp
inc
and
add
pop
xchg
adc
hlt
clc
fbstp
jecxz
sub
lods
mov
xchg
aad
rol
pop
jp
push
hlt
retf
mov
fisub
mov
adc
pop
add
xchg
icebp
cld
jmp
ins
mov
pushw
imul
push
inc
inc
fisttp
mov
movs
adc
cli
pop
inc
clc
jl
pop
ficomp
pop
inc
scas
cdq
adc
pusha
pop
jg
cmp
sahf
bound
stc
outs
cdq
lods
scas
sti
test
outs
and
mov
sbb
jbe
fnstenv
pusha
or
add
sbb
mov
or
ret
cmps
mov
(bad)
fstp
sub
xor
inc
adc
mov
loope
fs
mov
shr
mov
ds
jmp
shr
and
cmp
dec
imul
movs
sub
jns
mov
xchg
jmp
je
sub
xor
inc
(bad)
int3
pop
mov
js
xor
cwde
mov
add
outs
cmp
cwde
lock
cmc
sub
mov
in
cwde
mov
aad
add
pop
mov
jne
sub
add
pop
mov
add
and
and
adc
adc
mov
jo
out
xor
xor
mov
dec
popf
add
sbb
out
cmp
outs
sbb
faddp
dec
call
in
aas
icebp
push
pop
jae
int3
dec
jae
enter
imul
cdq
out
test
mov
mov
add
sar
call
addr16
or
inc
out
cmp
je
sub
test
xor
push
jmp
mov
sbb
mov
in
scas
div
in
cdq
pushf
push
clc
dec
pop
cwde
mov
and
rcr
xor
sub
jns
xchg
or
xchg
pop
and
ret
div
pop
add
out
lea
xchg
imul
cmp
or
sub
mov
jno
or
cdq
dec
repnz
aaa
std
sahf
inc
js
add
ins
out
fucomip
mov
sbb
(bad)
rol
pop
sub
adc
cmps
push
rcl
or
xor
and
or
pusha
lahf
push
lock
xor
hlt
add
ret
clc
sbb
cmp
pushf
pop
push
je
jae
test
sub
or
leave
add
jne
popa
cmp
push
xchg
ret
ds
out
or
(bad)
(bad)
mov
nop
and
mov
mov
mov
xchg
mov
fs
inc
repz
call
xchg
enter
push
and
jno
test
xchg
inc
imul
jg
mov
in
push
cmp
jbe
mov
mov
es
repz
pop
push
push
cmp
mov
xchg
push
jno
bound
cmc
mov
mov
push
xchg
inc
add
das
pop
das
push
inc
sbb
cmp
sub
dec
dec
mov
xchg
cmp
repz
mov
retf
cmp
dec
pop
and
addr16
adc
or
call
push
cs
pop
ins
push
aad
les
dec
mov
mov
out
lods
(bad)
movs
dec
dec
push
dec
inc
push
push
ss
sbb
retf
(bad)
ret
cmp
mov
cmc
and
stos
mov
adc
outs
pop
sbb
cmp
pop
adc
cmp
retf
js
sar
push
pop
es
shl
arpl
imul
xor
jae
jns
adc
inc
out
loope
xlat
push
ds
sbb
cmp
ja
ss
cli
or
por
inc
mov
xchg
jb
dec
cmc
adc
out
in
fsubrp
retf
popa
pop
clc
inc
ret
sbb
pop
jmp
xchg
out
sub
mov
adc
xor
std
cmc
and
call
aam
sahf
jmp
jmp
scas
mov
inc
or
jnp
jg
inc
mov
push
adc
fcmovnb
push
fst
adc
out
push
push
and
inc
adc
jecxz
jge
popf
jl
inc
xchg
jle
and
dec
icebp
or
push
out
imul
or
(bad)
adc
ins
or
push
scas
int3
mov
(bad)
push
xor
je
adc
jbe
mov
mov
loopne
fs
ins
add
sub
push
pusha
sahf
(bad)
loope
dec
jae
fiadd
repz
pop
popf
mov
xlat
inc
mov
sbb
push
pop
enter
jb
push
loopne
call
sbb
bound
inc
push
dec
adc
dec
(bad)
adc
xchg
jb
cs
jne
xor
cmp
aad
push
add
add
jp
inc
mov
pop
adc
dec
dec
jns
ins
cmps
call
inc
into
cmps
(bad)
sub
rcl
je
loop
cmps
popa
jmp
or
jle
jae
test
xchg
scas
mov
inc
sbb
movs
ret
inc
retf
and
test
fnsave
dec
cmp
jno
sub
loopne
mov
fs
mov
pop
in
cmp
fisttp
xor
in
imul
pop
outs
movs
(bad)
ins
(bad)
sti
aas
cld
out
jp
in
scas
xchg
stc
das
mov
or
cmp
and
jnp
push
xor
xchg
shr
push
test
outs
or
or
aas
fs
addr16
movs
and
sub
fadd
repnz
imul
mov
xchg
mov
imul
mov
mov
in
cmp
mov
jne
adc
inc
add
in
or
pop
int3
dec
mov
or
adc
ret
lods
in
ret
in
pop
push
bound
(bad)
out
arpl
dec
or
adc
mov
and
stc
idiv
add
xor
push
out
or
fwait
cmp
cld
mov
(bad)
scas
ficom
ret
fadd
test
(bad)
(bad)
lahf
ss
jge
inc
into
jne
outs
dec
and
dec
imul
adc
push
adc
sti
rol
dec
mov
retf
fisttp
call
and
jge
xchg
dec
pop
sbb
inc
int3
retf
sbb
sbb
xlat
xchg
jp
xor
mov
pop
out
pop
push
push
test
repnz
pop
adc
sar
mov
push
in
adc
shr
out
lock
mov
and
mov
retf
mov
sub
mov
mov
push
add
test
mov
inc
and
into
arpl
ins
pop
mov
in
push
(bad)
shl
fisubr
stos
sub
scas
(bad)
mov
push
not
xor
ror
mov
mov
and
xchg
int
cs
adc
jae
out
std
and
sub
call
xlat
add
pop
pop
jne
xor
out
inc
loopne
xor
sub
imul
ja
dec
xlat
jo
xchg
es
mov
icebp
pop
pop
mov
or
neg
xchg
inc
fisttp
std
std
xchg
(bad)
mov
repnz
mov
shl
adc
jmp
jl
ja
mov
push
jo
in
push
stos
inc
rcr
add
mov
les
mov
lahf
out
fimul
push
and
(bad)
jge
inc
inc
jl
ins
or
movs
lea
adc
mov
iret
mov
into
or
adc
cmp
aad
jb
xor
js
mov
mov
and
mov
mov
sbb
fistp
jg
inc
cmp
pop
dec
daa
jg
xor
fs
xchg
or
inc
fistp
shl
xor
into
lea
aas
xchg
push
jecxz
or
(bad)
ffree
push
push
inc
dec
mov
popf
adc
dec
mov
sbb
outs
cmp
hlt
out
enter
cmp
inc
stos
or
add
push
fs
inc
in
inc
sub
loop
mov
ret
das
jo
dec
gs
add
inc
mov
cmp
test
sub
xor
(bad)
in
xlat
mov
dec
in
icebp
add
dec
mov
sbb
adc
mov
xchg
xor
imul
imul
shr
jmp
aaa
scas
cmp
call
inc
mov
adc
dec
ds
in
fidivr
sub
cli
jo
rcr
dec
in
mov
and
outs
test
pop
js
aam
jne
scas
test
sub
call
inc
and
pop
in
and
xor
ss
or
aaa
pop
pop
sbb
pop
push
sbb
mov
mov
lahf
pop
frstor
in
(bad)
cmp
adc
movs
xor
ret
jns
mov
inc
push
sbb
lods
xlat
jno
push
pop
jle
ins
daa
adc
mul
jmp
ret
(bad)
rcr
xlat
push
fmul
vpmuludq
push
ja
adc
cli
outs
push
fsubr
sbb
pop
fldl2e
pop
jns
adc
inc
mov
ss
fnstenv
test
ror
int3
(bad)
aas
or
jnp
and
push
mov
mov
into
cmp
push
jmp
mov
dec
mov
outs
push
pop
push
jge
sar
pop
mov
stc
call
aas
test
fcom
outs
sahf
dec
fnsave
pop
leave
mov
or
pushf
pop
pop
inc
imul
inc
xchg
stos
sub
sub
dec
mov
ss
fldenv
sub
test
add
dec
cmp
stos
pop
pusha
fsubr
xchg
pop
div
xor
jecxz
add
or
popf
in
jnp
fstp
retf
sub
fadd
add
xchg
xchg
pusha
jmp
xchg
in
jmp
add
adc
xchg
jmp
sub
(bad)
mov
mov
or
enter
pushf
icebp
xchg
add
adc
and
xchg
sbb
jns
cs
fwait
inc
cs
popa
(bad)
out
int3
jne
call
cmp
mov
pop
mov
(bad)
and
nop
test
shl
add
adc
lds
ret
xor
jg
add
les
sbb
xor
mov
fisttp
add
gs
adc
cmp
dec
mov
push
ja
jbe
(bad)
scas
mov
loopne
retf
mov
sar
scas
xor
sub
cmp
into
push
push
nop
aaa
mov
inc
ja
test
cmp
adc
sahf
xor
and
cmp
push
cwde
cmps
sub
add
adc
cmp
in
adc
and
movs
push
mov
mov
mov
push
xor
data16
cmp
cmp
mov
popa
cld
and
es
into
mov
test
xor
adc
stc
es
sub
xchg
pop
adc
mov
call
mov
sbb
lds
adc
mov
and
cmc
or
call
sbb
lahf
and
push
dec
das
mov
cmc
mov
pop
scas
int
push
enter
pushf
ds
jle
dec
adc
repnz
jge
loopne
out
in
mov
(bad)
cmp
inc
adc
(bad)
mov
jmp
daa
or
stos
push
mov
pop
xor
data16
leave
imul
fidiv
ds
mov
cs
adc
jmp
or
dec
in
and
xor
test
fwait
and
das
cwde
repnz
mov
mov
mov
je
jne
mov
jmp
and
std
mov
lea
addr16
idiv
mov
mov
push
mov
cmp
inc
loope
mov
mov
lds
(bad)
xchg
scas
fcom
xchg
bound
pop
test
idiv
scas
pop
sbb
mov
ins
aam
sub
mov
inc
sahf
pop
push
pop
mov
rcr
fs
mov
cli
cmps
pop
pop
in
out
hlt
movs
movs
std
jecxz
cmc
dec
mov
push
in
and
leave
movs
sbb
lea
mov
push
lods
lock
mov
xor
in
xor
fcom
mov
js
pusha
fistp
adc
popa
jns
adc
xchg
pop
les
and
sbb
(bad)
(bad)
imul
mov
jb
nop
jno
fcomip
jnp
inc
aad
and
push
fst
out
and
cli
add
jmp
gs
lea
sbb
mov
mov
outs
or
push
dec
lock
pop
jb
enter
and
pushf
test
movs
jmp
push
out
stc
and
fdivr
inc
(bad)
sub
stc
jl
mov
ret
add
adc
or
xor
out
shl
hlt
jecxz
pop
loopne
into
sti
cmp
nop
leave
lods
and
push
jg
in
aad
test
aas
lods
fdivr
pop
xchg
test
into
xchg
scas
out
(bad)
or
adc
btc
mov
mov
je
(bad)
xchg
retf
pop
out
cld
fisttp
mov
cwde
int3
ds
aam
lea
mov
mov
pop
movs
fmul
xchg
mov
jmp
dec
xchg
add
cli
(bad)
out
xchg
out
and
dec
mov
mov
add
imul
dec
lahf
inc
mov
test
mov
fistp
sub
jmp
es
inc
and
rcl
mov
retf
add
inc
in
hlt
ror
sti
addr16
fisubr
sub
add
cs
cmp
sbb
rcl
mov
(bad)
fadd
scas
in
cdq
inc
inc
fsubrp
inc
lods
pop
rcl
fmul
lea
or
ss
imul
or
mov
test
or
sbb
loopne
pop
jmp
pop
ja
ret
and
xchg
mul
aad
std
push
mov
stos
daa
je
pop
aad
scas
data16
cmp
in
stos
rol
jmp
rcr
inc
cmps
xor
mov
ret
movs
cdq
push
int3
mov
push
inc
jle
inc
adc
xor
div
int
cmps
add
out
mov
test
jmp
int3
mov
mov
jmp
jnp
pop
and
push
std
je
sbb
cmp
inc
mov
out
jae
mov
mov
mov
popa
mov
xchg
mov
adc
add
push
test
jge
dec
das
ins
jge
ins
shl
jae
sbb
sbb
adc
clc
adc
(bad)
mov
mov
and
xchg
mov
jmp
dec
mov
clc
push
arpl
clc
jns
cmp
mov
icebp
jle
push
sub
clc
jl
fcmovnbe
jmp
push
mov
push
js
stc
inc
nop
mov
pop
or
xlat
stc
jmp
pusha
into
mov
popf
jp
or
sahf
and
inc
test
mov
add
ja
das
and
mov
ds
pop
int3
pushf
lds
jno
imul
jmp
cs
into
and
pop
inc
lock
dec
cdq
dec
pop
jae
scas
or
pop
dec
mov
or
jae
rcr
mov
mov
fbstp
cmp
xchg
lds
adc
adc
rcl
adc
in
xor
xchg
mov
xchg
cmp
pop
xchg
popf
(bad)
sub
mov
popa
pop
mov
das
mov
aad
and
xchg
(bad)
sub
or
and
sub
or
cmp
dec
das
imul
shr
pop
and
sahf
fs
out
jp
xchg
xor
inc
sub
and
popf
jp
mov
sbb
sub
(bad)
cwde
(bad)
test
sub
mov
sub
adc
fisubr
and
rcl
push
push
(bad)
fisubr
add
inc
pushf
push
or
arpl
or
jmp
stos
int3
inc
nop
ds
pop
add
jmp
jge
adc
cmps
(bad)
mov
xchg
sbb
mov
sbb
ja
addr16
sub
stos
xchg
jl
xor
fidiv
stos
jb
inc
int
out
mov
es
mov
mov
jle
ds
je
gs
(bad)
adc
add
push
xchg
je
inc
ins
adc
pushf
mov
adc
fcmovnb
scas
idiv
pop
ins
jle
aas
xor
cmp
xchg
and
push
mov
out
call
push
aam
mov
retf
mov
repnz
daa
outs
lods
pushf
add
mov
sbb
jle
cmp
sbb
add
stc
jb
stc
clc
mov
test
inc
cmp
mov
mov
and
stos
not
push
popf
jnp
push
shr
push
inc
dec
out
shr
add
inc
push
ret
jns
and
sahf
cmps
hlt
jecxz
jmp
push
adc
cmps
nop
jp
vmovdqu
push
jnp
sub
cmp
test
movs
dec
mov
in
out
fcomp
cmp
add
push
inc
xchg
rcl
cmp
fiadd
xor
fist
cld
out
ret
lock
or
push
cmps
or
jmp
add
sub
dec
jne
sti
push
dec
pop
adc
cmps
xor
pop
pop
stc
lahf
sar
loope
dec
(bad)
sti
lahf
jnp
pop
test
(bad)
int
dec
aam
ja
mov
jg
into
cld
hlt
pop
cmp
js
(bad)
call
sbb
mov
dec
mov
jp
dec
ret
in
stos
pop
ins
inc
and
mov
jno
sar
or
fnsave
dec
sub
push
das
xchg
daa
scas
dec
xchg
pop
or
mov
mov
retf
inc
pop
fmul
lahf
in
bound
pop
or
popf
inc
jmp
jmp
inc
fnstenv
dec
popf
int
gs
pop
imul
ja
leave
imul
arpl
push
jmp
sub
cmp
fst
test
jnp
cld
mov
fwait
dec
xor
cmps
imul
push
jecxz
bound
aad
fadd
ficom
imul
or
pop
hlt
dec
popa
mov
ret
les
sub
sub
stos
idiv
je
cmc
or
xchg
ror
sbb
(bad)
inc
into
inc
dec
js
xchg
mov
ror
adc
scas
jne
shl
in
sahf
or
push
adc
xor
in
aam
fs
pop
sub
inc
icebp
mov
ss
pop
and
dec
fsub
inc
loope
(bad)
jp
(bad)
push
push
cmps
mov
jns
mov
das
mov
mov
sub
sub
xlat
jnp
add
push
out
sbb
cmp
ret
pop
inc
popf
lods
fcmovnu
lea
ja
dec
push
xchg
adc
jae
mov
and
jle
jecxz
mov
push
or
xchg
push
mov
cmp
cmp
sub
inc
or
aas
mov
inc
movs
mov
adc
into
pop
xchg
imul
adc
mov
add
cmp
push
push
xor
icebp
push
jb
xchg
nop
arpl
mov
mov
mov
inc
out
dec
jl
pop
push
call
add
and
jge
cli
add
fdecstp
movs
out
pop
dec
jmp
mov
mov
cmps
xor
out
icebp
inc
fst
add
jge
xor
in
xor
mov
je
out
mov
es
(bad)
test
movs
and
dec
cld
shl
xor
je
int3
push
sub
adc
cld
push
pop
fistp
out
sub
cmp
sbb
sbb
or
and
pop
or
mov
addr16
sbb
mov
mov
add
outs
pop
push
xor
sahf
aad
push
sti
mov
leave
and
retf
lock
shr
jae
adc
ins
mov
mov
retf
aam
daa
arpl
cmc
(bad)
js
(bad)
ficom
call
push
dec
jl
in
sub
sbb
mov
xor
push
xor
dec
fwait
imul
cmp
mov
jecxz
xor
dec
repz
int
ds
cmp
push
pop
std
out
push
out
in
(bad)
jns
mov
xchg
jne
mov
mov
or
loop
out
les
mov
(bad)
push
ins
and
xchg
lods
ret
jg
or
mov
adc
push
cmp
jns
mov
arpl
sub
rcl
jae
movs
scas
and
cwde
or
js
sub
es
xor
aad
out
adc
push
or
cwde
ds
adc
and
and
int
mov
sbb
push
mov
imul
int
ja
std
inc
mov
scas
inc
sub
sub
sti
xchg
pop
popaw
ds
(bad)
xor
cmps
fwait
arpl
ror
lods
shr
and
in
push
dec
dec
xor
rcr
shl
cmc
stc
jnp
jp
pop
outs
ror
xor
(bad)
mov
call
sbb
imul
sub
fs
ds
cwde
ins
movs
dec
pop
adc
push
push
neg
cmp
ds
mov
out
ins
int3
outs
sbb
lods
test
mov
sahf
adc
pop
repz
outs
inc
jmp
dec
hlt
out
outs
das
adc
sbb
jp
int
fwait
jp
fcom
fdivrp
sub
push
(bad)
add
sub
ja
gs
fcom
pop
lock
dec
mov
into
test
mul
lods
outs
sbb
cmp
pusha
xchg
xchg
fstp
mov
mov
lods
pop
out
repz
cmp
test
cli
mov
iret
jg
jle
je
sbb
push
mov
adc
sub
mov
xlat
xlat
inc
je
xor
daa
daa
xchg
test
pop
bound
fisubr
(bad)
idiv
rcl
ja
pop
sbb
movs
mov
xchg
inc
ja
(bad)
fnsave
pop
jo
(bad)
(bad)
cmp
cld
icebp
inc
mov
iret
adc
push
dec
out
add
pop
out
add
lea
scas
addr16
mov
push
aam
cli
popf
arpl
mov
sbb
inc
iret
loop
push
lds
add
and
push
lahf
mov
sub
std
add
xchg
stos
adc
(bad)
idiv
dec
mov
pop
cdq
fs
or
clc
mov
sti
cmps
sahf
or
aas
jae
or
mov
mov
aam
pop
ret
fwait
call
bound
pusha
inc
(bad)
test
fild
test
loop
call
push
mov
jmp
xor
or
mov
add
pop
outs
bound
or
lea
and
push
(bad)
stos
aaa
and
mov
in
pop
(bad)
xor
sbb
adc
lds
xchg
imul
xlat
cmp
fs
in
ror
ins
fs
push
and
aam
xlat
in
xchg
adc
fsubr
cs
mov
data16
test
adc
push
pop
sbb
fnstenv
lds
cmp
fucomi
dec
sbb
sbb
adc
cmp
les
clc
outs
sahf
test
ja
cdq
xchg
js
iret
cmc
xlat
mov
cli
leave
pop
xchg
mul
xlat
sub
scas
dec
sbb
inc
sbb
imul
mov
es
or
shr
and
shr
xchg
movs
lock
aam
fidivr
imul
lods
dec
inc
rcl
add
scas
sbb
push
push
cdq
jns
daa
sub
fnstenv
adc
test
inc
jge
setnp
inc
fist
inc
push
cmp
mov
cmp
sti
stos
(bad)
mov
mov
pop
repnz
in
cmp
xchg
shl
mov
scas
pop
cs
cmc
inc
lods
mov
test
ror
ins
aam
js
sbb
adc
test
test
aaa
not
pop
cs
dec
push
pop
sub
or
xor
pop
into
out
sub
xchg
dec
adc
and
and
jle
jb
mov
rol
and
pop
mov
add
call
ins
test
cli
(bad)
cmp
ja
xlat
mov
mov
icebp
cmps
aad
mov
std
jl
add
sti
pop
rcr
out
je
xchg
lea
cmp
aam
es
mov
repnz
jmp
jo
jae
pop
xlat
adc
out
and
xor
icebp
inc
sub
xor
(bad)
stos
adc
div
add
sub
xchg
in
dec
mov
mov
fld
out
push
aas
aaa
jo
les
push
adc
scas
jmp
add
je
hlt
pop
push
push
shl
fs
fcmovnb
test
jo
fmul
cwde
pop
int3
clc
call
add
lods
in
inc
je
xor
mov
shr
adc
scas
out
mov
cmova
sbb
enter
and
inc
adc
inc
jno
sbb
mov
clc
mov
fst
pop
xchg
loop
out
mov
push
mov
in
bnd
test
scas
(bad)
out
or
xchg
adc
add
cdq
aaa
test
call
sbb
call
push
mov
pop
ins
pop
xchg
fild
call
dec
mov
jg
mov
pusha
dec
mov
fdiv
shl
clc
pop
test
frstor
es
imul
in
pop
push
leave
ins
(bad)
ror
or
in
add
out
mov
cs
or
adc
lods
pop
xchg
and
mov
cmp
mov
push
adc
jmp
pop
movs
fnstcw
pop
jmp
add
in
mov
icebp
aad
cmp
shl
cmc
mov
pop
fldcw
and
fiadd
dec
and
call
mov
jle
int
sub
mov
cmps
mov
jnp
xchg
sbb
xchg
rcl
cmps
pop
sub
mov
xchg
adc
cmp
ror
push
mov
add
cmc
or
fbstp
mov
or
das
mov
pushf
scas
sbb
int3
shl
cld
cli
adc
(bad)
cmp
shl
mov
call
jbe
iret
push
call
cmps
psrlw
sub
add
xor
push
out
push
out
xor
ror
movs
add
sti
ret
pop
lock
mov
xchg
sub
cmps
(bad)
push
cwde
or
add
cwde
arpl
bnd
arpl
aas
xchg
mov
mov
mov
xor
jmp
or
inc
and
outs
and
in
inc
or
(bad)
mov
in
icebp
mov
nop
daa
loopne
add
enter
ret
arpl
loop
or
movs
mov
out
call
retf
jns
xlat
mov
jnp
inc
mov
push
pop
xlat
test
push
and
mov
ins
xchg
jnp
out
cmp
cdq
neg
and
mov
jo
retf
rcl
add
pop
inc
add
shl
inc
aam
push
icebp
dec
and
fadd
popa
mov
add
push
xchg
push
in
xchg
pop
xor
push
int3
jno
or
add
cmp
push
and
xor
push
lock
sbb
dec
or
add
mov
daa
push
shr
push
jb
inc
enter
pop
adc
or
push
mov
ss
mov
push
loope
imul
inc
jge
lea
xchg
frstor
shl
adc
or
cmp
sub
sbb
cwde
jb
cmps
es
iret
inc
mov
mov
in
or
xor
jne
fucomp
and
mov
fisub
push
inc
ror
dec
jmp
stos
sar
xor
in
loop
and
icebp
ins
int3
fsubr
sub
dec
mov
jno
cld
and
out
add
cmp
mov
cmp
popf
jp
xor
push
int3
mov
jmp
out
(bad)
mov
inc
cmp
stc
pop
xchg
mov
jnp
jne
jno
sahf
scas
enter
fidiv
fcom
mov
movs
test
pop
pop
cmps
push
pushf
or
mov
(bad)
test
sub
shl
jns
popf
and
add
push
mov
inc
sbb
popf
in
and
cmp
repnz
sbb
pop
adc
popf
pop
sub
mov
fidiv
xchg
nop
adc
adc
cmc
mov
arpl
stos
cdq
and
sbb
repnz
in
sbb
xor
repnz
pushf
in
hlt
retf
push
in
out
fsub
neg
pop
xor
mov
jmp
mov
jmp
xor
sar
sub
mov
fbstp
push
sub
jp
and
jae
xchg
lods
jl
aad
out
xor
and
(bad)
mov
adc
not
pop
imul
popw
mov
mov
movs
pusha
shl
int
test
or
and
rcl
icebp
push
jge
xchg
sbb
mov
cdq
int
nop
test
(bad)
repnz
fstp
fild
in
sub
out
test
nop
adc
fdiv
dec
push
xchg
punpcklbw
jne
dec
pushf
std
push
test
neg
jbe
push
mov
lods
xlat
inc
and
jmp
or
rol
lock
and
and
xchg
dec
je
xchg
push
pop
mov
ret
push
pusha
adc
and
sbb
mov
(bad)
cdq
ret
dec
sbb
mov
push
(bad)
into
int3
(bad)
jns
cmp
ds
pop
rol
sti
mov
and
dec
out
pop
shl
mov
cmp
jmp
outs
mov
lds
aam
imul
cmp
inc
xor
mov
xor
cli
lds
sti
cwde
jne
push
cs
and
inc
and
pop
pop
enter
test
fisubr
dec
cwde
adc
jmp
cwde
repnz
hlt
push
(bad)
mov
push
ss
mov
inc
pop
push
stc
ins
sbb
(bad)
dec
push
enter
aas
call
cwde
out
test
inc
sub
imul
js
imul
jecxz
mov
pusha
mov
xor
aas
and
cmp
mov
sbb
out
add
jo
pop
pop
fist
mov
xor
mov
push
shl
and
scas
inc
(bad)
pop
pop
and
pop
ror
fcomp
shl
or
sub
repnz
push
mov
adc
out
mov
mov
call
jbe
popf
push
call
mov
out
addr16
dec
jecxz
mov
and
mov
jns
sti
(bad)
leave
add
cdq
pop
sub
sub
outs
mov
enter
repz
test
mov
and
mov
aas
(bad)
or
push
inc
adc
pushf
jne
or
es
kmovb
sahf
into
clc
mov
mov
xchg
pop
adc
cld
xchg
repz
jae
scas
cmp
sub
retf
mov
mov
not
enter
popf
or
or
adc
test
xchg
cmp
pop
adc
sub
mov
outs
clc
xchg
scas
ins
sub
add
repnz
mov
add
pop
and
xchg
pop
lahf
fiadd
cmp
fwait
aaa
stc
ss
(bad)
enter
(bad)
push
mov
push
jns
hlt
nop
gs
sub
imul
sbb
sbb
dec
inc
cmps
inc
mov
jne
out
xchg
es
cmp
scas
loopne
sahf
ja
jns
xor
pop
test
jg
push
dec
movs
adc
ja
jnp
xchg
sub
sbb
inc
jge
push
jmp
imul
fwait
call
add
arpl
fwait
outs
adc
inc
cmp
cdq
push
gs
jmp
stc
gs
bound
jns
xchg
cmp
pop
movs
(bad)
xor
ret
movsx
jbe
les
adc
mov
and
loop
pop
stos
xor
cmp
unpcklps
outs
or
out
je
inc
or
xor
js
test
mov
pop
in
icebp
les
int
adc
sub
jbe
ret
cmps
ja
xchg
jbe
xor
push
pop
pusha
ins
sahf
xchg
inc
cmc
cmps
push
popf
dec
sahf
xor
loop
jl
aas
mov
or
add
mov
mov
mov
adc
(bad)
mov
push
int
push
repnz
fldenv
xor
ins
pop
repnz
or
mov
ret
scas
xor
call
xchg
rcr
gs
sub
fwait
call
adc
fbld
add
ret
fild
pop
xor
push
cmp
and
ret
push
in
xor
mov
xchg
jae
xchg
add
sub
inc
jne
imul
mov
add
mov
jno
lahf
retf
xchg
ret
mov
xchg
outs
inc
in
jno
leave
clc
mov
jecxz
ins
cmps
cmps
or
retf
pop
in
int3
pusha
xchg
push
idiv
hlt
sar
cmp
aad
or
dec
add
push
adc
in
sbb
mov
gs
(bad)
call
rcr
jecxz
bound
inc
scas
push
mov
bound
mov
push
out
stos
outs
scas
jg
add
cmovs
sbb
ins
popa
and
or
or
js
mov
cmp
icebp
inc
adc
mov
and
int
ss
adc
je
xchg
fild
imul
fisubr
pop
(bad)
xchg
adc
jp
sbb
sub
push
into
dec
stos
xchg
sub
sub
jmp
mov
movs
push
sti
cmp
push
mov
sar
repz
cld
pop
pop
enter
bound
in
fmulp
xchg
stos
fldenv
fcmovnb
xor
mov
jno
sub
popa
xor
push
push
dec
xchg
ds
and
loop
mov
fs
sub
imul
fldcw
adc
sbb
dec
into
sbb
cs
sbb
pop
adc
pop
adc
push
aam
push
mov
mov
cmps
mov
xchg
aam
rcr
sti
push
lahf
push
add
push
add
lahf
jp
adc
cld
movs
imul
or
shl
popf
jno
arpl
xor
xchg
mov
ss
mov
es
sub
inc
sahf
dec
add
ss
add
test
mov
cmp
mov
add
push
iret
ret
ja
sbb
mov
jo
push
nop
in
fcmovbe
xor
add
clc
cmp
mov
jge
adc
rol
or
inc
xchg
movs
mov
pushf
and
stc
push
rol
pop
push
xor
jmp
adc
mov
sti
mov
fld
fist
add
(bad)
lods
cmovg
fisub
adc
jle
cld
test
or
xor
mov
popa
pop
(bad)
cmp
js
je
lahf
in
push
sbb
mov
inc
sbb
fisubr
fnstsw
sahf
jbe
fcom
inc
jnp
dec
enter
jns
cmp
in
popw
xor
mov
shr
xchg
mov
jle
dec
ja
ins
popf
adc
pushf
mov
adc
inc
mov
shl
mov
fidiv
mov
mov
adc
aas
pop
cmp
add
add
cld
push
cmp
out
inc
push
das
or
mov
inc
add
shl
sti
xchg
sbb
mov
fcomp
cli
xchg
jne
pop
lahf
adc
cmc
xor
hlt
or
xor
or
ins
idiv
imul
jbe
xlat
fsubr
(bad)
rcl
add
xchg
add
retf
int
retf
test
cmp
enter
sti
cmp
rol
jg
mov
(bad)
ret
sbb
add
or
cwde
cmp
inc
jmp
sub
mov
pop
shl
xchg
jae
mov
pusha
adc
inc
mov
je
adc
and
pop
and
push
lods
add
inc
rcr
jne
test
and
jle
mov
ret
ret
pop
(bad)
or
pop
mov
pop
ins
pusha
mov
inc
push
cs
push
test
fidivr
adc
in
ret
das
aam
jle
(bad)
jno
mov
dec
(bad)
lods
outs
mov
call
push
xchg
rcr
inc
sub
fimul
mov
dec
inc
pop
jb
push
xor
mov
push
xchg
lahf
daa
in
xchg
(bad)
xor
lods
and
sti
add
outs
and
or
jl
xchg
movs
(bad)
je
jno
mov
loope
adc
in
add
aaa
sub
mov
fwait
mov
scas
fnstenv
sbb
sub
push
stos
rcl
les
(bad)
and
les
cmp
push
jmp
pop
and
ja
test
or
bound
xor
xor
mov
mov
mov
dec
mov
inc
repz
push
mov
fisubr
mov
push
in
cmp
xor
xor
sub
push
aad
inc
jle
mov
(bad)
ror
addr16
inc
dec
pop
shr
dec
mov
push
call
aas
jmp
es
mov
xlat
lods
xchg
xchg
jo
and
(bad)
fwait
in
jecxz
outs
push
pop
xchg
shl
and
ds
mov
inc
dec
out
adc
cmp
pop
(bad)
pop
das
in
stos
jmp
(bad)
shl
dec
push
cs
mov
out
cmp
inc
out
or
cmp
cmp
(bad)
push
or
sahf
cmp
shl
shl
call
dec
pop
push
jno
jecxz
stc
sar
(bad)
idiv
mov
fisttp
pop
or
inc
ds
jne
pusha
out
pop
fstp
xchg
push
xchg
shl
push
pop
(bad)
xor
sub
out
jg
(bad)
lods
idiv
xchg
repnz
xchg
or
mov
push
pop
mov
mov
mul
fst
into
retf
leave
mov
cmp
mov
jnp
ds
in
out
mov
sub
scas
push
lahf
out
aad
mov
add
mov
shl
sbb
dec
sub
ds
mov
xchg
(bad)
pop
mov
pop
cmp
mov
call
call
les
push
jg
mov
or
xchg
neg
push
in
sbb
mov
arpl
mov
clc
cmp
lock
fidivr
adc
and
ret
xor
jle
xchg
dec
dec
arpl
add
mov
sbb
mov
push
sbb
sub
retf
inc
enter
test
xchg
mov
xchg
cwde
dec
sti
ins
inc
pop
mov
int3
stos
ret
jmp
sub
and
or
dec
jmp
jp
lahf
inc
jmp
and
adc
push
mov
push
cmp
xor
xor
cmp
out
push
cdq
jecxz
loop
push
pop
ret
lods
neg
xor
xor
mov
js
dec
jne
out
mov
push
loopne
sub
fxtract
sbb
ror
or
es
std
cmps
add
cld
adc
int
pop
mul
out
adc
mov
cs
dec
aam
scas
sti
sbb
mov
xchg
push
pop
mov
pop
lods
adc
ret
mov
sbb
xlat
cmc
pop
fcomp
inc
cs
or
sahf
fld
adc
fmul
dec
adc
sbb
data16
(bad)
pop
or
or
ror
test
(bad)
loop
rcl
mov
neg
xlat
pop
js
movs
mov
loopne
popa
call
add
sub
jno
or
or
jl
imul
popf
mov
(bad)
add
retf
out
mov
lods
xchg
in
(bad)
pop
fcmove
into
into
sbb
dec
bound
outs
not
stos
inc
cmp
inc
ja
pop
test
cdq
ret
ret
fild
test
dec
cmp
pop
mov
mov
in
xor
adc
pop
lahf
mov
ins
(bad)
sti
in
or
push
jge
ror
push
out
xchg
add
mov
iret
test
jl
nop
xor
cmp
jne
out
xor
cmp
push
bound
adc
adc
test
sahf
fs
cs
push
push
mov
mul
and
cmp
loope
xchg
jmp
in
jle
in
clc
cmps
xor
inc
clc
out
sub
sbb
mov
mov
or
sbb
cmp
and
test
sbb
retf
das
jmp
jmp
and
dec
data16
leave
push
adc
js
out
cmp
and
test
xor
test
and
cmp
ins
mov
hlt
and
pop
mov
mov
sbb
fdivr
add
rcr
add
jae
or
jo
jmp
or
ins
pop
sub
nop
inc
jmp
std
test
sbb
mov
xor
iret
xchg
in
in
aas
loop
sbb
pusha
xor
jecxz
jg
mov
inc
cmps
inc
pop
cmc
push
outs
sbb
movs
sub
mov
ja
push
cwde
push
(bad)
fmul
inc
push
dec
sbb
sbb
pop
jp
in
xor
scas
shr
or
fcmovb
jb
or
adc
bound
stos
dec
jp
ins
fdivp
cld
movs
mov
fdiv
sbb
inc
xchg
(bad)
imul
movs
aad
fstp
xchg
pop
hlt
stc
(bad)
fist
pop
lock
mov
xor
aam
or
repz
mov
pushf
mov
fldenv
xor
mov
sbb
into
cdq
icebp
mov
sbb
cwde
and
inc
ror
cdq
ja
jb
mov
imul
pop
push
xor
jg
inc
sbb
cmp
and
mov
add
inc
jge
(bad)
test
xor
inc
mov
and
enter
movs
pop
addr16
jle
outs
sub
fidiv
stos
adc
mov
cmp
inc
mov
aad
cli
int
(bad)
jg
push
cmp
je
xor
mov
ss
cmovp
dec
stos
xor
cdq
inc
mov
dec
xor
out
pushf
retf
clc
jae
fs
out
pop
jns
data16
xchg
adc
mov
into
ret
jge
repnz
lahf
sbb
dec
push
popf
addr16
out
add
dec
fwait
cmps
je
les
sbb
call
int3
inc
(bad)
mov
xchg
(bad)
push
rol
push
push
or
into
cdq
js
pop
test
lds
and
or
imul
fs
pop
pop
imul
popa
push
cs
lods
(bad)
rol
(bad)
add
push
sti
sbb
mov
cli
dec
and
sbb
push
(bad)
(bad)
and
shr
lods
sub
or
leave
mov
xor
clc
sub
sbb
xor
(bad)
leave
ret
and
rcl
mov
jmp
bound
mov
retf
push
add
scas
push
mov
lods
xchg
ja
sbb
or
mov
mov
sbb
sti
jbe
mov
dec
icebp
dec
(bad)
out
(bad)
int3
daa
jnp
mov
mov
xor
jns
mov
sub
fstp
mov
jmp
xchg
mov
test
or
clc
xchg
mov
xlat
aas
push
leave
enter
sub
jo
(bad)
int
mov
mov
in
call
sbb
test
pushf
nop
mov
and
mov
push
(bad)
fstp
call
outs
out
dec
movs
call
int
daa
dec
test
aaa
adc
dec
aaa
aas
xor
mov
ins
(bad)
xchg
cmp
cmp
jo
fild
add
add
fstp
or
mov
call
in
popa
inc
adc
psrlq
(bad)
jg
xchg
je
dec
sub
clc
sbb
jne
mov
mov
gs
cmp
push
repz
cld
scas
add
pop
jle
imul
call
lds
popa
int3
xchg
shl
mov
xchg
xor
cmp
push
adc
in
cld
ds
mov
cmp
inc
les
adc
lea
pop
jae
dec
addr16
push
xchg
icebp
test
ret
test
push
jnp
fimul
and
sbb
cdq
ds
scas
test
jmp
test
loopne
pushf
xor
jne
into
cmps
(bad)
or
loopne
addr16
adc
mov
jle
(bad)
in
add
lods
or
xlat
(bad)
xchg
mov
outs
xchg
xchg
mov
popa
jl
fucomi
xchg
out
pop
in
stc
lods
sub
xchg
cmp
xchg
cli
ins
outs
adc
ret
daa
jb
jg
jl
sysret
xor
mov
cmps
push
loop
imul
push
add
dec
ss
rcr
dec
dec
inc
cld
dec
pop
(bad)
lods
dec
inc
ins
xchg
retf
div
ret
xchg
mov
sbb
in
push
sbb
dec
pop
cmps
dec
pop
xchg
or
inc
ret
call
adc
inc
imul
sub
cld
daa
inc
mov
std
mov
dec
dec
pop
pop
je
jne
adc
test
aas
sub
inc
pop
mov
ss
sub
jmp
in
mov
sub
add
in
test
dec
(bad)
xchg
ret
pusha
inc
add
lds
or
adc
mov
mov
add
mov
aam
and
movs
and
out
jns
sub
mov
xor
jle
out
loop
mov
daa
add
test
shr
outs
popf
(bad)
mov
cmps
cmp
adc
push
or
cld
les
xlat
dec
out
vphaddubw
inc
cli
inc
out
imul
dec
sub
sub
and
pop
sbb
adc
fisub
jp
sbb
les
mov
dec
jecxz
lods
fadd
rcl
adc
xchg
fs
ret
mov
fisttp
pop
cmp
push
or
inc
idiv
in
pusha
test
sbb
sbb
lods
dec
stos
in
jmp
ret
push
sahf
je
sub
das
sub
xchg
das
xor
xchg
ins
sub
shl
leave
mov
push
dec
sub
sub
iret
xlat
jne
cmp
addr16
inc
xor
int
dec
fcmovne
imul
fdivr
test
rcr
fld
int
shl
jae
add
adc
push
js
dec
daa
mov
mov
stc
dec
ins
enter
cmps
jnp
add
jno
out
jmp
inc
push
sbb
lods
mov
pop
push
mov
sbb
clc
push
cmps
sbb
test
lea
clc
ins
in
movs
add
mov
mov
inc
mov
and
pop
mov
xchg
and
mov
mov
or
retf
xor
ret
call
std
inc
frstor
sti
mov
imul
mov
jl
push
mov
cmp
iret
aaa
fwait
inc
ret
cmp
mov
jmp
stos
repnz
mov
out
in
fs
(bad)
pop
push
jmp
push
pushf
inc
cmps
or
mov
fs
dec
cmp
fadd
jmp
mov
aam
jmp
inc
jae
add
aad
sbb
mov
adc
rcl
cmp
sub
sbb
test
sbb
(bad)
aam
sub
add
jp
rcl
push
ret
icebp
pusha
out
aaa
(bad)
adc
xor
int
xor
int3
sbb
cmp
call
jg
(bad)
retf
cld
dec
xchg
or
jae
push
and
mov
pop
adc
inc
imul
push
in
sub
pop
add
sahf
pop
jge
sbb
fdivp
jns
jp
fstp
(bad)
int3
int3
add
cs
js
mov
xor
dec
sub
jp
(bad)
pop
sbb
push
mov
and
pop
ret
imul
aad
mov
jmp
jmp
sub
mov
inc
shr
iret
pop
pop
xor
push
cmp
pop
mov
pop
sbb
in
push
and
jmp
or
ja
cs
mov
cmp
movs
xchg
scas
jle
ss
mov
sbb
cmp
mul
mov
imul
push
adc
add
imul
test
jge
mov
and
aas
dec
call
(bad)
(bad)
gs
pop
push
jmp
sub
xlat
ins
loop
push
lahf
test
in
in
scas
repnz
and
(bad)
leave
(bad)
jnp
leave
pop
call
cmc
and
repz
gs
adc
xor
jecxz
adc
mov
js
jbe
xchg
xchg
lahf
test
loopne
lods
jno
cmp
xor
pop
popa
xchg
(bad)
outs
xor
retf
sub
or
mov
stc
es
push
mov
test
cwde
aad
dec
mov
sub
sti
adc
(bad)
pop
addr16
add
jecxz
xor
mov
cli
das
(bad)
mov
mov
jne
push
ret
(bad)
pop
push
xchg
imul
popf
mov
bound
rcl
rol
mov
adc
xchg
fistp
xchg
inc
sub
shr
mov
stc
and
dec
sahf
pop
xchg
scas
ins
rol
jb
outs
sub
sbb
mov
jle
popf
sub
sub
cmp
ja
sbb
mov
xchg
sub
and
pop
cdq
aam
fwait
arpl
fs
push
pop
rcr
mov
movs
(bad)
cmp
cli
(bad)
stos
sub
mov
jmp
scas
adc
xor
cmp
pop
(bad)
test
or
sbb
cli
adc
push
and
jecxz
xchg
fst
mul
xchg
popa
mov
xor
loop
fist
adc
push
jge
shr
or
(bad)
jmp
add
adc
mov
sar
cmp
inc
dec
push
outs
repz
mov
mov
sahf
jle
enter
mov
lds
push
jp
dec
int3
jns
daa
cwde
mov
scas
inc
dec
sbb
popf
pop
pop
xchg
loop
mov
bound
sbb
pop
cmp
das
or
mov
xchg
mov
jmp
hlt
xchg
add
das
dec
inc
or
js
das
scas
sbb
ror
mov
mov
add
dec
test
cmps
and
fisttp
hlt
jno
dec
arpl
jae
fcom
xor
rol
add
cmp
push
xchg
icebp
inc
push
add
push
das
int
fisttp
out
pop
push
hlt
outs
hlt
enter
and
fsqrt
add
jmp
mov
push
jl
mov
mov
das
aam
inc
mov
ja
add
lods
or
xchg
stc
and
cdq
mov
vpsrad
dec
pop
mov
lods
es
jne
arpl
xchg
jecxz
push
cmc
and
add
sub
jbe
sahf
adc
cmps
pop
das
and
jae
push
pop
inc
rcr
shl
scas
iret
je
jle
jmp
inc
push
push
cli
and
mov
ss
cmp
mov
out
pop
xchg
jmp
test
daa
cmps
bound
mov
fdiv
and
and
mov
cmp
fimul
in
push
jno
into
jb
div
or
jmp
cli
mov
and
mov
ror
and
pusha
push
fwait
aas
adc
inc
jge
xor
and
dec
test
fistp
fstp
les
mov
inc
popa
or
popf
dec
sub
pop
mov
and
std
scas
add
and
stos
adc
inc
rcl
leave
(bad)
xchg
scas
xchg
dec
int
xor
out
adc
retf
sbb
fsubrp
push
mov
cdq
push
jo
aam
cmps
xchg
jno
mov
dec
mov
jmp
xchg
aas
cmp
popa
xlat
xchg
(bad)
nop
push
leave
(bad)
dec
pop
cmp
lods
sbb
cdq
aam
aas
cmp
addr16
push
jns
adc
sbb
add
cwde
sub
cmp
push
xlat
add
das
mov
fwait
mul
test
and
sub
dec
mov
pop
or
jns
adc
pop
loopne
call
inc
imul
daa
pop
cli
aam
daa
mov
push
push
inc
sub
jp
fistp
fxch
fisttp
push
jp
add
cwde
addr16
xor
(bad)
jmp
xor
fsubr
push
fwait
test
ins
shl
into
movs
cs
cmc
mov
add
jle
hlt
imul
mov
loop
ja
mov
call
add
(bad)
sti
cmc
xchg
pop
adc
stos
cmp
cli
lahf
(bad)
mov
inc
ja
imul
inc
or
in
in
mov
push
push
jbe
in
pop
push
mov
mov
lahf
lods
lds
(bad)
mov
cli
mov
fcmovnb
mov
imul
xchg
mov
push
or
in
adc
clc
rol
jle
cmps
add
out
(bad)
jge
or
sub
stc
lods
(bad)
xor
retf
cmp
mov
jmpw
inc
or
adc
push
enter
mov
(bad)
into
cli
or
shl
cmp
and
call
sub
fs
stc
sub
inc
imul
dec
xchg
cmps
push
out
jb
mov
or
mov
xor
cli
mov
sub
sub
bound
xor
push
(bad)
add
sar
rol
cmp
enter
bound
mov
mov
scas
sub
jns
in
inc
jno
jecxz
mov
ror
es
sub
div
movs
das
mov
xchg
iret
in
scas
push
xchg
sub
sub
cmps
mov
lock
xchg
stos
or
inc
xchg
dec
fcomp
std
xchg
stc
pop
out
pop
into
jmp
call
xchg
fist
pusha
bound
loop
fidivr
pusha
mov
fdiv
pop
add
movs
pop
aas
xchg
fmul
dec
dec
scas
ja
pop
or
enter
inc
ret
xor
movs
xlat
sub
loope
jo
pop
in
inc
fmul
sbb
nop
test
cld
mov
mov
push
dec
xor
push
mov
or
add
repnz
cmc
les
mov
je
mov
jge
sbb
stos
dec
ret
pop
call
adc
stos
fsub
sbb
stos
inc
addr16
movs
mov
loopne
cmp
je
push
xlat
jns
gs
arpl
aaa
xlat
sbb
test
imul
addr16
xor
xchg
push
lds
cli
inc
pop
outs
(bad)
ins
neg
les
cld
push
xchg
rcl
push
sub
adc
ja
arpl
pusha
add
sub
int
daa
dec
xor
rcl
cmp
sahf
data16
(bad)
out
jmp
mov
stc
mov
push
push
repz
shl
inc
lea
int3
cmc
mov
cmp
adc
repz
outs
fsubr
xchg
or
xchg
dec
jp
mov
cmp
popf
and
inc
mov
pop
sub
sbb
xchg
cld
pop
or
fcmovnb
outs
into
repz
pop
lods
cs
xchg
mov
aas
jns
retf
or
push
xchg
mov
ins
mov
sbb
cld
jne
add
iret
add
loope
cmp
jp
aas
jno
inc
sahf
mov
and
retf
bnd
sti
shr
mov
dec
fild
clc
xor
test
out
dec
jne
out
add
pop
and
jnp
imul
cs
inc
lds
mov
pop
adc
nop
call
(bad)
sar
lock
mov
push
mov
mul
cmps
add
cmps
cmps
dec
mov
lahf
xor
mov
es
push
mov
xchg
fldcw
cmc
test
loope
jmp
cmps
pcmpeqb
dec
sar
inc
data16
sub
inc
jns
(bad)
in
loope
inc
out
sbb
cmp
or
jns
xchg
shl
bound
mov
xor
sahf
aad
sbb
test
push
adc
or
lock
ins
inc
retf
ror
sbb
xor
cmp
jns
xor
sub
pop
push
daa
aam
daa
sbb
es
call
(bad)
push
out
ins
ja
sbb
sub
pop
les
lods
push
popa
(bad)
iret
jmp
std
or
jno
ror
in
sub
and
inc
scas
adc
push
mov
repnz
add
out
sub
cli
in
ss
push
or
dec
test
sbb
push
or
cmc
daa
adc
scas
add
add
adc
inc
add
xor
add
pop
test
push
cli
jmp
mov
imul
stos
out
cwde
pushf
iret
sub
sub
cmc
mov
cmps
arpl
stos
adc
inc
sbb
call
rol
enter
mov
faddp
iret
sub
fcmovnbe
dec
mov
xchg
(bad)
add
xchg
push
ins
dec
xchg
int3
test
jne
in
mov
shl
lds
aam
fwait
pop
mov
sbb
test
cmps
test
mov
and
mov
inc
push
push
int
pop
fbld
add
jg
or
lods
mov
pop
sub
retf
repz
add
pop
push
daa
mov
xlat
ror
sub
imul
leave
into
icebp
cdq
jecxz
xchg
adc
(bad)
(bad)
and
mov
inc
sub
inc
popf
xchg
aad
movs
lods
loop
les
das
mov
adc
xor
in
mov
cli
push
hlt
mov
pop
jp
in
test
mov
or
mov
push
inc
inc
or
xchg
(bad)
test
mov
mov
out
inc
lods
cmp
and
inc
mov
ja
xor
call
xor
bswap
sub
pop
fcmovbe
mov
outs
sbb
imul
dec
imul
xor
mov
or
xchg
imul
jp
mov
xor
sbb
ret
cmp
mov
in
(bad)
jmp
addr16
jnp
sbb
sub
rcl
dec
inc
xor
inc
or
adc
aam
mov
repnz
adc
inc
scas
mov
lds
dec
gs
jmp
mov
ret
push
mov
inc
(bad)
(bad)
scas
in
stc
enter
mov
call
xchg
mov
aaa
dec
test
mov
jns
mov
add
imul
adc
xchg
movs
cmc
mov
pop
jns
ret
add
(bad)
ss
inc
pop
fld
out
fs
mov
mov
mov
cwde
jecxz
jle
xor
mov
sub
mov
aaa
pop
das
ss
shl
ins
fstp
xchg
shl
mov
xlat
gs
mov
(bad)
cmp
xchg
iret
xchg
or
mov
lahf
xchg
mov
or
jne
pop
adc
pop
sbb
mov
push
push
dec
inc
lods
mov
shl
shr
in
fld
rcr
xchg
and
fidiv
dec
mov
inc
mov
inc
mov
pop
push
cmp
or
mov
jb
adc
or
in
sti
ror
out
test
xchg
push
mov
xchg
(bad)
mov
sub
mov
ret
mov
icebp
push
dec
shl
jl
mov
inc
scas
aad
cmp
mov
shl
cs
scas
sbb
aaa
dec
push
push
and
ret
push
sub
xchg
xor
sar
movs
xchg
rcl
xlat
jae
addr16
ret
push
inc
mov
inc
pop
mov
xor
mov
jg
lahf
pop
retf
aad
xor
call
ins
ins
fucomp
sub
dec
cmc
xlat
enter
daa
push
jle
push
push
ds
adc
stc
ret
cmp
or
mov
pop
xor
mov
dec
imul
inc
sbb
(bad)
test
std
mov
(bad)
jle
inc
sub
aad
test
sar
aaa
mov
fwait
adc
dec
out
xchg
add
jne
pusha
pop
aas
loop
aad
mov
mov
sbb
jg
dec
xor
adc
call
fwait
add
mov
jb
pop
mov
repz
jb
push
mov
loopne
mov
xchg
test
fnsave
retf
das
inc
push
xadd
mov
(bad)
pop
mov
and
hlt
sub
jns
jl
dec
jp
int3
fiadd
push
or
cmp
mov
hlt
adc
mov
jns
cld
mov
xor
mov
jg
out
sub
or
in
or
das
xchg
aad
push
scas
shl
and
popa
loop
popf
mov
cmps
fldl2t
inc
add
adc
xor
addr16
ret
jge
or
xor
push
fild
xor
mov
lds
add
mov
sti
stos
inc
add
cli
cmp
xor
shl
outs
push
shl
jp
fwait
or
adc
fcomip
mov
add
mov
xor
cmp
loop
xchg
scas
rcr
std
int
sub
sub
push
je
imul
stos
jp
icebp
jge
and
leave
aas
inc
mov
lods
(bad)
not
js
cmp
inc
iret
dec
shl
fist
mov
push
inc
push
mov
xchg
push
adc
cmps
xchg
mov
outs
mov
daa
pop
dec
movhps
cmp
(bad)
xchg
js
outs
outs
dec
pushf
adc
fptan
setle
enter
pop
add
test
or
push
outs
out
clc
jae
in
cmc
mov
pop
aaa
out
mov
inc
lea
push
pusha
inc
and
and
add
sbb
push
pop
and
in
call
test
and
jne
inc
adc
or
adc
int
xor
mov
xlat
mov
xor
xor
arpl
aam
(bad)
dec
mov
and
lods
call
ror
pop
mov
pop
cdq
pop
cmps
mov
jnp
lea
retf
and
dec
push
outs
repz
stos
call
pop
mov
mov
sub
and
in
imul
inc
sbb
clc
cmp
fnstenv
gs
jp
and
cs
dec
mov
xchg
popf
inc
mov
out
or
push
retf
lock
inc
in
sub
ror
test
aas
dec
pop
cmp
adc
dec
pop
push
in
mov
mov
push
xlat
ret
jb
shl
and
add
and
or
cmc
(bad)
(bad)
jne
push
jae
lods
xor
cmps
(bad)
dec
aaa
push
xchg
jae
xchg
cmp
mov
xlat
push
adc
es
dec
je
rcr
dec
movs
jno
adc
mov
jecxz
dec
mov
sub
push
xor
clc
jg
mov
test
pusha
std
push
xor
dec
or
jns
pop
push
div
sbb
jns
mov
pop
add
jno
push
leave
jle
loope
mov
lods
in
(bad)
xor
iret
inc
dec
fdivr
sub
sar
push
jmp
call
or
imul
mov
outs
push
mov
ja
xchg
iret
sub
xchg
mov
test
jb
cmp
mov
nop
xchg
or
adc
popa
push
bound
js
ds
cld
scas
pop
icebp
(bad)
sti
jge
in
or
adc
jbe
shr
test
rol
jnp
test
xchg
xor
cdq
xor
pop
xor
xchg
or
call
outs
pop
inc
mov
xchg
cmp
imul
mov
cwde
retf
lods
mov
sti
out
int
enter
(bad)
jnp
mov
push
loop
ins
outs
ins
cmps
dec
dec
(bad)
mov
xor
inc
inc
dec
pop
or
jno
out
js
cdq
std
mov
lods
and
jbe
mov
push
hlt
aad
or
xor
inc
cmp
sbb
sub
push
mov
mov
mov
sbb
xchg
or
or
dec
xchg
iret
cmps
adc
imul
mov
enter
push
push
fs
cs
cmp
punpckhdq
das
pop
cmp
icebp
jmp
xchg
(bad)
retf
adc
adc
inc
mov
icebp
mov
jmp
leave
add
add
lods
aas
xor
jmp
add
fucomi
inc
pop
sbb
out
xor
pop
sub
sbb
jbe
push
inc
nop
aas
adc
pop
rcl
and
mov
or
fcmovne
lods
push
cmp
lea
movd
mov
sbb
out
ss
pushf
dec
popf
std
imul
mov
int
lock
loopne
mov
push
and
shl
test
jg
cmps
push
sti
btc
xor
ret
sbb
nop
cld
fnstenv
ret
std
xchg
fdivr
cmp
push
add
dec
lods
pop
test
mov
or
ins
mov
je
mov
shr
mov
dec
sti
mov
mov
sub
fisttp
mov
pop
lods
stc
pop
and
pop
mov
cld
fucomip
dec
enter
or
mov
xor
mov
cs
dec
sub
nop
mov
movs
jmp
push
pusha
rcr
into
sbb
inc
inc
in
out
out
outs
fild
ins
call
mov
mov
retf
retf
fs
mov
outs
mov
scas
mov
stc
aas
mov
fcmove
mov
stos
arpl
adc
loope
fmul
adc
xchg
sub
cmp
jp
mov
hlt
jmp
in
gs
ficom
mov
jae
add
pop
int
jge
ja
mov
pop
xor
lock
into
push
and
sbb
mulps
stos
or
sbb
mov
sub
cli
cld
(bad)
loopne
push
cmovl
(bad)
adc
icebp
or
sbb
pop
and
aam
adc
and
add
lahf
cmp
pop
sub
ret
cmps
sub
lods
fistp
mov
pop
sar
inc
sbb
addr16
inc
dec
int
pop
(bad)
(bad)
movs
ins
mov
fadd
fcomp
xchg
sar
adc
movs
mov
fsubr
cmp
dec
aaa
mov
neg
sub
cmp
xchg
out
repz
adc
ss
dec
outs
dec
mov
push
and
inc
xchg
je
pop
ror
adc
lock
jmp
cmp
movs
and
jmp
ret
dec
(bad)
into
cmps
pop
outs
ins
adc
xor
call
xchg
(bad)
mov
call
push
xchg
sub
js
shl
call
mov
in
(bad)
(bad)
arpl
jbe
rol
jbe
dec
outs
add
jecxz
das
adc
sbb
cld
or
jp
or
push
ss
and
aad
fadd
pop
imul
pop
call
in
mov
addr16
mov
jo
sub
scas
daa
repz
xchg
sahf
ins
and
push
push
dec
cmps
push
icebp
fsub
popa
mov
imul
and
jb
cmps
and
popf
adc
push
inc
mov
retf
lea
and
xchg
jmp
mov
pop
push
mov
call
hlt
lock
or
cmp
cmp
(bad)
dec
mov
inc
xor
call
cmp
hlt
and
inc
out
lods
aam
aaa
jae
dec
or
jae
aad
hlt
popa
push
or
cmp
mov
push
cmp
xor
and
pop
inc
push
and
sbb
pop
pop
inc
push
mov
mov
lock
mov
out
dec
pop
cmp
cmps
mov
xchg
cmc
int3
jg
or
xlat
xor
in
xchg
cmps
pop
out
mov
mov
adc
xchg
cmp
repnz
jns
(bad)
mov
sub
push
enter
es
test
xchg
sub
adc
cli
xchg
sub
rol
pusha
cmp
cmp
mov
cld
outs
test
sbb
lods
ficom
mov
iret
cmp
outs
loopne
and
push
adc
add
dec
jae
imul
sbb
dec
mov
inc
sti
push
and
repz
or
push
mov
pop
sbb
mov
adc
sub
push
(bad)
fwait
mov
(bad)
fist
xchg
xchg
cwde
or
mov
push
std
mov
call
add
mov
aaa
stos
es
mov
das
jbe
inc
xchg
shl
leave
out
mov
enter
imul
xchg
xchg
out
test
fisubr
ds
icebp
add
aad
(bad)
mov
cmovno
sbb
add
jns
or
xor
dec
jo
or
enter
jmp
cmp
xchg
jo
jbe
gs
push
xchg
scas
mov
ret
enter
cmps
test
ss
mov
das
inc
mov
mov
lds
mov
push
sub
xchg
add
fisubr
and
lea
mov
pop
fdiv
and
popa
mov
pop
call
inc
out
pop
ror
push
fild
not
pop
mov
shl
add
mov
das
mov
std
xchg
pop
cs
dec
cmp
stos
xchg
cmp
pop
or
repz
or
fist
dec
xor
sti
js
xor
jno
push
rcr
js
clc
push
fwait
cmp
or
mov
sahf
jmp
inc
mov
and
cmp
cmp
jge
sahf
ins
mov
aaa
jae
(bad)
and
fiadd
jbe
fisubr
pop
pushf
add
and
and
pop
aas
rcr
test
sbb
jmp
in
pop
data16
push
nop
repnz
jp
jnp
or
fxch
push
dec
popa
adc
int
xlat
xchg
and
push
in
popf
push
lahf
adc
pop
mov
pop
xchg
je
sub
les
mov
push
lds
or
gs
lock
push
retf
into
aaa
in
push
pop
sti
out
(bad)
pop
push
add
xor
xor
pop
xor
fld
iret
outs
mov
lods
mov
fsub
ds
fs
pop
out
sbb
loop
push
fdiv
cld
xor
and
leave
stos
inc
(bad)
sub
fcom
and
xor
mov
popf
jp
repz
test
push
loope
fist
mov
push
jg
call
popa
sbb
or
fucomp
jmp
std
xchg
pop
xchg
mov
or
or
jbe
mov
aas
push
movs
fadd
inc
vmovhps
(bad)
in
mov
iret
fst
pop
mov
push
(bad)
shl
xchg
sahf
xor
sub
mov
std
adc
dec
stc
lods
xchg
xor
ficomp
pop
outs
jns
test
mov
into
cwde
sbb
adc
(bad)
mov
test
mov
outs
jecxz
daa
xor
sbb
push
inc
repz
icebp
test
fwait
cmp
pop
cmps
push
ja
cmp
jge
push
xor
out
scas
sbb
or
xor
jne
das
js
mov
pop
mov
rcl
aad
out
push
xchg
repnz
mov
scas
jge
or
ficomp
pushf
mov
inc
adc
sub
idiv
push
push
xor
not
lea
iret
in
imul
fdivr
in
nop
idiv
push
int3
mov
or
jmp
imul
fidiv
into
fadd
jb
adc
cli
sub
(bad)
sbb
ins
shl
adc
and
xlat
pop
adc
in
jne
ins
xor
xor
push
sbb
inc
jp
xor
int
(bad)
xor
inc
inc
sub
pop
and
(bad)
pop
push
shl
cdq
test
sub
xchg
ss
xor
adc
or
iret
out
(bad)
jecxz
add
jecxz
into
rol
jmp
adc
cmps
jnp
sub
dec
mov
das
inc
mov
or
std
pop
jl
cld
xchg
or
and
movs
jmp
or
mov
add
pop
pop
bswap
fcom
mov
xchg
mov
inc
xor
aam
push
shr
movs
inc
bound
dec
in
xor
in
xchg
or
and
mov
jg
(bad)
loopne
fsub
jo
sub
loope
call
add
inc
pusha
ss
std
xchg
mov
add
stos
sub
push
cwde
loopne
inc
add
fwait
mov
push
popa
or
sbb
add
clc
les
iret
sbb
cmp
js
xor
daa
cli
inc
outs
retf
sbb
mov
fldcw
mov
mov
push
leave
inc
movs
xchg
sub
mov
fsub
and
jg
jno
inc
mov
add
retf
in
sar
cmp
mov
in
inc
adc
les
pop
out
jl
fcomp
retf
popf
gs
fist
mov
out
scas
shl
push
lods
or
inc
push
int
test
mov
lock
mov
(bad)
sbb
push
loopne
mov
adc
retf
pop
clc
dec
lods
jmp
pop
add
popa
mov
(bad)
imul
fcom
inc
mov
pop
outs
in
adc
pop
add
xor
stos
sahf
cmps
push
(bad)
in
dec
dec
test
mov
mov
xchg
sbb
vmread
test
pop
add
dec
int3
popa
mov
aad
push
xchg
movs
xor
ins
div
inc
xchg
retf
xchg
ja
mov
or
pop
mov
pop
out
mov
mov
out
sbb
and
xchg
fs
scas
adc
scas
(bad)
(bad)
xchg
std
sub
mov
cld
pop
inc
dec
adc
mov
xchg
mov
test
(bad)
test
and
xor
dec
push
pop
xchg
test
pop
pop
rcl
(bad)
js
clc
(bad)
sub
in
scas
jmp
and
mov
fmul
nop
push
ins
retf
(bad)
jnp
mov
and
mov
outs
cmc
and
dec
lahf
pop
(bad)
retf
dec
push
in
lahf
adc
adc
push
ja
jge
sub
jge
imul
nop
jns
nop
cmp
fisttp
dec
xchg
inc
or
mov
call
jl
push
(bad)
pop
retf
mov
out
lods
jmp
or
clc
fs
xchg
outs
call
mov
push
sub
mov
mov
sub
push
pop
mov
mov
mov
rol
sub
inc
je
ins
push
pop
inc
ficomp
pop
push
pop
push
push
adc
sub
hlt
mov
pop
(bad)
sub
cmp
lock
cmp
inc
add
mov
test
cld
mov
push
test
mov
dec
and
pop
xor
sahf
or
mov
push
popa
jo
xor
test
(bad)
icebp
pop
das
mov
push
cmp
(bad)
ss
pop
loop
cmps
int
in
mov
mov
leave
xchg
fucompp
mov
pop
ja
dec
(bad)
test
xlat
sbb
(bad)
data16
(bad)
cld
jae
nop
sti
popa
into
adc
mov
aam
(bad)
cld
mov
cli
sbb
not
dec
(bad)
ror
out
mov
fimul
xchg
and
in
dec
fld
sub
xchg
fadd
popa
retf
xlat
cmp
jmp
stc
push
xchg
scas
std
cmps
(bad)
stos
bound
mov
add
and
push
mov
call
fidivr
cmps
adc
sub
adc
gs
dec
imul
gs
push
loopne
push
ds
adc
inc
jae
js
fistp
push
mov
xor
sub
push
iret
pop
dec
(bad)
adc
or
shr
mov
je
sahf
nop
push
mov
sub
add
or
mov
pop
or
adc
cmp
cmc
sbb
popa
or
jge
cmp
add
in
mov
mov
mov
jne
lods
or
div
cmp
sub
inc
jmp
cdq
fs
xchg
call
test
jg
dec
scas
fsubr
inc
inc
mov
stc
cmps
or
lods
fcomp
repnz
call
cmp
push
mov
rcr
icebp
fs
(bad)
in
mov
fmul
cmp
push
sar
push
add
inc
pop
and
pusha
sbb
jns
bound
es
inc
(bad)
rol
xchg
jns
mov
sti
cmp
popf
and
cld
test
fsub
bound
rcl
int
popa
adc
out
jno
or
fwait
out
jnp
xchg
or
es
cmc
hlt
in
jmp
inc
inc
leave
sub
dec
adc
ds
ins
call
stos
xor
dec
sbb
add
xchg
jle
repz
ror
mov
sub
pop
mov
sub
dec
add
and
pop
push
jae
or
retf
iret
daa
xor
adc
std
stc
scas
fucomip
jecxz
fiadd
call
sub
add
fcom
icebp
inc
jmp
push
ins
iret
fld
xchg
cmp
pop
lods
or
sbb
aam
jge
leave
jg
icebp
xor
jecxz
pusha
imul
shr
ja
ds
ret
sbb
mov
xchg
mov
out
stos
rcl
shl
cmps
rol
ds
xchg
loop
stos
clc
or
sub
jmp
or
jne
mov
iret
xor
inc
scas
or
pop
enter
mov
mov
iret
fstp
loopne
(bad)
jl
popa
imul
mov
xchg
jno
mov
push
dec
sbb
not
fxtract
ror
sub
call
stc
sub
mov
xchg
sbb
in
sbb
add
aad
pop
and
lds
stos
xor
neg
mov
loop
outs
into
in
mov
test
loope
pop
cmp
dec
je
and
cld
aam
sbb
retf
xor
mov
adc
cmps
je
adc
cmp
xchg
lds
adc
je
cwde
pop
dec
pop
movs
fisttp
adc
mov
lahf
mov
fist
stos
iret
cmp
sti
xchg
jge
mov
mov
pop
add
fisttp
pop
lods
adc
loope
cmp
leave
add
xor
clc
mov
adc
and
and
hlt
push
out
ss
stc
inc
ja
xchg
sub
cmps
icebp
mov
inc
iret
inc
mov
outs
xchg
inc
pop
or
or
dec
pop
jmp
mov
and
pop
mov
sub
xor
xor
cdq
add
ins
sbb
push
out
dec
pusha
xor
ds
or
push
out
pop
out
push
pop
or
mov
lea
adc
call
and
xlat
mov
inc
mov
aas
cmps
fnstsw
fnstcw
sub
fld
inc
mov
outs
test
std
cmp
out
(bad)
pushf
add
outs
fist
jo
cld
es
cmp
mov
add
ds
jge
push
inc
mov
fsub
xor
es
scas
fwait
int
cmp
out
cmp
sbb
ret
mov
clc
in
mov
adc
push
in
es
sub
ret
or
sub
inc
cli
adc
aam
mov
xor
mov
daa
enter
push
sbb
loope
inc
mov
add
sub
inc
fisttp
mov
enter
mov
or
or
mov
test
adc
scas
jmp
(bad)
mov
bnd
cdq
vmwrite
pop
push
mov
ret
ret
mov
outs
(bad)
out
in
adc
ja
jge
and
fdiv
scas
in
sbb
mov
adc
addr16
rcl
add
pop
out
shr
into
xor
xor
fcomp
adc
mov
xchg
div
out
sub
mov
movs
inc
pop
pusha
stos
dec
sub
and
inc
sti
(bad)
loop
loop
add
inc
or
push
imul
cwde
or
jmp
retf
mov
dec
test
mov
out
fadd
(bad)
mov
adc
fs
in
popf
fstp
(bad)
xlat
sysret
mov
push
nop
test
push
cmps
fisub
fcom
or
dec
mov
mov
sbb
mov
shl
je
orps
or
xor
daa
sar
add
mov
cmp
lock
call
push
adc
dec
sbb
popf
std
mov
scas
lods
neg
rcl
repnz
push
cmp
lock
mov
pop
bound
xchg
pop
ror
movs
pop
sar
jo
repnz
xchg
add
add
hlt
cmp
outs
sar
std
pushf
test
retf
adc
shl
jmp
xor
mov
push
sbb
jnp
ss
fidivr
pushf
add
nop
shr
mov
jecxz
push
psrad
push
inc
mov
in
fs
mov
mov
jnp
and
add
jle
js
ret
stos
pop
aam
loop
xchg
(bad)
or
ret
cmp
shr
push
repz
jmp
pop
(bad)
push
cwde
sahf
or
test
retf
dec
xchg
inc
cs
ja
hlt
xchg
stos
sahf
xor
(bad)
dec
idiv
arpl
nop
rcl
cmp
std
jne
add
icebp
cmps
xor
das
jne
sbb
fst
and
clc
inc
mov
daa
jnp
sub
pop
rcr
(bad)
add
scas
mov
push
xchg
js
scas
ss
sti
adc
jg
idiv
into
cmp
ret
in
ja
push
leave
push
daa
and
movs
jno
sbb
dec
dec
das
pusha
cmp
pushf
cmp
jnp
outs
xchg
in
inc
icebp
mov
out
jb
adc
pop
mov
sub
neg
cmps
rcl
xor
and
repnz
out
out
repz
and
jnp
stos
fdiv
sahf
push
adc
sbb
out
fdivr
xchg
cwde
(bad)
dec
in
xchg
xchg
fwait
and
std
aam
retf
mov
push
pop
call
push
cmp
clc
cmp
lahf
sbb
outs
in
mov
retf
out
cmp
xor
je
shr
std
cdq
push
(bad)
inc
pop
pop
popa
push
sub
push
mov
lds
ss
dec
inc
cs
fwait
and
or
fst
je
xor
call
add
sbb
jne
popa
jo
jg
fcmovne
stos
pop
push
xchg
int3
test
xor
inc
ret
mov
outs
add
outs
sbb
jge
dec
push
add
enter
into
add
in
cmps
imul
imul
jl
fild
js
movs
int3
rcr
out
sub
call
mov
icebp
jo
inc
shl
push
sub
int
push
shr
pop
ins
and
xor
sbb
xchg
xchg
stc
repnz
call
inc
into
dec
ss
xlat
add
adc
enter
stc
(bad)
lahf
shr
rcr
scas
jmp
jp
jg
pop
jmp
shr
dec
xlat
xchg
mov
xor
cmp
ss
loopne
cdq
cwde
add
mov
or
mov
cli
es
adc
add
es
div
addr16
mov
lahf
and
xor
cmp
outs
mov
(bad)
add
cmp
mov
xchg
stos
xor
int
cmp
mov
inc
push
test
dec
movs
popf
lods
jmp
aam
mov
pop
(bad)
cdq
and
xor
into
and
mov
addr16
(bad)
mov
sbb
ins
call
pop
ror
dec
stc
xchg
nop
mov
sbb
mov
jno
test
test
ins
out
inc
push
loope
xor
leave
push
and
adc
xchg
pop
or
rcl
push
mov
mov
sub
adc
add
inc
push
fisttp
sti
imul
pusha
test
adc
pop
daa
pop
inc
inc
xadd
scas
stos
outs
mov
ret
scas
popf
rcr
pop
push
fisubr
loopne
mov
pop
jns
int3
jge
enter
push
adc
in
mov
push
push
pop
in
aad
fs
dec
xor
sub
add
lahf
idiv
shl
movs
aas
xor
das
xchg
stos
stos
xchg
xor
pop
and
xchg
push
xor
push
mov
cmc
mov
call
in
scas
pop
(bad)
or
fimul
pop
lea
test
aas
clc
mov
adc
adc
adc
psubsw
outs
cmps
mov
push
js
lds
sbb
std
test
imul
mov
push
cmp
sbb
outs
jmp
push
int
adc
pop
pop
jle
in
fst
mov
cmp
hlt
jne
lea
mov
fsubrp
xchg
je
cmp
cmp
and
xchg
stos
jbe
ja
push
jmp
jbe
xchg
mov
push
in
dec
jecxz
jnp
mov
adc
std
cs
pop
jo
iret
sub
arpl
cmp
movs
mov
cli
fs
dec
les
and
lea
pop
arpl
jecxz
das
je
ja
add
inc
out
jo
xor
sbb
lods
mov
fldenv
xor
ins
hlt
and
outs
loopne
xchg
jnp
mov
cmp
sub
fcomp
dec
mov
mov
mov
cmp
enter
inc
dec
out
out
mov
cmp
push
aaa
stos
fadd
fimul
sub
jb
aam
jmp
xchg
sub
stc
outs
jo
sub
(bad)
ins
sub
sub
outs
and
ins
or
add
mov
jns
addr16
jmp
mov
cdq
mov
ror
fwait
mov
jle
pop
sbb
adc
mov
or
sbb
dec
les
push
inc
scas
add
stc
cmp
into
mov
and
pop
adc
in
fwait
mov
stc
or
inc
jl
fmul
and
add
scas
push
push
iret
or
lds
mov
aad
movs
mov
push
mov
xor
clc
fnstenv
or
icebp
jbe
add
add
ja
xchg
addr16
dec
in
rol
test
inc
mov
mov
outs
cld
pop
or
cld
pop
or
mov
inc
out
or
xchg
push
ror
rcr
out
push
pop
mov
fsub
sti
shr
loop
ja
jg
sbb
les
mov
push
ret
dec
in
jns
scas
pop
es
pop
stos
test
je
in
jae
mov
jmp
addr16
jg
or
stos
stc
data16
xor
ficom
sahf
sar
stos
add
scas
sub
shr
mov
inc
jle
fistp
jg
fnstenv
icebp
fs
ja
xchg
out
adc
sbb
jle
mov
in
cli
in
inc
inc
repz
nop
shl
nop
adc
cdq
loope
ss
data16
and
adc
xor
xlat
shl
popa
adc
dec
push
xor
sub
std
cmc
inc
mov
push
jmp
cli
das
jo
in
test
mov
aam
inc
cmp
in
pop
push
sbb
sub
sbb
pop
aas
sbb
(bad)
push
(bad)
xor
iret
das
sub
mov
dec
aas
mov
jbe
inc
sbb
push
and
dec
sbb
or
mov
aad
stos
inc
daa
inc
pop
jg
mov
lods
adc
lds
pop
adc
outs
aaa
add
(bad)
mov
out
in
and
sti
fdivr
mov
xchg
adc
sub
jl
dec
inc
iret
mov
rcl
popa
mov
mov
and
mov
jnp
mov
lahf
mov
icebp
outs
and
hlt
lock
jg
or
hlt
cwde
mov
movs
arpl
lods
pop
int
or
lock
and
mov
ja
inc
ds
das
xor
and
mov
lods
neg
pop
push
sar
and
jo
popf
xchg
jae
mov
xor
and
loop
clc
fldcw
inc
jmp
dec
arpl
xor
mov
adc
dec
sub
xchg
mov
arpl
into
retf
sbb
adc
test
sub
jo
jne
(bad)
jbe
mov
jb
xor
xchg
xlat
jo
jnp
loop
xchg
sbb
add
inc
mov
jns
cli
push
push
jecxz
cmp
xor
movs
imul
lods
repnz
dec
push
repnz
sbb
mov
mov
sar
call
jo
stos
ins
jecxz
xchg
ror
pop
jl
jae
sbb
xchg
push
mov
cli
and
arpl
add
es
cli
pop
fs
lods
push
std
std
not
ror
cs
or
ins
ror
xchg
int3
push
pop
adc
push
xor
loopne
int3
add
sti
and
mov
xchg
and
ror
fwait
xor
add
stos
dec
mov
dec
pop
clc
dec
and
push
mov
xchg
jne
fnsave
sub
clc
pop
xor
imul
in
aaa
repnz
and
sbb
xchg
mov
pop
out
mov
jno
adc
les
add
int3
(bad)
push
push
mov
sbb
fcmovnbe
sti
cmp
jae
ror
retf
fst
push
pop
test
lea
das
cmp
xchg
call
xchg
out
jnp
(bad)
mov
pop
jecxz
fisttp
pop
sahf
outs
xchg
xor
aam
std
adc
scas
inc
je
mov
push
fs
jae
and
aas
mov
inc
sub
cmp
sbb
and
jl
inc
dec
push
std
cli
js
xchg
(bad)
repz
nop
(bad)
(bad)
(bad)
mov
lahf
test
stc
jne
and
xrelease
mov
xor
adc
xor
push
pushf
jo
imul
xchg
shl
jmp
js
(bad)
rol
jg
in
and
and
icebp
(bad)
pop
out
push
out
mov
push
je
dec
dec
xor
loop
fistp
aad
jp
shl
mov
cmp
mov
sub
push
xor
fbstp
leave
mov
aas
cmps
xchg
pusha
ja
or
push
adc
xchg
push
cmp
jnp
jmp
and
test
jnp
stos
mov
imul
movs
dec
retf
test
repnz
lods
movs
test
and
shl
xchg
in
sbb
xchg
aaa
in
call
mov
sbb
add
gs
push
movs
cmp
stc
cmp
neg
ins
stc
jecxz
mov
daa
retf
out
dec
stc
aaa
ret
call
movs
pop
xchg
jb
in
cmp
shl
or
or
fcom
idiv
mov
xor
jne
sbb
push
mov
lahf
pop
jbe
test
sub
xor
inc
push
stos
ins
xor
xchg
rcr
in
les
adc
or
sub
xchg
cli
push
adc
sub
and
scas
into
mov
outs
adc
push
dec
addr16
lea
cwde
ins
jno
dec
push
shr
adc
pushf
xchg
push
sub
fs
fimul
jns
rcl
movs
or
rcr
mov
inc
cmp
arpl
jge
cmp
es
dec
aaa
pop
std
mov
cmp
pop
add
rol
sub
test
jbe
sub
rcl
mov
push
stos
movs
in
pavgw
mov
mov
outs
mov
aaa
dec
push
cmp
js
jmp
cmp
lahf
into
repz
jge
outs
add
or
dec
jecxz
push
in
mov
xchg
aaa
jo
(bad)
mov
addr16
hlt
mov
aaa
iret
push
mov
rol
lahf
sti
or
(bad)
sti
xchg
sub
out
adc
js
sbb
sub
es
inc
sub
loopne
pop
mov
inc
jbe
mov
adc
add
aas
pop
fmul
imul
test
push
fwait
out
pop
pop
outs
sbb
cdq
add
push
and
(bad)
ds
mov
aaa
xor
inc
and
xchg
mov
sbb
pop
sbb
iret
sbb
popf
retf
push
inc
add
mul
or
mov
mov
pop
mov
imul
add
sahf
mov
dec
dec
clc
sub
jg
loop
ins
xor
les
loope
mov
sub
push
fisub
addr16
fsubrp
and
inc
rcl
rcr
aas
aaa
mov
push
mov
dec
fnstenv
mov
ins
imul
pusha
lock
ret
loopne
inc
lea
pusha
sar
cmps
in
inc
(bad)
pop
test
pop
adc
fwait
jns
pusha
adc
repnz
jge
cwde
inc
shl
or
cmps
pop
imul
pop
(bad)
cmp
cmp
imul
pop
ds
psubb
test
jno
jnp
xchg
mov
test
rol
mov
iret
jg
add
jp
nop
xor
adc
int
inc
in
(bad)
sub
scas
and
xchg
push
int3
icebp
inc
push
sbb
addr16
lds
fcom
rol
dec
xor
inc
loop
push
in
jl
iret
lock
or
test
fcmovbe
sbb
mov
add
xchg
inc
fist
xor
adc
std
and
int
cli
sbb
dec
adc
jae
cdq
aad
std
(bad)
imul
repnz
fistp
repz
xchg
mov
sub
test
(bad)
mov
std
ins
cmp
loopne
and
lahf
fs
shl
push
rcl
icebp
in
mov
xchg
sub
out
fwait
inc
ins
mov
sub
push
dec
lds
and
sbb
dec
movs
mov
in
push
mov
int3
fmul
jp
das
cdq
outs
test
cmp
cdq
sahf
and
pop
retf
xchg
mov
sbb
mov
loop
xor
add
mov
xor
into
or
shr
(bad)
lods
fst
std
push
ja
mov
sub
dec
lahf
imul
lds
scas
cwde
aad
push
sbb
mov
jns
add
inc
mov
retf
nop
mov
cld
mov
retf
sbb
push
aaa
xchg
push
jmp
out
mov
cmps
jne
mov
iret
pop
xchg
inc
add
and
add
and
lods
push
xor
fmul
mov
pop
jecxz
nop
lods
jl
ss
clc
pop
test
fcmovu
mov
pop
(bad)
cmc
ins
movs
ja
mov
int3
push
(bad)
ins
arpl
adc
inc
jl
cmp
movs
add
adc
pushf
addr16
add
(bad)
hlt
mov
test
std
inc
icebp
dec
test
mov
xor
rcl
inc
cmp
cld
test
mov
jp
aam
cmp
mov
loop
mov
ror
mov
call
lock
push
xchg
outs
jecxz
inc
sub
pusha
sbb
outs
add
stos
adc
sub
rcr
cmp
sbb
lods
jb
(bad)
xor
(bad)
dec
popf
pop
xchg
test
mov
sbb
inc
rcl
ins
mov
mov
or
xlat
sbb
ins
outs
cmps
dec
in
into
(bad)
jno
ds
fld
mov
loopne
push
test
push
cmps
adc
out
aas
xchg
add
ds
fmul
ret
mov
dec
gs
adc
sti
jmp
push
mov
fldenv
push
lahf
xor
aaa
sub
pushf
test
mov
xchg
daa
enter
push
xor
mov
pushf
call
jecxz
cmp
cmp
scas
push
out
pushf
stos
push
push
out
cld
push
jmp
ret
jmp
push
sbb
mov
inc
es
jle
jnp
(bad)
leave
in
shl
dec
in
pop
shl
mov
adc
xchg
xchg
fucomp
dec
(bad)
pop
jae
mov
stc
cdq
and
add
add
ja
jo
out
ror
aaa
cmp
add
pop
sbb
push
jl
aad
and
test
pushf
ret
call
rcl
mov
xchg
int
pop
add
aas
add
xchg
aaa
shl
cmp
mov
jmp
daa
loopne
out
pop
cmp
daa
xor
xor
fcmovnbe
repz
adc
and
and
jnp
sub
add
xchg
mov
xor
in
shl
lods
mov
mov
mov
fwait
repnz
sar
inc
ret
fmul
and
adc
xchg
pop
pop
jle
jnp
xor
push
mov
cmps
fwait
inc
aam
sbb
sbb
mov
enter
add
fisttp
dec
cmp
aam
sub
rcl
push
sub
push
jno
ror
inc
imul
js
add
push
clc
in
pop
push
adc
pop
pop
sar
(bad)
div
adc
jl
or
es
clc
stos
push
je
push
cli
jnp
mov
out
and
inc
mov
pop
and
scas
push
and
or
inc
rcl
push
loop
or
popf
jne
sti
rcl
ror
or
in
psubsw
xor
sbb
mov
mov
lds
xchg
sbb
fimul
or
div
sar
mov
cmc
gs
loopne
and
sbb
add
adc
jp
popf
movs
push
ficom
in
sbb
and
push
(bad)
mov
mov
outs
mov
sub
or
sbb
mov
lods
add
ror
jl
xchg
outs
push
pop
xor
sub
jno
push
sti
not
jg
(bad)
sbb
rcr
push
in
fidiv
stos
ins
scas
bndldx
(bad)
push
into
jge
std
add
sub
push
cmp
push
cmc
pop
sar
cmps
pop
cmps
push
xor
test
dec
iret
xchg
cmps
push
sbb
xor
ficomp
(bad)
mul
push
sub
fild
xchg
push
or
(bad)
mov
call
arpl
call
lods
mov
stc
in
jp
pop
adc
aad
loopne
sub
inc
stos
mov
xchg
mov
sbb
lods
out
dec
lods
or
imul
mov
mov
imul
imul
sbb
pop
mov
mov
mov
cwde
dec
test
es
std
enter
xchg
je
mov
jne
push
scas
loope
push
cmp
movs
iret
ror
lods
push
xchg
dec
mov
inc
inc
scas
icebp
mov
jl
and
pop
pop
into
leave
adc
sbb
jecxz
stos
add
and
inc
(bad)
add
test
push
mov
inc
lods
es
inc
sahf
push
enter
in
mov
push
fistp
jmp
pop
mov
mov
setne
adc
call
scas
sbb
idiv
inc
cmps
mov
xchg
mov
lds
test
inc
cmp
leave
stos
addr16
mov
rol
fs
gs
fadd
cmp
imul
mov
sbb
or
xchg
jne
jbe
mov
mov
xor
add
jo
pusha
cmp
mov
jge
adc
ficom
adc
cdq
(bad)
loope
or
cld
loop
dec
ret
mov
lds
sahf
loopne
pop
inc
jle
sbb
sub
and
jle
xor
loop
sbb
pusha
mov
adc
xchg
popa
aam
mov
inc
push
rcl
dec
mov
push
mov
jmp
jle
dec
push
push
pminub
int
lock
pop
add
jge
xchg
sbb
repz
dec
or
pop
or
mov
repnz
in
adc
jmp
test
ins
jmp
adc
push
and
movs
pop
std
sub
pop
jne
pop
scas
out
ss
jns
pop
or
push
push
aas
clc
mov
fisub
bound
sub
(bad)
xchg
or
adc
jae
repnz
dec
or
jge
mov
jl
icebp
ins
xlat
imul
je
adc
call
mov
mov
test
jns
push
pop
test
lock
inc
xchg
sub
sar
xor
pop
or
movs
inc
rol
sub
bound
(bad)
aaa
jmp
pop
fcmovnbe
into
sahf
pop
add
adc
pop
repz
adc
mov
sbb
ret
dec
add
in
cmps
jns
push
push
arpl
imul
pop
ds
test
(bad)
push
pop
fnsave
ficomp
inc
add
jge
xor
and
lock
jecxz
cdq
iret
push
(bad)
mov
fiadd
jnp
cs
xchg
fwait
in
daa
repnz
fs
cmc
sub
xor
loope
mov
jge
adc
xor
mov
pop
cmp
or
lds
xchg
or
dec
das
dec
adc
test
dec
pushf
test
dec
pop
in
jge
pop
add
lods
mov
push
out
jge
fucomip
mov
hlt
jmp
outs
pushf
daa
int3
repnz
dec
daa
sahf
mov
fadd
cdq
shl
aam
or
mov
rol
and
in
or
sub
pop
push
rol
sub
fiadd
jne
jno
mov
jae
mov
out
stc
jmp
push
aaa
movs
rcr
or
push
jae
sub
sar
cmc
ss
xlat
jns
cs
loope
clc
xchg
xchg
mov
bound
dec
ret
lods
scas
xchg
xchg
pop
icebp
lods
mov
mov
leave
retf
xchg
dec
fldenv
jl
leave
mov
ss
jb
pushf
(bad)
retf
xor
push
js
mov
and
fstp
in
sub
pop
push
iret
xlat
call
sti
ror
(bad)
(bad)
xchg
call
jb
lahf
cmc
jae
add
retf
loopne
out
jmp
and
retf
jo
adc
loop
ja
out
and
dec
dec
(bad)
sar
popa
jge
ss
imul
imul
js
jae
cmp
sbb
and
cmp
mov
out
sbb
dec
mov
les
jnp
loop
lea
xor
icebp
dec
ret
popa
aam
movq
push
shr
hlt
jnp
mov
jb
jecxz
movs
push
dec
out
pusha
int
jp
pop
je
aam
dec
dec
cmp
xchg
das
add
xchg
(bad)
mov
sub
ja
icebp
push
arpl
and
outs
mov
sub
imul
adc
nop
outs
dec
into
pop
sub
jmp
repz
pushf
xchg
out
mov
jae
inc
jl
sub
or
out
sub
sti
push
adc
(bad)
xor
xor
fisubr
cdq
data16
loope
sub
pushf
push
add
push
sub
jecxz
lods
inc
(bad)
das
ror
cmp
mov
add
sbb
mov
rep
into
xor
out
data16
(bad)
idiv
inc
add
fld
pop
repz
stc
sub
sub
jne
nop
pop
movs
enter
xor
inc
stc
xchg
fidiv
shr
xchg
cmps
jecxz
and
xchg
xor
in
pop
xor
sahf
dec
mov
sub
ins
push
pop
gs
sar
fdivr
pop
xor
fistp
jl
in
fst
fisttp
or
mov
jae
outs
jns
ror
leave
arpl
cmps
mov
cs
mov
dec
push
or
mov
mov
pop
mov
xor
cmp
hlt
shl
add
sbb
and
rcl
fbld
sub
repz
xchg
add
mov
retf
fmul
dec
xor
mov
out
shr
xchg
(bad)
into
nop
inc
and
jne
mov
pop
frstor
jmp
mov
int3
mov
jmp
mov
ror
test
jg
jns
aaa
cdq
push
imul
lea
pop
and
push
gs
arpl
sar
fcmove
retf
xchg
xor
push
outs
or
and
mov
call
(bad)
retf
mov
adc
cmps
sub
cmp
sbb
bound
popaw
sub
icebp
sub
mov
scas
push
xchg
pop
sub
mov
mov
cli
cmps
adc
outs
or
pop
(bad)
(bad)
mov
fisubr
or
mov
pop
shr
pop
pop
xor
lahf
outs
(bad)
lock
adc
retf
pop
ret
or
movs
pusha
jl
fwait
shl
es
jecxz
aad
and
mov
push
xor
sub
mov
push
dec
jb
mov
mov
js
neg
lahf
cmc
sub
xchg
mov
popa
jecxz
in
sbb
cmps
mov
stos
mov
in
cmp
nop
cmp
cld
(bad)
lods
adc
std
cmp
xchg
test
mov
test
mov
cwde
cmps
test
push
or
or
dec
jp
int
lahf
repnz
scas
in
push
xor
push
aaa
outs
xor
xor
push
jmp
sti
push
pop
js
(bad)
jecxz
jnp
or
mov
shr
jmp
imul
jae
mov
fiadd
gs
out
(bad)
sub
mov
jmp
xor
xchg
arpl
ret
sbb
xor
stos
in
mov
pop
mov
adc
es
xlat
daa
repnz
popa
sub
pop
(bad)
pop
and
out
adc
push
mov
jb
push
adc
ja
pop
inc
pop
aam
ins
cmp
ret
test
dec
in
shl
jne
mov
clc
or
inc
push
inc
push
mov
inc
sti
lahf
out
pop
lods
mov
adc
mov
out
xor
xchg
mov
push
fmul
test
or
movs
rcr
sub
mov
inc
cli
sar
dec
ss
movs
cs
mov
repnz
sub
dec
xor
mov
sub
div
repz
sbb
js
lahf
pop
jl
repnz
mov
sub
lea
int
xchg
or
loopne
cmp
pop
ss
sbb
mov
popa
int3
leave
mov
mov
arpl
and
and
sti
sub
ins
not
add
aaa
icebp
test
cmp
in
cld
imul
sub
xlat
jecxz
(bad)
fild
push
cmc
mov
mov
sar
pop
retf
or
mov
sahf
mov
imul
std
mov
jae
call
inc
shl
test
jnp
out
ds
nop
jnp
enter
xor
jl
xchg
mov
inc
int
retf
and
(bad)
cmp
jge
aad
mov
mov
mov
clc
mov
lods
lods
aad
or
xlat
(bad)
mov
movs
dec
loop
mov
out
aaa
mov
imul
ins
push
jle
bound
mov
movs
cdq
aaa
stc
retf
cmp
cmps
pop
sub
cmp
push
rcr
sub
leave
sub
aas
daa
mov
call
mov
mov
aaa
shr
retf
jbe
jo
fnstcw
scas
ins
push
push
sbb
inc
ss
pop
leave
and
ror
gs
mov
addr16
das
scas
out
inc
and
outs
aaa
sbb
outs
neg
xor
retf
test
fucom
test
out
and
std
cwde
in
push
inc
jle
mov
sar
cmp
std
cld
cld
adc
sbb
in
fcom
sahf
xor
ja
jo
lods
or
lahf
cld
test
test
mov
imul
fcomp
nop
cmc
loop
pop
mov
adc
dec
dec
dec
or
inc
cdq
mov
outs
lods
xor
pop
stos
in
fdiv
dec
pop
fst
daa
jl
scas
jbe
or
std
or
es
mov
cmp
loopne
and
(bad)
outs
inc
pop
push
dec
cmovno
movs
push
test
ja
nop
sar
(bad)
jae
or
fcomp
adc
inc
push
cmps
or
jne
fwait
js
push
dec
test
test
ins
adc
pop
or
in
inc
jg
push
pusha
mov
jle
fwait
mov
in
mov
cdq
mov
(bad)
icebp
aam
or
in
add
repz
in
cmp
test
inc
pop
pop
and
dec
add
cmps
pop
cmc
jo
mov
test
xor
call
pop
adc
dec
enter
pop
cld
ja
gs
pushf
sbb
jnp
dec
sbb
dec
out
or
outs
call
inc
in
repz
das
jno
add
enter
rcl
or
pop
outs
xor
mov
pop
pop
in
stos
(bad)
lock
jle
mov
pop
xchg
sub
or
inc
gs
push
inc
and
addr16
int
popf
ins
cmp
into
xlat
jmp
dec
fs
test
imul
jns
mov
cmps
pushf
dec
jo
mov
push
sbb
test
push
pop
and
lds
inc
rcl
and
rcl
xchg
aad
ss
bound
mov
xor
jle
mov
add
arpl
outs
mov
inc
xchg
dec
xchg
cmp
ss
into
cmp
sbb
pop
fstp
inc
or
pop
int
retf
push
int3
cwde
adc
xor
popf
ds
sbb
enter
pushf
mov
add
call
push
pop
test
add
std
ja
or
and
sahf
outs
mov
stos
pop
dec
push
repnz
and
mov
jae
xor
mov
jne
repnz
jge
lds
mov
cmp
xchg
retf
push
fisubr
push
push
cmps
ins
add
outs
sbb
push
rcr
call
imul
das
jno
mov
adc
xor
push
xchg
shr
ds
in
fsubr
xor
repnz
add
push
fwait
jl
aaa
adc
push
xchg
(bad)
cs
ins
push
jp
mov
imul
outs
adc
popa
shr
xchg
pop
pop
add
and
scas
bound
xchg
xchg
xchg
dec
add
sub
push
mov
(bad)
xchg
inc
out
pop
pop
lock
sub
test
mov
(bad)
and
lahf
pop
dec
xor
jae
test
ror
fstp
ja
add
mov
out
sub
xchg
push
adc
mov
jbe
(bad)
in
mov
mov
dec
xchg
inc
sbb
stos
scas
ret
div
xor
retf
inc
outs
push
pop
sbb
cmc
js
cli
xor
imul
shr
stos
nop
stos
jb
sub
outs
addr16
push
add
hlt
and
fyl2xp1
cdq
test
push
fwait
ss
loopne
jecxz
retf
or
dec
sbb
jbe
adc
or
mov
mov
xchg
ror
sahf
adc
movs
fdiv
xor
retf
mov
sub
imul
shr
add
popf
cdq
and
popa
inc
ja
imul
mov
call
pushf
xor
iret
jg
jle
mov
arpl
mov
dec
cmp
jb
fcomp
fnsave
jne
std
fld
stos
cli
iret
inc
xor
add
mov
js
inc
(bad)
xchg
cmps
dec
ds
int
dec
call
mov
cmps
dec
pop
jns
mov
inc
loop
ins
clc
dec
jae
push
mov
mov
cmp
or
xchg
dec
js
or
adc
es
inc
loop
inc
cmp
xor
push
popf
pop
push
fdiv
jno
daa
in
push
pop
(bad)
mov
mov
scas
das
cmps
loopne
adc
and
mov
jno
inc
xchg
xchg
call
push
cmps
dec
movs
fwait
push
jnp
xor
push
pop
add
test
add
push
push
mov
pop
retf
inc
xchg
or
and
jmp
push
add
xlat
jb
ja
mov
in
nop
push
cli
xchg
sub
add
ror
add
dec
sub
xor
cmp
adc
loop
lea
or
mov
bound
loopne
dec
(bad)
out
xchg
int3
mov
movs
push
xor
push
or
arpl
mov
jle
fcomp
sbb
outs
xchg
fs
addr16
aaa
inc
jno
fnsave
dec
add
gs
call
in
ds
pop
mov
jle
fcmove
in
jl
fistp
jcxz
ins
add
outs
inc
xchg
xchg
cmp
sbb
or
ret
jns
add
or
int
or
fdivr
out
es
shr
cmc
stos
mov
cmp
mov
loope
pop
mov
sbb
or
dec
push
add
jo
pop
sbb
arpl
cmps
dec
push
add
popf
int3
inc
arpl
retf
push
jnp
xchg
push
inc
ror
add
pop
sbb
test
sub
push
call
cmp
xchg
push
imul
push
jle
sbb
cmc
pop
inc
push
stos
pop
push
mov
xor
dec
mov
cld
and
mov
cdq
jmp
lds
std
mov
movs
fisub
(bad)
jp
dec
dec
ja
jmp
xchg
mov
cmp
xchg
inc
dec
out
sbb
repnz
or
or
data16
sub
ss
inc
add
stos
fadd
inc
sub
jle
adc
cmp
bnd
sub
mov
mov
js
mov
dec
ret
ja
or
imul
cmps
mov
xchg
xor
or
loop
or
mov
adc
jp
pop
xchg
aas
out
adc
push
ds
xlat
pushf
jmp
add
push
jl
push
jge
add
rcr
jl
sub
shr
je
sti
cli
sub
stos
xchg
dec
sti
jnp
add
jae
jbe
adc
rcr
cli
inc
test
int
push
ss
iret
jbe
jb
inc
push
pop
test
popf
push
std
inc
mov
ins
xor
(bad)
das
jne
cmp
dec
arpl
loop
push
lahf
arpl
and
(bad)
lea
xchg
cwde
sbb
xchg
inc
jbe
or
xor
outs
mov
dec
jnp
test
leave
mov
mov
cmp
sub
hlt
mov
sub
std
add
push
xchg
cmc
out
mov
hlt
ficomp
rol
pop
inc
adc
inc
mov
in
xchg
dec
fsqrt
push
pusha
dec
add
ins
mov
aam
jb
enter
(bad)
int3
adc
adc
jbe
xor
loopne
lahf
xchg
lsl
and
outs
ins
add
jmp
ins
jnp
mov
mov
aam
ret
iret
sti
clc
dec
fimul
dec
xor
popf
(bad)
test
add
sub
aas
idiv
stos
push
shr
stos
mov
leave
movs
or
mov
push
or
add
in
repz
push
fiadd
data16
dec
fdivr
or
dec
int
fmul
es
inc
jmp
lods
gs
ret
cmps
xchg
or
rcr
call
mov
sbb
leave
push
jmp
dec
jecxz
sbb
aam
std
push
push
nop
jne
arpl
mov
jo
add
pop
es
arpl
les
stos
(bad)
ret
mov
outs
je
aas
leave
loopne
jp
(bad)
bound
dec
ret
mov
sti
push
jo
sbb
sbb
out
in
(bad)
cwde
jg
in
or
ins
pop
test
inc
sahf
imul
mov
cmps
sbb
in
loope
sar
adc
mov
stos
jge
nop
xchg
jge
xchg
dec
and
ds
cmc
xlat
push
mov
sbb
adc
mov
out
ins
jb
sar
mov
into
scas
js
(bad)
mov
xchg
mov
mov
or
repz
xor
cmps
sbb
outs
data16
pop
mov
mov
cmps
enter
imul
fwait
jb
movs
sbb
and
test
or
xchg
aaa
jae
imul
sti
mov
test
jnp
out
stc
sub
lods
je
repz
jnp
inc
or
mov
mov
mov
xor
add
pop
fcom
adc
rcl
jl
int
dec
div
mul
adc
inc
add
les
mov
test
pop
dec
retf
ret
inc
(bad)
iret
jle
jnp
shl
mov
dec
pop
lods
call
inc
cmp
and
icebp
ror
mov
sahf
ret
xor
jg
jno
jl
ins
in
lahf
rcl
enter
std
imul
push
mov
xor
xchg
jae
xchg
jnp
(bad)
daa
cmps
nop
movs
or
popa
add
arpl
jbe
dec
sub
sub
pop
js
lock
push
dec
in
or
cmp
xor
mov
ss
push
sub
jmp
in
xchg
shr
dec
push
xchg
stos
or
fld
mov
(bad)
jg
call
push
mov
call
fiadd
and
in
pop
fdivrp
jnp
test
xchg
or
(bad)
mov
out
push
pop
xchg
jno
(bad)
sbb
and
cli
push
mov
sbb
in
nop
sub
jnp
inc
mov
add
sub
adc
or
and
imul
mov
out
shr
(bad)
out
dec
cmp
into
in
xchg
jecxz
(bad)
jmp
test
in
jno
inc
mov
or
ja
or
xor
xchg
pop
(bad)
mov
pop
mov
cmp
sbb
xor
sbb
mov
call
int3
dec
sti
loope
or
sub
adc
call
jge
std
pop
jo
dec
int3
pop
pop
(bad)
ins
dec
and
(bad)
cmc
cmc
add
test
and
mov
(bad)
push
mov
or
sbb
lahf
jg
int
scas
repz
mov
arpl
out
or
mov
out
dec
inc
hlt
cli
pop
out
outs
jle
cld
aam
lds
xchg
es
sbb
retf
push
mov
mov
ds
sbb
cmp
and
pop
adc
pushf
aas
ficom
mov
cmp
(bad)
test
pop
mov
push
scas
nop
jo
(bad)
mov
mov
test
xor
xchg
sub
sub
and
jl
and
iret
dec
inc
push
ret
pop
imul
sub
mov
mov
fcmovbe
sbb
and
enter
or
aas
and
fnstenv
pop
jb
cmc
push
hlt
scas
scas
pop
mov
inc
fbstp
pop
popf
pusha
test
and
xchg
iret
xor
sub
(bad)
fsubr
pop
sti
adc
in
pop
stc
fwait
test
sbb
lods
or
fwait
clc
adc
fiadd
repnz
out
mov
ficom
and
dec
daa
test
in
hlt
(bad)
js
sar
cmp
jmp
and
mov
xchg
pop
lahf
dec
fprem
sub
push
hlt
mov
ret
test
mov
inc
pop
retf
popa
xchg
add
popa
xchg
mov
clc
push
sub
sub
fs
xchg
test
mov
dec
mov
sub
retf
nop
dec
push
xor
mov
aas
(bad)
aam
dec
lods
push
aam
mov
pop
mov
dec
mov
xor
cmps
jae
call
les
add
jmp
pop
fisubr
sbb
mov
add
push
shl
daa
outs
or
jns
or
add
mov
lea
mov
inc
mov
in
sbb
xchg
ja
push
xor
inc
xchg
jle
sbb
xor
or
pop
fmul
arpl
xchg
pop
ror
fmulp
cmp
icebp
cmp
sub
lods
lock
dec
test
mov
popf
dec
adc
and
fdiv
push
repnz
ins
dec
inc
or
xchg
aam
xor
jg
rep
adc
sbb
jb
pop
add
or
jp
jae
jne
push
pop
das
sub
outs
xchg
leave
fsub
xor
cdq
sbb
lods
or
cs
add
push
out
xor
jg
fild
aad
mov
loopne
xchg
adc
es
sbb
adc
lahf
ins
stc
jge
adc
sbb
jge
out
mov
mov
icebp
out
push
into
mov
xor
inc
test
popf
pop
cmp
imul
mov
jge
cld
mov
xor
jg
stos
call
xor
xchg
mov
inc
adc
neg
and
or
ret
inc
inc
mov
sti
out
mov
pop
xchg
cmc
jp
mov
test
fistp
lods
sbb
jae
cmps
inc
das
rcl
idiv
sbb
(bad)
sub
rol
pop
pop
adc
loop
pop
mov
add
adc
mov
sbb
scas
cld
mov
ror
pop
pop
or
mov
movs
icebp
retf
jle
mov
stos
scas
ret
ret
fadd
mov
mov
push
add
sub
lea
mov
xchg
repnz
(bad)
mov
cmp
pop
fs
out
(bad)
nop
imul
movs
adc
sahf
jp
repnz
cs
push
out
mov
pop
jnp
cmps
leave
mov
cdq
aaa
sub
pop
fild
mov
cli
push
mov
push
(bad)
ins
(bad)
jecxz
mov
repnz
add
out
xchg
cmps
enter
fdiv
mov
push
jbe
add
sbb
cmp
stc
dec
cmps
lea
cmp
jnp
and
out
cwde
movs
mov
les
pop
pop
inc
xor
lock
cmc
into
dec
adc
fsubr
sti
rcr
cmp
pusha
js
mov
push
int
cmc
xor
lahf
mov
mov
and
xchg
cmc
mov
sub
mov
popa
popf
rol
jl
mul
and
mov
hlt
dec
cmp
xor
lahf
push
inc
mov
mov
sti
ss
mov
clc
pop
icebp
je
jb
xor
test
bound
sar
into
or
xchg
push
jl
mov
outs
fild
fbstp
dec
popf
xor
sub
xor
mov
xchg
sub
cwde
popf
sbb
jbe
ss
cmps
les
test
(bad)
mul
mov
(bad)
shl
nop
fnstenv
aam
loop
ins
adc
push
mov
fst
test
or
rol
cmp
inc
sub
(bad)
jp
jg
iret
and
fcmovb
inc
cmp
mov
retf
push
fwait
enter
and
pop
stc
int3
cmp
mov
push
xchg
jno
xchg
adc
mov
cmp
inc
cmp
int
add
shl
mov
retf
cmp
mov
iret
cmp
cmp
mov
cmps
ss
shl
sbb
cld
inc
stos
mov
into
lods
mov
ror
cld
imul
sti
jge
mov
jb
or
mov
imul
jmp
aam
add
mov
bound
jge
and
add
sbb
pushf
or
in
sbb
mov
aaa
out
pop
sub
add
das
add
mov
dec
call
icebp
lds
xor
pop
fst
(bad)
es
ja
mov
les
ret
in
mov
shr
icebp
xchg
in
cmps
xor
hlt
arpl
stc
movs
mov
push
xchg
or
outs
sahf
or
or
jmp
pop
arpl
xor
in
int
stos
or
inc
inc
daa
aas
add
jl
jb
push
jb
xor
adc
sub
fistp
push
push
add
jno
retf
outs
les
push
xchg
imul
cmp
push
jb
call
xchg
push
mov
in
jl
fisttp
retf
cmp
xchg
xchg
stc
add
pop
in
adc
ror
jb
movs
or
mov
cld
call
mov
ja
ret
pop
dec
dec
inc
adc
jbe
cld
push
mov
xchg
mov
pop
mov
jbe
inc
inc
pop
(bad)
in
icebp
xor
shl
loope
mov
jle
inc
sar
call
push
sbb
call
push
mov
push
mov
outs
push
pop
inc
cmp
sbb
sub
jno
pop
std
lock
push
mov
sub
imul
scas
stc
push
jno
push
in
pop
fwait
cmp
push
push
retf
and
cmps
and
push
enter
sar
jae
ret
xor
jne
outs
loope
cmc
cmps
xchg
mov
jge
mov
mov
hlt
inc
push
xor
sub
inc
and
test
jno
retf
sbb
push
fcmovne
popf
mov
and
retf
sahf
xchg
dec
shr
adc
mov
pop
or
iret
fidiv
push
xor
aad
cmp
sbb
sti
sbb
addr16
mov
jle
retf
loope
mov
pop
or
pop
and
or
add
mov
scas
dec
xchg
ret
lds
mov
cmp
adc
inc
dec
dec
stc
mov
inc
fisttp
dec
jecxz
mov
push
mov
xor
bound
pop
jne
mov
icebp
retf
repz
cmc
stos
cli
dec
pusha
fidivr
adc
and
xchg
(bad)
mov
gs
gs
pop
cli
jae
call
das
loope
mov
sbb
adc
sbb
shrd
cdq
test
aas
ins
sbb
push
jns
movs
or
icebp
stos
push
addr16
push
adc
pop
repz
inc
jp
push
mov
cwde
xchg
add
outs
lods
xchg
sbb
mov
adc
adc
(bad)
(bad)
dec
ret
mov
mov
cli
cs
sub
shl
bound
or
or
sbb
das
mov
and
pop
outs
es
es
xchg
xchg
aas
cwde
out
xchg
jle
xor
ss
mov
push
sbb
xor
out
(bad)
jle
retf
loope
xor
xor
dec
cld
pop
add
or
rcl
sahf
call
push
jmp
imul
mov
jb
mov
imul
leave
shr
jmp
stos
mov
xchg
or
jmp
aad
out
jo
enter
leave
mul
cmp
xor
aas
mov
dec
(bad)
popf
fwait
dec
dec
xchg
into
sub
inc
jne
(bad)
fsub
arpl
xor
jge
cmp
out
jecxz
jns
adc
sub
and
jno
cmp
cld
cs
imul
inc
sub
loopne
pop
inc
(bad)
jae
test
push
fimul
sub
inc
mov
cmp
jb
cld
ins
sbb
ss
cmp
or
add
mov
sub
call
jns
or
loop
sbb
pop
sub
push
jmp
xchg
mov
and
xchg
push
xchg
sti
scas
aad
sub
mov
xchg
sbb
iret
mov
das
mov
mov
mov
xor
push
xlat
jp
mov
add
cwde
or
lods
movs
cmc
mov
rcl
jp
rcl
xlat
lods
shl
test
arpl
mov
adc
or
push
ret
jns
mov
imul
xchg
fstp
out
or
cs
jl
push
mov
inc
stos
loop
jo
inc
loop
mov
xlat
and
sti
mov
jb
push
jp
sar
sbb
int3
mov
jmp
test
sti
imul
jge
or
mov
pop
xchg
icebp
add
cmp
adc
ret
mov
jp
aam
mov
ss
sub
add
xor
pop
xchg
in
fidivr
sub
adc
bound
dec
sbb
pop
jo
cmp
das
xor
jo
out
test
fiadd
(bad)
ror
mov
mov
ins
repz
sbb
cmp
enter
jg
lods
mov
loope
ret
pop
pop
int3
fidivr
out
xchg
jg
cmp
loope
enter
jo
xchg
mov
xchg
(bad)
mov
mov
in
popa
cld
push
pop
pop
fst
mov
push
adc
movs
add
aas
les
push
scas
in
stc
int
pop
mov
or
mov
jl
jo
iret
retf
push
pop
rol
inc
movs
push
inc
or
outs
lahf
jmp
fs
xor
adc
cmp
mov
mov
(bad)
cmp
sub
or
pushf
inc
lahf
xor
fdivr
sahf
push
sub
pop
cmp
aas
out
xchg
aam
cmps
pop
cs
dec
cld
into
aad
push
mov
jns
call
push
push
hlt
(bad)
daa
out
enter
and
cwde
lea
cmp
mov
inc
jmp
xchg
jb
outs
mov
aas
jmp
jmp
and
cmps
jle
sbb
cwde
or
mov
movs
out
cmps
lahf
pushf
nop
cmp
mov
jne
jmp
sbb
in
and
call
call
push
(bad)
sti
cmp
push
push
mov
xchg
add
push
mov
adc
inc
xchg
mov
aad
pop
repz
mul
lods
jno
cmc
movs
ins
ins
std
adc
dec
cdq
popf
arpl
mov
imul
push
repz
add
cmc
scas
and
ss
stos
adc
xchg
imul
adc
imul
call
loop
push
jbe
mov
cmc
fdivr
loopne
sbb
cld
dec
nop
arpl
loope
lock
xchg
fld
sub
ret
iret
test
aas
shr
mov
add
adc
movs
popa
mov
(bad)
push
in
lea
ins
jecxz
add
mov
icebp
xlat
cmp
aas
pop
xchg
sbb
loope
cmp
jns
push
call
enter
push
jg
frstor
mov
sbb
les
loope
pop
(bad)
jnp
ins
mov
adc
jmp
daa
mov
outs
adc
push
lods
retf
pop
inc
xor
and
test
cmp
sbb
and
push
mov
fist
sub
add
sbb
pop
add
cmp
or
test
daa
test
in
ja
call
push
adc
das
(bad)
das
add
push
xchg
inc
adc
loop
push
daa
lahf
push
dec
daa
sbb
sub
xor
xor
cli
movs
or
xchg
inc
sbb
outs
sub
mov
xor
xlat
and
inc
cwde
clc
test
inc
mov
push
dec
mov
or
and
(bad)
cli
fsubr
iret
aad
pop
rol
pop
cmp
jmp
test
mov
(bad)
jbe
ins
mov
das
jb
out
cwde
jmp
push
push
jno
(bad)
jnp
test
lods
dec
xchg
mov
mov
mov
outs
outs
add
dec
fild
cwde
aam
dec
pop
les
push
and
dec
fist
popf
retf
jne
mov
xor
(bad)
movs
stos
xchg
les
ins
gs
sub
popf
xchg
lahf
mov
jo
xor
sbb
repz
scas
push
cmp
push
mov
xchg
xlat
pop
pop
call
inc
repz
or
xlat
test
push
xchg
fstp
sub
fdiv
call
in
mov
stc
pop
movs
sbb
pop
xchg
fwait
jp
pusha
es
enter
mov
cdq
ins
mov
pop
sbb
mov
mov
inc
mov
xchg
addr16
xchg
jo
jl
and
xor
rcl
xchg
mov
xchg
sbb
test
pop
mov
sub
push
fld
dec
xor
push
retf
clc
daa
movs
xor
cmp
inc
mov
mov
fisubr
out
inc
pop
mov
mov
inc
outs
pop
in
sar
test
inc
cmp
jl
fld
mov
stos
loope
mov
out
cmp
loop
jecxz
int3
jg
cmp
leave
push
jae
jns
sub
add
bound
inc
jle
(bad)
int3
dec
es
sub
call
cmp
(bad)
jge
mov
add
les
test
xchg
outs
div
xor
ins
frstor
sbb
cmp
mov
fcomp
fcom
fs
inc
shl
lock
mov
test
in
fcmovnu
or
xchg
add
movs
retf
sti
push
xchg
sti
jp
(bad)
mov
daa
(bad)
inc
idiv
sub
imul
adc
dec
ficom
pop
fdivr
push
xchg
jmp
ins
xchg
mov
test
xchg
mov
stc
mov
imul
jmp
test
loopne
sub
add
repz
add
ficom
xchg
inc
jns
ret
add
jecxz
or
sbb
pop
int
push
push
dec
inc
add
inc
dec
clc
cmp
mov
cmp
cwde
mov
shl
rcl
mov
cmp
fst
xchg
add
inc
mov
nop
cmp
or
fbstp
sub
rep
push
push
dec
mov
cmp
mov
bound
(bad)
or
mov
mov
or
scas
out
pop
mov
adc
sub
cmp
sbb
and
aam
aam
and
pop
jo
int3
dec
jg
pop
stc
ins
rcl
mov
pop
adc
sahf
les
push
repnz
lods
stc
and
xor
sub
js
lahf
mov
call
ud2
mov
add
mov
or
push
test
fadd
mov
pop
push
adc
out
cmps
or
fsubr
xchg
(bad)
mov
cmp
mov
shr
aas
xchg
arpl
or
sbb
xchg
pop
adc
push
push
scas
fisubr
scas
cmp
xchg
push
push
inc
dec
add
xor
xchg
mov
xchg
imul
cmp
sbb
pop
or
mov
push
test
enter
jg
gs
mov
add
lea
arpl
push
movs
stc
inc
mov
mov
loop
sub
lods
add
mov
shl
in
(bad)
inc
inc
dec
fistp
mov
arpl
(bad)
mov
push
fld
stos
iret
shr
push
mov
fst
xchg
push
inc
test
cmp
shl
loopne
in
in
rcl
cmp
call
pop
and
in
clc
or
repz
cmp
pop
das
repnz
retf
shr
es
sbb
xchg
stc
inc
data16
add
dec
adc
mov
push
xor
xchg
les
cmps
jg
js
add
test
movs
cmp
lahf
mov
arpl
cdq
loope
mov
or
inc
fwait
push
loopne
in
stc
sub
jnp
jg
cmp
and
rol
push
dec
pusha
sub
ja
mov
sub
fist
jns
mov
fsub
lea
gs
mov
sbb
movs
pop
movs
push
inc
test
outs
inc
and
shr
inc
lock
stc
jl
mov
jns
mov
mov
xchg
sbb
fistp
imul
loop
ja
fcom
pop
jl
dec
xor
(bad)
or
jo
ficomp
cmp
test
fstp
ins
rcr
pop
pop
scas
rcl
ret
int3
xor
dec
sti
and
add
out
outs
rol
xchg
or
ja
retf
mov
jp
jmp
cmps
dec
movs
aam
push
pop
lahf
jmp
cmp
iret
aam
inc
xor
jle
inc
fwait
addr16
fucom
cmp
push
dec
pop
in
ret
scas
ror
xchg
inc
(bad)
dec
xor
dec
push
jmp
add
xor
mov
in
sbb
fs
cmc
sub
fistp
aad
mov
and
or
cdq
inc
std
icebp
sbb
es
popf
call
icebp
push
mov
or
xchg
jl
inc
sub
inc
cmp
das
in
jge
pusha
rcl
retf
jp
inc
jecxz
add
mov
(bad)
dec
mov
sti
add
jg
pop
push
dec
inc
jecxz
pushf
pop
add
rcr
mov
pop
or
jb
cld
jmp
call
xchg
shl
fadd
bound
jl
fcom
xchg
dec
aaa
pop
rol
es
jo
loopne
push
pop
out
sbb
add
pop
mov
xchg
out
retf
push
call
lock
(bad)
imul
cdq
push
mov
(bad)
psrld
xchg
aas
cdq
cmp
bnd
mov
or
dec
xchg
movs
jo
mov
mov
and
jge
dec
rol
add
aas
xchg
dec
pop
mov
cmc
outs
cmps
loope
retf
dec
cs
mov
mov
cdq
inc
repz
push
fldcw
ret
sbb
xchg
mov
and
dec
sbb
jmp
leave
mov
sub
retf
imul
add
or
cs
add
jne
fidiv
(bad)
and
push
test
cmp
inc
out
add
pop
stos
and
fwait
push
ins
push
(bad)
cmps
sub
xchg
lea
les
popa
pop
test
dec
dec
xlat
and
pop
mov
aam
cli
inc
mov
xor
movs
or
mov
fcomip
fistp
enterw
sub
dec
jo
loope
test
sub
clc
mov
movs
pop
jbe
in
lds
add
pop
cmp
push
movs
outs
cmp
loopne
scas
or
test
dec
mov
push
inc
and
jns
cmp
sbb
add
sub
enter
mov
adc
xchg
fsubp
dec
aaa
push
dec
sbb
ss
mov
stos
push
mov
mov
bswap
popf
mov
idiv
in
xor
adc
mov
pop
adc
lahf
xor
repz
push
cli
cmps
ds
ret
in
out
pushf
imul
jbe
jae
cmp
bound
push
sub
out
or
repnz
push
lea
cmps
imul
nop
add
cld
inc
cwde
inc
(bad)
retf
ret
out
call
cmp
std
adc
push
lahf
test
data16
adc
ss
dec
dec
pop
js
pop
push
scas
mov
xchg
js
stos
das
jge
iret
outs
xor
jl
je
push
out
lea
pop
lods
cmp
pop
leave
jmp
imul
mov
mov
mov
aaa
mov
cmps
shl
lods
cdq
pop
and
jmp
sti
jl
fimul
loop
fs
das
aas
aam
xchg
cwde
rcr
pusha
push
(bad)
jae
xor
(bad)
cmp
pop
mov
xor
mov
xchg
add
jecxz
cld
cli
jmp
mov
call
xchg
aam
pushf
mov
mov
pushf
xchg
mov
ins
sahf
mov
sbb
jl
aad
cmp
daa
aam
mov
icebp
js
push
(bad)
push
sub
nop
ret
xor
in
sbb
mov
jbe
inc
pop
repz
sahf
xchg
imul
pop
push
and
sbb
in
and
call
lods
cdq
push
mov
pusha
leave
and
adc
lods
sahf
fisttp
dec
jecxz
mov
dec
inc
inc
bound
enter
mov
gs
adc
mov
pop
fisubr
pop
push
push
and
xchg
jl
shr
sub
dec
dec
and
sub
mov
push
je
jns
fs
inc
jne
pop
xchg
std
mul
(bad)
movs
dec
iret
push
rcl
cmp
sbb
sub
das
pop
fistp
pop
push
rcr
jmp
mov
push
xchg
sbb
aam
mov
stos
fcom
arpl
and
movs
into
push
dec
sbb
cmp
push
ss
shl
mov
dec
or
in
daa
pusha
in
leave
adc
ret
pop
mov
iret
mov
fsubr
xor
bound
jo
mov
(bad)
mov
mov
mov
mov
pop
push
inc
inc
mov
std
add
mov
mov
cwde
sahf
stos
jno
mov
adc
mov
in
mov
ret
xor
das
or
xchg
js
(bad)
out
or
fdivr
cmc
push
inc
cwd
mov
(bad)
jmp
xor
daa
lea
sbb
enter
sub
mov
and
aas
js
ret
in
fnstsw
mov
xchg
cwde
aam
in
push
stc
jp
push
cmp
jp
or
repz
mov
or
popf
mov
sbb
sub
int
fwait
inc
pop
loop
les
inc
pusha
cmp
jns
(bad)
sbb
pushf
fwait
out
shl
cmp
xlat
imul
(bad)
push
mov
ficomp
or
ja
push
dec
jne
out
sub
into
sahf
push
out
mov
sub
fsub
jp
xchg
pushf
xchg
imul
ins
and
mov
int
aam
jo
sub
add
test
int
push
dec
adc
fcmovnb
jb
fisttp
fild
in
and
jg
xor
jae
mov
sbb
retf
sbb
bound
call
(bad)
cwde
inc
mov
mov
bound
mov
popa
cmp
enter
or
or
xchg
ret
mov
or
dec
push
xchg
lock
lahf
call
cwde
(bad)
dec
test
hlt
mov
push
xchg
ss
into
sbb
cmp
(bad)
push
(bad)
neg
outs
fstp
mov
imul
repnz
ins
mov
adc
jp
out
lds
ds
dec
and
adc
aas
mov
dec
inc
mov
mov
lahf
push
repz
scas
push
aas
movs
icebp
iret
mov
sbb
cmps
pop
movs
mov
dec
push
fnsave
sub
jo
jnp
outs
sbb
adc
out
rcr
clc
pop
fwait
and
popa
jo
jnp
dec
push
jae
pop
sub
fnstsw
mov
push
pop
call
ins
cmp
test
rcr
sti
xchg
cmp
pop
out
mov
pop
popf
cmp
enter
pop
ins
movs
imul
call
xchg
mov
(bad)
sti
and
push
sub
sub
fiadd
add
mov
pushf
into
imul
and
adc
pop
xlat
cli
sbb
scas
cwde
das
xor
cmp
lods
test
mov
inc
mov
pop
pop
and
dec
ss
(bad)
aas
push
dec
movzx
xchg
ins
adc
icebp
adc
cli
push
in
ins
rol
sub
push
sub
fstp
or
add
lahf
pop
aas
icebp
adc
adc
int3
mov
fprem1
dec
aad
call
cmp
out
mov
jbe
shr
and
and
mov
sub
cdq
imul
icebp
mov
icebp
xor
int
jmp
ins
or
push
fmul
fistp
mov
test
iret
addr16
ja
lods
test
imul
(bad)
hlt
jnp
jne
gs
sti
dec
psraw
stos
cmp
or
(bad)
fisttp
sbb
adc
sub
pop
lods
sbb
ins
mov
pop
jp
mov
in
xchg
outs
and
dec
mov
xor
and
add
dec
cli
lahf
ficomp
xor
and
in
lahf
mov
pop
dec
mov
pop
int3
sbb
outs
int
add
adc
push
xor
imul
aas
je
stc
hlt
mov
push
sti
retf
movs
adc
ja
and
cmovo
imul
cmp
dec
fcomp
nop
(bad)
cmp
dec
xor
aam
and
ret
repnz
mov
ss
shl
or
mov
aas
inc
fstp
mov
ds
pop
xor
sub
sar
cmp
xor
test
outs
lods
(bad)
jmp
call
hlt
mov
jb
jmp
inc
adc
or
mov
fisttp
mov
aaa
popa
lods
call
(bad)
retf
cdq
sub
rcr
mov
mov
mov
std
fs
ins
adc
inc
retf
imul
icebp
inc
sub
push
out
xchg
mov
popf
dec
push
retf
sbb
mov
cmp
test
sbb
pop
loop
sub
and
mov
arpl
std
mov
sub
and
mov
ficom
inc
adc
push
xchg
push
cmp
cmp
inc
aas
(bad)
(bad)
lea
ret
xor
test
cdq
push
push
dec
stos
shr
imul
cmovl
inc
xor
jg
jb
inc
inc
cld
es
sbb
pusha
fdivp
(bad)
cmp
push
pop
dec
not
fld
enter
into
aad
pop
pop
dec
pop
out
dec
pop
and
or
in
int3
mov
out
pop
and
das
ret
sub
int
in
ins
push
pop
out
xchg
xchg
(bad)
aam
repz
sar
cmp
cmp
ret
sbb
hlt
mov
push
cmp
lahf
inc
(bad)
push
fisubr
add
xchg
pop
bound
in
aas
inc
xor
mov
mov
adc
inc
mov
inc
div
adc
imul
push
cmps
push
jnp
cmp
cmps
xchg
js
dec
stos
sbb
or
out
cmps
xchg
xor
fs
popa
das
sti
mov
dec
in
nop
lods
jnp
loop
(bad)
pop
xchg
nop
jbe
jl
inc
fistp
jp
in
lock
mov
pop
rcl
stos
pop
outs
iret
into
repz
rcr
push
pop
aaa
or
sub
enter
dec
in
lea
rcl
push
pop
outs
inc
pop
fcomi
sbb
sbb
cmp
cs
pop
jno
mov
pop
es
push
pushf
aaa
nop
sahf
fisttp
pop
xchg
mov
cwde
sub
xchg
mov
jb
ret
lods
sti
dec
jle
clc
xchg
sbb
pop
mov
pop
scas
sub
imul
add
lds
cdq
jmp
fsubr
test
loope
add
das
inc
or
push
(bad)
xchg
lods
and
pop
repz
iret
and
jne
xor
xchg
pop
inc
ret
mov
sbb
add
mov
mov
test
xchg
lods
dec
jl
jbe
das
push
jns
pushf
sub
icebp
sub
cmp
xchg
add
cld
mov
mov
in
mov
das
ds
loope
mov
les
xlat
lods
mov
cmc
lock
cmp
xchg
adc
pusha
adc
mov
dec
test
addr16
add
xchg
into
mov
loopne
inc
in
mov
push
inc
inc
sub
loope
lea
cmc
mov
mov
test
mov
outs
cwde
push
mov
fcomp
outs
jmp
jne
dec
mov
bound
cld
scas
rol
inc
xchg
inc
jnp
das
and
(bad)
loop
(bad)
jp
nop/reserved
inc
jne
clc
push
and
jecxz
mov
cmp
(bad)
(bad)
xchg
scas
dec
loope
fwait
sbb
mov
pop
movs
xor
jae
mov
jmp
adc
push
jne
fld
(bad)
outs
call
sbb
addr16
test
cdq
add
pop
inc
lock
and
jnp
das
jmp
add
and
outs
mov
imul
jmp
lock
loope
jno
sub
mov
mov
mov
je
fnsave
or
mov
and
(bad)
out
scas
inc
push
nop
fisub
fisub
or
pop
in
mov
sbb
in
jbe
dec
test
sbb
pop
pop
(bad)
xchg
ss
in
mov
sbb
cmc
xor
xor
hlt
sub
xor
xchg
ins
lock
mov
xor
adc
add
iret
adc
imul
outs
cmp
xor
and
inc
mov
fimul
iret
jae
mul
retf
in
scas
xchg
xchg
adc
shl
mov
fdivr
sahf
nop
pusha
and
out
mov
in
dec
cwde
pop
aaa
push
jge
push
and
outs
jnp
int3
or
mov
nop
pop
or
dec
push
add
xchg
aas
mov
arpl
add
inc
xchg
ins
sbb
xchg
mov
arpl
pushf
bound
unpckhps
(bad)
ins
jle
dec
xlat
out
scas
push
pop
mov
scas
(bad)
out
adc
cmp
and
loope
push
adc
cmovo
and
xor
dec
push
outs
int3
lea
mov
outs
adc
pop
sti
test
inc
fisttp
or
stc
aaa
mov
inc
(bad)
dec
pusha
cmp
or
test
stos
sbb
scas
retf
imul
pop
jns
push
add
jmp
jno
outs
mov
shl
pop
push
jae
mov
push
into
pop
xchg
jmp
pop
popf
sbb
jo
scas
sub
sub
mov
push
mov
and
das
dec
sub
outs
sub
and
stos
imul
out
or
pop
aad
xchg
sub
rol
data16
xor
out
sbb
jp
fisub
out
jns
pop
lods
xchg
cmp
push
mov
jmp
push
into
or
jecxz
add
xor
add
(bad)
sub
aaa
(bad)
das
pop
cs
inc
add
xchg
xor
cmp
ffree
lods
mov
repnz
jge
clc
retf
inc
sub
ja
xor
xor
cmp
ins
push
fs
mov
jle
div
dec
dec
xchg
(bad)
mov
and
mov
or
mov
cmps
xor
aad
xchg
sti
or
add
movs
cmp
dec
push
out
jmp
adc
clc
and
mov
mov
xchg
repz
icebp
inc
cmp
ins
jo
inc
out
imul
(bad)
das
ror
(bad)
cli
popa
add
mov
and
xlat
inc
sub
int3
pop
add
push
push
dec
sub
xor
mov
repnz
outs
sti
movs
push
mov
jl
xchg
call
xor
ret
adc
mov
xor
mov
cs
cmps
pop
jae
call
scas
cdq
jb
rcr
js
scas
mov
(bad)
in
sbb
bound
popf
inc
bound
jbe
xor
cmp
icebp
bound
add
lea
cmp
hlt
cmp
add
cmc
push
cmp
xlat
pusha
outs
rol
add
jmp
retf
sti
cmp
jmp
pop
out
rol
ds
pop
ror
popf
sub
dec
xor
xchg
push
inc
push
pop
push
addr16
aaa
mov
fnstsw
mov
aad
retf
jmp
add
add
jno
ret
inc
mov
jecxz
push
and
push
rcl
(bad)
xor
cmp
push
jbe
xor
ror
push
jae
mov
adc
xor
sbb
mov
dec
jg
mov
test
push
mov
inc
pop
inc
cmp
loopne
adc
push
ret
cmp
out
js
inc
adc
push
push
cmp
sbb
adc
xor
mov
add
mov
dec
popa
sti
sbb
and
fnsave
inc
(bad)
out
mov
jge
fwait
scas
int3
mov
mov
repnz
mov
adc
pop
stos
das
dec
sbb
push
pop
xor
push
jge
pop
retf
in
xor
rcr
cmp
dec
out
xor
xchg
ror
jo
mov
push
fmul
push
movs
jecxz
pop
sbb
aaa
fs
jne
stos
add
mov
aam
hlt
lea
jbe
adc
outs
clc
inc
clc
push
pop
adc
lock
scas
xor
(bad)
jle
mov
xchg
and
sbb
lods
inc
in
push
stos
sbb
mov
movs
mov
jmp
imul
lds
les
inc
cdq
movs
icebp
fstp
adc
dec
jb
ja
aam
test
jno
rcr
retf
(bad)
sub
out
sub
inc
imul
les
fucomi
data16
cli
arpl
icebp
or
js
std
test
mov
xor
or
ret
dec
sub
jb
jne
inc
loop
(bad)
fisubr
pop
sbb
push
pop
dec
push
dec
push
aad
and
xchg
ret
and
adc
inc
loopne
retf
ret
stc
lea
stos
es
lahf
cmp
mov
hlt
aas
mov
(bad)
jbe
cmp
movs
cmp
das
iret
mov
popf
pop
lods
sbb
aas
vunpckhps
aas
leave
lea
add
les
sbb
stos
pusha
out
push
popa
inc
outs
and
xor
ret
clc
xlat
or
in
sahf
and
imul
xchg
or
add
test
push
hlt
sbb
fld
push
movs
and
cmps
mov
cmp
jle
mov
neg
or
mov
lods
adc
dec
xlat
inc
jmp
jp
cmp
test
imul
jge
into
sub
inc
ja
jo
jecxz
jge
bound
leave
push
setle
(bad)
jbe
or
leave
loope
hlt
cmp
dec
dec
adc
mov
mov
mov
mov
ds
aad
ss
push
jns
adc
out
into
inc
idiv
push
aaa
sub
xchg
imul
jmp
adc
mov
dec
push
fadd
dec
cwde
push
inc
mov
sub
hlt
(bad)
push
mov
cmc
mov
xchg
popf
add
(bad)
jno
fidiv
mov
out
cmp
lods
pop
das
test
pop
je
add
pop
mov
lods
push
jmp
dec
pop
push
aaa
mov
pop
cmp
sub
stos
sbb
div
call
mov
xlat
lods
inc
hlt
ins
pop
add
retf
or
fist
or
adc
add
add
imul
out
mov
cmp
pop
jae
add
rcl
ds
mov
dec
push
das
lea
cmp
inc
add
mov
sub
repnz
push
es
jp
sub
and
fisttp
push
pop
jge
pop
mov
add
sub
jae
fdiv
es
sub
(bad)
sbb
jnp
test
shl
dec
cs
xchg
(bad)
cmp
test
cmc
xchg
mov
rcl
lock
stc
cli
daa
adc
sub
stc
sahf
jg
sti
fsub
push
xchg
xchg
cmp
push
or
mov
mov
test
adc
cs
or
pop
rol
lea
and
shl
nop
jnp
imul
jecxz
pop
pop
cmc
add
xor
ret
ret
push
cmp
into
sbb
movs
mov
(bad)
cli
shr
push
or
inc
push
add
bound
xchg
push
mov
fwait
adc
stos
(bad)
pop
push
clc
adc
mov
jb
icebp
xchg
addr16
cmp
aam
cld
mov
fld
jbe
add
pop
inc
sub
add
mov
sar
(bad)
mov
cwde
xchg
dec
mov
or
in
dec
cli
jmp
xchg
bound
gs
adc
loop
sub
js
ss
jno
jbe
dec
mov
push
mov
pop
xchg
xchg
push
addr16
mov
fcom
or
and
push
aas
hlt
rol
xchg
add
or
adc
test
xchg
fbstp
gs
mov
cmc
and
push
loop
sbb
pop
mov
mov
imul
cmp
aad
mov
mov
call
mov
add
pusha
lea
mov
sbb
dec
or
cmp
fstp
scas
xchg
push
es
(bad)
daa
mov
dec
int3
and
rol
int3
data16
sbb
lods
pop
jecxz
mov
sub
das
xchg
adc
inc
pop
dec
cli
or
push
(bad)
jmp
loopne
push
les
xchg
dec
movs
sub
vmwrite
ret
push
push
xlat
(bad)
jmp
mov
adc
test
pusha
dec
aam
inc
push
cmp
int3
in
push
push
push
xlat
xor
mov
mov
in
mul
fdiv
and
pushf
into
into
scas
xchg
dec
xor
mov
and
popa
mov
jbe
xchg
femms
aas
sub
shl
jno
lea
jmp
popa
mov
dec
fidivr
xor
and
inc
loopne
aas
arpl
aad
mov
mov
cmp
test
pushf
loope
and
fwait
inc
test
stos
fisubr
mov
xchg
jb
popa
dec
xor
sub
dec
stos
add
push
push
test
push
fdiv
adc
mov
ret
jne
out
shr
dec
leave
cld
xor
rcr
std
mov
mov
jge
imul
out
shr
dec
and
enter
jnp
mov
aam
mov
lea
shl
int3
xor
daa
jno
dec
or
add
int3
or
dec
add
in
cmp
jecxz
callw
inc
push
jge
xor
aam
cmp
or
push
pop
loop
add
mov
and
or
je
fmulp
into
fiadd
aad
inc
adc
jbe
xor
les
cmp
fadd
mov
stos
inc
cmps
gs
addr16
add
shl
jge
fs
das
jno
inc
inc
mov
or
sbb
xchg
lock
in
daa
mov
fadd
cdq
iret
or
out
mov
scas
ss
mov
dec
sbb
xor
sub
or
dec
stc
gs
ret
mov
and
in
movs
dec
mov
outs
scas
mov
jge
and
jae
mov
test
leave
imul
idiv
test
cmp
shl
or
dec
inc
mov
jmp
lea
imul
ret
data16
mov
cli
les
neg
rcl
shr
lock
mov
inc
pop
add
sub
adc
push
inc
hlt
mov
xor
in
xchg
adc
and
add
cmp
cdq
popa
sahf
mov
pop
mov
pop
es
xchg
add
sbb
aaa
(bad)
(bad)
jns
mov
adc
jmp
imul
rep
pop
call
leave
push
loopne
in
sbb
dec
fwait
inc
mov
sbb
push
ss
lock
or
xor
push
pop
ins
jae
mov
mov
or
pop
mov
out
imul
pop
data16
push
jl
push
sub
lea
mov
mov
dec
leave
pop
sbb
mov
jbe
mov
ja
inc
inc
mov
pop
(bad)
and
mov
bound
mov
and
ret
cli
sbb
repnz
xlat
repz
outs
in
mov
into
ja
outs
bound
int
and
inc
pop
stos
sub
xchg
mov
fstp
rcl
cmp
push
aad
mov
sbb
mov
xchg
test
push
and
in
scas
jo
(bad)
aas
nop
cmp
sbb
xchg
mov
sbb
mov
fidiv
sub
jno
daa
inc
sub
and
icebp
iret
dec
imul
mov
lds
dec
popa
mov
sub
adc
push
or
or
push
push
cmp
stos
push
mov
sahf
fstp
loopne
sub
jecxz
ds
(bad)
or
sub
ins
jmp
ret
mov
les
imul
jg
sbb
arpl
in
(bad)
xor
pop
loopne
add
hlt
popf
sub
iret
(bad)
adc
stos
and
or
lahf
or
push
(bad)
sbb
jge
inc
cwde
pop
cdq
jp
cmp
cs
(bad)
dec
outs
jecxz
mov
sub
jmp
in
scas
ss
in
dec
fs
dec
adc
add
in
ins
shr
pop
inc
pand
ret
mov
push
jbe
sbb
int3
xor
xor
adc
add
inc
cmps
mov
pop
cmp
in
adc
adc
and
(bad)
out
movs
enter
inc
xor
pop
fs
scas
jno
cs
pop
mov
xchg
pop
cwde
jmp
inc
popa
mov
cs
sub
jmp
inc
sar
out
xchg
xor
daa
ficom
push
mov
fst
xchg
rol
push
and
loopne
retf
bnd
add
shl
div
frstor
pusha
test
dec
call
jmp
xchg
mov
fnstsw
in
jp
pop
dec
movs
push
adc
cmp
dec
sub
lods
push
ror
es
movs
sbb
adc
push
sub
repz
out
movs
int
push
adc
xchg
shr
sbb
push
pop
or
sbb
adc
jns
jge
dec
push
movs
test
ins
xchg
pop
xchg
mov
iret
sbb
mov
scas
in
ror
mov
es
(bad)
push
(bad)
cmp
push
(bad)
je
cmps
cmp
pushf
mov
stos
inc
sbb
out
inc
fwait
popa
push
mov
push
push
jmp
je
loopne
rcr
mov
and
fwait
inc
cld
retf
gs
push
inc
pop
lea
add
pop
adc
cmp
in
movs
enter
sub
pushf
push
(bad)
jecxz
push
dec
test
mov
pop
cmc
jno
pushf
popa
fwait
test
adc
into
out
repnz
test
call
xchg
sbb
out
sbb
add
jbe
fsubr
jl
xor
dec
xor
call
outs
jae
jae
mov
mov
cmps
sub
mov
stos
and
sub
mov
dec
call
repz
xchg
movs
mov
fidiv
aad
clc
jp
mov
fnstcw
adc
jno
pop
mov
jg
outs
mov
sub
push
xchg
cmp
aam
nop
in
jecxz
sub
jge
in
inc
mov
inc
rol
sub
cmc
dec
dec
adc
retf
sbb
push
dec
lahf
pop
pop
psubsb
mov
inc
inc
scas
stc
pop
dec
pop
mov
loop
mov
mov
inc
or
daa
int3
idiv
jp
or
sub
int3
in
pop
in
pop
hlt
cmc
in
not
cmp
xchg
push
ror
adc
mov
sbb
sbb
pusha
jmp
sahf
and
lods
cmp
inc
sub
xchg
not
dec
shl
int
sti
ins
ds
add
out
sbb
xchg
dec
push
push
sub
dec
push
jne
mov
mov
lds
push
test
lods
inc
test
stos
dec
mov
pop
shr
dec
pop
(bad)
pop
stos
push
ds
jno
add
das
sub
not
push
stos
xchg
lods
aaa
push
xchg
sbb
pop
lahf
inc
sub
sbb
push
pop
xchg
xchg
popf
movs
pop
fwait
jmp
cmp
inc
jae
dec
mov
std
ins
jle
and
and
push
gs
add
add
loope
aaa
lods
stc
lea
jne
retf
imul
mov
mov
cmps
mov
shl
mov
mov
pop
je
leave
fs
(bad)
nop
stos
jl
lds
mov
jnp
inc
or
or
mov
push
rol
fisub
lods
pop
add
fdivr
adc
push
mov
xor
sub
sub
jmp
in
ins
push
in
(bad)
in
cs
outs
mov
adc
stc
dec
jns
dec
test
inc
xchg
xchg
fwait
int
leave
pop
sbb
addr16
mov
sbb
(bad)
or
imul
sbb
push
shr
test
sbb
mul
mov
cmp
mov
ss
mov
cmp
jecxz
xor
or
test
adc
dec
cmp
aas
cmp
mov
and
or
fnstenv
mov
xchg
imul
jae
push
mul
es
cmp
push
adc
imul
clc
inc
or
dec
test
mov
mov
or
sbb
push
test
movs
jno
neg
xlat
or
pmaxsw
dec
ins
push
out
popf
out
je
mov
dec
aaa
std
(bad)
leave
push
push
rcl
lahf
mov
mov
and
mov
mov
pop
movs
sub
mov
push
mov
jmp
daa
jg
sti
pop
cwde
xchg
enter
push
fdivr
pushf
xor
pop
sahf
jle
lods
addr16
stc
cmp
pop
in
add
add
call
cmc
es
mov
cmp
in
retf
std
push
dec
dec
rcr
sbb
scas
jge
push
movs
or
sbb
dec
test
pop
(bad)
sub
in
cmp
pop
aaa
push
jnp
addr16
mov
pop
int
pop
aad
and
sub
jl
cmps
inc
std
hlt
jmp
jge
bound
movs
adc
inc
xchg
loopne
xchg
ret
push
mov
sbb
pop
nop
inc
xchg
mov
sbb
or
test
cdq
fsub
and
into
in
shl
push
cmp
dec
ficomp
or
pop
cmp
shr
inc
bound
xchg
mov
pop
push
mov
ins
sbb
cmc
les
xor
rcpps
push
aaa
add
cmc
jle
test
mov
mov
mov
inc
out
adc
jmp
push
lods
data16
pop
xlat
push
test
cld
ficomp
dec
and
mov
(bad)
cmp
push
sub
add
push
pop
mov
inc
sti
addr16
jmp
inc
aas
add
jo
xor
mov
mov
lods
cmc
test
das
cmc
xchg
mov
mov
adc
mov
push
push
test
repz
pop
pusha
je
sbb
push
add
stc
or
add
xchg
and
push
fcomp
aam
call
add
push
leave
mov
cmp
in
repz
mov
icebp
add
inc
scas
mov
inc
pop
fldcw
out
sub
xlat
xchg
sub
fmul
cmp
cmp
xchg
sbb
or
mov
mov
imul
jae
in
adc
push
lods
lods
inc
(bad)
in
nop
arpl
dec
les
stos
scas
dec
movs
sub
loope
imul
or
inc
mov
push
xor
fild
hlt
cmp
mov
pop
cmp
or
test
movs
adc
or
in
ss
mov
repz
rol
cmp
call
lods
dec
popa
push
std
mov
sbb
fiadd
push
test
mov
das
push
sub
sub
or
aam
mov
fisubr
inc
aaa
and
jl
mov
push
sub
jmp
xchg
lods
popf
mov
arpl
pusha
ror
out
stos
stos
(bad)
push
ror
out
mov
inc
sbb
xchg
or
cmp
mov
cdq
mov
imul
or
cmp
jb
add
add
repz
push
dec
repnz
xchg
jb
xchg
enter
jge
add
cmps
add
hlt
jns
or
lea
retf
pop
mov
sub
dec
or
adc
nop
stos
cmp
sub
(bad)
cmc
test
adc
dec
push
sbb
dec
shl
cmp
test
or
enter
enter
mov
ret
sbb
sar
push
cvttps2pi
mov
xlat
xor
sahf
ret
inc
mov
mov
movs
bound
cmps
loope
imul
rol
cli
dec
xor
inc
mov
maskmovq
retf
adc
sbb
xlat
cmp
or
add
cmp
add
sbb
mov
cmp
icebp
stc
push
pop
pop
sbb
retf
jecxz
lds
fcomp
inc
push
test
push
fsubr
mov
in
lock
add
xchg
mov
xchg
sub
push
sub
jnp
jmp
sub
sub
addr16
sbb
mov
add
ret
xchg
(bad)
cmp
cwde
in
push
outs
clc
cmp
in
jnp
hlt
xchg
arpl
test
aas
sub
fbld
inc
in
push
lahf
(bad)
outs
mov
mov
aas
bound
cli
bound
jmp
push
lea
mov
nop
hlt
ds
and
stos
retf
outs
sti
lods
and
out
mov
or
cld
mov
add
lahf
cmc
cmp
sbb
or
js
test
ss
dec
jp
xchg
(bad)
mov
sbb
adc
and
push
es
fisub
mov
xor
int
pop
rol
lods
dec
cmp
add
push
rcl
(bad)
test
clc
movs
xor
(bad)
fcom
das
arpl
mov
(bad)
(bad)
xchg
push
enter
mov
pop
mov
push
jo
jno
jb
mov
addr16
jg
adc
or
lods
imul
mov
hlt
arpl
adc
hlt
test
inc
wrmsr
outs
or
inc
add
mov
dec
and
push
mov
test
aas
and
or
sti
fisttp
or
(bad)
cmp
push
jmp
les
cmps
jl
test
dec
aad
ds
mov
loop
add
(bad)
out
inc
sbb
mov
dec
pop
in
mov
test
push
adc
push
sub
xchg
cmps
xchg
rcl
test
std
pop
call
shl
xor
mov
(bad)
pop
fs
enter
mov
and
sar
push
pop
sub
mov
xor
sti
sets
mov
repz
jecxz
mov
stos
mov
add
inc
or
pushf
push
rol
loopne
fs
cwde
mov
into
hlt
mov
retf
sbb
pop
aad
fs
fisttp
ror
mov
imul
(bad)
nop
pop
inc
inc
or
adc
mov
test
jg
cmps
ins
cs
or
jns
xor
dec
sub
stos
ins
mov
ror
cmp
movs
jl
mov
out
push
sbb
sar
out
push
sbb
push
gs
mov
imul
jp
shl
cwde
mov
(bad)
and
lods
and
add
xchg
cli
mov
shl
aas
aaa
pop
xor
cmp
js
test
fwait
cmp
push
retf
sub
jns
ds
ss
cmp
aaa
pop
cmp
push
or
xor
pop
inc
jo
clc
cwde
xchg
cmps
fsub
adc
add
je
or
inc
xchg
xchg
sbb
frstor
lods
add
popf
mov
std
add
jmp
sub
lods
cwde
jns
rol
(bad)
dec
jecxz
ins
shl
sbb
mov
jp
(bad)
and
addr16
rcl
daa
fistp
mov
idiv
jno
adc
or
sub
movs
adc
sub
cmp
fcom
add
jecxz
(bad)
jmp
xlat
inc
jmp
xchg
adc
cmp
push
sub
imul
movs
mov
shr
and
fmul
xor
and
jg
pop
(bad)
sub
mov
mov
sub
cmps
cmp
test
xchg
mov
out
sahf
(bad)
unpcklps
and
nop
in
fnstsw
test
mov
retf
push
jp
or
test
and
push
inc
imul
ret
jmp
out
sbb
(bad)
xchg
jnp
jbe
outs
out
sbb
dec
inc
and
and
loop
daa
imul
jne
lods
push
into
cmp
inc
imul
cdq
iret
(bad)
push
xchg
div
aam
mov
js
mov
cmps
js
test
aad
stc
scas
ja
icebp
mov
cmp
xchg
sub
add
add
outs
mov
jp
xchg
push
div
pushf
fdiv
mov
xchg
dec
ficomp
pop
stos
mov
push
mov
dec
data16
icebp
sbb
xor
and
fimul
pop
clc
jp
mov
push
jno
ja
mov
xor
cmp
and
(bad)
out
mov
push
scas
pop
jno
jae
or
scas
test
add
mov
jbe
and
dec
fisttp
pop
and
fst
inc
inc
and
push
inc
mov
(bad)
inc
mov
mov
fiadd
xor
in
mov
daa
outs
xor
xchg
mov
enter
gs
add
mov
(bad)
jmp
cs
jle
sub
pusha
lods
cmp
(bad)
pop
or
xchg
add
or
inc
ins
jmp
clc
jge
sbb
rcr
mov
gs
mov
mov
push
jbe
int3
or
ss
xchg
fs
scas
repnz
push
sahf
xchg
call
cmp
std
cmps
scas
mov
sbb
retf
rol
hlt
lds
popf
es
pop
cmp
setle
mov
retf
mov
lds
jmp
push
call
jmp
repnz
cmp
jns
or
test
xor
pusha
loope
xchg
and
jp
cmp
xchg
jmp
xor
add
fld
call
pop
sbb
and
pop
mov
jmp
add
cld
fdivp
cmp
push
mov
cs
cmp
sbb
add
aaa
xchg
jecxz
push
xor
sub
xchg
dec
jmp
int3
add
lods
cmps
lea
test
in
pop
jbe
not
(bad)
pop
mov
dec
shl
jo
adc
cld
pop
jae
(bad)
push
jmp
addr16
lods
xchg
xor
mov
mov
mov
stos
fcomip
sar
and
int
jbe
lods
jno
fcomi
cmp
inc
push
cmps
out
imul
cmps
stos
inc
lods
pop
imul
fild
les
sub
out
lods
pop
mov
jl
das
cmc
mov
mov
ins
jmp
movs
or
loop
outs
rcl
adc
fistp
push
cdq
cld
aad
mov
test
push
lock
out
popf
lods
test
adc
and
sbb
ret
inc
(bad)
loopne
data16
loope
add
pusha
or
bound
or
jbe
or
push
cli
mov
and
xlat
jmp
sbb
cmp
inc
and
sub
push
(bad)
cmc
icebp
fidivr
cmp
or
in
jne
mov
jl
hlt
inc
mov
cmp
sub
in
not
mov
add
cli
sub
rcr
arpl
cmp
pop
mov
dec
(bad)
sbb
clc
cwde
bound
jg
xor
mov
mov
and
shr
loope
adc
fidiv
pop
push
fist
bound
xor
xchg
test
ret
std
xchg
push
pop
es
xacquire
not
sahf
nop
cmp
rcl
out
sub
add
adc
mov
or
shr
retf
sbb
add
mov
call
out
out
pmullw
jge
in
out
sub
popa
imul
sub
cld
sbb
test
add
pop
bound
out
sub
cmp
into
mov
ss
ror
or
pop
sahf
popf
mov
lds
pusha
jp
mov
add
fdivr
out
enter
push
jp
mov
mov
sbb
pop
pop
ret
adc
pushf
fdiv
sahf
inc
gs
jmp
mov
aaa
cmp
out
call
fwait
stos
loopne
test
sti
ficom
sbb
shl
mov
cmc
xchg
addr16
loope
pop
pop
sar
ins
dec
jecxz
adc
add
aad
adc
mov
cdq
cmps
adc
lods
sub
jle
out
test
loop
push
sbb
(bad)
mov
sub
out
std
mov
fdiv
shl
dec
scas
(bad)
jecxz
lods
and
xor
cmp
jns
sbb
stos
xchg
push
dec
mov
cmc
in
mov
pop
push
inc
and
gs
sub
jbe
es
push
and
pop
push
gs
mov
sbb
loop
gs
retf
daa
popf
add
(bad)
scas
add
sbb
(bad)
cmc
xor
jge
push
mov
jmp
pop
ffree
mov
xchg
jae
aad
lds
fcomi
popf
jne
je
clc
test
loopne
mov
inc
mov
dec
stos
and
add
ja
mov
or
xor
ins
pop
bound
sub
mov
push
push
retf
psubb
das
aaa
xor
xor
(bad)
push
sbb
mov
aaa
sub
aas
ja
or
(bad)
iret
leave
movs
adc
and
sub
mov
fwait
cmps
push
mov
add
mov
mov
aam
and
ret
xchg
dec
scas
daa
gs
xchg
adc
add
dec
xchg
aad
add
gs
sar
pop
(bad)
retf
push
or
iret
clc
xor
ins
(bad)
cmp
cmp
mov
jge
das
mov
in
fidivr
addr16
sub
es
push
lds
sar
sar
inc
aad
jle
mov
inc
mov
movs
mov
test
in
pop
adc
dec
or
stc
ss
mov
and
sub
adc
mov
and
sub
out
cdq
out
or
mov
je
call
inc
retf
clc
pop
arpl
cli
sub
(bad)
push
xchg
clc
pop
or
fabs
pop
cbw
inc
sbb
jne
jnp
xchg
cmp
test
mov
add
add
cwde
sar
loop
(bad)
lods
sbb
mov
jns
jp
push
hlt
cwde
mov
push
or
add
sbb
jge
inc
das
outs
fcmovnu
xchg
xor
cmp
test
add
sbb
jge
sbb
jle
shr
or
addr16
xchg
xchg
mov
jnp
inc
jae
imul
pop
cmp
or
dec
into
xlat
mov
aad
push
sub
inc
jae
pop
test
mov
xchg
mov
out
pop
les
test
cmps
mov
loope
es
inc
ja
(bad)
dec
dec
addr16
cmps
aad
mov
cmc
popa
addr16
(bad)
adc
je
adc
inc
add
shl
or
inc
push
xchg
ror
call
inc
push
jnp
add
loope
add
popa
lods
inc
test
and
cmp
aad
sbb
jge
pop
sbb
adc
jecxz
xor
push
ds
inc
and
sar
inc
sbb
mov
push
push
add
test
ds
cld
mov
movs
nop
retf
out
xor
mov
or
outs
sub
scas
mov
cmp
arpl
stos
mov
mov
scas
stos
pop
sub
fisub
test
shl
push
das
daa
lds
mov
or
test
xchg
push
lods
lods
adc
sub
jno
xchg
into
cmp
lods
sbb
push
addr16
in
jns
mul
xchg
aam
and
cmp
sub
push
loop
movs
sub
test
dec
pusha
mov
les
(bad)
inc
mov
aam
fild
jl
mov
fisub
xor
lea
cs
pop
(bad)
jnp
mov
mov
and
ret
or
dec
push
clc
das
push
iret
out
mov
(bad)
ja
repnz
sbb
mov
fist
mov
mov
ds
inc
mov
aad
stc
jns
div
in
sbb
sub
xchg
mov
std
jp
movs
aas
inc
jmp
xor
adc
jge
movs
aam
jns
lods
sbb
mov
in
adc
cmp
jb
sbb
xor
push
bound
test
shr
xor
add
in
cli
sbb
inc
inc
das
jle
and
and
aam
mov
dec
shl
mov
scas
cmc
test
inc
xchg
icebp
adc
icebp
cmp
push
add
sti
call
cli
sub
cmp
loop
dec
xor
cmps
jmp
cmp
and
xchg
xchg
scas
mov
adc
xchg
loopne
pavgb
ins
or
ins
clc
ret
lods
mov
icebp
mov
push
fdivr
xchg
xor
or
test
xchg
test
fild
enter
jl
(bad)
imul
jge
xchg
shl
inc
ds
adc
ins
dec
pop
xchg
sbb
jbe
mov
mov
inc
mov
xchg
xor
das
push
in
and
dec
leave
test
std
sub
sbb
push
jns
add
ficomp
pusha
inc
fisub
call
call
mov
push
mov
ss
adc
nop
fimul
std
and
jb
stc
jno
cs
cli
pusha
xor
push
int
call
push
or
mov
movs
fsubr
aad
dec
fdivr
mov
mov
call
mov
cmp
sbb
fsubr
push
jae
or
cmp
jp
test
sbb
(bad)
fldcw
push
add
cmc
dec
cvttps2pi
adc
in
neg
popa
outs
cmp
push
or
mov
add
(bad)
push
or
retf
sbb
dec
fld
neg
frstor
loop
push
mov
out
mov
movs
(bad)
dec
inc
add
ins
arpl
or
retf
xor
cmp
cdq
out
pop
fs
jae
jne
mov
retf
cwde
in
push
mov
sbb
out
xor
jns
sti
push
mov
fisttp
stc
dec
jmp
test
or
popf
loop
outs
ja
sbb
adc
aad
cmps
retf
xor
sar
mov
mov
les
mov
push
test
mov
jae
mov
(bad)
repnz
aas
gs
mov
inc
lock
cs
test
adc
cli
dec
call
ret
cmp
jbe
sbb
or
mov
or
fild
inc
dec
fdivp
mov
adc
fs
call
push
cld
add
imul
inc
(bad)
mov
arpl
lods
add
fisttp
iret
push
adc
inc
enter
int3
add
mov
sbb
cmp
push
mov
test
and
or
int3
mov
pop
aam
call
push
in
pop
sub
cmp
test
push
or
push
mov
nop
jmp
inc
jp
movs
dec
mov
xchg
adc
(bad)
das
int
adc
xor
fldenv
cdq
xor
mov
sbb
xchg
mul
jmp
jg
mov
cli
das
sbb
add
jno
cmp
movs
and
inc
dec
fimul
sbb
xor
popa
mov
shl
test
xlat
jb
jp
push
mov
test
push
sbb
aas
rcr
repz
movs
add
adc
xor
xor
push
sub
ss
test
lods
call
and
push
xor
or
adc
xchg
add
bound
add
or
daa
test
loopne
inc
ja
adc
into
call
pop
jle
sbb
lods
fucomip
mov
sbb
ds
and
aas
cmps
lods
pop
push
retf
jne
movs
push
pop
xchg
xlat
sub
nop
mov
sbb
fld
mov
mov
mov
or
pop
stos
ror
in
pop
jae
addr16
mov
add
mov
jmp
pop
jl
lods
add
push
xlat
aas
scas
imul
scas
outs
fld
mov
dec
push
(bad)
or
stos
push
cs
sub
and
push
cmp
pop
fdiv
lods
jmp
ss
adc
fld
push
(bad)
fcmovne
cmp
mov
jmp
push
call
xor
sub
les
pop
rcr
das
push
jne
jnp
rol
mov
icebp
bndldx
jmp
jno
and
add
dec
jmp
faddp
js
mov
push
lahf
xor
out
fisubr
jb
adc
jmp
lods
or
gs
push
and
push
jecxz
sbb
sbb
(bad)
in
dec
mov
and
mov
pop
(bad)
popa
add
cmps
jo
mov
lock
retf
leave
popf
jecxz
test
xchg
jl
xchg
xor
mov
call
scas
cmps
xchg
push
push
out
dec
or
int
mov
push
jg
mov
(bad)
aaa
js
test
mov
sbb
xor
xor
(bad)
imul
mov
mov
jne
cld
and
mov
in
mov
sbb
(bad)
call
dec
je
shl
xor
int3
pop
jo
aaa
mov
push
scas
or
ins
cli
test
sub
or
or
push
retf
js
addr16
in
dec
jl
dec
rol
popf
cld
ror
dec
repz
retf
xor
shl
pop
adc
jb
clc
jne
int
pop
xchg
arpl
das
cmp
or
call
lea
dec
sbb
cmp
adc
sbb
mov
inc
sub
popa
sbb
(bad)
dec
sbb
popf
aam
or
jmp
fadd
popf
add
out
frstpm(287
popa
mov
cmp
sub
sub
xor
ret
arpl
dec
dec
cmp
shr
jne
add
in
dec
mov
dec
jp
shl
ja
mov
(bad)
loope
popf
jne
mov
xchg
ja
test
aad
sbb
dec
mov
scas
movs
sbb
jbe
mov
sub
rcr
xor
sbb
adc
inc
push
mov
push
pop
and
int3
inc
repnz
fs
js
xlat
cwde
push
pop
cmps
jnp
dec
aas
push
xchg
mov
dec
mov
and
push
retf
cmc
and
xor
daa
dec
inc
imul
add
nop
push
jp
or
mov
repnz
and
enter
mov
mov
mov
ror
and
dec
jmp
push
or
gs
rep
(bad)
scas
push
xor
sbb
bound
sub
jle
xchg
pop
nop
cmp
cs
aaa
cwde
arpl
push
xlat
mov
scas
leave
std
(bad)
into
aam
adc
pop
mov
push
outs
mov
mov
and
cdq
sub
mov
lods
(bad)
mov
loop
push
sub
fcom
add
in
jns
xor
cmc
xchg
xlat
or
lods
and
rol
or
fld
jo
(bad)
lods
test
adc
xchg
sbb
push
fld
ds
int3
pop
popf
jg
inc
rcl
js
fwait
loop
aaa
dec
ds
or
loop
xchg
stos
in
mov
(bad)
retf
(bad)
fcom
nop
pop
out
jne
adc
lock
lods
sti
shl
(bad)
push
xor
push
hlt
push
pop
call
test
inc
push
sub
xchg
dec
pop
mov
and
cmp
js
(bad)
inc
lahf
fs
push
je
cdq
mov
lea
xchg
push
jmp
jns
add
cmp
pop
fwait
ins
stos
jecxz
xor
int
test
in
loop
and
aaa
mov
test
push
sub
sub
push
cli
xchg
mov
inc
pop
push
loop
sub
or
outs
lods
jle
gs
mov
push
addr16
push
push
arpl
pop
dec
inc
lock
push
cmp
push
adc
int
pop
mov
xlat
cmp
adc
sahf
lock
mov
pop
or
loopne
sar
push
pop
inc
les
mov
xor
ss
mov
fisttp
shl
push
or
into
xchg
cmp
push
aas
or
or
adc
hlt
sub
lds
cmp
cmp
fs
xchg
ror
dec
xlat
in
fs
scas
test
or
pop
add
cli
lods
sbb
xchg
fnstcw
push
adc
retf
outs
inc
mov
mov
mov
pop
pop
jp
scas
daa
sbb
test
scas
cli
int
jmp
je
and
fbld
sbb
xchg
inc
fwait
sti
dec
je
scas
gs
fild
pop
or
inc
jmp
add
mov
shl
ret
jmp
fs
sbb
xchg
jae
test
lods
and
pop
fstp
(bad)
fistp
ja
outs
inc
outs
fisttp
jne
mov
mov
popf
je
mov
fst
xor
xor
stos
xchg
pop
(bad)
clc
mov
dec
xchg
test
aas
mov
sbb
sbb
stos
pop
cwde
push
sub
fwait
pop
jae
jmp
mov
add
dec
repz
outs
aas
cmp
ror
out
push
repnz
cmp
sbb
xchg
push
and
cli
mov
adc
fst
scas
test
iret
sbb
sahf
mov
xor
retf
adc
jmp
scas
leave
shr
add
push
fwait
jp
dec
cmc
adc
cdq
or
rdmsr
loopne
cmps
mov
xchg
adc
push
iret
ret
fist
xchg
or
jno
fdiv
inc
(bad)
jmp
push
inc
imul
icebp
xor
jbe
jl
or
mov
xchg
mov
or
rol
imul
jae
leave
pop
lods
jle
jmp
push
in
ss
(bad)
cmp
data16
mov
fwait
jb
sub
and
mov
add
dec
jb
adc
xor
xor
adc
cs
pop
lds
mov
ins
mul
mov
out
in
sbb
lea
sti
sub
mov
in
inc
in
imul
xor
push
pop
scas
clc
sar
out
je
mov
iret
pop
push
inc
dec
cmp
adc
cwde
sbb
and
inc
xchg
or
inc
aam
inc
add
add
push
aad
sub
jmp
in
les
in
xchg
adc
ds
jb
js
loopne
mov
(bad)
adc
xor
shr
and
mov
loop
inc
jne
xchg
mov
and
lods
mov
dec
inc
pushf
repz
xchg
inc
stos
inc
cmp
push
xchg
call
lods
loopne
mov
clc
fstp
fs
sbb
in
repz
sbb
lods
ror
push
dec
div
aas
fdiv
sub
movs
jmp
add
sub
lea
xchg
je
imul
(bad)
add
ins
lods
or
jbe
inc
jnp
call
int
pusha
jmp
cmps
xchg
pushf
movs
cmps
rol
xchg
loope
(bad)
daa
pop
arpl
mov
std
xchg
mov
and
je
and
pop
imul
jg
dec
jno
xchg
cmp
cmp
xchg
mov
mov
mov
rol
stc
popf
imul
jecxz
out
xchg
cld
arpl
mov
adc
xchg
and
dec
sbb
retf
out
add
mov
pushf
(bad)
sbb
mov
inc
jo
(bad)
pop
mov
jmp
adc
clc
scas
xchg
mov
sub
xchg
test
pusha
mov
inc
rcr
dec
rol
xchg
cmp
mov
xchg
in
and
sbb
movs
test
clc
xchg
das
push
adc
add
movs
pop
sub
idiv
cld
pop
sbb
jmp
add
in
mov
mov
dec
retf
pop
test
retf
adc
jbe
mov
inc
ds
adc
mov
pop
in
cmp
jmp
jbe
in
sbb
fidivr
xchg
mov
retf
in
push
or
neg
cli
js
(bad)
rcl
adc
repnz
fwait
(bad)
push
ret
movs
jmp
pandn
xchg
in
and
or
mov
xchg
xor
pop
push
imul
sub
dec
jmp
imul
dec
cmc
loop
enter
push
xor
repnz
dec
in
movs
xor
gs
cmc
or
pop
mov
mov
pop
mov
lods
dec
stos
ret
sbb
jp
fnstenv
out
addr16
jb
mov
jl
in
loopne
dec
and
out
(bad)
jle
push
push
mov
push
adc
dec
test
movs
fadd
mov
lods
xchg
ror
sar
xor
cmps
ss
outs
jecxz
mov
aas
cmps
inc
jg
bound
pop
sti
pop
pop
pop
add
jns
out
push
xchg
dec
ffreep
xor
and
mov
dec
jge
lods
dec
popf
fnstenv
nop
psllq
mov
ins
and
imul
adc
or
shl
dec
jmp
add
cmps
enter
add
sub
sub
pop
push
cmp
in
xor
(bad)
pop
push
mov
aas
dec
push
sub
cmp
je
out
sbb
or
stc
inc
call
pop
mov
cdq
or
nop
call
cmp
test
lahf
das
xor
mov
ins
push
outs
xor
cmps
(bad)
retf
cmp
push
xchg
lds
mov
and
hlt
push
rol
js
mov
jl
and
cmps
std
sub
in
push
or
push
lahf
dec
pusha
in
and
inc
dec
aas
cwde
inc
push
fisttp
jp
sbb
mov
and
(bad)
fidiv
in
mov
(bad)
xlat
(bad)
jle
js
scas
inc
test
clc
shl
push
ret
and
xor
xchg
or
jecxz
add
jl
mov
inc
pinsrw
shl
jo
xor
repz
clc
push
or
xchg
xchg
out
ret
mov
sub
gs
addr16
dec
or
push
mov
mov
icebp
icebp
xchg
sbb
icebp
push
retf
mov
ins
sti
mov
mov
pop
cld
push
outs
out
jl
inc
mov
loopne
and
dec
(bad)
cmp
cmc
xchg
push
jmp
test
pop
stos
push
xlat
jbe
and
leave
sar
jne
and
xor
push
lods
mov
add
mov
icebp
xor
cs
mov
inc
mov
movs
pushf
xor
push
jmp
add
xchg
xor
dec
in
inc
xchg
and
xchg
dec
stc
pop
cmp
mov
jno
mov
push
cld
ret
inc
test
sub
out
ret
or
push
sbb
rol
mov
daa
lea
sub
sar
call
div
in
dec
or
nop
bound
fsubr
sahf
sbb
cmovp
fstp
sti
push
or
aad
cmp
ins
sbb
fild
loopne
xchg
retf
and
pop
xchg
mov
call
retf
imul
mov
inc
add
cmp
add
fsubrp
cs
test
pop
iret
mov
icebp
jno
mov
nop
call
push
ss
inc
push
ins
int
mov
xor
hlt
pop
dec
cli
ins
(bad)
ins
popf
xor
nop
mov
pop
mov
retf
jecxz
adc
pop
movs
stc
jmp
rcl
stos
and
dec
dec
cmps
icebp
add
xchg
xchg
sti
ins
jmp
jle
loopne
fistp
aam
mov
adc
test
mov
push
push
(bad)
repz
xchg
(bad)
mov
out
(bad)
inc
xor
cmps
mov
pop
aaa
jp
std
mov
lea
mov
jmp
cdq
ret
out
jb
sub
add
icebp
fmul
add
rcl
lahf
mov
cmp
inc
mov
loope
cdq
push
inc
aam
arpl
jmp
mov
inc
inc
mov
sbb
outs
pop
(bad)
mov
ins
retf
lods
pop
out
stos
mov
add
leave
sbb
cmp
outs
in
loopne
push
sub
adc
xor
xlat
mov
inc
(bad)
out
pop
mov
mov
push
stos
into
gs
push
xor
push
inc
sbb
enter
adc
mov
xlat
push
mov
xchg
push
adc
xchg
add
mov
scas
je
mov
xor
jb
iret
inc
pop
cmc
out
aas
repz
mov
and
jnp
jle
push
mov
xchg
dec
sbb
adc
loope
test
dec
sti
ret
xor
fidivr
xchg
inc
mov
sbb
imul
cmps
mov
vpmullw
(bad)
cmp
ins
add
add
nop
jp
adc
int
cmp
imul
retf
cld
or
push
dec
push
pop
or
adc
sub
push
js
xchg
xchg
vcvtss2usi
icebp
(bad)
mov
jns
arpl
push
jg
dec
mov
and
dec
fistp
repz
inc
js
sub
sbb
jb
xchg
icebp
test
fcomp
xchg
fcmove
vmptrst
hlt
pop
adc
popa
fcom
stos
cs
call
nop
dec
pop
mov
mov
mov
jp
xchg
fistp
cmp
jne
mov
ja
xor
mov
data16
push
push
fwait
repz
mov
outs
jbe
xchg
stos
jo
sub
mov
lea
loopne
(bad)
repz
inc
cli
fisttp
int
shl
movs
rcr
movnti
call
or
cmp
cld
pop
es
cmps
loop
int3
les
ja
mov
pop
add
and
push
dec
out
mov
cmp
and
rep
inc
add
cmps
jmp
jbe
jl
adc
xor
mov
and
pop
dec
(bad)
sub
inc
xchg
or
test
or
test
pop
cmc
cmp
sub
jmp
dec
mov
cmp
int
and
push
cmp
retf
jle
pop
push
call
into
add
mov
stos
xor
mov
aam
ds
mov
push
call
cmp
inc
imul
cmps
pop
(bad)
fprem
fcom
mov
add
xchg
movs
jnp
ins
mov
add
cmp
mul
movs
jl
lods
call
inc
push
add
cmp
inc
stos
dec
cli
out
add
in
and
xor
mov
sub
out
icebp
lods
ss
dec
mov
mov
mov
icebp
test
inc
and
xor
adc
shl
jns
add
xor
xor
popa
xchg
dec
repnz
adc
jae
xlat
pop
jg
jmp
inc
std
cmp
dec
test
cli
fcmovnb
push
cmp
add
jecxz
dec
or
cmp
jo
dec
aaa
or
sub
push
repnz
push
in
dec
mov
dec
pop
and
push
div
fmul
mov
xor
adc
aam
mov
call
adc
or
outs
jbe
test
add
push
cmp
sar
pop
out
xlat
jmp
xlat
test
mov
aas
pop
mov
cmps
aaa
and
jmp
pop
jb
cwde
xor
sbb
add
(bad)
inc
ins
sbb
dec
into
(bad)
push
test
(bad)
aam
mov
mov
mov
jp
retf
inc
mov
mov
or
jmp
out
fdiv
(bad)
mov
loop
cwde
dec
mov
jb
iret
fldcw
nop
mov
jl
(bad)
ds
mov
or
cmp
mov
jl
mov
sbb
or
popa
call
(bad)
adc
pushf
and
jg
mov
jne
dec
dec
or
test
jmp
sbb
mov
cmp
mov
cdq
pop
inc
mov
xchg
xor
jmp
fcomp
jno
repz
sti
sbb
cmc
fst
adc
cmps
dec
adc
push
adc
stos
call
mov
hlt
je
(bad)
repnz
pop
inc
call
stos
popa
retf
lea
mov
and
inc
xor
pop
add
inc
sahf
scas
or
cwde
(bad)
je
shr
push
jne
cli
pop
push
icebp
in
dec
pop
out
cwde
pushf
fwait
push
inc
nop
push
scas
popa
test
lds
test
lahf
lods
xchg
aaa
loopne
lahf
add
xlat
ins
rol
dec
jbe
pop
push
xor
sub
jno
in
(bad)
pusha
xchg
jmp
int3
pop
icebp
xchg
mov
cmps
movs
mov
jae
retf
es
mov
test
mov
adc
pop
retf
mov
pop
fisttp
add
lods
lea
out
sti
inc
mov
sub
pop
arpl
jnp
push
or
scas
or
cdq
pop
adc
sub
xor
out
into
aam
dec
push
fild
xor
das
imul
bound
popa
popa
mov
and
mov
(bad)
std
xchg
call
repz
mov
jb
sub
pop
mov
clc
fsub
ins
shl
pop
ins
fldenv
cld
dec
mov
dec
add
or
pop
mov
pushf
loope
xchg
(bad)
mov
or
les
(bad)
stos
mov
jmp
scas
push
push
push
jecxz
shl
push
not
sbb
popf
fild
es
push
pmaddwd
add
out
fdivr
std
xor
fnstenv
sub
and
push
jns
pushf
mov
and
xchg
in
rcl
cmp
push
adc
stos
mov
(bad)
xchg
add
loop
sub
hlt
adc
mov
inc
addr16
ret
jno
pop
push
or
add
cmps
sub
jns
ffree
mov
idiv
sbb
retf
xchg
mov
xchg
xchg
xchg
cmp
mov
(bad)
jle
mov
add
test
jge
or
pop
or
jecxz
fdiv
mov
pop
in
ror
sbb
inc
mov
jge
or
pop
dec
imul
popf
jp
jmp
sbb
fst
mov
push
call
jno
jb
xor
out
dec
sub
ja
mov
mov
sbb
and
enter
cmp
jmp
and
sub
mov
rol
pop
adc
pusha
jecxz
pop
scas
lods
pusha
movs
jle
mov
pop
sub
push
and
and
sbb
hlt
sbb
push
xchg
add
inc
jmp
push
sub
mov
push
data16
iret
jle
mov
es
push
test
ins
mov
lahf
fimul
pop
test
or
imul
ja
sub
cmc
cmp
inc
mov
sbb
mov
pushf
mov
cvtps2pi
stos
or
or
scas
adc
cmp
mov
test
jge
fldcw
xchg
sahf
or
jp
out
stos
ins
xchg
and
fisttp
dec
arpl
dec
and
ja
adc
fcomi
test
(bad)
in
daa
lods
(bad)
pusha
mov
push
pop
loope
repnz
call
xchg
xor
aad
pop
inc
retf
xchg
cdq
inc
adc
or
rcr
nop
iret
inc
mov
shr
inc
jbe
cmps
add
sub
clc
jecxz
dec
inc
adc
or
and
cmp
mov
adc
out
sub
ins
in
in
sub
push
jmp
push
sar
inc
ja
data16
inc
inc
push
add
(bad)
pop
push
out
push
push
mov
xor
aad
push
and
repnz
inc
outs
mov
pop
jmp
sbb
cli
addr16
repz
jl
xor
jp
xchg
cdq
cmc
jbe
cs
mov
dec
jno
adc
inc
mov
jmp
in
xchg
cs
mov
imul
xorps
int3
fs
fwait
add
sub
add
jb
jae
aam
cmp
aaa
sbb
push
lahf
fcom
push
test
add
rcl
inc
sbb
push
sub
out
mov
cld
mov
ret
inc
push
xor
sub
push
push
call
int
in
bound
mov
lahf
out
sub
setno
mov
inc
xchg
xchg
bswap
mov
ds
inc
(bad)
movs
fadd
int
xor
add
es
sub
bound
hlt
adc
sub
outs
out
addr16
mov
xchg
fnstcw
repz
mov
cmovb
hlt
ss
add
hlt
enter
cmp
cmp
aaa
jnp
lock
dec
mov
cli
mov
jle
pop
lods
int3
fs
fstp
inc
push
rcr
pushf
pop
pop
shl
or
and
adc
mov
lods
adc
mov
pushf
jae
fidivr
and
jbe
(bad)
mov
cwde
rcl
xchg
dec
dec
(bad)
or
pop
jae
mov
mov
and
int
jmp
or
or
je
sub
fucomi
fdiv
stos
jnp
std
adc
jne
mov
xchg
cs
jle
retf
cmps
fmulp
xchg
gs
retf
test
jmp
lods
(bad)
cmp
cdq
addr16
lods
add
data16
scas
jae
pop
scas
mov
shr
xor
pusha
in
adc
in
pop
add
fadd
and
es
movs
bound
js
cmp
outs
sar
in
sbb
sub
les
or
push
gs
(bad)
lahf
shl
rcr
ret
cmc
mov
sbb
fcom
fisttp
fld
mov
in
(bad)
iret
xchg
or
ja
adc
xor
int3
xor
inc
shl
mov
and
and
pushf
in
cwde
jb
jns
cmp
jo
fcmovne
imul
(bad)
pop
popa
ror
sub
push
outs
test
pop
(bad)
and
pop
sub
push
mov
jg
das
add
xor
push
mov
xchg
jmp
loop
cmp
fidiv
rcr
xor
in
xchg
je
sti
cld
out
pop
xchg
rol
pop
jle
inc
jo
repnz
xchg
out
fld
out
push
jbe
xor
pusha
or
cmp
sub
push
push
pop
stos
pop
push
cmp
push
sbb
loopne
(bad)
(bad)
fs
repz
push
sbb
fwait
sbb
xor
jl
push
cmps
iret
(bad)
jmp
add
mov
gs
mov
cmp
icebp
pop
sbb
cli
xor
cs
hlt
pop
mov
retf
imul
sti
adc
push
cmps
rcl
jp
test
inc
outs
adc
jbe
std
mov
ds
inc
push
pop
jno
pop
jne
inc
mov
jmp
scas
jg
inc
fwait
add
ins
cwde
or
add
add
xlat
pusha
cmp
addr16
push
dec
mov
jb
ds
loope
fisub
and
fwait
jne
fld
stc
cwde
push
mov
mov
xor
fst
inc
mov
scas
stos
and
cmp
add
jnp
pop
je
(bad)
or
aaa
mov
pop
jno
cmp
leave
pop
sub
or
jmp
xor
mov
movs
scas
sub
cld
not
adc
add
mov
xchg
or
jl
clc
outs
js
adc
cmovb
sar
retf
test
inc
arpl
dec
sbb
push
mov
xchg
out
out
xchg
mov
jmp
aam
(bad)
dec
jnp
add
sar
inc
jmp
das
aad
cdq
shl
jl
or
fidiv
and
xchg
adc
(bad)
scas
xor
or
add
fidiv
dec
rcl
dec
imul
adc
mov
or
mov
fstp
pop
mov
js
sub
fincstp
fsub
fmul
jbe
loop
add
mov
pop
mov
(bad)
pop
mul
sbb
rol
ins
movs
daa
sbb
cmp
inc
pop
mov
inc
cld
inc
iret
mov
repz
cmp
adc
sbb
aas
les
in
retf
lods
std
xor
sub
cmp
adc
mov
push
sti
add
inc
in
adc
call
dec
mov
nop
push
inc
repnz
dec
shr
test
enter
mov
or
lahf
xor
lods
sbb
cmp
mov
stc
fwait
int
push
mov
out
sbb
sti
xor
fstp
xchg
dec
test
stc
cmp
dec
jl
sbb
add
sbb
and
adc
cli
sbb
in
icebp
mov
mov
cmps
mov
pop
sbb
lock
sbb
xchg
int3
or
lods
sub
stc
pop
jne
lds
pop
mov
inc
into
fld
push
push
pushf
mov
mov
daa
inc
imul
cmp
add
enter
xchg
inc
mov
mov
fidiv
stos
test
enter
add
loopne
jmp
jo
loop
sub
pop
bound
mov
add
in
arpl
mov
sbb
repnz
into
int3
shl
rcl
mov
call
xor
ret
neg
outs
inc
out
add
dec
lds
int3
cmp
push
cmp
(bad)
ss
movs
adc
ja
(bad)
retf
jb
int3
pushf
ror
fldenv
ds
fild
xchg
jle
icebp
xor
xor
out
movs
inc
fcomp
mov
sbb
into
sti
cmc
xor
stc
movmskps
(bad)
and
or
dec
fsub
xor
mov
adc
cmp
pushf
jae
add
leave
push
leave
dec
std
push
jae
stos
push
aam
lds
sbb
jmp
xor
frstor
popa
fstp
and
fsub
out
xor
sar
loop
jbe
icebp
mul
jge
pusha
cmp
add
mul
out
jmp
sbb
jbe
(bad)
out
mov
sbb
ds
js
and
mov
push
sti
cmp
xchg
jmp
jns
gs
mov
xor
mov
mov
outs
loopne
pusha
leave
jge
add
xchg
mov
clc
lods
in
lahf
inc
call
push
(bad)
jge
xchg
or
mov
xor
xchg
jbe
pusha
fldenv
pop
jl
cmp
xchg
xchg
pop
mov
ins
out
es
adc
push
pop
xor
adc
cmps
ret
mov
jecxz
imul
xchg
pushf
pushf
cmp
outs
sbb
adc
into
push
fsubr
imul
or
jg
push
ss
push
push
lods
inc
in
dec
ret
add
test
mov
(bad)
xchg
push
add
daa
jl
mov
or
sbb
stos
ins
sbb
xor
daa
mov
loopne
rcl
xchg
mov
inc
add
out
fsubr
xchg
das
jnp
js
cmp
push
cdq
ins
and
and
sub
pop
add
jle
int
loopne
mov
fidiv
shl
lea
daa
mov
add
add
mul
cmps
in
or
adc
fidivr
xchg
pop
lods
imul
std
leave
add
push
pop
out
cmps
adc
adc
ins
mov
imul
and
push
sbb
call
mov
outs
popf
push
int
lods
(bad)
stos
sbb
pop
adc
ins
push
sub
into
ins
sub
sbb
pop
sub
and
pop
mov
aad
jle
int
push
pushf
xchg
or
(bad)
ins
and
sub
jg
jp
mov
and
add
jmp
popf
cmps
jmp
iret
loopne
ja
sub
or
xchg
pop
clc
mov
fwait
fwait
daa
and
cmps
gs
dec
fmulp
lods
aam
icebp
mov
(bad)
jmp
push
push
in
inc
out
lea
pop
stc
mov
sbb
popf
sbb
fidivr
push
test
xor
dec
cmp
add
jecxz
push
cmovs
add
shr
cs
daa
inc
pop
icebp
inc
loopne
jg
es
movs
xor
or
mov
mov
xchg
fld
fsub
or
inc
push
pop
(bad)
(bad)
loopne
inc
ret
or
arpl
dec
sub
shl
fidivr
fstp
cmps
mov
push
mov
xchg
mov
mov
push
cmp
mov
dec
push
mov
iret
inc
push
mov
mov
and
pop
arpl
(bad)
repz
sub
loopne
push
jg
lea
pusha
fld
iret
jo
sub
rcl
or
mov
mov
sbb
sbb
add
push
fs
inc
cmp
xchg
daa
pop
pop
mov
ffree
mov
mov
es
rcr
sub
or
fdivr
push
add
xor
in
adc
mov
jle
or
loop
retf
adc
stos
jb
mov
in
inc
imul
aas
or
int3
mov
test
pop
mov
dec
les
ja
sar
adc
mov
sub
shl
ins
xor
jg
ror
fistp
repz
cmps
or
cs
fisttp
jae
xchg
bound
data16
les
push
inc
and
cs
push
xchg
neg
push
movs
repz
lea
and
loope
enter
lahf
sub
push
or
adc
push
add
sub
lea
lods
gs
sbb
or
int
xchg
ret
cld
cs
arpl
fdivr
jb
adc
xchg
push
test
popa
aas
ror
in
in
adc
adc
scas
out
xor
cdq
cmp
or
xchg
int
ins
mov
inc
push
xchg
rcr
add
sbb
lea
jle
daa
pop
jbe
push
cld
jmp
aad
icebp
lock
(bad)
xor
cmp
sbb
xbegin
mov
push
shl
in
jmp
hlt
mov
xor
fild
jne
inc
retf
retf
mov
push
ss
xchg
in
inc
mov
rcl
push
ja
jmp
popf
pusha
cmps
adc
jno
sbb
mov
inc
mov
rol
arpl
pop
push
xchg
addr16
(bad)
pop
cmp
stc
loop
aas
dec
inc
pop
xchg
ins
(bad)
in
cmp
cmp
push
mov
jb
or
outs
mov
push
jg
pop
fistp
retf
scas
outs
scas
and
ja
and
cmps
pop
adc
sbb
mov
mov
jbe
leave
xchg
xor
stos
retf
jne
imul
push
inc
xchg
sahf
(bad)
cli
xor
xor
jbe
lea
movs
xchg
cld
loopne
loopne
inc
push
retf
sbb
mov
jecxz
call
jb
xchg
inc
pusha
outs
xor
pop
(bad)
(bad)
bound
sbb
cs
mov
test
mov
fdiv
js
mov
push
inc
int3
and
sbb
inc
ret
and
mov
out
or
out
adc
adc
jo
add
mov
jb
cs
test
xor
jbe
jne
pop
xlat
dec
dec
js
fnsave
mov
sbb
(bad)
mov
fwait
je
mov
inc
je
(bad)
sub
or
arpl
and
addr16
sbb
cmp
hlt
sbb
popf
shr
mov
fst
aaa
jo
xchg
je
pop
dec
add
std
out
push
mov
bound
adc
and
xlat
mov
cld
ds
push
not
sbb
cdq
cdq
mov
bound
sub
push
dec
icebp
sbb
cmps
movs
shl
sub
std
in
movs
xor
jle
lea
test
xor
loop
mov
mov
mov
mov
retf
push
push
jbe
cmp
pop
dec
loop
(bad)
iret
movs
mov
outs
mov
mov
inc
out
pop
inc
adc
xor
imul
int
add
sub
or
lds
sti
inc
jp
imul
enter
pop
or
sub
sub
push
xlat
adc
cmp
or
jno
and
aam
and
call
push
outs
jbe
stc
cmp
inc
mov
or
mov
ja
add
movs
jge
and
imul
pop
push
inc
inc
and
test
push
pop
xchg
fidiv
dec
or
fbstp
test
pop
pop
fdivr
aam
sbb
into
(bad)
jmp
xlat
movs
jae
sub
jl
jo
adc
in
add
int3
and
fisubr
push
popa
or
popa
inc
inc
jl
(bad)
popa
cmp
push
into
nop
out
dec
add
mul
mov
jmp
je
int
js
mov
and
xchg
mov
dec
xor
jo
test
or
out
je
call
xor
popa
out
xor
or
mov
inc
into
pop
std
call
xor
lahf
add
fucomi
jae
pusha
mov
shl
les
ja
jecxz
push
bound
pusha
push
fstp
sbb
(bad)
fwait
outs
out
lahf
gs
push
jge
jl
mov
cmp
jbe
inc
ss
pop
jns
jo
jp
dec
push
outs
jle
adc
sbb
xor
adc
ins
push
jg
xor
dec
adc
xor
pop
and
or
sub
bound
pop
or
add
jp
sub
addr16
or
jb
add
pop
popa
jle
sub
or
(bad)
cmc
aam
inc
aas
cmp
pop
xor
and
aaa
aaa
jl
into
xlat
mov
add
push
and
es
ins
ss
retf
or
and
jae
cmp
add
jle
mov
dec
pop
cmp
aas
addr16
pusha
pop
gs
and
das
cmp
pusha
pop
gs
pusha
pop
imul
pop
dec
push
pop
gs
gs
adc
pusha
cdq
ins
jle
inc
and
push
imul
inc
sub
sbb
pusha
pop
gs
jae
gs
pusha
pop
inc
sub
pusha
inc
jbe
ins
jo
gs
daa
or
ins
pusha
pop
dec
ins
ins
pusha
test
pop
or
punpcklbw
jle
pusha
pop
gs
pusha
pop
gs
bound
je
jne
ins
ja
pusha
pop
test
jae
ins
popa
pop
gs
pusha
pop
gs
pusha
pop
ins
jle
pusha
jl
jle
jb
gs
pusha
pop
gs
ins
pusha
pop
jb
ins
pusha
pop
gs
gs
gs
pusha
pop
gs
pusha
pop
fs
pusha
pop
gs
bound
jle
pusha
pop
gs
pusha
pop
addr16
pusha
pop
gs
popa
pop
gs
pusha
push
or
pop
imul
lea
ins
xchg
jle
pusha
cmps
gs
ins
push
push
jg
popa
pop
and
arpl
popa
outs
gs
mov
pusha
pop
and
pop
icebp
jl
pusha
push
shr
pop
arpl
bound
js
sub
push
jle
pusha
ds
ins
pop
jecxz
pop
pusha
push
gs
jl
arpl
fs
data16
push
pop
push
jle
pusha
or
imul
pop
gs
imul
outs
gs
mov
jp
pusha
dec
pusha
pop
push
test
push
ret
gs
js
scas
pop
mov
pusha
mov
js
gs
outs
imul
jle
data16
ins
cmp
jle
pusha
arpl
pop
arpl
pop
outs
push
pop
arpl
and
jle
pusha
pushf
bound
pop
stos
jns
fs
movs
gs
pop
arpl
push
push
and
pusha
jle
cmp
pop
pop
ja
pop
gs
jle
imul
ins
jge
pusha
jmp
pop
gs
pusha
pop
gs
popa
pop
fs
pusha
pop
sbb
pop
pusha
jle
pusha
pop
gs
pusha
pop
dec
jg
pusha
dec
gs
bound
jg
pusha
fisub
jge
fs
pusha
pop
fs
mov
jle
pusha
pop
gs
gs
gs
arpl
arpl
pop
push
ins
popa
dec
imul
pop
js
imul
jg
pusha
pop
call
gs
jns
fs
pusha
cmp
ins
jge
ins
jle
pusha
frstor
rcr
jo
push
gs
ins
inc
pop
gs
lea
ins
push
inc
jle
pusha
lds
push
pop
aam
cmp
ins
gs
jle
popa
cmp
outs
ins
gs
mov
jl
pop
xchg
in
jp
popa
dec
repz
inc
cs
pusha
pop
gs
js
gs
ins
popa
pop
cmp
gs
rcr
jle
pusha
cmp
pop
je
nop
popa
fsub
ins
in
jge
jle
pusha
dec
ins
push
repz
fs
inc
pop
gs
jae
inc
jl
pusha
pop
gs
jle
push
popa
pop
test
pusha
pop
gs
gs
pop
aam
ins
pusha
mov
pop
and
inc
fs
jl
gs
pusha
sbb
outs
inc
pop
addr16
inc
pop
gs
jecxz
adc
popa
pop
gs
pusha
pop
gs
bound
data16
bound
pop
ins
pusha
pop
outs
ins
call
jg
pusha
rol
pusha
pop
fs
arpl
fs
enter
ins
pusha
pop
jge
ins
jae
popa
jle
inc
pop
gs
arpl
jl
pusha
pop
gs
js
gs
ins
fs
mov
pusha
pop
outs
jne
pop
loopne
imul
pop
jae
in
fsub
ins
inc
jg
jle
pusha
dec
gs
inc
pop
gs
jno
add
bound
cmps
dec
pusha
pop
gs
pusha
cld
pusha
sbb
pop
dec
pop
ins
pusha
pop
outs
ins
adc
jl
pusha
jmp
pop
jae
out
cli
addr16
sub
jle
pusha
dec
gs
imul
ins
jle
inc
pop
gs
inc
aam
jle
push
gs
pusha
pop
gs
pusha
aam
scas
outs
push
dec
pop
ins
pusha
pop
gs
in
pop
mov
adc
pop
arpl
pusha
dec
gs
xor
jle
pusha
pop
imul
pop
push
gs
pop
call
gs
pusha
pop
gs
js
fs
ins
outs
pop
aad
ins
pusha
pop
gs
ins
jmp
pusha
test
pop
hlt
jle
fs
outs
ins
pusha
pop
fs
arpl
jg
rcr
jle
pusha
out
data16
popa
pop
adc
gs
imul
jle
pop
gs
(bad)
pop
gs
pusha
jmp
js
pusha
pop
sbb
pop
addr16
gs
gs
rcr
ins
pusha
cmp
ins
popa
pop
les
pusha
pop
sbb
pop
addr16
gs
gs
rcr
outs
pusha
cld
pusha
ja
rcr
jle
pusha
in
imul
pusha
je
iret
ins
jae
push
jle
pusha
dec
gs
rcr
jle
pusha
in
gs
ins
jl
aam
jle
jns
iret
ins
jae
imul
ins
fs
jmp
jno
pop
lock
inc
pop
popa
jl
pusha
adc
iret
ins
fistp
jle
pusha
dec
gs
ins
rcr
jle
pusha
jne
ins
pop
pop
push
jge
popa
fs
inc
pop
or
cmp
ins
fs
ins
sbb
pusha
int
xor
aam
jle
fsub
ins
pop
pop
in
jle
pusha
dec
gs
ins
rcr
jle
pusha
pop
popa
scas
ins
stc
pop
aam
and
loopne
gs
int3
jle
pusha
push
fild
pop
jne
fsub
gs
ins
fstp
jnp
(bad)
in
ja
inc
pop
movs
jle
gs
mov
xor
pusha
add
outs
sbb
gs
push
and
pop
loopne
mov
dec
arpl
outs
mov
js
pusha
mov
pop
ins
jg
sbb
ins
sbb
jg
popa
fbld
outs
mov
mov
mov
imul
mov
pop
lahf
jl
pusha
mov
pop
aam
jle
xor
cmp
pop
fs
sbb
ins
rcr
jge
popa
xor
outs
dec
pop
sbb
fs
push
pop
sub
add
ins
cld
pop
jbe
and
bound
outs
fstp
jns
arpl
gs
push
pop
pop
jg
gs
aas
ins
rcr
jle
popa
and
jns
popa
sbb
(bad)
sub
fsub
gs
ins
rcr
jle
popa
in
lds
pop
aam
(bad)
pusha
xor
iret
ins
fistp
jg
pusha
out
pop
ins
rcr
jge
popa
in
gs
ins
jmp
pusha
je
or
jle
bound
pop
aad
inc
pusha
push
lea
pop
push
jl
popa
jae
inc
outs
rcr
push
bound
pop
mov
addr16
outs
dec
pop
push
jl
arpl
pop
and
gs
jle
pusha
inc
gs
ins
sub
jle
pusha
ds
ins
jge
push
jle
pusha
jno
pop
ins
adc
jle
pusha
jbe
cmp
pop
jle
inc
pusha
fisub
ins
and
out
push
pusha
sbb
ins
adc
jg
pusha
jbe
cmp
pop
scas
jle
pusha
cld
lods
ins
and
(bad)
jle
pusha
inc
(bad)
pop
or
pusha
jbe
cmp
pop
jbe
jo
sahf
gs
ins
xchg
pop
test
pusha
sbb
ins
jecxz
and
popa
jbe
cmp
pop
jbe
jo
jge
push
ins
and
inc
jg
pusha
inc
gs
dec
pop
and
popa
dec
arpl
pop
dec
jle
pusha
cmp
pop
in
inc
pusha
sbb
ins
dec
pop
and
popa
dec
arpl
pop
dec
jle
pusha
mov
pop
gs
pusha
sbb
outs
jae
js
sub
ins
jmp
pusha
icebp
imul
jg
popa
sbb
jbe
inc
jl
bound
addr16
rcr
jl
bound
add
arpl
jg
pop
pusha
jle
pusha
push
pop
sbb
pop
movs
ins
mov
jle
bound
pop
mov
pusha
pop
gs
bound
jle
pusha
pop
gs
addr16
addr16
pusha
push
gs
outs
pop
outs
jle
pusha
sub
pop
sub
mov
mov
pop
popa
(bad)
ins
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
ins
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
ins
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
push
bound
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
ins
pusha
pop
gs
pusha
push
gs
jns
fs
pusha
pop
gs
ins
pusha
pop
gs
pusha
pop
gs
pusha
pop
pop
jle
pusha
popa
jbe
ins
bound
jle
pusha
pop
gs
fs
arpl
pusha
pop
outs
ins
ins
pop
mov
gs
mov
pusha
inc
cmps
gs
pop
aaa
jg
pusha
mov
xor
adc
sub
adc
add
xor
jle
adc
or
or
xor
das
or
sub
sub
das
add
or
ins
xor
or
or
add
adc
or
adc
add
add
push
push
pop
add
add
push
jle
inc
jge
inc
and
cmp
adc
pop
pop
sub
sub
sub
sub
add
sbb
sub
sub
sub
add
cmp
sbb
xor
or
adc
add
inc
ss
or
pop
add
add
jae
push
sbb
sbb
xor
sub
sbb
sbb
cmp
or
or
adc
adc
aas
sbb
or
sbb
gs
adc
xor
push
add
cmp
or
(bad)
add
ins
and
adc
pop
adc
adc
adc
xor
add
or
add
or
cmp
sbb
and
add
sub
sub
pop
unpckhps
add
sbb
adc
add
or
or
or
wrmsr
adc
xor
xor
push
sbb
pop
jle
wrmsr
adc
xor
das
or
sub
sub
das
add
or
inc
and
adc
push
add
add
add
or
adc
xor
sbb
xor
or
add
adc
or
or
adc
adc
or
push
pusha
adc
pop
getsec
add
adc
add
adc
and
or
sbb
pop
xor
or
push
or
or
and
cmp
or
or
xor
add
add
or
cmp
jle
adc
pop
jle
aas
adc
or
push
add
or
add
sbb
or
cmp
jle
add
adc
pop
pusha
cmp
or
daa
cmp
aaa
add
sub
push
add
aas
push
or
sbb
ins
pop
cmp
and
sub
sub
add
add
xor
pop
cmp
and
add
push
xor
sbb
pusha
adc
cmp
add
cmp
sbb
xor
or
add
adc
or
wrmsr
adc
adc
add
or
add
pusha
sbb
push
add
ds
add
xor
or
push
add
or
add
sbb
(bad)
adc
or
cmp
sbb
sub
pop
unpckhps
add
adc
or
or
cmp
adc
adc
adc
or
sbb
xor
das
or
sub
sub
das
add
or
inc
and
or
add
cmp
sub
sbb
pop
cmp
push
xor
sbb
pusha
movups
sbb
xor
or
push
sbb
sbb
push
sub
or
or
sbb
ds
add
adc
pop
adc
add
xor
add
adc
minps
sbb
sub
push
cs
add
sbb
sub
pop
sbb
add
cmp
sbb
add
adc
or
cmp
sub
cmp
sbb
cmp
sub
cmp
add
sub
pop
add
pop
and
sbb
sub
add
pop
es
add
add
add
sub
push
add
add
add
xor
xor
or
add
xor
or
sbb
xor
push
add
cmp
and
adc
add
cmp
and
and
or
adc
or
push
or
xor
sbb
xor
or
add
add
push
cmp
sbb
add
movntps
or
cmp
or
or
xor
sub
sub
jle
wrmsr
adc
and
add
add
adc
pop
or
adc
or
or
or
xor
aas
sbb
or
sbb
cmp
adc
or
sbb
xor
sub
xor
adc
and
adc
add
adc
ins
xor
or
or
adc
or
inc
sub
adc
pop
cvtps2pi
sbb
push
xor
sbb
pusha
mov
fucomp
pushf
in
jmp
and
sbb
add
pop
add
sbb
push
adc
add
or
xor
push
adc
push
cmp
or
push
sub
add
sub
add
(bad)
and
sbb
rdtsc
adc
ins
xor
and
add
sub
sub
pop
unpckhps
add
push
or
add
cmp
adc
sub
adc
cmp
adc
cmp
pop
jle
add
add
push
cmp
and
adc
das
gs
and
adc
adc
adc
add
push
and
adc
sub
adc
push
or
xor
cmp
pop
add
or
ins
sub
adc
sub
adc
es
add
fucomp
pushf
in
jmp
xchg
out
fucomp
pushf
in
jmp
in
(bad)
loopne
gs
adc
adc
add
pop
cmp
jle
sbb
adc
add
add
sbb
pusha
mov
(bad)
xchg
out
fucomp
jle
cmp
add
ins
xor
or
or
and
or
pop
add
push
pop
sub
add
das
sbb
sbb
cmp
ins
xor
or
or
aaa
das
or
or
add
xor
xor
pop
sbb
xor
jle
adc
add
add
or
sbb
add
xor
adc
add
add
add
adc
adc
sub
and
pop
pop
adc
mov
(bad)
xchg
out
fucomp
pushf
in
jmp
in
(bad)
loopne
gs
push
adc
or
sbb
pop
push
adc
or
add
adc
or
ins
xor
push
adc
push
cmp
or
push
sub
or
pop
add
sbb
adc
or
adc
push
cmp
add
adc
pop
pusha
push
or
sbb
xor
or
pushf
in
jmp
in
(bad)
loopne
xchg
out
fucomp
jle
loopne
xchg
out
fucomp
pushf
in
jmp
in
(bad)
loopne
xchg
out
fucomp
jle
loopne
xchg
out
fucomp
pushf
in
jmp
in
(bad)
loopne
xchg
out
fucomp
pushf
in
jmp
and
sbb
aas
bndstx
adc
and
sbb
adc
or
sub
add
(bad)
and
sub
or
push
cmp
or
add
add
or
cmp
jle
or
adc
add
cmp
pop
or
push
adc
or
rdtsc
or
push
adc
or
push
dec
sbb
adc
adc
jle
or
add
adc
cmp
or
pop
add
sbb
sbb
or
pop
ins
daa
cmp
xor
xor
sbb
adc
add
sbb
adc
add
add
add
or
push
pop
aaa
sbb
adc
or
pop
aaa
sbb
pop
sbb
or
pop
and
or
and
push
adc
push
pop
(bad)
cmp
add
sub
cmp
or
sub
add
ins
daa
cmp
sub
sbb
cmp
and
push
sub
ins
and
cmp
or
add
adc
sbb
adc
adc
sbb
aas
push
or
add
sbb
adc
adc
adc
gs
sbb
ins
xor
add
push
add
adc
push
or
aas
adc
adc
cmp
or
add
adc
sbb
dec
sub
add
inc
or
sbb
add
add
add
dec
pop
pop
add
pop
dec
or
aas
pop
sbb
cmp
sbb
add
push
dec
pop
add
add
pop
push
ins
push
sbb
pop
add
push
adc
adc
pop
inc
push
cmp
sbb
jg
add
adc
pop
or
or
push
or
pop
inc
pop
cmp
push
or
sub
sbb
cmp
or
push
sbb
dec
xor
add
xor
or
or
dec
push
inc
xor
or
inc
push
xor
sbb
cmp
push
unpckhps
or
cs
or
or
add
xor
adc
dec
adc
sbb
pusha
ltr
or
add
pusha
sbb
or
pop
cs
adc
adc
pop
or
adc
or
push
or
pop
cmp
sub
sbb
sub
pop
unpckhps
add
adc
add
(bad)
and
or
add
push
or
sub
pop
unpckhps
add
adc
add
(bad)
and
or
add
or
pop
or
or
or
adc
or
push
or
pop
sub
adc
or
add
sub
or
add
adc
ins
and
push
sbb
add
sbb
add
and
pop
or
sub
sbb
xor
or
add
adc
pop
sbb
xor
sub
or
sbb
or
pop
unpckhps
add
adc
add
add
or
add
xor
pop
sub
sub
pop
unpckhps
add
adc
add
(bad)
and
pop
add
or
or
sbb
or
sbb
gs
pusha
pop
bound
inc
pop
inc
jle
pusha
pop
gs
cmp
loope
ins
ret
pop
mov
scas
ins
push
jns
test
shl
add
pop
jge
pusha
pop
pusha
pop
ins
popa
dec
push
gs
pusha
pop
pusha
pop
outs
popa
push
imul
push
sub
cmp
adc
bound
push
jae
push
pop
pusha
pop
popa
jg
pusha
pop
bound
jb
fs
popa
addr16
jo
jne
dec
ins
jns
jne
jge
jg
pop
arpl
js
ja
imul
jg
ins
pop
jo
jne
dec
ins
js
jb
fs
dec
dec
ja
ins
jb
data16
popa
pop
bound
ins
pop
inc
jle
pusha
pop
gs
ins
pop
bound
push
push
inc
pop
gs
inc
pop
bound
je
gs
je
ins
jle
ins
pop
inc
jg
outs
dec
fs
sub
or
adc
jp
pusha
dec
ins
ins
ins
pusha
push
sub
inc
and
cmp
pop
add
pop
gs
pusha
dec
inc
jb
pusha
pop
sub
inc
xor
pusha
pop
ins
jle
je
fs
sub
add
add
or
add
jg
fs
bound
jge
jl
arpl
jbe
inc
pop
ins
jp
popa
dec
push
js
popa
dec
push
outs
push
fs
ins
pop
arpl
jo
inc
pop
imul
inc
gs
pusha
pop
jne
ins
jle
popa
je
jle
bound
popa
inc
gs
ins
ins
fs
jo
gs
fs
imul
cmp
jle
xor
or
or
dec
push
add
or
add
or
add
or
push
and
add
cmp
or
push
rdtsc
ja
pop
add
aas
adc
or
sbb
aas
dec
and
push
adc
push
sbb
aas
adc
or
sbb
aas
pop
gs
dec
gs
popa
dec
gs
jb
fs
ins
bound
jp
popa
dec
gs
pusha
dec
gs
popa
pop
addr16
pusha
pop
gs
dec
inc
jge
jb
data16
gs
gs
xor
jl
jl
pusha
pop
ins
popa
dec
xor
popa
inc
pusha
jp
pusha
dec
cmp
popa
inc
pusha
jo
addr16
jns
jno
pop
arpl
pop
jne
push
inc
ja
arpl
js
jo
push
push
jns
jg
push
js
jo
inc
ja
jo
pop
pusha
jle
popa
inc
pusha
jnp
bound
bound
pop
popa
jle
jge
push
ja
jg
dec
adc
jo
pop
inc
jge
jge
ins
jbe
inc
pop
fs
inc
pop
fs
sbb
addr16
arpl
jnp
push
gs
bound
fdivr
dec
popa
pop
imul
dec
in
jno
fucom
jae
imul
pusha
jbe
push
jge
js
jo
pop
bound
fs
bound
jge
bound
push
popa
jns
jb
pusha
jle
jb
in
dec
bound
in
loope
inc
jg
or
jns
jl
ja
jo
pop
inc
jl
push
jb
call
pusha
pop
ins
jl
pusha
jns
arpl
bound
pop
inc
jg
jge
ins
js
jb
hlt
jl
jge
push
gs
in
in
cmc
pop
ins
jbe
jge
addr16
jb
hlt
jl
jge
pusha
pop
ins
jb
in
dec
popa
dec
adc
inc
pop
fs
sbb
gs
inc
pop
js
gs
jg
pusha
dec
fs
arpl
jo
data16
ins
ins
jae
pusha
pop
ins
outs
inc
pusha
jnp
popa
inc
pusha
jbe
pusha
pop
imul
pop
popa
ins
in
rcl
imul
pop
ja
int3
arpl
jl
outs
push
push
ins
push
or
add
sub
adc
ins
pusha
pop
inc
jle
fs
jg
push
pusha
pop
gs
popa
pop
fs
bound
or
adc
or
sub
add
sbb
xor
sub
ins
ins
pop
gs
dec
ins
dec
dec
inc
push
pop
gs
pusha
leave
aaa
jnp
pusha
pop
gs
pusha
pop
sar
gs
gs
ins
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
std
aaa
jnp
pusha
pop
gs
pusha
pop
gs
aas
push
or
sbb
sub
add
pop
or
sbb
xor
jle
pusha
pop
or
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
dec
gs
js
gs
ins
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
popa
pop
gs
pusha
pop
in
ins
pusha
pop
gs
pusha
pop
gs
pusha
pop
fs
pusha
pop
gs
pusha
pop
cmp
addr16
pusha
pop
gs
pusha
pop
or
pop
gs
pusha
push
and
pop
and
pusha
push
gs
ins
das
pop
sub
pusha
adc
xor
pop
sub
pusha
pop
gs
imul
ins
pusha
pop
gs
pusha
pop
gs
pusha
pop
pop
jle
pusha
pop
gs
fs
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
and
gs
pusha
or
ins
adc
jle
pusha
xor
ins
sub
jle
pusha
xor
ins
pusha
pop
inc
jle
pusha
pop
sub
pop
add
add
adc
pop
adc
pusha
xor
ins
pusha
pop
gs
pusha
in
popa
stos
ins
pusha
pop
fs
pusha
sub
ins
or
jle
pusha
sbb
ins
or
add
pusha
xor
ins
minps
frstor
gs
push
pop
push
jle
pusha
ins
gs
ins
push
pop
pop
jle
pusha
pop
bound
pop
fs
pusha
xor
ins
or
pusha
sub
ins
pusha
pop
inc
jle
pusha
sbb
pop
and
pusha
xor
ins
and
add
pusha
ds
or
jle
pusha
xor
adc
pop
gs
pusha
xor
adc
pop
or
add
gs
ins
add
pusha
pop
gs
push
pop
ins
jle
pusha
sbb
ins
or
add
pusha
cmp
ins
adc
jle
pusha
xor
ins
pusha
pop
push
jle
pusha
ins
gs
ins
push
pop
dec
jle
pusha
pop
gs
ins
imul
and
xor
ins
add
pusha
cmp
adc
pop
add
add
gs
or
jle
pusha
xor
adc
pop
dec
jle
pusha
and
pop
gs
pusha
pop
gs
sub
add
pusha
cmp
adc
pop
or
pusha
and
or
or
jle
pusha
sub
ins
inc
pop
gs
pusha
push
gs
das
pop
pop
jle
pusha
cmp
ins
push
pop
add
add
gs
ins
or
add
pusha
cmp
adc
pop
gs
pusha
xor
ins
or
jle
pusha
jae
sbb
pop
add
pusha
pop
gs
ins
push
pusha
das
adc
pop
adc
pusha
sub
ins
add
pusha
xor
adc
pop
gs
pusha
jae
dec
ins
dec
pop
push
jle
pusha
ins
gs
pop
pop
ins
jle
pusha
sbb
or
jle
pusha
aas
adc
pop
inc
jle
pusha
cmp
ins
adc
jle
pusha
xor
ins
push
pop
dec
jle
pusha
jae
dec
ins
dec
pop
push
jle
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
xor
gs
push
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
pusha
pop
gs
add
add
add
add
add
sub
add
xor
add
add
add
add
adc
pop
sbb
add
add
jb
add
jo
add
add
or
sbb
add
add
jb
add
jo
add
add
or
and
and
add
adc
sub
add
push
or
jb
add
jo
sbb
add
or
add
push
inc
adc
or
or
add
sub
add
or
add
or
add
jo
pop
add
or
adc
add
adc
adc
jb
add
jo
pop
adc
add
adc
pop
adc
sub
add
or
jb
add
jo
jb
add
jo
or
add
sbb
adc
or
sbb
add
add
adc
adc
push
jb
add
jo
add
or
jb
add
jo
add
or
jb
add
jo
add
or
adc
add
or
sub
add
mov
add
mov
sub
add
or
add
lea
add
add
or
or
jb
add
jo
mov
lds
add
push
add
or
jb
add
jo
mov
in
add
push
add
or
jb
add
jo
mov
std
add
jo
push
add
or
add
sub
add
or
add
add
or
pop
lea
add
add
or
or
or
adc
add
sub
add
or
push
adc
sub
add
or
add
add
or
push
lea
add
add
adc
add
sub
add
or
pop
adc
sub
add
or
add
add
or
sbb
adc
adc
push
adc
add
or
adc
add
or
adc
add
sub
add
or
or
sub
xor
add
add
adc
sub
add
or
outs
adc
add
or
add
pop
jo
or
mov
add
add
pop
ficom
push
adc
add
or
pop
xchg
popa
mov
pop
add
add
or
(bad)
add
pop
adc
sub
push
or
add
or
adc
adc
adc
xor
or
add
add
(bad)
lea
add
add
adc
push
add
sbb
add
add
add
add
sbb
add
add
sub
add
add
sub
add
or
add
add
jae
add
or
jae
add
or
jae
add
or
jae
add
or
jae
add
or
add
add
add
xor
add
add
add
add
adc
jle
add
add
and
add
or
add
sub
xor
add
add
add
add
add
add
add
and
add
or
add
sub
xor
add
add
add
jle
add
add
and
add
or
add
sub
xor
add
add
add
add
adc
jle
add
add
and
sub
push
sub
xor
add
add
add
add
adc
jle
add
add
add
or
sub
push
sub
xor
adc
add
or
add
add
mov
add
sbb
(bad)
(bad)
push
add
add
outs
sub
add
sub
pop
add
add
add
out
add
jle
add
add
inc
push
inc
adc
jle
add
add
add
add
sub
add
or
add
or
push
adc
sub
jb
add
jo
lea
sub
add
or
sub
add
add
or
add
add
add
add
add
sub
add
or
xor
add
add
sub
add
sub
fidivr
jb
daa
add
add
sub
and
add
or
add
or
add
inc
push
inc
(bad)
adc
jb
add
jo
lea
or
or
add
or
add
or
add
or
pop
or
add
or
add
or
add
or
pop
add
add
add
add
add
sub
add
or
add
or
fadd
sub
add
push
sub
sbb
add
add
aaa
xchg
add
add
add
pop
add
add
adc
add
pop
add
add
add
adc
add
push
add
add
outs
cmp
add
add
adc
(bad)
adc
push
add
sub
sub
add
add
add
add
sub
adc
add
adc
add
or
add
add
add
sldt
or
cmp
add
or
add
sub
add
xor
add
add
or
add
add
sub
add
or
sub
push
sub
xor
add
add
add
add
add
add
sub
add
or
add
sub
xor
add
add
or
add
cmp
add
or
add
sub
xor
add
add
add
add
adc
add
sub
add
or
cmp
add
or
add
sub
add
xor
add
add
sldt
adc
add
cmp
add
or
add
sub
xor
add
add
add
add
adc
rol
add
add
sub
add
or
add
sub
xor
add
add
adc
add
add
sub
add
or
sub
push
sub
xor
add
add
add
add
adc
add
inc
or
sub
sub
add
sub
sub
sub
add
push
sub
xor
add
add
add
add
adc
add
add
adc
push
add
add
sub
add
add
add
add
sub
adc
add
add
add
add
add
add
or
inc
or
sub
sub
add
sub
jle
add
or
sub
push
sub
add
add
sub
add
or
add
add
xor
add
add
add
jle
add
add
sub
add
or
sub
jb
add
jo
or
add
sub
add
or
add
or
add
or
pop
or
add
jle
add
add
sub
push
sub
adc
add
or
add
push
add
adc
jle
add
add
sub
push
sub
add
or
add
sub
add
xor
add
add
add
add
adc
sub
add
jb
add
jo
or
add
inc
add
or
sldt
or
pop
je
add
sbb
sub
push
sub
add
and
add
sub
add
je
add
add
add
add
add
inc
add
or
add
add
adc
add
or
add
sbb
add
add
add
add
sub
push
sub
adc
add
push
add
add
add
adc
add
add
jo
inc
add
or
adc
add
or
add
sub
add
add
add
jo
outs
dec
add
or
add
add
add
xor
add
add
add
add
adc
sub
add
push
or
add
sub
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
or
add
jle
add
add
add
and
jb
outs
addr16
add
add
add
mov
add
and
add
add
adc
add
and
dec
inc
add
add
add
jo
add
and
outs
bound
add
add
add
add
add
push
adc
add
add
and
add
add
add
add
or
add
or
add
and
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
and
push
add
dec
add
add
add
dec
add
add
add
add
push
add
add
add
adc
out
rol
push
add
dec
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
adc
and
pop
add
movs
add
mov
jge
or
mov
add
add
test
push
dec
add
add
jge
push
add
dec
add
add
das
push
adc
jne
pop
push
adc
mov
pop
push
adc
mov
add
push
das
push
or
jmp
pop
adc
adc
aaa
pop
sbb
push
add
dec
pop
push
add
dec
add
add
add
pop
dec
add
add
pop
dec
add
add
or
push
add
dec
add
add
pop
push
or
js
adc
push
add
add
or
or
add
dec
pop
adc
daa
or
add
add
rol
adc
jo
rol
push
add
add
add
or
add
aas
add
sub
or
add
test
or
add
dec
pop
push
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
inc
push
add
add
cli
add
add
add
add
add
add
sbb
add
push
sbb
add
imul
pop
add
add
add
imul
pop
add
add
add
add
or
add
ins
add
or
add
add
add
or
add
add
push
add
or
add
add
test
add
adc
cmp
js
add
shr
add
add
jb
add
add
ins
add
sbb
add
ins
add
add
add
outs
add
add
add
outs
add
add
add
outs
add
add
add
outs
add
add
add
inc
add
add
outs
add
add
add
outs
add
add
add
outs
add
add
add
add
add
add
add
add
add
add
sbb
add
outs
add
or
add
outs
add
sbb
add
add
sbb
add
imul
add
add
add
add
add
outs
add
or
add
add
or
add
outs
add
or
add
outs
add
or
add
jo
add
add
sbb
pop
add
add
jo
add
add
sbb
add
add
or
add
add
add
add
add
or
add
add
add
add
or
add
add
add
add
add
or
out
or
add
add
imul
xchg
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
cli
add
xchg
add
popf
add
add
movs
add
add
mov
lidtd
mov
add
add
add
out
(bad)
imul
xchg
add
sbb
sub
add
add
add
add
add
add
add
jecxz
push
rol
in
add
sti
add
adc
jne
icebp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
data16
stc
pop
ins
add
push
or
imul
imul
push
add
add
pop
add
add
mov
jno
jo
adc
sbb
mov
add
add
add
add
add
add
add
add
add
add
add
or
or
add
or
adc
add
add
and
add
es
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
(bad)
or
add
ror
add
add
add
add
add
(bad)
add
clc
or
add
add
add
add
add
or
add
add
add
add
pushf
add
rol
stos
add
dec
add
add
mov
add
add
add
and
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
sbb
loopne
jecxz
nop
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
add
add
add
add
add
add
add
add
pusha
add
add
nop
add
cmp
nop
add
mov
add
nop
add
add
nop
add
dec
add
add
add
add
stos
or
add
add
add
pushf
add
add
add
add
pushf
add
add
add
add
add
pushf
add
jecxz
nop
add
add
add
add
add
nop
add
add
add
add
add
nop
add
mov
nop
add
add
add
add
add
add
add
add
add
add
add
mov
push
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
inc
add
add
popa
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
icebp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
jne
jne
sahf
add
ret
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
push
add
pop
add
add
adc
push
add
add
adc
adc
add
add
add
add
add
add
add
add
sub
add
jb
arpl
test
add
adc
add
add
add
cmp
outs
fs
gs
arpl
ins
imul
outs
jae
data16
push
imul
jae
arpl
dec
jns
jo
ins
imul
add
je
ins
inc
popa
jb
cs
jns
dec
jns
outs
ins
jo
je
jb
dec
jns
jb
push
arpl
jns
outs
jb
jae
dec
jns
bound
jb
imul
jb
popa
fs
popa
gs
bound
arpl
outs
jbe
fs
xor
dec
outs
je
ins
push
jns
add
je
ins
inc
popa
jb
add
jae
jne
arpl
add
je
ins
inc
popa
jb
cs
jns
push
gs
jne
arpl
add
push
gs
imul
push
gs
imul
jo
jb
jns
dec
imul
je
push
imul
jae
arpl
inc
jo
ins
imul
push
gs
imul
outs
jae
ins
gs
jo
ins
imul
inc
popa
jae
add
arpl
add
arpl
jae
data16
push
imul
jae
arpl
inc
gs
arpl
add
ins
jo
je
jb
push
jns
je
ins
add
push
arpl
arpl
outs
jb
addr16
inc
outs
ins
jo
je
jb
ins
pop
inc
outs
ins
jo
je
jb
bound
arpl
outs
jbe
fs
addr16
inc
jo
ins
imul
add
inc
jo
dec
bound
arpl
outs
jbe
fs
push
jae
jb
addr16
push
jae
jb
ins
pop
push
jae
jb
bound
arpl
outs
jbe
fs
addr16
inc
outs
jb
jae
ins
pop
dec
jns
outs
jb
jae
bound
arpl
outs
jbe
fs
addr16
push
bound
jb
imul
dec
jns
bound
jb
imul
arpl
outs
jbe
fs
inc
jo
ins
imul
add
jb
jae
push
bound
jb
imul
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
add
jae
gs
cs
imul
inc
outs
jb
jae
inc
outs
jb
add
outs
jae
popa
outs
arpl
inc
imul
pop
dec
outs
jae
popa
outs
arpl
pop
add
jae
popa
outs
arpl
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
dec
popa
jae
je
bound
ins
pop
inc
outs
jb
inc
imul
je
add
jne
ins
jae
outs
add
je
popa
jae
inc
outs
fs
add
je
jns
add
je
imul
pop
inc
gs
outs
jae
popa
outs
arpl
ins
pop
push
push
push
je
je
arpl
ins
jne
add
je
outs
jae
popa
outs
arpl
ins
popa
imul
jb
add
add
add
jae
gs
cs
gs
jne
arpl
add
jae
jne
arpl
popa
outs
popa
addr16
jb
jae
jne
arpl
popa
outs
add
jae
gs
cs
ins
outs
bound
imul
add
ins
je
jb
dec
outs
outs
add
jae
jne
arpl
jne
je
jb
add
je
push
gs
jne
arpl
popa
outs
popa
addr16
addr16
inc
jne
je
jb
add
je
inc
jne
je
jb
add
ins
jne
add
je
inc
outs
popa
add
ins
je
jb
add
popa
add
jae
gs
cs
outs
outs
imul
je
outs
outs
add
jo
imul
push
gs
imul
add
popa
jne
je
outs
jae
popa
outs
arpl
addr16
inc
gs
jne
je
addr16
push
gs
imul
pop
push
gs
imul
popa
jne
je
push
gs
imul
pop
push
gs
imul
je
imul
jbe
jb
outs
ins
outs
je
push
jo
arpl
ins
inc
outs
ins
fs
inc
gs
outs
ins
fs
popa
je
add
jb
outs
add
outs
arpl
add
jae
gs
cs
dec
add
ins
add
imul
je
inc
js
arpl
popa
bound
popa
je
add
jo
add
je
push
jae
jb
popa
ins
add
jb
outs
addr16
inc
outs
ins
jo
jb
dec
gs
outs
add
jo
popa
arpl
push
jb
je
inc
ins
ins
push
gs
add
je
jb
arpl
outs
add
jo
imul
add
gs
ins
add
gs
imul
pop
dec
outs
ja
inc
jo
inc
outs
ins
popa
imul
inc
jne
jb
outs
je
outs
ins
popa
imul
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
outs
je
ins
gs
gs
jo
jb
add
je
bound
arpl
ins
jne
add
arpl
jae
data16
push
imul
jae
arpl
inc
outs
ins
jo
ins
gs
gs
imul
outs
jbe
jb
imul
jb
imul
popa
ins
ins
push
jns
add
ins
ins
inc
jns
popa
ins
add
jae
gs
cs
gs
add
arpl
imul
pop
inc
push
inc
dec
dec
add
je
jns
gs
inc
jns
add
je
dec
outs
addr16
add
jb
jns
push
je
ins
jae
inc
outs
jo
inc
jb
popa
jns
push
push
inc
push
push
inc
je
jb
bound
add
jae
gs
cs
imul
imul
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
add
imul
jae
bound
je
jb
bound
add
imul
jae
bound
je
je
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
outs
gs
je
fs
outs
fs
je
jb
bound
add
jne
addr16
imul
jb
bound
add
popa
outs
fs
jb
dec
outs
fs
gs
je
jb
bound
add
fs
outs
fs
gs
popa
ins
gs
je
jb
bound
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
cs
gs
outs
add
ins
jo
gs
outs
jb
inc
je
jb
bound
add
jae
gs
cs
gs
arpl
outs
add
addr16
outs
jbe
arpl
imul
jo
imul
je
outs
ins
add
je
dec
jae
imul
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
je
imul
inc
gs
gs
jne
arpl
je
imul
popa
ins
imul
imul
jo
imul
add
je
jbe
je
jb
inc
jb
popa
je
dec
outs
jae
popa
outs
arpl
push
jb
push
arpl
je
add
arpl
je
outs
outs
add
je
jb
push
arpl
jb
jb
addr16
dec
outs
outs
gs
js
gs
imul
pop
dec
gs
popa
add
gs
jb
jb
push
arpl
jb
jb
push
gs
outs
jbe
add
ins
jo
outs
outs
je
inc
imul
dec
jns
jb
jne
inc
outs
ins
ins
arpl
outs
inc
je
jb
bound
add
gs
fs
je
je
arpl
je
imul
jns
je
ins
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
ins
push
imul
je
jb
bound
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
data16
outs
arpl
jno
popa
ins
jae
inc
jae
gs
bound
addr16
inc
jae
gs
bound
inc
gs
bound
arpl
gs
imul
add
outs
arpl
outs
outs
imul
je
dec
je
ins
add
je
dec
je
ins
add
popa
jne
je
gs
imul
gs
je
jb
bound
add
gs
arpl
gs
gs
imul
imul
outs
je
ins
inc
popa
jb
cs
gs
jne
arpl
cs
jae
jne
arpl
add
jne
addr16
bound
je
jb
bound
add
jne
imul
jae
inc
outs
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jne
jb
ins
push
gs
jne
arpl
dec
popa
outs
addr16
addr16
je
jb
bound
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
imul
jne
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
imul
imul
outs
je
ins
inc
popa
jb
cs
add
add
add
pop
add
imul
pop
add
dec
add
add
js
add
or
popa
add
imul
and
add
je
and
add
ins
add
je
data16
jb
ins
add
add
push
add
imul
add
add
js
add
add
add
jb
add
je
add
add
add
add
add
add
outs
add
je
pop
add
bound
outs
add
and
and
das
add
dec
add
add
add
add
add
add
cmovne
dec
add
add
popa
add
or
dec
add
add
add
sbb
dec
add
add
je
jb
jns
push
add
imul
add
inc
add
adc
dec
add
add
jbe
outs
add
add
add
add
push
add
outs
add
outs
add
ins
add
pop
add
add
jne
jb
jae
imul
inc
add
jb
ins
add
jb
add
je
add
xor
outs
add
outs
add
ins
add
pop
add
add
dec
add
outs
add
jb
inc
add
arpl
add
je
imul
add
dec
add
je
add
add
jb
add
add
add
outs
add
jb
arpl
add
add
inc
add
popa
add
rcpps
add
add
outs
add
add
add
mov
xor
mov
loopne
xchg
or
xor
mov
mov
pop
jg
aad
cmp
and
add
add
add
add
or
push
adc
or
add
adc
pop
push
adc
or
add
adc
push
adc
adc
add
adc
push
adc
adc
add
adc
pop
push
adc
sbb
add
or
or
adc
add
add
adc
add
adc
or
adc
add
add
adc
add
add
add
xor
add
adc
add
push
adc
add
add
sbb
and
or
add
sbb
add
add
add
add
push
adc
add
add
add
add
sbb
add
adc
add
adc
and
add
and
adc
add
and
add
and
add
add
add
sub
add
push
add
add
sub
sub
push
add
xor
push
add
add
push
add
add
add
push
or
push
push
push
push
push
or
adc
add
push
push
push
push
or
add
push
adc
or
add
push
add
add
push
add
push
add
add
add
add
sbb
add
sbb
adc
sbb
pop
or
sbb
sbb
sbb
push
sbb
add
add
imul
adc
jno
jno
sbb
sbb
add
add
add
add
add
and
add
add
add
add
add
push
pop
add
or
push
gs
jo
popa
je
pop
cmp
xor
xor
xor
add
adc
or
adc
or
adc
adc
adc
adc
adc
sbb
add
or
pop
add
or
add
adc
add
adc
pop
add
sbb
add
push
dec
jns
push
bound
jb
imul
add
or
cs
outs
ins
jo
je
jb
add
add
dec
jns
push
jae
jb
add
add
push
dec
jns
inc
jo
ins
imul
add
or
jns
inc
outs
jb
jae
add
and
add
add
adc
add
push
push
sbb
add
add
add
add
add
add
add
xor
mov
and
add
adc
add
push
adc
add
add
add
add
pop
add
add
add
add
add
sbb
pop
and
push
push
push
push
pop
add
sbb
jae
gs
cs
imul
inc
outs
jb
jae
inc
outs
jb
adc
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
jo
jae
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
cs
jns
jb
push
arpl
outs
jb
jae
add
add
add
jns
je
ins
cs
bound
push
gs
imul
outs
je
arpl
jae
push
outs
popa
jo
je
jo
ins
imul
je
arpl
adc
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
jo
jae
pop
pop
dec
outs
jae
popa
outs
arpl
pop
add
add
adc
add
add
add
add
add
add
add
sbb
and
adc
add
adc
adc
adc
add
add
and
push
adc
add
xor
jae
gs
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
add
add
add
add
or
add
adc
adc
pop
add
sub
add
add
sbb
add
dec
dec
imul
je
push
imul
jne
imul
outs
jb
cs
gs
imul
imul
gs
imul
ins
gs
imul
popa
je
jb
xor
xor
xor
xor
add
sbb
aas
js
ins
and
jb
imul
xor
and
arpl
imul
inc
sub
ds
jae
and
jb
imul
xor
and
ins
outs
jae
and
je
cmp
das
jae
push
cs
imul
je
arpl
das
ja
outs
outs
ja
das
xor
xor
xor
das
ins
imul
ds
push
imul
outs
outs
dec
outs
outs
ds
and
popa
je
xor
xor
sub
xor
xor
cmp
cmp
xor
xor
aaa
cmp
inc
popa
je
ds
and
jne
push
push
imul
jne
push
or
and
push
imul
outs
outs
dec
outs
outs
ds
push
jb
addr16
ds
and
outs
outs
outs
push
jb
addr16
or
and
and
gs
jne
cmp
inc
outs
popa
bound
ds
and
and
fs
and
gs
fs
and
dec
outs
outs
outs
push
jb
addr16
or
and
imul
outs
outs
push
jb
addr16
or
and
and
gs
ins
jae
cmp
inc
outs
popa
bound
ds
and
push
imul
outs
outs
push
jb
addr16
or
das
push
jb
addr16
ds
push
jb
outs
arpl
popa
ins
jae
or
and
jb
outs
arpl
popa
ins
and
cmp
push
or
and
and
fs
and
gs
fs
and
and
outs
outs
outs
push
jns
gs
outs
je
jb
arpl
gs
outs
imul
das
dec
outs
outs
outs
push
jns
gs
and
and
jne
dec
gs
ins
ds
gs
jae
push
jb
jbe
ins
gs
push
jne
dec
gs
ins
ds
and
push
jb
outs
arpl
popa
ins
ds
das
push
jb
outs
arpl
popa
ins
jae
or
push
gs
imul
and
and
cmp
jne
je
jo
gs
outs
jae
popa
outs
arpl
push
outs
ins
imul
jo
js
jae
imul
ins
je
jo
gs
outs
jae
popa
outs
arpl
push
outs
ins
imul
and
and
imul
push
je
jb
dec
dec
outs
inc
popa
je
gs
gs
popaw
ins
jae
cmp
inc
imul
push
je
jb
dec
dec
outs
inc
popa
je
gs
gs
or
and
je
jo
inc
outs
imul
je
gs
gs
je
jne
cmp
push
je
jo
inc
outs
imul
je
gs
gs
or
and
ins
ins
outs
ja
popa
jb
push
gs
imul
popa
ins
jae
cmp
inc
ins
ins
outs
ja
popa
jb
push
gs
imul
or
and
and
je
jb
push
push
popa
imul
jb
gs
push
je
jb
push
push
popa
imul
or
and
and
jne
dec
outs
ins
jns
dec
gs
outs
jb
inc
jbe
imul
popa
ins
jae
cmp
push
jne
dec
outs
ins
jns
dec
gs
outs
jb
inc
jbe
imul
or
and
and
fs
gs
gs
imul
and
and
and
cmp
je
jo
outs
dec
fs
gs
outs
fs
jne
cmp
push
je
jo
outs
dec
fs
gs
outs
fs
and
and
gs
popa
jb
dec
outs
dec
fs
gs
ins
jae
cmp
push
gs
popa
jb
dec
outs
dec
fs
gs
and
dec
fs
gs
gs
imul
and
and
cmp
ins
ins
outs
ja
je
jb
dec
outs
inc
gs
popa
outs
fs
jne
cmp
inc
ins
ins
outs
ja
je
jb
dec
outs
inc
gs
popa
outs
fs
and
gs
jne
cmp
inc
outs
popa
bound
ds
and
imul
jne
cmp
dec
imul
and
and
cmp
jne
dec
outs
ins
jns
dec
fs
gs
ins
jae
cmp
push
jne
dec
outs
ins
jns
dec
fs
gs
and
popa
imul
push
jne
ds
ins
jae
cmp
push
popa
imul
push
jne
ds
and
je
outs
outs
push
imul
je
push
push
xor
das
inc
js
arpl
imul
dec
imul
and
and
cmp
jb
outs
jb
je
ds
cmp
push
jb
outs
jb
je
ds
das
push
gs
imul
and
cmp
arpl
outs
jae
inc
outs
outs
je
js
cmp
push
or
and
or
and
and
outs
ins
ins
popa
outs
fs
outs
jb
and
ins
ins
popa
outs
fs
and
inc
js
arpl
or
das
inc
arpl
outs
jae
or
popa
jae
ds
add
or
cs
gs
imul
and
add
and
and
add
or
add
add
add
add
add
or
add
add
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
add
add
or
xor
cmp
cmp
add
add
and
inc
xor
inc
cmp
aaa
xor
sub
sub
sub
xor
cmp
inc
xor
add
add
add
or
je
ins
inc
popa
jb
add
and
add
outs
jo
jb
addr16
and
je
ins
inc
popa
jb
jg
xor
xor
add
add
add
add
add
add
add
add
add
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
