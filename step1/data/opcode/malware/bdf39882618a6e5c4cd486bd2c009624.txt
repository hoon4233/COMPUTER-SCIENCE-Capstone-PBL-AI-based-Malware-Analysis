daa
add
push
add
add
add
test
movs
xor
or
xchg
jge
dec
jecxz
arpl
imul
push
cmps
xchg
stos
pop
mov
shr
je
scas
test
jl
je
call
test
mov
into
mov
xor
imul
clc
add
cwde
push
sbb
call
popf
jle
pusha
popa
dec
push
push
xor
das
aaa
loope
push
std
cmp
ss
iret
xlat
pop
mov
psraw
lods
add
cmp
test
out
test
jge
mov
add
fidiv
cwde
shl
fucomp
jbe
cdq
sub
mov
test
sbb
cmps
scas
or
sub
mov
inc
add
daa
lea
push
xor
loope
dec
shl
jno
scas
xchg
je
les
shl
pushf
aad
mov
mov
cmp
int
mov
pop
aad
pop
mov
fist
call
repnz
cli
stos
mov
add
nop
cmp
cmps
hlt
in
shl
in
dec
inc
and
retf
ins
aaa
imul
jmp
lods
in
bswap
call
clc
clc
pop
into
mov
or
dec
jb
es
shl
add
or
inc
or
repz
fldenv
xchg
addr16
shl
enter
pop
pop
jb
call
test
fmul
sbb
jecxz
lahf
jmp
xchg
adc
jo
test
push
shl
jl
push
mov
push
cmps
mov
ja
sub
das
jg
in
retf
jecxz
lea
les
lods
xor
repz
and
int
sub
(bad)
das
lock
pushf
jno
cmp
sbb
inc
push
dec
(bad)
enter
add
lds
loope
inc
cmp
out
push
mov
or
jl
sub
and
dec
dec
mov
call
call
sbb
cmp
stos
ja
js
adc
int
add
sti
sub
sub
pop
aaa
push
push
js
pop
into
test
aaa
aaa
clc
not
icebp
mov
call
or
loope
pop
inc
(bad)
cmps
jp
test
dec
jns
jb
inc
hlt
dec
idiv
scas
push
mov
push
or
mov
xor
out
mov
xor
cmp
xchg
ret
and
add
loop
mov
xchg
pop
ins
dec
js
mov
cld
imul
sbb
fcom
ja
sar
mov
std
mov
fcmovb
rol
xchg
in
pop
(bad)
bound
pop
mov
push
dec
stc
xor
ins
fist
retf
jecxz
mov
sahf
add
sbb
daa
mov
and
or
adc
inc
push
jne
sub
pop
imul
mov
je
test
or
mov
sub
ins
sti
shl
jp
ins
pop
lahf
xor
mov
neg
mov
pushw
add
mov
imul
lea
adc
scas
data16
out
sub
or
out
jo
retf
daa
adc
int3
sahf
dec
pop
mov
fistp
jns
pusha
mov
fs
stos
scas
paddq
push
adc
call
popa
sub
rcl
int3
xor
push
mov
retf
and
sub
dec
pop
shl
mov
(bad)
ret
ins
push
ror
sbb
pop
out
dec
ds
iret
and
popf
push
js
(bad)
push
jg
fisubr
push
cdq
or
xor
fisttp
mov
(bad)
dec
fldenv
test
jecxz
sti
xlat
adc
xor
pushf
lods
xchg
data16
pop
dec
cmp
cdq
inc
retf
cli
addr16
xchg
rcr
pop
iret
in
push
ds
sub
dec
cmps
cdq
cmps
inc
mov
jns
sub
push
pop
jo
cmc
inc
movs
push
xor
push
(bad)
ins
pop
das
nop
pop
xor
adc
fbstp
(bad)
int3
mov
mov
lea
pop
ins
push
pop
or
das
ud0
ja
clc
in
push
or
loopne
jle
in
mov
ds
mov
push
dec
jp
or
jbe
ss
std
jmp
xchg
pop
cmps
cmp
fst
mov
out
fidivr
and
mov
pop
or
mov
inc
or
out
out
leave
lahf
nop
lea
dec
(bad)
lock
jmp
mov
pop
jns
std
fisttp
add
dec
and
hlt
push
imul
popa
out
xchg
call
in
jl
push
mov
sbb
outs
xor
or
jge
call
jl
push
jns
push
cs
popa
cmc
jno
add
jns
xchg
inc
sbb
hlt
sahf
sub
(bad)
mov
cli
movs
daa
add
inc
sub
data16
stos
cmp
pavgb
cmp
sbb
adc
imul
jmp
pushf
mov
and
adc
pop
mov
lahf
stc
and
push
imul
inc
mov
rol
xchg
(bad)
pushf
into
sbb
fld
pop
sub
jb
push
sub
adc
inc
and
leave
jle
cmp
inc
jae
lds
arpl
es
loope
fcom
aas
fcmovbe
cmp
xchg
mov
fs
std
xor
dec
mov
xchg
out
lock
sbb
mov
jbe
repz
in
push
sbb
push
jmp
stos
ins
push
mov
pop
mov
rol
retf
xlat
das
jns
push
xchg
mov
mov
cmp
imul
into
(bad)
xor
les
mov
jne
test
scas
push
out
or
push
cmp
pop
xchg
jae
dec
adc
mov
add
push
test
inc
push
fdiv
sub
xchg
sbb
js
sti
dec
cmps
ds
shl
sar
pop
add
add
or
mov
push
jg
inc
mov
in
ss
fs
dec
test
test
push
cwde
mov
sar
mov
add
dec
jecxz
iret
ds
in
(bad)
push
pop
rol
sahf
out
adc
std
clc
movs
sub
retf
test
mov
jae
clc
stc
jbe
rcl
xor
push
jg
xor
jo
nop
push
cs
xor
jge
in
fnstenv
jecxz
movs
sub
es
dec
in
and
pop
dec
iret
std
push
cmps
rol
mov
mov
stc
jbe
dec
jae
xlat
ret
js
rcr
(bad)
lahf
les
jo
mov
in
fst
lods
cwde
pop
xor
mov
mov
bound
out
repz
jecxz
fisub
and
or
outs
cmp
ins
clc
clc
fistp
pop
sbb
loop
call
xor
add
xchg
movs
pop
cmp
inc
xchg
xor
jmp
jl
scas
or
push
retf
dec
(bad)
addr16
cmps
and
mov
mov
pop
cmp
adc
outs
ror
out
mov
jne
loopne
mov
and
pop
jno
and
jne
test
inc
jge
(bad)
jecxz
mov
movs
pop
leave
mov
add
or
dec
cmp
cs
lock
sub
outs
mov
push
push
das
push
and
push
cld
test
add
pop
and
jl
pushf
ret
inc
icebp
cmp
push
xchg
test
fst
es
xlat
jne
popf
ins
mov
pop
and
repnz
fld
or
stos
(bad)
cmp
sub
repz
and
sbb
stc
dec
and
push
inc
mov
movs
dec
mov
and
lock
stos
call
cmps
xchg
ins
push
inc
mov
mov
mov
or
retf
pop
jg
fadd
nop
sub
lgs
std
lock
mov
aas
(bad)
retf
push
or
add
std
movs
stos
xor
add
lahf
dec
das
ret
mov
xor
or
in
loope
loope
inc
outs
cs
jae
mov
dec
jnp
cmp
inc
int
loopne
or
mov
addr16
or
fnclex
jg
push
pop
in
xchg
push
xor
(bad)
retf
mov
dec
inc
icebp
jg
rcr
cmc
(bad)
fiadd
sub
dec
push
mov
xlat
out
(bad)
bound
add
sbb
cli
adc
lds
xor
mov
xchg
leave
sar
pop
aam
cmp
loopne
sbb
call
add
push
jle
fisub
or
xchg
dec
stc
and
and
out
dec
imul
iret
in
retf
push
and
pop
loope
and
cmp
lahf
or
mov
mov
jge
dec
push
xchg
retf
pop
and
shl
mov
leave
xor
scas
and
clc
icebp
xor
repz
call
add
jmp
fcomp
or
aad
repz
jbe
rol
push
mov
push
push
xor
pop
scas
lods
and
data16
mov
sub
jecxz
sub
jle
sbb
outs
sbb
jle
push
(bad)
push
mov
lods
pushf
cmp
imul
in
jecxz
les
mov
je
mov
jmp
xor
retf
cli
retf
call
pop
mov
das
pop
ins
xchg
sbb
fnsave
mov
shr
mov
ins
sub
mov
inc
stos
loopne
and
xchg
or
fwait
pop
call
out
xor
imul
cmps
not
into
repnz
xchg
cmp
out
cmp
retf
xchg
jle
sar
push
mov
jl
jo
and
sub
jge
rol
or
mov
jne
imul
xchg
sbb
mov
mov
fsub
aad
adc
pop
retf
call
jnp
test
int
fistp
mov
add
xchg
xchg
fsubr
or
inc
push
push
rol
and
jns
sbb
mul
add
and
mov
jge
xor
sub
dec
cmp
mov
dec
jle
mov
loopne
push
push
mov
hlt
retf
mov
repz
sbb
push
xchg
dec
rcl
clc
stc
xor
call
ror
popa
bound
fcmovnu
jmp
inc
mov
(bad)
cmp
neg
pop
push
sub
daa
sbb
add
ins
(bad)
pop
rcl
push
mov
and
xchg
mov
cmps
xor
fld
mov
jp
mov
lock
cld
push
(bad)
aam
out
cld
shl
outs
and
jno
mov
add
push
bound
sub
mov
or
pop
aas
adc
shr
stos
xor
mov
cmc
aam
pop
pop
daa
ins
and
push
dec
lock
and
leave
in
sti
dec
jnp
jmp
fwait
mov
scas
jmp
inc
in
fbld
cmp
xor
or
sub
adc
cmp
rcl
sbb
hlt
push
cmp
fistp
popa
mov
rcl
xor
cmp
jecxz
xor
add
(bad)
int3
in
test
jbe
sbb
call
(bad)
ror
dec
(bad)
and
cdq
clc
repnz
cmp
cdq
mov
daa
xlat
aam
pop
mov
lea
nop
lds
cli
leave
int
stc
rcr
push
rol
fwait
jnp
aas
out
cmp
imul
stos
or
and
jge
push
mov
popa
je
js
mov
pop
fsubr
and
pop
mov
and
dec
cld
mov
jmp
icebp
dec
outs
(bad)
cmp
fsubp
aam
or
es
(bad)
(bad)
jb
xor
mov
inc
fistp
aaa
(bad)
sub
adc
js
ja
ss
sbb
xor
jle
dec
int
cli
fld
fstp
stos
push
sub
add
xor
and
leave
arpl
and
xchg
sbb
je
pop
mov
adc
lods
(bad)
cld
dec
mov
or
mov
fs
scas
loop
out
fwait
sub
std
clc
lea
cmp
(bad)
lds
in
sub
push
bound
nop
aam
data16
outs
fsincos
movs
push
pusha
repz
repnz
pop
jg
mov
jmp
xor
and
xor
mov
push
inc
sbb
shr
or
xchg
(bad)
xchg
stos
mov
retf
ins
cwde
outs
dec
(bad)
stos
sub
inc
cmp
dec
and
mov
cmps
cmp
js
leave
ja
test
xchg
mov
mov
icebp
jns
xor
cs
dec
xor
add
(bad)
(bad)
aas
mov
call
mov
into
jo
leave
push
or
and
retf
jae
out
dec
test
pop
xchg
sar
arpl
xor
fdivr
test
popa
jg
add
pop
arpl
jne
dec
test
mov
sbb
mov
(bad)
jge
push
out
inc
push
push
ja
shl
mov
enter
adc
jbe
mov
jmp
mov
(bad)
aas
cwde
or
jmp
pushf
lds
sub
jo
dec
stos
or
mov
out
mov
cwde
out
das
lds
mov
adc
cmp
push
jbe
jle
and
ins
sub
ss
and
and
xor
out
jae
sbb
cdq
push
fidivr
adc
(bad)
mov
ja
and
sbb
adc
in
push
imul
or
mov
not
fiadd
rol
paddusw
mov
mov
sar
add
pushf
adc
data16
add
pop
fisubr
fisub
sub
sub
push
stos
mov
loop
dec
sbb
cmp
and
popf
mov
enter
sbb
xor
addr16
in
clc
pop
fistp
inc
inc
dec
xchg
scas
das
jns
scas
shr
sub
pop
push
push
mov
xchg
gs
pop
inc
and
jl
push
push
es
scas
fisttp
xor
dec
jmp
add
add
and
into
popa
push
not
imul
bound
jmp
nop
pop
mov
cmps
pop
outs
movs
xor
xchg
rcl
push
dec
jo
sub
cdq
icebp
jne
pop
out
sti
push
imul
jl
mov
pop
loopne
add
int
inc
push
inc
ficomp
es
cmp
xlat
(bad)
or
repz
push
cmp
dec
aad
popf
rcr
pop
or
mov
inc
aam
sbb
sub
stc
in
inc
cmps
xchg
xchg
xchg
aaa
xchg
push
cmp
mov
dec
xchg
lahf
movs
je
push
(bad)
jbe
stc
fld
pop
or
fsub
mov
fs
ficomp
fist
fs
ins
cmp
jecxz
imul
mov
js
sbb
mov
imul
dec
add
cli
jb
out
call
inc
jp
shr
or
jge
std
inc
icebp
lods
xchg
mov
dec
add
in
jg
inc
jns
loop
and
cs
and
adc
in
cmps
add
int
jbe
xor
loop
cmp
xor
movs
cmp
leave
out
push
shl
cwde
shl
add
ds
jmp
sbb
outs
push
ret
or
cwde
(bad)
xchg
cld
test
pop
sbb
out
inc
in
adc
mov
mov
push
push
int
stos
pop
mov
pop
pop
es
lock
in
call
fmul
push
jno
aad
mov
aas
cdq
lock
clc
mov
xor
mov
sbb
push
sbb
std
es
scas
mov
mov
add
jns
and
in
adc
(bad)
test
sub
inc
cmp
inc
pop
pop
sbb
push
int
push
in
mov
nop
aas
pusha
xchg
jae
cmc
outs
lea
or
adc
lahf
sub
xchg
sub
lock
fdivr
add
pop
into
push
xchg
mov
sub
jbe
pop
mov
cmps
lahf
mov
xor
push
jmp
sub
jmp
mov
mov
mov
mov
cdq
pop
xor
xchg
xor
xchg
or
mov
pop
dec
xor
lds
mov
outs
test
shl
xchg
pop
pop
push
sub
xor
js
mov
push
cmp
jge
xchg
hlt
out
and
enter
je
dec
xor
ror
jl
xchg
or
pusha
dec
in
or
out
or
pushaw
rol
xor
add
xchg
push
fisttp
ja
jbe
cmp
mov
ret
ret
leave
cwde
dec
mov
daa
mov
jp
xchg
push
sbb
dec
push
mov
sbb
jmp
cmps
or
pop
dec
xchg
(bad)
pop
mov
in
jp
adc
in
and
shl
mov
popf
ins
fistp
ret
stc
push
ins
js
ds
cmp
lods
pop
jmp
retf
sub
pop
pop
dec
xchg
pop
mov
adc
pop
out
data16
shl
mov
xor
inc
cwde
mov
in
bound
mov
and
psubd
scas
out
jno
cvtdq2ps
xchg
test
xor
sub
push
daa
push
xchg
int3
mov
je
aaa
xor
ins
sahf
imul
xchg
leave
(bad)
fmul
data16
inc
mov
inc
aas
das
xor
ss
fsub
test
mov
sub
dec
add
and
or
mov
neg
push
ins
retf
cld
xchg
cmp
in
fwait
add
xchg
pop
adc
push
xlat
dec
daa
add
xchg
(bad)
mov
mov
and
dec
call
jnp
adc
xor
ss
fisub
add
pop
inc
push
sbb
outs
jbe
iret
outs
jae
aas
push
cmp
xor
daa
sub
fidiv
ds
out
enter
jno
leave
stos
pop
movs
hlt
sub
sbb
das
pop
sub
popa
(bad)
in
jae
in
fwait
dec
push
jnp
cmps
loop
cmp
or
mov
mov
inc
pop
shl
test
dec
(bad)
int
jecxz
pop
push
push
adc
jl
fstp
sub
sar
adc
adc
sbb
mov
imul
cmp
aam
pop
(bad)
sub
jl
inc
mov
xchg
movs
pop
jl
in
mov
test
test
push
aaa
jp
sbb
or
aad
les
cmc
mov
dec
arpl
xor
gs
dec
xchg
inc
(bad)
ins
jns
push
std
and
jnp
movs
push
les
jp
push
jg
mov
add
ror
lahf
mov
pusha
sub
adc
lahf
adc
lock
sahf
clc
dec
loop
mov
xor
xchg
or
pop
or
clc
inc
ja
pop
lock
test
stos
shl
push
fwait
mov
add
pushf
xchg
push
xor
fnstenv
(bad)
cld
xchg
or
cmovno
retf
test
lods
sub
leave
dec
ja
or
stc
mov
ja
stos
(bad)
or
xor
xchg
push
xchg
aad
sub
not
sbb
(bad)
xlat
push
std
or
ins
or
outs
push
mov
push
das
in
jne
cmp
sub
outs
in
les
mov
popa
dec
pop
clc
or
ret
das
add
lods
in
cmps
sub
xchg
sbb
jae
cmc
push
leave
popa
sbb
fsub
outs
xchg
in
(bad)
jl
jge
jmp
fsubr
dec
mov
add
jns
out
imul
das
clc
adc
push
call
jae
xor
lods
jmp
mov
cmp
mov
mov
loop
dec
xor
aad
mov
push
cld
push
ss
mov
mov
or
mov
addr16
sbb
(bad)
cmp
inc
xchg
mov
loopne
xor
sub
sub
mov
sub
dec
outs
fisttp
ins
cmp
out
out
sar
xor
div
out
push
lods
or
je
push
fbstp
test
inc
js
pusha
arpl
pop
bound
fstp
xchg
test
push
adc
ds
mov
xchg
stos
mov
xor
or
stc
pop
or
dec
inc
and
mov
dec
cs
cmc
lods
mul
and
popa
cmp
or
cdq
imul
repz
add
fld
jo
adc
inc
cmps
add
or
out
and
cmp
mov
adc
inc
ret
rcl
mov
add
movs
sar
(bad)
push
js
sbb
mov
pop
sbb
aas
scas
mov
mov
xchg
add
pop
mov
inc
daa
les
jmp
pop
cmp
mov
shl
push
push
int3
add
arpl
jle
ret
je
lock
loop
jge
pop
pop
push
(bad)
clc
add
inc
inc
ret
ret
add
les
mov
mov
(bad)
out
cdq
fsub
fidiv
jmp
repnz
push
xor
into
fisttp
and
lods
inc
(bad)
call
jecxz
inc
repz
inc
das
mov
jp
psubsw
movs
jne
adc
int3
cmp
mov
in
sar
push
arpl
test
shr
(bad)
bound
mov
push
jns
jne
stos
cli
pop
push
pusha
jnp
pop
sub
mov
sti
rcr
fwait
mov
and
sti
jb
imul
icebp
leave
mov
or
retf
clc
xor
retf
ficomp
jns
and
std
jp
out
es
push
push
iret
jp
scas
adc
outs
out
mov
pop
adc
push
jmp
imul
int3
pushf
push
stos
adc
test
push
mov
jl
das
int
stos
or
adc
add
jecxz
push
xor
inc
xor
out
das
push
mov
mov
or
loopne
dec
mov
cs
lahf
into
dec
or
xor
(bad)
or
jp
mov
test
pop
inc
arpl
adc
ficom
test
rol
cmp
inc
cmps
outs
mov
push
jmp
sub
addr16
or
sbb
sahf
dec
inc
jmp
mov
mov
imul
icebp
and
shr
push
sbb
addr16
mov
cmps
les
dec
add
dec
sar
and
call
mov
mov
imul
sub
pushf
sub
mov
mov
mov
call
ds
dec
scas
jge
lock
pop
xor
mov
retf
mov
sub
mov
icebp
inc
mov
mov
in
adc
adc
pop
sti
cmc
fs
fcomp
and
jo
or
and
mov
push
pushf
mov
pusha
repz
sbb
add
mov
out
and
shl
mov
xor
test
pop
sub
(bad)
sub
sti
ins
lods
jl
lds
lock
cmp
cmp
mov
jmp
out
cli
leave
stc
(bad)
stc
or
jne
jo
sub
push
jb
jb
xor
jo
imul
retf
xlat
mov
xchg
push
cmp
sbb
xor
imul
ss
sbb
mov
out
call
pop
je
adc
rcl
or
fstp
int3
jae
out
cmps
pop
push
hlt
test
retf
out
mov
dec
pop
mov
les
add
mov
xchg
retf
je
(bad)
icebp
sbb
mov
test
int3
xchg
push
mov
and
sub
push
cmp
or
shl
inc
jmp
mov
jl
(bad)
pop
pop
adc
mov
sbb
xor
and
cmp
sahf
loope
rcr
es
stos
popf
cmp
xchg
cmp
loop
pop
push
mov
aas
retf
cli
push
loope
vdivps
xchg
iret
mov
jae
in
inc
xor
cmp
(bad)
fidivr
and
and
sahf
in
in
sbb
enter
mov
sahf
inc
xor
(bad)
movs
stos
add
and
rcl
xor
es
and
mov
xor
mov
sub
push
out
pop
ret
or
fdivr
inc
inc
imul
imul
out
jbe
mov
sbb
dec
mov
jmp
test
mov
dec
test
imul
arpl
shl
movs
ins
jb
iret
jns
test
out
pop
sar
cs
and
arpl
aaa
pusha
jb
cmp
(bad)
pop
rcl
dec
mov
mov
ror
pop
mov
repz
jecxz
adc
mov
fsub
stos
push
mov
sbb
test
mov
imul
ret
mov
retf
test
aad
dec
inc
inc
test
cdq
out
push
stos
xor
pop
jg
jmp
ins
das
mov
push
and
shl
adc
fist
push
inc
inc
movs
adc
(bad)
xchg
arpl
push
jp
(bad)
cmps
movs
push
ret
out
push
inc
fistp
xchg
cdq
dec
pop
call
int
and
sbb
stos
pop
es
cdq
test
stos
(bad)
retf
push
add
and
les
mov
rcr
popf
cbw
xchg
lahf
add
ret
push
mov
int
into
push
inc
add
icebp
pusha
out
idiv
push
xor
add
jae
xchg
mov
mov
push
rcr
sub
push
xor
mov
dec
ins
fidiv
inc
stos
mov
mov
call
xchg
mov
mov
mov
or
scas
push
mov
mov
fcom
outs
je
imul
xchg
dec
mov
add
jb
push
retf
sbb
push
dec
pop
cmp
push
xchg
ja
mov
(bad)
jmp
int
ins
(bad)
or
mov
adc
std
std
mov
stos
fistp
fs
push
xchg
(bad)
mov
into
out
fstp
jp
bound
gs
hlt
hlt
outs
daa
ret
int3
enter
out
out
dec
add
(bad)
xor
jl
inc
jl
or
imul
stos
in
mov
inc
js
or
bound
bt
mov
cmp
pop
adc
dec
mov
sti
test
mov
leave
mov
pushw
push
aaa
jg
sbb
xor
icebp
ror
enter
pop
mov
loopne
das
push
mov
or
fcom
or
ror
pop
test
(bad)
jmp
lahf
mov
in
mov
mov
sub
inc
fwait
adc
dec
add
fist
or
cli
mov
fstp
adc
pop
xchg
rol
sbb
sbb
pushf
xor
out
hlt
xchg
fs
sbb
adc
or
push
inc
popa
sub
jg
push
ror
inc
cmovbe
lock
idiv
push
and
mov
scas
add
xor
movs
in
jmp
inc
add
adc
cmp
test
retf
ret
push
add
loop
(bad)
pop
xchg
sbb
adc
sub
movs
adc
cld
sbb
sub
cwde
aad
adc
pop
or
outs
btc
xchg
mov
out
mov
mov
jp
mov
ja
stos
jmp
inc
sub
mov
cmps
aam
fcmovnbe
add
daa
dec
ins
jmp
add
cmps
push
inc
nop
icebp
imul
jae
pop
rcr
test
out
sbb
cmc
hlt
push
or
jmp
imul
xor
or
ins
hlt
imul
(bad)
jg
rcl
popa
dec
jno
stos
sub
retf
shl
pop
mov
mov
fcomp
pop
aaa
pop
dec
jp
mov
out
sahf
dec
addr16
push
ja
or
dec
or
or
pushf
leave
popf
xor
int3
pop
ja
push
jne
jns
inc
sbb
shl
add
pop
lahf
mov
aas
inc
mov
or
inc
cmps
in
cli
push
or
sub
xchg
fsub
push
inc
in
outs
sub
and
inc
call
dec
mov
lods
fimul
in
xor
loopne
sbb
and
and
xlat
aam
aam
lahf
imul
loop
stos
mov
je
dec
push
xlat
jecxz
jno
inc
mov
aam
adc
sub
out
fcmovbe
mov
hlt
mov
cmp
int
popf
ds
jns
je
mov
shl
sub
jns
mov
(bad)
mov
sub
add
mov
sbb
sub
enter
add
ss
pop
pop
cmp
mov
pusha
daa
ficom
test
shr
mov
loopne
xchg
fild
popf
jae
add
das
mov
and
pop
jecxz
fimul
mov
xchg
pushf
adc
and
cmp
(bad)
retf
cmp
push
xchg
xchg
test
jnp
cmc
inc
cwde
in
mov
push
rol
xor
(bad)
push
dec
sub
lock
jbe
mov
rol
int
ja
xchg
push
mov
mov
rol
movs
xor
nop
cmp
jecxz
jbe
cmp
xor
pusha
test
cs
js
mov
push
sbb
add
icebp
aaa
cdq
daa
rol
xor
mov
pusha
arpl
mov
sub
or
loop
int3
dec
mov
dec
movs
add
ror
mov
xchg
mov
dec
push
xchg
sub
arpl
es
daa
(bad)
push
rol
cmp
(bad)
(bad)
push
lahf
sar
xchg
sahf
test
add
cmps
sub
push
in
inc
mov
pushf
xchg
nop
shl
ss
(bad)
push
dec
ins
ret
adc
dec
retf
jmp
sar
hlt
clc
pop
push
scas
jae
cmp
mov
xchg
in
fisttp
int3
sbb
or
(bad)
sar
neg
jae
aaa
sbb
add
loopne
fmul
push
or
int3
cwde
(bad)
aad
jp
cmp
es
sbb
pop
dec
sub
mov
push
loop
xchg
add
addr16
jmp
mov
jns
ins
or
int3
xlat
jno
test
cdq
jae
(bad)
fisubr
and
or
mov
sti
ret
ret
outs
inc
inc
mov
call
int3
add
pop
cmp
adc
dec
iret
mov
adc
out
dec
lods
lock
and
icebp
sub
sti
mov
or
cmp
iret
ins
mov
cmp
sub
cmp
arpl
xor
mov
data16
es
imul
in
loopne
inc
lods
test
inc
neg
mov
push
(bad)
dec
inc
repnz
repnz
pop
or
dec
mov
push
mov
das
or
test
mov
inc
pusha
stos
icebp
xchg
rcl
mov
push
movs
std
xchg
fistp
adc
es
stc
mov
jle
(bad)
js
sbb
dec
xchg
inc
cmc
aad
pushf
out
jge
sub
mov
add
(bad)
dec
movs
cli
or
jnp
mov
mov
push
ret
fdivr
jae
sub
sub
dec
sar
addr16
lods
scas
pushfw
es
in
pop
into
sbb
repz
jecxz
loope
gs
xchg
mov
into
js
stos
outs
push
push
or
mov
lds
(bad)
in
sub
push
or
movs
test
cmps
cmp
push
pop
fsubr
das
push
out
mov
push
push
mul
jb
mov
aam
popf
in
fwait
and
cmp
mov
mov
leave
imul
push
inc
push
push
call
aad
ins
mov
dec
and
xchg
push
push
bound
add
out
jl
dec
mov
adc
mov
clc
in
into
fwait
sbb
test
cmc
call
dec
mov
cmp
dec
frndint
xchg
rcr
jb
mov
dec
dec
pop
push
icebp
or
or
mov
push
call
sub
xchg
in
test
mov
outs
jb
xor
test
cmp
retf
jg
sbb
pop
das
xchg
jl
lock
mov
pushf
lea
nop
iret
pop
mov
dec
add
mov
es
js
inc
fnstsw
pop
(bad)
out
ror
repnz
jnp
jne
fldcw
sti
enter
sbb
out
stos
mov
jl
retf
jb
mov
jmp
push
dec
inc
xchg
(bad)
cmp
iret
cmp
cmp
push
add
pop
shl
mov
mov
lds
ret
into
pop
xchg
and
test
xchg
cmp
lea
xor
adc
bound
cmps
push
fidiv
fld
stos
mov
call
and
imul
shr
push
loope
mov
(bad)
cmp
cli
mov
jmp
jns
jmp
mul
rcl
mov
in
xchg
or
mov
repz
jl
push
call
scas
(bad)
and
je
jp
jecxz
mov
inc
inc
and
lods
mul
mov
hlt
test
sbb
and
xor
add
test
xor
ins
and
sub
push
popf
imul
sub
or
movs
mov
repz
repnz
add
xlat
addr16
out
sub
(bad)
or
fidiv
inc
pop
(bad)
sub
add
mov
ffree
ds
in
sub
ins
ja
sub
mov
add
(bad)
enter
ins
js
sbb
mov
leave
xchg
adc
scas
in
shr
sub
(bad)
repz
inc
fistp
push
ja
retf
xor
out
sub
jg
pushf
and
repz
xchg
aas
pop
mov
outs
ss
mov
adc
or
test
ds
ror
(bad)
jns
dec
and
sbb
or
lea
cli
sub
add
ror
push
cmp
push
stc
mov
shl
dec
add
add
enter
or
or
adc
outs
jo
mov
push
pusha
pop
enter
fcom
sbb
in
jns
cs
dec
outs
sub
mov
imul
test
or
fimul
or
stos
adc
or
jmp
sar
pop
add
mov
ror
je
push
sub
pop
push
sbb
jbe
or
test
arpl
test
push
cmc
add
call
sub
dec
nop
iret
repz
xchg
retf
je
sub
in
inc
push
in
jne
(bad)
mov
xor
sti
sbb
and
mov
mov
pop
loop
js
addr16
lea
movs
mov
sub
jns
loop
fs
popa
nop
adc
ds
test
dec
movs
adc
mov
imul
inc
test
cli
sbb
dec
sub
mov
dec
sub
leave
cmps
and
inc
shl
dec
(bad)
test
retf
mov
adc
add
call
ror
pop
xor
sub
pushf
stos
das
mov
gs
popf
cmc
xchg
xor
sbb
repz
mov
sub
rcl
inc
sub
inc
adc
(bad)
pop
outs
pop
ds
das
and
pop
xchg
cdq
iret
inc
mov
sbb
xor
pusha
sub
js
and
aad
(bad)
mov
dec
fild
(bad)
mov
call
cmp
nop
mov
xchg
jnp
adc
mov
scas
push
or
mov
call
push
stos
sbb
adc
adc
xor
fwait
add
pop
aam
(bad)
movs
mov
lea
lea
pop
ret
jl
xor
and
jge
jg
and
xchg
pop
ins
adc
fldcw
lds
scas
push
mov
dec
adc
cmp
pop
je
pop
mov
stos
leave
imul
and
or
xor
in
jmp
mov
adc
cmp
add
sub
rol
sub
icebp
xchg
xlat
inc
xor
mul
add
(bad)
ins
aas
das
jmp
cmps
pop
sub
mov
mov
xor
mov
cmp
mov
in
ins
test
inc
mov
mov
movs
popa
movs
sbb
mov
lea
xlat
cmps
daa
mov
add
push
popa
adc
(bad)
mov
in
imul
test
in
cs
dec
mov
test
cmps
ja
dec
sbb
neg
jmp
jne
xchg
cmp
jp
loopne
retf
cmc
pop
mov
push
jae
cwde
in
popa
scas
dec
mov
dec
add
div
push
ret
arpl
dec
aas
mov
(bad)
sbb
outs
jns
inc
cmp
(bad)
or
or
jl
mov
out
imul
sub
sub
aaa
test
mov
xlat
mov
test
movsx
aaa
in
cli
cdq
ficom
das
pop
sahf
sub
aaa
jg
imul
int3
popf
mov
sub
lock
sub
xchg
inc
cmp
pop
fdivr
xor
out
icebp
lock
mov
test
jp
ss
in
test
mov
int
add
inc
adc
fidiv
push
mov
arpl
mov
mov
xor
mov
out
xor
push
std
mov
xlat
and
adc
adc
out
push
jae
mov
inc
cmp
fisubr
mov
in
mov
lods
sub
cmp
ficom
ds
(bad)
sub
dec
pusha
lock
stos
in
mov
(bad)
je
pop
lods
pop
xchg
jle
nop
or
pushf
jno
data16
push
xchg
inc
mov
lods
cs
jmp
sbb
jle
cdq
push
push
mov
repnz
pop
test
(bad)
lods
mov
cdq
jmp
pop
add
ret
mov
add
add
call
dec
je
(bad)
loop
xchg
fcomp
xor
jo
fcomp
fimul
sub
cmp
and
mov
aas
push
outs
imul
sbb
cmps
cmc
imul
ss
mov
mov
outs
push
out
clc
clc
shl
jne
or
pop
movs
or
xchg
or
not
rcl
mov
ficomp
(bad)
mov
(bad)
add
stos
push
inc
cs
pop
sti
dec
fisttp
scas
scas
sub
ds
hlt
in
mov
rcl
scas
add
aam
call
ins
loop
sub
imul
cld
movs
xchg
sub
mov
neg
imul
pop
loope
lods
dec
out
aas
idiv
out
stc
jle
(bad)
push
xchg
retf
les
mov
mov
push
push
push
aas
xchg
mov
mov
mov
dec
mov
xchg
adc
mov
(bad)
pusha
pushf
xchg
(bad)
push
popf
icebp
inc
mov
mov
cld
repnz
mov
add
mov
xchg
mov
mov
jbe
popf
sub
push
int
fnstsw
ret
fs
mov
xor
pop
dec
dec
cmps
shr
ss
test
pop
hlt
push
cwde
xor
add
add
imul
aam
inc
out
xchg
out
retf
jae
jg
and
jns
dec
dec
test
pushf
cmc
jge
jo
(bad)
sar
int3
dec
cmc
xchg
mov
aaa
daa
fistp
sub
add
mov
test
jmp
int
mov
call
shr
hlt
xor
test
out
in
cmp
pop
leave
aas
das
push
mov
cwde
lods
mov
push
aaa
in
fadd
mov
inc
gs
in
mov
jo
div
sar
add
pushf
lea
cmp
cmp
push
dec
scas
aad
mov
inc
aam
aas
xchg
xor
and
repnz
add
int
test
mov
add
ins
sub
push
imul
pop
fs
jge
or
adc
stc
les
sti
das
movs
jle
idiv
out
imul
call
and
leave
out
out
jbe
cmc
(bad)
mov
push
scas
sub
test
sbb
dec
pushf
push
push
outs
xchg
ins
xchg
sbb
bound
out
sub
enter
push
sbb
xchg
jns
leave
fdiv
mov
inc
xchg
lds
lds
dec
cmp
lods
push
imul
cmp
mov
xlat
pop
inc
mov
xor
xchg
shl
sbb
cli
les
and
dec
inc
add
inc
push
adc
test
in
ret
enter
sub
push
xor
dec
cmp
ror
nop
fcom
mov
adc
sbb
dec
ror
push
pop
ins
movs
mov
xchg
gs
ror
retf
cwde
(bad)
jmp
mov
scas
int
fisubr
mov
mov
daa
sbb
xor
lds
mov
xchg
hlt
xchg
push
pop
dec
stc
nop
sbb
in
ds
pop
cmp
(bad)
movs
adc
fstp
dec
es
ficomp
mov
mov
repz
push
xchg
call
sbb
or
je
stos
mov
xchg
mov
loopne
sti
(bad)
dec
push
sub
(bad)
dec
xchg
mov
mov
pop
das
or
retf
aam
(bad)
mov
cs
(bad)
and
jae
lods
(bad)
fsub
add
fcomp
mov
sub
repnz
aas
jae
dec
add
pop
call
jge
shl
cli
mov
lahf
inc
sbb
popf
dec
add
addr16
cld
pop
out
adc
mov
mov
xor
repnz
popa
in
mov
push
dec
ret
dec
lock
xor
(bad)
fldenv
sbb
mov
push
jecxz
sub
in
loope
sub
ins
jmp
xor
(bad)
and
adc
fimul
lea
sub
sub
pop
push
ds
jnp
out
sar
pop
movs
cwde
push
imul
push
dec
sbb
jmp
mov
mov
inc
bound
push
or
and
ins
lock
arpl
retf
sub
adc
xor
sbb
into
(bad)
pop
adc
mov
je
out
inc
and
pop
in
push
mov
pop
pop
loopne
jae
or
clc
ins
pop
mov
xor
sub
pusha
dec
push
loopne
and
xlat
outs
sub
arpl
mov
xchg
add
fidivr
lods
push
in
shl
xchg
js
push
mov
push
xchg
ficomp
(bad)
test
aam
pusha
mov
inc
movs
call
mov
rcr
lds
outs
cli
sub
xor
cwde
ffree
jg
lods
add
push
push
shl
dec
jl
mov
jbe
push
scas
lods
and
les
cmc
fisttp
(bad)
sub
inc
lahf
lock
popa
push
or
pop
sar
stos
(bad)
fsubr
mov
enter
imul
scas
and
xchg
iret
ds
cmp
xlat
push
stos
cs
in
lods
div
cmps
pop
sbb
icebp
bound
and
loopne
cmp
or
and
pop
push
mov
fwait
jp
cli
push
xchg
xor
shl
cmps
or
lods
jle
dec
mov
sub
aaa
or
addr16
and
jo
sub
xor
out
mov
add
push
sbb
stos
dec
into
fistp
jo
adc
gs
adc
or
es
dec
ret
in
out
inc
ss
and
fwait
xor
and
pop
pusha
mov
ins
xchg
xchg
or
sub
push
cmps
and
push
mov
hlt
mov
test
mov
mov
repz
shl
daa
inc
leave
pop
mov
ja
xor
mov
jl
sbb
enter
nop
inc
ss
std
push
sub
push
aaa
popf
or
xsavec
rcl
test
push
aad
test
clc
ins
loop
cld
mov
push
ds
sbb
(bad)
je
push
adc
dec
xchg
sub
mov
das
out
push
xor
jne
jmp
popf
stos
ds
add
add
pop
xor
stos
sub
adc
(bad)
stc
test
in
in
mov
imul
mov
sti
ds
popa
xor
push
add
inc
in
fisubr
cmps
(bad)
pop
out
and
cs
mov
jge
xor
jg
adc
and
sahf
push
xchg
call
push
push
pop
jl
sub
push
cmp
add
adc
jb
outs
scas
das
cmp
test
and
dec
mov
ss
adc
xchg
fisub
mov
mov
adc
stc
mov
jmp
mov
js
dec
arpl
jp
neg
mov
scas
mov
pusha
pop
ins
sub
loopne
mov
popf
mov
je
pop
js
cmc
xor
xchg
clc
cmps
xchg
dec
dec
xor
cmp
and
jecxz
add
jecxz
das
sbb
dec
pop
jge
or
sahf
cmp
push
adc
pop
aaa
jecxz
adc
lds
push
retf
inc
scas
push
movs
inc
sub
push
mov
xchg
cmps
push
call
or
jg
jecxz
out
cmps
test
sbb
jne
adc
adc
push
jp
adc
sbb
pushf
imul
in
sahf
pop
sub
mov
sub
mov
leave
pop
mov
cmp
dec
pop
mov
push
movs
dec
fst
jmp
mov
or
jbe
fnstsw
dec
and
lods
dec
(bad)
and
mov
cmps
test
loope
(bad)
pop
xchg
sub
test
xchg
cmp
outs
sar
in
jnp
dec
out
dec
add
js
xchg
pop
jp
fist
xor
lock
xor
(bad)
in
mov
ins
mov
sahf
(bad)
inc
push
sidtd
mov
fisttp
sbb
ins
(bad)
shr
mov
push
or
pop
ja
cmp
sub
and
scas
inc
push
dec
ss
jno
cmp
fdivr
aaa
add
jmp
sub
enter
ins
popa
repnz
cli
imul
daa
jg
std
ja
lock
lds
xchg
ret
pop
sti
jle
shr
ds
div
jnp
mov
xchg
test
in
dec
sbb
mov
fidivr
popf
adc
sub
repz
shl
mov
aam
add
push
sbb
outs
push
sbb
cmp
jae
adc
jg
mov
pop
adc
sbb
jge
add
dec
lea
and
rcr
jnp
loopne
test
cmp
sub
inc
ss
fs
loope
cmps
sub
inc
or
aad
xor
sub
sub
add
dec
ja
xor
ins
outs
sar
adc
faddp
pop
sti
cmp
cs
mov
cmp
jecxz
pop
jmp
jl
retf
pop
lods
push
fwait
ror
and
(bad)
push
dec
(bad)
pop
jecxz
popf
xchg
repnz
push
fdiv
inc
jle
mov
and
dec
rcr
arpl
das
adc
enter
or
test
sub
jbe
fst
std
das
mov
push
test
sbb
adc
sbb
out
sbb
mov
mov
loope
push
sub
mov
(bad)
sub
movs
shr
test
push
test
sub
mov
and
out
movs
and
gs
xlat
mov
nop
pop
pushf
ror
aad
lds
dec
or
mov
pop
aaa
push
call
popa
inc
xor
or
push
loope
lock
in
in
mov
xor
dec
hlt
stos
ins
cmp
lock
das
sub
out
or
inc
fwait
lock
mov
mov
fsubp
mov
(bad)
(bad)
xchg
adc
xor
and
adc
retf
in
shr
scas
out
cmc
rol
add
and
aad
outs
repnz
rol
jno
mov
rcr
mov
out
pop
dec
das
jo
or
push
call
stos
cdq
adc
xlat
test
jp
mov
sub
sahf
out
cmp
dec
xchg
dec
sbb
retf
sub
imul
jnp
cld
mov
out
xchg
cmp
fisttp
xchg
js
mov
aaa
fmul
loopne
aaa
dec
jns
mov
pop
mov
mov
(bad)
dec
test
sti
ins
cmp
xchg
outs
jle
pop
(bad)
cmp
push
pop
sbb
test
leave
pop
inc
inc
out
adc
sub
adc
jcxz
pop
mov
aas
mov
jnp
add
scas
in
xchg
pop
mov
add
daa
stos
inc
arpl
adc
inc
scas
jb
nop
or
test
jecxz
fcom
out
(bad)
aam
dec
xlat
jns
jmp
and
jl
inc
mov
mov
pop
jo
outs
es
adc
les
aaa
ja
inc
xchg
sti
cdq
out
mov
or
(bad)
fdiv
xor
fcmovu
push
ror
pop
addr16
push
mov
aaa
sub
sti
int
add
jno
dec
lods
std
push
sahf
push
repnz
stc
test
cmp
xor
mov
inc
mov
in
bound
mov
arpl
add
fsub
and
ds
bound
movs
fdivr
xchg
sub
sub
mov
jns
test
fild
mov
shl
xor
stos
sbb
or
pushf
data16
push
pop
sub
add
sar
movs
mov
sbb
rol
xchg
sbb
sub
jbe
cmps
nop
fimul
fst
push
loop
call
cmps
lahf
retf
pop
loopne
mov
call
in
jmp
in
xor
mov
test
test
das
mov
fdivp
test
sub
out
xor
test
lea
push
stc
mov
ss
dec
add
cwde
lock
sbb
icebp
jmp
mov
push
call
xor
loopne
dec
mov
and
mov
jmp
push
inc
sbb
cmp
sub
data16
dec
ins
push
push
and
mov
sub
mov
mov
and
xor
push
call
dec
mov
mov
jle
nop
add
xchg
adc
fs
mov
cmp
add
(bad)
cmp
cs
(bad)
pop
sub
in
jle
sub
outs
jmp
ja
jns
ins
jmp
jmp
clc
int3
jnp
test
push
pop
adc
call
jge
mov
jne
icebp
fwait
mov
mov
dec
ss
call
mov
pop
push
jmp
std
jbe
adc
retf
add
paddsw
pop
movs
mov
movs
mov
add
fstp
adc
dec
xlat
jmp
dec
cmp
pop
fwait
adc
pop
out
mov
test
jg
loop
outs
or
cli
in
dec
clc
fsubr
fs
pop
sbb
sar
xor
xchg
sub
ror
popf
out
scas
mov
ins
dec
push
jg
repnz
ffree
out
xchg
in
cmp
push
add
jmp
(bad)
std
popa
mov
pop
cs
ror
pop
not
pop
xchg
out
xor
push
stos
lock
add
(bad)
int
mov
xor
data16
or
aad
adc
or
mov
cmp
rcr
hlt
and
imul
push
arpl
call
test
mov
hlt
sahf
jbe
enter
inc
sbb
mov
gs
in
test
scas
ret
inc
std
repz
rcr
pushf
sti
jne
push
popa
xchg
jne
xchg
arpl
cwde
test
mov
aad
(bad)
scas
ins
pop
and
retf
jo
mov
cmp
pop
ret
or
jecxz
rcl
inc
in
push
aam
popf
lea
(bad)
xor
xor
sqrtps
fistp
fdivp
mov
sub
aas
or
dec
(bad)
fdivr
push
push
(bad)
cmps
sbb
push
lock
push
gs
or
pop
dec
add
push
mov
shr
ret
adc
or
mov
lods
add
dec
rcl
mov
xchg
mov
sbb
jecxz
mov
(bad)
clc
sbb
je
sub
xchg
jmp
cwde
leave
or
jns
lds
imul
mov
pop
push
rcr
jns
lock
dec
add
rol
daa
mov
jns
and
cmc
xabort
xchg
xchg
popa
add
mov
and
push
pop
shr
and
jle
xlat
ja
mov
xchg
inc
das
in
mov
add
push
shl
movs
cmp
mov
mov
es
(bad)
cmps
and
lock
(bad)
retf
jmp
mov
push
xor
std
adc
clc
push
sub
ins
mov
jns
sbb
mov
fild
dec
inc
jg
sub
cmps
(bad)
cmp
jns
mov
out
add
xchg
pop
jbe
(bad)
or
retf
jbe
inc
in
jno
push
and
push
nop
fadd
pop
mov
adc
fidiv
jp
jmp
pop
xor
mov
bound
retf
pushf
sub
stos
inc
jmp
adc
or
retf
ja
xor
add
mov
jmp
jae
xlat
out
cmp
loope
and
lods
adc
psraw
in
pop
fwait
and
push
add
jmp
cwde
es
mov
ret
xor
mov
and
pusha
ss
data16
fld
fdiv
mov
test
pop
sbb
(bad)
hlt
mov
sbb
push
mov
sub
and
in
outs
xlat
push
push
retf
cmps
repnz
hlt
dec
add
cmp
mov
out
jb
out
sub
inc
repz
jle
xchg
jge
(bad)
rcr
inc
mov
call
test
repnz
sub
sub
add
sub
rcl
inc
nop
inc
retf
mov
jmp
xor
std
jg
paddusb
adc
call
shl
shr
scas
(bad)
scas
pop
mov
sbb
(bad)
mov
mov
add
in
popf
cmp
cs
xchg
and
(bad)
pushf
imul
mov
mov
fisub
push
mov
test
fmul
scas
fstp
sbb
lahf
cmp
dec
jecxz
pop
jns
ret
iret
sub
jl
sub
cli
fs
cmp
fmul
gs
xor
jbe
jle
xlat
jbe
mov
in
lods
sub
xor
outs
cdq
mov
push
and
or
cmp
push
inc
jmp
rcr
push
or
leave
mov
push
mov
cdq
lock
mov
adc
int
pop
push
jns
jecxz
imul
rol
loopne
lods
ret
pop
sahf
and
fsincos
inc
add
xor
mov
add
unpcklps
loopne
xor
scas
sub
call
inc
cwde
and
rcr
lea
push
jae
xlat
addr16
pop
adc
add
cmp
pop
cdq
sbb
and
xor
out
mov
scas
xor
aaa
iret
std
xchg
xlat
out
push
sub
xchg
jno
inc
jns
retf
xchg
mov
mov
adc
imul
add
out
mov
repnz
push
mov
(bad)
shl
pop
mov
dec
add
pop
mov
jbe
rcl
je
mov
mov
test
retf
out
inc
cs
pop
xchg
je
pusha
leave
cli
cmp
call
xor
xchg
inc
push
mov
jmp
les
adc
out
inc
ins
mul
sti
inc
pop
fdivr
jmp
jo
aas
jbe
sub
jbe
or
xlat
and
popa
mov
in
push
mov
cdq
int
(bad)
dec
in
popf
(bad)
test
jle
arpl
sbb
(bad)
xchg
dec
pop
in
mov
mov
jo
(bad)
stc
mov
cdq
push
cmp
mov
mov
test
inc
les
int
rcr
loopne
int3
jbe
ss
mov
aas
cmp
in
stc
ja
mov
in
fldcw
in
pusha
cld
pop
xchg
int3
outs
xor
xchg
test
mov
push
loop
out
es
mov
ret
push
add
jno
out
and
in
out
bound
or
adc
rcl
and
pop
mov
sbb
repz
wrmsr
leave
push
xor
dec
jecxz
mov
adc
push
sti
and
xchg
repz
push
inc
sbb
sbb
xchg
inc
mov
jmp
les
dec
in
shl
fstp
inc
test
jo
mov
test
movs
cmps
xor
loope
mov
pop
xor
inc
outs
xchg
loope
xchg
leave
retf
mul
push
les
cli
out
sub
cmp
add
xchg
inc
leave
iret
fs
mov
inc
into
dec
inc
push
pop
call
add
mov
mov
mov
push
mul
push
inc
mov
out
pop
aas
mov
mov
pop
mov
xchg
adc
leave
sar
stc
and
int
clc
retf
xor
or
out
in
int3
push
enter
inc
sti
adc
rol
(bad)
ficom
int3
lds
into
inc
cwde
sub
call
pop
inc
lock
mov
ja
pop
mov
data16
jmp
mov
add
jmp
cmc
push
sbb
cld
jns
stc
shl
les
mov
push
mov
std
aas
fnstcw
std
sar
cmp
xchg
mov
mov
rcr
jl
pop
outs
dec
jo
imul
or
in
retf
cmp
jo
pop
pop
stos
push
call
mov
test
add
jmp
or
inc
test
xchg
pushf
mov
dec
mov
pop
pop
mov
ret
or
push
add
(bad)
sbb
fidivr
fadd
adc
cmps
arpl
mov
mov
pop
mov
cmps
ja
dec
ins
dec
or
mov
popa
add
nop
scas
call
xchg
daa
xchg
div
lock
jmp
cmp
inc
sub
pop
jbe
call
ret
stos
sub
fs
and
mov
popa
addr16
test
call
xchg
jge
scas
(bad)
jne
mov
sbb
dec
or
repnz
fmul
add
das
scas
in
adc
pushf
loop
mov
mov
in
ins
retf
pop
in
xchg
jle
jl
and
aas
cmps
shl
sub
mov
jecxz
jecxz
mov
sbb
outs
xor
test
pop
popf
ss
stc
push
pop
sbb
fcmovnb
mov
mov
adc
adc
rol
mov
fld
into
inc
dec
repz
aas
scas
(bad)
and
xor
add
push
daa
ret
test
out
lock
stc
bnd
or
ja
mov
mov
jmp
rcr
jp
aam
rcl
add
ds
fstp
sub
push
ins
fdivp
xor
pushf
pop
or
movs
sub
std
lods
xor
inc
fild
jmp
es
fcomp
push
sbb
cs
inc
hlt
push
pop
dec
xor
fsubr
or
inc
(bad)
xor
xchg
inc
movs
popf
aad
scas
mov
dec
jno
out
cmp
push
outs
loop
lea
mov
shr
clc
and
xchg
jge
pop
push
lahf
mov
mov
inc
xchg
jae
and
outs
sub
jne
pop
jns
loope
mov
int
pop
lods
or
rcr
les
outs
inc
jbe
jecxz
(bad)
pusha
int
sub
cld
push
sahf
cld
dec
imul
loopne
ret
fild
xor
imul
mov
sbb
and
fdiv
pop
cmp
into
pop
arpl
pop
mov
rcr
mov
cmp
call
leave
mov
sub
femms
mov
jg
rcl
cmp
popf
retf
sbb
or
xlat
not
pop
fs
dec
mov
je
cmp
pop
sub
(bad)
xchg
xlat
jae
mov
and
mov
shr
mov
cmp
cmps
mov
jmp
and
sub
jns
imul
ror
push
fisttp
cli
pusha
fimul
jne
fsubr
pop
test
push
ds
jo
pushf
dec
or
test
xor
hlt
dec
ds
retf
test
dec
sub
push
int
inc
ret
aaa
mov
mov
(bad)
add
add
lock
pop
popa
stc
or
mov
xor
aas
loope
mov
jmp
hlt
arpl
jnp
gs
mov
jb
push
cmp
mov
push
xchg
xor
lods
cmp
adc
lea
dec
and
jo
fisttp
jb
cmp
dec
and
and
pusha
push
jg
mov
mov
adc
bound
add
test
mul
scas
ss
pop
in
inc
mov
mov
sub
in
mov
es
sbb
pop
cmps
retf
ret
xor
xchg
mov
movs
lods
xchg
aas
fisub
imul
stos
add
push
dec
jg
dec
in
cmps
int
scas
mov
pop
pop
jp
sar
retf
pop
push
sahf
inc
repnz
arpl
jg
arpl
data16
mov
test
lahf
inc
(bad)
imul
ret
adc
dec
sub
les
outs
and
inc
cli
inc
jns
dec
into
mov
pop
imul
ds
push
bound
iret
rcr
(bad)
ja
sbb
popa
xchg
sbb
jnp
xor
xlat
mov
out
pop
pop
cmc
mov
inc
cmp
stos
sbb
in
xchg
mov
scas
loope
mov
jno
jb
leave
mov
enter
pop
rcr
push
les
test
fst
ds
mov
mov
xchg
imul
cmp
pop
es
fisttp
ror
in
sub
mov
mov
mov
push
add
into
adc
and
dec
sbb
in
cdq
es
imul
pushf
mov
fmul
imul
bnd
jno
out
add
xor
cmp
ja
xchg
push
test
div
or
mov
push
ds
mov
xchg
shl
push
xor
shl
sbb
mov
xchg
mov
mov
dec
sahf
jne
push
mov
ret
and
push
pushf
shl
lock
xchg
xchg
mov
push
loop
inc
mov
jae
pop
add
xchg
out
gs
hlt
xor
std
pop
mov
lea
cld
jecxz
jne
or
fisub
loope
jmp
mov
push
sbb
rcr
aaa
xchg
add
mov
cmp
das
mov
push
adc
and
call
cmp
loop
out
imul
push
sar
lds
add
cvtpi2ps
push
xor
imul
push
push
push
in
sub
dec
push
pop
sti
adc
dec
push
and
and
jl
xor
call
xor
pop
inc
rol
sub
or
pusha
mov
pop
jp
enter
shl
or
mov
ret
cmps
gs
or
mov
jbe
imul
push
call
sbb
sahf
push
hlt
push
push
mov
add
xor
inc
xchg
jnp
mov
sbb
mov
jl
mov
cmp
mov
test
cmp
sub
aas
call
test
xor
inc
les
addr16
mov
addr16
jbe
mov
mov
aaa
sub
add
in
retf
sbb
data16
cmp
lock
cmp
push
pop
mov
inc
or
xor
test
pusha
cs
or
into
dec
inc
fdivr
mov
jecxz
mov
(bad)
xor
repz
mov
(bad)
fxch
inc
push
ret
add
lea
or
cmp
lea
fiadd
gs
cmps
test
push
sub
pop
mov
(bad)
(bad)
scas
fsubr
pop
jns
imul
sbb
fbld
push
aad
jns
add
int3
xor
movs
push
scas
mov
popf
inc
mov
xchg
mov
ins
jb
scas
inc
popf
xlat
mov
lods
jnp
(bad)
add
mov
mov
cmps
js
or
jbe
xchg
stos
mov
sub
movs
data16
call
and
mov
cld
xchg
pop
cmp
push
rep
sbb
in
and
mov
adc
bound
xchg
xchg
inc
imul
or
stos
pusha
adc
fstp
push
xor
outs
shl
(bad)
in
repz
cdq
or
shr
add
cmp
push
pop
jne
or
or
jmp
mov
pop
popf
jmp
les
inc
cdq
and
repnz
add
mov
sub
pop
gs
add
sti
xor
cmp
stc
mov
sbb
stc
mov
cmps
mov
jl
dec
outs
in
mov
js
mov
or
inc
adc
retf
xchg
cdq
jns
mov
inc
arpl
mov
sub
and
inc
pop
std
adc
mov
(bad)
aad
and
rcl
adc
retf
lods
(bad)
int
ror
leave
or
xor
add
fisubr
mov
add
push
sbb
sbb
das
cmp
pop
jne
ja
inc
mov
or
aaa
push
call
sar
nop
jge
push
cs
sub
(bad)
xchg
aaa
hlt
mov
push
das
push
fwait
push
mov
jo
push
cmp
add
nop
mov
das
out
mov
lock
cmp
(bad)
stos
shl
dec
xchg
or
setnp
(bad)
push
pop
and
outs
in
mov
dec
fistp
sbb
jo
pushf
cmp
mov
sub
jg
cdq
pop
push
xchg
add
pop
adc
xchg
in
mov
inc
push
cmovp
xor
imul
fld
int
fs
int3
bound
fsubr
mov
and
jp
or
add
cmp
paddb
fnstenv
mov
xchg
loopne
(bad)
aam
adc
or
cmp
arpl
ror
xchg
shl
mov
std
lods
jg
ds
cwde
add
loop
dec
nop
mov
scas
push
pop
jle
xlat
call
sbb
xor
mov
je
inc
pop
cs
mov
push
lea
jmp
stos
jbe
mov
scas
push
ror
push
pop
inc
call
xor
mov
push
lods
mov
fdivp
xchg
(bad)
xchg
push
dec
sub
jb
call
jo
push
and
lods
sti
stos
mov
sub
jbe
ja
jb
cwde
es
pop
inc
lahf
(bad)
lock
call
mov
clc
lea
jb
sbb
cld
pop
dec
jecxz
stc
cmp
sub
mov
jmp
ins
jnp
out
push
loop
jb
in
mov
loopne
iret
cmp
or
jle
xor
addr16
xor
aam
sbb
cmp
outs
ja
sbb
or
adc
mov
push
aam
dec
and
nop
mov
aad
ret
or
jl
popa
xor
outs
test
lock
aaa
outs
int3
data16
lods
pop
loope
bound
jg
mov
xchg
sbb
adc
inc
cwde
mov
mov
ins
and
jbe
or
movs
dec
cmp
in
call
(bad)
cs
mov
ins
and
stos
push
div
rol
xchg
pop
add
add
aaa
cmps
push
xor
adc
jg
push
push
outs
test
jnp
xor
mov
jp
aad
push
lahf
std
mov
inc
pop
sbb
repz
jb
jo
or
adc
or
push
adc
(bad)
fldcw
mov
retf
add
imul
cmp
and
xlat
(bad)
cmp
fdecstp
and
fcomip
inc
stos
loope
fdivr
mov
mov
aam
push
div
or
cmp
gs
fcmovb
push
movs
adc
adc
jne
cmp
mov
(bad)
mov
(bad)
leave
out
fist
mov
shr
out
ret
cmps
adc
shl
lock
les
(bad)
mov
jb
and
cmp
sbb
loope
shr
adc
mov
jb
jp
sbb
xchg
inc
mov
sbb
mov
mov
jns
sbb
push
adc
mov
(bad)
xor
sub
leave
stc
sbb
in
not
and
pop
cmp
mov
dec
or
xor
sub
adc
ds
js
std
ret
mov
fisubr
pop
inc
cmp
jl
jmp
sub
sub
jmp
imul
cmp
aam
or
sub
ror
inc
rcr
dec
xor
pop
pop
cmp
cwde
sbb
rol
dec
ret
sbb
fisttp
mov
adc
addr16
and
push
push
retf
stc
mov
or
movs
lds
dec
lods
(bad)
loop
mov
xor
aad
add
jecxz
lock
pushf
pop
cwde
add
pop
div
cmp
outs
(bad)
push
adc
aad
in
pushf
jnp
(bad)
dec
int
rol
daa
arpl
xor
pop
inc
jl
(bad)
repz
test
mov
sub
mov
and
or
adc
xchg
sbb
sar
adc
mov
add
enter
mov
movs
xcrypt-ecb
or
loop
cmp
inc
sub
pop
sub
std
push
aas
mov
imul
jp
dec
popf
or
jno
repz
not
jo
jg
sar
xor
fs
and
push
js
cmp
jg
jns
pusha
dec
adc
leave
add
ret
imul
cmp
scas
ja
pop
inc
sub
mov
popf
in
cmp
inc
xchg
or
inc
xchg
xlat
pop
in
out
xor
rcr
xchg
adc
pushf
sub
sbb
ja
(bad)
out
pop
jmp
jae
dec
xchg
or
cmp
out
cs
xor
add
cmc
push
lds
arpl
in
jns
jge
into
or
je
push
imul
dec
gs
mov
pop
xchg
add
mov
jmp
mov
mov
and
mov
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
push
push
mov
push
push
push
call
cmp
