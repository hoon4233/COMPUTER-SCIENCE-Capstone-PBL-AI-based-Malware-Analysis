mov
push
push
mov
xor
mov
push
inc
inc
outs
ins
jo
arpl
(bad)
cwde
call
jecxz
hlt
call
sub
cmp
rcr
add
inc
outs
data16
mov
pusha
aam
pop
lods
cmp
popf
fild
xchg
jns
xlat
cmp
fdiv
fwait
sbb
sbb
mov
cs
cli
mov
cmps
mov
fs
daa
mov
add
push
in
inc
pop
clc
mov
jg
lea
(bad)
dec
jno
(bad)
arpl
push
movs
nop
sbb
scas
lea
inc
hlt
in
enter
in
adc
xor
and
test
jle
je
fucomi
adc
or
cld
cs
ss
sub
enter
pop
add
cwde
lods
stos
lea
dec
mov
or
adc
jns
dec
dec
mov
ficomp
xor
adc
ret
mov
imul
cli
cmp
push
jl
pop
mov
pop
cmc
mov
adc
mov
mov
and
and
enter
mov
sbb
and
iret
test
pop
inc
cmp
xor
dec
in
dec
xchg
pop
xor
outs
dec
push
ins
push
cmp
dec
xor
(bad)
nop
popf
sbb
adc
sub
hlt
mov
add
stos
or
(bad)
add
cmp
imul
cs
popa
ds
out
retf
inc
popa
mov
mov
inc
mov
test
and
xor
mov
sub
pop
aad
and
leave
(bad)
push
adc
mov
mov
sub
push
dec
sub
sbb
(bad)
rcr
sar
xor
jecxz
sub
push
aas
out
or
cmp
jg
mov
sbb
add
ret
loopne
add
push
add
inc
cmp
and
adc
xchg
mov
retf
or
push
pusha
jmp
iret
mov
aaa
mov
mov
lods
mov
jge
pop
mov
mov
retf
inc
dec
icebp
fisubr
sbb
mov
pop
pop
xchg
cmp
je
arpl
dec
or
rcr
jnp
mov
js
sbb
and
imul
or
aad
inc
jmp
jecxz
shl
jb
jmp
jle
nop
sbb
cli
or
bound
xor
leave
out
push
adc
shl
push
inc
inc
pop
and
out
imul
pop
mov
mov
test
add
cs
push
jo
fbld
jnp
pop
pop
sbb
test
mov
fisttp
pop
adc
cmp
xor
pop
and
mov
iret
test
lods
arpl
jae
pop
xor
push
data16
adc
mov
inc
sub
test
and
jnp
sbb
arpl
sub
and
lods
push
lods
lock
(bad)
and
(bad)
adc
sub
mov
in
sbb
aam
pop
and
out
or
push
adc
movs
test
scas
mov
bound
cmp
jmp
xchg
clc
push
pusha
inc
pop
and
loope
adc
or
mov
push
cmp
xchg
add
fwait
out
jno
jmp
(bad)
scas
cld
sub
(bad)
in
and
xchg
test
sub
and
hlt
jmp
retf
gs
xor
mov
inc
xor
sub
ret
in
pop
mov
push
mov
mov
mov
and
mov
dec
arpl
sbb
mov
iret
gs
ins
mov
jb
adc
or
pop
and
dec
out
ret
cmp
xchg
cli
outs
dec
rcl
jmp
mov
xor
sbb
sub
inc
out
nop
mov
adc
or
pop
push
adc
mov
cmp
cmp
push
cs
push
mov
(bad)
stos
dec
fcomip
pop
xlat
or
(bad)
add
push
call
and
mov
sahf
addr16
not
dec
or
mov
lock
push
and
arpl
repnz
and
mov
cdq
int
or
cmc
into
jno
inc
jns
xchg
mov
ins
(bad)
inc
pop
dec
lock
mov
test
into
ret
(bad)
mov
cmp
mov
dec
jp
jle
adc
pop
(bad)
dec
push
test
add
aaa
les
dec
add
dec
ins
jae
and
sbb
and
xor
movs
enter
mov
into
sub
cmps
xchg
sbb
fidivr
fnstsw
in
jg
jo
cmp
jp
push
mov
shl
mov
mov
rol
imul
fimul
inc
arpl
push
jnp
dec
mov
cmc
mov
sub
repz
call
jmp
std
pusha
inc
pop
sub
inc
sar
stc
hlt
mov
(bad)
xchg
test
xchg
and
js
daa
loope
lods
jmp
or
push
outs
xlat
xchg
pusha
xchg
add
leave
fisub
mov
ds
ret
push
sbb
push
arpl
ret
fidiv
pop
fld
mov
sbb
ret
shr
mov
jnp
movs
add
bound
or
mov
aam
xor
hlt
lock
ds
rol
movs
push
lock
jno
inc
jb
clc
jp
into
adc
arpl
shr
into
inc
std
std
fdivr
in
iret
clc
rcr
out
push
add
push
repnz
pop
or
jb
or
repnz
sub
xchg
in
movs
jbe
pop
jb
sub
fimul
pop
js
push
iret
paddusw
add
call
jno
xchg
jae
(bad)
pop
cmp
ss
aam
jmp
pop
jo
inc
das
repnz
cmp
fsubrp
dec
lods
jne
int3
push
fsub
mov
mov
push
push
ins
lds
push
mov
push
lahf
jbe
in
adc
(bad)
retf
loope
inc
out
jle
test
add
mov
outs
inc
and
mov
repz
leave
bnd
jb
retf
inc
jp
imul
push
js
dec
out
rcl
adc
imul
popa
ret
push
inc
mov
sbb
jecxz
clc
lahf
cdq
scas
repz
nop
and
xor
in
pushf
lods
mov
stc
bound
ins
dec
sub
mov
or
or
add
push
mov
stos
in
shl
xor
fwait
sub
jo
int
test
imul
ret
ins
pop
outs
sub
mov
int
fsubr
sub
mov
cs
popf
pop
nop
rcr
adc
ins
out
mov
mov
dec
or
(bad)
nop
xor
xchg
or
fimul
push
(bad)
loope
xor
lahf
sub
in
je
push
jb
jb
xchg
push
mov
nop
mov
loopne
mov
jbe
cwde
aaa
push
xchg
outs
sar
pop
lahf
fistp
mov
jmp
jl
pop
mov
or
push
sahf
mov
inc
mov
pop
cld
mov
in
popa
and
dec
jmp
pop
mov
push
xor
xchg
push
cli
push
mov
sti
sbb
add
xchg
ins
add
add
jmp
or
js
mov
sbb
mov
ins
jo
lock
adc
shl
dec
repz
pop
mov
test
enter
jmp
imul
mov
adc
stc
je
sahf
out
je
pusha
inc
mov
movs
adc
lods
add
shl
mov
arpl
sub
int
pop
pop
xor
repz
or
sbb
xor
xor
cwde
push
cli
add
inc
call
mov
or
xor
push
mov
popf
mov
fs
cmp
mov
paddb
mov
mov
inc
lds
pop
pushf
fst
and
pop
xchg
pop
jmp
lds
ret
repnz
jo
add
(bad)
lods
sub
sub
(bad)
lods
ins
xor
stos
hlt
xor
call
pop
lahf
test
scas
cmps
shl
mov
out
repnz
fs
cmp
movs
rcr
mov
mov
xchg
push
daa
jb
and
sar
das
mov
mov
test
out
fdivr
dec
in
xor
lock
pop
outs
sub
and
std
lods
push
and
pop
mov
pop
fidiv
cmp
inc
add
mov
or
(bad)
push
xchg
in
cmp
add
pushf
mov
imul
outs
add
js
(bad)
icebp
cmp
out
push
pop
cwde
pop
movs
push
leave
push
add
or
xor
stos
data16
sub
cmp
dec
(bad)
jne
es
(bad)
popa
cmps
mov
enter
je
pop
(bad)
xchg
cmp
and
pop
push
push
pop
xchg
sar
sti
jge
dec
add
repz
or
bnd
or
ins
sbb
jnp
adc
imul
lock
lods
xor
mov
dec
es
xchg
inc
xchg
nop
push
movs
or
scas
jns
in
int
or
daa
or
scas
shl
scas
jmp
scas
or
ret
nop
lds
inc
sub
scas
cmp
dec
sti
dec
sbb
imul
aam
mov
mul
mov
inc
jl
leave
in
call
pop
inc
dec
pop
pop
dec
cmp
xchg
imul
cld
or
aad
adc
cmc
sub
int
lds
outs
cdq
inc
inc
in
jp
mov
lods
sbb
adc
xor
and
mov
mov
xor
fwait
dec
mov
and
xchg
out
out
sub
mov
inc
and
scas
hlt
ins
push
xchg
leave
xor
adc
shl
mov
test
pop
icebp
dec
lods
ins
push
loopne
lahf
mov
push
push
loop
xchg
push
rcl
xchg
(bad)
mov
push
shl
and
fnstsw
pop
xor
mov
pop
ror
pop
test
sahf
aaa
push
cmp
cwde
jp
xor
inc
retf
sbb
mov
dec
scas
push
cmp
pop
pop
jo
sbb
pop
pop
xor
pop
icebp
and
sbb
push
loop
dec
mov
and
dec
inc
pop
mov
jns
(bad)
pop
out
stc
and
ficomp
and
jo
outs
cmp
cdq
push
neg
and
ret
inc
addr16
cmp
adc
xchg
icebp
gs
xor
mov
scas
pusha
lea
jg
fdiv
mov
mov
mov
mov
jg
jg
dec
mov
sar
inc
dec
movs
pusha
ret
bound
jmp
movs
push
and
popf
and
mul
jo
movs
and
outs
mov
or
out
data16
loop
rcl
xchg
lods
shl
jno
xor
jae
cwde
and
dec
jns
vprotd
stc
dec
add
pop
mov
mov
hlt
popf
push
out
aaa
add
cmp
scas
jb
cmp
mov
(bad)
(bad)
fist
add
pop
or
and
out
push
add
stos
ss
pop
xchg
mov
loopne
retf
fild
fisubr
inc
and
scas
repnz
push
(bad)
test
jno
jg
repnz
push
in
push
scas
test
pop
sub
mov
mov
add
lods
mov
fsub
jne
lahf
xlat
fwait
pop
jns
inc
sub
hlt
les
ret
sbb
imul
xor
sub
jns
push
pushf
cmp
cmp
cli
out
arpl
sbb
add
cdq
imul
das
js
pop
je
dec
mov
or
stos
loope
lds
sbb
fidiv
xchg
mov
mov
cs
adc
iret
mov
cwde
dec
inc
(bad)
xchg
cmc
push
add
lods
in
jl
into
mov
adc
ja
mov
xchg
sbb
pop
and
fist
lods
psubq
shl
push
mov
adc
cld
push
fwait
js
push
(bad)
jb
mov
addr16
sub
ret
lock
xchg
inc
push
add
lahf
add
lea
sub
mov
xchg
jbe
pop
lds
cmp
add
shl
mov
ins
xchg
ret
mov
and
push
xchg
in
dec
xchg
not
pop
or
cmc
mov
aad
dec
push
xchg
fst
push
ror
pop
jle
xchg
inc
push
mov
xor
adc
aad
imul
or
jmp
cmp
out
sbb
add
dec
add
mov
jns
in
aam
fwait
mov
shl
cmp
or
cs
mov
retf
add
lahf
ja
es
adc
mov
inc
push
and
dec
inc
stc
pop
stc
jl
cmps
in
stos
and
les
adc
and
push
lea
js
push
dec
int
dec
sbb
ffree
ror
es
iret
mov
aaa
inc
imul
imul
outs
in
adc
aaa
cmp
arpl
ret
cmc
loop
jmp
call
adc
dec
or
fcom
push
sub
mov
sbb
ja
out
jmp
ds
je
das
inc
mov
in
cmps
inc
adc
jecxz
sub
cmps
popw
and
mov
jo
mov
hlt
sub
mov
ret
mov
adc
popa
sbb
ret
imul
scas
fwait
adc
neg
add
sub
sahf
jne
and
out
add
jno
mov
mov
push
cmc
test
test
jecxz
inc
xchg
movs
aam
pop
pop
ins
nop
mov
dec
add
loopne
add
cmp
js
fcom
inc
push
add
mov
cmp
rol
ret
fwait
enter
xchg
test
inc
or
rol
cld
in
cmc
fld
cli
and
fidivr
mov
js
push
and
sbb
xchg
imul
dec
mov
cmp
mov
(bad)
stc
xchg
and
repnz
inc
fadd
jl
out
fmul
mov
push
call
and
adc
cmc
out
mov
inc
(bad)
lods
cwde
outs
stos
add
scas
popa
or
dec
or
cwde
dec
daa
ret
xchg
adc
enter
(bad)
sub
lock
mov
mov
push
jl
nop
mov
adc
jbe
sbb
inc
jl
stc
fcomp
mov
or
inc
mov
mov
dec
cmps
mov
mov
gs
lock
xchg
sub
ror
cld
ins
imul
pop
lea
cmp
cmp
jb
out
sti
repnz
lods
and
call
inc
test
push
jbe
lahf
les
fstp
lock
add
jne
mov
mov
pop
scas
xchg
movs
sub
cwde
(bad)
ins
xchg
sahf
mov
out
xor
sbb
test
pop
inc
mov
movs
aas
test
fs
loope
clc
test
fwait
xchg
jae
arpl
mov
cli
cmp
mov
jbe
mov
fstp
ds
std
ins
jns
mov
stos
loop
aam
aam
sub
jg
icebp
ds
nop
mov
in
mov
call
shl
push
fild
pop
pop
mov
and
cli
cld
(bad)
mov
jg
cmp
inc
fldcw
(bad)
test
adc
xor
mul
ret
push
cld
xchg
repz
hlt
cmp
sub
xlat
ror
mov
ret
fsub
mov
inc
nop
xchg
push
shr
ss
dec
add
loope
aaa
cmp
fcom
fdivr
jo
into
movs
jmp
out
pop
(bad)
lock
ret
adc
pop
sti
add
in
scas
imul
push
sbb
jmp
jno
inc
push
stos
xor
mov
cdq
dec
out
in
sbb
mov
or
inc
sbb
xor
jb
jge
clc
test
pop
ficom
cmps
jns
fs
aad
xor
jo
int
adc
scas
or
pop
sbb
cmp
xchg
push
fnstcw
mov
mov
loop
jbe
mov
pop
imul
movs
cmp
add
aaa
call
mov
or
mov
lock
sub
jmp
mov
aam
dec
mov
jb
test
jecxz
sbb
out
xor
rcr
xor
push
fdiv
cmps
xor
pop
sub
call
sbb
loope
xor
mov
xor
lds
cmp
test
mov
mov
and
pop
jbe
push
xor
imul
or
sbb
arpl
mov
inc
je
imul
mov
mov
test
data16
and
or
xor
push
mov
jecxz
out
imul
jbe
gs
pop
mov
sbb
xchg
push
cwde
call
sbb
(bad)
es
xor
gs
icebp
in
mov
pop
iret
ror
div
pop
add
mov
xor
cwde
mov
mov
cld
jl
or
xor
dec
sub
into
sti
test
mov
les
mov
sbb
and
add
cmps
cwde
lahf
pop
lods
xchg
aad
retf
inc
hlt
cdq
fdivr
xor
cmps
xchg
sub
lea
pusha
and
sbb
dec
cmp
mov
lds
fdivr
rcl
scas
pushf
out
pop
lock
shl
add
in
mov
mov
mov
aam
loope
fdivr
jmp
pushf
sbb
loop
fldenv
add
mov
cs
jb
out
or
mov
cs
mov
push
dec
push
jae
scas
xchg
adc
mov
es
aam
popf
mov
mov
mov
and
mov
inc
pop
es
jnp
retf
mov
pop
add
push
repz
add
xchg
ins
cmp
cmp
jmp
pop
shl
scas
das
dec
test
sub
xor
rcl
repnz
cmp
lds
and
loop
add
imul
xor
cdq
push
jae
dec
sbb
lock
test
inc
xor
mov
in
pop
stos
es
clc
sti
push
data16
clc
add
xor
dec
cmp
aad
pop
sbb
ss
adc
mov
dec
aad
enter
cmp
mov
out
xlat
mov
nop
fsub
xchg
mov
cmp
mov
xchg
lahf
sub
sbb
cwde
je
inc
and
xor
shr
imul
cmp
call
(bad)
sti
icebp
mov
sbb
clc
jle
mov
mov
in
lock
and
retf
add
(bad)
adc
xchg
gs
outs
add
mov
gs
test
movs
sbb
sti
call
out
clc
outs
cld
adc
xor
cmp
rcr
daa
jmp
das
inc
es
aas
aam
rol
jmp
in
in
mov
jle
jnp
and
jmp
dec
mov
rcl
fisub
push
mov
inc
sbb
push
enter
mov
lds
adc
adc
sub
shl
jmp
xor
cmps
mov
(bad)
xlat
sub
and
dec
(bad)
sbb
jmp
aam
jge
fldlg2
xchg
dec
push
xchg
push
inc
adc
mov
mov
inc
int3
dec
mov
sub
adc
mov
frstor
dec
cmp
xor
cld
push
pop
test
push
mov
lock
pop
mov
xchg
mov
mov
addr16
sahf
movs
jge
sub
and
push
add
and
add
cmp
nop
cmp
mov
pusha
adc
pop
rcl
popa
pop
add
and
out
adc
enter
scas
rep
das
or
loope
ins
push
mov
and
add
cmp
out
pushf
outs
cmp
dec
jp
arpl
enter
test
scas
cmps
adc
scas
ins
lea
jnp
dec
repz
aam
test
dec
and
in
in
aas
mov
cmp
in
dec
dec
adc
or
imul
lods
mov
ins
and
test
in
and
or
dec
dec
sahf
addr16
test
sahf
dec
pop
popf
sbb
adc
out
and
xor
sub
scas
psubusb
fistp
xor
daa
add
mov
pop
retf
mov
jle
cmps
mov
bnd
jp
test
dec
inc
mov
data16
mov
test
cmp
inc
loope
(bad)
popf
das
popf
pop
int
sub
div
and
ror
jno
psrad
icebp
cmp
hlt
and
or
cld
iret
mov
call
push
mov
adc
aam
dec
mov
push
mov
loop
jge
ficomp
sub
xchg
push
(bad)
mov
or
xor
loopne
(bad)
cmp
neg
xchg
pop
pop
retf
sub
or
call
loope
or
inc
(bad)
jge
xor
popf
and
outs
fcom
(bad)
pop
and
nop
adc
lock
stos
pop
adc
mov
not
test
xor
nop
sahf
fst
enter
add
dec
ja
xchg
les
pop
je
sar
outs
(bad)
mov
loope
push
sti
pop
es
shl
fabs
or
mov
leave
into
mov
mov
mov
or
mov
pop
and
inc
iret
pushf
sub
and
test
dec
and
fldenv
mov
fild
ror
pop
outs
dec
ret
or
xchg
adc
mov
fs
or
imul
loope
dec
sti
call
dec
ficom
pop
inc
cmc
cli
test
jno
cmp
sahf
xor
aaa
sub
cmp
dec
int
loopne
shl
inc
test
xor
inc
ins
addr16
push
cmp
jmp
icebp
adc
data16
retf
in
push
xchg
ds
push
jnp
(bad)
pop
(bad)
les
cmps
cmp
pop
loope
push
int
inc
xchg
cmp
fmul
push
pushf
sub
inc
inc
add
(bad)
cmp
mov
pop
or
dec
fst
push
out
repnz
cmp
jecxz
je
dec
mov
int
cs
sub
pop
xchg
xchg
mov
jl
sahf
push
sub
(bad)
aas
push
in
in
jb
pop
sub
stc
xchg
loope
jmp
xchg
pop
dec
cmps
leave
vpaddsb
or
les
dec
sbb
pop
pop
pop
ins
fnstcw
xor
stc
in
aad
cmp
lahf
in
mov
repnz
mov
mov
int3
cmc
adc
pop
inc
rcr
sbb
popa
pusha
aaa
xor
add
dec
arpl
jmp
cli
out
dec
dec
imul
movs
cli
xchg
dec
mov
in
pop
movs
rcl
xchg
mov
mov
mov
ret
xchg
(bad)
cmps
pop
sti
dec
or
retf
out
push
inc
fs
cmp
lods
lods
pusha
push
add
scas
es
cs
push
loope
xchg
jge
xor
mov
add
mov
mov
cdq
mov
pop
mov
arpl
cmp
add
adc
mov
mov
(bad)
inc
pop
jmp
imul
xor
in
or
aad
cmp
sbb
dec
push
pop
or
and
jnp
inc
sbb
out
mov
stc
fs
(bad)
test
repnz
pop
repz
jnp
mov
(bad)
shld
jnp
push
mov
push
xrelease
jno
add
cmp
pusha
pop
xchg
(bad)
mov
test
cmp
jl
pop
and
sbb
sbb
push
mov
mov
and
push
add
ficom
add
lods
or
lds
test
add
lods
test
or
addr16
imul
aas
mov
ins
ins
cmp
out
cld
xchg
fmul
adc
sub
sbb
int
jnp
repnz
xchg
mov
jno
repnz
outs
cwde
nop
hlt
iret
cmp
xchg
inc
aaa
inc
scas
sbb
pop
sub
out
(bad)
adc
cvtps2pi
add
or
inc
dec
arpl
(bad)
jle
ret
jg
add
or
mov
push
mov
and
loopne
cmp
xchg
rcr
inc
xchg
push
shr
xchg
jae
mov
idiv
arpl
retf
pop
xchg
push
jbe
mov
sbb
or
dec
test
and
std
(bad)
or
in
mov
test
test
mov
adc
xchg
call
pop
ins
cld
xlat
jne
jno
gs
bound
mov
stos
xchg
sbb
mov
push
aas
add
idiv
in
out
ret
mov
sbb
fidivr
popa
pop
xor
xchg
std
cmp
std
(bad)
movs
sti
dec
sbb
cs
jb
jno
mov
sbb
mov
jo
scas
nop
mov
push
mov
inc
scas
jmp
sub
push
and
push
int
push
out
mov
adc
in
in
into
push
sub
and
dec
xchg
xor
mov
ins
(bad)
or
xor
inc
dec
fimul
(bad)
loopne
inc
jno
xlat
in
mov
add
std
jg
sahf
(bad)
cmp
mov
and
cs
aam
and
and
mov
and
ins
shl
fisttp
rcl
stos
test
inc
push
mov
jno
inc
push
(bad)
test
mov
fstp
inc
push
mov
(bad)
out
call
out
jo
dec
xchg
mov
cs
inc
and
out
test
es
imul
dec
dec
sbb
push
pop
movs
inc
sub
ret
push
loopne
mov
add
cmp
fistp
movs
mov
call
add
ja
pop
add
stc
add
fadd
das
pop
loop
bound
cld
push
sti
hlt
and
pop
push
xor
add
add
jp
mov
loope
mov
add
into
xchg
dec
jp
test
xor
scas
dec
sbb
dec
xor
(bad)
mov
mov
push
nop
and
iret
in
(bad)
pop
pop
shl
cwde
push
push
test
mov
dec
leave
mov
out
cmc
or
inc
push
xchg
mov
and
movs
fsubp
mov
dec
mov
fnsave
cmc
jnp
or
or
and
adc
jp
out
inc
sbb
test
ss
and
mov
shl
lock
cmp
pop
xor
cmc
xor
ret
sar
adc
aad
je
cmp
sahf
cmps
mov
icebp
jnp
rcl
push
pop
mov
cdq
fistp
or
bound
and
xchg
cmp
inc
pushf
pop
ss
xor
push
jno
pusha
call
jns
adc
inc
cwde
popa
mov
sub
inc
mov
ins
std
push
push
dec
daa
mov
or
sahf
xor
lds
fisub
jg
sub
ret
in
pop
adc
shl
popf
fidivr
adc
inc
sub
dec
jne
adc
ds
dec
rol
push
repnz
pop
pop
lock
loop
and
sbb
in
movs
inc
or
xor
cwde
mov
jp
ret
ret
dec
movs
push
push
cmp
out
fsub
in
and
push
jmp
sub
mov
mov
jle
push
pop
mov
test
call
rol
and
cmc
out
test
mov
xchg
xchg
fwait
jp
nop
rol
mov
mov
sub
push
retf
mov
pop
into
into
nop
jnp
and
lahf
dec
jmp
cli
xchg
lds
xor
add
ds
sbb
mov
neg
jnp
mov
pop
in
rol
int3
(bad)
nop
(bad)
adc
sub
mov
xor
mov
ds
pop
ror
int
push
and
in
xchg
std
jmp
xlat
push
jno
out
inc
bound
sub
pop
adc
sub
movs
aaa
jg
in
mov
sub
ss
pop
(bad)
mov
add
repz
(bad)
lods
push
jb
pop
or
mov
(bad)
and
std
sbb
pop
cmp
ja
outs
mov
mov
add
cld
push
lahf
push
ret
scas
sub
push
dec
sbb
in
fwait
clc
adc
ds
aad
scas
nop
imul
dec
mov
test
and
push
popa
sbb
inc
movs
mov
test
sbb
adc
jnp
push
retf
stos
pusha
je
das
or
(bad)
fdivr
lds
leave
push
push
mov
cmps
sub
jo
aas
(bad)
pop
mov
sbb
aad
popa
test
mov
inc
xlat
jmp
and
or
and
inc
imul
dec
cmp
loop
call
xor
daa
dec
(bad)
lea
lahf
retf
dec
fst
add
adc
xor
sub
stc
cmp
loopne
imul
jbe
sahf
call
jle
sub
lahf
addr16
cli
sub
mov
in
or
out
test
adc
in
nop
push
xlat
es
pusha
out
jae
add
xchg
es
and
xchg
cmp
adc
fild
xchg
test
dec
xchg
sub
add
pop
mov
test
add
fbstp
xor
pop
test
ja
in
jl
mov
mov
jle
sbb
xor
les
xchg
jge
add
pusha
fsub
add
jnp
cli
fwait
mov
mov
cmc
arpl
imul
fcomi
fild
inc
fwait
lods
rol
repz
call
push
sbb
or
xchg
jp
aam
cmp
jmp
int
jmp
test
jmp
movs
std
daa
pushf
jae
push
ja
lods
lock
in
jmp
xor
add
stos
stos
sbb
jge
mov
cmp
sub
ret
or
xor
mov
loope
sub
and
loop
jns
adc
stos
in
out
lds
jnp
imul
hlt
pop
cwde
dec
ret
ret
inc
inc
jns
jns
mov
adc
cli
int
jecxz
cli
add
jle
push
repz
pop
cli
out
pop
xchg
and
lock
dec
(bad)
fild
jp
ins
je
mov
ins
mul
xor
ret
xchg
dec
and
aaa
retf
mov
jl
mov
inc
push
aas
or
fist
popa
cmp
imul
sbb
add
xor
mov
pop
cmp
xor
hlt
rcr
inc
xchg
aas
outs
leave
jmp
sti
dec
outs
or
test
movs
iret
xchg
loop
inc
mov
jno
or
and
fdiv
pop
push
or
rcr
fcmovne
scas
popa
in
cdq
pop
loopne
add
pop
outs
dec
pop
stos
push
dec
and
repnz
and
test
fisttp
and
lock
mov
sahf
mov
mov
repnz
int3
repz
movs
arpl
sub
or
mov
inc
(bad)
cwde
or
cwde
pusha
jbe
icebp
mov
stc
mov
cmp
cdq
mov
mov
hlt
jmp
out
cli
ja
xor
cmc
pop
sub
loop
push
outs
out
pop
loope
fidivr
arpl
sbb
push
pop
mov
xor
or
fdiv
push
xchg
dec
(bad)
lahf
jns
or
repz
(bad)
scas
jg
lods
fsubr
xchg
stos
mov
sbb
scas
and
sbb
ins
push
xchg
jp
pop
int
push
outs
cmp
add
lods
and
rcr
mov
xchg
fs
mov
inc
leave
jb
jmp
mov
push
inc
or
xchg
sub
(bad)
add
pop
icebp
xchg
push
jmp
leave
or
cmp
packsswb
inc
stc
(bad)
jne
lods
gs
xchg
and
dec
pop
outs
test
mov
je
lock
daa
cmp
add
fldenv
lahf
jmp
scas
sbb
xchg
retf
popf
ins
gs
xchg
nop
push
mov
out
or
pop
icebp
out
movs
push
(bad)
dec
push
jno
inc
into
mov
scas
test
dec
xchg
arpl
int3
push
fmul
pop
lahf
retf
(bad)
in
test
push
pop
pop
stos
xchg
sar
xchg
test
cmp
sub
enter
call
ins
stos
(bad)
jmp
push
sti
dec
pop
std
mov
jg
fwait
dec
pop
xor
sbb
xchg
sbb
pusha
rcl
dec
cmp
cld
xchg
rcl
sbb
les
xor
movs
push
sub
adc
pop
cmp
jb
sbb
or
test
mov
push
inc
jnp
sbb
jnp
cld
fwait
test
jo
aas
stos
dec
cdq
mov
icebp
adc
mov
das
lods
mov
mov
gs
imul
inc
jmp
mov
les
pusha
outs
leave
jns
daa
sub
mov
mov
mov
mov
sbb
jmp
(bad)
scas
cmps
retf
imul
adc
dec
or
adc
mov
xlat
and
fadd
jl
jle
xchg
jge
lea
imul
sub
xchg
imul
and
data16
pushf
in
xor
mov
shl
scas
arpl
and
and
rcl
(bad)
(bad)
repnz
pop
(bad)
call
(bad)
or
mov
inc
std
mov
cli
adc
jo
mov
sub
ret
(bad)
cmp
outs
test
pop
fdiv
sbb
xor
test
sbb
into
mov
mov
mov
js
mov
push
add
and
pusha
cs
push
es
xchg
sbb
push
sbb
fisttp
xchg
arpl
adc
mov
enter
lock
jbe
cwde
mov
pop
rcl
mov
mov
jo
cmps
iret
les
cmp
pop
add
jbe
xor
cmp
std
push
fild
inc
retf
pop
xchg
sbb
movs
xor
mov
jnp
mov
loope
add
call
and
ret
sbb
xor
adc
scas
inc
ins
sbb
mov
pop
lds
mov
ins
stos
or
xchg
outs
jle
mov
dec
mov
pop
mov
jecxz
inc
dec
or
xchg
sbb
pop
into
retf
test
out
and
mov
pushw
inc
sahf
sbb
push
pop
mov
out
inc
(bad)
and
pop
cld
sahf
in
jge
sub
pop
push
std
adc
clc
(bad)
bnd
dec
cmp
sub
mov
idiv
loop
cmc
inc
inc
push
test
arpl
mov
xchg
xchg
sub
test
mov
mov
and
fs
push
nop
xor
mov
jge
add
(bad)
push
data16
dec
test
stc
iretw
int
leave
mov
xchg
cmp
dec
adc
imul
repz
js
sub
xchg
sub
das
fldlg2
stos
push
and
pushf
xchg
int
push
pop
cli
ret
jl
loopne
int
daa
test
lahf
xchg
mov
inc
jg
add
jecxz
out
sbb
cs
popf
loopne
cld
lods
sbb
add
ret
push
mov
inc
pop
enter
cmp
sub
xchg
ficom
sar
lock
ds
bswap
cmp
pop
mov
dec
jg
adc
inc
pop
ror
out
jp
ret
jbe
inc
mov
push
stos
mov
jno
cmp
sbb
mov
aaa
test
pop
imul
dec
movs
mov
jecxz
ret
mov
ja
loopne
mov
pop
out
mov
jl
adc
inc
push
aas
and
repz
pushf
pop
jbe
jnp
retf
ret
icebp
dec
or
pop
lods
pop
mov
cs
out
dec
xor
fbstp
(bad)
adc
sub
inc
icebp
mov
push
cmp
or
cmps
(bad)
clc
aam
orps
adc
mov
sub
lds
mov
pusha
jg
jns
loope
dec
push
lods
jp
ds
mov
dec
or
or
es
mov
push
cld
mov
mov
lahf
dec
out
(bad)
pop
test
scas
ins
mov
sbb
in
mov
outs
dec
bound
fisub
ret
xchg
stos
inc
in
int3
adc
leave
test
(bad)
mov
mov
test
xor
loope
int3
or
mov
ins
mov
mov
ins
mov
(bad)
cdq
sub
clc
cdq
push
jno
popa
(bad)
mov
mov
ss
xor
pop
push
add
sub
fnstsw
push
xchg
pop
sub
out
push
and
add
mov
sub
pop
mov
(bad)
jp
dec
push
loop
pop
mov
cmp
jmp
push
mov
repnz
mov
cmp
cmp
dec
xchg
mov
inc
mov
mov
shl
mov
pop
cli
inc
call
mov
mov
mov
xor
loopne
inc
adc
cmc
cmp
mov
jno
and
sbb
cmps
jb
push
fnstsw
lds
mov
rol
int3
or
cmp
mov
pop
sub
imul
xor
pop
and
pop
cmp
fdivr
clc
dec
shl
cld
push
movs
gs
or
jmp
mov
pop
push
sti
and
mov
sbb
iret
mov
nop
inc
(bad)
and
stc
gs
jl
add
inc
sbb
or
idiv
sub
cwde
add
jbe
mov
dec
aaa
cld
pop
jo
xchg
test
out
shr
fsubr
dec
or
les
add
sti
xor
mov
in
test
jne
inc
sysret
cdq
xchg
test
pop
dec
mov
sub
loope
mov
adc
jle
or
ss
fs
jns
fisttp
xor
lea
data16
mov
and
xchg
push
xor
inc
ret
call
ja
and
add
mov
mov
movs
jnp
cs
mov
and
pop
imul
push
cmps
pop
jge
jp
out
pop
xchg
pop
or
xor
xchg
mov
push
inc
xor
xor
add
sti
xlat
mov
pop
test
pop
and
in
ds
cmps
ds
mov
ret
fs
fbstp
(bad)
sbb
mov
into
jno
lahf
aad
jge
pop
pop
dec
and
ret
sub
stc
xchg
pop
jo
xor
out
call
dec
pop
add
pop
dec
add
xlat
inc
mov
lahf
adc
jmp
pop
popa
arpl
fidivr
ja
icebp
jge
sbb
cmps
adc
and
and
dec
out
sbb
jae
call
jmp
and
stos
mov
imul
mov
cwde
addr16
imul
cmp
int3
mul
into
pop
push
or
jp
xor
repnz
out
fs
or
out
pop
repnz
mov
jmp
std
mov
sti
cwde
mov
sar
dec
sub
mov
(bad)
arpl
fist
dec
cmps
loope
xor
sbb
and
sbb
loopne
fstp
aad
mov
in
scas
hlt
call
stos
pop
dec
enter
adc
add
cli
icebp
aam
lods
dec
fld
sbb
mov
push
sub
sub
mov
mov
xor
sti
stos
(bad)
pop
(bad)
xchg
cmp
lock
and
sub
fnstenv
pop
pop
xor
xchg
mov
push
xor
popa
mov
rcr
cdq
sub
jo
and
pop
addr16
xchg
mov
mov
repz
xchg
(bad)
and
mov
xchg
dec
shr
pop
addr16
add
sub
cmp
xor
sub
cwde
dec
call
(bad)
cmps
sbb
xchg
(bad)
xchg
pop
in
fistp
xor
sar
sbb
jmp
cmp
push
cmp
jle
out
pop
ja
ss
jge
and
xor
sub
pop
les
test
out
shl
clc
jno
push
adc
add
jns
test
das
push
push
xlat
hlt
sub
fsub
fs
cld
(bad)
loope
jp
sbb
mov
pop
pop
push
iret
adc
mov
shl
outs
and
pushf
retf
push
shl
retf
inc
daa
jl
xchg
push
jno
push
mov
push
ret
add
add
cwde
or
pop
retf
inc
mov
inc
push
(bad)
(bad)
and
sub
mov
add
call
mov
fidivr
mov
push
hlt
push
jecxz
stos
int3
push
aas
lods
mov
sub
int
in
(bad)
cmc
xchg
mov
inc
retf
and
pop
sub
das
dec
sub
gs
fidiv
(bad)
in
retf
dec
adc
std
push
out
iret
push
fst
(bad)
ds
jno
ja
and
and
cmp
or
jle
sub
sub
sub
mov
add
sar
cmp
or
jno
push
inc
mov
shl
imul
popa
add
dec
cmp
xchg
leave
lods
test
dec
add
and
mov
cmp
mov
loopne
popa
cld
rcl
daa
ss
hlt
mov
movs
fsubp
jbe
push
jns
pushf
out
cmps
jecxz
imul
into
add
push
mov
int
jmp
repz
add
push
mov
rcl
mov
(bad)
pop
cli
mov
push
adc
cwde
sub
mov
mov
ret
inc
out
cmp
mov
arpl
sub
inc
mov
test
xchg
jle
xor
sub
jo
(bad)
fisub
mov
inc
inc
sbb
sbb
daa
retf
xchg
push
daa
mov
jmp
(bad)
pop
or
inc
xor
fnstsw
ret
push
pushf
inc
mov
dec
and
out
cmp
int
dec
dec
pmullw
popf
jnp
push
js
inc
push
pop
jecxz
stc
lds
rol
popa
enter
and
pop
mov
aam
add
lea
into
fnstsw
jge
or
inc
jecxz
push
inc
pop
sbb
aas
call
mov
adc
test
cmp
adc
loope
fstp
aam
pop
mov
call
ret
enter
xor
mov
inc
pop
or
or
out
ds
mov
test
jnp
jl
pushf
cli
jl
(bad)
jne
stos
fs
cdq
data16
arpl
ds
mov
rol
add
push
cmps
stos
adc
test
ins
out
dec
lock
into
adc
push
pop
(bad)
add
(bad)
repz
mov
cli
and
pop
fisttp
gs
ss
pop
mov
(bad)
(bad)
sbb
xchg
adc
push
cmps
add
paddsw
mov
and
inc
adc
icebp
or
jg
ss
das
or
mov
cwde
stos
mov
xchg
cmp
xchg
out
sahf
sahf
mov
retf
neg
or
ja
mov
adc
fs
mov
sbb
loop
pop
out
add
sbb
in
jb
add
add
inc
pop
and
shr
nop
aad
into
(bad)
dec
sub
(bad)
fild
cmp
mov
jmp
fidivr
ins
loop
int3
add
mov
bound
sub
(bad)
mov
jno
rol
adc
rcl
jnp
lods
outs
stc
push
fstp
mov
adc
xchg
adc
or
out
lods
sahf
int3
xlat
(bad)
xor
mov
xchg
ja
(bad)
rcl
lock
fidiv
dec
xor
aad
shl
pop
xchg
outs
mov
jb
cvttps2pi
mov
mov
repz
nop
mov
xchg
or
into
outs
xor
adc
mov
xchg
pop
(bad)
jmp
dec
mov
es
inc
push
sbb
pop
xlat
ins
les
and
lahf
inc
push
mov
or
jnp
scas
pusha
lock
retf
xor
inc
dec
int
xchg
imul
outs
cmp
ds
popa
pop
sub
lds
jg
mov
lahf
pop
fisttp
xor
cdq
cwde
sub
push
retf
push
mov
jb
sub
scas
shr
jns
cmc
mov
xchg
jne
push
paddsw
inc
aaa
dec
mov
sar
cs
ins
mov
into
sub
inc
xchg
fs
jae
mov
push
out
dec
sub
(bad)
ins
pusha
rol
(bad)
cmp
mov
fld
rcr
retf
or
xchg
mov
jl
rcl
jbe
inc
mov
cmp
add
mov
lea
mov
cld
mov
stos
in
loopne
lea
or
xor
aas
cmps
es
and
sub
shl
test
adc
sub
push
xlat
cmp
pop
and
mov
jmp
je
mov
cmp
dec
sub
jg
and
std
cmp
and
jmp
ja
cdq
imul
ins
test
fisubr
enter
pop
xchg
mov
cmp
jle
outs
jle
nop
mov
out
leave
repnz
mov
xchg
shl
mov
push
or
mov
in
cwde
les
push
xchg
dec
and
adc
fldcw
pop
dec
fcom
sub
xor
add
test
add
sbb
pop
fisub
js
fisub
push
fwait
push
loop
lods
js
adc
cmp
in
xchg
ss
or
mov
jg
push
rol
lods
cdq
int
pop
mov
inc
rol
sbb
into
jo
loopne
loopne
retf
pop
inc
push
mov
call
(bad)
loopne
adc
add
rcr
outs
or
inc
jo
xor
mov
lea
add
lods
push
mov
adc
scas
mov
cwde
xor
gs
jns
adc
pop
push
mov
pandn
xor
inc
test
jmp
sti
(bad)
cmp
outs
stos
add
aas
(bad)
mov
cmp
pop
jae
push
jle
jnp
in
jl
cmps
pop
jo
pop
aas
cmp
dec
(bad)
in
fld
xchg
adc
mov
jbe
les
add
sbb
ds
fsub
dec
mov
inc
mov
ret
xchg
in
nop
out
inc
push
(bad)
pop
mov
mov
pop
mov
mov
lods
lods
mov
sbb
(bad)
sar
hlt
or
adc
retf
fcomi
xor
and
repnz
cdq
fwait
xlat
sbb
aam
xchg
mov
and
or
or
(bad)
stos
mov
sbb
pop
xchg
bound
cld
xchg
clc
stos
aas
xor
push
inc
mov
cmc
pop
je
ins
nop
mov
dec
or
xor
sar
ret
ins
mov
pusha
sahf
dec
(bad)
pop
cmp
xchg
mov
pop
cmp
adc
jmp
les
fwait
shl
inc
cmp
add
push
jmp
scas
test
dec
pop
test
dec
inc
lahf
push
add
mov
jle
ins
test
in
icebp
mov
jb
cmp
sbb
test
push
and
imul
aad
push
mov
adc
xchg
pop
and
fidiv
shr
mov
dec
jmp
clc
dec
push
fcmovne
icebp
data16
add
lods
cmp
lahf
aad
(bad)
sbb
pop
test
push
lds
mov
rol
shr
popf
jbe
cmp
cmp
mov
push
cmp
mov
jae
xor
ss
(bad)
jb
fcom
dec
in
repnz
or
cmps
fild
mov
mov
ror
add
lea
icebp
sub
push
xor
or
outs
pop
mov
test
(bad)
inc
inc
retf
dec
inc
and
push
fbld
fist
retf
repz
rol
push
jl
cmps
jo
pop
mov
sbb
retf
(bad)
push
aam
push
int3
add
or
inc
stos
popf
shl
cmp
xchg
mov
arpl
into
test
(bad)
std
enter
icebp
xor
jecxz
and
xor
adc
(bad)
pop
ret
jns
xor
inc
mov
ds
dec
mov
mov
js
xor
push
ins
retf
jmp
aam
cdq
(bad)
lods
outs
call
adc
cmp
push
int3
jb
and
xchg
sbb
dec
sbb
(bad)
dec
sbb
push
xchg
inc
test
ds
leave
mov
cmp
ins
mov
popf
mov
(bad)
push
je
mov
shl
xchg
jno
adc
das
dec
pop
xor
ds
int3
dec
pop
repnz
xchg
neg
fdiv
hlt
rcl
xlat
inc
in
mov
fucom
gs
and
or
push
xor
xchg
cmps
sbb
jmp
leave
das
dec
in
sar
shl
enter
and
xchg
pop
xchg
pushf
xor
or
out
shr
or
(bad)
sub
pop
mov
inc
inc
imul
imul
cmp
add
daa
fidivr
xor
and
cmps
jg
dec
or
mov
or
pop
mov
and
inc
stc
sub
sbb
mov
jl
(bad)
sbb
dec
xor
sub
in
aaa
in
ror
xchg
jo
not
ja
add
jp
jbe
xlat
cmp
mov
(bad)
out
jmp
ret
push
stos
mov
adc
add
push
lahf
xchg
sbb
rol
sub
scas
aas
loope
mov
stos
mov
push
or
aas
xchg
rcl
iret
inc
sub
mov
or
fnsave
mov
push
div
mov
xor
icebp
fnsave
ss
mov
fidiv
cmp
and
(bad)
aaa
scas
shl
int3
pop
sub
loopne
and
sbb
loope
mov
icebp
in
pop
cmp
jne
pop
inc
xor
retf
mov
cdq
xchg
jp
and
retf
xor
push
fnstcw
xchg
push
cmp
fs
adc
ror
xchg
or
movs
int
mov
int3
cli
or
jno
adc
xchg
inc
jmp
sbb
sub
imul
pop
pop
(bad)
lods
mov
sub
call
in
(bad)
xchg
fimul
sbb
ror
bt
fbstp
pop
jge
fld
jp
pop
fbstp
jae
pop
test
lods
fwait
push
mov
push
js
xchg
(bad)
(bad)
adc
test
xor
push
push
inc
mul
mov
inc
rcl
xchg
pushf
push
push
pop
mov
loopne
into
cmp
sub
retf
jmp
push
in
cmp
jge
imul
inc
mov
int3
ss
adc
(bad)
repz
adc
mov
dec
ret
jns
jg
push
inc
cmp
mov
dec
pop
adc
pusha
aaa
mov
mov
sbb
cmp
and
jmp
iret
into
and
and
ret
fwait
mov
sub
test
mov
sbb
xor
dec
dec
scas
jmp
ss
adc
add
jecxz
pop
xor
ja
push
outs
jne
jnp
pop
adc
movs
gs
ss
pop
aad
push
data16
sbb
xchg
js
push
sahf
jl
icebp
scas
mov
add
xor
scas
int3
and
sahf
addr16
out
inc
and
pop
in
aas
mov
(bad)
imul
mov
outs
mov
leave
ins
adc
das
fs
xchg
sub
mov
mov
inc
sub
sbb
jge
mov
dec
adc
push
daa
and
je
adc
sbb
inc
bound
sbb
cld
push
push
push
pop
add
jae
imul
add
icebp
js
add
xchg
cs
sub
int
xchg
cld
inc
inc
push
mov
pop
(bad)
xor
dec
mov
xchg
mov
ror
inc
test
and
je
data16
or
sub
clc
dec
jbe
jmp
or
inc
std
mov
lea
adc
dec
(bad)
retf
hlt
inc
adc
push
pop
mov
pop
dec
inc
test
out
xor
aas
f2xm1
lods
mov
ret
in
aam
cmp
retf
out
and
leave
mov
pop
jmp
cmp
call
int
mov
inc
jg
sahf
xchg
fcom
imul
inc
ficomp
xchg
mov
push
xor
sbb
daa
push
dec
in
movs
ds
or
sbb
xor
jp
div
pop
not
(bad)
push
shr
xchg
sub
mov
repnz
xchg
stos
dec
popf
into
cmp
inc
pop
add
pop
jo
out
inc
popf
sbb
das
jno
mov
test
sbb
dec
jp
into
dec
idiv
sub
xchg
pop
nop
cmc
cmp
pushf
ins
jbe
clc
sbb
ficom
push
xchg
mov
push
sub
lea
test
adc
icebp
movs
bound
push
ret
add
and
sub
ins
and
out
dec
or
mov
lea
cs
imul
scas
mov
pop
(bad)
mov
push
(bad)
aad
pop
pop
mov
pusha
leave
arpl
xor
in
push
pop
add
push
jl
jmp
dec
sti
lock
aam
push
(bad)
and
xor
push
aam
jle
xchg
cmps
mov
xchg
mov
ins
outs
sbb
xor
cdq
out
push
rol
add
mov
xlat
jp
(bad)
stos
mov
mov
and
jb
mov
repz
cli
mov
leave
xor
push
in
fwait
inc
dec
(bad)
fdivr
jmp
ret
pop
mov
xchg
or
sub
imul
repnz
push
add
pop
mov
out
xchg
mov
dec
lock
mov
(bad)
mov
lea
adc
movs
lods
icebp
jae
cdq
sub
xchg
inc
push
adc
js
enter
jae
das
xchg
and
pop
stos
test
test
js
adc
dec
retf
fmul
fisubr
cmp
fisttp
into
js
retf
mov
rol
aam
jmp
fcomp
test
mov
lods
push
mov
mov
repz
mov
push
int3
push
mov
jmp
jo
les
sbb
in
sub
outs
xchg
div
xor
push
mov
std
jnp
lahf
adc
gs
lea
mov
pop
cmp
add
jbe
fcom
repz
and
retf
fwait
addr16
adc
aas
(bad)
rol
cmp
mov
cwde
lods
and
pcmpeqd
dec
push
pop
dec
jl
sub
test
stos
mov
rol
mov
mov
push
cmps
sar
sub
je
out
popa
and
add
push
lahf
cld
sbb
push
inc
sbb
cmp
inc
out
pop
imul
lds
and
cdq
mov
mov
inc
pop
cmp
jp
mov
test
push
out
minps
sbb
pop
fist
cmp
in
(bad)
and
adc
adc
push
xchg
push
cmp
movs
xor
push
jbe
jmp
inc
xor
lea
repz
call
ins
in
pop
test
jmp
xor
fidivr
sahf
mov
fnstenv
xchg
pop
fild
shr
(bad)
lods
pop
inc
mov
sub
js
mov
sub
xor
adc
jno
div
jno
lods
inc
jmp
(bad)
or
bound
cmp
xchg
cdq
dec
dec
ins
ret
push
or
or
into
imul
test
jmp
adc
xchg
(bad)
jae
xor
ss
sub
pop
push
xchg
clc
arpl
nop
fwait
jge
xchg
jo
mov
jp
inc
add
mov
cmp
inc
sbb
(bad)
out
push
fwait
jle
out
mov
movs
cmp
inc
inc
jmp
scas
mov
sbb
bound
push
loope
and
test
push
mov
fldcw
inc
xor
add
push
fild
retf
lock
or
cld
pop
(bad)
icebp
xchg
and
mov
add
aam
retf
jno
enter
adc
sub
pop
lea
pop
pushf
mov
repz
(bad)
jnp
xor
outs
imul
dec
cmps
xchg
mov
or
das
jecxz
lods
adc
int3
jnp
rcl
lods
sbb
fbstp
mov
fwait
div
or
or
fxch
sahf
mov
xchg
cli
pop
js
(bad)
and
jmp
stos
xchg
out
in
fwait
cli
aaa
fwait
jecxz
cmps
push
adc
push
cmps
xor
ins
std
adc
mov
ja
ja
sahf
jbe
cwde
dec
sbb
add
scas
repz
cmp
jo
fimul
test
pusha
pop
mov
lahf
arpl
sub
pop
dec
rcl
cmpps
sub
or
adc
sub
pop
mov
sbb
pop
and
jbe
adc
inc
ret
ret
jbe
and
sbb
dec
and
push
shl
sahf
add
add
pushf
fst
ds
(bad)
dec
fbstp
test
ins
mov
je
fld
fimul
xchg
mov
dec
bound
mov
pop
test
loope
push
mov
xchg
arpl
mov
into
out
cmp
es
jmp
dec
fadd
retf
mov
mov
out
mov
xchg
sbb
sub
fistp
xchg
xor
xor
movs
int3
rcl
in
add
bound
repz
repz
popa
aam
fidiv
mov
xor
xlat
sar
scas
into
xchg
into
pop
mov
mov
fsubp
push
adc
pop
push
loope
cli
add
stos
jmp
pop
arpl
fimul
retf
jae
enter
xor
dec
je
xor
dec
jg
dec
cmps
cdq
inc
(bad)
mov
test
and
sti
rcl
fsub
call
add
mov
and
(bad)
enter
xor
pop
lods
inc
pop
ins
sbb
xchg
ficom
mov
add
mov
sbb
jb
mov
sbb
inc
push
jbe
mov
fs
aas
(bad)
and
dec
fbld
(bad)
pop
test
sbb
and
das
pshufw
rcl
popa
xor
lock
push
add
mov
mov
xchg
or
add
mov
dec
daa
fnsave
sbb
pop
xchg
cmc
lock
cmp
clc
fwait
retf
cmc
xor
and
pop
cdq
dec
jbe
xchg
add
aad
push
ret
push
or
loop
icebp
fisub
stos
(bad)
arpl
dec
sbb
xchg
and
mov
mov
mov
jne
xchg
imul
test
mov
in
fmul
fs
leave
pop
jp
popf
(bad)
sub
aaa
test
outs
daa
xor
and
pop
sbb
loopne
in
jge
movs
mov
aad
jmp
in
imul
xor
dec
ss
mov
cmps
sub
std
lahf
data16
push
inc
bnd
push
jmp
movs
nop
sbb
xchg
or
pop
int
dec
jne
sub
pop
dec
dec
sbb
or
xchg
and
stos
fcmovnu
add
leave
ret
lea
inc
ds
mov
add
mov
mov
je
in
jle
mov
cmps
cdq
jo
mov
inc
es
lods
jns
cmp
out
add
pop
adc
repnz
cwde
popf
push
or
cmp
or
or
xor
add
fisubr
xor
mov
sub
adc
xor
(bad)
lods
(bad)
xor
add
adc
fmul
clc
xor
repz
mov
dec
addr16
(bad)
test
leave
or
cmps
pop
imul
icebp
in
fisub
mov
shr
jne
adc
mov
and
xlat
or
(bad)
xlat
pop
in
and
adc
xor
xor
sar
push
sbb
push
imul
cmp
test
cmps
sbb
test
outs
std
xchg
cs
addr16
(bad)
je
outs
jnp
ins
fdecstp
cmc
cmc
(bad)
cld
test
add
mov
inc
and
jae
loop
inc
mov
iret
popf
xchg
ss
mov
adc
fwait
sub
je
mov
pushf
push
in
jb
lods
xor
inc
inc
mov
out
push
int
inc
ret
sar
std
lods
mov
inc
push
pop
fisubr
and
das
mov
xlat
xlat
fcom
mov
stos
ret
mov
inc
xchg
je
fisttp
sbb
div
or
test
cmp
add
test
sbb
out
push
mov
outs
dec
and
xor
xchg
adc
jns
xor
add
xchg
mov
stos
and
aam
sub
(bad)
movs
jno
jbe
push
cwde
xor
mov
retf
or
or
movs
cmp
mov
mov
enter
dec
pop
jno
mov
push
mov
stos
cmc
in
jecxz
dec
inc
lods
jcxz
pop
lods
push
repnz
cli
aad
and
mov
aaa
xchg
ror
mov
imul
push
jno
push
test
dec
xchg
xchg
repz
sahf
dec
aas
cmps
mov
test
int
lahf
push
push
xchg
cdq
das
out
push
push
or
retf
pop
xchg
fnstcw
push
call
icebp
out
shl
inc
jo
push
inc
test
fcmovu
jb
fadd
dec
out
ja
push
aad
out
retf
pusha
sub
cmp
cmp
loopne
pusha
fidiv
pop
xor
sahf
push
loope
addr16
cdq
push
sub
inc
xchg
adc
aad
and
pushw
mov
jae
shr
mov
cmp
in
idiv
shr
scas
mov
mov
xchg
pop
pop
jecxz
ds
cld
shl
jae
inc
cmp
sub
jne
lahf
test
mov
rcr
mov
adc
push
or
ja
cmps
mov
dec
pop
movs
xchg
mov
nop
adc
sbb
sub
push
fld
mov
jbe
clc
sub
loope
ret
es
push
jmp
mov
in
enter
sub
mov
lahf
pop
imul
and
jne
ins
push
or
leave
push
dec
mov
imul
cmp
inc
mov
push
lods
dec
mov
and
rcl
sbb
lods
sbb
addr16
hlt
std
inc
add
dec
lea
inc
lods
and
gs
or
pop
pop
jmp
jge
push
test
add
inc
jae
mov
arpl
fiadd
mov
push
push
xchg
pusha
in
gs
mov
mov
pusha
cmp
or
push
ret
scas
scas
cmp
scas
xchg
adc
sar
cmp
cli
pop
sbb
inc
push
call
mov
inc
rcr
sub
ds
test
cdq
xlat
adc
cli
stc
call
outs
(bad)
movs
sub
retf
loope
mov
arpl
pushf
cld
fwait
shr
vpcmpeqw
in
mov
cmp
sbb
rol
cmps
sbb
loope
xor
test
out
rol
ret
stos
test
push
mov
or
push
test
sbb
mov
es
movs
int3
or
repz
push
cmc
sbb
lods
adc
pop
or
xor
or
or
add
push
and
nop
repnz
sub
ror
mov
ffreep
adc
add
pop
arpl
fnstenv
mov
sbb
cmc
mov
mov
ffree
lea
movs
scas
xchg
jne
pop
adc
loope
cwde
in
out
mov
outs
add
pop
popa
mov
leave
cmc
inc
repz
dec
xor
leave
shr
jg
mov
or
or
out
test
cmp
dec
cmp
fbld
sbb
jmp
jo
xchg
add
neg
int3
xchg
outs
iret
pop
in
shl
mov
dec
xchg
cmp
mul
xchg
ret
dec
outs
jp
les
sti
mov
push
mov
movs
dec
sti
sahf
(bad)
push
inc
shr
cmc
pushf
ins
add
dec
les
sub
jmp
pop
jae
inc
adc
cli
bound
mov
scas
adc
sbb
jle
popa
sar
push
daa
daa
pop
sti
xchg
xchg
fcom
in
cmps
or
outs
mov
les
mov
inc
xchg
not
jge
lods
adc
aad
dec
enter
sahf
sti
clc
neg
repz
push
jl
mov
in
repz
xchg
xchg
adc
ins
into
cmp
aam
std
test
les
movs
cmp
movs
mov
call
ss
loope
xor
mov
push
(bad)
es
cli
cmp
nop
add
mov
cwde
dec
mov
mov
mov
shr
pop
mov
inc
pop
mov
jle
shl
call
call
mov
pop
adc
dec
jns
enter
sbb
ficomp
stos
call
inc
es
stc
xchg
ret
push
(bad)
outs
cmp
pop
cmps
cmp
dec
or
mov
inc
(bad)
lock
dec
jle
loopne
push
mov
fnstsw
div
jge
sti
add
out
cwde
jg
jmp
cwde
aam
mov
gs
adc
mov
movs
cmp
mov
imul
test
fstp
pop
jle
sbb
add
sub
les
mov
inc
cmp
pop
dec
cs
pushf
mov
aam
jp
xchg
push
push
dec
add
rol
dec
inc
out
jno
loopne
pop
(bad)
push
mov
ret
cmp
adc
popf
cmp
mov
repz
pop
inc
repnz
mov
cld
pop
mov
(bad)
sbb
gs
xchg
dec
addr16
sub
add
xor
popa
bound
sbb
cwde
out
add
ins
pusha
es
(bad)
(bad)
ins
out
sahf
(bad)
(bad)
fs
scas
mov
adc
or
lds
add
and
push
cdq
pop
add
mov
cmp
out
jbe
rcr
mov
(bad)
jmp
lods
(bad)
mov
xchg
outs
jno
(bad)
int
mov
pushf
jecxz
ror
into
xchg
mov
jge
scas
sti
es
leave
xchg
scas
dec
test
inc
rol
clc
or
push
mov
addr16
sbb
cmp
and
cwde
mov
iret
mov
call
and
ror
or
mov
add
jmp
imul
inc
ds
and
dec
push
pop
shl
mov
jnp
std
xchg
mov
pop
jp
outs
mov
stc
sub
and
leave
inc
fisubr
test
(bad)
(bad)
fwait
sub
inc
js
inc
pop
fcom
push
retf
mov
iret
lods
call
pop
inc
movs
lds
sbb
mov
bound
xchg
icebp
enter
and
jge
xor
out
sbb
gs
push
mov
test
jb
pushf
sahf
mov
mov
shr
stos
nop
lea
or
mov
dec
pop
call
jnp
addr16
pop
enter
mov
mov
shl
xor
and
mov
sahf
bound
cmc
(bad)
fisttp
retf
(bad)
bound
div
jns
sbb
jmp
mov
sub
cdq
mov
inc
cmp
sub
shl
push
je
jle
sub
daa
dec
sub
adc
loope
fldenv
imul
jp
and
dec
pop
xchg
out
cdq
and
add
bound
cmp
adc
dec
or
inc
adc
movs
div
test
cmc
rcr
add
and
pop
add
pusha
cmp
xchg
or
jle
bnd
into
into
arpl
jecxz
test
pop
sbb
sbb
adc
and
mov
loope
jne
cld
int3
fstp
mov
sub
dec
popa
push
adc
cmps
(bad)
mov
or
repnz
xchg
pop
fcomp
mov
add
stc
test
adc
aas
pop
adc
or
dec
jns
sub
jmp
scas
pop
jg
mov
xchg
loope
hlt
push
xchg
add
sub
cli
outs
push
(bad)
jmp
pop
fabs
or
(bad)
or
jge
sbb
xchg
aaa
scas
rol
lods
scas
shl
aam
sub
ret
push
jp
jecxz
and
adc
mov
gs
or
push
jae
xchg
inc
call
jmp
pushf
cmp
loope
out
int3
mov
rol
mov
cmps
dec
mov
xacquire
pushf
sahf
mov
and
out
clc
and
jb
sar
int
jmp
aam
adc
das
jb
icebp
jmp
jb
out
pushf
push
jb
fmul
push
push
loope
xor
loop
xchg
and
or
hlt
sbb
imul
dec
pop
stos
lahf
cmps
cs
outs
sbb
push
xchg
leave
push
xor
dec
retf
mov
movs
in
dec
mov
mov
add
jns
jo
add
ffree
dec
fidivr
fwait
cmp
es
xchg
jg
sub
outs
mov
mov
and
jecxz
cmp
(bad)
aas
pop
xor
adc
add
int
cmp
cld
sub
mov
pusha
xchg
push
pop
lea
pop
jo
fimul
gs
fst
pop
and
movs
dec
jle
in
dec
(bad)
xor
mov
pop
mov
mov
cmp
xor
ror
pop
inc
push
xor
scas
test
div
dec
stos
repz
xlat
je
stc
xchg
(bad)
add
or
add
pop
call
mov
loope
sbb
addr16
push
mov
lahf
push
push
xor
mov
fdivr
pop
(bad)
popf
lahf
xchg
fs
lahf
sub
inc
shl
setg
nop
sbb
or
cld
(bad)
sub
jp
mov
fist
out
mov
mov
aam
imul
out
add
out
inc
sbb
mov
(bad)
fcmovnbe
cmp
out
je
cmps
pop
retf
push
or
push
inc
push
cdq
xchg
out
push
xchg
aad
or
movs
xchg
lds
mov
inc
inc
jp
xor
or
sub
pop
movs
push
call
push
rol
ins
stc
data16
inc
pop
lea
sub
mov
xlat
mov
mov
mov
dec
push
xchg
mov
clc
aaa
or
pop
test
repz
shr
rcr
loop
and
inc
jmp
mov
pop
xchg
add
xlat
pusha
adc
int
movs
repnz
bound
or
fist
xchg
aad
mov
cmps
inc
je
push
xchg
cmp
sbb
gs
in
pop
mov
mov
ftst
fcom
jle
push
mov
xchg
sahf
mov
ror
rcr
and
or
jg
cld
aad
int
iret
push
pop
dec
daa
ret
mov
test
xchg
les
int3
call
add
rol
inc
pop
xchg
adc
nop
rcl
jle
add
jo
cmp
pop
mov
lods
sub
mov
jl
sub
ss
pushf
nop
xor
bound
cld
imul
sahf
push
loopne
add
cwde
pop
push
je
dec
or
les
dec
and
shr
dec
pop
sub
(bad)
loop
push
jge
adc
mov
(bad)
mov
add
lds
dec
int
sbb
fwait
jle
jmp
push
lods
(bad)
loopne
pop
cmp
jle
and
movs
pop
fimul
ins
shl
popf
in
jmp
jg
dec
stos
mov
(bad)
mov
jnp
xchg
test
sub
inc
out
pop
rol
xor
in
jns
movs
lock
inc
vmovhlps
or
mov
bound
jl
xchg
test
add
lds
loope
nop
nop
dec
push
or
cdq
ror
xor
movs
stos
add
outs
xor
adc
mov
clc
mov
dec
mov
int3
fisttp
xchg
les
adc
xor
pusha
sub
xor
jo
je
sub
add
dec
in
sbb
sub
mov
rcr
and
ror
mov
arpl
mov
dec
jno
dec
test
or
loopne
xor
data16
xor
(bad)
test
mov
stc
sub
dec
mov
mov
push
jns
movs
dec
jecxz
cs
imul
push
(bad)
xor
jmp
lds
cmps
outs
or
sub
xlat
aad
push
js
jl
fnstcw
fisttp
cmc
push
movs
scas
xor
or
or
xor
xchg
push
adc
imul
(bad)
jp
cwde
movs
fstp
scas
cli
lahf
add
cmp
sar
and
mov
adc
arpl
mov
dec
jmp
hlt
adc
fisttp
test
and
mov
hlt
xor
in
call
scas
mov
ret
sbb
sub
add
and
sbb
inc
mov
adc
xchg
push
mov
push
ret
clc
xchg
inc
shl
aad
cmp
cwde
rol
in
repz
jne
sbb
dec
mov
push
xor
dec
bound
sti
gs
sub
mov
xchg
or
push
inc
ffreep
push
mov
cwde
lock
xor
hlt
xchg
sub
call
add
das
cmp
in
movs
jne
jbe
out
enter
loop
in
and
dec
pushf
sbb
jecxz
es
es
popf
rcl
(bad)
int
aas
inc
dec
xchg
lea
xchg
push
int3
clc
push
test
sbb
adc
scas
push
pop
cmps
pop
and
scas
dec
adc
sub
mov
mov
cs
mov
cmp
fs
scas
or
mov
ja
cli
ins
fcom
movs
(bad)
daa
add
inc
add
pop
(bad)
(bad)
scas
mul
adc
aam
xorps
add
xor
jne
jmp
mov
push
mov
outs
mov
jmp
enter
inc
pop
pop
inc
es
call
call
and
icebp
(bad)
push
nop
inc
xchg
adc
push
dec
pop
aad
test
or
outs
in
dec
dec
mov
xor
ret
retf
lock
inc
iret
add
fwait
test
push
adc
shr
clc
xor
mov
icebp
(bad)
inc
out
ror
mov
test
jns
and
or
push
shr
xor
cmps
sbb
push
call
sub
es
ror
dec
mov
(bad)
out
int
dec
inc
inc
popa
inc
outs
sub
fld
mov
pop
xchg
(bad)
out
mov
xor
push
test
fwait
push
fwait
or
mov
and
xchg
stc
sub
and
jl
mov
rol
shl
stos
pop
inc
add
dec
mov
loopne
pusha
mov
std
shl
nop
lds
das
in
sub
and
sbb
ficomp
popf
scas
or
clc
push
mov
mov
(bad)
mov
retf
sub
stc
add
sbb
adc
or
xor
clc
test
std
mov
sbb
pop
and
test
pusha
int
push
ret
cmps
push
add
fisubr
jns
outs
sbb
test
adc
jbe
fwait
pop
sub
adc
pop
std
fild
and
pusha
div
cld
in
idiv
mov
and
cmp
or
lods
pop
int
lods
cmps
test
call
add
sub
inc
xor
push
std
add
ret
adc
fnsave
cmps
or
push
sub
jnp
lahf
jns
mov
jae
out
push
add
push
inc
dec
cli
mov
stos
inc
push
and
(bad)
fdiv
call
ja
shl
xchg
mov
and
xor
cmp
push
loop
mov
shl
push
xchg
pop
mov
stos
xchg
out
adc
mov
aas
mov
mov
in
jno
dec
jne
push
sahf
je
sbb
sub
paddq
arpl
push
push
cmp
fidiv
jbe
fcom
push
inc
inc
fnstcw
fwait
jge
jns
(bad)
imul
xor
aam
rol
cmp
pop
xor
adc
std
sbb
ins
jo
in
cs
repz
imul
adc
das
cld
mov
out
jmp
in
jb
xor
adc
cmp
rol
mov
hlt
into
test
fcomp
out
out
jmp
pop
lods
jg
and
movs
mov
data16
cmp
jmp
cwde
xor
test
mov
out
mov
aaa
rcr
(bad)
rcr
pop
gs
enter
pop
sub
std
xor
fisttp
shl
dec
pusha
add
fstp
sub
mov
mov
mov
sub
dec
fcmovnb
sbb
ins
mov
idiv
lea
out
inc
jge
adc
cdq
js
mov
jl
push
mov
cmps
sub
adc
es
jae
icebp
call
inc
xor
pushf
add
xchg
cmps
xchg
das
push
bound
fdivr
(bad)
adc
jmp
clc
xor
icebp
aad
adc
das
aaa
push
out
and
inc
sub
das
out
push
mov
inc
add
jg
dec
je
mov
clc
and
stc
pusha
test
mov
aaa
mov
mov
fwait
pop
int
retf
pop
push
jl
ficom
jbe
retf
and
xor
jno
int3
movs
je
push
inc
leave
mov
retf
ds
popf
dec
jb
pop
sbb
push
push
inc
inc
retf
sti
jl
ds
loopne
pop
imul
dec
or
xor
inc
pusha
or
fiadd
and
mov
cmp
jo
pushf
push
rsqrtps
test
hlt
les
cmp
mov
mov
cmps
fld
sub
xchg
jne
jmp
iret
pop
imul
call
jge
rol
jmp
jbe
or
mov
js
and
test
sbb
xor
data16
in
cmp
(bad)
call
mov
pop
xchg
sub
xor
repnz
rcr
push
cld
das
jbe
pusha
dec
in
xchg
sbb
icebp
xchg
push
lock
call
repnz
and
xor
and
outs
stc
mov
adc
mov
sub
fs
pop
fiadd
int
sub
mov
push
cld
xor
jo
(bad)
(bad)
data16
jmp
test
mov
lds
dec
dec
sbb
xchg
daa
cmp
in
sbb
and
mov
xor
fwait
dec
cwde
jl
xor
mov
cs
jmpw
out
xchg
xchg
leave
arpl
mov
retf
xor
das
xchg
mov
push
jae
lsl
popf
lods
sbb
sbb
mov
inc
in
ret
fst
lahf
sub
mov
lahf
js
mov
enter
gs
xchg
pop
push
inc
mov
mov
or
out
out
pusha
repnz
(bad)
rol
bound
mov
mov
scas
pop
loopne
sub
aaa
mov
mov
imul
pop
clc
cmp
in
pop
jae
je
mov
push
sahf
sahf
scas
xchg
(bad)
fldcw
mov
ds
lds
push
jmp
pop
xor
add
cmc
test
sbb
sahf
daa
aaa
sbb
mov
sub
pushf
sahf
icebp
add
mov
inc
iret
je
xchg
jle
jmp
(bad)
mov
xchg
mov
xor
pusha
(bad)
push
adc
shr
sbb
std
mov
mov
call
jp
movs
push
sbb
xchg
fcom
mov
push
in
push
adc
xor
dec
out
shr
mov
test
out
push
jmp
pop
sahf
dec
xor
inc
mov
repnz
pop
cld
sub
bound
sub
dec
adc
into
push
rcr
xchg
leave
cwde
sbb
loop
fist
cmp
retf
adc
sbb
out
inc
fild
mov
mov
pop
and
jns
daa
jbe
xchg
mov
sti
push
pop
movs
and
xchg
test
jmp
jnp
cwde
dec
mov
mov
mov
and
push
dec
in
pop
fucomp
sbb
ins
mul
cmovs
dec
bound
mov
push
fsubr
sub
jmp
add
ds
add
xchg
clc
ss
jge
mov
call
sub
mov
jge
xchg
jge
test
(bad)
and
dec
int3
mov
mov
mov
inc
out
or
push
icebp
out
out
mov
jo
adc
mov
adc
sub
inc
ds
adc
stc
ret
push
inc
icebp
inc
sbb
loope
cld
addr16
pop
ja
or
push
cmp
jbe
or
jmp
mov
aas
jmp
xor
xor
imul
add
je
sbb
repnz
and
add
bound
repnz
cwde
cld
xchg
and
hlt
sub
cmp
cmp
iret
xor
cmp
in
add
lods
jmp
mov
push
pop
jle
jecxz
test
add
neg
ins
scas
out
sar
jns
pop
dec
xor
push
aas
push
scas
sub
retf
jb
push
sbb
test
xchg
add
fwait
dec
lea
and
mov
neg
pop
jae
fnstsw
jmp
scas
jno
call
aam
inc
sbb
sub
gs
cmps
lock
push
lahf
cmp
add
inc
call
xchg
sbb
cmp
fstp
int3
jno
cmc
ret
push
(bad)
repz
xchg
xor
sub
das
sti
add
or
pushf
pop
jl
mov
jne
inc
mov
dec
stos
inc
xchg
inc
jle
lds
movs
pushf
rcr
out
bound
inc
add
test
ja
and
push
leave
mov
jne
cmp
test
cmp
mov
mov
fist
mov
iret
xor
loope
sbb
ds
or
in
mov
cwde
pop
je
pop
int3
push
jae
call
(bad)
mov
xor
push
ja
push
(bad)
ins
sbb
jbe
xchg
inc
lods
sbb
lds
inc
xlat
xchg
je
(bad)
inc
adc
outs
dec
fcom
(bad)
or
imul
jmp
or
ins
bound
xor
and
xor
call
icebp
rol
dec
jae
push
popa
jmp
aad
jae
lahf
out
sub
mov
frstor
sbb
scas
iret
jle
inc
xchg
xor
jg
loopne
jae
call
out
test
fucomip
test
in
pop
(bad)
cmp
mov
dec
cs
or
adc
das
and
sti
adc
fst
mov
cs
out
ret
retf
stos
push
shl
inc
jno
mov
adc
pop
fistp
(bad)
cs
xchg
push
or
add
stc
mov
ror
mov
aaa
and
cmc
es
shl
adc
pop
add
sahf
pop
fisub
data16
repnz
mov
xchg
lods
ins
mov
retf
test
ins
pop
mov
mov
int
clc
ja
sub
ret
hlt
rol
pop
in
and
adc
cmp
cmp
out
inc
lods
and
mov
mov
iret
jnp
fdivr
dec
cmps
cmp
(bad)
push
xor
mov
sbb
cmps
lahf
inc
leave
xchg
cmps
lods
adc
pop
stc
xor
movs
lds
(bad)
adc
es
mov
and
mov
mov
clc
aad
rol
inc
xor
(bad)
jo
loopne
or
fbstp
cmps
arpl
pop
addr16
(bad)
jae
in
cmp
sti
xor
mov
xlat
cmp
xchg
call
cmp
cmp
inc
scas
add
push
xchg
fwait
mov
fsub
stc
xlat
cld
pushf
mov
push
or
ror
lock
xor
ffreep
mul
cwde
push
ins
mov
addr16
inc
iret
stos
in
int3
mov
sbb
xor
dec
jp
dec
outs
jg
push
and
ds
mov
out
mov
add
fbstp
mov
add
xor
lods
unpcklps
(bad)
mov
call
cli
mov
sub
mov
and
xor
mov
mov
out
pop
add
les
adc
fsubr
lea
push
pop
push
sbb
inc
gs
imul
jns
pusha
movs
scas
and
adc
mov
xor
aas
xchg
pop
rcr
cmps
gs
cmp
cwde
jle
mov
jp
outs
stc
neg
mov
out
pop
ss
adc
hlt
imul
repnz
push
sub
test
mov
inc
xor
and
popf
popf
xchg
aad
retf
cmps
fs
loopne
add
lea
xchg
push
add
sbb
ja
mov
jge
mov
mov
les
hlt
mov
sar
or
dec
cmps
inc
push
outs
cmp
ins
aam
retf
push
fwait
push
movs
leave
jnp
or
fbstp
scas
clc
sub
mov
les
dec
push
aad
mov
jmp
sbb
add
stos
fcom
fild
xchg
adc
adc
xchg
js
mov
outs
(bad)
ss
dec
mov
ja
mov
add
sar
add
push
xchg
mov
inc
out
popf
mov
stos
add
add
mov
(bad)
hlt
push
mov
in
js
sahf
sbb
jns
lods
stos
imul
and
in
push
test
inc
fbstp
rcl
retf
(bad)
sti
adc
(bad)
sbb
test
enter
jmp
cli
dec
scas
ins
xchg
out
movs
leave
cwde
dec
cmp
cld
push
ss
mov
retf
or
dec
retf
dec
stos
inc
jp
push
ret
dec
leave
dec
popf
pop
pop
je
mov
retf
in
je
out
fs
jns
or
cmp
xchg
jp
icebp
add
mov
ret
lods
outs
xor
movs
add
into
mov
stc
data16
dec
outs
mov
pusha
push
add
stos
xchg
iret
outs
dec
add
movs
sub
fwait
inc
and
cs
pop
hlt
mov
and
and
loopne
push
xchg
outs
cdq
pop
cmp
pop
dec
push
jmp
jae
lods
fwait
inc
ret
in
ins
(bad)
dec
inc
enter
ins
inc
clc
mov
loopne
cmc
sub
out
out
mov
jmp
fild
fwait
xor
mov
cmp
cwde
fsubr
mov
and
pop
pop
sub
xor
arpl
mov
mov
test
fild
pop
outs
fbstp
xor
or
sti
iret
adc
cs
loopne
cmp
adc
mov
mov
outs
or
leave
cmp
cdq
enterw
ficom
or
mov
push
mov
or
mov
adc
sub
mov
inc
cmp
mov
jmp
xor
xchg
(bad)
retf
(bad)
pop
aas
adc
push
daa
lds
lahf
adc
push
push
stos
imul
pusha
mov
jmp
push
push
push
xchg
mov
inc
mov
pop
(bad)
mov
mov
loop
mov
push
push
cld
jg
adc
data16
jg
ss
jbe
xor
xchg
pop
pop
lds
jno
cmp
icebp
xchg
jmp
and
out
lahf
pop
loop
aaa
adc
fsubr
push
xor
sahf
xor
add
ds
stos
xchg
xchg
inc
dec
sbb
add
dec
mov
or
push
push
jp
mov
leave
loopne
inc
sub
(bad)
sub
mov
test
adc
mov
mov
and
nop
ja
inc
call
test
sub
aad
jp
push
lods
sub
cmc
nop
mov
xor
pop
stc
fs
sbb
mov
ds
and
clc
xchg
or
push
xchg
or
jecxz
gs
sbb
cmp
sbb
pop
xor
sub
lea
pop
inc
dec
shl
mov
mov
les
jmp
and
cmps
mov
in
adc
mov
dec
in
movs
leave
imul
pop
lds
cmps
mov
repz
stos
icebp
cwde
inc
sbb
sbb
retf
or
xchg
inc
adc
pop
aad
or
shl
nop
retf
jge
cmps
sub
and
mov
vpperm
mov
jp
inc
cli
and
push
fscale
mov
es
push
jns
daa
or
test
imul
add
pop
inc
push
stos
dec
ret
inc
jo
imul
aad
jns
call
int
or
ficomp
arpl
js
jno
jae
push
adc
push
enter
pop
ret
jmp
jnp
in
mov
iret
loop
add
sahf
pop
fadd
inc
push
sbb
pop
cmc
rol
scas
add
jecxz
inc
xchg
dec
sub
jle
lds
cdq
sub
scas
je
(bad)
cli
vhsubpd
in
sbb
mov
in
add
push
xchg
lahf
cmps
add
push
mov
in
movs
cmp
imul
addr16
jne
bound
mov
cmc
mov
or
push
lock
lods
jl
adc
mov
sub
jecxz
in
inc
in
mov
jle
int
mov
cmp
std
add
add
ss
ja
outs
jp
(bad)
ins
push
ss
arpl
sbb
cs
loope
sbb
call
jmp
mov
js
mov
jge
clc
sbb
out
or
mov
inc
sbb
inc
pushf
or
jbe
jb
pop
imul
jge
mov
out
and
pop
push
and
loopne
nop
push
mov
mov
arpl
lods
ins
scas
mov
xlat
mov
shl
mov
pushf
dec
sar
dec
cmc
call
jnp
adc
or
or
aad
fs
cmp
leave
cli
mov
loopne
jmp
mov
stc
popa
addr16
pop
in
mov
pop
cmps
add
mov
jmp
movs
mov
mov
je
mov
mov
iret
mov
cmp
ret
sub
test
sbb
aad
sbb
(bad)
mov
outs
xor
leave
cmp
aas
xor
jns
mov
mov
mov
sub
int3
pop
cmp
cli
out
lods
inc
jnp
dec
inc
jmp
jns
adc
cmp
loop
mov
inc
mov
jp
pop
mov
mov
(bad)
pop
outs
out
or
push
inc
imul
pop
jnp
adc
or
xor
xchg
sub
pop
and
and
sti
jnp
mov
cmps
call
shr
xchg
cmp
xchg
cmps
and
fist
mov
mov
cmp
adc
addr16
sbb
pop
xchg
mov
jno
popf
pop
fldcw
call
rcr
bound
jbe
bt
mov
dec
fucomip
addr16
jno
je
nop
mov
pop
adc
test
cmp
(bad)
mov
dec
push
fwait
push
test
pop
push
out
lods
out
je
(bad)
cmp
shr
or
int3
push
xchg
mov
xchg
ds
push
inc
aad
sbb
sub
cli
and
mov
jns
push
and
jmp
jmp
lods
dec
test
icebp
fwait
xchg
out
cld
mov
jae
inc
xchg
jl
xchg
jecxz
fild
fimul
xor
mov
adc
add
or
cwde
or
adc
mov
jb
les
mov
std
sbb
pop
mov
pop
jne
(bad)
mov
mov
jns
repnz
inc
jmp
add
scas
adc
pop
inc
out
xor
je
mov
bound
js
sub
retf
cmp
ficom
pop
sub
outs
iret
ror
pop
ds
mov
inc
add
mov
imul
sub
xlat
dec
add
cmps
hlt
rcr
(bad)
lods
push
xor
ins
mov
inc
cmp
sbb
pop
retf
cmp
in
popa
xchg
shl
test
dec
lds
sbb
or
(bad)
sar
or
fisubr
dec
lds
in
scas
mov
cld
sub
pusha
inc
dec
popf
inc
out
call
in
addr16
mov
stos
adc
and
dec
je
mov
test
rol
aam
inc
xor
sub
cs
mov
rol
xor
pusha
cmps
fs
xchg
imul
mov
je
outs
ins
inc
mov
test
pop
outs
xchg
sub
lock
shr
out
mov
repz
outs
mov
adc
test
(bad)
push
push
shl
jg
in
pop
pop
pop
mov
inc
sbb
jp
ror
mov
shl
cmc
inc
mov
popa
inc
cmps
dec
(bad)
daa
mov
(bad)
scas
icebp
mov
retf
xchg
sbb
pop
add
(bad)
push
mov
mov
clc
or
leave
sub
or
pop
imul
xor
cmp
xchg
out
ret
lods
ins
and
and
pop
clc
cmps
mov
cmp
jecxz
push
out
test
fadd
sbb
xchg
inc
scas
jecxz
fs
jb
sub
test
dec
in
(bad)
movs
adc
or
popa
jmp
daa
mov
iret
es
jnp
and
cmp
ins
push
add
dec
loopne
in
mov
mov
aas
js
lea
add
enter
mov
jle
mov
fst
xchg
mov
bound
mov
in
mov
mov
xchg
loop
pop
repz
push
or
sbb
jge
sub
neg
mov
fisub
or
pop
retf
es
push
or
xor
adc
adc
pop
imul
imul
mov
pop
and
outs
movs
xchg
(bad)
fucomip
or
push
call
rcr
add
(bad)
inc
scas
adc
jno
jb
fisttp
sub
dec
jg
addr16
dec
jmp
add
mov
pop
retf
add
cs
or
sub
das
cdq
mov
pop
push
and
pop
push
je
test
sbb
aad
xchg
mov
(bad)
aas
push
sbb
(bad)
les
in
push
pusha
out
ss
cmp
dec
xor
dec
loope
out
int3
mov
loop
movs
lahf
inc
pushf
jnp
xchg
ror
sti
xchg
aas
sahf
adc
cli
inc
sbb
mov
into
mov
push
dec
jnp
adc
sar
pop
inc
or
xor
adc
imul
dec
jmp
es
fisub
int3
mov
cmp
mov
push
adc
and
in
(bad)
xlat
clc
jne
jne
cmp
xchg
mov
scas
test
mov
rcr
cmp
cmp
jnp
jo
cmp
jo
aad
loopne
test
mov
mov
out
xor
ds
add
adc
mul
(bad)
jnp
fidiv
jl
imul
mov
pushf
sub
push
push
jg
adc
popa
xchg
sbb
adc
push
mov
imul
in
loop
leave
sub
mov
jl
pop
sbb
scas
cmp
and
lea
inc
jns
(bad)
push
cmp
jmp
aas
push
push
retf
sub
and
shl
inc
pop
aaa
adc
pop
and
sub
xor
pop
dec
fld
cmp
mov
dec
mov
jmp
ss
jp
inc
pop
not
mov
cwde
or
xchg
outs
jno
mov
hlt
mov
and
push
dec
mov
add
sub
cmps
cmp
and
out
sub
cmp
addr16
test
shl
pop
add
lahf
xlat
mov
add
jle
imul
(bad)
test
mov
fwait
pushf
sahf
mov
xchg
cmc
xor
call
pop
sub
retf
inc
xor
fucomi
les
add
jge
mov
pop
scas
fld
add
fmul
cmp
js
xor
mov
xor
mov
cmps
inc
mov
aam
adc
and
mov
std
mov
in
mov
out
fs
es
ss
bound
mov
adc
cld
das
ja
xor
in
les
jns
xor
clc
stos
fisub
sub
xlat
add
sbb
in
jecxz
shl
arpl
mov
arpl
lods
add
push
fidiv
test
jg
mov
outs
push
mov
enter
xor
(bad)
aaa
test
retf
and
adc
jb
push
mov
arpl
mov
jns
jae
ror
add
cmp
cwde
push
adc
cmc
mov
ror
lods
xchg
fdivr
cmps
sbb
jae
inc
(bad)
sub
push
mov
pop
lea
rcr
mov
add
push
jl
daa
(bad)
jae
lea
js
mov
daa
xlat
cld
repnz
jne
test
jle
cmp
and
inc
cdq
dec
dec
xor
xchg
fimul
rcl
movs
fst
inc
loope
mov
daa
popa
jno
xchg
pop
push
mov
(bad)
jmp
push
icebp
mov
in
jge
and
and
dec
jno
out
mov
cmp
xor
inc
add
aaa
xor
inc
cmp
imul
add
and
jle
stos
aas
movs
in
mov
adc
xchg
ds
cmp
sbb
xor
pop
leave
sahf
push
sti
and
jecxz
scas
push
push
sub
outs
mov
push
pop
add
xchg
mov
jns
dec
push
and
cmp
pop
retf
int3
jnp
dec
mov
jb
pop
popf
jne
js
add
xchg
sub
xor
push
outs
inc
xlat
js
bound
repnz
and
adc
das
pop
clc
sbb
sub
xchg
scas
jne
int3
sub
popf
outs
sub
sahf
mov
fwait
push
mov
xor
cld
mov
lods
std
lahf
pop
mov
and
lock
dec
fadd
inc
popa
mov
adc
jle
or
cs
inc
repz
pop
stos
das
popa
stc
es
cmp
xor
mov
sbb
mov
test
mov
adc
adc
pushf
mov
push
in
push
and
inc
jnp
push
xor
cmps
jae
call
mov
cli
mov
or
jmp
int3
jge
sahf
push
cmp
ret
cmp
add
push
xor
pushf
mov
xchg
in
cmp
movntq
mov
mov
jmp
push
xor
or
je
mov
shl
ficom
(bad)
hlt
xchg
mov
dec
cmp
test
push
(bad)
sub
add
xchg
mov
xchg
icebp
pop
cwde
and
sub
mov
repz
je
js
xor
jb
xchg
or
jb
mov
dec
fs
cli
bound
imul
jne
loope
fnstcw
pushf
add
mov
add
mov
(bad)
jg
adc
mov
out
std
rcl
in
loopne
inc
test
pop
jecxz
inc
add
clc
dec
loope
fadd
xor
dec
add
jb
push
mov
pop
jae
test
das
dec
inc
out
(bad)
pop
imul
mov
add
adc
jg
call
mov
repnz
sub
int
adc
cmp
and
add
retf
xlat
xor
ds
push
imul
test
sub
mov
inc
mov
mov
dec
sbb
in
mov
jbe
sbb
mov
mov
addr16
es
stos
imul
ins
cmc
imul
lock
push
cdq
sub
jns
xor
mov
loope
stos
xchg
shr
or
jge
test
loope
sahf
jmp
jmp
mov
xor
cmps
les
mov
jl
pusha
mov
test
loope
inc
ficomp
lea
das
push
inc
inc
cmp
icebp
xor
and
and
call
in
jle
fiadd
ror
fisttp
repz
lock
pop
push
jmp
(bad)
out
push
jne
mov
dec
sbb
int3
cmp
push
add
sub
ja
pop
retf
push
or
jno
int
jl
shl
pop
les
ret
jp
mov
test
mov
call
shl
mov
jns
(bad)
jmp
xor
mov
jb
stos
sbb
addr16
iret
jp
xlat
aas
ds
cmp
mov
jae
dec
xlat
loopne
arpl
mov
cld
mov
aaa
dec
jmp
dec
xchg
jecxz
mov
ins
ret
jmp
inc
(bad)
bound
jnp
push
cmp
retf
jmp
push
and
mov
mov
movs
mov
ret
fcomp
inc
push
daa
xor
lea
adc
jmp
and
xor
inc
mov
add
shr
daa
lock
(bad)
stc
ret
add
xor
cmc
les
xor
mov
xor
pop
dec
hlt
mov
mov
pop
dec
pop
xchg
fstp
int3
mov
scas
pop
in
ds
and
add
outs
dec
scas
adc
mov
(bad)
add
or
bound
rcl
in
into
das
pop
sbb
test
in
adc
lahf
jg
loope
xor
gs
out
sahf
loopne
pop
int3
fdiv
jns
out
mov
inc
call
pop
enter
adc
dec
sub
cmps
idiv
sbb
push
stos
inc
mov
call
(bad)
mov
ficomp
sub
add
sbb
sub
adc
jecxz
hlt
imul
xor
(bad)
cwde
push
adc
shl
xor
and
adc
mov
and
ja
ins
jno
das
or
inc
outs
cmps
mov
in
pop
sbb
cmps
push
ins
push
mov
ror
xor
aas
call
adc
data16
(bad)
sub
or
idiv
repnz
mov
pop
repnz
pop
les
xchg
jmp
xchg
sub
movs
fsubp
dec
test
fs
aas
hlt
cli
fstp
xlat
mov
or
or
je
and
fiadd
cmp
adc
shl
cs
stc
push
(bad)
xchg
xchg
pop
int
mov
mov
(bad)
mov
push
xor
js
enter
cmp
ins
pop
outs
sub
in
sbb
jnp
adc
xor
jo
mov
(bad)
sbb
push
int
test
sub
outs
xor
not
mov
test
mov
jne
and
add
push
pop
leave
jge
xlat
outs
cs
push
dec
push
daa
frstor
cmp
scas
int
js
fadd
cmps
mov
xchg
dec
hlt
outs
imul
or
imul
das
fiadd
sub
sub
bound
inc
aam
data16
ds
sub
cli
and
pusha
push
xor
in
enter
push
xor
neg
fsubr
lock
mov
call
out
pop
mov
and
test
dec
fadd
jle
mov
cmc
call
jae
pop
in
push
lods
ffree
lahf
mov
in
jge
sar
or
cmp
out
mov
movs
cmp
mov
or
mov
shl
pop
mov
retf
xchg
in
icebp
add
scas
retf
mov
or
jmp
pusha
pop
and
lea
push
int
adc
inc
popf
add
outs
or
frstor
sbb
adc
add
loop
pop
jp
fsub
(bad)
es
lahf
std
mov
retf
scas
push
rcr
cmp
pushf
inc
or
jne
xchg
in
dec
pop
push
sub
in
into
pop
scas
adc
xor
ja
inc
or
pop
xor
xor
shl
ret
into
inc
dec
push
aad
(bad)
pop
pop
cmp
jg
or
bound
inc
fwait
jecxz
xchg
imul
gs
(bad)
retf
out
xchg
(bad)
gs
shl
fistp
rol
(bad)
xor
sahf
out
ret
stc
outs
pusha
gs
ins
sbb
jo
mov
xor
adc
sbb
sbb
mov
add
mov
mov
pop
xchg
test
dec
cmp
jmp
sbb
int3
out
or
and
mov
daa
pop
jmp
cmc
mov
retf
sbb
mov
imul
push
pop
pusha
sub
addr16
mov
pop
retf
in
test
mov
mov
xchg
mov
scas
add
push
sbb
jo
xor
dec
fmul
in
outs
out
xor
and
mov
retf
sub
push
xor
int3
sub
outs
adc
nop
sub
fst
mov
mov
cld
fcmove
mov
fild
sbb
outs
jmp
adc
fwait
scas
dec
mov
mov
inc
clc
es
push
pop
bound
or
cmp
imul
test
inc
mov
rcl
imul
leave
add
jl
mov
cmps
cmp
cld
jl
push
loopne
add
std
clc
cmps
push
or
es
or
out
rcl
adc
mov
inc
aaa
xchg
pop
adc
retf
aad
pop
inc
out
mov
gs
push
cmp
push
pop
rcl
fidivr
cmps
pop
mov
inc
ss
push
mov
lahf
jl
mov
inc
rcl
aad
pop
and
push
clc
ja
fistp
push
into
fwait
xor
mov
mov
adc
iret
popa
pop
ins
repnz
rcl
in
dec
jmp
lock
mov
mov
jmp
popf
es
mov
jmp
mov
ja
push
mov
out
push
inc
xor
das
mov
ficomp
xlat
mov
sbb
cmps
popf
mov
cwde
lock
(bad)
push
add
cmps
ja
jg
lds
mov
comiss
mov
mov
inc
mov
inc
outs
outs
jl
rcr
cmp
jo
add
dec
ja
dec
into
ins
or
mov
xor
mov
pop
retf
mov
int3
push
movs
test
or
scas
sub
inc
fptan
mov
scas
mov
cwde
or
les
sbb
les
sahf
(bad)
popa
pop
pop
mov
add
jge
ins
loope
sub
ret
retf
cdq
shr
cmp
addr16
sbb
iret
ins
sub
imul
fiadd
iret
cwde
into
mov
repz
mov
(bad)
aam
mov
cld
sub
jnp
pop
or
movs
adc
dec
lods
jmp
leave
add
mov
jle
jle
dec
lahf
popa
mov
cmp
retf
lock
add
fs
stos
or
(bad)
or
dec
lock
lea
mov
xchg
call
adc
fwait
pop
sbb
dec
push
pushf
cmp
jns
pop
sub
mov
cmc
imul
adc
mul
pop
mov
sbb
lods
scas
sti
cli
xor
sbb
test
cli
cmps
cmp
cwde
and
std
pushf
lds
dec
sub
xchg
xchg
sar
pop
dec
sub
mov
adc
not
sbb
arpl
jl
xchg
in
pop
inc
push
aas
xor
sub
pop
sar
mov
cmp
pop
sub
dec
into
push
jnp
inc
xor
jbe
and
arpl
stos
mov
inc
ret
nop
xor
jno
lock
aam
(bad)
xchg
add
fs
fs
xchg
mov
clc
loop
xlat
out
fldenv
lea
mov
mov
aaa
dec
mov
sbb
xor
push
sbb
push
repz
mov
add
mov
punpcklwd
sub
sbb
fnsave
and
shr
add
inc
nop
cmps
stc
aad
in
cmp
data16
nop
out
push
aad
jecxz
fs
hlt
icebp
push
imul
sti
mov
movs
fst
xor
push
jg
jg
lahf
je
cmps
sbb
xor
xchg
mov
jecxz
sub
sbb
ror
pop
or
pop
mov
rcl
and
mov
imul
popf
mov
dec
mov
add
inc
retf
sub
jb
imul
cld
and
sbb
cmp
adc
sar
fild
fimul
xor
mov
mov
adc
push
and
adc
jb
mov
push
call
mov
outs
xchg
push
push
ss
xor
cmovbe
arpl
inc
stos
mov
gs
sub
jp
imul
cmc
cli
mov
nop
(bad)
jle
fidiv
pop
mov
xor
jmp
popa
xor
mov
aam
pop
or
in
inc
je
mov
mov
mov
mov
push
dec
iret
pop
mov
push
inc
or
pop
xchg
add
dec
mov
mov
in
test
fisub
add
stos
out
inc
scas
lds
push
call
mov
(bad)
in
fcmovbe
into
and
pushf
je
dec
in
js
out
loope
pop
iret
xor
sar
retf
popf
mov
jmp
adc
retf
xor
(bad)
out
(bad)
rcr
jbe
test
xlat
jo
ret
mov
das
mov
stos
(bad)
repz
pop
loopne
mov
jge
xchg
fdivr
in
popf
cmp
sahf
pop
aaa
push
hlt
cmps
jne
dec
mov
and
loopne
pop
(bad)
repz
cmp
dec
call
movs
or
stc
pop
and
sti
pop
out
mov
popa
push
jmpw
cmp
dec
jge
es
sbb
mov
mov
int
sub
shl
retf
pop
lahf
sahf
jl
pop
jecxz
stos
push
test
xor
pop
stos
and
adc
adc
and
or
dec
jo
sub
sbb
into
xchg
rcr
leave
pop
mov
xlat
mov
mov
pop
push
stc
jp
rol
aam
cmp
into
les
mov
aas
pop
rcl
outs
add
sub
add
aad
mov
in
jp
mov
(bad)
or
sub
xchg
fisubr
ja
and
lahf
cmps
and
sbb
fs
push
jnp
ret
xor
or
mov
mov
pop
pop
inc
sbb
add
mov
in
mov
dec
test
mov
push
and
scas
and
mov
dec
pop
xchg
adc
addr16
jle
movs
sbb
mov
call
mov
sbb
push
fisub
pop
pusha
fs
out
ins
dec
fisttp
push
mov
jae
dec
push
loop
sbb
cmps
lahf
mov
cmp
test
stos
not
cmp
jae
or
jge
mov
mov
das
lods
fwait
cmp
aaa
mov
repz
adc
pop
inc
mov
jmp
xor
mov
pushf
inc
add
fucomip
div
xchg
lds
(bad)
inc
out
mov
or
jo
sub
cmp
sub
sub
jb
lods
xadd
and
jb
cmp
jp
add
popa
cmp
movs
ficomp
dec
shr
push
imul
(bad)
mov
and
jl
dec
jns
xor
rol
cmp
mov
mov
js
inc
push
ins
xchg
dec
cld
aaa
add
cmc
nop
popf
neg
pop
or
std
push
adc
retf
pop
call
cmp
jl
mov
pop
ja
inc
call
jb
sbb
dec
retf
xor
out
dec
enter
inc
jge
popf
pop
dec
dec
pop
push
xlat
pusha
dec
sbb
mov
ins
leave
push
or
dec
(bad)
shl
pop
cmps
repz
push
das
push
out
jb
into
jb
adc
aas
std
lods
js
sbb
mov
jecxz
push
test
mov
hlt
or
inc
and
xchg
(bad)
pusha
shl
test
push
call
aam
push
and
in
(bad)
sbb
mov
shl
mov
sar
or
or
push
jb
and
pop
js
push
rcl
pop
jmp
ins
aam
aaa
push
enter
cs
cmc
and
aad
cmp
inc
rcr
jle
pop
retf
test
fisub
sub
add
and
mov
es
push
mov
ror
cmp
shl
jno
mov
pusha
jae
and
inc
jno
out
outs
cdq
and
loope
mov
fwait
jg
in
stc
adc
xchg
popf
dec
fs
mov
xor
std
imul
(bad)
jmp
frstor
shr
movs
bsr
push
rcl
loope
pop
mov
outs
and
aam
test
(bad)
push
mov
adc
mov
imul
test
adc
sub
sbb
js
(bad)
aam
add
iret
sahf
(bad)
adc
les
jmp
test
and
retf
push
sbb
xchg
dec
sub
(bad)
scas
dec
or
push
fdivr
int
pushf
scas
mov
fbstp
sbb
lock
mov
shl
sub
icebp
jbe
mov
and
popa
fdiv
mov
fcomp
es
mov
ds
jecxz
repz
jmp
add
hlt
cmps
mov
pop
dec
mov
sub
mov
out
sbb
outs
iret
pushf
(bad)
fisubr
(bad)
mov
pop
inc
out
daa
pop
sbb
xchg
sbb
call
xor
xor
iret
cli
ins
mov
lods
daa
adc
add
fistp
push
mov
sbb
or
stos
xchg
out
pop
dec
and
adc
rcl
ficomp
es
sbb
xchg
push
das
mov
push
test
imul
mov
pop
test
arpl
mov
mov
rcr
lahf
jns
push
lock
pushf
push
push
mov
jnp
adc
cmp
aam
push
(bad)
mov
ret
mov
xor
push
mov
pop
pop
mov
jecxz
scas
xchg
sbb
pop
pop
data16
int3
in
cli
push
pop
ins
mov
sub
lock
cmp
scas
push
lea
mov
jne
push
cmp
je
fs
mov
pop
jl
out
cs
xor
(bad)
add
dec
mov
adc
ins
jmp
adc
add
mov
gs
sbb
xchg
ss
inc
gs
inc
cmp
aad
add
mov
icebp
and
or
pusha
adc
pop
pop
and
or
mov
fdiv
rcr
pop
or
jmp
repnz
jmp
hlt
or
xchg
gs
dec
ficomp
push
xor
movs
xchg
xchg
std
rcr
call
xor
ss
leave
out
cmp
jns
std
sahf
xchg
jecxz
mov
aam
bsf
or
jl
push
test
popa
xor
xchg
mov
int
sub
sub
ins
loope
iret
mov
dec
mov
(bad)
sti
xlat
pop
das
sbb
sbb
jo
iret
pop
ins
mov
mov
rcl
and
retf
ret
sahf
pop
and
inc
int
icebp
cmp
lods
scas
jl
movs
out
inc
retf
aas
out
add
sbb
xor
jbe
adc
in
jns
test
jns
pop
xor
and
jmp
mov
mov
mov
retf
aad
mov
and
icebp
jnp
mov
xchg
add
xor
jge
shl
icebp
adc
push
xor
inc
nop
mov
jae
repz
and
mov
push
cmp
loop
jle
loope
cmps
xlat
sahf
stc
xor
outs
or
or
pop
out
pop
cmps
sub
jmp
cmp
call
out
fst
add
jl
pop
push
adc
movs
or
retf
push
repnz
ficom
push
out
sar
push
sahf
stc
mov
call
ret
shl
jno
stos
fild
mov
pop
add
mov
push
sub
push
std
sub
cmps
out
pushf
fmul
popa
mov
cmc
mov
cmc
xchg
mov
ins
xchg
movs
sar
pop
sbb
cmps
pop
scas
pop
sar
dec
jne
adc
test
(bad)
adc
js
mov
jbe
rcr
xor
mov
xchg
rcr
jge
jp
(bad)
jb
enter
sub
xor
cmp
xor
cwde
xlat
adc
mov
inc
jmp
js
aaa
mov
or
and
jne
xor
adc
cmp
cmp
sub
ds
xor
fmulp
or
jl
fmul
mov
add
inc
(bad)
adc
jg
in
push
dec
ss
pop
xor
mov
sub
push
aaa
jae
mov
fstp
je
inc
inc
popf
mov
adc
dec
pop
pop
mov
in
push
sar
stc
mov
pop
mov
jmp
add
mov
lods
fst
outs
outs
fcom
fdivrp
add
cmp
loope
test
xor
sti
or
fs
fdivr
lahf
idiv
cs
jle
or
es
dec
pop
in
popf
ret
cmp
test
mov
sbb
dec
cdq
pop
pop
push
js
xor
add
mov
inc
add
ficomp
stc
retf
sub
xchg
push
adc
mov
add
stc
shl
add
mov
inc
aad
add
movs
out
cmc
jmp
fimul
sbb
std
sbb
inc
enter
in
(bad)
push
fstp
enter
test
sub
push
push
xchg
add
faddp
scas
jno
or
adc
mov
mov
dec
cmp
mov
in
pop
shl
(bad)
jo
xchg
fs
xchg
add
aad
movs
xchg
pop
pop
shr
pop
sub
in
call
test
dec
push
movs
xchg
or
shufps
into
xchg
shl
test
push
pusha
test
mov
or
retf
push
cmp
sbb
popa
push
not
jo
cmp
cs
ja
mov
out
shl
or
xor
and
bswap
cmp
xchg
loope
push
jo
cmps
ins
test
fdivr
inc
mov
xchg
retf
jae
jge
fisub
into
jb
test
push
in
cmp
shl
lea
sub
ja
out
pop
jge
dec
and
mov
neg
pusha
sahf
movs
mov
in
xor
cmp
inc
into
test
mov
and
movs
popf
add
sbb
cmps
xor
int3
lods
jbe
cmc
(bad)
(bad)
cmps
test
pop
mov
jmp
inc
or
mov
fwait
xor
rcl
sub
out
add
add
add
and
fimul
in
mov
or
fstp
jnp
push
mov
mov
inc
std
dec
sti
(bad)
mov
mov
es
xchg
jp
pushf
fldenv
dec
repz
mov
(bad)
in
xlat
mov
xor
lods
mov
out
(bad)
dec
xchg
mov
frstor
push
sub
pop
retf
cmps
xchg
ficomp
fnstcw
xchg
int
aad
sbb
push
jecxz
inc
lods
retf
mov
lods
or
iret
fld
xlat
dec
ret
jo
xchg
push
test
ret
aas
inc
nop
mov
mov
push
test
nop
ret
cmc
mov
fwait
add
push
aaa
(bad)
jp
int
mov
fs
or
(bad)
mov
aaa
jle
fdiv
cmp
int
dec
lds
mov
in
push
jne
push
hlt
cmp
jl
and
dec
or
adc
dec
and
shl
inc
lahf
call
pop
arpl
mov
or
mov
pop
cmc
ds
mov
outs
push
hlt
fsub
or
daa
fdiv
adc
(bad)
lods
mov
test
jmp
inc
adc
in
out
push
fs
mov
cdq
scas
test
push
in
pop
fstp
lock
pop
enter
inc
jns
mov
pushf
cli
scas
push
idiv
cmc
call
(bad)
xchg
xlat
mov
rcl
cli
shl
xor
or
mov
popa
mov
xlat
mov
jo
xchg
call
inc
adc
xchg
lds
(bad)
aam
mov
mov
lds
aam
mov
(bad)
pop
or
add
xchg
neg
push
xchg
call
ds
pop
pop
int
(bad)
push
sbb
adc
fdivrp
add
push
fwait
adc
sbb
and
jb
add
and
push
cmp
mov
mov
lds
xchg
icebp
fsub
ret
mov
call
jbe
call
loop
inc
sti
pavgb
lods
pop
sub
sbb
and
daa
fs
push
jmp
jb
mov
(bad)
xor
cmps
xchg
jno
out
adc
cmps
scas
xor
pop
int
jg
jo
ss
sbb
sub
adc
daa
mov
fdiv
ret
iret
sbb
in
sub
jbe
sub
pushf
sar
push
in
xchg
xchg
pop
xor
pusha
inc
hlt
stc
push
lods
call
dec
push
cmps
add
jbe
sub
cmps
ja
out
mov
fimul
push
jecxz
jne
(bad)
rcl
xor
rol
pushf
cdq
and
cmp
fld
dec
pop
mov
lock
push
push
shl
mov
lods
icebp
pop
jbe
not
(bad)
ja
adc
aaa
add
iret
aas
jae
call
sub
call
out
inc
imul
mov
mov
or
lods
test
shl
fild
mov
sbb
jecxz
inc
scas
sbb
pop
ds
repz
add
jno
shl
dec
xor
dec
inc
and
cmc
dec
and
cmp
xchg
pop
sub
mov
xchg
sub
addr16
adc
mov
mov
cmps
adc
sbb
pop
dec
push
fldenv
(bad)
loopne
hlt
cmc
dec
pop
dec
mov
lea
and
xchg
cli
int
(bad)
mov
aaa
pop
data16
retf
push
sbb
xor
outs
dec
popf
cs
rol
adc
add
in
test
and
mov
xor
mov
inc
push
int3
shr
lds
sub
inc
mov
inc
leave
into
out
dec
(bad)
rcl
pop
pop
sahf
inc
movs
mov
ss
addr16
push
push
(bad)
push
das
inc
xor
les
sub
test
ret
repnz
sub
popa
jg
jmp
push
std
call
pop
or
stos
pop
jo
fdiv
dec
cmp
addr16
push
int
test
dec
mov
rcl
or
dec
cmp
cmps
icebp
sbb
or
nop
cwde
outs
repz
cli
inc
sbb
mov
hlt
and
xchg
pop
mov
dec
imul
xchg
dec
aas
les
lahf
sbb
jge
popf
leave
(bad)
xlat
sub
mov
outs
outs
ja
in
push
xor
mov
cwde
iret
pop
(bad)
pusha
adc
std
fwait
out
cmp
fsubr
fldcw
xlat
mov
ds
jecxz
push
stos
fstp
shl
enter
ret
mov
aam
push
loop
mov
lock
cld
retf
hlt
inc
push
ds
and
cs
test
std
frstor
pushf
or
daa
sbb
dec
dec
sbb
retf
icebp
fld
(bad)
fmul
lods
mov
popf
jnp
push
adc
sbb
dec
loopne
pop
jge
lds
sbb
and
or
loope
sbb
mov
mov
xchg
adc
sub
sbb
int3
daa
mov
push
push
xor
aaa
add
inc
inc
jbe
xchg
int3
xchg
jmp
cmp
cmp
pop
aam
mov
leave
aam
aad
jge
pop
lea
fsubr
popa
pop
lar
fisub
shl
cmps
vmulsd
add
mov
mov
test
mov
mov
fs
bound
std
icebp
in
ret
xor
dec
xchg
cdq
mov
out
adc
sahf
push
fisub
mov
pop
lock
stc
fimul
iret
ja
mov
or
xchg
inc
sbb
out
add
aaa
xor
outs
inc
mov
(bad)
les
mov
je
jg
xchg
ds
cdq
nop
lods
in
dec
aas
shl
lea
sahf
push
xchg
clc
outs
bound
jmp
pusha
mov
adc
(bad)
leave
jnp
dec
push
xor
mov
xlat
jne
cld
jno
adc
sbb
pushf
and
retf
mov
sar
jnp
ja
adc
adc
xor
cmp
cmp
xor
pop
mov
or
jp
push
or
cmp
ret
retf
xchg
jmp
xchg
push
imul
sbb
cli
scas
enter
and
dec
or
mov
jg
(bad)
not
cmp
push
sub
and
scas
cmp
imul
pop
fs
push
stc
lahf
ins
fadd
stos
es
(bad)
sub
stos
cmps
lods
cwde
or
enter
pop
clc
popa
adc
dec
add
push
call
xor
jb
sub
in
cmp
(bad)
jns
out
mov
mov
cmp
repnz
mov
test
xchg
or
cwde
jo
ins
mov
mov
pusha
daa
jno
popf
in
cmp
inc
out
xor
sub
and
mov
pop
cli
(bad)
fldcw
out
ja
scas
loope
sub
shl
call
ins
push
js
jo
shl
or
cmp
sub
je
jne
and
gs
(bad)
ins
jl
inc
(bad)
into
icebp
rcr
cmp
call
mov
leave
dec
fcomp
cmp
loopne
sbb
push
pop
add
xchg
cmc
dec
dec
lock
push
sahf
or
out
test
adc
or
call
and
out
and
dec
aas
les
shl
jne
sub
jmp
test
jae
sub
cmp
pop
out
cmp
test
ret
jl
pushf
call
push
mov
hlt
adc
addr16
push
es
lds
scas
fild
call
iret
jo
jmp
jns
loope
mov
sub
cli
dec
popf
sbb
add
lods
xchg
sahf
call
in
jae
pushf
fldcw
jae
je
add
adc
int3
out
jne
rol
mov
sbb
retf
scas
cmp
scas
retf
xor
outs
repnz
jns
push
outs
mov
sbb
mov
nop
and
mov
sahf
xchg
lea
mov
ja
sub
xor
fcmovnb
xchg
mov
call
rol
das
(bad)
in
lods
xor
(bad)
push
icebp
jmp
mov
stc
sbb
cwde
jbe
scas
mov
pop
das
mov
loop
or
pop
cmp
pop
in
sub
sub
shl
xor
lock
cs
clc
(bad)
inc
pop
pop
pushf
and
fisub
data16
outs
pop
jmp
inc
outs
call
sbb
dec
xchg
mov
mov
(bad)
sbb
pop
js
cdq
outs
fdivr
ret
sub
xchg
cmp
pmulhw
cmps
std
cdq
int3
(bad)
retf
leave
xchg
in
shr
mov
push
lock
cdq
xchg
or
adc
mov
lock
adc
mov
dec
lock
sbb
mov
jl
jmp
adc
pop
sub
cdq
ins
cli
fwait
push
add
inc
cld
call
xchg
out
dec
pop
push
cmp
cld
add
fidivr
mov
push
mov
pusha
inc
jl
inc
stos
inc
cmp
mov
repz
xor
(bad)
xchg
push
jle
xor
cmp
jecxz
test
jmp
jmp
mov
push
jns
dec
xor
stos
std
pusha
aaa
lahf
outs
and
rcr
into
leave
std
movs
cld
arpl
scas
test
pop
inc
push
addr16
out
in
pop
int3
sar
imul
xor
pusha
in
or
xchg
test
xchg
xor
mov
mov
loop
push
cmp
fsubp
mov
rcl
or
repz
sub
getsec
clc
sub
sbb
stc
pop
imul
arpl
jo
jge
gs
add
fisttp
fmulp
fcom
loopne
adc
test
adc
jmp
ds
cmp
xor
test
sub
out
pop
stos
dec
mov
add
std
rol
jecxz
les
sub
pop
inc
mov
ror
mov
mov
ss
dec
sub
out
add
cli
and
xor
push
ss
or
cmp
pop
pop
inc
and
xor
cli
int3
dec
mov
pusha
jbe
in
std
and
xor
retf
pusha
test
cmp
cmp
mov
fiadd
dec
ds
xor
ror
daa
add
stc
inc
mul
es
movs
mov
bound
popf
cmc
in
ficomp
aad
inc
push
and
loop
adc
sar
inc
sub
lods
xchg
cld
out
mov
sbb
cwde
int
push
stc
jle
inc
push
out
neg
pushf
mov
inc
movs
das
lods
mov
sbb
lods
mov
inc
mov
ins
nop
(bad)
push
shl
nop
push
cmp
jmp
les
inc
mov
arpl
pusha
scas
mov
sbb
into
pmulhw
dec
mov
in
push
jae
or
inc
sub
and
jg
pop
addr16
inc
mov
and
dec
cmp
fsubr
imul
retf
and
cmp
and
mov
ds
push
retf
mov
js
clc
lahf
aad
in
(bad)
data16
push
inc
in
pop
push
gs
mov
jns
enter
cmp
test
pop
lahf
xchg
es
xlat
jae
mov
in
shr
and
int3
push
cdq
cld
inc
stos
and
sub
pop
xor
out
or
jno
ret
into
ds
retf
add
dec
adc
jp
test
pop
in
or
(bad)
push
or
pop
repnz
add
pop
aad
mov
mov
imul
add
inc
inc
repnz
or
dec
imul
ret
sbb
sub
dec
pushf
imul
mov
jb
sbb
loop
xor
bound
pop
les
ret
cli
lea
pop
and
lods
lds
xchg
ret
mov
cli
mov
xchg
mov
pop
dec
cs
cmp
fsub
cmp
lock
mov
sar
inc
pop
adc
loopne
icebp
pop
pop
std
test
mov
test
add
jbe
cli
jnp
xchg
mov
outs
cmp
xchg
aam
inc
aas
out
retf
(bad)
sbb
dec
xchg
cmps
and
pop
ror
mov
mov
inc
inc
xor
sub
shld
js
inc
inc
bound
aad
push
cmc
cmps
pop
jmp
pushf
je
adc
fs
cld
jmp
push
dec
in
cmps
fwait
add
inc
push
jmp
addr16
sbb
test
push
dec
aaa
not
icebp
and
xchg
lods
nop
sti
(bad)
push
mov
inc
mov
cmps
jbe
in
cmp
mov
sbb
idiv
mov
pop
sti
inc
jnp
popf
(bad)
into
div
adc
fwait
paddusb
cli
mov
jge
mov
push
xchg
sub
bound
sahf
clc
inc
retf
sbb
jno
retf
cmp
dec
push
out
shl
pop
push
call
adc
test
cmps
ret
ins
popf
lahf
jnp
jge
mov
inc
int3
clc
fimul
int3
sbb
and
and
sahf
dec
aaa
or
ficom
jmp
inc
mov
rol
cmp
mov
push
xchg
popf
xchg
mov
outs
stos
or
cmc
in
into
into
scas
rcr
ins
out
call
hlt
lock
adc
xchg
dec
or
ja
xor
sahf
adc
xlat
add
fcom
sbb
jbe
imul
arpl
aam
pushf
pusha
hlt
push
sbb
ins
adc
aaa
icebp
dec
in
mov
sbb
mov
int3
in
dec
bound
test
mov
cli
or
repz
fisttp
dec
hlt
xor
test
xchg
cmps
lods
lds
push
dec
popf
or
mov
pop
dec
dec
adc
fstp
and
pop
pop
enter
push
cs
out
jne
(bad)
ja
sar
push
mov
dec
jne
add
push
jo
sbb
shr
mov
shl
rcl
mov
sub
jnp
popf
mov
dec
(bad)
mov
in
push
stos
aad
push
imul
out
adc
(bad)
lea
adc
aas
cmp
cli
adc
push
adc
cmc
inc
hlt
xchg
inc
and
test
test
int3
js
mov
retf
(bad)
dec
cmp
repz
mov
or
dec
sar
xchg
push
push
xchg
call
enter
iret
jmp
jle
pop
and
sub
mov
jl
cmc
(bad)
adc
inc
push
inc
or
inc
push
test
adc
leave
mov
adc
out
repz
loop
mov
push
mov
cdq
jns
cmp
lds
push
mov
test
xor
movs
idiv
aas
add
mov
imul
or
aam
mov
pop
(bad)
sahf
jge
and
ja
mov
fld
mov
xlat
adc
(bad)
push
aas
dec
aas
std
rol
push
cmp
or
ins
mov
not
cmp
sub
jbe
inc
frstor
(bad)
(bad)
je
sbb
lahf
and
cmp
push
xchg
or
fdiv
xor
jnp
mov
in
test
push
aam
and
push
enter
add
movs
fwait
push
xor
and
mov
sbb
cmp
leave
popa
call
stos
ins
xor
and
cmp
adc
or
or
imul
add
clc
dec
push
lods
popf
xor
sub
out
daa
aaa
push
in
lea
outs
lock
aam
ret
dec
add
jle
push
push
pop
aaa
sub
sbb
scas
imul
in
ja
dec
dec
icebp
neg
pop
push
xlat
cmps
call
jnp
push
or
fcom
sbb
jge
out
mov
push
cmp
das
cmp
test
fldcw
mov
stos
inc
fs
out
out
push
mov
hlt
xor
and
rcl
je
push
jne
stos
cmp
cmp
cmps
in
in
int
xor
jecxz
mov
loop
inc
mov
rcl
mov
out
(bad)
stos
or
inc
sub
sahf
pop
mov
int
jmp
sub
lods
lods
and
xor
dec
mov
mov
int
fdivr
push
icebp
xor
sbb
xor
(bad)
aam
mov
xor
mov
mov
mov
add
cmp
add
push
add
int
jnp
and
xor
inc
dec
pop
pop
adc
inc
adc
push
lock
popa
jmp
out
dec
pop
rcr
in
dec
lds
stos
fdiv
in
add
mov
int3
xchg
xchg
xor
xchg
fbstp
mov
addr16
add
mov
mov
and
cmp
mov
and
out
jns
push
jg
xchg
rol
sbb
add
or
outs
sub
stos
aas
fwait
mov
pop
jl
mov
sbb
inc
xor
call
iret
aas
adc
mov
xchg
sbb
mov
(bad)
jmp
popa
adc
mov
sbb
sub
push
xor
xor
add
or
mov
scas
and
mov
or
pushf
sbb
clc
test
outs
push
int
in
xchg
icebp
adc
loope
jge
mov
in
mov
leave
sbb
jmp
or
mov
push
xlat
fwait
arpl
ftst
cmp
mov
iret
and
cmc
sub
cmp
aaa
inc
pop
ret
cmp
sar
fisttp
xor
jmp
clc
fld
das
aad
fwait
xchg
iret
xor
fidivr
sbb
and
mov
mov
mov
imul
call
data16
addps
cs
sub
mov
inc
(bad)
cmps
pop
mov
aad
add
int
jne
mov
cmps
push
call
pop
scas
bnd
shr
ss
test
out
daa
repnz
adc
cmp
pop
push
push
add
lds
and
or
addr16
and
(bad)
stos
mov
jbe
adc
int3
dec
xchg
mov
ror
push
retf
into
cmp
sub
fdivr
pop
add
repz
repnz
cmp
scas
imul
fs
cmp
fsubr
mov
cmp
sub
mov
repnz
and
pop
pop
lahf
sbb
sub
xor
scas
ret
jmp
mov
cmp
sub
adc
inc
pop
in
aas
scas
pop
int3
hlt
dec
adc
test
cmp
push
scas
inc
lahf
xchg
pop
in
(bad)
mov
in
movs
push
cmp
les
ficom
dec
sub
(bad)
gs
lock
add
mov
loop
inc
xchg
mov
adc
push
dec
xor
pop
cmp
pop
pop
cmp
xchg
sub
hlt
or
jge
adc
outs
(bad)
xor
sbb
jmp
xor
lods
sub
and
test
adc
inc
gs
lods
add
fwait
nop
dec
mov
lock
fimul
and
lods
adc
cmps
mov
into
minps
(bad)
icebp
dec
cs
cmp
push
push
out
cmp
mov
cli
mov
popf
push
jb
aas
and
and
push
cs
push
push
int3
sub
fnsave
js
or
icebp
xchg
popa
xor
xor
rol
and
test
(bad)
mov
cmp
aad
add
iret
sbb
(bad)
lock
into
jmp
xlat
fs
sti
dec
lds
in
ss
(bad)
mov
or
push
mov
cs
dec
(bad)
stos
pop
and
mov
out
cmc
daa
nop
enter
xchg
in
xor
mov
pushf
aam
mov
pop
sub
or
test
add
mov
mov
adc
int3
or
pusha
jae
xor
aaa
repnz
outs
fnstsw
mov
cwde
mov
cli
push
pop
fnstsw
xlat
cld
je
outs
lds
mov
jl
aas
and
(bad)
xlat
xchg
mov
inc
imul
sbb
mov
cmps
ficomp
js
aas
daa
shr
or
xor
or
mov
add
adc
pop
mov
fstp
adc
std
aaa
lock
loopne
cs
xchg
mov
jge
mov
sub
(bad)
pop
repz
mov
mov
pop
push
xor
inc
lock
cmps
push
pop
add
cli
inc
push
mov
mov
sar
call
and
fisttp
ret
test
mov
in
jmp
xor
ins
xor
fbstp
test
add
imul
dec
ja
jecxz
ficomp
inc
push
icebp
wbinvd
xchg
cmp
call
loope
jge
xchg
xlat
ss
mov
stos
in
jg
xor
fstp
cmps
lds
pop
test
arpl
sbb
(bad)
test
mov
mov
jae
or
mov
rol
inc
xchg
psubb
mov
ret
pop
retf
xchg
push
jb
mov
les
xor
xor
mov
lahf
mov
add
(bad)
std
sbb
jge
cmps
das
inc
dec
pop
(bad)
mov
repz
sub
shl
jae
xchg
das
std
int3
jno
ret
cmp
jmp
xchg
ins
sbb
hlt
ficom
and
mov
or
or
jge
pushw
out
mov
adc
jge
add
aam
xchg
or
scas
or
icebp
jg
inc
push
xor
rcl
mov
push
loopne
pushf
inc
fistp
sub
stos
dec
or
cmp
out
rcr
mov
push
sub
sbb
jmp
pop
mov
xor
int3
pop
inc
fs
js
lock
push
adc
xchg
push
mov
lock
js
jmp
into
fwait
out
add
jb
push
adc
out
jno
jne
or
(bad)
call
loope
pop
int
mov
sub
cmc
(bad)
(bad)
daa
imul
dec
ret
push
cmc
xchg
adc
movsx
ror
outs
pop
xor
mov
jae
adc
jg
inc
pusha
jmp
cwde
inc
je
je
(bad)
sub
mov
jmp
jnp
sbb
arpl
fucomip
sub
and
mov
ja
fcomp
mov
shl
push
nop
imul
rol
and
or
or
(bad)
(bad)
stos
loope
add
pop
je
xor
repnz
xchg
cmp
sbb
cli
push
and
jmp
xor
out
rcr
push
dec
cmc
xor
mov
sahf
xor
lods
mov
fild
and
and
shl
repnz
div
sub
imul
out
add
movs
xchg
out
xor
pop
loope
inc
ficom
xchg
std
push
xchg
or
push
shl
mov
inc
push
cmp
or
int3
std
addr16
and
cmp
inc
in
daa
loop
xchg
(bad)
dec
adc
neg
pop
push
repnz
and
xor
mov
xor
in
jmp
retf
jmp
or
inc
call
gs
adc
lahf
out
lahf
pop
add
iret
and
dec
arpl
shl
push
sahf
fcom
(bad)
dec
mov
out
pushf
sbb
fsub
dec
push
addr16
mov
out
ret
push
mov
outs
inc
bound
mov
inc
ror
jg
fcmovne
jae
outs
or
and
sub
push
pop
xchg
jl
xor
sub
lock
lock
push
cld
repz
cmps
lea
retf
cmp
mov
mov
or
bswap
push
nop
fidivr
xchg
xchg
not
(bad)
pop
jb
mov
fiadd
adc
mov
jecxz
jle
ficom
push
cmc
iret
inc
mov
repz
repz
arpl
out
mov
call
and
fild
sti
test
(bad)
push
mov
add
pop
sbb
xor
pop
and
cmps
fsubp
sub
cmps
pop
pop
cli
mov
and
sbb
sub
test
aam
jl
xchg
mov
sbb
mov
push
fisttp
mov
or
push
clc
hlt
dec
stos
xchg
mov
add
inc
inc
xchg
mov
xor
pop
push
mov
neg
mov
mov
inc
sub
mov
enter
test
mov
jmp
mov
adc
inc
outs
clc
add
dec
xchg
sub
daa
cmp
iret
out
xchg
inc
mov
jge
add
jecxz
arpl
mov
push
mov
imul
xchg
cmps
mov
inc
sub
inc
in
lahf
dec
fwait
imul
scas
cdq
xor
cld
cmp
xor
out
xchg
adc
je
ret
in
adc
and
adc
data16
dec
inc
in
sahf
ss
jmp
lods
jbe
popf
and
cmp
pop
mov
nop
xchg
in
iret
cdq
add
es
fs
pop
fnstcw
cmp
inc
jno
(bad)
shr
in
mov
push
std
push
cmc
iret
pop
adc
loopne
or
(bad)
movs
idiv
inc
mov
sti
mov
mov
or
mov
stc
pop
jg
mov
cmp
mov
push
repz
inc
ja
mov
test
loope
jmp
jmp
test
popf
loop
cmc
mov
dec
cmps
loopne
dec
mov
inc
cmps
push
cld
(bad)
cdq
adc
mov
push
inc
mov
aas
jmp
test
cmp
pop
gs
idiv
push
stos
pushf
dec
push
sub
adc
pop
dec
xchg
xchg
push
arpl
cmp
or
jmp
lds
and
les
xchg
inc
in
sub
push
fwait
cmp
test
sub
mov
mov
out
movs
pop
inc
int3
(bad)
push
mov
adc
mov
pop
jo
pop
inc
sahf
ins
es
int
shr
push
mov
mov
mov
push
mov
xor
lss
das
ss
retf
(bad)
aas
lds
lea
out
pop
sbb
clc
(bad)
xchg
pop
in
js
clc
or
sbb
je
inc
nop
daa
xchg
out
retf
jp
repnz
cwde
das
mov
pop
loop
jmp
gs
push
sbb
jecxz
jp
cmps
jg
xchg
and
xor
lahf
outs
icebp
in
or
pop
lahf
adc
mov
mov
mov
ror
arpl
add
xchg
or
mov
inc
and
lods
(bad)
jp
pop
push
or
add
test
fnstenv
mov
jmp
loope
inc
dec
inc
xchg
mov
imul
rcl
inc
repz
and
add
mov
push
adc
inc
mov
push
xchg
cmp
push
or
icebp
xchg
fild
dec
dec
xchg
outs
scas
jecxz
pop
push
push
and
into
cmps
movs
call
call
ins
jg
add
int3
cmp
movs
xlat
rcr
add
imul
xor
pop
pop
lea
jl
mov
push
sbb
sbb
imul
call
cdq
ins
clc
xchg
sub
pop
mov
rol
dec
sub
pop
pop
cmp
mov
inc
push
test
mov
shl
adc
stc
inc
or
mov
xor
mov
xor
lahf
je
jl
inc
daa
dec
(bad)
push
inc
lods
ret
dec
mov
jl
dec
sbb
mov
push
fadd
sub
jp
and
popa
cmp
and
out
pop
pop
or
and
mov
cmp
das
popf
outs
cmps
dec
test
xor
push
int3
test
add
jl
add
gs
push
enter
icebp
adc
(bad)
in
call
mov
into
pop
mov
inc
adc
and
cmp
leave
dec
or
outs
push
xchg
fst
mov
fwait
mul
pop
push
fsubr
xchg
xchg
mov
aam
rcr
cwde
popf
sub
jne
sahf
out
push
mov
mov
movs
mov
(bad)
sbb
dec
stos
inc
ins
jp
test
add
xor
mov
(bad)
mov
jge
inc
sbb
dec
push
addr16
fld
or
js
adc
mov
push
sub
call
(bad)
push
fadd
sti
pop
jne
add
enter
aaa
or
push
sbb
(bad)
dec
xor
shr
and
int3
into
int
rol
(bad)
scas
repnz
js
loope
popa
ss
cmp
cld
imul
mov
adc
ret
fst
sub
mov
test
mov
(bad)
cmc
aas
mov
ror
das
ins
add
imul
sub
dec
and
(bad)
add
(bad)
shl
aam
mov
ds
daa
push
or
outs
call
test
mov
in
inc
sbb
cli
cld
cs
outs
adc
imul
scas
das
push
mov
loope
mov
and
ror
outs
and
jne
mov
xor
jns
std
lds
xchg
lods
imul
cld
xor
jb
ret
sub
push
cmc
outs
xor
aas
pop
push
jo
add
pop
(bad)
xchg
adc
in
mov
sub
popa
arpl
ror
fist
add
push
in
(bad)
aaa
mov
mov
pusha
sub
pop
add
mov
jne
cwde
sbb
test
adc
adc
jmp
jge
dec
push
pop
dec
call
popa
int
int3
jecxz
fst
sbb
dec
je
cmp
jae
jbe
lahf
xchg
retf
push
jb
mov
jb
cdq
cli
retf
sbb
xor
cld
mov
dec
iret
sub
mov
xchg
loop
loop
iret
inc
mov
xor
or
inc
xor
call
repz
call
cli
mov
jnp
sub
adc
push
popf
ins
ins
fisttp
repnz
out
sbb
dec
sbb
push
pop
pop
push
and
sub
mov
jno
inc
xchg
mov
inc
xchg
xor
jns
aaa
add
dec
adc
aad
test
xlat
sbb
mov
jp
lods
ds
sbb
stos
inc
cld
dec
int
jbe
fstp
ret
push
or
not
imul
fs
pop
call
loope
enter
test
pop
add
pop
mov
(bad)
adc
pop
scas
arpl
ins
neg
or
bound
test
push
add
call
or
jg
jmp
pop
jmp
cmp
push
imul
mov
icebp
sbb
mov
xchg
inc
jl
jg
mov
fcomp
fistp
fdiv
add
stos
aad
inc
mov
out
mov
icebp
dec
ret
outs
iret
fs
cld
loope
aam
pop
cmp
mov
lds
add
mov
cbw
mov
xlat
stos
mov
xor
cwde
or
repz
retf
into
fsubrp
outs
js
xor
repz
lods
fidivr
mov
mov
or
imul
mov
mov
into
dec
je
jns
pop
ins
enter
mov
dec
mov
aas
sahf
add
push
lods
and
sbb
push
add
ja
jnp
repnz
jl
loopne
sub
inc
fsub
in
mov
ss
(bad)
mov
dec
lock
outs
gs
mov
fwait
je
call
stos
aas
jge
je
mov
add
out
dec
mov
mov
add
in
pop
iret
push
push
mov
mov
into
mov
jae
in
aaa
leave
sbb
clc
mov
push
jmp
cmp
(bad)
mov
or
neg
into
ja
jge
cli
lds
dec
fldlg2
pop
adc
push
or
sub
xchg
mov
pop
cmp
xor
enter
sbb
push
jne
lods
idiv
sub
imul
fcmovbe
add
push
out
retf
sbb
arpl
mov
sbb
cmps
imul
cwde
mov
xor
pop
arpl
sbb
nop
shr
xlat
cmps
or
imul
lods
adc
adc
call
pop
push
sbb
dec
fsub
dec
pop
ds
dec
mov
addr16
mov
inc
sbb
or
cmps
push
push
mov
xchg
or
jb
(bad)
int3
movs
add
cwde
sbb
loope
fdiv
jno
push
push
ret
movs
(bad)
xor
xor
xor
out
stos
mov
cli
lahf
xor
ds
xchg
pop
loop
ins
mov
das
lea
xor
(bad)
cmps
mov
inc
xchg
sub
inc
data16
addr16
(bad)
fidivr
nop
jmp
sub
div
call
sub
jmp
mov
ins
dec
sahf
imul
cmc
mov
outs
dec
jmp
pop
jle
aaa
xchg
cld
inc
dec
jns
shl
jle
sub
mov
sub
and
push
arpl
and
jns
pop
adc
xchg
pop
out
inc
mov
mov
repz
movs
adc
inc
add
xlat
call
pop
jmp
adc
fisttp
mov
ja
das
out
push
je
sbb
clc
mov
cmp
and
and
je
add
push
test
into
sbb
std
test
int3
mov
add
mov
dec
jne
addr16
jmp
sub
xor
and
dec
lock
mov
mov
inc
mov
adc
leave
sbb
sbb
sahf
push
inc
jo
imul
cld
jo
out
aam
in
cli
push
cmp
bound
push
popf
aas
xor
inc
aam
adc
aam
aaa
add
(bad)
(bad)
pop
cmc
xchg
das
repz
sti
mov
ss
dec
sbb
jbe
pop
(bad)
in
add
call
stos
or
fcmovb
call
(bad)
xchg
out
cmps
jl
inc
push
test
fwait
pop
imul
xor
mov
and
sub
(bad)
pop
sub
jle
push
cmps
scas
mov
push
cmp
ins
xchg
(bad)
fwait
ret
test
pop
mov
mov
outs
cld
xor
jbe
pop
cmp
mov
mov
call
xchg
mov
fstp
cdq
cs
jae
pop
dec
shr
mov
sbb
xor
call
push
inc
mov
pop
or
xlat
and
aaa
movs
fxch
push
jp
aam
cmc
inc
or
imul
dec
cmps
mov
push
inc
or
outs
cmp
movs
jl
bound
mov
ret
ficomp
dec
lods
push
arpl
mov
push
fist
pop
aaa
pop
xchg
sti
call
and
mov
pop
mov
jmp
dec
(bad)
xchg
lods
(bad)
xor
adc
iret
sbb
mov
repnz
pop
push
gs
or
in
jge
lods
sbb
xchg
or
xlat
xor
shl
mov
movs
cmp
movs
push
int3
push
popa
imul
xchg
nop
or
mov
ja
loope
pop
mov
xchg
outs
ficomp
inc
outs
daa
nop
adc
cmp
jns
add
pushf
mov
arpl
imul
push
dec
xchg
xchg
sub
(bad)
push
fmulp
xor
sbb
iret
pop
retf
push
sub
(bad)
sbb
scas
(bad)
hlt
fmul
push
js
adc
into
dec
cmps
mov
cmovle
or
add
fisub
push
mov
and
outs
or
jl
lahf
cwde
imul
cmp
mov
adc
xlat
rol
aas
inc
(bad)
in
daa
push
ins
xchg
fld
iret
out
jnp
pop
pop
rol
sahf
cmp
fsub
shl
ins
xchg
xor
(bad)
pop
shl
adc
inc
lds
pushf
js
sbb
jne
xchg
jns
push
bnd
repz
jmp
cmp
xor
mov
sub
fisttp
fcom
mov
pop
clc
mov
push
out
and
dec
in
jno
pushf
inc
mov
lods
movs
cdq
repnz
push
out
xchg
cmc
push
sub
enter
inc
std
in
std
test
scas
and
xor
lods
or
test
ja
leave
sub
inc
dec
jmp
xchg
or
pop
pushf
ficomp
sbb
ss
mov
dec
out
sahf
stos
add
jmp
clc
pushf
mov
jne
bound
add
jmp
cmc
aas
(bad)
adc
sahf
xor
push
aas
sti
cli
imul
pusha
fs
and
mov
stos
inc
nop
scas
(bad)
fiadd
bound
cwde
test
aaa
xchg
fcom
sahf
push
sub
aad
call
pusha
xchg
adc
pop
sbb
or
leave
popf
xchg
sbb
adc
dec
hlt
inc
pushf
cmc
or
inc
jle
bound
inc
xchg
xchg
movs
mov
mov
jle
lea
mov
ret
push
xor
popf
stos
je
add
in
and
cmps
jbe
leave
movs
jmp
pushf
loopne
cli
xchg
das
or
fist
popa
pop
cmp
mov
cdq
mov
imul
cmp
jnp
sub
xchg
pop
pop
lds
aam
clc
(bad)
aas
and
or
lea
imul
ins
out
hlt
fcomip
ss
retf
xor
enter
rcl
jl
not
(bad)
dec
mov
(bad)
sub
push
ins
scas
cmp
lock
and
les
cmp
inc
adc
movs
cmp
pop
ss
loope
test
sub
cmp
mov
sahf
iret
jmp
rol
lea
pop
xor
xor
ret
lods
push
fild
inc
mov
mov
sahf
call
and
movs
pop
xor
sub
jg
adc
stos
daa
add
xchg
clc
push
jo
fmul
ds
mov
enter
and
mov
scas
sbb
or
and
cld
and
mov
clc
mov
add
jmp
into
fwait
stos
jae
in
loopne
aad
mov
in
movs
cli
les
mov
dec
inc
xor
movs
adc
outs
cmp
cmc
push
imul
mov
das
push
jae
mov
out
gs
imul
jb
pop
jbe
jmp
mov
jp
adc
inc
bound
push
lds
movs
test
mov
add
stc
xchg
mov
pop
fisubr
push
or
sbb
add
and
jge
mov
and
enter
cmp
cs
xchg
dec
pusha
clc
add
shl
xchg
xchg
pop
xor
cmp
adc
imul
jbe
sbb
pop
mov
push
and
fst
aaa
jae
push
xchg
adc
in
and
pop
add
jmp
or
pop
rcr
scas
sar
stc
retf
fs
in
jp
stc
push
pop
cmp
mov
sub
fdivr
fdivr
out
dec
dec
out
xor
movs
fwait
jmp
fdivp
dec
fs
add
sti
and
pop
jg
test
call
mov
sbb
inc
push
push
fisttp
scas
ret
push
or
sti
lods
cmps
sbb
xchg
push
xchg
cwde
test
jbe
inc
mov
mov
add
sar
scas
stc
cmp
mov
sbb
inc
pop
mov
pop
jmp
mov
mov
xor
call
sub
sbb
jmp
xor
jno
fcmovb
inc
push
sub
(bad)
adc
idiv
add
sub
stos
out
push
jne
(bad)
in
and
xor
fbstp
stos
fild
inc
imul
sub
ins
and
mov
jmp
and
mov
mov
bound
add
pop
cmp
sub
cmp
add
pop
repz
test
in
xchg
cmps
fidiv
mov
sub
mov
in
clc
pusha
pop
out
add
rol
pop
push
pushf
push
cli
test
movs
out
jmp
cld
jge
ret
call
sbb
popf
stos
fdivr
lods
jmp
mov
pop
ficomp
sub
das
shr
mov
clc
cli
jp
pop
pop
dec
fisub
mov
add
cmp
aam
cmps
inc
inc
in
sub
jo
push
pop
gs
mov
xor
lock
push
push
sub
sti
js
jne
jge
out
lods
dec
jmp
pop
mov
out
repz
sub
xchg
dec
test
shl
dec
cli
mov
(bad)
xchg
fistp
jne
or
cmp
ret
rcr
in
mov
adc
js
xchg
int
adc
jmp
cmp
fisub
shl
stos
jmp
sub
cmc
add
push
cmp
aas
cmps
ins
enter
in
cmp
and
in
addr16
jge
aam
aam
pop
mov
push
inc
mov
hlt
jb
loop
jmp
rcl
idiv
push
mov
iret
fcomp
stos
out
mov
sti
or
dec
push
inc
mov
int3
or
inc
jo
data16
cmps
pushf
(bad)
mov
mov
inc
mov
push
adc
into
pop
xchg
ja
outs
mov
pop
push
imul
mov
inc
dec
pop
ror
push
dec
pop
mov
clc
scas
inc
sub
pop
or
imul
lods
je
add
push
es
(bad)
fiadd
jne
cs
mov
jge
stos
fistp
repnz
ror
inc
je
push
or
pop
adc
pop
addr16
dec
xor
jnp
dec
xlat
inc
les
sub
jae
mov
out
mov
mov
ucomiss
pop
mov
push
jae
sbb
pop
xchg
sbb
fld
and
pop
mov
nop
and
push
and
aaa
push
fnstcw
add
idiv
popf
cmp
push
inc
call
dec
out
inc
dec
add
inc
cmp
sbb
(bad)
push
mov
jl
adc
sbb
jle
jge
add
movs
jno
xor
cmp
sbb
sub
test
fbld
xchg
add
mov
cli
cdq
jmp
mov
xchg
xor
(bad)
cwde
cmp
push
ss
in
sti
mov
mov
adc
adc
mov
jne
cli
pop
push
popf
shl
jp
push
leave
shl
cmp
ss
jne
mov
xor
push
cmp
dec
jge
xchg
jecxz
mov
loopne
and
dec
sub
fdivrp
inc
mov
in
cmp
mov
sub
test
push
jp
leave
mov
test
daa
into
cmp
cwde
retf
mov
out
in
mov
arpl
dec
rcl
adc
xor
xchg
pusha
jnp
dec
repz
sub
lods
push
fisub
inc
fcomp
jle
or
retf
adc
add
xor
in
into
sub
push
mov
jns
mov
rcr
nop
mov
and
and
das
lock
shr
test
mov
xor
leave
std
iret
dec
mov
adc
cs
or
or
dec
nop
ja
test
lea
fcmovb
sbb
xchg
add
shl
outs
xchg
push
and
push
sbb
je
xor
lea
(bad)
xchg
sub
jmp
shr
sub
sub
aam
xor
xchg
pop
bound
in
mov
jbe
sub
repz
push
movs
iret
xchg
outs
xor
push
das
movs
add
test
xchg
mov
sub
call
mov
jmp
call
or
stos
aam
push
leave
inc
jl
push
fwait
ret
inc
mov
lock
enter
push
add
or
fcmove
arpl
xchg
pop
retf
adc
rcr
aam
int
not
arpl
pop
imul
adc
adc
mov
daa
jb
cmp
push
xchg
mov
gs
mov
and
mov
lahf
leave
jecxz
arpl
stc
sbb
xlat
cdq
jbe
adc
sbb
data16
(bad)
adc
lods
rcr
jl
pop
pop
sub
mov
jg
scas
inc
(bad)
fcomp
add
push
push
mov
imul
sbb
bound
push
mov
scas
rcr
sub
adc
mov
(bad)
in
int
dec
mov
jns
lock
mov
xor
and
pop
dec
fwait
adc
push
and
jb
test
xor
jo
hlt
xchg
pusha
mov
cs
inc
cmp
repnz
xchg
int
mov
in
and
ss
and
xchg
test
add
add
xor
adc
out
xchg
ins
mov
mov
cwde
fsub
pop
xlat
push
cmp
mov
rcl
pop
and
jecxz
sbb
mov
gs
ss
popf
mov
enter
mov
or
xor
sbb
pusha
cli
mov
addr16
paddsb
xlat
outs
scas
push
stos
jmp
xchg
dec
and
ja
xchg
aad
mov
mov
addr16
jl
lods
push
in
test
test
jno
dec
shl
mov
mov
test
sti
sub
mov
xchg
aaa
pusha
leave
inc
and
mov
and
xor
int
cmp
sub
jg
(bad)
and
jns
xabort
scas
and
sbb
xchg
jecxz
test
cmp
and
jmp
push
jmp
out
inc
sub
je
out
imul
xchg
cdq
out
mov
mov
mov
or
adc
aaa
fucomp
or
pop
cli
ds
pop
jmp
push
cmp
mov
dec
xchg
inc
add
sub
fsubp
(bad)
iret
pop
bound
xchg
fs
and
sub
jmp
loopne
mov
(bad)
dec
mov
push
jo
pushf
and
cmp
fwait
adc
jno
dec
in
cmps
push
inc
sti
outs
iret
call
dec
mov
(bad)
pushf
call
dec
xor
xchg
cmp
movs
(bad)
(bad)
adc
jbe
xchg
ja
stc
mov
mov
nop
or
(bad)
jmp
xchg
lock
lods
arpl
in
jmp
lahf
aas
xchg
push
(bad)
mov
and
xchg
pop
das
mov
pop
pop
test
pop
cwde
mov
dec
loope
neg
inc
xor
shr
test
or
cmp
adc
jmp
jns
(bad)
pusha
sbb
lods
cmp
mov
pop
xor
mov
or
cmp
mov
arpl
sub
push
xchg
dec
out
pop
ja
jecxz
sub
adc
mov
pop
scas
mov
push
ja
sub
mov
fs
adc
inc
inc
shl
ins
sbb
icebp
cmp
mov
and
aas
repz
sbb
sub
xor
mov
aam
sub
pop
sar
mov
add
cli
and
aas
cmp
adc
lock
or
mov
les
pop
mov
mov
retf
dec
enter
mov
loopne
sbb
xor
xchg
pop
aaa
push
cld
lods
retf
imul
jmp
push
mov
inc
or
inc
enter
push
popa
mov
push
hlt
pop
aad
cmps
inc
inc
adc
out
add
dec
outs
stos
xor
out
pop
mov
div
call
cmc
imul
retf
scas
xchg
sub
cmps
cdq
and
jg
jno
popa
arpl
into
mov
not
in
and
xchg
adc
rcr
mov
dec
movs
imul
fst
mov
mov
add
push
out
out
in
add
xchg
sbb
mov
push
cmp
outs
xor
adc
and
xchg
jge
(bad)
mov
ror
cmp
lods
xor
out
bound
pushf
loop
push
xor
int3
bound
aam
das
loop
xor
cmp
sbb
fidivr
movs
lds
(bad)
sbb
(bad)
dec
arpl
icebp
call
outs
xor
lock
push
dec
sbb
sbb
push
mov
inc
mov
rcr
mov
mov
and
ins
adc
(bad)
mov
scas
sub
das
pop
faddp
(bad)
pop
jecxz
xchg
lea
test
mov
sub
test
sub
dec
pop
pusha
xor
or
shl
gs
sub
push
and
xor
cmc
push
jecxz
fild
xor
dec
jecxz
scas
adc
out
mov
sbb
test
push
test
and
cmp
fst
sbb
(bad)
cmp
sbb
jbe
mov
je
and
fadd
mov
mov
js
sub
and
cli
pop
aam
shr
or
add
loop
add
out
out
(bad)
and
push
inc
in
xor
(bad)
icebp
cmp
adc
inc
and
(bad)
mov
retf
hlt
clc
bound
ins
dec
es
test
push
or
sub
dec
fldenv
fidiv
xor
dec
ins
loope
jp
popf
es
xor
add
or
xchg
xchg
ret
inc
shl
push
lahf
mov
test
fstp
leave
or
je
mov
das
mov
rcl
sub
inc
out
cwde
sub
call
sub
lock
retf
push
cmp
push
outs
mov
cmp
scas
jmp
or
jmp
or
(bad)
lods
cmps
cmps
mov
add
daa
xchg
(bad)
das
jmp
shl
push
imul
add
hlt
jmp
push
mov
push
dec
cld
es
inc
push
push
jns
mov
lods
xchg
imul
xchg
xor
jg
jb
ror
push
pusha
ret
adc
inc
aas
scas
ds
in
rcl
gs
xor
cmp
int
out
out
out
pop
dec
cmp
inc
int
loop
xchg
mov
call
sbb
xchg
and
or
sub
push
pop
xchg
std
(bad)
inc
enter
inc
sar
and
xchg
shl
mov
int3
xor
lahf
lock
aad
xchg
xlat
mov
pop
cli
pushf
repz
add
pushf
mov
imul
sbb
daa
cmp
pop
and
hlt
test
xor
xor
hlt
jbe
mov
pshufw
pusha
dec
popa
jg
push
add
mov
jae
xchg
test
cmps
push
nop
mov
pop
loopne
pushf
jge
mov
xor
ror
adc
xor
pop
push
outs
in
jnp
or
pop
fbld
xchg
cdq
inc
inc
mov
loope
enter
std
adc
arpl
push
(bad)
pop
ret
inc
jl
sbb
pop
fwait
and
sahf
xor
xchg
js
shl
popa
data16
(bad)
es
and
out
add
aaa
aad
imul
push
cmp
xor
les
and
or
icebp
out
add
pop
ja
add
ds
shl
aad
push
int
jge
(bad)
pop
(bad)
pop
mov
in
fs
pop
and
sub
shr
into
mov
enter
cmp
jmp
hlt
ret
mov
dec
lods
icebp
stos
les
adc
jne
clc
jnp
loope
neg
mov
cld
mov
sub
xchg
clc
dec
jle
or
xchg
ja
fld
sbb
cmp
mov
jne
or
jae
cdq
lock
stos
pop
(bad)
es
in
and
outs
ret
test
imul
outs
addr16
ret
es
mov
pop
inc
pop
dec
(bad)
push
push
retf
adc
bound
sbb
or
aaa
fadd
cld
in
xchg
mov
(bad)
sti
fsub
shr
scas
sub
and
xchg
icebp
inc
xchg
in
cs
fwait
inc
add
test
jns
mov
jmp
fwait
icebp
xchg
out
jne
push
loope
in
cmp
rol
cmp
popa
std
std
add
mov
stos
ror
inc
icebp
lods
out
adc
mov
jb
jo
dec
cwde
aas
mov
mov
imul
lea
and
push
jne
ja
jmp
mov
mov
inc
mov
push
xchg
mov
sbb
mov
mov
jae
fbstp
mul
std
pop
imul
out
cdq
inc
popa
xchg
jo
movs
scas
sub
(bad)
xchg
fsub
cmp
call
ret
sub
aad
data16
push
fild
add
jp
sbb
mov
hlt
ficomp
xchg
js
cld
add
loope
ror
ret
push
lods
inc
cmp
cmp
mov
add
and
cmp
lock
push
outs
mov
adc
mov
jne
fistp
dec
out
pmulhuw
mov
xchg
cmp
adc
jle
enter
out
pushf
push
pushf
sbb
mov
jle
mov
fdiv
push
int
aam
cmp
adc
sub
xchg
mov
jmp
pop
pop
dec
(bad)
cmp
stos
lods
or
mov
xchg
stos
push
ficom
in
lods
mov
loope
sub
movs
fldenv
loope
ins
seta
sub
movs
and
jb
pop
adc
jae
mov
mov
movnti
cli
xor
xor
lahf
adc
and
movs
call
(bad)
out
rcr
not
sbb
sbb
lea
fmul
sub
mov
stos
repnz
fwait
mov
xor
pop
or
inc
mov
inc
test
clc
xor
jp
mov
pop
ss
mov
aad
inc
push
and
call
ins
movs
xor
sahf
icebp
std
hlt
retf
cli
xor
gs
rcl
or
jl
xchg
and
mov
in
ins
sahf
cmps
retf
ds
mov
or
mov
fwait
mov
outs
push
sbb
or
lahf
pop
add
mov
clc
pop
icebp
fld
adc
inc
and
push
mov
jnp
push
push
sar
dec
push
(bad)
push
ret
dec
jbe
movs
aas
mov
and
test
xchg
(bad)
adc
xchg
sub
out
jg
daa
div
jbe
mov
out
mov
outs
or
test
adc
sti
rep
pop
ficomp
sbb
and
xor
cld
test
cwde
mov
xchg
bound
lds
icebp
mov
(bad)
das
or
push
scas
sbb
fsubr
aam
lods
arpl
sbb
fwait
fwait
(bad)
lods
adc
pop
je
push
fs
out
(bad)
out
xchg
ret
inc
pop
sub
sti
xlat
fdivr
inc
sub
rol
shl
test
xchg
xchg
mov
cmp
dec
pop
ficomp
or
stc
sahf
(bad)
mov
sub
dec
aas
pop
rcr
fnsave
or
sub
xchg
call
add
add
push
xchg
jb
jno
fimul
xor
jecxz
xchg
push
(bad)
cmp
jb
xlat
lahf
loopne
cmp
cld
mov
ins
pop
inc
cs
mov
cmps
adc
cmp
push
mov
shr
add
adc
sub
adc
cmp
add
inc
push
xchg
inc
adc
aas
mov
int
es
push
jb
push
pop
(bad)
xor
adc
adc
scas
sbb
or
jne
push
mov
dec
cmp
mov
inc
int3
sub
sub
jmp
xchg
lahf
arpl
imul
and
mov
scas
ret
push
adc
inc
repnz
xchg
jns
mov
rcl
fild
and
fwait
neg
(bad)
and
pop
inc
and
fstp
dec
xor
pushf
pop
mov
fwait
add
or
jg
es
pop
pop
(bad)
ins
mov
fiadd
or
shl
push
pusha
dec
in
loope
imul
sub
or
fstp
and
popa
cmp
loop
xchg
nop
or
sahf
dec
ins
pop
dec
sahf
xor
gs
fcomp
xchg
cmc
dec
(bad)
sbb
scas
mov
dec
adc
mov
jo
mov
aas
popf
cmp
ss
add
pushf
into
xchg
daa
cmps
pop
pop
dec
faddp
(bad)
adc
lock
mov
add
call
mov
xchg
(bad)
jmp
add
dec
ret
imul
sbb
sbb
mov
lahf
inc
dec
inc
mov
jo
xchg
jnp
jae
cld
ret
or
js
xor
mov
sahf
scas
inc
adc
mov
mov
cli
sti
fimul
lods
test
push
pusha
loopne
add
lea
lock
out
mov
dec
pop
cmps
out
inc
and
test
sbb
ret
sbb
xor
push
ret
scas
push
into
cmc
xor
loope
leave
cld
pop
lods
aam
mov
cwde
sbb
and
mov
mov
push
imul
repz
sub
cs
inc
push
xchg
cs
shl
clc
adc
aaa
enter
shl
jecxz
shl
fwait
cdq
enter
mov
dec
lods
mov
sub
jb
or
cdq
mov
data16
pop
mov
inc
dec
mov
or
and
popa
push
movs
push
test
scas
das
rcl
lahf
(bad)
jp
inc
lock
in
sbb
ins
sub
inc
out
sub
call
lock
mov
stc
and
mul
push
cs
ror
mov
mov
jns
add
movs
add
cld
jb
nop
dec
sbb
ins
mov
mov
push
sbb
or
or
adc
sbb
std
inc
lahf
mov
mov
jl
pop
push
sbb
adc
xor
jle
movs
cmp
push
xchg
loope
or
in
aas
(bad)
sub
mov
sub
inc
adc
pop
push
in
hlt
aaa
stos
pop
push
dec
lods
jl
cmp
out
push
push
loop
cmps
mov
movs
add
dec
mov
scas
fild
es
xchg
mov
cmp
sub
and
add
jnp
std
dec
stos
out
(bad)
sbb
mov
adc
adc
dec
sbb
outs
out
icebp
cmp
pop
data16
bound
sahf
push
retf
gs
dec
popf
xchg
mov
mov
mov
and
mov
in
lods
pop
and
mov
mov
pop
(bad)
nop
jp
sbb
add
xor
lds
pop
sti
ret
shr
icebp
add
push
pop
cmp
jp
cli
jne
hlt
adc
cmc
shl
pop
shr
inc
adc
lds
jp
mov
mov
test
ror
or
cmps
inc
popf
in
mov
xor
and
jle
pusha
enter
out
mov
aad
mov
mov
shr
ds
(bad)
sbb
mov
and
push
jmp
jmp
jne
dec
cmps
outs
retf
call
dec
ret
outs
shl
sbb
mov
mov
into
adc
loope
and
inc
mov
cdq
popf
adc
repz
pop
and
mov
cli
add
addr16
ja
mov
dec
mov
rol
jno
fcmovne
rcr
and
push
test
es
mov
xchg
dec
mov
adc
push
push
das
aad
int
push
jl
(bad)
(bad)
outs
mov
and
ins
or
jl
inc
push
pop
ins
loope
fmul
jnp
int
push
pop
sbb
push
nop
shr
cmp
ins
inc
sbb
jl
inc
sahf
add
leave
cwde
ror
dec
mov
cmp
lods
iret
mov
out
loop
mov
adc
mov
sbb
in
daa
popa
fisub
cwde
js
sbb
retf
sub
loop
or
outs
cmp
imul
xor
mov
push
test
jb
inc
rcr
dec
bound
push
ret
mov
stos
sub
xlat
les
push
test
fbld
(bad)
leave
inc
shr
mov
loope
sbb
imul
int
fwait
js
or
stos
sbb
out
lea
stc
jnp
pop
inc
lahf
retf
mov
pop
out
movs
xchg
inc
sbb
lea
or
aad
push
xor
hlt
enter
cmp
jecxz
and
mov
je
sbb
fadd
sub
es
cmp
xchg
dec
daa
xor
fiadd
lods
pop
or
lea
mov
xor
mov
test
jmp
jo
out
cmp
add
mov
pushf
mov
mov
call
stc
cli
and
jg
jae
dec
adc
cmps
into
fs
push
pusha
cdq
out
hlt
cs
and
xchg
dec
dec
jne
mov
add
sub
xor
xor
retf
lods
(bad)
gs
sub
adc
inc
jmp
lahf
dec
inc
dec
jl
sbb
stos
aaa
jb
add
mov
push
(bad)
aas
sbb
nop
push
and
add
pusha
inc
mov
or
jmp
leave
mov
mov
pop
and
into
test
push
cmp
cmp
xor
mov
iret
and
pop
adc
stos
ja
lea
pop
sub
mov
sub
sti
in
mov
mov
les
xchg
test
mov
call
xor
sub
pop
or
adc
push
push
mov
xchg
mov
(bad)
(bad)
ficomp
loop
std
retf
dec
push
iret
mov
loope
mov
jne
lds
or
les
ins
loopne
xor
push
aam
out
mov
adc
outs
pop
cmps
jmp
repnz
xchg
out
aaa
push
(bad)
ins
xchg
and
cdq
jge
mov
jmp
push
stc
pop
cmc
xchg
xor
lods
and
fnsave
int3
jl
(bad)
jg
popf
and
repz
fisub
jne
stc
push
or
sbb
dec
cs
add
repz
mov
xchg
fstp
outs
or
test
int
add
xchg
cdq
ds
lods
shl
sar
(bad)
test
pop
sbb
scas
test
xchg
sub
cmp
sbb
ins
pusha
dec
xlat
jae
(bad)
adc
cmp
out
inc
sub
cmp
add
imul
ds
pop
les
fist
ins
mov
retf
or
or
je
leave
movs
imul
(bad)
test
call
lock
jmp
lock
mov
mov
lock
call
sbb
imul
push
pushf
dec
jns
and
add
xchg
adc
pop
cmps
nop
in
pop
xchg
shl
dec
push
rcl
retf
mov
imul
fistp
stos
mov
enter
dec
sbb
sbb
adc
dec
int
leave
retf
es
fs
(bad)
sbb
sub
lahf
mov
sbb
push
mov
cmp
mov
jecxz
or
push
std
out
and
fiadd
mov
xchg
ss
retf
inc
sahf
mov
sub
dec
call
jg
sbb
dec
push
dec
fwait
dec
inc
mov
and
aad
dec
mov
stos
repnz
jp
or
inc
mov
cli
pop
push
xchg
and
fdivr
cwde
fadd
test
mov
inc
call
jp
xor
pop
ret
cmp
mov
cli
pushf
test
imul
add
and
clc
add
pusha
cs
enter
fcom
(bad)
(bad)
dec
clc
aad
fwait
or
stos
mov
cmp
fidivr
loope
loope
jne
inc
or
outs
not
cmp
rcl
jns
mov
dec
pop
pop
(bad)
rcl
rcl
and
mov
dec
ret
xchg
neg
sub
add
xchg
and
dec
push
mov
push
repz
jns
push
scas
outs
jp
ins
cld
add
mov
scas
dec
rcr
lods
jge
and
(bad)
push
sbb
mov
data16
fs
inc
retf
es
in
fbld
fnstcw
jo
(bad)
mul
popf
into
push
in
jbe
pop
sub
inc
clc
(bad)
js
js
movs
or
lods
mov
test
jmp
cmp
mov
test
adc
stos
ja
test
add
adc
xor
mov
ss
xor
imul
test
or
cmp
or
dec
xor
mov
movs
out
fisttp
adc
loop
push
les
in
pusha
cmp
inc
shr
xor
icebp
and
popf
fst
add
in
jne
push
cld
lods
cmc
mov
clc
mov
aas
sti
and
xchg
jae
mov
and
enter
sti
xlat
add
out
or
in
in
gs
cmps
fbstp
jg
sbb
test
pop
enter
add
dec
push
push
cmp
sti
repnz
ror
call
fisubr
inc
dec
sub
mov
mov
adc
rcl
push
imul
mov
inc
cmp
sub
pop
scas
mov
push
jmp
rol
mov
pop
(bad)
aad
push
mov
jle
int3
xchg
sti
mov
and
dec
imul
loopne
mov
pop
lods
push
cmps
xor
sub
xor
popa
jns
mov
xlat
iret
(bad)
push
sub
dec
fild
rcl
repz
cld
gs
lods
jae
push
mov
adc
or
iret
addr16
xor
cmps
jg
sbb
lahf
ins
out
sbb
xlat
imul
pop
sub
lahf
test
cmps
or
xor
addr16
in
jecxz
cs
nop
imul
xchg
mov
call
push
and
mov
shr
push
pop
cwde
cmp
dec
ret
mov
sbb
ret
push
cmp
jl
out
fsub
sub
(bad)
xchg
popf
test
xchg
and
in
repnz
mov
push
mov
push
jnp
xchg
out
push
jmp
pop
push
push
aad
aad
mov
loop
dec
lahf
cmps
jle
xchg
lea
movs
jmp
mov
jmp
call
pop
sub
lods
dec
mov
shr
loopne
mov
pop
out
or
sub
and
sbb
inc
stos
ins
sub
sbb
fnsetpm(287
cmp
loop
xor
push
mov
mov
(bad)
push
jmp
sub
sub
push
jns
xlat
inc
push
lea
pop
movs
int
mov
sbb
(bad)
enter
sub
sbb
xchg
in
je
inc
rol
rcl
pop
fdiv
loop
adc
jg
inc
add
xor
or
pop
pop
movs
bound
lods
or
shl
rol
or
repnz
push
fcmovb
adc
mov
mov
ret
nop
fnsave
(bad)
push
fidiv
movs
pop
cmp
mov
xchg
sub
fsubr
xchg
ds
(bad)
in
aas
jle
ds
pop
cdq
dec
call
sub
retf
push
iret
mov
push
(bad)
stc
out
cmp
mov
out
xor
add
and
(bad)
jmp
gs
sti
mov
jae
inc
retf
loop
lds
retf
xchg
clc
fiadd
jne
test
jne
xchg
das
stos
or
shl
cli
pop
xor
or
sbb
add
pop
push
stos
cmp
call
js
rcl
out
shl
sub
jg
and
mov
xchg
daa
push
mov
xchg
ret
and
push
gs
adc
aaa
xor
leave
mov
push
or
push
(bad)
mov
nop
cmp
or
sub
dec
push
iret
(bad)
cmc
and
push
pop
push
inc
test
adc
xor
rol
adc
fimul
jbe
cmp
shr
jae
cmp
jno
adc
jg
pop
shl
push
push
repz
out
imul
retf
das
and
xchg
jbe
fwait
xchg
mov
and
adc
movs
push
out
stos
or
cmp
jno
cmp
push
mov
shl
das
test
lea
adc
jmp
jl
test
sbb
fnstcw
mov
mov
jbe
stc
cmc
imul
mov
and
test
icebp
in
rol
aas
movs
mov
stos
inc
fs
xchg
jo
mov
cli
or
pop
inc
inc
pop
push
pop
stos
movzx
fild
mov
cdq
dec
leave
dec
je
xchg
mov
out
pushf
ins
ret
or
clc
xor
xchg
xchg
js
push
movq
sti
pop
enter
cmp
cmps
pop
mov
jnp
xchg
xor
cmps
mov
and
sbb
push
leave
mov
xchg
jnp
inc
(bad)
cmp
adc
mov
hlt
test
call
jmp
xor
out
dec
jb
and
inc
fsub
stos
nop
mov
inc
ror
aas
cmps
leave
sub
mov
pop
lea
or
in
jmp
xor
(bad)
mov
mov
int
popf
ds
or
mov
sti
jb
mov
cmp
push
xchg
jecxz
jb
out
xchg
mov
cmp
aad
icebp
dec
out
mov
mov
idiv
xor
add
or
out
(bad)
sbb
not
add
movs
xor
mov
adc
mov
leave
dec
(bad)
mov
push
xchg
cwde
push
(bad)
rol
stos
pop
mov
sub
jbe
push
xchg
ja
xchg
and
mov
mov
pop
test
pop
outs
in
and
and
xchg
jecxz
xchg
sbb
xchg
jp
mov
mov
adc
add
jb
(bad)
pop
mul
lahf
mov
push
mov
icebp
and
bound
aaa
cs
retf
xchg
jmp
push
jbe
mov
sbb
jno
rcl
jae
mov
mov
sahf
inc
sahf
call
leave
adc
pusha
pushf
mov
adc
fisttp
mov
ret
iret
shl
push
lea
jmp
repz
inc
push
fimul
add
push
test
add
imul
sub
shr
xor
jae
push
xchg
or
int3
std
inc
fisttp
sub
cmps
fst
xchg
mov
test
stc
sub
dec
mov
pop
cdq
das
jnp
xchg
mov
in
frstor
add
in
mov
pop
ins
clc
fisubr
les
enter
mov
ret
jno
scas
stc
in
dec
add
ss
fist
mov
rcr
sbb
loope
imul
enter
mov
adc
mov
mov
push
cmp
mov
jmp
cmp
dec
xor
mov
popf
push
mov
imul
cmova
dec
xor
lods
(bad)
std
mov
and
scas
xor
or
ror
ds
les
js
lods
pushfw
ror
adc
data16
cwde
shl
fstp
add
lods
outs
(bad)
xchg
xor
or
sbb
and
mov
push
ror
(bad)
out
(bad)
outs
retf
pop
xchg
call
jns
mov
cmp
sti
into
add
or
gs
add
jge
(bad)
pop
mov
cli
cli
mov
add
in
out
jge
nop
and
push
in
jmp
jge
mov
cwde
push
int3
sbb
push
ja
ins
loopne
mov
add
mov
(bad)
fimul
cmps
aaa
outs
sbb
inc
cmp
xor
dec
xor
imul
stos
dec
xlat
rcr
and
or
push
ret
icebp
pop
cwde
push
mov
jg
mov
or
ja
ins
movs
or
movs
mov
out
inc
push
adc
psllq
aam
add
icebp
hlt
and
fdivr
jns
inc
rol
mov
scas
add
inc
inc
iret
out
push
mov
(bad)
rcr
jmp
sub
das
push
xor
sbb
sahf
sub
rol
or
xchg
mov
xor
sahf
sbb
or
add
mov
mov
adc
out
bnd
push
sub
mov
push
cmp
pop
ror
push
popa
mov
hlt
xor
jnp
mov
call
in
in
adc
movs
push
cdq
std
jns
xor
je
mov
and
fld
lods
lea
mov
and
lods
outs
dec
xchg
sub
(bad)
lods
(bad)
sub
fsub
add
adc
dec
and
ins
adc
jle
mov
popa
mov
lock
fadd
mov
rol
ins
and
xor
mov
fstp
ja
call
call
in
ret
bound
jmp
fwait
popa
mov
xchg
adc
enter
push
in
loope
pop
xchg
sub
inc
mov
out
aad
pop
sub
test
in
sti
push
jmp
movs
xchg
out
cli
add
mov
push
xor
pop
fnstsw
outs
jmp
scas
cmp
jg
stos
ret
mov
cmp
adc
sti
sub
inc
dec
fs
fisub
inc
pop
sbb
fisttp
pop
std
movs
in
push
outs
xchg
or
jp
ret
cld
icebp
push
fisubr
jne
out
add
lds
sti
leave
les
mov
hlt
loop
inc
pop
cdq
retf
(bad)
jecxz
inc
and
mov
mov
xlat
nop
mov
cmp
ins
test
shl
out
out
cmp
push
and
cmp
mov
repnz
ins
pop
stc
inc
out
mov
out
test
iret
pop
rcl
lock
out
sbb
test
enter
adc
adc
cwde
stc
ds
mov
outs
hlt
out
into
jmp
pop
jecxz
out
mov
das
rcr
mov
(bad)
retf
je
mov
dec
scas
aas
add
mov
in
pop
or
mov
dec
dec
and
mov
pop
cdq
mov
popa
or
cmp
dec
and
adc
push
icebp
fldcw
out
pop
(bad)
scas
cmp
cmp
pop
iret
inc
pop
push
or
rcr
mov
xor
push
pop
xor
push
and
xchg
ficomp
movs
fdiv
sub
test
mov
dec
lock
rcr
mov
jns
jp
jne
push
mov
mov
mov
addr16
fsubr
ins
lea
addr16
(bad)
(bad)
dec
popa
fcomp
pop
ins
adc
mov
fisub
pop
inc
sub
push
jne
inc
fimul
scas
add
repnz
leave
(bad)
call
mov
retf
dec
mov
jle
cld
repz
jmp
lods
jo
imul
js
inc
fnstcw
outs
(bad)
loope
pop
jp
push
fistp
push
push
push
out
call
scas
push
leave
shr
sub
sbb
call
popf
nop
pop
jg
xchg
(bad)
ror
add
shr
mov
push
mov
adc
outs
out
pop
inc
push
ss
(bad)
xor
adc
inc
or
jae
push
xor
mov
in
outs
push
dec
adc
mov
mov
cmovnp
ret
inc
pop
aas
outs
nop
jmp
je
xor
and
int3
(bad)
out
cdq
add
int3
(bad)
pop
push
xlat
nop
mov
mov
hlt
arpl
arpl
inc
fwait
lods
ja
fdiv
mov
dec
fwait
cmp
stos
outs
mov
hlt
adc
jmp
int3
jns
pop
int3
adc
pop
aad
inc
push
(bad)
cmp
test
cmc
in
xchg
sub
pop
jo
or
jae
inc
ja
mov
retf
push
xchg
es
and
cmc
mov
pop
movs
setno
enter
nop
loope
pop
pop
out
mov
jmp
in
enter
xor
inc
xor
test
jae
sub
cmp
jmp
call
jecxz
dec
les
xor
je
cmps
pop
adc
int3
jmp
mov
rdmsr
rcl
pop
and
mov
add
test
mov
(bad)
xchg
test
pushf
and
scas
popa
ins
pop
out
(bad)
stc
icebp
rcr
fadd
push
outs
jae
movs
fwait
ret
aam
jmp
inc
not
adc
popa
out
mov
jb
ret
mov
aas
es
out
lods
adc
stos
sar
xchg
ds
push
fwait
xchg
jg
daa
pusha
and
mov
minps
aad
or
pushf
jne
not
dec
ins
push
xor
add
push
sbb
dec
adc
xor
imul
aad
pusha
and
loop
ror
inc
retf
mov
sub
adc
dec
sub
les
or
dec
mov
push
aad
pop
retf
inc
arpl
xchg
cwde
dec
pop
sbb
cmp
stc
cmps
ja
adc
lds
test
aam
push
push
call
jmp
mov
mov
lods
fidivr
icebp
push
or
nop
nop
dec
(bad)
pop
movs
xor
dec
dec
cmp
frstor
push
push
into
jae
inc
daa
pusha
popa
repnz
pop
loope
add
mov
sub
(bad)
xor
imul
push
dec
push
shl
cmps
mov
or
sub
cli
pop
push
outs
mov
sbb
adc
sahf
mov
push
or
mov
cdq
xor
mov
pop
popa
data16
adc
popa
add
sbb
push
out
sar
push
out
pop
bound
jmp
out
xor
pop
ins
push
adc
fbld
adc
scas
pop
js
xchg
and
adc
sbb
nop
or
inc
data16
jp
retf
and
fmul
(bad)
shl
rcl
jno
mov
adc
inc
out
ffreep
retf
mov
dec
fist
pop
sbb
mov
push
lods
out
push
cwde
sub
nop
jns
push
aad
jmp
addr16
shld
aaa
sahf
jo
retf
shl
xor
xchg
sbb
xchg
xchg
lahf
xchg
js
shl
fcomp
xchg
popa
push
sahf
lods
scas
adc
xchg
loope
dec
cmp
xchg
lods
idiv
aas
xor
jae
add
cmp
in
out
mov
or
jl
dec
mov
mov
sbb
mov
sbb
and
mov
inc
ficomp
xchg
repz
sar
add
aas
and
test
sub
adc
mov
arpl
cmps
std
sub
or
push
pop
jb
sti
outs
cmp
in
adc
adc
push
or
jbe
xchg
iret
loop
jp
cmp
xor
pop
sbb
dec
hlt
stos
xchg
mov
push
sub
xor
xor
jg
mov
sub
sbb
nop
test
idiv
push
lods
outs
inc
sbb
pop
sub
or
sub
(bad)
pop
xor
outs
rol
mov
mov
adc
or
test
fcom
mov
cmp
mov
cmp
sbb
jno
sbb
out
xchg
mov
sti
imul
mov
adc
or
sbb
add
jnp
(bad)
cmc
jmp
adc
add
sar
cmc
push
sbb
cdq
adc
jne
mov
push
xchg
jb
ret
pusha
scas
loopne
and
arpl
aad
and
cmp
sbb
mov
movs
xchg
push
les
jmp
cmp
test
dec
or
aad
loope
pop
mov
fmul
sbb
repz
repnz
push
jecxz
or
or
out
jne
sbb
jne
dec
or
push
mov
enter
sar
push
cmc
dec
push
scas
mov
pop
cs
cwde
jo
leave
fldenv
or
or
sub
je
ret
fdivr
xor
sub
outs
in
pop
inc
in
ret
push
push
jecxz
or
ds
jb
push
mul
das
adc
jns
jle
pop
ins
dec
jecxz
int
in
and
clc
pop
gs
xchg
fwait
mov
mov
push
addr16
ins
test
icebp
and
(bad)
loop
ja
ret
sub
pop
stos
call
sbb
mov
and
add
(bad)
mul
fstp
xchg
mov
jge
mov
sbb
retf
shr
enter
sub
mov
sub
push
(bad)
sub
mov
inc
adc
jnp
scas
adc
jl
sahf
cmp
push
mov
pop
jae
or
cmps
call
rcr
cmp
das
out
inc
fild
dec
sub
rol
aas
mov
dec
stc
lds
and
push
jmp
mov
outs
and
inc
shr
mov
sub
mov
je
lahf
jbe
test
inc
icebp
das
call
dec
les
sbb
and
scas
push
out
sub
jl
fs
sbb
(bad)
(bad)
mov
ds
je
dec
mov
xchg
iret
popa
xor
icebp
push
fdiv
test
and
inc
push
fisttp
out
movs
in
clc
jae
cmp
mov
dec
xlat
push
jmp
or
lahf
pop
dec
repz
push
test
sub
ja
xor
jmp
cld
add
rcl
mov
mov
xchg
lahf
clc
mov
aam
rcl
js
test
fidiv
sbb
pop
(bad)
(bad)
popa
and
cli
sbb
js
cmp
cmp
pop
sbb
dec
jmp
retf
inc
frstor
xor
pop
inc
mov
outs
(bad)
das
mov
mov
xor
xchg
push
ss
inc
adc
dec
xor
adc
or
scas
repnz
mov
xchg
int3
mov
mov
lahf
or
push
cmp
addr16
(bad)
neg
shl
mov
js
and
mov
mov
pop
or
inc
(bad)
pop
push
outs
push
and
mov
retf
in
mov
jnp
and
(bad)
stc
push
push
cmp
mov
outs
repnz
arpl
xchg
adc
jae
(bad)
nop
push
test
fisttp
pop
scas
adc
mov
inc
jle
iret
or
push
div
mov
ror
sbb
popf
enter
mov
int
mov
les
push
les
movs
add
dec
cmp
retf
fs
cmps
int
pop
cmp
mov
stc
(bad)
sub
fs
(bad)
movs
xor
and
mov
rcr
adc
mov
das
scas
arpl
dec
ins
sbb
sbb
jecxz
arpl
jb
sbb
cs
push
and
xchg
push
mov
ja
adc
and
xchg
jmp
push
lods
imul
cmp
and
cdq
(bad)
stc
add
enter
ficom
lahf
ret
or
rcr
stos
ja
pushf
jae
ror
mov
cmp
test
pusha
in
call
or
inc
push
xlat
pop
mov
ins
in
mov
mov
and
not
cs
mov
inc
pop
int
mov
imul
mov
xor
inc
mov
cmp
or
scas
bound
retf
fsubr
call
test
mov
dec
mov
jns
jnp
or
push
xor
clc
mov
and
cmp
fisttp
jl
fisttp
push
outs
inc
fisttp
mov
in
int
(bad)
adc
dec
in
xchg
mov
das
imul
mov
mov
movs
sub
popa
das
ins
sbb
pop
sbb
push
jbe
(bad)
les
jns
jmp
nop
lds
dec
aad
int3
jae
aaa
xchg
adc
sbb
add
pop
fsub
adc
inc
in
test
mov
fld
(bad)
pusha
(bad)
daa
aad
retf
mov
and
push
in
xor
shl
sbb
(bad)
push
jle
or
and
inc
popf
outs
mov
int3
push
mov
cmps
movs
mov
adc
xlat
lods
mov
daa
sar
imul
mov
xchg
xchg
daa
loop
js
enterw
jmp
dec
retf
jge
push
inc
dec
popf
xor
or
dec
jb
pop
and
leave
test
add
xor
push
xchg
jmp
inc
mov
scas
sti
loope
and
lods
repz
(bad)
jecxz
ins
add
aad
dec
ds
je
jnp
xor
fwait
jecxz
pushf
enter
cmp
jg
pop
hlt
pop
dec
push
mov
push
fisub
ret
mov
jge
in
fxch
pusha
add
inc
outs
xchg
cmp
mov
xchg
xor
mov
push
and
into
add
xchg
add
add
sbb
or
stc
cmp
push
std
pop
pop
(bad)
mov
imul
mov
pushf
sbb
fld
add
jmp
mov
pop
iret
or
adc
sub
cmp
push
stos
jmp
dec
inc
jmp
cmc
lock
dec
out
adc
stc
jae
repnz
(bad)
ins
xor
mov
stos
pop
popa
mov
jmp
(bad)
ins
or
pop
ins
movs
ror
push
adc
(bad)
and
popf
dec
out
sub
sbb
inc
xchg
rsqrtps
xchg
xchg
(bad)
push
repnz
push
(bad)
add
xor
pop
jl
push
adc
fdiv
cwde
arpl
nop
inc
or
imul
mov
pop
push
(bad)
icebp
pushf
lahf
xor
sub
sar
xchg
inc
pushfw
mov
mov
jno
sub
addr16
sub
sub
imul
mov
dec
pop
arpl
push
imul
add
imul
sbb
adc
xor
sbb
out
std
add
out
mov
inc
xor
nop
xor
retf
mov
mov
xor
retf
pop
loope
xchg
adc
dec
icebp
adc
jns
mov
lods
jns
and
mov
fst
dec
test
paddq
sbb
ss
(bad)
push
call
add
and
cs
out
dec
fcom
jae
sahf
ins
iret
div
aas
pop
inc
cmp
imul
push
or
lods
or
pop
push
(bad)
xchg
mov
dec
retf
test
push
sar
or
in
inc
pop
mov
and
and
lea
rol
mov
push
mov
scas
in
mov
je
hlt
dec
call
lods
mov
popf
out
cmp
rcl
jnp
sub
cmps
sahf
out
shl
fwait
pop
stc
xchg
repnz
mov
add
pop
or
ins
mov
out
cmp
out
xchg
cmp
mov
cmp
push
inc
movs
dec
(bad)
and
xor
(bad)
data16
into
sbb
push
pop
sbb
outs
das
or
imul
test
pop
cmp
xchg
dec
stc
fwait
mov
aas
adc
popa
xchg
ins
and
dec
jp
xor
or
cmps
sbb
loopne
inc
aam
xchg
bound
adc
call
call
stc
aaa
aaa
dec
imul
add
scas
xor
pushf
mov
inc
or
(bad)
es
add
sub
shl
pop
gs
pop
mov
add
mov
(bad)
ffree
icebp
sbb
arpl
xor
push
and
cdq
(bad)
adc
ret
test
int3
dec
pop
call
xlat
popf
imul
sub
loope
jp
xchg
outs
adc
xor
retf
scas
retf
mov
jmp
dec
pusha
xor
push
lea
(bad)
sti
inc
loop
in
fcmovb
mov
mov
jecxz
fsubr
xchg
(bad)
lods
push
(bad)
cli
lahf
arpl
rcpps
test
aam
adc
jo
imul
js
sub
(bad)
sub
add
call
jg
int3
push
xchg
inc
pushf
or
jmp
push
jne
cmps
cmp
pop
and
xor
pop
jnp
xchg
dec
mov
std
ftst
stc
test
cli
mov
leave
xor
loope
lar
xchg
xchg
mov
pmulhw
dec
cmp
out
cdq
stos
mov
jmp
fisubr
cmc
cdq
ret
cli
dec
sub
ja
and
ror
add
sti
sub
outs
cmp
pusha
cwde
ds
retf
sbb
pop
inc
shrd
outs
dec
ret
xchg
js
test
jmp
imul
(bad)
leave
or
jmp
mov
push
inc
bound
call
sub
jg
cmp
lock
xor
sbb
daa
push
mov
mov
fisubr
and
mov
cwde
(bad)
(bad)
adc
pop
mov
lahf
mov
push
add
outs
out
call
push
jg
cmp
xchg
bound
(bad)
out
mul
dec
fadd
pop
mov
outs
mov
dec
in
lea
cwde
sub
dec
shl
in
add
rol
rol
mov
inc
into
xor
xchg
jecxz
mov
cmp
jge
pop
sbb
(bad)
cli
adc
jbe
ja
shl
and
push
pop
mov
mov
icebp
jg
inc
jp
or
ret
jmp
pop
push
adc
dec
sub
dec
mov
mov
cmc
sbb
sub
mov
mov
or
mov
les
movs
cmp
pusha
push
mov
xchg
and
mov
imul
inc
hlt
sub
das
sub
in
mov
or
int3
lods
dec
mov
pop
in
xchg
dec
call
pop
push
imul
nop
pop
movs
sub
push
sti
test
outs
xchg
jo
add
mov
cmp
ja
sbb
mov
imul
stc
frstor
aad
mov
mov
pop
pop
or
inc
or
or
mov
rcl
add
mov
pop
pop
sbb
xor
pop
fidivr
arpl
sub
mov
mov
sub
fs
(bad)
out
xchg
xlat
pop
lds
xchg
mov
addr16
pop
dec
clc
scas
push
fcom
(bad)
test
fisttp
dec
sub
push
inc
cs
pop
ins
jo
les
jmp
mov
add
and
inc
mov
push
ds
inc
fwait
jmp
pop
pop
in
dec
push
xor
mov
cld
fcomp
xchg
mov
jns
sbb
jnp
push
imul
pop
and
(bad)
mov
shl
loope
xor
xor
out
cmps
add
mov
hlt
add
jg
loope
fwait
shl
push
inc
or
pop
rcr
dec
jecxz
clc
fwait
(bad)
jb
push
sub
adc
mov
dec
call
add
loop
adc
sub
mov
jmp
push
mov
mov
in
xchg
out
cmova
mov
repnz
mov
(bad)
xchg
lods
sub
mov
pop
cmp
add
xchg
dec
mov
xchg
push
push
jae
push
in
lods
sub
ins
aaa
xor
data16
push
sbb
pop
mov
daa
stc
mov
stc
clc
iret
pushf
fwait
or
push
jmp
add
push
or
jnp
ror
xor
rcl
push
and
mov
sar
jp
rol
xor
inc
data16
clc
in
imul
arpl
mov
sub
(bad)
and
mov
jp
push
fdiv
rcr
jb
sbb
sub
mov
cwde
out
loope
data16
add
adc
or
sub
mov
jnp
out
test
iret
mov
xor
sbb
adc
aaa
cmp
rol
push
pop
cli
ins
int3
mov
ret
xlat
ret
ds
xlat
sbb
pop
adc
jp
scas
aaa
pushw
push
movs
fcom
inc
rol
xlat
(bad)
jg
sbb
jae
gs
dec
leave
inc
ret
fwait
lea
loop
imul
inc
lahf
aam
sti
(bad)
cmps
(bad)
das
out
push
or
push
mov
data16
mov
or
mov
pusha
in
dec
sbb
jmp
jmp
lods
or
in
int3
mov
jo
sahf
ins
std
ror
dec
clc
sub
gs
mov
repz
popf
mov
jne
sbb
inc
ror
bound
retf
inc
sbb
jb
push
add
jo
rol
icebp
and
xchg
psraw
in
cwde
bound
ret
xor
push
pop
es
lea
retf
imul
lods
xchg
js
mov
outs
jmp
arpl
jbe
and
js
xchg
push
cli
xlat
mov
sub
cmp
lock
loopne
sub
sti
jg
jmp
fiadd
cmp
mov
sub
jl
adc
adc
jle
sub
out
popf
stos
lods
in
arpl
aad
or
repnz
outs
jae
adc
leave
jbe
aas
cmc
push
scas
mov
adc
int
mov
and
push
pop
mov
and
cld
enter
pusha
xor
push
retf
jecxz
(bad)
xchg
xchg
neg
in
scas
sahf
mov
jo
push
push
ins
jnp
pop
xchg
lea
repz
neg
loopne
cmp
cli
pop
adc
xchg
fcomp
xchg
loop
dec
jnp
sub
fldenv
mul
out
aam
loope
jmp
nop
or
push
mov
iret
cmps
aad
ja
inc
adc
lods
(bad)
(bad)
jmp
sbb
sbb
lods
loop
daa
jg
neg
rcr
push
jecxz
jp
mov
cmp
adc
jge
xchg
lahf
jg
add
neg
mov
or
dec
fsub
cmp
fs
cs
or
adc
and
outs
cmp
out
sub
jmp
(bad)
pop
pop
fsub
aam
and
mov
leave
std
aad
cmp
js
push
cld
xchg
jbe
sbb
cli
(bad)
movs
inc
js
aam
int
mov
fidiv
cmp
fwait
mov
clc
data16
jne
mov
pop
ins
fnstenv
adc
aaa
xor
rcr
push
repz
dec
mov
shl
mov
dec
sahf
jmp
cmp
jp
loopne
ins
(bad)
nop
and
cmps
les
fcmovnbe
sbb
into
cdq
xchg
pop
dec
add
mov
pop
or
xchg
(bad)
(bad)
jp
mov
pop
push
xor
inc
mov
pop
and
push
(bad)
retf
(bad)
cli
inc
and
idiv
out
or
push
cmp
xchg
pop
in
cmp
push
adc
xchg
lods
loope
mov
pop
pop
or
sub
test
mov
out
mov
fldcw
outs
xor
neg
mov
fs
xor
arpl
enter
ret
jnp
sar
sub
lea
fldcw
in
pop
pop
fidivr
add
nop
push
pop
retf
popf
ret
idiv
in
add
jns
cmps
mov
push
jl
cmp
js
sub
inc
cmps
xchg
movs
cmp
adc
clc
push
(bad)
or
push
fadd
dec
or
pop
push
push
jo
adc
mov
lahf
aas
cs
leave
fdivr
fld
push
push
mov
ins
sub
xchg
pop
cmp
in
sbb
jg
jle
cwde
dec
js
adc
fcmovu
icebp
outs
aaa
mov
sub
ins
jo
dec
and
imul
add
push
jmp
inc
jmp
pop
mov
xchg
cs
dec
fmul
add
push
mov
fisttp
push
or
mov
sbb
ret
hlt
sub
cdq
pop
dec
inc
mov
xchg
pop
in
or
xchg
outs
rcl
(bad)
ret
or
(bad)
ja
outs
xor
and
jb
mov
ds
jle
jle
jl
int3
mov
rcl
sbb
mov
pop
sbb
xor
sub
adc
mov
not
movs
add
fst
xchg
aas
pop
(bad)
push
call
adc
cdq
leave
jge
stos
inc
in
enter
xchg
jne
add
cli
cmp
dec
add
mov
gs
(bad)
(bad)
and
(bad)
shl
jmp
dec
xor
mov
call
cmp
sbb
add
mov
imul
bts
fist
cli
adc
mov
loopne
ror
lods
aad
and
sub
push
sbb
push
or
mov
push
jmp
or
pop
repz
retf
stos
or
in
ret
ja
ret
inc
pop
and
fs
add
movs
aam
shl
repz
add
aas
xorps
repz
xchg
cmps
sub
mov
push
push
aam
(bad)
and
pop
lock
xor
outs
js
xor
xor
ds
xor
es
sub
int3
and
nop
fcomp
inc
call
sbb
xlat
ret
adc
pop
das
loop
icebp
jg
xchg
lds
add
push
bound
mov
dec
lahf
data16
mov
push
pop
shl
add
sbb
xchg
adc
sub
int3
das
aas
loopne
es
push
ja
jecxz
xchg
xor
xchg
sbb
(bad)
push
cmps
leave
lahf
es
addr16
xor
ret
xor
bound
pop
adc
out
rcr
adc
jo
xchg
cmps
cwde
loope
enter
into
push
fild
push
push
shl
cli
jmp
inc
sbb
iret
repnz
push
jnp
mov
cmp
mov
in
and
dec
iret
sbb
push
mov
pop
cmps
icebp
jg
push
cdq
mov
push
mov
jg
mul
mov
cld
in
jns
test
in
xor
lods
jl
test
add
jp
stc
mov
sub
imul
sub
pop
cwd
int
sbb
inc
xor
jno
sbb
sbb
fmul
pop
cmp
sbb
mov
xchg
xchg
btr
and
std
out
pop
adc
pushf
es
popf
and
xchg
sub
fldlg2
daa
mov
cdq
pop
std
loope
out
shl
scas
dec
aam
mov
call
arpl
push
jae
mov
cmps
mov
retf
lods
mov
mov
lods
xor
sahf
push
test
in
pop
xchg
add
or
data16
in
lea
cmps
daa
xlat
bound
repz
jg
call
cmp
jne
cli
mov
std
inc
mov
lods
imul
push
dec
imul
arpl
in
mov
ficomp
xor
dec
dec
aam
lods
mov
xchg
jnp
mov
sub
xor
retf
sbb
add
(bad)
push
or
ret
jae
push
shl
mov
xchg
and
scas
xchg
in
jno
shl
cmp
mov
call
js
iret
xor
cmp
(bad)
out
hlt
sub
movs
inc
xor
xor
cs
push
mov
xor
sub
pop
adc
loop
mov
cmp
adc
bound
sub
hlt
in
xor
shr
jnp
push
sar
jp
lock
pop
cmp
mov
out
mov
loope
adc
aaa
int3
mov
push
jae
ret
sub
sbb
cmp
push
sub
xchg
imul
mov
(bad)
in
or
mov
loopne
inc
mov
mov
iret
dec
sbb
pop
sub
push
xor
jo
pop
arpl
cmp
cmp
cmps
in
cmps
mov
loope
mov
push
ret
and
dec
rcr
jno
pop
not
adc
lods
mov
pop
xor
add
ss
pop
clc
out
imul
xor
fwait
mov
xchg
adc
mov
(bad)
and
arpl
pop
or
xor
xchg
xchg
push
pop
test
bound
mov
mov
ja
sar
jl
sub
mov
jmp
leave
sbb
sbb
out
dec
ins
push
je
dec
adc
xchg
and
out
jmp
jge
jmp
dec
inc
dec
jecxz
icebp
pop
ins
pop
mov
sub
mov
xor
int3
jg
mov
inc
test
in
hlt
pushf
pop
loope
adc
test
lods
fwait
jbe
push
mov
sub
les
push
mov
cmp
jge
jns
test
adc
pop
sbb
ficomp
outs
repnz
leave
adc
adc
push
jmp
sub
lods
movs
aaa
rcl
lahf
es
fild
ss
rcr
mov
mov
lea
push
in
mov
lods
icebp
retf
mov
lds
pop
sub
xor
or
add
loopne
or
pop
push
and
adc
mov
stos
sub
push
push
add
test
mov
pop
repz
(bad)
(bad)
mov
loop
mov
mov
popf
scas
jno
jle
aad
add
cmp
fisttp
shl
jnp
repnz
mov
stos
je
mov
xor
and
push
xchg
cmp
daa
and
adc
add
dec
ret
rcr
in
ja
out
push
out
leave
jno
push
jl
sbb
(bad)
out
aaa
outs
cli
enter
hlt
clc
lods
dec
mov
jmp
jb
adc
and
retf
fwait
lock
mov
fld
cmc
xchg
push
out
fisttp
ss
mov
cmp
repnz
sbb
imul
inc
push
mov
adc
pop
dec
test
jp
cmovno
cmps
xchg
or
sbb
adc
mov
mov
dec
shr
pop
sub
(bad)
sbb
pop
enter
daa
cmp
jmp
nop
xchg
je
ja
fldcw
retf
in
fisttp
and
lock
mov
jo
not
cld
je
mov
pop
and
mov
xchg
loope
push
retf
inc
pushf
push
sti
or
and
fst
sbb
shl
mov
and
add
shl
das
add
cmp
iret
(bad)
(bad)
outs
test
imul
mov
cmp
test
add
shl
xchg
(bad)
or
movs
dec
movs
pop
stos
jle
ret
inc
rol
mov
aam
sbb
aaa
dec
jl
ss
jne
add
xchg
adc
shl
enter
lods
(bad)
cmps
cli
in
in
into
or
jo
pop
add
mov
jbe
popa
fcom
fdiv
push
jge
push
in
and
lods
pop
jg
fsubr
sbb
inc
push
sub
jne
fndisi(8087
outs
(bad)
(bad)
ret
and
mov
repnz
outs
or
mov
call
mov
repnz
pusha
aaa
mov
cmps
push
jne
aaa
and
or
mov
div
daa
outs
cs
mov
lea
sub
retf
pop
adc
mov
rcr
xor
and
popf
int3
or
dec
sti
aaa
adc
jecxz
ja
in
pop
ja
pop
jge
imul
dec
movs
and
inc
pushf
ror
sbb
std
test
leave
fsub
jb
fwait
retf
mov
jbe
out
jbe
ror
xor
jnp
or
dec
lea
enter
test
inc
popa
es
pop
and
imul
ror
rol
xchg
xchg
jb
xchg
movs
mov
nop
xor
jnp
das
shl
pop
addr16
pop
sbb
es
call
cmp
jbe
sahf
scas
fwait
fwait
outs
lock
sub
dec
mov
fwait
cmp
pop
sbb
push
adc
sbb
xchg
ror
out
ja
mov
outs
ret
cmp
clc
and
dec
jnp
mov
loopne
add
xchg
loope
repnz
mov
inc
fmul
adc
xlat
(bad)
adc
xor
push
cs
jl
jae
cmp
scas
sub
out
jbe
cmp
dec
pop
mov
jp
(bad)
retf
and
inc
dec
push
iretw
test
or
cmc
mov
mov
inc
push
mov
xchg
push
xchg
clc
pushf
je
jns
mov
icebp
jmp
inc
repnz
pop
mov
mov
(bad)
pop
mov
jl
xchg
and
pop
jne
sub
sbb
cld
or
inc
xchg
lods
mov
cld
mov
xor
cmp
ins
cmc
fbld
retf
mov
popa
pop
daa
call
xor
jmp
ret
mov
cmp
xor
sbb
scas
std
inc
adc
dec
fiadd
or
push
xchg
mov
xor
and
lahf
inc
push
xor
(bad)
adc
loopne
xchg
sub
mov
dec
aad
jle
hlt
and
fidiv
dec
mov
lds
ret
jb
xchg
cmc
imul
pop
adc
sti
jo
aaa
mov
dec
sub
cwde
xor
dec
and
sub
ins
scas
cmp
ret
clc
je
xchg
(bad)
aas
xchg
lock
daa
pop
call
dec
xor
inc
or
mov
sub
test
push
push
mov
sub
jp
inc
cmp
fadd
sbb
inc
xchg
cwde
int
stc
loope
inc
inc
in
xchg
fcom
lea
push
cmp
(bad)
in
pusha
mov
inc
jo
dec
ss
pop
mov
es
jecxz
lahf
(bad)
xchg
mov
int3
dec
rol
jle
out
(bad)
ficom
idiv
push
jecxz
inc
jo
imul
mov
fmulp
sbb
push
lods
in
jae
int3
in
jg
(bad)
xor
dec
sub
jge
adc
adc
int3
mov
push
test
mov
mov
int
mov
jle
cmp
icebp
cdq
test
out
idiv
sar
add
adc
outs
mov
jo
test
xor
sub
sti
sub
cdq
xor
popf
push
jo
aad
retf
sub
mov
mov
xchg
push
int3
adc
jmp
sbb
pop
cdq
inc
push
and
ret
nop
jnp
ds
pop
fucomip
mov
rol
std
dec
fsubp
rcl
sbb
mov
lock
xchg
movs
gs
sub
jl
adc
movs
sub
test
mov
in
inc
bswap
mov
movs
mov
sar
xchg
xor
push
jg
(bad)
mov
inc
sbb
lods
stos
mov
lock
imul
and
push
sub
cmp
push
adc
test
fnstenv
add
sar
lahf
xchg
aam
outs
fwait
and
push
and
mov
xor
test
shl
jmp
pop
jmp
cmp
call
jmp
outs
vpaddsb
fs
add
aam
jmp
dec
fwait
ss
loope
pop
out
fbstp
leave
and
scas
je
cmp
adc
jo
push
mov
sbb
adc
dec
or
imul
sub
mov
mov
scas
push
cli
push
addr16
call
cmp
jns
mov
push
mov
dec
xor
cmp
leave
sub
pop
push
repz
movs
fst
jg
jb
mov
jne
xor
sbb
rol
pushf
jge
jo
dec
ds
and
les
and
std
std
into
clc
mov
jno
loop
dec
mov
inc
int3
cdq
scas
push
and
push
or
xor
mov
iret
jo
stos
xor
xor
add
jmp
jecxz
pop
(bad)
push
or
cmc
ss
jbe
(bad)
mov
jecxz
jecxz
xor
cmps
sbb
(bad)
and
mov
aam
movs
jbe
hlt
xor
add
jg
xchg
call
mov
mov
jmp
in
xchg
int
inc
push
es
jno
nop
out
loop
scas
shl
xchg
cdq
outs
sub
leave
popa
sub
and
enter
mov
lods
sub
dec
xchg
inc
jg
pushf
fucomp
mov
mov
mov
mov
mov
loope
cwde
pop
arpl
inc
or
push
cmps
jecxz
pusha
(bad)
jno
jmp
int
sbb
call
jp
loope
int3
sub
das
mov
add
xor
shl
cmps
leave
jb
and
int
jp
inc
je
sbb
in
je
dec
(bad)
xor
jecxz
ds
cld
and
cld
pop
std
inc
lods
mov
loopne
cwde
mov
mov
outs
adc
mov
out
cli
jmp
mov
mov
dec
xor
hlt
mov
outs
mov
push
and
cmp
push
hlt
push
fs
fs
mov
out
xchg
mov
and
(bad)
inc
xlat
pusha
xlat
xor
push
shr
jp
mov
cdq
sub
sub
xchg
add
cmp
and
out
pcmpgtb
mov
dec
lea
cmp
(bad)
ret
add
dec
pop
mov
add
pushf
fisttp
jno
fisttp
sbb
mov
arpl
dec
pushf
cdq
xchg
rcl
and
sub
pop
shl
adc
mov
sub
cmp
xor
lods
out
sub
iret
cld
bound
mov
sbb
add
imul
dec
imul
fwait
dec
daa
dec
xor
adc
icebp
dec
les
push
ins
sbb
jg
dec
lods
inc
sub
inc
fistp
push
lock
push
je
add
cdq
lods
xchg
adc
sbb
dec
cli
out
xor
fsub
mov
sub
mov
mov
sbb
sbb
loopne
or
pusha
(bad)
sbb
popf
outs
es
mov
aas
xor
mov
jl
loope
pusha
gs
or
pop
sub
mov
(bad)
movs
jmp
or
fdivp
call
adc
add
leave
jmp
jmp
fld
inc
jp
jmp
hlt
inc
mov
jo
out
lahf
lds
fs
imul
cmp
shl
fisub
push
xchg
jge
dec
scas
cmp
sub
out
push
sti
push
sub
mov
inc
iret
pop
int3
jbe
mov
mov
outs
mov
pop
pop
inc
jmp
(bad)
xchg
jmp
inc
loopne
dec
dec
fbld
data16
test
or
aaa
or
ss
add
iret
je
test
push
fisttp
jb
rcr
pop
xchg
in
cli
(bad)
cs
iret
push
inc
retf
cmp
jmp
pop
xor
mov
ja
adc
movs
jp
mov
sub
sbb
or
mov
out
jno
jmp
xchg
mov
cmp
cmp
jb
sub
(bad)
in
clc
xor
xchg
bound
dec
call
das
sbb
jne
div
fild
mov
je
or
pushf
fcomp
test
add
test
fxtract
dec
xchg
add
ror
and
loopne
(bad)
sub
and
and
out
rcr
xchg
mov
(bad)
dec
repz
mov
scas
jmp
dec
sub
pop
sbb
movs
jmp
out
mov
mul
idiv
fidiv
movs
sahf
cdq
add
and
cmps
inc
pop
xchg
fsubr
push
mov
and
xor
retf
mov
scas
mov
jle
push
dec
in
sub
sbb
add
movs
dec
sbb
out
push
nop
xor
adc
imul
(bad)
js
in
xchg
push
push
ins
jl
jae
call
jae
pop
test
inc
cli
xor
movs
mov
gs
test
sbb
retf
ins
dec
iret
xchg
imul
outs
cli
aaa
push
push
cmp
push
cld
pop
mov
pop
xor
mov
jbe
dec
sti
add
jmp
popf
mov
xor
loope
pop
cmp
leave
mov
loope
dec
or
add
jnp
inc
adc
sub
pop
test
(bad)
aaa
sub
jnp
loopne
pusha
dec
fsubr
xor
sbb
push
imul
and
mov
pop
inc
retf
mov
jns
add
sbb
pop
sar
cld
xor
push
mov
or
das
sub
xchg
in
scas
adc
mov
aaa
bound
out
adc
sub
push
daa
inc
pop
rcl
addr16
lods
in
sbb
cmp
dec
test
lock
pushf
jo
imul
adc
mov
adc
sbb
(bad)
(bad)
nop
pop
xchg
test
add
pusha
mov
dec
mov
push
dec
jge
or
jp
dec
fs
lds
and
je
leave
xchg
mov
jmp
add
ficomp
repnz
lods
push
outs
in
int
jne
mov
cli
xor
ins
jo
ret
call
add
or
ja
and
xor
cmp
mov
dec
adc
pop
mov
sub
add
in
push
push
cmc
in
cmp
jmp
leave
scas
scas
xlat
adc
bnd
es
jbe
jae
lea
repz
and
lea
add
pop
xchg
xchg
popa
or
ret
call
mov
pop
mov
sar
dec
push
xchg
xchg
clc
lods
daa
test
cmp
in
pop
icebp
sbb
sti
lods
add
pop
scas
popa
lahf
and
out
les
add
out
and
sbb
out
je
xchg
ins
adc
rcl
or
repnz
xchg
test
mov
xchg
popa
adc
pop
cmp
mov
aam
xchg
mov
je
jmp
add
mov
jns
nop
inc
in
arpl
out
dec
mov
inc
jb
das
dec
call
pop
inc
mov
ja
int
es
in
into
test
leave
sub
sub
xchg
dec
push
int
mov
cli
cmc
pop
adc
jl
fcomp
jecxz
(bad)
das
cmp
sbb
add
sbb
movs
add
cmp
mov
sbb
aad
inc
iret
sar
xor
rcr
or
pop
retf
mov
mov
push
add
xchg
push
dec
(bad)
in
cmp
xor
pusha
cmps
jnp
dec
(bad)
mov
pop
test
je
push
pshufw
cmc
adc
test
sub
push
out
je
push
pop
es
mov
jnp
and
imul
lahf
add
retf
loope
dec
cwde
mov
xchg
cmc
retf
push
enter
imul
pop
test
dec
dec
cmp
cwde
int3
mov
sub
push
or
jl
adc
addr16
dec
rcr
test
jl
addr16
dec
retf
pop
dec
in
push
inc
adc
jo
push
mov
jns
add
add
cld
icebp
pusha
jmp
sbb
and
jne
mov
cwde
add
push
popf
or
imul
dec
pusha
and
adc
mov
jne
add
sub
lock
dec
mov
fbstp
outs
push
mov
and
std
mov
gs
cmc
sub
dec
pop
popa
xchg
xchg
sbb
dec
adc
test
and
enter
sub
cmp
stos
ins
pushf
sbb
sbb
out
adc
mov
test
out
inc
and
push
pusha
dec
fiadd
call
pop
adc
int3
jmp
inc
daa
cmp
xor
(bad)
fiadd
ins
xchg
and
popa
mov
jp
outs
xchg
dec
pusha
xchg
sti
sub
js
int
pop
xchg
aas
int3
or
mov
sbb
and
add
aam
neg
enter
fistp
hlt
or
imul
or
adc
inc
bound
xor
test
push
jp
scas
scas
cli
mov
pushf
mov
ret
aaa
push
sub
das
daa
add
arpl
cmp
sub
jecxz
adc
scas
ficomp
push
inc
jnp
xor
retf
xor
mov
bound
xor
in
jmp
jmp
sbb
retf
adc
pop
xchg
test
fwait
inc
test
mov
sbb
scas
xchg
aas
enter
cmp
adc
xchg
loopne
cs
lods
call
mov
mov
sbb
repz
in
mov
mov
jge
pop
lds
push
xor
push
lahf
lds
jnp
outs
dec
pop
and
inc
push
lea
rcr
inc
xor
adc
xchg
stc
mov
xchg
xor
add
xor
adc
stos
mov
enter
inc
pop
(bad)
dec
sbb
fiadd
leave
dec
mov
mov
rcl
out
and
sbb
push
push
shr
mov
outs
jecxz
cli
loope
sti
call
je
(bad)
leave
mov
lds
cmp
(bad)
repz
xchg
cmps
lods
out
mov
out
xchg
pop
push
repz
push
into
xchg
test
or
jmp
movs
jno
out
add
aad
mov
in
mov
fcmove
gs
push
push
movs
sub
xchg
out
cmps
jbe
aam
push
pop
add
dec
push
out
ins
mov
shr
clc
pop
test
fwait
mov
jg
mov
push
sub
call
jne
and
sub
call
push
add
cwde
add
cwde
inc
inc
cwde
addr16
cmp
add
xor
mov
inc
pop
sbb
movs
jmp
icebp
or
stos
movs
test
sub
pusha
adc
pop
es
add
add
in
movs
add
inc
fs
dec
pop
pop
ret
and
lahf
xor
aas
ins
sbb
dec
call
cmps
sub
push
dec
pop
dec
mov
inc
gs
call
dec
in
sbb
movs
leave
pop
jne
inc
loop
adc
inc
cmp
lods
or
jmp
aam
xchg
cmp
sub
sub
pop
or
inc
mov
cli
xchg
loopne
add
test
jecxz
mov
and
xchg
inc
sbb
not
pop
icebp
call
jns
in
or
lahf
xchg
lock
cwde
jmp
out
jno
ror
lods
outs
out
dec
ds
aad
cmc
aaa
cdq
jo
cmp
jp
test
mov
mov
movs
jge
push
xor
xor
test
imul
and
mov
(bad)
(bad)
imul
mov
test
retf
loope
cmps
dec
or
inc
pop
or
jne
or
fisubr
mov
loopne
pop
adc
jbe
sbb
bound
or
jno
lock
push
push
push
stc
scas
xchg
popa
sbb
xor
(bad)
cmp
add
lods
mov
rcr
pusha
shl
xchg
fdiv
rcr
xor
inc
neg
mov
cmp
adc
nop
dec
js
xchg
movs
pop
mov
nop
das
out
sti
sahf
(bad)
and
inc
mov
imul
rcl
call
test
retf
data16
movs
call
add
mov
xadd
das
pop
loop
call
enter
and
push
mov
les
repz
enter
retf
or
ffree
stos
pop
cmps
fwait
popf
mov
mov
sbb
sub
cmps
cmp
add
and
sub
in
fucompp
xchg
aas
xchg
lods
pop
push
or
sbb
cwde
jmp
adc
inc
jnp
sub
in
test
xchg
cmps
mov
outs
jg
dec
or
mov
test
adc
mov
mov
out
arpl
and
xchg
dec
pushf
dec
mul
aas
ins
inc
push
adc
and
jns
clc
cmp
xchg
dec
test
icebp
pushf
es
sbb
sbb
xchg
test
mov
and
xchg
sbb
lds
leave
add
cld
out
adc
xor
sub
aaa
in
ins
(bad)
and
dec
push
jle
ds
loopne
fcmovnu
stos
inc
outs
shl
inc
retf
and
out
add
jmp
mov
jmp
imul
ret
fld
aad
in
shr
pop
(bad)
xchg
shl
or
add
push
aad
inc
enter
movs
sub
sahf
inc
adc
out
data16
mov
repz
push
sub
out
les
je
loop
xchg
(bad)
retf
cmp
sub
adc
shl
push
mov
fadd
test
test
mov
sbb
mov
js
and
sbb
push
adc
mov
sbb
ds
push
inc
jbe
(bad)
pop
mov
test
push
adc
sar
inc
adc
pushf
xor
sbb
pop
push
cld
rep
retf
jne
cli
(bad)
mov
ficomp
add
lock
sbb
(bad)
jno
imul
fucomip
retf
add
jne
jecxz
imul
(bad)
mov
iret
loopne
in
push
stc
movs
cmp
sbb
dec
movs
mov
scas
mov
push
mov
xchg
jmp
bound
adc
aaa
outs
js
fild
arpl
packssdw
ins
fidiv
(bad)
mov
and
repz
cdq
and
ret
push
pushf
add
ins
xor
out
xor
aad
jl
fdiv
in
cmp
fs
outs
xchg
pop
stc
add
push
ret
pop
cmp
loope
push
out
aaa
xchg
adc
in
dec
lods
(bad)
jae
push
inc
xchg
movs
mov
mov
fcmovne
jmp
call
jp
sar
clc
adc
iret
mov
mov
ss
push
inc
gs
cmp
dec
sar
sti
sub
sbb
fild
sahf
pop
rcr
pop
xchg
aad
lods
arpl
ds
mov
aad
xchg
jbe
pop
dec
es
pop
mov
cmp
or
dec
cmovl
push
or
movs
(bad)
mov
lds
dec
pop
push
mov
add
not
xor
cwde
fmul
mov
shr
and
out
mov
cld
jne
cmps
(bad)
jae
(bad)
and
xchg
xlat
pop
data16
jp
mov
sar
inc
xchg
test
add
cmp
jae
fld
dec
test
push
cmp
xchg
inc
jns
mov
jge
push
rcl
stos
cwde
or
out
jecxz
imul
xchg
jns
sbb
dec
(bad)
test
mov
dec
push
or
out
sbb
js
(bad)
test
push
bound
pusha
stos
retf
sbb
jecxz
rol
retf
and
xor
or
mov
mov
pushf
pop
mov
fstp
push
sub
add
pop
mov
std
popa
cli
cmp
data16
jbe
and
rol
xchg
add
loop
cli
pop
addr16
add
push
or
or
cmp
in
jo
lods
cdq
ins
mov
ss
in
pop
sub
cmp
retf
adc
imul
stos
shl
je
add
stos
imul
test
retf
or
inc
stc
imul
jmp
outs
sahf
aas
push
add
lods
aam
jle
call
call
(bad)
lahf
mov
movs
bound
aas
lock
pop
or
retf
sbb
xchg
scas
psllq
jle
cmp
and
mov
jno
fucom
adc
arpl
cs
scas
jle
mov
stc
call
movs
mov
movs
and
shl
adc
add
xchg
sub
mul
rcr
xor
ss
sub
imul
or
mov
cmps
imul
aam
push
jb
xor
vpshlb
add
aaa
(bad)
push
imul
pop
adc
jg
adc
stos
nop
mov
cs
cdq
mov
xor
jo
test
or
adc
mov
enter
call
ds
in
adc
ret
and
into
imul
iret
ins
push
in
and
bound
jmp
test
pop
and
inc
rcl
and
pop
push
mov
adc
adc
loopne
fistp
sub
push
test
xchg
mov
mov
lahf
xor
xor
jnp
call
push
cli
iret
inc
jns
imul
sub
loope
ficom
mov
out
xor
out
test
in
fidiv
mov
mov
xchg
jle
cdq
outs
lock
into
outs
push
cmc
mov
mov
jmp
shl
popa
scas
pop
jl
mov
test
lods
popf
lods
loopne
cmp
es
xchg
dec
into
cmp
fucom
push
sbb
hlt
inc
test
mov
ds
std
std
int
mov
dec
icebp
jg
jae
loopne
retf
mov
cmp
xor
dec
ss
aad
test
mov
or
popa
loope
cmps
push
jge
jp
push
retf
mov
cli
adc
aad
jmp
cmc
dec
dec
fcmovb
push
cmp
cli
jno
loop
jmp
xchg
popf
jge
sbb
in
ins
and
jl
and
push
aaa
mov
cmc
mov
push
loop
inc
push
ret
movs
jle
or
loop
push
mov
pusha
sahf
and
nop
inc
(bad)
pcmpgtw
aam
jns
scas
and
xor
push
xor
xchg
in
inc
and
repnz
mov
push
pusha
out
ds
mul
jmp
cs
mov
cmp
not
lock
lock
jle
inc
iret
daa
adc
sar
sbb
jae
mov
imul
(bad)
xchg
repz
pop
je
out
xor
repnz
ins
inc
cmp
out
lahf
das
pop
xchg
or
mov
push
sti
aas
mov
or
sbb
popa
xchg
aad
mov
and
xchg
je
lods
xchg
hlt
push
push
sbb
inc
push
xor
jecxz
lea
shr
neg
cmp
gs
or
ja
loopne
mov
mov
(bad)
mov
mov
jge
or
(bad)
dec
imul
in
and
xor
and
pop
enter
push
rcl
in
rol
lods
test
test
rcr
and
jo
mov
push
jmp
sub
xchg
fwait
push
sub
sub
add
loop
and
jmp
add
mov
cmp
adc
jns
addr16
and
jae
lds
push
jg
fs
push
xchg
int
inc
push
push
ins
xchg
jecxz
out
inc
mov
outs
xor
je
adc
iret
addr16
fmul
retf
and
dec
cmp
call
push
fstp
jnp
fisubr
sbb
(bad)
jb
jmp
and
add
iret
mov
movs
pop
bound
dec
push
pop
loop
hlt
scas
sub
loopne
pop
in
cdq
or
sub
cmp
push
or
stos
outs
push
push
or
(bad)
mov
fistp
sahf
loopne
xchg
inc
shl
bound
push
dec
push
scas
inc
add
push
sub
or
cmc
or
adc
sbb
rcr
cmps
(bad)
in
out
xor
jnp
dec
outs
jbe
fiadd
ja
mov
mov
fst
lock
int3
xor
jmp
imul
sbb
add
jae
sti
clc
and
mov
out
scas
test
push
pop
ret
ror
mov
dec
sbb
outs
outs
add
sti
mov
mov
dec
xor
adc
in
or
jle
jmp
sbb
retf
dec
retf
dec
cmp
ret
jb
mov
ins
out
lods
pop
(bad)
inc
push
xor
cmp
scas
pushf
push
dec
daa
mov
rcr
outs
outs
mov
inc
cmp
jp
repnz
and
imul
pop
aas
adc
cli
or
test
inc
iret
mov
cmp
jmp
and
das
in
adc
jb
shl
push
xor
(bad)
adc
adc
mov
cmp
das
(bad)
sbb
sub
arpl
jnp
cmp
lods
das
test
xchg
fdivr
pop
cdq
ins
sub
lds
outs
les
into
inc
sbb
popa
test
sbb
jns
movs
ror
jle
and
pop
sub
sti
mov
mov
fsubr
sbb
leave
sub
and
popf
xor
in
sub
mov
sub
push
outs
cmps
aas
adc
push
and
mov
push
mov
inc
out
popf
cdq
mov
dec
test
mov
cmp
inc
sbb
icebp
dec
fild
aas
icebp
xchg
or
adc
fs
mov
mov
icebp
lods
iret
cmps
cdq
in
cmp
and
popf
(bad)
int
int3
les
call
or
and
lods
jno
cmp
test
loopne
pop
cmp
int
sub
mov
lods
es
sub
xchg
stc
scas
test
or
shl
(bad)
mov
ins
inc
cmp
sti
popf
pop
call
sub
(bad)
scas
fst
mov
jnp
cmp
clc
inc
(bad)
pop
call
mov
sbb
mov
mov
xchg
dec
add
mov
jmp
adc
outs
lods
cmps
ins
lea
dec
inc
(bad)
std
(bad)
out
fisttp
fild
fadd
dec
out
sar
shr
mov
mov
call
dec
add
cmp
mov
jmp
add
xchg
fld
js
sahf
dec
inc
pushf
sub
in
addr16
repnz
outs
stos
pop
js
scas
mov
pop
or
xor
test
push
test
lods
sbb
retf
jecxz
mov
fistp
jnp
arpl
ret
clc
mov
icebp
or
aas
push
or
loopne
jmp
xchg
cmp
int3
movs
and
out
and
dec
fnstsw
(bad)
pop
xchg
retf
ret
cmp
push
jae
gs
movs
ds
push
dec
inc
xchg
rcr
imul
jmp
push
push
out
sub
push
loopne
pushf
adc
mov
ret
nop
sbb
(bad)
sub
outs
add
daa
pop
pusha
int3
adc
mov
pop
dec
jnp
xchg
movs
into
sar
int
ficom
mov
push
test
out
pop
xlat
and
jae
repz
jne
pushf
mov
rcl
stos
outs
sbb
add
or
jmp
adc
pop
ins
push
jnp
(bad)
scas
sub
retf
cmp
mov
sbb
pusha
sub
pusha
or
xor
jge
mov
daa
jl
fidiv
repnz
push
inc
ret
adc
xchg
addr16
push
jl
fcom
shr
nop
rol
xor
(bad)
push
sahf
xor
dec
repnz
test
xchg
shr
jmp
mov
push
mov
add
mov
loope
cmovo
hlt
push
inc
inc
daa
push
xchg
push
jo
lods
dec
add
pop
and
pcmpeqd
loopne
mov
(bad)
push
inc
pop
adc
xor
cmp
out
retf
sub
or
aaa
ss
cmp
sbb
call
aas
sub
inc
je
loop
xchg
add
adc
(bad)
or
gs
pop
call
fld
loope
xor
push
push
dec
or
pop
shl
call
dec
xor
jp
push
enter
pop
mov
cmp
and
jns
in
adc
not
mov
push
cmc
test
rcl
pop
mov
aas
jne
xchg
cmp
dec
pusha
sbb
ss
push
xor
addr16
popa
jg
or
and
add
add
or
test
int
ss
in
test
sbb
(bad)
or
getsec
test
sbb
(bad)
loopne
retf
in
fistp
adc
xchg
mov
scas
sbb
shr
inc
pop
inc
mov
idiv
dec
scas
cs
cmp
dec
adc
repnz
out
scas
adc
inc
dec
movs
stos
sbb
mov
retf
ss
xchg
aam
in
ds
sar
lock
sbb
cmp
sub
xchg
add
xor
add
cli
ret
inc
pop
jbe
ret
rcr
cld
dec
pop
xchg
(bad)
mov
mov
emms
mov
out
daa
sub
(bad)
bswap
fnstsw
lds
xchg
pop
outs
fwait
hlt
mov
push
cmps
mov
sahf
xchg
sar
into
outs
or
push
imul
jmp
add
pop
pop
mov
test
cwde
test
cmp
or
inc
lods
iret
dec
add
pop
ror
ins
mov
cdq
outs
in
aas
sbb
inc
in
and
cmpps
mov
pop
cmp
jbe
leave
adc
jo
cld
pop
(bad)
mov
jp
mov
out
test
push
sub
call
xchg
pop
int
push
mov
add
sti
mov
fiadd
popa
pop
pop
and
inc
push
mov
jo
int
mov
lds
mov
out
mov
rol
stos
fbstp
pop
or
push
shl
dec
jae
pop
jnp
dec
into
fwait
(bad)
test
inc
and
mov
add
ja
mov
mov
in
ret
xchg
in
scas
sbb
push
es
out
add
or
mov
pop
push
out
push
pushf
mov
mov
cmp
scas
or
inc
mov
popa
mov
jge
mov
cwde
jae
jge
pop
cmps
outs
(bad)
mov
ret
jns
or
pop
dec
imul
stos
nop
mov
add
xchg
xor
(bad)
dec
sbb
dec
fisubr
test
dec
inc
in
push
and
xchg
enter
sbb
dec
xchg
fwait
ss
test
cwde
icebp
xchg
push
cld
or
mov
pushf
adc
jl
adc
shl
and
test
aad
cmp
data16
xchg
movs
test
sbb
int3
leave
push
mov
or
es
jle
out
push
mov
or
xchg
jmp
or
mov
pop
data16
xor
pusha
stos
push
mov
fnstsw
mov
jae
stos
adc
ss
enter
fwait
adc
in
inc
push
dec
dec
adc
movs
aad
imul
call
mov
ja
xchg
test
sbb
in
shl
xor
retf
or
std
add
int3
leave
loopne
cdq
fstp
outs
lahf
cmp
stos
or
adc
cmp
fbld
sbb
nop
sti
sub
add
bound
ret
retf
sbb
call
xchg
cmp
adc
jbe
cmp
jecxz
adc
mov
fdivr
jle
inc
popf
mov
mov
cvtps2pd
jo
das
mov
jge
ins
jne
shr
dec
mov
sbb
mul
ror
call
mov
sbb
icebp
xor
popw
xchg
sar
sbb
dec
cdq
jmp
mov
mov
int3
pushf
fadd
cmp
mov
pusha
loope
sahf
test
or
mov
and
cmp
movs
icebp
pop
pop
in
in
in
fcmovnu
pop
out
repz
sub
dec
push
retf
rcl
cwde
mov
bound
mul
cmps
(bad)
fsub
push
int3
pop
and
mov
jle
es
aam
jecxz
xchg
fld
mov
adc
test
scas
mov
adc
ret
pop
sbb
inc
jle
ret
arpl
lock
jmp
in
cmps
mov
push
popa
(bad)
bound
bound
cwde
pop
add
mov
(bad)
mov
cmp
fcom
das
jp
and
sub
mov
(bad)
cmp
ss
jne
ror
sub
lds
jne
arpl
mov
cwde
and
arpl
ss
cdq
sti
(bad)
inc
sub
std
adc
mov
push
xchg
nop
push
jns
sbb
push
lahf
les
mov
aaa
xchg
inc
scas
(bad)
hlt
in
lahf
and
xor
adc
out
cwde
ss
mov
and
mov
fwait
xchg
call
sbb
pop
shr
ret
xchg
or
cmp
aam
fwait
jg
or
add
mov
rol
adc
mov
and
out
xchg
mov
out
repz
leave
loope
(bad)
lods
push
pop
repz
das
dec
push
push
int
cmps
in
repz
dec
hlt
sbb
fadd
test
mov
mov
push
sub
imul
outs
mov
pop
inc
test
retf
leave
scas
cmps
je
in
imul
lock
mov
xor
sbb
sbb
jecxz
xor
in
test
imul
ds
lea
outs
jno
leave
(bad)
lock
je
adc
cmc
ret
or
das
sub
repnz
ja
inc
sbb
pop
movs
mov
sbb
int3
call
out
outs
ret
pop
cmp
loopne
int3
shr
sub
lods
outs
dec
lods
sbb
push
add
xchg
mov
js
add
das
jmp
int
les
xchg
popf
push
add
bound
nop
jge
add
lahf
iret
jmp
test
aaa
jbe
out
mov
pop
cli
jle
call
frstor
test
retf
retf
sub
lock
sbb
adc
pusha
lahf
aam
jb
sbb
jo
repz
xchg
dec
stos
icebp
cmp
sbb
jne
imul
dec
shl
xchg
lock
ret
or
dec
or
mov
or
push
test
fbld
mov
aaa
aad
dec
call
nop
mov
push
pop
ret
movs
cmps
mov
sub
xchg
sti
cmc
iret
xlat
retf
rcr
lock
jae
inc
(bad)
divps
push
outs
dec
idiv
cld
retf
pop
je
mov
cwde
dec
xchg
cmp
sbb
xlat
ret
jecxz
jge
or
das
jne
jns
ja
test
cs
mov
jbe
in
adc
inc
push
add
les
sahf
cmp
xor
shl
das
mov
dec
pop
(bad)
mov
sbb
or
mov
mov
fcom
ret
loop
xchg
pop
pop
pop
pop
and
xchg
xor
ja
xchg
imul
jbe
(bad)
cli
add
in
dec
test
sbb
and
js
int3
daa
clc
les
lock
mov
lahf
sti
jbe
mov
or
fiadd
es
imul
and
cmp
add
shl
cmp
mov
cmp
test
sbb
(bad)
ins
pop
pop
push
inc
or
adc
inc
pop
sub
or
icebp
das
add
push
jne
out
fldcw
inc
jp
scas
xchg
in
int3
xchg
mov
fwait
in
xchg
adc
or
dec
retf
out
rol
repnz
xchg
push
add
int3
je
(bad)
fldcw
mov
mov
sbb
push
mov
pop
dec
scas
loop
jae
lds
mov
pop
clc
imul
xchg
sbb
fs
mov
pop
pop
imul
retf
scas
xchg
dec
fwait
call
add
xchg
adc
mov
test
xor
push
iret
sbb
adc
sub
mov
xchg
popa
xchg
inc
sar
dec
mov
pop
retf
mov
sar
add
xlat
ins
pusha
shr
in
jecxz
das
sub
daa
fstp
sahf
jo
ficomp
movzx
ins
aad
pop
movs
mov
pushf
addr16
add
mov
(bad)
pop
test
jge
push
aas
lods
add
add
xchg
push
int
dec
dec
pusha
mov
add
sbb
fwait
in
adc
(bad)
stc
cmp
dec
mov
mov
cdq
inc
shl
adc
ror
mov
lods
pop
leave
cmp
mov
xchg
jmp
inc
dec
in
pusha
dec
pop
push
xor
jge
lock
and
retf
fsub
xor
mov
cwde
adc
cmp
test
rcr
out
daa
movs
out
inc
popa
push
jns
fsubrp
adc
adc
inc
daa
xor
btc
mov
pusha
rcl
cmc
xchg
imul
xlat
out
popa
sar
push
dec
adc
sub
pop
sar
in
push
retf
(bad)
stos
(bad)
aam
sbb
jae
jne
pop
adc
test
cmp
and
dec
(bad)
mov
xchg
xor
dec
jle
or
or
cmp
mov
adc
mov
sahf
push
fsub
test
mov
push
cmp
pop
push
xchg
push
(bad)
pop
ror
dec
xchg
scas
out
ror
aad
sbb
cmps
push
mov
inc
in
sbb
ret
mov
imul
adc
ins
neg
loop
add
jl
jmp
sbb
outs
add
pop
cs
ficom
or
push
pop
dec
dec
cld
sbb
cmp
(bad)
cdq
mov
mov
inc
add
aas
test
addr16
loopne
jno
and
int3
or
(bad)
jg
jmp
cmp
in
cmp
inc
inc
push
push
adc
lods
daa
ret
rol
sbb
cmc
stos
push
xchg
or
call
lahf
outs
jo
scas
jae
inc
das
popa
into
nop
cmp
cli
mov
icebp
div
cmp
(bad)
mov
mov
fisubr
loopne
xchg
pop
pop
sti
xchg
jb
xor
pop
mov
xchg
in
out
dec
add
sub
pop
retf
push
enterw
fst
xor
cmp
cmps
push
cmp
xchg
xchg
mov
push
mov
popa
dec
daa
ror
inc
lods
push
in
add
repz
pusha
cmp
cmp
adc
repnz
push
lods
out
jmp
into
sbb
call
lock
pop
in
popa
(bad)
mov
fnsave
dec
mov
fiadd
sbb
sbb
(bad)
cmp
or
daa
into
jno
xchg
in
xor
inc
vmovaps
aas
cli
test
ret
xor
addr16
frstor
push
xchg
lds
int3
hlt
adc
aam
mov
dec
sbb
push
retf
fist
pop
push
xchg
jno
pop
loop
sti
jmp
and
into
sbb
and
mov
sub
jl
xchg
test
pusha
out
jmp
sahf
adc
fldpi
cmps
inc
or
cmp
push
sbb
pop
add
inc
pop
dec
fadd
into
adc
mov
sbb
mov
stos
cmp
fisub
retf
fsubrp
sysexit
xor
add
outs
mov
dec
mov
push
and
stc
clc
retf
in
mov
and
ret
xor
mov
inc
jno
js
test
dec
test
mov
mov
mov
ds
mov
ja
jbe
push
stos
dec
cmp
adc
mov
popf
outs
sub
sub
dec
pop
fmul
dec
xor
sub
mov
fldenv
push
push
cs
push
cwde
add
sbb
sbb
in
xchg
mov
xor
xor
jo
pop
ret
xchg
popf
out
jp
mov
adc
ficomp
aaa
adc
lea
std
into
xor
in
inc
sub
loope
xchg
mov
adc
adc
pushf
(bad)
pop
pushf
mov
mov
retf
cwde
cmc
or
dec
and
call
adc
cmp
mov
sti
inc
ja
add
retf
xor
jle
in
fmul
les
fld
aaa
add
add
scas
clc
js
test
cmp
fsub
add
arpl
mov
neg
lds
into
mov
jne
inc
and
mov
repz
sbb
xchg
mov
ins
inc
mov
sub
int3
test
xchg
imul
sar
fimul
int3
jmp
leave
ret
jg
ds
cmps
push
mov
jl
adc
dec
inc
sub
inc
ss
mov
pop
jno
inc
cmp
mov
mov
ret
outs
xchg
std
cmc
jle
mov
cmp
jl
push
push
xor
mov
inc
(bad)
(bad)
jno
jmp
or
fisttp
les
xchg
mov
inc
outs
div
mov
xchg
adc
mov
call
or
and
mov
fcom
sti
inc
dec
push
fsub
cmps
jle
int3
jno
mov
(bad)
sub
sbb
rcr
loope
xor
(bad)
js
cmp
jg
xor
mov
mov
imul
and
pop
inc
in
and
dec
data16
popa
xlat
in
mov
mov
jbe
mov
jge
sub
test
dec
shl
xor
mov
pusha
and
mov
jne
or
cmp
cmp
imul
inc
(bad)
sub
loope
inc
aad
pop
cmp
adc
out
daa
ins
mov
loop
add
cmc
(bad)
fbstp
cmp
in
or
add
mov
out
rcl
push
movs
push
mov
sti
dec
dec
out
daa
lds
xlat
sahf
xchg
sbb
fld
sbb
ja
cmp
sub
ret
push
add
icebp
or
xchg
loop
jmp
and
lods
fbstp
imul
es
and
js
in
mov
add
psubsw
cmp
pop
neg
outs
sub
sub
and
pop
xchg
mov
xor
mov
fisttp
adc
sbb
sbb
mov
retf
mov
stos
(bad)
rcr
jbe
jns
xchg
dec
mul
xor
mov
add
dec
rcl
push
aas
xchg
loopne
int
jl
pop
hlt
loop
add
shl
aaa
imul
fs
xlat
jae
adc
arpl
mov
rcl
mov
sbb
ret
and
call
lahf
or
pop
cmp
das
pop
int
sti
test
mov
dec
xor
out
shl
cmp
sub
scas
xor
lds
lds
sub
loopne
(bad)
push
int
xor
push
or
rcr
and
add
mov
jb
dec
xchg
mov
ret
push
ret
push
dec
push
push
pop
retf
ror
jmp
dec
(bad)
daa
mov
fsubr
pop
mov
mov
xchg
popa
jecxz
add
cdq
loope
pop
addr16
out
ss
xchg
nop
outs
pop
movs
xor
test
jns
sahf
fsub
adc
mov
out
pop
xchg
mov
inc
mov
out
xor
fmul
mov
addr16
pop
bound
outs
jne
sub
sub
push
adc
das
sub
mov
xchg
jmp
cli
ss
movs
dec
rcr
sbb
sub
or
fld
ins
popa
push
push
loopne
cli
inc
dec
cmp
mov
or
jp
mov
cmps
fsub
stos
fucom
bound
mov
sbb
or
popa
jge
xor
xchg
rol
ror
sub
mul
stos
and
inc
lods
std
and
jecxz
xlat
sub
and
jge
and
mov
loopne
mov
jmp
jb
cli
daa
fadd
inc
jmp
int3
(bad)
push
retf
test
loope
pop
sbb
sbb
push
xchg
jmp
(bad)
call
dec
inc
dec
add
fidivr
sub
jmp
add
fidiv
mov
lock
inc
xchg
mov
sbb
nop
xchg
imul
mov
pop
sbb
retf
clc
(bad)
retf
not
stos
push
call
xchg
mov
fidivr
repz
jno
fs
movs
mov
movs
fucomip
(bad)
fiadd
lea
dec
pop
pop
in
ins
add
sub
shl
out
rol
cmp
movs
dec
ins
movs
jo
clc
sub
push
ret
mov
ja
scas
mov
mov
inc
jmp
inc
sub
out
fsubr
scas
push
sub
add
sti
inc
push
ss
or
xor
push
rcl
inc
cmp
pop
repnz
jp
popa
dec
pop
xchg
sub
inc
mov
aad
les
outs
repnz
push
das
push
aas
cmp
mov
xor
jnp
rcr
movs
lahf
or
in
repz
xchg
sub
inc
push
hlt
xchg
xchg
push
xchg
cwde
rol
hlt
cmps
push
out
retf
xor
inc
mov
push
dec
ja
jecxz
sub
add
sbb
pop
pop
mov
jg
pop
jbe
and
(bad)
push
lds
aam
ds
fwait
loop
xor
movs
inc
xchg
push
jg
lods
jge
pop
call
int
jnp
outs
adc
pop
retf
sbb
mov
ret
call
adc
lea
lds
xor
mov
mov
mov
add
cli
test
pop
scas
lds
retf
stos
fistp
fadd
push
not
xchg
mov
js
and
mov
outs
lds
cmc
cld
xchg
inc
imul
mov
lods
xor
outs
fld
nop
arpl
cs
scas
lea
mov
pusha
aad
imul
rcl
mov
push
je
jg
lods
out
xor
sbb
loop
je
mov
jno
push
ficomp
adc
pop
inc
out
pop
nop
jl
sbb
mov
sbb
movs
outs
push
fimul
adc
mov
xchg
in
loopne
fst
(bad)
mov
lock
push
pop
sbb
inc
call
or
add
out
fisttp
repz
xchg
and
xchg
mov
sbb
push
nop
push
jl
sbb
retf
lock
iret
(bad)
idiv
sbb
cmp
jecxz
aaa
mov
cmp
pop
jp
pop
leave
xchg
pusha
getsec
mov
mov
stc
xchg
pop
neg
jnp
popa
cwde
nop
inc
hlt
cdq
push
push
or
mov
or
mov
stc
enter
mov
jge
cmp
shl
xchg
loope
cmps
fld
jnp
lods
cdq
bound
in
popa
aam
mov
mov
cld
add
mul
repz
sbb
mov
xchg
cs
call
rcl
fisub
ja
in
ja
sbb
out
jmp
ins
sub
mov
and
scas
test
fsubr
sub
mov
outs
xchg
jnp
sbb
cmp
int
sub
scas
mov
push
or
add
adc
pop
sbb
push
rcl
sub
fwait
imul
inc
call
push
pop
sbb
loope
cmp
xchg
inc
mov
icebp
mov
iret
das
(bad)
mov
aaa
jg
push
dec
mov
bound
adc
cdq
and
sti
popa
loopne
pop
fist
(bad)
cmp
in
retf
outs
(bad)
fnstenv
sahf
sub
and
shr
jl
(bad)
outs
push
push
aas
mov
outs
pop
add
sbb
push
in
pop
fcom
adc
aaa
and
(bad)
cmp
adc
movs
adc
inc
dec
inc
pop
add
ss
and
mov
test
daa
cld
push
adc
or
xor
inc
rol
jle
popf
addr16
rol
cmp
dec
out
lods
dec
push
adc
sar
int3
std
xchg
jo
repnz
movs
xchg
sbb
jecxz
dec
xor
add
ja
push
adc
xor
push
push
or
mov
(bad)
aam
fidiv
adc
xor
lea
stos
xor
push
(bad)
adc
fwait
or
test
loope
cmp
xor
dec
shl
mov
pop
adc
xchg
les
ror
hlt
xchg
mov
test
mov
jb
pop
fcomp
xor
stos
dec
sub
scas
sub
fldcw
ret
jno
ss
cld
mov
fwait
mov
(bad)
enter
or
mov
(bad)
ins
jnp
popf
into
sbb
pop
movs
repnz
sub
imul
xlat
push
add
rcl
jno
test
stos
cmp
repnz
fcom
xchg
loop
test
inc
std
fst
adc
mov
mov
sbb
and
and
sub
xor
sbb
sbb
fst
jl
sbb
sub
mov
out
add
xchg
jbe
push
jle
and
mov
dec
push
cmp
(bad)
and
inc
xchg
xchg
mov
jbe
push
push
dec
jno
outs
(bad)
xchg
retf
call
mov
cmp
jmp
push
shr
dec
enter
adc
cmp
sbb
mov
jnp
xchg
cmc
cmp
cwde
daa
scas
or
movs
jl
sub
push
dec
jne
jl
add
pop
(bad)
retf
repnz
mov
pop
jmp
shr
cmp
cmp
or
stos
or
lods
stc
sbb
loopne
add
sub
sub
cmps
cli
popa
sti
mov
iret
test
adc
imul
cs
(bad)
push
aam
or
nop
fiadd
mov
sub
jmp
idiv
(bad)
cmps
ffree
add
ja
pop
mov
loopne
fnsave
test
cmps
ficomp
push
(bad)
std
push
push
inc
inc
cld
fisub
es
cmp
ffree
out
push
and
bnd
loop
jmp
mul
rol
loopne
movs
mov
adc
add
xchg
retf
inc
push
ss
in
pop
wrmsr
aas
scas
sub
call
pop
test
int
(bad)
push
das
add
sbb
jbe
add
in
in
in
sbb
and
loope
sub
cmp
cli
sbb
mov
das
sub
jecxz
xor
mov
xchg
(bad)
(bad)
and
test
mov
fcmove
jns
repz
mov
sbb
ds
mov
js
popa
mov
sbb
cmp
adc
jp
popf
add
call
test
fistp
sbb
lea
lods
mov
add
loop
push
loope
mov
nop
cmp
mov
stos
shl
pop
xor
cs
cli
ins
pusha
push
fwait
cld
jle
sub
pushw
cld
inc
or
mov
dec
std
mov
clc
xor
(bad)
(bad)
mov
fwait
test
out
dec
push
test
test
jge
and
push
dec
pop
push
retf
cmps
jnp
ins
retf
fild
clc
int3
getsec
jg
in
les
addr16
push
adc
leave
ror
imul
xor
rcl
or
sub
pop
jmp
add
jb
call
in
call
loopne
sbb
xchg
add
retf
into
cmp
in
cmps
inc
mov
ja
sub
xchg
and
sub
loopne
(bad)
mov
hlt
inc
jl
idiv
ret
rol
lahf
adc
aas
test
arpl
es
push
and
ja
mov
jne
loopne
add
ss
scas
adc
adc
(bad)
test
add
es
add
imul
cmp
pusha
xlat
sbb
pop
xor
jne
cmp
rcl
push
mov
cmps
inc
cs
pop
dec
inc
pushf
data16
(bad)
fcmovnbe
test
loopne
or
jp
lods
add
dec
fist
fbstp
cmp
ja
enter
or
movs
loope
pop
jns
jge
or
sub
int3
stc
fadd
cmps
xchg
leave
mov
sub
add
xor
mov
dec
movlps
imul
sahf
leave
mov
mov
add
or
fs
cmp
cmc
(bad)
jle
push
sub
test
shl
add
sub
cmp
ja
fs
or
mov
push
cmps
cmps
inc
push
add
(bad)
fwait
jnp
sar
bound
xchg
ins
add
push
push
push
cmp
add
mov
jmp
stos
addr16
nop
icebp
data16
movs
sub
out
sahf
push
xchg
jmp
lock
xchg
xchg
mov
add
jnp
cld
pop
(bad)
std
and
sbb
fisubr
test
repz
mov
cs
mov
pusha
in
push
push
jmp
es
jne
arpl
cmp
imul
adc
lahf
pop
cmps
and
push
icebp
xchg
fs
fiadd
test
jmp
mov
test
aaa
dec
out
cmps
push
addr16
push
adc
stos
mov
xchg
movs
lahf
cmp
and
out
iret
pop
call
rcl
mov
test
push
sub
xchg
movs
dec
pop
in
xchg
adc
push
call
pusha
out
xor
jne
mov
or
test
mov
shl
out
mov
sub
pop
js
push
push
fisttp
cmp
dec
rol
adc
mov
in
cmp
cli
pop
iret
imul
push
sub
sub
cli
jle
ret
int
adc
cmps
xor
ins
xchg
loopne
in
ss
imul
push
outs
(bad)
int
loopne
pushf
or
cdq
cmp
jmp
std
mov
add
push
mov
sbb
mov
push
fist
ficomp
aad
(bad)
and
imul
push
cmc
mov
xchg
popa
dec
xlat
stos
in
dec
inc
std
loop
jmp
push
aad
inc
in
add
inc
jne
outs
jo
add
adc
jg
push
mov
mov
cmc
ret
cmp
mov
dec
out
jecxz
cs
ins
(bad)
in
js
call
in
xchg
gs
push
xor
jl
repz
daa
mov
pop
in
jno
mov
icebp
pop
in
fld
stos
aam
push
pop
rol
fdivp
add
sub
cdq
mov
inc
push
push
xchg
lock
mov
mov
retf
xchg
jl
xlat
mov
dec
cmps
jae
xchg
and
inc
neg
dec
add
in
out
lods
add
mov
cmp
addr16
add
fstp
push
jb
arpl
mov
dec
outs
mov
ja
out
sbb
(bad)
push
pop
and
dec
repnz
or
fist
movs
or
into
dec
sahf
in
out
jmp
aas
dec
and
cmp
inc
sbb
cwde
pop
lods
xchg
xor
out
sub
mov
leave
sub
adc
push
in
cmp
iret
pop
push
mov
out
adc
mov
sub
fs
adc
inc
sub
pop
lock
or
cdq
iret
addr16
inc
pop
mov
fdivr
aam
imul
iret
fnstcw
gs
cdq
test
sub
mov
ins
push
mov
cmc
es
call
or
jns
pop
inc
(bad)
(bad)
jb
mov
inc
add
xchg
mul
add
dec
cmp
and
jmp
call
sbb
shl
cmp
jno
inc
mov
cmp
ja
imul
add
jb
inc
mov
jno
cmp
imul
push
int
in
sbb
daa
mov
adc
ror
add
sbb
arpl
cmp
out
dec
jmp
ja
xor
call
jle
test
sti
cwde
push
push
fsubr
and
int
imul
out
pushf
mov
sbb
into
mov
push
push
xchg
outs
and
test
arpl
test
cwde
call
(bad)
sub
test
lock
enter
push
shr
cld
mov
jl
adc
repnz
(bad)
pop
ret
aas
outs
xchg
cmp
pop
adc
mov
rol
xor
stos
neg
leave
idiv
aaa
push
add
mov
dec
arpl
setle
es
add
aam
add
(bad)
sbb
cwde
xor
iret
adc
jp
cmps
sbb
sar
mov
stos
test
jmp
test
test
mov
lahf
push
mov
dec
and
fmul
lea
jns
aam
xchg
adc
jg
cmp
lds
std
mov
sbb
mov
cmp
idiv
push
in
mov
cmps
adc
ficom
loopne
loop
call
out
mov
cmp
fmul
es
mov
stos
xor
jns
aas
ins
bound
push
sbb
jne
test
fucomi
je
stos
cli
imul
jns
and
daa
retf
jg
dec
sub
jmp
(bad)
std
outs
sub
xchg
movs
inc
push
arpl
cmps
xchg
pmulhw
aad
inc
sub
jnp
jg
xchg
jl
ss
xchg
dec
sub
pcmpgtd
loope
in
retf
lea
jns
or
xchg
repnz
int
push
rcr
push
xor
stos
push
cwde
cwde
and
sbb
or
out
xlat
cmp
shl
fsub
sbb
fnsave
lods
sti
loopne
mov
adc
and
stos
aad
int3
stos
es
sbb
lds
xor
daa
mov
js
test
(bad)
jg
fdivr
inc
adc
sub
and
cmp
in
jnp
enter
cdq
(bad)
xor
xor
(bad)
sub
(bad)
in
dec
lds
bound
jo
in
xchg
sbb
mov
dec
sti
sbb
int3
fbstp
sub
mov
loop
ret
mov
cmps
(bad)
sub
mov
pop
xchg
stos
mov
xchg
in
or
cmp
inc
pop
(bad)
enter
and
mov
data16
or
cmp
and
push
cdq
dec
clc
scas
push
jae
push
arpl
pop
dec
and
sbb
loopne
pop
push
inc
push
add
xchg
sbb
repnz
xchg
adc
pop
outs
dec
jne
ins
push
xor
add
in
dec
ins
push
add
enter
cmp
adc
mov
cwde
in
pop
adc
cmc
jge
xchg
test
in
and
sub
mov
fcmovb
and
daa
xchg
loope
mov
(bad)
fisubr
mov
test
in
sbb
sbb
sub
cwde
xor
jmp
loope
xchg
sbb
mov
sub
pop
xor
loopne
sbb
mov
pushf
cwde
ins
adc
xrelease
icebp
arpl
or
call
daa
inc
push
inc
jl
adc
test
fdivr
out
pop
add
push
or
imul
jae
mov
arpl
cmc
popa
in
out
addr16
popa
test
js
inc
hlt
dec
not
lods
and
push
or
lds
xor
dec
imul
mov
lods
retf
sub
call
int
int3
ja
pop
daa
lea
push
test
cwde
pop
xor
xor
or
push
ja
call
repz
xor
pushf
dec
shl
pop
js
jl
dec
rcr
test
shr
enter
jns
push
pop
push
cwde
mov
shr
and
sbb
repnz
ficomp
icebp
mov
mov
movs
pop
mov
mov
cmp
mov
and
daa
test
xor
pop
enter
mov
and
out
sbb
xchg
push
mov
and
cmp
cdq
sbb
mov
cmps
addr16
int
sub
push
inc
sbb
addr16
pushf
jbe
mov
mov
cmp
push
sbb
sbb
jns
dec
fsubr
stc
adc
into
sbb
sub
dec
cli
test
mov
gs
sbb
mov
test
cmp
xor
rol
lock
xor
loop
addr16
sti
scas
mov
jge
cmp
or
fmul
xor
cmp
les
inc
sbb
jge
jl
aaa
cwde
jb
sti
adc
inc
push
adc
push
enter
rol
jns
and
es
xchg
inc
fmul
sbb
push
sbb
mov
std
pushf
adc
jp
lods
or
(bad)
pusha
sub
push
aaa
test
and
aad
clc
cmc
xlat
xchg
cmp
jl
mov
lea
cmps
jb
adc
lahf
fidiv
fwait
daa
repnz
cld
rcr
int
mov
adc
inc
js
fld
aaa
push
inc
ror
call
mov
sbb
movs
xchg
or
cld
pop
aas
jns
aaa
inc
xor
mov
cmp
cmp
out
arpl
push
sub
movs
xlat
jmp
push
jge
ja
cdq
mov
push
test
ja
cmps
pop
xchg
dec
add
ins
cmp
ds
and
xchg
add
pop
call
jo
es
nop
movs
mov
mov
ror
aas
aam
out
jne
xor
push
xor
repnz
jmp
movs
xchg
lahf
cmps
outs
xor
jp
mov
dec
adc
xor
mov
xchg
dec
mov
test
adc
pop
inc
adc
fucom
lock
mov
cmp
call
dec
out
sbb
loop
imul
adc
loope
jg
mov
popa
arpl
and
cmp
out
xchg
adc
mov
loop
xchg
jmp
lea
lahf
add
ds
inc
cld
popf
ss
aaa
sbb
xchg
sub
inc
push
mov
ficom
(bad)
mov
jmp
mov
push
aas
inc
(bad)
dec
(bad)
mov
leave
div
movs
and
cmove
add
adc
into
xchg
pusha
push
dec
lahf
mov
mov
mov
cld
mov
or
cmp
jne
and
dec
jae
div
xchg
imul
mov
cmps
aas
cwde
enter
jne
or
xor
ficom
pop
clc
test
push
xchg
sahf
mov
xchg
ficomp
lea
xor
push
push
xor
adc
div
adc
stc
mov
(bad)
mov
mov
xor
fisttp
push
mov
neg
mov
jnp
pop
jge
push
call
fstp
pop
ins
sbb
mov
daa
movq
lods
inc
xor
sti
(bad)
mov
call
mov
xchg
jb
mov
ret
inc
test
inc
ins
fnstcw
ja
ret
icebp
fidiv
push
or
pop
mov
add
retf
dec
adc
or
fadd
imul
(bad)
(bad)
or
jo
in
xchg
stos
sahf
bound
inc
jle
lahf
adc
xor
es
(bad)
rol
mov
push
fld
das
mov
or
jmp
(bad)
adc
mov
cmps
mov
test
cmp
push
(bad)
daa
inc
icebp
xor
adc
push
jne
ja
mov
push
mov
cmp
gs
sbb
aas
(bad)
mov
pop
into
xlat
mov
push
outs
shl
es
push
sub
js
vpavgb
mov
jbe
mov
shr
retf
test
iret
fst
push
les
daa
lock
sub
inc
push
xchg
rol
mov
cmp
in
sub
jb
push
movs
sub
cmps
mov
inc
mov
movs
test
mov
inc
les
movs
mov
and
and
push
mov
jle
das
out
call
rcr
push
jbe
nop
test
mov
jae
stc
test
pop
shl
fs
and
sbb
sbb
jnp
adc
xchg
daa
scas
add
mov
lods
idiv
sbb
inc
dec
out
aaa
cs
jl
fidiv
pop
sub
ss
loopne
dec
clc
mov
popf
vmulsd
dec
xchg
or
push
mov
movs
into
cmps
jbe
dec
test
inc
mov
mov
addr16
push
jbe
add
loopne
mul
popa
pop
call
pop
sti
addr16
repnz
pop
dec
or
leave
cmp
pop
scas
jnp
or
push
pop
jo
dec
fsubr
inc
daa
dec
mov
outs
inc
inc
in
and
dec
sbb
xor
stos
and
int3
dec
pop
xor
add
rol
push
mov
add
pop
and
mov
not
repz
push
mov
inc
clc
(bad)
mov
jg
sub
adc
hlt
aaa
hlt
xor
inc
(bad)
jl
(bad)
push
retf
inc
into
add
mov
mov
and
in
in
lea
mov
(bad)
and
test
cwde
mov
lahf
imul
pushf
push
adc
add
ja
fnsave
sbb
and
aaa
push
pop
xor
enter
sbb
cmp
iret
neg
inc
jns
retf
xor
pop
in
call
or
scas
pop
mov
gs
(bad)
push
and
push
xchg
dec
push
xlat
sbb
inc
test
inc
lods
lahf
and
inc
xlat
inc
aam
shl
test
out
std
(bad)
and
dec
leave
sar
mov
out
ins
jge
lock
dec
xor
out
cmp
popf
fmul
inc
lea
dec
fimul
inc
xchg
test
dec
js
gs
rol
outs
mov
ror
ss
idiv
mov
lds
pop
sbb
mov
inc
dec
jne
dec
mov
leave
mov
mov
loope
cld
dec
sbb
mov
mov
dec
mov
pushf
xchg
dec
push
or
test
sub
dec
add
in
test
fyl2x
mov
inc
rol
movs
lahf
stos
rcl
add
ret
or
enter
std
nop
jge
xor
xchg
std
les
pushf
inc
cs
mov
aam
and
les
outs
jg
mov
fstp
movs
(bad)
rcl
pop
test
out
cmps
mov
mov
adc
pop
fst
(bad)
test
sar
cmp
sahf
imul
add
sbb
mov
adc
repz
jbe
xchg
sub
out
and
out
xchg
iret
inc
mov
or
iret
fwait
jmp
pushf
sub
pusha
dec
vandnpd
icebp
xchg
(bad)
mov
test
pop
ret
rcl
mov
pop
scas
daa
push
idiv
(bad)
imul
(bad)
mov
out
in
ret
mov
lahf
test
cli
outs
inc
cs
mov
ret
clc
ret
add
and
popf
sub
or
xchg
movs
stc
dec
movs
jge
icebp
sbb
(bad)
outs
mov
sub
cdq
push
xchg
xchg
sub
inc
fdivr
mov
or
mov
(bad)
pop
jae
(bad)
xchg
popf
sar
ret
out
imul
xchg
adc
mov
retf
(bad)
fstp
fst
js
mov
js
inc
aas
ins
push
add
xor
bound
leave
icebp
xchg
loope
xor
ret
enter
out
mov
adc
aam
jbe
mov
movs
scas
imul
cmp
xchg
fiadd
mov
or
dec
ss
jmp
inc
push
fisttp
or
in
inc
(bad)
bound
les
stos
ret
dec
adc
sub
retf
adc
mov
popa
mov
xor
xchg
pop
mov
push
inc
shl
std
push
rcr
les
fistp
push
fdiv
jecxz
push
xchg
and
add
xchg
mov
rcr
jg
fucomip
retf
mov
cmp
fs
adc
daa
pop
inc
rcl
cmp
into
push
and
jbe
int
and
ror
add
das
dec
fcmove
adc
stos
xchg
mov
cmp
add
sub
xor
stc
pusha
pop
cmc
mov
std
test
in
rol
(bad)
mov
xor
dec
cmp
xor
nop
xor
xor
xor
fimul
sub
aas
xchg
out
push
and
(bad)
xchg
pusha
push
inc
adc
add
jge
inc
or
jmp
pop
inc
sbb
psubsw
push
lea
jg
mov
pushf
sbb
idiv
and
jne
and
aaa
mov
mov
mov
dec
xor
dec
jo
push
jl
fld
push
mov
lods
loop
outs
xchg
mov
das
push
mov
ss
cmc
push
stos
inc
ds
shr
js
add
dec
xchg
sbb
mov
test
call
lods
retf
stos
xor
mov
mov
cmp
sbb
vhaddpd
xchg
fs
test
and
xchg
jecxz
sbb
aaa
jnp
daa
stos
les
dec
shr
pop
bound
(bad)
neg
add
push
and
inc
cmp
xchg
sub
ss
out
jo
out
sbb
rcr
data16
inc
jae
adc
cmc
sahf
xchg
sbb
sub
cdq
mov
popf
movs
(bad)
sahf
push
in
ret
sub
shl
xchg
add
enter
aaa
jg
sub
into
xchg
sar
jp
sar
cmc
inc
sbb
cmc
loopne
or
sub
jle
cmp
xchg
je
(bad)
(bad)
stc
inc
add
hlt
sti
outs
or
shl
imul
push
imul
or
push
mov
xchg
jle
(bad)
cmp
mov
xchg
mov
push
gs
pop
bound
pop
and
pusha
pop
dec
mov
pushf
xor
ins
(bad)
push
sbb
add
retf
jns
jge
dec
call
dec
mov
out
out
mov
out
or
pop
cmp
mov
jnp
pop
and
scas
adc
mov
repz
mov
mov
bound
and
repnz
addr16
imul
mov
cmp
xchg
in
mov
dec
xor
lea
test
ss
ss
scas
push
jp
cmc
in
sar
in
fld
cmp
jge
mov
(bad)
push
inc
cmc
mov
jg
xor
xlat
add
jmp
js
cdq
adc
mov
sbb
retf
push
push
ds
and
scas
push
jge
aad
(bad)
jg
xchg
push
fild
xchg
fisubr
rol
xor
push
arpl
jb
cdq
add
hlt
daa
cmc
dec
sbb
xchg
out
aad
dec
data16
push
mov
lods
or
mov
mov
lahf
call
(bad)
mov
xor
push
or
into
sar
retf
outs
arpl
or
out
push
add
adc
jecxz
out
add
in
iret
ja
dec
push
scas
xchg
cmp
hlt
xor
adc
xchg
neg
fpatan
aas
xchg
mov
mov
les
fisubr
(bad)
fld
mov
lock
and
fadd
pusha
add
fadd
mov
fisttp
push
or
mov
dec
das
or
bound
push
lock
icebp
sbb
pop
call
sbb
stos
adc
pop
(bad)
add
inc
add
daa
xor
push
sub
into
or
xchg
sub
xor
scas
cwde
and
hlt
adc
sar
stos
jno
icebp
test
mov
jae
test
xchg
jl
addr16
fst
lock
and
mov
imul
add
sbb
icebp
push
cs
popa
inc
add
rol
loope
(bad)
fwait
push
sbb
mov
popf
movs
push
pushf
mov
hlt
jbe
frstor
fs
jecxz
daa
dec
jns
fsubr
jns
xchg
je
out
ins
lock
xor
inc
xor
mov
rcl
cmp
cli
sbb
sub
add
mov
mov
xchg
ror
jmp
mov
loop
sub
push
sbb
dec
dec
sub
inc
mov
jp
mov
xchg
outs
add
jmp
retf
sahf
add
sub
sbb
ss
in
fcmove
dec
enter
dec
sti
rep
loopne
fidivr
xor
inc
fistp
sbb
push
sub
xchg
movs
mov
stc
fmul
mov
sar
and
inc
mov
mul
adc
add
push
scas
sbb
rcl
cs
and
addr16
add
into
stc
cmp
lods
jmp
xchg
cdq
pusha
and
jne
inc
daa
popa
xchg
enter
inc
sub
ror
in
jecxz
and
dec
scas
shl
aad
loop
cld
add
nop
mov
sbb
(bad)
stc
sub
xor
jbe
cs
jmp
mov
inc
mov
mov
cs
inc
dec
cmps
sub
mov
or
adc
cld
push
loope
pop
scas
sahf
push
(bad)
je
sub
pusha
test
inc
xchg
adc
inc
in
push
dec
dec
div
dec
(bad)
mov
push
sbb
mov
test
inc
sbb
push
lds
inc
repnz
int
addr16
repz
movs
shr
xor
push
stos
pop
pusha
xchg
in
(bad)
and
dec
dec
(bad)
adc
dec
and
xor
ds
not
mov
xchg
lock
out
cmp
xlat
cmp
sbb
aaa
imul
cwde
xchg
inc
jge
mov
pop
xlat
test
jne
sub
adc
lock
push
pop
ret
addr16
fisttp
push
inc
fidivr
xor
xchg
and
add
mov
pop
pop
push
mov
(bad)
out
pop
inc
xchg
mov
mov
mov
test
js
jb
xchg
ds
or
cmps
add
js
inc
dec
jp
popa
pusha
inc
cmp
push
gs
aas
js
loop
push
and
arpl
ja
jmp
xchg
and
mov
add
rcr
loop
hlt
push
shl
mov
sahf
or
add
adc
xlat
dec
(bad)
sbb
lahf
cmp
xchg
outs
sub
push
sti
addr16
mov
repz
inc
test
je
cmps
push
xor
mov
push
arpl
push
cli
pop
inc
idiv
push
or
mov
or
sub
jge
mov
rcr
inc
inc
inc
mov
cld
rcl
mov
stos
mov
mov
cmp
add
sbb
mov
test
aas
imul
pop
mov
mov
mov
push
in
lods
and
mov
jb
mov
pop
popa
inc
hlt
mov
ins
xchg
jmp
sbb
test
aaa
sub
pop
call
adc
sbb
gs
jno
push
fs
jmp
cmps
pop
mov
in
popa
jmp
push
xchg
push
icebp
aaa
cmp
jnp
repnz
add
adc
mov
daa
xchg
out
sar
xor
mov
outs
adc
inc
and
sub
scas
jne
mov
loopne
es
repz
ror
ret
(bad)
and
test
sub
dec
js
pop
pop
push
adc
and
pop
mov
pop
push
mov
inc
fiadd
pop
jl
pusha
ds
mov
(bad)
fisubr
cmp
imul
cs
cmps
push
cld
pop
pop
out
mov
push
adc
pop
xor
inc
mov
jge
mov
xor
inc
push
adc
sbb
shl
js
xchg
out
jge
loope
dec
or
cmps
cmp
xchg
(bad)
das
cli
jno
mov
sub
(bad)
push
mov
ret
sbb
mov
sbb
repz
iret
xchg
adc
xchg
inc
iret
mov
add
rcr
xchg
mov
inc
and
fnclex
ins
cmp
jmp
inc
jp
cdq
add
push
popa
(bad)
outs
xor
add
in
mov
in
aam
in
cmp
outs
jb
dec
jae
xchg
lods
sub
sbb
(bad)
mov
mov
out
adc
and
outs
inc
cmp
sbb
pop
xor
cmp
js
fild
movs
jmp
pop
sub
push
xchg
push
or
pop
sub
dec
cmp
mov
mov
push
add
clc
cmp
fadd
enter
push
push
loope
dec
or
sbb
adc
shl
out
sbb
or
adc
inc
cdq
pusha
and
or
enter
rol
cmc
pop
cdq
mov
cdq
add
jmp
(bad)
outs
and
lods
icebp
sbb
jne
fs
sbb
ret
adc
outs
ins
rcl
(bad)
into
ficomp
sub
(bad)
pusha
inc
pop
adc
and
xor
rol
nop
icebp
fldcw
je
sbb
add
xchg
mov
sub
or
sbb
je
pop
rol
pop
xchg
jnp
mov
js
mov
fsub
push
gs
popa
inc
xchg
fdivr
sub
sub
jnp
cs
mov
jmp
out
dec
push
jle
xchg
sbb
daa
ret
cdq
pop
in
xor
inc
jb
fcmove
(bad)
nop
adc
pop
xchg
fsubr
jecxz
movs
repz
daa
out
sub
aas
inc
rcl
xlat
in
in
add
jge
jae
popf
pusha
lahf
xchg
fnstsw
adc
fisttp
cmps
inc
sub
fnsave
jp
xlat
or
stc
mov
cmps
lods
fsub
mov
mov
push
mov
repnz
mov
bound
cld
stos
sub
loop
iret
sub
push
das
mov
lods
out
mov
cmp
addr16
int3
jne
ret
xchg
lods
pop
and
(bad)
mov
in
ret
add
jp
sbb
inc
mov
jl
aas
pop
dec
int
punpcklbw
(bad)
xor
push
xor
add
jae
add
(bad)
shr
lods
mov
or
data16
mov
call
mov
pop
cmp
enter
push
jae
aad
test
pop
add
sbb
fwait
test
sbb
outs
ins
(bad)
xor
mov
jl
pop
xchg
cmc
cli
cld
mov
iret
gs
or
fild
add
fs
stos
loopne
sbb
pop
and
mov
mov
cmc
out
std
mov
out
movs
mov
dec
jns
add
aaa
or
mov
push
fnstcw
jmp
mov
mov
cmps
push
mov
in
jecxz
jbe
xor
mov
push
test
sbb
(bad)
fdiv
pop
jmp
sub
adc
pop
cmp
pop
fnstenv
inc
pop
sub
mov
lds
mov
in
(bad)
pop
cmp
inc
pop
sbb
xchg
daa
dec
popa
and
das
pop
pushf
cmps
pop
mov
movs
mov
jo
loope
aam
mov
mov
mov
add
sub
fsubr
es
das
cmps
mov
xor
pusha
mov
scas
push
aad
seta
mov
test
sbb
xlat
aad
inc
int
sbb
inc
push
pop
cmp
sub
cli
in
fild
mov
mov
cwde
out
arpl
jnp
(bad)
sbb
stc
out
push
fdivr
(bad)
call
repz
loope
xchg
out
aaa
sub
xchg
mov
jmp
cwde
call
repz
std
xor
les
repnz
imul
test
retf
std
dec
int
(bad)
cmc
xor
test
mov
dec
cmp
jl
jo
xchg
or
and
sub
xor
dec
lea
xchg
inc
jg
jp
mov
nop
mov
pop
cmps
hlt
cmp
mov
ss
loop
pop
cmp
(bad)
jg
inc
ja
cwde
mov
xor
ror
dec
add
xchg
ja
inc
push
push
call
sub
add
pop
call
ret
mov
or
adc
jno
out
ins
mov
fdivr
sbb
mov
sbb
push
xor
leave
ret
adc
jno
(bad)
dec
xchg
test
fiadd
cmp
cmp
sahf
fild
inc
mov
mov
mov
jnp
dec
js
addr16
repz
push
xor
(bad)
xchg
sbb
adc
pop
push
rcl
int3
inc
les
sti
cwde
in
mov
mov
shr
mov
add
inc
outs
adc
mov
adc
(bad)
mov
cmp
sub
xor
push
out
sbb
shl
and
fbstp
xor
cdq
pop
cmp
gs
add
mov
test
shr
popa
imul
in
push
enter
movhps
jle
jmp
jbe
nop
(bad)
enter
adc
push
fild
jg
test
mov
pushf
add
or
in
mov
add
adc
inc
addr16
daa
scas
adc
ror
mov
int3
sbb
je
sub
aam
rcr
(bad)
fcom
sub
mov
xor
jbe
cmc
xor
push
sub
jns
(bad)
(bad)
sub
cmps
ins
pop
mov
lahf
stos
sbb
jns
popf
xor
mov
xor
fild
ins
ins
xor
dec
(bad)
sub
dec
jge
and
mov
jle
fst
test
hlt
push
add
sti
inc
hlt
or
push
pop
aaa
mov
test
fwait
iret
std
inc
adc
jo
in
dec
cmp
sbb
add
adc
cmps
mov
lds
sbb
sbb
xchg
imul
ret
popf
xchg
pop
cmp
outs
ins
or
add
xchg
lds
mov
xchg
lds
push
mov
or
ds
fsubr
jne
shr
aas
mov
jle
or
adc
(bad)
dec
test
adc
push
ja
arpl
inc
repz
add
(bad)
lods
mov
sbb
test
jge
lahf
std
adc
cmp
cmps
adc
fiadd
push
cld
ja
sar
dec
gs
shl
ins
es
loop
add
cmp
dec
aad
inc
adc
mov
push
and
push
cmp
or
retf
mov
pop
lods
stc
int3
xchg
es
sub
inc
mov
jne
add
(bad)
fstp
icebp
xchg
in
jne
adc
inc
mov
jle
inc
pop
adc
jb
pop
ja
adc
jae
dec
cmp
xchg
sub
stc
repnz
pop
leave
sub
mov
mov
jl
(bad)
repz
icebp
inc
jmp
ins
mov
jae
inc
cwde
leave
mov
call
loope
xor
fwait
jmp
inc
sbb
fadd
stos
cmps
data16
in
mov
xor
loopne
mov
dec
cmp
sub
xor
and
mov
in
inc
push
push
dec
shl
push
jecxz
adc
cmp
add
call
and
push
add
out
sbb
adc
imul
jg
add
mov
inc
cmps
cmps
mov
sub
clc
inc
ja
js
jl
mov
push
pop
scas
mov
ret
aaa
inc
hlt
dec
in
pop
mov
mov
jge
xchg
lahf
and
inc
in
mov
ss
mov
mov
or
add
repz
rcr
(bad)
inc
aad
mov
(bad)
cmps
xchg
xchg
xchg
(bad)
jns
sub
cld
(bad)
ja
arpl
mov
push
call
lahf
jl
sub
dec
xchg
jo
rcl
jbe
sti
jmp
and
xor
loop
cwde
into
mov
add
es
lea
ret
pusha
es
dec
dec
xor
stc
lods
or
dec
inc
icebp
push
push
sahf
rcr
xor
xlat
xchg
adc
mov
sub
pop
and
push
xchg
das
je
mov
in
les
mov
mov
push
jns
ret
(bad)
fadd
mov
push
int
or
(bad)
div
jmp
push
xchg
dec
ficom
add
cdq
outs
dec
arpl
cdq
repz
std
cmp
adc
jecxz
dec
test
rcr
or
pop
daa
and
mov
call
pop
inc
mov
rol
xchg
out
adc
rcl
mov
hlt
js
cmp
jg
hlt
movs
shl
jbe
addr16
shl
(bad)
jns
dec
xor
push
sub
mov
inc
addr16
sar
pop
mov
neg
add
mov
mov
jle
pop
jne
fs
mov
cmc
xchg
xchg
aas
sti
pop
mov
rcl
jg
jle
pusha
outs
push
and
and
ja
sub
aas
stos
movs
xchg
cs
repnz
jnp
call
lods
sahf
out
or
rcr
push
jb
adc
or
cs
(bad)
int
fisubr
mov
pop
adc
mov
push
sti
int
(bad)
mov
bound
xor
xchg
adc
jmp
fwait
push
pop
ss
add
pop
hlt
inc
add
into
lock
fsubr
imul
(bad)
mov
cmp
out
fistp
jmp
(bad)
pop
mov
jno
adc
sub
out
pop
push
sub
ret
jnp
dec
or
push
cmp
loope
pop
push
nop
jns
xor
retf
test
pop
mov
jmp
sbb
fsub
xor
ds
push
hlt
inc
push
shl
xchg
push
ins
fisubr
cmps
cmps
adc
fld
push
fisubr
dec
mov
test
mov
mov
loop
rcl
and
fiadd
jns
xchg
scas
push
jecxz
cmp
or
imul
sub
or
sbb
mov
adc
es
out
loop
cmp
jl
nop
call
push
clc
xor
or
xor
in
adc
mov
pusha
ret
into
add
inc
mov
stc
xchg
into
add
(bad)
fld
imul
stos
out
aad
jecxz
fidivr
jge
push
sar
or
(bad)
mov
and
pop
jne
shl
mov
scas
dec
xchg
mov
retf
loop
jmp
pop
bound
enter
fstp
push
and
dec
xor
outs
mov
cmp
repnz
ds
jnp
bnd
adc
iret
dec
mov
adc
mov
push
or
call
ret
inc
lods
xchg
cwde
xchg
push
fcomp
xchg
dec
stos
outs
out
ins
iret
daa
xchg
cs
cmp
outs
popa
pop
icebp
hlt
in
pop
pop
(bad)
cmps
xor
push
imul
push
push
mov
jo
stos
inc
je
out
sbb
pop
adc
push
pushf
or
cmps
jecxz
in
xor
push
jo
mov
pop
or
fmulp
lock
and
call
js
lock
sub
dec
outs
pop
adc
lahf
repz
xor
rcl
xchg
adc
and
cmp
in
clc
cmp
cmp
gs
cmps
sub
call
xlat
in
imul
mov
xor
jae
daa
mov
pop
lock
cmp
xor
out
push
je
or
dec
mov
push
and
in
sub
push
ret
adc
xchg
in
(bad)
adc
mov
stos
je
test
push
xor
popf
les
jnp
hlt
sub
test
jne
cld
sbb
test
movs
repz
bound
mov
outs
(bad)
mov
paddb
lods
inc
in
movs
mov
push
imul
push
dec
(bad)
lds
cld
push
sbb
pop
movs
mov
ja
push
mov
out
jl
mov
add
mov
dec
cli
push
inc
and
ins
ja
push
pop
jns
jnp
push
inc
out
pop
dec
xchg
outs
mov
dec
(bad)
(bad)
mov
pusha
dec
hlt
movs
and
mov
xchg
(bad)
fdivr
inc
adc
push
aam
jbe
add
adc
jo
xchg
clc
jmp
mov
das
fcom
dec
outs
mov
push
inc
push
pop
fwait
add
lods
aas
mov
or
fld
pop
push
jnp
mov
call
jmp
clc
adc
(bad)
loope
inc
jbe
mov
adc
sbb
cmp
fnstsw
arpl
jbe
dec
pop
jbe
inc
cmp
popa
in
std
ror
xor
push
mov
(bad)
sub
fisubr
enter
popa
cld
fbld
ins
xchg
mov
mov
add
cmp
pop
xor
mov
pop
movs
fild
and
mov
arpl
rcl
repz
and
xchg
or
jmp
mov
rol
and
or
(bad)
fcmovnbe
cdq
push
int3
jns
and
sahf
adc
mov
push
inc
jnp
test
sub
shr
mov
inc
mov
test
fwait
imul
loope
lds
cmp
xchg
fwait
pop
in
jge
daa
sub
and
xchg
mov
mov
addr16
int3
arpl
mov
fistp
mov
sub
fld
retf
sbb
mov
cli
cld
int3
and
push
mov
jae
dec
adc
fsub
cmps
out
or
pop
icebp
mov
(bad)
out
sub
or
dec
mul
inc
dec
imul
push
mov
xor
sbb
in
(bad)
ds
in
cmp
mov
movs
pop
sbb
stc
or
or
fadd
xchg
jno
xchg
pushf
leave
mov
int
push
in
mov
sbb
lea
popf
neg
inc
dec
test
add
in
sbb
or
push
jmp
sbb
jg
sbb
mul
mov
sar
xchg
push
out
cmps
pop
cwde
push
aam
xor
ds
dec
daa
lods
sub
repz
mov
loope
push
xchg
stc
jns
xchg
adc
sti
jb
push
and
pop
jnp
xchg
push
jecxz
jmp
and
imul
in
das
jno
jmp
lods
adc
jno
call
jg
loope
outs
sub
in
and
mov
jno
js
sbb
(bad)
lods
in
aam
imul
and
inc
pop
int3
test
fs
jo
push
in
mov
sar
loope
jl
pop
lods
dec
jbe
cmps
stos
adc
adc
cmp
pushf
pusha
cli
dec
int
dec
xchg
mov
addr16
and
add
pop
cs
fsubr
push
jb
push
xor
and
mov
int
mov
(bad)
ror
cmps
lods
popa
mov
ds
cmps
mov
and
and
mov
addr16
rcr
(bad)
sti
aaa
mov
ret
jae
not
icebp
mul
mov
add
dec
(bad)
sbb
call
idiv
jp
cmp
aam
retf
mov
sahf
adc
xor
cmp
icebp
lods
pop
daa
mov
xor
mov
jecxz
pushf
repnz
mov
cld
cmp
lods
jl
repz
rcl
(bad)
pop
push
dec
jmp
aas
mov
sbb
loopne
popf
call
mov
dec
mov
cli
jg
shl
call
in
and
xor
mov
xor
stos
xor
(bad)
lods
push
adc
xchg
xchg
ins
stc
ds
clc
ins
mov
jle
or
sub
mov
fwait
loop
shr
push
xor
inc
call
inc
fidivr
jae
sbb
jmp
jae
jns
push
add
retf
test
jne
(bad)
fcmovne
(bad)
imul
mov
xlat
cmp
push
in
sbb
pop
jmp
push
clc
aam
push
and
nop
out
pop
sub
aas
xchg
stos
xchg
out
out
clc
xchg
mov
dec
jns
jns
mov
data16
xor
jge
push
repz
frstor
jge
pop
dec
rcl
(bad)
(bad)
xchg
aaa
xchg
and
ret
loopne
pop
pop
push
cmp
fiadd
xlat
pop
or
in
xchg
popf
dec
pop
pop
mov
mov
add
jns
fcmovu
mov
cs
ins
push
mov
mov
inc
sti
push
adc
xchg
pop
rol
sub
shr
ins
pop
ret
sub
inc
mov
mov
and
cmp
lock
and
jg
adc
or
xchg
ficomp
add
xor
adc
cdq
push
shl
std
and
dec
inc
(bad)
(bad)
pop
xchg
xchg
mov
fwait
and
pop
pop
lods
inc
enter
inc
jle
out
pop
test
jmp
or
mov
mov
ins
pop
inc
inc
push
and
cmp
pop
outs
xchg
lea
scas
cdq
movs
fisub
out
adc
pop
dec
inc
push
xchg
ret
cld
sub
xchg
ror
dec
(bad)
and
sub
xchg
daa
ret
ins
je
push
xchg
mov
xchg
cmp
xor
dec
xchg
jp
or
push
xchg
add
or
ret
stc
ret
aas
pop
neg
mov
jmp
adc
mov
jmp
xchg
icebp
lea
mov
mov
movs
pop
xchg
push
mov
xchg
adc
pop
inc
leave
dec
push
pop
test
sbb
pop
sar
rcl
mov
movs
xchg
loope
add
lods
lea
mov
cmp
(bad)
mov
inc
mov
stos
mov
jmp
mov
ror
bound
imul
hlt
mov
adc
pop
cmp
sub
xor
out
push
dec
pop
addr16
fcmovnb
xchg
mov
outs
mov
scas
bound
mov
je
jl
jmp
jne
retf
xchg
mov
sbb
leave
stos
or
ret
jmp
lock
mov
dec
clc
mov
adc
sub
ret
fisttp
scas
retf
rcr
movs
xchg
fbstp
(bad)
pop
lds
lods
push
sbb
sbb
fcom
lea
jl
mov
cmp
jl
add
aam
jmp
aas
movs
outs
mov
sbb
int
leave
outs
mov
mov
fs
pop
das
ins
add
push
ins
rcl
add
pop
push
pop
push
cmps
loope
imul
sti
pop
lds
mul
push
sbb
xchg
jo
stos
xchg
sbb
push
mov
dec
pusha
popa
add
enter
in
mov
or
in
pop
sti
xchg
test
mov
loopne
ret
popa
xchg
push
dec
xchg
adc
dec
jns
sbb
add
push
das
and
outs
pop
imul
leave
pop
test
mov
call
adc
cmp
ret
xor
xor
lods
loope
xchg
(bad)
xchg
or
ret
imul
pusha
stc
pop
mov
mov
call
pop
inc
imul
iret
pop
into
popa
cs
sbb
shl
push
pop
in
out
int
stos
push
inc
xchg
ja
gs
fcom
outs
xlat
and
out
mov
mov
sub
not
adc
cmps
mov
push
inc
adc
loope
cmp
xor
ja
loop
xchg
retf
pushf
inc
emms
enter
int3
popf
les
jge
daa
and
stos
xchg
push
fisub
mov
popa
pop
pop
pop
(bad)
sti
push
mul
loop
cs
push
dec
mov
aam
add
je
ret
and
movs
sub
hlt
nop
xor
mov
stc
in
fiadd
pop
rcl
out
jmp
mov
cli
mov
(bad)
pop
xchg
inc
mov
std
inc
and
xor
(bad)
enter
test
mov
xor
mov
popa
xor
jmp
or
jns
dec
aad
dec
dec
std
mov
icebp
or
push
scas
adc
dec
pop
movs
mov
fst
and
push
popa
jne
sahf
rcr
push
dec
popa
(bad)
repnz
imul
mov
rcl
mov
stc
cld
xchg
sub
inc
adc
mov
iret
jno
aas
jg
xor
fcom
mov
les
mov
mov
mov
sub
cmp
and
jmp
iret
(bad)
xchg
sub
shl
lock
std
sbb
xchg
imul
cmp
cmp
mov
aam
outs
inc
push
loop
adc
mov
mov
xor
and
inc
dec
in
push
jp
test
xor
push
sti
mov
imul
lock
rcl
ds
pop
inc
mov
inc
sub
and
mov
cs
add
sahf
cmp
xchg
xchg
xchg
mov
pop
cld
pop
cmp
pop
add
mov
ds
mov
test
pop
in
push
out
ret
pop
inc
xor
inc
xor
rcl
jmp
addr16
push
mov
xchg
arpl
sub
inc
lods
cmp
leave
dec
or
das
movs
push
inc
jo
ffree
mov
add
jo
cmp
jo
jp
adc
pop
in
adc
sahf
dec
mov
(bad)
inc
jl
inc
xlat
and
test
sar
add
inc
data16
mov
enter
sbb
xchg
and
fxch
sti
cmp
xor
pop
neg
push
mov
sbb
cmp
aam
mov
repnz
icebp
sbb
lods
aam
sub
aas
push
inc
sub
pop
jp
sub
ss
adc
push
push
inc
in
ds
sub
xlat
cwde
xor
xchg
mov
test
ss
ss
fbstp
mov
or
lahf
je
jp
adc
das
vpmullw
fild
rcl
pop
jmp
jle
sti
(bad)
hlt
jmp
mov
jns
cmps
push
int
pusha
sub
mov
(bad)
jmp
in
jmp
add
imul
call
sbb
je
inc
enter
jne
mov
arpl
fisttp
lods
cwde
xchg
pop
jmp
cli
jecxz
and
shr
jmp
push
(bad)
and
iret
dec
in
cmp
nop
dec
es
mov
xchg
pop
and
and
or
inc
inc
xor
mov
inc
mov
outs
sbb
int3
into
dec
retf
movs
(bad)
cmps
push
ror
call
sbb
inc
pusha
xor
scas
push
pusha
mov
jmp
aam
push
xchg
call
in
dec
pop
cmp
xor
jmp
mov
inc
mul
pop
fistp
and
jp
shl
sti
pop
retf
xchg
popa
mov
jnp
add
xchg
gs
and
scas
fist
aaa
cmp
sbb
movs
cli
in
outs
imul
mov
pop
out
scas
ss
mov
dec
arpl
int3
sbb
outs
out
outs
jge
bound
movs
add
jno
ss
mov
mov
inc
ret
xchg
enter
ficom
test
or
jecxz
push
lds
sub
dec
cld
ror
jp
cs
xchg
cmp
std
xor
sub
add
cmp
popa
push
test
push
push
and
add
and
sbb
mov
mov
pop
jmp
iret
adc
test
les
lock
cmc
(bad)
icebp
dec
retf
jo
and
sbb
mov
out
dec
jns
leave
aas
inc
push
mov
adc
xor
mov
jb
push
lods
cmp
(bad)
mov
adc
jbe
hlt
jae
dec
btc
mov
cld
pop
stos
jp
mov
or
stos
xchg
fild
mov
in
mov
or
arpl
fcom
imul
mov
ja
dec
mov
adc
push
sub
jns
push
test
sub
pop
dec
add
stos
xchg
adc
mov
scas
mov
(bad)
test
into
jnp
popf
ficomp
(bad)
add
dec
mov
push
mov
xchg
cld
outs
ja
mov
fisub
outs
ds
jp
aas
jns
popa
mov
xchg
push
hlt
jmp
and
enter
adc
ja
pop
daa
test
jae
test
fsub
int
sbb
mov
dec
ret
aaa
and
jnp
movs
test
ror
(bad)
cmp
repz
inc
lods
xor
cs
into
mov
cmc
mov
ins
dec
cmps
das
push
pop
cmp
ret
or
jmp
pushf
jl
or
xor
xor
push
(bad)
fild
cli
les
retf
into
arpl
ja
aam
jne
popa
sub
lods
fistp
(bad)
sahf
jne
pop
cmps
inc
jp
mov
cwde
es
clc
dec
inc
mov
jecxz
(bad)
mov
adc
xlat
jns
hlt
xchg
dec
push
cmp
mov
test
push
inc
sub
stc
dec
xor
sbb
nop
mov
enter
cmp
adc
jmp
sub
xor
rcl
test
mov
loop
inc
bound
dec
repnz
push
xchg
shr
bound
cmps
addr16
xchg
xchg
mov
fs
sub
cmps
add
add
mov
fcmovb
and
in
adc
imul
mov
and
les
test
inc
and
sti
test
inc
dec
ins
je
enter
enter
xchg
imul
shr
out
ret
outs
sbb
hlt
and
ss
pushf
dec
jmp
mov
pusha
pop
push
mov
arpl
mov
es
ds
inc
les
push
scas
repnz
call
inc
jae
std
je
xchg
pop
out
jg
adc
aam
add
dec
sbb
adc
inc
add
aaa
xchg
and
hlt
in
dec
sbb
xchg
adc
mov
xchg
cli
push
lahf
es
mov
fsub
bound
and
jbe
inc
repnz
loope
test
dec
ins
out
dec
cmp
loopne
(bad)
out
mov
(bad)
cmp
or
repz
mov
xchg
inc
cmp
into
jg
pushf
jle
mov
das
jle
and
out
cmp
sub
cmp
je
sar
jno
or
push
cmp
xchg
shl
sub
test
into
(bad)
cld
and
xor
add
test
fs
lds
popf
es
nop
or
cdq
(bad)
es
test
inc
fidiv
dec
pop
push
pop
(bad)
fcomp
shr
int
or
sub
or
cli
shld
xor
adc
pop
lea
cli
mov
test
mov
pop
add
fadd
and
je
xlat
add
fndisi(8087
sub
stos
clc
push
test
sbb
sbb
in
add
ret
sub
(bad)
ret
out
adc
sbb
inc
add
adc
xchg
mov
pop
scas
sbb
or
adc
repnz
test
cmp
lea
jnp
ins
jle
xchg
das
mov
mov
inc
jne
cmp
sub
or
ficomp
shl
mov
ror
int3
int3
call
pop
fcom
or
fidivr
xor
mov
call
aaa
fcomp
mov
sub
sbb
jle
sub
outs
jne
push
fimul
fstp
out
icebp
xchg
or
add
cmp
in
lods
and
add
sbb
por
movs
add
(bad)
iret
dec
popa
push
inc
or
or
inc
add
jo
div
scas
in
(bad)
inc
and
hlt
inc
mov
push
jae
jle
lods
jae
mov
minps
in
adc
push
xchg
and
cmp
pop
test
push
ds
dec
test
xor
adc
push
mov
mov
pop
mov
mov
cmp
cmp
and
dec
xor
fwait
gs
adc
and
ss
inc
enter
inc
arpl
jl
pop
leave
pop
jno
test
out
sti
mov
pop
aam
in
je
in
xor
retf
ins
fcom
or
sbb
dec
leave
jnp
and
lods
cmp
mov
fnstsw
leave
xor
out
fistp
push
outs
loopne
mov
rol
fucomi
mov
push
stc
div
mov
stos
jnp
jmp
call
fdiv
inc
sar
shl
aad
cmc
fs
iret
mov
or
mov
pop
ja
and
daa
leave
adc
adc
inc
inc
mov
and
mov
push
pop
call
imul
pop
fs
add
movs
jne
inc
pop
adc
cld
sbb
adc
mov
mov
ror
stc
stos
jmp
lods
or
adc
inc
mov
sub
pushf
or
pusha
std
push
push
xchg
ss
ins
push
mov
addr16
inc
jmp
repnz
xor
or
xor
and
sar
and
add
loop
fnclex
pop
or
or
lea
inc
sbb
aam
mov
cmps
xchg
bound
cmp
movs
and
xchg
dec
mov
daa
jnp
cmp
add
mov
dec
pop
add
ss
data16
push
mov
in
or
outs
or
ds
sub
sahf
(bad)
sar
adc
je
retf
xchg
ror
mov
mov
(bad)
dec
mov
pop
inc
out
sub
or
jno
ins
and
popf
cmp
xor
sub
pop
leave
loop
adc
je
cli
fild
sbb
gs
add
sti
push
(bad)
nop
xor
xchg
pusha
(bad)
and
mov
mov
and
imul
xchg
mov
cmps
(bad)
retf
dec
add
inc
daa
(bad)
outs
bt
adc
push
(bad)
loope
mov
push
fwait
loope
mov
out
aam
outs
out
sti
mov
push
xor
popa
and
inc
adc
and
push
pop
mov
mov
xchg
cmps
gs
(bad)
pusha
cmp
fimul
in
push
xchg
sub
cmps
add
xchg
imul
retf
pop
(bad)
es
out
sti
or
inc
cmp
mov
xlat
retf
stos
retf
inc
xchg
es
jle
rol
mov
cmp
adc
(bad)
ficomp
test
outs
ror
ja
sbb
xor
(bad)
jns
sub
cmp
xchg
cmp
pop
ret
mov
adc
rol
ins
mov
jnp
pop
mov
outs
xchg
xchg
pop
ret
and
adc
imul
int
les
inc
jge
aad
call
lock
xor
shl
xchg
cld
dec
repz
test
mov
mov
sbb
pop
and
sub
ret
pop
sub
or
mov
inc
out
or
jmp
push
repz
imul
les
gs
mov
sbb
jge
mov
or
cwde
fidivr
sub
in
inc
nop
jp
loope
or
jmp
aaa
iret
mov
pop
adc
xchg
mov
mov
mov
cmp
xchg
int3
sub
loope
push
in
pusha
xchg
clc
lahf
xchg
jmp
xlat
clc
sub
push
xlat
dec
xor
sub
movs
lods
xchg
mov
(bad)
cwde
idiv
push
mov
cmps
je
push
gs
and
cmc
xchg
data16
mov
add
pop
call
sbb
fcomp
cmp
mov
loope
fbstp
fsubr
iret
pop
retf
aas
add
cmp
rcr
idiv
add
xor
ds
retf
stc
in
mov
es
cmc
cwde
std
cld
sbb
or
xor
sub
in
push
in
arpl
cmp
cmps
and
dec
xor
repnz
inc
cmp
ret
js
inc
test
(bad)
std
stc
sti
popa
cmp
mov
xor
arpl
xor
xchg
shl
cmp
out
sbb
dec
mov
add
mov
loopne
mov
sbb
(bad)
push
add
adc
push
sbb
inc
sahf
add
pop
mov
ins
xchg
cmp
cmp
icebp
xchg
fisubr
mov
jbe
push
lock
cmps
jl
retf
sub
inc
scas
sbb
mov
scas
or
cmp
jp
fisttp
(bad)
and
adc
aas
pop
scas
cmp
ds
addr16
pop
sub
stc
dec
pop
add
or
dec
cli
mov
mov
cmps
add
pop
cs
push
ret
mov
jle
scas
pop
hlt
(bad)
call
cmp
inc
pop
movs
dec
leave
or
xchg
xchg
jle
daa
adc
in
pop
aad
add
push
cmp
retf
mov
xor
cmc
ds
jg
mov
or
movs
data16
dec
xchg
cs
inc
jb
pusha
ret
mov
push
into
mov
jnp
push
inc
das
(bad)
lahf
mov
(bad)
repnz
push
adc
je
push
inc
(bad)
mov
(bad)
fist
cmp
mov
rcr
mov
rcr
xchg
jg
xor
in
(bad)
nop
(bad)
cmp
push
or
pop
mov
les
add
inc
lods
rcl
jmp
adc
dec
pop
repz
mov
(bad)
in
pop
es
jle
inc
lods
mov
lahf
call
rcr
cmps
jp
pop
fcom
test
mov
cmp
lds
pop
inc
pop
test
mov
sbb
dec
and
cmc
(bad)
cmc
out
lods
sbb
or
dec
adc
xchg
adc
outs
into
push
pop
push
mov
pusha
in
call
bound
or
popf
in
adc
outs
push
cmps
pop
daa
push
adc
enter
push
push
les
dec
aad
and
and
add
pop
or
in
xchg
shr
mov
outs
mov
jle
pop
mov
inc
(bad)
or
adc
mov
push
cmp
stos
fidivr
dec
call
sbb
mov
fdivr
adc
icebp
movs
push
test
lahf
xchg
aas
repz
inc
inc
iret
icebp
add
les
imul
fidivr
movs
cmps
jne
mov
add
in
into
data16
pop
cld
rcl
sbb
dec
adc
(bad)
jb
sub
and
xchg
push
push
jb
cmp
add
mov
ror
rcr
xchg
push
add
xchg
inc
mov
jmp
pusha
xchg
mov
in
into
es
int3
stos
inc
std
sbb
cdq
inc
adc
xor
imul
mov
inc
out
in
ds
ds
dec
aam
ret
ror
adc
stos
ror
mov
and
mov
je
clc
jle
and
mov
loope
icebp
inc
(bad)
loopne
outs
mov
pop
cmp
lods
cmp
jmp
sbb
mov
arpl
xchg
movs
mov
test
cmp
sahf
into
cs
in
pop
sbb
fstp
sbb
rol
shr
dec
retf
cld
fild
sahf
fld
mov
pop
leave
mov
mov
stos
xchg
sub
lock
pusha
mov
lahf
clc
inc
iret
mov
jl
jb
loop
loop
adc
ret
mov
or
adc
push
repnz
arpl
popa
add
(bad)
mov
sub
retf
lods
fld
ds
in
cmps
pop
popf
(bad)
mov
ror
xor
add
mov
repnz
fsub
add
sub
rcr
mov
scas
push
pop
xchg
pop
mov
xlat
fbld
(bad)
mov
dec
div
sub
mov
jmp
mov
stc
fisttp
xchg
into
mov
test
not
(bad)
call
inc
js
pop
xchg
jmp
cmp
or
adc
push
scas
repnz
xchg
cli
popa
dec
or
adc
pop
inc
ja
adc
cmp
lods
stc
lock
or
jmp
xadd
imul
ds
push
cmp
sbb
(bad)
fiadd
inc
loop
sbb
push
push
jg
mov
aas
daa
push
dec
lea
popa
ins
icebp
xchg
jge
mov
aad
mov
mov
ret
pop
shl
call
xor
jg
jmp
in
mov
mov
jne
fnstcw
mov
js
call
loope
xchg
(bad)
into
mul
loop
mov
in
mov
cmp
xor
push
sbb
outs
sub
(bad)
dec
mov
or
push
and
mov
dec
ins
and
lods
sub
add
ins
jmp
pop
fwait
in
test
fsubr
and
lods
sahf
adc
sub
daa
mov
xor
(bad)
xlat
add
jecxz
gs
push
clc
sbb
mov
add
jmp
and
sti
fisubr
adc
mov
popa
inc
sbb
mov
dec
sbb
fs
mov
xchg
mov
inc
inc
push
in
loop
call
inc
imul
push
ins
sbb
mov
loop
or
cli
mov
inc
(bad)
bound
rcr
into
adc
cld
mov
push
fidivr
rcr
jl
(bad)
add
popa
js
icebp
push
xor
leave
mov
dec
std
repnz
call
jg
jmp
and
mov
sbb
pop
xor
cmp
pop
inc
movs
enter
jge
sub
aam
cmp
push
lds
inc
push
sbb
xor
cmp
fisttp
dec
ins
data16
sbb
pop
cmp
and
and
das
out
sbb
mov
cld
in
out
shl
cdq
es
fcmovbe
stos
gs
cwde
jne
xor
imul
es
adc
dec
jbe
sti
lea
nop
inc
rcr
sbb
or
aas
fmul
sldt
sub
(bad)
mov
aas
jbe
or
xor
sbb
test
xchg
scas
hlt
xchg
inc
loop
sbb
jb
jo
jmp
retf
sti
or
dec
mov
mov
lods
jmp
dec
aas
sahf
mov
jl
call
in
ror
cmps
jbe
addr16
pop
dec
retf
push
adc
js
inc
xor
xor
nop
mov
test
cld
outs
ret
fs
nop
int3
xor
shl
xor
and
aas
push
xchg
or
inc
icebp
ret
inc
xchg
mov
sub
(bad)
and
sub
cwde
ja
adc
hlt
test
(bad)
into
inc
imul
or
jnp
sub
jbe
aad
or
inc
xchg
adc
xor
sar
inc
mov
fs
push
stos
add
mov
inc
icebp
mov
sbb
adc
es
xchg
ret
xor
lea
icebp
and
pop
or
clc
and
lods
cwde
(bad)
xchg
adc
ins
je
rol
mov
mov
ins
jns
in
and
add
pop
gs
pop
add
jmp
fistp
scas
cs
adc
popa
adc
add
and
out
and
dec
push
pop
sbb
scas
jmp
aas
and
push
push
lock
push
xchg
xor
arpl
xchg
fsub
(bad)
std
push
add
inc
inc
and
inc
or
mov
(bad)
aad
jne
or
es
xchg
jecxz
and
jbe
fsubr
inc
lea
cli
adc
mov
inc
loop
inc
pop
aaa
mov
add
add
adc
out
(bad)
mov
das
or
sub
jae
push
adc
(bad)
pop
inc
xor
call
ds
(bad)
pusha
jns
sub
rcr
ins
stos
mov
ds
(bad)
mov
repnz
out
or
sti
out
push
push
adc
rcr
mov
mov
imul
xor
pop
mov
sub
jmp
lea
fwait
popa
rcl
(bad)
and
aas
stos
into
push
xchg
scas
xchg
adc
in
add
icebp
mov
add
jns
fwait
or
xlat
std
shl
ins
mov
out
jo
ja
movs
stos
sub
sbb
in
or
sub
ins
sbb
jmp
pop
mov
fs
dec
sbb
add
in
jns
or
sbb
dec
inc
mov
cmp
mov
test
push
(bad)
pop
dec
mov
inc
scas
and
sbb
fiadd
jo
push
(bad)
into
lds
cmp
sub
sahf
in
(bad)
mov
mov
(bad)
pop
loopne
movs
aad
cmc
xlat
push
lds
jmp
jb
mov
shr
neg
lods
adc
adc
jmp
mov
test
cmps
jae
or
rcr
ret
cmp
loope
loop
fs
cmp
sub
leave
mov
out
pop
mul
sbb
sahf
adc
or
punpcklbw
inc
sbb
sbb
sub
xchg
jge
xchg
aad
jo
lea
outs
cmp
rol
push
jg
dec
mov
cmps
(bad)
arpl
fldenv
cld
dec
push
xor
pop
cmp
aam
ss
adc
adc
loop
sbb
pop
fstp
pushf
jb
daa
pop
dec
mov
sbb
jp
xchg
dec
imul
out
pop
neg
cmp
mov
rol
xor
cmps
xchg
mov
je
jno
cdq
sahf
(bad)
and
ja
push
out
in
mov
imul
les
je
push
iret
add
imul
dec
outs
sti
mov
jle
aaa
les
xor
mov
lock
push
push
pop
psubw
mov
cmps
je
pop
mov
(bad)
jp
sbb
andps
xchg
mov
xlat
cmp
or
and
popf
lods
cmp
jge
mov
(bad)
test
mov
jmp
mov
xchg
xor
stos
ret
(bad)
cwde
ret
or
out
jne
pop
jp
and
xor
sar
in
aas
mov
pop
jmp
imul
stos
sbb
push
cwde
(bad)
enter
ds
push
out
lahf
dec
jo
pop
mov
mov
xchg
mov
cmp
add
mov
shl
or
fsub
sub
cmps
repnz
in
scas
test
das
mov
in
fucom
xchg
dec
ja
inc
cwde
das
add
adc
js
sub
fiadd
xchg
leave
mov
jns
pop
arpl
(bad)
mov
inc
or
cdq
es
loope
cmp
sbb
ret
mov
call
std
dec
fld
out
pop
fild
gs
push
mov
leave
xchg
call
inc
cmp
call
aam
jmp
push
cmc
push
jg
sbb
mov
out
xor
jl
dec
leave
out
sbb
xchg
ror
(bad)
pop
xor
adc
sysret
mov
sbb
and
mov
scas
lods
jge
mov
rcr
(bad)
scas
adc
push
mov
repnz
sbb
data16
xchg
out
outs
mov
xchg
scas
add
fidivr
in
and
ins
inc
dec
inc
push
cld
or
aam
inc
mov
inc
jge
jbe
pop
cmp
rol
in
out
mov
nop
imul
jmp
xlat
cmp
adc
inc
inc
outs
mov
xchg
or
fist
push
cmp
add
imul
mov
jns
fs
pop
daa
(bad)
mov
adc
aam
popf
mov
xchg
shl
dec
pop
or
lock
inc
xchg
sbb
or
dec
out
aas
or
cmp
mov
iret
jne
std
and
js
mov
lahf
xor
fucomp
nop
test
fistp
fistp
pop
sahf
fadd
xchg
push
add
(bad)
faddp
(bad)
out
stc
add
mov
call
xchg
push
jne
fabs
push
clc
out
sahf
sub
jecxz
xor
dec
xor
dec
xchg
movs
daa
and
loop
add
(bad)
sub
xchg
lds
popa
xchg
jmp
xchg
enter
mov
(bad)
icebp
mov
(bad)
fucomp
inc
mov
sbb
test
retf
and
cmp
(bad)
cld
iret
shr
mov
imul
rcr
xchg
retf
inc
cli
mov
inc
mov
mov
bnd
call
adc
mov
scas
mov
test
mov
mov
xor
pop
push
mov
add
cmps
lods
add
call
add
into
xchg
imul
pop
sahf
fcmovbe
mov
imul
test
add
clc
je
ss
retf
jle
mov
js
sbb
jae
movs
nop
pop
jno
pop
pop
addr16
lods
sbb
enter
shr
data16
addr16
pop
mov
adc
jmp
cdq
cmps
test
add
fist
mov
push
dec
push
add
cmp
daa
shl
mov
leave
iret
push
fisub
int
call
push
pop
sti
dec
shl
imul
xchg
(bad)
lock
add
xchg
(bad)
mov
dec
rol
xchg
inc
jl
jp
std
je
(bad)
push
and
push
(bad)
mov
xchg
mov
lods
mov
push
sahf
inc
and
adc
fild
les
je
jb
xchg
fcomp
in
or
cmp
add
repz
pop
add
xchg
cli
(bad)
pop
(bad)
rol
ins
aaa
and
fadd
and
xor
aad
bound
mov
ja
lea
(bad)
leave
stc
fs
(bad)
stos
add
cmps
stos
xchg
adc
cmp
add
jl
inc
fidivr
sbb
or
lds
jns
cmps
mov
cmp
arpl
(bad)
fld
xlat
mov
clc
mov
in
jae
and
js
push
cmp
pushf
mov
popa
sub
shr
movs
or
stos
adc
mov
neg
dec
inc
add
sub
xlat
(bad)
dec
xchg
sar
inc
xchg
aas
xchg
xchg
daa
cli
xor
push
jg
or
pop
(bad)
(bad)
in
mov
pop
pop
mov
lods
fucomi
jmp
addps
xchg
xchg
sub
hlt
fiadd
inc
retf
cmc
sbb
pushf
inc
cmp
cmp
int
popf
fs
xor
retf
arpl
cmc
out
stc
push
xchg
enter
adc
and
retf
push
xor
xchg
and
adc
cdq
mov
dec
jmp
cmc
xor
xor
in
jae
ds
call
jnp
gs
test
icebp
das
mov
ins
dec
adc
mov
jg
out
and
mul
jmp
leave
jne
add
cli
js
(bad)
call
add
(bad)
mov
retf
inc
inc
push
pop
add
push
iret
cmp
inc
sahf
pop
xchg
pushf
jp
daa
(bad)
cmp
(bad)
(bad)
push
js
mov
inc
enter
shl
lock
enter
(bad)
shr
out
or
test
lea
push
inc
jp
movs
out
fs
test
mov
aam
(bad)
pop
ror
mov
test
popa
push
retf
data16
inc
or
shr
dec
dec
pusha
shr
bound
mov
pop
imul
sbb
xchg
(bad)
ins
cmps
out
ficom
pop
(bad)
lahf
call
movs
push
mov
xchg
cwde
aas
add
dec
(bad)
js
jp
mov
outs
sub
popa
or
mov
lods
mov
mov
inc
mov
dec
xor
inc
mov
cs
jp
jae
cmps
or
iret
add
leave
mov
jae
int
je
dec
shl
jae
mov
cmp
mov
and
leave
test
popa
xchg
jmp
call
or
push
test
leave
push
fsub
int
and
test
pusha
lds
aad
sbb
or
outs
sub
fistp
les
or
push
fist
lods
les
mov
cmp
imul
add
cli
sti
jae
(bad)
out
jb
push
jo
sbb
ret
faddp
mov
push
clc
and
mov
sub
nop
(bad)
push
adc
xor
mov
mov
adc
imul
out
imul
pusha
movs
xor
ret
clc
xchg
addr16
pop
and
push
push
sbb
xlat
int3
mov
ret
outs
clc
nop
cmps
nop
ret
and
popa
mov
jecxz
mov
push
mov
push
pop
mov
sar
aam
push
inc
data16
stos
and
xor
push
push
data16
push
pop
frstor
xchg
xlat
int
(bad)
(bad)
pop
loope
xor
data16
test
ret
movs
mov
sub
inc
dec
clc
(bad)
jmp
in
mov
and
repnz
mov
xchg
aam
mov
mov
adc
adc
add
push
cdq
int3
fld
lods
in
(bad)
rcr
dec
pop
mov
sbb
cs
sbb
pusha
scas
jge
mov
(bad)
mov
adc
rol
cwde
jo
daa
push
add
pop
jmp
xchg
xchg
fnop
cmp
push
call
mov
xor
clc
pusha
mov
clc
inc
cli
add
push
retf
into
call
out
aaa
div
icebp
clc
out
cmp
rcr
xlat
jg
cmp
add
stos
rcr
scas
into
cmc
arpl
adc
mov
push
out
lods
ror
mul
out
cdq
ja
and
outs
jmp
dec
xchg
fild
mov
retf
mov
repnz
lods
xor
mov
mov
dec
in
imul
pop
imul
(bad)
outs
lock
fs
call
stc
push
loopne
test
out
mov
adc
loope
push
clc
call
and
pop
(bad)
das
inc
dec
pop
inc
in
imul
fwait
bound
enter
cmps
sub
das
gs
add
mov
mov
call
push
bnd
leave
call
pop
ret
in
or
ja
imul
fbstp
xchg
push
repnz
int
in
dec
jecxz
adc
adc
scas
frstor
jmp
or
and
and
jb
mov
push
(bad)
jmp
stos
hlt
pop
ror
xor
push
fist
xchg
bound
mov
lea
inc
cmp
clc
and
and
out
jnp
cld
cmps
sub
je
mov
or
jecxz
mov
stc
popa
lods
int
jmp
xchg
imul
dec
jae
adc
cli
or
fidivr
mov
out
(bad)
loopne
ret
xchg
add
adc
add
in
mov
cmp
push
(bad)
xor
mov
fnsave
repnz
dec
je
or
push
popa
xor
mov
das
sub
fcomp
mov
and
xchg
ins
jecxz
scas
push
mov
(bad)
out
icebp
stos
inc
jb
cdq
in
pop
aas
xchg
cmp
mov
cdq
sub
scas
std
jbe
push
(bad)
je
jp
xlat
mov
or
fistp
popf
cmp
add
punpcklwd
adc
pop
jmp
aaa
adc
and
hlt
jmp
in
jge
mov
icebp
sub
lods
addr16
push
mov
ret
inc
pminsw
and
xchg
daa
fisub
mov
mov
mov
jns
push
out
popa
outs
jae
dec
sbb
shr
icebp
outs
pcmpgtw
icebp
cli
fld
fcomp
or
sub
sub
xor
push
inc
mov
adc
fs
sub
xor
sbb
pandn
sub
sbb
dec
pop
add
mov
add
test
lds
pop
sub
in
rcl
loop
sahf
mov
jmp
fisttp
loopne
cld
add
cmps
cwde
pop
stc
add
test
hlt
sub
int
lods
fcom
mov
call
xchg
cmp
xchg
scas
mov
scas
xchg
xchg
jbe
lods
push
stos
pmaxsw
inc
imul
inc
and
push
imul
sub
lahf
mov
hlt
fdiv
repnz
jne
pushf
or
jg
xlat
mov
xor
jmp
mov
xor
rol
pop
ret
gs
inc
retf
add
(bad)
sar
or
push
jmp
ins
fs
aam
retf
pop
mov
cld
aad
inc
sbb
movs
cmps
adc
ja
retf
pop
retf
cmp
out
sbb
aaa
inc
fs
ss
cmc
and
cli
js
pop
into
and
test
faddp
sub
sti
iret
inc
pushf
ret
mov
push
xchg
(bad)
ja
hlt
adc
push
bound
push
ins
cmp
push
mov
cmp
sar
ficomp
push
mov
dec
push
mov
push
push
arpl
mov
pop
push
movs
cmp
gs
mov
mov
xchg
in
cmps
mov
mov
sub
fwait
dec
and
jmp
xchg
mov
push
pop
or
dec
dec
cmp
shl
and
test
gs
sub
imul
sub
push
loope
jl
xchg
popf
in
and
jle
sbb
bound
add
pop
movs
jo
sbb
dec
inc
enter
je
pushw
ffree
mov
nop
sbb
mov
std
cmp
stc
dec
xchg
jno
fld
jnp
outs
psrlq
enter
mov
mov
mov
test
and
xor
aaa
sahf
or
inc
fstp
dec
jbe
mov
jns
jecxz
bound
ja
(bad)
outs
inc
lods
xor
cli
cdq
or
mov
jl
mov
loope
retf
cmc
(bad)
jne
lods
cmp
rcl
jg
outs
sbb
leave
sub
fistp
mov
std
sbb
inc
(bad)
dec
mov
call
les
mov
arpl
ins
xchg
sub
sub
add
fadd
pop
push
(bad)
pop
cmp
neg
int
out
mov
mov
dec
dec
sti
imul
fmul
sub
lahf
pushf
das
pop
lock
ins
dec
xor
fs
pop
icebp
fstp
jmp
retf
sar
jns
out
push
dec
pop
loopne
cmps
adc
jns
(bad)
mov
push
cmc
test
movs
in
hlt
inc
bound
int
push
mov
add
test
pop
mov
sbb
leave
adc
lock
sti
adc
out
add
shl
and
jns
(bad)
cmc
pop
jle
inc
and
jecxz
xlat
push
push
xor
in
fucomip
loop
adc
mov
pop
mov
inc
in
push
xor
addr16
jb
xor
(bad)
add
xor
sbb
imul
jecxz
sahf
add
ins
cmp
retf
inc
dec
bound
inc
xor
jne
mov
pusha
leave
cld
mov
test
jb
dec
outs
out
std
ins
mov
call
stc
fidivr
or
push
js
inc
cli
retf
loope
dec
shl
sub
out
push
mov
dec
mov
push
and
mov
dec
add
lods
stos
push
mov
sub
xchg
leave
mov
mov
xor
dec
push
cdq
push
sti
fs
dec
inc
(bad)
fdivr
mov
mov
sub
mov
cld
mov
test
jl
(bad)
loopne
repnz
inc
pushw
and
cmp
xchg
sbb
ins
nop
and
(bad)
fsub
or
xchg
out
ins
push
and
inc
dec
mov
in
in
push
stc
in
lock
cmp
lods
enter
test
fucomp
sub
outs
les
ror
ins
jnp
outs
data16
mov
int3
push
jmp
xchg
lahf
mov
rol
adc
sub
cmps
(bad)
in
xor
mov
lods
mov
xchg
cmps
dec
xor
iret
jns
cmps
jns
and
movs
xchg
adc
(bad)
adc
or
ins
movs
sahf
out
or
repz
rcr
sub
pusha
or
(bad)
jg
enter
in
mov
movs
scas
out
fldenv
jne
pushf
aam
sbb
aad
addr16
push
xchg
xor
aam
inc
loope
add
add
gs
push
cmp
das
inc
or
dec
mov
add
cmps
imul
inc
test
in
mov
push
dec
ficom
pop
sbb
sub
mov
push
movs
push
jmp
data16
adc
pushf
adc
cwde
movs
call
outs
ds
ror
pop
and
pop
ins
mov
cmp
push
xchg
inc
cwde
ins
out
push
(bad)
fild
cmp
gs
rol
test
dec
loopne
or
pop
bound
dec
jnp
fst
imul
add
aaa
adc
enter
dec
loope
cmp
arpl
inc
inc
jp
imul
mov
jmp
dec
call
nop
xor
popa
push
hlt
and
inc
xchg
in
inc
icebp
mov
push
dec
add
sti
xor
mov
pop
mov
push
and
fnstcw
push
push
icebp
shl
adc
neg
shl
push
dec
pause
outs
inc
stos
xor
push
add
gs
sub
arpl
cmps
or
(bad)
cmps
out
fwait
add
movs
mov
movs
fwait
adc
loop
cmp
xchg
sahf
add
imul
ror
cmp
pop
dec
pop
hlt
jbe
ret
out
shl
das
mov
push
push
cs
das
dec
add
mov
sub
jmp
inc
dec
sub
retf
out
xchg
sti
adc
mov
cmps
loop
push
xchg
test
lahf
or
pop
mov
imul
imul
pop
arpl
sub
jbe
sti
(bad)
in
jg
inc
fistp
les
and
ss
add
push
push
aam
add
(bad)
mov
add
cwde
fiadd
push
and
ror
cmp
push
push
scas
loope
and
iret
push
imul
test
addr16
imul
addr16
or
(bad)
adc
add
jl
leave
and
mov
sub
mov
ds
xchg
(bad)
push
and
out
aad
jmp
inc
nop
cs
mov
inc
add
jg
fwait
sbb
lds
div
or
cwde
shl
fisttp
or
dec
mov
adc
push
inc
add
xlat
dec
push
scas
call
retf
fist
mov
xchg
icebp
push
sub
dec
sbb
and
call
ins
mov
lds
test
or
int
repz
imul
dec
add
call
xor
out
leave
(bad)
cmc
jmp
and
iret
pop
int3
xchg
or
cmp
push
mov
sbb
sbb
push
std
gs
imul
jl
ror
lea
lahf
lds
push
(bad)
shr
and
call
sub
mov
jl
loopne
and
dec
inc
fcmove
pop
retf
lock
jge
jp
out
push
sbb
rcr
icebp
adc
sbb
aam
(bad)
pop
dec
mov
lods
addr16
xchg
loope
cdq
repz
adc
inc
lods
xchg
xor
jp
dec
cmp
cld
cmp
and
and
shl
(bad)
stc
fs
outs
rcr
add
test
push
sbb
xchg
lods
lods
mov
push
out
clc
sar
leave
dec
dec
popf
int3
xchg
add
and
gs
iret
and
and
aaa
cld
add
sahf
or
jnp
in
fdivrp
ja
cmp
mov
sub
ret
sub
stos
pop
aas
je
mov
test
mov
push
movs
cld
retf
push
ret
aam
popf
mov
sub
nop
dec
lods
jge
lahf
neg
jae
ret
add
aaa
repnz
mov
ins
std
xchg
ds
lods
inc
cmps
aaa
add
or
imul
leave
fs
xor
int
pop
retf
sub
or
daa
(bad)
cmp
dec
xor
push
mov
fwait
lods
xlat
sub
test
add
cmp
(bad)
pop
jno
lds
iret
xchg
cmp
dec
pop
sub
(bad)
popf
fidiv
and
xlat
leave
pop
retf
sbb
into
dec
pop
mov
cli
push
mov
xlat
int3
shl
lea
xor
pop
in
xor
xchg
mov
icebp
fstp
sbb
imul
fisub
ins
pusha
xchg
xchg
cmp
or
stc
data16
xor
arpl
add
add
jns
popf
mov
repnz
adc
sub
lahf
outs
jb
push
ins
cmc
sbb
out
dec
jecxz
ficom
(bad)
sbb
cmp
adc
in
not
sbb
(bad)
mov
jne
push
iret
sti
jae
sar
pop
shl
or
dec
sar
add
jecxz
jmp
mov
adc
jbe
call
cmps
pop
xchg
mov
aaa
jl
xor
jne
leave
arpl
add
push
loop
retf
aaa
sbb
das
lods
out
rcr
inc
shl
mov
mov
cmc
dec
mov
add
push
jne
out
leave
inc
ror
inc
icebp
scas
jae
fistp
mov
or
or
ficom
cmps
add
cmp
aam
daa
das
cmp
and
cwde
and
adc
mov
sbb
inc
sbb
outs
je
aad
sub
dec
mov
shl
push
push
dec
sub
pop
in
fwait
fwait
push
imul
mov
jl
cdq
mov
std
sbb
push
pop
jne
xlat
mov
ret
and
xchg
jnp
sub
int
sub
in
mov
or
xor
pop
add
cwde
pop
arpl
sbb
icebp
(bad)
in
in
movs
mov
idiv
cdq
dec
fbld
popf
jno
fstp
pop
cmc
xchg
daa
sti
ja
pop
xchg
or
or
scas
adc
adc
mov
pop
adc
lods
pop
pop
popa
adc
add
jmp
cmp
xchg
fistp
sbb
(bad)
xchg
ins
lea
movs
test
in
adc
pushf
cld
es
(bad)
mov
repnz
mov
mov
mov
mov
xchg
xor
mov
dec
mov
in
and
adc
clc
ins
mov
pop
dec
pop
ds
call
retf
dec
test
xchg
cs
out
mov
pop
push
mov
adc
adc
ss
loopne
ds
les
jne
lock
push
sbb
push
stos
or
inc
push
inc
jno
leave
and
(bad)
pop
sub
xor
in
jge
mov
adc
pop
(bad)
in
iret
mov
sub
or
aas
ja
dec
push
mov
mov
jecxz
xchg
in
add
movs
push
or
and
dec
add
scas
in
mov
inc
xor
cmp
gs
cmp
ret
stos
jns
xor
ins
test
sti
or
arpl
cmc
(bad)
retf
push
lea
and
(bad)
pop
push
movs
sub
sub
fstp
push
push
out
push
mov
(bad)
and
test
adc
jbe
ret
test
or
jno
inc
clc
jns
into
adc
imul
mov
ret
lds
movs
outs
cmp
test
push
push
out
in
leave
jecxz
fld
xlat
xchg
mov
lods
mov
pusha
sub
adc
pop
(bad)
call
aaa
push
push
mov
mov
lods
dec
retf
pop
in
rcl
cmp
test
rcl
cmps
in
add
movs
aad
dec
mov
cli
rcl
add
cwde
mov
mov
mov
push
push
jp
dec
rcr
sub
and
out
push
repz
mov
js
rcr
cld
xbegin
push
xchg
and
adc
loop
inc
and
lahf
mov
sub
cs
mov
imul
add
cmp
pop
std
dec
ror
and
es
sbb
cmp
jge
(bad)
cmp
or
and
and
lock
cdq
pop
mov
mov
inc
int
(bad)
push
not
in
cmp
jb
jl
push
xor
stc
fcomp
add
mov
push
adc
jmp
jns
aaa
arpl
dec
xchg
push
movs
add
dec
rcr
(bad)
test
xor
xchg
pop
push
cmp
int
jl
mov
xor
push
cmp
popf
mov
fwait
mov
sbb
mov
jno
mov
sbb
mov
stc
adc
jg
inc
push
mov
mov
mov
rol
fldcw
pop
cmp
push
jecxz
cmps
mov
pop
pop
xor
xchg
mov
(bad)
add
cmp
imul
mov
jb
inc
fld
mov
lods
xor
xchg
jl
int
xor
mov
inc
mov
movs
aam
dec
or
jnp
scas
fnstcw
cli
jmp
sbb
jno
xor
ins
mov
push
jge
cmp
xor
retf
xor
xchg
push
mov
xor
mov
ror
cdq
push
rcl
retf
cdq
enter
into
lods
add
xor
inc
popf
pop
sar
pop
mov
sbb
test
xor
cmp
or
and
jmp
xor
inc
popa
cmp
(bad)
cld
stc
mov
(bad)
mov
fist
add
fist
push
into
jmp
jo
pop
(bad)
mov
movs
fst
dec
jl
scas
mov
dec
dec
inc
pusha
mov
lea
in
clc
inc
xchg
xchg
aaa
out
cli
test
pop
cmp
test
xchg
jp
or
bound
lea
in
sahf
xor
xchg
out
fsqrt
cmp
mov
mov
inc
in
aad
pushf
rol
jne
test
(bad)
stc
or
inc
lods
xchg
cmc
movs
cld
pop
in
xchg
mov
popf
xchg
adc
mov
lods
sbb
out
cmps
scas
add
cvtpi2ps
add
fstp
sub
xchg
jmp
fld
sub
lds
or
adc
jnp
imul
fisub
js
lahf
pop
dec
fwait
and
(bad)
pusha
ror
push
inc
add
imul
push
sub
sbb
movs
mov
or
sbb
sbb
sub
mov
stos
outs
push
pop
xchg
jl
inc
push
iret
daa
sahf
repz
mov
and
dec
test
je
sbb
xor
inc
lock
pop
mov
int
xchg
aam
mov
(bad)
in
popa
std
cmps
dec
dec
aaa
or
repnz
cs
std
test
push
pusha
mov
fild
push
mov
or
inc
imul
lods
outs
mov
or
test
sti
loopne
leave
dec
pop
and
jle
adc
fnstenv
out
rcr
dec
jmp
ret
sub
fst
hlt
retf
fnstsw
aaa
das
inc
mov
ins
int3
add
push
ret
push
mov
xchg
out
push
in
pop
xor
daa
or
add
pop
push
cmp
or
inc
mov
cmp
int3
lock
mov
dec
add
or
sub
adc
int
add
mov
std
push
add
enter
or
faddp
je
nop
fist
inc
js
(bad)
mov
jle
hlt
loop
mov
mov
or
ror
cmp
rcl
push
mov
dec
add
xor
pop
add
xchg
mov
(bad)
retf
ja
cmp
iret
scas
and
sub
je
push
outs
call
and
cmps
xor
in
mov
test
and
fnstcw
lods
xchg
addr16
daa
jae
sub
imul
pop
inc
jae
mov
int
mov
shr
add
sbb
mov
mov
and
sti
mul
imul
push
int
push
in
mov
adc
dec
jno
cmp
xchg
pusha
cmps
call
fadd
adc
jb
xchg
sub
cli
mov
sub
and
push
ins
stos
xor
ret
jmp
xchg
xor
or
cld
fiadd
das
js
sub
and
sti
jnp
mov
movs
jp
sub
call
fsubr
adc
push
(bad)
sbb
scas
adc
adc
push
inc
repnz
jne
aad
cli
fs
in
inc
jmp
and
jo
push
sub
and
mov
xchg
push
jo
cmc
leave
inc
add
loopne
fisub
icebp
push
fdiv
or
jb
out
jno
ror
mov
nop
jo
test
loope
into
enter
fisub
std
fcmovu
movs
or
xlat
sbb
inc
jno
push
dec
sti
pop
add
adc
xchg
ins
adc
clc
retf
shr
dec
adc
xchg
jmp
inc
push
test
xchg
push
cdq
xor
jg
cmps
dec
push
xlat
icebp
dec
and
es
pop
inc
mov
mov
adc
dec
adc
adc
mov
adc
pop
sahf
int
pop
add
jne
aas
xor
repnz
and
loope
jae
(bad)
or
mov
and
xor
mov
div
adc
jl
mov
dec
cmc
sub
(bad)
movs
loope
sbb
jge
movs
push
or
cmp
jne
push
inc
jecxz
push
xchg
dec
jp
mov
cmp
clc
mov
out
sbb
outs
xchg
pop
push
(bad)
in
mov
jo
or
stos
jg
lock
or
push
dec
xchg
ja
xchg
fild
call
loop
call
into
mov
jg
retf
dec
adc
stos
test
ds
cmps
dec
ret
jecxz
mov
mov
cmp
test
cmp
stos
call
jp
fldenv
dec
les
or
ins
in
stos
mov
clc
jo
enter
inc
mov
xchg
add
xchg
ins
movs
inc
xor
aad
jmp
inc
jnp
hlt
xchg
inc
(bad)
data16
mov
fdivrp
clc
aad
fadd
dec
mov
inc
mov
jg
mov
ja
sbb
add
and
cmc
dec
rcr
mov
pop
test
shrd
retf
call
les
or
push
mov
mov
out
xchg
imul
scas
ins
xchg
loop
xchg
jl
nop
xchg
(bad)
(bad)
and
shl
ficom
adc
jne
pop
sub
mov
ins
out
sub
cmc
xchg
adc
sbb
and
frstor
pusha
nop
cmp
add
ss
adc
aam
popa
ss
mov
push
ja
and
sub
es
gs
retf
fild
bound
inc
arpl
sub
mov
mov
test
call
lods
sub
jp
inc
dec
je
push
adc
sbb
xor
sbb
and
mov
pushf
(bad)
out
xchg
popa
aas
push
pop
xchg
xchg
xor
lahf
jmp
popf
mov
or
cmp
jmp
mov
cmps
jb
and
cmp
add
mov
adc
stos
pop
inc
pop
or
push
push
dec
push
inc
cmc
pop
je
sub
push
jo
ficomp
into
xlat
lds
push
ja
xchg
jns
aaa
(bad)
orps
adc
pop
retf
add
jle
stc
nop
sbb
mov
push
cdq
and
push
and
sub
cmp
or
push
aad
dec
xchg
fnstsw
cmp
sub
pop
dec
call
mov
xor
adc
aam
ss
popf
jae
sbb
sub
adc
ins
stos
scas
cld
sub
movs
add
cmps
stc
inc
pop
adc
bound
or
jle
cmp
std
data16
jg
in
cmp
aas
nop
and
ror
retf
mov
fst
xor
loopne
sbb
adc
xlat
mov
fidiv
jl
jns
or
mov
add
cdq
mov
(bad)
cmp
mov
or
enter
div
out
jno
cdq
cld
jb
call
push
jo
xlat
jmp
rol
push
pop
jbe
adc
or
xchg
imul
enter
or
push
cli
dec
jbe
int
dec
mov
dec
(bad)
xor
cmps
(bad)
mov
and
pop
out
add
add
fcomp
daa
(bad)
aas
push
inc
ror
push
loope
jo
mov
mov
dec
dec
push
daa
in
xchg
dec
aad
inc
cmp
mov
push
data16
xor
shl
mov
xor
(bad)
mov
adc
fnstsw
dec
in
push
xchg
lods
repz
cmc
je
push
cdq
dec
leave
scas
cmc
xchg
mov
jo
xor
cmp
or
jecxz
mov
xchg
imul
adc
inc
(bad)
aam
push
sbb
fs
add
inc
inc
push
jb
add
dec
arpl
(bad)
imul
shr
jnp
adc
xor
mov
imul
sti
push
cdq
das
sub
gs
dec
xchg
and
pop
(bad)
pop
nop
out
xor
xchg
mov
(bad)
loope
div
in
sub
(bad)
mov
or
je
pushf
leave
js
adc
mov
inc
loopne
mov
cmc
movs
jg
sub
inc
out
sub
inc
mov
push
scas
mov
out
aam
fnstcw
push
mov
dec
test
clc
jmp
jle
nop
add
and
ja
cld
movs
clc
adc
(bad)
fadd
inc
inc
loope
xor
lods
jmp
(bad)
add
hlt
push
test
(bad)
pop
sti
mov
xor
pop
in
cmp
cmp
std
and
retf
pop
xor
in
pop
add
mov
or
fnsave
jmp
cmp
sub
jl
retf
bound
lods
xchg
push
shr
cmps
push
mov
mov
ror
and
push
jns
sbb
dec
xchg
movs
aaa
push
cmp
mov
pop
dec
inc
es
mov
nop
push
push
mov
mov
xor
mov
stos
popf
push
in
fdiv
mov
fst
pop
or
inc
push
mov
ins
pop
sbb
pop
push
pop
aas
pop
and
push
sub
dec
hlt
cmp
div
loop
fwait
mov
test
jmp
mov
push
sub
pop
jae
push
add
or
scas
and
(bad)
mov
push
inc
dec
hlt
icebp
adc
repnz
bound
cs
fbld
scas
mov
jno
sbb
sbb
pop
call
dec
inc
cld
dec
cmps
push
pop
mov
push
sbb
shl
popa
pushf
xor
in
adc
adc
movs
adc
loope
clc
aad
xchg
dec
retf
sub
pop
fcom
sbb
out
jmp
and
out
inc
and
lahf
xor
jp
mov
push
push
add
and
(bad)
ins
hlt
lock
arpl
xchg
in
jl
cs
push
mov
inc
aam
in
in
xor
add
ja
add
mov
fcom
mov
std
mov
and
pop
hlt
fincstp
sub
pop
xor
sub
or
jb
ins
test
mov
nop
dec
out
jae
mov
jle
jle
stc
inc
cmp
icebp
ficom
cmp
outs
cmp
cmps
je
dec
sub
dec
add
sbb
push
and
(bad)
or
xlat
int
int
ffreep
std
mov
fist
shl
cdq
je
cmc
cmp
or
adc
pop
out
xlat
xor
les
dec
jmp
xchg
adc
mov
dec
lods
adc
pop
rcr
jg
jp
out
jae
mov
outs
adc
xchg
ror
sub
gs
inc
(bad)
retf
sbb
scas
lock
sub
jg
xor
sbb
cld
mov
out
jmp
xlat
add
and
inc
jne
adc
icebp
movs
arpl
pop
add
lahf
mov
sub
in
adc
jno
fwait
test
xor
cwde
test
dec
ror
lea
push
into
mov
sub
(bad)
xchg
in
repz
push
cmp
mov
daa
xchg
rcr
js
test
ins
lahf
cmp
bound
push
mov
push
ins
sbb
shr
jns
jb
jg
cli
outs
ins
sar
mov
jl
add
dec
leave
dec
in
push
(bad)
fstp
xchg
jne
das
xchg
test
mov
xor
dec
aaa
stc
mov
outs
sbb
mov
jmp
mov
mov
mov
or
cmp
push
(bad)
sti
mov
push
push
push
pop
and
dec
cmp
jg
lahf
or
adc
imul
push
push
shr
pop
mov
ins
cwde
jns
(bad)
jo
mov
push
mov
div
sub
inc
mov
push
xchg
mov
jno
sbb
mov
inc
test
add
(bad)
xchg
mov
stc
stos
pop
pop
cmp
xor
inc
push
cmp
iret
mov
repz
in
pop
clc
push
push
cli
imul
push
out
sub
js
push
ins
mov
and
scas
pop
(bad)
clc
cmps
fs
call
adc
in
stc
fnstenv
arpl
cmp
repnz
rcr
leave
js
fbstp
jl
lock
dec
gs
movs
push
cmp
or
inc
jmp
test
pop
imul
sbb
sbb
jle
outs
xchg
cmp
push
js
das
test
mov
enter
adc
mov
adc
pusha
push
pop
and
mov
push
leave
in
xchg
scas
or
mov
int
push
mov
sub
xchg
pop
sub
sbb
scas
inc
mov
mov
ins
adc
sbb
sbb
xchg
jno
dec
sub
jns
iret
cmps
mov
mov
das
sub
ins
bound
fbld
(bad)
imul
ror
pop
mov
xchg
push
scas
fiadd
and
dec
jmp
test
je
aam
test
mov
and
xor
jae
aaa
sub
pop
stc
outs
int3
jno
pop
je
outs
and
pop
xor
pop
fnsave
inc
xlat
pop
imul
adc
inc
inc
stos
out
cld
jbe
jg
imul
mov
dec
sub
jmp
add
or
cmps
imul
adc
pop
loopne
in
sub
je
xchg
in
rcr
and
mov
std
and
sahf
xor
bound
std
inc
xor
pop
mov
sbb
push
fadd
or
shr
push
in
sub
repnz
xchg
cli
addr16
cmp
sbb
repnz
add
cmovg
imul
xlat
inc
dec
icebp
cmp
jno
call
sti
test
lahf
les
mov
mov
cli
push
inc
outs
sti
cmp
test
(bad)
xor
pop
mov
ret
loope
fild
cmp
add
arpl
repz
fidiv
pusha
mov
aas
mov
dec
and
pop
stos
stos
popf
inc
mov
cli
fs
and
pop
or
push
pop
leave
inc
in
lock
pop
sbb
repz
xchg
leave
cmp
std
mov
cmp
add
loopne
mov
adc
lock
aaa
inc
add
shr
or
or
or
adc
dec
xlat
mov
inc
push
pop
or
inc
mov
(bad)
or
test
mov
fwait
add
cmp
mov
or
les
jmp
jo
push
cmp
push
popa
and
xchg
mov
and
push
adc
in
jl
mov
and
cdq
lea
lahf
ja
push
xchg
jg
inc
mov
ret
mov
ret
es
enter
(bad)
loopne
pop
js
mov
push
loopne
mov
stos
push
xchg
cmp
cli
cmps
dec
jg
inc
mov
sub
pop
pop
not
jle
js
and
sbb
ds
int3
sahf
out
mov
out
or
outs
inc
loopne
rcr
hlt
jae
pushf
icebp
ins
pop
loope
adc
sbb
sub
iret
cmp
clc
xor
jnp
mov
les
stos
sbb
xchg
retf
and
mov
lahf
fcomp
xor
aad
xlat
mov
loope
retf
inc
int3
pop
loope
jb
sub
add
imul
jbe
jle
push
dec
fs
sub
loope
int3
std
sub
ror
(bad)
(bad)
cmp
lea
stc
xor
loopne
inc
test
std
sti
xchg
fisub
inc
xchg
cmp
push
sub
adc
aam
imul
xchg
(bad)
rcr
ret
pop
sbb
std
mov
mov
xor
push
xchg
xchg
cmc
aam
jmp
dec
pop
sub
cmp
jnp
cmp
movs
pushf
jno
push
jmp
das
or
add
mov
loopne
push
pop
push
pusha
lock
fwait
popf
add
inc
add
sbb
sub
mov
cdq
leave
pop
data16
sbb
pop
dec
jbe
inc
test
movs
inc
cmp
mov
add
jmp
ret
sub
(bad)
push
push
cdq
vprotd
xchg
mov
(bad)
dec
sar
(bad)
out
push
ins
sahf
mov
xchg
push
adc
cmp
pop
dec
clc
push
ret
imul
cmps
add
repz
and
sbb
fiadd
imul
sbb
daa
xchg
mov
xchg
and
lock
int3
dec
gs
ins
div
ret
fimul
pop
(bad)
call
nop
test
sbb
mov
retf
movs
cmp
mov
dec
iret
mov
jb
outs
jmp
mov
not
fwait
push
push
inc
mov
test
adc
jg
shl
cmp
lock
push
pop
mov
inc
pop
ror
inc
or
mov
mov
(bad)
repnz
leave
and
sub
push
aam
cmp
and
sbb
test
xchg
mov
mov
mov
lods
test
fyl2xp1
xor
repz
dec
sub
push
out
mov
dec
rcl
pop
mov
jmp
mov
jmp
xchg
mov
bound
sub
cld
dec
jmp
dec
mov
sbb
not
loop
add
xlat
push
mov
aam
pusha
stos
add
cmp
fild
outs
or
and
stc
dec
inc
push
daa
xlat
(bad)
in
test
jle
ja
repz
jmp
mov
(bad)
ins
in
xchg
js
push
pop
retf
cmps
ins
jnp
test
sbb
push
sub
call
adc
sar
xor
jb
les
mov
repz
fdivr
pop
or
mov
fld
mov
scas
add
dec
shl
sahf
mov
jb
sbb
ror
mov
add
push
cld
sbb
pop
les
mov
xor
scas
test
dec
inc
das
jno
movs
sub
and
cs
leave
mov
(bad)
mov
shr
cli
xor
dec
add
push
pop
mov
sti
out
sar
add
adc
and
xchg
arpl
cmp
and
leave
into
jge
dec
ss
jmp
mov
in
mov
clc
sysenter
xchg
cli
adc
mov
xchg
pop
fsub
sub
pop
pop
mov
loop
test
cmp
dec
mov
adc
dec
pusha
ret
pusha
xor
aas
sub
js
dec
xchg
pushf
mov
js
pop
add
jmp
add
inc
cmp
inc
and
push
aaa
cmps
iret
mov
inc
adc
adc
dec
sub
cmp
push
add
test
mov
stos
ja
sahf
pop
aam
adc
dec
ins
aaa
pop
push
shl
cwde
cli
std
jne
dec
cmp
jl
mov
popa
aad
inc
rcr
pop
push
xchg
repz
jmp
std
jmpw
loopne
xor
daa
aad
or
into
dec
mov
jp
push
add
mov
stos
sbb
(bad)
outs
cmp
rol
movs
std
in
es
mov
jb
adc
push
push
and
or
mov
xor
cmp
jmp
gs
mov
outs
cmp
adc
push
popa
and
mov
call
mov
or
xor
cmp
in
mov
and
js
xor
test
cdq
repnz
sbb
dec
shl
sub
daa
popf
sbb
loop
loop
adc
cld
mov
mov
enter
pop
or
sti
(bad)
xor
sahf
lock
add
push
push
cdq
call
push
imul
aad
int3
xor
je
ret
ret
int
stos
pop
scas
push
pop
or
jmp
cmp
repnz
jg
push
sar
add
mov
aas
add
and
xor
ret
adc
hlt
adc
and
cmp
and
loopne
push
add
lods
push
fnstenv
ins
mov
ins
and
int
pop
mov
sahf
jle
inc
pushf
mov
(bad)
jno
jo
mov
out
aam
std
pop
(bad)
arpl
mov
mov
jae
mov
(bad)
mov
movs
rcr
fnstcw
xor
pop
sub
in
jg
sbb
repz
sub
hlt
out
xor
scas
cmp
(bad)
(bad)
mov
push
jle
mov
mov
and
xor
dec
cmps
xchg
mov
sbb
adc
and
cmp
adc
loopne
or
and
inc
std
test
aaa
cmps
je
loope
sub
and
lock
imul
lahf
inc
imul
movs
xlat
test
xor
mov
dec
and
inc
sti
adc
pusha
inc
shl
cdq
daa
jle
mov
cmc
push
push
xor
inc
sbb
cli
(bad)
(bad)
rcl
int3
mov
js
mov
and
bound
aas
shr
mov
or
fwait
test
pop
xor
inc
aas
mov
inc
mov
dec
cli
or
jo
out
add
scas
call
push
cli
test
std
adc
(bad)
or
gs
mov
bound
xchg
jb
sbb
frstor
and
pushf
pop
xor
call
fsub
stos
sbb
aaa
or
dec
inc
mov
or
sbb
pop
clc
pop
test
sbb
ins
push
mov
inc
in
pop
mov
jg
add
xor
leave
adc
(bad)
sti
mov
ror
je
out
test
(bad)
lods
mov
fldenv
outs
dec
std
mov
jp
(bad)
fiadd
jno
xchg
mul
mov
pshufw
adc
adc
cmps
jmp
jbe
push
ret
mov
fiadd
in
into
pop
fwait
cli
mov
ret
jo
cmp
mov
test
or
pop
mov
xor
adc
mov
hlt
jbe
das
push
cmp
fistp
(bad)
das
push
mov
out
dec
dec
mov
and
std
sahf
int
int3
jecxz
push
or
add
fisub
rcl
jae
adc
fcomip
adc
xor
and
stc
lea
lea
and
icebp
mov
sub
xor
push
sahf
mov
sub
fadd
rcr
sbb
inc
jp
daa
fstp
in
imul
sbb
xchg
out
test
inc
pop
and
out
enter
loop
dec
mov
mov
dec
inc
std
dec
arpl
push
xchg
cmps
scas
xor
stos
inc
add
test
dec
lods
fdivr
iret
inc
mov
adc
and
fwait
dec
cs
repnz
mov
cld
and
pop
fisttp
cdq
shl
(bad)
arpl
mov
inc
add
jge
mov
scas
sar
xchg
push
les
out
cld
dec
mov
xchg
aad
jmp
aad
push
xchg
mov
test
inc
cs
add
adc
or
lea
inc
xor
mov
adc
popf
jo
ret
repnz
repz
clc
cdq
mov
stos
jl
aas
shr
movs
sbb
es
pop
fmul
mov
push
inc
pop
mov
cmc
(bad)
cmp
sbb
movs
pop
and
hlt
xchg
retf
(bad)
popa
lods
jg
jp
sahf
cmps
mov
fucom
test
(bad)
(bad)
cwde
sbb
mov
adc
cwde
cmps
lahf
dec
lahf
int
xchg
in
mov
adc
adc
(bad)
jo
and
hlt
push
addr16
stos
dec
adc
(bad)
adc
aad
adc
pop
test
mov
pop
in
fisttp
xor
pop
push
push
add
in
dec
mov
not
setp
xchg
inc
pop
loope
cmp
ror
hlt
in
adc
push
xor
xor
push
mov
adc
xchg
mov
jecxz
scas
into
xchg
imul
mov
push
mov
in
jmp
pop
std
sti
sbb
push
rol
inc
sbb
jmp
daa
movs
add
(bad)
int
push
aam
dec
test
sbb
inc
add
push
cmp
or
adc
lahf
stos
dec
pop
cmp
hlt
ds
mov
xchg
lods
sbb
sub
jbe
pop
iret
mov
ds
loop
shr
popa
mov
push
mov
out
lods
inc
sub
imul
in
add
xor
inc
retf
loopne
lds
cld
sbb
lock
call
jnp
inc
pushf
mov
les
bound
shl
sbb
in
or
jnp
adc
leave
fcomip
xor
and
mov
push
fcomip
(bad)
xchg
cmp
mov
(bad)
mov
cmp
fmulp
xor
xor
imul
rcr
mov
aaa
push
out
dec
cwde
adc
xchg
inc
rol
mov
and
loop
in
cmc
xchg
sbb
mov
inc
push
ror
jl
sub
in
stos
enter
out
lock
cmps
pop
cmp
jmp
out
movs
inc
cmp
aad
arpl
sub
das
movs
sbb
push
clc
out
das
iret
in
mov
adc
mov
sbb
(bad)
lods
rcr
ret
jae
addr16
repnz
sbb
into
js
cmovo
jl
rcr
retf
lfs
enter
cmp
push
(bad)
adc
bound
nop
inc
mov
test
and
push
sbb
push
pop
mov
lds
call
xor
(bad)
jecxz
sub
fldcw
pushfw
shl
loopne
push
cmps
test
mov
mov
inc
jo
push
or
(bad)
mov
aaa
popf
stc
xchg
pusha
test
pusha
mov
and
mov
cdq
fnstenv
aas
xor
push
repnz
outs
jne
out
push
cld
cmc
cmp
sahf
sub
xchg
cwde
push
cmp
pushf
jl
push
mov
dec
xor
cwde
mov
inc
ffree
bnd
push
sub
or
jle
pop
shl
mov
push
inc
mov
xchg
movs
call
mov
(bad)
in
mov
adc
cmp
out
add
fnstcw
aas
jmp
mov
or
mov
mov
or
jmp
dec
cdq
jl
xchg
ins
pop
or
jnp
cmp
stos
pop
test
sub
jns
lahf
pushf
inc
mov
sar
scas
pop
mov
xchg
adc
inc
fdivrp
or
push
sar
xchg
test
jg
or
jnp
js
dec
adc
in
out
jmp
or
sahf
cli
out
out
sbb
dec
sbb
push
stos
mov
shr
gs
xor
xchg
pop
lods
and
test
outs
in
cs
xor
push
sub
xchg
dec
in
lods
jmp
pop
retf
repnz
or
into
int
pop
hlt
push
jmp
cmp
gs
test
dec
gs
loopne
(bad)
xor
in
inc
scas
push
int3
sbb
(bad)
in
and
pop
cmp
sar
sti
push
cmp
(bad)
scas
leave
inc
or
or
lahf
mov
ds
(bad)
loopne
(bad)
iret
add
jnp
and
mov
fbld
mov
push
dec
iret
std
pop
mov
jle
mov
cld
(bad)
ins
es
cwde
pusha
or
mov
enter
xor
cmps
dec
cmp
xchg
or
jge
std
test
leave
mov
into
cdq
pop
aaa
js
cmp
sub
loop
jmp
and
adc
outs
mov
mov
addr16
retf
div
add
xor
gs
rcr
push
lds
lahf
call
cmc
inc
ja
sub
icebp
inc
nop
pop
cwde
enter
rcr
pop
mov
(bad)
int
pop
push
dec
inc
fld
cwde
sub
push
bound
mov
pop
fst
ins
bound
stos
into
jno
push
dec
inc
jmp
sub
in
ds
(bad)
lods
cmp
int
adc
jbe
(bad)
fmulp
rol
dec
lahf
fldcw
imul
test
add
mov
mov
sbb
test
rcl
jns
sub
popf
mov
aam
cmp
xor
jg
add
push
loopne
sti
sub
(bad)
jbe
xchg
mov
jns
adc
cdq
pop
push
call
add
or
dec
add
xchg
addr16
ror
add
push
xor
xchg
pushf
dec
sahf
xor
movs
adc
add
mov
jmp
rcl
daa
add
xor
dec
sub
jbe
movs
pop
xchg
in
jns
in
in
imul
jnp
into
dec
jle
aaa
ins
mov
inc
(bad)
test
lds
sub
cli
aas
push
fiadd
sub
sbb
test
aad
push
add
mov
push
pop
fs
sbb
aaa
mov
xor
push
inc
scas
cmp
fist
inc
daa
ins
aas
mov
inc
mov
pop
daa
scas
push
mov
adc
mov
mov
jnp
add
clc
cmc
test
out
sbb
adc
dec
pop
pop
fwait
dec
xor
mov
mov
pushf
cmp
jle
sub
jo
xlat
jne
add
mov
pushf
push
or
mov
test
xchg
or
xchg
push
adc
ret
jle
adc
cmps
xchg
bound
aam
stos
adc
out
mov
mov
sbb
jo
fcomp
lahf
stc
aad
sbb
mov
dec
in
outs
pop
push
std
push
jp
es
lahf
enter
pop
inc
sub
and
iret
ins
pop
jno
pusha
dec
mov
(bad)
adc
mov
pop
mov
lds
pop
pop
adc
scas
pop
scas
inc
push
sub
imul
out
dec
push
dec
sar
bound
xchg
lods
loopne
add
push
pop
ja
xlat
push
mov
mov
mov
push
cdq
push
pusha
lock
shl
dec
jns
shl
nop
gs
loop
mov
mov
hlt
cmp
sbb
add
cdq
mov
aam
loopne
inc
jo
mov
add
sub
xchg
adc
fs
mov
or
enterw
test
and
adc
mov
adc
shl
jle
jo
mov
mov
addr16
stos
sbb
rcr
loope
jmp
mov
lods
jnp
and
mov
int
ins
add
call
ret
mov
cli
sti
jge
mov
mov
pop
out
fsubr
(bad)
pop
sbb
pushw
sub
mov
pushf
sub
add
loopne
fstp
ds
lods
fmul
imul
imul
or
push
inc
lods
xor
pop
push
dec
adc
std
test
arpl
jae
mov
adc
mov
ja
adc
inc
mov
fidivr
pop
cmps
arpl
or
cld
jne
fistp
adc
jnp
adc
cmp
cmp
jmp
iret
jmp
mov
sub
sub
rcr
mov
cwde
xor
or
lods
or
pop
mov
cmp
fidiv
inc
out
movs
mov
cli
ret
pop
retf
aam
pusha
and
xor
and
stc
outs
xchg
arpl
and
leave
dec
inc
pop
xchg
or
movs
loopne
scas
and
in
sbb
mov
xor
xchg
daa
lock
(bad)
leave
add
loope
or
inc
pop
cwde
pop
imul
and
pop
mov
cmp
out
data16
sub
dec
xchg
fimul
sbb
dec
aaa
pop
add
int3
cmp
(bad)
cmp
adc
mov
ss
aaa
aam
stc
cmc
pop
icebp
sub
sar
add
aaa
mov
cmps
sti
mov
add
pushf
sub
sbb
(bad)
out
inc
iret
push
es
or
pop
sbb
jmp
push
retf
mov
inc
mov
sub
push
xchg
pop
mov
mov
(bad)
mov
mov
clc
retf
gs
xor
rcl
retf
push
not
dec
jle
or
bound
into
lds
es
icebp
or
repz
inc
outs
add
xchg
xlat
jmp
fs
(bad)
call
sar
shl
fiadd
sbb
gs
fdivrp
push
pop
push
pop
pop
loope
sbb
inc
cmp
and
and
fisttp
mov
or
lahf
cs
xchg
lods
rol
dec
div
cdq
cmp
fistp
imul
stos
sub
dec
and
cdq
or
fild
out
(bad)
(bad)
ss
mov
mov
sub
aas
icebp
sahf
push
mov
dec
push
add
sbb
arpl
std
fwait
add
movs
and
pop
mov
sbb
push
fwait
adc
cmp
xchg
fcom
jae
out
(bad)
into
or
mov
mov
jae
push
ret
test
retf
pop
cld
mov
lds
std
scas
inc
lods
iret
xor
add
dec
pop
pop
pusha
and
sub
or
stos
daa
mov
sahf
dec
inc
sub
push
jmp
out
and
rcr
pop
fwait
dec
mov
add
or
les
xchg
pusha
shl
inc
jnp
fwait
mov
mov
int3
mov
je
mov
fdiv
mov
mov
dec
lea
push
mov
pop
add
xchg
mov
mov
std
repnz
not
lds
cmp
shr
mov
sub
in
adc
xor
push
jl
call
xor
dec
dec
addr16
inc
out
in
fadd
cmp
xor
mov
in
pop
mov
dec
xor
test
rol
adc
xchg
dec
dec
inc
nop
ja
adc
nop
out
mov
push
jne
ins
push
cvtps2pd
mov
out
or
pusha
mov
push
in
(bad)
ss
mov
inc
aad
pop
addr16
repz
cmp
ds
aad
add
je
jbe
or
les
lds
push
push
leave
adc
hlt
push
sti
mov
pop
lea
fild
pusha
movs
jmp
retf
xchg
stos
cmp
adc
adc
dec
loop
movs
mov
mov
int3
loopne
mov
or
les
(bad)
mov
xor
mov
jmp
and
sub
fcomp
aaa
jo
and
test
push
outs
xchg
mov
push
sbb
dec
xor
aad
(bad)
mov
hlt
add
repnz
xor
mov
or
shl
mov
inc
jno
aas
mov
mov
addr16
dec
lods
in
mov
inc
shl
mov
adc
cmps
or
or
not
pop
inc
shr
adc
retf
jns
adc
pop
adc
ds
lods
jecxz
movs
mov
sub
push
mov
je
inc
(bad)
sub
in
and
(bad)
cmps
xchg
lahf
outs
std
pop
sar
lds
ins
mov
push
jns
sahf
outs
icebp
fsubr
dec
jb
cmp
cdq
shr
mov
mov
pop
sbb
lods
xor
xchg
bnd
push
mov
jo
es
aas
cld
and
pop
test
int
mov
jne
iret
call
cld
xor
pop
sub
add
push
add
jg
aaa
pushf
mov
jns
jae
(bad)
mov
in
jnp
jp
dec
push
adc
pop
cwde
mov
aas
ds
lock
arpl
xchg
xchg
shr
jge
outs
scas
stos
ret
jne
push
pop
fldenv
ds
cwde
xchg
jb
or
jge
loope
aad
stos
push
ss
jae
mov
xchg
xor
mov
inc
pop
pop
fdivr
aas
jbe
test
jle
shl
inc
pop
loopne
out
and
inc
pop
xor
sbb
mov
mov
pop
dec
mov
add
clc
(bad)
or
pushf
in
xchg
push
mov
sub
inc
test
push
xor
pusha
add
fwait
add
nop
mov
push
outs
push
mov
mov
push
dec
adc
nop
xchg
out
daa
movs
int
push
jns
imul
sub
call
mov
sbb
fnstsw
xchg
call
and
or
vcomiss
and
push
mov
test
das
xor
icebp
ror
mov
arpl
movs
mov
out
lahf
mov
pop
test
mov
pop
aad
xchg
push
mov
test
repz
sub
fcmovb
cs
jae
stc
or
and
ins
rol
pusha
(bad)
cmps
adc
push
daa
cmc
in
mov
jp
in
imul
out
je
lahf
call
mov
xchg
stos
lock
push
and
mov
jb
mov
adc
mov
jmp
icebp
(bad)
mov
add
xor
add
aad
jne
jne
push
pop
addr16
or
lods
add
pop
mov
ja
jns
sub
cwde
inc
and
(bad)
xchg
pop
(bad)
ror
(bad)
xchg
leave
xor
call
stos
adc
cmps
enter
je
rcr
pop
stc
dec
pop
mov
loop
jp
and
movs
inc
mov
sti
add
add
push
xor
jnp
mov
inc
aas
push
out
sub
sub
sbb
mov
addr16
push
and
jne
js
scas
inc
inc
fwait
aaa
xor
mov
pusha
push
xchg
xor
cmps
push
sub
popa
rcl
pop
lock
loop
movs
mov
bound
loop
cmps
mov
sti
fucomi
shl
not
ins
(bad)
test
mov
retf
jg
dec
loope
fstp
jg
movs
clc
mov
mov
out
sub
loope
sbb
fadd
int
shl
dec
mov
adc
xchg
(bad)
jnp
and
mov
dec
shl
call
cmp
mov
fisttp
add
jg
jg
dec
out
xor
(bad)
inc
fldz
jnp
aaa
sbb
adc
mov
jb
fwait
or
add
and
sbb
hlt
popa
lea
fdivr
cmp
sti
xor
mov
aad
jecxz
or
sahf
test
sub
or
xchg
das
xchg
cdq
test
cmp
out
jmp
sbb
cdq
cmp
movs
daa
retf
lahf
or
test
ins
mov
daa
sub
push
xor
lods
std
test
sub
test
mov
aas
cmp
repnz
ds
daa
(bad)
(bad)
sbb
nop
test
mov
push
pusha
pop
ins
test
adc
aas
dec
arpl
jg
scas
xor
mov
pop
out
(bad)
imul
repnz
mov
push
test
xchg
pushf
(bad)
retf
adc
sub
add
adc
stos
popf
(bad)
or
inc
cmp
fadd
int3
push
sub
mov
mov
enter
imul
mov
jle
addr16
mov
fdiv
loopne
(bad)
jle
jae
adc
nop
xchg
fwait
mov
test
adc
in
aam
test
ins
or
rcr
retf
mov
mov
mov
aam
sub
jmp
bound
xor
cmp
push
movs
lahf
shl
(bad)
mov
daa
mov
ja
fdivr
jb
lock
dec
jmp
sbb
sbb
or
mov
imul
dec
jno
dec
in
outs
xchg
dec
in
or
mov
push
push
repz
not
jbe
jns
jg
stos
mov
pop
inc
jecxz
push
hlt
gs
and
loop
int
mov
pop
xchg
cwde
inc
sbb
aam
repz
xor
jecxz
add
aas
jecxz
lods
lahf
inc
xchg
dec
cmp
shl
or
shr
cwde
mov
pop
or
dec
(bad)
call
mov
inc
lahf
xchg
shrd
mov
push
dec
(bad)
jnp
call
mov
loop
fdiv
enter
ja
das
mov
push
std
test
jge
ror
mov
push
inc
add
push
jecxz
push
scas
(bad)
movs
dec
clc
fdivr
(bad)
leave
jns
xor
xor
add
popa
leave
pop
das
les
mov
jns
sub
mov
es
jle
(bad)
fwait
inc
into
out
(bad)
push
add
xchg
dec
push
mov
xchg
mov
push
and
mov
sar
mov
cwde
scas
xchg
jb
setae
fild
fild
mov
xor
enter
ret
jnp
sbb
mov
inc
dec
rcl
and
push
xor
and
and
inc
loop
and
jg
jne
or
jb
loope
mov
xchg
sub
repnz
jnp
outs
mul
push
les
dec
bound
(bad)
xor
cmp
dec
jmp
stc
ja
sub
inc
out
movs
xchg
and
cmp
pop
xor
cmps
adc
mov
mov
jl
cld
rol
mov
enter
jno
sbb
jle
sub
out
dec
test
clc
inc
in
repz
jb
pop
mov
mov
adc
sbb
sub
ret
push
out
in
cmp
leave
adc
push
test
lds
xor
jmp
push
out
fprem
mov
loopne
add
pop
mov
pop
daa
jl
cwde
mov
retf
jb
sbb
push
lods
cmc
cmps
mov
lods
jmp
mov
fcmovne
mov
packsswb
int
sbb
sbb
mov
rol
xchg
das
(bad)
mov
sahf
in
out
cwde
inc
and
xchg
and
sbb
int3
loope
shl
das
scas
jg
retf
hlt
add
icebp
fcomp
xchg
(bad)
pop
pop
push
int
ins
push
and
das
in
cmp
push
add
arpl
xchg
add
pop
fwait
pop
push
sbb
dec
xchg
mov
sub
sbb
and
pop
xlat
inc
and
mov
push
movs
or
sbb
sbb
or
aam
dec
add
mov
dec
cmp
xor
pop
out
sub
pusha
in
xor
test
test
int
mov
loop
les
and
cmp
and
pop
dec
test
cmc
fisubr
lock
mov
mov
call
sbb
jge
repnz
js
xor
std
jmp
mov
jno
jmp
js
pop
pop
or
sbb
scas
in
(bad)
push
sbb
fdiv
in
cmp
in
xchg
rol
or
sbb
mov
push
add
mov
jnp
xor
push
sbb
lods
in
mov
ret
push
out
sbb
bound
int3
cmp
call
fwait
ret
inc
sub
gs
sti
cli
push
test
jecxz
dec
mov
push
add
sub
xor
rcl
mov
fmul
out
test
popf
inc
adc
mov
mov
sti
sti
stos
pop
push
and
or
fmul
inc
(bad)
xor
add
les
pusha
mov
ret
sub
push
push
sbb
nop
outs
movsx
in
jmp
pop
mov
mov
nop
ss
dec
test
jge
stos
mov
(bad)
add
push
cmp
int3
std
inc
xchg
dec
jl
and
add
push
shr
in
pop
mov
out
in
jl
aad
sbb
cmp
retf
or
imul
ror
sbb
sbb
inc
das
call
push
retf
jp
xlat
cmps
sbb
inc
cmps
sti
xchg
repnz
pop
scas
aad
and
rcl
sub
adc
jns
sub
push
enter
imul
cmp
jmp
(bad)
leave
(bad)
aas
out
jae
jnp
or
(bad)
sbb
inc
xchg
jne
fstp
cmp
mov
dec
and
ret
or
mov
jmp
in
jmp
aam
leave
hlt
outs
test
ss
ror
push
outs
pop
jo
aas
xchg
ret
imul
sbb
rcr
pop
xchg
test
fcom
test
sbb
pop
add
loopne
mov
add
pop
pop
xchg
pop
mov
mov
inc
add
cmps
aaa
cmp
jle
pop
jmp
pop
and
add
xchg
test
ja
fdiv
mov
xchg
cmp
frstor
gs
mov
jmp
sbb
dec
mov
int
xor
jno
sbb
xchg
push
xor
mov
jecxz
out
jns
mov
bound
ret
mov
out
loop
jne
fbld
xchg
mov
fstp
inc
lods
push
aaa
and
push
mov
push
test
out
ins
xor
and
rcr
jle
sar
xchg
aad
test
or
ja
ret
ret
mov
mov
inc
data16
les
test
sub
shl
icebp
push
shl
jmp
jecxz
imul
xor
dec
mov
daa
daa
lods
xor
jecxz
pusha
clc
cld
scas
ins
push
loopne
cmc
mov
push
dec
push
cdq
adc
(bad)
movs
cs
push
cdq
cmp
inc
xor
lock
push
lods
stos
xchg
ins
and
das
push
scas
pop
xor
cld
imul
push
xor
add
aaa
imul
popf
add
xor
neg
jmp
pusha
in
inc
test
cmp
pop
sbb
ror
loope
test
scas
inc
xchg
test
dec
lea
dec
and
cmp
iret
and
retf
in
and
aad
adc
inc
sti
ds
sbb
dec
aad
or
stos
fnstsw
mov
cmp
xchg
arpl
popa
aad
rcr
sub
(bad)
iret
sbb
call
cmp
loopne
into
dec
pop
jge
lahf
cmp
adc
mov
and
jp
pop
and
(bad)
push
lds
cwde
or
rcl
addr16
cmp
scas
xchg
xchg
test
jnp
mov
jo
mov
lods
test
xchg
mov
(bad)
pop
xchg
adc
fidiv
mov
test
pop
call
mov
pushf
push
inc
jge
pop
icebp
jnp
fimul
test
dec
jae
stos
loop
rol
clc
jae
cli
and
mov
jb
inc
push
fcom
add
aaa
nop
rcl
lahf
out
sub
call
sub
cmp
add
dec
fxch
jp
out
ret
or
mov
jl
scas
dec
ja
es
mov
stos
xor
sbb
fld
sbb
jnp
mov
out
and
out
and
rcl
mov
sahf
mov
out
retf
cmp
pusha
sti
stos
xor
loopne
call
aaa
daa
jnp
ret
jno
fs
jo
lahf
push
test
cmps
fdiv
jne
cmc
mov
mov
fld
inc
xor
sbb
add
sub
pusha
or
adc
xchg
lods
add
or
cmp
fsubr
xchg
jge
bound
push
xlat
push
dec
push
adc
xchg
or
and
cmc
or
cmp
cmps
xchg
in
int
inc
in
stc
jmp
push
add
xchg
xor
shl
dec
dec
xchg
fimul
jns
pushf
imul
xchg
push
pop
and
neg
pop
aas
sub
xchg
fistp
add
fs
loope
adc
scas
imul
test
div
push
(bad)
dec
fmul
mov
add
pop
cmp
mov
adc
inc
pop
cmp
cwde
jb
xor
xchg
out
jne
arpl
retf
pop
mov
mov
and
call
cdq
pop
fisttp
test
fbstp
fwait
ror
in
sub
rol
cmp
lea
aam
arpl
sub
dec
sbb
push
jne
cld
cs
(bad)
mov
mov
jne
mov
or
sbb
loopne
pop
add
cdq
ins
stos
xor
ds
or
in
pop
pop
push
fwait
popa
outs
mov
push
das
mov
std
ins
lds
push
jmp
cmps
psllw
in
pop
leave
sub
fs
(bad)
rol
pusha
call
pushf
(bad)
dec
mul
sub
add
push
movs
pop
(bad)
(bad)
jnp
dec
retf
icebp
out
int
stc
js
push
cmp
or
sub
cmp
dec
repnz
outs
pop
jmp
nop
test
repz
mov
movs
sbb
xor
cld
mov
(bad)
jp
push
push
xchg
jns
inc
ret
jae
inc
call
sub
inc
inc
into
or
fwait
test
jmp
xchg
jae
jns
aad
(bad)
add
fsub
xchg
mov
movs
inc
fstp
enter
rcr
xor
jl
or
mov
cld
pop
mov
xchg
mov
xor
mov
adc
inc
sbb
jmp
push
aad
mov
in
sahf
push
inc
mov
add
mov
imul
adc
mov
cmp
push
sbb
inc
stos
or
lds
dec
push
inc
inc
shr
jb
shr
scas
adc
dec
arpl
(bad)
fs
loopne
gs
daa
pop
push
jmp
popa
adc
sub
cwde
sbb
sub
cmp
out
(bad)
inc
or
ret
jecxz
and
mov
sbb
jl
pop
sti
sbb
jl
xor
inc
push
rcl
(bad)
sbb
daa
jmp
mov
adc
jp
xchg
sub
call
cmp
adc
inc
iret
mov
ds
out
inc
int3
out
clc
movs
shl
out
and
mov
lods
dec
xchg
pusha
fbld
es
push
aad
jne
push
jge
fistp
pop
xor
cmp
push
leave
mov
jmp
test
jmp
and
stc
ret
retf
ror
shr
or
and
xor
jnp
mov
imul
fidivr
and
jnp
pop
xchg
lds
jge
leave
mov
mov
daa
lods
xor
xchg
(bad)
and
push
aam
shr
test
mov
les
push
scas
push
mov
add
jl
xor
and
or
mov
push
mov
jmp
ret
enter
fadd
into
lods
jmp
jg
shl
sbb
xchg
push
rcr
jns
cmps
mov
mov
and
leave
push
and
jb
stc
jae
aam
and
add
aaa
mov
sbb
pop
and
pop
ds
fmul
popa
xchg
and
jp
or
dec
push
push
test
or
ins
pushf
dec
mov
add
xor
jb
or
fsub
ficom
(bad)
sbb
jbe
adc
pop
ja
cmp
std
shl
xor
mov
sbb
lock
mov
inc
xor
push
mov
mov
dec
jb
pop
inc
adc
push
inc
out
inc
mov
sub
xor
mov
(bad)
cmp
xchg
int3
jne
retf
add
int3
jnp
mov
icebp
fscale
mov
add
dec
dec
or
(bad)
xor
js
mov
cmp
daa
xor
jns
fist
dec
fstp
sti
and
mov
dec
jp
mov
or
push
sbb
add
and
aam
push
daa
scas
adc
loope
stos
and
push
or
test
dec
pop
mov
ins
mov
pop
rcl
lahf
shl
aas
out
cmp
(bad)
iret
retf
clc
in
mov
les
lods
bswap
and
pop
jne
das
push
enter
adc
jmp
dec
or
mov
aad
cmp
jle
sysret
aaa
dec
mov
call
or
push
sub
xlat
inc
add
das
or
sub
adc
pop
pop
(bad)
pop
popa
in
rcl
inc
aad
idiv
out
xor
push
inc
cld
mov
inc
xchg
and
jo
ss
bound
cs
add
mov
sbb
jno
call
or
mov
sbb
mov
jb
sub
aas
lods
in
ins
cwde
hlt
fdiv
pop
mov
repnz
inc
cmps
pop
lahf
add
mov
xchg
inc
push
jmp
lds
jbe
out
and
xchg
inc
imul
repnz
in
dec
stos
xor
hlt
(bad)
call
test
xor
xchg
sar
call
push
pop
leave
mov
outs
and
jmp
arpl
(bad)
or
out
test
xchg
pop
loop
sysexit
xor
mov
push
cmp
sbb
jge
push
lea
jmp
sbb
xlat
outs
shl
scas
cmps
mov
mov
in
(bad)
mov
fs
pop
push
xchg
in
je
dec
xor
mov
loope
mov
out
scas
lahf
add
inc
mov
sahf
xor
xchg
lods
sti
shl
call
(bad)
push
mov
xor
sysexit
shr
mov
sub
addr16
add
add
push
mov
repnz
push
sahf
or
(bad)
ja
gs
adc
in
iret
enter
sbb
lock
aad
out
xor
xchg
xchg
out
test
popf
mov
pop
mov
jmp
loop
push
scas
xchg
cmc
xchg
aam
fwait
push
aas
je
mov
fisttp
scas
outs
pop
cmps
adc
aas
and
popf
fs
sbb
int3
or
sub
fbld
retf
rcr
mov
or
ret
dec
mov
cmp
jg
jns
pushf
ss
jbe
retf
mov
stos
mov
adc
pop
mov
shr
adc
shl
imul
adc
jge
aam
pop
mov
sbb
fwait
div
jecxz
xor
mov
dec
out
popa
icebp
xor
mov
jmp
jno
fsub
inc
cmp
out
push
and
xchg
out
rol
(bad)
test
push
xchg
jbe
nop
iret
dec
lods
pop
call
fdivr
iret
xchg
cwde
cmp
imul
and
pop
jnp
xchg
bound
cmp
popa
xchg
ds
or
lock
popf
ret
ss
or
js
fcomip
push
out
fwait
jb
dec
sbb
xor
stc
ds
pop
in
or
je
push
mov
fiadd
inc
stos
push
outs
inc
jp
mov
inc
addr16
mov
outs
loop
hlt
test
adc
out
into
rcl
and
int
xchg
inc
xchg
jmp
mov
sub
in
cmc
rcr
mov
or
test
cmp
mov
repnz
fsub
jbe
(bad)
int
out
in
mov
jb
mov
sbb
in
adc
xor
neg
jg
std
mov
xchg
mov
shl
xchg
add
cmp
in
in
iret
retf
push
div
dec
sahf
pop
retf
sbb
(bad)
out
push
test
in
loop
jae
dec
out
out
test
outs
loop
lods
push
gs
popf
xor
adc
and
or
hlt
mov
cs
cdq
cmps
sar
inc
das
xor
repz
inc
push
mov
mov
and
xor
sbb
or
pop
lahf
xchg
cmp
or
sub
add
push
add
push
mov
sbb
cmc
movs
jae
addr16
sub
pop
mov
fisubr
and
sub
(bad)
cmps
mov
sub
jl
jmp
out
popf
fnsave
and
pusha
stos
jmp
in
stc
or
jo
into
ja
lea
aam
or
cli
leave
adc
push
test
mov
outs
or
sbb
lock
out
(bad)
not
dec
mov
push
dec
(bad)
and
lock
cmp
inc
ins
(bad)
sar
pusha
(bad)
out
sub
fs
jecxz
inc
fsub
in
outs
les
es
push
xor
pop
mov
loope
and
sub
stos
xor
call
pop
and
call
cmp
stos
sar
rol
es
push
dec
loopne
dec
sbb
cmps
push
test
pusha
or
push
dec
and
xor
jno
enter
pop
add
mov
pop
outs
outs
fbstp
lea
pop
xchg
retf
gs
mov
loope
sbb
lock
retf
jl
dec
adc
aad
mov
je
sub
fldenv
in
ficomp
mov
jge
sahf
pop
repnz
into
xchg
or
retf
xchg
jge
or
xchg
pop
inc
pop
and
in
jecxz
mov
clc
cmp
out
stos
(bad)
push
mov
jmp
mov
data16
push
test
mov
cwde
mov
jecxz
inc
(bad)
jmp
push
rcr
push
aam
or
jge
imul
out
cmc
aam
cmps
pop
push
mov
or
dec
aam
dec
minps
push
cmp
jae
add
xchg
push
push
imul
pop
shl
jmp
cli
mov
data16
int3
inc
cdq
cs
jmp
xchg
mov
je
lds
lea
pop
pop
jg
hlt
out
imul
hlt
cmp
rol
in
pop
lods
xchg
push
and
jb
xchg
aam
inc
mov
mov
inc
sub
call
cmp
jge
pop
in
ds
repz
out
xchg
ds
push
lds
retf
and
sbb
and
in
mov
daa
popa
push
jbe
std
test
enter
clc
push
or
dec
iret
out
add
fisub
repz
(bad)
imul
dec
pop
sbb
ins
xor
adc
jnp
imul
cmp
in
inc
adc
cmp
pusha
cmp
(bad)
jp
dec
ja
test
ds
fwait
xchg
mov
pop
push
test
sahf
outs
pop
xchg
mov
(bad)
pop
jbe
inc
jnp
xchg
(bad)
cmp
or
jecxz
pop
mov
xor
pop
push
mov
call
sti
or
in
pop
aas
sbb
bound
aas
lds
fcom
out
or
mov
jle
popf
lods
xchg
mov
dec
lahf
hlt
ja
cmp
jmp
cdq
xchg
scas
repnz
je
jo
sbb
shl
xchg
fst
mov
inc
sub
dec
(bad)
aad
and
add
inc
outs
stos
push
lods
xor
imul
push
xor
in
aad
iretw
stos
je
and
xchg
mov
into
jno
sub
adc
out
je
cs
loopne
push
mov
dec
add
cmp
bound
fcmovu
out
push
mov
cwde
(bad)
stos
mov
adc
mov
je
add
xchg
int
rcr
(bad)
adc
jmp
movs
cwde
repnz
jle
aas
fs
jmp
and
xchg
inc
sub
pusha
sbb
cmp
nop
(bad)
adc
mov
or
fisub
dec
imul
lahf
aad
inc
fs
mov
repnz
cmps
jge
dec
inc
mov
jg
xor
ja
sbb
xchg
ffreep
pop
scas
inc
inc
daa
fwait
sub
add
imul
clc
push
ja
push
cdq
xchg
aam
cmps
(bad)
data16
das
add
fldcw
iret
imul
xchg
cmp
sbb
xchg
out
gs
or
cmps
cli
imul
imul
pop
pusha
mov
imul
loop
(bad)
or
or
jmp
cld
in
xchg
mov
sub
scas
dec
xlat
dec
lea
pop
xchg
jns
add
mov
out
je
mov
jo
dec
shr
or
pop
inc
push
sti
push
mov
imul
imul
cmp
mov
mov
sahf
or
test
shl
dec
inc
call
mov
lds
shl
cmp
and
dec
faddp
mov
sbb
xchg
add
adc
mov
dec
jae
or
mov
stc
adc
or
pop
dec
icebp
call
mov
jmp
mul
scas
push
sub
jl
cmp
icebp
neg
sub
pushf
call
pop
jb
into
nop
fiadd
sbb
add
xor
(bad)
pop
push
add
sbb
push
jmp
xchg
cmp
fsub
dec
adc
repnz
aaa
daa
sub
(bad)
push
xlat
inc
dec
dec
mov
not
retf
mov
sti
hlt
dec
icebp
jns
dec
mov
mov
mov
push
out
nop
mov
addr16
in
mul
pop
stos
ja
xchg
mov
mov
test
inc
or
pop
sub
pop
xchg
scas
lock
arpl
popa
adc
jbe
dec
mov
and
inc
cld
fcomp
jp
mov
mov
lods
push
pop
ds
stos
mov
imul
stos
dec
and
gs
movs
cmps
scas
shr
add
call
or
or
sbb
jge
xchg
loope
adc
sbb
inc
aaa
jl
ret
sub
inc
mov
call
mov
mov
push
sub
sbb
lea
add
dec
ja
and
outs
shl
inc
ror
mov
add
mov
sub
inc
sbb
mov
ins
xchg
inc
mov
adc
or
sbb
in
jb
add
xor
aas
out
lock
jmp
jnp
(bad)
mov
fisttp
or
imul
mov
pop
mov
fsub
idiv
fs
in
cwde
test
ss
sub
fistp
and
dec
(bad)
inc
pop
out
and
jmp
fnstsw
not
cmp
mov
ss
and
sahf
pop
add
out
dec
push
ja
stc
sbb
jge
inc
adc
int
add
fcomp
hlt
mov
cld
daa
mov
sub
cmc
fild
cdq
movs
out
jbe
or
mov
pop
push
icebp
push
ret
sub
mov
inc
pop
ja
add
sbb
retf
dec
ss
mov
xor
(bad)
and
fcmovnu
dec
xlat
dec
imul
loopne
jb
mov
fist
sub
push
leave
pop
ja
push
(bad)
test
inc
mov
push
or
repz
cmps
cmp
sti
leave
fcmovu
mov
mov
add
and
icebp
(bad)
(bad)
push
test
add
mov
cmp
xchg
jns
pop
dec
jmp
aas
(bad)
pushf
cmp
push
enter
mov
cmp
ja
nop
mov
cmc
clc
cmc
jmp
mov
mov
mov
sti
and
adc
clc
mov
ror
in
push
cmp
lahf
adc
loope
inc
xor
movs
sahf
leave
and
push
fnsave
pushf
out
repz
pop
jp
mov
xlat
scas
pusha
inc
imul
inc
push
mov
(bad)
push
mov
enter
movs
cmps
inc
push
or
dec
leave
shl
sbb
daa
xchg
sub
adc
or
dec
xor
arpl
add
out
faddp
and
(bad)
fcmovne
ins
inc
add
out
or
mov
jmp
scas
cmp
pusha
outs
dec
or
cmc
push
sub
cmc
not
pop
pinsrw
shl
xchg
sub
sub
out
les
loope
lods
sbb
pop
int3
enter
sbb
dec
cs
xor
xchg
shufps
xchg
mov
push
(bad)
sbb
mov
mul
dec
pop
cmps
scas
pop
push
sbb
in
cmp
dec
lahf
(bad)
cmp
fchs
rol
push
ins
jae
pop
mov
sbb
cmp
call
sub
push
fstp
lock
outs
jno
and
sar
outs
sub
daa
jmp
pusha
add
pop
xor
xor
xchg
loopne
cld
sub
imul
push
push
aam
retf
mov
mov
scas
inc
in
push
mov
push
dec
call
ja
inc
jno
gs
jl
arpl
mov
int
jmp
test
adc
sub
push
fld
sbb
cmc
pop
jp
call
in
cmp
fcomi
dec
dec
dec
int3
into
lds
(bad)
(bad)
mov
pusha
or
add
cmp
ja
push
cmp
fadd
mov
xchg
lea
inc
cmp
push
add
in
aad
call
mov
outs
stos
cmps
outs
scas
and
addps
xchg
(bad)
dec
cmc
xor
pop
mov
sub
jno
cwde
out
sub
fbstp
addr16
bound
adc
jl
pop
shl
aaa
fwait
sbb
inc
inc
push
cmc
sub
sub
push
pop
hlt
int3
inc
cmp
mov
dec
loop
in
cmp
int
scas
cmp
fmul
(bad)
in
(bad)
rcr
and
neg
adc
pop
push
cld
jnp
stos
imul
add
adc
test
retf
adc
jnp
push
neg
(bad)
aad
jecxz
aaa
sbb
adc
(bad)
nop
lea
cs
adc
mov
cmp
ins
push
cs
jnp
mov
retf
test
sub
or
loopne
shl
retf
sub
add
sub
mov
outs
push
repz
ins
mov
xor
hlt
cld
daa
push
inc
aam
xchg
inc
retf
cmp
xchg
ret
inc
adc
adc
mov
call
pop
adc
fcom
adc
(bad)
call
fidiv
xor
cmp
mov
dec
(bad)
shl
les
mov
das
xchg
imul
push
imul
mov
movs
dec
ret
fst
sahf
retf
test
sub
fwait
push
loope
cmp
cmp
fmul
out
sar
das
xor
loope
cmp
xchg
outs
xchg
push
push
jns
lock
ins
jge
jle
dec
les
out
xor
scas
repz
stos
sub
xor
inc
lods
test
mov
add
xor
pop
add
ficomp
mov
cdq
jnp
fdiv
or
jmp
push
sub
push
ins
ins
(bad)
mov
rol
sar
stos
cld
pop
pop
jp
lahf
adc
cmp
(bad)
fs
adc
mov
aam
out
push
pop
pusha
inc
out
jns
lods
call
pop
cmp
icebp
dec
shl
jne
pop
dec
aad
push
push
add
outs
(bad)
stos
nop
inc
sar
int
ins
femms
fstp
sub
mov
dec
je
inc
bound
mov
test
mov
lods
dec
add
sub
jbe
mov
dec
push
(bad)
clc
(bad)
cwde
and
jp
xchg
int
retf
push
stos
ins
fwait
sar
lahf
ror
(bad)
dec
and
popf
inc
pop
fldenv
leave
dec
dec
adc
outs
not
sub
sub
pop
cdq
out
sar
test
sti
xchg
mov
adc
xchg
pop
retf
xchg
or
pop
push
pop
leave
mov
inc
out
dec
pop
cmp
pop
ins
pop
sbb
xlat
mov
retf
cmp
fmul
sub
int
lods
sahf
or
gs
cmp
mov
push
fcmovne
das
sahf
xchg
test
sti
sub
or
stc
lods
mov
inc
ja
jecxz
ja
rol
mov
mov
xor
cmps
cmp
out
dec
into
push
add
push
mov
cmp
push
xchg
pop
ins
js
add
pop
aam
xor
(bad)
push
and
xchg
add
jno
jo
sbb
adc
add
popa
mov
cmp
inc
add
fcomp
inc
shr
mov
adc
add
(bad)
fsubr
adc
stos
dec
push
cli
lods
mov
aas
add
aaa
movs
sub
dec
rol
addr16
sbb
cmp
daa
hlt
adc
sti
cmp
xor
fnstcw
sbb
jmp
push
lahf
inc
or
call
jl
inc
mov
adc
scas
sti
sar
jge
or
out
aaa
xchg
test
movs
hlt
sbb
gs
pushf
cmps
sbb
repz
(bad)
enter
(bad)
loopne
mov
xchg
aam
jb
and
adc
xchg
in
xlat
mov
inc
mov
pop
xchg
retf
sti
dec
neg
mov
imul
jp
call
pop
xor
sub
ins
xor
dec
sbb
repnz
ret
pushf
sub
bound
repnz
mov
inc
ins
bnd
jnp
idiv
sbb
fmul
pop
xchg
stos
stos
call
aad
adc
jne
stc
mov
cs
cmp
sub
sub
adc
pop
pop
adc
daa
(bad)
cwde
ds
push
lods
xor
(bad)
jae
lea
mov
scas
pop
int
ja
push
jmp
cli
mov
mov
jmp
jb
enter
mov
push
adc
mov
push
cld
mov
push
push
cmc
mov
lea
jbe
or
call
repnz
inc
jbe
out
and
sbb
or
or
outs
stos
mov
xchg
ret
aam
std
push
ficom
stc
(bad)
in
stos
xor
mov
push
dec
pop
rcl
into
xor
popf
adc
add
arpl
ret
ds
jnp
ins
sub
int3
daa
push
ja
rol
lods
(bad)
stos
ins
fdivr
pop
int3
or
rcr
shl
dec
sbb
dec
xor
push
bound
shl
lahf
push
jae
pop
retf
mov
xchg
sbb
sub
sbb
stos
jns
xor
adc
fistp
jo
sub
cmp
mov
ins
adc
movs
shr
push
test
scas
out
js
mov
inc
hlt
or
sub
out
shl
xchg
movs
movs
push
cdq
adc
je
fadd
push
jo
mov
sbb
xchg
mov
jl
out
out
cld
mov
inc
push
rol
cdq
inc
dec
pushf
lods
bound
mov
mov
(bad)
sub
movs
mov
mov
jle
out
pop
pop
nop
jne
pop
bound
scas
adc
push
stc
test
jnp
sar
sbb
jle
mov
sub
dec
(bad)
cmp
out
mov
retf
daa
js
push
sub
and
pop
pop
push
jge
jae
xor
daa
or
idiv
cmp
sub
ja
jg
mov
dec
in
push
sub
sub
int3
pop
inc
sbb
and
ss
add
loopne
not
aaa
sbb
jle
cld
xchg
and
adc
xchg
(bad)
into
jmp
(bad)
loop
xor
dec
adc
outs
mov
test
xchg
adc
cmp
add
sub
cmp
mov
and
jmp
js
iret
fs
ins
das
cmc
xor
add
ror
xlat
xchg
pop
sub
jp
fidivr
mov
movs
(bad)
mov
fld
push
adc
imul
jbe
dec
ds
adc
inc
cmp
call
das
sbb
jl
adc
jmp
inc
inc
stos
jle
cwde
inc
and
or
jne
pop
gs
push
retf
xchg
call
neg
and
aaa
cs
adc
ins
pop
ins
fwait
movs
iret
push
fs
aad
or
add
mov
neg
loopne
push
(bad)
cs
rcl
mov
jmp
xchg
dec
and
sub
adc
cld
or
not
add
imul
add
pop
xchg
jb
std
xchg
(bad)
lahf
cmp
iret
dec
jb
(bad)
adc
mov
adc
pmulhw
imul
xor
add
into
in
and
add
sub
sti
inc
push
ins
cmp
(bad)
cmp
add
stc
nop
mov
add
jmp
inc
dec
xchg
inc
cmc
sahf
mov
mov
cmps
scas
add
out
lock
std
cwde
jge
cmp
psrlw
ins
test
cwde
adc
mov
aad
ret
neg
(bad)
inc
dec
call
jbe
xchg
retf
inc
add
daa
rdpmc
int
ss
mov
ds
xor
cmp
xchg
push
xchg
mov
cmp
pop
or
gs
fs
lea
push
scas
shl
add
movs
aad
xchg
mov
retf
icebp
adc
push
movs
and
shl
xlat
arpl
fisub
(bad)
and
xor
not
pushf
ss
ins
or
or
sub
dec
add
loope
xchg
pop
pop
mov
movs
cmp
test
add
jno
clc
sub
pop
gs
in
or
loopne
movs
mov
repz
fdiv
sar
mov
cmp
ss
ret
pop
dec
push
out
push
in
arpl
cmps
stc
dec
in
cmp
mov
xchg
xchg
int
sbb
mov
xchg
sbb
das
inc
lds
lea
leave
lods
std
push
pop
jl
call
xchg
cmp
sbb
cld
push
loope
shr
aam
dec
sbb
cmp
jnp
gs
(bad)
aam
clc
mov
movs
shl
daa
push
loop
jnp
sub
fld
push
cmps
repz
mov
or
sahf
jmp
outs
adc
jmp
push
inc
xor
repz
xchg
mov
push
retf
cmps
popf
xor
push
rcl
cmc
aas
sbb
dec
fdiv
jo
cmp
dec
inc
pop
cs
int3
pop
inc
add
sbb
and
hlt
scas
es
movs
cmc
adc
cmc
mov
jp
scas
push
jg
repnz
mov
lds
nop
dec
push
jb
sti
push
inc
lea
xor
mov
je
mov
or
sbb
and
xor
jg
lods
or
(bad)
or
out
data16
xchg
jle
adc
cmc
inc
or
mov
(bad)
jl
mov
imul
pop
scas
jb
das
nop
dec
fiadd
pop
in
jno
rcl
ds
ficomp
push
sbb
xor
sahf
cmp
in
pop
rcr
xchg
ins
jo
pop
sub
out
cld
cmp
xchg
lock
inc
stos
fcmove
ja
hlt
xor
xor
fadd
xor
or
test
mov
cmp
enter
test
js
push
mov
aam
jle
and
fcomp
xchg
jp
cdq
sbb
xchg
sbb
sub
sub
pop
nop
xchg
adc
mov
mov
cmp
pop
add
retf
mov
pop
repnz
aas
xor
xor
add
dec
mov
popf
aam
cdq
loop
aam
dec
xchg
aam
into
icebp
ret
mov
and
jo
push
cmp
lods
aaa
push
lods
jbe
push
out
pop
fidiv
jle
cmps
ja
jecxz
inc
pushf
and
sahf
pop
icebp
cmp
test
ret
ds
rcr
pop
hlt
push
inc
push
xor
adc
adc
aam
jno
(bad)
adc
rcl
movs
sub
sub
aad
jno
jmp
push
and
int
ret
sub
dec
dec
cwde
(bad)
mov
and
fstp
adc
sub
push
jmp
adc
jp
in
mov
repz
xor
pushf
cmp
and
jae
and
cmc
xor
xchg
ret
pop
inc
adc
sub
data16
test
retf
mov
lds
mov
sbb
xchg
xchg
into
movs
adc
xor
cwde
xor
test
dec
mov
jo
mov
ja
cmps
pop
mov
cs
pop
pushf
adc
fdiv
sub
add
scas
xchg
outs
push
pop
inc
lea
sahf
push
jae
mov
jg
xchg
sub
sar
les
loope
shl
fist
jecxz
pop
mov
sub
dec
mov
test
cli
xor
sub
adc
mov
xchg
inc
or
test
movs
add
std
inc
add
mov
add
loopne
sub
sub
or
or
enter
dec
or
jb
cld
cs
xor
push
mov
add
fisttp
enter
mov
jo
xchg
out
fwait
cli
mov
je
mov
ds
mov
mov
mov
fwait
dec
mov
dec
lock
pop
pop
neg
mov
cld
or
mov
jp
je
addr16
call
out
pop
sub
or
int
xor
push
xor
cld
(bad)
pop
repz
(bad)
xchg
inc
push
retf
aas
pop
jge
sbb
add
addr16
dec
sub
ret
mov
das
scas
xchg
repz
mov
sub
jg
inc
es
push
push
xchg
les
add
pop
dec
ret
gs
aad
push
fs
mov
jnp
aas
mov
data16
imul
int3
mov
inc
mov
adc
(bad)
pop
push
adc
xchg
pop
pop
sub
or
stos
mov
icebp
push
ror
out
mov
hlt
stos
and
sub
cmp
cmp
jbe
sub
inc
xor
sar
or
push
retf
add
xor
mov
stc
ja
mov
pop
mov
inc
xchg
pop
gs
inc
pop
push
pusha
stos
(bad)
stos
pop
cmps
scas
and
cmps
mov
into
mov
(bad)
cli
push
out
lods
lea
push
cmp
test
mov
mov
jle
cmp
mov
or
and
inc
mov
scas
jge
mov
push
dec
mov
jb
movs
movs
out
xchg
stos
int3
xlat
cmp
cli
retf
int3
pushf
nop
daa
or
add
and
xlat
inc
xchg
fbstp
sbb
pusha
call
dec
dec
xchg
adc
sub
jl
mov
jb
dec
adc
sbb
or
xor
sahf
push
jnp
popa
in
test
xor
sub
jmp
or
ficom
into
push
xchg
cwde
outs
sbb
out
or
js
and
and
jmp
movs
aad
mov
push
mov
bound
push
push
ror
dec
mov
and
xor
sbb
pop
clc
loope
int3
es
mov
xchg
xor
(bad)
(bad)
jle
xchg
lds
fdiv
adc
xchg
xor
aas
adc
cmp
mov
fnstcw
(bad)
hlt
popf
daa
push
in
(bad)
add
popa
fwait
dec
mov
inc
in
cmp
daa
pop
in
push
sbb
test
pop
imul
mov
cmp
fsub
push
imul
mov
scas
inc
push
pop
xor
xchg
inc
sbb
jo
cmp
sti
stc
adc
loop
xor
test
inc
lods
jns
test
jae
fiadd
cmc
leave
xchg
ja
push
rol
cmp
mov
mov
lds
rcl
sbb
mov
sub
mov
pop
cmp
mov
pop
xor
idiv
imul
into
popf
daa
dec
scas
adc
loopne
mov
or
cwde
in
rcl
sub
std
loope
push
mov
mov
addr16
sbb
loopne
aam
sub
test
retf
xchg
add
pop
sbb
call
push
int
xor
out
xor
jnp
pusha
loop
mov
or
mov
mov
xor
mov
ficomp
fist
fwait
pop
(bad)
xchg
adc
(bad)
cmc
mov
and
xchg
pop
mov
test
mov
clc
(bad)
lock
out
cld
movs
test
jl
out
leave
int3
movs
cmp
push
mov
pop
jecxz
inc
dec
mov
sbb
jecxz
push
or
dec
jbe
hlt
pop
mov
mov
mov
lock
xor
cwde
(bad)
in
sbb
rcl
push
mov
pop
es
ins
fcom
aam
and
loopne
adc
neg
pop
pop
lods
cmp
and
fcmovb
rcl
int3
jle
mov
mov
mov
cwde
mov
fmul
mov
sbb
int
sbb
test
scas
mov
cmp
cmc
pop
mov
sub
xchg
lahf
sti
jmp
aas
jl
std
cdq
mov
sbb
jnp
jg
ss
xor
loop
pop
fldenv
call
dec
in
pop
mov
ret
(bad)
xor
add
add
cmp
adc
jno
jb
pop
in
adc
push
mov
sub
aam
and
mov
add
or
jbe
rcl
pop
pop
pop
fdiv
aam
push
xchg
dec
add
in
mov
cdq
or
pusha
xlat
repz
or
jmp
inc
xor
push
mov
int
xor
adc
cmp
mov
movs
pop
dec
inc
mov
cli
mov
push
xor
hlt
sti
es
xchg
mov
push
and
inc
cmp
scas
ins
pop
inc
push
mov
push
call
ror
push
push
inc
int
(bad)
mov
dec
jmp
adc
nop
or
shr
int
mov
jno
sbb
add
clc
outs
aam
cmps
jle
into
in
lds
dec
jb
sub
dec
imul
sub
into
dec
repz
adc
call
rcl
loop
cmp
mov
call
xor
dec
scas
mov
adc
cmp
and
call
addr16
repz
popa
inc
rcl
mov
jmp
sub
retf
das
scas
inc
lods
inc
cmp
pop
cmp
xor
pop
stos
and
add
pop
lahf
cmp
pusha
aad
retf
enter
fidiv
call
adc
jl
clc
add
sbb
test
or
in
lods
mov
sbb
add
popf
jnp
sub
stos
adc
mov
bound
dec
mov
cmp
push
(bad)
cmp
xchg
pop
push
lds
dec
mov
scas
and
jno
pop
sub
rcr
dec
dec
cs
loope
xor
cmps
icebp
xor
int3
popa
js
cmp
sbb
hlt
jle
jg
dec
sub
movs
xchg
mov
ins
call
mov
or
out
dec
mov
retf
mov
iret
or
std
jns
xchg
xor
adc
jg
in
mov
iret
rol
and
clc
ja
adc
pop
aam
cmp
xor
xor
stos
test
rol
jmp
dec
mov
je
push
sub
daa
inc
sub
retf
cmp
xchg
inc
iret
sub
cli
inc
sbb
inc
ins
xchg
xchg
dec
and
(bad)
outs
fstp
(bad)
jmpw
inc
aas
push
cmp
mov
dec
rcl
aad
adc
daa
loopne
adc
add
push
scas
(bad)
pop
into
jns
jne
enter
xor
push
loop
std
sar
call
add
mov
pushf
(bad)
sub
mov
lods
add
scas
xor
std
pop
lods
push
xchg
scas
pop
cdq
rcr
stos
add
bound
push
add
xor
sub
push
int3
jp
adc
xchg
jp
push
clc
cs
ffree
add
pop
mov
repnz
lea
mov
cmp
add
(bad)
leave
(bad)
add
call
and
dec
sub
cs
jne
sbb
push
lods
in
in
mov
add
fucomip
pop
les
cmp
popaw
popa
retf
pop
int3
ins
jb
pop
push
jae
popa
data16
sahf
push
mov
xchg
test
inc
pop
sub
out
add
leave
dec
xor
int3
hlt
imul
push
cmps
fcomp
push
mov
xor
fmul
in
xchg
mov
sbb
js
mov
es
jl
lods
push
sti
repz
mov
ja
fsubrp
fwait
iret
cdq
clc
icebp
jmp
fs
icebp
aaa
scas
mov
lahf
cmp
jmp
js
hlt
mov
ja
lahf
pop
not
jne
push
xchg
iret
enter
xchg
jno
push
in
stos
sub
fidivr
push
push
ret
push
mov
in
sbb
xchg
les
xor
pop
fisub
push
repnz
push
push
mov
xchg
xor
sub
js
or
add
cmp
jge
in
mov
dec
adc
pop
lds
mov
sbb
test
mov
iret
dec
int3
cld
and
mov
pop
mov
xchg
dec
add
bound
shl
push
sub
out
mov
movs
ret
cdq
int3
ja
mov
fimul
xchg
jne
dec
or
shl
clc
add
mov
ret
daa
cli
stos
aas
xor
dec
sti
mov
aad
ins
(bad)
cmp
sbb
test
xor
mov
fadd
lea
rol
and
iret
(bad)
iret
stos
retf
pop
(bad)
out
mov
push
jbe
and
movs
or
xor
jecxz
add
mov
lds
dec
stc
xchg
mov
mov
cmps
and
push
fsub
inc
dec
(bad)
sub
cmp
test
jmp
pop
mov
mov
mov
icebp
pop
mov
mov
fistp
sqrtps
scas
ficomp
cmp
imul
movs
adc
test
lea
xchg
jle
mov
in
pusha
daa
sbb
xor
cdq
push
in
lds
addr16
pop
or
data16
add
std
fwait
push
mov
xchg
adc
dec
xchg
mov
in
popa
ror
mov
xor
int3
add
popf
mov
push
lods
sbb
push
xchg
enter
sahf
cld
sub
ror
hlt
pop
movs
ja
(bad)
xor
push
leave
inc
test
repnz
sub
sub
rcr
mov
imul
outs
cdq
jge
inc
xlat
mov
cwde
xor
(bad)
sub
fidivr
into
clc
and
imul
(bad)
xlat
rcr
cs
test
cmc
inc
jbe
je
jns
add
fstp
adc
cmp
dec
xchg
add
movs
iret
(bad)
mov
jns
push
outs
xchg
pop
pop
jl
call
mov
xchg
jg
add
xor
adc
cmp
cmp
pop
xor
mov
and
pop
call
adc
dec
mov
jo
pop
aad
jmp
outs
lods
dec
xchg
rcl
scas
movs
mov
jae
ins
es
fidivr
lods
enter
in
adc
pusha
fs
mov
sbb
xor
into
adc
scas
mov
mov
jp
test
pop
mov
cmp
out
(bad)
xlat
stos
mov
aaa
sbb
addr16
fwait
push
inc
mov
xor
fcmovbe
push
sub
push
leave
popf
jo
in
jg
pushf
xor
movs
pop
in
inc
not
data16
jns
pop
es
mov
xor
cmp
or
or
cmp
mov
xor
adc
jno
fiadd
mov
sub
push
inc
xor
jl
jecxz
push
add
test
jbe
pop
pop
mov
stos
outs
je
sub
adc
in
out
mov
xor
adc
lods
ret
clc
inc
xchg
xchg
sbb
sub
lahf
pop
mov
add
(bad)
and
adc
xchg
and
out
sub
adc
adc
cmp
popa
shl
sbb
je
xor
(bad)
fs
mov
and
and
jb
mov
xchg
aad
mov
cmp
mov
shl
push
jb
mov
cwde
pushf
xor
mov
lods
(bad)
fcom
jbe
mov
scas
add
push
popa
push
cli
dec
sti
cmp
loope
sbb
ret
arpl
data16
or
hlt
pop
addr16
fcmovbe
push
stos
js
in
cli
fcom
push
loope
mov
daa
push
into
icebp
ins
popf
enter
shr
lock
mov
pusha
loope
adc
int3
imul
push
mov
in
adc
jp
adc
cld
xchg
dec
shl
stos
ds
sar
push
xor
out
rcr
xchg
xchg
mov
lds
push
fs
(bad)
xor
and
loopne
lea
pop
pop
push
inc
push
mov
jnp
(bad)
xchg
ret
aad
fnstcw
(bad)
hlt
xchg
int
rcr
xor
jmp
repnz
fwait
jo
loopne
or
jne
(bad)
dec
adc
and
call
inc
fist
(bad)
fsub
leave
(bad)
(bad)
push
mov
mov
fmulp
jns
xchg
xchg
xchg
or
retf
dec
mov
mov
mov
xchg
jns
retf
imul
nop
jmp
mov
mov
add
cwde
jle
or
fmul
add
push
div
push
movs
ss
push
ss
adc
lahf
adc
mov
in
movs
adc
loope
add
dec
jle
(bad)
xchg
test
ja
adc
inc
jae
popa
inc
rcl
adc
loop
jae
jne
or
fld
and
cld
inc
adc
clc
imul
pop
push
mov
mov
dec
mov
sub
jle
aaa
aas
and
je
jle
ja
(bad)
jae
adc
sbb
or
sub
xchg
out
test
shl
xchg
test
mov
data16
xlat
stc
cmp
pop
mov
xor
sub
jl
movs
mov
(bad)
pop
dec
out
mov
dec
xlat
ficomp
xchg
xor
dec
cmps
xchg
loop
jns
lea
mov
jo
leave
inc
jg
lods
addr16
lock
adc
out
mov
mov
das
xchg
enter
pop
div
mov
xor
call
sbb
arpl
inc
sub
push
(bad)
fstp
jecxz
push
add
or
repnz
inc
imul
imul
inc
and
call
and
daa
or
sub
add
je
mov
sub
lahf
jmp
out
retf
adc
cmp
or
sbb
imul
aas
or
(bad)
xchg
dec
pop
retf
mov
xor
mov
or
cmp
loop
push
out
neg
ja
mov
jb
loope
inc
jle
inc
dec
or
cmp
cmps
fistp
mov
cmc
push
ret
dec
(bad)
dec
loop
bnd
gs
std
aam
aaa
bound
retf
loop
shl
push
outs
pop
data16
jecxz
imul
nop
rol
pop
(bad)
cmc
pop
ret
int
xlat
shr
or
cmps
push
xchg
mov
ds
lods
pop
aas
pushf
sub
pop
xor
xor
or
xchg
out
pop
sti
das
sub
jecxz
arpl
sbb
in
pop
mov
scas
jp
push
ret
cmp
(bad)
push
jmp
push
cs
std
lahf
xor
test
jno
push
inc
add
in
arpl
and
out
xlat
shr
mov
cmp
cld
(bad)
repz
jns
in
mov
mov
sub
dec
inc
jp
arpl
jmp
scas
jg
or
pop
mov
ds
popa
fs
fcomp
fst
popa
push
icebp
data16
fimul
and
loopne
sti
lods
sub
pop
and
jmp
mov
aas
jp
jmp
push
call
aad
pop
sub
les
mov
inc
xor
adc
fwait
test
sti
and
mov
push
xor
mov
fisttp
and
dec
les
in
adc
leave
cmp
add
xor
test
fidivr
adc
ins
lods
push
mov
or
jb
movs
jecxz
sub
into
inc
in
int3
cmp
dec
test
dec
nop
push
js
test
xor
fcom
inc
sbb
cmp
xchg
js
add
mov
jmp
arpl
mov
adc
(bad)
xor
xchg
popf
dec
xchg
push
sbb
ja
pop
push
cmp
xchg
xor
jmp
nop
int
jbe
pop
dec
mov
cmp
or
mov
xchg
push
in
sbb
cmps
cmp
pop
inc
cs
inc
jae
fxam
sub
shr
xor
pop
mov
jbe
aas
push
jnp
mov
rcl
dec
fnstsw
sbb
(bad)
or
push
mul
repz
cmps
ds
mov
lods
cld
cmps
sbb
mov
test
pop
ss
out
cmp
cld
outs
imul
jge
inc
add
and
ds
push
xchg
or
ja
and
cmps
inc
pandn
aaa
jge
mov
aaa
add
daa
fsubr
scas
dec
sbb
scas
sbb
xor
cwde
pop
pop
cs
add
dec
xor
rol
sbb
fcomp
sub
xchg
mov
pushf
movs
test
gs
enter
sbb
add
or
int
scas
arpl
and
xor
shl
lahf
daa
sbb
lds
mov
and
mov
js
and
aam
rep
outs
cwde
es
ss
pop
mov
sub
inc
scas
imul
mov
push
in
cdq
jmp
cmp
shr
movs
xor
add
in
out
ds
retf
cld
add
mov
xchg
sbb
dec
les
inc
or
fcom
or
retf
mov
mov
das
fisttp
call
jecxz
mov
aam
push
ffree
push
dec
pop
mov
add
arpl
ror
xor
addr16
push
bnd
and
mov
jmp
fld
push
ret
inc
fs
lods
adc
imul
fild
arpl
pop
jb
xchg
aaa
bound
test
jp
cmc
in
stos
out
or
sbb
not
loop
jns
add
mov
jne
sbb
mov
adc
add
pop
and
cli
jnp
jmp
inc
outs
xchg
ds
and
imul
popf
ficom
add
and
call
fisubr
int
pop
add
dec
or
xchg
add
ja
imul
mov
mov
jp
cld
xor
ja
iret
dec
jle
fisub
mov
cwde
add
(bad)
paddq
mov
mov
cmp
xlat
xchg
test
scas
mov
clc
daa
clc
(bad)
or
cli
popa
mov
sbb
lock
pop
xor
dec
sti
xchg
push
addr16
mov
jne
inc
shl
mov
cmps
arpl
loop
cli
pop
nop
pop
pop
shl
jnp
and
cmp
jmp
mov
gs
and
jb
sub
xchg
sbb
scas
jg
inc
sar
(bad)
cld
push
daa
inc
fs
repz
add
neg
in
dec
or
and
(bad)
movs
pop
dec
add
xchg
call
xchg
iret
xor
mov
scas
ret
push
or
sub
jmp
lock
std
fistp
cld
test
or
jmp
and
push
adc
mov
test
dec
cmp
push
push
cld
pop
mov
out
fiadd
push
mov
sbb
rcr
nop
pop
jmp
out
call
push
pop
stc
out
adc
ss
jns
imul
aaa
mov
sbb
out
push
cld
sbb
js
ror
and
aad
repnz
das
les
sti
ret
push
fld
pop
or
and
mov
inc
jo
sbb
and
fisttp
mov
and
mov
or
inc
es
add
movs
mov
js
jnp
inc
ret
and
aas
nop
retf
mov
outs
js
outs
aaa
js
adc
push
aam
push
xor
or
mov
xor
test
fiadd
cmp
jge
lea
pop
mov
push
dec
inc
push
cmp
fnstcw
inc
xlat
fidivr
jne
mov
mov
add
movs
cmp
mov
adc
not
aad
xchg
mov
aas
in
push
fimul
(bad)
mov
(bad)
cs
push
fst
ja
jmp
je
repz
jl
retf
cmp
enter
(bad)
imul
repnz
dec
(bad)
jnp
xor
in
mov
pop
iret
dec
lods
addr16
repnz
movs
or
mov
adc
cmovg
les
or
mov
sbb
pop
xchg
dec
pop
std
sbb
ret
int3
leave
repnz
jl
pop
(bad)
rol
imul
pop
add
sub
xchg
mov
mov
shl
add
push
lds
imul
sbb
and
fadd
dec
aaa
fs
xor
lods
push
push
(bad)
shl
data16
out
mov
mov
mov
scas
mov
loopne
inc
or
js
lea
xchg
pop
scas
call
lods
xchg
push
pop
and
popf
scas
or
or
push
sub
add
xchg
repz
ret
dec
loope
add
and
xor
xchg
sahf
out
cmc
shl
test
nop
mov
test
loope
pop
test
jmp
mov
outs
and
cmp
dec
and
mov
xchg
jno
add
lock
and
fisttp
sub
enter
js
adc
dec
and
out
xchg
ror
ret
add
icebp
addr16
push
mov
fsubp
or
or
sub
inc
sbb
dec
sub
test
add
push
adc
ss
loopne
aas
cwde
mov
inc
imul
push
mov
xlat
repnz
push
outs
imul
lds
frstor
mov
scas
push
mov
cmps
xor
leave
movs
jmp
adc
pop
bound
sbb
or
cmp
sbb
adc
call
mov
jg
and
aad
xchg
dec
pop
inc
xchg
jo
fist
and
jl
push
jmp
push
hlt
test
xor
or
push
ret
mov
ret
repz
add
sub
rol
mov
inc
popf
aad
lods
rcl
mov
idiv
xor
push
mov
adc
mov
je
int
xor
in
in
mov
out
inc
pop
popa
jo
or
mov
lds
in
fld
int3
dec
sbb
mov
xlat
cmp
jmp
mov
pop
push
ja
pop
leave
call
cdq
scas
inc
jl
cmp
push
in
cdq
out
and
cdq
in
sub
push
sbb
adc
retf
hlt
rol
sbb
sahf
idiv
(bad)
fdivr
mov
push
adc
sahf
cmp
pop
loopne
dec
mov
cmp
fiadd
mov
cvtps2pd
xchg
out
rol
push
out
mov
or
mov
sar
pop
out
pop
inc
pop
push
outs
mov
scas
test
pop
in
mov
(bad)
push
outs
mov
adc
and
mov
call
and
(bad)
mov
adc
dec
mov
xor
test
cmp
sbb
sub
push
loope
inc
sub
(bad)
mov
mov
bnd
pcmpgtd
ret
call
or
mov
pop
pusha
(bad)
pop
push
add
cmps
jb
xchg
aam
std
fdivr
aad
dec
aam
ss
arpl
jne
(bad)
rcl
inc
xchg
shl
out
xlat
rol
inc
pop
push
mov
repz
ja
and
call
inc
fucomp
cmp
je
cs
cli
cmp
fdivrp
(bad)
sbb
xchg
lds
cdq
out
sbb
(bad)
jecxz
push
rcl
inc
test
inc
ret
inc
pusha
(bad)
sbb
sub
mov
push
or
stos
arpl
dec
call
mov
shl
push
mov
test
jp
icebp
inc
push
push
sbb
out
test
or
data16
stos
lea
leave
mov
es
jl
popf
out
loopne
add
push
in
dec
inc
retf
jnp
sub
jmp
ror
add
jns
in
repnz
sub
aad
test
jp
hlt
push
or
pop
xchg
in
std
add
sahf
mov
xchg
shl
sti
mov
push
mov
inc
popf
pop
int3
dec
test
mov
cld
jmp
sbb
int3
or
jnp
mov
push
or
into
ds
lahf
mov
push
call
stos
push
repz
mov
leave
fcomp
xlat
adc
sub
clc
aas
mov
inc
retf
imul
push
sbb
retf
into
adc
gs
mov
pop
inc
mov
adc
inc
jo
xchg
fisttp
and
js
adc
das
xor
mov
shl
push
pop
jge
rcr
jp
xor
cmc
fwait
loope
xchg
jge
cs
sbb
mov
es
je
and
leave
fidivr
sub
pop
or
mov
int3
in
inc
sub
jno
dec
(bad)
inc
xchg
or
pop
pop
lahf
cmp
test
or
adc
test
jecxz
(bad)
repnz
cmp
inc
pop
and
cld
in
mov
push
ret
nop
outs
sub
adc
stos
dec
jb
jmp
fwait
mov
test
xchg
(bad)
xchg
xor
scas
scas
adc
in
sub
pop
cmps
into
mov
mov
hlt
cmp
dec
jb
inc
std
cmps
sbb
mov
inc
add
mov
mov
push
cs
sbb
fsub
push
sar
xor
dec
ret
xchg
das
cli
test
mov
pop
scas
call
xchg
cli
push
aad
and
fadd
data16
jmp
adc
sti
aas
adc
fidiv
lods
mov
mov
call
lock
and
inc
fwait
lods
hlt
xor
lock
sub
imul
mul
mul
retf
inc
cmps
add
cwde
sahf
xchg
jg
int
ja
sbb
pop
js
xor
xor
mov
mov
(bad)
cs
jae
pop
add
xchg
mov
repnz
mov
idiv
pop
scas
stc
inc
fld
jp
sub
cdq
mov
jo
inc
xor
int
jecxz
jmp
push
jnp
ins
mov
dec
enter
jp
stos
iret
mov
push
xchg
xchg
stos
or
xor
(bad)
jmp
test
mov
ret
sub
adc
icebp
mov
fdivrp
shr
xor
dec
out
xchg
sub
push
das
test
add
out
cs
push
push
and
call
out
inc
jo
or
xor
and
push
xchg
ret
fsubr
fwait
pushf
mov
out
(bad)
loope
fwait
stos
push
shl
in
xchg
jb
add
xor
(bad)
jmp
or
aam
inc
inc
xchg
jno
test
jnp
cmp
clc
pop
lahf
jae
rol
inc
push
dec
inc
test
pop
push
stc
fild
cmps
cld
push
int3
imul
sub
nop
enter
jo
mov
or
pushf
mov
sub
retf
enter
cmp
cdq
std
hlt
mov
out
hlt
fadd
fdiv
inc
sbb
sub
dec
xor
mov
add
arpl
jp
jo
and
mov
adc
loope
outs
xchg
jle
mov
ficomp
out
add
sbb
into
jecxz
mov
cdq
(bad)
into
mov
jp
ins
rcr
jecxz
xor
(bad)
lods
ret
sbb
or
hlt
or
cld
test
dec
mov
jns
jns
outs
mov
cmp
xor
xchg
ja
sbb
mov
xor
fwait
repnz
and
jno
scas
mov
push
fild
cmp
es
sbb
mov
xchg
jne
sbb
addr16
int
enter
pop
push
(bad)
cdq
fld
push
call
xor
dec
add
repz
cld
sub
cmp
inc
push
imul
or
daa
sbb
xchg
imul
jne
sbb
int3
jle
popa
dec
scas
nop
and
sub
lock
mov
add
mov
ins
jb
aad
aas
mov
repz
mov
inc
movs
aas
mov
jp
fsub
add
shl
jo
xchg
daa
jmp
cdq
push
retf
lea
fs
retf
push
(bad)
imul
mov
cli
add
fild
jmp
(bad)
test
sub
push
pop
jl
dec
push
retf
bound
cwde
jmp
sahf
xchg
test
push
and
sahf
and
in
std
mov
mov
fidiv
hlt
xchg
ss
loop
stc
out
push
movs
sub
loop
and
add
aas
jb
mov
add
jb
pop
fld
ret
addr16
push
inc
cmps
mov
dec
out
pusha
jecxz
pop
xor
mov
ss
gs
in
mov
lods
loope
call
push
add
and
or
rcr
xor
inc
and
cmps
sbb
(bad)
or
mov
xchg
movs
stc
xchg
imul
and
inc
add
scas
mov
popf
inc
arpl
leave
bound
test
int3
sbb
test
or
cmp
lods
cmps
fldenv
mov
push
sar
push
test
sbb
sbb
je
cmps
xchg
call
(bad)
hlt
xchg
jo
adc
fisttp
or
mov
ret
push
jecxz
inc
inc
cld
sub
mov
in
xlat
and
add
stos
pop
fwait
sbb
dec
call
aaa
jg
xor
fst
enter
add
ds
loop
mov
ss
mov
repz
out
mov
dec
aam
psubsw
stc
mov
fiadd
repz
push
fnsave
jge
in
ins
cwde
add
inc
lds
cdq
(bad)
push
fcom
outs
push
xchg
js
dec
minps
push
sbb
add
in
loope
retf
mov
cld
ins
pop
mov
mov
xor
add
aas
push
mov
int3
pushf
jne
inc
push
pop
dec
stos
ret
mov
aad
add
cmp
sti
std
(bad)
retf
mov
xlat
and
or
cmp
xor
mov
sub
jno
sbb
popf
pop
enter
inc
fsubr
icebp
(bad)
das
pushf
adc
pop
int3
cdq
mov
call
stc
in
lahf
mov
jns
lahf
and
mov
jne
frstor
mov
jbe
dec
pop
cs
outs
jne
call
dec
cwde
test
inc
shr
push
adc
push
sub
mov
pop
cmp
into
daa
xchg
add
hlt
pop
out
push
dec
sub
mov
jecxz
or
jp
inc
push
hlt
cdq
fnsave
repz
out
sbb
in
xchg
enter
mov
ret
adc
cmc
and
jne
aaa
gs
xor
mov
(bad)
imul
es
jl
clc
lahf
adc
xlat
lds
sahf
xchg
jl
rol
push
imul
jb
and
rcr
test
inc
jo
pop
and
bound
rcl
jge
push
xchg
add
mov
mov
stos
push
das
jne
inc
sbb
(bad)
or
jno
(bad)
jg
pop
mov
jbe
push
jnp
jmp
cmp
(bad)
or
and
jne
in
xor
fldl2e
(bad)
jns
cmps
lds
pop
(bad)
adc
fwait
mov
stc
stc
shr
dec
mov
jb
repnz
push
in
push
fisub
sub
ret
movs
call
jno
test
sbb
mov
cdq
and
and
jecxz
pop
dec
push
or
icebp
inc
call
idiv
or
in
lods
push
inc
lds
movs
pushf
sub
(bad)
and
push
ror
push
aam
jle
cld
stc
jle
lds
push
xchg
clc
stos
fidiv
sbb
in
nop
aam
dec
pop
and
push
mov
dec
lea
into
jmp
adc
sbb
in
add
addr16
push
sub
xlat
dec
mov
loop
fs
inc
mov
fild
pusha
cmc
add
inc
sahf
int3
adc
test
hlt
or
sti
jle
mov
sub
lea
outs
xor
mov
xchg
adc
jnp
push
sbb
xor
test
and
push
int
enter
jno
inc
add
clc
sub
sub
jge
popf
lea
in
jb
fwait
mov
fmul
or
mov
call
dec
imul
sbb
or
xor
and
xchg
pop
adc
mov
fs
push
in
cmc
mov
cwde
pop
stos
retf
mov
xchg
push
into
jle
and
mov
aaa
inc
mov
jp
data16
fimul
mov
enter
adc
ja
jmp
ss
out
movs
aaa
mov
dec
jmp
jecxz
or
add
pop
mov
push
push
mov
push
push
es
and
add
mov
adc
mov
shl
data16
ror
push
jbe
test
mov
in
cwde
push
mov
xchg
aad
sbb
idiv
mov
xchg
out
push
addr16
cmp
loop
shr
dec
jae
mov
adc
cs
pop
out
movs
ss
scas
into
xchg
pop
xor
dec
outs
lock
fs
mov
call
adc
cmc
jmp
(bad)
repnz
push
popa
imul
(bad)
push
call
push
push
inc
mov
(bad)
jmp
and
retf
or
or
rcr
sub
mov
shl
mov
imul
or
aaa
jmp
jno
inc
dec
iret
cdq
fisttp
mov
mov
inc
pop
movs
xor
shl
jnp
sti
cli
stc
sbb
mov
or
fld
xor
and
dec
cmp
mov
sub
in
(bad)
or
cmps
fnsave
imul
mov
xor
jae
cmp
mov
xor
sub
rcl
cs
jl
or
or
hlt
repz
inc
loop
mov
xor
cli
cwde
pop
test
adc
dec
cmp
sub
jne
push
(bad)
inc
sub
in
adc
or
arpl
call
sub
mov
dec
add
xor
stos
mov
jmp
lods
xor
adc
outs
push
lods
jo
mov
rcr
mov
xchg
sub
xchg
loop
movs
retf
mov
bound
clc
xor
jmp
int
pandn
lahf
into
adc
rcl
daa
(bad)
mov
adc
gs
fwait
xchg
lahf
sahf
imul
xor
(bad)
mov
and
cwde
xor
out
aad
jl
adc
in
jg
fidivr
in
sub
xchg
lea
mov
fisub
pop
or
xchg
mov
jecxz
rol
lods
(bad)
jmp
div
push
pop
mov
and
lea
out
fidivr
cs
scas
fs
dec
jp
aam
inc
in
push
push
fidivr
imul
pop
retf
ins
mov
leave
inc
xor
call
xchg
int
lods
into
cld
retf
in
ret
ins
mov
xchg
pextrw
(bad)
mov
sub
js
daa
(bad)
clc
fstp
(bad)
xchg
cmp
xor
cmp
fwait
sub
js
inc
or
arpl
aas
pusha
xchg
sub
push
xchg
mov
mov
mov
cld
jne
inc
retfw
ret
loopne
scas
or
mov
add
inc
push
mov
push
inc
ror
mov
push
mov
inc
add
mov
hlt
loop
xlat
jmp
xchg
mov
xor
movs
pop
test
mov
rol
aas
repz
jb
and
loopne
imul
iret
ja
push
sub
sahf
jl
cmovo
push
xchg
lods
int
test
dec
pop
adc
dec
adc
xchg
ret
fwait
movs
sti
xchg
fwait
xchg
mov
test
scas
or
sar
fucomp
sub
fwait
inc
pop
fsub
int
adc
cmp
stos
enter
pop
imul
lods
sahf
adc
mov
xchg
mov
mov
sub
repnz
push
jns
adc
jb
outs
add
xor
jnp
outs
add
sbb
push
dec
ret
sub
dec
fldcw
inc
pop
xchg
imul
div
mov
and
cs
ret
dec
iret
in
out
mov
add
mov
fist
fld
jg
pop
pop
xor
ins
movs
xor
out
int
sub
xchg
xchg
push
retf
mov
mov
or
imul
lods
push
shl
int
jle
cli
pop
iret
xor
or
scas
clc
or
mov
jbe
adc
mov
and
popa
cld
fist
mov
aad
cdq
mov
jmp
(bad)
xor
sub
lahf
sar
push
inc
adc
scas
loope
inc
mov
or
lods
cmp
jno
jle
shr
push
ret
test
add
xsha1
cmps
dec
cld
jb
sbb
test
xlat
mov
sbb
inc
fdivr
xchg
sahf
movs
pop
ja
or
ss
xchg
push
push
jmp
jne
dec
fwait
push
stos
add
add
icebp
mov
sbb
test
sub
imul
xor
adc
or
in
(bad)
and
(bad)
mov
fcmovnbe
(bad)
in
cmp
mov
call
add
stc
dec
jne
mov
repnz
cs
sub
inc
imul
sbb
mov
pop
ins
loop
out
mov
stos
test
sub
xor
hlt
addr16
inc
push
ret
inc
and
adc
movs
xlat
inc
enter
mov
push
and
and
call
jecxz
cmp
lock
xchg
das
mov
adc
cmps
push
les
add
jg
popf
mov
in
dec
fisub
icebp
pop
dec
mov
mov
xchg
xor
in
cs
sbb
mov
sbb
mov
(bad)
xlat
mov
push
pusha
xchg
sahf
test
ret
das
adc
repnz
jmp
sub
fs
mov
imul
sti
std
sbb
jae
(bad)
sti
inc
jmp
push
call
(bad)
sahf
xor
xor
pop
push
daa
js
or
cmc
dec
movs
cmps
popf
xor
dec
pusha
dec
repnz
mov
popa
jmp
mov
into
outs
cmps
xchg
fsubrp
cmps
sub
mov
pop
fwait
int3
shr
icebp
pop
add
ins
dec
or
(bad)
xchg
sub
mov
lock
jmp
scas
inc
pusha
mov
cmps
lock
jbe
shl
fldcw
cmp
enter
cwde
mov
cld
pop
ins
and
pushf
mov
cs
(bad)
sbb
xchg
outs
shl
xlat
mov
push
or
jecxz
jns
test
fisttp
pop
repnz
mov
fs
enter
sbb
sbb
xchg
lods
test
xor
je
pop
mov
je
das
and
cli
add
pop
aas
test
sahf
(bad)
xchg
inc
and
cdq
sub
dec
fld
add
ins
mov
sub
mov
loope
sbb
mov
ret
and
lock
inc
add
jl
sbb
pop
xchg
je
out
mov
sahf
pop
xchg
inc
sbb
or
hlt
cli
jne
push
cmp
push
and
mov
and
jnp
fild
lock
jae
push
inc
out
hlt
pop
retf
clc
arpl
scas
test
add
or
cdq
shl
iret
test
jo
test
or
dec
jmp
sbb
or
(bad)
jnp
add
in
sbb
sub
enter
pop
push
loopne
and
popf
fwait
push
scas
fbld
dec
outs
sbb
mov
adc
loope
in
inc
pop
adc
daa
pop
lds
sub
jecxz
outs
pusha
push
dec
pop
fisubr
mov
pop
test
push
ret
nop
cmp
mov
pop
sub
mov
sbb
or
mov
lods
mov
push
fsubr
enter
mov
adc
mov
(bad)
push
xchg
data16
xor
outs
mov
(bad)
ins
mov
mov
cli
mov
mov
lds
mov
mov
sbb
cmc
iret
ret
mov
leave
jmp
ins
mov
mov
(bad)
mov
movs
add
arpl
xor
(bad)
mov
out
hlt
retf
xchg
dec
call
popa
pop
pop
mov
pop
int
inc
push
gs
hlt
adc
bound
sti
xlat
mov
mov
cmc
lods
mov
push
std
jnp
or
into
sbb
dec
scas
sti
lds
jnp
test
dec
mov
push
xchg
leave
cdq
cs
mov
mov
sbb
fs
loope
add
sub
stos
pop
loopne
out
add
add
xor
adc
fiadd
jnp
pop
clc
push
jg
repnz
movs
icebp
inc
adc
xor
aas
mov
mul
sub
xor
lds
mov
xchg
dec
gs
imul
ja
xor
daa
push
and
dec
cmp
daa
xchg
mov
loope
scas
es
cs
sbb
add
mov
movs
outs
(bad)
adc
mov
xchg
mov
cs
add
or
in
dec
xchg
loop
aad
or
mov
cmp
xchg
mov
in
adc
and
int
shl
jmp
push
xor
jb
ins
into
fs
rsqrtps
test
gs
scas
test
xor
int
mov
xor
add
mov
movs
ins
mov
sub
out
sub
mov
dec
mov
pop
dec
cmp
ins
cmp
xor
push
inc
jmp
in
inc
ret
je
(bad)
adc
psubb
loope
repnz
loop
sbb
data16
(bad)
sbb
addr16
add
push
ret
cmp
xchg
js
arpl
add
mov
mov
pop
adc
pop
mov
sub
lods
aam
iret
pop
in
sub
mov
push
jg
leave
add
int
add
(bad)
icebp
xor
push
cld
xchg
imul
in
sbb
and
adc
jmp
jp
sub
add
and
(bad)
cdq
repz
pusha
mov
mov
ss
adc
std
inc
xor
jg
mov
mov
ins
shl
inc
cmp
loop
cmps
sub
in
sar
inc
cs
test
jg
sbb
fwait
icebp
int3
(bad)
jo
rol
rol
or
cmps
popa
sti
or
and
jns
sar
mov
and
out
and
mov
loop
push
stc
lock
xchg
inc
mov
mov
sub
lea
xchg
enter
loope
aas
or
mov
lea
movs
dec
lock
pushf
js
pusha
mov
xchg
data16
add
push
pop
std
or
into
xchg
dec
sti
dec
adc
or
stos
cmp
jg
test
mov
fcomp
gs
cs
pop
jb
sub
adc
push
(bad)
mov
sti
push
nop
sbb
sbb
or
pop
sub
ds
and
retf
jb
or
jp
(bad)
mov
nop
movs
adc
jmp
aam
jb
mov
cdq
or
fwait
test
xchg
out
cmp
push
sub
sbb
xchg
jle
inc
or
scas
out
data16
jmp
idiv
test
ins
std
arpl
stos
jle
iret
dec
inc
cld
fwait
or
sub
mov
stos
ret
xchg
int
into
sub
dec
lock
inc
(bad)
jmp
and
sub
out
inc
jmp
cs
popa
dec
addr16
jb
aad
add
pushf
ficom
mov
lahf
stos
mov
sub
and
loope
scas
cli
sub
(bad)
fcom
ror
push
xchg
stos
adc
loopne
add
cli
jg
add
dec
mov
adc
xor
mov
sti
mov
ins
gs
pop
add
xchg
push
mov
jl
dec
sub
fnsave
sti
cli
push
sbb
movs
dec
sub
jo
mov
sub
(bad)
mov
bound
stc
gs
cmps
outs
mov
xor
sbb
add
dec
jle
outs
inc
inc
ror
jns
add
call
dec
jp
pop
cmps
mov
push
retf
js
xor
jae
sub
shl
dec
pusha
sub
dec
fs
stos
mov
into
mov
or
sub
retf
add
aam
pop
xchg
inc
lds
push
adc
retf
jg
out
test
pop
xchg
mov
(bad)
jg
pushf
push
sti
jo
lahf
lods
aam
mov
sub
xlat
inc
or
push
push
dec
mov
or
cmp
hlt
fsubr
mov
stc
push
xchg
lss
mov
push
or
and
stc
and
cwde
jge
test
and
in
pop
outs
test
rol
and
xor
test
and
mov
and
xchg
clc
cdq
xor
mov
sbb
sub
je
add
dec
mov
jmp
adc
and
inc
or
mov
(bad)
loope
xchg
popa
add
xor
fisttp
jecxz
inc
or
ds
add
jo
ret
in
or
jle
inc
nop
adc
mov
mov
pop
mov
cmps
or
mov
push
les
cs
add
repnz
stc
mov
push
rcr
je
sbb
jl
pop
nop
sbb
add
cli
or
pop
(bad)
nop
jbe
ds
arpl
imul
ss
(bad)
jns
mov
stos
xor
and
pop
mov
mov
fbstp
jg
xchg
cwde
rcr
sbb
mov
cmc
rol
jae
mov
bound
xor
dec
in
stc
cs
xchg
loopne
pop
xor
sbb
hlt
aaa
xor
cmp
cdq
pop
pusha
retf
sbb
cli
aas
adc
mov
adc
jl
lods
sbb
test
xchg
or
fadd
mov
jo
adc
rol
push
xchg
mov
int3
pop
adc
cmps
dec
iret
scas
and
in
cmps
xor
or
mov
xchg
or
std
push
pop
out
inc
adc
(bad)
cmp
(bad)
call
das
push
dec
mov
sbb
sub
sbb
add
adc
call
or
jmp
add
xchg
imul
stos
jmp
mov
cmp
ja
or
gs
movs
(bad)
mov
rdtsc
lods
dec
push
push
jbe
cdq
scas
or
gs
xchg
cs
loopne
cdq
ja
mov
xchg
jmp
mov
nop
push
jmp
push
mov
int
lahf
(bad)
xor
mov
test
(bad)
push
ffree
xor
add
xor
xor
and
push
xchg
mov
ss
xlat
xchg
pop
or
aam
xchg
rol
mov
cmp
mov
stos
add
cdq
retf
test
push
mov
rol
(bad)
(bad)
fisttp
add
or
or
xchg
(bad)
test
iret
push
adc
sbb
or
xchg
cli
xor
loope
add
rol
jp
js
mov
test
cmp
or
pop
arpl
pop
xor
and
int3
dec
(bad)
js
popf
es
fsubp
sbb
scas
adc
ror
adc
mov
mov
cdq
cmp
push
add
add
dec
sar
fs
jmp
daa
mov
push
xchg
jg
movs
add
aam
mov
call
outs
push
or
fs
and
push
xchg
mov
and
pop
mov
and
call
mov
pop
enter
xor
loop
loope
inc
push
dec
sar
mov
data16
(bad)
fld
call
sbb
aad
fcomp
inc
sbb
out
inc
jmp
fisttp
or
and
or
dec
sahf
int
call
or
ins
paddd
aaa
or
and
mov
iret
mov
xchg
sbb
mov
push
fnstcw
stos
fs
ins
(bad)
lods
shl
sbb
inc
and
pop
dec
inc
and
pop
ficom
sub
pop
sbb
sub
xchg
out
lock
enter
cmp
and
(bad)
ds
sbb
loopne
xchg
rol
push
mov
cmp
inc
nop
and
jo
dec
pop
imul
out
call
cmps
test
rol
lods
push
push
repnz
repz
pusha
es
es
int3
jecxz
in
jns
adc
lea
mov
je
xchg
and
push
dec
inc
push
lock
pop
xchg
dec
pop
cmps
xchg
scas
aas
push
mov
fdivr
mov
dec
or
lea
add
push
(bad)
pop
push
xchg
popf
cld
push
in
retf
mov
(bad)
cmp
(bad)
clc
mov
(bad)
pop
mov
rcr
push
ret
or
je
sar
(bad)
ret
jns
dec
cmp
lods
repnz
(bad)
loope
ds
cli
ret
(bad)
ficomp
sar
xchg
xor
fsubr
in
repz
jle
sub
push
push
or
ret
mov
pop
push
xor
test
retf
mov
add
add
int3
pop
inc
add
pop
mov
cmp
in
jbe
shl
out
mov
fsub
fucomip
gs
jge
ret
adc
popa
clc
xchg
mov
jbe
loopne
inc
cwde
cmp
repz
call
(bad)
push
inc
jle
push
adc
fld
ins
mov
lods
dec
bound
gs
mov
pop
mov
(bad)
call
cmp
in
daa
scas
je
dec
cmp
sbb
lahf
add
into
cmps
dec
and
dec
jl
fisub
(bad)
and
call
xlat
xor
and
jns
aaa
cmp
dec
lea
push
es
es
adc
jb
ret
in
jle
push
jb
popf
cmp
jl
adc
or
mov
xchg
xchg
retf
inc
rcl
jg
xchg
lahf
int
inc
xor
add
inc
pop
ins
sbb
dec
pop
rdpmc
ret
xor
jbe
push
adc
lahf
adc
lahf
outs
mov
outs
(bad)
cmp
xchg
or
lods
loopne
inc
(bad)
push
retf
mov
jo
sub
inc
pop
cmp
int3
or
imul
mov
adc
movs
int
mov
dec
xor
aas
and
mov
push
sub
test
inc
cmp
outs
sub
add
pop
pushf
push
mov
clc
lea
mov
(bad)
leave
jbe
fisttp
nop
jp
cmp
jge
jne
mov
push
xor
fwait
loopne
mov
or
xchg
fcom
jge
add
dec
test
add
test
jae
jae
xchg
cdq
outs
scas
mov
hlt
and
inc
inc
adc
popf
cwde
inc
inc
or
lods
out
int3
sub
adc
cli
pushf
je
stc
cmp
sub
push
pop
push
mov
daa
test
cmp
xor
push
lds
mov
mov
fs
jno
loop
pusha
or
jmp
xchg
stos
retf
pop
push
pop
das
adc
jo
clc
push
dec
lods
sti
dec
dec
loope
adc
in
cmp
mov
mov
call
pop
imul
retf
pop
adc
mov
push
or
adc
mov
ja
or
xor
lds
(bad)
ja
(bad)
push
arpl
imul
add
imul
mov
jl
leave
xchg
sub
jb
sbb
test
shr
ja
sub
in
jo
xlat
(bad)
aam
dec
fdiv
test
adc
cli
movs
cmp
shr
xchg
aas
mov
out
pop
lods
call
ds
sbb
pop
aam
sbb
or
movs
mov
mov
or
jbe
loop
jge
ins
dec
sbb
ficomp
push
inc
jmp
xlat
cmp
cmc
mov
daa
scas
jne
push
mov
mov
xor
in
cmp
les
(bad)
jmp
(bad)
pop
jb
cmp
rcl
jo
adc
dec
xor
(bad)
loope
stc
(bad)
jmp
(bad)
fsub
inc
daa
leave
mov
adc
dec
push
xlat
ins
retf
adc
xchg
fcos
retf
pop
push
scas
retf
cli
cmp
push
jmp
in
ficom
inc
gs
add
adc
call
dec
lahf
sti
in
cwde
cdq
jb
mov
lods
or
(bad)
sub
out
sub
sub
xor
ins
xor
sbb
in
in
add
inc
add
pop
xchg
popf
mov
mov
fyl2xp1
dec
movs
rol
dec
pop
stc
retf
cmps
jmp
and
sub
lods
add
and
hlt
lahf
outs
add
jl
outs
add
pop
dec
jmp
dec
pop
adc
xor
js
cmps
in
adc
(bad)
pushf
test
(bad)
lds
fld
cmp
jnp
sahf
test
xchg
hlt
out
out
mov
imul
and
sub
stc
inc
jl
movs
dec
out
sub
aam
mov
pop
xor
mov
pop
xchg
(bad)
popf
mov
stos
ret
iret
loop
mov
movs
pop
add
shr
arpl
add
mov
call
mov
pop
or
retf
jl
sub
iret
mov
cmp
int
arpl
sar
mov
mov
enter
adc
jno
xchg
cmp
push
cli
mov
xchg
lock
adc
push
test
ja
or
mov
pop
retf
pop
mov
ret
xor
int3
sti
mov
xor
rcl
pop
in
enter
nop
rcl
fcmovu
inc
aaa
movs
retf
lock
xor
aas
les
jle
add
xchg
outs
dec
test
pop
add
test
xor
shr
mov
pusha
ror
dec
adc
sub
pop
jle
xchg
sahf
imul
adc
jmp
and
test
mov
leave
fisub
push
stos
push
and
and
cld
arpl
enter
sub
out
ror
scas
jge
call
sbb
ror
xor
jnp
(bad)
inc
pop
xchg
fcomp
or
inc
mov
lods
(bad)
cmp
popa
jo
lea
(bad)
leave
xor
jl
out
cmp
inc
bound
push
jecxz
jg
scas
mov
ret
add
rol
or
xchg
mov
mov
inc
push
js
pop
and
loopne
(bad)
and
mov
or
jmp
lds
inc
and
push
out
jle
and
in
mov
jmp
in
in
cmp
test
push
add
idiv
jmp
fdivp
sbb
push
dec
dec
fcomp
iret
fimul
addr16
out
adc
push
movs
ret
dec
retf
dec
mov
mov
mov
pop
mov
xchg
inc
inc
xlat
out
hlt
adc
pop
addr16
stos
xor
in
jns
loopne
sub
jge
xbegin
xchg
jmp
pop
loopne
mov
inc
retf
push
(bad)
sbb
gs
mov
and
int
fild
ins
xchg
shl
outs
mov
push
fwait
ret
jmp
fdivr
jl
push
scas
jmp
das
cmp
and
fxch
lods
aas
sub
mov
push
out
movs
loop
push
inc
iret
fadd
ins
jnp
jle
mov
std
push
mov
test
stos
mov
jmp
mov
adc
in
loopne
jmp
mov
and
push
push
daa
pusha
sbb
xchg
push
xor
dec
pop
fdivr
xor
sub
or
lods
adc
iret
fdivr
mov
clc
or
sbb
pop
sub
sub
cwde
retf
std
test
or
aad
icebp
cwde
lock
xchg
popa
push
cbw
and
add
cmp
fisubr
mov
stc
dec
daa
inc
add
cmp
inc
push
sar
std
push
ja
leave
sbb
cmc
aad
pop
sub
sti
lds
jo
out
sbb
sub
sub
les
and
int3
xchg
sub
mov
xchg
push
les
cwde
das
arpl
mov
adc
fcom
addr16
and
fiadd
cli
add
cmc
int3
cld
push
lds
retf
dec
imul
fisttp
frstor
cmp
sub
js
aam
pop
pop
das
pop
fs
loopne
test
jmp
adc
cmp
test
inc
pop
push
inc
lods
xchg
frstor
dec
pushf
cli
in
seta
ja
add
cmp
sbb
xor
xchg
(bad)
je
mov
retf
jle
fist
sub
cmp
ds
adc
push
fwait
retf
sub
sbb
frstor
sbb
mov
icebp
out
xchg
sahf
fdivr
push
in
cli
mov
sbb
mov
sbb
repz
test
fidivr
cs
adc
or
mov
outs
push
std
pop
mov
push
cwde
dec
mov
or
push
out
add
xchg
push
loope
imul
ss
jbe
ins
das
xor
loopne
(bad)
gs
xchg
div
outs
pop
sub
stos
xor
out
inc
xor
inc
jl
lods
fwait
xor
cmp
icebp
clc
clc
and
ror
mov
sbb
es
retf
push
ficom
repz
leave
icebp
stc
fmulp
xchg
adc
jp
aam
(bad)
push
ds
dec
pop
pop
ss
ja
jge
shr
(bad)
addr16
inc
cwde
or
mul
or
mov
ins
or
push
cmp
cmps
mov
popf
and
movs
imul
dec
and
cmp
mov
aaa
dec
pop
pop
jo
cmp
mov
(bad)
hlt
pop
add
push
dec
pop
ds
xchg
adc
cmp
jge
cdq
cdq
sub
or
pop
cmp
push
js
xor
inc
sub
pusha
aad
push
fwait
ja
sbb
dec
jmp
pop
and
jo
jno
bound
gs
mov
mov
mov
adc
mov
xchg
sbb
pop
inc
repnz
fs
aad
loop
jle
dec
cmp
cli
inc
ret
adc
call
jge
dec
aad
ror
or
jns
push
cwde
cwde
mov
jmp
cmp
push
sbb
or
and
xor
xchg
xor
ss
mov
mov
add
outs
pop
fld
push
push
jmp
sbb
test
imul
sbb
rcl
cmp
sbb
pop
cwde
jno
cmc
add
push
les
xchg
adc
lock
jmp
jno
cwde
icebp
sbb
int3
ret
icebp
int
imul
sub
sahf
inc
mov
imul
mov
adc
pop
adc
or
fcmovu
inc
test
push
and
jo
repz
push
int3
push
out
div
fimul
adc
ins
sbb
or
rol
sub
std
and
inc
xchg
adc
ret
add
fucomp
dec
dec
or
(bad)
push
and
push
ja
xchg
mov
cld
sahf
test
jecxz
cmp
inc
aad
sub
inc
push
loope
sub
or
scas
bnd
inc
mov
cmps
xchg
sbb
in
push
jmp
repz
imul
mov
movs
out
aam
or
xchg
and
shl
or
inc
popa
mov
jno
(bad)
mov
out
nop
pop
mov
jge
fisttp
push
(bad)
aam
js
sar
std
iret
fucomi
lods
ror
int3
xchg
aas
in
pusha
jno
mov
xor
ret
adc
push
jne
fcomip
jl
mov
(bad)
stos
loop
xchg
sub
cs
pop
xor
rcl
fnstsw
sbb
inc
push
out
pop
add
jle
std
pop
jmp
int
jae
daa
and
fstp
loop
into
xchg
popa
mov
shl
and
test
xlat
mov
stos
test
dec
mov
rep
mov
pop
das
gs
fcomip
sahf
or
test
repnz
jns
sbb
fldenv
mov
cmp
out
lods
mov
mov
xchg
cmp
mov
inc
jne
sbb
mov
jno
test
imul
sbb
ret
aad
cmp
fld
xchg
rcl
sbb
stos
mov
and
test
pop
sub
sbb
pop
sbb
sbb
dec
inc
cwde
icebp
leave
pop
lock
mov
hlt
jle
or
popa
xchg
mov
dec
int
retf
cmp
lea
rcr
fs
gs
(bad)
sahf
test
sbb
inc
adc
mov
jb
hlt
pop
add
pop
adc
or
inc
aam
or
sub
test
mov
setnp
sbb
adc
popf
movs
push
jp
and
mov
and
loop
xlat
fimul
int3
sub
out
std
dec
aad
scas
leave
sti
mov
(bad)
(bad)
jecxz
in
xor
imul
and
mov
popf
or
inc
mov
cld
js
jno
sbb
mov
idiv
xchg
pop
push
and
enter
sub
jns
sbb
mov
cmps
xchg
mov
and
cmps
xor
dec
sub
rcl
popf
mov
dec
jle
cmp
cld
mov
test
out
mov
sbb
retf
pop
mov
test
repnz
(bad)
push
int
cdq
in
ins
enter
mov
fcomp
add
jle
dec
xor
lods
inc
sbb
mov
les
cmp
pop
mov
fnstcw
int3
sub
fst
mov
pop
cmp
xor
test
add
jg
jno
cli
cdq
js
loopne
std
and
and
js
mov
xor
fwait
push
out
mov
sbb
cmp
jmp
and
mov
dec
jns
xor
pop
pop
loop
add
xchg
cld
cli
jne
ins
cmp
scas
lahf
push
cmp
stc
test
pop
out
jnp
fxch
ins
xchg
or
sub
es
jno
add
and
jnp
mov
int
fwait
pop
xor
movs
popf
adc
adc
leave
sahf
dec
sub
scas
(bad)
jne
mov
shl
aad
add
pop
movs
pop
stc
pop
scas
push
arpl
cmp
xlat
xchg
sub
fnstcw
scas
cmp
movs
and
add
sbb
mov
add
aam
iret
sub
sbb
ror
shr
sar
(bad)
call
enter
add
outs
adc
test
dec
mov
or
add
or
ss
cmp
jne
jb
adc
mov
adc
xchg
scas
loopne
sub
xchg
or
test
xor
aam
shl
mov
mov
mov
(bad)
sbb
(bad)
adc
add
ret
les
pop
fstp
pop
imul
lea
mov
inc
ins
outs
sub
shl
add
sti
and
fistp
sbb
cwde
or
mov
mov
sbb
ret
pop
mov
scas
ins
sbb
jmp
mov
fcmovnb
jbe
lods
mov
cmps
(bad)
mov
pushf
xor
add
sbb
inc
sbb
push
enter
out
fcomp
pop
dec
pushf
cmp
adc
and
adc
scas
dec
push
add
cmp
inc
sub
shr
hlt
mov
ror
pop
ja
clc
sbb
mov
mov
mov
adc
inc
push
icebp
sub
mov
imul
outs
dec
mov
cli
add
xchg
test
shl
cmp
fsubr
push
cmps
pushf
jg
arpl
cdq
rol
and
jno
jmp
std
and
pop
push
sbb
add
scas
xchg
adc
mov
push
nop
jg
cmps
xor
inc
call
push
fsubr
jne
xchg
ret
stos
(bad)
fdivr
add
imul
or
rol
push
cmps
xor
dec
pop
daa
(bad)
test
mov
jecxz
pop
sar
dec
out
cmp
in
nop
ficomp
xchg
cmp
scas
adc
xchg
out
cmps
or
mov
mov
cmps
shl
(bad)
ret
cmp
std
imul
xor
in
mov
repnz
int3
inc
pop
loop
bound
aad
adc
(bad)
stos
sub
cli
pop
leave
mov
or
pop
fisubr
aad
je
out
or
test
addr16
dec
lods
push
xor
adc
mov
pop
or
test
test
jp
in
imul
lahf
cwde
scas
jnp
aas
adc
sbb
pop
cmps
ins
mov
mov
cmp
hlt
retf
pop
mov
(bad)
pop
retf
xor
call
stc
push
iret
cmp
out
mov
lea
push
xor
mul
call
push
test
and
loop
and
ja
arpl
mov
clc
inc
sbb
xor
mov
xchg
push
icebp
js
shr
push
and
xor
(bad)
mov
cmp
fnstsw
cmps
lea
xchg
shr
fstp
test
mov
imul
div
pop
leave
addr16
fcomp
add
imul
sub
mov
out
out
mov
pop
xor
imul
mov
cdq
mov
je
and
in
cmp
dec
jbe
loop
sbb
xchg
mov
xor
or
jge
stc
push
rcl
pop
xor
inc
rcl
add
inc
xchg
jl
fld
xlat
or
and
(bad)
out
mov
ror
arpl
sbb
sub
or
or
xor
jo
xlat
ror
add
cmps
cmps
inc
pop
jmp
sbb
mov
in
sub
sbb
jmp
cmp
mov
fcmovnbe
test
int3
stos
popf
cwde
ret
push
or
cmps
or
adc
pop
push
idiv
push
pushf
cmp
add
js
fcom
adc
movs
cwde
mov
pop
mov
push
push
gs
test
xchg
mov
xor
and
(bad)
jns
loopne
xor
add
and
xor
js
lahf
dec
arpl
sub
(bad)
ins
ins
xor
inc
(bad)
dec
pop
into
sub
fldenv
sahf
das
(bad)
retf
add
cmps
std
call
lods
mov
movs
div
and
rcl
jg
repz
nop
out
pop
mov
(bad)
cmps
and
(bad)
iret
bound
sbb
xor
arpl
repz
or
jecxz
mov
cmp
retf
sub
mov
pop
pop
test
xor
mov
sbb
div
or
test
and
ficom
cmp
mov
or
jecxz
ror
adc
adc
mov
sub
adc
jne
mov
in
dec
(bad)
das
or
xor
sub
jnp
adc
sub
cld
cmp
shl
sahf
data16
cmp
xchg
mov
mov
pop
scas
cmps
xor
or
in
mov
and
fidivr
inc
cwde
inc
aad
xchg
jecxz
mov
and
dec
add
shl
mov
add
mov
mov
sahf
inc
retf
mov
jl
cmc
jmp
xlat
in
mov
xor
cdq
push
fdiv
test
cli
pop
add
(bad)
in
(bad)
cli
daa
in
pop
or
out
std
sub
f2xm1
loopne
xchg
mov
mov
(bad)
and
sbb
std
dec
rol
test
test
dec
jp
push
cwde
in
add
(bad)
adc
mov
ins
dec
nop
push
outs
adc
cmc
shl
(bad)
mov
dec
xchg
aaa
in
out
mov
repz
sbb
out
stos
pop
js
push
sbb
shr
jmp
fsub
dec
mov
push
ins
sbb
cli
xchg
xchg
xchg
fcomp
imul
push
cld
ret
add
leave
adc
xchg
fs
mov
les
dec
out
cmp
add
rol
ds
fisttp
fnsave
int3
fmul
and
ins
mov
inc
xchg
fimul
inc
loope
dec
push
in
into
pop
cmp
xlat
(bad)
mov
iret
clc
jnp
cmp
add
mov
daa
test
mov
mov
xor
dec
sti
jmp
sar
mov
call
cli
fs
add
jne
fstp
mov
loope
jmp
popa
pop
dec
push
jmp
adc
dec
cmps
adc
and
shl
jno
and
add
pop
push
jge
mov
and
dec
lds
jge
mov
sbb
in
movs
and
(bad)
shr
dec
and
fnstsw
int3
stos
hlt
fwait
push
inc
pushf
rol
adc
xchg
jmp
out
xchg
mov
pop
fsubr
(bad)
imul
xchg
dec
cmp
test
daa
sub
out
rol
shl
(bad)
jne
jbe
xor
sub
and
add
adc
mov
fs
hlt
cmp
mov
sub
shl
pop
or
inc
cmps
loop
push
adc
jne
sar
mov
(bad)
xchg
mov
les
sub
sub
pop
inc
push
lock
ins
jnp
xchg
add
cmp
shl
cmp
push
(bad)
outs
push
pop
or
inc
xchg
xor
or
in
and
mov
icebp
or
xor
jae
fld
in
push
pop
test
jnp
inc
and
loop
fld
je
mov
ja
push
cmps
pushf
add
out
add
cdq
pop
xor
push
shl
add
ret
sbb
aas
push
shr
adc
das
sub
pop
int
call
or
aad
in
popa
out
push
mov
jmp
pop
(bad)
jmp
repnz
lods
mov
ror
nop
cmps
sbb
mov
rol
mov
stos
int3
mov
enter
pop
or
inc
mov
adc
sub
lea
cmps
sub
push
mov
add
dec
and
fwait
push
mov
sbb
nop
mov
cld
inc
packsswb
retf
in
call
loop
imul
sti
cmc
out
jns
mov
fs
imul
mov
mov
clc
jae
push
pushf
in
sti
xlat
cs
add
jnp
std
ins
cmp
popf
outs
pop
xlat
mov
jmp
sub
mov
out
jl
xchg
xchg
pop
sahf
xor
cmc
sub
sub
cmp
inc
cwde
mov
xchg
fist
push
jge
pushf
jmp
cs
cdq
jbe
out
jae
stos
inc
sub
cmp
lock
scas
stos
sbb
in
xchg
jp
addr16
push
jns
xchg
ret
push
mov
movs
sub
pop
aas
sti
xor
mov
or
dec
push
xchg
cs
imul
xchg
sbb
mov
inc
call
bound
and
inc
call
pop
push
dec
mov
fadd
addr16
cmp
call
das
je
fwait
adc
sbb
mov
retf
lock
ins
xchg
mov
je
inc
push
adc
in
sub
mov
inc
xor
and
ds
pop
add
push
les
jns
inc
rol
cs
int3
xchg
fwait
shr
and
xchg
outs
add
std
sbb
cs
(bad)
fidiv
xor
in
scas
(bad)
not
mov
lods
(bad)
push
retf
aam
xor
or
jl
add
ret
rcr
std
adc
jnp
pop
mov
data16
mov
push
pop
push
clc
and
les
sbb
scas
inc
ret
mov
mov
ret
xchg
mov
(bad)
ins
xchg
add
cmc
icebp
test
loope
push
rcr
(bad)
cmc
movs
in
movs
leave
lds
sbb
ret
push
bound
sti
jnp
lods
adc
xlat
mov
mov
xchg
push
sti
add
and
int
loop
fistp
pop
push
pop
jbe
cmps
cmp
fnsave
cmp
xor
mov
nop
dec
test
pop
xor
xchg
xor
adc
xchg
mov
xchg
scas
adc
in
(bad)
adc
data16
mov
mov
add
adc
or
jg
test
mov
les
test
inc
arpl
call
cmp
push
sahf
xchg
mov
xor
mov
fwait
popf
xchg
js
sbb
jo
fld
pusha
fsub
mov
xlat
or
cmp
mov
jge
add
sbb
scas
jbe
add
push
or
jbe
dec
jp
jbe
sub
xor
in
cmp
jg
addr16
cmp
int
mov
nop
loopne
out
sbb
mov
push
(bad)
loop
inc
xlat
loopne
xchg
xor
mov
gs
adc
enter
mov
mov
rcr
test
aas
test
dec
outs
or
(bad)
cli
dec
pop
scas
cmp
sub
fdiv
xor
add
xlat
pop
xchg
pop
mov
popf
cmps
test
and
xor
pop
call
push
jmp
js
add
mov
push
and
arpl
or
sub
mov
adc
dec
fldenv
xlat
std
mov
aad
popa
sbb
adc
fcmovnb
and
mov
fwait
sub
out
jne
lds
dec
inc
call
lods
xlat
cdq
shl
inc
stos
mov
mov
adc
minps
movs
push
mov
and
ss
adc
sti
and
xchg
push
cmp
pop
xchg
cmps
je
mov
test
or
adc
jmp
inc
sub
push
lahf
sbb
mov
sub
daa
inc
repz
loopne
jbe
arpl
mov
mov
in
inc
stos
push
pop
or
or
inc
lea
jbe
inc
push
lahf
mov
push
imul
out
fnstenv
fisttp
xor
leave
inc
ins
xor
rcl
adc
dec
and
scas
(bad)
sub
sub
retf
loopne
xchg
mov
dec
xchg
mov
aad
sub
fdiv
aam
adc
sub
rcr
out
cmc
pop
xchg
clc
stos
add
mov
js
xor
mov
int3
sbb
mov
sub
addr16
rcl
cmp
adc
mov
jmp
cmp
jg
add
sbb
out
cmc
inc
imul
inc
aas
and
(bad)
ins
shr
bound
inc
pushf
aad
in
xor
imul
jmp
dec
aas
lea
inc
adc
adc
mov
dec
and
sub
enter
je
jl
fs
cmp
js
das
mov
cmc
xchg
jb
into
jecxz
dec
cwde
clc
mov
mov
jp
lock
sub
xor
mov
(bad)
ins
hlt
mov
pop
pushf
push
lahf
push
and
out
mov
or
mov
mov
aad
jge
fdivrp
mov
int
mov
aam
test
add
jmp
xchg
mov
add
mov
je
outs
lahf
mov
sbb
dec
dec
es
xor
inc
mov
ror
jl
push
pop
push
test
(bad)
ss
dec
mov
inc
enter
xor
and
ret
mov
sbb
inc
sti
lods
stos
add
mov
ror
add
test
cmp
scas
jecxz
outs
lahf
fnsave
loopne
push
sub
mov
xchg
inc
ret
(bad)
xor
sbb
jne
idiv
dec
cmp
mov
div
jmp
xchg
mov
cmp
jecxz
je
push
ja
jle
(bad)
adc
and
mov
sbb
mov
loop
jae
add
pop
jle
das
inc
xor
(bad)
dec
outs
jecxz
pop
fist
aaa
jns
adc
(bad)
pop
test
or
stos
outs
adc
push
mov
jge
mov
movs
jl
lahf
xlat
pop
in
ins
jns
adc
call
fs
push
xor
inc
ror
cwde
or
arpl
movs
xlat
mov
mov
mov
xor
xchg
jmp
inc
push
jmp
lods
inc
movs
sub
adc
leave
pop
repnz
dec
inc
xor
push
pusha
mov
jb
xor
out
mov
sbb
sbb
hlt
push
cdq
and
mov
mov
pop
cmp
dec
xchg
push
inc
inc
test
dec
out
inc
int3
jbe
popf
jecxz
xor
fwait
sbb
(bad)
sub
(bad)
jae
dec
into
scas
arpl
jl
dec
push
fstp
mov
scas
cs
mov
xor
push
or
lahf
mov
shr
retf
ins
cs
js
fild
out
(bad)
lods
or
cmp
jb
repnz
imul
fsub
int3
icebp
fst
jns
mov
movs
add
cmovle
inc
inc
(bad)
daa
sub
aaa
and
stc
das
sbb
das
sub
in
fidiv
aam
dec
inc
movs
mov
dec
xchg
sbb
xchg
ror
push
push
adc
js
popf
push
popf
sbb
sub
sbb
mov
test
mov
sub
ds
out
movs
mov
rol
sub
test
cmp
xchg
fs
popf
dec
jg
add
mov
xchg
lock
dec
(bad)
and
addr16
cld
inc
push
lea
cli
scas
mov
or
mov
push
mov
retf
std
inc
(bad)
xor
dec
loopne
cs
test
(bad)
and
int3
mov
push
xor
and
cmc
xchg
out
push
cmp
or
mov
repnz
mov
or
push
addr16
gs
adc
jae
ss
or
cmps
(bad)
or
cmp
pop
push
das
fidivr
sbb
mov
test
retf
out
jnp
lods
xor
in
xchg
or
cmps
test
add
cmp
test
push
push
mov
jmp
adc
out
pushf
les
ror
mov
push
mov
xor
or
lock
xchg
arpl
jae
add
mov
cmp
mov
dec
nop
mov
pop
outs
push
dec
push
mov
mov
jmp
int
mov
pop
repz
(bad)
pop
int3
jns
in
retf
inc
imul
fbld
movs
push
pop
movs
aam
inc
push
xor
shr
mov
sbb
pop
push
mov
pop
imul
pop
or
fs
jp
ret
dec
ins
xchg
push
sbb
and
xor
enter
ret
sbb
jne
mov
pop
(bad)
rcl
or
cdq
stos
adc
aam
pushf
xchg
mov
cmp
in
dec
and
pushf
adc
in
adc
push
pushf
addr16
jp
add
lods
int
jle
ds
mov
lahf
jecxz
push
adc
push
and
cmps
out
das
sti
fwait
lods
jae
shr
repnz
mov
mov
cld
xchg
dec
jp
mov
cs
jp
inc
xchg
or
stc
int3
sbb
lock
clc
in
repz
mov
or
in
xchg
iret
add
lea
loop
les
add
xchg
mov
sbb
adc
retf
mov
aaa
mov
or
mov
(bad)
mov
pop
jecxz
sbb
adc
sahf
mov
std
adc
jmp
mov
call
mov
in
xor
or
push
iret
les
ins
call
mov
inc
popf
or
adc
das
cmp
fcomp
pop
stc
cmp
ret
inc
sbb
shr
sub
pop
jb
ret
inc
sub
retf
test
sbb
in
idiv
xchg
push
mov
daa
stos
aam
sbb
push
mov
hlt
mov
dec
jne
adc
pop
lods
adc
jne
(bad)
stos
fsubr
cmps
jmp
push
enter
xchg
je
mov
fimul
nop
adc
push
pop
xchg
hlt
cld
sub
popa
xchg
and
mov
icebp
test
cmp
call
or
outs
jbe
dec
adc
mov
xor
add
call
ret
(bad)
pop
push
or
jmp
sub
repnz
pusha
mov
std
addr16
div
sbb
iret
xor
lods
dec
pusha
test
lock
jle
test
arpl
mov
out
sbb
mov
or
jmp
mov
shr
stos
repz
fistp
sub
(bad)
cwde
cld
and
add
xor
pop
jg
adc
sti
pop
outs
imul
dec
jno
xor
sar
sub
inc
cmp
bound
movs
add
dec
cwde
push
mov
das
shr
arpl
pop
test
and
sbb
and
sbb
cli
icebp
aad
lahf
add
jge
cmp
jl
mov
mov
sbb
push
adc
cmps
adc
leave
mov
add
push
je
fiadd
mov
cmp
mov
neg
xchg
in
dec
or
adc
dec
loopne
or
cli
(bad)
gs
call
call
or
ror
out
loop
xchg
dec
repnz
mov
jb
inc
in
(bad)
call
std
or
(bad)
retf
popa
icebp
retf
mov
stc
push
in
xor
pop
adc
iret
xchg
ds
pop
sbb
popf
mov
mov
pop
add
stos
test
jno
xchg
in
jb
mov
(bad)
xchg
ja
push
aad
pop
sbb
cli
and
enter
cmc
mov
ins
mov
mov
mov
jns
fcmovne
or
or
xchg
adc
mov
lahf
inc
jne
in
arpl
mov
jecxz
arpl
loope
push
push
pop
mov
sub
xor
loope
xchg
nop
test
mov
adc
mov
ds
inc
popf
in
ds
push
pop
mov
repz
movs
stos
sbb
loop
sti
push
fs
sub
pop
xchg
mov
je
in
jmp
sbb
adc
int3
dec
and
hlt
aad
or
in
sbb
jp
jae
mov
mov
jg
dec
fistp
sbb
or
iret
sbb
movs
addr16
rcl
jo
shl
dec
cwde
std
rcr
xor
cs
ds
enter
mov
mov
shl
and
push
dec
lds
add
rcl
push
in
jo
mov
mov
aad
stos
adc
aas
add
rcr
sub
imul
pop
outs
neg
xor
mov
add
mov
xchg
inc
jge
shl
rcr
fstp
xchg
lods
mov
adc
xchg
pop
cli
aaa
pusha
or
mov
(bad)
je
lods
loop
push
adc
mov
jge
adc
les
ds
mov
aaa
sbb
add
xor
pop
jne
pop
add
ret
cmp
shr
mov
cli
lock
sahf
aad
add
jl
in
mov
jecxz
cmp
sbb
fwait
ret
or
cmp
inc
mov
aaa
push
popf
in
ror
sub
lea
ins
jnp
imul
iret
retf
and
jg
mov
pushf
pop
inc
and
jmp
repz
or
gs
cmps
(bad)
cs
add
jge
outs
repz
adc
mov
sbb
or
jae
in
icebp
sahf
ins
(bad)
push
dec
mov
xchg
lahf
mov
dec
pop
int3
movs
jle
xor
push
rcr
push
das
mov
cld
enter
sub
xor
dec
shr
adc
aas
jbe
mov
mov
xchg
(bad)
ss
fld
sub
jae
cld
sbb
scas
jns
mov
cmps
movs
inc
outs
xor
or
mov
cld
jne
pop
or
jg
ret
lahf
push
sahf
xor
sub
movs
mov
cmp
leave
cmc
cli
lahf
out
cli
mov
or
and
inc
test
cmp
test
(bad)
and
sub
or
push
fwait
out
xchg
push
or
bnd
inc
jecxz
test
xchg
shr
int
push
jp
jmp
mov
xchg
lea
or
ja
inc
xor
add
push
cmp
repnz
inc
repnz
shl
(bad)
xchg
mov
mov
rol
mov
out
fs
push
push
inc
xlat
mov
retf
jae
and
repz
ja
loop
pop
inc
or
(bad)
and
mov
test
cmovo
add
jb
add
xor
push
scas
mov
das
loop
hlt
cmc
xchg
or
adc
arpl
ss
push
rcl
push
jl
hlt
fist
bound
pmullw
sbb
push
(bad)
mov
fxch
or
pop
out
int3
jmp
pop
push
add
movs
push
dec
mov
shr
mov
mov
adc
leave
jmp
jo
xchg
adc
cmps
cmc
add
imul
mov
sbb
ins
inc
xchg
imul
xchg
pop
repz
jp
in
add
retf
lahf
lock
into
retf
(bad)
in
mov
retf
lea
adc
sub
loopne
les
vmovq
iret
sbb
hlt
xor
aad
cdq
mov
jmp
nop
hlt
xor
cmp
adc
repnz
fstp
pop
mov
cli
mov
jle
int
mov
jp
sbb
hlt
mov
xor
lods
jp
cwde
sbb
movs
mov
inc
xchg
mov
and
gs
aad
and
shl
movs
or
addr16
add
jae
mov
inc
cmps
xchg
dec
jg
daa
out
push
push
dec
dec
clc
mov
inc
fwait
je
ror
pop
in
xchg
cmp
test
inc
nop
mov
aam
xlat
daa
mov
iret
stos
and
dec
sub
jmp
sub
pop
mov
xchg
push
nop
scas
dec
mov
add
fist
xchg
xchg
scas
pop
repnz
(bad)
bound
mov
sub
out
imul
in
gs
scas
mov
dec
fld
ror
fistp
das
(bad)
outs
lds
int
ss
and
mov
xchg
lock
dec
in
jp
pop
stos
out
ins
add
sbb
jbe
ins
daa
jno
and
inc
inc
jmp
in
add
sbb
sahf
sahf
fsubr
mov
push
mov
stos
iret
mov
and
rcl
cmp
in
iret
and
loopne
or
mov
scas
and
jp
loopne
xchg
js
mov
add
pop
outs
outs
pop
outs
test
dec
gs
fnstsw
in
out
cmp
xor
test
inc
not
fstp
repz
jecxz
ror
imul
push
cmp
fsin
mov
addr16
(bad)
fcom
(bad)
cmp
add
shr
(bad)
xor
mov
das
addr16
dec
pop
sbb
cmp
rol
mov
mov
xchg
int3
out
mul
dec
jmp
mov
aas
or
push
jne
ins
or
mov
daa
aad
das
push
movhps
pop
outs
push
mov
popf
cmp
mov
stos
jno
jmp
lea
jns
and
retf
pop
int3
push
hlt
lock
xchg
je
cmp
cmc
adc
cmp
and
mov
mov
es
fdivr
or
jne
lods
xchg
lds
jmp
sub
jle
push
in
sbb
in
dec
lahf
imul
test
push
outs
cmp
add
xor
mov
pop
cdq
sar
mul
jl
dec
stos
xchg
shl
ja
cmp
scas
xchg
mov
xor
mov
mov
(bad)
scas
or
adc
sbb
pushf
pop
scas
gs
push
(bad)
ins
cmp
push
sbb
aas
cmp
and
or
sub
xchg
repnz
cwde
lods
icebp
neg
bound
xor
test
fwait
push
je
mov
shrd
push
iret
dec
(bad)
stc
mov
add
cmp
pushf
mov
movs
push
mov
in
div
xor
adc
sub
lods
pop
cmp
sbb
(bad)
ja
push
cmps
fs
cmp
and
cmp
mul
lahf
mov
fwait
add
cmp
and
dec
mov
hlt
(bad)
movsx
loop
jmp
jns
jg
rcl
mov
mov
add
cmp
int3
cwde
addr16
xchg
(bad)
jnp
push
add
adc
and
dec
loop
pop
xlat
in
jl
(bad)
jbe
in
cmp
mov
in
inc
mov
repnz
xor
ja
adc
ja
das
xor
pop
mov
imul
jne
xchg
push
jbe
inc
cld
xchg
mov
sub
dec
(bad)
lods
ret
je
push
jp
jne
sub
mov
aas
call
fcmovnu
lods
sbb
stos
lea
or
jnp
gs
test
push
pop
aad
loope
jle
mov
jae
in
in
mov
mov
jnp
pop
nop
imul
lahf
push
fsub
adc
clc
xor
retf
test
icebp
sbb
push
pop
inc
popa
cmps
dec
mov
mov
and
loop
shl
iret
adc
pushf
mov
xor
pop
xor
movs
in
or
iret
ins
test
leave
stos
(bad)
sub
pop
icebp
mov
xor
sub
enter
loopne
in
mov
pop
add
inc
cmc
jg
leave
push
sti
stc
xchg
sar
add
adc
movs
popf
inc
xchg
mov
mov
inc
xor
push
jb
add
ins
fmul
(bad)
cmps
jg
jo
mov
inc
popa
jle
lods
fnstenv
(bad)
jg
inc
hlt
or
jnp
in
pop
pop
iret
test
mov
adc
into
scas
clc
jnp
push
sub
push
mov
data16
out
cmp
adc
push
and
sub
fsub
mov
bound
pop
xor
fidiv
enter
jp
lods
loopne
icebp
cmps
mov
test
call
clc
popa
pop
jl
or
(bad)
dec
imul
xchg
enter
jo
push
das
cmp
(bad)
adc
sub
aad
sbb
(bad)
aas
pop
(bad)
lods
push
(bad)
shl
push
and
push
rcl
adc
pop
cmp
adc
retf
dec
(bad)
xor
retf
sub
test
pop
aad
shl
add
and
daa
out
cmp
hlt
jle
push
fmul
xchg
adc
fcomp
les
xor
sahf
lods
add
xor
mov
sub
xor
fdivr
fidivr
fstp
jp
inc
jno
daa
sbb
loop
xor
fidiv
idiv
cmp
or
shr
dec
adc
ret
outs
adc
or
jmp
inc
pushf
in
xchg
loope
ins
xchg
inc
sub
xchg
fstp
repnz
or
lods
sbb
aam
jge
mov
mov
cld
push
or
dec
mov
inc
adc
mov
and
iret
jnp
sub
sbb
loopne
sub
sub
dec
mov
inc
(bad)
xlat
dec
jmp
pop
shr
xchg
ror
fimul
adc
or
or
mov
cmp
std
retf
and
test
xchg
test
add
jmp
outs
mov
outs
popf
dec
push
push
(bad)
sbb
stos
fsubr
retf
fdivr
and
cmp
cld
sbb
xchg
xor
rcr
jae
or
sub
jnp
jb
cdq
push
clc
std
cmps
jae
or
adc
inc
and
mov
and
add
xor
retf
adc
popa
jne
loope
in
jmp
shl
adc
mov
mov
adc
and
int3
js
dec
xor
mov
rcl
mov
movs
mov
xlat
xchg
mov
or
fadd
jo
cmc
out
xchg
mov
or
std
mov
lods
std
push
cmp
jp
popa
xor
ud1
jp
int3
sti
leave
pop
cmp
push
punpckhdq
mov
dec
push
mov
fcom
pop
cmc
ss
mov
push
mov
mov
cmp
outs
in
jns
div
pusha
fisttp
adc
inc
cmp
and
ror
fisttp
add
rcl
xor
fmul
and
jg
dec
jns
jge
ins
sub
jbe
arpl
adc
mov
psubq
jmp
movs
and
out
(bad)
out
fst
and
out
or
cmc
jg
std
sti
lock
inc
mov
test
pop
sbb
cli
sub
and
call
cmp
or
mov
add
inc
mov
in
adc
jge
pop
xor
xchg
imul
leave
ret
dec
add
stc
mov
mov
(bad)
shl
cmp
add
mov
jnp
rol
ins
aaa
jnp
push
add
jns
and
lods
fadd
xor
cmps
inc
arpl
add
stos
aam
pop
ins
call
aaa
ret
(bad)
cmp
and
cli
mov
dec
inc
nop
jo
xor
lock
outs
adc
ficom
gs
add
mov
mov
scas
jno
adc
mov
cmps
lds
retf
inc
inc
xor
xlat
mov
int
call
enter
aaa
jno
lock
movs
adc
lods
push
sub
fadd
adc
jns
adc
pop
ja
dec
in
cmp
jns
lods
mov
jecxz
xor
js
rcr
call
(bad)
mov
cmp
xor
out
je
push
xor
int
cs
bound
int
lods
gs
xchg
std
pushf
ror
test
aaa
sub
pop
mov
iret
mov
pop
scas
add
jle
xor
div
dec
jle
ja
loope
jo
mov
mov
sbb
adc
add
cli
sbb
stos
les
dec
arpl
mov
aas
and
aad
loopne
retf
xchg
jl
repnz
adc
pop
mov
and
jle
mov
cmp
ss
stos
or
data16
mov
jle
ret
std
popa
push
ret
add
jg
movs
(bad)
icebp
in
pop
or
out
outs
push
std
je
shr
add
mov
enter
movs
push
hlt
push
cmp
stos
jae
sbb
stc
jno
aas
ja
dec
imul
test
and
jne
and
jecxz
lahf
aas
jae
add
sub
cmp
fmul
xchg
arpl
loopne
lea
jnp
sbb
clc
popf
xor
fild
sbb
enter
int3
inc
xchg
xor
xor
xchg
ss
jmp
push
pop
icebp
mov
and
lds
add
jbe
cld
sbb
pop
jecxz
int3
adc
mov
pop
cmp
xchg
xchg
jle
data16
push
adc
or
mov
pop
loope
mov
aam
dec
(bad)
jp
leave
pop
xchg
sti
inc
test
popa
arpl
sar
into
std
pop
iret
sub
(bad)
mov
dec
into
mov
fcomp
cmc
sbb
add
jns
mov
ret
xor
repnz
mov
or
pop
pop
cmp
(bad)
cmp
imul
jbe
sub
jo
jecxz
mov
lds
cmp
lds
arpl
jo
and
shr
(bad)
stc
call
sbb
jb
xor
cdq
pop
cmp
inc
pop
call
pop
loopne
mov
jecxz
dec
shl
clc
xchg
or
loopne
test
retf
(bad)
fst
and
xor
xchg
stc
dec
enter
jmp
outs
dec
dec
jp
xor
mov
in
jmp
(bad)
fmulp
out
es
cwde
jae
push
ds
stos
fstp
sbb
mov
sub
inc
dec
mov
sbb
push
add
sub
or
inc
jge
pop
mov
repz
cmp
stos
stos
outs
hlt
inc
lods
into
(bad)
rol
les
mov
clc
lea
les
or
bound
jae
fnstenv
push
cmp
loopne
and
pop
mov
dec
dec
mov
mov
addr16
jnp
cmps
stos
dec
xlat
jb
cmp
cmps
pop
mov
(bad)
mov
mov
pop
fidivr
fcomp
test
mov
outs
xor
lods
into
scas
stc
push
retf
push
fwait
sbb
jo
push
iret
jmp
jo
sub
call
adc
push
or
mov
imul
adc
push
mov
xchg
clc
mul
shl
cld
addr16
neg
jbe
push
les
jae
jo
sbb
in
mov
mov
repz
jb
bound
jge
stos
aad
popf
aad
jb
scas
iret
mov
(bad)
retf
retf
sub
lods
pushf
jl
xor
adc
hlt
inc
popf
rol
test
add
sbb
adc
scas
dec
test
inc
add
push
jmp
dec
ret
not
rcr
mov
push
addr16
rol
scas
(bad)
adc
pushf
scas
push
div
xor
ret
mov
cmp
into
aam
push
mov
(bad)
cmp
push
mov
imul
out
neg
imul
mov
test
sub
xchg
nop
std
mov
fs
fisttp
cmp
data16
ret
adc
sub
lds
aas
jbe
cmps
adc
shl
mov
mov
shl
mov
dec
stc
jmp
(bad)
cli
mov
stos
lods
js
adc
rol
or
cmp
or
cmp
adc
pusha
out
not
fild
push
retf
loope
aam
fistp
or
push
mov
xlat
test
adc
popf
out
xchg
and
enter
xchg
and
cmps
jb
sbb
or
(bad)
adc
gs
jns
retf
xchg
jmp
leave
loop
or
xchg
stos
xor
mov
shr
and
in
sub
dec
cmp
jnp
pushf
adc
add
xchg
movs
push
cmc
sbb
les
ffree
call
fdiv
pop
dec
push
jns
mov
fcomp
mov
call
mov
jno
push
sbb
test
stc
sub
mul
push
dec
icebp
call
iret
clc
push
js
sbb
fdiv
or
(bad)
push
sahf
(bad)
imul
jmp
push
push
pop
das
push
pop
pop
loop
xor
out
mov
dec
repnz
out
cmp
call
sub
xchg
mov
dec
jl
jno
test
pop
jmp
repz
cmps
cmp
mov
mov
inc
pop
mov
cwde
lea
push
add
icebp
repnz
adc
jnp
push
jnp
push
mov
out
inc
pop
enter
sbb
cmp
leave
pusha
icebp
(bad)
jb
aam
xchg
in
push
lock
xchg
lods
dec
out
mov
sbb
xchg
push
and
jle
fldcw
out
retf
imul
push
xchg
mov
or
sub
pop
fistp
les
and
les
lods
push
daa
je
shl
pushw
movs
inc
sub
mov
inc
inc
sub
pop
xchg
push
fcomp
xor
or
xor
xor
cmp
cwde
retf
pop
dec
pop
and
and
push
callw
lock
add
(bad)
dec
ror
pushf
mov
pop
jno
stos
xchg
inc
sbb
jns
mov
add
(bad)
scas
hlt
cmp
mov
pop
xor
js
iret
je
dec
dec
inc
stos
jecxz
movs
cli
jns
into
fwait
sub
xor
ins
jne
adc
cmp
push
inc
test
sbb
mov
in
sub
lods
xchg
xchg
rcr
add
loopne
sahf
frstor
shl
jno
cmp
ret
cs
ins
push
jmp
ss
in
push
out
xchg
mov
fistp
lods
or
jae
jae
jmp
inc
pop
sub
and
(bad)
mov
sub
xor
and
xor
aas
aad
push
lahf
(bad)
xor
sbb
fstp
aaa
xchg
mov
sbb
inc
jae
(bad)
mov
in
jl
out
std
mov
out
(bad)
cmps
push
pop
push
add
lea
and
jns
cmp
int3
cmc
jno
aas
jg
or
in
fwait
ja
jns
jg
pushf
fwait
ror
outs
mov
icebp
dec
test
or
sub
sub
or
fsubr
fld
jb
cmp
xchg
cmps
cs
adc
sbb
jns
fisttp
into
cmp
pop
movs
loope
mov
jle
mov
push
stos
movs
aad
fistp
sub
push
adc
pop
fsub
mov
popa
jp
jbe
repnz
jns
cmp
dec
xchg
js
mov
aaa
ss
fldcw
adc
lahf
add
int3
popf
mov
and
jns
cmp
js
jno
popa
popa
pop
cmp
sbb
sub
xchg
mov
xor
mov
outs
loop
push
adc
jmp
push
push
jns
or
fdivr
gs
call
or
xor
hlt
add
pop
mov
inc
sbb
(bad)
in
push
jmp
adc
or
mov
loopne
std
out
mov
push
pop
sub
xchg
call
stc
mov
scas
xchg
fnstsw
inc
or
push
push
outs
pop
jnp
cmp
mov
ins
in
push
push
sub
jecxz
rcl
jo
fadd
sbb
ins
ret
pushf
jg
ins
out
cmp
dec
sub
jbe
mov
movs
adc
test
push
cmps
jb
xchg
cmp
ss
out
mov
dec
cmp
(bad)
ss
cwde
movs
adc
daa
or
cmp
adc
mov
cmc
sub
mov
push
xchg
ins
push
sub
mov
xor
pop
je
mov
imul
xchg
nop
mov
xchg
jmp
mov
add
ror
sub
push
pushf
cmp
out
xchg
mov
jae
or
jp
push
push
rcl
gs
retf
mov
dec
nop
imul
add
ins
cmp
out
mov
push
and
jno
xor
loop
cmp
xchg
sbb
out
add
sbb
dec
lahf
cmp
sbb
jne
scas
in
jp
(bad)
cmp
cli
mov
outs
xor
bound
int
fwait
lds
mov
push
sub
test
xor
pusha
lods
inc
push
mov
mov
xor
loop
js
scas
cmc
xor
cwde
sahf
push
(bad)
xchg
xor
div
push
mov
mov
outs
icebp
test
cmp
mov
dec
jl
popa
das
dec
xchg
or
sbb
stos
lods
outs
xchg
adc
outs
fwait
rcr
enter
push
pop
sub
or
retf
inc
xor
aam
or
push
jb
stc
(bad)
js
neg
test
shl
xchg
cmps
or
gs
inc
mov
push
mov
ds
daa
push
cmp
das
adc
std
cmp
sahf
fistp
mov
pop
push
mov
and
push
push
xchg
sbb
fnsave
cmp
ss
lods
pop
stos
or
ret
icebp
pop
push
adc
mov
mov
movs
stos
test
add
dec
push
push
inc
pusha
fiadd
retf
push
sbb
ins
mov
sti
push
pop
or
mov
(bad)
in
scas
add
pop
push
test
loop
dec
ror
pop
jg
cli
nop
ins
retf
(bad)
mov
mov
xor
push
push
outs
sub
in
xchg
das
inc
(bad)
ins
adc
fbstp
cmps
and
push
mov
jge
test
cmp
(bad)
ds
jmp
imul
push
lds
(bad)
stos
or
out
pop
mov
fnstsw
or
sub
aas
lock
test
scas
xchg
mov
xor
es
or
cmp
lock
push
xchg
(bad)
js
in
cli
aaa
neg
stos
xchg
fimul
ins
cwde
ja
cmps
mov
test
pop
inc
mov
in
es
in
mov
add
mov
sub
scas
clc
inc
sbb
sbb
xchg
lea
(bad)
aaa
or
pusha
jmp
(bad)
leave
ins
test
shl
mov
ret
cmp
lods
(bad)
int3
jb
leave
pop
jecxz
jle
sub
popf
mov
imul
xor
xor
xor
xchg
add
or
test
in
mov
and
xor
movs
pop
mov
mov
daa
outs
sbb
retf
push
dec
pop
ins
fs
inc
pop
bound
or
pop
pop
sbb
mov
cs
imul
lds
ret
mov
stos
sbb
pop
adc
or
cli
adc
push
xor
jmp
(bad)
fdivr
mov
sbb
fwait
mov
sbb
ja
int3
pop
outs
pusha
inc
mov
jge
add
pop
xor
mov
add
and
stos
repz
jne
mov
jmp
rol
std
mov
dec
cmp
iret
xor
shr
pop
push
mov
lahf
pop
pop
enter
add
dec
mov
push
or
iret
test
and
(bad)
ret
not
in
arpl
jo
into
repz
jg
pop
sub
into
popa
cld
mov
imul
xchg
xchg
pusha
ret
xchg
cmps
ss
out
push
dec
dec
clc
sbb
jg
inc
jmp
cmp
(bad)
and
clc
lods
pop
jo
test
mov
outs
rol
imul
popf
adc
inc
or
or
std
mov
lods
jmp
jae
xlat
jno
mov
sub
xchg
ret
(bad)
cld
mov
in
inc
dec
mov
test
adc
jae
out
mov
lahf
dec
aas
and
xchg
push
in
fdivp
jecxz
sub
ret
pop
xor
jbe
(bad)
lods
push
cs
push
add
sub
jne
div
add
xor
mov
mov
ror
dec
jb
dec
xchg
mov
sbb
xchg
xchg
lods
jmp
gs
out
xchg
push
xor
mov
sbb
(bad)
or
push
xchg
fisubr
sbb
rol
es
xor
jne
(bad)
int3
sbb
fcom
test
or
scas
in
jo
add
pop
retf
int
xor
(bad)
aas
mov
gs
xor
out
or
jo
cmc
and
sub
scas
mov
fxch
mov
dec
bnd
bound
mov
adc
icebp
arpl
pop
push
mov
mov
stos
mov
cmp
lods
mov
loopne
stc
jmp
inc
scas
iret
add
mov
inc
dec
sar
jo
sbb
es
mov
js
or
pop
in
cmps
xor
xchg
adc
push
push
sub
mov
(bad)
daa
jp
lea
mov
loope
or
jg
in
popa
(bad)
lahf
movs
jmp
aas
fcomp
hlt
push
xchg
dec
xchg
ss
pop
in
pop
mov
out
jmp
in
pop
and
fst
mov
sbb
push
bound
fmulp
xchg
retf
hlt
adc
dec
ror
jmp
es
jmp
bound
pop
add
mov
and
xor
mov
add
in
jae
mov
push
clc
gs
mov
mov
or
mov
xchg
push
pop
mov
nop
xlat
pop
sub
pop
mov
mov
mov
push
dec
mul
jge
adc
add
fiadd
movs
sub
mov
cmps
aam
inc
sar
into
fs
clc
lods
call
sub
cmp
or
pop
int
movs
cdq
and
jbe
cdq
inc
push
pop
add
ds
jmp
mov
mov
ficom
cmp
addr16
pop
add
fs
push
jmp
xlat
cmp
stc
movs
xor
icebp
push
mov
sbb
xchg
icebp
sti
fcmovnbe
outs
sbb
and
and
jle
sti
test
cs
adc
stc
test
push
dec
cli
adc
jb
imul
lea
pushf
pushf
(bad)
inc
cmps
fiadd
scas
mov
(bad)
jb
pop
sar
stos
and
cmp
lea
cmp
cmp
add
ss
sti
stos
or
push
xchg
cmps
ins
inc
imul
bound
cdq
nop
test
call
idiv
add
jp
dec
sub
loope
jno
les
or
dec
cmp
or
inc
fwait
shr
add
icebp
jmp
leave
iret
imul
jg
pop
je
imul
ins
fmul
stos
jne
aad
sub
or
dec
cmc
nop
or
stos
mov
clc
adc
inc
sub
das
add
out
add
jmp
pusha
pop
push
test
movs
sub
sub
jbe
cmp
ficomp
jnp
jnp
xchg
pop
inc
mov
mov
lods
jecxz
cmc
jge
int
outs
stos
cmps
pop
jg
push
adc
dec
xchg
hlt
add
push
arpl
cwde
push
and
daa
int
clc
or
jg
cmc
and
or
inc
xor
add
lock
lahf
iret
jns
dec
jne
sbb
and
xor
mov
jp
push
xchg
sar
lahf
cli
popa
cdq
inc
and
out
mov
lidtw
jge
sbb
pop
mov
mov
inc
scas
punpckhbw
sub
inc
mov
mov
dec
mov
sub
mov
or
stc
dec
jp
mov
mov
cli
cli
xor
in
sub
or
xchg
cwde
les
push
in
mov
xchg
aam
arpl
pop
jno
ins
inc
mov
push
push
add
or
jns
and
pop
or
call
jg
aad
dec
dec
cld
mov
sahf
xor
test
adc
mov
nop
pop
inc
dec
jecxz
fwait
ins
cmp
mov
std
fadd
cmps
ror
mov
push
xchg
xor
popa
int
(bad)
sub
xchg
dec
add
jl
(bad)
mov
pusha
xor
loopne
pop
fistp
push
nop
call
movs
or
xor
aad
mov
aas
pop
arpl
enter
pop
fwait
xchg
loopne
ror
shr
pop
ret
mov
fadd
movs
repnz
and
sub
retf
pop
retf
mov
jb
and
inc
out
push
lock
mov
pop
aas
cmc
imul
mov
push
and
sub
lods
call
dec
shr
pop
jmp
jae
mov
ret
inc
dec
lds
fwait
cmp
in
shr
pop
popf
dec
out
cwde
jo
pop
repz
dec
jmp
add
adc
lds
mov
lea
mov
js
cdq
pop
in
and
inc
gs
and
test
xchg
leave
stos
loope
movs
icebp
dec
sub
(bad)
push
and
mov
int
(bad)
jno
addr16
cmp
ret
(bad)
mov
pop
mov
mul
jb
aam
push
inc
mov
out
daa
xchg
lahf
push
mov
adc
lock
adc
iret
daa
bound
push
ds
xchg
shl
and
sub
lahf
loope
rcl
xchg
sbb
out
stc
push
ficomp
popf
cs
loopne
pop
movs
add
stos
add
sub
das
(bad)
push
or
cmp
(bad)
or
xchg
jae
adc
test
cmp
dec
(bad)
jno
pop
jl
ret
ja
mov
clc
sub
cmp
mov
sub
dec
jnp
nop
ret
(bad)
fisttp
push
mov
std
or
std
mov
push
jnp
les
cmp
pop
push
popf
sahf
sbb
pop
popf
cmp
fsubr
xchg
cmps
shl
xchg
rdpmc
imul
add
or
dec
mov
jmp
inc
stos
(bad)
sub
out
mov
sbb
mov
xor
in
push
cs
pop
ja
mov
mov
adc
or
test
jo
clc
retf
in
xchg
inc
dec
adc
fstp
adc
cmp
push
out
repz
js
and
sahf
and
(bad)
inc
(bad)
hlt
in
mov
or
int3
mov
xchg
call
dec
pop
push
pop
mov
cdq
dec
mov
fisttp
mov
test
hlt
inc
ret
not
sar
inc
cli
aad
fwait
pusha
jnp
shl
and
in
add
push
imul
jmp
shr
xchg
scas
mov
xlat
mov
out
imul
or
lds
cmp
int3
dec
and
mov
lock
icebp
sub
push
cmps
ins
pop
repnz
lds
adc
mov
nop
scas
xchg
mov
in
jmp
or
mov
or
mov
mov
dec
fcomp
push
aam
aad
xchg
jecxz
cmps
cmp
add
movs
test
push
fs
mov
adc
test
mov
dec
shl
sbb
jmp
mov
adc
rol
cwde
and
fdiv
shl
mov
imul
jmp
cwde
es
pop
rcl
mov
lock
push
xor
xchg
jnp
sbb
cwde
loope
mov
(bad)
and
sahf
inc
mov
ss
loop
hlt
loopne
call
mov
xchg
shr
enter
dec
pop
xor
push
sub
xor
cmp
jne
in
movs
mov
out
addr16
xchg
sar
xchg
ds
cmc
fsub
cmp
sub
push
out
jne
cmc
push
in
test
inc
bound
ss
mov
sbb
fwait
stos
mov
test
hlt
mov
xchg
mov
int
xchg
(bad)
pop
ficomp
sub
loopne
mov
mov
xor
add
shr
mov
and
or
outs
out
xchg
sub
in
nop
(bad)
cmps
ret
outs
outs
xchg
mov
jmp
push
or
sbb
jmp
outs
xor
jge
cli
cmp
bnd
out
lods
mov
nop
jecxz
jle
cmc
mov
retf
ror
enter
dec
jp
sbb
pushf
inc
jmp
xchg
ret
retf
ss
lahf
dec
(bad)
sub
in
sbb
cld
or
ja
sub
aas
mov
test
mov
das
test
fbstp
and
pusha
ret
mov
jmp
push
cdq
push
iret
push
or
ins
xor
mov
scas
rol
mov
popf
pop
jp
inc
cmp
jo
retf
push
mov
gs
xor
popf
imul
popa
iret
mov
pop
adc
(bad)
push
pop
push
mov
aad
or
lods
les
and
sub
sbb
jg
inc
(bad)
aad
mov
out
fwait
cld
xchg
add
adc
mov
mov
or
es
out
jae
push
xor
mov
mov
loopne
mov
mov
jb
jmp
stos
aad
cld
jns
hlt
jmp
cmp
in
pop
pop
pop
and
ret
movs
lea
adc
es
push
and
mov
mov
and
push
cld
jmp
add
dec
pop
xor
(bad)
jp
cs
test
out
jmp
fst
sub
xlat
imul
mov
jge
out
push
lahf
xchg
es
mov
mov
jne
nop
dec
bound
call
mov
movs
jmp
fsub
inc
leave
mov
mov
jg
(bad)
imul
jle
dec
(bad)
(bad)
cli
or
push
or
dec
jbe
loopne
cmp
stos
fist
(bad)
inc
sbb
cmp
inc
ins
add
pop
dec
retf
cli
or
(bad)
and
mov
xor
ret
adc
aas
adc
and
xor
push
adc
xor
sbb
enter
lods
stos
das
inc
je
pushf
inc
add
fcomp
nop
add
scas
and
ss
xchg
outs
jge
fs
xchg
out
dec
stc
pop
inc
jg
jmp
adc
push
jmp
xchg
jmp
mov
pop
aam
cmp
xchg
out
cmc
mov
das
test
xchg
mov
fimul
sar
ss
dec
ss
xchg
cmps
mov
cli
cmc
js
rcl
mov
sub
gs
movs
sbb
push
push
loopne
jbe
cdq
dec
mov
jae
push
push
sbb
sbb
and
ins
test
jb
cmp
shl
pop
outs
dec
mov
and
cli
adc
jg
and
sub
cmp
pop
mov
dec
inc
imul
mov
mov
adc
push
mov
and
sub
lods
fs
dec
(bad)
sti
(bad)
jnp
jmp
push
inc
mov
mov
add
or
arpl
adc
jb
sub
test
loopne
jne
loop
ret
mul
push
adc
add
xchg
leave
push
aad
leave
cmp
test
(bad)
lods
cmp
push
out
daa
cli
repz
fstp
jmp
fwait
cmc
mov
pop
mov
jns
xor
push
mov
ins
push
xchg
and
data16
(bad)
aam
sub
ret
sub
and
push
(bad)
or
and
jmp
cmp
jle
lds
jns
fidiv
test
mov
call
push
xlat
push
call
repnz
daa
pop
div
pop
or
cdq
jns
or
fcmovbe
loope
mul
mov
call
mov
movs
js
cmp
in
adc
jle
inc
push
aaa
outs
cmc
rcr
data16
xchg
pop
aas
pop
adc
stc
sub
sbb
or
in
retf
xchg
cmp
add
popa
loopne
ins
(bad)
add
push
jnp
fs
jnp
adc
xor
sub
and
sub
jne
jmp
cld
xor
enter
or
mov
dec
fisubr
pop
cmps
inc
lock
pop
adc
clc
clc
jbe
pop
xor
jo
fcom
mov
mov
int
pushf
mov
pop
mov
dec
and
pop
cdq
aaa
pop
in
gs
int
jle
cmps
test
in
stos
push
adc
mov
loopne
js
pop
xchg
(bad)
sub
repnz
inc
jecxz
jne
cmp
daa
out
cmp
xchg
and
ret
pop
sub
test
and
jl
sbb
in
sti
fidivr
ds
and
xchg
call
xchg
push
dec
lea
lea
xor
cmps
push
xchg
cmp
push
sub
adc
dec
and
sti
sbb
xchg
jmp
fcom
(bad)
mov
mov
jl
mov
mov
or
movs
jnp
inc
mov
mov
push
add
mov
add
jbe
loope
repz
icebp
mov
xor
in
sub
shl
sbb
hlt
mov
pop
sti
xchg
xor
sar
movs
loope
loope
push
(bad)
nop
cmps
ins
jbe
adc
lock
sbb
out
lahf
adc
sub
push
mov
xchg
aam
ds
jmp
in
scas
xor
(bad)
sbb
ror
cmovbe
dec
mov
mov
mov
std
out
mov
add
pop
out
repz
aad
pop
add
xlat
mov
addr16
add
mov
jne
push
mov
std
push
xchg
and
mov
lods
stos
aas
cdq
sub
mov
add
retf
ds
data16
movs
adc
gs
cmpxchg
pop
iret
adc
inc
mov
jno
sub
inc
fmul
dec
mov
or
mov
iretw
mov
pushf
test
pushf
stc
aaa
dec
pop
daa
imul
and
cmp
adc
icebp
aas
jmp
aad
shl
retf
(bad)
loopne
push
mov
add
ss
daa
pop
push
nop
mov
push
jg
ja
ins
(bad)
test
ror
or
xchg
test
int
pop
mov
pop
frndint
xchg
iret
pop
jns
cmp
fimul
clc
pusha
add
push
sub
or
adc
iret
(bad)
imul
fwait
dec
fimul
dec
int3
pushf
pusha
les
mov
mov
loope
jae
mov
add
push
dec
rol
mov
jp
push
rep
fwait
mov
int3
pop
cmp
cmp
jmp
or
pop
inc
je
xchg
pop
outs
push
push
leave
mov
sub
in
jne
sbb
shl
pop
xor
mov
add
and
xor
call
pop
cmp
pop
ss
push
popf
fmul
xchg
lea
adc
xor
out
cmp
push
ja
dec
dec
push
jns
loop
inc
jne
xchg
pop
xchg
stos
sbb
jp
mov
ret
sub
fwait
and
mov
adc
popf
jae
enter
jge
js
aaa
loop
pusha
shl
sub
or
out
shr
add
mov
mov
sbb
arpl
sbb
mov
shr
arpl
out
mov
sub
xchg
stc
or
cmps
add
mov
mov
cdq
repz
pop
jne
add
push
pop
push
mov
xchg
xchg
sti
sub
test
aas
add
mov
lds
sbb
or
push
les
shr
in
cmps
mov
add
dec
mov
jmp
inc
cmp
(bad)
gs
mov
fnstsw
bound
stos
push
sbb
jne
jbe
sbb
es
pop
ins
fdivr
idiv
(bad)
aad
cld
pop
out
push
rol
in
aas
stos
mov
vphadduwd
jl
cdq
add
je
jno
shl
pop
fnstcw
cmp
jns
cli
aas
cmp
push
add
or
push
and
mov
pushf
sub
pop
dec
mov
jno
mov
sub
or
aam
(bad)
xchg
das
lock
push
xchg
pop
or
mov
sahf
test
add
popf
sub
and
test
jmp
cld
pop
jno
into
add
inc
(bad)
and
push
rol
rcl
jmp
or
jb
mov
pushf
ds
jge
fiadd
in
in
xor
fnstsw
retf
jmp
fwait
mul
(bad)
sbb
dec
loope
cmp
push
inc
repz
imul
(bad)
repnz
aad
je
and
jns
mov
arpl
push
mov
jne
(bad)
xchg
and
loop
ss
jge
inc
xchg
push
jecxz
cdq
dec
mov
and
mov
pop
test
ss
test
stos
stos
sub
push
jne
out
xchg
jmp
call
pop
call
ret
loopne
xchg
jns
jmp
add
shl
sbb
fisubr
mov
sub
cmp
scas
sbb
fst
sbb
cmps
imul
mov
cmp
jle
scas
jo
retf
sahf
xchg
shl
pop
in
jge
push
outs
mov
xchg
fnsave
inc
in
shl
(bad)
pop
scas
cmp
cmp
out
aam
mov
mov
inc
fidiv
jmp
les
call
repnz
and
inc
out
push
mov
jb
jbe
adc
clc
lods
(bad)
sbb
mov
pushf
mov
leave
xor
or
mov
mov
lahf
(bad)
push
mov
cli
pusha
nop
clc
jmp
test
sub
mov
cmp
lahf
pop
cmp
xchg
nop
les
in
inc
mov
adc
bound
mov
neg
xchg
pushf
retf
arpl
xchg
xor
push
add
leave
shl
jp
sbb
(bad)
lds
sbb
inc
enter
call
fild
cmp
(bad)
pop
dec
pop
jecxz
and
ja
test
into
enter
dec
out
and
out
hlt
xchg
pop
fprem
mov
xchg
ret
or
loopne
mov
nop
add
mov
mov
shl
cmp
xchg
add
mov
call
das
ins
cmp
adc
das
enter
push
jge
aas
clc
mov
cmp
cmp
push
arpl
mov
push
pop
mov
xchg
sar
pushf
mov
push
test
xor
mov
lods
stos
xlat
ins
dec
ins
mov
loop
ret
sti
sub
xchg
add
leave
hlt
xor
xchg
ins
dec
and
inc
in
cmps
sbb
arpl
or
fisubr
test
xor
pop
mov
add
gs
mov
inc
ins
jnp
sbb
fisubr
and
repz
xchg
mov
add
adc
mov
bound
inc
push
jecxz
sub
adc
je
mov
cld
jo
xchg
popf
sar
stos
(bad)
in
mov
and
inc
jg
push
pop
inc
aam
lock
xchg
cmp
xor
sub
mov
rol
xor
std
sbb
push
jle
sbb
imul
sbb
(bad)
mov
push
ret
dec
outs
dec
ror
loop
lea
cmps
in
and
out
iret
(bad)
in
mov
adc
outs
fcomp
das
xchg
xchg
jmp
ins
pushf
ins
imul
jmp
bound
and
jmp
dec
sbb
or
out
xchg
adc
test
jmp
call
and
push
inc
mov
test
popf
sub
or
jecxz
in
mov
out
call
push
mov
fs
cs
cmps
and
outs
movs
mov
(bad)
push
imul
loope
add
rol
sbb
lods
test
pop
and
push
aas
mov
push
mov
adc
(bad)
out
fidiv
and
xchg
inc
pop
xchg
into
mov
or
rcl
sub
push
inc
sbb
out
and
lods
stos
xchg
xchg
jne
popf
and
bound
sub
ds
movs
ret
es
xchg
jg
lods
mov
rcr
mov
jmp
data16
and
ins
cmp
das
jo
test
inc
shl
add
repz
(bad)
fistp
cmp
test
pop
rol
xchg
and
or
cmp
loopne
inc
shr
xlat
loopne
retf
das
mov
inc
hlt
addr16
sub
mov
jl
ret
inc
cmp
pushf
mov
jbe
call
adc
(bad)
inc
imul
shr
add
out
inc
mov
mov
mov
ins
cld
ins
mov
pop
(bad)
lahf
(bad)
les
push
mov
js
nop
sub
sub
dec
hlt
sub
aas
retf
jmp
mov
pop
mov
repnz
xchg
jecxz
sub
pop
xor
mov
mov
mov
jno
xchg
loopne
ret
mov
or
push
fs
dec
ins
fmul
mov
outs
not
sbb
das
jle
inc
(bad)
mov
adc
adc
enter
data16
jmp
mov
push
pop
dec
push
fidiv
push
inc
ins
mov
es
scas
test
in
cmp
mov
sar
jge
in
(bad)
xchg
and
add
mov
jns
in
dec
outs
mov
pop
xchg
test
add
push
clc
cmp
mov
(bad)
mov
mov
mov
jae
or
cmps
cwde
cmovno
add
fisttp
mov
jecxz
cmp
xchg
xchg
arpl
test
in
xchg
jo
inc
das
jno
aam
or
inc
dec
sti
clc
shl
sbb
cmp
lods
pop
popf
je
cmp
lea
repz
gs
mov
shr
idiv
xchg
and
aam
and
pop
rcr
mov
sbb
leave
popa
dec
mov
fldenv
retf
shl
push
mov
mov
and
adc
(bad)
inc
rcl
push
or
sub
mov
mov
cli
mov
lahf
outs
shl
cli
test
jb
jp
push
ficom
jg
(bad)
hlt
mov
dec
or
add
btc
ins
xchg
into
xor
or
xchg
push
and
sbb
jecxz
push
add
test
jnp
fisub
pop
mov
xchg
repnz
xchg
cmps
mov
xchg
imul
jmp
cdq
leave
pop
repz
mov
xor
jge
cmp
call
jg
sub
out
test
shr
cs
inc
fsubr
jo
retf
mov
push
add
popf
xchg
(bad)
inc
mov
push
mov
retf
mov
sub
add
pop
sub
ret
cmp
pusha
jb
add
push
adc
int
pop
lods
(bad)
push
pop
mov
pop
sub
call
mov
cmp
das
rcl
je
jb
xchg
dec
(bad)
push
fwait
inc
cwde
out
ret
add
and
jmp
loope
add
std
fdiv
cdq
sub
rol
jmp
or
loop
test
hlt
fcomp
stos
movs
pusha
cld
(bad)
(bad)
fisttp
out
int3
or
sub
adc
shl
lods
mov
or
jp
test
aad
ins
cld
rol
mov
xor
dec
pop
or
push
sbb
repz
mov
(bad)
cmp
aad
pop
(bad)
(bad)
dec
shl
into
jno
arpl
push
xor
test
adc
movs
outs
cmp
pop
and
call
mov
mov
stc
out
repz
mov
xchg
dec
and
xor
mov
push
ja
mov
sbb
sbb
fmul
add
and
(bad)
sub
jl
aaa
jnp
jl
dec
add
cmps
lods
cmp
fcmovnb
xor
and
out
(bad)
jo
pushf
shl
push
and
lods
pop
not
xchg
add
or
(bad)
mov
sbb
jmp
mov
daa
inc
int
and
pop
out
repnz
mov
sub
lods
sbb
inc
xrelease
cwde
sub
and
mov
ror
xor
pop
xor
lahf
iret
shr
mov
jb
push
inc
jno
push
jbe
sub
and
mov
in
test
stos
out
loop
inc
es
dec
sub
mov
stc
inc
mov
xor
jp
pand
mov
push
in
or
xchg
push
inc
iret
pop
adc
ds
inc
stc
and
call
call
jmp
call
ret
movs
xchg
xchg
xlat
jle
xor
add
aam
adc
add
or
and
out
cmp
mov
jmp
adc
push
or
(bad)
pop
push
repnz
fdiv
mov
pusha
mov
fwait
sti
imul
retf
jl
jl
test
outs
and
sbb
adc
daa
push
adc
test
fcmovnb
imul
movs
aam
push
and
add
push
push
push
bound
xor
popf
std
cmp
adc
add
push
movs
scas
push
add
xchg
test
pop
mov
pop
jns
jmp
sub
push
faddp
add
ins
sahf
jne
adc
or
daa
repz
sbb
inc
or
or
or
js
dec
sahf
(bad)
daa
pushf
mov
in
pop
and
xchg
je
mov
and
sbb
cmp
sub
dec
jnp
sahf
cmp
imul
aas
frstor
enter
pushf
mov
push
loop
ret
xchg
test
cmps
cmp
scas
xchg
lock
mov
mov
adc
jge
or
inc
cdq
in
into
xchg
pop
push
pop
jnp
aad
out
add
xchg
call
lods
push
mov
outs
push
daa
retf
push
js
lods
and
cmp
xlat
push
into
or
pop
daa
dec
inc
pop
(bad)
xchg
mov
in
addr16
cmp
inc
in
ins
mov
cmp
cmps
dec
dec
cmps
mov
jne
imul
fld
push
(bad)
pop
add
jb
inc
imul
das
xchg
cdq
ret
cmp
jge
ins
scas
dec
loope
jmp
int3
sbb
adc
mov
lods
lea
int3
imul
and
and
test
inc
in
es
push
mov
cmp
inc
test
scas
xchg
adc
(bad)
xchg
stos
stc
add
int
xchg
pushf
xchg
fst
xchg
or
sbb
xlat
mov
cmp
fild
out
and
popf
scas
es
jg
mov
lock
loopne
(bad)
jg
and
stos
call
stos
ror
xchg
mov
dec
ret
push
aaa
mov
sbb
not
stos
cmp
jecxz
sub
and
(bad)
dec
movs
mov
mov
pop
cmc
outs
xor
sbb
dec
sub
sbb
push
push
add
inc
daa
jmp
pop
dec
adc
xor
push
push
mov
mov
dec
xchg
jae
xchg
xor
jg
(bad)
pop
cmp
test
scas
das
xchg
out
enter
out
aaa
sub
int
jnp
cld
scas
and
xchg
cmp
rcl
in
ror
fsubr
leave
sub
pusha
mov
aas
cli
rcr
cmp
leave
push
push
imul
jmp
mov
aam
adc
and
out
aas
movs
stos
out
add
aad
in
repz
add
sahf
jb
es
ds
(bad)
imul
les
pop
dec
jecxz
and
mov
hlt
fcom
imul
pushf
cmp
mov
push
sbb
into
mov
xchg
int
lods
int
add
cmps
(bad)
rep
pop
adc
test
adc
pushf
push
ror
mov
mov
cmps
gs
call
ds
jne
xchg
das
test
sbb
or
popa
imul
mov
int
xor
xor
xchg
fs
data16
test
in
js
adc
xchg
push
in
sub
out
mov
fwait
sbb
fsub
(bad)
mov
xchg
fmulp
data16
xor
lods
push
fwait
(bad)
sti
into
sub
std
dec
es
push
mov
jns
leave
pop
lock
jle
stos
loope
pop
mov
xor
push
lea
mov
mov
xchg
das
inc
xchg
xchg
sub
mov
movs
cmc
xor
ret
(bad)
out
lds
push
unpckhps
push
mov
adc
xor
into
xor
xor
pusha
into
jecxz
adc
lea
outs
nop
sar
ins
pop
pop
pop
xchg
cli
not
stos
cli
out
test
inc
sub
dec
shl
inc
(bad)
mov
and
dec
test
mov
shl
data16
xor
fwait
cdq
(bad)
aam
jns
or
dec
jge
jmp
jmp
or
push
rcr
mov
jae
adc
retf
js
xor
xchg
jae
out
out
data16
adc
push
or
js
in
add
retf
mov
or
xor
lahf
dec
jmp
scas
mov
fimul
mov
mov
mov
call
mov
popa
test
xchg
inc
out
cwde
mov
mov
fwait
scas
cmps
add
fidivr
xchg
in
popf
dec
sbb
xchg
lds
xor
ja
cmp
push
xor
out
retf
pop
icebp
mov
sbb
inc
aad
movd
enter
xchg
stos
fwait
sub
and
fsub
pusha
gs
pop
push
pop
ins
adc
jne
sbb
jno
inc
pop
movs
push
sub
ins
fistp
lods
movs
xchg
and
aaa
out
jb
add
sbb
(bad)
pushf
push
jb
fld
mov
push
rcl
dec
ja
add
shl
sahf
dec
fstp
mov
push
jns
cmps
fmul
dec
inc
mov
repnz
add
xchg
arpl
out
sbb
dec
idiv
push
inc
dec
xchg
out
pusha
sti
das
cwde
and
cmp
(bad)
xor
mov
cmp
(bad)
xor
in
pop
imul
jmp
(bad)
jmp
or
test
aam
and
nop
add
cmp
or
pop
fdivr
aad
mov
mov
scas
cmc
sub
bound
out
push
scas
pop
add
pop
icebp
enter
std
mov
fld
sbb
mov
jg
xlat
mov
loope
shr
fsubr
scas
jo
mov
add
or
arpl
jmp
retf
es
mov
or
inc
out
push
sub
popf
xor
push
sbb
cmp
cs
dec
fs
fsubrp
pusha
add
mov
shl
pop
and
ins
jecxz
arpl
push
mov
lods
and
jmp
popa
arpl
sahf
mov
inc
mov
retf
fisttp
movs
xor
data16
jecxz
mov
movs
mov
fmul
and
jmp
aad
shl
or
mov
pop
jge
(bad)
pop
aaa
stos
add
pop
xlat
mov
fs
xchg
jnp
sub
div
into
pop
lahf
(bad)
mov
ret
xchg
jle
cld
sub
sub
mov
fisttp
loopne
xor
and
aam
lahf
(bad)
jecxz
pop
push
xchg
mov
dec
pop
pusha
gs
inc
ss
cmp
shl
or
cmp
bnd
xchg
clc
hlt
test
mov
rcl
xor
addr16
fdiv
cmps
icebp
jne
movs
xchg
pop
inc
jge
in
adc
in
xor
imul
cmp
sub
out
mov
cmp
rol
mov
cmp
add
mov
shl
adc
inc
push
mov
ret
sti
cmps
ss
sub
cmp
cwde
(bad)
mov
(bad)
(bad)
add
push
sbb
scas
fs
aad
xchg
aas
pop
push
xchg
and
(bad)
pop
dec
mov
pop
aaa
fmul
ds
adc
xchg
add
in
dec
adc
xor
repz
xor
push
call
das
fidivr
sbb
add
or
adc
lea
jb
pop
hlt
aas
mov
xchg
fst
in
xchg
div
pop
aaa
xor
mov
inc
dec
aas
das
ins
pop
inc
lods
cmps
push
push
std
mov
mov
lds
call
jge
mov
xchg
xor
cdq
adc
in
dec
or
lds
mov
xlat
pop
aas
loopne
pop
pop
push
arpl
push
mov
xor
add
jbe
xor
push
or
je
mov
add
fs
mov
divps
and
adc
inc
aad
retf
pop
es
ss
mov
lahf
sbb
aam
nop/reserved
jmp
pop
push
xchg
pop
mov
pop
xor
int
addr16
sbb
add
mov
(bad)
mov
(bad)
fild
pop
data16
xor
into
popa
sub
or
int
xchg
loop
pushf
xor
and
fnstsw
mov
sbb
outs
pop
call
sbb
pop
leave
mov
push
adc
pop
inc
inc
mov
inc
das
mov
iret
loope
movs
fld
inc
push
popa
fbstp
shl
ja
push
xor
dec
push
ret
pop
xor
xlat
iret
sub
movs
inc
dec
jle
mov
pop
inc
mov
pop
mov
pop
push
mov
pop
call
clc
dec
add
ins
adc
xchg
stc
test
mov
cmp
fwait
xchg
out
mov
inc
stos
pop
lds
lea
cmps
lods
aad
arpl
pop
cmp
xchg
pop
sbb
mov
xchg
dec
push
pushf
fimul
inc
mov
jl
xlat
push
jl
cmps
mov
mov
cmp
es
inc
sbb
test
push
pop
push
repz
push
mov
jno
rcr
pop
aaa
in
cmps
xor
stos
hlt
push
sub
mov
rcr
mov
mov
shl
mov
out
add
lds
cs
test
adc
int
sbb
das
loop
fdivr
mov
mov
dec
adc
adc
(bad)
jmp
xor
sbb
sar
inc
xor
mov
arpl
fiadd
imul
std
mov
sbb
(bad)
enter
dec
push
scas
inc
push
ret
rcr
push
ret
mov
sbb
mov
xor
xor
mov
mov
pusha
cmps
lods
gs
and
in
cld
jl
push
ror
push
fild
adc
rcr
mov
or
(bad)
iret
or
imul
clc
aas
or
fdivp
pop
cmp
sbb
jge
pop
pop
iret
add
cmp
inc
and
cmp
popf
das
stos
sbb
call
rol
push
cmc
lahf
retf
adc
jmp
push
nop
mov
jge
mov
pop
pop
cli
sbb
pop
mov
push
call
leave
add
fs
js
mov
cs
je
xor
or
in
jg
ins
xchg
repnz
fld
inc
inc
gs
fiadd
sar
dec
sbb
int
das
and
dec
jb
push
daa
adc
inc
fild
adc
mov
sub
add
mov
pop
push
call
aam
dec
inc
dec
pushf
sahf
sub
rcr
or
mov
mov
(bad)
sub
lods
sub
mov
fmulp
sub
xchg
retf
mov
pop
xchg
inc
adc
lea
(bad)
test
push
adc
les
inc
add
je
lahf
outs
dec
mov
dec
sbb
jg
xor
dec
retf
mov
mov
sbb
push
mov
xor
dec
enter
es
out
test
add
sub
arpl
in
out
mov
mov
cmp
sub
pop
sbb
sahf
cmps
movs
(bad)
cld
xor
xor
or
mov
js
or
push
retf
jbe
cs
fs
mov
or
inc
adc
xchg
or
scas
add
push
xor
and
dec
mov
in
lea
cmp
pushf
jl
cmp
(bad)
loop
bound
mov
add
push
inc
outs
mov
xchg
pop
lahf
mov
jmp
arpl
cmp
push
lods
cmps
cmc
xchg
push
neg
in
(bad)
out
(bad)
(bad)
mov
push
pop
lea
mov
leave
std
xor
loopne
daa
adc
xor
frstor
aaa
xchg
arpl
sub
fdivp
mov
inc
test
stc
shl
fwait
xor
mov
adc
fwait
aas
retf
pop
adc
xchg
popa
xchg
imul
sbb
xor
(bad)
leave
push
sti
imul
pushf
nop
dec
adc
dec
loopne
dec
and
cmp
(bad)
and
(bad)
loopne
mov
jns
or
shl
sbb
mov
out
xchg
add
dec
jmp
popf
lock
jge
fadd
push
pop
imul
in
mov
jne
mov
mov
movsx
les
scas
push
ret
je
dec
sti
(bad)
fdiv
fadd
imul
fcomp
xchg
loop
inc
and
push
and
popf
push
nop
popa
mulps
mov
push
xor
cmp
or
(bad)
mov
add
je
push
sbb
daa
inc
xchg
push
sub
mov
pop
lds
cmp
aaa
and
and
jne
enter
xor
dec
cs
(bad)
xor
inc
icebp
jbe
out
daa
adc
pop
push
push
aad
sbb
jl
dec
loope
movs
push
mov
(bad)
xchg
pop
mov
xchg
inc
mov
xchg
lahf
dec
push
or
adc
and
pop
sbb
mov
push
adc
call
sub
pop
adc
jmp
pop
lds
je
hlt
sbb
cmp
(bad)
hlt
and
fsubrp
lds
in
xlat
sub
outs
ret
dec
not
xchg
mov
add
push
push
jbe
push
or
out
xor
stc
push
shr
retf
dec
call
sbb
push
rcr
mov
or
jnp
dec
adc
mov
and
jp
stos
dec
pop
jno
aam
mov
(bad)
bound
mov
cld
popf
mov
popf
stc
pop
jg
xor
xchg
mov
xchg
sar
sub
imul
test
xchg
sbb
mov
push
scas
jge
iret
cmp
icebp
addr16
mov
imul
bts
aas
out
inc
nop
mov
cmp
mov
inc
sub
mov
mov
retf
call
ss
xchg
cmpps
lods
fsub
loope
mov
mov
push
jbe
inc
rol
lahf
xchg
mov
out
mov
aaa
sub
mov
sub
out
aas
nop
(bad)
lods
cmovs
and
jb
adc
aad
dec
aad
fst
pop
push
push
sar
sbb
jmp
or
xor
adc
js
int3
lods
xlat
fimul
in
mov
je
adc
ds
mov
mov
nop
test
imul
daa
lds
jge
pop
out
dec
jo
test
arpl
mov
clc
adc
or
cmp
sahf
mov
mov
repz
fst
or
xchg
retf
jmp
lahf
bound
xchg
xchg
into
test
outs
jmp
loop
ja
push
mov
adc
fld
loopne
mov
test
nop
or
outs
pop
cli
fwait
xchg
sahf
int3
ins
sahf
mov
data16
adc
(bad)
and
fucomp
out
dec
xor
cmp
(bad)
in
lahf
adc
cmp
mov
test
test
aaa
dec
fwait
and
ds
stc
mov
adc
mov
enter
jecxz
push
mov
jns
mov
jnp
fst
pushf
in
pop
pusha
fimul
dec
jmp
or
mov
cwde
mul
xor
inc
jb
fcomp
sub
pop
(bad)
push
cwde
in
cmp
push
into
loopne
cwde
mov
inc
mov
(bad)
mov
cmps
sub
inc
mov
pop
push
dec
jo
mov
out
add
fmul
cmp
ins
add
sahf
call
repz
fsubr
dec
cli
lods
xchg
mov
gs
push
inc
inc
leave
inc
stos
adc
push
mov
and
mov
xchg
addr16
add
test
dec
lods
aaa
leave
into
dec
loopne
jne
push
jg
xor
(bad)
dec
push
test
(bad)
xor
jle
sbb
lods
push
and
add
xchg
or
aam
jo
test
xchg
movs
or
clc
adc
cmp
repz
cli
jnp
add
push
sub
in
lods
jmp
jg
lock
mov
dec
add
(bad)
push
sub
sbb
pop
and
jns
or
outs
xchg
xchg
popa
jnp
ins
jne
push
mov
sbb
bnd
aam
cmps
xor
and
imul
out
movs
mov
xchg
sub
xchg
repnz
adc
and
cmps
or
loopne
loop
imul
xor
mov
push
xchg
cmc
movs
mov
lods
mov
jns
fidiv
iret
xor
pop
xor
jns
fisubr
cmps
or
mov
push
call
add
repz
jb
xlat
inc
pop
mov
ror
jmp
aas
and
ins
ja
xor
stc
mov
popa
push
jno
cmp
fucomi
ins
in
xor
ret
sahf
(bad)
in
std
adc
arpl
out
pop
popf
push
push
jmp
cmps
or
lahf
mul
repz
retf
xchg
daa
push
xor
cli
mov
adc
push
out
ror
std
cdq
push
scas
xchg
lahf
jb
fwait
and
mov
xor
xor
push
xor
fst
loop
les
cmp
dec
gs
mov
mov
jmp
inc
mov
and
leave
ins
mov
jnp
(bad)
adc
lods
sub
fwait
outs
xchg
inc
aaa
jmp
xor
sbb
test
aad
xor
ins
rcr
push
cs
ret
sub
pusha
ja
movs
cs
sbb
sub
add
inc
fsub
xchg
mov
popf
add
dec
ins
ins
rol
push
inc
xor
js
pusha
ror
xor
cmp
out
call
jo
cmps
and
imul
cmps
xor
ret
or
je
outs
dec
push
ret
add
je
movs
push
retf
sti
repz
cmp
repnz
rcr
lea
dec
std
jbe
fsubr
mov
das
dec
test
jg
mov
ss
test
jno
ins
sub
int
push
push
hlt
je
stc
push
push
imul
sar
mov
pushf
xchg
cmp
pop
rol
cs
loope
int3
sub
int
and
mov
das
outs
(bad)
loopne
jge
loope
fstp
daa
pslld
jg
push
lods
out
add
dec
jmp
push
in
loop
(bad)
push
jle
cmp
xor
add
aad
dec
sbb
xor
mov
add
pop
jo
cmp
xchg
pop
sub
add
pushf
(bad)
adc
test
fnstcw
xchg
push
rol
xchg
adc
cmp
dec
(bad)
mov
mov
out
cmp
mov
mov
clc
popf
imul
imul
inc
shl
jb
mov
mov
cmp
idiv
test
lds
sbb
xchg
cmps
or
inc
fsub
push
stos
sbb
jl
jmp
jmp
inc
inc
outs
push
jl
imul
push
jge
inc
sub
mov
loope
movs
aaa
ret
mov
or
xor
lahf
out
xchg
mov
gs
push
pusha
sar
push
or
mov
push
sbb
jge
sar
pop
adc
cmp
pushf
add
mov
add
inc
and
pushf
aam
add
les
pop
imul
fdivr
(bad)
push
into
int3
push
loope
mov
sbb
lahf
ret
sub
pop
imul
mov
pop
mov
pop
mov
sbb
push
inc
mov
mov
mov
ror
mov
or
test
in
xor
jecxz
sqrtps
ds
sub
add
clc
jns
pop
sbb
(bad)
mov
dec
sar
mov
push
inc
or
xchg
fs
lods
or
xor
data16
fcmovu
adc
xor
out
xor
sub
retf
in
or
add
mov
adc
lds
jno
or
retf
out
jnp
fisub
sub
xor
push
mov
retf
mov
pop
xchg
xor
push
(bad)
mov
fsub
(bad)
out
pop
dec
inc
sbb
movs
jb
or
push
and
xlat
fisub
shl
push
(bad)
cmps
mov
fadd
loopne
lods
cmp
and
fidiv
adc
pusha
test
adc
or
ds
cmc
pop
mov
mov
cld
out
rol
xor
add
cmp
sbb
scas
mov
out
js
stos
xchg
fnstsw
call
cmp
repz
cmp
repz
out
pop
jge
je
cmp
xchg
imul
add
pop
mov
adc
repnz
sub
imul
pop
mov
jle
push
lahf
sub
inc
push
push
movs
mov
bound
sahf
bound
fiadd
data16
sub
sbb
xor
jne
neg
pop
call
mov
mov
lock
push
out
loope
xor
xor
mov
push
or
cmp
jb
push
outs
sahf
sub
mov
test
mov
rol
add
add
mov
das
in
cmp
test
mov
push
cmc
rcl
test
ins
fcomp
jae
jo
in
jmp
mov
test
push
inc
call
fadd
retf
or
stc
pop
pushf
data16
out
and
pop
mov
bound
dec
(bad)
out
adc
in
add
or
enter
retf
and
and
or
sbb
sbb
add
inc
dec
and
neg
xor
call
add
and
fwait
jg
sub
dec
outs
js
xchg
scas
mov
mov
ror
jne
test
clc
jnp
int
div
push
cld
mov
clc
mov
cmc
ds
xchg
je
add
jo
xor
add
add
les
rcr
stos
cmp
push
data16
mov
lea
in
inc
xchg
push
and
mov
retf
adc
inc
cld
les
xor
lahf
pushf
retf
clc
sub
hlt
cdq
shl
test
pop
sbb
pusha
inc
shl
push
fwait
in
jbe
xchg
fidiv
lods
lods
push
(bad)
clc
jns
mov
jp
adc
xchg
or
(bad)
pushf
adc
sub
xor
mov
jno
or
xchg
jno
mov
setno
mov
pop
mov
repz
cmp
sbb
sti
inc
add
aaa
je
mov
adc
xchg
pop
mov
push
fcmovu
mov
push
jl
fcmovb
xchg
sbb
std
push
fcmovnbe
mov
xchg
out
mov
nop
mov
data16
out
adc
cmps
(bad)
lods
in
adc
movs
dec
xor
mov
cwde
stc
mul
jae
inc
iret
mov
xor
push
aas
mov
or
cmp
jbe
rol
mov
gs
fnsave
push
or
adc
jge
int3
imul
cmps
lods
jp
cwde
test
dec
inc
mov
test
pop
lods
dec
stos
scas
add
and
dec
shl
and
retf
fimul
mov
in
(bad)
xchg
xor
push
shl
xor
imul
cmps
dec
push
je
stos
sub
jmp
mov
test
xlat
cmp
std
imul
(bad)
imul
and
dec
cli
adc
and
aas
inc
xor
shr
enter
inc
call
mov
xchg
jl
stos
ds
adc
sub
call
loopne
loopne
test
and
fimul
jns
(bad)
in
imul
dec
rcl
in
cmp
xchg
fld
add
push
lahf
xor
aad
mov
jg
xchg
addr16
aad
and
ror
lods
call
movs
jns
daa
aam
push
in
adc
mov
rcr
mov
lahf
xor
xor
or
fs
icebp
and
jecxz
jmp
pop
dec
inc
sub
call
(bad)
loop
or
iret
test
adc
mov
bnd
movs
bound
pop
sub
xor
aad
leave
imul
cmps
push
movs
outs
add
cmp
jl
sbb
in
sub
or
mov
mov
pop
retf
xor
push
imul
push
ret
movs
sbb
and
pop
jno
stos
jp
xbegin
cmp
ficom
adc
pop
mov
(bad)
ins
and
clc
push
inc
dec
sub
cld
sbb
pop
mov
xor
mov
cmps
or
test
push
(bad)
cmp
add
fidiv
jle
(bad)
mov
outs
fwait
js
jae
xlat
movs
sbb
out
mov
in
neg
mov
movs
rol
call
adc
hlt
out
jp
daa
xchg
outs
mov
jmp
xchg
push
in
push
test
sbb
xor
adc
sar
push
pushf
xor
push
lea
rol
sub
push
mov
and
mov
and
cmp
loopne
pop
(bad)
es
(bad)
xor
xor
cdq
pop
mov
push
xchg
out
loopne
(bad)
push
shl
cmp
arpl
aam
pop
and
mov
pop
fwait
loope
(bad)
pop
sar
cmp
outs
ins
sbb
cmp
push
test
mov
data16
cmp
imul
in
and
gs
fldcw
or
shl
sbb
out
inc
movs
or
pop
mov
test
rcr
xlat
arpl
(bad)
dec
mov
jmp
scas
stc
(bad)
arpl
mov
in
in
jecxz
lods
adc
fsub
rcr
xor
xor
push
in
xchg
jne
pop
mov
jo
imul
mov
xlat
or
jno
dec
pop
xchg
jmp
jle
jl
or
or
sahf
stos
push
out
mov
ins
sub
push
sub
shl
xchg
xchg
pop
mov
arpl
sahf
loopne
pop
xchg
add
jle
xchg
or
fwait
sbb
fild
mov
loop
dec
neg
xchg
sbb
in
and
mov
jmp
inc
rcr
lods
jl
jle
retf
bound
push
adc
and
add
call
pop
push
leave
mov
xchg
jns
fbstp
xchg
and
ds
ds
inc
push
ss
out
jp
fnstcw
fcom
cmc
cmp
test
pop
adc
pop
(bad)
lock
pop
es
adc
sbb
nop
and
in
in
and
dec
arpl
xor
push
out
xchg
popf
lods
dec
jno
(bad)
jmp
test
push
mov
xlat
les
push
add
mov
sbb
div
stc
inc
retf
sbb
das
cwde
dec
sbb
popa
cmp
retf
(bad)
(bad)
sub
pop
or
ret
or
icebp
adc
xchg
mov
sar
ss
mov
push
or
stos
in
inc
stos
push
push
sbb
stc
je
jo
nop
xor
push
stc
arpl
fwait
adc
jno
and
and
lods
mov
push
retf
pop
mov
cmps
aaa
dec
ror
push
mov
pop
pop
out
int3
test
out
mov
jp
inc
std
sbb
sbb
and
pushf
inc
fisttp
mov
in
fisubr
jne
ja
daa
in
dec
pusha
aam
mov
mov
aaa
add
push
bound
pop
test
lea
std
or
mov
and
pop
inc
cmp
dec
cmp
jae
jmp
xlat
loope
dec
test
sub
test
pop
test
pop
adc
lahf
ins
mov
jmp
ror
icebp
test
pminsw
xchg
pop
fstp
cmp
jbe
and
and
xor
xchg
mov
sbb
int
jnp
cmp
push
arpl
ins
jl
aam
clc
mov
jbe
aas
movhps
xchg
xor
cdq
test
pop
rcl
imul
cmps
arpl
cdq
inc
les
dec
aaa
(bad)
jmp
fld1
xchg
in
movs
stos
and
fucom
mov
jbe
adc
fisubr
pop
scas
sti
pop
add
dec
scas
mov
cdq
test
lds
or
loope
shr
dec
push
xchg
mov
add
fwait
jl
(bad)
xor
xchg
loop
mov
push
loop
inc
inc
mov
or
mov
call
aam
aaa
jno
jb
imul
mov
retf
push
stc
push
xchg
inc
xor
das
adc
idiv
ins
xor
jle
aam
sub
push
pop
test
xchg
cmp
and
push
or
lods
add
adc
push
add
mov
test
test
push
es
sbb
push
fnstcw
stos
retf
leave
loope
add
pop
mov
out
xchg
and
mov
rol
inc
adc
mov
sbb
inc
clc
or
push
(bad)
in
sbb
(bad)
cmp
sub
pop
xor
popf
sub
scas
iret
add
or
stc
loope
push
push
cs
mov
mov
dec
sub
add
sbb
or
imul
mov
(bad)
sub
ins
stos
fild
adc
jae
(bad)
iret
cmps
int
bound
cld
shl
pop
pop
int
cmp
and
add
(bad)
fidivr
and
mov
push
fwait
inc
mov
jmp
fnstenv
and
mov
cmps
sub
aam
es
icebp
pop
stc
push
adc
mov
xchg
lds
mov
fld
xor
and
push
cs
xor
add
sbb
push
mov
adc
cmps
add
sbb
add
outs
clc
add
repnz
icebp
in
push
dec
push
mov
add
mov
and
xchg
shl
fcomp
sbb
mov
arpl
mov
dec
jmp
inc
(bad)
and
es
sbb
pop
call
mov
addr16
les
arpl
sbb
sbb
ficomp
test
dec
int
pop
stos
cdq
lea
retf
retf
fidivr
lds
test
repz
jae
mov
pop
dec
fwait
or
cmp
ds
loope
adc
cmp
jge
jne
aas
push
inc
xor
pop
test
mov
lock
add
jg
in
pop
push
aaa
pop
jmp
movs
push
test
in
or
rol
mov
ret
cmp
xor
fidiv
out
push
in
pop
jns
fwait
or
fstp
or
adc
push
aas
and
jno
mov
mov
add
(bad)
ja
cmps
push
sub
ret
ss
xor
movs
popa
in
xlat
and
in
popa
mov
shl
jl
mov
push
sbb
push
xor
adc
pop
and
sub
mov
mov
sbb
adc
mov
jnp
push
call
xchg
inc
outs
adc
and
mov
fst
call
mov
int
aam
xor
push
or
aad
fstp
ret
sbb
adc
mov
and
cmp
mov
dec
stc
scas
out
and
in
imul
test
mov
and
in
lock
aas
outs
inc
mov
stc
mov
test
leave
outs
sar
loope
sbb
in
xor
out
jns
out
xor
jg
jne
jmp
push
sbb
(bad)
mov
mov
push
mov
dec
jae
daa
int
icebp
fisttp
push
test
outs
pop
mov
inc
movs
lds
lea
or
xor
outs
cmp
test
fcmovnu
lea
sbb
loope
pushf
scas
xor
cmc
jg
outs
inc
int
or
mov
xchg
call
mov
adc
das
jns
int
(bad)
psrlq
shl
fcmovbe
and
iret
neg
jne
cmp
jg
mov
ror
fcom
imul
aad
nop
and
js
add
jmp
ror
ret
std
(bad)
cmp
addr16
idiv
mov
push
mov
mov
in
ss
ja
xor
inc
add
adc
sub
cdq
ret
clc
jmp
sbb
jmp
cld
xchg
cmps
pop
int
xchg
call
mov
push
into
push
clc
out
dec
jnp
inc
les
pop
mov
pop
lahf
bound
(bad)
mov
stc
mov
xor
jae
push
div
lahf
adc
mov
pop
rol
les
push
or
outs
or
add
retf
mov
xor
xor
jbe
push
push
and
push
and
cmps
and
ret
test
movs
lods
sub
push
icebp
adc
imul
xchg
fnstsw
mov
push
shl
xchg
add
add
sub
and
cwde
xchg
repnz
shr
jno
aas
ins
lods
lds
dec
mov
cmps
aaa
iret
jmp
in
int
shr
mov
fdiv
popf
retf
cmc
movs
add
pushf
in
mul
xchg
outs
enter
xor
mov
push
mov
into
div
mov
or
or
inc
and
add
and
mov
shl
ss
jo
mov
sub
loopne
ret
lea
pop
cli
lea
and
inc
js
mov
je
mov
test
pop
stc
test
pop
fistp
pop
jmp
rcr
add
out
adc
sbb
jo
sbb
cmp
cmp
pop
lds
xchg
mov
xchg
or
in
sbb
pop
out
jecxz
imul
imul
imul
outs
(bad)
jecxz
fs
enter
xchg
adc
dec
xor
inc
divps
movs
mov
inc
fucom
in
push
lods
inc
push
mov
pop
outs
(bad)
fild
test
sub
xchg
inc
pop
inc
retf
cmp
jae
add
cs
pushf
mov
rcl
ret
cwde
cmp
sub
push
dec
jl
dec
(bad)
fs
inc
jle
mov
imul
nop
mov
and
ret
pop
inc
push
test
es
push
mov
out
inc
jb
pop
enter
ror
sub
mov
and
test
idiv
jne
ja
in
out
mov
xchg
into
xchg
jns
or
jp
jne
bound
fwait
and
arpl
ror
pop
imul
jecxz
xor
pop
aaa
mov
mov
aas
int3
iret
xchg
fdivr
nop
movs
test
enter
cmps
pop
pop
sbb
jne
test
pop
adc
adc
xor
inc
pop
dec
rcr
pusha
ins
mov
rcr
pop
and
std
adc
jbe
xchg
int
adc
out
enter
js
push
out
inc
inc
inc
cld
jne
or
xchg
mov
ret
mov
popf
test
pop
cs
out
in
jg
into
sti
scas
pop
sub
in
and
into
lahf
rol
mov
enter
xlat
imul
xchg
pop
sbb
(bad)
or
cli
sub
pop
(bad)
mov
sbb
daa
scas
or
and
jl
lahf
pop
push
adc
fucomp
xlat
pop
hlt
sub
sub
in
aam
xchg
(bad)
cld
push
cli
dec
shr
or
out
stos
retf
sub
leave
clc
lods
add
pop
sub
scas
test
stc
xor
stc
mov
add
(bad)
jecxz
jecxz
popf
outs
sub
scas
cld
xchg
xor
pop
fsubrp
adc
jns
inc
add
xlat
xchg
aam
cdq
adc
sbb
adc
daa
int3
jl
sti
jmp
mov
xchg
jecxz
add
imul
iret
(bad)
push
sub
pop
pop
pop
adc
sub
cwde
popf
xchg
pop
add
loope
add
out
fimul
cmp
sbb
xchg
mov
sar
jae
sbb
inc
cmps
loopne
push
adc
cmp
repz
ficom
arpl
push
fsub
dec
imul
dec
xchg
repz
out
push
mov
inc
scas
sbb
sbb
aas
adc
cmps
sub
dec
and
mov
pop
add
adc
adc
sbb
out
stos
inc
dec
loop
(bad)
sbb
inc
mov
sbb
rol
ins
in
xor
adc
xchg
gs
inc
xor
pop
pop
pushf
clc
ror
scas
pop
or
jbe
sti
inc
pop
fucomi
mov
into
mov
mov
call
xchg
and
jno
cmp
cvtps2pd
push
(bad)
xchg
lods
mov
or
rol
es
mov
dec
push
repz
imul
jbe
gs
mov
shr
aam
mov
pop
test
xchg
imul
lods
das
push
sub
sbb
mov
loopne
sar
js
jbe
and
push
push
data16
adc
ret
sub
sbb
sahf
icebp
or
push
mov
pop
(bad)
jbe
neg
inc
rol
fild
ja
cmp
mov
dec
mov
outs
cwde
sub
sub
or
std
hlt
lahf
(bad)
(bad)
mov
or
cs
repz
xchg
adc
sbb
cmc
push
dec
lock
stos
daa
jl
mov
mov
leave
inc
jmp
stos
pop
dec
(bad)
shl
jae
mov
xchg
inc
push
movs
jl
sbb
jae
mov
sub
loope
xchg
inc
cld
int3
jge
stos
xor
mov
adc
jl
xchg
sbb
or
scas
jae
mov
je
cmp
call
dec
mov
sbb
int
cmp
cld
sahf
sub
sbb
sub
sti
aaa
jl
cdq
sub
movs
aaa
sub
inc
cli
add
lods
outs
rol
(bad)
cmp
jns
(bad)
dec
popf
xchg
mov
test
mov
mov
lea
xchg
dec
fcmovb
push
push
dec
outs
imul
push
mov
fld
inc
movs
into
push
mov
pusha
push
pop
fcom
xor
in
fnstenv
popa
out
inc
loopne
jge
gs
jbe
outs
and
sub
jg
test
sahf
ret
fnstenv
mov
sbb
dec
xchg
inc
pusha
and
cmps
stos
pop
int
mov
xor
pop
mov
rol
jmp
sbb
pop
push
jns
int3
clc
loopne
fnstcw
es
add
imul
faddp
cmp
movs
push
fwait
in
cmp
call
xor
mov
mov
es
push
sub
repz
jle
lock
pop
mov
imul
inc
and
mov
mov
add
das
pop
or
sar
pop
(bad)
push
xlat
das
out
call
ror
xchg
add
cs
es
rol
(bad)
arpl
add
and
jno
and
pop
cmps
pop
fs
pop
jmp
outs
xchg
div
cmc
cmc
or
out
mov
ret
inc
push
call
das
pop
mov
aas
jb
jmp
sub
rcl
adc
sbb
jbe
jne
sbb
out
outs
dec
jecxz
mov
mov
pop
mov
cmc
std
lahf
jmp
aaa
enter
xchg
pop
lods
fwait
mov
mov
mov
test
mov
mov
int
aam
stos
ja
scas
out
ret
push
and
or
inc
sub
into
in
imul
inc
mov
lahf
outs
inc
inc
jecxz
stc
cli
fnstenv
cmp
stos
repnz
push
lock
pop
mov
ret
cmp
jno
frstor
mov
sbb
jmp
stos
sub
mov
mov
scas
xor
imul
out
cmp
test
adc
hlt
pop
ret
or
fldcw
xor
ins
nop
sub
push
in
dec
cld
loopne
(bad)
or
pop
in
sub
pop
xchg
(bad)
repz
(bad)
xchg
shl
xchg
outs
jnp
jecxz
inc
xlat
repnz
xchg
movs
sub
mov
xchg
and
sbb
xacquire
add
popf
push
rol
in
push
sub
xor
(bad)
mov
mov
adc
retf
repz
das
inc
push
pop
sar
cmp
inc
jo
mov
mov
fnstsw
fcom
dec
lods
mov
(bad)
mov
fist
push
call
mov
mov
mov
je
int3
jecxz
xor
in
arpl
cld
(bad)
jle
in
imul
xchg
jno
add
(bad)
daa
outs
fsubr
mov
fs
adc
cli
outs
mov
push
sbb
dec
sub
xor
cmp
xchg
mov
mov
mov
int
jl
adc
adc
jl
add
xlat
jge
test
xchg
retf
xor
test
cmp
cmps
fmul
addr16
cmp
jnp
or
or
in
not
mov
xchg
mov
pop
add
jmp
or
push
add
or
jae
out
imul
not
xor
shr
stos
leave
cmps
xor
mov
mov
jmp
movs
aaa
sbb
or
pop
(bad)
xchg
imul
add
std
popf
dec
rcl
mov
call
mov
pop
cmp
enter
pop
rcl
mov
dec
adc
xchg
(bad)
popf
cmp
and
(bad)
clc
or
rcr
mov
adc
dec
das
call
add
and
jge
jecxz
sbb
adc
xchg
jno
push
add
das
cdq
mov
mov
aas
shl
jnp
sub
pop
jmp
inc
cmp
push
mov
sub
xchg
dec
cmp
sbb
xchg
shr
pop
sti
jmp
fs
rol
loope
push
mov
in
xchg
das
scas
jp
fcom
or
jnp
and
jmp
lea
das
xchg
pop
pop
mov
scas
mov
ja
xor
xchg
gs
xchg
popa
icebp
pop
xor
and
adc
jmp
icebp
imul
pop
push
add
rcl
fprem1
mov
stos
frstor
cmc
mov
imul
sub
leave
ror
cli
dec
jecxz
xor
mov
push
stos
xchg
arpl
pusha
fcmove
dec
ret
xor
test
xlat
mov
rcr
fwait
inc
inc
cdq
jp
sbb
popa
(bad)
mov
es
pop
icebp
jno
xor
inc
jne
cmp
mov
pop
fs
mov
imul
pop
ds
jp
mov
shr
(bad)
mov
sub
retf
jecxz
jge
xor
mov
(bad)
pop
rcl
cmp
inc
mov
(bad)
xor
mov
clc
sbb
pusha
out
mov
adc
push
lea
repz
push
fnstenv
cli
jne
stc
xchg
movs
adc
pop
jns
and
(bad)
retf
fistp
jge
push
pop
pusha
mov
push
lods
jp
lea
shr
dec
cli
pop
lds
jb
fild
push
pop
xor
xchg
sub
pop
(bad)
nop
sub
push
fstp
aam
or
mov
mov
mov
rcl
jns
dec
xlat
xor
mov
mov
lods
je
pop
jo
es
ds
lods
cdq
pop
mov
aad
jle
leave
push
mov
cwde
loop
scas
pop
or
outs
cdq
add
ins
jl
pop
adc
add
loopne
jecxz
add
mov
pop
xor
stc
sbb
jp
fistp
mov
or
test
push
icebp
jnp
mov
and
jecxz
and
test
pusha
push
sbb
ret
mov
xor
push
pop
mov
ror
out
push
aaa
sub
cmp
jl
test
dec
add
out
in
nop
test
push
pushf
cli
aad
(bad)
cmp
and
pop
dec
test
cmp
jns
outs
ins
xchg
mov
es
lods
mov
(bad)
sbb
movs
push
enter
xor
mov
(bad)
mov
cld
mov
fwait
jmp
gs
and
ins
pop
stos
xchg
sub
retf
lods
add
mov
inc
pushf
outs
dec
push
adc
stos
push
inc
daa
leave
gs
clc
cmc
int3
dec
cmp
mov
mov
fstp
into
inc
test
mov
sti
pusha
repnz
cmp
pop
hlt
add
in
xor
inc
aam
dec
cmps
mov
(bad)
fdiv
test
ins
push
cli
cwde
call
mov
push
imul
adc
mov
test
adc
aas
sub
lds
adc
or
pop
nop
js
xchg
inc
pop
lods
cli
retf
(bad)
sar
and
(bad)
fadd
test
add
and
xchg
(bad)
pop
test
push
sbb
sub
stos
addr16
xor
cmps
jmp
add
enter
(bad)
inc
sub
sub
pop
js
xor
arpl
sbb
or
out
js
call
dec
outs
cmps
(bad)
(bad)
jmp
push
sub
(bad)
retf
mov
mov
test
pop
and
xchg
(bad)
mov
mov
or
and
out
ror
fdiv
mov
aad
loopne
add
mov
and
iret
mov
xlat
call
mov
inc
adc
mov
push
push
jnp
mov
pop
and
xor
cmps
enter
test
or
jns
inc
aaa
inc
in
clc
fimul
fmul
pop
xchg
xchg
std
xor
sbb
cmp
ds
out
ror
fsub
and
and
sbb
sbb
and
mov
(bad)
and
enter
xchg
pop
and
pop
iret
out
mov
out
adc
out
or
xor
lahf
fcomp
push
push
push
popa
and
push
xchg
je
test
scas
xchg
push
jmp
add
es
retf
lods
inc
xchg
mov
mov
stos
stc
mov
xor
mov
mov
icebp
jmp
mov
test
daa
jmp
add
out
dec
lahf
movs
push
ret
push
adc
std
dec
or
xchg
cmps
enter
mov
nop
fsubr
or
push
cmc
dec
sub
or
push
xchg
in
and
repnz
lock
mov
das
adc
mov
mov
repz
mov
ficomp
(bad)
or
test
jmp
loop
add
mov
inc
sub
push
loop
test
iret
or
push
(bad)
pop
call
adc
jle
loopne
sbb
xchg
fldenv
ins
lods
in
jecxz
in
nop
sub
sar
js
inc
cmpxchg
inc
out
fisttp
xor
push
shr
xlat
xchg
mov
mov
in
or
mov
loope
xor
mov
fnstsw
stc
xchg
push
aaa
leave
shl
or
pop
adc
add
rol
jp
arpl
cdq
mov
mov
adc
stos
fsubr
mov
bnd
out
jp
adc
and
pop
xor
xchg
aaa
add
cmp
bound
jnp
mov
jecxz
push
pusha
or
lgs
dec
jg
retf
ins
mov
call
ja
cmc
jge
rcr
or
jb
lahf
dec
jle
push
cld
fmul
rcl
movs
popa
mov
add
pop
cmp
push
pop
lods
call
nop
mov
mov
ja
jl
mov
or
cmps
jno
jge
mov
add
aas
or
lods
sub
dec
xchg
js
ja
in
jecxz
sbb
push
mov
stos
aam
mov
lods
retf
rcr
ja
shr
xor
int3
push
int3
push
fnsave
inc
icebp
jae
int
cmps
jbe
mov
fwait
sbb
mov
jecxz
scas
popa
js
mov
adc
aas
jmp
jo
(bad)
sub
inc
das
jbe
adc
ins
mov
call
movs
add
out
lock
cs
xchg
sbb
inc
pop
or
(bad)
jne
and
and
and
dec
jnp
and
nop
dec
out
cwde
sahf
dec
adc
js
imul
inc
xor
pop
cmc
pop
xlat
aam
fiadd
xchg
iret
test
push
sbb
cmp
inc
imul
xor
dec
fnstsw
sub
(bad)
adc
pop
(bad)
pop
cs
sub
xchg
stos
jmp
sbb
loopne
packsswb
and
(bad)
sub
pop
mov
cmp
sub
pushf
ins
and
add
in
mov
push
out
sbb
out
mov
cwde
int
aam
xchg
ja
xchg
fs
das
push
push
loop
inc
repnz
pop
jecxz
mov
movs
fisub
mov
outs
inc
fcom
sbb
rol
push
out
mov
sub
scas
loop
inc
mov
mov
sub
jg
push
imul
push
(bad)
sbb
xor
sub
jb
fldz
setne
sbb
ins
int
sti
sbb
out
or
xchg
test
data16
jb
das
inc
inc
cmp
push
inc
stos
scas
mov
mov
ja
ret
add
or
mov
adc
ror
or
push
aad
sub
imul
repz
jno
push
push
rep
mov
sub
les
rcr
jecxz
jmp
loopne
aad
retf
test
jns
inc
inc
xor
push
pop
in
xchg
ja
cld
xor
sub
inc
add
out
mov
pop
adc
mov
es
pop
mov
push
jae
fcmovu
jmp
xlat
test
fisub
jae
dec
xchg
sub
ss
adc
out
mul
mov
aad
daa
nop
and
xor
mov
jne
daa
ficom
fnstenv
jmp
pop
add
push
mov
push
(bad)
jno
sbb
push
push
xchg
(bad)
cmps
jo
movs
in
ins
and
jg
aas
mov
rol
adc
in
gs
jle
(bad)
shl
clc
jp
push
test
imul
mov
sbb
push
sub
mov
mov
dec
ins
es
dec
xor
jnp
xchg
sbb
sbb
mov
ja
push
test
test
push
jns
stos
ret
fmul
sub
add
daa
aas
xchg
pop
rcl
push
daa
movs
jmp
fisttp
ret
rol
sbb
mov
ins
imul
mov
test
daa
jnp
mov
aam
loope
pop
stos
dec
push
mov
cmp
out
mov
sub
xor
(bad)
imul
leavew
adc
pop
mov
lahf
dec
adc
daa
push
ins
xor
pop
push
cmc
std
mov
push
pushf
jo
je
mov
xchg
ins
xchg
inc
mov
mov
lahf
or
pop
xor
not
pop
mov
cdq
inc
shl
xor
mov
gs
xchg
mov
add
outs
jle
cdq
inc
push
sbb
or
mov
sub
ret
enter
out
les
jmp
cvtdq2ps
push
add
ins
mov
jbe
mov
xchg
or
mov
push
mov
mov
jae
dec
icebp
scas
cwde
enter
retf
xor
cdq
cmp
mov
lods
push
mov
jl
mov
sub
lahf
pop
out
adc
xchg
mov
push
push
mov
xchg
popa
jb
stos
sub
dec
imul
pop
push
mov
mov
dec
cmp
or
add
shl
xor
pop
add
imul
inc
pop
xchg
pop
fnstcw
push
push
fist
in
and
dec
test
jecxz
sub
les
adc
sbb
fdivr
outs
rcr
jl
cmp
pop
(bad)
xchg
mov
test
(bad)
test
out
and
xchg
fisub
data16
(bad)
clc
shl
int3
ins
outs
outs
xor
cli
iret
aad
and
not
rcr
mov
(bad)
retf
out
out
sbb
cmps
xlat
or
jne
sbb
rol
out
xchg
jp
mov
loopne
mov
test
add
js
ror
ret
in
mov
jnp
loop
daa
ss
sbb
pop
(bad)
pop
(bad)
jmp
ds
ins
jg
ds
jmp
int3
hlt
pop
in
xchg
inc
xchg
ret
fisub
inc
imul
cmp
ins
lds
lods
xchg
cmp
sar
sbb
shl
cs
fwait
popf
xlat
out
mov
and
or
jnp
pop
or
jmp
mov
ins
in
aam
clc
adc
push
loop
dec
(bad)
mov
in
or
leave
in
movs
xchg
mov
loope
(bad)
neg
inc
dec
cmc
adc
fld
loopne
or
fwait
nop
js
fstp
gs
addr16
and
fisub
ins
push
xchg
sbb
push
adc
outs
mov
jnp
sub
add
xor
daa
arpl
test
je
ds
shl
mov
ins
rcr
call
cwde
xor
or
inc
adc
or
and
sbb
ja
xor
loope
or
push
xor
inc
jbe
popa
enter
movs
scas
and
push
scas
cmps
rol
adc
mov
mov
adc
sbb
cli
rol
aad
aas
ins
ror
stos
lahf
adc
mov
scas
pushf
call
pop
xchg
imul
and
adc
push
jle
cmps
mov
test
jl
dec
out
jbe
jo
jns
dec
(bad)
add
scas
bound
jle
fwait
mov
xor
push
mov
cmc
pushf
clc
add
push
fild
adc
or
mov
scas
in
jnp
fld
mov
repnz
adc
sbb
mov
pop
sub
loop
pop
sub
push
cmp
(bad)
adc
cmp
inc
add
(bad)
xor
(bad)
stos
inc
hlt
push
mov
add
pop
(bad)
sub
or
mov
dec
jb
repnz
sbb
fwait
cwde
mov
dec
pop
dec
(bad)
cmc
into
call
mov
mov
sub
cmp
lock
xor
add
mov
test
call
popf
push
popf
pop
fs
nop
in
sub
sbb
mov
dec
inc
adc
and
mov
pop
in
test
push
repz
aaa
leave
inc
loope
mov
pop
retf
test
in
mov
arpl
inc
lahf
dec
es
mov
push
lods
imul
and
xchg
sub
or
cmps
scas
mov
inc
and
fldenv
adc
lock
add
pop
outs
int3
push
stos
sub
and
xchg
rol
jbe
ret
cmp
clc
lea
add
sub
cdq
mov
inc
sbb
pop
iret
push
pop
call
(bad)
aam
inc
hlt
push
bound
fbld
loopne
inc
mov
imul
in
adc
mov
stc
into
dec
sub
bound
scas
pop
rcr
or
scas
ficomp
xchg
jp
inc
movs
xor
adc
int
es
(bad)
imul
mov
push
not
mov
or
cmp
call
pop
adc
xor
ds
(bad)
push
dec
pop
das
xor
pop
aam
pop
xchg
scas
mov
data16
pop
ds
add
jg
jecxz
shl
push
cwde
cdq
cdq
leave
inc
stos
jne
scas
add
dec
mov
inc
(bad)
pop
adc
jmp
and
xchg
and
jmp
pushf
xchg
(bad)
arpl
mov
je
cmp
cmc
lods
fcom
clc
ins
pop
clc
xor
icebp
lds
ins
hlt
jo
adc
(bad)
cmp
inc
jbe
aam
mov
adc
loop
out
pop
mov
sbb
dec
jns
mov
leave
mov
mov
je
inc
enter
push
add
ins
lods
inc
dec
in
jne
pop
mov
xor
mov
or
push
cmps
sar
ror
loope
jecxz
push
retf
add
xchg
dec
mov
popf
rol
mov
add
mov
out
mov
rol
and
loop
mov
xor
(bad)
loopne
cmps
sbb
fsub
arpl
lock
sub
xchg
sub
mov
fwait
mov
add
cmp
sub
out
sbb
xchg
fst
fist
push
aaa
cwde
jno
jmp
cmp
icebp
leave
and
mov
add
es
test
scas
test
and
call
imul
cdq
push
in
xor
ud0
adc
sub
mov
cmp
rcr
inc
call
(bad)
ds
add
sub
js
int3
cmps
int
jmp
mov
xor
jne
xor
ror
jp
test
cmp
dec
jbe
fiadd
call
push
push
sbb
or
fbld
mov
pop
popa
je
das
cmp
dec
and
inc
mov
call
cmovg
xor
xchg
(bad)
cmp
jecxz
xor
pop
cmps
in
mov
fdivr
jno
push
sub
push
push
add
mov
int3
dec
call
inc
xor
popf
mov
jne
inc
clc
outs
dec
xchg
inc
loop
pop
cmp
shl
xlat
cmp
push
sub
and
lods
dec
dec
mov
cld
jmp
leave
sub
fld
push
jbe
stc
xchg
in
and
xchg
pop
or
sbb
adc
pop
das
out
test
(bad)
cmp
sbb
pop
in
je
dec
ins
xchg
xchg
mul
lock
adc
cwde
les
daa
push
stc
cmps
shr
sti
add
add
mov
cmp
aam
mov
push
fisub
(bad)
sub
mov
imul
clc
call
dec
push
inc
mov
cmp
mov
jmp
push
or
dec
mov
cwde
mov
shl
sub
adc
fstp
out
out
mov
inc
pop
movs
jns
or
mov
arpl
retf
pop
cs
ret
sbb
rcr
movs
arpl
jnp
mov
(bad)
or
data16
sub
in
and
push
add
sbb
test
jb
lds
in
test
fisttp
and
in
(bad)
fmul
(bad)
loopne
(bad)
mov
dec
(bad)
addr16
mov
ss
mov
retf
test
jnp
out
pop
add
jo
and
mov
mov
and
adc
adc
loope
mov
sti
push
cmps
ds
bound
pop
leave
cdq
es
idiv
xor
(bad)
adc
fdiv
aam
push
jg
push
pop
sub
clc
mov
fwait
lahf
neg
or
popf
push
lock
xor
stos
lods
clc
mov
arpl
push
aad
out
out
test
add
adc
loope
add
mov
mov
dec
push
addr16
mov
or
lock
test
push
jb
or
ja
cmp
mov
pop
mov
lahf
push
inc
int
xchg
fsubr
cmp
adc
ins
xlat
sub
outs
jmp
xchg
adc
sbb
sbb
imul
in
inc
jnp
test
cmc
(bad)
mov
push
jbe
mov
jp
lds
cmp
and
cmc
pop
push
shl
pop
es
pop
cdq
inc
ret
adc
ret
movs
xor
retfw
dec
rcr
pop
mov
mov
cmp
aad
add
(bad)
xchg
pop
dec
ins
dec
inc
push
jae
mov
mov
pop
mov
sbb
movs
mov
(bad)
push
leave
stc
iret
sbb
pop
scas
jmp
jl
xlat
push
add
pop
add
jno
dec
lods
adc
not
pop
jecxz
add
add
mov
fs
push
sub
repz
cmp
adc
mov
sub
aam
push
xor
adc
shr
enter
sub
sbb
mul
mov
iret
push
movs
sub
xchg
add
movntps
add
and
enter
popa
jmp
add
inc
inc
test
mov
rol
fisubr
les
scas
outs
dec
retf
es
gs
adc
pop
cmc
(bad)
dec
push
cmp
mov
arpl
inc
or
xchg
lea
ins
push
dec
cmp
movs
(bad)
dec
xor
mov
mov
sbb
xchg
cmp
js
inc
(bad)
in
dec
test
mov
out
jne
ins
cmp
aaa
mov
daa
test
addr16
mov
jecxz
popf
push
pop
xor
jo
scas
cmp
ins
into
cmp
push
iret
(bad)
fs
sahf
ja
xor
xchg
jns
sti
retf
cli
frstor
dec
pop
and
addr16
xchg
xchg
movs
xor
pusha
(bad)
mov
mov
xor
push
push
push
inc
js
ffreep
out
int
(bad)
mov
cmp
push
inc
lock
inc
lahf
bound
test
pushf
ss
xchg
adc
inc
repnz
and
pop
fnsave
aam
daa
dec
xchg
in
mov
xchg
xchg
sbb
cli
sbb
adc
add
xchg
clc
or
aaa
mov
retf
(bad)
je
in
iret
icebp
xor
jne
sbb
int
fild
aad
retf
test
ret
jae
cmps
in
(bad)
movd
dec
jle
mov
ds
pushf
jg
mov
out
jmp
pop
sub
jns
jmp
jmp
outs
das
(bad)
sbb
dec
pop
inc
push
aas
out
adc
pop
cmp
jecxz
cld
jge
movs
hlt
xchg
jno
cmps
add
sar
fwait
ror
not
and
mov
cmc
xchg
inc
add
adc
cld
mov
call
cmp
ins
mov
bound
push
bound
push
sti
inc
cwde
pop
sbb
rol
in
loope
jp
push
xchg
add
cli
dec
or
and
rcr
lea
fimul
enter
sub
leave
cmps
xabort
push
or
mov
pop
add
mov
add
outs
and
rcr
add
repz
cmp
mov
repz
push
aam
call
aas
jmp
enter
popf
inc
and
outs
pusha
ins
push
test
sub
mov
call
ss
lods
outs
div
jne
cdq
lods
mov
and
mov
adc
and
dec
std
aad
enter
push
enter
and
mov
mov
aam
xor
(bad)
mov
push
mov
retf
bound
jle
xchg
out
and
pop
cli
out
push
scas
sbb
cwde
xchg
jne
xchg
cmc
(bad)
sub
pop
jecxz
popf
ins
adc
pop
test
adc
or
nop
(bad)
iret
movs
lods
push
pop
mov
pop
mov
push
inc
jmp
pop
loopne
mov
and
cmp
(bad)
mov
ret
out
jmp
inc
pop
xchg
outs
mov
addr16
mov
pop
jns
add
push
adc
jl
mov
std
adc
jmp
jae
sar
icebp
xchg
cwde
push
imul
ins
fisub
xchg
mov
gs
pushf
call
fisttp
jb
jge
mov
push
adc
push
sbb
push
xchg
mov
xchg
xchg
add
cmps
movs
jmp
cmp
xchg
icebp
test
dec
call
jle
retf
mov
sbb
sbb
xor
jg
neg
call
hlt
and
push
ins
cmp
lods
pop
pop
mov
enter
mov
mov
(bad)
jl
mov
push
xor
(bad)
ds
rol
and
imul
or
sbb
pop
dec
scas
add
sti
jg
repnz
clc
arpl
dec
ins
add
push
fwait
and
jle
inc
xchg
les
ins
retf
and
xchg
jno
scas
stos
movs
addr16
outs
sbb
repnz
sbb
mov
leave
or
cmps
sbb
stc
adc
mov
(bad)
loope
test
xchg
mov
pop
pop
cli
push
adc
jbe
iret
mov
call
push
dec
movs
test
daa
stc
pop
xor
jo
xchg
cwde
in
jae
repz
add
loopne
cmps
je
aas
ins
push
call
xchg
out
pop
mov
cmc
jno
pusha
out
mov
and
or
mov
fstp
dec
inc
outs
sub
aad
push
dec
bound
jecxz
inc
cmps
imul
mov
lahf
or
add
icebp
cwde
mov
cmps
pop
inc
fsubr
mulps
ja
test
imul
ja
lds
repz
popw
call
outs
inc
ins
or
pop
adc
mov
leave
mov
jns
jg
xor
mov
and
push
cli
jns
pop
xor
sub
adc
jmp
movs
(bad)
sbb
xchg
push
cmps
cmp
dec
rcr
sub
push
adc
fcmovu
pusha
jmp
fcom
mov
test
jo
inc
jl
dec
push
inc
pop
outs
push
leave
inc
inc
xchg
jmp
mov
ins
cmp
fwait
test
shl
mov
int3
adc
adc
and
and
push
pop
test
mov
js
cmps
lods
sbb
daa
jbe
lock
aaa
jmp
(bad)
and
dec
xchg
sub
call
call
pushf
out
imul
or
sbb
cmp
dec
and
push
mov
and
adc
ret
mov
jle
pop
mov
fld
ret
hlt
retf
mov
mov
xchg
jns
sub
jns
cs
addr16
scas
fld
nop
mov
mov
arpl
xor
in
retf
shr
jo
inc
mov
xchg
ins
(bad)
fs
inc
push
je
sti
outs
loope
push
jmp
ret
ret
push
retf
adc
fwait
inc
loope
push
cmps
loop
dec
dec
(bad)
in
es
cmp
jle
test
pop
and
aaa
sbb
pop
into
pop
mov
fadd
jo
sub
mov
rcr
inc
stos
in
adc
cmp
call
(bad)
add
scas
add
cmc
leave
pop
call
cmps
sti
sar
call
mov
je
test
stc
jecxz
test
sub
mov
inc
inc
sbb
imul
dec
popf
stos
add
jo
int3
mov
sub
pop
call
stos
(bad)
adc
out
je
add
shl
fs
in
push
xor
dec
scas
cmps
mov
repnz
fst
xor
int
int3
leave
sub
xchg
jmp
dec
clc
(bad)
sti
jmp
or
or
jno
mov
push
xchg
jle
(bad)
sbb
cmp
int
in
shl
push
call
sti
or
je
sub
add
sbb
in
rol
sbb
or
test
adc
xchg
cmp
and
inc
mov
xor
adc
xchg
push
xlat
dec
push
cmp
pushf
or
or
or
cmps
sub
xchg
push
outs
mov
jmp
or
(bad)
jno
dec
xchg
ffree
out
push
call
(bad)
mov
and
test
mov
scas
(bad)
outs
fstp
mov
test
mov
daa
pop
ret
jmp
or
(bad)
retf
mov
movs
adc
fdivrp
loop
idiv
hlt
dec
pop
mov
add
jecxz
aam
pop
and
xlat
hlt
mov
fldenv
xchg
loope
xchg
hlt
push
mov
shl
aam
xor
loope
sub
gs
cwde
mov
sub
addr16
cdq
jbe
call
in
iret
jecxz
ret
push
push
pop
xor
jmp
adc
imul
dec
sbb
inc
int3
cmp
sub
cmc
mov
pop
repz
popf
shr
out
imul
sti
pop
loope
xor
sub
mov
ins
xchg
xchg
and
dec
jge
in
mov
data16
pop
fmulp
data16
and
mov
or
pusha
sbb
neg
cmps
or
in
and
cmc
xor
sti
sbb
addr16
int
mov
popf
daa
loope
sub
nop
and
jnp
lds
dec
ficom
xor
jns
push
(bad)
movs
cmp
rcl
(bad)
leave
sub
ss
xchg
sub
sbb
jmp
int
in
sub
sbb
arpl
iret
inc
mov
pop
push
add
ret
pop
repnz
pushf
dec
enter
jmp
into
sbb
and
sbb
xlat
adc
mov
sub
add
or
fisubr
push
setae
in
jb
push
icebp
jae
cmp
retf
push
ja
dec
pop
sti
shl
scas
std
and
imul
xor
(bad)
jb
out
loopne
and
aaa
xchg
cmp
push
dec
mov
mov
push
(bad)
xor
inc
outs
adc
jmp
ret
cmp
cwde
or
cmp
pop
push
pushf
jecxz
lock
outs
idiv
xchg
fcom
sbb
xchg
jnp
test
fmul
add
loope
or
pop
in
enter
xor
aaa
ds
sbb
out
pop
xchg
add
cmp
inc
outs
add
xchg
add
pop
fistp
pusha
mov
dec
cmps
dec
add
mov
cwde
aaa
mov
inc
inc
jns
cmps
fdivp
fstp
pop
cmp
push
mov
mov
imul
enter
out
call
pop
push
mov
stc
fild
aas
aas
dec
add
dec
imul
mov
sub
popf
push
sub
sub
or
mov
js
aad
and
jb
sti
ja
test
(bad)
iret
pop
out
cs
cmp
jae
add
push
cmp
psrlw
clc
pop
push
call
ds
imul
sub
push
jl
adc
mov
hlt
jmp
cmp
sahf
or
bound
shl
adc
push
shl
ret
and
inc
mov
mov
out
scas
cmp
xchg
or
sub
xchg
shr
loop
mov
xor
movs
movs
sbb
sub
ins
pop
push
inc
sbb
cli
mov
jno
out
movs
js
imul
cwde
pop
mov
add
xor
push
push
ror
mov
pusha
xchg
dec
adc
push
xor
or
call
inc
int
pop
pop
jnp
push
cs
mov
cwde
mov
inc
nop
xor
stc
adc
and
cmp
or
sub
xchg
xlat
sbb
push
int3
and
push
xchg
push
mov
inc
push
sbb
jmp
cli
dec
adc
stos
jp
nop
test
jg
inc
xor
dec
daa
aaa
inc
(bad)
fdiv
sub
fs
mov
pop
das
(bad)
mov
mov
iret
into
inc
ins
(bad)
dec
cmp
outs
pop
aas
lahf
call
xchg
cli
neg
in
xchg
sbb
sub
call
test
adc
stc
repnz
in
cwde
jl
retf
leave
mov
jns
test
mov
dec
loop
sbb
inc
movs
dec
retw
adc
aad
js
xchg
xchg
pusha
movs
xchg
mov
mov
cmps
lea
neg
fistp
jmp
xchg
shr
in
sub
(bad)
cdq
fdiv
div
xor
lods
pop
mov
ret
and
shl
stos
sbb
jb
fbld
mov
or
stc
xchg
fst
dec
inc
add
mov
fild
test
pop
and
sub
add
xor
add
or
sub
xor
mov
cs
jae
mov
fisttp
adc
imul
push
inc
add
imul
mov
arpl
jp
ins
lods
push
dec
addr16
je
cmp
push
jns
add
daa
push
test
sbb
cmp
imul
repz
xor
neg
and
addr16
scas
loope
scas
or
xor
rcl
leave
push
jae
sub
inc
xchg
or
mov
sbb
dec
cmovg
ror
(bad)
mov
pop
scas
js
ror
repz
or
fld
inc
mov
cmp
int3
repz
sub
jmp
or
mov
inc
clc
dec
and
sub
addr16
mov
sub
push
push
int3
jge
dec
sub
dec
stos
mov
aam
mov
jb
cmp
mov
retf
push
jmp
sub
xor
popf
int
and
dec
mov
sar
jle
jo
stos
(bad)
inc
daa
push
aas
cmp
leave
cmps
aam
push
scas
(bad)
leave
sbb
add
xchg
test
fiadd
out
aad
(bad)
loopne
mov
aam
call
ret
sbb
icebp
and
dec
jecxz
in
inc
cmp
pushf
int
movs
out
inc
sbb
call
mov
or
ret
(bad)
push
sub
mov
fwait
mov
push
mov
imul
mov
popa
iret
cli
pop
imul
fwait
pop
shl
push
mov
and
mov
js
in
mov
mov
pop
pop
add
lahf
std
movs
mov
ins
xchg
bound
out
jge
into
cmp
push
or
shl
inc
xchg
arpl
jmp
jb
mov
sahf
or
mov
repnz
jecxz
pop
imul
sub
mov
push
pop
mov
nop
lea
movs
push
adc
jp
pop
adc
dec
adc
shr
adc
fiadd
loop
add
fdiv
mov
ins
pop
or
aam
(bad)
jns
add
les
cmp
repz
mov
sub
inc
mov
cmps
or
dec
xor
out
xchg
ret
retf
(bad)
or
cdq
push
aam
mov
int
repnz
lds
push
cmp
push
or
stos
enter
inc
popf
dec
pop
mov
out
(bad)
and
xor
add
repnz
and
(bad)
shl
out
fs
or
loopne
fist
cmc
dec
lds
push
scas
and
sbb
and
lds
faddp
int
xchg
imul
jae
lds
inc
movs
mov
sahf
lds
or
out
adc
jnp
dec
pop
and
inc
cdq
enter
cwde
push
mov
push
push
js
ror
push
pushf
test
xchg
cmp
in
loope
ficom
jge
out
xchg
or
mov
retf
add
jl
stc
call
inc
shl
or
or
movs
sti
mov
cmp
mov
mov
call
(bad)
shl
dec
movs
loopne
push
or
mov
lock
out
dec
pop
cld
xor
call
fstp
ds
imul
pop
pop
jecxz
neg
jg
aad
iret
add
stos
add
rcr
cmp
scas
add
out
cvttps2pi
stc
mov
fldenv
test
push
jl
pop
in
sar
ds
aaa
jns
retf
jl
add
mov
mov
lds
ret
nop
cmp
push
mov
sub
cld
sbb
sbb
gs
add
xor
imul
cmc
push
dec
cmps
jle
or
movs
inc
and
inc
rcr
add
scas
dec
jmp
mov
dec
mov
in
lwpval
pop
ja
mov
ror
sbb
sbb
xchg
xor
sub
fcomp
mov
ret
cli
sbb
cli
or
xor
hlt
mov
scas
pop
dec
(bad)
icebp
test
jne
mov
sbb
mov
adc
mov
cld
mov
dec
in
or
or
xchg
fmul
ret
test
pop
sub
dec
lods
cmps
push
int
cdq
rcl
push
enter
xlat
xchg
sbb
rol
push
jns
mov
(bad)
shr
and
test
or
push
mov
hlt
cmps
dec
mov
(bad)
lea
loop
jne
jmp
retf
mov
mov
jle
lock
push
push
loopne
sub
das
mov
mov
adc
lods
jl
mov
sbb
jge
add
test
add
test
sbb
dec
mov
pop
call
pop
cmp
scas
push
scas
jge
ret
shl
bound
sbb
mov
es
and
popa
cld
and
std
pop
push
mov
aas
js
mov
fs
xchg
or
push
mov
rol
jmp
nop
loop
pusha
cmp
icebp
test
pop
popa
inc
enter
inc
lea
ins
jmp
call
mov
imul
or
int
or
es
add
inc
sub
xchg
mov
inc
inc
mov
stos
cs
jmp
jbe
mov
cmps
(bad)
and
jns
sub
out
imul
cmp
shl
jecxz
mov
or
dec
and
add
lahf
push
xchg
mov
push
xlat
js
sti
push
dec
inc
in
call
test
sahf
xlat
dec
jo
in
push
adc
out
add
test
imul
mov
inc
fst
rol
xor
mov
cwde
add
(bad)
or
cmp
cmc
test
jge
inc
(bad)
addr16
jg
sub
inc
icebp
imul
scas
xchg
out
mov
popf
or
mov
ds
stos
cmp
jp
cld
bound
cli
mov
or
out
cmp
stc
xchg
fadd
xor
pop
lods
std
cmp
int3
in
loop
jg
pop
(bad)
jb
or
or
jge
push
fdivr
xor
sbb
and
and
pushf
mov
sahf
mov
(bad)
jnp
sub
sbb
pushf
mov
or
xchg
leave
mov
and
lock
ds
in
popf
fidivr
mov
add
push
jge
mov
cs
mov
rcr
lahf
xor
push
aam
push
jne
data16
mov
(bad)
or
mov
pop
je
adc
hlt
cli
(bad)
icebp
push
adc
adc
mov
in
xchg
test
pop
jmp
repnz
mov
push
cmp
enter
test
clc
movs
xbegin
and
aaa
(bad)
loopne
push
jnp
dec
mov
out
cmp
ds
clc
mov
jle
mov
outs
cmp
test
mul
rcr
outs
push
(bad)
jno
and
mov
sub
inc
jae
and
pop
(bad)
dec
xchg
xchg
mov
imul
inc
outs
into
mov
fadd
call
xchg
jmp
cmp
push
and
sbb
rep
mov
out
std
xor
popf
jmp
xchg
cmc
xor
jae
add
cmps
fadd
(bad)
jne
xchg
pop
or
mov
sti
mov
daa
fisubr
mov
lods
call
dec
push
ret
add
ss
test
adc
or
ss
lods
add
and
js
sbb
in
xor
xor
xchg
sbb
cld
dec
jbe
nop
add
aaa
dec
repz
lahf
push
imul
push
xlat
mov
push
adc
(bad)
sahf
ins
and
dec
mov
push
call
xrelease
and
in
jnp
adc
jle
jmp
loopne
push
dec
arpl
mov
mov
jo
push
cmc
shl
out
aaa
push
jg
and
pop
hlt
js
and
jo
mov
or
inc
lock
lock
shr
icebp
inc
push
mov
nop
pop
cmp
stos
jb
sahf
cmp
cmp
mov
mov
push
stc
pop
mov
add
add
inc
inc
sub
ret
aad
popf
pusha
cli
lock
adc
mov
stc
fs
cmp
ins
mov
pop
clc
data16
out
mov
mov
ins
ror
dec
mov
cld
popa
sub
mov
push
add
adc
std
sub
xchg
dec
push
fstp
sbb
mov
pop
dec
outs
cs
hlt
and
aas
imul
inc
or
xchg
(bad)
icebp
outs
mov
sbb
fwait
push
out
push
sbb
xchg
lock
je
arpl
jbe
cmps
int3
inc
pop
xchg
repz
add
(bad)
cld
pause
cmps
icebp
mov
mov
ins
leave
cmp
adc
xor
cmp
cli
cld
ror
xor
xor
sub
aam
sbb
dec
mov
out
sbb
adc
pop
sub
imul
xor
mov
mov
push
aam
push
hlt
sub
cmp
ret
pop
fstp
out
or
(bad)
push
xchg
or
push
pop
inc
sbb
pop
inc
add
aas
add
ja
or
jge
(bad)
sub
jecxz
or
loope
rol
sbb
push
mov
test
pop
ds
xchg
cmp
(bad)
jno
dec
push
inc
mov
and
jge
fmulp
jnp
into
(bad)
mov
setb
sti
adc
and
movs
lock
pushf
cmps
je
mov
mov
and
push
gs
test
jb
cmp
jae
cmc
in
and
sub
lahf
imul
xchg
pushf
xchg
pusha
rcr
push
cmp
xchg
inc
arpl
repz
adc
repz
jnp
popa
sub
adc
mov
cmp
jge
les
imul
sti
mov
out
jg
or
test
cmp
ror
repnz
popf
adc
out
push
adc
repnz
enter
std
inc
enter
cmp
aas
jmp
mov
shr
out
add
fbld
cmps
loop
sub
xchg
xor
pop
cmps
mov
out
pop
dec
sbb
fmul
add
imul
xor
xchg
mov
fisub
mov
std
xchg
sub
xor
cmp
add
mov
sub
cdq
dec
lahf
in
jne
les
nop
ror
div
jl
fs
sub
lods
adc
retf
(bad)
cmp
sub
add
dec
xchg
lods
arpl
xor
scas
xchg
xchg
pop
jecxz
xchg
daa
xor
movs
xor
mov
iret
mov
and
mov
mov
cmc
push
dec
in
adc
or
pusha
cmp
mov
cmps
add
cli
addr16
pop
inc
(bad)
(bad)
xchg
add
pop
cwde
xor
or
loopne
mov
xchg
dec
dec
pop
and
and
imul
sub
call
push
fist
mov
xchg
push
ins
pop
cdq
ss
mov
add
ror
movs
cmp
xchg
add
mov
popa
or
ja
es
xor
ss
push
fwait
iret
adc
popa
call
ja
pop
jae
loopne
out
inc
fcomi
addr16
dec
loop
daa
xchg
sub
sti
pusha
pop
xor
cmc
xchg
sub
ror
dec
and
mov
stc
ds
nop
scas
xchg
xchg
xor
outs
and
pop
sub
dec
cdq
fdivr
push
into
lods
adc
mov
rol
jb
and
jae
pop
aad
mov
pop
mov
xor
and
scas
add
inc
jmp
mov
dec
enter
dec
mov
(bad)
call
push
or
(bad)
adc
jae
test
lahf
mov
jb
mov
call
adc
mov
and
add
jns
scas
push
retf
aam
retf
movs
jne
shl
lahf
imul
inc
aad
push
lods
(bad)
mov
add
cmp
aam
call
std
dec
add
mov
bound
mov
out
jle
sub
in
sti
clc
jecxz
or
scas
inc
sub
push
xor
ret
adc
dec
adc
dec
cmps
daa
ss
xchg
mov
jno
dec
adc
mov
pop
mov
scas
mov
cmps
retf
pushf
cmp
ins
or
sub
das
dec
xor
clc
mov
push
mov
jg
dec
les
(bad)
ins
dec
inc
fdivr
add
push
xor
add
test
mov
push
inc
jbe
xchg
and
sbb
sbb
lods
imul
sbb
cmc
(bad)
lahf
cmp
test
inc
clc
jg
dec
ss
ds
out
adc
mov
pop
mov
jne
ret
dec
(bad)
add
cmp
push
(bad)
mov
shr
call
pop
sar
or
ins
imul
sub
movs
imul
adc
ds
and
mov
cmp
fst
rcl
dec
jb
push
jb
(bad)
fmulp
and
adc
aam
xlat
jno
jl
dec
jmp
cmc
sub
xor
add
pop
sub
mov
sbb
add
(bad)
mov
ins
and
in
scas
in
mov
jno
push
and
push
ins
or
cld
mov
hlt
out
fild
sub
in
fwait
mov
mov
jo
sbb
movs
inc
mov
pushf
ret
das
xor
cmps
xlat
std
and
repz
movd
adc
cmp
mov
push
jne
xlat
cdq
in
xchg
sub
pop
push
cmc
jmp
adc
rcl
ins
test
xchg
pop
and
add
cmp
push
sbb
clc
cmp
retf
pop
ret
outs
std
sub
ss
mov
xor
and
ret
jmp
pop
out
push
cmp
das
in
std
repz
call
call
lock
test
repnz
mov
inc
ja
push
aaa
enter
push
aam
aaa
retf
scas
frstor
push
pushf
fldenv
mov
call
xor
mov
int
icebp
dec
mov
push
mov
mov
inc
sbb
outs
adc
xchg
repnz
mov
and
push
inc
movs
pop
outs
cmp
push
cli
xchg
xor
loope
add
dec
mov
jbe
iret
push
mov
and
adc
sbb
inc
cmp
into
cmp
mov
inc
repnz
jbe
sub
pushf
daa
fcomp
pop
xor
ja
sar
out
push
and
xor
test
cmps
repz
imul
test
pop
push
pushf
add
ins
mov
cmp
retf
inc
loopne
sbb
mov
adc
(bad)
lahf
mov
add
mov
loopne
test
pop
fdiv
mov
lods
pop
pop
or
add
pusha
(bad)
jle
push
mov
pop
jl
push
mov
int
mov
ins
mov
xchg
sbb
test
sub
fistp
mov
push
adc
cmps
xchg
lods
and
sub
test
push
jge
jnp
mov
add
cmps
jns
and
jecxz
sbb
jbe
xchg
mov
add
push
jo
sahf
(bad)
xchg
push
pusha
sub
lods
push
repz
cli
(bad)
dec
xchg
mov
shr
xchg
xor
jo
add
gs
add
and
out
scas
sbb
lahf
ds
and
ins
out
ss
push
into
aad
cld
test
xor
pusha
mov
mov
scas
dec
(bad)
jmp
adc
pop
das
xor
mov
push
les
mov
push
movs
and
ins
dec
push
and
inc
iret
mov
pop
add
loopne
or
xor
cmp
xchg
xchg
inc
jo
aaa
xchg
sbb
iret
cld
or
(bad)
into
cli
ret
mov
jle
mov
jnp
sub
dec
push
jp
ret
mov
call
int3
bound
cmps
sbb
mov
ds
fistp
xchg
fbld
imul
in
cmp
mov
jne
sbb
lahf
or
adc
pop
shr
ret
scas
dec
mov
ror
retf
(bad)
sar
stos
xor
or
lods
adc
fidiv
stc
sub
movs
in
fidivr
ficomp
outs
xchg
outs
or
sub
les
and
jno
clc
(bad)
mov
outs
add
mov
pop
push
mov
cmp
mov
dec
aad
and
sub
jmp
das
repnz
aas
cwde
jle
pop
call
sub
lds
movs
jnp
call
in
sbb
in
fwait
mov
sbb
adc
add
into
scas
gs
scas
popf
call
mov
pushf
daa
inc
shl
dec
jmp
fnstsw
ss
xchg
pop
jbe
jnp
rol
aam
js
xor
gs
add
push
pop
lahf
popa
adc
mov
rcl
mov
test
push
adc
fst
(bad)
mov
sub
cmp
fwait
jecxz
call
lods
test
mov
aaa
popa
sub
cmp
ror
mov
int3
or
(bad)
pop
jge
mov
mov
loope
mov
lods
fldpi
xchg
mov
push
jecxz
sahf
pop
loopne
mov
fild
xor
cmp
aam
jecxz
test
mov
mov
dec
outs
sbb
fst
test
jb
or
or
xchg
pop
push
dec
mov
div
push
mov
cmps
mov
cdq
in
imul
push
mov
mov
ret
pop
inc
loop
jne
imul
sub
dec
mov
xchg
stos
mov
jbe
cmp
mov
out
pop
stc
pop
pop
sub
cmp
imul
call
(bad)
or
pusha
dec
jo
add
pop
pop
jae
aad
and
xchg
js
test
(bad)
xchg
adc
fs
jmp
popa
cmp
xor
test
nop
dec
ins
jmp
cmp
push
mov
aaa
add
jmp
jg
cmp
dec
sub
xchg
sbb
jae
lahf
mov
jo
lods
in
icebp
cmp
sub
push
mov
test
cmp
push
jge
lahf
in
and
or
imul
mov
dec
mov
jecxz
dec
loope
push
cmps
and
pop
imul
outs
pop
inc
jae
pop
jp
inc
push
outs
adc
cwde
out
adc
lods
ret
mov
jl
pop
test
loope
push
sbb
xchg
bound
mov
frstor
mov
mov
mov
jg
or
mov
dec
mov
imul
xchg
cmp
xlat
inc
retf
pop
fbld
push
push
cmp
loop
fcom
out
arpl
cmp
dec
jg
sbb
ror
cmps
sbb
ds
mov
push
(bad)
in
shr
pusha
push
ror
in
mov
adc
lds
ins
test
inc
aaa
mov
mov
adc
sub
jno
or
jb
call
std
and
aaa
sahf
adc
cmp
inc
ret
out
jne
xor
das
push
dec
into
add
cmp
fsubr
and
cs
ins
dec
cmps
push
jae
pop
out
int3
das
push
test
jmp
sbb
mov
(bad)
cmc
sbb
daa
vcmppd
iret
lods
add
or
pop
add
add
out
es
pop
push
inc
clc
bound
mov
je
mov
mov
jle
adc
inc
push
adc
mov
mov
cwde
xchg
xor
mov
and
push
add
pop
test
push
inc
movs
push
pop
mov
sti
nop
cmp
push
pusha
test
sbb
mov
inc
cmc
call
sbb
dec
dec
pushf
shr
movs
cmp
scas
rcr
jp
xchg
or
(bad)
cmps
lods
loope
daa
mov
mov
sub
cmps
jmp
adc
(bad)
jns
cld
cmp
pop
inc
outs
add
dec
push
cld
cmp
aaa
jge
cdq
idiv
xchg
(bad)
out
aam
call
jg
sub
jmp
popa
sub
xchg
outs
aas
xlat
add
adc
vpandn
mov
mov
mov
push
mov
mov
ins
jg
push
test
jg
femms
mov
or
or
mov
loope
test
stos
setbe
gs
mov
sbb
or
xor
mov
jecxz
sbb
fidiv
imul
por
sti
idiv
repnz
mov
xor
iret
xchg
in
sbb
cld
xchg
jb
cmps
inc
cmp
mov
in
adc
fnstsw
add
xor
and
dec
popf
(bad)
push
scas
bound
ret
mov
ins
add
hlt
or
pop
hlt
shl
or
stc
outs
loope
ds
push
mov
xchg
adc
push
lea
mov
mov
cmp
out
popf
arpl
ins
aad
repnz
xor
cmp
pop
cmp
ins
sbb
mov
fs
jmp
cmp
jle
int3
mov
and
je
sub
jo
adc
psrlw
cdq
mov
xchg
cwde
push
cdq
outs
push
lock
stos
or
lods
mov
enter
mov
shl
repz
adc
sbb
mov
stc
in
jnp
inc
sbb
rol
out
pusha
add
int
in
ret
push
push
sub
aas
fst
imul
push
das
(bad)
test
scas
es
inc
js
out
adc
retf
xlat
in
es
rol
ds
add
xchg
pop
mov
aaa
xchg
xlat
retf
jmp
in
leave
mov
dec
xor
add
jge
pop
sub
cmp
imul
cmp
loope
div
in
outs
jb
pop
adc
call
sbb
ins
fucom
imul
xchg
mov
xchg
pop
retf
inc
pop
mov
int3
(bad)
repz
push
out
push
push
test
pushf
and
test
aas
arpl
mov
daa
push
pop
(bad)
call
adc
mov
jl
sbb
xchg
retf
aas
mov
cmovle
ret
repnz
pop
dec
xor
sub
pop
leave
hlt
mov
sbb
enter
cmp
sti
adc
inc
mov
loopne
mov
cmp
mov
inc
mov
ja
inc
ret
jbe
enter
and
lahf
xchg
xchg
add
inc
pop
push
pop
mov
sahf
fisub
ja
stc
sub
js
test
push
sti
cmp
repnz
pop
adc
call
cmp
mov
and
test
mov
ror
in
mov
addr16
call
mov
cmp
jge
lea
rcr
cmp
cs
cmps
outs
stos
push
or
xchg
addr16
mov
add
mov
rol
daa
jno
add
out
cmp
pop
jnp
out
pop
popa
gs
test
sbb
ss
dec
or
add
adc
ja
lods
popa
outs
test
in
mov
jmp
rdmsr
std
xchg
imul
push
shl
push
mov
mov
aaa
dec
jns
push
xchg
out
jno
xchg
call
icebp
outs
mov
push
xlat
cwde
out
mov
dec
jb
push
jl
cmp
mov
or
in
ins
mov
lods
out
and
test
or
test
shr
leave
scas
call
cmp
aad
in
and
push
jmp
add
mov
cwde
pushf
jne
inc
dec
mov
inc
xchg
jp
enter
lahf
pusha
xor
xor
lods
lock
xor
mov
(bad)
and
cmp
ins
outs
out
test
push
and
hlt
sub
push
pop
and
std
push
les
ins
xor
dec
mov
mov
sahf
mov
(bad)
out
pop
xor
mov
arpl
fdivr
mov
cmova
and
fst
push
dec
inc
int
pop
fistp
(bad)
nop
xchg
ins
push
sub
push
(bad)
dec
fcom
jl
pop
(bad)
test
clc
inc
and
test
stc
jbe
iret
dec
xchg
dec
push
xor
jnp
or
in
and
mov
pop
inc
aam
push
mov
sub
shl
or
cmp
icebp
and
adc
(bad)
push
add
dec
push
shl
das
lea
gs
jns
call
pushf
jmp
in
inc
ret
inc
xchg
in
into
call
add
in
sub
mov
outs
lds
sbb
pop
fsub
pop
fild
pop
in
imul
sete
inc
repz
jnp
inc
scas
outs
(bad)
dec
add
popf
or
cmps
pushf
sti
loop
mov
pop
pop
rol
sub
test
repz
js
je
push
pop
and
add
stc
xor
call
cmp
sbb
cmp
mov
mov
push
mov
lahf
sub
push
sti
mov
sbb
fsub
adc
mov
jnp
pop
fwait
nop
mov
das
pop
out
test
mov
imul
pop
(bad)
sub
xor
repnz
xchg
fadd
shl
call
jg
jmp
inc
outs
rol
jnp
sbb
(bad)
(bad)
jg
or
sub
in
jmp
ds
bound
mov
jecxz
adc
(bad)
daa
inc
push
push
ror
cmps
and
cwde
sbb
in
and
jmp
add
and
jp
cmp
bound
sbb
pop
pop
adc
cdq
mov
cs
arpl
and
cld
mov
mov
repnz
jl
(bad)
shl
dec
or
xchg
cmp
int
test
push
and
popf
outs
cld
cld
es
pop
pushf
dec
pop
jmp
sub
sbb
mov
dec
(bad)
iret
bswap
lods
mov
call
xchg
xor
std
in
fld
loopne
add
mov
jae
push
push
sbb
(bad)
sub
sub
mov
fisubr
add
int
fdiv
(bad)
or
pop
lock
cwde
(bad)
test
ror
addr16
jbe
pop
lea
jb
dec
ja
sub
dec
cld
and
push
movs
xor
cmp
sbb
dec
in
leave
mov
in
sbb
push
out
jb
fisub
pop
std
sub
(bad)
cmp
iret
fsubr
inc
jb
mov
mov
std
imul
add
mov
pop
jge
ins
test
jl
xor
sbb
xchg
call
dec
push
or
fs
and
push
icebp
mov
lahf
retf
ds
xchg
(bad)
cmc
ins
imul
cmp
jb
jmp
mov
ds
cmp
jmp
mov
sub
add
mov
adc
xlat
mov
mov
cld
mov
pop
rcr
cmc
stos
mov
mov
lock
mov
shl
mov
push
cmc
ds
arpl
sub
adc
ja
sbb
mov
sub
fs
and
jne
(bad)
scas
int3
mov
push
call
test
jmp
movs
inc
outs
sbb
jo
cmp
inc
jge
pop
daa
jns
push
add
and
movs
sahf
jae
lds
gs
stc
push
jno
add
cmps
jge
fdiv
dec
sub
xor
sbb
inc
mov
mov
pop
xor
pop
les
xchg
dec
int
outs
iret
(bad)
xchg
cli
inc
int3
nop
sbb
iret
jge
enter
pop
ret
mov
push
pop
dec
and
mov
arpl
cld
dec
(bad)
cmps
cdq
in
(bad)
mov
lahf
je
pop
div
mov
xor
or
lahf
jns
cli
mov
jno
sub
jle
mov
cld
mov
jbe
inc
stc
call
aam
xor
mov
jbe
add
cld
sub
add
mov
xor
(bad)
xor
mov
mov
and
add
mov
inc
xchg
pusha
adc
bound
imul
hlt
dec
(bad)
inc
adc
xor
pop
lea
adc
addr16
add
mov
in
xor
cmps
int
and
fbstp
push
jnp
cmp
add
and
push
call
in
outs
imul
es
sbb
xchg
cmp
mov
movs
or
sbb
bound
sub
fcomp
sub
test
inc
mov
imul
dec
mov
cmps
pop
bound
adc
push
retf
add
dec
xor
adc
addr16
cmp
push
sbb
imul
pop
xchg
inc
mov
cmp
fs
cmp
imul
jb
cmovs
ss
jne
pop
mov
add
xchg
inc
loop
jo
sub
and
div
inc
nop
mov
fnstenv
pop
and
push
jns
fadd
int
fisub
rcl
popf
inc
cdq
popf
hlt
outs
xor
cmp
jmp
hlt
cs
int3
jnp
or
sahf
loop
lahf
xchg
xor
add
jno
clc
xor
xor
sub
dec
mov
cld
push
in
push
clc
cmp
repz
mov
and
cdq
hlt
adc
push
jne
mov
cmp
mov
(bad)
movs
cmp
dec
xor
hlt
ror
movs
ror
push
jge
push
fisub
in
jno
imul
lahf
dec
sub
out
dec
mov
leave
push
xchg
pushf
mov
pop
shr
clc
add
test
fcmove
bound
shr
add
clc
fsubr
sub
out
jbe
in
mov
inc
or
add
enter
jl
aad
(bad)
and
call
in
movs
push
inc
xchg
push
fdivr
stc
push
jmp
mov
das
fimul
dec
sti
aas
fsubrp
jp
dec
add
cmp
icebp
mov
fdivr
fs
repnz
adc
inc
fs
lods
pushf
(bad)
cmc
les
mov
jl
je
mov
mov
iret
mov
mov
out
jne
xchg
sbb
sub
push
pop
sub
xchg
cmps
imul
push
daa
test
cmp
pop
scas
or
and
(bad)
out
popa
dec
outs
sbb
loope
lods
mov
and
jp
(bad)
fidiv
and
xor
push
retf
dec
jmp
mov
shl
xchg
out
mov
stos
pop
inc
xchg
adc
push
movs
push
inc
inc
sbb
mov
stc
or
xchg
xor
adc
loop
mov
arpl
xor
enter
jl
pop
sub
mov
mov
jp
shl
xor
mov
mov
cmp
jno
dec
xchg
(bad)
scas
nop
or
cs
leave
lds
dec
jmp
lods
dec
cmps
mov
xlat
test
add
xchg
xor
mov
test
shl
loopne
ja
push
out
xchg
fwait
mov
mov
out
inc
lahf
mov
inc
je
and
mov
push
arpl
fsubr
mov
out
jg
fisubr
ja
out
mov
leave
cs
dec
repz
call
xor
sahf
clc
shr
fwait
in
test
inc
mov
call
push
(bad)
std
ror
imul
mov
dec
rcl
repz
pop
jb
pop
inc
movs
cs
je
mov
jl
adc
adc
(bad)
rcr
inc
bound
loope
out
mov
push
pop
push
jne
and
xor
icebp
or
push
ss
pop
xor
jae
in
or
cmp
add
std
push
ficom
mov
mov
lods
push
xor
stos
pop
jl
(bad)
call
imul
mov
lea
call
or
xchg
out
jmp
sbb
cld
jne
jg
jbe
js
and
in
je
in
jo
lods
test
sub
movs
bound
xor
jge
and
adc
sbb
xlat
mov
imul
pop
inc
xor
mov
mov
nop
cmc
loop
inc
ss
daa
dec
jae
or
test
outs
pop
jmp
adc
mov
adc
xor
pop
cmp
adc
jle
imul
push
or
xor
clc
mov
call
mov
mov
stos
push
cdq
dec
outs
dec
mov
push
push
ret
popf
push
xor
cmc
dec
xchg
pop
dec
rcl
add
add
loope
or
and
cmp
sbb
cli
into
iret
test
outs
aas
or
imul
or
push
mov
mov
pop
(bad)
adc
add
int
and
daa
push
push
mov
cmp
sub
adc
aam
inc
mov
pushf
sub
inc
cmp
add
in
adc
inc
adc
add
out
or
icebp
xchg
pusha
pop
add
repnz
mov
add
nop
sahf
fwait
add
jle
mov
aad
in
sar
jo
and
inc
ja
lea
push
add
mov
push
jl
loop
xor
jne
pop
inc
cmps
mov
mov
xchg
cmp
frstor
push
mov
fcmovnb
inc
adc
push
dec
push
adc
mov
dec
aam
gs
dec
adc
pop
sub
jns
jae
add
(bad)
and
or
or
pop
mov
loope
daa
fs
ins
pop
cmp
mov
jl
(bad)
pop
sub
sbb
push
mov
push
in
and
ror
clc
mov
and
mov
arpl
and
add
add
adc
xor
imul
jb
lock
jle
fld
jmp
inc
in
add
jb
lods
push
cld
pop
push
xchg
loope
and
div
pop
or
sub
cmp
mov
shr
sbb
paddd
arpl
test
aad
sub
ret
imul
dec
push
sub
jnp
xlat
sub
prefetchnta
lds
sbb
stos
mov
clc
xor
xor
xor
adc
jecxz
xor
cmp
xchg
adc
mov
aam
adc
add
ret
adc
movs
push
fdivp
(bad)
jmp
pop
movs
push
pop
bound
out
sbb
xor
cdq
lea
xchg
or
mov
mov
sub
addr16
popa
inc
jl
(bad)
(bad)
retf
imul
pushf
outs
or
rcl
adc
inc
and
xor
xor
mov
rol
and
ret
rcl
mov
mov
scas
add
iret
test
jecxz
xchg
test
adc
sahf
push
xor
adc
test
test
inc
dec
popf
inc
ins
ficom
aam
jnp
pop
jecxz
lea
lock
lock
lods
mov
jl
xchg
inc
aam
and
std
or
inc
imul
or
mov
pop
jae
push
and
pop
sbb
(bad)
ins
dec
clc
enter
fisubr
sub
and
shr
fcomp
out
push
and
xor
aas
push
test
jp
jmp
repz
pushf
clc
cmp
sub
cmp
pop
enter
xchg
jbe
dec
xor
data16
(bad)
sar
sbb
into
lahf
xchg
xchg
pusha
pop
stos
aas
mov
xchg
cmc
dec
or
inc
inc
(bad)
retf
add
push
bound
mov
fisubr
lds
sbb
pusha
push
pop
jle
shr
push
jl
mov
jae
inc
pop
jmp
sti
scas
daa
lahf
(bad)
shl
mov
dec
std
push
ret
pop
cli
mov
mov
pop
aam
aam
jmp
mov
(bad)
or
test
or
fdiv
inc
outs
repnz
mov
and
jmp
movs
test
adc
mov
jnp
test
inc
or
movs
repnz
dec
dec
jb
sbb
aad
xor
jae
stc
out
repnz
ds
or
cmp
xchg
push
in
jge
das
mov
cdq
cmps
icebp
add
xor
out
xor
test
push
adc
neg
fist
mov
and
inc
popf
aad
mov
popf
add
movs
push
xchg
pop
arpl
pusha
pushf
mov
call
out
push
cwde
inc
xor
js
in
aad
(bad)
and
dec
inc
ficom
mov
das
push
xor
retf
icebp
mov
and
jmp
mov
add
or
je
push
pop
aam
addr16
sbb
or
(bad)
sbb
or
jns
xor
dec
xchg
mov
pop
hlt
lds
loope
and
out
fild
call
push
jb
mov
jl
mov
dec
clc
mov
jle
mov
and
pop
mov
out
sub
pop
push
or
out
mov
js
mov
cli
pop
scas
push
je
jno
retf
xchg
jo
sub
fwait
mov
xchg
cli
cmp
aam
jno
pusha
cmp
stos
loope
addr16
sti
cmps
or
out
adc
inc
jp
retf
dec
push
js
or
inc
dec
pop
aas
adc
mov
sub
mov
push
(bad)
in
push
sub
ins
pop
lds
sbb
pop
pusha
stc
add
retf
jmp
lahf
mov
push
lahf
pop
add
idiv
inc
and
jle
outs
mov
cmp
jbe
in
adc
jbe
jno
stos
lahf
in
pop
icebp
mov
adc
jmp
test
pop
cmps
or
in
test
push
add
rcr
pop
cmp
adc
sub
xor
lock
mov
test
push
push
jmp
jge
fadd
push
pushf
repz
pusha
push
iret
loope
loopne
ret
mov
pop
movs
mov
jp
inc
fnstsw
xchg
mov
xchg
pop
mov
lock
dec
repnz
repz
int3
stos
sbb
popfw
movs
and
xchg
sub
aas
fstp
fdiv
inc
and
jl
test
add
stos
jo
ins
jno
daa
std
fxch
pop
ret
push
(bad)
dec
cmc
pop
jle
sbb
pop
xchg
mov
aaa
pop
std
movs
cwde
push
xchg
push
jmp
sbb
jnp
mov
push
xchg
adc
int3
in
fisub
xchg
mov
cli
xchg
sahf
ins
clc
xchg
je
mov
inc
sub
pop
shl
loop
xchg
adc
mov
mov
add
fdiv
xchg
dec
dec
jg
add
ret
nop
or
imul
or
mov
sar
ja
xor
sub
cmc
cmp
mov
and
icebp
test
mov
pop
rol
adc
(bad)
push
fs
nop
fst
dec
and
test
popa
mov
mov
dec
clc
xor
mov
adc
or
js
fimul
fldenv
cmps
leave
cmp
arpl
mov
shl
in
or
shl
and
add
aad
pop
repnz
push
std
cmp
jle
call
lock
(bad)
stc
enter
sub
scas
jmp
dec
xor
pop
ficom
ins
ss
test
sub
push
loopne
mov
inc
pop
shl
cmp
lock
jle
xchg
sti
adc
dec
pop
loop
in
test
push
jp
out
sahf
sub
mov
rcr
jae
mov
xchg
lahf
js
or
(bad)
hlt
inc
scas
jne
ficom
jne
(bad)
jg
mov
(bad)
stos
shl
ss
mov
ins
add
fist
fsub
out
out
das
(bad)
fmul
repz
mov
xchg
mov
mov
mov
cmp
cmps
test
scas
test
ja
idiv
pop
int
loop
rcr
loope
and
dec
xlat
cmp
mov
push
mov
push
and
pop
push
(bad)
jg
rcr
int
mov
daa
mov
pop
sub
(bad)
clc
fstp
push
mov
iret
cmp
mov
xchg
sub
lock
mov
mov
retf
mov
inc
retf
cmp
idiv
cmp
add
js
sub
ja
cs
ret
jne
push
add
dec
lea
and
(bad)
and
cmp
xor
dec
(bad)
int
xchg
xchg
add
mov
aas
mov
dec
mov
fidiv
loop
(bad)
jge
rep
push
int3
fist
das
cs
pop
inc
ret
push
dec
xlat
je
pop
out
pop
add
xor
or
fisttp
mov
dec
scas
and
xlat
hlt
cmp
mov
sub
idiv
xor
jl
cmp
test
clc
cmp
cmovno
lock
adc
dec
sub
data16
retf
pop
iret
rol
or
xchg
scas
sar
mov
add
stos
es
cmp
xor
push
fstp
or
loopne
repz
mov
jne
mov
ror
(bad)
cmp
dec
scas
std
fist
mov
sub
jns
jmp
(bad)
in
lods
push
jge
pop
(bad)
push
adc
jmp
or
add
sub
jns
ja
daa
add
mov
test
mov
mov
cmc
xor
pop
sti
jge
scas
push
loope
fisttp
enter
aaa
jo
pop
sbb
mov
rcr
cmp
push
jl
pop
sub
aaa
(bad)
cmps
(bad)
mov
mov
mov
xchg
and
mov
dec
or
inc
cdq
sub
xchg
pop
sbb
(bad)
pop
push
mov
xlat
sbb
ins
push
ja
fimul
fwait
stos
inc
mov
mov
sub
lea
dec
leave
mov
and
adc
adc
dec
outs
mov
retf
scas
sbb
in
jo
cmp
sub
aam
add
sbb
sti
mov
adc
aam
xchg
sbb
movs
lea
push
mov
fsubr
cs
fdivp
fnstsw
xor
fdivr
dec
sbb
mov
lods
add
or
jbe
cmps
mov
inc
shr
mov
addr16
and
repz
retf
fadd
mov
xchg
cmp
jle
sbb
inc
sbb
xchg
(bad)
and
and
div
test
std
adc
pusha
cmp
pop
ror
jp
stc
or
aad
jmp
ret
aas
dec
ret
outs
call
mov
int3
mov
call
sub
outs
pushf
lds
sti
outs
cbw
int3
xchg
sbb
mov
repnz
pop
fild
nop
js
fadd
cmc
fwait
aam
dec
sub
inc
xchg
dec
cwde
and
cli
and
pop
dec
fs
xlat
xchg
xchg
repnz
push
mov
fisttp
icebp
lea
jl
and
call
xlat
mul
xchg
pop
jmp
es
sbb
fdivrp
mov
adc
popa
test
outs
pop
push
je
in
rep
sub
cld
mov
out
into
(bad)
cmp
jo
dec
cmp
xchg
lahf
(bad)
in
xor
jns
mov
and
cld
je
mov
fnstcw
or
or
movs
arpl
call
es
cmp
mov
adc
push
sub
aad
cmp
mov
pop
mov
pusha
mul
jnp
mov
xchg
fsubr
neg
pop
aas
test
xor
push
in
cwde
call
add
(bad)
xlat
ret
xor
jp
int
or
dec
scas
sub
in
add
hlt
nop
inc
or
dec
mov
adc
cmp
jle
or
cmps
add
sub
sbb
xchg
xchg
mov
cmp
lahf
daa
cmps
cli
rol
cmp
pop
jle
jns
or
gs
mov
es
imul
xchg
mov
inc
pop
imul
add
xor
dec
push
sti
sbb
sbb
cld
test
sbb
stos
icebp
movs
mov
int3
xchg
nop
idiv
das
mov
js
cs
push
mov
mov
ja
call
int
mov
xchg
xchg
imul
push
mov
retf
movs
enter
push
inc
adc
cmps
iret
dec
imul
sahf
loop
test
lds
pop
cld
inc
push
aad
dec
mov
jo
in
(bad)
repz
lock
cmp
xchg
jne
push
mov
ds
mov
dec
(bad)
cmp
or
popa
jmp
xchg
mov
jmp
ja
fs
or
xchg
cmc
clc
push
das
pushf
add
mov
mov
mov
retf
sub
mov
push
and
mov
push
or
fwait
aaa
ficomp
nop
ja
fld
jbe
popa
mov
aad
inc
push
cmps
inc
push
push
ins
mov
push
pop
mov
es
xor
mov
or
cmp
sti
mov
shl
push
add
pand
mov
out
iret
dec
xor
loopne
mov
cmps
pop
lods
outs
repz
lods
into
bnd
adc
inc
leave
cmp
adc
sub
push
or
jno
or
jge
jb
pop
fsubr
add
adc
dec
pop
das
mov
int3
adc
mov
inc
(bad)
mov
fwait
adc
inc
xor
retf
mov
push
cmp
in
cmc
rcr
or
data16
sbb
imul
out
or
sub
push
add
mov
sbb
sbb
mov
mov
or
pop
inc
in
fiadd
mov
mov
call
ficomp
outs
xlat
inc
inc
das
arpl
and
mov
xor
jno
test
inc
add
cmp
into
mov
jle
(bad)
jecxz
dec
and
repz
ror
and
fidivr
les
jns
add
pop
(bad)
std
fisubr
cwde
push
adc
cmp
(bad)
fstp
push
int3
loop
mov
dec
loop
sbb
cmp
add
aas
jnp
jbe
inc
(bad)
in
mov
ja
fdiv
stos
jmp
or
mov
(bad)
cld
std
jne
sub
gs
mov
adc
dec
mov
jmp
pushf
in
test
mov
and
gs
fisub
pop
fld
adc
shl
jmp
iret
rol
jne
and
and
mov
add
test
inc
cmp
sbb
sar
mov
add
and
xor
(bad)
rol
mov
and
lock
jle
lock
leave
loop
(bad)
pop
xchg
sub
pop
xor
lods
aas
cmp
stos
fadd
test
pop
test
mov
push
jnp
xor
dec
inc
stos
add
push
dec
mov
mov
or
push
mov
shl
nop
xchg
xor
pop
push
sbb
add
(bad)
ja
fbld
pop
ja
push
out
jge
fucomip
push
mov
pop
ds
mov
js
adc
mov
cli
sbb
mov
jb
out
ins
iret
jnp
rcl
test
es
jae
sbb
cmp
mov
cmp
rol
xchg
xchg
mov
xchg
xchg
cmp
add
cmps
inc
or
cmps
scas
arpl
xchg
(bad)
mov
test
stos
cmps
xchg
add
in
jbe
cmps
adc
jmp
jecxz
iret
stc
ins
xchg
lea
jnp
dec
cmp
xor
add
ficomp
iret
sti
(bad)
mov
cmp
xchg
mov
push
push
mov
add
jbe
(bad)
jmp
or
test
jle
mov
leave
inc
int3
mov
dec
xchg
daa
push
adc
(bad)
xchg
jge
pop
push
mov
push
sub
xor
jae
sub
jb
or
add
fs
lahf
mov
or
xchg
mov
pop
add
mov
dec
mov
mov
or
push
outs
es
and
push
cmp
lods
int
stc
sub
mov
sbb
sar
push
and
fisub
dec
into
rcpps
jae
mov
dec
dec
jle
shl
dec
xlat
sbb
or
mov
loope
jcxz
or
imul
jnp
loop
xchg
add
jb
(bad)
ret
add
inc
daa
dec
neg
dec
xchg
popa
lods
and
dec
mov
sahf
cdq
mov
dec
inc
icebp
push
pop
jmp
sbb
lock
xor
jl
mov
cmps
xor
mov
in
clc
adc
movs
call
mov
adc
mov
add
loope
push
ins
xor
test
and
inc
xlat
lock
fidivr
xchg
cli
mov
jno
inc
out
pop
xor
dec
dec
cmp
imul
int3
push
xchg
fs
push
jo
xor
repnz
xor
xlat
mov
pop
sti
push
and
xchg
jb
xchg
push
pop
cmp
xchg
es
adc
(bad)
sar
xchg
ret
xchg
and
push
lock
stc
sbb
push
outs
xchg
sbb
and
lods
test
mov
jne
es
sbb
mov
out
pushf
adc
xchg
in
push
push
hlt
push
xor
pop
jne
jl
pop
sbb
(bad)
in
stos
movq
mov
cmp
ret
stc
push
pop
ds
popa
add
in
jo
ins
and
ins
jl
jecxz
adc
jge
test
in
cmps
and
mov
lahf
and
mov
out
es
cmp
dec
rcr
jl
sbb
cmp
and
xchg
and
lods
outs
mov
pop
jb
dec
fadd
sub
or
sub
mov
stc
xchg
dec
xlat
(bad)
mov
retf
xchg
fs
lods
sub
mov
test
test
ret
gs
xor
fwait
bound
ins
test
jb
ret
push
push
ja
in
imul
cmp
fcomi
clc
in
add
imul
cld
jb
xchg
pusha
mov
and
out
fld
inc
or
sub
es
hlt
shr
jl
aad
mov
sub
mov
mov
test
xchg
cmp
push
shl
mov
scas
jmp
ret
test
cmp
dec
and
xchg
mov
scas
add
mov
shr
out
lahf
sbb
not
repnz
mov
push
outs
int
stos
xor
cmp
cmps
add
icebp
xor
ret
push
pop
js
sti
add
fldl2t
test
sar
add
ss
(bad)
xchg
ja
scas
cmovg
dec
jmp
push
pop
mov
or
adc
pop
scas
pushaw
test
jge
aad
mov
sub
repz
test
ret
push
cwde
mov
imul
std
ds
mov
clc
(bad)
popf
cs
in
dec
xor
mov
aam
popf
push
mov
adc
xor
pop
mov
pop
fs
popf
dec
adc
sbb
arpl
adc
stos
mov
in
pushf
pusha
and
or
(bad)
das
adc
fmul
or
mov
inc
push
pop
cmp
in
dec
mov
jg
int
popa
call
jns
clc
out
mov
pop
out
outs
mov
dec
gs
and
arpl
je
mov
movs
fisubr
or
or
cmp
shr
mov
push
xor
push
call
loopne
pop
nop
int
out
adc
dec
sub
dec
push
adc
dec
in
(bad)
arpl
mov
jmp
cs
call
and
sub
lea
cmp
imul
pop
pop
sbb
or
fimul
mov
lock
mov
sbb
outs
leave
fist
inc
mov
imul
int
mov
push
popf
push
lock
push
loopne
mov
dec
or
call
sbb
call
lea
movs
cmps
and
and
cmp
dec
fild
jg
fdivr
or
sbb
test
pop
daa
jl
sub
dec
jge
out
(bad)
sti
push
not
xor
(bad)
sbb
xchg
sbb
inc
mov
lock
(bad)
adc
add
outs
adc
(bad)
retf
jno
push
xchg
and
mov
int3
mov
adc
lods
xchg
jle
sar
adc
ss
fwait
scas
out
xchg
xlat
pop
dec
adc
movs
in
pop
mov
xchg
frstor
popf
dec
cmp
xor
xor
int3
mov
jg
dec
and
dec
cmc
idiv
(bad)
or
mov
icebp
js
leave
push
movsx
pop
outs
cwde
call
mov
lods
push
pushf
mov
js
mul
call
xor
clc
dec
dec
sahf
inc
cdq
xlat
add
mov
lea
sub
push
bound
push
adc
dec
sub
xor
cs
lods
repnz
push
imul
adc
mov
and
xor
mov
int
cmp
std
cmp
or
retf
ret
push
addr16
popa
ins
mov
mov
scas
lahf
jae
lahf
xlat
push
jbe
push
dec
outs
xchg
(bad)
push
test
jmp
mov
mov
loop
retf
fstp
fs
movs
or
ins
cmp
dec
or
mov
or
out
int3
int3
pop
out
and
lock
push
sbb
cwde
pushf
or
mov
push
stos
mov
icebp
mul
or
lahf
adc
ret
jp
pop
mov
jae
jnp
jp
jmp
fsub
lock
and
aaa
ror
mov
sub
in
jns
lock
jne
or
pop
xor
std
push
into
rcr
mov
cwde
pop
je
inc
les
jmp
lods
mov
mov
cs
retf
int
in
sub
sub
and
es
push
das
bndstx
dec
loope
inc
mov
jge
fsubr
(bad)
jecxz
xor
div
inc
jne
mov
dec
cdq
lahf
cmp
pop
lahf
call
inc
cmps
or
dec
aam
push
call
xchg
sbb
jp
dec
inc
jno
imul
out
xor
(bad)
ret
ins
xor
cmp
packsswb
cmpxchg
xor
lds
jg
mov
in
dec
jecxz
pop
pop
xlat
xlat
imul
inc
ins
xor
adc
in
push
jb
loop
or
ficom
xor
mov
or
sbb
enter
out
call
ficomp
out
add
test
bound
sahf
push
daa
fucomi
xchg
add
dec
dec
mov
jg
push
sub
shr
fisttp
repz
fsubr
cmps
mov
int
and
imul
jmp
shr
(bad)
push
fdiv
daa
inc
stc
add
mov
ret
ss
inc
data16
das
add
add
fist
adc
pop
dec
dec
shl
call
jmp
mov
adc
dec
xchg
jecxz
sbb
xor
aas
sar
retf
int
push
mov
or
cmc
inc
repnz
cs
cmp
sub
push
adc
retf
mov
cmp
jnp
icebp
dec
and
add
pop
out
shl
hlt
sbb
adc
cmc
jae
xchg
pop
aas
dec
daa
mov
(bad)
ret
gs
push
imul
inc
add
mov
pop
fs
cmp
mov
ins
(bad)
or
mov
gs
loop
inc
sub
xchg
cld
sbb
sbb
addr16
inc
add
loopne
ret
lds
stc
pop
add
clc
xor
sbb
jbe
jg
fucom
jp
xor
mov
adc
int3
add
fistp
push
or
cmp
(bad)
ss
sbb
push
cs
ltr
mov
fs
sti
mov
test
jmp
mov
das
push
bound
neg
cmc
test
add
adc
adc
add
adc
cdq
push
rol
jne
mov
mov
ror
aad
aaa
dec
mov
repnz
imul
push
jmp
xchg
or
bnd
movs
or
sub
mov
jne
xchg
clc
dec
outs
sub
test
sbb
xchg
cmp
inc
push
add
mov
push
js
dec
inc
sub
mov
mov
rcr
jbe
nop
aaa
jmp
or
movs
pop
inc
pop
js
std
pop
std
mov
or
addr16
sbb
lock
pusha
lea
dec
pushf
adc
cmp
ret
stos
test
and
xchg
int3
jb
mov
jne
stc
mov
push
cdq
pushf
adc
xchg
ins
neg
jge
pushf
xor
and
fs
jo
xchg
stos
mov
mov
outs
dec
les
jmp
daa
or
les
mov
sub
or
loope
je
fcomp
xlat
mov
pop
cmp
push
mov
inc
sub
inc
add
fld
pop
mov
pop
(bad)
dec
imul
sbb
pop
xor
call
loope
cs
retf
dec
(bad)
add
retf
or
xor
das
mov
xchg
(bad)
sub
cmp
scas
cdq
xchg
(bad)
jmp
sub
ror
lds
out
mov
int
ror
pusha
out
sbb
lods
push
mov
(bad)
ds
and
shr
test
xchg
sbb
push
sbb
into
mov
or
(bad)
cmp
xchg
dec
mov
push
jle
loopne
xor
jg
test
sub
cli
and
xchg
fisubr
dec
push
nop
dec
pop
jnp
aaa
and
mov
sbb
push
inc
and
idiv
xchg
popf
inc
xchg
dec
outs
ins
jle
dec
add
outs
dec
(bad)
lods
mov
push
test
fcom
pop
pop
fwait
int3
fwait
cs
aas
test
loope
int
cdq
clc
jmp
iret
test
jo
pop
inc
push
into
pop
std
rcr
xchg
cwde
push
aas
lahf
adc
adc
xchg
pushf
call
mov
(bad)
loopne
cmps
(bad)
loope
inc
dec
icebp
test
cmps
sub
mov
ret
lahf
mov
pop
and
adc
es
pop
hlt
fnsave
and
(bad)
cdq
out
jnp
shl
and
aad
fisubr
xchg
cs
(bad)
xchg
jbe
nop
inc
add
adc
add
push
sub
dec
cld
cmp
div
rcl
mov
or
dec
nop
movs
mov
iret
jg
fadd
ret
sbb
sbb
int
and
mov
jg
push
jge
inc
or
into
sti
shl
jp
test
jecxz
lds
adc
xor
cmp
dec
cmc
mov
es
cmp
out
(bad)
addr16
dec
test
jbe
stos
jl
jp
xchg
push
mov
inc
or
dec
fst
gs
inc
scas
ja
lods
mov
mov
or
adc
adc
(bad)
fcomip
inc
mov
or
movs
repnz
add
cmp
mov
push
xlat
clc
sbb
aas
push
leave
xlat
mov
xchg
inc
dec
xchg
scas
add
das
popa
ss
mov
into
ss
fsubp
push
mov
adc
fwait
or
sar
add
mov
sbb
mov
mov
lea
lods
xchg
dec
outs
leave
pop
cld
cdq
pop
in
lahf
mov
xlat
mov
adc
or
inc
pop
xor
mov
sub
fst
pop
stos
and
sub
dec
outs
adc
call
outs
or
mov
pop
adc
shl
push
rcr
(bad)
add
jmp
xchg
pop
push
imul
pop
add
cmps
scas
push
xchg
test
sbb
pusha
out
lock
cmp
xchg
retf
dec
pop
jecxz
cs
pop
fcmovnb
rcl
xchg
pop
inc
dec
adc
sub
ja
or
mov
mov
or
mov
sub
and
sub
jnp
inc
retf
dec
enter
pop
mov
inc
test
or
fld
xor
(bad)
test
lds
sti
push
in
xchg
retf
imul
mov
jl
imul
ror
add
sbb
jo
inc
lahf
push
int
push
pop
push
sbb
cld
inc
mov
mov
stc
push
out
div
mov
push
push
mov
push
es
mov
out
cmp
in
mov
xor
and
xchg
add
call
imul
dec
iret
aas
movs
lods
adc
or
mov
mov
sub
cmps
pop
fist
not
cmc
stos
loope
in
and
repz
popa
loop
cmp
(bad)
xor
out
xor
enter
cmp
imul
cld
fwait
jge
inc
sbb
adc
push
test
pop
mov
mov
xor
lods
mov
in
pop
jmp
scas
fcmovnbe
mov
push
cmp
sbb
into
pop
jb
popa
dec
test
and
stc
in
(bad)
(bad)
mov
fst
lds
test
sub
or
cmp
rcr
mov
(bad)
mov
inc
jecxz
icebp
arpl
push
inc
or
movs
add
sbb
ins
xchg
jno
jno
popf
pop
aas
add
pop
mov
cmp
push
aaa
pusha
cmps
ja
dec
stos
xchg
(bad)
sub
cmps
inc
mov
test
and
mov
push
lods
cmp
imul
sbb
(bad)
int
mov
sub
push
mov
pop
mov
and
jo
cmp
mov
and
sbb
loop
jns
cmps
icebp
ret
rcr
xchg
cmp
imul
cmp
les
inc
test
jnp
mov
adc
(bad)
fs
(bad)
xlat
movs
inc
repnz
ins
push
enter
xchg
push
adc
add
sub
push
or
ins
pop
and
iret
aas
enter
mov
xchg
push
cmp
test
loopne
cmps
sub
in
arpl
jb
(bad)
in
push
or
adc
pop
xchg
leave
push
push
mov
dec
push
inc
fs
out
mov
gs
mov
cli
xchg
shl
push
dec
out
adc
pop
stos
xchg
dec
(bad)
rcl
jmp
popf
jmp
out
mov
adc
pushw
out
cmp
into
aad
inc
mov
jno
jae
test
and
(bad)
in
cmp
pop
popa
loope
mov
adc
or
mov
int
test
and
sbb
sub
arpl
push
call
shl
pop
add
into
nop
mov
fs
cmc
push
mov
das
arpl
inc
icebp
mov
sub
push
sti
bound
mov
iret
push
push
mov
mov
js
inc
mov
sbb
jmp
es
and
and
sbb
dec
jns
mov
pop
or
movs
movntq
add
xchg
cmp
sbb
xchg
adc
(bad)
enter
xchg
scas
(bad)
xor
test
and
jl
or
hlt
aam
scas
mov
loope
jg
and
or
or
sub
jbe
aad
add
(bad)
cmp
out
mov
or
retf
jl
cmps
cmp
aas
mov
add
or
and
enter
lahf
arpl
enter
push
idiv
mov
aam
adc
pop
out
jp
cli
inc
scas
lods
adc
dec
ret
push
jmp
call
pop
fidivr
into
add
stos
arpl
inc
push
push
xor
jbe
icebp
xor
xlat
(bad)
jne
fstp
loope
call
(bad)
jge
push
jmp
push
jmp
addr16
inc
loopne
mov
imul
xchg
jl
sti
mov
cmp
sbb
xchg
mov
dec
xlat
sbb
out
mov
sbb
out
mov
vunpckhps
mov
xchg
test
(bad)
and
fadd
cmps
xchg
jbe
jmp
mov
popa
push
leave
push
jnp
out
cdq
repnz
out
cmc
frstor
adc
test
aas
aam
dec
xchg
pop
out
ss
adc
jg
(bad)
cmp
xor
(bad)
jmp
cmc
lahf
dec
mov
daa
xchg
push
in
out
mov
mov
ret
mov
pushf
push
adc
jmp
or
push
rol
pop
or
xor
inc
xor
push
call
adc
pop
mov
shr
(bad)
(bad)
arpl
aaa
iret
inc
pop
es
pop
and
lock
mov
out
(bad)
cmp
scas
nop
das
scas
sbb
mov
add
jmp
cli
sub
ins
adc
hlt
in
or
or
shl
clc
popf
cmp
lods
mov
cmp
outs
cmp
adc
mov
push
test
stos
adc
sbb
stos
adc
xor
add
xor
js
ret
setno
sbb
xor
and
fisttp
sbb
lea
mov
lea
(bad)
retf
mov
sar
ret
shl
mov
sbb
mov
fild
mov
movs
das
in
cmp
(bad)
out
inc
je
loopne
ins
fist
jecxz
mov
push
pop
rcl
jo
mov
cmp
cmps
jnp
jbe
test
into
xchg
mov
dec
pop
test
test
les
mov
xor
adc
mov
(bad)
mov
lods
adc
mov
sub
sub
mov
je
cdq
int3
dec
(bad)
or
int3
mov
gs
js
sti
je
outs
mov
icebp
pop
push
mov
das
ins
ss
adc
ror
pop
leave
iret
pop
and
push
(bad)
mov
icebp
jb
pop
cmp
add
sub
push
scas
fwait
aam
jno
jle
test
stos
jp
jle
nop
cmp
push
popa
pop
dec
pop
jb
mov
in
inc
sub
jl
inc
(bad)
or
ins
jmp
retf
xchg
dec
mov
mov
outs
add
fimul
loopne
test
pushf
fist
sbb
clc
cmp
xor
or
or
jg
cmps
xor
or
adc
cs
fnstenv
dec
xchg
jae
sbb
bound
inc
out
jae
pop
stos
push
loopne
add
hlt
in
push
mov
cdq
(bad)
pmulhw
fld
mov
jo
mov
cmp
mov
cdq
inc
out
in
jmp
adc
jge
push
xchg
dec
scas
nop
in
icebp
movs
or
mov
mov
xor
mov
(bad)
retf
cdq
push
inc
loop
icebp
btr
mov
cdq
add
and
scas
adc
and
mov
cwde
inc
dec
aam
cmp
clc
jbe
add
push
xchg
in
jbe
popf
mov
neg
movntq
mov
push
sbb
pushf
les
clc
mov
(bad)
ins
in
xchg
test
repz
adc
dec
nop
dec
nop
sbb
xchg
shl
cli
clc
mov
scas
enter
or
cmp
call
iret
(bad)
lock
fwait
cli
push
cs
mov
ficomp
fidivr
into
(bad)
mov
push
ins
lahf
ins
add
sbb
hlt
fimul
add
jo
jmp
push
ret
adc
fld
ffreep
mov
je
or
popf
xchg
add
xchg
inc
in
cmp
adc
cwde
pop
stc
adc
mov
mov
pop
imul
and
cmp
shr
add
add
stc
lea
ds
push
rcl
hlt
add
pop
mov
aaa
aam
shl
test
iret
pop
mul
sbb
cwde
and
pop
jne
ss
mov
ins
xor
xlat
in
pop
jmp
xchg
es
lahf
xor
les
stos
call
loopne
test
mov
inc
aas
popf
int
not
stos
imul
mov
retf
test
sub
push
loop
push
outs
into
jo
cmps
stos
loop
rol
push
fcmovne
popf
js
lahf
xor
and
xchg
dec
ficom
cmp
jne
in
dec
fcomp
dec
dec
popf
ret
sbb
push
lods
test
fidiv
add
push
xchg
push
sbb
push
xchg
fstp
pop
add
jmp
inc
pop
or
xor
in
ret
popa
and
clc
cmp
cdq
iret
imul
mov
shr
push
mov
sub
mov
test
dec
pop
in
mov
outs
sbb
xchg
dec
or
jle
push
ins
je
jmp
dec
dec
pusha
sbb
push
retf
gs
iret
push
stos
pop
push
cmp
bound
xchg
pop
fidiv
sbb
mov
xor
mov
lds
mov
call
call
mov
cmp
cmps
add
dec
sub
pop
adc
mov
les
or
xchg
retf
leave
sub
mov
aad
mov
mov
dec
fisttp
ins
call
or
retf
fcom
inc
(bad)
mov
mov
add
test
and
daa
(bad)
pop
pop
test
push
sbb
test
pop
(bad)
popa
cs
mov
xor
int
jno
(bad)
psubusw
aam
stos
ds
add
inc
xor
div
mov
dec
(bad)
xchg
cmp
loop
popf
(bad)
cdq
icebp
mov
sub
fs
adc
sub
ret
fchs
cmp
pop
inc
fs
or
imul
cmp
in
cmp
push
cwde
push
stc
ret
push
and
inc
pop
xchg
rcr
xor
inc
clc
int3
push
pop
or
loopne
fcom
(bad)
test
inc
push
lock
pushf
adc
lds
xchg
pop
mov
jne
movs
iret
inc
test
lods
mov
data16
lds
(bad)
mov
cs
repz
or
ret
test
arpl
dec
loopne
xchg
and
dec
dec
je
push
mov
pop
lods
jmp
sbb
arpl
add
int
dec
scas
cwde
stc
or
mov
(bad)
pop
xor
inc
out
lahf
bound
lahf
jg
lea
push
push
repnz
sbb
and
xchg
jae
inc
sub
lods
ror
adc
data16
push
das
jle
cmps
fiadd
sbb
add
and
xchg
sub
loop
(bad)
cs
inc
fistp
inc
scas
lock
stos
jnp
js
imul
(bad)
aam
jge
dec
stos
dec
pop
not
nop
mov
mov
(bad)
and
(bad)
cli
mov
mov
dec
mov
out
or
jne
cdq
or
stos
mov
dec
retf
fimul
mov
call
hlt
aas
out
cdq
sub
sub
loop
add
push
es
dec
mov
mov
mov
xchg
pushf
out
xor
pusha
mov
cmp
push
jns
aam
sbb
mov
mov
or
loop
lds
jmp
inc
mov
scas
push
mov
fcomp
ins
mov
movs
shl
dec
sbb
mov
cli
xor
out
ins
jo
ret
add
retf
adc
jle
or
xchg
and
(bad)
jg
sub
cld
adc
push
inc
pop
xchg
lock
mov
mov
mov
mov
mov
inc
call
or
pop
xor
inc
sub
in
rcr
pop
mov
outs
cmp
mov
shl
lock
adc
int3
cmps
hlt
xchg
jae
mul
sti
fs
adc
mov
xchg
push
jne
test
xor
jmp
mov
mov
int3
cmps
jp
inc
mov
mov
add
addr16
ror
lods
arpl
jl
aaa
jmp
mov
enter
out
cli
pop
mov
mov
rol
or
fisttp
jmp
sub
mov
(bad)
jnp
lahf
cdq
out
mov
mov
pop
inc
push
fcmovu
cmp
outs
rol
sub
mov
shl
pop
lods
add
xor
mov
scas
jl
jne
sti
add
mov
sub
popa
sub
(bad)
jo
push
pop
(bad)
mov
sub
movs
cmp
aam
or
test
pop
mov
mov
xchg
adc
pop
(bad)
push
or
dec
lods
push
and
std
mov
sbb
fsub
ror
or
dec
mov
adc
call
push
mov
imul
xor
mov
xlat
stc
mov
xor
push
clc
outs
or
jo
mov
movs
push
sbb
push
mov
mov
shr
imul
sahf
ins
in
je
xor
cmp
lock
scas
cwde
mov
rcr
movs
aad
push
add
out
xor
arpl
faddp
xor
or
lds
lea
mov
sahf
es
jo
popf
jae
xchg
add
add
add
xchg
mov
(bad)
test
call
mov
mov
std
push
jmp
fistp
test
aad
push
jbe
cli
nop
push
fiadd
imul
bswap
push
leave
imul
nop
pop
jno
(bad)
mov
jl
mov
sub
adc
loope
gs
stc
ja
cld
pop
mov
fwait
leave
mov
imul
jmp
test
(bad)
fwait
xor
cli
and
retf
imul
popa
push
jne
sub
call
jnp
pushf
pusha
fs
and
adc
mov
sbb
sub
and
push
shr
shl
imul
out
test
dec
cmp
push
mov
xor
mov
and
cmp
add
rcr
(bad)
adc
mov
lds
in
lahf
lea
lods
push
sbb
(bad)
in
dec
pop
mov
gs
xchg
and
inc
out
inc
and
mov
mov
adc
and
cmp
adc
cmps
sub
adc
mov
mov
sbb
cmp
out
test
mov
es
mov
add
fadd
inc
or
das
shl
pop
int3
push
ja
mov
loopne
add
aad
lds
cmps
ss
inc
movs
dec
jo
shl
mov
and
lock
add
push
push
into
test
test
push
imul
stos
popa
cwde
adc
jmp
fucomi
bound
fs
or
jmp
jmp
xor
call
jmp
fist
sbb
enter
sbb
mov
mov
ja
cdq
retf
pop
and
scas
sti
xchg
les
pop
daa
inc
add
push
popa
mov
pop
pop
aaa
dec
sub
jae
mov
pop
and
dec
retf
rcr
(bad)
scas
fwait
ret
jmp
adc
sub
call
sub
out
ss
adc
(bad)
pop
mov
test
inc
nop
(bad)
clc
shl
jmp
fcos
xor
push
sub
cdq
add
dec
cli
and
into
jecxz
cmps
inc
bound
inc
inc
jg
lahf
popa
push
mov
movs
stc
out
and
sahf
movs
cmps
jl
push
mov
ja
cmp
cld
out
fmul
cmp
push
dec
sbb
xchg
fstp
rcr
mov
mov
jne
jge
mov
sbb
jl
cld
dec
call
daa
in
sub
fmul
or
jmp
test
push
adc
add
dec
call
cwde
in
mov
pop
add
and
in
arpl
or
inc
cli
inc
je
hlt
ret
adc
dec
ror
(bad)
loop
push
push
jmp
(bad)
mov
push
mov
ja
ds
push
movs
jo
mov
xor
mov
enter
popf
sbb
repnz
ins
or
pop
int3
push
out
out
add
add
jbe
dec
push
cmp
sub
or
jge
mov
pop
add
add
dec
sbb
mov
addr16
push
adc
test
push
xchg
pop
adc
mov
mov
test
mov
dec
jle
xchg
lea
fcom
mov
clc
push
js
pop
shr
pop
sub
xchg
pop
cld
mov
ja
inc
pop
stos
std
xor
std
repnz
fscale
mov
fisub
nop
push
out
mov
enter
stos
pop
mov
push
inc
loopne
ins
push
cmp
mov
nop
mov
pop
fadd
lock
shl
sub
mov
mov
cdq
movs
xor
ins
pop
xlat
test
xor
ret
mov
test
fucomp
leave
sub
hlt
es
(bad)
movs
sti
mov
cmp
xchg
clc
xor
jns
into
xchg
call
and
lods
jae
adc
add
scas
je
add
hlt
idiv
aaa
retf
enter
mov
push
push
cmp
or
scas
int3
dec
mov
pop
ss
cmp
js
pop
mov
clc
jmp
out
mov
aaa
sub
lahf
rol
mov
(bad)
mov
jae
in
xchg
sub
ror
mov
lods
aam
hlt
(bad)
inc
mov
sahf
mov
mov
inc
fs
bound
pinsrw
nop
imul
xchg
mov
or
dec
fucom
int3
push
fcmovnu
shl
ss
xchg
retf
push
icebp
mov
test
retf
movs
repz
jne
mov
ret
(bad)
out
movs
mov
or
bound
adc
outs
dec
daa
push
jo
jl
and
mov
(bad)
sahf
push
mov
jmp
int
scas
mov
test
mov
cmp
mov
cmp
in
repnz
and
mov
mov
sub
hlt
loope
fmul
popa
mov
lds
lods
ins
cs
jge
add
fs
mov
cmps
movs
out
xor
les
sbb
add
(bad)
and
outs
mov
dec
cmp
sbb
shl
fimul
movs
dec
test
jg
and
xchg
push
outs
sbb
rdpmc
xor
and
xor
call
and
mov
mov
cmps
lods
retf
std
addr16
dec
fnsave
adc
xor
jno
fidivr
loopne
or
mov
lds
xchg
pop
scas
jp
(bad)
aas
pop
enter
mov
icebp
sub
mov
leave
leave
repnz
add
stos
adc
out
cmc
test
cs
xor
aas
shl
cs
mov
cmp
adc
in
inc
mov
leave
out
in
jb
icebp
loop
fwait
ss
and
or
dec
aaa
ret
cmp
adc
xor
ret
inc
sub
xor
xchg
mov
jecxz
inc
mov
loop
iret
xor
push
xchg
pop
enter
jnp
jle
fst
cmp
into
dec
les
cmps
xor
std
push
fiadd
ins
mov
inc
jno
dec
fld
lods
or
cmps
xchg
xor
or
pop
cli
lock
and
pop
push
jbe
jno
shr
mov
fnstcw
xchg
pop
retf
call
aaa
sub
lds
or
or
lods
mov
mov
cmp
stos
xor
shl
adc
mov
dec
fnstenv
test
rcl
stos
or
enter
ins
(bad)
jecxz
adc
sbb
call
cmp
mov
test
xor
adc
std
repz
add
jecxz
xchg
data16
mov
popa
pop
dec
loopne
das
cmp
bound
push
dec
push
mov
(bad)
mov
and
mov
or
and
mov
mov
xchg
or
add
xchg
and
ret
push
sub
sub
mov
jg
push
mov
pop
sahf
xchg
test
mov
adc
push
adc
retf
xor
fistp
(bad)
lods
ins
xchg
adc
inc
adc
mov
out
cmp
mov
cmp
pop
retf
jmp
popa
lods
nop
sbb
jne
icebp
mov
jp
xchg
movs
ins
cmps
jecxz
in
push
arpl
fnsave
or
push
cs
dec
or
sub
sbb
clc
mov
xchg
add
xchg
add
pop
cmp
std
rol
push
cmp
int3
or
pop
pop
cwde
jo
and
fisttp
add
dec
cli
sbb
test
or
push
cld
aad
inc
ss
ror
cmps
(bad)
adc
push
out
cld
mov
daa
jp
(bad)
inc
enter
test
push
int3
push
xor
in
in
mov
or
xchg
cmp
out
push
cmp
adc
bound
js
popa
and
mov
push
in
fcomi
and
enter
movs
mov
je
(bad)
cmp
repz
mov
int3
rcr
test
pop
sub
sbb
test
inc
and
stos
scas
cmp
and
dec
push
scas
bound
aad
adc
inc
mov
jle
sub
stc
stc
and
fadd
pop
xchg
sbb
inc
mov
inc
dec
mov
and
in
xor
call
mov
daa
pop
es
pusha
pop
jae
popf
pop
pop
je
das
xchg
add
inc
mov
mov
push
loopne
dec
ret
in
push
inc
adc
mov
test
pop
pop
jns
cmp
inc
add
inc
xchg
ret
(bad)
ffree
shl
(bad)
aam
jmp
not
scas
mov
jmp
sub
(bad)
mov
xor
shl
sub
fstp
in
adc
and
inc
xor
adc
daa
dec
outs
cmps
jmp
sub
adc
in
pop
push
test
xlat
clc
push
or
or
cli
loope
inc
xchg
dec
cld
call
cwde
movs
jo
popa
dec
xor
sub
sbb
mov
rol
in
mov
cmps
dec
neg
xchg
lods
stos
mov
mov
(bad)
idiv
cmp
fmul
jbe
mov
sub
or
sub
mul
or
popf
sub
js
stos
push
stos
and
or
mov
rol
xchg
or
and
mov
xlat
repz
(bad)
mov
dec
pop
in
dec
sub
pop
push
(bad)
xor
pop
loopne
cmp
mov
mov
push
mov
into
xchg
xchg
aaa
dec
add
std
add
mov
push
pop
fucomp
xchg
xchg
ins
fsubr
mov
repnz
xor
retf
mov
sub
ficom
pop
add
pop
loop
push
xchg
or
mov
repnz
sub
mul
xchg
sbb
into
in
test
daa
pusha
xchg
aaa
out
dec
add
inc
jns
je
(bad)
in
movs
cdq
push
or
imul
mov
js
mov
int3
or
mov
fisub
sbb
loopne
xlat
fs
pop
das
sbb
pop
bound
std
dec
push
push
imul
cmp
push
lds
inc
add
xor
push
pop
mov
outs
es
test
mov
sbb
mov
mov
ret
fbld
push
cmp
jb
mov
xor
mov
ror
leave
add
jne
mov
sbb
retf
xchg
push
mov
fidivr
add
mov
jb
loope
pop
rol
(bad)
mov
push
pop
or
xlat
xor
hlt
dec
push
sbb
stos
bound
test
inc
sbb
iret
inc
into
movs
loop
(bad)
loope
out
mov
adc
xor
cmp
retf
(bad)
fidivr
mov
lahf
mov
cmc
loopne
mov
lods
(bad)
jmp
cmps
jae
pusha
daa
cmc
sub
lds
xchg
sub
cmps
out
cs
rol
(bad)
or
inc
xchg
retf
xor
cmp
shl
ja
(bad)
mov
xchg
repnz
push
mov
outs
and
push
dec
and
mov
adc
clc
push
cmp
mov
sahf
sbb
mov
adc
cmp
addr16
stos
mov
aas
sub
xor
pusha
and
pop
and
xor
hlt
sahf
idiv
pop
ds
mov
xchg
test
sub
sahf
(bad)
adc
outs
sbb
cmp
gs
ss
pop
jmp
mov
(bad)
jo
jb
inc
(bad)
fldenv
sbb
mov
shr
mov
jecxz
adc
and
cmc
nop
inc
(bad)
loopne
jmp
jp
mov
cmps
shl
jo
js
or
add
aaa
push
xor
mov
sub
retf
repz
cmp
mov
fldenv
push
stos
fs
and
jae
ficomp
jmp
mov
xor
mov
scas
in
(bad)
inc
sub
mov
push
mov
jl
dec
adc
mov
(bad)
fsub
mov
cli
arpl
pop
aas
cdq
sahf
test
pusha
add
rol
aam
dec
mov
enter
mov
adc
sbb
xchg
out
mov
xchg
mov
mov
and
(bad)
cli
shl
or
nop
adc
out
jno
mov
neg
xchg
clc
(bad)
icebp
sbb
mov
add
xchg
mov
cwde
sbb
and
test
inc
cmp
in
sbb
in
sbb
repnz
pop
jne
lods
adc
add
adc
enter
jp
sbb
jl
inc
and
adc
adc
stos
bound
fimul
scas
push
pop
test
inc
push
rol
cdq
ror
adc
add
mov
or
xchg
outs
stos
sub
jmp
xchg
push
lahf
cs
or
sahf
mov
cdq
stc
mov
icebp
ja
xchg
cmps
in
cmp
retf
jl
sub
jno
mov
aas
adc
sub
inc
in
inc
inc
test
jmp
(bad)
fsub
or
xchg
ret
and
jge
add
cmc
dec
xor
push
cmp
mov
adc
jo
pop
loop
jbe
int3
scas
shl
mov
movs
lock
adc
sti
mov
sbb
inc
lea
ss
xor
je
pop
addr16
iret
pushf
add
mov
dec
push
sar
stc
aad
push
mov
scas
xor
inc
mov
and
movs
daa
int3
imul
pop
je
mov
sbb
cmp
xchg
xchg
fimul
mov
add
push
clc
mov
add
jae
repz
lea
xchg
jle
push
in
hlt
cs
rcl
sub
jg
or
mov
popf
xor
aaa
and
dec
push
or
hlt
or
js
stc
sbb
(bad)
mov
xor
ficomp
sti
xchg
inc
pop
fld
xchg
cld
das
fstp
push
xchg
hlt
cmp
inc
test
mov
icebp
mov
ds
and
mov
cmp
mov
adc
sbb
(bad)
into
je
push
loopne
aaa
push
ins
inc
or
dec
push
xor
leave
cmp
das
inc
inc
rcr
lock
fadd
dec
fnstsw
sti
xrelease
nop
retf
pop
lods
daa
adc
in
xor
shr
pusha
pusha
dec
sub
add
cmps
cmp
fs
pushf
test
repz
fst
leave
cs
(bad)
or
add
enter
xchg
out
mov
or
aam
int3
fwait
jns
cmp
cwde
es
iret
popf
xor
sbb
add
pop
out
neg
push
cmps
stc
jns
(bad)
fimul
cmp
ret
sbb
xor
push
scas
push
jae
in
pop
or
(bad)
push
mov
scas
scas
outs
cs
and
jmp
sub
jae
xchg
sub
sti
iret
jmp
cld
mov
xchg
jp
pusha
ret
int3
xchg
imul
movs
pop
mov
mov
dec
xchg
in
push
mov
or
sub
(bad)
dec
out
and
jge
jbe
jae
sub
or
lods
pop
addr16
xor
xor
movs
jg
or
dec
push
in
dec
pop
sub
dec
mov
push
icebp
mov
scas
jno
xchg
mov
jge
lods
div
lea
push
sbb
jg
psubb
and
jne
lahf
and
xor
aaa
arpl
ja
adc
fs
aam
lahf
div
cwde
cs
(bad)
fcomp
aad
xchg
inc
pushf
sub
sbb
jmp
in
mov
add
shr
mov
dec
and
xchg
pop
push
and
and
repz
push
jnp
cmp
call
push
cmps
dec
nop
pop
pop
xchg
jo
inc
add
dec
aas
jo
arpl
in
call
icebp
mov
out
sbb
cmp
rcr
pop
int3
aas
hlt
mov
sti
arpl
xor
or
and
xchg
div
xor
bound
pop
icebp
call
lods
or
loope
push
repnz
xchg
xlat
sbb
(bad)
sub
retf
popa
inc
shl
xor
addr16
or
adc
ret
adc
add
or
aaa
es
lods
pusha
out
test
and
jl
mov
jecxz
imul
inc
lods
mov
nop
jns
sub
xchg
push
pop
loop
pop
fmul
bound
and
xchg
pop
push
fs
call
shl
dec
cmp
std
jmp
mov
jmp
cdq
repz
mov
jae
xor
or
adc
sbb
mov
sbb
out
in
dec
lods
test
retf
mov
dec
sub
add
add
xor
pop
cmps
scas
lods
push
mov
cmp
jp
pop
movs
mov
in
cmp
loop
cmp
adc
pop
xor
push
jno
fnstsw
push
pop
cmp
mov
js
push
stos
mov
cmp
nop
pop
fisub
out
out
call
jo
in
loope
mov
sbb
or
mov
lock
jb
and
sbb
xchg
pop
outs
(bad)
pop
dec
xchg
dec
add
sbb
stos
xchg
lea
enter
xlat
call
imul
push
lock
push
inc
mov
sbb
call
mov
xchg
cmp
cmp
icebp
cmps
nop
test
pushf
js
pop
adc
in
push
and
mov
and
add
clc
imul
xchg
mov
sbb
scas
xchg
iret
not
push
jecxz
les
fwait
mov
or
xor
js
in
fnstsw
push
sub
call
dec
push
cwde
inc
pop
inc
iret
in
(bad)
pop
push
mov
test
std
sub
pop
call
repnz
pop
mov
add
int
and
adc
bound
or
push
inc
pop
adc
lahf
fimul
inc
sub
gs
inc
cmp
adc
mov
(bad)
pop
ja
ret
pop
cs
std
inc
and
lods
popa
jmp
push
xchg
mov
or
or
xchg
not
fistp
inc
sti
out
mov
mov
jl
sar
add
or
cmps
push
out
and
cmp
and
mov
(bad)
mov
lahf
pop
mov
sub
or
mov
lock
(bad)
dec
or
mov
adc
jge
sahf
dec
or
cs
mov
(bad)
stos
fist
push
push
outs
push
cmps
push
dec
jnp
or
cmp
pop
and
sbb
mov
sub
sbb
add
rcl
fisttp
clc
dec
mov
pop
add
(bad)
stos
std
lods
mov
inc
fild
sbb
fidivr
or
xchg
dec
xchg
in
adc
aaa
jo
je
jecxz
push
inc
jle
jg
add
add
outs
pop
or
rcl
scas
mov
in
and
and
je
cmp
daa
sub
push
test
addr16
movs
and
mov
mov
aaa
cmp
push
jbe
add
and
or
imul
mov
rcr
push
imul
add
xor
jb
out
sbb
push
daa
inc
jg
shl
jb
and
je
loope
cdq
xchg
mov
in
aas
add
inc
popa
inc
aam
mov
(bad)
inc
rcr
mov
cmc
pop
mov
mov
stos
push
lahf
xchg
pop
push
and
rcl
pusha
sub
imul
xor
xchg
pop
hlt
mov
mov
and
pop
dec
retf
dec
xor
xor
(bad)
in
daa
xchg
es
cs
pop
sbb
mov
xchg
cmp
pusha
jo
outs
xchg
sub
mov
inc
aas
(bad)
sub
and
xor
mov
imul
add
(bad)
dec
cmps
data16
aaa
rcr
push
dec
les
xor
es
mov
test
dec
add
out
daa
xor
add
adc
sbb
xchg
pop
mov
jno
and
fcom
mov
test
jne
add
es
dec
lock
pop
ret
push
aas
into
mov
inc
inc
adc
xor
add
mov
mov
shl
outs
gs
dec
mov
pop
movs
mov
cld
push
fdivr
dec
push
mov
add
and
sbb
xor
repnz
aam
mov
xchg
xchg
mov
fwait
pop
push
xor
sub
xchg
and
cli
xor
lods
mov
in
or
dec
mov
fimul
push
stos
pushf
dec
push
(bad)
retf
xor
popa
out
repnz
xor
ins
jl
sbb
sub
aas
xor
push
test
imul
xchg
jp
sub
mov
adc
mov
and
add
das
xor
test
fimul
and
stos
enter
fldenv
sub
repz
sbb
inc
or
in
mov
sbb
enter
or
mov
fcomp
aaa
sub
mov
movs
aas
div
mov
mov
mov
imul
sub
add
jb
ret
mov
xor
test
or
ds
std
push
ins
and
inc
and
inc
ret
push
addr16
sub
cld
mov
jecxz
sbb
pop
out
pop
or
sbb
daa
daa
in
les
push
scas
xchg
scas
ret
loopne
fwait
stos
in
arpl
ret
ss
push
iret
sbb
sbb
in
cld
pop
mov
sbb
dec
ja
or
dec
xchg
retf
xchg
or
loope
je
scas
les
xor
jne
lea
sbb
sub
mov
lds
mov
inc
pop
int
inc
ins
cmp
jns
cmp
mov
aam
sub
inc
pop
cmp
cmp
pop
mov
dec
mov
xchg
in
mov
movs
push
(bad)
add
out
jno
or
xchg
test
out
ror
dec
in
mov
adc
cmp
addr16
and
push
sub
je
fisubr
das
outs
inc
and
push
inc
adc
bound
cmp
pop
mov
test
inc
clc
aad
xor
adc
outs
outs
fnstenv
sbb
rcr
xor
icebp
sbb
mov
nop
jo
jns
or
jge
test
jne
call
xchg
out
lds
cmp
cmp
test
or
scas
out
xor
push
test
mov
jne
fstp
xchg
mov
pop
or
push
sbb
sub
sub
jge
bound
faddp
or
pop
fwait
into
retf
mov
arpl
fcomp
fdivr
mov
lock
mov
push
sbb
out
lock
sub
(bad)
imul
pop
lds
sbb
jns
mov
out
jne
sbb
scas
add
dec
jp
jae
stos
push
ficomp
cmp
dec
pop
add
pop
and
xor
pop
and
inc
xchg
popa
inc
or
jno
mov
xor
ror
push
mov
aad
mov
shl
call
fnsave
das
gs
sub
mov
out
pop
je
pop
push
ror
xor
scas
mov
inc
cmp
or
inc
or
nop
push
and
fidiv
jg
mov
out
outs
inc
inc
pop
bound
sub
add
cmp
loop
out
sti
push
jl
in
mov
push
xor
retf
mov
push
xchg
call
iret
loopne
jle
lods
adc
fdiv
sub
rol
aam
mov
xchg
(bad)
and
mov
lahf
xchg
xchg
pop
cmp
(bad)
les
jae
sub
jo
aad
(bad)
rcl
aad
shl
clc
iret
(bad)
gs
xchg
out
loope
mov
pop
repnz
adc
std
in
mov
pop
xor
or
lmsw
in
sub
pushf
mov
sub
int3
xchg
fld
jp
sbb
mov
push
stc
add
and
mov
loope
xchg
push
xor
push
call
cdq
(bad)
mov
test
sub
lds
jmp
sti
cmp
add
ins
rcl
inc
dec
inc
pop
jns
imul
scas
mov
sbb
pop
dec
sub
outs
sub
(bad)
das
std
sbb
iret
adc
fsubr
icebp
stos
ins
mov
adc
sbb
sub
push
loope
and
lahf
into
pop
ror
dec
fiadd
xchg
retf
lahf
es
stc
xchg
ins
(bad)
test
jmp
lods
cmp
mov
adc
int
mov
not
fidivr
loopne
dec
pushf
pop
mov
mov
aam
int
cmp
enter
mov
out
movs
ds
daa
or
or
fcom
xchg
lea
test
inc
stos
(bad)
iret
iret
inc
test
or
bound
int3
dec
mov
jb
test
jns
jnp
mov
sbb
push
out
hlt
xor
inc
jb
punpcklwd
icebp
push
pop
(bad)
mov
xor
in
loop
stos
mov
mov
pop
(bad)
out
ins
loop
int
(bad)
xor
dec
mov
and
add
daa
push
dec
mov
inc
fsubr
je
in
push
cmp
sbb
pop
cdq
lea
daa
sub
dec
loope
mov
psubw
cs
out
mov
fldenv
sub
into
add
pop
sub
daa
pop
das
out
sbb
ror
(bad)
jbe
call
hlt
outs
sbb
push
imul
mov
push
sub
mov
sbb
outs
xor
lods
inc
jmp
adc
and
mov
dec
xchg
std
hlt
jnp
pop
xchg
cmp
ror
call
sbb
push
cmp
and
mov
dec
cmp
daa
addr16
arpl
mov
jmp
rcl
dec
mov
outs
pusha
les
adc
xor
xor
ret
xchg
outs
mov
ja
xor
dec
mov
mov
adc
mov
xchg
or
mov
cmp
in
dec
xchg
ror
xor
lods
adc
ins
inc
ret
into
mov
stc
jmp
fwait
sub
imul
mov
loope
mov
pop
inc
imul
popa
or
add
jo
sbb
test
pop
arpl
fcom
es
call
(bad)
pop
dec
pop
or
xor
fcomp
or
mov
sub
pop
fisttp
retf
sahf
add
int
xor
adc
push
nop
das
arpl
out
mov
idiv
xor
aam
dec
mov
stc
jge
lock
fwait
and
into
in
mov
mov
sar
cmp
loope
out
imul
sbb
xor
pop
xlat
xchg
sub
cmp
mov
neg
popf
dec
retf
imul
push
loopne
fbstp
sub
sub
fmul
dec
into
stos
icebp
mov
adc
je
aaa
iret
mov
mov
mov
xlat
or
test
mov
sub
dec
cmp
fcomp
sar
xor
mov
fnop
mov
in
aad
sub
xor
in
push
retf
mov
xchg
adc
mov
ret
ficom
xchg
xor
fisttp
xchg
push
jnp
ja
and
mov
stos
or
push
or
shl
jbe
in
jne
out
loope
dec
inc
ja
sbb
or
clc
scas
xchg
or
and
adc
pop
cwde
enter
out
push
add
jns
repz
add
cmc
jmp
pop
inc
(bad)
into
push
xlat
rol
jp
int
adc
(bad)
out
shr
mov
movs
js
test
(bad)
jle
xor
imul
mov
inc
les
ins
movs
mov
nop
sti
mov
loope
mov
mov
and
add
imul
jb
test
jne
ret
jo
je
sub
js
ins
xor
xchg
inc
mov
loopne
movs
(bad)
adc
jp
test
ja
and
pop
in
movs
loope
mov
and
data16
lahf
out
lock
les
mov
mov
mov
fmul
add
and
mov
into
sahf
mov
add
inc
arpl
outs
add
idiv
int3
mov
add
sbb
icebp
xor
popa
xor
shr
push
jle
pop
mov
out
sbb
push
pushf
sub
jmp
push
xor
arpl
push
mov
stos
fsubr
sbb
aaa
xor
and
sbb
lods
push
mov
ins
inc
jge
xchg
test
stc
or
dec
and
fbstp
in
popa
mov
popf
enter
jae
jno
pop
or
inc
push
in
cmp
mov
sahf
sub
lock
movs
aad
stos
adc
loopne
xchg
lahf
xchg
das
sbb
mov
xchg
push
ret
leave
or
cmp
cmc
test
xor
mov
add
push
jle
in
cwde
dec
mov
sahf
shr
xchg
ret
push
push
ja
adc
sar
push
adc
adc
loop
sbb
daa
mov
mov
or
arpl
rol
and
xchg
mov
jmp
dec
inc
js
repz
shl
mov
pop
mov
xchg
xor
stc
adc
push
out
add
sbb
sbb
sub
mov
data16
adc
mov
retf
loop
sbb
cmps
les
lock
mov
mov
cdq
jbe
mov
pop
cwde
xchg
xor
call
imul
jnp
mov
and
ins
push
outs
pop
lods
adc
mov
jnp
shr
test
cdq
push
adc
mov
pop
push
add
cmp
mov
push
out
jb
xor
popf
xchg
push
cmp
mov
xchg
mov
popa
inc
dec
loop
jae
icebp
mov
push
jns
es
pop
xor
cmp
push
cmp
ins
mov
shl
push
das
ss
lea
jo
cmp
push
mov
aas
jbe
pop
ja
add
lods
cmp
cmp
(bad)
pop
pushf
sub
ficomp
sar
lods
cmp
push
dec
outs
add
sub
dec
popf
fstp
clc
push
stos
iret
or
idiv
fs
pop
pop
es
add
jb
rol
clc
jae
dec
ror
mov
iret
push
dec
cmp
pop
lahf
hlt
jle
repnz
pop
or
mov
ins
sbb
stc
pop
es
inc
or
pop
scas
push
imul
ss
pop
loop
pop
xchg
add
cli
xchg
scas
pop
ja
adc
push
sbb
xchg
xchg
sbb
fdivr
jle
dec
pushf
(bad)
dec
test
fild
ja
push
outs
mov
mov
or
leave
jle
mov
rol
push
call
adc
pop
push
push
add
outs
mov
rcl
push
pop
ja
vphaddudq
int
dec
ins
push
sbb
pushf
cmp
mov
sub
je
aaa
mov
data16
sar
cmp
imul
or
inc
dec
lods
xor
int3
dec
mov
ins
lds
out
push
cld
push
es
stos
sub
int
frstor
pusha
jmp
push
inc
lahf
arpl
or
xlat
(bad)
dec
in
fwait
dec
rol
xor
jge
fnsave
mov
movs
in
pushf
mov
fmul
add
hlt
mov
or
mov
jno
push
mov
and
retf
xchg
loop
test
rcl
sub
ins
ret
pop
ret
push
sbb
push
ret
pop
jne
inc
call
jmp
data16
or
gs
ds
dec
aad
inc
out
test
xor
iret
jmp
push
pop
adc
clc
xor
mov
pop
pop
xchg
stos
dec
jo
jns
jecxz
push
xchg
repz
pop
push
cmc
or
sub
shr
cmps
pop
daa
pop
lods
xor
ffree
jg
dec
add
xchg
daa
adc
sti
scas
bswap
cmp
ins
in
jg
outs
lock
fiadd
outs
or
sub
sbb
pop
pop
xchg
mov
dec
sbb
scas
outs
stc
or
imul
jmp
push
rcr
repnz
sar
mov
bound
into
les
cmp
adc
fadd
(bad)
arpl
lods
xor
enter
xor
das
std
dec
pop
sub
push
mov
jae
rcl
sbb
daa
mov
xchg
int
push
mov
int
call
adc
dec
and
sub
dec
fs
cmp
ret
cli
aas
hlt
cmp
push
adc
loop
add
loop
lea
cmp
mov
pop
pop
mov
mov
in
je
mov
jp
push
fcmovnu
out
fiadd
iret
add
push
cld
mul
sub
push
shl
daa
movs
bound
mov
add
xor
mov
sub
cmps
pop
xchg
sbb
mov
xor
(bad)
repz
ins
xchg
inc
cli
dec
fnstsw
mov
popf
dec
mov
sub
ret
add
mov
add
stos
mov
cmp
jge
cmp
ret
icebp
leave
pop
stos
push
inc
loope
int
into
mov
aaa
mov
pop
jae
in
or
adc
js
xlat
jmp
outs
pop
pop
in
inc
pop
inc
movs
fwait
sar
sbb
pop
xchg
push
ins
jne
mov
mov
ins
lods
jmp
jge
mov
es
repz
retf
fild
inc
fmulp
rol
arpl
shl
adc
loopne
inc
mov
sub
retf
dec
fwait
std
xor
loopne
mov
jge
popa
shl
or
retf
js
lods
loop
xchg
mov
xchg
sbb
stc
not
outs
cmps
fdiv
xchg
xchg
aam
ins
jp
pop
pop
fimul
inc
in
sub
repz
xor
icebp
cmp
mov
mov
call
inc
push
or
ins
test
outs
rcl
sub
(bad)
popf
dec
shl
or
stos
in
mov
in
dec
mov
jns
cdq
aaa
fwait
xchg
mov
dec
mov
pop
dec
fcomp
xchg
inc
inc
push
mov
out
jmp
jl
jecxz
(bad)
jmp
mov
pop
(bad)
push
xchg
jle
je
dec
aam
test
adc
and
mov
xchg
inc
cmp
inc
pop
sub
xor
mov
pop
pop
cmps
lods
mov
xchg
ja
mov
fadd
mov
xchg
xor
fstp
lea
jns
push
shl
xor
cmp
xor
jns
cmp
mov
lahf
mov
cmps
push
xchg
dec
add
jnp
movs
sar
adc
or
in
dec
ins
outs
popa
fsub
(bad)
jl
and
adc
inc
loop
test
jmp
(bad)
and
push
sar
or
repz
jmp
fs
loope
mov
push
cmc
adc
mov
outs
stc
scas
mov
pop
ins
mov
or
gs
data16
dec
xchg
inc
nop
dec
cmp
jmp
xlat
inc
out
push
dec
and
pushf
xchg
aaa
add
(bad)
pop
sbb
inc
push
sub
adc
pop
lock
shl
xor
mov
mov
cmp
adc
xchg
or
imul
loopne
retf
pop
xor
inc
jecxz
div
in
and
movs
(bad)
popf
in
sbb
xchg
xchg
(bad)
jns
cmp
push
out
jae
jmp
push
out
int3
call
and
fistp
(bad)
pop
aaa
stos
jae
in
ja
push
retf
push
into
ins
movs
loopne
dec
or
(bad)
int3
int
xchg
pop
inc
cmp
jb
jecxz
leave
jo
and
seto
inc
aas
and
mov
mov
xchg
or
iret
cdq
inc
idiv
cmp
pop
and
inc
and
cmp
repnz
sbb
xchg
cli
push
addr16
movs
lea
shl
xchg
add
cmps
xor
out
inc
dec
adc
sar
call
and
fstp
mov
push
(bad)
xchg
fdivrp
xchg
pop
sbb
sbb
and
jmp
stos
ret
fsub
inc
xchg
enter
dec
cwde
iret
or
mov
mov
fbstp
ret
(bad)
(bad)
or
and
loope
push
xor
mov
cli
ja
mov
int
add
aad
mov
jle
fiadd
mov
retf
pop
mov
xor
pop
push
xchg
js
jg
mov
loope
mov
rcr
nop
int3
dec
nop
push
mov
xor
mov
cmps
sbb
jmp
sbb
(bad)
mov
xchg
xchg
mov
and
aaa
inc
daa
and
daa
and
xor
retf
cmps
loop
mov
push
inc
int
test
jnp
lahf
ins
mov
leave
rcr
mov
pop
push
dec
in
push
fmul
mov
retf
ds
enter
cmps
or
cs
int3
stc
js
and
ja
icebp
pop
shl
xor
cmc
stos
icebp
enter
mov
imul
sbb
add
aas
mov
jmp
pop
inc
fcomp
movs
jae
lea
outs
xor
push
xchg
jns
xchg
pop
adc
mov
popf
cs
push
in
out
mov
mov
mov
outs
push
or
dec
lea
mov
lahf
mov
xor
jbe
aad
in
sbb
in
cli
ret
pop
inc
lea
lds
adc
fmul
sub
jg
neg
jg
sbb
mov
or
hlt
loop
jb
clc
stos
lods
dec
xchg
pusha
(bad)
hlt
sbb
in
(bad)
mov
bound
jg
cmp
loopne
shl
add
add
sahf
movs
cmp
ret
pop
or
xor
shl
cs
cmp
cli
inc
add
cmp
js
xor
cmp
shl
mov
hlt
loop
xor
mov
add
fcmovnb
repz
call
sbb
ss
add
push
sub
scas
xchg
mov
stos
fisub
xor
jecxz
inc
sbb
mov
out
pop
call
push
dec
jle
int
mov
clc
aad
xchg
rcl
fbld
lds
sahf
xor
mov
popf
sbb
enter
inc
loop
jno
push
loop
or
push
adc
push
mov
adc
adc
sub
ins
test
mov
ret
scas
cmp
stos
stc
jo
adc
popa
add
rcl
lods
xchg
test
mov
mov
dec
mov
push
ficomp
sbb
stc
mov
mov
xor
inc
lock
inc
sub
stos
sub
(bad)
xlat
in
mov
mov
or
pop
mov
leave
adc
jb
(bad)
das
iret
jmp
xor
xchg
dec
or
in
adc
mov
int3
test
jne
aas
mov
sahf
push
cmc
cld
cmp
push
or
xor
and
adc
loop
into
adc
jb
in
push
sar
call
test
sbb
pop
pop
imul
inc
fist
jmp
dec
mov
cmc
xor
adc
movs
mov
xchg
test
add
push
ret
test
test
aaa
fcom
sti
push
sbb
test
inc
lea
push
not
fst
dec
jle
inc
xchg
dec
dec
mov
fnstsw
cs
jmp
or
xor
and
jecxz
fiadd
inc
aad
sub
jne
and
push
sar
popf
jno
fimul
add
lods
bound
(bad)
cdq
push
ins
mov
iret
(bad)
je
retf
push
out
mov
mov
fistp
xor
mov
pop
fild
ret
ret
and
adc
dec
pop
xchg
mov
and
push
mov
mov
out
push
mov
mov
xor
xor
sbb
call
xlat
push
push
and
shr
cs
cwde
dec
mov
cs
mov
in
add
popf
or
or
sub
daa
sti
in
scas
out
iret
dec
(bad)
(bad)
adc
adc
(bad)
cmp
cmps
rol
or
or
iret
sti
xor
cmp
xor
ficomp
pushf
es
xchg
retf
xchg
lock
or
add
clc
in
les
push
cli
nop
pusha
and
rol
(bad)
aas
ficom
push
div
xlat
adc
rol
cmps
mov
ret
adc
pop
pop
ds
or
mov
push
sbb
adc
adc
mov
adc
add
test
inc
mov
test
dec
fsubr
repnz
sti
ins
jae
xchg
lods
dec
jb
inc
sbb
arpl
popf
adc
xlat
jmp
dec
push
stc
je
aam
in
push
mov
mov
scas
dec
xchg
repz
imul
test
mov
loopne
add
sub
push
jno
xchg
cmp
jp
aad
jecxz
rcr
mov
or
and
inc
jecxz
mov
fadd
repnz
aaa
int
and
repz
fbstp
ret
mov
ret
imul
mov
xchg
gs
popa
ins
xor
mov
hlt
mov
icebp
sbb
pop
shl
imul
push
xchg
mov
int3
pop
adc
push
je
lock
mov
jnp
int3
lahf
loopne
dec
xchg
and
cmc
out
mov
test
shl
arpl
inc
pusha
fcmovnb
push
pop
sub
inc
aam
aaa
add
cwde
add
or
push
sub
mov
cmp
icebp
inc
jae
pop
lahf
out
aad
add
pop
(bad)
cmc
inc
dec
in
mov
adc
add
dec
or
mov
test
pop
cwde
loopne
idiv
dec
jmp
ss
mov
adc
inc
sbb
call
leave
lds
cmps
dec
sub
clc
dec
inc
outs
add
out
imul
nop
fst
scas
arpl
cmovne
dec
shl
cmp
inc
sub
sbb
stos
fdivr
and
adc
loopne
cmp
pop
jmp
in
nop
mov
or
pop
jno
jnp
xor
repnz
sub
dec
das
out
pop
mov
sub
enter
xor
jmp
in
push
dec
inc
int
out
scas
or
mov
shl
xchg
mov
jae
icebp
mov
pop
jb
cmps
outs
dec
div
inc
(bad)
(bad)
mov
add
and
pop
call
jmp
lahf
add
mov
push
call
std
and
mov
pop
test
mov
xchg
ss
les
xchg
or
pop
xor
hlt
int
or
add
les
inc
test
push
sub
xchg
xor
imul
mov
outs
scas
push
jl
cli
test
mov
repz
ficomp
xchg
xchg
stos
ja
retf
jo
xchg
xchg
adc
sub
and
jns
es
xor
inc
or
dec
and
xor
std
mov
test
je
nop
into
movs
add
test
xor
dec
js
in
jmp
cmps
sub
gs
dec
lahf
fcmovu
adc
sub
inc
pop
dec
cmp
(bad)
rol
sbb
mov
popa
cmp
dec
sbb
xchg
pop
inc
sbb
dec
cmps
inc
outs
jge
sbb
dec
push
sub
cmc
mov
add
xchg
sbb
adc
jecxz
or
ss
dec
adc
outs
stc
sbb
add
pop
jnp
push
mov
mov
or
xor
out
test
inc
jae
mov
pushf
movs
aad
imul
scas
(bad)
mov
fcom
hlt
dec
inc
loop
ret
cmp
int3
adc
daa
out
into
std
mov
ret
add
sbb
iret
cmp
cld
mov
les
fst
sub
xchg
packuswb
lds
cmp
add
bound
data16
jne
or
or
daa
cmps
mov
sti
xchg
imul
jmp
fs
push
dec
xor
scas
dec
mov
add
aam
xchg
mov
fld
dec
das
cli
in
movs
xchg
add
std
mov
in
test
fistp
stos
stos
or
xchg
inc
jo
test
and
inc
mov
mov
in
sub
fwait
movs
out
pusha
fnsave
push
add
xor
data16
and
int
pop
sbb
and
dec
xchg
push
jns
clc
ficomp
je
imul
add
pop
ds
outs
cmp
int
mov
dec
jle
outs
loopne
dec
mov
and
out
aas
xchg
in
(bad)
and
push
clc
sub
(bad)
pop
movs
push
mov
and
dec
xlat
dec
gs
xchg
dec
pop
outs
pop
or
or
add
(bad)
push
jb
pusha
mov
in
mov
xor
loope
and
jg
jl
mov
xchg
daa
add
sub
xor
push
jmp
in
dec
cmp
xchg
sbb
jmp
and
add
fwait
int3
mov
test
jmp
and
ds
jnp
outs
push
iret
sub
mov
(bad)
cli
gs
lods
mov
(bad)
test
test
cmps
jae
(bad)
aam
imul
push
xor
push
js
push
jae
in
stos
scas
mov
xchg
xor
push
loope
and
push
jbe
jmp
ror
mov
test
mov
daa
mov
add
mov
xchg
mov
sbb
call
test
jb
sub
inc
fld
ds
stos
sub
dec
ret
jno
or
mov
cmps
push
push
retf
std
dec
adc
rcl
scas
inc
and
inc
not
fimul
into
ds
jecxz
xor
cli
sub
(bad)
sbb
pop
sub
loopne
sub
cdq
test
push
xchg
pop
xor
hlt
cs
aaa
inc
jns
jns
or
inc
inc
daa
fxch
dec
rol
retf
(bad)
daa
mov
(bad)
dec
dec
push
pop
and
mov
jae
clc
cld
std
test
xchg
sti
jb
jmp
ins
and
arpl
mov
outs
sub
clc
out
lahf
ret
cmps
test
mov
cmp
pusha
push
add
xlat
(bad)
cld
fwait
rcl
inc
popa
dec
ror
icebp
nop
call
dec
ins
shl
in
es
cmp
das
test
test
cmc
jp
adc
jnp
jge
repnz
mov
imul
test
cmp
jno
daa
lods
fld
out
xor
stc
add
mov
dec
add
xchg
sub
and
loope
sub
cdq
outs
(bad)
pmullw
dec
test
popf
outs
(bad)
test
(bad)
inc
dec
loopne
sbb
dec
inc
mov
mov
inc
xor
push
xor
cmp
and
cmps
bound
and
inc
outs
lods
mov
std
sub
fld
and
jg
scas
adc
fnstenv
in
cli
pop
fld
sub
push
or
arpl
fsqrt
mov
sar
mov
xchg
scas
mov
mov
mov
sbb
(bad)
in
mov
pop
test
mov
adc
cmp
jae
lahf
jge
inc
jge
leave
mov
loop
mov
pop
lods
loopne
push
inc
mov
adc
sub
jmp
in
cwde
das
lea
mov
sub
sub
mov
jbe
or
lock
sti
xchg
sti
xor
xchg
int3
mov
jp
dec
push
xor
std
sbb
cmps
jg
dec
inc
jp
retf
push
dec
sbb
cmp
xchg
movs
sbb
mov
clc
scas
stc
mov
push
loope
scas
or
imul
cmps
or
lods
repnz
dec
out
ins
ds
add
pop
xchg
cmp
mov
rsm
lock
dec
or
xor
pusha
movs
mov
mov
rol
mov
call
pusha
fdivr
inc
xchg
idiv
xchg
adc
mov
cmps
scas
xlat
test
sbb
out
pusha
sbb
jnp
aaa
xchg
or
push
jnp
adc
lods
xor
jb
xor
ja
mov
into
mov
sub
fisttp
push
xchg
icebp
push
mov
inc
retf
ins
pop
repnz
js
jp
cld
or
movs
call
iret
in
cmp
jae
and
gs
pop
push
pusha
mov
jno
rcr
push
int3
shl
sbb
jb
xchg
sbb
inc
jo
add
fsub
enter
dec
add
cmc
mov
jno
(bad)
mov
and
push
adc
outs
xchg
retf
test
cld
push
mov
adc
mov
push
cmp
pusha
sbb
aad
xchg
addr16
and
ret
call
in
into
repz
cli
adc
in
dec
ins
inc
sub
out
mov
je
pop
sub
inc
adc
jb
lods
dec
cmps
lock
jmp
adc
jp
lods
cwde
mov
neg
scas
xor
add
fistp
xchg
popa
push
jmp
mov
repz
mov
test
cdq
and
test
mov
mov
pop
mov
mov
inc
sbb
and
repnz
ficom
gs
test
call
sub
mov
mov
mov
cld
popa
(bad)
cmp
test
in
pop
mov
popa
mov
jmp
jno
push
sub
dec
ret
aad
mov
test
ret
test
sub
jmp
sbb
add
stos
hlt
jne
cmc
xor
iretw
mov
xchg
add
sti
push
outs
std
ss
and
data16
and
adc
sub
mov
inc
clc
out
fs
sub
inc
sub
rol
push
cld
in
push
xlat
xchg
inc
xchg
aad
hlt
in
in
xlat
loope
xchg
fdiv
clc
loopne
neg
pop
clc
pop
mov
lods
pop
mov
jb
mov
mov
push
iret
popa
xlat
pushf
fldcw
imul
fldcw
mov
or
es
sbb
mov
outs
call
push
fwait
aaa
jns
stc
fsubp
icebp
xchg
ja
(bad)
jl
es
sahf
int
mov
dec
cmc
xor
jmp
and
(bad)
loopne
push
lods
dec
xor
or
mov
call
mov
sbb
rcl
into
in
adc
icebp
jg
clc
popf
jae
inc
adc
hlt
jne
cmc
retf
mov
shr
lods
loope
stos
jmp
(bad)
imul
lea
jl
jb
fcmovb
mov
mov
and
enter
rol
mov
pop
mov
sahf
cmps
push
pop
sbb
ins
out
test
jb
fild
test
dec
mov
inc
ret
stc
lahf
push
add
push
or
fdivr
loope
pusha
dec
(bad)
lods
lea
test
sub
int
ins
add
mov
rcr
(bad)
loope
icebp
pop
mov
or
test
push
sbb
arpl
pop
mov
clc
jo
jp
add
mov
push
pusha
mov
cmp
adc
mov
movs
jnp
push
xor
sahf
gs
or
fist
loope
jmp
sub
aam
xor
xor
bound
jno
push
dec
out
out
lahf
sbb
jns
adc
(bad)
jle
popa
sbb
sub
pushf
or
xor
mov
sbb
push
sbb
xchg
sbb
ins
or
sub
sub
or
aad
push
xor
dec
iret
in
bsr
nop
out
mov
hlt
mov
scas
push
data16
push
xchg
add
pop
lds
dec
outs
in
test
ss
int3
push
xchg
push
cmp
push
lods
cmp
imul
cmp
xor
push
or
repz
cmp
nop
mov
fs
mov
mov
jne
cmps
enter
dec
dec
sahf
inc
lds
cmp
sbb
int3
sbb
js
add
retf
cmp
lock
popf
data16
in
jl
shl
cmp
push
retf
retf
cmp
retf
dec
fld
inc
xchg
adc
mov
mov
push
xchg
mov
jmp
(bad)
ins
test
and
out
not
fwait
mov
push
inc
cmc
enter
jge
dec
mov
push
psubsw
cmp
lods
push
jge
dec
jmp
inc
add
fldenv
push
xchg
push
mov
xchg
retf
sbb
es
je
in
sti
sub
push
jns
inc
pop
mov
into
pop
sub
sub
mov
lahf
imul
(bad)
fist
call
daa
xor
in
repz
dec
loopne
push
and
outs
add
push
lahf
mov
mov
ret
test
jg
push
or
std
(bad)
scas
jmp
rcl
(bad)
movs
jnp
dec
int3
xor
dec
jae
or
jg
lods
arpl
ins
dec
mov
ret
and
xchg
mov
pop
data16
retf
inc
mov
xor
xchg
sahf
or
fdiv
push
mov
adc
xchg
push
push
aam
in
les
dec
or
pop
sti
mov
ret
fs
xlat
or
or
push
lods
pop
call
js
or
out
scas
pop
and
xchg
lea
in
inc
sub
mov
loop
push
bound
push
(bad)
dec
into
jg
cmp
imul
jns
mov
js
arpl
mov
in
std
leave
outs
push
int
fwait
dec
adc
das
adc
adc
(bad)
xchg
ins
jns
cmp
or
dec
pop
cli
leave
arpl
imul
push
cmps
call
jae
xchg
cmovle
add
cmp
ins
and
cmps
mov
shr
sub
adc
mov
sbb
xor
cli
and
dec
dec
fist
hlt
add
in
sbb
pop
sti
mov
push
cmps
mov
xchg
or
inc
pop
sub
mov
jle
or
xor
xor
push
jp
dec
inc
repz
mov
call
cdq
inc
pop
clc
in
popf
cmp
jns
das
sub
xchg
(bad)
xchg
sbb
or
xchg
cmp
mov
(bad)
fmul
pop
inc
test
xchg
mov
ja
pop
pop
fistp
jbe
(bad)
sbb
push
push
out
or
xor
jle
xchg
jmp
jns
imul
ret
int3
mov
lds
mov
inc
push
and
ins
imul
int3
mov
mul
or
push
rcl
sbb
adc
and
xor
sbb
jnp
xchg
call
enter
addr16
mov
or
mov
cmp
aas
push
shl
test
sub
aad
fisub
ins
scas
push
movs
fisubr
adc
adc
shl
std
fsubr
cmp
xchg
inc
sub
lds
jae
mov
push
push
repz
or
fisttp
rcr
cld
ss
xor
pop
in
push
sub
ins
retf
jnp
pop
movs
xor
aam
shl
gs
sbb
pop
push
xor
dec
or
push
dec
aad
ret
ss
sub
sbb
(bad)
mov
(bad)
aam
outs
jne
loopne
inc
mov
mov
call
pop
inc
xor
mov
out
int
push
pop
inc
rcl
push
push
sub
xor
lds
mov
xor
in
retf
sub
mov
xchg
nop
retf
call
retf
(bad)
es
jno
pop
dec
dec
es
mov
pop
gs
mov
jl
inc
scas
lods
sub
mov
(bad)
jg
stos
ds
cmp
inc
sbb
in
pop
jne
leave
push
lds
add
jle
loopne
test
mov
leave
sahf
sbb
je
int
dec
mov
mov
fdivr
xchg
mov
inc
fdiv
ror
push
jbe
push
push
and
icebp
adc
jmp
adc
test
(bad)
(bad)
stos
jne
repnz
js
xor
ja
sub
adc
jl
js
scas
cbw
outs
in
ret
sub
cbw
sbb
les
fwait
in
fdiv
xchg
imul
movs
dec
cmps
packsswb
push
repz
lahf
sbb
jae
hlt
pop
fsubrp
(bad)
sti
repz
in
jmp
mov
out
iret
mov
dec
cmp
nop
loop
out
fdivr
aaa
cmp
jmp
sub
bound
sub
jae
push
dec
sbb
in
outs
rcl
add
mov
mov
shr
mov
les
test
pop
mov
imul
popa
inc
sbb
push
loopne
out
mov
jge
gs
adc
clc
push
adc
sub
es
pop
adc
inc
mov
push
mov
pop
or
loope
push
push
ins
dec
adc
call
xchg
push
sahf
gs
push
pop
lea
or
mov
pop
mov
and
add
and
scas
pop
ins
pop
(bad)
mov
jl
ja
pushf
fsubr
mov
xor
jmp
xor
in
add
jmp
add
push
push
call
aad
adc
mov
inc
test
out
fistp
add
add
lods
ins
retf
int3
les
fstp
aas
add
mov
or
mov
sahf
int
inc
fsub
mov
xor
mov
mov
adc
sbb
fistp
jae
sbb
or
icebp
cwde
mov
xchg
mov
es
fwait
ret
and
mov
sahf
cmp
inc
sar
pop
jmp
inc
cwde
and
mov
pop
jg
mov
inc
hlt
sbb
sub
imul
dec
dec
fucom
jno
ss
xchg
add
fidiv
adc
aad
dec
(bad)
jle
and
in
sbb
jl
enter
cmp
pop
add
cli
xchg
hlt
aas
scas
dec
test
jmp
and
mov
adc
push
inc
and
pop
sar
add
add
stc
fbstp
jbe
gs
push
pop
mov
push
imul
cmovge
lods
and
jne
pop
sahf
push
pusha
pop
rcl
xchg
xor
jns
loopne
sub
dec
lods
push
movs
loopne
pop
in
sbb
pop
xor
stos
push
cmp
add
xchg
ja
cmps
sub
sti
and
sub
and
fwait
push
jae
or
movs
adc
xor
mul
retf
xchg
rcr
mov
dec
jne
jge
sub
pop
addr16
and
ins
cmc
mov
inc
add
sbb
sbb
retf
jecxz
(bad)
sti
mov
jae
fsub
sub
jl
cs
dec
sbb
jmp
sbb
xor
sbb
mov
cmp
push
mov
outs
ja
adc
ds
outs
and
add
jnp
ror
in
mov
dec
mov
jb
adc
out
test
pop
je
xchg
pop
pusha
jge
pop
pop
or
mov
sbb
or
dec
aam
in
ja
loop
or
test
stos
(bad)
in
retf
gs
loopne
push
nop
jg
outs
imul
cmp
in
loopne
pusha
sbb
jnp
lea
dec
cmp
mul
fmul
jbe
mov
in
pushf
test
inc
test
xor
(bad)
popa
pop
sbb
sbb
add
popf
sar
pop
cs
add
mov
add
xchg
jno
cli
jl
enter
fild
or
and
in
sti
inc
jg
sbb
mov
gs
push
and
aaa
mov
arpl
rol
cwde
or
mov
xchg
pop
in
lds
shl
pop
jo
sub
call
leave
add
test
movs
or
ss
iret
inc
xchg
popa
push
mov
xor
push
test
push
test
mov
scas
call
ror
lods
xor
cmp
mov
mov
jb
xchg
ds
push
mov
xchg
mov
iret
mov
xlat
rcr
jb
cmp
adc
dec
push
data16
loop
mov
or
lods
cmc
(bad)
pop
jl
sbb
mov
aam
test
mov
cmp
sbb
stos
cmp
push
push
stos
nop
push
std
push
dec
cmp
les
repnz
and
in
mov
mov
mov
pop
lahf
xchg
mov
xor
push
mov
or
aas
pop
addr16
pop
out
jmp
bound
(bad)
cmp
mov
pop
sahf
sub
popa
test
sti
dec
mov
mov
mov
iret
popf
cmp
into
(bad)
repz
(bad)
cmp
dec
int
ret
sub
mov
imul
ds
xchg
pop
mov
pop
fild
jne
call
add
rcr
dec
dec
jecxz
ins
call
(bad)
push
sbb
push
ja
aaa
xor
pushf
mov
out
dec
ds
dec
aad
fwait
aam
xchg
jmp
xor
and
int
push
jmp
je
and
lds
mov
es
and
mov
shr
popf
mov
mov
popa
pop
pop
enter
test
jl
add
dec
mov
xor
or
and
mov
in
test
push
inc
pop
(bad)
sbb
dec
push
imul
push
test
outs
cdq
stos
pusha
mov
fs
icebp
and
fdivr
mov
cli
and
jmp
or
push
inc
add
es
cdq
jo
pop
(bad)
xchg
out
es
shr
sub
call
dec
test
lods
xchg
out
popf
push
xchg
fisttp
fist
leave
sahf
push
mov
add
inc
ret
adc
ins
sbb
out
int
adc
movs
xchg
mov
mov
dec
cmc
scas
xlat
shr
loope
and
scas
sub
les
scas
lods
call
loope
lods
mov
inc
xchg
xor
cmp
ja
repz
pop
outs
fsub
ficomp
es
jno
sub
cli
imul
lds
(bad)
fdivr
jl
imul
mov
push
dec
outs
in
adc
or
adc
jmp
jo
leave
adc
dec
fimul
pop
leave
or
rcr
and
in
sub
or
or
clc
adc
in
ror
add
fdivr
sbb
jne
cpuid
pop
call
in
mov
xor
fcmovb
leave
sub
mov
imul
mov
jno
popf
fadd
jbe
shl
(bad)
and
popa
sub
mov
adc
int3
mov
push
jecxz
mov
jno
fnstsw
jmp
ss
popa
call
add
add
or
movq
loop
xlat
shl
mov
push
xor
push
sahf
iret
push
arpl
add
mov
fs
cmp
int3
loope
inc
outs
mov
mov
add
cmps
dec
xor
out
stc
xchg
fstp
pop
mov
xor
cmp
gs
cmp
fs
fwait
push
mov
pop
push
xchg
lods
mov
xchg
int
sbb
das
add
jne
rcl
dec
jo
or
retf
leave
ficom
fcom
xchg
jmp
mov
(bad)
(bad)
and
dec
adc
pop
not
fdivr
shl
(bad)
les
pop
or
mov
cmc
dec
into
mov
add
outs
inc
outs
in
out
movs
retf
shr
mov
xor
mov
pop
enter
fbstp
cli
push
sar
push
scas
shl
sbb
outs
push
int
xor
xchg
inc
ss
push
(bad)
sub
ins
or
frstor
ins
movs
add
sti
add
xchg
sub
mov
add
mov
or
movs
das
add
movs
lods
jp
cmps
int3
sbb
inc
jb
out
movs
push
scas
sar
mov
ins
outs
or
nop
xchg
mov
push
mov
xchg
adc
dec
sti
xchg
cli
mov
sbb
pop
es
mov
sub
pop
cmps
jae
adc
mov
out
xchg
inc
into
jl
adc
sub
pop
adc
jmp
popa
mov
dec
mov
dec
mov
push
enter
mov
mov
lahf
mov
retf
cs
je
leave
and
xchg
inc
sub
mov
shl
pop
fidiv
cmp
fcmovne
or
test
mov
fld
mov
mov
bound
add
ins
sub
ret
mov
sbb
mov
loopne
popf
sub
in
stos
cmc
or
or
and
test
or
mov
mov
loope
cmp
lea
add
pop
mov
scas
lods
and
mov
cmp
pusha
mov
dec
and
stc
pop
out
jmp
jg
ficom
jmp
pop
adc
dec
shl
ret
push
xor
mov
push
cmp
jl
addr16
jmp
sbb
add
call
fstp
adc
sub
out
nop
js
jmp
call
in
mov
pop
add
repz
add
mov
inc
(bad)
movs
jo
xchg
inc
aam
cdq
fs
inc
test
loope
mov
test
imul
cld
adc
and
movs
sahf
outs
xchg
mov
xlat
sub
popf
dec
sub
mov
push
shr
repz
les
hlt
and
mov
adc
sub
stos
mov
xchg
mov
daa
jo
mov
jp
inc
sbb
mov
jb
push
(bad)
push
retf
sbb
cld
leave
mov
dec
mov
call
xor
cmps
rcr
jno
test
into
mov
call
stos
dec
mov
mov
push
or
inc
ds
push
push
sbb
cmp
push
loop
sub
push
out
inc
dec
fidivr
shl
cdq
pop
cmp
mov
adc
xchg
stc
add
inc
ret
dec
mov
hlt
mov
outs
iret
dec
lods
mov
mov
sub
fisttp
in
sbb
or
test
and
sbb
aas
lds
and
add
dec
call
mov
xor
mov
adc
sbb
fwait
sbb
xchg
xchg
mov
loope
xchg
test
iret
sbb
ss
jns
cmp
int3
jp
scas
mov
clc
into
fidiv
repnz
lods
adc
cmp
loopne
(bad)
jbe
mov
jge
jge
mov
xor
ss
or
idiv
loope
push
pop
fld
mov
add
add
pushf
inc
test
mov
ds
loop
bound
cmp
sub
cld
std
jmp
aam
test
and
shl
xor
rol
pop
test
add
repz
add
pop
rol
xchg
jo
pop
sbb
retf
dec
ficom
mov
xchg
mov
sbb
(bad)
dec
pushf
dec
or
push
push
shr
fstp
rcr
pop
add
js
xchg
leave
lds
jne
xchg
push
std
(bad)
mov
fidiv
xor
shl
push
out
loop
movs
shl
cld
cmp
mov
ret
int3
sub
stos
xchg
test
cs
pop
adc
add
test
push
cmp
cld
jmp
or
arpl
and
fcomp
xchg
dec
push
jmp
mov
push
or
mov
xchg
lds
cdq
aad
lock
and
inc
movs
loopne
retf
cmps
pop
fsubrp
pop
fcmovne
imul
mov
into
pop
pop
data16
aas
sbb
inc
popa
cli
jg
adc
ficom
push
stc
push
mov
push
xor
out
xchg
shl
xchg
lock
push
pop
pop
int3
out
mov
(bad)
jae
mov
popa
int3
in
adc
pop
pop
stos
push
mov
sub
(bad)
call
fidiv
pop
sar
shl
cmps
cmc
mov
js
xlat
iret
push
int3
les
pop
cmp
into
cs
mov
sar
adc
jns
shr
push
rcr
scas
scas
xor
ror
cmps
outs
jg
out
jmp
cmps
das
adc
xchg
aas
shl
imul
aad
mov
int
repz
inc
mov
retf
call
pop
xor
push
in
and
jg
lods
pop
inc
fcom
and
hlt
mov
js
data16
add
test
push
xlat
pop
push
sbb
ficomp
or
adc
sahf
imul
or
jmp
sbb
pop
xor
in
imul
shl
sbb
fidivr
shr
ds
ror
xchg
xchg
cmps
cli
dec
ins
push
out
inc
jno
or
aam
ret
(bad)
jp
cdq
mov
mov
shl
push
in
call
inc
xchg
data16
or
or
in
inc
mov
xor
out
dec
fistp
inc
sar
jecxz
jmp
mov
rol
jp
shl
sar
in
out
sbb
jmp
mov
push
mov
lods
sbb
mov
movs
jnp
dec
jo
imul
gs
(bad)
retf
add
sbb
mov
cmp
aas
and
jg
inc
inc
cdq
xor
fmul
push
out
imul
das
(bad)
aad
xchg
imul
outs
cmp
jp
xor
jl
push
sub
mov
nop
out
scas
inc
aad
popa
pop
mov
ins
or
push
jge
mov
pop
xchg
call
and
and
ret
clc
out
push
xchg
xchg
rol
sub
hlt
add
pop
cmp
addr16
inc
sti
xor
and
or
inc
daa
in
popf
inc
adc
add
inc
sti
sbb
loop
mov
daa
fwait
push
ins
enter
jcxz
xchg
xlat
fs
pop
mov
fsubp
adc
cmp
outs
ret
out
int
xor
loope
sti
mov
and
ss
add
mov
popf
sbb
push
in
mov
push
or
loop
add
pop
test
out
xchg
mov
aad
sbb
inc
mov
add
ins
or
inc
not
xor
xor
pop
inc
out
mov
sbb
ror
sub
call
sbb
xor
mov
jmp
mov
push
fisttp
stc
fmul
and
shl
lock
or
repnz
and
lock
pop
or
sar
into
sti
and
js
inc
movs
jbe
mul
pop
cmp
jmp
jbe
and
out
pushf
aad
int
xor
or
into
shr
out
sahf
push
adc
push
icebp
sub
sub
shr
ins
mov
out
push
sub
ins
sub
xor
and
gs
out
in
dec
fs
std
add
jecxz
in
pop
inc
int
xor
add
in
sub
xor
mov
sbb
test
rep
sbb
pop
push
loopne
xchg
loope
ds
cwde
(bad)
enter
mov
lahf
mov
sub
fs
sar
scas
mov
mov
call
repnz
out
push
cmps
mov
gs
lods
xchg
dec
jmp
jnp
movs
or
ret
adc
xor
mov
je
cwde
js
xor
loop
mov
and
cmp
cmovg
push
ficom
add
push
hlt
rcr
test
or
jne
scas
add
mov
push
repnz
ficom
mov
mov
xor
(bad)
xor
pop
movs
jns
retf
sub
icebp
ins
jg
fdivp
loopne
ins
mov
stos
xchg
jns
fild
js
xchg
lock
sub
dec
xor
and
jo
out
cli
mov
dec
ds
push
scas
mov
xor
daa
lahf
cmc
xchg
sub
or
cmps
call
mov
pop
and
je
cld
mov
in
js
ins
fdiv
mov
call
jg
adc
imul
mov
cmp
pop
xor
push
call
imul
sbb
ja
cmp
xchg
pusha
out
icebp
call
sbb
xor
mov
rcl
ins
adc
int
ret
cmp
(bad)
cwde
jmp
jbe
rcl
aas
pusha
push
xchg
aam
inc
xor
fisubr
aam
(bad)
sahf
je
jbe
into
clc
aad
push
xchg
and
mov
inc
sub
xor
adc
ror
push
jo
or
aad
movs
adc
dec
addr16
scas
sbb
xchg
addr16
cmp
cmp
psubq
cli
ins
cmp
stos
and
xor
push
cs
and
mov
nop
cld
test
mov
imul
jb
jl
in
push
cmp
xor
pop
mov
mov
mov
mov
lods
xchg
mov
mov
sub
add
or
jbe
fist
ror
and
mov
mov
xchg
loope
ret
mov
fdiv
pop
cmps
xchg
or
pushf
mov
lahf
cli
push
stos
(bad)
je
lods
aad
jbe
test
jmp
pop
push
mov
jge
clc
sbb
xchg
ss
clc
jmp
ficom
fmul
dec
cs
jmp
sti
cmp
push
push
fmul
in
pop
scas
cs
outs
test
mov
and
sub
dec
adc
xchg
sar
retf
arpl
mov
dec
ins
cli
mov
mov
jecxz
sbb
sub
sti
in
retf
lahf
push
sub
fadd
push
ret
and
jne
lea
dec
jne
add
pop
cmp
dec
dec
jnp
int3
dec
mov
or
shr
mov
cwde
mov
test
mov
pop
(bad)
ins
je
xor
jb
ss
sbb
sub
adc
sbb
push
(bad)
hlt
and
pusha
dec
test
or
dec
loope
dec
cli
inc
(bad)
(bad)
adc
mov
cmps
sbb
push
jge
dec
sub
pusha
sub
int
fdiv
aam
cmp
scas
jmp
ror
xchg
jp
mov
aam
out
or
mov
jmp
push
(bad)
fist
xchg
add
sub
add
enter
mov
or
jp
push
pop
outs
jns
dec
pop
sub
mov
or
(bad)
pushf
into
mov
in
or
adc
mov
jmp
mov
mov
adc
ins
es
push
sbb
jb
sahf
xor
loop
xor
push
stos
ss
inc
mov
add
or
push
jmp
cmp
lods
std
fild
loop
pusha
in
into
jne
mov
loop
ss
jmp
sbb
cmp
lahf
fs
mov
test
xchg
push
lahf
cwde
retf
adc
and
iret
clc
scas
repz
pop
push
xchg
(bad)
add
sbb
das
push
push
ds
cmp
mov
add
cmp
cmp
sbb
adc
dec
pop
jmp
out
sbb
pusha
or
push
test
ins
and
lods
data16
cmp
ja
mov
cld
cmp
rcl
(bad)
pop
jmp
mov
outs
inc
xchg
push
daa
cmps
retf
mov
dec
dec
movs
or
mov
fdivr
mov
and
add
popf
pop
sbb
test
adc
ja
repz
jb
pushf
xor
jo
dec
mov
jmp
xchg
xchg
mov
cmp
repz
or
mov
adc
(bad)
nop
clc
jo
xchg
retf
mov
mov
ja
mov
push
call
fwait
cmps
clc
pop
int3
dec
or
inc
pop
cmps
push
sub
ds
xor
outs
sti
cdq
jae
xor
pop
xchg
mov
jecxz
call
jl
aas
sbb
jecxz
fcomp
dec
lods
pop
cmc
movs
lahf
(bad)
and
pusha
call
pop
ins
mov
push
lods
add
test
add
rol
lahf
loope
dec
mov
jb
pushf
int
sbb
imul
retf
pop
jns
push
enter
and
add
sar
jp
mov
in
bound
xor
mul
fwait
jno
out
inc
in
push
jno
sahf
les
into
cmps
pop
mov
cmp
and
scas
mov
enter
push
cmc
mov
rcr
shl
(bad)
jmp
scas
dec
and
dec
xchg
sub
cmps
cmp
mov
leave
scas
ins
mov
jl
dec
pushf
popa
cdq
cld
jcxz
lods
adc
(bad)
cld
sbb
mov
jo
jo
aad
sub
jp
push
in
ds
popa
jb
push
repnz
pop
add
pushf
sub
jg
ins
fisttp
cmp
retf
mov
test
movs
movs
inc
inc
push
cmc
sbb
dec
inc
test
xor
mov
pop
mov
(bad)
sbb
cmc
fcomp
adc
in
push
movs
sub
stos
sub
call
mul
out
sub
dec
adc
(bad)
aad
(bad)
push
aam
pop
or
movs
sbb
xchg
cmc
and
je
xchg
sbb
mov
mov
mov
dec
fsubr
es
clc
push
adc
dec
aaa
retf
or
sub
jg
repnz
inc
or
mov
mov
icebp
xlat
pushf
in
sbb
and
cli
hlt
and
pop
(bad)
cmc
adc
mov
loopne
test
xchg
mov
rcl
xchg
xlat
sti
stos
lahf
int3
lahf
scas
(bad)
xor
pusha
(bad)
stc
test
sbb
rcr
mov
das
js
sub
lds
(bad)
call
push
push
iret
bound
mov
fisttp
retf
sbb
mov
push
mov
cdq
jecxz
mov
adc
lods
je
mov
in
cdq
rcr
xor
pop
mov
push
adc
lea
(bad)
gs
fist
xor
mov
sbb
adc
xor
jecxz
movs
out
mov
mov
retf
and
mov
call
outs
fidivr
and
sbb
imul
inc
xor
sub
sti
in
enter
lods
in
mov
hlt
dec
retf
mov
outs
fisub
push
adc
jne
movs
mov
(bad)
jl
adc
stos
mov
add
dec
loop
repz
xor
adc
ds
sub
mov
inc
mov
dec
scas
sti
std
mov
jns
cwde
sahf
adc
push
mov
ss
mov
inc
add
dec
int
test
je
pop
jo
jmp
loop
jnp
pop
add
jle
mov
cmc
hlt
sbb
or
cwde
mov
test
mov
sub
and
adc
cmps
js
in
or
cmc
xchg
cmp
stos
popf
and
mov
clc
push
call
dec
ds
push
aaa
dec
fdivrp
es
inc
lods
mov
mov
movs
(bad)
jbe
setle
add
inc
pop
mov
or
or
push
jne
loopne
neg
cmc
inc
push
or
mov
cmp
ins
out
xchg
mov
sub
dec
pop
push
out
xor
inc
push
and
push
in
inc
jns
into
out
mov
inc
mov
adc
pop
mov
inc
cs
adc
sub
push
mov
or
add
out
jae
jecxz
mov
pop
mov
adc
mov
dec
int3
push
or
adc
push
jnp
into
mov
(bad)
icebp
call
outs
and
xchg
adc
in
pop
stc
in
push
movs
ja
(bad)
ds
mov
add
fisubr
das
les
test
jl
cmp
sub
daa
mov
(bad)
ss
push
xchg
enter
in
icebp
xchg
mov
jle
sub
sub
and
ss
xor
aad
mov
jmp
and
jbe
pop
fist
lds
aad
and
add
movs
outs
adc
cdq
ds
mov
test
push
sub
lds
sub
adc
sbb
into
adc
and
mov
xor
test
cdq
push
sbb
mov
fisttp
mov
adc
mov
ror
pop
pop
ficomp
jle
int3
mov
(bad)
jns
std
push
add
je
repnz
pushf
int
pop
push
jmp
fdiv
jo
ja
ret
ja
add
xlat
cmp
inc
mov
pop
sbb
ins
push
aaa
pop
leave
or
(bad)
xor
popa
jmp
xor
ds
cdq
movs
(bad)
je
outs
xchg
cmp
jecxz
jmp
xchg
jne
std
shr
sub
outs
xlat
and
aad
hlt
in
jbe
inc
dec
xchg
or
ds
mov
ret
pop
mov
mov
xchg
jmp
test
inc
adc
pushf
mov
or
rcr
pop
mov
cli
pop
push
push
xor
js
mov
mov
(bad)
pop
sub
xchg
in
fdivr
xchg
jmp
jmp
loopne
xchg
retf
jmp
and
bound
shr
sar
adc
xchg
dec
inc
push
retf
jmp
mov
jbe
out
(bad)
sti
jg
das
sub
mov
cld
or
push
or
loop
xchg
daa
out
push
push
clc
add
push
pop
pusha
popa
xchg
ret
push
xor
dec
dec
mov
stos
idiv
mov
retf
xchg
mov
xor
lahf
aaa
loope
loop
jge
in
je
xor
rol
(bad)
test
stc
mov
mov
movs
and
sub
(bad)
push
fisttp
(bad)
and
inc
lds
cli
mov
push
in
dec
and
in
call
js
add
imul
adc
mov
adc
shl
retf
pop
out
or
fild
pop
and
and
shl
in
(bad)
std
arpl
lds
pinsrw
jg
jnp
xchg
mov
jl
retf
xor
xor
sub
xor
mov
fnstenv
xlat
mov
sbb
push
push
sub
mov
dec
movs
adc
jno
pushf
bound
push
cmc
ja
and
jg
aas
ds
clc
(bad)
xchg
and
pop
sar
sbb
jmp
jae
mov
test
jo
jl
inc
out
retf
(bad)
and
(bad)
jg
fiadd
ficomp
adc
mov
sub
and
aam
inc
outs
ins
xchg
lss
inc
dec
pop
inc
(bad)
add
push
xor
mov
leave
movs
and
fsubr
cmp
dec
mov
popf
(bad)
scas
jnp
jge
xchg
icebp
xor
stc
shl
rcl
dec
jo
pop
mov
stc
adc
out
mov
add
ss
add
hlt
iret
imul
and
adc
bound
mov
sbb
mov
pop
sti
leave
pop
retf
dec
inc
pop
xor
fdivr
xchg
mov
in
sbb
test
ja
push
xor
cmp
fld
cmp
in
xchg
xchg
sbb
xor
mov
cld
ret
adc
xor
xor
dec
scas
xchg
xchg
repnz
ins
data16
pusha
lock
jns
mov
push
pop
shl
pop
(bad)
es
add
das
in
mov
jg
popa
inc
into
out
cmp
int
inc
add
xchg
mov
daa
(bad)
push
dec
fstp
adc
jg
add
aas
shr
push
inc
mov
retf
iret
ret
ds
iret
pop
jo
ja
dec
add
mov
sub
or
push
jmp
in
dec
adc
jl
sbb
and
sbb
sub
shr
popf
push
and
push
stos
in
arpl
xchg
int
nop
sbb
mov
mov
push
sub
test
das
jg
lods
push
int3
aas
fdiv
(bad)
jge
sub
outs
stos
dec
mov
cmp
shr
or
std
push
and
in
or
mov
push
outs
sbb
fld
stos
loope
jo
dec
into
xchg
add
imul
cmc
jne
cmp
fdivr
pop
jmp
adc
mov
neg
imul
dec
mov
mov
mov
aad
adc
das
push
xchg
pop
lods
es
and
sub
fs
fisttp
push
or
jmp
jmp
sub
out
mov
data16
pop
and
bnd
(bad)
cld
movs
clc
call
outs
(bad)
cmps
sub
sbb
loop
and
iret
push
dec
daa
repz
cmps
mov
mov
cli
mov
test
in
ins
(bad)
add
pop
int
out
cs
push
pop
cmp
fs
gs
lds
out
push
stc
hlt
cs
cld
push
and
add
cld
xor
inc
sbb
vpslld
lea
and
sub
(bad)
fstp
je
xchg
fistp
cmc
test
shl
repnz
and
fwait
jnp
jmp
lds
inc
lods
push
jne
iret
and
fadd
mov
inc
xor
sub
(bad)
mov
ja
inc
or
aam
stc
sbb
in
jnp
fstp
mov
mov
pop
xchg
daa
mov
fmul
movs
mov
or
rcl
in
popa
pop
test
cmp
ret
cs
sbb
sbb
add
mov
imul
dec
adc
pop
hlt
jmp
inc
shl
pop
js
arpl
jns
jnp
pop
push
jle
sub
xor
ror
cs
imul
rol
push
and
cmps
xchg
in
movs
jmp
adc
pushf
clc
jo
jecxz
stos
and
xchg
and
popa
(bad)
xchg
mov
fs
sbb
mov
jl
lds
ja
mov
push
pop
movs
sub
push
xor
aaa
or
(bad)
sub
sbb
(bad)
pop
shl
pusha
out
push
pop
out
in
in
mov
add
inc
dec
in
js
sub
data16
popf
pop
mov
xchg
jae
loope
aas
imul
clc
test
aam
mov
sub
mov
enter
les
mov
aas
repnz
mov
retf
cmp
sbb
js
ret
loop
mov
dec
movs
fisubr
xchg
mov
std
sub
jg
fsubr
xchg
dec
jg
pop
imul
test
mov
popa
sbb
xchg
mov
fidivr
adc
mov
mov
int
xchg
push
xchg
mov
popf
pop
imul
or
ja
ror
(bad)
ret
xlat
ftst
mov
mov
xchg
jle
stos
out
retf
dec
mov
mov
stos
movs
in
nop
fs
(bad)
mov
add
arpl
inc
stc
pop
mov
or
adc
adc
stos
pop
push
lock
fs
(bad)
push
mov
(bad)
sub
aad
jns
mov
xchg
es
jmp
stos
ins
ins
push
mov
or
shl
imul
mov
jg
mov
mov
ss
mov
mov
mov
retf
fidivr
aam
bound
cmps
(bad)
js
dec
pop
shr
lea
(bad)
mov
into
mov
xor
add
lods
push
out
fmul
or
ror
mov
mov
pushf
inc
adc
retf
rcr
dec
sti
mov
repnz
repz
hlt
cmps
or
call
jle
mov
mov
in
in
mov
imul
pop
mov
(bad)
ins
jl
sbb
movs
sbb
(bad)
loopne
stc
xor
xor
div
mov
fsubr
add
push
pop
sar
pop
xor
adc
pop
sbb
imul
dec
retf
popf
iret
dec
lea
jbe
das
out
mov
movs
jmp
stos
rcr
repnz
mov
jle
hlt
pop
mov
mov
mov
add
(bad)
and
call
jns
jb
xchg
sbb
add
jnp
sub
outs
push
mov
mov
cmp
lods
inc
mov
fldenv
test
in
cmps
les
pop
sbb
mov
lea
push
xor
add
int
fcom
div
shr
in
int3
jmp
add
jl
sbb
loopne
inc
repz
push
stos
mov
pop
jmp
idiv
jmp
ret
rol
pusha
jge
inc
push
aam
aad
(bad)
test
pop
push
dec
mov
(bad)
jbe
jo
mov
pop
jmp
mov
das
push
xor
jg
bound
push
mov
int3
out
push
mov
jnp
jg
jbe
or
add
inc
mov
subps
data16
jb
adc
sbb
fmul
icebp
dec
(bad)
loopne
or
aam
inc
and
jp
mov
stos
xchg
sbb
outs
repnz
push
jns
xchg
mov
or
adc
mov
xchg
cmps
aad
mov
push
je
lods
dec
(bad)
cmp
push
lods
pop
or
ds
mov
inc
push
push
dec
xor
rol
retf
or
cmp
mov
jmp
jg
cld
or
push
mov
sub
pusha
push
push
stos
mov
pop
movs
or
and
xor
jns
fstp
fst
pop
fcomp
cmp
dec
pop
sbb
(bad)
inc
sbb
push
or
xor
je
xor
fistp
adc
clc
adc
sbb
dec
std
and
add
sub
(bad)
stc
pop
dec
aaa
out
mov
in
sbb
bound
inc
dec
jmp
hlt
lods
nop
icebp
jl
push
out
fs
out
mov
ror
frstor
ret
mov
inc
rep
mov
jno
or
fistp
mov
das
lds
xor
lock
(bad)
inc
leave
mov
scas
jae
or
sbb
retf
push
sbb
mov
mov
dec
pop
or
(bad)
dec
(bad)
jb
aam
out
aaa
loop
sub
mov
push
sbb
adc
and
lds
pop
call
sbb
pop
adc
push
xlat
add
jmp
test
data16
nop
mov
packssdw
mov
inc
xchg
les
call
das
(bad)
les
je
in
aad
cmp
ds
pop
imul
fwait
jle
adc
loopne
loop
jl
adc
mov
ja
aas
jns
sbb
jge
mov
pop
outs
sub
jae
inc
adc
adc
iret
mov
push
push
test
in
shl
sbb
sbb
mov
aas
aam
aam
mov
inc
rcr
jecxz
fwait
mov
stc
test
int3
ret
lods
stc
repz
add
lods
aam
sub
fdivr
cmp
bnd
push
aaa
or
sub
in
cli
in
pushf
pop
lock
dec
push
mov
add
movs
jle
lds
retf
adc
in
mov
xchg
inc
inc
(bad)
neg
cmp
(bad)
(bad)
lds
or
cli
int
dec
daa
and
imul
mov
sbb
gs
dec
xchg
mov
in
std
adc
xchg
push
push
pop
pop
push
js
or
lahf
pop
and
clc
aad
shl
test
out
out
stc
add
fwait
xor
lods
lods
mov
xchg
sub
push
pop
inc
dec
outs
repz
mov
outs
sub
aaa
scas
add
cmp
ins
stc
add
imul
jmp
(bad)
out
fwait
mov
and
ins
inc
sub
jmp
les
and
add
nop
ds
loope
push
hlt
cmc
scas
add
outs
mov
cli
pop
cmp
cmp
arpl
retf
jle
mov
clc
cmp
and
dec
mov
adc
int3
xchg
add
test
and
mov
fsub
push
sub
sub
pop
sub
mov
pop
pop
sub
jns
jl
xchg
scas
cmp
test
push
ror
cmp
ds
cmc
cmp
mov
adc
xchg
sub
sub
stos
(bad)
(bad)
cdq
dec
test
lods
xor
xchg
add
mov
ficomp
imul
push
mov
mov
pusha
rcr
push
xchg
jg
in
lock
pushf
lds
jnp
add
cmc
pop
add
mov
xchg
push
jle
sub
or
pop
cmp
adc
dec
pop
adc
sbb
dec
push
in
mov
out
daa
add
mov
mov
cwde
inc
pushf
pop
add
mov
xchg
add
ins
pop
xchg
dec
out
adc
xor
outs
out
fimul
(bad)
push
out
shl
fild
inc
addr16
push
jmp
test
pop
outs
rol
loopne
stos
push
mov
or
mov
(bad)
sbb
aad
adc
sub
cli
jle
cmps
xchg
push
or
add
and
sub
test
icebp
lahf
repnz
cmps
xor
ja
mov
mov
cmp
ficomp
sub
and
cmp
shr
mov
mov
mov
ins
int3
mov
or
adc
sbb
adc
mov
mov
retf
xor
sbb
pop
or
adc
cmp
cmp
or
stc
fs
jmp
mov
js
mov
bound
(bad)
popf
scas
dec
js
inc
bound
adc
pop
gs
outs
sar
lods
push
imul
mov
and
and
jns
jecxz
lock
pop
(bad)
xor
cli
add
icebp
stos
pop
sar
inc
push
pop
mov
mov
add
and
movs
out
je
rcl
mov
mov
sti
cmp
inc
out
(bad)
fst
inc
mov
xchg
pop
pop
jmp
mov
jecxz
sbb
mov
inc
sub
mov
leave
sub
hlt
test
add
test
gs
jb
pop
pusha
jmp
popa
rcl
out
add
sbb
xor
mov
in
sahf
xchg
jae
jmp
lods
mov
loopne
int3
inc
sub
push
lods
lahf
mov
and
cmp
xchg
add
ror
and
pop
adc
xchg
sub
cld
pop
adc
in
lea
(bad)
test
xor
ror
mov
adc
inc
add
gs
hlt
mov
ins
shl
les
add
lahf
lea
fisttp
xchg
cwde
push
add
hlt
sub
jns
adc
xchg
int3
lds
ins
(bad)
sub
sbb
sub
imul
jae
adc
or
call
pop
jae
lods
out
repnz
push
add
dec
mov
(bad)
in
jns
mov
xor
mov
setne
call
jns
sbb
mov
mov
add
popf
test
push
mov
mov
dec
sub
lea
xor
cmp
stos
or
dec
jecxz
fwait
out
cld
clc
jae
inc
or
popa
mov
scas
stos
inc
movs
icebp
cmp
ret
iret
and
and
jg
dec
test
mov
mov
int
lods
(bad)
aad
jne
xor
ret
shl
fistp
fdivp
das
sub
sahf
lea
fdivr
mov
(bad)
push
aad
inc
(bad)
adc
mov
retf
mov
call
cmp
xchg
cmc
pop
push
(bad)
pusha
xlat
xlat
je
xchg
scas
push
out
sub
lahf
pop
mov
sub
mov
pop
rcl
sti
stos
inc
or
ins
addr16
ja
adc
fistp
test
cmps
or
sbb
fbstp
cmp
jle
pop
mov
je
mov
aas
push
jle
rcl
mov
das
jno
in
dec
icebp
out
push
lea
aad
fnstsw
movs
jmp
loop
sub
bound
xchg
pop
and
fwait
xor
xchg
jb
test
hlt
jmp
xchg
es
sar
and
xor
es
add
loop
movs
sub
neg
xchg
int3
or
sub
jnp
sbb
xchg
mov
mov
std
dec
jns
jno
adc
addr16
idiv
sbb
shl
pop
add
inc
sbb
ret
movs
cmp
das
shr
xchg
cld
bswap
rcr
xchg
sbb
daa
(bad)
fcomp
dec
(bad)
push
in
inc
repnz
lods
dec
cwde
or
or
loope
in
jb
enter
fidiv
add
retf
rcr
add
mov
pusha
pop
jno
dec
jg
lods
shl
xchg
cmc
cmp
out
(bad)
sti
stos
jns
push
inc
fwait
mov
data16
lods
loope
outs
or
pusha
out
sub
nop
cmp
cmp
xlat
aaa
jge
or
scas
adc
lahf
jge
adc
jo
pop
mov
retf
int3
sub
push
(bad)
inc
mov
test
(bad)
ror
push
mov
fwait
push
mov
push
leave
mov
sub
mov
in
ss
es
mov
sbb
sbb
repz
push
in
arpl
and
push
hlt
pop
sti
(bad)
rol
fldenv
xchg
xlat
jmp
ror
scas
jmp
bound
std
sub
and
sahf
inc
ins
leave
dec
fcomi
ds
fmul
gs
xlat
iret
jnp
leave
mov
lock
pop
mov
cmp
jns
pop
or
cdq
jns
sub
cld
fisub
jns
pushf
mov
std
ret
pop
push
jbe
inc
or
cmp
inc
add
adc
jo
fstp
adc
pop
out
sub
xchg
cmp
loopne
mov
mov
out
mov
fwait
scas
xor
loopne
sub
ss
mov
xchg
fbld
popa
ins
or
lods
lods
add
jmp
mov
cli
inc
out
mov
jno
or
or
int
lods
xchg
out
cmp
(bad)
aad
retf
fsubr
add
ret
inc
pop
test
fmul
jo
inc
or
sub
out
add
add
xchg
lods
(bad)
aam
(bad)
cmc
ja
jne
nop
ds
je
in
inc
cwde
sub
jle
mov
sub
xadd
mov
jae
push
shr
jbe
push
jge
mov
adc
mov
test
jo
out
popf
xor
and
ficom
gs
jge
pushf
aaa
mov
mov
adc
mov
push
and
mov
jo
lahf
mov
cmp
push
adc
jle
jp
mov
movs
sti
scas
mov
push
pusha
aam
neg
das
ficom
pop
push
sub
neg
stc
ins
cmp
mov
or
jg
je
icebp
mov
call
test
sahf
xchg
mov
sbb
push
mov
jecxz
lods
ror
mov
mov
ds
fisttp
and
mov
mov
dec
jno
std
xor
pop
xchg
sbb
lods
push
and
aaa
xchg
pop
mov
pop
(bad)
test
repz
loope
popa
cli
(bad)
push
fidivr
das
loopne
cld
mov
cli
mov
nop
sbb
fcomp
in
jae
je
inc
dec
push
inc
retf
mov
fs
retf
push
mov
or
mov
jg
push
jecxz
icebp
jbe
cld
pop
scas
push
add
xchg
inc
retf
push
push
mov
mov
cli
movs
jo
pusha
inc
outs
push
add
jns
mov
stos
push
in
sbb
mov
jle
into
ror
mov
mov
push
or
sbb
xchg
adc
mov
inc
cmp
add
xor
cmc
mov
and
es
sub
mov
(bad)
inc
mov
add
dec
hlt
jne
pusha
je
cdq
or
mov
pusha
xor
shl
rol
pop
aas
out
cmc
xlat
and
test
ins
pop
loope
ins
pop
jmp
sub
push
push
outs
dec
push
sbb
fnstsw
push
je
fidivr
inc
jg
push
aas
pcmpeqw
(bad)
mul
(bad)
adc
mov
call
shl
cmp
and
push
arpl
pop
imul
inc
repz
xchg
call
leave
sbb
imul
pop
out
aas
push
minps
pop
and
and
push
imul
adc
or
enter
iret
lock
xchg
cmps
dec
add
fsubr
(bad)
(bad)
sbb
test
or
movs
call
xchg
mov
push
add
mov
out
sub
sub
out
out
push
pop
pushf
nop
ror
dec
repz
cmp
(bad)
xor
pop
sbb
add
adc
ins
shl
adc
or
sub
inc
rol
in
data16
mov
out
xchg
cmps
mov
cmp
sub
mov
aaa
cmova
mov
mov
stos
das
movs
and
hlt
mov
jge
inc
rol
sbb
jge
sub
arpl
jmp
push
stc
add
cwde
je
and
cmp
jecxz
cmp
dec
fwait
xchg
loop
pop
(bad)
jmp
hlt
xchg
adc
sbb
jo
push
dec
mov
addr16
nop
inc
sub
xor
sbb
xor
cli
retf
clc
fsubr
in
mov
pop
inc
fdiv
mov
sbb
dec
xor
ins
cld
fidivr
shl
mov
sub
dec
fldcw
pop
pop
lds
xlat
in
aad
sbb
(bad)
test
pusha
adc
cmps
imul
mov
loope
mov
xlat
test
xor
inc
test
les
add
mov
imul
ret
cmp
fwait
hlt
inc
xchg
xor
sbb
ds
mov
xchg
jmp
mov
mov
inc
icebp
xor
(bad)
sub
or
mov
and
fadd
jmp
or
sar
mov
jbe
pop
das
test
inc
inc
movs
add
sub
xchg
in
mov
stos
repnz
sub
push
inc
mov
adc
movs
cmp
xchg
fiadd
push
into
xchg
fadd
add
jg
(bad)
mov
hlt
inc
push
(bad)
xlat
pop
push
mov
jmp
mov
mov
lock
mov
pop
mov
out
int
cwde
sbb
pop
mov
leave
and
int
pop
aas
out
cmp
in
popa
adc
ds
inc
mov
push
mov
mov
or
not
push
jl
outs
cmp
mov
pop
loop
add
push
jl
cmc
stos
mov
and
fs
ja
test
test
ret
dec
sub
sahf
add
and
dec
jbe
into
jp
(bad)
sub
mov
mov
push
xchg
cld
adc
jnp
mov
cmps
dec
and
(bad)
stc
xor
dec
inc
mov
cmp
bound
mov
xor
retf
test
(bad)
xchg
push
pop
mov
adc
adc
ds
xchg
fldz
rol
pop
or
jo
sub
push
jae
xor
xchg
gs
xor
or
add
and
stc
mov
push
adc
retf
fimul
lods
mov
imul
call
call
push
fisttp
and
test
or
push
push
scas
in
in
mov
jecxz
and
int3
mov
(bad)
aad
inc
aaa
out
pusha
lods
cs
and
fcmovnbe
imul
jb
lahf
xor
xlat
lds
push
sub
hlt
or
jo
nop
add
ror
mov
inc
xchg
adc
xchg
mov
add
pop
daa
sar
cmc
aas
cli
or
cmc
add
mov
das
sahf
mov
pop
push
in
sub
or
push
sbb
imul
add
add
sub
xor
push
cs
xchg
ins
pusha
jno
cli
or
gs
int3
xchg
pop
xchg
imul
mov
push
and
(bad)
or
xlat
pop
adc
dec
rcr
in
sbb
push
jge
mov
dec
repz
sbb
adc
ja
int
inc
movs
mov
cmc
jne
xor
inc
test
lds
mov
xchg
aam
fdiv
lock
dec
jnp
jmp
add
mov
and
data16
sbb
repz
std
push
call
lods
scas
loope
push
xor
pop
test
pusha
leave
in
popa
or
pusha
adc
cmc
or
retf
xchg
jg
popa
mov
scas
inc
lahf
(bad)
fadd
ins
sub
(bad)
cmp
mov
lahf
cmp
cmps
jmp
sbb
popf
push
mov
test
sbb
xor
jmp
jae
push
mov
ret
xor
bound
in
stc
and
and
inc
inc
cs
sub
adc
cmps
shr
mov
fstp
inc
jae
test
xor
jmp
loope
mov
out
mov
out
xchg
inc
in
or
(bad)
das
mov
cld
(bad)
(bad)
dec
jnp
xor
arpl
out
cli
sahf
rcl
aas
xor
pop
xor
loop
or
push
push
aaa
or
ret
mov
movs
(bad)
sbb
bound
sbb
jns
lea
pop
ficom
adc
mov
dec
add
in
jb
clc
lods
adc
sti
arpl
add
sbb
daa
and
rol
test
shl
popf
jecxz
int3
out
fst
adc
xchg
fwait
sti
inc
shl
pop
mov
xchg
xchg
fist
adc
mov
lock
aaa
jg
mov
scas
sbb
dec
jbe
cwde
int3
adc
movs
and
push
jg
(bad)
icebp
dec
dec
cmp
xor
mov
pop
mov
mov
ss
mov
call
xchg
and
sti
ins
jns
and
xchg
jecxz
jns
mov
rcl
nop
pop
add
xchg
fst
popa
addr16
ins
jne
add
xchg
push
repz
(bad)
in
jnp
cs
outs
xor
or
mov
loope
(bad)
mov
nop
adc
lahf
and
xor
fisttp
jg
cmp
shl
test
xor
fistp
ret
lock
das
jle
jg
cdq
sar
in
movs
out
pop
jge
sahf
jnp
xor
inc
ins
out
jl
xchg
mov
xchg
lods
lods
cwde
lahf
push
rcl
int3
cmp
push
in
enter
and
sbb
je
ror
inc
or
lods
push
adc
dec
addr16
loop
sbb
out
mov
in
imul
mov
push
imul
xchg
sbb
xchg
xchg
gs
fcmovnbe
sub
mov
leave
and
pushf
pop
push
lods
mov
aad
pop
adc
cli
cmp
mov
cmc
in
fstp
inc
movs
and
cld
sbb
inc
jae
xor
ins
cmp
add
push
arpl
test
jmp
sar
cld
push
pop
inc
ror
dec
or
ins
xor
lds
fdivp
shl
dec
das
push
clc
add
dec
mov
enter
inc
sbb
and
push
sub
pop
add
and
cmp
push
loopne
cdq
inc
inc
imul
fnstsw
xchg
push
mov
data16
mov
stos
fldcw
xor
xor
cld
mov
dec
mov
cli
sub
frstor
pushf
ins
pop
or
pop
cmps
push
shl
enter
jne
std
jl
adc
add
inc
movs
or
call
adc
fsub
loopne
in
cdq
xchg
popf
outs
add
loopne
scas
mov
shl
(bad)
xor
dec
repz
test
jae
inc
pop
es
and
ins
cmp
pop
jle
in
movs
pop
xchg
mov
pop
test
loop
dec
xchg
cmp
repnz
leave
jb
dec
or
adc
sub
push
inc
sub
push
mov
cmp
movs
jo
or
jecxz
jle
dec
out
xchg
pop
lea
jle
mov
push
cmp
push
pusha
cmp
dec
inc
or
push
mov
ffree
cmp
and
loop
out
lods
inc
push
jo
fcmovnb
adc
faddp
lea
shl
fidivr
cmp
jbe
fistp
fbld
out
xor
adc
sbb
mov
int3
dec
fidiv
xchg
inc
les
jle
xchg
rep
pop
xchg
call
pop
dec
sbb
in
adc
and
mov
push
clc
dec
jmp
outs
jno
xchg
in
retf
add
mov
fld
dec
cwde
cmps
test
mov
js
and
jmp
push
fstp
dec
add
sub
int
test
(bad)
retf
retf
dec
pop
push
mov
inc
dec
pop
inc
mov
dec
lock
in
(bad)
stos
mov
push
push
jae
mov
inc
ins
shr
call
mov
ja
jmp
(bad)
jmp
je
xor
dec
idiv
std
call
ja
or
iret
xchg
aam
in
jmp
(bad)
inc
loope
or
adc
(bad)
clc
(bad)
sar
adc
not
dec
add
lods
cmc
mov
lods
xor
ss
jo
pop
std
fsubr
or
push
push
loop
mov
mov
fs
sbb
mov
adc
dec
iret
cdq
sub
aad
stc
push
xchg
jge
ror
xchg
out
fwait
dec
arpl
imul
mov
cmp
iret
fwait
inc
inc
ret
pop
fdivr
es
pop
loop
retf
push
dec
mov
daa
addr16
js
call
inc
fbld
jo
in
int
cmps
fsub
fcmovb
add
sub
xor
push
or
js
lock
or
dec
sub
outs
cmp
into
icebp
not
mov
mov
mov
test
stos
lock
push
push
mov
gs
sub
scas
fimul
movs
and
aas
sub
mov
movs
fwait
out
arpl
inc
xchg
mov
sbb
mov
xchg
xchg
add
stos
inc
and
xor
push
pop
or
ds
pop
cmp
pop
and
mov
jp
and
dec
rol
inc
imul
and
jp
imul
push
jmp
pop
jg
pop
pop
dec
jae
mov
ss
test
cdq
pop
imul
fsub
xchg
pop
ja
inc
into
pop
jl
push
adc
and
fwait
ins
push
aam
imul
pusha
add
call
cmps
mov
inc
fldcw
and
lea
push
jp
adc
iret
mov
rcl
stos
stos
mov
add
bound
test
cmp
dec
cli
lock
fimul
and
stos
div
repz
int
and
fs
push
xchg
ja
jne
ins
jmp
rcr
stos
stos
mov
(bad)
cmp
mov
push
popf
cmps
inc
jo
out
out
out
mov
xor
or
jns
shl
mov
sub
push
stc
pop
dec
repnz
sub
mov
lea
pushf
push
data16
mov
mov
movs
imul
(bad)
mov
in
jmp
cmp
pop
cmp
je
jbe
sbb
inc
(bad)
shl
out
sbb
pop
dec
cmps
jns
sub
adc
in
das
jae
dec
xchg
in
adc
fld
gs
xchg
ret
cmp
gs
push
dec
mov
scas
mov
repz
xchg
(bad)
xor
in
adc
jl
ret
mov
inc
fld
stos
pushf
add
stos
adc
mov
stc
pop
inc
ficom
sbb
xchg
movs
jecxz
pop
xor
mov
fwait
jle
pop
cmc
addr16
aad
sbb
or
push
(bad)
loope
mov
int
dec
pop
lods
popf
scas
into
popf
xor
int
cld
addr16
sub
pop
jmp
cs
adc
lods
movs
mov
adc
sub
xchg
sub
cmp
shl
cld
scas
pop
aad
mov
push
js
retf
and
scas
daa
mov
cs
movs
lock
fsubr
fiadd
push
xor
imul
mov
jae
jmp
loope
pop
dec
repnz
popf
pushf
push
arpl
jmp
into
mov
dec
mov
or
movs
(bad)
ficomp
jmp
or
push
ins
mov
je
dec
cld
xchg
sbb
ins
mov
push
lds
xor
icebp
pop
ds
retf
inc
jmp
in
sub
push
bound
les
ins
add
pop
jno
aad
push
sahf
movs
push
mov
xchg
pushf
push
imul
ret
xor
repz
loopne
xchg
or
xchg
nop
aas
jle
mov
dec
(bad)
enter
jle
pop
inc
(bad)
movs
mov
daa
repnz
test
sbb
jl
mov
jge
push
addr16
retf
cmp
jl
mov
ret
int3
jle
lea
ret
fmulp
and
or
dec
pop
pop
das
jo
xchg
aaa
ret
mov
push
(bad)
js
inc
dec
(bad)
jg
sub
mov
mov
scas
or
add
clc
jns
jmp
test
adc
out
xlat
dec
sbb
lock
out
adc
push
inc
(bad)
lods
nop
sti
fbld
cmps
push
or
push
retf
or
dec
lea
(bad)
mov
ss
add
repnz
cmp
js
repnz
lds
shl
(bad)
addr16
retf
mov
fwait
sti
loope
aam
ret
sub
out
fidiv
outs
rcr
xchg
icebp
push
fdiv
mov
test
aaa
adc
stc
es
push
popa
xchg
xchg
icebp
cmp
mov
push
frstor
jnp
out
sbb
(bad)
aaa
inc
aaa
loopne
mov
add
out
sbb
jne
push
inc
cmp
movs
scas
aaa
sub
add
push
or
xlat
jmp
jne
out
lahf
sub
sub
add
mov
popa
das
hlt
push
ret
mov
repz
add
xchg
dec
popf
call
jle
fiadd
(bad)
outs
(bad)
scas
in
jp
mov
add
ins
pop
and
cld
sbb
ret
fmul
and
shl
leave
shl
stos
pop
pop
mov
ret
pop
add
cmp
sub
jne
pop
cmps
mov
sub
push
ins
in
lahf
data16
and
and
sub
outs
sub
aam
mov
cmp
in
adc
xor
dec
ret
clc
enter
push
mov
in
xchg
jbe
sbb
push
iret
add
call
xor
mov
mov
leave
jg
in
sbb
call
es
fxtract
xchg
pop
int3
dec
rcl
cmp
adc
xchg
aaa
cmp
inc
icebp
push
mov
inc
imul
inc
xchg
sub
mov
mov
xor
mov
pop
cld
mov
sub
xor
pop
push
inc
gs
cmp
jecxz
push
stos
xor
push
rcl
mov
ret
imul
inc
jmp
dec
or
sub
mov
jl
out
fwait
inc
and
mov
or
pop
ror
inc
ret
out
jmp
pushf
xor
jb
iret
iret
xchg
xor
mov
inc
add
(bad)
and
cmps
push
pop
test
and
or
jp
shl
or
cmp
movs
rcr
in
xchg
in
cmp
xchg
bound
ret
ins
inc
test
or
jmp
pop
or
pop
and
inc
test
int
sub
inc
retf
daa
adc
adc
popa
popf
cmp
cmp
mov
neg
mov
mov
stos
mov
hlt
sbb
ja
pop
rol
mov
mov
cs
cmp
xchg
xor
push
jecxz
add
mov
push
xor
imul
xor
cmp
retf
cmp
mov
mov
jae
fcomp
dec
pop
mov
cmp
pop
dec
outs
cs
xchg
pop
cmp
lods
jbe
mov
mul
dec
pop
mov
inc
icebp
(bad)
fst
repz
sub
gs
pop
fisub
outs
lods
cmp
jecxz
stos
cmps
mov
(bad)
ins
mov
push
xchg
xchg
jbe
cmp
hlt
fcom
or
test
xor
retf
xchg
cmp
mov
push
ret
ins
push
dec
inc
mov
js
xchg
mov
pop
lds
cmps
mov
and
mov
xchg
mov
add
mov
xor
mov
cmps
ss
out
sub
mov
mov
aaa
fld
inc
ret
cmp
shl
or
jmp
lahf
outs
rol
adc
fdiv
mov
call
cmp
(bad)
mov
add
xchg
or
mov
mov
lock
jmp
mov
ss
cmp
dec
out
pusha
iret
adc
stos
stc
dec
inc
std
je
test
in
enter
sbb
jle
mov
call
nop
push
or
call
out
and
adc
stc
cmps
imul
loope
cdq
xchg
lods
pop
adc
loope
mov
jecxz
je
popf
adc
movs
cmp
mov
and
mov
movs
and
sub
in
mov
mov
push
pop
dec
jns
cmp
in
xchg
sub
push
scas
pop
xchg
mov
xchg
mov
and
push
cmp
icebp
loop
jnp
mov
adc
pop
xor
add
pushf
fwait
sbb
lds
mov
imul
jbe
sbb
xor
xchg
sahf
inc
jo
std
aaa
xor
cmc
mov
in
jmp
rcl
jl
dec
es
inc
push
jo
xchg
inc
mov
loop
xlat
pop
mov
add
cmps
mov
jmp
add
mov
into
fstp
fwait
and
fdiv
dec
pop
loop
hlt
(bad)
sub
shr
test
call
test
sbb
leave
(bad)
push
stos
jo
cmc
imul
arpl
add
fnstcw
push
sbb
add
sub
push
fisub
mov
sub
loopne
pop
push
mov
mov
fnstsw
cwd
int3
inc
cmps
cli
jnp
sbb
outs
and
std
sbb
fwait
div
xor
push
pop
push
mov
add
(bad)
retf
rol
dec
mov
xchg
sub
push
mov
fisubr
pop
leave
in
popf
clc
jle
xor
or
inc
add
es
imul
inc
lahf
imul
xchg
jge
icebp
jl
adc
xlat
sbb
push
in
push
es
sub
and
popf
dec
inc
shrd
aas
jg
sbb
sbb
push
jnp
loope
cmp
out
retf
push
imul
test
lods
push
or
fistp
imul
mov
sub
in
ret
adc
add
adc
aaa
push
movs
fbstp
cli
ds
imul
loopne
push
mov
sar
lods
ret
adc
sbb
cmp
inc
dec
xor
xchg
mov
(bad)
sti
sub
dec
loope
cwde
inc
std
inc
push
bound
rol
jne
popf
adc
mov
xor
inc
push
jmp
aad
jle
frstor
lods
out
pop
int
in
jbe
jno
dec
shr
jbe
(bad)
jmp
xchg
hlt
xor
(bad)
inc
in
dec
and
jns
(bad)
lods
(bad)
cmp
aaa
xor
lods
cmps
xor
jo
xor
cmp
xchg
out
jnp
(bad)
fdiv
push
iret
push
in
out
test
pop
(bad)
sub
aad
hlt
cmc
or
(bad)
out
retf
outs
mov
adc
iret
cmp
lahf
mov
mov
ins
adc
push
adc
jb
xor
ror
sbb
ja
xchg
cmp
retf
mov
mov
xchg
or
push
sti
adc
push
cmp
fimul
aam
cmp
addr16
inc
fisubr
inc
ret
sti
cld
pop
jl
push
mov
sahf
out
(bad)
aam
push
push
fdivr
and
fstp
sbb
inc
rcr
xor
sahf
outs
xchg
inc
test
or
sbb
stc
dec
dec
mov
addr16
mov
icebp
fist
mov
add
cmp
fld
jle
cmp
pop
aas
mov
test
ret
mov
mov
or
jle
(bad)
mov
sbb
add
arpl
or
jp
leave
xchg
int
test
add
jmp
xor
jmp
adc
ss
lea
sub
mov
mov
je
pop
mov
adc
jnp
xchg
adc
lods
sahf
push
sbb
jl
mov
mov
test
movs
lea
(bad)
cdq
cmps
inc
jae
inc
enter
mov
shl
xchg
xor
hlt
outs
aad
lea
repnz
mov
fstp
arpl
cmc
sbb
mov
imul
pop
xchg
mov
sub
and
mov
sub
clc
mov
jg
dec
mov
mov
add
and
stos
mov
mov
sahf
inc
push
fwait
std
mov
and
icebp
cmps
cdq
mov
mov
mov
lods
dec
pop
scas
mov
push
or
dec
inc
bound
xor
(bad)
daa
xchg
sub
inc
mov
out
mov
push
sbb
mov
push
loope
(bad)
cmp
fild
pop
add
cld
xchg
jg
push
cli
daa
fwait
lahf
push
dec
(bad)
sti
fadd
mov
jns
imul
lds
mov
sub
mov
bnd
dec
sar
jo
push
inc
cmp
adc
pop
jl
pop
jbe
mov
mov
push
jge
repz
sub
rcl
lods
xor
xchg
lahf
je
loopne
push
pop
pop
aas
ins
test
(bad)
push
ficomp
xor
cmp
sbb
add
in
and
mov
das
sbb
and
sub
mov
pop
iret
loop
pop
inc
(bad)
test
iret
push
adc
sbb
out
scas
sbb
div
pop
bound
pop
lock
leave
nop
addr16
test
test
jo
ret
push
pop
test
push
jmp
and
xor
jmp
mov
dec
mov
(bad)
cmp
into
repnz
mov
fnsave
fistp
push
movs
mov
inc
jp
std
stos
push
xor
imul
aaa
in
push
sub
out
ins
ds
imul
fs
sahf
ficom
sub
xor
gs
sub
in
jge
mov
mov
xchg
push
lea
adc
push
cmps
adc
test
in
add
jecxz
leave
(bad)
xchg
cmp
mov
aam
out
and
jmp
inc
rol
or
popa
sbb
pop
cmp
mov
jnp
ins
mov
pusha
pop
fcomp
sub
push
or
shr
outs
xor
cmps
add
popa
(bad)
xor
pop
xlat
jmp
loop
push
mov
jne
or
dec
aas
lea
cmp
scas
bound
mov
xchg
fild
adc
nop
push
pop
aam
jmp
sub
inc
adc
push
cs
mov
xchg
dec
xlat
xor
jbe
jae
fdiv
add
rol
inc
inc
daa
fdiv
sbb
inc
das
push
jb
inc
inc
repz
addr16
push
inc
add
mov
imul
shr
loopne
sahf
bound
mov
dec
xchg
bound
pop
push
pop
rcl
outs
adc
push
std
add
adc
nop
mov
aaa
add
xor
fisubr
jl
out
cdq
lahf
xor
inc
xchg
repnz
pop
or
dec
cmp
aas
jnp
xor
stc
dec
loopne
scas
mov
cmp
push
in
pop
in
mov
cmp
adc
sub
mov
mov
loope
inc
xor
mov
sub
popf
xor
stos
xor
or
gs
mov
inc
stc
cmp
test
test
pop
xlat
hlt
mov
add
fistp
ret
pop
rcr
dec
pop
ficom
cmp
gs
cmc
ja
xor
push
imul
cmp
mov
sub
test
mov
add
sbb
rcl
xchg
sahf
arpl
rcr
popf
mov
aad
jecxz
lods
jae
push
stos
pop
mov
adc
in
cmp
lock
aas
push
bound
pop
dec
push
cmp
mov
mov
xchg
(bad)
call
mov
sub
popf
mov
mov
clc
or
fwait
shl
jmp
mov
call
jg
add
int
adc
push
dec
push
je
add
sbb
push
ds
cmps
fistp
cmps
aaa
jbe
inc
dec
sahf
repnz
out
sub
mov
sub
test
into
clc
js
xchg
call
pop
lods
jns
fs
pop
add
cmps
retf
sbb
sub
pusha
push
pop
dec
pop
push
push
push
jo
fdiv
mov
xchg
mov
dec
bound
adc
xchg
cmp
loope
into
cmps
fistp
jmp
xor
or
and
cld
jp
xchg
aad
retf
mov
pop
sti
sub
lock
jmp
adc
(bad)
out
fadd
in
or
nop
in
and
jg
jg
push
xchg
add
inc
inc
fild
cmp
enter
jmp
and
sbb
push
aam
mov
jmp
imul
fist
mov
test
cmp
add
pop
ja
imul
fdiv
(bad)
sbb
adc
idiv
push
outs
sub
popa
cmp
arpl
pop
scas
test
rep
jle
ror
nop
jmp
adc
test
les
jmp
push
retf
dec
inc
(bad)
and
(bad)
imul
and
imul
sbb
dec
loope
sbb
call
hlt
mov
in
sbb
gs
dec
call
punpckhbw
dec
jp
jb
ja
scas
add
nop
dec
adc
jnp
mov
jg
xor
test
repnz
movs
ds
(bad)
int
and
jmp
push
mov
adc
les
xlat
retf
pushf
dec
jmp
push
out
rcl
mov
(bad)
cwde
push
lock
mov
mov
dec
scas
pop
lock
pop
dec
pop
sbb
dec
lods
xor
and
inc
xchg
in
cmps
pop
cmp
dec
jno
xor
out
call
mov
mov
addr16
out
sbb
test
push
push
jp
mov
mov
cmp
shr
mov
xor
mov
sbb
dec
inc
inc
je
adc
das
lods
push
mov
cmp
xchg
or
lods
push
mov
sbb
push
stc
shl
popf
ins
adc
mov
sti
pop
jg
cwde
dec
add
dec
addr16
in
out
jbe
pop
(bad)
xchg
not
sub
or
sti
xchg
lea
arpl
push
cli
cmp
or
outs
lods
dec
jo
scas
inc
popf
sub
mov
int3
sub
lock
cmp
xadd
sbb
rol
int3
jo
retf
adc
mov
sbb
xchg
xchg
ja
jg
lock
not
fisttp
and
xchg
mov
mov
push
mov
rcr
(bad)
or
cs
fld
(bad)
(bad)
neg
mov
cmps
cmp
or
push
add
mov
sub
cld
xlat
or
push
daa
cmc
xchg
fldcw
or
lds
outs
jmp
or
sbb
sub
mov
inc
(bad)
stos
or
or
mov
and
xlat
jb
(bad)
(bad)
bound
sahf
push
jb
and
sub
pop
aad
shr
pop
mov
mov
or
jmp
mov
retf
daa
(bad)
je
imul
push
jb
pop
cmp
xor
xchg
mov
ja
push
std
(bad)
sbb
sbb
outs
dec
mov
xor
not
sar
push
xchg
dec
adc
sti
in
aad
dec
pavgw
adc
mov
ss
jno
adc
call
xor
fadd
jbe
movs
inc
loopne
call
mov
mov
rcr
cmps
fmul
test
jmp
popf
push
jle
jns
ins
inc
add
aad
das
sbb
inc
daa
add
fidiv
std
inc
call
sub
enter
mov
mov
ins
pop
lahf
mov
push
mov
test
inc
mov
jb
ins
lock
sub
inc
push
jl
jl
mov
sbb
push
(bad)
lea
adc
or
hlt
daa
shl
repnz
fidivr
inc
in
push
push
push
fsubr
dec
sahf
mov
sub
stos
aaa
pushf
ds
test
and
retf
fidiv
fs
retf
mov
push
dec
push
cmp
pusha
sub
cmp
js
pop
xor
aaa
sahf
sahf
sbb
ss
dec
lods
in
bound
cmp
add
fs
inc
dec
pop
cmp
fs
(bad)
femms
test
scas
das
aam
inc
or
sbb
repnz
pop
imul
rcl
sbb
push
fdivr
xor
test
jmp
xor
push
or
jge
jno
mov
movs
push
pop
repz
xchg
fldz
fistp
mov
add
inc
mov
push
retf
aaa
adc
daa
xchg
mov
sub
jnp
cmp
xchg
add
stos
in
dec
pop
shr
dec
in
push
aad
dec
test
mov
ins
pop
mov
pop
movs
mov
ret
(bad)
fnsave
shl
mov
sub
mov
cwde
inc
cmp
nop
fst
jge
pop
(bad)
test
sbb
test
cdq
pop
inc
stos
sub
adc
aam
mov
mov
cmc
cmps
int3
xchg
mov
and
jae
ret
outs
repnz
inc
and
dec
pop
inc
gs
adc
enter
cdq
int
ret
add
repz
push
jecxz
push
es
mov
dec
push
pushf
dec
icebp
xlat
pop
fiadd
xlat
push
(bad)
or
popa
shl
cmp
jb
adc
jmp
and
ja
adc
push
push
in
pop
int3
mov
bswap
adc
xor
rol
or
mov
pop
in
imul
inc
(bad)
or
loopne
dec
pop
test
lea
loopne
xlat
add
shr
pop
call
in
shr
mov
push
or
xchg
addr16
icebp
out
xchg
dec
pushf
cmp
dec
shl
popf
dec
xchg
pop
dec
mov
xor
mov
sub
cld
(bad)
fcom
loopne
sbb
sti
out
add
in
fucomi
or
test
inc
dec
or
mov
mov
div
dec
int3
push
add
xor
xchg
sti
idiv
mov
pop
xchg
loopne
aas
inc
cmp
xor
cmps
mov
xor
inc
test
iret
add
popf
cmp
push
in
adc
stos
xchg
(bad)
sar
xchg
mov
inc
movs
ret
cdq
data16
outs
es
mov
or
mov
shl
clc
es
pop
pop
mov
cmp
mov
add
xchg
pop
pop
or
or
hlt
adc
bound
rol
popf
ror
xchg
lock
inc
add
lea
mov
cvtps2pd
pop
mov
or
enter
xor
outs
sbb
mov
test
dec
xor
inc
shl
not
sbb
mov
pop
sub
or
mov
cdq
fisttp
cmp
jl
sub
fdiv
enter
push
aaa
call
pop
mov
jecxz
movs
xchg
mul
cmc
xchg
pop
adc
mov
hlt
xlat
adc
aas
and
pop
sub
scas
scas
int3
sbb
push
xchg
retf
sahf
jb
hlt
lahf
in
push
pop
fwait
std
or
loop
cmp
ja
cli
mov
ret
fnstenv
aaa
fld
movs
and
add
arpl
push
(bad)
out
mov
out
dec
leave
ins
jo
mov
cmp
mov
dec
imul
fs
pop
mov
and
pop
mov
dec
ins
cmp
mov
push
adc
adc
pop
pop
sbb
jmp
inc
stos
dec
push
cmp
dec
cmps
adc
push
push
cmc
pushf
dec
pop
int3
(bad)
mov
imul
inc
cld
test
sub
jmp
in
mov
xchg
into
cmp
sub
cmp
loop
idiv
adc
fdiv
mov
and
and
sbb
sub
inc
out
push
or
ja
hlt
fadd
fs
loop
pop
jle
es
mov
lds
ret
repnz
pop
sbb
mov
rol
xchg
pusha
sahf
int3
jmp
mov
jo
icebp
(bad)
fucomi
das
in
call
inc
adc
and
and
ss
test
add
mov
std
mov
fmul
repz
(bad)
push
sub
push
int3
adc
mov
dec
mov
xchg
dec
pop
call
add
pop
add
dec
pop
inc
pop
repz
je
std
mov
xchg
push
aas
scas
loopne
add
leave
retf
jo
idiv
xor
cmc
int
fmul
movs
(bad)
scas
pop
sbb
cmps
push
push
int3
push
mov
les
aaa
cmp
or
add
(bad)
fstp
adc
pop
jl
sub
mov
mov
jno
aad
cmp
popf
pop
jmp
add
add
adc
stos
lods
push
jg
xor
dec
imul
add
pop
sub
aaa
aam
ss
push
jne
test
and
jecxz
cmp
cmp
test
push
cmp
sbb
lahf
jg
ror
xchg
xchg
xchg
cdq
cli
pop
leave
ja
jge
mov
xlat
xor
bound
mov
ja
sti
inc
push
mov
inc
xchg
or
popf
jp
in
inc
test
ds
pop
pop
mov
mov
mov
aaa
dec
mov
fcmovbe
sbb
mov
loop
mov
mov
jae
sbb
ror
repz
pusha
in
mov
out
test
stos
inc
fst
shr
mov
mov
and
xchg
adc
fstp
push
dec
mov
test
dec
fincstp
in
pop
call
inc
mov
into
gs
aas
xlat
cmc
daa
gs
fild
add
lock
std
movs
sbb
addr16
sti
dec
sbb
jle
push
imul
mov
sbb
and
mov
add
cdq
jno
push
jno
clc
xor
mov
mov
ins
fstp
retf
not
sahf
popw
push
shl
es
loope
loopne
adc
call
retf
popf
pop
mov
adc
loop
cld
mov
hlt
jg
cmp
inc
jp
clc
mov
clc
cwde
imul
inc
lods
fwait
dec
cld
cmp
in
xchg
inc
xlat
mov
ret
sub
lds
fdiv
cmps
rol
out
inc
movlps
in
push
xlat
add
dec
scas
or
(bad)
jle
xchg
out
call
mov
xchg
int
stos
jo
xchg
cmp
hlt
jecxz
inc
into
popf
imul
mov
add
inc
scas
arpl
ds
lock
mov
loop
hlt
adc
mov
push
pop
ds
push
rol
cmp
cs
rol
sahf
fisubr
inc
mov
push
pop
pop
and
add
cmps
repnz
jne
adc
xchg
jnp
dec
loop
mov
xchg
out
or
xlat
into
cmp
cmc
jmp
xor
adc
lea
dec
add
sbb
in
fnstenv
mov
jmp
inc
xor
push
sbb
loop
popa
inc
(bad)
gs
push
sbb
ja
shr
pop
and
cli
push
sbb
dec
divps
pop
(bad)
scas
adc
hlt
fwait
and
add
aaa
xchg
adc
out
cmps
in
std
das
mov
pop
mov
mov
aas
das
dec
mov
shl
mov
imul
pop
aas
mov
xor
add
push
jp
sub
xchg
mov
fnstcw
loopne
jo
sbb
dec
leave
aam
ror
inc
pop
push
inc
das
(bad)
xchg
add
adc
jne
pop
lock
dec
inc
fucomip
adc
(bad)
and
jmp
les
pop
cmp
std
push
pop
inc
add
mov
sub
out
xchg
arpl
shl
mov
push
xor
jp
mov
clc
cdq
lds
jmp
mov
ins
ins
leave
cwde
sahf
dec
(bad)
scas
pop
icebp
dec
lock
add
jp
not
aad
out
popf
adc
test
mov
pushf
fnsave
std
sahf
fisub
stc
out
sbb
push
sub
adc
int3
loop
xchg
xor
dec
je
inc
push
call
push
jns
push
add
xor
sub
push
push
movs
js
stos
inc
adc
les
cli
xor
nop
rcr
xor
dec
ret
mov
gs
push
cli
dec
jns
push
(bad)
fisttp
mov
lahf
loop
mov
std
add
(bad)
xor
mov
shr
and
push
mov
leave
jle
xchg
dec
sub
xchg
pop
mov
(bad)
popa
outs
xchg
or
pop
sub
data16
mov
sbb
ror
push
enter
test
mov
xor
stos
ret
dec
fst
std
les
adc
imul
add
jle
xor
mov
push
in
aam
push
pop
mov
lods
sbb
cli
cli
(bad)
pop
sbb
bound
add
pusha
inc
xchg
jnp
(bad)
cld
add
ret
mov
adc
jbe
mulps
push
iret
add
sbb
sbb
dec
sub
jo
(bad)
icebp
in
dec
fistp
add
clc
inc
or
or
sub
jb
inc
cdq
pop
sub
ret
mov
test
sbb
and
dec
sti
xchg
mov
clc
pop
and
pop
add
dec
loop
inc
xor
ror
xor
pop
cmc
mov
ja
mov
xor
das
jmp
(bad)
jbe
pop
push
ins
jne
mov
leave
icebp
fisttp
jmp
loope
jne
div
leave
lods
jle
into
lahf
(bad)
pop
nop
pop
push
add
pop
mov
inc
pop
cld
push
pushf
or
mov
xor
cmp
lahf
mov
jae
outs
icebp
mov
cli
daa
mov
fwait
jne
(bad)
popf
mov
fdivr
movs
mov
push
fcom
push
dec
imul
fldcw
cs
mov
sbb
cmc
(bad)
call
pusha
and
sbb
push
(bad)
jbe
or
js
push
cmp
jp
push
or
cmps
rol
jae
mov
mov
sub
int
xchg
and
sbb
js
loopne
and
shl
xchg
adc
clc
xchg
sbb
inc
imul
and
test
add
rol
and
inc
das
cmps
pop
or
into
sub
stos
or
or
lods
(bad)
pushf
fldenv
test
call
xchg
out
cmp
in
js
test
les
mov
out
in
or
push
sbb
pop
pop
test
dec
mov
popf
mov
xor
adc
mov
xchg
xor
rol
mov
mov
aaa
sbb
jae
outs
jl
les
and
rol
inc
imul
rcr
push
ins
fsub
sbb
ret
sub
test
pop
mov
and
sbb
push
scas
int
xchg
icebp
jmp
dec
in
das
aad
add
push
mov
pop
out
inc
and
sbb
out
push
fs
adc
pop
fadd
in
in
fisttp
mov
js
inc
cmps
push
nop
mov
pushf
add
push
test
cmp
xor
aad
mov
pop
out
test
pop
xor
mov
jl
scas
and
dec
push
ja
sub
dec
ins
out
in
sub
inc
sub
cmc
jmp
fnstsw
add
fmul
ins
push
cmps
cld
fsub
lock
js
repz
jae
std
arpl
clc
lds
dec
sahf
add
jno
or
mov
jg
adc
pop
cdq
sub
sahf
pop
lods
or
mov
xlat
mov
loope
xor
fs
push
(bad)
sbb
xchg
loope
movs
gs
adc
sti
js
dec
mov
add
in
add
scas
sbb
gs
sub
cmp
cli
sbb
jl
adc
jne
imul
enter
xor
nop
outs
cmp
inc
pop
shl
in
xor
movs
xor
test
or
dec
sbb
repz
push
loopne
mov
push
xchg
push
mov
retf
dec
loope
cmp
ss
push
xor
add
mul
aam
jle
xor
arpl
inc
jle
push
out
std
mov
push
retf
push
cmp
aam
sub
ds
ret
push
arpl
aam
and
push
xchg
or
pusha
in
fisubr
leave
add
push
lds
lock
push
mov
iret
pushf
out
outs
shl
jmp
sub
scas
push
mov
pop
pop
jbe
ins
lds
outs
push
sti
call
inc
loop
out
fldcw
jno
imul
bound
dec
push
lahf
dec
push
mov
mov
push
cmp
dec
xor
pop
and
js
cwde
pop
mov
icebp
sar
xchg
dec
jae
inc
jne
ins
cmc
mov
cmp
loop
xchg
iret
or
sbb
(bad)
call
dec
sub
or
mov
pop
or
lahf
push
mov
push
cmc
mov
and
sub
pop
mov
cs
add
or
test
jg
or
imul
cmp
test
mov
jns
mov
inc
clc
cmp
mov
fdiv
lahf
mov
iret
stc
xchg
movs
inc
cwde
xchg
jne
cmps
inc
ja
(bad)
stos
call
mov
push
add
retf
inc
imul
xchg
fdiv
mov
pop
lods
loopne
aad
xor
movs
(bad)
ins
sub
inc
(bad)
jp
xchg
pop
shl
es
fsub
(bad)
sbb
jg
push
mov
fcom
sub
push
movs
int3
popf
(bad)
or
retf
inc
jle
pop
inc
std
cdq
adc
pushf
(bad)
in
ds
or
pushf
push
push
pusha
cmc
movs
or
inc
mov
jne
retf
aad
dec
inc
pop
inc
cmps
pop
pop
push
push
inc
jmp
sbb
aad
push
dec
push
jno
imul
scas
jl
inc
adc
imul
rcl
cmp
and
push
loope
loope
mov
test
xor
jno
fimul
fs
imul
xor
dec
xchg
pop
retf
jae
fild
and
jmp
mov
mov
mov
mov
js
xor
das
mov
push
sar
jp
in
mov
push
sahf
test
mov
iret
add
or
rcl
mov
sbb
and
add
pop
sub
or
mov
cmc
inc
adc
sbb
jno
loop
pop
fiadd
mov
and
pop
cld
inc
xchg
dec
call
int3
(bad)
loop
repz
movs
xchg
fs
jp
xchg
and
xor
cmc
lods
mov
mov
stos
retf
push
mov
or
inc
sub
mov
cdq
scas
clc
pop
or
ror
cdq
out
inc
in
sbb
mov
mov
xlat
scas
add
add
cmp
add
adc
cwde
(bad)
scas
retf
ins
cmp
stc
push
pop
push
jmp
and
leave
icebp
adc
dec
jno
and
add
test
and
test
mov
dec
push
xchg
test
test
dec
sbb
stos
cmp
(bad)
or
push
xor
pop
mov
rol
xchg
push
rcl
push
clc
and
in
cmp
inc
leave
aas
mov
fs
gs
loop
mov
loope
pop
retf
fmul
fldl2t
mov
ficom
call
ror
xor
xchg
cmp
mov
adc
imul
mov
push
clc
leave
mov
test
scas
jg
loop
mov
fcmovne
pop
rol
fs
(bad)
lods
ret
dec
ror
and
cwde
pop
jecxz
aad
stos
mov
xchg
jge
push
nop
jmp
jle
xor
lock
aad
out
repz
jnp
gs
mov
jmp
mov
jge
xor
test
cmp
lock
add
retf
in
outs
or
fmul
jnp
adc
neg
(bad)
call
add
data16
xlat
cwde
jg
mov
dec
adc
scas
pop
jmp
inc
popf
inc
cmp
add
dec
addr16
push
into
shl
and
push
adc
mov
inc
cdq
xchg
pop
mov
jge
xor
xor
mov
shr
shr
mov
(bad)
stos
push
or
arpl
rol
lea
mov
add
xor
shl
ds
aaa
in
div
and
push
(bad)
adc
in
cmp
fcmovbe
loopne
xlat
clc
gs
xchg
ins
retf
mov
ftst
add
sahf
fistp
sub
pop
dec
leave
not
test
imul
test
gs
dec
mov
sbb
push
scas
sbb
out
hlt
dec
xor
call
add
inc
push
mov
and
inc
pop
scas
into
pop
pop
jns
or
push
dec
or
loop
fist
inc
or
ror
aam
adc
cmp
mov
mov
aas
sub
sub
inc
cli
jns
add
dec
xlat
mov
mov
movs
push
add
xor
pop
mov
jmp
add
pop
and
outs
shl
sbb
inc
loopne
in
test
inc
icebp
imul
sar
cli
push
jge
jns
pop
jmp
imul
pop
test
push
bound
mov
stos
sbb
jl
int3
in
sti
dec
dec
push
inc
sbb
or
jmp
xchg
arpl
jp
sbb
jecxz
and
es
sub
out
push
jbe
and
cli
xor
nop
mov
push
in
rcr
icebp
push
test
mov
push
call
sbb
xor
add
mov
push
jmp
loope
(bad)
sub
fwait
(bad)
stos
test
sub
add
pop
push
fisttp
into
dec
push
and
test
rcr
pushf
xchg
scas
xor
jmp
and
imul
stc
mov
imul
or
jbe
fcomp
sub
cmp
shr
xor
xor
adc
cmp
xchg
cwde
enter
addr16
mov
js
in
add
imul
jbe
loopne
(bad)
push
adc
fwait
xor
lock
dec
aad
test
push
or
xchg
popa
jg
je
stc
out
fwait
hlt
fwait
outs
(bad)
pop
mov
and
adc
sub
ficom
fdiv
pop
sub
push
mov
xchg
dec
xchg
icebp
movs
push
vpsubw
sbb
stc
shr
xchg
xor
cmc
add
out
rcr
jne
jp
pop
div
ror
js
push
dec
or
or
and
retf
mov
movhps
cmp
pop
cmp
add
gs
jb
adc
jne
int
cwde
xor
out
dec
dec
mov
jnp
out
fsubr
leave
rol
cld
push
in
lock
repnz
arpl
add
sahf
xlat
ds
out
sub
pop
icebp
inc
imul
push
loope
sbb
aad
inc
lock
pushf
sbb
sbb
idiv
cmp
cli
retf
push
shl
jo
mov
mov
and
xor
jecxz
push
imul
mov
jmp
mov
daa
(bad)
out
adc
inc
sub
mov
add
sti
(bad)
scas
aad
(bad)
adc
and
int3
or
xor
(bad)
pusha
in
fcomip
jmp
sub
add
ins
jmp
adc
icebp
mov
or
and
or
std
mov
sbb
scas
pop
pop
mov
das
push
and
retf
ret
test
push
es
int3
(bad)
daa
xchg
pop
xchg
lods
daa
mov
add
pop
neg
jecxz
pop
add
daa
cmp
sbb
out
cmps
cs
xor
mov
adc
cmp
fsub
or
lea
daa
dec
(bad)
loop
add
mov
arpl
or
lds
cmp
inc
mov
inc
sbb
jnp
je
mov
addr16
rol
or
or
and
out
sub
sar
sub
push
fsub
les
es
cdq
lods
nop
ficomp
push
scas
sbb
pop
arpl
stc
(bad)
mov
fcomi
add
cmp
sbb
stos
cmp
addr16
adc
adc
add
add
sbb
adc
lds
in
cmps
inc
add
out
in
and
shl
int3
dec
(bad)
imul
or
rcl
mov
outs
imul
inc
out
(bad)
cli
sub
mov
(bad)
movs
imul
and
sub
jae
and
mov
sub
in
mov
daa
mov
lods
mov
xchg
mov
clc
push
stos
pop
dec
or
push
nop
jl
cmp
mov
leave
call
dec
daa
adc
(bad)
and
and
sub
or
push
cs
lock
inc
ja
mov
jle
push
jmp
ret
aaa
dec
dec
mov
mov
stos
and
mov
push
jnp
or
or
aad
ds
test
cmc
dec
clc
mov
and
cs
std
je
jmp
arpl
mov
cmp
es
mov
dec
cli
and
hlt
inc
fcomp
cli
adc
and
retf
lods
pushf
mov
mov
jmp
aas
inc
je
cmp
outs
pop
rcl
mov
xchg
push
mov
xchg
aad
xor
sbb
xor
stos
or
add
rol
push
push
sbb
(bad)
sub
mov
enter
push
push
sub
push
jmp
push
pop
jbe
sti
mov
ror
loop
push
sahf
xlat
inc
mov
sbb
das
in
xor
pop
xchg
hlt
jp
jns
test
mov
mov
je
sbb
and
mov
enter
xchg
ja
mov
mov
arpl
mov
dec
fidiv
jmp
sub
ja
add
call
jb
inc
xor
fstp
leave
sbb
arpl
test
xor
div
inc
add
add
mov
loopne
lea
and
cmp
jle
test
jb
rcl
jl
cmp
push
fidivr
stos
shl
cdq
mov
mov
push
dec
int3
lods
adc
adc
dec
pop
adc
xor
stos
xchg
out
mov
cs
and
mov
ds
stc
mov
inc
es
mov
inc
mov
loope
and
jmp
test
xchg
sub
fs
fimul
and
pop
inc
pop
inc
lock
push
jmp
xchg
or
in
mov
pop
mov
xchg
cmp
sbb
sti
enter
and
stc
xchg
sar
mul
out
loop
pusha
pop
scas
test
xor
push
jle
bound
mov
inc
pop
aas
arpl
ret
push
inc
sub
cmp
bound
aas
push
adc
jb
ror
xor
call
jae
mov
xchg
pop
fmulp
pop
ror
xchg
popa
js
xor
ins
imul
jmp
data16
sub
inc
xchg
or
xchg
cwde
fdiv
aad
cmps
mov
xchg
mov
pop
xor
dec
ins
cmp
ds
sub
and
dec
jb
mov
inc
cmp
sar
popf
movs
xchg
mov
sti
repz
das
ror
add
je
scas
in
xchg
adc
mov
ror
jecxz
mov
dec
mov
or
xor
mov
jg
js
cmp
dec
stc
mov
(bad)
enter
jbe
inc
out
movs
or
leave
(bad)
(bad)
dec
lahf
call
fidiv
out
sub
leave
fcmove
test
push
xchg
loope
iret
cdq
sti
sbb
fs
adc
loope
sbb
sbb
mov
sub
clc
outs
jbe
dec
xor
ret
mov
mov
rcl
and
jmp
adc
lods
push
sbb
dec
jg
xor
loop
sbb
cmp
retf
pop
xchg
iret
lea
fnstenv
dec
jg
mov
push
sub
nop
popf
(bad)
cs
cmp
fwait
cmps
test
adc
inc
sbb
dec
clc
pop
dec
ins
enter
dec
xor
mov
fild
lods
push
sub
and
inc
(bad)
xlat
and
inc
in
mov
cmp
mov
fwait
cwde
mov
dec
pop
inc
jno
popf
jae
clc
mov
mov
mov
stc
push
loope
cmps
cmp
nop
jae
adc
cwde
cmp
jp
and
call
(bad)
cmp
lock
and
inc
scas
frstor
fnstsw
ja
mov
inc
test
clc
push
sub
mov
sub
sbb
enter
add
pusha
aas
into
and
arpl
dec
cdq
cmp
hlt
xchg
out
lods
or
imul
mov
sub
icebp
fistp
and
(bad)
imul
sub
jecxz
mov
pop
jle
xor
push
rcr
fsubrp
lock
sbb
push
addr16
push
mov
shr
(bad)
pop
imul
(bad)
dec
fmul
scas
call
and
lea
mov
(bad)
ficomp
ror
bound
xor
sbb
and
add
mov
call
and
in
mov
xchg
sar
pop
fwait
imul
(bad)
jle
ror
or
rol
sub
aad
inc
sahf
icebp
lock
aaa
mov
mov
aad
imul
mov
aaa
sahf
mov
sub
mov
jbe
xor
lea
xor
lahf
call
bound
aam
dec
sbb
jbe
mov
dec
pop
mov
test
ficom
adc
aad
(bad)
pop
enter
push
cmps
mov
iret
(bad)
ins
(bad)
daa
std
dec
(bad)
push
dec
lds
mov
mov
inc
call
imul
xor
clc
mov
addr16
add
imul
cmc
pop
aas
ror
scas
sar
sbb
retf
jge
mov
sub
into
mov
rcl
pop
or
mov
retf
in
mov
iret
adc
inc
fs
xor
dec
icebp
sub
xchg
call
arpl
cmp
stos
sub
cwde
add
mov
loop
shl
dec
loope
fiadd
cmc
mov
ins
pop
ret
sti
fmul
xchg
jns
je
adc
ins
or
not
add
push
je
daa
std
out
mov
mov
pop
nop
cmp
push
repz
inc
and
test
imul
mov
cli
push
jne
loope
adc
(bad)
cli
lods
loope
mov
or
cmps
lahf
cli
jg
pop
ror
jmp
and
or
adc
lds
jne
lahf
cwde
dec
add
sbb
dec
xchg
fist
push
call
cmc
js
iret
inc
or
lea
data16
mov
push
add
fcmovnbe
out
out
jecxz
div
jnp
add
hlt
dec
pop
out
push
lahf
enter
jb
cmp
inc
arpl
sub
cli
(bad)
lds
cmc
dec
movs
xlat
add
in
mov
movs
jnp
int3
rcr
xchg
sbb
sbb
inc
cmp
sub
idiv
or
repz
in
or
outs
rol
(bad)
push
sub
push
cmp
pusha
cmp
out
cwde
div
mov
jmp
sbb
mov
mov
sbb
lods
dec
pop
push
push
int
jle
jnp
test
mov
inc
pop
fnsave
cdq
add
cmps
cmp
add
stos
cdq
repz
popa
leave
xchg
sbb
cmc
clc
imul
and
add
leave
test
sti
bound
bound
xchg
push
shr
je
cmp
xchg
ret
adc
into
ins
sbb
pushf
and
ja
mov
call
dec
imul
data16
(bad)
pop
or
mov
jb
es
sbb
call
xor
sub
scas
cmp
jb
mov
dec
adc
mov
aad
push
pop
mov
push
xor
lds
or
and
sbb
ja
mov
out
sub
out
and
sahf
sub
dec
sub
and
add
fmulp
stos
push
cmp
mov
pop
shl
mov
xchg
xor
cmp
loope
jecxz
retf
sbb
or
into
mov
push
jge
imul
dec
mov
not
iret
or
push
jp
mov
dec
jno
push
mov
stc
jae
std
imul
test
movs
jl
push
inc
add
movd
fisttp
jg
mov
xchg
cmp
sub
hlt
stos
pop
jno
ret
enter
mov
inc
fsubr
dec
(bad)
xor
sbb
push
mov
cld
xor
scas
(bad)
dec
pop
das
mov
imul
movs
pop
(bad)
sti
fcom
push
shl
jp
dec
mov
outs
(bad)
lods
mov
jbe
(bad)
and
test
rcr
out
push
cmp
inc
bound
cmp
fstp
add
jnp
shl
xchg
adc
cmp
pop
dec
inc
test
sbb
sbb
ret
mul
call
push
imul
pop
and
or
(bad)
stos
out
sub
popa
cmp
xor
xlat
(bad)
jns
or
jnp
loopne
jmp
xchg
not
pop
and
and
add
add
adc
mov
(bad)
push
sahf
movs
stc
in
adc
mov
out
lea
jle
jmp
cmps
dec
jo
jmp
lods
mov
cmc
ds
repnz
imul
hlt
jecxz
or
push
xor
punpcklwd
lods
cmp
sti
xchg
je
sbb
(bad)
jecxz
pop
adc
scas
lock
lods
inc
test
loopne
sub
pop
dec
cld
jbe
sbb
pop
mov
push
xor
pop
and
sbb
sub
dec
push
jecxz
(bad)
stos
nop
(bad)
mov
clc
pop
push
add
dec
aam
inc
pop
lea
inc
scas
cmp
popf
out
pop
in
mov
je
cmp
adc
(bad)
mov
stos
and
mov
xor
dec
xor
push
push
cwde
pushf
inc
or
mov
or
je
dec
adc
mov
mov
hlt
mov
test
mov
repnz
cwde
std
(bad)
sbb
mov
lock
cmps
mov
shr
paddsw
pop
inc
hlt
ins
popa
rcl
sub
sbb
sbb
push
loop
fisttp
push
or
addr16
arpl
loop
hlt
dec
scas
push
mov
mov
mov
pusha
adc
ins
mov
(bad)
fcmovnu
and
lea
mov
shl
mov
sti
in
inc
sti
mov
cmp
jl
mov
cmc
sahf
jmp
enter
popf
mov
xchg
and
imul
movs
out
loopne
out
dec
or
pushf
xchg
enter
fcomp
sbb
int3
clc
retf
lahf
sub
jmp
push
dec
fstp
pusha
in
sahf
call
cmps
scas
and
dec
sub
stos
nop
fcomp
in
mov
push
push
js
std
stos
xchg
jg
mov
mov
cmova
loopne
add
mov
popf
aaa
arpl
add
sahf
push
push
mov
ffreep
push
push
pop
in
cmp
pop
retf
push
add
sbb
jbe
mov
cwde
pop
add
inc
sbb
push
into
out
enter
movs
pusha
xchg
push
addr16
jmp
pop
stos
pop
ror
cwde
cmps
cdq
cmps
out
ret
mov
jns
out
call
iret
shl
xchg
dec
sbb
jge
adc
push
or
mov
cmps
sar
push
mov
lods
ja
and
push
data16
pop
iret
push
imul
adc
mov
lds
out
inc
jo
sbb
and
mov
xlat
xor
dec
fild
dec
adc
push
ins
dec
bound
movs
paddusb
mov
pushf
inc
clc
mov
cli
jbe
add
popf
mov
push
add
sub
xchg
gs
cmp
sbb
sbb
fcomp
retf
ins
add
pop
sbb
sub
ins
push
cmps
mov
add
mov
movs
inc
push
aaa
rcl
cmp
mov
push
xor
jb
jp
fwait
push
(bad)
lock
inc
xchg
daa
xchg
xchg
adc
jl
out
sahf
mov
call
sub
cmc
mov
outs
adc
aas
fisub
es
adc
hlt
shr
push
xchg
sbb
in
stos
lods
stos
push
mulps
inc
dec
cmps
cmp
sbb
dec
jbe
and
mov
dec
lods
dec
aas
cmp
aas
mov
xor
cmp
mov
cmp
sub
nop
dec
mov
mov
movs
or
pop
pop
into
sub
xlat
mov
and
adc
adc
fwait
mov
jne
sahf
repnz
pushf
xor
cmp
cmp
pop
xchg
mov
pop
imul
sar
xor
and
push
inc
not
sub
sub
jecxz
enter
aad
aaa
ja
in
adc
xor
sbb
dec
push
scas
imul
xor
jno
ret
mov
test
cmp
adc
or
or
cmp
test
cmp
sub
ret
xchg
jle
dec
jecxz
sub
call
jno
jle
sub
jecxz
test
shr
inc
aad
movs
ins
dec
jmp
sbb
aaa
and
cmp
fst
mov
jne
and
rcl
or
pop
jbe
sbb
xchg
fdivr
xchg
mov
pop
arpl
sbb
and
shl
nop
sbb
stos
xchg
(bad)
push
and
cli
lock
push
sahf
sub
sbb
xor
pcmpgtd
sub
ds
shl
loope
push
pop
mov
jp
sahf
cmp
sbb
mov
push
test
mov
ja
jmp
dec
js
dec
fidiv
push
(bad)
outs
sub
sub
cmp
cmc
jg
mov
mov
daa
mov
in
pop
call
sbb
inc
adc
ret
and
mov
xor
sbb
mov
xchg
jmp
jg
iret
or
add
xchg
inc
add
out
clc
or
jmp
mov
(bad)
dec
ror
or
and
imul
inc
jns
or
jmp
(bad)
xchg
test
aaa
cli
dec
xor
jmp
mov
ja
cs
or
sti
shl
xor
jp
pop
jmp
sar
xchg
and
nop
int
lds
adc
hlt
push
rcl
rcr
mov
iret
cwde
cdq
adc
stos
jb
fbld
xor
jne
sbb
inc
cmp
and
push
jl
mov
mov
fwait
sbb
fisub
mov
pop
aam
jno
stc
or
int3
lds
adc
fdiv
mov
xor
jecxz
pop
xor
test
test
add
cli
push
(bad)
xor
jl
push
dec
dec
push
pusha
inc
in
sbb
(bad)
cmc
retf
or
retf
repnz
enter
push
inc
jmp
jne
iret
jb
bound
stc
cli
retf
repnz
xchg
add
push
mov
loop
dec
pop
or
aas
add
push
sub
push
movs
mov
jmp
cld
pushf
lds
rol
cmps
cwde
test
cdq
jb
mov
aaa
movs
push
mov
(bad)
mov
pop
fwait
inc
mov
mov
cmp
adc
(bad)
nop
repz
rcl
jecxz
add
fild
and
ss
mov
mov
inc
scas
cmps
push
cmp
scas
retf
pushf
rol
cmp
cld
add
xchg
mov
xchg
sbb
adc
stc
mov
aas
pop
repz
jne
std
mov
leave
jmp
mov
fdivr
mov
imul
lahf
jne
aaa
addr16
push
add
div
rcl
xchg
int
dec
xchg
test
cwde
bnd
retf
cmps
(bad)
sub
sub
lea
pop
out
mov
fidiv
repnz
pop
popa
outs
data16
lahf
push
sub
(bad)
push
cmps
jne
icebp
movs
mov
test
add
mov
loope
lahf
test
push
scas
addr16
lock
cmp
stos
int3
push
bound
mov
sbb
pop
cmp
add
fld
jg
jmp
dec
cmps
add
cli
scas
in
bound
pop
pop
into
jg
neg
push
daa
out
stos
push
sub
inc
sub
adc
stc
sbb
cs
or
daa
cmp
pop
gs
cld
push
jae
cmps
outs
sub
int
fisub
inc
push
ror
out
and
xchg
inc
movs
and
cmp
cmp
movs
inc
in
push
adc
mov
push
sub
lea
fldenv
sub
xchg
icebp
(bad)
and
mov
stos
sbb
aas
push
fldcw
mov
adc
scas
pop
mov
shl
push
out
fsubr
cmp
and
inc
out
cdq
inc
out
push
in
mov
cmp
lods
test
(bad)
jbe
xor
es
call
out
ret
push
xor
imul
push
jg
shr
xchg
jo
in
xchg
test
popa
int
or
pop
enter
push
lock
mov
sub
fdivr
dec
xor
cld
or
mov
jp
dec
adc
mov
pop
scas
shl
ins
push
or
jo
mov
lahf
add
mov
or
or
fnsave
hlt
pusha
(bad)
(bad)
cmc
cmc
in
add
pop
dec
(bad)
ins
sbb
outs
jns
ffree
loop
loope
ja
mov
push
imul
mov
and
js
aad
xchg
sbb
add
and
es
iret
pop
mov
cs
stos
int3
in
loope
aam
sbb
pop
test
or
cmps
xor
lods
mov
xor
test
pop
stc
and
and
pop
mov
popa
dec
or
cmp
cmovb
addr16
dec
push
and
pop
stc
iret
mov
mov
and
push
fisttp
mov
into
into
mov
xchg
rcl
adc
xchg
and
adc
scas
mov
sbb
hlt
jns
sbb
repz
jmp
xor
out
repnz
int3
dec
lock
pop
and
iret
sar
dec
jo
mov
data16
movs
pushf
test
call
xchg
mov
(bad)
(bad)
aaa
dec
cmp
scas
leave
(bad)
cwde
pop
rol
pop
fst
dec
fs
mov
dec
and
push
xor
mov
int3
mov
jle
mov
mov
mov
lahf
adc
nop
sub
idiv
add
ror
fild
es
imul
cmp
sbb
inc
gs
out
mov
sahf
popf
pop
cli
rol
sub
test
pop
inc
imul
inc
in
and
add
in
push
popw
rol
pop
jle
sub
mov
(bad)
push
jmp
wrmsr
adc
mov
xor
das
scas
push
das
je
shl
dec
je
fidivr
xchg
cmp
mov
es
imul
mov
vcmppd
(bad)
or
jne
or
add
repz
push
popf
stos
(bad)
lds
(bad)
or
into
jp
or
or
ret
clc
stos
and
je
fild
sbb
adc
out
mov
jne
adc
pop
rep
sub
sub
adc
addr16
dec
stos
add
(bad)
loope
xor
xchg
push
pop
mov
int3
in
xor
mov
add
push
jge
mov
daa
mov
movs
jns
inc
arpl
cli
(bad)
out
jnp
(bad)
pop
add
sub
fistp
cmps
pop
pop
iret
push
clc
into
cmp
lods
inc
xor
ficomp
sub
(bad)
jecxz
test
or
(bad)
jecxz
sub
push
loopne
std
int3
mov
or
ins
jl
cmps
adc
in
ror
(bad)
js
xchg
dec
mov
push
nop
add
cmps
mov
or
imul
and
pop
xchg
std
cdq
jle
or
lds
sbb
mov
mov
in
cmc
pushf
or
sub
xor
dec
push
mov
xlat
int
shl
xchg
leave
out
sub
(bad)
mov
lods
mov
inc
int
xchg
jo
test
inc
push
div
jg
jp
push
xor
scas
adc
xchg
pop
sti
jno
add
mov
shr
pop
lds
jne
sub
xchg
mov
in
fs
xchg
mov
push
and
mov
movs
cmp
ins
push
inc
sub
push
xor
jne
fwait
push
xchg
mov
mov
lds
in
out
jns
sub
(bad)
in
not
sbb
adc
pop
pop
(bad)
mov
call
sub
test
cmp
mov
repz
jae
sub
sti
rol
mov
add
push
push
push
in
sbb
xor
scas
mov
ret
pop
and
fcomp
cld
adc
out
pop
lods
ins
xor
xchg
mov
jecxz
js
daa
nop
outs
mov
xchg
cmp
xchg
jmp
pop
(bad)
sahf
dec
(bad)
xlat
jmp
mov
(bad)
push
sub
cmp
inc
scas
pop
retw
je
outs
repz
(bad)
cmps
in
cmp
mov
outs
fist
mov
xchg
add
fdiv
test
dec
pop
sar
rcr
je
pop
or
inc
loop
loope
cld
imul
cld
pop
stos
jae
call
std
cmps
fs
mov
hlt
div
sbb
jg
and
push
mov
mov
jmp
aas
mov
inc
rol
loopne
pop
adc
or
jmp
rcr
dec
fs
and
test
lds
sub
push
dec
aam
push
and
nop
std
mov
cmp
cmp
jg
ret
and
test
out
dec
and
repnz
sbb
leave
repnz
loopne
inc
imul
(bad)
ret
dec
inc
(bad)
aad
pop
adc
sub
rcr
call
sub
mov
dec
rol
int
mov
aas
aam
clc
shl
data16
jne
fiadd
(bad)
cmp
inc
ja
add
clc
sbb
nop
pop
lods
xchg
fwait
push
(bad)
in
daa
stc
mov
std
mov
adc
clc
loopne
fadd
mov
pop
xor
jne
push
ss
sbb
and
inc
rcr
cmps
add
in
sbb
add
mov
std
dec
mov
(bad)
test
pop
std
or
(bad)
xor
repnz
repz
(bad)
scas
push
jg
pop
add
je
and
arpl
mov
je
shr
sub
sub
inc
lahf
int3
nop
cmp
cmp
xchg
stos
movs
aaa
popf
push
cmc
jmp
sti
aas
push
iret
add
sbb
sbb
mov
int3
mov
mov
add
mov
aam
lock
jb
lods
popa
jge
mov
pop
adc
fld
or
daa
aad
sbb
sub
call
fisttp
aad
pop
sbb
int3
sub
mov
or
or
dec
mov
ins
pushf
shl
push
in
or
fnstcw
cmc
mov
mov
and
shl
adc
pop
scas
fdiv
adc
mov
(bad)
jb
repz
and
jmp
push
lods
icebp
adc
dec
inc
shr
pop
test
into
ret
jge
inc
jecxz
dec
xchg
xor
pop
inc
into
cmp
push
fld
cs
shr
daa
xchg
(bad)
mov
mov
movs
shr
jns
mov
je
mov
test
ret
pop
daa
push
div
enter
jnp
adc
adc
push
lock
pusha
repz
clc
bound
mov
jne
stc
and
and
rol
(bad)
jbe
sbb
sahf
pushf
jo
scas
sti
outs
std
ret
mov
and
add
aaa
fimul
sub
(bad)
cmp
xor
mov
adc
lods
xlat
dec
imul
fisub
jp
arpl
dec
or
movs
lds
sbb
mov
sub
hlt
adc
xchg
and
repnz
out
cmp
bound
in
pop
adc
mov
aad
mov
mov
(bad)
neg
xchg
mov
sub
jnp
lods
int3
movs
sub
dec
outs
mov
nop
sbb
xchg
xchg
fst
mov
jg
mov
inc
adc
push
jmp
push
push
push
dec
test
mov
loop
movs
xor
jo
dec
pop
das
es
js
pop
cmp
sub
ret
idiv
and
retf
inc
jbe
mov
test
jb
repz
and
fild
jl
fldpi
stc
mov
jmp
imul
lock
sbb
rcl
(bad)
mov
jle
push
inc
ins
push
(bad)
scas
sub
push
push
xor
sub
mov
pop
in
loope
mov
inc
shl
or
mov
fcmove
dec
fiadd
xchg
sub
push
adc
mov
int3
mov
sahf
bound
adc
jbe
mov
lods
or
(bad)
xor
inc
push
xor
inc
and
inc
mov
(bad)
dec
xor
xchg
mov
xor
inc
(bad)
cs
(bad)
or
mov
pop
rol
or
push
or
push
mov
fmul
push
mov
fst
and
push
mov
jmp
push
jge
push
ds
adc
jo
jmp
sub
imul
jle
aam
sub
ror
dec
jle
jb
mov
dec
outs
push
repnz
adc
pushf
arpl
fwait
inc
out
fistp
mov
jbe
push
(bad)
rcr
scas
fcos
imul
xchg
xchg
pop
int3
push
jmp
outs
pop
or
lea
adc
arpl
cmc
cmp
push
(bad)
cwde
mov
sbb
jecxz
sbb
dec
jmp
push
les
add
mov
call
sbb
pop
xrelease
and
hlt
call
arpl
mov
shl
or
sbb
cld
or
xchg
(bad)
xor
push
fmul
or
cwde
jns
pop
xchg
pop
loopne
push
cs
pop
push
mov
cmp
push
push
cli
sub
cdq
xor
popa
pop
loopne
es
imul
sbb
mov
sahf
and
nop
aaa
enter
cmp
sbb
push
xchg
shr
loope
push
imul
inc
pop
mov
sbb
adc
rcr
adc
movs
mov
mov
cmp
mov
shr
adc
mov
jmp
mov
push
inc
xchg
int
push
adc
ss
jmp
jg
pop
mov
push
mov
hlt
mov
rcl
jmp
lds
popf
fdivr
inc
and
cli
and
outs
xchg
pop
pop
pop
adc
movs
(bad)
movs
jge
stc
sbb
inc
cmp
lods
outs
icebp
xchg
outs
(bad)
and
or
dec
(bad)
call
xchg
movs
pop
retf
inc
or
cmp
sub
lds
jns
mov
xor
adc
push
arpl
inc
ds
por
lods
retf
push
add
cmc
daa
fwait
xchg
pushf
test
imul
inc
pop
int3
imul
dec
sbb
fdiv
push
scas
sti
outs
or
mov
adc
repnz
mov
out
clc
daa
or
jle
sub
in
push
(bad)
loopne
sbb
add
xor
stos
popf
shl
jmp
mov
pop
sbb
cmps
(bad)
dec
jne
pop
jo
fiadd
adc
pop
stc
inc
dec
and
aas
mov
retf
cmp
and
(bad)
out
sub
movs
push
mov
cdq
cdq
(bad)
repz
inc
data16
shr
inc
and
pop
inc
adc
stc
push
cld
enter
fs
rcr
jp
data16
mov
mov
or
jmp
sbb
dec
loop
mov
sti
xchg
retf
sbb
add
pop
fimul
dec
out
inc
adc
add
cmp
push
inc
mov
push
push
add
popf
in
mov
data16
mov
cmc
pusha
jb
adc
and
lahf
fdiv
sbb
dec
cli
lea
add
sbb
shr
sahf
loop
xor
mov
shl
adc
sub
xor
stos
dec
mov
pushf
dec
daa
xlat
mov
enter
lea
cmp
hlt
loopne
sbb
and
pop
inc
cmps
adc
cdq
outs
movs
out
aad
aaa
out
mov
les
fisttp
ins
fnsave
daa
lods
in
sti
loope
les
call
dec
mov
push
shr
or
gs
jmp
jle
clc
fisubr
add
call
stc
fadd
sub
xchg
adc
xchg
fist
inc
ss
jb
sub
mov
xchg
push
div
inc
push
mov
movs
lea
dec
push
test
movs
inc
mov
sbb
call
and
aad
sbb
xchg
sahf
mov
loop
jb
fisttp
cli
mov
sbb
or
sub
loop
shl
mov
sbb
mov
add
or
push
mov
rcr
(bad)
and
cmp
lahf
(bad)
out
and
and
daa
jl
stos
or
aaa
nop
inc
and
jne
or
mov
test
lods
clc
cli
cmp
push
mov
mov
loope
(bad)
cmps
out
sbb
adc
sub
divps
sbb
mov
or
(bad)
icebp
scas
icebp
mov
fld
lahf
add
xor
add
stc
sbb
ja
add
mov
stos
inc
in
fdivp
cmp
das
mov
adc
sahf
and
icebp
stc
pop
gs
shl
into
enter
cli
cmp
sar
(bad)
jecxz
inc
sub
nop
pop
xchg
jmp
mov
mov
fnstcw
(bad)
mov
sub
dec
adc
arpl
sub
leave
shl
call
test
repnz
push
idiv
pop
enter
neg
xor
movs
movs
hlt
push
fwait
into
sbb
mov
jns
adc
nop
pop
pop
fild
mov
sahf
push
out
adc
imul
fistp
mov
test
push
adc
or
or
jno
aam
fcmovne
ss
sub
mov
test
xor
ret
pop
cwde
and
inc
not
mov
movs
sub
rcr
popa
outs
pop
or
cmp
movs
(bad)
jmp
movs
push
sub
mov
mov
neg
adc
out
dec
mov
jne
and
push
mov
jne
push
je
inc
xchg
arpl
rcl
(bad)
aam
jmp
or
inc
add
movs
popf
add
repz
mov
xchg
mov
xchg
xchg
jp
sub
lods
add
jmp
mov
inc
pop
add
xchg
fsub
xor
push
xlat
mov
popa
push
cli
cmp
ret
xchg
push
pop
jns
pop
adc
outs
push
push
pop
dec
pushf
retf
in
in
hlt
gs
sbb
and
mov
push
pop
rol
dec
fsubr
sub
inc
cmp
push
push
jnp
push
dec
or
outs
push
xchg
adc
fs
inc
je
xor
xchg
adc
test
fdiv
out
mov
inc
popf
outs
mov
int3
mov
xchg
pop
test
rcl
pop
neg
out
loop
or
mov
nop
arpl
stos
add
in
mov
test
addr16
(bad)
mov
cmp
cmp
test
jle
push
sub
movs
mov
daa
adc
arpl
pop
stc
addr16
jle
jge
or
sahf
adc
fisub
push
(bad)
cli
add
push
enter
jle
ja
mov
xor
mov
mov
add
sar
add
cmps
int3
jge
pop
loop
clc
xchg
mov
inc
(bad)
fidivr
cmp
cmp
push
adc
mov
push
pushf
outs
inc
sbb
cmp
pop
jno
dec
or
aas
or
push
cmp
or
(bad)
dec
mov
ret
dec
aam
inc
call
sbb
xchg
stos
cmc
shr
push
sahf
int
leave
jbe
dec
outs
gs
mov
test
stos
add
iret
ins
push
cmps
jg
(bad)
mov
pop
dec
fld
xor
(bad)
push
int3
jae
call
adc
pop
fisubr
repnz
dec
xchg
push
imul
dec
mov
dec
jno
lods
mov
ror
cmp
sbb
jmp
outs
adc
(bad)
mov
push
sub
lea
jae
fisttp
test
sub
push
and
scas
addr16
dec
and
in
adc
jecxz
pop
mov
jo
in
(bad)
pop
rcr
pop
lds
inc
adc
add
mov
cmp
dec
into
mov
cdq
add
adc
adc
test
lods
push
pop
push
mov
sar
pop
pusha
into
pop
add
dec
adc
jmp
jge
jp
xchg
pop
fwait
arpl
repz
scas
aaa
pop
push
stos
fcmove
mov
pop
inc
mov
mov
repz
xchg
pop
inc
scas
cmp
or
mov
sbb
test
sbb
add
jge
loop
leave
lods
outs
(bad)
pop
sub
int
sub
loop
fisttp
add
(bad)
fs
mov
out
push
dec
jle
fisubr
jno
std
fwait
xor
jmp
xor
xchg
push
lea
(bad)
aaa
or
push
(bad)
cld
sub
push
test
xor
jg
jns
dec
mov
add
int3
out
mov
outs
push
ret
addr16
js
fcomp
push
push
les
shl
icebp
mov
cld
(bad)
mov
jge
xchg
sub
and
out
repnz
add
mov
and
cmp
rcl
xlat
repnz
rcl
fist
loop
inc
pop
int3
inc
xor
jb
mov
enter
sub
inc
popa
fcom
xor
or
lock
enter
ret
xor
jl
sahf
jmp
leave
mov
sti
cld
lds
mov
inc
xchg
aam
call
es
movs
dec
cmp
fucomip
outs
push
xchg
fsincos
aas
jle
push
sar
out
(bad)
rcr
clc
xchg
je
fcom
test
jle
popf
add
mov
add
mov
out
dec
mov
(bad)
jns
in
rcl
xor
jb
adc
jmp
adc
outs
mov
sub
push
xchg
xchg
dec
and
adc
popf
fild
test
mov
push
add
sbb
fcomp
dec
and
dec
dec
add
mov
or
sub
lds
and
sbb
sub
sub
push
push
and
push
mov
cld
and
sub
dec
scas
nop
imul
xor
pop
or
test
sub
repnz
sbb
leave
inc
add
cmp
mov
jb
sbb
xchg
js
shl
retf
push
cwde
mov
push
xor
fcomp
popf
dec
push
adc
sahf
mov
add
es
fs
rcl
mov
sub
mov
es
cmp
mov
xchg
lock
mov
(bad)
cld
and
rol
jge
rdtsc
sar
in
daa
stos
xchg
cmps
pop
cmp
push
inc
loop
fnstsw
mov
or
pushf
jge
mov
movs
push
fadd
or
add
bound
sub
fwait
mov
inc
cli
sar
dec
enter
jns
daa
sbb
cmps
xchg
push
mov
sub
mov
xchg
ret
sub
pop
adc
sub
out
jp
add
in
mov
jmp
repnz
(bad)
fstp
clc
test
mov
xchg
jge
ja
or
fsub
and
push
cs
dec
movs
cdq
dec
mov
ins
fstp
mov
lds
add
inc
push
add
psubb
jmp
(bad)
jecxz
inc
xchg
cmps
lahf
aad
xor
repz
adc
ins
push
mov
jb
out
stc
imul
push
nop
ins
repnz
cmps
imul
inc
and
jge
and
pop
loopne
sbb
fistp
and
pop
sub
sub
mov
push
xchg
inc
test
cmp
sbb
xor
xchg
mov
jae
xor
pop
dec
cmp
pusha
int
push
mov
or
mov
xchg
xchg
loope
in
push
xor
aaa
test
sbb
mov
jg
imul
aaa
lods
cwde
fisubr
cmps
pusha
sbb
inc
add
jmp
stc
daa
(bad)
dec
mov
cs
int
aas
ja
mov
rcl
sub
test
out
test
mov
inc
setnp
inc
jmp
fistp
adc
faddp
push
lds
sub
out
(bad)
cld
xchg
mov
mov
retf
jno
aas
outs
mov
not
stos
stos
cmp
xchg
inc
outs
(bad)
fimul
daa
inc
sub
xchg
pop
jecxz
js
sub
lock
in
les
repnz
jecxz
add
and
ds
jmp
pop
pop
and
pop
push
loop
mov
es
movs
rcr
fwait
sbb
add
lods
sbb
data16
daa
sahf
lock
push
mov
jo
sbb
push
sub
arpl
add
jle
xor
inc
xchg
ds
xor
xchg
dec
movs
dec
adc
add
mov
shl
ins
push
call
aad
js
or
clc
fs
imul
test
cmc
jns
scas
loope
adc
mov
cld
sti
jecxz
cmc
std
mov
and
push
mov
movs
push
loopne
push
sbb
and
cmp
leave
out
or
push
(bad)
push
xor
jmp
xchg
(bad)
adc
sub
jae
stos
cmp
mov
push
ret
jecxz
aad
or
pop
push
jecxz
ficomp
xchg
sbb
loopne
imul
mov
fsubr
xchg
enter
dec
jl
inc
mov
cmp
mov
ins
pop
cli
sbb
cmp
mov
adc
push
xchg
fwait
jg
jbe
mov
or
push
popf
(bad)
lds
sbb
fbld
(bad)
jb
movs
stos
adc
xor
mov
test
cmps
dec
sbb
mov
je
xchg
adc
and
jae
xor
mov
in
ficomp
cli
jecxz
pop
sbb
adc
cld
add
leave
inc
mov
push
xor
pop
cmp
sbb
int
ss
mov
sub
fnsave
adc
fwait
pop
pop
sub
cmp
pop
add
and
imul
rol
daa
push
mov
aad
xchg
fsubr
adc
mov
mov
xchg
and
retf
inc
push
outs
and
xor
cmp
gs
mov
cmp
aaa
and
adc
cmp
xor
fnstenv
sub
xlat
jmp
or
jp
mov
popa
cmp
cmps
sbb
iret
xchg
xor
cmp
mov
aam
xor
jno
test
pop
jmp
mov
push
mov
sbb
xchg
jmp
push
sub
jle
xor
scas
int
dec
sti
das
sub
aaa
push
fchs
pushf
jp
jb
loope
lea
imul
jge
jge
ins
fsub
movs
loop
mov
scas
push
xor
cmp
std
jnp
cmp
mov
call
cld
lods
cmp
inc
nop
mov
mov
movs
inc
test
jl
test
cmps
movlps
popa
mov
add
int3
and
xchg
jp
stc
mov
pushf
lds
jae
mov
xchg
inc
cli
push
div
push
xor
jmp
push
push
sbb
or
dec
mov
loope
jb
xchg
sub
jnp
cmp
jmp
leave
sub
and
fist
aas
mov
push
ja
(bad)
cmc
add
inc
icebp
sar
dec
push
sbb
loopne
popf
cmps
repnz
xchg
push
das
arpl
aad
mov
das
leave
pop
outs
int
xor
cmp
mov
stos
leave
mov
mov
sbb
dec
ss
sbb
std
jg
adc
adc
sbb
(bad)
(bad)
fdivr
out
mov
pusha
popf
mov
xor
aas
push
mov
mov
and
mov
(bad)
cld
inc
adc
inc
mov
fistp
mov
aad
test
jge
dec
pop
cmps
inc
mov
(bad)
push
push
or
jle
fs
push
and
jae
ret
dec
and
sub
jo
and
pop
mov
leave
sti
or
sub
mov
movs
hlt
push
jle
push
pop
dec
xchg
cmps
or
xor
repnz
aad
icebp
lahf
(bad)
addr16
cmps
jmp
mov
adc
mov
jge
sbb
test
jnp
inc
mov
push
push
aas
mov
pop
add
pop
popf
mov
push
jo
sar
xchg
inc
cmc
cmp
daa
push
jbe
inc
sub
retf
repnz
(bad)
push
popf
xor
sti
adc
jle
daa
jg
sub
outs
push
ret
in
std
(bad)
pop
cmp
cmp
sub
dec
aas
jns
retf
mov
add
cmps
mov
cwde
and
mov
pop
sub
add
mov
les
pop
ftst
or
out
imul
inc
leave
pushf
lea
add
jge
rcr
xorps
sti
cwde
dec
mov
repnz
lea
pop
push
push
shr
repz
lahf
inc
pop
cli
loopne
fbld
push
mov
pop
cmp
pop
cmp
sbb
mov
mov
ins
cs
rcr
adc
dec
in
stos
push
jmp
(bad)
dec
cmps
mov
sbb
jecxz
fdivrp
dec
imul
mov
dec
shl
jle
adc
xchg
dec
repz
(bad)
js
push
sbb
mov
fcom
lods
push
jb
mov
add
mov
rcl
ins
movs
dec
inc
dec
out
loop
adc
mov
mov
imul
sahf
jne
pop
mov
push
xchg
add
dec
pop
loopne
sbb
les
mov
sub
jmp
clc
xchg
push
(bad)
mov
dec
cmp
xor
loop
xchg
or
cmp
add
dec
shl
mov
inc
out
test
sbb
or
int3
cdq
xor
pop
retf
cld
into
jnp
xchg
js
test
out
jne
in
stos
js
lea
aas
lds
aas
sbb
fcom
rcr
rol
(bad)
push
fwait
xchg
retf
push
xchg
xsha1
cmps
dec
or
test
pusha
adc
mov
sbb
pop
xor
out
(bad)
fisubr
dec
push
xor
xchg
pop
jp
nop
jbe
sbb
inc
scas
movs
call
fistp
push
sub
call
sbb
mov
ficomp
xchg
cmp
(bad)
sar
pop
das
sub
test
sub
lea
push
mov
popa
or
cli
xchg
mov
cmp
mov
lods
(bad)
jp
jge
add
cmp
inc
cmc
fneni(8087
mov
xor
pop
adc
mov
ror
ins
aas
adc
jmp
mov
push
mov
mov
xchg
mov
inc
mov
or
int3
ret
push
nop
ret
cmp
sbb
xchg
rcl
out
mov
inc
push
sbb
std
(bad)
sub
sahf
jnp
outs
std
mov
scas
(bad)
jae
adc
cld
out
or
scas
fbstp
ror
aaa
xchg
or
or
in
push
hlt
cs
loope
cdq
pusha
inc
or
jecxz
fnsave
(bad)
sbb
jns
ja
ins
add
dec
lock
call
jbe
adc
(bad)
cmp
pop
or
fs
sub
les
ds
sbb
(bad)
ret
pop
ins
lds
faddp
inc
stc
test
ins
inc
(bad)
mov
loopne
dec
inc
inc
and
je
int
cdq
jg
mov
lods
push
push
movs
scas
adc
add
arpl
ins
or
add
mov
jo
add
sub
push
cdq
sub
sahf
mov
mov
cld
leave
in
cdq
(bad)
cli
(bad)
sbb
or
scas
mov
adc
push
ja
adc
cmp
outs
jns
stos
popa
mov
ins
jp
xor
pop
sbb
dec
xor
(bad)
loop
add
test
in
mov
dec
pop
fistp
div
addr16
sub
inc
xlat
jo
dec
push
rcl
dec
aad
test
dec
aad
iret
imul
xchg
scas
pop
cld
sbb
inc
repz
mov
xchg
aas
jo
daa
sbb
sbb
and
sti
xor
jbe
cdq
ret
add
sub
loop
lock
in
movs
in
test
outs
jae
push
pop
iret
jp
ss
into
div
pusha
sbb
cmc
or
inc
dec
sub
jno
movs
jae
out
aam
add
das
mov
push
mov
adc
mov
outs
fist
cs
sub
xchg
nop
js
mov
(bad)
dec
inc
js
and
jbe
cmps
int3
in
jmp
(bad)
adc
sbb
sti
cmp
stc
and
mov
(bad)
and
int
shl
xchg
adc
cdq
push
pushf
jg
mov
mov
loopne
jns
(bad)
push
fld
leave
shl
imul
out
pop
push
xor
pop
cmp
adc
fild
popa
sbb
mov
add
add
repnz
iret
mov
lea
sub
jb
ss
test
popf
pop
push
outs
inc
jle
or
js
add
(bad)
neg
push
mov
sbb
xor
aaa
and
sar
jne
adc
jge
imul
push
cmps
and
sbb
movs
(bad)
enter
fadd
ins
jl
dec
fidivr
mov
xchg
aaa
and
sub
sbb
mov
out
pushf
xlat
shr
ins
add
push
por
call
pop
dec
add
stc
in
sahf
or
cmc
fst
pop
inc
mov
ret
sbb
out
pop
push
push
or
enter
rol
jmp
pop
stos
call
(bad)
(bad)
pop
dec
push
sbb
inc
(bad)
scas
xchg
aaa
outs
(bad)
in
rcl
mov
adc
xchg
xchg
jge
imul
out
iret
add
sub
ds
mov
sub
and
fstp
mov
sub
xchg
fild
int
inc
cmp
inc
mov
movs
les
inc
sar
xor
test
or
out
push
xor
in
out
sub
jnp
inc
outs
stc
bound
pop
rol
jnp
addr16
inc
shr
jmp
cwde
push
mov
sbb
mov
cdq
pop
sbb
daa
push
cmp
inc
nop
jnp
dec
inc
(bad)
mov
sub
push
gs
data16
js
ins
test
mov
xlat
sub
xchg
jns
sbb
lea
sub
cmc
dec
fisttp
in
mov
mov
into
adc
jle
xchg
rcl
jno
mov
sub
pop
sbb
imul
inc
mov
rol
sbb
clc
adc
fucomi
add
and
xchg
inc
loopne
xchg
out
popa
scas
shl
loop
jl
sti
loope
mov
jns
hlt
(bad)
fwait
mov
popa
inc
iret
jae
mov
ins
xor
and
push
out
hlt
shr
or
into
les
into
scas
es
mov
push
dec
(bad)
xlat
dec
mov
fsub
mov
dec
rcr
clc
je
jnp
xor
push
retf
dec
nop
cmp
and
mov
push
jb
add
imul
ss
mul
mov
sbb
je
test
cmp
(bad)
fld
jp
cmp
xor
sbb
inc
mov
ret
lea
inc
rcr
sub
sub
dec
call
loop
lahf
sbb
mov
inc
jnp
inc
lahf
dec
push
sub
mov
cli
repz
ret
mov
imul
iret
inc
stc
fbld
aad
mov
cmps
dec
sbb
add
sbb
fidivr
ret
std
shr
dec
adc
fmulp
test
iret
repz
xchg
and
test
loop
mov
mov
pop
je
int3
xor
xchg
inc
popf
dec
out
aaa
popf
stc
daa
or
nop
in
cmp
and
imul
mov
pusha
pop
in
and
bound
call
stos
cmp
jne
adc
pop
inc
xchg
inc
aaa
jae
shl
lahf
mov
inc
fsubp
sbb
lock
ror
test
std
stos
scas
sbb
shr
jl
rcl
enter
arpl
mov
div
sbb
push
pop
mov
out
aas
imul
dec
into
cmp
(bad)
jb
fwait
aam
sbb
push
aam
cmp
leave
pop
sub
fisttp
jp
dec
mov
xchg
mov
jle
pop
fidivr
add
call
pop
enter
ret
(bad)
jb
pop
mov
sub
push
(bad)
aas
gs
hlt
fiadd
cmp
pop
cmp
xchg
sti
cli
inc
int
mov
mov
repnz
and
sub
add
cmc
add
mov
or
rol
and
cmps
cmp
mov
xor
int3
into
cmc
(bad)
loope
daa
add
xor
mov
sub
scas
sub
push
outs
test
test
xlat
push
xchg
jno
jmp
aam
pop
and
inc
mov
int3
les
or
retf
mov
xchg
or
inc
push
xchg
mov
mov
jle
test
inc
xchg
rcr
in
into
js
mov
dec
int3
inc
sub
and
imul
mov
sub
mov
scas
jae
fist
mov
bound
fwait
xchg
repnz
imul
jge
(bad)
(bad)
(bad)
mov
mov
es
add
imul
mul
push
test
loope
sti
xchg
jbe
add
jne
mov
pop
push
xchg
mov
sbb
push
(bad)
jecxz
in
inc
sbb
push
mov
sub
call
sub
push
sahf
fnstenv
cmp
test
xchg
push
scas
scas
je
scas
jns
adc
mov
shl
pop
ins
(bad)
movs
enter
or
pop
or
pop
mov
pop
out
sub
icebp
je
inc
scas
jecxz
popf
inc
xchg
jmp
mov
pop
out
add
add
mov
jle
sub
push
or
arpl
ins
and
dec
xchg
mov
inc
jecxz
ror
icebp
pop
adc
mov
inc
test
retf
xor
cli
inc
movs
shl
cmc
imul
xchg
push
cmc
je
push
lock
imul
jp
in
call
mov
xor
xor
or
and
push
pushf
(bad)
das
jo
movs
popf
(bad)
push
loopne
add
dec
in
dec
addr16
or
cmp
aad
push
inc
push
fiadd
sbb
push
jmp
dec
je
push
btc
inc
aas
push
dec
sbb
int3
xor
outs
daa
into
xchg
(bad)
jnp
dec
jns
pusha
or
(bad)
(bad)
xlat
stos
push
mov
jno
xor
mov
popa
cmp
inc
jecxz
repz
push
popf
sbb
test
add
push
sbb
mov
cmp
xchg
stc
sbb
add
lahf
aad
stos
dec
dec
pop
dec
ror
xor
push
sub
sbb
mov
lahf
retf
shr
ror
(bad)
add
or
dec
fisubr
mov
xchg
push
pop
cmps
aas
fbstp
pushf
jno
jmp
fisub
add
mov
sbb
jnp
jp
xor
clc
jne
shr
movs
or
dec
iret
arpl
xchg
push
push
add
push
inc
cmp
adc
xchg
(bad)
in
out
nop
sbb
es
(bad)
sbb
xor
inc
daa
xchg
xor
(bad)
cmps
stos
loope
repnz
not
fucomp
pop
jecxz
imul
xor
cdq
(bad)
xlat
jo
dec
xchg
add
movs
mov
ffreep
push
loop
push
das
sub
jp
jge
dec
rcl
mov
call
and
retf
loope
push
in
mov
int3
sbb
aaa
pop
out
dec
movs
(bad)
fild
fwait
sbb
aas
push
mov
cmps
jle
fwait
test
mov
outs
jle
std
ret
mov
data16
jp
pop
inc
push
xchg
sub
in
pop
pop
in
or
jae
cmps
shr
repnz
gs
je
das
cmp
cmp
es
out
add
test
movs
xlat
test
dec
pop
call
(bad)
nop
xor
mov
push
jnp
pop
mov
fnsave
push
ss
shl
jp
jne
clc
test
jnp
(bad)
xor
in
ret
pop
ror
xlat
pop
xchg
jo
sbb
sbb
adc
push
cmp
or
jg
fwait
inc
mov
loope
shr
inc
ja
paddsw
mov
push
add
test
sub
(bad)
xor
mov
fadd
test
sub
rcl
mov
repz
xchg
mov
cdq
stos
add
mov
mov
movs
inc
pop
scas
xor
repz
mov
jmp
push
fisub
scas
xchg
les
lock
adc
cmp
xchg
in
cmps
mov
ds
retf
mov
adc
xchg
sub
xor
add
cmp
jae
lods
mov
jns
bound
adc
sub
jo
jecxz
jo
xlat
sbb
js
hlt
mov
or
stos
jbe
std
inc
pop
rcl
in
ror
mov
xchg
movs
enter
push
push
pop
ss
and
jge
aad
dec
ins
outs
pop
pop
movs
pushf
sbb
out
fdiv
dec
dec
inc
stc
rcr
dec
stos
xchg
aad
sbb
test
(bad)
paddw
sbb
or
dec
or
in
cli
outs
cmp
out
outs
pop
cmc
cli
xor
adc
in
or
or
lods
mov
push
aas
in
cmp
inc
popf
into
in
sub
cmp
ins
jnp
jp
sbb
add
popa
pop
sbb
push
repz
cli
pushf
es
in
add
xchg
out
mov
sbb
mov
mov
xor
cwde
das
pop
mov
sbb
add
mov
mov
add
sti
mov
sub
fs
daa
mov
retf
push
jno
mov
call
hlt
rcl
ficomp
mov
xlat
pushf
sub
xor
fld
dec
out
push
add
shl
or
loope
push
jmp
xchg
mov
lods
xchg
inc
in
aaa
je
mov
inc
(bad)
ds
retf
cmc
push
jmp
pop
or
leave
push
jmp
cmc
fiadd
movs
mov
mov
test
cdq
(bad)
lahf
(bad)
pop
mov
push
sbb
jbe
js
pop
movs
retf
and
ret
test
(bad)
or
in
adc
(bad)
jecxz
mov
sub
and
js
sbb
jmp
or
push
push
xchg
mov
sub
call
jmp
or
sub
ret
sbb
out
fsubr
mov
fldenv
es
push
jecxz
test
fst
push
add
xchg
xchg
inc
test
mov
into
sbb
scas
mov
mov
mov
imul
ja
div
adc
adc
cmps
ds
pop
iret
sub
pop
sti
xor
call
and
mov
shl
out
and
adc
sub
push
mov
sar
lock
idiv
out
push
sub
mov
rcr
(bad)
aam
xchg
int
inc
inc
mov
inc
pop
pop
add
scas
sbb
fadd
xor
xchg
jmp
cmps
shl
or
pop
dec
push
mul
(bad)
inc
xor
add
int
cmp
mov
mov
add
cmp
es
xor
xchg
push
in
jle
ret
inc
mov
call
adc
imul
and
ins
es
mov
mov
out
call
es
les
jmp
inc
retf
cmps
inc
push
xor
mov
push
ror
push
dec
adc
push
push
test
jo
add
lea
cwde
adc
or
lods
cmps
mov
nop
test
in
repnz
lahf
sbb
retf
sub
jbe
gs
push
stos
in
push
cmp
cmp
ds
into
mov
sub
dec
icebp
fcomp
mov
mov
icebp
mov
push
jl
mov
push
imul
cdq
in
ret
xor
retf
dec
jmp
imul
adc
dec
fcmovnu
gs
fist
imul
out
pop
add
test
add
aaa
nop
sbb
xchg
push
mov
or
in
jns
dec
clc
sub
(bad)
pop
push
and
(bad)
(bad)
ja
mov
js
sbb
inc
(bad)
icebp
enter
ret
in
cmps
or
and
inc
jecxz
cmp
jecxz
jmp
push
outs
imul
aad
xlat
inc
or
pusha
and
or
dec
out
(bad)
popa
push
shl
clc
std
sahf
rol
loope
xor
in
fild
icebp
pop
cwde
push
push
mov
lea
dec
imul
ins
push
xchg
clc
push
cli
mov
stc
pop
jge
mov
push
aas
fs
int
shl
jecxz
pop
xchg
int3
pop
mov
mov
ins
cmp
cmc
ror
mov
mov
gs
popa
mov
jmp
fmul
imul
(bad)
cmp
outs
inc
inc
pop
pop
or
lods
jbe
pop
test
leave
xchg
mov
mov
ss
adc
in
aas
or
jae
dec
adc
in
push
xor
jp
fiadd
(bad)
in
out
push
adc
dec
cmovno
cmp
push
repz
mov
xor
jl
jmp
idiv
ins
add
xchg
dec
fcomp
jge
ret
in
inc
cs
mov
mov
dec
int3
popa
fwait
pop
ins
mov
cmps
stos
sbb
pop
je
dec
mov
imul
clc
dec
sbb
call
in
sub
(bad)
sbb
mov
into
cmp
add
mov
dec
jb
lahf
call
pop
pop
pop
mov
ins
cmp
out
add
cs
xor
pop
pop
fwait
pop
or
xor
pop
mov
jno
ret
test
cmp
pop
mov
cmp
repnz
icebp
adc
jge
sub
pop
push
add
pop
dec
inc
out
adc
std
pop
mov
mov
sub
aas
fimul
repnz
mov
fwait
mov
mov
jge
sub
mov
and
sub
xlat
adc
jg
sbb
fisubr
mov
jmp
or
inc
setae
push
xchg
dec
cld
nop
adc
xor
call
loopne
jae
jmp
cmp
pusha
stc
out
aaa
ja
rcr
mov
fisub
adc
cmp
sahf
adc
popf
mov
sbb
push
test
adc
ds
dec
or
movs
mov
cmps
movs
cmp
mov
mov
je
(bad)
ds
idiv
xor
ret
xchg
adc
das
das
xlat
out
cli
push
jae
mov
jns
std
aaa
and
xor
jmp
xchg
cli
dec
dec
out
xchg
(bad)
(bad)
xor
xor
leave
ds
popf
sahf
inc
jp
movs
xchg
iret
push
pusha
scas
push
outs
(bad)
xchg
fsub
fldcw
(bad)
push
fst
stos
cmp
and
push
cmc
add
adc
mov
inc
push
arpl
xor
int
aaa
pop
sahf
and
inc
arpl
sub
mov
cmp
inc
das
movs
mov
xor
pushf
adc
data16
sbb
ret
mov
not
and
not
daa
imul
adc
xor
cmp
mov
jb
lock
xchg
into
cmps
inc
fstp
jbe
test
loop
jbe
cmps
js
push
mul
test
jbe
inc
push
add
clc
shl
mov
das
iret
jle
dec
out
jno
shl
xor
fs
fwait
sbb
pop
push
inc
enter
mov
in
sbb
push
(bad)
pop
cs
lea
mov
sbb
test
mov
imul
out
fisub
shr
iret
and
hlt
jmp
out
mov
fmul
mov
out
retf
cmp
mov
mov
adc
inc
pop
jmp
daa
or
scas
das
fidiv
adc
stos
jnp
not
jge
pop
mov
fisttp
adc
imul
ins
inc
retf
lahf
scas
inc
outs
cld
and
imul
or
push
int3
sub
sbb
das
sub
jns
push
add
push
iret
adc
sub
jg
adc
js
sub
js
scas
je
sub
in
sub
cmps
pop
or
mov
xor
cmp
cld
call
push
sub
aad
jno
fild
scas
lods
idiv
mov
xor
xchg
out
ficomp
or
dec
inc
cli
mov
retf
cmp
stc
pop
aad
into
or
in
sar
sbb
enter
dec
addr16
mov
fisubr
mov
adc
mov
jl
mov
aas
or
pusha
shl
clc
repz
aad
ret
dec
and
jg
cmc
jg
mov
loope
xor
pop
adc
jecxz
ret
mov
mov
icebp
pop
cwde
push
xchg
es
iret
inc
add
retf
sbb
xor
pushf
mov
mov
icebp
pop
xor
test
inc
lahf
leave
fcomi
push
int3
pop
push
loopne
in
stos
mov
jle
rcr
push
mov
or
jnp
mov
ror
mov
sub
vpxor
call
xchg
jg
push
paddb
xor
test
pop
ss
mov
(bad)
ins
fild
dec
ret
sub
xor
sub
mov
into
mov
cwde
xchg
jns
jo
sub
imul
cmp
gs
xor
cmps
xchg
inc
and
xor
retf
out
dec
or
push
dec
cmp
pushf
xchg
sbb
cmps
retf
dec
(bad)
inc
push
pop
hlt
push
xchg
repnz
ds
sar
clc
or
retf
jno
call
scas
hlt
data16
xchg
call
in
outs
inc
lahf
stos
shl
pop
jno
lds
sbb
popa
and
ds
out
push
xchg
clc
pusha
cmp
mov
mov
pop
mov
mov
movs
int
sbb
cmp
sub
adc
das
mov
repz
jmp
(bad)
pop
ins
xchg
test
int3
scas
int3
out
test
inc
in
adc
pop
cmp
adc
mov
not
std
dec
sub
jns
mov
add
(bad)
dec
(bad)
mov
aad
inc
call
cmps
(bad)
fwait
xchg
mov
push
(bad)
and
data16
cmp
popf
leave
pop
loope
mov
sub
or
cmps
cs
ds
adc
xchg
adc
cmp
retf
movs
gs
(bad)
sbb
(bad)
mov
adc
cmp
inc
mov
mov
mov
jp
aas
test
scas
adc
cmp
clc
lods
gs
das
fwait
xor
inc
aad
mov
cli
popa
or
cmp
stc
cmps
sub
jg
fld
push
adc
dec
cmp
out
xchg
lahf
jnp
sbb
out
xor
xchg
add
stos
enter
mov
mov
mov
or
(bad)
mov
lods
jecxz
jns
xor
add
lds
cwde
stc
cmp
mov
loop
push
cmp
add
inc
iret
cmps
dec
mov
into
jae
ins
lahf
push
shr
ja
mov
arpl
hlt
sbb
pop
nop
jns
stos
push
and
sub
shl
sbb
clc
push
and
mov
cwde
scas
pop
repz
repz
aam
popf
push
push
into
dec
push
ret
xchg
push
(bad)
stos
jbe
ja
and
repnz
int3
mov
sbb
mov
mov
mov
push
xor
nop
rcr
inc
test
stos
cmp
inc
out
add
lahf
scas
leave
mov
jbe
jmp
lock
dec
pop
cmp
pop
sar
pop
pop
pop
in
fprem1
outs
sbb
mov
fstp
pop
mov
sbb
cmp
or
or
mov
mov
sbb
inc
mov
inc
iret
jb
mov
pushf
dec
(bad)
das
cmp
inc
adc
dec
mov
int
jns
and
mov
popf
add
adc
cmp
mov
sbb
cmp
xchg
mov
dec
xchg
push
push
shl
enter
mov
sub
js
xchg
leave
sub
test
jno
pop
seto
pushf
adc
push
adc
dec
mov
push
mov
cmp
retf
bound
inc
and
mov
mov
ins
mov
mov
retf
sub
jmp
jle
out
dec
jb
xor
sahf
mov
sbb
hlt
shr
test
xchg
xor
xchg
add
clc
mov
fwait
jo
test
pushf
into
pop
shl
sub
mov
into
ror
jbe
jmp
add
loopne
ja
push
fst
pop
popf
mov
cld
mov
out
addr16
imul
xchg
sbb
xchg
jb
push
retf
pop
repz
mov
push
jmp
lahf
repnz
ins
inc
xchg
sbb
fwait
push
cli
scas
(bad)
outs
adc
jmp
mov
in
xchg
add
add
mov
sbb
lods
nop
sar
inc
int3
test
push
data16
dec
iret
popa
jne
mov
repz
(bad)
fldcw
mov
jae
inc
adc
int
xchg
les
dec
jmp
mov
out
mov
pop
mov
sti
inc
push
or
call
je
xchg
fldenv
mov
pop
adc
pop
imul
rep
jbe
dec
adc
ja
cmps
cmps
call
mov
push
mov
fcom
loop
jmp
jl
lods
xor
jno
lods
adc
iret
fsub
xchg
pop
cld
sahf
mov
mov
shl
fsubp
or
dec
not
mov
mov
add
xchg
mov
mov
jnp
pop
cmp
out
or
pop
test
mov
pusha
in
jg
mov
(bad)
dec
jne
retf
pop
xor
test
aaa
jb
mov
sub
xchg
xor
and
xor
aaa
ret
push
ins
pusha
jge
cli
mov
fstp
pop
shl
or
test
xchg
or
inc
pop
out
sub
push
or
cmp
and
xlat
popa
pop
push
mov
sbb
push
mov
ins
das
ds
cli
push
aam
cmp
pop
mov
(bad)
sub
aam
push
call
dec
and
add
sbb
adc
out
dec
ret
push
popf
pushf
fld
loope
stc
adc
mov
cld
fs
jo
enter
xlat
adc
loopne
data16
and
cmp
and
stc
lock
adc
push
sub
or
cmp
int3
(bad)
sbb
iret
std
cmp
dec
cdq
or
xchg
inc
arpl
fwait
xchg
dec
or
out
fiadd
es
enter
test
cmps
dec
mov
(bad)
or
mov
xchg
popa
pop
add
sar
(bad)
les
in
pop
leave
nop
and
pop
jmp
dec
push
rcr
loope
daa
dec
pop
bound
adc
xor
or
lods
aas
sub
shr
inc
jle
dec
cmp
icebp
ja
scas
test
jmp
ins
bound
std
adc
mov
jne
or
and
scas
mov
pop
ss
inc
xchg
cmps
jne
jge
adc
(bad)
pop
pusha
test
jmp
cli
xchg
and
add
mov
bound
fucomp
sub
in
cmps
push
sub
or
arpl
in
mov
mov
jbe
jl
pop
xchg
ins
xor
cmp
dec
xchg
in
jbe
cmps
rol
les
xchg
sbb
ds
push
and
not
mov
pop
ror
div
aaa
mov
adc
xlat
and
cmp
push
je
cwde
pop
(bad)
or
and
cmp
push
cmps
lock
call
aas
xchg
mov
push
sbb
daa
loopne
mov
and
cmp
cld
jmp
movs
inc
aam
jns
dec
loop
and
pop
icebp
xchg
xchg
in
mov
xchg
pop
daa
sbb
mov
rdmsr
mov
jecxz
push
sub
dec
cmp
jle
imul
int
(bad)
sbb
movs
jecxz
and
aad
add
cmps
sbb
xchg
and
movs
retf
leave
mov
jp
mov
lahf
xchg
pop
not
popf
shl
imul
adc
mov
loope
xor
pop
ror
in
mov
ds
xchg
push
sbb
push
std
loope
ds
pop
and
cmp
cmp
popa
and
imul
pop
push
and
and
inc
push
and
mov
bound
or
(bad)
iret
stos
je
sbb
xor
or
xchg
and
pop
adc
in
inc
popa
loop
into
mov
pop
mov
jno
jae
call
xchg
stos
(bad)
xlat
dec
retf
push
leave
jno
retf
inc
ficomp
adc
adc
aam
pusha
retf
cmp
sti
aad
jmp
mul
jmp
retf
test
loop
int
mov
push
js
(bad)
fstp
dec
mov
nop
push
outs
imul
jno
xchg
outs
pop
pop
je
or
add
sub
hlt
jo
call
test
mov
std
cdq
dec
bnd
ret
sbb
and
push
push
inc
lds
ds
or
jmp
int3
mov
sbb
int3
icebp
xchg
xchg
xor
jnp
lock
add
ret
xor
push
mov
mov
mov
xor
stc
cli
sub
loopne
xchg
jno
psraw
mov
sti
adc
popf
aas
xchg
mov
leave
or
in
sub
in
fadd
fsub
and
fmul
mov
add
sub
aas
imul
xchg
adc
pop
loop
shl
inc
test
and
aad
loop
mov
mov
ja
jns
push
call
and
and
dec
sub
movlps
add
in
iret
sbb
ds
jmp
or
dec
jp
mov
push
ins
(bad)
js
out
js
jecxz
mov
dec
scas
aas
mov
pop
stc
or
sub
int3
daa
sbb
mov
mov
mov
lea
imul
push
add
adc
add
ins
ffree
push
cmp
rcl
mov
fst
aaa
stos
push
or
cmp
mov
je
push
xchg
ret
pusha
dec
mov
(bad)
iret
cmp
adc
aad
sub
adc
test
sub
loop
scas
outs
mov
inc
pusha
gs
mov
jge
aad
pop
idiv
inc
cmc
jmp
sub
icebp
popa
rcl
sbb
(bad)
je
fisttp
cmp
mov
add
adc
add
and
movs
jge
jnp
jl
(bad)
repz
loop
test
mov
push
enter
cmp
push
ins
add
pusha
nop
dec
lods
mov
jecxz
jecxz
push
push
ret
mov
cld
out
aam
ret
pushf
add
in
xchg
or
int3
scas
xchg
add
cmp
jg
scas
inc
mov
(bad)
mov
jb
leave
in
mov
call
iret
dec
mov
jmp
stos
jmp
cdq
cs
mov
pop
scas
movs
pushf
lods
aad
and
or
(bad)
push
or
or
call
pop
std
or
xor
shl
dec
xor
dec
les
scas
fldcw
jl
fsub
sub
test
cmp
fidiv
dec
adc
popa
xor
mov
sub
pop
cmp
int3
das
popa
stos
sbb
lds
dec
jnp
nop
mov
jne
(bad)
jno
xor
pop
xor
xor
xor
(bad)
mov
cdq
imul
dec
dec
cmp
dec
pop
jp
aam
ds
mov
xor
leave
sbb
cwde
xor
popf
dec
movs
jo
ss
aam
sub
cmp
imul
dec
and
mov
push
fldcw
inc
in
(bad)
ret
stos
leave
sti
sub
out
cmp
mov
movs
jmp
aas
cmp
scas
jne
mov
je
sti
jmp
xor
push
dec
or
lock
push
inc
mov
add
sti
sbb
mov
stos
out
fiadd
or
mov
cmps
jae
jae
pop
xchg
sbb
ds
cwde
idiv
ins
mov
stos
cwde
inc
test
and
adc
je
int
in
fsubr
pop
push
aam
sbb
mov
add
into
jb
fcmovu
mov
xchg
jmp
push
xchg
retf
xchg
repnz
and
pop
sub
mov
jg
pop
ror
daa
dec
in
adc
cld
shl
add
retf
in
sti
and
sub
test
dec
enter
or
xchg
xchg
and
int
push
dec
not
iret
fst
xchg
test
cmps
movs
fcmovne
je
movs
jge
(bad)
xchg
les
inc
in
jmp
xor
mov
pushf
pusha
hlt
sahf
sbb
cwde
addr16
movs
or
aas
cmp
outs
jb
xchg
sub
mov
mov
imul
jl
in
imul
leave
hlt
sub
xor
mov
cmc
leave
xlat
in
out
loop
xchg
add
add
clc
call
push
daa
pop
jnp
fcomp
and
pop
jmp
sbb
rol
cmp
xor
inc
cmps
call
int3
imul
scas
sar
mov
jbe
pop
inc
ficom
adc
jl
and
xor
push
cs
fcomp
out
out
loop
syscall
mov
sub
mov
nop
xor
mov
ss
sahf
sub
jns
nop
and
jp
out
lea
rcl
bnd
inc
inc
stos
enter
enter
push
mov
aam
xchg
mov
icebp
mov
es
jmp
es
lahf
inc
pop
pop
(bad)
in
sub
mov
mov
imul
cmps
les
push
xor
inc
fnsave
push
leave
cmp
in
rol
inc
pop
xchg
xor
or
xchg
push
jle
xchg
pop
call
mov
push
mov
xchg
cdq
xchg
mov
call
xchg
push
adc
loop
sbb
xor
or
cdq
in
dec
push
(bad)
dec
cli
mov
aam
test
pop
clc
aad
jae
(bad)
sbb
mov
adc
out
popa
add
clc
or
and
test
shl
lea
inc
test
fadd
push
test
dec
dec
cmp
aas
bnd
mov
loope
sub
add
mov
xchg
test
dec
sar
fadd
xchg
sub
sahf
jo
test
or
div
push
dec
sbb
fistp
sbb
das
arpl
jl
xor
ror
cdq
xchg
dec
mov
jbe
jno
mov
add
popa
lods
ret
push
push
jl
jne
loope
shl
xchg
push
fidivr
sbb
es
jecxz
aam
mov
pop
out
bound
xor
sar
(bad)
push
adc
add
repz
push
jmp
sbb
nop
jnp
add
pop
dec
bound
in
push
scas
stc
test
sbb
push
fsub
je
mov
ds
mov
mov
shr
in
test
imul
scas
loope
retf
xlat
mov
mov
pop
mov
xor
ss
lock
mov
movs
enter
ficom
jmp
js
cld
les
sub
add
shr
outs
mov
jp
jl
dec
inc
imul
inc
arpl
inc
(bad)
jnp
(bad)
mov
je
adc
(bad)
das
push
repnz
and
ficom
aas
lods
cmp
mov
cld
cld
sbb
sbb
add
retf
call
cmps
pop
cmps
mov
addr16
lods
mov
push
pusha
loop
cmp
sub
rcl
push
sbb
cld
inc
imul
xor
and
int3
mov
mov
add
add
retf
and
pusha
sbb
icebp
lock
dec
out
scas
jb
cwde
dec
dec
jle
xchg
enter
adc
sbb
cmps
out
fsubr
arpl
jp
adc
ja
or
fldcw
test
pop
rcl
cmp
mov
(bad)
dec
nop
test
sbb
adc
mov
out
or
jo
adc
adc
movs
mov
es
loopne
popf
cdq
(bad)
(bad)
outs
sbb
push
pop
outs
add
lock
test
(bad)
pop
xchg
ins
in
leave
and
mov
data16
jno
push
jmp
bound
out
imul
lds
faddp
mov
popf
fstp
cmc
mov
call
je
les
mov
call
sbb
pusha
lds
dec
xor
je
mov
stos
mov
cld
fnstenv
push
mov
lea
add
cmp
cmc
inc
out
xchg
jnp
cmp
ret
lods
jecxz
inc
fcmove
adc
mov
dec
jns
inc
or
xor
ret
inc
shl
cld
imul
into
sub
std
cdq
and
jle
jecxz
(bad)
xor
jns
add
sub
or
icebp
add
arpl
in
mov
mov
jl
adc
lock
lahf
sti
in
sahf
das
cmps
jo
sub
dec
pusha
push
jo
aam
xchg
fs
mov
cmps
xor
pop
cmp
push
aad
xchg
mov
fldl2t
jmp
mov
mov
scas
pop
in
(bad)
mov
xchg
in
mov
push
mov
dec
scas
xchg
xor
stc
add
jae
fistp
inc
ret
cmps
and
add
dec
cmp
adc
into
(bad)
sbb
push
and
add
add
pushf
sub
and
sar
mov
mov
mov
mov
sub
fstp
mov
pop
inc
pop
repz
dec
jne
or
xlat
or
or
stc
pop
aam
sub
popa
dec
push
test
stos
mov
test
and
repnz
cld
test
ins
dec
popf
ins
adc
mov
js
icebp
stc
ds
cmp
pop
dec
or
mov
lahf
pop
arpl
pop
es
cmps
push
jbe
sbb
aaa
and
iret
sbb
jo
lods
ret
clc
ret
sahf
out
xor
aad
cmc
cmp
jp
and
pop
pusha
shl
sti
mov
sbb
repz
sub
push
push
dec
ss
iret
hlt
push
xor
stos
add
fild
stc
imul
cs
pop
push
cli
add
sbb
jl
scas
pop
arpl
dec
jmp
call
pusha
mov
imul
pop
nop
mov
lds
repz
outs
jmp
mov
dec
sbb
jo
test
sti
inc
mov
xchg
clc
sahf
loopne
dec
add
xor
add
int3
data16
std
aad
push
xchg
dec
pop
stc
xor
icebp
(bad)
jmp
mov
or
inc
sub
sub
gs
movs
xor
lock
cmp
or
popf
arpl
mov
loope
add
fst
imul
popa
std
adc
xor
mov
icebp
inc
repnz
jl
or
mov
(bad)
sbb
nop
mov
dec
clc
ficomp
ja
xor
fcomp
xor
xchg
or
repz
add
mov
mov
mov
inc
jbe
jne
push
push
outs
sahf
cmp
lock
xor
clc
cmc
test
add
(bad)
fs
nop
push
xor
jo
sub
xchg
or
ins
fsubr
bound
mov
ja
cmp
push
into
mov
adc
adc
sbb
jb
cdq
ret
dec
(bad)
jmp
xchg
cmp
hlt
push
sub
mov
mov
jl
repnz
adc
lea
add
ins
sbb
push
mov
jg
mov
jmp
pop
fmul
je
enter
sub
jns
jg
loop
stos
sbb
ss
add
xchg
and
mov
popf
or
test
jle
jge
or
xchg
jae
mov
add
or
movs
lods
push
pop
push
jo
inc
data16
data16
pop
aas
ss
pop
fwait
sub
addr16
gs
cdq
sar
sbb
retf
or
mov
mov
repnz
ret
(bad)
scas
mov
add
sbb
inc
mov
or
jnp
add
push
push
repz
cmp
out
cwde
fisttp
popfw
mov
adc
adc
scas
cs
cmc
and
repnz
imul
add
ret
mov
stc
mov
es
xlat
loope
leave
les
ins
test
add
or
not
repz
push
sub
and
adc
stos
xlat
outs
mov
add
(bad)
sti
inc
jo
xchg
mov
push
fmul
test
int3
mov
cdq
(bad)
in
pushw
add
ss
adc
sub
xchg
push
lds
sbb
xchg
and
adc
cmp
rcl
dec
add
mov
stos
push
mov
inc
jg
ss
push
stos
outs
mov
cmps
cmp
sti
ins
mov
mov
pushf
sti
mov
(bad)
and
sub
xchg
adc
and
push
syscall
cmp
xchg
jle
pop
not
mov
xor
or
movs
push
(bad)
mov
not
dec
sahf
pop
mov
push
push
in
outs
cmp
xor
sbb
lds
(bad)
test
cmovns
pop
or
xchg
add
jb
xor
pushf
fimul
push
adc
mov
(bad)
mov
or
mov
xor
das
push
mov
sbb
dec
push
push
out
add
shl
jae
cmp
iret
cwde
sub
push
sbb
xchg
ret
push
shr
icebp
aas
loopne
sub
jge
and
cmp
inc
and
cmp
mov
ss
fxch
das
stos
xor
and
aaa
or
lahf
adc
inc
jmp
cdq
loopne
leave
cmps
popw
(bad)
std
pop
fidivr
mov
daa
icebp
cmp
sbb
sub
jmp
(bad)
mov
xor
inc
stc
push
(bad)
mov
ret
lock
cmp
cmp
push
std
xor
(bad)
ror
add
mov
xor
or
cld
mov
data16
ret
mov
mov
sub
cmp
mov
push
push
test
sahf
inc
pop
pop
adc
ret
mov
adc
mov
stos
jl
sub
xchg
cli
xchg
xchg
in
jne
inc
pop
push
sti
sbb
arpl
pop
popf
sar
xor
mov
rcl
(bad)
loop
or
or
push
retf
rep
or
imul
xor
mov
js
and
fiadd
leavew
aam
mov
into
loopne
imul
inc
and
dec
fcomp
sbb
mov
inc
jns
fld
pop
stc
add
xor
add
loop
inc
sbb
push
add
mov
mov
sbb
dec
imul
test
ja
push
and
mov
xchg
aas
imul
gs
mov
and
or
and
mov
int
mov
cmps
cmp
jmp
xor
and
xor
dec
mov
fisubr
dec
scas
pop
sub
ins
push
(bad)
imul
daa
adc
out
mov
(bad)
scas
(bad)
push
in
push
pop
xor
outs
in
or
xor
sub
fnsave
push
push
scas
loope
dec
retf
push
cmp
pop
in
jmp
adc
punpckhbw
push
fs
mov
sbb
xchg
jnp
adc
stos
out
lods
push
sbb
bound
sbb
add
movs
psubsb
sbb
dec
stc
sti
cdq
jnp
outs
push
out
dec
pop
in
movs
pop
js
mov
mov
or
add
cdq
popa
addr16
pop
iret
cmovae
and
fwait
xchg
dec
xor
add
mov
inc
mov
int3
add
(bad)
mov
mov
push
enter
fisub
dec
adc
gs
rcr
fs
ficomp
fcmove
mov
xlat
arpl
pop
mov
cwde
jne
adc
icebp
and
mov
mov
or
sub
not
imul
xchg
data16
sar
mov
je
in
jb
adc
add
test
and
jne
pop
shl
or
pop
dec
int3
cmps
shl
sbb
add
cs
rcr
inc
sbb
and
jp
mov
rol
cmps
jmp
push
stos
inc
ins
jmp
sbb
cmps
adc
inc
daa
ins
out
lods
xchg
pop
dec
push
xor
or
arpl
push
mov
data16
jmp
push
inc
stos
adc
dec
jae
fmul
stos
loopne
int
cmps
xchg
sub
sub
rcr
sub
fs
pop
or
ret
lock
adc
ja
or
xor
sbb
fadd
pop
shl
xchg
addr16
call
fnstsw
aam
sbb
inc
fiadd
sub
mov
or
jno
mov
aad
add
rol
shl
push
adc
movs
loop
push
xrelease
arpl
(bad)
fdiv
stos
pop
sbb
mov
push
and
mov
sub
mov
jbe
pushf
aam
loop
imul
jns
fcom
xor
push
push
and
fbstp
shl
add
mov
push
cmp
xchg
leave
or
aam
jnp
out
retf
jbe
xor
xchg
inc
add
dec
test
jl
ror
shl
mov
imul
outs
cmp
popa
xchg
into
mov
pop
arpl
adc
xchg
adc
fld
sub
xor
mov
rcl
fimul
jl
retf
lea
jecxz
aaa
and
les
sahf
test
call
push
aas
out
dec
arpl
jb
cmc
dec
hlt
mov
push
and
cmp
push
in
adc
arpl
stos
jge
add
loop
cld
test
imul
sub
sub
(bad)
int3
jb
jb
(bad)
aam
retf
mov
cmps
movs
xor
call
les
sbb
dec
repnz
popf
xor
ja
ss
and
out
jp
jecxz
enter
ret
fwait
or
and
mov
add
jmp
sbb
push
data16
or
dec
lahf
and
das
sbb
stc
movs
int
or
sub
out
fmul
arpl
or
retf
cli
test
dec
push
repnz
inc
and
call
pop
jg
out
aaa
jae
pop
rcr
rcl
jns
ret
(bad)
adc
dec
jns
and
loop
scas
pop
sbb
ja
cmp
aam
mov
inc
jecxz
rol
push
mov
leave
ss
mov
push
jg
in
cwde
jmp
sbb
and
aam
daa
aaa
jns
xchg
add
pop
stc
push
pop
(bad)
(bad)
loope
adc
ins
cmc
sbb
fisub
not
and
inc
(bad)
js
mov
or
cmp
cmps
fmul
fdiv
mov
es
(bad)
into
pop
aaa
inc
sbb
cmp
push
popf
in
xor
addr16
mov
shl
sbb
jmp
xor
pop
js
add
push
shl
mov
dec
xor
cld
pop
and
pop
cld
mov
je
sub
dec
mov
adc
pop
jg
mov
inc
scas
jae
mov
xor
iret
iret
dec
cmps
push
push
sub
and
push
mov
sub
and
add
js
psubq
push
push
cwde
ror
adc
loope
je
or
pusha
push
ins
cmp
mov
mov
mov
enter
mov
sub
movs
push
cli
mov
loop
adc
pop
stc
jmp
les
push
cdq
inc
mov
iret
dec
fdiv
mov
icebp
xor
lods
fidivr
ror
jmp
ja
(bad)
sbb
sub
xchg
mov
fimul
jnp
push
and
iret
ret
xchg
retf
pop
mov
js
dec
sub
enter
in
inc
push
or
push
sar
(bad)
test
jb
sub
mov
arpl
adc
das
jg
cmp
push
mov
push
cmps
mov
addr16
mov
shr
nop
push
jb
ficomp
loop
gs
das
cli
lock
mov
pop
cmp
adc
sub
test
and
jo
inc
mov
hlt
mov
push
mov
pop
xor
in
cwde
inc
push
std
xchg
shr
movs
push
jmp
std
cmp
pop
loop
clc
sub
call
dec
or
inc
into
or
ror
xor
mov
sar
int
mov
mov
retf
jno
(bad)
push
xor
dec
out
push
push
xor
pop
and
dec
jmp
mov
mov
jne
push
in
cmp
pusha
or
fimul
les
add
push
pop
call
call
xchg
push
pop
js
jae
pop
xchg
add
and
sub
sub
ins
xchg
xchg
adc
stos
std
popa
daa
sub
or
cs
mov
div
fild
out
stc
loopne
inc
xchg
mov
cmps
pop
sbb
xchg
ds
dec
push
loop
xchg
int
cs
ins
das
push
xchg
out
test
mov
mov
cs
aam
movs
mov
push
rcr
mov
arpl
movs
nop
lahf
aam
xchg
shl
lahf
(bad)
pop
sub
pop
cmp
retf
sahf
int
mov
add
loop
scas
pop
movs
in
or
out
jle
cld
and
scas
sbb
pop
mov
fcmovu
jle
push
pop
mov
(bad)
shl
imul
add
mov
pusha
mov
jns
xor
in
fucomip
and
and
stos
mov
test
cmps
ret
fcomp
call
push
push
mov
cmps
popf
frstor
mov
lahf
(bad)
rol
rcr
loopne
lea
pop
test
push
test
loop
lahf
sbb
dec
pusha
repz
pop
push
cmp
loopne
sub
sub
aam
add
or
jae
(bad)
das
sub
inc
mov
inc
fidiv
inc
mov
lds
in
jmp
adc
int
fidivr
test
scas
mov
cmp
mov
push
cmp
and
frstor
push
loop
cmc
ds
sbb
nop
adc
mov
aad
pop
add
xor
fdivr
sbb
loope
jecxz
push
in
retf
out
mov
mov
cmps
test
mov
test
sub
popa
xor
leave
movs
sbb
jns
pop
into
mov
aad
inc
cmps
mov
adc
mov
mov
add
repz
xchg
jns
jge
push
jbe
in
mov
jb
sub
test
mov
adc
or
pop
mov
cdq
inc
mov
dec
sub
adc
lods
mov
jl
ds
dec
push
mov
xor
pop
lods
and
dec
mov
out
lock
dec
popf
call
popf
adc
push
cmc
cmovnp
ins
mov
lock
(bad)
movs
test
retf
mov
bound
xor
mul
aas
cmp
pop
and
and
sub
cmp
in
push
mov
inc
mov
adc
xchg
call
add
xchg
addr16
xlat
mov
popf
in
std
push
(bad)
fst
add
xchg
call
push
int3
scas
cmp
mov
add
loopne
mov
mov
push
xor
into
pushf
out
and
xchg
xor
xchg
loop
inc
mov
inc
dec
push
cdq
xor
jecxz
lea
xchg
je
fsubr
ds
in
cmp
adc
fs
movs
jne
nop
out
cwde
aaa
aad
out
(bad)
dec
lds
(bad)
fimul
ja
add
aaa
jge
mov
xor
stc
fld
xchg
jl
in
mov
adc
adc
sub
xlat
mov
and
push
pop
sbb
fisttp
cmps
test
inc
push
mov
mov
fs
or
add
add
neg
lahf
test
push
cmc
mov
scas
sub
inc
das
call
sbb
dec
out
fwait
and
xchg
jmp
and
(bad)
lods
adc
inc
hlt
mov
outs
call
cmps
call
adc
scas
push
scas
xor
inc
or
ret
mov
ss
int3
cli
dec
or
out
and
push
adc
push
jge
inc
mov
fist
stc
test
inc
js
in
inc
adc
dec
mov
mov
pop
cmps
sbb
in
xchg
pop
push
aam
sti
push
add
or
repnz
pusha
jno
mov
outs
adc
jmp
mov
jp
repnz
pushf
mov
mov
push
loopne
pop
out
mov
adc
sub
jge
adc
jbe
fnstenv
and
push
push
mov
ja
fndisi(8087
cmc
retf
pushf
and
mov
shr
outs
dec
xchg
xchg
in
sbb
dec
mov
sbb
mov
adc
push
rcr
add
jo
cmp
adc
push
mov
mov
cmp
aaa
icebp
ins
add
mov
inc
ins
dec
mov
or
sub
popf
adc
adc
hlt
jge
and
push
sbb
xor
call
cmp
movs
les
push
push
pop
mov
xchg
lea
dec
shl
cwde
aad
in
push
arpl
mov
nop
xchg
shl
mov
int3
je
and
in
mov
movs
push
jmp
sub
cmc
and
xchg
sbb
sub
outs
adc
lds
dec
inc
and
adc
add
or
dec
push
shl
cs
mov
out
sbb
out
fld
into
cmp
aas
pop
pop
mov
sub
cmps
dec
das
lds
inc
add
pop
adc
pop
aas
ss
fwait
test
dec
scas
fwait
sbb
lds
test
sbb
movs
inc
sub
das
and
fstp
push
es
hlt
sub
push
lods
cmp
xor
adc
push
imul
push
shl
jecxz
cmps
inc
sbb
rcr
in
jmp
push
jl
out
cmp
cmp
or
push
pop
lods
and
jg
and
inc
add
xchg
call
outs
(bad)
pop
xlat
adc
sub
adc
adc
enter
xchg
addr16
add
push
adc
push
pop
dec
jbe
rcr
jmp
(bad)
clc
pusha
mov
ins
fld
sub
repz
ret
xchg
lahf
cld
(bad)
pop
mov
icebp
add
adc
pushf
xchg
lea
nop
ror
push
out
sub
out
pop
nop
imul
ficomp
jmp
xchg
daa
repnz
(bad)
and
clc
add
bound
mov
imul
mov
fs
daa
adc
mov
(bad)
push
and
je
jle
stc
inc
daa
(bad)
out
cmp
cs
daa
sub
or
ss
mov
push
push
cdq
ins
cld
lock
pop
inc
outs
sub
and
addr16
iret
inc
cld
pop
scas
jmp
adc
push
mov
popa
ret
scas
popf
jle
test
fnstsw
inc
leave
in
js
mov
(bad)
jl
cmp
push
in
jb
pop
add
fidivr
(bad)
jo
idiv
add
das
jmp
jle
xchg
test
add
shl
or
fldcw
xor
cmp
cmp
or
sti
pop
xchg
mov
ficom
lock
jo
xlat
xchg
sbb
and
xchg
(bad)
or
pop
ja
call
inc
xor
cs
test
push
repnz
rcr
cmp
cmp
in
jmp
cmovle
fisub
dec
xlat
mul
movs
test
mov
and
cmp
mov
and
push
jle
sub
call
ss
ret
xlat
fild
pop
sub
pop
push
cmps
aam
cwde
jbe
mov
jecxz
pop
jl
inc
sbb
test
bound
xchg
je
rcl
mov
int3
dec
push
mov
mov
scas
or
icebp
ss
ror
ds
pop
call
retf
jl
inc
mov
and
pop
pop
cmps
or
jae
arpl
ss
or
not
adc
sub
fldcw
ins
nop
jnp
lock
aas
inc
aas
leave
cli
out
cmp
in
rol
mov
cmp
adc
push
out
cli
cmp
rcr
neg
jle
daa
bnd
sahf
push
cmp
adc
and
mov
test
loope
js
xor
cld
add
sbb
cmp
into
sbb
outs
shl
shl
push
mov
sar
add
retf
add
mov
int3
push
bound
fnstsw
ja
pop
dec
mov
cmps
retf
sbb
sub
xchg
cmc
add
leave
outs
or
pop
add
imul
adc
sbb
nop
call
outs
fs
push
(bad)
bound
push
arpl
mov
cli
xor
xchg
and
adc
xchg
inc
pop
mov
jmp
cmp
(bad)
js
or
movs
xchg
std
inc
cli
(bad)
and
mov
ins
ret
sbb
jo
jge
sahf
nop
(bad)
jmp
push
mov
mov
enter
rol
sbb
jo
test
jg
cmp
mov
or
cmps
push
and
xor
mov
pusha
sub
push
cmp
cdq
inc
rcl
mov
sub
bnd
imul
mov
pusha
mov
movs
xor
mov
stos
cmp
cmp
xor
dec
popa
xchg
pop
sub
jb
(bad)
mov
push
(bad)
inc
adc
or
loopne
ja
mov
fwait
dec
sub
sbb
adc
test
and
mov
(bad)
hlt
adc
cmp
jns
jecxz
cmp
lods
arpl
int
inc
jbe
or
sti
movs
aad
pop
xchg
pop
out
xchg
lahf
pushf
inc
loopne
adc
leave
xor
fild
ss
jmp
test
out
das
mov
push
iret
sub
mov
repz
nop
in
mov
xchg
(bad)
cs
dec
aad
add
rcl
push
imul
imul
sub
dec
mov
adc
jmp
dec
bound
(bad)
dec
ins
cmc
arpl
sub
dec
test
orps
call
in
nop
imul
push
mov
mov
cmp
(bad)
popf
js
das
popa
mov
retf
cmp
int3
lds
aaa
ss
aas
xchg
mov
push
or
sub
mov
(bad)
xchg
or
add
dec
les
sbb
retf
mov
fstp
sbb
test
jecxz
or
sbb
dec
adc
fcomp
xor
bound
xlat
fcmove
leave
cmps
sbb
xor
(bad)
sub
bound
outs
xor
in
xor
xor
bound
gs
call
pop
ins
cdq
std
neg
adc
xchg
sbb
cmps
add
xor
jb
cmc
sar
std
dec
out
es
pusha
out
pop
adc
or
or
fwait
movs
dec
repnz
in
or
mov
pop
ret
or
shl
push
outs
aas
(bad)
out
fist
jmp
retf
mov
sbb
fimul
jb
pop
aad
xchg
xchg
mov
popa
(bad)
scas
ja
in
into
mov
inc
sub
fsubr
movs
ror
in
sub
pop
adc
or
pop
fldenv
jmp
fucom
mov
inc
adc
mov
jmp
out
hlt
dec
push
(bad)
pop
mov
fbstp
cli
mov
sbb
jp
cmc
jmp
hlt
into
frstor
popa
ret
dec
adc
push
and
nop
cdq
outs
scas
ins
xlat
data16
xchg
mov
aaa
push
dec
cwde
shr
adc
int3
push
bound
test
sub
sbb
out
jmp
xchg
mov
fcmovnb
into
ret
imul
jl
in
xchg
and
sub
sub
pop
lods
sub
mov
xchg
scas
neg
sbb
cdq
call
jnp
lock
pop
or
mov
call
dec
mov
stc
pop
lods
or
push
outs
pop
mov
xchg
jns
or
outs
(bad)
hlt
pop
jno
idiv
into
push
mov
(bad)
push
add
enter
or
push
mov
dec
(bad)
adc
pop
pop
xlat
test
mov
add
je
mov
sar
retf
xor
in
shl
das
fdivr
int3
jl
es
(bad)
retf
cwde
dec
data16
dec
adc
cmps
movs
sbb
into
inc
xor
icebp
mov
mov
sar
push
lahf
arpl
jp
mov
dec
out
inc
(bad)
hlt
or
neg
outs
scas
inc
jmp
loope
addr16
mov
sub
stos
test
mov
inc
fld
outs
fadd
fwait
push
inc
mov
je
sar
addr16
ss
dec
push
sar
icebp
xlat
sub
or
cs
aaa
cdq
ins
add
je
mov
mov
pop
inc
in
cmc
mov
popa
out
add
inc
sar
mov
gs
js
sbb
xchg
mov
leave
pop
jae
or
add
in
cld
(bad)
std
icebp
mov
pop
sbb
and
mov
fwait
push
fld
adc
push
xor
nop
std
mov
jae
scas
movs
push
xchg
jo
outs
add
inc
adc
pop
jnp
sti
push
movs
ror
sbb
xor
ror
mov
test
movs
iret
and
and
test
push
mov
add
aaa
jns
mov
scas
jnp
out
or
or
cmp
mov
xchg
inc
push
pop
clc
push
mov
rol
mov
repz
jle
stos
std
or
cmps
and
push
dec
pop
repnz
xchg
pop
mov
aas
adc
test
and
loope
out
add
arpl
sbb
lahf
mov
pusha
scas
lds
ficomp
mov
jg
out
cmp
mov
xchg
call
mov
cmps
imul
pop
xchg
fcmovnu
pop
dec
xor
test
push
mov
mov
(bad)
push
ins
ror
jbe
int3
sti
xlat
xor
push
xchg
jle
inc
mov
push
iret
in
cmp
cs
enter
test
data16
mov
ret
loop
(bad)
mov
scas
sbb
sbb
cmps
cmp
mov
(bad)
pop
(bad)
test
xor
cli
add
iret
imul
repnz
inc
pcmpeqb
sub
rol
movs
mov
mov
cmps
pop
and
xchg
(bad)
gs
mov
cmp
(bad)
(bad)
xor
sub
rcr
push
ss
stos
or
lea
cli
xor
pop
iret
xor
data16
rol
xor
mov
(bad)
jmp
sbb
not
xchg
cmp
fscale
mov
into
fs
and
add
or
bound
jle
dec
ret
sub
xchg
and
test
(bad)
daa
stc
mov
mov
sbb
ja
test
mov
push
sub
je
xchg
mov
add
jle
aas
in
sub
sub
adc
cmp
push
push
scas
push
adc
push
test
in
mov
lds
cli
ret
xchg
stc
push
xchg
mov
push
or
adc
sub
jb
cld
out
push
loop
ret
sbb
push
jbe
dec
int3
ss
xchg
mov
inc
push
push
shl
ror
mov
mov
loop
pop
(bad)
imul
sub
sub
outs
rol
push
mov
push
or
dec
imul
inc
xchg
pop
lods
daa
movs
pushf
scas
and
cmps
push
dec
xchg
adc
push
dec
out
dec
pop
inc
jl
push
popf
inc
pop
and
lods
test
enter
and
push
dec
stc
inc
cmp
pop
(bad)
dec
cmp
mov
clc
and
call
push
stc
mov
outs
xor
jecxz
test
jb
or
or
test
dec
enter
jge
cdq
das
mov
mov
jge
or
mov
add
dec
fnstenv
out
fild
inc
ins
daa
inc
loope
js
lods
and
inc
arpl
rcl
and
xchg
hlt
pop
loop
jae
cmc
mov
cmp
jg
neg
adc
push
and
push
mov
sub
xchg
ja
cmps
and
aaa
sahf
or
add
into
mov
shl
(bad)
loope
outs
xcrypt-ctr
cmps
sahf
push
xor
dec
sbb
mov
xor
adc
mov
pop
push
mov
pop
lods
xor
xor
pop
mov
inc
jo
push
scas
and
mov
mov
push
mov
(bad)
or
or
xor
pushf
cwde
pop
mov
xor
fmul
js
enter
pushaw
xor
mov
(bad)
mov
sbb
call
add
and
movs
cmp
dec
jbe
arpl
into
mov
js
retf
cmps
fisub
cmp
sbb
imul
pop
pop
test
jno
pop
or
(bad)
or
ins
jae
ins
cmp
out
not
push
loopne
mov
ss
movs
adc
mov
inc
jne
xchg
add
push
scas
enter
jb
add
ja
xor
test
ret
cmps
and
pop
aaa
sbb
cmp
cdq
push
nop
rcr
jae
push
dec
push
gs
pop
jnp
cs
pop
mov
push
sub
add
repnz
popf
outs
inc
fdivr
cld
cmp
fisubr
pop
push
mov
lods
jle
push
lods
mov
pop
pop
sbb
dec
push
push
xchg
call
inc
ss
sbb
sbb
sbb
cmp
daa
ss
sbb
inc
xchg
inc
or
ficomp
sbb
mov
mov
stos
inc
pushf
mov
fdivr
push
jmp
jmp
sub
jo
xor
sub
cmp
repnz
imul
mov
add
cdq
aas
pop
xlat
shl
pop
retf
lods
sbb
loopne
mov
xlat
lods
and
aaa
lods
addr16
sub
bound
jo
pop
sbb
jl
iret
scas
jmp
inc
or
adc
xchg
cmp
inc
retf
les
lods
js
(bad)
leave
push
enter
mov
cmps
xchg
imul
sub
dec
xor
push
ds
dec
sbb
bswap
add
hlt
cwde
add
push
imul
adc
(bad)
popf
xor
pop
out
fdivr
inc
sbb
cmp
sbb
sbb
lock
ds
lea
mov
(bad)
jmp
push
xor
push
dec
stos
mov
adc
jl
cs
push
gs
dec
test
xchg
or
dec
stc
sub
adc
fld
popf
test
jno
pop
mov
sub
ins
mov
xchg
outs
test
es
cmp
outs
push
pop
mov
mov
loop
dec
int3
adc
(bad)
cli
ins
xchg
arpl
rcr
sub
rcl
jp
test
xor
jbe
sub
or
loop
(bad)
aam
pop
pop
and
xor
sbb
mov
mov
jbe
clc
xor
jno
adc
dec
cmp
(bad)
aas
mov
cld
pop
call
mov
inc
inc
jne
push
fmul
retf
fdiv
xlat
(bad)
push
iret
scas
mov
lods
dec
je
call
add
lods
mov
xor
adc
shl
aam
ficomp
push
dec
call
into
or
add
fwait
loop
cmp
jmp
inc
pop
repnz
push
(bad)
pop
xor
push
push
lahf
aaa
popa
xlat
xor
pop
push
xor
or
xchg
sub
sub
int
data16
fdivr
cmps
mov
cs
push
adc
ja
cmp
sar
out
push
jg
add
or
cmps
push
push
pop
xchg
cmp
sub
pop
iret
and
aaa
sbb
pop
mov
test
pop
gs
sbb
in
aaa
out
adc
mov
push
inc
jb
pusha
in
call
cld
mov
jns
movs
loopne
sub
(bad)
clc
test
adc
adc
test
jbe
push
xlat
repz
ret
cmp
fcmovnb
dec
mov
ja
call
inc
ret
sbb
sbb
retf
mov
call
sub
cmp
inc
std
lahf
das
repz
repz
fneni(8087
in
lds
sbb
mov
ins
ds
shl
or
fldenv
cmp
mov
mov
mov
ins
lahf
jmp
push
adc
test
pop
push
call
out
jno
sub
(bad)
dec
jns
(bad)
test
lods
inc
and
outs
outs
sbb
sbb
loop
scas
dec
outs
in
cld
outs
mov
dec
jg
aam
dec
xchg
push
popa
adc
popa
sbb
leave
stos
and
mov
jge
jle
sub
inc
test
dec
sbb
test
push
or
leave
xor
call
dec
sti
imul
loope
cmp
push
movs
pop
xchg
jae
inc
cmp
cmp
cmps
xchg
pop
in
aad
ss
and
and
sbb
push
pop
div
inc
popa
loope
pop
lock
sbb
iret
or
icebp
rcr
shl
cmp
shl
jae
fild
into
sub
(bad)
mov
push
push
sub
out
pop
jno
paddsw
outs
test
mov
in
mov
ror
sbb
push
stc
clc
xor
arpl
inc
xchg
stos
push
xor
pop
daa
jmp
test
inc
inc
retf
xchg
(bad)
cmps
jecxz
push
or
in
or
sub
pop
ss
dec
cwde
dec
mov
push
mov
adc
(bad)
push
fdiv
xchg
test
inc
cmp
in
inc
adc
sub
mov
cmp
not
movs
int3
pop
in
(bad)
cmp
dec
inc
into
add
adc
jbe
or
mov
jbe
out
inc
add
mov
aam
div
add
and
arpl
sub
jp
xor
repz
call
xor
or
cmps
xchg
les
enter
into
push
adc
sbb
jae
adc
aam
cmp
jbe
mov
mov
mov
xor
inc
and
test
daa
out
xchg
mov
jge
loop
jmp
in
adc
xchg
adc
cmps
add
jl
int3
neg
mov
daa
iret
gs
inc
fwait
cld
inc
es
and
bound
hlt
popa
sbb
dec
(bad)
fdivr
jb
scas
repz
div
or
repnz
clc
cs
scas
dec
scas
arpl
outs
(bad)
in
in
pop
push
mov
imul
mov
int3
lods
mov
data16
xchg
fucomip
sbb
test
lods
ss
xor
mov
pop
repnz
adc
in
sub
das
inc
cmp
neg
ret
in
arpl
in
in
inc
jo
bound
and
inc
movs
jbe
aam
fs
out
jnp
test
in
call
jb
lock
jp
(bad)
je
pop
xchg
mov
xor
cdq
imul
sub
pop
iret
ins
shl
mov
dec
das
std
test
imul
cmps
mov
mov
shl
add
rcr
std
inc
(bad)
fadd
bound
int3
repnz
loop
cmp
xchg
xor
mov
jns
mov
ds
mov
test
or
push
xchg
and
sbb
jmp
lahf
pop
pushf
jp
stc
jp
jnp
loope
mov
aaa
xor
inc
ss
cmp
arpl
sub
or
pop
jb
dec
or
pop
xchg
lds
push
imul
push
mov
hlt
cmp
jo
std
jge
sbb
mov
mov
fs
pop
rcl
repnz
sub
adc
out
mov
enter
cld
pop
and
dec
mov
or
lods
sbb
ret
loopne
lahf
mov
sahf
in
xor
xor
lods
dec
ret
xor
inc
lds
jle
jbe
call
inc
arpl
jb
out
sbb
xor
cmp
mov
adc
mov
dec
mov
dec
push
repz
cmp
aas
mov
movs
mov
cmp
and
lahf
pop
dec
mov
shl
inc
and
sub
mov
(bad)
ins
cmps
shl
inc
pop
mov
add
inc
loop
cmp
adc
hlt
sbb
add
outs
dec
(bad)
pop
(bad)
xlat
cmp
icebp
sub
stos
dec
jle
(bad)
lahf
adc
xchg
iret
cld
cmps
xchg
mul
jecxz
ret
and
mov
dec
inc
das
aaa
pop
cmp
adc
add
mov
push
cmp
sub
mov
mov
stos
and
popa
and
jge
ins
pop
jo
jecxz
nop
jae
mov
sbb
jo
and
cld
fnstcw
std
mul
cld
dec
push
shl
ret
icebp
lods
mov
sti
fadd
(bad)
popf
out
pop
pushf
ror
es
ds
out
mov
pop
les
and
test
cwde
pusha
ja
mov
into
jno
inc
icebp
add
add
mov
scas
cmp
dec
sub
loop
loope
cmp
xchg
jns
xor
cmp
pop
jecxz
push
dec
test
sbb
ss
int3
gs
xchg
test
push
jbe
inc
inc
scas
mov
jge
add
or
call
je
imul
sti
xor
sub
adc
sub
pop
ins
gs
and
push
dec
sti
xchg
into
pop
xor
int
aas
dec
out
loopne
add
fild
nop
pop
mov
les
imul
lahf
mov
mov
or
sbb
inc
xchg
xchg
xchg
jmp
shr
push
std
xor
xchg
push
popf
inc
shr
xor
mov
fwait
cmp
scas
dec
inc
sub
adc
int3
adc
mov
mov
je
or
mov
shl
inc
xchg
lock
cmp
ret
pop
dec
aam
push
pop
xchg
cmps
mov
jo
loop
ret
and
mov
fisub
(bad)
jecxz
scas
shl
xor
cwde
jne
icebp
inc
stos
and
cmp
outs
imul
addr16
inc
add
push
mov
and
in
cli
pushf
pop
pop
enter
sub
xchg
test
pop
shl
mov
push
(bad)
icebp
mov
retf
into
sbb
ds
push
push
inc
and
das
les
cmp
pusha
ins
jl
xchg
retf
or
jle
imul
cmp
loope
loop
jge
sbb
call
sub
pop
cdq
jg
call
dec
repnz
pop
cli
xor
lds
ins
in
sub
and
inc
(bad)
in
hlt
ds
mov
or
sti
sub
inc
mov
call
int3
ds
push
sbb
movs
add
cmp
pop
jno
push
ret
cwde
adc
xor
xchg
pop
fdiv
push
sbb
shl
add
int
pop
or
call
dec
inc
cmp
sub
adc
(bad)
push
into
or
cmp
jne
cdq
fdiv
loope
xor
cwde
(bad)
fmul
enter
adc
repz
dec
popa
scas
clc
mov
imul
mov
xor
dec
mov
jg
mov
sti
xchg
std
comiss
(bad)
add
xor
imul
push
jne
cld
mov
xchg
popa
jne
sbb
xchg
call
jmp
xchg
in
sbb
dec
clc
ja
mov
fwait
adc
inc
jmp
jl
scas
mov
jecxz
loopne
mov
inc
mov
loopne
aas
call
adc
stc
mov
jnp
mov
loope
pop
fcmovbe
push
(bad)
jmp
mov
in
shl
ret
dec
mov
push
adc
addr16
xchg
leave
retf
movs
imul
pop
mov
xchg
sbb
addr16
pop
jmp
jo
cmc
cwde
mov
fistp
fs
(bad)
jmp
add
dec
cli
cdq
or
inc
mov
in
retf
inc
xor
pop
(bad)
jmp
add
xor
mov
cwde
cdq
push
scas
mov
inc
seta
add
sahf
jno
push
inc
imul
ror
dec
add
sbb
nop
sbb
mov
add
aad
(bad)
es
ret
hlt
pop
cli
push
vpextrw
lds
ds
cdq
lea
sti
lahf
js
mov
mov
mov
in
mov
pop
cdq
mov
(bad)
mov
dec
add
fiadd
test
std
daa
add
mov
das
hlt
jns
cmp
pop
repz
cmp
pop
dec
inc
xor
xor
cdq
cmps
push
jno
pop
jns
add
cmp
add
imul
jg
push
xchg
mov
sub
(bad)
icebp
iret
not
pop
mov
lock
aam
clc
mov
push
mov
(bad)
xlat
jbe
and
jne
mov
ret
aad
rep
mov
outs
nop
adc
ja
xor
out
ja
cmps
scas
clc
fdiv
shl
dec
mov
sar
out
dec
sub
pop
cmp
dec
test
mov
mov
jmp
arpl
jb
mov
hlt
mov
(bad)
jns
mov
movs
push
repz
or
or
xchg
loopne
stc
ins
repz
jmp
xchg
stc
dec
rcl
push
nop
add
vandnpd
mov
xor
mov
jl
mov
add
popf
in
lods
dec
adc
stos
lods
xchg
adc
inc
outs
jno
jne
cmps
and
dec
(bad)
jecxz
lods
push
mov
jecxz
xor
arpl
add
and
outs
cs
ins
movs
jmp
mov
fsubr
sub
push
cmc
inc
push
je
cli
mov
ins
sub
jno
xchg
inc
sub
push
xor
mov
shr
pop
repz
mov
mov
jmp
fidivr
int
stos
sbb
cmp
das
jno
push
push
jns
cdq
jmp
cmp
pushf
rep
jne
and
int
jmp
add
ins
(bad)
mov
xor
(bad)
pop
std
(bad)
push
aaa
or
fmul
pop
dec
mov
adc
imul
aas
dec
mov
ja
add
mov
fwait
iret
mov
out
gs
(bad)
sub
test
cmp
inc
shl
fisub
mov
push
inc
xor
jnp
adc
int3
cmp
mov
add
(bad)
shr
sub
clc
cmp
out
or
cmp
loopne
hlt
mov
pop
add
and
ret
adc
inc
adc
push
or
or
out
push
adc
dec
sub
ret
mov
mov
out
(bad)
test
xor
(bad)
adc
adc
loope
xlat
cld
aaa
jl
fidivr
lds
sar
(bad)
ss
add
pop
movs
and
aam
fidivr
jle
idiv
lods
mov
sbb
rcl
mov
mov
dec
pop
and
ja
dec
clc
imul
jns
adc
cwde
adc
pop
pusha
ror
stc
clc
cmps
loope
add
(bad)
fnsave
shl
push
pop
ins
aad
and
and
mov
test
sbb
lea
xor
out
(bad)
mov
imul
test
push
mov
das
dec
xchg
mov
pop
mov
fsubr
push
adc
or
frstor
jp
das
ss
stc
mov
repnz
pop
mov
mov
fistp
sub
loopne
mov
push
mov
pop
ficomp
imul
xlat
mov
mov
jp
out
stos
or
and
mov
adc
jp
cmps
sahf
jnp
jmp
mov
mov
inc
lea
push
sub
dec
cwde
call
repnz
enter
fcomp
inc
mov
movs
and
scas
sub
pop
lea
pop
pop
jbe
pop
mov
loopne
xchg
cmp
pushf
bound
aam
sbb
lahf
pop
add
xchg
sub
dec
pop
out
test
add
push
nop
and
jbe
jge
mov
pop
ss
push
mov
add
push
mov
xchg
sbb
or
aad
stc
sti
sti
or
call
add
pop
stos
dec
mov
push
sub
sub
sub
jle
inc
mov
ins
int
cs
movs
pop
daa
and
push
dec
dec
mov
push
mov
stos
xchg
dec
mov
lock
dec
movs
in
ja
imul
push
jae
jmp
clc
adc
sbb
jmp
xor
and
nop
inc
push
pop
jae
(bad)
dec
lods
cmc
bound
mov
dec
mov
mov
cmps
ins
ja
in
pushf
int3
call
and
out
cmps
dec
push
mov
jge
jl
jg
sbb
(bad)
push
ins
lods
cmp
repz
pop
ss
jl
mov
mov
mov
scas
aam
out
mov
pop
jns
dec
cdq
and
cwde
loope
int3
retf
jbe
jmp
sahf
cmp
pusha
or
(bad)
clc
test
out
push
mov
lods
shl
in
pop
call
and
jae
or
inc
aaa
xor
hlt
or
leave
jbe
ds
loop
adc
(bad)
and
add
sub
jmp
mov
mov
scas
pop
in
lds
add
je
leave
shr
adc
push
pop
rol
pushf
shl
ins
daa
loope
sete
dec
mov
in
push
push
xor
xor
cmp
mov
fwait
daa
sub
dec
(bad)
lods
inc
mov
popf
ret
adc
fsqrt
sti
sbb
add
popf
out
and
pop
enter
and
jno
adc
fmul
fiadd
retf
mov
mov
pop
sub
movs
repnz
xchg
inc
mov
pushf
fimul
pop
js
or
xor
xor
retf
lock
jg
sbb
mov
mov
and
test
ret
jbe
test
out
push
sub
mov
xor
mov
adc
push
mov
daa
pop
fsubp
ror
dec
outs
(bad)
sbb
loopne
sub
xor
xor
pop
sbb
mov
inc
lahf
icebp
(bad)
dec
leave
sub
mov
inc
popf
jbe
sub
sbb
sbb
jmp
xchg
cld
mov
pop
inc
aad
or
std
xchg
jg
arpl
lds
fnstenv
inc
loope
or
and
push
adc
(bad)
jmp
out
mov
out
mov
ins
sti
cmp
in
aad
dec
jo
and
outs
or
outs
outs
shl
jge
outs
stc
ror
sahf
leave
retf
jmp
(bad)
aam
cmps
test
fs
and
loope
leave
call
inc
or
dec
xchg
sahf
bound
xchg
mov
pop
cmc
out
add
pushf
sbb
mov
out
shr
ror
pop
lock
push
std
enter
ss
ss
retf
repnz
daa
int
sar
add
and
xor
pop
xlat
mov
and
imul
loop
rcl
in
mov
rcr
cmps
xchg
rcl
mov
mov
icebp
test
shl
pop
and
dec
cmps
pop
mov
in
lods
fisttp
jbe
jns
in
push
sub
pop
idiv
sbb
test
fdiv
cwde
jecxz
cmps
cdq
adc
push
and
add
mov
cmps
or
mov
xchg
repnz
in
(bad)
loopne
mov
dec
lahf
cwde
xchg
jne
movs
xchg
add
pop
cs
outs
or
sub
jae
sub
pop
dec
fmul
(bad)
shl
enter
into
repz
(bad)
jge
mov
leave
(bad)
fs
mov
jg
sbb
mov
test
and
mov
mov
test
pop
stos
sub
out
xor
jp
jg
push
jle
(bad)
dec
pop
mov
jns
push
add
push
jmp
into
xchg
inc
pop
lods
loope
in
aad
and
das
pop
fldcw
cli
cmp
fs
(bad)
inc
push
and
in
loopne
inc
retf
jbe
das
ret
sub
push
(bad)
cmp
xchg
mov
movs
xor
xchg
add
lods
jae
xchg
push
xor
std
jmp
push
jae
loop
and
neg
(bad)
mov
jge
pop
jae
cmp
in
xor
or
in
pop
mov
lds
jecxz
test
out
aam
(bad)
in
leave
ret
call
xor
push
retf
jp
out
outs
jmp
and
adc
arpl
arpl
ror
push
outs
out
push
loopne
shl
outs
scas
popf
retf
sbb
faddp
out
shr
or
lds
nop
mov
mov
ret
pusha
sbb
sub
fs
mov
push
lea
push
addr16
push
xchg
mov
mov
and
stos
sahf
or
in
ss
jmp
not
aaa
mov
mov
test
outs
mov
jmp
inc
jae
(bad)
xchg
mov
jecxz
mov
lock
xor
icebp
mov
pop
sbb
push
std
pop
sub
pop
ins
push
call
pushf
xchg
std
xchg
mov
push
push
fsub
ret
and
jg
cvtpi2ps
inc
jmp
jno
mov
mov
and
jle
jecxz
pop
and
pop
jo
fadd
dec
leave
or
mov
and
stos
push
call
mov
push
and
test
lock
and
fimul
cdq
xor
jnp
push
mov
push
fs
inc
push
(bad)
gs
sub
int3
mov
sar
sbb
loopne
ror
jecxz
xor
mov
ss
jecxz
jecxz
jmp
movs
add
addr16
mov
or
in
bound
adc
jae
aam
cmc
into
lds
cmp
movs
hlt
sub
cmp
bound
out
outs
mov
push
div
mov
push
fdiv
or
shl
js
or
and
push
cld
data16
mov
icebp
mov
(bad)
fcmovb
and
add
lahf
popf
mov
cwde
push
or
cmc
ret
sub
lods
(bad)
mov
jge
fild
dec
pop
xor
xchg
in
inc
mov
int
loop
loopne
ins
jne
inc
loope
(bad)
mov
jbe
adc
addr16
es
repnz
jp
in
ror
test
(bad)
sub
jle
cld
cmp
jge
jl
inc
lea
fs
test
pop
test
cmp
(bad)
pop
dec
addr16
xor
push
imul
mov
dec
jnp
fist
adc
sub
hlt
sbb
sub
xor
pushf
sbb
jge
js
cli
cdq
enter
lea
pop
retf
jg
dec
stc
push
jp
fcmovnb
jg
mov
out
fisttp
in
mov
aas
ret
mov
hlt
jno
xchg
shl
retf
xor
(bad)
shld
xchg
std
js
(bad)
xor
call
adc
jne
sar
pop
xlat
mov
sub
test
retf
dec
add
and
rcr
in
les
loop
les
out
push
xor
and
xor
sbb
mov
inc
pop
and
ds
(bad)
dec
cmp
in
je
pusha
in
mov
stos
fwait
ds
out
jecxz
addr16
stc
xlat
loopne
enter
std
fwait
push
daa
es
xor
lahf
in
outs
sub
imul
ret
loopne
ss
mov
gs
fcom
arpl
stos
cbw
data16
ret
dec
icebp
sbb
cdq
lea
out
xor
shr
jns
out
add
xlat
push
or
add
lods
sbb
outs
fadd
lods
data16
cwde
dec
and
retf
rcr
lds
xor
adc
in
jg
inc
mov
ret
jmp
dec
dec
lods
cmps
xor
je
movs
pop
mov
and
je
cmps
sbb
das
dec
push
imul
and
jnp
imul
push
ins
es
cmp
retf
mov
mov
dec
scas
inc
loop
arpl
mul
jnp
push
push
iret
adc
(bad)
xlat
call
retf
fst
mov
repz
push
mov
mov
add
nop
ins
repz
daa
dec
jmp
popf
or
or
and
or
inc
pop
fst
and
mov
xchg
inc
jl
out
dec
mov
jnp
adc
pushf
mov
or
mov
shl
daa
loopne
stos
push
scas
dec
lods
sar
sbb
out
rcl
pusha
ins
adc
or
fisub
iret
fisttp
mov
mov
fcom
iret
sbb
and
jmp
stc
test
add
das
es
adc
push
jae
ror
test
popf
in
arpl
push
add
xor
xchg
popa
dec
(bad)
pop
dec
lods
pop
out
or
imul
jge
add
mov
cmp
(bad)
je
push
jge
and
jbe
add
arpl
pavgb
adc
sub
inc
inc
fldcw
aad
jns
(bad)
jmp
lds
into
mov
int
data16
test
das
pop
xchg
push
rcl
xchg
call
mov
mov
cs
sbb
mov
cmc
mov
cld
inc
push
out
sahf
sbb
retf
jo
cmp
fldcw
call
mov
fwait
ss
push
retf
add
aaa
lds
mov
jae
sub
rcr
jecxz
test
push
and
icebp
sbb
imul
test
dec
fst
test
mov
ins
xchg
mov
push
inc
je
xor
lock
cmp
bound
and
gs
popf
shl
xchg
rcr
(bad)
fwait
add
sub
add
repz
mov
das
ds
sbb
pop
(bad)
rcl
(bad)
mov
div
add
push
and
inc
dec
xchg
scas
fs
cmp
cwde
fld
sub
sbb
popf
sub
sahf
iret
jg
jbe
out
xchg
dec
xchg
test
inc
(bad)
xchg
adc
(bad)
and
(bad)
out
pushf
or
mov
(bad)
popf
push
mov
push
mov
sbb
xor
mov
jb
pop
push
jo
or
call
les
in
adc
clc
fdiv
dec
mov
sar
xchg
(bad)
mov
inc
mov
repnz
cli
jecxz
sti
addr16
jmp
test
xchg
mov
xchg
inc
loop
xchg
push
cdq
sbb
pop
add
jo
aam
fadd
add
sti
push
rcr
dec
push
jmp
pop
ins
sbb
mov
scas
jno
lods
and
les
dec
pop
mov
dec
shl
sbb
call
mov
in
pop
test
je
repz
(bad)
mov
pop
rcr
data16
pop
and
movs
pop
(bad)
aam
mov
std
adc
inc
sbb
in
mov
loope
in
add
mov
sbb
mov
mov
lods
pop
jbe
fwait
movs
xchg
dec
sahf
aam
mov
repz
pop
jo
mov
push
out
sbb
dec
or
pop
push
retf
jne
adc
ror
ss
and
jmp
pop
fisubr
cmp
jle
pop
pop
jbe
dec
daa
adc
pop
lods
push
inc
jnp
clc
and
lea
jns
xlat
test
mov
sbb
mov
pop
(bad)
sbb
fcom
ja
arpl
fisttp
jp
hlt
mov
mov
enter
mov
cmps
loopne
xor
sbb
adc
cmp
cmps
jmp
push
shr
dec
cmps
nop
or
fs
xchg
je
and
mov
push
dec
out
mov
add
in
jecxz
arpl
sub
(bad)
test
fs
inc
push
dec
addr16
xor
lds
es
xchg
jp
loopne
inc
stc
dec
xor
xor
js
cmp
jae
pop
into
aas
pop
mov
loope
mov
shl
loop
pop
add
mov
xchg
and
inc
xor
xchg
pop
mov
js
jb
addr16
outs
or
cmps
not
xchg
push
cmp
jbe
xchg
fs
lds
mov
push
xor
daa
retf
lods
retf
js
retf
pop
(bad)
mov
sub
(bad)
lds
aaa
dec
out
mov
ret
(bad)
retf
retf
fs
movs
cmp
jp
cmps
sbb
mov
rol
jne
inc
gs
adc
pop
loope
call
inc
imul
jno
xchg
jmp
gs
jmp
and
cmp
mov
adc
out
adc
mov
bound
mov
imul
lock
cmc
sub
pushf
(bad)
stc
and
or
popf
in
in
sbb
adc
and
imul
sbb
dec
mov
xor
(bad)
jne
sahf
inc
and
or
(bad)
or
in
div
dec
inc
cmp
cmps
add
jmp
pop
enter
cmp
xor
lods
mov
aas
test
(bad)
in
jne
inc
sub
data16
enter
mov
ss
mov
pop
sbb
push
and
mov
loope
adc
pop
inc
xchg
cmc
scas
sub
jne
pop
popf
mov
(bad)
xchg
cmp
in
sub
adc
daa
fxch
test
and
sub
out
xchg
jne
adc
fwait
push
retf
jns
add
add
call
jmp
jmp
in
inc
push
push
add
scas
cmp
mov
cmp
rep
shl
(bad)
dec
into
aaa
pop
cld
sbb
push
mov
into
out
mov
mov
and
push
test
push
out
dec
add
push
sbb
xlat
test
mov
jg
out
rcl
rol
call
(bad)
ins
sbb
add
xor
cmp
push
xchg
movs
ja
mov
or
std
in
iret
mov
stos
pop
bound
jg
lods
adc
or
adc
out
push
xchg
cld
mov
mov
jns
arpl
nop
jg
xor
mov
outs
iret
scas
lea
pop
push
jnp
mov
adc
mov
push
lds
pop
push
fbstp
and
xchg
mul
fldenv
in
das
les
adc
and
and
add
or
cmp
mov
call
test
jae
add
xchg
stc
sahf
mov
rcl
loope
aas
popf
loopne
sub
jae
loope
xor
cmp
dec
int3
repz
pop
imul
cmps
stc
inc
test
add
mov
pop
arpl
sub
aam
jmp
and
jge
push
and
pusha
setne
mov
aam
cmp
and
es
(bad)
mov
jl
popa
mov
jg
jae
lea
ss
pop
push
lods
mov
lahf
inc
out
sub
aad
das
cmp
jo
xchg
(bad)
inc
fdivr
inc
in
push
mov
inc
pop
push
mov
push
ds
test
inc
lahf
mov
push
cwde
cmp
nop
push
cmps
fdivr
fmul
(bad)
(bad)
sub
dec
inc
(bad)
movs
inc
fwait
out
jl
retf
arpl
pushf
and
pop
mov
xlat
and
add
mov
je
xor
movs
test
loope
cmp
(bad)
pop
cmp
mov
daa
push
je
and
xor
inc
cmp
inc
push
mov
mov
mov
pop
sub
mov
mov
push
or
xor
mov
mov
sub
mov
iret
push
sub
rcr
jmp
dec
jne
imul
sar
dec
fucomp
lods
(bad)
jb
jg
push
xchg
mov
repz
xor
data16
jbe
shl
add
icebp
push
mov
jae
into
sub
aam
xchg
in
std
or
sbb
push
stc
inc
xor
mov
pop
fwait
(bad)
mov
sbb
out
sub
popf
repz
cdq
test
cmp
dec
test
mov
adc
pop
xor
sbb
aaa
sti
or
out
dec
jne
cli
xchg
cmp
jle
cs
inc
addr16
fnsave
mov
sub
push
jnp
sub
jle
jge
lahf
test
add
popa
outs
popf
(bad)
mov
jns
xor
ror
jae
jno
retf
xor
lock
jg
cli
xchg
xor
nop
push
push
pop
je
fist
daa
or
add
push
sbb
in
jle
add
pop
add
mov
sub
test
or
cmp
ret
jmp
aad
add
leave
outs
outs
test
mov
jmp
push
mov
ss
test
hlt
push
stc
repz
jne
and
pop
mov
xor
cmp
inc
jmp
push
xchg
rcl
aad
jl
inc
mov
push
ret
enter
fs
add
xor
jb
cmp
mov
mov
inc
not
dec
inc
ret
je
je
mov
cmp
sub
or
sbb
shufps
lods
add
loopne
mov
imul
add
xor
mov
loopne
std
jnp
dec
jbe
dec
xchg
stos
mov
adc
int
stos
cmp
lahf
xchg
sub
popf
mov
mov
pop
nop
nop
rcl
out
push
push
sahf
sbb
add
(bad)
sub
sti
add
scas
sbb
in
jne
dec
imul
mov
in
push
pop
les
or
idiv
ds
test
pushf
cmp
mov
xor
jmp
or
leave
dec
xlat
or
fst
repz
cmp
push
cmp
loopne
idiv
pop
pop
hlt
bound
in
mov
and
pop
xchg
pop
ja
jmp
mov
int
in
mov
nop
pop
loope
js
xchg
adc
(bad)
pop
retf
(bad)
mov
ficomp
push
mov
xchg
scas
ret
pop
xor
jge
retf
push
mov
xlat
sub
test
sub
(bad)
mov
inc
enter
inc
mov
pusha
push
add
sbb
adc
retf
std
inc
push
push
bound
pop
push
test
adc
(bad)
popa
ins
push
push
in
inc
add
into
or
xor
sub
add
repz
daa
retf
ss
cmp
adc
rol
ret
sbb
movs
push
dec
sbb
jecxz
inc
pop
pusha
xchg
jp
loop
pmulhw
push
pop
xor
push
dec
add
enter
fimul
inc
int
mov
cs
jp
push
int3
or
adc
sar
cs
fs
call
das
iret
cmps
push
repnz
push
mov
or
mov
pop
fidivr
xchg
mov
cmp
mov
add
retf
pop
and
push
pop
fild
mov
ja
mul
push
lock
jecxz
out
cwde
into
mov
(bad)
ficom
leave
test
(bad)
mov
sub
inc
scas
ret
jmp
push
inc
loopne
inc
or
hlt
or
hlt
cs
xchg
jmp
fwait
xchg
sbb
sub
imul
out
inc
sti
inc
mov
shl
or
jnp
mov
jecxz
rol
addr16
repz
pop
fst
out
or
sub
push
jmp
daa
and
mov
in
retf
je
cwde
and
(bad)
lahf
in
push
sti
add
mov
loope
sub
out
popf
mov
rcl
cmp
enter
jg
jb
pop
dec
xchg
xchg
les
push
pop
cli
daa
cvtdq2ps
push
adc
out
std
push
ret
pop
(bad)
loopne
cli
int
dec
jnp
pop
cld
ins
pop
jbe
inc
mov
xchg
mov
dec
scas
sbb
loop
fild
rol
bnd
fs
pushf
jnp
or
and
mov
icebp
xor
les
xchg
xor
arpl
rcr
dec
hlt
sbb
jmp
and
xor
loop
xor
out
lock
mov
adc
test
cdq
push
cmp
xlat
inc
mov
(bad)
adc
call
xorps
sub
mov
pushf
fst
sbb
frstor
dec
shr
xchg
mov
xor
inc
fcomp
call
or
test
sti
pushf
xchg
adc
mov
clc
fcom
xor
jbe
adc
mov
outs
in
call
jne
stos
ret
push
push
repnz
push
sbb
gs
inc
and
leave
imul
adc
ins
mov
mov
mov
or
in
pop
pop
pop
dec
pop
std
sub
sbb
mov
rol
fwait
adc
mov
jae
add
scas
push
jmp
div
fst
mov
or
xor
xchg
fwait
out
leave
xchg
cmp
ja
cli
out
jge
lds
leave
mov
sub
test
in
loope
inc
mov
mov
imul
fbld
jo
jns
jo
pop
cmp
rcr
sub
enter
add
xchg
inc
aaa
jecxz
ret
ss
mov
fsub
aas
dec
pop
sbb
push
in
add
jecxz
and
push
cdq
jl
movs
cwde
xlat
aas
ins
test
push
mov
jne
jns
xor
rcr
and
dec
retf
(bad)
cwde
mov
mov
mov
cmp
stos
jno
adc
pop
sub
inc
add
retf
rcr
sbb
pop
dec
jp
test
pop
cmp
push
xchg
leave
jecxz
aaa
int3
adc
mov
psllq
xor
ror
outs
mov
pop
(bad)
stos
push
fisub
int
scas
nop
repz
(bad)
jo
nop
push
retf
inc
sub
sub
jmp
add
and
mov
push
push
(bad)
cwde
inc
mov
jp
adc
pop
mov
test
ds
sub
xchg
mov
cdq
jg
xor
out
adc
mov
jmp
gs
shl
lock
inc
cmp
or
or
retf
ja
test
and
adc
mov
(bad)
inc
dec
aad
mov
mov
inc
xchg
mov
test
mov
xchg
fstp
sub
dec
sub
push
inc
dec
ret
lods
and
fisttp
loope
inc
(bad)
sbb
fst
mov
and
ss
pop
repnz
and
icebp
std
icebp
fldl2e
mov
pop
xor
mov
add
pop
and
sahf
ja
lock
aam
(bad)
(bad)
das
push
sub
sub
pop
cwde
popa
and
fcom
cwde
xor
popa
mov
xchg
popa
das
sahf
fimul
gs
mov
inc
(bad)
(bad)
and
cmp
fnstsw
push
les
shl
(bad)
aad
daa
repz
(bad)
adc
test
jne
test
movs
stos
retf
shl
mov
int
xchg
(bad)
stc
outs
bound
test
push
sbb
int3
pop
std
push
in
mov
jl
fwait
popf
sbb
jg
arpl
adc
jle
mov
mov
rol
dec
xor
test
inc
lods
xchg
add
hlt
cmps
std
jne
into
mov
(bad)
mov
push
push
je
hlt
sub
xor
push
mov
cmp
xor
sub
and
enter
test
push
jnp
rcr
mov
ror
jnp
mov
pop
lods
xchg
push
(bad)
or
mov
ret
cwde
jmp
nop
sbb
enter
iret
fimul
pop
fstp
cmps
mov
inc
mov
jle
(bad)
pop
xchg
sub
cmovg
adc
add
push
ret
push
cmp
adc
inc
stos
nop
bound
ret
xchg
adc
pop
xor
cld
xor
push
adc
into
test
cli
pushw
shl
ficom
rep
mov
hlt
data16
fcomp
cmp
jae
xlat
iret
or
push
scas
inc
daa
fild
test
das
sbb
push
xchg
movs
(bad)
out
inc
pop
jp
mov
popf
push
xchg
mov
cmp
scas
fmul
inc
xchg
out
jns
cmp
stos
out
dec
fisubr
js
icebp
retf
hlt
fadd
dec
fidiv
mov
mov
xchg
pop
jnp
sar
imul
fisttp
out
jne
push
retf
fwait
mov
mov
std
jmp
push
lock
sti
aad
add
out
or
les
push
inc
stc
daa
outs
adc
mov
add
iret
movs
aaa
fsubr
mov
and
mov
les
and
push
shl
jne
es
inc
xchg
and
mov
push
lock
fisttp
mov
xor
fimul
(bad)
cmps
push
ins
test
and
outs
sbb
popf
xlat
iret
test
adc
nop
pop
pop
jne
mov
icebp
push
repnz
jl
push
jp
mov
ficomp
inc
and
mov
sbb
cwde
or
jle
add
inc
pop
and
popf
icebp
jno
cmp
cmp
cmc
pusha
ja
aad
adc
push
stc
ror
(bad)
stc
cmps
dec
dec
rcl
or
pop
test
jmp
stc
jmp
sbb
fcomp
mov
mov
rcr
xchg
ins
inc
dec
test
lods
std
rcr
xchg
jne
les
lds
add
mov
push
jg
sbb
mov
pop
pop
adc
mov
(bad)
jmp
xchg
out
jae
rcl
ret
aam
push
stos
sbb
hlt
mov
xchg
jmp
(bad)
xchg
xchg
push
(bad)
in
cmp
lds
imul
movs
xchg
call
cmp
and
rcr
rol
pop
data16
sbb
pop
rcl
pusha
mov
push
mov
xchg
ds
add
test
int3
sbb
push
cmp
daa
in
add
lock
mov
into
hlt
stc
sub
mov
das
cdq
jbe
test
in
mov
add
xchg
inc
mov
xchg
and
test
nop
call
daa
mov
test
sub
in
aaa
shl
test
aam
mov
or
sar
xchg
sub
ss
fild
mov
xor
retf
xchg
data16
rsqrtps
in
ds
jl
icebp
jmp
std
or
pop
fistp
add
mov
repnz
mov
movs
mov
lock
scas
cmp
pushf
imul
xchg
adc
cmc
and
or
loop
dec
jae
repz
stos
jae
mov
je
sbb
push
test
dec
int
leave
adc
add
sbb
sar
sbb
retf
adc
fstp
sbb
add
jae
push
sbb
movs
and
retf
enter
mov
imul
mov
jmp
pop
mov
or
xchg
idiv
out
outs
jo
stos
or
mov
and
sbb
sbb
dec
call
(bad)
jg
mov
sti
cmc
mov
mov
jb
jnp
aas
(bad)
push
dec
data16
dec
cmps
cmps
push
lea
push
sub
mov
xor
jns
fs
test
jmp
mov
dec
jb
repnz
retf
in
and
cmp
(bad)
imul
and
and
cdq
jge
inc
cwde
sar
sahf
push
sahf
pop
adc
cmp
sub
fst
mov
jle
push
and
inc
test
cmp
inc
push
lock
add
xor
push
aaa
cmc
test
cmp
mov
sbb
xchg
jne
stc
in
and
mov
pop
jmp
test
or
and
adc
or
enter
mov
out
xor
inc
push
cwde
arpl
and
xor
aas
and
outs
push
out
xchg
xchg
or
dec
cwde
into
xchg
enter
xor
popa
test
sbb
aaa
in
pusha
pop
xchg
sub
into
or
pop
outs
add
ins
dec
adc
out
pop
ret
(bad)
xchg
push
xchg
cli
loop
(bad)
lock
and
sbb
mov
jae
sub
fmul
mov
(bad)
pop
cli
pop
ins
js
mov
movs
mov
push
inc
mov
jl
jecxz
pushf
aas
retf
dec
in
cmovae
out
push
ja
(bad)
fldln2
pop
jne
es
aad
cli
stc
repnz
scas
or
sbb
jmp
pop
mov
mov
adc
pop
jle
js
push
movs
addr16
adc
xchg
mov
jge
mov
das
sub
mov
inc
mov
ret
and
push
cwde
mov
das
popf
push
or
jo
xchg
dec
inc
mov
mov
mov
mov
pop
mov
adc
xchg
mov
out
int3
mov
mov
push
les
xor
aam
pop
popf
pop
jecxz
mov
dec
jae
movs
xor
ins
mov
icebp
pushf
pop
dec
add
scas
add
idiv
add
dec
rcr
les
mov
cmps
and
push
pop
gs
add
mov
xchg
pop
push
adc
lahf
jmp
rcl
fadd
rcr
aas
retf
mov
pop
mov
dec
adc
cli
mov
jge
sbb
sub
aaa
adc
mov
xchg
into
popf
lods
out
mov
dec
ss
icebp
xchg
in
jae
arpl
add
js
pop
scas
jmp
into
cmp
(bad)
addr16
int3
cmp
mov
cmp
imul
cdq
jne
sbb
xchg
lods
mov
lahf
push
hlt
pop
ins
addr16
inc
jmp
jge
std
and
push
push
scas
icebp
cwde
cs
ds
out
ror
fs
scas
ins
loope
sahf
repz
and
jno
lods
icebp
cmps
jne
push
out
or
stos
sub
les
add
inc
mov
ficomp
jmp
fmul
mov
or
dec
sahf
pushf
inc
add
fsub
stos
add
mov
push
(bad)
icebp
imul
add
out
or
push
call
push
mov
push
mov
inc
cwde
jmp
rcl
add
pop
jo
sbb
std
cwde
sbb
cmp
inc
sbb
push
jecxz
pushf
jo
jg
cmp
cmp
dec
(bad)
js
push
cmp
pusha
and
arpl
jle
cmps
aaa
push
add
cmp
out
or
daa
add
sub
aam
out
es
xchg
ja
lds
std
push
inc
mov
cmps
push
out
outs
les
adc
leave
fcomp
xor
je
mov
add
xchg
sbb
test
push
pop
call
cld
outs
inc
dec
stos
jge
mov
dec
(bad)
push
add
imul
jae
jp
or
fldenv
cs
or
pop
jecxz
cld
jbe
dec
cmps
jg
(bad)
idiv
bound
mov
and
in
lea
sub
stos
sbb
dec
adc
inc
int
imul
icebp
cmp
(bad)
fcomp
push
in
test
dec
pop
cmps
push
in
mov
fmul
data16
jmp
push
repz
inc
(bad)
dec
inc
cld
add
push
fmul
cdq
dec
mov
push
push
or
jge
pop
out
add
or
scas
mov
cli
pop
inc
leave
dec
test
push
xor
es
push
out
shl
push
(bad)
xor
jecxz
ins
mov
call
js
mov
jns
lahf
push
push
cmps
out
pop
ins
out
mov
mov
ss
mov
xor
aaa
outs
mov
rol
sbb
jp
jmp
loopne
sub
clc
inc
and
hlt
fist
add
fisubr
push
leave
push
adc
mov
pop
in
jecxz
dec
jae
and
adc
bound
into
add
jno
mov
movs
jle
mov
inc
mov
or
std
mov
dec
sbb
and
mov
ss
jmp
into
idiv
fld
inc
int
lods
shl
out
push
or
movs
jge
leave
imul
lods
mov
rcr
adc
movs
shl
aaa
cmp
mov
sub
sbb
aam
mov
pop
add
mov
xor
jnp
(bad)
iret
inc
imul
jmp
and
iret
adc
(bad)
and
and
fld
or
inc
xchg
sub
cmps
bound
adc
aas
rol
xor
int3
shl
mov
xchg
inc
out
imul
ret
pop
cmp
dec
ret
and
movs
or
retf
cmp
out
inc
pop
int
retf
inc
test
or
add
stc
(bad)
sbb
add
nop
call
stc
lods
sbb
or
xchg
retf
rol
loopne
sbb
jle
cli
mov
sar
push
adc
aas
imul
jns
jle
cmps
push
sub
pusha
(bad)
mov
jne
test
imul
imul
sbb
mov
xchg
mov
gs
xor
cwde
push
pop
(bad)
in
jnp
test
imul
les
mov
lock
sub
aad
shl
cmp
rcr
in
push
cmp
mov
dec
in
mov
(bad)
xor
dec
scas
jne
jno
out
mov
add
mov
lea
mov
mov
push
retf
mov
push
xchg
add
jle
sahf
call
sbb
xor
inc
and
push
leave
aaa
mov
or
inc
clc
(bad)
xchg
jno
daa
adc
inc
jno
sbb
xchg
jae
inc
jecxz
mov
or
inc
out
mov
and
mov
inc
mov
cld
stos
dec
adc
sub
dec
loope
test
add
arpl
(bad)
adc
das
lock
call
jmp
mov
xor
call
xor
js
push
add
dec
(bad)
data16
into
ret
aaa
pusha
and
push
push
lahf
mov
push
(bad)
loop
xor
add
or
sar
xchg
xor
mov
mov
movd
xor
cdq
adc
mov
ja
cdq
pop
or
mov
xchg
addr16
test
push
mov
or
movs
aam
fwait
pop
bound
jp
das
pop
cmp
sti
and
mov
inc
sub
shl
sbb
or
out
outs
sti
sar
jp
shl
sub
sbb
mov
ror
out
sub
dec
sahf
push
sbb
xchg
cli
push
movs
out
test
jmp
jmp
or
stos
push
adc
lods
fistp
(bad)
push
adc
mov
cmp
push
js
ins
stc
adc
sub
cvttps2pi
ss
retf
fsubr
mov
in
sbb
xchg
mov
daa
je
shl
popw
cmp
enter
push
xor
and
pop
arpl
out
xlat
jecxz
fstp
dec
data16
int
int
cmp
ret
pop
enter
sbb
jne
test
loope
into
std
xchg
adc
mov
rol
into
jmp
pop
jmp
and
xchg
xor
repz
sbb
movs
pop
arpl
xor
sti
fwait
popa
push
std
mov
(bad)
pop
ror
(bad)
cmp
push
aaa
shl
mov
xor
inc
pusha
inc
jmp
sub
(bad)
stos
sar
stos
mov
cmp
ror
xchg
sub
out
inc
xlat
pop
or
xlat
mov
add
pop
into
mov
clc
cs
sub
lahf
xchg
or
neg
xchg
retf
fdiv
fistp
test
adc
test
adc
fisttp
dec
jmp
pop
mov
cmc
push
xchg
es
sub
mov
test
(bad)
jmp
sbb
dec
xchg
shl
mov
mov
arpl
outs
or
push
cmp
cmp
icebp
addr16
test
or
inc
je
sub
pop
mov
mov
mov
jae
xchg
dec
xlat
adc
pushf
xchg
jecxz
mov
jge
fdivrp
xchg
mov
xor
mov
nop
push
inc
or
inc
lock
xor
movs
fwait
pusha
mov
aam
sub
inc
dec
jp
mov
scas
jb
fsubp
xor
sbb
add
into
jg
xor
jb
gs
mov
bound
out
sti
(bad)
push
movs
add
and
mov
add
mov
sti
test
jg
push
sub
retf
xor
out
sub
jmp
jl
sti
rcl
nop
inc
arpl
cmp
stos
ret
mov
mov
jmp
lds
jnp
dec
xor
jl
ret
mov
jl
popf
cmp
xor
dec
movs
sbb
xchg
push
mov
push
fdiv
push
mov
sbb
sub
mov
dec
out
add
cmp
loope
add
fwait
mov
call
scas
ja
inc
or
jp
retf
call
sub
or
add
ins
adc
sub
pop
mov
push
loop
xor
data16
jbe
sub
pusha
pop
addr16
popf
and
in
pushf
idiv
pop
(bad)
outs
mov
adc
jbe
fistp
pop
sbb
pop
pop
xchg
push
adc
aas
fsubr
lea
xor
dec
mov
push
bound
arpl
test
and
pop
jns
push
sub
sbb
inc
call
aam
mov
dec
mov
or
sti
std
lea
push
loopne
xchg
xchg
adc
rcl
in
ins
in
lds
into
out
je
dec
add
jmp
sub
push
xor
cmps
adc
ror
adc
ret
inc
mov
dec
dec
imul
inc
int3
push
pusha
into
inc
push
sahf
mov
mov
ins
pop
pusha
inc
rol
mov
and
cmp
fidivr
or
xor
lock
cmp
and
push
jmp
jp
adc
imul
(bad)
xchg
das
pop
push
jb
lahf
sahf
pop
xchg
ja
enter
adc
mov
push
add
or
clc
retf
daa
scas
xor
cmps
nop
sub
daa
jle
lahf
pcmpgtd
mov
(bad)
loopne
ret
inc
sub
fs
add
xor
iret
jne
dec
mov
ds
shr
dec
pop
jmp
cld
sub
imul
hlt
(bad)
bnd
inc
or
mov
(bad)
push
(bad)
mov
push
ret
pushf
pop
and
into
mov
jbe
test
push
aam
cdq
jbe
dec
jbe
mov
dec
xor
mov
vmwrite
lods
loop
je
and
adc
or
cmp
sbb
or
std
inc
pushf
mov
icebp
and
add
sub
icebp
outs
test
xlat
movs
je
ins
jmp
xlat
js
outs
aam
jno
xchg
jbe
push
ja
jb
dec
(bad)
fdivp
out
jb
add
mov
lea
enter
jae
add
jnp
sub
aam
xchg
cmp
sbb
jo
dec
xchg
push
jp
ret
jp
jg
shl
mov
out
scas
cmc
pop
popf
cdq
push
adc
(bad)
mov
xchg
mov
out
cli
and
lea
inc
clc
pop
dec
imul
imul
outs
and
out
popf
mov
rcl
xchg
jp
loop
mov
and
popa
xchg
xchg
mov
and
and
aas
push
fisubr
and
dec
mov
adc
pop
lea
lds
sbb
sti
add
mov
test
out
call
movs
inc
mov
adc
sahf
xor
outs
repnz
repnz
scas
popf
hlt
imul
sti
mov
add
movs
out
mov
push
je
adc
aaa
push
push
mov
int3
push
scas
xchg
nop
push
ror
jb
sbb
push
test
lock
iret
mov
dec
dec
cmp
mov
sbb
jns
xor
add
bound
jno
test
psllq
cmps
ret
stos
mov
pop
mov
xor
sbb
adc
xchg
mov
ins
outs
mov
mov
rcr
popf
das
fsubp
cwde
add
addr16
pop
jns
test
adc
outs
push
mov
adc
cmp
(bad)
cmps
aas
lds
jmp
push
popa
jae
aaa
jmp
retf
scas
or
sub
cmp
push
sub
iret
mov
scas
inc
inc
out
adc
add
(bad)
sti
and
adc
pop
cdq
xlat
sub
inc
fnstcw
dec
xor
xor
test
push
lods
add
push
ret
pop
adc
sbb
xor
inc
out
mov
mov
mov
push
inc
jmp
cld
stos
lock
ret
sbb
int
mov
xlat
mov
fwait
push
xchg
hlt
enter
and
inc
iret
or
ds
sbb
ja
pop
es
xor
out
adc
shl
lods
push
mov
mov
pusha
pop
fsub
fwait
sub
add
mov
jbe
sbb
(bad)
cmp
cmp
sahf
inc
jmp
fild
push
push
add
jmp
push
out
cmp
push
pushf
ret
movs
scas
into
ins
jb
jge
scas
mov
imul
sub
xchg
or
mov
pop
add
fbld
pop
stos
lods
inc
sbb
lock
add
pushf
mov
ror
add
push
add
(bad)
jecxz
mov
adc
sub
enter
std
ret
fsub
push
je
inc
mov
mov
inc
outs
pop
into
loop
in
and
mov
jnp
push
cmp
dec
dec
fwait
hlt
adc
pop
sbb
lods
adc
cmp
ins
mov
mov
pop
sahf
fs
fucomip
sub
add
clc
in
pop
fiadd
dec
rcr
aaa
inc
lahf
idiv
jb
jmp
lds
push
dec
int
pop
and
add
xchg
lods
test
mov
in
call
adc
stos
(bad)
xor
push
jnp
fdivr
iret
mov
shr
pop
pop
loopne
push
out
loope
push
aaa
leave
and
adc
aas
mov
je
add
lods
fdivr
push
or
in
xchg
pop
pop
out
mov
leave
fs
pop
xor
cwde
mov
ficom
or
add
pop
cmp
jp
mov
rcl
dec
xor
out
push
icebp
pop
(bad)
or
adc
fsub
push
or
out
test
pop
in
out
adc
outs
push
call
ret
jmp
out
cmc
push
cmp
stos
mov
daa
loop
cwde
inc
lea
add
jbe
mov
inc
sahf
int
mov
fwait
out
psllw
mov
movs
pop
in
mov
sbb
push
xor
jns
adc
call
push
jecxz
xor
adc
clc
(bad)
lahf
sbb
push
sub
mov
aad
retf
enter
sub
jne
mov
push
movs
add
dec
jmp
or
mov
or
into
push
sub
add
(bad)
(bad)
enter
xor
inc
cmps
fs
mov
iret
add
mov
add
daa
ins
aad
iret
pop
pushf
cld
(bad)
les
dec
and
xor
fidivr
push
sbb
pop
xchg
inc
ss
stos
sub
add
and
mov
xchg
(bad)
sbb
lahf
push
and
scas
out
sahf
jnp
cs
loop
fldcw
lahf
pop
pop
or
cmovae
mov
pop
fsub
test
mov
jl
mov
or
in
jno
mov
rol
fist
jbe
repnz
push
mov
stos
pop
popf
xchg
jl
mov
repz
fs
rcr
push
jo
jmp
or
cdq
arpl
sbb
pop
push
lahf
mov
daa
mov
dec
aad
movs
xor
or
out
cdq
adc
sub
enter
fsubr
cli
sub
push
and
stc
mov
jno
das
mov
adc
mov
es
jmp
or
push
ret
dec
fld
xchg
jbe
cld
in
mov
cmp
add
jbe
dec
dec
(bad)
mov
out
mov
add
(bad)
fwait
cmc
jmp
inc
mov
push
jecxz
mov
dec
mov
xchg
pop
in
adc
addr16
outs
pop
mov
mov
push
cmp
shl
add
repnz
cmp
dec
imul
js
loope
mov
retf
inc
xchg
pop
mov
sbb
pop
sub
in
xchg
xchg
sbb
push
test
jl
mov
out
mov
test
fisubr
call
movs
push
shr
movs
adc
push
daa
sub
adc
xchg
pop
cmc
push
push
mov
and
nop
cwde
(bad)
xor
fucomip
shr
int3
mov
adc
xchg
pushf
in
jg
clc
aas
and
add
fistp
and
sub
clc
into
mov
fcomp
add
outs
inc
sub
xor
in
cmp
pmuludq
fucomi
lods
push
jbe
popa
and
mov
jnp
fist
pop
mov
(bad)
and
fwait
mov
je
or
movs
sti
cmp
sbb
loop
in
dec
mov
movs
hlt
sar
test
pop
dec
ins
loopne
inc
(bad)
mov
inc
test
push
scas
cmp
nop
fld
xchg
nop
dec
ficomp
inc
and
jno
push
scas
gs
repnz
data16
ja
xchg
test
mov
cdq
gs
test
mov
xchg
inc
mov
cld
cmp
dec
iret
les
xor
test
jmp
mov
ret
es
mov
ss
test
add
cmp
adc
popf
push
in
mov
cld
mov
int
dec
pop
pop
lock
push
mov
jg
ja
adc
pop
mov
popf
sub
aad
fucomip
or
fdiv
loope
rcl
xor
jbe
lock
xchg
or
mov
adc
(bad)
aaa
scas
push
daa
sbb
test
add
call
and
xchg
mov
xor
repz
lahf
mov
loop
and
fldenv
fmul
mov
mov
mov
cmp
adc
jno
and
je
sbb
mov
dec
adc
xor
lods
cmp
push
mov
outs
lahf
push
mov
cs
cli
adc
mov
fidivr
jl
cwde
or
cld
mov
popa
iret
inc
mov
test
(bad)
push
shl
and
sub
imul
cmp
fwait
mov
jle
xchg
int
pop
jo
(bad)
or
movs
mov
inc
push
push
mov
push
rol
mov
jo
aam
pop
lea
xor
mov
dec
fs
int3
lods
mov
cmp
or
xchg
pop
push
ja
cmp
sbb
aad
test
fild
js
pushf
mov
jbe
(bad)
ins
adc
lods
cdq
xchg
sbb
mov
jl
xor
mov
and
mov
in
mov
mov
test
mov
mov
ins
pushf
repnz
xor
push
xor
inc
shl
jbe
scas
dec
sub
scas
mov
cmp
ret
cld
inc
sbb
adc
add
adc
mov
push
cdq
add
movs
dec
xchg
mov
push
inc
dec
gs
sbb
dec
stos
or
pop
pop
jg
pop
test
add
cwde
jmp
mov
arpl
(bad)
mov
outs
cmp
fcom
mov
jbe
les
jmp
sbb
sbb
pop
jle
push
xchg
sbb
push
(bad)
inc
leave
(bad)
aas
xor
push
sbb
sub
jmp
mov
jle
dec
scas
scas
mov
mov
mov
jmp
cmc
cli
jne
fisub
xlat
add
xchg
scas
repz
cmp
(bad)
mov
test
mov
mov
inc
(bad)
pusha
in
sbb
push
or
int3
jno
mov
ret
out
shl
jle
gs
or
push
xlat
retf
and
pusha
int
(bad)
repnz
sbb
shl
cmp
mov
addr16
lahf
inc
push
jbe
sbb
mov
jne
sub
mov
shl
outs
sub
cmps
(bad)
mov
push
aas
adc
inc
xor
dec
pop
add
movs
inc
jge
adc
lods
movs
xchg
cdq
sbb
lds
(bad)
retf
retf
cmps
and
cmp
or
(bad)
pop
out
sub
psubw
sbb
jnp
xor
ret
leave
cld
leave
fst
pop
les
psrad
xchg
(bad)
std
jne
xor
jge
sbb
inc
jp
imul
pop
sar
cmp
hlt
ins
ror
and
fwait
pop
shl
cmc
pop
xor
popf
cmp
xor
pop
call
mov
xchg
pushf
(bad)
pop
add
nop
or
test
inc
cmp
pop
mov
pushf
xchg
in
mov
fistp
and
test
ja
jb
stos
(bad)
mov
inc
mov
sti
xchg
fld
imul
jle
inc
jne
mov
jno
int
sbb
sub
push
add
std
mov
imul
lods
dec
int3
scas
(bad)
aaa
ffreep
adc
sub
cdq
mov
retf
cmps
lahf
and
jo
scas
scas
jae
loope
das
imul
adc
and
adc
pop
mov
les
mov
mov
loop
hlt
stc
mov
inc
adc
pop
in
inc
imul
pop
and
sub
or
xchg
(bad)
mov
pop
loopne
sar
adc
inc
jno
jb
test
into
mov
mov
in
mov
dec
shr
dec
mov
repz
push
es
(bad)
push
jle
cmp
pop
rcr
and
lds
out
adc
jmp
into
inc
(bad)
test
mov
pop
adc
xor
sbb
sar
fadd
jmp
inc
mov
jmp
xchg
sub
mov
mov
cmp
pop
sub
dec
xlat
sub
enter
shl
mov
ins
mov
push
jb
dec
test
cmp
mov
sbb
lods
sbb
out
imul
cmp
push
dec
aas
xor
sub
mov
cmps
sbb
lds
lock
shl
xor
inc
push
xor
jnp
in
data16
test
mov
push
push
mov
scas
jns
dec
xor
add
in
xchg
or
or
pop
sub
shl
rol
xor
push
mov
sbb
ins
sbb
push
push
dec
add
loopne
dec
test
imul
push
outs
jle
lock
sbb
mov
xchg
aaa
xchg
lahf
test
adc
mov
fabs
push
push
sub
stos
xchg
or
ins
fidivr
movs
jge
xchg
xchg
shr
jbe
mov
or
mov
(bad)
fcom
outs
inc
xchg
hlt
xchg
lahf
fist
inc
mov
mov
jmp
retf
jmp
or
out
xchg
mov
mov
mov
pop
xchg
imul
add
retf
and
inc
ret
icebp
cmp
in
xor
rcr
or
dec
mov
cs
iret
inc
inc
cli
sub
xor
test
scas
or
mov
add
rol
push
mov
add
imul
mov
xor
cmp
mov
in
ins
bound
sbb
add
cmps
adc
es
les
inc
hlt
gs
and
cmp
out
in
push
sbb
sbb
icebp
cmp
jns
in
xchg
sbb
cmp
(bad)
fs
dec
sub
and
xchg
xor
add
inc
dec
pushf
clc
std
iret
cmp
repz
neg
mov
cmp
cdq
fisubr
pop
dec
les
adc
xor
push
dec
int3
xlat
(bad)
test
mov
sub
xor
jmp
cmp
mov
cmp
mov
mov
pop
mov
push
adc
mov
fs
scas
cmp
out
mul
outs
pop
loop
or
push
test
(bad)
jge
scas
mov
mov
pop
stos
dec
dec
outs
scas
xchg
jne
mov
pop
test
out
jo
(bad)
cli
lods
mul
jmp
xchg
pop
test
and
fs
ins
inc
xchg
push
test
mov
cmp
clc
dec
sub
inc
sbb
pushf
(bad)
sub
xor
in
inc
stc
push
sub
push
dec
gs
in
and
jb
jnp
sub
call
loop
dec
push
mul
mov
mov
out
push
addr16
xlat
inc
out
mov
sbb
ficomp
mov
mov
clc
cmp
and
mov
adc
jecxz
or
out
cmp
or
xchg
cmps
mov
iret
inc
out
push
sbb
out
daa
add
es
push
arpl
in
js
sub
inc
frstor
push
and
fwait
mov
jae
mov
push
adc
std
das
mov
push
jp
add
jnp
inc
mov
je
xchg
xlat
out
pop
mov
or
dec
call
ficom
(bad)
push
sar
and
xchg
iret
outs
xchg
aas
cmp
jl
dec
mul
scas
adc
cs
adc
pop
stos
in
test
movs
jns
mov
ret
xchg
call
sub
cwde
ja
add
popf
in
and
mov
mov
cs
lds
adc
mov
popf
test
mov
xchg
xor
ficomp
pusha
mov
inc
inc
scas
gs
in
pop
xor
or
pop
ret
cmc
ror
pop
push
mov
push
(bad)
rcr
not
mov
pop
mov
xchg
lea
(bad)
jecxz
pop
sub
icebp
cmps
xchg
mov
jle
out
mov
dec
xor
sahf
ins
loop
(bad)
mov
pop
(bad)
daa
inc
or
push
(bad)
sub
cld
test
fnsave
mov
xchg
test
cmp
imul
icebp
(bad)
lock
jb
jmp
inc
call
into
xchg
dec
mov
stos
inc
or
fwait
jb
movs
cmp
ds
dec
daa
lods
das
xchg
mov
jno
adc
ds
pusha
jecxz
cmc
xor
mov
ret
dec
mov
or
in
adc
cmps
push
xchg
jbe
je
imul
push
and
push
(bad)
adc
hlt
das
adc
ror
pop
cmp
dec
inc
mov
int
fwait
dec
add
or
aad
adc
push
test
push
inc
jle
pop
push
jg
push
outs
ret
pop
xlat
dec
push
inc
fsubr
pusha
mov
push
xlat
fst
mov
jmp
mov
rcl
sub
or
jg
data16
loop
hlt
dec
jmp
scas
sub
inc
outs
dec
out
sub
inc
je
or
jno
inc
addr16
and
loopne
cmp
sub
and
call
ret
add
mov
mov
data16
xchg
push
lods
jo
cdq
mov
jb
iret
jecxz
test
xor
xor
imul
shl
push
and
int3
aam
sti
ret
ins
cwde
mov
or
push
dec
scas
ret
stos
mov
mov
dec
aas
fcmovne
mov
xor
inc
ins
mov
xor
or
fiadd
cmp
pop
xchg
sar
push
sbb
out
ja
std
push
repz
test
jo
jg
sub
bound
xchg
rcl
cmps
enter
outs
ret
movs
cmp
int3
je
cmp
mov
adc
bound
mov
or
js
in
retf
mov
sub
jecxz
ins
sbb
jg
adc
ficomp
inc
gs
push
pop
mov
push
mov
mov
jge
data16
add
(bad)
not
fcom
ss
movs
fisttp
nop
bnd
or
cmp
not
pop
xchg
cs
ins
dec
je
call
lea
mov
jmp
nop
mov
fisttp
pop
mov
das
xchg
test
outs
cmp
mov
mov
stc
add
daa
add
aam
loop
xchg
cmp
rol
adc
or
sub
loopne
adc
cmc
add
imul
push
xchg
mov
aam
sub
jmp
neg
jae
push
cmp
add
clc
jge
and
jno
stos
add
sub
ds
je
fs
loop
addr16
mov
stos
movs
loopne
or
add
push
and
jae
shl
cmp
xchg
cli
xchg
cwde
clc
retf
int3
lock
xchg
xor
retf
lds
xchg
xchg
imul
int3
imul
push
dec
int
inc
push
hlt
jb
enter
or
jle
(bad)
mov
lds
loopne
das
sbb
push
or
jecxz
icebp
jnp
outs
jg
pop
push
mov
dec
push
push
out
dec
dec
rol
cwde
div
aam
cwde
ficomp
shr
stc
cmp
jecxz
pop
jp
bound
scas
and
movs
jb
arpl
in
rol
lahf
ret
pop
shl
jmp
mov
test
mov
add
repz
push
das
push
call
add
addr16
push
bound
cmps
rol
jl
mov
push
adc
push
icebp
leave
ret
or
mov
sbb
outs
lock
mov
jo
sub
popf
retf
std
cmps
ret
pushf
shl
retf
push
sbb
push
push
sbb
ffreep
sub
pop
push
cmp
(bad)
xchg
shr
jne
push
inc
sbb
test
in
out
pop
sti
shl
push
mov
push
add
inc
jno
loope
outs
dec
neg
daa
stos
ror
scas
setne
mov
lea
inc
mov
vmulpd
mov
in
fild
pop
das
daa
jmp
and
push
inc
cmp
retf
out
repz
dec
jbe
retf
jno
pusha
pop
mov
enter
icebp
fisubr
mov
and
gs
sar
sub
imul
fsubr
adc
out
mov
cwde
jae
retf
lods
icebp
xor
pop
cmps
jo
int
daa
ins
pop
mov
ret
xchg
sahf
adc
sti
push
pop
pop
xor
sub
fnsave
lods
adc
das
and
std
xor
add
imul
enter
into
or
loop
mov
lods
inc
xchg
out
mov
(bad)
cmp
imul
(bad)
in
push
test
and
jl
push
aaa
pop
out
add
or
or
adc
inc
mov
int3
(bad)
jecxz
aaa
fcmovnb
pop
or
das
and
push
sub
push
or
push
loope
stos
std
xchg
xchg
inc
xchg
lock
sahf
jle
fdiv
(bad)
mov
jns
xchg
les
inc
and
fcmove
movs
pop
and
fist
lods
lds
cmp
push
pop
in
push
xor
mov
mov
enter
dec
test
(bad)
fbld
mov
and
xchg
or
shl
js
repnz
sti
(bad)
jmp
pop
xor
movs
mov
and
mov
ds
cmp
inc
mov
adc
rol
xchg
test
gs
jp
mov
jae
push
int3
inc
jp
mov
jge
ins
pop
pushf
jle
jae
les
fnstsw
jb
data16
bound
in
cmp
xchg
xlat
lds
adc
in
mov
mov
pminsw
les
rcl
pop
(bad)
fucomip
dec
push
ror
imul
mov
add
pop
mov
(bad)
loopne
cmp
jbe
outs
loopne
ins
in
(bad)
push
push
scas
cmps
mov
and
ins
scas
pop
movs
mov
dec
sbb
mov
or
jge
mov
jg
mov
enter
cdq
dec
sbb
mov
test
xchg
push
js
adc
rcl
xchg
push
inc
xor
in
jno
xchg
add
dec
jmp
movs
sub
inc
mov
test
outs
and
jmp
pop
cld
je
mov
cmp
push
and
xor
or
dec
push
mov
test
dec
out
out
xchg
scas
add
movs
inc
xor
inc
jo
jmp
adc
lods
push
and
mov
jo
push
push
ja
(bad)
jns
popa
push
inc
(bad)
outs
iret
and
add
inc
test
pusha
loope
push
mov
ret
pop
dec
fs
addr16
or
or
mov
gs
xor
inc
out
pop
enter
sub
cld
stos
adc
xchg
mov
mov
popf
push
je
div
mov
sbb
dec
fidivr
ins
ds
xchg
mov
stc
inc
xchg
pushf
jl
test
jge
scas
push
ret
test
lahf
lods
adc
sbb
arpl
add
push
ss
sbb
xchg
(bad)
sub
jle
lods
retf
clc
cmp
push
sti
xchg
lds
jns
dec
sti
sbb
cmp
jle
mov
gs
fimul
pop
fstp
add
sub
mov
out
loopne
scas
aaa
std
popf
mov
jno
lods
push
push
leave
inc
xchg
mov
lahf
arpl
imul
pop
ins
jo
daa
mov
aam
out
fdivr
inc
add
test
dec
and
sub
inc
sbb
jecxz
sti
cmc
std
and
push
(bad)
(bad)
sahf
(bad)
dec
sti
cwde
aam
pushf
(bad)
ins
rol
cmp
in
sbb
fcmovnu
rcl
sbb
out
xchg
fnsave
sti
sbb
sub
pop
mov
xor
jns
push
jb
scas
jp
call
fwait
inc
jae
lahf
xor
pop
popf
fisub
inc
pop
and
pop
sub
leave
inc
fild
inc
push
add
inc
arpl
dec
push
jae
mov
xchg
pop
scas
sbb
sub
pop
push
jns
mov
cmp
add
or
push
enter
das
fwait
and
add
cmp
ja
pop
aad
or
mov
dec
int3
gs
xchg
pusha
jle
adc
std
outs
or
mov
clc
lahf
hlt
mov
xchg
cmp
push
push
adc
cld
in
(bad)
push
repz
xor
jno
cdq
inc
push
addr16
add
rol
mov
xchg
pop
hlt
adc
lods
push
pop
hlt
stos
push
pushf
cmp
adc
cld
cmc
iret
and
mov
and
mov
outs
adc
lods
xchg
inc
jle
neg
inc
test
stos
add
mov
btc
fdivr
sub
jns
mov
test
scas
jmp
cld
loope
xor
inc
cwde
xor
push
dec
es
(bad)
fsubp
adc
sbb
sub
imul
push
(bad)
gs
outs
enterw
lahf
sbb
loopne
pop
jge
inc
push
arpl
rcl
pop
jbe
and
sahf
lods
in
test
(bad)
ins
popf
inc
addr16
js
cs
scas
push
(bad)
inc
jbe
mov
mov
or
mov
push
repnz
icebp
or
add
shr
fisubr
test
test
dec
into
cmp
sub
adc
fcomp
in
mov
ret
stc
xor
fsubrp
jge
jg
or
loopne
jne
adc
cmp
ss
call
sbb
mov
or
loopne
stos
push
std
rcl
out
add
mov
xor
adc
mov
and
stc
push
clc
and
aam
retf
loope
outs
fadd
pop
fadd
dec
ficomp
rcl
aam
ret
and
xor
fistp
push
push
mov
xchg
xor
sahf
jbe
xor
push
nop
rol
xchg
adc
xchg
stos
lahf
push
push
es
scas
inc
pop
aam
shl
mov
jae
cmp
loopne
cmp
fwait
push
xor
add
ror
retf
xorps
xchg
add
ins
sbb
xor
and
xor
dec
push
mov
ja
out
jmp
add
xlat
inc
mov
sub
cs
lds
mov
and
adc
jle
loopne
ret
add
mov
outs
sbb
or
adc
rcl
push
adc
adc
jle
(bad)
retf
aad
mov
shl
in
hlt
test
push
mov
dec
mov
xor
adc
mov
dec
and
les
and
imul
mov
cmc
inc
ret
xor
shr
int3
ret
adc
push
sub
xor
inc
cli
js
sbb
cs
mov
push
aad
jmp
ja
rcr
pushf
xor
or
mov
addr16
test
mov
push
call
mov
push
dec
inc
hlt
push
dec
sub
inc
jno
repnz
bound
ins
add
and
mov
sbb
cmp
loopne
ins
sbb
and
or
fnsave
test
dec
add
lods
clc
cmp
mov
aam
mov
inc
scas
adc
jne
xor
or
ins
inc
sbb
sub
(bad)
push
in
or
dec
int
in
int
mov
xor
loope
xor
push
mov
jb
enter
jb
jmp
out
xor
jle
test
pop
data16
ffreep
aas
inc
popa
test
cmp
xchg
aam
jno
add
pop
sti
inc
sahf
mov
mov
test
mov
cmp
push
data16
or
jne
sbb
inc
lods
test
(bad)
adc
lods
aas
jecxz
fs
and
addr16
xchg
rcl
dec
mov
pop
test
xchg
clc
fcom
test
aam
and
cmc
fist
jns
fdivp
jp
dec
mov
cwde
fwait
pop
ret
fidivr
leave
push
scas
xor
gs
push
sbb
mov
sti
xor
xor
dec
add
xor
ins
test
in
fidiv
mov
mov
push
dec
xchg
pusha
aam
enter
push
jl
in
cmp
shl
xchg
cmp
inc
fcom
outs
cmp
outs
adc
std
outs
jbe
xchg
sahf
cmp
(bad)
fild
hlt
ror
jb
jne
out
outs
sbb
in
and
pop
add
ret
ss
inc
pop
dec
(bad)
ins
sbb
dec
cdq
stos
call
mov
addr16
add
xchg
jne
jp
cmps
jg
sbb
jnp
mov
push
scas
fadd
aaa
add
or
dec
ds
stos
and
in
xchg
sbb
call
int
xchg
shl
push
stos
push
fsub
lods
out
xor
gs
jl
cmp
sar
ror
in
or
in
mov
fisttp
xchg
repz
or
cmc
jb
popf
movs
mov
movs
cmp
out
in
jmp
mov
cs
pop
push
sbb
mov
iret
ins
dec
lods
push
mov
scas
mov
ret
and
inc
and
outs
jl
daa
mov
aaa
ins
sbb
cmps
(bad)
leave
xchg
in
cmp
mov
add
call
mov
movs
ror
test
ins
push
sbb
add
int
push
ret
movs
in
jl
mov
xchg
test
lods
and
add
shr
jmp
mov
xchg
test
mov
cli
lds
loopne
lea
push
add
inc
and
and
bound
mov
xchg
sbb
or
jno
pop
xchg
ins
out
inc
repnz
ror
call
xchg
mov
imul
cmp
and
(bad)
lods
movs
dec
aad
test
add
push
inc
sub
sbb
jle
mov
sub
cmp
mov
cmp
in
xor
das
cmp
fiadd
sub
push
in
adc
adc
loope
jle
and
fwait
dec
in
push
fwait
cdq
jae
pop
out
popa
xchg
cmp
imul
test
xor
mov
retf
gs
shl
pop
jg
and
out
fidivr
sti
xor
pushf
add
xchg
or
or
(bad)
rcl
jecxz
div
xor
movs
xor
cs
or
push
imul
iret
and
or
mov
mov
or
fadd
scas
imul
adc
dec
sbb
imul
push
adc
int3
lock
mov
out
shl
xor
mov
out
push
sub
fild
in
xchg
adc
arpl
pop
mov
mov
dec
xlat
and
adc
dec
lods
enter
mov
loope
(bad)
fchs
daa
pop
mov
cmp
and
jb
cmps
push
popa
sub
(bad)
js
sub
js
push
mov
rcl
jecxz
inc
rcl
addr16
cmp
sub
add
lahf
lods
inc
test
sti
stc
mov
xor
movs
pop
(bad)
(bad)
sbb
lods
sahf
mov
lods
in
sbb
jle
(bad)
ror
cwde
jl
adc
adc
xor
jp
add
pop
rcl
aas
dec
or
cmp
std
mov
outs
outs
adc
test
pop
push
xor
retf
xchg
mov
repnz
bound
scas
dec
cmps
or
movs
xor
cmp
in
retf
fbld
push
repz
xor
sbb
int
cmp
add
mov
ins
add
clc
pop
mov
inc
push
xor
or
dec
mov
fimul
data16
cli
mov
iret
add
pop
xor
push
xor
mov
mov
call
inc
cmp
lock
mov
mov
sbb
popa
dec
in
fld
add
aaa
sub
out
pop
or
call
repnz
mov
shr
and
lods
mov
sub
outs
push
mov
jle
arpl
add
cmp
xor
lahf
ins
jnp
xor
mov
lea
das
jmp
pop
and
mov
scas
ret
and
inc
mov
repz
jmp
mov
aad
cmp
daa
data16
imul
push
mov
push
out
mov
lahf
mov
push
cs
push
jns
call
inc
fistp
int3
or
scas
pop
xchg
mov
and
into
sub
and
sti
je
sbb
les
sti
popf
ficom
push
jle
xor
push
or
cmp
lods
sub
mov
shr
mov
pop
rol
in
stc
popa
aam
xchg
sbb
mov
iret
cmp
add
mov
ficomp
retf
xchg
xor
test
sbb
cpuid
sub
push
stc
mov
or
cld
jo
and
push
cmp
aam
mov
cmps
push
daa
jle
mov
xor
jmp
es
dec
aas
sar
mov
mov
int3
sub
ss
(bad)
stc
jns
lahf
pop
push
(bad)
cdq
mov
cmp
pop
mov
mov
mov
mov
in
pop
(bad)
lods
xor
push
push
push
adc
mov
cs
push
xor
ja
xor
outs
xlat
inc
dec
or
mov
xchg
inc
call
lods
and
ins
stc
or
pop
cld
adc
mov
mov
mov
jp
mov
xchg
int
pop
or
fistp
cli
sbb
lods
iret
adc
pusha
jmp
jp
sbb
or
das
aaa
jnp
mov
neg
call
clc
sub
mov
sar
daa
mov
loope
dec
mov
mov
(bad)
pop
xchg
push
ficom
scas
loopne
sar
inc
out
pop
cmp
mov
sahf
pushf
shl
jge
mov
or
lds
js
or
xor
dec
or
(bad)
push
scas
cli
sub
clc
jp
xchg
push
mov
or
test
push
clc
mov
sbb
dec
dec
and
cmp
std
ret
adc
sbb
cmp
(bad)
pop
in
stos
or
cmp
add
xor
es
push
pop
stos
dec
add
loopne
enter
cmp
std
sbb
fwait
call
xor
and
xchg
pop
imul
jne
add
inc
push
jne
dec
test
inc
in
js
mov
into
aad
jns
ds
pop
sahf
adc
mov
push
in
mov
loop
pop
hlt
cmps
jns
cmp
nop
add
add
push
jmp
and
not
jp
stos
sub
(bad)
mov
xchg
lods
cmp
bound
mov
in
ror
cmp
cmc
cmc
jbe
push
mul
inc
imul
in
jp
stos
dec
addr16
sub
retf
xchg
cld
pop
add
push
dec
inc
jmp
mov
in
and
mov
push
xchg
mov
dec
or
push
popa
test
inc
or
inc
pop
clc
loope
mov
outs
adc
pop
add
sub
(bad)
call
aad
mov
loopne
push
xchg
pop
stos
in
cs
pop
jl
std
lock
mov
in
ja
and
pop
into
jo
out
and
aad
lahf
xchg
sbb
not
jno
sbb
(bad)
mov
pop
pop
ficomp
js
call
add
arpl
add
lahf
jo
xlat
or
mov
push
mov
sbb
out
and
xchg
jbe
mov
inc
clc
stos
pop
inc
adc
pop
arpl
sbb
and
sbb
imul
jecxz
ret
pop
xor
jg
js
fbld
je
mov
aaa
call
aam
sub
adc
loopne
es
jg
sbb
and
les
sub
call
sub
adc
jb
ror
enter
inc
and
pop
dec
mov
push
pushf
test
push
jle
int
cmp
(bad)
mov
fucomi
inc
add
xor
test
pop
push
mov
add
jmp
inc
adc
addr16
push
push
in
xchg
pop
aad
mov
jns
adc
mov
add
mov
add
and
sbb
cmps
cmp
loope
test
add
sbb
mov
int
in
stc
jne
fistp
lods
inc
adc
xchg
dec
les
lock
mov
loopne
cli
rcr
dec
jo
cmp
test
fisttp
neg
sub
hlt
movs
paddusb
not
dec
pop
sub
scas
mov
or
sub
shr
loope
cmps
pop
or
fcomip
sbb
dec
cs
push
ret
das
cmps
aas
cmp
pop
enter
in
pop
pusha
mov
iret
test
pop
lock
pushf
lea
xchg
fwait
aam
fnsave
jecxz
xlat
and
cwde
pop
retf
cmp
add
out
clc
jmp
xchg
mov
lock
shr
stos
out
cmp
fimul
imul
sbb
jmp
loope
xor
and
aas
mov
mov
out
pop
outs
adc
add
lock
sub
mov
inc
fs
sub
shl
jbe
lea
xchg
inc
mov
push
into
icebp
xchg
aas
mov
in
pop
fistp
and
jne
sti
cld
sbb
(bad)
add
sub
int
(bad)
xchg
iret
out
cdq
jns
scas
fwait
outs
shl
inc
add
mov
or
out
mov
sub
sub
jns
mov
mov
fmul
pusha
fidivr
lahf
sbb
das
in
cmps
adc
jb
adc
xchg
inc
mov
stos
cs
lods
(bad)
xchg
xor
out
aad
xchg
mov
jg
sub
dec
cmp
cld
jmp
or
shl
pop
adc
jecxz
add
or
aad
(bad)
into
mov
in
jmp
inc
push
cmp
rcl
fimul
or
mov
jmp
xchg
inc
cmp
pop
jle
loope
pop
daa
test
cs
rol
xchg
(bad)
mov
jp
jne
jmp
sbb
(bad)
or
repnz
sub
mov
lds
mov
inc
loop
sub
leave
shl
ret
fwait
dec
push
xor
sbb
cld
and
stc
cmps
jns
mov
cmpps
pop
or
mov
loope
and
rcr
fnstsw
cmp
mov
jb
mov
mov
popa
enter
loope
inc
mov
ret
cmp
sbb
shr
vmovaps
xchg
test
add
dec
sub
cmp
out
imul
inc
push
inc
ins
lahf
neg
cld
jmp
jp
fnsave
in
mov
rcl
cmp
repz
inc
mov
add
xchg
mov
js
mov
std
mov
rcr
pop
mov
rep
xchg
(bad)
scas
mov
jns
stc
cmp
sub
adc
loope
sar
add
cmp
inc
mov
iret
sub
push
sbb
sahf
aas
(bad)
xchg
push
xchg
push
repz
imul
inc
xor
clc
(bad)
adc
les
in
jno
xor
mov
fs
push
or
pushf
fwait
pop
test
xchg
mov
sub
in
and
out
mov
retf
push
fdivp
mov
xor
out
and
dec
nop
out
iret
xlat
adc
mov
popa
int
loopne
lods
lahf
imul
mov
iret
ds
pusha
add
and
lods
lds
mov
shl
adc
test
std
ret
mov
mov
mov
out
inc
adc
in
adc
loope
inc
sbb
or
inc
cmc
loope
ror
jnp
mov
inc
gs
fwait
jg
mov
xchg
push
sti
lods
ins
mov
push
add
xchg
movs
mov
mov
rcr
jb
ret
es
aad
rol
pushf
mov
imul
mov
fst
push
dec
xchg
push
jg
push
mov
call
push
aam
or
bound
nop
aaa
adc
inc
fsub
aaa
inc
adc
lea
jnp
jo
mov
ret
push
ss
movs
or
nop
push
push
push
cli
sbb
fiadd
dec
test
popa
es
xchg
jge
mov
mov
and
cld
das
cmp
inc
outs
dec
mov
outs
sbb
call
push
retf
xchg
imul
jne
(bad)
mov
cmp
xchg
push
inc
shl
out
adc
mov
inc
jnp
loopne
xchg
xchg
add
xor
sti
cmp
retf
jmp
(bad)
cmp
xor
jmp
sub
or
stos
nop
loope
stos
movs
loope
jle
inc
popf
push
dec
and
in
or
jbe
add
jae
lods
leave
in
fwait
ds
push
sbb
sahf
mov
std
retf
sbb
leave
test
scas
iret
pop
adc
lods
jge
js
icebp
xchg
outs
pop
mov
std
data16
mov
(bad)
imul
push
pop
dec
push
sub
dec
mov
and
leave
div
std
(bad)
and
retf
mov
test
les
(bad)
mov
(bad)
ror
mul
lahf
adc
jle
mov
ficom
popa
mov
cmc
jecxz
mov
push
xor
jbe
aam
sti
jge
fst
and
(bad)
nop
add
mov
sti
sub
mov
stos
repz
or
push
add
or
add
push
enter
test
jl
ja
jle
mov
xchg
push
push
ins
movs
inc
(bad)
mov
lods
or
leave
jmp
inc
mov
and
neg
cmp
fcmovnbe
(bad)
mov
mov
das
aam
push
ins
int
mov
sbb
xor
cmp
pop
mov
pop
test
loop
jae
loope
(bad)
push
pop
xor
loop
jbe
sahf
sbb
lahf
mov
adc
pop
cmc
js
pop
rcl
enter
and
fidivr
jmp
bndstx
lea
sbb
out
js
cs
add
or
dec
cmps
mov
fcmovbe
inc
test
jmp
mov
mov
and
xchg
mov
movs
mov
cmp
inc
cmps
lea
inc
repz
push
or
adc
mov
xlat
xor
xor
jmp
std
push
imul
inc
xchg
pop
pusha
div
out
mov
popa
pop
fcomp
dec
int
cmp
repnz
mov
push
adc
(bad)
pusha
jns
test
loope
idiv
fadd
pop
popa
adc
(bad)
mov
sub
pop
ja
mov
(bad)
repz
and
call
inc
mov
add
call
xor
xchg
stos
mov
xor
add
jne
push
jmp
jge
movs
or
and
and
push
mov
out
dec
(bad)
pop
(bad)
sar
daa
sbb
mov
mov
fdiv
push
cdq
pop
pop
cmps
push
xchg
imul
jmp
or
fld
push
xchg
push
push
push
jp
lds
in
fbstp
dec
mov
cld
inc
repnz
outs
sahf
aas
xchg
push
mov
cmps
lods
in
stos
jno
cmps
push
int3
or
aam
jg
xchg
test
shl
fist
idiv
ins
call
inc
xor
mov
cmps
jo
push
sub
fs
and
cmps
ds
dec
test
movs
dec
cld
jmp
fisub
(bad)
sbb
adc
inc
xchg
scas
outs
xchg
pusha
out
add
dec
adc
retf
mov
mov
xchg
rcl
leave
std
pop
les
and
lock
sub
stc
mov
or
pop
push
dec
lea
lods
je
(bad)
mov
cmp
ffree
popf
les
sbb
es
jae
sub
or
icebp
mov
out
das
inc
inc
push
js
lods
dec
pusha
push
push
mov
xor
fmulp
adc
inc
ret
xor
xchg
test
les
add
cwde
imul
sbb
loop
arpl
aaa
(bad)
dec
adc
inc
clc
shr
pushf
icebp
mov
jno
in
dec
aam
dec
shr
cmp
stos
push
outs
retf
cmp
rol
lods
inc
outs
out
out
mov
push
cmps
add
sbb
mov
jne
push
or
outs
pop
xchg
cmp
fild
cld
adc
mov
inc
fwait
dec
lds
dec
into
ds
xchg
add
clc
je
ficom
pop
push
gs
not
cmp
lea
push
cmp
or
outs
fist
arpl
dec
and
mov
xchg
in
lods
stc
lods
inc
(bad)
shl
xchg
pop
cli
jnp
ss
jp
addr16
mov
call
push
push
ficomp
xchg
and
jmp
adc
out
cmp
stos
imul
movs
neg
jmp
in
ja
cdq
pop
push
sub
push
mov
push
cdq
les
ins
test
iret
adc
cmp
stos
inc
in
aam
jl
jb
inc
and
cmps
mov
not
mov
imul
push
inc
xchg
mov
jbe
inc
loopne
movs
imul
(bad)
std
xor
(bad)
push
mov
daa
mov
in
push
popf
(bad)
add
adc
xor
dec
enter
fst
xor
in
arpl
in
pmaxsw
pop
out
retf
mov
sbb
xlat
pop
inc
das
xor
or
sbb
jmp
loopne
ror
in
pop
pop
aas
jno
out
inc
dec
xor
icebp
jnp
jl
xchg
(bad)
les
call
push
ds
sub
lods
sub
outs
adc
leave
mov
in
mov
ja
push
mov
mov
or
inc
adc
iret
test
fptan
sub
adc
jmp
fmul
(bad)
sti
icebp
cmp
inc
dec
mov
cli
aam
push
popa
xor
fmul
cmp
xchg
xor
call
push
int3
adc
loopne
mov
outs
mov
ficomp
fwait
int3
es
inc
or
shl
cmc
sub
ret
push
mov
mov
mov
pop
call
push
xor
add
jnp
inc
inc
stos
mov
mov
repnz
scas
stc
fdiv
in
adc
sub
xchg
push
popf
aas
jno
dec
inc
xor
and
pop
mov
and
dec
inc
jmp
jge
ja
inc
int3
dec
ds
cld
outs
rcr
push
sub
dec
and
enter
dec
sbb
iret
mov
mov
push
and
popf
rol
jecxz
(bad)
sbb
shl
movs
mov
sub
dec
jecxz
pop
out
dec
mov
dec
out
dec
pop
push
pusha
shl
push
jbe
xor
shr
sub
mov
arpl
in
stos
ret
in
xor
push
stc
clc
mov
xor
ror
in
bound
and
mov
es
mov
int3
xchg
xor
mov
out
add
jge
pop
xchg
add
test
add
mov
and
push
cwde
int3
popf
mov
jo
xchg
aad
sub
sbb
inc
out
bound
ins
xchg
push
scas
push
ds
call
xchg
pop
sbb
mov
fdivr
jno
add
ret
sbb
cmp
mov
out
jecxz
sti
scas
xor
and
mov
rcr
sub
sbb
mov
enter
shr
stos
sub
or
test
mul
jns
xor
scas
leave
mov
imul
lds
xchg
call
lahf
add
xchg
loopne
rol
push
push
enter
push
lods
push
call
mov
xchg
xor
sbb
out
dec
leave
mov
jmp
imul
cmp
in
add
mov
mov
xor
jb
leave
fdivr
test
mov
cmps
xor
pop
sub
movs
xchg
stos
xchg
mov
leave
fwait
adc
jmp
cmp
dec
aam
pushf
int3
in
retf
pop
pop
jmp
(bad)
sub
push
(bad)
inc
out
mov
rcr
xchg
in
aam
xchg
lods
das
in
mov
aaa
inc
in
mov
sahf
and
mov
push
nop
push
arpl
ins
test
popf
stos
fwait
rol
mov
iret
cmp
mov
mov
ror
dec
mov
aad
in
neg
icebp
mov
cmps
or
xor
mov
(bad)
js
jb
xlat
jp
lds
push
loop
retf
mov
das
and
lods
pop
int3
sub
xor
mov
adc
xchg
(bad)
xchg
fisubr
push
xchg
sub
or
mov
cmp
xor
push
add
sbb
xchg
and
jbe
add
push
adc
xchg
shl
jle
pop
repz
mov
bound
fistp
ret
inc
dec
stc
retf
hlt
sbb
mov
stc
add
int
and
mov
pop
fisttp
jge
popf
push
into
mov
sbb
mov
jo
scas
jnp
jg
aam
jmp
and
sbb
adc
cld
sub
fldenv
out
out
dec
xchg
dec
inc
push
xacquire
(bad)
cmp
retf
xor
cwde
call
cmps
xor
push
push
ret
movs
pushf
sub
call
or
xor
or
scas
and
inc
arpl
(bad)
adc
dec
into
jae
test
xor
sahf
cmp
std
das
fisttp
jb
pop
cli
pop
cdq
ret
mov
mov
lods
adc
cmp
out
popa
cmp
mov
jge
loopne
mov
(bad)
jnp
aaa
sahf
out
push
popf
int3
popf
shr
call
xchg
mov
div
add
dec
stos
(bad)
pop
movs
daa
add
adc
loope
adc
inc
into
xchg
stos
loop
jmp
push
jle
pop
aam
pop
in
(bad)
rcl
push
push
xor
fdivr
(bad)
add
jl
hlt
mul
mov
inc
xor
jb
std
shl
push
fldcw
and
or
aam
xchg
mul
lds
add
jp
into
lds
mov
in
cdq
pop
cmp
scas
scas
mov
mov
lahf
pop
mov
mov
inc
lea
cmps
repnz
aam
sub
in
jno
cld
je
dec
sbb
pop
sbb
sbb
add
in
mov
mov
mov
aam
in
jp
xchg
dec
pop
movs
rcr
ret
es
xor
push
jmp
lods
(bad)
loopne
jl
outs
mov
in
add
cmc
cmp
pop
add
call
aas
aaa
ss
or
push
js
jl
retf
inc
sub
data16
int3
pop
lods
sbb
mov
test
mov
push
dec
mov
xor
mov
retf
add
mov
cmp
mov
pop
pop
test
psadbw
sar
rol
fdivr
fmul
mov
(bad)
repnz
lods
pop
inc
xor
imul
lods
nop
pushf
(bad)
xor
test
dec
imul
xor
and
mov
xchg
pop
or
cmps
add
pop
scas
cld
nop
mov
lea
ds
ds
jp
pop
jo
repnz
xor
jmp
push
push
mov
push
xchg
les
sub
sbb
test
add
lds
icebp
outs
(bad)
fst
pushf
sub
adc
fld
(bad)
pushf
sub
lods
sub
mov
(bad)
(bad)
cli
add
sbb
popa
rol
gs
aaa
mov
mov
stos
call
sbb
scas
pop
cmp
dec
stos
into
mov
out
les
cmp
pop
aaa
stc
ja
(bad)
sbb
in
push
cmp
mov
fldcw
dec
xlat
pop
ss
ins
xlat
(bad)
lahf
pop
or
push
cmc
xchg
cli
push
out
push
mov
dec
add
and
mov
mov
movs
inc
sub
fstp
stos
cmp
aaa
jns
test
jmp
mov
add
into
js
test
ja
sbb
adc
lods
adc
call
dec
pop
es
push
dec
in
ja
dec
rcr
and
xchg
xor
mov
dec
(bad)
pextrw
test
and
repz
add
out
test
ret
pushw
popa
popa
push
adc
(bad)
mov
pop
ss
icebp
test
pop
jne
sub
adc
pop
mov
add
cld
test
inc
mov
addr16
js
and
pop
movs
lods
popf
mov
into
adc
out
fiadd
ins
jmp
xor
aas
setb
movs
push
xchg
inc
xor
mov
ret
sub
bound
xlat
imul
mov
push
idiv
addr16
or
adc
mov
test
shr
aad
xor
fwait
in
test
ret
sbb
out
cli
dec
mov
jb
dec
push
adc
dec
adc
xor
ja
repnz
scas
test
adc
jae
pop
out
(bad)
mov
inc
jns
scas
xor
stos
inc
shr
sahf
imul
movs
pushf
call
inc
retf
cmp
ins
cwde
fs
fist
mov
test
mov
sti
add
and
adc
pop
das
outs
je
ins
add
lds
mov
mov
inc
dec
pop
call
mov
mov
scas
sahf
and
cwde
sbb
jecxz
xchg
or
cmp
cs
jne
(bad)
pop
clc
mov
mov
aad
cmp
je
into
sbb
sub
pop
ret
(bad)
push
mov
fwait
push
gs
adc
and
ret
jae
adc
lods
mov
or
push
sub
cmp
pop
xchg
adc
cmp
into
xchg
mov
xchg
mov
(bad)
cmp
cs
es
mov
cs
fadd
stc
dec
or
push
dec
pop
fldln2
leave
fs
jmp
cmp
xchg
jge
xchg
sahf
daa
test
xor
push
inc
lock
fldenv
push
outs
and
add
out
sbb
dec
sbb
add
movs
movs
stos
jns
pop
mov
and
fisubr
call
into
in
stc
(bad)
jmp
arpl
in
mov
aad
xor
xchg
mov
(bad)
jecxz
aas
stos
jge
push
ret
fiadd
adc
pushf
sbb
sbb
jle
mov
xor
cdq
dec
and
hlt
jge
mov
dec
les
xchg
mov
inc
shr
mov
lds
jle
dec
dec
add
inc
add
fadd
cmps
and
push
xchg
or
push
retf
pusha
scas
sub
fild
into
xor
imul
out
or
ins
(bad)
jmp
cwde
out
std
sbb
xor
inc
or
mov
cld
into
mov
aad
repz
xlat
mov
popa
push
call
enter
cmp
or
and
movs
sbb
mov
lahf
cmp
aad
push
and
loope
(bad)
mov
add
mov
mov
dec
push
sbb
mov
call
stos
mov
sti
imul
out
sbb
sub
call
xchg
sar
icebp
cwde
inc
add
jns
lahf
sub
mov
xlat
inc
inc
xor
jl
or
xor
adc
sar
jg
(bad)
push
push
imul
retf
xor
pushf
mov
retf
mov
adc
jg
push
and
stos
xor
pop
jb
out
inc
add
xor
sub
(bad)
arpl
cmp
pop
popf
retf
fwait
push
in
or
adc
inc
push
push
inc
dec
fs
xor
lds
xchg
adc
cmp
pusha
pop
dec
dec
retf
std
adc
pop
sbb
sub
and
test
mov
add
lock
into
fsubr
inc
push
shl
sbb
pop
mov
cmp
xchg
mov
adc
pusha
sbb
loopne
push
and
icebp
mov
xor
sbb
push
mov
lods
outs
adc
cmc
and
sbb
mov
mov
fist
jecxz
xlat
mov
pop
ds
push
cmp
repnz
enter
pop
fcom
xor
dec
pop
jge
arpl
cmp
and
dec
ds
imul
or
mov
jmp
jo
push
cmp
dec
sbb
cmp
addr16
sets
xchg
jnp
xchg
and
fs
inc
iret
add
mov
fwait
mov
mov
dec
test
aad
fnstsw
xor
ret
jno
cdq
loop
mov
push
in
mov
fcomp
lods
mov
(bad)
pusha
add
dec
lock
push
inc
xchg
out
jbe
aas
es
nop
xor
inc
jmp
mov
(bad)
mov
xchg
mov
stos
clc
(bad)
ja
xchg
inc
mov
sbb
stos
pop
push
push
clc
cmc
add
mov
xchg
ror
cmp
daa
sub
jb
clc
sub
ins
pop
repnz
mov
icebp
adc
test
shl
andps
sbb
hlt
aas
xchg
xchg
xor
jle
jo
add
retf
jbe
leave
jmp
xlat
xchg
adc
dec
stos
sub
add
int3
dec
test
pop
mov
movs
loop
dec
repnz
movs
imul
jp
xor
popa
dec
out
pop
test
out
cwde
add
push
cmps
nop
pop
shr
add
sub
test
pop
fldenv
popf
xchg
adc
jae
sbb
xchg
jo
in
(bad)
jmp
sbb
jns
daa
pop
adc
mov
fstp
and
fimul
mov
or
or
xchg
jbe
loopne
movs
push
xor
sub
sub
cs
ret
adc
pop
sub
rcr
cmp
push
add
dec
pop
xchg
xchg
ret
jp
aas
mov
fstp
xor
clc
mov
test
mov
inc
xchg
ret
(bad)
push
aaa
jp
and
dec
xlat
xchg
push
add
loopne
test
mov
pop
jb
repnz
mov
inc
or
jle
push
sbb
or
jb
retf
mov
and
test
xlat
ds
loopne
sbb
fsubr
mov
into
rol
push
les
aas
loop
sbb
mov
aaa
push
repz
(bad)
ins
xor
push
or
xor
inc
pop
shl
call
lea
ror
popf
ins
pop
pop
cmp
cmp
out
cmp
int3
test
fcomp
mov
jb
mov
dec
ret
xor
mov
push
and
fdiv
stc
in
popf
and
sahf
mov
fwait
add
mov
test
mov
mov
jne
out
push
mov
in
clc
loop
jp
imul
jg
nop
fisubr
out
aas
bound
jne
jbe
lahf
sbb
and
adc
xchg
inc
cmps
push
mov
ret
and
in
out
xchg
mov
adc
inc
push
mov
xor
call
scas
fldenv
stos
dec
cwde
or
pusha
mov
adc
sub
sub
lock
lods
pop
movs
push
pop
add
xor
cmp
daa
out
inc
jg
add
xchg
mov
pop
push
test
sbb
mov
dec
adc
clc
cmp
setbe
movs
loop
push
int3
call
test
push
aas
adc
in
push
mov
fucomp
cmp
fstsw
es
push
outs
fbstp
push
pop
sbb
mov
mov
xchg
or
call
dec
jecxz
add
cs
and
sahf
sbb
cwde
push
xchg
dec
xchg
pop
inc
or
ds
sub
cmc
xor
aam
dec
cmp
faddp
jbe
dec
js
mov
pop
mov
ss
repz
xor
cmp
shr
jbe
les
jbe
ficomp
mov
jle
rcr
inc
sbb
cmps
test
aam
popf
mov
shl
popf
xchg
retf
push
fbld
dec
mov
ins
cmp
sub
jb
push
pop
cmc
mov
dec
shl
mov
adc
daa
mov
push
fs
mov
and
loope
rcl
cmps
outs
jno
cmp
ret
pop
dec
mov
mov
mov
pop
das
pusha
pop
and
cmp
lods
fadd
lahf
push
out
shl
push
retfw
jmp
(bad)
pop
(bad)
cmps
mov
add
fnstsw
mov
or
add
ret
pusha
mov
aam
mov
sub
mov
(bad)
pop
pusha
lods
icebp
dec
sbb
push
and
cmp
pop
mov
test
sub
cmp
dec
mov
sub
or
xchg
xchg
sub
lea
mov
sub
xor
arpl
or
mov
mov
movs
ret
dec
pop
dec
push
test
imul
outs
xchg
lods
aam
dec
sub
popa
(bad)
nop
cmp
cld
inc
mov
sub
sub
dec
cli
lahf
lods
mov
push
sub
xlat
(bad)
mov
mov
xchg
das
push
mul
push
inc
shl
jo
add
push
mov
jb
xor
aad
xor
or
mov
mov
mov
xchg
cdq
dec
push
not
cmp
rcl
nop
ficomp
fistp
sar
adc
jg
dec
add
bnd
cmp
add
in
sar
cld
sbb
fnstsw
cmp
pop
mov
nop
jno
retf
pop
pushf
(bad)
jl
cmp
in
div
jns
mov
push
sub
mov
fidiv
lods
dec
aam
fucomi
jle
mov
and
stc
idiv
pop
outs
mov
pop
retf
push
dec
mov
neg
xchg
(bad)
sbb
fadd
retf
in
mov
loope
ins
mov
test
inc
add
mov
xor
push
pop
lahf
sbb
call
nop
sbb
or
rcr
jge
add
xchg
scas
ror
push
loopne
pop
jmp
int3
mov
add
(bad)
and
and
or
pop
cdq
jp
and
add
and
push
lods
nop
xor
cwde
mov
iret
dec
retf
mov
idiv
cld
bound
sti
dec
pop
sti
les
and
jnp
fist
mov
fild
mov
and
int3
addr16
push
outs
sbb
sbb
imul
popa
cwde
rol
stc
inc
pop
sub
rol
sbb
xchg
mov
idiv
adc
retf
jmp
and
xchg
pop
clc
mov
aas
call
out
and
or
jmp
(bad)
add
xchg
or
retf
fdiv
cwde
push
js
dec
xor
mov
sub
xchg
mov
out
(bad)
std
sti
hlt
in
xchg
add
lods
xchg
push
lahf
jae
pop
inc
(bad)
and
push
sub
rcr
ds
xchg
xor
jmp
out
fsub
mov
add
dec
vpshufd
cmps
inc
mov
sub
or
lds
lods
cmp
jnp
jmp
cmp
or
xor
(bad)
ds
cmp
or
push
xor
ja
cmp
adc
pusha
out
mov
ret
loop
xchg
test
hlt
and
xchg
add
movs
fimul
das
xor
adc
push
dec
jmp
fmul
push
popf
ja
sub
loopne
adc
std
std
add
into
jae
sub
xlat
pop
(bad)
or
add
mov
mov
sub
call
mov
test
ret
dec
xlat
sub
out
mov
mov
ret
sbb
jne
rcr
xchg
leave
repz
ret
pop
push
ret
adc
xor
cmc
iret
ret
add
and
and
sahf
xlat
adc
imul
xchg
push
and
lods
adc
or
fisubr
inc
fs
ss
(bad)
rol
push
pop
or
leave
leave
fwait
pushf
add
scas
mov
test
dec
test
jl
fmulp
pusha
cmp
dec
bound
sbb
xor
sub
test
ja
jp
jb
inc
ss
cmp
xchg
dec
out
daa
test
xchg
js
sub
shr
mov
js
jb
out
adc
hlt
inc
sub
je
mov
sbb
add
mov
jl
xchg
mov
dec
mov
pop
mov
cld
dec
in
mov
sti
leave
in
mov
lahf
int3
jb
or
mov
jne
inc
push
jg
pop
lahf
dec
inc
dec
sub
bound
cmp
jle
cli
push
sbb
dec
mov
int
pop
retf
rol
(bad)
jge
movs
addr16
clc
pop
jae
mov
ins
fst
sub
frstor
loopne
jmp
push
add
ss
inc
cdq
int3
pop
mov
repnz
dec
inc
sbb
lahf
mov
sahf
push
enter
or
ficom
test
nop
push
mov
jb
(bad)
or
daa
mov
popa
cmp
push
mov
std
not
imul
mov
inc
test
ja
adc
pop
cmp
retf
sahf
sar
enter
pop
out
pop
inc
push
xor
jbe
mov
fs
ror
xchg
mul
inc
xor
dec
retf
cld
faddp
push
mov
cdq
xchg
or
je
pop
das
clc
int3
retw
scas
stos
das
loop
stc
mov
ror
pusha
es
lahf
int3
out
rcr
push
add
and
mov
repz
je
inc
mov
test
les
out
add
sub
or
dec
js
mov
mov
jge
cmc
pop
inc
cmp
and
ins
int
aam
das
mov
cmps
cmp
shl
sub
jge
jbe
xchg
pop
in
mov
add
push
add
repnz
push
sbb
xor
(bad)
fcmove
sbb
mov
test
xchg
xor
adc
enter
retf
add
xchg
iret
call
xor
sbb
jno
lods
ror
lock
mov
daa
push
in
jge
rcl
cwde
jl
out
lock
mov
pusha
sbb
add
inc
add
or
sbb
int
bndldx
mov
xchg
ds
sbb
hlt
frstor
stos
and
mov
cmp
out
jle
xor
pop
push
retf
stc
cmp
out
dec
leave
hlt
int3
inc
push
test
cwde
in
div
loope
out
test
dec
sbb
inc
cmp
sbb
mov
mov
std
mov
gs
sub
sub
sbb
test
ins
(bad)
and
sub
sub
data16
xchg
out
and
xchg
xchg
lds
sub
add
test
mov
sbb
adc
retf
fcom
dec
sbb
xchg
(bad)
adc
out
xchg
loope
push
pop
push
mov
nop
push
hlt
pushf
dec
inc
inc
icebp
(bad)
fisttp
stos
xor
icebp
xchg
dec
rcr
les
push
xlat
outs
cmp
out
mov
neg
add
mov
(bad)
push
int3
cdq
cmp
sahf
loope
into
pop
mov
jmp
fwait
add
div
mov
lea
pop
sbb
sub
call
ins
repz
jmp
sti
hlt
out
mov
xor
pop
xchg
int3
cmp
xchg
pop
call
push
cmps
cdq
dec
or
jne
mov
pop
or
inc
das
ds
sbb
push
cmps
mov
or
popf
enter
jmp
imul
or
push
pushf
imul
pop
pushf
fiadd
fsubr
or
inc
sahf
or
rcr
cwde
cmp
or
fwait
jmp
test
sahf
jns
popa
and
dec
add
fdiv
ret
repnz
mov
pop
push
movs
icebp
ret
mov
fwait
or
inc
(bad)
push
xlat
inc
mov
fcom
sbb
data16
xor
mov
xor
sub
imul
dec
inc
das
xor
mov
lods
and
imul
cdq
loopne
dec
sub
mov
sub
scas
int
std
cmp
ds
adc
cmp
pushf
xlat
mov
dec
shl
loope
and
sub
jbe
int
popa
fcomp
adc
outs
out
or
arpl
mov
mov
movs
push
cmps
xchg
inc
xor
sahf
call
xchg
xor
pop
pop
(bad)
(bad)
cli
cs
xchg
int
(bad)
sbb
cld
pop
out
call
inc
pop
enter
jmp
neg
or
sar
sub
iret
jnp
pop
pop
cmps
inc
popf
dec
jnp
cmp
inc
and
pop
repnz
sub
inc
push
dec
push
pop
push
cs
stos
mov
push
sub
or
inc
pxor
xchg
pop
cmps
scas
out
inc
inc
inc
stc
scas
fistp
icebp
rol
das
aam
cmps
or
sahf
cmps
add
add
jecxz
pushf
or
mov
pop
mov
adc
lds
sub
ins
inc
push
sar
leave
jge
stos
push
repz
push
mov
mov
xor
pop
ja
imul
int3
dec
(bad)
gs
mov
adc
jbe
and
hlt
mov
imul
pop
push
cmp
jle
gs
retf
sub
cmc
pop
(bad)
mov
mov
add
jbe
fwait
sbb
cmps
stos
ds
add
jge
mov
or
jbe
xchg
sti
ficom
adc
adc
push
jnp
sbb
mov
retf
loopne
les
adc
stc
and
jno
and
and
jmp
je
jno
nop
ja
jle
mov
iret
fistp
cmp
fld
fisttp
or
adc
scas
movs
push
fstp
rcr
xor
pop
imul
sbb
xchg
repz
pop
mov
cmps
cmp
rol
ret
add
push
pop
dec
fidivr
mov
in
in
push
add
add
cmp
pop
ss
test
and
xchg
mov
or
inc
lahf
out
mov
or
sbb
(bad)
in
std
cmc
mov
(bad)
sbb
out
cmp
xchg
retf
repz
cs
mov
jp
mov
mov
scas
enter
mov
test
mov
test
(bad)
sahf
lahf
push
push
out
inc
mov
mov
nop
gs
jmp
popf
inc
mov
push
cli
(bad)
jecxz
inc
mov
xchg
adc
sbb
cmp
pop
loope
xor
int3
or
dec
imul
mul
imul
xor
cmp
xor
sub
pop
je
dec
and
imul
cli
shr
xchg
xor
loop
gs
push
mov
lods
out
ror
add
sbb
cli
push
arpl
test
fwait
rol
int
sbb
lds
sbb
xchg
movs
fdivrp
fstp
xchg
inc
data16
xchg
ds
fsubr
mov
mov
lods
sbb
ins
or
retf
add
aad
das
fld
rcl
cwde
mov
mov
enter
mov
pop
leave
inc
das
push
pop
sbb
aam
rol
(bad)
push
fadd
cmp
je
ss
xchg
lods
cmp
cmps
sub
mov
inc
jo
jmp
js
xchg
pop
enter
mov
iret
fwait
inc
mov
lods
mov
les
mov
jl
pop
mov
es
mov
inc
fisttp
imul
outs
jnp
in
(bad)
call
mov
jle
xchg
cmp
xor
mov
cmp
in
test
xchg
test
(bad)
push
mov
jecxz
nop
push
pop
sub
cli
xor
cmp
inc
je
fiadd
push
mov
push
add
iret
std
inc
xchg
inc
mov
jno
add
xor
xor
or
xchg
jno
add
jge
pop
retf
push
push
dec
stos
hlt
pusha
stc
int
je
mov
mov
inc
(bad)
sub
pushf
popf
and
xor
adc
and
sub
mov
sbb
dec
xchg
lds
(bad)
push
jg
invd
in
dec
cdq
(bad)
std
mov
in
(bad)
(bad)
push
les
pop
cmp
fsubr
mov
inc
out
test
push
(bad)
mov
sub
jl
out
mov
or
push
dec
adc
sbb
fwait
rcl
in
cmp
sub
hlt
adc
sbb
cmovne
xor
cmps
add
push
inc
xchg
out
sub
mov
push
aam
imul
push
sub
cmp
sub
pusha
pop
in
scas
pop
sar
test
or
mov
or
mov
mov
push
ret
dec
and
and
ret
and
popa
rcl
in
dec
int
xor
dec
cmp
test
and
mov
or
xor
inc
pop
shr
vpaddq
xchg
mov
mov
test
jp
xor
inc
shl
sbb
and
jb
cmp
and
iret
xor
xchg
xchg
adc
iret
pop
cmp
ins
cmp
pop
scas
sub
inc
add
(bad)
pop
popf
mov
mov
jge
inc
(bad)
mov
mov
aad
cwde
sbb
out
adc
push
xchg
jae
int
push
sub
xchg
das
mov
jo
clc
jae
fmul
sub
mov
popf
not
mov
sahf
js
mov
into
retf
cmps
cmp
and
fs
stc
jmp
outs
ret
jne
test
test
add
scas
mov
mov
out
outs
push
or
add
pop
xor
retf
add
lahf
mov
push
ret
mov
mov
iret
xor
add
dec
and
or
(bad)
and
test
xchg
aas
sbb
mov
test
lock
ins
dec
fcomp
mov
cmp
hlt
cmp
mov
retf
mul
or
mov
inc
inc
and
cmp
(bad)
fisub
into
ins
rcl
aaa
in
jns
sub
cs
dec
test
push
sbb
rcl
outs
pop
xlat
cwde
push
out
jb
enter
mov
lods
jnp
inc
dec
idiv
mov
(bad)
out
push
je
inc
jmp
push
sub
mov
outs
xor
push
cld
nop
mov
jg
leave
mov
cmp
push
cmps
arpl
mov
aad
inc
call
cmps
stos
pushf
div
push
hlt
xchg
jmp
jp
cmp
and
push
adc
jae
mov
xor
push
daa
stos
push
mov
(bad)
jecxz
out
mov
dec
jns
push
mov
inc
pushf
sbb
std
mov
jnp
xor
sub
xchg
daa
cmp
jle
imul
mov
mov
pop
pop
pop
inc
scas
push
mov
jo
xchg
outs
test
xor
aam
xchg
push
cmc
sbb
es
fsub
aad
mov
ja
hlt
mov
daa
das
pavgb
sbb
and
dec
in
je
push
test
mov
rol
repz
jae
xor
pop
enter
xor
lock
mov
or
mov
pop
push
cmps
addr16
int
jl
pop
aam
push
ins
retf
out
sub
sti
mov
push
xor
mov
(bad)
pop
inc
cld
xor
push
sub
adc
rol
add
xor
inc
or
dec
shr
xchg
xlat
retf
jmp
adc
jmp
pop
ret
jae
dec
sbb
sbb
cmp
je
adc
movs
pop
cmp
inc
mov
mov
les
push
test
fidiv
out
xor
hlt
xchg
pop
ror
and
stc
mov
test
push
pop
dec
or
xor
jmp
in
bound
mov
es
fst
mov
push
leave
dec
ins
je
test
fimul
xor
sub
and
pop
jg
fmul
scas
hlt
mov
and
aas
call
jecxz
outs
inc
sub
inc
mov
ja
test
push
sahf
mov
xchg
dec
imul
dec
push
daa
add
push
sbb
lahf
les
fs
mov
mov
pop
fwait
movs
jecxz
jp
lea
movs
fstp
ins
out
xchg
mov
mov
shl
pop
jb
push
sbb
xor
add
pop
cli
xlat
jo
pop
bound
xchg
mov
push
pop
sar
and
jecxz
clc
and
and
dec
and
mov
and
mov
sub
ror
add
add
inc
leave
movs
fwait
xor
icebp
push
imul
push
pop
pop
movs
adc
or
ds
xchg
pop
stos
sub
fst
out
and
inc
mov
jmp
add
leave
pop
xor
cmp
fsub
mov
enter
mov
imul
push
and
or
inc
mov
mov
mov
mov
div
imul
pusha
aas
in
not
jae
daa
add
inc
call
sbb
push
(bad)
dec
mov
addr16
push
adc
dec
xchg
cmp
fst
mov
aad
arpl
jle
mov
pusha
and
cli
push
mov
xor
sbb
sbb
das
pop
sahf
push
sbb
jge
sar
adc
cdq
popa
or
test
jp
call
mov
adc
cmp
test
mov
pop
repz
adc
xchg
test
ret
lods
js
mov
and
mov
jo
adc
not
fwait
int
jmp
or
inc
xor
nop
pop
lock
(bad)
gs
pop
pop
lods
mov
push
call
mov
std
lods
(bad)
mov
inc
ret
popa
fmul
dec
sbb
jge
jo
fisttp
cmp
dec
daa
lahf
mov
and
xor
daa
mov
cmp
lods
fwait
in
inc
xchg
jne
and
dec
pop
mov
xor
mov
jno
(bad)
aad
shr
sub
sti
movs
les
lea
push
mov
sub
lods
ret
mov
(bad)
push
xor
loopne
inc
sbb
test
cdq
in
and
sbb
sub
mov
fcmovbe
jns
sub
lds
rcr
dec
add
loope
mov
or
stos
fdivr
push
push
mov
xor
sub
push
jmp
les
and
outs
retf
push
jle
cmp
sbb
and
shl
xchg
dec
frstor
inc
jmp
movs
popf
mov
xchg
call
inc
xchg
jae
mov
imul
adc
mov
push
mov
mov
mov
push
stc
jo
or
xlat
jecxz
enter
je
push
daa
popa
dec
jmp
push
addr16
lods
enter
test
pop
adc
push
enter
stos
enter
jo
dec
jge
ins
add
lea
cmovno
push
ficom
loope
jae
ret
lods
aaa
adc
rcr
adc
fnstenv
cwde
and
gs
mov
ds
jecxz
dec
call
arpl
xchg
jbe
int
shrd
add
or
dec
adc
pop
and
and
in
mov
out
les
push
and
jb
adc
ror
cwde
mov
push
pusha
mov
pop
jmp
xlat
retf
stc
push
jmp
icebp
push
adc
repnz
mov
adc
dec
mov
jns
sub
pop
es
pop
push
adc
aaa
(bad)
call
add
mov
sbb
pop
jno
sub
je
jp
push
(bad)
std
test
dec
inc
into
int3
jbe
push
xchg
int3
(bad)
and
push
dec
jmp
nop
les
xchg
push
aaa
xchg
and
push
mov
jmp
mov
sbb
add
in
mov
(bad)
mov
xor
pop
jmp
push
jge
les
mov
leave
dec
or
cdq
cmp
jmp
inc
lock
push
jb
mov
iret
push
shl
int3
nop
inc
sar
cld
jns
sbb
outs
jno
push
ret
dec
cmp
call
jns
cmp
add
xor
push
stos
(bad)
mov
clc
pushf
sbb
sbb
into
sbb
dec
jmp
scas
adc
stos
inc
movs
jp
push
mov
sub
cmp
sub
pop
iret
dec
je
xchg
pop
jl
jne
dec
dec
mov
xor
repnz
repnz
mov
(bad)
push
push
xor
lock
adc
mov
bound
aad
fidiv
push
sub
les
mov
js
push
adc
out
push
jle
aam
jae
push
ficom
push
(bad)
dec
cmp
cs
rol
les
and
cs
inc
xchg
cli
and
mov
pop
call
mov
inc
jo
xchg
mov
or
sbb
xor
cli
(bad)
ss
das
and
inc
fwait
inc
imul
outs
mov
in
test
push
bound
mov
mov
cmp
xor
test
inc
inc
or
cmp
xchg
jae
lahf
cmp
mov
mov
pop
push
movs
xchg
(bad)
pop
in
sub
mov
xor
mov
lods
xchg
adc
jnp
movs
xchg
push
or
mov
adc
cmps
mov
aad
cmps
cmp
fisttp
pop
pop
fs
xor
ss
pcmpgtb
xchg
cmp
jae
push
mov
mov
add
scas
cmova
dec
test
aas
mov
nop
daa
jne
ja
xchg
lods
js
adc
sbb
xchg
fmul
ins
inc
pushf
adc
add
dec
rol
mov
ins
aam
mov
fs
call
sub
jbe
fldenv
cmp
enter
mov
sub
popf
inc
ja
mov
or
xchg
push
add
outs
pop
gs
mov
test
xchg
test
aaa
out
jg
push
dec
sub
jne
fmul
mov
out
or
add
sub
in
or
gs
xchg
dec
push
out
pop
(bad)
pop
push
push
movs
mul
(bad)
loop
sbb
cmp
lods
mov
ret
lahf
dec
pushf
pop
in
xchg
sbb
stos
jnp
dec
xchg
ins
push
sbb
repnz
fs
add
cmp
ins
retf
out
xchg
aas
mov
das
xor
push
xor
inc
mov
fisttp
sub
pop
jle
add
movs
and
inc
scas
lds
das
adc
sub
movs
outs
inc
or
xor
xor
cmps
sahf
cdq
(bad)
not
pop
push
adc
push
fs
mov
call
test
ret
loope
lea
inc
pop
inc
jo
into
add
shr
xchg
push
xchg
je
outs
push
lods
pop
jmp
call
shr
xlat
adc
shr
popa
dec
cmps
fild
mov
mov
cmps
cmps
sub
inc
enter
sub
inc
(bad)
es
test
mov
mov
pusha
dec
or
ds
outs
stos
mov
sub
cmp
outs
js
(bad)
popa
dec
(bad)
cdq
or
hlt
or
adc
add
jmp
idiv
xor
mov
test
dec
mov
sar
imul
xor
(bad)
mov
cmp
ss
mov
push
push
push
(bad)
mov
dec
fimul
es
cmp
push
xor
push
es
cmp
cmps
stc
int3
mov
repz
cdq
push
jp
cmp
jle
cld
sar
mov
pop
loop
sbb
sar
in
jne
cmps
mov
jg
jp
fiadd
call
rol
mov
sub
mov
rcl
dec
sbb
and
stc
gs
enter
add
dec
sub
inc
mov
fldenv
cmp
loop
test
leave
sbb
add
push
pop
sahf
jg
or
jle
sahf
cmp
iret
xchg
pop
dec
movs
fstp
in
xchg
mov
sub
inc
fucomp
fisttp
(bad)
jge
mov
mov
fiadd
nop
mov
xchg
sub
loop
mov
test
repnz
sub
and
(bad)
cwde
and
jbe
lahf
xchg
int
lea
xor
sbb
fidivr
xor
mov
pop
or
pop
xor
sub
and
cmps
add
test
adc
pop
cmp
sub
shl
pop
jmp
dec
rcl
mov
sbb
sbb
and
xor
loope
int
xor
mov
call
fcomp
shr
in
cld
jns
cmp
fcomp
sti
cdq
xor
xor
lods
and
imul
push
int3
pop
sbb
mov
loopne
pusha
push
aas
pop
jno
xor
and
sbb
bound
pop
inc
mov
sti
aaa
retf
rcr
cmp
icebp
sbb
jg
jp
and
jge
sahf
sub
ja
push
mov
inc
mov
ret
jmp
sbb
ret
pop
xor
sbb
(bad)
pusha
ins
(bad)
imul
pop
retf
mov
and
add
adc
lea
lods
and
or
mov
rol
xchg
jae
popf
pop
dec
dec
neg
jp
inc
sub
out
or
int3
xchg
lock
es
addr16
popa
aad
test
(bad)
fsubrp
dec
xor
add
lods
mov
sub
sbb
lahf
mov
inc
(bad)
cmp
pop
out
ficomp
mov
dec
sub
adc
or
pop
adc
inc
jle
xor
test
fistp
sub
jp
and
mov
jecxz
sbb
pop
or
outs
or
add
pop
fxch
fdivr
mov
dec
loop
and
and
popa
mov
jnp
retf
xchg
cdq
inc
sbb
lea
xchg
push
mov
push
iret
fs
fwait
(bad)
sbb
lahf
sbb
pop
in
cmp
push
adc
and
outs
cmp
ror
gs
mov
sub
mov
fnstsw
xchg
sub
test
popa
mov
loope
cmps
arpl
add
and
stos
mov
sbb
xchg
push
or
mov
cli
sbb
movs
xchg
xor
or
xchg
test
call
aas
inc
lods
jno
sti
in
xchg
aad
fisub
loope
clc
pop
xor
inc
or
sbb
jmp
nop
jno
add
sbb
mov
or
dec
pop
in
int
pop
ins
fild
push
shl
scas
ds
leave
mov
loopne
outs
add
push
adc
call
push
js
push
ja
push
call
pushf
xor
xchg
mov
fisttp
cdq
push
add
fcomi
mov
fdivr
mov
cmp
inc
add
xchg
stos
add
sbb
cmp
or
pop
mov
stos
mov
not
aam
ds
lahf
pushf
and
shl
and
repz
push
mov
inc
fiadd
lock
sub
ja
fcom
inc
pop
xlat
fcmovu
loopne
push
and
arpl
aad
popa
fisub
mov
rcr
sbb
pop
cmp
lahf
lds
adc
sbb
cmps
adc
push
inc
pop
pop
mov
sbb
ins
retf
sbb
dec
aas
lds
jno
adc
add
pushf
in
cmps
movs
dec
aad
inc
jmp
(bad)
or
jle
fistp
mov
in
aam
int3
sbb
fstp
or
stc
or
and
adc
cmps
bound
out
outs
xchg
inc
arpl
lods
lock
jnp
aam
hlt
cdq
loope
sub
sub
xlat
dec
jb
cdq
sbb
out
pop
add
pop
mov
mov
(bad)
jge
bound
outs
adc
test
push
lahf
sbb
jecxz
in
add
xchg
mov
add
jmp
je
push
dec
mov
inc
rol
dec
and
dec
test
mov
mov
enter
push
mov
nop
dec
jmp
loope
pop
pusha
cmp
mov
jmp
shr
cmps
addr16
xchg
inc
out
xchg
int3
and
cmp
inc
adc
int
stos
inc
jmp
sar
mov
fimul
adc
inc
int
sahf
arpl
repnz
cdq
js
mov
jbe
push
dec
mov
cmc
fidiv
mov
cmp
mov
lock
jbe
out
pop
mov
sub
in
mov
cmps
pop
add
and
into
outs
jmp
adc
and
inc
sbb
fwait
sub
push
xchg
adc
test
jmp
inc
fldenv
mov
xor
cmps
jl
sbb
sbb
push
mov
dec
out
out
cwde
jns
aad
inc
jns
cmp
aas
pop
cli
push
mov
mov
into
sub
jb
shr
test
cmp
xchg
lahf
fnstcw
xchg
xlat
mov
jns
mov
sar
sahf
inc
icebp
adc
pop
test
push
xor
rcl
or
call
and
jne
pop
out
iret
sti
jp
in
xchg
adc
sbb
xor
out
pop
dec
enter
or
rcl
xchg
rcr
mov
mov
addr16
mov
cmps
aaa
fcmovbe
sub
cmps
mov
xchg
iret
sub
rdtsc
movs
(bad)
add
or
sub
sub
cmp
push
sub
daa
xor
retf
cmp
pop
cmp
inc
(bad)
sbb
stos
arpl
(bad)
pcmpeqw
rol
mov
clc
pusha
xchg
test
jbe
or
std
movs
and
xchg
mov
out
push
sub
(bad)
hlt
cmps
test
sub
stos
lods
pop
shr
daa
push
(bad)
daa
sahf
aas
sub
push
pop
jo
sahf
sbb
or
push
out
call
std
dec
(bad)
or
into
leave
mov
sbb
aam
sbb
sub
fild
xchg
pop
ret
cmp
into
jg
push
jmp
sub
xchg
push
es
frstor
jns
or
stos
mov
push
fidiv
nop
mov
xor
call
ds
sub
pop
adc
sub
(bad)
stos
mov
cmps
push
js
cs
sahf
sbb
fistp
leave
sbb
xchg
(bad)
lods
mov
cmp
or
in
nop
mov
nop
fnstsw
arpl
xchg
inc
inc
add
popa
jne
fdivp
ins
sub
(bad)
jl
in
mov
fsubr
jp
scas
mov
dec
xchg
imul
shl
mov
js
and
mov
ja
or
add
jne
push
or
lods
fs
repz
adc
jl
mov
mov
and
adc
movs
test
sbb
int3
ret
jno
aam
mov
pop
jns
fild
mov
rcr
add
cwde
lahf
or
shl
lock
mov
push
sbb
scas
ror
xchg
test
lock
int3
dec
pop
stc
xor
inc
arpl
dec
inc
pop
scas
and
cmp
test
cmp
ret
repz
ins
sar
or
push
into
rcr
push
lahf
pop
xchg
loopne
sbb
sbb
sbb
cmps
mov
mov
imul
scas
and
out
iret
jmp
cmp
cmp
das
and
dec
push
jno
adc
mov
pushf
push
adc
out
inc
retf
in
add
cmp
sub
(bad)
jmp
cmps
push
and
dec
fbstp
sub
iret
retf
mov
sbb
mov
or
bsf
fiadd
mov
rol
sub
gs
mov
jae
hlt
outs
lds
xor
bound
pop
jg
dec
xchg
enter
out
stos
adc
nop
inc
cmp
pop
data16
ds
inc
fwait
jle
push
sub
mov
jecxz
pusha
xor
push
cmps
fcom
mov
push
shl
ret
das
add
inc
stc
dec
pop
leave
or
out
sbb
push
(bad)
jmp
std
pop
push
xchg
fisttp
leave
repnz
mov
and
push
hlt
sbb
sbb
imul
icebp
push
and
pop
sbb
popa
ficom
jp
or
or
push
jp
pop
loop
add
pop
setp
push
ins
ss
jbe
sub
pop
mov
inc
int3
imul
scas
mov
jmp
push
test
je
mov
cmps
dec
movs
and
(bad)
cmps
shr
outs
fs
cmp
test
(bad)
lock
leave
push
int3
add
popf
(bad)
popa
sbb
jne
int3
push
pop
(bad)
not
movs
mov
jecxz
jne
add
adc
push
jns
cmp
retf
dec
inc
cs
mov
dec
xlat
cmp
add
mov
pop
pop
sub
ins
fisubr
(bad)
cdq
xchg
mov
in
push
repnz
or
test
push
das
ds
xor
rol
pushf
shl
hlt
mov
or
push
loopne
inc
add
inc
dec
pop
call
mov
cwde
test
or
ret
test
push
push
jo
shl
xor
test
jmp
fwait
sub
fistp
xchg
xchg
or
outs
sub
xor
cmps
(bad)
adc
cld
mov
stos
mov
xchg
sbb
scas
sub
into
retf
add
or
jnp
je
xchg
adc
add
test
stc
mov
pop
movs
add
loope
sbb
imul
in
shl
jge
gs
mov
cmps
inc
pop
cli
pusha
jmp
pop
(bad)
mov
sbb
mov
and
shr
or
outs
and
xchg
inc
add
or
test
push
dec
aam
add
leave
daa
int
imul
mov
js
cmp
mov
jo
mov
mov
in
hlt
sub
xchg
inc
pop
cmp
push
iret
fild
stos
pop
cld
adc
aam
pop
out
fnsave
das
sub
nop
aam
cmp
xor
daa
mov
mov
adc
rcr
jbe
push
or
mov
mov
adc
ret
outs
ror
popf
loope
stc
ja
mov
out
leave
clc
sub
sbb
mov
idiv
mov
sbb
pop
repz
mov
ja
sbb
sbb
retf
call
aaa
out
(bad)
or
add
and
fisttp
subps
mov
jno
pop
outs
sbb
mov
xchg
push
xlat
lock
lds
sub
fdiv
test
jmp
cmp
add
jg
jb
(bad)
call
mov
inc
bound
int
inc
fmul
add
lock
addr16
push
adc
xor
or
and
or
stc
fs
cli
rcr
push
xchg
dec
shl
inc
fs
sub
arpl
or
aam
std
or
mov
cmp
jnp
xchg
cmp
adc
es
or
out
xor
fucomp
in
lock
push
jne
or
lods
rcl
retf
push
sub
rol
popf
enter
xor
fistp
nop
neg
sub
push
cmps
and
inc
dec
lar
out
or
rol
ret
sar
mov
out
mov
mov
aaa
mov
lahf
xor
js
xor
cmp
cli
cmp
movs
dec
sub
loope
mov
sub
jb
xor
pusha
sub
pusha
jns
mov
iret
pop
sub
push
adc
push
mov
(bad)
inc
aas
cwde
popf
addr16
stos
or
or
mov
sbb
mov
clc
sbb
ss
pop
mov
mov
mov
xor
add
dec
inc
data16
test
xlat
push
xlat
in
push
mov
mov
in
clc
ins
sub
dec
sti
inc
fimul
movs
stc
push
fldenv
ins
jp
jno
pop
in
xor
cmp
aaa
leave
test
or
push
fs
out
cld
inc
rcl
nop
jmp
sbb
pusha
and
or
mov
mov
call
cmp
adc
(bad)
sub
iret
dec
fcom
ret
fcmovb
push
dec
imul
sbb
inc
cmp
or
and
mov
mov
adc
add
mov
mov
adc
push
movs
xchg
clc
(bad)
icebp
xchg
mov
sbb
cli
repnz
ins
mov
in
inc
xchg
cld
sub
jecxz
lock
shl
mov
paddb
fsub
jmp
fstp
dec
add
xchg
fsubp
loop
(bad)
jo
out
inc
call
ins
or
es
mov
dec
inc
enter
dec
fadd
or
mov
enter
mov
leave
loope
xchg
cld
adc
xchg
and
and
push
sub
std
enter
clc
sub
add
outs
cmp
mov
mov
in
out
neg
cmp
mov
ror
xor
cld
jbe
jb
push
dec
pop
hlt
aad
loop
lds
mov
sbb
push
cmps
mov
mov
sub
repz
xor
mov
dec
xchg
aam
push
push
clc
leave
aad
pusha
and
pop
rol
push
aaa
into
in
les
sub
push
mov
adc
jecxz
aam
sbb
and
pop
cmp
outs
xchg
imul
jl
cmp
sbb
cmp
out
(bad)
add
pop
ret
dec
xor
jb
std
out
pop
imul
dec
cmp
add
inc
mov
add
dec
inc
sbb
push
scas
mov
(bad)
jl
mov
mov
(bad)
ss
or
mov
mov
jb
repnz
adc
pop
inc
cmp
lock
inc
mov
push
retf
test
jmp
xchg
jo
or
cdq
and
in
sub
aaa
dec
sub
sbb
test
inc
xchg
cli
fadd
xor
in
push
sbb
mov
jmp
fsubr
loope
punpckhwd
cld
mov
inc
xchg
jp
mov
in
fimul
lea
mov
call
mov
movs
cmp
test
rcl
sub
paddq
scas
push
xor
inc
fcomi
mov
ffreep
push
test
dec
repnz
pop
retf
shl
inc
shl
and
shl
add
arpl
fadd
jl
push
mov
neg
pop
retf
sub
jmp
mov
jge
sub
(bad)
mov
ror
sbb
cmps
pop
sub
arpl
loop
lods
std
xchg
jl
inc
cdq
push
call
cmp
fsubr
jae
cmc
retf
loope
or
mov
dec
in
inc
add
outs
ficomp
inc
and
jnp
outs
fprem1
sbb
fs
and
ja
sbb
xor
jnp
dec
xchg
jmp
mov
aad
sub
mov
lods
arpl
cmp
hlt
sbb
mov
fyl2x
icebp
in
mov
push
mov
test
pop
pop
(bad)
out
sbb
jg
push
sub
js
retf
inc
ja
in
out
dec
push
push
stos
inc
push
jns
xor
pop
outs
pop
push
push
mov
not
or
gs
push
and
sub
js
push
arpl
pop
imul
push
and
imul
or
add
push
lods
pop
dec
cld
jo
scas
mov
repz
mov
pop
stc
xchg
and
mov
or
fidiv
iret
in
sub
mov
sub
pusha
adc
mov
jl
inc
test
dec
test
xor
out
mov
repnz
mov
sbb
cmp
mov
(bad)
dec
hlt
test
rol
jnp
dec
jo
jmp
lods
sti
jo
scas
pop
dec
rcr
dec
(bad)
mov
aaa
cmps
sub
dec
lahf
push
(bad)
pop
push
push
into
xlat
mov
push
les
xchg
sti
xchg
cmp
lea
xchg
les
push
mov
pop
inc
push
rep
leave
test
jmp
lods
xor
std
(bad)
xchg
ficomp
inc
xor
jle
cmp
sub
add
adc
fisubr
fmul
(bad)
mov
sahf
or
sub
scas
(bad)
fsub
sahf
or
jns
jmp
mov
cdq
push
inc
jo
leave
cdq
fld
ror
scas
je
in
dec
pop
dec
out
dec
cmp
out
dec
adc
xlat
dec
pop
mov
ds
out
sub
add
cld
adc
push
inc
push
pop
push
sbb
sbb
mov
mov
(bad)
xchg
repz
add
test
jl
mov
fcom
dec
repz
popf
mov
push
out
test
arpl
xor
mov
into
pop
inc
sub
xchg
jnp
xchg
sub
adc
loope
sti
xchg
adc
push
lods
fwait
rol
xor
fwait
cdq
lock
or
mov
dec
mov
bound
ins
scas
cwde
push
sbb
push
stos
(bad)
jo
cs
int3
or
push
sbb
push
rcr
or
jmp
dec
or
jl
pop
es
adc
sub
add
call
mov
cwde
dec
test
fwait
leave
and
xchg
xchg
mov
fisttp
popf
div
ror
loopne
and
and
mov
cmps
sbb
xchg
cmp
push
and
outs
cmp
sbb
out
ins
inc
clc
dec
test
add
ret
jecxz
mov
xor
sar
pop
pop
pop
mov
(bad)
int
sub
jnp
test
adc
mov
pop
imul
sbb
jnp
cmp
jne
sbb
dec
aaa
jge
scas
cwde
clc
icebp
gs
xor
mov
sahf
(bad)
mov
(bad)
les
ss
push
int
cs
mov
mov
or
mov
jb
push
cmp
push
mov
out
lods
and
inc
loope
jbe
cld
stos
and
mov
(bad)
pop
(bad)
push
inc
inc
stos
mov
fiadd
(bad)
mov
mov
mov
and
scas
(bad)
in
cmc
retf
pop
mov
push
arpl
pop
jne
lds
mov
out
xor
xor
sahf
push
inc
pop
jnp
in
ret
je
cmp
mov
ins
stos
ret
cli
sub
cs
xor
mov
mov
test
push
sbb
rol
cmps
mov
sbb
xchg
ds
leave
push
hlt
(bad)
or
cwde
mov
retf
jnp
lahf
xchg
imul
cli
mov
mov
jnp
cli
inc
mov
push
jns
sub
and
and
mov
imul
repnz
rcr
xchg
fisubr
aam
lea
jmp
loopne
cmps
fs
lock
push
int3
mov
hlt
test
dec
mov
mov
fisub
mov
adc
adc
push
mov
out
cmp
ja
ja
addr16
out
gs
mov
outs
out
jae
shl
mov
or
inc
shl
sub
xchg
shr
mov
pop
call
stc
jmp
xor
sti
sbb
bound
dec
add
loop
cmps
mov
cmp
mov
call
aaa
retf
or
je
in
popa
jbe
test
jne
inc
push
push
movs
stc
or
popf
test
add
jne
and
sbb
push
fdiv
pop
es
outs
sub
loope
jmp
cmc
pop
cmp
fs
in
loop
xor
jmp
or
pusha
fwait
cld
retf
aaa
popa
aam
mov
dec
push
jl
pop
push
cmp
mov
or
call
pushf
cmps
and
pop
cwde
outs
jno
enter
lds
sbb
cli
sbb
into
dec
jnp
sub
xor
push
and
push
fild
and
aaa
and
dec
lds
imul
test
jae
push
jmp
sti
arpl
mov
push
mov
test
pop
xor
xchg
repz
shl
pop
push
test
jno
clc
adc
lea
scas
jae
inc
xor
mov
pop
lock
mov
or
arpl
std
sar
or
adc
jae
sbb
jle
pop
inc
xor
out
xchg
mov
enter
dec
inc
push
jg
sub
retf
push
shl
ss
jae
dec
outs
xchg
aas
aas
xchg
jae
add
push
rol
ficomp
sbb
(bad)
data16
xchg
aaa
mul
pop
inc
arpl
xor
push
div
or
and
or
mov
pop
movs
sbb
aaa
mov
or
sbb
xlat
push
(bad)
add
mov
jo
dec
loopne
xchg
aam
xchg
test
in
mov
call
cmp
mov
jmp
and
jmp
mov
jmp
stc
outs
push
mov
or
sbb
rcr
lods
jle
push
mov
movs
inc
push
into
shl
data16
in
xor
pop
add
push
pop
dec
aas
mov
jns
cld
sar
adc
push
push
jl
pop
(bad)
in
cmp
aam
pop
lods
push
rol
pop
dec
adc
stos
mov
mov
inc
sub
aas
int
cmp
adc
inc
clc
shr
jl
and
mov
ror
inc
imul
jmp
sbb
in
xchg
inc
inc
xchg
es
fbstp
xor
mov
adc
xor
xor
icebp
out
adc
out
les
pop
sbb
imul
pop
mov
shl
es
out
xor
sti
int3
inc
js
jo
add
repz
inc
imul
cmp
in
movs
cmc
mov
push
js
mov
ins
jecxz
(bad)
into
repz
int3
inc
jecxz
es
dec
pop
addr16
dec
hlt
jne
pop
(bad)
fnsave
loop
mov
pop
jl
inc
xchg
push
shl
sub
outs
iret
fsubr
out
add
cmp
xor
sbb
jb
mov
sub
int
and
jmp
loop
sbb
jb
inc
lods
stos
sub
cmps
push
dec
pop
push
sub
mov
jp
loopne
xor
je
jbe
sbb
out
daa
jle
out
push
jne
fcmovu
clc
mov
adc
mov
daa
push
in
out
call
and
into
inc
loopne
inc
test
cmps
cmp
retf
mov
push
fld
xchg
adc
test
dec
nop
inc
cmp
(bad)
dec
(bad)
or
sbb
dec
pop
ins
inc
xor
push
push
retf
stos
in
push
inc
mov
add
fild
jns
xlat
pop
repz
sbb
pop
xlat
mov
pop
fdivr
lahf
leave
jp
mov
xlat
imul
shl
sahf
or
push
aaa
push
ins
sub
into
test
push
popa
xchg
xor
push
sbb
xchg
movs
dec
clc
in
mov
xchg
repnz
xchg
jmp
cli
outs
std
or
leave
adc
push
fldcw
scas
mov
pop
out
adc
jo
add
cmp
xchg
jle
pop
pop
add
inc
pushf
test
xchg
xor
shl
mov
jp
mov
sub
cmc
lea
(bad)
push
mov
mov
repnz
mov
mov
pop
sahf
adc
sub
adc
in
lds
adc
inc
mov
mov
jmp
gs
mov
sbb
pop
cmps
xor
jmp
mov
sub
or
dec
std
call
inc
bound
mov
mov
or
push
mov
sub
ins
cmp
xor
out
cmp
xchg
and
lods
mov
jnp
push
inc
mov
or
push
and
scas
retf
jbe
or
popa
dec
push
ficomp
test
jge
lahf
cld
fs
pop
(bad)
inc
ins
jae
sbb
loopne
aas
cmp
cmp
and
jecxz
jle
sti
stc
stos
(bad)
scas
int
movs
push
mov
in
pop
cmp
xor
(bad)
scas
dec
(bad)
pop
jno
inc
sub
inc
inc
cmc
add
cmp
mov
mov
pop
xchg
xor
repz
adc
stc
cs
es
mov
jle
cmps
outs
adc
loop
sbb
outs
sbb
add
and
add
sub
sub
fisttp
shl
sub
int3
scas
pop
call
ins
push
call
shl
or
xor
push
lds
pop
sub
ret
pop
(bad)
out
movs
cmps
(bad)
cmc
xor
add
dec
sbb
mov
test
aam
add
dec
cs
add
xor
imul
test
xchg
pop
cwde
inc
in
daa
mov
push
bswap
in
adc
test
jne
adc
fadd
(bad)
dec
sbb
push
rcr
sub
rol
adc
xor
inc
cmps
mov
pop
cld
jecxz
stc
jmp
stc
cmps
(bad)
(bad)
fistp
jnp
jnp
push
add
jne
xchg
pop
sub
mov
cmp
jno
cld
pop
jg
mov
repnz
jmp
scas
push
in
jg
aad
ja
test
push
and
push
add
dec
out
push
push
push
xor
fdivr
dec
sbb
push
out
lea
jg
mov
jnp
add
mov
loopne
repnz
cs
ret
fwait
push
jmp
mov
cmp
adc
dec
icebp
pop
add
or
xchg
jmp
mov
lods
psubq
push
xor
mov
outs
mov
xor
cdq
retf
outs
in
mov
mov
dec
mov
mov
mov
call
and
dec
mov
ja
mov
inc
scas
jb
cmp
iret
jo
cmp
sbb
mov
das
adc
movs
jge
adc
aad
mov
(bad)
fist
lock
mov
and
enter
mov
mov
ret
(bad)
adc
cmps
add
cmp
dec
mov
fsubr
xor
inc
or
mov
push
scas
add
mov
fwait
sbb
sub
dec
jno
les
fwait
push
out
add
dec
rol
popa
pop
mov
aam
std
(bad)
cmp
inc
stos
or
mov
xor
outs
jmp
inc
enter
pop
icebp
and
ret
cmp
cld
or
jle
rcr
fidiv
loopne
js
mov
int
dec
ja
mov
cmp
hlt
loopne
cmps
(bad)
sub
addr16
aas
shl
push
jns
lahf
add
or
jle
push
test
pop
icebp
outs
pop
ret
loope
jbe
inc
pop
or
sbb
mov
loope
loop
adc
dec
in
retf
int
and
pusha
mov
xchg
addr16
fst
js
push
gs
test
cmp
sbb
mov
cmp
mov
out
dec
and
jbe
vmwrite
loopne
jl
mov
ret
xor
cmp
nop
inc
and
(bad)
fisttp
es
(bad)
scas
pop
sub
and
pop
jnp
(bad)
leave
ret
mov
(bad)
mov
test
test
stc
inc
inc
scas
cmp
mov
outs
fsub
xchg
fiadd
popf
adc
loop
pop
js
loope
and
fist
adc
xor
aaa
rcl
lock
inc
in
cmp
cmp
mov
mov
dec
adc
sbb
mov
add
jb
jp
int3
sbb
mov
push
sub
into
hlt
xchg
or
sbb
outs
outs
sar
loopne
(bad)
addr16
xor
mov
dec
fistp
sub
pop
xor
sub
pop
stos
inc
dec
fmul
inc
pop
jge
retf
int3
movs
pop
jno
jp
jbe
sar
daa
push
ja
pop
jle
fild
sbb
test
test
fstp
xchg
div
xor
mov
adc
into
xchg
pop
shl
mov
cdq
adc
scas
dec
or
(bad)
adc
in
cmps
rol
add
pop
mov
leave
and
mov
jecxz
and
mov
cmp
mov
shr
rcr
sbb
cmp
xor
ins
mov
sub
ja
and
xchg
sbb
es
(bad)
xchg
push
sub
aam
fiadd
shl
or
dec
and
adc
sub
in
push
jecxz
or
sbb
js
(bad)
retf
mulps
push
icebp
arpl
push
xor
xor
pushf
xchg
inc
icebp
repz
mov
scas
pop
sub
iret
sar
xchg
push
cdq
jmp
or
mov
aad
cld
movs
mov
lahf
es
and
leave
adc
mov
mov
es
fs
mov
add
cmp
aaa
mov
push
sub
jg
xor
jnp
fistp
dec
loop
ins
mov
pop
jmp
dec
and
and
imul
cmp
add
mov
mov
add
outs
xor
leave
call
cwde
(bad)
pmaxsw
and
jnp
int3
mov
nop
ins
xchg
sahf
fcos
mov
call
cld
pop
xor
adc
inc
es
jns
das
(bad)
ins
int3
movs
mov
popa
call
shl
inc
gs
inc
push
pusha
daa
fwait
mov
adc
out
sub
ins
mov
cs
jecxz
sbb
clc
pop
and
inc
aam
jle
jmp
cld
rol
unpcklps
ret
mov
add
sti
div
int
add
push
pop
or
add
xchg
clc
or
aas
sbb
mov
sub
out
xor
mov
push
mov
call
xor
inc
sub
xchg
pop
sub
inc
call
popf
aam
pop
es
inc
sub
out
test
fisubr
mov
cmp
mov
aaa
inc
xor
xor
inc
loop
leave
add
enter
mov
loopne
enter
int
sbb
mov
push
or
retf
dec
sti
mov
jmp
lahf
test
xchg
dec
sub
dec
loopne
or
and
dec
add
push
stc
sar
pop
adc
pop
js
jb
sbb
jecxz
repnz
repz
lock
xchg
movs
mov
(bad)
mov
mov
movs
xchg
(bad)
jnp
mov
lods
mov
aaa
xor
add
or
fidiv
shr
jp
mov
pop
jle
mov
rcr
scas
cmps
push
rcr
inc
hlt
mov
sbb
dec
je
jbe
push
mov
and
jne
and
inc
and
movs
data16
and
xor
mov
stc
push
fist
jae
jge
inc
pop
xchg
mov
mov
lahf
pop
add
ins
dec
cwde
rcr
ret
mov
rcr
push
jmp
mov
movs
out
pop
sbb
jmp
imul
sbb
xchg
addr16
lock
or
jmp
fild
sub
adc
xchg
inc
jmp
call
fisubr
adc
stc
cmc
lea
jbe
pusha
dec
aad
mov
ds
stos
fiadd
nop
xor
mov
cmp
xor
ss
shl
jmp
stos
adc
cli
jbe
sub
mov
xchg
cmps
mov
push
sar
ret
cmp
shl
push
or
mov
adc
(bad)
sar
xor
outs
or
xor
idiv
mov
std
out
jbe
mov
std
aaa
mov
adc
hlt
pushf
add
sbb
pop
xchg
retf
pop
sub
xchg
stos
aad
lea
and
mov
sub
cwde
jmp
and
xchg
enter
dec
jno
xchg
cld
popa
push
data16
iret
dec
jl
popa
repnz
xchg
fnstcw
(bad)
out
xchg
aas
lahf
test
push
int
dec
or
inc
push
push
jmp
sbb
cmps
jne
pop
add
xor
imul
stos
out
xchg
xor
inc
scas
mov
sub
mov
std
cs
add
sub
into
mov
pop
fdiv
mov
dec
outs
popf
mov
lods
sub
add
jmp
fstp
jmp
mov
mov
jmp
ret
popa
mov
and
call
cwde
cmp
loope
out
arpl
repz
mov
push
mov
add
out
pop
les
push
shr
aad
fisttp
xchg
aad
into
out
outs
fwait
addr16
mov
xchg
dec
jl
es
adc
cmp
cmp
icebp
ds
dec
jns
cmp
nop
out
xor
stos
jle
adc
pop
push
adc
div
das
shl
push
jno
xchg
imul
into
dec
enter
lgs
test
xor
mov
lods
das
es
retf
xlat
jne
fidivr
pop
pop
and
retf
cmp
popf
add
hlt
rcl
js
dec
in
dec
jp
sub
xchg
jl
or
jne
sbb
call
aad
ds
mov
pop
xchg
ss
push
cmp
jne
cmp
dec
sar
test
mov
daa
pop
pop
mov
fiadd
cmpxchg
jae
(bad)
dec
xor
mov
mov
data16
dec
and
mov
inc
mov
xchg
or
pop
or
or
sub
pop
xchg
lock
cwde
imul
stos
imul
lea
push
gs
ret
leave
in
inc
or
iret
pop
cmp
imul
cld
push
pop
jge
push
push
dec
(bad)
sub
repz
mov
sub
cld
retf
punpckldq
sub
cld
mov
pop
js
fisubr
pop
push
in
repz
(bad)
and
(bad)
jp
sbb
aaa
cli
stc
sbb
mov
lds
pop
or
or
jns
push
mov
ins
or
repnz
add
pop
mov
jo
and
jbe
in
rcl
scas
xor
leave
xor
fidivr
enter
fs
std
cmps
leave
movs
push
mov
cmps
xor
sbb
mov
clc
ficomp
sahf
aas
cmp
cld
das
mov
popa
into
push
bswap
retf
push
dec
and
or
add
push
ss
adc
clc
mov
adc
outs
xchg
sti
std
dec
jo
jge
or
inc
int3
adc
xor
inc
or
repnz
mov
or
mov
sysret
mov
dec
stc
cdq
adc
inc
or
cmp
fs
movs
jcxz
push
lahf
out
js
mov
push
ja
mov
inc
cmp
out
adc
std
fcmovnu
test
xchg
call
rol
cmp
cmp
ficom
ror
mov
add
std
lods
dec
(bad)
aad
(bad)
(bad)
and
push
les
dec
pop
sub
sti
aas
inc
shl
push
xor
mov
in
cdq
test
iret
daa
inc
test
sbb
cmp
add
cs
xor
ret
xchg
pop
and
fst
js
push
shl
and
cmps
sub
popf
pop
lea
repnz
pop
fwait
or
movs
and
cmc
aas
icebp
or
push
popa
stc
jle
jnp
ret
fmul
daa
push
loopne
jno
adc
lahf
mov
adc
mov
lahf
xchg
and
cmp
jle
jbe
mov
mov
xor
mov
jns
push
xchg
mov
mov
push
push
cmp
mov
and
cmp
push
add
scas
mov
sbb
cmc
jecxz
bound
lods
enter
rcl
inc
cmp
rcl
inc
dec
sbb
xchg
pop
inc
mov
shl
mov
xchg
sahf
jmp
mov
in
push
imul
stc
mov
(bad)
(bad)
out
xchg
cwde
or
push
lahf
icebp
je
test
add
div
mov
in
mov
ds
sbb
test
jae
and
inc
push
mov
xor
jae
in
push
mov
mov
dec
out
dec
sbb
push
ja
dec
or
data16
fs
movs
inc
push
mov
shl
or
nop
fdivp
jne
xchg
push
xor
loop
xchg
out
test
into
inc
add
sbb
mov
loop
xchg
mov
outs
mov
pop
mov
retf
dec
outs
scas
add
dec
or
xchg
in
pop
popf
mov
fidiv
clc
fwait
ss
jo
push
ins
xchg
retf
out
test
push
add
sub
push
mov
outs
lds
xor
(bad)
jge
out
int3
(bad)
pop
xchg
mov
adc
mov
cmp
inc
dec
retf
call
push
sub
les
jne
push
js
js
pop
adc
jbe
popf
xchg
mov
adc
sbb
adc
inc
dec
or
mov
mov
and
addr16
outs
repnz
rcl
add
imul
add
mov
mov
cmp
mov
adc
(bad)
jns
int3
mov
retf
mov
cmps
xlat
mov
push
push
mov
inc
sbb
or
pop
int3
jmp
or
push
in
mov
sbb
sub
adc
xor
retf
push
movs
mov
lea
dec
(bad)
and
mov
(bad)
jecxz
pop
clc
mov
mov
sbb
pop
cmp
in
fidivr
jg
js
jb
scas
mov
add
fimul
call
add
jmp
add
mov
mov
(bad)
repnz
inc
dec
enter
int3
xor
xchg
and
fidivr
in
mov
cmp
inc
ja
mov
mov
lea
push
sub
pop
enter
mov
and
dec
adc
stos
or
sbb
(bad)
sti
nop
nop
ins
loopne
lea
pop
and
sbb
(bad)
and
mov
imul
movs
xchg
push
ins
sub
repz
adc
sub
in
pop
dec
fsubr
popf
jne
div
inc
in
sub
popa
mov
rcl
xchg
nop
or
and
(bad)
mov
test
pop
movs
lods
push
and
pushf
(bad)
in
xor
mov
xchg
sbb
inc
inc
inc
sbb
jle
adc
clc
int
in
push
scas
clc
lahf
jmp
sar
mov
or
mov
not
jno
xchg
fsub
ds
dec
push
fwait
pop
sbb
aas
or
jle
sahf
fcom
pushf
or
ficomp
dec
aas
ja
inc
movs
sub
mov
inc
jp
inc
ins
daa
xchg
xchg
shr
xor
cwde
dec
xor
mov
mov
loope
add
fldenv
fnstsw
cmp
xchg
les
inc
or
aas
jg
in
push
int
loop
or
fwait
jne
push
je
jg
sub
or
push
xor
inc
in
dec
xor
jmp
inc
addr16
mov
dec
sub
test
out
aaa
call
sub
sbb
shr
jb
loope
pop
mov
daa
out
outs
test
ss
in
jns
and
fild
loope
xchg
dec
dec
mov
mov
rcl
sub
aas
test
jecxz
outs
pop
mov
stos
cdq
bound
pop
mov
sub
mov
jg
out
shr
inc
cmp
xor
movs
ja
popf
sbb
imul
push
pusha
rcr
pop
cs
xor
(bad)
xchg
pusha
ret
daa
arpl
fs
cmps
jae
xor
jmp
adc
ds
pop
cmp
or
arpl
lea
rol
das
add
stc
xor
sub
mov
and
leave
jns
fwait
cdq
dec
sub
pushf
and
in
mov
adc
rcr
mov
aas
enter
scas
xor
mov
fs
xor
or
imul
aad
jnp
adc
int
jl
sub
add
or
jmp
pop
pop
fisttp
div
ret
test
jo
add
outs
aad
xchg
jl
mov
call
or
rcl
sub
xchg
retf
mov
mov
jo
fdivr
leave
enter
mov
adc
push
rcr
cmps
fwait
cmp
in
std
push
mov
sub
gs
or
test
out
jg
add
test
lahf
pop
or
cmc
mov
test
and
push
iret
cs
lods
mov
add
pop
sbb
mov
vaddsubpd
jecxz
jnp
outs
retf
cwde
add
xor
and
push
push
aad
add
rcr
sar
arpl
in
mov
add
icebp
arpl
clc
aaa
dec
gs
sub
int
shl
je
fst
and
or
adc
into
std
out
enter
inc
xchg
inc
mov
bound
and
fs
inc
test
stos
retf
jecxz
stos
repnz
cmp
in
mov
sti
cmps
mov
fs
jg
dec
mov
pop
jmp
stc
dec
or
jp
popa
frstor
(bad)
mov
lahf
fist
pop
ror
popa
adc
leave
jo
stc
inc
outs
rep
out
int3
fsubr
mov
loopne
adc
popa
sbb
mov
pop
xchg
sbb
aam
dec
gs
or
xchg
cmp
adc
repz
push
cmps
cwde
sbb
out
ja
popf
mov
add
pusha
pushf
xchg
lods
femms
inc
cmp
retf
and
mov
cmp
add
les
test
inc
pop
pop
xor
pop
or
xor
jle
inc
call
mov
jne
bound
loop
add
xchg
hlt
xchg
cdq
pop
pop
mov
pop
imul
leave
mov
cdq
stc
mov
lea
xchg
ret
mov
jb
and
sbb
lock
gs
inc
adc
pop
scas
inc
aad
push
sub
fwait
mov
cmps
mov
mov
add
mov
(bad)
scas
(bad)
(bad)
loop
test
jne
mov
out
aad
xchg
push
adc
sub
sbb
or
and
ror
push
cdq
ss
imul
fcomp
sbb
sub
(bad)
ss
xchg
adc
test
mov
and
mov
sbb
xlat
push
(bad)
jmp
sub
and
(bad)
bound
push
ja
jmp
pop
jne
lar
mov
pop
jnp
je
aas
or
jne
ficom
xor
repz
call
add
in
dec
adc
aas
int
xchg
les
xor
dec
daa
jb
jo
pop
pop
and
or
getsec
movs
and
push
stc
bound
ror
rol
dec
cmps
shl
je
sub
push
mov
repnz
cmp
push
add
pop
vmwrite
xchg
cmp
sub
push
push
fdivr
sar
inc
mov
out
repz
mov
je
push
(bad)
xor
cmp
adc
add
cmp
lods
jecxz
call
(bad)
cmp
das
mov
fdivr
mov
out
fiadd
data16
shr
jae
enter
std
cwde
cmp
outs
leave
rcl
mov
inc
push
and
(bad)
lods
add
outs
mov
cmp
xor
pop
inc
loopne
in
dec
mov
add
repnz
mov
xlat
fimul
daa
inc
sar
hlt
mov
loop
mov
dec
inc
dec
pushf
jno
or
push
into
cmp
inc
fnstsw
push
or
inc
pop
call
aas
sbb
fucompp
lds
fld
ja
mov
sub
adc
push
outs
into
fst
mov
test
pop
mov
cmp
cmps
pop
aad
pop
fldenv
aad
mov
jmp
pusha
mov
retf
add
inc
jmp
test
in
movs
mov
pop
cmp
ret
mov
xlat
xor
sub
and
add
push
test
mov
adc
std
in
pop
xchg
mov
add
icebp
les
fst
mov
(bad)
dec
loopne
mov
ret
ins
out
push
push
lock
xor
not
and
dec
dec
adc
rol
lock
adc
test
jns
cmp
dec
movs
add
mov
test
sbb
or
pop
mov
cmp
sub
mov
stos
(bad)
test
lods
idiv
call
daa
mov
lods
ficom
push
int
gs
adc
xor
arpl
or
cmp
mov
xchg
loope
xchg
data16
add
popa
adc
mov
jle
xor
in
mov
test
mov
jecxz
or
(bad)
mov
loope
sar
lahf
cmp
loopne
cmp
push
inc
clc
ins
and
std
and
pusha
in
sub
ss
int3
fild
adc
jno
sbb
sub
inc
inc
into
push
and
rcl
pop
jbe
pusha
inc
xchg
retf
push
mov
dec
lods
pop
jmp
mov
mov
cmp
fadd
(bad)
sbb
dec
int3
lock
and
xchg
js
cs
call
push
and
jmp
adc
and
pop
(bad)
mov
hlt
das
nop
shr
add
repnz
icebp
jmp
sbb
xor
aam
into
sbb
fisubr
iret
or
push
mov
cmp
repnz
mov
push
push
lods
push
dec
sub
js
in
ret
mov
int3
mov
ror
cmc
cmp
xchg
std
mov
and
fisub
not
es
mov
xlat
push
mov
je
mov
ss
add
sar
add
out
push
inc
dec
mov
fistp
in
ret
out
sbb
xor
sub
stos
push
or
(bad)
jns
add
cmp
push
push
adc
pop
or
jg
je
punpckhdq
je
inc
inc
pop
jne
outs
sti
in
sub
mov
cmps
sbb
fld
ret
push
mov
(bad)
popa
dec
mov
cmps
bswap
int3
mov
jnp
dec
mov
cmp
jge
aas
adc
sub
mov
inc
push
test
mov
jo
cld
(bad)
not
jno
pop
jbe
inc
out
mov
call
lahf
xchg
xor
cdq
push
mov
rcr
inc
int
lock
aad
(bad)
push
inc
inc
dec
cmps
cmp
lea
push
fs
ins
(bad)
mov
nop
push
hlt
xchg
mov
icebp
fisubr
outs
cmps
outs
cmp
sub
das
fs
std
dec
jo
loope
icebp
popf
fnstsw
jl
mov
lods
hlt
int3
cmp
(bad)
jns
shl
jno
cs
xchg
(bad)
mov
xor
inc
mov
push
jo
or
bound
lahf
jb
mov
mov
sub
pop
in
test
mov
sbb
and
lods
push
adc
sub
out
push
mov
shr
sub
ja
inc
cli
pop
sub
push
iret
lds
in
outs
xchg
(bad)
xchg
dec
or
cmc
and
inc
(bad)
ds
rol
test
iret
mov
fidivr
into
stc
pop
pushf
sbb
mov
(bad)
div
rcl
(bad)
xchg
or
aam
push
scas
push
add
jns
les
push
daa
xchg
ret
and
pop
dec
xchg
and
test
sahf
add
jbe
pop
(bad)
out
movs
xor
mov
dec
(bad)
xlat
jmp
data16
mov
push
or
sbb
cmp
pop
int3
cli
cmp
cli
adc
loop
pop
bound
xchg
aaa
in
cs
push
test
fcmovb
push
retf
fsubr
pop
jecxz
cmc
xchg
sbb
enter
not
mov
sub
mov
jnp
imul
addr16
cmp
sbb
sbb
out
mov
xor
jp
lahf
loope
icebp
test
inc
inc
fidivr
adc
movs
add
daa
or
ins
or
and
mov
xor
push
fild
jno
retf
(bad)
mov
pusha
jmp
dec
pop
lods
jmp
add
cmp
inc
cs
leave
jne
or
xchg
cs
bound
stos
lods
push
dec
cmp
cld
sbb
leave
pop
push
or
movs
jl
bound
jns
xlat
lds
add
cmp
(bad)
cmp
or
inc
sbb
mov
xor
loopne
mov
xchg
fdiv
mov
pop
jmp
xchg
pop
loope
sbb
push
dec
cmp
push
shl
cmps
mov
jl
dec
inc
push
sbb
or
loope
dec
mov
jae
out
pop
loope
jnp
lods
and
out
and
or
lds
cmp
or
iret
stc
shl
js
mov
inc
cmp
cwde
hlt
jmp
lea
sub
push
xor
hlt
xchg
push
mov
and
push
xor
dec
clc
inc
rcr
(bad)
cwde
push
xor
inc
inc
popa
or
dec
adc
stos
jbe
sbb
mov
xlat
fdivr
push
ret
adc
inc
adc
push
movs
and
push
and
xchg
jae
out
xchg
xlat
mov
(bad)
popa
pop
adc
cld
xchg
sub
mov
in
arpl
xchg
loope
dec
pusha
cld
jmp
movs
push
pop
out
xor
mov
push
loopne
mov
hlt
pop
jle
mov
pop
add
ins
mov
stc
lea
mov
mov
and
sub
push
mov
lods
scas
jl
cmp
dec
mov
xchg
fstp
div
mov
cmp
xor
idiv
leave
mov
mov
pop
(bad)
jbe
rcr
push
dec
loop
dec
or
jbe
rol
and
test
call
jmp
or
lock
lods
pop
xlat
dec
push
jecxz
mov
jecxz
and
in
push
or
cmp
repz
jbe
je
or
test
mov
ss
cli
jbe
jne
jl
sbb
aas
xchg
sub
sub
lock
lods
adc
or
sbb
out
mov
push
aaa
fstp
arpl
jge
add
add
test
pop
and
pusha
fmul
inc
ror
imul
inc
sbb
cli
sbb
mov
inc
popf
out
(bad)
(bad)
popf
data16
sbb
rcr
mov
lods
fs
aad
fisttp
dec
ja
jmp
and
xchg
xchg
cmp
gs
xor
retf
xor
ja
xor
aam
dec
pop
jge
xchg
push
daa
xchg
pop
js
cmp
into
sbb
out
mov
push
sbb
outs
int
mov
cmps
cmps
add
pop
fwait
mov
test
popf
dec
mov
inc
icebp
or
popa
inc
shl
enter
sbb
test
sub
adc
mov
out
jmp
xchg
inc
sbb
mov
mov
jg
xor
lds
sub
dec
ror
jbe
xchg
xor
mov
not
das
(bad)
sbb
out
outs
pop
add
pop
mov
out
aas
add
bound
cmp
adc
xchg
lds
and
sub
push
leave
sub
loop
ins
je
(bad)
mov
cmps
and
push
and
sub
loope
outs
out
and
int
shl
pop
pushf
mov
mov
or
jno
in
cli
pop
je
sbb
xchg
scas
inc
xchg
addr16
push
cmp
scas
or
imul
adc
lock
lock
cld
mov
jno
adc
(bad)
es
dec
inc
push
mov
sub
adc
inc
retf
rcr
retf
ds
push
mov
sbb
push
loopne
das
sahf
jo
dec
push
mov
std
mov
fisub
mov
pop
dec
mov
jno
jmp
in
fst
outs
xor
popa
xchg
js
cwde
add
sbb
jp
sub
cmp
aam
fcomi
jmp
or
test
das
push
in
(bad)
xor
ror
daa
(bad)
mov
mov
inc
jp
mov
jae
ret
stc
bound
gs
xchg
mov
cmp
adc
xchg
(bad)
je
xlat
push
or
pop
cmc
xchg
mov
sbb
call
cs
add
inc
jl
imul
ins
test
int
(bad)
jmp
inc
jns
sbb
jl
test
mov
rol
mov
mov
ret
pushf
push
cmc
aam
jl
outs
jne
mov
xchg
daa
dec
mov
cmp
mov
jl
mov
mov
and
jmp
or
sbb
les
clc
fdiv
add
aad
adc
push
dec
jl
mov
push
mov
cmp
cmc
xor
ret
(bad)
or
es
xor
push
mov
stos
aam
loopne
pop
cmp
in
sbb
ret
jg
dec
mov
sti
imul
xor
adc
gs
push
in
push
(bad)
jne
arpl
out
cld
add
pop
ret
mov
cld
push
jne
cmp
push
outs
repz
aaa
(bad)
iret
idiv
mov
hlt
cmp
idiv
retf
in
daa
mov
pop
mov
nop
jmp
(bad)
retf
sub
movs
jne
xchg
movs
xchg
js
push
arpl
int
xlat
mov
xlat
sub
nop
mov
ret
ffreep
cld
add
jg
sub
fs
cmp
or
cwde
addr16
sbb
sbb
(bad)
mov
cli
dec
lods
clc
push
and
loopne
push
popa
imul
mov
push
stos
mov
sub
cmps
sbb
dec
mov
xchg
arpl
fsubr
xlat
lahf
xor
lds
arpl
not
add
push
cmp
xchg
(bad)
out
dec
pop
mov
inc
mov
mov
mov
jmp
xchg
adc
or
sub
pmulhw
xchg
mov
mov
add
or
cmp
mov
lock
xor
neg
pop
sub
sub
lea
inc
test
outs
jbe
push
outs
xlat
xor
sbb
xor
es
push
adc
xor
pop
sbb
adc
add
jecxz
push
adc
fcmove
xchg
push
stos
cmp
xchg
test
hlt
push
(bad)
imul
cmc
imul
int3
fidivr
mov
and
dec
jmp
out
movs
fstp
dec
cli
pop
push
jnp
mov
out
mov
hlt
mov
jmp
xor
(bad)
mov
test
push
adc
fsub
pop
xor
push
sar
sub
into
int3
add
add
jo
jmp
mov
inc
xchg
and
jle
es
mov
push
cmp
sbb
mov
cdq
cli
daa
mov
push
addr16
mov
rcr
cld
sar
cmp
jge
sbb
test
push
fucom
sbb
sub
les
xchg
xor
clc
push
std
inc
outs
in
mov
mov
fs
cdq
ss
in
imul
xchg
and
sbb
out
sbb
movs
les
stc
mov
inc
fild
or
add
cmp
addr16
lods
or
jnp
ss
cld
or
inc
and
and
out
rol
mov
cmc
pop
mov
sub
(bad)
repz
dec
in
cmp
(bad)
pop
jecxz
dec
loopne
js
pop
xor
fisubr
fld
jl
std
hlt
clc
cmps
retf
sbb
(bad)
call
add
dec
pop
xchg
xor
fdivp
dec
loope
pop
sbb
inc
les
call
dec
push
mov
fdiv
adc
jo
cmp
les
pop
aam
push
dec
test
xchg
mov
mov
sub
cwde
and
sub
rcr
dec
call
(bad)
ja
mov
inc
mov
adc
xor
mov
cld
int
xor
fisub
fwait
aas
sbb
popa
adc
enter
or
outs
popf
cs
(bad)
add
(bad)
loope
or
dec
sti
mov
data16
gs
shr
out
xchg
xor
cs
cmc
enter
dec
and
dec
mov
in
mov
loop
mov
icebp
rcl
test
add
stc
add
sbb
ins
xlat
mov
push
scas
xor
jmp
push
jae
cmc
imul
mov
adc
stos
int3
lahf
inc
push
inc
mov
jmp
jge
leave
pop
cmp
cmc
xchg
mov
cmp
loopne
xchg
push
mov
pop
pop
lock
in
push
cmp
(bad)
xor
push
or
out
(bad)
jae
cmp
test
mov
cmp
(bad)
jmp
jl
mov
dec
push
aam
cld
jmp
and
push
ins
push
push
cmps
xor
aas
sar
mov
mov
and
adc
shl
fcmovnbe
xor
imul
or
or
jno
mov
ss
push
loope
scas
dec
sbb
daa
out
(bad)
in
dec
cmp
fidiv
cmp
fisttp
jg
cmp
stos
int
cmps
frstor
push
pop
sbb
dec
inc
xor
lea
cmp
ret
imul
sbb
popa
dec
repz
sub
dec
stos
adc
xlat
add
icebp
imul
lock
mov
dec
xchg
test
retf
fidiv
adc
ss
inc
xor
leave
outs
push
mov
cmps
fucompp
xlat
and
mov
ret
sbb
xchg
scas
and
mov
or
hlt
(bad)
int3
xchg
nop
jg
adc
pop
xor
push
aad
iret
ja
inc
lock
popf
sub
mov
cmp
dec
mov
jle
in
cmp
mov
mov
sbb
adc
movs
aas
sbb
dec
fdivr
popf
mov
pusha
shl
(bad)
aam
inc
sbb
push
pop
hlt
cmps
movs
sub
jg
mov
adc
mov
push
popf
dec
loopne
jno
out
loopne
or
inc
into
jg
outs
sar
iret
pop
cld
mov
xchg
ins
aad
or
sbb
or
push
lods
cmp
dec
mov
es
jl
sti
push
inc
jl
adc
sti
and
jnp
mov
push
scas
push
out
adc
stos
(bad)
mov
pop
and
or
inc
leave
push
mov
adc
inc
push
or
sar
mov
jb
das
xchg
xchg
loopne
test
test
jb
sub
cli
dec
retf
push
adc
cmp
adc
mov
mov
ds
and
(bad)
adc
loop
lods
mov
or
iret
xchg
fldcw
mov
ss
inc
js
mov
(bad)
lea
cmc
lds
pop
test
xchg
out
inc
cmc
sbb
ss
mov
push
sbb
sbb
xor
dec
fimul
fnstenv
scas
stos
mov
push
loopne
jno
gs
lock
jg
xor
dec
sub
je
jg
sbb
xor
aad
xor
fimul
pop
stos
in
inc
stos
sub
dec
test
js
fwait
dec
iret
movs
add
scas
dec
int
dec
daa
iret
jle
or
lea
shl
and
ficom
xor
mov
jle
inc
aam
push
push
mov
xchg
mov
jne
sub
loop
shl
push
test
popf
out
xor
inc
mov
into
sub
xor
cmps
sub
jmp
and
sub
pop
mov
int3
mov
cs
shl
xor
stos
cmp
or
inc
jle
lahf
jmp
enter
adc
sbb
sbb
cmp
cmp
mov
ins
sub
xchg
leave
fld
fcom
mov
jge
inc
outs
jge
stos
cmps
jb
pop
imul
sbb
sahf
popf
xchg
aad
or
popa
stos
xchg
fdiv
sti
or
popa
cmp
cmps
xor
mov
out
mov
jmp
sub
sub
iret
xor
add
mov
outs
jl
lahf
aas
push
std
add
lods
xor
push
les
xchg
test
pop
xchg
jle
push
int3
add
mov
shl
pop
jns
xor
lea
in
fprem1
xchg
data16
sub
jmp
(bad)
gs
inc
mov
popf
pop
cmp
and
das
push
push
jbe
sub
ret
fwait
test
test
cwde
(bad)
jmp
mov
test
mov
xor
mov
outs
jnp
sahf
hlt
cs
cmp
in
sar
lahf
mov
loope
loopne
jmp
cmp
shr
cmp
jl
and
push
outs
icebp
data16
loope
fisttp
scas
lods
pop
push
add
repz
or
and
mov
inc
sti
pop
nop
mul
dec
fdiv
in
dec
and
aas
or
push
sbb
sub
or
popa
and
pop
in
(bad)
pop
cs
ins
or
xor
jp
ror
push
fimul
xor
push
xchg
dec
inc
scas
or
and
and
pusha
fidiv
sub
or
mov
clc
pop
add
mov
mov
loope
jp
jae
or
jmp
cmp
sti
into
shl
sbb
adc
and
sub
xchg
inc
(bad)
dec
cs
cld
call
jbe
aam
sbb
(bad)
(bad)
sub
pop
mov
scas
call
ds
xchg
xchg
test
push
leave
dec
add
stos
sbb
push
lods
retf
sbb
imul
jno
mov
adc
call
xchg
aaa
push
add
xchg
xor
mov
test
cvtps2pd
xor
add
pop
ins
aaa
or
jg
sahf
mov
jne
xchg
popa
mov
jp
sub
fwait
mov
cmps
mov
mov
pop
sti
lahf
lods
imul
lock
cmp
dec
shl
jnp
cmps
xchg
xchg
mov
fadd
xor
fistp
sbb
cmp
mov
push
es
xor
outs
sbb
sahf
sub
xchg
xchg
cwde
out
cmp
dec
loopne
mov
outs
sub
out
cmps
mov
fisttp
ins
aaa
xor
fstp
xor
stc
aaa
or
xchg
and
aad
mov
xchg
stos
add
pop
(bad)
or
test
push
pop
jo
lods
push
inc
dec
lods
xor
in
fistp
jbe
mov
fidiv
fsub
xchg
(bad)
xchg
cmp
add
xor
stos
sbb
push
mov
loop
mov
leave
or
push
mov
stc
mov
dec
inc
mov
addr16
xchg
pop
outs
paddd
mov
add
jmp
repnz
push
pop
mov
push
dec
lods
jg
sub
and
pop
cmps
push
jnp
sub
xchg
sbb
lods
and
xchg
mov
out
call
mov
(bad)
cmp
imul
std
out
sbb
sti
idiv
jmp
test
aaa
and
push
push
inc
cdq
mov
push
sub
or
inc
jge
test
pop
mov
icebp
jp
cmp
repz
test
pushf
(bad)
fwait
xchg
lahf
js
jae
cmp
xchg
ret
or
addr16
cwde
js
push
sbb
mov
(bad)
ds
xor
inc
out
add
pop
jne
mov
sbb
jno
out
cmp
sub
aad
loope
jns
test
fbstp
mov
call
std
mov
inc
sub
les
fisubr
jns
push
stc
movs
pop
fild
and
add
pop
rol
mov
pop
add
dec
cmps
out
inc
fcom
add
enter
and
fstp
cmps
and
cli
cmc
push
test
(bad)
sub
jle
push
xchg
push
aad
int3
outs
mov
xor
and
xor
aam
jbe
mov
mov
pop
jl
mov
imul
stos
cmp
push
lea
xchg
pop
mov
add
lds
dec
mov
sbb
fs
pop
mov
cmp
lock
loope
dec
pop
jle
or
push
into
inc
iret
cmp
sbb
jmp
xor
xor
cmp
lods
(bad)
outs
mov
repz
mov
xchg
push
mov
and
imul
adc
and
jecxz
push
mov
mov
in
out
int3
jb
cdq
jmp
sub
mov
in
mov
loop
xchg
and
icebp
cmp
sbb
pop
xchg
pop
or
jae
sbb
pop
push
inc
repz
adc
xchg
in
(bad)
test
pop
call
sar
push
stos
out
mov
pop
mov
push
mov
icebp
mov
jb
cmps
outs
ins
and
sbb
movs
stos
cmp
mov
dec
sub
adc
mov
std
sub
lods
xchg
ins
push
outs
out
pop
aam
jp
add
repz
cmp
cmc
xlat
(bad)
inc
push
jmp
ss
xor
xor
popa
aam
fist
or
repz
dec
sbb
jb
into
movs
mov
push
xchg
push
arpl
enter
fist
pop
mov
add
pop
cmps
daa
sub
scas
jmp
sbb
inc
add
inc
inc
or
cmp
mov
or
adc
cmp
ret
fs
jl
jecxz
psubsw
cmp
test
cld
lock
add
or
int3
fisub
jl
sbb
dec
mov
sbb
and
mov
jmp
pop
mov
cmp
cdq
test
aad
push
jl
call
jl
mov
jo
cmc
sti
sbb
in
mov
jmp
je
call
mov
adc
cmps
cmp
fistp
and
mov
and
lods
cmp
jp
mov
lock
lea
(bad)
ds
inc
mov
xchg
fist
cmp
pop
sub
lds
mov
push
push
inc
adc
das
lock
popa
pusha
mov
sbb
shr
xchg
call
or
sbb
jns
mov
adc
jne
jnp
sbb
ret
pop
inc
dec
cmp
test
dec
or
push
adc
pop
add
push
dec
dec
test
popa
dec
in
(bad)
scas
rcl
and
in
push
or
fdivr
or
stc
call
ficomp
les
sahf
aam
imul
and
sbb
jne
push
jbe
jecxz
(bad)
imul
sbb
add
mov
push
push
fcomp
mov
cmp
push
jae
cmp
pop
mov
xchg
inc
loopne
push
cli
aad
pop
ss
cli
scas
pop
mov
test
sbb
mov
movs
cwde
mov
mov
int
cmps
sbb
pop
sub
jl
and
add
xchg
std
sub
mov
mov
call
and
cmp
mov
je
dec
add
test
icebp
xchg
dec
jle
pop
cmp
ss
cld
adc
inc
mov
retf
jne
arpl
cdq
out
pop
and
int
mov
jmp
(bad)
push
(bad)
cmp
mov
jp
pop
xor
ja
int
jg
jp
mov
sub
cmovo
outs
popa
mov
adc
in
jmp
sub
and
sbb
sbb
pop
mov
jl
fs
adc
enter
pop
add
repz
imul
sbb
icebp
jae
adc
or
out
pop
movs
mov
rol
call
(bad)
retf
add
lahf
mov
sbb
pop
(bad)
fistp
cmp
push
add
sar
jecxz
and
mov
call
add
and
sub
popf
mov
mov
or
or
xchg
xor
push
loope
clc
rcr
pop
(bad)
outs
sub
jae
repz
lea
aaa
xchg
dec
loop
into
xchg
jmp
daa
cli
pop
jae
mov
ss
mov
fwait
sbb
cwde
sbb
mov
loope
mov
out
inc
mov
mov
jg
xor
pop
imul
fdiv
jae
xchg
add
sbb
push
popf
mov
icebp
bound
in
dec
neg
mov
das
(bad)
push
enter
inc
cwde
mov
add
dec
sbb
xchg
jne
in
mov
stos
adc
fwait
test
sbb
ret
mov
or
fiadd
xor
mov
and
jl
add
adc
repz
sbb
pop
nop
in
jns
push
cmp
mov
rcl
dec
adc
sti
dec
adc
(bad)
cmp
fst
inc
in
push
xor
push
jmp
xor
cmp
inc
lahf
sbb
mov
mov
pop
enter
data16
enter
leave
jbe
movs
lahf
in
out
jge
rcl
sbb
or
retf
and
jne
cld
rcr
lods
add
in
add
cmp
movs
adc
xor
shr
xchg
fmul
add
cmp
in
mov
dec
xchg
sbb
shl
or
ja
iret
push
mov
mov
mov
jecxz
mov
inc
add
fdiv
les
adc
mov
pop
xchg
daa
bswap
movs
xor
mov
rcl
inc
das
push
mov
aas
fsub
repnz
dec
xchg
xlat
xchg
loop
xchg
push
cmp
fistp
push
mov
leave
loop
cmp
mov
cdq
inc
or
sub
inc
mov
push
movs
sar
iret
inc
or
mov
ret
(bad)
ds
adc
popa
fmul
or
xchg
leave
mov
mov
mov
or
scas
mov
sysexit
fbld
xor
pop
test
sbb
loope
lock
adc
into
(bad)
and
ja
ficom
add
int3
clc
xor
inc
xchg
call
pop
dec
mov
or
popf
jb
nop
aas
ins
call
mov
jp
mov
and
icebp
pop
pop
js
movs
sub
lods
add
and
sahf
pop
es
xchg
jns
sar
popa
pop
fild
add
xor
mov
and
push
xlat
repnz
mov
ja
mov
lods
test
adc
loopne
push
rol
aad
mov
xchg
cmps
(bad)
or
repnz
dec
xor
xchg
inc
or
add
dec
push
xchg
out
push
cmp
stos
jno
or
out
add
imul
lds
cs
aaa
jnp
daa
xchg
mov
jp
stos
rol
cmp
or
cmp
mov
(bad)
xchg
rcl
js
jg
add
push
movs
xor
xor
push
mov
inc
or
sbb
or
sar
(bad)
repnz
movs
or
jg
xor
test
cmps
retf
adc
sbb
cmp
cld
cmp
es
jge
cmp
enter
cmp
imul
sub
enter
in
inc
inc
mov
fsubr
and
div
adc
jg
pop
jmp
imul
pop
aaa
ins
jecxz
pop
add
movs
sahf
fnstenv
pushf
mov
add
pop
pop
jnp
mov
stos
sbb
cmps
add
mov
repz
scas
inc
jp
fnstsw
jno
xchg
loopne
fld
in
test
es
jmp
mov
test
xchg
int
and
retf
mov
mov
ds
das
mov
ret
push
inc
test
xchg
sub
cli
mov
stc
jmp
fidiv
stos
rcl
faddp
iret
jg
lods
xchg
arpl
pop
cld
pop
and
stos
pop
jle
jnp
jmp
aaa
xor
push
shl
cmps
cwde
call
push
sbb
mov
mov
pusha
push
inc
pop
mov
ds
out
push
retf
nop
mov
shl
popa
call
jae
cs
sub
bound
xor
inc
cmps
push
in
out
popf
or
mov
fadd
out
pop
cs
in
cdq
pop
mov
scas
les
push
in
or
add
ss
ins
ror
mov
xchg
xor
jecxz
movs
(bad)
cld
cli
cld
test
in
stos
cli
adc
pusha
push
test
or
cmps
mov
push
retf
gs
pushf
nop
mov
push
mov
push
je
xor
inc
dec
jmp
das
cmp
push
outs
movs
jg
mov
(bad)
mov
clc
test
adc
nop
jbe
cli
dec
cld
push
cmp
stos
rol
cld
cmp
inc
xchg
out
cmp
push
push
mov
in
pop
jl
xor
cmp
fsub
adc
call
sbb
(bad)
imul
fiadd
jno
xor
out
cmp
sti
loope
js
inc
cmp
adc
pop
adc
lock
or
jbe
push
cli
stos
or
in
sub
xor
data16
jg
cmovs
out
(bad)
icebp
jecxz
push
jle
pop
xchg
out
leave
fwait
and
mov
shl
and
pusha
mov
movs
ret
mov
and
popf
enter
movs
(bad)
sbb
jbe
jle
stos
hlt
js
mov
idiv
cmp
xor
sub
mov
pusha
adc
xor
mov
push
mov
mov
or
psadbw
cmp
sbb
jo
fnstsw
dec
in
sub
clc
andnps
sub
(bad)
lock
sti
data16
mov
nop
mov
push
or
js
nop
cwde
mov
enter
dec
outs
mov
lea
scas
push
je
xchg
inc
jmp
xor
or
cwde
push
sub
retf
push
and
imul
ins
jnp
mov
sbb
xor
retf
add
adc
jne
sti
inc
inc
adc
adc
test
sbb
xchg
and
pop
mov
xchg
sbb
sbb
push
lods
mov
std
addr16
xlat
adc
push
test
sahf
sbb
leave
mov
adc
xchg
cmp
das
and
cld
push
bound
xchg
push
outs
xchg
adc
inc
xchg
lds
xor
movs
sbb
fucompp
push
(bad)
lahf
jl
inc
and
ret
and
pop
cmp
cmp
test
sub
test
xor
ins
mov
int3
lea
push
aaa
mov
and
mov
cmps
dec
(bad)
(bad)
dec
lds
mov
retf
mov
lods
sbb
fdivr
lods
cmp
jb
pop
jg
ins
jno
loope
lea
pop
sub
cli
imul
fwait
push
pop
inc
inc
and
and
stos
fisub
pop
adc
fbld
jecxz
fsub
mov
xor
cs
pop
daa
push
ror
cmp
add
lods
inc
pop
and
mov
dec
or
or
fcom
xchg
lea
jns
cmp
jne
add
lsl
cmp
and
mov
mov
mov
dec
adc
repnz
jmp
push
call
sub
test
and
iret
int
je
not
out
(bad)
das
test
xchg
mov
movs
ss
add
fisub
nop
xor
adc
lock
sub
add
fisttp
sbb
je
cmc
xor
addr16
pop
out
mov
mov
fist
ficom
inc
loopne
jns
and
jno
(bad)
imul
sbb
(bad)
push
mov
ins
jnp
stc
(bad)
aaa
out
scas
xor
repnz
jp
jo
cvttps2dq
push
pslld
inc
out
xchg
test
jmp
fiadd
mov
dec
mov
dec
adc
and
add
mov
push
stos
mov
push
loopne
sti
sahf
mov
retf
mov
push
and
sbb
dec
pop
sub
sahf
adc
jle
out
and
xchg
repnz
cdq
cmps
ret
pop
jo
imul
and
jl
es
jmp
pusha
cmp
enter
loop
pop
inc
and
in
jge
ror
ja
jae
cmp
fdivr
rol
arpl
dec
loopne
fs
js
xchg
popa
and
adc
lock
dec
daa
nop
jmp
popf
idiv
je
jge
pop
movs
leave
lahf
out
add
mov
and
push
out
pop
mov
pop
lds
mov
sub
jne
addr16
jg
inc
pushf
jbe
xchg
(bad)
cmp
cli
fimul
aam
in
pop
mov
lahf
xchg
push
shl
push
aas
and
jns
(bad)
mov
lea
mov
(bad)
jns
push
push
pop
mov
lea
sub
push
into
dec
inc
jecxz
xlat
mov
or
xor
dec
dec
add
lods
mov
movs
ret
dec
icebp
add
cwde
scas
mov
cmp
out
mov
lahf
into
loop
xchg
inc
and
sbb
jp
mov
mov
mov
mov
daa
mov
in
aaa
int
and
adc
xor
shl
mov
dec
cmp
add
call
sar
jae
lods
outs
loop
js
movs
jl
xchg
cmc
push
loope
push
ss
push
cli
repnz
push
dec
cmp
movs
push
mov
dec
lea
out
fldenv
fild
mov
mov
aaa
and
cmp
sahf
xor
cmc
add
arpl
stos
dec
or
xor
cwde
jmp
or
jp
dec
sub
or
fidiv
inc
shl
repnz
jecxz
daa
clc
lods
mov
pop
lods
push
stc
lds
mov
dec
bnd
push
dec
xor
pop
pop
mov
inc
pop
xchg
cli
jo
lea
idiv
push
pop
cmps
leave
add
inc
adc
shr
and
cmp
jno
mov
xchg
shl
iret
rol
xchg
sub
sub
in
scas
xor
mov
push
xchg
and
add
push
xchg
sbb
fisub
and
int
and
pmaddwd
(bad)
sbb
sbb
push
push
xchg
dec
imul
into
xchg
or
cmps
call
jmp
mov
imul
pop
sub
pop
push
imul
pop
sub
movs
mov
pop
jb
push
(bad)
loopne
mov
mov
(bad)
call
dec
jnp
xchg
fisub
cmp
dec
xor
(bad)
jbe
nop
lods
xchg
arpl
sqrtps
sub
bound
out
xor
das
pop
cwde
mov
push
jo
js
push
add
or
jg
mov
(bad)
pop
aam
or
dec
mov
mov
xchg
loop
mov
sbb
sub
pop
(bad)
(bad)
adc
xchg
lahf
cs
ins
ss
mov
ds
into
mov
popa
inc
enter
imul
(bad)
shl
mov
push
out
imul
cmps
add
iret
or
cdq
shr
mov
js
pusha
or
loop
jmp
adc
jbe
or
cmps
xor
(bad)
test
out
pusha
repnz
pop
(bad)
fs
popf
stos
push
mov
mov
pop
sbb
in
shl
pusha
or
ret
sbb
sub
call
xor
push
push
shl
xchg
std
call
push
call
inc
xchg
ffreep
sbb
daa
jl
jmp
fld1
jb
push
sahf
and
jmp
cli
cmps
push
out
pop
mov
clc
fiadd
loopne
inc
sbb
pop
adc
mov
jle
inc
in
xchg
mov
jecxz
fwait
je
sbb
adc
aas
loope
cmp
test
cmc
mov
cmp
mov
jg
les
stc
repnz
jg
ficom
clc
pop
outs
dec
mov
sbb
cli
fisubr
pop
cmp
call
mov
mov
repz
scas
cmp
daa
pop
adc
(bad)
adc
dec
push
cli
sub
pusha
xor
and
imul
push
sbb
inc
push
sub
dec
xchg
(bad)
sub
sub
outs
push
mov
add
arpl
enter
lods
push
inc
sbb
push
xor
cwde
je
int3
lock
inc
xor
in
out
adc
or
rcl
or
ja
mov
pop
inc
cmp
ins
dec
inc
enter
add
xchg
test
push
pop
or
out
push
mov
dec
lahf
dec
cld
dec
lods
dec
imul
cs
out
adc
or
dec
push
icebp
aam
lods
cdq
jne
fs
xchg
movs
inc
pop
icebp
cmp
addr16
mov
or
jmp
sti
stos
scas
cmps
test
stc
out
sub
scas
shl
adc
shl
daa
mov
mov
icebp
and
jle
and
cmp
mov
outs
cwde
jae
xor
repnz
lea
repnz
dec
xor
sahf
sbb
ja
daa
sbb
jnp
mov
call
mov
add
dec
push
dec
pusha
sbb
adc
inc
push
hlt
push
lods
shl
(bad)
pusha
jno
pop
cdq
(bad)
fadd
xchg
idiv
dec
push
xor
(bad)
pop
sbb
repz
cmps
pusha
loope
mov
mov
jp
or
enter
sub
ror
mov
push
scas
jmp
stos
retf
jecxz
mov
jge
add
loopne
dec
jle
imul
or
les
or
mov
sbb
(bad)
movs
mov
fs
cld
(bad)
fcos
jge
lods
call
cmp
enter
fisttp
enter
xchg
push
and
lahf
dec
fsub
xor
call
mov
add
or
out
ja
movs
inc
int
lea
movs
or
push
jl
in
pusha
sbb
sub
(bad)
sahf
dec
jl
push
jo
test
sub
les
les
call
xor
(bad)
mov
and
std
cwde
out
add
xchg
push
jno
int
dec
sar
push
inc
push
pop
and
xor
fcmovnu
xor
stos
inc
scas
dec
int
ficom
inc
leave
mov
mov
pop
lds
icebp
cdq
rcr
fnsave
inc
cmp
daa
stos
inc
enter
movs
jno
xor
inc
rcr
jae
dec
dec
mov
jp
stc
xchg
mov
test
retf
arpl
(bad)
sbb
mov
xor
or
fsub
jecxz
inc
fidiv
movs
xchg
cdq
std
and
push
es
mov
hlt
cmps
adc
cs
icebp
(bad)
mov
xchg
(bad)
sub
dec
repnz
rcr
cld
mov
test
loop
loop
fsub
int
sub
aaa
sub
or
cmp
sahf
dec
xlat
mov
mov
mov
sbb
(bad)
pop
rcr
mov
mov
sub
call
dec
mov
adc
inc
pop
pop
ret
jecxz
stos
jmp
mov
ins
shr
sub
pop
bound
nop
jl
cmps
ror
jbe
sar
adc
imul
inc
pop
mov
xchg
cs
call
ins
push
fcom
inc
out
mov
sub
mov
mov
mov
mov
jmp
push
mov
popf
xchg
pop
xchg
imul
lahf
int
imul
add
push
cmps
adc
push
pop
xchg
sbb
mov
push
ror
sbb
xchg
push
sub
aad
cmp
out
addr16
push
(bad)
repnz
sbb
pop
inc
adc
push
sub
jns
push
xchg
dec
push
jno
imul
or
sbb
fldenv
jmp
shl
shr
cli
mov
aam
jmp
adc
mov
add
dec
ret
and
mov
cmp
std
sub
lods
out
jae
pop
loopne
jle
xchg
cmp
imul
test
pop
pop
push
inc
hlt
mov
jo
mov
mov
mov
mov
in
pop
arpl
pop
or
pop
fild
arpl
adc
in
sbb
push
mov
lods
fcom
adc
dec
xchg
ret
xor
xor
xchg
xor
adc
inc
mov
push
call
pop
jge
or
ins
fidiv
js
push
xchg
fs
loop
jno
ins
sbb
xchg
jns
ins
aad
mov
push
out
fs
(bad)
dec
mov
cmp
loop
ret
jp
out
iret
push
outs
cmp
rcr
fsubr
lahf
aas
cmp
test
fidiv
sub
xchg
and
pop
adc
ficomp
jns
mov
add
popa
xor
adc
inc
fbstp
test
pop
nop
cmp
repnz
retf
dec
cmp
sbb
stos
sar
icebp
xchg
in
pop
iret
cmp
xor
or
pop
fwait
sbb
fnsave
fs
arpl
pop
retf
inc
int
push
pusha
and
adc
adc
and
mov
dec
add
jecxz
mov
sub
mov
in
jmp
icebp
ja
jae
(bad)
jl
sub
fsubr
call
cmps
in
adc
fsub
push
mov
shr
push
mov
xchg
les
(bad)
mov
mov
push
dec
ror
jge
mov
int3
add
test
int
repnz
cld
xchg
mov
adc
in
pop
pop
imul
pop
sub
mov
add
outs
jne
in
in
push
and
or
fdiv
sbb
dec
out
mov
test
adc
test
inc
shl
add
inc
xchg
mov
iret
clc
dec
pusha
and
adc
int3
addr16
(bad)
inc
adc
fndisi(8087
dec
out
fwait
xor
or
push
xchg
dec
mov
loop
pop
add
mov
and
fmul
stos
ja
outs
adc
push
sub
retf
and
mov
xchg
push
push
cmc
sub
push
repnz
adc
cmc
sub
mov
fst
mov
(bad)
jl
push
sbb
lahf
es
mov
cmps
loopne
dec
and
aam
dec
push
fiadd
ins
sub
cmc
fimul
fadd
push
pop
loope
lea
xlat
mov
xchg
inc
sub
ss
ins
aad
jno
inc
retf
fcomp
popf
stos
sub
mov
xchg
repz
in
xchg
fsin
xchg
jb
js
lods
lea
push
loope
es
adc
adc
xor
mov
sub
frstor
dec
fnclex
and
scas
setae
dec
inc
and
(bad)
enter
fistp
push
push
sti
popf
mov
cmp
retf
pushf
sbb
xchg
shr
cmp
ins
xchg
in
xor
faddp
xor
dec
push
out
(bad)
dec
cwde
ja
iret
rcl
xchg
and
clc
add
cmp
aaa
xchg
push
pop
ds
test
(bad)
mov
ja
cmps
cmp
lock
xor
pop
mov
push
cwde
das
mov
ss
pusha
push
mov
xor
rcr
mov
mov
mov
into
add
out
xchg
call
xchg
jo
js
xor
mov
jecxz
pop
addr16
daa
xchg
or
pop
pop
xor
lahf
inc
sub
add
mov
retf
lahf
retf
sbb
dec
scas
xor
cld
fbld
cmp
leave
sub
ds
lea
push
gs
clc
sbb
stc
fidivr
inc
cmps
lods
dec
imul
xor
loop
enter
jae
(bad)
jg
pop
ja
cs
push
mov
pop
cmp
rcl
add
or
dec
jmp
call
sqrtps
xor
retf
xchg
ret
int
out
add
sbb
mov
retf
pusha
into
loope
lea
(bad)
push
js
shl
dec
fwait
jp
out
cmp
push
adc
mov
or
pop
sbb
pop
fild
leave
pop
lahf
jae
popa
loope
push
fistp
jns
into
mov
inc
sub
fidivr
jno
js
and
rol
bound
and
lahf
push
ror
into
lds
add
movs
stos
pop
test
add
xor
leave
shl
test
stos
fwait
into
push
inc
push
in
xchg
ds
xchg
cmps
jg
rol
push
pop
je
push
call
sbb
xchg
push
repz
cdq
leave
cmps
mov
lods
pop
lea
mov
je
mov
adc
neg
ins
xchg
mov
loopne
popa
aas
daa
inc
and
pop
jge
mov
push
cmp
push
push
inc
fbld
jns
arpl
cmps
cmp
popa
(bad)
loopne
lahf
mov
enter
ss
xor
fnstsw
bound
adc
inc
mov
lahf
mov
shl
aam
mov
int
aaa
push
lea
loope
fmul
pop
test
xchg
sbb
adc
into
aaa
mov
retf
cmps
popf
jno
sbb
add
(bad)
fs
rcl
das
mov
xchg
pusha
loop
dec
or
pop
add
mov
leave
dec
loop
sub
popa
mov
cdq
jne
lods
inc
data16
mov
test
dec
fnstsw
xchg
sbb
cmp
mov
movs
push
xchg
cmp
fmul
les
fild
imul
(bad)
mov
mov
(bad)
pop
sbb
aam
cli
dec
pop
das
mov
je
add
add
inc
or
cmp
retf
pop
sahf
pusha
or
add
fistp
sub
movs
mov
fild
pop
inc
lahf
test
aas
sub
mov
adc
pushf
push
sbb
pop
int3
je
push
mov
dec
pop
cmp
mov
loope
lds
push
pushf
push
mov
mov
jne
outs
mov
push
add
lds
nop
cwde
xor
sti
bound
push
icebp
lock
mov
addr16
pop
and
pop
mov
adc
add
or
ja
(bad)
jae
jp
push
test
clc
test
jmp
adc
mov
repz
cmp
shl
cmp
push
data16
in
shl
fild
add
(bad)
retf
fwait
dec
mov
inc
sbb
jge
aas
rol
adc
jp
nop
frstor
xor
popa
add
and
xor
push
inc
dec
pop
ret
cdq
xor
outs
jmp
jne
outs
dec
sbb
cmp
xchg
cli
inc
mov
repnz
call
sbb
push
and
or
(bad)
mov
xlat
cwde
cmps
xor
cmps
gs
cmp
arpl
int3
call
scas
xchg
pop
cdq
sahf
xchg
inc
jb
cmp
(bad)
(bad)
rcl
loopne
and
rcl
and
out
push
cdq
mov
shl
arpl
push
(bad)
xor
dec
movs
mul
sub
jecxz
push
push
cmps
aad
mov
mov
(bad)
add
inc
ins
lods
fidivr
fdiv
js
out
xor
sub
into
adc
icebp
call
xlat
test
lock
sub
push
mov
out
inc
pusha
icebp
call
inc
push
and
xchg
loopne
xor
xchg
inc
add
mov
(bad)
or
adc
mov
mov
mov
sub
dec
fidiv
jbe
mov
sub
mov
jb
sub
(bad)
shl
mov
shl
mov
into
test
jecxz
aas
lods
outs
dec
les
mov
adc
dec
sbb
and
adc
out
test
aas
mov
push
fcmovbe
adc
(bad)
shl
pop
mov
rcr
hlt
mov
xor
xor
pop
aam
adc
or
jl
fcomp
inc
adc
xor
imul
ret
je
pop
mov
ds
mov
stc
sub
in
pop
mov
shl
cmp
pop
pop
lds
enter
sbb
fcmovnb
push
push
aad
hlt
nop
pop
push
push
or
sbb
push
test
push
es
int3
cld
dec
daa
pop
inc
sub
push
push
mov
jg
mov
fistp
inc
xchg
pop
sbb
cs
(bad)
in
dec
adc
pop
pop
jb
not
ins
call
jmp
aam
shl
pusha
dec
jg
imul
test
dec
cmp
sbb
rcl
sub
movs
lahf
icebp
sub
aaa
sub
outs
aas
shl
and
mov
add
fdiv
jmp
cmp
mov
outs
dec
xor
sub
imul
call
xor
pop
xchg
hlt
or
push
push
adc
cmps
mov
repnz
aad
jmp
outs
js
cmp
and
inc
sub
das
ins
in
fcom
jg
imul
adc
aas
cld
mov
adc
dec
retf
sbb
sahf
xchg
adc
jl
test
or
in
cs
and
and
cdq
pop
clc
leave
dec
sbb
mov
inc
(bad)
(bad)
in
retf
ins
leave
push
loopne
mov
cli
adc
pushf
stos
dec
retf
in
inc
retf
fnstsw
and
and
mov
movs
lahf
and
lea
int
dec
je
mov
or
lods
out
push
xchg
repnz
(bad)
fcmovu
pop
fld1
push
imul
sub
mov
mov
xchg
inc
adc
(bad)
das
and
inc
xor
es
push
cmps
dec
sbb
aaa
lds
mov
push
cmpxchg
aas
jb
sub
sbb
hlt
lock
adc
inc
xchg
dec
jo
pop
cmc
pop
jmp
dec
add
push
dec
(bad)
rcl
push
aam
cmp
in
inc
and
jae
fmul
loope
fs
xlat
jg
fbld
push
mov
je
pop
sub
xor
mov
xchg
lods
ret
arpl
call
ss
cli
ss
dec
add
cmp
mov
ins
loop
pop
pop
(bad)
xor
cwde
fyl2xp1
hlt
gs
mov
sub
test
jmp
jp
ds
pop
xchg
inc
add
xchg
dec
mov
out
xchg
test
mov
test
pop
push
mov
inc
and
add
outs
or
test
sar
fmul
adc
loop
leave
pop
sub
jo
mov
(bad)
out
not
outs
jno
icebp
not
sbb
cmp
fidiv
mov
and
sbb
cld
leave
aaa
jne
out
out
xchg
fdiv
je
dec
jle
mov
mov
xchg
sbb
jp
loopne
sti
cmp
jl
add
cdq
int
dec
imul
and
rol
sti
or
pop
iret
das
and
js
dec
jp
xor
push
pusha
xor
or
sbb
cmps
dec
adc
pop
and
call
idiv
imul
push
je
add
mov
sub
lea
daa
inc
rcl
sub
nop
icebp
xchg
jne
lods
xor
pop
es
(bad)
out
mov
cdq
mov
mov
mov
scas
test
adc
ret
mov
cdq
aam
or
out
adc
movs
inc
stos
mov
jmp
dec
pushf
into
mov
mov
mov
add
pop
xchg
mov
sar
pushf
cmp
ss
les
movs
push
inc
imul
jmp
(bad)
out
mov
ficom
inc
add
add
and
or
pop
or
xor
in
popa
cs
push
sub
or
call
in
sub
fwait
(bad)
stos
loop
loop
leave
jae
and
inc
or
ds
xchg
(bad)
jo
je
add
(bad)
aas
scas
bound
push
leave
inc
pusha
stos
scas
or
jge
xchg
jmp
push
xor
pushf
mov
cdq
icebp
cmp
xor
push
jmp
scas
cmps
cld
data16
sbb
fxch
outs
adc
jle
loop
inc
pop
loope
je
add
test
fstp
fist
push
call
xlat
in
rol
dec
out
test
enter
inc
fldenv
aas
and
jo
mov
fld
sbb
cmps
lea
cmps
out
call
stos
movs
test
mov
xor
(bad)
push
push
mov
cmp
cmps
out
and
test
cmp
sub
xor
int3
mov
mov
popf
xchg
test
js
xor
hlt
rcr
pop
xor
pop
cs
inc
lods
into
lods
arpl
mov
jmp
mov
loope
movs
add
cmps
in
inc
cmps
push
add
adc
repnz
aas
in
in
lock
or
lods
dec
inc
push
or
add
out
loopne
add
jg
sbb
inc
xchg
pusha
push
mov
push
push
xchg
outs
loop
ja
pop
push
or
dec
and
and
pop
xchg
jmp
daa
add
pmullw
(bad)
lea
sbb
aad
jmp
dec
jl
data16
aas
or
js
fnsave
push
jae
and
iret
ret
clc
add
bound
sbb
dec
gs
js
push
cmp
dec
push
sbb
shr
xor
xlat
(bad)
fmul
pop
addr16
das
sar
dec
xchg
lods
idiv
dec
xacquire
and
je
ds
push
inc
cmc
out
(bad)
mov
adc
pop
mov
(bad)
cli
inc
out
pop
aad
outs
xlat
mov
add
sti
dec
mov
or
mov
cdq
jo
imul
jle
inc
cmp
cmp
sub
lahf
mov
xor
mov
and
movs
inc
dec
(bad)
mov
and
mov
cs
outs
enter
mul
movs
aaa
push
mov
add
movs
pop
jo
sub
sbb
adc
xchg
sahf
sar
add
arpl
xchg
pushf
in
xchg
xchg
mov
push
cmp
cli
mov
xor
adc
retf
and
pop
pop
mov
dec
icebp
mov
pop
popa
dec
push
mov
lods
jmp
pop
(bad)
div
ret
push
(bad)
clc
in
ins
xor
xchg
je
sbb
push
cmp
fxch
mov
push
or
jecxz
popf
adc
(bad)
cmp
enter
sbb
jnp
and
mov
pop
iret
add
xchg
pop
cmp
aam
call
rol
cs
inc
mov
and
sub
movs
out
cld
mov
lahf
fucomip
scas
add
mov
aaa
xor
push
add
aad
or
retf
(bad)
xor
in
cmp
push
push
jo
ret
xchg
lock
test
imul
sub
cmps
(bad)
in
pop
ss
lahf
mov
sti
movs
cmps
pop
add
ja
or
movs
lea
movs
out
jns
fisub
arpl
into
out
xchg
mov
in
sbb
and
mov
iret
push
cmp
lea
sub
xor
aas
xor
jle
(bad)
add
mov
sbb
cs
mov
ret
rol
inc
pusha
shl
ficom
shl
mov
mov
lahf
adc
cs
dec
sub
or
xor
sub
rcl
(bad)
jno
and
adc
mov
dec
out
xor
pop
mov
mov
fsub
xchg
js
fistp
(bad)
and
xlat
icebp
popa
lea
add
dec
popf
ficomp
leave
and
dec
std
movs
cwde
mov
adc
cs
cmp
mov
and
pop
clc
retf
cmp
push
fisub
popf
mov
outs
sub
xlat
pop
mov
pop
jbe
imul
mov
and
xor
pop
call
dec
and
aas
xchg
inc
out
mov
cwde
test
shl
or
sbb
inc
adc
jns
mov
in
enter
jmp
rcl
jae
call
sub
adc
jo
inc
imul
repnz
test
xchg
xor
pop
jno
xor
sub
cmp
or
aam
or
loopne
push
mulps
frstor
je
add
dec
clc
test
mov
cmp
mov
dec
xchg
pop
add
jnp
dec
mov
sub
pushf
mov
jge
mov
jmp
cmp
and
jno
fcmovnb
pop
xchg
add
bound
cmp
and
adc
pop
stos
fsubr
hlt
(bad)
dec
inc
stos
outs
jecxz
lea
lods
stos
int3
xchg
xor
add
adc
gs
adc
aas
pop
cmp
ficom
(bad)
stos
cmps
dec
pop
scas
xchg
and
inc
repnz
sbb
pop
loopne
(bad)
fs
fucomi
out
mov
in
push
lods
fst
in
leave
add
xchg
stos
in
(bad)
lds
rcr
fs
mov
mov
dec
and
out
jae
call
sub
pop
pop
or
push
clc
jno
pop
xchg
mov
jg
out
scas
stos
imul
mov
cs
sub
shr
sub
arpl
adc
xlat
xlat
test
stos
lock
dec
adc
repz
fdiv
cmp
xchg
jb
movs
test
fadd
int
inc
add
or
add
leave
aam
sbb
push
out
pop
xchg
dec
not
adc
mov
fnstsw
pop
ja
mov
(bad)
out
sub
mov
adc
idiv
cmp
jle
jnp
repz
data16
push
jae
cmp
push
ret
dec
dec
scas
or
cdq
xchg
xchg
neg
pusha
mov
call
fistp
lds
std
mov
mov
das
xor
mov
push
add
ss
in
scas
cmp
mov
pop
pop
(bad)
inc
ins
mov
(bad)
mov
sbb
sahf
inc
sub
(bad)
cli
fldln2
arpl
cmp
inc
dec
inc
pop
in
dec
hlt
jbe
sbb
adc
jnp
xchg
imul
mov
push
sbb
fdivp
sahf
add
dec
test
mov
mov
imul
retf
jle
repz
or
test
ja
add
cmp
adc
aad
fcom
inc
mov
adc
or
cmps
imul
daa
fcom
push
push
cmp
movs
aaa
pop
inc
mov
imul
xor
dec
mov
retf
rol
push
mov
dec
xchg
aas
das
clc
mov
fdiv
into
push
and
sbb
rcl
jno
scas
or
clc
inc
push
sub
das
push
mov
and
ret
jmp
add
or
(bad)
mov
mov
push
xchg
push
fiadd
mov
lods
xor
sbb
mov
(bad)
cdq
pushf
push
ret
mov
mov
cmp
ror
mov
test
mov
inc
add
(bad)
add
neg
pop
mov
mov
in
cmp
outs
cdq
fistp
jmp
test
ins
lahf
cmp
xlat
(bad)
adc
(bad)
aam
outs
je
outs
xchg
ds
sub
cmp
std
add
psubusw
sar
mov
hlt
xor
sbb
jmp
add
mov
bound
push
push
loope
push
aaa
stc
dec
dec
imul
mov
cmps
cmp
jns
pusha
shl
cmps
sbb
outs
popf
push
addr16
push
je
mov
icebp
ins
clc
test
inc
cli
push
cld
dec
push
push
dec
rcr
cld
xchg
adc
dec
dec
or
push
push
xor
adc
xor
xchg
push
push
add
mov
and
jb
xor
sbb
in
in
jo
cmp
lods
cmps
retf
(bad)
mov
shr
(bad)
pop
cwde
retf
pop
out
fist
mov
(bad)
aam
and
imul
sbb
out
fcom
jmp
adc
xor
shl
shl
ds
push
jecxz
movs
jge
pop
cmp
sbb
pop
and
imul
imul
rep
pop
push
fnsave
inc
pop
jmp
push
add
or
addr16
cld
call
aad
xlat
xor
dec
rcr
mov
and
sbb
xchg
jns
repnz
pop
(bad)
and
loop
jmp
cmp
fs
cli
sbb
fisttp
ds
mov
fs
hlt
movs
dec
cld
pushf
(bad)
bound
adc
sbb
rol
ins
dec
mov
or
push
sbb
dec
outs
fidiv
adc
loop
cld
adc
sub
fs
or
into
push
adc
dec
sbb
xchg
mov
pop
push
imul
xor
cmp
and
pop
xor
sbb
pop
aaa
add
sbb
popf
std
je
xor
cmc
pop
push
add
inc
add
mov
or
push
cmp
pop
mul
mov
jp
mov
xlat
outs
inc
push
mov
outs
add
pop
add
test
scas
mov
sub
xchg
xchg
les
mov
std
test
sbb
inc
inc
loopne
mov
scas
adc
cdq
std
lock
int3
aaa
rdpmc
push
leave
int3
push
hlt
loopne
imul
mov
add
pushf
fcmovbe
fistp
sbb
cmp
mov
ins
sub
mov
test
aam
jecxz
mov
push
xor
cmp
ds
in
mov
stos
in
mov
jo
test
and
shl
cmp
and
out
adc
dec
push
lock
arpl
cmp
mov
stos
add
mov
jae
adc
cld
jp
cmc
call
jbe
inc
lods
test
push
jmp
in
in
or
push
fnstenv
adc
mov
pop
xchg
loop
inc
fnsave
add
cmps
(bad)
enter
ficom
out
xchg
pop
sbb
int3
dec
jg
dec
mov
loope
retf
fisubr
scas
mov
mov
hlt
mov
inc
pop
sbb
xor
xor
inc
add
or
iret
or
mov
das
sahf
fdiv
sub
fmul
std
(bad)
in
les
js
push
mov
cmp
sub
mov
fwait
in
mov
shl
fbld
add
movs
ins
rol
jb
sbb
sar
sbb
xor
sub
or
into
jl
test
mov
and
xchg
sbb
test
in
push
dec
ret
dec
lock
jb
sub
rol
dec
fwait
cli
lahf
fadd
in
clc
lds
inc
sahf
add
popf
fidivr
sar
xchg
add
mov
mov
repnz
add
xor
cmp
cld
and
imul
pop
cld
inc
fsubr
and
and
test
je
mov
pop
sub
inc
(bad)
fmul
int
cmp
out
jl
mov
sub
sbb
add
jnp
in
mov
hlt
ret
jb
or
pushf
mov
jecxz
pop
mov
movs
xchg
ficom
adc
or
ror
push
or
lods
movs
jp
adc
push
pop
sbb
retf
aas
xchg
(bad)
ret
cmc
retf
add
xor
retf
xlat
sbb
sbb
mov
sbb
add
add
leave
out
cmp
retf
mov
pop
pusha
mov
or
in
cwde
std
cmp
or
xor
push
add
inc
inc
cld
sub
(bad)
push
nop
mov
jmp
mov
push
mov
stos
push
stos
jbe
mov
(bad)
scas
jmp
or
sub
xor
push
cwde
or
je
push
pop
xchg
push
adc
dec
neg
xor
(bad)
repz
and
cmps
sbb
cwde
sub
push
or
out
out
inc
jl
int
fwait
lea
xor
xor
(bad)
int3
xor
xchg
sub
(bad)
and
sub
pusha
dec
int3
xchg
test
pusha
aam
in
fisubr
push
sub
xchg
out
hlt
leave
inc
lods
int3
call
ss
(bad)
mov
mov
cmp
imul
pop
popf
xchg
xor
pop
jae
xor
pop
iret
pushf
call
loope
outs
sbb
jle
es
lock
test
mov
mov
fwait
add
iret
jns
xor
rcl
or
cmp
clc
in
mov
gs
icebp
fwait
in
fimul
sbb
add
dec
pop
jecxz
rol
dec
xchg
sub
jnp
in
dec
push
lods
aam
ret
add
sbb
call
and
cld
dec
fs
fistp
test
fsub
xchg
mov
pop
test
jmp
sub
movs
pop
stos
and
aas
inc
mov
or
add
mov
pusha
repnz
xchg
rol
in
enter
icebp
out
xchg
sub
jae
push
daa
cwde
cmps
mov
mov
xor
test
fcom
jmp
add
cmp
fsubr
mov
inc
sahf
and
or
cmp
scas
fisub
lea
das
in
mov
cmp
mov
dec
push
and
xor
cmp
outs
dec
xchg
mov
aam
into
ds
mov
sahf
xchg
rol
call
popa
pusha
aaa
(bad)
stc
outs
ss
fst
cli
add
inc
jle
scas
pop
pop
jp
xchg
mov
xchg
cmp
ret
xchg
mul
mov
sub
and
(bad)
push
cwde
es
xchg
sub
mov
add
bound
jns
fiadd
adc
imul
jbe
mov
pop
rol
cmc
pop
clc
lds
retf
sub
lods
aad
dec
stc
ret
push
mov
cs
pop
daa
imul
mov
add
pusha
push
or
pushf
test
in
mov
mov
push
loop
inc
ret
ja
pop
sub
mov
aaa
shl
fsubr
jbe
cmp
or
pop
and
fnstcw
pop
popa
outs
popf
push
popa
sub
rcl
in
push
xchg
sbb
sbb
jb
shl
ja
xor
adc
lock
xchg
clc
xchg
inc
sub
mov
jmp
stos
cmp
inc
sbb
test
sub
xchg
sub
inc
sub
xor
dec
fild
lods
arpl
inc
lock
movs
or
(bad)
jns
or
ret
mov
iret
xor
cmp
push
mov
or
call
data16
out
push
loope
adc
cmp
movs
dec
nop
in
inc
sub
mov
(bad)
push
iret
int
retf
imul
mov
xor
or
fs
cmp
add
pop
ins
(bad)
sub
loopne
retf
xor
hlt
cmp
mov
xlat
sbb
outs
rol
xor
mov
add
cmps
(bad)
out
loope
nop
loop
sbb
sbb
sub
mov
sbb
xchg
pop
aas
into
je
and
mov
push
loope
mov
cmp
ins
inc
movs
or
inc
lock
inc
(bad)
cmp
loope
call
push
sti
mov
mov
mov
not
dec
rol
adc
inc
frstor
stos
or
imul
or
push
and
lods
inc
mov
call
out
mov
push
ja
movs
loope
int
std
stos
add
rcr
xor
add
fidiv
popa
xchg
or
xchg
popa
loopne
inc
mov
push
jo
int3
jb
dec
fbstp
xlat
not
outs
ret
inc
int
fbld
xchg
mov
(bad)
mov
add
add
mov
mov
mov
or
mov
(bad)
push
call
dec
push
and
fcmovnb
pop
mov
aad
jge
stos
pop
pop
aam
sbb
push
xor
pop
pop
ja
stos
pop
pusha
fcomp
cwde
dec
push
ret
sub
ins
mov
enter
imul
arpl
cld
sub
stos
fwait
repz
mov
bound
icebp
mov
mov
inc
cs
dec
sub
call
xchg
cs
in
dec
push
dec
pusha
les
daa
mov
shl
ret
int3
stos
adc
xchg
dec
pop
dec
cmps
mov
jns
sbb
mov
xchg
pop
enter
popa
fdiv
imul
scas
mov
lods
cmp
xchg
and
leave
std
pusha
ficomp
jg
dec
dec
in
push
and
enter
fist
adc
cdq
in
adc
sub
or
cs
fbstp
add
xor
cli
je
mov
push
xchg
mov
push
fdiv
xor
(bad)
(bad)
and
xor
mov
push
or
xchg
cmps
fcom
jl
jns
scas
push
pop
and
jmp
mov
pop
mov
in
jmp
push
popa
idiv
add
xchg
mov
push
out
mov
cs
ja
adc
cmp
ret
mov
out
mov
mov
push
xchg
jmp
dec
xor
test
stos
fwait
mov
jns
(bad)
add
xor
sub
cmc
mov
or
movs
pop
test
in
or
sub
xor
and
jno
(bad)
movs
or
push
inc
test
pop
push
call
dec
push
ret
mov
sbb
inc
mov
cwde
cmps
scas
sbb
loope
xor
cwde
jmp
scas
mov
add
(bad)
push
push
adc
hlt
pop
sti
mov
fsub
test
inc
pop
mov
or
jmp
sahf
mov
mov
sbb
out
loope
xor
or
and
test
mov
pop
imul
iret
dec
add
and
sbb
jno
sub
imul
sbb
loope
aad
sub
cld
dec
ffreep
std
sub
aad
gs
xlat
mov
push
les
sbb
(bad)
push
aam
lea
pop
aas
add
xchg
in
push
inc
mov
cdq
out
pop
dec
pop
pusha
hlt
aam
imul
(bad)
cmp
addr16
pop
(bad)
sbb
push
xor
cmps
rcl
sbb
ins
jno
xor
cmp
repz
pop
imul
pop
pshufw
and
fbld
push
gs
xchg
xor
out
test
iret
rcr
pop
fs
es
adc
lock
xor
jnp
mov
inc
sbb
jle
das
sbb
ins
push
mov
xchg
xchg
inc
inc
rsm
data16
popf
dec
cmp
jb
in
cmp
mov
scas
imul
ins
sbb
dec
js
icebp
inc
test
das
fdivr
jge
mov
pop
sub
ret
mov
xchg
xchg
ss
mov
(bad)
adc
test
sti
dec
rcl
stos
adc
icebp
mov
retf
(bad)
mov
jo
push
loope
xlat
mov
sub
or
push
mov
bound
jmp
rcl
(bad)
mov
add
loopne
sub
icebp
cmp
or
jmp
xchg
jne
cmc
arpl
adc
sbb
mov
in
ret
xor
out
ins
(bad)
iret
and
repnz
(bad)
std
cmp
jp
push
inc
dec
dec
pop
fcom
cmp
pusha
sbb
test
stc
cmp
(bad)
xor
mov
icebp
pop
fwait
das
push
push
add
out
nop
mov
movs
jmp
fmul
mov
pop
push
mov
push
sub
xor
lods
test
popa
nop
addr16
pushf
or
in
iret
push
or
arpl
vunpcklps
mov
fimul
inc
push
adc
jne
les
ins
(bad)
jbe
loope
call
adc
out
aam
sahf
sahf
sti
pop
mov
adc
inc
dec
mov
ins
and
(bad)
jae
xor
ss
sti
or
aas
add
jge
daa
push
loope
out
fwait
dec
and
pop
cmp
pop
fcmovnb
cmp
jmp
xchg
arpl
clc
mov
idiv
cwde
aas
pop
jge
or
inc
cmp
add
dec
fwait
pop
jb
shl
dec
icebp
xchg
dec
mov
rcl
aam
ret
adc
fcmovne
xchg
adc
lock
xor
cmp
adc
loopne
not
mov
jecxz
retf
xchg
or
adc
xlat
bnd
push
rcr
shr
sub
hlt
push
mov
pop
pop
xchg
sbb
jbe
mov
(bad)
out
ret
ror
jo
stc
mov
or
fisubr
leave
push
mov
iret
call
inc
stc
ja
(bad)
jp
scas
shl
(bad)
adc
sub
adc
es
sub
sub
adc
outs
sub
lea
int3
out
leave
mov
and
daa
inc
mov
add
repz
and
xlat
in
push
pop
enter
push
push
sub
inc
push
sbb
xor
es
mov
sbb
ins
in
mov
popa
jo
into
and
ss
test
inc
sbb
mov
dec
jb
add
xchg
imul
xchg
in
mov
push
xchg
movs
(bad)
xchg
retf
mov
and
pop
or
sbb
cmc
inc
add
ja
call
sar
imul
inc
call
mov
sbb
adc
push
stos
jecxz
dec
jne
and
sub
jl
sbb
les
getsec
lea
pop
in
mov
icebp
mov
xor
das
in
sahf
mov
jmp
lods
and
ret
jp
pop
cs
pop
pop
jl
mov
retf
arpl
add
ins
mov
out
(bad)
and
sub
push
pop
add
mov
pushf
popa
xchg
mov
in
pop
add
shl
lar
xchg
pop
stc
cwde
adc
sub
repnz
jp
test
mov
xor
leave
pusha
(bad)
sbb
or
mov
aaa
aad
shr
or
cld
mov
pop
shl
and
imul
push
xchg
add
dec
pop
dec
jecxz
or
addr16
mov
lods
scas
mov
int
push
sbb
cmps
cmp
mov
cdq
pop
in
mov
push
(bad)
lods
push
clc
aad
imul
inc
cmp
mov
shl
xlat
jns
adc
push
jmp
adc
mov
inc
sahf
lds
adc
gs
adc
mov
leave
jmp
imul
in
nop
das
xor
xchg
aaa
adc
and
mov
sub
sub
or
lods
cs
arpl
lods
repz
xor
push
mov
dec
or
jb
repnz
rol
movs
mov
xchg
cmp
in
jb
cmp
dec
cmp
repnz
in
dec
xor
and
pushf
sar
fisttp
test
dec
(bad)
adc
push
push
arpl
or
mov
dec
or
std
inc
sahf
addr16
sbb
xchg
int
ins
or
adc
add
mov
or
mov
sbb
std
(bad)
mov
push
sti
inc
mov
inc
(bad)
retf
bswap
je
mov
xchg
loopne
push
xchg
dec
sbb
pop
cmc
jecxz
and
xlat
dec
adc
iret
mov
and
loope
jecxz
icebp
out
(bad)
sti
cs
out
push
ret
shr
add
(bad)
arpl
std
dec
popf
mov
adc
xchg
dec
mov
leave
aas
sar
fcom
sbb
pushf
scas
mov
inc
sub
adc
std
cmp
jmp
imul
jo
(bad)
dec
out
and
in
retf
or
stc
and
fcomp
mov
jne
rol
popf
mov
cdq
shl
dec
inc
inc
and
adc
sbb
int3
loopne
adc
das
sbb
xchg
or
pop
sub
retf
push
and
cs
add
mov
movs
xor
aad
jbe
adc
push
test
lods
add
add
dec
les
inc
aas
dec
imul
in
mov
cmp
fidivr
pushw
cmp
movs
nop
cmp
adc
xor
cmp
loop
das
cmp
les
js
dec
jnp
out
das
push
mov
mov
xchg
inc
sbb
(bad)
xor
out
xchg
(bad)
rol
addr16
mov
jecxz
mov
aam
jecxz
mov
test
pop
fwait
dec
add
clc
xchg
sbb
mov
out
adc
mov
pop
adc
and
mov
mov
sbb
cmp
xor
imul
cmp
mov
and
cdq
movs
mov
test
jno
les
sbb
xor
int
leave
xor
push
aas
mov
ins
not
shl
xchg
or
mov
push
arpl
pop
ret
inc
xchg
inc
jge
mov
jnp
pop
lods
jge
xor
cld
push
push
sar
dec
out
addr16
sub
stos
mov
test
aaa
xchg
add
jno
repnz
cwde
jne
ja
movs
adc
aaa
xor
(bad)
call
icebp
aas
out
jno
fmul
push
mov
push
and
sub
jo
xchg
mov
call
stos
scas
pop
rcl
push
call
les
jo
aam
and
jcxz
cmp
push
test
cmps
cmp
test
nop
add
outs
or
into
shl
daa
inc
outs
retf
imul
cmp
call
add
xor
xor
mov
ror
mov
pop
aaa
jmp
dec
fcom
mov
xchg
mul
sub
or
in
xchg
mov
xchg
and
pushf
cli
xor
xchg
mov
mov
jge
not
cmp
jo
retf
push
dec
ret
sbb
imul
mov
mov
in
or
push
mov
mov
fimul
dec
rcl
or
mov
retf
in
and
pusha
pop
test
je
pop
ds
cmps
or
(bad)
stos
or
lock
fcmovnbe
sti
jmp
rcl
and
push
xchg
vpunpckhwd
cdq
sahf
mov
shr
jbe
scas
mov
push
inc
jno
fadd
mov
add
cmp
mov
mov
loope
and
mov
inc
mov
jae
dec
scas
nop
ds
gs
lahf
lahf
sbb
dec
leave
xchg
mov
es
xchg
push
lods
shr
icebp
pop
sbb
scas
clc
push
mov
hlt
sti
scas
aaa
cmps
mov
lea
neg
push
adc
jb
out
cmp
mov
inc
rol
cli
loope
push
inc
jae
xchg
call
bound
add
test
dec
xor
popa
inc
outs
xor
xor
cmc
push
push
push
adc
jbe
adc
outs
loop
aaa
jge
mul
fisub
add
cwde
call
push
(bad)
cli
out
push
cmp
adc
jbe
sbb
xchg
pop
push
ins
mov
out
ins
(bad)
dec
and
addr16
imul
fwait
or
movs
repz
mov
out
mov
add
and
jnp
loop
jg
push
imul
dec
cmp
pop
(bad)
mov
mov
ror
push
fnsave
mov
sti
cdq
mov
or
cmp
sbb
xchg
aad
(bad)
loopne
(bad)
jne
xchg
and
sbb
and
lahf
fiadd
repz
adc
(bad)
stc
sbb
mov
sbb
frstor
pop
mov
stos
adc
cmp
outs
bound
mov
mov
les
pop
and
out
inc
pop
adc
movs
iret
dec
mov
jae
mov
rcr
dec
jecxz
push
pusha
and
add
inc
pop
adc
xchg
les
outs
jl
mov
mov
lods
movs
dec
push
mov
xor
dec
adc
aaa
jae
pop
test
sahf
rol
push
retf
xor
jmp
add
(bad)
jge
jmp
cmp
scas
enter
inc
pop
pop
int3
mov
mov
cli
frstor
ja
push
jg
loopne
stos
gs
push
aas
adc
adc
rol
movs
stc
shld
les
sub
addr16
stos
cwde
(bad)
je
(bad)
lock
dec
inc
mov
mov
xchg
sbb
mov
jg
mov
cwde
mov
add
scas
popf
cmp
stos
sub
jmp
jb
(bad)
mov
mov
xchg
adc
loope
out
imul
loop
pop
or
xor
fiadd
push
test
xchg
hlt
or
and
mov
adc
adc
jne
(bad)
cli
pushf
aam
pop
fcom
loopne
mov
xor
jg
push
inc
and
and
loopne
and
or
int3
cwde
loope
fsubr
pushf
xchg
mov
faddp
dec
adc
ins
pop
fsub
jmp
fidiv
hlt
sbb
inc
out
pop
pop
idiv
mov
pusha
and
cmp
xor
mov
cmp
sub
(bad)
inc
sub
out
push
shl
or
(bad)
xchg
cli
cmp
(bad)
xor
cli
cdq
scas
adc
xor
or
sub
adc
loopne
and
mov
lods
jge
dec
lock
push
xor
fld
int
movs
aas
mov
into
jne
push
xor
ret
fmul
dec
jb
ret
lods
enter
push
cs
adc
sub
jo
movs
shl
leave
push
std
or
not
or
mov
pop
pushf
scas
and
gs
jecxz
sar
sbb
hlt
or
xlat
icebp
xchg
fmul
ds
les
lock
sti
sub
pushf
sbb
sbb
fisttp
loopne
gs
mov
add
ret
cmc
shr
sbb
push
jae
cld
inc
int
adc
adc
ja
dec
mov
leave
pop
stos
js
mov
cli
(bad)
pop
sub
inc
and
cmps
adc
xchg
pop
test
mov
jnp
jmp
fcmovb
scas
dec
pop
sbb
inc
push
cmp
clc
sbb
das
mov
pop
adc
int
lea
aad
(bad)
test
mov
dec
sub
mov
xor
jo
push
(bad)
aam
dec
sbb
mov
push
sub
mov
div
sbb
ins
xchg
imul
rcl
mov
xlat
das
xchg
mov
fisttp
add
push
hlt
lds
push
xchg
push
dec
mov
int
jns
stos
xor
bound
out
pop
mov
dec
dec
call
scas
(bad)
and
adc
fiadd
dec
push
cmps
dec
lock
mov
repz
pop
call
outs
pop
stos
mov
das
push
dec
pop
or
mov
lock
push
ss
into
test
out
fidiv
test
mov
and
bound
xor
ficomp
(bad)
pop
repnz
sbb
dec
test
js
not
dec
pop
in
daa
data16
retf
fild
inc
pusha
jb
jmp
and
cmp
push
mov
mov
push
cmp
mov
fcmove
mov
mov
mov
or
or
cld
js
aam
mov
das
and
jl
xchg
mov
cmp
push
loope
add
mov
mov
cdq
adc
inc
sub
call
adc
cmps
outs
xchg
nop
mov
clc
imul
adc
push
ds
aas
lods
push
stos
jns
dec
loop
sbb
pop
iret
adc
das
inc
ss
add
or
cmp
xchg
xor
xor
enter
std
mov
ss
rol
popf
cmp
dec
xchg
cmp
sub
sub
cli
add
(bad)
iret
push
mov
sbb
mov
mov
popf
jb
fcos
or
jmp
or
sub
(bad)
xlat
mov
xchg
add
(bad)
mov
and
test
ins
and
jo
fst
mov
inc
pop
push
sub
cli
repnz
adc
rcr
adc
(bad)
dec
fdiv
ss
inc
xchg
dec
jmp
clc
daa
loopne
xlat
sbb
shr
sub
jnp
fnstsw
pop
fsubr
add
dec
sbb
dec
fsubp
bnd
inc
jmp
sub
outs
fst
cmp
jns
xor
sub
ins
sub
xchg
stos
mov
push
addr16
iret
push
mov
(bad)
movs
movs
movs
rcr
dec
test
or
ins
mov
adc
lea
adc
push
hlt
je
fadd
retf
lahf
pop
inc
cdq
mov
jecxz
lds
jle
fldenv
xchg
pop
test
imul
jns
mov
inc
test
div
sbb
dec
add
call
adc
cld
sti
sub
out
test
lods
sbb
adc
xor
out
mov
js
push
imul
push
(bad)
in
(bad)
jns
push
in
(bad)
adc
add
inc
stos
cwde
push
fwait
adc
pushf
push
pop
fs
aad
pop
xchg
in
(bad)
ins
popf
mov
mov
mov
sub
mov
xchg
pushf
icebp
aad
es
jecxz
cmp
mov
push
jmp
sbb
loope
mov
pop
dec
shl
aaa
adc
adc
sub
scas
sub
mov
cld
cmp
ret
mov
test
adc
rcl
mov
xor
dec
sbb
cli
or
nop
mov
cdq
mov
dec
xchg
and
mov
pop
mov
sahf
mov
and
or
sub
lods
inc
arpl
and
mov
mov
sub
imul
dec
lods
sti
adc
add
(bad)
jecxz
and
das
movs
leave
int3
arpl
shl
and
je
mov
xchg
daa
sub
cmp
jo
adc
popa
jle
loopne
mov
out
jne
hlt
mov
push
jmp
jbe
xlat
mov
mov
fisttp
fbld
cmp
cwde
lahf
or
sub
add
das
stos
mov
mov
cdq
cwde
xor
jmp
push
ss
cmp
cmp
adc
ror
mov
nop
push
pop
add
stos
or
(bad)
xchg
in
fst
cli
sub
or
cwde
cmp
arpl
ret
fdiv
ds
sbb
pop
(bad)
shl
pop
xor
cwde
ror
dec
aam
lods
or
sub
lea
in
ror
mov
(bad)
cmp
mov
cmps
fbld
cmp
jl
cli
inc
ror
enter
mov
fild
ret
add
xchg
dec
pop
sbb
add
inc
in
inc
or
push
stos
ja
dec
pop
shl
into
add
adc
mov
push
sbb
inc
es
dec
xor
aas
icebp
mov
and
adc
adc
push
jb
call
fnstsw
std
xor
xchg
push
test
xchg
fldenv
hlt
je
fsubrp
add
or
jl
jno
xchg
sub
iret
scas
cdq
into
(bad)
adc
in
jb
xchg
sub
cmp
jb
pop
mov
mov
sub
adc
adc
sub
push
out
jp
push
sbb
mov
in
add
sbb
cwde
or
inc
es
imul
jnp
int3
iret
jo
xchg
cmp
ficomp
xchg
je
mov
das
pop
push
sub
mov
test
fcomp
(bad)
sbb
arpl
xchg
push
sub
push
js
(bad)
xchg
jae
sbb
add
cmp
movs
mov
inc
mov
shl
stos
sub
arpl
pop
mov
dec
ss
mov
enter
sub
push
aaa
mov
dec
jnp
je
movs
jne
int
sub
or
div
into
gs
jmp
mov
cmp
mov
stc
sub
mov
mov
call
movs
inc
pop
sti
xor
cmp
sbb
das
loopne
and
adc
push
or
and
xchg
sbb
xchg
mov
aam
dec
pop
ficomp
popa
adc
icebp
cmc
sub
adc
dec
jge
lahf
ds
repz
in
jecxz
js
js
mov
and
repnz
push
scas
push
imul
test
and
adc
lahf
dec
jge
xchg
ins
mov
push
jge
xchg
sub
idiv
fs
bound
mov
inc
test
jmp
out
xchg
pop
cmps
push
movs
and
sub
pop
and
push
dec
and
movs
push
movs
aaa
jg
jb
in
stos
inc
fisub
xchg
(bad)
int3
mov
inc
cmp
shl
je
xchg
mov
nop
add
adc
pop
sbb
fld
(bad)
loop
inc
mov
push
mov
stc
fadd
ss
dec
shr
out
stos
push
(bad)
aas
dec
out
cmp
lahf
test
or
cli
aaa
fild
pop
js
out
adc
and
xor
inc
or
into
inc
and
mov
test
arpl
mov
addr16
xchg
cmp
(bad)
(bad)
push
mov
mov
dec
xchg
push
sub
mov
xchg
mov
rcr
lods
cmp
fbstp
sub
xchg
or
(bad)
les
xchg
fimul
jmp
movs
sbb
lea
xor
movs
ins
xor
sbb
aad
mov
repz
ret
push
sub
test
sahf
dec
pop
pop
or
gs
mov
imul
jl
mov
sub
and
mov
pop
rol
or
mov
jl
retf
imul
and
and
pop
cmp
mov
outs
or
mov
ret
mov
inc
imul
mov
mov
jmp
mov
in
pop
lock
add
call
mov
push
movs
inc
out
test
cld
xor
mov
or
loop
push
mov
jl
lea
inc
sub
push
push
into
jge
inc
or
or
jae
rcl
push
push
pop
sbb
and
popa
fsub
(bad)
out
stos
cmp
imul
push
arpl
stos
sub
sub
xchg
xchg
rcl
sub
lods
mov
push
das
fist
sbb
inc
pop
call
in
sub
push
mov
mov
dec
fsub
test
inc
cmp
call
jge
pop
bound
pushf
scas
mov
pop
xchg
mov
dec
xchg
pop
mov
push
cmp
inc
inc
sbb
arpl
sbb
adc
adc
and
rcl
cmp
mov
(bad)
dec
xor
cs
mov
inc
xchg
fst
adc
daa
ins
add
shr
add
or
xchg
xchg
push
sub
in
neg
enter
mov
(bad)
sbb
sub
aam
and
jnp
jnp
cmp
scas
gs
cmp
call
pusha
xchg
add
cwde
pop
cmp
xchg
mov
xor
cmps
xor
inc
pop
mov
pop
dec
ds
cmp
jne
movs
rcl
push
sub
xor
mov
and
cmps
pop
pop
mov
fs
jp
rcl
rol
ret
pop
mov
(bad)
add
(bad)
shr
aad
pop
lods
cmp
xchg
mov
(bad)
aas
pop
inc
pop
xchg
inc
push
sbb
fs
test
xor
pop
mov
popw
out
or
mov
icebp
int
jae
mov
push
or
int
push
int
dec
bound
push
fisubr
lods
xchg
adc
push
add
mov
in
mov
mov
mov
call
ds
dec
stos
push
or
fadd
pop
jmp
lock
repnz
jne
in
cld
dec
cmps
in
or
mov
jbe
shr
jg
adc
jp
add
retf
and
rcl
test
ret
test
inc
dec
push
stos
push
jbe
pop
out
sub
or
cmps
fmul
inc
aas
outs
mov
adc
pusha
mov
enter
add
popf
sbb
mov
test
bound
rcl
fstp
test
push
sbb
popa
jmp
push
ins
sbb
outs
inc
retf
mov
cli
hlt
aas
fldcw
jbe
mov
sub
and
xchg
mov
retf
mov
dec
add
pop
and
popf
outs
and
in
addr16
sub
test
dec
stos
cmps
jae
sub
jp
mov
lahf
(bad)
pop
stos
nop
cld
pop
sub
dec
cmp
jp
movs
sar
dec
retf
add
dec
out
xor
xlat
pushf
(bad)
mov
je
mov
jo
push
aaa
daa
jne
mov
enter
sbb
jl
xchg
pushf
scas
(bad)
fucompp
and
push
xchg
adc
jp
cmp
sahf
pop
pop
arpl
data16
clc
std
clc
xor
push
out
cmp
or
adc
cdq
or
ins
icebp
add
dec
fs
add
mov
add
scas
call
dec
and
jne
inc
das
pushw
cmp
mov
fwait
adc
xchg
and
fidiv
iret
xor
and
add
stc
mov
lock
jmp
inc
xor
loope
jg
popa
pop
in
push
add
push
(bad)
cmp
outs
dec
shl
xlat
jo
add
or
gs
add
popa
jbe
mov
pop
fs
push
mov
add
mov
add
mov
mov
xchg
popf
push
fiadd
aad
cmp
cli
stos
dec
(bad)
pop
pop
jmp
fbld
inc
or
leave
xchg
sub
shr
fimul
pop
and
cdq
mov
push
js
or
jo
shr
pop
push
iret
test
fimul
and
aad
mov
mov
fcom
jle
push
dec
loop
setb
xchg
sahf
and
lea
mov
sbb
retf
sub
add
inc
push
push
into
dec
sbb
or
imul
cmc
les
(bad)
mov
(bad)
in
movs
into
clc
cmps
mov
adc
pop
sub
jb
pop
sbb
in
(bad)
jmp
outs
cmp
cmp
sti
jecxz
cwde
inc
cmp
push
jb
mov
sbb
in
cmp
add
arpl
mov
pusha
mov
dec
inc
and
shl
pop
xchg
inc
jne
jbe
shl
adc
lds
inc
and
icebp
pop
dec
(bad)
jl
pop
mov
jg
sbb
or
inc
cmp
hlt
enter
repnz
push
inc
xchg
mov
popf
dec
(bad)
cmp
lods
xchg
pop
and
(bad)
adc
test
aaa
sub
(bad)
int3
xchg
mov
mov
dec
or
ds
inc
ins
retf
inc
and
fcmovnu
aad
inc
pop
mov
dec
cmp
sub
in
cmp
int3
jmp
not
idiv
or
cmc
cmp
fs
xchg
bound
adc
jnp
ror
dec
jmp
sub
mov
pop
(bad)
jle
mov
dec
enter
add
bswap
sbb
or
lock
icebp
or
mov
cld
xchg
fdivr
aad
(bad)
call
(bad)
idiv
jge
mov
popa
adc
inc
pop
in
cmc
stos
push
dec
sub
lds
lods
inc
push
add
push
fwait
sub
push
lock
lea
jge
neg
cmp
pop
dec
fucomi
sahf
(bad)
jnp
aad
adc
or
dec
out
loop
xor
mov
jl
test
xchg
add
ss
jp
pushf
push
push
sub
push
test
mov
cmp
push
push
mov
sub
xchg
xor
mov
out
pop
add
cmp
call
mov
shr
adc
stc
inc
jmp
(bad)
into
xchg
inc
xor
add
inc
or
cmp
sub
lock
cwde
repz
add
inc
pusha
xor
mov
data16
les
cld
cmp
daa
nop
mov
xchg
pop
jmp
push
aaa
fisttp
sbb
add
cmp
ja
xchg
and
lods
jmp
pop
iret
cmp
rcl
(bad)
jmp
mov
sub
add
movs
ret
mov
sub
loope
xor
pop
daa
sbb
call
fmul
addr16
push
adc
std
cmps
gs
push
out
sbb
(bad)
sbb
jle
stos
inc
or
in
mov
pop
repnz
mov
jae
movs
sbb
pusha
add
nop
jbe
add
push
fmul
mov
vdivsd
ret
retf
jo
mov
movs
mov
mov
dec
rcr
test
inc
xor
test
xchg
aam
jne
sub
fwait
mov
(bad)
xchg
mov
jo
fs
jmp
cwde
mov
enter
hlt
push
push
pushw
dec
sub
shl
sub
das
jmp
mov
adc
inc
inc
mov
je
xchg
(bad)
xor
nop
jns
mov
movs
retf
retf
sbb
test
aad
jg
push
nop
aad
cmp
cmps
loop
lea
in
sbb
lods
ds
enter
mov
xor
pop
jecxz
jnp
push
jne
jg
int
scas
ret
sbb
jmp
adc
pop
mov
adc
lods
sub
jo
cmp
mov
mov
push
push
or
and
push
iret
lock
std
cmp
(bad)
mov
cmc
loope
sbb
lods
(bad)
jae
nop
dec
je
cmp
data16
add
das
xchg
sbb
retf
mov
call
sub
mov
push
cmps
pop
pop
xor
retf
icebp
mov
ficom
in
cli
aad
pop
repz
loopne
lods
cmp
xor
(bad)
cmps
in
int
dec
push
mov
hlt
pop
or
xor
push
arpl
push
mov
push
xchg
ins
push
inc
add
dec
lds
push
or
fbld
js
(bad)
mov
adc
loop
imul
push
int3
push
push
pushf
jle
aad
ret
inc
or
test
xor
add
inc
pop
jbe
mov
aad
(bad)
cld
aam
dec
cmp
mov
fwait
jle
inc
mov
pop
sub
dec
jmp
mov
imul
repnz
xor
jle
call
mov
push
add
es
popf
ds
add
test
cmp
dec
and
retf
jle
(bad)
push
jmp
push
movs
test
int
ins
sbb
mov
ret
ret
mov
sub
sub
int3
fstp
scas
mov
xor
mov
dec
xchg
lock
cmp
pop
addr16
xlat
int3
add
rcl
mov
cmp
xlat
ins
jp
sub
sbb
jo
ins
jmp
fwait
in
xor
sub
mov
mov
push
cdq
and
cmps
or
popf
gs
sbb
dec
sahf
or
aad
loop
mov
pop
icebp
or
pop
cmp
jmp
test
or
loope
add
(bad)
jmp
ds
cs
sub
sbb
mov
(bad)
loopne
and
sub
jb
xor
jge
inc
mov
sub
aam
lods
xchg
fwait
stos
retf
jno
push
inc
hlt
adc
push
cmps
sar
mov
sub
lock
pop
out
aad
jae
das
(bad)
add
cmp
cmps
pusha
outs
pop
and
(bad)
sub
cld
dec
lods
jle
jb
push
mov
lods
adc
aas
jmp
mov
out
xchg
cmp
iret
cli
loop
or
mov
lods
test
push
lahf
stc
or
push
mov
call
mov
fld
cwde
sbb
(bad)
jo
or
lds
in
mov
out
sahf
pmullw
or
les
test
push
pop
mov
jno
sub
cmc
dec
(bad)
fild
inc
lods
rcr
jbe
push
inc
fst
push
jle
xor
(bad)
push
jbe
xchg
push
jge
and
ja
sbb
clc
cmps
mov
sub
inc
enter
stos
xchg
mov
js
push
in
repz
std
in
xor
and
pop
stos
in
retf
fisttp
ins
jmp
pop
lock
cmps
popf
lahf
or
adc
mov
inc
loope
call
shl
jp
cs
xlat
or
retf
jle
jmp
mov
jg
and
xlat
sar
(bad)
jecxz
or
int
mov
inc
sar
adc
mov
pop
mov
in
xchg
adc
sub
dec
adc
xchg
sub
push
leave
popa
pop
lea
aam
ins
mov
jae
add
ja
ins
aam
xchg
push
scas
mov
(bad)
sbb
jne
outs
into
inc
jne
dec
jmp
push
lods
imul
mov
int
es
adc
stos
stos
dec
mov
sbb
out
xchg
test
dec
stos
jecxz
movs
std
cld
movs
sub
push
push
or
xchg
dec
sub
inc
jmp
dec
int3
std
out
or
icebp
jo
or
in
xor
pop
xchg
xor
push
std
mov
sbb
retf
inc
pop
sbb
cld
test
adc
and
mov
das
leave
fwait
sbb
xchg
gs
out
adc
aam
mov
adc
cli
push
cmp
dec
inc
dec
sub
sbb
pop
cmp
jmp
imul
loopne
mov
in
jmp
out
fwait
dec
inc
xor
push
jmp
xor
es
outs
sub
dec
xor
mov
jle
icebp
pushf
sbb
or
xor
xor
cmps
clc
pop
sub
pop
loopne
sub
lea
rep
out
daa
fmul
jmp
xchg
dec
cmp
mov
fimul
test
mov
mov
inc
fidivr
dec
enter
lods
imul
mov
mov
sar
cmp
gs
push
xchg
call
popf
ret
addr16
fbld
fisub
aas
pop
cmp
test
das
mov
ins
ss
fld
nop
and
cmp
shr
imul
bound
lahf
jo
xlat
add
pusha
jecxz
inc
(bad)
sub
in
gs
pop
jb
jge
js
addr16
pop
add
xchg
test
push
cs
xchg
jbe
retf
or
xchg
sar
jmp
adc
xchg
mov
mov
dec
data16
push
dec
xchg
call
xor
xor
fs
xchg
and
xchg
adc
das
push
aad
and
push
mov
xchg
xor
push
xchg
pop
add
sbb
gs
sub
pop
adc
jns
mov
inc
outs
stos
sbb
sbb
sub
mov
and
adc
jmp
sbb
aaa
push
fisttp
into
pop
push
jae
je
outs
jo
jmp
neg
fisubr
sbb
mov
jecxz
adc
mov
ins
xlat
mov
arpl
xor
jb
pop
sub
bound
in
mov
nop
scas
outs
je
jl
mov
add
mov
adc
test
in
sbb
pop
xor
mov
sahf
sahf
lahf
test
out
jmp
dec
ins
loopne
loop
xor
sar
retf
xor
in
fdiv
push
lods
aad
xchg
stos
outs
cmp
lahf
mov
xor
mov
mov
push
xchg
dec
or
mov
fisttp
xor
xlat
xor
mov
popf
js
mov
fs
js
dec
or
jbe
in
xchg
(bad)
fcomp
das
jp
rol
mov
fidivr
les
fwait
cmc
psrad
add
sbb
in
fsubr
(bad)
jmp
adc
add
jmp
outs
and
(bad)
push
shl
xchg
ficomp
mov
test
mov
pop
mov
fmul
mov
rcl
jl
dec
cmp
imul
mov
iret
loope
shl
xchg
test
mov
inc
les
add
sbb
xor
sahf
sti
jl
mov
add
iret
nop
lods
retf
inc
test
mov
jno
shl
imul
pusha
mul
test
sbb
push
cmp
ror
add
movs
inc
outs
cdq
daa
out
cmc
cmp
jmp
pop
rcr
scas
cli
inc
call
push
neg
push
idiv
aad
call
sar
sbb
inc
imul
movs
push
sbb
in
jl
std
loopne
adc
cmp
int3
imul
sbb
xchg
fs
or
inc
(bad)
or
std
cli
sub
jp
mov
lahf
jge
dec
out
and
and
int3
sub
cli
pop
pop
pop
scas
add
es
push
cmps
adc
test
inc
icebp
in
mov
and
xchg
lods
mov
(bad)
dec
xor
arpl
pop
dec
xchg
scas
jecxz
clc
push
pop
pop
aaa
inc
adc
stos
fiadd
test
call
stc
push
leave
cmp
dec
mov
mov
daa
clc
sbb
mov
add
(bad)
pop
push
test
pop
movs
pushf
leave
push
mov
mov
icebp
sub
cmp
add
mov
or
js
or
cdq
mov
lock
xchg
push
jae
sub
call
jno
jmp
xchg
xor
int
adc
stos
sub
test
(bad)
shl
mov
arpl
ins
pop
add
ds
jmp
test
ror
in
ss
pop
jmp
cmp
mov
adc
test
test
add
push
jo
sti
std
dec
mov
ins
pop
mov
clc
aas
nop
jmp
pop
jmp
ror
sbb
sub
jp
mov
(bad)
sbb
cmp
and
into
fist
pop
jbe
loope
into
aaa
add
cmp
jmp
retf
les
sar
jmp
sbb
mov
in
xor
int3
inc
cmp
dec
sub
dec
int
call
jle
push
mov
mov
push
add
add
shl
mov
ret
icebp
mov
ja
fild
push
ret
sbb
cmp
in
test
loope
dec
cmp
jg
aaa
xchg
repnz
sar
pushf
mov
loop
xchg
jmp
js
mov
xchg
xlat
(bad)
aam
sbb
bound
mov
test
std
add
ret
jle
jnp
lahf
gs
xchg
stos
xor
jno
inc
fwait
loopne
cdq
hlt
push
dec
jmp
sub
inc
jmp
dec
nop
adc
stos
fincstp
cmp
rcr
stos
stc
fimul
dec
jg
or
repz
pop
mov
jecxz
jp
add
pop
xchg
(bad)
and
mov
jae
push
mov
ret
(bad)
push
mov
(bad)
or
out
add
pop
inc
push
mov
int3
call
jl
outs
jmp
add
cmp
shr
cmp
cmp
xor
or
scas
and
out
xor
mov
dec
jmp
push
sub
cmps
jno
cmp
mov
mov
push
cld
jge
push
arpl
pop
jbe
jno
xor
imul
aad
push
sub
dec
cmps
popf
sbb
dec
fwait
mov
push
pop
add
in
shr
sub
daa
xchg
dec
cmps
and
inc
fsubr
movhps
mov
sub
pop
cli
(bad)
leave
push
pop
sbb
jns
jns
sub
fsub
es
ins
fistp
sahf
xor
jns
xchg
(bad)
js
aas
adc
sbb
ds
mov
xchg
or
fcmove
sub
es
xlat
ds
lods
push
(bad)
out
push
das
data16
fstp
jmp
sar
call
fidivr
inc
popf
mov
daa
mov
inc
inc
cbw
syscall
in
mov
ficomp
add
or
sub
(bad)
into
loop
mov
dec
xor
dec
xchg
jecxz
inc
jmp
idiv
lods
adc
retf
mov
pop
sub
dec
popa
(bad)
adc
bound
xlat
xlat
dec
push
ror
por
jge
mov
or
ror
mov
loop
mov
push
jmp
dec
es
xor
dec
cmps
call
sub
mov
(bad)
jecxz
or
aad
and
sub
loop
add
jmp
jmp
outs
hlt
pop
pushf
mov
xchg
and
jno
add
out
adc
and
inc
in
sub
pop
mov
cmp
test
pop
push
mov
icebp
retf
pop
les
es
test
or
adc
or
push
fild
cwde
pop
inc
pop
movs
retf
fcomp
mov
je
sti
fsubr
mov
mov
test
pop
jo
lods
bound
mov
repz
xor
sbb
popa
out
dec
dec
and
jge
shr
pop
push
push
push
add
jle
ret
pop
lods
mov
mov
repnz
inc
jb
xchg
loope
mov
mov
and
mov
add
sub
dec
xchg
pop
inc
js
fdiv
pop
mov
adc
aaa
(bad)
dec
out
mov
pop
dec
call
(bad)
sub
enter
cmp
popa
add
xchg
inc
cmp
cdq
xchg
rcl
cdq
bound
test
je
sub
lds
(bad)
xchg
pop
pop
enter
outs
test
and
pop
gs
sar
cmps
test
cmp
push
sub
fiadd
daa
jl
fs
pop
test
adc
mov
enter
rcl
clc
(bad)
aam
mov
inc
call
inc
pusha
pop
iret
shl
movs
pop
push
movs
sub
test
in
cli
outs
pop
sbb
hlt
cwde
shl
xchg
pop
(bad)
jae
stos
pop
outs
cmp
or
test
daa
shl
or
jae
mov
retf
ja
loopne
or
stc
xchg
aaa
cmp
int
fidiv
push
xchg
sub
scas
loope
push
xrelease
mov
test
xor
enter
or
in
aam
push
or
pop
imul
aam
dec
test
icebp
inc
in
push
cs
cmp
fwait
pop
test
pop
mov
popf
fisttp
aad
mov
popa
or
adc
mov
add
sub
ret
inc
add
pop
ror
(bad)
pushf
add
xchg
ret
and
sub
pop
popa
jno
cmp
xor
movs
das
ja
mov
xchg
stos
out
icebp
xchg
inc
or
call
fldenv
or
jns
mov
cmc
fadd
mov
out
push
es
sar
push
jne
push
test
ret
cli
sbb
imul
int
ja
mov
ret
or
pop
cmps
jbe
xchg
leave
xor
inc
cdq
xchg
mov
lea
sti
(bad)
add
xor
pop
call
out
mov
sbb
out
inc
push
xchg
pop
and
and
lea
stos
cmp
jl
stc
lea
mov
pop
jno
aam
sbb
cdq
inc
das
mov
popf
ret
enter
jbe
inc
ret
adc
loope
bound
stos
imul
dec
dec
mov
rcl
xor
or
sbb
pop
das
bound
retf
add
push
adc
sbb
mov
pop
fst
push
lds
push
stos
and
mov
call
(bad)
and
test
outs
ret
mov
sub
in
sbb
test
mov
mov
mov
mov
cwde
(bad)
dec
popa
loopne
push
sub
mov
and
das
pop
mov
out
popa
addr16
out
mov
or
cli
push
dec
aam
mov
ins
sar
in
test
mov
out
xchg
pop
dec
jle
out
jns
xor
lock
stos
jge
mov
add
shl
imul
call
adc
mov
dec
cmp
push
aad
aaa
arpl
or
push
mov
add
cmp
retf
je
cmp
and
add
xchg
(bad)
lods
inc
imul
idiv
xchg
jmp
pop
aas
sbb
push
(bad)
cmp
adc
rcr
test
(bad)
jbe
jg
xchg
cmp
inc
stos
sar
mov
add
inc
movs
test
pop
retf
test
xchg
mov
inc
rsqrtps
not
call
fcomi
adc
lds
test
sbb
(bad)
push
call
ret
data16
add
pop
sbb
cmp
nop
mov
shl
aas
sub
mov
cdq
push
shl
popf
push
or
in
pushf
xchg
jp
dec
xchg
sbb
mov
pop
imul
inc
sbb
cld
push
das
hlt
(bad)
adc
mov
clc
mov
ds
mov
mov
into
cmp
test
add
sbb
clc
add
inc
lods
lock
mov
or
jb
sbb
sub
retf
or
scas
push
(bad)
dec
out
retf
push
and
push
xchg
adc
sbb
cmp
add
and
mov
out
leave
inc
retf
iret
aad
push
add
(bad)
mov
ret
mov
pop
iret
mov
adc
inc
xchg
adc
sbb
sbb
and
push
pop
and
mov
(bad)
pusha
xchg
mov
add
dec
jl
cmp
jge
jno
jmp
adc
xor
mov
sbb
cmp
inc
and
push
imul
(bad)
rcl
jg
fnop
inc
cmp
fs
mov
mov
mov
cmp
or
xchg
std
jle
call
out
push
xacquire
mov
adc
add
push
and
add
and
loop
fsubr
xchg
and
ins
push
movs
js
push
pop
push
adc
fsub
and
adc
aaa
push
or
stc
lahf
nop
(bad)
inc
(bad)
retf
jge
dec
in
cmp
std
mov
push
or
shl
nop
mov
xor
outs
xor
cmc
fwait
imul
std
hlt
stos
xchg
push
mov
int3
sub
adc
fnstenv
xor
mov
mov
adc
push
hlt
ret
repnz
iret
pop
jo
jl
mov
jecxz
push
(bad)
xchg
jne
jo
iret
pop
fs
mov
ret
clc
out
test
push
imul
cs
pop
jnp
jmp
movs
sahf
adc
ja
jmp
xlat
push
and
pop
or
imul
and
(bad)
mov
jns
stos
jb
nop
xor
jne
jbe
retf
ins
movs
inc
xor
in
aad
in
in
inc
mov
inc
call
mov
mov
push
push
and
sub
std
jne
mov
hlt
jmp
pop
pop
and
lock
jnp
adc
sbb
or
add
sub
jmp
loop
stos
jle
sti
ins
ins
out
xchg
sbb
pop
xchg
cs
dec
rol
or
cmps
out
dec
mov
sbb
in
outs
xchg
loope
(bad)
push
inc
xchg
pusha
inc
xchg
(bad)
les
jge
icebp
sbb
fidivr
out
add
out
or
push
inc
out
xchg
push
xchg
sbb
mov
out
push
data16
xor
pop
jp
sbb
and
fidiv
inc
pop
int3
sbb
mov
cmp
movs
pop
fs
pusha
repz
sbb
adc
push
push
sbb
retf
sahf
mov
add
leave
cmp
xor
mov
int
(bad)
stc
cmps
xchg
push
mov
mov
call
clc
call
jo
gs
int3
or
sbb
cmp
clc
in
jmp
inc
arpl
and
xlat
mov
mov
push
or
loopne
or
or
mov
mov
sub
xlat
push
call
and
(bad)
rcr
movs
and
jb
xchg
adc
test
mov
mov
adc
xchg
add
cmp
shl
and
fdiv
push
(bad)
inc
mov
lea
cmp
jo
cli
mov
and
mov
enter
js
mov
push
add
cmps
sub
mov
inc
ja
jnp
aad
(bad)
iret
rcl
and
(bad)
pop
(bad)
scas
xchg
out
push
lods
pop
pop
push
cmc
inc
jns
in
jmp
rol
neg
sbb
mov
test
dec
out
mov
mov
push
mov
in
mov
ins
les
gs
jecxz
push
mov
or
cmp
scas
cld
hlt
cmp
jmp
mov
mov
sub
sub
lahf
mov
ror
movs
xchg
das
sub
cli
mov
xlat
sti
gs
imul
hlt
cli
cdq
ret
nop
or
cmp
xchg
aaa
test
fild
jle
pop
ret
sub
pop
xchg
in
mov
das
cmc
movs
pusha
mov
mov
fdiv
dec
pop
shl
lea
sub
pushf
jle
mov
std
inc
mov
arpl
or
xor
xor
sbb
daa
sub
sbb
add
add
jns
or
cmp
or
mov
xchg
mov
sbb
pop
les
push
cmp
xchg
or
mov
sbb
and
and
icebp
jg
xlat
inc
jle
addr16
dec
mov
and
sbb
mov
cmp
enter
leave
stc
jmp
sahf
pop
or
and
rol
movs
dec
lods
mov
mov
mov
in
jle
dec
mov
adc
repnz
inc
xor
mov
mov
ret
push
rol
aas
test
fbstp
cld
aas
daa
ins
hlt
cmp
in
cmps
mov
in
cld
inc
mov
sbb
(bad)
lods
push
hlt
jecxz
push
xor
cli
ror
push
bound
ins
retf
mov
inc
adc
xlat
adc
fwait
loope
add
addr16
inc
jmp
jp
shl
adc
cmps
xor
mov
adc
loopne
mov
je
pop
je
pop
push
xchg
into
fs
sbb
ja
repnz
or
mov
cmp
std
sbb
inc
call
jno
mov
std
add
pop
mov
sbb
jmp
das
sbb
in
pop
jne
xor
xchg
pop
shl
lock
stc
jmp
mov
dec
das
fistp
stos
xchg
lds
das
(bad)
xor
push
lahf
adc
outs
mov
pop
push
push
dec
pop
pop
pop
sbb
shr
out
ja
mov
mov
out
jp
ss
mov
add
adc
dec
aas
pop
cli
cwde
js
sub
add
fisttp
std
lea
outs
fsubp
pushf
shr
mov
(bad)
icebp
pop
inc
ficomp
aaa
push
pop
mov
clc
push
sub
adc
jmp
mov
add
mov
or
pop
pop
dec
xchg
ja
test
aaa
dec
(bad)
pusha
push
mul
dec
xchg
pop
cmp
in
sub
mov
jg
mov
(bad)
ss
cmp
xor
cmp
pop
scas
pop
sbb
fistp
outs
xor
inc
icebp
leave
dec
adc
jmp
pop
and
mov
mov
jbe
pop
pop
loop
pushf
push
and
mov
xlat
mov
fild
or
adc
add
hlt
dec
sbb
outs
mov
outs
add
mov
or
dec
jb
out
cld
lea
imul
sub
xor
mov
push
mov
and
icebp
sbb
repnz
and
mov
movs
mov
mov
pushf
in
hlt
sbb
addr16
and
and
mov
in
push
mov
sbb
pop
in
xchg
cmp
cld
dec
stos
jge
mov
inc
outs
out
(bad)
fwait
jg
xchg
repz
(bad)
and
clc
pmaxub
cmp
out
sub
inc
mov
in
jmp
cli
jns
jmp
xchg
mov
add
cmc
ins
cli
imul
push
stc
imul
lods
iret
pusha
jae
leave
popa
or
mov
(bad)
in
das
test
mov
mov
jbe
xchg
jecxz
cdq
sub
repnz
mov
jae
movs
xchg
mov
cmps
movs
fild
or
pop
inc
jns
push
sub
rcr
imul
ss
push
cmps
inc
sub
ret
(bad)
xchg
dec
test
out
xchg
cmp
pop
pop
in
jmp
push
add
fisub
js
push
xor
neg
lods
adc
xchg
add
sqrtps
cmps
cmps
in
test
push
mov
mov
sub
out
fsub
outs
dec
ins
mov
push
xor
xor
loopne
retf
fst
jmp
movs
jae
and
add
and
mov
and
jmp
ror
inc
out
xchg
pop
jnp
push
inc
and
push
imul
jle
idiv
(bad)
out
pop
clc
jns
xchg
pushf
cmp
aad
popa
cmp
sahf
arpl
mov
repnz
nop
loopne
je
cli
xchg
call
push
and
in
jge
mov
pop
test
js
jb
adc
xlat
in
in
sbb
dec
aam
xor
pop
jne
jmp
cmp
ret
outs
jmp
not
adc
mov
push
test
mov
mov
and
dec
sbb
pop
repz
(bad)
jmp
adc
fld
inc
fcomip
jge
mov
jmp
(bad)
ins
push
mov
mov
imul
mov
sbb
inc
test
cmp
shl
jno
xchg
adc
das
xchg
sbb
(bad)
push
mov
call
data16
sti
out
call
mov
push
in
jns
xchg
jmp
inc
test
jmp
xchg
and
cmps
hlt
cmp
in
gs
and
add
xchg
add
call
ja
outs
movs
stc
(bad)
jge
add
mov
xchg
cs
cmps
es
mov
or
push
ins
sub
mov
test
inc
xor
data16
cmp
mov
aam
jnp
lea
adc
cwde
mov
lea
mov
add
out
outs
dec
jae
sahf
inc
scas
retf
sbb
and
dec
mov
xlat
add
push
icebp
cdq
dec
sub
adc
movs
add
xchg
and
push
and
pop
pushf
in
ins
cli
xor
rcr
xchg
push
stc
mov
xlat
(bad)
jbe
popf
push
add
and
mov
div
push
mov
popf
jl
mov
(bad)
sahf
xor
(bad)
in
jae
xchg
xor
sahf
push
idiv
sar
lahf
mov
test
xlat
mov
retfw
jmp
pop
mov
data16
xchg
movs
cmps
inc
ss
cmp
lods
pop
mov
push
xor
mov
in
lock
mov
pop
push
or
sbb
rol
and
adc
jno
std
adc
jl
push
aad
dec
xor
neg
fdivr
call
lods
or
or
jg
inc
adc
xchg
lds
iret
iret
add
push
xor
in
mov
(bad)
push
nop
repnz
xor
sub
sbb
ret
add
dec
jl
movs
or
in
sahf
hlt
and
lods
add
or
ss
or
mov
ins
xor
out
cmp
inc
outs
(bad)
sub
adc
pop
mov
and
sahf
sub
ja
inc
lods
push
xchg
das
in
mov
and
add
mov
or
sub
jb
test
call
xchg
pop
cmps
sub
leave
into
rcl
lods
pushf
out
mov
call
cdq
inc
sub
gs
adc
inc
add
(bad)
out
xor
ficomp
lahf
push
mov
stos
(bad)
in
inc
jmp
aas
icebp
dec
jge
adc
xchg
push
mov
in
fwait
call
mov
pushf
lods
cld
aam
shl
sub
or
imul
sti
fnsave
jnp
in
popa
or
pop
xchg
mov
pop
rol
outs
jo
cli
test
mov
in
je
outs
or
add
xor
mov
mov
cmp
jae
mov
call
inc
call
jnp
test
mov
xchg
popa
loope
js
ins
arpl
sub
scas
xchg
mov
ret
jp
hlt
jl
in
jmp
push
dec
push
in
inc
les
cmp
push
dec
add
sti
xchg
adc
sub
xchg
dec
push
cmp
xor
push
in
scas
mov
pop
movs
and
mov
mov
mov
xlat
xor
in
cmc
add
xchg
sar
xor
ss
popf
dec
nop
sbb
sbb
gs
stos
iret
into
cmp
lds
lods
and
pcmpgtd
dec
xchg
stos
outs
push
fwait
in
pusha
mov
mov
or
push
xor
in
xchg
pop
rol
out
xor
cwde
jecxz
mov
lea
outs
jbe
jg
dec
xor
pop
cmp
(bad)
inc
loop
fild
into
add
aaa
retf
push
xor
js
call
aam
rcl
cmp
push
jne
sbb
call
(bad)
mov
(bad)
rol
jmp
sti
in
inc
push
adc
pushf
in
int
mov
add
lods
clc
pop
in
jge
js
int
xchg
mul
les
and
or
ins
loopne
int
(bad)
jmp
pushf
jmp
jl
xor
les
into
jl
mov
imul
dec
(bad)
mov
cmc
nop
mov
(bad)
arpl
shl
rep
js
pop
dec
repnz
stos
lea
(bad)
or
ret
mov
fiadd
push
pop
jecxz
idiv
aas
(bad)
cmps
or
mov
sbb
mov
and
ja
mov
mov
int
pop
mov
call
ds
int
jmp
sbb
lock
mov
rcl
(bad)
mov
fdiv
(bad)
fcmove
mov
aad
lahf
adc
or
mov
bound
xor
mov
add
push
ficom
sbb
adc
xchg
mov
nop
cmp
addr16
adc
ja
iret
cmp
mov
mov
je
cld
mov
pop
mov
movs
pop
cmp
stc
pop
mov
loop
xor
inc
ins
outs
push
ret
adc
or
das
rcl
stos
mov
adc
pop
jge
xlat
sbb
mov
lahf
fdivr
mov
jae
clc
mov
inc
repnz
xor
fwait
mov
into
ror
push
jns
or
push
and
dec
lock
inc
out
mov
and
div
jecxz
lods
xlat
stos
pusha
ins
jo
add
mov
in
pop
jl
in
cmps
xchg
ficomp
mov
(bad)
aaa
fsub
outs
ret
cmp
jle
in
cdq
les
stos
int
jle
daa
rcr
stc
test
dec
sub
out
push
jb
jae
lods
xchg
rcl
push
out
mov
loope
mov
push
inc
inc
std
ret
call
xchg
pop
dec
(bad)
cli
adc
add
jae
popa
mov
imul
and
and
into
add
or
mov
or
daa
out
pop
push
pop
mul
stos
popa
mov
pushf
mul
les
shl
call
xor
jmp
jle
push
(bad)
xor
loope
xlat
retf
jmp
in
pop
dec
es
push
not
int
sub
xlat
out
mov
sahf
rol
mov
pop
inc
push
adc
fldcw
add
aad
out
jmp
pop
fbld
and
in
data16
scas
int3
retf
mov
jecxz
ror
push
data16
adc
xchg
mov
std
scas
xor
push
add
xchg
nop
and
inc
aam
xchg
mov
lods
out
or
or
call
pop
pop
mov
adc
repz
sbb
jg
popa
mov
inc
bound
ja
cmp
scas
sbb
dec
adc
jmp
inc
jle
sbb
lock
sbb
sbb
push
nop
stos
jecxz
pop
xor
ret
push
(bad)
test
mov
sub
xchg
iret
push
ror
fist
xchg
fcom
cld
inc
or
aaa
fisttp
fnstenv
fs
jge
lods
cmps
sbb
data16
xor
ret
and
sub
loope
xchg
pusha
mov
sub
xchg
mov
push
or
push
inc
fldcw
xor
lahf
mov
out
stos
shl
jl
(bad)
jmp
cmc
mov
jmp
and
std
arpl
adc
or
mov
out
aam
sub
(bad)
pop
sbb
loop
push
adc
mov
cmp
imul
mov
sbb
pop
mov
jae
jmp
pop
imul
or
pop
into
adc
pusha
push
cmp
xor
rcl
imul
inc
cwde
fldenv
movs
jl
nop
and
int3
pop
push
rcl
and
sahf
pop
imul
mov
ja
mov
repz
rcr
js
cli
pop
test
pop
jmp
sbb
aam
pop
jae
lahf
cdq
pop
add
xchg
mov
mov
ror
and
and
test
int
sub
fadd
adc
pop
mov
cmp
bnd
pop
dec
xor
ret
adc
dec
pushf
frstor
sar
not
ds
nop
ficomp
mov
in
xor
inc
cmp
mov
add
push
clc
and
xor
adc
fadd
pushf
mov
mov
popa
dec
mov
xchg
movs
leave
dec
shl
in
loop
rcl
cmp
jl
mov
xor
sbb
jb
mov
dec
sbb
jne
push
xchg
stos
jmp
add
cmps
sbb
fbstp
ss
jle
mov
xor
cs
frstor
aad
jmp
pushf
sub
push
cmps
sti
mov
pop
dec
jle
mov
pop
mov
fild
inc
not
enter
or
and
jb
sbb
xor
imul
retf
imul
(bad)
xchg
and
inc
ds
inc
xchg
lahf
mov
fs
xchg
dec
push
cmc
push
sbb
int3
jg
mov
fisttp
fsubr
push
mov
rcr
int3
or
shl
outs
xchg
mov
popf
push
out
mov
pop
(bad)
cmc
push
cs
xchg
jb
rol
xchg
xor
mov
cmps
xor
lock
shr
xor
push
out
shr
test
aaa
jp
pusha
xlat
sbb
push
sbb
dec
scas
dec
outs
std
repz
and
mov
mov
adc
fidivr
and
(bad)
adc
cmp
js
pop
(bad)
(bad)
mov
gs
jns
out
mov
mov
nop
push
dec
and
test
idiv
(bad)
pop
shl
shl
stc
adc
xchg
dec
sbb
push
jle
repz
out
(bad)
in
xchg
mov
imul
xor
xor
mov
pusha
(bad)
lods
int
sahf
jbe
xchg
adc
sbb
dec
adc
inc
add
mov
retf
xchg
out
mov
dec
ss
xor
pop
es
das
das
push
loope
ins
or
xlat
cdq
int3
jge
cmp
retf
add
hlt
mov
cwde
mov
jbe
popw
and
in
mov
inc
and
lods
movs
pop
fidiv
push
dec
pop
xor
mov
sbb
stc
inc
jecxz
xor
adc
push
inc
test
ins
cmp
mov
jmp
push
test
ret
sub
inc
or
in
inc
mov
inc
mov
or
add
sahf
scas
pop
iret
rol
cld
push
xchg
push
or
loop
sti
push
push
jne
enter
xor
shl
lds
mov
jge
or
or
push
xchg
fisttp
je
inc
jnp
std
icebp
repnz
or
add
in
retf
sub
cmp
cmp
repz
xor
in
arpl
cmp
mov
jo
inc
fnstcw
cmp
lahf
inc
rcr
and
and
es
sbb
inc
fisttp
or
push
test
lea
sbb
pop
pop
nop
fwait
loop
mov
push
imul
cmp
dec
nop
jp
mov
mov
jmp
cwde
test
sub
retf
xchg
inc
cmp
push
mov
retf
leave
jl
gs
gs
test
inc
xchg
lea
nop
retf
inc
sar
mov
leave
jno
pop
clc
movs
dec
cmp
push
pop
xor
test
sbb
sbb
push
or
mov
add
mov
or
ror
add
mov
jbe
cmp
out
shl
gs
add
mov
mov
jp
(bad)
cmp
fidivr
ds
xchg
cmp
ins
imul
int
sub
push
movs
out
fld
and
mov
push
adc
ins
popf
xor
fnstenv
pushf
test
sbb
pop
fisub
mov
pop
and
mov
imul
dec
add
pop
enter
add
xor
enter
push
push
fs
mov
ins
or
call
ror
getsec
pop
mov
std
shl
pop
xchg
push
jae
jb
add
sub
test
pop
xor
pushf
imul
loopne
int3
push
not
mov
(bad)
jmp
sub
xchg
jmp
pop
dec
push
jmp
not
bound
mov
dec
inc
js
(bad)
add
push
mov
out
movs
js
fisub
leave
gs
mov
je
and
sub
std
pop
xchg
or
clc
cmps
mov
cmp
stc
pop
jnp
movs
mov
fnstenv
xor
into
sub
add
mov
add
imul
cmp
int3
mov
or
ror
js
dec
dec
mov
arpl
bound
or
mov
adc
lods
outs
daa
inc
dec
xchg
div
lods
test
and
inc
aaa
mov
push
ss
sbb
cmp
dec
jne
sahf
xor
not
fnsave
ret
cmp
push
push
mov
sahf
inc
retf
xor
push
dec
fdivr
cs
aad
jmp
cmc
repz
jecxz
jg
ss
cld
stc
ror
mov
rcr
sbb
int3
(bad)
lods
xchg
xchg
out
jle
das
inc
pop
mov
dec
mov
das
(bad)
fs
pop
into
sbb
js
inc
fs
xchg
inc
or
das
repz
enter
loop
je
mov
push
imul
sti
fwait
(bad)
mov
fs
popf
xchg
ins
mov
scas
add
ret
retf
jmp
shl
sbb
ins
inc
stos
add
jne
mov
test
jle
add
aaa
data16
dec
ret
call
cdq
mov
mov
push
sti
jmp
int
adc
push
jp
mov
cmp
(bad)
add
cmps
ret
repnz
fsubr
pushf
jg
lahf
or
pop
movs
adc
imul
add
dec
jmp
das
mov
ins
jmp
lds
inc
pushf
ficomp
ins
(bad)
push
mov
cmps
test
rep
stc
leave
cmovb
sbb
mov
pushf
in
cmp
pusha
das
lods
fcomp
jne
add
(bad)
movs
aaa
jns
add
out
add
ds
cmps
ret
xchg
inc
jmp
(bad)
sub
imul
repnz
movs
icebp
cmp
repz
je
das
movs
addr16
jbe
lods
inc
clc
ror
stos
sti
sbb
xchg
icebp
sti
sub
mov
test
fsub
sahf
jnp
cwde
es
(bad)
hlt
cmp
gs
mov
fs
mov
mov
or
ror
push
add
sbb
lahf
ror
lds
jo
out
(bad)
xor
sub
dec
pop
in
dec
pop
out
sub
and
sbb
mov
sub
in
outs
mov
or
sub
in
clc
(bad)
sar
sbb
adc
ret
retf
mov
xor
out
add
add
popa
mov
int
jae
imul
xor
adc
add
sub
push
add
data16
push
dec
inc
cmp
dec
cmp
inc
mov
xchg
out
aad
fdiv
add
push
call
je
mov
xor
push
push
jne
shl
je
add
xor
cdq
pop
add
or
(bad)
aaa
push
sub
cwde
scas
ss
pop
js
cmp
fisubr
jle
ret
push
sub
pushf
daa
imul
inc
nop
sbb
je
test
adc
sub
jge
(bad)
xchg
cmp
movs
loope
jmp
fimul
lods
mov
outs
scas
inc
push
mov
inc
fisub
scas
sahf
std
ins
mov
ret
pop
ss
fst
or
inc
(bad)
ins
xchg
jmp
std
sub
xor
fdivr
mov
pop
(bad)
push
gs
lea
pop
test
dec
push
sar
mov
adc
add
lock
pushf
inc
sbb
cdq
jbe
call
sahf
mov
inc
in
jnp
mov
fwait
or
sub
(bad)
cmp
test
std
pop
cmc
jl
out
icebp
push
inc
div
sub
mov
int
retf
mov
scas
adc
or
(bad)
adc
fwait
scas
pop
jle
cmc
inc
call
adc
aas
leave
fs
retf
jno
into
std
aad
add
xchg
push
add
dec
and
ins
call
sub
pushf
(bad)
out
sub
lock
inc
ins
into
fwait
or
stc
or
test
add
pop
push
xor
pop
sar
leave
and
xchg
xchg
pop
push
mov
push
xchg
(bad)
cwde
mov
fnstcw
fld
outs
xchg
push
mov
mov
stos
sbb
mov
jecxz
push
jmp
in
outs
push
inc
lds
xchg
(bad)
mov
sti
lds
neg
inc
push
fcmovbe
pop
frndint
pop
outs
cmp
xlat
sbb
add
push
pop
mov
(bad)
cmps
pop
mov
stos
sub
scas
adc
jnp
outs
jns
mov
cld
xchg
in
jl
mov
rol
fld
shl
lods
add
cmp
inc
inc
add
sar
movs
jb
mov
inc
and
shl
mov
test
mov
mov
sbb
pop
retf
das
repnz
add
(bad)
(bad)
repz
adc
mov
ja
std
repnz
cmovle
ins
jo
(bad)
xor
das
fdivr
psraw
fwait
sub
push
push
aas
cmp
inc
movs
ret
in
cmp
cwde
(bad)
test
call
neg
mov
sbb
pop
(bad)
lock
stc
cmp
cld
fild
enter
js
inc
mov
adc
hlt
dec
mov
push
ins
es
out
enter
cwde
retf
je
lods
xlat
xchg
mov
fisub
stc
into
ins
je
fcomp
jnp
dec
outs
push
mov
rol
mov
xor
inc
pop
stc
cmp
scas
jmp
push
add
mov
test
xor
cmp
or
sub
inc
push
adc
cmps
ins
sub
call
or
push
add
lods
inc
adc
jbe
int
aas
inc
push
dec
inc
push
xchg
and
(bad)
adc
test
lods
nop
mov
pop
ss
adc
pop
add
jmp
mov
(bad)
push
rcr
xor
mov
aad
dec
inc
lea
aas
das
outs
loop
jmp
cmps
or
or
jl
popf
and
stc
aas
pop
jmp
mov
fild
jno
jle
das
push
xor
inc
jns
clc
fist
loopne
icebp
js
iret
mov
(bad)
push
sub
loop
rcl
sbb
mov
xor
popf
and
mov
dec
(bad)
fst
inc
sti
shr
sub
bound
xchg
cli
pop
loopne
or
pop
int
sub
scas
es
imul
lods
or
popa
mov
pop
pop
shl
mov
in
jge
mov
jne
adc
xor
dec
mov
lock
and
push
pusha
mov
inc
or
mov
rol
mov
push
and
in
addr16
outs
gs
sbb
mov
std
xchg
adc
jne
mov
inc
and
pop
xor
inc
pop
mov
test
add
leave
mov
xchg
aad
or
push
jnp
dec
mov
xchg
dec
mov
and
lods
xor
cmp
cmp
movs
sti
fst
mov
xchg
add
das
mov
sahf
leave
pushf
push
fsubr
dec
pop
popa
call
push
and
xchg
adc
fidiv
loopne
xchg
adc
inc
xchg
sub
fnstenv
push
jle
push
scas
dec
iret
adc
bound
xlat
sub
dec
dec
xchg
sbb
loope
mov
movs
sub
cdq
hlt
and
push
xchg
push
sbb
push
ficom
repnz
call
inc
dec
inc
push
cwde
test
dec
xchg
shld
aaa
sbb
push
into
xor
mov
fcom
push
pushf
movs
mov
popa
imul
stc
push
and
test
sbb
adc
cwde
inc
sub
in
xor
cmp
xchg
(bad)
out
xlat
sub
and
(bad)
sahf
leave
test
cmp
add
mov
add
or
adc
cwde
dec
mov
popf
scas
ins
push
xor
cmc
mov
hlt
jge
int3
(bad)
icebp
cmp
sbb
jmp
jno
imul
shl
pushf
fdiv
push
in
push
jmp
mov
retf
jbe
dec
mul
mov
aam
enter
dec
lods
stos
mov
imul
aaa
sub
scas
repz
scas
fadd
popf
xor
icebp
sub
mov
stos
fisub
lds
jle
or
add
repnz
mov
pop
jns
jmp
mov
dec
or
sbb
test
add
loope
neg
fadd
mov
ret
push
cmp
(bad)
cmps
mov
outs
int
scas
push
sub
inc
loopne
mov
es
shr
test
and
push
stos
jbe
push
push
test
mov
into
inc
stos
out
out
(bad)
sub
scas
ret
es
test
and
outs
pop
mov
in
or
or
std
cmp
jg
add
movs
cdq
mov
adc
outs
adc
adc
mov
(bad)
xorps
mov
xlat
sub
pop
imul
jae
popa
inc
cmp
pop
rcr
push
aas
movs
xchg
fcom
pop
mov
mov
and
jl
jns
into
stos
pop
jge
movs
movs
and
jns
lods
sahf
add
mov
lahf
lea
sbb
gs
test
mov
popa
mov
dec
and
ror
pop
test
les
bound
pop
inc
jg
aad
cvtps2pd
ror
lods
lea
icebp
push
dec
dec
cdq
inc
int
je
push
sub
push
pmaxub
push
scas
bound
inc
dec
adc
mov
sbb
adc
bound
sahf
not
add
loope
leave
pop
call
adc
mov
push
pushf
jne
stos
loope
jmp
int
dec
(bad)
retf
out
test
cdq
sbb
cmp
push
mov
mov
mov
les
push
or
cwde
mov
(bad)
dec
not
xor
xchg
sbb
push
adc
dec
add
mov
lahf
or
pop
xor
cmp
pop
test
loop
dec
mov
jb
push
(bad)
mov
rcr
adc
shl
push
push
push
pop
call
dec
mov
shl
or
pop
enter
sub
icebp
jno
outs
inc
mov
mov
inc
adc
enter
xor
dec
dec
dec
mov
scas
dec
fs
enter
xchg
pop
ja
and
call
push
push
daa
mov
sub
mov
retf
xlat
and
dec
cmp
push
daa
cmp
gs
adc
push
test
les
imul
xchg
js
fisubr
jg
fcom
mov
mov
cmp
ins
dec
shl
into
sar
sbb
mov
sub
mov
pop
xor
mov
mov
mov
imul
xor
push
rol
xchg
gs
mov
xchg
lahf
jno
mov
pop
daa
test
mov
icebp
(bad)
jns
loopne
stos
iret
nop
xchg
mov
cmps
lock
dec
je
sti
sbb
push
push
push
sub
arpl
xchg
in
es
push
retf
xchg
dec
(bad)
test
shl
and
adc
add
push
xchg
hlt
fstp
and
xor
aas
mov
in
push
cmps
add
sbb
test
fidivr
hlt
or
aad
sbb
int3
adc
cmp
ds
pusha
push
js
add
ss
dec
dec
fcmovnb
mov
mov
bound
sbb
pop
xchg
lods
mov
push
fdivr
int
inc
loopne
aad
bnd
scas
movs
pop
out
mov
arpl
out
ret
pop
(bad)
mov
mov
or
adc
sub
bound
sbb
repnz
dec
fwait
loopne
inc
sub
cmp
xchg
mov
iret
push
dec
inc
xchg
iret
(bad)
dec
(bad)
jne
xchg
int
pushf
addr16
dec
icebp
xchg
sub
sub
jmp
fisub
fistp
in
mov
shr
scas
inc
adc
int
ins
test
lahf
mov
movs
add
sbb
dec
jecxz
cmp
xor
sbb
xchg
or
dec
adc
retf
lods
pop
cs
and
adc
int
inc
inc
loope
xchg
cmp
mov
hlt
fist
lds
xchg
pop
(bad)
fdiv
jo
add
leave
cmps
dec
jne
inc
dec
cdq
out
stos
mov
adc
cmp
dec
cmp
mov
mov
es
push
mov
pop
mov
cmp
mov
test
(bad)
mov
imul
out
pop
inc
std
mov
in
xchg
outs
scas
cli
cmc
inc
test
mov
or
call
enter
lods
inc
xor
cmps
ret
(bad)
clc
stos
and
aad
lea
test
push
adc
mov
test
rol
add
xor
xchg
stos
jno
mov
xor
cmp
dec
mov
sbb
push
inc
arpl
fst
mov
(bad)
int3
add
xchg
mov
or
xchg
xor
aaa
jmp
into
xor
dec
or
sar
jne
push
mov
and
adc
fdiv
xor
daa
jge
push
inc
sti
iret
imul
mov
scas
idiv
xchg
rol
popf
jns
and
mov
sbb
test
call
jnp
das
test
xor
arpl
xchg
xchg
inc
jbe
lods
test
aam
cmp
in
(bad)
es
ficomp
push
push
fcomp
sub
dec
test
arpl
data16
cdq
push
jb
or
add
xchg
das
(bad)
xor
xor
push
(bad)
mov
jle
in
cs
xchg
cdq
push
adc
outs
int3
test
pop
cmp
icebp
mov
xchg
rcr
into
dec
pop
xchg
shl
pop
pop
cs
sub
pop
add
push
(bad)
call
sbb
jne
add
dec
leave
dec
es
xchg
(bad)
ret
pusha
mov
jmp
mov
dec
push
sub
es
cmps
inc
es
push
sub
mov
outs
and
add
mov
cmp
out
ficomp
out
ins
in
stc
scas
leave
fyl2x
out
pop
inc
dec
sub
in
dec
stos
jns
cmp
mov
jno
neg
cs
pop
imul
(bad)
out
jbe
cmp
inc
jmp
sahf
inc
dec
dec
adc
pop
jbe
xchg
xchg
dec
out
idiv
mov
lods
loopne
add
into
xchg
pop
lods
lea
dec
leave
icebp
pop
pop
lea
ret
js
ret
push
dec
leave
or
out
xchg
push
outs
test
xchg
push
push
push
hlt
pop
daa
push
(bad)
adc
pop
or
sub
jne
mov
je
lea
mov
(bad)
inc
pop
shl
repz
push
dec
jmp
sub
pop
xchg
or
sbb
jg
aaa
mov
cmc
sub
lea
dec
mov
cmp
in
sub
mov
dec
sbb
jg
call
mov
inc
aam
sbb
scas
xor
setnp
jecxz
mov
dec
sti
push
pop
fistp
retf
cwde
ret
pop
call
test
ret
cmps
push
mov
pop
mov
mov
sti
ror
stc
in
test
jnp
ret
aam
loope
gs
or
ret
rcr
rcr
imul
xchg
loope
imul
adc
mov
popa
loopne
hlt
sbb
xchg
into
aaa
xor
pop
jno
nop
mov
mov
imul
push
lock
rcr
jle
dec
sub
aas
repz
pop
fistp
jle
fsubr
pop
xchg
lds
push
sar
ret
mov
sbb
iret
jbe
jl
test
call
or
sbb
mov
push
les
ins
lea
call
push
mov
or
gs
fadd
loop
or
dec
ins
stos
add
mov
cmp
jbe
loope
xor
(bad)
icebp
sbb
pop
adc
jecxz
fisttp
xor
fst
push
jle
bound
pop
jae
xchg
ror
jp
and
push
out
inc
push
xor
mov
dec
leave
mov
(bad)
mov
mov
adc
jnp
add
jae
icebp
mov
xchg
es
jp
idiv
jmp
mov
pop
pusha
xchg
test
cmp
mov
arpl
pop
mov
xchg
sahf
cmp
(bad)
xchg
push
clc
sub
fwait
lods
mov
test
xor
call
loop
icebp
mov
stos
mov
repnz
imul
jne
jmp
dec
movs
rcl
adc
mov
add
lods
frstor
jmp
mov
jp
mov
les
dec
(bad)
(bad)
fist
cmp
cmp
int
out
loopne
cwde
inc
xor
mov
into
sbb
dec
shl
cmc
cmp
shl
cmp
ins
dec
fs
inc
inc
xchg
shl
or
push
fwait
dec
int3
jle
mov
xchg
mov
add
neg
pop
sbb
cs
push
ja
cwde
sub
push
cmp
sbb
xchg
loop
repnz
cmc
ins
mov
sbb
call
cmc
sub
push
or
(bad)
and
add
bound
xor
sahf
mov
mov
ja
rcl
and
adc
aam
jl
pop
jmp
pop
ror
je
mov
push
cs
dec
test
mov
pop
mov
and
dec
data16
ret
ficomp
xchg
retf
adc
pop
mov
ins
pop
repnz
add
mov
popa
jg
out
retf
lea
rcr
inc
dec
hlt
mov
pop
mov
cmp
xor
pop
out
test
test
fldcw
cld
sub
add
retf
add
xchg
mov
pop
xchg
cmc
xchg
and
pop
jne
or
movs
jnp
ss
dec
pop
cwde
pushf
outs
push
cwde
fwait
psubd
push
ins
call
pop
setg
lods
imul
or
and
stos
sbb
push
inc
mov
sub
push
cmp
jmp
pop
sbb
mov
cmp
in
cdq
shl
leave
jp
fcom
shl
aam
push
shl
push
rcr
pop
gs
cmp
xchg
cmps
movs
mov
fistp
and
call
outs
xor
pop
xchg
sub
sbb
push
push
add
xor
daa
ja
sti
inc
sub
sbb
cmp
fldln2
mov
jl
dec
inc
nop
fst
cmp
adc
js
xchg
jmp
shl
xlat
adc
arpl
xor
in
je
adc
xor
add
mov
fcmovne
shl
sar
fstp
jno
in
fwait
cld
ret
in
aam
add
xchg
cmp
sub
inc
adc
loopne
cmp
loop
sahf
cmp
popa
xchg
lods
xor
cmp
pushf
push
sbb
mov
sbb
xchg
fadd
and
cmp
dec
sub
lock
sub
jbe
test
enter
adc
xor
pop
into
dec
aaa
or
bound
mov
(bad)
js
pop
dec
ss
xor
mov
hlt
je
push
scas
mov
btr
mov
add
or
sub
pop
adc
aaa
dec
jge
and
jmp
test
rcr
es
dec
out
cwde
test
aad
xor
in
aas
mov
xor
and
sahf
mov
fldenv
or
pop
xor
rol
cli
sub
xchg
arpl
pop
fcomp
test
cmp
or
jmp
iret
cdq
push
ret
test
mov
inc
and
lock
push
inc
sub
adc
jmp
add
mov
mov
fisubr
sbb
xchg
or
jo
pop
pop
out
and
out
push
mov
push
jmp
xchg
ret
lock
pop
rol
mov
and
pusha
jg
mov
dec
and
cmc
and
test
ins
imul
shl
test
pop
sub
cli
mul
stc
ja
fs
outs
xchg
dec
(bad)
xor
js
push
inc
pop
scas
mov
(bad)
or
and
gs
fdivr
ret
dec
aas
lea
bound
add
loop
pop
mov
outs
dec
cmp
icebp
(bad)
out
xchg
loope
or
or
inc
sar
(bad)
mov
or
xor
mov
out
jecxz
xor
sbb
ds
mov
jmp
call
sub
mov
mov
mov
add
inc
dec
outs
jle
push
adc
pop
xor
cmp
out
stos
scas
popa
sbb
data16
fs
cdq
cs
popa
cs
sub
mov
cs
stos
aad
xlat
fldcw
js
aad
mov
push
sub
push
jmp
repnz
inc
out
leave
lods
jne
mov
rcl
cmp
add
adc
iret
call
scas
and
jnp
jecxz
push
cdq
xchg
lds
cmp
aad
sahf
cmp
in
jmp
mov
pop
cmp
sbb
loope
es
retf
dec
out
and
mov
push
adc
xor
push
hlt
scas
mov
adc
jbe
inc
sub
cmp
test
or
mov
mul
iret
sbb
retf
sbb
inc
jmp
test
repnz
or
jne
or
mov
pop
dec
mov
(bad)
ins
inc
loopne
or
das
loop
lahf
dec
sbb
fistp
or
push
pop
pop
arpl
(bad)
mov
sub
lods
std
pop
pop
dec
xchg
ret
mov
inc
lods
in
fndisi(8087
retf
cdq
(bad)
cmps
cwde
inc
sbb
mov
sahf
cwde
je
aam
sahf
test
push
xor
not
cmps
mov
jle
out
icebp
xor
dec
cmps
fstp
adc
leave
retf
hlt
test
das
push
sub
lock
shl
in
xchg
jbe
mov
and
or
xchg
movs
movs
in
cld
xchg
int3
imul
mov
push
sub
aas
mov
imul
or
out
in
fiadd
jg
test
mov
enter
scas
xchg
out
outs
push
sbb
repz
aad
inc
enter
sti
(bad)
cld
dec
fcom
xchg
loop
dec
adc
out
arpl
mov
mov
and
push
push
jno
ror
loope
loop
rcl
cmp
add
test
jle
int
in
cwde
jno
shl
jmp
ja
pop
push
jnp
(bad)
mov
push
cmp
adc
inc
repz
out
dec
cmp
shr
jmp
int3
in
sub
jb
dec
test
inc
mov
test
xor
inc
in
js
and
sub
fnstcw
pop
aaa
ds
add
mov
into
retf
push
fwait
jmp
mov
add
stos
out
daa
jle
mov
xor
stos
mov
add
inc
imul
je
jnp
xchg
mov
sub
and
sbb
arpl
dec
pop
jg
inc
cdq
popf
ss
repnz
cmps
ret
cli
(bad)
dec
pop
mov
pop
popa
data16
test
add
xor
lock
sub
je
(bad)
int3
pop
or
fldcw
jo
(bad)
call
pop
inc
mov
pop
add
cmp
inc
push
sahf
ins
mov
aam
xor
and
xchg
jb
or
inc
sahf
ss
clc
xchg
jno
cmp
test
stos
pop
pusha
fisttp
enter
int
cli
xor
les
das
cmps
sbb
pop
outs
cmps
push
inc
adc
inc
adc
ss
sbb
ja
adc
cmp
and
dec
cmp
mov
call
loopne
test
lock
popf
mov
jp
jecxz
(bad)
mov
mov
bound
cmp
repz
fimul
cmp
gs
test
and
mov
dec
dec
pusha
shl
mov
jle
inc
sbb
mov
push
push
fcomp
pop
fisub
sti
imul
adc
dec
push
arpl
addr16
adc
lods
cs
xchg
pop
xchg
sbb
aaa
sub
adc
aam
push
scas
mov
push
mov
push
popf
cmps
mov
and
mov
mov
(bad)
mov
into
rcl
mov
xor
add
mov
out
sti
pop
cmp
outs
stos
sbb
push
dec
jnp
int3
xchg
scas
sbb
hlt
dec
dec
dec
mov
fwait
xor
aad
dec
popf
sbb
pop
hlt
adc
out
mov
mov
pop
jmp
not
jle
loope
fisub
push
loopne
jb
sbb
mov
fwait
xor
cmp
icebp
mov
gs
call
mov
sub
mov
add
(bad)
cmc
jle
fimul
test
inc
pop
mov
movs
test
or
dec
inc
inc
adc
jbe
sbb
xchg
pop
popf
sahf
mov
xor
dec
leave
mov
sar
mov
sbb
adc
movs
imul
js
repnz
cs
leave
repnz
jae
test
outs
add
aad
mov
fst
sti
imul
cmp
sub
pop
retf
sbb
fwait
pop
dec
push
fisub
scas
pop
out
mov
pop
test
into
prefetch
sbb
inc
adc
sub
inc
sub
rcr
dec
scas
sub
jecxz
rcr
mov
icebp
mov
ss
jmp
adc
pop
push
(bad)
shr
icebp
xor
cmp
add
cs
loope
sub
xchg
popa
mov
je
sar
icebp
add
mov
movs
mov
push
xlat
push
cld
cli
pop
dec
push
mov
and
cmp
das
mov
dec
xor
dec
icebp
dec
or
xor
retf
loopne
out
add
pop
das
aam
xor
cld
pop
fs
rol
(bad)
or
sbb
(bad)
call
fs
pop
test
aaa
bound
mov
fisubr
xchg
arpl
out
retf
inc
nop
fwait
out
cld
clc
mov
sbb
cmp
sbb
sbb
or
test
xor
xchg
ret
push
cmc
inc
rol
lds
sbb
ins
xchg
or
iret
push
das
loop
mov
loopne
mov
dec
pop
sbb
xor
push
scas
fcom
or
push
jecxz
push
dec
add
mov
sar
jbe
inc
or
fndisi(8087
cli
cmp
lahf
dec
mov
das
in
cmp
xchg
repz
fld
in
sub
mov
scas
lods
sbb
imul
cs
test
push
pop
mov
in
jge
bound
(bad)
retf
jmp
push
and
rcl
test
mov
jae
fld
popa
lds
repz
sbb
int
out
(bad)
pushf
pop
mov
xchg
sub
cld
fsub
dec
and
div
mov
inc
and
jns
mov
cvtdq2ps
(bad)
into
outs
mov
jbe
xor
adc
jae
cmp
sahf
mov
xchg
shl
push
in
jns
inc
scas
fmul
inc
dec
jmp
inc
mov
clc
std
imul
push
std
(bad)
stos
mov
mov
mov
jmp
sub
xor
arpl
cs
scas
dec
push
mov
inc
rol
push
test
outs
(bad)
out
push
dec
gs
loop
inc
dec
ins
cdq
outs
push
mov
fld
pop
stc
xor
jbe
and
into
repz
rcr
cmps
sub
or
adc
or
popf
test
out
cmp
pop
sub
xchg
cs
adc
ret
in
or
sti
mov
inc
xor
push
pop
repz
loope
(bad)
cmp
imul
(bad)
pop
addr16
pop
or
idiv
cmp
repz
jno
push
int
sbb
push
sbb
fsub
cmp
sub
stos
add
sti
sbb
cmps
pop
popf
ds
ret
pop
push
(bad)
clc
aas
sahf
xchg
(bad)
mov
dec
xchg
inc
imul
sub
out
popf
adc
stos
in
or
add
out
aaa
imul
cmp
pop
hlt
mov
sbb
sub
scas
and
sub
sub
ret
cmc
mov
xchg
test
fistp
or
dec
and
sbb
inc
sub
xlat
dec
call
jae
xchg
jb
loop
ror
adc
or
call
out
aad
sar
push
repnz
sbb
pop
cmp
sub
hlt
sub
sub
sbb
fwait
adc
sub
and
repnz
gs
pop
repz
mov
cdq
add
hlt
sbb
mov
sti
push
data16
inc
push
cmp
jmp
loope
mov
in
jp
mov
test
jo
popf
jae
imul
or
arpl
fist
pop
pop
adc
mov
sysexit
imul
dec
push
dec
pop
mov
add
or
enter
les
mov
sbb
xchg
adc
dec
cmps
pop
js
push
stc
scas
dec
outs
mov
push
sub
cdq
dec
out
cmp
mov
cs
ss
and
jecxz
sub
dec
cmps
pop
stos
popf
jle
mov
lods
inc
call
jl
jns
xchg
cwde
add
hlt
inc
test
jecxz
test
push
je
clc
retf
dec
mov
and
xchg
lahf
dec
jnp
push
scas
cli
call
imul
(bad)
dec
push
je
cmp
jne
adc
outs
push
outs
mov
call
loop
(bad)
gs
jo
out
sub
ror
mov
and
xchg
imul
cmp
mov
xchg
cmp
jne
adc
inc
jecxz
fmul
dec
in
out
fincstp
fnstsw
pop
ss
sub
mov
adc
xchg
mov
fs
and
cmps
sub
cmps
lea
adc
aaa
popa
sti
loopne
(bad)
sbb
movs
dec
clc
(bad)
fnstsw
stc
mov
(bad)
out
lds
dec
push
mov
jae
movs
movs
xchg
stos
retf
pop
mov
sbb
mov
leave
mov
std
std
or
push
inc
fwait
pop
mov
xchg
inc
es
adc
mov
xor
test
sub
repnz
pop
test
js
popf
mov
mov
mov
lahf
out
mov
(bad)
hlt
stos
cmps
adc
ins
ss
jns
xchg
sahf
sub
cli
cmps
int3
mov
fist
add
jge
pop
int
inc
jo
jle
(bad)
sahf
ds
jge
ror
inc
sub
dec
or
xor
push
push
scas
inc
mov
inc
pop
xchg
cs
pop
push
dec
mov
sbb
in
aam
cmp
into
iret
jge
(bad)
daa
pop
cs
cdq
loop
fisttp
mov
inc
sbb
sbb
loop
outs
sbb
nop
fdiv
push
add
jns
in
adc
ja
out
xor
sbb
add
repz
(bad)
mov
dec
add
cmp
clc
pop
(bad)
in
repz
movs
aam
dec
ret
adc
cmps
iret
cmc
or
mov
sbb
rol
or
addr16
int
ficomp
stos
xchg
dec
leave
daa
test
push
pop
push
xchg
push
xlat
repz
mov
mov
push
imul
aam
sub
leave
cmp
(bad)
pusha
sub
sar
mov
jp
mov
pop
mov
pop
pusha
sahf
jns
retf
push
dec
int
pop
fnstsw
inc
imul
js
mov
inc
bound
andnps
cmp
sub
popa
sub
enter
loop
retf
mov
sub
adc
test
and
inc
mov
ret
fisttp
add
sahf
(bad)
cmc
mov
scas
rcr
outs
enter
mov
leave
(bad)
in
dec
dec
lahf
jb
in
or
xchg
cdq
in
clc
jns
mov
adc
outs
cmps
sbb
add
add
jnp
dec
add
adc
int
or
in
popa
push
add
(bad)
jle
xchg
imul
mov
sub
je
scas
mov
and
xchg
mov
cmc
push
pop
mov
or
jle
cmovl
mov
add
ins
push
dec
mov
or
add
fs
jecxz
dec
mov
stc
or
aam
mov
mov
cmp
outs
bound
jb
sbb
sbb
dec
aas
jge
hlt
ds
dec
jbe
repz
fs
gs
(bad)
int
test
popa
out
fs
mov
mov
cdq
xor
dec
or
fld
adc
(bad)
mov
icebp
jns
pop
pop
loope
sub
movs
into
cli
push
cmps
push
cmp
adc
js
inc
jbe
sub
sub
jl
xchg
adc
dec
sbb
push
mov
add
adc
arpl
adc
push
cmp
aaa
(bad)
or
mov
sub
xchg
imul
cmp
in
test
(bad)
jl
lahf
imul
pushf
popa
shl
cld
adc
in
cli
call
clc
fisttp
enter
cmp
pusha
cmp
(bad)
(bad)
in
outs
mov
in
mov
(bad)
mov
aad
sub
gs
movs
xor
sub
fild
sub
adc
les
jecxz
jecxz
push
int3
jmp
mov
mov
aam
jmp
mov
pop
cmps
cmp
or
and
mov
addr16
xchg
xchg
retf
fimul
pop
cmp
pop
mov
xchg
mov
daa
dec
mov
rcr
enter
sbb
xor
(bad)
push
fcmovu
je
scas
and
sahf
imul
mov
mov
dec
nop
inc
push
inc
imul
fs
add
in
adc
sub
scas
frstor
or
int3
inc
jb
data16
jne
jb
mov
mov
add
jg
stos
ss
cmp
sbb
in
cmp
scas
fcomip
(bad)
and
mov
inc
push
stos
ror
or
mov
scas
sbb
std
add
(bad)
inc
jmp
mov
inc
dec
xchg
sar
test
iret
es
cld
fisub
aad
imul
cs
cmp
retf
clc
mov
addr16
stc
mov
js
lahf
sub
push
popf
loop
jnp
jg
je
pop
mov
pop
inc
and
in
mov
push
mov
push
jo
fwait
dec
jns
sub
sbb
fwait
add
jbe
aas
retf
movs
sub
in
inc
hlt
repnz
fs
push
mov
sub
add
xchg
or
mov
and
mov
push
inc
aas
add
out
cmp
jo
jne
in
sbb
adc
xchg
push
(bad)
and
aaa
inc
out
imul
(bad)
push
xor
mov
outs
jp
call
add
sub
sti
cmps
adc
dec
mov
test
jl
aad
and
icebp
adc
mov
sbb
sbb
in
inc
mov
les
and
adc
neg
fild
(bad)
xor
fucomi
jp
jp
mov
bound
pop
das
push
jne
push
cwde
int
sub
dec
out
jl
adc
adc
sbb
nop
push
mov
xor
jns
mov
cmp
sub
and
mov
mov
mov
mov
cmps
sbb
(bad)
out
je
retf
mov
scas
loope
sbb
mov
cs
(bad)
icebp
into
test
pusha
jmp
pop
cmp
and
lahf
or
je
push
repnz
xor
dec
test
mov
stos
(bad)
movs
fist
fstp
inc
or
neg
or
ins
push
cwde
stc
adc
xchg
push
out
xlat
repnz
std
mov
mov
xor
retf
int
aas
js
pop
rcr
dec
stc
mul
adc
sub
ins
(bad)
hlt
ins
(bad)
push
ja
mov
out
xchg
mov
lea
call
push
jno
dec
movs
cmps
loop
or
(bad)
xchg
js
push
cmp
neg
cmp
dec
icebp
cs
dec
or
cdq
mov
jo
jge
das
data16
setbe
addr16
lods
cli
sahf
inc
sub
mov
repnz
adc
pop
and
mov
mov
adc
mov
movs
ret
ja
cmp
mul
cmc
xchg
mov
xor
fst
adc
cwde
mov
pop
sub
pop
ins
movs
clc
mov
inc
inc
mov
jne
adc
sub
pop
inc
(bad)
out
mov
out
call
sbb
lds
mov
mov
adc
outs
fldpi
outs
dec
in
cmp
imul
ins
xchg
jo
rol
daa
pusha
mov
clc
or
mov
jnp
ss
cmps
sub
(bad)
sub
push
mov
push
nop
scas
adc
mov
push
les
ja
cmp
xchg
sar
outs
leave
add
jle
sbb
in
(bad)
in
and
hlt
loop
xchg
ds
mov
pop
rcl
sbb
mov
pusha
sub
inc
fild
sbb
inc
dec
hlt
loop
loop
aam
adc
mov
mov
int3
or
dec
and
call
xchg
push
sub
loope
outs
adc
and
add
in
shl
sub
adc
test
pop
mov
test
mov
dec
leave
xchg
sahf
pop
push
sub
(bad)
call
push
mov
mov
rcl
add
add
inc
and
repz
test
int3
dec
jg
pop
xchg
out
sbb
mov
adc
jge
adc
add
add
jns
repnz
pop
pusha
stos
loop
jnp
sbb
sub
fild
mov
pop
push
inc
out
std
dec
loop
lods
cwde
push
jno
push
fiadd
mov
iret
pop
pop
loope
pop
mov
adc
and
loope
jo
mov
add
inc
in
aam
add
pop
aad
cdq
inc
fidivr
adc
jle
ficomp
mov
aas
nop
or
enter
jmp
ss
pop
aam
(bad)
or
xor
mov
xor
enter
pop
mov
adc
adc
sbb
das
adc
xchg
cdq
xchg
mov
(bad)
push
addr16
mov
repnz
xchg
dec
push
dec
mov
adc
push
xor
fmul
out
cdq
jecxz
push
cmp
dec
cmp
mov
gs
retf
shr
sti
jno
fnsave
out
adc
daa
dec
(bad)
or
repnz
mov
add
xor
lods
mov
cdq
push
cwde
(bad)
call
das
xchg
inc
neg
xchg
jmp
lea
mov
pop
imul
xor
jp
jmp
cmp
push
popa
push
fidivr
mov
inc
push
scas
(bad)
in
mov
hlt
addr16
mov
fdivr
call
ins
in
adc
addr16
aad
mov
imul
jp
sahf
enter
imul
rol
sbb
mov
fcmovnu
jmp
mov
jnp
and
ret
pusha
addr16
sbb
lahf
nop
ret
inc
dec
pop
ja
or
out
add
enter
xchg
pushf
xor
or
dec
jmp
int3
mov
test
stos
xchg
mov
push
into
adc
jle
clc
movs
cmp
mov
dec
es
add
imul
cwde
in
sbb
add
enter
fcomp
mov
adc
fbstp
xor
or
fnstsw
int
cdq
popf
cmp
test
mov
lock
xor
mov
xchg
ret
mov
sub
sub
arpl
inc
add
in
xchg
sbb
repnz
jecxz
or
mov
mov
xor
leave
push
push
popf
jne
xchg
mov
out
or
mov
jle
cmp
outs
pop
xor
or
jno
mov
or
mov
(bad)
sub
pop
(bad)
movs
xor
cdq
jmp
and
jg
jno
cmps
cmp
dec
test
dec
add
mov
movq
adc
jmp
js
mov
shr
fdiv
in
ficom
jae
push
cmp
xchg
push
aam
test
(bad)
dec
icebp
mov
cmp
fstp
jbe
loop
sub
mov
rcl
sahf
lock
mov
aad
adc
call
and
(bad)
pop
mov
dec
mov
or
loope
ins
xchg
movs
mov
fisub
outs
mov
dec
fistp
mov
mov
test
pop
nop
mov
(bad)
call
or
sub
jb
push
lds
ret
push
lds
mov
xchg
fisubr
into
push
in
clc
ror
(bad)
adc
dec
dec
out
lahf
hlt
retf
icebp
out
cmp
popf
mov
(bad)
mov
or
push
stos
pushf
mov
test
(bad)
movs
mov
push
xor
push
int
xchg
js
jmp
test
in
ret
js
cmp
std
or
ret
jb
mov
aaa
cmp
int
aad
and
mov
ret
repnz
jmp
sub
out
enter
pop
test
jmp
adc
jg
jecxz
scas
lods
cmps
jbe
and
mov
pop
jmp
mov
dec
nop
out
popf
dec
scas
mov
movs
shl
loop
mov
lea
and
pop
lock
mov
fcom
call
dec
jno
inc
pop
fsubp
push
add
imul
push
in
imul
std
test
cmc
inc
ret
sub
daa
add
jmp
aas
or
adc
sbb
jge
dec
mov
fcomp
mov
and
or
enter
es
cld
or
cli
xchg
fdiv
imul
aad
adc
and
pop
fisttp
add
std
cmp
clc
out
pop
and
and
pop
test
icebp
mov
gs
inc
lahf
ins
ins
adc
pop
jp
inc
(bad)
cmp
out
cmp
sub
loope
imul
push
stos
pop
push
cdq
(bad)
js
adc
arpl
mov
cmp
mov
sub
mov
mov
popa
mov
movs
mov
jmp
icebp
(bad)
cmp
fild
dec
pop
cmps
jo
sbb
sub
call
call
mov
mov
sub
inc
retf
jo
call
add
rcl
jp
mov
stc
mov
mov
add
jge
in
jno
pop
or
add
and
ja
pop
sbb
push
mov
int
cld
mov
pop
fst
loop
div
add
pushf
inc
xlat
imul
xlat
int3
rcl
push
xchg
imul
aam
and
adc
retf
mov
sub
lahf
cli
std
in
imul
pop
pop
rcl
shr
mov
clc
sbb
dec
pop
ret
aam
jge
ins
jne
outs
push
fld
mov
jne
arpl
add
mov
mov
ins
imul
mov
push
(bad)
xchg
sub
sbb
mov
test
imul
shr
ror
cli
mov
lods
jne
leave
retf
cmps
xor
fdivp
cld
cwde
das
cmps
xchg
push
pusha
not
cs
scas
sahf
sub
int
loopne
lock
jmp
jl
dec
adc
pextrw
cmps
xchg
push
or
iret
push
pop
into
and
push
cmp
xor
retf
cmps
push
mov
inc
mov
dec
or
sbb
out
sti
aas
inc
shl
sub
adc
repz
fs
ss
inc
(bad)
clc
popf
repz
call
push
into
push
jg
(bad)
sub
inc
jg
inc
cdq
push
push
sahf
jae
add
dec
xor
aad
mov
xor
xchg
cdq
jbe
clc
leave
xchg
or
sub
gs
shl
stos
dec
int3
cld
iret
xor
inc
push
mov
gs
xchg
add
pop
fld
ror
pop
retf
pop
cmp
test
pop
xor
and
add
outs
xor
out
int3
lods
mov
in
push
mov
pop
(bad)
jmp
cdq
lods
dec
xchg
sub
xchg
pop
fs
push
scas
outs
mov
xor
mov
cdq
xchg
inc
sub
mov
sbb
mov
and
inc
in
out
ins
mov
sahf
dec
jmp
lock
das
jg
or
mov
pop
cld
xchg
pop
sahf
pushf
sub
out
pop
push
mov
dec
aad
sub
xor
jne
dec
pop
jns
xchg
add
out
out
pushf
dec
cdq
adc
mov
jl
ror
rol
ds
sub
dec
aaa
pop
adc
adc
imul
clc
scas
mov
mov
cmp
in
mov
sbb
sub
dec
cdq
sbb
add
iret
adc
into
cmp
jb
add
sub
shl
mov
outs
add
jecxz
sar
add
xchg
icebp
inc
jle
sub
sbb
xor
push
cmc
retf
outs
mov
daa
mov
iret
jp
jno
int
jmp
fdiv
adc
or
jo
push
in
jb
pop
sub
push
mov
pushf
pop
pusha
push
(bad)
(bad)
je
ja
xor
repz
mov
xchg
fdivr
movs
and
sbb
sbb
sub
out
inc
loopne
cmp
int
or
in
sub
int3
bound
cmp
test
out
pop
fwait
cmp
adc
sbb
test
mov
sbb
sub
aas
jmp
add
sbb
je
pop
cmp
cld
pop
jg
pop
stc
pusha
inc
cli
cmps
fwait
out
cmps
sub
ins
sbb
inc
and
sbb
scas
cwde
fadd
sahf
rcl
sub
xchg
or
mov
or
adc
sahf
ins
cmc
fisttp
xor
fldl2t
and
jmp
(bad)
pop
cmp
pop
push
pop
inc
ret
add
xchg
mov
lahf
test
leave
or
mov
scas
sub
test
repnz
nop
jmp
je
fwait
inc
add
in
mov
std
or
ss
js
mov
sub
nop
ss
lea
inc
cmp
adc
pop
and
add
or
lods
mov
ds
test
pop
pop
push
sbb
jg
jecxz
and
sbb
xor
dec
and
aad
inc
outs
cs
(bad)
mov
pusha
add
xor
and
xor
adc
jmp
cdq
or
cmp
dec
mov
jmp
scas
jnp
ret
test
jle
sbb
daa
call
xchg
push
mov
(bad)
sub
add
test
xchg
fs
push
sub
repz
add
and
scas
loope
retf
mov
inc
dec
shr
ret
fist
cmp
dec
dec
popf
cdq
cmc
jb
jne
jmp
cwde
add
idiv
lods
jl
ja
push
leave
clc
ret
xor
in
call
leave
push
cmp
cmps
or
enter
ins
cmp
popf
stc
mov
xchg
fadd
fisttp
pusha
aas
sbb
dec
inc
adc
mov
call
cmps
xchg
xchg
adc
int
in
dec
xchg
stos
push
mov
dec
sahf
add
or
pop
push
ins
adc
adc
cmp
mov
out
and
arpl
sti
clc
ins
cmc
sbb
cmp
fld
or
in
out
dec
mov
mov
stos
lea
scas
ret
repnz
stos
adc
out
xor
mov
push
ja
loop
add
or
xor
(bad)
test
add
push
and
push
lahf
mov
std
mov
imul
push
pop
call
icebp
cmp
inc
sar
sbb
dec
and
xor
mov
jle
fs
ss
jne
arpl
inc
jmp
push
inc
sub
addr16
pop
ret
fs
pop
pop
ror
xor
(bad)
(bad)
rcr
jecxz
popa
mov
(bad)
neg
ins
and
xor
xchg
push
jecxz
ficomp
pop
fild
shl
xchg
scas
cwde
cmc
cmp
popf
test
stc
adc
cdq
adc
push
mov
mov
xor
loope
fstp
inc
fdiv
sub
mov
cmps
sti
push
(bad)
lods
xchg
push
jmp
movs
pop
xchg
jno
adc
dec
shl
sbb
jecxz
dec
push
mov
arpl
mov
sub
fadd
pushf
inc
out
repnz
and
xlat
mov
push
ficomp
push
mov
pop
sub
jmp
xor
repz
dec
(bad)
loope
lds
out
xchg
imul
(bad)
ins
into
(bad)
jo
sub
mov
jg
adc
fxch
aaa
retf
mov
adc
mov
ret
and
sbb
add
leave
xchg
rcr
movs
add
ja
mov
fs
and
push
pop
mov
sbb
adc
jmp
xchg
dec
cmp
or
mov
jecxz
jg
call
adc
adc
jo
mov
in
jmp
pusha
imul
imul
cmp
outs
cmp
inc
stc
mov
dec
cmp
scas
dec
adc
dec
xor
cdq
adc
push
jo
fld
ret
fs
data16
lahf
enter
ror
nop
jmp
xor
adc
push
fld
push
lock
repnz
xchg
out
xor
aam
repz
les
jno
nop
das
les
add
mov
fcom
out
sub
arpl
dec
mov
mov
add
pop
jns
sbb
aas
jne
outs
push
pop
inc
or
sbb
or
pop
cmp
xor
imul
loope
xchg
jnp
pop
in
inc
and
scas
adc
sub
and
aaa
cmps
pop
nop
mov
scas
jg
sahf
sub
mov
xchg
cmp
pop
int3
stos
lea
data16
or
inc
or
lahf
call
inc
cwde
outs
pop
fmul
dec
popa
xchg
das
movs
in
test
fs
in
jle
push
or
jmp
inc
shl
add
popa
movs
push
pushf
inc
bound
popa
stc
lock
adc
clc
aaa
popa
int
imul
xchg
pop
aad
sub
push
adc
cmp
pop
stc
or
cmp
nop
pop
cmp
cmp
imul
dec
lahf
aam
or
out
mov
enter
cmps
sub
xchg
dec
sub
hlt
int3
or
inc
daa
sbb
sbb
fs
aaa
test
mov
add
hlt
mov
cmp
nop
call
cwde
pushf
xchg
xor
repz
cmps
ins
fstp
cli
mov
movs
xor
xchg
add
and
jo
jo
pop
or
push
cli
xchg
hlt
mov
mov
lock
fiadd
mov
aas
out
test
cmps
popf
mov
jmp
dec
(bad)
fnsave
xchg
mov
sbb
(bad)
into
pop
(bad)
std
mov
popf
mov
pop
nop
add
outs
push
jmp
pushw
push
cmps
jmp
push
sbb
fmul
loop
fwait
scas
ja
mov
mov
jle
fcomp
cmp
aad
inc
scas
jp
pop
loop
int
jb
mov
repz
cdq
inc
push
out
lea
imul
mov
xor
call
retf
or
and
pop
movs
mov
or
aaa
mov
xchg
sti
cwde
push
xor
push
cld
gs
xchg
scas
and
push
mov
ins
adc
dec
sbb
in
rol
fisttp
pusha
adc
mov
adc
xchg
div
dec
mov
inc
mov
cmp
ds
jg
pop
xchg
fs
jb
data16
dec
cmp
dec
inc
xor
push
popa
arpl
psubsb
(bad)
and
std
inc
xor
stc
jbe
cwde
dec
jmp
dec
mov
mov
cmc
cdq
pop
pop
adc
aas
nop
jmp
in
bound
inc
push
outs
out
fidivr
dec
loopne
sub
jge
cdq
dec
ins
mov
inc
out
xor
cld
ficom
sbb
cmp
(bad)
loope
sbb
imul
add
cmp
push
jg
push
mov
lock
sub
cld
pop
cld
and
repz
pop
dec
jne
dec
cmp
je
adc
jp
fwait
mov
cmps
(bad)
or
mov
adc
xor
aad
fadd
adc
out
push
lods
mov
ds
sbb
push
pop
lods
dec
mov
sub
(bad)
pop
arpl
ficom
test
cmp
in
unpcklps
adc
pusha
add
mov
fdiv
inc
pop
mov
push
jb
scas
push
lock
xor
sbb
nop
pop
stos
sub
xchg
loop
cmp
sub
jbe
cmp
adc
icebp
fisttp
cwde
inc
adc
xchg
cli
add
out
jo
clc
and
push
mov
mov
xchg
scas
jbe
jge
xchg
in
data16
mov
pusha
xlat
fbld
mov
aas
retf
sbb
xor
sbb
mov
mov
clc
inc
lds
repz
xor
jge
xor
mov
fnsave
mov
out
test
inc
ja
fldenv
mov
shl
or
fld
out
lock
pop
iret
mov
ds
and
pop
jle
push
sub
and
loop
fidiv
mov
push
mov
jns
inc
jg
sbb
push
jnp
and
mov
enter
adc
mov
mov
jmp
add
js
retf
and
(bad)
popa
aas
jns
cmp
mov
dec
ret
add
and
add
movlhps
iret
outs
jle
mov
and
lods
jmp
cmp
jae
mov
sub
int
adc
aaa
out
imul
sub
cmps
pop
adc
sti
inc
xor
push
pop
xchg
std
rcr
mov
add
xchg
inc
jno
adc
fs
push
imul
pop
pusha
bnd
(bad)
nop
enter
cld
push
xchg
int3
in
ret
xchg
popf
hlt
mov
xchg
and
and
mov
pop
xchg
xor
sub
xchg
jo
inc
mov
pop
lods
das
pushf
enter
mov
and
pop
and
cli
std
pop
mov
(bad)
stos
xor
js
or
jmp
in
dec
push
xor
retf
add
inc
or
lock
nop
jmp
in
jb
scas
or
pop
mov
loopne
cs
aaa
and
cmc
retf
int
cmp
dec
fs
add
cmps
sub
shl
jmp
pop
(bad)
mov
jo
das
shl
mov
pop
mov
call
or
(bad)
loope
inc
mov
test
icebp
add
jns
fs
pop
fs
mov
adc
pusha
outs
mov
push
xchg
in
mov
mov
cmp
add
(bad)
jmp
add
les
cmc
daa
push
les
jge
es
les
ror
adc
stos
rcr
dec
cmps
test
cmp
jge
jle
dec
inc
sub
int3
jno
fstp
jp
leave
mov
add
int
mov
ins
lds
bound
jo
sub
jns
jecxz
add
mov
push
iret
loop
inc
xchg
push
push
adc
scas
jmp
inc
dec
addr16
rol
xchg
cli
jmp
adc
js
or
lds
sbb
cmp
cmc
inc
aam
jne
imul
scas
sbb
dec
pop
fldl2e
pop
and
pop
out
(bad)
(bad)
pop
es
fwait
call
add
in
test
jbe
inc
mov
xlat
hlt
jmp
inc
cmps
cwde
test
aad
xchg
jnp
std
les
mov
je
xchg
movs
lds
mov
arpl
or
sbb
and
sub
xchg
es
dec
sub
sbb
jge
cli
inc
mov
test
dec
idiv
adc
pop
and
jp
xor
push
jg
mov
or
and
xchg
xchg
jb
adc
xchg
xchg
cdq
sbb
jnp
les
clc
fimul
push
rcl
es
mov
into
js
fs
push
fcmovnb
int
ret
push
fist
xchg
xchg
div
fcomp
jge
std
cwde
int
dec
movs
aad
(bad)
in
pop
imul
test
mov
mov
xor
out
rcl
outs
pusha
jo
das
mov
pop
dec
lods
clc
jb
mov
mov
jg
jmp
mov
xchg
cmp
sub
mov
and
dec
jp
cmp
jns
adc
xchg
fstp
cli
inc
jp
sub
sub
mov
pop
mov
mov
repz
xlat
mov
mov
sbb
xchg
sub
scas
retf
ret
dec
cmc
bound
and
sbb
sbb
js
pop
and
pop
cmp
clc
mov
icebp
or
rcr
ins
test
pop
sbb
add
add
ja
stos
jbe
cmc
inc
shl
pop
sub
and
adc
xor
or
push
ret
push
mov
cdq
das
and
add
enter
dec
aas
jecxz
jns
lock
pop
dec
jne
adc
mov
lds
and
js
xchg
jno
jo
add
mov
aas
dec
pop
nop
jmp
inc
pop
lea
sbb
xor
xor
call
mov
(bad)
(bad)
inc
(bad)
in
add
aas
adc
and
ret
dec
jge
fld
pop
(bad)
test
fdiv
in
and
sahf
cmovae
xchg
xchg
dec
mov
nop
clc
xlat
iret
rcl
xor
pop
adc
(bad)
movs
arpl
pop
stos
inc
mov
jle
fild
or
lods
or
mov
add
jl
out
jbe
stos
mov
mov
sar
add
sub
vmovsd
and
xlat
jne
sbb
push
xor
loop
ds
call
mov
shl
out
fnsave
sahf
push
xlat
jns
mov
cld
pop
sbb
xor
pop
lods
ficomp
shr
gs
inc
mov
adc
jnp
sti
jle
xor
movs
dec
rcr
pop
mov
rol
cmps
fsubr
ins
fdivr
push
cmp
scas
lock
adc
mov
pop
loop
mov
jns
pop
daa
push
ds
and
mov
mov
(bad)
xchg
adc
mov
mov
fsubrp
adc
pop
fwait
test
into
cmp
mov
lds
push
add
cdq
mov
cmp
pusha
jge
cmp
or
xchg
cdq
push
or
add
mov
push
jmp
mov
cmp
js
jno
sbb
ss
rcr
sub
das
dec
aad
outs
xchg
mov
xchg
mov
mov
mov
xchg
push
retf
cwde
ss
mov
call
loope
out
xchg
or
ret
daa
(bad)
into
mov
jl
ins
stc
ret
retf
test
pop
dec
ds
aas
sbb
repnz
ins
les
loop
jge
cmps
jle
sar
das
add
fsubrp
pop
sbb
or
retf
dec
sub
icebp
fisub
in
pop
cmps
cdq
xchg
lock
loop
divps
mov
xchg
xlat
imul
test
xchg
adc
in
(bad)
arpl
cmp
mov
pop
out
and
pop
push
push
(bad)
fwait
aas
iret
std
sub
sub
sbb
lods
popf
add
adc
push
jo
xor
fisub
mov
mov
lock
and
push
(bad)
js
pop
and
gs
mov
and
pop
movs
inc
xchg
add
mov
test
mov
jne
fwait
adc
jl
in
cmp
stos
cli
out
hlt
pop
xor
or
test
sub
xor
jno
ret
dec
popa
int
shl
ror
fdivr
and
add
sbb
frstor
movs
mov
test
scas
into
fist
mov
mov
(bad)
out
lock
lods
imul
mov
(bad)
mov
faddp
mov
and
pop
enter
test
ret
lods
cmc
repz
xchg
fcomp
aam
lock
cmp
fdiv
repnz
(bad)
aam
mov
adc
(bad)
fwait
setg
jecxz
mov
dec
ss
xchg
idiv
push
adc
push
ret
in
addr16
shl
je
push
sub
dec
and
sub
or
jmp
jae
mov
test
jbe
adc
sbb
push
dec
jns
cmp
in
(bad)
xchg
das
sub
stos
retf
aas
gs
lahf
jnp
retf
out
test
(bad)
sub
jg
int
cmc
mov
aam
mov
popa
xor
leave
cmp
test
push
jb
std
jp
sbb
es
call
mov
rcl
ficomp
cmp
jge
retf
shr
fiadd
xchg
idiv
test
add
shr
mov
xchg
pop
cmc
pop
fwait
call
cmp
outs
or
push
adc
mov
enter
out
retf
sar
mov
jl
arpl
jl
cmp
push
sub
xor
mov
and
mov
sti
out
js
jg
enter
das
xchg
data16
fild
xor
nop
mov
loop
add
imul
pop
add
push
xchg
shl
(bad)
cmc
push
mov
push
loope
pop
push
push
dec
arpl
outs
cmp
inc
mov
mov
pop
std
lods
mov
add
mov
popa
out
pusha
xor
ror
out
scas
shl
dec
retf
das
dec
nop
retf
ret
dec
xchg
rcl
jo
and
xchg
mov
mov
popa
clc
aam
daa
push
fst
sub
ss
ret
movs
sub
xor
adc
adc
pop
lds
(bad)
js
stos
repnz
stos
movs
pop
cmps
add
cmp
inc
xchg
data16
arpl
scas
pop
ds
pop
mov
inc
lods
int3
clc
and
mov
fadd
repz
scas
daa
aaa
jns
add
jnp
dec
jmp
ss
fldcw
adc
std
xor
pop
mov
mov
(bad)
scas
jns
dec
mov
jp
das
and
xchg
mov
popa
cmc
ja
push
gs
(bad)
call
cmp
push
mov
stos
ss
cmp
and
in
test
fistp
scas
mul
movs
lods
xchg
mov
mov
add
inc
and
push
shr
in
cmp
xor
cmp
adc
shl
and
push
adc
pop
jle
xchg
scas
push
dec
xchg
jle
shl
jb
(bad)
sbb
fs
es
mov
push
and
ss
data16
ds
cmovg
retf
cmps
mov
xlat
xchg
scas
jg
jmp
pop
sub
lock
std
out
xchg
ds
and
push
cmp
(bad)
and
call
int
push
and
pop
ds
dec
les
push
data16
and
push
sbb
pop
and
je
or
pop
dec
mov
retf
cmps
test
sbb
(bad)
int3
gs
addr16
or
fnsave
int
fwait
in
sar
dec
out
std
pusha
cmp
push
in
pop
pop
in
in
sbb
mov
enter
push
pop
xchg
sbb
xlat
sub
cmp
add
(bad)
jb
sub
(bad)
adc
mov
hlt
mov
(bad)
mov
push
xor
(bad)
and
or
iret
les
mov
stc
sub
scas
pusha
jle
ins
dec
cli
or
ficomp
push
jg
mov
fnstcw
movs
not
mov
in
xor
push
pop
mov
dec
lods
xor
jnp
adc
push
addr16
mov
mov
or
adc
adc
in
loope
retf
mov
test
sub
(bad)
stos
push
mov
fwait
mov
push
or
pushf
jne
add
fdiv
js
mov
gs
jnp
add
inc
jge
xor
xchg
lahf
xchg
mov
sbb
jae
jne
ret
or
pusha
mov
out
cli
mov
test
xlat
sbb
icebp
mov
je
lds
sub
sub
xchg
stos
push
scas
jno
cld
fcom
cmps
and
xor
retf
jns
adc
out
xchg
leave
lock
pop
jmp
outs
std
jno
retf
xor
cmps
pop
pusha
dec
sub
bound
jmp
mov
shl
jne
push
(bad)
and
or
jae
je
stc
adc
cmp
or
mov
es
mov
lods
clc
inc
sbb
test
dec
sbb
div
rcr
test
mov
mov
lods
jge
push
mov
cmp
adc
pop
ins
retf
pop
in
pop
in
jmp
lahf
stos
push
xchg
fld
jb
add
scas
mov
add
addr16
inc
iret
xor
rcr
mov
test
nop
cmp
cmp
xchg
pop
mov
xchg
inc
lea
sub
mov
push
aas
stos
xor
jne
aaa
xor
(bad)
fiadd
lahf
call
dec
repnz
popa
mov
nop
sbb
int
pop
xor
mov
inc
push
iret
dec
xlat
inc
mov
and
stos
mov
(bad)
push
jecxz
cmp
stc
aaa
pop
aam
iret
(bad)
jge
imul
push
popf
repz
ret
addr16
gs
jge
push
rol
pop
dec
mov
aaa
jb
mov
and
and
test
mov
aaa
push
retf
and
(bad)
cmp
push
les
das
test
jmp
mov
mov
push
push
dec
xor
push
push
push
imul
retf
mov
sub
in
or
aaa
mov
popf
sahf
call
stos
xchg
fild
fdiv
sub
add
push
push
stos
(bad)
and
fiadd
and
xor
mov
jmp
xchg
pushf
xchg
fcomp
test
sbb
fsub
mov
hlt
fstp
push
pop
mov
dec
mov
ins
lods
sahf
in
xlat
or
(bad)
xchg
fbstp
gs
aas
fadd
not
fwait
cmc
stos
add
sub
adc
stos
adc
mov
jno
xchg
adc
cli
sub
das
stos
adc
scas
inc
sbb
mov
data16
push
mov
mov
rol
sbb
mov
test
leave
xchg
sub
push
enter
pop
les
xchg
out
ins
sub
daa
lods
sbb
(bad)
popa
or
hlt
xchg
mov
std
leave
mov
outs
pop
push
jl
mov
popa
and
jae
xor
dec
mov
les
fdivrp
mov
xchg
inc
adc
xchg
jmp
xchg
ss
fcomp
aam
hlt
mov
je
hlt
sbb
ret
xchg
ds
add
mov
xor
out
and
fsubr
fisubr
pop
rcr
cmp
cmps
sub
inc
fcomp
pop
or
lods
pop
test
sbb
inc
dec
cmp
jmp
jne
fsub
sbb
retf
sar
(bad)
sbb
sti
js
fadd
div
cwde
ss
je
inc
jge
add
inc
pop
dec
fwait
inc
stos
add
push
inc
sbb
dec
mov
pusha
and
and
mov
pusha
add
mov
xchg
fdivr
jecxz
sbb
les
push
retf
pop
outs
jmp
sub
cmps
xchg
mov
and
xchg
sbb
add
int3
xchg
inc
cwde
mov
mov
or
stc
push
dec
jb
ss
sub
bound
xor
pop
xchg
scas
into
mov
cld
lock
dec
movs
cmp
jp
les
cwde
std
mov
cmp
mov
inc
add
and
rcr
push
ret
icebp
movs
xor
xchg
xor
push
pop
add
or
sub
ret
test
inc
cld
xor
test
fnsave
popf
cmp
loope
push
inc
cmps
in
jae
ja
scas
mov
popf
shl
pop
push
cmp
push
repnz
arpl
int
icebp
scas
jmp
out
mov
shl
jae
inc
shr
push
mov
(bad)
shr
jne
jns
fucomi
clc
add
xchg
add
jmp
hlt
ret
js
xor
sub
mov
mov
fwait
lahf
jle
xor
and
(bad)
icebp
fild
dec
loopne
push
dec
and
push
inc
lods
jae
por
ret
test
push
mov
shl
test
cwde
frstor
test
out
mov
repz
pop
sti
dec
push
ins
sbb
fidivr
ja
aam
shr
int3
cmps
pop
lahf
jae
jo
or
dec
push
sub
call
add
fwait
dec
mov
sub
and
fadd
dec
jecxz
lock
pop
dec
shl
dec
in
dec
cmp
xchg
scas
fstp
icebp
cmp
xor
inc
fldcw
jmp
push
movs
(bad)
xchg
movs
and
dec
fadd
sahf
xchg
dec
mov
repnz
repz
push
cmp
mov
and
ins
adc
adc
dec
mov
or
leave
retf
xor
shr
jecxz
jne
and
idiv
xchg
and
or
loope
pop
ins
push
inc
out
pop
mov
add
js
mov
aas
push
stc
into
ja
mov
pop
div
inc
clc
or
rol
inc
xor
inc
xchg
into
loop
clc
sbb
sbb
jge
xchg
push
cs
dec
int3
hlt
and
cmp
xchg
xor
stos
cmp
dec
pushf
jecxz
test
cmp
xchg
rcr
xchg
sub
sub
jge
jp
fcom
mov
jle
loope
scas
or
imul
jbe
xchg
push
xlat
(bad)
jp
adc
lods
aam
test
movq
jb
pop
shr
iret
les
jg
shl
js
xor
test
jp
popa
lods
xor
xchg
push
les
(bad)
cmp
leave
in
inc
aas
push
push
xchg
and
sub
daa
fild
cmc
nop
mov
push
lds
sub
shl
js
mov
mov
xor
call
dec
xor
cmp
dec
popf
nop
aas
mov
fcom
test
dec
jmp
cmp
es
jmp
sti
shr
in
outs
cld
jecxz
popa
xlat
xchg
nop
jecxz
ret
imul
add
cmps
dec
inc
push
arpl
push
mov
push
out
sbb
xchg
out
clc
pop
pop
cmp
retf
pop
rol
cs
adc
add
add
jne
hlt
iret
add
and
and
stos
push
clc
mov
leave
int
fs
push
xchg
push
pop
in
push
xchg
icebp
pop
pop
inc
cmpxchg
into
lea
(bad)
test
push
lock
fcmovbe
sbb
pusha
test
xor
ss
test
mov
psrld
push
sub
jl
mov
jmp
jle
cdq
out
push
jg
add
enter
and
mov
push
sbb
xchg
lock
cdq
xchg
pop
add
adc
add
xor
jmp
popa
inc
mov
dec
pop
sbb
pop
(bad)
imul
lds
test
xchg
mov
jno
adc
cmp
cmp
enter
xor
mov
adc
push
or
js
xchg
xor
sbb
sbb
das
sahf
sub
mov
mul
pop
cdq
loopne
pop
sub
sub
inc
adc
in
popf
out
mov
mov
mov
shr
pop
cmp
cmp
fadd
or
or
cs
arpl
repz
mov
cmp
push
int
jmp
pop
xchg
jp
loopne
cmp
stos
xor
adc
not
fisttp
ss
test
loope
xchg
xor
mov
cmp
jnp
bound
pop
jmp
add
mov
clc
pop
mov
mov
repz
rcl
cs
mov
popa
jl
xchg
and
xchg
ins
push
adc
clc
add
ins
js
dec
gs
mov
xor
ins
es
adc
mov
jl
and
loope
dec
sub
in
imul
iret
inc
mov
mov
or
(bad)
push
inc
jns
sahf
dec
mov
out
adc
js
or
xor
rol
jl
cmps
aaa
cs
mov
mov
enter
xor
and
mov
sbb
int
xor
xchg
outs
sbb
jae
jmp
outs
scas
ja
je
push
xchg
int
ja
sbb
daa
aam
push
shl
xor
jecxz
lea
cld
mov
std
jg
(bad)
jno
mov
or
jmp
jle
adc
and
push
pop
mov
fcmovu
cmp
mov
add
daa
xchg
(bad)
dec
rcr
dec
(bad)
stos
in
xchg
cmp
and
cmps
ja
enter
xchg
cmp
jo
in
lds
sbb
sbb
sbb
inc
out
leave
fnstenv
push
je
bound
test
cdq
mov
add
popf
add
int
push
mov
ror
cmp
leave
scas
fwait
cmp
inc
inc
les
icebp
jb
mov
or
cmp
pop
lea
test
xchg
fild
inc
stos
aaa
sbb
iret
push
lahf
sti
xor
push
dec
ja
dec
fwait
lock
loopne
in
repnz
jbe
fwait
and
xlat
test
(bad)
mov
ror
scas
and
out
das
push
sub
mov
cdq
sahf
ins
or
imul
adc
jnp
stc
pop
xlat
add
pop
clc
test
lock
sahf
inc
or
cdq
lea
mov
loopne
(bad)
or
sub
retf
pushf
cmp
pop
push
pop
sub
movs
mov
scas
push
or
test
out
es
int
mov
fldcw
dec
mov
mov
mov
cmp
pmulhw
xchg
ins
jno
sti
inc
or
pop
add
shr
clc
fiadd
add
stc
hlt
push
xchg
mov
pusha
sbb
xor
pop
test
test
outs
cld
mov
cmp
add
ja
dec
lds
jl
pop
mov
das
and
inc
jle
xchg
add
mov
mov
into
and
movs
dec
dec
add
movs
je
scas
mov
cmc
dec
add
dec
xchg
dec
xchg
mov
loopne
cmp
test
mov
std
mov
test
sti
in
mov
inc
loop
xchg
mov
int3
addr16
sub
xchg
ror
jns
cmp
cmp
push
cmp
rol
push
adc
mov
xchg
sar
pop
or
sbb
add
or
ss
fild
rcl
mov
sub
stc
outs
std
xchg
ror
or
out
mov
nop
mov
(bad)
stc
dec
fs
xchg
xchg
ja
mov
inc
call
pop
and
out
call
pop
cmp
mov
jmp
xor
ins
mov
xchg
cmp
or
or
xchg
fwait
mov
dec
pop
sar
pop
xchg
loop
jnp
fwait
lds
outs
jns
adc
sbb
and
mov
sbb
retf
scas
adc
mov
(bad)
das
movs
sbb
nop
aaa
and
movs
mov
sbb
cs
mov
or
inc
retf
cmps
imul
mov
int3
mov
mov
mov
mov
xchg
das
out
pop
cmps
leave
jb
sub
dec
(bad)
adc
int
xor
mov
cmp
(bad)
jmp
fisub
dec
(bad)
ror
dec
cmp
leave
fwait
call
push
xor
jne
lahf
test
and
inc
sbb
int3
dec
push
cmps
push
sub
cwde
je
xor
mov
sub
mov
outs
enter
add
pop
or
test
pop
sub
shl
pusha
mov
lea
cmp
mov
retf
xchg
mov
enter
pop
fwait
(bad)
enter
xchg
inc
push
jo
and
push
cmp
inc
adc
mov
pop
ficomp
mov
sub
stos
adc
out
sub
jge
add
push
cdq
cmp
daa
push
clc
push
adc
adc
lods
mov
sub
fnsave
push
sub
pop
and
sar
pop
adc
int3
xor
mov
jl
jnp
adc
(bad)
icebp
stc
jo
inc
cwde
sbb
pop
dec
jmp
push
shl
mov
push
ins
lds
or
inc
jns
rcl
int
xor
pop
into
in
fcom
mov
js
adc
or
pop
ss
call
or
mov
or
scas
repz
ror
push
cdq
shl
(bad)
(bad)
pusha
outs
retf
adc
pop
inc
mov
xchg
jmp
loopne
aas
dec
sbb
pop
scas
mov
clc
xchg
push
lods
repnz
clc
dec
lock
lods
sbb
xor
sub
iret
(bad)
cld
cs
add
cwde
in
push
mov
adc
jne
jb
ds
jmp
pop
das
jp
jl
jne
pop
cmp
pop
add
retf
pop
adc
mov
inc
fisttp
loopne
sub
pop
ja
inc
cmp
shr
fsub
push
call
hlt
push
pushf
cmp
xor
or
fild
mov
outs
jl
int3
push
shr
adc
inc
or
mov
inc
cdq
push
pushf
mov
out
test
in
das
add
push
mov
je
add
xor
cmc
dec
icebp
les
sbb
cmp
pop
jmp
rcr
or
sub
push
and
inc
out
movs
jae
or
addr16
adc
sbb
mul
sbb
push
xchg
jno
inc
daa
repnz
outs
ds
je
mov
jge
adc
lods
jg
adc
inc
or
inc
imul
iret
stos
and
imul
xchg
int
fidiv
xchg
sbb
pop
jecxz
xor
cwde
imul
mov
push
in
cmps
fidivr
dec
and
es
pop
inc
sub
ret
test
xor
sub
inc
pop
scas
jle
icebp
repz
neg
jnp
in
scas
cmc
adc
mov
cmp
xchg
repnz
sti
sub
xor
mov
inc
retf
jg
lods
(bad)
pop
adc
js
(bad)
cmp
jmp
ja
ret
jl
push
lods
into
xor
dec
pop
cwde
sbb
call
push
icebp
int3
add
shl
ins
push
cmp
dec
fild
mov
sub
or
hlt
rol
shl
fsubr
inc
pop
add
pop
cmps
cmps
cld
add
and
ds
and
scas
nop
pop
fs
push
mov
outs
pop
push
int
pop
das
lods
in
leave
pusha
cli
js
dec
call
jg
movs
out
sub
push
xor
dec
ret
cmp
ficomp
add
movs
inc
mov
mov
in
mov
iret
and
jns
pop
loope
mov
movs
shr
mov
mov
mov
add
sub
mov
inc
add
xchg
inc
lahf
pusha
test
ins
cmp
lock
lods
imul
dec
rep
dec
pop
rol
jecxz
stc
daa
dec
lea
lods
hlt
or
cli
adc
pop
xchg
pop
pusha
retf
je
fbstp
fisub
popa
lock
sub
jg
nop
sub
pop
shr
xchg
jmp
inc
movs
push
inc
push
lea
xchg
xor
ds
enter
adc
retf
mov
out
outs
sbb
lds
xor
fwait
pop
xor
mov
daa
sub
enter
popa
ja
push
xor
adc
sahf
bound
stc
ret
fidiv
push
sub
mov
push
ja
pop
cmps
(bad)
mov
cmp
push
xchg
pusha
test
fs
inc
dec
bound
xor
in
or
aad
ficomp
inc
mov
ins
jmp
out
call
or
rcl
jbe
scas
add
mov
adc
and
loopne
jae
push
inc
or
scas
mov
or
jns
shr
mov
dec
cmp
popa
test
pop
dec
inc
scas
call
push
ins
scas
jmp
mov
or
std
retf
cdq
test
inc
clc
jmp
pop
icebp
enter
bound
xchg
and
dec
out
xchg
clc
xchg
jle
je
bound
sub
dec
mov
mov
jmp
pusha
shl
(bad)
jge
inc
addr16
(bad)
movs
int3
pop
out
sub
(bad)
int3
mov
xchg
aaa
and
mov
push
fiadd
inc
mov
pop
js
stos
push
cmp
inc
xchg
fst
cli
stc
fcomip
push
mov
cwde
in
push
push
ja
push
sbb
and
stos
add
push
cmps
dec
shl
sbb
das
ret
jo
cmc
outs
ss
mov
mov
cmps
cmp
mov
daa
lds
sbb
out
cmp
pop
push
movs
shl
add
loop
jb
mov
lock
pop
xchg
fist
cmp
outs
push
mov
mov
ss
addr16
jge
adc
xchg
mul
fcom
out
cli
lahf
push
std
in
jns
pop
cmp
sub
shl
jo
mov
ret
push
bound
pop
imul
cmps
dec
jb
jnp
std
xor
mov
inc
retf
inc
xor
or
fwait
xchg
adc
lods
gs
or
and
jb
jg
imul
int
add
jo
xchg
jmp
enter
push
stos
loopne
mov
inc
xor
push
push
mov
xchg
jnp
das
fst
stos
jo
int3
bound
inc
(bad)
stos
std
mov
rsm
pushf
repnz
jnp
sub
inc
mov
jmp
inc
out
adc
sahf
cmp
mov
mov
loopne
out
cwde
cmp
out
rcl
and
pop
in
cmps
sti
enter
adc
mov
leave
jmp
sbb
mov
mov
mov
and
cwde
cli
movs
int3
(bad)
fsub
call
nop
fwait
xor
dec
out
in
adc
adc
push
xor
push
and
and
cs
repz
mov
sub
(bad)
sub
mov
push
inc
pop
popa
or
in
inc
mov
leave
neg
or
fs
idiv
call
mov
dec
jecxz
jg
pop
lahf
in
push
cli
jne
sbb
mov
xchg
jecxz
cmp
dec
fsubr
je
mov
fsubr
dec
adc
push
je
out
nop
div
aam
xchg
jge
out
inc
push
mov
js
test
popf
ins
int3
mov
test
ret
fwait
ss
ins
push
jecxz
jmp
sub
retf
jmp
shl
adc
sbb
mov
sbb
clc
scas
fisub
adc
adc
fcmovnbe
lock
or
int
call
xchg
ins
xor
and
das
mov
fld
das
(bad)
pop
push
aad
popa
outs
dec
push
call
retf
ds
add
xor
shl
retf
sub
and
xor
data16
(bad)
xlat
(bad)
popa
movs
push
sti
test
jle
or
jp
and
imul
ja
cmp
popa
int
neg
(bad)
cwde
loop
mov
xchg
in
addr16
cmp
ja
mov
ins
(bad)
mov
hlt
or
in
push
pop
pop
pop
push
mov
mov
mov
das
and
jl
jnp
arpl
sub
out
xlat
das
ror
imul
fistp
adc
jg
push
sbb
cld
imul
sub
mov
iret
xor
dec
fidiv
mov
xchg
es
iret
cld
sbb
or
mov
icebp
cmp
xchg
call
mov
and
aaa
jg
out
sbb
xor
(bad)
push
imul
retf
sub
mov
inc
push
rcr
mov
adc
dec
pop
dec
data16
dec
adc
mov
ds
inc
stc
or
jl
sbb
retf
int
inc
fld
aam
es
push
call
lods
fwait
add
mov
(bad)
or
mov
mov
inc
stos
sub
cmp
or
test
shl
ret
aaa
aaa
xchg
pop
stc
jo
pop
xchg
sahf
sbb
cli
lea
pop
imul
arpl
xlat
mov
xchg
std
mov
lock
movs
mov
cld
jo
gs
push
sub
nop
popa
int3
xor
add
test
test
or
jg
mul
add
push
dec
and
adc
es
bound
inc
sbb
clc
aaa
push
popf
scas
in
mov
(bad)
push
fiadd
shl
ins
int
stos
cli
push
(bad)
push
ins
repnz
mov
xor
cwde
or
or
cmp
stos
adc
retf
add
imul
or
lods
mov
push
push
push
jge
out
jns
lods
es
mov
mov
cmp
xchg
cmc
push
xor
cmp
in
ds
stos
es
mov
in
ret
das
fwait
sub
mov
pop
dec
test
mov
lock
sub
inc
mov
jno
xor
xchg
addr16
mov
xchg
loope
test
xchg
sbb
and
hlt
out
and
clc
imul
addr16
call
or
lock
dec
pusha
mov
stc
xor
retf
jae
cmp
fdivr
call
inc
adc
into
scas
cmp
xchg
jmp
inc
jns
dec
ss
(bad)
pop
pop
pop
adc
repz
jnp
daa
cli
std
or
xchg
mov
aam
imul
scas
sbb
cdq
add
int
test
cmp
xor
clc
and
cli
cmp
inc
leave
shl
sbb
cmc
imul
mov
ret
das
sbb
arpl
ins
xlat
adc
adc
jb
mov
ins
xchg
jns
dec
lahf
in
or
sahf
cli
sar
jns
movs
mov
sub
mov
push
ret
loope
gs
cmc
inc
data16
fist
fnsave
shr
(bad)
nop
sbb
cdq
mov
shr
xor
mov
inc
sbb
adc
adc
cli
clc
cwde
push
and
movs
std
(bad)
scas
retf
cmp
js
pop
dec
(bad)
fiadd
inc
cmps
out
inc
push
mov
adc
xchg
shl
cli
sub
inc
movs
inc
or
movs
das
mov
in
lea
fcom
adc
push
xchg
aad
retf
in
mov
and
jg
test
jae
jnp
xchg
sub
mov
push
sub
xor
iret
pop
adc
pushf
xor
xchg
call
fwait
jmp
add
xchg
shl
aam
sub
xchg
adc
loop
ffreep
inc
iret
cwde
in
ret
push
mov
bound
inc
fld
outs
call
clc
fisttp
hlt
and
std
(bad)
movs
jnp
les
test
pop
gs
mov
adc
jecxz
imul
jg
push
push
lods
popf
inc
shl
and
ins
imul
or
jbe
inc
fidiv
cs
fiadd
jle
push
dec
imul
add
xchg
xchg
test
stc
and
push
idiv
je
in
cwde
adc
inc
ins
frstor
push
or
in
sbb
stos
leave
lock
mov
stos
pop
lods
mov
stos
lea
mov
mov
aam
mov
aaa
cmps
adc
pop
xchg
mov
mov
fxch
mov
add
cdq
xchg
push
jns
mov
retf
popa
adc
sbb
jge
xor
or
jae
xchg
(bad)
in
inc
mov
es
int
pop
inc
ins
lock
pop
fiadd
mov
or
push
xor
sub
push
cmp
jecxz
cmp
inc
mov
stos
dec
jnp
fisttp
fsub
movs
fidivr
int
jge
cmp
mov
popf
(bad)
(bad)
cmp
dec
adc
cmp
xor
push
sahf
es
xchg
dec
mov
push
out
push
cmc
or
pop
and
int3
xlat
mov
sbb
inc
or
ret
xrelease
cmp
call
add
shl
repz
int
call
mov
push
test
bound
dec
push
clc
xchg
scas
jnp
repz
mov
sahf
out
call
imul
mov
xor
xchg
or
mov
push
lds
stos
pusha
cmp
jp
push
inc
rcl
xchg
cmp
xchg
add
pushf
pop
adc
outs
mov
imul
lea
jae
xlat
dec
fsub
push
stos
pop
mov
add
sar
sub
or
repz
pop
jne
fidivr
lea
cdq
mov
lea
ins
sahf
and
test
jle
push
jnp
pop
out
neg
imul
cmp
pop
cmp
mov
fs
lea
sbb
inc
dec
les
mov
out
xor
adc
shl
or
cli
xor
in
or
arpl
into
dec
cmc
mov
pop
xchg
xchg
std
mov
push
mov
add
mov
push
inc
cmps
jnp
xchg
arpl
push
not
call
mov
ja
or
loopne
out
das
pop
popf
dec
lahf
ret
aam
outs
fsubp
std
push
(bad)
enter
mov
push
cs
sub
aad
jle
xor
ds
push
fisttp
js
fdiv
out
mov
inc
adc
mov
pop
imul
in
mov
adc
movs
mov
inc
or
out
mov
add
test
pop
mov
loope
push
xchg
sbb
ror
add
clc
test
push
push
mov
in
cwde
test
push
(bad)
iret
cli
or
lahf
jbe
jmp
shl
test
das
jmp
mov
pop
dec
sub
sbb
loopne
jae
cli
adc
jmp
lods
retf
cmps
jmp
xchg
jno
adc
ja
ror
ins
push
je
test
out
or
and
or
or
stos
sbb
popf
push
mov
fwait
sbb
push
fmul
test
jns
dec
adc
and
repnz
into
es
inc
xchg
sbb
mov
(bad)
addr16
test
sbb
ss
cmp
or
mov
and
popf
out
adc
aad
loopne
and
sub
adc
movs
push
sbb
xchg
or
pop
call
int3
aaa
sbb
hlt
cmp
adc
xchg
call
ret
xor
sub
test
inc
mov
clc
(bad)
and
es
ins
test
daa
push
xchg
xchg
out
mov
adc
loop
sbb
es
and
aas
sub
mov
cmps
mov
mov
(bad)
sbb
or
not
dec
repnz
xor
mov
pop
and
fcomp
bound
cld
aad
lock
outs
cmp
pusha
jne
imul
inc
fwait
loop
pushf
aad
fs
retf
inc
xor
imul
dec
lock
pop
sub
pop
sub
and
cmp
sbb
mov
pop
in
xor
cld
jae
stc
xchg
scas
pop
fsub
mov
inc
mov
mov
xchg
adc
sbb
movsx
xchg
clc
call
pusha
repnz
or
inc
lock
adc
mov
ret
pop
dec
dec
rol
int3
retf
mov
ins
mov
adc
push
or
push
mov
xchg
enter
cmp
mov
and
mov
sub
push
cmps
sub
mov
loopne
adc
js
mul
jo
push
sub
data16
ins
push
mov
mov
jbe
xchg
repnz
push
mov
jle
sbb
sub
pop
push
pop
adc
mov
(bad)
(bad)
sbb
push
mov
(bad)
xor
and
pop
mov
pop
aam
in
mov
mov
(bad)
(bad)
mov
(bad)
cwde
shr
mov
pop
push
or
leave
mov
inc
cli
mov
mov
retf
ja
dec
retf
outs
mov
xor
call
xchg
sbb
and
fs
(bad)
sbb
jnp
jecxz
xor
and
pop
cmp
fsub
jo
xlat
cmp
adc
cmp
(bad)
popf
movs
mov
imul
clc
adc
jb
sbb
test
sub
xor
dec
imul
movs
ds
xor
push
loope
imul
retf
cmp
adc
xor
retf
fadd
call
mov
(bad)
cld
movs
inc
les
jns
cmps
scas
cmp
or
hlt
(bad)
imul
adc
mov
ins
outs
pop
cwde
push
fisubr
fs
push
iret
xchg
rcl
jg
arpl
jne
xchg
mov
mov
inc
jp
xchg
icebp
jle
mov
jbe
bts
push
jbe
add
int
mov
aaa
mov
mov
ins
lods
cmps
dec
dec
or
(bad)
cmps
lds
ins
pop
cmp
cmc
mov
jmp
adc
xchg
enter
(bad)
cmp
sbb
pusha
mov
inc
ins
aaa
cwde
xor
mov
sbb
mov
pop
adc
(bad)
repnz
mov
call
mov
inc
sti
pop
sub
sbb
cmp
into
mov
xchg
mov
jo
addr16
jecxz
inc
pop
inc
pop
cmp
sub
mov
nop
fist
ins
mov
iret
lea
and
mov
pop
dec
movs
outs
repnz
aaa
popf
dec
and
mov
inc
sub
add
sahf
adc
push
or
jle
popf
popa
loop
mov
xor
push
popf
adc
adc
and
cmp
inc
loopne
mov
mov
dec
outs
ret
pop
inc
fs
and
daa
into
sbb
mov
push
sbb
cmp
cmp
dec
sar
sbb
jg
jge
jp
mov
enter
cmp
outs
and
mov
mov
out
pop
fs
jp
cdq
mov
jne
addr16
shr
pop
and
shl
jne
sbb
jge
js
xchg
je
je
iret
cmp
xor
lods
xchg
xlat
stos
ss
retf
(bad)
push
femms
iret
stos
xchg
lea
pop
lahf
test
pop
push
call
add
ins
push
inc
cdq
pop
mov
cmp
push
or
jb
push
cmp
pop
mov
ins
lds
(bad)
xor
test
mov
push
sub
aad
xor
mov
jmp
add
fist
xchg
xor
jae
lods
mov
ins
rol
inc
mov
(bad)
sub
cmp
sub
xor
shl
loopne
or
mov
pop
cmp
adc
inc
inc
adc
icebp
sahf
mov
jle
add
ins
scas
cmps
mov
mov
cwde
jo
xorps
hlt
ins
aad
push
dec
xchg
pop
dec
(bad)
pop
fisttp
fwait
cld
sbb
mov
fisttp
iret
inc
and
jns
cmc
into
mov
stc
pop
loopne
adc
mul
sub
shr
(bad)
leave
mov
xchg
cmc
(bad)
rcl
mov
inc
lods
or
arpl
addr16
dec
cli
mov
pop
iret
jl
sahf
pop
dec
push
ror
out
add
aas
pop
or
mov
repnz
out
push
add
or
retf
icebp
mov
shl
jnp
pop
(bad)
cmc
test
popa
sti
sub
fsubr
jg
inc
scas
dec
retf
pop
xchg
cmp
retf
pop
shl
push
retf
inc
pop
mov
jge
cmp
jg
jg
jge
adc
add
ja
aas
cli
push
pop
mov
add
mov
inc
pushf
sbb
paddq
pop
xor
push
mov
jnp
je
aas
mov
inc
stc
leave
fnsave
pop
addr16
mov
adc
(bad)
test
into
xor
(bad)
xchg
adc
adc
pop
dec
jmp
mov
scas
shr
push
push
inc
ds
xor
mov
aam
inc
mov
and
ds
out
sti
mov
test
out
push
jecxz
inc
outs
inc
mov
pop
out
ds
cmc
outs
dec
sub
xchg
or
into
inc
jno
jae
rol
scas
lods
push
mov
sbb
xor
push
push
sub
daa
mov
mov
xchg
rcl
imul
arpl
gs
jp
out
call
out
push
js
mov
cli
lods
into
jmp
enter
or
(bad)
in
lds
jp
mov
sbb
in
aaa
push
and
int
jmp
data16
loope
dec
mov
push
pop
jmp
mov
jb
pushf
sbb
add
dec
add
shl
xchg
or
retf
and
mov
mov
mov
out
cli
cmps
dec
xor
lds
add
jle
cmp
push
dec
arpl
sbb
cmp
in
fwait
sbb
imul
das
neg
xor
xor
(bad)
push
cmp
add
mov
and
push
loope
fnstcw
mov
ins
fdiv
scas
push
mov
push
push
ret
mov
daa
leave
unpckhps
inc
scas
out
adc
lea
or
add
inc
repnz
ror
push
mov
sub
outs
adc
ss
out
xchg
mov
or
inc
pop
lds
inc
hlt
add
(bad)
mov
scas
push
pushf
xor
les
imul
cmp
mov
dec
fdivr
je
call
cmp
or
stos
ins
leave
loop
and
and
mov
sahf
jecxz
or
aad
in
push
sbb
mov
outs
cs
pusha
jmp
sub
xchg
pop
push
push
fisttp
push
je
(bad)
jg
aam
jo
fiadd
out
cmp
imul
cs
call
(bad)
in
inc
jmp
lods
dec
sub
clc
push
mov
mov
in
dec
jle
addr16
ret
or
sub
pop
push
cs
mov
mov
push
loopne
fisttp
and
adc
xor
leave
push
dec
jle
(bad)
aam
cli
pusha
xchg
adc
repnz
call
jg
dec
(bad)
in
inc
out
cmp
xor
ret
cmp
xor
mov
scas
xor
sub
or
pusha
(bad)
arpl
cmp
jecxz
das
jmp
outs
adc
test
pushf
fist
mov
es
dec
pop
xchg
ficomp
retf
mov
lock
ffreep
lahf
sbb
dec
sbb
aad
jo
fstp
movs
call
push
pop
repnz
jno
outs
sahf
bound
shr
mov
ret
mov
pop
gs
outs
lea
repnz
shl
test
aas
push
sbb
movs
sahf
jge
adc
xor
mov
dec
fistp
mov
adc
sti
into
loopne
mov
push
js
(bad)
repz
ficom
(bad)
popa
clc
movs
cmp
mov
cli
pop
mov
(bad)
sub
xor
and
lods
out
xor
sbb
lahf
pop
das
mov
or
jl
out
in
outs
xchg
and
sbb
push
call
adc
mov
lds
scas
sbb
mov
stos
dec
iret
clc
(bad)
rcr
xchg
adc
pop
sub
mov
shr
fisub
out
cdq
inc
ret
fimul
popa
sub
hlt
xchg
mov
cmps
dec
xchg
cmp
fld
and
push
movs
mov
(bad)
sbb
fs
test
cmps
dec
dec
in
dec
mov
pop
mov
sbb
add
sahf
xchg
cdq
inc
(bad)
adc
add
jb
or
ror
push
xlat
adc
push
pop
fsub
push
stos
clc
and
jae
es
cmps
ror
sbb
adc
cmp
cmp
(bad)
popf
add
call
out
cmc
aas
push
scas
loop
lahf
inc
lds
fnstcw
or
jmp
xor
addr16
imul
xchg
cmp
fld
pop
fadd
(bad)
xchg
xchg
pusha
mov
inc
aad
mov
pop
aas
stos
test
imul
mov
repnz
pop
xlat
or
inc
aas
jmp
fstp
sbb
or
shl
ret
loope
inc
xchg
sub
and
js
jb
outs
nop
add
cmp
xor
xor
jb
xor
jo
stos
or
jmp
ds
sub
mov
mov
dec
cmp
scas
out
fiadd
mov
mov
movs
retf
(bad)
cmp
lds
or
mov
adc
retf
or
xchg
aad
lahf
inc
lods
add
fidiv
pop
lea
mov
dec
add
ret
and
and
push
loop
(bad)
in
sub
pop
(bad)
adc
cmp
mov
imul
test
add
mov
fadd
xchg
mov
push
cmp
mov
push
loope
das
in
rcl
aaa
inc
ss
es
pushf
xor
je
aaa
mov
mov
(bad)
fidiv
ret
mov
cmps
mov
aaa
(bad)
movs
xchg
mov
cwde
xchg
sub
inc
mov
or
loop
aaa
and
jae
push
fs
pop
pop
xlat
jle
or
nop
adc
(bad)
clc
fnstcw
xor
in
imul
sbb
push
lea
(bad)
fnstenv
cmc
push
and
pop
(bad)
rcl
dec
xor
sbb
mov
push
xchg
and
jge
das
push
mov
data16
add
pushf
xor
xchg
ror
sbb
sub
sbb
jp
outs
push
(bad)
fidivr
xchg
aad
jg
aas
add
sbb
mov
push
scas
fistp
sub
jo
fucomp
sbb
mov
mov
push
mov
push
retf
cmps
retf
rol
adc
xchg
cmc
jmp
jae
retf
(bad)
movs
pop
xchg
test
sti
stc
sahf
aaa
mov
repz
mov
and
jno
fcomip
xchg
pop
aas
test
lods
lds
add
or
mov
push
pushf
mov
leave
nop
inc
stos
arpl
inc
gs
jge
inc
jl
int3
rep
and
not
loop
dec
mov
jb
stc
mov
stc
pop
(bad)
in
(bad)
pop
fadd
enter
shl
lods
(bad)
movs
xchg
mov
hlt
jmp
stc
adc
aam
mov
mov
cmp
add
out
daa
or
push
lea
cld
pop
cwde
or
loope
dec
mov
inc
test
adc
mov
out
fs
pushf
loope
cmp
sub
xor
mov
push
pop
sbb
pop
jecxz
pop
std
imul
pop
xchg
imul
dec
sub
xor
cmp
in
mov
sti
push
lahf
mov
addr16
push
xor
adc
add
mov
push
push
outs
stos
jne
and
repz
rcl
mov
lock
dec
fisubr
xor
mov
push
xor
add
sub
jno
sbb
xchg
mov
pop
pop
jno
or
dec
mov
popa
into
jecxz
jle
pop
movs
(bad)
mov
movs
mov
and
push
cmp
repnz
icebp
xchg
cmp
outs
in
(bad)
fistp
push
dec
mov
leave
or
or
adc
jbe
data16
movs
scas
sbb
push
inc
fstp
les
mov
repnz
jo
sub
outs
arpl
xchg
bound
mov
hlt
adc
cmp
jae
add
inc
and
dec
mov
cdq
movsx
into
imul
mov
jmp
mov
sbb
cmp
pop
mov
xlat
add
adc
inc
jmp
jp
and
ret
pinsrw
pop
ds
fs
cmp
js
mov
xor
xor
add
push
js
in
test
push
leave
mov
sahf
jno
adc
lea
outs
add
mov
rol
inc
add
lahf
bound
mov
call
pop
cmp
mov
lahf
sub
xchg
xlat
stos
and
imul
out
fadd
cmp
push
aas
fsubr
je
push
inc
push
popf
icebp
in
cmp
sbb
push
cld
iret
movs
or
cdq
xor
imul
int
push
adc
das
cmp
out
xor
int
movs
dec
cmps
cmp
retf
aaa
mov
xor
jbe
lds
cs
sub
jmp
jg
pop
imul
xchg
mov
pop
mov
jecxz
fcom
push
rol
mov
shr
movs
mov
jecxz
adc
imul
mov
mov
and
retf
mov
mov
(bad)
jp
mov
icebp
dec
test
scas
adc
idiv
lea
pop
jae
fild
(bad)
mov
and
(bad)
cmps
mov
sub
and
jp
fxtract
jo
fist
sbb
shr
(bad)
mov
cmp
(bad)
clc
sub
repz
mov
data16
push
loopne
pusha
aaa
push
dec
push
in
add
mov
xor
sub
push
mov
mov
je
xchg
lock
xchg
jl
xchg
movs
adc
add
out
ins
ds
push
pop
nop
xchg
movs
mov
mov
dec
pop
mov
es
ss
xchg
retf
pop
test
sub
test
imul
mov
push
push
or
inc
lock
lods
jne
retf
call
push
popf
(bad)
fbstp
rol
test
jns
cmp
cmp
scas
je
ret
or
push
sub
mov
or
ror
inc
push
lds
retf
ss
retf
fmulp
sqrtps
push
add
enter
jg
or
test
call
std
sub
enter
mov
icebp
sub
daa
stc
push
and
retfw
ds
mov
inc
mov
and
mov
xor
cmp
fistp
scas
push
test
sub
leave
dec
adc
fnstenv
sbb
mov
inc
lahf
in
xchg
dec
fadd
cmp
pushf
out
xchg
xchg
pop
pop
xchg
stos
add
fstp
sbb
mov
sub
inc
sahf
mov
sub
(bad)
call
ins
cld
ss
dec
sbb
pusha
sbb
cmps
sar
test
sahf
aam
push
sbb
cmps
xchg
xor
xor
cmpxchg
lods
aas
xchg
adc
add
out
fwait
adc
mov
sahf
sbb
loopne
push
hlt
xor
jno
bound
mov
xor
jns
retf
mov
mov
jb
cli
fcmovnb
xchg
adc
es
pop
lods
mul
add
pop
dec
pop
out
mov
(bad)
leave
jle
and
and
sub
out
ins
outs
not
mov
pop
cs
ds
xchg
push
pushf
or
jb
out
push
or
popa
xchg
jecxz
outs
xor
sbb
cmp
push
sbb
test
ret
jne
out
mov
jl
push
jo
aam
sbb
aaa
mov
movs
jl
popa
mov
adc
cmp
ss
fnstcw
lods
or
(bad)
mov
cmc
aad
je
xor
leave
arpl
push
dec
aaa
mov
leave
aam
lock
lahf
int3
cmp
push
mov
je
xchg
sbb
shl
int
sti
dec
add
add
popa
call
imul
mov
adc
in
dec
movs
loope
cmps
cmp
inc
or
jg
mov
adc
sti
and
repnz
mov
cmps
scas
sti
stos
inc
sub
mov
xor
fwait
and
pop
sbb
xchg
pop
cmp
mov
lea
fisub
popa
jmp
loope
fdivr
icebp
xor
or
mov
test
call
xchg
cdq
repz
add
jns
pop
cwde
inc
imul
(bad)
xor
jns
enter
clc
add
push
shl
lods
mov
xchg
test
pop
daa
aaa
push
sar
xor
and
sti
mov
push
retf
xor
ror
mov
xchg
push
pop
or
mov
fldcw
rcl
push
cmps
xor
push
iret
aaa
pop
and
xchg
dec
push
mov
mov
xchg
and
fadd
loope
and
sahf
cmps
mov
loope
daa
mov
mov
fldcw
lea
dec
add
and
inc
add
mov
stos
dec
adc
cdq
mov
inc
std
repnz
adc
inc
or
inc
or
in
mov
out
xor
mov
dec
into
jl
jl
push
adc
inc
inc
lods
retf
and
sub
fstp
jns
(bad)
cmc
(bad)
outs
ret
nop
fimul
mov
sbb
neg
loope
mov
rol
inc
hlt
lds
aam
dec
out
aas
ret
je
out
adc
dec
inc
push
and
mov
test
inc
out
mov
or
adc
cdq
ja
push
movs
sahf
xor
push
jle
retf
inc
xlat
cli
fsubr
pop
inc
add
shl
pusha
dec
outs
enter
mov
fucomi
dec
push
cmp
int
adc
inc
inc
ret
cmp
pop
ret
jg
test
mov
int3
inc
cdq
out
mov
or
pop
loopne
arpl
fldln2
push
clc
stc
dec
xchg
xor
icebp
dec
scas
sar
hlt
loopne
mov
loope
mov
stos
mov
add
fidivr
adc
lods
pop
push
cmp
jge
fisttp
clts
lahf
jp
call
add
inc
xchg
in
jg
or
das
es
xchg
mov
xor
pop
(bad)
in
xchg
and
jp
xchg
pop
adc
and
cmc
sbb
pop
clc
inc
inc
adc
mov
test
jg
push
pop
cwde
mov
imul
out
xor
dec
push
ret
xchg
sbb
xchg
ins
push
out
mov
ins
xor
addr16
push
add
add
daa
mov
mov
enter
mov
jns
fbstp
ret
int
aam
cmc
push
jg
mov
push
push
adc
mov
aad
scas
mov
cmp
add
sbb
cmp
(bad)
iret
lods
dec
cmps
pop
and
into
jg
jo
sbb
xor
cmps
pop
(bad)
mov
movs
xchg
out
bnd
sbb
scas
dec
ret
push
repz
gs
imul
xchg
and
rcl
mov
pushf
or
mov
jno
sti
jno
cld
icebp
push
mov
sbb
jmp
adc
cmp
hlt
cmps
xor
daa
jnp
xchg
dec
inc
inc
sahf
inc
cmp
jnp
xchg
fcom
xchg
add
sub
in
fldl2t
(bad)
icebp
lds
pop
inc
les
push
mov
and
push
ds
ss
fcmovnbe
pop
jb
inc
cmps
dec
ja
and
es
pop
popa
xchg
ret
nop
sbb
pop
sbb
push
sbb
xchg
mov
daa
cmp
mov
daa
and
test
je
lods
inc
pop
xor
jl
shr
jmp
push
add
fucomip
push
mov
mov
cmp
(bad)
scas
test
test
push
mov
outs
and
jne
sub
jnp
les
test
cmp
pusha
mov
or
stc
add
and
sbb
mov
sbb
xchg
jecxz
loopne
bound
sbb
sbb
mov
or
jmp
sub
pusha
adc
push
call
iret
rcl
xchg
inc
push
mov
mov
mov
xor
and
(bad)
jp
dec
pop
in
ja
pop
or
movs
stc
inc
xchg
xchg
and
lahf
mov
rol
in
sub
(bad)
in
pop
mov
imul
icebp
mov
fmul
call
aad
xchg
push
popf
fidiv
call
out
int3
cmp
push
add
sbb
mov
and
data16
add
leave
dec
sbb
push
lods
add
and
add
mov
sub
ror
cmp
sub
cmp
inc
pushf
lods
pusha
xchg
mov
mov
and
nop
adc
aam
cld
xchg
cmps
loope
adc
adc
pop
bound
daa
setg
sbb
mov
pushf
leave
or
or
fwait
nop
jae
xchg
ins
push
loop
and
xor
or
scas
shl
mov
loop
sub
aas
cwde
rcl
xor
pop
fdivr
mov
sbb
(bad)
fnstenv
ss
pop
loope
bound
movs
int3
jmp
test
push
ss
sar
js
js
test
scas
and
push
dec
and
pop
inc
push
pop
pop
pop
or
dec
xchg
pop
(bad)
aas
int
fnsave
(bad)
mov
jmp
push
mov
mov
out
adc
js
data16
xchg
(bad)
push
and
xor
int
data16
sub
ror
inc
mov
or
mov
cmp
jae
and
sub
mov
xchg
es
out
inc
pushf
out
inc
inc
movs
test
loopne
jne
ja
push
test
gs
mov
int
jp
(bad)
in
aaa
iret
mov
mov
test
jmp
jne
xchg
fs
not
sbb
push
xor
in
outs
pop
or
inc
or
mov
les
xchg
rcl
outs
sub
xchg
add
retf
repnz
pushf
sbb
or
cmc
enter
test
pop
cmps
adc
dec
mov
mov
mov
mul
je
jbe
push
fstp
adc
and
in
adc
sbb
add
lds
pop
mov
stc
or
xchg
push
dec
pop
int
stc
shl
loop
jp
pop
cmp
aad
mov
mov
add
inc
push
inc
mov
inc
imul
xor
fwait
scas
daa
or
and
sub
pusha
icebp
sbb
in
icebp
lock
xchg
xchg
push
loop
xor
add
inc
lods
jmp
lea
push
mov
mov
dec
(bad)
mov
mov
outs
hlt
jmp
adc
dec
jno
jmp
and
out
shr
mov
jnp
(bad)
adc
push
or
inc
cmp
add
imul
sbb
mov
adc
sub
push
jmp
das
gs
scas
popf
and
jecxz
add
pushf
repz
mov
xchg
add
cld
sbb
lock
retf
push
push
aaa
sub
add
xchg
aas
std
ret
pop
pop
(bad)
aas
les
push
pop
retf
sti
data16
sub
cmc
fs
pop
fmul
icebp
jns
test
add
movs
popa
pop
and
je
stc
aam
lods
cmp
xor
cs
bound
adc
fwait
mov
std
mov
jno
or
out
inc
adc
inc
pop
push
jb
sbb
push
mov
cmp
mov
cdq
adc
das
fdiv
test
aam
cmp
xchg
(bad)
int
into
and
mov
mov
out
push
pusha
int3
iret
dec
add
rcr
inc
or
gs
dec
cs
aaa
adc
cmp
pop
and
or
dec
nop
sbb
dec
ret
adc
pop
push
mov
loopne
jmp
je
inc
push
outs
and
arpl
ins
cdq
inc
sbb
adc
(bad)
xor
in
add
jl
ret
in
jno
xor
and
lea
aas
scas
or
push
adc
sbb
mov
test
bswap
adc
loopne
stos
adc
xor
jb
fs
push
sbb
retf
shl
ds
loopne
cmp
fwait
ins
jne
mov
loopne
or
mov
int
ins
inc
adc
(bad)
int3
ins
cmp
clc
jmp
cmp
dec
jmp
jae
or
mov
imul
call
add
pop
sub
pop
jmp
sub
cmp
(bad)
jmp
or
int
cmp
mov
inc
pop
cmp
jl
movs
adc
jmp
(bad)
xor
xor
lods
mov
aad
xchg
scas
sbb
sub
cmc
xchg
dec
jno
cmp
pop
daa
cmps
add
clc
mov
in
dec
pop
mov
adc
cmp
xor
mov
adc
add
lds
sub
xor
pop
pop
mov
out
sub
int3
push
das
push
jle
stos
push
mov
test
dec
inc
adc
sub
or
mov
mov
pop
(bad)
mov
pop
(bad)
stos
(bad)
mov
mov
sbb
js
adc
sbb
mov
jne
push
pop
and
sub
js
xchg
pop
seto
test
inc
xor
gs
fimul
out
idiv
movs
push
mov
mov
jae
cmc
push
inc
mov
shl
lods
cs
not
je
lock
and
xor
inc
call
jb
imul
push
or
push
jmp
outs
mov
repz
add
mov
and
cs
shr
retf
sub
xor
add
mov
and
and
ja
(bad)
in
mov
inc
repnz
scas
inc
jp
cmps
mov
call
adc
(bad)
std
loope
mov
ins
adc
and
add
xor
jl
adc
shr
cmc
inc
pop
push
mov
sahf
xchg
xchg
jno
into
sahf
dec
adc
scas
ds
inc
sub
push
pop
shr
push
(bad)
sub
fcmovnbe
int
stc
das
cmps
out
inc
push
cs
les
sbb
int3
jns
jmp
cmps
ins
push
mov
jmp
jmp
shl
and
add
sbb
dec
cwde
cmp
jb
add
mov
test
pushf
mov
add
cmp
dec
sbb
std
jl
sbb
sbb
jb
xchg
dec
add
inc
dec
jg
xor
mov
(bad)
sbb
les
in
push
enter
lods
jge
ds
out
pop
out
out
inc
add
hlt
les
movs
inc
sbb
pop
sbb
push
mov
add
mov
sub
test
hlt
or
dec
cmp
movs
scas
fcomp
call
imul
into
sub
addr16
cli
xchg
(bad)
in
bound
arpl
pop
cmp
out
dec
enter
retf
cld
or
jmp
push
or
xchg
(bad)
retf
ins
xchg
xor
test
jns
call
mov
dec
in
out
(bad)
sbb
mov
lahf
ss
mov
loop
std
bound
add
xor
push
out
add
mov
in
(bad)
scas
mov
cmp
push
xor
push
xchg
shr
xchg
clc
jb
ret
rcl
cmp
jo
xchg
or
add
mov
sub
adc
arpl
mov
push
lods
stc
cwde
data16
adc
jg
pop
push
xlat
fs
push
adc
jmp
sti
div
push
shr
sbb
aad
shr
out
retf
cli
xor
test
nop
call
xchg
rcl
and
(bad)
rcr
inc
stos
lods
mov
xchg
mov
in
(bad)
lock
mov
add
test
xchg
inc
mov
fcom
xor
push
fdiv
adc
fs
add
stc
jae
stc
imul
push
outs
adc
push
adc
enter
sar
or
out
xor
mov
cmp
inc
pop
push
scas
jmp
inc
pushf
xchg
loope
or
jns
add
(bad)
cld
ret
shl
lods
scas
repnz
cmp
mov
pop
lahf
(bad)
rcr
push
imul
(bad)
adc
ins
ds
stos
xchg
cmp
(bad)
pop
stos
cmc
scas
pop
inc
cld
je
shl
sbb
add
push
hlt
inc
inc
mov
mov
movs
mov
inc
lds
jl
push
xchg
cmps
mov
imul
push
sub
iret
jb
push
xor
cmps
aam
jle
sar
add
dec
mov
sar
sbb
push
ror
mov
and
out
xor
aaa
inc
xchg
pop
shl
(bad)
dec
adc
pop
mov
test
jne
xchg
pop
mov
push
mov
adc
das
cmp
mov
scas
push
inc
aaa
cld
cmps
xor
test
mov
xor
dec
fadd
dec
mov
test
mov
(bad)
push
or
mov
cmp
jmp
xchg
jmp
xor
mov
shl
inc
neg
mov
popa
(bad)
adc
cs
shr
(bad)
repz
mov
mov
pop
adc
mov
(bad)
pop
mov
sbb
fisubr
or
xchg
dec
push
jl
xchg
in
jbe
dec
ins
pusha
rcl
retf
mov
dec
and
sub
les
push
sbb
lds
ror
(bad)
jb
jge
lods
sbb
inc
adc
jmp
dec
in
outs
pop
out
mov
movs
in
popa
hlt
mov
repz
lods
pop
mov
adc
sub
push
xor
pop
adc
mov
jle
jecxz
sar
call
adc
test
sbb
and
in
mov
aad
push
adc
inc
addr16
inc
xchg
fidivr
cmp
out
into
jge
emms
sub
movs
sahf
ins
sbb
sar
(bad)
sub
mov
inc
lods
adc
adc
jmp
sbb
mov
daa
nop
jnp
das
sbb
repnz
sub
mov
int3
push
xor
mov
cmp
call
retf
dec
add
aas
push
push
dec
push
iret
ss
or
adc
and
pushf
pslld
shl
push
mov
(bad)
mov
mov
sub
idiv
push
xchg
xor
jbe
add
sbb
in
ja
iret
jbe
mov
jb
xchg
or
mov
xor
loopne
pop
add
xor
cmc
push
pop
add
mov
xchg
pop
repnz
loope
adc
nop
cmp
mov
add
mov
sub
jle
push
int3
xor
test
pop
mov
mov
push
pop
jmp
pop
movs
xor
jp
fs
sub
je
fdiv
test
ret
leave
imul
push
mov
cmps
bound
in
pop
test
rol
out
dec
mov
test
pop
les
fcmovu
xchg
xchg
xchg
pop
sbb
ror
das
mov
popf
sbb
inc
and
cmp
sub
cmc
mov
es
mov
pop
fcmovbe
lds
push
mov
xor
repnz
aaa
or
or
push
lds
mov
and
pop
jb
mov
fdivr
aaa
scas
es
(bad)
mov
pop
xchg
sub
xor
fs
fnstenv
call
pop
add
pop
xchg
retf
sub
or
xor
add
das
dec
jge
pop
sbb
xchg
lock
aaa
je
push
push
jo
mov
(bad)
pop
ret
xor
lods
and
movs
clc
xchg
outs
push
dec
inc
imul
xor
mul
gs
push
pop
out
and
cdq
icebp
sbb
adc
xor
ror
es
xchg
sub
repz
xchg
stc
xor
fisttp
xchg
xor
lods
stos
sub
pop
mov
cld
inc
bound
push
movs
call
jge
mov
scas
add
jne
aam
jne
inc
jo
push
nop
imul
push
fcomp
jns
cmps
jl
jnp
add
xchg
repz
push
or
(bad)
mov
and
xor
cmps
cmp
and
jle
xchg
cmp
cmc
sub
mov
push
jo
push
ins
xor
mov
inc
lods
adc
sub
pop
rcl
inc
jns
jmp
gs
add
aaa
movs
cmp
inc
out
rol
xchg
mov
or
stos
test
adc
in
mov
test
cmps
inc
iret
loop
dec
imul
inc
sub
clc
dec
cmp
in
stos
addr16
or
int
stos
pushf
jae
rcr
call
mov
push
pop
into
lods
push
jb
xchg
lahf
std
inc
and
dec
(bad)
sub
imul
jmp
dec
pop
dec
xor
std
pop
mov
imul
mov
int3
push
imul
shl
pop
nop
dec
es
cli
mov
push
sbb
mov
cmp
pop
xor
int
mov
fsubr
test
stc
push
xor
and
jmp
inc
addr16
jmp
sub
and
xor
cmps
adc
mov
test
adc
xor
xchg
jl
or
cmps
mov
or
sub
pop
sbb
lea
pop
xchg
jb
mov
(bad)
aaa
jl
sbb
mov
leave
rcr
retf
inc
(bad)
cli
loopne
call
jmp
repnz
mov
and
(bad)
lea
aam
div
jae
push
ret
int3
push
pusha
xlat
lods
imul
xor
add
cmp
in
push
sahf
ins
je
jns
sub
cmps
pop
fnstsw
ror
ins
aas
or
xchg
cmc
ins
arpl
cmp
xchg
dec
inc
stos
sub
(bad)
je
popa
daa
mov
jmp
sub
and
lods
inc
push
in
pop
int3
int
push
mov
add
call
xchg
pushf
add
xor
dec
jle
mov
fcomp
test
lahf
aam
pop
leave
imul
sub
(bad)
daa
and
jnp
stc
gs
mov
add
cmp
out
mov
ficomp
test
ja
pop
fs
daa
addr16
ins
dec
fistp
sub
jg
lods
sub
inc
iret
pop
jo
push
cmps
xor
mov
push
int3
cld
ds
inc
test
(bad)
cmp
movs
(bad)
aam
loope
loopne
mov
scas
out
int
jbe
add
xchg
dec
jno
xchg
dec
lock
push
in
in
mov
xor
test
popa
loope
xchg
cli
ficomp
cdq
or
popf
add
push
inc
sub
lea
push
inc
push
push
pop
enter
inc
dec
retf
jne
ja
xchg
mov
out
push
inc
(bad)
pop
gs
lds
add
push
mov
jge
outs
(bad)
int3
into
sbb
cwde
ret
or
dec
add
fistp
dec
stc
push
lods
enter
mov
jl
fmul
or
and
sbb
add
scas
movs
test
pop
inc
xchg
jae
enter
std
jae
shl
mov
push
dec
inc
xchg
sub
push
xor
jp
mov
fcmovb
push
scas
xor
dec
sub
scas
mov
cmps
retf
cmp
and
fwait
int
daa
cmp
mov
sub
sbb
cmp
test
cmps
xchg
(bad)
clc
or
pop
pop
jmp
mov
ja
jae
jns
les
in
inc
les
out
push
xchg
mov
hlt
mov
movs
mov
fiadd
aas
lahf
mov
push
imul
mov
in
scas
jle
bound
(bad)
dec
shr
pop
scas
add
inc
xchg
ss
adc
mov
sahf
in
jmp
ss
dec
cmp
push
xchg
call
sti
cmc
xchg
inc
movs
mov
xchg
or
push
loope
mov
sub
dec
cdq
mov
(bad)
pop
retf
sbb
and
std
(bad)
repz
std
(bad)
add
xchg
das
and
test
in
sbb
ret
inc
shl
cdq
dec
mov
pop
mov
mov
movs
sub
fdiv
inc
test
cs
test
push
call
and
stos
cmp
xor
test
scas
or
cmp
dec
add
dec
add
adc
pop
outs
and
ret
mov
das
or
sbb
sbb
fist
mov
js
fwait
adc
push
rcl
lods
mov
dec
pop
cld
out
mov
jnp
fidiv
retf
enter
push
bound
aas
mov
adc
sub
sub
(bad)
jmp
std
test
add
dec
mov
add
xor
add
pop
ret
adc
push
jmp
ss
ficom
mov
xlat
aas
sbb
jo
push
add
mov
push
mov
pop
inc
add
inc
cmp
mov
jmp
jge
xor
dec
jmp
es
add
fldenv
or
in
push
les
push
rol
test
mov
ret
and
fild
jl
dec
frstor
push
enter
repz
ds
jns
cwde
retf
xor
lahf
adc
pop
mov
lods
add
shr
fwait
push
pop
(bad)
dec
add
push
or
shl
add
(bad)
and
das
fiadd
pop
sbb
movs
cld
or
loope
mov
pop
scas
cmp
(bad)
sbb
(bad)
ds
xor
pop
fld
imul
or
cmp
test
mov
pop
add
mov
fs
mov
mov
cmp
(bad)
jle
dec
and
mov
aas
xchg
paddd
ja
call
pop
lds
xchg
lods
or
movs
ror
push
mov
int3
in
outs
pop
(bad)
std
aam
ins
ins
mov
sbb
hlt
inc
jmp
faddp
ja
sbb
add
jne
loop
sti
cmp
pop
in
or
mov
repz
sti
xchg
cmp
sbb
or
adc
data16
scas
(bad)
mov
pop
cmp
xchg
les
gs
retf
pop
cmps
in
mul
dec
push
and
jns
mov
xchg
(bad)
jmp
gs
rcl
shr
cmp
inc
nop
lahf
mov
(bad)
mov
cmc
add
and
sub
stos
mov
(bad)
pop
and
mov
std
es
adc
es
mov
add
jg
pushf
lods
mov
rol
push
ins
out
cli
dec
jmp
mov
call
in
xchg
daa
jae
aam
aas
(bad)
jmp
pop
push
inc
test
pop
jnp
fsub
ss
mov
ds
push
jns
and
adc
dec
mov
gs
add
call
aam
call
mov
shr
mov
ins
mov
in
lahf
sbb
addr16
adc
sub
xchg
repz
fidiv
adc
jno
add
or
cmp
aad
sbb
push
int
inc
and
out
shl
pop
loopne
sbb
ficomp
mov
retf
dec
daa
mov
sahf
sub
scas
inc
jae
imul
jp
mov
adc
lock
clc
push
rcr
push
dec
or
nop
fnsave
push
fld
pop
aad
lods
cmps
and
jmp
ja
mov
jl
jno
ror
aaa
cmp
jnp
push
mov
dec
jns
sbb
test
aam
sahf
fisubr
lds
sbb
inc
xor
mov
ins
adc
pop
retf
adc
rol
(bad)
push
cmps
es
or
xchg
movs
(bad)
pop
sahf
jmpw
jl
jmp
(bad)
daa
inc
mov
aas
movs
aas
jge
div
sub
or
inc
call
stc
sbb
test
(bad)
jp
xor
sahf
cmp
ret
je
pop
hlt
xor
dec
xor
imul
loopne
fild
test
dec
pop
mov
out
bound
ds
mov
jge
cli
jnp
(bad)
pop
inc
dec
xor
ret
loop
dec
sub
mul
lock
inc
fadd
aad
mov
xchg
and
mov
leave
cld
sar
shr
sbb
dec
rep
les
jecxz
pop
or
ficom
shl
retf
outs
xor
or
loop
outs
daa
cwde
ficomp
mov
imul
pop
push
xchg
sbb
push
xchg
mov
mov
adc
cwde
in
(bad)
push
xor
sub
or
xor
cmp
jb
push
mov
js
lock
and
fs
rcr
outs
bound
leave
mov
cmps
push
(bad)
in
cmp
sahf
or
xchg
ins
aaa
push
retf
imul
mov
mov
mov
stos
jge
ret
ds
and
or
js
lds
jne
out
jne
jns
xor
push
mov
push
(bad)
jmp
jl
jnp
sbb
pop
rcr
sub
mov
mov
repz
hlt
pop
mov
or
jg
jnp
aam
cmp
adc
dec
shr
cld
pop
mov
and
xchg
jbe
jae
push
das
imul
dec
sub
or
inc
repnz
mov
sub
xchg
cmp
and
test
add
dec
sbb
arpl
push
jno
mov
mov
mov
xchg
or
jle
stc
cmp
cmp
test
xchg
lds
cmp
adc
xchg
sti
pop
or
pop
push
aaa
in
jne
je
and
pop
in
jns
pushf
lods
mov
sbb
retf
mov
mov
mov
push
iret
push
jb
mov
jg
push
adc
sub
add
jno
les
adc
push
xor
in
and
or
adc
mov
ret
sbb
jl
push
sahf
clc
pop
jp
or
pop
in
aad
add
int3
xor
fs
(bad)
sbb
mov
and
ss
pop
stos
sbb
pop
out
enter
dec
adc
adc
ins
lods
push
int
inc
ja
pop
mov
inc
or
sub
push
out
scas
push
mov
pushf
cmp
repz
cmp
sbb
jmp
or
jnp
jmp
dec
mov
adc
adc
fnstenv
adc
add
xchg
mov
inc
scas
call
mov
mov
dec
jl
dec
pop
imul
inc
cmps
aam
xchg
outs
in
push
cmps
(bad)
(bad)
iret
xor
fstp
dec
dec
hlt
jg
(bad)
clc
pop
ss
std
inc
retf
adc
and
push
mov
inc
jp
and
cmp
push
shr
int
inc
ret
mov
cmp
dec
push
(bad)
pop
(bad)
jnp
call
mov
inc
and
or
popf
sub
cmps
mov
(bad)
rcr
call
mov
repnz
inc
xchg
jl
bound
cmps
les
popf
xchg
(bad)
sti
jp
hlt
push
data16
std
ror
xchg
pop
inc
mov
xchg
push
xor
dec
adc
adc
mov
inc
push
sbb
push
bound
push
jp
adc
inc
or
add
mov
dec
add
jp
sub
lock
std
jnp
jmp
dec
add
jle
sbb
cmp
loopne
jmp
xor
cmps
std
sti
inc
fld
fsubrp
jns
popa
adc
test
jae
inc
sti
lock
(bad)
cmp
jnp
add
push
add
xchg
(bad)
jns
xor
stos
sub
mov
cmp
adc
cmp
in
fnstenv
xchg
xchg
mov
lds
enter
sbb
sub
pop
jbe
or
rcl
sub
(bad)
cmp
cmp
mov
les
movs
dec
or
adc
mov
out
movs
retf
jle
pop
popf
dec
out
mov
add
xor
int
jns
xchg
pop
mov
nop
inc
pushf
cs
call
inc
pop
dec
sub
xchg
call
ror
test
pop
aad
clc
mov
sbb
retf
sbb
addr16
(bad)
jecxz
mov
arpl
loopne
les
mov
retf
xlat
outs
push
lahf
les
repnz
nop
adc
clc
bound
sub
pop
cmp
rol
xor
outs
mov
xor
pop
cld
int3
cld
mov
cmp
test
fwait
aaa
or
iret
mov
sahf
(bad)
out
push
mov
mov
and
xchg
mul
test
xchg
push
jns
fnsave
or
push
lds
ja
sub
sub
rol
dec
adc
and
jmp
ror
(bad)
repz
and
mov
cmp
pop
inc
clc
stc
loope
test
std
pop
mul
in
out
(bad)
pop
out
cmp
fwait
jg
add
jns
hlt
icebp
mov
push
and
in
mov
aad
push
jo
fnstcw
(bad)
int3
adc
inc
pop
adc
push
jae
aad
aas
int
enter
add
pop
or
jne
loopne
stos
xchg
push
in
popf
jle
cmps
inc
fiadd
inc
mov
clc
fiadd
sbb
xor
xchg
push
arpl
xchg
pop
pop
mov
pop
out
test
data16
cld
int3
adc
out
retf
jb
arpl
adc
jg
jae
xor
bound
int
mov
sub
fisubr
mov
add
mov
mov
arpl
and
fcom
arpl
xlat
cmp
shr
sbb
nop
retf
push
or
ror
xchg
mov
mov
add
cmps
sub
outs
sar
jbe
stos
ret
cmps
daa
jg
jmp
cmp
repz
aam
push
movs
cli
and
lea
outs
jnp
jne
aad
je
pop
les
hlt
xor
xor
aas
setl
mov
call
adc
pop
aad
shl
xor
loope
loop
call
cmps
cwde
rol
fsubr
jp
movs
popf
xor
or
out
ret
cs
cli
inc
cmps
imul
and
into
and
adc
jecxz
lock
int
inc
shl
xor
or
pop
jb
stos
ret
and
js
jmp
lea
int3
jg
sub
outs
movs
test
(bad)
stc
xor
(bad)
push
cmp
xchg
xchg
(bad)
jle
sub
pop
and
rol
into
cmp
(bad)
mov
mov
(bad)
push
(bad)
(bad)
jp
ret
or
pop
popa
ss
xor
jmp
std
rol
(bad)
cs
ror
and
test
int3
enter
push
adc
pop
sbb
sbb
pop
loop
test
loopne
fs
fimul
arpl
les
fiadd
int3
xor
es
jbe
push
sbb
add
js
ins
retf
xchg
and
cmps
and
pop
jb
jp
out
mov
retf
push
sahf
out
xchg
mov
fs
fisub
imul
push
and
shl
jmp
mov
xor
lahf
xchg
scas
(bad)
hlt
mov
jl
xor
inc
jmp
xchg
push
fstp
inc
sbb
push
repz
imul
push
mov
mov
dec
push
and
lea
fistp
int
ja
ror
or
dec
mov
test
pop
and
xchg
dec
inc
and
rcl
push
mov
cmp
leave
mov
imul
fs
cli
jne
fisub
(bad)
scas
mov
push
(bad)
dec
(bad)
fisttp
xor
mov
xchg
jle
addr16
cdq
fsubp
(bad)
xchg
out
jne
outs
sub
or
sub
(bad)
into
(bad)
mov
push
outs
mov
rcl
stc
addr16
int3
jecxz
aam
xlat
push
addr16
push
aad
jbe
xchg
pop
sbb
fidiv
pop
jmp
jae
push
sbb
pop
and
ja
sbb
dec
jno
addr16
aad
or
inc
xor
std
mov
xchg
push
imul
scas
adc
jns
mov
rcl
jno
mov
xor
mov
inc
xchg
fimul
cmp
inc
out
call
mov
ret
test
jge
sub
mov
or
sbb
jp
lahf
push
fsub
sub
xchg
out
mov
sbb
dec
jp
dec
cld
shr
and
cmp
fs
xor
mov
inc
sti
mov
fnstenv
inc
mov
dec
pusha
mov
jl
dec
cdq
shr
mov
(bad)
lods
and
sbb
pushf
cmc
stos
shl
inc
aas
inc
push
dec
lods
xlat
mov
lea
test
push
push
mov
ret
jo
inc
les
add
pusha
jmp
cmc
arpl
retf
shl
jge
stc
in
je
dec
adc
sub
pop
das
pop
or
shr
std
jl
jnp
retf
push
xchg
cs
dec
das
mov
dec
fcom
sub
add
addr16
mov
int
sbb
adc
pop
sub
fwait
in
sbb
mov
xchg
rcl
daa
jl
jecxz
cmp
enter
daa
lea
jg
test
jns
fisub
adc
lock
das
mov
pop
(bad)
xor
jnp
inc
pop
mov
cwde
shl
or
cmp
inc
pusha
scas
pop
cmc
dec
push
ins
cmps
cli
adc
stos
dec
shl
sbb
pop
ja
fs
mov
ficomp
fwait
in
stos
shld
repnz
outs
sahf
shr
push
in
aad
sbb
pop
inc
mov
pop
lds
imul
jns
xchg
es
jmp
ret
jae
xchg
mov
xor
mov
sbb
or
fs
fld
inc
push
xlat
jecxz
imul
(bad)
jmp
add
mov
mov
inc
push
xor
psraw
adc
mov
sub
aad
icebp
add
pop
mov
jp
sbb
xor
int
sub
ins
pop
fwait
aas
stos
adc
pop
or
inc
fs
jg
rcl
cmps
shl
sahf
psubq
mov
cmp
call
cmp
dec
push
leave
cmp
popa
inc
movs
or
sbb
ja
into
jmp
nop
aaa
xchg
mov
xchg
inc
cmc
jl
in
push
loop
test
ficom
cs
adc
mov
and
pop
or
or
xchg
sbb
(bad)
in
jmp
xlat
movs
cmc
sbb
bound
rol
in
cld
push
jmp
ja
jmp
mov
mov
pop
adc
xor
in
and
pop
pop
cmp
pop
movs
inc
test
test
fwait
sti
das
add
addr16
add
xchg
clc
cmp
pop
aam
jge
lods
jb
shl
cmps
pop
xor
repz
or
retf
sar
pushf
pop
(bad)
sub
adc
icebp
sbb
aam
(bad)
cdq
outs
fucomip
fisub
fstp
mov
ror
push
ror
lock
cmp
or
push
ret
sub
jbe
xchg
cmp
es
aas
push
imul
push
fistp
push
xchg
mov
pop
popf
xchg
pushf
xchg
mov
mov
xor
lods
xor
xchg
mov
pop
mov
mov
sub
and
in
test
push
mov
mov
and
cli
fld
mov
add
test
sub
adc
jns
inc
xchg
in
fcomp
and
push
stos
push
push
adc
outs
ja
xchg
fsubr
pusha
std
xlat
jp
mov
mov
inc
mov
nop
in
sbb
retf
or
xor
fiadd
inc
jg
popa
mov
add
dec
imul
adc
inc
es
and
xor
adc
dec
or
dec
scas
xchg
stos
inc
retf
inc
stc
adc
rcr
aas
repz
add
sub
or
mov
popf
inc
popf
or
dec
inc
(bad)
jmp
out
std
pop
cs
sbb
add
jb
loopne
mov
or
and
stc
test
dec
icebp
and
xchg
dec
bound
adc
inc
push
or
jge
stos
sbb
adc
cs
dec
faddp
jge
fnsave
sub
cmp
fistp
xor
nop
adc
repz
sub
push
scas
xor
jns
xchg
push
outs
outs
cmp
sub
pusha
xor
jb
xchg
fninit
pop
mov
out
sub
mov
sar
fsubr
inc
mov
add
mov
cwde
and
scas
mov
(bad)
cmp
ins
aaa
cmp
lea
adc
sbb
jmp
stc
in
pop
les
push
(bad)
xlat
mov
adc
test
test
jnp
or
and
dec
fmul
push
cmp
js
sbb
in
cmp
adc
ja
arpl
fsubr
es
test
cld
aaa
into
pushf
mov
mov
xchg
sbb
hlt
fdiv
sbb
sub
add
(bad)
lds
jle
fs
cmp
add
int
loopne
rcr
inc
pop
xor
jbe
retf
aam
sub
int3
repz
jno
sbb
in
out
inc
hlt
popa
jecxz
mov
push
fcom
cmp
add
ins
ds
(bad)
(bad)
mov
outs
cmp
sub
imul
mov
pop
jb
ins
xchg
add
out
hlt
cwde
mov
pop
dec
test
cmp
cmps
mov
pop
mov
jo
adc
les
add
push
push
sub
iret
movs
movs
dec
push
repz
pusha
pop
fst
(bad)
push
jnp
ror
pop
out
lahf
push
jecxz
jmp
dec
mov
cwde
inc
pushf
jo
mov
sar
jecxz
loope
in
mov
xchg
cli
mov
mov
pusha
jp
fdiv
mov
les
xchg
loop
mov
dec
aas
mov
sub
jbe
mov
call
sar
ficom
add
sti
inc
outs
add
test
mov
push
xor
jge
popf
nop
into
retf
mov
add
mov
push
cmp
mov
and
mov
loop
aaa
pushf
mov
loope
mov
xchg
push
inc
jmp
(bad)
out
add
rcr
cmps
rcl
lock
jb
inc
jmp
ret
inc
dec
mov
sahf
xchg
(bad)
test
and
lahf
jle
lahf
mov
test
inc
popa
add
jo
repz
xor
das
out
push
or
mov
adc
mov
xchg
rcl
xor
mov
xchg
or
ins
loopne
adc
(bad)
je
scas
pop
push
or
and
xor
stos
repnz
push
jae
cmp
pop
test
pushf
das
out
retf
ffreep
and
pop
les
jno
or
lods
bound
cmp
sub
arpl
(bad)
push
in
fild
xor
mov
mov
retf
icebp
inc
adc
xor
daa
in
sub
xchg
nop
xchg
push
das
dec
sahf
mov
xor
xchg
mov
xchg
int3
cdq
(bad)
xlat
sti
xchg
int3
jmp
in
call
test
outs
inc
mov
mov
ins
pop
pop
mov
idiv
xlat
imul
inc
xor
pop
add
fnstcw
ret
jnp
cmp
cmp
mov
mov
push
jl
inc
jno
sahf
jle
mov
call
add
mov
addr16
and
enter
push
cdq
lock
xchg
xchg
les
rcr
jecxz
push
xchg
rcr
mov
mov
sahf
shl
fsubrp
jl
mov
bound
vpunpcklwd
js
mov
push
jmp
enter
jns
mov
adc
inc
sbb
cwde
aaa
dec
dec
push
inc
add
adc
or
adc
retf
and
mov
inc
inc
loope
or
mov
imul
xor
cmp
pop
cmp
addr16
shl
test
call
call
jns
rcr
aam
(bad)
int
retf
enter
xor
jmp
pop
ret
fisttp
movs
cli
(bad)
cmp
es
cmc
(bad)
dec
xor
inc
jle
pop
leave
je
nop
lods
mov
dec
js
mov
jl
pop
mov
sub
jmp
xor
ret
imul
jae
push
es
pop
or
int
pop
mov
hlt
pop
or
xchg
daa
mov
mov
push
xor
or
scas
mov
jb
adc
call
lock
fcomp
dec
xor
or
sub
repz
mov
or
out
add
mov
mov
cmps
xor
mov
pusha
idiv
lods
in
mov
xchg
cmps
cs
add
adc
mov
push
dec
xlat
daa
adc
or
mov
dec
inc
call
push
pop
inc
sub
xchg
add
popf
out
xchg
cmps
xor
jg
sbb
and
mov
mov
rcl
mov
xor
sti
sti
mov
sahf
repz
inc
pop
fldenv
in
fist
mov
cdq
outs
mov
dec
dec
pop
jmp
test
jge
rcl
(bad)
sub
inc
and
fs
(bad)
sar
(bad)
sbb
mov
fcmovnb
das
sub
mov
addr16
icebp
div
sbb
xor
jbe
arpl
mov
gs
data16
push
retf
and
mov
lahf
rcr
add
mov
xor
movs
push
sbb
repz
nop
and
mov
sub
push
in
sti
mov
out
inc
xchg
sbb
lock
test
mov
ins
aaa
iret
movs
fwait
les
jns
imul
adc
pop
inc
movs
mov
ins
sub
mov
aam
push
add
shr
arpl
(bad)
hlt
adc
(bad)
cmc
(bad)
pop
sbb
jnp
xchg
sahf
ror
aad
mov
(bad)
int3
loopne
aam
in
add
sbb
mov
test
stos
out
cmp
mov
adc
xchg
ss
sbb
les
stos
push
ja
mov
jno
ja
dec
jg
cmp
mov
pop
dec
dec
les
mov
test
push
enter
es
xchg
inc
call
mov
mov
push
les
push
mov
push
sbb
dec
jg
test
mov
cwde
faddp
sbb
std
int3
adc
mov
scas
scas
xchg
push
push
and
mov
add
mov
retf
fld
clc
cmp
sbb
xor
addr16
imul
(bad)
xor
cld
jb
push
inc
scas
adc
es
mov
pop
shl
loopne
mov
jle
mov
xchg
cmp
dec
rcl
jae
push
shr
jmp
pop
mov
mov
push
push
push
fsubr
scas
aam
ins
jb
xor
jns
and
aaa
addr16
aad
mov
jl
aam
adc
push
or
mov
inc
inc
or
sub
ins
inc
retf
mov
retf
out
adc
ja
in
or
push
test
icebp
js
pop
out
rcl
clc
movs
push
push
int
cmps
add
ds
imul
jne
pop
xchg
mov
cmc
sub
jg
adc
jp
mov
addr16
add
mov
pop
ins
(bad)
retf
cmp
jo
sbb
mov
xchg
xor
pop
fisttp
add
push
pop
cld
xor
cld
rcl
clc
mov
(bad)
jne
idiv
sub
std
(bad)
mov
aad
ds
adc
enter
fcomp
pusha
scas
add
jmp
xchg
imul
adc
cmp
les
mov
push
mov
stc
gs
mov
xchg
mov
add
xchg
mov
rol
jno
jmp
adc
ja
movs
sar
test
(bad)
and
fld
and
popf
xor
lods
xchg
imul
cmp
or
test
fs
loopne
sub
push
and
add
fadd
adc
(bad)
pop
xchg
repz
cs
mov
jne
stos
iret
js
pop
sub
adc
fnstsw
mov
xchg
inc
inc
xchg
dec
cwde
cmp
dec
jno
jnp
repnz
ins
and
dec
add
inc
xchg
sbb
(bad)
imul
mov
push
mov
lds
inc
mov
(bad)
mov
ror
push
scas
test
mov
sbb
cmp
cli
add
or
inc
fmul
jecxz
and
push
xchg
lods
outs
aaa
(bad)
jae
mov
and
mov
aas
pop
mov
outs
ds
mov
clc
and
nop
sub
pop
dec
cmp
adc
push
inc
shl
or
sti
fsub
xor
(bad)
jl
xchg
cmp
push
xchg
add
popf
or
xor
ds
nop
fmul
jle
sub
ret
inc
rcl
jg
out
xchg
adc
cs
jle
mov
retf
ins
jmp
jmp
pop
es
repz
ret
cmps
inc
lods
in
in
fstp
(bad)
js
in
jb
fcmovne
test
fs
mov
jmp
jns
retf
ret
iret
pop
call
adc
jle
ja
cmp
ins
(bad)
push
cmps
add
sar
sbb
loope
jmp
pop
call
mov
xchg
call
shl
outs
imul
jae
cdq
test
(bad)
adc
dec
xchg
fs
push
sti
inc
les
cli
rcr
mov
jg
push
cmp
daa
aas
fs
cmp
imul
pop
sub
daa
mov
mov
or
test
pushf
pop
cmp
push
and
mov
mov
cmp
push
pushf
out
aas
jle
sbb
xchg
xor
bound
mov
jl
outs
mov
xlat
cwde
jecxz
push
pop
call
in
scas
ins
adc
ins
lds
stos
or
shl
xchg
fs
adc
fidiv
scas
iret
push
fucom
mov
imul
or
mov
je
mov
push
add
std
xor
nop
jne
jp
mov
or
popf
xlat
popf
stos
add
icebp
add
iret
xchg
xor
test
pop
pop
push
pop
loope
mov
lea
sbb
loope
mov
arpl
sub
fnsave
xor
mov
jp
xlat
es
add
sar
outs
xchg
jg
adc
mov
lock
fnstenv
push
loope
xor
sbb
xchg
push
and
mov
shr
pop
and
shl
mov
mov
xor
add
sbb
ret
fstp
sub
repz
retf
jnp
imul
jl
lods
xor
cmp
and
pop
fwait
mov
aam
add
add
dec
and
jmp
ret
es
sub
fbld
sub
pop
clc
pop
sbb
retf
sub
dec
mov
sub
pop
fcomp
pusha
jo
sub
mov
in
push
xchg
cmp
sub
aas
adc
push
inc
lock
dec
inc
xchg
les
mov
jge
out
movups
dec
jo
ret
lock
mov
sti
or
in
ja
push
xor
mov
shl
ins
arpl
jmp
jnp
stc
pusha
add
bound
hlt
jno
cmp
jmp
adc
add
jne
ja
sub
pop
fldenv
ins
inc
ja
mov
add
push
cmovae
pop
mov
inc
pop
ins
cwde
cmps
or
fisttp
repnz
aam
jae
pop
cmp
inc
out
gs
jbe
jne
or
mov
inc
test
lods
sbb
(bad)
aas
test
push
dec
mov
jecxz
or
lea
push
ret
lds
test
lock
jns
outs
xor
jae
fistp
xchg
add
cmp
(bad)
es
add
jle
dec
arpl
retf
xor
push
cdq
jmp
xor
push
dec
and
lahf
inc
sub
iret
pop
call
call
fidivr
mov
add
mov
gs
push
mov
dec
jge
test
add
in
pop
dec
imul
ja
aam
and
push
sbb
adc
mov
cdq
scas
imul
or
inc
ret
and
lahf
and
pop
ins
imul
scas
sbb
and
inc
adc
fldenv
or
mov
pop
std
sub
push
(bad)
dec
pop
(bad)
push
ret
iret
ret
cmp
iret
dec
shl
hlt
in
xor
daa
xor
das
jb
in
dec
and
(bad)
dec
or
hlt
(bad)
add
jle
icebp
and
repz
cmc
cmps
push
outs
sub
push
mov
loopne
inc
add
sub
pop
les
xor
std
add
cmps
or
repnz
test
sbb
int3
imul
inc
pop
(bad)
enter
mov
push
push
fild
stos
mov
cmc
test
stos
loopne
in
aam
scas
(bad)
sub
adc
xchg
out
scas
or
test
jecxz
outs
leave
in
sub
add
mov
popf
inc
(bad)
and
mov
dec
dec
pop
pop
jmp
int
mov
jb
sbb
mov
and
push
and
xchg
(bad)
push
lds
inc
sbb
ins
mov
in
jbe
dec
jbe
ins
repnz
lods
lea
fldenv
pop
mov
mov
ins
cmp
dec
cmp
jecxz
je
mov
ja
ss
aam
push
pop
test
jne
leave
nop
xchg
cmc
or
(bad)
iret
pop
sbb
std
into
shr
les
inc
xor
jns
xor
push
add
pop
(bad)
sbb
jne
fnstsw
jecxz
in
aam
or
sbb
jle
xor
cwde
aam
call
xchg
fidivr
xor
add
movs
aas
dec
(bad)
cmp
hlt
les
mov
mov
mov
fucomip
test
loop
adc
addr16
cld
push
aas
xchg
xchg
mov
xchg
hlt
iret
outs
sub
aad
sbb
mul
stos
ret
repnz
mov
push
add
mov
or
pushf
test
sub
js
cmp
add
test
kmovw
mov
gs
xor
test
inc
pop
push
arpl
popa
push
fisubr
movs
lods
std
adc
add
dec
add
sub
xchg
cmps
fwait
adc
std
je
lods
jg
fcom
mov
repz
push
push
dec
fwait
sar
popa
jno
dec
sti
push
repnz
pop
xor
cli
inc
inc
cmp
lea
jmp
aaa
xchg
fimul
jnp
test
enter
sbb
out
push
inc
jle
or
push
imul
add
or
mov
mov
xlat
inc
lock
xchg
jg
test
or
cmp
dec
imul
xchg
inc
push
pop
retf
popa
dec
sbb
shr
dec
pop
ins
xchg
xor
lods
arpl
icebp
(bad)
mov
jle
les
jl
cmc
fdiv
dec
addr16
xchg
sbb
and
test
pop
popf
fild
xchg
fstp
mov
pusha
loop
push
adc
lds
pusha
jnp
and
jle
mov
shr
push
and
jb
leave
aam
sub
fstp
jge
cwde
push
sub
dec
push
and
mov
jmp
sbb
mov
sbb
add
mov
mov
out
arpl
xchg
mov
outs
es
mov
or
add
mov
dec
mov
loope
dec
dec
and
and
and
out
icebp
icebp
test
mov
push
sbb
and
popa
pop
push
dec
sbb
xlat
cs
adc
rol
push
lahf
add
test
int
(bad)
pop
inc
aam
sahf
fsub
hlt
mov
push
pop
inc
push
mov
adc
sbb
ss
daa
mov
dec
jp
mov
mov
sub
idiv
pop
imul
repz
jmp
and
movs
push
xchg
pop
pusha
(bad)
sbb
(bad)
dec
sbb
imul
enter
adc
dec
daa
xor
fnsave
rcr
adc
into
cmc
in
mov
sar
pop
sub
or
push
mov
push
sub
push
and
pop
clc
jb
shl
push
(bad)
retf
imul
xor
loopne
addr16
div
data16
mov
push
cmp
sub
add
scas
mov
and
sbb
aam
outs
mov
sahf
movs
aam
pop
mov
mov
stos
or
jg
xchg
loopne
sbb
je
lods
mov
movs
dec
adc
int
jns
cmps
mov
int3
xchg
ror
sbb
inc
cmp
mov
jp
in
popa
out
mov
pop
sbb
xchg
xchg
fstp
mov
inc
xchg
xor
jnp
shr
jl
pop
xor
pop
clc
mov
ret
cmps
cmp
mov
jb
aas
fsubp
or
jecxz
pand
pop
(bad)
ror
sbb
cwde
dec
std
mov
std
sub
or
out
std
movs
mov
popf
and
cdq
aad
sbb
lahf
fbstp
xlat
fabs
add
int3
mov
mov
xor
fbld
dec
and
pop
in
mov
fistp
clc
es
sub
inc
jmp
iret
mov
mov
xchg
call
xchg
or
add
cli
out
mov
repz
lods
aaa
pop
test
daa
sahf
call
fisub
or
jge
jb
sbb
push
xchg
outs
pop
and
fs
add
inc
sbb
pushf
stos
xor
fnstcw
push
idiv
and
inc
jne
adc
mov
mov
push
dec
bound
(bad)
out
stos
jl
dec
or
mov
adc
mov
pop
dec
aam
sub
jle
cdq
out
fmul
movs
xchg
add
mov
mov
fs
int
mov
add
iret
pop
xchg
cmc
test
pop
mov
mov
sbb
outs
add
mov
mov
mov
hlt
ins
or
das
(bad)
push
sub
je
ds
inc
iret
(bad)
das
not
lahf
and
push
test
(bad)
movs
dec
nop
out
mov
mov
push
sbb
push
bnd
mov
sub
sar
xchg
pop
add
cmp
movs
push
inc
rol
mov
mov
pop
pop
dec
mov
call
xchg
mov
aas
dec
fbld
xor
xlat
std
jb
fistp
mov
js
in
and
pop
mov
mov
jno
call
pusha
gs
fsubr
xor
pusha
aas
ja
inc
mov
push
pop
imul
rcl
loope
mov
cwd
jne
push
inc
das
aad
xlat
mov
sub
int3
pop
sbb
shl
ret
jge
push
adc
cs
leave
inc
push
xor
mov
mov
je
mov
outs
push
aaa
cdq
inc
cmp
pusha
jmp
cmp
retf
stc
pushf
mov
fst
mov
pop
mov
inc
xor
mov
mov
pop
mov
sub
addr16
jnp
add
loopne
int3
dec
sub
inc
cmp
add
mov
cwde
jb
pop
je
(bad)
pop
jp
cdq
and
jb
dec
sub
sbb
enter
in
dec
pop
icebp
into
pop
mov
es
mov
cmps
sbb
fdivr
push
mov
push
mov
imul
or
out
stos
lods
sub
call
movs
cmc
dec
add
jmp
enter
pop
dec
push
cli
fdiv
xchg
or
adc
bnd
xchg
jae
jge
xor
out
out
les
adc
xor
aaa
mov
cmp
mov
outs
or
xchg
push
add
outs
mov
xchg
cmp
sbb
imul
mov
jae
add
popa
rcr
push
jle
call
jno
pop
lock
mov
pop
fstp
jo
out
jo
pop
adc
in
push
adc
test
push
scas
cmps
dec
cmp
(bad)
mov
arpl
mov
jb
mov
cli
aad
and
mov
sti
pop
dec
adc
or
xchg
js
mov
fcmovb
sbb
lds
or
daa
cwde
in
das
add
add
inc
mov
cmp
pop
xor
inc
dec
and
xchg
mov
mov
lock
stos
out
sbb
pushf
shl
xor
aaa
and
cmp
sahf
loope
pop
cmps
xor
and
push
retf
dec
in
test
inc
xchg
and
inc
sub
xor
sub
cmc
sub
inc
stos
add
loop
pop
mov
jecxz
test
push
sbb
cwde
aaa
(bad)
jl
fiadd
xchg
push
sbb
(bad)
inc
(bad)
stos
push
mov
stos
cwde
jl
bound
pop
sub
cs
jnp
cmp
movs
aas
pop
add
je
dec
inc
xchg
aas
aas
jge
cmps
mov
push
arpl
jnp
xchg
arpl
push
movs
mov
cmp
xor
leave
cmp
add
mov
in
(bad)
sub
sbb
jbe
imul
sbb
inc
fadd
inc
in
xchg
fdivr
sbb
shl
dec
sub
mov
enter
aas
xchg
sub
adc
jmp
cmp
mov
icebp
jnp
pop
inc
test
retf
fmul
cdq
dec
frstor
jge
icebp
pop
loope
jl
ror
dec
retf
ja
add
(bad)
push
jl
int3
xchg
fsub
add
push
adc
inc
jns
outs
cmp
mov
not
adc
sbb
je
sbb
imul
outs
rol
enter
adc
int
ins
adc
shl
jp
sub
retf
aaa
daa
xchg
out
mov
mov
push
enter
fadd
mov
sub
xor
push
ja
cmp
lock
cmp
jl
test
mov
das
mov
imul
mov
ss
pop
fdivr
mov
lds
fstp
outs
sbb
add
std
call
(bad)
shl
mov
ins
jp
push
push
in
jnp
mov
cmc
aaa
leave
loop
add
mov
push
rcr
test
icebp
jmp
xor
into
das
(bad)
and
xor
pop
push
inc
add
fstp
outs
pop
adc
cmp
lods
and
ror
or
inc
fcmovnu
jecxz
mov
rol
dec
dec
push
mov
aad
cmps
inc
or
fndisi(8087
loop
add
(bad)
out
mov
das
daa
push
imul
sbb
mov
sub
mov
adc
mov
nop
or
scas
sbb
push
test
scas
adc
sub
(bad)
daa
les
xchg
stos
jp
fbstp
inc
ret
scas
sub
test
iret
(bad)
les
mov
dec
mov
shr
arpl
cli
popa
push
popf
pop
mov
or
std
test
aad
xor
xchg
mov
sbb
nop
dec
dec
popa
push
div
pop
aas
jmp
imul
in
daa
cmps
adc
dec
ss
mov
adc
dec
xchg
fldenv
or
das
fdivr
lods
js
mov
not
jno
imul
jp
nop
dec
cmp
call
mov
bound
or
jmp
mov
jp
push
or
or
test
inc
dec
mov
fdecstp
push
test
cli
mov
or
js
sub
movs
lock
sbb
jmp
adc
sub
pop
out
xchg
inc
xor
push
in
xor
push
xor
pushf
xor
(bad)
dec
xchg
xchg
add
xchg
jbe
jl
outs
adc
push
jno
ret
mov
push
mov
mov
sbb
add
jecxz
retf
add
push
aad
push
jno
xchg
mov
xor
fmul
sub
ja
stos
aaa
or
sub
ins
xor
js
and
inc
imul
dec
popf
das
and
lea
inc
dec
jmp
aas
test
lods
push
icebp
ins
pop
icebp
inc
and
sahf
adc
lods
idiv
aad
dec
adc
retf
pop
push
mov
cmp
and
rcr
jno
cwde
jnp
popa
xchg
sbb
jecxz
imul
out
movs
pop
sub
icebp
stos
in
sub
sub
fmul
cs
shl
adc
je
stc
push
rol
fs
fwait
int3
adc
retf
data16
xchg
ret
jno
jmp
add
out
rcr
cmp
mov
pop
clc
xchg
ins
out
aam
xchg
mov
add
(bad)
sub
jg
in
(bad)
les
jp
(bad)
iret
sub
cmps
adc
pop
(bad)
pop
push
or
mov
iret
ins
movs
lods
loope
cmp
xchg
xchg
daa
mov
cmps
xor
cmp
xchg
not
clc
cmp
mov
gs
ja
mov
mov
les
mov
jecxz
(bad)
stc
add
test
sub
sub
jp
sub
mov
adc
rcl
sbb
ins
cmc
mov
push
pop
js
or
lds
in
popf
jbe
ds
push
cmp
retf
repz
add
or
or
or
enter
cmp
add
and
add
pop
hlt
pop
inc
add
push
add
push
sahf
add
jmp
mov
xor
call
fcom
or
mov
lods
sbb
fisttp
cmp
inc
shr
call
xchg
stos
rol
jmp
push
fimul
or
mov
jle
ja
cmp
pop
test
out
sbb
std
push
sub
fcmovnu
mov
xchg
sbb
pop
inc
push
fst
repnz
ins
mov
cmp
cmp
data16
std
xor
mov
or
push
jnp
aaa
fs
push
pop
cmps
dec
outs
push
sub
pusha
into
jecxz
fcomp
arpl
jbe
mov
in
dec
sbb
out
ror
ins
outs
pop
push
inc
adc
arpl
sbb
jmp
jae
arpl
add
jmp
sub
ret
ret
mov
mov
rol
in
dec
mov
popa
cli
rcr
mov
cmp
sub
ins
out
repnz
jp
mov
push
jle
aam
mov
loop
mov
repz
and
mov
addr16
dec
inc
push
outs
jmp
xchg
aas
mov
cmovle
mov
jge
out
mov
xor
pop
pusha
iret
and
and
push
mov
ins
sub
rol
fwait
arpl
xor
xchg
fdivr
xchg
add
loope
push
mov
(bad)
mov
ds
or
loop
inc
das
jnp
call
push
sbb
leave
dec
ror
stc
lods
inc
push
call
cmps
or
lds
or
imul
jbe
push
cmp
ret
push
movs
bound
push
inc
std
dec
into
jns
sub
ins
int
in
js
mov
sub
test
cdq
jns
mov
aad
ss
fidivr
jle
add
nop
fidiv
inc
ret
(bad)
add
cmp
test
fldenv
imul
or
stc
jge
add
mov
xor
(bad)
js
pop
sbb
mov
stos
add
lea
stos
dec
inc
push
push
sbb
jecxz
aad
push
icebp
ret
mov
enter
jp
sbb
or
fwait
ss
jmp
cdq
arpl
in
mov
mov
push
inc
cmp
push
in
jle
std
cmps
add
sti
movs
xchg
pop
es
push
nop
add
sub
mov
sub
cdq
xchg
not
inc
sbb
xlat
arpl
cdq
or
mov
sbb
mov
push
pop
cmp
aas
or
and
iret
mov
add
lahf
adc
adc
jge
in
enter
and
arpl
sub
adc
xchg
pop
inc
test
xchg
sbb
xchg
push
dec
mov
or
icebp
pop
mov
mov
sub
jb
mov
lock
push
(bad)
mov
aaa
inc
out
retf
push
cs
stc
(bad)
mov
push
and
mov
xchg
adc
push
jge
fdiv
ja
fst
dec
xchg
mov
xchg
fldenv
je
aaa
test
xor
test
inc
ret
test
or
mov
pop
repnz
jo
mov
aam
mov
jmp
je
sbb
les
movs
ds
xor
pop
push
out
(bad)
fldcw
ret
outs
cmc
push
addr16
iret
or
or
stc
dec
pusha
les
(bad)
jge
xchg
cmc
shr
in
mov
ror
cmp
mov
ret
dec
push
xor
int
mov
and
fidivr
rol
popf
imul
sbb
xchg
pop
cli
in
sub
jp
rol
sbb
jae
jmp
dec
mov
xchg
enter
adc
movs
xor
xchg
test
adc
adc
popa
fwait
popa
enter
and
or
pop
sti
arpl
icebp
push
or
ins
jns
out
rol
test
popf
inc
adc
jo
add
xor
jne
jmp
or
cmc
mov
sar
jmp
inc
push
push
inc
nop
sbb
lods
ret
popa
fist
xchg
dec
inc
or
lods
and
ss
fmul
dec
out
add
xchg
dec
xchg
sub
push
ds
dec
sbb
ror
sbb
int
add
xlat
call
sar
int
into
cwde
ret
pop
mov
nop
adc
mov
adc
cmp
mov
mov
aam
mov
xchg
mov
sub
inc
sti
inc
adc
pusha
imul
inc
dec
mov
cld
inc
out
mov
adc
jno
cdq
ins
xchg
fld
sub
xchg
xor
gs
stc
jp
jecxz
aam
cli
in
leave
cwde
or
adc
test
out
xlat
addr16
inc
fcmovnb
add
push
je
cmp
mov
xor
or
push
retf
fdiv
outs
and
cmps
pop
test
push
ret
jo
inc
enter
outs
das
arpl
xor
pop
out
loope
loopne
std
(bad)
pop
xlat
ret
cld
scas
sti
pusha
add
test
add
fsubr
push
inc
icebp
sub
(bad)
sbb
push
adc
jbe
movs
mov
movs
dec
adc
scas
xor
js
fstp
jmp
mov
cmps
push
mov
fstp
jno
dec
mov
out
mov
in
add
xlat
push
(bad)
adc
dec
(bad)
sti
mov
das
(bad)
in
ret
imul
test
outs
fstp
mov
sti
sub
add
or
mov
or
das
inc
push
fadd
ficom
hlt
(bad)
scas
es
hlt
mov
out
fsubr
fwait
aad
cld
inc
xchg
sti
sub
add
adc
sbb
ds
jb
xchg
adc
inc
push
test
test
clc
xchg
fisubr
push
dec
mov
adc
add
mov
out
mov
jns
push
icebp
sbb
loop
loope
repz
pusha
adc
push
inc
and
jb
ss
xchg
add
jecxz
outs
retf
pop
pop
(bad)
jl
jne
and
jmp
jle
ja
pop
xor
add
repz
call
xchg
ss
and
mov
rcl
xchg
outs
pushf
ficomp
iret
les
mov
add
pop
leave
cmp
mov
sub
repnz
cmps
xchg
jnp
sub
std
cmp
lea
popf
fsub
ret
int3
push
pop
mov
xchg
addr16
inc
mov
xor
xor
(bad)
sbb
mov
aaa
in
mov
cmc
dec
inc
leave
in
in
addr16
jno
dec
jmp
xchg
mov
(bad)
into
fiadd
loopne
retf
jg
test
inc
sub
test
imul
dec
pop
xor
add
das
mov
xor
sbb
outs
mov
nop
dec
addr16
jge
jp
scas
or
xchg
and
and
jbe
cmps
aam
shl
cmp
in
mov
jb
xor
sub
or
aad
imul
pop
pusha
shl
and
test
fld
pop
adc
sub
xchg
mov
loope
or
(bad)
jo
push
push
xchg
inc
mov
aam
imul
jne
pushf
jae
jl
jg
mov
loopne
cli
test
int
and
dec
out
out
xor
xchg
inc
repz
dec
jl
xchg
jne
jns
scas
mov
pop
nop
fistp
sub
scas
lods
mov
icebp
leave
jp
sbb
mov
xchg
and
loopne
jnp
mov
mov
mov
inc
jnp
cwde
mov
arpl
outs
mov
xchg
xchg
cld
out
xor
cmp
rol
xchg
mov
mov
push
rcr
fisttp
rol
cmps
shl
loop
mov
jl
adc
push
call
data16
gs
test
sub
cmc
sub
mov
jae
sar
outs
adc
fcmovne
call
addr16
in
xchg
adc
aad
sbb
(bad)
call
push
push
mov
sub
fadd
dec
f2xm1
in
lods
cmc
xor
sbb
ret
jp
lahf
push
lea
cmps
std
popa
cli
inc
cmc
jmp
add
sar
jmp
push
lods
test
retf
test
cmp
mov
xchg
ja
test
sub
test
and
dec
xchg
xor
sbb
cmps
lock
es
stc
push
xchg
pop
fmul
push
mov
mov
jne
xor
sahf
retf
cli
or
cli
movs
add
icebp
mov
nop
inc
pop
jmp
xchg
xchg
out
cmps
ins
retf
out
push
jl
shl
mov
aad
sbb
pop
and
mov
cwde
xchg
cmp
ret
pop
fisub
leave
add
adc
bound
leave
add
mov
mov
sar
xchg
mul
adc
gs
rcl
or
es
xchg
dec
stos
aas
stc
test
sti
add
mov
xor
dec
sbb
push
jp
sbb
int
scas
dec
inc
mov
and
inc
xlat
inc
int
mov
inc
std
nop
shl
rol
cli
cwde
inc
cmc
out
scas
push
add
or
test
inc
pop
sar
jmp
xor
mov
adc
xor
mov
cmp
stos
fdivr
pop
xor
xor
and
outs
test
cmp
iret
add
xchg
pop
or
mov
ret
and
lods
mov
jmp
push
sbb
push
retf
outs
mov
mov
nop
adc
loop
inc
add
add
dec
aam
jecxz
mov
xor
pop
jp
sbb
mov
outs
xchg
cmp
ja
(bad)
mov
jnp
cmp
push
or
leave
push
cmp
push
add
mov
call
xchg
xchg
mov
adc
(bad)
fld
arpl
pop
cmp
fist
outs
add
(bad)
mov
ja
bnd
inc
lods
pop
push
js
shr
dec
add
loop
or
not
mov
mov
push
rol
dec
pusha
fs
shl
add
add
lds
ins
div
push
cmp
mov
sub
xchg
inc
mov
push
jno
and
stos
xchg
in
jge
mov
mov
movs
fwait
mov
jmp
mov
and
dec
pop
and
lods
mov
cmp
cld
sub
or
dec
jge
scas
xor
sub
add
aam
rcr
adc
or
xchg
loop
inc
je
out
inc
gs
lahf
sub
or
retf
rcl
aam
sar
(bad)
dec
adc
mov
xor
fdiv
mov
jno
pop
lods
pop
jnp
jns
repnz
mov
cdq
aam
dec
mov
sub
jmp
mov
push
jp
xchg
fsubr
add
frstor
es
repz
add
inc
out
shl
pop
push
mov
mov
arpl
imul
cmp
mov
adc
xchg
dec
mov
test
call
test
xor
adc
sbb
jo
adc
lods
mul
xor
lock
inc
sub
bound
inc
xor
ret
cld
stos
adc
aam
popf
jmp
xchg
lods
adc
sub
mov
jne
ds
sbb
mov
dec
xor
mov
pop
add
or
cmp
dec
or
loope
stos
inc
jmp
test
adc
stos
leave
mov
arpl
lea
gs
xlat
out
or
sub
mov
and
add
jb
call
data16
sub
pop
outs
fwait
dec
push
cmp
mov
add
sti
out
test
das
aad
out
rol
loop
sbb
xchg
pop
fcomp
enter
pop
mov
xor
arpl
sbb
add
mov
jl
pop
(bad)
jle
fdiv
cmp
and
sub
pop
inc
mov
adc
loop
(bad)
leave
xchg
mov
add
call
aad
dec
push
mov
test
jecxz
jg
pop
mov
popf
repz
push
sub
xor
push
or
mov
xor
out
push
and
repz
xor
push
jl
out
pusha
repz
pop
mov
call
repz
lds
sahf
shr
icebp
add
call
mov
js
pop
mov
sub
(bad)
jmp
xchg
xor
sbb
js
int
add
mov
mov
rcr
add
cmp
dec
cld
enter
or
mov
retf
arpl
or
jp
push
adc
int3
jo
repz
xor
imul
sti
mov
arpl
add
inc
(bad)
(bad)
(bad)
add
mov
xchg
mov
lods
jno
jl
mov
enter
test
dec
popa
mov
imul
ss
out
cmp
mov
xchg
dec
inc
mov
mov
push
and
hlt
aad
cdq
dec
push
cmp
les
ins
push
popa
adc
loope
dec
rep
repnz
in
mov
outs
push
xor
mov
xor
xor
(bad)
dec
jo
mov
cmp
pop
mov
fcmovnbe
jne
mov
es
dec
pop
cli
and
imul
jne
out
push
push
retf
aas
adc
dec
inc
add
sbb
push
outs
pushf
outs
xor
sub
mov
pop
test
pusha
and
mov
jne
add
aad
inc
dec
push
(bad)
adc
rcl
adc
mov
mov
and
add
pusha
pop
inc
scas
lods
sbb
sar
jae
leave
and
inc
dec
fwait
add
test
sbb
sbb
push
xor
fisubr
and
mov
jo
rcr
push
lahf
inc
sbb
lock
(bad)
mov
dec
cmp
stos
jnp
loopne
arpl
lds
xchg
push
inc
rol
push
int3
hlt
jmp
je
in
fist
add
popa
(bad)
xor
xor
mov
jmp
repnz
push
lds
mov
pop
ss
ficom
je
rol
or
mov
xlat
(bad)
fild
loope
sub
sub
sbb
ins
iret
mov
call
jl
jne
mov
fs
add
and
cld
ret
fldenv
nop
xchg
jmp
das
pushf
fwait
aam
or
outs
adc
test
dec
mov
shl
push
daa
in
pop
xchg
push
mov
ret
xor
aad
xchg
add
jbe
aaa
ins
(bad)
jae
add
pop
out
pop
jle
mov
(bad)
fsubr
sbb
inc
xchg
ins
out
sfence
mov
aad
inc
add
sahf
fist
jle
bound
pop
mov
dec
int
pop
or
and
scas
daa
and
and
enter
ror
mov
pop
pop
sbb
xchg
pop
mov
cs
cmp
mov
or
jle
pop
shl
sub
into
call
repnz
shl
outs
fidivr
int
mov
inc
cmp
inc
jmp
shld
inc
js
add
mov
fmul
inc
dec
loop
fiadd
xlat
fcmovb
(bad)
inc
add
inc
jbe
ja
or
xchg
xchg
push
xor
xlat
repz
in
push
and
xchg
dec
ror
fxch
fpatan
and
enter
push
mov
sub
xor
jb
cmps
retf
ins
xchg
cld
mov
loope
scas
daa
jno
sbb
ret
xchg
xlat
stc
scas
push
push
repnz
cmp
leave
push
call
jp
jns
sbb
ret
xor
loopne
test
icebp
hlt
ret
fisubr
cmp
cmp
movs
outs
jb
push
mov
out
into
mov
mov
mov
push
jmp
mov
sbb
mov
dec
push
add
xchg
mov
ffree
inc
les
ret
xlat
cmp
inc
mov
xor
lock
inc
jo
mov
xor
mov
and
test
jge
aam
scas
clc
movs
(bad)
cmps
bound
push
ja
sbb
fiadd
(bad)
ficomp
(bad)
fdivr
push
enter
sub
inc
xchg
test
and
ret
or
call
lds
sbb
stc
scas
xchg
hlt
jnp
sub
cmp
lock
xchg
cld
or
mov
dec
sub
mov
mul
loope
xlat
sub
and
ret
movs
addr16
out
mov
sub
iret
int
arpl
push
mov
lock
dec
out
in
mov
dec
xor
dec
inc
jns
inc
fdivr
xor
jl
xor
in
int
xchg
fwait
cmps
push
(bad)
jg
popa
mov
sub
arpl
push
cs
mov
push
xor
pop
mov
sbb
in
dec
imul
lahf
jo
test
xchg
mov
scas
dec
and
dec
outs
push
jb
inc
sbb
fwait
mov
and
xchg
mov
int
jnp
xor
cmp
jl
ja
int3
dec
xor
mov
jbe
ret
push
push
cmp
inc
sub
mov
add
cli
std
inc
sahf
lea
sbb
xchg
loop
mov
jmp
pop
mov
add
adc
in
jp
(bad)
lods
int3
sar
fisub
pusha
dec
pop
dec
in
popa
and
mov
or
and
loope
out
fwait
repnz
cmp
push
mov
lods
xor
fild
push
cs
and
mov
adc
pop
cmp
add
ja
cmp
push
dec
loop
sub
mov
rcl
fiadd
xor
cmp
repnz
scas
mov
sub
fucom
imul
sbb
out
mov
int
nop
fcmove
xor
push
and
lock
dec
rol
imul
idiv
sti
das
ror
stc
mov
dec
or
mov
(bad)
jg
pusha
pop
ret
in
pop
int
(bad)
cdq
shl
call
test
mov
mov
fist
out
clc
jb
inc
and
movs
jbe
ret
out
sub
mov
sub
cwde
inc
cmp
inc
rol
xor
loop
call
sub
out
jmp
cdq
ja
mov
add
ficomp
retf
push
test
push
mov
mov
bound
out
jl
inc
add
jno
fisub
mov
add
sbb
jecxz
xchg
mov
shl
mov
rcr
movs
repnz
lods
push
mov
es
pop
int
cmp
pop
mov
and
push
out
mov
adc
push
sub
xchg
aaa
test
(bad)
mov
xchg
sub
int3
xchg
cmps
outs
inc
fiadd
xchg
das
lods
xor
(bad)
mov
and
pop
dec
je
sub
sbb
inc
xchg
call
in
push
pop
cld
push
repnz
call
push
dec
cmps
int3
pop
arpl
fmul
mov
push
loopne
test
shl
es
inc
mov
jg
fs
and
push
fwait
mov
sar
dec
imul
and
sbb
dec
lods
or
scas
jg
call
or
or
mov
stos
dec
pop
retf
push
or
hlt
leave
mov
mov
ins
jo
pushf
repnz
sbb
in
jb
jo
adc
(bad)
xchg
std
jne
xchg
cmp
pop
je
jmp
add
push
inc
dec
cmp
mov
repz
xor
mov
sbb
loopne
shl
lock
lods
jg
xchg
sbb
mov
jae
mov
hlt
inc
pusha
cmp
xchg
mov
or
test
push
push
sbb
repnz
mov
lods
lods
sti
fist
push
pushf
mov
adc
inc
and
dec
jl
xchg
pop
enter
sbb
in
sbb
daa
jb
icebp
push
js
mov
mov
enter
cwde
test
or
scas
stc
ins
pushf
or
jne
lahf
xchg
xchg
inc
repz
ret
sub
and
stos
out
xchg
xchg
rcl
xor
gs
mov
(bad)
xchg
cli
sbb
aaa
xchg
inc
mov
mov
mov
retf
push
adc
xchg
cmp
dec
pop
mov
mov
xchg
leave
jnp
adc
daa
inc
push
jb
(bad)
push
mov
xor
dec
push
loop
pop
sbb
sbb
or
in
xchg
adc
xor
es
rcr
repz
test
mov
cwde
shl
add
mov
sub
std
ss
icebp
mov
mov
and
stos
pop
cwde
mov
popa
addr16
fidiv
cmp
push
das
fnstcw
aam
add
xchg
mov
mov
int
rol
test
icebp
dec
add
fld
xchg
mov
aad
inc
inc
jecxz
add
jo
cwde
pop
(bad)
push
push
icebp
test
imul
imul
(bad)
aas
outs
into
(bad)
jecxz
shr
repz
arpl
arpl
nop
dec
call
dec
(bad)
fmul
imul
xor
cld
dec
jae
cmp
cs
repnz
adc
or
mov
or
jns
ret
xchg
sub
int
jo
mov
out
imul
or
jge
jb
push
ret
pop
ret
xchg
and
mov
les
xor
aam
sbb
mov
(bad)
jg
out
jb
xchg
mov
dec
test
fcmovnb
xor
pop
ja
pop
rol
xchg
fadd
sbb
pop
shl
xor
jp
jmp
mov
push
dec
icebp
jb
xchg
dec
and
mov
sbb
mov
xchg
jecxz
loope
loope
or
stos
cmp
mov
in
push
ja
mov
data16
ffree
gs
mov
sbb
imul
retf
das
pop
outs
outs
in
test
add
inc
ja
sub
add
test
mov
repnz
sahf
test
mov
xchg
fwait
shl
ja
popa
test
mov
mov
push
loope
xor
loop
and
arpl
ja
pop
retf
dec
add
jb
sub
(bad)
dec
sbb
out
rcr
mov
and
out
inc
scas
daa
mov
mov
pop
sbb
dec
pop
je
das
jo
imul
aad
xchg
js
add
ret
jnp
mov
loope
loopne
clc
pop
(bad)
jnp
jne
jo
xchg
cwde
add
inc
mov
(bad)
mov
add
mov
stc
aam
sbb
mov
adc
lods
pop
or
popa
sbb
jmp
adc
jg
outs
sub
fdivr
jmp
mul
jmp
jnp
dec
fwait
push
cmp
(bad)
(bad)
push
shr
outs
iret
arpl
(bad)
jle
add
pop
jecxz
mov
inc
pop
in
lods
xor
add
retfw
es
out
mov
xchg
enter
(bad)
icebp
mov
xchg
cmp
mov
add
sbb
mov
cld
aaa
push
lods
int3
addr16
adc
xchg
add
lods
cmp
nop
jnp
std
cwde
or
stos
arpl
aas
mov
push
mov
jle
(bad)
std
jle
xchg
nop
xchg
int3
loop
add
lock
lahf
push
cmp
int
(bad)
lock
ins
adc
jmp
test
test
cmp
cmp
jmp
ins
jmp
loopne
je
mov
push
cmp
inc
sti
das
sbb
pop
int3
mov
or
(bad)
stos
push
push
jp
sbb
inc
inc
and
push
push
sbb
pop
or
mov
test
push
mov
mov
inc
outs
pop
jne
and
ss
test
ror
daa
mov
sbb
cmps
xor
xor
add
sub
in
mov
aas
cmc
mov
(bad)
sub
imul
mov
arpl
fist
sbb
and
test
jge
mov
out
adc
out
xor
ret
push
lods
(bad)
es
lds
xor
mov
gs
retf
dec
imul
adc
bound
add
test
(bad)
jmp
leave
imul
popf
mov
inc
xor
hlt
stc
and
or
into
mov
adc
loopne
pop
shl
lods
fldln2
push
and
xchg
xchg
or
xchg
mov
push
and
cmp
dec
or
xor
sub
imul
jo
jnp
cmp
mov
push
das
jge
in
iret
int3
dec
movs
pop
ja
mov
aam
adc
jge
and
sub
xor
mov
add
cli
add
and
pusha
icebp
loopne
add
out
xchg
cmps
ins
lods
jmp
(bad)
fs
ins
push
sub
movs
push
fnstenv
adc
in
movs
or
pushf
lock
test
sbb
inc
scas
inc
movs
(bad)
arpl
mov
inc
leave
stc
adc
dec
cs
push
scas
xor
sub
fs
and
lock
and
int
push
jo
cmps
aad
and
mov
pop
push
inc
sahf
sub
call
mov
call
jmp
ins
inc
(bad)
mov
pop
add
stos
repz
pushf
scas
xchg
(bad)
mov
cmp
das
test
mov
add
cmp
mov
jno
sbb
jns
out
fist
adc
out
test
arpl
jge
cmp
xchg
cmc
mov
paddusw
cmp
dec
(bad)
lock
(bad)
cmps
inc
neg
inc
push
pop
jmp
int3
and
pusha
jb
and
scas
fwait
cli
dec
adc
ins
mov
xchg
stos
aaa
pop
test
pop
xor
arpl
(bad)
fidivr
jp
xor
hlt
push
inc
xor
push
dec
imul
aam
xchg
cmp
cmp
or
dec
jmp
pop
adc
dec
(bad)
ret
fs
into
cmp
pop
in
out
jle
scas
pop
xchg
sub
and
dec
jb
cmp
out
in
les
xchg
int3
pop
jb
popa
mov
fsub
popa
movs
pop
aam
jmp
inc
retf
mov
loop
pop
lods
and
ret
sbb
mov
jne
dec
and
out
ins
push
push
xor
loop
rcr
rcr
mov
hlt
call
(bad)
inc
mov
pop
addr16
cmp
sub
sub
pop
sbb
dec
pop
mov
sub
mov
push
jb
mov
inc
mul
mov
out
into
dec
sti
jo
dec
popa
daa
push
nop
mov
push
lods
int
inc
and
in
pop
push
mov
inc
xchg
adc
xchg
pop
daa
js
jbe
daa
inc
sub
sbb
int
mov
adc
into
mov
or
not
push
pop
iret
dec
push
xchg
jge
or
mov
mov
int3
or
movs
cs
in
xor
ins
in
inc
pop
dec
out
push
add
mov
sbb
je
xor
lods
push
xlat
int
mov
xlat
add
test
cli
jp
add
fmul
cdq
cmp
lods
cmps
(bad)
pusha
push
and
jbe
(bad)
dec
pop
inc
sti
ins
repnz
retf
mov
jnp
fwait
push
fistp
outs
data16
scas
mov
push
cmp
out
imul
or
adc
mov
pusha
mov
mov
sbb
mov
(bad)
sbb
aad
ins
xor
cmp
push
mul
loope
or
pop
push
cmc
dec
lods
retf
movzx
or
inc
leave
xor
or
adc
push
or
gs
dec
push
mov
jne
xor
lea
xor
add
mov
mov
cmps
jp
cmp
or
inc
rol
mov
push
inc
and
dec
mov
cli
jle
enter
arpl
cdq
or
xor
sbb
stos
(bad)
out
rcl
lahf
fwait
pop
pop
jae
push
neg
movs
adc
mov
adc
call
pop
mov
sub
cmp
mov
jnp
sbb
or
lahf
pushf
xchg
pop
fs
inc
push
in
fldlg2
fnsave
push
fist
test
sti
lock
mov
sub
pop
xor
inc
fdivr
pop
dec
iret
jmp
call
retf
ss
iret
xchg
in
aaa
jg
and
pop
or
sub
xor
in
das
mov
add
inc
hlt
dec
push
pop
xchg
dec
int
xchg
add
fild
clc
mov
or
add
and
gs
mov
mov
mov
(bad)
xor
pop
add
add
jae
push
test
test
or
dec
out
shr
push
(bad)
arpl
scas
inc
or
call
push
std
dec
xor
pop
mov
pusha
pop
popa
sub
cdq
add
lahf
shl
test
or
retf
sbb
dec
sbb
je
idiv
sbb
out
adc
int3
shl
add
xchg
test
and
jb
imul
add
stos
mov
pop
sar
ins
sti
cmp
xchg
pushf
mov
cmps
mov
pop
imul
adc
in
or
retf
hlt
fdiv
sub
pop
js
cld
mov
mov
xor
idiv
sbb
add
mov
sub
lods
cmp
test
iret
into
lds
push
dec
inc
test
out
test
pusha
fwait
dec
je
mov
dec
leave
xchg
sbb
mov
int
dec
dec
(bad)
(bad)
xchg
jo
push
(bad)
pop
imul
sub
cld
push
inc
sbb
lods
mov
fisubr
sub
xlat
(bad)
(bad)
sub
int3
cmp
cdq
mov
out
ja
pop
aam
sti
add
daa
test
mov
jp
sub
cmp
xchg
out
dec
xchg
out
add
pop
and
mov
sbb
and
stc
mov
test
sar
jne
dec
std
pop
mov
pop
dec
loop
sti
or
cmp
xor
call
xor
jge
mov
repnz
fiadd
xor
(bad)
adc
add
je
adc
pop
pop
outs
cmp
fistp
and
push
jo
dec
ins
ror
inc
xlat
sbb
scas
inc
stc
or
add
retw
or
xor
sar
popa
ja
push
sub
cs
xor
(bad)
(bad)
cmc
jecxz
out
sbb
mov
inc
adc
sbb
add
jg
pop
sub
mov
or
loope
bound
retf
pusha
jae
stc
test
dec
xchg
sub
jl
mov
adc
shl
out
sub
mov
xor
in
xchg
addr16
loope
fs
test
or
ret
xor
in
loopne
sub
mov
push
mov
les
xor
sahf
lods
ficomp
or
into
push
inc
mov
loopne
sub
shl
into
es
stos
mov
fbld
cmp
arpl
fs
xchg
or
lock
dec
cmp
sub
sub
sub
cld
kxnorb
inc
inc
enter
aaa
scas
loope
mov
lahf
dec
rcl
cld
out
xchg
mov
loop
xchg
xchg
mov
mov
pop
jnp
xor
mov
(bad)
test
aam
inc
(bad)
(bad)
mov
nop
sub
(bad)
fistp
cmp
mov
jmp
popa
lods
xor
push
add
ins
data16
jo
call
clc
das
jnp
bound
ret
lods
or
(bad)
inc
mov
cmp
sbb
mov
lods
mov
loope
fs
stos
mov
cs
inc
inc
mov
xor
jmp
jge
pop
pop
push
fisubr
add
mov
sub
mov
or
fld
and
repnz
fild
add
ja
add
and
(bad)
inc
xor
push
inc
ins
rcl
jno
(bad)
hlt
cli
xchg
push
shl
or
sub
lock
les
movs
in
cmp
rol
jmp
pushf
pop
test
test
mov
sub
mov
add
retf
std
and
scas
add
sbb
enter
and
aas
popf
loopne
sbb
call
mov
popf
fld
dec
cli
dec
movs
out
rcr
pop
cmp
and
mov
pavgb
cmp
stos
in
fdiv
aas
cmp
scas
mov
(bad)
xchg
fwait
vxorps
ja
(bad)
xchg
daa
popa
mov
xor
fimul
adc
movs
jg
nop
sub
int3
or
stos
xchg
push
rcl
scas
jecxz
pop
sub
sub
in
dec
or
addr16
jecxz
jmp
hlt
test
sbb
aad
inc
aam
push
adc
loop
dec
imul
nop
lock
retf
je
ds
ja
aas
scas
dec
retf
outs
in
dec
and
dec
or
test
inc
push
jp
(bad)
and
fbstp
clc
inc
push
jb
add
sbb
ins
shl
mov
xor
adc
sub
mov
pop
(bad)
cmp
adc
or
and
sub
add
retf
sti
test
xchg
inc
jecxz
mov
pop
cmps
mov
cmp
into
neg
sbb
cmps
xchg
jmp
jae
scas
imul
adc
inc
sbb
daa
in
ret
jecxz
xchg
add
add
mov
sar
jecxz
xchg
mov
xchg
adc
aaa
jbe
xor
cmp
rol
pop
fwait
les
or
push
xor
iret
(bad)
sub
mov
mov
xor
mov
outs
fs
mov
mov
rcr
jecxz
and
pop
enter
sbb
inc
(bad)
scas
iret
aam
scas
lock
iret
(bad)
int3
imul
xchg
fmul
xchg
xchg
push
or
xor
test
push
mov
or
bound
jb
mov
inc
and
repnz
cmp
dec
jge
nop
jae
inc
push
popa
adc
or
jg
pusha
cmc
(bad)
sbb
dec
add
cld
pop
inc
or
mov
lods
aaa
xchg
inc
fcomp
jno
dec
mov
cmps
sbb
add
pop
ja
or
adc
ja
and
mov
fwait
into
push
push
je
add
cs
cld
hlt
ret
cld
enter
cmp
or
int
mov
mov
pusha
loope
xor
cmp
xchg
addr16
aas
fisttp
test
dec
xchg
sahf
and
loop
xchg
mov
sbb
leave
fs
jbe
enter
sahf
mov
imul
int3
inc
js
ds
lea
cmp
mov
pop
mov
or
sbb
ficomp
nop
xor
mov
cmps
sbb
aaa
mov
dec
dec
std
xor
es
lods
ja
shl
fmulp
pop
(bad)
and
mov
mov
ja
scas
ds
sbb
adc
push
xchg
add
xchg
push
and
retf
fsubr
repz
addr16
xor
test
daa
lea
sub
ja
pop
mov
pop
(bad)
aaa
hlt
lods
mov
lea
push
adc
push
out
retf
xchg
add
cmps
es
mov
mov
std
jmp
jg
clc
in
jbe
adc
popa
adc
adc
xchg
gs
aam
add
xchg
pop
in
or
dec
lds
movs
adc
add
mov
pop
xchg
push
cmps
daa
pusha
std
mov
mov
std
imul
hlt
sbb
ret
push
mov
fimul
lahf
xchg
clc
mov
xchg
clc
sbb
xchg
mov
cld
call
aad
rol
lds
or
sub
push
(bad)
or
inc
ss
sub
call
cmp
and
repz
or
(bad)
mov
cdq
jmp
xchg
add
xchg
test
popa
adc
xchg
mov
ret
jmp
xchg
loop
out
sbb
(bad)
outs
mov
(bad)
ds
push
jp
pop
inc
pop
inc
add
in
pushf
in
adc
adc
and
adc
or
ss
pop
lods
or
cld
sbb
fs
je
fs
cmc
(bad)
push
inc
mov
xchg
loopne
scas
push
lahf
mov
or
sbb
xor
cmp
outs
xlat
lods
push
cmc
mov
jmp
repnz
daa
mov
inc
test
cmp
xor
(bad)
mov
scas
sub
js
jge
and
cmp
mov
repnz
aas
sub
in
loop
xor
dec
ret
stos
in
xor
pop
fisubr
mov
(bad)
(bad)
retf
arpl
scas
cmp
ins
and
xor
iret
pop
call
xlat
add
into
leave
shl
ins
push
sub
pop
leave
iret
mov
push
and
mov
sbb
dec
(bad)
jne
iret
pop
mov
mov
push
jle
imul
push
pop
mov
add
sar
xchg
jbe
into
adc
inc
inc
scas
sub
sar
mov
cmp
mov
mov
xchg
inc
ins
cmp
daa
inc
icebp
out
fldenv
sub
push
mov
retf
out
std
fdiv
pop
inc
add
mov
(bad)
in
pop
cmp
js
call
jl
leave
ret
jecxz
pusha
aad
test
sbb
ins
out
pop
out
adc
lods
fnsave
fs
lock
mov
into
mov
sbb
jnp
aad
xor
sbb
pop
mov
in
add
sbb
shl
or
xor
and
sahf
or
sar
aam
cmps
stos
lds
or
lock
lock
imul
cli
sub
lahf
pop
add
scas
and
nop
or
add
stos
cmovnp
dec
icebp
ss
and
push
jmp
pop
xchg
cdq
movs
dec
and
mov
retf
leave
inc
cmp
xchg
in
mov
sbb
fmul
(bad)
(bad)
push
push
mov
into
sub
fst
dec
pop
mov
pop
adc
add
sbb
sub
dec
adc
das
loopne
repnz
sub
mov
mov
jnp
std
xor
sbb
addr16
loope
sbb
jne
sar
pop
mov
scas
(bad)
lock
cmp
mov
or
sbb
mov
fs
sbb
sahf
pop
mov
add
out
adc
(bad)
dec
jmp
sub
jb
push
jecxz
cmp
clc
ja
test
and
sbb
xor
dec
sbb
mov
sub
imul
arpl
ss
clc
inc
pop
push
jmp
jnp
pop
xor
inc
sbb
stos
sub
or
sbb
popf
adc
movs
(bad)
jmp
ins
fcomip
sub
xchg
adc
xchg
int
mov
inc
sar
retf
int
cs
loope
aam
loopne
rcr
pop
xor
mov
xor
mov
dec
xchg
pop
jecxz
leave
int
shr
jl
cli
sti
std
mov
loopne
inc
loopne
sti
rol
ins
push
inc
add
test
dec
rcr
push
lea
fcmovb
dec
add
cmp
and
outs
in
mov
xchg
dec
dec
fstp
sub
hlt
mov
mov
(bad)
xchg
fwait
adc
and
add
fidivr
or
test
push
or
xor
arpl
sub
jns
jno
jmp
and
xchg
fwait
jge
sub
aam
jmp
(bad)
add
cmc
jl
test
adc
adc
aaa
add
sub
fdivp
jnp
ins
jl
ins
div
sub
jecxz
push
dec
push
sar
jecxz
xor
or
adc
popa
enter
mov
xchg
sub
ror
mov
and
ret
or
mov
and
loopne
ins
imul
pop
cld
out
(bad)
repz
sub
rcr
jo
mov
xchg
(bad)
out
sub
adc
or
lds
mov
push
jge
adc
xchg
jmp
xor
sbb
out
push
xor
clc
loop
push
xchg
sub
jmp
popa
int
outs
or
xchg
inc
in
aad
mov
and
jne
cmp
(bad)
dec
fs
popa
ja
pop
pop
pusha
xchg
(bad)
cli
xor
inc
je
sbb
inc
dec
stc
loopne
std
cwde
jecxz
stos
push
xor
mov
push
push
inc
pushf
out
pop
mov
fidiv
adc
mov
fidiv
xchg
fmul
fisubr
mov
gs
and
jns
mov
pop
jge
rcr
fwait
mul
(bad)
loope
dec
out
xchg
add
cmp
into
stos
loop
cmp
sti
jp
cmp
adc
outs
aas
mov
repnz
push
xchg
rcr
mov
cld
imul
mov
sub
dec
movs
loope
sar
pop
mov
into
stc
or
push
aas
retf
repnz
push
push
sub
adc
mov
dec
xchg
mov
test
mov
pop
pushf
mov
cmp
add
ret
mov
or
(bad)
cld
mov
sub
adc
jle
push
sbb
pop
dec
pop
popf
xchg
pop
addr16
rol
rol
jmp
dec
shl
cmp
shl
mov
or
jnp
or
loop
fadd
pop
jle
ja
js
xor
hlt
mov
mov
jecxz
stos
lods
retf
push
push
pop
repz
je
inc
std
sub
sbb
(bad)
les
mov
imul
jno
or
lods
mov
(bad)
ins
(bad)
stc
fwait
and
imul
mov
inc
mov
cmc
xchg
pop
fdiv
in
sbb
out
dec
sbb
jle
aas
xor
jle
aaa
jb
scas
sub
adc
or
jae
stos
mov
mov
rcr
mov
ret
retf
aaa
pop
scas
push
and
fnstcw
scas
mov
gs
add
outs
mov
mov
add
dec
dec
xor
or
bound
daa
mov
movs
fdiv
inc
xor
dec
imul
sbb
stos
or
and
dec
xchg
xor
xor
stos
sysret
dec
inc
xchg
mov
jmp
retf
pop
inc
add
dec
daa
sub
call
nop
popa
adc
pop
loop
push
ins
mov
mov
jg
into
add
mov
pushf
adc
push
shl
pop
int3
mov
push
mov
imul
scas
jo
mov
mov
fstp
out
mov
out
mov
outs
and
mov
cmp
mov
add
pusha
std
xor
dec
mul
xchg
lea
dec
pop
inc
pop
cmp
mov
jmp
test
jb
ins
dec
push
mov
lahf
push
mov
jbe
or
xchg
sbb
test
jns
and
psubw
retf
mov
enter
shl
out
in
jl
cmps
push
fst
cmp
int
mov
pop
sbb
lock
shr
xchg
call
inc
adc
jmp
and
cs
and
idiv
adc
cli
or
mov
xchg
adc
js
or
(bad)
aam
outs
int3
(bad)
lea
adc
cmp
loope
and
xchg
cmp
jge
sub
inc
int3
out
inc
(bad)
retf
or
fldenv
mov
mov
jle
out
and
pop
add
clc
mov
jae
mov
xchg
stc
push
(bad)
in
fwait
out
push
jmp
imul
sub
mov
mov
stos
or
outs
or
inc
scas
rol
arpl
xor
sbb
ds
stos
rol
xchg
push
sbb
fimul
push
ds
mov
and
rcr
mov
xchg
mov
pop
mov
pop
jne
add
sub
pop
aas
inc
mov
pop
pop
push
push
add
fst
cmps
jecxz
test
jbe
fmul
in
pop
movs
sbb
scas
push
outs
dec
sub
fwait
(bad)
push
xor
push
add
ja
mov
cld
test
iret
and
jno
or
test
xchg
dec
test
mov
xchg
scas
sub
out
jne
js
jbe
or
jmp
hlt
and
sub
adc
fs
not
jp
outs
aad
movs
and
push
xchg
imul
cmps
in
fdiv
mov
jmp
loopne
cs
pop
pusha
ja
mov
jmp
sbb
mov
cmp
pop
sbb
fadd
add
stc
jns
push
aam
jmp
(bad)
int
sub
push
rcl
push
jecxz
mov
mov
or
fistp
xor
sbb
xchg
jmp
enter
out
(bad)
push
out
out
inc
fwait
out
jo
daa
rcl
jmp
xchg
loop
mov
inc
test
mov
mov
test
(bad)
cmp
js
cmp
aad
lea
xor
retf
icebp
aaa
ror
push
cs
rcl
mov
mov
sbb
je
in
aas
push
aad
or
mov
(bad)
ss
sbb
sbb
test
sbb
test
idiv
add
fnsave
mov
stos
or
mov
dec
cmc
in
jmp
jb
fdivp
pop
addr16
stc
xor
pushf
pop
jne
and
sub
sbb
pop
dec
enter
xor
lds
or
stos
clc
sub
xchg
dec
mov
enter
push
(bad)
jg
leave
out
cmp
loope
fs
or
jbe
into
push
(bad)
(bad)
ret
dec
sbb
adc
fs
jg
nop
sub
call
sbb
sbb
sbb
movs
daa
into
out
retf
push
mov
and
dec
jge
fwait
inc
ror
and
xchg
xchg
ror
ficom
inc
sub
dec
test
jno
int3
lods
sbb
jbe
add
out
fidivr
cmp
in
fmul
jmp
jnp
sbb
rol
rol
cmp
fbld
in
cmp
fmul
fmul
xchg
jge
mov
inc
lods
sub
mov
push
jle
out
(bad)
mov
xchg
retf
cmp
sbb
popf
mov
xlat
mov
or
mov
out
loope
les
(bad)
es
pop
mov
adc
movs
inc
and
add
adc
pop
add
cmp
ins
lock
mov
ins
clc
push
xchg
sti
mov
adc
mov
add
movs
mov
mov
out
sbb
adc
rcr
enter
bnd
push
test
xlat
jp
dec
aaa
enter
or
sti
fld
push
in
xchg
outs
cmps
cdq
or
es
lods
xor
add
cdq
mov
push
addr16
cmp
inc
sbb
mov
stos
(bad)
mov
pop
nop
cmp
inc
cmp
shr
call
test
pop
jl
inc
push
cdq
pop
jp
in
push
sahf
sbb
repnz
xchg
or
jmp
aaa
push
fidivr
mov
fmulp
fidiv
add
rcr
and
mov
je
ror
jmp
pushf
fcmovne
sub
mov
push
test
retf
adc
mov
rol
lahf
sti
mov
xchg
pushf
mov
xlat
outs
mov
pushf
imul
pop
push
and
faddp
inc
dec
or
pop
pop
(bad)
imul
pop
push
sub
call
xchg
and
jecxz
clc
mov
std
inc
xor
scas
mov
jae
stos
ret
ret
pop
mov
jp
mov
hlt
add
xchg
xor
aas
in
pushf
xchg
mov
bnd
xor
clc
mov
mov
test
iret
dec
sub
or
pusha
pop
(bad)
xchg
inc
jl
outs
leave
xor
fst
(bad)
jmp
(bad)
jp
lods
xchg
pop
mov
push
repnz
lods
jae
bnd
cmps
jae
js
xchg
sub
cdq
fadd
call
mov
adc
xchg
fnstsw
stos
mov
xor
cmps
cmp
popa
ins
popa
mov
(bad)
or
(bad)
or
jge
hlt
test
xlat
pop
cmps
loop
cmc
jle
outs
cmp
mov
xchg
fcom
sbb
inc
cmp
les
push
sbb
xchg
call
pop
mov
and
fmulp
sub
xchg
jnp
xchg
aas
lods
inc
xchg
cwde
retf
add
jbe
mov
es
outs
cmp
imul
shr
fnstenv
cmp
pop
adc
xchg
xchg
cmp
mov
aam
mov
call
pop
pop
or
movs
xor
int
jecxz
pusha
aaa
cmc
xchg
xchg
dec
imul
addr16
mov
or
pop
sbb
lds
rcr
pop
mov
jge
xchg
cmp
add
sub
pop
mov
dec
rcl
scas
(bad)
cmp
lods
xor
xor
xchg
xor
jmp
arpl
xchg
cmp
mov
addr16
xchg
push
loopne
aas
js
push
js
fisttp
out
jbe
vpunpcklwd
mov
shl
xlat
mov
mov
jmp
dec
dec
inc
cmps
mov
sbb
aaa
(bad)
(bad)
jg
mov
mov
inc
int3
(bad)
sysexit
push
test
in
cs
cmp
mov
enter
push
mov
inc
or
dec
lods
int
rcl
push
mov
cld
ds
rol
out
and
out
aam
xor
lods
mov
jmp
fstp
push
stos
add
std
pop
add
int
mov
pop
(bad)
out
and
(bad)
in
bswap
pop
mov
arpl
retf
outs
mov
pop
jne
xchg
mov
pushf
btc
xor
dec
jb
jo
mov
in
cmp
bnd
gs
stc
inc
cld
pop
or
rcr
(bad)
popa
dec
leave
xchg
jnp
(bad)
icebp
mov
movs
les
sub
dec
sub
(bad)
mov
popa
addr16
std
lock
lods
mov
and
shl
mov
push
pop
jge
test
sbb
pop
xchg
pop
ret
test
std
add
stos
nop
pop
sbb
sub
mov
inc
xor
add
arpl
xor
mov
call
retf
iret
sbb
push
mov
jnp
adc
pop
mov
push
scas
out
mov
mov
stos
or
sbb
popf
popf
(bad)
int3
fdiv
sbb
iret
xchg
adc
xchg
call
pop
xor
or
sti
test
and
adc
cmp
xor
sbb
rcl
mov
jl
stos
adc
sub
stc
rol
dec
mov
push
out
push
addr16
jbe
shl
cs
push
adc
pop
pusha
fcmovb
movs
jge
repz
jno
and
push
pop
cmps
std
jne
ret
sub
mov
mov
mov
pop
clc
add
test
es
popf
retf
mov
adc
cmp
pop
ret
rcr
fst
jne
in
jmp
xor
push
xchg
je
enter
ret
push
xor
sbb
ja
mov
pop
mov
adc
adc
sbb
ret
fs
xchg
jle
lea
push
shr
add
fistp
cld
and
sbb
xor
fs
test
xchg
or
and
movs
leave
xor
repnz
addr16
lods
outs
(bad)
jo
dec
js
popa
ins
fcom
stc
jle
or
rol
sbb
jmp
daa
adc
mov
ret
shl
dec
mov
pop
(bad)
aas
fist
mov
test
mov
cmp
mov
fcomp
mov
ds
(bad)
into
add
push
dec
and
in
and
push
outs
arpl
inc
sub
push
jl
mov
test
push
sub
mov
adc
sub
js
clc
and
stos
mov
neg
pop
add
inc
pop
cmp
leave
adc
aad
lock
dec
cmp
inc
xor
daa
idiv
sbb
out
fdivr
xchg
and
les
arpl
in
adc
mov
js
and
test
and
mov
mov
inc
jb
sub
les
pop
pusha
test
mov
sbb
pop
scas
mov
adc
jge
sti
enter
push
mov
test
and
dec
jg
int
jg
not
mov
xchg
inc
xor
fnstsw
mov
iret
xor
mov
mov
pop
cmp
xchg
push
inc
das
cwde
push
sar
or
mov
cmc
dec
jp
or
cmp
jb
lahf
and
not
mov
fdivr
cmp
out
stos
cmp
(bad)
clc
adc
daa
sub
xchg
and
cli
xor
cmp
dec
xchg
ds
aam
and
adc
xlat
shl
lods
or
mov
test
stc
adc
mov
mov
add
push
push
out
xor
jle
add
cmps
scas
add
rcl
push
xor
and
and
push
mov
loope
out
adc
int3
in
adc
sbb
(bad)
idiv
sbb
dec
ss
rcl
cld
cmp
jb
in
add
in
aas
mov
cmp
pop
xor
or
ins
add
ss
cmc
jmp
push
fist
or
je
fcmovnbe
bound
call
mov
add
sub
sub
add
(bad)
in
stos
sbb
push
mov
inc
in
push
sub
inc
in
sbb
test
jne
stos
cwde
mov
or
xor
pop
call
data16
mov
popa
or
or
iret
dec
lahf
mov
cdq
jo
and
mov
mov
xchg
lock
inc
inc
xchg
xor
push
mov
mov
sbb
xor
test
jno
adc
nop
mov
idiv
or
pop
dec
loop
ficomp
dec
(bad)
cmp
mov
mov
xchg
sbb
call
xor
push
test
loopne
ins
mov
xor
jl
loope
int
jmp
push
dec
push
fbstp
mov
xor
jmp
scas
dec
fidiv
stos
pop
movs
adc
movs
sahf
mov
mov
dec
outs
mov
(bad)
push
jo
out
pop
push
cmp
loopne
dec
and
mov
cmp
jmp
mov
adc
sub
gs
in
loopne
out
nop
add
(bad)
pusha
out
sub
fidivr
inc
in
jl
inc
cmp
je
mov
cwde
shr
stos
dec
add
lods
and
jg
mov
jae
cmp
add
int3
cs
push
movs
inc
push
mov
pop
adc
dec
rcr
xchg
sbb
pop
xchg
test
pushf
dec
test
shl
(bad)
ins
cs
cmc
(bad)
test
cmp
sbb
pop
cdq
adc
data16
dec
xor
out
mov
xchg
push
mov
fcmove
dec
into
sub
rcl
enter
inc
sbb
psubw
jb
mov
inc
aas
fistp
xor
sbb
das
push
inc
jmp
sbb
push
repz
sbb
and
adc
mov
lds
xor
jnp
(bad)
dec
xor
add
xchg
inc
iret
inc
push
mov
movs
ret
ror
dec
mov
mov
mov
jle
jecxz
(bad)
sbb
das
jne
cmc
and
mov
dec
ins
xchg
dec
sub
not
ins
jp
(bad)
popf
mov
in
pop
adc
inc
test
je
xchg
mov
cmp
es
dec
lea
sub
outs
pop
fidivr
jmp
push
out
mov
repz
xor
imul
(bad)
sbb
cmp
jmp
cmp
xchg
in
(bad)
pusha
mov
push
aas
adc
mov
inc
mov
(bad)
pop
and
mov
and
popf
iret
dec
xlat
mov
cmp
lods
dec
out
int
add
xor
fimul
mov
cmp
clc
test
in
adc
jl
fst
and
pushf
pop
push
cmp
not
mov
push
cwde
ins
sub
mov
pop
push
jp
cmp
xor
cli
hlt
xchg
lea
popa
rol
pop
or
jg
mov
arpl
add
je
rcl
outs
cwde
add
inc
das
rep
stos
push
or
sub
test
mov
repnz
mov
(bad)
das
out
mov
jae
push
pop
and
ins
dec
adc
and
xchg
mov
push
ret
in
popf
pop
jnp
(bad)
pop
push
dec
mov
stos
sub
aam
sbb
dec
iret
xchg
jnp
in
and
jmp
aaa
idiv
(bad)
nop
call
jl
pop
std
pop
in
xor
mov
stc
mov
push
xor
push
sbb
sub
mov
dec
add
push
loopne
mov
clc
push
fistp
aaa
jae
arpl
lods
movs
(bad)
imul
sbb
jp
cmp
das
adc
or
(bad)
stos
sub
movs
pop
jg
jl
addr16
js
nop
mov
push
test
lods
pop
retf
sbb
(bad)
outs
sub
nop
imul
lea
std
cmps
cmp
in
icebp
pop
or
sub
mov
add
adc
xchg
sbb
push
imul
ret
inc
(bad)
repnz
inc
ja
jmp
jmp
lahf
out
retf
sbb
dec
mov
xchg
mov
sub
ss
xor
mov
in
or
aaa
clc
(bad)
aad
ficomp
pop
stos
aad
adc
lock
movntps
xor
test
loopne
pop
les
mov
sbb
sar
add
jg
mov
jg
cmovge
xchg
xchg
xchg
push
daa
fstp
push
iret
jecxz
adc
inc
mov
pushf
data16
idiv
mov
xchg
dec
out
push
cmc
push
push
bound
retf
jns
lock
loop
std
sbb
outs
lahf
pop
loope
mov
call
push
add
mov
fisttp
xchg
ret
or
ret
test
pop
out
cmp
cmps
cmp
sub
xchg
inc
lea
cli
jg
dec
mov
sub
fild
jmp
ins
iret
mov
or
push
retf
enter
iret
movs
gs
inc
gs
cli
dec
nop
out
out
dec
dec
cdq
inc
ror
mov
and
jne
cmp
lahf
dec
xlat
iret
jno
adc
cmps
lods
jo
int
mov
shl
xchg
xchg
jmp
call
cmp
(bad)
call
sti
and
push
shl
mov
(bad)
jmp
sub
fst
es
sbb
mov
jb
sub
xchg
xor
or
mov
add
out
dec
scas
dec
ins
and
movs
xchg
cmp
and
push
adc
lods
sar
add
pop
popf
bound
out
add
out
(bad)
push
mov
xor
dec
jbe
div
and
inc
scas
(bad)
and
xchg
push
in
xchg
loopne
pop
rol
cmp
shl
xor
retf
xor
int
(bad)
push
call
gs
std
jle
mov
mov
jmp
cwde
or
cli
inc
jmp
loopne
lea
sbb
fidivr
dec
sahf
cmc
rol
jmp
pop
hlt
test
sbb
call
dec
xor
movnti
jp
push
sbb
xchg
mov
fucom
mov
mov
fs
and
add
into
test
xchg
out
pop
add
mov
loop
push
rcr
xor
sbb
mov
push
add
(bad)
sub
pop
xchg
push
mov
nop
cwde
(bad)
push
jno
aad
fdivr
and
lahf
inc
out
ffree
adc
(bad)
in
mov
push
adc
call
jbe
in
mov
enter
(bad)
imul
xchg
jae
pop
cmp
adc
dec
cmps
pop
pandn
loope
mov
mov
mov
xchg
lahf
sub
push
cdq
or
test
in
inc
jne
cmp
sbb
pusha
inc
nop
sbb
data16
jno
stos
fdiv
and
in
jnp
jns
xchg
push
hlt
gs
call
lods
gs
inc
(bad)
int
rcl
cmp
xor
pop
xchg
sahf
inc
xchg
imul
sbb
push
je
dec
sahf
loopne
or
mov
(bad)
push
sahf
dec
test
in
nop
outs
and
fs
fwait
cmps
sbb
fild
fild
xchg
daa
and
push
(bad)
int
stc
push
loope
gs
pusha
cli
outs
sbb
int3
xchg
add
inc
pop
jmp
movs
imul
icebp
addr16
mov
popa
fcomp
cld
pop
mov
mov
inc
mov
sbb
movs
mov
xor
sub
mov
xchg
jno
dec
mov
ds
lahf
out
xor
cwde
cdq
jne
xor
cmp
jb
mov
mov
cmp
adc
rcl
xor
repnz
jo
dec
stc
pop
dec
lods
stc
cmp
pop
fdivr
xchg
xlat
xchg
(bad)
xchg
mov
push
xchg
stos
mov
test
pusha
movs
inc
pop
test
mov
rcl
cmp
dec
stc
das
ret
aam
mov
inc
pushf
imul
aam
mov
outs
imul
mov
xchg
inc
popf
mov
mov
(bad)
cmp
popf
mov
stos
xlat
call
mov
cmps
ss
jbe
fimul
int3
arpl
and
imul
or
sub
and
test
bnd
adc
rcl
dec
fs
cwde
inc
inc
pop
and
shl
add
call
add
sbb
and
jb
xchg
add
mov
mov
add
push
mov
lds
inc
loope
jne
mov
pop
mov
aas
xor
dec
inc
push
fdivr
shl
(bad)
sbb
mov
mov
dec
pop
movs
inc
jo
neg
jge
push
repz
popf
stos
add
lahf
popf
out
ins
inc
xchg
lds
adc
or
dec
and
inc
push
into
xchg
xor
jmp
mov
int
cwde
addr16
add
jp
xor
test
and
adc
mov
jge
and
shl
cmp
ins
mov
jecxz
push
pop
fs
sub
xchg
scas
leave
sub
js
mov
and
int3
xchg
jle
jl
test
loope
cli
retf
sti
outs
div
cmp
fwait
jae
and
sub
add
cmp
and
jnp
or
(bad)
aam
sahf
nop
ins
out
mov
jle
std
push
xor
xchg
movs
cvtps2pd
in
dec
bswap
enter
jge
and
inc
jae
jbe
dec
push
add
mov
cmp
push
popf
xchg
add
arpl
shl
pop
pop
dec
xchg
or
aam
inc
dec
adc
test
gs
out
ret
rcr
pop
mov
add
add
int
jp
jmp
xchg
paddsb
sub
pop
ficomp
mov
(bad)
outs
setns
add
jnp
and
js
cmp
scas
xchg
xor
aas
cs
inc
je
fs
out
xor
retf
xchg
inc
add
sbb
jno
mov
mov
and
cmps
bswap
enter
sub
mov
in
jmp
pop
mov
cmps
push
cmc
adc
sub
es
push
push
fsubr
mov
test
shr
cmp
jmp
test
push
hlt
aam
rol
pop
pop
fsub
(bad)
lock
cmp
sub
push
and
(bad)
xchg
adc
in
xor
(bad)
(bad)
inc
adc
in
std
je
xchg
xor
jmp
lea
aam
sbb
sbb
sbb
inc
ret
mov
int3
sbb
hlt
xchg
mov
repz
cdq
jae
and
cmps
mov
push
callw
jns
adc
fldenv
lock
mov
ror
cmp
mov
out
loopne
imul
imul
sbb
mov
stos
xor
and
adc
ret
xor
mov
or
dec
xor
pop
movs
inc
in
es
mov
cmp
mov
mov
es
aad
push
jmp
mov
clc
add
adc
sub
pusha
scas
cld
js
sub
inc
mov
icebp
inc
sub
mov
out
push
sub
pop
mov
xchg
mov
xchg
inc
mov
mov
adc
dec
add
test
sbb
hlt
ins
push
imul
les
pop
sub
or
cs
(bad)
sbb
lods
cmc
xor
push
icebp
imul
test
jb
sub
or
xor
jne
mov
or
cmp
loope
lahf
sbb
pop
inc
xchg
mov
test
ret
or
push
adc
add
outs
sar
mov
add
ss
test
pop
cwde
cmp
or
js
push
adc
or
pop
xor
xor
push
stos
test
rcl
inc
sbb
inc
or
inc
(bad)
mov
pop
sub
add
test
or
cmp
test
jecxz
fwait
aad
jno
(bad)
sti
loope
cmps
icebp
out
sub
jle
cmps
jge
push
lods
cmp
stc
sub
mov
fsubr
pop
inc
adc
push
aad
in
jge
and
mov
cmps
dec
inc
lds
cmc
xor
dec
or
or
ss
cwde
sahf
(bad)
rcl
sbb
or
and
cmp
dec
repz
push
cmp
mov
das
retf
and
nop
inc
(bad)
jmp
mov
pop
xor
or
push
ins
enter
aaa
xlat
jmp
out
clc
aad
sahf
fcomi
enter
add
cmps
movs
lock
test
or
push
aaa
rcr
out
out
and
cld
jns
xchg
xchg
pushf
frstor
dec
ror
dec
inc
jbe
jbe
jecxz
pop
call
xlat
cmp
mov
inc
(bad)
inc
mov
add
ror
xchg
lock
mov
das
mov
lods
std
pop
out
fs
and
add
dec
jge
xlat
ins
ins
pop
icebp
jecxz
push
test
push
cmc
pop
enter
loop
or
sahf
shl
cwde
enter
aad
xor
add
sti
call
aad
movntps
pop
xor
adc
mov
aam
ins
enter
mov
mov
xchg
sahf
ds
(bad)
jb
daa
hlt
jge
and
jecxz
rol
fsub
movs
push
shr
cmp
test
adc
out
or
data16
test
in
xlat
fsubrp
fisub
mov
pop
inc
sub
jbe
mov
xor
sbb
out
jne
push
jmp
xchg
mov
ret
out
pusha
jge
jmp
mov
pop
sbb
stos
out
fild
ins
cmp
test
cs
push
out
out
push
and
in
xor
(bad)
and
sbb
lea
ss
lahf
sub
cmp
mov
ss
ss
(bad)
xor
in
rep
add
aas
(bad)
mov
les
pop
(bad)
jl
ins
inc
cmp
mov
jbe
ret
sbb
sbb
add
xchg
outs
push
and
pop
ja
dec
pop
xor
dec
push
push
mov
aas
inc
stos
dec
cld
(bad)
cmps
pushf
inc
mov
push
je
sub
mov
xor
add
stos
inc
sub
xor
jo
mov
or
sar
outs
push
add
inc
test
mov
cmp
jecxz
jmp
(bad)
imul
xlat
icebp
jle
jmp
dec
inc
les
iret
sub
sub
loop
(bad)
mov
das
and
call
mov
or
mov
cmp
(bad)
call
pop
and
bound
arpl
shl
das
call
cmp
mov
ret
jmp
cmp
ret
jo
push
sub
or
into
std
inc
mov
repnz
repnz
pop
mov
add
xor
loope
scas
and
loop
retf
movs
test
xchg
mov
xchg
rcl
fucomp
cld
push
jle
call
mov
fistp
fadd
cmps
mov
push
mov
inc
dec
int3
adc
arpl
mov
lods
cld
pop
fcmovu
aam
ffree
(bad)
mov
pop
arpl
pop
sahf
sbb
aam
pop
popf
rol
cmp
adc
sub
fdiv
stc
movd
sub
push
cs
jl
ret
push
loope
push
imul
in
jl
jne
push
dec
outs
cmps
sub
popa
sbb
aas
in
es
lahf
lods
dec
mov
mov
aas
mov
xchg
xor
neg
sbb
add
mov
xchg
loop
lds
pop
mov
mov
nop
lods
imul
push
inc
sub
mov
or
push
pop
lods
sahf
fs
stos
push
mov
jnp
std
(bad)
jae
rol
xchg
out
or
fnsetpm(287
jmp
aam
fs
cdq
pop
jno
(bad)
aad
pop
xchg
(bad)
mov
jge
fwait
test
jmp
pop
and
xor
outs
mov
or
or
or
out
gs
dec
repnz
push
std
lods
xor
test
xchg
jg
mov
cmc
cmp
clc
cmp
test
jmp
outs
out
das
push
jl
jno
dec
push
imul
sahf
jno
clc
aaa
add
pop
and
out
push
iret
outs
dec
cmp
ss
xchg
adc
mov
retf
xor
jge
dec
lock
push
out
mov
shl
and
sub
int
or
xor
pop
dec
lods
inc
mov
aas
mov
je
pop
jle
psrad
pop
div
(bad)
jecxz
repnz
fadd
jl
(bad)
jnp
pop
lods
cmp
pop
lock
iret
mov
mov
jno
push
mov
cmps
add
fiadd
jno
mov
mov
aaa
or
fisubr
in
xchg
fcmovu
cmps
pop
test
or
inc
(bad)
stc
ficom
icebp
mov
jmp
push
inc
lock
(bad)
(bad)
cmp
jge
aam
mov
test
and
nop
and
outs
cmp
int3
or
je
push
cmc
arpl
mov
daa
fs
cmp
scas
retf
ds
xlat
fsub
nop
mov
jo
ss
xor
jmp
movs
xchg
aam
out
imul
jmp
xchg
jns
push
add
aaa
jmp
enter
push
sub
add
or
xchg
icebp
cmp
sub
push
nop
xchg
adc
push
mov
jmp
jno
and
inc
idiv
js
or
mov
inc
mov
xor
out
icebp
xchg
icebp
nop
dec
push
xchg
sti
sub
push
(bad)
scas
mov
daa
loope
adc
je
sahf
pop
inc
nop
shl
test
sbb
es
xchg
bound
ins
lahf
mov
scas
mov
inc
cmps
xor
movs
je
xor
mov
add
mov
fstp
sbb
jns
dec
stos
or
jmp
pop
retf
(bad)
add
mov
loopne
push
cmp
adc
mov
jp
inc
sbb
jns
push
mov
push
sub
fs
mov
sbb
test
out
mov
and
int3
jae
leave
loopne
fst
jmp
test
mov
cmp
fcomp
mov
and
mov
test
mov
adc
push
adc
dec
jae
imul
add
imul
movs
mov
in
and
sbb
pushf
or
or
dec
(bad)
cdq
ds
and
iret
push
fild
mov
in
inc
bound
out
fadd
jne
dec
mov
dec
jl
add
cwde
inc
adc
frstor
fs
enter
je
popf
xor
xor
(bad)
movs
sahf
mov
dec
mov
lods
stos
popa
loope
arpl
scas
adc
jo
or
(bad)
fstp
add
bound
pop
arpl
adc
popf
int
dec
(bad)
repz
dec
and
xchg
xlat
adc
out
jo
cmp
push
ins
cmps
xor
inc
xor
(bad)
inc
(bad)
rcl
test
xlat
fstp
jge
in
fimul
outs
jmp
jge
inc
rcl
sub
bound
cwde
and
ss
pop
push
and
sub
movs
push
(bad)
out
iret
mov
stc
cmp
repz
leave
scas
retf
rcl
stc
or
enter
cmps
dec
sub
call
aaa
jp
adc
mov
scas
and
add
xchg
dec
jmp
jp
sbb
mov
add
push
leave
mov
fisubr
mov
iret
clc
adc
push
push
pop
(bad)
shl
pop
lds
inc
test
mov
mov
sub
sub
and
clc
add
cdq
out
dec
int3
push
pop
mov
jae
jg
test
lods
mov
xor
sti
or
fisubr
add
loop
jno
ret
mov
sub
inc
lods
test
add
stc
add
ret
ss
adc
mov
fist
inc
popa
xor
std
jmp
xlat
cmp
fist
sti
xor
cmp
push
adc
cmps
cld
jno
in
add
add
pop
xchg
inc
jnp
xchg
jp
inc
inc
int
push
mov
jl
mov
dec
xchg
addr16
or
imul
mov
pop
retf
imul
inc
sub
jnp
push
lods
stc
jnp
ins
out
adc
push
pop
mov
out
jecxz
xchg
(bad)
jl
fwait
int
xor
fidivr
fdiv
cmp
sub
push
shr
shr
clc
cmp
sbb
jb
ja
jno
ins
xchg
retf
sub
stos
loope
cmp
test
inc
push
iret
aaa
pop
adc
xor
pusha
in
dec
sti
ret
push
retf
mov
mov
rol
or
sub
or
adc
in
rol
aam
sub
fisttp
or
test
jbe
xchg
adc
in
adc
cmp
sahf
leave
and
fs
test
sbb
or
pop
in
adc
jnp
or
add
push
hlt
shr
mov
mov
nop
movs
scas
dec
adc
dec
dec
outs
and
(bad)
push
cmp
les
repz
cmp
xchg
call
aam
inc
aam
xchg
xor
sbb
loope
xor
out
jnp
aaa
mov
push
outs
sbb
fbstp
sbb
push
loop
xor
inc
adc
sahf
xor
dec
jp
loopne
mov
repz
cmp
push
cmp
push
fbstp
or
mov
pop
out
int3
sbb
(bad)
sub
lock
(bad)
repnz
das
cmp
dec
jb
sub
adc
or
shr
fldenv
aas
adc
(bad)
test
sbb
in
sahf
and
sbb
lea
mov
mov
in
adc
and
std
push
jno
test
loope
xor
adc
(bad)
dec
aas
pop
addr16
dec
xchg
in
ins
movs
sbb
repnz
add
(bad)
into
push
out
cs
cmps
fadd
adc
sti
movs
mov
mov
cwde
int
ja
mov
or
aad
addr16
and
adc
xor
icebp
ins
mov
dec
movs
cwde
jne
cwde
iret
jle
add
adc
push
inc
cdq
out
addr16
fisubr
add
mov
stos
add
push
popf
sub
sbb
mov
dec
fsubrp
xchg
jecxz
mov
ret
int3
mov
stc
add
arpl
inc
in
jmp
adc
mov
fimul
inc
imul
stc
bound
dec
pop
shr
pop
js
sar
mov
(bad)
adc
ss
test
ret
les
imul
stos
pop
sbb
add
sbb
ins
mov
push
sbb
retf
sbb
test
fidiv
cmp
xchg
mov
and
loope
sub
es
ss
adc
daa
xchg
je
aaa
(bad)
out
mov
inc
pop
add
stos
inc
hlt
jmp
sti
aad
fnstenv
dec
sbb
sbb
or
pop
jo
push
xchg
shr
ret
or
inc
xchg
aas
ror
ror
jbe
add
mov
mov
add
outs
jnp
outs
add
retf
int3
outs
xor
mov
mov
adc
add
sbb
test
stc
jne
je
(bad)
and
mov
das
outs
dec
cmp
mov
xor
or
fwait
mov
jge
aaa
stc
xchg
test
dec
inc
add
sbb
sbb
sbb
rcr
mov
daa
jae
data16
mov
scas
jmp
and
fnstcw
mov
fadd
pop
xor
js
mov
xor
add
imul
cdq
pusha
lahf
cld
mov
mov
xchg
addr16
cld
(bad)
cli
ror
pop
fcom
xor
xchg
jmp
push
adc
mov
dec
lahf
inc
pushf
xor
pop
and
cmp
scas
repnz
out
push
jbe
jnp
add
sub
sbb
jmp
or
push
dec
add
(bad)
and
jmp
mov
rcl
mov
loopne
test
lds
sub
lods
and
test
mov
dec
(bad)
and
mov
out
push
sbb
mov
mov
and
jmp
jp
clc
pop
mov
adc
adc
inc
adc
js
sahf
xor
ja
sti
movaps
iret
jae
dec
sahf
mov
jb
mov
cwde
cmps
mov
out
imul
ins
inc
push
inc
es
fsubr
mov
adc
test
xor
xor
mul
inc
xchg
fisttp
jo
adc
cld
or
outs
into
adc
scas
repnz
cmc
xor
lock
in
push
jns
push
fldenv
adc
je
mov
sar
add
mov
in
jns
and
mov
clc
pop
mul
pushf
enter
scas
cdq
or
outs
popa
ret
ss
test
adc
les
mov
cld
mov
loop
sub
push
(bad)
fld
push
and
mov
cmp
push
cdq
icebp
sbb
jle
in
xor
mov
out
scas
add
cmp
outs
pop
mov
mov
pmaxub
std
sub
add
jmp
stc
adc
sbb
adc
dec
push
adc
mov
ret
xchg
inc
xchg
mov
jne
lods
pop
push
in
jmp
mov
leave
stc
sbb
pop
mov
cld
inc
pop
pop
je
and
aad
fcomi
(bad)
cld
(bad)
xlat
inc
jb
mov
sub
pop
fwait
scas
jmp
retf
(bad)
sbb
fisub
pop
daa
push
mov
cli
pop
jne
inc
mov
mov
sub
cmp
fnstsw
pusha
mov
mov
mov
ss
lea
pusha
ret
stos
nop
retf
adc
sub
sbb
rol
dec
xor
cmp
in
mov
retf
shl
sub
call
add
pop
inc
pop
jp
pop
and
xchg
(bad)
mov
xor
sbb
loopne
pop
aad
mov
ror
dec
test
lods
xor
and
imul
and
scas
push
sbb
pop
jge
adc
arpl
ins
je
stc
sub
or
aaa
mov
mov
aad
xor
test
setb
pop
pop
mov
(bad)
dec
mov
dec
enter
les
mov
jno
sbb
mov
daa
push
(bad)
fwait
push
push
inc
xchg
sub
mov
cmp
inc
retf
or
addr16
rcl
mov
xchg
sar
and
dec
inc
cli
and
(bad)
frstor
scas
mov
xchg
hlt
jmp
add
shl
pop
les
pop
push
int3
pusha
mov
mov
lods
pop
in
pushf
mov
aas
call
iret
and
cwde
movs
bnd
mov
outs
(bad)
pop
pop
inc
mov
loop
or
(bad)
xchg
js
sti
ds
fdiv
lea
(bad)
scas
cmps
call
imul
int
mov
mov
xchg
xchg
sub
arpl
pop
adc
cmp
cmp
inc
dec
cdq
and
xor
xor
xchg
ins
fwait
xor
mov
dec
aaa
daa
inc
outs
adc
ret
push
int3
dec
aad
scas
in
mov
xchg
mov
loop
je
(bad)
jmp
out
mov
hlt
lods
arpl
cmp
and
pop
aam
fwait
pop
hlt
repnz
cmp
mov
retf
outs
adc
xchg
mov
cmp
scas
sti
or
test
dec
lods
cmp
adc
or
js
jmp
mov
cmps
les
mov
scas
sbb
and
jg
pop
daa
sbb
cmps
loopne
(bad)
(bad)
pop
xor
xchg
add
xchg
imul
call
in
xor
je
mov
pop
mov
rol
sub
(bad)
mov
pop
popf
call
repz
xor
jbe
mov
pusha
or
shr
and
das
adc
dec
retf
sbb
sbb
cmps
cs
icebp
std
jmp
(bad)
jo
imul
and
dec
ret
mov
adc
jecxz
xor
je
mov
xchg
adc
int3
test
push
push
mov
ror
call
add
int
mov
xor
and
jnp
fnstcw
loopne
pop
add
in
cmp
jmp
clc
call
ret
or
dec
sbb
test
ins
cmps
pushf
les
and
mov
ret
ds
sub
cmp
jae
ret
sub
mov
sbb
and
pop
add
jne
fild
lahf
mov
sbb
aaa
sub
fild
xor
mov
enter
jge
add
and
mov
in
dec
ja
dec
add
adc
fnstsw
bound
stc
dec
fisttp
inc
mov
dec
pop
push
push
mov
xchg
not
cmp
(bad)
sbb
lods
lock
mov
mov
pop
(bad)
push
jecxz
mov
jbe
mov
fdiv
push
mov
adc
inc
or
push
scas
mov
xchg
data16
(bad)
xchg
clc
popa
out
or
sar
in
cmp
ret
cld
fstp
add
mov
jg
dec
dec
xor
jge
mov
lods
pop
jp
or
cmp
xlat
(bad)
or
inc
xor
loop
sbb
ins
std
jl
add
into
pop
sub
xor
es
jp
pop
sub
out
push
fsubr
in
cli
or
pop
arpl
in
je
adc
pop
fmul
jo
call
or
mov
mov
mov
shl
stos
jae
stos
push
inc
lods
mov
xchg
shr
mov
sub
mov
cmp
test
xlat
or
dec
gs
int
out
xchg
xlat
sub
jle
xchg
jg
icebp
popa
outs
in
jmp
jae
sub
mov
test
xor
mov
sub
mov
inc
(bad)
cmp
pop
push
jg
loop
int3
dec
dec
mov
jle
add
pop
(bad)
ror
clc
ins
test
xchg
push
bnd
add
push
xor
sub
push
mov
xor
fcmovnb
push
ret
sub
not
je
ret
pop
jne
iret
jns
(bad)
sbb
push
frstor
push
movs
imul
xchg
loopne
ins
fisttp
sub
push
mov
pop
add
stc
jge
add
add
mov
lock
fstp
add
fistp
cdq
xchg
push
mov
test
xor
fmul
jge
cmps
sbb
push
loope
div
rcl
adc
cmp
jmp
xor
sub
xchg
test
add
int
retf
rdpmc
push
mov
or
sbb
or
xchg
xchg
lods
icebp
xchg
adc
fcmovu
loope
popa
and
hlt
add
ins
call
call
sub
dec
cs
or
cmp
ret
rcl
pop
aam
jp
retf
(bad)
mov
iret
mov
gs
movs
or
xor
fisttp
cmp
and
mov
pop
adc
(bad)
int
jno
mov
hlt
add
fdiv
imul
rcl
jl
add
xchg
jae
push
in
xor
stos
popa
jo
(bad)
not
arpl
sbb
push
inc
int3
or
imul
mov
xchg
cdq
retf
int
mul
dec
dec
xor
cmps
cmps
pop
scas
sub
repnz
outs
das
cmp
mov
aam
add
pusha
mov
ret
inc
stos
lea
cwde
es
xor
cmp
mov
imul
ror
iret
jg
inc
into
xor
(bad)
mov
ja
mov
cwde
inc
xchg
jle
ret
xchg
popa
cmp
aas
adc
jo
das
pop
xchg
lods
movs
dec
aam
sbb
pop
js
sar
gs
xchg
or
mov
jne
sbb
enter
xor
mov
mov
cmps
mov
xor
or
push
mov
sub
xchg
call
mov
popa
inc
out
les
or
add
sub
xchg
mov
in
out
scas
and
sbb
sub
faddp
outs
push
ficomp
fnstsw
or
(bad)
fs
inc
pop
imul
sub
cmps
(bad)
and
inc
sbb
add
ds
ds
adc
icebp
push
jg
pusha
in
mov
mov
mov
retf
inc
outs
sub
jb
xchg
jb
mov
addr16
addr16
popa
pop
imul
adc
and
shl
js
lahf
ror
sbb
and
sub
push
inc
outs
xor
call
ds
repz
cdq
jbe
cs
shr
push
sbb
sbb
mov
adc
in
pushf
jno
ins
out
mov
push
push
add
stc
(bad)
pop
adc
shl
aas
or
add
icebp
outs
jecxz
mov
push
in
cmp
xlat
rcl
retf
bound
rol
xchg
cld
les
pop
push
add
cld
pop
jp
jno
cmp
inc
push
test
cmp
push
jb
std
daa
fbld
ret
icebp
outs
sbb
test
xor
cmp
jbe
les
scas
xchg
gs
mov
mov
inc
adc
or
stc
loope
add
stos
xor
sbb
popf
xchg
add
pop
xchg
cmps
mov
mov
dec
jns
jae
mov
scas
aam
cmp
adc
push
or
ins
mov
jne
lods
fsub
sub
outs
(bad)
out
ss
hlt
shl
mov
adc
(bad)
cli
inc
out
sub
xor
repz
retf
pop
in
sub
or
xchg
or
sbb
nop
cli
jl
loope
in
inc
and
in
inc
push
fsub
pop
lods
mov
nop
cmp
jae
xlat
xor
xor
ror
mov
test
xor
xchg
cmps
xchg
scas
sbb
ss
call
pop
and
add
mov
sbb
lods
inc
inc
mov
push
or
mov
inc
mov
xchg
retf
(bad)
dec
xor
shr
push
ins
inc
and
(bad)
add
pop
inc
mov
cmps
cmp
push
in
push
stc
or
icebp
adc
dec
xchg
and
aam
gs
leave
cs
push
jbe
cld
mov
lea
push
sbb
jg
not
xchg
lods
dec
sbb
sbb
and
push
or
je
pop
aad
dec
loopne
ret
dec
mov
cmps
outs
es
fbstp
and
pop
push
dec
nop
mov
rcl
pop
(bad)
pop
adc
adc
gs
dec
daa
sbb
jmp
fidivr
push
dec
std
scas
imul
cdq
cli
push
test
sbb
test
mov
cs
les
aam
and
xor
into
mov
out
push
inc
push
test
into
add
clc
rol
xor
xor
aam
repnz
hlt
dec
in
sub
imul
test
sbb
ss
test
inc
xor
fmul
sar
dec
loopne
mov
mov
or
push
cs
fsubrp
jne
add
cmc
out
pop
xchg
int3
inc
cmp
push
mov
mov
xlat
xchg
nop
push
out
daa
mov
and
aas
mov
dec
add
or
mov
repz
pop
cmps
rcl
enter
aas
push
adc
fisubr
xchg
add
pop
mov
ins
sub
out
retf
movs
or
jg
sbb
in
(bad)
push
retf
ret
das
rol
ins
cmps
fild
lds
add
or
xchg
dec
jecxz
cmp
fs
inc
sbb
dec
inc
arpl
dec
ja
add
cmp
rcr
repnz
adc
jg
mov
retf
retf
pop
ret
test
cli
or
jg
idiv
mov
fs
es
jbe
imul
xor
std
and
inc
dec
fs
add
lds
xor
jae
nop
xor
mov
or
inc
(bad)
mov
cmc
out
pop
rol
jmp
add
push
aas
dec
cdq
add
push
and
inc
lahf
mov
out
test
(bad)
jl
je
push
(bad)
enter
enter
out
xchg
ja
pxor
test
mov
sub
daa
mov
bound
inc
add
stos
sar
add
mov
out
mov
out
retf
cmp
and
jp
cmp
dec
jle
loop
xor
fs
lea
xor
mov
xor
fimul
es
dec
jno
and
sbb
retf
aam
(bad)
aad
mov
mov
ret
aaa
aam
or
and
inc
xor
cmc
fild
or
mov
adc
mov
xor
ficomp
int
inc
sbb
test
pop
xchg
and
mov
lods
push
loopne
test
mov
or
lea
rep
ins
jmp
xchg
sub
sbb
pop
sbb
mov
jae
es
or
dec
retf
xchg
das
and
xlat
int3
and
imul
jns
or
xchg
mov
add
and
arpl
shr
and
sub
gs
push
adc
je
mov
sbb
dec
aam
sub
cmp
loopne
xor
out
jbe
sti
fld
repnz
add
inc
mov
pop
inc
out
ja
push
cmp
cmp
sub
xchg
xchg
test
sahf
pop
daa
dec
scas
aam
and
sar
int
mov
jmp
xor
mov
jmp
adc
fwait
sub
add
xchg
and
inc
pop
std
mov
mov
push
(bad)
test
sti
not
mov
mov
shr
gs
int
or
imul
sbb
inc
lea
call
xchg
ror
push
leave
idiv
movs
mov
sub
mov
cmp
xor
cmp
cli
(bad)
cmp
in
ret
stc
mov
add
loope
jne
aam
cld
adc
inc
imul
cmp
mov
xchg
jb
push
imul
jmp
sti
mov
(bad)
sti
shr
popa
mov
push
adc
dec
test
mov
shl
outs
inc
retf
pop
sbb
lea
adc
mov
cmps
ror
mov
call
fsubr
gs
jb
xchg
push
sbb
in
and
inc
add
movs
je
jo
bt
call
test
es
mov
stos
icebp
test
sbb
fucomip
mov
outs
jge
(bad)
int
xchg
popa
jb
mov
aas
scas
cmps
xchg
mov
leave
loopne
jl
push
cmps
sbb
das
fmul
mov
xor
into
inc
jp
pop
cmp
enter
mov
fwait
xchg
pop
outs
daa
test
stc
and
clc
jo
outs
imul
or
imul
mov
imul
mov
stos
dec
push
mov
in
mov
inc
jnp
or
push
or
pop
sub
(bad)
imul
dec
sbb
popf
dec
xchg
icebp
lock
lods
cmps
stos
xor
sub
fnstsw
and
and
jmp
cmps
mov
leave
adc
repnz
scas
mov
or
pop
out
sbb
push
in
push
sub
or
pop
and
mov
test
add
in
(bad)
out
retf
mov
(bad)
or
mov
xor
std
push
lods
adc
and
ror
cmp
mov
fiadd
pop
xlat
in
add
test
out
fcomi
dec
icebp
push
call
in
in
call
aaa
jl
in
aam
dec
loope
cwde
and
jmp
loope
test
dec
push
retf
sbb
lds
or
jno
pop
push
mov
fld
jle
and
jmp
movs
pop
hlt
ror
jp
mov
aad
or
fcmovu
pop
dec
mov
pushf
dec
jae
or
xchg
xchg
mov
inc
and
inc
mov
push
inc
(bad)
sbb
mov
(bad)
and
out
div
repz
call
retf
ret
pop
xchg
iret
in
sbb
xchg
add
test
sub
outs
mov
ret
stos
cmps
test
mov
or
push
imul
xchg
idiv
mov
mov
popf
fiadd
aad
in
lock
cmp
dec
jle
push
aas
pop
jae
retf
fwait
mov
in
pop
jmp
and
imul
aaa
fucomip
sbb
adc
mov
in
add
push
sbb
dec
or
icebp
div
sbb
test
xchg
fnstenv
inc
mov
cmp
pop
cmp
sbb
adc
inc
inc
gs
sbb
sub
mov
ins
(bad)
sbb
mov
and
fdiv
or
fbstp
test
mov
jecxz
inc
mov
jl
icebp
outs
adc
ror
mov
xchg
movs
out
mov
nop
mov
test
mov
lods
mov
not
xchg
dec
loopne
mov
mov
lods
(bad)
das
sbb
sbb
mov
jg
pop
test
xchg
mov
jecxz
sar
ror
in
mul
arpl
(bad)
or
lods
sub
and
enter
stos
bound
cwde
pop
in
call
out
sub
push
xchg
repz
loopne
icebp
test
out
cmp
inc
or
jnp
(bad)
out
repnz
sahf
mov
les
pusha
xor
pop
popa
lds
adc
lods
dec
push
pop
fisub
cmp
jl
push
mov
gs
imul
xchg
ja
sub
jmp
ret
mov
(bad)
aam
inc
sub
out
out
(bad)
cld
push
(bad)
xor
jnp
daa
test
lods
jne
dec
les
outs
pusha
sbb
stc
cmp
in
sti
push
retf
es
outs
fimul
nop
mov
imul
cmp
mov
in
sbb
sbb
adc
push
or
popa
test
out
call
scas
sub
movs
xor
or
mov
xor
mov
xor
rol
aad
and
inc
das
sub
sbb
dec
add
sub
sti
pop
js
pushf
cmp
jg
jno
out
push
cmp
push
ror
mov
out
fwait
xchg
add
and
jno
neg
cmps
lahf
sub
mov
inc
retf
xor
add
retf
cdq
pop
and
dec
cmp
stos
ret
ror
pop
xchg
xor
or
inc
mov
repnz
sub
pop
xor
inc
mov
push
sub
cld
jge
(bad)
loopne
cmps
sahf
pop
pop
shl
ds
mov
shr
cmps
call
xor
pop
cmp
shr
test
mov
jmp
cli
outs
sbb
add
loopne
mov
and
add
dec
scas
mov
mov
je
push
push
arpl
dec
jae
repnz
mov
repz
xchg
jl
adc
retf
xchg
sub
dec
dec
push
cmp
xchg
cmp
sbb
js
es
aas
fisub
shl
leave
inc
shl
mov
clc
and
sub
arpl
sub
xchg
aad
mov
das
shl
mov
pop
div
mov
sub
mov
xlat
or
mov
jo
test
pop
jmp
jb
lods
inc
mov
fs
xchg
pop
pop
push
ja
pop
add
in
fcomp
daa
ins
cld
xor
aas
pop
js
scas
cmps
pop
and
mov
gs
test
add
lds
fbstp
mov
arpl
std
call
loope
mov
lods
sbb
test
mov
aas
outs
mov
and
mov
(bad)
out
xchg
scas
repz
gs
xchg
mov
adc
loop
addr16
retf
(bad)
sub
jecxz
mov
dec
dec
mov
enter
jbe
mov
out
mov
inc
in
movs
bound
push
pop
xlat
mov
mov
(bad)
mov
lock
shl
xor
xchg
xlat
inc
out
jnp
out
popf
movs
pop
pop
fcmovnu
push
ins
jmp
jge
adc
jmp
mov
jnp
ins
test
add
dec
lahf
std
lahf
rcl
popa
sbb
in
call
sub
inc
fwait
mov
add
mov
fbld
mov
xlat
scas
sub
aad
add
mov
ror
inc
jo
sti
data16
nop
inc
pop
or
mov
lock
xchg
mov
js
test
cmp
jo
data16
test
ds
fcmovb
test
in
loope
(bad)
aad
aaa
and
sti
push
aad
cmp
nop
xor
or
mov
aad
fidivr
jne
out
inc
mov
jae
and
mov
cdq
mov
inc
in
in
jge
scas
push
addr16
mov
mov
lods
stos
jg
cld
cld
mov
mov
push
push
push
inc
xchg
xchg
inc
les
loopne
or
hlt
in
dec
dec
cs
dec
call
int
bound
dec
dec
nop
in
ss
cmp
hlt
mov
cwde
lahf
jecxz
add
sbb
in
rcl
test
dec
jp
inc
ret
loop
sub
jecxz
retf
repz
sbb
xor
dec
into
scas
(bad)
rcr
xchg
adc
je
jecxz
pop
stc
push
and
jl
mov
sub
aad
rcr
xchg
cmp
in
mov
xor
loop
jg
cmc
push
in
adc
add
pop
inc
mov
out
int
push
int3
(bad)
adc
mov
push
pop
ret
xor
jmp
loop
push
mov
pop
xchg
mov
push
nop
dec
mov
xor
outs
or
les
jmp
fxch
fld
dec
outs
mov
call
call
(bad)
xchg
jns
mov
mov
les
push
push
and
popa
fwait
loopne
cmp
xor
xchg
pusha
jmp
fbld
lods
mov
dec
in
sbb
pop
stc
fdiv
loopne
jnp
mov
mov
pop
fist
(bad)
stc
lds
xchg
loopne
mov
lds
inc
jmp
cs
dec
rcl
or
lea
sub
add
jnp
les
retf
jmp
scas
push
xchg
in
mov
mov
jnp
loope
enter
cmp
jnp
(bad)
into
and
addr16
test
mov
repz
bound
les
das
shr
call
jmp
push
imul
jnp
xor
adc
push
or
mov
jecxz
jno
jmp
sbb
ins
lock
cmps
(bad)
ja
test
aam
cmc
cmc
pop
mov
cdq
cmp
cmp
xchg
cdq
outs
iret
mov
mov
mov
frstor
pushf
dec
mov
icebp
inc
std
sahf
or
(bad)
out
jno
mov
mov
movs
in
fwait
iret
sub
movs
ret
retf
(bad)
fnsave
mov
rcr
in
dec
in
das
outs
pop
pop
push
repnz
leave
cmc
or
push
scas
or
(bad)
xor
push
fucomp
xchg
push
retf
sub
mov
fadd
popf
jmp
jnp
inc
clc
inc
adc
pop
mov
test
xor
fcmovnbe
outs
inc
and
push
not
(bad)
cli
mov
adc
ins
repz
pop
fsub
repnz
and
fld
mov
xor
arpl
jmp
pop
mov
fimul
push
jae
cdq
push
repz
ins
cmp
lock
dec
fadd
ret
fs
cmp
repz
and
scas
dec
push
jne
ud1
les
inc
cmp
mov
lock
fistp
dec
aaa
add
cmp
in
out
in
jb
jne
fild
jmp
fcmovb
aam
aaa
iret
and
pop
xchg
retf
dec
xor
mov
call
adc
xor
push
mov
sbb
sbb
pop
lods
adc
arpl
cmp
xor
jb
scas
mov
mov
inc
out
fcom
int
jmp
shl
add
mov
inc
aad
mov
stos
jmp
(bad)
fistp
jnp
push
cmp
dec
fild
pop
stos
test
(bad)
(bad)
sub
mov
pushf
sub
loopne
div
test
jmp
imul
push
call
(bad)
fidivr
in
pop
xor
jb
mov
fstp
add
and
sbb
(bad)
pop
ins
cmp
xchg
xchg
and
mov
neg
(bad)
sti
adc
adc
fs
mov
dec
mov
test
sbb
inc
rcr
xor
out
add
loope
(bad)
(bad)
fidiv
fstp
pop
xor
jns
clc
cmp
mov
add
dec
push
loop
repnz
ss
or
das
adc
adc
cmp
push
into
sbb
out
or
jns
and
shr
retf
dec
rcr
ds
repnz
mov
sbb
mov
sbb
mov
jg
or
or
sti
xor
fs
sbb
and
movs
push
cli
es
add
hlt
pop
js
ret
pop
sub
stc
dec
push
sub
stos
pop
fst
imul
push
test
(bad)
push
das
mov
rcr
add
test
mov
repnz
mov
dec
sbb
jecxz
sub
xchg
(bad)
(bad)
cmp
jns
inc
ret
sbb
retf
pop
ja
fcomp
sar
(bad)
fldenv
mov
je
add
scas
shl
dec
add
leave
test
adc
shl
sahf
sub
fidiv
cmp
rcr
mov
out
and
cld
xchg
jle
retf
fs
jg
div
fisub
jae
cmp
fs
aaa
jno
dec
push
aam
dec
add
push
mov
data16
es
adc
and
pop
xor
cmc
jnp
shl
ja
sub
outs
cmovns
rcl
fisub
and
jae
shr
pcmpgtb
push
jecxz
adc
daa
int3
out
ja
lds
fwait
(bad)
lock
push
mov
popa
sub
outs
sar
loop
sub
neg
dec
retf
ret
cmps
mov
inc
pop
cmp
nop
fucomp
add
cmp
popa
cmps
sti
pop
adc
movhps
jnp
xchg
lahf
repnz
ficomp
xchg
xor
stos
fwait
sar
pop
pop
aam
int3
push
and
add
nop
in
je
cmp
retf
xchg
out
sbb
in
xor
mov
cli
and
cmps
je
loope
push
sbb
mov
outs
mov
pop
jp
fnsave
test
arpl
mov
hlt
rcr
(bad)
imul
out
pushf
mov
jg
mov
jb
(bad)
shl
sti
adc
xchg
and
test
rcl
add
repz
call
adc
push
xchg
loop
cmp
mov
adc
repz
jne
data16
sti
out
push
or
mov
cmp
js
enter
pop
jg
mov
inc
dec
aam
mov
mov
sbb
retf
out
retf
pop
mov
push
das
scas
mov
nop
sbb
fld
scas
call
ret
sar
fs
outs
call
mov
ret
mov
mov
out
adc
adc
and
or
jmp
sub
imul
lea
(bad)
cmp
aad
cld
mov
mov
inc
repnz
cmps
js
sbb
and
add
pop
mov
imul
add
jmp
fmul
jp
scas
or
das
adc
adc
jmp
xchg
movs
jecxz
pop
stos
fs
ret
mov
cwde
aad
cs
sbb
ret
call
push
mov
jecxz
aad
stos
push
sub
pop
ret
std
pop
dec
pop
sub
mov
sar
repz
pop
jg
cmps
and
outs
je
imul
ins
jmp
adc
mov
push
add
mov
xchg
adc
out
sbb
jecxz
iret
mov
stc
lds
(bad)
mov
ret
push
fld
stos
popa
mov
cmp
add
imul
and
dec
jmp
out
dec
or
sub
cpuid
retf
mov
push
cs
ret
inc
in
(bad)
icebp
sbb
cs
movs
and
mov
sbb
int3
and
xor
add
push
or
addr16
fcom
add
pop
nop
inc
nop
mov
lahf
test
retf
or
push
jl
mov
or
gs
inc
or
jno
jbe
and
retf
cmp
push
cmp
(bad)
xor
rol
jo
add
add
in
in
fisub
pop
jne
rcl
call
lds
mov
adc
and
sub
and
add
cmp
jb
pop
cld
cdq
xchg
push
mov
movs
dec
inc
mov
sti
push
loopne
sbb
mov
cmc
leave
sub
cli
sbb
xor
cmp
push
sbb
push
loopne
mov
ins
fld
jmp
fwait
pusha
xor
scas
sti
and
icebp
loop
mov
sub
(bad)
push
xor
xchg
xor
out
cmp
push
shr
xor
or
push
mov
xor
pop
mov
pop
jae
ins
imul
fwait
(bad)
sahf
push
mov
mov
ins
jmp
jg
cmps
jno
not
loopne
cmps
ds
out
pop
push
mov
test
stos
test
pop
call
jmp
ss
retf
or
pop
sbb
repnz
fcomp
jle
push
stos
xor
lea
cs
mov
lods
dec
sub
sub
daa
lods
sahf
jmp
mov
dec
faddp
mov
or
cli
(bad)
fucomip
mov
jle
out
leave
sahf
aas
popf
arpl
add
jge
pop
cmp
mov
push
or
cmp
rcr
inc
shl
ss
jp
loope
dec
push
shl
and
xchg
call
xor
xchg
imul
loop
xor
imul
sahf
leave
mov
cld
inc
mov
push
mov
bound
pop
shr
inc
mov
sub
es
jo
jb
xchg
sbb
xchg
push
icebp
das
inc
ror
rcr
sub
cmps
lods
cs
xchg
mov
sub
mov
mov
push
jle
mov
pop
add
dec
pushf
repz
mov
xchg
xor
mov
cmp
fcom
mov
push
adc
mov
pop
stos
adc
jecxz
(bad)
aam
or
(bad)
imul
leave
push
mov
add
gs
jb
mov
and
dec
cmp
imul
(bad)
hlt
aaa
rol
dec
fcomi
jno
mov
add
rol
sub
test
cmp
aaa
mov
sbb
jne
shl
(bad)
stc
adc
cmp
mov
sbb
add
aam
jmp
daa
jae
shl
jge
(bad)
pop
and
push
dec
add
push
cmp
sub
and
mov
pop
or
mov
mov
sahf
sbb
(bad)
mov
rcl
mov
mov
js
jnp
stc
(bad)
in
sbb
popa
inc
int3
pushf
int3
scas
sub
(bad)
retf
fst
pop
iret
imul
in
and
cld
mov
dec
mov
sub
mov
xor
mov
mov
cdq
movs
ins
dec
add
add
mov
xor
data16
push
pop
adc
cmp
aam
fsubr
mov
jle
lahf
out
sar
push
inc
jecxz
mov
(bad)
int3
dec
pop
sbb
and
jne
pop
push
pop
mov
mov
dec
mov
add
sbb
lea
jbe
push
xlat
shl
rol
je
sar
aam
les
(bad)
not
push
inc
jp
popa
repz
inc
pop
mov
jp
push
adc
pop
pop
shr
mov
leave
daa
mov
jmp
scas
out
sub
sahf
fld
sub
test
adc
add
pop
dec
mov
sub
pop
cmps
adc
clc
stc
arpl
xor
jbe
xor
lods
sar
mov
aaa
retf
out
and
pop
(bad)
aad
(bad)
std
pusha
retf
and
mov
mov
jo
inc
pop
imul
xor
cmp
jo
or
mov
inc
mov
xchg
stos
lods
ret
sub
mov
dec
mov
cmp
out
jg
sub
mov
test
lahf
xor
inc
mov
mov
sti
cmps
adc
xchg
xchg
pop
nop
scas
jmp
xor
cmp
lods
push
push
jnp
and
xor
lock
jbe
pop
sub
jmp
mov
movs
out
stos
retf
retf
dec
leave
sub
(bad)
addr16
adc
sub
loop
cwde
inc
mov
test
and
pop
adc
jae
or
push
js
les
xchg
add
shl
dec
(bad)
or
sub
(bad)
retf
cs
mov
in
retf
outs
outs
lods
mov
xor
inc
loope
inc
push
popf
pop
inc
jne
test
fdiv
add
xor
call
jmp
in
sub
jge
adc
xchg
inc
leave
je
pop
ret
add
push
bound
jmp
push
mov
sahf
push
or
je
js
sub
sbb
mov
inc
cwde
inc
sti
loopne
lods
stc
arpl
retf
ror
push
imul
xchg
mov
adc
adc
je
sbb
mov
adc
fld
mov
mov
call
pop
xor
mov
retf
or
rcl
and
add
mov
mov
dec
(bad)
pop
ins
pop
sbb
dec
neg
push
mov
sbb
and
jmp
call
mov
inc
out
stc
jmp
sbb
test
xchg
inc
add
mov
scas
cmp
inc
xlat
adc
pop
push
ret
fisub
pushf
dec
sub
jb
call
mov
and
jge
xchg
ficom
into
out
push
xlat
lahf
lods
dec
dec
cwde
(bad)
(bad)
jae
iret
std
mov
dec
daa
push
adc
mov
stos
imul
ret
xor
jno
test
sub
gs
rcr
jge
and
neg
fidiv
pushf
fdiv
pop
pop
or
xor
inc
cmps
test
mov
cmps
idiv
pop
adc
test
(bad)
xor
cmps
jo
or
(bad)
push
out
xchg
xchg
or
jb
ins
out
outs
ds
test
dec
mov
mov
xchg
dec
in
push
(bad)
ret
push
movs
push
in
das
cdq
(bad)
cdq
enter
sub
fnstsw
popa
inc
stc
int3
loop
jmp
sti
mov
inc
and
stos
push
jns
adc
loop
add
nop
mov
lahf
fcmovnu
fwait
adc
push
call
or
xchg
shl
test
adc
hlt
fld
loopne
sub
sbb
sbb
sbb
loop
je
popf
in
mov
out
cmp
test
test
sub
scas
jnp
cli
mov
mov
enter
les
outs
iret
fsubr
mov
inc
mov
das
and
cmps
lds
jno
test
mov
pop
mov
lahf
add
(bad)
out
sub
mov
push
inc
push
push
ror
xchg
mov
imul
mov
daa
and
mov
mov
dec
cmps
repz
cmp
imul
adc
sbb
adc
sbb
(bad)
dec
xor
or
dec
neg
or
inc
scas
(bad)
cmovg
in
stc
aad
(bad)
adc
jg
pop
bound
mov
stos
es
or
jl
addr16
fldcw
aas
cdq
scas
xor
imul
and
cs
lahf
push
xlat
push
mov
call
arpl
lods
bound
arpl
fs
push
mov
mov
cs
leave
xchg
cmp
xlat
hlt
mov
xchg
ins
mov
or
idiv
inc
pop
int3
mov
mov
adc
rcr
into
xor
xchg
xchg
stos
adc
mov
cmps
or
repz
fsub
es
cmovb
imul
jmp
push
ret
cdq
xor
jge
pop
xlat
pop
xchg
pop
fld
aad
jecxz
call
(bad)
out
gs
adc
fcmovnb
jns
or
jne
add
cmp
xor
retf
lea
(bad)
mov
not
cdq
and
fist
shl
leave
scas
lahf
xor
jne
loope
ret
add
jmp
mov
leave
pop
in
push
mov
ror
mov
xchg
and
rcr
cmc
sub
xchg
xchg
rol
sar
pop
loopne
mov
pop
sbb
fldcw
retf
int3
xchg
jmp
fdivr
ja
push
loope
pop
into
outs
lods
xchg
dec
jne
loopne
nop
mov
jmp
xchg
and
(bad)
xor
shl
ins
push
fs
push
retf
mov
inc
mov
nop
sbb
xchg
fisttp
cmp
jmp
adc
dec
and
jg
cwde
mov
push
into
js
xchg
loopne
jl
outs
or
push
std
ds
out
loop
ret
aam
imul
les
inc
inc
mov
test
add
loopne
cdq
ret
(bad)
push
cli
pop
lahf
mov
xlat
dec
lds
lods
cmps
mov
rcl
xor
retf
mov
pop
cmp
dec
fdivr
sub
adc
nop
call
fsubp
cmc
mov
xchg
mov
jmp
sbb
push
enter
mov
cld
gs
aam
es
test
gs
cmp
push
sub
mov
test
ins
cmp
addr16
enter
push
cli
mov
add
inc
mov
nop
(bad)
sti
or
cdq
mov
hlt
js
(bad)
lock
and
cmp
ror
push
xor
or
add
adc
imul
sub
mov
std
cmp
pusha
adc
jg
jbe
mov
pusha
arpl
dec
shl
enter
push
jae
jmp
pop
pslld
and
xor
sub
rcr
(bad)
mov
int
pop
push
jb
jle
pop
out
cmp
(bad)
(bad)
pop
fs
inc
mov
ja
ret
push
cld
inc
imul
fiadd
or
mov
push
scas
mov
sbb
in
(bad)
mov
pop
cli
jno
icebp
call
pop
cmp
jmp
les
mov
(bad)
mov
sar
jbe
in
mov
clc
xor
jmp
push
xlat
movs
cmps
shl
pop
adc
push
test
adc
ret
pop
add
jl
rcl
in
call
cmps
js
jecxz
mov
data16
js
xchg
gs
fwait
test
add
les
rol
pop
js
mov
xor
and
aaa
aaa
mov
ret
xor
inc
aas
loop
and
js
jnp
push
pusha
xchg
lds
pop
gs
add
push
cmp
rcl
jno
and
adc
pop
(bad)
in
mul
ins
pop
xchg
stc
add
js
cmp
int3
(bad)
fst
sti
push
stc
fcmovb
inc
and
sub
sti
fcomp
stos
dec
data16
ins
sbb
adc
test
cdq
clc
mov
pop
push
push
push
lds
jne
xchg
ret
scas
sbb
das
lods
or
repz
xchg
xor
or
push
sbb
push
addr16
call
sbb
push
inc
mov
std
sbb
and
xor
cmc
scas
sub
pop
xor
push
fsubr
mov
shl
dec
or
cmps
adc
hlt
pop
ins
pop
mov
mov
push
add
mov
dec
adc
pop
daa
push
(bad)
mov
xchg
cmp
iret
leave
repnz
fnstcw
xor
sahf
mov
clc
lahf
rcl
jp
mov
retf
rcr
mov
inc
pop
pop
ror
mov
pusha
and
inc
cld
repz
sbb
pop
popa
jo
les
xchg
and
shl
gs
inc
lods
mov
mov
mov
mov
pop
sub
add
xchg
adc
xchg
inc
push
add
xchg
pop
(bad)
and
icebp
pop
clc
cwde
sub
outs
popa
dec
enter
in
sbb
pop
sbb
test
daa
xchg
pop
push
mov
dec
cmps
push
sbb
ins
imul
dec
inc
lock
call
add
popf
into
stos
les
sub
cmc
push
adc
sbb
inc
pop
push
fdivr
jo
jp
fnstenv
mov
(bad)
cld
test
(bad)
cdq
retf
pop
dec
and
add
int
mov
inc
repnz
mov
stos
xor
lds
pop
mov
push
mov
adc
mov
jo
jbe
add
test
mov
icebp
mov
sar
push
imul
push
inc
mov
mov
cmp
xor
add
stc
shl
sub
icebp
mov
jp
push
mov
pop
add
and
jne
xchg
in
ja
mov
sub
mov
or
push
fsub
adc
and
mov
sbb
loop
xchg
adc
ds
out
icebp
je
sbb
dec
jecxz
xor
mov
mov
stos
(bad)
outs
adc
call
sub
scas
mov
in
cmp
push
xchg
add
pushf
sub
pop
or
jmp
lds
imul
imul
sbb
std
retf
pop
jno
sbb
shl
add
fnstenv
hlt
fs
stc
in
(bad)
jmp
inc
dec
jbe
add
mov
sub
xchg
pop
aas
xor
xor
jmp
scas
dec
pop
inc
sbb
jle
and
jg
jg
push
and
inc
jns
icebp
(bad)
mov
out
add
out
mov
stos
push
jecxz
(bad)
and
in
in
adc
popf
jp
fs
push
cmps
mov
ins
imul
sbb
pop
stos
lahf
stc
add
iret
mov
in
jno
xlat
stos
(bad)
jbe
and
lds
shr
fsubr
bound
push
call
sbb
mov
cdq
mov
mov
mov
and
or
sub
dec
push
push
outs
pusha
cmp
sbb
sahf
sbb
ss
fisttp
or
xchg
ror
lods
aaa
and
test
mov
je
sbb
dec
mov
pop
sbb
and
ficomp
les
jmp
int
test
add
jne
mov
and
and
sbb
ins
(bad)
sbb
push
or
movs
pop
mov
enter
fstp
sbb
and
ror
add
inc
push
push
and
test
pop
jge
mov
call
sub
es
push
loope
jecxz
(bad)
jmp
(bad)
call
cmp
icebp
das
movs
push
aad
xchg
add
fnstcw
xor
into
inc
xlat
xchg
dec
rcl
xor
aaa
movs
test
aas
mov
in
(bad)
xor
inc
loope
int3
xor
cwde
mov
push
inc
les
mov
(bad)
daa
xor
inc
xchg
fistp
stos
sti
test
mov
mov
cdq
pop
xor
mov
lock
ror
pushf
scas
sub
xchg
fwait
in
mov
jge
loopne
pushf
sub
leave
pop
cmps
cmc
sbb
jnp
or
mov
in
sbb
xor
repnz
loopne
pop
shr
gs
jp
jo
stos
or
adc
jb
mov
sahf
mov
fsubr
xor
dec
ins
lock
cmp
dec
(bad)
popa
push
jg
jle
or
inc
jmp
into
gs
pop
mov
jns
xor
sub
sti
cmp
shr
in
ret
xlat
dec
movs
jo
iret
fsub
dec
jg
lock
jp
test
repnz
je
ds
cmc
jns
pop
xor
cmc
sti
enter
jae
lock
call
pop
push
jae
cmc
fild
mov
mov
push
pop
loop
ja
mov
addr16
mov
xor
cmp
push
mov
sbb
xor
fsubr
leave
xchg
push
mov
sub
ror
into
call
sbb
gs
xor
sub
stos
jge
shl
cmp
xor
sar
icebp
scas
out
aad
fstp
test
jmp
cdq
push
xchg
inc
xchg
jmp
call
stc
pop
(bad)
mov
ins
ror
adc
call
xchg
xor
or
scas
mov
xor
js
int3
frndint
enter
(bad)
popf
stc
sub
enter
imul
pop
test
fisttp
lahf
add
xchg
pusha
scas
jno
xchg
jmp
ret
sbb
mov
icebp
clc
repnz
std
cmp
pushf
sub
inc
pop
push
rol
test
rcr
call
push
inc
mov
adc
jmp
movs
int3
fstp
pop
inc
xchg
sbb
rcr
push
add
out
jb
mov
pop
not
lods
retf
mov
mov
adc
mov
aaa
add
aam
sub
daa
dec
jno
repz
xor
add
cld
cmp
mov
jle
xor
or
and
dec
fucom
fsub
sub
xchg
inc
mov
sbb
stos
mov
lmsw
mov
inc
imul
aam
jge
stos
aaa
inc
xor
test
clc
push
loop
xchg
(bad)
xor
stos
pop
call
mov
add
sub
test
(bad)
xor
ds
les
sub
in
daa
push
dec
ret
mov
push
(bad)
jp
stc
es
mov
jg
add
dec
fadd
and
cmp
sahf
retf
aad
es
pop
sub
cmps
add
adc
xor
fidiv
mov
sbb
jb
lods
adc
popa
cmc
xchg
cmps
ret
xchg
nop
mov
jnp
movs
arpl
cwde
mov
in
lea
fdivp
dec
test
mov
dec
add
sbb
sub
mov
sub
retf
aam
fs
add
mov
in
adc
xor
dec
loopne
(bad)
push
imul
push
ret
std
je
dec
jl
loop
jne
call
fmul
cs
rcr
adc
dec
clc
repz
or
sub
out
rcr
enter
mov
adc
jns
ins
cmp
cmp
out
pop
and
lods
fcomi
popa
mov
aam
les
pop
(bad)
xlat
test
scas
ret
(bad)
fcom
rcr
inc
xchg
adc
mov
ds
ret
lock
cmps
pop
ja
pushf
lds
out
or
jae
adc
(bad)
mov
push
in
and
out
inc
add
int
xchg
xchg
jno
in
push
push
lock
cmp
les
sbb
xor
cmp
js
dec
outs
xor
inc
arpl
or
sbb
(bad)
inc
mov
or
enter
cmp
cmc
mov
enter
mov
mov
and
outs
lods
pop
jl
ins
jb
bound
pop
dec
fst
shl
inc
(bad)
inc
xor
cmp
les
enter
dec
dec
mov
sub
jb
fsubr
mov
in
and
movs
ret
jecxz
mov
dec
and
mov
adc
xor
fistp
std
pop
inc
jp
(bad)
pop
sub
cmp
lds
ins
mov
dec
mov
dec
aam
shl
and
mov
inc
stc
stos
les
arpl
pop
in
dec
outs
xchg
dec
(bad)
sbb
sub
inc
imul
fwait
inc
fwait
dec
rcr
stc
mov
test
mov
int3
mov
inc
inc
push
rcr
fsubr
jge
(bad)
cli
jno
ror
and
mov
add
jmp
mov
adc
repnz
cmp
and
rol
je
push
mov
xchg
in
stc
loop
addr16
cmp
hlt
or
iret
pop
push
xchg
jmp
cwde
les
stos
or
cli
push
xchg
cmc
out
int3
and
retf
ficom
rcl
push
pop
jno
iret
xor
sbb
sbb
xor
stos
jl
ret
(bad)
mov
or
scas
xchg
rcl
shl
mov
lock
out
lahf
jl
xor
stos
movs
mov
shl
sbb
push
and
push
fmul
mov
ins
shl
cld
popa
jmp
mov
stos
cmp
xor
std
icebp
dec
cwde
(bad)
hlt
int
stos
mov
add
pop
lods
call
ins
in
and
push
loopne
sahf
mov
out
les
sbb
or
xor
cld
mov
inc
aaa
stc
popf
xor
pop
in
cli
xor
lahf
push
push
and
jg
(bad)
loop
add
and
xor
mov
pop
out
mov
lds
mov
mov
jb
pop
fsub
mov
sbb
pop
jnp
cmp
sar
xchg
adc
sub
xchg
(bad)
dec
xor
ds
and
jbe
pop
mov
mov
mov
inc
in
dec
or
cs
loopne
lods
(bad)
sub
and
sbb
hlt
jecxz
jbe
fcomp
mov
lea
jge
adc
pop
neg
out
stc
xchg
inc
loopne
jp
or
add
add
fsub
ins
or
retf
xchg
jns
in
test
sub
in
pop
mov
jl
ins
jg
lds
nop
iret
adc
mov
xchg
stc
clc
mov
jecxz
cld
iret
out
cs
push
int3
ins
(bad)
xor
inc
das
cli
jmp
sbb
cmps
fadd
adc
xchg
pop
movs
and
dec
int
xchg
jg
outs
xor
jae
xor
sub
ret
xchg
push
in
add
dec
ds
jmp
inc
and
lahf
out
hlt
inc
jae
adc
mov
mov
stos
loop
pop
xchg
rcl
pop
rol
scas
xchg
out
jbe
dec
pop
int3
gs
mov
sub
call
movs
inc
js
mov
cli
inc
ins
fwait
and
sbb
mul
daa
popa
push
xor
pop
ds
mov
and
shl
call
cld
iret
or
call
push
mov
mov
push
das
sbb
sub
cld
cld
cmp
(bad)
inc
xor
jo
add
jl
mov
mov
aam
or
mov
clc
outs
push
cmp
pop
test
mov
shl
xchg
fldenv
or
movs
cmps
out
add
pop
xchg
jne
mov
nop
or
mov
sti
jmp
(bad)
mov
imul
dec
jmp
push
add
hlt
call
shl
outs
into
lods
pop
push
mov
loope
dec
cs
jns
and
in
lock
and
ins
add
inc
and
inc
xchg
dec
mov
sahf
inc
test
and
push
call
sub
add
sub
and
jmp
out
and
xlat
retf
fucom
add
xchg
call
fst
clc
sub
jecxz
xor
sar
mov
out
outs
lods
sub
xchg
(bad)
data16
xlat
xor
ficomp
pop
and
cs
clc
push
inc
lahf
push
popa
xchg
xchg
push
fldenv
dec
retf
hlt
mov
pop
mov
loope
vpmaxub
rol
sub
jl
mov
lods
aaa
or
mov
sbb
ja
mov
lea
mov
stos
xchg
inc
mov
sbb
imul
sbb
or
pop
and
xchg
popf
icebp
ret
mov
mov
lock
add
sub
in
(bad)
cmps
jbe
sub
pushf
mov
mov
out
mov
dec
mul
inc
cs
stc
fwait
test
or
jmp
xchg
push
mov
popa
or
inc
fdivr
dec
retf
mov
mov
leave
mov
mov
scas
or
ret
int
adc
sbb
jle
data16
in
inc
test
into
pop
js
fs
popf
(bad)
and
push
idiv
cmp
dec
cmp
aaa
rol
mov
jbe
dec
popf
dec
jne
fwait
(bad)
cmc
adc
shl
pusha
xchg
scas
push
cwde
mov
push
inc
retf
jb
ret
stos
arpl
nop
pop
mov
cmp
xor
neg
ja
ret
push
std
mov
jle
pushw
or
push
mov
jecxz
les
pop
add
(bad)
sbb
mul
shrd
push
leave
and
sbb
stos
xchg
push
mov
mov
les
les
mov
out
add
repnz
outs
inc
aas
sub
stos
mov
and
lods
adc
test
cdq
mov
shr
cli
ja
pop
(bad)
pop
adc
add
and
push
lods
mov
std
sbb
cmps
push
test
in
xchg
inc
cmp
js
dec
ds
dec
push
pusha
sub
adc
test
fistp
cmp
sar
les
shl
add
sbb
jbe
out
clc
out
sahf
iret
call
or
lea
fsub
jmp
jmp
or
pop
cdq
data16
std
mov
pop
xchg
lds
cmp
cmp
jo
lods
ins
and
and
into
dec
cmp
add
add
sbb
test
xchg
test
jp
mov
out
pop
add
leave
mov
and
jle
mov
pop
mov
pop
adc
cmps
xlat
ins
lock
adc
stc
pop
ret
push
mov
addr16
dec
cs
xlat
cmps
dec
and
sub
(bad)
push
jno
hlt
sub
mov
sbb
out
push
aas
out
enter
out
pusha
and
sbb
cs
les
inc
xor
icebp
dec
loop
push
pop
sub
push
or
stc
inc
jl
(bad)
jle
ja
inc
outs
xor
(bad)
xchg
not
scas
jecxz
or
and
dec
sub
push
adc
into
mov
sahf
dec
pop
dec
inc
xchg
(bad)
dec
mov
cmps
mov
nop
idiv
xchg
push
movs
aam
jl
mov
test
test
es
mov
je
clc
xchg
xchg
add
dec
mov
int
cld
stc
mov
out
cmp
into
or
and
mov
mov
test
sahf
repz
jb
fmul
out
ins
aaa
xchg
bound
push
(bad)
scas
mov
pop
inc
retf
add
les
sbb
mov
mov
jo
push
int
xchg
adc
loopne
fcomp
stos
dec
inc
cdq
jp
scas
popa
ret
mov
out
int
mov
xchg
test
out
mov
(bad)
push
std
bound
jecxz
in
xchg
imul
in
cmps
mov
pop
outs
addr16
data16
dec
in
fdiv
mov
or
and
addr16
dec
push
test
push
ficom
in
sbb
cmps
rol
xchg
dec
fld
pop
add
loopne
out
lock
adc
lock
repz
xor
and
rol
aad
ss
stc
leave
pop
push
leave
sahf
pop
cmps
ja
loop
bound
xor
add
jbe
adc
std
movs
xlat
dec
aaa
mov
xchg
push
or
pop
ret
ins
cmp
in
push
or
and
aam
movs
and
jae
sbb
pop
cmp
mov
cmp
pop
push
dec
fmul
xchg
fcom
inc
in
fimul
sahf
outs
jns
fwait
loop
mov
das
pushf
xor
add
lods
sbb
xor
adc
cmp
aas
out
imul
dec
lea
mov
movs
imul
dec
int3
inc
sbb
daa
and
push
ins
repz
fimul
test
adc
sub
rol
xor
mov
or
repnz
(bad)
outs
cli
mov
add
dec
test
adc
lods
jb
mov
inc
das
test
xor
pop
jg
test
enter
hlt
inc
mov
xor
(bad)
out
sbb
in
jmp
push
(bad)
jne
ins
sahf
je
into
aaa
jne
inc
ins
mov
pop
(bad)
(bad)
inc
fsub
ins
out
int
inc
lock
data16
fnstenv
inc
push
call
xor
xor
cmps
adc
or
or
push
pop
pop
mov
repnz
rcr
aam
add
jl
outs
mov
mov
cmp
bound
mov
test
and
call
mov
mov
lea
cli
retf
add
jo
mov
xchg
sar
stos
sahf
and
or
add
sbb
adc
call
mov
ror
push
dec
mov
pop
pop
pop
test
inc
repnz
ins
adc
pop
shl
mov
sub
ficomp
sub
test
xor
push
scas
out
shl
js
ins
pop
cmps
loope
jecxz
pop
lock
xchg
sub
and
(bad)
repz
int3
pusha
sbb
outs
or
int3
push
pop
push
into
add
or
dec
fucomip
xchg
stos
mov
retf
imul
call
aam
leave
xchg
xor
xchg
mov
sbb
addr16
cli
or
cmc
hlt
push
xor
inc
retf
aaa
push
sahf
stos
xchg
sub
repz
lea
or
push
outs
das
sar
fwait
outs
inc
inc
fidiv
sub
lea
or
(bad)
fwait
movs
(bad)
sub
jg
mov
cmp
jo
(bad)
outs
fist
(bad)
in
movs
jb
repnz
inc
push
and
jo
pop
jle
das
shl
mov
retf
bound
aas
jne
int
xchg
jns
rol
mov
nop
cmp
rol
rol
jp
lahf
mov
jnp
daa
repnz
test
mov
sub
out
jmp
or
jo
add
pop
sub
scas
or
mov
cmc
inc
mov
add
xchg
jg
add
and
(bad)
jae
push
cwde
jmp
lea
ret
adc
inc
or
and
cmps
jae
shr
out
leave
jno
pusha
dec
cwde
adc
cmp
pop
add
lods
mov
and
mov
fcmovbe
imul
repz
jbe
jl
fdiv
jg
push
mov
dec
das
inc
pop
mov
loopne
sbb
into
xchg
lock
lahf
add
xchg
js
popf
jae
adc
xlat
cmp
idiv
std
xchg
pop
or
mov
(bad)
imul
movs
ret
dec
xchg
out
add
mov
stos
add
or
or
xor
rol
popa
cwde
lods
mov
xlat
or
push
(bad)
fimul
pop
es
leave
push
fcomp
mov
jp
cmp
dec
xor
jne
mov
jg
jae
lds
shl
jl
jl
sti
push
xchg
add
arpl
popf
fs
sub
mov
adc
xor
(bad)
cld
pop
cwde
aam
fld
and
imul
pop
sbb
fistp
sub
lods
mov
fsubrp
xchg
fidiv
sub
sub
outs
movs
shr
or
sub
in
lods
lods
sahf
cmp
imul
fisubr
std
and
jno
jl
push
jns
cli
push
inc
mov
in
add
pop
ror
loop
retf
(bad)
sbb
push
fcom
or
jbe
jecxz
int
push
sbb
jno
xchg
loopne
jp
push
add
sbb
in
cmp
xchg
mov
cmp
and
shr
out
dec
jle
neg
jge
xchg
xor
cmps
das
xchg
test
jo
fistp
dec
fisttp
pusha
mov
popf
mov
xchg
jno
cmp
mov
sub
jmp
sbb
adc
cmps
jmp
jl
dec
push
add
cmp
xor
test
ffreep
dec
aas
add
push
sahf
repz
add
es
sbb
mov
cmps
mov
jns
push
push
std
add
xchg
jl
or
mov
inc
sti
mov
jecxz
jnp
mov
xchg
pop
xchg
and
imul
sub
xor
or
sub
js
inc
mov
clc
into
into
dec
ret
adc
mov
jnp
sub
(bad)
and
stc
je
sub
not
mov
(bad)
hlt
lock
jae
popf
mov
je
push
das
sub
sbb
(bad)
aas
ret
mov
add
sahf
or
jmp
in
nop
js
fcomi
xchg
mov
ja
ins
fwait
and
call
cmp
and
add
(bad)
aad
mov
imul
lock
fmul
sbb
retf
hlt
add
jnp
outs
in
ja
jne
stc
mov
call
cmc
dec
clc
add
and
stos
dec
mov
jo
lods
(bad)
imul
inc
(bad)
test
in
mov
cmp
push
or
inc
aaa
jg
inc
out
inc
cwde
in
in
add
push
call
rcr
fst
add
(bad)
pop
imul
cs
les
daa
(bad)
sbb
stos
mov
or
xchg
sub
(bad)
push
push
fnsave
ficom
jle
dec
push
aas
push
push
test
push
bound
movs
je
adc
idiv
cmp
sbb
jge
pop
(bad)
jns
cwde
jae
xchg
dec
cmp
mov
mov
mov
dec
jmp
mov
minps
jne
sub
push
(bad)
cmp
mov
shl
pop
push
sbb
aas
cmp
in
cdq
out
popf
push
jg
jne
push
into
xchg
in
cmc
dec
pop
ins
sub
test
jbe
mov
sub
sub
sub
dec
sbb
fdivr
sub
loope
std
cmp
mov
or
jnp
jmp
nop
jl
mov
jmp
in
iret
pop
call
jle
mov
cmps
inc
xchg
int3
std
push
cmp
cmp
or
icebp
bound
mov
sar
inc
xchg
ja
rol
addr16
dec
dec
ret
ret
jmp
sub
push
fwait
xor
das
push
mov
jb
pusha
inc
mov
ds
outs
push
shr
or
sar
or
dec
fild
aam
pop
mov
pop
sbb
mov
xchg
daa
bound
in
popf
aad
dec
xor
jo
push
dec
push
iret
adc
jp
xor
xor
sbb
and
fwait
call
and
and
mov
retf
xchg
mov
in
and
dec
cmp
out
or
mov
leave
adc
dec
daa
jmp
cli
idiv
lods
push
arpl
mov
iret
je
and
rol
ror
jge
mov
fsubr
loopne
shr
add
stos
inc
fcomp
mov
aam
mov
xchg
inc
loop
sbb
push
adc
pop
xlat
xchg
cmps
pop
xchg
mov
dec
mov
xchg
scas
scas
leave
mov
adc
fiadd
lock
mov
pop
pusha
adc
test
cmp
js
jp
int3
rol
push
push
xchg
mov
mov
movs
inc
dec
push
cmp
lea
sti
push
xchg
sub
fsub
mov
stc
mov
push
cmps
dec
outs
out
repnz
sahf
cmp
test
aad
and
sbb
or
and
and
stc
pop
(bad)
mov
dec
pushf
clc
(bad)
mov
mov
dec
or
sbb
inc
test
mov
outs
sar
or
in
xor
xor
js
jp
sbb
ficomp
(bad)
iret
mov
dec
movs
mov
push
add
xor
repnz
xchg
les
push
fs
in
(bad)
idiv
sbb
xor
mov
hlt
test
cmp
aaa
clc
scas
jne
inc
dec
stos
scas
xlat
pop
popa
retf
jbe
ficomp
(bad)
cmp
(bad)
pusha
mov
jns
ret
je
cld
call
ins
sbb
or
shr
cmps
or
jle
loopne
sbb
push
xor
mov
je
cdq
aam
adc
(bad)
push
mov
jge
and
pop
inc
sub
int3
mov
cli
jae
inc
xchg
or
fmul
push
xchg
dec
test
icebp
aam
mov
daa
pop
or
cmp
push
mov
repz
(bad)
mov
pop
mov
aad
ins
in
mov
sbb
mov
mov
lock
xor
mov
inc
shl
dec
or
sbb
mov
xchg
in
jo
mov
jbe
dec
lods
xchg
sbb
std
xchg
cmps
fs
outs
popa
ficomp
pop
adc
pop
and
popf
adc
xor
dec
xor
add
mov
fdivp
mov
(bad)
mov
js
out
adc
stc
sar
shl
out
pop
and
nop
stc
cli
cli
sbb
daa
mov
aam
sub
xchg
in
push
ror
jecxz
(bad)
dec
call
jae
fisub
mov
inc
xchg
xor
mov
jns
xchg
movs
ret
xor
je
sbb
lds
movs
mov
scas
jo
sub
ins
test
pusha
icebp
shr
jmp
std
push
in
test
jne
into
and
lds
cdq
jl
sbb
cmp
nop
in
cdq
mov
jp
es
or
jl
lds
movs
nop
inc
pusha
dec
data16
retf
nop
xchg
cmps
jg
dec
aaa
or
ds
rcr
jbe
call
pop
leave
push
je
jg
aam
dec
cdq
push
cmp
stc
mov
cli
dec
mov
push
fist
fldenv
mov
jg
mov
mov
mov
je
cdq
ins
mov
je
or
mov
imul
mov
inc
test
fs
inc
mov
shl
out
mov
(bad)
cmp
add
es
pop
aaa
fstp
mov
frstor
dec
adc
cmp
pop
mov
mov
sbb
sbb
mov
push
mov
inc
fisubr
jmp
rcr
sub
inc
cs
adc
ins
dec
dec
push
pop
jmp
and
es
cld
shl
pop
mov
adc
xor
jne
adc
xchg
cdq
jb
push
dec
pop
push
xchg
and
pop
xor
sub
pop
pop
fcmovne
push
dec
stc
fisttp
in
aad
and
fisub
pusha
(bad)
(bad)
pop
jno
adc
test
adc
div
and
inc
data16
repnz
and
ins
jmp
pop
movs
mov
push
xchg
sbb
inc
jge
idiv
sbb
mov
sub
add
or
stc
xor
pop
popa
stos
ret
xor
xchg
xor
cmp
es
pushf
repnz
aam
fsubr
adc
out
test
cmc
ja
adc
stos
mov
xlat
lods
adc
pop
xchg
loope
leave
inc
sar
pusha
stos
out
add
sar
(bad)
shr
cmp
test
je
test
movs
xor
or
or
das
int
mov
push
mov
int
pop
jecxz
in
stos
rcl
loop
ja
int3
jno
mov
jnp
dec
mov
xchg
shl
dec
jae
mov
mov
jo
jp
cmp
pop
add
(bad)
pop
jge
lahf
call
push
xchg
je
scas
jo
lock
ror
adc
sub
(bad)
faddp
cmp
push
mov
int
push
xchg
or
sub
jmp
sub
outs
push
push
ret
lea
mov
xlat
int
sbb
fwait
call
dec
push
inc
(bad)
dec
or
jne
mov
sbb
sbb
add
mov
xlat
mov
cmp
mov
cdq
call
ret
int3
sbb
dec
out
cmps
xchg
mov
push
enter
sub
aad
ret
les
push
(bad)
mov
div
fst
adc
sbb
scas
pop
outs
add
sub
ror
fisubr
(bad)
stc
xor
adc
out
clc
popf
out
jecxz
xchg
push
xchg
je
fsub
add
ror
stc
movs
push
adc
cli
rol
fs
fucomi
dec
aam
lods
les
nop
sbb
ror
icebp
into
(bad)
push
and
mov
(bad)
inc
aas
xor
push
cmps
inc
add
inc
dec
and
xchg
movs
cmp
pop
inc
shl
adc
jae
repnz
(bad)
in
into
fistp
cmp
cmps
sar
out
mov
cmps
inc
xchg
cmp
loope
sub
cld
mov
or
mov
push
outs
xchg
into
push
fidivr
mov
test
in
cmps
lahf
xchg
ins
loope
lock
stos
sub
adc
pop
out
jecxz
push
jle
sub
add
ins
xchg
bound
or
inc
cld
aad
sbb
pop
push
inc
in
lea
lahf
repnz
ret
jmp
cli
push
repnz
leave
push
mov
int
jle
mov
cld
inc
and
cld
inc
jns
loop
ins
fwait
imul
out
sahf
and
push
icebp
dec
inc
leave
out
fst
pop
loop
in
sbb
cmp
scas
dec
pusha
mov
adc
retf
movs
dec
rcl
push
into
lods
cmp
rcr
ds
cmp
lahf
mov
mov
cmp
neg
mov
retf
std
push
pop
sub
scas
(bad)
xor
fdiv
jmp
dec
jne
push
ficom
mov
mov
fwait
jecxz
lahf
jne
out
jnp
test
(bad)
mov
mov
sbb
mov
or
mov
enter
test
in
mov
cmp
fisubr
push
push
shl
pop
mov
retf
sbb
cs
(bad)
addr16
stc
mov
shl
test
or
lds
loopne
mov
outs
mov
js
sbb
rcl
add
out
aas
cmp
das
into
sub
test
mov
fsub
xchg
push
nop
(bad)
test
div
cs
push
and
xor
or
cwde
rcl
clc
jp
mov
stos
cmp
adc
inc
xchg
and
ins
cmp
fisubr
fsubr
mov
int3
mov
btc
call
add
mov
scas
mov
jg
or
adc
in
add
push
imul
ret
test
sahf
push
imul
out
bound
imul
cmps
mov
movs
jge
adc
std
inc
mov
fdiv
cwde
(bad)
in
or
(bad)
sub
xchg
add
ins
xchg
inc
in
pop
iret
mov
xor
daa
test
pusha
stc
mov
inc
sbb
xchg
adc
xlat
mov
sbb
mov
cli
icebp
loop
out
imul
and
add
or
cmp
xchg
inc
push
xor
iret
push
(bad)
repz
xchg
xchg
hlt
int
inc
lods
adc
aam
out
mov
pop
icebp
(bad)
pop
cmp
mov
sub
scas
je
dec
xchg
movs
dec
dec
out
sti
into
push
dec
fisubr
test
and
xor
test
xchg
scas
sub
inc
jmp
push
mov
mov
mov
retf
ret
mov
adc
aam
xor
(bad)
cmp
sub
enter
or
push
scas
(bad)
into
int3
sbb
mov
sub
jecxz
jne
xchg
dec
push
xchg
ret
popf
mov
or
add
jae
add
or
or
pop
fsub
fcmovu
jmp
(bad)
push
dec
out
das
lock
mov
mov
in
test
sub
mov
cs
push
es
sbb
mov
mov
jl
ss
xchg
aas
push
inc
jo
xor
in
jbe
sub
dec
xor
mov
lods
stc
or
scas
leave
and
inc
enter
and
mov
mov
int
adc
xchg
fdiv
mov
out
sub
movs
out
push
cld
add
mov
ins
outs
push
pop
mov
push
mov
cld
int3
xchg
xor
sub
sar
dec
imul
cli
xchg
ss
jl
(bad)
mov
lods
and
aaa
sbb
in
cld
imul
mov
arpl
cmp
xchg
pushf
mov
repnz
adc
xor
mov
(bad)
xor
repz
push
ret
mov
mov
loop
retf
mov
jbe
inc
xor
xchg
inc
push
(bad)
cdq
inc
adc
mov
loopne
cwde
sahf
outs
js
stc
iret
add
inc
jnp
pop
(bad)
sbb
cmps
das
in
xchg
mov
hlt
cmc
pop
rcl
cmps
(bad)
pop
xchg
sbb
jb
fmul
cmps
cvttps2pi
add
fmul
add
pop
sub
push
push
mov
jge
cwde
mov
or
xchg
mov
loope
je
xlat
ins
xchg
push
xchg
add
dec
and
add
mov
pop
ror
in
sti
mov
pop
imul
push
sub
or
addr16
xchg
or
aaa
mov
mov
jmp
dec
std
mov
sub
inc
and
enter
pop
bound
jecxz
mov
adc
dec
sbb
aas
and
(bad)
push
xchg
jecxz
or
mov
cld
sub
rcr
push
dec
cwde
xchg
out
jecxz
call
xchg
(bad)
(bad)
and
mov
mov
(bad)
hlt
pop
or
mov
add
fild
mov
mov
gs
pop
pop
movs
mov
sub
stos
fstp
(bad)
or
sbb
addr16
je
leave
aam
pop
test
push
and
push
fmul
add
dec
push
and
push
(bad)
scas
push
push
pop
stos
loopne
cmp
inc
xchg
and
mov
fidiv
xchg
stos
cmps
cdq
or
push
retf
mov
pushf
mov
scas
in
stc
pop
and
ror
cmps
in
or
xor
stos
add
loop
mov
xchg
and
xor
push
sbb
xor
mov
nop
fistp
sbb
inc
scas
mov
iret
xchg
pushf
mov
xor
cmp
repz
outs
mov
sub
in
xchg
jns
hlt
scas
mov
sbb
pop
fbld
imul
push
cmp
call
xchg
test
ret
adc
or
lock
ror
retf
mov
cmp
retf
add
mov
shl
or
call
dec
jle
das
mov
mov
dec
daa
xchg
sbb
dec
inc
cmp
mov
(bad)
(bad)
cwde
(bad)
sub
xor
js
and
retf
mov
xor
je
inc
rcl
and
scas
ret
es
out
or
movs
mov
jbe
cmps
ins
push
outs
rol
das
fisubr
add
xchg
jns
je
leave
int3
cdq
add
sub
or
jp
pop
in
sar
adc
push
rcl
gs
mov
vgatherqpd
add
idiv
mov
sub
or
cmp
div
sub
pop
in
cwde
sub
pop
jne
inc
mov
stos
mov
sbb
or
push
and
outs
lock
outs
xlat
fbld
inc
(bad)
hlt
and
arpl
or
xor
cmp
in
mov
in
std
and
mov
js
shl
xchg
jle
lds
cmp
ja
jmp
pop
jmp
cmc
(bad)
cmp
inc
cmp
cld
movs
ins
dec
jns
imul
rcl
ss
and
or
in
dec
in
and
cmp
add
xchg
xor
rcr
fnstenv
dec
ss
cwde
jg
mov
outs
fisttp
push
enter
fcmovnbe
sbb
pop
sbb
mov
add
sti
fistp
add
dec
stos
fsub
sub
outs
cmc
repnz
outs
push
mov
wrmsr
icebp
xchg
jge
sar
hlt
add
popf
pop
pop
gs
xor
out
dec
ins
(bad)
into
imul
sar
cwde
cmps
fisubr
aaa
imul
jbe
fiadd
push
rep
and
sbb
add
dec
push
xchg
retf
mov
cs
sub
jno
cmps
cdq
xor
push
imul
imul
push
mov
pop
mov
adc
xchg
loopne
enter
bound
jge
add
std
daa
mov
(bad)
call
imul
mul
xchg
ss
mov
les
popf
jecxz
xlat
mov
mov
enter
mov
dec
(bad)
in
add
aad
pop
xchg
mov
dec
mov
inc
das
out
xchg
inc
adc
sar
push
xor
xchg
mov
loop
mov
mov
ss
xor
or
push
mov
ds
mov
push
cmp
xchg
add
mov
mov
fnsave
push
fucom
fild
retf
out
es
add
push
addr16
fwait
shl
mov
and
mov
into
dec
add
cmc
fwait
inc
ja
adc
pop
scas
es
arpl
mov
sbb
mov
loope
cmp
and
jns
addr16
xor
jmp
pop
not
fisttp
mov
fdiv
pop
addr16
dec
loope
lea
adc
and
out
outs
cwde
xor
mov
(bad)
push
iret
add
push
xchg
push
adc
fisubr
sub
sub
or
adc
jmp
ret
mov
out
mov
cmc
scas
div
scas
and
int
jb
xchg
or
or
mov
sbb
ret
push
cmps
mov
sbb
pop
out
pop
rcl
(bad)
jmp
aam
dec
lods
xor
inc
nop
(bad)
cmp
pusha
xchg
call
jecxz
xchg
push
push
push
rol
lock
jmp
xchg
pop
jecxz
aaa
imul
scas
inc
lods
mov
int
fwait
nop
add
push
clc
adc
or
dec
pop
adc
mov
repnz
push
add
mov
jns
pop
inc
hlt
adc
xchg
call
mov
sbb
jne
rcl
aaa
jl
retf
je
in
in
dec
jl
pop
aam
ret
repz
add
mov
cs
or
sub
mov
jo
jl
fs
cmp
or
js
scas
sbb
(bad)
adc
test
adc
inc
mov
or
add
lods
nop
pop
hlt
xchg
mov
fstp
data16
fisttp
aas
sbb
jbe
adc
sbb
mov
stos
pop
neg
leave
mov
cs
mov
stos
mov
clc
fwait
adc
mov
mov
jp
icebp
sub
inc
jmp
pop
stos
push
mov
mov
sahf
xor
inc
test
xor
std
and
push
xor
push
mov
(bad)
mov
push
xlat
aam
jg
xor
pop
inc
pop
stos
or
ss
(bad)
sbb
dec
sbb
fcmove
jle
sbb
in
mov
retf
mov
jae
mov
mov
push
push
mov
or
je
lahf
sti
js
and
scas
cmp
std
cmps
out
cli
loopne
push
xor
jecxz
cmps
ins
leave
xor
das
push
test
jmp
daa
shl
sbb
jmp
arpl
jle
ret
and
aad
cmps
adc
out
daa
rcl
daa
sysexit
jns
je
scas
mov
movs
fldenv
inc
stos
popa
jbe
and
xchg
fs
sbb
push
shl
mov
and
jle
mov
and
pop
ret
(bad)
gs
or
add
cmps
movs
pop
xchg
or
cmp
sub
leave
add
push
mov
mov
mov
inc
cwde
pop
xchg
popa
jae
mov
nop
sub
lods
outs
dec
mov
(bad)
xchg
fstenv
ret
cdq
clc
ret
stos
out
mov
imul
pop
jae
xchg
sbb
xor
mov
adc
push
pop
add
or
dec
ret
cmp
jne
or
outs
hlt
call
pop
push
dec
retf
stc
sub
daa
sbb
xchg
pop
jg
dec
jp
mov
cmps
nop
mov
cmp
push
lahf
in
sti
sbb
push
xchg
shl
inc
xchg
cwde
stos
outs
repz
out
aad
popa
push
or
sahf
push
mov
out
data16
mov
xor
adc
mov
imul
mov
fs
shl
shl
cli
rcr
popa
xchg
(bad)
jecxz
and
int
push
ins
into
jb
adc
gs
mov
in
rcl
adc
jg
bound
repz
aam
push
mov
cwde
and
aas
and
mov
or
sub
push
jb
test
jns
shl
pop
sbb
push
and
xchg
push
mov
aaa
imul
mov
cdq
(bad)
jmp
ds
(bad)
icebp
ror
inc
jg
xchg
les
cmp
jnp
xchg
rcl
cs
movups
push
pop
add
pop
cmp
pushf
in
les
test
shl
int3
aam
cmp
stos
cld
cs
cmp
stc
cs
into
add
call
rol
lods
jge
pusha
lea
ins
test
mov
pusha
fidivr
rcr
sbb
test
xor
adc
xchg
aad
sahf
and
jne
mov
adc
xor
inc
loop
push
push
popa
push
cmps
movs
mov
shl
sbb
mov
popa
mov
imul
loopne
aam
push
leave
jecxz
pop
jnp
mov
and
repz
rcl
pop
pop
outs
ror
and
push
(bad)
push
shr
sub
cmp
mov
mov
lahf
repnz
es
push
sub
jl
pop
inc
pop
cmp
xchg
xchg
mov
sbb
push
cmps
xor
out
inc
not
test
jno
sbb
scas
push
or
mov
neg
fistp
loop
out
shr
push
fwait
add
mov
sbb
pop
in
push
cmp
xlat
lods
jmp
ret
out
jp
add
lds
ds
sbb
dec
adc
(bad)
mov
dec
dec
or
sti
aad
adc
mov
cmps
push
aam
test
sub
mov
inc
and
lds
xchg
jae
fdiv
movs
pop
das
add
call
xor
mov
xlat
add
outs
jbe
gs
mov
pop
mov
ret
xchg
fisttp
pushf
lods
cmp
ja
aas
cmp
mov
test
sbb
sbb
inc
xor
and
cmp
je
ss
adc
mov
lea
loopne
mov
xor
xor
cmovs
adc
lahf
push
mov
adc
dec
push
sub
mov
mov
cmp
xor
lods
inc
pop
arpl
mov
mov
es
xor
mov
sub
nop
popf
dec
xor
shl
jl
sbb
jae
and
lods
ins
inc
push
xchg
ficomp
aam
push
xor
gs
adc
mov
mov
sub
test
or
and
pop
mov
movs
xor
fstp
retf
jns
test
mov
loop
clc
mov
jecxz
movs
and
cmp
xor
ins
cmc
mov
rcr
outs
iret
mov
out
mov
push
xchg
repnz
hlt
mov
test
ja
sub
pop
rol
mov
jne
cmps
xchg
mov
out
jmp
push
jnp
je
sub
popa
or
adc
aam
test
lods
xor
xor
mov
test
mov
outs
pusha
(bad)
and
cmp
sub
dec
dec
sbb
jo
pop
shl
mov
xchg
out
xlat
bound
xchg
mov
dec
les
das
sbb
lock
push
xor
dec
out
call
xchg
dec
inc
push
shl
(bad)
mov
jp
jb
jl
cld
push
add
popa
inc
fidivr
outs
jg
push
sub
mov
add
std
fs
sub
adc
dec
ins
add
pop
add
retf
sub
iret
outs
ficom
xor
fsubr
rol
xor
mov
mov
lods
xchg
mov
scas
xlat
and
or
aam
push
ins
mov
dec
sbb
in
jns
popf
in
adc
fidivr
lar
lods
mov
xchg
xor
rol
push
pushf
adc
cdq
dec
add
cmp
pop
les
cmps
dec
inc
cmps
inc
sub
adc
std
sbb
sub
cmp
inc
das
pop
mov
push
sub
repnz
add
repz
ret
mov
std
aad
ret
or
call
setg
mov
xchg
sbb
adc
sbb
and
ret
xor
or
loopne
xor
das
add
shl
ds
add
xchg
ror
sahf
cdq
mov
inc
das
movs
imul
sti
dec
sub
xor
repnz
pop
fs
test
dec
cmp
jnp
lea
add
(bad)
leave
mov
xor
mov
dec
(bad)
sti
cmp
xor
pop
pop
aaa
ret
in
cld
mov
fstp
and
call
mov
hlt
out
jg
cmc
lea
scas
nop
mov
int3
sbb
push
stos
sub
pusha
mov
aam
xchg
retf
ficomp
(bad)
and
ret
xchg
xor
shr
or
pop
js
aaa
test
int
xchg
scas
adc
dec
rcl
xor
mov
xchg
dec
pop
pop
and
mov
dec
sar
pop
inc
movs
(bad)
aad
fs
movs
cwde
mov
xchg
sti
leave
cwde
mov
push
inc
xchg
loope
in
pop
lock
jne
jnp
pop
xor
ror
aad
cmp
shl
push
mov
loop
mov
lock
inc
popa
out
icebp
mov
xor
into
xchg
jae
xchg
fistp
add
sbb
sub
in
jae
and
cmp
fmul
and
ja
outs
aas
mov
pop
daa
iret
out
dec
inc
jne
xchg
sub
add
sbb
xor
aam
push
push
push
out
in
mov
arpl
adc
or
mov
sbb
jmp
cmp
mov
(bad)
xchg
aaa
push
popa
add
mov
int
jl
jne
stos
fnstenv
pushf
xor
test
sbb
pop
and
rol
jmp
test
push
rol
xor
arpl
sbb
ds
mov
shr
ret
imul
in
add
scas
movs
nop
and
movs
bound
mov
pop
jmp
add
cmps
inc
in
jne
movs
cdq
mov
cs
mov
xchg
jmp
mov
fs
xchg
(bad)
lods
std
out
aaa
mov
xchg
test
in
push
mov
les
gs
add
ror
push
jno
(bad)
les
fld
dec
retf
push
xchg
jb
outs
dec
cli
push
repnz
scas
stos
pop
imul
xchg
lds
sti
or
shl
mov
sub
leave
in
sbb
or
pop
clc
sub
stos
retf
sbb
push
sub
mov
adc
mov
mov
call
cmp
loop
xchg
stos
pop
jne
in
lahf
push
add
jle
cmp
xchg
int3
ss
neg
mov
add
sub
(bad)
sbb
cmc
mov
adc
pop
fxch
jno
inc
out
sbb
leave
mov
jle
add
dec
stos
sub
sub
and
add
pop
cmp
cmp
int
xchg
jne
fmul
xchg
scas
xchg
mov
fadd
jmp
xor
test
jecxz
aam
mov
xor
push
cmps
pushf
lock
addr16
inc
sbb
adc
adc
pop
int
cmp
add
or
cli
inc
pushf
test
mov
or
pop
cwde
loop
xchg
inc
fs
stc
push
call
pop
js
and
sbb
xor
push
sbb
lahf
add
xor
push
jmp
or
or
outs
inc
(bad)
je
out
xor
jmp
aad
mov
mov
enter
inc
imul
push
mov
mov
add
test
sub
scas
push
test
cs
xchg
int
pop
push
cdq
rcr
faddp
test
add
test
pop
dec
xchg
dec
xchg
retf
add
inc
retf
xlat
icebp
ret
push
enter
add
jle
sar
sub
sahf
pop
xor
pop
sbb
repnz
pop
xor
enter
dec
aaa
xlat
retf
mov
mov
push
int3
add
ficomp
fisub
xchg
rol
pop
jnp
or
xor
cmps
jae
mov
lods
gs
mov
xchg
ret
cmps
xchg
dec
xchg
rcl
mov
call
fsubr
ror
jo
pop
pop
mov
imul
das
stos
loop
mov
mov
pop
cmp
adc
dec
dec
push
scas
(bad)
cmc
inc
cld
inc
popf
mov
mov
pop
aad
push
pop
mov
retf
add
xchg
fs
idiv
xchg
popa
and
loop
jecxz
int3
arpl
sar
test
mov
leave
mov
(bad)
loope
cmp
jp
mov
sub
jmp
pop
ins
inc
xor
(bad)
jnp
cmp
arpl
pop
sbb
(bad)
mul
dec
cmp
cmps
dec
jle
rol
xor
mov
cmps
and
adc
test
inc
adc
push
fs
jmp
jbe
fdiv
ins
xchg
enter
daa
pop
or
cmp
xor
or
push
in
and
lock
and
aam
inc
shl
and
jge
repnz
adc
cmp
repz
and
jecxz
hlt
adc
mov
aaa
(bad)
out
or
pusha
lock
sub
push
ins
in
sbb
mov
mov
cmc
outs
pop
push
cmp
or
sub
stos
jb
jmp
lock
mov
retf
rol
and
pop
push
fimul
cmp
stos
inc
sbb
icebp
shl
scas
outs
ror
retf
hlt
fmul
cmc
sbb
cmp
cmc
cld
pushf
xor
pop
cmp
cdq
(bad)
inc
jb
mov
into
mov
jb
add
mov
int3
xor
and
(bad)
lods
adc
(bad)
fs
pusha
sub
inc
(bad)
pusha
popa
cmp
add
xchg
xchg
lahf
scas
clc
outs
and
pop
addr16
vpunpcklwd
cmps
push
(bad)
in
jo
(bad)
mov
(bad)
mov
mov
out
cmp
repnz
in
inc
pop
cwde
mov
mov
sar
adc
xchg
hlt
mov
pop
add
call
daa
cmp
mov
pop
xor
enter
ficom
push
push
and
adc
fst
bound
rcl
rol
push
outs
xchg
sub
jp
mov
(bad)
sub
and
adc
neg
xor
ret
mov
(bad)
xor
cmp
aam
movs
loope
cmp
icebp
jmp
mov
or
fisttp
mov
aam
fld
add
jge
adc
aaa
sbb
push
outs
and
and
sub
cmp
sbb
pop
push
in
push
shl
iret
scas
loop
cmps
jg
inc
out
(bad)
outs
sbb
or
test
push
xchg
mov
mov
jb
dec
into
stos
cs
pop
dec
fs
sti
ins
sti
jo
jmp
cdq
cmp
ja
neg
sub
cmp
mov
fist
cwde
lahf
jecxz
ja
daa
or
cli
sar
adc
js
in
stos
xor
retf
xor
into
dec
sar
jnp
in
jno
inc
aaa
fs
dec
int
out
mov
sbb
add
fcomp
out
mov
cmc
mov
sub
inc
dec
sub
sbb
imul
cmp
mov
cli
jge
jle
mov
pop
test
and
push
cli
sbb
out
fst
fs
ins
dec
push
jbe
jl
scas
fcom
popa
mov
or
cmps
rol
rol
aad
jno
icebp
fwait
pop
or
or
mov
and
out
aas
and
adc
mov
mov
pop
cmp
rcr
out
mov
rcl
jmp
jge
pop
inc
outs
pop
stc
adc
iret
dec
fmul
mov
add
jns
scas
mov
mov
jmp
ror
pop
cmp
xor
je
cmp
fstp
outs
ja
push
cmp
test
rol
push
arpl
jl
add
cmps
test
clc
popf
shr
xchg
movs
gs
movs
lea
sbb
daa
retf
lds
test
clc
call
push
sbb
sbb
xor
cdq
out
mov
push
lds
repz
push
dec
mov
data16
sub
xor
fsubr
push
repz
push
gs
ret
movs
ds
inc
and
push
dec
add
sti
jbe
sbb
test
gs
jl
out
mov
dec
(bad)
push
pop
cmp
(bad)
xor
or
add
mov
nop
and
and
and
jmp
(bad)
cmps
mov
arpl
sbb
xchg
ret
mov
leave
mov
add
in
xchg
push
shl
cmp
loope
inc
and
jne
mov
sahf
xor
pop
test
or
icebp
cmp
jge
mov
in
movs
icebp
push
jecxz
into
xor
jle
int3
pop
inc
jge
xchg
stos
add
stos
cmp
test
out
dec
sub
lods
inc
scas
jp
push
or
adc
test
out
(bad)
sub
mov
or
mov
push
imul
pop
xor
add
or
add
cld
jno
mov
daa
pushf
xlat
or
imul
(bad)
mov
dec
enter
pop
inc
inc
std
(bad)
scas
xchg
ins
dec
sbb
shl
jbe
xor
dec
out
test
xor
dec
ss
shl
pop
mov
stos
arpl
adc
ja
jno
fnsave
adc
ficom
push
outs
loope
ficom
rcl
(bad)
outs
shl
inc
call
jl
scas
sti
jg
loope
fisttp
or
inc
add
sub
imul
(bad)
sbb
sub
lds
mov
das
xor
pop
or
(bad)
push
xor
imul
imul
test
aad
(bad)
mov
or
push
cld
sbb
out
mov
xchg
nop
cwde
les
mov
mov
jnp
das
add
int
sti
stos
imul
call
xchg
push
push
inc
sub
imul
cwde
cmp
or
call
(bad)
jno
jno
xor
stos
(bad)
mov
js
test
out
mov
xor
inc
movs
cwde
dec
imul
and
mov
add
loop
retf
(bad)
(bad)
fcomp
mov
jns
cs
push
imul
out
popf
cmp
leave
test
sbb
cs
aas
pop
jne
xor
movs
mov
aad
test
aam
rcr
loope
(bad)
sub
cld
mov
fsubr
in
int3
cdq
jb
and
(bad)
xor
sub
dec
push
mov
mov
dec
sub
mov
jo
mov
loop
mov
inc
push
es
or
out
or
lods
clc
shl
ror
sub
das
neg
ss
(bad)
cmp
cmps
dec
dec
bound
or
cmp
jne
hlt
dec
lods
jg
in
loop
ficomp
jp
aam
jbe
loope
xor
lods
icebp
pop
inc
push
xchg
(bad)
mov
repz
out
sub
neg
mov
idiv
xlat
repz
dec
loope
fsubr
cmp
mov
shl
sar
or
jo
or
fs
(bad)
lods
leave
mov
leave
add
fstp
pusha
nop
daa
add
rcr
pop
cli
fwait
xor
mov
adc
(bad)
pop
std
test
dec
xor
fistp
ins
push
mov
mov
and
mov
fist
sbb
(bad)
pop
fst
add
inc
test
and
cmps
xchg
cwde
icebp
fadd
push
adc
scas
mov
ja
mov
(bad)
addr16
cli
xor
cmp
xchg
ud0
movs
cmp
push
or
push
push
push
cmp
pop
inc
stc
cmp
addr16
fs
mov
xor
mov
dec
jo
mov
repz
into
push
inc
jmp
jge
pushf
fs
fwait
sbb
push
out
test
imul
sbb
xor
xor
mov
cdq
popf
(bad)
lahf
pusha
retf
sbb
adc
xor
ja
hlt
jge
or
inc
ret
stc
outs
mov
xchg
in
add
loop
(bad)
mov
out
cmp
out
dec
loopne
or
mov
repz
(bad)
pop
popa
xor
inc
in
pop
sub
(bad)
std
push
mov
inc
mul
jno
jnp
xchg
test
jnp
fs
sbb
test
cmps
fidiv
xchg
scas
addr16
mov
jmp
cdq
mov
jo
inc
jno
xchg
sbb
pop
jmp
aas
and
xor
popf
adc
movs
retf
inc
mov
imul
loopne
test
call
dec
ret
sbb
and
or
test
cmc
jmp
stc
push
adc
stc
cmp
mov
add
inc
pop
or
dec
xchg
pop
jno
adc
dec
sub
pop
inc
in
jns
rcr
cwde
cmp
jnp
or
cmp
ins
(bad)
in
sbb
sbb
and
jl
imul
pop
xor
(bad)
adc
push
xor
jo
cld
jg
lea
jl
xchg
jb
sti
out
stc
(bad)
xor
add
mov
jmp
mov
push
mov
fnsave
add
out
xchg
pop
stc
pop
push
ds
std
pop
cmps
lock
cmp
or
in
mov
fstp
imul
imul
shr
mov
les
inc
or
(bad)
push
xor
sbb
push
pop
and
(bad)
mov
mov
push
dec
cmps
push
push
inc
push
iret
xchg
cli
jmp
adc
xlat
xadd
shl
test
fsub
xchg
fwait
iret
jl
or
push
ins
fild
icebp
test
outs
mov
push
lods
mov
push
mov
push
jp
mov
pushf
fistp
adc
(bad)
and
sub
inc
pushf
cld
mov
pop
xchg
inc
lea
(bad)
xchg
retf
and
(bad)
fdivr
mov
pop
lds
xor
adc
pop
mov
jecxz
jg
mov
aas
push
or
xchg
into
sbb
repnz
in
add
pop
aaa
lods
pop
popf
add
dec
sahf
cli
mov
adc
ins
aad
jl
pop
or
sbb
xchg
jmp
mov
adc
ret
pushf
rcl
xchg
mov
or
and
rcr
add
mov
sub
or
clc
lods
bound
or
clc
push
cmp
or
dec
stc
pusha
int3
sbb
xchg
and
jge
pop
(bad)
sbb
out
ins
sbb
add
mov
(bad)
push
stc
sub
or
inc
inc
xor
retf
fsubr
mov
xor
enter
mov
or
pusha
imul
cmps
mov
cmp
push
dec
sub
out
gs
dec
xlat
idiv
xchg
pop
inc
imul
(bad)
bound
jne
imul
movs
test
ss
inc
pushf
scas
les
xchg
outs
mov
ror
nop
inc
jno
cmp
xor
ret
cmp
dec
(bad)
aaa
sub
or
sbb
push
stos
test
jp
mov
arpl
adc
stos
push
or
dec
jno
or
(bad)
mov
cmp
ficomp
jbe
loope
mov
sub
gs
aaa
adc
sub
add
xor
mov
aas
inc
jge
pop
pop
icebp
retf
pop
out
mov
adc
mov
push
add
mov
aad
pusha
fwait
adc
retf
inc
xor
into
fcomp
lods
(bad)
bound
sub
push
dec
push
imul
call
pusha
push
fs
cld
test
pop
fild
add
pop
push
mov
in
les
xchg
push
aam
push
xor
push
mov
xor
jg
out
ret
push
shl
jp
imul
into
jbe
cmp
jno
mov
daa
scas
ins
inc
sub
xchg
sti
(bad)
out
ret
test
xchg
(bad)
pop
shl
xchg
iret
xor
imul
loop
mov
cmp
mov
(bad)
pop
ret
cmovp
dec
retf
and
or
add
sbb
sar
xchg
or
and
fidivr
out
rcr
jmp
xor
pop
push
cs
add
js
lock
inc
xor
dec
outs
mov
xor
xor
add
pop
jg
js
adc
aam
pop
sti
sbb
cmc
inc
sti
add
jne
adc
xor
push
and
push
shr
push
dec
ret
sbb
out
bound
test
stos
int
aam
add
lods
arpl
xchg
jge
idiv
stc
out
mov
das
stos
dec
and
xchg
and
lahf
push
mov
mov
in
popa
daa
cmps
push
mov
(bad)
mov
cli
adc
mov
push
cmp
rcr
ins
push
(bad)
jg
jle
cmp
sub
or
(bad)
frstor
pop
test
cs
mov
xchg
or
inc
ss
mov
xor
inc
sub
mov
xchg
or
leave
or
adc
mov
mov
cpuid
cs
jne
push
(bad)
push
pop
call
sub
cmp
ficom
dec
fcomp
push
jns
fiadd
repnz
add
ins
dec
mov
add
aam
aad
inc
out
mov
xor
icebp
xor
cli
repz
xchg
or
out
xchg
jo
mov
retf
inc
jle
push
jnp
pop
dec
gs
adc
jmp
push
jnp
mul
add
xchg
lods
imul
neg
dec
add
xchg
daa
int
int3
xchg
iret
sbb
pop
mov
bound
sub
loopne
in
fwait
mov
mov
movs
test
sbb
or
push
stos
xor
xchg
cs
sahf
es
fidiv
push
jecxz
cld
and
add
cmp
jns
cld
push
and
and
adc
out
je
in
push
pop
cmp
jp
mov
mov
push
scas
call
xchg
xchg
mov
(bad)
cmp
xchg
std
inc
jns
fwait
iret
adc
icebp
xchg
and
xchg
(bad)
repz
jnp
lods
neg
push
push
dec
pop
je
and
fst
cmp
scas
xor
add
movs
retf
shl
jmp
lock
nop
push
pop
sbb
push
aam
js
pop
(bad)
push
(bad)
out
pop
jne
ds
xchg
or
mov
jne
leave
adc
cwde
in
loop
lock
test
xchg
adc
pop
(bad)
push
lahf
mov
push
ins
(bad)
popf
xchg
dec
cmpxchg
xchg
push
call
sbb
push
ds
xchg
mov
dec
into
psrld
and
pop
xchg
fsubr
cdq
pop
loope
fistp
sbb
fisttp
pop
std
xchg
xchg
fidiv
enter
or
cmps
mov
pop
repz
push
add
imul
push
in
xchg
ret
jl
xchg
mov
xchg
jo
push
sbb
aas
imul
mov
int3
push
sar
sbb
inc
jmp
lahf
and
and
mov
cmp
psllw
or
fdivr
mov
or
inc
fdiv
(bad)
sub
inc
jns
rol
jmp
mov
scas
movs
add
mov
in
in
adc
jb
or
out
xor
inc
imul
push
push
daa
and
dec
push
xchg
sub
fwait
popa
sbb
cwde
fsub
jns
pop
xchg
stc
push
add
movs
jb
dec
push
and
or
leave
sbb
test
or
inc
lods
fucomp
jne
and
lods
xor
out
test
mov
mov
mov
dec
inc
addr16
jae
cmp
add
repnz
mov
(bad)
aas
jp
pop
xchg
add
jns
inc
sbb
inc
jmp
jo
mov
aad
jns
out
xchg
sub
fild
dec
cli
stos
inc
outs
cmp
neg
pop
and
clc
sbb
push
dec
shl
xchg
test
pop
shl
or
xchg
in
xchg
out
in
mov
cmps
lahf
mov
retf
cmp
hlt
xor
fbstp
inc
fucomip
jg
xor
dec
sbb
clc
xor
out
add
das
sub
sbb
mov
cmp
out
push
and
and
stos
ins
jmp
mov
pop
out
cdq
les
popa
xchg
push
sbb
cmp
rcl
test
or
icebp
outs
inc
daa
push
jb
push
jp
imul
mov
xchg
fisttp
jbe
call
sub
pop
pop
xchg
jmp
hlt
(bad)
push
dec
scas
dec
jns
stos
xor
mov
outs
pushf
add
mov
cs
fdivr
push
push
fisub
ja
in
xor
in
mov
(bad)
push
sahf
mov
inc
mov
sbb
(bad)
dec
in
pop
push
stos
aaa
mov
mov
addr16
xchg
cmc
xor
sub
stc
retf
jae
jge
or
and
test
pop
cli
mov
mov
pop
test
pop
or
fdiv
fucom
mov
in
mov
push
pusha
sub
mov
(bad)
fcomp
sub
push
out
or
jmp
popa
(bad)
dec
pop
xchg
(bad)
cmps
mov
out
test
int3
ret
ret
addr16
xchg
rol
cmps
in
ret
adc
add
(bad)
(bad)
jmp
addr16
outs
pop
pop
in
mov
or
sbb
pop
cmp
xchg
scas
arpl
mov
lods
cmc
dec
xchg
push
and
fiadd
xchg
pop
and
addr16
pop
rcl
jo
xor
mov
addr16
sbb
mov
lods
stos
push
pop
and
outs
xor
inc
shr
addr16
pop
ror
call
dec
inc
cmp
(bad)
sti
jle
imul
stos
mov
mov
inc
je
add
out
arpl
inc
sub
pop
sub
xchg
xchg
and
in
fdiv
mov
lahf
and
sub
aas
push
das
aad
or
cmp
rcr
lods
fwait
sbb
dec
out
mov
lods
xchg
sbb
sub
fisttp
dec
imul
(bad)
sbb
xor
scas
cmps
add
test
mov
ret
out
mov
mov
jns
cmp
jne
pop
clc
test
jo
in
adc
or
mov
(bad)
pop
rcl
test
jo
cmps
ret
daa
jge
shr
jge
mov
push
pop
jp
sub
mov
(bad)
mov
fist
ja
push
sbb
add
sti
les
mov
dec
xchg
loopne
sub
push
mov
aas
fcmovnu
arpl
shr
rcl
mov
pop
xchg
imul
add
push
add
jecxz
ds
stc
pop
and
inc
imul
lock
inc
mov
and
outs
jle
jno
arpl
sti
sub
sub
jne
ins
(bad)
adc
(bad)
(bad)
loopne
xchg
nop
and
inc
ins
mov
pop
fmul
cwde
and
push
sahf
cmps
out
jb
xor
int3
mov
mov
mov
daa
sbb
imul
dec
lods
and
push
adc
mov
sbb
jp
mov
loope
inc
add
minps
adc
in
lods
or
dec
and
fld
mov
lock
das
xchg
adc
xchg
push
push
icebp
movs
jg
cmp
mov
fwait
std
jb
hlt
ins
loopne
push
pop
je
dec
test
dec
jb
call
inc
imul
inc
pushf
das
movs
mov
jge
push
xchg
retf
lea
xchg
sub
or
sub
lock
or
fstp
scas
push
stc
dec
in
in
iret
sub
hlt
xlat
scas
inc
jns
sbb
(bad)
ret
(bad)
repnz
jge
inc
inc
mov
sub
scas
aas
mov
fs
jo
jno
dec
mov
ja
jo
inc
popf
push
(bad)
jmp
inc
(bad)
bound
xor
cmp
jmp
jns
jnp
jecxz
mov
add
pop
inc
clc
addr16
movs
or
push
ds
xchg
aam
int
retf
call
lahf
push
cmp
test
icebp
sbb
xchg
pop
jns
dec
dec
call
popf
movs
mov
jne
ins
ins
(bad)
fbld
or
std
push
add
loop
repz
fdivr
(bad)
mov
mov
inc
mov
xor
aaa
mov
pusha
outs
gs
mov
cmp
mov
stos
arpl
bound
dec
pop
loop
lods
ror
neg
dec
mul
clc
cli
in
add
and
sbb
push
sub
loope
xor
and
bound
int
dec
push
(bad)
jg
neg
out
pop
dec
mov
push
and
call
fdiv
popf
mov
cmp
xchg
(bad)
cwde
push
adc
push
add
icebp
or
jnp
sbb
inc
fstp
inc
loope
mov
sub
add
outs
ds
and
jno
dec
jmp
and
add
sub
mov
push
fild
push
(bad)
and
xor
enter
popa
loopne
pop
xor
cmps
pushf
loop
sbb
int
sub
in
fld
outs
aam
inc
or
xor
out
cdq
mov
xchg
(bad)
in
sti
(bad)
(bad)
lahf
add
outs
xchg
sahf
cmps
fistp
mov
xchg
mov
mov
(bad)
xchg
ror
mov
aaa
fisttp
inc
(bad)
js
in
sbb
mov
rol
dec
dec
(bad)
pop
jp
call
loope
imul
xchg
xor
and
das
sub
call
aam
icebp
imul
xchg
inc
mov
add
add
dec
in
or
and
cmp
xchg
stos
or
jbe
and
jge
arpl
push
scas
sub
daa
pop
or
cmps
dec
mov
mov
in
(bad)
jns
call
inc
jns
mov
leave
gs
fwait
bound
mov
nop
test
xchg
xor
stos
mov
ins
cdq
cwde
jecxz
mov
sbb
mov
push
ds
sar
push
ss
mov
hlt
ja
pop
stos
inc
xchg
xor
out
out
mov
sbb
and
cwde
(bad)
fs
sub
sahf
test
sbb
in
mov
mov
push
mov
dec
fs
add
and
fidiv
and
inc
mov
fs
(bad)
(bad)
cmp
lahf
mov
jb
xlat
adc
mov
inc
js
xchg
cmc
bound
pusha
jbe
jo
dec
xor
fistp
(bad)
in
xchg
icebp
sub
ret
xchg
cli
adc
jp
and
jp
pop
repz
cmp
pop
in
stc
inc
cmp
xor
loopne
das
test
ds
pop
xchg
clc
jb
bsr
inc
push
inc
inc
aam
sar
dec
jne
out
lahf
mov
jge
jg
in
aam
add
and
and
xchg
popa
pop
adc
add
rcl
fs
mov
movs
fisub
movs
and
jne
mov
cld
clc
dec
fbstp
sbb
adc
(bad)
push
add
mov
jb
fild
pushf
and
lds
push
sub
add
rol
lock
jp
jae
sar
mov
in
jl
retf
xchg
(bad)
jg
shl
lea
sub
stos
in
jmp
loop
loope
fistp
inc
ror
xlat
inc
xchg
lods
cmp
jb
out
sub
sbb
fucomi
std
and
(bad)
sahf
mov
js
jbe
cld
enter
jle
mov
out
iret
fadd
sbb
xchg
repz
leave
cdq
mul
cmp
cmpps
dec
movs
push
retf
pop
jmp
sub
add
or
loopne
xchg
(bad)
or
mov
into
jno
mov
pop
push
adc
inc
and
sbb
out
scas
add
adc
sbb
mov
cmp
jmp
inc
jmp
loope
mov
test
add
in
mov
out
jne
hlt
inc
(bad)
cmp
leave
add
in
outs
retf
mov
(bad)
mov
mov
push
call
mov
js
cdq
sub
and
push
jns
in
sub
ja
xor
jle
frndint
call
shr
bound
pusha
sub
add
repnz
xchg
shl
das
fld
jg
push
sbb
add
aaa
mov
gs
mov
loop
fsub
sbb
test
mov
xor
adc
nop
push
xchg
sbb
push
dec
mov
mov
not
fisubr
popf
rep
in
adc
outs
pop
or
out
pop
pop
out
xor
mov
or
jae
add
inc
inc
aas
and
and
or
popf
shr
cmps
das
rcl
push
and
movs
fcomp
js
mov
xor
adc
add
std
lock
jg
dec
cmc
push
cmp
pusha
adc
les
xchg
inc
test
inc
pop
xchg
rcr
sbb
pop
test
sbb
mov
es
(bad)
in
stos
pop
fs
paddusb
cwde
lahf
adc
sub
jb
arpl
nop
and
adc
inc
aam
aad
in
in
aad
scas
fsubr
(bad)
sbb
repnz
mov
and
add
cmp
lahf
mov
fbstp
mov
cmps
pop
lahf
ficom
dec
add
shl
pop
ret
jmp
inc
movs
push
jle
push
cmps
scas
div
adc
imul
jle
ret
sbb
loop
adc
nop
in
gs
neg
(bad)
rol
stos
xchg
push
jecxz
mov
sub
lahf
sub
or
fwait
mov
mov
cwde
pop
push
cwde
dec
lock
out
(bad)
pop
icebp
ins
sub
inc
jecxz
stc
mov
pop
iret
sbb
add
dec
mov
ss
das
mov
and
xor
jle
jle
jo
mov
fcom
push
dec
stc
test
ficom
or
shl
inc
(bad)
push
in
je
fldenv
out
mov
cmp
push
mov
or
pop
inc
int3
mov
xchg
xchg
or
fist
lods
dec
data16
jecxz
jns
mov
mov
xchg
sub
call
jno
popa
push
outs
ret
(bad)
adc
and
sub
jmp
std
mov
imul
dec
inc
stos
inc
movs
mov
inc
pop
jecxz
push
adc
mov
in
push
fisub
ja
repz
xchg
add
out
adc
mov
cmc
mov
or
pushf
ja
cld
aam
daa
jne
and
lahf
cs
les
test
mov
psubusw
xor
jns
fld
(bad)
jb
rol
(bad)
fild
xor
xor
je
sbb
idiv
dec
mov
pop
out
mov
inc
shl
sbb
shl
not
clc
xchg
lea
je
ret
rcr
push
aas
jp
xchg
test
sub
cdq
xchg
jne
and
imul
mov
mov
shr
push
out
mov
das
imul
jns
pop
lock
sbb
sbb
aas
dec
jmp
jle
scas
jb
mov
ret
scas
(bad)
push
int
xor
adc
adc
pop
jp
mov
(bad)
ins
mov
fisttp
imul
or
out
fstp
or
lods
or
adc
mov
add
cmp
push
fadd
push
js
sbb
shl
test
sar
jmp
(bad)
in
sar
fsub
sbb
(bad)
out
or
mov
mov
fistp
cmps
sbb
push
adc
lods
repnz
adc
mov
jp
shr
into
jne
ins
cmp
cli
loop
jns
push
inc
adc
jle
pop
xor
pop
mov
in
jae
ret
mov
pop
aaa
add
lds
mov
call
inc
and
pop
(bad)
jle
pop
ss
mov
gs
not
jmp
ret
rcpps
clc
xchg
sub
outs
int
cdq
repz
mov
fisub
in
pushf
int3
ret
mov
inc
gs
dec
and
test
inc
cmps
call
mov
xor
sub
dec
jo
ins
mov
cs
mov
rol
dec
outs
call
in
(bad)
or
push
in
add
inc
sub
and
ins
mov
adc
pop
fnsave
sub
dec
sbb
mov
enter
mul
std
in
inc
xchg
stc
mov
jecxz
xchg
xor
inc
ficomp
int
in
mov
call
mov
inc
(bad)
mov
push
mov
dec
into
mov
mov
xor
mov
fwait
mov
jmp
call
lods
hlt
jmp
ret
and
mov
rcr
loop
fst
or
dec
inc
fucomip
es
mov
(bad)
fstp
enter
sub
and
in
sub
aam
pop
int3
xor
leave
xchg
inc
or
out
bound
cmp
int3
inc
ds
dec
and
inc
bound
(bad)
ins
push
idiv
(bad)
(bad)
out
xchg
test
or
out
retf
mov
lea
dec
mov
or
or
lock
jge
dec
enter
mov
fisttp
push
retf
sub
adc
pop
aad
jo
adc
sub
aam
xlat
test
in
rol
jno
mov
jns
mov
jl
dec
loop
hlt
call
stos
sbb
loopne
jbe
popa
stos
sbb
or
nop
add
lock
ficomp
repz
test
push
pop
xor
call
imul
xchg
mov
pop
iret
pop
es
sbb
bound
and
dec
inc
(bad)
cmp
jb
jno
std
ins
push
jo
jb
mov
(bad)
jae
outs
adc
ins
inc
jb
je
add
cld
stc
jno
sub
shl
push
test
mov
fadd
adc
repz
fs
ret
test
popf
call
or
int3
leave
mov
pop
mov
inc
mov
and
and
movs
push
lahf
outs
aam
lds
je
and
add
push
test
sub
xor
jno
dec
push
aas
aaa
xor
inc
cld
fwait
xchg
adc
aad
hlt
loope
ins
cmp
jb
jle
inc
scas
cld
xor
and
xor
out
std
stc
dec
pop
sub
movs
cmc
lods
and
cmp
stos
or
into
push
(bad)
outs
mov
cmp
add
iret
pop
out
xchg
mov
xor
xor
xchg
fdivp
pop
ins
or
lmsw
jae
out
test
push
lods
and
pusha
rol
sub
adc
push
mov
call
bound
sub
sub
push
sub
xchg
jmp
jp
test
ret
fwait
mov
in
div
lods
and
stos
into
push
and
mov
sbb
xchg
jno
mov
mov
and
sahf
ret
(bad)
gs
cdq
mov
mov
jne
int3
add
in
mov
ficom
xor
mov
pushf
add
mov
shl
add
mov
add
mov
sub
outs
xchg
dec
aas
jg
xlat
mov
jo
ins
xchg
rol
fcom
ss
dec
cvttps2pi
popf
sub
das
mov
or
or
in
fidiv
je
call
iret
mov
clc
sbb
out
cmp
xchg
icebp
cld
movs
(bad)
int
sub
sub
mov
in
retf
pop
cmps
jmp
(bad)
cmp
test
fcmovu
stc
movs
pop
mov
jae
sahf
movs
mov
jb
into
cmp
dec
dec
sbb
cmc
inc
mov
mov
dec
cmp
shr
sub
int
daa
ins
adc
(bad)
push
mov
inc
pusha
sub
les
dec
retf
mov
jp
lods
inc
js
xchg
or
loop
ds
sti
(bad)
repnz
enter
xchg
inc
std
sbb
mov
js
mov
jle
sbb
mov
sub
cmp
or
and
enter
mov
mov
data16
aam
ficomp
imul
jo
and
das
call
aaa
dec
xchg
fiadd
mov
test
mov
xor
movs
lods
xor
dec
(bad)
neg
stc
rol
add
sbb
sbb
es
push
sub
dec
(bad)
mov
icebp
not
xchg
call
mov
movs
mov
das
sub
jo
popa
shl
cmc
or
cs
mov
sar
sub
mov
imul
or
aas
xchg
inc
jp
pop
dec
arpl
in
popa
cmp
dec
push
xor
jnp
scas
stos
arpl
(bad)
out
sti
in
imul
cmps
sbb
fsubr
test
xchg
out
aas
jnp
adc
pop
mov
(bad)
cmc
rcl
and
addr16
xor
and
jl
jns
or
adc
pusha
push
das
call
jle
repz
popf
daa
push
mov
imul
jmp
jmp
out
jno
enter
rol
sub
mov
jmp
stos
inc
lea
lods
dec
rol
xchg
sbb
push
js
xchg
adc
fstp
test
inc
or
aam
mov
(bad)
jmp
inc
bound
repz
test
aas
ror
jae
and
pop
into
test
fistp
sub
pop
push
jae
mov
test
les
push
mov
call
xchg
mov
daa
add
and
sub
jge
test
xor
adc
idiv
sahf
sub
fild
outs
mov
add
mov
iret
dec
std
mov
icebp
les
xchg
jecxz
arpl
xchg
sar
test
jecxz
xchg
jns
pop
enter
push
push
bound
aam
jge
imul
fwait
sbb
xor
pop
push
push
cs
movs
cwde
pop
adc
imul
ss
push
pop
sbb
xor
mov
fnsave
sbb
out
or
xchg
add
mov
out
shl
cwde
(bad)
aad
out
scas
pop
or
cdq
call
adc
or
pop
cwde
jmp
xor
and
fstp
pop
sbb
repnz
adc
mov
adc
dec
xor
popa
cld
out
fsub
sbb
stos
inc
mov
fcmovbe
xor
mov
and
fstp
(bad)
mov
or
retf
das
mov
dec
ret
mov
mov
sub
mov
jl
das
sub
cmc
jo
jno
jno
sbb
in
shl
mov
call
in
mov
ror
cmp
fnstsw
adc
jns
cwde
xchg
mov
cdq
idiv
jle
push
mov
push
sub
pop
inc
or
mov
cwde
lea
cmps
arpl
xlat
imul
stc
int3
adc
dec
pop
in
stos
cmp
xor
xchg
add
mov
and
loop
and
fsub
jp
out
outs
mov
jmp
add
mov
mov
gs
mov
sbb
xchg
sbb
(bad)
cmp
cmp
fild
xchg
inc
or
sbb
cmp
cld
stos
xchg
jne
jg
fs
jle
push
sub
stos
pushf
jne
mov
retf
add
hlt
ds
adc
adc
push
test
ficom
cmp
and
cmc
ins
mov
xor
cmp
push
(bad)
push
add
inc
loop
cmp
cld
jo
ds
out
inc
add
xchg
leave
xchg
mov
jmp
mov
add
mov
adc
xchg
aaa
imul
test
and
pop
lods
out
std
(bad)
hlt
push
jle
inc
retf
les
mov
repz
cmp
movs
xchg
xchg
lock
cmp
gs
mov
sahf
arpl
push
int
test
dec
js
pop
scas
cmp
xor
jb
iret
aas
inc
mov
or
imul
scas
sbb
repz
jnp
cmp
in
add
stos
shr
and
mov
push
sbb
push
and
outs
jae
mov
mov
outs
pop
fldcw
in
gs
mov
stc
gs
(bad)
retf
bound
pop
in
sub
in
ret
xchg
les
adc
ds
dec
sahf
fistp
scas
jge
xor
out
push
mov
push
dec
test
pushf
pop
stc
jne
sub
stc
xor
sbb
adc
push
jnp
cwde
adc
lods
std
mov
inc
jge
out
xchg
xor
outs
push
sub
mov
and
es
inc
push
mov
add
loopne
rcl
mov
icebp
mov
pop
add
add
addr16
mov
popa
or
repnz
inc
jne
icebp
scas
push
jmp
xor
cmp
in
sbb
sub
movs
in
test
sub
cmp
or
arpl
and
mov
sar
jmp
mov
in
mov
das
xchg
inc
mov
xchg
adc
and
adc
out
bound
fdiv
mov
adc
cli
call
(bad)
test
push
push
mov
jp
mov
ja
sbb
and
or
xchg
in
mov
scas
mov
xchg
test
in
std
cmps
dec
shr
dec
mov
push
mov
ror
fsubr
mov
dec
out
(bad)
mov
cmp
fwait
jp
into
pop
sub
push
ins
jbe
sub
push
xor
clc
repnz
add
popf
fdivr
push
clc
iret
push
int
inc
sub
stc
mov
xchg
jge
push
lea
rcr
loopne
add
xchg
aad
xor
sub
dec
xor
fild
xlat
sbb
loopne
(bad)
fs
cwde
icebp
pop
adc
aas
out
push
or
or
rcl
cs
int
mov
mov
push
push
leave
or
imul
fucom
gs
in
xchg
jnp
popa
(bad)
je
movs
push
out
and
sti
cdq
mov
jnp
dec
or
fidiv
mov
call
ret
clc
mov
push
int3
hlt
push
cdq
or
arpl
sub
hlt
stc
(bad)
(bad)
lahf
xorps
mov
bound
test
mov
lods
inc
lds
ret
dec
ja
xchg
push
mov
xchg
outs
dec
pop
retf
sbb
jno
(bad)
loopne
arpl
pop
add
popf
and
pop
jne
pmulhuw
int
outs
mov
jle
mov
repz
retf
pop
es
sbb
loope
xchg
nop
(bad)
fwait
outs
shr
jle
outs
call
scas
adc
iret
jno
push
push
imul
enter
popa
pop
sti
test
mov
inc
xchg
mov
pop
pop
pop
inc
jmp
out
repz
or
aas
pop
or
push
fimul
xor
prefetch
retf
(bad)
loopne
loopne
(bad)
sahf
or
aas
bound
daa
cmp
test
cmp
int
xor
cmp
inc
lods
sub
adc
jne
and
lea
mov
mov
fsubr
cmc
js
xor
mov
sub
test
inc
out
push
into
mov
dec
mov
iret
pop
xchg
mov
stos
xor
sub
dec
inc
stc
lock
mov
adc
gs
adc
cld
ins
dec
push
xchg
push
push
add
jo
dec
wbinvd
test
das
aam
sub
sbb
std
ds
mov
xchg
and
inc
in
sbb
mov
lock
xchg
add
rcl
cli
and
mov
daa
mov
repnz
iret
xchg
xor
sbb
ret
xor
push
repnz
popf
sbb
lea
mov
rcr
xor
sti
sar
mov
xrelease
push
push
ins
add
fwait
push
jne
jp
repnz
sub
sbb
cmp
adc
sbb
ds
mov
pop
dec
or
in
xor
cmp
cmc
jp
sub
pop
xchg
xchg
retf
push
movs
jmp
adc
ficom
pusha
scas
fs
fdivr
xor
cmc
fnsave
(bad)
aam
in
add
jl
cli
xchg
ds
mov
or
cmp
scas
lea
add
movs
in
sbb
sub
jb
stos
xor
add
pop
outs
jecxz
mov
mov
or
dec
dec
out
pop
adc
test
or
and
cmp
cmps
and
(bad)
cmp
cmp
aaa
das
mov
lds
pop
mov
mov
pop
ret
dec
rcr
imul
cmp
or
and
loopne
imul
mov
push
mov
mov
cmp
xor
inc
add
sub
cmp
shr
aaa
not
outs
mov
jne
shr
sub
(bad)
bound
(bad)
clc
and
pop
lods
adc
movs
xchg
test
js
push
dec
and
or
sub
add
out
adc
lods
dec
mov
jecxz
pop
dec
pop
das
add
jp
xchg
in
aam
enter
cwde
into
leave
xchg
nop
cmp
cmps
xlat
dec
mov
nop
inc
xor
or
xor
push
inc
hlt
sub
lods
mov
fsqrt
sub
inc
push
mul
mov
mov
mov
xlat
fbld
xor
jne
inc
sbb
jnp
push
outs
push
dec
pop
das
mov
dec
jmp
not
push
int
popf
clc
cmp
cmp
sti
icebp
popa
(bad)
mov
push
addr16
(bad)
repnz
inc
push
shl
cmp
or
jns
xchg
stc
(bad)
pop
mov
int3
xlat
xor
push
xchg
add
adc
pop
inc
(bad)
mov
ja
int
mov
inc
mov
and
std
popa
pop
cmps
ror
inc
and
sub
pop
mov
push
pop
mov
adc
jmp
inc
push
imul
pop
jne
push
push
(bad)
movs
or
cld
aas
in
dec
fcomp
add
rcr
xor
das
inc
leave
stos
test
call
xchg
out
std
ror
(bad)
jecxz
pop
sbb
stos
sar
mov
xchg
repnz
and
(bad)
xchg
jo
mov
push
mul
or
clc
dec
ss
ret
sar
rcl
dec
lock
sub
mov
jae
nop
mov
mov
adc
jae
sub
cld
out
and
push
dec
out
or
xchg
jle
jmp
loopne
mov
repz
(bad)
sbb
adc
leave
jecxz
(bad)
mov
fldcw
xlat
dec
loope
stos
dec
mov
cld
jle
inc
adc
jno
xchg
or
addr16
out
call
cli
loopne
cld
popa
cmp
ins
arpl
adc
mov
jne
sar
dec
pop
adc
xchg
popa
sbb
(bad)
jl
push
jbe
xor
xor
out
repz
(bad)
ins
(bad)
jge
frstor
imul
push
rol
push
xchg
dec
mov
jl
ins
mov
push
movs
getsec
cmp
push
ss
test
fisub
xor
jb
fadd
mov
data16
fcom
pushf
mov
push
nop
retf
out
adc
iret
xchg
arpl
push
fwait
scas
cs
push
xchg
lods
sti
xchg
stos
outs
pushf
push
or
ds
out
xchg
dec
shl
jno
push
jnp
xchg
aas
sub
test
or
pop
ss
out
movs
jecxz
psllw
push
fstp
cmp
repz
sbb
add
pop
jecxz
loop
in
sub
adc
repz
aad
fisttp
lahf
gs
ds
jp
fwait
call
adc
popa
pop
test
dec
and
or
sbb
mov
add
mov
cmp
icebp
pop
push
xor
mov
dec
mov
xor
add
out
push
hlt
std
xchg
das
mov
mov
movs
dec
outs
(bad)
xchg
stos
fstp
pop
xlat
(bad)
fisttp
jle
test
mov
out
pop
xchg
in
cmps
ins
mov
sahf
push
mov
(bad)
ror
(bad)
in
xchg
xor
ret
sti
test
lods
scas
add
add
xchg
dec
and
push
mov
mov
xchg
cdq
jmp
xor
test
adc
inc
iret
inc
dec
iret
xchg
(bad)
loopne
shl
clc
adc
pop
push
frstor
sub
push
mov
or
(bad)
and
leave
xchg
inc
mov
jmp
jne
call
or
in
outs
or
stos
inc
dec
pop
mov
mov
call
loop
outs
ret
pop
scas
aas
pushf
frstor
cli
cwde
shl
or
push
cmp
test
xor
out
sub
mov
xchg
lahf
cmp
push
adc
std
and
stc
(bad)
ins
es
rol
jg
sti
or
cmp
fisubr
dec
retf
xlat
cli
cmp
out
outs
and
lods
jnp
sub
loop
scas
lds
adc
das
adc
mov
jp
ins
add
fs
jne
lock
cli
inc
dec
dec
cs
fs
enter
lods
mov
aam
mov
mov
adc
test
adc
jnp
push
mov
mov
dec
jmp
lea
cwde
inc
rol
cld
sti
jecxz
les
lea
inc
push
(bad)
fistp
imul
or
js
(bad)
adc
cdq
test
js
and
mov
jmp
xchg
outs
pusha
push
push
pop
mov
(bad)
mov
push
outs
mov
retf
sbb
jno
das
or
jle
sub
mov
or
call
(bad)
mov
pop
(bad)
pop
pop
icebp
data16
icebp
dec
pushf
in
in
jecxz
inc
call
sub
retf
inc
cmp
pop
ror
lods
jb
add
xchg
jb
scas
cld
scas
leave
push
ins
gs
mov
adc
into
push
lea
xchg
scas
xor
mov
push
in
not
loope
xlat
xor
sbb
xchg
xor
push
sar
jp
cmp
jle
push
into
(bad)
test
aad
aaa
loope
lods
mov
xchg
mov
mov
stos
or
jb
dec
call
jmp
mov
addr16
loope
sbb
and
loop
pushf
xchg
les
or
xor
rcl
(bad)
adc
adc
inc
call
or
cmp
pop
pop
js
sbb
ins
jl
xor
pop
mov
outs
mov
jmp
mov
cmp
sub
push
mov
sub
and
cli
mov
dec
dec
aad
dec
ds
movs
inc
ds
out
add
sub
mov
xor
mov
pop
cmovb
adc
sub
fwait
jp
test
add
ins
fcmove
and
shr
push
dec
mov
pop
sbb
sbb
out
je
and
cmp
pop
loopne
mov
sbb
mov
jge
cmp
call
adc
jne
and
mov
arpl
ficomp
cmps
add
dec
retf
ret
adc
cmps
and
pop
test
mov
adc
(bad)
dec
stc
fwait
lds
adc
outs
repnz
aaa
pop
or
clc
mov
xchg
pop
mov
imul
push
out
test
xchg
add
ds
fldenv
addr16
lds
cs
xor
adc
mov
gs
lock
sub
into
dec
(bad)
mov
adc
lods
ds
cmps
inc
mov
arpl
sbb
dec
sub
test
push
push
cmp
pop
add
popa
mov
jno
mov
cdq
and
push
imul
xor
ja
sar
ds
mov
loop
jge
inc
(bad)
jp
fwait
push
pop
sub
aaa
push
repnz
xor
jb
xchg
xor
pop
lods
inc
inc
repz
ret
push
inc
adc
imul
int
jmp
sbb
jg
sbb
shl
shl
cmovae
movs
add
inc
test
sub
fsubr
rcr
mov
xor
movs
xor
pop
fisub
pop
shr
ins
(bad)
(bad)
int3
arpl
es
test
cmp
sti
mov
or
mov
das
pop
or
xor
pop
retf
out
mov
dec
and
mov
call
sbb
js
jmp
imul
mov
inc
add
fwait
dec
mov
mov
clc
mov
mov
jg
mov
and
lock
push
shl
mov
cdq
jmp
cs
xchg
inc
(bad)
fisttp
pushf
push
dec
pop
ins
xor
mov
cmps
repz
xchg
cmps
push
inc
xor
(bad)
outs
fidivr
add
jmp
out
pop
rcl
sub
cmp
jmp
dec
scas
movhps
inc
sar
rol
shl
cli
xchg
call
jmp
es
ror
inc
hlt
inc
sbb
adc
cwde
dec
mov
call
xor
pop
enter
imul
mul
retf
push
sub
bound
dec
xor
push
clc
mov
je
out
push
outs
stos
int
mov
pushf
pop
ret
xchg
or
sbb
dec
mov
ins
shr
sbb
inc
stc
add
adc
fcomp
ret
outs
xor
sub
push
shr
sbb
sub
imul
rol
push
stos
mov
ins
cdq
sbb
mov
xor
pop
pusha
cli
jl
xchg
xor
stc
pop
bt
inc
leave
scas
fst
outs
je
inc
jne
repnz
or
fidivr
aaa
sub
call
dec
or
popa
retf
mov
sub
in
lock
add
dec
(bad)
pop
cs
or
inc
adc
sbb
mov
ret
aad
movs
mov
pop
icebp
xor
xor
retf
xor
or
add
mov
add
popf
js
adc
cmps
pop
(bad)
jne
adc
pop
ret
aam
dec
gs
mov
push
sub
dec
idiv
cmp
cmp
imul
repnz
sbb
cmp
ja
popf
fwait
sbb
stos
mov
mov
pushf
iret
fstp
test
push
mov
ja
imul
fdivr
dec
lds
push
loopne
inc
(bad)
std
dec
loop
mov
inc
jmp
adc
pop
fwait
bound
dec
mov
retf
fmulp
inc
mov
popa
sbb
jne
movs
outs
addr16
cmp
out
sub
push
dec
scas
out
in
inc
gs
xor
gs
fmul
xchg
addr16
cmp
add
loopne
pop
clc
gs
shl
push
cmp
call
mov
lods
pop
ss
(bad)
inc
dec
test
or
(bad)
cmps
inc
scas
movs
out
lods
mov
daa
mov
scas
and
inc
mov
xchg
pop
adc
inc
lahf
jp
mov
adc
or
add
jmp
in
sti
stos
dec
mov
sbb
ins
(bad)
clc
out
jmp
loopne
int
add
or
imul
in
mov
test
jmp
push
leave
pop
jnp
inc
pop
adc
test
jmp
ins
popf
xchg
mov
sub
and
or
call
(bad)
popa
or
pop
or
jle
mov
pop
ins
stos
xchg
and
mov
cmps
push
repnz
sub
test
and
xchg
dec
pop
jb
scas
jb
push
push
and
xor
ror
push
mov
push
stos
int3
sub
mov
dec
iret
call
retf
mov
xchg
jae
ss
inc
call
loope
adc
(bad)
sti
jge
in
inc
mov
stc
xchg
pop
push
or
jae
push
pop
fwait
stos
cwde
cld
or
sub
out
bound
scas
(bad)
mov
lods
jp
add
movs
loop
popf
xchg
mov
test
ds
cmps
mov
and
lahf
add
mov
loope
jle
adc
push
or
push
jb
or
cmp
mov
int
dec
mov
shl
and
(bad)
stc
xor
sbb
mov
xchg
clc
outs
fucomip
lods
xchg
fisubr
ret
xchg
pop
movs
retf
stos
(bad)
nop
jne
sti
aas
fst
add
ins
les
mov
aam
je
retf
and
xor
mov
mov
out
jge
leave
xlat
or
aad
xor
cmp
pop
icebp
enter
in
mov
test
jp
ja
cld
push
pop
nop
fs
add
jae
mov
into
cmps
sbb
ret
jp
div
and
mov
shr
pop
js
das
cmp
shr
sbb
xchg
push
daa
sbb
xchg
aam
inc
js
add
xor
jecxz
inc
mov
lods
rcr
retf
push
add
aad
pop
xchg
bound
addr16
jp
in
xchg
pop
jbe
sbb
enter
push
xchg
loope
test
adc
inc
jns
loopne
and
inc
fwait
jae
mov
test
call
sbb
fimul
inc
sub
stos
sub
rcr
retf
call
fisttp
lods
aas
xchg
ss
sbb
imul
sbb
mov
and
shl
or
sbb
sbb
add
cmp
cs
mov
in
xor
repnz
data16
test
retf
call
inc
imul
aam
ins
pop
mov
mov
jo
push
and
lds
(bad)
icebp
mov
ins
or
outs
ss
in
ins
inc
pop
leave
les
aam
imul
jno
sbb
adc
shr
(bad)
and
outs
test
retf
and
xchg
pop
std
neg
xor
stos
pop
ret
jle
out
into
imul
xor
sub
mov
push
cld
sbb
inc
in
retf
xor
dec
or
(bad)
mov
inc
push
lahf
mov
push
dec
rcl
sub
loope
or
mov
cmps
push
hlt
movs
stc
sub
clc
loope
push
lods
push
jo
enter
repnz
sbb
dec
ja
call
push
mov
xchg
xchg
jno
push
jp
sub
xor
imul
dec
loop
es
mov
dec
mov
pop
bound
aad
dec
push
les
imul
data16
jl
ja
sub
jp
jmp
mov
ins
retf
pop
ds
jl
enter
cmp
push
xor
mov
push
in
xlat
xor
in
mov
sbb
mov
push
push
mov
out
out
mov
fcom
inc
(bad)
mov
ins
sbb
pop
push
fwait
jo
sti
add
xor
mov
hlt
cmp
pop
mov
xor
add
cmps
lahf
pushf
pop
pop
mov
jle
(bad)
shr
jmp
mov
or
fwait
push
or
stc
lea
cdq
fistp
ja
lods
cld
mov
and
xor
(bad)
mov
dec
add
out
jg
mov
fld
sub
push
jg
jnp
lea
adc
mov
mov
inc
mov
frndint
outs
lahf
hlt
imul
cwde
sub
sahf
fld
loopne
xor
pop
ins
jg
add
lahf
out
sbb
sar
aad
xchg
mov
fnstcw
sub
imul
ja
push
ja
jmp
or
iret
outs
sbb
idiv
bnd
jbe
or
xor
push
(bad)
cmp
add
push
out
jmp
sub
xlat
jae
jae
shl
pop
test
sbb
adc
sti
xor
pusha
mov
push
mov
add
addr16
stos
xor
sbb
cmp
xchg
aam
scas
ret
push
dec
sbb
xor
or
iret
jno
jb
cwde
mov
and
(bad)
jmp
out
mov
adc
push
jns
xor
out
sar
mov
lods
pushf
inc
ret
jmp
or
jp
xchg
into
sub
cwde
push
xor
inc
mov
inc
shr
mov
cdq
cs
jge
call
dec
les
jbe
cmp
or
dec
push
inc
lea
pushf
sbb
int
(bad)
jnp
inc
mov
sbb
(bad)
mov
data16
jo
jle
mov
(bad)
fsub
mov
cmp
dec
js
add
pop
cmps
mov
pushf
cmp
test
add
out
aad
loopne
jmp
call
fidivr
xchg
cmps
cmp
iret
inc
xlat
adc
call
inc
lea
in
clc
cwde
test
out
push
iret
mov
in
ret
jg
xchg
retf
mov
jmp
adc
leave
cwde
mul
repz
repnz
mov
or
pop
xchg
mov
sub
arpl
imul
dec
mov
sub
retf
jmp
add
(bad)
stos
mov
xchg
cmp
push
out
xchg
or
and
jno
ins
shl
mov
out
les
dec
jecxz
movs
push
xchg
aad
iret
cmps
ret
push
pushf
pop
arpl
or
int
mov
adc
push
(bad)
xor
and
cmc
sbb
add
leave
cmp
loope
pop
mov
pop
ret
jno
push
mov
sbb
push
dec
out
js
cwde
sub
daa
fstp
push
int3
sbb
cmps
les
inc
daa
or
fld
outs
mov
sub
stc
movs
dec
jl
test
in
rol
or
cvttps2pi
ror
scas
add
sar
sbb
rcr
or
mov
gs
mov
adc
outs
push
mov
dec
pop
inc
xor
pop
inc
or
cld
mov
ja
cli
push
sbb
cli
ds
sub
pop
jo
sbb
cwde
mov
repnz
test
mov
mov
les
or
outs
sahf
lea
mov
stc
popa
cmc
fs
xchg
(bad)
call
lock
les
xchg
inc
and
inc
sbb
test
xor
sbb
fucomip
mov
into
dec
sub
push
xor
fiadd
xchg
xor
push
mov
add
cmps
xor
test
or
mov
arpl
lea
mov
lods
lds
xor
enter
or
pop
out
add
xchg
jmp
dec
cmp
imul
jbe
aas
mov
stos
cmps
sbb
sbb
inc
mov
jg
popf
adc
mov
mov
sbb
inc
xchg
inc
mov
bound
ds
stos
js
jmp
mov
xchg
pop
sbb
mov
mov
jae
or
xor
lock
mov
mov
inc
adc
lods
ins
arpl
mov
out
sbb
cli
push
movs
dec
pop
cli
mov
push
push
pop
adc
mov
push
call
sbb
xor
lods
and
stos
cmp
(bad)
push
dec
xor
xchg
rcr
lock
jecxz
outs
ins
idiv
cwde
mov
imul
jl
mov
sbb
xor
jo
add
or
imul
push
test
jmp
daa
cmp
sub
mov
sahf
test
js
daa
mov
inc
dec
sub
pop
bound
xor
fsubr
jge
fbstp
add
imul
neg
xor
movs
adc
test
mov
(bad)
(bad)
dec
mov
sahf
cld
out
pop
and
lock
sti
in
out
retf
push
rol
rcl
iret
or
inc
lock
mov
push
daa
inc
loopne
test
test
cld
cmps
add
mov
imul
fadd
push
mov
inc
or
in
repz
inc
xor
xor
push
ins
fisttp
aad
jb
sub
jmp
icebp
pop
sbb
pop
inc
stos
add
cmp
or
pop
pop
mov
sbb
sti
cmps
and
add
inc
sub
and
xchg
repz
call
rol
xchg
adc
lds
mov
repnz
into
lock
cmp
bound
inc
shl
xor
adc
scas
pop
mov
mov
test
jno
xchg
les
xchg
jnp
das
cmp
ss
imul
cmps
pop
mov
adc
mov
ss
mov
and
in
mov
push
sbb
jmp
xor
daa
cld
fidiv
xor
xlat
jmp
popa
pusha
pop
test
cs
fld
and
stos
or
adc
stos
js
aas
fucom
or
adc
pop
inc
or
or
adc
and
xor
push
js
pop
mov
mov
aad
imul
cmp
mov
aas
xchg
and
shl
cdq
arpl
das
sub
sbb
mov
inc
pop
push
xor
mov
push
jmp
or
mov
shr
bound
(bad)
aaa
mov
adc
dec
mov
movs
add
test
js
test
mov
or
add
and
sar
sbb
jmp
or
sub
ins
or
out
push
adc
mov
jmp
cwde
movs
sub
movs
pop
and
jbe
hlt
(bad)
xor
popw
jb
int3
jle
enter
jg
data16
daa
(bad)
adc
sbb
fs
sbb
icebp
lods
push
jo
(bad)
pcmpgtd
mov
push
pop
out
add
pop
les
es
and
cmp
jl
xchg
and
mov
test
outs
and
(bad)
xchg
loope
xchg
xchg
xchg
loopne
aaa
sub
xor
cld
gs
popa
jg
jge
cmp
adc
mov
pop
jnp
mov
add
jge
xor
fcomp
jae
ins
icebp
data16
add
mov
jno
inc
imul
test
jne
js
loope
or
pop
das
ret
popa
push
pop
rol
ins
jne
je
pop
cmp
xchg
sub
jns
xchg
cmps
lahf
aam
pop
push
add
jns
pop
pop
jg
dec
mov
xor
jle
enter
lahf
pushf
(bad)
mov
mov
pop
or
xchg
sub
ds
call
mov
addr16
ret
pop
mov
mov
jo
adc
retf
adc
inc
imul
lock
mov
pop
std
or
push
cmc
dec
popa
mov
mov
sar
add
mov
mov
xchg
(bad)
sar
gs
cmovbe
or
mov
stc
les
mov
es
sub
movs
pop
fdiv
push
out
stos
mov
and
(bad)
push
hlt
mov
mov
mov
das
sar
les
stc
sbb
(bad)
into
inc
inc
shl
jmp
push
jg
fcomp
pop
stos
retf
cdq
xor
add
inc
and
es
shl
cwde
mov
push
push
mov
je
cmc
adc
hlt
mov
test
fcom
popa
xchg
cmps
gs
pop
das
fwait
cmc
cli
mov
rcr
jmp
sbb
mov
jmp
dec
cli
xchg
pop
mov
retf
push
mov
cmps
xor
mov
cmp
jp
(bad)
xchg
sbb
inc
jno
sub
sar
mov
lds
or
push
xor
or
loopne
pop
lock
pop
adc
popa
xchg
mov
sbb
sbb
push
in
pop
push
cmp
xor
and
mov
movs
sahf
sbb
pop
inc
lahf
cmps
(bad)
xor
call
inc
cmps
(bad)
add
(bad)
out
sbb
xchg
mov
out
push
pop
into
je
add
popf
scas
push
nop
push
jae
in
push
mov
pushf
xchg
jae
in
movs
adc
jmp
dec
jmp
sub
jo
sub
(bad)
fstp
mov
xor
mov
(bad)
adc
enter
cwde
dec
mov
jae
mov
xor
pop
jne
push
mov
mov
daa
mov
mov
scas
test
inc
inc
sbb
xchg
add
ret
addr16
loopne
cmp
aam
dec
mov
dec
add
mov
cmps
jno
or
loopne
add
movs
mov
popa
adc
xchg
xchg
cmps
fld
mov
xor
loopne
stos
stc
pop
mov
jmp
pushf
and
pop
retf
fnstenv
stos
jge
mov
out
pop
sti
push
test
jmp
outs
jl
repz
sbb
cmp
fstp
sbb
mov
mov
jns
sbb
not
pop
jge
fcomp
and
jo
xlat
adc
push
cmc
dec
nop
rol
push
addr16
cmp
xchg
pop
out
in
(bad)
push
sti
pushf
int3
push
out
cmc
sub
mov
call
dec
icebp
sub
sbb
mov
out
push
outs
aaa
inc
mov
fidivr
(bad)
push
or
ret
outs
xor
xchg
loope
inc
int
retf
mov
ds
iret
dec
mov
push
add
dec
inc
in
mov
adc
out
mov
loope
jp
xor
mov
xor
call
push
mov
cwde
cmps
mov
dec
jp
sub
test
dec
mov
mov
je
or
nop
stc
pop
rol
jbe
jmp
inc
push
push
loopne
inc
test
pop
jo
mov
fcom
shl
ins
ret
adc
ficomp
xchg
dec
out
xchg
inc
dec
cmp
cmp
cmp
jp
arpl
pop
mov
cdq
out
jg
fistp
sub
les
mov
hlt
adc
inc
jmp
adc
inc
push
pop
jp
movs
jns
popf
adc
je
add
sub
scas
hlt
and
in
retf
jo
inc
mov
mov
pushf
std
les
test
jg
sub
push
pop
ror
inc
outs
pop
pop
or
jmp
pushf
mov
mov
aaa
cli
ret
ss
push
push
jb
add
aaa
push
cmp
cmp
out
pop
mov
push
mov
sub
push
pop
push
cmc
inc
mov
sar
ins
mov
xchg
ja
je
fild
jp
inc
push
movs
jp
fadd
mov
cmp
test
cli
xor
jl
inc
push
sbb
inc
inc
adc
xchg
or
sub
out
fsubr
sbb
adc
xor
xchg
xor
inc
rcl
mov
cmp
push
scas
loop
arpl
or
scas
adc
icebp
out
loopne
sbb
and
or
rol
jnp
cmp
cdq
stos
inc
mov
ds
ret
movs
xor
jb
pusha
popf
jno
dec
jbe
or
mov
pop
or
xlat
in
jno
pop
in
or
push
cmp
fld
imul
test
push
(bad)
sti
xor
xor
ds
sbb
xor
sub
ins
(bad)
cmp
cmc
fwait
or
and
es
sbb
push
jg
jns
out
stc
fsubr
pop
xlat
pushf
xor
ror
sbb
inc
inc
ds
cmp
cli
push
inc
clc
mov
repz
mov
sahf
into
push
mov
xlat
hlt
mov
sub
jbe
and
and
icebp
aas
stos
frstor
push
into
sahf
je
cs
clc
fstp
es
sub
mov
fucomp
ds
retf
pop
retf
push
sbb
mov
sahf
ins
popa
fs
int
pop
sbb
jl
mov
enter
inc
imul
nop
nop
call
call
cmps
arpl
push
push
jnp
repz
add
dec
pop
shr
mov
(bad)
cmps
loopne
lds
je
add
lds
shl
(bad)
scas
jo
mov
cmc
(bad)
pop
and
cwde
add
sub
test
(bad)
push
dec
push
sbb
xchg
pop
sub
enter
stc
iret
push
test
push
push
cmps
into
call
jnp
pop
les
xchg
imul
jecxz
push
adc
lea
bound
and
cs
xchg
ins
mov
idiv
cmp
dec
iret
mov
sar
repnz
cmp
popf
inc
fs
ret
popaw
mov
je
(bad)
mov
xchg
cs
xchg
js
pop
ficomp
dec
xchg
jmp
jg
out
mov
stos
adc
call
pop
pop
jge
push
test
jae
ja
add
push
scas
popa
adc
sbb
int3
jge
push
xchg
imul
push
cld
add
aad
nop
loope
sub
test
int
int3
icebp
ds
xor
jmp
xlat
cmc
cmc
es
je
pop
cdq
and
pop
cli
outs
and
scas
mov
mul
dec
fwait
lahf
test
(bad)
jmp
out
call
addr16
cmp
sahf
cmps
bound
push
cli
popa
pop
mov
popf
jo
mov
out
pop
imul
or
inc
out
loop
mov
ret
ss
cmp
dec
fidiv
aam
int3
mov
jae
push
fld
lea
push
stc
or
inc
sahf
mov
push
xchg
(bad)
sub
add
dec
or
inc
sub
cld
sub
call
jp
push
aam
fadd
ds
push
cld
fiadd
pop
leave
(bad)
adc
rcl
mov
repnz
xchg
loopne
add
or
ja
mov
fwait
pusha
scas
(bad)
xor
pop
jmp
jl
icebp
mov
adc
pushf
xchg
mov
and
jb
mov
cmps
fmul
push
jne
gs
sbb
scas
in
and
xor
(bad)
into
cdq
fldenv
push
mov
mov
fdiv
cmp
xor
fdiv
hlt
lods
mov
addr16
mov
add
and
xchg
mov
or
xor
ret
and
retf
inc
(bad)
sar
test
mov
repnz
cwde
out
mov
mov
push
push
nop
add
xlat
push
cdq
jmp
pop
add
mov
cmc
aad
outs
dec
sub
(bad)
mov
int
or
pushf
inc
sub
mov
retf
push
cmp
push
ins
xor
inc
dec
cmp
in
sub
xor
dec
mov
inc
loopne
imul
fisttp
das
cdq
fdivr
or
xchg
and
dec
les
inc
nop
mov
lock
dec
mov
call
cdq
cmps
cmps
cmp
imul
mov
call
retf
into
ffreep
mov
jle
pop
xchg
mov
arpl
dec
enter
xchg
mov
mov
and
fild
sbb
retf
cmp
sbb
test
repnz
mov
fldcw
mov
dec
arpl
in
pop
sar
iret
dec
push
in
lock
inc
cmp
adc
mov
inc
enter
jecxz
cmp
or
repz
lea
mov
jge
test
ffree
sbb
ss
and
push
push
mov
mov
push
pop
mov
(bad)
retf
call
cmp
cld
adc
xor
(bad)
mul
test
pushf
jnp
jp
mov
sub
or
jno
adc
out
jns
push
scas
mov
inc
mov
lods
push
push
cmp
mov
push
cmp
mov
enter
aaa
pop
or
mov
adc
or
(bad)
mul
xchg
sub
mov
cdq
mov
test
dec
cmp
cmp
outs
cs
and
dec
and
aad
arpl
inc
fucom
imul
mov
les
jge
push
mov
stc
or
mov
outs
jp
and
dec
jmp
mov
aaa
fwait
in
idiv
mov
cmp
retf
iretw
mov
cdq
ins
xchg
hlt
icebp
int3
adc
xor
dec
jmp
sahf
push
mov
cmp
sub
push
cmp
(bad)
je
xchg
leave
sar
jmp
test
in
fstp
xchg
push
xchg
pop
js
sub
loopne
into
mov
mov
fdiv
mov
jge
dec
cwde
outs
jge
pop
sti
jmp
outs
mov
fdivp
cld
fcomp
cmp
pop
xor
cmp
ret
pushf
ficomp
jns
mov
sub
dec
lods
dec
inc
add
popf
jle
popa
xchg
movs
stc
mov
adc
idiv
cmp
jbe
adc
push
sub
cdq
in
pop
into
ret
ss
push
das
arpl
inc
(bad)
mov
repnz
or
aad
mov
rol
lock
fcomi
xchg
mov
ss
mov
sub
test
pop
xor
out
mov
mov
aad
pop
inc
dec
iret
sti
movs
in
lods
mov
jo
repnz
ret
data16
std
cmc
sbb
jl
xor
sub
mov
jmp
sub
(bad)
clc
loop
gs
mov
fld
cdq
aaa
stos
cwde
fiadd
fidiv
sub
loop
ret
fild
sbb
xor
outs
mov
ret
in
jmp
xchg
cmp
scas
fld
sub
mov
ins
lods
outs
fs
fmul
mov
outs
mov
imul
mov
dec
cdq
jmp
jnp
fstp
mov
stos
arpl
push
aaa
retf
fwait
aam
repnz
int3
jo
sti
pop
cmp
jmp
jne
(bad)
jns
push
cmp
cmp
sub
ins
(bad)
mov
cld
sub
add
shr
sbb
push
xor
push
mov
adc
repz
mov
mov
mov
jl
test
out
cwde
mov
retf
(bad)
and
pop
pop
inc
icebp
stos
cld
out
xor
sbb
inc
(bad)
clc
(bad)
neg
push
mov
arpl
cmp
imul
dec
in
shl
in
dec
pushf
mov
bound
add
test
cmps
sbb
out
fwait
pop
pop
sub
sbb
lds
cmp
lock
in
aam
mov
in
xchg
es
xchg
cld
xor
pop
dec
fs
inc
dec
add
jle
adc
inc
push
add
mov
sub
pop
adc
pop
loope
fs
pushf
rcr
jg
fadd
fdiv
cmp
pop
or
xchg
dec
inc
mul
dec
stos
das
pop
dec
mov
jmp
pop
scas
dec
out
sbb
mov
in
and
fstp
adc
adc
jl
aam
loope
daa
aas
mov
neg
adc
in
ffreep
fldcw
pusha
inc
ins
lock
je
in
mov
jp
lods
adc
push
clc
pushf
jg
mul
push
or
adc
or
test
mov
daa
jmp
or
sbb
or
cli
adc
pop
lahf
ins
jo
inc
add
mov
or
lahf
inc
inc
repnz
in
pop
push
mov
add
out
ficom
fld
mov
lods
out
adc
aam
das
cmc
ins
jmp
fist
xor
push
or
ret
jg
mov
sub
scas
rol
jp
inc
add
loope
jb
les
in
or
xchg
leave
adc
and
loopne
cwde
fucomi
dec
push
int3
lahf
mov
ret
adc
call
cld
loop
push
inc
xchg
out
ja
adc
inc
or
inc
call
leave
mov
cmps
push
or
sahf
pop
and
out
fwait
xchg
xor
lods
jmp
cmp
adc
push
dec
loope
ret
dec
jecxz
mov
pop
jle
aad
lods
sbb
outs
mov
(bad)
sub
jo
(bad)
mov
mov
xor
add
(bad)
pop
(bad)
and
push
(bad)
int3
xor
jle
jle
mov
inc
pop
lahf
retf
xor
sbb
sbb
dec
sub
ins
xchg
shr
out
retf
cmp
push
sbb
push
xchg
jl
daa
pop
and
addr16
jnp
inc
ret
dec
push
sbb
scas
mov
fs
inc
or
mov
mov
mov
pop
inc
sub
xor
dec
mov
jnp
mov
sbb
aaa
repz
add
fsub
cmc
ins
and
push
adc
add
cmp
and
dec
hlt
mov
xchg
mov
call
push
(bad)
(bad)
(bad)
iret
js
and
pop
cmp
jns
xchg
and
fstp
cmp
and
inc
stos
xchg
or
dec
cmp
sub
pop
addr16
mov
xchg
mov
into
call
and
cs
and
cmps
stos
lea
daa
xchg
cmp
push
retf
xchg
std
int3
jmp
xchg
inc
or
ret
shl
(bad)
mov
scas
cmps
sbb
push
inc
push
and
and
pop
add
jo
shl
lea
jmp
lods
mov
sbb
retf
out
mov
ins
pop
sub
arpl
loop
lea
fxch
xor
xor
add
xchg
call
jb
cli
sahf
xchg
shl
mov
sbb
inc
rol
pop
mov
push
cmp
push
(bad)
scas
sbb
add
xchg
and
aaa
gs
stc
inc
lods
cmp
xchg
xchg
outs
adc
xor
mov
scas
xlat
mov
shl
cli
pop
test
test
mov
inc
jno
pop
aam
lods
inc
aaa
mov
retf
repnz
sar
mov
nop
push
ss
sbb
adc
jp
aam
mov
ins
sbb
adc
cmp
(bad)
fisubr
push
arpl
pop
sbb
dec
into
popf
inc
ja
pop
sbb
popf
jl
adc
sub
mov
jp
mov
sbb
mov
sub
es
call
xchg
jle
in
call
(bad)
std
rcr
xchg
or
inc
sub
int
in
loop
cdq
out
popf
les
and
mov
fdiv
retf
inc
cwde
ins
fstp
repz
rcr
imul
mov
and
pop
xchg
ss
ds
push
sbb
cmp
lea
sub
inc
mov
shl
add
mov
and
pop
push
loopne
repz
out
ins
dec
xor
nop
push
icebp
mov
mov
jbe
paddusb
imul
xchg
cmp
sahf
jnp
je
inc
mov
test
cmp
inc
(bad)
mov
into
sub
pop
dec
sbb
in
ret
mov
fisttp
cmp
mov
hlt
jp
data16
ja
mov
mov
mov
mov
mov
fld
jae
mov
(bad)
aas
dec
mul
dec
xchg
(bad)
popf
outs
sbb
in
fsubrp
or
jns
adc
xor
push
jb
cmp
xchg
add
test
cmp
call
scas
leave
cmp
dec
sar
ret
bound
repnz
or
sub
outs
or
and
(bad)
sub
(bad)
(bad)
jle
in
mov
push
mov
out
xchg
xor
mov
pop
icebp
test
inc
jb
push
xor
xchg
enter
add
jge
(bad)
out
lds
(bad)
pop
leave
cmp
ret
or
sub
ret
xchg
aad
les
push
mov
out
aaa
shl
adc
fwait
repz
ins
adc
pop
mov
lahf
retf
push
sbb
jge
sub
push
fdivr
in
adc
jbe
movs
dec
mov
xchg
adc
sar
cld
clc
pop
into
lock
push
mov
mov
push
dec
cmps
mov
pop
in
pop
xor
call
pop
out
adc
mov
cmp
cdq
and
and
cdq
sbb
sar
outs
jle
neg
daa
es
icebp
add
jle
(bad)
and
nop
xor
lods
and
or
push
enter
pop
gs
retf
cmp
pop
add
lock
call
gs
push
mov
call
inc
ja
call
cmp
cmp
xor
push
pop
jecxz
dec
in
dec
fld
movs
imul
fdivr
sub
lock
sub
xlat
mov
cdq
das
inc
inc
dec
jmp
sub
cs
inc
ds
xchg
dec
retf
sbb
cmps
lock
jp
iret
and
xor
shl
bound
jno
and
stc
xor
aas
sbb
hlt
xchg
lods
imul
outs
dec
xor
test
fistp
retf
jle
vlddqu
and
push
out
dec
and
mov
or
pop
(bad)
addr16
cmp
cs
in
push
dec
pushf
mov
xor
and
push
inc
(bad)
nop
add
inc
(bad)
lds
sub
and
cwde
call
inc
loope
fild
adc
mov
lea
ja
sub
cmp
(bad)
mov
div
je
mov
mov
popa
jl
add
pop
cmc
mov
pusha
mov
jbe
cdq
mov
in
sbb
aas
mov
mov
mov
sub
call
mov
jmp
out
sbb
icebp
inc
or
movs
inc
push
xchg
jae
mov
cmp
jno
loope
mov
int3
out
inc
mov
pushf
xor
(bad)
pushf
push
sar
and
mov
cmp
dec
fiadd
test
ins
or
je
push
scas
or
inc
add
emms
ins
and
vmovd
rcl
pop
fsub
mov
fbld
mov
cmps
hlt
out
push
ret
int3
sbb
lahf
les
clc
(bad)
shl
int3
jns
enter
cmp
lods
xchg
xor
or
xchg
call
bound
jl
sti
xchg
inc
jae
pop
jl
mov
pop
aaa
mov
enter
jbe
mov
into
test
retf
lds
fucomp
mov
or
fld
adc
or
mov
mov
mov
nop
hlt
sbb
lahf
inc
xor
add
jmp
out
div
dec
adc
and
and
jle
lahf
popf
adc
mov
loope
lods
leave
leave
cs
(bad)
and
call
aam
and
and
scas
call
mov
cmp
jmp
(bad)
mov
sub
(bad)
or
xor
repnz
std
mov
add
cmc
stos
pop
stos
(bad)
pop
pop
mov
rcl
mov
xor
and
(bad)
and
jecxz
retf
mov
inc
adc
imul
and
hlt
nop
fucomip
lock
scas
push
adc
push
mov
jle
fs
fsubp
hlt
jle
mov
retf
cmp
popf
xchg
dec
dec
pop
xlat
dec
or
xchg
mov
aas
fdivr
cmc
or
ja
arpl
pop
sbb
gs
cdq
xor
xchg
dec
push
push
pop
xchg
sub
nop
call
shl
es
dec
stos
fucomi
lock
cmps
test
jns
xchg
jbe
imul
xchg
sub
or
mov
mov
cmp
(bad)
add
cmp
pop
pop
dec
push
hlt
pop
jno
mov
jnp
jb
lock
data16
mov
stos
dec
rol
and
test
mov
dec
push
inc
push
push
inc
lea
in
clc
fcmovnb
call
test
cwde
cmp
mov
into
add
sti
daa
push
fild
pop
jbe
xor
push
sahf
dec
mov
push
sub
movs
repz
fistp
push
or
out
sub
stos
sub
sbb
jbe
mov
repnz
popa
std
xor
push
jo
test
pop
push
outs
mov
adc
arpl
inc
loop
xlat
fisttp
scas
inc
ret
daa
sub
xchg
test
ins
pusha
outs
push
int
imul
sub
test
dec
test
adc
jmp
call
xchg
(bad)
test
out
(bad)
add
jnp
mov
xchg
mov
loopne
jg
xor
jle
ins
mov
mov
repnz
cs
dec
jb
sub
ja
mov
stos
ins
dec
loop
movs
ror
cwde
stc
pop
fldenv
test
pusha
add
jle
dec
add
inc
pop
pop
inc
stos
adc
jp
into
ins
and
fwait
xor
jmp
and
test
cmp
and
neg
out
pop
cdq
mov
mov
mov
add
dec
pop
xchg
cdq
inc
push
xchg
adc
xor
in
(bad)
aas
mov
inc
bound
test
sti
sub
mov
in
xor
xchg
(bad)
and
dec
mov
xor
push
xchg
adc
ja
or
cmp
hlt
add
xchg
jg
outs
retf
jnp
mov
hlt
fbstp
es
sbb
xchg
pusha
push
and
mov
pop
test
fld
xor
pop
fadd
adc
mov
mov
push
cmps
pop
es
ja
and
add
js
add
sbb
xchg
mov
loopne
jns
mov
and
dec
jp
fcomp
aam
mov
inc
dec
pop
sar
retf
shl
fsubrp
xor
je
test
test
xor
mov
cmp
xchg
das
jmp
outs
mov
jle
in
sbb
xlat
ss
(bad)
out
pushf
xchg
stos
(bad)
mov
icebp
xchg
mov
sbb
test
daa
shl
stc
out
pop
es
frstor
lds
sbb
and
movs
push
imul
jo
int3
ret
in
pop
add
sar
cld
or
ror
jecxz
mov
inc
xor
out
sbb
cwde
jmp
stos
adc
(bad)
inc
push
mov
lods
fcmove
mov
bound
mov
pushf
add
mov
push
out
(bad)
stos
hlt
test
fst
jnp
mov
rcl
jb
mov
iret
push
es
sub
mov
jecxz
icebp
add
movs
inc
mov
add
xor
add
sti
pop
cmp
jge
adc
jmp
mov
movs
pop
mov
dec
(bad)
cmp
into
ret
(bad)
cdq
test
fsub
aaa
mov
mov
jg
mov
lds
into
fdivr
hlt
mov
jge
xchg
mov
into
rol
cmc
sub
rcr
fmulp
xchg
pushf
je
jmp
adc
call
test
xor
ret
or
cmovno
cmp
cwde
inc
pop
shl
xchg
movs
jnp
enter
ret
js
mov
loopne
pop
dec
movs
xchg
push
cs
aad
jg
pop
sub
cwde
jo
xchg
sahf
jns
sbb
and
sbb
pusha
sub
js
movs
and
sub
aaa
stos
jmp
or
jno
outs
cwde
adc
rcr
into
sar
inc
or
(bad)
jns
xchg
ret
mov
jge
or
pop
and
or
adc
loopne
sti
outs
lock
inc
sub
mov
dec
nop
test
push
mov
pop
int3
mov
push
or
test
push
cmps
repnz
mov
int3
sbb
les
into
int3
ds
(bad)
adc
mov
pop
xlat
push
pop
push
add
mov
nop
das
addr16
int
hlt
xchg
test
xor
mov
pop
sti
sub
xchg
jmp
sub
daa
cmp
rcl
pop
cmc
(bad)
movs
idiv
pusha
xor
nop
pushf
adc
cmp
mov
dec
adc
out
mov
jecxz
test
sbb
out
or
frstor
icebp
jl
sti
mov
leave
jne
rcl
pop
rcr
cld
add
or
and
adc
or
les
jl
inc
fisub
pop
adc
dec
fucomi
cmc
retf
cmp
mov
cli
stos
gs
sar
(bad)
sbb
stos
mov
ss
in
fstp
ds
imul
sbb
inc
cdq
or
sub
jmp
out
inc
aas
dec
mov
sub
shl
sbb
hlt
jge
test
push
pop
jae
call
pop
push
push
sub
jb
pusha
jmp
mov
iret
add
jmp
jg
out
push
push
xor
dec
int3
mov
or
sub
lods
cmp
(bad)
aad
xor
inc
movs
sub
push
stc
xor
scas
mov
adc
dec
jnp
mov
cmp
inc
or
mov
push
dec
ins
push
mov
xor
sbb
data16
imul
jmp
add
shrd
jnp
dec
outs
ret
adc
dec
mov
pop
sbb
pop
cmp
movs
pop
imul
pop
popf
cmp
xchg
jb
ror
xchg
std
lahf
sub
popf
stc
and
mov
cmps
test
leave
test
ins
push
(bad)
lahf
jno
xchg
inc
ins
mov
lods
xchg
mov
pop
movs
sbb
sub
loop
fist
mov
ins
repnz
pop
out
mov
push
imul
arpl
or
add
and
sahf
out
rcl
gs
jbe
xor
dec
das
shl
xchg
addr16
adc
cmp
dec
sbb
ds
fnstcw
stc
and
dec
push
imul
sub
movs
ins
test
xchg
aaa
(bad)
push
jae
mov
shl
je
xlat
sti
mov
dec
xchg
mov
popa
sub
loopne
ficomp
addr16
fiadd
push
iret
pop
push
outs
and
test
jb
sbb
int3
adc
xchg
arpl
and
xchg
pop
popa
gs
add
jge
fs
sbb
js
imul
add
pop
xchg
xor
push
fstp
(bad)
iret
jecxz
pushf
outs
cld
clc
retf
adc
pop
mov
dec
loope
gs
stc
pop
jg
sahf
mov
mov
sbb
test
mov
rcr
fdivr
pop
imul
outs
cmp
mov
mov
sbb
add
addr16
and
dec
es
mov
sbb
popf
stc
cmp
push
retf
rcl
jecxz
ja
je
push
ret
jle
xchg
push
jp
mov
popa
push
push
repnz
stc
mov
clc
pop
jge
jnp
shr
push
inc
retf
sahf
jbe
enter
rcl
mov
xlat
pusha
cmc
jno
push
out
imul
clc
hlt
push
or
dec
push
push
test
fld
fnsave
and
cli
clc
sub
shrd
addr16
repnz
ret
dec
or
push
pop
xchg
movs
inc
stos
xchg
inc
sbb
sub
call
call
(bad)
and
sub
xor
ins
and
outs
xchg
mov
mov
xchg
inc
fwait
pushf
add
jns
inc
add
setge
mov
loope
not
shl
fnsave
test
retf
test
fisubr
jg
xchg
mov
mov
and
inc
jno
push
pop
pop
mov
sbb
imul
(bad)
ins
adc
popa
add
jno
int3
jne
push
dec
fidivr
je
mov
or
jnp
test
or
loope
cmp
lds
cs
cdq
pop
retf
mov
retf
shl
into
jmp
call
xchg
push
cld
icebp
(bad)
call
inc
leave
sub
cmp
dec
sub
mov
sub
stos
mov
mov
fdivp
mov
and
sub
pop
iret
cmp
push
push
sub
les
leave
in
fnstcw
jp
out
add
jnp
mov
popf
mov
sub
push
mov
xlat
call
in
std
adc
test
mov
push
sbb
addr16
int3
imul
push
mov
fwait
test
push
mov
jg
cmp
jbe
mov
push
mov
xor
sbb
xchg
cdq
outs
leave
aas
scas
je
(bad)
movs
mov
mov
popa
pop
sbb
in
sub
repz
cmp
jp
mov
cmp
xchg
sar
daa
mov
test
push
or
mov
pop
aad
das
dec
mov
das
les
mov
jns
cmps
sar
xor
sbb
adc
push
pop
and
sbb
in
js
add
add
aas
aas
(bad)
jns
stos
aam
adc
mov
cmp
adc
ja
jge
mov
int
repnz
mov
sub
pop
stc
jns
fisttp
retf
fsubr
ret
cwde
xchg
xchg
(bad)
pop
mov
adc
int
push
xchg
add
add
fadd
and
dec
or
push
ins
or
mov
jne
(bad)
(bad)
mov
int3
fdiv
or
jecxz
mov
icebp
dec
push
mov
les
rol
pop
mov
imul
mov
lahf
jns
cmp
scas
mov
xchg
add
or
ins
loopne
repnz
jg
mov
xlat
xchg
fwait
test
pop
aas
pop
mov
mov
(bad)
sbb
xchg
mov
xchg
cmp
rcl
fsub
adc
dec
aaa
mov
call
repnz
lea
jb
clc
mov
pop
mov
stos
cwde
sbb
push
jns
(bad)
xor
and
mov
pop
sbb
jbe
scas
or
xchg
cs
(bad)
aad
cld
inc
mov
loop
xchg
movs
clc
stos
in
fstp
das
inc
outs
mov
test
sbb
and
jge
sbb
ja
jmp
cdq
pop
and
pop
inc
mov
inc
daa
sahf
jge
and
sbb
jnp
out
addr16
push
das
(bad)
sti
ficom
jg
cmps
in
inc
pop
imul
and
dec
jmp
adc
frstor
dec
push
or
ret
xchg
mov
fisttp
and
fist
retf
and
adc
in
paddb
mov
and
fsubp
mov
fisubr
hlt
xchg
retf
jg
mov
fbld
mov
cmp
call
adc
sbb
add
inc
int3
gs
mov
xor
ds
jno
or
(bad)
rol
shl
sbb
push
jns
sub
cmp
(bad)
dec
loop
js
(bad)
pop
mov
xor
push
rol
(bad)
xchg
imul
ins
cld
and
mov
ret
xor
outs
xchg
std
push
push
dec
inc
dec
mov
mov
mov
iret
mov
mov
lds
cs
arpl
inc
dec
mov
mov
(bad)
aaa
cli
push
adc
mov
push
cld
jmp
xchg
in
mov
cld
push
mov
int
jl
iretw
(bad)
and
or
inc
jne
cwde
cmp
or
popa
in
inc
cmps
adc
dec
(bad)
xchg
push
or
test
xor
icebp
test
sub
fldenv
ror
enter
xlat
(bad)
dec
push
xchg
into
xor
stos
mov
jmp
cmp
pop
aad
jae
jg
fstp
lock
std
ja
ja
nop
cmp
fnstenv
dec
mov
(bad)
mov
jno
jg
cmp
popa
aaa
pop
out
inc
jo
xchg
enter
ja
mov
ror
xor
and
stos
cmps
cs
sub
jbe
push
adc
mov
shr
(bad)
nop
sub
icebp
nop
dec
retf
push
mov
ins
and
sbb
jge
adc
mov
dec
stc
jmp
mov
lds
mov
gs
call
mov
dec
cdq
div
mov
call
stc
call
push
ins
sbb
in
in
pop
test
addr16
jmp
cmp
ja
cmc
adc
cs
lods
push
inc
mov
inc
xor
push
dec
aas
pop
int3
jae
inc
pop
retf
out
cmps
push
mov
inc
jo
ds
dec
mov
inc
dec
mov
nop
lahf
add
int3
mov
das
ret
jno
(bad)
inc
aaa
imul
pop
jl
and
cmp
repnz
daa
push
cmc
lods
sub
lds
jmp
gs
test
mov
sub
nop
mov
arpl
dec
neg
mov
cmps
mul
adc
mov
xor
and
mov
cdq
(bad)
loope
retf
inc
push
and
pusha
pushf
and
fcmovne
sub
ret
jg
jmp
sbb
fild
in
hlt
test
pop
mov
scas
bound
or
(bad)
mov
sub
shl
loop
(bad)
mov
loope
pop
xchg
clc
loope
cmp
ins
push
push
lods
xor
fdivr
mov
inc
dec
pop
(bad)
and
jns
aad
shl
cli
dec
cmp
pop
ret
add
mov
push
outs
add
out
bound
push
out
call
ffree
xor
out
loope
add
dec
mov
sub
add
pusha
in
js
mov
add
dec
in
and
xchg
cdq
les
adc
mov
cmps
jbe
xchg
(bad)
outs
pop
dec
sar
adc
pop
fstp
and
and
jle
cmc
bound
shr
jo
sub
or
fisttp
jnp
dec
push
popf
fcmovu
pusha
mov
pop
push
ss
push
inc
retf
in
sbb
mov
xor
std
leave
sub
cmp
fs
into
xor
aas
or
or
(bad)
cmp
fist
imul
push
fwait
daa
rcr
fwait
mov
in
xchg
enter
jg
gs
mov
push
js
ds
jmp
mov
retf
dec
ss
jns
arpl
(bad)
nop
dec
mov
and
jmp
xchg
push
mov
ins
sub
sahf
movs
pop
adc
xor
sub
sar
sub
dec
mov
inc
mov
aaa
sbb
push
test
add
and
push
adc
push
ds
xor
dec
or
ins
call
push
mov
adc
push
lds
shl
xchg
pushf
js
ret
call
cwde
imul
scas
xor
xchg
mov
js
retf
lahf
(bad)
cdq
imul
cwde
arpl
inc
out
repz
inc
xchg
and
(bad)
jne
sub
xor
(bad)
int3
adc
repz
out
in
mov
xor
into
js
aad
stos
and
push
xchg
es
outs
mov
mov
sub
fwait
lds
sbb
sbb
push
shl
sbb
mov
sbb
dec
leave
ins
cmp
into
iret
adc
pop
es
pop
movs
sbb
push
xor
jl
(bad)
fsub
loopne
add
jb
neg
xor
cmp
(bad)
inc
das
in
xor
xor
lods
cs
and
bound
call
mov
imul
jmp
aad
mov
out
cmps
push
ss
test
jg
jle
or
lock
inc
out
lock
cmp
mov
out
mov
or
retf
push
into
call
shl
inc
leave
clc
xor
out
or
sub
(bad)
jecxz
imul
sti
xor
retf
sbb
jp
(bad)
push
cld
push
lahf
rdtsc
sbb
popa
xchg
sub
not
(bad)
xlat
mov
sub
out
cli
rol
inc
push
push
lock
xor
setne
sbb
cmc
scas
fiadd
and
enter
stc
lods
enter
xchg
cmovl
mov
(bad)
pmuludq
cdq
js
retf
(bad)
sbb
fld
xchg
test
clc
ins
shl
nop
sbb
push
cmp
fs
nop
ss
sar
adc
adc
fadd
cmc
popa
stc
in
inc
out
jmp
jns
imul
pop
stos
ret
movs
and
stc
pop
popf
inc
pop
jmp
pop
or
jo
cwde
sahf
retf
cmps
inc
retf
jbe
and
and
jnp
sahf
je
(bad)
push
xor
int
xor
mov
pop
mov
pusha
xchg
or
push
mov
fs
cmc
push
push
sub
aas
cwde
addr16
mov
(bad)
idiv
daa
out
jl
int
dec
xor
shl
jb
jl
pop
xlat
mov
add
(bad)
stos
in
mov
xor
aaa
inc
mov
clc
lods
sub
repnz
and
imul
loope
cmp
mov
pusha
lock
cmp
out
(bad)
aam
xchg
ss
addr16
fist
add
in
out
xchg
mov
mov
into
xchg
out
mov
retf
adc
xor
fcmove
fwait
sbb
pop
stc
mov
inc
mov
inc
pop
xchg
jge
push
stc
and
out
leave
adc
and
mov
push
fst
retf
std
icebp
std
jge
add
scas
(bad)
push
shl
fnstsw
inc
xor
or
mov
add
xchg
stos
push
jbe
rol
sub
scas
out
cmps
jbe
add
jp
mov
jmp
out
std
push
push
mov
popf
sub
sub
mov
shl
dec
mov
mov
mov
mov
out
jnp
es
cli
mov
bound
or
add
pop
scas
xchg
or
pop
fbstp
inc
and
test
mov
xchg
test
les
jge
mov
popf
jge
mov
inc
in
cmp
lods
pusha
outs
lock
jo
data16
push
movs
fcom
dec
sub
stos
pusha
call
push
push
cmc
lahf
ret
shr
fucomip
or
cmp
inc
repnz
adc
fbld
push
dec
test
ret
ja
mov
outs
sbb
js
leave
jecxz
xor
mov
arpl
mov
push
je
test
popa
cli
xor
in
call
retf
test
cld
aad
add
retf
add
fcmovbe
xchg
sbb
pop
into
aam
test
pop
jno
push
add
mov
dec
sub
mov
push
xchg
jmp
dec
pusha
inc
arpl
cmps
sahf
lahf
sub
and
pop
js
cmps
gs
movs
sub
iret
outs
jp
jl
movs
jmp
mov
xchg
fs
stos
jns
fucomip
repz
inc
cmp
stos
shr
mov
dec
push
jmp
push
fcom
es
cli
aaa
dec
push
or
adc
pop
adc
mov
xor
sbb
std
cmp
push
add
lock
test
ror
scas
es
pop
dec
sub
xchg
aaa
aad
jmp
cmp
pop
dec
neg
movs
jo
vmovshdup
in
loop
fdivr
push
pop
sub
sar
dec
shl
fcom
fidivr
scas
idiv
mov
jmp
jle
dec
add
fs
xor
lock
sbb
stos
aam
jp
push
and
in
adc
sahf
mov
dec
add
es
retf
xor
push
sti
fld
mov
addr16
dec
enter
dec
cli
jge
shl
xor
pop
mov
cmp
xchg
ret
add
imul
pop
sbb
sub
pop
jmp
js
cs
ret
sbb
mov
mov
jns
pop
repz
jl
sub
push
enter
loopne
ss
push
mov
jge
mov
gs
adc
jae
push
mov
mov
shr
adc
mov
dec
and
xor
sbb
ins
enter
jp
xor
cmp
adc
leave
push
test
xor
or
cmp
lods
mov
arpl
add
sbb
xchg
jecxz
mov
xlat
retf
enter
(bad)
mov
fldenv
adc
add
pop
aad
pmulhw
push
ror
into
push
or
pop
gs
dec
popf
sub
add
imul
scas
jecxz
sahf
lea
cwde
cmps
sbb
aad
cmp
mov
(bad)
xchg
cmp
not
ret
adc
es
xor
es
or
psubb
jns
fwait
cmp
xchg
or
jbe
cmp
sbb
outs
cs
pop
ror
cwde
xchg
pop
test
out
in
pop
bound
dec
mov
arpl
(bad)
cmp
mov
inc
rol
and
ror
scas
fisttp
mov
ficomp
sar
or
sbb
pop
mov
(bad)
scas
ss
mov
hlt
and
sub
push
jnp
adc
pop
add
or
call
sub
cmp
sbb
mov
iret
das
cwde
mov
ins
mov
push
push
aam
and
pusha
sub
dec
das
scas
fst
in
das
xchg
cld
add
mov
mov
shl
and
push
inc
in
xchg
push
div
enter
sbb
sbb
sahf
test
lea
pushf
and
outs
cmp
pop
in
leave
inc
mov
loopne
mov
rcl
sbb
sbb
test
fld
and
push
inc
dec
push
mov
and
mov
push
mov
inc
mov
nop
pusha
xchg
and
cli
retf
mov
iret
fdivr
inc
sub
add
xchg
sti
(bad)
cli
out
mov
cmp
xor
into
cmp
cwde
mov
jbe
aad
inc
bextr
and
push
xchg
pop
popa
lahf
retf
sub
js
cmp
retf
mov
inc
cmp
sub
push
or
jne
ins
jge
ret
sbb
mov
pop
cs
iret
out
cmps
mov
push
cmp
cmc
ja
cli
out
(bad)
dec
inc
xor
test
xchg
cli
hlt
mov
pop
ror
fs
pop
jnp
pusha
jmp
jecxz
sbb
hlt
sar
mov
pop
push
sbb
push
stc
mov
stos
jae
inc
push
cmp
ret
mov
cwde
mov
lahf
sbb
push
pop
mov
ss
xor
(bad)
test
xchg
xor
call
lea
aam
xchg
or
xor
sub
and
fisubr
mov
sub
mov
(bad)
retf
fstp
inc
inc
push
jg
lods
mov
cld
mov
xchg
jmp
retf
and
xor
int
loop
std
in
sti
shr
xchg
call
push
aaa
or
jo
das
fwait
cmc
xor
dec
sub
mov
mov
xlat
ins
(bad)
fdiv
dec
or
pop
mov
movs
idiv
fnstenv
jmp
fst
nop
or
jae
cs
out
iret
call
pop
dec
inc
mov
push
jae
out
mov
pop
int
jnp
pop
movs
in
rol
or
lahf
xor
test
cmc
rol
cdq
(bad)
stc
pop
adc
pusha
psubb
outs
inc
push
pop
in
mov
pop
xchg
mov
int
retf
sub
cmps
es
shl
ret
xor
inc
call
aaa
arpl
(bad)
cdq
jns
dec
xor
out
xor
daa
mov
mov
test
call
jmp
ret
sub
mov
mov
icebp
push
pop
stos
adc
out
fbld
dec
loop
mov
retf
lods
sub
(bad)
retf
xchg
test
mov
mov
shl
or
imul
mov
retf
jmp
out
stos
inc
in
pop
sbb
(bad)
push
sti
xchg
sub
or
inc
adc
std
dec
pushf
fwait
adc
lods
mov
dec
loopne
jb
icebp
shl
call
push
test
fs
pushf
fnstcw
fimul
retf
ret
xor
pop
or
std
jae
add
inc
mov
inc
jle
lds
cmp
mov
and
and
push
jl
push
sub
sub
adc
pop
movs
jp
sub
adc
mov
sti
aam
push
sahf
test
shl
sar
test
out
repnz
arpl
fbld
scas
dec
outs
and
les
sbb
pusha
mov
rcr
pop
jecxz
rcl
mov
sbb
cmps
adc
add
jo
pop
in
xor
push
(bad)
mov
inc
jns
outs
(bad)
xchg
pop
adc
cmp
jge
fwait
aam
mov
xor
pop
pop
bound
cmp
popa
outs
adc
push
aas
icebp
lea
pop
pop
pop
or
sbb
int
(bad)
sub
pop
xchg
neg
int
pusha
into
lahf
lahf
and
loopne
ds
sub
dec
dec
ins
jne
aaa
clc
mov
je
lods
arpl
fbstp
(bad)
int3
out
retf
mov
xlat
movs
mov
aad
int
push
dec
inc
cmp
xchg
adc
and
and
sbb
add
test
imul
sbb
mov
and
jb
fwait
into
shl
mov
mov
pop
sbb
mov
rcr
jmp
shr
ins
lock
mov
mov
pop
fbld
push
lea
aaa
jo
dec
xlat
mov
cs
dec
in
ds
repnz
fst
push
mov
add
mov
movs
and
es
jae
lahf
jnp
fwait
jl
das
test
mov
mov
fmul
inc
enter
fcmovnb
cmp
imul
mov
shl
pop
hlt
cmp
(bad)
pushf
fimul
popf
add
movs
outs
lea
mov
and
xor
push
xor
cli
sub
dec
cmp
mov
mov
mov
fiadd
shr
pusha
popf
(bad)
xlat
pop
pcmpeqd
inc
loopne
sbb
stos
test
ret
xor
xchg
out
jb
xchg
pcmpeqb
stos
pop
mov
jo
movs
mov
fldenv
cs
stc
push
call
neg
fidiv
imul
scas
push
jmp
adc
in
ret
js
pop
cs
dec
sbb
or
pop
or
xchg
in
loop
ret
xchg
pop
push
in
jne
arpl
imul
or
and
(bad)
jno
icebp
sbb
mov
adc
cwde
inc
pop
loopne
dec
or
enter
push
mov
fwait
ret
pop
xchg
fcmovnu
aas
sbb
pop
add
fidivr
(bad)
std
out
test
inc
add
imul
push
lods
je
(bad)
mov
and
lock
push
cmps
test
add
neg
mov
ja
ins
hlt
sub
push
push
jbe
or
pop
xchg
out
jns
scas
xor
fstp
jmp
xchg
push
aaa
test
lods
inc
mov
rol
mov
sahf
in
sbb
and
xor
ins
jmp
pop
mov
cmp
push
push
mov
and
aad
mov
push
jge
and
outs
shr
pop
stc
rol
cs
outs
dec
xor
aad
cmc
out
or
aas
inc
adc
jp
popf
cmc
pusha
adc
aaa
inc
and
loope
je
push
aaa
jg
dec
inc
cmp
inc
popa
mov
iret
push
sub
adc
lea
add
loopne
mov
je
adc
mov
dec
jo
cmp
fadd
push
sub
in
xor
pop
inc
pop
ins
or
bound
outs
cmp
pop
fcom
popa
clc
ret
dec
jnp
fcom
xor
mov
sbb
out
push
cmp
rol
sbb
and
ret
cmp
adc
(bad)
(bad)
xchg
lock
sub
pop
jns
pop
aaa
outs
mov
popf
mov
mov
lds
inc
inc
or
cs
les
fstp
(bad)
jp
fisubr
inc
call
pop
ret
jle
cmp
inc
and
enter
leave
out
aam
enter
retf
outs
mov
pop
(bad)
clc
sbb
inc
bound
mov
repnz
repnz
dec
or
xchg
test
add
movs
adc
cmps
in
xchg
pop
(bad)
arpl
cmp
adc
mov
int3
call
cdq
dec
add
adc
shl
push
add
push
les
stos
lods
or
mov
sub
sbb
out
test
scas
and
dec
push
stos
mov
cmp
mov
sub
push
xchg
mov
push
pop
mov
dec
mov
mov
and
adc
das
mov
(bad)
out
add
out
in
data16
add
cmps
into
es
int3
lahf
mov
(bad)
jae
sar
push
mov
cmp
cmp
mov
lods
in
std
pop
ret
push
fdivr
mov
iret
jmp
leave
lea
inc
add
clc
lea
mov
test
pop
dec
dec
xor
mov
ins
xchg
adc
pushf
xchg
fbld
jb
adc
stc
lds
es
inc
xchg
push
dec
outs
push
cmp
rcl
sub
lock
xchg
sahf
mov
mov
mov
adc
jbe
or
jl
and
dec
adc
jne
in
fisttp
cmc
scas
nop
cmp
loope
jb
sar
add
ds
addr16
loope
jl
push
sti
jp
add
push
shl
lds
push
adc
xlat
or
jb
and
mov
in
(bad)
outs
push
hlt
lea
sar
inc
sti
retf
cmp
sub
mov
inc
sbb
ja
cmp
jmp
cli
push
sub
and
popa
xlat
ja
xor
jne
lea
jmp
dec
inc
or
xor
cmp
adc
inc
cmc
clc
cmps
adc
sub
fs
add
pop
dec
cli
add
mov
fs
sahf
(bad)
sbb
inc
cs
add
mov
mov
std
outs
out
mov
pop
aad
(bad)
mov
mov
popf
movs
out
popf
or
aad
or
or
minps
test
adc
sbb
js
pop
dec
adc
mov
xor
ror
cli
xor
adc
push
jmp
into
retf
fwait
cmp
add
and
pusha
sub
outs
std
popf
dec
mov
int3
mov
xor
lds
in
aas
jp
mov
pop
adc
int
jle
(bad)
and
ins
dec
cs
fwait
pop
xor
test
jae
lea
lods
cmp
std
sub
pop
ficomp
in
pop
push
mov
and
mov
jle
neg
sub
fdiv
push
cmp
or
repz
inc
iret
pop
push
xchg
(bad)
cli
fwait
push
mov
adc
and
mov
mov
stos
or
ret
push
sahf
clc
and
ret
pop
inc
add
push
inc
jae
arpl
inc
xchg
xchg
data16
loop
xchg
fdiv
push
cli
xor
test
icebp
dec
sar
pmullw
retf
cmp
sub
add
mov
cmps
add
imul
mov
jnp
lwpins
mov
jecxz
xlat
xchg
imul
clc
(bad)
ss
in
push
es
pop
push
xor
lods
retf
adc
lods
sub
xchg
dec
(bad)
jmp
fdivr
xchg
jg
inc
(bad)
ja
(bad)
jmp
in
jmp
movs
inc
xchg
adc
cmp
inc
nop
mov
jmp
sub
add
adc
pop
cmps
and
pop
int
dec
push
add
mov
push
or
stos
add
pop
(bad)
out
dec
test
test
inc
aas
adc
adc
jb
rcr
addr16
or
ins
and
mov
loop
rol
sub
dec
xor
mov
(bad)
xor
and
stc
addr16
fcom
push
mov
xchg
retf
mov
and
add
cmp
cmp
xchg
daa
popf
icebp
std
push
out
sub
cwde
xchg
in
jl
xchg
and
or
sbb
jle
jl
and
popa
and
ret
sahf
fcomp
mov
jbe
mov
mov
aaa
ds
out
cs
pop
inc
and
rcl
add
mov
fld
cli
ficom
jl
retf
dec
pop
sbb
xlat
push
dec
test
out
pop
pop
cmps
xchg
cmp
xor
inc
out
test
inc
pop
pop
push
stos
fxch
inc
test
push
test
xchg
pop
mov
mov
cmc
pop
sub
push
pusha
mov
add
loopne
out
rcl
cmp
dec
test
fist
ficomp
cmp
dec
fisubr
sub
jns
in
(bad)
imul
cmp
cmps
leave
out
xchg
jmp
inc
clc
pushf
scas
cmps
in
dec
fwait
icebp
and
jae
or
adc
cmp
xlat
or
movs
(bad)
(bad)
movlps
lock
mov
push
repnz
enter
adc
ds
sahf
mov
and
inc
je
in
mov
push
sub
cwde
fs
rcr
jb
dec
sub
mov
dec
int3
xor
and
or
aam
out
(bad)
retf
xchg
xchg
xor
stc
ja
fsubr
ds
xchg
outs
xchg
inc
push
dec
mov
nop
dec
dec
pop
test
repnz
movs
pop
(bad)
in
iret
aas
xchg
ds
cli
jns
mov
sbb
bound
jle
inc
ja
lahf
mov
mov
fisttp
mov
adc
push
mov
sub
inc
push
mov
les
jmp
popf
ins
and
stos
push
sbb
pop
test
pop
pop
stc
test
(bad)
int
outs
sbb
pop
adc
or
sbb
cwde
arpl
je
(bad)
int
cli
cmp
cmp
sub
jecxz
pop
pop
pop
xchg
and
cmp
ins
pop
cs
(bad)
xchg
ds
adc
sub
sbb
cmp
addr16
push
adc
das
retf
push
mov
inc
adc
inc
repnz
jle
xor
adc
cmp
(bad)
lea
lahf
stos
and
jbe
enter
mov
push
pop
cmp
pushf
fsubr
inc
gs
cmp
and
push
lods
clc
inc
dec
es
push
gs
pop
fcmovnu
data16
cli
pop
push
inc
cs
push
lods
stc
adc
rcl
(bad)
jmp
and
fldenv
(bad)
push
mov
ds
and
push
cmp
stos
and
lods
mov
add
std
xor
(bad)
or
nop
dec
imul
ret
sbb
test
or
inc
pop
repnz
cdq
icebp
pushf
into
and
ret
add
std
cmp
inc
loope
js
popa
xor
test
(bad)
shl
pop
mov
stos
stos
mov
test
shr
cmp
sbb
cmps
jl
ss
out
test
cmp
add
imul
cmp
push
ss
jae
and
cs
adc
add
call
xchg
mov
jae
jnp
push
lds
lea
sbb
mov
psubusw
scas
les
jne
adc
(bad)
cli
pop
xchg
jne
or
hlt
jo
inc
ror
loopne
scas
and
jle
add
bound
inc
scas
adc
cmp
inc
push
out
xchg
add
pop
pop
dec
movs
push
test
pop
lahf
popa
out
sub
les
dec
daa
lods
imul
aas
(bad)
cdq
xor
add
movs
mov
jp
inc
cmps
fisub
(bad)
dec
pushf
cmc
lods
or
repz
aad
pop
mov
xor
(bad)
mov
push
push
mov
and
or
rol
push
lahf
ins
push
mov
mov
xor
into
adc
and
fstp
sahf
and
out
mov
sbb
je
out
push
add
inc
shl
rcr
lea
lahf
test
push
and
push
sbb
stc
dec
or
in
xchg
push
pop
cld
mov
movs
mov
push
loop
add
repz
out
pop
jl
into
lahf
add
sub
sub
jno
jbe
sbb
out
push
retf
out
adc
cmp
xchg
jne
add
or
dec
hlt
test
mov
leave
(bad)
js
imul
or
xchg
loop
or
push
xchg
sar
mov
mul
inc
mov
ror
sbb
and
lea
cmp
out
mov
loope
int3
dec
fcom
std
xchg
xor
imul
adc
pop
fidivr
popa
in
pop
pop
fs
pop
fmul
pop
mov
push
add
ret
push
push
ffreep
sub
mov
jl
fsub
sbb
or
daa
pop
inc
jmp
and
pushf
push
aam
inc
lock
pushf
not
mov
fcmovnb
sti
clc
add
mov
jecxz
sub
mov
lods
sub
and
sub
xor
call
scas
mov
xchg
add
jmp
shl
cld
or
neg
dec
sbb
jbe
call
push
mov
adc
pop
mov
movs
and
(bad)
mov
retf
aaa
(bad)
arpl
(bad)
outs
add
adc
pop
jecxz
jns
in
xor
mov
int3
sahf
push
xchg
xchg
mov
not
dec
(bad)
push
push
ins
fiadd
cmp
pop
jb
sbb
shl
nop
or
sub
cmp
sbb
sub
stos
adc
out
out
push
fnstenv
call
adc
popa
lds
push
pop
test
pusha
(bad)
or
rol
dec
mov
dec
pop
mov
outs
js
xchg
cmp
cmp
fimul
sti
clc
into
jmp
je
add
and
arpl
adc
(bad)
jge
outs
bound
sbb
fs
push
fwait
add
mov
lods
mov
imul
sbb
push
dec
std
push
lea
ret
cli
je
pop
das
cmp
jb
ror
sbb
sub
pop
js
js
aam
mov
sbb
repnz
popa
gs
inc
mov
daa
push
aas
jmp
lds
call
rcr
je
inc
imul
or
push
dec
clc
mov
add
sbb
imul
out
data16
jecxz
retf
addr16
sbb
jns
bound
call
hlt
push
adc
inc
cmps
fdiv
xor
add
cmps
sub
xor
les
mov
mov
dec
into
fild
sub
push
scas
pusha
push
and
sub
sub
cmovns
std
xchg
aas
test
xor
pop
mov
and
pop
js
inc
aad
outs
loop
fstp
sti
ds
in
jnp
(bad)
mov
cwde
mov
es
inc
xor
push
movs
mov
(bad)
fdiv
retf
aad
mov
out
call
mov
std
add
inc
jp
ret
retf
push
mov
or
in
jecxz
loope
neg
adc
sub
ja
dec
mov
and
pop
enter
lods
mov
fld
das
(bad)
enter
aad
or
push
sbb
jb
adc
push
or
movs
or
lds
js
dec
mov
lahf
sub
sahf
xor
or
mov
mov
dec
jmp
ins
fidiv
pop
pop
sub
inc
push
sbb
xchg
test
popa
add
xor
jmp
xchg
jo
push
sbb
mov
cld
mov
push
bound
rcr
ds
or
adc
jmp
or
sub
in
dec
inc
sbb
push
jae
(bad)
pusha
cs
outs
xchg
nop
and
cwde
mov
mov
cmp
retf
jmp
mov
dec
sub
adc
and
xlat
(bad)
cmc
cmp
call
fisttp
jns
test
xchg
jne
test
sbb
mov
add
or
test
cmps
and
aad
xchg
aam
jg
outs
clc
cmp
add
mov
adc
out
int
cwde
icebp
sub
mov
add
cli
adc
xchg
sub
leave
mov
ds
mov
jns
dec
or
out
addr16
add
ins
xchg
(bad)
xor
mov
sub
enter
fs
or
popf
jecxz
fwait
inc
xor
scas
mov
mov
and
fmul
mov
xchg
aaa
adc
jle
retf
call
jno
mov
xor
pop
add
add
cld
rol
stos
xlat
outs
daa
ins
(bad)
jbe
pop
(bad)
ficomp
jmp
cld
and
nop
mov
add
add
jmp
pop
mov
or
mov
sar
add
jl
aas
dec
das
retf
push
(bad)
xchg
(bad)
or
call
ficomp
retf
sub
push
cmp
add
test
xchg
push
adc
xchg
sub
pop
pop
pop
xchg
sub
push
sar
mov
xor
aam
dec
aaa
dec
mov
repz
cmc
mov
jmp
out
loopne
(bad)
loop
call
pop
xor
stos
xor
mov
in
cmp
xchg
xor
xchg
imul
js
mov
cli
fist
mov
cmps
dec
out
mov
nop
(bad)
sub
xchg
test
sbb
dec
push
idiv
mov
aad
hlt
mov
sub
push
inc
xchg
out
cld
jae
inc
aas
inc
iret
dec
and
add
inc
ficomp
fidiv
jae
hlt
int3
int3
popf
push
aaa
jmp
jae
xor
pushf
push
mov
push
lahf
sbb
mov
adc
icebp
das
dec
sbb
push
jmp
outs
and
cld
icebp
xor
xor
(bad)
clc
ins
cmp
dec
out
dec
dec
xor
pop
sar
jbe
or
jno
or
popf
aas
dec
push
ficomp
xchg
mov
jbe
(bad)
je
pushf
cmps
and
inc
jg
adc
xor
jge
fwait
xchg
ss
jb
mov
or
test
out
sti
lods
shld
adc
clc
stos
adc
out
adc
add
stc
imul
pop
inc
xchg
xor
ret
fdiv
mov
adc
int3
movs
loopne
jmp
mov
pop
fcom
jge
rcr
dec
imul
add
dec
sbb
jmp
popa
out
dec
(bad)
retf
inc
sbb
jp
mov
dec
xor
mov
jns
jno
pop
retf
test
jg
inc
inc
int
enter
cmp
loopne
out
jae
into
cmps
inc
outs
and
add
xor
ja
js
fwait
mov
stos
loopne
mov
or
cmp
jnp
jae
xor
sbb
push
in
xchg
call
fstp
mov
jbe
push
inc
std
and
cmp
inc
repz
dec
into
inc
sbb
sti
or
jne
lock
jle
out
loop
jg
call
imul
pop
pop
sar
(bad)
dec
pop
push
ins
cmps
mov
mov
and
ins
iret
dec
jo
xlat
lods
mov
pop
push
cs
pop
xchg
xchg
and
jns
dec
lods
xchg
mov
mov
jmp
jmp
call
or
inc
xor
mov
fisubr
mov
pop
cmps
dec
adc
push
or
repz
repz
and
jp
cli
daa
mov
je
jns
mov
test
cmp
gs
lods
mov
sti
test
int3
and
sub
sub
repnz
dec
retf
jmp
in
retf
out
icebp
jno
xlat
or
pop
aad
lea
or
sbb
fs
jbe
mov
mov
sbb
ret
mov
stc
jmp
mov
ret
int
inc
mov
stc
icebp
dec
pop
sub
and
adc
and
mov
movs
pop
and
dec
dec
in
mov
xchg
mov
push
or
adc
shl
dec
in
cmps
push
fs
pop
aam
xchg
out
movs
jb
(bad)
aas
jecxz
mov
cmp
xchg
fdiv
mov
cld
cmc
adc
xlat
xchg
stos
xor
or
mov
mov
or
sbb
push
rcr
jb
dec
sub
nop
out
jb
or
inc
mov
mov
arpl
dec
aas
stc
jl
(bad)
and
arpl
cmp
add
int
movs
out
adc
pop
adc
add
mov
dec
mov
outs
dec
xchg
push
sbb
xchg
pop
mov
inc
dec
fwait
sub
and
sahf
push
les
or
in
mov
mul
mov
repz
outs
jmp
mov
shl
xchg
test
sub
mov
int
aad
jb
jno
iret
mov
in
jmp
pop
xor
dec
sub
sub
fld
ds
inc
jecxz
jno
inc
pop
and
aas
call
cs
cmp
inc
pop
jae
sub
or
mov
call
mov
sub
mov
or
das
and
cmp
add
sbb
mov
mov
lods
or
rep
add
hlt
aaa
ins
imul
and
mov
dec
push
and
ftst
jp
push
sub
pop
or
jbe
mov
movs
sbb
imul
stos
and
push
and
ficomp
jne
jnp
adc
dec
jae
jb
rcr
call
dec
lods
or
pop
and
dec
pop
test
stc
mov
xor
inc
mov
out
not
pushf
clc
arpl
ja
nop
call
fwait
mov
inc
sub
call
in
lods
add
xor
leave
or
inc
and
scas
inc
sbb
mov
imul
adc
jo
lahf
adc
push
mov
mov
mov
xchg
cmp
call
test
jecxz
inc
stos
mov
test
add
mov
inc
add
xor
sbb
and
or
imul
jo
call
cmps
inc
mov
in
repnz
cdq
jbe
or
add
hlt
imul
aaa
lock
jmp
fld
jmp
pop
mov
aas
adc
jne
dec
push
sbb
push
fwait
and
mov
xchg
inc
imul
(bad)
cmps
or
pop
inc
push
les
xor
cmp
fbld
jg
(bad)
ja
push
or
lahf
cwde
ret
jge
jo
cwde
ficom
ficom
mov
add
ret
mov
push
rol
pop
and
pop
ds
xor
xor
sbb
stc
lea
adc
stc
(bad)
or
add
les
jecxz
pop
push
xor
sub
mov
scas
lods
push
call
stc
jp
lds
dec
sub
icebp
mov
shr
xchg
jmp
pop
cdq
mov
dec
mov
imul
loopne
and
add
shr
mov
loope
adc
ja
or
push
aad
mov
inc
push
mov
inc
int
(bad)
jmp
stos
ficom
pusha
xchg
push
pop
xchg
enter
imul
lea
imul
icebp
es
pop
jae
mov
adc
gs
lds
sub
sbb
mov
in
jle
xor
or
out
(bad)
neg
stos
xchg
popa
xchg
inc
jecxz
pop
fwait
not
xor
add
adc
cli
nop
jecxz
int3
push
inc
rcl
and
lock
rol
push
jle
icebp
es
and
mov
adc
push
iret
retf
rcr
lods
mov
cdq
or
mov
dec
bound
sar
mov
lea
arpl
sti
xor
in
aad
cmp
adc
add
mov
cmp
xchg
or
fsubr
push
into
cmp
sbb
test
mov
loop
int3
into
arpl
ror
aam
mov
pop
inc
mov
inc
mov
dec
stos
repz
mov
adc
push
out
(bad)
std
shr
cmp
sahf
outs
repz
ret
mov
jge
rcl
cmc
jg
imul
retf
mov
and
fst
pop
and
sub
call
jb
sbb
inc
int3
sbb
jno
xchg
ret
sub
pop
pop
out
xchg
fwait
dec
dec
les
mov
fiadd
inc
rcl
dec
sub
(bad)
fs
outs
push
jo
push
les
ins
out
add
inc
ds
popa
xchg
scas
xchg
add
mov
fdiv
fidivr
xchg
ret
fistp
icebp
sub
push
sbb
pop
std
stos
push
js
push
adc
scas
adc
pusha
mov
push
fnstsw
xchg
inc
jo
mov
mov
sub
aas
iret
les
cmp
test
ds
pop
mov
pop
mov
or
lock
mov
jecxz
dec
sahf
mov
daa
ffree
retf
sub
sub
push
aaa
mov
iret
mov
push
dec
imul
cld
fdivr
pushf
ret
or
mov
out
sbb
arpl
not
pop
sub
mov
out
std
ja
sbb
jno
sbb
mov
mov
xor
mov
pushf
ror
(bad)
sar
fdivr
pop
pop
jbe
repz
cmp
popa
sub
mov
mov
sbb
fwait
inc
(bad)
dec
jbe
imul
(bad)
enter
ins
loop
xchg
outs
mov
add
(bad)
or
adc
sub
ss
add
in
pushf
sub
mov
inc
repz
jl
rcr
cmp
sbb
xchg
fcom
icebp
enter
inc
call
test
movs
cmp
std
fstp
adc
mov
inc
adc
je
push
sbb
(bad)
iret
(bad)
adc
push
mov
aas
sar
jecxz
xchg
xor
mov
mov
cpuid
inc
and
jmp
mov
jl
push
stos
xor
sub
jo
dec
or
and
dec
cmp
stos
adc
(bad)
mov
rcl
pop
mov
scas
mov
div
xor
shl
adc
pop
mov
dec
pop
ss
jge
mov
in
xchg
xchg
push
imul
jns
out
mov
dec
ins
sar
js
jge
jne
daa
and
sub
and
outs
xchg
cmp
or
push
add
jbe
adc
pushf
lock
js
fmulp
rcr
data16
fsub
scas
clc
cmp
xor
xor
stos
(bad)
fisttp
cmp
rcl
inc
sub
aam
ja
data16
sub
pop
pop
mov
inc
jns
aad
clc
std
aas
mov
add
mov
adc
push
cmp
or
jg
data16
mov
ja
sbb
or
push
pop
je
in
shl
daa
(bad)
stos
xchg
pop
sub
push
push
add
js
adc
jnp
(bad)
fbld
js
ret
int3
xchg
inc
push
push
outs
jns
gs
ins
movs
into
cmp
(bad)
ins
rcl
cmp
imul
loop
fnstenv
mov
test
lahf
xchg
mov
aaa
jo
inc
push
js
aad
mov
push
sbb
and
mov
and
mov
dec
push
call
jg
daa
sub
cmp
xor
in
mov
repnz
cs
pusha
jns
pop
mov
push
sbb
ss
mov
inc
cs
out
xor
push
je
jmp
pop
pop
sub
mov
mov
xchg
data16
mov
je
(bad)
nop
mov
call
jp
sbb
mov
test
dec
shl
loop
inc
or
popf
hlt
adc
ss
jg
iret
dec
in
or
and
pop
cmp
ins
rol
les
icebp
mov
sti
mov
cdq
movs
cmp
loope
mov
sub
xor
imul
ret
(bad)
cmp
(bad)
mov
and
mov
ds
arpl
and
daa
mov
mov
adc
mov
call
popf
lods
or
mov
sbb
lods
jge
(bad)
clc
mov
jl
sbb
push
pop
add
and
xor
ss
mov
adc
mov
rep
sahf
and
loope
pop
leave
push
xor
mov
clc
aad
cmp
cmp
mov
cld
fld
shl
sub
xchg
stc
mov
add
inc
inc
xchg
shl
sbb
cmc
aaa
add
push
cmps
not
pushf
push
repnz
mov
mov
jb
movs
repnz
add
xor
hlt
push
adc
aad
pop
mov
mov
mov
push
out
mov
xchg
jb
scas
pop
xor
in
xchg
pop
mov
je
icebp
xlat
std
or
aaa
enter
dec
scas
sbb
ins
inc
ins
fxch
sbb
aam
aad
adc
mov
sbb
add
mov
dec
cdq
scas
fstp
xchg
push
adc
dec
data16
shr
xchg
adc
push
adc
xlat
push
loopne
fimul
lahf
popa
mov
xchg
mov
enter
and
adc
lock
std
ret
xlat
and
ficomp
int
pop
aam
xor
jmp
(bad)
dec
sbb
jmp
dec
xor
mov
fwait
aam
sbb
outs
shl
dec
mov
dec
cmp
jae
mov
sub
add
inc
xor
and
mov
call
arpl
movs
and
dec
dec
sub
mov
jmp
xchg
mov
sub
mov
paddusw
sbb
pusha
sbb
pop
push
(bad)
xchg
dec
aad
push
xchg
sbb
shr
adc
arpl
or
int3
mov
in
fsub
pop
(bad)
(bad)
pop
data16
xlat
jnp
cmp
or
mov
push
inc
adc
imul
int
mov
sbb
rcl
and
pop
imul
jle
lods
rol
xor
lds
sbb
js
pusha
mov
sub
out
mov
aam
adc
push
add
inc
es
(bad)
ss
les
aaa
and
call
xlat
and
ret
mov
mov
sbb
cmc
sub
dec
mov
push
or
out
xor
push
sub
lahf
mov
add
in
(bad)
mov
and
sti
ds
dec
xchg
ficom
ins
push
fdivr
repz
add
cmp
adc
mov
popa
not
push
xchg
mov
(bad)
cmps
call
sub
dec
movs
leave
dec
jne
push
inc
xchg
iret
iret
mov
int3
cmps
adc
lea
in
jge
or
cmp
pusha
les
xor
and
push
stos
cmc
retf
stos
adc
push
push
loop
sahf
add
mov
test
shl
das
cmps
cmp
adc
leave
push
sub
lock
jmp
sbb
sub
enter
and
mov
and
mov
test
pop
lahf
icebp
add
(bad)
das
dec
cmps
push
inc
push
inc
movs
pop
retf
stc
mov
pusha
(bad)
std
std
xor
cmp
jg
dec
pushf
jg
(bad)
pop
and
ror
fadd
mov
push
xchg
push
cld
mov
inc
push
mov
pop
push
repnz
in
loop
lods
outs
cmps
jmp
cld
test
hlt
inc
add
mov
loope
xchg
push
(bad)
div
lea
cdq
movs
scas
je
nop
repnz
call
shr
xchg
(bad)
loope
jmp
pushf
or
out
or
outs
in
sbb
pop
sar
sti
movs
fbstp
inc
mov
mov
into
push
sub
fs
hlt
inc
sar
cld
rcl
rcr
mov
inc
push
arpl
xchg
adc
cmp
lds
stos
push
loope
sbb
cmps
adc
push
cmps
add
cmp
push
shl
jg
pop
and
movs
gs
(bad)
push
cwde
add
pop
dec
inc
gs
fcmove
xor
cdq
fmul
stos
mov
int
data16
lods
imul
sbb
and
pop
and
mov
or
pop
adc
nop
aad
aad
cld
pop
out
add
add
push
outs
mov
or
fwait
push
mov
mov
mov
and
adc
jnp
rcr
xor
xor
jmp
jne
jg
mov
ror
xchg
sbb
fisttp
mov
ror
mov
and
jecxz
aas
inc
cmps
out
add
outs
es
inc
pop
add
jmp
mov
adc
sub
xchg
ja
pop
dec
jmp
movd
and
mov
xor
jo
movs
xchg
pop
popf
fndisi(8087
xor
mov
and
xchg
add
pop
jo
pop
arpl
cmp
aam
sub
jl
push
and
aad
jno
jmp
cmps
out
nop
loop
imul
pop
xor
rcr
add
sbb
mov
cmp
bound
or
and
dec
mov
mov
inc
call
sbb
jg
repz
xor
aad
inc
imul
pop
jns
std
add
inc
jns
std
xchg
mov
jp
scas
add
in
ror
mov
mov
sbb
add
xchg
jb
sub
into
mov
mov
cli
dec
or
mov
into
mov
pop
ror
in
popf
push
push
out
push
pop
xchg
add
jb
idiv
in
(bad)
and
push
dec
std
aaa
mov
scas
mov
sbb
jmp
add
in
(bad)
loope
mov
enter
xchg
push
outs
xchg
ret
test
or
daa
cmc
daa
sub
clc
mov
arpl
mov
lea
repnz
in
movs
add
mov
mov
sub
(bad)
andnps
lds
pusha
xor
xor
and
sahf
daa
mov
aas
or
xchg
in
cmps
push
xor
pop
mov
mov
mov
in
retf
pop
mov
cmps
or
xchg
lds
scas
hlt
lahf
imul
pop
sub
cli
xor
es
push
sub
sub
mov
mov
jg
inc
loop
sub
or
pop
icebp
test
inc
mov
ret
cmps
fucomp
pop
xchg
pusha
xor
add
pushf
inc
iret
rcr
mov
in
(bad)
mov
repz
adc
(bad)
jns
inc
push
sbb
inc
mov
mov
pop
push
and
lods
pop
imul
push
xor
cmp
sbb
in
in
clc
fsub
rcr
or
push
add
xchg
(bad)
out
ins
ss
xor
pop
mov
es
scas
fisttp
mov
(bad)
jecxz
jl
mov
xor
test
mov
or
or
sbb
mov
(bad)
xor
push
add
fnsave
push
mov
fistp
add
dec
cwde
mul
loope
pop
dec
cdq
cs
jns
hlt
fild
pushf
fdivr
call
popf
popa
outs
bound
xchg
lods
imul
and
mov
test
in
add
cmp
xor
lahf
ret
add
pushf
and
aas
fidiv
in
ret
mov
push
cmp
iret
cld
cli
xor
mov
adc
(bad)
xchg
and
(bad)
push
stos
outs
mov
xlat
mov
inc
sbb
sbb
adc
jns
ror
icebp
xor
sbb
arpl
sbb
cs
ficom
scas
jmp
inc
add
mov
add
xchg
je
pusha
(bad)
mov
xor
xchg
push
sbb
xchg
push
fs
xchg
adc
cdq
(bad)
out
lds
mov
bound
cmp
cmp
iret
scas
lock
xor
add
cwde
ins
mov
jbe
adc
std
shl
loopne
fisubr
mov
mov
mov
fs
enter
fdiv
stc
inc
pop
fstp
jmp
xchg
xlat
out
(bad)
out
add
jecxz
xor
push
std
fistp
shl
rcr
push
jmp
cmp
stos
std
addr16
das
and
xor
add
inc
jns
and
sbb
mov
mov
test
add
adc
fcomp
aas
ror
shl
push
sar
loopne
push
xor
addr16
cmps
leave
mov
xchg
call
mov
cmp
(bad)
cmovne
mov
outs
lock
sahf
jecxz
mov
retf
mov
(bad)
aam
and
push
xchg
mov
jno
xchg
stos
push
or
xchg
call
or
pusha
push
xchg
popa
es
test
and
mov
fdivp
add
jae
fdiv
fsubr
cld
aam
add
jns
cwde
or
clc
push
adc
lock
call
test
pusha
mov
ins
jns
mov
in
inc
sahf
xor
mov
pop
ins
push
inc
inc
push
cmp
clc
(bad)
jmp
adc
mov
fistp
jle
out
in
test
mov
dec
(bad)
out
test
or
loop
rcr
daa
dec
movs
dec
cmpxchg
push
fdiv
push
jns
pop
jmp
add
dec
int
or
jo
cwde
inc
pushf
push
in
(bad)
mov
pop
es
pop
test
loopne
aas
dec
rol
lods
popf
sbb
push
outs
ficom
mov
or
cmp
lods
pmulhuw
je
jecxz
inc
outs
icebp
fsincos
adc
or
mov
imul
lea
imul
fs
loopne
mov
sahf
cmp
jo
cmp
daa
bound
cdq
retf
push
push
stos
dec
dec
scas
gs
mov
rcl
mov
call
inc
ins
jno
and
scas
jg
dec
sub
imul
retf
frstor
cdq
pushf
or
push
js
cmp
jbe
fwait
enter
sbb
das
jns
daa
mov
jno
jmp
add
jo
pop
and
shl
and
xor
cmps
xchg
lods
movs
rcr
mov
add
sti
retf
inc
xchg
stc
es
test
xor
data16
jmp
inc
retf
loop
out
or
nop
mov
add
out
xchg
inc
movs
sub
jg
retf
jl
dec
mov
and
jl
sahf
les
inc
enter
add
inc
retf
loop
int
pop
imul
iret
jbe
in
sbb
ja
or
adc
sub
daa
pop
mov
mov
xchg
xchg
jg
mov
mov
ja
cmp
out
dec
hlt
lahf
aam
jnp
mov
push
add
sub
adc
arpl
adc
cmps
cmp
push
fisttp
and
jmp
fiadd
aaa
dec
jno
jmp
pop
push
push
mov
jmp
int3
push
and
pop
div
pusha
adc
ja
cmp
ficomp
rol
je
adc
mov
ins
iret
xor
xor
aas
in
xor
js
pop
push
add
mov
lock
sti
(bad)
repnz
mov
addr16
(bad)
icebp
imul
outs
outs
call
jecxz
int3
add
repnz
inc
xchg
es
push
push
xor
xor
dec
repz
loop
xchg
inc
mov
mov
enter
jmp
xchg
push
adc
jno
enter
scas
aad
mov
mov
sahf
out
adc
xchg
and
shl
push
sbb
sahf
cmp
jmp
shr
(bad)
add
inc
aam
jle
xchg
ror
icebp
mov
jmp
sub
in
add
imul
pop
add
mov
pop
cmp
inc
enter
and
xor
mov
test
cmp
cmc
mov
stos
cli
ins
test
test
and
mov
in
pop
test
sub
mov
mov
(bad)
mov
or
test
outs
jmp
push
cld
xchg
fsubr
cwde
xor
loope
scas
out
jle
or
fldcw
inc
and
mov
pop
pop
pop
jnp
dec
xchg
sbb
icebp
jecxz
mov
mov
mov
daa
inc
inc
or
das
into
fisttp
push
aas
test
ret
push
inc
(bad)
fnstcw
cwde
ins
push
neg
fld
out
ror
dec
adc
dec
inc
mov
dec
retf
retf
inc
mov
and
inc
out
and
jmp
push
sbb
inc
pop
lods
or
je
pop
mov
fsub
mov
(bad)
(bad)
push
loopne
(bad)
jbe
stc
movs
mov
stc
mov
cld
cmp
adc
daa
mov
popa
std
xor
stos
jne
mov
shr
outs
sub
iret
lods
push
fstp
es
int3
sbb
mov
arpl
js
xchg
push
or
pop
fistp
clc
pusha
add
push
mov
push
xchg
js
cmp
mov
and
jge
fdiv
adc
push
mov
mov
(bad)
push
sub
dec
pop
cs
push
fs
dec
outs
dec
outs
stos
push
and
out
test
leave
cmp
mov
lahf
aas
jecxz
mov
sub
cwde
push
lds
mov
jecxz
mov
sti
mov
pop
(bad)
adc
aad
push
ror
int
xor
mov
mov
cmps
data16
mov
cs
lea
les
lods
stos
ror
jg
jmp
retf
iret
in
pop
mov
and
pop
xor
adc
(bad)
cmp
mov
pop
mov
jl
sbb
cli
mov
aaa
std
jo
aaa
movs
sub
aas
adc
(bad)
xlat
mov
add
or
sbb
push
nop
fldcw
and
push
jmp
fdecstp
adc
inc
pop
icebp
(bad)
dec
dec
push
stos
rol
stos
inc
xchg
and
stos
lahf
push
imul
cmp
pusha
leave
ret
xchg
sbb
mov
cmc
fld
pop
fwait
jns
sub
call
adc
lds
xor
sbb
xor
adc
rcr
mov
or
or
punpckhwd
div
sub
xchg
jmp
pushf
icebp
dec
daa
shr
and
ja
scas
in
xchg
jno
jns
or
(bad)
test
jg
(bad)
fcom
mov
sar
(bad)
inc
dec
stos
add
pop
cmps
mov
and
sub
cmp
or
enter
cmp
push
jno
stc
popf
sub
xchg
(bad)
mov
and
js
jp
sub
mov
fimul
das
push
sub
(bad)
xchg
out
imul
sub
(bad)
in
and
aaa
inc
call
xchg
loope
rcl
mov
pop
mov
bound
sub
repnz
dec
stc
push
add
dec
xor
push
jb
sbb
dec
cmp
arpl
xlat
mov
inc
loopne
add
push
push
cmp
in
into
mov
dec
lods
xor
sbb
ins
pop
inc
icebp
enter
push
test
aam
retf
inc
sbb
out
sub
lock
sar
outs
jmp
xor
xor
or
push
adc
bound
dec
ins
adc
jbe
enter
jp
or
or
xlat
dec
push
dec
int3
movs
push
outs
xor
bound
test
inc
popa
mov
cmps
mov
xlat
or
je
enter
hlt
and
icebp
(bad)
pop
add
jge
push
jne
or
and
xor
pop
xchg
inc
mov
inc
call
cdq
repz
adc
mov
outs
stos
fwait
je
neg
mov
xor
dec
je
inc
pop
and
mov
pop
xchg
pop
push
out
cmps
and
fist
add
mov
mov
sbb
iret
jae
into
add
pop
mov
cmp
jmp
sbb
inc
add
fidivr
xor
loopne
pop
push
mov
cmp
ficomp
and
fsubr
mov
retf
push
movs
push
das
add
rcl
fnstcw
adc
int
es
xor
xor
je
inc
xchg
jb
or
int
mov
shl
aad
jno
push
and
adc
call
mov
in
adc
popf
call
pop
fistp
dec
mov
adc
dec
repnz
das
xor
fdivr
cmp
je
push
dec
fimul
push
push
retf
pop
mov
ja
mov
pop
pushf
popa
movs
sbb
test
xor
jno
enter
jmp
sub
and
jo
jge
sub
std
jge
cmc
cwde
cmp
ror
stos
test
adc
arpl
and
das
sub
xor
mov
sub
pop
xchg
xor
int
hlt
je
loopne
ret
stc
(bad)
lods
jae
sub
mov
fdivr
ja
add
(bad)
mov
aas
hlt
clc
mov
lea
ss
mov
push
rcr
jmp
sti
xor
mov
sahf
test
aam
(bad)
dec
mov
xor
sahf
dec
push
push
push
jnp
fldenv
cld
and
sub
call
sbb
sbb
and
popa
jmp
in
push
sub
push
adc
and
jmp
je
adc
scas
fsub
add
iret
jmp
pop
sub
sbb
add
adc
jnp
fs
mov
mov
dec
dec
test
push
jecxz
pop
jg
ret
inc
xor
and
lds
mov
dec
xchg
mov
int3
ror
mov
cs
xor
xor
cmp
mov
aad
inc
hlt
sub
aaa
jnp
icebp
fdivr
outs
push
mov
shl
xor
jecxz
dec
mov
in
(bad)
lock
into
pop
push
dec
out
dec
cwde
in
xchg
fdivr
jle
scas
test
and
adc
mov
ret
cs
ja
cmp
cmp
or
xchg
dec
cmps
idiv
(bad)
jmp
sub
or
js
sbb
test
test
dec
pop
mov
jbe
jg
and
icebp
cld
xchg
adc
les
lock
mov
add
rcr
js
cmp
adc
jne
mov
test
sahf
push
imul
das
daa
addr16
jmp
dec
cmp
pop
outs
mov
test
(bad)
out
mov
push
and
sbb
cmp
and
cmps
fwait
bnd
in
xchg
fcomp
test
hlt
mov
clc
adc
sbb
jmp
repz
and
adc
jp
shl
xchg
nop
push
loop
push
cs
push
jle
mov
pop
push
push
lahf
jge
popa
jo
inc
dec
lds
pop
inc
xchg
inc
push
dec
and
mov
sbb
imul
mov
clc
icebp
and
or
jmp
mov
mov
and
push
or
ins
xchg
jg
aaa
xlat
jmp
fstp
loope
je
scas
mov
fs
and
cli
and
shr
hlt
lock
(bad)
xchg
inc
in
call
out
outs
std
pop
int
aaa
scas
or
repnz
xchg
ret
iret
jbe
push
ins
imul
ss
xor
dec
lock
ds
(bad)
jmp
xchg
pop
mov
inc
cmp
mov
add
rcr
loope
lea
loopne
pop
sbb
dec
outs
aad
adc
jo
les
or
movs
enter
pusha
cmp
fimul
sub
and
push
iret
xchg
gs
mov
mov
pushf
push
add
lahf
sbb
sahf
cmp
stos
xchg
dec
push
xor
push
xchg
cmps
enter
ret
sbb
in
inc
fist
dec
lods
rdtsc
and
or
mov
pop
adc
inc
cmp
in
leave
test
sub
adc
fdivr
add
ret
pop
bound
fdiv
std
ficom
push
clc
sahf
std
mov
dec
push
lea
in
call
cmc
test
fcos
les
(bad)
sbb
scas
stos
dec
sbb
std
inc
dec
mov
mov
nop
popa
adc
arpl
das
pop
aas
loop
gs
fs
test
push
pop
hlt
xchg
lahf
test
mov
push
and
pop
arpl
add
sbb
sub
adc
push
repz
rcr
loop
stos
fs
das
cmp
fcomp
sub
sbb
shr
pop
add
fsub
dec
loop
cmc
push
ror
pop
jb
dec
jne
sub
retf
rol
lods
push
in
xor
fwait
in
push
mov
mov
jo
pop
stos
fdiv
sub
lock
jmp
aaa
or
push
(bad)
(bad)
mov
mov
(bad)
(bad)
xor
add
xor
add
xor
in
sub
xlat
jae
stc
inc
inc
nop
inc
or
cmp
sbb
(bad)
out
ror
mov
inc
les
or
jmp
cmp
sbb
jo
jecxz
jmp
mov
xchg
ins
pop
ss
cmp
pop
push
xor
sub
mov
mov
dec
pop
popa
mov
and
pop
pop
add
imul
mov
jno
sub
mul
cdq
and
imul
imul
popf
leave
mul
mov
dec
loopne
and
xchg
movs
fstp
inc
stc
aam
inc
lock
frstor
aas
cmp
in
sub
sbb
popa
shl
(bad)
xlat
cwde
iret
push
es
mov
and
sbb
(bad)
fmul
shr
fadd
imul
inc
jp
outs
outs
pop
cmp
mov
sbb
push
mov
or
icebp
dec
dec
mov
sub
popa
xchg
cmp
popa
mov
rol
cmp
mov
jecxz
sbb
inc
cmp
push
lds
(bad)
pushf
pop
mov
jae
sar
push
out
shr
add
fmul
adc
fld
jne
jmp
nop
data16
out
cmps
outs
aas
mov
mov
push
push
aad
outs
mov
pop
out
movs
cmp
mov
fbld
enter
retf
shl
aas
add
fwait
inc
mov
adc
mov
int3
mov
mov
mov
jg
inc
xchg
cli
mov
jbe
mov
or
fldcw
jmp
cmc
mov
inc
jns
sub
daa
jb
pop
pusha
jb
jmp
ds
sbb
mov
mov
mov
(bad)
stc
jle
fsub
push
or
xchg
and
mov
or
xor
js
xor
(bad)
aam
arpl
add
mov
xor
adc
lods
repz
push
scas
inc
push
outs
mov
mov
(bad)
fisub
retf
or
cmp
pop
outs
lahf
cmp
jmp
adc
jbe
fnsave
fld
jmp
and
pop
sbb
mov
(bad)
xlat
xchg
dec
enter
adc
pop
mov
xor
out
std
mov
in
cdq
push
and
leave
imul
xchg
add
jnp
je
arpl
lock
mov
movs
out
stc
cld
in
push
xchg
sahf
sub
add
into
jmp
jb
inc
aam
inc
ja
clc
mov
movs
mov
or
push
xor
pushf
xor
ins
sub
mov
push
and
inc
into
(bad)
and
repz
mov
mov
or
add
sbb
mov
loope
aam
mov
mov
daa
mov
cdq
fidivr
les
xchg
rol
pusha
adc
adc
(bad)
ds
stos
and
test
dec
int3
icebp
jne
add
je
fisubr
js
outs
mul
push
movs
sahf
add
and
mov
out
mov
nop
xor
test
adc
sbb
sahf
push
inc
adc
lods
mov
inc
ror
or
aaa
pop
fldcw
and
lock
iret
out
fs
push
ins
adc
setp
outs
mov
out
dec
xchg
mov
int3
mov
test
cli
jmp
and
and
cmp
iret
cld
fs
cmc
es
sbb
lods
sbb
mov
dec
test
sub
ret
outs
test
call
ret
mov
std
dec
test
jae
xlat
retf
mov
jp
xchg
sbb
retf
cmp
cwde
shl
push
sbb
pop
scas
in
mov
cmp
js
pop
je
in
jnp
ins
cmps
lods
jp
jl
dec
mov
pop
fadd
scas
and
call
jb
pop
jl
ds
out
cmp
jle
xor
fsubrp
push
pop
popf
stos
inc
adc
arpl
iret
fdiv
mov
(bad)
pop
cwde
hlt
xchg
jns
adc
js
outs
inc
inc
inc
rol
pusha
push
test
mov
imul
test
popa
lock
cs
push
jmp
adc
fisubr
addr16
xchg
xchg
mov
xchg
mov
jnp
mov
push
and
lea
pushf
cli
or
sbb
data16
aam
xchg
mov
sbb
push
sub
xchg
push
(bad)
mov
addr16
pop
add
call
sbb
add
adc
cmps
adc
fstp
in
(bad)
pop
push
mov
adc
imul
and
fnsave
out
mov
sub
mov
sub
ret
xchg
sar
outs
mov
xor
jo
test
iret
sub
add
push
sub
dec
je
mov
or
dec
add
push
cmc
pop
cdq
pop
pop
imul
test
sbb
cwde
ret
scas
outs
and
and
cdq
bound
popa
cdq
movs
xor
lods
xchg
mov
add
stos
fisttp
cmp
ror
xchg
jo
dec
sub
pop
mov
in
adc
mov
jmp
inc
xchg
xor
push
pusha
push
int3
mov
ror
clc
fmul
movs
jnp
dec
data16
mov
popf
jg
aas
in
cdq
xchg
(bad)
(bad)
cmp
push
adc
ror
ss
fcmovne
cmp
xchg
sub
jae
retf
mov
xor
cmp
pop
fcmovnbe
jnp
mov
(bad)
fld
fucompp
dec
jno
push
jg
mov
mov
push
pushf
in
sbb
popa
or
aas
lods
sbb
arpl
out
mov
mov
daa
fwait
push
xor
xchg
add
mov
retf
ret
xor
lds
sbb
push
xchg
xchg
icebp
scas
ja
and
dec
cmps
adc
cs
add
jmp
push
pop
and
fstp
int3
mov
and
xchg
mov
retf
ret
test
bound
enter
aam
mov
scas
cld
div
xor
in
pop
push
xchg
mov
sub
xchg
sub
adc
iret
mov
pusha
or
adc
or
mov
mov
inc
rcl
jmp
mov
jecxz
xchg
(bad)
pushf
aam
call
add
dec
iret
dec
in
push
(bad)
or
jle
out
leave
xor
out
out
clc
std
cmp
mov
imul
mov
xor
push
push
or
push
mov
cmp
and
les
mov
mov
mov
stos
inc
sub
push
dec
jp
push
inc
or
js
jle
iret
out
stos
sbb
shr
ss
out
aad
bswap
jb
or
mov
mov
fs
retf
test
inc
scas
cdq
sub
xchg
out
fcomp
xchg
inc
pop
or
into
div
call
mov
mov
les
or
out
push
sub
vxorpd
sub
in
mov
push
stos
scas
outs
mov
(bad)
inc
popf
mov
add
or
ret
(bad)
je
lods
repz
lea
leave
in
jmp
hlt
lods
shld
movs
mov
add
jecxz
and
sti
fsub
clc
mov
inc
push
(bad)
stos
cmp
std
shl
jmp
sub
mov
adc
cmp
push
jbe
test
(bad)
std
shl
ja
imul
ins
dec
fs
in
das
or
mov
push
mov
jnp
mov
xor
fs
lds
std
mov
or
xor
jmp
test
cmp
jle
(bad)
push
out
adc
loopne
nop
dec
xor
ret
pop
push
int
cs
(bad)
xor
pop
enter
test
mov
lods
in
dec
pop
ja
test
mov
inc
push
ss
aad
jmp
xchg
mov
and
je
sub
ret
jnp
nop
cmc
push
push
retf
fidiv
(bad)
cmc
mov
call
jmp
imul
nop
xchg
mov
mov
bound
cwde
xchg
or
nop
iret
pop
not
inc
xchg
sbb
test
inc
call
dec
mov
pop
sti
(bad)
and
inc
jno
sbb
xchg
out
push
stos
jle
mov
dec
into
repz
mov
adc
xor
jl
cmp
pop
into
or
mov
add
ret
sbb
mov
push
(bad)
cmp
xchg
adc
xlat
rcl
int3
cmp
xchg
mov
(bad)
repnz
cmp
lea
clc
inc
hlt
cdq
es
rol
je
shl
ffreep
add
loop
sbb
xor
or
ret
cld
test
mov
pop
arpl
sbb
add
int3
int
xlat
cmp
mov
dec
(bad)
stos
mov
jo
xor
out
mov
dec
xchg
cli
lock
add
test
es
fbstp
(bad)
mov
push
mov
adc
push
popf
imul
jmp
in
int
cmps
pop
lahf
(bad)
pop
mov
sbb
rcr
inc
jp
fcom
push
out
and
call
xchg
mov
pusha
sbb
push
icebp
dec
movs
sti
retf
retf
push
ret
outs
dec
sbb
int3
int3
test
test
pop
jne
mov
les
jnp
(bad)
cmp
jp
in
mov
out
inc
cs
aas
xor
pop
jmp
sahf
xchg
rcl
data16
dec
xchg
xchg
ret
cmp
sbb
shr
imul
xor
sbb
sub
xchg
add
xchg
movs
add
arpl
sti
xor
(bad)
aam
gs
fadd
in
xchg
loopne
inc
popa
pusha
popa
pop
leave
repnz
jecxz
in
sti
adc
push
inc
rol
sbb
push
or
adc
mov
dec
jbe
push
push
ret
push
adc
push
mov
outs
push
sti
sub
movs
sbb
dec
lods
ss
call
xlat
ins
push
rcr
add
mov
pop
das
sbb
sbb
mov
int3
dec
dec
cld
cmps
lahf
test
lahf
pop
arpl
test
shr
test
pop
jae
adc
in
das
cld
je
lea
jns
and
mov
ds
test
imul
cs
in
out
inc
(bad)
test
cmps
inc
cmps
mov
pop
cmps
cwde
dec
mov
or
cmp
ret
pop
lahf
js
stos
shl
mov
(bad)
jmp
sub
dec
or
arpl
adc
cmp
xor
into
ret
leave
hlt
js
xchg
mov
jle
pop
hlt
push
adc
sti
push
push
sahf
out
mov
je
cmp
or
cmp
fstp
jae
fadd
scas
mov
xchg
pop
ins
mov
jmp
jmp
xlat
xchg
add
jb
sub
div
(bad)
cmps
popa
ret
mov
pop
and
pop
adc
push
jg
stos
xacquire
fimul
scas
out
jecxz
lods
fidivr
push
cdq
cmp
mov
ja
lods
inc
loope
mov
fwait
inc
xchg
pop
jecxz
cmp
xchg
sub
cmc
pop
cs
xchg
add
aaa
mov
in
fisubr
xor
xchg
mov
std
and
pop
and
inc
imul
aas
adc
imul
cmp
in
dec
mov
inc
cmp
push
jae
in
inc
cmp
sar
dec
pop
jg
jnp
shl
dec
(bad)
xchg
cmps
or
push
xor
and
cmps
imul
shl
xor
dec
pop
mov
and
prefetch
sub
dec
into
daa
push
add
mov
shl
scas
pop
mov
cmp
push
fsub
mov
xor
mov
xor
mov
repz
sbb
adc
jbe
jge
mov
pop
adc
int3
sub
test
ins
mov
jp
in
test
jmp
pop
inc
sub
pop
and
int3
adc
push
into
jne
inc
and
push
mov
mov
push
call
adc
lds
xor
or
pop
pop
dec
pop
cmc
adc
fs
pop
cdq
imul
adc
in
and
add
cli
lea
push
push
ret
ja
sahf
loop
icebp
inc
aad
dec
xchg
sbb
xor
add
outs
pop
dec
cli
outs
loop
mov
jl
je
nop
xchg
mov
movs
and
sub
leave
push
inc
push
adc
and
inc
push
mov
xchg
jbe
lds
retf
jmp
fdivr
sbb
loop
aaa
push
xchg
sub
hlt
enter
into
jmp
push
(bad)
xor
mov
lods
popf
add
xor
and
mov
mov
mov
inc
and
fisttp
addr16
in
or
pop
pop
push
loope
and
fs
mov
push
dec
pop
xchg
rol
or
ss
adc
dec
xchg
xchg
das
xchg
cmp
add
shl
cs
jbe
stos
pusha
sub
pop
icebp
mov
scas
sub
jo
popf
das
dec
dec
jl
test
fwait
jmp
pop
js
test
cmp
mov
in
cmp
xchg
mov
sbb
stc
(bad)
fwait
xchg
es
test
add
sbb
cli
inc
repnz
bound
sar
call
aas
or
ss
mov
in
idiv
adc
imul
and
jmp
inc
mov
pop
loope
movs
test
adc
in
scas
ins
lock
and
mov
jbe
movs
imul
jmp
dec
aas
sbb
and
dec
adc
xlat
xor
fisubr
(bad)
mov
mov
sti
dec
iret
ds
jle
lods
pop
fiadd
xor
mov
sub
(bad)
mov
or
lods
pushf
nop
ins
push
cmp
xchg
inc
push
xor
sbb
rcr
push
stc
dec
and
leave
jmp
cdq
loope
dec
add
loopne
inc
movs
mov
addr16
rcl
daa
mov
aam
xchg
or
jnp
xlat
push
xor
sahf
icebp
scas
adc
xor
adc
dec
sbb
aaa
ss
loope
cmps
push
inc
xor
jmp
shr
out
push
sbb
mov
clc
push
bound
xchg
outs
mov
xchg
push
push
mov
pop
aad
or
pop
cmp
sub
mov
jns
es
rol
mul
or
aam
and
outs
loope
mov
adc
cmc
and
mov
and
adc
out
outs
mov
movs
cmps
pop
pop
loop
outs
adc
cs
jg
(bad)
pop
jnp
xchg
(bad)
addr16
mov
fild
cmps
or
outs
repnz
mov
mov
pop
int3
popf
lods
arpl
mov
push
pusha
cmps
mov
fisttp
pop
jecxz
cmp
and
jl
dec
mov
out
jp
push
mov
movs
or
sub
jp
push
out
(bad)
xchg
sub
adc
xchg
fcmovb
mov
pop
enter
sub
les
xchg
push
pop
jo
movs
ins
xor
iret
pop
pushf
and
inc
inc
push
push
sbb
out
mov
adc
cmova
dec
sub
test
sub
sti
or
mov
jb
inc
lods
inc
or
les
movs
lea
sub
jle
ds
mov
sbb
xor
bound
pushf
test
add
xlat
in
or
xchg
rol
push
clc
into
cmp
loop
xor
push
push
aas
sbb
out
xchg
xor
jl
popa
icebp
aas
js
jmp
mov
(bad)
mov
xchg
and
out
dec
retf
inc
jl
dec
out
aad
jne
xchg
xor
fdivr
aad
lods
or
(bad)
ds
sbb
ret
xchg
test
addr16
test
aam
and
add
pop
hlt
add
enter
unpcklps
mov
sub
clc
daa
add
outs
jne
dec
sbb
dec
das
imul
pop
or
test
retf
push
cmp
lea
mov
push
retf
jmp
outs
jmp
(bad)
push
shr
mov
js
dec
sbb
xor
js
sub
push
jbe
jp
enter
(bad)
xor
in
pop
xor
retf
cmps
es
neg
sbb
cld
xor
pusha
repz
es
sbb
cwde
xor
pop
repnz
dec
pop
pop
mov
xchg
xor
pop
jg
adc
xor
(bad)
in
mov
xchg
xchg
std
or
popf
sub
loopne
pop
fisub
push
stos
fistp
xchg
cdq
cmp
inc
(bad)
push
ja
and
sbb
jg
fucom
sbb
setno
and
fstp
aaa
xchg
loopne
mov
std
cmps
lock
pop
mov
div
inc
sub
cmp
fist
mov
ret
add
jmp
hlt
ret
mov
cs
mov
or
retf
sbb
push
cwde
push
(bad)
push
inc
retf
jge
mov
add
jp
or
sub
jbe
aad
sub
sub
cmp
jo
sub
dec
pop
movs
mov
dec
fcmovnb
js
sahf
inc
imul
add
mov
das
sub
je
jp
jno
jns
add
cmp
cli
cmp
cli
pop
jl
int
jg
push
xor
sbb
jae
(bad)
out
push
rcl
xor
iret
jp
inc
cmps
ss
test
addps
aam
aad
inc
cmp
test
out
inc
enter
push
dec
push
data16
loope
xor
pop
fs
cmp
or
es
jge
adc
shl
add
(bad)
aam
mov
int
lea
push
jne
inc
mov
fs
fst
and
fcom
push
rol
sti
push
in
jb
adc
cmp
sahf
pusha
and
data16
ret
xchg
mov
push
push
retf
sub
dec
call
leave
ins
mov
fsubr
scas
cmc
cwde
cwde
fwait
xor
sub
mov
pop
add
addr16
push
scas
push
cmc
inc
ret
add
mov
xchg
cdq
int3
and
dec
ror
popf
fs
mov
mov
shl
gs
outs
shl
test
lock
and
and
fist
mov
adc
xor
mov
popa
pop
ins
cmps
ror
icebp
push
push
mov
out
sbb
pop
adc
mov
ret
pop
int3
adc
(bad)
or
jo
popa
add
fist
jle
dec
imul
out
clc
jl
inc
push
loop
lea
out
xchg
or
pop
jecxz
stos
adc
or
(bad)
mov
jle
pusha
addr16
pop
sbb
mov
imul
mov
jns
sub
sbb
pop
(bad)
test
adc
jle
pop
test
out
mov
scas
das
cli
bnd
lock
mov
cmp
jne
and
adc
jnp
test
adc
mov
clc
mov
aam
push
ss
adc
lock
pop
(bad)
aad
pop
dec
imul
mov
dec
or
add
cld
std
add
cli
jecxz
adc
or
out
jnp
push
push
sub
xrelease
pop
xor
dec
xchg
out
out
dec
loope
dec
rol
out
test
add
lock
fwait
add
inc
dec
jb
jbe
test
aaa
jge
fisubr
mov
dec
push
fst
ret
lahf
test
push
inc
lea
xchg
sbb
or
adc
add
fs
dec
mov
jg
jae
test
jg
ret
push
push
pop
jo
stc
sbb
movs
mov
mov
rcr
mov
xchg
xchg
inc
cmp
dec
mov
adc
fdivr
inc
cmp
and
(bad)
dec
adc
icebp
sbb
pop
mov
cmp
pop
sub
inc
mov
out
ja
jmp
pop
pop
push
sti
fsubr
cs
and
xchg
in
out
add
ror
ds
and
mov
stos
mov
je
push
ins
xchg
push
bound
cdq
push
movs
push
and
xor
fcmovb
fs
pop
mov
ds
and
(bad)
mov
(bad)
icebp
sbb
sbb
int
or
jb
sub
pop
ins
fucomip
aas
cmp
xchg
xor
movs
lahf
sbb
add
jns
mov
cmps
shl
mov
(bad)
mov
push
sub
inc
pop
push
xlat
sub
daa
lods
dec
movs
hlt
enter
loopne
loope
inc
es
aam
or
ret
cmp
dec
fwait
mov
and
cli
jno
dec
in
daa
cwde
loop
jecxz
test
call
call
loopne
in
neg
xchg
push
mov
xor
std
mov
leave
pop
inc
sub
xor
das
mov
xchg
mov
push
ins
shl
ins
mov
jno
inc
arpl
adc
xor
pop
mov
int
push
cmp
movs
out
cmc
sbb
xchg
jno
test
imul
jnp
pop
mov
sbb
nop
loope
outs
xlat
cmp
inc
fadd
mov
idiv
push
(bad)
aad
cwde
xchg
repz
inc
scas
outs
arpl
stos
jmp
clc
dec
fstp
add
call
mov
retf
inc
pop
cmp
adc
xchg
iret
mov
or
sbb
mov
in
(bad)
(bad)
dec
jnp
scas
push
das
inc
xchg
imul
fs
call
data16
adc
adc
iret
xchg
test
add
imul
adc
loope
push
repnz
mov
inc
or
or
dec
int
mov
ja
inc
sub
movs
mov
add
lock
ins
retf
retf
call
mov
push
sub
mov
mov
stc
or
scas
rcr
js
std
out
cli
adc
scas
arpl
ja
dec
and
jecxz
mov
mov
fnstcw
inc
dec
mov
cmps
add
jle
scas
adc
fnsave
gs
arpl
jp
xchg
bound
jl
push
or
outs
xor
mul
jnp
mov
sbb
iret
gs
(bad)
hlt
xchg
push
push
mov
dec
mov
jmp
adc
ja
add
cs
pop
cmp
xor
fist
sbb
and
shl
jp
adc
retf
cmp
lea
pusha
cmp
data16
inc
outs
pop
xor
aaa
mov
(bad)
xlat
shl
ins
jne
stc
pop
push
clc
imul
fcomp
or
in
stos
test
jecxz
mov
jp
inc
pop
fdivr
jnp
pop
int
or
bound
pop
fcomp
in
push
jmp
cmc
sub
or
mov
or
push
or
sbb
pop
cwde
lahf
mov
sub
fld
xor
inc
outs
add
sbb
out
ins
add
sub
mov
jl
(bad)
imul
inc
pop
aas
fucomi
mov
js
lods
dec
jae
cmp
shl
adc
push
jbe
inc
sbb
in
inc
and
add
test
mov
cmp
cmp
std
jno
xor
sub
mov
adc
mov
nop
push
mov
ror
in
(bad)
jae
mov
inc
mov
(bad)
in
push
mov
inc
daa
mov
jno
enter
das
sar
xor
add
or
icebp
mov
xor
and
lods
cmp
lahf
fstp
sbb
call
pop
jg
push
dec
cld
lock
lods
js
movs
push
arpl
pop
lds
repnz
lods
ss
cmp
mov
sbb
sbb
leave
push
int3
mov
mov
mov
xor
retf
fst
or
in
dec
lock
jecxz
sub
cmp
pop
push
int3
fdiv
adc
jg
retw
in
add
mov
xchg
sbb
mov
add
icebp
imul
sbb
fist
xor
cmp
jne
movs
or
cmp
ins
fsubr
sbb
sub
xor
cli
jmp
rcr
mov
loope
pop
(bad)
in
ss
sub
nop
dec
rcr
mov
mov
mov
push
pop
pusha
mov
jl
add
jmp
ror
inc
lock
outs
stos
sbb
inc
add
jp
push
aas
(bad)
rcr
sbb
imul
scas
aad
ds
mov
cmc
sbb
ror
out
mov
push
jnp
js
ds
jp
push
sbb
xlat
jno
xchg
jb
ret
dec
in
jmp
xchg
pop
xchg
ret
mov
ror
xchg
ins
xlat
cdq
mov
xor
imul
cmp
ds
adc
(bad)
aaa
jno
sbb
in
retf
outs
mov
imul
inc
adc
stc
pop
pop
cmps
or
or
xchg
arpl
push
hlt
jbe
mov
pop
adc
cmp
sbb
dec
aas
lock
jle
and
xor
mov
sub
pusha
stos
push
(bad)
hlt
arpl
xlat
xor
ret
pop
mov
ss
out
jb
inc
xchg
jmp
sar
dec
enter
je
xchg
bound
(bad)
and
xor
push
iret
dec
in
ss
sub
mov
jb
and
xor
xchg
push
cmp
scas
(bad)
stc
push
mov
(bad)
push
pop
ja
in
pusha
(bad)
jmp
mov
mov
fwait
idiv
mov
aas
add
(bad)
stos
inc
xchg
or
adc
sbb
mov
jo
sub
or
(bad)
icebp
ins
hlt
rol
cmp
mov
push
add
add
push
in
xor
adc
(bad)
jbe
int
and
aam
or
cmp
es
daa
or
mov
push
xchg
push
dec
and
movs
in
fwait
ror
retf
cli
xor
sub
lock
mov
das
xchg
call
sub
dec
mov
cmp
ds
mov
sub
pop
ror
xchg
push
sbb
stc
inc
mov
popf
popa
mov
out
xor
push
fimul
fs
and
popf
mov
(bad)
xor
fmul
mov
out
dec
push
ret
mov
retf
cwde
or
rcr
pop
xchg
inc
scas
daa
inc
outs
sbb
std
rol
cld
adc
nop
test
(bad)
xchg
ins
scas
scas
lods
shl
cdq
mov
fidivr
call
jmp
movs
push
jmp
pop
mov
dec
retf
(bad)
fild
xor
sbb
dec
lahf
mov
inc
sub
pop
pop
aas
jge
and
repz
arpl
sahf
add
sbb
sub
pop
rcr
sub
shl
dec
(bad)
xor
cmp
cmp
mov
stos
adc
cmps
loope
jg
xor
ja
add
sub
fwait
adc
inc
icebp
dec
ins
icebp
adc
sbb
movs
je
(bad)
xchg
(bad)
or
(bad)
lock
dec
add
or
jne
and
cmp
(bad)
sub
cld
cmp
cmp
xchg
jmp
dec
bound
mov
not
pop
cmp
fcmovne
stc
mov
cmps
mov
shl
imul
xor
arpl
cmp
dec
dec
xor
jp
(bad)
jns
add
mov
lock
test
pop
fincstp
std
push
jns
ret
sbb
cwde
mov
pop
fst
scas
and
pop
cmp
mov
rcl
xchg
mov
inc
test
ins
sub
add
cmp
or
aam
cmps
jnp
pop
push
jge
push
pusha
ja
fidiv
sub
pop
scas
jmp
xor
popa
mov
in
xchg
mov
dec
gs
test
ins
push
sub
addr16
dec
shl
adc
push
mov
je
retf
and
dec
cmps
aam
push
cmp
xchg
jg
shl
xchg
movs
out
inc
inc
xor
xchg
sub
dec
jno
sbb
fbstp
sub
test
xor
sbb
ins
(bad)
xor
pop
add
not
fld
ins
lods
cmp
loop
data16
jmp
and
sahf
jl
(bad)
scas
jmp
addr16
xor
inc
cmps
test
mov
stos
mov
mov
fsubr
retf
(bad)
xchg
pop
xor
sub
adc
xchg
pushf
retf
in
inc
xor
jns
add
jns
outs
and
(bad)
inc
xchg
iret
stos
nop
push
mov
or
test
mov
out
mov
xor
cld
clc
mov
inc
scas
push
xor
sub
xor
inc
mov
xor
xor
sub
sbb
mov
cmp
or
add
loope
imul
inc
and
neg
fistp
cmp
(bad)
jg
pusha
xor
inc
xor
xchg
mov
xlat
and
pushaw
sub
and
test
pop
or
xchg
call
cmp
scas
(bad)
lea
and
mov
stos
int3
ror
dec
pushf
adc
movs
inc
ret
dec
out
lea
test
jo
jb
xor
int3
dec
pop
int
xchg
inc
inc
sub
sahf
in
sub
cmp
test
jne
int3
add
add
jge
jl
mov
and
jno
jle
dec
loope
(bad)
mov
sub
xchg
push
xor
push
ret
sti
call
mov
pop
(bad)
mov
adc
repnz
sub
mov
test
add
lods
dec
std
loope
stos
sbb
ja
cwde
mov
enter
jo
(bad)
pop
or
imul
or
movs
sbb
dec
inc
mov
je
cs
movs
dec
jmp
shl
fdiv
lock
pop
cmps
add
rcr
enter
jle
out
inc
pop
int3
sub
mov
aam
loop
test
movs
int3
or
popf
mov
aas
dec
rol
xor
xchg
jnp
movs
(bad)
pop
sub
sub
dec
push
jmp
(bad)
cmp
mov
test
xor
stos
add
xchg
xchg
jge
mov
loop
sti
fldcw
jns
out
pop
xor
xor
rol
mov
push
(bad)
imul
add
fsubr
inc
enter
push
lods
shl
fucomi
adc
pop
and
adc
or
daa
in
inc
int3
sahf
rol
or
ins
mov
mov
mov
jp
adc
into
xchg
or
(bad)
enter
js
mov
push
xchg
es
xchg
sub
hlt
add
mov
out
pop
mov
call
sub
test
scas
loope
lds
mov
fcom
aam
mov
adc
iret
loope
into
sar
out
stos
mov
or
jge
imul
inc
(bad)
cmc
push
imul
inc
test
fidivr
sbb
mov
jne
dec
and
dec
pandn
gs
push
rcr
stos
jg
mov
adc
jp
ror
or
xor
mov
mov
sbb
xor
smsw
fist
push
aad
mov
ds
test
ins
mov
sbb
test
mov
fidiv
dec
mov
daa
mov
pop
(bad)
call
sub
jecxz
imul
lods
test
cmc
mov
pop
cmp
mov
inc
stos
push
jle
xor
pop
sbb
sub
mov
retf
scas
aas
into
pushf
mov
in
lahf
pop
ins
or
mov
std
push
jg
(bad)
cli
push
(bad)
xchg
dec
cwde
inc
pop
cmp
add
mov
pop
pop
sub
inc
add
dec
and
xchg
jbe
or
push
adc
in
mov
dec
xchg
lahf
out
mov
sub
or
std
shl
cli
ins
xchg
fidivr
mov
les
dec
cmp
es
jnp
or
mov
out
and
xlat
inc
mov
mov
push
(bad)
jae
(bad)
cmps
cli
pop
and
fimul
imul
(bad)
addr16
cli
pop
leave
int3
iret
xchg
mov
and
cdq
addr16
lods
adc
ins
lahf
repnz
jecxz
mov
xchg
popf
pop
(bad)
retf
retf
repz
push
sbb
dec
adc
inc
mov
imul
xor
retf
cmp
mov
arpl
xchg
retf
idiv
dec
mov
add
sti
add
repz
ret
iret
fsub
cmp
jo
mov
inc
jmp
rcr
scas
xchg
fisubr
nop
inc
cld
jge
pop
movs
js
xchg
add
pop
add
ror
clc
jb
test
retf
scas
loope
xlat
lds
pop
ins
push
pop
mov
mov
mov
mov
ds
lahf
add
das
mov
sbb
jle
adc
mov
xchg
repz
js
and
cmps
loope
and
xchg
mov
fadd
add
(bad)
mov
inc
pop
push
retf
in
pop
cmp
rol
(bad)
xor
dec
gs
(bad)
fdivr
or
test
sti
add
cmps
and
lahf
imul
or
hlt
xor
mov
iret
lods
push
cdq
out
arpl
hlt
or
aam
int
fwait
push
push
mov
mov
cld
push
jp
sar
sbb
pop
inc
sub
ds
xchg
or
inc
imul
loopne
add
pushf
cmp
pop
mov
adc
cld
or
lahf
ja
cmps
xchg
xchg
stos
mov
mov
mov
and
imul
imul
lods
cmp
enter
(bad)
aam
cld
adc
(bad)
stos
inc
daa
lea
cs
shl
or
and
push
mov
sub
pusha
ins
shl
les
stos
cmp
adc
cmp
test
mov
sub
imul
mov
cwde
xor
mov
push
cmps
adc
cmps
jmp
sub
outs
jg
adc
ret
and
es
push
dec
push
sar
in
dec
jns
retf
cmp
loope
adc
dec
pusha
mov
das
mov
xor
popa
addr16
test
bound
out
out
xchg
lods
ins
out
push
rol
xchg
and
or
out
scas
sbb
sbb
in
int3
in
jbe
fs
push
adc
pop
mov
(bad)
pop
out
mov
xor
movs
xchg
int
xchg
sbb
outs
add
retf
sub
push
fild
imul
xchg
out
or
add
push
mov
lock
jle
stc
icebp
sbb
inc
in
fdivr
cmp
cmp
sti
mov
popa
imul
mov
pushf
in
div
loop
pop
mov
dec
shl
out
mov
mov
hlt
hlt
ja
in
outs
adc
(bad)
push
and
repnz
nop
ins
dec
popf
std
xor
imul
mov
sbb
xchg
(bad)
or
shl
sub
cmc
repnz
cld
or
adc
not
jb
idiv
mov
arpl
mov
mov
dec
xchg
pop
and
daa
jnp
xchg
loopne
mul
enter
out
mul
inc
rcl
scas
adc
mov
mov
imul
rol
lds
sahf
adc
xchg
outs
sbb
leave
leave
ins
movs
or
push
shl
adc
clc
sbb
and
xchg
jbe
ds
clc
out
icebp
cmp
xchg
ins
sbb
push
mov
imul
mov
mov
sbb
mov
fs
push
rcr
push
movs
mov
adc
jp
dec
or
int3
out
inc
ins
hlt
ja
mov
inc
inc
jne
or
stos
hlt
ret
mov
inc
lods
lahf
add
xor
aam
ss
or
sbb
cmp
out
in
xor
leave
mov
in
inc
dec
into
cmps
imul
jns
mov
mov
cli
test
dec
cmp
xor
outs
push
lods
shr
cmp
mov
adc
aam
loope
outs
js
xchg
imul
adc
push
xor
mov
pop
push
mov
push
mov
and
adc
jp
fmul
mov
ins
(bad)
jecxz
aas
add
pop
cmp
dec
fidivr
ret
inc
push
addr16
push
sbb
or
mov
add
mov
in
dec
popf
into
out
rcr
sub
push
dec
(bad)
dec
call
xor
sahf
test
xchg
pop
pop
loop
dec
fcomip
sbb
fistp
inc
retf
test
xchg
adc
dec
lea
rol
dec
movs
xchg
das
add
jbe
repz
cmc
cmps
out
push
(bad)
mov
and
ins
mov
cld
cmp
inc
inc
mov
mov
inc
jo
fs
jne
shl
inc
pop
fsub
xor
cmp
xchg
ret
add
mov
shl
inc
xchg
test
dec
mov
(bad)
jmp
stos
or
mov
cmp
scas
mov
aas
outs
and
add
push
es
mov
push
jg
push
or
shl
jns
iret
fcom
icebp
(bad)
fadd
gs
and
cmc
xchg
fwait
inc
xlat
nop
xchg
pop
das
lods
inc
cld
imul
retf
lds
inc
shl
mov
and
ins
pop
int
sub
in
ret
inc
fadd
cmp
shl
shr
sbb
xor
sbb
pop
icebp
adc
mov
pop
ror
sbb
mov
xchg
loopne
movs
jo
(bad)
call
pop
loope
std
ret
push
inc
and
dec
push
sub
inc
das
sbb
popa
adc
ret
mov
pop
retf
in
stos
stos
out
out
retf
jmp
nop
xchg
cmp
sub
repz
dec
lock
adc
addr16
jg
out
daa
ins
je
popf
xchg
fistp
pop
jb
inc
add
out
sbb
fidiv
pop
inc
fnsave
cmp
add
pusha
je
cdq
dec
call
fsub
sub
popf
mov
cmps
and
sub
cmc
pop
retf
inc
mov
outs
xchg
imul
leave
mov
loope
repz
fstp
ror
jb
adc
fld
cmp
sbb
xchg
popa
popa
pop
adc
mov
or
mov
cmp
push
adc
out
xchg
nop
js
mov
sbb
push
shl
aam
shl
and
fnstsw
pusha
mov
push
into
push
out
in
in
mov
retf
out
loop
int
pop
mov
arpl
inc
lods
in
stos
jge
cmc
sub
into
fmulp
and
mov
xchg
pushf
mov
mov
xchg
push
mov
sbb
(bad)
cmp
lea
into
and
enter
push
pop
xchg
(bad)
out
icebp
mov
xlat
retf
push
dec
cmp
(bad)
jb
xchg
test
lahf
jle
xchg
jmp
arpl
cwde
es
add
push
outs
in
pop
fdivr
push
mov
cmp
dec
push
daa
test
xchg
cmp
bound
call
not
ins
sub
shr
xchg
out
leave
sar
movs
lods
sub
stos
loopne
rcr
pop
xchg
sub
jne
jnp
jg
sbb
adc
add
push
cmc
mov
sbb
fist
pop
ss
dec
or
inc
mov
in
mov
push
inc
adc
addr16
jne
and
fst
mov
pop
cmovnp
int3
fst
mov
cli
cmp
imul
sbb
retf
mov
or
adc
xchg
mov
fimul
mov
pop
scas
sub
retf
pop
push
sub
(bad)
call
sbb
imul
mov
aas
jmp
mov
lahf
xor
in
clc
jmp
jge
sbb
mov
es
and
repz
mov
inc
sahf
dec
int3
sub
mov
test
aad
shl
xlat
popf
scas
dec
sahf
pushf
cld
jg
mov
inc
popfw
jecxz
mov
clc
pop
pushf
push
mov
and
les
mov
lahf
sbb
lds
or
add
outs
sub
push
cli
clc
out
leave
(bad)
stc
inc
cmp
fsubr
pop
inc
mov
(bad)
rcr
cmp
(bad)
sbb
sub
std
jo
fld
into
jbe
and
add
loope
and
repnz
or
mov
scas
fsub
fisubr
mov
imul
les
es
cwde
adc
cld
jae
daa
push
fbstp
and
ret
jo
add
test
aas
fidiv
inc
push
(bad)
into
mov
ds
xchg
movq
pop
sub
sahf
mov
xchg
mov
enter
fadd
fdiv
jae
adc
fldl2t
ja
xchg
mov
imul
hlt
pop
mov
mov
mov
mov
cmp
imul
jmp
push
dec
dec
mov
ins
das
cmp
and
mov
push
sbb
rol
push
pop
inc
std
ja
cmps
jle
sbb
jp
mov
mov
and
pop
add
add
sbb
cld
xchg
pushf
rol
pop
and
dec
or
adc
sub
pop
loop
aam
push
clc
fild
push
out
mov
jge
test
pop
or
dec
add
lahf
sub
or
lods
mov
jecxz
(bad)
pop
push
dec
inc
shr
jno
pop
jge
test
and
lds
mov
and
pop
mov
pop
fst
push
push
add
mov
fstp
jp
jno
jge
mov
xlat
adc
fistp
(bad)
lock
in
cmp
popf
(bad)
stc
jae
ja
xchg
pop
ins
rol
pop
ins
mov
repnz
loopne
dec
pop
mov
je
cld
retf
xor
jb
push
inc
scas
iret
cmp
into
adc
je
cmps
cwde
shl
mov
test
(bad)
(bad)
or
in
cwde
cmp
inc
push
add
adc
sbb
lahf
rcr
fstp
dec
push
loope
adc
daa
xchg
mov
out
or
(bad)
dec
xchg
int
sar
cmp
jl
rcl
js
mov
cmp
in
jb
test
not
pop
sbb
sbb
dec
(bad)
pushw
xor
fscale
push
fs
gs
inc
cld
test
stos
bound
push
xchg
xor
jae
std
jno
daa
add
test
mov
adc
inc
inc
add
inc
jg
icebp
lar
mov
mov
mov
dec
mov
push
into
rcr
(bad)
sbb
lahf
enter
sub
or
std
mov
test
pop
in
mov
xor
adc
jp
jne
lods
scas
jb
or
cwde
call
imul
adc
cmp
mov
test
test
mov
out
cmp
sbb
cmp
pop
xor
fild
sub
sbb
adc
sub
and
sbb
ja
pop
jl
pop
jmp
retf
xor
ds
pop
push
push
mov
xor
xor
push
sahf
das
out
inc
enter
cdq
movs
xchg
jecxz
inc
xchg
xor
mov
sbb
add
imul
or
xchg
mov
sub
mov
fmul
or
(bad)
jmp
fucomi
and
cmps
stos
pushf
inc
dec
xor
or
(bad)
in
out
iret
imul
pop
xchg
(bad)
ja
push
(bad)
mov
in
xchg
in
lods
jnp
daa
xchg
adc
adc
gs
cmp
mov
push
sub
int3
bnd
into
repnz
sbb
pusha
dec
es
jb
xchg
mov
jno
pop
out
pop
push
pop
imul
jecxz
push
aaa
push
pop
or
sti
mov
ret
dec
xchg
mul
xchg
inc
mov
mov
mov
lds
lock
pop
mov
add
movs
std
mov
xchg
dec
xor
bound
daa
movs
fwait
mov
fwait
jo
in
pop
fmul
jl
(bad)
aad
rcl
cmp
mov
ins
xchg
add
and
mov
jo
and
adc
ss
ja
push
pusha
jge
shl
sub
repnz
cmp
push
lahf
not
lods
test
pop
cmps
mov
xchg
dec
push
jecxz
cmp
loope
pop
xchg
pop
pop
sbb
daa
inc
aam
pop
jmp
pop
aaa
xlat
sbb
inc
neg
adc
mov
out
and
test
sar
xor
outs
pop
mov
fadd
cwde
dec
or
sti
and
lea
push
rcr
push
xor
adc
imul
adc
sbb
std
cmp
clc
mov
and
cmp
lahf
jp
mov
jnp
gs
or
mov
mov
mov
push
add
sub
push
pop
vmovntdq
add
aam
or
mov
mov
or
mov
pop
in
ficomp
cmp
cmp
xor
loope
xor
and
data16
les
cmp
xchg
loope
out
inc
mov
fist
and
pushf
jle
mov
xor
mov
add
ret
dec
sbb
sar
mov
adc
adc
test
jmp
dec
fadd
add
add
outs
sub
dec
cmc
lds
movs
pop
mov
cmp
mov
in
(bad)
imul
les
and
adc
daa
iret
leave
cmp
pop
add
inc
jnp
jmp
ret
outs
loope
push
sub
aam
hlt
or
ds
and
cmps
cmp
sub
pop
push
lods
jl
cmp
fucomip
inc
cli
lock
pop
mov
jbe
add
test
call
cmp
adc
popf
pusha
inc
rol
fisttp
cmp
mov
mov
dec
lds
adc
pand
cmps
je
aas
lahf
xor
int3
and
(bad)
retf
shl
shr
sar
and
xchg
push
mov
call
push
mov
pop
add
cmp
dec
clc
mov
mov
fdiv
xchg
inc
scas
addr16
outs
lds
fxch
movs
mov
pop
xchg
xor
pop
(bad)
mov
jle
popa
test
das
mov
jmp
adc
jecxz
bound
int3
mov
inc
stc
cmps
lds
nop
mov
fsubr
push
xor
xchg
out
pop
and
xchg
test
add
xchg
push
(bad)
mov
cmps
mov
aam
aad
int3
jno
jnp
shr
movs
mov
pop
mov
in
retf
fild
and
jge
loopne
sub
pop
mov
shl
in
repnz
pop
inc
jp
rcr
aam
stc
pop
cmp
pop
test
movs
jbe
icebp
cmp
jmp
jp
and
test
adc
aad
pop
iret
ss
xor
add
sbb
and
fist
nop
dec
scas
xchg
test
js
inc
je
jnp
pop
and
rol
pop
jmp
lea
cdq
inc
jge
pusha
push
out
fwait
test
cmc
mov
jnp
lods
loope
fbld
mov
push
adc
jle
retf
stos
sub
pop
cwde
jl
fs
shl
dec
sub
or
sbb
retf
push
mov
inc
pop
xchg
cmp
push
xchg
js
loope
aad
or
(bad)
hlt
lods
int
cmc
dec
std
into
pop
push
aam
pusha
repnz
cmp
in
mov
push
jne
pop
mov
sahf
fnsave
dec
dec
(bad)
fld
ds
xchg
loopne
pop
add
stos
popf
jo
int
jmp
cmps
lahf
sub
pusha
or
test
xchg
mov
xlat
test
push
movs
scas
push
pop
nop
xchg
mov
push
sbb
pop
jns
or
dec
sbb
jns
add
mov
mov
push
or
pop
adc
dec
cmp
dec
dec
dec
ss
mov
mov
mov
sbb
jmp
sub
pop
jne
jecxz
ror
add
pop
aam
xchg
test
ja
pop
inc
and
push
mov
movs
int
push
xchg
or
test
shl
test
xchg
mov
js
xor
sbb
or
(bad)
fldcw
push
inc
es
sbb
xchg
mov
mov
stc
repnz
or
inc
cmp
shl
push
jecxz
jmp
nop
lahf
dec
xchg
inc
jo
dec
or
mov
dec
sahf
dec
fcmovb
mov
rcr
push
test
stc
and
std
dec
sub
sbb
xor
out
int3
sub
xchg
push
xchg
vmwrite
mov
in
mov
inc
mov
test
xor
jns
retf
mov
call
lds
push
jl
add
add
jp
dec
xchg
mov
movs
repz
fs
push
jl
xchg
dec
push
mov
inc
in
sub
adc
jg
xchg
data16
ror
sbb
hlt
push
mov
cmp
dec
ins
aam
arpl
shl
jae
jns
mov
xor
test
sbb
mov
adc
push
cmp
fwait
mov
add
fld
jne
mov
add
xchg
add
pop
mov
dec
xor
jmp
or
out
cmp
mov
push
push
test
mov
xchg
int
lea
gs
fld
pop
and
jnp
(bad)
stc
adc
(bad)
xor
(bad)
fld
xor
sbb
jl
(bad)
cdq
lock
pushf
jo
ret
mov
dec
and
lea
mov
movs
fstp
push
shr
and
inc
add
adc
(bad)
gs
jae
hlt
and
cmps
test
and
loopne
lods
xchg
sub
dec
pop
mov
adc
inc
fld
out
inc
ins
push
push
test
pop
mov
push
xchg
adc
call
xchg
loope
and
lods
dec
fmul
push
addr16
retf
ficom
jnp
(bad)
ja
dec
(bad)
fst
movs
mov
aad
lock
jbe
cmps
mov
xchg
sbb
jmp
call
mov
cmp
je
mov
push
add
cmc
sbb
mov
push
loope
mov
inc
sub
xor
clc
inc
sbb
out
jg
call
push
inc
sahf
cmpxchg
xchg
js
cmps
cli
fsub
mov
xor
sbb
and
adc
sub
mov
sbb
dec
sar
rsqrtps
mul
std
push
out
mov
das
mov
jecxz
and
push
xchg
fdiv
rol
icebp
mov
dec
pop
inc
int
enter
ins
pop
cmp
xchg
push
cmp
scas
sbb
jb
dec
mov
in
into
ds
jo
jmp
adc
outs
mov
and
push
push
ja
add
lock
dec
mov
dec
in
sbb
pop
push
jmp
mov
xor
stos
or
pop
jbe
loop
repz
or
movs
mov
mov
mov
pop
cmp
pop
xchg
mov
out
add
mov
std
ss
pop
pop
(bad)
mov
aam
jp
and
mov
push
add
xlat
pop
fdecstp
lds
fdiv
fadd
mov
mov
shl
xchg
call
scas
push
push
xor
jns
jne
ret
enter
mov
imul
ret
shr
push
adc
movs
repz
xlat
shl
int
rcl
aaa
sub
outs
pop
pushw
test
sub
or
cmp
dec
sbb
sub
push
sub
jp
and
jl
scas
fstp
sar
add
or
in
inc
or
xor
xor
mov
fiadd
pop
fs
iret
jae
(bad)
mov
stos
jae
pushf
pop
repnz
cmp
fptan
and
and
(bad)
mov
in
pop
ds
daa
in
cmps
and
ror
mov
push
mov
sub
int3
call
inc
ds
add
in
cmp
stc
hlt
cmp
sub
add
push
fsub
jmp
pop
retf
add
retf
stc
dec
jo
dec
call
fdiv
sbb
pop
fmul
movs
push
rcr
arpl
in
inc
fistp
or
adc
fsub
mov
jb
shr
lods
popf
in
xchg
mov
enter
sbb
popa
push
jle
pushf
sti
fcom
cs
in
or
ja
adc
xchg
fs
scas
sub
push
xor
or
pop
mov
cmp
and
and
movs
inc
or
push
fcmovnb
(bad)
xlat
mov
mov
pop
push
popf
fwait
in
xor
cdq
xlat
jg
mov
jge
mov
xchg
test
xor
cmc
sub
test
outs
mov
stos
nop
loop
cdq
ret
fld
xlat
iret
es
jns
jo
test
xlat
mov
fisubr
or
daa
movs
clc
loope
(bad)
and
pop
push
push
xor
les
leave
dec
rol
mov
xor
push
pop
sbb
ret
xor
mov
int3
loopne
inc
push
sbb
shl
adc
mov
mov
jecxz
push
sub
add
sub
xchg
cli
(bad)
icebp
das
sub
add
push
mov
mov
cwde
or
jmp
enter
mov
cmp
mov
retf
dec
cmp
sub
or
mov
mov
scas
or
lea
xchg
push
les
and
sub
arpl
cmps
adc
and
jmp
lods
adc
std
xlat
cmp
mov
jle
fmul
adc
out
ins
adc
fcomp
cmps
sbb
and
push
mov
sub
sti
push
add
aad
int3
mov
inc
push
inc
fprem
add
fwait
rcr
movs
xor
fwait
imul
adc
gs
repz
call
push
mov
shr
add
jnp
lods
fs
xor
leave
mov
jo
fiadd
xlat
cmp
xlat
sub
cmp
mov
bound
pop
test
test
mov
test
xchg
xor
sub
jmp
dec
pop
pop
fs
jbe
xor
in
neg
in
lock
mov
popf
mov
sub
(bad)
clc
rcr
(bad)
out
int
js
in
lahf
repnz
xchg
and
xchg
jg
fwait
in
push
sbb
jno
in
add
xchg
sahf
adc
sub
or
cli
div
int3
adc
jle
cmp
adc
and
mov
pop
xor
xor
les
xchg
js
sub
mov
stc
cmp
retf
in
mov
xlat
retf
sbb
push
pop
aas
cwde
jb
dec
enter
dec
pusha
movs
test
or
sub
rcr
sub
loope
inc
xor
jne
adc
cmp
push
push
and
xchg
(bad)
sbb
fwait
arpl
dec
sbb
cmp
sbb
mov
pop
pop
jns
stc
add
sub
push
sub
popa
icebp
shr
or
(bad)
rcl
jae
jnp
inc
inc
std
dec
mov
push
fisubr
xchg
mov
push
dec
stos
pushf
xchg
sub
add
mov
pop
out
iret
xchg
push
dec
aam
jmp
retf
sub
in
cdq
add
mov
test
inc
es
jge
and
mov
pop
jecxz
mov
jo
(bad)
and
dec
and
push
push
inc
in
adc
out
popf
fiadd
cmps
out
repnz
xchg
leave
cmc
cdq
pop
mov
into
pop
pop
std
(bad)
(bad)
ror
mov
sbb
inc
xor
and
mov
sbb
fisttp
push
enter
cmp
or
movs
retf
shl
mov
pop
dec
dec
test
scas
sub
(bad)
out
jo
sub
add
xchg
xchg
adc
push
sbb
shl
sbb
dec
add
push
mov
mov
ret
repz
test
call
xor
arpl
out
adc
mov
and
sub
sbb
int
icebp
loope
loope
repnz
inc
je
sbb
lods
stos
loope
es
in
fs
pop
stos
xchg
or
sbb
loop
mov
sub
imul
xchg
or
pop
(bad)
gs
mov
(bad)
loop
xor
inc
shl
and
ret
xor
fnstsw
sti
(bad)
sub
ja
inc
mov
les
xchg
imul
lds
jp
(bad)
adc
push
push
stc
(bad)
fisub
pop
addr16
add
inc
and
fadd
sbb
adc
xchg
ret
cmp
inc
mov
mov
lea
mov
cmps
movs
aas
int3
rol
fldcw
lea
sbb
rol
pusha
mov
adc
jne
or
xor
inc
imul
fmul
xchg
dec
mov
cmps
xchg
push
in
retf
mov
fadd
inc
mov
mov
dec
js
add
add
mov
loope
mov
mov
ror
xchg
scas
leave
jp
lahf
xor
lock
pop
sbb
(bad)
and
sub
xor
rcl
repz
xchg
dec
mov
mov
xlat
and
aad
sub
jmp
mul
jae
adc
(bad)
das
push
jnp
adc
jb
pop
adc
test
mov
loop
mov
add
fbstp
jge
(bad)
(bad)
imul
jge
sub
pop
jae
sar
sbb
jp
mov
outs
jno
fdivr
loopne
lds
mov
jnp
ins
adc
js
and
and
jbe
cmp
ds
fcom
in
outs
ror
inc
pop
push
aas
jl
clc
xchg
cs
loopne
add
adc
cmp
mov
inc
jbe
(bad)
les
add
dec
push
inc
addr16
lds
mov
test
push
cmp
sti
mov
pusha
push
and
jp
int
push
dec
std
mov
adc
mov
sbb
jns
call
sar
test
and
out
in
call
sti
fist
clc
inc
inc
mov
pop
mov
(bad)
fnsave
jmp
aas
mov
rcr
xchg
xor
mov
push
add
push
into
mov
rcr
sbb
jle
ins
mov
not
and
lods
mov
je
call
inc
jo
push
inc
movs
jmp
push
push
movs
dec
aam
retf
test
jnp
or
push
(bad)
mov
mov
dec
mov
sub
inc
jge
xor
movs
xor
adc
push
out
out
sbb
push
sti
es
cdq
sub
mov
jp
mov
pop
rcl
rol
mov
(bad)
pop
mov
mov
jo
out
inc
mov
push
pop
retf
or
fild
xlat
int3
mov
or
ds
shr
(bad)
mov
(bad)
mov
sub
mov
xchg
scas
call
jge
sti
cmp
jno
pop
fcmovb
dec
mov
pop
mov
inc
lock
popf
push
xchg
lea
or
cdq
mov
imul
xchg
cmc
or
stos
fbstp
daa
ds
sub
int
cmc
popa
(bad)
repnz
sti
es
popf
push
inc
pop
dec
ins
sbb
ficom
cs
ja
add
inc
es
and
int
mov
and
dec
ins
and
or
in
inc
inc
sbb
push
popa
adc
mov
sti
pop
push
stc
popf
xchg
cdq
shr
out
add
adc
jae
jne
jg
ins
outs
pop
and
imul
xor
stos
push
ins
dec
and
movs
cmps
clc
aad
fsub
mov
cwde
and
sar
das
aam
scas
cmp
int
mov
inc
fs
sbb
xchg
(bad)
iret
fnstenv
xchg
out
inc
add
lahf
shr
stos
imul
mov
(bad)
fnsave
lea
fwait
mov
pusha
xchg
inc
mov
inc
je
fld
sub
test
add
pop
rcl
test
add
xchg
mov
outs
add
fldenv
cmp
push
(bad)
xor
inc
js
jmp
leave
fcmovne
sbb
imul
push
add
test
fidiv
mov
xchg
mov
icebp
into
(bad)
xlat
push
out
pop
aad
xchg
pop
push
sti
fs
loopne
dec
jne
std
jmp
gs
and
stc
mov
add
xchg
dec
pop
mov
int
pop
add
scas
addr16
dec
xor
sub
into
mov
push
idiv
call
movs
push
or
push
(bad)
sbb
out
mov
ror
int
outs
leave
fist
ret
inc
lods
mov
fsub
pop
(bad)
xor
and
lahf
mov
bound
cli
(bad)
frstor
pop
cmps
or
icebp
sbb
cmp
popf
(bad)
pop
push
xchg
cli
pop
addr16
cmp
inc
loope
and
hlt
rol
lahf
mov
hlt
push
mov
and
and
test
xlat
dec
aad
movsx
mov
cmps
imul
mov
dec
arpl
and
fdivp
jg
imul
or
arpl
pmaddwd
push
and
(bad)
nop
pop
ins
cmp
enter
popf
xor
call
xor
and
outs
push
fist
mov
hlt
std
imul
sbb
xchg
jbe
in
sbb
jnp
dec
mov
loopne
jle
cmps
mov
xchg
push
mov
mov
movs
adc
push
into
cmp
rol
fcom
xchg
(bad)
iret
std
sub
push
jmp
pop
repnz
push
les
push
jno
dec
sbb
mov
and
pop
xchg
xor
sub
lea
add
mov
push
cld
sbb
retf
aad
fimul
cdq
and
test
out
xchg
inc
dec
push
imul
xor
sub
add
fcom
leave
mov
adc
push
mov
in
gs
sbb
in
out
cmp
cmp
jl
pop
push
jle
test
lock
mov
mov
lods
idiv
xchg
int3
rcr
shl
cdq
ret
loopne
xchg
jl
test
add
sub
dec
out
and
bound
dec
pusha
xchg
pop
xlat
lahf
mov
dec
iret
mov
fbld
mov
and
outs
rcl
into
pop
addr16
scas
xor
neg
and
jns
or
ss
sahf
adc
daa
lods
mov
adc
sbb
fsub
pop
push
sti
mov
mov
adc
ja
shl
repnz
ret
pushf
xor
xor
(bad)
xchg
jne
shr
icebp
add
frstor
pop
aaa
pop
sti
sbb
ins
(bad)
stos
outs
pop
fs
mov
inc
push
repz
(bad)
or
scas
imul
xor
jg
inc
out
mov
jge
cli
les
aam
shr
gs
xor
rol
popf
nop
jns
ins
leave
xchg
in
lea
push
jae
(bad)
dec
into
out
(bad)
call
stc
xchg
pop
cs
ins
and
int3
call
sub
iret
sub
out
mov
xchg
je
cmps
(bad)
mov
mov
loopne
mov
pop
popf
fidiv
jg
jb
sbb
jne
out
cli
push
fnstsw
cdq
aam
push
mov
or
pop
mov
adc
(bad)
jmp
and
sbb
push
sub
inc
xor
test
gs
lods
pop
ret
scas
fld
mov
pop
iret
stc
daa
pop
fnsave
inc
dec
fsubp
mov
cld
nop
adc
sbb
or
ja
out
movs
cmp
pop
dec
sbb
cmp
call
cdq
cli
mov
jle
fistp
add
out
test
jb
in
fadd
loopne
dec
add
jmp
scas
xor
shl
cs
jnp
test
ins
xchg
repnz
inc
cmp
fst
adc
fsubp
ja
mov
mov
inc
and
mov
push
xchg
push
and
stos
pop
mov
jne
ror
jb
cmp
arpl
mov
pop
dec
pop
jo
ins
int3
push
pushf
cmp
into
in
xchg
adc
mov
int3
xor
jle
icebp
mov
jmp
cmp
std
lods
mov
(bad)
push
mov
loope
cmps
xchg
leave
xchg
mov
in
imul
ret
out
pop
jno
pop
pop
sub
aad
(bad)
mov
cli
dec
push
xlat
ret
ret
in
sbb
mov
inc
sub
pop
hlt
adc
sbb
adc
xor
add
dec
jge
out
or
xor
inc
xchg
sub
bound
mov
mov
scas
dec
pushf
dec
out
mov
sbb
jb
cs
adc
adc
xor
ins
(bad)
loope
mov
cli
inc
repnz
aad
repz
pusha
hlt
jno
jae
and
push
ret
cmc
dec
dec
push
ja
push
add
and
and
imul
je
scas
jg
or
rol
jmp
mov
std
jge
mov
cmp
inc
enter
and
mov
adc
push
jmp
and
pop
out
mov
loopne
sub
(bad)
xchg
test
or
lock
inc
cmp
scas
dec
mov
jb
cdq
mov
std
inc
ja
js
shl
(bad)
xchg
arpl
add
movs
lds
pop
or
shr
cmp
test
dec
dec
push
daa
inc
out
inc
adc
stc
inc
test
cmp
ja
bound
pop
popa
mov
hlt
adc
aas
pop
dec
fdiv
jg
call
cmps
out
rol
nop
sar
mov
js
jnp
sbb
shl
jmp
out
xor
adc
dec
and
hlt
jp
add
ins
pop
sbb
push
sub
mov
bound
fcomp
pop
out
lock
ja
xchg
sub
ins
stc
mov
mov
or
test
(bad)
push
and
rol
mov
cmp
(bad)
int
push
pop
ror
mov
sbb
fcmovu
repnz
sbb
mov
jmp
(bad)
fisubr
mov
push
add
sti
inc
lahf
push
pusha
lods
xor
sbb
jns
(bad)
retf
jno
push
xor
mov
dec
xor
or
jnp
test
and
les
jns
sbb
xor
cwde
cmc
cmp
ins
icebp
dec
xchg
xchg
mov
retf
imul
std
dec
sub
test
push
push
in
cmps
dec
and
jecxz
jmp
push
rcl
popa
icebp
adc
pop
cmc
jmp
jge
jnp
stos
popf
adc
enter
rcr
jnp
(bad)
jno
push
loopne
test
rol
data16
iret
and
xchg
push
ret
(bad)
in
sbb
dec
sub
(bad)
sar
pushf
idiv
inc
sbb
xor
fs
cmp
movs
sahf
push
cmp
sbb
lods
inc
mov
(bad)
call
xor
push
adc
jmp
int
jb
emms
es
imul
push
lea
jecxz
(bad)
ror
xchg
ss
rcr
clc
add
xor
retf
push
mov
pop
pop
call
dec
daa
mov
jge
and
lods
out
or
bound
call
cmp
pop
pop
or
call
popf
dec
or
lods
mov
mov
test
repnz
sub
retf
cmps
jae
dec
pop
in
dec
inc
sub
mov
and
test
xchg
pop
popf
jno
jo
jle
out
add
or
dec
test
sbb
push
sbb
or
stos
imul
mov
or
pop
lods
jb
inc
dec
cmp
cmps
sub
jae
jmp
sbb
xor
push
pop
(bad)
jo
jno
dec
push
sbb
cmp
in
popf
pop
nop
fst
add
in
(bad)
xchg
lods
lahf
sbb
xor
cmp
imul
int3
outs
cmp
je
xor
xor
and
aas
jne
loope
jb
aad
pop
adc
in
xchg
pop
or
pop
ret
inc
aam
in
xchg
push
jo
(bad)
ja
pop
shl
push
loope
popa
test
and
lods
icebp
add
into
jnp
loope
iret
jne
es
pop
leave
adc
enter
inc
sub
out
xor
jmp
mov
jbe
mov
fisubr
xchg
mov
xlat
mov
mov
mov
call
(bad)
and
jge
or
push
mov
mov
dec
test
jg
cmp
fild
sub
xor
mov
das
inc
pop
cmc
jmp
out
cmps
out
clc
or
dec
pop
es
jle
push
inc
fwait
test
xor
out
sbb
arpl
mov
cwde
mov
stos
retf
(bad)
in
imul
mov
fs
push
aad
xchg
mov
mov
mov
call
mov
pop
mov
retf
out
dec
mov
pop
xchg
inc
test
arpl
dec
mov
fstp
xor
push
jl
cbw
jle
mov
push
push
movntq
jecxz
jnp
xchg
std
imul
xor
mov
sub
movs
mov
sti
sub
jmp
sbb
test
sbb
fmul
xor
jns
(bad)
push
icebp
dec
jecxz
adc
icebp
into
or
cmp
or
scas
jl
loopne
xor
fisubr
sub
pop
ret
mul
lods
outs
in
outs
(bad)
retf
push
cmc
push
pop
lds
adc
sbb
dec
jge
into
ds
sub
call
cmc
or
cmp
cli
inc
cdq
and
or
jne
mov
and
stc
push
outs
loop
jae
bound
scas
sub
jae
or
cs
retf
sahf
push
out
mov
jnp
mov
inc
xchg
and
mov
stc
push
jbe
inc
dec
pop
or
or
sbb
push
in
out
int3
pop
inc
repz
push
or
xor
jmp
add
and
jp
std
mov
mov
mov
sub
add
cmp
outs
jmp
jmp
jg
pop
shl
fistp
mov
fs
adc
es
cmc
mov
cmps
lahf
push
push
push
lock
mov
ins
add
or
sbb
mov
mov
js
sub
call
out
les
ja
les
jno
adc
push
inc
in
in
jg
hlt
cs
sub
fwait
adc
mov
addr16
fidiv
jmp
xlat
or
mov
shr
int
push
add
pop
or
test
mov
or
mov
sub
push
pop
aaa
arpl
stos
or
mov
cs
and
in
jo
adc
or
clc
sub
int
lds
out
aam
jns
sub
(bad)
and
ret
(bad)
mov
test
push
ds
lods
sti
sub
in
pop
ins
aaa
xor
sub
imul
inc
ins
aad
or
mov
mov
dec
jp
mov
and
shl
fsubr
(bad)
into
retf
fimul
and
les
push
and
xchg
push
mov
(bad)
jns
dec
push
popa
sub
call
repnz
xchg
mov
movs
scas
push
or
mov
leave
cmp
rcl
jl
adc
push
cwde
sbb
ins
jmp
mov
mov
dec
jp
xor
jl
loope
push
out
jns
iret
cmp
(bad)
call
dec
inc
inc
mov
push
sub
retf
test
sbb
loope
repnz
aad
pop
push
test
imul
and
in
xor
sbb
sub
push
push
test
inc
daa
test
gs
mov
inc
inc
out
mov
pop
popa
dec
jp
xchg
or
cmp
xor
inc
pusha
pop
add
mov
stc
mov
inc
pop
scas
loope
out
stc
ja
jl
jl
fbld
je
ror
sub
aam
push
(bad)
jb
pop
jae
movs
les
sbb
adc
adc
pop
mov
mov
aas
jb
sar
retf
push
fwait
js
aaa
dec
mov
inc
and
fwait
rcl
sbb
push
jp
mov
in
xchg
mov
or
movs
jecxz
mov
ins
imul
xchg
and
sub
mov
xchg
xor
retf
jp
je
mov
mov
mov
rdtsc
fiadd
cmp
stc
mov
xchg
data16
(bad)
jne
jg
inc
aam
scas
mov
scas
xchg
mov
or
movs
add
test
xchg
dec
test
xor
je
ss
dec
call
inc
stos
add
mov
add
xlat
lods
xor
jne
xchg
cmps
push
(bad)
adc
addr16
or
mov
xor
mov
pop
xor
shl
(bad)
sbb
(bad)
jne
dec
(bad)
jl
pop
dec
das
push
in
mov
sub
out
mov
and
daa
(bad)
pushf
lods
cmps
nop
cwde
(bad)
xor
xchg
inc
sbb
call
or
int3
fs
cmp
xor
mov
xor
ins
pop
out
mov
xchg
fucom
clc
jmp
push
push
lods
cmp
mov
jb
mov
xor
xchg
in
imul
mov
jmp
retf
jae
and
test
shl
out
das
fwait
hlt
push
scas
pop
nop
fmulp
sub
inc
lods
inc
mov
push
ror
sbb
inc
xor
test
clc
retf
and
cmp
loopne
xor
loop
mov
js
jbe
jg
push
call
jne
iret
jnp
cdq
ret
push
push
imul
js
pop
fdivrp
int3
jnp
sbb
sub
stos
test
xchg
enter
test
stos
sub
mov
iret
pop
dec
out
dec
scas
fsubr
xchg
lods
cmp
stc
jmp
pop
(bad)
shr
pusha
std
xchg
or
fimul
int3
cmovb
repnz
and
pop
repnz
or
push
repz
sbb
mov
mov
xor
sub
lea
jge
(bad)
out
dec
mov
enter
std
mov
mov
fcomp
push
cmp
and
cmp
xchg
fdivp
nop
mov
xchg
and
xor
sbb
inc
dec
mov
xchg
xlat
(bad)
(bad)
fistp
std
in
jle
lods
pop
dec
ja
test
jo
mov
or
inc
jp
adc
jle
push
push
mov
bound
pop
or
sub
popa
and
sub
push
sti
mov
aad
jge
add
int3
sub
jecxz
lods
pushf
add
popa
push
xor
pop
in
loope
adc
test
out
xor
rol
imul
jno
sbb
adc
(bad)
push
loopne
loope
fld
pop
fisubr
in
jbe
jle
iret
xor
movs
fild
(bad)
ja
push
fistp
mov
pop
cmp
sbb
icebp
sub
xor
mov
out
xchg
ins
dec
and
clc
mov
sbb
add
sbb
push
cmps
pop
std
sub
jo
(bad)
jno
imul
cmp
fist
bound
in
jno
jb
mov
pop
out
test
dec
mov
or
mov
scas
in
push
jl
xchg
loop
fisub
add
mov
and
mov
xor
out
push
push
adc
and
mov
ds
or
bound
mov
sbb
aaa
movs
jbe
cld
push
or
inc
mov
imul
popa
outs
aad
out
dec
pop
sbb
mov
aaa
fwait
sbb
enter
jp
cli
or
leave
iret
out
push
mov
adc
retf
cmp
xor
ror
push
jbe
arpl
jle
lock
adc
cmps
cmp
mov
and
mov
mov
jb
add
mov
(bad)
call
jmp
pop
rcl
sahf
adc
mov
(bad)
mov
movs
es
es
repz
and
arpl
dec
dec
sub
push
dec
loopne
cmp
add
add
shl
push
mov
cmc
test
call
pop
mov
jbe
push
jecxz
dec
ret
es
int3
xor
inc
mov
dec
arpl
inc
mov
cmp
outs
pop
pop
out
mov
loope
imul
xchg
popa
xor
lds
out
nop
push
mov
ret
ins
xchg
push
mov
dec
cdq
add
movs
ds
jnp
pop
mov
sti
inc
jg
aam
mov
shl
pop
jmp
std
mov
fisub
test
dec
inc
or
pop
or
cwde
push
mov
xchg
mov
push
fadd
push
mov
or
xor
loop
mov
popa
inc
retf
call
or
fdivr
jg
mul
jnp
loopne
out
leave
xor
mov
mov
xor
cwde
cmc
rol
dec
xchg
ins
in
mov
sti
shl
shr
dec
and
setns
ja
push
xor
aam
loop
jmp
lahf
xchg
jmp
xor
or
std
fcomi
hlt
out
push
cs
jb
lods
popf
add
mov
aas
or
xchg
ins
gs
inc
jmp
and
pop
push
lock
int3
sub
lds
loope
test
fdivr
cmp
pop
pop
adc
dec
ja
dec
xchg
or
sbb
call
xchg
scas
or
imul
icebp
adc
jmp
into
and
sbb
lahf
(bad)
popa
cmp
outs
sub
cmp
and
lds
jns
lds
stos
(bad)
enter
js
stos
imul
pop
outs
sahf
cmp
xor
dec
fnsave
and
retf
xchg
(bad)
sub
and
fst
pop
test
and
push
cs
jne
je
sub
scas
leave
nop
loop
fmulp
(bad)
std
mov
imul
pop
int
push
sub
adc
movs
cmc
test
and
loopne
sub
lock
xchg
cmc
arpl
rol
(bad)
pusha
and
gs
pusha
jge
xchg
test
or
or
mov
adc
add
fs
or
lods
push
and
out
push
jb
mov
pop
jmp
cdq
out
imul
rcr
in
or
sbb
out
push
retf
and
jns
lahf
ret
xor
and
push
pop
movs
sub
jecxz
ins
xor
mov
hlt
pushf
cmp
loop
and
xor
scas
ficom
mov
jb
push
imul
dec
pop
inc
push
mov
sbb
and
jle
enter
ins
xor
das
or
pop
dec
and
or
pop
(bad)
sub
jo
movs
mov
mov
push
cmp
nop
clc
dec
data16
sub
add
cdq
jae
mov
pop
rcr
and
mov
mov
mov
xor
mov
out
and
cli
xor
dec
fld
sbb
jnp
xchg
cmps
push
jmp
cmp
xor
aas
ja
jnp
dec
sub
sub
mov
jp
add
jbe
cmp
lds
fnstsw
pusha
adc
mov
popa
pop
shr
cli
or
aaa
dec
bound
and
movs
cmps
sub
fisub
add
lahf
cdq
jae
mov
jmp
add
and
inc
popf
mov
mov
out
fnsave
pop
rsqrtps
(bad)
cmp
repz
enter
les
or
and
and
jecxz
stos
lods
mov
jp
adc
add
adc
cmp
mov
sub
cmp
xor
adc
sbb
cmp
pop
out
shl
js
nop
and
jmp
inc
inc
mov
sub
push
cs
(bad)
jae
std
ja
pop
push
dec
adc
xchg
push
imul
(bad)
out
sub
fsubp
popf
aad
mul
xor
cmp
enter
or
ret
(bad)
jecxz
mov
pop
es
imul
mov
fcmovnb
or
popa
aad
cmps
or
(bad)
arpl
jnp
jmp
xor
or
pop
fild
pop
push
mov
mov
inc
xlat
movs
cmp
dec
adc
in
sbb
sub
bound
out
inc
xchg
int3
xor
add
adc
mov
sti
pop
sub
xchg
lahf
ror
mov
mov
(bad)
loope
int
mov
clc
push
push
jb
mov
stos
neg
fstp
and
or
push
loope
or
pop
adc
pop
fnstenv
adc
stos
cmp
pushf
adc
les
mov
daa
fld
mov
dec
adc
sub
ja
add
and
jle
dec
add
outs
push
(bad)
fisttp
pop
aad
shl
and
lahf
sbb
rcr
add
les
xor
pop
imul
repz
stc
or
int
adc
push
enter
add
mov
jae
dec
repnz
mov
popa
jmp
mov
mov
sub
mov
pusha
test
mov
dec
inc
inc
push
mov
movs
jecxz
icebp
fs
mov
inc
mov
cmp
and
movs
jmp
push
xchg
cmp
xchg
test
test
pop
mov
add
fs
je
stos
std
mov
inc
dec
sub
sub
fsubr
icebp
sahf
push
and
enter
mov
push
xchg
mov
dec
adc
ret
xlat
cld
xor
ins
xchg
addr16
mov
sub
jns
movs
jmp
ins
(bad)
popf
cli
pop
xor
mov
cmp
(bad)
enter
jg
fistp
push
sub
add
xlat
outs
ja
das
xor
cwde
out
repnz
xchg
ds
repnz
mov
jb
add
sbb
mov
mov
push
push
mov
and
pop
ficomp
mov
loope
out
adc
mov
int3
mov
inc
sbb
lds
int3
sub
sahf
mov
fmul
push
in
daa
xchg
inc
push
push
mov
lea
push
fisubr
pop
lea
add
es
call
mov
jecxz
xor
mov
mov
jae
scas
test
hlt
pop
add
mov
scas
mov
push
sub
pusha
inc
jl
lock
aam
gs
xchg
adc
cwde
xor
add
or
ss
push
add
jg
lods
push
push
sbb
sbb
sbb
adc
pop
call
ret
lds
inc
int
int
hlt
sub
adc
xchg
std
lods
push
adc
ss
mov
pop
cmps
adc
pop
aas
dec
retf
pusha
iret
addr16
adc
pop
sub
inc
je
mov
xchg
sbb
mov
sbb
pop
iret
hlt
imul
das
repz
test
or
fcmovne
ins
pop
out
inc
sahf
mov
jne
(bad)
mov
(bad)
into
das
fsubr
lock
mov
js
pop
or
pusha
sbb
pop
push
in
aas
shr
mov
sbb
(bad)
sar
sub
cwde
sbb
inc
scas
movs
popf
sbb
jp
in
fisttp
(bad)
imul
cmp
xchg
cmps
or
and
xchg
cmp
pop
cmp
push
inc
and
dec
mov
add
lods
int3
loop
pop
adc
mov
movs
sahf
or
inc
xchg
sub
scas
cmp
mov
xchg
test
call
add
inc
test
bound
call
rcr
in
sub
call
and
(bad)
or
ss
dec
jno
or
mov
pop
xlat
or
and
jmp
test
mov
xchg
mov
adc
hlt
mov
inc
mov
pusha
pop
retf
aam
mov
daa
xor
push
and
sub
sub
les
mov
add
ret
in
jae
xchg
cdq
mov
test
(bad)
inc
cmps
push
add
mov
mov
das
mov
xchg
js
imul
loopne
and
cmp
shl
(bad)
outs
and
sub
sbb
je
movs
cmc
js
dec
cmc
cmp
sti
dec
call
push
pop
xchg
jge
mov
stos
lods
mov
movs
mov
xchg
xor
je
adc
pop
xor
sbb
sub
es
retf
jp
mov
fucomip
ror
aad
daa
jmp
popf
add
bound
push
out
xchg
xchg
pop
test
jp
mov
push
repz
imul
dec
out
(bad)
push
mov
dec
addr16
scas
adc
mov
mov
rcl
xchg
jmp
aaa
xchg
dec
cmc
sub
sub
(bad)
test
pusha
sub
inc
movs
xchg
sar
push
int3
clts
or
pusha
mov
test
adc
xchg
add
jmp
fmul
cmp
adc
retf
inc
push
pusha
cmp
sub
test
call
std
outs
pop
cld
add
cwde
mov
mov
ret
imul
js
jmp
fistp
std
pop
das
xor
rcr
mov
push
push
cmps
pop
outs
adc
(bad)
out
and
sbb
and
(bad)
shr
mov
ud0
ret
das
xor
adc
xchg
push
inc
push
mov
sbb
in
mov
or
mov
je
mov
das
fmulp
inc
mov
cmp
mov
inc
or
and
cmc
(bad)
sbb
jmp
dec
adc
out
mov
pop
add
rol
in
sub
popa
cwde
clc
and
hlt
adc
jo
jmp
das
xlat
mov
aas
xchg
mov
push
xor
rcr
and
xchg
ja
shr
dec
add
jecxz
jnp
(bad)
fnstcw
dec
add
mov
cli
bound
mov
mov
mov
jmp
imul
movs
jp
push
retf
sub
and
fisttp
enter
cmps
(bad)
add
mov
sub
adc
js
(bad)
pushf
retf
sbb
ficom
out
ficom
xor
mov
fdiv
jae
out
sub
pop
repz
push
jge
push
outs
push
xchg
adc
jbe
lods
xor
xchg
mov
jmp
add
call
cmp
inc
retf
add
xor
fcom
jo
jo
dec
mov
push
loopne
add
jmp
pop
fyl2x
shl
mov
adc
sahf
test
jmp
mov
cmp
cmps
jnp
shl
lock
xor
mov
scas
pop
xchg
push
adc
iret
lds
mov
xor
cdq
into
xor
das
je
test
xchg
adc
inc
js
xchg
icebp
fs
(bad)
xchg
fistp
xchg
sti
inc
adc
inc
xchg
sub
add
xor
and
jle
cmp
mov
jbe
xchg
retf
loope
out
rcl
imul
adc
aaa
cdq
sbb
enter
jmp
jmp
fimul
scas
arpl
inc
cld
pop
mov
dec
pop
int3
(bad)
popa
out
or
push
sti
pop
cmps
xchg
cmps
cmc
int3
movs
aad
lock
dec
push
jbe
out
sbb
dec
dec
ficom
xor
add
cmp
call
clc
mov
leave
fnstcw
push
(bad)
xor
(bad)
hlt
iret
icebp
(bad)
sti
dec
xchg
xor
mov
ins
rol
adc
mov
sub
pushf
fucomi
jle
mov
std
leave
sar
ret
pop
into
retf
mov
push
add
fdivr
stos
push
movs
rol
mov
xchg
sub
ins
(bad)
dec
inc
xchg
jbe
std
xor
inc
outs
fs
pop
push
add
out
push
pop
ret
mov
js
popf
movs
fisub
outs
pop
aam
cmps
imul
cs
jne
pop
fs
mov
push
add
xchg
(bad)
or
pop
sbb
(bad)
ret
push
and
inc
push
pop
adc
ins
jb
pop
nop
ja
dec
dec
sbb
inc
stc
mov
movs
push
xlat
mov
mov
or
std
dec
or
bsf
in
fdiv
push
mov
into
and
pop
xor
ror
clc
mov
cmc
cwde
jle
in
shl
push
leave
movs
mov
lock
mov
and
imul
popf
sbb
push
sbb
jl
movs
inc
xchg
inc
or
mov
movs
inc
sbb
int
sub
retf
lahf
inc
gs
push
push
ror
dec
push
aas
shl
add
jbe
inc
ret
mov
sub
mov
pop
int3
in
mov
xor
ins
sbb
out
lds
inc
stc
inc
mov
xor
xchg
test
mov
push
pop
sbb
xchg
adc
or
xor
jp
mov
(bad)
mov
aaa
ds
fisttp
stos
ins
addr16
cli
jg
or
xchg
ins
rol
fcomi
add
mov
data16
in
mov
pushf
and
inc
icebp
push
add
xchg
imul
(bad)
sub
pop
xchg
and
aaa
loopne
xor
add
and
js
pop
mov
jno
inc
sti
iret
mov
xchg
pop
inc
cwde
aaa
std
xchg
in
push
xor
je
fs
push
movs
sti
sar
rcr
div
xchg
mov
and
lahf
or
enter
jb
leave
ret
cwde
jl
sub
jl
mov
push
jb
xchg
xor
and
pop
ins
cmps
push
sub
adc
dec
sbb
pop
clc
in
lods
ja
popf
cwde
push
pop
sbb
jae
test
pusha
sbb
(bad)
aad
fucomp
lods
xor
cmp
mov
push
rol
in
or
stos
out
xor
push
mov
push
or
or
sbb
clc
pop
sub
mov
rcr
jp
inc
push
push
inc
les
cmp
jnp
jl
push
pop
es
mov
mov
in
fs
sti
jns
mov
aad
push
push
aam
lods
ror
dec
inc
out
adc
sbb
or
mov
or
movs
sub
xlat
sar
call
das
icebp
fdivr
inc
sbb
dec
inc
inc
cmp
mov
xchg
loop
stos
(bad)
add
sbb
mov
aad
fstp
and
mov
and
(bad)
mov
or
imul
fwait
xor
(bad)
test
dec
sahf
push
shr
cli
sbb
and
mov
loope
enter
mov
in
inc
inc
stos
jmp
xor
rcl
test
cmp
sub
lds
xchg
int3
aaa
push
les
or
jae
pop
add
mov
and
sub
or
sbb
xchg
dec
push
inc
push
mov
adc
(bad)
sbb
in
pop
inc
lahf
and
push
pushf
fwait
jno
retf
mov
gs
jae
es
jmp
mov
call
retf
cld
sbb
xchg
scas
sub
test
(bad)
sbb
add
mov
inc
dec
or
jmp
ret
sbb
mov
push
cs
or
sub
jno
push
mov
test
shl
pop
addr16
imul
lds
fidivr
retf
xchg
mov
adc
inc
pop
popa
sti
push
jo
iret
stos
in
cli
cwde
ss
and
cmp
fnstcw
ja
xor
mov
ins
(bad)
popf
jbe
fwait
add
cdq
mov
inc
jnp
test
dec
cwde
sbb
xchg
adc
ja
inc
xor
jo
imul
gs
jp
dec
cmp
aam
and
aad
cmp
out
mov
cmp
ror
pop
shl
sbb
mov
scas
sbb
je
in
jp
mov
cmps
pop
pop
es
stos
rcr
jmp
addr16
xchg
mov
dec
adc
and
das
mov
into
cmp
inc
sub
movs
pop
push
or
adc
mov
int3
jmp
fistp
xchg
pop
jmp
add
in
nop
sar
pop
sub
lods
rcr
jmp
in
sub
pop
push
cwde
ins
mov
cdq
pop
(bad)
out
mov
pop
mov
xor
mov
fisttp
retf
fbstp
call
xor
inc
push
adc
cmp
pop
idiv
arpl
and
mov
mov
inc
data16
sub
mov
sub
lods
jns
dec
cmps
dec
cmps
test
fstp
cli
retf
cmp
das
push
out
stos
mov
push
inc
(bad)
mov
and
jg
fdiv
or
or
frstor
sub
movs
ins
fimul
dec
repnz
jae
or
pop
outs
popa
mov
and
pop
mov
dec
adc
(bad)
add
sub
out
push
push
leave
les
sub
jl
pop
jg
aam
cs
(bad)
mov
(bad)
fbstp
ss
(bad)
das
(bad)
or
js
adc
sbb
inc
jl
lock
leave
inc
in
mov
fwait
les
ret
jae
fimul
xlat
cld
fwait
pop
inc
add
(bad)
test
mov
add
fist
push
js
inc
(bad)
jp
sub
push
(bad)
fisttp
scas
in
cmps
mov
and
cmp
pop
or
fdivr
gs
xchg
bound
xchg
dec
mov
mov
adc
sti
push
repz
inc
dec
sbb
or
adc
inc
mov
lds
hlt
push
inc
data16
pop
xchg
retf
out
lock
mov
pop
push
loopne
jecxz
and
xlat
inc
enter
aaa
mov
(bad)
cli
xchg
jmp
rcr
pop
fstp
xor
cmp
(bad)
fisub
sbb
fs
cmp
and
cli
leave
cmps
mov
mov
mov
push
mov
push
cwde
fwait
shl
cmps
in
imul
jle
into
fidivr
rcl
scas
cmp
mov
ret
pop
pop
pinsrw
fbld
lds
xchg
or
push
adc
je
sbb
addr16
push
sti
mov
clc
lds
xchg
xchg
jo
xor
mov
outs
cmp
inc
xor
sbb
repnz
pop
add
imul
dec
jno
inc
leave
xchg
repnz
out
das
push
rcl
sti
imul
sbb
ins
sub
fld
or
mov
cmc
mov
cmp
or
and
call
jecxz
enter
pusha
xchg
in
add
mov
or
sub
jg
(bad)
pop
mov
mov
push
and
retf
in
jae
popa
jb
jbe
(bad)
mov
mov
scas
retf
aaa
jl
out
mov
add
adc
pop
pushw
outs
rcr
lods
das
rcl
push
nop
inc
in
push
xchg
cmps
loope
into
call
and
rol
in
sub
and
sbb
in
enter
push
sub
bndldx
mov
bound
sub
jno
jmp
dec
pop
cmp
in
int
out
lahf
clc
in
or
call
(bad)
aam
hlt
mov
sbb
pop
xchg
jmp
mov
mov
or
ja
ret
or
xchg
sbb
(bad)
sahf
inc
mov
imul
movs
pop
sbb
lods
inc
xor
adc
push
add
nop
jae
shr
mov
ror
rcl
and
or
cmp
in
addr16
add
push
lock
imul
dec
test
adc
jmp
add
mov
loope
mov
gs
and
fmul
mul
fst
jmp
add
pop
fmul
aam
sbb
jecxz
pop
ins
jnp
retf
mov
outs
(bad)
leave
mov
out
sbb
cs
out
mov
inc
xlat
xor
cli
mov
imul
js
inc
xor
js
test
pop
mov
sub
mov
adc
or
cs
nop
fsub
pop
iret
aaa
mov
popf
add
mov
fst
push
lahf
xor
mov
add
cmp
dec
shl
push
mov
cmps
inc
cwde
fnstcw
int
jp
cmp
out
fs
std
call
outs
lds
mov
imul
mov
or
sub
sbb
out
sub
(bad)
pop
(bad)
iret
into
imul
fcom
inc
in
aas
jne
inc
cmp
dec
mov
fs
and
cli
cmp
fucom
inc
adc
or
mov
rcr
mov
outs
pop
fcomp
add
fcomp
cdq
xchg
push
js
fucomi
movs
lock
mov
jge
xor
jbe
jge
mov
(bad)
iret
retf
hlt
mov
mov
mov
mov
pop
pop
and
sbb
adc
dec
sub
mov
cmp
pop
test
dec
jbe
dec
sub
nop
ins
adc
imul
arpl
aad
inc
data16
aam
aam
bndldx
cmp
ins
cmp
in
ss
lock
(bad)
cld
popf
sub
mov
test
push
mov
fist
fmul
lahf
retf
xchg
loop
pop
shr
(bad)
and
mov
xor
ret
mov
jmp
std
test
in
lock
ror
cmp
dec
and
xor
mov
lods
xor
inc
push
mov
lahf
sbb
pusha
call
fwait
sbb
push
cmp
dec
push
outs
loope
or
mov
push
and
outs
and
push
xlat
imul
jmp
sbb
sti
adc
cmc
or
cmp
mov
jno
lea
stc
push
add
mov
lea
mov
xlat
clc
ins
cmps
mov
out
addr16
pusha
xor
daa
pop
getsec
repz
mov
repnz
mov
push
fisub
inc
or
dec
ret
mov
sbb
stc
sbb
adc
or
inc
daa
movs
into
shr
mov
lea
loope
add
mov
mov
lods
jecxz
mov
add
pop
push
push
ss
sub
(bad)
std
stc
push
test
stos
mov
mov
aad
ja
movs
ins
inc
xchg
lea
jmp
ja
xchg
pusha
push
mov
jle
into
jle
mov
pushf
push
inc
and
mov
push
into
cdq
jmp
std
mov
sti
ror
inc
adc
mov
mov
(bad)
fs
push
mov
ret
je
frstor
popa
iret
and
adc
dec
fild
cmps
sbb
inc
ins
push
iret
fadd
mov
inc
ret
loope
xchg
mov
dec
daa
in
pop
inc
(bad)
cmp
jmp
loop
movs
inc
aas
fsubr
movs
mov
das
ins
jnp
(bad)
sub
stos
clc
adc
mov
jbe
push
sti
mov
or
cmps
cmp
dec
sahf
leave
es
ins
inc
outs
call
sbb
push
mov
xchg
or
sub
retf
aaa
inc
(bad)
push
mov
mov
int
inc
inc
sub
add
xchg
ins
pop
cmp
(bad)
scas
cwde
xor
xor
repnz
lds
out
pop
sub
inc
inc
pop
xchg
(bad)
push
mov
cmp
jb
imul
jg
(bad)
test
fild
mov
imul
call
sub
div
nop
sar
ficom
cmp
sahf
fidivr
cmp
cli
aam
mov
add
arpl
mov
adc
ins
in
jl
or
mov
int3
outs
into
shr
jecxz
add
xchg
pop
bound
xchg
mov
cwde
or
call
mov
popa
cmps
fdivr
and
xchg
mov
outs
cmps
or
inc
sbb
pop
das
sbb
pop
es
add
xor
xchg
xor
lods
sar
push
movs
cs
js
add
mov
jge
jno
or
pop
in
call
xor
mov
ins
das
test
jne
sbb
imul
popf
dec
pop
pop
and
cmps
das
ror
bound
cs
mov
ins
push
enter
lds
dec
dec
adc
ret
mov
fwait
xchg
fistp
mov
pavgw
mov
(bad)
mov
xor
push
dec
fidivr
test
pop
jmp
pop
pop
push
retf
nop
and
adc
ins
xor
mov
add
in
cld
call
loopne
stc
(bad)
sub
std
popa
mov
mov
popf
stos
mov
jg
mov
add
int3
jno
jecxz
inc
repnz
out
cmp
push
jo
inc
inc
pop
inc
push
ins
(bad)
mov
or
mov
scas
pop
jge
inc
int3
push
xchg
jp
sub
mov
push
push
push
pop
mov
adc
push
mov
lock
or
outs
or
dec
cwde
jl
jb
sar
movs
sbb
cs
adc
xchg
(bad)
shl
jle
daa
pop
and
loop
movs
adc
repnz
push
(bad)
fsubrp
in
sub
add
enter
mov
aaa
movntps
in
loope
sub
sub
inc
xor
sbb
mov
je
sbb
sbb
aad
push
mov
imul
ret
ret
dec
ins
and
mov
(bad)
mov
sti
and
sub
mov
bound
clc
sbb
neg
clc
inc
or
mov
xchg
imul
dec
stos
arpl
outs
stos
mov
sbb
sub
jbe
push
and
xor
push
pop
dec
in
daa
jae
das
jae
jnp
pop
xchg
ins
cmc
(bad)
icebp
fwait
ds
jge
xor
jmp
cs
ret
mov
movs
shl
adc
dec
cld
push
push
loopne
sbb
push
push
repz
mov
xchg
(bad)
std
and
sub
(bad)
(bad)
arpl
mov
push
mov
push
fld
shl
cmc
cli
inc
xor
or
es
sti
dec
fsubr
dec
push
or
adc
retf
push
mov
push
push
data16
xchg
inc
mov
cld
cmc
das
jge
sub
stos
push
cmps
jmp
cmps
lods
push
jmp
hlt
xor
push
or
dec
loop
adc
jge
cmp
cdq
aas
dec
(bad)
fisttp
xor
mov
or
inc
jmp
cdq
mov
mov
dec
mov
jb
mov
sbb
rcr
push
xor
idiv
ror
adc
mov
outs
inc
xor
dec
sub
aam
push
xor
pop
sti
sbb
and
inc
push
outs
mov
pushf
fisub
lahf
out
ror
idiv
fldcw
or
imul
enter
in
jo
pop
xor
xor
loope
ins
inc
xchg
add
into
push
test
pop
out
je
dec
dec
mov
cmps
call
in
js
xor
mov
xor
mov
std
es
mov
cwde
icebp
sub
inc
sbb
add
je
jmp
aas
sub
in
imul
xchg
ret
out
add
sbb
jecxz
dec
jae
dec
test
cmps
fs
call
cmovl
mov
lock
ins
add
mov
jle
cmp
cmp
outs
pushf
js
outs
fild
and
js
mov
int3
xchg
and
aaa
push
pop
mov
xchg
xchg
(bad)
push
jmp
fsub
repnz
lea
mov
loopne
xchg
or
mov
daa
enter
add
sahf
mov
cmp
jb
sub
call
in
mov
ret
and
mov
cmc
push
xchg
pop
popa
(bad)
std
jg
dec
sbb
fld
jae
es
adc
sub
dec
push
(bad)
cmps
dec
call
stos
sbb
dec
mul
jnp
aad
mov
add
adc
and
mov
inc
sub
and
test
js
loopne
out
mov
xor
jecxz
sub
jns
call
das
icebp
fisttp
retf
sbb
add
neg
or
fwait
repz
push
in
ja
ret
and
or
gs
fxch
mul
in
pop
jge
mov
(bad)
nop
js
or
xchg
xchg
pop
in
dec
retf
lds
push
mov
iret
cmp
pop
jne
jp
sub
dec
mov
(bad)
test
pop
(bad)
cmp
mov
or
jp
sbb
mov
jno
addr16
push
stos
adc
js
dec
sbb
ja
ffreep
das
rol
and
mov
cwde
xor
fidivr
jno
xlat
aad
idiv
mov
pusha
dec
mov
sub
or
inc
ror
mov
push
cs
or
cdq
movs
xlat
mov
jb
imul
push
add
dec
(bad)
(bad)
cmp
out
xor
mov
adc
cs
ret
jle
nop
xor
mov
jg
sbb
pop
mov
push
jb
rcr
sub
mov
cs
ins
xchg
mov
idiv
adc
xchg
xchg
xor
cmp
mov
out
cmc
push
les
call
mov
out
sbb
mov
jmp
call
lock
int
push
das
jge
shr
mov
jb
or
out
mov
inc
cmps
lods
imul
and
push
jle
mov
xor
dec
push
or
das
fsub
imul
jno
jnp
sbb
je
fcom
pop
xchg
out
nop
clc
cwde
lea
shr
ret
imul
inc
pusha
mov
aaa
cli
enter
(bad)
jb
or
pcmpgtw
hlt
dec
mov
sbb
pop
mov
jnp
shl
sahf
test
rcr
pop
scas
push
sbb
fstp
ret
shr
and
adc
mov
test
lea
icebp
mov
mov
push
mov
ins
pop
sbb
pop
jae
mov
shr
inc
push
push
or
cli
les
xchg
sbb
mov
dec
xor
mov
add
out
aaa
in
ds
fadd
dec
pop
jl
mov
push
mov
cmp
sahf
out
aas
or
xor
movs
or
(bad)
xchg
nop
lods
fs
push
mov
aad
imul
push
and
or
mov
push
sub
xchg
movs
sub
jns
sub
stos
outs
jb
mov
xchg
lahf
pop
jecxz
pextrw
adc
stc
jl
push
xchg
lds
xchg
add
rol
xchg
sbb
inc
inc
or
adc
lock
shl
dec
out
loop
pusha
lods
and
push
imul
sbb
xchg
shl
or
mov
clc
add
shr
repnz
cmp
in
xchg
cmp
and
ins
jg
inc
cli
stc
imul
pop
fisub
shr
cwde
jbe
nop
sub
mov
loope
inc
scas
(bad)
cld
(bad)
and
retf
pop
imul
adc
xor
push
adc
adc
test
cli
push
loop
jmp
xor
inc
test
jae
or
fld
iret
stos
imul
dec
push
or
in
mov
pop
xor
inc
fsubr
xor
loop
sahf
xchg
or
inc
sub
jecxz
stc
mov
mov
inc
and
cdq
mov
imul
sbb
cmps
add
xchg
outs
xor
sbb
mov
cmp
stos
test
ret
dec
(bad)
pop
loope
retw
aas
shl
mov
push
sub
jno
stos
inc
(bad)
xor
aaa
stc
or
xchg
out
inc
mov
shr
lahf
sub
ins
or
sub
jmp
jae
and
ss
pop
and
stos
add
xor
fs
mov
pop
mov
in
push
sahf
stc
add
adc
hlt
pop
sub
or
lds
sahf
out
stos
data16
ja
(bad)
neg
repz
stos
mov
not
sub
ss
lock
aas
add
jb
scas
pop
add
test
cld
es
dec
pop
icebp
(bad)
xor
mov
push
sbb
out
adc
sub
pop
sbb
add
push
in
push
ja
mov
push
add
xchg
adc
jmp
das
in
stos
or
cmp
scas
inc
leave
stc
aad
inc
dec
into
xor
shl
mov
sbb
loope
jae
fld
imul
pop
dec
xchg
inc
popa
sub
cmp
sub
mov
hlt
fwait
cwde
adc
xchg
fdivr
fs
sti
popa
mov
jecxz
mov
push
fcom
loope
shl
das
mov
pop
xchg
daa
jg
xchg
and
push
push
dec
cdq
pop
add
(bad)
pushf
inc
pop
inc
cs
int
inc
inc
pop
aad
cmp
movs
mov
cmp
out
pop
mov
jno
mov
fisubr
leave
sub
loope
int
jg
jb
sbb
jae
pop
cmp
out
cmp
push
ret
cmp
mov
jbe
mov
test
test
add
out
dec
cdq
push
shr
arpl
push
jecxz
cmp
data16
retf
pop
(bad)
mov
call
sub
pop
scas
imul
adc
aam
mov
cmp
or
adc
adc
(bad)
xor
(bad)
push
sub
jae
inc
sub
xor
loop
xchg
fnstcw
aas
sahf
shl
mov
xor
mov
xchg
pusha
xor
mov
cli
pop
jp
stc
loopne
das
and
lahf
lock
mov
cdq
push
xchg
popf
pop
xchg
cld
dec
push
dec
jge
repnz
das
(bad)
push
rcr
adc
call
mov
pop
imul
iret
cmps
mov
xchg
das
xchg
ds
sar
scas
add
jecxz
push
or
xor
movhps
aas
dec
adc
scas
mov
loopne
or
gs
and
xor
push
pushf
jne
adc
out
dec
dec
push
xor
sub
cmp
mov
xor
cmps
inc
in
retf
fsubp
dec
mov
stos
push
xchg
nop
pop
jbe
pop
(bad)
xchg
mov
sbb
fprem1
adc
test
or
jl
xor
jmp
and
movs
jbe
ret
popa
dec
jmp
pop
and
xchg
dec
lahf
cmc
cmp
cs
call
xchg
ds
mov
retf
(bad)
pusha
out
jno
mov
pushf
mov
shr
add
fdiv
adc
lods
mov
inc
leave
inc
mov
adc
fstp
fisttp
nop
ja
ret
(bad)
(bad)
add
or
and
or
pop
sar
cmc
fimul
xlat
mov
mov
dec
mov
mov
inc
add
fs
daa
cmp
jecxz
xchg
out
xchg
das
arpl
adc
jmp
inc
pop
retf
push
sub
stos
imul
out
fld
out
test
les
or
push
jo
xchg
gs
fistp
jne
mov
pop
lods
shl
das
out
sub
cmp
fsubr
(bad)
pop
inc
and
and
cmp
out
and
stos
pop
repz
mov
jo
push
ror
adc
and
adc
ror
icebp
repz
sub
jl
xchg
inc
or
mov
cwde
inc
jecxz
aam
shr
fs
jge
mov
pop
push
out
pop
test
cli
mov
add
push
in
sahf
(bad)
jmp
ret
or
sar
adc
mov
lods
lods
popf
rcl
xchg
xchg
test
mov
dec
adc
ror
and
xchg
mov
adc
pop
sbb
(bad)
cmps
repnz
dec
inc
mov
push
lock
mov
inc
test
dec
scas
or
js
(bad)
jl
outs
fnstenv
cld
aam
je
scas
(bad)
(bad)
ins
jmp
fld
dec
sub
repnz
lods
sub
xlat
outs
adc
inc
(bad)
add
sub
ins
shl
stos
vcvttpd2dq
jmp
dec
or
aad
sti
sbb
xchg
or
or
call
in
cmc
test
or
mov
iret
fmul
in
cmps
aad
mov
mov
inc
lods
and
jne
cmps
mov
lahf
add
shl
stos
pop
sub
xchg
lods
adc
int3
and
sub
fxtract
out
xchg
or
push
dec
addr16
and
dec
retf
and
retf
loopne
movs
imul
fs
out
and
mov
pop
cli
lds
nop
fnstsw
out
cmp
xchg
test
in
sbb
jns
lahf
xor
cmps
mov
sti
mov
adc
mov
aas
dec
xor
jns
jl
fwait
add
sub
mov
stc
lods
test
not
fdivr
mov
add
inc
cmp
gs
fsub
in
inc
dec
rcl
in
shl
(bad)
xchg
cmp
adc
in
mov
xor
xor
dec
enter
xchg
test
and
out
fidiv
mov
mov
mov
and
out
pusha
data16
shl
inc
push
dec
scas
cmps
inc
sub
leave
dec
scas
pop
or
mov
mov
inc
and
inc
sbb
aaa
jp
cmp
es
jns
mov
xchg
or
dec
add
xchg
cmp
lds
pop
std
call
mov
loop
sub
jns
mov
popa
xchg
clc
pop
push
pop
xchg
add
cmc
loope
jae
es
add
add
pop
imul
inc
repz
in
scas
js
add
sbb
cdq
adc
lea
jmp
arpl
enter
imul
jp
jmp
mov
pop
dec
cmps
lock
cmp
mov
enter
cs
stc
lods
or
jns
ret
inc
xor
cmps
leave
adc
neg
mov
xor
and
xchg
push
aas
cmps
addr16
scas
cmp
mov
daa
scas
sti
daa
inc
call
pop
mov
mov
or
leave
sbb
mov
cli
cmp
mov
movs
push
jmp
xchg
fwait
sbb
xor
test
stos
loop
fstp
adc
inc
ja
add
int3
lods
stos
pop
sti
test
in
inc
mov
or
test
sbb
cwde
jno
xchg
(bad)
cmp
inc
fwait
call
mov
sub
enter
dec
es
adc
or
outs
and
in
and
movs
fucomi
imul
test
sub
fidiv
sub
or
xor
mov
int3
inc
neg
pop
mov
mov
jecxz
nop
push
cmp
fld
jo
lds
pop
int
push
cld
push
dec
add
add
push
test
xor
xchg
push
imul
pop
lods
push
inc
in
aas
cmps
fadd
sbb
popf
into
scas
adc
add
in
mov
add
adc
lea
jae
cmp
test
test
add
lods
test
(bad)
call
out
mov
test
(bad)
jmp
push
xchg
adc
addr16
mov
mov
cwde
pop
loope
(bad)
xor
push
mov
in
dec
pop
repz
mov
jo
movs
mov
ret
out
(bad)
ds
mov
es
fucom
jb
lock
cmps
inc
xor
xchg
push
test
cdq
cmp
arpl
sub
das
mov
cdq
out
test
lea
(bad)
stos
xor
rcl
mov
scas
loopne
mov
jmp
shl
mov
ss
pop
push
imul
dec
cmp
xor
dec
mov
inc
xor
or
cli
cdq
adc
or
retf
call
std
neg
cmp
xor
aaa
fldcw
(bad)
cmovge
adc
adc
sbb
jl
fsubr
shr
mov
xchg
jno
jge
inc
dec
xor
inc
aam
pop
or
pusha
ret
jmp
inc
inc
(bad)
scas
xchg
fstp
xor
push
repz
mov
push
mov
mov
xchg
jb
jb
mov
and
in
jno
pop
xchg
inc
inc
stos
imul
pusha
aad
dec
in
movs
dec
outs
inc
or
pop
(bad)
jl
mov
inc
inc
dec
sub
movs
or
pop
pop
inc
jne
sub
dec
movs
inc
(bad)
push
sub
mov
push
dec
sbb
cmc
bsr
xchg
add
sahf
inc
fsub
repnz
fistp
mov
iret
arpl
cmp
mov
cmp
xchg
les
mov
(bad)
lods
dec
in
xchg
(bad)
lods
push
sbb
xchg
cmp
dec
stc
retf
enter
(bad)
jnp
loope
sbb
inc
gs
iret
inc
test
jmp
push
daa
lock
inc
(bad)
rcr
iret
ret
cmc
(bad)
rcl
push
ret
add
lds
aad
aad
push
mov
mov
mov
sbb
ja
jecxz
bswap
dec
jno
mov
rep
aad
test
xchg
popf
mov
daa
xchg
push
mov
sbb
adc
inc
retf
ror
xchg
pop
xor
pavgw
cmps
mov
std
js
mov
jle
push
add
mov
in
ret
out
cmp
and
xor
jge
rcr
mov
mov
jle
sahf
adc
and
mov
mov
mov
mov
add
ins
icebp
adc
mov
and
je
cmp
out
shl
xor
mov
push
loope
sti
clc
jmp
dec
cli
ss
xchg
pop
rol
mov
push
popf
pop
xchg
(bad)
xor
dec
pop
shl
mov
ds
mov
outs
add
pop
jecxz
inc
loopne
test
ja
xchg
(bad)
lock
or
push
sbb
out
call
cmp
ins
fsub
aam
sbb
lahf
xchg
outs
lods
mov
xor
sar
popa
aas
inc
sti
or
test
aas
scas
pop
pop
imul
test
inc
mov
jp
ret
xchg
ja
aam
(bad)
cwde
xchg
fimul
dec
sub
sub
bound
ret
mov
ficom
sti
mov
push
xchg
dec
push
sar
out
and
ins
test
mov
fiadd
scas
sbb
hlt
xchg
inc
mov
lods
ret
es
inc
and
and
mov
in
xchg
jmp
nop
adc
mov
imul
cld
and
and
push
xchg
push
dec
lea
fmul
inc
pop
jb
mov
cdq
sbb
jg
xchg
retf
fmul
aas
mov
pop
imul
les
mov
out
dec
xchg
or
lahf
in
rol
cld
dec
retf
enter
mov
push
scas
jge
mov
pushf
cs
jae
dec
outs
dec
and
pop
jle
push
aas
in
jns
cmp
(bad)
xlat
adc
mov
es
inc
sub
cmp
fs
test
push
sub
mov
leave
cmp
xor
xor
cmp
mov
inc
(bad)
divps
mov
bound
ja
(bad)
jge
and
mov
(bad)
ja
sar
sub
jle
repnz
test
jb
pop
pop
aam
mov
jns
rcr
outs
pop
sub
mov
shl
test
cwde
push
pop
fwait
push
mov
(bad)
out
bound
addr16
ins
xchg
dec
mov
dec
ret
out
aad
jae
mov
inc
popa
dec
mov
jl
sbb
push
icebp
add
int
ins
or
pop
fidiv
push
pop
stos
add
aaa
pop
arpl
dec
mov
xchg
xchg
jge
popa
adc
shl
js
jl
(bad)
jecxz
in
pop
xchg
pop
arpl
xchg
jecxz
push
push
push
scas
dec
sbb
jl
pop
mov
sbb
sub
ret
xchg
fisubr
stos
mov
outs
jno
sbb
or
jle
or
jns
retf
cmp
adc
inc
mov
shl
pop
xor
sti
mov
push
push
imul
or
xor
push
es
je
in
push
out
cmp
aas
push
fmul
jp
repz
stos
push
or
xor
sub
add
cmp
retf
mov
dec
push
mov
loopne
jg
fdivr
cdq
adc
jge
pop
scas
das
(bad)
mov
mov
mov
test
in
fadd
inc
mov
add
dec
je
int
stc
(bad)
push
add
bound
neg
bound
and
(bad)
xchg
fcomp
mov
loopne
movs
les
(bad)
xchg
inc
xor
aaa
xchg
add
call
inc
mov
or
pushf
outs
xchg
sahf
out
pop
repnz
mov
fwait
lock
sbb
loopne
dec
stc
fbstp
sahf
icebp
aas
jbe
and
retf
inc
icebp
push
pop
and
jecxz
pushf
mov
dec
or
cmp
out
lods
ds
mov
out
into
mov
retf
push
inc
ss
faddp
ins
and
push
in
pop
in
or
xchg
or
mov
adc
push
pop
dec
ret
outs
mov
aad
imul
leave
mov
or
mov
push
pop
inc
sub
inc
and
in
cld
pop
mov
mov
xor
ja
sub
mov
push
xor
mov
jp
(bad)
mov
dec
push
test
cmp
adc
inc
cmp
stos
inc
dec
push
neg
mov
aad
jle
in
out
mov
dec
dec
(bad)
gs
cmp
pop
xchg
mov
mov
ins
jo
mov
call
int
in
adc
ret
mov
jnp
push
jbe
cmp
jae
cmp
or
xchg
inc
add
sub
cmp
xor
in
repnz
repz
and
jo
sahf
jecxz
sti
xchg
and
push
cmps
test
mov
sbb
stos
enter
lea
push
or
pop
mov
and
cmp
scas
bound
jae
push
jmp
sbb
int3
outs
xor
call
inc
sahf
xchg
xchg
(bad)
jns
pop
inc
adc
cdq
xchg
mov
xor
cmp
clc
mov
outs
mov
pop
lahf
and
add
mov
and
rcl
sub
inc
movs
or
(bad)
outs
push
xchg
cmp
pop
push
mov
inc
sub
int3
sub
es
jne
lahf
jmp
push
inc
and
and
stos
enter
sbb
pop
stos
test
push
dec
fwait
dec
jo
arpl
sub
sub
int3
jl
ja
mov
mov
cmps
xchg
dec
jecxz
jo
gs
pop
push
mov
mov
inc
outs
out
push
out
mov
into
daa
sbb
add
sbb
aas
xchg
pop
out
inc
ret
pop
fwait
jecxz
or
arpl
ret
stos
add
in
pmuludq
movs
mov
into
cmp
aam
ret
push
cs
int3
sar
mov
jnp
icebp
(bad)
cmps
add
test
sti
add
mov
or
cmp
mov
xchg
call
test
mov
push
adc
push
cmc
lock
push
push
inc
mov
(bad)
leave
push
or
add
sahf
and
das
add
outs
cmp
mov
adc
cs
dec
imul
gs
pusha
push
data16
or
in
fs
mov
jg
jmp
inc
daa
push
popf
not
into
ss
push
sar
jb
lock
mov
cmc
out
das
add
ret
pop
xor
push
jb
pop
lods
jp
mov
xchg
or
lock
mov
cmc
sti
add
fs
cmp
gs
dec
pop
add
sbb
aaa
in
lods
test
dec
loop
xlat
movs
mov
lea
sub
stos
inc
sub
pop
lods
jo
ds
cld
push
jns
xchg
jp
ins
outs
sub
in
pushf
ins
les
pop
fstp
sbb
push
adc
inc
cmp
or
jmp
push
loope
pop
mov
cmps
and
out
lds
ja
outs
std
gs
movs
cli
add
sub
jle
cmc
cmps
dec
cmps
movs
sbb
shr
pop
or
xor
jbe
xchg
inc
pop
fidivr
inc
add
adc
pop
movs
and
mov
xor
inc
mov
cwde
mov
cmp
and
xchg
nop
ss
dec
shl
hlt
out
test
mov
jae
or
hlt
icebp
jmp
push
sbb
test
cmps
lds
mov
push
jne
mov
mov
aam
or
(bad)
jns
add
mov
add
ret
mov
sub
jb
repnz
xchg
in
adc
sbb
sbb
sbb
aas
sbb
jbe
adc
push
retf
test
and
cmp
icebp
xchg
inc
mov
xchg
cmp
cmp
mov
leave
out
mov
or
jae
mov
cmp
outs
jo
in
or
dec
cdq
popa
stos
cmc
pop
stos
push
out
pop
adc
std
adc
into
int3
out
dec
cmp
cmp
pusha
fwait
popf
ds
jb
jo
lahf
rcl
call
dec
(bad)
pop
push
outs
in
sub
retf
in
cld
imul
loopne
mov
push
push
push
inc
movs
out
pop
add
neg
push
or
or
xchg
xor
jle
pop
push
enter
jge
(bad)
and
arpl
cmps
xchg
push
or
hlt
jge
adc
pextrw
das
nop
mov
aaa
pop
ins
mov
mov
je
(bad)
cmp
jo
adc
xlat
jg
add
icebp
imul
ds
(bad)
jns
xchg
enter
outs
std
xlat
or
xor
fdivr
sar
jl
jno
ret
sti
mov
nop
and
mov
push
xlat
push
popa
stos
enter
pop
and
xor
xor
movs
stos
and
jae
cmp
ror
ja
fsubrp
out
jb
fisttp
mov
and
cwde
ja
mov
sbb
pop
add
jge
mov
cmc
rol
repz
cmps
sub
push
add
mov
and
mov
inc
shl
test
not
jg
mov
mov
cmp
into
push
adc
retf
mov
cdq
dec
xor
lods
xchg
pop
cli
stos
inc
rcr
out
jp
sbb
inc
out
aaa
les
retf
xor
lahf
xchg
enter
movs
jns
test
jmp
push
dec
xor
cwde
mov
push
in
sub
call
(bad)
mov
mov
iret
retf
imul
ja
mov
fld
add
xchg
pop
or
inc
inc
xchg
lods
push
cmp
mov
nop
and
jmp
fnsave
fisttp
into
std
sbb
mov
fstp
mov
or
es
jp
inc
es
loop
mov
mov
or
pusha
cmc
xchg
sbb
mov
mov
neg
push
sbb
jnp
push
mov
rol
aaa
stos
xchg
mov
pop
addr16
jecxz
fnsave
xchg
stos
lahf
sbb
dec
cmp
fldcw
std
popa
inc
dec
mov
lea
lods
xchg
mov
push
jae
inc
sahf
dec
in
xchg
fcmovne
(bad)
cmps
shr
mov
xor
inc
sahf
and
xlat
call
pop
sbb
inc
rcl
sbb
call
mov
xor
mov
jmp
jns
xchg
pop
push
or
lds
movs
mov
int
fwait
cmp
adc
into
(bad)
jle
movzx
mov
push
fimul
aaa
mov
inc
pop
fsubr
mov
dec
imul
push
xlat
lahf
mov
cmps
push
and
ja
xor
popa
jno
sbb
mov
jns
bound
retf
fidiv
jb
int
ins
ins
mov
shr
stos
pop
jmp
les
jb
sbb
or
or
add
je
add
loope
cld
xchg
(bad)
pop
mov
or
ud1
push
jl
imul
mov
jle
cdq
mov
pop
inc
inc
jmp
cmp
mov
xchg
sar
push
xchg
and
out
mov
test
fld
nop
sub
nop
sub
push
sbb
or
push
iret
test
push
popa
js
dec
iret
cs
pop
mov
jnp
arpl
shl
push
sub
push
scas
rcr
xchg
xor
cmp
retf
aaa
jnp
cli
pop
pop
and
mov
outs
dec
(bad)
not
fstp
les
and
dec
xor
fnstsw
xor
fsub
sti
es
in
inc
ror
int
jle
repz
jno
daa
out
inc
inc
lods
xchg
fisubr
xchg
out
fadd
cmp
ins
fild
mov
inc
movs
mov
xor
cmc
mov
lds
(bad)
dec
ja
ficomp
xor
dec
enter
mov
xchg
outs
pop
mov
mov
mov
or
dec
loop
mov
dec
dec
leave
mov
adc
scas
or
adc
out
ret
test
add
out
loopne
frstor
inc
add
(bad)
std
push
repz
xchg
cmps
pusha
sbb
sub
pushf
sub
movs
mov
sbb
pop
sbb
or
xor
jmp
call
ss
mov
push
add
sbb
ret
or
adc
add
add
ror
cdq
mov
in
xchg
aad
ss
mul
movs
movs
mov
call
retf
popa
mov
inc
in
inc
jae
jmp
scas
adc
mov
neg
jle
mov
mov
mov
sub
test
mov
fistp
pop
loop
jae
jle
push
mov
cmp
(bad)
ret
inc
or
jecxz
xchg
mov
sbb
sbb
sti
xchg
int3
ret
sub
pop
xchg
addr16
sbb
cmp
loopne
sub
jnp
cmp
fs
and
daa
cmp
or
loopne
inc
and
mov
ret
mov
dec
cmps
adc
push
repnz
mov
dec
enter
xchg
outs
loop
dec
sub
add
pop
sbb
pop
jmp
(bad)
aad
pop
lock
and
(bad)
int
or
pushf
xor
imul
aam
xchg
xchg
out
test
ret
ja
shr
xchg
mov
mov
pusha
fwait
into
adc
loopne
aaa
xor
mov
jp
pop
sub
xchg
dec
lea
push
std
mov
fcomp
sbb
or
nop
les
or
movs
repnz
dec
gs
in
out
test
test
mov
xchg
ja
jle
or
mov
ror
mov
fnstsw
test
les
ret
mov
sub
sar
cdq
lahf
xchg
rcr
aad
pop
pop
popf
es
xchg
pop
inc
int3
mov
cmp
and
out
mov
jmp
ja
cmps
ror
jge
adc
cmp
ds
cmps
adc
rol
xchg
stos
sbb
push
(bad)
sahf
or
loopne
xchg
call
mov
icebp
cmps
inc
cwde
sub
or
dec
ds
and
xchg
jle
inc
push
inc
mov
lods
in
bnd
in
pop
pushf
movs
shl
movs
and
fnstsw
inc
clc
(bad)
sbb
sub
mov
(bad)
(bad)
icebp
xchg
(bad)
ss
and
idiv
adc
jle
sbb
test
xchg
cli
xor
ret
mov
sbb
mov
lock
cld
add
xchg
xchg
push
mov
pop
xor
adc
or
movs
push
add
out
push
push
loope
dec
stc
aas
mov
out
jp
pushf
cmp
sbb
mov
cmp
pushf
push
neg
test
push
inc
adc
repnz
out
jne
xchg
sahf
pop
xor
fisttp
in
ret
jmp
aas
int3
cli
and
mov
pop
aam
pop
(bad)
stos
lahf
mov
push
dec
loope
adc
sar
jo
imul
retf
xchg
pop
jnp
out
inc
shr
adc
les
sbb
lahf
int3
loop
movs
sub
in
fnsave
inc
dec
(bad)
repz
imul
neg
int
adc
imul
jmp
in
mov
cmp
xchg
or
ret
pop
sbb
cmp
in
jmp
iret
or
jb
mov
dec
push
lahf
pop
retf
dec
mov
mov
sub
adc
and
xchg
in
aas
nop
mov
jle
cmp
sub
xor
ds
gs
mov
mov
jno
push
jno
sub
loope
inc
pop
and
xlat
push
call
add
and
pop
jnp
dec
stos
scas
psubb
mov
call
call
popf
cwde
pop
jl
inc
call
dec
push
ret
mov
cmp
ins
dec
gs
mov
cmp
mov
inc
loope
aam
mov
pop
popa
mov
and
popf
mov
cmp
xchg
aaa
cli
ins
retf
repnz
aam
lea
dec
icebp
mov
repnz
les
lods
and
ins
inc
outs
xor
push
xchg
(bad)
and
push
icebp
aas
cmps
inc
lods
jne
dec
lahf
xchg
stc
push
mov
push
cdq
cwde
or
sbb
mov
push
pop
int3
pusha
aas
sti
out
fmul
pop
shl
mov
xchg
pop
and
fnsetpm(287
js
imul
int
aam
int3
xor
cdq
inc
dec
mov
cwde
sub
sar
out
(bad)
mov
(bad)
xlat
mov
(bad)
fld
rcl
xchg
inc
jp
(bad)
inc
or
(bad)
movs
das
repnz
fbld
add
or
(bad)
xor
jg
xor
fld
mov
adc
jg
mov
adc
jno
imul
sbb
mov
push
scas
mov
cs
add
(bad)
out
std
xchg
fist
fstp
sti
add
call
test
mov
pop
pop
adc
jb
aam
jg
xchg
push
in
mov
lea
loop
mov
es
xor
das
out
jmp
push
cwde
cmps
iret
xlat
sbb
das
dec
mov
pop
lahf
fcmovne
es
enter
into
xor
test
fstp
mov
cmp
xchg
rcr
retf
mov
test
dec
mov
gs
jno
push
mov
xchg
cmp
fldl2t
iret
jno
xor
movs
(bad)
cli
outs
shl
add
mov
in
stos
arpl
std
inc
loop
lahf
imul
mov
sbb
bndldx
repz
inc
mov
pop
jne
loope
pop
movs
inc
xchg
or
add
inc
fwait
popf
fbstp
sar
shl
and
call
mov
repnz
jmp
xchg
ja
mov
cwde
addr16
(bad)
shl
cmp
fdiv
jo
aad
jo
adc
jmp
mov
mov
xor
movs
add
retf
add
movs
mov
sub
into
mov
mov
push
xchg
jno
movq
mov
add
mov
pop
jbe
lea
sar
push
mov
add
inc
nop
lods
lods
ss
add
dec
add
(bad)
or
stos
mov
sbb
mov
test
mov
xor
inc
leave
hlt
and
and
add
mov
lahf
daa
arpl
hlt
ss
push
mov
cmc
gs
sbb
stc
scas
shl
push
add
mov
jecxz
or
fcomip
dec
push
rcl
in
dec
mov
jmp
push
aaa
cdq
je
hlt
jg
pop
rcl
or
mov
xor
or
mov
and
ret
xchg
pusha
push
pusha
(bad)
(bad)
ss
nop
mov
or
sub
push
enter
mov
retf
jne
sbb
fist
push
pop
mov
xlat
or
mov
jge
dec
cmps
mov
mov
leave
xor
or
loope
in
and
fisttp
adc
jp
or
cli
jo
adc
test
fwait
movs
cmp
xor
mov
push
in
mov
fs
ins
inc
sahf
inc
pop
xlat
dec
idiv
mov
add
xchg
mov
les
mov
shl
call
cmp
push
lds
popf
(bad)
gs
icebp
lds
outs
jp
sub
push
cmp
in
lods
js
mov
mov
daa
cmp
lldt
movs
push
adc
out
and
cli
stc
jns
(bad)
dec
or
in
loop
jne
push
push
call
(bad)
ds
cs
sbb
outs
add
xchg
mov
loopne
fcmovb
mov
cmp
jb
xchg
lods
repz
cli
mov
std
cli
mov
test
xlat
cli
jmp
add
mov
mov
add
sbb
pop
mov
xchg
fisttp
cmps
inc
sti
ins
repz
add
call
sub
cwde
scas
push
sub
scas
stos
call
adc
repz
(bad)
pop
inc
jae
xor
dec
in
and
clc
sub
shr
movs
add
adc
aam
and
cmp
or
sub
inc
cmp
inc
adc
cld
and
push
in
dec
pop
cmp
cmp
jmp
mov
jae
jbe
cmp
jle
daa
ror
add
mov
aad
inc
adc
and
jecxz
ror
icebp
jmp
and
popa
ss
dec
xchg
inc
xchg
stos
pop
xor
scas
pop
movs
push
into
scas
dec
xor
arpl
call
ins
mov
jns
jmp
jnp
add
sub
inc
outs
inc
jmp
das
xchg
mov
push
pop
pop
icebp
sub
out
jp
inc
jnp
mov
pop
popf
test
cmp
adc
scas
cmp
in
(bad)
into
pop
movs
add
sub
push
(bad)
mov
dec
int3
pushf
jp
mov
cmp
dec
sbb
fld
call
pop
xor
scas
sub
rcr
jl
sbb
or
cwde
iret
nop
ret
test
xchg
ret
cld
or
nop
pop
inc
out
xchg
jle
(bad)
outs
pop
sbb
ret
sub
aam
mov
jl
xchg
or
(bad)
inc
(bad)
std
or
jno
(bad)
fnstcw
xchg
jmp
add
xor
xchg
fs
xor
cli
mov
xor
ror
mov
jle
retf
and
lock
push
bsr
dec
stos
imul
push
and
mov
push
or
vpcmpb
out
and
test
sbb
mov
jno
and
aaa
and
sub
outs
sub
mov
into
xlat
fld
jno
xchg
push
outs
jns
jp
(bad)
dec
xor
adc
js
mov
je
sbb
push
test
inc
loopne
add
push
xchg
es
not
sbb
(bad)
push
into
mov
call
(bad)
pop
lahf
add
inc
mov
xchg
jl
repnz
movs
inc
test
inc
ror
in
or
ins
and
stos
int3
arpl
pop
pop
int3
jmp
mov
in
das
dec
or
mov
(bad)
ja
cld
sub
inc
jp
fadd
jbe
cs
mov
popf
adc
dec
packssdw
je
lahf
sbb
out
mov
in
movs
xor
xor
(bad)
mov
fdiv
inc
movs
enter
ret
sub
xor
cmps
dec
in
cmp
sbb
in
or
adc
dec
test
fsubr
or
mov
sti
stc
lock
xchg
push
cmc
loop
or
sbb
call
mov
xchg
cmp
(bad)
(bad)
mov
dec
inc
outs
int
mov
push
iret
jb
fsubr
in
les
push
jne
gs
sbb
add
aaa
jmp
fsubr
in
arpl
sbb
stos
lock
test
sahf
push
adc
push
(bad)
les
adc
imul
pushf
outs
push
and
(bad)
cwde
movs
fcomp
das
push
xchg
mov
sub
imul
sub
sbb
js
rol
and
es
mov
cmp
or
arpl
xor
or
sub
jecxz
ss
stos
sahf
cmp
or
xor
ficom
das
js
mov
lock
cli
popa
pop
enter
dec
push
idiv
cmps
pop
pusha
pop
inc
pop
or
mov
test
mov
cmp
(bad)
loope
or
imul
push
and
sub
jg
or
mov
dec
jns
push
push
add
fsub
or
cmp
sbb
popf
sbb
jmp
mov
aas
push
repnz
ins
sbb
je
js
inc
xchg
xor
into
mov
bound
mov
pop
repnz
cmc
mov
sti
mov
gs
mov
xchg
mov
sub
fdivr
call
xchg
ret
or
pop
sbb
fcomp
pop
popa
arpl
lods
ds
mov
call
cmps
pop
pop
mov
jne
pop
loopne
movs
push
ficomp
lods
cmp
fld
(bad)
in
sbb
(bad)
jo
sub
into
mov
out
mov
scas
sbb
cs
addr16
mov
xor
xor
fidiv
xchg
and
rcr
mov
ds
in
out
test
dec
jmp
cmps
add
adc
mov
fs
mov
fst
push
push
xchg
sbb
push
arpl
mov
adc
sub
push
pop
xor
xchg
js
shl
lds
pop
xor
or
push
sub
pushf
jb
adc
shr
mov
lds
inc
idiv
push
push
loope
push
xor
jae
not
pop
ins
lods
xchg
and
adc
pop
xor
ror
pop
inc
cmp
scas
sbb
ffree
iret
loopne
mov
cmp
sti
adc
test
(bad)
fs
not
jl
(bad)
adc
xchg
loopne
outs
and
out
jns
mov
lds
fst
or
xchg
mov
fbstp
xor
shr
and
aas
xchg
mov
jecxz
fwait
or
mov
data16
pop
loopne
arpl
fstp
retf
imul
push
je
imul
jmp
enter
js
sbb
mov
mov
push
push
in
std
jno
rcl
jne
xor
sbb
mov
test
fisubr
mov
imul
movs
mov
push
loop
fsub
or
mov
sahf
dec
bound
sbb
push
(bad)
shr
adc
push
movs
mov
add
outs
and
push
stos
nop
inc
js
and
jns
mov
dec
movs
or
and
iret
sbb
or
jmp
adc
dec
xor
xlat
pop
or
sbb
sti
mov
rcl
das
cmp
mov
pop
sub
dec
xor
jl
enter
mov
jns
jo
jecxz
sbb
dec
shl
outs
rol
cld
sub
fcom
mov
movs
add
cld
sub
stos
rcr
and
mov
and
mov
and
dec
nop
inc
fldcw
mov
loopne
jo
add
xchg
push
test
adc
(bad)
xchg
sub
cmp
add
int
sahf
mov
fdiv
mov
and
or
cwde
imul
test
jbe
or
stos
data16
in
mov
and
sbb
out
outs
push
inc
jl
adc
pause
gs
jbe
adc
push
mov
addr16
mov
call
adc
test
push
leave
in
or
push
int3
aaa
mov
test
and
push
mov
imul
clc
popf
adc
outs
cdq
sub
cdq
call
push
jp
push
lahf
sub
ret
jo
lods
popf
cmps
std
push
(bad)
cmp
fild
or
inc
stos
sub
mov
repz
mov
push
adc
aam
sbb
pop
daa
adc
cmp
mov
sbb
rol
push
push
dec
inc
mov
sub
ins
mov
sub
dec
jbe
call
dec
cs
stos
pop
or
stc
xchg
es
sbb
sub
aam
push
inc
jne
adc
push
push
scas
jle
push
jo
mov
sbb
(bad)
movs
cld
push
pop
fwait
xor
adc
in
movs
sbb
dec
call
jno
daa
cmp
(bad)
dec
cs
aam
or
or
mov
inc
in
arpl
push
ret
add
jne
loop
adc
retf
in
sub
sbb
sub
cmp
xor
push
sbb
aam
mov
mov
popa
ss
stos
jp
cdq
adc
std
repz
xor
rcr
fidiv
(bad)
add
mov
rcl
xor
inc
paddsw
enter
mov
mov
push
pusha
mov
xlat
cs
mov
mov
movs
sub
cmp
mov
cwde
nop
ins
xor
addr16
mov
push
aas
sbb
jle
sub
add
xor
inc
repz
ss
aam
xor
out
jge
xor
sti
loop
imul
mov
jmp
jnp
test
sbb
jo
scas
xchg
test
adc
push
shr
pop
sub
hlt
xchg
lock
dec
int3
xchg
add
xchg
sbb
outs
mov
dec
ins
repz
dec
jmp
dec
push
cmp
jle
sub
lea
sub
xchg
add
test
icebp
shr
mov
xor
not
jle
pop
pop
inc
push
or
dec
fcomp
arpl
add
jns
pop
inc
loope
sbb
leave
push
jle
hlt
(bad)
hlt
iret
daa
mov
stos
das
sbb
adc
jmp
repz
sbb
in
push
or
xchg
in
mov
jb
or
popa
js
inc
out
sub
popf
mov
adc
xor
mov
mov
sbb
aas
sbb
sti
fdivr
adc
jmp
std
dec
leave
add
mov
push
mov
leave
or
xchg
push
adc
cwde
out
test
jne
jg
call
lahf
(bad)
popa
add
es
adc
ret
mov
jmp
(bad)
push
cli
loop
in
fiadd
push
fdivr
dec
or
ds
test
sub
jnp
jno
mov
in
mov
adc
fst
into
imul
pop
cs
fcomp
mov
xor
mov
not
cmp
lods
jmp
jb
out
out
push
dec
enter
mov
xchg
(bad)
jecxz
push
push
inc
jge
jbe
nop
xor
push
and
shl
outs
adc
call
sahf
sub
shr
push
pop
dec
jl
dec
jg
and
inc
sub
adc
and
and
jl
push
mov
repz
ja
or
and
pop
loope
cmps
mov
out
mov
inc
pop
mov
lock
jnp
push
aaa
and
daa
ds
loope
loop
add
vmaxpd
add
ja
movs
outs
inc
cwde
pop
xchg
outs
out
push
mov
pop
lock
xchg
retf
adc
add
ret
dec
mul
pop
mov
sbb
sub
loop
mov
adc
arpl
scas
imul
rcr
jg
hlt
psubw
in
mov
hlt
stos
dec
jnp
test
or
mov
mov
xchg
sahf
adc
(bad)
ror
loop
lock
data16
mov
add
push
push
test
inc
cmp
xchg
xor
pop
push
xchg
jo
imul
scas
cmp
inc
sbb
inc
mov
mov
dec
pop
or
stc
iret
out
pop
xchg
repz
dec
imul
push
jns
or
inc
jmp
cwde
jmp
or
mov
fisub
out
jns
push
add
cmp
sahf
mov
pop
mov
nop
test
dec
ror
xchg
push
or
xchg
test
dec
out
jle
cli
fs
xor
jno
xchg
sbb
lahf
(bad)
lods
adc
inc
shl
mov
or
fbstp
mov
pop
dec
mov
inc
xor
cdq
cmp
xchg
jmp
in
xor
jl
hlt
and
ss
push
inc
movlps
adc
sti
cmp
outs
dec
cmp
and
sti
mov
call
add
mov
jnp
ret
in
adc
retf
push
push
xchg
and
and
xor
mov
jge
hlt
popa
mov
lock
xor
adc
out
cmp
addr16
scas
push
push
test
add
mov
fistp
ja
jle
and
aaa
les
push
mov
outs
repnz
and
inc
xor
pop
xor
repnz
ret
cmp
hlt
xor
jmp
push
sbb
test
rol
shl
cmps
xor
(bad)
sar
int
js
pop
jmp
fmul
pop
mov
jp
lock
push
test
or
fstp
cs
movs
pop
sbb
test
retf
sbb
(bad)
pop
and
mov
add
fnsave
js
add
imul
pushf
sti
mov
hlt
retf
ins
(bad)
fiadd
add
add
and
or
mov
jo
lods
rol
(bad)
(bad)
sar
sti
xchg
daa
xchg
dec
lds
or
add
rcr
ss
ss
movs
xchg
sbb
fnstenv
ss
pop
push
pop
adc
adc
mov
add
popf
mov
rcr
mov
xchg
pavgb
arpl
inc
outs
in
mov
mov
push
and
imul
fwait
(bad)
and
and
retf
sub
leave
out
mov
es
jne
sbb
push
scas
cmc
ficom
mov
jmp
(bad)
cmp
add
lea
leave
push
xor
xchg
imul
mov
outs
jge
and
xchg
pusha
xlat
loopne
inc
pop
mov
adc
test
leave
pop
scas
fisttp
cmp
add
mov
js
pop
jae
and
loop
push
cdq
scas
ins
sub
aad
dec
fisttp
retf
(bad)
push
cmp
jne
ffreep
outs
cmpxchg
mov
fadd
xchg
ds
xor
mov
pop
inc
pop
outs
dec
repz
adc
dec
neg
mov
pop
jg
sub
adc
std
rcr
das
add
outs
cli
ss
aas
jl
inc
dec
jle
dec
call
daa
call
mov
jmp
js
add
test
ja
cmps
jl
add
or
xchg
or
dec
lock
jp
cmc
into
stos
lods
imul
push
pop
pop
push
xchg
aas
repnz
adc
xchg
mov
mov
mov
sbb
aam
xor
jbe
aam
xor
or
cmp
xchg
ja
fs
iret
push
stc
test
push
retf
sub
ficom
je
retf
cmp
int3
repnz
pop
popf
sahf
push
add
inc
push
fdivr
mov
xlat
push
dec
(bad)
jmp
js
in
mov
add
mov
jns
add
(bad)
shr
dec
std
popf
sti
imul
cli
mov
pop
in
pop
mov
xor
cmps
fbld
out
or
mov
inc
jmp
repz
mov
cmps
stos
add
leave
dec
push
stos
sub
mov
in
or
mov
mov
inc
inc
mov
(bad)
sbb
dec
xchg
and
mov
aam
loop
in
stc
test
test
leave
fwait
jp
rcl
cmp
mov
fwait
sbb
sub
test
jmp
(bad)
fadd
addr16
and
test
ins
xor
movs
and
rol
movs
mov
mov
ficom
adc
sbb
push
aas
and
and
ret
add
cmp
ret
ret
add
(bad)
repz
shr
xchg
sti
xchg
call
addr16
lds
push
mov
mov
fisub
cmp
xchg
mov
popf
or
rcr
push
adc
daa
and
call
add
std
dec
dec
stos
adc
out
mov
mov
fmulp
imul
mov
jno
lea
test
aam
xchg
js
cdq
adc
aas
scas
aaa
cli
pop
mov
adc
js
loop
mov
cmp
cmp
es
aad
scas
dec
dec
out
inc
mov
and
mov
adc
mov
adc
push
nop
cmp
(bad)
xchg
mov
nop
cmps
adc
or
and
(bad)
cmp
cmp
cdq
cmp
mov
cdq
cmp
adc
das
hlt
mov
and
cmps
dec
ficom
xor
imul
nop
cli
pop
push
fidivr
inc
mov
dec
xchg
jl
xchg
pop
ins
pushf
bound
dec
mov
adc
xchg
popa
mov
pop
jle
and
scas
je
test
push
sub
cmp
cmc
pusha
adc
outs
xor
ds
gs
sub
xor
jnp
imul
push
mov
lods
and
jp
test
test
lock
inc
popa
rcr
fild
xchg
test
pusha
xchg
cmp
pop
cmp
shl
outs
xor
repz
xor
repz
pop
rol
cmps
sti
(bad)
mov
inc
out
inc
mov
xor
(bad)
sub
add
sbb
push
lods
adc
shl
pop
cmps
push
lds
aam
add
and
out
or
jge
and
clc
not
lahf
mov
(bad)
fidivr
inc
aad
pop
pop
stc
inc
jmp
mov
adc
fnclex
xchg
out
xchg
push
sahf
mov
loopne
test
sbb
dec
mov
add
addr16
push
rcl
imul
cmp
pushf
repnz
pop
dec
xchg
xchg
iret
je
sub
ins
mov
test
fsub
loopne
scas
addr16
out
mov
mov
push
sahf
xor
test
mov
mov
mov
and
repz
or
sti
movs
sub
jmp
cdq
retf
inc
jp
ds
xchg
fisub
adc
inc
and
cmp
into
ss
push
in
xor
push
ja
rol
mov
mov
or
mov
in
and
div
xchg
xchg
xchg
mov
mov
scas
jmp
mov
xor
je
jns
ret
and
xor
jbe
cmp
(bad)
add
fwait
jle
pushf
(bad)
jnp
inc
retf
dec
(bad)
das
clc
div
out
jne
into
adc
(bad)
sahf
jg
paddsb
popa
add
jae
(bad)
cmp
inc
enter
aam
sbb
mov
jo
arpl
mov
cld
cmps
xchg
popf
retf
mov
into
out
shr
in
js
or
aaa
mov
mov
outs
sbb
cmp
push
cmp
in
xchg
mov
in
jno
ss
shr
(bad)
lock
mov
lock
inc
xchg
test
fidivr
dec
arpl
stos
pop
arpl
mov
sbb
inc
sahf
adc
lods
and
loope
daa
jae
retf
lock
sbb
ret
cli
pop
add
xor
ja
push
sbb
cmps
lea
push
js
dec
sahf
mov
mov
push
jl
das
pusha
jne
bound
mov
mov
dec
mov
mov
int3
xchg
mov
outs
xor
or
popf
fcom
(bad)
and
xor
int3
sbb
xchg
gs
out
jno
out
push
into
jnp
call
out
jmp
das
aas
xor
(bad)
jmp
ja
enter
dec
ins
cmc
jmp
retf
sar
int
movs
out
fcom
(bad)
cli
or
xchg
arpl
pop
fldcw
icebp
scas
dec
pushf
pop
mov
xor
cmp
jo
out
loop
mov
out
std
aam
cmp
cmps
mov
(bad)
int3
mov
ins
cmp
sub
cmp
stc
outs
jae
jge
in
xor
dec
shl
xor
inc
pop
loope
jbe
lahf
xlat
aad
dec
push
repnz
(bad)
in
push
sbb
dec
mov
sub
or
ins
cmp
mov
jge
imul
jmp
inc
bound
and
push
int
mov
ss
sbb
dec
data16
sub
jmp
das
mov
repnz
inc
xor
clc
imul
test
(bad)
fldlg2
mov
cmps
pop
repz
adc
daa
add
cmc
pop
lahf
mov
jnp
and
cmc
push
dec
cdq
mov
sub
dec
call
stos
popa
aas
add
cmc
jae
jmp
ror
es
popf
push
in
shl
push
fcom
or
mov
xchg
jbe
sub
stos
mov
popf
mov
std
mov
sbb
dec
jg
or
dec
(bad)
mov
push
stos
leave
mov
mov
jnp
shld
retf
sub
push
dec
xor
push
mov
mov
mov
dec
mov
dec
in
pop
es
and
or
add
jp
(bad)
scas
dec
daa
test
std
sbb
push
iret
jge
test
mov
lods
popf
sub
jl
or
aad
mov
sbb
mov
inc
cmp
xchg
and
push
(bad)
adc
pop
enter
add
cmp
jle
add
mov
and
mov
aas
stos
inc
sub
add
inc
inc
addr16
cld
push
mov
js
push
cld
cmp
dec
pop
ins
xor
xor
scas
ss
out
ret
outs
fst
call
pop
in
mov
ror
sbb
sbb
xchg
or
fild
push
push
(bad)
mov
or
into
inc
pop
mov
inc
mov
pop
cmp
pop
sbb
imul
push
(bad)
jmp
(bad)
adc
push
jno
(bad)
shr
mov
xchg
stc
inc
jno
adc
sub
or
sub
cs
dec
popa
cmp
cmp
xor
and
push
mov
fwait
sbb
shr
in
ret
jmp
arpl
add
mov
sub
xor
fst
inc
test
mov
sub
mov
sub
cmp
push
sbb
xchg
test
rcr
daa
fdiv
movs
jl
mov
jle
icebp
out
pop
mov
les
and
xchg
jae
or
into
jnp
(bad)
out
mov
cli
xor
xor
lods
cmp
pop
mov
dec
das
jg
cmps
pop
cli
movs
or
add
adc
je
jle
mov
ret
cmps
adc
jmp
jp
fidiv
pop
mov
fwait
cmps
popa
pop
outs
mov
imul
mov
(bad)
gs
xchg
test
jecxz
and
std
int
imul
cli
mov
xor
cmps
dec
xchg
outs
leave
inc
retf
dec
(bad)
cmps
mov
lods
sub
push
lahf
jp
jne
ja
stc
jge
sbb
sub
cs
js
mov
xor
mov
cmp
mov
into
xor
inc
and
daa
stos
js
lock
dec
inc
mov
sub
lock
ja
inc
es
add
rcr
dec
pop
adc
xor
icebp
shl
in
cmp
popf
(bad)
xchg
addr16
out
xchg
cwde
push
cld
xlat
xchg
jp
adc
sub
or
jo
adc
or
or
and
dec
fcom
test
dec
xor
icebp
fild
cmp
dec
mov
jmp
iret
jbe
pop
cwde
and
push
hlt
repz
add
movs
dec
fdivr
sub
mov
and
ja
sub
sbb
(bad)
cmp
(bad)
jge
xor
xor
inc
ja
lods
and
les
pop
jmp
(bad)
test
(bad)
dec
jecxz
stos
add
mov
inc
pop
mov
add
sar
sar
and
and
mov
lock
sti
jge
outs
test
(bad)
and
dec
dec
ds
xchg
data16
mov
inc
aad
push
daa
in
cmp
cmc
cwde
push
mov
and
jnp
pop
das
adc
fs
aam
retf
fst
and
test
xchg
mov
iret
jne
pop
fdiv
inc
je
push
repnz
cdq
mov
ret
jecxz
cmp
pop
scas
fst
push
lidtd
fisub
pop
gs
and
xchg
(bad)
dec
jo
out
aaa
sbb
mov
fs
(bad)
mov
xor
mov
cmp
or
push
and
mov
inc
jbe
inc
mov
mov
pop
pop
in
in
adc
sub
adc
dec
outs
pushf
je
stc
pop
mov
ins
pop
retf
in
bound
adc
cmp
mov
retf
xor
outs
out
pop
xor
loopne
sar
mov
retf
push
pop
jo
fld
jl
jecxz
jg
imul
sahf
mov
imul
add
xchg
(bad)
xchg
out
lods
into
mov
sbb
cmp
mov
inc
cdq
sbb
push
out
(bad)
pop
enter
push
rcr
je
jg
outs
inc
in
stos
mov
push
sbb
mov
dec
lar
or
jmp
gs
adc
xor
push
pop
push
movs
je
sbb
cmp
jb
inc
popf
fidiv
cmp
rcl
fwait
popf
push
sahf
shufps
repnz
mov
loope
loop
pop
out
push
(bad)
das
sub
cli
inc
cmc
ds
leave
aad
xchg
mov
jecxz
out
fldcw
das
cdq
mov
movs
push
jne
xor
shl
repz
sub
cmp
jl
out
cmps
jo
xchg
jo
or
xor
(bad)
fs
and
les
stc
ss
mov
in
mov
push
mov
popf
and
push
fwait
pop
push
(bad)
(bad)
jp
mov
in
enter
lods
xor
mov
ret
outs
mov
cwde
popf
test
add
or
outs
daa
add
or
int3
gs
aam
sub
xlat
jo
xchg
pop
fwait
fs
xor
adc
mov
mov
pop
adc
shl
pop
jnp
(bad)
add
sti
daa
dec
jns
mov
jbe
das
cmp
sub
pop
add
imul
xchg
sbb
shl
lods
ficom
inc
in
sbb
fwait
pushf
rol
xchg
dec
sbb
cld
stc
adc
push
in
imul
mov
cdq
add
outs
pop
popf
or
push
or
or
fs
aas
dec
mov
and
repnz
cmps
shl
into
jl
outs
mov
adc
mov
inc
cld
cmps
(bad)
mov
jge
loopne
fstp
hlt
push
and
push
ficom
sub
mov
cmp
push
ret
inc
cmp
xor
ja
sub
cmp
mov
(bad)
in
push
push
cmp
int
in
mov
fistp
(bad)
icebp
mov
movs
inc
pusha
mov
cmp
xor
fldcw
test
mov
jg
pop
sbb
aam
push
inc
push
jecxz
dec
gs
adc
cwde
mov
sar
push
fisubr
push
data16
(bad)
dec
test
int3
xchg
adc
mov
push
inc
call
mov
jbe
push
push
push
fidivr
mov
jle
dec
jge
adc
ret
retf
ds
push
dec
outs
icebp
inc
xor
xor
or
xor
out
xchg
adc
sub
enter
push
pop
scas
sub
inc
gs
cmc
cmp
and
call
sub
int
push
ficom
sub
fisttp
ror
jb
rcr
push
(bad)
mov
inc
xchg
pushf
push
adc
ins
in
push
ins
fcomip
xlat
ins
adc
inc
fistp
sub
inc
pusha
mov
sbb
pop
inc
and
bound
pop
imul
fs
pusha
push
jne
sub
scas
imul
push
lds
mov
adc
iret
fwait
push
and
out
push
out
mov
je
xchg
or
addr16
xchg
sahf
adc
sbb
mov
mov
mov
sar
fldcw
xchg
inc
stos
int3
or
mov
jbe
mov
stos
cmp
jno
rol
js
lods
scas
jle
pop
js
iret
adc
mov
outs
cmp
fs
and
dec
jecxz
lods
inc
shl
mov
outs
xor
jl
test
sub
sbb
adc
xchg
mov
mov
sbb
pusha
retf
push
cdq
clc
in
stos
adc
dec
sbb
hlt
xlat
(bad)
mov
popf
cmp
int
mov
es
test
adc
push
sahf
push
test
pop
mov
push
xchg
jae
cmc
out
loopne
gs
lea
push
pop
fistp
push
rcl
shl
pop
mov
(bad)
jb
mov
in
xlat
in
int3
neg
jmp
aaa
in
and
sbb
xchg
dec
arpl
push
mov
xor
outs
in
(bad)
xchg
pop
jmp
stos
push
cmp
jmp
loopne
ret
hlt
cmp
xchg
sbb
mov
pop
mov
repnz
xor
lock
scas
or
dec
push
add
cmps
xlat
arpl
fdiv
pop
mov
jne
mov
jge
xor
mov
arpl
and
cmc
stos
in
loopne
xchg
push
inc
mov
pop
xor
or
inc
fnstcw
pop
call
int3
push
mov
add
mov
mov
bound
xor
popa
xor
pusha
push
imul
dec
cmp
dec
lods
jl
jp
mov
into
push
mov
sahf
sbb
mov
and
mov
loop
pop
pop
dec
loopne
sub
push
jmp
pop
lods
add
sahf
sahf
inc
adc
xchg
aad
popf
or
cdq
into
(bad)
icebp
mov
adc
imul
inc
adc
in
inc
xchg
ret
push
mov
ret
mov
ret
mov
rol
sub
or
cmp
mov
loop
pop
mov
popa
mov
mov
das
inc
scas
ficomp
and
rol
ja
jne
retf
sbb
idiv
jge
(bad)
push
adc
scas
mov
fst
fnsave
mov
mov
add
jb
mov
xchg
mov
add
cld
ret
cmps
dec
sbb
mov
pop
ds
xchg
mov
mov
inc
add
and
fmul
xor
mov
bound
scas
mov
gs
jmp
jns
and
sbb
pushf
fimul
add
dec
dec
icebp
(bad)
inc
dec
mov
in
jno
int3
xchg
mov
inc
sub
lahf
int
pop
sub
push
xchg
and
mov
sub
mov
pop
int
repnz
inc
outs
jp
aad
leave
fwait
dec
jnp
inc
push
inc
call
dec
test
mov
cmp
pop
outs
add
fistp
and
cmps
(bad)
jae
xchg
inc
sbb
push
lea
lds
sbb
fistp
mov
clc
mov
sub
push
pop
(bad)
lods
jmp
inc
sub
cmp
stos
pop
mov
push
mov
add
pop
adc
idiv
push
dec
cmp
loope
cdq
inc
xor
push
adc
faddp
adc
add
or
mov
(bad)
(bad)
dec
or
div
test
lahf
dec
add
mov
pop
dec
jbe
es
aaa
daa
idiv
stc
not
add
sbb
inc
shr
scas
sbb
xchg
or
fwait
sbb
xchg
adc
ins
add
cmp
add
or
push
jmp
movs
mov
inc
(bad)
fst
or
pop
mov
push
fidivr
mov
inc
or
cmps
clc
dec
mov
mov
mov
cmp
push
arpl
fisub
and
add
rcr
das
dec
cmp
inc
cmp
scas
std
rcl
xchg
cmps
mov
test
mov
loopne
mov
stos
jle
loopne
imul
pop
mov
add
mov
mov
pop
jg
test
fbld
push
mov
sub
(bad)
fwait
sbb
inc
inc
jo
mov
js
or
xor
push
dec
inc
mov
jns
xchg
mov
sub
jae
test
and
or
dec
shufps
and
repnz
mov
(bad)
add
xchg
or
repnz
loopne
in
pop
(bad)
pop
out
in
retf
movs
lea
pop
jp
mov
(bad)
mov
jecxz
or
add
add
cmc
es
cmp
(bad)
dec
loopne
ret
jl
lea
rcr
fwait
sbb
call
hlt
xor
cwde
outs
xchg
pop
or
push
div
pusha
nop
in
or
and
adc
ins
inc
push
push
mov
(bad)
fdiv
(bad)
and
cmp
sub
ins
push
pusha
push
dec
std
pop
xor
pop
cwde
xlat
pop
imul
lods
mov
ficom
push
jg
call
test
ins
cli
rcr
push
mov
les
xor
icebp
jae
sub
sub
js
jbe
mov
jne
imul
push
icebp
retf
or
push
lea
out
ret
push
popf
or
popa
retf
push
xor
jne
inc
ins
adc
inc
loope
aas
nop
dec
scas
pusha
jge
jp
adc
movs
xor
xchg
mov
dec
clc
mov
push
sbb
ss
mov
(bad)
or
add
in
in
jge
iret
shl
mov
sub
stos
in
jl
pop
sub
xor
sub
shr
test
fmul
(bad)
mov
sbb
ins
adc
pop
in
cwde
stc
jle
pop
fst
sub
jmp
push
inc
fimul
loop
jo
jne
sub
into
sti
and
mov
and
pop
adc
push
mov
cdq
push
push
xchg
mov
cs
aas
scas
mov
mov
pushf
daa
pop
xor
sbb
cs
dec
loope
fdivr
xor
push
sbb
jle
in
dec
pop
pop
je
mov
data16
in
xchg
neg
xor
aaa
sub
fnstsw
or
and
pop
(bad)
loope
sbb
lahf
sbb
addr16
inc
dec
daa
add
call
iret
pop
sub
dec
fsub
mov
mov
mov
or
rcr
out
scas
fiadd
xor
mov
iret
jge
mov
call
sbb
push
test
dec
scas
nop
dec
add
xchg
xor
and
cs
ret
jle
sbb
push
adc
lahf
xchg
mov
jo
leave
xchg
dec
inc
dec
stos
in
xchg
add
gs
fild
mov
nop
ins
mov
div
jae
jl
scas
je
ss
in
jae
rcl
push
(bad)
push
retf
push
cmp
mov
pop
cmps
and
push
(bad)
fwait
mov
cmp
lea
pusha
call
inc
lods
push
sti
or
adc
sahf
fistp
or
(bad)
loop
adc
mov
not
int
xchg
iret
ret
dec
or
fstp
pop
push
xchg
jg
sub
mov
mov
push
sub
pop
sbb
fimul
(bad)
pop
mov
xor
xor
xchg
clc
ja
fiadd
pop
inc
and
fadd
loope
icebp
aaa
aam
xor
mov
movs
fwait
pop
fs
cld
push
inc
and
out
xor
or
pop
xchg
jmp
(bad)
cs
pop
ret
pop
stos
jmp
pop
jae
fs
pop
push
sahf
xchg
inc
xchg
dec
jo
aaa
ss
test
dec
dec
add
test
lods
(bad)
stos
outs
inc
adc
fsubr
inc
add
inc
loope
inc
push
jle
loopne
imul
shl
push
jns
cmps
inc
cmp
cwde
clc
add
mov
cli
lods
dec
push
cs
add
dec
adc
mov
sti
stos
aaa
cmc
mov
mov
daa
mov
retf
in
xrelease
hlt
jl
sti
jmp
adc
pop
push
xchg
mov
jno
pop
ss
in
jne
or
loop
jbe
add
jo
addr16
jo
mov
mov
push
es
push
into
sbb
mov
daa
jns
(bad)
lods
in
mov
repz
push
int
ins
mov
icebp
push
inc
dec
push
ins
std
or
jnp
retf
push
jmp
xchg
xor
mov
adc
retf
aas
push
push
sub
mov
add
imul
ffree
test
jmp
in
xchg
mov
stos
out
xchg
leave
out
cs
jo
stos
mov
retf
in
push
jno
pop
dec
in
(bad)
jp
cmp
cmp
push
fimul
pushf
inc
inc
pop
adc
pusha
mov
div
in
pop
lods
pop
call
leave
and
jge
inc
inc
jo
mov
mov
fsub
(bad)
fisubr
mov
xor
sub
fdiv
xchg
inc
cli
jne
inc
xchg
sbb
jge
sub
add
ret
and
test
mov
sahf
icebp
lds
push
jmp
pop
cld
pop
cmp
imul
sahf
xor
fidiv
xor
lock
and
addr16
or
push
scas
shl
(bad)
test
pusha
or
mov
js
ss
xchg
(bad)
push
push
je
ret
sbb
inc
and
stos
push
sub
retf
jmp
in
sbb
loop
hlt
out
icebp
popf
pop
mov
adc
mov
ret
and
mov
inc
inc
add
popa
je
fist
repz
xchg
xor
jmp
jmp
jmp
inc
adc
push
jbe
popa
repnz
mov
gs
shr
cli
mov
cmps
cs
jecxz
stos
mov
test
fisub
mov
jg
or
fldenv
xor
shl
clc
cld
mov
call
leave
int
push
push
mov
add
adc
sbb
push
or
fs
cs
mov
ss
dec
add
add
jnp
dec
gs
scas
arpl
stos
stc
mov
mov
mov
xchg
sbb
popa
clc
cmp
mov
dec
out
adc
sbb
jmp
cld
aaa
jg
mov
add
pusha
(bad)
std
test
and
dec
jne
outs
(bad)
rol
scas
push
ret
fistp
clc
mov
adc
and
cmps
mul
pop
sub
xor
int3
iret
(bad)
mov
ret
xlat
jg
xor
retf
sbb
sbb
(bad)
dec
add
inc
fcomp
and
xchg
mov
cmpps
pop
cld
jae
adc
dec
and
pop
mov
sahf
jbe
lds
ins
add
jno
push
cmp
aad
xor
outs
pusha
push
mov
cmp
or
in
and
inc
xchg
mov
add
and
add
xchg
or
cmp
test
loopne
or
push
xchg
test
push
les
iret
call
ficomp
in
adc
pushf
stos
cmp
xlat
adc
adc
jns
inc
cmp
xchg
cmp
xchg
jg
pop
cmc
je
into
and
and
outs
mov
sub
inc
fidiv
lods
adc
cmp
test
or
dec
rcl
jb
loope
out
test
push
cmp
in
cmc
mov
leave
pop
sub
mov
xchg
dec
shl
jp
rol
in
cs
inc
add
mov
iret
adc
jmp
in
jmp
loop
jno
pop
push
inc
mov
jbe
jle
jecxz
mov
jl
and
scas
cmp
addr16
jb
adc
xor
cmp
dec
cmp
pop
outs
fadd
out
and
cdq
outs
mov
scas
mov
pop
rcl
rol
mov
fucomp
xchg
xor
dec
mov
push
pushf
not
jge
xor
add
and
xchg
(bad)
neg
jecxz
mov
and
mov
jl
jns
in
pop
jg
into
jns
loope
cmp
lods
jno
adc
fstp
pop
inc
or
repnz
mov
lock
lock
pop
jo
ror
out
cmp
sub
fnstenv
mul
mov
(bad)
pop
or
das
dec
fisttp
sbb
or
sub
inc
or
fisttp
pabsb
enter
mov
ret
call
repz
(bad)
in
aaa
cmp
inc
mov
mov
push
push
push
mov
mov
pop
xchg
(bad)
mov
mov
test
pushf
jl
ror
xchg
pop
sbb
imul
or
add
dec
jns
(bad)
push
stos
jno
inc
aam
popf
cwde
cmps
mov
add
popf
pop
sub
push
pop
jg
shl
mov
cmp
cmps
dec
push
jle
(bad)
outs
dec
out
(bad)
inc
mov
adc
and
loop
in
adc
in
in
inc
bound
sub
pop
add
fidiv
and
push
(bad)
fadd
adc
inc
jae
ins
adc
aaa
mov
lds
ins
ret
or
push
xor
cmp
cmp
xchg
jmp
mov
out
nop
cmp
test
pop
push
jmp
pop
mov
xchg
mov
out
mov
jmp
hlt
inc
ror
dec
loopne
push
into
inc
mov
cmp
add
adc
or
mov
shl
scas
faddp
mov
and
test
fcmovbe
dec
jmp
sbb
push
test
mov
adc
clc
std
cli
fmul
pop
xlat
or
mov
push
dec
dec
addr16
repnz
stc
pop
dec
mov
push
fld
xchg
xchg
push
sub
sbb
test
sti
in
pop
mov
sbb
add
stos
mov
inc
retf
ret
iret
cmp
icebp
push
aam
ficom
fdivr
mov
ror
jle
pop
int
movs
mov
adc
daa
cmp
out
push
or
mov
inc
je
(bad)
call
sub
pop
fsub
mov
pop
jbe
pop
sub
mov
bound
jl
cdq
int
sub
pop
push
std
mov
xor
jae
cmc
fs
sbb
push
pusha
mov
xchg
push
sar
mov
outs
aad
sbb
pop
scas
xor
les
xchg
mul
(bad)
xor
outs
push
pop
cld
aam
sub
aaa
mov
adc
xchg
xchg
add
adc
cmp
xor
jecxz
fisttp
jno
call
mov
nop
push
push
pop
test
out
mov
ss
aaa
lahf
mov
push
clc
push
sub
call
std
mov
mov
cld
fsubp
ja
xchg
add
xchg
outs
jb
sbb
in
push
mov
inc
in
stos
outs
sub
mov
ficom
cmp
(bad)
aam
mov
jnp
lock
mov
dec
ins
mov
pushf
cmp
in
fwait
shl
cld
or
idiv
mov
xchg
cmp
test
mov
push
or
xchg
lahf
dec
dec
(bad)
lea
mov
pop
clc
sbb
xchg
cli
sahf
sbb
mov
xor
adc
add
adc
jg
sbb
sub
bound
dec
xchg
xor
or
push
jp
mov
sub
(bad)
cmc
push
out
(bad)
test
mov
scas
adc
pop
mov
call
scas
mov
mov
popa
mov
pop
stc
inc
(bad)
call
std
inc
add
fwait
sub
jnp
sub
xchg
(bad)
jo
jns
jg
mov
jmp
pop
add
dec
movs
xor
push
ins
sbb
jmp
lock
xchg
inc
sbb
into
sbb
int
stos
ror
loope
clc
lahf
sub
xor
add
push
cmp
mov
push
mov
arpl
xchg
adc
pop
(bad)
push
into
push
jmp
ja
fs
mov
loope
mov
xor
aad
ret
or
fs
mov
and
fwait
xchg
cmc
and
clc
pop
sbb
pop
jae
mov
push
cs
jp
pop
stos
in
and
mov
lock
add
inc
cmc
cmp
scas
ret
adc
cmp
inc
or
xor
shl
or
sti
xchg
bound
js
out
lock
xchg
mov
retf
je
xchg
fadd
cmp
(bad)
adc
int3
loope
xchg
enter
out
int
aas
dec
test
jg
jle
loope
popf
or
shl
adc
fmul
push
jg
sbb
pop
mov
jb
scas
shl
sub
cmp
sub
or
fnsave
push
xchg
mov
cmp
jae
push
add
push
icebp
(bad)
mov
mov
int
ror
mov
inc
test
mov
jecxz
push
test
inc
pop
in
das
cmps
call
and
adc
and
call
xchg
enter
push
sub
jnp
clc
jle
icebp
mov
test
xchg
movs
sbb
or
ret
sbb
outs
jmp
add
loope
nop
xlat
jne
(bad)
cli
and
xchg
outs
xchg
xchg
adc
icebp
aam
push
mov
push
rcr
xchg
cmp
in
dec
cmp
mov
sar
mov
enter
pushf
jno
jg
sub
daa
sbb
sbb
in
ds
ins
mov
add
popf
pop
xor
pop
push
mov
rcr
(bad)
fbstp
cmp
neg
sbb
pushf
jno
jmp
sbb
fist
pop
or
pop
retf
mov
jecxz
add
jmp
pop
push
xchg
hlt
pop
mov
fcmovnu
aad
cmp
add
xchg
fst
xor
sar
jbe
jle
cmps
fidivr
jb
xchg
(bad)
or
adc
icebp
adc
push
test
fwait
mov
mov
or
sbb
out
adc
int
je
int
stos
int
sub
loopne
jae
mov
sbb
dec
ins
neg
inc
sbb
push
nop
jg
push
frstor
loop
fcom
lds
pop
js
xchg
or
pop
add
xor
sbb
fimul
lahf
iret
inc
and
pop
cdq
rol
and
pop
inc
or
aaa
ja
cmc
push
(bad)
jmp
shl
push
sbb
int3
xor
and
pop
pop
cwde
iret
pushf
jp
daa
mov
pop
pop
mov
adc
mov
in
shl
and
enter
call
ror
adc
rcr
(bad)
fiadd
retf
jmp
test
fwait
inc
sbb
(bad)
jmp
scas
inc
pop
cs
jb
add
push
arpl
jo
repz
(bad)
sti
repnz
adc
sahf
add
test
mov
adc
sub
ds
pop
xchg
xchg
ds
mov
jge
(bad)
cs
or
inc
cmp
sbb
sbb
loop
in
cmp
(bad)
and
rcr
mov
mov
sahf
test
add
xchg
inc
cmps
cmp
std
push
jbe
outs
pop
and
and
xchg
int
or
xor
and
bound
mov
movs
fcomp
adc
pop
inc
jbe
and
ss
scas
mov
inc
add
in
enter
sbb
add
cmp
jo
loopne
frstor
into
adc
push
mov
pop
sbb
push
pushf
lods
mov
and
loopne
dec
pop
stos
or
adc
jae
or
cwde
in
jns
imul
ret
mov
sub
enter
push
or
sbb
je
cli
retf
aas
mov
adc
mov
aaa
ins
push
xor
inc
jecxz
mov
or
cmps
inc
mov
cmp
add
repz
scas
pop
sbb
outs
cmp
(bad)
mov
cmp
mov
int3
out
push
pop
fwait
adc
cmps
adc
jl
out
(bad)
fdiv
stc
and
loop
fldcw
add
sub
(bad)
fiadd
out
movs
sub
fwait
xchg
dec
mov
mov
mov
inc
hlt
stos
inc
daa
mov
add
clc
cmp
loope
test
test
sbb
jne
mov
mov
mov
iret
ret
sbb
hlt
std
pop
xor
ret
jnp
jmp
(bad)
div
test
mov
ret
cdq
mov
jne
push
pusha
repz
pop
repnz
stos
outs
icebp
sbb
cmp
sbb
jns
mov
mov
inc
hlt
adc
or
pushf
jns
in
sbb
pop
call
and
leave
xor
sub
das
push
inc
mov
sbb
adc
paddb
dec
lea
jb
loop
mov
cs
(bad)
pop
xor
mov
cmp
arpl
push
cmps
pushf
imul
xlat
sub
sub
and
arpl
rol
sub
stc
fxch
and
add
icebp
pop
push
jmp
test
ficomp
pop
add
pop
movs
add
mov
jb
dec
cwde
test
test
sar
push
or
adc
sub
rol
cmp
inc
jae
aad
lods
(bad)
int3
(bad)
and
mov
(bad)
mov
adc
dec
movs
add
ret
inc
jge
cmp
test
pop
pop
scas
cmc
push
(bad)
cmp
cmps
xchg
imul
enter
pop
outs
or
outs
cmps
sub
mov
push
fstp
js
neg
lea
xor
mov
jle
in
mov
arpl
fld
stos
sbb
(bad)
(bad)
iret
(bad)
and
jmp
lea
stos
jge
sub
jmp
pop
jnp
push
add
xchg
xlat
sbb
adc
mov
cli
dec
mov
cmp
xchg
and
sub
stos
shr
push
xchg
mov
sbb
cmc
mov
xchg
mov
imul
lods
clc
adc
cmp
stos
xchg
leave
fs
cmp
mov
fisub
(bad)
push
icebp
in
loope
xchg
adc
ins
mov
sbb
cmp
xchg
push
clc
icebp
(bad)
sbb
enter
and
or
jp
mov
bound
sbb
jmp
(bad)
fisub
add
inc
jo
in
mov
mov
ds
out
lea
lods
sub
dec
jg
inc
pop
hlt
out
mov
pop
pushf
into
repz
cdq
test
inc
dec
xor
cmp
ficomp
test
mov
push
dec
inc
addr16
jge
iret
add
sbb
cld
add
xlat
sub
lods
xor
mov
(bad)
sbb
dec
cli
adc
dec
push
sub
add
in
inc
enter
adc
ror
push
sub
scas
imul
leavew
fcmovnbe
pop
ds
sbb
aad
xor
dec
mov
fsubr
test
sbb
mov
outs
xor
inc
stc
pop
inc
test
shl
inc
in
fwait
xchg
xchg
mov
jae
and
xchg
mul
scas
mov
push
jns
outs
inc
cli
xchg
retf
adc
cmp
enter
sub
pop
pop
mov
push
pop
inc
mov
inc
xchg
mov
mov
call
arpl
add
aam
xchg
call
inc
jbe
cmp
pop
sahf
or
gs
push
xchg
sahf
mov
mov
mov
cmp
mov
push
js
fist
ficomp
es
jmp
in
or
aad
sub
les
(bad)
repnz
out
pop
mov
jns
sub
es
jb
push
sti
jb
ins
adc
shr
inc
xchg
sti
mov
or
scas
adc
mov
dec
xchg
push
dec
inc
popf
xchg
std
pop
sbb
mov
mul
call
ss
lea
outs
(bad)
cdq
movs
jo
xor
mov
add
outs
div
sahf
cmps
dec
jae
dec
xlat
add
jl
iret
fcmovnbe
xor
mov
push
cmp
fistp
mov
sbb
jbe
pop
sbb
cli
aas
cmp
sbb
xchg
retf
sub
bnd
mov
cld
cmc
inc
and
les
cs
je
xchg
adc
xor
jnp
xor
mov
mov
push
out
lods
out
add
ficomp
out
loope
aas
fwait
in
arpl
push
test
inc
mov
and
push
aaa
fsubr
shr
outs
mov
cmp
or
xchg
cmp
cld
js
pushf
addr16
fwait
in
sub
mov
jle
jns
jp
lods
je
imul
inc
cmp
fidiv
mov
fsubrp
or
scas
in
dec
xchg
mov
add
ret
repnz
inc
fs
mov
(bad)
addr16
lock
fstp
pusha
mov
adc
mov
mov
outs
inc
fistp
add
std
ficom
pop
clc
das
nop
mov
clc
or
push
test
inc
fdivr
xchg
cmp
inc
pop
shufps
jmp
xor
jns
dec
pop
lea
ret
out
fnstenv
(bad)
and
xor
xchg
dec
push
mov
adc
aam
adc
jecxz
lahf
cs
and
lea
(bad)
into
icebp
lds
pop
cmp
rcl
scas
xor
xor
jb
cwde
imul
or
lock
or
gs
jmp
jo
pusha
xchg
adc
push
push
test
pop
outs
stc
mov
sbb
pop
pop
push
add
push
(bad)
fistp
into
mov
bound
adc
cld
push
cmc
mov
xor
cmp
xor
fld
fldcw
and
mov
sbb
xchg
pop
outs
ja
je
imul
inc
aas
push
mov
cmp
adc
sbb
xchg
pop
cmp
mov
out
add
mov
in
or
(bad)
retf
retf
lock
adc
psubsb
(bad)
mov
loopne
jb
sub
adc
stc
mov
ja
mov
cwde
fist
bound
outs
push
mov
fadd
adc
out
mov
hlt
ds
(bad)
loopne
aam
movs
(bad)
inc
dec
lea
ins
pop
loopne
mov
lods
or
mov
jae
sbb
fwait
and
adc
lods
rcl
and
sahf
mov
in
gs
jno
pop
jno
mov
sbb
and
pop
jo
sub
dec
xor
outs
retf
pop
xor
inc
rcr
push
xchg
inc
cmp
mov
mov
sbb
cld
cmp
bound
out
jecxz
loope
jo
mov
adc
js
xchg
push
shl
mov
adc
add
pusha
fst
sub
cmp
dec
scas
in
and
mov
pop
fsubp
dec
loop
div
ins
and
push
jae
je
fdiv
out
jnp
gs
dec
mov
push
test
clc
rcl
xchg
sub
cmps
inc
cmp
ins
int
nop
xor
les
xlat
ja
(bad)
jne
into
popa
mov
adc
sbb
mov
lods
cmp
mov
sar
push
sub
or
pop
adc
js
add
hlt
pusha
mov
jmp
das
inc
inc
jno
ss
ins
cli
push
or
pop
jb
xchg
repnz
mov
fadd
jo
mov
mov
xchg
scas
jle
fldcw
(bad)
lea
push
nop
xchg
mov
repnz
les
ins
(bad)
or
mov
call
aad
xchg
ret
sub
icebp
rcl
nop
xchg
sub
fdiv
lahf
jbe
push
dec
jns
sti
sbb
paddb
adc
mov
dec
sub
out
ins
pop
pop
out
cs
imul
in
enter
or
inc
rcl
sti
je
fist
mov
sbb
inc
or
jecxz
xor
jb
movs
dec
ds
cmp
jb
lods
sbb
push
aad
arpl
cld
xchg
out
into
daa
push
xchg
adc
and
in
out
pop
je
xor
popf
loopne
in
jno
ret
retw
sub
je
adc
call
mov
scas
adc
and
fidivr
push
cli
(bad)
loop
pop
lods
rcr
pop
push
(bad)
(bad)
mul
fptan
or
add
out
imul
pop
jmp
jnp
dec
out
cmp
sahf
inc
jno
lods
jns
xchg
ror
push
adc
mov
add
jne
or
je
fs
inc
cmp
test
clc
and
push
jmp
(bad)
mov
mov
cmp
and
arpl
call
into
popf
jp
pop
pop
aas
push
fcom
xchg
aaa
in
push
inc
vpcomuq
pushf
int
sbb
add
imul
leave
mov
sti
dec
lods
fadd
dec
dec
punpcklwd
(bad)
stc
xchg
mov
rcl
pop
mov
(bad)
retf
ret
imul
(bad)
sbb
stos
or
mov
cmc
mov
xor
xchg
push
sub
and
pop
repnz
mov
sahf
leave
cmp
stc
mov
dec
fstp
lea
push
jmp
adc
pusha
mov
lea
std
mov
lds
xchg
cdq
popa
dec
fadd
(bad)
push
inc
bound
jne
shr
xchg
pop
sar
movs
xchg
inc
in
mov
hlt
jge
cli
push
stos
or
xchg
aaa
shr
jmp
push
dec
fwait
pop
cmps
cmp
push
and
in
enter
push
cmp
ds
ja
push
pop
test
sbb
aam
sub
out
in
cmc
push
mov
sbb
ret
inc
push
jmp
(bad)
fs
xor
ins
shl
loope
sub
das
jl
pop
(bad)
mov
(bad)
adc
cdq
repnz
sbb
retf
push
xor
test
dec
add
loope
mov
jbe
pop
repnz
and
addr16
retf
jecxz
pusha
jmp
mov
fisttp
cmps
call
and
shl
sub
jmp
retf
jp
cmps
aaa
leave
or
mov
imul
(bad)
dec
mov
xchg
pop
xchg
mov
aaa
sub
outs
into
pusha
int3
xchg
rol
lahf
arpl
and
xor
lods
rcr
jo
hlt
into
mov
fnstenv
add
clc
add
repz
ja
outs
(bad)
add
fnstenv
push
push
pop
mov
add
mov
ret
xchg
jne
add
fnstsw
sar
fistp
fdivr
scas
or
push
(bad)
mov
ja
aaa
push
pop
outs
ret
mov
push
jns
xor
lock
adc
mov
popf
sbb
or
ror
enter
leave
ret
out
cmps
es
mov
mov
push
cmc
dec
add
movs
push
es
adc
xchg
or
shl
mov
test
das
lock
jo
mov
or
mov
push
add
pop
(bad)
in
adc
pushf
xor
push
gs
into
test
jl
in
enter
pop
(bad)
fcmovb
hlt
add
jne
aad
retf
adc
jbe
pop
ret
call
pop
adc
dec
dec
mov
sar
dec
inc
adc
hlt
fmul
jmp
pop
enter
stos
fwait
ins
mov
dec
push
mov
adc
test
test
sub
cli
or
add
out
imul
outs
adc
ds
imul
movs
bound
adc
mov
aad
pop
xor
fsubr
jb
add
retf
imul
sbb
add
and
mov
loopne
jb
mov
dec
push
aaa
test
test
or
pop
(bad)
xor
jbe
cld
scas
mov
adc
mov
and
(bad)
movs
retf
stos
pop
adc
in
push
popa
ss
mov
add
xchg
in
ds
jno
pop
jl
cld
ficomp
lahf
retf
imul
jmp
pop
add
jecxz
sub
dec
sub
mov
psrld
daa
lahf
mov
inc
or
mov
dec
out
rol
push
out
sahf
cmp
mov
call
mov
add
push
enter
mov
mov
fwait
sub
mov
lods
dec
mov
push
inc
xchg
ja
mov
icebp
movs
ins
stos
in
or
jbe
mov
and
jb
and
aas
and
icebp
jmp
mov
sub
fild
pop
cmp
mov
outs
call
pop
test
fisttp
pop
not
ins
sahf
mov
mov
retf
lods
push
jle
and
adc
arpl
cdq
add
sbb
adc
xlat
and
call
mov
retf
out
cmps
or
jg
pop
mov
sub
push
mov
cmp
mov
out
push
retf
mov
pop
shl
push
lahf
sahf
inc
jne
and
repnz
aas
and
jmp
push
pop
mov
push
mov
test
into
and
mov
adc
pop
cmc
pop
cmp
out
pop
mov
sub
out
(bad)
push
mov
push
js
cdq
test
mov
pusha
and
add
dec
jle
inc
add
sbb
scas
mov
push
sub
jge
mov
jae
sti
lahf
jns
inc
xchg
cld
mov
sub
jmp
fs
xchg
fisubr
sbb
sub
push
add
(bad)
shr
popf
jo
and
(bad)
mov
sahf
jo
xor
aas
dec
pop
leave
xbegin
mov
dec
xor
stos
ret
imul
lock
cli
jmp
aad
fdivr
pop
fist
pop
js
mov
mov
div
pop
jnp
fsubr
frstor
mov
and
mov
stos
adc
add
sbb
push
xchg
iret
inc
cmp
pop
popf
pop
call
push
into
cmp
xchg
xchg
jnp
xchg
lods
sti
pop
jecxz
sahf
xor
mov
inc
jnp
cmp
or
loope
add
cmc
js
ins
(bad)
mov
jne
pop
mov
xor
dec
fdivr
ret
ret
daa
out
adc
(bad)
push
jle
or
imul
cmp
call
je
addr16
fild
aas
stc
push
push
rol
ins
jns
and
outs
icebp
add
test
jecxz
loop
xchg
push
lea
dec
aam
mov
test
(bad)
popa
mov
data16
adc
push
cwde
aaa
xchg
push
jmp
arpl
retf
loope
adc
xlat
dec
or
jecxz
xlat
push
xchg
add
push
movs
cmc
push
scas
cmp
add
test
cwde
je
cwde
mov
and
push
mul
cdq
adc
mov
cld
into
(bad)
mov
adc
(bad)
mov
sbb
push
fidivr
mov
adc
out
ss
gs
shr
ror
push
sahf
xor
mov
loop
lea
xchg
je
adc
pusha
mov
(bad)
push
(bad)
push
xor
push
hlt
maskmovq
push
cld
and
mov
retf
xchg
xor
scas
fnstenv
pop
test
arpl
xchg
ins
scas
xchg
and
sub
dec
and
sub
lods
push
add
xchg
xor
inc
mov
fwait
jo
adc
test
les
stos
call
push
jp
shl
gs
cmp
mov
jae
stc
xchg
xchg
sbb
into
aad
mov
jecxz
fisub
pop
loop
mov
clc
and
mov
pop
mov
(bad)
xor
sbb
daa
adc
cwde
ret
push
icebp
jecxz
(bad)
adc
adc
out
fistp
dec
not
and
(bad)
cmp
test
leave
inc
jl
fwait
(bad)
fst
push
pop
jl
dec
inc
inc
pushf
dec
xor
xor
addr16
sub
pop
into
pop
push
aad
cmp
cwde
iret
add
call
pop
(bad)
mov
push
imul
sub
cmps
les
mov
loop
leave
inc
mov
inc
push
jbe
dec
jae
in
test
mul
dec
leave
imul
pop
mov
pop
push
lods
stos
and
sahf
xor
mov
ret
ja
out
inc
retf
addr16
test
cld
sub
fs
xor
fdiv
sub
mov
cmp
loop
dec
sub
sahf
out
inc
aam
add
mov
shr
jge
aaa
test
mov
(bad)
xor
lods
cmp
stos
shl
xor
add
push
in
mov
and
repz
xor
lea
mov
sub
jge
and
stc
ins
int3
sbb
sbb
mov
icebp
sub
outs
and
(bad)
sbb
adc
cwde
imul
fisub
fstp
test
test
out
(bad)
imul
mov
jnp
sbb
and
fwait
out
shl
in
sbb
add
sub
mov
in
dec
inc
push
mov
outs
push
popf
js
outs
jnp
pop
push
int
add
jb
pop
retf
xchg
dec
nop
push
push
pop
lea
pop
outs
daa
push
mov
and
pop
dec
jb
and
dec
imul
aaa
data16
sar
push
mov
clc
push
lods
sub
push
popf
pop
xchg
lahf
push
lds
test
push
lock
pop
jmp
or
(bad)
sbb
mov
add
inc
cmc
sub
fild
add
add
sbb
stos
cmp
xchg
sub
dec
shl
call
dec
out
int
dec
adc
into
cmp
fcmovne
add
sub
icebp
jmp
scas
sub
and
or
call
dec
sbb
push
or
jo
inc
pusha
add
add
dec
jbe
add
mov
jnp
movs
mov
stc
jge
jb
xchg
imul
add
sbb
mov
mov
sbb
data16
nop
add
retf
iret
(bad)
cmp
jl
fist
push
sbb
les
add
pop
mov
mov
fadd
inc
test
mov
ficom
xlat
inc
push
add
push
add
pop
adc
in
mov
mov
leave
or
mov
int
das
aam
push
jle
shr
adc
mov
stos
xchg
jl
mov
mov
call
fild
mov
ret
rcl
ror
test
pop
jnp
dec
mov
inc
mov
sbb
mov
sub
in
dec
sbb
mov
pop
mov
pusha
inc
sbb
sub
mov
ret
mov
ret
dec
and
inc
cmps
call
pop
cmp
sbb
movs
xlat
mov
cs
xchg
cmp
and
movs
add
mov
jbe
shufps
popf
(bad)
and
arpl
sbb
imul
jmp
cmc
fcomip
scas
push
les
mov
push
or
(bad)
pop
aaa
mov
sub
xchg
pushf
and
repz
xchg
nop
aam
jg
scas
jns
sub
or
sub
inc
sub
int
mov
call
mov
push
jnp
mov
sar
xchg
jge
xchg
lahf
bound
sub
mov
cmp
pop
in
mov
mov
mov
inc
fisubr
and
faddp
arpl
or
and
out
sub
mov
aas
mov
mov
sbb
cmp
into
ret
and
test
cmp
nop
sub
leave
sbb
xchg
xchg
push
bound
mov
push
xchg
retf
inc
add
repz
push
dec
stos
xchg
movs
or
dec
fsub
mov
stos
fimul
pop
and
daa
xor
cmps
and
and
ja
js
mov
push
call
mov
cmps
stos
je
xor
cmp
fisubr
jae
cmp
cmp
out
jmp
push
xor
push
and
xchg
into
sub
or
jmp
jnp
xchg
pop
push
adc
pop
cmc
out
fs
jae
cwde
mov
add
cld
sbb
fidivr
mov
lods
or
inc
shl
aad
xchg
dec
cmps
sub
or
cmp
add
jne
sbb
retf
push
mov
call
sub
fcmovne
iret
enter
push
ror
and
ins
sbb
or
fs
in
jnp
cwde
call
ja
and
pop
or
lea
dec
cmps
inc
and
loope
jnp
mov
(bad)
adc
addr16
push
jno
lods
adc
cmp
mov
jo
pop
pop
and
add
(bad)
pop
mov
retf
sub
aaa
js
int3
mov
mov
les
push
mov
ret
push
adc
mov
jb
sub
pusha
and
jns
sub
mov
(bad)
popf
push
ffree
pop
sbb
pusha
in
mov
hlt
cmps
cld
or
jg
sub
lods
xor
aam
cs
jp
push
add
repz
cmc
jg
or
fwait
inc
(bad)
mov
outs
adc
push
inc
das
dec
push
mov
out
mov
mov
add
ret
mov
and
adc
loop
sub
inc
cmp
and
fbld
fs
retf
test
in
push
mov
out
xor
inc
outs
loope
aam
retf
sbb
mov
adc
in
inc
jmp
push
fsub
pop
hlt
enter
ss
sub
in
fadd
pop
call
inc
cli
mov
adc
mov
pop
call
out
(bad)
jg
sbb
shr
push
rcl
add
mov
mov
dec
mov
lods
sbb
adc
fidiv
inc
aas
cmp
stos
sub
test
loopne
pop
int
dec
mov
out
shl
inc
jp
adc
stos
mov
out
adc
jp
mov
jbe
retf
test
jae
cwde
dec
or
adc
nop
inc
clc
movs
xor
inc
movs
shl
je
ja
push
fcom
outs
call
enter
call
push
or
inc
div
sub
add
mov
xchg
test
aas
(bad)
test
ret
call
aad
ror
lds
loope
and
jno
movs
add
in
pop
xor
pop
sbb
pop
cmp
js
lock
mov
pop
lds
aad
xchg
aad
xchg
hlt
xchg
cmc
(bad)
jbe
(bad)
mov
scas
adc
xchg
outs
addr16
push
or
loop
mov
popf
scas
or
ret
movs
mov
arpl
fstp
mov
adc
adc
test
jp
aaa
xor
jmp
aam
sub
sbb
xchg
mov
out
clc
mov
stos
jno
push
dec
leave
push
push
or
adc
enter
jge
mov
lock
push
sbb
jbe
retf
jb
mov
sbb
enter
lods
in
sub
inc
adc
idiv
mov
daa
xor
dec
pop
push
lods
bound
add
popa
and
or
icebp
xchg
test
das
icebp
(bad)
fisubr
aad
retf
jmp
jp
inc
mov
pushf
sti
mov
mov
pop
sar
outs
sub
and
push
outs
popf
push
cmp
add
scas
les
fdivp
out
mov
lahf
das
lods
jno
fisubr
out
(bad)
jmp
int
out
out
mov
gs
add
xchg
clc
cmp
in
jecxz
stos
lock
int
(bad)
ds
xor
mov
jecxz
push
int
sbb
push
icebp
mov
push
clc
xor
pop
in
adc
mov
data16
jbe
test
dec
iret
call
fld
std
std
in
add
mov
imul
sub
outs
push
icebp
inc
mov
ds
mov
inc
mov
add
mov
sub
test
fmul
fs
xor
shr
clc
or
outs
mov
mov
ret
les
js
in
or
sbb
es
mov
in
not
dec
push
or
daa
add
lods
mov
push
dec
push
mov
fwait
mov
mov
inc
lods
sar
pop
and
icebp
sbb
ss
test
add
addr16
arpl
(bad)
fcmovne
loop
(bad)
out
nop
mov
push
js
add
pop
xor
add
cmp
outs
ds
jbe
add
sub
aam
mov
gs
rcl
push
pop
jbe
push
inc
js
push
movs
call
pop
mov
and
sub
push
addr16
test
pop
stos
ror
lea
stc
ret
add
mov
daa
xchg
cmp
(bad)
jg
aas
scas
mov
stos
cmps
scas
arpl
ss
dec
ds
je
mov
ds
inc
pop
add
ret
pop
jmp
enter
test
jae
add
js
xor
cmp
mov
pop
stos
cmp
mov
adc
push
(bad)
jbe
pop
bound
sbb
mov
rcr
into
hlt
not
aad
scas
jle
dec
mov
lahf
pop
out
lock
adc
xlat
and
push
jne
ins
int
call
int
imul
jg
push
add
add
pop
(bad)
mov
into
dec
cwde
div
data16
jmp
jg
cmp
test
xchg
adc
jmp
les
test
cmp
mov
jg
retf
stos
xlat
aas
or
call
pusha
gs
stos
inc
xchg
icebp
jne
sub
pop
cmps
pop
push
xchg
dec
scas
ret
movs
dec
out
xchg
cs
mov
jbe
or
dec
jg
sub
xor
popf
ins
shl
(bad)
mov
ja
pop
mov
push
arpl
js
outs
pop
sbb
sbb
nop
adc
mov
or
add
sub
xchg
sub
jg
jp
pop
xchg
imul
mov
cmp
pop
and
or
dec
xchg
addr16
aas
pop
jae
hlt
lahf
xchg
adc
xor
out
xlat
ud0
imul
dec
sub
es
adc
icebp
sub
jb
fwait
xor
cmps
imul
je
or
jle
out
xchg
cs
mov
fucom
or
or
das
push
pop
jl
mov
fild
mov
out
xchg
dec
mov
dec
fcom
loop
and
in
mov
mov
in
mov
retf
mov
xorps
pop
aas
shr
les
je
daa
test
repnz
inc
push
inc
loope
jle
push
outs
js
mul
call
cmc
pop
pop
sub
cmps
pop
jno
mov
adc
jae
clc
shr
or
jecxz
adc
aam
sub
(bad)
xchg
push
mov
fwait
icebp
iret
or
stos
jg
sub
or
push
into
mov
bound
jae
jecxz
sbb
push
fstp
or
cld
mov
aas
in
mov
push
and
inc
or
sti
push
je
cmc
mov
cmps
add
mov
jmp
mov
mov
and
cmp
mov
call
pop
sub
xchg
mov
xor
jo
inc
shl
retf
push
dec
lahf
sub
add
push
or
mov
or
and
ss
xchg
mov
jb
fldcw
test
xchg
and
mov
add
push
push
adc
add
scas
(bad)
clc
std
xchg
(bad)
pop
int
and
pop
int3
fadd
imul
loop
cmp
mov
inc
sbb
ret
lahf
mov
push
outs
sub
add
xor
cmc
sti
leave
xchg
lods
cld
mov
cmp
fucom
test
sbb
jmp
aaa
daa
iret
loopne
icebp
sbb
add
outs
lds
sbb
test
mov
mov
pop
xchg
shr
push
xchg
add
or
and
retf
cmps
mov
sub
pop
adc
ss
mov
push
test
das
imul
mov
jmp
mov
cmps
out
addr16
mov
push
push
daa
(bad)
hlt
adc
das
hlt
inc
push
pusha
mov
cld
add
cmp
and
push
outs
and
icebp
sub
cmp
xor
ss
mov
and
jo
aaa
gs
jne
mov
adc
scas
imul
sbb
out
mov
mov
cmp
jo
or
mov
test
inc
popa
mov
and
and
jno
mov
(bad)
push
sbb
inc
mov
inc
jo
push
in
sub
or
sar
jae
lds
and
in
push
fldenv
or
jbe
scas
les
sub
xlat
rcr
sbb
outs
sub
and
sbb
jbe
gs
pop
cmp
cmp
(bad)
rcr
loope
fidivr
popf
not
add
pop
pop
ficomp
cmp
aaa
daa
sub
push
int
adc
mov
cmp
imul
dec
pop
lods
shl
xor
xor
mov
(bad)
xlat
xchg
lods
adc
or
fwait
call
mov
inc
mov
mov
das
retf
cmc
in
jecxz
jb
xor
stos
ret
sub
push
mul
push
hlt
popf
push
in
dec
bnd
cmp
icebp
nop
mov
outs
jmp
xchg
or
mov
lock
and
into
sub
and
jb
dec
call
popa
nop
cmps
and
mov
xor
rol
(bad)
in
push
outs
leave
movs
inc
cli
xor
inc
call
data16
jl
inc
mov
leave
mov
test
pushf
and
pop
out
outs
in
into
(bad)
mov
jne
adc
jmp
test
std
pop
daa
add
int
jmp
(bad)
jmp
lods
rcr
clc
pop
mul
outs
mov
(bad)
sahf
in
test
mov
and
jbe
daa
les
mov
dec
mov
rol
cwde
sbb
and
jno
or
into
repz
mov
sbb
mov
int
add
cmps
jl
jno
mov
fsubp
bound
xor
popa
xchg
jo
in
jnp
or
fsubr
dec
ds
mov
cmp
mov
stc
sbb
mov
aas
repz
sar
sbb
ss
cmp
shr
jecxz
hlt
adc
fisttp
bound
xor
pushf
mov
out
add
fs
pop
dec
pop
gs
mov
add
xchg
and
(bad)
xor
clc
test
je
out
push
inc
mov
std
daa
dec
clc
xchg
dec
lods
xchg
je
add
cli
in
stos
arpl
stos
fmul
outs
mov
rol
or
push
inc
sbb
lods
movaps
xchg
iret
js
fisub
stos
add
int
pushf
inc
cwde
inc
xor
call
pop
fcom
pop
xor
xor
sahf
pop
inc
mov
and
mov
adc
adc
pop
xchg
push
hlt
and
inc
fsubrp
push
xchg
stos
loopne
pop
pop
in
sub
mov
ds
bound
cmp
jg
dec
adc
or
mov
into
out
in
xor
mov
sub
int3
call
mov
(bad)
mov
jo
lds
stc
mov
dec
and
not
mov
iret
xchg
test
in
clc
rol
dec
cmp
jns
sbb
push
add
jg
and
push
lahf
xchg
dec
xor
xor
pop
pop
(bad)
pushf
jmp
xor
ret
inc
enter
pop
inc
fisub
int3
jl
push
lahf
pop
inc
stc
call
mov
fcomp
(bad)
test
mov
aam
ss
(bad)
mov
(bad)
into
in
add
jmp
outs
push
inc
mov
sub
inc
aam
retf
stos
stos
cdq
jns
mov
(bad)
dec
and
pop
xor
push
mul
inc
and
cmps
aad
jno
mov
ret
adc
rcr
cmp
and
ja
mov
(bad)
pusha
nop
mov
ret
cmps
ins
es
sbb
cmp
push
fcmovnu
call
fxam
js
stos
dec
je
xchg
cmp
iret
nop
pop
retf
lahf
(bad)
inc
or
sbb
fdiv
ja
int
mov
mov
jp
ds
push
icebp
movs
aas
dec
sbb
jo
sbb
cmps
and
lahf
jecxz
les
inc
cmps
fld
adc
scas
es
shl
mov
adc
(bad)
push
ret
and
jmp
mov
cmp
fs
and
inc
cmp
mov
fisttp
mov
inc
sub
cmc
mov
push
leave
pop
mov
xchg
or
jnp
out
jbe
mov
xor
fdivr
sti
jo
dec
dec
clc
test
rol
outs
mov
pop
dec
and
xor
ja
cmp
ss
out
xor
test
out
repz
stos
cdq
or
test
fst
lods
cmp
push
cs
aam
xchg
rcr
inc
nop
maxps
adc
and
mov
dec
scas
imul
icebp
mov
mov
and
pop
stc
inc
ficom
jl
cld
in
test
out
jmp
mov
pop
in
mov
out
jmp
dec
loopne
movs
jmp
pop
cdq
out
mul
fist
mov
push
inc
push
mov
imul
scas
out
ja
push
or
aam
ins
popf
js
sbb
dec
fs
inc
iret
add
outs
inc
cwde
and
rcr
data16
cli
nop
inc
cdq
movs
clc
(bad)
adc
mov
mov
ret
out
inc
fdivp
pusha
(bad)
fyl2x
sti
bound
ja
xor
test
mov
loope
in
jmp
pop
sbb
idiv
xchg
out
test
mov
pop
ret
lahf
and
add
in
test
mov
mov
add
push
xor
add
cld
ins
addr16
pop
aam
mov
fs
ja
es
dec
popa
push
dec
cld
sbb
stos
mov
aam
aaa
loop
out
fisttp
sbb
in
out
mov
bound
xor
cmp
loop
mov
jmp
xor
adc
add
jae
pop
stc
jno
pop
inc
lods
jno
jbe
push
mov
sti
pop
lds
shl
mov
pop
gs
jbe
in
pop
inc
inc
rol
ret
fild
cmp
sbb
mov
jl
add
and
inc
dec
dec
retf
loop
fiadd
shl
pop
mov
rcr
dec
repz
push
test
mov
out
ss
push
daa
fsub
shl
jle
stc
push
ja
ret
icebp
push
xchg
(bad)
fs
cmp
jecxz
mov
sub
and
jo
add
pop
inc
push
mov
ja
jecxz
add
jnp
pop
xor
mov
lds
arpl
mov
push
adc
shl
xlat
cmp
hlt
or
(bad)
adc
pop
sbb
cmc
das
add
(bad)
sub
mov
cli
adc
ficom
sbb
inc
ja
sbb
cmp
rol
shl
fmul
mov
add
(bad)
std
jne
rcr
les
or
ret
pop
ret
fs
push
xchg
mov
int
test
adc
mov
pop
inc
pop
les
(bad)
mov
jmp
push
jno
push
aad
xchg
jno
mov
cli
pop
add
js
xchg
jo
scas
jl
xor
dec
pop
mov
push
repnz
aaa
xor
mov
jne
shl
mov
(bad)
loop
scas
cwde
mul
(bad)
and
call
in
xor
js
dec
xchg
mov
or
aad
dec
scas
pop
mov
in
dec
aad
lahf
lock
pushf
adc
sar
lods
sbb
or
addr16
xlat
pop
push
push
mov
cs
cmp
add
or
mov
rol
mov
fisttp
cwde
lea
cli
(bad)
mov
sbb
repnz
div
neg
jno
pop
leave
mov
enter
cld
cmp
cwde
jecxz
inc
leave
scas
imul
mov
bound
jmp
mov
or
cmps
lods
cmp
cmp
jge
sbb
push
xchg
cmp
dec
sbb
fisttp
dec
dec
cld
cdq
clc
push
cld
push
pop
push
pusha
std
push
(bad)
and
mov
aas
inc
dec
daa
(bad)
int3
ss
scas
xchg
add
xchg
mov
and
xor
or
xor
vpaddsb
mov
rol
cmc
outs
dec
push
xor
sub
stos
dec
jo
push
in
adc
push
pusha
sar
call
inc
xor
movs
hlt
(bad)
enter
loopne
sbb
cmps
push
fld
into
add
and
out
inc
into
inc
(bad)
fsub
push
jge
pusha
pop
jge
loope
adc
es
xor
mov
out
xchg
aas
push
add
dec
retf
mov
pop
stos
pop
fldenv
xor
xor
in
jmp
sub
push
xor
mov
les
mov
xchg
imul
dec
or
push
add
(bad)
adc
fwait
or
pusha
repnz
arpl
outs
les
jle
shr
inc
arpl
js
gs
push
int3
mov
int
mov
pop
(bad)
ins
xor
cs
out
es
xlat
fsub
retf
out
jmp
push
inc
sub
push
int
xor
inc
mov
push
xor
and
pop
ja
cmp
fisubr
movs
imul
cmps
iret
clc
push
pop
cs
ret
shr
pop
mov
push
mov
sbb
xor
not
int3
push
cmp
sahf
pop
sub
jmp
ds
pop
mov
add
jp
fmul
mov
pop
dec
mov
scas
dec
int
(bad)
pushf
mov
jne
hlt
nop
jp
add
xchg
or
jae
xchg
or
mov
popf
mov
loopne
(bad)
mov
xchg
lds
cmp
imul
add
jns
popa
cmc
and
pop
jb
inc
mov
retf
mov
test
mov
or
inc
inc
cdq
dec
lods
cmps
pop
xor
aam
movs
shr
rcl
shl
push
loop
lods
fld
cmp
add
push
retf
cmp
mov
or
sub
fsub
mov
cmps
pop
(bad)
rcr
push
push
(bad)
jge
scas
sbb
xor
enter
xchg
mov
pop
imul
push
loop
xor
xor
cmp
mov
lahf
ss
imul
push
into
dec
ja
aad
add
mov
cs
imul
ss
cwde
or
ins
xchg
call
or
add
pop
and
jmp
rol
pushf
xchg
int3
scas
dec
mov
xchg
push
scas
pushf
rol
clc
adc
ss
out
leave
mov
(bad)
mov
xor
pop
inc
add
into
and
ja
(bad)
movs
idiv
dec
push
add
adc
adc
ss
cdq
in
pop
dec
cdq
repz
in
test
sbb
or
push
lea
jbe
dec
xchg
cmp
push
retf
dec
test
test
fidiv
popf
pop
mov
stc
xor
add
sbb
push
ins
out
lahf
xchg
outs
inc
jg
jns
sahf
mov
loopne
push
mov
shl
xor
jbe
adc
fwait
and
xchg
mov
xor
xchg
outs
add
ret
pushf
popf
loope
push
fwait
mov
sbb
push
call
xchg
xchg
cdq
leave
push
popf
lock
adc
sub
pushf
jp
cmp
pop
mov
bound
repz
xchg
adc
test
shr
xor
ret
mov
pop
repnz
das
jle
loopne
rcr
mov
dec
push
add
(bad)
cmps
sub
sub
xor
popa
adc
push
jbe
and
mov
mov
inc
pusha
popf
mov
vrsqrtss
push
xchg
data16
cli
inc
leave
push
aas
test
mov
fwait
int3
and
mov
inc
mov
pop
pusha
jp
hlt
ins
pop
into
out
ja
sbb
dec
les
jge
xchg
gs
mov
push
in
(bad)
cmp
mov
xchg
add
(bad)
sub
push
sub
leave
or
test
jns
aad
ret
ds
mov
xchg
push
pop
jo
xchg
loope
cmp
repz
jno
ja
out
fimul
mov
daa
in
add
sub
(bad)
test
sub
mov
and
push
push
inc
mov
xor
inc
test
jmp
xchg
and
or
(bad)
sbb
cmp
leave
push
(bad)
std
je
push
cmps
adc
test
repnz
fbstp
arpl
(bad)
fidiv
sub
push
xchg
(bad)
shr
lea
and
xchg
cmp
ins
pop
pop
imul
sub
lock
dec
and
push
adc
pop
fistp
popf
stos
xor
addr16
test
rol
je
popa
and
enter
das
xchg
dec
cmps
pop
mov
add
pop
dec
inc
popa
mul
push
shl
jb
push
sub
aaa
mov
cmp
repnz
and
lods
gs
xor
xor
add
pop
xchg
shl
out
in
xchg
fwait
(bad)
xchg
into
enter
mov
jp
je
(bad)
mov
cli
dec
mov
adc
jg
fld
and
bound
shr
xchg
xchg
bound
jmp
jno
jbe
pop
loopne
push
dec
sub
lea
in
repz
call
lock
xor
or
in
inc
sbb
or
inc
push
(bad)
into
rcl
pop
ins
and
das
imul
xchg
mov
(bad)
fisttp
add
shr
mov
xor
and
sbb
xor
fldcw
and
inc
repz
mov
inc
popa
fsub
dec
mov
test
lds
mov
jge
jg
dec
sti
movs
dec
(bad)
xor
repz
dec
outs
iret
hlt
pop
push
call
and
mov
adc
shl
pop
inc
popf
loope
push
popf
es
push
add
cdq
aas
jnp
int
popf
sub
and
hlt
pushf
fstp
ja
lods
push
popf
xchg
mov
not
lea
retf
popa
cmp
push
add
ja
shl
mov
test
push
fnstsw
or
push
push
popa
retf
popf
xchg
not
sahf
mov
dec
pop
mov
push
xchg
lock
iret
(bad)
xchg
mov
and
dec
add
adc
mov
pop
test
mov
test
dec
ds
js
inc
test
into
xor
mov
xlat
das
pop
fst
inc
scas
mov
pop
jmp
cmp
adc
dec
enter
pusha
jne
clc
(bad)
push
fstp
mov
or
cmp
scas
mov
out
and
jo
mov
(bad)
out
psllw
cs
lods
int
xlat
es
pop
in
icebp
clc
jg
int3
out
xchg
fcom
add
push
or
mov
movs
add
test
push
jns
add
out
add
(bad)
add
jbe
fdivr
fld
jle
sbb
stos
std
sub
repz
gs
(bad)
adc
jp
pop
fidivr
movs
mov
(bad)
cmp
inc
pop
xchg
inc
xlat
(bad)
nop
adc
cli
fistp
retf
call
xor
mov
(bad)
push
rcr
fwait
xchg
fcmovu
stos
fstp
and
mov
test
leave
xor
lock
cs
push
aam
clc
mov
sbb
jmp
mov
ja
mov
jno
jp
sub
jno
mov
cmp
shr
pusha
leave
in
iret
shr
neg
retf
scas
or
or
adc
call
xor
cld
ja
mov
jns
jg
mov
cmp
out
sbb
lods
push
sbb
js
lds
or
lods
mov
mov
in
push
cld
xlat
pop
sti
popf
cmc
outs
mov
or
pop
and
adc
call
or
sbb
dec
and
std
push
int3
cmp
sub
stos
push
cmps
push
sbb
push
dec
in
add
pushf
je
popa
iret
aaa
sub
mov
cmps
outs
dec
fidiv
sar
sub
lock
mov
jg
inc
mov
stos
dec
push
ja
les
adc
add
loope
lahf
xor
(bad)
(bad)
clc
xchg
test
xor
fst
test
pop
mov
test
lock
repnz
cmp
or
js
dec
into
xchg
push
pop
push
xor
std
add
stc
push
jmp
in
stc
outs
fldcw
inc
pop
mov
sub
and
mov
in
sub
repnz
and
add
je
mov
arpl
aas
jns
and
add
push
mov
and
jmp
cdq
test
dec
(bad)
mov
fdiv
add
inc
cdq
in
popf
xor
aam
or
je
pop
add
stos
dec
mov
push
jnp
xor
out
retf
mov
test
ja
retf
leave
cld
ds
xor
call
or
sub
adc
xor
dec
lldt
or
adc
outs
lods
dec
les
jmp
dec
fs
adc
call
imul
test
cwde
xchg
and
dec
push
and
sar
mov
add
jnp
inc
aas
cmp
test
bswap
jo
and
or
(bad)
and
and
pop
retf
cmp
inc
push
call
sbb
cmp
sbb
push
adc
add
xor
dec
sub
fwait
ins
push
mov
std
sbb
les
sub
mov
dec
add
cli
dec
mov
jmp
adc
mov
xchg
leave
aaa
jb
cmc
adc
(bad)
rcl
fisttp
mov
pop
mov
rcl
(bad)
pop
or
jo
pop
cmp
dec
lahf
test
jp
push
adc
jno
pop
mov
fyl2x
mov
mov
mov
enter
lods
loop
xor
mov
out
leave
aam
add
pop
repnz
js
pop
call
adc
dec
shr
sbb
fdiv
(bad)
rcl
popf
mov
jp
pusha
jge
mov
and
adc
inc
leave
stc
and
jns
retf
retf
scas
dec
fidiv
out
stos
nop
inc
shl
pushf
cmp
xchg
and
pop
ret
or
xchg
scas
xchg
cld
dec
retf
cdq
push
mov
add
jle
call
lea
inc
jg
inc
fadd
xchg
or
dec
(bad)
outs
retf
scas
xchg
xor
int
xchg
push
enter
sbb
xor
fwait
sbb
jb
xor
dec
dec
lods
push
rcl
movs
pop
and
cmps
dec
add
inc
cmps
xlat
cmp
out
stos
mov
aaa
xchg
test
jge
fstp
mov
cli
popa
push
jbe
pop
push
aaa
adc
shl
lidtd
xor
ins
test
xor
sub
(bad)
adc
(bad)
adc
xor
add
in
pop
es
mov
popf
mov
rcl
ja
dec
ins
dec
pop
and
push
int3
cmp
pop
cdq
push
adc
jae
cmps
repnz
add
and
add
shl
fild
adc
ins
gs
inc
dec
out
cs
dec
repnz
mov
fs
xchg
fcomp
mov
sbb
ja
pop
mov
sahf
repz
sahf
push
cmp
shl
cmp
leave
mov
sahf
adc
xchg
jp
adc
inc
jb
push
push
imul
xor
mov
lahf
sahf
push
pop
pushf
sub
(bad)
inc
popf
jp
es
pop
pop
enter
shl
sub
pop
pop
and
cdq
and
out
pushf
cmp
cmp
(bad)
movs
sahf
pusha
xchg
jne
jnp
sbb
inc
rol
push
dec
rep
fdivr
aaa
fcom
ror
mov
jmp
mov
cmp
or
ret
(bad)
cmc
shl
(bad)
cmp
(bad)
leave
daa
inc
cwde
gs
jae
pop
(bad)
movs
outs
jl
fdiv
(bad)
dec
mov
ret
push
or
lds
adc
mov
jbe
out
in
mov
mov
mov
rol
rol
cmp
xchg
cmc
repz
sub
inc
sahf
out
xor
mov
pop
das
sahf
jbe
ret
add
repnz
test
(bad)
sahf
cmp
cmp
inc
loopne
mov
rcl
ja
mov
fist
imul
jmp
out
js
adc
shr
mov
jmp
sbb
xchg
xchg
mov
pop
xchg
cwde
hlt
das
aas
test
neg
mov
lock
inc
sub
sti
fs
test
movs
push
push
sub
sti
leave
sbb
outs
mov
add
mov
sub
stos
mov
bound
mov
pop
or
dec
retf
cdq
pushf
out
push
loop
pop
mov
arpl
cmp
stos
(bad)
mov
in
arpl
dec
inc
inc
pop
in
cmp
lahf
xlat
add
and
popf
mov
cmp
call
icebp
pop
ins
push
push
jbe
jmp
cmps
jmp
cmp
imul
adc
scas
ja
inc
int
or
xlat
mov
mov
adc
sbb
push
xchg
mov
xlat
rcl
adc
sar
cli
xchg
pop
mov
sub
ficomp
lock
call
xchg
jo
pushf
cwde
dec
mov
(bad)
int
xor
pushf
mov
ret
mov
fcmovne
mov
sbb
fsubr
call
mov
push
cdq
mov
(bad)
ins
pop
inc
adc
mov
xchg
fild
shl
fs
inc
jb
add
fdiv
push
add
(bad)
rcl
cld
sub
inc
stos
jmp
or
add
imul
das
cmp
cmp
mov
pop
xchg
outs
xor
sbb
rol
dec
stc
daa
jmp
mov
test
mov
add
out
retf
stos
movs
lea
pop
jne
fwait
pshufw
mov
inc
xor
push
cmp
pop
xchg
pop
pop
cmp
cmp
dec
mov
icebp
in
test
cmp
inc
inc
push
fcom
fs
inc
adc
cmp
or
ret
adc
xchg
inc
add
or
cld
inc
ins
pop
(bad)
shl
xor
dec
ins
xor
and
leave
fmul
mov
test
bound
call
dec
movs
push
call
retf
loope
mov
loopne
(bad)
cli
mov
jb
dec
jbe
lods
or
loopne
std
mov
inc
pop
adc
retf
mov
aas
cld
xor
xlat
add
xor
jp
sbb
inc
(bad)
loop
stc
adc
shr
dec
pop
lods
inc
add
mov
push
pop
js
(bad)
mov
outs
inc
or
or
and
test
adc
xchg
or
mov
fimul
and
iret
jns
retf
movs
hlt
call
daa
pop
clc
ins
arpl
push
rcr
fmul
pusha
sbb
pop
hlt
lea
mov
outs
dec
mov
icebp
sti
fcom
bound
jecxz
jle
jae
stc
xchg
adc
mov
dec
mov
xchg
adc
push
fiadd
(bad)
adc
add
retf
aas
fstp
inc
jnp
out
and
push
ss
xor
movs
push
xor
cmp
pop
je
das
bnd
cmps
(bad)
movs
xchg
imul
int
mov
jl
sbb
push
add
in
mov
mov
pop
mov
mov
add
or
add
stos
push
push
jl
out
inc
sbb
cmps
push
test
jmp
into
cmp
in
pop
dec
push
enter
sahf
fidivr
jno
mov
add
mov
dec
jmp
test
mov
mov
xchg
and
adc
das
jle
cmp
mov
mov
fxch
(bad)
stc
xor
fs
cld
out
or
pop
pop
imul
mov
pop
mov
pop
(bad)
out
push
jb
rcr
and
mov
out
in
js
shl
fdiv
js
and
pop
xchg
or
(bad)
mov
test
das
xchg
pop
pop
dec
repz
jmp
push
push
aaa
lahf
lock
iret
icebp
or
or
and
dec
test
push
repz
cmps
jo
in
push
jnp
push
vpunpckhwd
adc
test
int
xor
mov
cmp
(bad)
mov
test
mov
sahf
jb
xchg
jl
rol
cmps
jmp
addr16
scas
out
push
aam
cmps
pop
jp
jmp
pop
imul
push
push
aad
mov
and
repnz
xchg
frstor
iret
dec
test
call
fsubr
cld
sub
popf
lods
and
dec
(bad)
mov
ja
pop
call
cmp
xlat
sahf
(bad)
cwde
fisttp
jl
xor
fwait
lock
stc
ds
lods
shr
fwait
hlt
fs
or
data16
adc
mov
dec
lahf
std
jns
popf
mov
in
fisub
dec
cld
arpl
add
add
(bad)
jl
jno
mov
test
ja
std
cmp
and
and
leave
pop
lea
mov
cmc
add
jl
js
in
les
loope
in
mov
out
arpl
je
ret
pop
dec
xchg
lahf
call
repz
xor
stos
and
mov
inc
cmp
pop
fisub
xor
adc
cmp
mov
in
xchg
mov
addr16
adc
mov
mov
jp
mov
icebp
xchg
(bad)
mov
fs
cmc
cmp
ja
out
sahf
mov
inc
push
stc
or
jg
xor
arpl
add
outs
inc
pxor
test
dec
jbe
pop
or
cmp
mov
cdq
cmp
ret
sbb
fisttp
popf
repnz
call
out
call
cli
lds
daa
shl
jne
retf
push
rcr
mov
jmp
sbb
mov
mov
aaa
lahf
mov
mov
ror
mov
call
dec
xchg
lea
icebp
inc
out
sub
xchg
clc
add
jle
add
or
out
into
movs
mov
aaa
test
enter
cli
inc
cmc
xor
and
sti
add
lahf
test
xchg
shr
sub
pop
std
mov
pusha
bnd
sub
or
int3
push
xchg
xchg
inc
cmp
test
icebp
xchg
xor
cmp
push
or
in
or
mov
push
into
mov
adc
and
dec
mov
retf
adc
and
(bad)
pop
popf
(bad)
sub
jmp
sub
jno
int
sbb
lea
sbb
inc
push
and
icebp
and
fwait
jmp
fs
lods
inc
cmps
push
es
inc
mov
rol
ds
adc
movs
(bad)
cmp
out
inc
in
ds
add
nop
push
lods
aaa
fld
pop
outs
iret
repz
xor
out
shl
fistp
sbb
loop
cmp
rol
dec
repnz
push
sar
jp
shl
fimul
ins
leave
out
jg
xchg
xor
mov
adc
inc
pop
dec
int3
fs
push
jge
call
mov
dec
sbb
enter
aaa
jecxz
js
pusha
push
mov
loopne
xchg
xchg
das
loope
pop
imul
test
xor
cmps
mov
xchg
fwait
and
jnp
pop
cdq
imul
push
cld
add
test
or
xchg
inc
imul
sbb
aad
adc
data16
fdivr
lods
xchg
ins
int3
sub
mov
pop
inc
fdiv
cmp
cdq
imul
dec
repz
(bad)
ins
cmp
and
push
sar
jb
jmp
test
aad
sar
or
add
stc
sbb
inc
add
add
retf
int
aad
call
cmp
ret
loope
popa
scas
adc
pushf
rcl
pop
xor
lods
outs
add
enter
mov
dec
aad
inc
adc
ins
mov
sbb
test
jmp
jmp
jl
jge
adc
mov
cmp
ins
ja
and
xchg
jb
rol
pushf
outs
mov
cmp
dec
pop
int3
call
sbb
call
out
push
and
jo
xor
int3
nop
lahf
pop
adc
enter
cmp
cmps
vmread
sbb
xchg
xor
mov
xchg
and
test
pop
test
jg
lahf
cvttps2pi
fild
enter
inc
not
lods
mov
sbb
shl
(bad)
test
fdivrp
inc
cwde
in
ins
sub
outs
and
cmp
pop
sub
push
mov
test
cs
xor
addr16
push
cdq
test
push
arpl
call
fiadd
mov
pop
test
lahf
sbb
daa
stos
pusha
dec
pop
mov
add
mov
mov
mov
int
into
outs
or
mov
int
or
test
sbb
adc
dec
jmp
das
inc
dec
mov
es
jae
mov
mov
mov
stos
aam
iret
ror
or
mov
sub
and
(bad)
lock
stos
mov
ds
jecxz
leave
jmp
inc
out
fucom
loopne
retf
inc
popa
les
xchg
jmp
mov
mov
mov
fisttp
xchg
and
out
std
fisttp
or
sub
dec
and
cmp
inc
js
mov
inc
ins
xor
mov
pushf
lds
push
cmp
loopne
sub
push
pop
in
in
and
addr16
out
jae
retf
pop
mov
xchg
pop
sub
lds
and
jle
cmp
add
loop
out
sub
xchg
push
hlt
stos
mov
imul
mov
push
cwde
cmp
aam
aad
adc
icebp
lods
mov
xchg
outs
push
test
mov
rcr
dec
mov
mov
dec
in
imul
pop
out
fidiv
gs
fld
movs
je
call
dec
outs
xchg
sar
fld
push
jbe
mov
ins
ds
ss
setp
mov
lds
lahf
out
shl
mov
add
scas
movs
call
jae
data16
cmp
sub
cli
dec
jo
pop
rcl
jmp
mov
and
ror
loopne
jbe
int
and
dec
neg
pop
jge
sub
loopne
ror
lds
aaa
enter
pop
xchg
rcl
out
pop
aas
ja
xchg
pop
sbb
ss
mov
(bad)
xchg
aaa
jb
jmp
fnstsw
push
sub
bound
push
sub
adc
jmp
ins
leave
ss
loopne
out
cmps
pop
test
aad
jo
stos
repz
mov
lock
in
jbe
or
scas
mov
mov
cdq
cs
jmp
movs
mov
cmp
jle
xchg
mov
(bad)
pop
mov
jae
adc
shl
fstp
rcl
inc
out
mov
jno
pop
shr
(bad)
loopne
and
cwde
(bad)
xchg
pop
icebp
jp
pop
int3
das
repz
inc
push
fistp
and
and
mov
mov
push
add
in
pop
movs
mov
mov
push
and
or
inc
sbb
in
cmp
xchg
push
gs
test
nop
push
lods
js
sub
(bad)
shl
xchg
mov
addr16
mov
pop
pop
jns
movs
pushf
or
cmc
imul
adc
dec
push
add
dec
aaa
jl
and
ss
push
add
push
retf
lds
cwde
push
into
test
movs
pop
push
ret
ins
aas
fs
and
push
test
xchg
mov
ret
jae
jns
inc
mov
gs
data16
jecxz
data16
enter
fs
aam
xchg
je
jnp
(bad)
div
pop
mov
sub
adc
lods
jge
imul
inc
add
pop
loope
xor
rcr
jo
sti
sbb
inc
fiadd
mov
pop
xor
pushf
push
pop
push
cdq
lods
pop
(bad)
xchg
gs
das
xchg
scas
dec
mov
cdq
aam
outs
cmp
push
pop
xor
dec
mov
adc
sti
mov
(bad)
(bad)
jo
mov
sbb
loopne
sbb
xchg
popa
dec
outs
jne
loop
test
pusha
lock
and
push
dec
push
xchg
jns
test
push
mov
cli
je
repnz
add
pop
pop
push
adc
cmp
std
aas
jne
std
(bad)
inc
push
inc
jnp
xchg
jge
adc
loopne
jg
cmps
cwde
push
sub
scas
scas
mov
mov
fidiv
sub
scas
push
mov
sbb
mov
aad
sub
ds
enter
push
mov
btc
movs
jo
push
jp
adc
xchg
popa
ds
mov
(bad)
aaa
dec
push
sbb
add
nop
repnz
pop
adc
mov
(bad)
push
in
sbb
jecxz
test
pusha
jo
jecxz
js
(bad)
cli
int
stos
ins
sub
jae
jnp
leave
adc
jle
lock
scas
xchg
mov
or
mov
test
mov
pop
push
in
mov
jo
arpl
in
jl
test
nop
dec
mov
int3
add
cli
adc
mov
add
adc
retf
int
mov
lock
mov
cmp
movs
pop
js
jmp
push
call
ds
pop
xlat
pop
rol
xchg
bound
or
out
pushf
sub
cmps
xor
scas
push
push
xor
mov
inc
ficom
inc
rcr
inc
imul
je
xchg
ins
fdiv
inc
xchg
outs
(bad)
sbb
out
push
dec
jo
pusha
mov
inc
mov
iret
push
(bad)
cwde
xchg
stc
lds
pop
adc
mov
sub
lahf
int
sbb
mov
mov
dec
scas
sub
es
pop
sbb
jnp
pop
push
sub
or
cld
mov
jae
xchg
jo
xchg
outs
addr16
inc
out
imul
inc
mov
add
adc
pushf
mov
ret
sar
test
inc
push
xchg
inc
mov
div
in
loop
das
fs
cwde
retf
push
cmp
test
mov
lods
data16
iret
stc
dec
repz
outs
call
adc
xchg
sub
or
aas
push
sub
jno
enter
inc
int3
popf
pop
and
and
(bad)
push
sbb
mov
push
shl
aas
add
gs
fidiv
or
fistp
mov
jmp
sbb
fsub
or
pop
adc
out
and
xchg
and
dec
ret
adc
mov
fs
pop
push
pop
adc
aaa
adc
xor
push
push
test
das
mov
stc
push
sub
pop
and
fadd
jmp
out
popa
jns
cmps
into
push
push
mov
int
adc
push
sahf
data16
dec
push
sbb
test
xor
pop
mov
cmp
xor
retf
test
add
clc
fistp
pushf
shl
push
aas
cmp
xchg
push
sti
inc
scas
ds
pop
lods
hlt
pop
mov
cwde
fistp
int
push
ss
jp
movs
sbb
or
or
out
jns
scas
sbb
scas
adc
or
pop
arpl
adc
bound
add
jle
cmc
dec
iret
push
enter
xchg
jecxz
scas
cmp
test
test
in
and
ss
aad
pop
fldenv
cmp
cmp
adc
push
push
or
or
jmp
jno
fnstcw
ins
es
inc
xlat
jge
fstp
fnstsw
sar
dec
cmp
enter
cli
push
xlat
inc
mov
inc
pop
sub
xchg
jge
dec
and
jns
or
mov
leave
fiadd
xor
addr16
sti
sub
lar
inc
add
dec
and
jbe
imul
(bad)
inc
mov
cli
call
dec
mov
jnp
xchg
cmc
xchg
test
sbb
cmp
pop
sub
add
xlat
imul
cmp
sub
jecxz
cdq
cdq
inc
xchg
sbb
mov
retf
jmp
ds
fdiv
or
or
loopne
sti
jbe
shl
push
inc
pop
(bad)
fadd
enter
jae
shl
ficomp
cmp
in
mov
jne
pop
sub
xchg
pop
(bad)
jnp
fcomi
xchg
mov
(bad)
rep
cmc
loopne
xchg
das
movs
ror
xor
pop
pushf
into
cmp
or
add
aaa
cmps
aam
xor
sub
push
int
repz
nop
je
jl
adc
jb
mov
bound
pop
adc
mov
pop
mov
xchg
pusha
cmps
xchg
sub
stos
test
push
inc
cmp
sub
sub
(bad)
and
and
ins
fst
mov
cdq
or
fimul
test
inc
ss
je
xchg
dec
sub
test
scas
cmps
push
jl
inc
aas
je
sub
pop
jmp
and
rcl
jbe
pop
mov
out
cdq
sub
shl
inc
jne
jmp
test
cmp
fild
fist
ds
jmp
and
jge
cmp
xor
jmp
jl
(bad)
loopne
ret
int
addr16
sbb
cmp
or
jp
mov
push
push
push
mov
jne
dec
repz
mov
dec
(bad)
or
fcmovu
and
ret
and
jg
das
or
jecxz
sbb
mov
bound
vcvtpd2dq
in
fdivr
pop
gs
scas
es
pusha
cmp
outs
pop
cwde
popf
loope
clc
lods
or
hlt
popf
cs
inc
adc
hlt
enter
int3
dec
gs
into
push
test
xchg
or
inc
add
dec
cmp
and
xor
loope
retf
les
mov
mov
idiv
and
sub
call
adc
pop
mov
sub
sti
mov
cdq
mov
rol
fidiv
scas
adc
mov
xchg
adc
or
cmp
std
pushf
sbb
xlat
mov
fild
cmp
es
add
xor
js
jg
xchg
pop
out
popa
cld
std
test
jbe
xor
std
cdq
push
scas
mov
or
icebp
mov
sub
cli
mov
cmp
mov
mov
dec
fimul
adc
idiv
cs
stos
bound
mul
call
ficomp
into
dec
add
clc
jmp
hlt
pop
into
xor
in
cmps
sbb
xor
mov
push
(bad)
or
(bad)
mov
out
jnp
mov
popa
dec
or
fsubr
retf
cmp
jo
iret
bnd
add
jno
test
addr16
call
sbb
lods
pop
adc
add
test
push
mov
jecxz
push
cmp
fmul
sbb
pop
std
and
mov
sub
es
fwait
into
sbb
xor
or
add
xchg
call
and
or
mov
ds
xchg
sbb
(bad)
mov
es
leave
ret
pop
call
xor
in
dec
in
push
or
add
ins
push
aam
push
inc
sub
cwde
cwde
adc
jbe
imul
jns
and
mov
inc
leave
nop
int3
shl
push
nop
mov
jnp
sar
popf
pop
sbb
out
dec
or
mov
jg
call
mov
mov
mov
test
bound
rcr
or
jb
cmc
imul
popf
mov
into
adc
or
cmc
popa
add
sub
test
cmps
stos
xlat
inc
jmp
cmc
fs
clc
retf
shl
add
mov
sub
imul
xchg
mov
and
mov
cmp
mov
lods
(bad)
jmp
mov
push
mov
scas
xor
aam
dec
or
add
lds
sbb
fwait
sbb
daa
das
mov
lds
test
rol
icebp
ror
aas
add
xor
in
xchg
and
fstp
movs
inc
mov
out
rcr
jmp
add
sub
lods
xchg
mov
sub
dec
int
loopne
jle
xlat
mov
xor
fcmovbe
std
dec
pop
xchg
sub
or
lock
cmp
fwait
lods
fcmovu
push
jp
xchg
imul
int3
sub
(bad)
xor
jb
push
dec
dec
adc
inc
les
sub
mov
in
jo
mov
adc
cli
mov
inc
xchg
jne
or
js
cwde
xchg
pop
(bad)
pop
je
cmps
aam
cli
cli
ins
dec
sbb
cmp
mov
fisttp
jg
repnz
(bad)
imul
pop
jg
push
or
enter
pop
inc
cmp
sbb
in
mov
sub
push
ja
loope
jge
repz
sbb
fst
dec
scas
outs
dec
ja
imul
int3
mov
je
inc
xchg
mov
inc
psadbw
fsubp
pop
mov
sbb
or
jmp
xchg
cwde
adc
movs
cmps
cmp
dec
int3
mov
out
and
inc
and
mov
or
pop
pop
std
mov
mov
xor
push
jp
dec
pop
retf
leave
std
adc
jne
push
add
add
in
and
outs
pop
xchg
inc
in
cmp
xor
ffreep
pop
push
jg
ds
aam
hlt
mov
dec
repnz
sub
sbb
fisubr
inc
and
pop
hlt
cli
push
push
adc
sub
add
shl
and
sar
cmp
adc
xor
mov
(bad)
clc
fsubr
int3
jno
dec
repnz
mov
mov
test
add
jmp
xor
jp
cmps
push
test
loop
mov
mov
cmc
stc
xchg
out
jge
cmp
mov
or
cli
sub
les
int3
(bad)
xchg
xor
lock
paddusb
aas
leave
ds
fstp
adc
test
fild
in
and
mov
es
inc
mov
int
xchg
out
sbb
in
push
sahf
loope
pop
sub
clc
cli
sbb
nop
outs
pop
ss
jne
jg
xor
sub
pusha
add
pushf
dec
cld
int
and
pop
and
inc
jle
sti
ja
call
sbb
std
push
mov
cmp
hlt
call
sbb
adc
leave
inc
popa
sbb
jns
xchg
dec
xchg
test
push
sbb
mov
cs
jle
push
mov
cmps
pop
or
pop
aaa
adc
dec
out
sahf
cmp
mov
shl
bound
or
sbb
loopne
sbb
mov
mov
jbe
aam
inc
data16
pop
xor
or
xor
daa
pop
dec
push
shl
push
fistp
push
ins
add
stc
test
or
sbb
dec
int3
cli
dec
repz
cmc
and
scas
sub
jae
shl
pushf
or
jecxz
cmps
push
push
js
popa
lahf
push
das
aam
xchg
or
push
out
scas
jo
adc
mov
xor
imul
add
adc
jno
mov
dec
ret
nop
or
push
scas
add
xchg
cld
push
cmp
loope
call
retf
push
cmp
mov
nop
mov
push
jmp
loop
cmc
xor
lock
aam
jl
xchg
mov
std
jecxz
aad
call
xor
pop
jmp
call
and
adc
je
xor
repz
add
adc
call
push
popf
sub
jmp
jns
jle
out
mov
test
inc
pop
add
push
xlat
mov
xor
or
int3
add
mov
and
loope
popa
cld
(bad)
test
ins
out
les
in
push
cli
pop
call
stos
div
jne
popa
mov
mov
ret
pop
es
shr
and
movs
jae
setg
daa
sbb
pop
sub
push
mov
sbb
int
inc
add
sahf
dec
rcr
ret
(bad)
popa
cli
lea
push
mov
imul
jbe
jl
jmp
rol
movs
inc
popf
mov
jg
sub
dec
pop
je
imul
sub
dec
(bad)
cmp
sbb
dec
ss
pop
dec
das
test
push
and
test
inc
jnp
mov
movs
add
call
and
inc
cmp
adc
add
imul
add
mov
loope
pop
push
inc
js
int
jecxz
adc
sub
cmps
aad
in
(bad)
scas
or
sub
sbb
push
aam
(bad)
sbb
or
fsubp
dec
sub
cmp
les
and
dec
inc
shl
push
sub
jnp
xchg
leave
aas
dec
scas
test
clc
mov
mov
in
enter
test
pop
out
fidiv
add
imul
rol
test
push
xchg
loop
ins
out
pop
sbb
fadd
(bad)
punpcklwd
xor
xchg
push
lods
test
sbb
imul
aam
mov
pop
mov
jmp
inc
sbb
std
rcr
or
add
fs
jp
outs
mov
arpl
add
xor
push
sbb
outs
dec
jl
scas
dec
dec
cmc
cmps
popf
xchg
mov
and
jnp
and
mov
rcr
(bad)
mov
sub
mov
mov
call
out
ds
jl
mov
mov
or
jno
ret
fdiv
test
es
or
mov
sahf
push
leave
sbb
inc
repnz
(bad)
pop
xchg
jne
and
inc
fst
sub
std
add
add
dec
pushf
or
leave
pop
adc
adc
pop
outs
shl
push
int
ret
bound
xchg
test
sub
mov
sbb
mov
mov
pop
add
scas
lock
ret
add
int3
or
sub
dec
int3
sti
adc
pop
and
push
lea
push
lods
movs
stos
inc
xchg
test
or
pop
mov
stc
push
(bad)
ret
bound
inc
ss
lahf
mov
adc
lock
(bad)
call
aad
mov
pop
xchg
movs
xor
xor
fdivr
std
repz
add
or
ins
lods
push
rcr
add
or
ud1
sub
xor
(bad)
jmp
jge
jae
push
neg
cli
mov
out
mov
sbb
imul
add
mov
aas
sub
push
iret
add
dec
adc
in
mov
push
out
add
cmp
lds
add
mov
adc
cmp
gs
xchg
jno
popa
pushf
scas
jno
cld
jp
jnp
dec
mov
mov
jnp
add
scas
clc
std
mov
or
push
cmc
push
jo
rol
in
mov
ret
arpl
ficomp
sti
fstp
mov
movs
cmp
rol
jge
dec
loop
mov
xchg
fs
test
sbb
jns
std
jae
sub
inc
jmp
push
mov
sbb
fwait
imul
dec
aad
jne
mov
mov
cs
hlt
sub
pop
mov
cmp
or
adc
cwde
jae
mov
dec
mov
es
xchg
out
push
adc
cmp
add
loope
cmp
mov
inc
push
or
aaa
jo
mov
not
pop
les
add
(bad)
adc
fsubr
loopne
xchg
fimul
push
cmp
movs
push
adc
shr
cdq
cs
sub
pop
mov
inc
mov
aas
push
test
or
and
lea
(bad)
imul
cmp
cli
sub
xlat
sbb
leave
jno
inc
mov
les
sahf
dec
cdq
sbb
dec
movs
push
aam
inc
jp
pusha
sar
lods
fldenv
rcl
jmp
add
jae
scas
fisubr
ror
cmp
scas
retf
or
ror
mov
out
push
clc
mov
cmp
cld
stc
dec
and
mov
pop
cmp
xor
cmp
add
and
xor
pop
mov
inc
add
xchg
mov
bound
stos
inc
add
pop
(bad)
jnp
cld
ins
(bad)
cli
test
arpl
jb
inc
cmp
adc
inc
cmp
pop
frstor
stos
test
sub
dec
cmps
push
ficomp
mov
call
xor
aas
addr16
inc
jge
in
movs
retf
(bad)
in
jnp
mov
iret
(bad)
sahf
and
xlat
cmps
(bad)
pop
in
sub
inc
ja
sbb
mov
mov
xor
(bad)
mov
dec
clc
mov
daa
enter
pop
mov
fwait
jb
cmp
jno
(bad)
xchg
jp
jmp
xor
hlt
jno
dec
pusha
aas
mov
mov
or
jno
mov
pop
fmul
adc
sti
sbb
outs
fs
xchg
mov
push
jne
cmp
push
or
(bad)
repnz
arpl
aam
in
scas
int
push
js
mov
and
iret
cli
int3
test
cmp
rol
xchg
icebp
movs
scas
pop
aas
xchg
inc
stos
ds
mov
pop
outs
icebp
retf
mov
std
stos
icebp
mov
xchg
push
push
mov
xor
test
push
jae
leave
and
pop
or
out
and
pushf
xor
shl
dec
(bad)
popf
lock
or
adc
xchg
mov
(bad)
out
sbb
lock
mov
cmp
push
mov
mov
pusha
sub
dec
dec
or
stos
sbb
fadd
xchg
or
pop
pop
or
inc
imul
pop
add
(bad)
cld
sbb
sti
add
outs
into
aaa
icebp
ret
(bad)
fs
mov
out
repnz
jno
bound
cld
add
out
mov
mov
inc
pop
outs
fwait
sar
(bad)
pop
dec
fcmovnu
xlat
push
sbb
and
add
dec
inc
add
sti
dec
int3
repnz
jl
mov
fisub
push
movs
sub
dec
cmp
lods
cmc
cmc
mov
shr
push
pop
sbb
out
(bad)
or
mov
or
sbb
scas
idiv
dec
jo
or
out
dec
pop
lea
adc
das
rcl
arpl
pop
je
(bad)
scas
ja
mov
mov
xor
fild
out
ins
pop
inc
push
int
adc
aam
popa
mov
nop
movs
cmp
sbb
aad
inc
pop
rcl
xor
fcomp
jmp
lds
push
cmp
inc
xchg
jl
xchg
xchg
push
int
pop
push
xchg
add
xor
or
push
dec
ja
sbb
pop
popf
sbb
es
pop
jmp
push
inc
adc
popa
or
fidiv
dec
pop
pop
mov
cmc
dec
sbb
cmp
cmp
mov
push
xor
cld
outs
lds
mov
ret
add
xor
pop
or
ret
stc
cmp
mov
fst
mov
pop
add
fisub
fs
push
xor
(bad)
prefetch
or
int
mov
test
adc
xchg
movs
sub
mov
cld
adc
(bad)
push
int
push
pop
inc
aam
je
cmp
xor
sbb
dec
popf
stc
adc
lahf
ret
(bad)
call
ins
jae
popa
mov
sbb
movs
idiv
sar
dec
sbb
adc
push
call
outs
outs
pop
out
adc
push
in
sbb
sbb
cs
lea
sahf
mov
lea
inc
add
xor
sub
xor
ds
jle
stos
and
add
push
push
push
xlat
push
jns
cdq
dec
mov
cwde
stos
ds
sbb
jnp
lock
cmp
es
mov
jo
int3
into
in
jb
pop
jmp
int3
stos
push
pop
and
ja
dec
xchg
test
lds
shl
(bad)
push
ret
fwait
into
xchg
sbb
(bad)
sub
in
lahf
sbb
inc
sahf
adc
sbb
(bad)
scas
scas
imul
iret
mov
int3
bswap
mov
pushf
xor
sub
std
cmps
lahf
ss
icebp
sbb
add
into
push
(bad)
dec
mov
inc
sub
imul
xor
cmp
leave
fisubr
sub
pop
outs
push
mov
addr16
int3
addr16
data16
mov
adc
xchg
in
(bad)
jo
icebp
or
mov
cli
mov
sub
cmps
lock
mov
jb
sub
shr
es
cmp
or
repz
mov
add
mov
out
adc
mov
sub
add
xor
iret
mov
jbe
fstp
mov
sub
fwait
push
xchg
arpl
inc
leave
fstp
ins
js
shr
out
dec
cmp
mov
xor
jg
icebp
pop
pop
jmp
mov
lds
mov
pop
adc
repnz
mov
ret
add
fwait
xchg
jecxz
lea
inc
and
scas
cli
cmc
mov
mov
mov
lock
aad
pop
inc
or
or
xchg
add
push
jmp
mov
push
imul
cmps
and
mov
outs
sub
popa
adc
inc
rcr
cmp
cmc
cmp
and
and
or
ret
and
mov
std
mov
rep
sbb
mov
lods
push
dec
mov
jo
mov
inc
pop
inc
push
ins
jae
test
sub
dec
or
xchg
push
dec
gs
xor
cwde
inc
mov
fst
addr16
and
(bad)
in
ins
stos
mov
or
fidivr
dec
pushf
or
add
loop
pop
sbb
movs
push
mov
push
mov
stos
inc
cmps
stos
rcl
sub
mov
xor
add
int
mov
add
enter
test
sbb
jo
fadd
loopne
loop
cmps
aas
cmps
outs
shr
faddp
push
pop
outs
sbb
dec
daa
(bad)
push
addr16
mov
pusha
dec
inc
and
add
stos
fbstp
shl
dec
dec
(bad)
xlat
sti
jb
aad
xchg
jle
nop
push
cmp
xchg
inc
push
mov
push
fwait
adc
pop
push
gs
adc
mov
mov
sub
retf
add
sti
sbb
mov
mov
icebp
pop
std
out
cmp
mov
and
push
mov
sub
or
mov
mov
jp
movs
addr16
cmp
int3
arpl
stos
mov
sub
sbb
out
repnz
into
add
(bad)
adc
jo
pop
fsub
push
sbb
jae
retf
sbb
retf
cld
adc
lds
ins
mov
jecxz
sub
sub
ins
enter
movs
shr
jge
sub
in
mov
push
fild
fstp
cdq
adc
loope
ss
stos
sbb
pop
scas
mov
jno
xor
xor
pop
call
and
lods
lods
sti
mov
nop
les
push
pop
(bad)
add
arpl
(bad)
std
cdq
jge
je
aad
dec
dec
sbb
adc
jg
dec
mov
cmp
pop
pushf
cmp
xor
arpl
add
ins
mov
cld
es
and
(bad)
stos
loopne
jl
jne
fadd
mov
mov
jmp
xor
test
pop
xor
sti
add
addr16
fcomip
ins
outs
repz
push
dec
je
test
inc
js
inc
jecxz
shl
and
xchg
test
mov
or
xor
ret
ret
sqrtps
out
fadd
faddp
aaa
shl
cmp
dec
pop
jmp
mov
mov
mov
les
dec
test
adc
jo
outs
adc
inc
cli
pop
arpl
inc
test
xchg
jns
ja
test
jbe
or
inc
mov
jp
cmps
call
mov
xchg
mov
mov
out
scas
je
jp
pop
lods
adc
add
in
push
ins
bound
inc
enter
inc
cwde
retf
xor
cwde
aas
xlat
ss
sub
adc
mov
sti
and
xor
out
dec
push
dec
ja
cmps
push
xlat
jne
xchg
gs
xchg
cli
push
cwde
imul
mov
stc
out
loop
push
mov
inc
jle
sub
pop
iret
inc
inc
popf
ins
mov
in
stos
mov
xor
nop
stc
cld
dec
adc
xlat
pusha
aaa
pop
cmp
pop
sbb
aaa
hlt
ffree
pop
test
in
adc
mov
daa
sbb
fstp
jg
daa
inc
mov
sahf
inc
loope
cmp
xor
shl
mov
sbb
adc
or
mov
adc
scas
clc
daa
pushf
mov
test
icebp
dec
sbb
stos
mov
push
add
test
cdq
daa
popf
jge
adc
xchg
enter
and
int
rcl
inc
pop
retf
hlt
mov
shr
sub
push
dec
leave
test
add
pop
jmp
rcr
mov
adc
cli
daa
dec
stc
nop
in
xor
pop
add
mov
jl
xor
add
sub
mov
xchg
push
dec
inc
add
lea
inc
pop
add
inc
cld
aam
pop
jmp
gs
out
and
xchg
out
inc
fisub
push
ins
xor
test
shl
retf
mov
mov
pushf
xor
mov
int3
std
mov
and
adc
cwde
sbb
fwait
ret
push
gs
sbb
cs
dec
jecxz
stos
movs
push
xchg
push
aam
stc
ins
and
push
test
lods
jbe
push
and
push
lock
sbb
shl
adc
pop
xchg
xor
mov
ins
pop
sub
sbb
or
xlat
fs
push
and
loopne
call
xor
fcmovu
push
sti
lods
ret
cmps
and
out
pop
xchg
mov
inc
ja
fstp
mov
xchg
inc
xchg
call
push
lahf
mov
pusha
dec
pop
arpl
retf
loope
mov
ficomp
adc
mov
in
mov
in
call
pop
rol
adc
add
add
lods
mov
(bad)
ds
pop
pop
fs
or
jno
mov
into
push
call
pop
dec
scas
dec
dec
pusha
cwde
add
add
cmp
mov
out
ins
push
cmps
test
add
out
add
loopne
sbb
mov
and
mov
cwde
mov
retf
cmps
loope
js
jns
pop
cmc
mov
scas
mov
pushf
jecxz
inc
sahf
mov
inc
cmp
jmp
mov
repnz
mov
and
add
inc
outs
and
loopne
mov
add
jne
gs
jmp
addr16
adc
xor
lock
aad
push
jl
push
and
js
xchg
movs
push
pop
js
xor
inc
push
adc
imul
push
pop
sub
inc
sbb
lea
fisub
adc
jl
sti
jle
js
or
jns
ss
scas
push
dec
punpcklbw
mov
cli
mov
jo
push
mov
stos
sbb
mov
push
pop
jbe
out
sar
adc
lock
xchg
mov
ds
les
push
xor
jns
cmp
xor
icebp
cwde
mov
pop
rcl
jae
or
mov
push
fnstcw
(bad)
fld
jmp
cmps
cmc
loope
mov
sbb
(bad)
pop
mov
add
cmp
(bad)
fmul
sbb
imul
push
cmps
jns
and
das
jmp
mov
xor
mov
adc
dec
mov
out
cmp
in
push
fbstp
gs
ss
xor
arpl
js
or
add
ds
nop
jmp
inc
(bad)
mov
add
cmp
out
gs
xor
in
mov
pop
enter
mov
adc
sar
xor
div
shl
popf
(bad)
outs
push
or
sub
arpl
add
and
or
mov
mov
mov
mov
or
shr
ret
or
and
das
test
and
jmp
mov
rcr
mov
add
in
inc
jnp
popa
fistp
xchg
pusha
rcl
mov
mov
stc
int3
retf
jnp
leave
icebp
sar
adc
mov
shl
int3
pop
adc
bound
xchg
es
cmp
sahf
outs
iret
cmc
fild
mov
stos
test
push
xchg
add
retf
pop
(bad)
test
stc
jle
jecxz
jle
es
pop
int3
and
sub
add
xor
jmp
xor
dec
mov
out
std
dec
out
fidiv
mov
lods
clc
divps
inc
cwde
mov
mov
xor
pop
ins
cmp
sbb
int3
add
sbb
fstp
mov
ss
sbb
sar
outs
movs
dec
pop
pop
out
push
xor
out
hlt
push
out
(bad)
cmp
adc
pusha
pop
repz
xor
gs
mov
jmp
jl
dec
into
adc
jo
fadd
jmp
pop
pusha
rcr
rcr
lods
mov
mov
rol
mov
cmp
cmp
stos
in
add
mov
push
sbb
aaa
add
outs
push
and
dec
add
mov
jge
push
sbb
and
mov
cmp
(bad)
pop
sub
test
ins
imul
pop
retf
xor
mov
inc
and
dec
outs
add
adc
mov
add
ss
push
ins
cli
push
add
stc
hlt
adc
sub
inc
call
lods
aam
pop
or
(bad)
jmp
jns
and
xchg
into
mov
xchg
xchg
xlat
lods
pop
sub
scas
mov
fst
jmp
ja
jecxz
fcmovne
mov
out
pand
push
rol
or
cmp
jne
xor
gs
loope
fiadd
and
test
sub
xor
ss
pop
add
push
gs
pop
test
pop
add
push
sbb
clc
inc
dec
into
mov
pop
adc
push
repnz
call
cs
ret
jp
adc
or
rcl
imul
repz
dec
iret
xchg
fst
xchg
leave
jecxz
imul
cmps
and
mov
je
loope
ja
dec
adc
int3
pop
test
mov
push
add
in
jle
push
cmp
aas
fisub
mov
fstp
jbe
xchg
cmp
call
push
(bad)
sti
add
jle
mov
in
inc
xor
push
sbb
push
jnp
pop
ds
stos
mov
sbb
or
test
cmp
stc
xlat
(bad)
unpckhps
popf
jmp
xchg
adc
test
call
(bad)
dec
gs
test
ret
adc
or
xchg
fucomip
pop
dec
loopne
and
pop
jo
lods
mov
and
gs
in
xlat
loopne
inc
xor
dec
outs
les
out
ins
daa
and
sbb
xchg
cmp
popf
fldenv
cmp
or
adc
jge
mov
les
mov
fist
std
mov
adc
mov
dec
mov
ins
or
jne
cli
push
cmp
mov
shl
xchg
push
jbe
and
leave
adc
inc
dec
push
dec
sbb
imul
jae
into
mov
aaa
(bad)
shl
mov
mov
ss
pop
or
dec
pop
xchg
test
sub
bound
add
mov
xchg
xor
adc
jno
(bad)
pusha
lods
push
adc
pop
call
js
sbb
sbb
push
xor
div
cmp
(bad)
adc
imul
sahf
mov
hlt
rol
xchg
arpl
inc
call
(bad)
sub
adc
icebp
mov
inc
xor
pop
mov
jae
xlat
aad
sti
jmp
outs
lods
xchg
stos
cmp
outs
bound
call
hlt
test
mov
scas
ja
inc
sti
mov
stc
das
jp
rcr
cmp
imul
or
les
sub
lock
inc
repz
jmp
jns
add
loope
lds
sub
push
mov
push
inc
rcl
pop
lods
push
rcr
mov
mov
push
push
push
and
popf
(bad)
mov
xor
ja
mov
push
pushf
ds
stos
xchg
ror
cmp
loope
sub
pop
cmps
mov
int
rcl
mov
push
shl
inc
and
xchg
lods
cmp
loop
rcr
out
scas
pop
jp
xchg
(bad)
sub
fstp
test
mov
out
sbb
push
fxch
push
mov
clc
xor
adc
pop
xchg
sbb
out
xor
adc
adc
dec
aad
test
push
shr
cdq
inc
out
(bad)
fisttp
dec
mov
call
jnp
or
shr
sahf
inc
add
call
mov
test
mov
jp
mov
and
inc
dec
sar
dec
aaa
arpl
lds
inc
cmp
aaa
adc
xor
jl
(bad)
mov
xor
fwait
cdq
pop
in
or
fwait
push
retf
fstp
out
neg
mov
inc
ins
mov
dec
(bad)
adc
addr16
mov
add
add
in
mov
and
call
sub
jbe
sub
nop
in
pop
inc
lods
hlt
mov
jle
ds
mov
xchg
add
cli
jne
mov
and
dec
xlat
xchg
jmp
retf
pop
jns
rcl
push
call
(bad)
xor
movs
arpl
cmps
jne
fwait
test
loopne
fbld
jl
jp
sahf
popa
pop
xchg
sub
mov
jno
popf
iret
data16
add
jg
(bad)
jp
pop
cld
aad
pushf
ja
jl
xor
mov
xor
ret
imul
ror
inc
imul
in
in
inc
test
fidiv
dec
mov
stos
sbb
mov
pop
cmp
(bad)
mov
or
retf
shl
stc
(bad)
sub
add
jns
scas
jnp
sti
lods
jno
add
loope
inc
adc
loop
and
and
sbb
inc
jmp
adc
sti
mov
in
aaa
jle
dec
or
sbb
imul
or
inc
mov
cwde
pop
jge
lds
dec
push
cmps
pop
ret
call
in
xor
jecxz
loop
xchg
loopne
popa
jl
ss
into
ins
loop
mov
dec
xchg
mov
scas
mov
mov
jge
fistp
sub
ja
pushf
sahf
mov
enter
push
add
jnp
pop
jecxz
inc
mov
movs
fs
ja
push
aad
xlat
divps
pop
xor
push
dec
fwait
push
inc
dec
xor
in
xchg
push
mov
jno
sbb
cwde
mov
gs
les
dec
mov
es
rcr
mov
(bad)
fisttp
jge
mov
(bad)
sub
(bad)
xor
fnstsw
fwait
cmp
mov
outs
adc
fidivr
push
lock
shl
sbb
jecxz
add
je
inc
adc
loope
iret
jle
repnz
push
test
mov
ficom
push
or
sbb
sti
mov
loopne
pop
pop
retf
mov
clc
mov
mov
sbb
(bad)
stos
mov
mov
push
mov
mov
push
fwait
addr16
repnz
cmp
dec
ja
(bad)
(bad)
icebp
push
rol
js
xchg
push
jl
aam
das
aaa
push
and
adc
loop
mov
jbe
daa
iret
(bad)
dec
aad
adc
sub
jns
scas
test
dec
fistp
cmp
sub
scas
leave
sbb
addr16
mov
enter
je
shr
ins
not
sbb
and
adc
imul
aad
xlat
pop
(bad)
enter
pop
frstor
sub
or
inc
fidiv
loopne
pop
mov
and
(bad)
mov
jmp
jmp
movs
(bad)
rep
jg
cmp
jecxz
jno
add
mov
dec
adc
inc
and
popf
and
jg
dec
jb
clc
mov
xchg
push
push
dec
lahf
outs
mov
lds
sub
mov
inc
cwde
jp
and
out
(bad)
jo
fnstsw
push
fdivp
mov
dec
fsubr
es
in
out
pusha
sub
mov
sub
imul
jae
stos
adc
cli
retf
mov
add
jecxz
leave
jge
nop
mov
jmp
aam
lds
out
in
clc
mov
loope
add
inc
push
call
jno
and
mov
push
aad
pop
out
pop
or
ss
lea
dec
mov
sti
mov
ret
int3
dec
xchg
shl
adc
cmps
pop
iret
xor
mov
lds
jecxz
ss
mov
imul
fist
lea
lods
clc
mov
add
push
data16
daa
leave
add
mov
pusha
cli
test
push
adc
int3
inc
sti
inc
hlt
adc
call
data16
loopne
add
ret
das
pop
stos
loopne
add
and
lds
or
or
std
push
call
out
sub
retf
sti
into
ins
lods
mov
lods
add
mov
pusha
jg
iret
jge
pop
mov
lea
std
retf
shr
imul
push
inc
lods
pop
inc
arpl
add
lds
stos
ins
xor
sbb
icebp
mov
mov
fwait
(bad)
retf
pop
cmp
clc
mov
das
(bad)
dec
or
mov
repz
add
aaa
mov
into
jns
and
dec
mov
pop
pop
push
sbb
add
xor
scas
(bad)
or
mov
push
in
(bad)
cmc
das
adc
pop
mov
icebp
fisttp
les
xor
push
shl
pop
fist
outs
mov
div
sub
push
mov
mov
inc
and
loopne
xor
cmp
jnp
cmc
out
mov
and
xchg
jg
lea
sbb
inc
arpl
enter
lock
les
popf
cli
ret
hlt
sub
mov
pop
pop
sub
loop
scas
jb
jmp
call
cmp
and
add
sahf
xchg
and
imul
outs
jecxz
mov
daa
mov
mov
repnz
scas
aad
cmc
in
mov
and
(bad)
(bad)
add
cmp
dec
mov
mov
sbb
mov
test
xchg
ds
jns
pop
cmp
xchg
pop
arpl
jmp
xchg
mov
sub
sub
cmp
leave
pop
mov
dec
dec
inc
jns
movs
ss
xchg
mov
inc
fwait
test
sbb
movs
(bad)
dec
into
in
movs
fmul
mov
push
sbb
push
mov
mov
scas
xor
mov
and
or
pusha
inc
imul
dec
and
lds
pop
lock
pop
fidiv
gs
sbb
shl
cs
add
mov
shr
das
dec
xor
jb
add
icebp
inc
out
test
ins
arpl
dec
out
pop
and
pushf
shl
push
add
fs
jne
icebp
in
mov
mov
retf
repnz
(bad)
push
cmps
xor
inc
cmp
dec
pop
cmp
push
xor
ss
cli
aad
or
add
pop
sti
fsub
fadd
cmps
div
data16
aad
mov
mov
dec
xor
in
hlt
add
push
jge
inc
mov
fadd
inc
cmps
cmp
sub
pop
cmc
and
xchg
ja
jp
mov
lds
or
pop
or
inc
or
loop
test
inc
repz
and
imul
bound
rol
ins
pop
ficom
jle
cmp
out
cmp
and
pop
mov
push
xchg
loopne
dec
sub
fs
mov
loope
fimul
xchg
sar
push
iret
in
jmp
in
mov
or
scas
(bad)
cmp
jl
pop
and
inc
mov
test
outs
test
xor
pop
loopne
add
(bad)
in
jo
(bad)
call
sub
idiv
outs
jne
pop
stos
xor
push
cwde
cmp
aad
mov
sti
sti
jmp
and
jns
jo
adc
dec
sub
ret
cmp
in
push
inc
push
loopne
in
mov
fst
cmp
mov
sbb
gs
inc
cmp
dec
pusha
xchg
push
jno
call
sbb
nop
xor
stos
mov
scas
pop
sub
leave
pop
cmc
or
das
ss
es
xchg
mov
jae
dec
jle
arpl
int
xchg
je
and
pop
mov
inc
mov
mov
xchg
fldenv
inc
ss
xlat
fwait
lods
mov
fild
dec
xchg
cmp
jne
cwde
fadd
ins
or
std
xchg
stos
test
lahf
and
xor
sbb
mov
cmp
outs
cdq
ins
push
movs
popf
not
dec
stc
les
scas
dec
mov
or
mov
in
and
pop
stos
inc
imul
dec
sbb
push
fcomp
xchg
jno
mov
or
cmps
cmps
cmp
cmp
sbb
sbb
mov
pop
stos
rol
cmp
pop
stos
sbb
cmc
dec
dec
mov
push
add
cmc
scas
mov
and
sub
sbb
rcr
stos
lods
pop
push
xchg
xchg
mov
adc
not
add
leave
les
repz
lea
aaa
push
les
adc
aaa
inc
dec
jl
jo
sub
add
call
fs
push
bound
movs
push
mov
or
xchg
aad
sub
outs
or
ins
shl
int3
jl
ret
ss
mov
aad
inc
scas
mov
add
mov
mov
adc
int3
cs
fcom
loop
xor
push
shl
rol
movs
aas
jl
mov
xchg
mov
leave
movs
jae
inc
std
(bad)
in
out
cmp
pop
out
std
fadd
cmps
pop
ss
ret
(bad)
jl
shl
addr16
pop
or
ja
mov
sub
movs
dec
or
push
sub
call
lock
bswap
sbb
frstor
lahf
cli
mov
pop
mov
loope
add
push
or
pop
icebp
mov
dec
inc
(bad)
cmp
dec
jge
mov
dec
jb
repnz
adc
outs
pop
or
dec
inc
loope
mov
mov
pop
(bad)
adc
pop
pop
cmp
lods
(bad)
mov
in
pop
in
shr
(bad)
stos
push
daa
jp
daa
add
repnz
mov
pop
pop
in
sub
ins
adc
pop
test
retf
scas
call
and
sub
xor
sub
adc
jae
scas
push
push
and
jo
mov
adc
arpl
adc
lahf
jg
(bad)
mov
jo
inc
and
cdq
push
cwde
mov
adc
shl
xchg
jo
push
nop
ja
xchg
mov
and
mov
sub
test
je
xor
mov
aaa
mov
lods
and
cmps
out
popf
mov
adc
repnz
lea
out
and
pop
sbb
jge
ss
cmc
mov
pop
(bad)
jge
mov
pop
sbb
sbb
or
fnstenv
mov
xchg
or
xchg
lods
sbb
mov
inc
cli
mov
jnp
and
sti
fwait
call
push
rol
or
pop
aaa
sub
stc
xchg
inc
lods
ret
pop
pusha
xor
int3
cmps
pop
inc
enter
lea
call
(bad)
jo
ss
jo
jbe
dec
test
daa
call
iret
mov
int
jno
fimul
(bad)
fisub
sub
shr
xchg
push
xor
add
and
pop
repnz
xchg
inc
(bad)
pop
lods
nop
mov
push
push
mov
int
cmp
(bad)
out
mov
mov
mov
cmp
push
pop
iret
in
jl
shr
fs
into
gs
or
repz
pop
mov
sbb
scas
xchg
(bad)
jns
pushf
sbb
fcmovnu
inc
dec
push
inc
movs
ds
dec
mov
ret
and
mov
dec
xchg
ins
xchg
and
bound
(bad)
repnz
jp
xor
nop
lods
pusha
inc
jl
movs
adc
addr16
loopne
mov
sub
clc
xor
cmps
or
retf
test
jnp
and
popf
cmp
push
sub
std
pop
mov
les
cmp
push
xor
sbb
in
dec
jmp
ins
fadd
arpl
mov
lea
xchg
add
mov
xchg
scas
push
adc
jp
retf
cmp
and
out
mov
fst
mov
push
jl
rol
jae
push
jnp
adc
xchg
sub
cmps
(bad)
cmp
inc
and
les
loop
enter
xor
dec
bound
cwde
xchg
femms
loope
sbb
xchg
repz
adc
pop
enter
imul
pop
inc
adc
clc
stos
ret
add
push
aas
shr
mov
(bad)
dec
arpl
adc
and
enter
mov
bound
je
cld
sbb
jae
adc
repnz
data16
jns
sub
pop
jns
std
loopne
sub
mov
jecxz
lahf
or
in
mov
(bad)
jae
xchg
jg
push
sub
fwait
xchg
pop
lods
mov
xor
pop
jl
out
out
stc
push
in
pop
test
out
popa
(bad)
sbb
mov
test
pushf
leave
sar
repz
push
cmc
loop
inc
ins
push
outs
mov
dec
cmp
loope
stc
dec
mov
popf
fst
add
ror
out
fldenv
mov
call
js
sub
fnstcw
fwait
sbb
(bad)
mov
sbb
rcl
cmp
jbe
cmp
dec
fbld
and
pop
(bad)
shl
adc
sub
inc
in
pop
sub
ins
adc
or
inc
imul
jmp
jnp
das
xchg
mov
jge
in
xchg
add
sbb
cwde
xchg
popf
cli
adc
or
in
pop
sbb
and
idiv
sbb
lods
out
add
xor
ja
pop
push
shr
and
or
ins
pop
inc
clc
jp
(bad)
jecxz
out
cmc
ins
inc
inc
pop
jp
retf
and
rcr
xor
mov
jb
and
add
loope
jae
aas
push
(bad)
js
mov
pop
es
mov
lahf
ror
sbb
jb
xchg
pop
push
aas
lahf
stos
xor
adc
and
call
pop
push
cmp
adc
mov
mov
mov
and
dec
and
test
(bad)
adc
mov
int
pop
push
add
ror
icebp
dec
jmp
lahf
test
sbb
mov
ret
xchg
mov
pop
cmp
pop
lahf
add
fst
sub
or
mov
pop
outs
sbb
push
mov
mov
and
jbe
es
dec
cmp
icebp
jmp
mov
(bad)
popa
mov
je
dec
jnp
adc
pop
xchg
mov
shr
fstp
add
and
ds
mov
ror
adc
mov
pop
lahf
pop
rcr
and
add
ds
les
das
call
shr
cmp
push
cmp
mov
call
mov
xchg
mov
mov
sub
xlat
(bad)
clc
dec
(bad)
pop
mov
mov
adc
imul
sbb
mov
or
loop
nop
cmp
xor
jno
xchg
push
push
ds
mov
cmp
nop
mov
pop
add
cdq
out
sar
and
call
push
mov
nop
repz
ja
push
sub
push
out
sub
retf
and
neg
fsubr
in
test
aad
movs
sbb
aaa
sbb
pop
mov
mov
jmp
nop
mov
adc
inc
imul
or
add
mov
sbb
cmp
cld
gs
jb
and
push
lds
out
out
inc
call
mov
daa
jg
lods
fsubp
rcr
mov
cmps
mov
jmp
mov
test
add
out
or
div
xchg
xchg
cmp
sub
out
inc
jmp
call
aaa
jl
pop
and
mov
xor
pop
mov
fbld
fld
mov
fld
mov
rcl
xchg
mov
add
add
mov
and
or
jge
and
cwde
retf
mov
nop
adc
test
inc
popf
or
fild
xchg
call
sub
cmp
push
push
mov
sbb
cmp
dec
aad
xchg
and
and
pop
push
stos
lock
mov
xchg
add
xor
(bad)
sub
cli
dec
push
inc
sub
aas
int
cmp
cs
mov
cmp
int3
pop
push
mov
iret
dec
cld
call
mov
mov
int
sub
inc
mov
inc
dec
jp
jb
iret
pop
mov
xchg
adc
xchg
add
inc
popa
bound
not
(bad)
cld
ins
cmc
call
rcl
xchg
mov
cs
pusha
and
in
or
js
sub
dec
mov
jmp
(bad)
push
call
mov
adc
sbb
loopne
ret
sub
cmp
lock
sar
xchg
test
fisub
lea
lods
mov
jmp
add
cmp
jae
mov
out
out
jp
in
clc
xchg
push
(bad)
shr
test
data16
push
sub
add
pop
add
hlt
movs
add
std
fnstsw
jmp
stc
shr
push
aaa
adc
sti
xor
cmp
mov
or
das
and
mov
adc
or
cdq
scas
lods
out
pop
sar
cmp
scas
cmps
enter
push
pop
mov
call
out
loopne
mov
push
mov
pop
jl
pushf
call
mov
add
out
test
sub
mov
test
mov
je
aaa
cmp
fdiv
rcr
imul
popf
jo
add
fdiv
loope
(bad)
lods
jo
adc
sub
cld
xor
sbb
sbb
frstor
pop
adc
sbb
stos
shl
or
xor
pop
sti
xor
loope
hlt
aas
pop
adc
push
(bad)
xor
push
mov
std
pop
iret
mov
(bad)
(bad)
or
loope
pop
imul
jae
xchg
movs
cwde
int
fld
sbb
adc
pop
mov
push
mov
stos
jae
data16
ins
ins
push
mov
xor
ins
push
inc
retf
ja
pop
or
push
loop
or
xor
cmp
fisttp
jge
pop
push
ret
int3
mov
pop
inc
or
and
pop
scas
and
rdtsc
icebp
xor
and
retf
test
stos
push
push
add
jae
les
mov
jne
rcr
dec
push
push
fild
sbb
js
push
inc
lods
dec
pop
jb
dec
lds
in
sti
mov
call
xchg
lods
inc
lds
bound
push
fbstp
(bad)
or
retf
sub
pop
jnp
hlt
inc
ins
dec
ficom
jg
xorps
inc
push
repnz
fdivr
push
aam
sub
outs
xor
fwait
inc
xchg
xchg
retf
xchg
leave
stc
mov
test
mov
in
mov
setl
les
mov
sub
fcomp
push
pop
add
sub
cmps
out
xor
add
pop
stc
xchg
push
xchg
dec
rcl
lods
dec
sbb
ja
mov
push
xchg
das
jbe
movs
xor
cmp
sub
dec
retf
ret
xchg
sbb
jge
mul
mov
shr
ficom
fbld
fild
xchg
xor
in
movs
lods
jns
adc
sti
jge
shl
xchg
std
cmps
aas
pop
jg
sbb
xchg
mov
jmp
ret
jno
add
(bad)
int3
arpl
dec
push
inc
data16
ds
push
clc
sbb
bound
inc
push
xchg
outs
dec
das
mov
or
fdivr
adc
scas
adc
(bad)
nop
sub
and
(bad)
movs
ror
push
pop
mov
hlt
jbe
outs
imul
adc
ror
and
shl
xchg
dec
and
dec
xor
pop
test
or
xor
movs
cmp
xor
shl
lock
sar
jg
retf
pop
pop
inc
add
push
ds
(bad)
dec
jb
ss
fsubr
inc
sbb
xchg
mov
mov
add
or
mov
sbb
cmp
mov
sbb
jae
fdivr
and
mov
ins
mov
loope
push
or
mov
pop
scas
shl
pop
jbe
xchg
inc
push
aaa
add
(bad)
pop
test
outs
mov
call
add
pop
adc
mov
jns
(bad)
add
cmp
xor
ds
mov
cs
add
jmp
add
stos
fsubr
les
fld
rol
arpl
adc
int3
or
mov
ds
or
inc
shl
push
in
sub
mov
inc
(bad)
aam
das
std
push
mov
pop
or
mov
inc
dec
out
and
leave
adc
dec
xor
inc
addr16
cmps
das
bound
push
and
inc
ins
xor
ins
add
jne
sub
mov
adc
fild
pop
sbb
mov
mov
xchg
call
rcl
sbb
mov
add
repnz
mov
out
dec
jno
mov
push
adc
inc
dec
daa
lods
pop
cmps
or
inc
mov
jg
push
imul
cli
pop
cs
xchg
stos
cmp
sbb
or
jae
jb
scas
das
mov
mov
dec
inc
iret
pop
cmp
mov
loope
pop
sbb
jge
cs
(bad)
adc
cdq
push
and
test
lds
add
inc
mov
or
aaa
mov
lahf
mov
xlat
packsswb
pop
aas
ret
(bad)
adc
jp
pop
into
or
sub
mul
inc
in
and
cdq
fdiv
loope
fst
cli
pop
or
(bad)
retf
call
or
lods
pop
test
shl
mov
cmp
(bad)
xlat
lahf
mov
cmp
push
cwde
inc
push
in
cld
fild
loopne
xor
es
fmul
test
vminss
ror
arpl
mov
dec
mov
call
repz
or
xchg
or
retf
stos
pusha
cwde
or
cmp
fwait
movmskps
sub
cmp
lods
cmp
or
adc
sub
fsubr
mov
push
fnstcw
mov
or
pop
lods
hlt
shl
push
lahf
inc
mov
pushf
retf
iret
ds
sub
mov
mov
sub
jg
mov
in
adc
lock
(bad)
push
sbb
pusha
jb
fnstenv
dec
mov
ss
dec
pop
inc
push
leave
int3
data16
add
ret
inc
movs
stos
loope
lea
push
push
in
test
mov
cmp
inc
jecxz
inc
mov
in
fcmovb
mov
popa
imul
pop
cli
add
clc
or
movs
outs
leave
iret
test
and
repz
xor
mov
cmp
inc
mov
cs
push
cmp
pop
sbb
popa
pushf
push
(bad)
xchg
push
xor
test
jno
add
sti
loopne
dec
mov
lock
sub
(bad)
dec
inc
jle
mov
cld
cdq
pop
push
jnp
pop
leave
jmp
in
lahf
out
lock
pop
cld
repz
mov
sbb
push
in
or
mov
push
into
mov
pop
push
ffree
out
mov
imul
adc
mov
ss
jmp
and
push
mov
out
xor
push
push
loopne
inc
push
test
inc
fwait
jmp
fxch
push
addr16
jg
mov
sbb
(bad)
std
in
loope
push
fs
jnp
add
cmp
out
xchg
mov
addr16
(bad)
cld
dec
pop
(bad)
add
dec
mov
std
movs
test
and
pop
sub
mov
push
jl
mov
adc
xor
push
jo
and
movs
push
xor
mov
enter
or
mov
retf
cmp
xor
cmp
pop
jle
pop
ja
push
test
xor
push
clc
mov
das
add
shl
(bad)
in
fild
inc
dec
fidiv
dec
gs
sbb
(bad)
and
out
cs
sub
into
push
sub
pop
mov
outs
sbb
fucomip
mov
push
call
das
mov
inc
mov
nop
inc
and
or
test
mov
jnp
sub
mov
loop
xchg
mov
lods
push
jmp
or
inc
out
xor
cmps
movs
cdq
(bad)
mov
clc
sbb
rcr
sbb
push
lea
pop
sbb
cld
orps
fwait
push
xor
sbb
stos
cmps
push
scas
(bad)
retf
aam
fwait
push
aam
pushf
cmp
pop
and
(bad)
push
or
addr16
scas
jb
xchg
xchg
push
pop
ss
cld
fwait
inc
or
cs
dec
sbb
xchg
and
test
sahf
sar
mov
arpl
xor
(bad)
stos
inc
mov
inc
repz
cmp
loope
jmp
and
scas
stos
push
dec
js
mov
lahf
aam
mov
shr
sbb
(bad)
or
arpl
sub
out
call
out
ins
outs
popa
daa
lahf
lods
js
ret
sar
jae
cmp
popf
sub
imul
mov
scas
fdiv
xchg
mov
push
mov
fldcw
in
jge
in
xchg
and
jge
pop
adc
aad
pop
sbb
hlt
mov
jmp
jle
sbb
inc
ja
mov
sti
add
shl
test
mov
push
out
rcl
or
xor
mov
pop
xlat
int3
dec
pop
sbb
mov
or
push
xchg
sbb
icebp
cmp
fs
jle
mov
gs
push
dec
pop
test
cmp
mov
jno
pushf
stos
mov
pusha
loopne
push
lock
out
inc
rcl
es
push
cs
dec
mov
or
pop
popa
in
aad
in
aas
dec
mov
lahf
and
pop
movs
mov
dec
jl
adc
mov
ficomp
mov
fdivr
test
call
mov
xlat
cmp
hlt
lahf
stos
cld
mov
xchg
adc
ficom
repnz
pop
push
aas
sbb
leave
sbb
fimul
xor
and
mov
and
xchg
push
addr16
adc
mov
fcomp
and
cdq
sub
cs
call
and
mov
idiv
cli
mov
hlt
inc
mov
pop
jb
sbb
stos
mov
(bad)
or
mov
lods
out
iret
test
mov
dec
ficomp
jno
jp
and
cmp
cmp
popa
push
cmp
mov
fwait
stc
icebp
ret
in
cmp
pop
push
ret
add
push
jno
movs
mov
push
retf
aaa
jno
int
xchg
cmp
ins
push
(bad)
mov
stos
imul
stc
mov
popa
imul
add
mov
sbb
inc
add
fdiv
lea
outs
add
ficomp
or
mov
fisubr
push
dec
(bad)
in
xor
aaa
dec
xchg
lock
mov
and
adc
into
mov
add
call
imul
shr
pusha
pop
loop
addr16
jo
pop
jg
pop
and
sbb
mov
mov
bound
pushaw
sbb
dec
dec
int
push
enter
ret
arpl
cli
je
je
push
popa
daa
cmp
sbb
push
rcr
add
pop
gs
sbb
cmps
imul
jle
dec
inc
add
sub
sub
cld
sbb
arpl
(bad)
dec
cwde
or
jo
lods
add
gs
xor
arpl
out
lods
jg
ins
mov
pop
inc
ins
data16
nop
call
jo
jmp
push
bound
mov
imul
arpl
test
cs
aad
std
push
mov
dec
mov
mov
aas
inc
mov
jnp
pop
(bad)
scas
or
mov
in
push
jge
(bad)
out
or
loopne
lock
lods
jb
xchg
push
dec
mov
jle
push
cli
fld
ret
or
lods
sbb
adc
inc
jle
xor
retf
mov
inc
mov
mov
cmp
add
icebp
or
cdq
nop
and
cmc
inc
(bad)
and
repnz
ror
movs
xchg
iret
jmp
into
push
pop
in
ds
pop
je
movs
js
sbb
stos
and
addr16
xor
fbld
aam
mov
neg
adc
outs
cwde
mov
xchg
mov
xchg
xor
test
mov
outs
pushf
fidivr
(bad)
test
mov
add
loop
sub
pop
cli
aad
dec
not
xchg
mov
push
shr
dec
cmc
xchg
push
mov
dec
mov
mov
jbe
loop
add
hlt
inc
mov
pop
add
int
dec
aaa
mov
push
cmps
cmps
pusha
ds
mov
es
sub
lds
sbb
xlat
sbb
mov
mov
pop
lahf
ficom
and
add
into
mov
and
cli
cmp
fisttp
aas
jno
pop
aaa
jae
xlat
fwait
popa
sti
pop
rcl
rcl
adc
mov
test
in
mov
and
cdq
mov
sar
add
or
or
sub
sub
xchg
dec
jmp
neg
in
pop
add
push
lock
push
enter
pusha
mov
ds
aam
(bad)
mov
data16
ins
retf
add
inc
push
sub
fs
cmc
stos
std
inc
repz
popf
fld
clc
(bad)
dec
or
int3
cdq
imul
adc
or
ret
out
in
add
ss
push
mov
nop
imul
xchg
push
adc
inc
sbb
sbb
hlt
mov
lods
fstp
dec
and
sbb
lds
sbb
je
sbb
mov
movs
sub
jb
mov
and
dec
test
in
les
inc
xchg
cmps
outs
sahf
jno
inc
xchg
sahf
aas
sub
hlt
daa
mov
movs
scas
push
fidivr
jno
push
cld
ret
inc
xchg
dec
aas
or
std
mov
aad
cld
and
pop
sbb
(bad)
cmc
push
test
(bad)
pop
pop
ja
neg
in
les
jle
mov
pop
test
add
push
inc
pop
cld
das
cmps
push
rcl
adc
shl
pop
cmp
sahf
xor
mov
test
xor
add
popf
mov
jno
aas
outs
xor
je
gs
xchg
fdiv
hlt
xor
loope
nop
mov
frstor
out
push
addr16
scas
stos
inc
pop
lea
mov
dec
jbe
inc
movs
div
dec
jns
inc
dec
cli
fwait
sahf
add
popf
stos
adc
dec
jne
rol
add
cmps
retf
dec
or
xlat
xchg
js
push
ds
lock
jecxz
or
mov
enter
fmul
sahf
addr16
add
add
mov
add
call
ds
mov
or
adc
scas
dec
xor
(bad)
sub
or
mov
outs
jl
mov
icebp
or
mov
jo
mov
adc
mov
(bad)
xchg
test
mov
inc
cmp
and
hlt
aad
out
jg
cmps
cmp
or
push
lds
repz
mov
test
add
sahf
sbb
xor
cmp
ffreep
ss
adc
xor
mov
pop
popa
jp
shl
sar
or
add
adc
out
inc
and
add
cmps
sub
inc
movs
xchg
loopne
ffree
mov
ins
popa
stc
in
es
push
sbb
xchg
inc
test
js
fs
je
push
ss
xor
fcmovbe
stc
mov
and
add
adc
in
mov
lds
cmp
pop
adc
add
cmp
outs
out
sbb
std
adc
ror
xlat
mov
jb
stos
push
aad
add
push
inc
xor
movs
aad
jmp
(bad)
int
fcom
inc
in
jecxz
jns
pop
ret
jae
ja
jb
lds
test
cmps
or
cdq
mov
mov
mov
or
cld
sbb
fdivr
mov
data16
call
mov
xchg
hlt
push
push
or
test
mov
pop
daa
shl
cs
and
add
movs
xor
cld
push
pushf
rcl
inc
repz
adc
outs
loope
inc
leave
push
jecxz
and
out
mov
cmc
jnp
mov
xor
addr16
inc
dec
sahf
test
stos
mov
pusha
push
scas
addr16
test
xchg
mov
popf
xor
out
ss
es
test
mov
jns
push
inc
and
pop
enter
dec
sti
xchg
or
scas
retf
adc
mov
xor
sub
lea
mov
pop
mov
pop
repz
mov
adc
popa
ffree
cwde
fwait
push
and
mov
rcr
xchg
inc
xchg
imul
inc
adc
push
fnstcw
add
fwait
(bad)
adc
xor
push
mov
in
pop
sbb
int3
ja
push
cmps
repz
ret
mov
mov
rcr
pop
ret
out
xchg
sbb
fdiv
or
dec
or
js
mov
jo
ss
cmp
xchg
ja
mov
je
dec
xchg
cmp
push
outs
jbe
push
pushf
or
cmc
nop
mov
sar
mov
test
cmps
sub
or
shl
mov
fdivr
cmc
add
mov
rcr
mov
fnstsw
int3
push
lahf
(bad)
and
xchg
add
xchg
xor
dec
pop
test
loopne
xlat
aas
mov
lods
mov
xchg
sti
pop
and
test
mov
je
bswap
pop
push
inc
jecxz
inc
inc
call
das
fimul
jp
movs
(bad)
sbb
popa
sbb
adc
mov
cmp
sub
fisttp
mov
scas
repz
js
sub
jl
into
push
(bad)
(bad)
fwait
lods
ret
in
xchg
dec
and
jno
bound
dec
cli
cmps
mov
mov
mov
bts
pop
pop
add
inc
lahf
xchg
and
adc
xchg
ror
out
and
dec
sbb
and
lods
add
xchg
movs
enter
fimul
or
add
cli
das
in
loop
rcr
push
push
jg
shl
mov
mov
lock
mov
jmp
lahf
inc
pop
push
cld
xchg
xor
pop
int
nop
jge
add
xor
mov
cmp
adc
sub
(bad)
jecxz
and
cdq
cli
shl
adc
sbb
and
pushf
aam
int3
and
call
and
popf
pop
repz
div
cld
push
int3
jo
sti
std
xchg
push
inc
(bad)
and
out
aad
push
dec
pop
xchg
test
test
cmp
inc
jno
cmp
sti
sub
mov
and
mov
call
xchg
xchg
cli
lds
jle
outs
and
out
and
add
pusha
mov
fidivr
jecxz
sub
jnp
sub
mov
std
nop
or
(bad)
je
cmp
mov
fnstsw
xchg
int3
dec
mov
push
sbb
mov
pop
int
mov
sahf
out
add
jmp
inc
add
pop
jl
add
out
ret
iret
ins
xchg
cmps
xchg
fcmovbe
(bad)
cli
xor
and
cdq
sub
(bad)
int
jge
mov
jmp
pop
inc
push
jmp
jmp
mov
aam
pop
test
bound
adc
mov
mov
outs
out
adc
and
test
test
mov
ds
ja
jmp
popa
fs
adc
in
mov
xchg
or
fdivp
call
mov
dec
ins
xchg
in
sti
inc
cmp
push
jmp
cmp
fsub
push
pop
and
and
sbb
loop
bound
sti
cmp
adc
dec
test
jle
cmc
adc
sar
xchg
cmps
xor
dec
cwde
dec
into
and
inc
or
mov
jns
and
add
mov
xchg
mov
fild
xchg
jge
xchg
mov
jno
mov
jmp
addr16
inc
rol
dec
icebp
pusha
mov
test
jno
xchg
out
mov
xchg
mov
jl
and
je
stc
sub
sbb
pop
pushf
push
dec
jecxz
push
dec
sahf
bound
or
retf
fist
add
jecxz
sub
(bad)
cmps
lea
dec
cmp
(bad)
(bad)
(bad)
xchg
daa
or
add
mov
xor
out
add
clc
fstp
xor
cmp
repnz
test
mov
cmp
sbb
sbb
dec
pop
dec
gs
pusha
fwait
xchg
mov
dec
dec
aas
rep
retf
call
ds
js
push
fwait
and
xor
sub
xor
popf
mov
in
(bad)
retf
push
cmps
jg
or
shl
sbb
clc
pop
loope
ins
xchg
sbb
sub
dec
cmp
and
fmul
pop
stc
xchg
lahf
imul
mov
retf
enter
popa
std
xlat
mov
push
fwait
loopne
or
sub
mov
cmps
loop
sub
stos
push
std
xor
(bad)
rol
dec
add
jo
cld
popf
into
(bad)
or
adc
xor
adc
jmp
or
cmp
adc
xor
pop
push
dec
and
xchg
push
add
sub
mov
sbb
pop
jae
cmp
ds
or
pop
push
inc
aam
retf
test
mov
inc
mov
sahf
out
xor
fisttp
mov
add
shl
daa
adc
test
dec
jbe
dec
jecxz
das
scas
sar
ret
mov
ds
mov
sub
fcomip
out
mov
push
sub
shl
fisub
lods
mov
inc
shr
push
call
ins
stc
ja
mov
loope
into
jnp
sbb
ret
adc
dec
(bad)
std
fild
(bad)
fdivrp
cmp
and
jbe
mov
and
mov
jno
stc
and
add
adc
sbb
sahf
mov
cmps
sti
sub
test
sbb
jb
mov
mov
pop
pop
int3
dec
jbe
push
cmp
dec
pop
inc
fild
mov
dec
jp
out
mov
int
push
pop
inc
push
sbb
jecxz
mov
lahf
in
pop
loop
push
xor
mov
mov
jmp
push
or
fnsave
popa
scas
jno
dec
xor
inc
ror
lahf
xchg
xchg
lock
mov
sti
mov
cwde
sahf
sti
out
inc
jns
(bad)
pop
inc
repz
xchg
ror
scas
push
movs
aad
fldcw
in
fyl2x
mov
out
push
xchg
or
push
pop
inc
(bad)
(bad)
adc
(bad)
xor
or
cmp
sbb
sub
xchg
fmul
cld
mov
(bad)
pop
call
fwait
cs
cmp
cmps
icebp
xor
mov
cmps
out
lock
call
pop
push
loopne
sub
lahf
add
rcr
cli
pop
mov
adc
xor
xchg
inc
fwait
out
sbb
or
push
xchg
dec
in
and
test
cmp
jle
sbb
das
(bad)
call
nop
ja
mov
adc
sbb
dec
ja
jnp
xchg
push
enter
enter
push
scas
push
in
daa
xchg
arpl
in
daa
fmul
push
cmc
inc
outs
sub
inc
(bad)
pop
mov
iret
(bad)
test
dec
jecxz
(bad)
bound
xor
arpl
fst
mov
add
pushf
add
iret
pop
mov
jns
jp
lock
ss
mov
mov
add
rcl
into
xlat
mov
xchg
push
cmp
(bad)
loopne
pop
pop
push
cld
push
jo
shl
adc
xor
jae
mov
adc
mov
movs
inc
int3
jae
movs
inc
in
fsincos
mov
das
mov
les
jg
data16
std
loope
arpl
call
mov
imul
mov
arpl
daa
and
sbb
jmp
cs
mov
push
jmp
xor
push
xor
jnp
jmp
push
jae
or
(bad)
cld
mov
js
iret
add
(bad)
mov
loopne
jae
fs
mov
cwde
cmp
cmps
cmps
ds
jae
xor
sbb
hlt
int3
pop
mov
push
push
mul
mov
xchg
sbb
mov
xor
fbld
push
enter
loop
shl
mov
nop
sbb
pop
cmps
mov
pop
hlt
adc
enter
pop
mov
inc
push
lock
aaa
ficom
push
fild
ret
xchg
call
push
push
push
pop
popa
mov
pop
sbb
mov
scas
sbb
repz
pop
dec
xchg
mov
ret
and
fs
mov
fs
pop
aas
or
and
shr
sar
sbb
(bad)
push
and
push
movs
loope
aaa
jnp
jmp
xchg
add
or
std
or
jmp
scas
jnp
ret
out
loop
repz
mov
jg
xor
rcl
and
xchg
test
in
js
sub
pop
aas
bound
retf
push
rcr
popf
inc
jp
lahf
ret
inc
inc
pop
cmp
dec
int
mov
rol
mov
jecxz
lods
dec
and
and
sub
mov
push
pop
inc
cdq
aaa
(bad)
mov
sub
retf
js
cmp
sahf
sub
dec
div
push
mov
call
pop
movs
cmp
push
jmp
add
(bad)
hlt
enter
pusha
cmp
jo
sbb
mov
xor
aam
dec
push
push
scas
inc
ins
push
push
aam
cmp
loopne
rcl
push
mov
repz
mov
(bad)
cdq
cmp
stc
sub
xor
dec
cmp
popa
out
adc
mov
movups
push
out
popf
push
mov
popa
ret
mov
shl
sub
mov
cli
ret
xchg
cwde
fsub
retf
sbb
push
sbb
push
mov
(bad)
push
enter
push
rcr
idiv
fcmovb
jbe
push
mov
mov
cmp
sbb
dec
inc
mov
out
loop
push
in
fistp
sbb
out
data16
and
cmp
(bad)
retf
fwait
loopne
(bad)
nop
sbb
stos
pop
push
ja
inc
js
das
push
aaa
fdiv
xchg
and
and
sub
sti
mov
mov
ret
idiv
mov
push
mov
inc
push
ins
stos
fwait
mov
adc
mov
mov
enter
sahf
call
xchg
sti
lods
rcr
add
scas
jmp
add
mov
mov
xchg
leave
test
scas
jbe
push
jbe
inc
fwait
bound
jo
pusha
adc
js
sub
(bad)
dec
mov
push
in
push
fild
or
pop
mov
sub
jb
inc
or
ja
cmp
inc
les
push
sbb
add
test
adc
das
stc
mov
out
inc
sbb
or
inc
xchg
aad
add
inc
test
xor
jo
out
or
inc
out
repz
xor
xchg
scas
cmp
dec
rol
outs
js
xlat
inc
repnz
cs
push
xor
mov
inc
pop
pmullw
in
and
loop
jnp
fwait
xor
and
clc
rcl
test
aaa
push
add
sub
sbb
ds
push
fadd
in
mov
mov
xchg
jbe
loop
mov
adc
cmp
je
aaa
dec
and
retfw
pop
shl
push
into
sub
jmp
pop
sub
repz
pop
xor
add
pop
inc
stc
adc
clc
cmps
mov
add
scas
cdq
jmp
cmp
push
sahf
iret
aad
sbb
test
ror
sub
mov
daa
pusha
lea
std
psubb
ins
mov
cmp
cmps
jbe
sbb
outs
shl
int
or
aad
out
and
dec
xor
enter
cmp
sbb
fimul
movs
icebp
inc
stc
and
or
mov
test
ds
mov
add
loopne
int3
in
sub
rcl
ret
ficomp
(bad)
mov
mov
push
fistp
jmp
push
pop
inc
xor
jmp
pusha
das
push
sub
shl
push
in
nop
xchg
xor
ret
push
fcmovb
pop
aam
push
mov
jp
mov
inc
xor
in
xor
sti
stos
arpl
(bad)
repz
mov
dec
inc
in
mov
and
pusha
shl
mov
mov
add
fild
sub
(bad)
mov
sbb
sbb
fldcw
rcl
imul
ins
xor
mov
push
jne
xor
add
xchg
cmps
xchg
push
test
push
xchg
outs
add
hlt
test
inc
dec
jae
out
(bad)
cmp
into
leave
clc
jecxz
lods
dec
inc
popf
leave
push
sahf
jmp
and
movs
js
mov
fwait
dec
leave
pop
jmp
aad
push
inc
ja
cmps
jl
mov
mov
test
ss
test
(bad)
and
or
enter
(bad)
xor
push
mov
inc
cmc
daa
ss
daa
sbb
data16
rol
adc
out
cmove
and
ins
cli
stos
aas
fcmovb
lds
jno
adc
cs
repz
call
inc
fdiv
fxch
push
retf
push
cs
push
sub
(bad)
mov
mov
aad
cmps
jno
or
clc
ja
push
mov
and
cmp
xchg
scas
inc
adc
cwde
mov
cwde
or
cmp
jmp
fisttp
sbb
cmp
mov
mov
fisub
cmp
and
mov
int
jb
pusha
rcr
gs
lods
pop
mov
mov
jmp
jae
xchg
mov
fimul
and
cli
pop
dec
cmps
mov
pop
in
jb
xchg
repz
shl
test
jo
mov
mov
mov
fdiv
das
mov
daa
ja
retf
and
cmp
pop
jnp
into
mov
pop
ret
xor
inc
push
loop
jp
iret
and
or
mov
test
mov
pusha
ds
jo
dec
lea
std
ficom
or
sti
bound
pop
test
dec
cmp
jnp
xchg
cmp
jno
cmps
nop
fdivr
out
push
and
adc
push
push
aas
push
repnz
xlat
jbe
lock
dec
mov
inc
push
js
lods
out
jnp
popf
and
es
loopne
je
test
push
cmp
aas
xchg
ss
pop
mov
jmp
dec
sbb
and
jg
sub
dec
mov
add
push
or
test
clc
jl
pop
fwait
cmp
mov
jl
jmp
dec
sahf
adc
cmovge
mov
les
xchg
sbb
xchg
sti
xchg
call
repz
push
in
xor
fbld
dec
sbb
push
lock
int3
pmullw
les
outs
lds
dec
add
(bad)
pushf
xchg
add
jmp
cmp
sbb
lock
loopne
aam
pop
mov
(bad)
jae
aam
xchg
mov
retf
lock
cmp
and
mov
mov
push
sub
dec
mov
stc
ds
mov
adc
sar
push
add
jbe
call
inc
iret
mov
mov
cmovo
sbb
out
pop
pop
jae
mov
lock
dec
cmp
pop
mov
xor
aas
fmul
leave
loop
loopne
mov
sbb
push
(bad)
mov
adc
cmp
or
push
cdq
repnz
lahf
stos
(bad)
adc
mov
sbb
call
cmp
jle
push
mov
std
outs
shl
(bad)
aad
dec
mov
test
clc
jl
loopne
lods
cmp
mov
jecxz
jb
pop
add
loop
mov
push
enter
pop
cmc
fld
leave
in
sbb
dec
inc
js
psubusw
xchg
mov
rcr
dec
mov
icebp
dec
cdq
and
jo
xor
xchg
repnz
lahf
jl
mov
ret
push
retf
aaa
js
inc
leave
sbb
jo
or
jnp
mov
std
xor
dec
dec
fsub
jmp
cmp
cld
jl
imul
jne
push
mov
neg
scas
cmp
js
xchg
dec
dec
clc
cmp
cmp
add
jne
pop
scas
inc
fcmove
mov
test
xchg
sahf
jmp
sar
pop
ins
call
ins
push
dec
adc
and
popa
xchg
call
jns
adc
lods
xchg
shr
pushf
lock
neg
inc
ret
(bad)
iret
(bad)
mov
sub
cmp
adc
jge
gs
fiadd
nop
jmp
dec
cmps
movs
and
xor
idiv
repz
call
and
cli
ins
mov
push
mov
pop
cmp
daa
push
mov
(bad)
inc
fsubr
and
loope
test
sub
cvtdq2ps
test
out
loope
xchg
cmps
into
cmps
scas
aaa
jae
or
or
adc
enter
dec
cmp
int
aad
fwait
pop
mov
scas
aas
mov
sub
stc
ss
imul
leave
mov
push
clc
nop
mov
inc
cs
adc
popf
add
les
mov
xchg
fcomp
addr16
into
aam
dec
add
pop
out
sbb
test
data16
push
les
add
stos
mov
push
dec
repz
cs
aad
or
cdq
pusha
cmp
call
test
jmp
inc
fyl2xp1
ins
idiv
sbb
xor
or
xor
cmps
jae
arpl
sbb
ret
adc
cmp
sbb
aam
push
xchg
call
mov
xor
xor
mov
ins
dec
ja
or
cmp
xchg
xor
dec
and
pop
or
and
pop
adc
cmp
push
xchg
or
inc
push
xor
call
cli
gs
xchg
push
nop
leave
push
sti
pop
cmp
pop
and
nop
shr
or
movs
mov
les
les
hlt
jae
ror
pop
cmovae
fnstenv
cmp
push
retf
sub
rcl
in
inc
rol
mov
push
xor
push
test
jge
mov
jae
mov
arpl
push
add
stc
mov
cmp
jle
xchg
fild
mov
int3
cmc
sbb
push
xchg
dec
mov
jnp
out
inc
add
out
xlat
cmp
push
mov
jnp
in
inc
fsub
jo
pop
dec
pop
xor
or
xchg
in
int3
int
aam
and
jmp
dec
imul
inc
(bad)
sub
fdivr
test
cmp
(bad)
push
imul
pushf
test
out
movs
bsf
cmc
clc
call
fwait
xor
mov
sub
(bad)
(bad)
fist
ss
xor
cld
pop
push
xor
xchg
fucomi
and
jmp
ins
jmp
xor
mov
std
in
test
pop
push
ins
mov
fldcw
dec
sub
push
push
push
ds
pop
cld
or
and
inc
loop
cwde
sbb
into
lods
lods
aad
pop
inc
frstor
xor
bound
pushf
loope
stc
mov
mov
mov
adc
mov
retf
stc
or
dec
cld
jle
movs
sahf
jno
je
xor
jge
jg
mov
adc
cmp
pusha
adc
outs
xchg
dec
dec
int
pop
sti
push
dec
mov
push
mov
add
inc
mov
dec
fmul
popa
ins
or
hlt
xchg
add
fisub
push
cmp
cdq
dec
in
adc
into
lods
mov
call
pop
mov
pop
mov
nop
mov
nop
cwde
scas
pop
or
ret
xor
loope
cs
mov
int3
xchg
sub
dec
shr
jecxz
test
sbb
xchg
sbb
fstp
adc
cmp
adc
and
pop
add
cwde
mov
imul
(bad)
sub
ret
xchg
test
(bad)
xchg
sub
lea
inc
lods
push
paddsw
mov
in
sub
cmp
xchg
lods
scas
in
ret
mov
jecxz
mov
retf
jne
ss
into
dec
outs
outs
outs
dec
mov
pop
dec
es
sbb
jb
fadd
pop
jbe
sbb
mov
xlat
call
jmp
xchg
icebp
xlat
fsubr
(bad)
rol
add
mov
and
push
daa
test
adc
movs
ins
mov
scas
cmp
test
xchg
icebp
or
das
xor
mov
and
pop
scas
mov
mov
rcr
in
shl
fxch
fldcw
sahf
scas
sub
push
outs
icebp
movs
dec
cwde
nop
push
pusha
xor
aad
ja
(bad)
jmp
adc
xchg
shl
mov
scas
imul
lea
mov
mov
inc
mov
add
mov
mul
mov
data16
cmc
test
je
adc
jg
mov
cmps
repz
in
call
nop
adc
and
cld
in
loopne
sbb
addr16
dec
cmp
pushf
jb
mov
dec
mov
pop
adc
call
inc
neg
mov
out
push
sbb
adc
movs
outs
mov
(bad)
nop
cli
(bad)
mov
push
jge
les
retf
or
sbb
data16
sub
or
jl
test
sbb
shr
lods
icebp
inc
mov
imul
outs
mov
repz
cmp
imul
inc
mov
rcr
pop
pop
pop
in
pop
js
in
arpl
cmps
mov
adc
sbb
mov
addr16
jle
outs
mov
pusha
xor
mov
xor
gs
cli
push
shl
jl
inc
cmp
sub
js
adc
xor
daa
(bad)
sbb
loopne
mov
mov
xor
rol
jecxz
aas
mov
ja
arpl
cmp
xor
sub
in
xor
(bad)
ror
mov
cmp
cs
ins
out
ror
push
and
mov
add
add
leave
sub
inc
stos
sti
lock
mov
mov
add
mov
fucomi
mov
out
pop
mov
(bad)
cmp
fs
pop
dec
nop
fwait
push
icebp
rcl
mov
or
test
mov
ins
push
shr
retf
adc
imul
aaa
int
mov
les
scas
mov
imul
mov
aad
outs
add
mov
retf
retf
push
dec
fidiv
cmps
xchg
cmp
les
push
test
and
jmp
xchg
ins
adc
cmc
mov
add
test
sub
add
pop
(bad)
in
cmps
xor
or
pop
test
enter
iret
xchg
jge
cli
loopne
cmps
or
adc
dec
test
inc
ss
dec
popf
mov
fidiv
push
adc
jge
lock
xchg
iret
adc
arpl
in
cmp
or
jno
fadd
mov
repz
add
and
leave
xor
lea
sbb
leave
fld
mov
stos
and
imul
pop
lods
pop
dec
fldcw
sbb
sbb
cld
mul
movs
ja
sahf
int3
xchg
jmp
jae
imul
jp
out
jns
jb
call
fistp
int
xchg
mov
ja
push
xchg
push
data16
sbb
lahf
aam
mov
push
retf
mov
mov
rol
cmp
cld
jae
sub
adc
mov
icebp
push
and
push
xor
bound
mov
mov
pop
fimul
xor
test
sbb
movs
ins
mov
jne
pop
mov
jp
inc
xchg
scas
(bad)
xchg
fcomi
int3
sbb
jecxz
jb
pop
mov
sar
and
fs
or
or
inc
sbb
inc
aam
jle
xor
aad
mov
into
pop
outs
rcr
pop
jnp
fidivr
cs
(bad)
add
push
jmp
dec
int3
mov
sbb
leave
and
daa
cmps
es
pop
lock
imul
aaa
xchg
xchg
or
or
retf
sbb
sbb
pop
cmps
cmp
js
xchg
aam
fdiv
mov
mov
popa
hlt
mov
pusha
stc
inc
cli
add
int3
aad
aas
cmp
(bad)
cmp
mov
or
add
inc
dec
lahf
outs
xchg
jnp
mov
cs
gs
sqrtps
cmp
leave
(bad)
xor
jne
stos
aam
sub
mov
jbe
inc
(bad)
push
shr
cmp
loop
in
or
adc
outs
(bad)
jnp
jl
and
pop
sbb
fisubr
repz
cld
fbld
imul
push
jp
sub
ja
data16
cwde
enter
jo
inc
fisttp
sbb
xor
adc
cwde
js
pop
jmp
movs
mov
or
data16
lea
inc
outs
call
mov
lock
bound
sub
call
mov
mov
cmp
pop
nop
cdq
lock
and
inc
retf
ss
lods
xchg
pop
addr16
mov
and
and
pop
and
(bad)
cmp
cwde
or
add
vunpckhps
sbb
test
mov
xchg
iret
jmp
jb
and
jmp
(bad)
and
mov
xchg
xor
inc
jo
sub
adc
push
shl
mov
inc
int
das
(bad)
push
imul
push
sub
stc
daa
int3
xlat
jp
xlat
outs
push
cmp
push
push
sbb
in
pop
and
mov
and
shr
xchg
inc
movs
icebp
adc
mov
(bad)
mov
jl
or
sahf
or
es
jmp
test
inc
lods
push
ret
xchg
sub
jle
xchg
mov
mov
pusha
fs
ins
lods
lds
sub
mov
push
mov
clc
pop
xchg
cdq
pop
shl
out
sbb
pop
jno
xchg
adc
in
mov
mov
mov
push
pop
sub
test
cmps
cmps
mov
adc
or
cmp
movs
loope
imul
inc
(bad)
xchg
or
pushf
repz
jnp
xor
aad
ds
outs
xor
and
jl
std
sbb
sbb
push
les
es
out
icebp
lods
pop
outs
push
fbld
je
mov
or
mov
fcom
pop
std
sbb
cmp
push
pop
lea
call
mov
leave
(bad)
aaa
adc
sbb
or
sbb
mov
jg
sbb
or
cmp
mov
std
ja
mov
fidivr
daa
adc
or
fwait
xchg
mov
fstp
pop
shl
(bad)
repnz
mov
icebp
rol
movs
int3
xor
xchg
mov
mov
push
cmp
int3
fsubr
mov
(bad)
sbb
test
loop
jae
xchg
mov
hlt
inc
enter
push
aaa
es
out
in
mov
push
sbb
adc
pop
fdiv
lds
push
inc
add
(bad)
fcomip
out
out
call
shl
mov
ret
mov
or
repz
mov
mov
ds
in
fistp
dec
(bad)
rcr
push
mov
push
jl
retf
sub
or
aad
push
jae
dec
xlat
lods
add
xchg
and
inc
mov
pop
aas
push
mov
mov
jo
lock
xor
retf
xchg
cli
dec
push
ffree
dec
imul
jne
jno
or
mov
inc
cdq
sbb
dec
jp
mov
loope
shl
into
cmp
sub
into
sub
lods
pop
mov
push
in
retf
sbb
add
out
jb
arpl
jne
(bad)
sbb
mov
int
jg
adc
inc
xor
jg
adc
outs
js
dec
pop
inc
dec
lds
add
mov
out
or
fisub
mov
shr
dec
mov
add
test
aaa
jg
or
aaa
jnp
lock
or
sbb
in
mov
scas
stos
outs
add
dec
mov
cmp
loope
mov
inc
sub
pop
cmp
mov
movs
jae
leave
mov
sbb
push
cdq
xor
and
ds
mov
jbe
int3
outs
jo
rcl
in
std
mov
in
out
jp
jo
adc
jmp
mov
fidivr
jnp
int
shl
push
retf
scas
js
ins
push
aad
popf
push
dec
ret
adc
xchg
and
jne
jle
lods
inc
dec
pop
or
ficomp
repz
sbb
jg
mov
sbb
fmul
jmp
mov
or
jg
invd
xchg
(bad)
ss
scas
es
mov
outs
ins
int3
call
(bad)
mov
mov
rcl
daa
dec
das
mov
fwait
outs
dec
mov
pop
sub
push
hlt
jno
add
and
imul
adc
or
shl
popa
mov
aam
and
push
out
stos
nop
push
mov
test
inc
ret
push
(bad)
shl
xchg
or
xchg
les
movs
jno
ins
cmp
dec
jb
movs
dec
sub
mov
sbb
and
pop
repz
push
pop
or
loop
mov
add
xchg
or
loope
cmp
scas
pop
int
mov
sbb
es
pop
mov
addr16
add
ror
jle
push
mov
divps
mov
xchg
mov
out
mov
mov
lds
(bad)
pushf
adc
ret
dec
je
sar
cli
retf
fnstcw
nop
add
push
dec
dec
mov
mov
pop
enter
pop
or
cmps
repnz
or
jmp
adc
scas
mov
in
scas
ret
xchg
sbb
outs
test
and
cmp
lods
push
repz
push
(bad)
pop
cmp
inc
jmp
rcl
mov
scas
cmp
and
int3
sbb
pop
sar
das
bound
leave
mov
mov
sahf
stc
shl
outs
aas
sub
test
mov
pop
mov
retf
je
jp
dec
sub
pop
push
cmp
test
fild
add
call
pop
push
lods
or
jmp
test
(bad)
push
mul
mov
or
dec
call
(bad)
push
xor
rcr
pop
popa
in
xlat
cmp
lahf
sti
sti
pop
in
aas
enter
cmps
dec
mov
xor
sbb
push
jecxz
sbb
jne
addr16
cwde
mov
cmp
fdivrp
sub
lds
imul
retf
ja
stos
shl
push
sub
enter
pop
sbb
sti
xchg
inc
jmp
mov
test
add
dec
xchg
fst
sub
out
cmp
into
xchg
inc
imul
fptan
cmp
sub
cmps
xchg
pop
or
fild
ret
push
les
fdiv
imul
jne
scas
sub
(bad)
push
jmp
movzx
adc
cmps
stos
dec
pop
pop
das
or
retf
push
mov
cdq
dec
mov
dec
xchg
movs
xchg
movs
fld
rol
rdpmc
mov
sub
jo
div
cmp
addr16
icebp
lds
stc
call
cmp
cmc
fiadd
mov
xor
and
mov
imul
lea
cmp
cmp
(bad)
mov
je
int
mov
pinsrw
sbb
mov
jle
movs
fidivr
mov
std
movs
repnz
retf
pop
std
cmc
pop
dec
ins
push
cmps
mov
jle
leave
cmc
test
jle
shl
or
mov
mov
dec
add
fstp
sub
add
or
imul
pop
cmc
xor
les
(bad)
std
imul
xchg
jbe
or
ja
pop
cmp
fucom
inc
jl
icebp
adc
or
xor
mov
sbb
inc
aas
ret
lods
sahf
dec
sti
lds
jmp
cwde
std
bnd
pop
rcr
call
jmp
jb
enter
cmc
fs
js
lods
test
lods
dec
(bad)
jmp
mov
js
or
cmp
call
mov
xchg
sbb
scas
and
call
scas
out
push
or
sub
jne
ret
fwait
je
cmps
cmc
mov
jns
rcr
sbb
cmp
fisubr
mov
mov
sbb
pop
outs
test
ins
stos
nop
or
jle
pop
push
addr16
stos
xchg
daa
sub
mov
sbb
adc
jns
(bad)
rcr
sub
or
or
mov
ins
cwde
xchg
pop
loopne
adc
loope
xor
imul
or
or
inc
frstor
mov
mov
mov
and
outs
pop
ja
push
arpl
jg
cli
inc
cwde
or
cmp
ins
push
das
jns
mov
xlat
sub
icebp
xchg
in
and
popf
out
into
mov
fwait
pushf
bound
push
sub
shl
aas
ds
shr
in
mov
mov
scas
or
pop
int3
lods
push
mov
(bad)
mov
adc
or
jmp
stos
mov
jae
add
in
out
imul
cld
push
std
stc
add
sub
xor
mov
mov
loop
clc
sbb
imul
ins
fisub
fld
dec
sahf
and
dec
fwait
jp
lea
cmc
cwde
movs
das
inc
aad
mov
jp
ja
aad
dec
out
loope
bound
mov
neg
sbb
xchg
pop
inc
xor
ds
sub
jbe
cli
mov
push
push
and
add
adc
pop
sub
sti
arpl
push
xor
jno
adc
mov
mov
xor
mov
dec
jl
jp
imul
jns
(bad)
into
jo
test
shl
test
dec
not
out
pop
int
push
das
call
cmp
mov
sti
test
adc
into
inc
cmps
fisttp
and
fcmovnu
adc
icebp
adc
and
mov
push
or
inc
nop
gs
and
into
sbb
hlt
repz
push
mov
jg
xlat
push
mov
jae
shr
push
(bad)
pop
push
cmp
(bad)
lods
mov
int3
fistp
stc
jns
push
push
in
mov
sub
and
sbb
xchg
xchg
and
cmp
xchg
loop
inc
push
into
xchg
mul
or
dec
mov
jle
les
loope
in
div
cmps
adc
bnd
mov
xor
pop
fisub
lock
(bad)
data16
sub
ins
je
sbb
pop
sub
and
mov
mov
xchg
add
ret
in
xchg
outs
jmp
sub
leave
inc
shr
daa
in
push
dec
sbb
fadd
aad
or
pop
push
inc
mov
mov
xor
cwde
ja
pop
xlat
or
jge
fidiv
jnp
pop
or
leave
ja
jecxz
popa
sar
loope
test
inc
inc
mov
stos
retf
or
das
push
out
(bad)
out
add
leave
icebp
psubsb
stos
xchg
mov
js
test
xchg
pop
inc
scas
add
fld
cmp
fsubr
mov
jl
xor
lock
xor
das
mov
inc
push
imul
sub
int3
mov
cli
fst
sbb
adc
mov
sub
jmp
test
xlat
lock
cld
outs
mov
push
cmp
ds
pop
push
xchg
cmp
sub
xchg
dec
or
daa
jecxz
fs
lods
xor
movs
fs
stos
add
fmul
adc
(bad)
fld
(bad)
fistp
(bad)
xchg
mov
popf
and
or
xor
add
cld
outs
pop
fisub
hlt
std
add
(bad)
dec
sbb
adc
dec
jmp
push
push
outs
or
xor
shl
fild
sub
push
mov
(bad)
mov
test
xchg
pop
sub
adc
js
movs
jle
out
adc
inc
and
xlat
jb
mov
push
add
xor
test
gs
dec
jbe
idiv
cs
xor
les
push
push
das
mov
and
or
inc
sbb
xor
test
mov
and
repnz
cmp
in
push
mov
xchg
cmp
mov
les
cmp
leave
push
in
fst
jmp
jnp
(bad)
stos
push
sub
loope
push
sub
retf
int
sbb
pusha
int3
xor
or
enter
cdq
inc
push
pop
mov
add
stc
pop
and
xor
fisttp
fs
dec
cli
es
stc
mov
jne
nop
mov
mov
and
sub
and
mov
jg
scas
adc
aad
jns
out
test
push
arpl
cmp
or
xor
xchg
lahf
jmp
mov
jb
cmps
jg
stos
dec
xor
push
movs
and
and
pusha
dec
stos
mov
pop
lock
lods
out
push
sahf
add
and
dec
adc
scas
mov
cli
movs
inc
mov
loopne
pusha
sub
adc
out
cmps
retf
xchg
out
jbe
add
mul
xor
rcl
push
cmp
mov
mov
sbb
adc
sub
adc
mov
sub
push
aam
mov
mov
push
xlat
repnz
je
pop
inc
sar
cmp
mov
daa
aad
xchg
jbe
dec
hlt
rol
gs
xchg
pop
out
or
xchg
(bad)
test
das
out
jp
addr16
mov
(bad)
movs
das
xchg
icebp
stos
xor
ins
cmp
pop
pop
and
add
and
ja
pop
sahf
icebp
sub
loope
pop
mov
shl
popa
xor
add
push
pusha
loopne
lea
dec
pop
outs
into
inc
or
lea
ja
retf
mov
sub
sub
in
or
push
outs
(bad)
div
sub
aaa
out
pushf
mov
push
repz
adc
xchg
and
cs
mov
dec
jae
imul
cmp
mov
inc
pop
mov
jl
xchg
sbb
or
imul
fwait
leave
mov
sar
cmp
pop
mov
fcmovbe
and
out
xlat
in
aas
fcom
adc
jb
add
repnz
scas
sub
in
cmp
arpl
xchg
pop
sti
push
sbb
ror
cmps
inc
push
push
mov
imul
popa
mov
sub
push
sbb
popf
push
dec
icebp
(bad)
mov
adc
out
mov
jecxz
push
fimul
retf
and
test
ja
cdq
daa
push
maskmovq
add
sbb
fs
ja
ss
fwait
pop
cli
and
jne
xor
repnz
add
ins
ins
ins
shl
clc
(bad)
adc
(bad)
(bad)
xor
inc
js
push
fmulp
arpl
xor
push
sahf
mov
xchg
neg
inc
icebp
je
(bad)
dec
and
ds
adc
outs
mov
jl
or
push
push
inc
push
jmp
aam
enter
inc
adc
and
in
jae
js
je
xor
pop
inc
mov
ficom
cmp
enter
shl
jne
movs
or
in
test
dec
push
test
dec
xor
call
out
shl
stos
dec
mov
jp
inc
push
jbe
into
jg
cmp
ins
sub
aas
and
sub
ins
ror
(bad)
imul
add
div
add
ret
sbb
jp
and
or
mov
jmp
kxnorw
test
call
ret
mov
pop
xchg
push
lahf
jecxz
call
jbe
push
add
jae
sub
call
add
shl
std
ja
inc
add
adc
jg
lea
add
sub
inc
not
mov
clc
xchg
cmc
(bad)
mov
out
sbb
sub
xchg
jo
mov
sub
leave
jecxz
adc
enter
cmp
test
imul
or
mov
stos
test
leave
movs
jno
ret
clc
int3
mov
xor
imul
or
movs
mov
xor
movs
xor
out
es
mov
inc
jmp
fst
int
ret
cmc
test
mov
xchg
dec
mov
adc
mov
ret
jns
cmp
aam
and
mov
xor
sbb
inc
dec
(bad)
movs
ss
xchg
mov
mov
push
mov
js
test
jnp
pop
add
adc
mov
ror
sub
pop
or
add
ja
push
mov
fadd
jg
inc
movs
inc
and
xchg
xor
adc
icebp
jne
ret
iret
dec
lock
lahf
retf
imul
aad
dec
loopne
(bad)
pop
ror
add
dec
loopne
outs
cmp
cmps
movs
mov
in
ss
add
add
and
int
push
inc
test
jmp
sbb
xchg
retf
adc
stos
inc
cmps
arpl
adc
xchg
pop
sub
fs
adc
imul
inc
rol
add
das
xchg
call
jg
push
ret
push
xchg
jecxz
jae
mov
sub
daa
neg
jne
pop
repnz
fnstsw
jle
inc
sub
jmp
call
out
xor
cdq
(bad)
and
cld
aad
mov
out
ins
cmps
je
sbb
cli
pop
jmp
das
gs
push
add
cmc
fisub
(bad)
jo
rcl
sub
leave
jecxz
sub
fimul
xor
mov
fnsave
cmp
clc
scas
or
enter
test
inc
enter
xor
mov
fst
fstp
(bad)
sbb
nop
and
sub
fstp
sub
cmp
popa
daa
or
adc
dec
mov
stos
test
ja
dec
xchg
mov
aad
or
(bad)
clc
sti
aad
sbb
pusha
and
inc
dec
jo
mov
dec
mov
cmp
retfw
popaw
(bad)
jae
bound
push
jg
sub
cmp
bswap
jle
pop
sbb
mov
test
mov
(bad)
sbb
jecxz
mov
aaa
sbb
sbb
or
xor
adc
or
add
cmp
in
fidivr
mov
push
(bad)
jg
gs
pop
ficom
aas
(bad)
repz
mov
ins
lods
ret
xor
and
add
out
xor
das
inc
out
mov
(bad)
cmp
and
imul
fistp
fs
imul
sbb
pop
pop
in
push
and
int
jp
add
and
iret
ss
xor
mov
cmp
sbb
stos
sbb
xor
jno
sbb
dec
fmul
pushf
fcmovbe
ins
retf
xchg
mov
or
cli
vmwrite
pop
aas
dec
retf
inc
into
ins
mov
add
daa
call
cmp
jne
mov
sbb
or
clc
lahf
shl
xchg
cmps
ret
nop
dec
add
xor
ss
mov
sahf
aam
jnp
mov
mov
mov
and
cld
mov
mov
loope
mov
shl
bound
mov
lods
int
mov
jae
push
adc
mov
inc
jmp
fild
cmc
and
adc
call
dec
test
push
test
pop
(bad)
retf
jmp
fcom
xor
out
sbb
pop
mov
test
sti
pop
and
call
ins
in
into
xlat
dec
mov
push
dec
iret
and
or
dec
retf
int3
aaa
call
bound
push
dec
sub
jl
out
and
mov
mov
pop
mov
dec
push
fnsave
retf
repnz
pop
call
addr16
inc
sbb
movs
sbb
js
addr16
cs
add
retf
scas
or
fs
push
(bad)
jo
and
mov
adc
das
ror
cmp
test
mov
scas
or
aaa
cmp
fistp
mov
jbe
out
popa
push
lods
popf
std
mov
mov
push
out
inc
dec
das
js
cmovno
xchg
push
shl
mov
mov
ret
pop
xor
stc
or
test
pop
imul
ss
scas
out
pop
aas
xchg
inc
jl
call
sbb
mov
(bad)
fisub
mov
adc
test
fidivr
xor
mov
(bad)
mov
(bad)
xchg
jnp
addr16
(bad)
fcmovnu
push
sub
or
sbb
ins
sub
dec
inc
in
mov
xor
push
xchg
push
stc
movs
aaa
jno
and
xchg
or
ja
push
pop
out
add
sub
pop
jae
ins
loop
mov
push
or
jb
int
pop
push
pop
xor
adc
jae
ret
arpl
imul
fwait
les
push
ficom
xor
cmps
imul
ins
leave
iret
xchg
and
sub
das
add
sub
pop
daa
repz
ss
stos
cmc
and
cmp
lahf
lahf
jle
cmp
or
(bad)
cmc
sti
in
sub
dec
inc
arpl
cdq
xlat
and
retf
pop
in
cmp
mov
cmp
cld
jecxz
inc
or
(bad)
jecxz
add
ret
(bad)
aas
adc
shl
and
imul
and
inc
push
pop
test
add
in
pop
xchg
or
push
or
sbb
xchg
mov
stc
sbb
push
call
sub
mov
fs
es
xchg
jge
daa
adc
inc
test
pop
fstp
pop
jmp
mov
cmp
ins
imul
loop
arpl
push
adc
mov
sbb
mov
xor
cwde
in
clc
cmp
push
imul
mov
aad
aaa
shl
arpl
push
aad
xchg
jnp
enter
and
imul
jb
xor
rcl
and
ins
adc
call
or
mov
ins
ret
into
xchg
push
sbb
push
mov
call
loop
gs
sub
xchg
(bad)
mov
xchg
sub
ror
mov
and
cmp
fadd
inc
mov
dec
scas
cmp
inc
pop
jo
movs
aaa
fsub
mov
sbb
cmp
gs
jne
repz
mov
push
mov
jle
inc
or
adc
std
jmp
sub
and
jo
scas
lock
and
stos
sbb
ins
or
push
fist
mov
stc
jmp
inc
push
jl
add
(bad)
cmp
mov
ds
push
arpl
scas
mov
adc
mov
popa
mov
pop
fmul
loope
sub
mov
adc
out
ins
sub
dec
and
jecxz
aas
rep
dec
in
mov
sub
xor
popa
pop
cmps
shl
add
jb
pushf
push
sti
out
pop
adc
pop
dec
movs
or
shr
fsub
mov
dec
jo
jmp
cmps
sbb
cmp
fbstp
les
movs
test
mov
xchg
inc
pop
dec
pop
imul
sbb
ins
fbstp
hlt
cdq
jbe
mov
sbb
stc
pop
adc
lods
sbb
mov
jg
xchg
rcl
inc
mov
add
mov
add
out
mov
(bad)
iret
pop
pop
push
call
ins
test
dec
and
ror
mov
neg
xchg
ret
xchg
and
or
mov
jecxz
or
and
xchg
mov
loope
ss
jb
(bad)
in
mov
sti
inc
(bad)
(bad)
fst
sub
jl
pop
fistp
idiv
scas
and
cmc
or
mov
pop
adc
mov
test
ins
dec
mov
pop
jp
test
cmp
jb
sbb
mov
sbb
sub
adc
neg
inc
outs
dec
adc
daa
mov
push
fdiv
pop
jecxz
sbb
cmc
pushf
mov
mov
fcomp
dec
and
ret
inc
ins
ins
xor
std
dec
test
dec
movs
stos
outs
push
call
jp
js
es
xchg
dec
push
retf
add
adc
stc
pop
cmp
int
cmp
fldcw
jo
or
ret
cmps
pop
loopne
adc
jnp
pusha
mov
adc
pushf
sbb
pop
in
mov
add
xor
and
js
pushf
lods
movs
leave
lea
xchg
xchg
xor
jb
jmp
inc
mov
test
inc
add
iret
cmp
pop
sub
dec
mov
add
(bad)
inc
fcomp
sbb
movs
cmc
pop
sbb
mov
cdq
mov
cmps
mov
movs
cld
outs
push
aas
and
cmp
cmps
loopne
pop
imul
test
jnp
xchg
std
inc
stos
pop
jb
test
and
jle
mov
outs
(bad)
cmp
pop
mov
xchg
out
test
pop
and
mov
in
inc
cs
jae
popa
and
inc
hlt
iret
mov
mov
es
aas
xchg
push
fsubr
push
loope
or
jb
pop
jecxz
sbb
mov
or
jge
in
inc
rol
mov
pop
jl
add
inc
xor
push
push
mov
sbb
rol
stos
jo
lds
xchg
xchg
fs
cmps
shl
jge
fst
dec
sbb
mov
retf
adc
mov
daa
adc
or
mov
adc
(bad)
(bad)
sub
push
xor
mov
or
(bad)
jnp
data16
sub
idiv
dec
mov
std
scas
call
pusha
mov
cmp
ret
test
aas
mov
mov
sub
mov
aam
test
in
imul
mov
sub
mov
fwait
mov
daa
cmps
push
adc
mov
stc
call
retf
cmc
arpl
jecxz
enter
xchg
lds
popf
idiv
or
rcr
mov
or
xor
cmps
dec
xchg
push
and
xchg
or
xchg
(bad)
out
test
frstor
adc
(bad)
dec
outs
ror
cmp
sbb
lds
cmps
fcomip
imul
push
push
mov
xor
pop
mov
mov
mov
xor
(bad)
out
lock
jl
lahf
lea
sub
xchg
and
aaa
pushf
leave
rol
outs
jmp
movs
pushf
lds
stos
adc
dec
iret
push
dec
ret
jge
add
(bad)
das
xor
leave
and
jo
mov
jge
inc
dec
int3
and
sub
xchg
push
jl
nop
dec
fcmovnu
rol
fmul
lahf
cwde
in
adc
mov
sub
pop
pop
ds
inc
lahf
mul
outs
mov
call
push
push
cdq
or
xchg
movs
cmp
ret
call
shl
mov
jl
dec
push
adc
fisub
inc
dec
inc
mov
(bad)
aam
dec
movs
test
cmps
push
test
out
imul
dec
(bad)
outs
scas
inc
scas
pop
add
adc
retf
mov
idiv
rcl
stc
icebp
stos
add
push
mov
popf
pop
mov
xchg
inc
fcom
test
mov
pop
repz
fistp
clc
mov
push
mov
pop
mov
sub
pop
jge
adc
movs
add
cli
adc
test
popf
jmp
adc
hlt
int3
das
add
and
adc
popf
adc
add
sti
add
mov
leave
mov
xlat
pop
jae
in
fld
mov
call
xlat
gs
ret
sbb
pop
inc
test
xor
int
sbb
aas
shl
mov
out
fadd
mov
fwait
jmp
neg
xor
les
fdivr
stos
inc
dec
xchg
dec
(bad)
(bad)
out
ror
push
std
je
pop
push
retf
adc
retf
mov
in
(bad)
ficom
pusha
rcl
sbb
adc
adc
fucomp
daa
xlat
loop
jge
jmp
mov
sbb
or
add
mov
push
xlat
mov
push
cmp
push
mov
fdiv
jnp
aam
cmps
dec
in
hlt
jb
and
dec
hlt
outs
xor
mov
lahf
push
mov
xor
push
push
dec
hlt
repnz
sbb
sbb
daa
pop
std
jns
retf
pop
ja
dec
pop
lods
mov
leave
adc
pop
js
and
jae
sbb
mov
rcl
jmp
shl
adc
xchg
add
mov
sar
inc
pop
in
call
mov
ficom
or
addr16
xchg
sbb
sub
fnstsw
push
jp
dec
hlt
inc
lods
es
int3
lea
stos
pop
mov
fld
mov
sub
int
call
jb
add
fs
ss
jns
call
stc
es
cld
mov
sub
xchg
fsub
leave
ins
mov
pop
fsubr
js
das
add
and
push
xlat
in
push
jae
sti
pop
add
pop
(bad)
add
push
sub
fisttp
push
mov
sbb
retf
movs
push
lods
sbb
mov
out
retf
daa
mov
pop
mov
ss
push
xor
cmps
stc
rcl
inc
js
repz
push
data16
popa
or
mov
mov
pop
cli
loop
cmp
imul
push
test
aam
xchg
inc
sub
mov
or
xchg
pop
cmp
mov
das
enter
int
popf
sbb
add
add
inc
dec
movs
add
xor
lods
xor
popf
adc
adc
sbb
dec
out
mov
jge
xchg
arpl
popa
dec
mov
lds
lods
adc
or
sti
lea
(bad)
sahf
and
or
mov
push
sub
dec
adc
int3
mov
jge
repz
sub
lahf
dec
std
js
stos
and
das
cmp
fidivr
inc
ficomp
(bad)
test
xor
mov
ret
imul
jbe
dec
mov
dec
jmp
ret
aad
test
inc
push
lods
(bad)
fsub
add
lea
mov
adc
lea
lds
loop
(bad)
xor
imul
js
mov
ret
push
push
int
movs
adc
lock
sbb
ins
inc
pushf
aaa
cmps
js
rep
push
xchg
or
mov
sar
fucom
cwde
ins
lock
xchg
jns
addr16
jnp
ins
stos
pop
mov
std
sbb
fdiv
xchg
sub
push
shl
jne
jne
mov
les
xchg
test
mov
rcr
pop
cmp
cmps
add
push
push
xchg
mov
aas
adc
inc
mov
pop
clc
cmp
inc
imul
repnz
lods
cli
fidiv
jmp
mov
xchg
sbb
dec
add
xor
mul
mov
mov
popa
inc
jp
popa
cmp
shl
fs
fild
adc
xchg
jmp
cmp
test
push
int3
iret
push
(bad)
stos
cmps
push
out
xor
dec
sbb
inc
sbb
sub
retf
and
(bad)
mov
dec
push
lahf
sbb
call
aad
popf
xor
leave
fsub
inc
std
xchg
mov
add
mov
xor
ins
dec
add
mov
dec
getsec
sbb
js
add
cs
jl
inc
xor
loope
in
retf
imul
sbb
cmp
(bad)
call
push
bound
push
stc
mov
loopne
mov
shr
jno
mov
mov
arpl
pop
mov
push
data16
aaa
dec
out
dec
out
sbb
jg
push
xchg
and
jge
ins
sti
retf
jl
aad
pop
mov
xchg
and
mov
jg
pop
cmp
inc
pop
and
push
sub
lods
mov
mov
push
fcmovu
(bad)
mov
scas
cmps
push
stos
or
arpl
out
repz
jae
cs
sti
fnstenv
add
pop
ins
xchg
mov
push
(bad)
dec
les
fsub
sbb
push
fadd
pusha
xor
push
xor
sub
add
clc
sub
enter
dec
fscale
mov
fstp
nop
sub
call
mov
push
rol
mov
inc
sub
shr
fnstsw
das
neg
add
mov
jno
or
pop
sub
loopne
mov
jns
adc
mov
inc
in
ja
sub
mov
mov
cli
aas
data16
push
pop
xchg
cmp
sub
movs
inc
inc
jmp
std
inc
out
sahf
lock
jle
mov
sub
sub
dec
jmp
repz
lock
push
test
sub
dec
inc
cmps
dec
clc
sub
sub
aas
popa
fiadd
loop
neg
je
adc
add
sub
mov
xor
sbb
out
pop
cmp
in
mul
push
push
clc
jne
fidiv
fld
or
daa
mov
inc
fwait
ja
inc
sub
daa
or
retf
(bad)
loop
jl
cmp
and
sahf
fsubr
daa
push
and
jnp
or
push
shr
rol
lods
push
or
push
neg
mov
mov
adc
(bad)
sar
and
mov
adc
push
or
gs
pop
and
pop
dec
pusha
stos
imul
mov
sar
add
test
addr16
popf
lea
mov
xor
sub
ins
mov
lahf
mov
mov
mov
test
sbb
lods
jmp
inc
xchg
sbb
mov
mov
int3
xor
shl
sti
jns
push
and
addr16
(bad)
out
inc
lea
js
mov
xchg
xor
dec
and
xchg
mov
jne
test
add
jne
lods
sbb
xchg
and
mov
movs
nop
xchg
clc
jmp
aas
sub
iret
add
jbe
and
jp
inc
outs
imul
jle
adc
mov
fdiv
scas
mov
stc
add
out
mov
bound
pop
push
jg
gs
xchg
push
xor
retf
je
add
cli
pop
add
push
std
fld
aam
hlt
hlt
jg
adc
jbe
adc
ins
fistp
daa
stc
repz
pushf
mov
mov
shr
adc
sub
cmp
repz
pop
daa
movs
out
inc
outs
mov
cmc
adc
pop
cmp
lahf
push
pop
(bad)
repz
pop
nop
mov
xchg
and
sbb
and
dec
or
in
lods
in
fidivr
dec
inc
and
mov
ret
bound
test
push
lahf
vpunpcklwd
jle
inc
retf
ror
xchg
lods
or
into
jmp
pop
ret
jns
push
int3
inc
xor
aas
adc
sti
mov
jg
std
mov
pop
mov
push
pop
ret
pop
add
daa
inc
jnp
push
fcmovu
lods
xchg
fdiv
movs
aad
push
not
inc
ret
push
sub
xor
push
(bad)
and
adc
mov
shl
mov
ss
jge
out
lods
mov
cmp
add
out
call
push
fsin
ret
and
movs
(bad)
sbb
dec
mov
xchg
jo
xchg
dec
shl
dec
cld
push
(bad)
adc
ficomp
sar
xor
sbb
or
adc
dec
test
mov
pop
scas
and
rcl
mov
outs
or
pop
push
(bad)
cld
loope
retf
js
iret
ins
xchg
cdq
xor
rol
imul
popa
mov
pushf
mov
sub
repz
sbb
retf
inc
lods
pop
pop
pop
push
cmp
dec
ret
aam
jbe
cmp
dec
xor
mov
in
sub
dec
and
outs
not
sbb
out
sbb
sahf
inc
lahf
retf
cmps
push
mov
push
sar
and
push
ror
movs
stos
mov
push
dec
push
es
retf
cs
repz
aad
pop
mov
inc
bound
outs
cmc
push
ds
xchg
(bad)
popf
sub
pop
rcr
dec
into
dec
add
fidiv
(bad)
sub
xor
sub
rcl
sbb
xchg
dec
aam
cmp
pushf
dec
dec
and
xor
in
xor
dec
cmp
fadd
xor
xchg
jbe
clc
(bad)
sahf
adc
je
mov
inc
mov
dec
mov
add
cmc
adc
dec
push
inc
outs
or
xchg
fs
pop
mov
cmp
rcl
out
sahf
(bad)
sub
pusha
adc
push
adc
repnz
dec
cmp
int
jnp
ja
rol
pop
sbb
pop
ins
dec
loope
ins
cwde
iret
xor
inc
pop
jmp
pop
dec
jl
lods
and
cmp
dec
dec
pop
imul
sub
mov
mov
push
dec
ret
stos
ds
or
jno
or
enter
and
or
sar
xchg
(bad)
loop
out
dec
jns
enter
inc
pusha
aam
add
fdivr
ins
aad
cmp
lea
leave
mov
inc
int3
jnp
stos
jbe
aam
fs
imul
js
mov
jge
retf
cwde
sbb
data16
scas
and
rol
lahf
outs
push
adc
dec
jg
push
xor
add
fbstp
jmp
or
mov
and
jno
ins
dec
lahf
(bad)
fcomi
dec
xchg
es
std
cmp
jge
hlt
ficom
mov
test
jae
mov
mov
sbb
add
fwait
in
icebp
test
adc
rcr
adc
pop
movlps
addr16
mov
mov
int3
clc
sahf
aam
mov
mov
mov
mov
je
dec
popa
xor
dec
push
scas
mov
xchg
fcom
pop
sbb
adc
ins
pop
sahf
jbe
scas
jnp
xchg
(bad)
stc
fild
clc
pop
ds
inc
jo
cmp
inc
sbb
xor
adc
pop
arpl
nop
mov
mov
sti
cmp
sbb
cmc
fnsave
add
xchg
pop
vmread
dec
jb
ins
stos
dec
rcr
call
lds
leave
dec
dec
xchg
xchg
cmp
pop
xor
xor
cli
mov
lock
repnz
lea
or
mov
cwde
dec
test
repnz
sbb
mov
and
push
retf
sbb
and
fiadd
(bad)
lea
adc
push
sbb
(bad)
popf
jbe
push
xlat
xlat
rcr
retf
fnstenv
pusha
fs
sar
and
inc
jb
pop
mov
sub
pop
test
sub
in
push
mov
test
inc
rcr
xor
mov
mov
pop
mov
ret
and
stos
or
dec
xlat
xchg
push
ror
jl
jmp
ffree
stos
lods
pushf
test
adc
mov
xor
cmp
xor
push
inc
aas
or
dec
cmp
xchg
in
adc
xchg
sub
out
or
dec
add
data16
les
out
pop
ret
xchg
fisub
mov
adc
lock
push
pop
pop
mov
ret
cmp
scas
jecxz
pop
das
sbb
ss
lock
mov
inc
mov
jecxz
mov
and
xor
lahf
je
xchg
xchg
jne
int3
inc
cmps
scas
jmp
(bad)
pop
xchg
aas
loope
jmp
scas
lds
dec
icebp
ror
sub
nop
sar
mov
dec
sbb
je
or
test
cmp
out
pop
push
adc
or
sbb
fcom
xor
dec
mov
inc
mov
bound
adc
popa
push
outs
cmp
inc
push
or
sar
mov
dec
ins
cmp
pop
mov
imul
xor
stc
cmp
mov
cs
add
pop
xchg
rcl
jbe
scas
fmul
cmp
imul
xor
icebp
xchg
lock
into
mov
adc
std
lods
and
fsubr
push
loop
(bad)
sub
ss
movs
aad
mov
gs
jno
xchg
js
aas
test
lods
inc
pop
shl
bound
xchg
lods
out
imul
pushf
and
aaa
popf
jbe
nop
and
addr16
sbb
nop
xchg
je
adc
mov
cmp
cmp
cmp
sbb
test
sti
inc
ins
jne
stos
mov
sbb
stos
pop
pop
sub
and
sahf
loopne
lock
dec
jb
or
pop
cld
js
fstp
mov
push
lds
mov
xchg
mov
and
icebp
pop
cwde
adc
movs
rcr
adc
jo
imul
mov
push
jbe
jb
loope
shr
adc
jne
push
push
call
sbb
in
fmul
(bad)
js
aad
movs
ret
add
xchg
aas
push
fs
jne
mov
in
in
cs
call
outs
scas
or
jmp
ins
fst
sti
jns
mov
inc
dec
test
pop
cmp
leave
jl
mov
leave
scas
shl
imul
loope
popf
mov
mov
je
retf
popa
ret
movs
(bad)
fisubr
push
inc
mov
sbb
push
ret
adc
out
rep
or
add
push
cmps
or
inc
dec
out
dec
das
inc
adc
xlat
pushf
mov
popa
icebp
or
nop
into
push
(bad)
std
sub
pop
loop
dec
mov
cld
retf
mov
sub
cmp
inc
pop
mov
rcl
in
pusha
add
shr
jae
xchg
into
shr
xor
loopne
cmps
outs
or
and
ret
adc
(bad)
cmp
cmp
cmps
aaa
(bad)
or
daa
call
fistp
lods
add
ret
enter
sbb
mov
jno
adc
cmc
inc
cmps
fsub
ins
leave
xchg
outs
pop
or
push
inc
jne
xchg
(bad)
mov
stos
pop
retf
mov
in
adc
fwait
dec
mov
pop
cmc
outs
sub
add
push
dec
ss
jmp
popa
or
in
adc
mov
das
out
(bad)
ins
pusha
movs
xlat
pop
push
jo
stc
push
inc
pop
cmps
fild
jne
xor
cmc
sub
emms
imul
movs
jecxz
jae
xchg
je
out
xchg
or
xor
dec
sub
in
pop
lahf
adc
rcr
hlt
cmp
jo
inc
(bad)
fild
inc
cmp
mov
std
mov
(bad)
lods
push
outs
xor
xor
ret
xchg
mov
sub
jmp
push
nop
dec
pop
pop
in
jns
lock
test
or
dec
test
jnp
mov
fadd
mov
call
ins
dec
cs
es
fistp
pop
das
arpl
and
dec
sub
test
mov
test
icebp
jp
jle
inc
xor
out
shr
stos
stc
jne
and
out
es
aaa
jp
add
rol
mov
cmps
add
(bad)
mov
jbe
dec
cmp
dec
js
cmp
push
xchg
jle
(bad)
cmp
add
dec
sub
push
enter
rcr
mov
fisttp
int
add
jo
mov
mov
sbb
xor
mov
push
mov
fs
sub
or
pushf
nop
push
mov
push
mov
bound
cmp
mov
xchg
out
xlat
cmp
enter
push
out
push
ret
loope
xchg
fst
dec
cmps
(bad)
pop
adc
aaa
aad
dec
push
ins
xchg
mov
adc
mov
pop
inc
in
nop
icebp
(bad)
mov
ror
cld
fwait
push
retf
push
ins
popf
or
sbb
mov
retf
adc
adc
xchg
lods
inc
xor
mov
bt
adc
xchg
cmc
cmp
cmc
and
add
daa
and
and
stos
sub
add
mov
sub
pop
or
cwde
xchg
xor
push
push
rcl
call
xlat
setno
outs
cmp
sbb
repz
jge
popa
xchg
mov
mov
lock
xor
call
xor
mov
mov
imul
and
mov
scas
(bad)
leave
ds
cmp
inc
xchg
add
into
hlt
dec
nop
cmp
nop
jb
jmp
sub
stos
mov
push
mov
add
out
loope
pushf
mov
repnz
or
mov
inc
ss
lods
sub
mov
and
and
inc
out
cmp
test
es
aad
sub
es
retf
pop
xchg
movs
shl
dec
dec
jl
inc
mov
(bad)
movs
(bad)
stc
fdiv
adc
stos
and
mov
pop
outs
lock
loope
pop
int
nop
xor
push
mov
mov
(bad)
cmps
xor
or
xor
adc
mov
mov
sbb
inc
je
add
sar
mov
sub
daa
pop
loope
fsub
movs
jg
js
stos
ja
add
dec
lock
adc
dec
adc
push
jle
xor
mov
fild
mov
sti
or
inc
and
mov
dec
scas
in
xor
push
(bad)
sub
int
fld
add
sub
dec
fs
jmp
add
mov
ds
in
push
push
hlt
aam
cmp
clc
or
out
push
sbb
mov
push
jge
pop
out
and
jns
es
mov
add
ror
cmp
cmp
arpl
or
imul
aas
das
pop
xchg
shr
(bad)
sahf
mov
inc
push
fsubr
int3
(bad)
js
sar
xor
cld
cmc
stc
sahf
(bad)
or
jp
jecxz
adc
dec
lea
in
dec
xchg
ss
inc
mov
jnp
adc
mov
add
or
cwde
jl
pop
rcl
mov
cli
xchg
sub
test
mov
and
push
sbb
pop
mov
mov
add
gs
lea
mov
jl
sbb
movs
test
dec
jmp
hlt
scas
popf
popa
pop
hlt
mov
rcr
sub
es
mov
es
fiadd
add
retf
xchg
hlt
mov
push
into
sub
xor
dec
mov
xchg
iret
mov
dec
pop
sbb
sbb
push
ror
ins
mov
add
cmc
hlt
call
or
cmp
int
jns
pushf
dec
mov
pop
jg
shr
neg
jg
rcl
pop
cmp
sti
xchg
jecxz
xchg
mov
sti
xchg
adc
loope
sub
lea
cmp
or
mov
pop
imul
addr16
adc
sub
push
xor
cmps
lds
fld
dec
addr16
cwde
cs
dec
inc
test
and
out
push
out
das
lods
icebp
imul
xor
inc
xchg
dec
push
clc
jl
cmp
inc
stos
out
inc
pop
in
pop
push
jmp
jg
cmp
sar
cmc
mov
sbb
add
js
inc
hlt
aam
dec
es
imul
adc
inc
mov
std
push
popf
mov
(bad)
mov
push
dec
adc
sahf
ror
pop
daa
aas
xchg
mov
pop
idiv
sbb
lods
out
inc
nop
retf
fcom
nop
cld
adc
mov
mov
adc
js
les
add
jmp
scas
scas
jmp
jg
mov
mov
push
sbb
popa
in
dec
enter
test
je
aaa
int3
push
push
fsubr
jbe
or
xor
icebp
cmc
jno
(bad)
leave
repnz
leave
or
xor
imul
scas
and
scas
add
(bad)
mov
bound
pop
xor
or
int
jg
mov
dec
cmp
pop
movs
cwde
sbb
es
out
shr
mov
xor
ss
xchg
push
in
es
mov
mov
in
lea
ja
xchg
xchg
jg
or
inc
push
outs
jb
push
adc
in
stos
icebp
pushf
js
mov
int
clc
push
fdiv
enter
int3
outs
jmp
iret
pop
jmp
jecxz
pop
int
lahf
sub
cli
les
add
inc
outs
sbb
add
xchg
in
call
xor
movs
push
jge
adc
lds
xor
ins
ror
dec
pop
pop
and
pop
outs
pop
cs
push
inc
cmps
inc
dec
xor
push
mov
cli
mov
cmps
ins
in
movs
cmps
mov
dec
inc
sbb
aad
test
clc
dec
loopne
in
sub
call
sti
mov
inc
fbstp
ret
jge
scas
sub
call
pop
xchg
push
cmp
fild
cmp
loopne
fldenv
call
iret
add
arpl
enter
or
sub
jb
jg
gs
and
mov
jae
stos
icebp
ss
jae
jl
xchg
scas
xchg
or
imul
mov
aad
jmp
jae
mov
lock
cs
xchg
in
push
outs
pop
cli
in
xchg
xchg
pop
ss
sar
pop
push
(bad)
pop
lds
ins
bound
js
push
cmp
(bad)
sti
add
test
sbb
cmp
cmp
addr16
xor
mov
data16
mov
jns
std
ins
pusha
cmp
jb
xchg
or
pushf
out
xchg
xor
es
xor
sbb
imul
ds
jbe
mov
retf
sub
sbb
xlat
add
lods
addr16
stos
push
jb
xor
repz
xor
mov
xchg
es
pop
(bad)
xchg
cmp
inc
ror
pusha
xor
mov
xor
xor
(bad)
aam
arpl
arpl
bound
cwde
inc
jmp
or
out
xor
inc
mov
imul
or
add
pop
pop
inc
clc
hlt
dec
sub
mov
repnz
outs
shl
shl
add
mov
es
inc
scas
in
hlt
ins
shl
div
mov
(bad)
pop
addr16
pop
aaa
pushf
mov
outs
cli
fidiv
sar
xchg
dec
or
pop
dec
add
jno
das
mov
scas
xchg
dec
(bad)
push
or
ins
fmul
add
adc
pop
sbb
cmp
mov
push
fwait
call
outs
out
add
fsub
cld
adc
ja
call
mov
mov
adc
mov
add
movs
in
movs
pop
push
lods
jae
xor
test
sbb
mov
nop
stos
add
lea
int3
mov
lock
pushf
movnti
jmp
xor
dec
dec
nop
movs
out
adc
shr
rol
fidiv
ror
fcom
das
stc
xor
sub
add
lock
fnstsw
push
jo
jb
rcl
inc
lahf
xor
das
leave
ret
fist
pop
rcr
or
xchg
fild
add
cmp
sahf
sbb
sahf
add
rcr
loop
adc
sahf
push
dec
retf
add
repz
dec
jb
pop
(bad)
mov
push
push
xchg
ins
xchg
jmp
or
xor
pop
jo
jno
mov
outs
cdq
sbb
scas
out
ins
(bad)
ds
add
dec
and
lds
sub
scas
fs
and
ret
jecxz
pop
cwde
outs
jae
int
adc
xor
mov
mov
push
mov
mov
aad
sub
jg
bound
xchg
push
stos
imul
mov
xor
push
xchg
lods
scas
shl
mov
pop
loop
mov
enter
sub
cmps
jno
rcr
adc
jbe
pop
movs
imul
mov
or
push
sbb
fsubr
inc
imul
sub
das
int3
adc
mov
mov
ror
cs
xlat
into
fisttp
xor
dec
mov
cmp
iret
js
sbb
xor
sub
cmp
sub
call
inc
add
jg
nop
and
xlat
rcr
hlt
(bad)
push
int
retf
out
je
addr16
loope
mov
(bad)
cs
pop
mov
jnp
mov
xchg
cmc
sbb
pop
push
mov
scas
neg
pop
xor
mov
ret
fist
in
js
nop
sub
stos
ficom
jne
(bad)
adc
sub
jmp
ins
add
jge
outs
pop
pop
push
shl
xor
xchg
dec
add
and
movs
retf
lods
not
xchg
mov
mov
es
stos
adc
dec
loop
xchg
jmp
xor
mov
adc
sti
(bad)
jmp
(bad)
inc
xor
sbb
retf
push
xchg
(bad)
sar
movs
sub
lods
ja
mov
mov
cli
xor
inc
mov
mov
push
mov
adc
(bad)
(bad)
in
stos
mov
sbb
xchg
xor
aas
ss
mov
pop
pop
sbb
fld
cmp
mov
push
jae
(bad)
call
add
aas
cmovle
imul
cwde
pushf
out
cmc
and
dec
push
rcl
dec
jnp
sar
call
add
call
out
mov
shl
jp
mov
mov
and
pop
add
ds
sub
movs
test
cmp
mov
enter
stos
pop
in
(bad)
(bad)
push
(bad)
in
aaa
ins
(bad)
pop
cmp
sbb
(bad)
les
push
fadd
div
lock
pop
(bad)
mov
test
and
dec
inc
rcr
mov
aad
sbb
iret
cmp
aam
outs
mov
dec
ins
xor
lods
xlat
lds
call
jno
sbb
mov
imul
cli
outs
jge
stos
out
pop
pop
mov
les
repnz
in
sub
mov
jb
and
mov
jge
dec
and
movs
icebp
mov
aas
cmp
out
addr16
cmp
mov
dec
pop
pop
bound
or
push
mov
stc
xor
sahf
ret
lods
fisubr
xchg
cs
or
mov
cwde
xor
adc
jb
(bad)
(bad)
adc
mov
arpl
sub
xlat
in
or
jecxz
leave
fs
or
inc
or
adc
outs
xor
lods
add
pop
outs
imul
repnz
xor
retf
(bad)
mov
xchg
pop
(bad)
ins
stos
lock
movs
mov
add
inc
xor
cmp
add
xchg
cdq
xchg
cmp
es
mov
mov
arpl
lock
sub
pop
or
xor
icebp
shl
mov
sub
adc
add
imul
aam
cmp
and
movs
test
gs
std
aam
xor
dec
mov
dec
in
jns
sbb
aaa
fwait
inc
add
cmp
rcr
push
inc
cmp
popf
jae
rcr
mov
push
mov
not
adc
cmp
sbb
and
iret
pop
es
es
mov
and
sahf
lds
movs
sub
adc
cli
test
sbb
jge
ins
jp
xor
movs
dec
inc
jb
rcl
adc
or
popf
mov
bnd
pop
push
mov
push
nop
nop
shl
je
add
and
xor
mov
ret
inc
jl
dec
and
jb
jnp
dec
add
fidivr
enter
adc
das
adc
call
lock
out
mov
pop
aad
test
mov
cmp
dec
mov
add
and
adc
and
in
popf
xor
daa
ja
iret
es
add
outs
mov
es
jmp
mov
mov
xor
leave
(bad)
lods
mov
ins
sub
daa
pushf
cmp
and
fisttp
call
cmp
inc
add
shr
daa
and
fld
scas
lahf
pop
into
clc
mov
adc
repnz
xor
loopne
rcl
cli
and
daa
xchg
stos
data16
in
les
std
pop
movs
inc
dec
mov
mov
jns
sub
pushf
(bad)
test
xchg
cli
call
nop
push
jl
adc
div
imul
std
lods
adc
in
ss
cli
pop
inc
cmps
sbb
inc
or
and
push
rol
xor
fbstp
cdq
out
sahf
or
(bad)
stc
sbb
jmp
mov
jb
jl
push
jge
sbb
aam
mov
adc
dec
ja
sbb
mov
in
dec
jl
dec
fnstenv
addr16
pshufw
jmp
stc
inc
in
fwait
daa
inc
call
and
sub
imul
push
cmp
sub
sub
or
or
cwde
mov
out
push
(bad)
push
gs
sub
out
into
fistp
rol
dec
cdq
je
adc
mov
mov
and
jmp
xor
dec
jno
movs
ret
pop
je
ds
outs
loopne
fs
mov
nop
mov
adc
aad
sub
sahf
cmc
addr16
pushf
sub
jl
dec
lock
mov
mov
loope
mul
movs
push
inc
rcl
popf
out
stos
aaa
or
add
js
pop
(bad)
jmp
dec
js
out
test
push
sub
mov
mov
movs
shl
fs
popa
mov
jno
or
(bad)
(bad)
lea
sub
movs
or
loop
adc
nop
cmp
pop
test
sbb
cmp
sbb
mov
cmovae
cmp
std
popa
jo
push
push
dec
pusha
mov
in
sub
(bad)
jae
fwait
pop
cmp
addr16
add
bound
adc
add
and
cmps
adc
arpl
loop
pop
scas
call
dec
inc
loop
pop
data16
inc
adc
xor
fld
and
into
sbb
push
and
jmp
je
push
adc
mov
lods
ins
dec
call
pop
fisubr
(bad)
cmc
cmps
pop
lods
inc
mov
fisub
lods
push
cmp
arpl
sti
in
cld
in
xchg
jmp
mov
idiv
inc
jle
(bad)
fisubr
(bad)
loopne
push
out
xor
pushf
pop
cmp
push
lock
enter
lock
(bad)
mov
or
aaa
sahf
mov
pusha
mov
inc
(bad)
aam
and
test
es
fdivr
inc
xor
ret
add
test
sbb
arpl
repz
inc
pop
adc
lods
xchg
jp
repz
popf
sub
sbb
aaa
mov
push
lods
and
push
add
or
xchg
cmp
xchg
nop
clc
xor
xlat
pop
mov
stos
das
add
aaa
fcmovnu
repz
jno
faddp
pushf
xor
(bad)
dec
xchg
rcl
(bad)
cld
fild
mov
or
outs
mov
arpl
dec
callw
fidiv
sub
add
retf
int3
clc
rcl
sbb
rol
mov
sbb
jg
icebp
jmp
push
cdq
das
(bad)
stc
sahf
mov
push
stc
cmp
mov
jnp
shl
out
fmul
rcl
and
sbb
jns
inc
add
mov
adc
test
test
inc
push
jo
repnz
xor
or
movs
pop
adc
ret
inc
xchg
mov
mov
pop
pushf
hlt
aaa
xchg
jne
pop
xor
cmp
pop
jno
cwde
int3
dec
outs
sbb
add
jg
pop
cli
pop
cmp
cmps
lock
sti
mov
aad
repz
mov
jo
gs
not
gs
dec
pop
lea
repz
imul
mov
pop
shl
in
icebp
push
loope
shl
aas
inc
and
sti
das
push
adc
(bad)
aas
sub
psadbw
sbb
popf
sbb
adc
scas
sub
xor
jb
mov
clc
ins
loop
out
adc
adc
into
frstor
arpl
push
cmps
push
hlt
push
push
xor
mov
mov
retf
cmps
xchg
fnsave
push
jb
fidivr
cmc
mov
aad
(bad)
mov
mov
mov
lea
and
(bad)
jnp
and
cmps
fisubr
ffreep
and
ss
jg
xchg
movs
mov
cmp
mov
add
pop
cmp
stc
out
(bad)
mov
sbb
xor
jbe
mov
(bad)
std
pushf
in
push
not
ror
imul
lahf
adc
daa
fwait
inc
test
sti
xchg
out
popf
sub
sbb
rcr
repnz
xchg
popf
hlt
mov
sti
int
scas
adc
movs
xlat
repnz
(bad)
xchg
dec
and
mov
xor
pop
cmp
add
inc
(bad)
cs
dec
cmc
cld
adc
in
lahf
cmp
dec
or
xchg
xlat
dec
or
xchg
mov
mov
sbb
das
xchg
jbe
scas
arpl
es
sub
les
fsubr
inc
test
fucomi
outs
xor
clc
(bad)
xor
sbb
lods
ret
shl
push
mov
push
push
xor
xchg
cmps
in
jecxz
cmovl
pop
xor
out
mov
dec
xchg
add
out
adc
imul
out
ss
sahf
in
mov
xor
sbb
std
xchg
jmp
xor
mov
mov
and
(bad)
in
sub
mov
shr
add
mov
push
add
aas
mov
repz
leave
xor
movs
or
mov
aad
pop
lods
mov
mov
or
imul
mov
cli
push
mov
ins
js
ret
(bad)
pop
cmp
pop
in
cmp
getsec
and
or
test
mov
inc
mov
push
push
icebp
push
(bad)
in
xchg
xor
sub
cdq
adc
add
ss
es
mov
call
inc
scas
or
js
mov
aas
gs
adc
outs
sahf
jmp
cmc
adc
sbb
mov
xchg
push
mov
int
push
fdivr
aaa
or
test
fcomp
push
push
xchg
in
pop
push
lea
jmp
inc
jne
xchg
sub
sbb
mov
ja
hlt
fcmovne
dec
push
fisubr
xor
cmp
cwde
mov
pop
(bad)
and
fdivr
jo
stos
xor
lds
fisub
daa
in
cvtps2pd
aaa
stos
je
sub
mov
movups
or
xor
cmps
push
jmp
das
loop
jnp
cmp
loope
sub
and
dec
mov
aad
ss
xchg
adc
es
sbb
lock
mov
aaa
aad
and
test
or
sbb
sbb
xor
mov
push
icebp
outs
adc
jmp
adc
das
(bad)
retf
pop
gs
icebp
gs
sbb
lea
data16
movs
bound
push
jmp
dec
xor
sti
bound
add
repz
cmc
cmps
lock
jnp
leave
shl
sbb
sbb
lods
ss
push
arpl
and
rcl
rcr
push
sbb
pop
mov
mov
sahf
jnp
(bad)
imul
mov
loop
adc
jmp
movs
mov
inc
jge
das
sahf
or
xchg
adc
test
dec
and
jo
xor
in
ds
fcomp
xlat
xchg
add
ret
add
dec
and
scas
cmp
add
and
pop
je
iret
and
adc
inc
dec
pop
stos
stc
jmp
cmp
les
shr
addr16
jae
test
pop
push
aam
repnz
pop
test
cdq
dec
mov
jne
leave
or
mov
push
sub
movs
push
pop
xlat
or
pop
xchg
lods
leave
xlat
push
test
int
icebp
(bad)
enter
clc
into
jbe
daa
add
dec
int
xlat
jns
adc
inc
fs
mov
sar
js
mov
popf
pop
addr16
dec
imul
jp
xor
clc
call
aam
pushf
mov
js
sub
div
cmps
push
fistp
frstor
pop
lock
out
movs
jae
loope
mov
mov
dec
sub
rol
xor
sub
sti
stos
and
dec
mov
in
test
sbb
push
sub
dec
push
lock
je
xchg
mov
rcpps
(bad)
jg
xchg
sub
mov
xor
mov
inc
movs
dec
bound
xchg
xor
test
sub
aam
(bad)
dec
jg
or
xchg
loope
or
ins
mov
mov
dec
dec
outs
ficom
dec
ins
xor
fcomp
sar
jg
xor
dec
loop
les
dec
nop
mov
fcmovne
popa
enter
pop
xor
or
adc
test
cmc
xor
(bad)
push
or
xchg
ss
ror
dec
jbe
sbb
add
popf
jmp
inc
stc
xchg
inc
xor
int
pop
mov
data16
sub
(bad)
xor
in
mov
and
inc
sahf
mov
sbb
in
jg
cmps
pusha
and
pop
gs
xchg
sbb
sbb
jbe
xchg
(bad)
lds
xchg
fdivrp
xchg
das
sub
lahf
(bad)
jo
jne
and
sub
push
pop
jo
add
rcl
sbb
mov
inc
pop
dec
imul
pop
cs
push
in
mov
add
stos
push
addr16
mov
ret
movs
pop
sub
xchg
and
inc
fiadd
ins
pushf
push
cdq
dec
mov
out
pop
adc
inc
adc
lods
imul
and
sub
cmp
dec
movs
neg
bound
lods
xchg
sub
jns
pop
jmp
rcr
les
jle
fdivr
mov
inc
pop
push
jo
add
push
push
xor
sub
cmp
les
repz
movs
mov
mov
xlat
retf
repnz
bound
pop
fwait
mov
mov
mov
xchg
das
ret
sub
popa
loopne
shr
mov
xor
out
jmp
dec
xor
xor
pause
(bad)
ja
lds
mov
push
sub
adc
imul
inc
(bad)
xlat
int3
mov
inc
loop
fstp
cld
xchg
cmps
les
dec
mov
lock
leave
mov
xchg
or
sbb
xor
pop
cli
adc
gs
jmp
lds
cmp
(bad)
fnstcw
into
push
lods
popa
outs
idiv
loope
mov
push
sub
daa
lock
push
dec
scas
fst
mov
and
pop
or
std
jg
clc
sub
dec
cdq
add
mov
mov
scas
push
push
and
fidiv
addr16
enter
pusha
xchg
mov
and
ins
push
jns
jle
pop
cli
push
pop
sbb
mov
and
add
add
mov
mov
sub
and
or
call
push
sahf
push
sbb
call
fwait
add
push
jmp
in
repnz
imul
adc
dec
inc
pop
sub
outs
cmp
loop
mov
cs
dec
aaa
pop
sbb
sub
neg
sar
cmp
inc
mov
mov
pushf
jl
xchg
enter
dec
mov
fmul
(bad)
ins
icebp
es
sub
icebp
(bad)
dec
loopne
dec
in
fcmovbe
lds
xchg
in
leave
xchg
xor
cmp
or
adc
ficomp
sub
adc
stos
push
ins
dec
inc
ins
mov
pushf
dec
add
inc
movs
dec
lods
not
and
bound
cmp
call
(bad)
shr
jno
push
into
pop
cmp
imul
retf
out
dec
loopne
sbb
dec
inc
loope
push
out
lods
outs
pop
mov
aaa
js
mov
xor
outs
xchg
adc
mov
fnstsw
push
inc
push
or
es
cmp
mov
sub
mov
pop
adc
imul
lahf
aad
or
je
and
xchg
rep
ja
out
add
iret
push
or
clc
movaps
hlt
xchg
xor
(bad)
jae
jb
xor
and
es
and
ds
pop
jb
fld
jo
repnz
pusha
jle
jmp
pop
fcom
ret
push
adc
jp
pop
vcvtss2usi
mov
sbb
popf
test
pusha
iret
shl
cmp
add
pop
adc
push
fst
mov
int
adc
lea
scas
push
adc
xchg
je
lahf
xor
call
add
jo
push
ja
pop
dec
neg
jb
inc
cld
sbb
pop
lds
dec
adc
pop
sbb
jae
jge
lea
cmp
xor
test
ss
pop
sub
inc
cld
xor
js
lahf
(bad)
xchg
(bad)
gs
cmps
jecxz
pop
and
sbb
aam
dec
inc
stos
xor
aam
test
pop
push
lss
loopne
pop
fisttp
in
ins
mov
les
cdq
xor
fisubr
and
mov
mov
(bad)
(bad)
push
jmp
sub
or
jle
nop
out
and
movs
(bad)
inc
xor
jg
pushf
xor
outs
push
inc
sbb
inc
in
xor
daa
or
sub
jb
push
pop
outs
pop
cmp
iret
inc
mov
or
jge
mov
and
dec
add
xor
not
adc
inc
stos
adc
rcl
jne
fidivr
rcr
push
out
loop
adc
iret
lahf
dec
sub
mov
cmp
push
and
call
gs
mov
out
sbb
enter
idiv
pop
adc
xchg
or
cld
das
test
jp
lds
mul
adc
loop
bound
sub
cwde
and
bound
add
push
hlt
fimul
mov
out
jae
push
sub
mov
jne
sti
lods
frstor
push
sbb
push
mov
mov
jmp
xor
fiadd
mov
dec
or
std
outs
push
sub
jmp
inc
push
inc
ins
inc
xchg
xchg
cmp
stc
stc
pop
cdq
add
lods
(bad)
jmp
retf
inc
push
out
nop
cwde
and
test
sub
xor
into
add
jmp
mov
setb
outs
adc
jmp
and
fucomip
aam
outs
clc
shr
jno
cmp
call
xor
xchg
out
sub
scas
mov
inc
fiadd
and
cwde
adc
and
and
enter
je
xchg
in
loopne
sub
push
or
popa
dec
jae
out
mov
mov
rep
(bad)
pop
mov
mov
xor
adc
cmp
imul
adc
sub
inc
jl
lahf
cdq
retf
mov
fbld
rol
push
ror
and
mov
int3
xor
icebp
adc
pop
sbb
mov
xchg
cmp
mov
shl
popa
sub
xchg
call
mov
mov
test
call
es
in
pop
pop
(bad)
push
pop
iret
xchg
(bad)
mov
fwait
mov
inc
gs
scas
je
in
push
mov
xchg
bound
adc
and
jmp
pop
es
and
icebp
inc
adc
popf
movs
sub
jle
jmp
rcr
or
out
pop
(bad)
adc
lock
dec
stos
mov
je
pop
aad
push
scas
outs
xchg
aad
aas
ins
and
call
xor
xor
dec
sbb
in
mov
dec
cmp
ror
xchg
jmp
xchg
dec
fldpi
sub
stos
retf
repz
aam
data16
andps
mov
sub
and
mov
fisub
jbe
xchg
push
sbb
xchg
(bad)
mov
or
cmps
push
fiadd
xlat
mov
shl
pop
out
inc
adc
or
xor
add
movs
call
sub
lea
xor
adc
hlt
ins
adc
sub
call
mov
sub
div
cmps
sub
cli
push
dec
jmp
pushf
push
push
inc
sbb
mov
or
pop
shl
xchg
mov
pop
jbe
xor
icebp
mov
int3
dec
jmp
cmp
push
adc
repz
xor
jmp
lea
outs
jg
sbb
fldenv
mov
out
pop
mov
cdq
outs
and
sbb
cmp
(bad)
pushf
mov
into
out
adc
lods
add
xchg
mov
pop
adc
sti
push
adc
dec
pop
in
xor
scas
xchg
pop
bound
add
jmp
pop
jmp
add
pop
sar
sbb
pop
xor
dec
pop
jne
arpl
sbb
popf
shr
cwde
out
mov
and
bound
pop
sub
xchg
scas
cli
xor
cmps
pop
mov
adc
in
mov
cmps
dec
inc
adc
popf
aad
add
and
icebp
fisttp
pop
push
cmp
adc
cmps
jbe
test
retf
jno
push
push
mov
out
mov
in
inc
scas
push
sub
adc
test
fimul
pop
jge
dec
xchg
cmp
cmp
lods
jmp
in
cmc
lea
call
or
dec
fs
hlt
sub
aam
add
(bad)
cwde
adc
or
psubw
push
addr16
jl
(bad)
push
movs
dec
repnz
retf
jge
movs
add
into
js
ret
data16
mov
add
add
and
mov
xchg
loopne
mov
xchg
(bad)
out
neg
scas
test
fadd
dec
fdivr
call
leave
inc
test
mov
adc
(bad)
jmp
dec
ficomp
mov
mov
repz
daa
or
mov
pop
test
xchg
pop
shr
out
lea
jo
sahf
and
xchg
adc
dec
sbb
inc
mov
mov
movs
jecxz
ins
inc
jae
and
cmp
pop
cdq
inc
fadd
push
cmc
mov
mov
into
cmps
data16
(bad)
test
xor
jo
jnp
push
stos
dec
inc
das
fstp
cdq
add
and
cmp
pop
cmp
pop
retf
loopne
inc
mov
jp
int3
adc
loop
sbb
inc
xchg
fstp
repz
ret
aad
cmp
std
push
mov
call
add
inc
enter
inc
mov
arpl
or
fisubr
repz
xchg
dec
test
inc
into
mov
pop
lds
mov
js
in
popf
pop
clc
jbe
icebp
mov
movs
dec
in
add
leave
mov
inc
pusha
xchg
lods
scas
ss
stos
mov
push
adc
cli
mov
mov
cmps
in
add
jo
pop
xchg
sub
(bad)
scas
pop
and
out
push
adc
xor
and
je
cmp
push
xor
lods
(bad)
mov
fsub
daa
cmps
add
nop
retf
fwait
mov
mov
adc
mov
and
xchg
push
pand
or
call
dec
sub
add
(bad)
pusha
add
cdq
icebp
imul
(bad)
(bad)
out
add
(bad)
imul
js
cmc
leave
cmc
leave
jecxz
add
out
mov
fcom
jmp
stos
or
stc
jmp
or
inc
mov
pop
add
push
movs
loopne
ror
dec
retf
push
movs
mov
dec
ins
inc
mov
pop
cdq
or
or
mul
inc
push
fnstcw
aad
inc
int3
lahf
inc
mov
fcmovu
in
xchg
(bad)
sti
sub
jg
mov
(bad)
jno
mov
jne
cmc
mov
sbb
int3
push
in
dec
cli
adc
xchg
imul
push
mov
xchg
in
in
stc
adc
jp
mov
inc
lds
push
inc
ja
xchg
mov
in
xchg
fwait
stos
push
imul
and
out
pop
jmp
sub
jne
jno
cmp
fadd
add
mov
xchg
xchg
imul
lock
lds
push
test
sub
jmp
jmp
mov
cs
enter
enter
mov
dec
sub
mov
sub
sub
ror
(bad)
(bad)
jno
idiv
outs
(bad)
ds
jg
mov
xchg
inc
aaa
xchg
fs
into
sub
inc
aad
rol
and
leave
inc
(bad)
pop
adc
push
fisubr
popa
into
idiv
jmp
jmp
inc
ret
lods
or
xchg
popa
gs
mov
(bad)
inc
addr16
ins
repnz
adc
jmp
(bad)
adc
jnp
dec
test
(bad)
jbe
pusha
pop
sub
daa
add
pop
out
daa
mov
ins
cs
dec
rcr
out
xchg
out
sbb
pop
out
loope
mov
cmc
leave
pop
xor
and
pusha
push
inc
aaa
mov
ret
sbb
xor
enter
push
add
sbb
call
inc
cmp
xor
xchg
adc
cmp
sub
jmp
push
sbb
imul
adc
sbb
jmp
cmp
adc
cwde
cmp
push
jg
xor
inc
aam
or
(bad)
cwde
push
pop
dec
arpl
inc
jno
push
call
xor
and
daa
sti
dec
test
jae
xor
addr16
fmul
lods
fistp
or
add
addr16
sbb
pop
loop
test
dec
cwde
pop
sbb
sub
dec
iret
js
xchg
pop
push
mov
and
int
sbb
pop
inc
mov
je
or
xchg
pop
shl
push
rcr
stc
add
fs
xor
cmp
jno
and
sti
dec
lds
mov
test
jbe
cwde
push
xchg
cmps
sub
and
pop
pop
xor
fs
into
sub
ret
pop
cmp
out
cs
repz
lds
pop
repz
shr
and
out
aaa
push
push
and
jg
jg
repnz
push
fsin
mov
push
lds
out
mov
push
push
adc
popa
cs
mov
mov
test
inc
test
rol
or
bound
and
dec
call
into
into
or
call
aad
mov
and
xor
jecxz
or
xchg
outs
arpl
push
inc
mov
idiv
arpl
jg
sub
xchg
mov
or
jbe
retf
popa
mov
xchg
jg
repz
mov
lods
xchg
adc
icebp
pop
or
pop
and
add
ror
adc
inc
sub
dec
cmps
sbb
cmp
cmp
add
xchg
and
sbb
mov
mov
stos
xor
sub
jmp
popf
ss
idiv
fiadd
xchg
out
push
clc
mov
jne
lds
pop
iret
sub
jg
in
inc
popa
je
or
push
lods
(bad)
fnstcw
shl
mov
push
pop
mov
outs
xchg
adc
add
lahf
xchg
add
addr16
sbb
or
cmp
mov
jo
push
loope
rol
mov
aaa
retf
push
pop
inc
mov
xor
int3
(bad)
add
mov
retf
pop
xchg
ret
pop
and
les
(bad)
arpl
and
imul
scas
(bad)
mov
mov
icebp
lods
mov
inc
pop
mov
cld
xlat
jecxz
popa
loope
cmp
dec
push
test
cmps
pop
les
add
adc
cdq
adc
pop
cli
(bad)
loop
stos
add
iret
sbb
pop
jbe
jecxz
adc
bound
mov
dec
movs
inc
inc
push
lods
inc
xchg
inc
out
fistp
xor
test
shl
(bad)
repz
mov
mov
fwait
aad
push
scas
inc
js
loope
das
mov
mov
repz
in
jge
call
mov
mov
std
dec
dec
sti
das
sbb
ret
dec
lock
xor
cmps
xor
fdivr
and
mov
lods
adc
aad
es
dec
pop
mov
jmp
mov
push
mov
dec
sti
bnd
jno
jae
jnp
cmp
dec
push
lock
jp
pop
in
inc
dec
out
inc
out
setbe
pop
fst
ror
dec
in
jo
pusha
cmps
shl
(bad)
fs
loope
add
mov
ins
faddp
(bad)
in
xchg
mov
jg
sar
jg
xchg
or
mov
pop
jo
sbb
stos
xchg
imul
fwait
sub
in
mov
outs
cld
inc
retf
or
out
mov
mov
mov
(bad)
jecxz
mov
ins
sbb
push
xchg
lods
inc
aas
add
out
pop
xchg
jle
inc
repnz
sub
rcl
xchg
jbe
jbe
rcr
call
cmp
mov
mov
and
popa
sub
out
std
inc
neg
jbe
int
in
stos
aaa
inc
push
jno
pop
call
add
pop
adc
ins
mov
mov
mov
mov
jmp
xchg
mov
stos
fadd
and
test
ror
nop
sti
popa
mov
arpl
std
xchg
lea
push
sbb
jbe
inc
push
test
xor
pop
loop
mov
cmp
sbb
mov
imul
add
cmp
(bad)
push
push
icebp
xchg
jnp
ror
call
mov
sub
inc
out
test
jne
add
fld
cmp
arpl
xor
push
scas
mov
enter
or
retf
aad
bound
and
mov
xor
push
lods
xchg
push
repz
and
pusha
mov
cdq
sub
fst
xlat
mov
div
lods
lods
in
test
repz
jmp
fwait
sbb
cmps
xchg
iret
pusha
sub
sub
bound
sbb
push
inc
push
rcl
pop
or
into
sub
and
mov
add
cs
(bad)
push
je
(bad)
dec
retf
inc
inc
xchg
ficom
adc
sbb
xor
movs
jmp
pushf
(bad)
in
cmc
stc
dec
out
push
ret
sahf
call
adc
idiv
mov
pop
and
enter
jb
dec
mov
rol
popa
cmp
shr
cmp
enter
shl
in
out
(bad)
xchg
jge
mov
push
mov
aad
sbb
cs
cmp
sub
sbb
test
in
enter
ja
movs
arpl
jae
fs
dec
mov
ins
adc
cs
or
or
sar
xchg
xchg
cmp
mov
xor
sbb
push
pusha
jo
mov
(bad)
cli
jns
fsub
dec
inc
jae
fmul
push
jo
cdq
pop
cmps
jmp
mov
lods
mov
pop
dec
inc
inc
out
shl
popf
ret
inc
cmp
jmp
xor
and
sbb
in
xor
test
push
mov
dec
int
xchg
into
jns
push
sbb
stos
push
push
aam
movs
mov
cmps
mov
cmp
mov
cdq
sub
mov
add
daa
repnz
mov
lods
cmc
in
sub
sub
cld
and
or
nop
popf
mov
sub
mov
pop
jp
mov
sbb
mov
pop
xlat
add
in
cmps
sbb
add
cwde
jl
mov
mov
std
mov
ja
not
jns
push
dec
xor
fcomip
sub
imul
dec
push
test
cmps
xor
xchg
cld
ret
mov
test
push
fwait
cmc
xchg
mov
icebp
mov
cmp
out
push
and
movs
push
mov
(bad)
jae
outs
mov
jo
and
sbb
sub
stos
pop
aaa
inc
mov
xor
push
push
add
jg
js
leave
jp
pop
call
fisubr
dec
mov
push
sub
neg
push
mov
push
mov
outs
or
clc
xor
les
pop
mov
xchg
cmp
and
sbb
and
push
jg
cld
sub
pushf
out
and
xchg
lods
fsubp
add
mov
lock
das
imul
adc
or
sub
ins
ins
sbb
xor
pop
and
fisub
pop
hlt
ficom
jecxz
dec
push
fdivrp
or
push
sub
bound
xchg
loop
popf
jmp
mov
mov
iret
in
sbb
outs
add
pushf
cmp
add
cmp
pushf
and
dec
cdq
jmp
rcl
sbb
addr16
xlat
mov
sbb
test
mov
cmp
inc
movs
xor
mov
out
jno
xchg
nop
mov
mov
jo
outs
loopne
add
xchg
jg
xchg
xor
sub
adc
js
in
pusha
lods
aam
jo
inc
mov
stc
cmps
push
int
das
test
mov
in
pop
pushf
or
or
cli
imul
dec
xchg
sbb
sub
pop
mov
xor
inc
icebp
or
(bad)
addr16
and
ret
ficom
adc
test
jecxz
cmps
dec
xchg
prefetch
lods
jb
jns
cmp
pop
xor
jns
fidiv
xor
fs
pop
lahf
nop
movs
out
adc
cmp
inc
mov
aam
jg
pop
and
test
(bad)
xchg
sub
ins
cmp
je
lds
and
stos
pop
jmp
push
or
and
mov
xchg
mov
add
std
and
and
xchg
mov
xor
cmp
mov
cs
dec
pop
stc
jecxz
fcomp
inc
xchg
cld
push
cmps
pop
dec
call
cs
and
test
mov
fld
mov
xor
sub
shr
sub
xor
pop
mov
jl
and
add
push
dec
fcomp
(bad)
aaa
adc
jno
add
xor
das
pop
push
outs
mov
push
add
xchg
jmp
xor
mov
out
or
shl
lods
xchg
in
mov
mov
cmp
mov
out
pop
xchg
icebp
push
xor
rcr
add
iret
jb
(bad)
(bad)
adc
mov
pop
std
xor
adc
(bad)
icebp
out
sbb
icebp
sar
sub
push
mov
jb
jmp
pop
xor
loopne
xchg
dec
sub
mov
push
mov
mov
scas
jge
movs
cmps
clc
shr
mov
imul
xchg
cmp
cwde
dec
adc
(bad)
adc
ss
imul
ja
shl
shr
retf
mov
sbb
popa
xchg
jge
sbb
pop
in
inc
ret
push
xor
xchg
mov
dec
popa
ins
sbb
inc
mov
jecxz
adc
(bad)
das
lods
xchg
or
retf
cs
inc
arpl
push
in
adc
cmp
inc
mov
mov
test
lods
retf
pop
jns
fiadd
inc
mov
mov
jns
jmp
into
adc
or
push
or
or
sbb
movs
mov
pusha
icebp
jo
fadd
push
xor
ja
sbb
hlt
jb
hlt
xor
ret
iret
je
cmp
nop
add
(bad)
inc
or
sar
out
in
ins
lock
xchg
aas
repnz
stos
jge
sbb
push
icebp
jl
xor
cs
xor
imul
aaa
adc
adc
mov
pushf
push
jp
mov
leave
out
push
ficom
ds
pushf
mov
and
and
(bad)
jp
jo
cmp
in
lods
call
ret
(bad)
movs
repnz
inc
or
dec
arpl
and
push
jns
lea
jp
jg
cmps
push
dec
cmp
fst
cmp
loopne
lock
lods
cmp
inc
or
adc
mov
lds
cld
jp
in
jg
sbb
test
adc
call
or
cmp
sub
mov
pushf
xchg
in
js
(bad)
ror
mov
loopne
mov
jo
les
push
jae
add
adc
idiv
pop
retf
jmp
add
mov
dec
jmp
(bad)
sub
test
cmp
mov
dec
mov
xchg
mov
pop
scas
cld
add
dec
out
push
cs
je
xor
inc
mov
cmp
adc
out
xor
or
pop
jg
(bad)
std
mov
sbb
xor
push
inc
xchg
adc
jecxz
and
pop
mov
daa
inc
adc
pop
push
sti
(bad)
jae
sbb
movlps
fadd
stos
(bad)
cmp
daa
adc
repnz
fcomp
arpl
xor
and
or
xchg
add
push
(bad)
sub
or
mov
aad
cwde
pushf
sub
pop
lahf
pop
int
in
inc
or
aad
ins
mov
jmp
enter
sub
cmp
xchg
jmp
leave
dec
jb
jne
sbb
jmp
add
int
rol
stc
sbb
mov
dec
ds
dec
adc
inc
cld
icebp
cs
mov
repnz
xor
aad
inc
or
(bad)
jae
ror
mov
call
cmp
test
mov
dec
cmp
push
xor
sti
adc
loopne
jns
inc
jmp
sar
pop
push
or
mov
retf
xchg
bound
clc
hlt
sti
fidiv
repz
(bad)
sti
sbb
cmp
dec
pop
(bad)
popa
and
mov
jnp
dec
push
and
out
mov
jp
in
les
aad
xor
mov
adc
ret
sbb
jge
pop
and
mov
pop
cld
adc
dec
bound
ss
inc
(bad)
adc
sub
nop
rcl
ret
push
out
mov
out
cmp
ja
aas
jne
jne
cmp
shl
popf
inc
cdq
push
jmp
mov
int3
push
jp
and
scas
aas
int
js
loope
push
sub
or
push
sahf
fdiv
ins
sbb
out
xlat
sbb
cmp
sub
sub
xlat
and
int
sbb
imul
lds
adc
push
retf
mov
cs
push
popa
cli
pop
inc
xlat
outs
mov
sahf
js
stos
add
in
dec
xor
movs
fwait
ret
arpl
jecxz
ins
push
mov
mov
mov
fwait
iret
xchg
pop
test
lods
cmp
mov
in
mov
shl
out
sub
mov
fild
sub
js
outs
loope
stos
mov
jo
aaa
aad
jle
fcomp
call
test
pop
jmp
adc
add
lds
sub
imul
xchg
clc
(bad)
pop
push
leave
shl
mov
inc
test
pop
xchg
push
mov
or
mov
add
mov
xchg
adc
popa
sbb
fucom
cmc
cmp
cmc
bound
adc
movs
inc
(bad)
retf
mov
jmp
call
cmp
arpl
(bad)
(bad)
es
fwait
(bad)
out
es
mov
ins
std
cmps
dec
mov
push
adc
imul
mov
jmp
xchg
popf
call
loop
arpl
in
sub
add
dec
sbb
arpl
mov
push
xor
popa
inc
cmps
lahf
pusha
push
jmp
push
jmp
xchg
lar
jp
sub
(bad)
aam
push
stos
inc
pop
pushf
arpl
inc
xchg
mov
outs
int3
xor
jne
mov
stos
mov
and
xor
pop
ja
mov
cmovne
les
imul
fmul
xor
fwait
in
imul
xor
dec
call
adc
sbb
sbb
mov
test
mov
pusha
xchg
mul
dec
jmp
lods
jmp
outs
lock
and
ret
ret
mov
fild
lods
aas
pushf
dec
repz
xchg
xchg
das
aam
cmps
xchg
ror
mul
xor
fs
hlt
push
pop
arpl
rcl
jl
mov
pop
cld
adc
fs
sub
jecxz
sub
cmp
loop
or
sub
movs
(bad)
mov
xchg
push
or
sbb
xor
mov
jg
dec
nop
xchg
add
and
enter
cli
mov
mov
mov
enter
pushf
movs
cmp
mov
leave
xchg
call
mov
sbb
in
and
pcmpgtd
retf
ins
ret
push
and
jbe
stos
sbb
fild
dec
lods
lahf
in
test
mov
jb
and
(bad)
or
mov
ret
retf
adc
lods
loopne
jecxz
xchg
arpl
sbb
xchg
mov
cmps
imul
push
bound
cmc
sahf
(bad)
mov
mov
(bad)
xor
aad
jmp
inc
jge
ss
ror
mov
inc
mov
add
push
test
idiv
in
and
ret
repnz
push
adc
push
add
call
and
ins
cmps
ror
fimul
jg
imul
(bad)
jle
in
xchg
mov
mov
dec
add
inc
jg
mov
mov
add
je
retf
fcmovnbe
and
jp
mov
pushf
sub
loopne
(bad)
mov
inc
movs
xchg
fistp
jnp
jg
(bad)
mov
push
jg
fistp
jp
xchg
fsub
not
mov
cmp
les
fcom
loope
sbb
call
aas
sbb
xchg
jmp
sub
cld
xchg
retf
sbb
xchg
jl
mov
add
sbb
test
and
mov
dec
sbb
cwde
jge
ja
test
sbb
fldenv
sar
imul
arpl
add
pop
inc
xchg
leave
clc
or
imul
sti
and
out
adc
stos
ret
loopne
push
jb
mov
push
and
cmp
and
and
dec
int3
sbb
xor
sbb
pop
aad
pop
xchg
pop
push
add
pop
cmp
ds
xchg
add
push
pop
outs
or
jo
out
fisttp
dec
mov
or
test
jns
mov
push
xchg
pop
out
sub
scas
jno
push
pop
adc
xchg
dec
adc
icebp
cmp
sub
addr16
lock
icebp
push
sbb
scas
lods
jmp
pmaxub
pop
je
push
pop
adc
lea
jno
add
stc
loopne
clc
out
(bad)
or
mov
pop
cmp
pushf
test
sbb
dec
pop
bound
add
mov
sbb
pusha
sub
mov
leave
sbb
ret
xchg
ins
add
dec
push
mov
sar
nop
or
xor
mov
inc
in
imul
cmps
ret
das
scas
sar
sbb
ss
test
test
hlt
loope
lds
mov
jp
fild
sub
mov
jle
test
fimul
jmp
push
mov
and
call
push
jbe
iret
jmp
js
(bad)
enter
add
push
mov
fcom
dec
inc
inc
test
adc
mov
mov
inc
out
sbb
mov
and
rcr
jno
push
lahf
test
and
inc
dec
xchg
jp
in
push
pushf
adc
retf
cs
cld
test
dec
in
rcr
mov
mov
push
push
mov
fld
dec
xchg
xchg
jne
adc
and
mov
jno
loope
inc
inc
cmps
aad
jbe
nop
jbe
push
and
dec
mov
cmps
cdq
int3
push
lds
inc
pushf
fwait
xor
dec
xchg
mov
fwait
aad
dec
daa
in
mov
jmp
push
mov
push
in
push
out
xor
jecxz
call
or
in
inc
jg
and
imul
sbb
mov
bound
xchg
call
mov
inc
add
inc
in
sub
pushf
stc
inc
pop
inc
and
dec
je
scas
jbe
sar
fsubr
mov
out
scas
std
and
lahf
cmp
sub
ja
sub
cmp
jmp
and
push
xlat
push
shl
jl
fucomi
cwde
cmp
jnp
test
dec
or
or
sub
or
les
sti
les
ja
nop
dec
xchg
add
aas
ret
mov
scas
gs
retf
arpl
ins
sar
vsqrtss
mov
shr
inc
sbb
fmulp
cdq
sbb
call
mov
pusha
pop
inc
(bad)
sbb
inc
push
bound
xor
dec
adc
xor
jnp
push
stos
jno
sar
imul
fiadd
sbb
lods
jns
ror
shl
sbb
retfw
out
les
add
arpl
jb
mov
gs
ds
stos
shr
sub
pop
jge
scas
inc
cld
or
cmp
stos
push
sti
jge
mov
mov
or
dec
dec
(bad)
or
das
xor
not
scas
mov
dec
pop
and
cmp
xchg
mov
shr
mov
cmps
int
pop
stc
xor
or
fidivr
xlat
push
aad
out
(bad)
es
sbb
xor
push
xchg
sbb
mov
imul
bnd
inc
out
xchg
iret
inc
scas
(bad)
mov
or
jnp
rcl
imul
pop
cld
cmp
push
sub
and
lds
not
inc
imul
jb
sbb
jge
ja
pop
(bad)
loop
pushf
jbe
das
leave
rol
mov
pop
adc
call
shl
or
and
pop
inc
int3
hlt
pop
xor
pusha
cli
jl
fs
pop
jae
jno
sub
jle
dec
leave
cdq
fs
push
aas
dec
rep
hlt
xchg
jecxz
pop
sbb
xchg
leave
mov
jbe
arpl
sbb
inc
pop
ss
pop
dec
shr
loope
in
jb
pushf
out
nop
out
and
dec
inc
js
lsl
or
test
aaa
mov
pushf
pop
push
xchg
fimul
sahf
push
add
ins
(bad)
aas
ror
js
and
test
in
sub
add
lods
pop
adc
je
pop
xchg
dec
cwde
call
in
mov
cmp
iret
lods
divps
mov
inc
mov
adc
nop
cmc
nop
push
aaa
inc
dec
(bad)
shl
loope
pop
jmp
das
sbb
(bad)
fimul
movs
ja
adc
push
inc
mov
xor
push
iret
out
dec
cwde
and
mov
mov
retf
pop
add
xor
adc
mov
pusha
or
xor
imul
jno
dec
pop
adc
nop
and
scas
xchg
sub
pop
add
sbb
mov
or
nop
and
inc
clc
xor
shl
xor
jecxz
mov
jne
daa
or
cmp
in
push
ins
aad
(bad)
cmps
js
retf
xchg
daa
push
ret
dec
mov
xor
(bad)
fs
rol
or
call
sti
add
sub
imul
in
stos
xchg
mov
fs
mov
mov
xor
mov
fadd
sub
das
sar
push
stos
aas
and
xchg
jle
das
loopne
lods
push
in
dec
shl
push
inc
adc
sub
inc
jp
cmp
jmp
inc
or
push
test
cld
cmp
sbb
imul
outs
xchg
jb
pop
mov
ss
loopne
mov
loope
pop
cmp
outs
mov
or
inc
mov
test
dec
cdq
jne
adc
jb
rol
jnp
sahf
out
repz
bound
add
mov
enter
test
sbb
aad
pop
and
and
xchg
repnz
arpl
mov
inc
out
cmp
xchg
outs
mov
push
(bad)
ss
jb
pusha
pop
mov
sti
xchg
pop
inc
leave
mov
outs
pop
and
into
(bad)
mov
mov
add
jl
in
ins
add
fucomp
jle
inc
sub
test
mov
lods
(bad)
adc
ret
loopne
imul
dec
pop
call
iret
inc
je
sbb
add
popa
(bad)
in
sub
clc
fidiv
push
inc
out
cmp
dec
iret
(bad)
fisubr
inc
popf
movs
jb
xor
in
sub
lahf
dec
sbb
pusha
sti
mov
jle
test
ja
mov
xlat
arpl
jb
pop
mov
inc
mov
out
and
fnstenv
retf
repz
jp
scas
scas
sbb
add
inc
sbb
rcl
(bad)
or
pushf
dec
(bad)
lods
fldcw
cld
push
lea
rol
loop
(bad)
mov
sub
push
(bad)
mov
pop
xor
pop
ds
adc
outs
cmc
sahf
adc
stos
dec
sbb
adc
out
pop
repz
or
pop
pop
cmp
mov
adc
cmc
sub
cmc
aaa
sbb
mov
cs
bound
pop
aaa
rcl
mov
pop
adc
mov
cmp
and
pop
jge
js
into
inc
add
loop
add
fld
addr16
shl
pop
rol
movs
imul
imul
ret
lahf
or
ins
cmps
into
sbb
test
jl
arpl
dec
aaa
push
lock
add
mov
mov
jecxz
mov
arpl
or
sub
sub
bound
push
test
std
jns
or
sahf
xor
inc
je
push
push
sti
in
pop
adc
jmp
pop
jl
xchg
jo
aad
je
rep
sub
fldenv
ret
xchg
(bad)
icebp
test
fisubr
in
movs
je
jno
ret
add
fcomp
push
fisubr
addr16
push
mov
mov
cmps
pop
clc
and
pop
aas
pop
pusha
leave
fstp
test
sub
xor
adc
int
sub
imul
clc
jl
mov
mov
xchg
orps
or
push
cli
mov
mov
pop
push
mov
movs
dec
shr
pushf
iret
iret
mov
xchg
ja
sub
shl
jb
fdivr
nop
cld
pusha
js
cld
push
xchg
in
mov
lock
add
daa
push
xlat
cmp
adc
and
dec
ins
dec
test
pop
repz
movs
adc
(bad)
add
ret
call
fnsave
dec
jb
daa
jb
cmp
jmp
and
std
hlt
and
nop
xlat
mov
mov
mov
cwde
call
push
int3
adc
dec
gs
retf
data16
sahf
cld
out
jmp
mov
test
dec
(bad)
js
dec
xchg
xchg
add
lock
mov
push
mov
retf
mov
idiv
call
and
cmc
xchg
pop
inc
shr
and
sbb
sbb
shr
sub
(bad)
out
add
scas
daa
test
fwait
mov
call
js
fmul
(bad)
faddp
sub
js
test
pop
sbb
fdiv
cmp
fxch
jno
adc
ret
lahf
xchg
adc
iret
enter
mov
icebp
dec
sysexit
aam
bound
push
mov
inc
lahf
inc
mov
pop
inc
aas
fmul
push
xor
or
mov
dec
pop
cmps
adc
add
shl
dec
push
inc
fwait
icebp
es
and
jmp
stc
jb
fist
fcomi
gs
xor
(bad)
cs
sahf
(bad)
dec
xchg
rcr
sar
mov
stos
ins
dec
push
mov
fild
cmp
add
jno
lock
dec
sub
push
inc
int3
sahf
pop
xor
jo
aad
push
cmp
push
inc
adc
mov
ror
aad
sub
(bad)
cmc
cmp
in
repz
jl
(bad)
pop
fiadd
and
adc
inc
sub
jb
xchg
hlt
mov
cdq
mov
stc
xchg
imul
rcr
pushf
mov
loop
xor
aad
jg
ins
mov
jnp
xor
mov
ret
jae
call
sub
ficom
push
push
xchg
(bad)
xchg
sub
js
gs
(bad)
mov
call
and
fidiv
adc
inc
lods
sub
imul
aas
clc
lahf
inc
test
add
or
cmp
mov
into
dec
add
dec
in
daa
dec
pop
fild
mov
fsub
les
call
sahf
aas
sbb
out
and
rcl
sub
out
and
xor
imul
or
or
or
std
in
push
pop
call
push
jne
push
sbb
daa
and
add
xchg
loopne
mov
mov
dec
aad
sub
loop
dec
sar
pop
je
mov
and
test
addr16
or
int3
(bad)
add
adc
cmp
test
int
ficomp
scas
cld
mov
sti
(bad)
jmp
xchg
pop
repz
aam
sbb
dec
push
out
ret
fild
fdiv
call
(bad)
sub
or
inc
rol
daa
gs
fidivr
loop
adc
or
int
cld
in
and
popf
cmp
sbb
dec
sub
sbb
in
retf
std
call
jmp
scas
mov
ret
or
das
in
dec
loope
or
mov
js
xor
ins
(bad)
iret
fimul
dec
fisttp
pop
adc
in
(bad)
xor
popf
sahf
sub
mov
aad
push
mov
aaa
lahf
cmp
push
lods
int
mov
aaa
jmp
lods
sbb
jge
cmp
xchg
ds
(bad)
mov
dec
inc
sub
jno
daa
imul
les
lea
std
daa
nop
movs
pop
cmp
fiadd
(bad)
lock
xor
sub
cmc
pop
mov
enter
mov
icebp
sub
bound
adc
(bad)
das
inc
repz
lock
mov
stc
and
sbb
adc
icebp
mov
aam
stc
test
cmp
inc
inc
pusha
enter
pusha
and
xchg
popa
adc
adc
int
jge
xchg
xor
dec
jecxz
mov
dec
ins
lods
add
xor
jne
or
stos
inc
cmp
clc
push
(bad)
jns
inc
pop
dec
jmp
jo
out
cmp
jnp
sub
es
fwait
cmp
test
inc
mov
mov
jno
sbb
stos
lock
inc
int3
repz
cmp
jg
dec
and
inc
inc
dec
inc
or
pslld
push
jecxz
mov
sbb
cmc
out
push
and
fptan
push
or
call
mov
jmp
push
leave
inc
dec
in
test
icebp
push
xchg
lock
(bad)
les
cld
psrlq
dec
jbe
xor
in
xchg
pop
xor
imul
mov
cmp
mov
inc
imul
add
jp
outs
mov
push
pop
(bad)
cmp
xchg
repnz
imul
pop
push
jg
ret
int3
rcr
(bad)
out
mov
call
jle
test
cmp
add
jmp
popa
shr
mov
mov
enter
sbb
mov
mov
ror
or
mov
imul
rcr
movs
adc
mov
jecxz
cmc
lahf
(bad)
cmps
pop
cmp
pop
es
sti
(bad)
mov
jbe
aas
mov
popf
in
push
push
(bad)
xchg
jno
jae
xchg
pop
xchg
pushf
lahf
unpckhps
icebp
inc
cld
(bad)
and
js
inc
mov
in
jnp
or
adc
push
fdivr
xlat
mov
std
jb
test
jecxz
les
addr16
mov
inc
push
cmp
sub
js
shl
inc
imul
shl
fnsave
push
cwde
push
pop
cli
ds
out
repnz
scas
adc
inc
inc
stos
rol
inc
jge
push
sbb
mov
data16
push
or
add
pop
idiv
icebp
repnz
test
in
popf
ja
inc
adc
mov
mov
push
mov
fist
arpl
sbb
fnstcw
cmc
and
sub
cld
sub
fcmove
mov
sub
mov
cmps
test
adc
pop
and
sar
adc
sbb
xor
sub
push
xor
je
jp
and
aad
lods
mov
mov
sahf
into
or
jmp
mov
and
scas
ins
xchg
and
xchg
div
call
mov
jl
repz
lds
scas
adc
lahf
pop
pushf
xor
sbb
push
fwait
xchg
inc
stos
outs
clc
jnp
int
lea
stos
out
sahf
std
jl
cld
sub
hlt
jnp
lea
mov
cmp
jmp
mov
fs
and
outs
test
push
adc
inc
push
loop
or
daa
mov
or
push
fdiv
lahf
cdq
in
sbb
sbb
adc
push
in
cmp
xlat
mov
shr
sub
xor
dec
dec
cmp
xchg
ja
retf
(bad)
out
dec
cmp
cmp
test
push
mov
out
push
xchg
cmp
inc
mov
je
xchg
sbb
(bad)
cdq
(bad)
aas
jg
daa
mov
in
inc
mov
jno
xor
popf
out
mov
aaa
or
ret
sti
mov
sar
xor
(bad)
lahf
or
fild
gs
jbe
sub
test
ret
jb
xor
fstp
sahf
pop
add
or
cmps
mov
adc
pop
mov
cmp
mov
call
stos
outs
push
mov
fdivr
popf
cmp
sahf
imul
cmps
xchg
mov
pop
push
inc
sub
lods
push
dec
pop
add
cmp
lea
lods
popa
inc
cmovns
mov
or
pop
jno
inc
inc
out
dec
push
xchg
mov
jmp
gs
sbb
cli
lahf
int
sbb
lods
adc
push
xchg
mov
mov
pushaw
xchg
iret
mov
mov
(bad)
jge
out
fcom
adc
push
and
test
pop
popa
pop
add
adc
(bad)
int
adc
and
push
fcmovne
iret
mov
fldenv
movs
imul
dec
daa
or
xor
or
inc
in
add
sbb
scas
enter
xchg
out
loopne
scas
xchg
repnz
push
loop
jne
adc
mov
repnz
cmp
cmovo
adc
push
repnz
fcomp
and
mov
sbb
in
test
pusha
js
sub
icebp
les
dec
push
out
mov
push
and
cdq
out
jcxz
fst
jnp
xor
push
adc
ins
scas
je
imul
mov
movs
mov
out
clc
push
in
das
std
fsubp
shl
lock
push
add
lea
dec
xor
mov
repnz
out
cdq
cdq
jo
pop
and
push
jb
mov
sbb
sub
xchg
inc
in
mov
mov
pop
cdq
in
popa
ror
sub
shr
jg
je
mov
dec
xor
dec
cli
mov
lock
jnp
in
jecxz
stos
mov
or
(bad)
push
add
mov
cmp
pop
lds
jmp
scas
mov
sbb
jl
sbb
fsub
xchg
jns
inc
fimul
(bad)
ds
add
jmp
push
aam
ds
in
inc
xchg
jmp
dec
cs
dec
push
mov
cdq
and
and
lods
jb
or
xchg
test
dec
mov
adc
movs
mov
pop
aad
adc
or
cmp
cmc
jb
xchg
cmp
sbb
aas
stc
push
dec
xchg
push
ror
adc
stc
in
push
sbb
or
dec
push
cmp
mov
inc
cmp
xor
mov
aam
mov
(bad)
(bad)
mov
push
call
outs
or
gs
repz
cwde
sbb
rol
mov
pop
mov
cmp
sub
cli
in
ins
pop
fmul
cmp
shl
and
mov
add
popf
sub
inc
inc
jmp
xchg
ins
aam
push
mov
lods
scas
xchg
mov
push
jp
fmulp
ret
mov
bound
shr
push
sbb
pop
jg
scas
add
not
iret
dec
xor
pop
or
adc
sbb
pusha
or
push
mov
dec
xchg
or
(bad)
shl
test
daa
adc
jmp
push
lods
jno
test
mov
sub
aam
sub
out
mov
mov
daa
into
pop
xor
sbb
cmp
ret
outs
sub
add
ins
outs
sbb
icebp
fild
test
sbb
retf
xor
scas
ret
push
sub
sub
sbb
inc
mov
push
and
dec
dec
outs
ins
outs
push
xchg
mov
add
adc
dec
stos
inc
or
jbe
pop
pusha
jmp
hlt
xchg
into
mov
mov
(bad)
popa
mov
(bad)
jno
shl
xchg
imul
ds
sub
out
add
xor
xlat
sub
retf
(bad)
cmps
add
invd
test
loopne
fimul
sbb
aam
xchg
out
lds
push
sar
or
stos
push
ror
pop
xchg
stos
pusha
push
cdq
jne
das
aam
int3
sbb
stos
es
out
lds
adc
fs
mov
mov
pop
pop
jne
mov
(bad)
ins
ds
lea
xchg
repz
call
stos
lock
cld
cmc
loop
leave
loop
sbb
sbb
in
test
bound
int
push
outs
lahf
nop
es
mov
jle
mov
mov
mov
enter
jecxz
int
dec
es
retf
cmp
les
pusha
imul
inc
rol
mov
fnstcw
mov
inc
out
icebp
dec
jle
pop
xchg
pushf
dec
fdiv
mov
les
dec
dec
sub
retf
sahf
mov
xchg
les
jg
lods
repnz
test
push
cmp
push
mov
mov
leave
mov
sub
xchg
pop
and
and
jmp
dec
sbb
push
repnz
dec
lds
sahf
and
clc
pop
lds
sti
pop
jno
push
xor
xlat
inc
jnp
addr16
add
test
les
cwde
in
cmp
rep
fs
test
mov
test
out
add
jmp
aaa
lock
cmp
jae
sbb
ror
sub
pusha
test
cmps
cmp
lahf
mov
mov
pop
and
ret
xchg
sti
inc
imul
pop
iret
daa
add
and
mov
jno
push
fidiv
cmp
icebp
mov
xor
daa
std
adc
push
and
jno
shr
add
in
adc
mov
hlt
or
icebp
jae
adc
aaa
ja
aaa
jle
(bad)
sub
mov
add
mov
mov
lods
dec
aas
dec
adc
es
inc
fld
retf
adc
inc
mov
dec
and
sbb
or
(bad)
and
sbb
ret
mov
jae
cmps
mov
mov
pusha
or
cmp
jnp
repnz
rol
inc
dec
push
sar
fstp
cmp
lods
mov
fadd
mov
js
sahf
xchg
fsub
xor
repnz
loopne
shl
pusha
sahf
loop
xchg
mov
ja
inc
inc
mov
sub
fst
loop
popa
jmp
adc
loope
jae
outs
cmp
loope
scas
out
cli
fld
je
dec
hlt
push
loope
push
sbb
xchg
pop
outs
sbb
dec
and
cdq
inc
mov
xor
add
out
mov
mov
sub
cld
mov
dec
call
repz
jae
mov
dec
add
mov
hlt
mov
fld
nop
dec
retf
push
push
in
dec
and
xor
add
repz
push
cmp
call
mov
mov
stos
sahf
mov
test
pop
rcr
das
ret
test
test
test
jmp
or
int3
(bad)
jb
fcomp
jp
sar
mov
and
mov
sbb
add
mov
xchg
pop
(bad)
std
sub
iret
jne
in
push
sbb
ss
mov
mov
or
xor
mov
fild
(bad)
out
adc
out
loopne
fwait
out
cwde
out
adc
dec
push
cwde
fdivr
fld
dec
mov
aaa
popf
enter
jae
shr
jb
cs
or
jb
std
jnp
loopne
jne
xor
pop
mov
out
sub
je
inc
jmp
in
cdq
ret
xor
jmp
lods
and
loopne
and
ins
push
jle
xchg
inc
sbb
mov
pop
scas
mov
and
push
dec
cmps
xlat
push
xchg
jg
cmp
jo
sub
xchg
loope
sbb
sub
adc
inc
aam
(bad)
jbe
addr16
pop
ins
sbb
das
jae
call
mov
dec
mov
leave
ret
icebp
inc
iret
xor
inc
cmp
int
rol
fwait
add
fist
cwde
and
stos
loope
pop
dec
add
add
xchg
add
inc
mov
and
sub
sbb
mov
mov
repnz
daa
add
lods
mov
ds
xchg
jge
mov
popf
jbe
out
adc
imul
sbb
stos
mov
ins
outs
dec
lods
mov
loopne
mov
lods
fstp
push
dec
xchg
dec
popf
repz
test
das
sub
imul
push
retf
hlt
nop
push
sahf
mov
sahf
lds
inc
inc
cmp
sbb
(bad)
mov
xor
lahf
pop
jmp
clc
retf
bound
mov
cs
cmp
xchg
dec
fwait
pop
push
(bad)
xor
inc
push
iret
sub
xlat
gs
or
cmp
js
out
add
jg
enter
imul
stc
pop
movs
pop
test
dec
xchg
fadd
mov
push
cmp
cwde
jge
cli
add
push
xor
sub
sub
cdq
fmul
out
lahf
pushf
and
adc
out
fstp
add
mov
xor
ds
push
(bad)
xor
xor
jmp
or
cmp
adc
ds
sbb
movs
ins
mov
aas
jns
and
and
mov
push
sbb
xor
in
iret
push
js
stos
pop
ins
in
stos
sti
jns
push
pop
mov
hlt
(bad)
fadd
and
add
xchg
inc
pop
repnz
jno
push
int
fstp
sbb
nop
mov
(bad)
call
jmp
mov
mov
pop
or
inc
in
iret
mov
xchg
sub
imul
ja
and
imul
jp
pop
movs
dec
inc
add
adc
inc
xchg
out
clc
movs
ret
dec
sub
push
mov
xlat
es
adc
clc
fwait
data16
stos
fcompp
sbb
out
in
in
test
cmp
stos
in
dec
pop
loope
js
xchg
and
inc
jmp
fldenv
ins
jae
push
sbb
cli
fadd
(bad)
(bad)
adc
and
push
scas
in
and
and
push
aad
sub
push
jno
adc
fimul
push
jge
mov
jae
mov
inc
enter
int3
lods
push
cdq
loope
in
add
(bad)
cmps
sbb
addr16
lock
test
hlt
jae
cli
shl
jne
dec
pop
stos
push
xchg
xchg
jb
adc
sbb
dec
(bad)
and
daa
add
jbe
cmps
(bad)
pop
inc
dec
sub
xchg
(bad)
mov
push
push
scas
popa
adc
sbb
ins
inc
int3
push
loopne
lds
repz
fiadd
stos
repz
xchg
dec
sub
inc
xchg
cwde
sbb
jb
xchg
mov
mov
std
or
stos
mov
test
or
jae
mov
repz
hlt
(bad)
pop
pop
fisttp
cld
mov
mov
arpl
pop
ret
dec
cmp
add
aaa
out
rcl
ja
and
popa
outs
ja
mov
inc
out
call
jb
retf
add
or
cmpxchg8b
jnp
jg
jnp
inc
rcl
pop
mov
dec
ins
loopne
mov
dec
push
popf
mov
aam
cmp
je
jmp
sbb
shl
lods
push
sub
jae
in
mov
pop
jmp
(bad)
jecxz
add
dec
jno
jecxz
bound
sti
rcl
cmp
dec
scas
inc
and
xlat
ds
mov
jne
push
jmp
push
loope
data16
leave
arpl
cdq
jnp
xor
xchg
pop
aaa
cmp
adc
aad
xor
sbb
or
es
rol
sbb
jne
mov
in
pop
push
sbb
test
mov
push
fild
ret
mov
lds
sub
loop
call
clc
add
xchg
pop
cli
push
sbb
aam
aas
fidiv
sub
xor
mov
nop
icebp
inc
mov
cmp
push
cmp
adc
stc
xor
test
cmp
cmp
in
mov
jbe
and
dec
xor
pop
lock
rep
push
cmps
fsubr
bound
test
iret
mov
cli
sub
jp
and
jnp
push
mov
dec
in
inc
aaa
dec
(bad)
jp
imul
dec
cli
and
stc
inc
sbb
cmps
mov
pop
nop
icebp
in
mov
jne
dec
xor
rol
daa
cwde
push
xchg
je
mov
xchg
mov
(bad)
outs
call
mov
(bad)
fwait
dec
mov
shl
xchg
dec
aad
imul
ret
and
retf
cwde
idiv
jmp
shl
mov
lea
xchg
xor
fsubrp
loop
lods
imul
lea
mov
outs
mov
xchg
sbb
sar
mov
cld
dec
out
cmps
xchg
cmp
lock
aad
xor
push
out
outs
or
pop
lea
ret
add
test
jbe
test
rol
jg
cdq
sti
push
and
pop
and
adc
in
rol
rcr
pop
and
hlt
movq
retf
sbb
cmp
popw
or
jnp
int
mov
outs
cmp
xor
sar
enter
mov
jle
cld
mov
js
sub
scas
int
xor
mov
aas
sti
jp
push
sbb
add
jle
jbe
mov
fsubr
cmp
push
push
xor
jmp
nop
jge
sbb
icebp
ins
jg
and
mov
sbb
jmp
jmp
jmp
stos
mov
mov
dec
or
mov
push
dec
test
dec
cmp
and
retfw
and
dec
push
inc
sbb
or
lock
in
inc
push
test
or
or
lods
mov
rcr
sti
into
dec
or
mov
ja
outs
fmul
mov
mov
dec
dec
cmps
test
jbe
jne
(bad)
push
push
ret
push
sub
(bad)
and
mov
cmps
rcr
and
clc
cmp
lock
das
jnp
and
call
pop
test
movs
popa
test
add
pop
cdq
inc
scas
or
or
popf
in
xor
inc
pop
div
dec
rcl
clc
shl
xor
xchg
sbb
pop
(bad)
in
cmp
mov
shl
mov
ins
sbb
mov
adc
into
addr16
jp
cmp
and
je
cmps
inc
and
fs
push
popa
add
or
outs
dec
cmp
movs
adc
loopne
jmp
mov
sbb
mov
push
retf
aad
or
dec
cmp
mov
ss
push
cmps
mov
xchg
sub
mov
mov
pusha
and
mov
push
or
mov
push
rol
pop
(bad)
hlt
push
inc
cli
jb
bound
mov
nop
cmp
arpl
in
into
ja
dec
sbb
stos
out
jbe
or
cmc
fnstcw
push
jnp
mov
xor
loop
ret
push
pop
out
jnp
jl
out
iret
ins
inc
out
fwait
stc
adc
jg
xchg
mov
cli
das
mov
jecxz
in
xor
mov
pop
push
iret
icebp
(bad)
daa
xchg
mov
jmp
add
jnp
mov
cmp
dec
and
xchg
test
mov
add
pop
(bad)
pushf
jb
pop
mov
sub
push
(bad)
test
pop
in
dec
not
popf
or
clc
xchg
into
stos
xor
xor
ins
cmp
test
in
stos
jb
fs
mov
mov
dec
stos
jecxz
add
jno
stos
add
pop
arpl
into
outs
mov
mov
lds
xchg
aaa
enter
in
es
and
mov
adc
mov
adc
fwait
lods
inc
jno
sahf
or
mov
jl
sub
xchg
add
fsub
div
pop
add
rcl
lods
sahf
jns
inc
pop
enter
sti
dec
push
inc
mov
jo
mov
pusha
es
xor
les
retf
out
dec
inc
sbb
test
dec
inc
clc
test
add
add
ins
ret
push
scas
outs
fdiv
inc
or
aam
inc
and
sbb
adc
loop
add
adc
lock
sbb
xchg
test
add
add
dec
push
cmp
mov
jne
mov
rol
xchg
xor
(bad)
xor
mov
stos
mov
pop
pop
leave
xchg
jne
jo
daa
std
enter
pop
pop
push
idiv
mov
mov
cmps
mov
cmc
out
(bad)
cwde
pop
lock
jmp
inc
or
sbb
mov
popa
cmp
lods
icebp
nop
rcr
mov
jmp
(bad)
sub
cmps
icebp
fidivr
and
cmps
loope
jl
dec
fild
imul
repnz
sub
xchg
retf
ss
scas
xadd
dec
jo
scas
mul
imul
mov
ins
xchg
inc
inc
vmovshdup
ss
test
icebp
sub
add
sub
pop
push
inc
pusha
push
adc
xchg
pop
mov
movs
pop
jmp
xor
mov
(bad)
or
pop
jne
icebp
sub
fdiv
pop
cmp
es
mov
pop
retf
gs
leave
jmp
jnp
stc
mov
int3
mov
pusha
cmp
mov
out
sar
pop
repnz
or
xchg
sbb
inc
(bad)
push
leave
jnp
in
in
add
cmps
pop
test
in
(bad)
out
out
lds
fwait
push
mov
inc
fs
pushf
(bad)
leave
mov
cmp
call
dec
out
and
mov
(bad)
lods
dec
inc
fld
stc
xchg
pop
xchg
inc
inc
jl
xor
test
lahf
(bad)
out
in
xor
sub
mov
aad
les
gs
sar
retf
lock
or
into
xor
fsubr
stc
arpl
int
pop
adc
(bad)
out
or
enter
mov
adc
std
push
movhps
lds
out
and
mov
jae
jns
lods
pop
dec
(bad)
ja
mov
repz
out
inc
mov
xchg
lods
cli
sar
xor
sbb
jg
cmc
retf
mov
out
xor
xchg
cmps
out
lods
jmp
retf
enter
cli
ret
dec
cmp
adc
popf
fxch
xor
ror
call
les
outs
dec
pusha
cld
addr16
jbe
inc
sub
pop
push
xor
mov
test
or
lock
call
pop
into
xchg
jecxz
and
outs
dec
mov
jnp
and
mov
fistp
xor
call
mov
(bad)
jmp
sahf
sbb
and
lahf
sub
retf
and
jae
mov
xchg
cdq
sbb
repnz
mov
nop
sbb
pop
data16
mov
adc
ss
or
int
mov
int3
or
lds
xchg
jo
mov
cmps
lahf
inc
xchg
rcl
aad
sbb
dec
jl
dec
sbb
loope
scas
push
dec
jne
into
push
mov
clc
jecxz
or
test
push
xchg
and
pop
cmp
add
xor
inc
cli
into
sahf
adc
sbb
mov
sub
in
or
xor
fcom
adc
and
mov
push
pop
xchg
enter
sub
fiadd
in
sub
xchg
pushf
leave
int3
push
push
mov
nop
mov
popa
sbb
mov
call
jo
lock
mov
cmp
lds
std
dec
cdq
cmps
sahf
jmp
mov
in
inc
mov
adc
dec
sahf
add
add
outs
in
xchg
icebp
dec
sbb
mov
out
and
jbe
(bad)
xchg
or
stc
and
cmp
mov
xchg
cs
or
aaa
pop
into
pop
push
out
sbb
iret
movs
cli
mov
daa
dec
shr
xor
das
mov
mov
xchg
sub
outs
imul
pop
in
xor
xchg
sbb
jb
test
mov
mov
mov
enter
push
lahf
jle
fs
loope
in
mov
inc
call
sub
imul
sub
iret
stc
bound
push
rcl
mov
jo
mov
in
test
or
ja
inc
aas
add
xor
and
nop
shl
ins
dec
mov
scas
pmulhuw
sbb
clc
out
nop
mov
mov
cmc
mov
jge
pop
and
and
cmp
sahf
int3
cmps
leave
pop
sahf
cdq
outs
out
dec
push
test
add
out
add
pusha
mov
inc
jb
dec
mov
cwde
mov
push
mov
mov
inc
xor
mov
scas
fild
dec
and
lods
bound
scas
pop
mov
bound
push
and
sub
or
mov
xor
popa
cmp
ret
push
loope
fiadd
ja
lock
mov
imul
movs
cmp
ins
les
add
dec
pushf
or
in
es
mov
mov
nop
test
call
lds
mov
popa
sbb
jmp
outs
jmp
std
fnstsw
cwde
ja
push
sub
and
mov
ret
push
sub
arpl
and
jmp
in
xor
or
clc
pop
in
xor
mov
pop
stos
movs
cmp
not
mov
scas
cmp
mov
and
fist
push
add
int
fs
loop
add
pushw
push
enter
test
ret
jmp
jnp
jecxz
mov
push
(bad)
adc
and
test
pop
bound
pop
ja
push
push
into
xchg
adc
xchg
mov
lock
inc
add
ret
cld
stc
fstp
in
std
push
sbb
shr
push
pop
test
add
adc
cmps
sar
xor
adc
push
add
xchg
icebp
xor
push
xor
sbb
call
pop
add
lods
daa
ins
push
int3
xchg
or
loope
test
nop
push
xchg
cmp
inc
jo
cmps
push
xor
push
jne
js
adc
pop
mov
je
ds
mov
jb
mov
adc
into
out
and
xor
xchg
sbb
xchg
cwde
push
shr
dec
rcr
cmp
xchg
xor
rol
and
ins
adc
inc
pop
shr
or
and
push
enter
movs
sub
ja
adc
sbb
pushf
mov
add
loopne
cli
retf
adc
(bad)
lock
ins
push
iret
push
scas
pop
or
xchg
mov
ror
out
shr
jnp
jecxz
call
pop
cmp
mov
fwait
cmp
test
lahf
shl
es
and
inc
xchg
xor
aaa
and
pop
xchg
(bad)
sub
xor
pop
sub
popf
sub
and
mov
cmp
dec
push
aad
dec
mov
fiadd
adc
xlat
inc
mov
add
dec
jae
pop
shl
call
(bad)
cmps
aaa
dec
xchg
test
in
scas
pushf
arpl
iret
pop
mov
sub
scas
in
sub
sbb
cmp
mov
jp
inc
lock
dec
mov
jmp
jmp
and
lods
leave
jmp
mov
push
mov
mov
xchg
jecxz
lods
in
iret
arpl
(bad)
xor
ins
cmp
dec
loope
div
inc
xchg
popf
pop
cmp
xor
or
mov
cdq
push
fst
hlt
lods
xchg
jmp
push
jnp
test
dec
push
retf
and
mov
pop
sar
cmp
loopne
aam
mov
int
sub
nop
aaa
dec
shl
pusha
push
sub
cs
call
pop
pop
loope
ds
leave
ins
adc
in
mov
and
sub
hlt
jl
add
mov
jmp
je
(bad)
call
cmp
xchg
adc
repz
fcos
sub
popa
iret
pop
stos
mov
retf
repz
inc
mov
xchg
lahf
aam
mov
mov
mov
inc
sbb
lahf
je
stos
out
inc
js
mov
sbb
push
ds
pop
adc
jle
ret
dec
jmp
scas
add
sbb
clc
fwait
ja
test
(bad)
mov
into
fisub
sbb
neg
test
enter
mov
in
adc
add
and
jge
dec
cdq
inc
jo
clc
add
push
jmp
sbb
fist
and
js
jne
(bad)
imul
jo
sbb
leave
add
(bad)
repnz
fild
inc
jmp
cld
retf
xchg
adc
addr16
not
out
dec
jecxz
inc
rcr
in
jecxz
xor
or
retf
std
loop
xchg
addr16
daa
pop
jns
inc
or
inc
or
inc
test
sbb
sti
mov
lsl
imul
lahf
nop
inc
fpatan
adc
push
movs
movs
ins
push
and
nop
frstor
sub
push
pop
mov
xchg
xchg
cwde
jbe
jnp
jo
jns
cmp
repnz
and
jnp
add
pop
xchg
jnp
xchg
shl
or
xchg
xchg
out
sbb
add
mov
(bad)
ds
pop
cmp
mov
pop
jmp
mov
inc
arpl
xchg
into
and
add
inc
mov
mov
dec
dec
jmp
inc
in
xchg
lahf
test
retf
gs
nop
aam
xor
cli
in
test
cmc
imul
mov
push
fprem
mov
jb
int3
inc
outs
out
test
cmp
mov
ja
mov
ret
inc
sbb
pop
movs
dec
add
jbe
jge
repz
mov
aaa
mov
fist
retf
push
jle
adc
pop
add
xchg
mov
xchg
loopne
mul
xchg
add
test
mov
dec
or
adc
add
jo
pushf
cli
push
inc
sbb
mov
cld
cld
scas
pusha
adc
inc
mov
pop
dec
mov
sub
add
cmc
sub
stos
(bad)
push
push
shl
inc
and
fidiv
sbb
mov
rcr
xchg
push
add
enter
lock
xor
inc
add
rol
cdq
sbb
pop
out
fcomip
xchg
or
pusha
js
fiadd
sbb
pop
cmp
jae
xchg
or
mov
pop
rcl
mov
jmp
adc
les
test
push
pop
xchg
xchg
je
mov
push
ins
and
dec
sar
inc
mov
js
add
xlat
fnstsw
jo
sahf
enter
mov
xchg
adc
dec
movs
int3
in
retf
mul
icebp
cdq
jns
pop
or
movs
jne
lods
cmp
test
mov
adc
adc
test
xchg
(bad)
fisttp
or
pop
je
cmp
cmps
mov
fild
push
stc
jle
adc
lods
mov
pop
inc
mov
movs
and
sub
jno
and
aaa
inc
push
call
mov
clc
test
fist
hlt
arpl
or
jmp
sub
rol
push
jbe
push
std
repz
jle
sub
int3
jge
arpl
jnp
shl
bound
jmp
pop
(bad)
pusha
xor
mov
and
jbe
xchg
aas
lahf
xchg
add
shl
pop
mov
adc
loop
call
add
mov
mov
cli
and
mov
pop
stc
push
pusha
scas
call
daa
movs
jl
jae
out
pop
lds
ins
das
xchg
mov
pop
repz
push
cmp
jle
data16
pop
js
xor
mov
outs
and
hlt
mov
les
xchg
xchg
adc
or
adc
das
dec
ds
sub
js
pop
sahf
cli
imul
cmp
push
pop
iret
mov
inc
les
test
je
ja
les
xchg
mov
out
cmp
push
repnz
adc
mov
stc
ss
xchg
sti
cmp
jp
or
dec
add
mov
cmp
fchs
and
and
enter
add
mov
mov
sbb
in
push
iret
sub
retf
mov
cmps
xchg
fs
outs
outs
aas
int3
inc
xor
mov
call
shl
rcl
cld
push
xchg
mov
cld
inc
cwde
lods
adc
pop
in
int
and
xchg
adc
xchg
mov
imul
test
adc
sahf
mov
iret
mov
push
xchg
int
jbe
int
nop
fisttp
ror
sub
std
nop
call
nop
xchg
arpl
cli
call
imul
add
es
addr16
lods
imul
ss
pop
pop
retf
ficomp
movs
loope
mov
push
aas
ins
push
or
ja
outs
and
push
sbb
mov
xchg
jl
push
(bad)
push
ins
lahf
add
adc
pop
dec
enter
(bad)
fcmovnb
sbb
dec
and
sbb
xchg
adc
cmp
test
in
shr
leave
cwde
pop
mov
imul
add
bound
push
lea
inc
daa
dec
in
add
and
cmc
daa
ror
test
fsubr
mov
ins
mov
int3
push
inc
jne
mov
sub
inc
scas
stos
das
xchg
xchg
push
(bad)
and
sbb
and
sbb
(bad)
pop
dec
xlat
pop
cmps
retf
cmp
xchg
loope
dec
sar
xchg
cmp
mov
ror
jo
je
push
xor
jne
sub
popa
cmp
sbb
cmp
(bad)
inc
push
call
sub
mov
mul
dec
jb
sbb
je
out
push
xor
push
push
loopne
mov
sub
les
pop
mov
push
stc
xchg
mov
gs
icebp
ret
repnz
jg
sbb
out
mov
out
sahf
push
and
imul
push
repz
jae
sbb
mov
shl
or
inc
(bad)
jmp
iret
inc
addps
lods
cmp
fidiv
in
add
pop
retf
cmp
int
leave
xchg
dec
ja
pop
push
push
pop
pop
pusha
enter
ss
push
dec
push
xlat
std
mov
das
jns
jl
add
xchg
jle
sub
cmp
and
dec
test
mov
or
leave
shl
fwait
mov
mov
cld
imul
icebp
dec
lods
pop
fist
xchg
sbb
mov
mov
pusha
mov
mov
xor
ret
jnp
pop
(bad)
jge
int3
cmc
frstor
inc
inc
pop
aaa
test
jne
sbb
dec
xchg
pop
push
int3
sbb
pop
pavgb
mov
mov
(bad)
fs
and
push
sbb
mov
push
pop
and
mov
das
cmp
(bad)
jb
pop
xchg
mov
cmp
push
add
sbb
push
aad
push
jns
dec
mov
mov
call
imul
cmp
push
xor
stos
mov
push
lods
dec
mov
retf
adc
int
adc
cmp
mov
xchg
adc
push
mov
dec
dec
pop
cmp
fisub
in
add
mov
adc
cmps
jns
xchg
fs
loop
add
in
aas
fsubr
aad
fadd
dec
in
and
sub
in
lods
mov
sbb
jle
ret
movs
jmp
sub
int
js
and
dec
xor
and
sub
aaa
sub
scas
fwait
mov
fld
sar
les
jmp
or
or
mov
mov
mov
pop
in
cli
pop
psllw
into
xlat
dec
and
push
jmp
xchg
mov
cwde
mov
lds
daa
loopne
jmp
das
push
int3
or
ror
in
lods
imul
cmp
push
adc
pushf
and
xor
jo
cdq
(bad)
mov
outs
xor
sbb
or
inc
imul
xchg
push
and
mov
or
add
data16
adc
pop
dec
sti
fwait
repnz
inc
dec
int
call
push
cmc
sbb
movs
fidivr
loop
jno
and
cmc
scas
lds
iret
cmp
neg
inc
sub
or
fbstp
xchg
(bad)
cli
js
call
fisttp
mov
fwait
mov
fwait
cmp
test
arpl
shl
jge
scas
std
xchg
(bad)
xor
cmps
mov
mov
in
dec
test
and
mov
or
add
scas
mov
int
mov
mov
jns
not
cmp
and
sub
sub
push
mov
jmp
in
cdq
rcr
cmp
and
sbb
nop
add
xor
fidivr
and
stos
stos
dec
pushf
aam
push
pop
pop
cwde
adc
cdq
push
sub
rcl
aam
sub
adc
push
bound
lds
adc
mov
or
sbb
cmp
inc
mov
iret
fiadd
int3
pop
scas
sub
jl
pop
push
mov
pop
pop
out
in
shl
xlat
int3
out
inc
in
addr16
push
inc
mov
sub
fwait
dec
inc
fs
out
test
mov
cmp
jne
icebp
push
clc
sbb
outs
or
cmp
stos
adc
dec
test
je
pushf
cli
or
fs
sbb
and
push
in
hlt
push
mov
or
out
lods
pop
dec
cld
mov
push
jmp
mov
sub
xlat
mov
xor
mov
mov
dec
loop
ds
or
(bad)
push
add
in
test
ja
dec
mov
imul
int
in
xchg
pop
xchg
fsqrt
fbstp
cmc
mov
jae
and
and
cmp
dec
rcl
mov
lock
cmp
xchg
push
rep
sbb
stos
out
gs
push
das
in
sub
loop
mov
(bad)
sbb
mov
and
inc
outs
sbb
hlt
(bad)
or
es
aas
mov
cmp
jns
dec
jo
jmp
push
pushf
(bad)
cld
leave
fistp
cli
sbb
xchg
ror
jecxz
mov
sub
(bad)
lea
adc
(bad)
mov
mov
outs
ret
pop
in
adc
es
mov
fidiv
pop
int3
mov
sub
xor
jbe
fist
xchg
mov
mov
pop
pop
cld
mov
push
out
or
sub
test
(bad)
sub
push
dec
cmc
pop
push
push
in
or
das
cld
out
xchg
adc
(bad)
mov
adc
arpl
pop
xchg
inc
les
inc
jbe
or
int
pop
stos
jae
add
adc
int
push
jle
test
imul
pop
mov
add
shl
jp
cwde
adc
jae
add
adc
mov
idiv
call
dec
cwde
sbb
(bad)
aam
sahf
mov
push
(bad)
mov
push
fisub
ror
hlt
sbb
cmc
mov
ds
mov
pop
mov
loop
push
push
dec
test
mov
inc
nop
pop
sub
fild
sbb
push
jno
pushf
mov
sub
push
mov
inc
cmp
add
test
not
push
sbb
and
mov
inc
inc
cs
cwde
pusha
dec
mov
inc
(bad)
xchg
stc
aad
scas
add
adc
imul
(bad)
retf
sub
lods
aas
xor
ret
inc
inc
mov
inc
xchg
test
movs
cmps
dec
les
gs
sub
cdq
rcl
sti
xchg
xor
mov
mov
aam
test
sbb
sahf
repz
jns
retf
pop
stc
fprem1
ds
xor
out
dec
(bad)
cli
repnz
xor
pop
and
das
pop
mov
cmp
xor
cmp
pushf
mov
nop
int3
xchg
mov
mov
std
push
sbb
nop
ds
bound
jo
leave
mov
cli
mov
ds
xor
repnz
and
jmp
cld
push
test
scas
push
pop
lahf
call
jmp
mov
sbb
mov
aam
aad
push
lahf
lods
mov
push
fiadd
push
jmp
call
xchg
or
xchg
push
sub
dec
ficomp
repnz
xchg
xor
in
sti
sub
sbb
xchg
xchg
xchg
jl
adc
adc
imul
mov
mov
jp
out
lea
inc
jmp
jns
popf
(bad)
outs
sbb
data16
ret
push
aaa
mov
test
clc
cmp
in
(bad)
dec
mov
jbe
add
ret
es
push
ja
or
mov
(bad)
mov
shl
in
lahf
jge
pusha
push
sub
sub
sbb
dec
mov
push
push
adc
into
push
jp
ror
shr
test
sbb
add
xor
dec
xchg
pop
ins
(bad)
mov
or
aas
cmp
jmp
mov
cli
add
add
test
fimul
test
sub
rcr
hlt
jno
jecxz
xchg
push
outs
pop
and
and
or
lock
and
stos
lock
mov
pop
in
jge
or
fcomp
or
cmps
cmp
inc
ror
clc
data16
add
outs
fist
cs
adc
sar
sub
dec
arpl
sbb
std
sbb
and
test
dec
clc
sahf
push
or
cmps
out
imul
neg
push
dec
cmp
nop
xchg
push
dec
cdq
mov
sahf
xchg
clc
icebp
mov
(bad)
sbb
cmps
jge
jg
sbb
mov
int3
ja
sti
xor
xor
mov
xchg
xor
and
mov
sub
scas
sbb
mov
data16
mov
pop
shl
and
sti
stos
pop
test
pop
loop
pop
jmp
stos
into
ds
or
and
ffreep
pop
mov
(bad)
sbb
xor
sbb
cmp
scas
out
dec
cdq
int3
cmps
lea
jo
mov
cmp
in
jmp
push
sbb
pop
jne
leave
dec
daa
xchg
stos
dec
sbb
mov
fdivr
movs
adc
pop
lahf
push
mov
icebp
push
imul
icebp
pop
mov
push
fwait
xor
mov
xor
hlt
mov
sbb
mov
fidivr
mov
adc
or
dec
or
in
or
aam
or
add
out
daa
test
mov
adc
mov
inc
sbb
mov
stos
mov
imul
and
adc
clc
push
xchg
jae
cmp
test
mov
bound
lsl
fwait
jne
cmp
arpl
sbb
adc
push
mov
scas
push
cmp
pop
retf
inc
inc
stc
mov
in
movs
cmp
nop
adc
test
bound
cwde
jmp
dec
or
inc
cmps
adc
mov
jecxz
retf
data16
dec
gs
pop
ins
(bad)
cmc
or
clc
(bad)
jmp
mov
icebp
lahf
inc
jg
add
ja
add
dec
(bad)
out
jae
pmulhw
in
aam
pop
jge
(bad)
out
cdq
pushf
dec
arpl
repz
and
leave
leave
xor
xor
(bad)
aas
sahf
push
pop
push
cmp
lds
cmp
outs
xchg
dec
jo
push
adc
sub
sbb
xchg
pop
mov
pop
imul
pop
shl
adc
aam
ss
mov
(bad)
sub
push
mov
es
in
leave
dec
mov
ret
(bad)
dec
cmc
cvtdq2ps
add
imul
xlat
add
jnp
dec
or
out
and
dec
out
dec
daa
dec
add
mov
push
mov
ret
gs
je
cmp
jne
push
dec
je
push
popa
jb
cdq
mov
add
pop
sbb
gs
arpl
dec
cwde
daa
inc
dec
aam
ret
adc
call
xchg
dec
cs
out
cld
push
jo
jbe
mov
xor
in
sub
lea
enter
lds
push
xor
dec
data16
repnz
pop
aaa
cmps
pop
inc
in
sbb
lock
or
pop
add
int
mov
cmp
jo
xchg
stos
pop
mov
jle
mov
dec
pusha
cmc
jb
int
out
test
cmp
or
(bad)
jns
test
(bad)
adc
loope
mov
mov
leave
aas
test
popf
push
mov
sbb
jb
es
stos
clc
sbb
sub
out
mov
push
icebp
ret
inc
cli
jmp
adc
or
mov
xor
sbb
xchg
xor
fs
in
fwait
inc
inc
dec
(bad)
test
hlt
fs
xchg
adc
pop
pop
cmp
popa
pop
adc
xor
xchg
pop
call
movd
mov
fdiv
inc
mov
dec
fisttp
addr16
lock
pop
faddp
sub
movs
popa
or
adc
sub
xchg
enter
inc
push
mov
add
lds
push
mov
out
(bad)
shl
int3
lds
lods
call
push
js
aam
ret
pop
lahf
sar
jb
nop
(bad)
hlt
jo
int3
sbb
mov
mov
not
imul
pop
stos
add
out
mov
popf
jns
xchg
pushf
xchg
dec
dec
sbb
call
dec
pusha
mov
bound
sbb
adc
inc
mov
cmp
aas
rol
fst
jmp
jmp
mov
ret
int3
push
popf
jo
mov
jge
test
pop
cmp
sahf
out
fdivp
xor
test
(bad)
out
dec
imul
popf
xchg
out
mov
xchg
mov
xlat
pushf
je
fwait
jmp
stos
xchg
stos
(bad)
mov
jbe
sub
rcl
int
(bad)
mov
iret
sbb
mov
inc
jnp
and
mov
idiv
mul
jge
test
xor
mov
jge
mov
mov
movs
imul
nop
pop
xchg
mov
inc
push
in
push
add
mov
jl
sbb
in
repz
ror
push
mov
stos
xchg
cmp
fnstcw
aam
fist
in
and
dec
cmp
mov
sbb
inc
hlt
or
mov
dec
call
xchg
in
and
inc
cld
dec
sub
xchg
mov
inc
pop
and
(bad)
or
or
pop
xchg
ss
bnd
daa
mov
fild
adc
test
in
js
and
hlt
iret
in
pop
jmp
pop
aas
mov
cmps
outs
stos
cdq
mov
loope
jp
js
adc
cwde
adc
jns
mov
jl
sbb
xchg
fisttp
inc
or
rcr
mov
mov
icebp
sub
fiadd
inc
or
sub
xchg
mov
outs
in
(bad)
shl
xor
mov
pop
ins
shr
sti
repnz
jno
icebp
inc
(bad)
out
int3
lods
sub
and
xchg
mov
or
and
lods
out
mov
jae
cmps
cmp
out
mov
lea
xchg
lea
dec
push
pop
lea
push
pusha
call
fisub
or
lea
sub
aad
dec
fwait
and
call
cmp
adc
pop
jle
add
sub
movs
ins
in
in
mov
test
xchg
xor
inc
push
dec
mov
packsswb
ror
mov
shl
mov
inc
jl
stos
mov
sbb
push
(bad)
int3
add
inc
stos
lds
sbb
jge
movs
das
pushf
test
cmps
pop
test
mov
mov
mov
pop
sub
inc
and
inc
jle
rol
rol
enter
aad
dec
xchg
in
jmp
lahf
dec
lods
(bad)
ins
dec
fild
sar
xlat
xchg
sbb
fadd
mov
pop
adc
fistp
pop
push
sub
inc
das
pop
jge
adc
push
sar
ins
cmc
jb
daa
in
or
lock
pop
btr
dec
add
ja
ins
pop
push
mov
pushf
add
loope
into
adc
(bad)
xchg
push
cdq
js
or
mov
mov
ins
and
sti
push
enter
sub
mov
cmpxchg
dec
dec
out
jae
mov
out
cmp
ins
aas
xchg
in
call
popf
fdiv
int
mov
test
inc
in
cmp
mov
jb
and
dec
jae
retf
and
stos
jb
lahf
or
push
outs
sub
jne
sbb
xchg
sar
inc
sub
xor
ret
ins
je
aam
ret
adc
add
popf
xlat
(bad)
into
pop
inc
cmp
jg
test
lea
daa
xchg
int
ret
fdivp
repnz
push
nop
rcl
xchg
jns
add
(bad)
div
jno
jae
movs
or
or
iret
les
ss
mov
inc
clc
add
and
out
div
call
imul
cld
jbe
mov
sub
sbb
movd
icebp
dec
in
or
(bad)
shl
iret
ret
jmp
fiadd
jns
aaa
popa
pusha
call
ins
mov
test
sub
movs
dec
push
inc
mov
sbb
mov
sbb
jmp
jo
imul
outs
push
cld
and
das
dec
or
jmp
and
stos
xor
push
mov
lods
mov
mov
pop
outs
inc
cmp
out
or
popf
pop
out
aas
out
in
xor
repz
loop
mov
mov
push
pop
(bad)
loopne
outs
aad
jne
jne
gs
retf
movs
inc
or
dec
and
(bad)
jae
outs
cmps
add
test
mov
nop
cwde
pop
mov
xchg
mov
push
loop
cli
ja
loope
mov
repz
test
lds
rcl
inc
(bad)
ret
cmp
mov
xchg
ins
repnz
fs
cmp
push
add
retf
inc
aas
dec
push
mov
imul
add
xor
push
and
jg
or
sub
out
mov
(bad)
mov
push
mov
add
jns
jns
sub
jns
jmp
out
push
retf
(bad)
sub
and
xor
pop
adc
imul
(bad)
push
je
xor
sub
push
mov
sbb
adc
mov
loope
xor
mov
xchg
lds
dec
pop
mov
mov
outs
call
shl
xchg
gs
mov
push
sbb
add
movs
mov
xchg
xor
mov
shl
pop
int
or
mov
adc
or
pop
pop
jo
fdiv
mov
fnstcw
sub
jecxz
dec
in
pop
jo
movs
xchg
ficomp
push
mul
fcomp
out
xlat
ja
add
arpl
dec
xchg
loop
ret
sbb
sbb
ds
dec
rol
or
dec
mov
dec
inc
scas
cdq
inc
inc
dec
fdiv
lds
mov
loop
and
icebp
jecxz
outs
fldenv
ins
xchg
arpl
(bad)
cmp
sbb
mov
in
(bad)
mov
int3
push
dec
mov
daa
cmps
pop
mov
(bad)
mov
mov
sbb
fisub
push
movs
scas
repz
pop
or
mov
repz
sub
ret
sbb
leave
test
jno
jecxz
in
imul
icebp
pop
daa
popf
push
imul
inc
jae
std
adc
out
add
push
jo
inc
popf
mov
loop
cld
mov
mov
inc
sbb
mov
pop
mov
repnz
jmp
or
loop
jne
nop
jbe
out
mov
add
pop
jno
enter
or
inc
clc
outs
(bad)
xor
movs
scas
inc
mov
sahf
outs
pop
out
cmp
test
mov
in
bound
in
add
imul
loope
xor
imul
cli
mov
cld
push
scas
data16
and
mov
ror
scas
sti
out
mov
imul
addr16
jmp
jns
popf
retf
sub
inc
and
(bad)
iret
stc
cmp
add
mov
addr16
jecxz
xchg
repz
std
cmp
push
jp
inc
cmps
jmp
or
stc
fisub
fbld
push
cwde
push
xchg
add
xor
push
inc
movs
or
sub
xor
mov
pushf
adc
data16
packuswb
jge
mov
nop
sbb
mov
mov
push
cmc
push
jmp
inc
or
in
add
push
mov
in
cmp
adc
add
cli
in
lods
enter
xchg
mov
out
pop
jne
cmp
xor
and
mov
inc
mov
and
mov
(bad)
aam
popf
shl
sbb
sub
mov
int
fwait
mov
or
mov
pusha
retf
cli
mov
pop
jns
mov
pop
xchg
repnz
sub
cli
aad
pop
retf
cdq
shl
cmp
sub
push
lods
push
ror
sbb
jp
ret
cdq
mov
jp
je
mov
or
je
xchg
mov
jbe
scas
inc
push
sbb
pop
adc
mov
pop
add
mov
xlat
lds
push
(bad)
loopne
fadd
scas
jl
adc
fptan
mov
popa
and
and
mov
(bad)
int3
mov
lds
or
daa
out
jo
mov
test
jae
test
pop
sbb
or
pop
outs
mov
and
aam
and
dec
data16
xor
xchg
cwde
mov
cmp
in
lea
stos
pop
cmps
pushf
data16
gs
lds
scas
shr
pop
dec
call
mov
jbe
jle
jmp
fwait
cs
mov
pop
sti
push
es
xchg
(bad)
daa
mov
mov
out
xchg
cmp
mov
xchg
(bad)
repnz
mov
shl
push
sbb
jno
lds
or
xchg
adc
lock
adc
mov
jne
ja
aam
push
loop
push
(bad)
xchg
pop
or
add
pusha
inc
fcomp
jle
mov
push
fcomp
es
cdq
aad
mov
popf
xor
in
js
imul
mov
mov
js
cmp
lods
in
les
xor
cmc
arpl
repnz
iret
enter
mov
mov
cli
enter
rcl
xor
iret
in
enter
sub
iret
cmps
and
add
mov
inc
mov
mov
sbb
and
stc
fstp
mov
movs
rep
push
jmp
or
jp
clc
es
push
int3
xchg
mov
adc
scas
cs
sub
mov
ret
movs
mov
push
jb
test
daa
xchg
add
lock
or
jbe
dec
inc
test
mov
fmul
mov
dec
adc
lds
fcomp
fs
xor
pop
jbe
in
and
lods
lock
mov
(bad)
and
and
xor
jb
imul
js
mov
mov
test
xor
int3
std
cmp
mov
push
lea
in
pop
mov
or
lea
jg
xchg
sbb
dec
loopne
aam
je
dec
pop
xor
inc
aas
rol
cmp
fcomp
repnz
stos
sbb
(bad)
jecxz
mov
into
call
push
ins
adc
xchg
inc
pop
icebp
mov
ins
int3
fst
add
add
adc
lahf
inc
inc
sub
loop
jg
mov
xchg
gs
fstp
xchg
aam
lods
dec
loop
int3
jecxz
cmps
push
mov
into
mov
sub
fcom
mov
lods
dec
add
outs
dec
cmp
mov
mul
enter
ins
mov
std
push
repz
jl
and
icebp
lds
sti
das
shr
or
mov
in
cmc
sub
sbb
test
xor
loope
dec
sbb
cwde
fwait
leave
jecxz
dec
(bad)
push
lds
sti
or
or
bound
fs
jp
mov
ja
fld
xchg
mov
jae
xchg
cwde
adc
and
out
(bad)
mov
and
mov
inc
push
outs
dec
pusha
shl
ffree
mov
and
mov
(bad)
pusha
inc
jmp
fwait
in
lock
mov
inc
jbe
jns
hlt
cli
mov
push
mov
not
scas
int3
xlat
xor
sbb
mov
push
scas
or
aaa
fisttp
daa
sbb
mov
test
mov
jle
push
push
mov
js
adc
dec
cmp
cmp
movs
nop
test
fsubr
xchg
jl
fcom
int3
add
push
pop
dec
push
nop
hlt
adc
dec
pusha
aaa
ins
loope
mov
jne
frstor
or
xchg
sub
sub
pushf
data16
out
sub
ins
xlat
lods
xor
mov
outs
mov
inc
test
sbb
xor
ret
ret
adc
push
imul
or
fidivr
pop
dec
mov
lahf
mov
jg
mov
xlat
adc
cmc
pop
daa
mov
lods
cmp
xor
ss
mov
ins
imul
mov
jge
into
mov
jl
sub
push
(bad)
mov
ins
and
sahf
add
retf
xchg
mov
aam
pusha
outs
xchg
and
adc
push
adc
mov
in
jmp
xchg
fnsave
mov
jmp
ins
push
jmp
inc
pop
jecxz
jbe
sahf
emms
leave
xor
mov
sub
imul
fisubr
gs
sub
pop
fucom
mov
or
add
adc
adc
out
inc
cmp
jl
push
iretw
cs
shl
test
jbe
loopne
jmp
int3
in
(bad)
sti
xlat
movs
and
rcr
out
adc
lea
sub
fadd
push
call
dec
xchg
sar
jbe
sbb
sub
rcl
bound
adc
jne
mov
ret
call
pushf
imul
icebp
pop
and
jo
or
aad
adc
mov
mov
movs
je
mov
mov
dec
repz
adc
mov
lods
dec
dec
sahf
cmp
rcr
add
repz
daa
cmp
jno
xor
xchg
sub
(bad)
stos
dec
dec
mov
out
std
cmp
sbb
pop
dec
in
shr
fcmovu
dec
push
pop
cmps
test
jns
ds
int
xchg
xchg
or
inc
shl
popf
adc
pop
mov
ror
test
xchg
arpl
stc
repz
lahf
mov
and
popf
(bad)
xor
pusha
mov
cli
fld
mov
jno
in
and
enter
add
dec
retf
dec
outs
das
xor
lods
rcl
pop
stos
icebp
xchg
cs
mov
inc
aad
add
mov
mov
jp
(bad)
cli
adc
(bad)
cmp
fistp
cmp
mov
pop
xor
sahf
sub
sub
or
add
xor
inc
inc
paddw
fcmovnu
fnstenv
sbb
jnp
shl
or
pop
fisubr
and
jg
rcr
nop
movs
push
outs
sbb
cwde
mov
ret
jecxz
push
int
gs
xor
jbe
repnz
out
dec
xchg
iret
add
add
aas
pusha
mov
mov
gs
fisub
mov
stos
loope
stos
stc
pusha
popa
mov
movs
jne
and
jmp
cld
inc
inc
stc
mov
bound
dec
fnstenv
sbb
mov
loope
imul
jnp
fdivr
(bad)
inc
inc
stc
jmp
sub
in
enter
mov
sbb
fst
adc
cmp
jo
mov
xchg
and
dec
jno
movs
mov
ss
mov
imul
loope
cli
mov
shl
sar
or
shl
dec
mov
aam
mov
and
(bad)
popf
xchg
shl
jno
or
jnp
push
or
outs
mov
shl
(bad)
jp
cmp
std
aam
pop
pop
icebp
test
and
test
iret
inc
icebp
fstp
(bad)
dec
jp
inc
jecxz
pop
dec
into
je
icebp
rol
mov
es
xor
in
fs
xor
add
mov
cmp
add
cmps
inc
push
cli
and
cmp
push
pop
pop
add
add
dec
retf
dec
add
mov
jnp
sbb
cwde
cmps
pop
lea
movs
loop
gs
sub
xor
dec
mov
or
leave
ds
jl
mov
jbe
jae
add
pushf
xchg
inc
outs
in
in
cwde
ret
adc
push
(bad)
cld
mov
out
fwait
xchg
test
mov
add
icebp
jb
jns
xchg
and
pusha
ror
pop
and
out
and
adc
int3
push
and
push
lods
scas
push
loopne
mov
outs
push
mov
or
mov
popf
adc
fs
add
sbb
ins
imul
(bad)
cmps
call
test
cli
mov
js
adc
mov
retf
mov
(bad)
popf
sub
icebp
cs
or
retf
(bad)
scas
inc
test
mov
adc
jno
int3
push
jo
pop
pop
cmp
xchg
mov
or
int3
in
cld
pop
popf
cs
enter
push
bound
mov
cmps
xchg
aad
leave
pusha
jno
test
push
aas
sub
add
mov
add
jge
inc
(bad)
push
and
outs
(bad)
mov
xchg
test
jge
jge
js
mov
loopne
cdq
leave
and
push
adc
add
repnz
inc
pop
in
lods
fmulp
inc
inc
jno
add
xchg
jp
in
mov
dec
mov
and
neg
push
pushf
jle
fcom
xor
lea
cmp
dec
cdq
cmp
fsub
fistp
sub
inc
cmp
inc
loopne
fadd
mov
into
jnp
imul
sub
fwait
pop
fiadd
inc
cmps
int
fadd
dec
xchg
push
stc
fld
mov
mov
sti
imul
xchg
mov
xor
or
fwait
mov
jno
jno
out
cmps
lds
cmp
int
scas
ds
call
push
loope
mov
jecxz
xchg
sbb
iret
and
and
cmp
scas
push
scas
mov
cs
jp
inc
ins
and
xor
add
je
aad
outs
(bad)
adc
sub
les
cwde
jns
pusha
pop
adc
pop
mov
inc
xor
xchg
aaa
dec
dec
cwde
ffree
clc
pusha
imul
cs
sub
and
push
shr
xchg
mov
push
fs
adc
pop
inc
call
fiadd
sub
add
jnp
mov
and
and
push
ja
push
xchg
and
pop
sbb
out
mov
mov
in
stos
and
jp
dec
ins
cmp
and
sbb
(bad)
mov
inc
add
mov
adc
jmp
in
cmp
lds
and
(bad)
and
adc
push
inc
(bad)
jecxz
pusha
xlat
out
das
out
out
pop
xchg
mov
sbb
test
and
mov
sbb
stos
xchg
inc
int3
dec
cmp
inc
les
repnz
rcr
inc
idiv
add
jb
popa
iret
(bad)
xlat
xchg
push
stos
ins
popaw
sbb
out
mov
mov
mov
jbe
je
int3
int
outs
dec
push
pop
xchg
and
push
jnp
mov
ins
loopne
push
cmps
add
inc
scas
inc
fist
and
adc
or
retf
sub
(bad)
mov
push
mov
sub
je
dec
fisttp
neg
fnsave
retf
mov
mov
hlt
jne
cmp
add
add
fstp
sbb
aas
sub
pushf
and
das
sar
pop
cmp
jbe
daa
mov
mov
rcl
loop
pop
(bad)
sub
push
test
out
aas
cmp
xchg
test
inc
cmp
inc
imul
fisubr
ja
xor
fwait
aam
mov
add
sub
in
or
pushf
xor
cmc
pop
fcmovnbe
xchg
bound
(bad)
fdivp
inc
push
les
cmp
sub
test
dec
pop
jg
loope
fldenv
call
xor
hlt
add
push
push
push
ja
mov
xchg
popf
cs
out
pop
imul
inc
int3
std
mov
ror
ret
mov
call
jle
mov
shl
jecxz
jmp
mov
(bad)
int
jae
mov
leave
out
mov
mov
addr16
addr16
jne
xchg
and
mov
or
mov
pop
mov
cmp
jg
add
xchg
daa
movzx
push
es
mov
dec
push
ds
and
ret
jae
cmc
fsub
dec
sar
jmp
add
loop
pop
mov
sub
in
mov
jmp
dec
(bad)
mov
shl
pop
pop
sub
xchg
pop
and
ficom
push
mov
ins
rcl
mov
jecxz
jns
mov
popf
add
dec
xor
fisttp
or
int
pusha
scas
lock
lock
out
sbb
cmp
xchg
xchg
dec
scas
neg
jl
fnstenv
mov
sub
jb
pop
test
mov
out
inc
or
sub
bound
retf
in
cmc
cmps
or
or
jmp
pushf
test
mov
jno
rcr
movs
fisttp
xchg
(bad)
cmp
bound
or
xor
loopne
mov
cli
add
push
neg
mov
mov
adc
aas
or
lods
aas
pop
xchg
cmp
mov
mov
xchg
ins
and
cmp
cmp
lods
pop
nop
mov
dec
stos
das
adc
adc
idiv
shl
or
repnz
dec
jmp
cmp
icebp
lds
jnp
xchg
cwde
dec
push
mov
xchg
jb
mov
test
mov
in
in
sbb
xchg
call
outs
retf
ins
push
cs
stos
addr16
inc
fs
jmp
std
xchg
repnz
div
pop
cld
xchg
(bad)
push
retf
xchg
cli
cmp
fnsave
das
sbb
push
jbe
jb
pop
das
sti
dec
sti
cs
sub
add
jns
fsub
das
xor
inc
push
or
cs
cmp
les
cmp
xchg
sbb
div
mov
daa
int
or
inc
xlat
pusha
out
fsubr
xor
inc
adc
scas
and
sub
inc
int
add
cdq
mov
cmp
push
adc
ins
pop
push
push
and
and
(bad)
mov
sbb
icebp
arpl
jp
sti
push
jecxz
call
scas
imul
scas
mov
mov
cmps
sti
repz
push
mov
imul
inc
retf
scas
into
(bad)
retf
jmp
add
xchg
dec
popf
cbw
test
xchg
push
popa
add
sbb
(bad)
out
mov
or
adc
stc
(bad)
jg
sbb
mov
and
movs
rcl
dec
lahf
mov
cli
fdiv
adc
lock
or
push
data16
push
fcmovbe
ds
cmp
ret
jmp
mov
mov
aas
push
xchg
loopne
push
dec
cli
fst
and
aaa
sahf
mov
ds
cli
pop
xor
xchg
aam
sbb
leave
ss
jle
xchg
enter
push
jg
pop
or
(bad)
stos
jno
add
mov
and
dec
mov
aaa
pop
call
inc
aaa
fist
jge
dec
out
mov
adc
jo
mov
into
aad
imul
retf
stos
or
push
fcomp
push
sar
in
leave
jmp
mov
outs
cdq
in
repz
push
test
movs
(bad)
sbb
or
mov
pop
das
sti
cmp
fstp
mov
out
jno
pushf
je
jae
cmc
lock
inc
cmp
icebp
fistp
push
(bad)
jg
cmc
cli
xchg
jo
dec
ret
std
or
repnz
aas
retf
pop
lds
pop
test
xchg
push
and
addr16
pop
inc
push
dec
pop
inc
fidiv
and
mov
mov
xor
pop
inc
mov
jl
mov
or
lahf
mov
jge
ss
jns
push
fidiv
push
repz
mov
xor
inc
mov
outs
repz
push
inc
adc
dec
jle
mov
cmps
inc
shr
movs
xchg
ins
mov
and
jbe
xchg
cmp
xchg
mov
mov
and
pop
scas
clc
sub
mov
js
pop
push
sti
add
sbb
cli
push
mov
add
lea
add
stc
push
jl
sbb
mov
push
stos
pop
repnz
leave
lahf
and
retf
xchg
aaa
mov
rol
lahf
mov
out
jbe
xchg
ins
pop
fwait
(bad)
retf
cdq
daa
adc
cli
and
pop
push
inc
xor
int
out
or
jle
inc
jae
test
popf
icebp
inc
scas
push
cmp
fimul
inc
mov
jmp
push
sbb
test
pop
fdiv
xchg
sub
and
and
cwde
mov
add
sbb
aam
lods
inc
dec
cld
adc
push
mov
in
cdq
fwait
aam
mov
sbb
fist
sahf
pop
dec
aaa
test
pop
or
scas
int
sti
in
dec
aas
and
xchg
outs
pushf
sub
mov
leave
mov
mov
jb
add
sbb
cmp
mov
cmp
add
mov
mov
adc
dec
mov
test
push
loope
imul
cld
xchg
out
jae
jl
scas
repnz
jae
and
scas
mov
lods
cmp
xchg
rcr
in
add
cmp
sub
out
out
out
cmc
inc
add
movs
retf
bound
enter
clc
dec
in
icebp
xlat
addr16
add
jmp
and
bound
mov
bound
pop
xchg
mov
inc
stos
dec
ret
ins
or
into
sbb
test
hlt
pop
adc
pop
xchg
push
sar
mov
mov
loope
ins
loopne
or
xchg
xor
mov
or
retf
adc
adc
inc
or
lods
pop
or
clc
jl
adc
jbe
(bad)
(bad)
ins
jmp
inc
lods
out
sub
fwait
in
jb
je
mov
and
leave
or
jne
add
add
das
cmc
cmp
out
je
out
mov
test
or
in
cli
sub
dec
pop
dec
mov
test
inc
jnp
or
(bad)
sub
or
adc
push
cmps
mov
pop
mov
jnp
mov
inc
repnz
mov
mov
xlat
test
std
inc
or
aam
sbb
sti
es
pop
shl
push
jle
pop
add
not
add
and
mov
nop
xchg
ficomp
pop
cmp
and
inc
inc
loopne
sub
or
dec
pop
rcr
sbb
mov
sahf
stos
push
call
stos
arpl
test
jns
loop
xchg
mov
inc
gs
in
pop
repnz
div
mov
xchg
xor
ror
ss
mov
mov
lods
int3
scas
jmp
clc
jg
push
dec
mov
fild
mov
inc
adc
leavew
add
and
and
sbb
scas
push
inc
dec
pop
inc
call
push
xor
add
pop
cmp
shl
sub
xor
xor
cs
sbb
push
fbstp
sub
xchg
mul
shl
mov
dec
jae
stos
pop
cdq
daa
jp
rol
inc
cli
xchg
(bad)
mov
and
mov
sbb
call
(bad)
push
lods
outs
dec
scas
shl
sbb
or
xor
xchg
gs
dec
(bad)
cmp
clc
mov
jge
cwde
fld
mov
fs
arpl
sti
inc
mov
push
(bad)
pusha
mov
std
xchg
jo
lds
jle
inc
xchg
mov
add
loop
inc
cli
retf
push
or
fmulp
scas
ss
das
ficom
inc
push
test
cmc
lods
cmp
xchg
fs
push
clc
add
gs
push
retf
xchg
mov
jnp
mov
test
sub
repnz
imul
mov
pusha
les
add
xchg
cmp
test
or
or
sub
inc
fld
pop
es
push
jo
mov
mov
shr
fcomip
mov
inc
scas
or
test
loopne
or
int3
les
mov
jno
cmc
cli
call
in
aas
(bad)
js
fild
or
icebp
shl
dec
adc
es
(bad)
gs
test
mov
adc
ins
and
pop
xor
mov
cwde
sahf
cdq
push
mov
sbb
fld
int3
xchg
cmp
ins
xor
jge
mov
inc
cdq
mov
jmp
dec
jg
add
lahf
sub
mov
cmc
fs
sub
mov
mov
jl
loopne
push
in
jne
push
or
dec
xor
pop
bound
xor
pop
push
(bad)
cmp
test
leave
sahf
pop
cwde
mov
cmp
mov
in
sbb
push
scas
shr
lds
xor
pop
outs
lods
sbb
(bad)
and
js
pusha
adc
arpl
cld
xchg
lods
sbb
mov
xchg
cwde
push
mov
and
xor
daa
cmps
fdiv
xchg
imul
aas
adc
dec
dec
jl
dec
cmp
or
dec
jb
push
movs
fst
xor
mov
into
pop
mov
scas
push
mov
stos
pop
aaa
pop
bound
add
mov
xchg
daa
add
adc
int
and
sbb
pop
ror
ja
push
sub
sub
repnz
and
test
or
sbb
add
dec
mov
cmps
loope
mov
fadd
inc
pop
outs
movs
fsubr
xlat
repnz
push
xchg
mov
xchg
ss
xchg
jmp
sar
mov
loop
push
addr16
xor
jle
sbb
jmp
mov
retf
lods
aam
hlt
cld
cmp
cmp
outs
aas
(bad)
xor
popa
dec
and
(bad)
fcomp
and
test
es
iret
push
mov
push
mov
fidiv
pop
(bad)
and
add
loop
mov
jmp
dec
sbb
iret
adc
mov
lea
cmps
jmp
push
pop
bound
sti
(bad)
mov
stc
scas
mov
and
push
(bad)
mov
adc
jmp
adc
jecxz
test
adc
lods
std
lahf
inc
jnp
push
mov
pop
into
sbb
inc
inc
bound
loope
pop
hlt
imul
xor
push
ss
outs
push
mov
adc
lahf
lea
mov
mov
movs
mov
push
adc
sbb
jg
dec
imul
cdq
xchg
sub
inc
popf
sar
ds
mov
cld
pop
movs
into
shr
pop
retf
outs
xor
sahf
mov
inc
cmp
mov
fsubr
jae
into
aad
jno
or
mov
out
mov
cld
xor
adc
ffreep
jecxz
addr16
sahf
cmp
je
adc
xchg
cmp
pop
lea
pop
lods
fwait
cmp
mov
jmp
sub
hlt
xor
mov
out
jb
fisubr
lds
xor
sub
jmp
mov
idiv
push
sub
sbb
loope
inc
or
ror
mov
mov
scas
scas
jmp
lods
pop
push
xor
push
in
leave
push
in
and
cli
cmp
sbb
dec
mov
dec
sbb
xor
js
jbe
mov
out
mov
pop
lock
aaa
mov
push
jno
mov
ja
cdq
inc
xlat
mov
(bad)
mov
inc
xor
and
stos
jmp
jns
mov
shr
cmc
mov
xor
add
in
dec
mov
mov
push
rol
and
in
and
xor
lods
jae
push
mov
lock
xchg
cdq
xchg
push
push
sub
cmp
xor
cs
mov
inc
sub
and
data16
dec
ficom
imul
stc
mov
jne
rcr
dec
loope
and
daa
mov
push
mov
stc
fwait
loope
xchg
cmp
fld
ins
aas
sub
cdq
push
out
ret
xor
imul
fwait
dec
mov
pop
mov
fnstcw
arpl
push
mov
popf
push
in
in
add
xor
cmp
mov
rcl
xor
mov
cmp
and
call
dec
pop
fadd
jmp
out
sbb
xor
add
pop
(bad)
cmp
sti
pop
(bad)
cld
and
repz
mov
cmc
add
in
dec
cmc
ds
jmp
out
cmp
sub
aas
fwait
cmps
je
cs
rcr
enter
sbb
or
stc
adc
mov
push
add
ret
retf
push
mov
xchg
and
xor
in
mov
gs
mov
jp
xchg
clc
(bad)
cmp
cmps
xlat
xor
cmp
ds
test
fcompp
xchg
ins
xchg
sub
out
pop
test
sbb
pop
scas
shl
push
mov
retf
mov
push
xor
xor
out
aam
mov
fidivr
rol
imul
jl
ins
sub
jecxz
mov
adc
mov
mov
add
les
imul
xchg
dec
xchg
pop
adc
les
add
inc
push
inc
aas
lock
mov
jno
mov
test
xchg
pop
ret
jg
dec
xor
sbb
les
dec
and
ins
ficom
repz
cmc
or
cmp
push
test
loope
adc
xor
(bad)
add
lahf
inc
or
inc
pop
pop
std
ins
sbb
xor
mov
arpl
test
sub
mov
xor
or
data16
cli
ds
popa
fdivr
pop
jg
dec
or
push
cmp
mov
mov
loope
mov
std
ret
mov
push
cmp
and
and
int3
adc
mov
sub
push
loopne
push
sub
jle
pushf
outs
fwait
add
scas
fstp
mov
leave
xor
xchg
cmp
jmp
jns
mov
mov
jae
xor
mov
xchg
ficomp
mov
repnz
adc
xor
jae
push
repz
rcr
push
ins
push
ins
add
ficom
dec
fsub
retf
ror
in
cmps
repz
adc
mov
push
push
iret
shl
jl
test
adc
or
or
xchg
xor
sub
aad
inc
cmp
jo
clc
lds
enter
lahf
(bad)
call
fisttp
pop
ds
popa
and
inc
add
rol
xchg
mov
or
(bad)
xor
inc
mov
or
loopne
test
es
ficom
movs
mov
xor
sti
jecxz
mov
(bad)
int
jbe
daa
cdq
push
jl
mov
cmp
inc
in
cmp
push
mov
dec
out
push
mov
cs
cmp
dec
cmp
or
cdq
jle
inc
add
mov
add
mov
push
push
stos
retf
loop
aaa
shr
call
mov
sub
arpl
scas
imul
xchg
jmp
add
add
mov
or
addr16
fwait
aas
dec
mov
std
jecxz
mov
push
pop
jecxz
xor
sub
out
out
in
push
jmp
adc
pop
mov
lahf
xchg
sbb
into
dec
aaa
pushf
lock
jl
sbb
cli
retf
ret
imul
lods
mov
mov
cdq
fsubr
sub
push
sbb
pop
mov
jle
cwde
je
test
cmp
mul
es
dec
mov
movs
sub
pop
push
std
jg
rol
jae
jb
out
or
out
sbb
cmp
pushf
mov
and
inc
(bad)
cmp
and
pop
cmp
push
jmp
or
pop
sub
dec
mov
sbb
rcl
add
pushf
cwde
jno
mov
leave
aaa
arpl
inc
pop
ss
popa
pop
fldcw
pop
aaa
call
ret
mov
cwde
mov
dec
ficomp
xchg
enter
xlat
push
or
sub
cdq
mov
jp
add
push
mov
dec
nop
cmps
in
movs
js
or
mov
aad
out
add
stc
mov
adc
xor
xchg
xchg
mov
lock
aam
repnz
pop
mov
loop
shl
xchg
int
fcom
mov
fsub
pop
push
push
jne
fld
leave
loop
sbb
sbb
jae
mov
(bad)
cmp
rol
xor
cmp
dec
je
mov
fimul
xlat
loopne
push
fisttp
out
hlt
loop
add
mov
ret
pusha
sbb
fist
push
sub
fcmovbe
cmps
xchg
dec
and
and
lea
lods
or
fcmovu
movs
jle
test
inc
out
adc
adc
cmp
fwait
jle
and
test
dec
ss
or
dec
push
inc
out
sar
imul
lods
sub
jecxz
push
fwait
dec
ins
sbb
jns
inc
rep
pop
sbb
mov
imul
in
(bad)
push
gs
loope
inc
sar
daa
in
cld
lods
xor
sbb
cmp
ja
les
aas
xor
pop
push
fsubr
imul
xor
push
or
ja
outs
mov
fmul
pop
and
dec
cmps
mov
add
clc
cmp
xor
cmc
arpl
cmp
sub
out
or
fstp
std
lods
jl
lahf
jl
sbb
repz
(bad)
dec
pop
mov
js
lock
xor
sub
icebp
push
out
fcom
push
cmp
mov
sbb
add
xchg
add
jge
mov
push
and
mov
pmulhuw
dec
fbstp
xor
icebp
in
mov
scas
fcomp
imul
or
mov
inc
or
in
add
out
ret
outs
inc
dec
pop
and
dec
test
repnz
push
and
popa
push
inc
xchg
lea
ins
xchg
test
xchg
cli
sbb
cmp
mov
sub
lods
cmp
xchg
fnsave
fsub
jecxz
ds
sbb
test
stc
ins
cli
push
jbe
jl
jl
sbb
daa
ds
inc
call
jno
mov
fs
or
mov
shr
sub
sub
repz
sbb
mov
xchg
xor
(bad)
popf
popa
push
jl
pop
xchg
fstp
dec
mov
jmp
test
(bad)
lea
test
ins
push
pop
sbb
push
mov
int
lods
adc
push
mov
sbb
test
add
cmp
aaa
cmp
fcmovbe
adc
or
xchg
cmp
stos
xchg
mov
mov
push
add
daa
pop
popa
lea
push
stc
out
(bad)
sub
sbb
in
into
outs
nop
cwde
dec
icebp
lds
mov
adc
dec
dec
fmul
or
lea
jo
pop
call
js
sub
mov
jbe
xchg
jmp
and
push
mov
cli
cli
mov
pop
push
test
add
mov
int3
aad
push
rol
push
mov
shr
xchg
cmp
xor
(bad)
inc
add
xchg
mov
or
or
lock
call
sbb
and
or
stos
arpl
mov
push
jno
call
retf
sbb
cmp
push
xchg
fcmovne
punpckhbw
and
lahf
pop
mov
out
adc
inc
push
or
xor
jbe
push
sbb
cmp
ret
inc
adc
leave
jg
sbb
push
mov
xlat
sahf
mov
add
in
sbb
xor
inc
xchg
mov
ror
mov
dec
shl
sub
int
int
fild
sahf
arpl
out
les
inc
dec
adc
in
cmp
test
cmps
popf
sub
sbb
(bad)
jecxz
xchg
(bad)
cmp
movs
mov
sti
xor
fst
sub
sbb
(bad)
outs
ins
xor
push
fidiv
or
pop
xor
icebp
out
mov
jae
mov
loope
mov
inc
xor
xchg
out
inc
inc
add
sbb
mov
push
mov
jnp
xor
adc
jmp
lods
in
or
aas
pop
adc
dec
push
adc
cdq
sub
mov
(bad)
repnz
push
sahf
out
out
push
pop
mov
cmp
icebp
fild
hlt
pop
imul
jecxz
push
std
movs
cmp
mov
inc
jle
sbb
lahf
add
(bad)
xchg
sbb
jl
int
stos
mov
inc
cmp
fdivr
or
ss
mov
dec
imul
cmp
mov
adc
push
inc
push
hlt
daa
fist
xlat
in
aas
jb
cmc
pop
fs
xchg
push
popf
stos
rcr
push
(bad)
dec
and
retf
std
xor
dec
fst
adc
mov
fcomp
loopne
cdq
sub
add
stc
inc
popf
repz
adc
scas
cmp
pop
mov
mov
inc
in
lods
retf
jge
pusha
ror
sbb
sti
out
dec
mov
je
xchg
pop
sub
push
ret
addr16
push
in
out
imul
cwde
dec
dec
or
movs
out
add
or
jge
xchg
pop
cmp
jge
xor
jnp
adc
es
inc
push
sub
dec
add
cmp
sbb
cmp
xlat
lahf
and
add
mov
ret
js
adc
ins
adc
enter
jmp
push
or
jp
rol
mov
in
or
and
imul
ret
push
test
cmps
test
mov
movs
adc
mov
pusha
jle
add
mov
(bad)
sub
sub
push
cmp
call
xchg
mov
test
and
test
ins
inc
push
loope
mov
leave
nop
out
imul
mov
push
mov
icebp
cmps
clc
push
jns
repz
ffreep
mov
sbb
sub
not
cmp
and
jmp
inc
sbb
pop
push
push
iret
pop
clc
dec
ret
(bad)
xchg
mov
nop
out
mov
retf
movs
or
push
and
jmp
jns
jecxz
gs
jnp
stc
pop
sbb
call
repnz
xor
ds
outs
ins
mov
mov
jb
adc
inc
test
push
and
and
in
clc
xchg
std
sub
mov
and
sbb
cmp
ror
fld
fiadd
retf
movs
push
cmps
jae
mov
inc
mov
in
pushf
push
sahf
xchg
xor
pop
out
sub
out
pop
int3
adc
loop
aad
xchg
fstp
cmps
data16
and
outs
mov
repnz
mov
xchg
shl
sbb
push
push
in
retf
cmp
lock
out
bound
dec
or
xchg
in
adc
call
jns
lods
pushf
jle
add
add
pop
ja
mov
cwde
mov
xchg
pop
std
and
jp
ins
pop
xchg
xor
push
and
stc
sahf
sbb
es
fadd
aad
lahf
movs
out
sbb
pusha
mov
test
sbb
sbb
cdq
(bad)
xchg
js
pop
enter
popa
cld
adc
pop
call
aad
(bad)
imul
lea
jb
test
jbe
js
mov
sar
sti
icebp
jb
pop
sub
test
lock
loope
repnz
int
pop
into
imul
or
jmp
add
dec
jb
daa
xchg
cmp
cmp
jns
sbb
mov
(bad)
sub
(bad)
push
out
in
mov
xor
bound
into
xchg
cmp
jae
imul
push
jae
add
add
das
fwait
jmp
repnz
sbb
xchg
lahf
mov
pop
imul
movs
(bad)
add
jle
mov
add
mov
xchg
es
lahf
dec
xchg
or
sahf
adc
inc
xchg
stos
mov
cmc
cmp
rcl
mov
dec
cmp
cs
sahf
aaa
sub
jae
in
pop
and
jmp
xor
mov
add
mov
add
in
cmp
add
enter
(bad)
xchg
mov
mov
sbb
stc
mov
mov
mov
push
xchg
jo
xchg
cmc
dec
jp
outs
mov
jne
cld
or
fs
mov
cs
jl
popf
add
jmp
ret
pop
mov
les
(bad)
xchg
sbb
cs
jge
jae
aad
movs
lock
dec
shl
dec
cmp
xor
push
sahf
sbb
scas
and
arpl
pop
add
outs
add
mov
out
pop
je
sub
adc
add
jmp
jg
jbe
mov
arpl
pop
out
ja
add
or
ret
jl
movs
inc
daa
mov
int
xor
out
sti
jne
mov
popf
jnp
mov
fst
rol
icebp
cmc
test
xchg
cmp
adc
ins
adc
push
lods
cmc
pop
or
aam
scas
jne
mov
push
outs
sub
shr
ja
inc
or
cmp
ja
adc
jae
je
adc
and
dec
retf
or
jno
xchg
or
cmc
lods
jo
push
pushf
imul
mov
jns
dec
inc
or
fnsave
call
push
dec
shl
not
or
sub
cmp
inc
sub
sbb
aas
out
sub
jb
xor
pop
mov
xacquire
dec
jnp
repz
xchg
cmp
int3
ret
(bad)
sub
pop
call
xchg
gs
sub
or
mov
cwde
les
xor
(bad)
sti
inc
rcl
inc
mov
cmc
and
jne
sbb
jae
ror
pop
push
out
adc
fs
mov
pop
pop
xor
fcom
jmp
jns
das
sub
ret
inc
js
xor
out
not
sbb
test
test
inc
cmp
add
cs
jmp
aam
enter
rol
ror
and
adc
mov
dec
pop
(bad)
sub
push
call
adc
in
enter
iret
ret
inc
dec
sub
push
imul
(bad)
stc
clc
push
es
clc
sbb
and
or
nop
test
movsx
mov
fcmovbe
and
or
sbb
ror
add
sub
mov
ja
mov
ja
(bad)
push
(bad)
adc
stos
or
cli
retf
or
test
mov
aaa
pop
sbb
adc
jg
push
mov
xchg
movs
inc
cwde
cmp
cwde
iret
mov
xor
and
add
into
xchg
je
adc
mov
pop
cs
retf
stos
cdq
repnz
lock
jmp
pop
jb
cmp
das
and
dec
xchg
stos
arpl
nop
pushf
cmps
aam
mov
push
cld
std
xchg
loope
adc
lahf
pop
rol
pop
jmp
int3
lds
stc
daa
test
sbb
dec
and
lods
retf
ss
cmp
mov
ins
mov
test
dec
ror
stc
addr16
pop
out
daa
stos
mov
ds
mov
cld
mov
dec
(bad)
aas
xchg
leave
cld
cmp
mov
add
mov
inc
mov
addr16
and
mov
jmp
lods
mov
shl
pop
or
fisttp
mov
sbb
jb
dec
out
nop
jmp
and
jmp
addr16
dec
inc
aas
repnz
in
add
frstor
mov
(bad)
and
mov
jb
fidivr
mov
aad
mov
sub
dec
cmp
pop
sub
inc
stc
mov
pop
sub
rcl
mov
push
jo
std
bound
inc
ror
sub
outs
dec
int
sar
lods
(bad)
push
xchg
mov
in
pop
fwait
mov
call
sbb
scas
fdiv
ret
lds
add
mov
xor
jmp
cmps
call
cmp
or
stos
mov
push
push
enter
xchg
in
xor
es
push
inc
pop
cmp
std
sub
popa
push
inc
pause
push
mov
sbb
loopne
movlps
int3
and
jl
cmp
(bad)
adc
scas
cmp
pop
icebp
icebp
retf
nop
pushf
test
and
add
lods
cmp
sub
imul
in
xchg
shl
cmp
mov
jbe
push
or
retf
lds
pop
frstor
jne
fadd
es
jae
(bad)
retf
dec
add
sbb
mov
outs
(bad)
aam
xlat
cmc
mov
jp
inc
fild
invd
pop
sub
xchg
cmp
or
mov
call
or
pop
cdq
fild
jle
mov
mov
(bad)
pop
and
(bad)
repz
das
jecxz
mov
pop
push
call
mov
in
(bad)
xchg
jnp
push
dec
sbb
ret
data16
popf
lds
xor
xlat
or
(bad)
leave
mov
sbb
outs
fnstenv
inc
xor
add
cli
jle
mov
xchg
mov
imul
push
push
out
jl
ins
into
out
enter
pop
inc
xchg
xor
mov
jne
sub
ins
fistp
cmp
mov
jb
xor
shr
push
inc
xchg
lds
jge
sbb
mov
das
loop
call
sub
imul
dec
push
pop
popa
fwait
pop
inc
data16
mov
out
mov
stos
sti
(bad)
xor
int3
test
lea
ins
(bad)
push
pop
inc
or
out
xchg
call
es
jmp
jae
add
ins
fcom
jns
pop
sahf
imul
repz
out
popa
loopne
mov
fdiv
call
adc
adc
repz
ret
addr16
add
or
int
movs
stos
pop
dec
(bad)
ss
push
push
mov
push
jno
jno
inc
bnd
ficom
enter
cli
sar
jns
stos
cmps
push
cmp
add
rcr
or
and
sub
out
fs
mov
hlt
stos
shr
sub
imul
(bad)
cld
shr
mov
dec
cmp
jb
jb
push
xor
out
fsubrp
imul
(bad)
aas
cmp
das
je
pop
pop
leave
test
push
mov
stc
xchg
and
stos
mov
clc
movs
aam
mov
sbb
xor
inc
pop
jmp
adc
push
(bad)
or
repz
add
and
js
cmp
xor
xor
sub
fcomp
gs
xor
loope
aam
push
add
cmp
ds
mov
jg
int3
add
nop
jae
idiv
jmp
scas
cmp
pusha
jle
sub
jmp
(bad)
ss
mov
push
int3
xlat
fstp
mov
shld
fnstenv
std
add
xlat
in
mov
xor
aad
adc
sbb
in
sub
push
mov
cmp
sahf
addr16
aam
imul
inc
mov
pop
pmulhw
scas
sbb
data16
popa
in
jge
cdq
shl
daa
cmp
mov
jmp
pushf
es
mov
fld
inc
mov
inc
je
imul
fcomp
jmp
js
jb
retf
or
and
mov
daa
jb
jmp
mov
stos
jge
adc
add
mov
rcr
or
ds
and
xor
xchg
lods
or
dec
jp
(bad)
mov
das
dec
cs
inc
and
xor
in
sub
imul
(bad)
dec
(bad)
mov
mov
push
jp
xor
(bad)
jns
test
push
adc
adc
cmp
movs
pop
push
mov
jmp
retf
aam
outs
je
or
mov
xlat
push
pushf
dec
in
rol
in
push
or
imul
xchg
sti
cmps
push
jno
jnp
out
ins
arpl
jmp
adc
sbb
in
jb
mov
test
aad
in
std
out
pop
and
dec
in
jecxz
jns
add
cmp
scas
movs
in
or
out
lods
sbb
xlat
xor
mov
stos
adc
loope
mov
push
jmp
cmc
or
fisubr
and
mov
aaa
in
sbb
sub
mov
push
popf
scas
cs
mov
hlt
jmp
jmp
nop
in
or
loopne
outs
cmc
inc
xchg
jmp
dec
cld
push
mov
(bad)
xchg
or
add
mov
jp
sub
dec
mov
mov
dec
and
mov
test
adc
imul
in
int3
test
sub
jle
popf
in
mov
sbb
(bad)
cdq
pop
hlt
jmp
adc
popf
xchg
fidivr
xchg
xchg
aaa
pop
lahf
sar
cmp
dec
ss
retf
(bad)
mov
cmp
ror
test
imul
popf
push
arpl
jle
pop
inc
cmp
dec
shr
inc
mov
in
(bad)
gs
xor
dec
cmps
sbb
loope
dec
cmp
pushf
ficomp
test
xor
loop
jle
out
dec
add
mov
and
pop
stos
scas
or
pushf
xchg
xor
sar
ds
out
scas
movs
jmp
and
pop
ins
je
es
in
(bad)
sub
scas
call
push
shl
vpmacsdqh
sbb
mov
(bad)
add
cmp
nop
inc
push
cmp
adc
outs
xchg
jne
in
jmpw
pop
in
aam
adc
rol
adc
pop
mov
cmp
pop
push
sbb
mov
jno
xchg
aad
imul
mov
push
es
pop
cmp
popf
jnp
ret
push
dec
ins
adc
sub
push
shl
lock
lods
or
and
sub
int3
nop
jb
sbb
(bad)
jecxz
outs
(bad)
out
jns
jnp
ss
clc
cmp
push
fcmovnb
jo
fmul
sub
pop
cmps
sub
lods
jmp
jb
push
in
lods
popa
hlt
xchg
clc
call
rcl
lea
adc
mov
add
into
xor
sub
add
aas
cmp
mov
pop
in
or
int
jo
sub
add
add
scas
lods
cdq
dec
and
rcr
pop
dec
jo
lahf
push
inc
jo
adc
aas
int3
(bad)
mov
mov
push
gs
jmp
out
adc
add
outs
sti
js
pop
inc
mov
inc
xor
dec
ror
adc
xchg
sbb
aad
add
add
push
cmp
fidivr
leave
(bad)
loopne
mov
jge
push
cmp
ret
jae
ins
in
push
fnstsw
mov
push
jmp
retf
mov
mov
add
sbb
mov
jmp
pop
test
or
mov
(bad)
daa
(bad)
test
xchg
sahf
push
sbb
popf
imul
popa
push
cmp
pop
pop
sbb
lods
jl
retf
mov
jmp
xchg
leave
jle
or
mov
dec
or
je
cmp
pop
push
aas
pop
sbb
mov
mov
pop
adc
adc
aam
sub
fidiv
pxor
mov
mov
xor
in
addr16
lods
sub
push
sbb
aam
xor
fcom
iret
lahf
xchg
repz
mov
(bad)
fisubr
or
jle
lahf
push
xchg
mov
ja
cmp
cld
out
test
jl
or
adc
dec
jmp
dec
rol
sub
ror
outs
ret
ror
cmp
jnp
push
movs
mov
xchg
xlat
arpl
mov
stc
mov
or
loop
pop
imul
jae
xchg
rcr
(bad)
mov
mov
test
add
xchg
mov
sbb
xchg
popa
cdq
or
and
pop
ret
idiv
sbb
add
cmps
je
gs
fmul
jns
cmp
not
pop
inc
mov
adc
sub
imul
test
aad
xor
shl
sbb
jbe
mov
movs
inc
jmp
cdq
pop
push
cmps
js
mov
dec
sub
loopne
inc
in
fcmovne
push
pop
inc
je
scas
push
jae
push
out
repnz
add
sub
mov
adc
fbstp
lods
out
mov
inc
jmp
test
stos
or
call
dec
scas
int3
mov
cmp
fild
int3
jns
dec
push
not
fidivr
xor
mov
test
in
jns
push
xchg
push
xor
in
(bad)
cmp
aas
jge
push
enter
leave
loopne
add
dec
ins
in
sub
mov
pop
inc
imul
pop
or
jb
add
inc
(bad)
(bad)
loop
mov
push
shl
neg
outs
or
out
sar
xchg
es
mov
aad
fs
mov
test
adc
repnz
adc
dec
(bad)
pop
loope
mov
popa
sub
jmp
fild
repz
mov
je
cmps
sbb
xlat
and
jl
or
or
xchg
dec
ret
and
pop
or
or
fstp
xchg
lahf
sbb
adc
jo
rcr
mov
in
sub
inc
sub
dec
call
sar
test
imul
xchg
ins
dec
sahf
dec
xchg
add
aas
xchg
js
jnp
adc
mov
xchg
mov
sub
xchg
sbb
(bad)
retf
mov
les
outs
cmp
xlat
pop
xor
push
jecxz
sub
dec
pushf
xchg
cmp
aas
xor
popf
shr
sub
(bad)
leave
rcl
daa
ret
dec
inc
jnp
push
retf
sub
dec
mov
push
mov
inc
daa
and
fwait
leave
or
stos
mov
icebp
add
jbe
mov
test
setae
mov
jl
push
xor
bound
pop
loopne
jmp
mov
les
dec
cmp
xor
and
push
rcl
fiadd
(bad)
(bad)
nop
xchg
or
or
arpl
push
sub
push
dec
jp
test
(bad)
in
adc
push
sbb
adc
ja
repnz
(bad)
cld
mov
retf
xchg
lea
pop
cmp
fdivrp
int
fstp
xor
cmp
stos
data16
jp
add
in
shl
cmp
rcl
mov
xor
inc
mov
sub
call
std
mov
and
pop
and
push
(bad)
pop
sets
ror
sub
mov
aaa
hlt
ds
imul
ds
add
push
mov
adc
cmps
ret
pushf
out
dec
adc
push
js
push
and
mov
pusha
dec
xchg
fnstsw
jge
loope
sub
rol
test
popf
cmps
cmp
(bad)
inc
cmc
inc
mov
inc
cmp
repz
push
bound
push
jmp
sbb
call
lock
sbb
push
sahf
imul
call
into
add
stos
lock
icebp
sub
mov
test
popa
mov
cmp
push
mov
adc
(bad)
jle
inc
sub
pop
icebp
pop
cmc
mov
pop
cmps
cmps
out
cdq
push
dec
jecxz
or
jbe
les
scas
nop
rol
pop
pop
mov
xor
adc
pop
aad
sbb
xchg
loop
xchg
std
loop
jmp
xchg
sti
and
xchg
outs
sub
sbb
push
pop
or
ror
movs
pop
bound
popa
sbb
cwde
(bad)
sbb
ror
jp
xor
sbb
push
aam
lea
loop
xchg
add
pop
jne
iret
outs
sub
hlt
mov
adc
add
mov
repnz
in
and
cmps
jmp
ins
hlt
aam
dec
outs
add
test
mov
jmp
mov
adc
sbb
(bad)
jecxz
or
call
or
mov
addr16
nop
mov
sbb
cmp
jno
jne
or
call
jge
es
or
test
adc
in
add
daa
xor
call
(bad)
int
mov
fistp
inc
das
dec
push
pop
jns
fs
retf
jae
push
pusha
xchg
test
sub
adc
sub
cld
add
cmps
add
add
gs
addr16
adc
push
es
(bad)
dec
mov
jle
imul
sti
mov
(bad)
loop
dec
mov
call
clc
mov
mov
movs
adc
mov
rcr
push
ret
sub
adc
dec
ins
sub
mov
sbb
mov
jnp
push
sar
in
add
repz
lods
adc
push
sub
jle
test
js
jne
jns
icebp
das
push
pop
idiv
pop
and
or
pop
cs
push
ficom
dec
or
pop
xchg
imul
es
stos
stc
cmp
das
outs
mov
adc
push
lods
jge
dec
mov
jnp
repz
idiv
jo
mov
inc
add
imul
add
cs
xlat
mov
add
mov
xor
movs
fidiv
mov
retf
mov
jmp
adc
jb
add
shl
aam
lock
setno
mov
gs
fucomp
inc
lock
and
xor
xor
mov
dec
mov
and
xchg
hlt
sar
push
pop
cs
loop
das
fwait
mov
out
ret
add
dec
pop
lahf
cld
and
lods
nop
adc
and
mov
add
sbb
cmp
push
inc
and
pop
xor
test
fild
rcl
cmp
cmp
pop
jl
idiv
xchg
out
repnz
outs
fdivr
cdq
push
js
js
sub
push
dec
aad
das
rol
imul
in
retf
sbb
aam
add
sti
inc
cmp
lahf
and
je
mov
outs
pop
rcr
mov
(bad)
sti
ins
inc
adc
loop
lods
out
and
jp
sbb
dec
mov
loop
xchg
push
icebp
or
pop
xchg
jbe
mov
sub
lods
and
pop
(bad)
mul
sti
mov
push
cwde
push
xchg
and
mov
or
sub
or
out
dec
arpl
hlt
mov
or
sub
push
lods
std
mov
mov
mov
push
in
sub
xchg
xchg
leave
test
and
movs
dec
push
in
sub
sub
lods
add
ja
int
xor
mov
(bad)
jl
jmp
xchg
jmp
sub
cld
mov
retf
or
in
adc
mov
sub
jns
jmp
adc
add
mov
fdivr
test
or
mov
lods
mov
div
cli
jbe
adc
adc
retf
xlat
mov
fist
scas
inc
ret
in
sub
pop
sbb
js
sub
pop
loop
xchg
push
and
and
movs
xor
and
and
leave
pop
mov
xor
push
mov
outs
lahf
jl
scas
mov
(bad)
pop
leave
in
adc
push
and
and
mov
dec
popa
fadd
jl
and
pop
add
jnp
dec
fsub
or
push
pop
mov
jnp
sub
sub
(bad)
inc
push
push
stos
(bad)
(bad)
iret
dec
popa
fucomp
fidivr
es
jbe
aas
cld
or
and
lahf
pop
mov
xor
dec
pop
jmp
inc
retf
jbe
call
shl
mov
ficomp
or
addr16
lea
call
loopne
add
mov
inc
dec
pop
mov
lahf
leave
mov
dec
and
cmp
push
xchg
pusha
add
sbb
sbb
in
sbb
xlat
stc
std
sbb
dec
mov
gs
imul
mov
sub
lea
fdivrp
xlat
mov
sub
xor
rol
sub
mov
out
cld
sub
int3
pusha
retf
(bad)
popf
jle
cmp
jge
lds
sti
jg
xacquire
mov
das
mov
sub
add
mov
fdiv
stc
xor
dec
push
xchg
xor
fcmovbe
das
in
sbb
xchg
imul
jp
fild
aaa
in
sbb
mov
inc
test
lds
cmp
repz
retf
hlt
fwait
lahf
fadd
dec
iret
loope
push
(bad)
call
fmulp
and
test
fwait
sub
mov
pop
out
movs
cmp
or
adc
call
in
xchg
js
pop
pop
mov
es
and
add
sahf
inc
jb
pop
add
iret
mov
(bad)
shl
clc
xchg
out
lea
mov
sbb
mov
rol
fld
daa
dec
out
mov
adc
into
int3
das
mov
sbb
add
fsubr
rcl
or
xchg
sar
sbb
xor
bound
mov
dec
(bad)
sbb
das
cdq
push
sahf
out
mov
cmp
cmps
add
adc
xor
das
cmp
fnstsw
dec
int
pop
add
jmp
int
xor
dec
add
push
ins
enter
dec
cli
rcr
xchg
push
jg
xor
sub
push
push
push
jp
sbb
stc
adc
ficomp
jecxz
nop
jae
clc
ds
or
or
mov
inc
test
xchg
or
les
sub
cmp
sub
fs
aas
out
(bad)
dec
imul
cmp
or
dec
cli
inc
or
sar
lahf
jecxz
jno
mov
mov
add
jp
bound
sub
test
data16
jne
push
int
push
repz
jno
dec
mov
xchg
je
mov
push
pop
adc
int3
imul
jmp
add
outs
push
lahf
and
sub
pusha
pop
sbb
stos
(bad)
stc
add
dec
sub
cmc
push
jae
mov
sub
xor
xchg
mov
repnz
ja
fst
push
jp
sub
aam
ja
es
test
sbb
(bad)
jge
icebp
repz
jecxz
sub
dec
inc
jo
sub
mov
imul
dec
sbb
aad
lods
add
push
aam
jo
sahf
das
cdq
aam
shr
mov
push
test
loop
xchg
dec
popf
aas
clc
inc
sbb
outs
nop
mov
xchg
cli
mov
mov
hlt
pop
xchg
add
mov
jnp
(bad)
retf
or
push
addr16
sub
cmc
fst
jg
ficomp
pop
push
sbb
cmc
(bad)
outs
enter
mov
pop
sbb
(bad)
loope
pop
sub
inc
js
inc
test
sub
movs
adc
rcl
jbe
test
out
mov
mov
or
push
adc
mov
adc
sbb
aaa
and
jmp
inc
ror
add
loopne
iret
mov
sbb
dec
ds
popa
int3
jmp
add
mov
not
ss
cmp
(bad)
jmp
mov
test
mov
sub
ror
dec
push
ja
cmp
inc
adc
mov
sub
stos
mov
test
out
jno
xchg
nop
add
xor
jmp
dec
dec
repnz
mov
test
ins
add
pusha
cli
push
call
inc
mov
std
mov
inc
dec
fild
add
inc
fsubr
fwait
jne
ss
push
jbe
test
push
pop
add
add
push
scas
lea
ds
sub
daa
sub
lock
or
xor
pop
jecxz
pop
push
shr
loopne
adc
inc
sub
ret
xchg
cmp
movs
mov
lahf
into
and
inc
cmps
pop
mov
mov
jae
aaa
mov
(bad)
ja
or
(bad)
ins
pcmpeqw
xor
cmps
mov
mov
leave
fisttp
or
xchg
arpl
data16
sahf
mov
lea
sbb
jmp
leave
imul
in
mov
ds
fdivp
cmps
sbb
jg
stos
scas
mov
imul
ins
shl
sbb
test
push
mov
addr16
add
mov
add
loope
mov
lock
fadd
pop
fdiv
dec
add
xchg
push
jecxz
xchg
dec
or
jne
adc
adc
adc
mov
dec
out
loopne
in
push
(bad)
shr
sbb
in
jae
fisttp
call
sbb
cmp
and
cmp
stc
aam
das
mov
out
(bad)
loopne
stos
fs
fs
xor
imul
arpl
rol
daa
data16
fwait
call
arpl
imul
(bad)
repz
imul
pop
adc
loopne
arpl
jmp
int3
push
xchg
sub
adc
inc
ds
xchg
cmp
loopne
xor
in
or
jno
pop
hlt
rol
leave
gs
(bad)
pop
mov
je
mov
clc
xchg
sub
sbb
outs
push
add
int3
ret
jno
shr
mov
pop
aas
enter
aad
outs
shl
call
fs
aam
or
shl
dec
leave
jne
dec
mov
mov
xchg
sub
icebp
mov
cld
sub
push
inc
ds
fbstp
xchg
lods
(bad)
mov
adc
repnz
daa
inc
imul
ins
test
icebp
and
cmp
cwde
push
cmc
sub
fistp
mov
scas
outs
push
add
(bad)
std
mov
cmp
and
inc
push
call
gs
sub
call
lods
(bad)
lock
adc
mov
mov
or
outs
rcl
xchg
jae
push
iret
cdq
(bad)
jmp
jo
sti
pop
xor
cwde
fidiv
and
ret
shl
addr16
movs
jae
add
jae
scas
lock
xchg
dec
cwde
fmul
fstp
mov
xor
fst
movs
int
inc
icebp
pusha
cs
mov
push
std
xor
mov
inc
jo
xchg
hlt
inc
popa
movs
add
das
pop
push
(bad)
or
mov
ror
movs
popf
repnz
cmp
in
shr
fucom
add
xchg
add
sbb
dec
adc
sub
sbb
ins
mov
and
adc
shl
sbb
mov
cmp
sub
inc
pop
mov
call
mov
(bad)
lea
add
jle
outs
push
cs
out
push
imul
push
push
jbe
cmp
inc
mov
out
or
ret
stos
mov
sub
shr
popa
push
repz
mov
or
popf
adc
sahf
dec
mov
xor
pop
push
sub
mov
test
test
add
sbb
jecxz
xchg
add
cmps
cmp
adc
mov
fwait
pop
out
jecxz
adc
cli
lods
push
mov
ret
pop
xor
cmp
fs
and
int3
ins
cs
xchg
or
div
shl
out
pushf
mov
cld
and
(bad)
jle
xor
pushf
or
iret
inc
out
in
xor
repnz
in
or
mov
mov
push
ret
iret
mov
int3
scas
jns
sub
repz
sub
or
aas
loop
add
xchg
xor
test
jo
shl
hlt
mov
mov
sbb
sbb
mov
dec
retf
sbb
je
jge
fst
inc
loop
shr
ret
pop
pop
cmp
pushf
xchg
ficom
mov
aam
adc
sub
icebp
mov
cwde
mov
xlat
movs
sti
or
jle
shr
gs
or
xchg
je
lds
mov
lahf
pop
add
sbb
repz
inc
add
push
pop
ins
jmp
sbb
sub
and
test
das
stos
pop
loope
pop
pop
iret
imul
add
mov
jnp
aam
add
ret
jae
xchg
arpl
push
mov
sbb
xchg
stos
std
sub
mov
in
xchg
mov
mov
push
xchg
call
and
cmp
mov
aas
xchg
daa
fnstsw
push
test
hlt
push
push
scas
pop
test
push
dec
(bad)
scas
das
and
inc
and
xor
xchg
fxch
pushf
inc
add
aam
inc
cmps
addr16
adc
lds
push
pop
mov
jecxz
arpl
loop
sub
rol
mov
sub
and
or
cdq
ret
xchg
and
push
jbe
mov
sbb
pop
fdiv
imul
in
dec
pop
pop
retf
mov
pushf
daa
in
inc
sub
retfw
pop
mov
and
jl
dec
mov
sbb
pushf
sar
fbld
stos
push
mov
hlt
fmul
jecxz
in
cs
push
test
mov
outs
push
pop
cmp
shr
div
ins
(bad)
add
pop
shl
pusha
repnz
sti
sti
pop
outs
jnp
shl
mov
dec
and
or
repz
scas
jae
shl
fs
inc
xor
pop
add
jmp
push
sub
cmc
(bad)
add
shl
imul
imul
inc
aaa
shr
dec
or
cmp
sub
cmps
xlat
jmp
clc
and
jmp
and
and
(bad)
pop
shr
mov
call
mov
pop
aaa
rol
and
xlat
jecxz
enter
mov
xor
sar
xchg
jnp
or
cmps
push
xchg
mov
jns
dec
rcr
loopne
sub
xor
out
dec
pop
pop
mov
sbb
jbe
push
pop
sub
(bad)
xor
shl
sub
ja
dec
aam
xchg
xor
inc
pop
ss
cmc
mov
pop
jmp
mov
outs
push
and
das
inc
out
popa
jg
inc
cs
dec
scas
repnz
sub
sbb
aaa
(bad)
xor
push
retf
lods
test
fcmovb
pop
inc
and
andnps
enter
xor
idiv
adc
mov
rol
and
xchg
cmps
cdq
inc
push
xchg
xor
and
fdiv
es
aaa
movs
(bad)
jno
aam
sub
mov
adc
in
in
dec
jb
jbe
xor
sti
mov
xchg
inc
sub
push
push
dec
jo
xchg
call
xchg
out
jmp
jmp
mov
js
or
adc
imul
imul
dec
xchg
jns
xor
fcmove
pop
test
add
push
cmp
push
mov
dec
mov
or
xchg
daa
ret
pop
jbe
or
sub
xchg
pop
cli
cmp
xor
mov
call
js
cmp
xchg
pop
cmp
xor
jl
repnz
ficomp
out
jge
xchg
jns
(bad)
ja
jecxz
loopne
lods
sub
mov
mov
mov
imul
fdivp
and
in
sbb
and
mov
out
pushf
fwait
ror
dec
aad
xchg
lods
or
inc
add
push
and
daa
(bad)
out
mov
and
cmp
sbb
xor
movs
add
addr16
shl
xchg
popf
(bad)
std
push
(bad)
xor
sbb
xor
fisubr
outs
cmps
mov
cdq
mov
cli
imul
push
sbb
cwde
push
cmp
push
sbb
mov
fcmovnu
or
shl
inc
push
repz
arpl
lock
sub
dec
mov
sub
call
ficom
sbb
pop
xor
xor
cmp
and
test
mov
or
pop
movs
xchg
pop
es
out
js
and
iret
adc
dec
xor
mov
icebp
jecxz
cmp
fsub
mul
jg
movs
pushf
adc
shr
mov
test
clc
retf
ds
js
stc
in
shl
xchg
fisub
mov
dec
es
leave
add
push
cli
xchg
test
cmp
and
call
jae
neg
shl
xor
push
push
mov
xchg
aas
adc
fimul
aad
pop
stos
xchg
xchg
add
jmp
inc
test
test
push
xchg
ins
pop
fbld
mov
dec
movs
cmp
pop
adc
jo
rol
sub
xchg
cmc
pop
adc
mov
sub
addr16
xchg
mov
sbb
cmp
xchg
lds
cwde
test
ins
push
pop
ficomp
push
sar
pop
mov
or
push
call
ja
dec
fucom
mov
call
jae
imul
mov
adc
(bad)
retf
out
inc
sti
dec
cmp
je
sub
xlat
push
ins
test
int
js
add
pop
inc
cmc
imul
or
iret
neg
scas
dec
sar
fdivr
xor
pop
pop
add
fs
mov
add
(bad)
test
mov
popf
and
scas
vpmacssdql
fisubr
js
stc
push
ds
pop
inc
mov
pop
push
xchg
iret
addr16
in
push
xchg
loopne
dec
cmps
fild
xor
outs
out
mov
and
or
je
shr
xor
and
add
movs
push
mov
inc
fwait
bound
or
dec
arpl
pop
lods
sub
je
fistp
and
mov
add
push
jecxz
lods
ror
(bad)
mov
sub
and
repz
pop
push
add
inc
dec
mov
mov
test
inc
and
div
add
hlt
and
ja
std
outs
cmc
jecxz
xchg
std
mov
outs
dec
imul
xor
adc
sub
inc
fwait
xlat
push
shl
int3
push
sub
shl
and
sub
std
test
xor
scas
xchg
shl
pop
test
pop
cs
sahf
sub
jge
and
mov
or
mov
aaa
sbb
mov
push
and
sbb
not
add
add
int3
dec
adc
push
test
shr
ins
xor
xor
or
aaa
and
cmp
sbb
jnp
call
test
xchg
ds
push
mov
mov
ficomp
sub
pusha
inc
pop
sar
cld
pop
les
xor
push
pop
mov
push
into
or
or
xchg
call
adc
xor
test
dec
call
je
jbe
add
jnp
push
mov
daa
or
mov
cs
fstp
jno
movq
aas
outs
shl
(bad)
(bad)
xchg
or
and
xchg
push
js
sti
and
ror
inc
add
cmp
mov
xor
sbb
fld
jmp
movs
data16
gs
clc
movs
lea
and
mov
mov
and
rcl
xlat
ret
inc
std
loope
(bad)
stos
xchg
loop
cwde
pusha
out
out
inc
call
pop
xchg
add
cmps
add
test
jmp
jns
sbb
inc
jle
mov
sbb
or
bound
xor
mov
xlat
cli
neg
ret
adc
lods
jbe
pop
push
sbb
mov
mov
jbe
xchg
es
and
push
lahf
sbb
jb
xchg
lods
lods
imul
pop
sub
call
push
addr16
pop
sti
cmp
or
pop
nop
nop
stc
sub
jge
mov
pushf
in
inc
xlat
mov
shl
es
xor
jge
adc
fild
pop
ret
popa
pusha
inc
pusha
in
cmp
mov
mov
ins
pusha
rcr
sub
jmp
dec
retf
ror
push
push
sbb
test
sar
sbb
add
sahf
popa
push
cwde
(bad)
clc
adc
inc
iret
mov
inc
arpl
mov
std
sbb
daa
daa
mov
push
cmps
inc
add
inc
lea
sti
push
pop
add
pop
les
loopne
retf
popa
push
xchg
and
daa
cs
add
xor
inc
retf
stc
pop
add
jno
loopne
test
cmp
jno
jecxz
lock
or
movnti
clc
aaa
inc
mov
push
mov
test
or
ds
xor
in
or
mov
stc
add
cmc
mov
test
jle
add
ja
das
jne
push
mov
inc
xchg
in
xchg
mov
pop
mov
xchg
rol
int
das
lea
sbb
icebp
xor
mov
push
pop
and
add
jmp
call
mov
stos
add
push
push
jb
jle
jl
sub
mov
inc
xor
ficom
pop
dec
popf
jge
jo
mov
push
push
(bad)
(bad)
mov
dec
jo
add
test
iret
pop
lods
jmp
retf
fild
or
dec
mov
sbb
sbb
jae
adc
and
les
cmp
mov
jmp
sub
in
movlhps
xchg
or
and
scas
bound
aas
xchg
jp
or
cdq
cmp
dec
cmps
jbe
pop
pop
popa
and
fbld
setnp
lods
das
shl
bound
add
outs
dec
loop
jbe
adc
shl
jnp
xchg
scas
ss
dec
mov
pop
sub
fst
sub
adc
aas
icebp
push
xchg
mov
dec
movs
add
enter
push
add
pop
xor
jno
fcomp
pusha
cmp
add
pop
pop
stos
push
popa
dec
stos
push
popf
sub
arpl
jg
into
mov
mov
xchg
and
dec
or
jmp
gs
and
jmp
stos
pop
mov
shl
fwait
xor
sub
cmp
mov
mov
dec
add
stos
and
xchg
mov
mov
call
fst
jb
push
dec
aam
loope
mov
push
push
inc
inc
addr16
dec
nop
or
popf
out
std
adc
sub
xchg
test
and
cmp
mov
movs
inc
in
mov
daa
add
ins
into
int3
or
ja
pop
inc
in
and
stos
ret
push
cli
add
jnp
ror
mov
mov
stos
dec
xchg
sti
ret
fwait
mov
jae
adc
ja
xchg
adc
jbe
push
std
cmp
out
mul
inc
(bad)
dec
retf
inc
ins
fldz
loop
call
cmp
or
movs
jecxz
sbb
out
bound
addr16
leave
mov
sbb
pop
push
call
dec
mov
fcomp
push
arpl
ja
sar
int
jg
inc
test
push
pop
push
icebp
add
mov
ror
push
ret
je
fild
es
mov
mov
or
rcr
mov
popa
jb
out
je
xchg
add
pop
mov
inc
aaa
push
test
nop
xor
pusha
stc
xchg
jmp
clc
and
in
cmp
mov
pop
adc
push
push
lock
mov
or
add
out
add
(bad)
jo
xlat
je
dec
xchg
cmc
in
adc
aaa
call
sub
xor
xor
cmp
icebp
call
je
mov
mov
pop
fbstp
xchg
sub
in
xchg
xchg
push
into
push
ja
jae
mov
rol
cli
push
into
jne
dec
xchg
or
ret
ficom
(bad)
fwait
repz
dec
inc
call
lods
inc
mov
push
movs
mov
outs
mov
jmp
pusha
jb
addr16
test
push
das
jle
push
dec
push
inc
or
push
pop
out
dec
xor
test
scas
in
adc
or
imul
jle
outs
ja
dec
lock
xchg
not
and
retf
push
outs
rcl
js
shr
in
push
push
call
leave
arpl
push
xchg
jge
sbb
push
pop
or
dec
adc
xchg
stos
mov
dec
std
dec
and
adc
xor
or
popf
ins
sbb
(bad)
pop
lock
js
push
popf
loop
popa
pop
inc
lahf
pop
(bad)
jp
fbld
imul
lock
inc
ds
or
pusha
or
push
and
retf
cli
and
scas
outs
jbe
mov
mov
jb
adc
popf
mov
add
jecxz
mov
jmp
and
cmp
dec
or
sbb
repnz
xor
das
ja
and
mov
dec
xor
in
lods
push
ret
and
mov
les
mov
pop
loope
icebp
ja
or
pop
push
rcl
(bad)
stos
mov
loope
xor
cmps
in
imul
mov
(bad)
xlat
jmp
in
add
das
xchg
jmp
and
out
fdivr
sbb
inc
ret
mov
push
pop
cdq
pop
ret
lea
adc
xor
stc
js
es
mov
aad
jge
fist
mov
sbb
rcl
and
(bad)
enter
push
std
out
lods
mov
adc
mov
cld
mov
dec
jp
imul
jl
push
scas
lea
and
jmp
pop
in
push
dec
jmp
cli
cmp
pushf
ja
inc
pop
fucomp
aam
dec
ins
xchg
sbb
and
ins
mov
hlt
loopne
dec
mov
test
sti
jmp
cli
pop
pop
push
mov
fs
sub
mov
or
bound
lahf
pop
out
pusha
xchg
shr
bound
sub
test
cs
adc
inc
shr
cmp
pop
clc
mov
lds
cmc
mov
fistp
mov
or
push
call
mov
stos
ret
data16
aad
or
rcr
aas
dec
pop
mov
push
jo
or
sbb
cmp
sbb
in
and
sbb
mov
mov
das
stc
cli
rcr
ret
aaa
sbb
jecxz
xchg
retf
jg
or
lods
mov
fdivr
pop
or
push
jne
mov
dec
ret
and
arpl
clc
(bad)
mov
push
and
je
rol
imul
je
add
dec
ins
fld
(bad)
cli
jnp
cmp
ficom
or
(bad)
ja
push
aam
and
call
pop
rcl
repnz
xchg
fcmovb
sub
jbe
inc
xchg
or
pop
les
popa
push
xor
ss
(bad)
les
(bad)
pop
inc
je
push
retf
scas
or
and
mov
sbb
leave
jge
lods
lock
scas
std
jmp
add
mov
xchg
mov
xchg
xchg
push
mov
jbe
shl
fucomp
inc
or
mov
push
and
xchg
je
jle
jmp
add
(bad)
or
dec
xor
test
or
sub
push
dec
cli
je
add
adc
retf
sub
std
adc
ins
test
ja
sbb
sbb
jb
sub
push
sbb
jecxz
cli
sbb
sbb
call
pop
ins
push
mov
ret
cmp
jo
dec
aam
dec
adc
adc
loope
inc
jp
xor
inc
and
test
mov
jl
pop
dec
xor
push
loopne
mov
and
mov
or
xor
cli
pusha
and
xor
retf
mov
mov
pop
or
pop
gs
es
fcom
mov
mov
ds
mov
push
adc
lds
mov
and
or
cmp
mov
push
pop
inc
jmp
xchg
cmp
pop
imul
into
and
outs
jns
stc
jnp
mov
pushf
cs
sub
frstor
xlat
inc
shr
add
daa
dec
push
jg
sbb
xchg
mov
dec
sbb
sbb
loope
mov
dec
xchg
lahf
aas
xlat
ret
pushf
imul
dec
or
lahf
push
mov
icebp
aad
sahf
and
cmp
sbb
lea
xor
jecxz
mov
cmps
inc
imul
(bad)
xor
je
dec
push
pop
and
push
push
inc
add
not
mov
xlat
mov
mul
fbld
jle
inc
stos
or
xchg
or
(bad)
idiv
jne
cmp
hlt
push
add
std
mov
bound
jno
aaa
dec
test
movs
in
hlt
sti
ret
sti
mov
bound
jbe
push
stos
not
sbb
daa
outs
jmp
dec
aam
imul
movs
les
fwait
jmp
enter
mov
loopne
addr16
mov
jbe
sbb
or
out
into
iret
in
test
xor
loop
push
jae
xchg
ins
ins
mov
add
and
pop
inc
xor
mov
push
sub
or
bt
repnz
icebp
xchg
(bad)
cmp
and
adc
cmp
xchg
sbb
in
xor
add
stos
pop
jne
push
push
imul
dec
nop
repnz
jge
mov
sub
mov
cs
out
retf
jl
into
pop
push
pop
add
aam
fcmovnbe
inc
xor
div
aaa
or
ja
clc
jle
push
inc
cmp
jb
out
xchg
push
cdq
mov
mov
inc
aad
lds
ins
mov
pop
and
sti
cs
arpl
dec
inc
call
push
sti
cmc
sar
test
dec
jnp
(bad)
pop
add
add
shl
mov
aas
mov
dec
push
mov
fcom
push
stc
mov
jg
pop
cmc
xlat
inc
mov
int3
retf
js
jae
sbb
push
retf
in
push
inc
pop
out
(bad)
mul
xchg
xchg
inc
dec
scas
leave
mov
add
adc
push
sbb
xchg
ins
pop
jns
clc
out
mov
test
mov
sub
cmp
lock
scas
xor
arpl
sbb
scas
fbstp
jp
sbb
idiv
ja
std
retf
or
push
scas
xor
test
cmc
or
add
rcr
sbb
mov
mov
ret
(bad)
jle
xchg
sub
(bad)
fmulp
ret
stos
push
pop
mov
jns
leave
mov
adc
mov
outs
out
ins
mov
adc
push
dec
and
mov
mov
stos
daa
sub
ret
fisttp
jl
adc
mov
push
imul
es
cmp
sbb
add
jns
mov
sbb
sar
ins
nop
aas
inc
cmps
jmp
iret
mov
cmps
xchg
daa
sahf
sbb
cli
push
repnz
dec
stos
mov
jp
dec
popf
xor
ins
iret
stos
(bad)
pop
push
mov
repnz
cmp
mov
test
mov
add
jp
inc
sbb
jno
add
add
test
cs
fsqrt
push
inc
add
cmp
in
xor
mov
pop
push
ja
xchg
cmp
mov
jnp
repnz
dec
cs
xchg
and
cmp
fucomi
loopne
sub
or
shr
(bad)
mov
mov
mov
xchg
dec
xchg
xchg
mov
sub
mov
mov
inc
push
pusha
inc
out
jb
push
mov
rcr
sub
or
das
mov
cwde
push
ror
shr
cmp
mov
inc
aas
stos
push
or
pusha
cli
cli
out
and
inc
push
dec
mov
sbb
ret
stc
rcl
sub
inc
addr16
jmp
fadd
or
xchg
repnz
or
mov
sbb
mov
out
mov
into
cmps
out
xchg
pop
out
test
pop
jmp
adc
retf
mov
inc
stos
sti
jle
sbb
xchg
loopne
sub
xor
imul
pusha
push
xor
fcomi
mov
mov
mov
js
js
adc
enter
pop
mov
loop
adc
rcr
lods
mov
cmp
(bad)
mov
cli
test
push
dec
int3
aad
or
mov
repz
push
popf
fstp
lods
lods
fs
test
cld
fimul
sbb
ja
sbb
loopne
dec
pop
les
or
iret
imul
hlt
inc
add
ja
jne
push
aaa
fidiv
imul
cmp
into
cmp
pop
jge
mov
mov
cmps
inc
dec
xchg
pop
lea
or
pop
xchg
jne
mov
popa
aam
jl
xchg
cmp
loope
popf
mov
test
dec
out
loope
push
dec
ret
cmc
add
out
dec
xchg
push
mov
sub
movs
ja
lea
arpl
mov
dec
lahf
cwde
imul
into
lock
out
in
scas
dec
add
lds
(bad)
(bad)
test
fisttp
ds
pop
fidivr
mov
xor
hlt
fnclex
push
push
push
stc
es
inc
dec
mov
icebp
jge
aas
sahf
repz
mov
ror
hlt
push
cmps
loopne
fimul
add
retf
mov
aad
sub
or
and
cld
adc
adc
(bad)
iret
lods
inc
(bad)
mov
or
jbe
add
jns
sbb
inc
scas
xchg
pop
pop
push
jecxz
sub
rcr
repnz
adc
pop
js
push
cmp
xor
dec
ins
push
mov
push
inc
sbb
mov
push
dec
out
in
sub
push
cwde
and
push
inc
dec
mov
push
xor
test
fdivp
pop
adc
test
out
daa
jge
(bad)
shl
(bad)
packsswb
mov
pop
jmp
xchg
les
jb
mov
adc
repz
aad
mov
xchg
jne
das
adc
cmp
aad
ror
aaa
mov
mov
xor
mov
cmp
mov
xchg
adc
mov
ins
pop
lea
mov
pushf
dec
lea
push
and
adc
outs
rol
pop
jmp
call
push
adc
xchg
repz
cli
(bad)
popa
int
cmp
mov
movs
test
stos
fisttp
xor
aad
mov
push
cli
xlat
mov
jns
jmp
adc
or
and
je
mov
push
cmp
xor
pop
shr
bound
dec
or
call
lods
outs
bound
neg
addr16
jno
outs
xchg
dec
adc
cmps
pusha
pop
push
(bad)
(bad)
mov
out
jmp
dec
fld
xchg
idiv
mov
neg
mov
push
pop
in
xor
test
mov
xor
scas
push
inc
push
(bad)
into
pop
or
cmp
sbb
jg
ret
mov
lods
and
call
(bad)
aam
xor
pushf
xchg
stc
(bad)
ja
int
mov
jb
push
sub
cmp
sbb
das
jle
aaa
dec
jp
mov
adc
hlt
cmp
push
or
mov
in
nop
pop
sub
or
mov
js
jle
in
mov
hlt
test
clc
or
inc
jbe
fcomp
mov
or
xchg
das
(bad)
xlat
test
pop
fcomp
jbe
clc
push
test
aad
jmp
cmp
retf
push
lahf
scas
pop
dec
mov
push
out
shl
mov
addr16
lds
cs
test
mov
(bad)
jmp
cmp
jno
xchg
or
push
leave
sbb
push
sub
xchg
xchg
and
dec
nop
cmc
mov
xchg
scas
test
retf
stos
pop
dec
xor
fld
rcl
das
mov
xor
jl
pop
adc
mov
pop
aad
xchg
outs
add
pop
retf
sahf
and
outs
loopne
or
sub
sub
pop
(bad)
xlat
inc
dec
popf
adc
xor
mov
cmp
daa
jns
jp
mov
sbb
fldcw
(bad)
jo
sti
mov
jns
aas
shr
dec
push
repnz
sub
jnp
movs
cmp
(bad)
jno
rol
rcr
into
add
add
sub
stc
xchg
outs
jmp
cmps
jl
jmp
in
pop
lock
arpl
mov
das
xor
cmps
xchg
shl
test
sbb
(bad)
jecxz
push
xor
push
in
stos
(bad)
sub
(bad)
sti
cli
retf
add
stos
aas
push
loopne
cmp
xor
stos
aas
push
jmp
in
xchg
fwait
or
ret
aam
adc
fsub
fild
sti
cdq
sbb
daa
pop
xor
(bad)
(bad)
xchg
push
and
mov
shl
xor
mov
ret
arpl
and
sbb
mov
movs
mov
sbb
icebp
ins
outs
scas
xchg
add
loop
loop
enter
push
(bad)
inc
(bad)
rcr
in
mov
push
inc
cld
inc
mov
scas
jg
out
or
pop
popa
sbb
outs
mov
dec
jecxz
fistp
jecxz
mov
jo
sahf
shl
pop
push
add
outs
pusha
adc
cs
adc
mov
rcl
stc
or
lahf
sub
ss
popw
movs
or
push
(bad)
jb
adc
imul
rcl
ret
in
xchg
push
mov
sti
and
mov
stc
out
test
loope
enter
mov
mov
xchg
retf
mov
push
sub
or
jns
mov
jmp
loopne
jns
jp
mov
rcr
(bad)
mov
mov
xor
int3
in
sbb
push
stos
jge
repz
cmp
sub
loop
inc
mov
mov
and
push
add
mov
stos
movs
mov
push
(bad)
push
daa
hlt
sbb
mov
call
cld
fdivr
shl
sub
mov
jno
and
and
mov
repz
ror
into
mov
cmp
ror
push
mov
sbb
js
mov
(bad)
xor
arpl
dec
dec
addr16
gs
xor
lahf
ror
mov
movs
fucomp
in
fisub
sub
push
daa
and
movs
test
inc
js
cmp
lods
push
or
ror
ins
cmp
jp
or
add
xchg
ja
movs
and
aas
or
or
xor
mov
xchg
push
ficomp
fisttp
(bad)
mov
mov
arpl
test
xor
test
bound
call
jle
sbb
mov
dec
loop
mov
inc
bound
add
add
pop
push
adc
shl
ret
adc
repnz
call
inc
inc
sbb
mov
ret
icebp
call
sub
movs
dec
xor
jge
das
dec
dec
sbb
jbe
ins
and
and
mov
loopne
and
inc
pop
mov
loope
int
je
popf
lods
xchg
call
scas
sub
pop
cld
popf
add
lods
inc
mov
and
add
cwde
rcl
mov
inc
mov
icebp
hlt
icebp
jge
int3
mov
stos
add
dec
div
pop
jge
cmp
addr16
sbb
sbb
ss
mov
mov
outs
pop
or
sub
pop
add
and
bnd
jge
stos
std
mov
jle
mov
mov
mov
gs
popa
cmp
rol
test
test
mov
(bad)
shl
call
loop
out
pop
inc
pop
data16
(bad)
outs
mov
ficom
leave
pop
and
jmp
daa
jb
in
out
or
sub
dec
mov
fwait
leave
lea
int
dec
sbb
xchg
mov
and
sub
push
addr16
xor
jno
sub
push
js
fidivr
mov
mov
cli
into
sub
outs
int
jae
jmp
aam
mov
jne
jne
xlat
test
mov
ss
stc
jo
test
sar
je
adc
repnz
push
cwde
daa
and
sti
xor
test
push
mov
xor
push
xor
addr16
jae
push
cmps
jmp
sbb
mov
mov
jmp
inc
pop
lahf
and
xor
jae
sbb
scas
jbe
rol
mov
rcl
call
fwait
mov
lods
cmp
lahf
out
retf
cmp
or
popa
adc
fwait
add
popf
jle
push
sbb
rcr
inc
repz
mov
retf
or
das
fsubr
jne
cmp
ins
push
xor
rol
fs
push
jne
repnz
mov
stos
ficom
dec
xchg
pop
mov
mov
cmp
dec
scas
pop
outs
sub
das
mov
int3
mov
cld
sub
pop
mov
je
jmp
fadd
mov
cli
mov
lods
shl
out
mov
sbb
jge
jp
out
cmp
(bad)
mov
mov
add
mov
cld
pop
rol
lahf
pop
ficomp
movs
int3
mov
movs
data16
sub
ins
data16
imul
(bad)
pop
jle
leavew
ins
mov
shl
rcr
dec
cmp
int3
mov
inc
mov
sbb
mov
add
xlat
in
or
mov
daa
mov
fiadd
ins
shl
cwde
ror
test
stc
or
cmp
aad
fidivr
pusha
xor
popa
push
cmps
fs
inc
jmp
mov
repnz
gs
lods
pusha
sbb
test
cwde
mov
stos
popf
cmp
fucomi
add
xor
add
pop
sbb
aas
inc
icebp
fisubr
ins
pusha
out
push
sbb
sbb
add
jmp
cwde
adc
pop
inc
sbb
je
sub
mov
dec
aad
scas
xchg
push
xchg
int3
push
mov
rcr
hlt
(bad)
inc
add
loopne
cwde
ret
ins
ror
fisubr
lock
fdiv
dec
sbb
inc
jne
aaa
div
add
std
lock
mov
rcr
dec
fisttp
mov
movs
(bad)
pop
xor
mov
jecxz
mov
bound
inc
cmps
pop
sbb
repz
imul
loop
push
mov
mov
fcmovu
and
test
mov
sti
imul
lods
call
int
push
pop
ret
inc
or
icebp
inc
cmps
(bad)
inc
or
adc
xor
test
inc
mov
fldenv
imul
push
cmps
xor
sbb
imul
in
adc
push
dec
inc
iret
rcr
mov
pop
pop
or
test
cmp
inc
dec
(bad)
push
mov
fs
shr
sub
ins
cmp
cwde
xchg
repnz
jecxz
stos
mov
or
movs
popa
scas
mov
dec
sbb
and
jp
ficomp
sub
cmps
mov
sub
test
sbb
mov
add
push
xchg
jns
cli
int
xor
add
push
mov
adc
cmp
bound
push
lds
xchg
int
inc
push
leave
mov
retf
test
mov
aam
sbb
xor
push
sbb
ja
mov
mov
aas
ret
data16
xchg
add
or
or
(bad)
int3
push
test
retf
stos
sahf
retf
cdq
jmp
jge
mov
jge
pop
movs
xor
mov
mov
cmp
repnz
add
daa
adc
data16
or
jae
or
mov
in
scas
repnz
inc
jmp
sub
sub
push
jmp
daa
int
cmps
loopne
test
loope
adc
mov
sub
pop
jns
mov
pop
pushf
mov
dec
rcr
dec
int3
pop
aaa
jb
pushf
mov
sahf
rcr
pop
sti
adc
or
add
ret
sub
push
inc
dec
inc
bound
adc
cli
ficomp
sub
push
cmp
mov
sub
cmp
lock
push
jmp
ret
dec
mov
xchg
or
fimul
sub
ja
loope
mov
fnstcw
sub
push
and
(bad)
mov
inc
jbe
xchg
or
sub
push
pop
push
cmp
mov
iret
je
dec
les
jecxz
push
loopne
daa
pop
(bad)
pmullw
fwait
sbb
ret
in
fwait
rcl
pushf
add
push
cmp
pop
inc
call
(bad)
jno
test
push
add
and
pushf
inc
fmulp
sub
push
mov
or
mov
out
push
jne
and
sar
jo
repz
pop
scas
retf
or
inc
sbb
xor
jmp
movs
cli
nop
in
inc
fwait
push
or
or
mov
push
adc
dec
fimul
das
push
xchg
cli
or
jmp
arpl
lods
add
mov
sbb
sbb
into
sub
sahf
sub
lods
repz
lock
dec
inc
in
cmc
cmc
cmps
add
mov
into
ja
(bad)
popa
mov
dec
mov
pop
scas
push
mov
lods
pop
push
fs
data16
pop
retf
test
or
jmp
cmp
vmulss
push
inc
xlat
es
cdq
fs
into
jno
retf
push
in
sbb
pop
jo
nop
push
out
in
repnz
retf
and
push
push
fxch
test
mov
pop
sbb
int
xchg
push
adc
pop
dec
rcr
mov
aaa
pop
jl
dec
ins
add
scas
add
adc
cmps
inc
sub
dec
cmp
icebp
sbb
in
aas
in
push
dec
shl
xchg
mov
mov
mov
scas
rcr
dec
xor
nop
xlat
loopne
icebp
add
add
push
pushf
jns
xor
(bad)
jae
(bad)
jecxz
sbb
adc
aas
pop
pop
mov
dec
pop
inc
ja
sub
jecxz
ins
sbb
imul
clc
(bad)
cdq
(bad)
cli
test
mov
jno
and
lock
mov
loope
outs
mov
arpl
jae
lods
mov
mov
shr
js
std
mov
dec
or
push
bound
xchg
mov
es
push
pop
(bad)
xchg
js
dec
shl
sub
out
mov
aad
cmp
repz
add
pop
int3
push
inc
xchg
outs
mov
fmul
cmp
xchg
jb
les
outs
inc
jo
pop
iret
sub
cmps
mov
mov
aaa
mov
into
imul
push
xchg
jne
bound
(bad)
adc
daa
stc
les
inc
jge
and
mov
cmp
dec
out
pop
shld
cli
xchg
in
sub
xor
mov
jl
icebp
imul
pop
or
pop
mov
xlat
xchg
pop
or
(bad)
mov
push
mov
ficomp
push
push
push
mov
pop
stos
push
fs
xor
cmp
jnp
pop
fidivr
and
cdq
ds
xchg
adc
pusha
jno
jmp
stos
dec
fnstsw
les
loop
fs
sbb
ss
jbe
xor
(bad)
adc
test
fdiv
retf
fwait
aas
xor
mov
loop
xchg
xor
fisub
mov
fstp
hlt
jl
cmps
or
hlt
cld
jmp
sbb
(bad)
cmp
ds
mov
mov
and
pop
in
push
push
pushf
inc
pop
stos
cli
imul
mul
jmp
jno
pop
dec
lods
push
(bad)
push
std
push
stos
pushf
jg
test
int3
int
aas
test
push
lea
dec
xor
ret
imul
rcr
sub
sub
pop
mov
or
xchg
jo
test
cmps
mov
or
push
je
popa
(bad)
call
xor
into
push
jmp
inc
leave
mov
shl
(bad)
(bad)
pop
pop
dec
inc
and
pop
sbb
or
dec
add
mov
inc
dec
(bad)
jnp
sub
adc
mov
repnz
xchg
jne
and
xchg
mov
xlat
pop
mov
and
clc
lahf
(bad)
jmp
mov
es
push
and
int
pusha
ds
xlat
jmp
push
test
sub
dec
(bad)
aad
mov
add
cld
cmc
sbb
push
or
mov
imul
outs
jg
xchg
mov
out
xchg
shl
mov
pop
movs
xchg
sub
and
mov
mov
call
cs
cli
sub
int
push
xchg
das
sbb
frstor
pop
sub
or
cmps
fisttp
pop
pop
test
(bad)
scas
hlt
test
mov
xchg
das
outs
fcomp
jge
clc
dec
mov
push
push
or
jns
adc
dec
rcr
mov
pop
std
mov
xchg
addr16
pop
xor
call
std
or
call
not
mov
mov
fcom
mov
xchg
arpl
mov
popa
mov
add
or
xor
dec
jmp
daa
dec
scas
adc
cs
cmp
(bad)
popa
stc
loope
lea
cmps
jnp
jge
cmp
dec
fsub
mov
jns
hlt
mov
cmp
cmp
pop
cmp
enter
sbb
std
test
inc
cdq
jo
cmp
div
sar
adc
jmp
dec
xchg
add
mov
enter
push
paddsb
repz
int3
(bad)
mov
mov
xchg
push
sub
loop
fnstenv
add
popa
add
mov
cld
test
pop
or
hlt
mov
xchg
cmps
aam
pop
out
dec
mov
js
je
inc
cdq
or
push
scas
mov
loop
inc
inc
adc
mov
add
(bad)
(bad)
lea
jge
outs
loop
pop
int3
xchg
sbb
dec
and
dec
iret
setnp
cmp
movzx
lods
or
or
scas
mov
mov
shl
jle
rcr
pop
lea
pop
test
in
lock
dec
xchg
inc
and
add
sbb
adc
mov
gs
test
ror
imul
imul
aad
lods
pop
fnstcw
pop
hlt
xchg
pop
dec
xor
inc
push
sbb
cmp
and
add
loop
pop
sbb
inc
or
jae
mov
dec
xchg
dec
xchg
mov
shr
mov
dec
sub
hlt
push
jp
lods
mov
add
jnp
sahf
fisub
xor
inc
pop
dec
call
sub
clc
fs
push
sahf
pop
scas
addr16
jecxz
dec
mov
retf
add
leave
cmc
jl
(bad)
(bad)
gs
fwait
sub
(bad)
(bad)
sub
mov
or
call
popa
and
inc
xchg
aad
sub
push
and
lds
data16
or
in
repz
mov
cmps
fs
add
ror
pusha
push
xchg
xchg
sub
rol
sahf
sub
mov
adc
pop
push
xor
cmps
retf
cli
push
lods
bound
and
lahf
repnz
xchg
and
xor
(bad)
retf
in
test
je
inc
cmc
fs
out
aas
sbb
(bad)
ins
sub
adc
and
ja
cmps
add
pop
or
mov
push
lods
mov
das
dec
dec
(bad)
cmp
adc
cdq
mov
adc
or
fidivr
daa
and
pop
and
(bad)
mov
sub
mov
dec
mov
ss
xchg
ins
stc
cdq
inc
jg
cmp
push
fidivr
jp
stc
jp
dec
push
xchg
pop
loopne
or
fmul
pop
rsqrtps
ss
pop
stos
add
jo
lds
xchg
lahf
xchg
and
jl
push
mov
inc
push
in
neg
(bad)
icebp
retf
repnz
jp
ficom
mov
ss
xor
into
and
mov
iret
mov
dec
shr
aad
pop
jge
fs
test
bound
add
aam
pushf
inc
mov
jo
mov
or
ins
int3
in
data16
clc
inc
cmp
or
into
fist
mov
xchg
push
mov
xor
mov
dec
out
out
sbb
add
(bad)
mov
adc
mov
pop
push
and
jno
cdq
and
mov
adc
cmp
jb
leave
leave
xchg
out
dec
or
cmp
jecxz
jb
shl
xlat
lds
and
xchg
ror
pop
and
popa
add
cmp
fistp
sub
push
sahf
cli
ret
mov
push
jmp
pop
stos
shr
jmp
push
push
xchg
lahf
jne
add
pop
push
repz
xchg
xchg
aam
mov
adc
pop
movs
mov
cmc
mov
dec
mov
sub
mov
cmps
retf
not
ss
inc
loope
sub
call
jne
adc
sbb
aad
jns
cmp
mov
rol
stc
xchg
push
cwde
les
push
movs
cmp
lds
shr
mov
call
pop
mov
fisttp
mov
mov
sub
imul
sub
out
xchg
inc
out
cdq
rcr
int3
lods
inc
mov
xchg
in
retf
mov
mov
addr16
adc
push
and
mov
(bad)
sub
inc
xchg
mov
add
lahf
cmps
mov
cmps
xchg
pop
mov
dec
xor
lea
xor
fcmovnb
retf
push
mov
lds
shr
cmp
data16
sahf
(bad)
call
loop
add
mov
xchg
in
xchg
lods
and
push
int
(bad)
push
fwait
mov
inc
pop
add
fst
repz
and
push
or
nop
lahf
sbb
push
pop
fwait
jo
xchg
das
sbb
add
mov
test
scas
mov
loopne
je
retf
add
xchg
mov
sub
fidivr
scas
js
(bad)
addr16
aad
jecxz
arpl
out
push
push
std
inc
in
sub
dec
pusha
cmp
xchg
lds
(bad)
xchg
cmp
sbb
fs
adc
in
mov
pusha
outs
pop
or
push
imul
jge
xor
jns
scas
add
rcr
dec
push
cmp
sbb
fsub
inc
(bad)
out
and
gs
or
aad
or
iret
mov
dec
sahf
(bad)
fld
lods
lock
shr
bnd
lock
sbb
mov
push
int3
popa
nop
xchg
mov
shl
jge
hlt
ret
ret
out
lods
and
movs
cmps
or
hlt
jge
mov
sahf
xlat
sub
pop
jge
adc
mov
xchg
push
sti
(bad)
fadd
stos
cmps
js
dec
ja
ficom
inc
fwait
aam
lahf
rol
enter
es
and
cli
fnstenv
adc
pop
push
scas
retf
xor
lods
gs
xor
sub
mov
jmp
loop
rcl
or
ficomp
cmp
scas
mov
data16
dec
jbe
and
jo
xchg
add
outs
and
add
and
lahf
loopne
retf
sar
in
mov
out
je
or
pmulhw
and
push
(bad)
sbb
push
das
adc
or
gs
in
cmp
pop
aaa
ds
fcmovnbe
xor
aas
mov
mov
aas
xchg
push
pop
idiv
xchg
mov
out
jne
push
arpl
mov
pop
lahf
inc
jne
movs
pop
lock
push
aas
cmp
pop
test
test
xchg
pop
mov
cmps
mov
mov
mov
lods
mov
cmp
jne
inc
jae
aam
movs
sbb
or
jl
add
xchg
pusha
test
in
inc
pop
dec
stos
clc
sub
pop
call
jmp
jmp
movs
pushf
outs
es
sbb
les
sub
jg
scas
es
repz
or
xor
mov
sub
ins
xchg
stos
pop
loop
add
paddd
sbb
mov
loope
cli
push
fucomi
cmp
jmp
cld
pop
xchg
scas
adc
fadd
fdivp
fwait
xchg
push
scas
repz
mov
icebp
mov
(bad)
pop
inc
jae
push
adc
test
jb
popa
in
push
lahf
in
push
dec
movs
pop
repz
cmp
aas
ja
inc
loope
call
mov
scas
push
shr
rol
push
xchg
neg
jns
aad
xchg
mov
icebp
add
fs
jns
or
mov
outs
mov
jg
fs
mov
adc
sub
int
sub
rcl
jns
lods
push
mov
out
or
xchg
ds
cmp
mov
test
sar
xchg
in
(bad)
ficomp
js
push
and
mov
in
neg
loop
jmp
fbstp
daa
cwde
in
add
or
loop
xor
and
std
and
test
daa
push
pop
jb
mov
js
push
test
(bad)
je
ds
xor
das
inc
sbb
(bad)
xchg
mov
rcr
nop
les
js
jne
mov
(bad)
shl
sbb
addr16
xchg
adc
sar
and
mov
pop
gs
outs
xchg
cli
adc
in
inc
pop
push
mov
mov
add
das
jbe
and
xchg
(bad)
popa
in
mov
sti
mov
push
sti
stos
sub
lds
push
push
fcom
or
or
ins
add
jg
xchg
lds
jne
and
popa
jl
nop
repz
stos
scas
pusha
fild
call
or
pop
std
in
cmps
fidiv
or
ins
sahf
rcl
inc
xchg
inc
push
dec
dec
inc
inc
repz
adc
or
movs
mov
add
dec
loop
in
pop
jne
loope
in
ins
ins
std
mov
into
xchg
test
lods
mov
cwde
mov
xchg
stos
cmc
mov
es
adc
push
xchg
sti
xchg
jno
cwde
(bad)
into
aaa
and
nop
ins
leave
or
outs
adc
mov
mov
stos
je
pop
lods
test
xchg
ins
inc
add
mov
inc
movs
mov
in
pop
or
retf
mov
sbb
lahf
mov
(bad)
movs
inc
mov
cmp
xor
or
sbb
dec
sar
jecxz
stos
stos
and
fwait
push
test
nop
(bad)
arpl
cmp
dec
shl
mov
jecxz
cld
ins
and
or
in
mov
sbb
cmp
dec
xchg
sti
adc
arpl
inc
mov
push
add
and
mov
fsqrt
adc
hlt
sub
enter
data16
pop
hlt
movs
in
pop
retf
mov
dec
mov
add
mov
cmp
inc
ret
pop
mov
add
sar
outs
push
cs
ins
mov
(bad)
mov
into
sti
fnstenv
in
mov
out
cmps
pop
mov
repz
gs
jns
aam
das
pop
fcmovne
ins
out
in
adc
pushf
loop
scas
cmp
(bad)
mov
jo
std
outs
loope
mov
retf
push
xchg
sub
ja
inc
adc
mov
push
sbb
bound
and
or
add
std
shr
pop
or
pop
mov
cld
ins
inc
shl
outs
or
int
pop
in
das
shr
xor
mov
mov
jae
enter
sti
call
fiadd
mov
daa
scas
xor
out
jl
fisttp
lahf
mov
cmp
add
popw
aas
mov
(bad)
(bad)
loope
jmp
(bad)
and
lods
xor
popf
ret
fisubr
mov
jo
pmullw
cmp
push
inc
cdq
mov
jg
xchg
sub
pop
jne
out
nop
imul
jne
hlt
add
ds
mov
fist
cld
daa
jmp
push
mov
mov
push
loop
xor
fs
inc
cmp
sub
and
cld
not
aas
pop
data16
push
sub
(bad)
and
rol
test
test
add
sbb
aas
out
pop
push
mov
lods
dec
cmps
not
and
arpl
outs
lods
and
test
mov
or
pushf
(bad)
jecxz
hlt
cld
aad
jmp
push
sub
xchg
mov
scas
pop
pop
add
mov
jmp
jae
movs
mov
inc
push
popa
push
mov
imul
mov
aad
xor
dec
(bad)
push
xchg
xor
jmp
(bad)
out
imul
adc
add
jnp
dec
xchg
es
retf
push
fnsave
mov
mov
add
stc
xchg
leave
and
inc
sbb
sub
sub
movs
out
std
outs
cmps
sti
xchg
xor
and
pop
sbb
outs
cmp
je
pop
jge
sti
push
jle
mov
pop
mov
rcl
jl
(bad)
cmp
stos
hlt
xchg
or
mov
cmps
cmps
lock
cmc
mov
test
movs
jne
adc
mov
popa
dec
mov
jmp
add
fnstcw
test
imul
jns
repnz
pop
(bad)
(bad)
lods
adc
cmp
mov
push
scas
inc
push
adc
mov
adc
jbe
cs
sub
out
push
das
sub
test
sti
std
add
test
or
cmp
(bad)
icebp
out
movs
mov
lods
ins
push
jg
lds
cdq
out
adc
mov
jg
mov
out
cmp
test
pop
jnp
inc
aad
daa
outs
ja
cli
xchg
ret
mov
cmc
adc
outs
ja
fld
into
int3
mov
xor
jg
xchg
fist
mov
test
hlt
leave
cmp
movs
call
mov
ror
inc
loope
pop
mov
ret
ins
imul
sbb
rcr
test
xor
outs
inc
sbb
sub
push
shl
dec
mov
mov
(bad)
sub
mov
movs
fldz
xor
mov
inc
cmp
call
repnz
imul
xchg
pop
hlt
mov
ret
xor
add
xchg
psubsb
leave
mov
out
push
jp
cmovbe
(bad)
and
ret
mov
vmovsldup
cld
jb
es
imul
mov
jmp
and
sbb
jecxz
test
mov
(bad)
leave
gs
mov
jge
gs
inc
push
lea
scas
mov
vmwrite
frstor
mov
adc
mov
xchg
xchg
aas
xchg
xchg
ret
cmp
pop
jb
dec
pop
pushf
cld
dec
stc
mov
movq
lods
push
cmp
push
sbb
sbb
test
cld
pushfw
cmp
aad
shr
cmp
xor
pop
sub
(bad)
stos
jns
fistp
dec
in
lods
xor
test
xor
fwait
mov
lahf
stc
ret
or
cmp
sti
mov
pop
shl
adc
sbb
mov
bound
out
ja
popa
mov
dec
fcmovnu
out
mov
jne
push
test
scas
pop
fisttp
stos
mov
call
sub
ficomp
out
outs
es
lahf
arpl
clc
(bad)
mov
xchg
scas
or
sbb
fs
mul
or
pusha
adc
gs
in
mov
mov
daa
cdq
pop
lds
push
sti
mov
push
daa
xchg
ret
outs
pop
xchg
xchg
xchg
fild
sub
cli
cmp
inc
or
cld
pop
mov
jecxz
pop
sbb
pusha
fmul
mov
xchg
loop
(bad)
fldcw
push
push
cli
stos
jnp
scas
jns
std
scas
add
mov
sub
movs
mov
stos
(bad)
ficomp
dec
test
es
mov
sub
jg
daa
or
mov
cvttps2pi
inc
outs
mov
loope
lea
std
sbb
shr
enter
or
inc
jge
stc
out
adc
rol
mov
adc
xchg
pushf
push
shr
call
gs
cmps
mov
or
adc
xchg
pop
popa
pop
mov
mov
je
popa
loopne
mov
jecxz
jle
xchg
or
cmps
xchg
in
adc
mov
ror
mov
sbb
cmp
idiv
jbe
add
(bad)
out
leave
or
xchg
out
sbb
neg
jmp
and
jne
push
test
nop
outs
sar
push
jmp
adc
sub
and
imul
add
xor
lea
xor
in
in
and
std
jle
inc
int3
cmp
and
loope
fsub
scas
sub
push
sub
aas
in
loop
in
int3
mov
cld
inc
mov
ror
lock
push
inc
push
into
inc
scas
sbb
mov
test
or
rcr
(bad)
mov
pop
dec
pushf
sbb
cmps
imul
and
mov
lahf
shl
aad
out
adc
mov
jp
loope
pop
out
sub
scas
daa
daa
mov
inc
inc
and
mov
sbb
mov
sub
mov
je
cmp
dec
mov
(bad)
mov
out
inc
retf
xchg
lock
sbb
push
jl
mov
retf
imul
mov
mov
add
mov
or
push
add
push
sbb
and
sbb
mov
mov
push
sahf
or
push
and
test
(bad)
inc
aaa
jo
jmp
movs
push
out
pop
fld
xchg
pusha
ss
mov
add
das
inc
xchg
ret
xor
mov
test
cwde
dec
call
sbb
pop
mov
xor
les
push
lods
add
fld
gs
or
sub
in
fild
pop
sub
test
sbb
cld
sti
sahf
sbb
dec
out
mov
mov
fnsave
sbb
aad
fcom
nop
fs
jl
xor
repz
iret
shl
pop
cmp
dec
(bad)
pop
das
cmp
cmp
mov
push
mov
push
mov
in
(bad)
jmp
add
push
xor
sbb
push
push
fsubr
xchg
xchg
fwait
push
fstp
dec
jns
ret
pop
sbb
in
inc
jne
fld
or
jno
sti
dec
sub
sar
icebp
pop
int3
pushf
push
lds
inc
xchg
and
pushf
sbb
imul
mov
sub
jmp
cs
mov
daa
fimul
in
or
xrelease
adc
daa
or
or
adc
in
inc
shl
push
mov
stc
push
sbb
icebp
xor
lods
xchg
jmp
xor
mov
xor
test
out
(bad)
loop
fld
mov
sub
xchg
fnsetpm(287
stos
jbe
jo
jecxz
and
int3
adc
in
lock
out
stos
inc
push
enter
fadd
call
jmp
hlt
ret
mov
mov
xlat
and
outs
inc
(bad)
imul
dec
or
pop
iret
cs
fistp
or
add
ror
mov
fild
pop
hlt
out
aaa
xchg
imul
mov
add
jnp
and
cmc
jmp
mov
cmp
into
push
loopne
pop
add
xor
mov
add
dec
sub
xchg
xchg
outs
sub
mov
jle
loope
aas
xor
and
mov
cmps
push
lods
ret
mov
(bad)
out
enter
call
lahf
in
fisub
fsub
push
xor
outs
and
iret
mov
cmp
mov
std
dec
or
fcmovb
cmp
call
ret
mov
test
pop
push
in
repnz
mov
push
daa
and
push
test
(bad)
mov
xchg
loop
mov
mov
cmp
call
call
push
mov
div
pop
inc
mov
or
mov
or
int3
sub
cmp
(bad)
sti
dec
and
in
mov
call
jmp
inc
mov
or
jno
dec
frstor
inc
fidiv
xchg
popa
aad
sbb
jg
int
and
push
in
xchg
shl
test
or
into
mov
xor
pop
retf
pop
pop
call
iret
cmp
inc
xor
repnz
pop
jae
jae
sub
(bad)
lock
mov
movs
push
mov
popf
movs
mov
mov
addr16
cmps
hlt
popf
push
icebp
jae
out
lods
mov
adc
ret
lods
mov
jmp
sbb
jecxz
ins
movs
retf
fisttp
cmp
mov
inc
mov
icebp
out
outs
inc
and
push
inc
and
xor
ss
inc
push
adc
(bad)
fisubr
pushf
fdiv
mov
adc
(bad)
es
push
imul
sub
dec
pop
nop
(bad)
sahf
movs
sbb
mov
movs
test
sar
int3
jo
mov
mov
cmp
dec
inc
push
in
sbb
push
dec
into
mov
in
mov
push
cmps
mov
xchg
lods
mov
push
aam
mov
cld
jae
sar
cld
dec
xchg
cmp
lea
scas
lods
lock
fwait
push
ins
(bad)
sar
pop
cwde
cmps
push
sbb
xor
mov
xchg
xor
xchg
or
xor
stc
push
add
jmp
nop
sar
retf
je
dec
xchg
loopne
outs
pop
jl
clc
test
ficomp
sar
mov
hlt
xor
mov
mov
(bad)
xor
out
mov
in
scas
mov
repnz
jbe
icebp
push
adc
call
and
jmp
jmp
retf
cld
jmp
loop
ficomp
push
mov
shl
inc
int3
inc
dec
dec
jmp
inc
dec
push
adc
mov
sbb
ja
cdq
scas
test
cdq
test
ret
pop
mov
pop
retf
pop
add
repz
mov
xor
sub
jmp
ret
xlat
sbb
mov
mov
mov
or
lea
mov
int3
daa
repnz
jmp
jb
sub
xchg
push
into
cmp
loopne
or
or
fwait
mov
push
stos
dec
fwait
repz
xor
xor
add
clc
mov
enter
in
pop
jmp
mov
mov
inc
sub
in
pop
jg
test
repnz
movs
addr16
jb
jb
add
push
rol
inc
adc
add
in
sub
add
inc
jae
mov
arpl
mov
xor
cs
push
adc
xchg
push
dec
and
push
dec
movs
call
ror
xor
and
fs
lahf
(bad)
jbe
inc
push
or
(bad)
push
jp
lods
std
pop
and
into
push
fisttp
pushf
adc
sub
mov
jo
test
cmp
or
popf
mov
enter
ja
iret
dec
sti
fdivr
imul
or
adc
xlat
loope
add
push
xor
xchg
retf
repnz
adc
out
repz
sub
(bad)
or
fadd
add
xchg
pop
lahf
cmc
cmps
fwait
dec
rcl
lods
ss
pop
or
imul
loopne
mov
pop
fld
mov
xchg
xor
loopne
(bad)
cmc
lods
adc
outs
std
in
ret
ret
fld
and
retf
or
cmp
xlat
pop
es
pop
xchg
pop
test
stos
ret
cli
sbb
xchg
push
dec
push
jmp
xchg
aaa
cld
cmps
xor
add
pop
jle
mov
cli
inc
dec
push
push
inc
int3
push
add
das
rcr
add
ss
push
pop
fld
in
(bad)
int
retf
ss
retf
int
mov
push
in
nop
fs
movs
mov
shl
jbe
test
sub
pop
(bad)
aas
push
fnsave
arpl
dec
out
push
fwait
daa
cmp
pop
fs
loopne
pop
dec
arpl
and
dec
out
cdq
adc
fstp
pop
mov
loopne
xchg
std
ja
or
jae
in
pop
pop
int
lods
fistp
das
ret
cmp
(bad)
push
in
mov
push
retf
dec
test
xchg
clc
mov
daa
iret
mov
in
movs
jno
cld
ss
or
fmul
jle
movs
add
jnp
xor
jno
push
clc
ret
(bad)
dec
jmp
sub
cmps
adc
outs
push
cmp
cmp
pop
jmp
mov
add
mov
sar
mov
jmp
mov
cli
stos
popa
dec
mov
pop
das
jl
adc
scas
pop
(bad)
call
or
enter
pop
jb
iret
daa
in
sub
(bad)
mov
fisttp
mov
shl
or
stos
call
adc
xor
and
dec
imul
and
add
out
push
pop
dec
fcomip
cmps
lea
dec
push
loope
inc
ins
sub
mov
jnp
shr
aam
sbb
xchg
fild
pop
jl
dec
sbb
mov
xor
add
or
sbb
pop
mov
push
mov
mov
push
and
and
mov
(bad)
call
dec
add
mov
and
cli
or
dec
mov
sbb
xor
loopne
cmps
stc
cld
dec
aam
std
fucom
ret
movs
xor
inc
popa
pop
fadd
dec
les
sbb
fs
sbb
and
inc
cs
cmp
mov
aaa
icebp
movs
ins
cmps
mov
pop
lds
inc
(bad)
xlat
xchg
inc
push
push
dec
sbb
fcomp
xchg
mov
icebp
daa
xchg
pop
and
sahf
cmp
sbb
out
jl
xchg
add
hlt
mov
xchg
stos
fxch
pop
sbb
mov
cmps
xor
mov
pushf
push
xor
pop
lahf
adc
ins
call
sub
int
mov
cwde
sub
std
stos
push
stc
xchg
cwde
pop
or
retf
mov
mov
push
mov
int
inc
cmp
pop
call
mov
mov
xor
sbb
pushf
fidiv
mov
(bad)
icebp
leave
sbb
pop
add
cmps
sub
(bad)
int3
repz
mov
fadd
data16
repz
in
or
cmp
mov
fstp
xchg
dec
(bad)
iret
jge
aam
cmp
dec
sti
fsubrp
inc
out
ficom
imul
xor
sbb
sub
popa
rcl
imul
in
adc
dec
ins
xchg
cmp
outs
xor
jbe
lahf
mov
aad
adc
jae
out
pmaxub
imul
push
movs
cli
adc
push
lds
stc
mov
jl
hlt
imul
xor
xlat
popf
push
mov
sbb
ss
adc
mov
shl
leave
pop
pop
out
push
cmp
fxch
jno
lods
(bad)
sub
push
in
push
jl
dec
push
add
inc
xor
mov
sub
inc
ins
icebp
and
mov
inc
push
push
xchg
xchg
inc
mov
jae
out
dec
inc
push
xor
(bad)
stos
add
pop
pop
hlt
out
or
mov
sub
jle
sub
xchg
inc
pop
test
xchg
fnsave
or
ss
dec
(bad)
xchg
fcmovu
daa
jb
in
sub
xor
ins
inc
cmp
or
adc
sar
mov
mov
xlat
mov
lahf
cmp
inc
sub
inc
dec
nop
shr
pop
mov
pop
loop
cld
adc
ds
jmp
or
xor
xlat
jno
dec
push
fsubr
pop
mov
test
fistp
cmp
cdq
fucom
sbb
nop
lods
push
cmp
pop
mov
or
adc
add
call
scas
out
jnp
mov
idiv
enter
cwde
out
push
fbstp
push
mov
popa
xor
outs
jle
sahf
jecxz
jae
ss
out
mov
ror
push
rol
xor
(bad)
movs
sbb
pop
das
xchg
xor
les
or
sbb
pop
aam
out
fisubr
sbb
push
jnp
cmp
cmps
jmp
in
push
rcr
les
daa
xchg
ins
inc
xchg
outs
shl
scas
dec
mov
fstp
ins
pop
push
pop
cwde
outs
repz
dec
cmps
xor
inc
aam
add
sbb
mov
js
cdq
xor
pop
lds
xchg
int3
stos
xor
dec
fadd
sbb
adc
sbb
adc
mov
push
xor
inc
in
add
jnp
adc
fst
aas
pusha
jecxz
pop
pop
and
or
push
jmp
jb
ror
mov
mov
movs
retf
test
dec
add
xchg
adc
(bad)
dec
int
outs
inc
inc
call
ss
mov
push
ins
cmps
bound
cmp
adc
mov
out
lahf
jmp
inc
(bad)
xchg
pop
jp
ds
mov
dec
clc
cli
clc
sub
dec
inc
sub
cwde
int
pop
pop
inc
or
adc
or
xchg
retf
js
and
arpl
mov
cmp
int3
sbb
cmp
push
pop
scas
js
mov
stos
jnp
pop
mov
cmp
popa
add
fwait
jg
jmp
pop
cmp
js
jmp
push
inc
push
dec
push
mov
jp
and
add
and
test
fidiv
push
repz
retf
ins
cmp
dec
inc
std
mov
aaa
loop
pop
es
mov
dec
xchg
mov
(bad)
dec
xchg
movs
icebp
dec
sbb
in
stos
and
scas
or
icebp
js
aad
add
or
sbb
inc
(bad)
leave
push
mov
xor
dec
push
mov
fidivr
mov
lahf
(bad)
(bad)
mov
bound
mov
pop
out
idiv
fidiv
stc
cmps
mov
pushf
dec
mov
hlt
inc
call
or
add
sti
mov
call
int3
xor
jmp
retf
xor
in
cmps
arpl
daa
mov
fiadd
pushf
loopne
aas
xchg
inc
cmc
xor
mov
ret
mov
clc
jno
push
pop
xchg
je
lahf
jbe
arpl
jl
(bad)
clc
cmp
mov
inc
sahf
addr16
lar
fisubr
mov
shl
ret
dec
pop
call
xor
movs
cmc
mov
sbb
ds
inc
xlat
push
test
and
pop
add
aad
retf
outs
lods
loope
sub
movs
int3
xchg
and
jb
in
loope
pop
in
loope
mov
xchg
sar
ins
ja
cmp
push
add
cmps
jno
imul
sbb
sub
test
mov
sbb
shr
cmps
int
icebp
sub
or
data16
add
loope
std
xchg
pusha
inc
mov
cmps
mov
in
adc
test
or
(bad)
pop
jo
push
outs
jmp
test
cld
addr16
hlt
sbb
mov
xor
scas
push
inc
xchg
shrd
xlat
xlat
mov
jne
stc
pushf
cmps
cmp
mov
push
ror
das
fcmovnu
mov
fnstcw
hlt
dec
jne
je
repnz
hlt
xor
out
jge
pop
out
nop
adc
cld
push
pop
stc
or
cmp
inc
popf
aad
aas
mov
cld
xchg
call
fwait
jmp
cwde
xlat
sub
pop
jecxz
ret
ffreep
push
sbb
cli
adc
mov
ror
leave
test
out
fmul
mov
fstp
ja
mov
pop
and
jg
mov
arpl
aad
inc
inc
cmps
es
call
push
inc
cli
addr16
or
out
sti
in
jae
xchg
add
idiv
or
shl
int
inc
aad
sbb
out
test
push
inc
mov
inc
into
js
subps
jg
scas
jo
(bad)
int
lahf
pop
int3
xchg
pusha
cli
pop
sahf
data16
xor
push
cwde
push
pusha
leave
push
mov
nop
adc
stc
lea
fbstp
sub
cmps
jp
mov
and
daa
xchg
aas
leave
(bad)
scas
add
pop
cmp
jns
movs
jmp
mov
inc
add
add
sbb
xor
cmp
subps
in
rcr
and
push
cmp
ja
mov
push
lds
sbb
push
ins
js
dec
cli
push
xchg
push
ds
mov
xor
(bad)
cmp
ja
sbb
add
fistp
xchg
xchg
jg
mov
or
test
dec
sub
push
sub
iret
jle
pusha
push
xchg
(bad)
pop
jle
push
push
and
pop
in
adc
xchg
push
cld
ins
push
in
xchg
mov
loopne
xor
jno
icebp
adc
shl
arpl
mov
add
or
xor
test
inc
mov
lock
cmp
and
add
dec
xchg
push
fsub
jp
ja
push
repz
jmp
daa
rcl
rcr
and
mov
jns
arpl
ss
outs
ret
ret
fdiv
dec
cmps
in
lahf
xor
xchg
mov
dec
mov
and
mov
and
mov
add
cmc
test
jb
inc
xchg
mov
inc
xchg
cmc
cli
push
stc
fwait
lea
ret
add
sub
push
fild
xchg
addr16
mov
shr
mov
cmp
sub
test
cdq
ss
nop
out
lds
inc
icebp
mov
inc
push
mov
leave
sbb
fs
xor
frstor
mov
das
xchg
inc
jne
lods
push
mov
inc
mov
mov
xchg
pop
sub
and
repnz
fcom
sub
cmp
scas
xchg
xor
add
dec
jb
das
add
adc
cdq
cmp
inc
fwait
or
fmul
sub
mov
lods
push
sub
pop
xchg
popa
add
and
outs
xchg
popa
cmp
xchg
lods
mov
add
mov
mov
mov
jmp
pop
inc
inc
ss
addr16
fist
inc
gs
cmp
xor
sub
sub
cmp
(bad)
outs
jne
shr
cs
or
mov
push
in
sbb
mov
add
in
add
xchg
cmp
in
add
lods
pop
pop
sbb
or
mov
pop
inc
ss
iret
loop
push
sub
and
sub
loope
stc
cdq
je
sti
and
lahf
test
mov
dec
add
cdq
pop
adc
jmp
and
fnstenv
out
repnz
adc
addr16
sar
out
(bad)
pop
ja
add
inc
xor
popa
das
mov
pop
pop
(bad)
cmps
push
cli
mov
out
mov
xchg
jo
pop
inc
cld
pushf
out
cmps
cwde
cld
adc
dec
scas
xchg
cmp
ds
dec
cmovns
int
enter
xchg
and
dec
ins
adc
int3
call
and
cmps
and
push
push
jmp
stos
sub
ins
fdivr
mov
(bad)
sub
movs
stos
pushf
rcr
(bad)
shl
inc
jne
scas
add
push
inc
jnp
es
mov
stc
cs
(bad)
iret
xchg
cld
call
dec
(bad)
mov
or
adc
aam
lock
and
fwait
imul
sti
inc
and
fcom
inc
mov
add
outs
sbb
pop
fwait
loopne
jl
ins
(bad)
cmp
mov
add
sub
sub
and
(bad)
mov
movs
repz
std
pop
dec
mov
mov
out
adc
mov
dec
stos
push
inc
es
loopne
popa
cwde
cs
inc
ds
jl
outs
push
sahf
jbe
inc
adc
fsubrp
ret
test
adc
jg
popa
(bad)
clc
sub
sbb
test
push
sbb
arpl
in
xchg
test
movs
inc
cmps
inc
mov
pusha
inc
sub
xor
movs
jmp
popa
std
pushf
shl
stos
pushf
push
leave
outs
jmp
inc
mov
cmp
shl
mov
dec
sbb
mov
retf
or
lock
inc
mov
fimul
xchg
mov
xor
add
sub
leave
and
adc
mov
in
ss
test
pop
pop
lahf
jmp
test
cmp
cs
aam
cmp
and
rcl
stos
or
pop
adc
mov
(bad)
call
test
out
popa
mov
sbb
push
retf
imul
fs
je
inc
cld
ins
aad
cld
sbb
mov
(bad)
ins
aaa
jge
cs
jl
pop
out
outs
ficom
imul
test
nop
cmps
push
addr16
inc
mov
dec
lahf
sbb
retf
sti
ins
int3
mov
mov
retf
inc
mov
stos
out
pusha
hlt
xor
jge
push
mov
add
sub
rcl
mov
dec
adc
mov
push
pop
lods
dec
inc
cdq
clc
test
cld
pop
inc
outs
adc
push
cs
in
push
shr
pop
push
sbb
mov
sub
cli
push
cmp
mov
push
jnp
mov
jmp
adc
or
mov
pop
call
imul
lds
ins
mov
mov
mov
pop
lea
lahf
retf
cld
(bad)
lock
call
push
and
push
sbb
adc
adc
and
adc
ds
xor
das
jno
push
cmovge
fisttp
mov
in
pop
cmp
or
push
xchg
or
int
ja
and
pop
div
out
shr
mov
mov
push
cmp
repnz
test
mov
pusha
test
mov
lea
mul
mov
cmp
int3
(bad)
(bad)
nop
sbb
pop
mul
cmp
pop
xchg
ins
cmp
pusha
je
inc
mov
ret
cdq
ds
add
(bad)
outs
dec
and
ret
mov
cwde
lahf
gs
call
adc
or
mov
push
fcomp
(bad)
pop
imul
xor
dec
push
loopne
rcl
adc
mov
push
jle
or
stos
stos
sub
arpl
xchg
out
or
gs
fwait
loopne
cmp
unpcklps
xchg
jmp
xor
jmp
add
or
mov
jmp
test
mov
push
das
sbb
in
inc
cmp
sub
sub
pop
std
mov
mov
enter
adc
add
sub
and
test
sahf
adc
retw
adc
pop
nop
outs
push
mov
ja
adc
loopne
sahf
movs
cmc
or
push
cli
cmc
or
cli
sub
jg
adc
mov
or
lods
scas
movs
aaa
push
jl
mov
loopne
aam
sbb
enter
cdq
outs
mov
cld
sahf
push
int3
pop
dec
jno
mov
sar
fiadd
stos
sub
out
jl
les
sbb
mov
cmc
(bad)
jmp
xor
ins
mov
mov
pop
popf
loopne
sbb
fwait
cmc
jb
out
shl
aaa
cmc
out
in
inc
loope
aad
leave
ins
push
test
ins
cmps
xor
jg
nop
push
mov
add
and
repnz
or
xor
repz
les
xor
test
xchg
icebp
dec
mov
sbb
loopne
das
test
retf
data16
cld
mov
aas
mov
inc
mov
mov
pop
or
mov
fcomi
sbb
mov
stos
sbb
aaa
vpaddusb
mov
ret
scas
aaa
push
ror
lods
adc
jno
dec
icebp
outs
mov
fld
jge
push
mov
mov
pop
xor
jge
inc
mov
movs
xor
jns
sub
outs
sub
xchg
int
call
fbld
jg
mov
dec
cmp
leave
inc
out
pop
pop
add
addr16
adc
sbb
pop
repz
mov
je
pusha
ins
int
cmps
sbb
jno
xor
test
(bad)
push
sbb
cmps
scas
je
sub
in
loope
popa
xor
lods
mov
push
xor
pop
lea
add
cli
push
jg
and
mov
fadd
test
out
inc
mov
push
into
mov
inc
sub
stos
repnz
adc
es
mov
imul
clc
xchg
xor
pop
xor
mov
add
mov
repnz
push
ret
mov
cmp
pop
popf
jmp
jne
sbb
data16
pushf
ja
jg
sete
mov
sbb
cmp
cmp
aaa
addr16
jbe
cmp
pop
aas
retf
shl
into
or
cmp
movs
or
push
jns
sar
fnstcw
call
sub
rcl
retf
xor
dec
xchg
mov
bound
cmps
add
in
aam
aam
hlt
cdq
and
mov
in
lods
ss
mov
into
fucom
mov
sahf
pusha
adc
mov
sbb
mov
lock
sar
ret
mov
push
mov
cmp
mov
sbb
jg
adc
sub
mov
xchg
dec
leave
ret
fadd
shr
fidiv
sbb
mov
mov
dec
in
mov
mov
pop
jmp
ja
mov
sbb
aad
xchg
mov
call
popa
nop
and
mov
sub
fdivr
push
sbb
aaa
addps
pop
loopne
lods
cdq
fst
push
repz
movs
cmp
xchg
inc
imul
pop
scas
mov
cli
rol
xchg
jnp
xchg
xchg
imul
sbb
mov
dec
lock
mov
cmp
call
movs
push
mov
push
stc
hlt
sbb
out
push
push
imul
jbe
pop
dec
cli
adc
push
jl
call
loope
arpl
sbb
sahf
scas
repz
push
xor
jb
aas
push
movs
call
mov
ds
cmps
lock
in
scas
out
stc
mov
lock
xchg
mov
js
ja
inc
sti
pusha
mov
pop
adc
es
stos
sub
lds
popf
sbb
into
scas
fucomi
cmps
xchg
xchg
xchg
lds
adc
rcr
test
sub
repnz
and
dec
jno
inc
mov
xchg
test
add
cmp
inc
mov
add
cmp
outs
mov
sahf
loopne
sbb
test
xor
sbb
xor
lock
push
jns
cmp
out
fcom
jmp
inc
cmc
mov
jmp
fwait
push
out
inc
adc
mov
jl
cwde
jmp
pop
xchg
pop
push
mov
loope
cmps
cmp
jle
add
xor
mov
jmp
pop
push
hlt
fnstcw
inc
dec
pop
sbb
out
gs
das
push
push
jne
sbb
xchg
lods
inc
test
clc
xchg
mov
lds
xor
outs
xchg
xchg
cmps
cli
loopne
add
mov
int3
aam
add
stos
jmp
add
ins
out
mov
xadd
sub
adc
call
sbb
mov
addr16
imul
iret
mov
dec
xchg
dec
call
mov
adc
dec
xchg
(bad)
fimul
lods
pop
dec
sub
add
test
ins
ja
push
rcl
push
out
mov
pop
dec
call
push
stos
xchg
cmp
mov
les
mov
out
jmp
scas
sar
cli
or
xor
mov
inc
jmp
pop
jecxz
push
inc
jnp
mov
std
or
lea
or
aaa
daa
je
or
test
xor
xor
jno
aam
sahf
lock
pop
jne
imul
test
xchg
imul
mov
sub
aam
xchg
push
std
(bad)
lea
je
data16
push
adc
push
pusha
lods
jmp
xchg
jmp
push
mov
sub
mov
jg
cmp
adc
test
ror
push
dec
cmp
je
rcl
dec
(bad)
adc
mov
xlat
faddp
fimul
cmp
xchg
pop
add
add
cmp
push
inc
dec
and
hlt
test
pop
retf
(bad)
mov
add
std
cli
jbe
ds
addr16
dec
ret
dec
ja
retf
lods
jo
adc
out
sbb
dec
mov
push
call
ins
cmp
xor
rcl
iret
movs
mov
inc
(bad)
jg
xor
cmc
sbb
(bad)
xchg
into
ja
adc
aas
shl
or
mov
xor
mov
mov
xor
xchg
xor
ret
jecxz
cmp
int
or
arpl
and
popf
enter
stc
or
outs
aam
ret
out
xchg
pop
sub
leave
cld
out
mov
dec
ja
add
stos
jb
pop
xor
pop
cmc
enter
ins
mov
pop
fmul
jl
add
out
test
mov
test
imul
inc
int3
jp
add
or
or
movs
sub
cmp
mov
xor
aas
sub
pop
shr
popa
mov
xor
outs
dec
out
ret
test
mov
mov
nop
fild
xor
mov
xchg
les
mov
idiv
retf
arpl
in
jb
push
test
xchg
cmp
(bad)
out
dec
ret
push
adc
movs
clc
push
call
sub
outs
or
fimul
mov
int3
sub
mov
iret
sti
aam
xor
dec
inc
and
add
mov
fwait
rcl
sbb
jg
inc
js
mov
call
das
mov
popa
and
aas
or
add
or
data16
pop
pop
es
fwait
bnd
aaa
sub
aad
test
movs
mov
dec
clc
mov
jae
shr
push
and
rcl
push
dec
sar
clc
mov
out
test
sbb
call
mov
add
dec
inc
inc
sbb
push
inc
sub
and
scas
leave
pop
push
dec
cmp
fist
jns
or
adc
sub
mov
sub
fcomp
repz
cmc
gs
and
xchg
ins
pop
clc
dec
cmp
fwait
lods
or
in
js
push
loop
jns
fisttp
push
inc
stc
int3
push
aam
ja
fmul
jmp
mov
aas
pop
sub
movs
xchg
and
mov
into
test
out
add
ja
aas
or
and
cs
test
or
jg
gs
mov
stos
push
pop
jae
dec
pop
xchg
and
sbb
add
inc
cmp
or
dec
adc
push
ss
jle
stos
xor
sahf
popf
sbb
mov
dec
xchg
fnstsw
mov
pop
loop
ror
cmp
into
mov
shr
ins
call
mov
and
xchg
jp
xor
sbb
jp
(bad)
stos
enter
xor
test
dec
(bad)
push
push
daa
adc
ffree
movs
sub
or
xchg
push
mov
mov
adc
popa
mov
add
ret
jae
ins
pop
outs
cmp
(bad)
mov
in
retf
(bad)
std
push
fist
jno
retf
shl
sbb
aad
mov
int
dec
loopne
scas
cmp
xchg
repnz
mov
loope
je
xchg
popf
push
addr16
sti
ds
loope
dec
push
inc
pop
call
cmp
and
sub
mov
dec
mov
inc
jnp
xchg
gs
je
loop
shl
inc
(bad)
jb
int
dec
mov
jle
test
out
and
xchg
push
pop
shr
repz
jnp
stos
push
ficomp
adc
pop
cwde
sub
(bad)
into
xlat
inc
add
pop
and
popa
lods
xor
or
(bad)
mov
cs
push
mov
cmp
jl
push
lea
test
xor
jmp
mov
dec
outs
mov
pavgw
xchg
mov
test
aam
(bad)
stc
in
mov
jmp
bound
imul
mov
test
inc
xchg
mov
pop
mov
sbb
mov
dec
clc
push
arpl
sbb
call
in
mov
inc
xchg
mov
jne
sub
je
push
dec
inc
jge
aas
test
pop
add
sbb
das
or
mov
movs
hlt
mov
cmp
fld
mov
addr16
test
sub
dec
push
mov
sub
inc
loop
lahf
pushf
xchg
scas
mov
dec
repz
(bad)
cmp
pusha
sar
lds
mov
dec
loopne
push
inc
(bad)
jnp
sar
and
popa
adc
imul
sub
fiadd
mov
out
in
pop
sbb
pop
sbb
nop
push
pushf
pop
test
in
hlt
js
fdiv
jno
fcmovb
cmps
daa
xchg
inc
jnp
xchg
add
sub
sahf
push
mov
enter
pusha
sub
loopne
mov
dec
fs
imul
mov
ins
ins
push
lods
jge
xchg
(bad)
aad
add
cmp
add
(bad)
push
loop
movs
pop
push
jmp
addr16
out
pop
push
sbb
cmc
mov
(bad)
adc
pop
not
hlt
mov
mov
sbb
lea
pop
div
retf
ds
sub
dec
loope
ror
out
jmp
add
lds
xchg
retf
mov
inc
outs
mov
das
fistp
lahf
sub
mov
or
int3
inc
(bad)
(bad)
dec
jae
jmp
push
adc
xor
dec
push
out
push
cmp
clc
movs
xlat
mov
dec
cdq
ja
mov
outs
clc
xor
pop
imul
push
cmps
pop
sahf
add
push
repz
pop
or
dec
lods
ss
fisub
rcl
mov
aam
xchg
push
push
sti
pushf
fimul
pop
push
ss
jle
xor
stos
pusha
sub
cmp
call
add
pop
(bad)
mov
push
icebp
adc
xor
fcmovb
call
retf
shl
in
cmp
out
mul
test
sub
pop
clc
mov
fmul
sub
add
cmps
div
and
call
xchg
leave
jns
call
(bad)
cmp
fisubr
lea
daa
arpl
lock
jmp
stc
pop
ret
xchg
cmps
dec
sbb
fistp
sbb
jae
mov
int3
popf
adc
add
sbb
jmp
aad
pop
popf
bswap
jl
sub
xchg
leave
pop
dec
sbb
inc
mov
pop
add
out
pushf
icebp
or
or
ret
das
pop
xor
jecxz
iret
cmp
inc
xchg
xor
fild
pop
(bad)
adc
inc
(bad)
aas
aam
icebp
cmp
mov
mov
add
inc
popa
mov
mov
dec
push
clc
xchg
sbb
sub
mov
add
aad
xor
adc
xor
cmp
repnz
sub
(bad)
scas
sbb
mov
cmp
xor
or
xor
sub
jmp
xchg
mov
and
jno
data16
cdq
aad
(bad)
test
hlt
add
test
push
fstp
xor
lahf
mov
jle
fld
stos
loope
sbb
jle
sbb
inc
cmp
pop
ficomp
xchg
bound
pushf
xor
sub
scas
jge
sar
ja
(bad)
rcl
stos
pop
push
sbb
xor
aam
push
pop
(bad)
aad
jge
cmps
adc
cld
and
sbb
push
add
mov
or
inc
mov
shl
lea
inc
jg
(bad)
mov
jns
int3
jmp
icebp
mov
shl
xor
cmp
xor
loopne
or
call
xchg
addr16
test
push
push
sbb
push
xchg
cmc
scas
ficom
lock
call
(bad)
daa
ror
lods
fidivr
scas
mul
sbb
jle
push
movs
mov
lahf
ror
sti
mov
push
pcmpeqw
hlt
dec
imul
pop
clc
or
imul
arpl
fistp
mov
push
inc
fwait
push
dec
push
fdivr
add
mov
push
sub
in
idiv
push
mov
loop
sbb
xchg
inc
mov
mov
mov
xor
stos
mov
inc
dec
push
pushf
mov
adc
dec
inc
cdq
add
add
sub
scas
mov
jg
test
adc
inc
inc
out
pop
sub
mov
clc
dec
cwde
enter
loopne
out
ficom
xor
push
stos
cmps
sub
mov
je
inc
mov
pop
imul
ds
and
call
xchg
imul
fldenv
sub
push
fidivr
ud2
mov
push
ror
xchg
inc
mov
bts
inc
push
jbe
fistp
ins
repz
or
sbb
movs
mov
pop
pusha
xor
mov
(bad)
mov
cmps
iret
scas
js
or
out
or
js
das
gs
ficom
mov
and
je
sar
push
push
cmp
shl
repz
mov
and
or
stc
pushf
div
das
icebp
(bad)
out
icebp
push
rcl
out
dec
shl
jbe
int3
mov
sub
jmp
jge
mov
push
dec
xor
mov
ins
mov
adc
fcomi
movs
or
daa
(bad)
pop
outs
sub
ret
mov
ret
lods
popa
adc
pop
inc
mov
push
mov
xor
movs
stos
ins
push
mov
loope
or
fs
mov
leave
mov
push
xor
push
sahf
ins
pusha
dec
fs
adc
sbb
sub
fistp
ret
int
dec
xor
cwde
xor
sbb
jl
or
push
es
pop
mov
dec
stc
add
mov
push
sub
cmp
bound
pushf
dec
cmps
mov
leave
jno
add
ins
push
xchg
popa
lock
sahf
push
dec
ror
push
lods
in
movs
pop
in
mov
sub
scas
mov
mov
xor
movs
das
mov
and
stc
xchg
lahf
jp
mov
push
adc
movs
lea
iret
aas
xor
dec
push
outs
xchg
leave
and
daa
clc
in
mov
add
push
mov
(bad)
mov
fidivr
mov
into
mov
shr
cmps
sub
aas
mov
inc
mov
dec
dec
jge
call
sub
xchg
mov
clc
pushf
inc
scas
jge
xor
loope
daa
or
cdq
mov
mov
or
out
or
jge
aam
aad
add
mov
popf
ret
loopne
popa
jge
hlt
out
into
pushf
fcmovnu
cs
cli
frstor
shl
scas
pusha
je
mov
stos
sti
or
stos
mov
out
cld
cmp
jmp
push
out
push
pop
xchg
hlt
dec
sub
add
stc
or
fs
push
cmp
nop
cwd
fild
aaa
push
in
stos
scas
push
(bad)
out
cli
scas
retf
mov
cld
clc
pop
add
pop
pop
push
wrmsr
mov
(bad)
cmp
cmps
mov
test
mov
fcomp
fisub
aam
shl
mov
inc
iret
cmp
mov
and
jmp
lods
mov
in
adc
je
test
mov
(bad)
push
fiadd
nop
iret
icebp
push
dec
popa
add
into
or
jo
mov
fist
stos
xor
retf
pusha
(bad)
retf
rol
push
cld
xchg
das
pop
jle
stos
in
mov
inc
cs
cmp
test
push
sub
add
in
jbe
into
icebp
(bad)
fcomp
loopne
jle
push
xlat
nop
cdq
pop
mov
mov
loope
cld
mov
cdq
inc
inc
cwde
push
cdq
push
dec
mov
ret
call
(bad)
ss
retf
jns
shl
jmp
and
imul
lahf
aam
pop
cs
pop
loop
cmp
cmp
movs
popf
fldcw
jp
or
fild
out
mov
sbb
jno
sub
out
outs
test
cli
or
pop
inc
inc
add
call
es
pop
jae
mov
sbb
xchg
arpl
adc
cdq
xchg
cmp
jnp
out
jp
xor
dec
(bad)
outs
push
xor
push
cmc
lods
xor
jge
sti
mov
aaa
cmp
fdivr
fnsave
shl
pushf
jle
imul
scas
call
lahf
xor
pop
jno
loopne
(bad)
xchg
pop
xor
mov
jg
and
cwde
out
je
(bad)
pop
jo
mov
push
push
test
inc
xchg
iret
mov
push
(bad)
sub
adc
fmul
push
or
imul
pop
and
and
ret
retf
imul
cmp
jne
aas
loop
cmp
iret
push
inc
xor
cld
pop
aas
jle
cmp
sub
out
fdivr
cmp
fs
sbb
cmp
stc
xchg
pop
aas
(bad)
cdq
jmp
(bad)
sub
cli
fs
shl
add
jno
mov
ret
mov
outs
sahf
les
cld
pop
mov
sub
sti
and
pop
add
cwde
je
fsub
adc
mov
cmps
mov
mov
rcl
and
cmps
test
lahf
jle
inc
sbb
dec
cs
aam
ins
call
pop
jecxz
cmp
sbb
pop
push
mov
sbb
movs
test
hlt
push
sahf
mov
cmp
(bad)
fcmove
or
add
test
sbb
mov
aad
mov
retf
jne
push
push
add
test
aad
lahf
ret
psrlq
adc
int3
call
jp
sbb
int
pop
fnstcw
mov
fidiv
cmps
imul
daa
and
mov
es
mov
pushf
ficom
push
mov
inc
in
lods
stos
push
loopne
pusha
gs
mov
mov
test
inc
pop
xor
leave
hlt
lahf
xor
(bad)
les
pusha
hlt
ret
jge
pop
or
outs
pop
xchg
ins
mov
les
and
jp
cmp
(bad)
jae
lds
loope
xor
rcl
sub
mov
jns
popf
sub
sar
cdq
outs
pop
mov
jmp
fs
cmp
push
xor
repnz
test
(bad)
jns
sbb
push
rcl
inc
(bad)
mov
loopne
inc
test
loope
mov
mov
pop
jecxz
push
in
leave
xchg
pop
or
scas
loop
mov
pop
jge
mov
js
cmc
push
(bad)
mov
aam
aam
stos
loope
jmp
(bad)
movs
jmp
mov
nop
gs
stc
mov
push
fmulp
int
lods
push
push
mov
movs
ja
aam
sar
das
int3
cmp
jmp
test
addr16
outs
test
call
inc
in
pop
dec
jp
xlat
inc
sbb
dec
daa
mov
retf
jmp
xor
jecxz
fwait
rcr
pushf
push
sbb
jmp
inc
sub
scas
add
outs
jno
fnstcw
pop
into
call
out
mov
jg
fwait
push
push
pop
loope
xor
inc
and
dec
popf
pusha
add
dec
cmp
sub
sub
ja
into
gs
push
jo
inc
xor
sub
xchg
(bad)
mov
inc
inc
nop
(bad)
sub
jbe
popa
mov
in
inc
pop
cmp
pusha
fcmovu
add
mov
dec
idiv
mov
sub
fsubr
xchg
pushf
xchg
sahf
nop
lea
and
mov
std
in
dec
and
iret
mov
fcmovnu
(bad)
jmp
sbb
jne
pop
adc
mov
gs
lods
or
stc
sahf
out
inc
dec
pop
out
dec
and
in
(bad)
adc
mov
lds
dec
ds
mov
or
xor
loope
push
ds
iret
ror
fbld
dec
mov
jns
dec
scas
outs
cld
lods
pop
fwait
add
and
fld1
lds
int
jae
aam
adc
xor
mov
or
or
bound
dec
mov
cmps
jge
inc
ins
xchg
movs
lods
pusha
jg
or
cmc
mov
lods
mov
call
mov
inc
(bad)
clc
in
xor
ret
not
mov
aas
loop
repz
lods
push
pop
inc
push
inc
add
stos
div
rcr
push
nop
push
mov
jg
movs
xchg
mov
push
mov
scas
cmp
xchg
mov
xor
mov
sbb
mov
scas
mov
stc
mov
xor
dec
mov
lahf
test
and
pop
and
push
fcmovu
loop
cmp
(bad)
dec
icebp
clc
dec
outs
je
mov
ret
mov
xchg
fcom
ret
cs
scas
xor
inc
int
push
dec
pop
pop
shl
adc
movs
cmp
mov
or
ss
xchg
stos
ins
add
mov
in
pop
and
stc
mov
test
sub
fwait
jle
aas
pop
sbb
xchg
fwait
mov
cmc
fistp
das
cmp
mov
adc
fild
stos
lock
inc
mov
and
lahf
aaa
cs
dec
sbb
popaw
je
aam
jmp
in
add
mov
lods
ret
scas
loopne
or
jb
ficom
hlt
mov
repz
iret
xor
mov
adc
push
lods
loope
jnp
test
sub
scas
push
and
jmp
jne
dec
ret
(bad)
and
icebp
mov
xchg
jno
ss
aam
add
mov
jmp
pop
or
icebp
cmp
inc
jbe
xor
daa
push
sub
mov
mov
shr
outs
loop
jmp
pop
inc
add
mov
scas
in
jbe
clc
call
xchg
mov
or
sbb
cmp
ret
or
cmps
div
sub
in
mov
and
push
and
mov
loop
jecxz
mov
cmp
out
jle
mov
xlat
cmp
jp
pop
je
pushf
jno
mov
out
xchg
add
inc
cmp
aaa
push
cdq
xchg
jmp
movs
adc
inc
cwde
in
pop
push
push
mov
mov
cmp
jmp
lods
cld
outs
jns
inc
mov
(bad)
loope
push
xchg
in
inc
ins
cld
xor
outs
pop
lahf
cdq
rcr
xor
mov
pop
jle
xor
into
jo
jmp
mov
mov
add
mov
and
and
mov
jg
in
cmp
jecxz
mov
mov
std
int3
xor
mov
dec
mov
push
xchg
and
mov
mov
sbb
cmp
adc
cli
fwait
pop
dec
stos
lds
aas
shl
hlt
fwait
dec
loopne
retf
xchg
and
inc
loope
in
stc
jnp
(bad)
xchg
xor
fsubr
mul
inc
mov
scas
pushf
xchg
sbb
sbb
lahf
xchg
add
movs
or
pop
test
jmp
dec
mov
outs
lds
jl
add
data16
outs
and
mov
and
mov
retf
movs
jno
fwait
pcmpgtd
jecxz
adc
in
xchg
pop
and
push
mov
idiv
sub
cmps
imul
sub
jl
adc
popa
dec
dec
aad
pop
push
in
mov
(bad)
cmp
sti
mov
add
xchg
cmp
mov
sbb
das
mov
in
mov
in
mov
aam
xchg
adc
sub
jecxz
rol
test
out
xchg
jge
add
lods
or
in
lods
sahf
sbb
cdq
ffree
mov
adc
xlat
dec
jp
sbb
cmp
popa
add
std
sbb
lahf
in
enter
adc
fidivr
aas
sub
add
cmp
test
mov
das
inc
add
and
inc
cmp
mov
or
jbe
retf
xor
xchg
mov
xchg
test
jmp
inc
repz
cmp
ficomp
adc
mov
xchg
rcr
xchg
rol
test
dec
or
repnz
pop
das
sbb
mov
fmul
jge
sub
mov
push
mov
sbb
add
outs
mov
mov
sub
cmps
leavew
sbb
dec
icebp
sub
push
add
(bad)
push
in
fsubr
mul
mov
das
jae
or
jns
push
mov
shr
retf
fidivr
loope
jge
ret
(bad)
out
popa
xchg
outs
and
iret
dec
sbb
outs
cmp
mov
aas
jne
enter
retf
dec
test
inc
or
and
mov
dec
xchg
pop
adc
add
test
push
hlt
jl
outs
xor
repnz
and
(bad)
xor
stos
push
xchg
mov
inc
or
mov
bnd
adc
dec
xchg
push
add
cli
(bad)
daa
xchg
pop
out
mov
out
pop
adc
gs
addr16
or
jmp
div
lahf
rcr
sbb
mov
div
mov
fidiv
jnp
jle
outs
mov
fadd
fistp
lods
jg
iret
stos
or
pop
(bad)
call
xchg
mov
gs
pushf
lods
and
jle
fcomp
mul
stos
(bad)
jle
(bad)
mov
ins
outs
adc
pop
or
dec
test
sti
addr16
inc
sub
jno
xor
fwait
cmp
add
mov
and
sbb
push
es
cs
pushf
and
sbb
in
popa
add
jo
inc
pop
jne
inc
and
jmp
ins
in
ins
push
and
leave
pop
adc
xchg
xchg
fidiv
mov
cmp
xchg
rcr
dec
mov
iret
loopne
pop
adc
call
mov
inc
(bad)
daa
aad
cmp
jmp
sub
sahf
cmp
fucom
ja
cmp
addr16
mov
jle
mov
sbb
jp
add
xchg
lahf
repnz
sub
pop
je
cdq
mov
xor
addr16
cmp
mov
add
add
fisub
sbb
mov
mov
sti
jne
cdq
mov
scas
retf
jl
imul
stc
test
inc
add
inc
loop
xor
or
in
dec
outs
dec
lea
mov
addr16
inc
ss
mov
les
or
push
(bad)
outs
mov
scas
and
sahf
aas
fld
retf
xor
dec
cmp
out
stos
and
retf
pop
cmp
lods
sub
dec
iret
xor
loope
pop
fsubr
retf
and
xchg
div
adc
mov
std
int3
(bad)
add
cmps
dec
cmp
add
jp
xchg
xchg
test
dec
pushf
jg
test
loop
fwait
cwde
push
ins
test
int3
movs
push
ficomp
iret
xor
dec
xor
cs
pop
sub
fild
in
or
and
lods
not
ins
push
leave
aam
js
movs
les
dec
loope
mov
out
or
scas
sub
int
mov
mov
pop
loopne
loop
and
jb
icebp
mov
xchg
xchg
or
or
mov
repnz
pop
mov
stos
dec
sbb
ins
mov
mov
aas
xor
imul
dec
xor
sub
es
mov
xchg
cdq
nop
push
push
popf
xchg
pushf
mov
add
ja
jo
cmps
imul
test
push
push
sbb
xor
jl
mov
popa
mov
fldcw
dec
jmp
gs
mov
mov
xor
dec
nop
adc
inc
(bad)
mov
mov
jns
or
xor
push
add
jmp
fidivr
retf
or
mov
aad
pop
fisttp
scas
push
cld
mov
cwde
cmp
mov
mov
adc
cwde
fbld
jbe
fs
sar
push
(bad)
mul
popa
add
repz
mov
(bad)
loopne
push
mov
pop
sub
push
dec
inc
pop
sbb
(bad)
inc
inc
dec
test
and
inc
fmulp
in
retf
in
sub
and
pop
push
mov
push
fcmove
aad
sub
jmp
dec
stos
loopne
mov
jne
or
xor
push
scas
add
icebp
not
inc
inc
sub
xor
mov
iret
rcl
out
add
pushf
shl
aad
inc
sub
dec
push
outs
data16
mov
xor
nop
int
and
xchg
int
repz
fcom
push
out
idiv
nop
rcr
pop
and
push
add
xor
sti
cmps
jns
xchg
sub
xor
popa
mov
mov
push
fwait
or
lea
add
mov
dec
sbb
sbb
or
jmp
shl
sub
push
hlt
ja
fisttp
fwait
(bad)
push
ins
fnstsw
and
idiv
adc
jmp
dec
es
popf
jg
cmp
pushf
pop
xor
xor
jmp
rcl
add
xchg
push
loope
les
int
mov
loope
or
div
mov
dec
je
(bad)
push
ret
pop
(bad)
enter
lock
es
fisub
leave
mov
enter
daa
cwde
hlt
push
(bad)
push
and
mov
add
mul
mov
inc
add
cdq
lea
sahf
mov
cld
cld
and
adc
inc
sub
mov
sub
xor
xchg
push
add
cs
lods
pop
and
mov
add
pop
add
xor
jbe
cmp
mov
mov
outs
mov
push
mov
cmc
ret
add
jae
push
mov
sbb
jp
aam
and
jo
cmp
push
dec
int3
imul
xchg
jge
pop
inc
fimul
and
retf
xlat
pop
test
cld
pusha
mov
sbb
xchg
dec
lods
imul
jno
inc
es
or
retf
dec
mov
cmp
jb
jecxz
lock
push
jmp
jp
pushf
ds
jns
inc
stos
mov
dec
lea
sub
daa
and
test
loopne
mov
lea
iret
mov
mov
test
(bad)
sub
fdiv
adc
pop
push
(bad)
pushf
push
mov
call
jecxz
cld
jmp
rol
pop
(bad)
enter
icebp
xor
xchg
mov
test
mov
or
and
nop
push
shl
inc
rcl
pop
and
sbb
jp
push
ins
push
and
jmp
pop
aas
xchg
mov
push
sub
inc
popa
sub
jb
loope
dec
xchg
frstor
sub
mov
test
test
mov
adc
inc
push
popf
xor
pop
add
xchg
xchg
setb
sbb
fiadd
pusha
inc
and
push
aas
test
sub
sbb
push
jmp
(bad)
xchg
and
cmp
(bad)
pop
dec
mov
dec
sbb
rol
push
jno
sar
es
pop
pop
pop
dec
dec
and
sar
mov
jmp
movs
jp
sub
push
xor
(bad)
jnp
and
jnp
rol
pop
inc
in
call
sub
clc
es
push
and
outs
repnz
les
sbb
arpl
or
data16
(bad)
mov
inc
lds
daa
leave
lea
retf
mov
ret
xor
mov
mov
push
adc
punpckldq
test
add
xchg
cli
clc
adc
aad
in
push
cwde
fimul
push
mov
mov
xchg
fyl2xp1
pusha
dec
test
int
and
xchg
jg
jb
xchg
inc
es
add
xor
push
nop
ja
mov
and
jb
pop
and
sub
bnd
dec
cld
in
pop
cli
cmps
pop
pop
test
xor
imul
inc
cli
test
xlat
jp
aad
loopne
sahf
sbb
xchg
dec
popf
xor
mov
sub
fnstsw
push
dec
mov
add
ror
cmp
or
xchg
and
add
xchg
fst
imul
(bad)
xor
sub
test
add
add
xchg
lock
jle
xchg
outs
add
add
(bad)
ds
aas
mov
cmp
addr16
push
cld
mov
dec
pop
stc
push
lods
paddq
out
mov
xchg
mov
mov
xor
out
or
sub
cmps
shl
or
xlat
cmp
rol
mov
mov
pop
jns
jmp
mov
inc
adc
pop
retf
sahf
inc
lahf
loopne
push
leave
inc
ds
push
stos
cdq
push
fwait
pop
inc
sbb
pop
in
icebp
jnp
mov
in
sub
mov
hlt
mov
out
xor
(bad)
jne
push
imul
nop
(bad)
pop
mov
mov
je
mov
add
(bad)
hlt
pop
fldcw
in
add
sub
stos
fst
ins
cmps
dec
pusha
push
pop
mov
ret
and
int
adc
fist
cmps
mov
sbb
xchg
ror
mov
mov
enter
sub
jge
push
pop
sub
xchg
mov
jle
push
inc
dec
int3
test
pop
push
test
pop
push
mov
hlt
ficomp
lods
mov
scas
and
xor
pop
cli
xchg
mov
xlat
out
xchg
loope
sbb
ret
add
xchg
(bad)
adc
add
loopne
loope
inc
ror
les
sbb
mov
mov
mov
(bad)
xlat
sahf
inc
lods
push
lea
aas
cdq
aaa
sbb
icebp
sub
js
add
xchg
rcr
aaa
pop
shr
mov
or
dec
(bad)
out
sti
cs
or
fs
mov
aam
add
sub
inc
out
and
bound
fdivrp
cmc
pop
imul
xor
inc
xchg
test
hlt
sub
or
mov
mov
xchg
aas
push
mov
mov
mov
sbb
xor
push
daa
dec
mov
sbb
push
mov
dec
adc
sub
(bad)
mov
mov
clc
addr16
test
test
jns
push
sub
icebp
fsub
retf
leave
sub
lds
mov
inc
xchg
fstp
stos
pop
xchg
or
into
call
ss
push
jno
aaa
mov
test
call
jbe
cmp
pop
sbb
jne
adc
rcr
fidiv
fs
or
cmp
jmp
(bad)
lahf
xor
fistp
leave
push
retf
imul
push
dec
out
test
inc
cmps
jg
fnstenv
fmulp
aas
out
push
add
push
and
xor
sub
cmp
xchg
ins
mov
idiv
in
push
and
scas
or
ret
sbb
in
mov
and
xchg
out
stos
pop
test
mov
stos
jne
lock
retf
mov
gs
pop
pop
mov
mov
jbe
mov
dec
loope
ins
inc
and
fmul
into
inc
rcr
mov
pop
movs
push
inc
xor
ds
adc
jbe
cmp
outs
lods
sub
(bad)
mov
add
or
mov
push
mov
stc
xor
cs
push
xor
inc
cmps
sbb
pusha
jmp
mov
and
lgs
clc
outs
mov
jmp
push
sbb
pop
ds
es
and
jmp
jnp
int3
not
pop
arpl
popf
pop
mov
ret
push
ss
pusha
cwde
mov
dec
in
xchg
or
daa
psubd
dec
inc
push
mov
stc
mov
mov
icebp
pop
jmp
lods
es
sbb
cmp
push
shl
xor
int3
and
mov
movs
mov
mov
pop
inc
mov
out
jnp
sub
cmp
das
mov
cmp
mov
xor
mov
add
jnp
(bad)
(bad)
lds
(bad)
add
test
xchg
pop
sahf
lea
ds
outs
or
mov
pop
xchg
or
mov
inc
outs
in
int3
int3
mov
mov
jecxz
push
jmp
rol
das
push
scas
mov
imul
mov
jnp
(bad)
test
mov
icebp
and
sub
pusha
fincstp
jp
inc
outs
(bad)
jae
sub
add
pushf
(bad)
sub
(bad)
xchg
jmp
retf
pushf
sbb
int
and
pop
cdq
imul
mov
fwait
dec
aaa
hlt
jo
(bad)
sub
cmp
or
pushf
ror
enter
jb
(bad)
out
mov
daa
push
and
add
aam
aad
or
out
lock
xchg
out
stc
sub
push
stc
jle
(bad)
outs
mov
mov
sub
push
cmps
mov
fs
daa
outs
call
pop
les
out
jbe
loopne
leave
xchg
scas
inc
out
jp
adc
popf
ins
push
cld
fcom
addr16
adc
inc
icebp
cwde
and
push
imul
dec
mov
inc
lock
es
sbb
jb
push
and
cdq
(bad)
gs
mov
inc
push
es
ror
mov
sar
jecxz
shl
or
cmc
test
adc
jle
scas
dec
sbb
inc
sub
dec
or
pushf
mov
and
lea
retf
push
jnp
mov
into
das
push
jns
cmp
cwde
or
mov
xchg
loope
fdivr
and
mov
cwde
repz
jno
scas
fmul
mov
test
sub
fild
in
cmp
mov
push
mov
cld
push
fsub
call
xor
sbb
dec
(bad)
mov
psubsw
jmp
stc
inc
mov
aam
fld
push
inc
mov
xlat
fsubr
jo
push
imul
cdq
xchg
jmp
or
test
pop
movs
mov
push
movs
mov
retf
sbb
fwait
cld
and
xor
loopne
pop
movs
sbb
ja
sbb
add
cld
test
test
mov
(bad)
(bad)
test
std
jne
push
xchg
cmp
gs
and
test
das
dec
jg
arpl
pushf
mov
xchg
xor
cmp
dec
cmc
ins
sbb
sbb
pop
jb
cmp
dec
fmul
je
pop
pop
out
inc
and
mov
pop
lock
mov
pushf
push
mov
iret
dec
push
pusha
retw
and
ds
dec
fucomip
add
add
inc
arpl
ss
and
mov
retf
jg
jl
xchg
popf
jnp
ret
xor
in
mov
out
mov
mov
pusha
jne
jp
je
int
outs
loopne
test
lods
sub
test
out
mov
add
inc
add
out
lods
add
adc
in
or
shl
cdq
jne
addr16
jno
jne
in
popa
pop
movs
(bad)
in
sub
leave
cmp
dec
loope
sub
jecxz
pop
fld
es
es
push
xchg
jecxz
fistp
add
pop
mov
int
cs
out
sbb
mov
or
inc
iret
adc
sub
dec
cmp
dec
rcr
addr16
scas
xor
pop
xchg
mov
mov
shl
enter
or
test
and
fisub
sar
mov
and
or
pop
cmp
jae
es
cmp
sbb
movs
cmps
and
mov
je
stos
mov
sub
ja
mov
mov
ins
mov
fst
outs
pop
(bad)
and
cmp
jl
stos
adc
gs
int
loop
inc
cmp
or
xchg
mov
fidiv
in
test
stos
aam
dec
cmps
in
jle
pop
inc
lahf
push
js
mov
mov
dec
rol
out
mov
neg
repz
sbb
or
pusha
test
int3
mov
test
in
and
fwait
aam
pop
xchg
(bad)
daa
aad
jl
mov
js
sbb
test
mov
lds
xchg
daa
add
rcl
addr16
cmp
mov
in
ja
fwait
ret
ja
in
xchg
imul
cwde
sub
scas
int3
fwait
cmp
int
movs
in
or
dec
sti
das
xor
or
sub
xlat
jmp
jl
or
lods
fnstenv
scas
sub
mov
aaa
adc
stos
lods
out
sub
scas
push
dec
(bad)
repz
scas
push
call
ret
out
pop
(bad)
mov
mov
pop
dec
into
je
mov
int3
dec
idiv
es
cli
lods
iret
inc
inc
add
jbe
adc
int3
or
sbb
push
mov
(bad)
jmp
push
and
add
pop
sub
clc
mov
repz
mov
or
popa
xlat
sbb
xchg
or
pop
stos
cmc
pushf
test
inc
pushf
mov
jae
enter
ja
fdiv
int
push
xchg
adc
movs
push
pushf
sub
(bad)
das
jg
cmps
test
mov
je
cli
lea
inc
mov
data16
rol
lock
mov
push
or
jbe
and
and
dec
mov
adc
test
adc
mov
into
xchg
lahf
mov
movs
ja
mov
int3
out
sti
out
call
xchg
xor
adc
xlat
or
clc
stos
push
nop
xchg
dec
mov
add
scas
ror
mov
das
pop
push
aam
sbb
inc
push
inc
jl
ins
scas
cmps
aas
fcmovbe
xchg
and
or
mov
sub
inc
cwde
mov
aad
mov
js
loope
out
mov
iret
scas
mov
loope
mov
add
sub
daa
jo
jmp
add
(bad)
mov
stc
stc
sbb
in
loope
mov
sbb
or
sti
push
test
push
xor
pop
int
pop
xchg
push
mov
outs
rcr
fidivr
sti
(bad)
test
shl
in
mov
adc
pop
xlat
xor
out
inc
jecxz
clc
pop
(bad)
mul
add
out
add
adc
test
sar
xor
fnstcw
(bad)
(bad)
cmps
shr
sti
in
movs
sar
push
mov
inc
jo
jne
mov
das
and
pop
inc
jnp
test
mov
sub
inc
fmul
pop
imul
and
iret
pop
xor
call
lock
or
jp
cdq
in
inc
mov
imul
jbe
cmp
cs
leave
mov
imul
fcom
std
mul
add
cmp
sbb
sahf
(bad)
aam
pop
jo
rcl
inc
je
inc
stos
jo
mov
ficomp
push
outs
idiv
adc
in
adc
out
inc
scas
push
push
test
repz
ret
ds
adc
pop
sbb
inc
fisub
fwait
pop
in
xchg
pop
cmc
mov
mov
dec
add
pop
(bad)
push
sub
stc
loop
daa
push
or
xchg
dec
sub
(bad)
mov
sbb
adc
aad
(bad)
pop
enter
mov
rol
xchg
inc
(bad)
leave
dec
mov
js
int
scas
(bad)
xor
sub
sbb
cmp
dec
int
sub
and
loopne
add
jp
lds
cwde
or
push
and
imul
cmp
pop
inc
sub
mov
cld
adc
xlat
inc
int3
add
scas
pop
shr
outs
and
jmp
xchg
loopne
mov
jecxz
shr
xor
pop
inc
popf
aam
aas
in
loopne
push
movs
jb
(bad)
clc
push
ret
sub
into
les
cwde
and
out
pop
(bad)
outs
jg
mov
inc
push
mov
jmp
mov
call
retf
fiadd
mov
adc
and
mov
fidivr
jmp
cdq
fs
test
pushf
push
pop
pop
sbb
out
xchg
shr
js
push
and
sub
stc
pop
fisttp
out
das
gs
jnp
dec
pop
ja
inc
(bad)
fcom
fld
cli
cmp
dec
sti
mov
inc
add
mov
enter
xchg
lods
(bad)
loop
call
sbb
and
mov
mov
(bad)
and
push
xor
or
(bad)
xchg
fs
add
test
and
add
clc
add
inc
add
aad
mov
mov
pop
aam
out
lock
jnp
cmp
or
(bad)
push
movs
jbe
xchg
xabort
xor
aam
std
hlt
cli
and
sbb
mov
test
cmp
mov
sti
aas
jp
mov
or
out
(bad)
cmp
je
push
and
retf
mov
sub
xor
imul
ffreep
dec
jbe
jg
sub
xchg
das
jne
inc
mov
loope
cmc
xor
mov
test
adc
pop
pop
pop
jmp
mov
pop
test
jmp
jae
mov
int
mov
rcl
mov
call
push
(bad)
fptan
and
rol
imul
push
int
inc
pop
pusha
xor
inc
int
xchg
lods
sahf
pop
xor
xchg
xor
ficomp
movs
mov
into
pop
adc
test
ret
leave
fmulp
mov
(bad)
fimul
xchg
jmp
jnp
out
push
xor
(bad)
adc
popf
test
add
imul
sub
and
inc
div
ret
dec
je
cs
fstp
rol
pop
jl
mov
add
ja
cmp
lds
mov
es
std
aad
mov
pusha
jno
push
pop
xor
add
jb
call
scas
sbb
and
call
cmp
loop
pusha
daa
pop
fisub
xchg
jge
jnp
test
into
mov
pop
outs
inc
push
repnz
pop
inc
cmc
imul
mov
(bad)
pushf
loope
(bad)
adc
jge
adc
test
push
pop
aad
ds
pop
loopne
cmc
push
fwait
jmp
push
sub
ja
out
mov
and
test
nop
jle
outs
popa
pop
daa
push
pop
xor
ret
cmp
xor
sbb
out
stc
sbb
js
jo
jne
jb
inc
addr16
js
push
out
fcomp
xchg
jnp
mov
jmp
(bad)
popa
cli
or
xchg
cmp
stos
xor
mov
bound
push
repz
mov
adc
xchg
in
es
stc
clc
sbb
cmp
cdq
out
int3
sub
in
sub
mov
repnz
loop
sub
pop
add
mov
test
ss
dec
jb
lods
cli
mov
xor
(bad)
and
pop
mov
fs
aad
cmc
mov
out
fmul
pop
shl
sub
jmp
jo
mov
movs
mov
ins
lds
nop
pop
int3
call
lods
cdq
xchg
cmc
shl
retf
cmps
jp
and
jbe
push
bound
vpcmpeqw
xor
sahf
sbb
push
movs
sbb
sbb
and
xor
jmp
cmps
and
fcom
cdq
dec
retf
adc
ja
inc
mov
push
mov
jnp
nop
out
ror
cmp
mov
mov
jp
xchg
fadd
out
jbe
fcomp
mul
or
xor
ins
test
sbb
pushf
adc
jmp
or
sub
mov
inc
test
xchg
xchg
repnz
cmps
and
out
sbb
in
adc
mov
push
pop
push
inc
mov
add
ss
repnz
(bad)
ss
inc
(bad)
pop
mov
dec
loopne
ds
test
inc
retf
adc
mov
ret
fidiv
pushf
ror
xchg
aam
mov
push
repz
xchg
test
lea
test
jp
mov
fstp
sbb
inc
into
adc
jns
out
icebp
push
in
ror
pop
mov
jo
mov
pop
arpl
or
push
xor
mov
sbb
inc
lea
add
popa
ret
jl
stc
push
add
pop
cmp
outs
pusha
add
aaa
xchg
sub
mov
lock
push
xchg
int
cmps
sub
in
jnp
loopne
xor
or
retf
imul
cmps
jb
or
sub
ins
jns
and
jne
cmp
ret
fsub
scas
es
and
dec
(bad)
icebp
cld
fisub
or
cld
fstp
sar
xlat
add
dec
aam
sbb
stc
mov
mov
or
lahf
(bad)
mov
xor
sbb
mov
rol
sub
inc
fidivr
in
cmp
adc
xchg
and
push
(bad)
pop
or
fstp
outs
pushf
popa
retf
fs
mov
ret
xor
(bad)
jmp
test
call
repz
cld
je
pop
aas
movs
cmps
fs
cli
lock
ror
push
data16
add
call
dec
aaa
pushf
jbe
add
cmps
(bad)
daa
call
xor
adc
ret
outs
xchg
mov
imul
mov
sbb
mov
call
hlt
mov
or
jbe
scas
pop
and
js
add
leave
and
stos
arpl
pop
ret
or
(bad)
mov
aam
jecxz
ins
test
nop
jg
mov
addr16
cmc
sbb
jne
icebp
lods
mov
xor
mov
adc
ret
dec
popa
inc
imul
mov
cmp
int
iret
and
mov
das
add
cli
ret
jne
(bad)
dec
mov
repnz
or
jno
lods
mov
cmps
fidivr
call
jmp
(bad)
push
popa
test
test
cmc
xor
pop
fnsave
cmp
lods
push
mov
imul
mov
pop
add
dec
idiv
clc
add
sti
daa
cmp
(bad)
mov
jp
adc
xchg
jmp
outs
popa
fidivr
shl
repnz
in
pop
sbb
or
sub
les
adc
out
dec
ja
pushf
test
jmp
mov
call
mov
xor
or
pushf
jns
adc
js
(bad)
pop
jo
or
gs
out
push
jne
test
stos
mov
cmp
pop
stos
(bad)
sub
aam
std
ret
int
jmp
in
or
lock
mov
add
dec
aad
lahf
push
mov
mov
mov
loopne
cmp
xor
fisub
push
popa
jo
cmp
cld
test
inc
fwait
xor
data16
jecxz
movs
pop
mov
mov
pop
(bad)
imul
repz
xor
popf
jp
sti
mov
push
jnp
mov
movs
adc
jmp
ror
iret
inc
pop
add
pop
cmp
sbb
imul
mov
mov
xchg
cmc
sbb
jp
inc
xor
addr16
fcomi
mov
adc
ror
cld
mov
(bad)
jmp
sub
scas
push
add
jge
push
sbb
sbb
push
jbe
push
inc
pop
pop
push
push
les
shl
cli
(bad)
xor
mov
js
inc
and
out
test
test
add
cdq
push
repnz
sar
jp
pop
ss
push
ror
xlat
mov
mov
out
xchg
adc
xchg
out
sar
mov
loope
or
stc
pop
add
sub
add
stos
mov
inc
inc
das
jno
outs
ins
xor
mov
je
mov
loopne
iret
fisubr
rcr
xchg
sbb
and
in
test
hlt
test
cmp
or
cs
pop
and
imul
dec
ins
or
fdivr
iret
lods
in
pushf
shl
mov
std
pop
or
in
xchg
mov
mov
or
cld
mov
es
loopne
push
push
mov
aas
leave
mov
(bad)
pusha
cli
in
mul
pushf
aaa
pop
jle
xchg
sub
movs
arpl
pop
fist
mov
pop
sbb
push
sbb
xor
inc
aas
daa
pop
or
dec
or
bound
push
aas
ins
or
xchg
push
or
or
jns
adc
xchg
adc
mov
loope
or
inc
popa
add
cmp
(bad)
into
xor
or
leave
test
stc
jmp
bnd
in
call
jo
ret
mov
cli
int
int3
retf
dec
aad
rol
adc
mov
dec
push
fs
dec
pop
cli
repnz
push
bound
stos
inc
mov
pop
xchg
sbb
mov
idiv
adc
jne
call
jo
sbb
push
inc
and
adc
pop
cdq
ret
repnz
es
data16
out
jb
sbb
das
daa
push
gs
mov
and
lods
jno
jl
inc
xchg
inc
enter
out
mov
ins
jno
out
fsubr
jmp
clc
test
(bad)
ret
cmp
xchg
movs
and
mov
in
dec
test
add
mov
inc
loope
pop
ins
sub
push
in
aam
movs
sub
(bad)
xadd
cmps
leave
mov
fdiv
mov
js
jnp
lods
push
faddp
inc
jmp
int3
jnp
ret
sbb
xor
outs
jecxz
pop
test
mov
xor
mov
jae
sub
push
int
dec
sbb
es
cmp
add
mov
loope
push
dec
cmp
out
sbb
xor
cmp
mov
sbb
lahf
xchg
inc
sub
scas
push
inc
push
and
pop
movs
in
mov
clc
out
repnz
gs
out
push
icebp
or
fild
mov
and
or
xor
inc
pop
mov
inc
cmp
and
pop
lods
push
jnp
cmp
jbe
mov
pop
cli
inc
adc
add
mov
cmp
adc
clc
xchg
push
mov
sti
push
es
adc
push
push
mov
sahf
pushf
shl
xchg
mov
sub
aad
stos
xor
jl
adc
hlt
enter
mov
or
inc
jp
popw
fidivr
push
jp
xor
mov
sbb
shl
jno
jmp
xchg
icebp
inc
push
sub
sub
push
jne
inc
sub
sub
(bad)
out
call
inc
int
push
iret
fwait
sub
or
inc
scas
xchg
sub
std
xchg
mov
imul
out
push
nop
sub
jmp
scas
sbb
cwde
adc
out
shl
stc
xchg
clc
push
dec
lahf
xchg
(bad)
adc
ret
jne
mov
in
jmp
cmp
cli
daa
push
mov
xor
sar
cwde
add
fld
sub
cmp
mov
xor
lahf
loopne
xor
ror
fs
rol
or
rcl
dec
(bad)
adc
ja
adc
in
ds
(bad)
or
jnp
stos
jae
cs
cmp
fsubrp
push
inc
shl
jmp
(bad)
sti
push
mov
scas
(bad)
clc
pop
gs
dec
push
push
mov
jl
ret
xor
xor
ins
rcr
test
out
mov
dec
or
fldenv
icebp
mov
shl
js
int
je
outs
sti
aad
mov
cli
or
clc
call
mov
adc
movsx
icebp
xchg
mov
xchg
loope
test
cwde
loop
ins
push
push
inc
dec
nop
loope
sub
mov
push
ins
scas
lds
rol
adc
and
xchg
add
in
sbb
iret
cmp
nop
ins
jno
cdq
je
mov
daa
and
sti
or
push
and
mov
jge
fwait
add
mov
dec
mov
pushw
div
out
inc
ret
cli
or
sub
jnp
retf
cmp
ret
js
jp
das
gs
js
test
inc
cmp
sub
(bad)
and
adc
and
add
mov
test
mov
mov
dec
cmc
retf
hlt
in
outs
push
inc
mov
mov
cli
cmp
loope
in
std
dec
mov
fmul
push
cld
int3
repnz
mov
inc
adc
mov
call
and
cmc
loopne
enter
dec
sub
sbb
sbb
add
std
icebp
or
jne
jne
add
ret
out
cmps
mov
adc
imul
pop
fwait
xchg
cmp
bnd
adc
lahf
mov
call
pop
pushf
push
hlt
mov
retf
test
lds
mov
or
fs
test
jb
sbb
enter
dec
int3
push
jle
fsub
sbb
jns
mov
sub
xlat
sbb
ds
in
imul
mov
add
lea
daa
int3
cli
cmc
sub
cmps
hlt
adc
aam
je
mov
xor
imul
pop
je
fbstp
fadd
les
enter
stos
xchg
cmp
mov
cmc
sub
das
dec
inc
cli
fild
push
nop
mov
and
or
out
xchg
cs
dec
jp
ins
pop
jmp
leave
sbb
and
leave
push
cmp
leave
enter
adc
fs
test
test
cmps
jo
or
inc
pop
enter
cmp
mov
pop
lds
adc
dec
sbb
sbb
ins
outs
out
enter
rol
sbb
pushf
rcl
push
fiadd
in
sub
mov
add
mov
ja
xor
inc
mov
in
pop
push
not
lea
outs
fistp
xchg
cmp
(bad)
xchg
jne
lea
mov
cmp
cmp
mov
stos
test
popf
ret
(bad)
mov
arpl
sbb
inc
outs
fnsave
xchg
dec
das
stc
out
inc
(bad)
sti
and
and
shl
xchg
xchg
and
out
es
push
xor
jno
call
(bad)
mov
jmp
xchg
fild
pop
ficomp
ss
out
cmps
push
cmp
movs
jb
or
pop
movs
rol
jmp
sub
jmp
fiadd
inc
cmps
pop
es
mov
dec
test
mov
clc
xchg
jmp
add
add
and
(bad)
fiadd
repz
leave
dec
int3
iret
in
enter
sub
mov
aam
pop
jecxz
scas
xor
into
adc
push
rol
or
dec
imul
inc
cmps
bnd
out
arpl
sub
xor
jne
popf
cli
mov
inc
mov
call
fsubr
push
scas
das
xchg
push
cmc
std
inc
xlat
or
pop
cmp
mov
hlt
icebp
mov
or
xchg
push
outs
and
icebp
inc
je
and
fucom
pop
and
and
bound
adc
scas
into
fbstp
or
mov
mov
test
adc
test
add
movs
dec
lea
jg
pop
mov
xchg
fld
and
mov
adc
and
pusha
aaa
iret
dec
cmp
adc
xor
xor
js
xchg
lahf
push
scas
stc
iret
ror
sbb
aaa
pusha
lock
ficomp
add
push
leave
mov
fist
int3
and
pop
scas
cmp
pop
shl
ins
xor
mov
divps
adc
adc
sub
pop
mov
loop
and
stos
sbb
sahf
push
inc
es
std
dec
fcomp
loop
aas
dec
imul
mov
jl
sbb
clc
xor
aaa
test
imul
sbb
push
pop
lea
adc
sar
add
dec
cld
adc
push
hlt
jo
push
cmps
das
xlat
cld
mov
adc
cmp
mov
sub
dec
mov
in
iret
adc
lock
pop
push
push
out
je
stos
ins
cmc
inc
call
ror
daa
mov
sub
mov
jnp
out
imul
in
sub
pop
jne
in
xchg
adc
cmps
es
es
mov
fs
mov
jmp
or
cmps
sub
xchg
call
sub
std
push
addr16
lock
cmps
dec
retf
mov
pop
adc
and
(bad)
mov
mov
sar
adc
mov
push
sbb
mov
mov
outs
dec
xor
mul
pushf
mov
or
in
cdq
rcr
pop
cmp
xlat
pop
xchg
imul
push
adc
(bad)
test
xlat
mov
loopne
aaa
imul
jno
iret
jg
call
mov
fbld
pop
js
add
cmp
leave
push
push
mov
jl
mov
mov
cmp
sub
rcr
xchg
inc
cmps
mov
xchg
add
xchg
int3
dec
sub
fwait
push
xor
repnz
push
test
sub
aaa
mov
cmp
sahf
inc
cmp
lds
mov
fsub
mov
inc
(bad)
fidivr
mov
stos
ds
add
stc
sub
fcomp
movs
mov
mov
xor
sti
push
push
inc
jmp
add
lds
xchg
shr
out
lock
sbb
mov
sub
adc
or
mov
ror
leave
jne
jle
sbb
int
lods
add
mov
outs
ss
popa
sahf
ret
retf
pop
dec
out
push
fsub
outs
enter
sbb
mov
js
pusha
jmp
pop
sub
cmp
mov
fcmovnu
inc
ins
jae
popf
cmc
int
aam
pop
xchg
xchg
jmp
mov
mov
loope
push
add
sbb
push
jle
jo
pop
sbb
mov
cmp
dec
xchg
or
adc
loop
and
jne
xor
ret
push
sti
xor
mov
leave
(bad)
cwde
call
repz
inc
push
outs
ret
and
inc
ins
and
aam
or
mov
dec
test
sbb
xchg
jns
and
loope
push
arpl
(bad)
sub
and
push
add
mov
(bad)
push
and
push
jge
add
fisttp
icebp
repnz
test
pushw
adc
dec
test
mov
loope
lock
out
ret
pushf
jmp
inc
dec
pop
sbb
mov
pushf
js
movs
cmp
cmc
xlat
in
outs
xchg
jecxz
nop
sub
scas
into
int
imul
int3
cdq
ins
mov
(bad)
inc
add
pop
xchg
adc
cld
out
and
push
mov
test
cmp
loopne
mov
outs
mov
arpl
cmp
sti
xchg
adc
pop
stc
daa
fmul
sbb
sub
sar
mov
push
adc
xchg
popf
in
out
adc
lods
add
scas
outs
nop
jns
jb
ror
sbb
daa
loope
int
outs
pop
add
mov
dec
fadd
sbb
mov
call
test
push
adc
popf
push
rcr
pop
push
mov
shr
dec
xor
dec
sbb
push
and
xchg
xor
mov
stos
into
ret
ja
xor
movs
ret
cs
sub
sub
leave
stc
dec
in
lahf
arpl
inc
push
pop
and
inc
movnti
inc
retf
stc
int
mov
sti
mov
inc
add
les
hlt
inc
pop
pop
out
xor
dec
popf
xor
sbb
mov
jae
pop
fnstcw
and
and
sbb
mov
out
inc
not
push
mov
mov
cmp
jne
mov
inc
mov
dec
jecxz
xor
or
repnz
xchg
in
jmp
dec
jbe
xlat
les
inc
sub
lods
int
cdq
into
inc
imul
test
popa
rcr
cs
loopne
jo
movs
scas
push
test
xchg
or
cmps
mov
into
fs
mov
inc
mov
outs
mov
cmp
mov
sbb
pusha
test
mov
sub
fistp
mov
movs
add
xlat
call
add
smsw
dec
ret
in
call
inc
repnz
ins
inc
xor
dec
aam
inc
mov
out
pop
sahf
mov
mov
into
mov
xor
add
lock
in
paddusb
mov
cwde
or
mov
xchg
push
outs
jae
jae
add
jne
test
mov
movs
fbld
and
mov
setns
leave
sbb
enter
inc
lds
mov
push
jnp
dec
(bad)
(bad)
imul
inc
mov
jl
(bad)
int
call
pusha
lds
mov
and
cmp
call
jge
(bad)
loope
inc
adc
dec
push
test
setns
push
mov
scas
dec
ins
jmp
out
outs
pop
les
or
imul
retf
xchg
adc
dec
cmp
ss
repz
or
lock
sahf
and
and
imul
pop
push
sub
inc
call
and
cmp
dec
fstp
dec
mov
push
inc
fxch
shl
data16
shl
ins
or
sbb
jae
enter
fwait
mov
mov
(bad)
jo
xchg
jae
fcmovne
shl
out
(bad)
or
sbb
rcl
xchg
stos
or
movs
pop
rol
add
mov
add
lods
out
push
sbb
mov
cmc
inc
fidiv
mov
not
(bad)
xchg
mov
xlat
das
scas
cld
mov
pop
inc
add
fmulp
(bad)
fdivr
inc
mov
mov
mov
cmc
xlat
inc
aad
or
jp
and
mov
enter
icebp
cmp
int3
jle
push
imul
dec
stos
div
mov
(bad)
cmps
push
out
add
enter
jb
lahf
ficomp
loop
lahf
(bad)
cs
sbb
adc
pop
cmps
outs
stc
enter
mov
daa
pop
sbb
or
stos
dec
test
adc
add
push
into
push
jno
inc
ja
test
lods
test
inc
add
pop
leave
cmp
cld
mov
out
int
fs
xchg
imul
lods
in
fdiv
adc
xor
push
shr
dec
aas
icebp
cmc
jge
jp
or
push
sbb
stos
mov
mov
mov
cmps
icebp
push
cmps
clc
nop
icebp
inc
inc
lock
push
push
popf
retf
mov
pop
adc
stos
mov
mov
jp
ret
loope
push
mov
gs
inc
cld
cli
push
loopne
sub
mov
sbb
(bad)
shl
dec
mov
stos
jmp
jae
mov
(bad)
ds
fcomp
sub
imul
and
ret
cmp
xor
outs
cmp
mov
rcr
stc
xchg
push
js
imul
ja
adc
inc
inc
into
retf
jno
xor
xor
push
cwde
stc
call
aad
ja
sub
sti
add
pop
mov
mov
and
mov
aam
sbb
add
jbe
or
dec
jb
(bad)
popa
xchg
gs
pusha
pop
popa
sahf
and
or
jns
inc
mov
and
fidivr
repz
cmp
mov
aam
sub
jnp
pusha
jae
ffreep
scas
adc
data16
stos
push
sub
sub
cmp
pushf
and
inc
retf
sbb
push
jecxz
jg
mov
data16
jmp
pop
pop
mov
mov
inc
mov
mov
fucomp
dec
sti
mov
retf
icebp
dec
xor
mov
stos
popf
loop
gs
out
xchg
add
retf
std
enter
inc
gs
inc
mov
sbb
scas
push
mov
xor
mov
mov
xchg
lock
mov
add
call
push
push
(bad)
cwde
push
test
mul
push
dec
xchg
cmps
inc
dec
mov
fadd
pop
call
cwde
bound
retf
test
cdq
clc
jno
mov
out
dec
repnz
xchg
icebp
inc
es
sub
mov
nop
popa
lock
out
(bad)
sti
and
mov
mov
mov
iret
push
dec
and
pop
icebp
rcr
repnz
mov
ret
gs
add
in
dec
mov
or
out
in
pop
psubd
mov
inc
and
outs
ror
lds
or
call
(bad)
add
adc
enterw
retf
pop
std
jge
jb
and
test
mov
es
cmp
push
shl
popf
cli
pop
loopne
fisttp
scas
mov
je
jo
ret
fwait
jle
add
pop
mov
inc
push
pop
cmp
xor
mov
aaa
je
inc
into
ins
jge
outs
sub
xchg
pop
ror
mov
mov
call
pop
mov
movs
xlat
cld
(bad)
aaa
out
adc
pop
outs
mov
cmp
pop
dec
sbb
mov
test
adc
lods
fidivr
call
inc
sub
int3
div
push
xchg
lods
mov
movntq
test
dec
mov
push
cmp
mov
ins
push
out
ja
xor
aad
jb
fsubr
ds
pop
jmp
mov
sbb
inc
ret
ss
sbb
xchg
push
das
inc
call
iret
jae
into
bound
jecxz
cmp
ja
ds
dec
mov
mov
stc
movs
add
jbe
jl
pop
xor
hlt
mov
xlat
cmp
cs
add
shr
fiadd
pop
dec
xchg
fwait
xchg
inc
jmp
dec
jge
std
sub
sub
inc
sbb
push
sub
fwait
or
push
sub
loope
add
loopne
jl
sar
fcomp
xlat
and
out
jl
rcl
enter
imul
movs
retf
nop
hlt
enter
mov
(bad)
mov
inc
cmp
or
xchg
ins
scas
pop
pop
adc
in
sahf
popa
add
mov
imul
inc
addr16
imul
sbb
aad
int
je
cmp
lahf
xor
xchg
scas
rol
jle
inc
jge
xchg
sub
and
lods
data16
test
aad
lea
push
or
add
xlat
jl
push
aam
jb
push
add
icebp
mov
out
add
inc
cwde
pop
in
vunpckhps
prefetcht0
fimul
sub
add
push
dec
dec
xor
mov
add
cmps
or
sbb
mov
adc
(bad)
pop
scas
scas
ror
div
test
mov
call
xchg
jp
jge
dec
jae
fstp
sub
push
xor
mov
xchg
and
mov
test
seto
dec
cmp
inc
dec
inc
cmps
cmps
jecxz
mov
mov
jp
jge
or
call
daa
cmp
repz
add
adc
mov
pop
bound
fldenv
mov
and
xchg
cmp
nop
out
enter
jbe
sub
jle
je
ins
daa
push
out
in
dec
pop
and
cmp
hlt
int3
pop
dec
in
popf
cs
jb
daa
daa
jg
lds
mov
mov
pop
pop
lahf
sub
cmp
sub
push
dec
jg
addr16
jecxz
dec
inc
xchg
lea
xor
inc
and
xor
sub
sub
add
retf
pop
retf
jmp
inc
cmp
xchg
ss
mov
adc
jmp
jne
xchg
into
and
fs
and
inc
adc
jnp
sub
retf
or
into
mov
push
mov
add
scas
and
jo
mov
loop
popa
or
imul
pop
sbb
pop
or
test
adc
push
push
ror
ss
xchg
mov
dec
sub
xor
mov
add
mov
outs
movs
inc
add
add
cmp
xor
xchg
mov
or
in
sbb
fs
add
jle
add
sub
call
outs
adc
and
scas
ins
ret
(bad)
(bad)
mov
xor
call
in
pop
pop
imul
xchg
pop
xchg
(bad)
inc
into
push
mov
fwait
aad
xchg
or
fwait
sahf
(bad)
jge
xchg
push
add
sbb
out
sub
inc
add
pop
mov
aaa
or
dec
xlat
sub
fistp
lea
jg
mov
pop
mov
mov
inc
push
adc
push
and
fbstp
mov
scas
pusha
add
cli
lods
retf
xor
sti
jmp
mov
lock
add
jmp
mov
jne
push
mov
dec
cmp
sti
cmp
mov
dec
div
pop
(bad)
cmp
mov
pop
shl
sbb
imul
cmc
inc
and
test
mov
cs
sub
or
or
jle
js
(bad)
mov
dec
dec
retf
sub
bound
cmp
lds
ret
push
push
pop
dec
pop
ins
(bad)
mov
mov
lahf
std
dec
inc
or
test
xlat
cli
push
and
enter
pop
mov
mov
fidiv
outs
pop
retf
fdiv
dec
nop
or
mov
and
jl
jae
mov
stos
pushf
adc
frstor
js
fidiv
add
mov
fcomp
and
mov
cmc
add
icebp
inc
fwait
mov
xor
mov
sbb
xchg
call
adc
ins
xor
addr16
sbb
mov
pusha
test
push
cmp
adc
scas
mov
jmp
js
gs
jbe
push
sbb
sub
jno
cld
push
outs
adc
gs
pusha
(bad)
fucomp
adc
pop
sbb
leave
pop
rol
mov
jmp
xor
mov
(bad)
and
js
out
loope
mov
in
out
adc
sahf
ret
(bad)
sbb
mov
pop
xor
dec
inc
push
(bad)
test
into
xor
test
lds
mov
add
movs
xchg
and
add
mov
ins
aam
mov
jns
ret
inc
add
fild
retf
push
(bad)
add
mov
push
inc
int3
into
jmp
call
les
mov
xchg
fistp
movs
into
sub
push
out
loopne
retf
add
inc
mov
sub
xchg
test
aas
mov
sub
cmp
dec
pop
push
rcr
les
push
addr16
ds
mov
repz
pop
jg
mov
dec
rcl
jecxz
inc
inc
jle
inc
sbb
repnz
clc
ret
enter
je
and
sub
loope
mov
cmp
lods
sbb
sub
iret
stos
aad
ins
mov
add
or
cmp
inc
and
(bad)
jne
jnp
out
mov
inc
adc
xchg
or
xchg
inc
(bad)
jl
mov
push
loope
mov
psubusw
mov
xor
pop
mov
and
xchg
neg
add
das
jmp
jle
mov
imul
mov
xchg
xchg
scas
out
or
rol
lahf
shrd
popa
loope
cli
sub
loopne
(bad)
cdq
sbb
sbb
or
shl
hlt
dec
out
inc
or
add
inc
out
mov
retf
dec
xlat
cmp
sub
dec
or
out
inc
test
xor
neg
push
or
imul
adc
xchg
dec
adc
ds
mov
adc
mov
dec
out
call
dec
jmp
add
gs
ins
arpl
pop
add
xchg
lea
aad
mov
xchg
js
ror
and
es
jbe
cmovno
lds
test
push
cmps
es
sbb
into
and
mov
mov
sub
adc
cdq
sbb
lds
int
pushf
lahf
(bad)
sbb
rcr
ja
imul
inc
imul
daa
ins
cwde
fidiv
(bad)
jmp
add
push
repnz
xchg
push
out
stos
popa
clc
xchg
jnp
or
hlt
mov
rol
test
sub
mov
xor
fidiv
jae
jo
pop
jo
adc
mov
sub
mov
sbb
xor
mov
xor
mov
enter
ins
push
adc
xchg
mov
mov
jg
sub
mov
fld
fwait
jp
sub
dec
call
cdq
inc
(bad)
jns
repz
sbb
shl
mov
jp
inc
push
sbb
jo
lock
pop
and
xor
xor
outs
movs
aaa
push
adc
push
lock
mov
mov
adc
and
sbb
add
mov
(bad)
jnp
pop
add
(bad)
(bad)
stc
int
jle
pop
int3
call
ins
(bad)
dec
jl
icebp
jmp
sbb
loope
lods
neg
popf
xor
aad
xchg
ins
sbb
sbb
or
add
cmp
jo
xor
ja
push
inc
mov
mov
or
(bad)
jns
ds
movs
mov
addr16
sar
outs
adc
xor
jb
shr
push
cmps
and
mov
add
lock
inc
mov
add
imul
(bad)
nop
sti
add
pusha
ror
add
add
dec
dec
xlat
push
cmps
pop
pop
mov
push
and
xor
es
stos
dec
stos
mov
xchg
mov
loopne
mov
cmps
pop
mov
out
xlat
(bad)
fild
inc
iret
fdiv
das
imul
scas
adc
pop
or
inc
xor
xor
ds
sbb
mov
mov
jo
into
cmp
inc
ins
adc
repz
cmp
int3
mov
push
out
mov
xchg
jb
add
lahf
into
jp
cmp
sti
xchg
movs
ret
mov
inc
add
dec
push
xchg
and
pop
sbb
mov
inc
mov
(bad)
cmp
lock
aas
xor
movs
push
jmp
pusha
(bad)
fs
mov
(bad)
xor
dec
mov
xchg
or
jnp
out
jg
xor
adc
mov
push
mov
and
mov
call
cmp
iret
mov
dec
into
ror
movs
cdq
jg
pop
inc
add
inc
sub
test
inc
jecxz
mov
dec
adc
add
mov
xor
jmp
les
aad
xchg
pop
jnp
add
shr
mov
lods
rol
adc
jmp
xchg
sub
mov
jmp
jo
xlat
pop
lock
dec
lahf
int3
ret
rcl
mov
lods
movs
lods
or
pop
sub
mov
fst
jbe
push
jae
mov
xor
into
shl
jno
cmp
mov
sub
lods
xchg
retf
mov
or
xchg
add
mov
jb
cmps
fist
les
or
add
pop
fnstcw
xlat
xor
cmp
cmp
in
mov
dec
add
(bad)
daa
mov
shr
jge
fwait
(bad)
dec
iret
lea
mov
or
jle
dec
cli
lock
mov
add
nop
xor
stos
lods
adc
mov
das
gs
jae
inc
and
leave
sbb
aad
into
pop
fldl2t
push
shr
ret
enter
adc
rcr
dec
xlat
movs
mov
mov
stos
adc
dec
lods
in
xchg
dec
(bad)
(bad)
sahf
std
xchg
shr
cli
loop
cmp
dec
test
ret
sbb
sbb
dec
dec
iret
mov
ror
sbb
mov
out
mov
mov
mov
data16
call
es
and
in
sub
leave
add
or
jns
gs
mov
les
stc
ss
test
mov
adc
hlt
and
fcom
push
outs
fadd
ret
shl
rol
adc
aas
push
xchg
int3
mov
add
fadd
int
pop
movs
icebp
pop
hlt
aam
lods
stos
add
jmp
out
adc
xchg
fadd
nop
bound
stos
sub
ret
mov
(bad)
push
inc
rcr
mov
xlat
fild
sub
repz
jp
xchg
jnp
sub
cs
add
pop
inc
or
pop
arpl
fisubr
test
repz
pusha
fs
jne
mov
int
in
pop
fsubp
xor
pop
sbb
mov
inc
cdq
sbb
outs
cmp
stos
lock
mov
sbb
int
aaa
and
or
hlt
adc
adc
jp
cwde
xor
dec
sahf
ret
data16
aad
les
push
pop
and
dec
mov
fiadd
mov
in
mov
sbb
sti
mov
push
inc
(bad)
mov
jnp
or
loop
out
imul
inc
aam
ds
stc
mov
pop
das
fsub
leave
call
pop
and
push
xchg
imul
not
popf
cmp
mov
mov
adc
das
aad
fdivr
pop
mov
xlat
cmp
out
adc
sub
inc
adc
(bad)
push
dec
sbb
mov
mov
cmc
pop
test
dec
inc
cmp
mov
sub
ret
inc
test
mov
bound
mov
out
(bad)
mov
adc
xchg
test
mov
js
movs
cmp
ffreep
and
test
xchg
pushf
mov
add
rol
(bad)
or
sti
scas
inc
sbb
cmps
enter
cmp
dec
mov
mov
xchg
mov
and
mov
push
data16
pusha
xchg
enter
int3
push
push
lods
sbb
leave
pop
mov
out
gs
data16
jne
mov
add
cmp
pop
xor
mov
mov
inc
in
sub
xlat
sbb
cli
cmps
mov
add
rol
ins
adc
mov
ja
imul
pop
add
cli
adc
sar
push
xchg
lods
es
mov
cmc
mov
(bad)
mov
in
mov
add
in
dec
ret
or
mov
adc
pop
or
bound
cmp
push
arpl
push
aam
cmp
out
push
pop
xor
xchg
cld
fs
iret
pop
xor
nop
jbe
lock
ins
popa
bound
sub
and
push
or
fisubr
je
std
(bad)
cmps
push
mov
adc
clc
sar
hlt
out
dec
mov
adc
xchg
inc
adc
or
sub
xor
jmp
mov
mov
into
xchg
scas
aaa
add
rol
jns
pop
inc
ds
imul
popf
out
xchg
xor
mov
sbb
loope
in
push
add
inc
jns
out
retf
scas
xor
sub
xchg
test
int
mov
sub
mov
dec
xchg
jb
icebp
call
mov
add
xchg
iret
cmc
std
fsub
cmps
pop
bound
jb
push
(bad)
mov
mov
sbb
and
add
aas
test
push
lods
mov
sbb
mov
fstp
pop
loop
add
xor
mov
ins
lods
and
lock
push
call
pusha
jne
bound
gs
nop
mov
js
(bad)
stos
mov
sub
shr
pop
outs
jp
adc
jle
jb
(bad)
fistp
or
and
xchg
loopne
jmp
loopne
(bad)
loope
add
pop
sub
add
stc
dec
(bad)
xchg
(bad)
adc
ret
inc
dec
hlt
aas
xchg
push
mov
fimul
in
push
cmps
cwde
push
push
icebp
mov
fsubr
sbb
imul
dec
push
fld
pop
xlat
sub
fwait
test
(bad)
and
je
cmp
hlt
pop
outs
mov
fwait
mov
add
dec
mov
hlt
xor
sahf
or
mov
lods
pop
imul
jno
push
pop
fldenv
dec
rcr
adc
fdivp
dec
inc
add
or
shr
ja
loopne
add
cmp
mov
call
cli
push
pop
jp
push
cmp
pop
es
(bad)
pop
(bad)
adc
stos
sub
pop
ja
push
int3
imul
mov
add
sub
sub
fadd
mov
xchg
mov
call
sahf
loopne
sub
test
jl
into
adc
call
(bad)
cmp
cmp
(bad)
lods
xchg
add
div
ja
(bad)
cld
jg
pop
mov
lahf
cmp
push
sbb
mov
call
ins
clc
mov
ret
mov
movs
test
loope
and
dec
mov
inc
jmp
jae
and
cmc
pusha
xor
call
sbb
(bad)
cmp
sbb
adc
pushf
inc
pop
cli
push
movs
mov
sub
outs
cli
sub
clc
xchg
std
or
push
ds
enter
mov
iret
(bad)
xor
and
pop
loopne
out
cmp
mov
test
add
sbb
push
add
jo
call
fcomp
mov
sbb
je
dec
adc
xlat
div
jecxz
pop
adc
mov
jmp
cmp
mov
push
or
pop
or
cmc
mov
test
add
test
aad
adc
inc
or
dec
and
fiadd
inc
jnp
test
add
lods
or
cs
mov
xchg
ret
mov
shl
jg
ins
or
mov
jmp
cs
push
jno
bnd
enter
sub
inc
dec
jl
cmps
sbb
push
imul
inc
mov
jo
cmp
mov
mov
add
and
xchg
or
sub
inc
cmps
push
inc
gs
mov
les
add
and
sub
xor
test
mov
xchg
scas
cmps
jns
fist
clc
in
mov
adc
push
dec
ror
mov
adc
xor
jg
inc
lods
sub
das
out
or
push
sbb
out
xor
pop
push
int3
out
push
scas
jle
shr
push
and
mov
jb
ss
clc
fs
out
push
inc
mov
mov
adc
push
and
shr
mov
push
and
test
cmp
or
cli
stos
jnp
retf
leave
xor
add
dec
push
repnz
(bad)
jns
out
cld
repz
adc
mov
lock
in
xchg
jbe
sub
cmp
loopne
sbb
ss
in
sub
push
(bad)
fs
jns
sub
add
push
pop
push
adc
cmp
popa
mov
cmp
pop
cmp
jmp
dec
loop
push
inc
std
cmc
and
add
loop
adc
cdq
inc
xchg
aad
mov
call
sbb
out
sub
cmp
mov
pop
inc
jmp
std
jno
adc
or
je
mov
nop
xchg
and
cmp
enter
push
psubsb
add
mov
mov
xor
cli
cli
add
jmp
add
jnp
sahf
sub
adc
xchg
aad
sbb
jo
(bad)
rcl
mov
shr
xor
mov
adc
nop
jmp
pop
fiadd
jl
loope
sub
jmp
jge
xchg
(bad)
push
push
sbb
ret
pop
lea
addr16
ins
sbb
lds
int
je
push
mov
adc
mov
stos
imul
stos
jne
jns
out
pop
in
pop
shl
lea
mov
test
mov
mov
pushf
outs
adc
arpl
push
outs
sbb
stos
jae
sub
mov
pop
push
int3
cmp
sub
mov
or
dec
lea
add
mov
push
adc
out
adc
daa
sub
sub
dec
xor
jns
les
jno
out
xchg
add
cmps
pop
fsub
jno
fmul
scas
(bad)
in
push
jnp
jbe
pop
hlt
(bad)
aas
xor
mov
lahf
out
jge
fstp
fwait
shl
pop
and
xchg
out
pop
dec
ficomp
jbe
das
cmc
or
jno
sub
push
loope
pop
xor
out
enter
and
fistp
push
adc
xchg
mov
stc
mov
loope
in
leave
aaa
inc
jmp
aam
rcr
lahf
es
xlat
mov
cdq
and
shr
or
fistp
and
add
in
sub
arpl
jecxz
push
clc
mov
clc
imul
xchg
add
cld
adc
fs
mov
jmp
lods
pop
or
fs
jns
mov
mov
inc
sti
enter
retf
xor
cmp
xor
sar
aad
sbb
mov
sbb
inc
ret
mov
push
mov
sbb
stos
leave
cmp
cmp
cmovno
xor
adc
pop
xchg
and
xchg
mov
repnz
push
mov
and
fs
jp
cdq
js
test
mov
iret
(bad)
pop
out
dec
ins
repnz
add
mov
inc
cmp
sti
sub
jmp
fcos
leave
dec
and
dec
cmc
sbb
popf
das
leave
fisttp
sub
jbe
ret
pusha
pop
jg
enter
add
ds
mov
jo
adc
or
push
shl
je
adc
ds
xchg
adc
popa
lahf
test
fisubr
(bad)
pop
mov
sub
inc
repnz
push
inc
dec
adc
and
out
xchg
sub
mov
loop
std
xchg
mov
cmp
dec
jo
inc
ds
mov
or
lods
stos
ins
adc
push
xor
shr
sbb
into
enter
mov
lahf
cmp
push
stos
stos
push
xchg
(bad)
retf
mov
pop
fdivrp
xchg
fs
dec
fidivr
inc
or
fidivr
(bad)
and
mov
in
lea
add
int3
ficomp
and
stos
inc
div
call
(bad)
test
(bad)
dec
bound
in
push
rcl
ffreep
mov
jns
jbe
je
out
imul
cli
pop
fs
inc
xchg
call
jl
and
and
lock
test
dec
mov
push
cmp
lahf
pop
pop
cld
daa
mov
bound
movs
pop
pushf
outs
fidivr
xchg
cwde
loopne
xor
cli
addr16
jb
nop
bound
xchg
add
xchg
and
mov
cmps
cld
push
add
aam
lds
(bad)
imul
cmp
add
std
imul
sub
mov
fdivr
mov
mov
mov
mov
idiv
clc
sbb
mov
test
jb
jp
sar
arpl
sub
and
lahf
pusha
mov
adc
sbb
mov
ret
jecxz
lds
fcom
ror
outs
daa
jno
(bad)
inc
xor
push
test
mov
ja
jmp
es
sti
cli
mov
sub
in
pop
push
or
adc
arpl
cli
fimul
je
test
xchg
in
mov
inc
inc
pop
rcl
shl
imul
shld
es
out
popa
adc
adc
cmp
mov
mov
inc
das
xchg
dec
pusha
mov
xor
iret
loopne
mov
dec
mov
and
or
js
pop
ins
pop
cdq
jg
ror
test
jl
pop
inc
inc
lock
push
add
ja
or
or
mov
cmps
stos
jmp
popa
mov
mov
add
lahf
xor
mov
es
jp
dec
mov
fiadd
mov
lods
int3
or
pop
shl
pop
clc
pop
ds
jno
stos
jp
and
sbb
in
mov
xchg
inc
scas
sbb
(bad)
xchg
add
add
aaa
adc
mov
jmp
push
lds
ret
pop
add
cmp
std
arpl
fistp
and
xchg
fistp
push
clc
cli
inc
xor
ss
jp
push
or
inc
jecxz
fcomp
xchg
jae
das
addr16
(bad)
or
mov
sahf
cmp
pop
sub
sbb
icebp
in
(bad)
xchg
inc
call
xor
stos
scas
pop
cwde
mov
fnstcw
lahf
push
pusha
fiadd
or
dec
out
nop
sub
xchg
and
(bad)
inc
pop
loop
(bad)
es
call
xor
js
sub
or
pop
cld
pop
retf
lods
and
mov
jle
push
inc
into
cmp
ret
dec
cwde
sar
mov
out
jb
sbb
out
sbb
cmp
push
inc
cmp
jp
or
inc
adc
sbb
push
mov
sahf
lea
lea
xor
(bad)
push
lea
ror
imul
add
int
aad
sub
retf
std
mov
sar
es
xchg
cmps
push
jae
adc
outs
lahf
inc
pop
ror
xchg
cmp
(bad)
adc
adc
fstp
sub
gs
sub
es
inc
dec
or
jnp
pop
shl
jmp
inc
dec
and
mov
mov
push
sub
inc
icebp
pop
js
xor
icebp
jne
push
jge
mov
jns
dec
mov
sub
dec
push
addr16
adc
dec
rol
scas
and
iret
repnz
test
add
inc
jge
mov
test
mov
pop
mov
dec
je
dec
mov
out
je
hlt
mul
sub
mov
test
xchg
ffree
shl
test
cmp
adc
jb
pop
cmp
(bad)
pop
xchg
mov
rcl
inc
cmp
js
mov
sub
das
data16
xor
daa
sub
loopne
xchg
mov
dec
cs
push
inc
add
jmp
pop
pop
and
loop
or
cdq
into
clc
loope
sbb
or
lea
xor
sahf
pop
shr
leave
xor
test
xor
in
dec
jmp
jecxz
out
pop
sbb
test
mov
mov
push
addr16
push
nop
xor
aaa
cli
mov
jae
cdq
leave
mov
push
jmp
cmp
(bad)
xchg
adc
or
cwde
push
retf
clc
push
idiv
cmps
mov
or
test
retf
retf
dec
mov
mov
lock
jnp
(bad)
jmp
dec
call
sub
sub
or
pop
xchg
ror
out
call
xchg
bound
xor
or
test
out
sbb
lods
xchg
inc
add
clc
aas
fisttp
stos
ret
es
dec
shl
pop
dec
sahf
inc
pop
pop
jmp
out
sysenter
mov
sub
enter
push
in
mov
cmp
xchg
adc
ins
inc
imul
sub
outs
jle
jmp
call
aam
je
sub
jp
xchg
jecxz
retf
faddp
daa
ss
mov
jne
jg
popa
div
push
retf
mov
ins
pusha
test
retf
stos
adc
(bad)
mov
pop
add
pop
call
fld
ins
jmp
mov
loope
aas
mov
pusha
adc
iret
rcl
(bad)
movs
leave
or
pop
retf
iret
mov
sbb
jns
popfw
push
mov
dec
icebp
rcr
push
enter
pop
xchg
daa
int3
jg
mov
jmp
push
adc
stos
cs
aam
adc
sub
fucom
iret
sbb
out
and
fcomi
push
inc
pop
dec
test
xor
xor
dec
xor
(bad)
cmp
or
imul
mov
fnstenv
jae
rol
inc
cld
fmul
test
adc
shr
or
push
cld
push
cmp
inc
xor
bound
sti
xchg
pop
and
int
mov
ror
dec
imul
mov
jnp
and
xchg
scas
retf
cmp
sbb
mov
inc
add
stos
and
and
loop
pop
in
push
xor
fs
fisub
cli
add
pop
leave
push
std
mov
jae
sbb
mov
add
leave
inc
push
mov
or
mov
jbe
inc
int
pop
jnp
fdiv
mov
adc
in
neg
mov
test
in
mov
sar
imul
in
mov
add
es
dec
cmps
jecxz
mov
xchg
in
out
rcl
loope
mov
dec
cmp
les
inc
adc
pusha
cmp
mov
stos
sub
mov
add
xor
dec
adc
int
pop
lods
cmc
rcr
sub
sub
mov
sbb
pusha
call
adc
and
mov
cli
push
xor
push
push
adc
add
jns
mov
cmps
neg
in
inc
je
test
xor
(bad)
and
push
cld
pusha
jp
ror
das
test
test
push
lea
lods
xor
std
hlt
rsqrtps
xchg
aas
xchg
sub
aam
or
scas
fsubrp
add
add
cmc
cmp
jge
mov
shl
fnstsw
daa
or
inc
pop
jb
mov
and
jl
pop
pusha
sar
clc
push
inc
jecxz
cmps
daa
mov
test
out
xchg
aaa
das
xor
fptan
lock
cmp
mov
gs
xor
inc
sub
sti
shr
lea
pop
movs
stc
pop
stos
sub
mul
mov
or
mov
sbb
jmp
stos
stc
fisttp
inc
test
sub
xor
pop
add
je
enter
ja
ins
repz
dec
int3
mov
lods
add
add
jne
add
into
movs
sbb
lock
leave
cmp
(bad)
mov
mov
nop
mov
mov
imul
outs
mov
or
in
pop
jp
jne
int
pop
xchg
xor
fild
bswap
test
jle
rcr
adc
leave
pushf
or
dec
retf
sbb
clc
mov
mov
xchg
test
into
xor
or
fimul
clc
in
cmp
xchg
loopne
(bad)
xor
pop
add
cmp
repnz
ds
sar
jg
imul
mov
ret
fstp
mov
hlt
cs
push
or
pop
sahf
mov
aas
sub
inc
aaa
scas
sub
ds
jbe
dec
sbb
push
cld
xchg
sbb
mov
add
xor
dec
arpl
cli
outs
jecxz
imul
sub
stos
mov
imul
pop
jbe
push
scas
test
jg
mov
sar
add
cmp
sub
sbb
jle
adc
mov
out
imul
ja
adc
(bad)
movs
inc
xchg
not
ins
cmp
pop
mov
aas
cmp
cmps
ja
push
and
mov
mov
pop
jno
shl
inc
jae
fisttp
jge
xor
pop
fld
(bad)
xor
ffree
jno
mov
int
inc
movs
mov
loop
adc
retf
jns
jmp
or
sub
xlat
pusha
test
inc
xchg
add
lahf
iretw
movs
inc
pop
inc
fs
jb
out
sub
cwde
ds
jmp
icebp
repz
mov
out
les
das
cld
mov
dec
(bad)
movs
cld
mov
jno
loope
das
movs
pop
push
jae
inc
mov
dec
scas
or
sbb
(bad)
retf
outs
mov
shr
repz
aas
push
mov
test
dec
stos
mov
jns
dec
(bad)
repnz
push
into
addr16
test
xor
test
popa
cmps
mov
adc
cs
(bad)
movs
pop
out
push
mov
sub
lea
or
inc
jecxz
push
aam
mov
push
(bad)
push
push
cwde
sub
sbb
shl
cmps
dec
fwait
enter
xchg
adc
loopne
adc
cwde
and
aad
movs
sbb
mov
pop
push
or
xlat
mov
js
sbb
xlat
ret
mov
and
pop
jge
cmp
sub
imul
in
pop
xchg
sbb
xor
push
push
mov
daa
or
xchg
mov
int
or
jecxz
add
adc
mov
dec
push
out
popa
push
sbb
loope
pop
lea
pop
sub
xchg
xor
(bad)
in
cli
xlat
jp
ins
movs
sub
pop
fs
cld
mov
repz
int
mov
fst
inc
nop
jle
jnp
ja
mov
push
ins
dec
ja
lds
sub
popa
mov
call
adc
out
enter
fcmove
add
adc
inc
and
jno
cmc
je
xchg
loopne
icebp
pop
(bad)
daa
xchg
cwde
and
jno
das
aas
shrd
and
mov
and
push
or
in
xor
pop
es
push
outs
mov
mov
out
xor
dec
adc
jno
daa
mov
aam
push
push
adc
retf
or
push
loope
xor
call
pop
outs
jo
rol
ret
pop
bound
pop
lods
push
push
add
(bad)
stc
mov
xor
mov
or
push
repz
pop
test
and
inc
icebp
test
and
les
or
mov
push
xchg
popf
dec
jecxz
shl
pop
mov
movs
stos
iret
hlt
(bad)
xor
aad
cmp
inc
ror
mov
jmp
repz
lock
test
or
xchg
pop
iret
enter
mov
jecxz
lock
pop
jne
stc
dec
test
pop
inc
mov
adc
cmps
cli
xor
mov
or
mov
ds
dec
out
repz
mov
popa
or
test
nop
outs
sub
fmul
pop
mov
jne
inc
cmps
push
sbb
mov
fst
popa
lods
xor
cmp
loop
js
je
mov
xchg
add
xchg
test
mov
push
pop
mov
jbe
enter
mov
dec
stos
lahf
test
movs
(bad)
dec
adc
and
mul
dec
outs
bnd
sbb
ret
add
iret
aaa
mov
push
rcr
int3
mov
cmp
adc
and
push
js
imul
(bad)
xchg
jo
sbb
push
and
pop
lea
pop
add
jne
les
shl
mov
mov
(bad)
mov
xchg
repz
cmps
inc
mov
sti
inc
aas
repz
ins
push
dec
and
xor
loop
sub
icebp
sbb
jbe
xchg
dec
pop
dec
addr16
xor
outs
lods
xor
jge
(bad)
shl
gs
jno
jns
inc
dec
inc
xchg
ds
mov
ins
movs
inc
clc
test
fisub
inc
cmp
repz
icebp
pop
fsub
pop
fcmove
xchg
push
pusha
retf
jp
aam
lds
ror
int3
jmp
sbb
popa
inc
jae
or
fld
push
div
cmp
pop
push
add
imul
lds
jg
xchg
in
jbe
pusha
stc
jnp
pop
mov
pop
sbb
std
xor
repnz
ret
jb
loopne
fbld
and
mov
jl
aam
movs
not
fwait
xchg
test
pop
xor
dec
jae
mov
mov
stc
add
lock
mov
clc
push
push
lods
add
xor
mov
cdq
fst
fsub
xchg
cmp
sub
imul
dec
push
into
sbb
push
xchg
or
push
clc
addr16
pop
int
test
cwde
fsubp
ins
add
movs
sbb
sub
xchg
stos
shl
pop
push
call
sub
shl
inc
jne
fimul
je
cmp
jl
push
jp
out
mov
test
jmp
xor
mov
push
ret
jle
sti
mov
mov
das
add
fnstenv
retf
push
add
pop
xchg
ins
xor
fs
ins
adc
jmp
and
and
xchg
lds
xchg
pop
jg
pop
mov
(bad)
or
sar
sub
dec
movs
adc
in
test
int3
fs
test
xor
push
int
or
mov
mov
in
out
hlt
das
arpl
in
sahf
mov
inc
in
bound
call
push
adc
repz
loopne
xlat
clc
gs
mul
xchg
jmp
jg
in
cld
addr16
das
bound
push
fwait
ret
or
cwde
xor
xchg
pop
jmp
in
in
shr
sbb
adc
test
dec
mov
lds
xor
ror
adc
mov
mov
cmp
mov
cmp
push
cs
cwde
xchg
lea
push
mov
and
pop
(bad)
cmc
into
push
jp
sub
pop
lahf
xor
out
mov
push
inc
icebp
popf
xchg
pop
mov
mov
in
mov
ror
outs
dec
mov
call
jecxz
es
and
shl
into
cmp
fbstp
shl
fsub
call
pop
aad
cmp
call
mov
xchg
js
sbb
lds
lea
adc
and
mov
mov
dec
hlt
mov
in
ss
aad
cmp
loope
movs
ins
sahf
jne
mov
xor
clc
mov
fadd
std
pop
mov
test
jne
xor
add
xor
sub
fsub
pop
xor
jnp
test
cs
fsubr
jnp
sub
inc
test
cwde
(bad)
je
outs
cmp
jp
jno
daa
jl
mov
addr16
push
lock
adc
add
imul
loopne
adc
test
sub
jns
mov
inc
mov
or
jns
adc
int3
loop
sub
sbb
mov
stc
xchg
(bad)
imul
sub
dec
in
dec
into
imul
ja
jbe
dec
stos
out
push
repz
dec
inc
movs
and
cs
leave
into
sbb
cmp
push
int
je
stc
(bad)
(bad)
jne
icebp
int
cs
cli
out
push
lods
ret
xchg
scas
test
sbb
inc
jbe
pop
int3
xchg
push
cmps
inc
stos
xlat
xchg
pop
pop
push
int
in
pop
jp
inc
js
out
and
adc
and
ja
mov
clc
ins
repnz
jns
adc
xchg
xlat
jno
xchg
mov
ins
popa
sbb
clc
in
xchg
cli
push
sub
jns
mov
(bad)
in
ins
hlt
jl
add
mov
cmps
xor
push
lock
mov
xor
gs
idiv
sub
loope
sub
ds
push
adc
in
mov
or
repz
mov
mov
pop
fstp
jns
or
jle
inc
fs
mov
xor
mov
cld
(bad)
cmc
dec
push
fmulp
clc
arpl
stos
gs
cmp
or
add
popa
xchg
sar
jle
xor
xchg
(bad)
adc
jmp
sub
lds
movs
dec
movs
dec
adc
dec
dec
inc
ins
and
jg
fidivr
dec
pop
pop
test
xchg
sbb
dec
(bad)
and
enter
int
xlat
hlt
mov
cmc
ret
cmp
(bad)
popa
adc
ins
push
push
ins
xchg
call
sbb
add
cmp
mov
xor
mov
jl
xor
inc
out
jbe
pop
fisubr
sbb
push
sbb
adc
ds
mov
jg
lea
or
imul
cdq
rep
mov
sbb
sbb
rcl
out
inc
add
lock
jo
ins
push
jbe
out
aam
sub
in
or
ins
out
bound
dec
frstor
or
push
and
xor
(bad)
cld
xchg
test
jae
in
mov
dec
aas
pop
lds
ss
stc
pop
mov
or
test
inc
and
lods
ret
std
jmp
sbb
leave
push
std
div
pusha
or
iret
xor
pop
xor
dec
pop
arpl
inc
xchg
fstp
pop
xor
cmp
inc
mov
cmc
lods
pushf
(bad)
xor
jmp
pop
out
arpl
mov
cli
or
push
mov
pop
out
pop
mov
stos
jg
out
rcl
das
jecxz
xchg
push
mov
mov
lock
dec
push
cmps
ins
mov
pop
mov
in
pop
xchg
(bad)
xor
fiadd
pop
mov
rol
mov
sar
mov
icebp
cmps
stos
inc
mov
mov
scas
cmps
dec
cmp
ret
adc
dec
rdpmc
sub
jno
clc
or
inc
adc
sti
inc
lds
mul
ret
pusha
xchg
pop
std
mov
mov
(bad)
push
mov
push
ss
jle
xor
shl
sbb
mov
test
cld
aaa
push
jno
mov
scas
(bad)
iret
adc
in
aaa
call
icebp
or
push
xchg
(bad)
sub
clc
sbb
dec
ss
sbb
inc
cwde
jnp
jmp
jl
mov
inc
add
jg
mov
mov
(bad)
xlat
mov
outs
inc
rcr
jecxz
xor
bound
xchg
je
xor
jno
mov
imul
pop
pop
or
sbb
cmps
cmp
add
ret
arpl
push
sub
bsf
mov
mov
in
nop
cs
ret
jbe
or
rcl
cmp
sub
lds
or
inc
mov
jp
adc
mov
fisttp
xchg
add
pop
jl
inc
xchg
add
test
jecxz
bound
jb
adc
in
mov
sbb
out
sti
and
call
jne
dec
es
jmp
dec
loopne
inc
mov
xchg
enter
mov
fisubr
int
in
ins
loope
sahf
sub
mov
jns
mov
dec
jmp
(bad)
jae
sub
cmps
aaa
add
xor
pop
fmulp
aad
int3
mov
jge
fbld
dec
and
ins
in
in
push
push
ins
or
add
mov
in
xor
add
stos
lock
mov
rol
mov
or
cmp
aas
mov
stc
retf
je
and
push
bound
inc
push
mov
pop
pop
xchg
loope
push
sub
fisub
push
jl
push
pop
out
jle
mov
sbb
mov
add
fsubr
ret
popa
and
mov
stc
std
jp
cld
push
pop
fwait
xchg
pop
rcl
bound
mov
pushf
xor
in
xchg
sti
rol
pop
or
inc
add
in
adc
xor
mov
xchg
mov
pop
xchg
push
pop
es
je
xchg
jg
inc
outs
scas
int
dec
addr16
push
inc
rcl
ret
xchg
or
pop
rol
add
sar
mov
ror
addr16
test
mov
int3
pop
inc
pop
jbe
out
dec
out
mov
xchg
xchg
dec
dec
push
outs
call
shr
jle
std
cmp
cmc
mov
dec
movs
iret
shl
add
aam
push
push
inc
mov
mov
xor
popf
in
jmp
xor
data16
lods
retf
test
adc
(bad)
call
jno
aam
inc
sbb
and
sub
push
icebp
xchg
std
cmp
ja
sbb
gs
(bad)
cs
hlt
mov
retf
xor
movs
sub
stc
les
lds
ret
loope
ja
xchg
and
das
mov
test
or
into
and
test
add
mov
and
jno
ja
inc
mov
push
rdtsc
dec
rcl
xchg
(bad)
jmp
xor
jb
inc
test
push
pop
mov
out
or
stc
add
(bad)
mov
xor
cld
mov
fld
and
mov
push
pop
jo
dec
popf
inc
add
mov
xchg
jle
push
jle
mov
jmp
addr16
inc
pop
mov
enter
test
mov
addr16
sbb
int3
adc
iret
adc
ins
mov
std
or
fwait
sahf
adc
xor
test
into
cmps
jle
cmp
shl
push
cmp
aad
(bad)
cli
sub
mov
or
ins
mov
inc
and
jl
mov
sar
scas
xor
jp
or
xor
xchg
loop
es
sar
sahf
gs
and
inc
fild
push
jo
(bad)
dec
jle
rol
dec
xchg
in
repz
pop
mov
xor
or
push
jp
iret
dec
xor
mov
ins
pop
mov
push
adc
xchg
xor
adc
nop
cmp
cmp
les
and
mov
pusha
mov
xchg
jae
in
pop
push
push
jle
cpuid
or
add
lods
in
push
es
(bad)
xchg
mov
(bad)
xchg
adc
adc
add
test
sbb
add
xchg
sahf
stos
and
jmp
in
jnp
js
mov
cmp
jecxz
mov
imul
push
push
arpl
es
dec
sbb
jo
test
pushf
jg
mov
lea
mov
lahf
adc
cmc
outs
xor
lods
div
and
movs
mov
mov
shl
(bad)
repnz
ficom
test
jb
rcl
fiadd
dec
adc
push
xchg
mov
mov
and
enter
(bad)
cmp
call
sbb
rol
or
iret
lods
shr
push
lahf
test
jmp
mov
icebp
aad
movs
xchg
arpl
repz
push
cmovp
loop
push
and
js
pop
test
ins
lahf
mov
jo
stc
xchg
shr
je
loop
jno
ja
loopne
das
mov
(bad)
out
repz
dec
jp
pop
loop
xchg
call
cli
aad
push
xchg
mov
addr16
shl
pop
jmp
inc
mov
push
sub
xlat
adc
jge
and
(bad)
jmp
ss
dec
mov
call
test
sub
dec
in
mov
les
sbb
stc
sahf
dec
cli
or
push
in
out
xchg
pop
shl
cwde
cld
enter
inc
or
dec
inc
mov
test
int3
or
mov
std
leave
sub
leave
out
sti
xchg
movs
mov
sub
sub
nop
fild
clc
test
cmp
pop
test
sub
adc
mov
xlat
mov
outs
cmp
adc
popa
(bad)
daa
cdq
dec
mov
push
aas
cmc
xchg
popf
push
adc
mov
sub
push
xor
ja
add
stos
retf
std
call
shl
fisttp
xchg
mov
stos
push
out
add
shl
dec
test
mov
jns
ret
vpmacssww
rcl
lods
je
call
in
add
loope
arpl
xchg
adc
imul
mov
and
add
and
dec
test
daa
scas
xchg
inc
ins
movs
std
or
and
fidiv
movs
pop
mov
jo
push
pop
cmps
aas
adc
or
and
movs
lea
adc
or
mov
and
outs
(bad)
in
aaa
int3
and
(bad)
pop
pop
sub
jno
mov
mov
fadd
mov
xchg
test
sbb
push
loopne
movs
or
xor
mov
fsubrp
aad
repnz
pop
hlt
cmc
push
cld
push
nop
daa
je
(bad)
cs
repnz
xlat
pop
mov
in
jl
nop
jmp
int
nop
jnp
jnp
sti
or
jbe
mov
test
xor
and
dec
jmp
or
aad
inc
inc
test
mov
mov
cmps
jno
and
mov
enter
jl
dec
pop
push
pop
shr
xchg
mov
popf
push
cmp
fwait
repz
mov
rcl
sbb
inc
jae
dec
fs
int3
imul
or
sub
push
in
pop
data16
loop
test
sub
popf
call
and
mov
mov
sub
(bad)
stc
(bad)
aas
inc
test
sbb
stos
cmps
sti
call
das
sti
scas
ds
jb
mov
jge
xchg
dec
(bad)
loopne
scas
adc
sbb
push
inc
inc
in
stc
or
pop
retf
adc
pop
dec
aam
cmp
cmps
fadd
cli
add
and
inc
adc
push
repz
mov
repnz
mov
xchg
xchg
or
ds
xchg
shl
sub
les
test
shl
xor
sbb
mov
inc
cdq
pusha
shl
inc
inc
and
dec
movs
lods
xor
and
jns
mov
dec
fistp
push
jp
outs
mov
neg
lods
sbb
stos
loopne
dec
mov
sahf
(bad)
fld
mov
inc
test
mov
adc
mov
and
das
sbb
pop
inc
push
mov
stos
sbb
pop
mov
pusha
cmps
inc
jbe
adc
xchg
pop
daa
xor
and
pusha
sub
repnz
call
test
jmp
(bad)
cmp
adc
xchg
int3
into
ds
pop
mov
xor
dec
inc
idiv
or
hlt
mov
stos
adc
or
cwde
fwait
jge
sahf
push
je
popf
sub
push
adc
sar
shr
adc
addr16
mov
retf
arpl
xchg
mov
pop
inc
ror
iret
sbb
mov
xchg
inc
inc
loope
mov
in
retf
retf
(bad)
retf
call
aad
repnz
xchg
push
pop
hlt
fucomip
mov
or
hlt
cli
retf
xchg
jb
not
jp
imul
ins
aam
xchg
adc
mov
xor
cmp
or
push
sub
fcmove
sub
cmp
jno
lahf
jp
adc
mov
inc
lods
xchg
lds
lods
js
and
inc
stos
clc
in
adc
cmps
xchg
xchg
or
mov
sbb
clc
lock
mov
mov
cmp
and
aaa
pop
inc
sahf
and
and
(bad)
sub
xchg
popa
je
xchg
add
imul
sub
dec
ret
sbb
int3
push
data16
ds
dec
mov
jg
dec
arpl
daa
addr16
mov
sbb
fs
xchg
pushf
xchg
mov
push
fwait
popa
and
xor
cmc
pop
mov
shl
xor
stc
cmp
call
fild
inc
sub
adc
mov
fs
dec
call
dec
(bad)
imul
fimul
(bad)
push
pop
int
lods
stc
sbb
std
retf
push
sbb
push
pop
adc
mov
push
pop
icebp
cmp
mov
jb
push
test
mov
sub
mov
(bad)
add
daa
and
es
mov
mov
jmp
enter
ins
cmp
cld
(bad)
pop
icebp
push
loop
push
add
cli
sbb
and
das
daa
pop
popf
jno
loopne
pop
mov
xor
sbb
btr
(bad)
mov
mov
imul
push
je
test
push
dec
mov
out
loope
xchg
sti
les
xchg
gs
mul
inc
loopne
or
sub
ret
(bad)
ror
pop
push
pop
ss
call
stc
cmps
xor
pop
ins
or
jge
pop
jecxz
mov
mov
and
shl
int
mov
jecxz
inc
repnz
push
fdiv
dec
inc
jecxz
sbb
clc
sub
data16
jbe
xchg
fcomp
retf
or
jg
push
mov
jl
in
jg
pushf
mov
jae
inc
or
(bad)
pop
sbb
lahf
dec
fwait
nop
mov
sbb
mov
fcmovnb
outs
inc
cli
jne
(bad)
or
das
xchg
cmp
inc
mov
add
fs
xchg
dec
stc
(bad)
pop
mov
fiadd
and
push
(bad)
in
repnz
fidivr
in
dec
repz
and
cdq
in
pop
shl
stos
jns
jnp
inc
std
(bad)
push
add
pushf
or
jg
or
imul
sub
push
enter
cwde
fwait
push
ja
popf
add
out
stos
and
jae
and
(bad)
ins
or
add
xor
add
or
mov
fs
cmp
(bad)
out
add
mov
xor
mov
jnp
popf
sub
ja
imul
pop
inc
pop
sub
repz
aad
mov
xor
push
inc
fcomp
pop
and
mov
lods
(bad)
pop
pusha
lods
dec
cmp
push
(bad)
xchg
mov
and
and
jae
xor
cmc
pop
mov
adc
mov
(bad)
push
je
loopne
lock
in
fadd
imul
inc
xchg
ins
mov
cli
or
test
popf
cmp
sahf
jmp
in
and
inc
or
xor
jne
ss
fisub
out
xlat
sbb
ss
sub
xchg
sub
push
mov
sub
cwde
out
push
mov
dec
add
cmp
or
jmp
xchg
inc
pop
dec
jb
out
imul
ja
or
sbb
jmp
add
jbe
leave
mov
je
retf
mov
aam
clc
scas
xchg
clc
inc
fsubr
sbb
rol
or
pop
mov
lods
ret
lahf
fisubr
mov
mov
test
lods
xor
je
sub
cmc
out
adc
jl
ds
and
cmp
add
test
fwait
scas
and
and
sub
out
sahf
sub
pop
in
je
dec
shr
pop
(bad)
sbb
pop
push
out
retf
test
rol
test
clc
loopne
dec
in
xlat
rol
scas
push
out
xchg
fnstcw
ja
dec
aad
adc
jne
dec
sbb
(bad)
repz
sbb
jl
int3
sti
loope
sbb
fnstsw
pushf
inc
pop
mov
retf
or
js
mov
popa
mov
fwait
inc
add
hlt
jne
inc
out
dec
sub
jp
add
mov
push
pop
and
scas
jp
scas
dec
in
pop
cmp
mov
mov
push
jnp
inc
movs
inc
(bad)
fs
ss
jmp
adc
or
ins
mov
pop
jae
pop
stos
fstp
inc
pop
mov
ds
xor
mov
mov
daa
jae
aad
push
xchg
mov
loopne
and
cmp
and
test
add
sbb
stos
sub
push
xchg
pop
push
mov
ds
aaa
sub
je
not
dec
xor
clc
imul
cmp
pushf
mov
in
fwait
mov
rcr
loopne
or
fisub
ret
adc
test
push
retf
sub
sub
jne
stos
out
cld
mov
pop
push
pop
sbb
out
mov
mov
sub
adc
lock
jo
xor
mov
sub
mov
sbb
imul
pop
pop
sti
dec
or
test
js
outs
retf
mov
sub
pop
add
sbb
cmp
test
push
(bad)
(bad)
stc
pop
push
jmp
gs
mov
cmps
fs
sub
int3
aaa
pop
in
jl
adc
mov
adc
into
push
adc
mov
in
jmp
aad
push
pop
fidivr
xor
dec
add
mov
pop
retf
xlat
add
pushf
jl
stos
cmp
cmc
in
pop
inc
sbb
and
inc
cmp
(bad)
sbb
pop
add
jmp
or
icebp
xchg
rcr
sub
cs
push
imul
push
into
xchg
pop
mov
mov
push
and
add
lock
bnd
xor
or
loope
or
mov
mov
jns
mov
icebp
mov
ror
push
js
mov
xchg
js
mov
push
xchg
add
enter
int
mov
in
imul
jg
inc
pop
leave
call
lods
xchg
or
inc
push
jne
dec
jae
inc
aam
pop
lods
js
xchg
adc
(bad)
into
es
jno
aam
pusha
push
add
cwde
xchg
jmp
dec
test
mov
add
cwde
inc
dec
push
cwde
or
or
and
sbb
sub
xor
ins
ficomp
mov
jb
jl
xchg
xor
push
push
das
jle
aam
pushf
and
mov
cmps
xchg
inc
imul
sbb
xchg
push
jo
adc
dec
(bad)
sbb
and
add
in
pusha
int3
icebp
xchg
(bad)
imul
enter
aaa
ffree
inc
fdiv
xor
cmp
(bad)
rol
push
out
nop
mov
add
ret
cs
mov
imul
cmp
dec
mov
sub
loopne
xor
jecxz
push
jbe
mov
sbb
jnp
jmp
icebp
xor
loope
les
pop
imul
and
test
add
rol
sub
bound
and
sub
retf
mov
or
dec
mov
data16
mov
in
adc
pop
nop
mov
(bad)
(bad)
(bad)
mov
movs
ds
adc
jno
xor
clc
ret
mov
jl
ror
mov
gs
push
scas
aam
repnz
bound
jp
and
push
lds
mov
adc
mov
cmp
inc
or
pop
movs
retf
cmc
xchg
retf
jns
loope
(bad)
pop
cmc
outs
xor
std
jnp
cmc
(bad)
in
pmaddwd
mov
xchg
call
add
popa
enter
adc
cld
push
inc
xlat
adc
mov
xchg
pop
loopne
xchg
mov
cmps
or
pop
or
and
sbb
mov
push
test
mov
not
retf
fisubr
movs
in
sbb
add
xor
xlat
stos
idiv
inc
or
idiv
mov
sti
sub
cmp
movs
addr16
or
sbb
test
jns
popf
push
cdq
ds
out
dec
inc
es
and
push
in
mov
sbb
xchg
mov
sbb
add
cld
ss
jbe
lock
pop
sub
in
sub
cmp
pop
imul
outs
aas
or
int3
push
mov
mov
sbb
call
pop
jp
pop
add
lods
ins
ret
dec
pusha
adc
push
push
cmp
or
xchg
mov
ss
pop
sar
xor
mov
cs
mov
xchg
xchg
inc
fstp
hlt
arpl
or
lods
inc
inc
xor
js
stc
jno
div
loop
push
mov
pop
jecxz
pop
mov
xchg
mov
push
mov
push
mov
call
sbb
leave
xchg
sbb
xchg
cmp
mov
mov
movs
xor
call
jp
and
or
xchg
aad
lds
int
int3
push
imul
dec
clc
fld
pop
xchg
jmp
imul
std
xchg
adc
je
sub
jge
fsin
lds
push
iret
mov
sub
jmp
arpl
rcr
mov
rcr
je
xchg
push
or
aad
call
outs
pop
fisub
mov
sbb
outs
movs
push
push
in
loope
xor
popf
dec
into
fsub
cs
faddp
jae
xor
test
mov
push
(bad)
rol
inc
adc
xor
pop
mov
adc
inc
ret
adc
push
out
ret
push
jne
jl
les
clc
push
pop
push
xor
jne
jle
mov
add
mov
in
pop
jmp
jo
jo
pop
test
mov
push
sbb
xor
jmp
ficom
xchg
xor
hlt
xlat
cld
dec
xor
cs
mov
cmp
mov
or
aas
outs
mov
(bad)
imul
mov
(bad)
add
mov
dec
mov
mov
stc
add
push
add
mov
cdq
push
jo
out
pop
daa
xchg
xor
mov
imul
sub
lock
and
mov
pop
inc
sub
cmps
cs
sub
inc
pop
outs
popf
jo
ja
add
jns
pop
cmp
and
out
cmps
mov
mov
popa
jae
hlt
mov
mov
add
lds
push
add
retf
push
push
loop
lods
pop
(bad)
or
jbe
mov
dec
mov
pop
dec
mov
arpl
das
lahf
rcl
loope
movs
or
mov
loop
cli
jg
fcmovbe
mov
loopne
mov
fisttp
sbb
lock
fwait
std
shl
inc
dec
cld
test
and
repz
mov
dec
inc
pop
mov
push
adc
cmp
lods
repz
loopne
pop
fdivr
or
gs
dec
xor
mul
push
adc
xor
sub
fld
(bad)
fdiv
cmp
pop
or
es
cmp
cld
mov
jg
leave
sub
fwait
cmp
rcl
xlat
and
loopne
push
and
or
fdivp
sbb
stos
push
inc
cdq
lea
loopne
or
xchg
adc
daa
xchg
jno
pop
mov
cmp
mov
pusha
push
mov
cmp
pop
jns
daa
pusha
fcomp
adc
leave
test
cli
les
fwait
or
call
mov
pop
mov
adc
add
mov
mov
rcr
push
mov
ss
(bad)
int
or
xchg
ins
aam
imul
xor
pop
repz
sub
jp
push
jg
jg
sub
sahf
inc
or
xchg
call
inc
jl
enter
dec
pop
(bad)
hlt
push
cmp
lea
std
ret
sbb
cmps
sti
(bad)
cwde
or
pusha
stos
cmp
or
and
addr16
dec
loope
ja
push
cwde
call
in
xchg
gs
bound
out
push
cmp
nop
ins
adc
in
add
mov
mov
mov
retf
push
xchg
out
mov
push
fistp
clc
test
(bad)
push
adc
data16
xchg
es
jp
lds
xchg
sbb
enter
cmp
xchg
cmp
ss
mov
jne
mov
xor
sbb
dec
pusha
js
and
or
in
aam
cld
les
pop
cmp
pop
dec
xor
pop
dec
mov
arpl
sbb
rcr
pop
mov
jmp
cwde
pop
jl
mov
mov
ror
push
mov
push
pop
sub
adc
or
dec
push
xchg
push
mov
pop
sub
add
sub
stos
xchg
mov
das
sbb
sub
repz
jns
je
push
pop
mov
lea
adc
and
xor
pusha
pusha
cmp
into
iret
loopne
test
jnp
je
out
jg
int3
push
ffreep
call
jo
mov
and
mov
mov
sar
adc
imul
and
movs
call
(bad)
mov
sbb
xor
inc
or
jb
stos
jmp
mov
(bad)
test
in
mov
sub
fst
mov
push
jne
mov
int3
jmp
mov
mov
lock
imul
adc
and
mov
(bad)
daa
dec
sahf
sbb
cs
jb
add
imul
jo
sub
dec
mov
idiv
lods
shl
sub
iret
scas
ror
lock
and
leave
mov
imul
lahf
add
ss
test
cli
xlat
jecxz
or
in
leave
movs
pop
mov
ret
sub
xor
call
sub
xor
nop
jecxz
adc
sbb
mov
push
adc
js
inc
sbb
push
lock
je
stos
fadd
jl
addr16
sahf
je
xchg
mov
fidiv
out
dec
out
and
dec
push
push
pop
popf
imul
pop
mov
test
out
or
xchg
or
scas
inc
outs
sub
mov
dec
pop
fld
cmp
(bad)
fsub
dec
mov
or
dec
jmp
cmps
pop
test
inc
sub
jbe
lods
sar
out
jg
and
xchg
xor
dec
ret
pop
push
xchg
and
rol
out
retf
or
cdq
out
push
or
jo
push
cld
mov
fisub
test
jmp
and
dec
push
es
retf
xchg
iret
push
dec
frstor
mov
jp
and
push
add
xchg
jbe
xor
inc
outs
fcomp
mov
jecxz
test
jmp
push
es
push
int
xchg
popf
outs
or
outs
mov
pop
and
xor
dec
ja
sti
sbb
inc
inc
test
mov
xor
loopne
jg
cmps
pushf
mov
stos
mov
or
cdq
inc
push
(bad)
(bad)
cli
adc
xchg
adc
mov
leave
mov
hlt
mov
sub
fnsave
(bad)
mov
(bad)
sbb
cmp
popa
test
add
cwde
or
or
adc
icebp
mov
cmp
or
xchg
mov
push
or
mov
jl
js
push
cwde
inc
aas
xchg
popa
sti
jbe
cmc
test
mov
scas
mov
mov
jmp
jmp
ret
mov
xor
adc
or
stos
jle
imul
xchg
mov
cmp
xchg
mov
xchg
mov
out
fisubr
cmp
sbb
test
pop
pop
daa
ds
cmp
leave
dec
mov
test
inc
scas
cmp
add
clc
xchg
xchg
rcl
add
clc
out
lahf
push
out
in
pand
mov
lock
stc
dec
ins
test
jg
mov
mov
je
mov
loope
push
lock
push
xchg
mov
and
push
mov
add
test
(bad)
or
xchg
cmps
xchg
dec
das
sub
lds
fsub
sub
sti
xchg
fisttp
js
stos
dec
jle
std
imul
adc
scas
(bad)
ins
enter
stc
adc
dec
xchg
jmp
test
ror
add
pushf
add
add
xlat
ficomp
xor
push
cld
or
jmp
popa
sar
sahf
dec
fs
stos
data16
xor
xchg
add
mov
lods
sbb
add
out
pop
neg
xchg
movs
inc
inc
pushf
int3
mov
dec
sar
dec
jle
add
addr16
jmp
lods
jecxz
stos
push
sub
xor
fsubr
je
sub
dec
std
shl
jb
jg
aaa
(bad)
clc
jns
pushf
xor
in
ret
gs
mov
pushf
aaa
and
je
cmp
jb
mov
in
rcl
xchg
inc
xchg
int3
xor
ss
or
ds
icebp
mov
test
add
enter
push
int3
lods
push
mov
scas
pop
push
or
mov
in
pop
lock
bound
fcom
or
ret
std
fisttp
mov
add
in
mov
jne
jmp
aam
push
cdq
dec
mov
push
cmps
inc
les
sbb
das
jb
xor
arpl
mov
shl
jo
mov
stos
dec
jmp
dec
cmps
imul
gs
mov
push
mov
lahf
psubusw
and
add
mov
repnz
retf
les
mov
mov
mov
adc
push
hlt
jbe
out
cmp
adc
sub
pop
(bad)
push
mov
dec
scas
movs
sbb
scas
lahf
sahf
mov
test
and
pop
psrad
into
hlt
rdrand
xchg
inc
or
shl
cs
and
sbb
retf
adc
jne
sahf
rol
leave
lahf
jp
ret
push
dec
loope
ja
repz
adc
movs
sub
cmp
ss
repnz
ret
or
jns
imul
rol
xchg
int3
mov
cmp
rol
push
jbe
mov
ins
fwait
test
(bad)
fist
xchg
jo
pushf
sub
jg
cmp
xor
jle
mov
inc
enter
adc
(bad)
pop
icebp
or
xchg
es
xchg
mov
loop
inc
jne
inc
dec
dec
mov
frstor
(bad)
out
out
pop
inc
pushf
mov
pop
imul
jmp
stc
arpl
add
pop
jo
lods
rcr
xor
ds
cmps
ret
sbb
mov
shr
scas
cmp
xor
jle
jle
jmp
das
push
xlat
icebp
lods
int
js
jo
in
jp
push
rcr
mov
add
cmp
fimul
and
cmp
movs
in
mov
stos
loope
ret
in
push
cmp
or
std
jge
push
(bad)
jmp
inc
hlt
out
sub
sub
push
and
fcmovne
(bad)
jmp
sub
dec
mov
(bad)
ins
dec
lods
int
push
add
imul
or
js
(bad)
inc
pop
sub
enter
push
adc
jp
and
aad
add
stos
scas
cmp
in
jne
mov
xlat
aaa
nop
test
mov
pop
retf
cmps
or
cmps
mov
inc
xchg
or
or
jecxz
mov
cmp
mov
cmovno
mov
and
pop
adc
inc
enter
inc
xchg
jmp
mov
xchg
cmc
xchg
push
adc
int
aaa
pop
push
daa
jle
push
(bad)
(bad)
data16
(bad)
neg
cdq
out
xchg
jge
cmp
jl
loop
pop
rol
cld
addr16
and
nop
sub
(bad)
sub
push
stos
mov
sbb
cmp
and
jbe
cmps
jg
inc
imul
retf
add
sub
daa
aad
add
push
ror
sar
cmp
push
(bad)
mov
aaa
jnp
(bad)
scas
add
mov
sbb
xchg
push
sub
push
add
(bad)
cli
idiv
(bad)
fidiv
xchg
dec
cmp
push
addr16
cmc
or
arpl
pusha
es
nop
rcl
cdq
add
shl
inc
mov
jae
push
inc
in
mov
xchg
cmp
xchg
aaa
retf
sbb
retf
out
stc
pop
jns
jmp
mov
rol
loope
push
or
cli
pop
push
pop
mov
mov
adc
xchg
jmp
inc
sbb
cmc
xor
ss
cwde
xchg
lods
ror
dec
lea
das
xor
mov
add
sahf
push
mov
mov
clc
stos
mov
sub
mov
jmp
sahf
aad
loope
dec
inc
jns
jp
sbb
xor
mov
fidivr
call
call
call
jbe
fidiv
(bad)
aam
in
xchg
(bad)
retf
js
stos
jmp
inc
cmp
sbb
popa
ret
mov
push
mov
int3
or
sub
pop
or
or
cmp
mov
pusha
outs
retf
in
sar
xchg
jne
inc
into
(bad)
popf
mov
or
jmp
fild
mov
mov
in
inc
xchg
rol
loop
cmp
ret
xor
xchg
dec
in
retf
dec
cmc
aad
push
pushf
in
popf
out
test
fistp
jne
xchg
xchg
std
nop
adc
ss
jo
cmps
jb
dec
push
push
mov
add
ret
xchg
sub
adc
das
ret
xlat
lds
std
mov
push
push
ret
inc
cmps
in
mov
aas
xor
xor
xor
adc
xchg
(bad)
fld
sar
movs
fcomp
xor
pop
sub
cvtps2pi
fst
jno
into
(bad)
mov
mov
aas
jne
cs
add
popf
aad
or
cld
mov
loop
pusha
xchg
ret
adc
fsubr
addr16
je
adc
adc
and
out
imul
push
xrelease
inc
xlat
stos
mov
loopne
mov
sbb
popa
inc
mov
aaa
jae
mov
and
dec
repz
aas
jbe
dec
enter
jge
add
mov
lods
mov
mov
and
std
add
push
xor
aaa
xchg
mov
pop
sbb
and
xor
dec
mov
push
(bad)
retf
call
jo
into
into
clc
lods
mov
xchg
imul
dec
push
jge
jno
jo
out
xlat
jne
(bad)
xchg
jns
jmp
adc
add
and
inc
movs
xor
ins
pusha
bound
inc
cmp
push
mov
mov
adc
pop
aad
xor
lods
pop
cld
lgs
stc
test
sbb
or
cwde
loop
and
jns
cld
fistp
adc
mov
popf
dec
or
cli
jne
cmp
cmps
sub
pop
ja
xchg
push
fwait
pop
sub
jo
push
retf
mov
ds
cmps
lock
(bad)
cmp
not
mov
(bad)
in
cmps
mov
mov
xor
pop
cmp
ret
sar
jle
cmp
inc
stmxcsr
mov
sbb
mov
xchg
(bad)
je
aad
cs
and
inc
dec
dec
push
sub
fst
(bad)
ss
iret
jo
fsubr
sub
jmp
adc
shl
mov
jae
stc
dec
adc
jle
jmp
sub
xor
cmp
xor
add
or
inc
sbb
mov
push
sub
rol
icebp
sbb
nop
js
jmp
jbe
jecxz
mov
push
sbb
clc
mov
out
cmp
mov
fimul
repnz
pushf
xchg
mov
scas
xchg
movs
mov
inc
and
aad
icebp
scas
xchg
sbb
mov
ret
jmp
sub
cdq
push
cmp
cmp
adc
adc
(bad)
mov
dec
loop
mov
sbb
jnp
rcr
shl
push
mov
mov
fbstp
cmps
jbe
mov
gs
adc
fsubr
loopne
adc
mov
push
mov
jl
pop
std
push
js
loopne
sub
arpl
lea
inc
cmp
mov
pop
jecxz
out
in
arpl
cmp
jle
push
xchg
mov
push
sbb
test
stos
dec
pop
das
xchg
in
mov
jl
jp
addr16
sar
int3
jl
pop
sar
cmps
add
and
sahf
xchg
daa
xor
mov
xchg
aam
ja
in
xchg
stos
dec
and
js
dec
dec
jb
push
into
mov
lea
pop
addr16
stc
sbb
jne
xor
loop
aas
pop
mov
cli
push
mov
add
push
(bad)
xor
ss
push
enter
add
or
std
not
push
nop
(bad)
aam
stos
mov
out
dec
stos
add
movs
fs
mov
sub
out
fcomp
adc
mov
icebp
jne
jg
js
jmp
cld
fbstp
or
sbb
rol
std
add
fiadd
les
repnz
inc
lock
jg
pop
sub
inc
mov
push
daa
aam
lock
xchg
xchg
pushf
data16
adc
jbe
outs
sbb
xchg
fild
scas
pop
xchg
pop
mov
xor
scas
cwde
jne
inc
outs
xchg
popf
xchg
jmp
sub
add
ja
mov
call
outs
xchg
jno
jne
inc
push
sahf
mov
adc
pop
fs
mov
mov
js
(bad)
push
xchg
nop
mov
xor
xor
cmc
stc
mov
sub
fwait
jne
inc
add
jno
fdiv
into
ins
mov
sub
add
mov
cmps
xchg
fstp
xor
aad
iret
fwait
push
push
(bad)
sub
mov
cwde
xor
sub
xor
xchg
dec
imul
cmp
neg
mov
fisub
loopne
pusha
xchg
scas
jmp
out
push
pusha
out
lods
std
bswap
xchg
icebp
(bad)
cli
cmp
add
fs
mov
adc
sbb
add
or
scas
cmps
mov
sub
in
add
popa
cdq
xchg
std
push
push
sub
jecxz
jle
mov
pop
sub
rcr
sti
xchg
fcmovnbe
clc
leave
sub
loopne
mov
inc
aad
and
add
iret
jge
cmp
inc
pop
out
push
cmps
ss
fcom
dec
mov
aas
cmp
mov
dec
add
dec
jb
sub
xchg
lock
cs
bswap
ret
cmp
outs
pop
add
or
loope
or
repz
fs
out
out
cmp
inc
mov
(bad)
loop
shl
ret
js
sub
pop
ins
xchg
mov
xchg
ins
rcl
xor
xchg
fcmovnb
jo
add
and
loop
mov
add
xor
dec
icebp
imul
ror
push
mov
arpl
mov
and
call
rcr
xchg
js
nop
pop
mov
sub
lods
add
loopne
outs
fmul
cwde
imul
xor
imul
inc
in
xor
pushf
lea
fidivr
fdivr
(bad)
repnz
pop
jae
test
adc
mov
pusha
inc
or
scas
mov
mov
push
cmps
lahf
adc
push
outs
fbstp
xor
dec
sub
in
or
dec
mov
mov
sub
cwde
scas
add
(bad)
call
jge
inc
cmp
les
retf
outs
mov
adc
jecxz
sbb
and
add
mov
sbb
out
xchg
stos
aad
call
ds
push
mov
call
dec
pop
fst
cmp
pop
add
je
adc
sar
push
push
js
stc
mov
xchg
pop
je
out
mov
mov
mov
rol
lea
mov
addr16
mov
ret
mov
mov
adc
jbe
pop
loop
jbe
mov
push
mov
jmp
repz
push
loop
test
mov
call
push
xor
inc
arpl
retf
jae
inc
data16
mov
jle
int3
jne
imul
stc
lea
sahf
jge
and
mov
ss
idiv
movs
leave
and
sub
pop
cmp
scas
fwait
ror
das
test
cmp
es
cmp
shr
(bad)
call
pop
sbb
inc
cmps
push
cwde
imul
lea
sahf
pusha
adc
dec
ror
sub
ret
mov
not
pop
mov
push
adc
sbb
popa
jbe
or
pop
popf
adc
adc
sub
mov
mov
or
pop
xor
(bad)
xchg
sub
push
xchg
dec
ss
push
and
jo
lea
les
add
rcl
in
loopne
xor
or
xchg
pop
mov
xchg
das
and
outs
mov
shl
and
int3
call
mov
jb
pop
cmps
push
jae
cld
(bad)
aas
arpl
gs
not
scas
into
nop
ins
shr
pop
icebp
call
dec
jge
scas
mov
push
mov
fbld
std
cli
pop
jnp
popf
mov
xor
dec
shl
jecxz
inc
cmp
cmp
loope
ja
retf
push
mov
jo
mov
jmp
sbb
lea
xchg
mov
lods
sbb
mov
mov
xor
cdq
jmp
cdq
pusha
mov
imul
xor
mov
retf
popf
cmc
aam
mov
jge
pop
imul
nop
push
(bad)
pop
adc
inc
jp
sar
cdq
cmp
std
hlt
addr16
movs
push
popf
inc
xchg
(bad)
into
pop
fcom
clc
sub
js
shl
pop
push
jmp
data16
pusha
imul
jle
push
inc
call
dec
ja
(bad)
sbb
in
ins
pop
enter
outs
les
aad
not
mov
js
nop
(bad)
fild
mov
adc
clc
xchg
pop
ror
lahf
rol
mov
mov
mov
and
(bad)
ds
cmp
jne
sti
stc
or
mov
or
push
stos
repnz
lock
jae
ins
test
stos
sar
out
cwde
ins
clc
xor
inc
inc
pop
inc
push
cwde
sub
outs
or
popf
shl
popf
push
movs
jge
ss
movs
cs
fild
cmc
cwde
push
mov
jmp
int
adc
rcl
jb
fisttp
push
or
mov
repz
popa
cmc
(bad)
push
mov
mov
add
and
cld
mov
scas
cwde
cmp
repz
ret
xchg
or
(bad)
popa
movs
jmp
mov
xor
add
jl
movs
out
xor
sbb
jmp
cmp
es
movs
mov
push
fist
and
popa
or
dec
out
cmps
push
pop
xchg
movs
xor
adc
mov
(bad)
ror
and
test
imul
cdq
(bad)
jne
mov
popa
pusha
sbb
test
xor
jmp
outs
jmp
add
test
out
adc
pop
call
mov
add
sub
out
xor
or
push
cmp
xchg
ins
and
retw
mov
shl
cld
clc
shr
popa
mov
ficom
xor
retf
clc
adc
cmp
scas
fwait
jne
shl
ror
lock
(bad)
iret
scas
xor
daa
imul
imul
push
stc
xchg
fidiv
icebp
ror
(bad)
bound
cli
ss
(bad)
xchg
jge
in
jmp
daa
inc
or
in
ins
sbb
xchg
xchg
sbb
jp
mov
jge
jb
retf
jo
and
popf
jl
aas
inc
mov
pop
ss
xlat
fcomp
scas
cmps
jno
inc
pop
std
into
mov
jb
add
out
push
pusha
test
cmps
ret
lods
ins
(bad)
mov
dec
call
fs
cmp
push
inc
mov
pop
mov
retf
add
call
iret
jle
ror
popa
loop
in
inc
lds
xchg
fild
cmp
out
loope
ret
std
xor
xor
mov
and
cmc
fld
dec
pop
int3
xchg
pop
gs
pop
cli
mov
rcl
mov
xchg
sbb
in
das
addr16
int
fs
fisttp
pop
xchg
mov
arpl
pop
jle
sub
or
cmp
mov
xchg
and
aaa
mov
jbe
mov
ja
cmp
das
xor
repnz
in
je
mov
test
mov
push
fnsave
(bad)
cmps
sub
or
mov
mov
inc
mov
mov
test
les
mov
mov
ins
xchg
jbe
jo
aaa
call
jle
ja
int
scas
mov
xchg
cmp
out
push
stc
mov
pop
enter
adc
push
mov
rcl
xor
xchg
pushf
std
jbe
inc
sbb
sub
ins
dec
movs
sbb
push
rcr
sahf
sar
sub
cli
jge
push
aaa
jns
mov
sahf
cs
data16
or
push
push
jmp
(bad)
bnd
add
or
and
repnz
cdq
cmp
xor
repnz
scas
pop
inc
or
jns
mov
outs
cmp
adc
mov
addr16
pop
outs
and
fxch
pop
cld
dec
(bad)
int
sbb
out
stos
pop
(bad)
std
ror
arpl
aad
mov
xchg
cmps
xor
mov
or
sbb
test
loopne
shr
jp
ja
popa
cmp
pop
and
aas
mov
or
dec
jns
popa
dec
push
mov
push
mov
ss
and
sub
jnp
stc
popf
cs
push
mov
arpl
movs
out
gs
pop
push
cmps
cwde
pop
xor
xor
pop
int3
inc
inc
ja
lds
jl
retf
or
inc
cmp
cmp
test
mov
leave
jns
ds
push
jg
fwait
pop
and
rcl
fiadd
mov
lahf
arpl
cmp
ss
out
adc
xchg
dec
imul
lahf
mov
test
push
xchg
add
xchg
cmc
xchg
fs
mov
outs
mov
pop
lock
mov
sbb
out
xor
outs
cmp
cli
into
sbb
mov
jecxz
push
cli
cli
out
inc
sub
jecxz
imul
fwait
je
adc
xchg
inc
(bad)
add
stos
adc
(bad)
sub
loopne
fiadd
mov
fadd
push
and
sti
and
jmp
das
pushf
fwait
stc
adc
xchg
push
loopne
xor
popa
and
aas
stc
mov
dec
jno
sbb
mov
fild
sbb
stos
push
imul
outs
test
ret
and
mov
retf
aad
mov
scas
movs
push
dec
repz
gs
xor
jmp
out
push
std
pop
fld
ja
retf
imul
fwait
pop
cdq
int
inc
inc
dec
into
ins
mov
pop
jne
mov
in
popa
cmps
repz
cdq
mov
sub
jge
cld
mov
nop
xor
scas
push
adc
mov
jmp
push
and
or
ins
les
arpl
out
outs
jb
dec
add
push
push
and
and
das
mov
scas
sub
push
mov
adc
sbb
ja
into
mov
(bad)
xchg
cmp
mov
adc
xchg
popa
jge
mov
jo
lock
push
mov
push
push
repz
xchg
cli
scas
and
fs
adc
out
jmp
lods
mov
push
fist
add
mov
fwait
jno
jb
popa
dec
xor
or
adc
daa
inc
sub
jnp
mov
retf
fnstcw
cwde
aas
(bad)
fidiv
ja
jecxz
mov
call
inc
dec
xchg
lahf
sbb
cld
xchg
or
rol
cmp
xchg
imul
mov
fnstcw
pop
aam
stc
cmps
xchg
ret
add
pop
aad
or
(bad)
je
mov
stc
mov
lods
mov
sub
sub
mov
mov
mov
jo
mov
int3
mov
jns
aam
and
(bad)
cmc
and
push
or
ficom
cld
add
por
daa
push
pop
es
sbb
stos
jbe
push
mov
and
int
into
mov
cmp
js
sbb
mov
fild
cmp
jnp
dec
popa
aad
repnz
jg
sub
leave
dec
daa
ret
xor
inc
add
pop
or
sbb
mov
loope
jb
retf
adc
jae
add
fst
out
jmp
push
adc
cwde
mov
jnp
out
adc
adc
int
shl
xchg
dec
dec
scas
loope
adc
dec
or
xor
jo
sbb
sbb
call
(bad)
xchg
dec
add
sbb
push
or
lock
or
sbb
jecxz
push
arpl
mov
push
sub
repnz
scas
shr
jbe
cmp
jg
xchg
inc
int
fadd
fs
mov
pop
cmp
ret
lahf
and
xchg
push
xor
or
cli
sub
cmc
cdq
mov
aaa
mov
sbb
mov
movs
pop
jae
retf
gs
lock
out
mov
clc
ja
shl
pop
cmp
mov
xchg
sbb
in
cmp
test
(bad)
xlat
jae
mov
(bad)
and
inc
in
xchg
dec
mov
ins
mov
test
xor
movs
add
mov
jb
aam
dec
xor
cmp
jp
mov
repnz
in
sbb
adc
data16
xchg
imul
in
shl
test
stc
push
or
jl
fs
pop
js
nop
(bad)
inc
xchg
popa
mov
xlat
xchg
pusha
xlat
mov
mov
mov
xor
daa
rcl
xor
jne
add
pop
or
adc
push
cdq
jmp
pop
retf
fmul
pop
ins
int
push
ret
dec
sar
mov
mov
dec
push
in
outs
gs
xor
fisub
shr
(bad)
not
shl
sub
pop
jl
test
mov
adc
sub
push
mov
xchg
pop
xor
pop
push
cmp
add
jp
mov
xchg
in
push
inc
das
fwait
stos
lds
sbb
lahf
sbb
aaa
sbb
sbb
sbb
ffreep
dec
pop
daa
and
lahf
mov
dec
xchg
inc
pushf
or
imul
stc
jmp
adc
xchg
inc
retf
pop
fiadd
mov
pop
daa
in
icebp
fsub
mov
push
xchg
sahf
(bad)
(bad)
jl
cwde
xchg
imul
loope
xchg
aas
sar
sub
scas
dec
jmp
lea
xchg
xlat
aam
js
aas
sbb
test
call
and
mov
pop
mov
inc
cs
js
cs
aad
jnp
dec
in
scas
sbb
inc
cld
xchg
mov
outs
cmp
or
popa
fild
cdq
jnp
cmp
sub
pop
and
sar
bound
sbb
push
sbb
mov
popa
inc
in
push
mov
mov
cmc
cli
test
xor
cmp
cld
mov
jl
stos
jle
(bad)
sub
mov
cmp
push
xor
mov
mov
add
cwde
stc
sbb
xchg
mov
cmp
inc
addr16
mov
add
add
jne
retf
add
or
and
int
add
xor
or
sahf
adc
and
retf
xchg
loopne
push
aas
pushf
xor
or
xchg
inc
mov
pop
xor
dec
lds
int3
movd
stos
fisub
int
pushf
outs
mov
xchg
ja
pop
div
xchg
push
dec
jp
mov
inc
lea
(bad)
jl
xor
outs
or
imul
xlat
mov
mul
sub
nop
or
sub
ffree
sahf
jo
xor
pop
mov
ins
jl
jmp
or
push
outs
jb
shr
pop
or
cmc
sub
addr16
div
rcl
(bad)
aad
scas
jmp
and
cmps
nop
or
fcomp
xor
push
pop
shl
push
push
xor
fsubr
jle
retf
out
sbb
cmc
push
ins
mov
js
xchg
mov
fcomp
xchg
cmp
lock
adc
pop
mov
out
sbb
fs
push
and
inc
dec
mov
lea
js
sub
xor
test
fst
mov
fnstenv
inc
je
loopne
adc
cmp
inc
mov
lock
and
in
aas
inc
retf
push
call
repz
inc
mov
push
inc
and
jp
dec
mov
arpl
in
cmc
jp
in
xchg
xchg
cmc
icebp
retf
pop
pop
pop
xchg
fdivr
scas
std
mov
pop
or
sti
in
mov
dec
and
or
cmps
or
xchg
or
sub
outs
adc
xchg
xchg
imul
mov
jle
fidivr
jl
ficom
por
adc
sbb
jmp
xchg
jg
pop
push
pop
cmp
push
inc
xchg
clc
dec
push
xchg
jmp
test
and
jmp
mov
retf
jge
dec
mov
push
outs
retf
xlat
xchg
xor
xchg
loopne
retf
inc
jne
mov
imul
je
test
pusha
aaa
ret
xchg
ret
call
ja
pop
mov
xor
es
push
cwde
movs
or
nop
jno
jg
retf
clc
xlat
cmp
mov
outs
dec
imul
js
sbb
xor
(bad)
js
cs
ficom
jo
out
push
cwde
std
xchg
jmp
stos
jbe
or
jp
pop
and
call
ret
por
fist
stos
ins
push
out
sub
stos
gs
mov
push
jmp
ds
sub
idiv
ds
lea
pop
fisttp
scas
push
xchg
pop
mov
adc
jmp
push
sub
adc
mov
(bad)
dec
mov
xacquire
test
stos
push
popf
pop
retf
imul
ret
mov
test
enter
push
pop
cdq
jmp
stos
movs
dec
imul
outs
sbb
leave
out
call
imul
pop
pop
jae
sbb
sbb
scas
and
push
pop
adc
or
and
out
not
cmp
retf
push
dec
push
push
aam
and
data16
sbb
mov
mov
jp
push
lds
or
sub
sbb
data16
icebp
dec
mov
jne
arpl
outs
sbb
pop
daa
scas
out
ret
retf
repnz
mov
inc
out
das
mov
les
sub
sbb
inc
jecxz
daa
icebp
enter
fidivr
arpl
push
fisttp
in
shl
sbb
mov
or
ins
fstp
stc
jne
adc
pop
aaa
(bad)
mov
dec
ins
fldcw
cmp
lds
push
fwait
mov
xor
mov
enter
sbb
ins
mov
mov
lea
ins
fwait
mov
(bad)
hlt
inc
enter
pop
mov
adc
xchg
jge
retf
lahf
mov
add
add
hlt
xor
sub
mov
sti
mov
mov
pusha
dec
xchg
mov
cmp
sbb
or
jge
add
push
ins
adc
sbb
and
xchg
scas
out
jmp
push
xchg
xchg
arpl
bound
out
cld
out
push
dec
fidivr
pop
cmp
mov
retf
xchg
pushf
fadd
pop
imul
dec
mov
lds
aaa
sbb
arpl
iret
cld
fs
(bad)
lahf
in
push
fisttp
out
jo
fisub
fisttp
or
sbb
jecxz
cmps
dec
xor
aam
lea
punpckhwd
repnz
dec
adc
hlt
popf
and
sbb
out
mov
mov
(bad)
and
adc
(bad)
retf
cmps
pop
and
or
or
js
xchg
push
and
loopne
or
mov
xor
cmp
repz
jl
push
in
(bad)
aad
mov
cdq
call
ja
dec
xor
add
xor
in
(bad)
ins
leave
cmp
xchg
cmp
scas
adc
das
(bad)
xchg
and
out
clc
lods
out
fisttp
dec
pushf
jle
dec
sub
mov
pop
test
jns
retf
mul
xor
push
or
mov
inc
call
and
push
inc
leave
stos
and
mov
and
jno
adc
inc
jno
outs
call
pushf
xor
stos
aad
mov
das
dec
and
retf
pop
das
or
int3
ficomp
ins
aad
jnp
push
ins
jmp
mov
mov
adc
add
jno
or
in
add
into
pusha
mov
mov
loopne
jns
imul
dec
dec
(bad)
xor
mov
fadd
mov
aad
adc
adc
movs
xchg
dec
ins
mov
cld
sub
inc
add
add
inc
inc
sub
mov
cmp
stos
pop
out
inc
jecxz
sti
in
dec
ficomp
mov
test
cli
and
sub
cdq
jl
push
stos
leave
scas
xchg
pop
add
neg
lock
stc
shl
rol
inc
mov
and
call
les
and
lods
je
xor
bound
inc
leave
adc
jne
in
mov
or
popf
jbe
jnp
mov
out
mov
test
lahf
lods
outs
push
cmc
cmp
inc
shrd
popf
(bad)
in
fldcw
mov
sbb
cmp
test
mov
and
inc
shl
adc
popa
fdivr
popa
call
scas
in
mov
(bad)
cmp
inc
(bad)
sti
cwde
dec
neg
sbb
fdivr
ins
(bad)
aaa
popa
in
push
addr16
or
sbb
sub
xlat
out
pusha
push
mov
cmp
test
(bad)
cld
jnp
add
jecxz
mov
mov
mov
stos
out
enter
mov
sbb
xchg
xor
or
xor
jp
dec
sub
popa
js
jnp
repz
xchg
jecxz
je
(bad)
and
and
adc
mov
lea
dec
rcr
imul
adc
cli
mov
pop
xchg
out
push
fist
fdiv
mov
pop
pop
and
popf
les
cli
mov
pop
loope
aaa
retf
retf
stos
push
inc
push
push
jns
call
jne
or
push
sbb
shr
aaa
jp
pop
jecxz
dec
sar
mov
shr
iret
dec
dec
or
call
mov
rcr
inc
jo
add
and
movs
push
and
pop
ficomp
sbb
cmp
stos
into
daa
sub
push
jbe
xchg
push
in
mov
cmps
xlat
mov
ss
jecxz
dec
cmp
stos
cmp
jns
imul
ror
pop
pusha
(bad)
in
in
cdq
mov
sub
cmps
mov
in
mov
or
inc
sbb
lahf
stc
pop
xchg
js
sbb
and
dec
xor
movs
(bad)
adc
cmp
leave
shl
dec
inc
mov
ins
cmp
jle
rcr
icebp
(bad)
sbb
mov
cld
xchg
enter
arpl
mov
sub
popa
jne
pop
out
mov
adc
ret
pop
test
repnz
add
sub
shl
inc
jmp
shl
(bad)
movs
adc
leave
(bad)
push
in
sub
xchg
sub
shl
stos
aaa
out
pop
cmc
jb
enterw
(bad)
in
jbe
rol
and
sub
jno
mov
ret
inc
mov
dec
adc
shl
sub
or
xchg
leave
cmp
or
out
jp
shl
xor
xchg
cwde
dec
xor
loope
das
mov
sub
dec
test
jns
jbe
pop
mov
jb
dec
test
or
pop
pop
push
aaa
mul
mov
cmp
cmps
mov
adc
or
ret
xchg
dec
stc
loop
jp
clc
rcl
push
mov
jecxz
pushf
mov
aad
inc
jnp
inc
lods
sahf
stos
add
sub
lock
repnz
lds
popf
mov
mov
add
in
jg
jae
test
xchg
(bad)
mov
stos
sti
sub
sub
lock
clc
xchg
sub
fwait
mov
mov
xabort
mov
cdq
out
arpl
xor
inc
cmp
mov
ds
mov
mov
add
push
inc
and
adc
jl
adc
mov
ficom
aaa
push
test
jo
ret
mov
rcr
xchg
adc
out
xchg
or
jl
vrsqrt28pd
es
xchg
inc
pusha
or
ss
jmp
in
pusha
in
lahf
addr16
fwait
test
jbe
js
ss
sbb
push
pop
sub
inc
pushf
adc
xor
push
cmps
test
add
pop
jae
mov
pushf
(bad)
aad
dec
push
add
(bad)
jge
push
mov
mov
xor
enter
and
mov
or
or
xor
and
retf
(bad)
jmp
dec
xor
dec
aam
and
popa
imul
mov
push
add
(bad)
(bad)
jmp
or
push
in
mov
mov
xor
cmp
pop
jmp
mov
and
inc
adc
jno
outs
ss
std
fs
stc
(bad)
push
adc
(bad)
fucomi
ret
enter
mov
mov
push
dec
fadd
jmp
lds
gs
les
hlt
aaa
mov
xchg
sbb
xchg
add
movs
fmul
rol
ins
add
cmp
add
xchg
push
sti
outs
loope
in
test
mov
into
and
sti
sub
retf
jge
call
lods
test
push
das
gs
ret
dec
xor
sbb
test
(bad)
jge
int
or
sahf
mov
xchg
mov
sub
mov
xor
xor
(bad)
cmp
mov
mov
and
jns
and
psubb
test
add
jl
loope
xchg
gs
xor
inc
into
loopne
push
mov
adc
into
push
in
pop
dec
call
jge
sbb
stos
push
inc
retf
out
pop
inc
lods
pop
push
aas
daa
test
xchg
sbb
xor
mov
inc
loope
jmp
mov
(bad)
adc
xchg
ins
adc
xchg
xchg
push
push
xor
hlt
cwde
fs
xchg
pop
loopne
repz
call
call
add
fdivr
ret
dec
pop
and
fdiv
mov
inc
outs
mov
and
bound
jmp
sti
sub
std
add
es
(bad)
adc
je
cmp
call
and
inc
lahf
mov
(bad)
std
daa
ins
fist
push
or
std
and
mov
xor
xchg
xchg
inc
aam
sbb
xchg
xchg
into
test
xor
(bad)
xor
mov
xor
jnp
push
call
jae
add
test
xchg
add
cmc
les
stc
aam
(bad)
out
dec
dec
mov
aad
pop
int3
stos
and
cmp
sub
xchg
std
int
lea
test
out
loopne
stc
ret
jb
add
data16
nop
or
stos
and
in
sbb
mov
fs
jno
add
shl
dec
inc
jae
lea
inc
cmp
jp
js
push
into
inc
cmp
and
ins
xchg
scas
mov
xor
scas
xchg
xchg
sub
sbb
mov
sub
inc
sub
jecxz
pop
cmc
ja
adc
sbb
ins
(bad)
push
mov
cdq
jl
jp
or
ins
loop
enter
adc
adc
imul
movs
pop
or
or
movs
clc
xchg
int3
je
lods
fcomi
adc
mov
inc
cmp
lock
ret
out
mov
into
mov
mov
xchg
scas
sar
retf
cmp
call
and
pop
dec
hlt
sahf
push
out
jne
fmul
inc
test
ja
and
dec
stos
lahf
enter
rcr
loope
cmp
cmp
test
pop
inc
jmp
dec
mov
fdiv
dec
imul
in
mov
add
fs
cmc
mov
xor
ffreep
xchg
inc
(bad)
stc
xor
enter
dec
mov
inc
or
add
dec
push
lahf
dec
call
sahf
push
mov
sbb
push
(bad)
pusha
cmp
call
adc
jmp
push
jbe
adc
sub
ret
js
mov
daa
dec
aas
fmul
cdq
jno
inc
into
mov
dec
sbb
xor
jb
mov
and
add
mov
out
test
mul
mov
rep
div
add
cmp
(bad)
mov
arpl
jl
add
in
dec
pop
pop
mov
sbb
and
sbb
aad
fcmovbe
das
or
nop
inc
push
sub
mov
sbb
test
mov
mov
pop
ds
and
pop
fcomp
inc
add
rcl
mov
mov
call
dec
repnz
mov
aam
jbe
xchg
or
mov
outs
pop
push
xchg
push
enter
and
pop
pop
es
(bad)
mov
sub
dec
jnp
lock
out
leave
push
fwait
push
rcl
aas
mov
mov
mov
les
mov
bound
shr
mov
aaa
rcr
pop
sbb
adc
aam
aam
rcr
xlat
gs
and
dec
jl
jmp
cmp
sub
add
fld
lods
mov
movs
inc
xor
ret
xchg
lods
pop
mov
js
sbb
(bad)
aam
add
enter
ins
in
adc
push
pop
jp
or
add
pusha
test
ret
mov
popa
dec
inc
loopne
mov
js
mov
call
aam
sbb
movhps
sub
call
jo
or
sbb
mov
sbb
and
lahf
hlt
push
jno
imul
cmps
ins
loop
fsub
cmp
pop
pop
mov
loopne
mov
fnstenv
inc
ficom
int3
fs
mov
outs
clc
lahf
dec
imul
and
repz
aaa
std
and
lds
cmp
mov
cmps
imul
pop
stc
and
iret
inc
push
fsave
in
outs
aad
js
fld
xor
aaa
test
rol
or
iret
mov
int
mov
xchg
(bad)
jae
cmp
je
cmp
add
or
iret
pop
test
pop
icebp
shl
add
ror
dec
inc
leave
stos
icebp
loop
mov
dec
or
xor
pop
push
dec
popa
pop
mov
dec
sub
adc
mov
jns
xchg
stos
imul
leave
clc
add
push
cmp
push
and
scas
xor
stc
pop
call
mov
sub
les
in
jb
lahf
mov
dec
call
or
(bad)
dec
call
jge
pop
add
mov
mov
pop
push
gs
cdq
mov
ja
out
shl
pop
leave
popf
or
sub
stos
cmps
retf
adc
push
xor
inc
jo
retf
fsincos
push
pop
push
fucomp
loopne
repnz
pcmpgtd
retf
retf
div
nop
test
mov
clc
sub
mov
jmp
repz
mov
not
push
fs
int3
push
xchg
bound
cmps
adc
xchg
push
xchg
outs
xor
(bad)
shl
push
mov
out
cdq
mov
call
out
push
dec
cmps
rcl
jmp
rcl
add
mov
add
adc
fnsave
sti
dec
(bad)
dec
clc
sbb
inc
aas
cmp
adc
or
jmp
outs
jmp
fsqrt
pop
and
es
add
loopne
aam
dec
imul
mov
scas
xchg
shl
lahf
push
pop
add
pop
scas
cdq
shl
imul
repz
inc
add
dec
xchg
ja
sbb
pop
sbb
dec
pop
inc
movs
cmp
cmp
xchg
not
adc
ja
in
mov
cdq
in
sysret
fcomp
into
imul
push
adc
mov
add
adc
imul
mov
stc
(bad)
cmp
and
push
jecxz
pop
push
loopne
in
xchg
push
leave
xchg
(bad)
mov
ds
xor
je
fistp
out
mov
pop
and
add
outs
and
or
xchg
push
cld
cdq
sar
dec
ficom
mov
dec
pop
xor
imul
fist
cdq
in
daa
add
adc
or
dec
xor
jo
xor
cld
mov
add
mov
push
ins
pusha
mov
inc
and
xchg
jmp
and
mov
fmul
push
or
(bad)
sbb
push
or
fst
stos
push
cdq
and
jle
add
cli
mov
sbb
daa
cmps
dec
dec
xor
and
outs
xchg
cli
jmp
stos
adc
adc
pop
stos
dec
in
imul
dec
and
push
lds
addr16
outs
pop
int3
lea
pop
shl
fidiv
pop
or
outs
xchg
imul
sbb
push
bound
xchg
mov
mov
fwait
and
sub
vorps
push
pop
pop
push
pop
hlt
push
in
cmovle
ss
imul
xchg
rcr
nop
(bad)
push
mov
fadd
fcomp
shl
sbb
pusha
aas
push
and
push
std
arpl
pop
dec
push
jno
enter
mov
fnsave
sahf
mov
mov
sub
icebp
aam
sar
int3
dec
fs
fwait
std
lods
inc
dec
ja
xor
call
loop
callw
lods
std
test
pop
rol
lds
pop
icebp
xchg
ror
clc
ins
jbe
ltr
jecxz
in
adc
mul
(bad)
mov
shr
pop
lods
push
xor
adc
movnti
ret
out
gs
ins
outs
ja
xchg
and
ror
inc
imul
cdq
fst
xor
test
mov
jge
gs
out
daa
hlt
in
div
pop
mov
(bad)
jmp
pop
inc
cmps
inc
or
mov
ss
das
repz
fld
mov
sbb
jp
movs
and
mov
cmp
dec
clc
pusha
outs
sub
in
mov
jbe
adc
cdq
adc
ret
stos
or
pop
movs
inc
mov
imul
ror
mov
js
mov
jp
fld
xchg
aad
clc
cmp
push
sbb
iret
sbb
jecxz
loop
jo
stos
ja
fs
push
push
in
cld
jg
cmp
gs
(bad)
(bad)
xlat
cmp
(bad)
mov
dec
push
jne
test
(bad)
cli
out
dec
icebp
push
push
push
int3
je
dec
or
mov
imul
xlat
add
jo
enter
out
popf
daa
lahf
test
xchg
pusha
cmp
inc
push
inc
fst
pop
adc
mov
inc
dec
push
jl
lds
shl
iret
or
push
in
pop
js
dec
ins
aam
mov
cdq
aas
adc
or
cmp
mov
dec
daa
scas
lahf
ret
mov
out
mov
imul
stos
xchg
xlat
push
or
imul
jae
jbe
cmps
shr
and
cli
popf
jp
loopne
jl
adc
and
out
idiv
sub
icebp
test
(bad)
lar
and
adc
fwait
mul
adc
or
(bad)
dec
mov
fmul
push
scas
push
sub
data16
push
cs
add
or
push
pop
mov
in
push
mov
and
jge
sti
(bad)
push
repnz
and
mov
mov
or
dec
pusha
dec
jnp
cld
lahf
rcl
cmp
imul
mov
cli
mov
xor
rol
sbb
mov
jne
pusha
in
lds
mov
daa
pop
sar
add
xchg
add
jno
sub
and
cmps
mov
jl
mov
retf
push
adc
push
mov
ret
stos
push
je
sub
stos
mov
pop
xor
sbb
in
dec
mov
pop
(bad)
(bad)
inc
popa
es
call
stos
mov
pop
aad
jl
jp
test
mov
sub
(bad)
mov
les
mov
push
inc
xchg
xor
ret
clc
in
jbe
mov
retf
stos
in
mov
dec
test
out
jne
add
ffree
push
pop
mov
mov
mov
sbb
push
test
data16
int3
call
or
loopne
sbb
in
ret
aas
repnz
adc
inc
repnz
mov
xor
and
adc
jb
pushf
jmp
push
jg
and
jge
scas
mov
lods
pop
mov
neg
mov
fidivr
xor
cmc
adc
(bad)
std
sub
xchg
gs
sub
pop
popf
jg
add
adc
test
repnz
sahf
out
xchg
cmovg
(bad)
mov
dec
test
sar
test
push
xchg
xor
xchg
out
jno
jno
adc
sub
mov
mov
mov
nop
(bad)
mov
mov
push
(bad)
(bad)
jbe
or
cmp
jbe
xchg
adc
cs
and
clc
repnz
sub
pop
scas
js
xchg
pop
imul
and
mov
stc
pop
inc
outs
hlt
loope
mov
fnstcw
dec
pop
jnp
mov
mov
dec
or
and
or
inc
add
mov
aam
cmp
xchg
(bad)
jle
int
sbb
mov
adc
movs
(bad)
jge
jne
dec
add
loope
and
cmp
mov
out
jmp
mov
adc
mov
pop
ret
pop
imul
sbb
inc
pop
add
dec
jmp
cdq
sbb
lahf
sbb
pushf
mov
(bad)
fnstsw
add
mov
iret
mov
dec
mov
push
stos
stos
add
rcl
xor
outs
icebp
(bad)
mov
xchg
push
inc
push
in
mov
jge
add
jl
xchg
fiadd
sub
jns
std
adc
dec
or
xchg
xchg
push
sbb
adc
ret
clc
jl
or
(bad)
hlt
add
mov
pop
in
push
xor
neg
push
je
jmp
inc
test
lds
jno
fiadd
aas
mov
xor
push
cwde
xchg
dec
ds
sbb
clc
(bad)
ds
push
sbb
(bad)
fdivr
mov
jae
repz
xor
sbb
call
push
repz
in
push
mov
ds
push
mov
push
or
jbe
movs
sbb
jne
and
gs
adc
xchg
pop
xchg
and
ja
and
adc
movs
mov
add
in
mov
mov
sti
dec
mov
mov
mov
ret
mov
jl
nop
lods
mov
push
enter
int3
xor
in
mov
mov
nop
sahf
or
jge
retf
pop
lds
xchg
sahf
pop
dec
cmp
dec
scas
xchg
test
cmp
fsub
das
mov
test
popa
cmc
mov
lods
jne
imul
jmp
shl
bswap
and
xor
in
lds
push
lock
retf
mov
dec
and
bound
(bad)
loopne
leave
jl
ffree
aaa
cwde
dec
inc
outs
jle
xchg
xchg
dec
movs
test
fisub
pop
mov
popf
(bad)
jae
add
xor
sbb
in
imul
cmp
inc
jge
das
jo
test
mov
adc
daa
shr
mov
cmc
std
pop
adc
inc
add
outs
retf
sub
sar
inc
sub
mov
xchg
jae
in
es
mov
fistp
scas
push
xor
stc
jmp
push
in
mov
xchg
jns
adc
inc
repz
sub
add
sahf
rcr
cmc
fcomp
fdiv
das
sub
js
test
pop
std
sub
stc
sub
enter
cmc
(bad)
or
cmps
xchg
test
push
add
xor
and
push
xor
aad
js
add
fst
add
icebp
cmps
cmp
mov
inc
aad
(bad)
pop
lahf
push
sbb
pop
not
jle
inc
mov
call
or
add
push
mov
adc
mov
inc
call
int
push
push
bound
push
mov
push
or
add
cmp
mov
push
xchg
bound
pop
fsubr
cld
nop
adc
sbb
mov
mov
std
ss
push
jae
and
mov
test
mul
jb
xchg
dec
cmp
addr16
adc
or
outs
jb
mov
in
pop
std
lahf
js
jge
mov
int3
cli
scas
nop
add
repz
lods
stos
mov
call
and
sub
add
sub
xor
jg
or
dec
icebp
adc
dec
cs
in
inc
out
push
jge
lods
(bad)
out
mov
pop
lods
dec
inc
test
pop
bound
mov
jbe
add
shl
inc
aaa
icebp
jno
aaa
pop
fcmove
and
fdecstp
mov
pushf
in
mov
xor
movs
mov
push
fimul
xor
push
js
pop
retf
pop
inc
and
pop
out
mov
addr16
push
int
sti
jecxz
ret
pop
test
cmps
sub
mov
cli
inc
iret
fistp
das
nop
jno
fwait
sub
or
inc
(bad)
mov
stc
cmps
jmp
ja
add
fs
movs
sbb
xor
jo
aam
fsub
xchg
ins
ss
into
xor
pop
ds
push
mov
js
mov
fmul
jmp
cmp
bound
mov
and
jne
ja
jp
and
push
dec
push
inc
ss
daa
xchg
sbb
jb
inc
lahf
mov
test
addr16
add
retf
push
jg
add
or
xchg
adc
inc
(bad)
in
scas
loope
mov
and
mov
scas
fidiv
aaa
pop
dec
pop
mov
or
mov
dec
aam
mov
or
in
test
mov
push
nop
out
fucomi
sbb
dec
test
cmp
retf
jbe
(bad)
xchg
push
cli
fdivr
or
clc
xchg
call
lds
into
aas
retf
repz
xor
adc
mov
push
cld
loop
mov
cld
pop
sbb
aam
mov
push
mov
sbb
pop
or
push
adc
popa
pop
leave
cwde
xor
xor
fisubr
cmp
fistp
cmp
push
jmp
mov
clts
lahf
mov
mov
cmp
out
mov
dec
popa
aam
sub
scas
sbb
cwde
sub
test
sub
fiadd
xchg
std
sbb
mov
mov
adc
and
in
dec
cmp
scas
into
std
fld
push
lds
pop
or
ret
pop
pop
ror
fadd
icebp
push
into
adc
sub
icebp
push
jp
mov
jl
(bad)
shl
or
pop
das
inc
mov
mov
aas
inc
jnp
clc
inc
pusha
push
mov
ss
iret
sub
sub
gs
xchg
fild
push
mov
outs
ss
aas
and
(bad)
cmp
mov
stos
sbb
inc
pop
lahf
adc
mov
sbb
xchg
(bad)
mov
add
jb
mov
sahf
cmps
dec
movs
cmp
loope
dec
repnz
mov
xchg
loope
adc
xchg
push
std
adc
neg
loope
scas
ror
push
and
sub
into
mov
fidivr
push
mov
stos
pop
mov
cmp
add
xchg
or
lea
aad
xchg
inc
add
les
pop
cs
lock
cli
mov
sub
mov
jno
fdivr
jmp
daa
nop
je
mov
shr
mov
or
push
xor
pop
imul
and
jg
sbb
(bad)
out
adc
dec
push
xchg
add
mov
ja
out
mov
pusha
sbb
jo
rcr
dec
jg
lahf
xor
out
out
in
or
repnz
sub
pop
cmp
push
or
fcomp
sub
nop
lods
mov
dec
(bad)
in
push
lahf
aad
xor
cdq
fsub
mov
not
mov
rol
xor
ret
ds
sub
call
addr16
lods
pop
mov
push
sbb
mov
mov
neg
push
xor
pop
inc
data16
stc
clc
fldenv
outs
call
mov
xor
inc
(bad)
cmp
les
mov
mov
pop
shl
retf
enter
sahf
add
ins
inc
psubd
dec
in
fcomp
out
mov
xchg
xchg
cld
or
(bad)
jecxz
pop
test
sbb
(bad)
mov
icebp
inc
scas
jmp
rcr
mov
dec
mov
test
sbb
cmps
in
data16
mov
ret
sbb
inc
fs
cmp
mov
dec
and
mov
pop
shl
adc
add
sub
int
outs
int
add
jecxz
and
cwde
cmp
(bad)
fmul
lods
cmp
fistp
inc
sbb
mov
rep
mov
sbb
pop
cmp
dec
xchg
fdiv
inc
adc
jb
xchg
sahf
fmul
cmc
arpl
adc
pushf
jns
sub
jp
xchg
ret
dec
jo
ss
fcmovnbe
(bad)
dec
cs
fidivr
test
test
stc
add
je
fdiv
sub
inc
loop
xchg
jb
mov
cli
sub
sub
push
pop
out
jmp
mov
retf
dec
inc
xchg
xchg
lahf
sbb
push
cmp
dec
add
int
pop
outs
adc
jae
(bad)
retf
push
dec
and
stos
call
scas
je
sub
xchg
lahf
(bad)
movs
ins
xchg
pop
adc
test
js
sub
sub
jno
push
stos
sbb
arpl
fwait
icebp
jmp
dec
ja
mov
inc
fild
pop
bound
out
outs
xchg
push
dec
popa
scas
sbb
shl
neg
sub
push
btr
out
fcomip
and
push
shl
xchg
fild
in
cmps
sub
add
xchg
cmp
xor
adc
mov
jae
cmc
cmps
adc
adc
adc
fwait
and
or
leave
cmp
jmp
je
das
xor
mov
mov
pop
test
mov
rcl
cli
inc
aam
test
inc
lock
pop
jno
nop
mov
push
inc
test
and
(bad)
jnp
fnstcw
add
sub
cwde
int
sbb
adc
sub
mov
fs
sub
push
pop
out
cmp
(bad)
ss
retf
cwde
mov
popa
lods
push
shl
dec
inc
dec
aad
hlt
out
arpl
xor
pop
js
jmp
adc
sub
or
dec
xor
adc
mov
mov
call
xchg
xlat
push
out
mov
adc
add
cmp
ret
push
mov
adc
mov
mov
mov
loop
pop
(bad)
mov
cld
or
icebp
test
xchg
or
mov
scas
mov
test
or
xor
cmc
ins
mov
test
pop
xchg
sub
lods
sbb
inc
or
push
xor
inc
rol
xor
inc
jae
cwde
mov
arpl
ret
lods
adc
nop
sbb
mov
nop
xchg
outs
and
mov
adc
retf
fistp
mov
cmp
test
sbb
push
jno
add
mov
sbb
push
call
cmp
dec
fdiv
add
out
(bad)
pop
dec
not
push
cs
sub
fimul
mov
cld
dec
outs
mov
outs
xor
retf
pop
push
jb
jne
jecxz
lods
sub
adc
push
or
and
test
mov
cmp
or
dec
sar
pop
dec
and
stos
xchg
adc
jnp
inc
pop
adc
push
dec
cmps
mov
add
mov
inc
cmp
inc
fucom
sub
mov
(bad)
outs
lods
lods
mov
mov
cmc
adc
movs
pop
dec
imul
cs
or
sub
fnstcw
or
jge
aam
pop
dec
je
fdiv
and
mov
adc
adc
ret
mov
mov
test
hlt
mov
pusha
in
pop
lods
ds
or
pop
int
dec
fwait
dec
lds
outs
mov
xor
out
loopne
pop
cmp
rol
or
xchg
stc
cld
sub
out
mov
mov
imul
loope
push
cmp
mov
mov
push
fsub
ins
add
sub
sbb
xor
push
jno
adc
xchg
outs
retf
pop
mov
ss
cmp
das
lock
leave
movs
and
push
(bad)
sub
leave
mov
mov
mov
in
mov
adc
push
dec
mov
ins
xor
into
rcr
fdivr
pop
das
or
cmp
push
mov
dec
mov
jnp
jg
xor
sub
into
outs
push
push
(bad)
test
xchg
repnz
fidiv
js
mov
lods
loope
mov
cmp
enter
cmp
xchg
repz
cmp
icebp
pop
pushf
sub
int
call
lahf
adc
xor
jbe
push
nop
push
xchg
push
lods
jnp
push
scas
cld
push
xchg
ja
ss
fld
mov
fdivr
call
dec
add
push
xchg
lock
push
mov
sub
daa
sahf
and
fisubr
adc
add
jne
sbb
jbe
add
inc
push
jmp
dec
mov
jne
sahf
ror
push
rcr
mov
cmp
repz
adc
popa
push
push
fcompp
xchg
mov
xor
xor
push
pop
gs
cdq
pop
mov
xchg
adc
inc
jmp
pop
add
dec
dec
stos
push
fbld
xchg
ret
inc
sahf
stos
mov
jb
stc
push
arpl
and
push
xchg
call
iret
push
fiadd
rcr
jns
sbb
inc
jge
cdq
stos
mov
test
outs
fldcw
fistp
jmp
push
test
jmp
pop
fisttp
(bad)
sub
cdq
outs
leave
adc
retf
cld
or
xchg
jae
rcr
dec
and
pushf
dec
outs
std
mov
cmp
out
test
ja
push
jg
mov
xor
fistp
sti
and
imul
add
pop
adc
sti
fisub
jl
or
pop
mov
(bad)
daa
or
fsubr
ins
ret
arpl
test
fld
popa
pop
cmps
push
mov
movs
adc
arpl
push
cld
mov
ins
mov
xchg
je
fs
retf
fld
xchg
ins
and
lock
shl
fisub
xchg
movs
sahf
fldenv
daa
dec
mov
fwait
push
add
push
repz
in
imul
pop
push
or
call
add
repnz
jl
fs
jno
loop
and
cmp
jle
imul
pop
push
ret
into
xchg
dec
xor
cwde
test
or
sti
sbb
mov
xor
out
repnz
je
xor
push
popf
std
and
push
mov
inc
mov
rcl
in
xor
call
inc
call
cmc
nop
lods
and
jecxz
dec
adc
sub
cmp
sti
rol
call
cmps
ins
xchg
jo
test
addr16
push
xor
inc
mov
jnp
scas
iret
or
dec
jmp
jecxz
dec
pushf
push
mov
jne
mov
xchg
push
daa
and
mov
fcomp
int3
dec
xchg
nop
enter
je
outs
fadd
push
xchg
push
sahf
sbb
xchg
cmp
leave
outs
cmp
sbb
int
push
mov
or
dec
(bad)
movs
cmp
(bad)
fwait
shl
ds
xor
ret
mov
and
int
mov
mov
das
dec
mov
stos
test
xor
cmp
adc
iret
arpl
daa
shl
leave
shl
aad
ret
mov
lods
pop
inc
push
adc
push
repnz
or
dec
xchg
outs
jmp
cmp
cmp
xor
inc
sar
jb
jnp
popf
mov
out
mov
cmp
mov
adc
sub
fdiv
popf
jmp
sub
xor
pop
(bad)
dec
and
mov
jmp
xchg
(bad)
adc
cmc
push
push
and
lods
lods
call
mov
loopne
(bad)
jmp
and
add
lods
cli
cwde
xchg
ror
pop
clc
inc
push
outs
ret
lods
lea
mov
popa
push
jno
test
ret
in
iret
lea
jbe
mov
and
fldcw
popa
sub
mov
pop
jo
(bad)
cmp
xchg
sbb
lahf
cmp
pusha
pop
(bad)
ret
cmp
push
mov
test
cli
leave
xchg
push
(bad)
push
add
sbb
repnz
(bad)
adc
lea
cwde
cli
mov
dec
pop
jg
dec
fdivr
add
push
cmp
daa
mov
dec
cld
pop
mov
adc
adc
in
sbb
cmc
or
bound
cmps
dec
inc
sub
call
add
adc
mov
push
push
sbb
loopne
and
cmp
mov
pop
mov
jg
cmp
stos
push
sub
jge
mov
fmul
xchg
aam
frstor
xchg
mov
fsubr
sbb
outs
sbb
or
pop
call
test
pusha
movs
pop
ret
into
push
sti
jbe
jb
test
pop
imul
stos
test
leave
js
jp
(bad)
cmc
out
mov
pop
xor
inc
mov
sbb
mul
xor
or
shl
mov
and
lods
arpl
ss
mov
ja
xor
xchg
in
dec
cmp
outs
mov
xor
dec
pop
jle
fs
aam
add
cmp
xor
cmp
pop
pop
nop
loop
xlat
aad
mov
test
sbb
push
sar
ss
adc
or
xlat
pop
or
and
fidivr
or
mov
addr16
ins
cmp
mov
lock
add
cmc
pop
mov
cmp
mov
stos
lods
ins
stos
jmp
hlt
push
je
shl
dec
aad
fcomp
xchg
repz
and
loope
movs
ficomp
jae
cmp
mov
(bad)
loope
mov
sub
ret
xor
aam
mov
xchg
dec
test
inc
or
shr
out
int
lds
retf
mov
push
mov
cmc
dec
sbb
xor
jae
fimul
movs
inc
pusha
rcl
test
inc
sub
mov
mov
pop
jo
sbb
inc
dec
lds
or
mov
fistp
mov
inc
and
test
jmp
test
xor
mov
pop
inc
ja
or
loopne
jge
test
cmc
stc
push
aas
inc
arpl
gs
xchg
cmp
enter
pop
ins
pop
sbb
cmp
fs
pop
cmps
shl
cld
test
mov
and
pusha
call
dec
mov
stc
icebp
cmp
popa
mov
and
mov
test
xchg
scas
jae
and
xor
repnz
arpl
je
jo
push
aas
xor
or
retf
loop
mov
jb
mov
xor
sub
sbb
mov
or
rcl
mov
inc
ds
add
das
adc
rcl
pop
arpl
cmp
loope
(bad)
popf
clc
or
push
cld
data16
pop
(bad)
popf
imul
dec
std
shl
sub
pop
gs
movs
sub
mov
mov
int3
pop
sbb
movs
cmp
adc
and
ss
push
test
pop
push
add
jg
sbb
xchg
cmp
in
push
and
cdq
jae
xor
mov
push
imul
fst
sbb
retf
jae
lahf
inc
cli
mov
inc
int
inc
add
mov
inc
loopne
jmp
das
dec
cs
add
movs
iret
das
shl
pop
dec
or
sar
or
push
push
sahf
sti
and
sahf
mov
cdq
les
loopne
mov
out
mov
shr
xor
ss
mov
repz
icebp
sbb
dec
mov
push
push
pusha
jo
cmc
sti
adc
in
adc
and
rcr
repnz
add
jbe
mov
inc
sbb
add
inc
scas
lahf
pop
xchg
cmp
cdq
ins
mov
cmp
loop
mov
push
sbb
leave
or
mov
push
fldenv
or
repnz
outs
mov
sbb
dec
in
jae
aaa
push
push
out
jl
mov
ins
aam
dec
adc
aaa
lods
cmp
cli
cdq
push
sbb
in
push
jge
inc
leave
pop
push
stos
outs
mov
cmp
add
adc
enter
mov
pushf
pop
cwde
lods
xor
cmp
or
mov
xchg
(bad)
sbb
cmp
push
and
fistp
jecxz
inc
je
mov
lds
fistp
ins
rcl
clc
cdq
scas
cli
outs
jecxz
call
jo
jg
(bad)
fadd
jp
inc
pop
arpl
shr
mov
movs
daa
dec
jmp
or
mov
mov
aaa
pop
(bad)
cmp
xchg
mov
pslld
retf
inc
js
(bad)
cwde
mov
out
leave
sbb
dec
rcr
and
or
ret
or
jne
aad
mov
inc
ret
push
call
shl
daa
cs
or
gs
adc
mov
mov
cs
lock
adc
sub
ja
cmp
outs
ds
outs
cmc
fidivr
or
mov
xchg
add
push
retf
fnstsw
call
data16
xlat
aad
dec
sti
popa
jle
outs
push
cmp
sbb
mov
mov
jb
jnp
or
mov
sbb
das
or
retf
jge
mov
pop
adc
imul
lds
call
or
mov
cmc
imul
iret
sahf
jge
popf
cmp
mov
xor
add
enter
dec
dec
sbb
mov
inc
inc
push
data16
xchg
sbb
pop
sbb
jae
inc
popa
xlat
icebp
cdq
lea
jne
rcr
test
and
mov
jecxz
inc
gs
sub
ret
push
xor
loop
jle
sahf
js
pop
sbb
loop
mul
pop
out
dec
pop
shl
add
dec
cmp
ins
leave
ins
cmp
lods
push
jle
push
cmc
(bad)
pop
jmp
dec
dec
mov
imul
xchg
inc
stos
inc
cmp
popa
push
sbb
ins
cmp
lods
scas
push
out
not
lods
(bad)
popf
rcl
sub
dec
int
add
fwait
stos
xor
call
stos
ja
and
(bad)
inc
popf
sub
retf
shr
shl
repnz
mov
cmp
push
nop
sbb
mov
jg
iret
jb
or
pushf
icebp
jbe
jmp
aaa
(bad)
out
mov
and
xor
xchg
fwait
pop
xor
inc
(bad)
(bad)
in
mov
mov
mov
jmp
shl
add
dec
xchg
pop
call
sbb
mov
pushf
and
movs
cmp
sahf
gs
mov
xor
inc
add
iret
inc
xlat
dec
aaa
xchg
jg
xchg
push
push
cmps
ss
cld
pop
ret
xchg
xor
ret
push
fild
sbb
scas
ins
test
jge
xchg
out
(bad)
and
lds
movs
cmp
imul
sub
fdivr
pop
or
dec
inc
daa
dec
lahf
cwde
mov
fist
mov
or
mov
xchg
retf
and
aaa
fwait
mov
cmps
out
sbb
outs
inc
push
pop
and
sbb
daa
mov
fwait
adc
nop
pop
je
fs
ja
scas
sbb
je
imul
mov
cld
sub
cdq
jmp
or
dec
push
add
push
and
pop
and
xchg
ss
std
push
and
aam
daa
pop
sub
test
(bad)
mov
js
and
jb
jge
iret
add
lods
or
and
xor
jns
push
lahf
out
cdq
movs
cmp
add
add
add
and
push
into
adc
cmps
sbb
sahf
imul
or
mov
scas
addr16
mov
repz
stc
ret
push
repz
cs
or
addr16
leave
push
lods
adc
je
dec
(bad)
cmp
mov
sbb
dec
or
gs
mov
out
cmps
data16
(bad)
sub
or
out
xchg
mov
dec
mov
popf
shr
mov
push
das
fisttp
cld
das
popa
cmps
push
jnp
pushf
jbe
add
sub
cmps
sbb
pop
mov
xor
test
ds
call
out
jns
xchg
mov
int3
jno
pop
xchg
xor
xor
(bad)
ins
jmp
push
fbstp
sub
(bad)
adc
les
mov
mov
jb
mov
ds
imul
gs
test
adc
daa
loope
call
stc
dec
jae
daa
arpl
inc
call
repz
jp
dec
loop
mov
dec
cmp
cmp
stc
mov
sbb
test
or
pop
mov
popa
and
call
jmp
and
gs
(bad)
xor
adc
out
clc
je
fimul
mov
mov
push
mov
lock
ret
inc
aaa
xor
inc
adc
(bad)
lea
ins
imul
mov
test
mov
cmp
dec
push
dec
lds
push
ret
jae
fimul
enter
jp
push
pop
ins
and
mov
sti
lock
in
pop
fld
inc
jp
sbb
loope
pop
adc
in
outs
or
jmp
rcl
dec
mov
cs
xchg
ret
pop
in
xor
in
fstp
mov
adc
mov
mov
push
shl
add
popf
sub
sbb
ja
enter
jo
test
sub
jne
jg
xor
or
inc
fiadd
xchg
jge
aad
push
ss
jae
call
fst
fidiv
mov
bound
nop
or
aas
fcomp
mov
in
lea
jle
stos
aas
test
add
xchg
ss
pop
inc
(bad)
cmc
ret
movs
mov
add
inc
test
stc
fst
sbb
je
mov
push
clc
scas
inc
mov
pop
xchg
(bad)
jmp
lods
cmps
movs
and
test
mov
mov
aad
out
sub
jmp
sub
out
mov
fstp
shr
sbb
fidivr
aaa
xchg
scas
(bad)
mov
sub
ror
test
ins
out
jecxz
xchg
movs
mov
jnp
add
add
fcmovbe
or
cld
xor
sahf
mov
mov
and
cmp
add
hlt
cwde
test
mov
leave
leave
popf
hlt
dec
pop
sbb
xchg
lods
lea
adc
jbe
cmp
fs
je
stc
cwde
xchg
daa
pop
imul
pop
inc
loopne
ret
jl
or
sbb
pop
dec
jae
cld
adc
lds
arpl
arpl
or
lods
sbb
lahf
popf
pusha
or
mov
push
inc
push
(bad)
jb
jbe
cwde
dec
adc
mov
(bad)
xchg
repnz
or
mov
xor
jae
stos
ror
jne
sbb
je
in
in
push
mov
fwait
bound
inc
mov
sub
mov
mov
std
iret
jb
sbb
scas
mov
xor
(bad)
scas
xor
rcl
fmul
mov
test
sahf
sub
(bad)
in
repnz
xor
and
or
pop
js
pop
test
sahf
push
or
into
sbb
lock
cmp
shr
std
rcl
sbb
fcmovu
loope
sbb
stc
lods
mov
(bad)
aas
push
jle
or
inc
sbb
add
arpl
aas
push
fisttp
inc
sub
inc
mov
bound
jecxz
jp
pop
or
jmp
xlat
cmp
mov
cmps
inc
pop
mov
pop
and
imul
daa
ror
fs
sbb
inc
inc
adc
sbb
cmp
aam
and
sar
inc
and
or
test
int
cli
push
dec
mov
retf
adc
stc
call
jg
js
jo
or
jb
lods
fiadd
idiv
in
fiadd
push
hlt
mov
xor
mov
and
dec
dec
cmp
or
mov
add
xchg
push
stos
das
or
ins
ret
mov
jne
and
add
jae
(bad)
pop
push
add
ror
or
mov
sbb
imul
cwde
fisttp
bound
rcr
push
rcr
(bad)
fwait
dec
loopne
and
daa
fwait
inc
sub
xchg
add
or
sub
add
mov
test
jne
mov
pop
imul
lds
aad
jne
ret
xchg
mov
fadd
outs
pop
xchg
retf
adc
or
xchg
fs
dec
fwait
add
daa
in
add
or
or
mov
pop
sbb
pushf
int
leave
mov
ficom
cmp
jecxz
test
dec
mov
js
push
lods
scas
icebp
in
add
pushf
xor
push
jl
ja
xor
xlat
into
jmp
mov
addr16
push
add
dec
or
push
dec
std
pushf
ins
dec
xor
jae
mov
pop
push
imul
push
pop
adc
sub
xor
fst
push
xchg
in
xor
fsub
test
div
enter
outs
mov
xor
loope
hlt
test
(bad)
loope
lds
add
push
test
ficom
push
into
es
mul
test
mov
das
inc
es
scas
add
movs
and
jl
(bad)
mov
fistp
sbb
adc
outs
push
mov
jbe
jle
inc
bound
jg
push
pop
leave
shl
xchg
sub
test
xchg
in
inc
mov
loop
mov
xor
jo
stc
cli
(bad)
iret
pop
push
lahf
lods
mov
arpl
ret
inc
and
lods
sub
inc
mov
inc
inc
fcmovnbe
cmp
add
sbb
cmp
cmp
sbb
add
pop
cmps
mov
pop
repnz
int
push
fdecstp
xor
dec
punpckldq
push
or
xchg
jp
test
sub
sub
jmp
(bad)
loope
iret
xor
inc
inc
out
cs
mov
mov
lods
aad
mov
mov
mov
in
ja
push
and
scas
arpl
add
pop
dec
(bad)
push
pop
add
sub
jle
ins
adc
das
rcl
or
xchg
test
stos
dec
fcomp
adc
popf
loope
add
loopne
cdq
stos
push
inc
or
fwait
test
stos
outs
lds
js
ret
ss
shl
xor
push
jmp
or
xchg
mov
outs
jecxz
call
xor
fistp
imul
out
or
push
ret
jbe
push
and
movs
outs
and
xor
push
cmc
push
fcom
dec
mov
xchg
dec
mov
movs
imul
push
test
in
and
cmps
dec
ds
push
push
das
mov
aas
ds
adc
into
lea
(bad)
out
sub
cmp
adc
test
jecxz
mul
call
jl
mov
sub
or
test
fsubp
push
in
inc
xor
movs
add
push
mov
sbb
pop
sub
xor
and
sub
and
inc
xor
add
adc
stc
sub
xor
inc
fnstcw
lods
movs
push
or
inc
dec
(bad)
push
retf
mov
in
pop
cmc
fcom
jge
xlat
sub
and
(bad)
nop
imul
cmp
mov
cmp
push
enter
icebp
into
js
retf
ins
cdq
ins
mov
pop
cwde
mov
mov
add
neg
ja
scas
inc
cmp
shl
in
movs
xor
push
mov
je
iret
mov
jge
pop
adc
push
arpl
loop
bnd
cwde
xchg
mov
sub
cmps
shr
mov
inc
mulps
inc
mov
push
hlt
mov
cmp
pop
mov
test
lock
out
shl
aam
or
dec
xchg
arpl
addr16
aas
test
push
stos
into
adc
dec
add
push
call
sbb
xchg
mov
mov
mov
jge
mov
add
push
shr
jno
jmp
test
push
movs
in
ret
xlat
lea
mov
xchg
xchg
cmp
fsub
ffreep
aam
sub
mov
mov
mov
add
(bad)
fadd
mov
mov
mov
call
pop
dec
xor
cmp
rep
jp
jmp
xchg
push
enter
(bad)
int3
pop
jne
cmp
in
inc
jne
inc
push
add
and
stos
cs
xchg
push
mov
std
retf
mov
dec
cmp
hlt
lods
add
lock
jne
pop
add
pusha
adc
mov
call
mov
je
jmp
mov
jb
inc
data16
sar
add
jne
nop
daa
and
push
mov
leave
push
and
nop
xlat
and
loopne
mov
fs
pop
sub
sub
inc
rol
movs
stos
loope
ins
dec
or
fwait
xor
dec
leave
mov
(bad)
mov
pushf
clc
xor
or
jb
mov
xchg
pop
retf
gs
ret
ins
xchg
mov
gs
fwait
in
mov
jp
retf
xchg
mov
xchg
out
jnp
mov
add
sbb
ficom
pcmpgtw
clc
fwait
(bad)
sbb
xor
mov
sbb
movs
imul
xor
std
div
pop
fcomp
sub
mov
and
cld
mov
out
test
inc
in
xchg
mov
test
js
adc
inc
and
push
jecxz
fmul
sub
xchg
jb
xchg
fiadd
cwde
jns
sub
sbb
or
jns
add
cmc
dec
pusha
psrlw
out
mov
mov
push
xor
bound
sub
clc
mov
adc
mov
xor
mov
mov
and
(bad)
add
mov
sub
cmp
cld
push
adc
jle
gs
pop
mov
pop
fucomip
or
pop
push
lahf
lock
and
fwait
addr16
imul
jo
mov
xchg
sub
daa
out
cld
fwait
mov
adc
jmp
lea
dec
cld
xor
and
mov
add
jno
hlt
neg
cmp
sbb
out
mov
data16
loopne
mov
in
not
mov
ffreep
push
mov
sbb
pop
lods
lods
rol
test
xlat
shl
aad
les
retf
jb
or
sub
shl
retf
outs
not
ins
pushf
jae
xchg
pop
cmps
and
adc
jnp
push
das
sbb
shl
mov
outs
je
movs
pop
in
into
and
cld
pop
pop
mov
mov
mov
ds
outs
mov
mov
rcr
in
mov
dec
shr
pop
mov
call
scas
or
imul
sbb
(bad)
cmps
jmp
or
adc
adc
add
div
(bad)
cmp
test
int
das
jmp
adc
jp
rcl
call
lods
dec
(bad)
jle
jb
jo
shr
dec
add
dec
es
mov
adc
push
outs
mov
inc
popa
jle
cld
fcomp
arpl
push
loop
jns
enter
js
mov
jge
movs
mov
pushf
xor
xor
pop
popf
outs
sbb
pop
sbb
movs
ja
jecxz
add
xchg
sub
cmp
push
mov
(bad)
push
retf
jbe
ja
and
ja
pop
daa
lahf
cld
push
scas
sbb
frstor
push
shr
mov
jg
jg
mov
in
jmp
out
bound
mov
ja
push
add
mov
mov
xor
sub
loop
add
(bad)
(bad)
shl
mov
in
in
or
(bad)
int3
xchg
ret
or
mov
cs
sub
jle
aaa
bound
pop
mov
add
dec
into
sbb
mov
test
es
out
inc
or
gs
enter
add
cmp
sub
lds
sbb
sbb
push
cmp
xor
in
xchg
loop
call
cmovae
or
mov
bnd
xor
cld
pop
pop
ja
inc
mov
in
push
icebp
in
in
nop
xchg
xor
ins
cmp
sub
loope
mov
aaa
lds
lods
movs
imul
add
(bad)
mov
push
pop
stc
mov
nop
dec
cmps
cmp
es
sbb
xor
les
shl
mov
cwde
shl
sbb
sub
ins
clc
movs
mov
and
add
les
imul
jnp
sbb
jnp
mov
popf
sub
lods
loope
or
fcom
push
or
cmp
pusha
aas
int3
add
(bad)
xlat
fisubr
outs
push
jmp
mov
mov
int
ds
sub
js
in
dec
mov
pop
jnp
jg
aas
mov
movs
sub
and
loope
inc
fidiv
lea
ds
pop
ja
mov
pop
mov
aaa
push
(bad)
mov
xor
pushf
dec
lahf
data16
pusha
lods
jge
out
sub
(bad)
out
call
out
imul
cmp
out
int3
lahf
mov
aaa
xor
mov
sub
inc
pop
loope
data16
push
sub
out
add
mov
dec
out
pop
(bad)
mov
movs
lods
inc
jns
sahf
ja
stc
mov
or
sub
mov
mov
adc
mov
mov
sar
cmc
xchg
xor
add
xchg
inc
push
or
jmp
push
xor
imul
dec
and
pop
or
sub
xchg
and
adc
sti
jmp
cwde
mov
pushf
mov
retf
cwde
mov
pop
push
inc
stc
mov
loopne
fcom
in
shr
sti
imul
out
add
cmps
lods
out
lods
mov
cmp
dec
add
and
lahf
xchg
sti
mov
mov
adc
imul
push
push
nop
aad
out
mov
pusha
sbb
pop
pop
mov
inc
movs
xchg
add
mov
xor
(bad)
cmp
adc
jecxz
cwde
inc
and
daa
jae
mov
xor
sti
out
jmp
lods
cmp
add
jo
ret
stc
loope
sub
or
dec
mov
fs
sbb
outs
js
push
pop
dec
pop
stos
outs
adc
out
adc
jns
fdivr
jecxz
sbb
outs
pop
cmp
mov
mov
mov
mov
mov
cmp
cmp
ins
icebp
xor
xchg
nop
xchg
sar
out
pop
inc
fcomi
mov
aad
sahf
xchg
jb
lods
sti
jne
jmp
ss
and
inc
int
pusha
cmps
cmp
neg
out
mov
cdq
inc
loop
cmp
(bad)
pop
addr16
frstor
inc
scas
inc
cdq
jg
cmp
addr16
or
cmps
jmp
mov
jmp
jmp
mov
mov
add
push
adc
das
ret
xor
sub
out
mov
inc
mov
out
shr
fisttp
arpl
sub
xchg
add
jl
and
mov
mov
or
and
test
xchg
aas
shl
aad
fsubr
adc
push
cmc
adc
or
lea
loop
mov
xchg
mov
stc
push
jp
dec
iret
jl
dec
sub
popa
pop
add
fld
jp
jno
les
popf
int
jno
je
aaa
jmp
mov
sti
cmc
mov
popf
cmps
mov
jb
adc
(bad)
mov
xchg
int
outs
movs
xchg
xchg
sub
shl
cmp
xchg
mov
xchg
(bad)
call
test
cmp
(bad)
std
and
push
rcl
ss
movs
push
out
adc
shufps
das
daa
mov
add
out
cmp
loop
cmp
rcr
mov
push
pop
push
stos
fnsave
xchg
or
cs
inc
mov
fwait
xor
ins
retf
pop
pusha
inc
fcmove
enter
cmpxchg
fild
adc
outs
out
out
loopne
repnz
push
inc
mov
(bad)
and
mov
push
pop
dec
stos
adc
ficom
ficom
add
mov
and
shr
enter
(bad)
sar
push
push
fwait
out
clc
ret
mov
loop
or
out
fiadd
push
shr
push
push
xor
add
jle
ret
jecxz
dec
imul
sahf
pop
ret
and
aad
shr
mov
pop
arpl
enter
mov
push
or
push
mov
adc
hlt
leave
push
inc
test
add
pop
sub
fsubr
pop
in
(bad)
mov
pop
sbb
push
neg
xlat
jno
es
in
adc
push
repz
sbb
add
jle
sbb
scas
cli
and
loope
jb
jns
xor
pop
mov
fsubr
xchg
sti
push
es
mov
mov
pop
aam
loope
int
popa
std
(bad)
out
sbb
out
adc
add
xlat
pop
in
lahf
push
ret
jge
aad
mov
movs
nop/reserved
dec
gs
jb
test
push
adc
or
adc
fmul
xchg
mov
cmp
call
adc
pop
xchg
xor
lea
cmps
in
sub
mov
pusha
je
enter
jae
adc
ds
sub
dec
inc
ins
mov
in
stos
push
shl
rcl
and
stc
jecxz
mov
inc
stc
in
inc
and
mov
test
lahf
mov
xor
shr
push
pop
jmp
xor
jge
and
inc
dec
rol
fbstp
cmp
dec
or
sbb
fmul
mov
retf
adc
or
(bad)
pop
xchg
outs
test
jne
pop
mov
inc
clc
dec
ds
stc
sbb
mov
pop
and
adc
mov
aad
int
int
cmp
pop
je
or
fsub
or
shr
test
repz
mov
mov
push
aas
xchg
lock
inc
fistp
ret
adc
jae
lods
mov
jns
ins
mov
dec
jmp
addr16
push
mov
jno
sbb
or
and
and
pushf
cmps
cmp
mov
xchg
idiv
push
in
jge
adc
add
mov
inc
xchg
sbb
dec
adc
cmp
retf
pop
jnp
dec
(bad)
das
add
mov
hlt
or
retf
mov
aas
pop
adc
(bad)
rol
mov
add
lock
sub
hlt
aad
sbb
retf
jns
jno
dec
cmp
or
pop
inc
test
or
sub
popf
push
mov
fwait
pop
stc
bound
inc
jecxz
pop
jmp
lahf
aam
xchg
imul
int
stos
mov
pop
dec
adc
push
test
jmp
cwde
aaa
sbb
adc
rol
xor
or
jge
pop
sub
ds
xchg
or
cmps
cmp
or
cmp
into
(bad)
call
addr16
mov
push
pop
pop
lods
xor
das
mov
fcom
push
enter
call
std
std
fnsave
ins
xchg
mov
repnz
jno
(bad)
aad
dec
push
lea
inc
push
(bad)
cmp
pop
mov
les
out
or
ins
sub
pop
int
loope
outs
icebp
jnp
retf
popf
xor
stos
jp
lods
fcmovnbe
dec
mov
sbb
push
repnz
mov
push
addr16
lea
adc
add
xor
adc
or
jno
push
pop
movs
xchg
sbb
and
and
ja
loopne
out
or
sub
adc
dec
mov
scas
fmul
push
cli
fsubr
iret
mov
out
shl
xchg
cwde
inc
addr16
jne
or
push
mov
test
in
retf
mov
dec
mov
mov
inc
repnz
shl
and
jmp
sub
fcomp
imul
and
pop
rcr
(bad)
into
rcr
pop
rcr
pop
push
mov
jno
push
cmp
dec
push
rcr
in
jmp
fisub
shl
mov
and
cmps
xor
sahf
xor
push
sbb
jnp
movs
push
or
xlat
fidivr
mov
call
mov
jmp
or
mul
outs
add
pop
idiv
outs
jmp
sbb
lods
cmp
push
sbb
xchg
into
xchg
aad
aas
mov
fist
scas
lods
pop
nop
push
push
xchg
loop
jecxz
cmp
es
mov
push
fwait
jns
nop
xchg
dec
push
jge
xchg
inc
mov
inc
jmp
and
pop
pop
push
les
push
dec
jmp
je
fdivr
movs
lahf
sub
popa
or
(bad)
std
ja
into
out
sbb
or
push
adc
dec
in
mov
mov
jo
fldenv
add
sahf
scas
outs
inc
sub
adc
fistp
sti
mul
push
and
scas
sbb
jmp
out
mov
push
mov
or
pop
mov
and
push
call
gs
xchg
into
push
aaa
xor
or
cmp
retf
js
add
fdivr
and
loopne
xchg
sbb
push
lods
mov
imul
dec
dec
lods
push
push
icebp
inc
movs
js
add
xchg
fidiv
sti
jb
adc
les
pop
sahf
cld
std
add
shl
and
pusha
fcomp
add
aaa
pop
or
dec
jge
jecxz
popf
ret
and
or
mov
mov
test
pushf
inc
cmp
sbb
test
ss
mov
in
packsswb
or
rol
les
mov
mov
fst
(bad)
scas
cmp
pand
call
mov
and
lods
push
xor
xchg
adc
pop
ins
jae
movq
ret
push
mov
mulps
shl
repz
(bad)
or
test
jbe
or
adc
movs
inc
push
pop
jo
inc
adc
adc
add
test
xchg
xchg
lods
fwait
sti
add
call
in
dec
(bad)
popf
into
out
mov
push
sub
and
mov
sbb
xor
mov
fs
repnz
add
scas
(bad)
sbb
push
jbe
ret
in
cli
mov
jmp
aas
movs
dec
cdq
mov
dec
inc
mov
dec
push
js
and
call
iret
push
dec
shr
jmp
int
or
xchg
rdpmc
pop
dec
dec
lods
mov
jecxz
das
(bad)
and
push
mov
stos
mov
call
xor
in
mov
mov
test
jae
add
jge
cdq
aaa
jmp
or
mov
int
or
inc
fnsave
jl
iret
sahf
in
ins
pop
pop
push
loope
(bad)
loop
and
stos
pop
clc
into
pop
push
out
xor
das
add
sub
cmps
sub
add
adc
scas
fcmovne
jno
arpl
outs
dec
jnp
lds
xor
xor
fisub
mov
nop
in
mov
cmp
js
cli
push
push
mov
adc
cmp
push
push
mov
mov
adc
mov
popf
data16
jge
inc
add
jecxz
leave
sub
xchg
mov
jl
ss
jmp
test
lods
imul
and
jge
mov
dec
sbb
in
aaa
push
idiv
push
push
retf
push
sub
mov
cmp
not
ret
jae
cmp
pop
mov
or
test
mov
inc
add
add
add
sub
ss
iret
in
imul
add
sub
data16
jb
jns
stos
call
jae
add
rcl
push
cmc
cmps
cmp
push
xchg
data16
dec
pop
mov
ss
gs
es
movs
enter
push
adc
push
sub
jg
shl
push
add
mov
fiadd
mov
test
imul
out
mov
mov
push
cmc
pushf
push
jmp
stos
ds
arpl
enter
mov
in
xchg
aam
aad
test
sti
call
test
mov
dec
test
jne
inc
cmps
dec
ins
cmp
add
mov
xor
aad
or
jb
out
adc
inc
adc
fistp
inc
ja
pop
cmc
stos
cli
or
aam
(bad)
sbb
pop
stos
cs
out
adc
xor
mov
sub
in
setns
arpl
call
sub
push
jg
bound
loop
aaa
(bad)
and
dec
adc
inc
push
ss
pop
dec
dec
out
cmps
(bad)
fbstp
dec
cmp
leave
scas
mov
dec
jge
and
adc
lock
enter
cmp
pop
retf
repnz
jp
pop
dec
jno
jbe
adc
jnp
mov
push
xor
jmp
scas
jecxz
hlt
jmp
cli
xchg
sbb
std
pop
mov
inc
xchg
cmc
shr
cmps
xchg
mov
xor
mov
sub
fstp
ror
jge
push
test
or
cmp
mov
and
inc
jae
loope
mov
pop
add
bound
in
mov
xchg
(bad)
mov
xchg
ja
pop
jne
jbe
add
fdiv
outs
add
stos
retf
js
ret
jb
ss
lahf
shl
outs
sbb
test
adc
mov
scas
inc
sti
push
adc
cli
loop
daa
call
inc
and
lea
pop
loop
sub
adc
repnz
sbb
(bad)
(bad)
push
shl
inc
fist
sub
adc
pop
das
in
sbb
mov
ins
cwde
jl
or
(bad)
les
call
es
mov
cmps
mov
aas
cmp
out
or
lods
sbb
imul
lods
shr
mov
into
add
xchg
cmp
retf
dec
fcomp
mov
jp
addr16
xchg
lock
out
mov
pop
aas
jg
dec
into
ror
or
dec
sar
cmps
sar
jge
leave
lock
lods
cmp
or
dec
out
xchg
icebp
pop
dec
outs
and
int3
clc
mov
test
out
lea
inc
bound
call
dec
cld
movq
pop
das
je
popa
sub
movs
mov
les
sub
int
aam
cwde
ror
retf
pushf
shl
out
mov
retf
dec
lods
or
or
arpl
mov
jae
daa
add
data16
or
outs
icebp
push
cmps
fild
mov
xor
mov
and
pop
adc
fild
test
mov
loopne
arpl
jb
sbb
cmps
push
pushf
test
retf
pop
mov
jo
cmp
in
mov
sbb
imul
mov
(bad)
(bad)
sbb
aas
scas
retf
inc
scas
or
or
or
mul
test
(bad)
jmp
cmps
xor
ficomp
mov
mov
jnp
jns
cli
in
xchg
jo
mov
jae
hlt
ins
cmc
movs
scas
pop
sub
(bad)
mov
mov
call
push
xchg
inc
or
dec
mov
sti
les
in
add
sub
cmc
adc
and
sbb
mov
or
stos
xor
push
shr
xor
mov
ret
pop
xchg
cmc
fidivr
xchg
aad
and
pop
mov
pop
imul
dec
mov
and
std
and
and
mov
dec
gs
xchg
pop
ja
push
jb
pop
add
sahf
xor
pop
ss
mov
ss
popa
arpl
sahf
cdq
mov
push
das
int3
jmp
stc
lods
(bad)
call
dec
add
test
out
xor
inc
sub
scas
repz
mov
inc
add
cmp
jecxz
lds
mov
inc
aas
xchg
(bad)
xchg
nop
pop
imul
test
imul
scas
enter
stos
pop
add
push
mov
ins
int
gs
hlt
loop
je
push
mov
xchg
mov
inc
mov
inc
ss
lds
fadd
pop
rdtsc
repz
rcr
ret
fmul
sbb
addr16
mov
xor
pop
pop
nop
fsub
adc
cmc
lea
stos
loope
repnz
mov
sbb
inc
inc
imul
fcmovnb
push
pop
test
xor
add
repz
or
into
ins
(bad)
lock
scas
test
jnp
out
in
stos
not
stc
mov
sbb
stos
movs
hlt
pop
or
and
mov
pop
add
in
pop
jge
fs
je
lods
stos
mov
mov
xor
add
dec
jbe
test
ror
jae
outs
js
fcom
(bad)
jmp
pusha
add
adc
test
(bad)
xchg
and
mov
jo
add
cmp
outs
cmps
(bad)
loope
pusha
mov
sub
leave
call
pop
cs
mov
push
setno
lahf
xchg
in
or
sub
repz
cdq
pop
imul
sub
imul
jg
pushf
(bad)
aas
sbb
test
je
test
aas
in
mov
stos
dec
cmp
(bad)
or
lea
push
shl
fld
fldcw
jp
adc
call
add
xchg
fcom
xchg
ret
data16
sar
jno
sbb
cli
cmc
sbb
leave
jge
inc
sub
inc
fndisi(8087
xchg
pop
pushf
add
movs
jno
dec
ds
dec
rol
pop
adc
stc
cmp
out
je
(bad)
fidiv
sbb
adc
loopne
adc
cmps
adc
dec
pop
adc
inc
push
sub
jmp
add
or
fnstenv
jae
sub
xchg
mov
(bad)
lods
or
ins
xadd
shl
and
pop
sbb
out
les
mov
je
inc
out
xor
jns
add
cmp
movs
mov
jne
repz
xor
retf
push
cmps
test
and
or
sub
mov
sub
pop
jno
sahf
not
inc
hlt
mov
ret
imul
inc
mov
jecxz
call
aam
les
cmp
std
or
pop
lea
mov
cs
nop
mov
jmp
fwait
nop
or
sub
jo
fist
pop
dec
sub
call
int
popa
jbe
push
push
mov
and
clc
inc
adc
mov
ss
or
sbb
aaa
rcl
rcr
mov
dec
rcr
cmp
add
mov
bound
movs
xlat
pop
(bad)
cli
test
mov
sub
xchg
mov
sbb
mov
ffreep
push
xchg
inc
xchg
pop
(bad)
daa
mov
js
mov
mov
add
out
xchg
or
mov
leave
aam
mov
pop
loop
loopne
(bad)
imul
and
inc
push
cli
in
add
xchg
(bad)
aad
cmp
mov
pop
enter
xchg
aam
fst
xchg
adc
push
int
lods
xchg
fiadd
jp
or
in
cmp
fst
je
enter
aas
leave
mov
mov
push
mov
ss
mov
adc
repz
add
loope
jno
stos
jmp
pop
jmp
ret
inc
leave
pop
push
jg
xor
pushf
mov
xchg
push
dec
sar
imul
or
aam
test
imul
mov
xchg
jmp
cmps
clc
das
jb
add
int
fsub
pop
push
push
into
fsub
das
bound
xor
leave
add
jmp
aaa
push
hlt
add
jnp
pusha
or
pop
test
push
or
sbb
mov
mov
mov
cmps
out
mov
out
fs
jae
inc
dec
loop
lea
outs
sbb
aad
or
jmp
enter
pop
sahf
sub
gs
call
jbe
into
inc
sub
sar
cmp
or
pop
sar
sub
pop
mov
sub
into
sbb
loopne
xor
in
jmp
xchg
cmps
std
or
cwde
ss
std
sti
daa
push
jnp
movs
jp
data16
int
mov
rcr
cmps
push
adc
in
or
dec
pusha
das
cmps
cmp
loope
cld
(bad)
cmps
jne
enter
jmp
jb
inc
leave
dec
mov
xchg
clc
idiv
int3
psllq
call
add
inc
stc
jmp
shr
push
scas
xor
jbe
push
add
mov
dec
inc
into
fiadd
cmc
sbb
fstp
mov
leave
pop
jno
inc
and
jb
lahf
cld
in
clc
mov
jecxz
fsubr
loope
jbe
test
add
bound
jnp
scas
pop
sbb
iret
fwait
or
mov
fprem1
add
push
push
mov
jg
mov
mov
sub
pop
adc
mov
outs
xor
dec
test
mov
xchg
imul
or
pop
adc
cmps
xor
pop
(bad)
repnz
pop
int
xor
and
add
inc
mov
(bad)
icebp
inc
sbb
xchg
inc
fmul
(bad)
adc
pop
and
xor
fisttp
pop
sbb
dec
not
push
cmp
iret
cli
lahf
outs
sbb
cmp
(bad)
adc
je
xchg
ret
mov
pop
fs
(bad)
mov
jg
push
popa
scas
add
popf
or
test
stos
in
pop
sar
imul
aaa
fwait
pop
or
cld
leave
test
xor
jne
or
cld
idiv
or
scas
pop
gs
and
inc
cli
jae
and
pop
sahf
adc
add
dec
aas
scas
xor
int
pop
hlt
push
inc
jnp
jne
push
jecxz
popf
jae
into
inc
aaa
stos
lods
mov
cs
cld
push
jmp
popf
ds
mov
fdivr
stos
xchg
shr
sub
mov
bound
mov
sub
ins
ds
adc
jmp
(bad)
neg
(bad)
jmp
call
ret
outs
jmp
adc
out
mov
xor
mov
js
pop
dec
js
jns
sahf
xor
stos
or
out
pop
adc
popa
dec
lds
rol
and
out
mov
test
(bad)
verr
(bad)
mov
test
sar
hlt
and
retf
jecxz
or
push
jmp
dec
mov
sbb
push
rcl
xchg
(bad)
mov
jmp
sti
push
cmp
aam
and
rcr
jnp
in
out
jp
cli
mov
es
imul
mov
retf
es
aad
add
jne
xlat
xor
call
mov
jns
cs
push
mov
jmp
daa
adc
sbb
xor
call
add
loopne
rol
mov
retf
adc
neg
cdq
call
ins
mov
cli
mov
fild
ja
xor
test
int
mov
arpl
mov
pushf
dec
push
jb
add
lods
adc
jle
adc
push
mov
push
int
sub
pop
arpl
lods
sub
shl
mov
test
jns
jns
sub
aaa
add
lods
int
adc
xchg
and
and
xlat
clc
lds
lahf
cmps
inc
mov
mov
mov
scas
lea
dec
xor
mov
mov
or
ins
sbb
int3
push
sbb
es
lods
sahf
ss
scas
mov
xor
push
mov
scas
sub
out
xor
rcl
int3
and
sbb
sbb
stc
push
adc
inc
jmp
scas
push
rcr
push
and
sbb
enter
adc
lods
add
(bad)
xor
fisttp
ds
push
retf
sub
loop
push
and
cli
push
daa
cld
popa
daa
sub
jo
aam
jns
dec
pop
addr16
iret
jno
and
popa
inc
pop
xor
shl
fs
adc
push
ja
ins
pop
mov
cmps
mov
bswap
cmp
(bad)
and
pop
idiv
aad
mov
jne
xchg
lea
mul
pop
shr
div
mov
loop
lods
les
jmp
add
in
mov
and
add
push
mov
pop
into
ret
outs
loope
stos
js
jne
test
mov
lock
jmp
dec
cmp
fistp
dec
xchg
and
ss
(bad)
dec
adc
mov
xor
in
or
fdiv
inc
sub
repnz
xchg
or
pop
dec
jae
fist
je
and
ror
sahf
les
or
pop
sub
push
xor
xchg
ror
push
dec
add
dec
xchg
and
mov
xchg
je
outs
mov
and
outs
dec
addr16
inc
pop
xor
push
fst
jnp
mov
in
clc
sahf
fmul
mov
adc
(bad)
sbb
jecxz
push
push
or
push
or
pop
mov
outs
xor
adc
mov
aaa
jecxz
rcr
pushf
fs
pop
aas
jge
sbb
pop
mov
mov
dec
and
ror
add
dec
daa
inc
or
mov
and
jns
inc
xlat
cmp
cmp
or
mov
ret
sahf
stc
and
inc
dec
fnstsw
test
pop
mov
xchg
or
mov
sbb
iret
add
dec
enter
sar
cmp
in
mov
cmps
jo
inc
add
jo
movs
and
pop
mov
mov
inc
pop
xchg
pop
push
xor
push
imul
cmps
ss
ss
ret
push
neg
(bad)
retf
ins
(bad)
idiv
test
mov
out
mov
sbb
xchg
push
add
ss
jae
or
mov
cli
push
in
aaa
mov
lods
add
inc
xchg
xchg
push
pushf
add
push
call
mov
add
shl
cdq
imul
cmps
popa
mov
adc
aam
iret
cwde
xlat
lahf
outs
sub
push
add
mov
ins
pop
pop
push
mov
sbb
out
dec
out
mov
mov
inc
(bad)
out
repz
jge
js
outs
shl
xlat
xor
icebp
cmps
les
stc
(bad)
(bad)
push
adc
push
ss
dec
xchg
or
mov
mov
push
add
(bad)
push
jne
add
loope
fs
xchg
repnz
call
cs
js
in
push
sbb
cmp
mov
or
xor
push
aad
pop
stos
shr
jg
adc
xchg
jmp
pusha
adc
test
sbb
jne
das
xchg
cmp
sbb
sub
movs
push
mov
xor
movs
popa
dec
es
enter
aad
pop
fsub
xchg
(bad)
xor
outs
push
sti
push
sti
call
jnp
test
pop
mov
std
in
movs
pusha
in
cmp
outs
pop
xor
jmp
sbb
lock
or
mov
into
and
fst
adc
daa
fadd
cli
sbb
stos
ins
sub
pmaddwd
mov
xlat
sub
or
data16
push
scas
sub
xor
add
arpl
or
jmp
or
jg
jg
cmp
inc
pop
icebp
out
and
retf
in
test
push
xchg
push
push
outs
adc
dec
cs
cwde
dec
mov
pop
in
or
repnz
sub
mov
cmp
bound
xor
cmps
fimul
jno
pop
jp
mov
sbb
fwait
xchg
add
or
xor
cmp
vpunpckhdq
mov
xchg
(bad)
fwait
ror
outs
xor
xchg
out
xchg
mov
mov
xchg
aaa
int
cmp
sbb
mov
fmul
cmps
lahf
outs
test
add
sub
(bad)
pop
sbb
loopne
js
pop
sahf
sbb
loop
sub
das
mov
stos
test
sub
aaa
pop
and
mov
cmp
sub
mov
mov
push
in
jp
(bad)
pop
in
xchg
pusha
and
or
into
test
int
push
add
mov
xor
bound
push
inc
out
ins
pop
clc
jmp
ret
dec
stos
add
into
mov
aaa
push
test
jmp
push
scas
(bad)
mov
push
push
push
xchg
xchg
cmc
inc
nop
dec
cdq
enter
(bad)
in
pop
ins
int
and
add
ret
ror
hlt
sbb
dec
sub
ror
push
xor
pop
pop
pop
jns
pushf
gs
xchg
and
push
js
mov
push
and
and
xchg
pop
loop
aaa
popf
out
(bad)
and
test
imul
fbld
popa
test
xchg
pop
xor
mov
cmp
mov
pop
xor
movs
bound
cmc
das
mov
cwde
ins
adc
cmps
jno
(bad)
das
pop
mov
clc
test
push
enter
jno
and
imul
ds
in
xor
pop
js
fsub
in
xor
add
mov
sbb
call
dec
repz
(bad)
test
aas
and
int
and
xchg
(bad)
(bad)
clc
jnp
test
push
jecxz
mov
xchg
stos
aad
jae
xchg
ret
mov
retf
sbb
or
(bad)
jl
fistp
dec
call
push
lea
addr16
pushf
inc
xchg
fldcw
inc
call
ss
xchg
mov
inc
(bad)
push
cs
(bad)
xchg
mov
jecxz
js
fcomp
push
adc
add
adc
inc
push
xchg
add
mov
stos
call
ins
or
ins
(bad)
jmp
mov
inc
jns
mov
jae
add
das
xchg
jbe
jbe
aad
xchg
lods
pop
cmp
and
je
mov
add
xchg
mov
mov
mov
jno
pop
jnp
cs
lock
xchg
jno
loopne
outs
push
push
jmp
dec
popf
mov
fcmovu
clc
fsubr
out
xor
movs
and
push
aad
cwde
jnp
inc
sbb
or
fsubr
add
pop
pop
xsave
dec
inc
fdivp
arpl
retf
push
mov
and
rcl
xlat
es
inc
dec
aam
or
cmp
dec
inc
mov
gs
jne
das
ins
inc
xchg
adc
jne
scas
pushf
pop
sbb
jecxz
in
xchg
mov
xchg
sub
push
push
cmp
xlat
sbb
ja
idiv
and
mov
rcr
push
mov
push
aad
inc
or
jae
mov
fwait
pop
out
test
pushf
test
popf
out
push
ret
repnz
jno
push
test
add
sbb
mov
jb
push
outs
stos
fs
test
in
pushf
imul
jb
loopne
or
loop
push
cmp
(bad)
outs
jmp
scas
jns
jle
sub
mov
adc
jg
stos
push
mov
cli
or
xchg
mov
mov
sbb
xchg
lock
ins
add
movs
(bad)
sub
stos
jae
jg
fwait
ss
lock
stos
outs
nop
stos
push
push
push
sub
jae
aam
mov
bound
add
inc
push
or
pop
xchg
dec
in
mov
test
repz
mov
sub
or
mov
ins
xchg
aam
push
in
and
aam
jbe
dec
int3
push
rcl
push
cdq
cmc
test
add
out
mov
movs
jg
adc
loope
push
imul
mov
repz
daa
(bad)
pop
(bad)
neg
test
cmps
xchg
out
mov
ret
xor
pop
jp
shl
pop
push
stos
mov
and
push
(bad)
mov
mov
push
jno
call
mov
sub
sub
xor
cmps
adc
adc
dec
cmp
mov
gs
push
add
ins
shl
lods
in
sub
repnz
call
push
add
and
test
mov
out
fsub
and
jecxz
push
rcl
arpl
adc
rcl
ins
leave
gs
bound
aas
jnp
pop
inc
cli
dec
adc
mov
mov
adc
movs
or
inc
repnz
aam
dec
ins
popa
pop
mov
or
or
repz
imul
test
mov
push
rcl
mov
cmps
pop
adc
cmps
push
dec
jo
or
mov
ss
push
in
popa
mov
lea
outs
mov
out
sub
and
xchg
pop
jno
cmp
movs
inc
jle
cmc
pushf
stos
adc
dec
xor
and
out
je
repz
jl
cwde
lods
push
inc
pop
fnstcw
pop
xor
sbb
cwde
nop
cmp
js
lods
push
dec
dec
lods
or
sbb
or
test
add
sti
mov
jmp
rol
(bad)
jmp
cli
jne
sub
push
mov
pop
je
outs
pop
stc
mov
or
iret
fdiv
jmp
(bad)
outs
test
rcr
enter
adc
enter
sub
sahf
stc
xchg
dec
inc
jbe
sar
xor
mov
lahf
inc
mov
push
ret
push
ss
cli
fild
mov
iret
dec
dec
pop
push
sar
(bad)
pushf
adc
repnz
or
call
adc
aam
xor
adc
push
stos
add
lds
jb
mov
std
test
sbb
inc
cld
lods
cmp
cld
pop
retf
mov
mov
scas
nop
(bad)
cmp
sub
rol
dec
inc
pop
test
xchg
or
mov
xchg
dec
(bad)
jg
cmp
add
dec
cli
cmp
and
pop
mov
sar
cwde
test
clc
jecxz
jno
mov
addr16
jecxz
inc
cmp
xchg
inc
dec
mov
ror
popa
cmp
fstp
push
mov
ins
push
and
mov
enter
int3
imul
cs
push
add
add
inc
mov
and
aaa
lahf
inc
and
pop
or
in
pop
mov
lahf
retf
and
xor
rcr
mov
cmp
int3
push
(bad)
xlat
cmps
ins
mov
nop
(bad)
mov
cld
inc
jb
fnstsw
lds
scas
mov
add
and
mov
xor
ja
imul
es
jnp
das
neg
fs
pusha
test
loop
pop
push
mov
scas
mov
inc
mov
mov
not
add
pushf
mov
mov
into
ds
mov
out
cmp
cmp
and
loop
ficom
push
add
push
in
call
sbb
int3
push
test
sbb
fucompp
bound
inc
sti
push
push
mov
scas
xchg
xor
mov
les
int3
enter
pop
pop
std
in
xchg
(bad)
or
stc
scas
into
imul
aaa
mov
dec
mov
repz
add
mov
sub
imul
repnz
popf
call
out
jb
and
mov
ins
dec
fcomi
fwait
mov
rol
xor
das
and
aad
lock
cmp
sbb
push
mov
and
in
test
test
pop
cdq
xor
inc
jo
cmp
push
cmp
fmul
mov
mov
dec
aas
jmp
fcmovnbe
push
lods
call
je
jnp
inc
retf
sbb
lock
mov
mov
inc
mov
pop
cli
pop
outs
imul
aam
sti
(bad)
cmp
movs
mov
or
xchg
xchg
sub
dec
gs
stc
xlat
in
xchg
fwait
sub
test
pop
sti
out
mov
mov
mov
pop
imul
or
sbb
fcomp
adc
scas
fld
adc
pop
aaa
xchg
and
fidiv
pop
lods
adc
inc
mov
popf
call
jb
fwait
or
rcl
jo
repz
test
enter
mov
sar
push
add
and
mov
lahf
xlat
pop
movs
stc
into
popa
retf
sbb
jne
call
dec
enter
push
fidivr
and
retf
xchg
inc
pop
pop
pcmpeqb
mov
(bad)
(bad)
jge
(bad)
pop
adc
mov
imul
loope
cmp
jnp
inc
pop
clc
out
repnz
cmps
push
dec
idiv
jmp
pusha
or
outs
jge
data16
test
out
and
or
int
dec
sub
cmp
cmps
fdiv
scas
imul
add
(bad)
aaa
and
push
cmp
xor
jp
pop
push
mov
add
icebp
cmps
mov
fidivr
aas
jle
leave
sahf
sti
inc
mov
xor
cld
push
fnsave
sub
jmp
add
xor
in
mov
pop
loopne
stc
jp
mov
daa
lds
cmovne
test
das
out
pop
xor
mov
add
adc
popf
fs
add
repnz
pusha
pushf
jbe
inc
sbb
inc
cmps
shr
inc
cli
mov
test
dec
xor
dec
add
in
rcr
in
fistp
and
out
xor
jb
jo
iret
pop
push
add
cmp
or
cmp
imul
jnp
mov
and
enter
scas
mov
call
popf
add
pop
xchg
addr16
pop
push
xchg
adc
mov
stos
das
ret
mov
jecxz
sar
jle
stos
cmp
xor
cmp
ret
cmp
stc
scas
mov
mov
stos
repnz
test
inc
dec
add
scas
cmp
add
neg
sar
fimul
lea
(bad)
stc
push
js
cmc
cmp
das
or
and
mov
retf
inc
sub
scas
push
xchg
mov
xor
jb
daa
add
js
clc
xor
mov
test
lods
aas
pushf
mov
ret
sbb
ret
aam
(bad)
out
int
enter
xor
mov
add
jnp
dec
push
test
clc
dec
les
mov
inc
xchg
adc
xchg
inc
jmp
jns
ja
add
cmp
adc
fst
inc
and
add
fdivrp
(bad)
mov
fwait
xchg
xor
inc
mov
dec
mov
or
outs
inc
not
arpl
sub
(bad)
pop
adc
mov
cmc
add
xor
and
aad
dec
sbb
add
sar
inc
in
push
ds
cmp
or
sbb
pop
icebp
mov
rcr
sub
xor
scas
cmp
add
cvtpi2ps
and
jmp
ins
je
(bad)
mov
jle
leave
test
mov
cdq
fidivr
cli
aaa
leave
mov
dec
push
sub
arpl
nop
sub
cmp
cmc
xchg
lock
cmp
movs
in
inc
mov
stos
int
retf
dec
pop
je
jp
push
ds
or
stos
jnp
pop
adc
inc
int
add
jbe
or
jmp
add
mov
sti
ins
and
dec
push
lods
fistp
fist
mov
push
(bad)
fidiv
movs
out
dec
ds
dec
rcl
mov
jle
lods
cmp
dec
xchg
pusha
pop
mov
or
sbb
mov
push
jo
mov
dec
lea
xor
dec
out
cmc
ror
mov
xchg
loop
mov
js
inc
test
mov
test
stos
inc
or
mov
xlat
cmp
neg
loop
(bad)
in
mov
hlt
inc
in
aas
lods
pop
xor
sub
call
into
shl
setge
cmp
in
dec
in
cmp
cmps
add
jp
call
in
sub
popf
cmp
arpl
fidivr
test
push
xchg
out
xor
adc
cli
and
sbb
sub
mov
stc
nop
das
(bad)
push
mov
inc
popa
jo
mov
or
mov
pop
mov
aam
xor
adc
xchg
sti
rcr
push
frstor
(bad)
test
sbb
jae
mov
ss
cmp
sahf
add
lahf
pop
push
mov
sbb
add
(bad)
les
ret
or
jns
int
je
std
ss
adc
jno
or
(bad)
jo
dec
mov
push
pop
pop
in
scas
lock
push
movhps
rol
js
aas
js
pushw
pushf
ss
(bad)
in
ds
sub
(bad)
out
jl
(bad)
mov
lods
int
int
push
push
cmp
mov
arpl
xchg
fild
xor
fdivp
in
or
pop
je
aaa
lods
mov
outs
stos
jmp
ror
fdivp
loope
jmp
fwait
add
mov
cmp
loopne
sbb
loopne
stos
in
dec
outs
in
pop
ss
stos
xor
mov
(bad)
xchg
mov
mov
inc
outs
push
sbb
mov
fidiv
stc
mov
adc
and
jno
push
xor
adc
sub
cmp
lea
xchg
pop
or
jmp
cs
adc
scas
jle
cmp
loopne
inc
cmp
call
adc
inc
add
outs
ficom
jb
icebp
rcr
cld
adc
aad
mov
or
cmp
call
mov
scas
push
stos
jb
xor
out
stc
pop
in
dec
push
outs
ds
and
bound
adc
adc
inc
stc
rol
je
shl
test
cmps
fwait
retf
cmps
rcr
das
adc
stos
cdq
jns
call
add
or
adc
sub
push
cmps
mov
xchg
fistp
pop
ds
mov
jae
sbb
mov
cwde
nop
add
out
mov
jg
and
stc
xlat
shl
das
rcr
pop
push
mov
rcr
jmp
xchg
push
inc
xor
lahf
jbe
nop
das
xchg
push
repnz
mov
pop
cmps
scas
jmp
cld
push
out
jbe
jl
cmp
fbld
imul
cmps
add
and
cmps
enter
jmp
into
addr16
aam
ret
fsubp
xor
mov
call
push
in
mov
mov
sub
jle
(bad)
sbb
out
or
sub
or
mov
jmp
movs
xor
lds
cmp
fmul
jl
retf
ss
xchg
mov
leave
retf
mov
hlt
jo
test
fld
xchg
mov
mov
enter
and
push
sub
push
mov
mov
jnp
sub
clc
loopne
push
nop
xchg
shrd
in
cdq
in
ret
ficomp
or
pop
aaa
rcr
push
add
js
sbb
ins
movs
mov
mov
push
scas
lds
call
sbb
sub
push
les
aaa
inc
outs
daa
push
pop
xchg
mov
cmp
inc
cld
inc
(bad)
enter
movs
mov
cmp
into
movs
mov
popf
inc
cmc
test
ins
add
xchg
mov
es
adc
je
(bad)
xor
push
fs
outs
mov
push
and
scas
gs
pop
jg
(bad)
and
test
test
fbstp
add
pop
mov
mov
popa
rcl
jmp
push
xlat
push
dec
adc
popf
pop
inc
xchg
push
arpl
pop
das
or
cmp
call
pusha
xor
stc
lods
and
and
jl
in
xor
das
dec
adc
out
arpl
je
adc
sbb
nop
push
and
iret
outs
outs
(bad)
inc
cmp
div
test
in
out
adc
jnp
outs
mov
scas
mov
xor
hlt
mov
inc
hlt
(bad)
ficomp
mov
(bad)
xchg
adc
enter
xor
into
sbb
adc
cmp
mov
jmp
call
mov
jl
xlat
mov
xor
sbb
mov
data16
leave
clc
add
xchg
jecxz
js
popf
and
adc
cmp
ffreep
xchg
pusha
mov
ins
dec
jne
xor
push
push
test
xlat
pop
in
sbb
fst
adc
xchg
adc
mov
add
dec
pusha
fld1
mov
aas
sub
add
sub
mov
and
mov
icebp
mov
test
daa
rcr
xor
cmp
call
xchg
nop
mov
jmp
shl
test
and
adc
or
test
int
into
mov
dec
sbb
(bad)
jne
pop
mov
or
adc
lea
and
lock
pop
pop
xchg
stc
int
cmp
or
jge
pop
inc
add
aaa
mov
push
push
sub
movs
(bad)
pop
sub
dec
cmp
pop
sbb
je
sbb
jp
xor
cmp
pop
stos
xchg
gs
movs
dec
mov
xchg
push
sti
xor
out
les
lea
aas
mov
scas
stc
sbb
or
adc
adc
movs
push
add
cmps
cmp
sbb
adc
call
sbb
mov
call
jnp
es
aas
in
jae
push
xor
cmp
int3
jge
dec
lock
sub
and
movs
ja
mov
adc
jecxz
es
or
inc
js
mov
inc
mov
sub
mov
xor
or
in
sbb
stos
add
shr
adc
ffree
pop
jne
pop
mov
pushf
inc
jmp
lock
push
mov
adc
mov
inc
dec
rcl
cmc
xor
xchg
push
mov
push
pop
pop
adc
aas
push
sub
adc
mov
ret
ficom
and
push
arpl
jge
xor
or
leave
mov
mov
xchg
xor
js
daa
and
repz
rol
xor
jl
and
aam
sub
pop
ds
test
add
cmps
jmp
clc
add
inc
push
ror
xor
inc
push
mov
mov
push
dec
pop
adc
push
sbb
aam
mov
cmp
sar
inc
xchg
dec
pop
cwde
and
mov
push
sbb
mov
xor
inc
cwde
out
pushf
jl
pop
ins
jge
test
mov
sbb
cmp
cld
dec
pop
jle
sub
lahf
mov
push
xor
lea
jecxz
inc
cmp
mov
cs
call
cld
pop
fiadd
daa
push
push
retf
xor
cld
lea
xor
jmp
js
xlat
jmp
xor
lea
mov
dec
ds
in
out
cmp
inc
or
inc
xor
fnstenv
mov
inc
imul
ds
lock
xor
dec
add
and
pop
jmp
push
fistp
sbb
xor
adc
fdiv
mov
cli
add
test
xor
in
sti
stos
sbb
jmp
jne
test
sbb
cmp
loope
sbb
test
pusha
pop
mov
mov
ficom
mov
ss
ja
mov
lods
add
adc
leave
jmp
xchg
inc
jecxz
pop
popa
xor
call
push
daa
in
cmp
sbb
icebp
addr16
mov
call
imul
sti
adc
aam
pop
jmp
lods
or
in
adc
pop
mov
ja
iret
call
popf
stc
scas
jg
fsub
iret
mov
imul
test
mov
aam
inc
pop
push
sar
push
cs
cmps
push
fiadd
adc
jecxz
add
jecxz
fwait
mov
mov
or
nop
nop
in
xchg
pop
push
mov
dec
hlt
sub
jmp
pop
add
jl
mov
outs
jns
or
dec
mov
xchg
jle
push
jmp
(bad)
test
mov
jmp
bound
mov
imul
cdq
pop
(bad)
jp
or
scas
and
inc
ds
in
stos
fadd
push
jmp
jns
jne
jno
sub
mov
popa
and
xor
test
js
push
jno
shl
and
push
gs
pop
sbb
inc
jnp
shl
out
sbb
sti
jecxz
inc
cmp
or
rcl
jg
jne
mov
jb
aad
xor
ret
sub
mul
fucom
push
loope
neg
ror
jne
cwde
push
kmovb
sbb
in
cmp
mov
or
ror
mov
adc
cs
push
ins
jmp
push
add
or
(bad)
adc
sbb
adc
and
jl
shl
and
mov
hlt
push
(bad)
sbb
inc
enter
and
mov
std
push
mov
iret
fist
inc
jmp
out
sahf
xor
ret
add
xchg
movs
ins
pop
dec
adc
fisttp
mov
(bad)
jge
pop
retf
cli
and
adc
fmul
jmp
mov
or
xchg
dec
vpsubsw
stos
mov
(bad)
stc
not
dec
mov
pop
push
adc
clc
stos
pop
out
shl
pop
fistp
sub
inc
xor
popf
adc
jp
inc
(bad)
and
or
jmp
xchg
mov
inc
pop
push
inc
adc
push
popf
cmp
xor
xchg
sub
xchg
jno
int
mov
sti
ds
jae
call
test
cmp
add
sbb
in
iret
mov
rcr
push
push
scas
outs
cmp
jo
cmp
js
dec
retf
test
stos
into
out
stc
loop
sub
mov
and
fiadd
inc
xor
and
cmp
out
(bad)
jmp
sub
fisubr
push
pusha
mov
mov
jne
fwait
shl
(bad)
push
cmps
sub
jne
xchg
jno
arpl
ins
rcl
jnp
pop
leave
in
pop
mov
out
dec
sub
push
mov
inc
lods
popa
fnstenv
dec
in
iret
je
mov
and
out
pop
push
cdq
loop
xchg
push
xor
fs
xchg
mov
cmp
stos
repnz
(bad)
test
lock
and
pop
fcmovnb
shl
jmp
call
pop
aaa
ret
ds
scas
dec
and
(bad)
cmp
or
jne
(bad)
or
daa
push
enter
or
cmps
je
or
xchg
fsubp
repz
ror
(bad)
or
add
push
js
imul
or
push
pop
xlat
jmp
adc
sub
sub
jbe
js
mov
xor
xchg
cld
pop
mov
sub
(bad)
in
cld
sbb
and
mov
cmp
jbe
jb
arpl
jl
into
js
push
xor
push
or
pop
jle
call
add
pop
std
pop
dec
dec
sar
(bad)
mov
cmp
xor
mov
sub
gs
nop
add
cmps
imul
xor
stos
xchg
pop
ds
xchg
ret
inc
add
jp
outs
lock
fwait
xor
rcl
popa
stc
sub
(bad)
and
pop
cmp
(bad)
and
icebp
je
push
nop
pusha
push
nop
cmp
mov
cld
adc
inc
fidivr
push
sahf
mov
xchg
leave
dec
inc
out
inc
mov
sbb
outs
mov
jmp
push
sub
lods
cmp
dec
push
cwde
retf
mov
inc
mov
pop
scas
lods
enter
xchg
outs
sbb
or
mov
sbb
inc
jnp
mov
pop
mov
scas
dec
add
jae
and
jb
push
add
icebp
mov
data16
in
mov
mov
sub
stc
bound
mov
add
inc
(bad)
or
jno
mov
fnstcw
xchg
inc
adc
push
sbb
xchg
and
ds
pusha
loop
call
inc
push
ret
cmp
sub
fcomi
lods
in
sar
mov
out
sar
adc
dec
iret
ds
mov
aaa
out
out
imul
push
lsl
aam
ins
adc
cmp
cmp
data16
jns
into
stos
jb
inc
mov
dec
cmp
test
mov
sub
or
cld
ja
scas
in
mov
dec
out
push
xor
sbb
fs
bnd
imul
push
mov
sbb
(bad)
xor
(bad)
and
jp
inc
rcr
cmp
cs
pusha
pop
and
xor
mov
mov
mov
shl
mov
pop
and
pop
and
mov
adc
cli
in
add
fistp
ds
in
loope
add
cmp
stos
mov
xlat
jecxz
cmps
mov
xchg
inc
mov
call
mov
mov
test
xor
fisubr
(bad)
inc
test
ss
es
movs
pop
dec
xchg
test
xlat
sbb
mov
arpl
or
push
inc
push
sub
ret
mov
fcomp
inc
arpl
push
mov
mov
add
pop
out
cmps
and
pop
jne
(bad)
rcl
mov
inc
movs
xor
leave
or
and
xchg
xor
fwait
push
hlt
sbb
pop
and
adc
shr
mov
gs
outs
mov
pop
in
loope
loope
mov
int3
pop
in
ins
ds
xor
into
jns
(bad)
cmp
add
aaa
cmovb
lods
stc
jecxz
xchg
and
int
adc
jmp
leave
mov
mov
aam
dec
fs
in
mov
ret
icebp
and
(bad)
mov
adc
enter
pop
leave
inc
iret
mov
sub
jo
mov
jmp
mov
fimul
xor
and
push
push
test
mov
adc
(bad)
sbb
and
sbb
adc
aas
jo
daa
into
in
pop
mov
mov
in
adc
popa
out
repz
adc
gs
js
lock
mov
aaa
leave
xchg
cmp
loopne
lock
mov
aaa
mov
movs
xchg
push
jg
jae
loope
mov
rcr
pminsw
popf
add
inc
call
cmp
popa
pop
int
enter
loopne
ficom
mov
mov
mov
sub
bound
or
and
fmul
test
xchg
inc
and
test
pop
nop
xor
and
mov
push
sbb
js
sbb
push
jbe
cmc
push
sbb
jno
in
fisubr
push
in
pop
leave
cdq
mov
cmp
jb
add
(bad)
add
outs
mov
pop
lods
imul
dec
mov
push
and
(bad)
and
out
and
sbb
std
jecxz
push
(bad)
icebp
pop
push
jne
imul
mov
dec
(bad)
sub
push
mov
and
inc
push
cmp
jo
mov
mov
mov
cmps
in
sar
cmp
mov
cs
adc
xchg
(bad)
loope
sbb
(bad)
pop
push
add
fist
adc
cmp
inc
stc
jno
dec
mov
mov
jmp
jbe
xchg
loopne
push
imul
and
and
shl
fmul
mul
sbb
retf
loop
cld
stos
push
pop
hlt
fnstsw
pushf
(bad)
dec
pop
stos
cmp
pop
rcl
pop
mov
push
lods
loope
pop
dec
inc
xchg
mov
ds
movs
jae
lahf
jmp
and
shl
popf
(bad)
push
inc
enter
jae
popa
push
ins
xchg
or
adc
test
add
mov
push
or
outs
jecxz
xchg
dec
and
xchg
dec
push
cmp
inc
bound
ins
jo
ds
rcr
ret
in
in
push
or
adc
add
push
(bad)
inc
aad
cmp
hlt
xchg
cmps
ret
adc
mov
or
(bad)
icebp
test
add
pop
dec
lock
jle
cld
cwde
ds
add
dec
ret
push
fsubp
xor
jae
mov
or
sbb
fwait
mov
arpl
sub
xor
or
mov
gs
das
jp
loope
xor
fbstp
(bad)
fiadd
clc
ror
test
sbb
push
sub
dec
jb
(bad)
and
and
adc
aam
jnp
retf
or
pop
or
sbb
inc
inc
pop
sbb
in
add
(bad)
fmulp
inc
push
cmc
jg
test
or
add
inc
jno
popa
(bad)
push
and
and
mov
(bad)
loope
pop
cmps
outs
jg
fnstcw
mov
neg
push
sbb
(bad)
std
xchg
push
mov
cmp
mov
push
mov
pop
dec
mov
mov
vdivsd
dec
ins
jg
jae
inc
out
xchg
adc
rcr
(bad)
les
push
mov
shl
push
das
fs
gs
test
rcr
leave
cmc
xor
sar
sar
and
dec
add
cmp
xor
(bad)
lds
sbb
add
mov
mul
mov
pop
addr16
retf
pop
fist
jnp
xor
dec
mov
retf
(bad)
cmp
mov
jb
push
pop
mov
and
rcr
(bad)
or
and
fstp
mov
xor
in
push
out
ret
clc
adc
inc
ficom
jns
cmp
stos
jmp
inc
rol
adc
repz
jmp
daa
cmp
add
push
mov
clc
retf
aas
add
je
ret
and
popf
fadd
in
cmp
out
cwde
xor
lods
sbb
ror
fisttp
ret
in
ret
inc
lods
xor
push
clc
dec
push
push
jg
retf
jge
test
div
adc
fld
and
and
pusha
cld
(bad)
es
jmp
sbb
mov
lods
jo
inc
shl
ret
mov
sub
es
cs
inc
xchg
push
xor
add
xchg
mov
and
mov
not
data16
pop
or
in
push
add
pushf
jo
dec
sub
inc
add
inc
cdq
cmps
repz
mov
pop
xchg
sahf
pop
shl
push
and
in
stos
pop
mov
ins
hlt
icebp
inc
retf
mov
adc
sbb
pop
push
popf
add
int3
xchg
pop
stc
xor
pop
(bad)
into
mov
fld
xor
call
xor
jmp
pop
mov
adc
mov
and
pop
sbb
daa
push
nop
cmp
push
mov
divps
jne
popf
mov
push
cmc
inc
jmp
sbb
xlat
(bad)
sbb
mov
mov
fwait
jae
xor
gs
jne
pop
push
xchg
test
or
aaa
jne
loopne
jo
lea
fadd
test
ds
les
gs
not
arpl
retf
(bad)
stos
dec
add
shl
jne
dec
lods
jp
inc
jge
mov
fcmovne
sti
jnp
loope
pop
repnz
sub
lods
out
cmp
mov
loope
test
mov
push
sahf
ror
fwait
lea
push
inc
imul
ins
stc
mov
pop
mov
xchg
xor
mov
(bad)
leave
mov
fidivr
and
aas
in
scas
jle
arpl
dec
adc
or
arpl
add
dec
xchg
mov
cmp
sub
push
lock
ja
int3
clc
loop
inc
dec
inc
cmp
test
mov
fimul
xor
mov
jo
push
and
jnp
out
mov
inc
fsubr
repz
dec
cmp
outs
call
fadd
xchg
aaa
mov
loopne
ret
fimul
mov
xchg
mov
pop
vpunpckhdq
bound
cmp
jb
sub
push
daa
sub
test
loope
pop
xchg
mov
push
cmps
sub
add
lahf
adc
sahf
pop
jmp
mul
inc
push
cmp
call
or
and
xchg
out
mov
pop
jns
push
xchg
mov
xchg
push
or
repnz
push
test
xor
cmc
loope
inc
push
sub
scas
pushf
sub
add
pop
jle
int3
rcl
sub
mov
cwde
cmp
xchg
mov
(bad)
nop
push
dec
cdq
push
inc
in
(bad)
(bad)
idiv
push
outs
jbe
cmp
adc
fdiv
add
xchg
mov
retf
and
push
mov
faddp
iret
wbinvd
xor
adc
je
mov
retf
mov
push
push
sub
jo
xor
push
loopne
dec
out
(bad)
sbb
in
pop
outs
dec
pop
push
ss
test
imul
sbb
push
shl
aaa
add
loopne
mov
push
test
xchg
push
push
xlat
sub
lock
push
push
pop
xchg
fcom
stos
and
cmps
mov
mov
xchg
pop
cdq
dec
es
ss
add
mov
out
stc
out
mov
push
js
sub
enter
cmps
adc
jmp
and
idiv
ins
sti
pop
scas
shl
daa
push
ret
push
or
fidivr
aad
push
mov
fwait
push
xlat
pop
test
rol
sbb
adc
(bad)
inc
ins
pop
jae
xor
mov
inc
xchg
cmp
ret
push
inc
ins
cmc
add
enter
jb
hlt
jecxz
test
loop
movs
adc
ja
cmp
xchg
push
mov
pop
jl
sar
fldz
ds
pop
jg
cmp
jl
loope
sbb
gs
cmp
jnp
add
lods
sar
je
xor
rcl
pop
sahf
jge
pop
loop
ss
sbb
dec
xchg
dec
(bad)
shr
mov
out
cmps
adc
nop
pop
pusha
cmps
fstp
mov
sbb
push
sub
dec
sahf
js
jecxz
int
(bad)
shl
mov
dec
or
fldenv
repnz
sahf
out
sbb
scas
pop
clc
imul
icebp
push
cmp
push
rol
iret
cmp
mov
push
and
popa
(bad)
(bad)
jmp
xchg
mov
inc
enter
(bad)
jnp
imul
iret
cld
sub
jmp
lock
mov
pop
gs
lahf
imul
jl
fwait
mov
push
add
call
push
xchg
loop
shr
xchg
call
cs
mov
out
adc
cmp
out
pop
imul
sti
add
xchg
fdivr
imul
mov
icebp
arpl
aad
push
adc
aas
mov
hlt
test
fdivr
and
std
cmp
lahf
cmps
cdq
sub
push
and
jb
inc
jg
rol
(bad)
in
xchg
rcl
ja
pushf
(bad)
repz
mov
retf
and
ret
push
jg
xor
leave
inc
sub
pusha
sti
jb
lods
lahf
fimul
dec
ffreep
scas
test
dec
mov
dec
mov
or
mov
es
inc
pop
push
mov
popa
call
xor
lock
lea
fdiv
or
fcmove
or
movs
pop
cld
add
movs
mov
mov
mov
sbb
sbb
push
pusha
sbb
mov
jns
mul
ret
leave
jp
imul
adc
or
mul
call
push
mov
mov
retf
inc
pop
jle
in
dec
jg
mov
sar
mov
rcr
es
mov
push
int3
loop
fcom
mov
shr
jne
xor
mov
push
dec
leave
mov
xor
and
mov
and
imul
retf
(bad)
pusha
hlt
mov
push
mov
push
out
pop
push
inc
adc
pop
lds
mov
sbb
fcomp
xchg
add
pop
sbb
cmps
mov
inc
fs
jle
pop
and
or
mov
imul
lods
xor
fldcw
inc
jg
mov
ds
pop
lods
push
push
inc
ss
mov
(bad)
clc
cmps
icebp
sub
inc
adc
pop
jnp
inc
sahf
lods
imul
pop
iret
jnp
sbb
sub
jecxz
pop
or
cmc
push
cmp
jno
add
mov
sub
inc
test
out
sub
retf
or
adc
ins
and
mov
and
ficom
sbb
lods
sbb
mov
push
int3
xor
inc
inc
adc
fisttp
cmps
popf
xchg
and
sbb
cmps
xchg
xchg
popa
jge
call
xchg
and
add
push
xchg
sub
loop
retf
cmc
iret
add
movs
mov
mov
jmp
shl
push
inc
push
pop
xor
adc
xlat
mov
push
jmp
xchg
adc
popa
add
aad
or
inc
fmul
or
out
mov
das
xchg
cs
scas
xbegin
dec
and
mov
sbb
arpl
mov
mov
push
call
jae
inc
xlat
sbb
in
mov
pushf
xchg
les
adc
repz
push
sbb
test
mov
adc
and
imul
into
or
repnz
popa
mov
sbb
cli
pop
test
mov
push
mov
or
sub
or
mov
adc
imul
mov
loope
mov
ret
in
les
pop
sbb
out
push
push
and
mov
push
xchg
fwait
xor
ja
jg
ss
bound
jecxz
xor
ss
dec
mov
push
movs
sahf
fld
jno
mov
mov
test
imul
in
xor
pop
inc
mov
xor
sti
pusha
xlat
pop
test
stc
jge
inc
clc
adc
mov
or
not
call
ins
jmp
inc
inc
dec
cmp
push
mov
inc
mov
sti
aas
or
in
inc
sbb
mov
inc
mov
cmc
xor
push
lods
xor
and
adc
retf
rcl
aaa
iret
dec
in
mov
in
cdq
sti
into
fld
jmp
ins
or
in
mov
xor
sbb
aas
push
dec
pop
push
lds
icebp
jno
aas
xor
shl
jge
(bad)
push
jmp
int
cli
sbb
sub
es
stc
xchg
test
pusha
and
push
lods
pop
(bad)
fcmovnbe
xor
jae
out
and
push
sub
cmp
adc
jmp
xor
xor
pushf
fs
pop
inc
out
dec
and
ins
fwait
inc
or
mov
in
outs
das
cwde
loopne
pushf
test
not
xchg
mov
dec
cmp
test
adc
jmp
rol
cmp
fwait
icebp
aad
out
pop
outs
fstp
jmp
mov
mov
jp
xor
jmp
shl
pop
cmp
stos
pop
sub
stos
popa
xor
into
js
sbb
sub
jecxz
pop
aam
xor
enter
push
jae
pop
in
mov
(bad)
sub
test
mov
cwde
inc
(bad)
jecxz
add
test
bound
(bad)
out
iret
test
and
fist
retf
mov
or
mov
mov
or
pusha
ds
enter
and
xor
call
out
or
xor
loop
sub
(bad)
pop
adc
cs
cmps
jb
pop
dec
cdq
mov
fsub
mov
mov
mov
fs
mov
jge
add
ret
pop
das
(bad)
sbb
call
lods
add
jnp
xchg
lahf
adc
test
lahf
mov
jno
add
or
aam
sbb
retf
jecxz
fsubr
lds
cmps
jl
adc
dec
pop
mov
(bad)
mov
add
and
hlt
js
jecxz
retf
inc
fdivr
inc
dec
and
pop
jmp
pop
sti
fwait
xchg
xor
adc
shr
xchg
mov
pop
mov
mov
inc
ins
mov
sbb
fidivr
outs
inc
and
or
cld
test
scas
add
mov
aaa
push
jmp
dec
inc
test
mov
xchg
mov
mov
je
imul
mul
add
dec
outs
inc
fcomip
lahf
jae
mov
cmp
jne
in
out
xchg
sub
mov
dec
xacquire
lahf
cmc
mov
jecxz
addr16
repnz
mov
in
(bad)
aam
jmp
mov
stc
pushf
cs
icebp
shr
sbb
mov
fwait
mov
out
inc
mov
sar
mov
xor
sahf
jmp
sbb
inc
loopne
jmp
sub
sbb
(bad)
jmp
popf
adc
push
std
sti
lea
(bad)
loope
pusha
sbb
outs
jnp
sbb
jns
das
rol
cmps
arpl
push
cmp
or
jns
xchg
imul
rcl
retf
ins
mov
mov
xchg
sbb
aaa
sbb
hlt
mov
cmp
push
adc
or
es
jg
cmp
vpackssdw
aam
sub
pop
and
ja
sbb
in
inc
xchg
or
sub
stos
out
mov
shl
sbb
cmp
adc
jmp
xchg
aaa
xchg
sbb
inc
push
imul
cmps
xchg
and
fcom
add
dec
xchg
stos
iret
mov
iret
les
arpl
test
dec
inc
mov
push
jnp
dec
push
stos
and
mov
fadd
fimul
into
cwde
into
xor
dec
lock
(bad)
dec
(bad)
mov
sbb
stos
or
dec
jge
or
mov
leave
les
jb
or
and
mov
addr16
loopne
ds
cs
mov
repz
adc
adc
das
or
mov
push
adc
add
ins
pop
sub
mov
test
adc
pop
or
jle
sub
xchg
sti
cmp
adc
pop
fild
sub
lea
in
and
arpl
add
out
test
jae
fwait
jb
add
mov
ret
ret
xor
xor
add
or
mov
push
and
xor
inc
cmp
(bad)
cmc
pop
add
and
shr
or
jecxz
mov
int3
dec
pushf
inc
xchg
xchg
(bad)
out
add
cmp
and
xchg
mov
mov
into
cli
sub
leave
pop
pusha
test
pop
enter
jecxz
dec
mov
out
clc
fmul
pop
xchg
mov
fild
mov
sbb
or
pop
sub
dec
cmp
daa
and
xchg
(bad)
add
or
xchg
das
pop
addr16
imul
mov
bnd
or
push
push
imul
cs
cmps
gs
jae
dec
cmps
sbb
aaa
push
or
lahf
inc
adc
(bad)
dec
cmp
nop
push
mov
jns
and
cmp
aam
mov
icebp
inc
add
jg
(bad)
rcl
push
imul
mov
xor
push
sub
push
gs
xchg
jo
or
push
mov
fs
bound
mov
xchg
pop
or
fild
pop
neg
push
popf
mov
into
fist
loop
rcr
jo
adc
or
push
sti
icebp
inc
out
sti
inc
xchg
push
daa
cmc
lea
push
int3
hlt
hlt
cwde
(bad)
sar
in
and
rol
mov
out
retf
adc
(bad)
test
adc
push
imul
sub
pop
aaa
fwait
mov
inc
jge
dec
daa
xchg
bound
sub
adc
push
das
sbb
pop
fcomp
lods
xor
pushf
adc
out
or
xchg
mov
test
xchg
push
pop
je
jge
lods
mov
jp
sub
push
pop
iret
fiadd
pop
jb
mov
test
shr
push
in
sbb
sub
into
lea
mov
mov
and
mov
stos
jmp
mov
inc
mov
(bad)
adc
pop
jnp
xlat
cdq
xor
fs
fldenv
test
sbb
ret
inc
mov
mov
ret
ficomp
add
inc
test
inc
out
sub
test
data16
cwde
rol
ds
(bad)
sti
cli
and
jl
xor
mov
xchg
aam
pushf
cmc
add
pop
addr16
xor
sti
std
pop
call
addr16
xchg
dec
movs
cs
aaa
clc
test
inc
mov
stos
xchg
sbb
xchg
xor
xchg
sub
mov
retf
mov
imul
mov
mov
loopne
mov
cwde
imul
cmp
cmp
jmp
or
mov
mov
inc
dec
xor
sbb
test
fist
mov
inc
setp
jecxz
and
repnz
mov
xchg
or
adc
and
pushw
adc
cmp
or
or
aam
inc
inc
out
push
xchg
jge
cmps
sub
in
test
fld
push
in
(bad)
retf
adc
mov
jl
lds
cmp
add
xor
dec
movnti
mov
jbe
push
pop
nop
push
fucom
cli
jl
(bad)
xor
jmp
pusha
adc
push
lea
mov
neg
mov
xor
sub
mov
sar
popa
add
jns
xor
popf
iret
add
sub
jo
outs
(bad)
not
xor
dec
jp
mov
pop
add
adc
mov
or
aas
jl
pop
je
aam
mov
out
loopne
daa
mov
leave
dec
ret
cmc
sub
xchg
push
mov
lahf
imul
xchg
pop
lds
push
mov
mov
sti
or
cmp
cwde
inc
imul
ja
ds
pop
cwde
sub
xchg
dec
popa
loop
clc
mov
adc
cmps
hlt
retf
ins
cmp
mov
jnp
jnp
cmp
in
pop
das
out
ins
xchg
or
mov
and
std
lds
fidivr
gs
xchg
loopne
dec
cdq
stos
or
into
dec
push
mov
push
mov
xor
js
popa
add
fadd
mov
sahf
(bad)
lock
jecxz
js
mov
repz
push
les
test
cld
repz
cli
and
ins
arpl
mov
mov
jns
push
mov
cwde
push
in
cmps
mov
mov
inc
push
test
add
or
das
cmp
shl
sub
xabort
mov
add
and
nop
jnp
in
aam
bound
inc
xchg
data16
add
inc
ins
dec
xor
out
arpl
inc
(bad)
mov
(bad)
sub
es
cmps
(bad)
mov
popa
mov
aad
(bad)
mov
cmp
jmp
aam
mov
sahf
ret
arpl
push
or
fwait
add
(bad)
push
bound
cmps
mov
cmp
repz
cld
movs
fdivrp
sub
xchg
cs
dec
jb
loope
daa
mov
dec
movs
pop
push
sbb
je
jp
xor
les
or
inc
inc
(bad)
mov
(bad)
xchg
push
call
xor
jmp
fst
(bad)
mov
loop
xchg
dec
es
js
data16
cdq
outs
inc
push
dec
dec
and
xchg
push
aad
inc
mov
aad
sub
lock
scas
jb
and
cdq
(bad)
cmp
push
cmp
jae
shr
das
xchg
xor
test
sti
into
inc
push
xchg
in
mov
test
lea
neg
add
dec
jo
xor
fidivr
sbb
rcl
mov
mov
sub
enter
jns
mov
cmps
scas
je
out
mov
stos
xchg
dec
mov
add
mov
push
xor
mov
xchg
ret
lahf
push
fidiv
outs
ins
mov
test
lds
(bad)
loope
push
add
imul
jae
sbb
outs
mov
(bad)
rol
jle
sub
push
xchg
push
fnsave
rcl
out
nop
and
push
mov
dec
jmp
rcl
or
jb
adc
movs
mov
inc
clc
sub
jb
adc
(bad)
adc
mov
sar
loop
and
dec
call
add
jns
(bad)
adc
int
jg
cmp
inc
jmp
and
xor
mov
add
(bad)
push
fld
adc
imul
xor
ret
cld
sahf
int3
mov
mov
cmp
adc
and
stos
loop
in
neg
adc
jmp
sub
jbe
add
push
inc
clc
cmp
sub
mov
pop
fs
mov
dec
adc
sbb
scas
into
repnz
sbb
retf
in
cmp
inc
pusha
mov
and
push
fs
pushf
stos
sahf
adc
shl
repz
mov
mov
sub
xor
push
mov
jo
jmp
adc
sbb
sbb
mov
rcl
sbb
aad
lahf
xchg
or
lock
cwde
pop
cmp
xchg
out
inc
test
scas
dec
cmps
mov
(bad)
and
movs
test
or
jbe
or
xor
rcr
lds
mov
push
push
cmp
jns
js
mov
call
out
arpl
fsub
xchg
into
push
cdq
idiv
test
retf
push
xchg
je
inc
mov
sbb
mov
sbb
(bad)
sbb
cmp
or
in
add
ss
sbb
popf
int
pop
test
loope
jl
adc
test
mov
fs
dec
stc
(bad)
call
pop
js
call
mov
sbb
fnstcw
call
jmp
push
add
mov
call
jl
mov
or
xlat
mov
xor
stos
outs
or
jl
push
add
push
push
sar
fistp
jge
jne
mov
shl
rol
mov
cmps
xor
mov
cdq
pop
enter
in
sbb
int
mov
sbb
(bad)
in
xchg
lahf
es
je
sbb
(bad)
cld
push
lock
imul
ret
hlt
mov
jle
gs
mov
(bad)
jb
push
mov
lahf
pop
sahf
jg
mov
into
pop
xor
mov
jge
(bad)
sti
and
jns
and
or
mov
jecxz
jo
sbb
mov
ss
mov
mov
aam
pop
mov
ins
test
push
xchg
lock
ins
bsf
imul
shr
pop
lods
movs
test
shl
shl
xchg
pop
je
mov
test
dec
(bad)
inc
lahf
mov
or
dec
push
or
and
xor
popf
call
rcl
add
or
mov
jle
xor
pop
mov
adc
clc
dec
mov
mov
out
push
pop
sbb
jle
outs
pop
sbb
jg
rol
dec
or
lock
mov
test
push
retf
sub
imul
dec
stos
sub
push
mov
xchg
arpl
xchg
cmps
mov
pop
mov
leave
movs
lods
int
mov
xchg
leave
pop
fs
iret
(bad)
neg
mov
push
xor
ins
icebp
sub
xchg
adc
repnz
scas
push
lods
xor
out
pop
in
add
jb
add
loope
lods
inc
mov
call
inc
mov
out
div
dec
in
xchg
mov
int3
les
inc
dec
and
mov
inc
dec
fmul
cli
jle
xchg
jmp
push
pop
sar
sti
push
jno
jge
call
jae
dec
dec
(bad)
lock
sub
sub
call
dec
or
cwde
xor
mov
iret
pop
pop
jge
not
pop
cmp
leave
fidivr
pop
ret
cmp
fisttp
or
test
shl
mov
jmp
xchg
(bad)
data16
retf
push
push
pop
loop
sahf
aaa
xchg
lea
dec
out
stos
inc
and
cwde
or
punpckldq
ins
into
data16
mov
stos
or
rcr
sahf
fbld
mov
push
cmp
dec
dec
adc
fbld
call
out
adc
in
mov
call
mov
pop
inc
xchg
mov
mov
ror
push
xchg
bound
loopne
sub
lock
lds
(bad)
xchg
add
arpl
cs
push
or
(bad)
sahf
xchg
in
mov
stc
cmc
pop
xor
cmp
test
push
or
xlat
scas
push
std
ret
loope
adc
retf
bound
mov
out
cld
sub
sbb
jbe
ja
test
sub
dec
movs
dec
add
mov
sahf
sbb
mov
xchg
jne
jmp
test
out
ins
cmp
mov
loop
hlt
test
mov
stc
jb
les
retf
jo
pop
sbb
add
cdq
lock
es
sub
lock
sub
and
lods
mov
add
xor
out
ss
pop
lods
in
mov
mov
push
enter
cwde
out
xlat
(bad)
xor
(bad)
(bad)
in
ret
hlt
cmp
add
jl
(bad)
call
int
cli
push
ja
inc
(bad)
(bad)
mov
and
shl
jmp
leave
pop
lods
pop
cld
dec
out
test
and
mov
sub
add
mov
sbb
and
clc
(bad)
rcl
call
arpl
and
sbb
into
mul
adc
push
sbb
xchg
pop
cmp
(bad)
inc
movs
aas
vpsubsw
(bad)
cmps
mov
adc
js
pop
shl
add
push
xchg
sub
add
(bad)
adc
mov
out
or
sbb
ret
jne
xlat
test
and
repnz
pop
repz
cmp
lods
jne
mov
(bad)
outs
push
xchg
mov
xor
mov
inc
repz
aad
repz
lahf
leave
bound
dec
sbb
pop
inc
imul
or
pusha
mov
dec
rol
push
jb
and
inc
rcr
ds
jle
inc
adc
fs
sahf
int3
call
jle
cmps
cli
push
call
arpl
rcr
mov
mov
mul
hlt
or
ret
sahf
mov
lds
xchg
mov
add
pop
js
movs
jp
cld
mov
adc
int
sti
or
mov
nop
int3
and
daa
sbb
push
inc
sbb
fld
popa
dec
mov
push
mov
clc
in
pop
pop
xor
repnz
add
sbb
imul
mov
lahf
sbb
in
mov
adc
xor
mov
mov
push
imul
cmps
pop
mov
jbe
imul
aad
sbb
icebp
jg
pop
sub
stos
dec
lea
stc
loop
call
fcmovb
aad
in
jl
and
imul
imul
dec
sbb
cdq
cmp
xchg
inc
inc
dec
xchg
add
loope
aaa
add
pop
mov
sbb
mov
sub
pop
lds
outs
(bad)
or
jmp
dec
jmp
cmp
stos
push
stos
mov
inc
jle
mov
test
fild
inc
in
push
sbb
mov
mov
and
pushf
ins
call
pop
nop
add
movs
sbb
les
xor
mov
sub
in
push
lahf
cs
lahf
adc
out
mov
sbb
mov
jo
xlat
sbb
je
popa
inc
sub
scas
adc
nop
xor
test
jmp
leave
ror
and
xlat
sub
dec
cmps
test
and
mov
xchg
mov
mov
sub
pop
inc
jg
movs
or
sbb
pop
out
jmp
fldenv
or
out
mov
and
cmp
inc
add
icebp
in
scas
fidivr
xor
ror
pop
mov
push
cmp
pop
push
idiv
lods
xchg
dec
iret
mov
push
enter
gs
mov
fld
in
and
js
lods
idiv
aas
(bad)
call
ins
xor
ss
cmp
cmc
(bad)
out
push
outs
imul
div
sub
pop
inc
pop
ins
mov
jmp
inc
into
cld
aam
(bad)
sbb
mov
(bad)
iret
mov
nop
cdq
dec
mov
repnz
mov
in
or
mov
mov
add
cmp
jb
pop
rcl
jmp
dec
mov
or
adc
xchg
or
adc
pushfw
xchg
fimul
aad
fucom
out
and
je
retf
shr
sub
xchg
fld
sahf
cmp
loop
popf
dec
cli
jle
pop
mov
std
fs
mov
lahf
out
sbb
xchg
sti
sar
in
fisttp
or
or
js
push
mov
or
mov
jmp
ss
pop
xchg
popf
sbb
and
aam
add
sbb
push
pop
jmp
dec
adc
clc
sub
loopne
test
inc
jae
adc
sub
adc
lahf
add
dec
popf
sub
aam
les
cmps
fst
les
inc
fld
xchg
xlat
mov
out
jb
dec
add
or
jl
lock
fcmovne
popf
loope
in
popf
(bad)
push
xchg
ss
sbb
pop
scas
xchg
sbb
mov
in
jae
ficomp
push
rcr
sbb
pop
lods
jno
in
push
sahf
push
cmp
or
inc
shl
dec
push
and
(bad)
test
test
fidiv
cmp
repz
cmp
jo
sbb
mov
mov
mov
mov
out
lods
movs
shl
pop
leave
addr16
mov
xchg
pop
lahf
repnz
loop
adc
sub
mov
iret
dec
das
push
ss
cdq
mov
xchg
std
pop
push
imul
and
fiadd
(bad)
sbb
xchg
aaa
jecxz
fisttp
jnp
pop
mov
repz
sahf
imul
sub
sti
loope
loopne
(bad)
(bad)
div
jo
add
out
xor
push
mov
push
dec
push
mov
in
mov
(bad)
mov
or
inc
in
jnp
bound
or
(bad)
jne
(bad)
sahf
fldenv
mov
arpl
btc
pop
pop
xchg
jge
(bad)
jns
aaa
inc
movq
dec
xchg
mov
push
loope
mov
mov
aas
ret
adc
(bad)
pop
cmp
or
push
mov
push
cwde
test
icebp
push
ret
loopne
aas
sbb
sbb
imul
sub
(bad)
addr16
mov
push
fst
push
repnz
cs
push
cmp
or
dec
cmp
xchg
add
inc
push
ins
dec
iret
add
mov
sbb
(bad)
ds
pop
pop
fild
jmp
or
mov
push
pop
ins
and
popf
mov
add
adc
mov
jne
loopne
mov
and
call
inc
hlt
xor
push
sub
adc
pushf
add
lods
pop
fistp
mov
cmp
mov
mov
mov
cmp
ffreep
fstp
gs
shl
pop
imul
(bad)
cwde
or
inc
not
inc
sub
pushf
rcl
xchg
test
inc
and
xor
jge
call
out
sbb
inc
lea
mov
loope
les
out
adc
xor
das
push
adc
dec
pop
add
sbb
push
sub
mov
ins
cmp
scas
lods
sub
pop
cmp
out
xchg
popa
(bad)
out
ja
in
xor
sub
and
movs
jmp
xor
sbb
mov
pop
cmp
jo
mov
add
cmp
and
pusha
xchg
addr16
cdq
push
pop
sbb
pop
jp
jne
xchg
je
aaa
and
sbb
loopne
add
mov
ja
lods
pusha
xlat
bound
aam
add
dec
in
xor
or
repz
fidiv
(bad)
cmp
inc
add
pop
or
es
inc
inc
mov
xchg
fadd
or
js
cmp
xor
mov
mov
cmp
push
jle
cmp
push
stos
ror
daa
adc
dec
out
sar
dec
mov
push
pushf
enter
jg
lea
pop
pop
das
or
and
ror
pusha
and
mov
cmps
push
adc
daa
(bad)
pop
push
push
jbe
sbb
sbb
or
ins
pop
pop
imul
mov
mov
pop
addr16
mov
(bad)
daa
dec
push
repnz
xor
dec
(bad)
(bad)
cmp
outs
ds
pop
pop
xchg
mov
call
or
lods
div
mov
retf
stos
test
mov
leave
mov
movs
ds
jg
xor
ss
sub
cmp
sub
inc
sub
adc
mov
(bad)
and
sub
sbb
adc
push
dec
jb
push
sub
(bad)
push
sub
inc
lods
dec
jl
popa
aam
cmp
lds
adc
dec
cmp
dec
inc
popa
lea
out
lods
push
push
inc
jle
jne
scas
mov
es
mov
rcr
inc
mov
into
lahf
lods
mov
leave
mov
push
dec
xor
jb
jnp
sbb
xchg
cmp
fs
test
ror
push
adc
xor
mov
(bad)
std
or
in
mov
pop
loopne
sahf
call
pop
and
xor
cmc
in
cs
lods
shl
cld
cmp
jecxz
aas
lahf
cmp
adc
cmp
cmp
daa
sar
adc
sbb
jns
repz
jo
jae
sub
xor
es
jo
sub
mov
fistp
jmp
pop
push
or
test
into
mov
test
das
imul
jl
test
mov
push
adc
inc
aas
loop
jb
cdq
jns
fimul
pop
add
push
push
(bad)
(bad)
aad
pushf
mov
adc
mul
cmp
inc
jle
clc
pop
inc
ror
lahf
jb
mov
lock
push
push
xor
pop
hlt
dec
nop
shl
pop
in
mov
inc
cdq
jp
test
popa
stc
mov
dec
in
arpl
mov
and
push
ja
pop
and
inc
in
fidivr
jbe
sahf
sub
cld
scas
call
hlt
push
aas
dec
cmp
cwde
cmp
fwait
test
jmp
nop
daa
(bad)
jbe
inc
stc
sbb
cmp
in
fst
les
fnstsw
shl
mov
test
xchg
addr16
(bad)
inc
mov
retf
push
into
xor
jnp
push
jecxz
mov
bts
dec
fisubr
inc
sub
xchg
mov
imul
aam
gs
jp
xor
loopne
rcl
push
lods
jp
mov
arpl
pop
aas
dec
adc
xchg
jge
lahf
out
jp
jp
ret
mov
push
pop
or
jnp
(bad)
out
lods
sbb
sub
and
dec
inc
out
imul
sub
and
popf
xchg
sub
lock
jb
jnp
mov
jmp
xchg
sbb
hlt
(bad)
call
pop
pop
dec
sahf
push
xchg
pop
idiv
inc
or
mov
ins
movs
ror
cmp
outs
(bad)
or
mov
xor
js
push
cmp
inc
push
mov
or
jmp
mov
inc
stos
xor
cdq
mov
lea
mov
pop
cmp
cdq
cmp
(bad)
loope
add
push
scas
inc
xor
cld
adc
adc
shl
xchg
inc
jg
sub
sub
add
or
sbb
jl
fbld
cmp
jmp
jne
leave
and
pop
div
pop
mov
inc
sub
sahf
loop
push
sar
cld
push
fistp
xchg
jbe
(bad)
jne
ret
cmps
cdq
xchg
xchg
add
dec
scas
aas
dec
xor
add
inc
call
mov
xchg
mov
inc
test
test
ins
or
loopne
cmp
imul
in
cli
pop
adc
pop
mov
aaa
fidiv
aaa
cmp
das
lea
xor
sbb
nop
das
in
jns
test
fxch
movs
cs
pop
add
mov
xchg
pop
xlat
fwait
int3
inc
or
xchg
sahf
add
repnz
cmp
fimul
cmp
xchg
mov
inc
mov
aaa
and
mov
fcmovb
pop
jnp
push
mov
daa
cmp
popa
dec
movs
push
cmp
inc
(bad)
rcl
test
pop
cmp
pop
cmp
push
out
pushf
pop
ret
cld
jecxz
aad
(bad)
push
xchg
shl
into
out
pop
adc
push
jl
jno
(bad)
xlat
jmp
rol
xchg
hlt
pop
jl
shl
je
int3
rol
add
cwde
pop
mov
sbb
pop
sbb
out
rcl
and
mov
xlat
and
pop
or
or
int3
ficomp
popf
xchg
pusha
(bad)
push
cmp
cwde
jno
pop
ins
mov
into
dec
(bad)
fsubrp
imul
or
inc
add
das
(bad)
add
pusha
lea
addr16
fisttp
into
pop
or
jge
sbb
mov
add
in
pop
adc
sub
enter
adc
jb
push
test
test
ja
jecxz
hlt
mov
xchg
sub
dec
pop
add
(bad)
pop
iret
(bad)
jle
imul
das
dec
pop
addr16
cmp
out
jbe
loopne
ret
jbe
xor
or
push
sti
jg
(bad)
das
or
loop
pop
mov
out
push
adc
cli
adc
pop
cwde
dec
retf
cmp
inc
in
sbb
data16
jnp
dec
sub
sbb
adc
xor
hlt
or
ins
int
jnp
sub
pop
pop
lds
js
pop
mov
mov
test
fldlg2
(bad)
jmp
cmp
mov
ds
adc
and
enter
mov
pop
sahf
ror
cmps
xchg
in
hlt
imul
add
fdivr
lahf
pop
stos
cmp
dec
daa
sbb
inc
sti
adc
(bad)
jp
mov
jnp
and
fs
leave
push
adc
fdivr
jg
loope
shr
mov
cld
lods
xchg
aas
cmp
imul
popf
xchg
ds
xlat
xor
dec
mov
les
daa
xchg
cli
lods
pusha
mov
push
push
add
jno
sahf
out
sbb
push
iret
es
xor
xchg
aad
sub
or
stos
scas
jmp
pop
xlat
pop
sub
arpl
or
xchg
add
mov
in
push
imul
push
stc
xchg
and
sar
xor
pop
xor
xor
jl
pop
push
(bad)
lea
add
(bad)
push
ret
out
mov
pop
adc
ins
jg
jge
mov
add
sti
jmp
fstp
bound
movs
push
sub
(bad)
cld
push
scas
push
es
out
mov
add
out
out
fisub
out
jmp
test
fist
inc
js
lock
sub
call
xchg
jno
xor
fcom
dec
loope
ret
ja
mov
pop
xor
je
bnd
ret
ret
xchg
dec
xor
stos
(bad)
dec
and
dec
stc
inc
and
mov
push
mov
add
stc
cmp
cmps
dec
jl
mov
fisub
adc
xor
adc
push
jecxz
neg
jg
jge
mov
(bad)
pop
fadd
jmp
test
jne
pop
sbb
sbb
cmps
dec
cmp
mov
xor
jmp
into
lods
ins
in
stos
sbb
jp
mov
mov
sbb
pop
cmp
(bad)
es
out
adc
sub
xor
xor
mov
sub
data16
stos
nop
push
outs
popa
cli
stc
daa
pop
push
mov
pop
sbb
and
imul
aas
mov
jbe
lock
loopne
nop
(bad)
out
inc
shl
fsubp
add
out
lahf
sub
inc
add
push
imul
std
bound
mov
or
ja
or
or
and
stos
adc
lea
pop
dec
outs
adc
push
pop
xchg
mov
adc
xchg
push
sbb
dec
cmp
cmc
call
jmp
pop
dec
and
adc
cdq
mov
cmps
das
xchg
js
repz
add
cmp
jmp
int
das
call
das
adc
(bad)
pop
daa
adc
mov
iret
loopne
push
mov
int3
outs
in
imul
stos
test
or
fwait
push
into
mov
jne
sahf
sahf
xchg
push
ret
jbe
loop
add
out
mov
jmp
and
loope
shl
in
mov
test
fcom
dec
test
jecxz
and
ret
jl
inc
jnp
jo
push
(bad)
dec
dec
mov
sti
dec
mov
(bad)
lds
mov
int3
lods
jmp
pop
mov
pusha
cmp
inc
loop
lods
in
imul
ds
pop
pusha
in
sti
dec
cmp
repz
test
jmp
mov
jmp
movs
(bad)
push
repz
dec
into
shl
add
ret
cs
dec
into
xchg
and
sub
or
sbb
mov
pop
std
ret
pusha
fimul
pop
mov
retf
sbb
and
sbb
or
pop
mov
popf
rcr
shr
xchg
push
add
cdq
shl
loope
dec
in
scas
push
and
mov
shl
sahf
add
(bad)
sbb
jbe
(bad)
int3
push
jp
xchg
push
mov
fdivr
adc
jmp
das
add
cmp
mov
rcl
push
push
or
repnz
jnp
push
xor
dec
aad
ret
inc
mov
add
int
xor
js
cdq
cmp
(bad)
fwait
xchg
fs
icebp
xor
push
out
xchg
xor
or
fdivr
fs
cld
sub
fld
mov
out
shl
adc
popf
fisubr
mov
leave
and
test
bswap
scas
call
mov
sahf
fisttp
std
adc
lfs
push
cmps
inc
mov
sbb
sbb
jmp
xchg
jo
mov
jae
mov
in
mov
or
fwait
les
push
jl
mov
test
pop
mov
nop
pop
mov
mov
das
add
xchg
cmp
xchg
xor
(bad)
loope
pop
test
or
adc
dec
push
or
mov
cdq
add
xchg
xor
ins
inc
jne
sbb
jne
xchg
in
(bad)
fcom
lahf
fstp
inc
add
popf
lea
out
jmp
bts
stos
push
(bad)
ds
pop
pushf
dec
sbb
mov
cmp
inc
shl
push
sub
or
imul
repz
adc
sub
add
daa
mov
push
sbb
enter
cmp
fisubr
ins
imul
in
push
sbb
xchg
shl
sub
ss
popf
push
jle
and
xlat
push
mov
add
clc
fdivr
jmp
jg
xchg
adc
ds
ss
pop
movs
inc
push
shl
mov
lock
mov
xchg
outs
dec
ret
data16
xlat
outs
cmp
imul
dec
aas
mov
cmps
pop
ret
(bad)
imul
cmp
or
mov
jno
shl
dec
fist
pop
mov
jb
sub
lds
xchg
cmp
dec
lods
or
push
jle
fs
xchg
mul
fsubr
mov
push
inc
jecxz
sbb
fcom
inc
cmp
inc
ror
lahf
mov
int3
lods
pop
xchg
movs
icebp
push
ins
or
repnz
(bad)
rcl
add
add
scas
mov
and
mov
and
push
leave
fidivr
xor
mov
retf
retf
mov
int
sti
test
jno
xor
in
cmp
pop
adc
clc
dec
inc
mov
popf
sub
pop
movs
mov
bnd
jge
(bad)
push
dec
or
out
dec
push
mov
ja
xchg
xchg
jp
adc
jne
mov
sbb
adc
sub
sub
je
push
test
stos
add
int3
mov
xor
ss
mov
out
mov
cmp
cmc
or
hlt
pop
cmp
add
xchg
xlat
dec
dec
dec
(bad)
push
daa
lock
clc
push
inc
movs
xchg
push
adc
push
cmp
sbb
and
pop
inc
mov
movs
imul
in
pushf
jns
and
jne
inc
aaa
mov
or
ret
cwde
jnp
sahf
mov
dec
lock
mov
push
fistp
jo
retf
cwde
sbb
ror
pop
out
and
and
or
movs
xor
div
stos
hlt
gs
jae
imul
mov
cmc
pop
pop
mov
cmp
hlt
dec
fsubr
cmps
cmp
je
aam
mov
xor
push
jne
mov
fs
aam
mov
(bad)
add
jb
jge
lahf
sti
mov
cmps
icebp
adc
fs
call
and
imul
inc
fisttp
and
fimul
dec
pop
fsubp
push
push
jbe
jmp
gs
jmp
push
lods
mov
mov
lods
ror
sub
and
sub
adc
xchg
jmp
inc
jmp
das
nop
cmp
mov
fwait
or
fs
retf
call
mov
inc
dec
call
add
mov
jge
dec
mov
pop
mov
pop
add
mov
mov
mov
or
cmp
loopne
sub
setg
imul
mov
jb
imul
adc
push
and
fild
nop
dec
inc
mov
push
leave
test
add
arpl
mov
in
hlt
leave
cmps
test
cmp
inc
test
scas
retf
sub
mov
cmp
cwde
mov
mov
(bad)
pop
(bad)
xor
fld
lock
fadd
mov
sub
dec
std
xor
inc
lods
das
xor
cwde
adc
cmp
sti
or
repnz
lods
rcr
cmp
and
jmp
test
push
add
pop
ret
adc
imul
imul
test
cmp
cmp
sub
loop
(bad)
cli
jge
mov
push
test
push
(bad)
xchg
inc
stos
cld
mov
call
clc
sbb
mov
repnz
adc
into
jno
adc
mov
leave
adc
pop
push
xchg
test
sub
dec
out
dec
cmp
dec
leave
push
mov
push
lods
xchg
aas
pop
jl
imul
sbb
pop
and
jp
loopne
jmp
fdivr
sub
mov
xor
loopne
adc
xchg
test
xchg
add
repz
dec
cmp
sub
and
int
push
cli
test
scas
lahf
sbb
push
pop
f2xm1
mov
ins
(bad)
ds
bound
xor
add
cmp
xor
mov
mov
jns
pop
std
dec
xor
stos
test
in
mov
ror
cmp
dec
clc
iret
adc
out
mov
mov
or
scas
loope
vpmacsdd
into
hlt
mov
ins
cmp
out
adc
sub
mov
add
and
test
test
sbb
enter
ficom
mov
and
int3
push
jb
hlt
dec
cs
aad
mov
push
mov
or
retf
sbb
dec
sub
cmps
cmp
fstp
jecxz
daa
jb
out
mov
and
xchg
iret
push
loopne
shr
push
inc
fwait
push
test
pushf
and
(bad)
adc
in
int3
stos
test
test
jge
adc
test
fld
xor
movs
je
(bad)
stc
mov
sahf
push
add
cmp
sub
retf
and
shr
push
dec
lock
sub
adc
mov
scas
add
repz
fadd
jo
inc
cmps
lods
out
ins
push
cmp
lds
loop
lahf
sbb
cmp
(bad)
jp
xor
xchg
inc
add
cmp
mov
xchg
mov
out
or
popf
lods
cmp
jmp
xchg
mov
aad
test
xor
lea
aad
movs
mov
sbb
mul
inc
dec
jnp
loope
data16
icebp
ret
xor
in
fidivr
push
outs
icebp
xchg
lahf
adc
mov
pop
xchg
call
js
jb
int
jae
aad
push
add
pop
rcl
mov
cld
sbb
push
dec
sub
push
sbb
cmp
and
out
push
jae
enter
mov
sbb
and
mov
push
jge
test
mov
and
cmps
push
dec
jl
pushf
fsub
mov
test
cmc
sti
xchg
push
push
xor
pop
mov
rcr
in
fcom
fstp
push
or
pop
dec
pop
jle
jecxz
push
cdq
or
push
xchg
push
mov
rcl
push
mov
(bad)
ror
mov
adc
sbb
cmp
sbb
adc
scas
pop
mov
dec
pusha
jl
mov
test
xchg
add
xchg
test
push
dec
test
scas
jo
xchg
shl
xchg
pop
adc
xchg
push
outs
les
stos
icebp
mov
shr
sub
fcom
xor
xchg
pop
mov
test
aad
adc
sub
dec
mov
leave
xchg
sbb
mov
stc
outs
outs
mov
vpshufhw
stc
jb
cmc
movs
inc
(bad)
and
adc
sbb
mov
inc
gs
jp
dec
sbb
mov
sub
mov
dec
xlat
mov
xchg
outs
jbe
dec
mov
lea
shl
pop
in
push
mov
fwait
xchg
fstp
jnp
pop
fcomp
retf
adc
jo
fucomip
jmp
outs
popf
jmp
retf
fisttp
adc
add
dec
add
clc
aam
cmp
dec
jb
jbe
mov
mov
pop
cmps
jp
pop
sbb
mov
cmc
mov
pusha
imul
xor
mov
test
xor
mov
or
or
mov
mov
mov
sub
push
and
jnp
pop
or
push
jge
jb
sti
icebp
jp
mov
cmp
and
sub
and
sub
nop
mov
jae
add
jae
inc
fbstp
popf
js
fsub
(bad)
sbb
mov
push
mov
jle
shr
mov
add
clc
inc
push
cmp
ret
int3
mov
out
cmp
cwde
adc
(bad)
dec
loope
push
pop
pop
mov
imul
imul
data16
shr
cli
add
mov
test
jge
sub
xchg
xor
fild
stos
cdq
push
sub
mov
popa
sub
mov
movs
mov
dec
sbb
push
xchg
in
jae
add
pop
ja
aaa
pop
out
lods
imul
sub
imul
popf
in
adc
jge
std
xchg
mov
push
dec
cmps
jbe
jp
pop
push
push
ss
and
cmp
jmp
pop
xlat
in
mov
push
pop
mov
jle
test
out
bound
cmp
pop
jb
jg
pusha
scas
sar
into
(bad)
fidivr
stos
inc
fwait
outs
leave
xchg
jbe
popf
push
adc
call
add
inc
add
push
popa
mov
pop
and
sub
movs
jne
push
or
fmul
ds
daa
icebp
test
xor
pop
add
push
cmp
std
inc
mov
and
jl
leave
out
xor
sub
mov
imul
scas
ins
in
sbb
jl
dec
cld
xor
adc
outs
push
stos
cmps
pushf
pop
mov
rol
repz
adc
inc
sub
dec
sbb
popf
add
xchg
jge
out
inc
enter
and
leave
call
fisubr
and
xlat
jo
or
imul
xchg
xchg
push
jl
mov
xor
push
es
pop
outs
arpl
pop
mov
xchg
push
sahf
xlat
icebp
icebp
pusha
jl
mov
jge
sbb
push
int3
popa
ins
push
sbb
cmp
addr16
and
add
sub
lds
cmps
jmp
push
mov
inc
not
stos
aas
cmp
movs
xchg
jmp
push
arpl
xor
fdiv
in
cmc
pop
xor
adc
add
rcl
pushf
(bad)
(bad)
inc
push
and
cdq
pop
popf
stos
xor
movs
xchg
dec
bswap
stos
or
mov
jecxz
dec
out
or
popf
xchg
xchg
rcl
iret
mov
rcr
or
pushf
jmp
jle
in
xchg
(bad)
fadd
inc
sub
pop
xor
in
adc
mov
lea
into
mov
fnsave
xchg
xor
ror
cs
jns
lods
push
sbb
and
sbb
adc
aam
jge
mov
lods
rcr
(bad)
mov
in
cs
mov
in
cli
cmps
outs
add
in
shl
mov
add
dec
inc
loope
lods
ins
jmp
cmps
inc
test
or
loopne
cs
inc
ja
(bad)
pop
pop
adc
es
mov
mov
pushf
jcxz
pop
jmp
mov
sbb
dec
adc
xor
adc
cmp
adc
leave
cmp
xor
aas
(bad)
xor
push
js
mov
adc
pop
outs
or
push
xor
out
cs
aaa
shl
push
sbb
shl
lock
(bad)
repz
lock
dec
dec
jns
pop
pop
fdivr
aad
xchg
xchg
lahf
aaa
mov
push
xchg
imul
push
pushf
inc
xor
test
das
pop
lock
xor
mov
pcmpgtd
inc
int3
cmc
mov
ss
dec
jb
xor
fisttp
rcr
xlat
stc
js
push
xchg
shl
das
xor
int3
inc
pop
inc
and
in
inc
pop
scas
mov
and
inc
add
mov
pop
test
aam
cmp
push
xor
mov
mov
daa
jmp
adc
dec
shr
cli
test
pop
pushf
pop
and
cmp
ret
(bad)
lods
clc
add
aaa
faddp
or
xchg
ret
imul
pop
retf
enter
nop
push
call
loop
loope
xor
mov
nop
shr
mov
cmp
test
and
jno
xlat
mov
loop
xchg
mov
mov
fisub
hlt
cmp
jb
or
dec
xchg
call
pop
sbb
or
sahf
out
xchg
arpl
cmps
test
pop
popa
fsub
wrmsr
call
adc
pop
frstor
jnp
dec
xor
adc
pop
aas
add
jnp
cli
xchg
ins
(bad)
jb
xchg
dec
mov
in
jge
pop
repz
call
adc
call
jne
jmp
add
adc
sbb
cmc
or
pop
adc
pop
cli
mov
popf
jb
inc
jnp
imul
cmp
inc
jl
fst
xor
rcr
paddusb
mov
ss
mov
mov
out
mov
jae
enter
rcr
jl
int
cld
test
jnp
mov
btr
pop
xlat
je
(bad)
ror
ret
bound
lods
mov
hlt
addr16
retf
pop
test
in
xchg
sahf
sar
lods
dec
int
(bad)
std
xor
xor
cmp
stos
(bad)
out
rcr
(bad)
mov
ja
jg
call
add
sub
stos
icebp
mov
stc
outs
(bad)
and
enter
jle
bound
cmp
cmc
ror
pop
cdq
int3
out
nop
retf
xchg
inc
push
pop
mov
xchg
and
adc
cmp
push
xchg
unpckhps
or
cmps
xchg
out
pushf
mov
bound
icebp
dec
int3
mov
inc
jbe
inc
cmp
les
sbb
pop
(bad)
push
lea
cdq
ins
sbb
push
push
dec
lock
ror
and
dec
jo
lea
mov
pushf
xchg
fisttp
pop
mov
retf
leave
(bad)
xchg
hlt
xchg
imul
js
test
xor
mov
ret
jo
push
adc
pop
mov
repnz
jae
mov
sub
mov
jmp
jno
jge
dec
out
adc
outs
ret
xor
sahf
fbld
pop
push
shl
xchg
lea
jmp
or
inc
test
push
add
in
sub
or
fstp
nop
mov
add
mov
and
mov
mov
daa
add
cmp
pop
sbb
pop
adc
gs
adc
adc
(bad)
iret
rol
inc
iret
adc
sahf
jmp
pop
xchg
retf
xchg
mov
fld
mov
repz
ficom
imul
sub
outs
scas
jp
xor
inc
xor
cmp
ins
retf
jnp
xchg
in
xlat
xchg
mov
ja
sub
daa
xor
mov
push
sti
push
shr
movs
rol
in
and
mov
add
jl
or
stos
push
jne
jmp
cmp
jmp
or
int3
adc
(bad)
or
js
fdivp
nop
ror
and
mov
adc
lods
sbb
jle
aam
rol
push
sbb
gs
add
cmp
jae
push
data16
add
xchg
inc
mov
ins
leave
mov
dec
loop
adc
fist
xor
inc
std
inc
aad
cmp
sub
stos
push
outs
outs
in
aad
inc
jb
pop
mov
dec
enter
ror
cmp
in
inc
outs
or
fldenv
es
repz
xor
or
into
mov
leave
loop
pop
cmp
adc
pop
rcr
icebp
sbb
aad
retf
stc
cmp
mov
rol
popf
lea
and
add
push
fisubr
icebp
pop
inc
(bad)
rcl
inc
or
xchg
fidiv
xor
shl
sahf
add
loop
test
or
lds
movs
(bad)
adc
icebp
mov
pop
mov
add
stc
jmp
rcr
jo
inc
adc
lods
sub
(bad)
leave
ja
data16
or
ret
stc
xor
sar
dec
int
inc
and
fsub
dec
pop
sti
(bad)
je
push
cmp
rcr
mov
xor
leave
out
out
das
pushf
mov
scas
mov
mov
enter
fisub
dec
in
aam
cmp
and
into
ret
dec
dec
dec
retf
mov
sub
pop
mov
jnp
test
pop
push
cmp
gs
dec
(bad)
iret
cmp
adc
aas
sbb
pop
movs
iret
stos
ds
xor
scas
sub
push
jmp
adc
adc
xor
out
or
clc
inc
movlps
mov
cli
ss
lea
in
jmp
in
out
lods
sub
push
ret
sbb
ror
adc
cli
hlt
(bad)
stos
shr
sub
or
fild
pop
(bad)
sbb
lods
int3
push
mov
push
out
ins
sbb
dec
sub
or
fidivr
jae
(bad)
fdivr
fldenv
pop
dec
xchg
fisttp
lock
loop
dec
cmps
add
je
xor
cmp
push
jmp
mov
mov
sub
and
xor
xor
xor
sub
retf
popa
sub
push
adc
cmp
lahf
mov
xor
ret
push
adc
loop
xchg
jmp
xchg
dec
test
leave
gs
dec
add
pop
hlt
fidiv
pop
xchg
mov
cmp
fucomip
jno
pop
jge
sub
enter
loop
add
imul
fcmovnbe
jo
mov
dec
fninit
fist
dec
shr
xchg
cli
dec
sbb
pop
ror
jle
std
jmp
add
sub
addr16
add
stc
jnp
xchg
enter
add
enter
cmp
pop
fld
fwait
and
cmps
into
iret
loope
or
retf
imul
mov
test
mov
ror
lock
sub
ins
inc
inc
mov
mov
pop
in
leave
pushf
xchg
je
pop
mov
cmp
dec
ret
cmp
xor
pushf
fwait
xchg
cdq
jge
cli
aad
mov
inc
call
jo
xchg
cld
cmps
sub
out
sub
mov
div
icebp
pushf
call
mov
pushf
and
clc
test
sar
add
aas
add
cwde
ins
int3
xchg
cs
or
outs
outs
inc
std
pusha
pusha
push
iret
xor
stos
imul
gs
sub
push
test
mov
aas
or
or
xor
test
jmp
lds
in
(bad)
icebp
addr16
cmp
ds
in
aad
sub
jo
fnstenv
ins
cmp
movs
retf
std
sub
ror
outs
jg
mov
mov
mov
pushf
outs
or
mov
push
mov
fld
les
mov
mov
push
aas
cmp
and
test
cli
adc
mov
bound
jb
inc
mov
std
mov
pop
cmp
and
retf
push
cmp
(bad)
pusha
out
retf
mov
push
inc
loope
int
push
and
jp
dec
dec
icebp
cld
sti
inc
push
pushf
(bad)
jne
scas
jo
xor
mov
push
popf
push
and
mov
fcmovnu
sbb
xor
pop
jl
push
mov
jg
push
xchg
idiv
sub
cmp
or
scas
push
cmp
enter
mov
adc
xor
xor
sbb
mov
shr
pop
cmp
and
adc
out
or
out
pop
fcmove
mov
dec
leave
mul
adc
ret
in
mov
and
loopne
add
clc
test
mov
inc
mov
aad
cdq
popa
retf
ret
imul
(bad)
call
pop
sub
cdq
xchg
push
lods
pop
movs
neg
and
mov
int
mov
sbb
nop
out
xchg
ret
push
enter
xlat
inc
sbb
mov
push
fnstsw
jmp
cwde
fldenv
rcl
mov
push
cmp
xchg
fist
cmp
sbb
inc
add
cdq
jge
xchg
dec
and
add
inc
xchg
cli
adc
jge
in
mov
push
vmaxss
(bad)
pop
outs
arpl
push
shl
xor
std
clc
ins
ror
xlat
add
inc
(bad)
mov
cmps
sbb
mov
lahf
mov
dec
shl
out
js
xchg
jo
or
arpl
add
xor
cmps
mov
call
jecxz
not
fdiv
cld
inc
jnp
cmc
dec
jmp
in
push
ret
xchg
pop
frstor
xchg
sub
aaa
(bad)
sbb
xchg
ins
push
ja
jne
sahf
cwde
xchg
jae
addr16
and
retf
inc
mov
push
call
jge
and
xor
retf
jo
cmp
or
xor
(bad)
sbb
stos
cmp
scas
push
jae
dec
call
adc
push
push
loopne
out
mov
sub
int3
mov
push
js
enter
call
mov
push
daa
add
xchg
out
push
std
xchg
(bad)
pop
dec
(bad)
jae
cwde
cmps
sub
ss
(bad)
push
call
popa
sub
sbb
cmc
inc
add
imul
adc
aas
nop
mov
out
or
push
ret
into
cmp
inc
retf
sbb
rcl
jo
mov
jb
out
out
add
sub
into
adc
xlat
xchg
jmp
add
jbe
add
call
test
cs
sub
mov
add
ins
out
jno
arpl
dec
dec
cmp
mov
outs
das
in
in
and
adc
cld
jmp
sar
xor
pop
popa
clc
cmp
scas
xchg
(bad)
out
arpl
xor
inc
pop
cmp
jo
jg
aam
inc
pop
clc
int3
rol
pop
out
dec
mov
mov
inc
icebp
xor
retf
sti
daa
scas
lods
mov
lods
das
inc
pop
push
jbe
mov
test
popf
dec
gs
mov
dec
pop
xchg
sbb
add
and
aad
or
push
fwait
jns
mov
sbb
mov
adc
or
loope
cs
retf
push
add
mov
lock
sub
adc
push
cmp
retf
push
jnp
jl
adc
xchg
lods
ror
mov
inc
imul
xor
push
nop
sbb
sub
fidivr
aaa
inc
and
jbe
mov
aaa
fdiv
pushf
cmps
inc
xor
cmp
(bad)
mov
or
jmp
out
popa
in
sub
aad
int3
adc
lea
test
ins
test
cwde
and
inc
mov
repz
adc
pop
lock
xchg
ja
xchg
bnd
outs
push
push
scas
scas
mov
popa
cld
cmc
mov
sub
stc
lock
into
add
in
mov
dec
mov
stos
je
xor
and
and
xor
cmp
test
fcomip
cmp
xchg
jmp
mov
pop
jb
dec
sub
scas
add
repnz
push
cmp
mov
xchg
stos
and
shl
movs
pop
call
std
and
cmp
dec
loop
cmp
call
adc
jmp
jne
hlt
fisub
mov
cmps
push
or
fwait
daa
jb
fisttp
mov
pop
enter
iret
pusha
test
jo
inc
push
or
push
test
loop
inc
inc
mov
cmc
in
mov
popa
pop
mov
and
add
pop
pop
in
mov
jno
sbb
pop
stos
push
cmp
or
repnz
neg
xlat
xchg
sar
inc
test
pop
pop
pop
loopne
jp
cs
sub
jmp
addr16
jne
jo
rol
mov
fmul
movs
cmps
mov
sub
add
mov
out
push
add
jle
mov
pop
sub
mov
inc
mov
(bad)
in
push
data16
sbb
cmps
and
xchg
and
jge
xor
aam
pop
fdiv
out
mov
adc
enter
jno
adc
bound
(bad)
shr
fmul
test
mov
outs
dec
bound
mov
inc
lahf
idiv
pop
aad
add
mov
sub
dec
pop
sub
jo
lea
sbb
pop
inc
mov
push
lds
adc
pusha
jns
push
daa
cmp
sbb
xchg
(bad)
test
jmp
shl
mov
pop
mov
mov
mov
mov
dec
fnstsw
addr16
nop
cdq
cdq
int
and
pop
das
adc
dec
inc
sbb
fs
les
mov
mov
fwait
imul
sti
cmp
mov
mov
outs
inc
out
mov
pop
cmp
cmp
ds
adc
jmp
mov
jo
popf
movs
setno
pop
push
adc
test
mov
sbb
out
aas
mov
and
xor
jle
lods
outs
movs
cmp
adc
fwait
jae
add
xchg
out
cmp
xor
pop
mov
sbb
push
xchg
jg
clc
jmp
push
or
jle
mov
leave
or
fnsave
mov
shr
cmp
push
js
mov
repz
(bad)
push
mov
mov
cmc
mov
in
nop
ins
jecxz
rol
xor
shr
test
sti
adc
cld
nop
outs
cmp
push
adc
mov
mov
ins
lods
outs
cmps
loop
push
sbb
enter
js
sub
out
das
test
loope
lods
scas
ror
or
rsm
adc
adc
and
cmc
in
loop
add
test
fsubr
jg
or
push
loop
xlat
mov
pop
push
jge
pop
adc
add
push
(bad)
cs
in
minps
ss
or
sub
cmp
inc
dec
cmps
cmps
(bad)
pop
test
scas
faddp
out
pop
mov
cmp
or
ror
leave
xchg
mov
(bad)
retf
out
popf
push
scas
inc
ret
adc
sar
xchg
adc
push
in
jo
mov
call
xchg
popa
and
sbb
sti
xchg
mov
neg
int
mov
pop
xor
jg
push
icebp
add
push
push
pushf
jp
in
jmp
pushf
adc
ror
into
add
out
out
out
stc
push
sahf
movs
std
dec
cld
into
sbb
sbb
sti
loope
dec
and
add
add
xor
movs
or
jmp
pop
lahf
inc
or
mov
push
push
adc
aas
dec
mov
mov
sub
outs
cmc
(bad)
inc
call
cmp
xchg
pop
movs
adc
add
inc
iret
scas
lds
xchg
push
xchg
sub
ds
or
aam
sbb
cmc
adc
mov
ja
jmp
mov
cmp
cmp
adc
lahf
(bad)
sti
repnz
jnp
test
cli
scas
movups
scas
add
enter
fisubr
cs
in
mov
mov
dec
cs
pop
fld
add
sbb
daa
stos
pop
imul
and
(bad)
xchg
inc
pop
push
pop
pop
jg
mov
ret
pop
ret
mov
bound
lods
fwait
add
push
test
mov
pop
xor
pop
shl
mov
push
fwait
cmp
mov
les
inc
xchg
add
push
cdq
xor
adc
popf
add
cld
clc
sbb
xlat
pop
stos
add
ds
cmp
retf
mov
mov
cmp
pop
sbb
xor
adc
mov
adc
jmp
push
push
jle
or
retf
(bad)
aam
leave
mov
jecxz
ret
jg
idiv
xor
xor
inc
retf
cmp
mov
repnz
or
cmp
outs
fisttp
jl
push
dec
js
mov
lds
retf
jmp
jg
outs
push
add
scas
bound
fidivr
sub
push
pop
push
jmp
push
sti
mov
stos
fsubr
test
cmc
mov
movq
adc
push
xchg
iret
mov
cmp
mov
bound
jp
ret
movs
ror
dec
retf
mov
cmc
xchg
inc
mov
test
ins
loop
jnp
js
sbb
jg
test
lods
pop
data16
retf
push
cmp
sbb
add
and
retf
push
daa
pop
cmps
jb
loop
push
(bad)
or
cmp
xchg
lods
enter
mov
loopne
add
mov
xor
jbe
pop
repz
adc
cwde
fiadd
stc
sti
sbb
pop
int
js
jnp
daa
jo
in
mov
cmp
jbe
in
mov
mov
test
shl
lds
jne
xchg
jmp
(bad)
lock
int3
xchg
jo
(bad)
xchg
xchg
add
call
je
push
and
stc
fld
mov
push
and
inc
popf
push
mov
xchg
into
pop
test
or
in
sbb
aad
in
adc
test
das
mov
xchg
jmp
push
xchg
mov
jb
push
cmp
mov
inc
ror
push
xor
adc
aaa
ins
push
dec
gs
mov
jg
sbb
je
lea
ja
and
loop
xchg
js
sti
jmp
inc
dec
iret
cdq
jbe
push
shr
dec
pop
xchg
jno
(bad)
sub
sti
hlt
fbstp
sbb
test
jmp
stos
inc
(bad)
div
mov
mov
rcr
ret
adc
cmp
repnz
imul
fld
gs
adc
gs
inc
stos
cmc
inc
ins
inc
es
imul
sbb
and
jo
sub
add
out
pop
mov
nop
and
sbb
push
addr16
(bad)
int3
mov
inc
or
aad
repnz
lock
bound
mov
xchg
(bad)
and
aas
faddp
fld
adc
imul
into
jmp
sub
cld
bound
and
push
mov
inc
ror
or
xor
ss
pusha
sahf
daa
movs
ins
cmc
push
cli
popf
mov
ins
out
loop
mov
mov
xor
add
(bad)
xchg
cmp
ffreep
lods
pop
ror
ins
xchg
gs
jne
jecxz
sbb
mov
or
push
push
stos
sbb
xor
call
or
test
ss
movs
sub
popa
sbb
je
sbb
ins
sub
aam
in
gs
(bad)
fadd
or
mov
(bad)
ins
outs
mov
shr
bound
or
fistp
fidiv
push
xor
cs
pop
fst
(bad)
lds
loopne
fst
pusha
pop
sub
sub
pop
into
push
hlt
outs
and
sti
push
out
cmp
adc
in
fwait
push
jg
dec
xchg
jb
stos
sar
cli
addr16
rol
pushf
xchg
sahf
in
shl
mov
dec
in
lock
mov
ins
or
shl
cdq
popf
(bad)
fisub
loopne
adc
(bad)
repnz
pop
cmps
fidiv
sub
sbb
fld
shl
xchg
push
xlat
in
aaa
adc
mov
dec
(bad)
int3
enter
and
jne
dec
mov
jns
(bad)
and
and
(bad)
push
fild
jp
test
adc
sub
push
stos
movs
lods
lds
jmp
sar
ret
mov
pop
sub
outs
xor
enter
js
retf
jno
lods
cdq
arpl
imul
xchg
(bad)
hlt
int
and
std
ror
adc
out
fst
adc
out
sub
jp
mov
pop
cmc
push
jo
jnp
pop
inc
jg
lea
in
les
sub
aas
loope
sbb
enter
mov
inc
add
mov
adc
sbb
cmp
mov
add
clc
cmps
push
add
loopne
bound
xor
inc
pop
xchg
sub
ss
inc
aam
loopne
cmp
mov
loopne
aam
ret
mov
pop
push
rcr
mov
adc
mov
(bad)
adc
add
das
test
mov
outs
cmp
ins
test
inc
icebp
cwde
add
fimul
mov
mov
push
xlat
arpl
jl
jmp
fmul
sub
je
int3
inc
cs
imul
aaa
ret
mov
sub
frstor
cdq
pop
adc
mov
icebp
popf
jns
adc
loope
into
xlat
in
fld
movs
sub
mov
or
xor
xchg
xor
call
mov
daa
mov
outs
jmp
add
xlat
cmp
adc
mov
adc
mov
add
rcl
ja
outs
xchg
out
das
movs
fincstp
mov
das
pop
dec
adc
pushf
dec
cld
(bad)
push
xor
sbb
add
cmp
mov
test
pusha
retf
push
adc
sahf
push
dec
or
jbe
adc
xor
mov
mov
data16
je
mov
aaa
scas
dec
dec
xor
mov
or
adc
jl
push
fs
dec
inc
cmp
addr16
xchg
push
pop
xor
retf
pop
mov
xchg
mov
push
sahf
pop
loop
out
(bad)
mov
pop
push
es
in
rcl
jle
mov
inc
stos
fisttp
retf
movs
(bad)
pushf
je
cmp
inc
aam
and
push
push
lock
dec
sub
lahf
in
mov
sub
(bad)
shr
cmp
or
cmp
mov
pop
call
inc
(bad)
adc
fist
aad
pop
pushf
test
sbb
or
pop
inc
pop
add
add
mov
lock
xchg
sahf
jnp
pop
jmp
or
mov
(bad)
in
fwait
cmp
adc
mov
add
out
and
xchg
xor
icebp
test
xlat
push
push
out
sbb
dec
dec
in
add
rcr
into
cmc
jmp
in
jecxz
aam
xor
fmul
cmp
dec
adc
mov
and
aas
jecxz
ror
ins
mov
mov
cs
adc
push
sub
sbb
or
dec
jns
inc
mov
retf
xor
dec
sbb
scas
iret
ins
fsubr
(bad)
retf
jecxz
dec
adc
adc
sbb
movs
mov
sbb
dec
adc
dec
cmp
imul
add
push
fdivr
push
dec
(bad)
je
sbb
lods
jge
ficomp
push
(bad)
mov
mov
cdq
or
mov
fs
sbb
adc
loopne
and
cmpxchg
pusha
pop
mov
stos
imul
sbb
mov
inc
call
mov
sbb
mov
add
test
sub
retf
inc
out
out
push
mov
test
cmps
sbb
dec
popf
add
mov
sahf
aad
add
mov
scas
scas
xchg
mov
sbb
cmp
dec
sub
mov
stos
fcmove
and
ds
rcr
mov
lea
test
mov
sub
jmp
out
fist
jbe
scas
shl
pop
ins
shl
stc
jmp
mov
mov
je
ja
xchg
mov
inc
enter
sub
jl
inc
test
repz
xor
push
nop
pushf
movs
iret
push
ret
xor
xchg
rcr
movs
mov
repnz
fsub
stos
add
hlt
dec
jbe
sbb
jae
jl
push
fs
movs
mov
mov
mov
mov
dec
das
and
inc
cmp
inc
mov
iret
es
adc
xor
(bad)
stc
add
sbb
xchg
in
sbb
bound
or
jbe
sbb
imul
adc
cmp
push
stos
jmp
dec
jns
ret
popf
or
dec
add
push
int
fisubr
dec
stos
in
mov
(bad)
jecxz
sbb
push
sbb
movs
push
and
ret
hlt
or
inc
and
push
(bad)
movzx
loopne
push
fdivr
xlat
cmp
and
lock
nop
ins
int
int3
sub
dec
jg
outs
mov
retf
mov
mov
pop
call
sub
dec
pop
call
ja
sub
jno
int
pop
or
sub
mov
lods
push
push
and
stos
movs
pop
sbb
in
xchg
sub
retf
mov
(bad)
pop
lahf
mov
push
fcmovne
mov
retf
mov
ret
addr16
sar
retf
retf
test
mov
mov
xchg
out
pushf
dec
mov
bound
inc
(bad)
cmps
int
fsub
cmp
ror
add
and
jl
iret
xor
pop
cmp
lahf
ins
push
js
ds
or
dec
ins
pop
fnstcw
dec
fiadd
in
mov
pop
inc
scas
es
add
cmps
push
pop
call
out
das
pop
add
stos
dec
icebp
pop
lock
cmps
aas
aaa
sahf
aas
cld
loopne
sub
cs
je
popa
lahf
jle
pop
shld
jmp
sbb
mov
or
or
data16
and
movs
enter
scas
sub
jb
popf
inc
push
neg
mov
data16
ror
sbb
sbb
gs
mov
push
adc
into
cld
adc
test
add
ror
imul
mov
ins
jmp
ja
push
fs
retf
out
fcom
jne
pushf
dec
inc
mov
xor
push
int3
adc
adc
rcl
out
ret
inc
or
aad
lea
dec
das
mov
(bad)
ds
xor
pop
add
add
ds
mov
sbb
pusha
les
imul
call
shl
pop
mov
and
jns
mov
push
retf
(bad)
fidiv
dec
xchg
push
sti
jge
retf
inc
mov
shr
sub
scas
mov
loopne
das
out
push
hlt
shl
add
(bad)
pop
pop
icebp
lea
icebp
adc
mov
xchg
data16
push
adc
les
inc
sub
dec
inc
or
fcmovbe
adc
ret
(bad)
inc
(bad)
xor
pop
inc
popf
push
ja
clc
retf
xchg
sti
sub
imul
mov
xor
or
in
retf
mov
or
sahf
xor
xchg
mov
xchg
leave
sub
fadd
test
nop
xchg
ret
adc
test
adc
mov
xchg
mov
push
or
fdiv
int
jbe
frstor
div
(bad)
xlat
inc
in
outs
(bad)
ins
pop
mov
dec
iret
out
dec
mov
daa
retf
stos
fwait
addr16
shr
or
rcl
fst
or
add
push
xchg
xchg
xor
push
iret
enter
repnz
enter
es
repnz
mov
dec
mov
or
ss
sahf
sbb
mov
fld
cli
lahf
in
test
in
sahf
inc
sahf
pushf
cmc
setne
inc
pop
std
leave
xchg
sbb
dec
(bad)
fcomp
loop
js
ret
cdq
push
jmp
rcl
pop
push
jnp
cmps
or
jo
add
fistp
push
sub
pusha
pop
scas
jmp
cmp
pop
pop
inc
mov
or
mov
lods
push
and
(bad)
in
scas
jl
lock
cmp
sbb
jecxz
xor
(bad)
jo
fmul
das
mov
push
clc
pop
pop
les
and
enter
inc
lahf
push
icebp
clc
adc
js
movs
xor
dec
dec
add
jmp
mov
mov
sbb
ja
mov
or
or
fcomp
sub
inc
call
das
jg
add
dec
sub
mov
(bad)
test
inc
sbb
adc
sbb
pushf
push
mov
jecxz
addr16
bound
ins
in
fcom
into
jmp
pop
xchg
xchg
jo
mov
inc
pop
jle
(bad)
jl
ja
pop
sub
xchg
sub
jo
popf
dec
pop
loopne
jg
test
repz
in
das
xchg
(bad)
lods
stos
xchg
(bad)
sbb
mov
sbb
clc
xor
push
cmp
jne
jmp
inc
jmp
gs
lods
inc
or
mov
outs
mov
add
lods
pop
(bad)
data16
mov
aaa
sbb
pop
push
and
xor
mov
add
inc
push
std
xchg
jmp
sar
dec
lods
push
(bad)
aad
cmp
das
out
ja
mov
pop
les
cmp
fimul
cmp
jp
pop
mov
cmp
out
cmp
movs
test
stos
mov
shl
inc
sub
icebp
jnp
adc
dec
cmp
repnz
lods
fidivr
imul
jb
push
nop
push
popa
je
push
mov
imul
mov
nop
bound
fsincos
pop
jg
mov
out
mov
jmp
ins
push
rol
stc
stos
icebp
push
(bad)
pop
and
sbb
add
fwait
xchg
pcmpgtw
and
not
loop
jns
mov
dec
xchg
loopne
loopne
and
retf
cmps
inc
rcl
xchg
cli
out
mov
mov
xchg
inc
popf
movs
scas
jnp
mov
loopne
pop
jmp
pushf
or
xchg
enter
sbb
jb
iret
sub
leave
sbb
fistp
clc
and
lods
es
(bad)
push
(bad)
mov
cmp
push
es
inc
mov
pop
ret
and
inc
lock
fsubr
pop
xlat
shl
mov
sahf
xor
or
jecxz
jg
sub
mov
(bad)
in
jp
push
sub
cmp
ror
inc
xor
jnp
dec
test
pop
les
in
ret
in
sti
stos
retf
cld
sub
pop
addr16
lods
lods
push
(bad)
jnp
in
dec
add
sub
add
and
call
sub
push
popf
stos
mov
fmul
das
das
cmp
stos
pop
adc
push
test
jnp
push
or
xor
mov
jecxz
mov
inc
int3
pop
popa
add
sbb
aam
sub
lods
xchg
hlt
retf
cld
and
or
push
out
arpl
icebp
lds
xchg
xchg
fisubr
lods
out
push
test
in
jle
mov
xchg
in
es
sub
cld
jmp
cmc
loop
cmp
(bad)
cmc
jecxz
fs
pop
jns
cmp
push
loopne
adc
outs
inc
mov
inc
in
std
arpl
js
mov
cwde
jg
xchg
call
xchg
je
fdivr
sub
push
or
cld
xor
in
fdivr
or
pop
mov
fist
fidivr
mov
pop
jno
xchg
pushf
jmp
push
sbb
xchg
pop
or
les
das
xor
fdivr
jecxz
mov
sub
push
adc
hlt
lds
add
lock
mov
push
jbe
push
scas
(bad)
retf
lds
or
sub
jge
into
fdiv
push
jne
mov
mov
fmulp
adc
out
les
sbb
and
push
cmp
dec
scas
bt
into
pop
ins
xor
jle
inc
xor
loop
in
jne
test
repnz
daa
stos
and
jns
call
loopne
xor
movs
int
rcl
popf
mov
cmp
jmp
push
pop
movs
xchg
les
adc
daa
ins
xor
into
push
xor
inc
mov
out
in
push
pop
mov
mov
add
fst
and
mov
push
mov
fwait
js
jae
push
jo
test
stos
fs
xor
sub
pop
mov
push
xchg
mov
aaa
in
push
into
outs
cli
sbb
push
test
and
mov
les
push
shl
outs
ins
sub
ins
add
int3
add
test
outs
clc
sbb
mov
push
icebp
sbb
cli
dec
scas
jp
jg
cmps
shl
inc
dec
cmp
push
sub
xchg
adc
das
(bad)
outs
xchg
cmp
jb
and
mov
aas
in
jmp
stos
pop
mov
jb
xor
and
fdivr
pushf
(bad)
mov
mov
mov
call
arpl
fucom
movs
ins
inc
mov
pop
sar
(bad)
and
movs
cli
in
popa
fstp
sbb
xchg
sub
mov
add
loopne
push
fist
mov
mov
mov
scas
dec
pop
jmp
jmp
iret
xor
xor
sti
test
or
xchg
call
sub
xor
pop
jmp
cld
cs
aaa
daa
fiadd
sbb
in
into
sahf
ins
push
xor
or
push
std
mov
jns
retf
je
mov
xchg
lock
arpl
dec
adc
jmp
pop
lahf
and
int3
and
mov
push
xchg
cmps
ins
mov
mov
ja
shl
or
mov
cwde
xchg
or
or
inc
outs
lods
push
pop
jns
or
jecxz
jg
fidivr
fmul
ja
mov
pop
sbb
pop
jb
xor
popa
cmps
push
xor
gs
xchg
rcr
mov
rcr
ret
pop
push
dec
ins
push
ss
adc
ret
push
xor
in
fwait
pop
dec
xchg
inc
pop
push
call
out
add
adc
lods
cmp
mov
fmul
pushf
push
push
data16
dec
pushf
rcr
scas
pop
inc
(bad)
jmp
hlt
fidivr
xchg
push
fidivr
push
test
jmp
adc
out
ficom
lock
jno
stos
or
cmps
es
daa
test
das
mov
push
mov
enter
cmp
scas
out
in
inc
mov
(bad)
ror
and
cmp
sbb
mov
in
fbstp
inc
movs
sti
push
xchg
test
retf
inc
fdivr
mov
lock
add
in
arpl
jae
hlt
imul
xor
and
imul
inc
pop
cmps
sbb
mov
pop
mov
fsubr
shl
repnz
jae
daa
push
jge
jno
jbe
fs
sbb
xchg
out
gs
retf
sti
daa
in
arpl
push
add
mov
shr
sub
jne
lods
mov
cdq
sub
pop
jecxz
and
popa
and
out
hlt
call
outs
cmc
ins
push
pop
test
jl
dec
pop
aad
pop
and
mov
adc
je
add
ja
jae
ret
in
stc
inc
dec
mov
xlat
dec
cs
fadd
mov
sub
aas
lods
cs
or
outs
pop
mov
imul
adc
lds
mov
sbb
or
push
out
ins
jge
adc
fdiv
mov
pop
and
mov
mov
mov
mov
inc
pop
or
ret
enter
popa
popf
pop
(bad)
push
cmp
call
sub
popa
xor
push
adc
cld
jl
add
push
cs
jl
iret
add
inc
call
fdiv
pusha
dec
adc
cld
jae
jno
jg
les
call
jmp
cmp
inc
outs
adc
push
sbb
outs
loopne
popa
dec
gs
add
jmp
dec
fucomp
push
adc
jl
cmp
aas
or
cmps
addr16
addr16
rol
in
sbb
cwde
out
inc
push
pushw
inc
js
push
stos
std
bound
scas
cwde
fabs
and
cdq
cs
jl
pop
stc
cdq
xor
outs
mov
cmc
hlt
ret
aad
loop
stos
sbb
xchg
leave
mov
outs
sbb
addr16
shr
add
and
ror
xor
mov
pushf
or
jno
jne
xor
sbb
mov
les
adc
je
outs
xor
mov
cmc
scas
loope
(bad)
xchg
loopne
aad
pop
gs
fs
push
and
aaa
mov
jbe
aad
or
shr
loope
(bad)
push
push
mov
sub
mov
push
ins
(bad)
stos
jbe
rcr
push
adc
add
push
adc
mov
repnz
in
js
add
iret
lea
ds
add
es
xchg
jmp
test
ret
xor
pop
mov
xlat
adc
ror
pop
mov
movs
bound
mov
sub
inc
in
dec
std
mov
loop
dec
es
push
jl
mov
ins
push
stos
pop
fisub
nop
xor
push
push
test
fldenv
xchg
jb
sub
mov
mov
mov
cmps
xor
inc
sub
fnstsw
pushf
lea
xchg
mov
cdq
fs
fsub
jecxz
push
mov
imul
pop
push
aam
cld
cmp
lods
(bad)
fsub
fsub
dec
sbb
xchg
scas
lods
clc
jne
sbb
pop
mov
adc
je
mov
inc
sbb
iret
scas
mov
push
sub
jne
clc
nop
fldenv
push
adc
jns
retf
loope
sbb
outs
jmp
pop
ficom
into
mov
test
ins
ret
(bad)
mov
jo
cmp
mov
jbe
sbb
xchg
pusha
and
dec
push
fcmovnb
aaa
xchg
pop
mov
fisubr
dec
cli
push
hlt
jne
fwait
add
add
loop
jge
jecxz
fbld
jg
mov
bnd
aas
and
stos
call
cmc
mov
xor
cmps
das
add
hlt
mov
adc
stos
push
pop
in
jb
outs
mov
loope
or
cmp
push
mov
out
push
in
test
mov
icebp
repz
es
nop
aaa
sahf
outs
jae
sbb
shl
cmps
inc
imul
retf
inc
retf
daa
aad
and
lods
test
or
clc
dec
sub
test
test
movs
lods
arpl
popf
jp
mov
pop
loope
cmp
jle
daa
gs
sbb
leave
mov
aad
adc
xor
retf
clc
mov
aad
adc
pop
bound
bound
shl
aam
add
cli
sub
mov
pop
and
in
pop
setae
jg
loop
repnz
fwait
mov
xor
jmp
test
or
fstp
adc
repz
mov
mov
fadd
and
mov
jo
retf
xor
xchg
dec
out
ror
mov
push
lds
add
sub
popf
daa
add
push
xchg
mov
movs
mov
push
pusha
lods
sbb
jne
test
ficom
fst
mov
pop
sub
das
sahf
mov
out
inc
jecxz
add
xchg
fimul
pop
mov
push
aad
add
std
mov
loope
es
out
jp
xchg
xchg
int
push
cmp
ss
pop
inc
pop
pop
mov
xchg
dec
adc
(bad)
dec
bound
xchg
scas
pop
xchg
xor
fcomp
mov
in
leave
lea
clc
cmps
jecxz
adc
jmp
leave
sar
adc
ja
sbb
and
in
add
aas
jl
das
mov
or
xchg
les
repnz
xchg
pop
jp
ret
gs
mov
ffree
hlt
or
xchg
fs
pop
(bad)
ja
xor
loopne
daa
push
push
pop
push
in
cmc
ins
sbb
call
push
nop
shl
ret
pop
jl
test
jns
cmp
push
hlt
and
mov
mov
mov
(bad)
jb
mov
dec
mov
adc
out
push
adc
test
fild
les
in
in
int
shl
add
or
ret
pop
mov
(bad)
out
lods
pop
push
mov
mov
mov
scas
xor
sub
sbb
xor
in
mov
out
mov
in
test
fnstcw
out
loopne
xor
push
mov
in
cmps
ds
inc
inc
div
dec
ret
sar
cdq
mov
dec
mov
and
pop
inc
sub
add
inc
sti
jno
sub
retf
xchg
or
(bad)
shr
sbb
sub
dec
push
inc
lods
aad
popa
inc
loopne
jg
(bad)
xor
ja
push
jo
mov
jge
cld
adc
(bad)
ret
jo
or
js
rcr
sbb
pushf
jl
test
retf
pop
stos
fsubr
fwait
and
xor
jbe
ds
xchg
jns
and
add
test
mov
cmc
xor
sbb
loope
jl
jp
test
repz
dec
lods
jbe
xlat
or
push
inc
ret
lock
mov
jb
and
push
sub
fcomp
pop
cmp
dec
push
mov
pop
test
xor
xchg
(bad)
das
daa
shl
sbb
(bad)
in
dec
mov
inc
mov
dec
clc
adc
jp
sbb
scas
cdq
xchg
je
adc
adc
addr16
mov
adc
sub
adc
mov
pop
ins
xchg
std
inc
xor
es
dec
mov
daa
adc
xor
mov
add
out
outs
mov
add
arpl
scas
popa
adc
jbe
pop
lods
(bad)
jmp
daa
adc
ficom
call
pop
cwde
shr
jae
xchg
popa
(bad)
mov
lahf
retf
out
push
and
xchg
mov
and
jle
das
pop
adc
stos
div
mov
movs
ror
pop
xor
dec
cmp
ja
lea
pushf
pop
jae
test
lods
sub
call
cmp
and
xor
mov
xor
arpl
(bad)
outs
inc
adc
pop
in
xor
lock
retf
enter
xchg
or
push
imul
inc
test
adc
mov
dec
cmp
xor
fstp
mov
xchg
mov
inc
xchg
xor
jg
mov
mov
mov
outs
jl
icebp
int
cwde
push
and
mov
sbb
(bad)
push
xchg
fld
sbb
cmps
je
sub
pop
adc
pop
loop
retf
inc
shl
hlt
and
pop
pusha
jno
fist
pop
movs
aaa
or
jp
add
nop
sbb
sti
jg
scas
(bad)
jp
rol
bound
daa
cmp
push
add
ficomp
fs
into
mov
gs
pop
or
pop
(bad)
inc
mov
xchg
mov
div
jp
jbe
cmc
jb
mov
ficomp
mov
xor
push
data16
les
retf
jo
ss
lahf
adc
dec
mov
add
push
out
addr16
xor
fmul
clc
rcr
sahf
fcomp
ret
dec
in
call
mov
(bad)
pop
call
mov
icebp
xchg
ds
hlt
sbb
or
shr
add
enter
add
rol
add
popa
pop
call
dec
(bad)
jle
dec
loop
das
cdq
push
jbe
adc
js
outs
dec
loop
mov
mov
adc
mov
add
enter
adc
stos
jl
mov
cmp
inc
into
pop
mov
lock
or
push
repz
test
or
mov
push
cmp
sbb
sbb
push
stos
sub
mov
mov
jns
mov
lds
jle
fadd
sahf
div
add
rol
push
and
sub
in
pop
lods
xchg
dec
push
fldenv
daa
push
int
inc
fsub
shl
inc
dec
call
pop
vcvtdq2ps
jecxz
mul
inc
repnz
xor
pop
out
adc
pop
ror
mov
mov
jnp
sti
fsubr
pop
dec
repnz
(bad)
in
mov
and
add
xor
mul
jle
and
or
push
dec
iret
xor
fs
mov
xlat
jg
sbb
add
cmp
jle
scas
sbb
mov
retf
sub
div
cmp
pop
mov
cmp
pusha
aam
idiv
mov
push
add
out
sub
rcl
or
data16
or
test
(bad)
jp
mov
jns
pop
xchg
mov
ja
sub
inc
inc
popa
dec
mov
shl
mov
or
cmps
ins
(bad)
aaa
movs
mov
cmp
(bad)
xor
(bad)
iret
gs
and
(bad)
lahf
fwait
in
xor
movs
ds
(bad)
aam
mov
mov
scas
aaa
mov
add
aam
cmc
dec
dec
mov
inc
or
or
bound
pusha
add
adc
pop
push
xor
cmps
gs
xchg
dec
adc
push
cdq
cli
pop
add
mov
ret
lods
dec
fisubr
or
dec
sbb
lock
pop
enter
in
icebp
lock
dec
sub
aad
mov
sti
sub
mov
mov
repz
sbb
mov
and
push
jnp
mov
rcl
xchg
out
mov
out
sbb
(bad)
xchg
or
aas
movs
push
inc
mov
aaa
mov
jmp
add
jecxz
jae
aaa
xchg
xlat
dec
mov
and
and
pusha
or
push
mov
stos
enter
nop
mov
pop
sub
xchg
mov
adc
pop
ins
xchg
cs
inc
je
loop
(bad)
out
xor
imul
hlt
jns
sub
xchg
jns
not
xchg
adc
inc
aad
sub
adc
hlt
outs
jge
sub
(bad)
je
and
daa
sub
retf
mov
jecxz
mov
or
in
ins
ss
sub
lock
fnsave
cmp
xchg
push
mov
mov
cmp
(bad)
popf
mov
pop
fisubr
or
xor
jbe
aaa
lea
pop
(bad)
add
ss
adc
pop
adc
pop
ficom
(bad)
pusha
(bad)
aas
loope
cmps
dec
ss
or
ror
pop
sub
xchg
arpl
jb
cmps
mov
sub
jmp
cld
mov
or
nop
sub
and
mov
xor
enter
pop
daa
(bad)
hlt
push
push
das
or
imul
and
jg
mov
inc
and
aad
bound
(bad)
cmp
cs
mov
push
push
mov
jne
xor
(bad)
jmp
mov
ins
aas
(bad)
inc
stos
addr16
fimul
mov
loop
adc
lods
jmp
inc
hlt
push
add
call
addr16
push
data16
sub
das
in
test
aam
sub
stos
ja
es
jbe
mov
jno
call
in
or
cmp
fld
pop
mov
pop
in
adc
push
popf
sbb
adc
add
jmp
cmps
enter
mov
bound
xor
mov
imul
push
xor
dec
inc
aam
lahf
clc
scas
add
cmp
dec
dec
test
outs
jbe
jns
and
inc
ss
pop
mov
popf
cld
pop
inc
mov
rcr
mov
push
adc
js
jmp
jecxz
pop
cmc
out
cdq
dec
or
call
adc
or
pop
aad
push
jp
jb
cld
(bad)
outs
hlt
sbb
aas
dec
pop
sub
in
ds
mov
mov
push
mov
ret
cmps
fs
fxch
jns
outs
retf
js
fisttp
xchg
shl
fmul
mov
ins
in
mov
test
icebp
adc
lods
cmps
jb
gs
into
xchg
sbb
lock
cwde
cmps
fstp
call
inc
ss
repz
rcl
jecxz
leave
jecxz
pop
jb
repz
xchg
and
hlt
cmps
fnstsw
aas
xchg
mov
test
and
ins
icebp
dec
lods
out
xor
scas
xchg
or
je
sar
mov
jb
popf
or
imul
or
mov
mov
pop
data16
xchg
jge
ss
rcr
repnz
inc
push
cmp
ret
xchg
in
rol
repz
mov
mov
gs
pop
xchg
repnz
pusha
dec
movs
ror
sbb
into
out
std
sbb
mov
sti
shl
or
sti
xchg
sbb
push
add
aam
xor
nop
pslld
xchg
sub
popa
jecxz
jge
add
inc
cli
inc
mov
test
jp
mov
pop
iret
idiv
hlt
leave
cmp
and
mov
call
dec
push
mov
imul
in
pop
(bad)
mov
mov
push
cli
sbb
pop
repnz
shl
mov
jmp
jb
jg
shl
sbb
sbb
xor
adc
pop
push
rcl
cs
or
cmp
sub
mov
cld
jge
push
mov
jp
mov
xor
movs
fdiv
or
ins
ret
and
jo
ins
aad
dec
mov
inc
add
sub
fcomip
pop
call
mov
repz
cli
xchg
ins
cld
fild
push
hlt
data16
mov
xchg
pop
hlt
pop
mov
and
loopne
mov
aam
xchg
(bad)
fwait
div
fmul
add
mov
stos
add
stos
mov
pop
lock
movs
add
inc
adc
add
fdiv
or
mov
cmp
retf
mov
jg
ins
mov
into
push
sbb
mov
popf
pop
jno
jmp
pusha
sbb
test
iret
mov
push
pop
mov
adc
inc
icebp
pop
jne
jno
lods
add
sbb
xchg
loope
enter
cmp
mov
nop
repz
push
inc
jbe
enter
mov
shr
add
(bad)
enter
jmp
jns
xor
js
in
mov
mov
pop
into
xchg
scas
retf
sbb
(bad)
xchg
lock
popf
cmp
fld
mov
test
and
neg
mov
sbb
ss
out
popf
push
and
mov
push
xor
and
lock
jmp
push
xor
clc
or
div
clc
fistp
leave
push
jmp
push
xchg
xchg
imul
aaa
ins
sbb
cmc
inc
das
cmp
pusha
pop
push
xor
sbb
movs
in
jmp
retf
out
in
test
or
fdiv
mov
xchg
ss
inc
or
sbb
(bad)
jl
mov
data16
call
mov
mov
gs
inc
imul
push
cmp
and
mov
adc
mov
test
es
rcr
xchg
aaa
lods
(bad)
sbb
mov
push
dec
in
push
or
push
pop
mov
loop
ficomp
repz
xor
sbb
call
jnp
xlat
lock
adc
aaa
push
(bad)
add
js
pop
mov
(bad)
jo
jge
call
daa
xor
mov
push
mov
(bad)
inc
or
sub
imul
push
mov
pop
sbb
inc
fadd
sub
fsub
add
leave
cld
scas
pop
sbb
call
sbb
fild
scas
mov
push
dec
int
dec
jp
outs
daa
cmps
retf
mov
adc
aam
push
or
and
or
pop
dec
xchg
add
mov
pop
adc
jbe
lahf
idiv
jl
inc
imul
cmc
or
adc
je
mov
ret
inc
inc
xchg
add
pop
loope
push
mov
das
aaa
std
push
int
and
push
cli
xchg
xlat
pushf
arpl
repnz
lods
and
mov
add
push
or
test
mov
sub
loop
mov
pop
aas
loopne
popf
jle
mov
and
daa
test
and
nop
sbb
cmc
cld
das
mov
adc
vandps
jmp
or
popf
je
pusha
out
pop
xor
push
mov
xchg
sub
ror
xlat
pop
mov
or
jae
(bad)
int3
stos
icebp
mov
call
imul
retf
pop
or
fdiv
jnp
cmp
das
xchg
mov
repz
or
push
movs
pop
jmp
leave
into
je
xchg
in
adc
push
inc
retf
retf
fisubr
popa
ret
xchg
sub
in
sahf
sbb
inc
xchg
jecxz
adc
add
jl
xchg
or
add
daa
mov
cmc
addr16
add
or
in
das
xchg
mov
mov
jle
cmp
cmp
(bad)
jl
sub
into
rol
dec
inc
jl
add
pop
fcomip
clc
add
sbb
shl
cmps
xor
cmc
in
xchg
sub
pushf
out
pop
mov
sbb
movs
pop
or
mov
add
and
lods
add
inc
sub
out
push
sub
add
js
add
pop
cmp
outs
mov
inc
(bad)
cli
sbb
xchg
inc
inc
(bad)
in
sub
shl
push
ds
pushf
out
nop
mov
into
inc
mov
xchg
dec
mov
push
into
push
arpl
movs
jmp
inc
push
cmp
mov
(bad)
add
and
leave
pop
add
dec
mov
and
sti
mov
pushf
mov
and
jmp
dec
pushf
sbb
int
pop
push
and
jae
or
jnp
gs
mov
xchg
inc
popf
retf
push
pop
push
jmp
leave
sahf
aas
push
jg
stos
mov
xchg
xor
mov
dec
pop
push
adc
jge
(bad)
scas
rcl
cli
nop
loope
imul
inc
pushf
cmp
jmp
mov
in
cmp
dec
xchg
je
daa
fs
fiadd
sub
jmp
or
sub
lahf
pusha
iret
sbb
call
mov
out
xor
and
jmp
cmp
and
sbb
cmps
mov
push
xor
adc
and
pop
jns
push
fdecstp
sbb
dec
pusha
sbb
stos
bound
fwait
pop
lahf
pop
shl
xchg
scas
push
push
loope
rcl
jae
fmul
jno
outs
adc
xchg
push
jg
inc
lock
int3
xchg
in
pop
cmps
push
(bad)
sbb
jnp
test
add
test
imul
sbb
test
mov
cmc
aam
or
mov
and
jmp
push
icebp
or
dec
dec
dec
sub
aam
inc
pop
inc
inc
fimul
lods
jo
fidivr
jne
enter
loop
rcr
jne
icebp
lock
jecxz
push
int3
pop
xor
enter
shl
call
and
pop
daa
add
mov
(bad)
ja
and
sbb
int
add
ficom
push
test
sub
(bad)
mov
pop
cli
imul
jne
xchg
hlt
push
daa
icebp
call
fisttp
inc
(bad)
or
mov
sbb
xor
add
fidivr
lahf
or
(bad)
xchg
sahf
lds
mov
fimul
cmps
push
int3
ror
jp
leave
hlt
dec
or
pop
xor
lock
dec
xchg
(bad)
int
aaa
mov
adc
xchg
xchg
jae
ret
xlat
mov
mov
mov
rcr
jnp
xchg
jmp
mov
jl
and
add
stos
mov
arpl
icebp
cmp
dec
sar
loopne
xor
or
outs
shl
xchg
fs
test
xchg
cmp
enter
mov
sbb
cmps
adc
sbb
mov
sbb
and
mov
imul
loopne
inc
push
repnz
movs
mov
push
int
out
cmc
mov
xor
xchg
test
stos
mov
jnp
inc
xor
xor
ficom
mov
push
and
repnz
ins
movs
(bad)
in
mov
mov
fwait
sub
push
add
fmul
movs
cld
add
inc
xlat
pop
jne
cmp
sbb
addr16
jae
mov
mov
push
pop
xchg
popf
loopne
xor
ret
cmps
test
mov
and
test
pop
in
stos
jp
cmp
cmp
test
dec
sbb
and
and
sbb
mov
loop
push
jns
popa
or
(bad)
jmp
xchg
jb
into
sbb
mov
mov
out
pop
push
pop
dec
adc
cli
movs
ret
and
idiv
and
and
add
pusha
or
push
cmp
mov
jns
ins
inc
out
mov
push
pop
int
jecxz
popw
lea
add
sbb
mov
xor
es
pop
mov
sub
mov
popf
mov
xor
dec
push
cdq
push
sahf
movs
push
and
icebp
(bad)
mov
gs
pop
xchg
mov
mov
stos
add
scas
sub
loopne
cmps
xchg
add
cdq
in
and
nop
mov
retf
xor
xchg
inc
fcmovu
or
jno
(bad)
fcmovnb
mov
xchg
outs
add
sub
(bad)
and
mov
das
mov
add
(bad)
ficom
daa
cmp
pop
aad
push
fwait
mov
stos
and
mov
ror
nop
test
inc
cld
pushf
repnz
cld
cld
into
jne
nop
imul
lds
xchg
xor
mov
or
lahf
mov
fs
push
xchg
cmp
cmp
push
sbb
mov
call
mov
cwde
clc
pop
out
xlat
sub
(bad)
out
mov
dec
inc
pop
or
xchg
push
and
js
sub
cwde
sub
addr16
xchg
aaa
adc
push
scas
dec
jo
mov
retf
loope
icebp
enter
cdq
mov
fmul
cmp
es
pop
cmp
dec
dec
xchg
jge
(bad)
loopne
std
retf
sub
aad
fcomp
dec
ror
push
sub
mov
and
sub
ret
enter
mov
das
fucomi
dec
xchg
xchg
push
inc
jbe
rcl
out
movs
fldcw
cli
mov
das
mov
ror
mov
push
(bad)
call
jbe
scas
movs
addr16
cwde
xchg
push
js
scas
xchg
push
mov
jg
stos
pop
cld
or
inc
inc
adc
inc
das
in
fld
push
lahf
fiadd
mov
push
pop
stc
ins
jl
inc
out
hlt
lods
int3
xchg
jns
loopne
adc
mov
test
inc
shr
sbb
xchg
mov
mov
add
movs
ss
in
(bad)
jmp
push
(bad)
jle
rol
xor
or
aas
into
adc
mov
addr16
(bad)
imul
mov
fiadd
in
xchg
xchg
scas
push
sbb
pop
lods
push
test
or
mov
iret
dec
out
aam
add
or
repnz
(bad)
ins
ds
jle
mov
pusha
into
(bad)
sub
jnp
cli
inc
nop
mov
out
stos
jns
xchg
pmaxub
push
adc
scas
das
xchg
sub
jp
mov
cli
fsubrp
jne
outs
inc
jecxz
out
mov
add
mov
lahf
scas
adc
push
popa
inc
jne
sub
je
test
les
loop
ins
add
movs
ins
fistp
add
inc
lock
loopne
xchg
jbe
je
mov
cmps
and
mov
scas
jle
imul
cmp
inc
push
aad
mov
shl
lods
scas
cwde
not
cli
jp
inc
push
and
fbld
push
xor
mov
push
mov
mov
(bad)
rcr
clc
scas
ret
add
and
rcl
push
ins
popf
xchg
push
adc
(bad)
sub
cmp
jns
sbb
sub
jne
jno
hlt
inc
jae
inc
fsubr
dec
nop
mov
jmp
and
jge
out
pop
inc
in
dec
and
fcomp
and
mov
cmp
push
cmc
cs
iret
rol
xchg
sbb
or
push
jmp
and
cdq
(bad)
push
fiadd
pop
test
dec
push
jge
jne
xchg
mov
and
jecxz
rol
stc
outs
adc
xchg
lds
push
scas
sub
je
xchg
in
jae
dec
pop
(bad)
ffreep
in
or
jo
xchg
lea
jns
cmps
ds
jp
or
push
jmp
add
js
adc
dec
inc
in
push
xor
jae
jle
add
repnz
add
cli
jge
or
jmp
dec
push
adc
xor
dec
sbb
int3
fisub
sbb
xor
pop
xchg
fs
cmp
mov
push
rol
lods
cwde
cmps
dec
mov
xchg
sub
das
push
test
mov
sbb
dec
sub
mov
dec
addr16
fimul
fnstcw
mov
xor
push
sub
aas
mov
dec
and
cli
out
mov
pop
je
dec
and
ss
sbb
retf
pop
in
jecxz
ret
jl
fbstp
push
call
mul
and
popa
sbb
cdq
call
pusha
push
retf
adc
aas
(bad)
je
std
xor
inc
std
lea
nop
popf
dec
ins
ds
loopne
fnstenv
loopne
icebp
inc
jmp
shl
mov
mov
mov
aaa
or
lds
adc
fwait
loopne
es
mov
sub
dec
ja
and
ds
or
fidiv
adc
gs
mov
xchg
push
or
push
std
inc
ficom
f2xm1
out
call
xor
or
ss
xor
xor
aam
adc
mov
ins
push
in
pop
xchg
mov
cmp
sub
test
xchg
je
ret
cmps
jmp
cmps
das
add
out
ds
pop
popa
cmps
movs
out
popa
ror
push
or
jae
arpl
sbb
retf
cmp
outs
mov
and
sub
sub
in
stos
in
cmp
mov
ss
aad
call
cwde
adc
cs
icebp
outs
cld
icebp
inc
cmp
pop
pop
add
sbb
or
or
add
lea
mov
idiv
sub
add
adc
pusha
pop
in
sub
sbb
ja
ins
push
fisubr
fistp
cmp
jecxz
out
stos
mov
and
xchg
nop
(bad)
jmp
imul
add
push
cmc
aam
loop
stos
je
es
jmp
jbe
ds
xchg
mov
ins
or
mov
add
pop
es
push
popf
(bad)
nop
fs
stc
mov
mov
inc
pop
popf
mov
xor
fld
cmp
(bad)
fst
fist
ucomiss
push
adc
test
jp
cli
xchg
pop
add
retf
(bad)
fisubr
shl
out
iret
add
test
call
push
cmp
repnz
jle
push
fsub
in
sub
mov
fld
sub
inc
mov
test
xchg
shl
nop
or
int3
out
dec
loop
lahf
(bad)
(bad)
aam
adc
xchg
push
lods
or
test
(bad)
cld
jne
lds
push
repnz
sbb
push
cmc
sahf
stc
mov
pop
inc
aam
lds
mov
dec
add
es
dec
xchg
inc
mov
ins
fndisi(8087
cld
scas
adc
inc
frstor
ja
addr16
pop
add
inc
retf
imul
push
aad
ret
add
push
imul
(bad)
and
fdivrp
cmp
mov
or
xor
int3
leave
jne
jmp
cmp
jecxz
cs
sar
imul
sub
scas
sahf
hlt
es
das
inc
dec
inc
cli
xchg
stc
aas
mov
retf
hlt
in
test
(bad)
sar
pop
jmp
enter
out
nop
imul
std
test
xor
cli
jmp
imul
into
xchg
fcomp
adc
mov
sub
dec
mov
in
jo
adc
das
pop
sub
xchg
mov
imul
sub
shl
sahf
inc
call
mov
mov
or
cmc
mov
jne
sub
iret
fcmovnu
std
and
mov
push
mov
inc
loope
sub
mov
int
push
jmp
xchg
test
pop
or
fiadd
test
fyl2xp1
lods
push
sub
js
fs
push
pop
(bad)
fcmovb
xchg
jmp
loope
repnz
add
lock
push
add
add
xchg
shr
sub
pop
gs
aad
fwait
mov
fcomp
fnstenv
int
pusha
movs
call
nop
fcmovb
out
ins
fcom
sub
shl
stc
xor
mov
and
mov
cmp
rcr
pop
out
jne
push
push
xor
adc
lds
xchg
adc
das
pop
and
xchg
aas
adc
lock
xchg
in
push
es
pop
les
addr16
int
pop
out
push
aaa
cld
mov
sub
push
add
stos
add
shl
inc
cmp
cmp
and
pandn
rcr
leavew
inc
stos
fcomp
push
rcl
sub
mov
add
or
js
push
sti
pop
dec
mov
test
dec
xchg
pop
aam
daa
inc
mov
outs
push
inc
rcr
out
fiadd
jmp
sub
push
lea
lea
xor
cdq
pop
mov
stos
add
int3
sbb
repz
test
xor
dec
or
mov
or
jl
and
popf
mov
cdq
fimul
xor
jmp
and
enter
dec
fistp
cmp
jg
sbb
sbb
push
add
ret
dec
aas
ret
enter
scas
jne
sbb
jmp
adc
inc
jnp
out
and
sub
rol
push
outs
jo
mov
mov
xchg
out
movs
retf
jae
ret
jne
push
xor
or
mov
in
or
call
repz
mov
leave
push
call
inc
pop
sbb
mov
push
pusha
jp
dec
cmc
sbb
and
mov
pop
xchg
stc
js
xor
in
or
push
sub
and
mov
pop
pop
jg
outs
jge
aas
jae
out
mov
mov
cmp
scas
mov
stos
inc
mov
(bad)
push
leave
ret
sub
fisubr
push
jae
xchg
jecxz
push
mov
fisubr
add
inc
jg
pushf
js
je
pop
je
cmp
lock
int
inc
mov
mov
fidiv
add
jae
xor
shl
retf
das
inc
mov
rcr
xor
rol
inc
loope
es
cmp
sbb
xor
sub
dec
push
out
les
(bad)
mov
(bad)
retf
mov
(bad)
stc
dec
push
cs
sub
out
and
adc
jle
(bad)
sub
aam
xchg
and
mov
pushw
mov
popf
jmp
mov
dec
out
add
or
jns
sahf
push
sbb
pop
in
xlat
jns
adc
sbb
cli
fdiv
repnz
xchg
jp
sti
ins
out
lods
mov
dec
sbb
retf
imul
push
adc
enter
dec
xchg
mov
test
add
mov
add
xchg
xor
(bad)
jns
cmp
add
call
adc
mov
stos
test
or
fdivr
fsub
push
pusha
sbb
enter
hlt
xor
cli
cmps
mov
pop
add
cld
mov
movs
and
mov
in
jmp
into
in
mov
adc
cmp
xor
mov
lods
cmps
enter
jmp
sti
je
das
cmp
jb
out
jbe
test
and
dec
jae
leave
mov
mov
lahf
adc
mov
xor
std
sbb
and
lods
imul
into
stos
outs
arpl
pushf
fldcw
movs
pusha
ret
inc
std
fldenv
sub
in
mov
mov
lods
(bad)
into
sbb
inc
lahf
jbe
sub
sbb
mov
enter
inc
(bad)
aas
jns
mov
or
not
cmps
mov
fnstenv
pop
mov
rol
mov
popf
or
cli
loop
loope
mov
sbb
fistp
les
push
test
iret
cli
cmp
in
dec
jo
add
mov
inc
fcmove
movs
(bad)
fcmovne
mov
push
retf
mov
push
cmps
stc
pop
clc
out
fwait
pop
fcmovnbe
push
add
xchg
popf
fsubr
icebp
xchg
fnstsw
xchg
push
jnp
jb
xchg
and
cmp
mul
pop
mov
dec
xor
arpl
push
mov
adc
inc
retf
dec
and
xchg
inc
in
loope
jmp
dec
aam
es
ss
push
lods
cmps
mov
js
or
xor
out
mov
jecxz
jno
or
cmc
das
cwde
push
dec
cs
or
std
adc
cmp
mov
mov
neg
nop
fmul
and
adc
stos
stos
jnp
out
push
stos
cmp
push
or
stos
push
shl
push
cmp
sar
movs
ins
xchg
mov
rol
out
and
jmp
cmp
sbb
test
dec
fmulp
ret
ret
cs
je
popa
xchg
rcpps
stc
ins
out
mov
fs
test
retf
xchg
mov
int3
stc
adc
or
test
and
add
into
lahf
mov
(bad)
test
ret
dec
jmp
cli
adc
cmp
(bad)
xchg
mov
scas
fistp
dec
pop
inc
xor
hlt
(bad)
js
push
icebp
cmp
div
test
std
ja
bound
mov
sbb
ds
fsubr
mov
retf
inc
inc
ret
mov
xor
push
movs
pop
inc
ins
mov
retf
push
mov
or
wrmsr
push
leave
xlat
lods
adc
clc
(bad)
mov
fisub
mov
mov
bound
mov
sbb
inc
mov
mov
fsubr
loopne
bound
pop
cmps
ds
in
cld
ret
sbb
cmp
mov
movs
cmps
xchg
sub
and
mov
mov
loope
jle
mov
gs
cmp
call
mov
xor
adc
inc
sub
lds
jnp
sbb
retf
push
jg
adc
jmp
(bad)
jle
or
mov
test
sub
cdq
xchg
pop
jae
sbb
mov
ins
cmp
or
pop
or
repz
pop
mov
pop
(bad)
loopne
pop
cmp
ror
xor
and
repz
retf
cmp
jbe
adc
jp
mov
push
arpl
shl
and
sbb
repz
shr
mov
jne
add
cmp
jg
and
jmp
ds
xor
sub
xchg
sar
push
sar
jmp
add
gs
sbb
fdiv
jae
scas
and
inc
in
movs
(bad)
pop
inc
in
in
adc
mov
pop
fdiv
inc
sahf
add
fistp
arpl
mov
xchg
xchg
(bad)
xchg
gs
les
pop
scas
addr16
pop
imul
mov
mov
fs
cmp
push
dec
or
movs
cdq
mov
jae
je
dec
sub
sub
sub
out
jg
std
sbb
call
and
sub
cmps
loopne
sub
mov
jp
xor
call
mov
es
dec
into
jmp
scas
cmp
push
push
push
pop
sbb
or
arpl
out
xor
ret
add
or
and
inc
cmp
xchg
push
xchg
or
daa
inc
adc
mov
mov
int
cli
add
pop
dec
sub
xchg
call
mul
lahf
dec
push
jb
mul
shl
adc
jl
sbb
push
dec
mov
pop
and
(bad)
xchg
std
pop
sahf
inc
jp
and
xor
or
or
and
add
add
addr16
jno
bound
add
inc
(bad)
fucom
add
mov
(bad)
js
add
push
lds
in
dec
(bad)
lock
ins
outs
shr
mov
cmps
mov
push
mov
cdq
enter
(bad)
cmp
or
push
adc
pop
dec
aas
adc
pop
movs
sub
std
jg
sbb
cmp
call
ficomp
push
mov
push
fisubr
js
fnstcw
rcl
jno
push
aam
sub
xor
and
je
mov
mov
dec
cdq
cmp
jnp
(bad)
jmp
sub
sub
(bad)
popa
jns
pop
sar
xor
or
int
aam
dec
and
pop
push
dec
dec
and
xchg
sub
xchg
cvttps2pi
cmp
test
push
rol
add
or
fdiv
fdivp
pop
jmp
cld
sar
js
fcom
pop
repnz
int3
call
mov
mov
std
iretw
dec
or
push
fwait
push
mov
adc
add
sbb
xor
in
sbb
dec
mov
xor
cmc
bound
or
sbb
inc
sbb
shl
xchg
jmp
pop
imul
mov
pop
lock
push
jg
out
loopne
mov
fbld
push
mov
hlt
cmp
(bad)
jnp
std
jb
stos
int3
inc
sub
jnp
sub
cmp
xor
pusha
leave
dec
jp
push
cdq
mov
inc
ins
in
xor
lds
in
rol
(bad)
shr
adc
sbb
lds
jg
add
(bad)
jmp
add
std
mov
jg
aam
(bad)
(bad)
xor
les
loop
in
mov
aad
stc
and
icebp
retf
fsub
arpl
aas
jnp
movs
mov
dec
mov
sub
dec
sbb
adc
sbb
inc
sar
add
repz
out
jg
idiv
push
cli
ret
add
lea
(bad)
sahf
add
rcl
jle
mov
or
push
and
jae
rol
jae
out
hlt
xchg
in
push
repnz
jnp
test
or
out
inc
popa
mov
arpl
pop
outs
sbb
(bad)
jle
pop
mov
mov
sbb
ja
call
pop
mov
enter
lods
inc
aas
cmp
pop
int
xor
lods
xor
fnsave
jbe
cli
add
(bad)
retf
inc
popf
data16
ins
mov
jmp
pop
or
ins
and
cmps
xchg
fwait
in
push
out
leave
cmp
xor
xchg
ret
cmp
mov
mov
push
imul
out
or
inc
cmps
sbb
sbb
xchg
jge
fisubr
clc
dec
idiv
cmp
dec
aaa
sbb
test
jl
jle
ret
push
xor
gs
dec
or
push
fimul
sub
jg
sub
mov
dec
cmp
inc
addr16
ins
sbb
out
inc
clc
out
(bad)
in
retf
enter
shl
xlat
jg
test
adc
fisttp
jbe
call
sar
and
repnz
popf
sbb
mov
adc
sub
shl
inc
mov
mov
test
hlt
sahf
mov
(bad)
(bad)
cwde
xor
into
ds
adc
push
nop
mov
push
sbb
jle
pop
cmp
cwde
sub
mov
outs
push
das
pop
cmps
int3
dec
xor
out
(bad)
sbb
repnz
call
iret
xor
xor
pop
sahf
retf
cwde
dec
or
sub
or
add
test
pusha
dec
stos
les
xchg
sub
gs
xor
xchg
lods
pop
xor
and
and
fdivr
mov
jns
bound
shr
sbb
inc
adc
test
sub
xchg
and
and
inc
int3
(bad)
mov
shl
fadd
xlat
push
dec
dec
ret
rcr
mov
addr16
inc
outs
pushf
rol
jp
(bad)
cmp
pop
pop
lds
cli
enter
mov
xchg
jl
push
out
mov
cmc
jb
cmp
mov
xchg
jle
daa
popf
stos
cmp
mov
std
out
xlat
inc
lahf
hlt
jbe
retf
cdq
je
cmc
jl
and
retf
fdivr
and
loope
sar
adc
pop
pop
sti
rcr
inc
ds
shl
cmp
pop
push
fwait
cmps
cmps
mov
xchg
adc
out
out
loop
jmp
gs
jne
rcl
sbb
stos
arpl
push
stc
sbb
or
rol
xor
adc
add
push
mov
sbb
loopne
sbb
out
scas
data16
or
mov
cmp
xor
jo
and
pusha
sbb
aam
dec
es
xchg
(bad)
in
repz
xchg
mov
mov
nop
push
xchg
imul
xor
aaa
xchg
fiadd
ret
mov
mov
clc
inc
outs
pop
sub
ds
push
pop
pop
xor
sub
std
mov
loopne
in
(bad)
dec
dec
test
xor
shl
add
outs
popf
mov
xor
imul
adc
or
(bad)
sbb
scas
sahf
inc
test
test
loop
fldcw
xchg
cmp
mov
icebp
jmp
shl
loopne
aas
jmp
cwde
pop
retf
dec
sbb
sti
ret
inc
sub
not
pusha
mov
ret
jg
sub
and
test
ins
add
fisttp
test
aas
pop
shr
add
push
imul
dec
ja
mov
mov
mov
sbb
adc
sbb
(bad)
cli
cld
cmp
add
aad
test
loope
ret
xchg
xor
shl
lock
mov
outs
gs
jne
mov
retf
mov
mov
addr16
dec
sahf
repz
popf
jbe
push
sub
xchg
pop
xchg
pop
pusha
fwait
call
stc
jle
fidivr
outs
(bad)
or
into
mov
sbb
sub
pop
push
mov
cmp
cmp
pop
sub
xor
xor
inc
cmp
or
stos
ja
inc
push
xchg
cdq
ficomp
sti
std
stos
or
in
adc
push
ret
fstp
loop
call
aas
mov
xor
pop
(bad)
cmp
pop
jge
test
adc
pop
(bad)
out
mov
clc
xchg
cmp
mov
sbb
inc
sub
(bad)
loope
jp
enter
sub
xor
fcomp
std
retf
in
push
sahf
data16
dec
(bad)
lock
jae
or
pusha
push
retf
or
add
fisub
loopne
and
sahf
dec
mov
jmp
and
inc
or
or
dec
shl
pop
bound
jbe
pusha
pop
repnz
cmp
shl
dec
xchg
mov
mov
cmp
aad
shl
movs
icebp
inc
push
jp
aam
mov
sbb
xchg
ret
ins
sbb
cmp
mov
popa
lods
outs
sbb
push
arpl
ins
and
fdivr
dec
lods
neg
rcr
ja
cdq
mov
das
cld
out
inc
das
sar
cmp
ins
add
sbb
inc
or
push
lds
jecxz
sbb
icebp
adc
in
mov
fwait
or
mov
add
mov
jb
inc
pushf
fwait
push
loope
pop
dec
mov
loop
call
pushf
inc
jb
scas
mov
inc
xor
mov
dec
jno
add
jp
movs
daa
mov
clc
jae
mov
dec
push
xchg
imul
jp
ror
sbb
or
retf
add
movs
push
or
and
mov
loope
les
hlt
sbb
and
jmp
sbb
push
ret
fisttp
push
cmc
(bad)
scas
call
rcl
jmp
fdivr
push
cli
sbb
jp
out
pop
sub
arpl
jne
push
mov
or
in
icebp
and
mov
dec
xchg
lock
lods
popa
sbb
ja
pop
fwait
enter
ins
repnz
(bad)
lahf
repnz
ret
(bad)
and
xchg
add
push
ret
xor
sbb
mov
push
repz
sbb
test
mov
popa
sub
or
popf
sub
(bad)
scas
fs
in
pop
pop
pop
fs
xchg
iret
jnp
in
cwde
adc
loopne
(bad)
mov
ret
push
push
add
mov
push
mov
stos
rol
mov
mov
push
arpl
fisttp
rcr
cwde
outs
sbb
ss
in
add
out
dec
pop
cmc
pop
mov
pushf
out
and
xchg
call
mov
hlt
ret
pop
cmps
sub
data16
in
push
xchg
lock
xchg
rcl
jb
lods
cmc
or
ror
std
in
test
xor
jbe
push
and
mov
cmc
aad
or
cld
sbb
ret
rcl
jo
mov
test
push
cli
mov
sbb
mov
fimul
lods
retf
jmp
jl
pop
sub
jb
es
push
mov
mov
mov
add
jne
xchg
aas
cmc
movs
xor
dec
mov
jg
popf
and
xor
push
add
adc
lods
sub
sub
push
adc
mov
cwde
mov
xor
rcr
loop
sbb
sub
inc
and
or
ds
fidivr
cmp
ja
arpl
cmp
ja
(bad)
xor
mov
(bad)
dec
arpl
push
test
loopne
leave
(bad)
leave
pop
push
test
jmp
push
mov
sbb
repz
mov
lock
movs
retf
je
inc
mov
pop
sub
jne
pop
data16
xchg
lock
sbb
(bad)
xchg
js
(bad)
jl
sar
retf
or
ret
test
adc
mov
sub
mov
jecxz
mov
int
push
das
jne
jns
inc
leave
bswap
hlt
or
mov
or
fdiv
cmp
daa
jp
xor
push
inc
adc
lock
(bad)
ror
pop
push
push
pop
xchg
aas
mov
repz
repz
push
cmp
jae
nop
lea
pop
rcr
cmp
inc
cmps
je
shl
mov
cwde
(bad)
in
scas
push
fsubr
push
pop
aaa
push
icebp
xchg
enter
rcr
xchg
pop
lea
jnp
mov
jge
push
jle
aad
stos
xor
inc
dec
pushf
pop
add
call
repz
inc
sbb
sbb
xchg
xor
and
jg
mov
movs
int
or
cld
xor
enter
push
mov
push
push
and
adc
test
(bad)
mov
pop
ins
pop
add
mov
adc
std
cwde
cs
repz
imul
(bad)
xor
mov
test
leave
jmp
in
or
outs
js
cmp
aaa
jge
xchg
add
pop
enter
jp
and
pusha
rol
imul
xchg
scas
xlat
xchg
cmp
xchg
rcr
movs
fcomip
test
mov
jmp
test
sub
pop
xlat
lock
sti
pop
and
xchg
cmp
and
push
std
ins
ins
sbb
xchg
jb
sbb
test
gs
fisttp
sub
add
jl
jge
in
(bad)
imul
push
clc
cmp
shl
mov
sub
test
xchg
mov
push
cmp
ins
fs
mov
xor
pop
aam
and
jnp
mov
mov
pop
lds
mov
sub
int3
fs
jmp
imul
mov
fadd
add
test
add
ds
fisub
inc
pop
fiadd
push
adc
fidiv
aas
fistp
adc
mov
and
mov
mov
lods
das
cmp
push
rol
mov
(bad)
aaa
jecxz
adc
inc
push
movs
pop
out
retf
dec
inc
mov
fstcw
and
xchg
iret
add
inc
sub
rol
dec
(bad)
das
cld
add
xchg
sti
push
jbe
pushf
jecxz
ror
add
jo
push
push
pop
xchg
push
cmp
leave
xlat
popf
pop
xlat
hlt
les
mov
inc
inc
xor
adc
out
or
adc
xor
mov
bound
pop
add
popf
or
outs
cmp
mov
loop
or
jno
int
mov
pop
lods
jg
dec
outs
(bad)
dec
test
das
sar
ret
imul
jmp
pop
and
xchg
ins
aam
daa
fmul
dec
lds
sti
lods
jecxz
je
rcr
cmp
jb
xchg
pusha
or
mov
test
movs
gs
mov
ret
out
ja
inc
push
inc
cs
repnz
mov
int
xchg
dec
repz
in
lahf
(bad)
out
stos
jmp
repnz
mov
imul
add
adc
or
movs
loop
xchg
and
and
sub
lock
dec
xchg
(bad)
dec
stc
cmp
mov
mov
or
and
shr
sbb
and
pop
dec
aaa
cld
mov
push
mov
xchg
dec
mov
cmp
pop
pop
mov
ins
adc
push
cli
or
xor
fisub
push
ds
out
mov
and
int
jbe
cmp
rcl
xchg
retf
push
jno
add
inc
ror
int
out
cmp
js
loopne
pusha
cmp
and
frstor
pop
mov
inc
push
add
or
adc
int
xor
inc
and
lods
je
pop
aad
loop
cld
inc
mov
jge
les
cmc
movs
xlat
popf
or
fimul
rol
enter
movs
cmp
out
sbb
retf
push
push
and
cmp
xchg
mov
inc
xor
mov
jo
xor
(bad)
fst
test
or
pop
mov
pop
fbld
pusha
das
sub
dec
iret
add
cmps
adc
jne
pop
sahf
xchg
lods
adc
pop
fist
scas
pusha
add
sbb
or
ja
pop
out
ret
jns
push
add
jmp
popa
inc
out
dec
push
rep
js
fcom
scas
pusha
jbe
les
out
xchg
cmp
jl
aas
scas
cmp
dec
sub
add
xchg
aad
mov
js
mov
(bad)
mov
adc
dec
dec
popf
ds
(bad)
cs
call
imul
bound
add
adc
mov
jl
add
cli
mov
pop
cmp
dec
mov
(bad)
imul
dec
fsubr
(bad)
(bad)
add
mov
pop
sub
cmp
(bad)
xlat
adc
pop
xor
dec
inc
push
add
scas
fdivr
mov
jp
into
xor
sbb
fnsave
repz
cmp
aaa
jmp
iret
out
push
xor
sbb
pop
jmp
jg
aam
pop
addr16
nop
jbe
xor
cmc
jb
and
ret
ins
jns
cmp
mov
adc
outs
jmp
cmp
xor
mov
cdq
sbb
pushf
xchg
add
cli
sbb
xchg
in
rol
bound
xor
stc
sbb
push
push
xchg
or
test
mov
add
dec
mov
adc
sahf
shl
cdq
shr
jl
dec
pop
les
outs
stos
fsubrp
pop
xor
push
push
push
movs
out
inc
mov
fld
jmp
mov
dec
push
mov
jno
scas
sub
fstp
pop
xor
jp
pop
xchg
jae
mov
aad
call
(bad)
clc
sbb
or
xchg
sbb
push
fbstp
jl
xchg
mov
call
cmp
mov
mov
es
jle
imul
rcl
cmp
cmp
mov
ret
sub
push
adc
sbb
lock
or
mov
xor
fnsave
ins
fnstcw
lods
mov
sbb
xchg
gs
shr
jnp
mov
ins
sub
aam
mov
dec
sti
mov
xchg
data16
and
neg
fdiv
ret
pop
adc
lods
xchg
push
jne
cmps
mov
fwait
cmp
mov
bound
sub
das
cwde
push
mov
push
out
mov
rep
dec
xadd
sub
push
and
pop
loopne
mov
or
inc
jns
fcmove
aad
adc
mov
push
out
xchg
popa
mov
lods
push
mov
mov
in
pop
cmp
fcmovbe
push
paddb
fdivr
xchg
stos
or
xor
scas
ret
test
and
or
(bad)
and
jne
cli
push
inc
aaa
jge
push
adc
cdq
pop
cmc
int
icebp
mov
and
jbe
lea
add
pushf
or
xchg
xor
pushf
and
ret
out
fild
repnz
pop
push
or
jns
scas
enter
jmp
rol
(bad)
mov
add
lds
addr16
xchg
xor
and
jnp
ins
jno
clc
inc
cmc
pop
retf
jp
mov
popf
out
jecxz
pop
mov
int
call
pop
jge
loop
dec
jle
je
add
ret
mov
lods
in
mov
aas
(bad)
dec
push
out
scas
icebp
int3
sti
add
daa
inc
push
mov
(bad)
jns
inc
dec
loope
aad
pop
rol
out
xchg
cmp
pop
mov
sahf
push
cmp
cmp
iret
push
aas
or
cmp
sub
pop
push
or
pop
sbb
imul
mov
mov
iret
xchg
(bad)
cs
fisttp
retf
ret
sub
jmp
mov
(bad)
in
sub
fistp
xor
jmp
push
sbb
xchg
mov
dec
(bad)
ret
xor
gs
mov
ss
cld
retf
mov
push
fcom
and
mov
out
ins
mov
dec
xor
icebp
push
or
std
popf
sub
mov
inc
add
xchg
mov
push
mov
xchg
pop
int3
xor
neg
ins
dec
sub
add
mov
jmp
fs
fild
cs
(bad)
retf
jo
out
fsubr
repnz
call
jbe
pop
fs
add
cmp
daa
cmc
loop
iret
ficom
jb
shl
adc
xor
mov
clc
cmp
in
add
dec
cld
icebp
mov
mov
enter
clc
inc
mov
sbb
shld
cwde
xor
push
test
iret
pusha
sub
test
push
call
mov
push
idiv
movs
fidiv
xchg
jg
adc
sub
test
sbb
jg
push
js
cld
stos
xchg
sub
test
cli
std
inc
inc
jne
push
jmp
fs
jmp
xchg
and
pop
xor
mov
pop
out
or
jb
(bad)
call
jo
or
icebp
add
in
mov
movs
jno
rcr
(bad)
shl
repz
push
sbb
dec
pop
cmp
fstp
ja
jb
into
mov
add
and
in
mov
mov
aas
pop
push
and
adc
add
jne
and
(bad)
cmp
inc
and
cwde
mov
mov
mov
hlt
fidivr
(bad)
sbb
sub
out
xor
fsub
pop
jg
dec
les
add
hlt
dec
scas
jecxz
xlat
push
adc
inc
xchg
push
(bad)
stc
std
inc
push
mov
repz
fs
in
call
dec
dec
and
addr16
fwait
adc
popf
mov
aaa
sar
sbb
scas
mov
cmp
add
sub
or
das
call
adc
outs
loop
inc
cli
call
or
inc
jno
mov
outs
pop
dec
push
jmp
cld
xchg
retf
cmps
imul
inc
mov
xor
mov
push
out
dec
lahf
(bad)
rol
(bad)
std
neg
not
sbb
fidivr
cmp
sbb
push
cmc
mov
push
inc
call
cmps
aaa
lods
ret
inc
neg
add
inc
mov
pop
sahf
pop
xlat
mov
or
jae
pop
pop
(bad)
outs
pop
push
lods
into
sbb
cmp
pop
dec
into
addr16
adc
scas
mov
retf
arpl
ret
mov
xchg
fdiv
and
pop
ret
mov
mov
popf
and
xor
dec
jge
sub
imul
imul
mov
mov
and
out
jbe
jb
ret
std
add
lods
xchg
inc
mov
fisubr
fidivr
push
inc
dec
aad
jo
push
dec
cmps
loopne
lods
xor
cwde
mov
mov
xchg
adc
mov
or
adc
add
jmp
pop
push
rol
xor
pop
pop
mov
jl
icebp
xchg
scas
dec
xor
jp
retf
(bad)
fcomp
daa
mov
retf
hlt
test
jge
ja
not
xchg
push
imul
retf
fild
test
rep
in
jo
cli
push
out
retf
add
les
psrld
pusha
out
sub
cmp
or
xchg
adc
retf
xchg
loop
in
mov
imul
jmp
enter
pop
mov
or
dec
js
mov
mov
xchg
test
jg
jnp
xor
ss
sub
jbe
leave
push
pop
daa
adc
xchg
ja
adc
xor
cmp
loope
cli
add
call
mov
icebp
add
imul
and
sbb
in
cmps
jbe
lds
lock
lock
fimul
sbb
sub
dec
cmp
add
test
push
das
and
(bad)
aas
add
adc
movs
repnz
dec
mov
(bad)
dec
leave
dec
std
or
mov
outs
mov
jbe
lock
inc
mov
lahf
pop
dec
lods
inc
dec
mov
outs
push
vxorps
fmul
rcr
adc
pop
lea
lock
dec
je
xlat
pop
add
cmp
cwde
push
arpl
inc
std
cwde
sbb
ins
pop
gs
push
mov
retf
pop
aaa
pop
dec
les
int
push
cmp
xor
es
dec
mov
clc
fadd
and
lock
daa
or
mov
add
mov
mov
ja
inc
jno
ds
in
mov
fs
cmp
inc
shl
push
rcl
sub
and
shl
add
test
int
imul
mov
ins
rcr
lea
sbb
jmp
mov
xor
cmp
pop
ss
sub
sub
mov
push
adc
mov
adc
pushf
xchg
nop
mov
push
mov
fwait
ror
push
push
test
cs
push
leave
imul
sbb
imul
popa
neg
mov
test
in
mov
sar
call
sbb
test
xor
mov
popa
lds
loopne
xchg
jb
mov
jmp
pop
(bad)
out
test
sub
xor
mov
lahf
pop
pop
ins
dec
jae
mov
sub
mov
call
xor
sub
pop
call
std
dec
shl
or
mov
mov
or
jl
pop
(bad)
jno
xchg
lock
pop
fistp
push
jo
imul
inc
out
inc
(bad)
das
cmp
mov
jne
push
jl
xchg
bound
or
out
or
push
sbb
lods
jg
push
xchg
inc
mov
cmp
or
jecxz
xchg
test
pop
add
fwait
pop
mov
call
pop
pop
into
out
inc
add
fistp
inc
mov
fiadd
bound
inc
mov
in
add
jne
scas
lea
retf
mov
mov
shr
jns
sub
adc
mov
xchg
cdq
fbld
inc
fwait
mov
pop
cmp
mov
imul
dec
xchg
les
sbb
or
push
scas
sub
pop
aam
push
jno
sti
xor
sub
mov
out
add
adc
(bad)
out
push
jb
shr
jp
cmc
xchg
xlat
pop
pusha
mov
xchg
or
lods
cmps
fild
mov
mov
jbe
stos
outs
mov
cmp
cli
aaa
mov
ret
int3
gs
xchg
fcmovnb
lahf
call
fcmovnu
shl
push
cmps
pop
dec
sbb
push
fs
xchg
call
xchg
mov
adc
das
fidiv
mov
add
bound
scas
xor
mov
cwde
and
xchg
in
out
idiv
mov
adc
inc
fist
adc
xchg
inc
sbb
ret
or
ret
movs
std
push
jl
fimul
pop
push
sbb
sbb
xor
jmp
aas
hlt
sti
in
inc
js
inc
sub
test
loop
cmp
sbb
lea
nop
aam
std
in
aas
stos
(bad)
mov
push
push
imul
cmp
xchg
mov
sar
adc
mov
jl
jp
inc
mov
jbe
leave
sti
adc
sbb
push
adc
repnz
dec
mov
sbb
lods
mov
xchg
sahf
inc
jmp
fs
mov
mov
mov
ds
loop
test
jg
jo
cmp
push
inc
push
push
or
lds
das
das
loopne
adc
adc
rcr
rcr
and
adc
mov
adc
mov
push
mov
leave
or
or
stos
pop
mov
scas
add
add
and
ret
imul
adc
mov
into
stos
pop
xchg
mov
pop
cmp
imul
dec
retf
xor
mov
outs
imul
ret
push
mov
sahf
ucomiss
int3
pop
leave
fld
jbe
mov
push
xchg
ss
stos
pop
mov
aas
push
loopne
mov
add
xchg
test
lea
mov
jb
and
scas
movd
lods
mov
out
aaa
or
movs
fadd
cld
xchg
push
add
pop
test
xor
adc
adc
mov
call
mov
retf
push
push
xchg
iret
sub
add
(bad)
pusha
lods
pop
dec
mov
jl
jns
int3
fwait
dec
ds
cli
loop
imul
test
add
js
(bad)
adc
ss
bound
push
cmc
jle
sub
enter
dec
push
and
xor
das
sbb
sub
and
xor
inc
cmps
aam
call
cmp
neg
ins
ret
and
gs
(bad)
repz
int3
pop
push
push
mov
sbb
aam
inc
mov
xchg
push
and
fidivr
xchg
mov
dec
mov
jns
lods
add
ds
mov
pop
or
std
xor
pop
xchg
enter
mov
test
or
loop
rcr
inc
daa
sub
dec
adc
sahf
adc
cmps
add
sahf
adc
sti
dec
ss
stc
test
mov
xchg
enter
movs
or
mov
ds
js
mov
jo
dec
sti
sti
aaa
(bad)
sbb
push
inc
enter
in
in
data16
xor
mov
loop
jnp
sub
rol
inc
push
inc
xor
inc
jp
sub
mov
ret
cmps
mov
push
xchg
push
popf
xor
xor
loope
imul
mov
xor
les
jl
inc
jmp
fldenv
xchg
push
test
out
add
outs
es
mov
test
jl
test
addr16
std
mov
mov
sub
(bad)
leave
or
ret
xchg
jle
pop
leave
add
pop
in
lea
sbb
loop
and
fstp
movs
jle
and
aam
dec
and
(bad)
aaa
fsubrp
dec
scas
mov
adc
inc
not
rcr
pop
stos
bound
and
pop
repnz
ret
shr
std
adc
push
dec
test
sbb
jl
fidiv
cmp
mov
(bad)
push
in
imul
add
mov
loopne
sbb
stos
mov
shl
mov
stc
in
push
mov
adc
mov
dec
mov
test
les
and
xor
clc
lods
mov
sub
cmp
sti
cmp
cmp
outs
cmp
adc
cdq
(bad)
xchg
mov
lods
hlt
retf
xor
sub
mov
iret
arpl
or
add
push
adc
jae
mov
mov
popf
mov
or
add
mov
push
dec
and
lea
call
pop
cmp
mov
aas
sub
bound
movs
popf
inc
popa
(bad)
(bad)
out
les
es
js
inc
in
test
mov
xchg
or
addr16
xchg
push
push
fild
arpl
adc
xor
mov
and
dec
into
xor
out
pop
adc
gs
retf
xor
fdiv
add
into
add
sub
icebp
dec
or
repnz
xchg
push
repz
repz
(bad)
jbe
xchg
mov
ret
je
rol
fsubp
and
dec
lock
jbe
test
sub
xchg
pcmpgtd
push
jecxz
(bad)
in
movs
hlt
sub
sub
ret
mov
jmp
fdiv
cli
adc
mov
or
stos
dec
ins
mov
push
fidivr
cmp
(bad)
jmp
mov
fisttp
mov
das
fild
mul
sbb
mov
jge
ja
push
retf
add
(bad)
icebp
cs
fcmovnbe
mov
ficomp
ror
xchg
or
outs
pop
mov
jl
push
or
fs
sub
and
mov
sbb
call
cmps
arpl
xchg
dec
pop
or
dec
cld
fs
and
jg
xchg
(bad)
arpl
cdq
shl
in
(bad)
and
inc
scas
xor
mov
sahf
cmp
adc
cmp
sub
mov
inc
jns
scas
jp
ret
lahf
inc
loop
stos
imul
mov
mov
xor
sahf
mov
clc
ror
ss
sti
retf
cdq
jnp
daa
xor
pop
adc
out
adc
and
in
xchg
dec
and
add
dec
sub
mov
inc
push
pushf
or
std
inc
stc
mov
jb
loope
mov
jne
sbb
pop
push
add
hlt
pop
hlt
pushf
mov
mov
sbb
or
movs
or
(bad)
mov
test
fidivr
or
stc
sbb
fisttp
out
mov
iret
imul
test
or
cmps
int
int3
xchg
ror
cmp
mov
test
inc
pop
rcr
shl
add
int
pop
in
mov
mov
mov
cmp
mov
in
stos
mov
mov
(bad)
pop
lods
fadd
cmp
retf
ds
and
bound
das
es
xchg
push
xchg
lea
clc
shl
enter
test
imul
mov
mov
ficomp
sub
popf
xchg
leave
inc
sub
xchg
pop
in
mov
test
outs
ds
push
or
out
push
xor
push
(bad)
sbb
hlt
sahf
scas
cmps
mov
push
lea
clc
scas
inc
ret
xchg
xor
hlt
lea
repnz
fs
daa
mov
call
mov
cmp
push
inc
scas
outs
and
enter
adc
and
dec
mov
ss
in
(bad)
stc
fisubr
call
test
ins
mov
cmc
pushf
or
and
mov
movs
lea
sar
test
sub
lods
repz
das
mov
(bad)
xlat
inc
pop
mov
pop
jecxz
or
xor
xchg
leave
push
test
cmp
adc
aaa
sbb
push
sbb
movs
mov
mov
mov
and
lds
aad
mov
mov
sbb
pop
and
mov
loope
jae
push
push
mov
push
iret
paddq
lods
fiadd
adc
sub
mov
push
js
jbe
inc
jecxz
mov
sbb
sub
lods
enter
pop
jo
lods
and
div
xor
pop
and
lahf
leave
lahf
inc
mov
cmp
imul
out
add
xor
pop
pop
mov
(bad)
jp
adc
or
mov
push
and
rcl
ds
mov
sbb
pushf
or
and
ins
shr
rcl
ss
fxch
mov
ins
mov
jo
inc
fsubr
test
xor
out
jmp
nop
movs
cwde
mov
fdiv
bound
cmp
inc
stos
push
and
pop
div
push
jp
mul
test
ins
xor
dec
mov
and
inc
iret
mov
out
pusha
push
jmp
test
scas
jne
sbb
repz
inc
cmp
adc
inc
shl
push
and
push
add
mov
(bad)
cmc
ins
(bad)
cmp
ret
pop
mov
les
aaa
cmp
dec
jb
mov
pop
xor
in
xlat
cwde
xlat
and
pop
xor
dec
xchg
xchg
or
fs
shl
adc
lea
jecxz
mov
dec
xor
scas
ror
ins
hlt
test
out
aad
je
js
xchg
les
pusha
aam
cdq
push
push
call
cmp
shl
(bad)
les
sub
jae
stos
dec
mov
sub
hlt
push
push
outs
addr16
jmp
jle
pusha
mov
add
(bad)
lds
test
enter
dec
ds
sar
loop
xor
shl
fld
repnz
pop
popa
mov
imul
dec
ja
sub
fcom
adc
pop
cmc
pop
pop
ret
adc
icebp
xor
jae
mov
mov
je
inc
xchg
into
or
ss
fistp
cmp
jnp
daa
push
je
sbb
xor
xchg
and
pop
cli
add
cld
inc
mov
daa
jae
imul
idiv
out
lock
sub
mov
inc
imul
(bad)
rcr
leave
in
xlat
or
sbb
shr
sti
add
out
in
xor
or
inc
cli
outs
shr
fdiv
or
lahf
retf
pop
jae
pop
adc
mov
stc
in
sbb
test
dec
es
(bad)
lea
jno
xchg
push
mov
bound
aaa
push
push
pop
lods
popa
mov
pusha
mov
out
lds
mov
pop
mov
cwde
mov
adc
loopne
call
xlat
mov
cmps
dec
jb
je
push
jno
xchg
adc
inc
mov
outs
pop
stos
call
data16
pusha
call
sub
mov
xor
mov
sti
sub
inc
fild
popa
lds
sar
and
fimul
neg
sbb
aam
sub
pop
cmp
fbld
adc
fild
mov
scas
cmps
movs
lahf
jnp
cwde
mov
inc
outs
pop
xchg
push
adc
adc
lock
jg
stc
ja
stc
push
call
lock
les
retf
pop
inc
or
aaa
int3
xchg
(bad)
fimul
and
xlat
or
cs
mov
sar
or
sbb
sub
inc
inc
dec
mov
mov
cmp
(bad)
sahf
sub
popa
lock
popa
dec
lea
into
lods
cmc
cmp
lahf
cs
pop
or
adc
sti
fs
in
test
mov
sbb
loope
(bad)
in
mov
or
mov
inc
repnz
stos
jg
lds
mov
cmp
and
daa
std
xchg
into
dec
and
rcr
mov
pusha
pop
inc
iret
movs
shl
pop
pop
push
mov
add
push
xchg
shr
sbb
out
leave
and
dec
mov
pop
dec
xchg
pusha
xchg
in
or
int
es
in
into
arpl
bound
daa
sar
sti
add
dec
sbb
sbb
std
and
cmps
lods
add
and
cdq
(bad)
sub
addr16
stos
out
mov
pusha
test
cmp
push
xchg
in
mov
inc
jnp
or
push
xchg
xchg
std
test
lea
cmps
test
jno
loope
add
jmp
adc
cwde
arpl
pop
repnz
or
mov
outs
bound
les
mov
sub
xchg
xor
xor
mov
or
leave
les
mov
test
dec
hlt
jmp
rcl
aaa
sbb
setne
push
ss
or
jmp
mov
aad
cmp
pop
jns
fsubr
or
shl
ret
cmps
jg
pop
test
sahf
icebp
adc
push
push
stos
jne
xchg
inc
(bad)
xor
jmp
repz
(bad)
sub
push
mov
pop
(bad)
jmp
mov
repnz
aam
sbb
loop
push
pop
out
lahf
std
aas
sub
sub
lahf
or
imul
add
retf
jmp
jg
cs
out
cmp
mov
lods
loopne
pop
jno
add
push
sbb
stos
xchg
stos
ror
movs
cmp
pop
xlat
jmp
into
inc
sub
mov
sbb
ret
or
and
mov
jge
out
(bad)
cli
xchg
mov
loope
pushf
scas
dec
xchg
sbb
mov
pop
(bad)
mov
mov
inc
pop
jecxz
jbe
shl
ret
and
sub
stc
test
cmp
inc
push
clc
into
and
sbb
pop
jo
add
cmp
push
dec
test
or
outs
iret
or
sar
adc
clc
xchg
js
in
shr
and
jae
mov
dec
iret
inc
fucomp
xlat
sbb
add
outs
shr
sub
mov
adc
jno
cmp
push
lea
pop
push
es
lods
mov
aad
jae
push
and
stos
or
movs
and
pop
push
inc
push
sbb
(bad)
push
push
div
bound
cmp
shl
mov
jbe
lea
xchg
mov
data16
ret
xchg
cld
retf
mov
adc
fiadd
xchg
cmps
call
adc
cmp
clc
or
xor
pop
or
sub
daa
adc
mov
mov
sbb
test
out
cmp
(bad)
pop
stos
xchg
push
pop
in
and
pusha
cmp
mov
push
pop
push
dec
mov
or
cmp
(bad)
mov
pop
dec
jnp
mov
js
imul
out
les
sbb
mov
into
out
jb
xor
dec
dec
or
push
and
bound
jp
inc
pop
dec
sti
mov
cmp
gs
js
int3
xor
outs
int
mov
or
pop
gs
data16
movd
shl
inc
ret
gs
mov
push
(bad)
(bad)
xchg
mov
push
ins
enter
movs
mov
pop
jmp
shl
and
mov
or
test
pand
daa
(bad)
and
sbb
out
sub
out
cwde
jo
(bad)
cmps
sbb
xchg
aas
call
cmp
push
sahf
or
push
mov
and
jl
dec
pusha
daa
jp
daa
sbb
retf
loop
test
push
outs
in
and
sbb
fdivr
jmp
push
fstp
mov
call
jp
cdq
pop
inc
cmp
dec
mov
retf
xchg
jecxz
stos
loopne
sub
dec
ret
mov
not
mov
cmp
ror
sub
jmp
xchg
jns
xchg
ins
push
loop
sub
jge
push
inc
popf
imul
sbb
and
xor
js
push
loope
pushf
inc
xor
inc
mov
fstp
mov
mov
adc
cmps
push
scas
mov
fisttp
push
pop
mov
add
xchg
or
pop
push
add
mov
imul
lods
icebp
setae
and
jle
jae
or
aaa
or
inc
call
outs
repz
fbld
xor
mov
int3
test
xchg
fdivr
movs
sbb
xchg
push
xchg
aad
fcmovu
inc
ret
mov
sti
repnz
cwde
lea
pusha
leave
inc
inc
pop
xchg
xor
mov
push
jo
pusha
(bad)
adc
dec
test
jle
dec
fmul
jne
fsubr
sbb
jno
arpl
mov
and
sahf
das
sbb
ror
adc
xlat
jmp
fbld
pop
dec
jp
jbe
das
add
popa
pop
cmp
mov
repnz
jns
inc
jmp
cdq
adc
loopne
mov
jmp
cwde
push
in
xchg
shl
test
repnz
pop
scas
or
push
pop
(bad)
out
idiv
pop
int3
push
lea
test
mov
adc
jns
in
mov
add
inc
scas
and
or
fadd
stos
xchg
jo
cld
cld
mov
mov
mov
lock
mov
repz
push
jg
mov
mov
mov
xchg
loope
cmp
inc
aam
dec
cmp
inc
je
pop
xchg
mov
int
pop
in
scas
add
shl
outs
mov
lods
xlat
dec
retw
dec
sub
jg
int3
or
fcom
mov
mov
sbb
pop
bnd
mov
cdq
mov
pop
in
sbb
jnp
and
push
test
retf
repnz
jmp
mov
adc
mov
ficom
jb
add
scas
sub
(bad)
cmc
je
adc
xchg
inc
rol
rep
mov
lods
cmp
fs
or
lock
cwde
enter
dec
popa
sbb
(bad)
sar
shr
test
fcom
xor
ja
ror
or
ja
in
addr16
scas
push
pmullw
sub
test
lods
pop
inc
push
jmp
je
inc
scas
mov
jbe
lods
dec
clc
daa
mov
mov
ret
test
outs
dec
sub
adc
mov
mov
in
sti
daa
mov
sbb
mov
or
test
adc
mov
dec
adc
cmp
mov
lds
sub
gs
sbb
adc
ins
stos
or
fwait
cmc
(bad)
xor
stc
ins
inc
cld
fwait
imul
jg
sbb
cmp
or
lods
retf
mov
mov
popa
(bad)
pop
push
fsubr
xor
retf
(bad)
xchg
jmp
lea
xchg
stos
mov
and
and
enter
or
cmp
push
dec
pop
dec
xchg
call
stos
sahf
mov
or
pop
bt
lods
cmp
pusha
push
cwde
lods
and
aas
xor
(bad)
aaa
jg
das
mov
xchg
pop
xlat
add
les
adc
lock
mov
hlt
mov
cmp
jg
je
cmp
(bad)
xchg
ja
movs
hlt
js
mov
push
cmp
push
dec
adc
mov
mov
jns
jbe
aam
push
test
push
and
gs
mov
stos
jo
or
pop
sub
mov
mov
test
adc
ins
adc
and
pusha
int
enter
addr16
popf
push
add
pushf
sub
add
inc
mov
retf
sbb
dec
fdiv
and
rcl
ss
ins
xor
dec
xchg
fistp
sbb
add
call
cmp
inc
mov
mov
outs
push
stc
mov
std
sbb
leave
je
ds
jmp
ficom
repnz
jne
aam
sahf
push
sub
pop
add
push
xchg
sti
movs
movs
xchg
enter
ret
adc
mov
push
xor
and
add
into
sbb
rcl
inc
sub
add
and
into
fdiv
pop
fidiv
enter
icebp
test
fidivr
aas
into
sbb
mov
repz
xchg
imul
cmp
adc
nop
jl
call
sub
sahf
enter
add
jmp
xlat
push
xchg
pop
jne
xor
inc
cmp
adc
in
mov
je
loopne
adc
out
push
mov
mov
cmc
fbld
pop
scas
in
test
rcr
cmp
in
jg
xchg
or
int
pop
mov
cmp
xor
adc
jp
and
sub
cmps
sahf
int3
pop
(bad)
inc
retf
mov
stos
dec
aad
push
push
jbe
ret
mov
add
dec
jmp
mov
jp
xchg
and
lea
pop
xchg
in
and
stos
leave
popa
mov
sub
add
enter
jne
mul
xchg
mov
and
and
enter
bound
mov
lea
in
push
add
mov
push
xchg
xchg
dec
jo
in
pop
test
js
dec
mov
aad
mov
(bad)
cmp
mov
mov
cs
aam
and
sub
mov
lock
pusha
mov
aas
sub
icebp
xlat
je
and
(bad)
dec
leave
lods
stos
mov
fidiv
sbb
push
xor
pop
push
ror
xor
sub
dec
pop
dec
dec
mov
and
or
sub
xor
in
retf
push
jnp
fwait
sahf
in
push
(bad)
mov
call
dec
scas
mov
(bad)
jns
in
std
push
add
xchg
jg
xchg
call
adc
xchg
stos
pushf
fadd
sbb
cmp
inc
lods
icebp
adc
push
adc
sbb
lods
std
xor
sbb
push
test
mul
pop
cld
adc
scas
cmp
mov
push
retf
dec
fcom
repnz
dec
cmp
test
mov
into
add
ja
fsubp
xor
retf
jg
(bad)
push
add
nop
inc
fs
scas
adc
pop
mov
cmps
fcomp
or
xor
push
ins
jl
pop
cld
adc
ins
cmp
push
and
out
xchg
retf
pop
jno
push
xor
fidiv
push
sti
(bad)
pop
lock
and
lds
xchg
dec
sbb
mov
jle
push
fs
jb
add
push
rol
dec
sub
xor
xchg
mov
xor
fnsave
sub
dec
sbb
cmps
sbb
sahf
jecxz
mov
scas
lock
popf
int
div
xchg
arpl
jnp
pop
inc
aam
jmp
ins
adc
or
sub
push
cmp
push
xchg
push
adc
pushf
aaa
pop
les
outs
jmp
and
fwait
inc
mov
mov
mov
mov
int
int3
adc
repz
mov
sub
push
or
cmp
sub
xor
xor
sub
mov
mov
mov
xchg
clc
inc
or
test
add
adc
test
leave
xor
jnp
leave
cli
xor
inc
and
or
inc
data16
(bad)
pushf
sti
and
ins
xor
adc
jb
cwde
and
ret
pop
pop
aas
push
pop
cmp
dec
push
xchg
aad
rcr
adc
out
xchg
scas
push
ins
dec
call
test
outs
(bad)
mov
outs
mov
in
or
cli
movs
movs
cmp
dec
dec
inc
xchg
ins
add
dec
scas
stos
push
inc
ret
and
loop
out
and
cmps
stc
fs
fidiv
xchg
sub
hlt
xor
sub
cmp
adc
mov
cmp
cs
ds
mov
adc
cmp
out
sub
popf
inc
xchg
in
xchg
cs
inc
cli
jbe
mov
call
call
std
inc
mov
mov
or
loope
mov
iret
retf
xchg
cdq
sbb
mov
mul
and
xor
sub
int3
(bad)
fldcw
add
imul
and
ins
ffreep
gs
icebp
fisubr
pop
fcomip
pop
or
and
mov
xor
(bad)
cmp
cli
xor
in
mov
rol
or
pop
test
aas
dec
cdq
and
fwait
xor
paddb
hlt
or
sbb
sbb
aad
retf
daa
movs
inc
mov
daa
and
jp
fnstcw
mul
or
mov
out
push
in
lods
or
add
scas
xchg
mov
jmp
and
sbb
and
sbb
dec
das
dec
test
gs
lock
je
sub
push
jge
lahf
daa
inc
adc
pop
and
jecxz
int3
jb
out
ja
mov
sbb
in
xor
loope
pushf
sub
je
inc
inc
xchg
adc
popa
outs
lods
or
imul
ror
and
jl
jmp
pusha
call
jnp
mov
xchg
aaa
arpl
lods
into
aam
aad
call
pop
dec
(bad)
mov
retf
jecxz
jg
jae
sub
sbb
push
les
pop
or
inc
(bad)
cli
stc
adc
test
inc
mov
xor
aas
ret
das
pushf
cmc
stos
jnp
lea
jle
movq
pop
pushf
xchg
xchg
outs
jne
sub
fdivr
jno
out
iret
mov
mul
or
repz
jge
cld
jp
in
jecxz
mov
pop
mov
repnz
ins
xor
pop
dec
cli
xchg
add
cmp
sbb
dec
lea
repz
fcom
add
fucomip
stc
jbe
movs
inc
cmovb
mov
repz
cmp
pop
ins
mov
ds
push
mov
icebp
pop
les
lods
clc
ss
or
sub
xor
xchg
dec
pop
or
call
hlt
pop
add
xchg
push
div
daa
fdivr
xor
pusha
in
enter
sbb
ins
daa
add
pusha
clc
data16
mov
ret
icebp
or
cdq
inc
xchg
sub
popf
aas
and
(bad)
and
(bad)
sbb
inc
adc
push
inc
call
mov
ja
sbb
adc
bound
sub
mov
sbb
mov
push
or
mov
pop
jge
mov
or
xor
js
mov
aaa
cli
xchg
and
iret
adc
ja
xchg
scas
rcl
xor
pop
aad
fdiv
mov
pushf
inc
inc
and
movs
and
inc
and
mov
add
cmp
pop
in
cmp
adc
adc
jp
jmp
xor
outs
idiv
sbb
out
outs
ret
stos
aam
pop
sahf
fisttp
es
xor
out
out
mov
dec
ret
sbb
sahf
sub
or
mov
movs
push
hlt
sub
mov
jg
lock
push
push
inc
mov
mov
pop
push
jmp
inc
out
lods
inc
mov
xchg
dec
arpl
mov
cdq
jg
mov
ret
jno
jne
sbb
pop
loope
int3
sbb
inc
jmp
loop
(bad)
mov
sbb
xchg
push
in
sub
xchg
or
jo
adc
outs
sbb
add
addr16
push
clc
fs
push
adc
inc
cmp
loopne
push
cmps
or
(bad)
push
push
pop
arpl
enter
jmp
pop
mov
leave
out
imul
jne
sbb
fstp
inc
int
test
xor
out
cmps
test
jmp
add
prefetch
pop
bound
jo
popa
call
and
mov
mov
out
cmp
lahf
nop
cmp
xchg
xchg
dec
jl
call
test
mov
xchg
cwde
int3
outs
or
nop
inc
pop
mov
xor
les
stos
xchg
xchg
lahf
mov
add
xchg
into
add
out
adc
xchg
mov
out
cmp
call
in
shr
jecxz
dec
data16
mov
out
sbb
mov
cwde
lods
pop
imul
fst
ficom
jb
ins
xor
neg
and
cmp
lods
movs
add
or
xchg
xor
fiadd
sub
and
js
xor
cs
and
push
stc
popf
sar
and
adc
or
xor
int
in
pop
mov
add
imul
mov
in
push
pop
(bad)
lock
test
iret
jnp
xchg
push
add
xchg
into
cmp
pop
sbb
popa
dec
or
sbb
es
pop
cmp
in
inc
je
and
cmps
js
pop
fld
ds
stos
dec
lea
mov
mov
adc
jmp
inc
sbb
adc
add
jge
enter
push
lds
test
mov
sbb
jmp
aam
mov
hlt
mov
cld
or
gs
mov
popf
pop
mov
fwait
test
xchg
jns
scas
outs
and
imul
adc
mov
nop
mov
movs
and
pop
push
arpl
popf
stos
data16
jae
(bad)
mov
add
lea
jp
cmp
or
pop
xor
cmp
xor
dec
mov
jbe
sbb
xor
push
push
enter
fisubr
int3
lods
adc
jmp
jle
dec
addr16
fsubr
jns
and
mov
retf
adc
sbb
adc
ror
fsqrt
mov
mov
aaa
add
push
pop
test
inc
xchg
addr16
sbb
icebp
(bad)
pop
pushf
inc
and
fmul
cmc
fwait
mov
scas
add
cwde
xor
(bad)
retf
scas
jns
test
(bad)
call
sub
push
xor
add
jmp
enter
push
xor
add
jae
inc
dec
or
mov
mov
pushf
xchg
sub
rcr
clc
jnp
pop
push
jne
ret
jecxz
fimul
movs
(bad)
sbb
push
jmp
frstor
and
pushf
or
mov
pop
mov
xchg
sti
adc
aad
(bad)
hlt
inc
mov
inc
shl
push
cmps
loope
leave
push
cmp
data16
addr16
in
mov
sbb
xchg
sub
dec
jge
jmp
jb
mov
test
mov
push
psubb
and
dec
fistp
mov
and
lds
jmp
add
out
pop
jno
fs
ret
je
cs
sbb
test
cmp
fldcw
leave
adc
ja
dec
call
adc
xchg
lods
retf
sbb
popf
addr16
idiv
xchg
cs
cs
push
push
sahf
aas
push
adc
es
mov
dec
xor
clc
xor
and
inc
mov
in
aas
push
out
sub
sar
jge
arpl
fdiv
mul
and
cmc
cmp
add
cmp
adc
inc
mov
xchg
dec
jmp
mov
sbb
ds
sub
(bad)
pusha
or
jo
cmp
sub
loopne
adc
and
fimul
mov
mov
jnp
pop
das
and
es
xchg
cmp
pop
out
test
push
repz
(bad)
xchg
xchg
out
cwde
jb
and
lods
inc
(bad)
mov
lods
xor
add
push
and
(bad)
mov
pushf
cmp
ins
push
not
mov
scas
shl
xor
add
push
adc
scas
sub
(bad)
adc
data16
dec
and
dec
push
pop
dec
sti
push
inc
outs
cmc
jle
jb
aam
dec
push
int3
lea
dec
aam
push
push
test
and
add
adc
in
pop
xor
mov
cld
call
push
ret
push
push
les
data16
fisubr
mov
add
ret
lds
push
adc
and
mov
fldenv
stc
(bad)
cmc
ins
sub
xchg
pop
or
xor
dec
jp
sbb
add
jns
in
iret
mov
clc
pop
out
lods
or
sbb
pop
mov
fdivr
call
shl
popf
lea
or
mov
push
cmp
mov
fidivr
loop
mov
sub
mov
ss
xor
test
adc
jl
hlt
lock
out
lods
jmp
ret
in
sub
fyl2xp1
mov
(bad)
sub
lods
jmp
sahf
pusha
add
jmp
pop
mov
sbb
add
cs
mov
mov
xor
sbb
ins
test
aam
mov
jmp
cmc
mov
lods
pop
xchg
sub
lods
add
xchg
mov
scas
jo
inc
jle
push
adc
std
out
call
sbb
inc
ss
dec
xor
inc
sbb
pop
(bad)
cli
cmp
inc
push
push
mov
rcl
js
jp
stos
cmp
icebp
pop
test
ret
loopne
hlt
sbb
fisub
pushfw
sti
ins
fsub
mov
outs
mov
shl
cmps
add
xor
pop
test
ins
sbb
dec
adc
pop
(bad)
not
mov
add
sbb
fcom
mov
iret
or
and
sbb
ins
sbb
xlat
rcl
and
das
gs
(bad)
fist
mov
scas
jmp
cmp
inc
inc
mov
mov
push
data16
lods
mov
or
fnsave
stos
mov
inc
mov
fs
inc
test
mov
aam
test
ret
cmp
cld
fs
cmps
sbb
dec
(bad)
div
scas
mov
fisttp
add
mov
scas
int
loope
das
mov
je
adc
jmp
and
fld
out
cli
sti
fisub
xor
ds
fidivr
daa
mov
and
mov
and
les
pop
(bad)
mov
pusha
(bad)
sti
add
or
add
push
dec
mov
inc
stos
xchg
jo
in
out
int
enter
mov
lahf
in
pop
fisub
dec
dec
pop
jmp
cmps
test
pop
mov
pop
in
scas
aam
rcr
das
in
pop
mov
js
dec
adc
jl
lock
and
es
ja
pop
mov
jmp
add
(bad)
frstor
mov
das
sbb
aam
and
pop
and
mov
xchg
jg
pop
sti
adc
push
das
ret
cs
mov
mov
imul
ins
or
mov
shr
cmp
ins
outs
lea
cmc
(bad)
xchg
call
(bad)
int3
aaa
fisttp
fmul
pop
popf
adc
out
mov
ins
call
add
pop
mov
les
xchg
into
ins
dec
(bad)
jmp
ror
pop
call
dec
daa
cs
(bad)
shr
test
fbstp
mov
jbe
cs
fst
xchg
xor
xchg
ss
icebp
loope
jo
mov
inc
or
mov
or
mov
mov
sbb
aas
sbb
imul
inc
pop
pop
jns
push
movs
mov
into
adc
repnz
pop
xor
les
mov
mov
push
arpl
cmp
loopne
shr
or
stos
cmp
jb
ret
cmp
and
sahf
lods
cmp
movs
das
push
xchg
inc
adc
pop
stc
jp
pop
inc
(bad)
out
sbb
popa
(bad)
int3
cmp
jo
lods
adc
mov
mov
cli
push
shr
(bad)
in
mov
mov
stos
add
cmps
mov
xor
scas
add
mov
std
and
clc
cmp
push
sub
xor
pusha
pop
xor
pop
repz
inc
cmp
jns
(bad)
cmc
clc
out
cmp
loope
bound
fwait
movs
mov
push
lods
add
scas
(bad)
retf
arpl
lock
ins
pushf
push
pop
mov
aas
out
repz
pop
xchg
(bad)
push
or
xchg
leave
imul
std
ds
adc
rcr
xchg
rol
sbb
ins
jmp
(bad)
call
cdq
adc
stc
test
mov
or
cdq
aad
fcmovu
mov
ror
and
cmps
lea
jnp
leave
xchg
push
mov
ja
sub
sar
int
jns
add
or
sub
aad
mov
repz
enter
mov
jle
mov
inc
lahf
test
rol
leave
push
outs
xchg
div
popa
jmp
pop
xchg
dec
(bad)
in
fbld
sar
gs
std
mov
into
in
das
pushf
fcom
cld
in
fisub
xor
clc
imul
jae
call
das
push
ret
rol
int
push
call
ficomp
xchg
jne
push
inc
or
not
inc
dec
xchg
ins
xor
cs
push
xor
push
fsub
ins
daa
mov
cmp
dec
call
outs
out
and
mov
sbb
in
sub
jecxz
or
retf
cmc
sub
sub
cli
stos
sub
test
xor
mov
sbb
fdiv
add
sar
stos
cwde
ret
push
call
and
lea
push
out
push
ins
aam
daa
mov
outs
pop
dec
cmp
lods
sbb
mov
push
std
les
in
jge
cmp
push
popf
and
xchg
fidiv
dec
loop
out
and
dec
sub
adc
push
lds
push
repnz
call
cmc
clc
fxsave
adc
mov
mov
inc
pop
scas
(bad)
adc
mov
xor
jnp
mov
sub
add
push
mov
test
loope
jl
mov
xchg
in
push
lea
jnp
adc
mov
rcr
cli
mov
xchg
mov
inc
dec
stos
adc
add
pusha
int
dec
jo
repz
and
and
push
in
mov
xor
pop
jmp
inc
jno
aam
dec
mov
and
and
arpl
movs
mov
jmp
mov
and
and
xor
inc
repz
fistp
and
fcmovnb
inc
fsub
je
jae
imul
pop
mov
jne
push
test
mov
mov
push
push
leave
sbb
fld
in
mov
and
inc
sti
xchg
dec
dec
iret
inc
test
adc
dec
sbb
cmps
sub
dec
adc
mov
data16
xchg
(bad)
in
jp
mov
call
data16
cmps
fld
ret
sbb
fs
in
movs
loopne
jmp
or
cmp
inc
movs
pop
and
xchg
shr
and
jle
inc
jnp
loopne
and
popa
or
cmc
adc
mov
cmp
xchg
mov
sahf
jmp
xchg
mov
jecxz
sti
and
xor
cmp
dec
outs
add
clc
aam
cmps
dec
pop
std
es
test
adc
xchg
jecxz
adc
cmp
inc
bound
and
(bad)
fwait
push
ret
pop
fmul
add
or
sti
xchg
add
rol
std
cmps
jge
aam
loope
mov
fisubr
jle
mov
push
pop
xchg
fucomip
lods
sbb
jg
cwde
pop
xchg
xchg
mov
rcr
dec
fsub
retf
and
cmp
dec
sti
loopne
fadd
pop
jo
lahf
imul
mov
cwde
aad
pop
inc
pop
mov
imul
stos
stos
cmp
(bad)
jmp
push
arpl
fisubr
je
fisub
repz
xor
xor
call
stos
mov
ins
push
sar
adc
jne
mov
fwait
in
sub
movs
or
imul
mov
mov
mov
push
test
push
mov
and
pushf
jns
imul
push
mov
xor
adc
xchg
or
inc
test
cli
add
pushf
out
je
aam
mov
ret
mov
push
ret
sub
xor
popf
pop
sub
scas
imul
loope
mov
xor
stos
xchg
jnp
xor
dec
mov
jo
xchg
aas
mov
mov
xchg
shr
sbb
mov
jg
ficom
jmp
mov
jns
(bad)
and
mov
cmp
ror
pop
fimul
(bad)
repnz
fst
xchg
xchg
call
les
cmps
sbb
mov
sbb
ja
cmp
repz
dec
ins
sahf
adc
in
cli
fchs
jnp
add
xor
dec
add
es
jno
sbb
xlat
and
fist
push
pop
(bad)
movs
movq
jne
shl
adc
mov
pop
cmp
popf
sbb
pop
fild
daa
add
sub
(bad)
outs
aad
lock
rol
popa
shl
cmps
mov
xor
xchg
inc
cmp
inc
xchg
jge
scas
pop
(bad)
push
push
sub
xchg
sub
test
xchg
or
sub
xlat
stos
or
mov
mov
push
sub
pop
pop
ss
and
lahf
mov
faddp
xchg
dec
push
(bad)
int3
es
loope
test
lahf
mov
xchg
shr
mov
cwde
int3
xchg
dec
mov
pop
(bad)
xchg
mov
mov
mov
xor
adc
pop
ins
mov
inc
rol
mov
mov
enter
adc
lock
cdq
mov
mov
jecxz
pop
sti
outs
sub
scas
data16
fs
(bad)
addr16
jl
mov
cmp
loopne
test
(bad)
call
(bad)
mov
mov
pop
xor
xchg
mov
cmp
mov
adc
dec
dec
adc
xchg
scas
aaa
div
adc
adc
inc
pop
cmp
xor
or
int3
in
ds
int
inc
bnd
(bad)
(bad)
xchg
and
push
sub
test
cwde
fistp
sub
sbb
scas
ror
scas
int3
scas
mov
jl
xchg
arpl
xchg
scas
dec
(bad)
xor
outs
loop
inc
xchg
push
add
add
mov
mov
mov
xchg
rol
jns
aaa
dec
xchg
cdq
adc
sbb
cmps
call
mov
inc
xchg
int
pop
adc
call
rcr
jo
hlt
int
call
and
or
add
ror
inc
mov
arpl
ja
xlat
(bad)
stos
fidiv
jbe
enter
in
adc
mov
push
mov
push
ror
rcr
hlt
mov
lahf
repz
jecxz
pop
sub
ins
adc
and
inc
call
test
(bad)
(bad)
jge
ss
xchg
xchg
adc
dec
xor
sbb
dec
mov
ins
push
or
ret
xchg
mov
lds
adc
xchg
mov
pop
inc
mov
xor
cmp
fldcw
sbb
sti
mov
sbb
cmps
push
ds
shl
int
jno
or
or
mov
stos
dec
fadd
scas
ja
push
(bad)
push
out
dec
mov
xlat
(bad)
adc
dec
sbb
imul
stc
push
pop
and
mov
sti
jnp
xor
jmp
sar
cmp
pop
les
jecxz
or
cmps
rol
inc
dec
inc
adc
and
ret
and
xor
js
adc
out
pop
and
retf
or
inc
mov
or
mov
cmps
pop
stos
xor
adc
jp
or
retf
xor
xor
or
fstp
xchg
and
jno
pop
xor
sbb
add
lds
cmp
push
js
push
jle
jecxz
xchg
xchg
mov
jmp
push
add
mov
(bad)
xor
mov
and
inc
in
loop
and
mov
addr16
push
jno
dec
xor
xchg
adc
or
in
outs
add
dec
fwait
push
pop
inc
lds
dec
push
out
adc
(bad)
adc
test
pop
mov
test
(bad)
movs
aaa
cmp
scas
push
mov
in
rcl
adc
push
ja
dec
dec
mov
and
inc
ror
imul
stos
sbb
xchg
daa
xchg
jnp
out
inc
adc
in
arpl
sbb
mov
leave
xor
in
stc
ins
in
sub
shl
cmp
std
test
mov
popf
aad
cdq
pop
jne
arpl
fiadd
mov
popf
push
jecxz
in
ret
push
mov
or
inc
(bad)
sub
cli
mov
std
mov
dec
mov
sbb
pop
cmp
mov
xor
(bad)
arpl
into
shl
pop
fstp
movs
imul
cwde
pop
mov
mov
mov
stc
hlt
mov
cs
push
xor
popf
mov
or
enter
sub
push
xchg
mov
icebp
mov
std
pop
frstor
inc
stos
out
jne
outs
retf
mov
mov
pop
(bad)
sti
stos
popa
push
cdq
dec
sti
push
and
add
ret
cld
shr
dec
jae
jo
sti
int
push
icebp
call
adc
push
inc
or
and
add
je
sbb
in
mov
das
mov
in
mov
loope
push
adc
call
pop
mov
cli
in
inc
lods
cs
ins
dec
fmul
mov
sar
inc
repz
js
mov
imul
imul
jp
test
pop
in
xbegin
mov
add
imul
sub
jp
jne
push
enter
mov
fld
lods
mov
sti
cmp
pusha
xor
pop
das
jmp
mov
fsub
xchg
inc
nop
in
pop
das
sub
push
sbb
retf
mov
repnz
inc
repnz
or
sti
fimul
cwde
jbe
out
fs
pop
mov
cmp
mov
aas
mov
rol
cmp
aaa
xchg
aaa
in
(bad)
fwait
cmp
loope
(bad)
mov
out
mov
push
add
sbb
test
fisttp
aaa
shl
mov
dec
mov
(bad)
xchg
ret
push
cli
pusha
arpl
sbb
cs
dec
jo
idiv
cld
imul
jbe
lea
(bad)
push
cmp
and
lods
or
fdiv
jnp
jnp
in
xchg
jb
outs
mov
cmp
fs
push
fmul
dec
pop
sub
aad
test
lods
dec
stc
ins
std
cmc
(bad)
mov
dec
or
dec
add
les
xor
jns
je
or
rcr
adc
push
ret
hlt
out
mov
inc
xchg
sbb
data16
in
mov
bound
in
pop
out
(bad)
fdivr
jg
mov
test
xchg
sbb
stos
loope
jnp
mov
ins
jmp
(bad)
rcl
ins
in
and
clc
mov
fcmovne
xor
out
adc
mov
xor
ins
loope
xor
mov
mov
out
mov
daa
(bad)
aam
dec
mov
xor
(bad)
jns
fs
shr
mov
lds
push
adc
frstor
jg
add
lahf
sbb
or
mov
sbb
jle
push
push
xchg
sbb
cs
dec
mov
sti
mov
es
push
test
pop
cwde
aad
dec
cdq
cdq
imul
pusha
aam
dec
cmp
shr
mov
mov
jmp
cmp
push
scas
dec
loopne
and
outs
lock
jns
jmp
mov
out
inc
scas
(bad)
and
retf
mov
dec
pop
mov
xor
jns
pmaxub
or
pop
xchg
mov
arpl
out
cwde
or
and
repnz
movs
sbb
push
xor
dec
out
cmp
nop
jg
movs
jnp
inc
push
mov
(bad)
mov
data16
jo
rol
cdq
push
in
movs
mov
mov
sbb
in
and
or
repnz
add
jb
ror
stc
fidiv
(bad)
xchg
mov
inc
or
sar
bnd
cmp
cdq
dec
mul
rcl
pusha
popf
dec
sub
mov
xchg
xchg
idiv
mov
stc
mov
loope
outs
add
into
mov
pop
pop
inc
js
xor
dec
adc
mov
movs
inc
add
push
iret
mov
test
mov
inc
fisubr
add
mov
enter
sbb
test
push
and
mov
cld
fwait
jae
arpl
jne
cmp
xchg
(bad)
cmp
data16
fcom
adc
rcl
daa
cmp
icebp
enter
pop
inc
ja
mov
inc
rep
add
xlat
mov
es
pop
iret
fisubr
lahf
sar
cmp
sahf
adc
(bad)
mov
out
imul
sub
sub
in
and
js
mov
jnp
cli
ffreep
sbb
repnz
jp
rol
cli
push
cld
inc
mov
(bad)
mov
mov
pop
cmp
add
std
mov
adc
ffree
inc
xchg
jns
iret
inc
(bad)
cmps
mov
xor
popf
cmp
lock
cmps
xchg
loope
xor
and
push
(bad)
mov
or
sbb
xor
push
dec
xor
lahf
inc
and
xor
ins
sbb
mov
xchg
sbb
adc
sub
jmp
(bad)
jb
cmp
fs
jle
xchg
xchg
movs
outs
or
push
jle
(bad)
mul
cmp
popa
int
push
push
adc
cli
cmp
jmp
adc
fist
lea
in
or
pushf
int3
jns
fstp
leave
and
xchg
add
fnsave
fs
push
aaa
test
les
test
ja
or
lods
(bad)
jae
dec
mov
or
pop
jge
fiadd
fwait
mov
jg
retf
cmp
push
mov
lea
inc
sub
add
xchg
rol
(bad)
push
cmp
xchg
or
mov
cld
pop
jle
mov
popa
fisubr
push
(bad)
fsubrp
pop
addr16
in
mov
xlat
leave
xchg
loopne
mov
fstp
test
frstor
popf
mov
stos
jno
dec
dec
cwde
rcl
or
test
or
cmp
aaa
or
or
and
fidivr
mov
stos
dec
and
inc
scas
jmp
pop
outs
cwde
out
jo
(bad)
dec
dec
add
push
push
or
outs
ror
sub
imul
push
lahf
sbb
xchg
dec
sbb
xor
out
fisubr
mov
shl
fld
js
cmp
mov
and
xlat
sub
mov
scas
mov
cmp
out
cmp
cld
punpckldq
data16
push
mov
and
push
or
out
int
aam
mov
outs
add
mov
jne
jmp
enter
xchg
mov
xchg
neg
(bad)
jmp
rcpps
mov
cmp
out
jg
fscale
mov
loopne
ins
add
push
xlat
xchg
cmps
test
mov
mov
or
and
bound
jo
movs
cdq
loopne
leave
aad
cdq
pop
nop
scas
dec
in
cmp
stos
jmp
lods
fsubp
inc
loop
test
stos
pop
add
imul
add
xlat
add
out
pop
cmp
addr16
into
adc
adc
data16
int
aad
or
jno
mov
outs
jbe
and
inc
jb
jno
mov
xor
std
cmc
retf
mov
jno
push
fstp
sbb
inc
stos
mov
cdq
cmp
loope
add
mov
pop
jp
lds
cmp
aas
inc
xor
lods
ret
and
or
enter
cmp
dec
push
add
(bad)
daa
cli
int
jmp
into
out
xor
mov
test
movs
jecxz
je
and
fs
push
sbb
jnp
jmp
add
int3
clc
inc
ret
shl
mov
add
mov
xor
xor
je
loop
mov
mov
sbb
pop
cld
and
jl
mov
mov
or
aam
pop
mov
cmps
retf
out
movs
adc
mov
and
mov
outs
cmp
clc
(bad)
iret
push
imul
repz
out
cmp
and
bound
pop
mov
cmp
and
jl
iret
fstp
cdq
(bad)
or
imul
sbb
adc
out
push
rol
clc
xor
jl
cdq
mov
aam
(bad)
jle
add
mov
xchg
in
lods
inc
adc
mov
jb
mov
mov
out
not
jmp
mov
mov
dec
jb
ins
cmp
imul
pusha
out
push
mov
push
loopne
aaa
movs
(bad)
setno
cld
cld
mov
stc
outs
out
repnz
loopne
mov
sahf
or
call
cmp
popf
xor
push
dec
push
jecxz
mov
mov
dec
imul
in
push
cld
fadd
out
jmp
aas
rcr
xlat
retf
xchg
add
mov
cmps
loop
pop
sti
cli
xchg
xchg
inc
mov
mov
loope
mov
in
sub
push
mov
dec
or
add
fabs
cwde
push
in
dec
setne
jae
push
rcr
rcr
aad
dec
scas
mov
push
dec
pop
mov
arpl
inc
in
add
repnz
sar
fdivr
loopne
inc
sub
fst
mov
dec
call
not
call
sbb
pop
or
in
adc
pop
jmp
cmp
sahf
jns
fdivr
or
arpl
cmp
repnz
or
and
pusha
popa
mov
fwait
rcr
es
fldenv
mov
stos
fbld
dec
xor
sahf
mov
mov
and
into
(bad)
aam
push
int
movs
and
mov
or
vpmulhw
mov
sub
fstp
mov
jle
hlt
leave
loop
push
cmp
mov
sbb
sbb
xor
push
or
adc
dec
jb
daa
jg
adc
cs
push
xchg
push
and
repz
(bad)
les
push
shl
outs
pop
out
adc
inc
enter
add
cmp
pusha
arpl
xor
push
das
cmps
mov
mov
imul
stos
push
mov
lods
cmp
stos
inc
shr
jmp
mov
dec
(bad)
cwde
std
ins
stc
add
push
mov
mov
pusha
addr16
cwde
not
add
and
push
jg
sub
mov
sbb
sub
(bad)
push
mov
cmp
pop
aas
dec
jge
repz
mov
(bad)
mov
or
or
inc
dec
iret
xor
cmp
fmul
adc
cmp
jl
push
and
shl
jb
cli
inc
stos
jno
out
rcl
popf
int3
adc
or
movs
pop
iret
mov
int3
and
imul
cmps
scas
test
jae
repz
or
xchg
add
sub
mov
pop
dec
out
stos
bound
test
adc
bound
mov
jp
cmp
dec
test
ret
and
cmp
test
mov
mov
mov
sbb
sahf
push
sbb
ret
pop
(bad)
sar
shr
es
repnz
imul
(bad)
push
xor
cld
lahf
int3
lahf
xchg
mov
cld
sub
mov
dec
jmp
btc
pop
outs
jmp
mov
leave
mov
xor
jp
or
(bad)
fcom
stos
xor
push
inc
stc
(bad)
mov
sub
push
dec
stos
inc
in
inc
lock
pusha
repz
pop
push
icebp
xchg
jle
ror
icebp
xor
nop
pop
js
div
mov
mov
xchg
push
mov
repnz
push
inc
jbe
push
and
movs
pop
adc
enter
enter
pop
idiv
loop
mov
movs
xchg
dec
ficom
je
inc
inc
jno
and
cmp
jecxz
push
pop
add
call
pop
xchg
add
sahf
or
fistp
sti
and
jno
jbe
sub
mov
repnz
mov
outs
mov
adc
imul
test
cmc
sbb
sbb
retf
xor
xchg
clc
cwde
dec
(bad)
stc
and
or
int
sbb
pop
cmp
pop
cmp
test
loope
enter
(bad)
iret
(bad)
push
mov
iret
dec
push
test
pop
pop
popa
sub
or
xlat
repnz
not
mov
cmc
mov
fs
add
push
mov
jl
lock
xchg
sbb
cmp
addr16
repz
mov
or
lods
push
mov
cwde
cmp
into
arpl
mov
push
push
inc
sbb
or
sbb
jmp
lahf
mov
dec
jge
shl
fistp
arpl
mov
or
push
inc
mov
push
sti
push
out
xchg
adc
pusha
xchg
rcr
test
add
mov
std
jmp
fcom
pushf
mov
dec
into
movs
push
or
pop
mov
or
rol
lods
adc
loop
or
test
mov
jle
xor
cli
pop
iret
gs
or
sbb
dec
pop
push
mov
(bad)
loopne
xlat
push
dec
sub
call
or
in
fucomi
pop
cli
adc
nop
(bad)
cdq
pop
mov
pusha
add
mov
or
push
shl
mov
scas
push
xchg
mov
aad
dec
lahf
loopne
cld
daa
xchg
sysexit
cmp
sbb
sar
fdiv
retf
sar
inc
cmp
xlat
jne
xchg
int3
mov
imul
mov
dec
and
ins
cli
mov
bound
ss
add
mov
mov
push
je
pusha
xlat
mov
test
pop
rcr
(bad)
sbb
scas
jl
cld
xchg
inc
push
mov
retf
push
xchg
pop
mov
(bad)
hlt
push
enter
test
sar
sbb
outs
(bad)
add
or
mov
cdq
sub
cld
dec
and
mov
aas
or
pop
fstp
adc
mov
pop
test
cld
pop
and
pop
loop
or
ss
jge
icebp
cmp
cmp
loopne
into
das
cmp
push
mov
push
xor
or
aam
inc
sub
jno
loopne
or
inc
adc
lahf
aaa
fcomp
inc
in
fiadd
cmps
loope
retf
jbe
imul
cdq
clc
inc
loope
xor
pop
ret
enter
aaa
sub
repz
shl
les
sbb
mul
add
or
enter
add
dec
scas
mov
mov
std
jle
jae
outs
adc
mov
push
loop
aaa
or
mov
imul
and
ins
xchg
loop
jge
movs
xchg
mov
cmp
fmul
out
inc
add
adc
sti
push
imul
mov
push
cld
or
mov
adc
cmp
cmps
fldln2
pop
in
(bad)
mov
inc
jp
retf
pop
movs
push
xor
mov
xchg
mov
dec
mov
or
test
out
cdq
sbb
clc
jmp
pop
inc
ins
sub
inc
mov
cli
fcom
fst
cdq
jno
push
add
xor
repz
inc
test
shr
out
ret
mov
test
push
jmp
stc
mov
inc
xchg
lock
or
adc
test
leave
mov
jns
pop
adc
mov
mov
xchg
ja
out
lods
mov
mov
repnz
movs
sub
push
call
out
jmp
xchg
test
inc
cmp
addr16
jp
lods
imul
jle
fld
retf
pushw
cld
into
push
push
stos
sbb
jmp
pop
(bad)
sti
jmp
dec
mov
std
lahf
jg
mov
inc
cmps
dec
add
lea
and
leave
mov
mov
out
mov
in
fidivr
mov
jae
cld
movs
cmp
mov
fdiv
rcl
push
dec
jl
loope
cmp
imul
pop
mov
pop
and
(bad)
aad
(bad)
outs
push
fiadd
push
int
inc
ror
jae
ss
mov
jno
or
xchg
cdq
lods
jmp
bound
jg
ds
mov
and
xor
js
jbe
push
stos
jbe
mov
imul
cld
inc
movs
jmp
pop
inc
push
not
add
repz
lock
pop
div
and
pop
data16
es
push
pop
or
push
sbb
out
dec
fild
into
xchg
pop
cmp
mov
ret
push
je
mov
pushf
and
inc
push
fistp
jmp
in
sbb
test
imul
pop
mov
inc
adc
test
sub
push
jno
pop
sbb
dec
cld
pop
xchg
inc
daa
xchg
push
pushf
fwait
aad
cmp
out
popf
fild
dec
push
sbb
int3
cmp
xchg
pop
scas
cli
es
push
hlt
inc
imul
aas
imul
ret
and
lea
fcomp
fisubr
mov
outs
sbb
ss
xor
jbe
pop
pushw
ffreep
jg
ins
pop
or
aas
imul
mov
(bad)
ds
add
(bad)
cmp
jge
jb
dec
(bad)
(bad)
push
xchg
arpl
inc
cmp
cmp
int3
js
push
leave
mov
jecxz
(bad)
add
or
iret
aas
xchg
jns
jge
cmps
loop
pop
repnz
dec
mov
push
jbe
or
pop
xchg
push
push
fidiv
bound
mov
ja
jge
loop
pop
mov
inc
inc
jo
inc
mov
push
dec
cmp
(bad)
cmc
mov
push
push
fnstsw
push
lock
adc
push
mov
xchg
jle
cmc
push
jae
out
and
jmp
clc
sub
mov
ror
inc
aam
lidtd
mov
scas
xor
xchg
fidivr
fnsave
push
mov
gs
call
int3
jmp
jmp
ins
ret
inc
adc
jmp
jns
call
cmp
adc
rsqrtps
and
mul
ret
and
mov
mov
ret
mov
fstp
loopne
loop
ja
cmp
into
mov
push
rol
scas
mov
xchg
or
xchg
fistp
dec
inc
cdq
les
pop
push
inc
fs
adc
inc
into
inc
test
add
je
push
and
mov
mov
int
clc
sbb
sbb
fst
fs
aam
cmps
daa
or
or
mov
mov
inc
xchg
je
pushf
jl
sbb
cwde
dec
(bad)
xor
repz
sar
cld
scas
je
sbb
pop
in
ins
pusha
or
jg
sub
mov
mov
out
inc
std
lahf
adc
push
(bad)
cmps
xor
call
aad
mov
xchg
test
pop
sahf
imul
mov
mov
gs
je
sub
add
cs
mul
sbb
test
add
pusha
pop
xor
jmp
outs
sbb
push
popa
out
push
cmp
(bad)
inc
int3
jo
mov
in
mov
ss
mov
stc
xor
pop
mov
or
mov
movs
and
rcl
push
adc
mov
cmc
popf
scas
inc
fstp
ror
aas
adc
and
rep
popf
ret
fwait
loop
dec
xlat
add
call
scas
fisttp
sar
mov
int
std
dec
div
mov
outs
jmp
adc
dec
mov
cs
jns
sbb
or
xchg
outs
stos
inc
lods
dec
jecxz
push
scas
clc
aas
xchg
cwde
push
jmp
jmp
mov
in
mov
dec
push
adc
clc
cwde
sbb
and
hlt
aad
xor
and
js
mov
mov
jae
mov
inc
cmps
jmp
ins
jmp
dec
fdivp
cmp
loop
adc
jl
pop
loopne
jb
pop
(bad)
push
jns
cli
cmp
xlat
outs
ins
es
sub
xchg
mov
aas
dec
mov
jmp
int3
and
mov
mov
loop
out
(bad)
and
adc
pop
mov
adc
gs
sbb
and
fs
mov
aas
cmps
cmp
mul
or
sahf
jmp
mov
pusha
inc
pop
test
not
ja
add
popa
in
fbstp
fimul
cmp
sbb
mov
daa
mov
mov
xchg
push
dec
mov
pop
ret
mov
retf
push
stos
call
lahf
mov
add
push
mov
mov
leave
lea
in
stos
add
addr16
fdiv
mov
inc
iret
in
mov
mov
hlt
pop
mov
icebp
(bad)
(bad)
push
arpl
nop
pop
xlat
cdq
jl
mov
sti
or
mov
scas
mov
call
adc
jge
sysenter
test
xlat
mov
adc
sbb
sub
jmp
test
mov
aam
sbb
push
(bad)
jl
xlat
iret
daa
ror
call
xor
fwait
shl
or
xor
push
inc
jge
or
mov
data16
pop
(bad)
xor
xchg
adc
scas
lods
ret
int
mov
in
add
cmps
mov
dec
out
mov
nop
arpl
sbb
es
jmp
retf
xchg
fldpi
ins
cmp
ror
jo
xchg
repnz
ss
xor
std
dec
inc
add
sbb
adc
jns
xchg
nop
xor
adc
js
or
outs
push
xchg
pusha
jnp
mov
lods
and
es
and
std
dec
jno
ds
nop
jno
xor
repnz
dec
and
ins
mov
and
adc
inc
and
fnstcw
push
xchg
cwde
or
fsubr
icebp
jno
mov
sub
add
sub
je
inc
ret
cmp
arpl
dec
lahf
jge
push
pop
fadd
fnstcw
lds
stc
mov
mov
aad
adc
sub
sti
push
sub
jge
movs
aaa
cs
add
dec
pop
xor
mov
jge
pop
jmp
leave
fnsave
cmc
xchg
out
ds
lahf
rcl
paddsw
test
adc
ja
cwde
jmp
or
sbb
push
in
inc
xor
sbb
xchg
in
sbb
sub
and
xchg
push
or
mov
jae
or
test
mov
lahf
and
mov
xor
in
sub
pop
jnp
stc
sub
daa
ins
add
push
lea
jnp
hlt
jecxz
and
or
dec
adc
aaa
in
rcl
rcl
popa
(bad)
iret
pop
jmp
es
(bad)
jbe
por
loop
ins
js
add
test
stc
mov
aam
sbb
test
adc
stos
or
inc
dec
repnz
fnstenv
dec
sbb
jg
movs
jmp
mov
xchg
xchg
jle
cld
xor
popa
sbb
adc
test
data16
pop
mul
cmc
lock
push
stos
dec
fidivr
lock
loope
sub
fdivr
sub
adc
pop
dec
and
xor
lock
mov
dec
imul
mov
xchg
xchg
pop
pop
inc
nop
daa
fsub
cli
pop
sub
adc
ret
sbb
xchg
pop
ss
mov
jp
dec
jnp
(bad)
js
or
or
mov
or
movs
ins
in
adc
or
ja
fisub
xchg
sub
mov
xchg
mov
or
jmp
aas
or
pop
pop
jl
fidiv
inc
test
cmc
mov
pusha
imul
dec
jle
mov
jb
cli
sub
mov
ja
mov
rol
adc
arpl
rol
(bad)
sub
into
sub
sub
mov
fst
icebp
sbb
or
push
mov
dec
cs
mov
lods
adc
addr16
adc
addr16
mov
and
xlat
mov
mov
fstp
aas
fimul
repnz
dec
ror
call
jecxz
push
mov
test
xor
imul
das
sub
scas
clc
daa
test
mov
inc
cmp
fst
in
fld
xchg
pop
mov
or
push
clc
pop
mov
mov
pop
leave
pop
pop
and
rol
add
inc
sar
sub
scas
mov
clc
sahf
jns
cmps
and
adc
movs
sbb
cld
(bad)
inc
mov
out
xchg
call
ror
add
lds
mov
mul
mov
sub
fcom
xchg
cmps
dec
adc
jp
retf
mov
mov
(bad)
xor
dec
cmp
int3
jns
jmp
push
dec
jnp
or
pop
mov
jle
imul
pop
sbb
jbe
mov
mov
pop
mov
popa
dec
push
int3
or
pusha
daa
es
cli
lds
mov
mov
pop
sub
das
xchg
sub
int3
adc
pop
neg
add
dec
outs
jge
das
push
fimul
sar
mov
pop
sub
aaa
push
sub
call
push
push
(bad)
(bad)
inc
xor
push
mov
mov
or
adc
push
ins
cmc
xchg
mov
xchg
jle
mov
jbe
enter
inc
das
cmp
js
mov
(bad)
xor
and
call
add
cli
mov
mov
dec
in
push
data16
fcomp
jl
xchg
push
std
cmp
lea
leave
inc
xor
add
mov
inc
inc
inc
mov
ins
sub
mov
enter
add
into
dec
movs
mov
inc
not
push
add
(bad)
jno
cmp
(bad)
dec
dec
std
iret
retf
and
enter
rcl
xchg
dec
mov
shr
in
enter
mov
or
add
ds
jo
jnp
data16
dec
rcr
push
pusha
cmp
lock
fnstenv
add
inc
adc
add
xor
push
add
pop
rcl
out
scas
sub
inc
dec
cmp
mov
cmp
dec
push
sbb
xor
dec
mov
test
xlat
inc
cmp
rol
shl
lock
xor
imul
pop
jnp
stos
sub
mov
retf
and
add
ret
jb
add
inc
add
inc
mov
retf
and
mov
clc
aas
sbb
xor
cmp
mov
cs
add
jge
popf
mov
inc
dec
xchg
sbb
dec
pusha
loope
std
cli
scas
mov
pop
push
mov
call
pop
(bad)
ret
sti
mov
xchg
adc
retf
repnz
shl
mov
popa
mov
push
push
or
mov
out
adc
shr
push
aas
xchg
and
test
lods
rcr
mov
mov
mov
dec
sti
sub
or
movs
xlat
and
popa
add
out
sbb
out
and
xchg
and
int3
fisttp
jmp
mov
or
jns
fsubrp
cmc
pop
inc
pop
aad
xchg
cmp
fcos
or
es
adc
jae
fdiv
fwait
xor
sub
in
sub
into
call
sar
add
fnstenv
(bad)
adc
xchg
jmp
cs
mov
mov
jge
popw
xchg
mov
push
std
in
pusha
jbe
add
fwait
jnp
xlat
mov
mov
cmp
pop
xchg
test
xor
xchg
inc
add
out
cmp
or
xor
pop
jns
xchg
out
mov
aaa
pop
bnd
pop
push
loopne
nop
les
push
ret
lods
and
xchg
xor
mov
mov
movs
test
xchg
sbb
xor
sbb
pop
mov
mov
add
cmp
sub
add
pusha
(bad)
sub
push
test
idiv
cmp
idiv
xor
xchg
sbb
xlat
mov
mov
scas
mov
pop
repz
pop
scas
call
leave
push
sub
add
inc
test
dec
movhlps
cmp
ror
aam
mov
in
mov
mov
push
fwait
pop
ins
retf
xor
sub
ret
inc
xor
imul
cmps
adc
pop
rcl
lods
dec
rcr
cmp
dec
or
jns
jp
dec
sar
jp
stc
(bad)
addr16
pop
jns
cdq
jmp
je
inc
jle
imul
or
dec
ss
xchg
scas
pop
cld
inc
sbb
nop
pop
jno
(bad)
mov
push
and
cmp
jg
cdq
fsubr
cmps
mov
fmulp
push
cmp
inc
xchg
aad
adc
jb
aas
cmps
loope
adc
xor
jg
push
movs
inc
ret
cmp
adc
pop
adc
lods
sbb
mov
in
mov
mov
inc
gs
mov
test
cmp
cmc
mov
mov
or
call
fisub
fisub
mov
mov
popf
push
inc
mov
daa
dec
cli
inc
add
outs
leave
cmp
xchg
loop
aaa
in
in
lock
mov
jecxz
scas
lods
out
test
dec
std
neg
repnz
rcr
dec
je
and
icebp
sub
clc
out
das
mov
call
stos
xchg
mov
push
movs
ins
add
sbb
sbb
loopne
(bad)
mov
inc
mov
(bad)
cmp
rol
lock
push
or
stos
shr
repz
jle
inc
inc
push
nop
loopne
test
mov
push
dec
dec
mov
lahf
mov
jnp
stos
jnp
inc
sub
fstp
mov
and
ja
mov
test
sti
dec
mov
pushf
jmp
loopne
jmp
and
xlat
fst
sbb
push
dec
aad
or
sub
dec
jae
push
movs
jb
loop
cmp
sbb
mov
jg
pop
sbb
mov
out
into
sar
adc
or
in
jnp
or
hlt
call
enter
jne
pop
mov
pop
pop
adc
std
add
aaa
call
xor
jb
xchg
push
cli
popa
(bad)
movs
jb
repz
ror
or
xchg
jmp
(bad)
xor
clc
lahf
mov
dec
std
pop
(bad)
call
push
out
movs
std
xor
and
test
in
or
add
lea
sbb
imul
jl
push
xchg
scas
xchg
jge
xor
(bad)
lds
mov
ds
pop
not
dec
jo
cmp
ds
xchg
arpl
xchg
inc
enter
(bad)
xor
cs
sub
fidivr
out
and
mov
pop
mov
xor
mov
jmp
push
xchg
push
outs
mov
cwde
pushf
ds
sahf
jnp
daa
js
lods
enter
jnp
movs
in
push
lods
imul
rcl
jmp
pushf
into
leave
ds
imul
push
shl
ror
and
inc
cmps
std
pop
cdq
add
mov
ja
pusha
xchg
out
cmp
loop
(bad)
sbb
shr
aad
dec
sub
mov
inc
outs
sbb
lahf
ja
imul
add
sbb
mov
and
out
xor
outs
fs
push
not
sbb
in
xchg
jbe
(bad)
loope
mov
arpl
pop
mov
jns
jle
test
mov
inc
arpl
jns
mov
xor
pop
ins
bswap
int
mov
mov
iret
push
popf
xor
inc
cli
stos
mov
shl
add
bound
(bad)
icebp
cmp
add
ficom
fild
js
xchg
int3
rcl
sbb
shr
inc
push
in
xchg
repz
addr16
adc
push
arpl
jns
or
mov
jl
adc
test
ficomp
add
pop
daa
xchg
(bad)
and
push
cmp
das
sahf
jno
pop
(bad)
push
sub
fisttp
mov
lock
sbb
xor
loopne
inc
sbb
adc
mov
dec
rcl
cmp
in
aam
fisub
fcom
in
test
xor
mov
std
dec
or
jo
cs
sahf
mov
mov
stc
adc
in
mov
inc
mov
repnz
mov
lds
mov
sbb
push
pop
jne
add
leave
(bad)
rcl
inc
int
pop
fmul
mov
retf
add
xchg
jb
ds
es
sub
call
aad
fst
cs
fnstsw
dec
fisubr
(bad)
in
pop
dec
xchg
cmovp
jae
aad
or
push
xchg
mov
scas
outs
js
or
retf
and
in
or
mov
call
mul
dec
adc
gs
pusha
add
das
test
enter
xchg
mov
and
mov
cmp
mov
jp
test
or
jg
adc
xchg
or
mov
js
outs
cld
test
push
outs
lods
nop
push
out
inc
pushf
hlt
hlt
push
mov
adc
vxorps
push
out
push
xor
mov
mov
add
mov
inc
ja
stos
mov
movs
ds
arpl
jae
xor
rcr
mov
cld
into
test
mov
mov
mov
dec
adc
cmps
adc
xlat
aas
push
mov
outs
lea
out
add
adc
pop
repz
ficom
cmp
aam
xor
shl
jnp
(bad)
imul
pushf
adc
add
jns
jg
push
cld
loopne
inc
fist
push
jo
clc
jae
add
xor
into
dec
or
cwde
pop
loopne
mov
test
lock
push
inc
(bad)
int
dec
rcl
mov
clc
mov
mov
add
add
mov
shl
(bad)
adc
and
cs
pusha
loop
jle
cmp
mov
loopne
inc
ficom
bound
mov
es
ds
add
outs
fisttp
repz
dec
or
iret
call
jno
inc
(bad)
add
mov
adc
mov
sbb
and
adc
shl
cmp
xchg
lods
cmps
in
pop
sbb
das
jns
lods
fs
clc
daa
sub
sub
dec
mov
dec
pop
shl
movs
nop
xchg
idiv
mov
div
sbb
xchg
(bad)
cld
pop
pushf
repz
cdq
push
aaa
inc
int
mov
out
(bad)
enter
adc
jo
sbb
jns
cmp
xchg
pop
jnp
ins
movs
adc
imul
test
popa
ins
dec
xchg
out
xor
mov
jecxz
xor
mov
pop
pop
int3
jb
daa
fisub
add
and
cmps
adc
std
or
cmp
and
in
and
nop
sub
loop
and
xchg
dec
xchg
add
push
push
cli
xor
and
inc
pop
push
jge
mov
fnstcw
cmps
sbb
push
fsubr
loopne
movs
cmp
sbb
push
test
retf
stc
cdq
les
imul
mov
push
vmovsldup
ror
xor
ja
imul
(bad)
sbb
pop
push
ret
add
jp
or
loop
dec
mov
dec
aam
mov
ds
js
xlat
xor
lahf
pop
mov
cmp
push
sub
fadd
xor
or
pop
inc
cmp
xchg
stc
popf
and
inc
(bad)
xlat
pop
fwait
add
and
jmp
inc
cmps
inc
outs
xchg
pop
cs
in
pop
jnp
mov
adc
std
push
stos
push
sti
mov
sub
inc
inc
add
xchg
scas
cmps
dec
rcr
push
push
repnz
rcr
mov
pop
scas
enter
sar
add
into
jg
imul
ss
and
sti
jmp
lea
call
lock
mov
jo
out
hlt
cmp
mov
outs
pop
js
push
cmp
mov
xchg
add
stos
mov
ds
lock
aad
mov
imul
out
xor
and
ja
adc
out
adc
rcr
fstp
adc
cli
test
push
dec
sub
cmps
out
jecxz
cld
dec
movs
jns
jmp
push
jae
sub
cmovle
popf
and
in
pop
mov
iret
push
push
in
add
in
cmp
inc
dec
(bad)
mov
mov
rol
push
rol
int3
xor
(bad)
inc
cwde
dec
call
dec
mov
mov
dec
dec
sub
and
dec
jge
sbb
add
pop
sar
xchg
dec
(bad)
out
push
mov
test
(bad)
aad
sbb
je
or
addr16
adc
push
inc
(bad)
shr
in
mov
xor
jne
dec
mul
cmp
gs
jmp
int
cmp
jne
stos
mov
add
cmp
xchg
mov
jle
mov
loope
adc
jmp
and
sbb
xlat
inc
ja
jnp
inc
int
popf
dec
retf
pop
clc
in
mov
(bad)
pop
rcr
aam
or
add
dec
mov
arpl
jns
or
ja
mov
mov
and
adc
in
das
mov
or
sar
push
repz
sahf
lods
push
jb
sub
cmp
jp
push
test
mov
mov
ins
xor
popf
cmp
test
inc
xchg
cmps
xor
add
jbe
test
ja
ins
add
scas
push
adc
ss
push
jmp
jbe
mov
lods
mov
xlat
cmp
push
mov
cmps
daa
scas
cld
out
push
ror
test
in
fwait
xor
inc
adc
fiadd
aas
nop
aad
jb
xor
aaa
popa
popa
out
push
sbb
push
ds
jnp
jb
out
push
sbb
sub
xchg
xchg
sub
repz
or
push
lahf
or
push
shr
push
fwait
adc
es
inc
ins
movs
ins
fst
in
cmp
push
inc
movs
mov
ret
inc
int
stos
stc
pop
fistp
xchg
jns
mov
cdq
xchg
icebp
cdq
push
add
(bad)
ins
in
push
or
pusha
daa
sub
adc
out
ror
retf
pop
xor
add
xchg
jecxz
outs
repnz
je
popf
xchg
jcxz
leave
frstor
fld
sar
out
add
retf
sbb
into
xor
(bad)
je
rol
xchg
shl
sbb
(bad)
out
fidivr
cmp
stos
cmp
jmp
or
push
mov
imul
loopne
les
push
ficom
lods
icebp
test
(bad)
cmp
retf
push
push
jecxz
mov
fdivr
mov
test
xchg
cmp
mov
enter
push
(bad)
fild
jne
jg
and
movs
pop
mov
inc
fld
dec
ja
push
popa
mov
mov
push
lods
dec
mov
xchg
inc
jmp
je
add
sub
or
loop
xchg
lock
pop
imul
cwde
and
pop
fldcw
test
adc
add
int3
movs
or
rol
aas
ja
mov
mov
mov
pop
cmp
pop
mov
mov
mov
enter
sahf
push
jo
in
xchg
jmp
add
pop
idiv
add
loope
xchg
ficomp
retf
xchg
rcr
lea
sar
loope
inc
or
fsubr
loop
pop
js
imul
shl
sub
fwait
mov
cmps
adc
(bad)
push
xchg
xor
pop
pop
or
mov
dec
nop
pop
push
loope
stc
jmp
jns
int3
sbb
clc
js
mov
or
hlt
(bad)
not
sbb
mov
addr16
jp
sub
jp
(bad)
scas
lock
test
jl
outs
dec
mov
jo
mov
or
push
xchg
mov
movs
fisttp
gs
adc
(bad)
xchg
dec
sub
test
pop
cli
repz
push
ins
xor
cmp
or
in
cmp
addr16
inc
dec
fistp
sbb
imul
and
ret
jno
jecxz
bound
aaa
imul
mov
cmp
ffreep
sahf
mov
pop
xchg
into
sub
out
push
jl
jle
cmp
or
xchg
ret
sahf
dec
pop
jbe
mov
mov
inc
mov
sub
dec
adc
std
mov
xor
rol
mov
outs
frstor
scas
pop
es
ret
cdq
adc
add
sub
and
lahf
cmps
cmp
or
dec
fwait
sbb
leave
jmp
jmp
fimul
aad
les
adc
jbe
in
mov
inc
aad
mov
mov
mov
std
cmc
icebp
idiv
xchg
pop
and
in
mov
loop
dec
cmps
dec
repz
js
mov
ds
pop
in
out
sub
mov
iret
mov
sbb
icebp
das
ja
fs
xor
add
in
add
push
xchg
push
fs
stos
adc
pop
(bad)
ja
adc
sub
pop
adc
xlat
sbb
pop
jmp
dec
push
inc
das
pop
(bad)
sbb
and
ds
xor
(bad)
popa
or
pop
sub
mov
push
fild
ins
mov
xchg
dec
adc
call
enter
xor
push
repnz
dec
jne
mov
jmp
test
mov
sbb
stos
mov
popa
xor
ret
aam
std
dec
hlt
sub
call
and
aad
xor
adc
xchg
or
jns
push
xchg
or
std
adc
and
adc
fst
icebp
pop
pushf
pop
jb
sub
adc
ins
cmps
jmp
cmp
mov
mov
mov
xlat
xor
(bad)
idiv
sar
loope
pop
or
stos
xor
je
jmp
or
jne
xor
sub
arpl
sub
cmps
mov
or
loop
push
xchg
and
xor
dec
adc
push
dec
adc
mov
mov
cmp
and
daa
mov
cwde
jge
or
or
rcr
mov
dec
dec
shl
ficom
retf
repnz
scas
mov
cs
inc
sub
push
shl
jge
sbb
push
stos
jne
mov
inc
dec
dec
adc
ficomp
sub
bound
dec
mov
cwde
cmp
fwait
push
pusha
pop
ds
inc
popa
push
scas
retf
mov
test
out
xor
and
or
fist
or
out
into
xchg
xor
or
add
mov
push
lds
jmp
fdiv
scas
fist
push
leave
(bad)
out
or
jne
sbb
rol
cmps
cli
fidivr
mov
aam
int3
or
mov
add
lea
fstp
fisubr
add
inc
add
retf
and
loop
push
adc
ret
pop
lahf
scas
and
add
or
sub
pop
rcr
aad
cmp
test
fcmovb
je
daa
add
sbb
mov
pop
add
and
add
scas
mov
movs
mov
jl
pop
xor
xchg
fstp
xchg
cmp
cwde
aam
dec
cmp
sbb
add
outs
call
xor
sub
enter
test
adc
xor
sbb
dec
movs
ds
sbb
xchg
lods
mov
iret
sahf
xchg
fdivr
lods
mov
sub
imul
cmp
mov
sub
mov
stos
fucompp
lods
imul
pop
mov
xlat
mov
daa
stos
pop
outs
pop
int
out
lea
xchg
repz
daa
shl
call
dec
and
hlt
je
and
push
add
je
ficomp
(bad)
mov
daa
xchg
lock
lea
push
cli
push
dec
adc
add
daa
test
arpl
out
nop
iret
(bad)
jo
sti
adc
adc
cmp
(bad)
jle
in
lahf
mov
mov
jns
dec
mov
push
adc
pop
(bad)
(bad)
cmp
js
(bad)
mov
adc
adc
cmc
cdq
mov
xchg
outs
push
jns
fdiv
xchg
xchg
(bad)
lock
ret
sbb
jmp
in
ja
ja
push
jno
cmp
mov
adc
and
or
sub
and
sbb
cmps
sub
sub
add
jg
xor
pop
push
jno
fist
shr
pushf
jae
mov
push
fldenv
mov
test
jo
fisttp
pop
pusha
jg
inc
or
pushf
cmps
idiv
sbb
ins
call
pop
adc
xchg
xchg
xchg
jmp
adc
call
sbb
popf
xor
jbe
bswap
aas
rcl
pop
cmc
adc
push
inc
mov
add
je
neg
fs
mov
inc
stc
bound
mov
ret
sbb
push
inc
dec
xor
mov
inc
and
xor
add
jne
call
jns
lea
scas
xchg
inc
imul
dec
mov
(bad)
outs
sub
mov
pushf
dec
mov
cs
pop
pop
fdiv
sbb
cmps
imul
dec
out
cmc
add
sub
or
cmp
es
cld
call
outs
movs
popf
or
ret
mov
loopne
jle
mov
sbb
outs
inc
xchg
add
dec
mov
hlt
fist
push
js
ins
adc
pop
leave
in
imul
jle
hlt
xchg
call
pop
mov
xor
or
pop
push
cmp
int
aam
loope
or
retf
out
lock
jmp
jle
add
ins
inc
ficomp
cmp
enter
call
mov
mov
outs
add
sub
(bad)
inc
cmp
pop
int3
into
retf
xchg
fidivr
jbe
(bad)
repz
sti
mov
call
dec
or
xor
mov
or
sahf
scas
add
xchg
mov
sub
mov
push
int3
adc
test
lahf
jb
lock
push
sbb
mov
push
add
xchg
push
xchg
mov
test
cmp
ja
imul
(bad)
enter
adc
push
dec
push
adc
(bad)
mov
or
mov
push
mov
(bad)
push
xlat
into
dec
jbe
inc
xchg
pop
pop
addr16
jmp
ja
imul
jnp
cdq
(bad)
mov
aad
retf
jg
nop
into
ror
stos
fucomp
popf
sub
mov
test
xchg
jle
add
cmp
popf
xor
fstp
lds
push
repz
test
fs
jbe
out
pop
test
adc
sbb
in
retf
push
je
por
mov
mov
cmps
out
enter
fistp
mov
mov
repz
lea
mov
dec
jp
pop
xor
add
push
sti
add
xchg
test
mov
sti
aaa
(bad)
sub
sub
cmp
push
pop
xor
jmp
stc
jns
iret
(bad)
das
mov
mov
scas
les
fild
adc
xor
adc
or
push
jne
pop
mov
ror
shl
shl
rol
mov
int3
xchg
push
int3
aaa
ins
add
and
bound
ret
adc
dec
xchg
shr
bound
or
xlat
push
mov
inc
xor
jb
lods
imul
aaa
xor
stos
push
xchg
inc
pop
xchg
dec
outs
inc
jg
jge
xchg
scas
mov
adc
adc
or
mov
mov
xor
mov
and
xor
ja
xlat
cmps
pop
add
jmp
fs
inc
sub
out
inc
call
psllw
cld
jae
scas
scas
xchg
cwde
sub
inc
sub
add
mov
(bad)
cmp
cmp
cli
sar
ins
outs
sbb
fistp
inc
or
inc
push
adc
stos
hlt
mov
nop
mov
fwait
or
dec
mov
aaa
dec
ins
les
inc
inc
xor
jne
push
xchg
mov
xchg
xchg
mov
sbb
add
icebp
sub
sbb
push
pusha
inc
cmps
lock
pop
jp
jp
xchg
pop
sar
jno
sbb
push
test
sub
hlt
mov
sbb
gs
jp
push
dec
jnp
or
jne
leave
xchg
jmp
aad
popf
inc
and
(bad)
ins
ds
sbb
xor
les
popa
and
inc
aaa
and
xor
or
mov
inc
pop
mov
imul
cli
push
shl
sbb
call
retf
rol
mov
movs
in
xchg
es
and
movs
push
add
lea
inc
iret
inc
sbb
les
adc
mov
fcomp
aas
push
sub
sbb
(bad)
ins
xlat
adc
cmp
scas
xchg
or
xor
neg
pushf
clc
pop
xor
jg
into
or
cdq
ins
sub
test
xor
jmp
mov
scas
dec
xchg
loopne
dec
dec
cwde
fst
sbb
cli
xor
sbb
sbb
mov
sar
xchg
sbb
and
and
popa
cli
xor
sbb
js
pop
cli
jno
inc
movs
icebp
call
push
sbb
xchg
cmp
pop
push
test
ret
push
test
adc
mov
xor
cmc
hlt
mov
sub
jmp
(bad)
jb
mov
inc
dec
and
push
call
or
xchg
xor
xor
push
sbb
dec
rcl
inc
sahf
dec
push
scas
xchg
out
retf
add
or
add
jmp
xchg
fistp
jmp
stc
sub
xchg
sub
inc
int
scas
icebp
in
sub
adc
xor
pmuludq
pop
and
pop
push
mov
shl
jnp
mov
or
jmp
pop
pusha
pop
jp
mov
push
sbb
adc
gs
mov
fld
xlat
ins
add
js
add
aad
push
mov
dec
(bad)
ret
sahf
popfw
xchg
adc
mov
adc
mov
fisubr
sub
enter
sub
push
out
push
imul
or
dec
fist
adc
push
xor
jg
shr
sub
scas
xchg
push
into
cmp
call
add
movs
nop
cmp
pushf
pop
das
scas
in
mov
ds
jns
and
push
sub
dec
push
mov
mov
popa
jle
jl
push
outs
sbb
mov
xchg
push
xchg
cs
mov
ficom
sub
fisttp
in
repz
call
icebp
add
pop
push
in
mov
xchg
arpl
ins
aaa
mov
jo
dec
repnz
cwde
push
inc
add
dec
movs
and
and
pop
adc
mov
mov
out
mov
dec
add
int
in
daa
and
mov
cmp
in
shl
pandn
adc
sbb
cmp
jne
push
or
fs
repz
mov
mov
icebp
and
xchg
in
lea
into
ja
or
das
adc
and
xlat
push
pop
adc
ins
repz
pop
iret
hlt
mov
ins
cmp
inc
scas
pop
and
and
cs
mov
ins
dec
adc
inc
push
mov
xor
or
test
xchg
sub
sub
je
pop
dec
push
mov
cmps
sbb
adc
xchg
fsubr
add
or
iret
inc
adc
cmps
dec
push
push
fadd
ins
add
and
repz
ja
dec
sub
add
xchg
cmp
inc
sbb
stc
cwde
mov
popa
ror
dec
pushf
clc
adc
push
pop
jp
shl
xchg
mov
sti
addr16
stc
mov
in
test
sbb
xchg
dec
sbb
jmp
les
mov
mov
mov
shl
das
sti
and
xor
or
inc
out
sub
adc
adc
retf
aaa
xor
xchg
lods
mul
cmp
cmp
jnp
push
xchg
or
xor
test
aaa
add
push
and
ins
pop
mov
dec
jne
cmp
(bad)
xlat
clc
add
(bad)
mov
iret
fild
pop
aas
sbb
test
cld
and
lea
shr
mov
fwait
(bad)
popf
inc
fst
jge
add
call
sub
mov
mov
(bad)
push
jbe
stc
xor
sub
fbld
sbb
ror
jg
jmp
lds
popf
out
cdq
mov
or
das
and
scas
xor
es
icebp
inc
pop
add
jno
sub
and
push
ins
imul
icebp
clc
mov
cmps
xchg
mov
mov
pop
test
repz
mov
cmps
fwait
cmp
inc
loopne
fistp
ficomp
and
call
sbb
stos
imul
hlt
cmp
xchg
ds
xor
lods
dec
inc
push
cwde
xor
jl
jecxz
cwde
bound
nop
or
cmps
inc
cmps
dec
mov
out
add
out
cmp
pop
mov
popf
push
add
scas
ret
stos
adc
in
(bad)
mov
mov
and
pop
jmp
out
dec
adc
xchg
push
xor
icebp
add
ds
jbe
cmp
push
pushw
sti
or
mov
cmps
mov
cmps
sub
jne
pushf
dec
push
mov
movs
std
aas
dec
cdq
je
pop
pop
push
mov
cmp
loop
xor
xchg
leave
mov
jecxz
xor
int3
pop
pop
sbb
repz
mov
test
jecxz
mov
cmp
xchg
xor
ins
aam
popa
shl
mov
and
sbb
push
into
fstp
mov
sub
dec
inc
xchg
cmp
in
(bad)
dec
jno
pop
xor
dec
das
stos
mov
fwait
int3
mov
test
mov
std
hlt
xor
icebp
sbb
ds
mov
lods
sbb
inc
in
sbb
xbegin
and
es
sub
pop
or
or
lds
adc
int
xor
mov
movs
js
ror
sbb
sub
pop
fisttp
repnz
ins
in
leave
into
push
sub
(bad)
popf
inc
mov
sbb
cmps
and
mov
xchg
mov
inc
lds
sub
push
adc
mul
or
jmp
jmp
xor
sbb
test
hlt
sti
(bad)
fidiv
xlat
xor
bound
test
push
aad
cli
ins
test
int
loopne
jg
push
mov
mov
push
fstp
push
xchg
scas
fincstp
(bad)
mov
mov
shr
aad
sub
pop
inc
popf
xchg
imul
push
xor
pop
or
add
push
or
out
(bad)
stc
xchg
rcr
pop
in
xchg
cmp
jno
int3
add
mov
stc
sub
std
dec
push
adc
in
int
ret
aad
sbb
nop
sti
adc
clc
inc
ret
xor
imul
mov
mov
jl
cmc
pmaxub
add
call
cli
add
cmps
or
popf
fisubr
pop
lods
mov
push
xor
inc
push
or
xchg
sub
cmps
not
mov
mov
xlat
mov
or
outs
push
aam
xor
inc
(bad)
fs
lds
cmp
stos
and
(bad)
(bad)
das
push
loop
inc
inc
jnp
mov
push
mov
sub
mov
jmp
pop
and
xor
mov
xor
addr16
cmps
gs
sbb
jns
fsubr
and
xchg
sub
icebp
cdq
add
xchg
pop
push
mov
cmp
test
sbb
push
test
xor
(bad)
xor
jbe
mov
or
not
pop
inc
aad
add
pop
sub
cmps
jns
je
rol
jp
sbb
mov
adc
dec
in
je
aam
and
xchg
sahf
cmc
jo
pop
cmps
repnz
xor
sbb
cmps
enter
inc
repz
scas
stos
push
je
xlat
xlat
and
cmp
jns
(bad)
inc
xor
aam
(bad)
and
call
xor
push
dec
retf
popf
popa
stos
adc
jae
adc
pop
stos
jb
sti
jl
mov
cmp
pop
push
pop
retf
(bad)
stos
dec
mov
xchg
cld
into
add
stos
jnp
int3
loope
jg
xor
stc
(bad)
iret
push
sbb
adc
lds
mov
ret
sbb
jge
scas
inc
sbb
(bad)
mov
vpmacssdqh
test
lea
scas
adc
cmps
jb
sbb
push
mov
std
inc
(bad)
xor
loop
ror
sti
push
aas
fstp
xchg
sbb
mov
jne
ret
imul
or
inc
stos
xor
js
add
push
fisub
(bad)
popa
(bad)
fdivr
pop
out
jecxz
(bad)
pop
data16
cmp
add
gs
add
mov
cmp
(bad)
lahf
cmp
sub
into
mov
adc
push
sub
neg
das
sbb
inc
ret
popf
inc
(bad)
fidivr
arpl
sub
xchg
mov
and
pop
xor
adc
jge
movs
xor
mov
mov
enter
ins
and
das
lock
cld
cld
sbb
xor
mov
inc
icebp
inc
cmps
inc
das
inc
cli
sbb
adc
sub
add
dec
push
jp
jo
lahf
push
dec
out
jae
and
addr16
test
add
ss
cld
xchg
cld
cmp
fmul
sub
mul
push
sub
mov
dec
fadd
gs
xchg
js
test
stos
sbb
out
xchg
or
and
bound
adc
fmul
add
test
outs
xor
mov
fwait
sub
and
pop
es
cdq
pop
es
sbb
or
pop
xchg
pop
les
jg
push
popf
mov
lods
add
repz
pop
mov
add
adc
aaa
jmp
dec
mov
pop
pop
(bad)
sahf
mov
aam
mov
aas
popf
cmp
dec
cwd
or
mov
add
dec
outs
push
adc
xor
push
lahf
cld
pop
push
adc
test
in
stos
mov
inc
sub
jp
ret
fimul
xor
xor
stos
repnz
outs
jmp
or
cmp
cmp
lock
dec
ds
cld
movs
enter
aaa
int
jp
mov
sbb
ds
push
xor
dec
sub
sub
mov
adc
adc
popa
cdq
lods
es
cld
rol
inc
push
pop
mov
je
sub
xor
mov
aas
inc
adc
imul
popf
push
cmc
push
cdq
or
inc
add
adc
and
out
and
in
xor
adc
dec
movs
rcr
lea
outs
movs
je
les
int3
lods
shl
jmp
bound
xor
cld
xor
pop
mov
inc
cli
stos
add
jp
lahf
adc
loop
imul
push
jle
lods
and
dec
lods
add
and
dec
jae
(bad)
mov
in
mov
cs
mov
scas
sbb
movs
inc
repz
mov
arpl
or
cmp
cmc
push
xor
je
sbb
adc
imul
ds
jno
inc
or
cli
xchg
pusha
xchg
adc
inc
mov
sub
and
std
(bad)
ja
mov
sbb
cld
out
rcr
mov
xchg
mov
dec
inc
pop
push
iret
inc
aad
pop
mov
fs
mov
loopne
test
mov
and
mov
mov
dec
xchg
dec
dec
xchg
mov
test
mov
ror
xchg
ins
(bad)
(bad)
jbe
cmps
lea
xchg
pop
jle
mov
sbb
push
cmp
out
mov
xchg
inc
movs
scas
or
mov
cmps
stos
rol
out
lods
mov
sub
movs
clc
cld
sbb
add
inc
movs
loopne
mov
popa
or
jnp
or
pop
mov
fst
mov
(bad)
lods
xlat
mul
stos
or
add
and
inc
xor
jecxz
cdq
xor
push
mov
test
jo
and
mov
cmps
cmc
mov
das
lods
icebp
cmps
sbb
mov
and
and
add
stos
mov
push
aad
adc
popf
push
inc
lock
pop
jb
scas
mov
fwait
js
or
mov
and
add
ret
pop
add
les
mov
leave
jb
sbb
sbb
add
fchs
retf
daa
inc
cli
nop
jge
or
or
jbe
div
mov
pop
hlt
cmp
or
mov
pop
cld
test
or
les
es
jp
cmc
push
jmp
cmp
pop
mov
out
sbb
in
addr16
sbb
xchg
mov
mov
add
loopne
mov
add
fsub
add
in
mov
jns
(bad)
out
sbb
call
out
out
lock
mov
lods
iret
int3
mov
push
icebp
mov
stos
add
jno
cmp
jge
pop
retf
loope
je
jno
inc
ss
psubw
mov
ja
pop
daa
retf
mov
mov
pop
cdq
daa
xor
call
push
int3
(bad)
jae
pop
push
scas
repz
out
ins
leave
cmp
and
cli
call
inc
mov
cmp
imul
stos
fnsave
inc
pop
rol
mov
ss
sbb
cmps
aam
ss
jbe
push
jae
push
enter
cmps
pop
dec
inc
shr
push
call
mov
addr16
dec
xor
fidivr
call
dec
pop
test
inc
push
cmps
sub
dec
(bad)
retf
cmp
imul
pop
push
pop
pop
test
sbb
mov
dec
lea
xchg
mov
sub
mov
addr16
cmp
mov
cs
imul
mov
jbe
ds
push
or
icebp
push
imul
es
jno
jo
popa
dec
xor
stc
jle
shl
xchg
cs
arpl
in
sub
or
jbe
stos
iret
gs
mov
or
test
es
inc
(bad)
pop
adc
xlat
into
jg
add
fistp
jne
pop
mov
loop
or
push
cmp
and
cmp
xchg
cvttps2pi
mov
mov
xchg
sbb
lds
mov
xchg
xchg
test
or
mov
pop
push
inc
pop
das
jne
push
pusha
(bad)
pop
and
ret
pusha
cmp
pusha
cli
sub
mov
fdiv
and
jle
iret
rcpps
push
sub
push
jg
fist
pop
xor
add
stc
repz
bound
sbb
jno
sbb
retf
jmp
pop
xor
call
call
repnz
cmp
sub
or
sahf
xor
or
xor
xchg
add
fild
lea
adc
mov
push
mov
movs
sti
mov
nop
push
cmp
movs
dec
pop
push
lahf
adc
dec
rcr
sub
jnp
mov
push
pop
push
cli
mov
adc
fadd
and
mov
iret
dec
add
push
jmp
sub
add
add
test
xchg
cmps
outs
mov
jne
aas
pop
shr
sub
movs
or
and
stos
(bad)
sbb
or
stos
adc
test
mov
dec
push
fadd
mov
sub
js
int3
xchg
cmp
pop
dec
mov
lock
sbb
sbb
push
sahf
and
mov
retf
outs
jno
pop
aam
out
pop
inc
loope
(bad)
push
cmp
push
or
ror
movs
retf
rol
sbb
jl
std
cli
push
or
into
repz
add
inc
aas
mov
and
scas
sbb
push
mov
xchg
test
retf
cld
pop
(bad)
in
cmps
(bad)
int3
mov
xor
daa
adc
shl
clc
mov
aam
loop
inc
xchg
mov
or
popf
popa
mov
enter
int3
push
cmp
loopne
loopne
mov
mov
and
cmp
xchg
xor
push
syscall
outs
in
xchg
ins
enter
stos
and
fst
mov
out
das
sub
add
xchg
mov
adc
mov
xchg
loop
and
and
mov
cli
or
and
in
neg
xor
xor
sub
scas
ins
push
(bad)
cmc
cld
dec
pop
sub
xor
pop
pop
pop
movs
movaps
ins
xchg
mov
inc
add
adc
pop
jmp
pop
adc
arpl
hlt
(bad)
xchg
repz
retf
pop
(bad)
sbb
push
push
shl
cmc
call
fsubr
ror
add
aad
ja
loope
or
dec
and
mov
fldenv
mov
in
mov
test
sbb
xchg
(bad)
push
jmp
xchg
mov
sbb
ret
pop
pop
xchg
test
sti
nop
pop
out
cld
aaa
dec
fwait
cmp
test
scas
push
sub
lods
mov
jge
cmp
shl
sub
pop
pop
cmp
cmps
ret
mov
jae
pushf
sub
sub
repz
xchg
lds
push
push
sub
or
add
add
sub
sub
shr
scas
or
pop
in
sub
daa
sti
or
add
or
fs
ud0
enter
into
ja
inc
shr
addr16
ins
cmp
sbb
jmp
push
ret
cmp
cwde
xchg
mov
call
inc
push
fbstp
ror
xchg
inc
push
adc
xor
pop
icebp
(bad)
ror
ror
je
out
jnp
in
xor
mov
imul
(bad)
jnp
add
add
lods
arpl
imul
push
nop
cmps
adc
mov
fistp
fidiv
cmp
sub
(bad)
je
pop
pushf
mov
aaa
mov
dec
xchg
rol
push
out
dec
adc
xchg
mov
mul
xor
icebp
xor
pop
cmps
mov
mov
gs
push
sar
in
or
daa
jmp
fsubrp
dec
js
jle
retf
mov
jns
dec
les
dec
and
or
(bad)
loop
imul
adc
cmc
dec
or
es
cmps
pop
adc
outs
call
push
pop
(bad)
pop
es
call
mov
mov
mov
xchg
daa
push
sub
jbe
add
iret
clc
xchg
sbb
ret
aas
dec
xor
sub
sbb
xchg
gs
nop
cli
pop
mov
xchg
fwait
jnp
fist
jne
mov
scas
mov
inc
test
inc
inc
or
cld
shr
fidivr
into
push
mov
psubd
repnz
test
sub
popf
les
xor
(bad)
test
das
push
dec
add
outs
stc
push
movs
sbb
popa
sbb
push
into
xchg
push
adc
xchg
ins
fistp
mov
jg
mov
push
test
leave
out
dec
add
mov
mov
fcmovbe
imul
and
sbb
scas
mov
push
std
test
pushf
or
movs
out
ja
stos
inc
push
call
ret
cmp
and
push
xchg
xor
pop
retf
into
sbb
fwait
jg
push
fistp
mov
or
sub
ins
loopne
fdiv
call
xchg
mov
jmp
inc
inc
dec
xchg
int
xchg
int3
loop
adc
push
mov
rep
scas
mov
or
fmul
add
sub
pop
xor
jmp
pop
ror
xchg
dec
adc
sub
(bad)
test
jnp
(bad)
packssdw
mov
test
sub
daa
lahf
aaa
outs
sub
repz
jg
mov
jge
cmpxchg
mov
aaa
pop
mov
pop
adc
add
mov
vpaddsb
dec
in
and
mov
and
cmp
inc
cmp
sub
ret
aad
shl
stos
cwde
js
dec
dec
push
retf
jecxz
out
aaa
pop
jle
push
xchg
push
(bad)
cli
(bad)
(bad)
movs
xchg
dec
pop
fidiv
cmp
ror
dec
mov
cmps
inc
ret
dec
pop
call
mov
shr
sub
mov
sar
(bad)
bound
mov
xor
cmp
add
adc
les
(bad)
es
iret
xor
popf
pop
shr
jae
gs
out
pop
or
push
cwde
cmp
xor
add
xor
in
cdq
cwde
or
rcr
out
loop
stos
das
lods
push
mov
sahf
lods
repz
mov
out
push
add
das
scas
dec
cmp
hlt
retf
xor
sbb
outs
mov
dec
test
or
test
fs
mov
push
lds
int3
xchg
sub
jbe
pop
cmp
not
retf
aad
pop
dec
push
cmc
jns
arpl
inc
xor
loope
jle
mov
or
test
mov
jno
call
movs
adc
std
stos
scas
jno
cmp
mov
shr
(bad)
les
mov
in
push
aaa
ja
push
cmp
test
xchg
adc
aad
xor
mov
retf
jmp
ins
and
push
xor
(bad)
dec
xor
cmove
js
enter
mov
jbe
cmps
pop
dec
push
je
or
pop
pop
sub
lahf
xchg
dec
movs
xlat
dec
in
test
fild
push
cwde
rcr
pop
jecxz
cli
mov
xor
cld
pop
sub
xor
ja
loopne
cs
std
add
outs
push
cmp
cdq
mov
(bad)
test
js
data16
xor
fsubr
xor
fwait
imul
cmp
jnp
jb
call
mov
or
and
pushf
adc
sub
out
out
inc
xchg
inc
fldcw
mov
mov
hlt
mov
cld
sahf
repnz
lock
loopne
jo
dec
fsubr
mov
dec
sbb
cmp
push
test
mov
fidivr
push
sub
das
cmps
mov
xor
dec
icebp
mov
dec
xor
lahf
outs
(bad)
popa
leave
adc
mov
lods
xor
add
mov
adc
test
pop
dec
sbb
xor
call
add
cmc
adc
and
in
and
cmp
push
mov
enter
arpl
mov
xor
push
mov
mov
cmc
in
sbb
push
ja
dec
jb
stc
rol
lea
jecxz
mov
ror
sti
push
loopne
or
daa
(bad)
jmp
push
or
mov
inc
in
pop
div
popa
jne
out
jb
fcomp
xchg
sahf
push
mov
add
adc
dec
xor
mov
and
aad
sti
cmp
aam
pushf
push
retf
pop
enter
jmp
adc
mov
stc
into
outs
jge
lea
push
out
popa
mov
(bad)
dec
sti
enter
pop
inc
sub
pop
adc
(bad)
mov
retf
sub
(bad)
mov
retf
dec
mov
mov
jbe
cmps
pop
call
fwait
aam
fs
bound
dec
aaa
pop
jle
mov
fiadd
inc
fisttp
popa
mov
bound
xor
icebp
fsubr
pop
or
mov
cmp
(bad)
lock
or
inc
neg
gs
inc
inc
js
ss
and
loop
mov
or
les
sub
or
sbb
mov
fidiv
mov
test
lds
mov
mov
sti
lds
mov
sub
sbb
jmp
clc
imul
std
retf
mov
imul
mov
iret
iret
sar
imul
idiv
xchg
aaa
adc
pushf
(bad)
xchg
xor
cmp
and
jno
call
das
xor
into
retf
std
(bad)
xchg
fcomp
jne
xchg
hlt
sbb
jnp
iret
call
jne
jo
cmp
add
add
lea
movs
adc
arpl
das
fnstenv
sub
call
cmp
(bad)
dec
imul
sbb
test
cmp
jno
loope
iret
scas
mov
loope
xchg
mov
(bad)
jae
cmp
inc
xor
mov
retf
jne
sti
in
(bad)
imul
pop
repz
add
into
add
in
push
je
pop
bound
mov
nop
push
aad
mov
in
popf
das
sub
test
lock
test
add
inc
sbb
in
mov
es
sar
pop
sub
push
fcmovnbe
cmp
out
in
movs
imul
imul
xlat
dec
ins
sbb
inc
ins
push
out
xor
mov
mov
lea
push
push
mov
xchg
loope
sub
cld
sbb
(bad)
dec
call
es
push
xchg
mov
in
mov
fst
inc
lods
mov
pop
push
cmp
push
mov
dec
or
out
xor
fs
cmp
xor
add
pusha
scas
dec
cmp
pop
mov
shl
adc
je
xlat
push
xor
inc
shl
push
(bad)
fsub
jbe
push
fadd
add
pop
xor
bound
mov
out
jl
xlat
xchg
pop
cmps
sub
daa
xchg
movs
add
xor
adc
jmp
mov
imul
shr
pusha
mov
xor
data16
xor
mov
xor
aad
and
pop
sti
lds
mov
fwait
cld
mov
sub
xchg
and
push
pop
xchg
enter
adc
mov
enter
hlt
shr
cmp
sub
outs
scas
or
sbb
leave
xor
imul
xchg
fidiv
loope
es
repnz
stc
scas
jecxz
jmp
inc
jl
ret
mov
pop
ret
dec
repz
mov
je
adc
mov
ss
mov
and
fpatan
jge
xor
ret
stos
repz
or
nop
inc
inc
retf
lods
push
cmps
pop
retf
and
test
rol
dec
mov
dec
xor
lods
jae
data16
retf
retf
mov
sbb
inc
sbb
lods
mov
dec
in
mov
mov
lds
cmp
add
loope
(bad)
scas
(bad)
cli
xchg
dec
pop
dec
or
repnz
cmp
and
fcom
xchg
jp
ins
add
adc
sub
mov
cmps
data16
mov
inc
adc
cmp
adc
push
mov
mov
xlat
sbb
add
mov
push
xor
push
int3
fadd
shl
mov
fwait
retf
lods
push
sahf
daa
push
xchg
stos
cmp
mov
mov
lock
adc
ins
movs
inc
sbb
retf
or
mov
mov
hlt
mov
and
in
jle
sub
or
and
and
data16
scas
mov
ds
cmc
jp
ins
add
jl
jo
cmp
popf
(bad)
cmp
inc
sbb
dec
pop
loope
mov
idiv
mov
loope
pop
fidiv
pop
jno
ins
(bad)
adc
popa
pop
dec
dec
test
adc
inc
pushf
xchg
push
popf
test
test
repz
xor
mov
dec
das
aad
pop
popa
xor
inc
mov
test
cld
or
test
data16
mov
push
test
sub
mov
neg
js
or
xchg
cmp
stos
inc
aas
mov
mov
pop
jg
(bad)
adc
jge
mov
mov
dec
mov
fdivr
adc
mov
dec
je
std
sub
out
xchg
add
push
in
jp
packsswb
lahf
rcl
inc
jns
adc
lea
adc
js
inc
outs
mov
ds
pop
mov
out
cli
gs
push
cmc
inc
sbb
inc
outs
loop
adc
in
test
out
lea
ror
cmp
jge
ins
cwde
push
clc
mov
inc
sub
cli
xchg
jns
sub
mov
repz
sub
dec
mov
std
bound
leave
outs
adc
pop
dec
gs
jae
pop
loopne
or
nop
mov
mov
adc
inc
fild
pop
loop
sbb
shl
mov
pushw
push
jecxz
pop
daa
jb
outs
and
mov
pushf
ins
inc
lods
xchg
js
push
arpl
sub
popa
mov
xor
test
sbb
das
xchg
test
ror
xchg
pop
loope
pop
mov
mov
jno
scas
stos
popa
iret
mov
fistp
inc
psraw
(bad)
or
or
jp
dec
out
sbb
stos
test
mov
xor
(bad)
idiv
adc
bound
add
js
out
push
sbb
sar
sub
sub
popa
push
mov
imul
adc
inc
sub
jge
push
(bad)
mov
inc
adc
seta
imul
cmps
mov
(bad)
mov
fcomip
ret
mov
mov
outs
mov
push
mov
rol
icebp
sbb
je
in
pop
adc
xor
cld
sbb
int
outs
jmp
mul
sbb
cmp
push
jle
mov
loope
cwde
jg
pop
jl
adc
ins
jmp
nop
out
lea
jns
cmp
imul
out
xchg
push
xchg
out
cmp
dec
cli
fbld
push
or
dec
ret
mov
fimul
mov
mov
lock
xchg
jge
pop
inc
add
popa
call
xchg
mov
lods
hlt
mov
pop
stc
popa
adc
sahf
cdq
adc
enter
sub
popa
dec
cmp
ret
shl
and
sub
ins
fs
xchg
out
aas
retf
xlat
clc
jmp
or
movs
pop
hlt
xchg
outs
mov
jns
cmp
xor
dec
div
popa
push
sub
cmps
jbe
sbb
test
jbe
jnp
adc
(bad)
stos
hlt
pop
mov
mov
fs
outs
xchg
jo
inc
mov
repnz
call
mul
adc
pop
adc
call
cmp
jmp
sub
inc
xor
add
ds
jp
out
and
adc
div
jecxz
xor
cld
repz
test
mov
mov
faddp
jecxz
imul
fld
imul
cmps
xchg
or
int
out
aad
cmp
outs
mov
lds
lock
fst
fcom
data16
push
fcom
movs
icebp
mov
push
bound
outs
scas
lds
pop
popf
mov
stos
shl
cdq
xchg
test
add
sbb
add
neg
fistp
test
add
cmps
jae
lods
push
test
mov
or
mov
mov
outs
inc
pop
cmp
sbb
movs
pop
icebp
jle
pop
mov
mov
jbe
xor
mov
pushf
mov
xor
sar
(bad)
dec
mov
les
stc
cmps
and
nop
dec
jmp
pusha
mov
mov
sub
jns
sub
push
sub
fs
out
mov
push
jl
cmc
lahf
sub
sbb
pop
inc
mov
sub
adc
(bad)
add
and
jns
inc
rol
mov
mul
mov
mov
dec
ds
dec
jmp
pushf
xchg
push
lods
xor
cli
int3
push
adc
(bad)
push
lock
stc
inc
outs
pop
or
sub
ret
fs
aam
adc
in
jns
cdq
hlt
(bad)
mov
xchg
shr
test
jno
shl
jb
out
push
mov
rol
pop
imul
jmp
mov
mov
in
xchg
and
cmps
movs
mov
dec
mov
popf
add
xlat
scas
sub
shl
xchg
test
xor
shr
mov
and
jb
sub
repz
cmp
sub
aad
xchg
popf
push
xchg
add
sub
mov
mov
cmc
ror
jecxz
fstp
gs
mov
in
out
mov
sqrtps
das
jo
xor
jmp
fisub
je
dec
cmp
jp
ror
mov
imul
and
cmp
loopne
dec
or
cld
adc
imul
push
lods
call
mov
xchg
fwait
mov
das
jp
jecxz
shr
inc
fmul
inc
lea
sub
lock
in
inc
mov
loope
call
es
xor
lock
and
xchg
xchg
gs
pop
push
add
loopne
push
push
inc
jle
ss
cmps
and
loop
adc
jb
mov
cmp
nop
adc
mov
mov
rcr
inc
adc
cdq
mov
pop
in
loope
psubb
add
xlat
inc
inc
dec
in
push
mov
mov
gs
out
sub
enter
pushf
mov
cli
cli
movs
cld
add
pop
xchg
cmp
pusha
adc
inc
test
rcl
add
push
lock
ror
enter
clc
icebp
dec
cmc
sub
in
(bad)
xor
lahf
nop
sub
fnsave
adc
mov
push
mov
sbb
sbb
sbb
(bad)
iret
inc
jmp
and
xor
inc
out
scas
(bad)
in
mov
dec
cmp
repz
push
sub
sbb
repz
loope
mov
cmp
mov
lahf
cmps
call
iret
xchg
xor
lods
xchg
cld
ret
fist
add
int
cdq
cmp
cmp
jne
add
xor
popa
test
imul
and
ins
cmp
jb
push
xor
xlat
jae
lahf
mov
inc
outs
dec
sbb
dec
imul
fwait
mov
xor
test
fld
sub
ret
sahf
loop
and
out
(bad)
shl
adc
jmp
inc
push
add
or
or
sub
inc
or
jb
out
in
int
push
iret
sbb
xlat
cmp
jnp
(bad)
jle
pop
pusha
sub
push
xor
je
mov
movs
jo
fsub
xor
push
xor
test
ja
das
push
push
dec
adc
xchg
cmp
int
pop
jmp
jns
jns
stc
cmp
fucom
jecxz
jp
mov
jno
imul
iret
fprem1
pop
shl
cdq
sar
lods
push
or
pop
mov
push
mov
adc
jg
gs
call
push
push
cmp
xchg
mov
mov
sbb
pop
out
add
dec
rcl
retf
aaa
stos
cmp
mov
xchg
cmc
lock
ss
cmps
mov
xchg
aam
push
es
mov
add
or
jp
jp
cmp
nop
or
jecxz
mov
std
(bad)
inc
mov
cmps
nop
push
jae
popf
(bad)
pushf
xor
sbb
shl
jae
fistp
jnp
out
or
inc
in
push
xchg
push
cwde
imul
mov
ret
out
(bad)
mov
inc
jbe
sub
xor
ins
movs
arpl
mov
rol
int3
sub
mov
lds
les
push
push
jl
daa
and
or
lahf
pop
les
repnz
int
cld
xchg
or
das
sub
sbb
and
push
ins
jb
movs
stc
hlt
sub
out
adc
fidiv
nop
sti
sub
inc
sti
mov
push
ror
sub
xor
daa
sbb
adc
js
pop
pop
int3
aad
sub
fimul
mov
add
pushf
daa
add
mov
fadd
in
push
scas
loopne
inc
or
jnp
or
jae
mov
rep
sbb
mov
mov
fs
jg
adc
adc
sbb
fldenv
in
sbb
and
mov
mov
cmp
aas
jecxz
sub
sbb
push
cdq
sub
stos
mov
push
xchg
inc
imul
mov
clc
daa
and
lods
call
fadd
push
mov
inc
dec
push
out
loopne
(bad)
adc
pop
jp
mov
sahf
inc
loope
inc
mov
mov
xchg
mov
div
xchg
pop
(bad)
test
ja
adc
out
stos
adc
pop
mov
or
mov
sbb
cmp
mov
or
xlat
imul
and
xor
in
inc
sbb
lahf
sbb
inc
jbe
jecxz
push
es
and
push
add
out
inc
jnp
inc
sub
addr16
mov
scas
js
cld
bound
lods
jmp
sub
mov
aam
xchg
cs
cmp
pop
mov
sub
cmc
mov
jle
push
(bad)
xlat
in
rol
xchg
xchg
cmp
xchg
add
xchg
cmp
jle
mov
mov
push
mov
lea
or
popa
loop
sar
test
xor
or
xchg
or
stos
cs
dec
iret
gs
fcomp
test
stos
gs
cmp
push
dec
xchg
fld
and
icebp
adc
cmp
jg
stos
ffreep
push
xchg
hlt
out
ins
aaa
dec
or
sub
hlt
push
int3
xor
std
jo
pop
inc
mov
adc
sbb
jmp
pusha
(bad)
jmp
inc
lds
dec
out
adc
pushf
leave
pop
or
push
xchg
dec
iret
pop
pop
xchg
icebp
xchg
loope
push
mov
jl
(bad)
fucomip
sbb
jns
sbb
call
mov
das
mov
xchg
int3
out
mov
pop
cmps
mov
pop
xchg
popf
stos
int
dec
mov
pop
(bad)
adc
cmp
jnp
rcl
loop
out
mov
cs
or
in
js
in
ja
mov
pop
and
push
retf
outs
xchg
test
jecxz
xlat
jno
push
pop
adc
pop
(bad)
jns
lods
stos
out
xchg
popf
mov
retf
inc
add
or
jge
out
ja
int
xor
leave
sub
mov
add
rcl
stos
adc
dec
movs
xchg
xchg
adc
pop
adc
fmulp
pop
rcl
movs
dec
jb
test
aad
icebp
icebp
lds
mov
jecxz
loope
stos
dec
sbb
xor
xchg
add
mov
dec
bound
adc
call
stos
fdivr
xchg
mov
inc
aaa
add
xchg
push
adc
sub
add
aam
cmp
sub
das
(bad)
xor
lea
cdq
stc
iret
xchg
call
adc
xlat
xchg
sub
int
aad
and
loope
lock
dec
cmc
jne
and
dec
dec
div
in
dec
(bad)
or
push
sub
jg
push
jae
sbb
gs
jae
push
pop
je
mov
jp
mov
fadd
jae
xor
lea
in
cmp
jno
push
in
xor
cs
or
loopne
iret
add
out
(bad)
lock
mov
sahf
mov
adc
pop
int
icebp
adc
jo
clc
icebp
dec
mov
xchg
(bad)
jae
inc
jle
and
stos
rol
pop
pop
push
jle
loope
add
push
xchg
mov
pop
gs
jb
sub
push
js
jo
enter
rcl
jbe
or
sub
pop
out
or
ffree
jns
or
leave
inc
and
or
jns
inc
mov
pop
sbb
mov
add
sbb
icebp
mov
jmp
iret
leave
sub
cmps
or
(bad)
mov
ret
and
or
sub
pop
shl
std
aad
pop
cli
cmp
std
or
test
(bad)
mov
inc
nop
and
cmps
out
fild
iret
aad
push
or
sahf
cs
push
dec
mov
les
pop
es
push
fadd
jmp
test
int3
add
mov
or
sub
out
js
outs
loop
xchg
fidiv
xor
or
push
dec
ja
cmps
cmps
add
cmp
fbstp
gs
xor
popf
std
iret
jo
mov
mov
rcr
pop
mov
or
cmp
xor
mov
add
(bad)
outs
mov
jecxz
push
jbe
shl
scas
mov
bound
movs
xor
and
int3
(bad)
sbb
retf
mov
pop
icebp
(bad)
shl
dec
and
pop
in
sbb
jnp
leave
jg
(bad)
lock
fiadd
xchg
nop
scas
cmp
xlat
sbb
gs
push
mov
lods
mov
jecxz
retf
cmps
sar
adc
jp
test
and
pop
sbb
inc
arpl
inc
jl
and
cmc
test
jge
mov
xor
mov
retf
vmaxsd
mov
movs
outs
jne
leave
lock
aaa
fsubr
jp
popa
enter
(bad)
(bad)
pusha
ss
sub
call
(bad)
push
(bad)
xlat
cmp
stos
test
add
in
fdiv
push
outs
push
mov
mov
fisttp
mov
mov
pop
pop
or
aas
arpl
(bad)
mov
sbb
xor
pop
xchg
ficom
inc
arpl
mov
and
xchg
popf
push
fs
pop
dec
inc
ins
cdq
and
sar
div
loopne
std
nop
jo
cli
ss
adc
mov
daa
movs
dec
pop
add
mov
cmps
sbb
sbb
add
sbb
mov
mov
xor
data16
mov
xchg
adc
addr16
test
in
mov
ds
scas
add
(bad)
lods
mov
jle
xchg
ret
xchg
popf
cwde
jg
pusha
lods
lods
xor
xor
clc
inc
add
loope
les
dec
mov
xchg
cmp
outs
sahf
int
iret
pop
enter
mov
rol
mov
cdq
mov
in
cld
in
jle
and
and
rcr
inc
xor
and
(bad)
add
fld
mov
push
stc
jecxz
xchg
cmc
mov
lods
mov
repnz
je
adc
into
jmp
rcr
das
adc
icebp
mov
cmps
stc
jbe
push
fsubr
sbb
sbb
call
cmova
(bad)
jbe
or
xchg
mov
adc
sbb
movs
(bad)
clc
cmps
in
push
ret
add
or
pop
jno
out
cmp
popa
sub
mov
int3
mov
xchg
leave
jg
inc
sbb
js
dec
dec
mov
and
push
adc
and
fcmovne
test
push
hlt
rol
push
mov
jnp
push
or
push
xor
lods
iret
xor
iret
(bad)
ins
les
jle
cmc
scas
iret
shr
shr
mov
and
sub
sub
aaa
cmp
fiadd
shl
or
sub
ins
mov
imul
cs
je
push
call
dec
sub
adc
pop
xchg
addr16
stos
fisub
les
fld
jmp
into
xor
aaa
pop
outs
cdq
std
dec
or
push
add
aad
push
out
test
scas
push
pushf
aad
pop
push
fs
fist
mul
mov
ror
jne
shl
(bad)
cmps
xor
xchg
inc
pop
dec
addr16
cld
jl
imul
push
or
das
cmp
cmp
std
fwait
and
pop
fcomi
lock
fbstp
call
leave
cmp
arpl
sbb
enter
fiadd
aas
call
dec
movs
idiv
hlt
lods
inc
adc
mov
cmc
loop
(bad)
pop
xchg
dec
pop
adc
in
inc
mov
sbb
inc
movs
and
fiadd
or
lock
mov
lods
(bad)
in
push
jb
scas
jp
pop
add
fnsave
into
sti
enter
xchg
mov
pusha
jns
loope
pop
mov
cmp
jle
icebp
movs
popa
jae
(bad)
cmp
daa
sti
mov
ret
int
lods
jae
in
sahf
in
leave
loopne
push
retf
les
cmp
rcl
popf
test
int3
xlat
inc
adc
push
mov
enter
dec
sar
pop
adc
fadd
repz
mov
inc
sbb
jo
sub
xchg
and
sbb
aaa
ins
sbb
pop
xlat
aaa
std
xchg
clc
hlt
jb
pop
in
adc
adc
mov
repnz
jae
pop
sar
mov
aad
cmp
inc
or
xor
icebp
repz
enter
adc
xchg
call
push
sbb
push
cmp
adc
dec
push
adc
shl
mov
mov
mov
daa
aaa
pop
adc
jmp
mov
aam
int
enter
xor
mov
sub
mov
loop
mov
jno
idiv
sbb
test
and
std
pop
sti
sbb
push
cmc
mov
test
cld
in
dec
leave
fs
jae
adc
fwait
mov
pusha
ret
arpl
cmps
out
jb
int
aas
loope
mov
xchg
mov
push
or
call
out
add
es
push
pushf
stos
mov
xor
iret
push
inc
std
xchg
cdq
sub
or
repz
loopne
loope
dec
xor
not
xor
mov
repnz
and
in
out
fild
(bad)
xchg
mov
std
aas
shr
jne
rcl
jae
mov
mov
and
and
fwait
pop
xor
in
inc
lock
dec
adc
push
rcl
inc
cmps
push
xchg
ficom
or
mov
scas
lea
gs
push
addr16
cmp
movs
adc
jge
in
push
in
ss
and
pop
sbb
(bad)
in
dec
mov
mov
jbe
shl
scas
inc
outs
ret
pop
add
push
or
imul
push
adc
popa
mov
iret
lea
popa
add
add
cmp
jbe
cs
enter
jno
xchg
bswap
scas
call
mov
jbe
xchg
leave
retf
xor
scas
cmps
and
out
mov
pop
aas
daa
pop
lods
pop
xchg
das
mov
popa
cmps
adc
push
popf
lock
add
int
jbe
clc
stos
jno
mov
inc
addr16
(bad)
aaa
mov
xor
and
aad
leave
sub
jp
dec
add
imul
(bad)
xor
adc
cli
stos
(bad)
push
push
not
imul
add
jbe
fwait
je
shl
xor
dec
cmps
push
xchg
xor
sub
bound
int
jecxz
std
outs
xor
push
aas
pop
fstp
push
loope
mov
rol
clc
sub
ret
shl
lds
mov
push
(bad)
imul
push
or
adc
test
mov
xchg
into
arpl
retf
into
xchg
movs
call
jp
(bad)
repz
or
test
push
ret
xor
jno
cmps
pop
imul
fist
push
pushf
rcl
rcl
fisub
or
mov
sub
sub
imul
mov
mov
jge
bound
retf
jmp
pop
jecxz
sub
cs
add
cmc
cmp
stc
jnp
icebp
push
jbe
test
pop
pop
jb
xor
push
inc
in
jmp
ret
push
mov
movs
inc
jmp
push
inc
jge
rol
jns
xor
xor
mov
cmp
cwde
mov
adc
cmp
mov
xor
rol
xor
jno
adc
and
xor
je
or
add
fcom
je
mov
dec
sub
test
add
fimul
or
mov
sub
cmp
fldenv
ret
mov
jbe
dec
enter
jae
scas
xor
popa
sbb
aas
retf
xchg
test
fidivr
sahf
imul
aas
neg
mov
mov
mov
sub
xlat
outs
xor
repz
in
adc
add
sub
mov
fimul
test
fbld
push
xor
mov
dec
pop
jmp
jmp
in
xchg
jo
ins
stc
(bad)
sti
shr
gs
imul
jne
sub
stos
inc
lea
cmp
xchg
cmp
add
shl
fild
push
add
popa
enter
ret
jnp
inc
rcr
or
sub
pop
(bad)
push
sti
xlat
mov
xlat
sar
mov
and
pop
cmp
imul
fwait
inc
push
mov
in
mov
cmp
or
push
sti
jmp
mov
push
rol
jl
aas
fild
and
adc
adc
inc
mov
xor
mov
push
jecxz
shl
pop
sti
xlat
lods
pop
in
loope
ja
loope
std
and
and
(bad)
cld
cmps
jle
ins
hlt
loop
stos
shr
sti
int
and
jb
pop
mov
lds
dec
pop
xchg
scas
cmps
adc
xor
enter
push
les
xor
(bad)
call
pusha
jo
cli
outs
(bad)
lock
lods
(bad)
jge
inc
mov
dec
ds
cmp
leave
shl
mov
sub
jo
rcr
lock
cdq
dec
movs
or
sbb
sbb
mov
movs
and
nop
fild
sar
pushf
jle
sbb
dec
cs
lds
add
mov
(bad)
cwde
int3
or
lock
jb
in
add
pusha
fadd
push
push
mov
add
test
jae
sbb
fiadd
push
in
jbe
dec
aas
neg
js
dec
xlat
fucomp
jns
cmc
cwde
test
pusha
in
or
stc
es
test
push
mov
sub
dec
fnsave
push
sbb
sbb
jmp
push
clc
xor
sbb
(bad)
sub
shl
call
push
and
pop
xchg
inc
ret
popf
sbb
mov
sub
push
retf
aam
(bad)
sbb
dec
cmp
xchg
sub
xchg
mov
cli
sub
sub
hlt
repz
(bad)
sub
cdq
mov
gs
out
and
cmc
test
inc
fxch
aas
xor
sahf
mov
nop
mov
dec
shl
xchg
outs
push
ret
ror
cmp
dec
cmc
dec
aad
repnz
mov
movs
sbb
jnp
xchg
mov
mov
cmp
sbb
cmp
xlat
xchg
xchg
repz
xchg
lock
sbb
dec
aad
out
adc
icebp
das
test
call
xchg
push
lahf
retf
cmp
push
mov
push
sub
repnz
mov
stos
rcl
jmp
mov
jb
sub
dec
xchg
sbb
xor
outs
mov
xchg
jns
adc
das
and
data16
inc
adc
dec
mov
out
aas
jae
cmp
out
dec
repz
daa
icebp
inc
ja
add
(bad)
sbb
fdiv
popa
je
pusha
outs
inc
or
jmp
ins
and
mov
and
rcr
into
adc
test
loope
inc
call
dec
inc
mov
inc
pop
fisttp
cdq
pushf
not
inc
int
mov
xor
std
or
test
or
cld
fild
scas
aam
xchg
sti
cmp
rcl
sub
pop
mov
cwde
retf
std
int
sub
mov
or
pop
sbb
test
test
imul
push
push
jnp
pop
jbe
jb
jns
daa
retf
adc
push
pop
jg
pop
call
xchg
(bad)
int
adc
jno
popa
sbb
lea
jge
xchg
mov
call
inc
call
xor
mov
xchg
arpl
mov
inc
gs
scas
dec
lahf
ss
add
sub
jb
push
xlat
sti
mov
aad
xlat
dec
mov
in
push
push
vgatherpf0dpd
rcr
inc
xchg
int
jbe
mov
into
faddp
or
mov
into
push
jge
clc
shl
cld
push
inc
(bad)
jmp
dec
push
jmp
mov
data16
and
out
test
push
js
sub
in
sbb
in
enter
mov
and
mov
or
lahf
aam
jg
mov
mov
cmp
cwde
push
sub
sub
fild
or
ret
in
pop
xchg
adc
cli
mov
mov
into
xchg
mov
push
lahf
xor
push
ficomp
cmp
dec
jl
cmp
pop
pop
jne
bound
cmp
bound
icebp
push
test
dec
stos
int
cmps
push
test
cmp
fisubr
out
xor
and
push
lahf
push
inc
aam
dec
mov
mov
in
jmp
pop
add
test
loope
das
add
gs
(bad)
cmc
xchg
dec
jbe
cwde
mov
scas
lods
imul
movs
into
mov
and
call
test
pop
xchg
repnz
out
sbb
mov
inc
mov
add
enter
icebp
in
adc
dec
pop
adc
xchg
mov
and
fst
mov
imul
call
enter
(bad)
cmps
call
sub
and
in
stc
cmps
jmp
sbb
sbb
nop
lds
repz
movs
push
inc
jg
(bad)
push
mov
and
(bad)
cmc
xor
loope
xor
jmp
pand
sub
rcr
pusha
pop
mov
outs
jecxz
cmp
mov
mov
sbb
gs
dec
pop
xor
cld
jne
cmp
jecxz
xchg
and
add
xchg
(bad)
xor
sub
(bad)
sbb
(bad)
sahf
ins
outs
cmp
add
or
pop
sti
add
ins
sub
leave
fcomp
cmps
sub
mov
rol
or
cli
inc
aas
xlat
imul
push
std
pop
ja
pop
lahf
nop
stc
fisubr
or
jnp
bound
xor
int
mov
out
scas
loopne
sub
xchg
jo
imul
xchg
es
add
cmp
and
adc
cmp
jne
(bad)
inc
cmps
loope
jmp
jge
add
test
ins
scas
mov
sbb
les
setb
pop
jge
mov
adc
call
repnz
cmp
outs
jp
dec
iret
dec
in
fstp
dec
outs
or
sub
mov
cli
adc
and
clc
cmp
mov
push
dec
es
lock
lods
or
lds
xor
cmp
ret
stc
sub
xchg
dec
stos
test
xor
(bad)
mov
cmp
(bad)
(bad)
clc
je
jle
sbb
enter
add
push
xchg
dec
(bad)
addr16
push
rcr
mov
sbb
xchg
cmp
sbb
or
fnstsw
call
(bad)
and
aas
sub
and
pop
push
in
push
push
dec
mov
push
shl
dec
repz
and
jl
mov
arpl
sbb
outs
pop
outs
jp
out
push
jmp
pop
stc
xchg
sub
stos
js
jo
adc
enter
mov
xchg
(bad)
pop
adc
sub
movs
fild
mov
xchg
das
cmp
push
xchg
inc
jmp
fdivr
push
enter
cmp
ret
neg
stc
pushf
jns
scas
or
dec
jp
add
add
jmp
push
adc
adc
mov
mov
adc
aam
mov
je
out
cmps
ficomp
mov
fwait
push
(bad)
adc
ja
sti
push
retf
xchg
mov
fadd
lods
push
sub
cmps
push
jl
mov
jb
icebp
scas
enter
jge
sub
mov
mov
mov
inc
test
dec
sbb
sbb
je
jge
scas
pop
imul
push
outs
mov
mov
push
inc
pop
sub
loop
je
jns
sub
movups
or
dec
mov
not
and
in
mov
loope
cmp
data16
adc
pop
or
adc
hlt
sbb
push
and
adc
(bad)
mov
jge
jmp
pop
int3
fmul
add
adc
rol
jl
dec
popf
rcl
cmp
fnstsw
mov
mov
push
push
out
push
mov
xchg
sub
add
dec
jg
pusha
sub
inc
out
mov
lods
cmps
(bad)
int
enter
gs
test
push
clc
ja
popf
mov
sbb
sub
jns
sub
jp
mov
jmp
rcr
add
pop
push
inc
xlat
dec
sti
aas
imul
ds
xor
mov
jo
mov
jb
aam
ret
or
mov
data16
inc
push
ret
(bad)
pop
xor
ret
(bad)
aaa
jno
mov
jg
inc
mov
push
sbb
push
dec
mov
gs
les
or
mov
into
cld
mov
call
mov
aas
out
pusha
add
pop
clc
out
scas
int
call
dec
jle
pop
jns
jp
jmp
test
cmp
popf
loop
out
rol
ja
dec
out
pop
add
cld
sahf
aaa
loope
mov
outs
fs
mov
hlt
and
lds
mov
add
(bad)
inc
inc
inc
(bad)
inc
cmp
push
push
shl
cmp
in
leavew
int
test
sti
pop
dec
add
pop
pop
mov
clc
shl
mov
cmp
jecxz
adc
sbb
xor
sub
call
mov
add
repz
lods
retf
dec
fidivr
(bad)
fld
cmps
jg
test
cli
daa
and
push
ret
test
mov
retf
cmp
jl
add
add
push
loopne
pop
retf
adc
or
pusha
dec
add
scas
inc
test
inc
fbld
pop
cmc
mov
js
add
sbb
jle
in
ja
inc
sbb
jne
retf
sub
das
sbb
sbb
test
sbb
jl
stos
mov
out
xchg
jecxz
jo
aad
ud1
inc
inc
fdiv
shl
(bad)
mov
adc
xchg
and
adc
pushf
outs
loopne
push
jp
imul
add
bound
retf
push
mov
out
cdq
in
dec
pop
jg
ror
and
jmp
cmc
pop
movs
pop
in
fcomp
dec
xor
cmp
arpl
ins
inc
mov
mov
sbb
add
push
xor
inc
outs
repz
mov
out
mov
and
call
popa
stc
push
fldcw
sub
jg
pop
pusha
ja
hlt
xchg
lock
dec
fld
repnz
and
xor
std
cmp
push
xchg
adc
loope
push
xor
icebp
push
push
jle
push
add
dec
add
push
in
js
xor
pop
scas
sub
inc
pop
adc
mov
mov
nop
jae
jl
in
push
ret
loopne
arpl
mov
push
mov
xor
push
cmp
push
outs
ficom
enter
test
fs
pop
or
jbe
cwde
push
push
push
push
cmp
ins
and
daa
cs
fistp
pusha
retf
jg
jg
inc
div
xor
cmc
(bad)
mov
cmp
int
mov
outs
stos
pushf
adc
call
rol
mov
mov
movs
loopne
das
aas
mov
and
fsubr
or
pop
dec
and
dec
hlt
shl
out
rcr
xor
cmps
repz
pop
inc
push
mov
jecxz
in
jns
in
dec
outs
mov
cmp
inc
jmp
jmp
add
push
push
aaa
fsubr
call
dec
fmul
jle
jns
hlt
push
xchg
inc
loopne
or
ret
cmps
jge
mul
stos
cld
mov
popa
loope
and
dec
push
and
xor
add
jae
das
adc
push
fwait
leavew
stos
scas
inc
inc
mov
or
leave
pop
cmc
push
jecxz
mov
mov
es
ins
or
out
cmp
jg
inc
in
push
mov
bound
mov
retf
xor
mov
sub
aad
jno
ja
sub
dec
ror
xchg
or
shl
icebp
loope
lock
loope
lds
retf
test
stos
pusha
pop
inc
push
mov
aad
shl
mov
ss
(bad)
(bad)
push
imul
aam
pushf
add
in
jne
mov
pop
je
add
lock
aas
test
pop
aas
push
mov
push
xor
sub
out
mov
call
jns
cdq
or
jecxz
addr16
js
out
sub
cmps
pop
sub
stos
inc
sub
xor
mov
dec
push
cmp
dec
adc
inc
push
dec
sub
scas
sar
cli
push
jmp
mov
sub
jnp
(bad)
cmps
inc
test
rcl
or
mov
dec
cld
sbb
pusha
mov
daa
cmp
push
es
sbb
dec
leave
mov
jmp
adc
lahf
mov
fcomp
out
ficomp
xchg
in
sbb
rcr
xor
cmps
dec
xchg
fsubr
jne
ins
imul
(bad)
mov
sbb
or
repnz
push
inc
adc
hlt
movs
int
ins
outs
retf
pop
sbb
pop
int
push
mov
dec
mov
inc
mov
sbb
jmp
shr
lahf
fisttp
or
rol
pop
fild
(bad)
iret
stos
(bad)
mov
jbe
xlat
add
cwde
in
leave
mov
inc
pop
xor
or
mov
pop
push
cmc
je
inc
lahf
neg
out
sbb
mov
jl
and
xchg
xchg
mov
jae
out
mov
xchg
add
adc
test
xor
inc
das
sbb
out
leave
sbb
ret
movs
fnstsw
adc
in
xor
mov
pminub
sub
sub
mov
es
fist
dec
cmp
add
xchg
inc
popf
inc
out
sbb
pop
sbb
jns
ret
loope
push
mov
pop
inc
sar
lock
mov
es
xor
stos
add
push
mov
cli
jno
arpl
sbb
shl
out
jmp
rcl
cmp
mov
add
out
jp
dec
xchg
mov
imul
cwde
pop
(bad)
xor
pusha
sbb
xlat
call
mov
je
jae
in
in
jns
mov
add
and
gs
(bad)
push
mov
dec
push
imul
shl
push
push
mov
cmp
dec
jbe
je
and
cwde
xchg
push
retf
retf
xchg
aad
into
mov
sbb
dec
sar
mov
stos
and
jmp
cmp
fadd
mov
aaa
dec
mov
frstor
cmp
pushf
dec
out
pop
lahf
sbb
jmp
xor
adc
sbb
mov
push
push
fimul
ins
push
mov
jecxz
test
rol
push
inc
arpl
push
call
mov
pop
mov
push
scas
shr
jbe
idiv
ja
call
paddsw
(bad)
xor
fs
icebp
mov
ins
mov
addr16
movs
sbb
addr16
ins
test
xlat
dec
pushf
sub
stc
lock
cmps
push
fwait
xchg
and
mov
xor
xchg
add
sbb
mov
xor
aaa
ins
adc
je
shl
inc
imul
adc
dec
das
push
in
mov
shl
out
ss
scas
mov
sub
mov
push
test
sbb
xchg
lea
popf
ror
pop
sbb
mov
add
rol
ret
add
scas
mov
loope
aas
movs
pushf
mov
jp
sub
pop
sub
retf
shr
pop
jnp
movs
and
in
es
cmp
stos
mov
push
push
cmp
hlt
xchg
out
xor
mov
movs
ret
inc
dec
sar
dec
test
or
xor
dec
mov
ins
ss
jmp
popf
ret
enter
test
cwde
lea
cli
daa
into
enter
push
mov
aas
lods
mov
rcr
dec
pop
xchg
or
test
pop
ins
cli
and
xchg
and
push
push
dec
push
ins
jae
and
inc
push
or
retf
stos
inc
adc
dec
jmp
pop
sbb
daa
(bad)
xchg
cmps
xchg
dec
add
or
jnp
ja
shl
cli
in
mov
test
clc
mov
xchg
sub
(bad)
repz
xchg
js
test
push
mov
dec
cmp
push
mov
aas
out
adc
cdq
dec
call
and
xchg
pop
ror
retf
push
and
jbe
loope
and
cmp
cmpxchg
and
jb
sbb
aam
adc
jbe
add
mov
scas
xchg
inc
imul
retf
sbb
cmp
aam
sahf
or
clc
fbld
cmp
aad
jecxz
jbe
cmps
push
cdq
imul
outs
loopne
(bad)
xor
pop
mov
jae
pushf
mov
(bad)
arpl
enter
jnp
cmps
and
lea
mov
stos
pop
fst
sub
mov
lds
sbb
out
dec
int
jbe
call
cdq
(bad)
dec
in
jecxz
bound
mov
xor
mov
inc
int
push
(bad)
(bad)
into
push
pop
xchg
ffree
mov
inc
into
in
push
fsub
movs
(bad)
imul
loop
pop
mov
mov
fwait
ins
lahf
mov
ins
mov
mov
pushf
dec
pop
xchg
sub
inc
ds
xor
data16
loop
push
add
sub
sub
(bad)
jg
cli
jne
into
mov
fs
stos
sahf
xchg
mov
mov
mul
mov
lods
push
adc
ds
iret
sbb
out
jo
mov
mov
mul
movs
push
retf
arpl
inc
adc
or
sub
rol
rcr
in
mov
stos
adc
pop
dec
lea
lock
mov
retf
push
push
cmp
in
pop
mov
sbb
scas
pop
call
stc
jae
out
cmp
pop
mov
xor
fidivr
fsub
or
push
mov
popf
test
aaa
pop
mov
add
jg
or
mov
sub
and
pop
cli
(bad)
dec
cmp
cwde
cmps
js
pop
push
imul
shl
js
cmps
mov
sub
(bad)
les
push
xor
loope
dec
fst
cmps
xor
sbb
pop
or
or
movs
add
jno
jno
sub
pop
out
jp
sub
das
ins
cmp
out
xor
aas
and
scas
gs
stos
into
cdq
mov
in
mov
push
mov
jecxz
sub
mov
arpl
mov
xor
push
inc
push
cdq
add
jmp
pop
stc
mov
jne
add
hlt
dec
mov
pop
in
retf
das
jmp
jno
in
aaa
ss
(bad)
leave
mov
mov
sbb
aad
leave
call
mov
xor
fiadd
cmp
push
push
(bad)
lea
cmps
ins
sbb
jns
push
fxch
xor
(bad)
xchg
pop
icebp
(bad)
stc
lods
and
dec
xor
aas
out
sbb
inc
cmps
or
shl
repz
sub
xchg
mov
repnz
fcmovnbe
pop
jae
xor
xchg
inc
aad
movs
xchg
shl
iret
mov
je
test
loopne
xor
repnz
int
fnstcw
iret
nop
gs
leave
sub
sbb
leave
shl
(bad)
movs
movs
fnsave
fmulp
mov
and
adc
sbb
mov
fdiv
push
into
and
mov
cmp
out
scas
adc
fimul
into
cdq
rol
or
cmp
mov
cmp
cld
retf
pop
mov
enter
(bad)
clc
inc
adc
pop
les
lods
cdq
sub
xchg
sbb
xor
sahf
sbb
retf
aad
pop
test
push
xor
pop
retf
add
aam
push
stc
push
inc
aad
iret
and
pop
dec
jns
jl
push
mov
(bad)
leave
out
aas
shl
mov
sahf
push
mov
enter
ret
xor
aam
jae
scas
out
inc
pop
xchg
xor
imul
in
xchg
sub
mov
mov
sar
in
push
in
out
xor
pop
and
xor
push
test
loopne
push
rcr
jmp
out
cs
cmp
es
jecxz
fldcw
xchg
push
loop
jle
and
test
(bad)
loop
mov
fcomi
mov
jp
pop
fiadd
cmps
shl
jne
cwde
push
adc
jge
std
cmp
mov
push
add
jle
(bad)
xlat
xchg
push
ds
jne
xchg
push
jnp
pop
push
cmp
in
mov
jbe
adc
inc
sub
xor
dec
push
mov
dec
cmps
test
jnp
mov
sbb
call
adc
xchg
sub
mov
dec
(bad)
mov
cmc
fwait
rol
lahf
(bad)
mov
stc
add
(bad)
cli
lock
sti
push
sbb
cmp
hlt
mov
call
std
repnz
xchg
push
lods
jnp
mov
int3
mov
xchg
push
mov
push
dec
cwde
in
fcomp
dec
mov
das
jbe
call
sbb
out
mov
cdq
pop
lock
cmp
in
inc
sbb
cmp
add
jnp
push
inc
ret
mov
in
aam
dec
push
(bad)
mov
push
mov
fcomp
jg
and
dec
mov
es
mov
pop
cmc
stos
push
xchg
and
ds
xor
dec
(bad)
popa
xor
ds
out
inc
mov
mov
ins
add
leave
lods
jmp
cmp
push
push
fwait
xor
xor
fild
xor
pop
fdivr
fidiv
xchg
or
loop
cmp
sbb
mov
cmp
mov
jg
pushf
sub
(bad)
(bad)
mov
pop
fisttp
ds
ror
xchg
add
leave
or
out
push
cmps
(bad)
stos
cld
xchg
adc
sub
in
xchg
xor
jne
mov
fs
sbb
cmc
hlt
pop
pop
inc
mov
add
out
mov
lds
adc
fcomp
cdq
add
or
prefetchnta
cmps
jmp
aad
arpl
fimul
lock
add
repz
test
mov
dec
(bad)
ins
fldenv
jae
lock
xor
in
cs
fwait
repnz
and
push
push
bound
or
loope
aas
out
ins
mov
test
(bad)
jge
daa
std
add
daa
sub
jno
add
(bad)
push
pop
je
cmps
dec
adc
pop
push
inc
mov
test
adc
dec
adc
data16
lock
fiadd
or
jmp
jmp
jge
sub
dec
repz
pop
cmp
and
outs
(bad)
int3
push
dec
cmp
cmp
push
lea
lock
mov
cwde
xchg
cmps
push
movsx
(bad)
in
inc
jae
and
sub
adc
xor
int3
or
je
sbb
ss
movs
mov
popa
test
int3
mov
adc
out
sub
push
sbb
xchg
inc
retf
sahf
aam
mov
out
and
or
fs
test
pop
adc
xchg
mov
inc
mov
iret
mov
dec
in
cdq
pop
dec
pop
mov
in
add
outs
adc
mov
out
retf
cmc
cmps
ja
gs
mov
shl
rcl
mov
(bad)
cmc
lea
fcomp
out
mov
icebp
or
add
pop
into
xchg
push
push
fstp
mov
iret
dec
stc
je
ins
sub
test
xchg
or
sbb
cmp
xor
out
jg
mov
push
neg
add
mov
pop
(bad)
ret
xchg
adc
bound
jge
lahf
jae
adc
popf
loope
mov
out
adc
cmp
aaa
iret
loope
ds
mov
xor
cmps
sub
mov
and
mov
inc
add
nop
cmp
xor
inc
jle
data16
or
es
ss
int
and
push
sub
test
ret
and
and
data16
int3
xchg
mov
cld
cwde
cdq
pop
xor
aaa
xchg
jp
add
pusha
mov
push
test
xor
inc
pop
and
inc
fcmove
leave
inc
sti
mov
call
jle
cld
xchg
pusha
daa
(bad)
daa
jg
(bad)
and
add
sbb
daa
fcmovb
inc
adc
xor
out
cmp
mov
push
jo
nop
xor
(bad)
(bad)
cmps
sahf
mov
data16
test
std
bound
rcl
xchg
mov
xor
or
cli
arpl
mov
call
mov
cld
(bad)
mov
add
sbb
mov
and
push
out
and
sar
aad
mov
pop
xor
data16
rcr
popa
fld
out
rcr
in
xor
lods
clc
cmp
jle
js
sub
mov
inc
push
stos
jne
call
mov
xchg
xchg
dec
jmp
sub
jge
adc
(bad)
in
pop
sbb
mov
sub
pop
out
xchg
xor
inc
sbb
imul
std
sbb
lods
sub
mov
xchg
aaa
(bad)
je
push
push
jle
test
imul
inc
leave
stc
aas
adc
sbb
pop
xor
or
sbb
cmc
dec
sub
imul
add
arpl
and
popf
and
jl
sti
sub
das
(bad)
jecxz
mov
cmp
(bad)
sub
jmp
push
arpl
pushf
test
mov
sub
dec
or
adc
jmp
dec
inc
sub
jl
mov
aas
xor
mov
cmps
mov
imul
cmps
cmp
mov
fiadd
iret
mov
xor
or
push
mov
push
sub
ja
sbb
cmp
outs
mov
add
dec
mov
mov
gs
xor
pop
in
sbb
(bad)
sbb
movs
int3
xlat
dec
mov
ror
push
inc
stos
(bad)
or
push
or
in
test
lock
bound
cmc
xlat
imul
int3
adc
outs
xlat
pop
(bad)
mov
adc
mov
sahf
loop
sbb
xchg
das
dec
cmp
mov
pop
cs
mov
add
jle
sbb
int
(bad)
inc
lods
adc
xor
(bad)
jne
mov
xchg
out
adc
nop
adc
pop
addr16
push
shr
inc
sbb
fwait
adc
call
inc
jnp
stos
mov
in
mov
inc
jae
mov
jae
and
jbe
test
pusha
jle
aam
jg
xchg
add
dec
ret
test
dec
sub
mov
jg
dec
add
jmp
jmp
push
jae
jmp
push
add
(bad)
imul
add
sub
xchg
cmc
push
inc
add
imul
adc
dec
xchg
imul
fucomip
push
fidiv
arpl
sub
mov
inc
out
xlat
sub
sbb
lds
cmp
push
shl
sbb
or
outs
push
sbb
int
lods
adc
mov
and
or
jmp
imul
mov
adc
inc
mov
cwde
add
sbb
adc
(bad)
or
inc
xchg
fisubr
mov
ds
jno
out
(bad)
cmp
pop
(bad)
ret
cmp
cmps
and
je
or
(bad)
gs
mov
xchg
fimul
aad
or
adc
xor
(bad)
(bad)
(bad)
push
dec
cwde
(bad)
fisubr
in
ror
fcomip
cmp
cmp
std
xchg
mov
addr16
ffreep
push
aaa
inc
retf
fdivr
and
inc
jp
mov
(bad)
push
adc
out
stc
inc
add
ins
cdq
mov
fbstp
test
lods
das
pop
dec
bound
xlat
mov
jmp
sub
add
mov
inc
add
add
xor
xor
in
bound
inc
das
arpl
popa
pop
push
cli
dec
fidivr
cmp
test
xchg
fiadd
ss
and
xor
dec
jp
jnp
test
std
into
cmp
iret
sbb
ret
cmc
add
movs
gs
call
test
mov
mov
aam
test
iret
pop
movs
push
(bad)
stos
lahf
xor
leave
mov
mul
pop
dec
lahf
gs
dec
inc
pop
movs
clc
adc
adc
inc
jecxz
sbb
push
stos
cmp
retf
cwde
scas
movs
ins
dec
jnp
out
pop
(bad)
dec
mov
jne
jle
hlt
push
pop
fdiv
jl
aad
jmp
std
jmp
ss
loope
jnp
jmp
and
movs
stos
iret
int
sbb
pushf
jae
add
aam
and
icebp
(bad)
jae
not
sub
test
adc
imul
jne
test
and
adc
pop
mov
push
and
push
jnp
pusha
and
imul
cmpxchg
retf
push
and
retf
jl
dec
int3
add
cmps
mov
int
test
(bad)
repz
out
sub
pop
lahf
icebp
sbb
and
sbb
lahf
push
inc
out
in
je
repnz
jmp
jmp
adc
ja
sub
xchg
es
xchg
std
or
mov
xchg
dec
jle
sub
jg
jl
sbb
inc
xor
dec
loopne
xchg
adc
in
xchg
jo
scas
jmp
xor
mov
loopne
cs
mov
cwde
xor
imul
scas
mov
lahf
add
pusha
mov
dec
int
pop
imul
fild
loopne
mov
outs
lock
jle
push
sbb
pop
xor
(bad)
wbinvd
stc
lahf
jl
jno
arpl
lods
hlt
mov
sub
repnz
xchg
mov
mov
lahf
mov
cli
mov
rcr
adc
loopne
push
out
pop
sbb
(bad)
aas
mov
push
adc
dec
icebp
dec
cmp
lahf
test
mov
lahf
sbb
call
in
stos
sbb
aas
lods
jns
mov
fisttp
ins
push
sbb
push
scas
sub
mov
mov
inc
jge
jmp
mov
push
das
xchg
add
data16
mov
lock
dec
jae
js
shr
pop
jbe
pop
push
or
mov
mov
out
inc
mov
fcom
mov
jbe
mov
rol
rol
aaa
mov
gs
add
test
loop
out
xor
popf
sbb
mov
sub
aad
add
test
test
out
test
psrlw
push
jo
imul
add
dec
or
fs
out
push
gs
add
inc
out
inc
or
dec
cmp
mov
or
ficom
out
adc
loop
sbb
shl
xchg
imul
adc
call
clc
das
test
xchg
movs
lds
jp
je
ins
arpl
pushf
aad
adc
sar
imul
jle
rcr
(bad)
push
imul
or
jns
dec
mov
adc
daa
pop
pop
cmps
xchg
aad
dec
pushf
dec
lock
fild
movs
mov
inc
fadd
jbe
lods
adc
add
mov
and
out
std
xchg
push
push
mov
jge
sahf
xchg
test
nop
or
and
sbb
fld
mov
cld
xor
js
sub
lods
scas
fadd
xor
mov
outs
mov
(bad)
and
fnstenv
pop
dec
arpl
inc
(bad)
xchg
or
cmc
pop
popa
lods
shl
adc
mov
aaa
pop
sbb
jmp
out
lahf
sahf
push
jne
test
lea
rcl
sub
mov
sbb
push
ror
dec
mov
ror
arpl
jmp
dec
pop
cli
dec
popf
jnp
jne
aad
fistp
data16
(bad)
xor
push
pop
bound
in
mov
es
add
pop
mov
(bad)
popa
jle
xchg
pop
(bad)
icebp
mov
int3
mov
loopne
ret
sub
into
hlt
mov
loopne
fstp
and
int
lahf
fwait
dec
inc
int3
xor
pop
clc
shl
push
ins
mov
jb
pusha
dec
mov
push
and
mov
lods
pop
les
add
xchg
xor
iret
fsub
cs
or
arpl
mov
test
push
inc
cwde
push
inc
mov
call
sub
jns
loop
lahf
test
aas
aam
dec
popa
iret
mov
inc
into
int
mov
xchg
retf
xor
cmp
mov
cmp
outs
scas
cmc
mov
mov
push
mov
jne
addr16
lahf
popf
mov
stos
or
jp
dec
or
xor
and
ror
stc
inc
hlt
stos
daa
and
inc
push
or
test
mov
adc
out
xor
pop
scas
cmp
fwait
add
pop
jne
not
sub
retf
jmp
sub
inc
mov
mov
mov
sbb
sar
pushf
mov
push
cmc
enter
imul
sti
jb
movs
nop
mov
sbb
push
or
clc
loop
push
cmp
fsubr
sar
movs
jmp
pop
ja
popa
iret
fadd
lahf
jp
je
lahf
mov
sub
cmp
(bad)
aad
pop
xor
adc
mul
inc
outs
cmc
out
adc
test
cdq
dec
add
sub
or
dec
(bad)
pop
popf
mov
jo
cmp
je
rol
jmp
imul
shl
ds
sub
outs
xor
push
out
xor
enter
gs
xor
stc
cmp
je
add
cmp
clc
jle
clc
adc
sub
lods
sbb
fiadd
test
imul
cmps
std
push
jmp
adc
adc
mov
dec
pusha
mov
daa
push
ror
std
mov
into
inc
test
and
cmp
jge
cld
dec
mov
test
repnz
pusha
cli
shl
inc
dec
xchg
js
pop
cmps
in
inc
xor
ret
aam
pop
int3
(bad)
fisub
jno
out
lods
lds
mov
cli
jae
mov
sub
arpl
sbb
xor
lahf
(bad)
arpl
mov
cmp
xor
cmps
bound
ja
bound
loop
hlt
aaa
rcl
ja
sbb
add
lds
mov
xchg
push
lahf
cmp
mov
outs
js
sbb
neg
jae
fscale
imul
pop
push
sahf
retf
outs
test
fimul
movs
outs
adc
popa
ror
mov
pop
sub
push
popa
fbstp
cmp
adc
test
mov
sub
hlt
mov
in
mov
les
and
test
daa
and
stos
out
fwait
cmps
outs
cmp
je
std
push
mov
xchg
lds
bound
lods
cmc
cwde
repnz
pop
adc
bound
in
and
pop
fst
stos
out
xor
jecxz
in
loope
push
cdq
or
sub
std
xor
pop
jecxz
and
add
pushf
sub
movs
inc
push
pop
sbb
ja
ret
xchg
sbb
xchg
addr16
cs
(bad)
push
leave
and
and
mov
mov
ins
add
call
add
imul
dec
(bad)
(bad)
pop
popa
jmp
out
leave
loop
aad
sbb
out
jbe
je
ins
or
or
jp
int
sub
sub
inc
fmul
jmp
in
daa
xor
imul
push
sub
(bad)
mov
xchg
inc
inc
gs
lahf
push
aaa
pop
pop
bnd
sbb
sub
jmp
fdivp
xchg
sahf
sbb
mov
mov
nop
outs
jno
imul
dec
scas
sbb
mov
lods
lods
inc
out
scas
add
(bad)
ret
out
hlt
js
sbb
jp
add
pop
out
inc
mov
loop
mov
gs
add
or
mov
lahf
ja
pop
xor
stc
xchg
and
xor
sbb
mov
sahf
iret
xchg
bswap
push
xchg
movs
xor
scas
ins
inc
and
jmp
and
sub
sub
cld
out
and
popa
jg
shl
stos
push
cld
cs
imul
pop
sbb
aas
js
inc
das
loopne
scas
jae
inc
jnp
inc
dec
push
stos
cwde
(bad)
mov
adc
mov
xchg
sub
in
movs
inc
adc
(bad)
push
std
enter
mov
xor
pop
jge
pop
xor
lock
mov
jb
jecxz
pop
jmp
push
mov
push
xchg
cmp
mov
cld
lahf
bound
leave
inc
imul
scas
jge
pop
and
out
push
test
xor
clc
int3
dec
out
pop
xchg
jg
pop
sbb
outs
xor
stc
cli
ins
retf
lea
xchg
jb
push
mov
fsubr
and
(bad)
or
push
mov
cmp
cdq
loop
out
cmp
push
xor
cdq
or
std
in
add
ret
mov
pop
sbb
sti
ins
or
das
icebp
mov
xchg
pushf
push
add
mov
test
pop
nop
and
retf
cmp
test
push
(bad)
out
loop
push
add
xor
idiv
push
imul
(bad)
loopne
dec
and
out
pop
or
pop
je
adc
xor
sbb
push
(bad)
bound
adc
js
fld
out
and
imul
inc
add
(bad)
test
(bad)
mov
shl
jno
cmp
lods
fst
cwde
xchg
mov
mov
clc
in
adc
lahf
cmc
scas
pop
add
xchg
aas
jne
stos
add
call
dec
sbb
fmul
adc
nop
push
test
sub
shl
jle
push
leave
shl
hlt
adc
ds
mov
loope
push
ins
mov
repnz
inc
dec
gs
retf
mov
stc
or
outs
add
imul
push
in
in
loopne
push
xor
cmp
push
xor
dec
mov
fsub
fstp
adc
in
inc
and
call
pop
ja
mov
push
lods
scas
and
pop
test
rcr
inc
push
cmp
jge
push
mov
pop
sub
ret
xchg
xor
jl
out
mov
mov
sbb
adc
pop
add
mov
ja
stos
pushf
push
mov
jle
pop
mov
push
rcr
(bad)
xchg
shl
dec
push
in
scas
mov
jecxz
mov
ror
xor
aas
xchg
xor
inc
cmp
jl
mov
aas
mov
gs
imul
inc
les
retf
xchg
shl
jg
push
lock
xor
ds
adc
push
js
add
mov
and
stos
push
je
sbb
adc
sbb
mov
aad
ror
cmp
mov
aas
jg
cmp
push
cmp
ret
pop
invd
popf
mov
sbb
sub
pop
popa
stc
xor
outs
mov
sar
retf
outs
xor
dec
dec
ins
data16
out
fbstp
adc
pop
push
sbb
push
jmp
mov
jp
aas
dec
add
adc
jmp
nop
dec
jb
xlat
xchg
inc
ds
sub
cmp
popa
jle
out
repnz
pop
repnz
fdivr
cwde
sub
ss
cmp
popa
daa
addr16
add
mov
dec
lds
adc
mov
dec
leave
add
in
mov
mov
scas
test
nop
add
das
push
in
cld
repnz
jle
xchg
cmp
and
mov
mov
repnz
sti
jno
pop
loop
push
sbb
push
inc
icebp
int
addr16
jecxz
lea
jbe
jnp
jmp
bound
(bad)
xchg
jo
xlat
jp
push
mov
xlat
imul
aam
aam
data16
jnp
dec
ins
mov
pop
pop
adc
bound
inc
sbb
iret
fs
add
sub
pusha
dec
and
div
sbb
sub
icebp
pop
lahf
fwait
jl
leave
daa
xchg
add
fisubr
int3
jle
pushf
mov
mov
jb
adc
imul
jle
push
lods
sub
dec
sub
add
ins
xchg
mov
jnp
sub
xchg
iret
lods
or
xor
cmc
sar
aaa
sbb
test
dec
sub
dec
mov
pop
jle
je
push
and
fxtract
call
je
lahf
sub
and
cmp
das
inc
pop
jmp
pop
jge
and
sti
inc
mov
scas
jecxz
dec
fwait
sbb
repnz
xor
mov
jmp
dec
ror
cmp
xchg
shl
mov
jmp
sbb
call
pop
and
jmp
xor
push
shl
bound
aad
xchg
add
inc
push
in
cmc
mov
or
mov
push
loop
jnp
dec
cmp
jp
fld
dec
scas
pop
dec
and
pop
out
jmp
loopne
push
xor
es
sub
mov
js
add
ret
loope
mov
(bad)
push
loopne
mov
in
cs
jnp
mov
movs
mov
push
sbb
sbb
xchg
inc
jo
mov
loop
jg
(bad)
je
adc
xor
popa
(bad)
ins
pushw
xor
sbb
or
mov
mov
fimul
les
arpl
cmp
add
stc
cmp
adc
lods
fidivr
sub
(bad)
inc
jle
inc
call
popa
popf
aaa
cmp
or
jp
and
xor
pop
rep
xchg
mov
stc
xchg
xlat
in
fdiv
lock
iret
and
popf
test
int3
and
push
movs
xlat
jge
dec
pop
and
jp
fisttp
xor
add
jns
cmps
sbb
add
dec
sub
push
ror
sar
ins
and
or
std
pop
imul
jnp
call
cmp
and
dec
jl
xchg
loope
das
pop
cld
dec
mov
sbb
pusha
call
xor
lods
rcr
sub
mov
(bad)
into
mov
or
add
bound
xchg
mov
pusha
lods
fisubr
loopne
idiv
dec
push
fsubr
out
(bad)
jmp
ret
scas
shl
xor
je
nop
push
pushf
pop
ins
lods
xchg
aad
test
mov
mov
(bad)
out
adc
push
js
aam
dec
xchg
ja
inc
jmp
lods
nop
mov
jp
into
or
dec
sbb
mov
fldenv
int3
bound
stos
ret
hlt
loope
jmp
(bad)
popaw
(bad)
pushf
sub
(bad)
mov
das
xor
std
stos
push
(bad)
mov
or
mov
sub
xor
and
and
fwait
pushf
cmps
xchg
and
aaa
inc
jl
pop
xchg
arpl
mov
pop
xchg
mov
jg
push
xchg
sub
xchg
ret
fadd
fstp
sbb
ins
push
jae
sbb
sub
icebp
jle
cmp
add
sbb
js
mov
retf
sub
and
mov
sub
icebp
push
js
aad
repz
cwde
and
add
test
xor
xor
and
mov
mov
movs
or
test
rol
xchg
xor
je
stc
fld
in
sar
push
lods
int
pop
and
push
call
cmps
fadd
mov
popa
xchg
setnp
aas
das
pop
(bad)
outs
cwde
mov
neg
add
out
ins
sub
cmp
daa
imul
push
xor
cdq
sbb
leave
test
sub
push
inc
and
mov
jno
arpl
push
xchg
ins
fimul
and
cmp
and
ret
push
movs
shr
sub
or
jo
dec
loop
imul
mov
jle
mov
mov
outs
adc
in
sub
jg
in
jge
sbb
mov
mov
loopne
leave
test
int
sbb
sub
and
sub
jnp
out
push
mov
mov
lods
test
dec
cmps
dec
cmps
jmp
pop
in
jmp
out
hlt
or
xor
cli
or
dec
dec
dec
aam
add
mov
ds
cwde
mov
ins
sbb
imul
repnz
ficom
ret
mov
push
(bad)
fiadd
adc
out
lahf
popa
in
cmp
mov
or
mov
lock
jecxz
lea
sub
sbb
pop
sahf
cmp
sub
les
dec
push
sbb
or
test
rcr
cdq
cld
(bad)
out
cli
mov
jno
sub
add
lea
icebp
outs
dec
mov
add
(bad)
cmp
cmp
movs
and
push
lock
mov
cmp
and
jns
dec
push
call
test
adc
cld
or
jmp
mov
pop
inc
sbb
jle
aam
pop
inc
ins
xor
xor
jge
cdq
icebp
sbb
ss
daa
clc
leave
leave
fdiv
scas
xor
loopne
es
jno
inc
rcr
jne
mov
into
xchg
fadd
ret
in
pop
sbb
mov
je
dec
aam
mov
bound
push
fbstp
sbb
jmp
lods
cmps
pop
pushf
adc
xor
dec
dec
and
mov
hlt
push
xor
popf
ins
xor
or
in
aaa
dec
or
push
push
push
push
lock
pop
or
xor
stos
int3
fcmovbe
inc
in
jo
(bad)
fwait
sbb
mov
xor
mov
mov
retf
cmp
sbb
lock
(bad)
aad
outs
scas
mov
adc
imul
dec
loopne
mov
arpl
push
hlt
sahf
nop
movs
mov
ins
and
(bad)
(bad)
in
mov
cmps
in
and
js
lods
push
call
dec
sbb
xor
pushf
movs
or
cdq
fld
test
push
out
in
mov
shr
and
cmp
das
std
aas
pop
pop
ret
mov
popf
jge
xor
addr16
jb
daa
scas
cld
and
mov
push
call
xchg
mov
or
add
aaa
push
xchg
mov
loopne
or
mov
cwde
test
shl
cs
clc
sub
aad
jp
add
fs
pusha
xor
aaa
or
cld
inc
fs
in
push
cmp
loop
in
stos
dec
fsubr
popf
xchg
dec
dec
push
push
mov
ret
mov
and
nop
pop
sbb
in
imul
int3
pusha
dec
imul
cmp
cmp
aaa
sub
jae
xchg
jne
dec
mov
xchg
dec
adc
cmp
inc
add
mov
and
xchg
mov
push
mov
cmp
movs
daa
sub
fsub
call
popf
mov
and
dec
push
neg
adc
daa
cdq
sbb
pushf
mov
retf
adc
adc
sub
int3
mov
inc
xlat
ds
sub
lods
sub
test
js
sar
test
push
jnp
jl
dec
sub
aas
jb
cmp
fidiv
pop
retf
inc
pop
push
jne
and
lods
sar
les
xor
jno
in
test
and
icebp
pop
sub
in
jnp
sbb
std
sbb
xor
mov
leave
xchg
pop
scas
jno
fmul
fwait
aas
xchg
push
jl
loopne
push
loope
push
jne
jbe
cmp
mov
data16
addr16
pop
cmp
sub
inc
add
call
cdq
add
cld
xchg
mov
sahf
mov
jl
or
dec
xor
(bad)
jnp
dec
push
mov
je
loope
aam
cmp
jmp
je
push
movs
scas
cmp
dec
dec
outs
mov
mov
push
ret
(bad)
mov
outs
jno
dec
(bad)
dec
inc
inc
imul
shl
ret
mov
popa
sar
mov
jns
cwde
gs
add
fbstp
mov
out
pop
fisubr
cmp
mov
fs
xchg
xchg
push
scas
add
ret
out
and
xchg
push
cdq
ret
stos
or
inc
fwait
xor
cmps
int3
jae
adc
adc
cmps
call
adc
cmps
js
ins
mov
dec
mov
jg
mov
js
sub
hlt
aaa
test
mov
mov
loopne
das
ins
push
nop
jge
test
enter
in
cmp
ret
mov
push
dec
lock
cld
rol
mov
jno
pop
pop
pop
dec
fyl2x
bound
out
jae
adc
rcl
push
xchg
outs
rol
ins
rcr
inc
jbe
push
push
or
popf
cmps
and
push
test
pop
inc
cmovb
sub
pusha
movs
pushf
sub
add
push
(bad)
mov
sub
sti
pop
mov
dec
sti
retf
mov
xchg
imul
sbb
test
les
push
test
jae
add
es
mov
mov
xchg
mov
(bad)
and
pop
mov
cmp
test
lds
push
xchg
xchg
push
fldl2e
iret
out
lock
sub
fadd
(bad)
adc
cmp
sbb
lea
mov
ret
mov
into
cmp
sub
popf
int
sub
push
push
pop
inc
test
(bad)
fldcw
iret
stc
or
push
jne
mov
movs
mov
dec
sub
mov
out
or
ret
xchg
scas
mov
das
loope
sub
jbe
sbb
mov
dec
inc
xchg
movs
pushf
(bad)
scas
mov
fs
ror
cmp
pushf
mov
(bad)
popa
aam
cmp
imul
sbb
inc
cmp
push
and
retf
loopne
pop
mov
jo
inc
leave
cli
jo
jno
ins
mov
cmps
loope
es
scas
xchg
sbb
cmp
(bad)
and
dec
cs
xchg
xor
out
and
jae
call
jg
or
(bad)
push
bound
inc
in
or
cmp
(bad)
data16
into
stos
stos
pop
dec
jl
stos
aam
and
lea
hlt
pop
mov
into
inc
(bad)
sub
int3
repnz
pop
cmp
sbb
xchg
sbb
inc
movs
inc
fcom
dec
adc
scas
neg
mov
jmp
pop
sbb
popa
jmp
inc
mov
into
push
(bad)
das
adc
test
inc
stc
out
fsub
jmp
xchg
nop
lock
inc
outs
pushf
pop
add
fsubr
int3
sub
fnstcw
dec
xchg
icebp
rol
retf
mov
cmc
jmp
inc
add
adc
cmps
popa
xchg
push
in
xor
int3
repnz
fs
jmp
add
outs
sahf
data16
ins
pop
scas
sub
fldenv
or
or
arpl
xor
enter
pop
or
sbb
jae
jmp
inc
push
add
addr16
out
ffree
mov
out
and
xchg
sbb
sbb
pop
cld
pop
repz
xor
dec
inc
xor
add
leave
mov
sub
add
and
mov
adc
mov
xchg
loopne
nop
mov
lds
(bad)
sbb
sbb
test
or
js
pop
neg
add
jmp
dec
jmp
jle
(bad)
xlat
xchg
pop
(bad)
test
cmp
add
out
jbe
inc
fisubr
jno
add
jge
pop
push
fcom
scas
mov
call
cwde
or
(bad)
repnz
popa
xchg
stos
in
jge
jmp
scas
sti
es
ins
pusha
inc
pop
inc
leave
gs
out
mul
loop
js
scas
scas
in
and
push
dec
mov
xor
ss
and
in
repnz
call
cmp
sub
loopne
test
not
subps
jnp
dec
lsl
mov
mov
call
mov
pop
sbb
cli
mov
call
pushf
xor
jle
pop
add
inc
hlt
inc
inc
fisub
lds
pusha
in
leave
jecxz
inc
call
xchg
jge
cmps
inc
dec
sbb
cmp
mov
mov
mul
call
pop
bound
es
jg
xor
or
mov
into
mov
(bad)
popa
test
jns
and
xchg
cmp
push
imul
dec
push
in
mov
mov
cmp
jbe
xor
fnstsw
jle
mov
xlat
ins
arpl
jbe
sub
xor
cwde
adc
and
retf
inc
gs
jmp
dec
fsubr
stos
movd
push
inc
test
in
stos
cwde
and
cdq
lds
std
loopne
cmps
addr16
add
jg
into
mov
cmc
xchg
sub
data16
stc
test
outs
in
out
dec
pop
shr
cmps
and
pushf
not
push
xor
test
mov
je
add
cmp
xchg
iret
xor
xor
cmp
call
xchg
xchg
sti
ds
xor
sbb
daa
push
add
sbb
and
scas
and
pop
pop
in
cld
cmp
(bad)
cmc
imul
jp
lods
and
pusha
test
pop
pop
dec
dec
or
dec
call
push
(bad)
out
repz
lahf
xchg
push
mov
imul
inc
xchg
stos
push
and
sbb
fwait
pop
pop
cmps
fadd
sub
movs
clc
movntps
and
arpl
push
xchg
mov
push
fucom
popa
mov
cdq
aaa
xor
push
push
imul
movs
cmps
wrmsr
xchg
in
dec
test
mov
test
push
(bad)
inc
pop
scas
cmp
div
(bad)
sub
jmp
ins
cmp
lea
sub
push
inc
fisttp
daa
sub
movs
iret
cmp
mov
jmp
lods
add
pop
fadd
push
inc
adc
push
mov
stos
mov
sub
int
pop
push
stos
pop
pushw
cmp
jmp
mov
cmp
push
push
sub
cmps
mov
pushf
stos
inc
mov
ftst
nop
xchg
adc
popa
popf
add
inc
mov
int3
add
or
cmp
push
push
in
lds
out
sub
ret
mov
cmp
dec
jo
aaa
xchg
xchg
dec
mov
push
js
mov
jmp
cmps
mov
and
add
adc
ds
push
jo
leave
push
xor
(bad)
gs
aam
cmp
ins
sbb
or
inc
cwde
sbb
inc
sbb
mov
out
xor
cmp
mov
sbb
pop
cdq
xchg
pop
pop
lods
push
gs
clc
loopne
xor
xor
cli
xchg
pushf
jno
xor
adc
add
or
pop
icebp
mov
aam
mov
add
sbb
popf
les
xchg
push
mov
(bad)
aad
add
mov
popa
lods
(bad)
call
dec
mov
push
lock
clc
mov
call
stc
push
or
xor
imul
movs
(bad)
out
and
je
rcl
add
push
add
cmp
loopne
pop
(bad)
push
cmp
cmp
jno
jg
pop
call
sti
out
inc
stos
lods
adc
loopne
mov
jmp
pusha
scas
test
sub
cmp
ss
add
xrelease
mov
fidiv
sahf
in
(bad)
popf
pop
nop
fwait
xor
xor
fs
xchg
adc
mov
ins
cwde
xlat
dec
sub
test
int
iret
lahf
nop
mov
mov
ret
xor
pop
shr
cmp
mov
inc
inc
cld
(bad)
shl
and
sbb
sub
jmp
dec
and
add
ret
popf
pop
repnz
imul
sub
ss
adc
jecxz
sub
pop
and
mov
dec
lea
dec
js
clc
inc
out
js
or
jb
call
adc
das
sbb
xchg
sbb
inc
xor
mov
jne
imul
pop
loop
(bad)
out
cmps
mov
inc
inc
lea
sbb
pop
daa
xchg
and
xchg
mov
fbld
out
jae
xchg
out
sub
test
enter
cdq
shl
mov
pop
xlat
arpl
popf
adc
jo
and
maxps
mov
nop
sub
mov
jl
xlat
arpl
je
mov
test
cmp
loope
push
cmp
addr16
ja
cs
loop
std
sub
ins
pop
cmc
cmps
test
mov
hlt
scas
cli
es
mov
sbb
xlat
inc
pop
jae
stos
mov
inc
arpl
xchg
rol
adc
cmp
pushf
lahf
aam
pop
mov
sbb
lea
jne
into
cmp
(bad)
pop
mov
ret
test
movs
xor
xor
sbb
stos
mov
xor
ret
jmp
jb
mov
(bad)
sub
outs
inc
scas
push
pop
mov
lods
or
adc
gs
scas
adc
shr
jmp
scas
pop
mov
mov
arpl
fstp
mov
(bad)
jnp
push
or
jecxz
push
ror
in
xchg
mov
dec
inc
dec
mov
jge
push
cld
inc
int3
push
pop
inc
or
sub
push
jge
fxch
jae
sbb
mov
mov
loop
das
xor
rcl
xor
iret
(bad)
push
jecxz
mov
pop
test
add
(bad)
imul
stos
int
adc
inc
outs
mov
cs
stc
lods
push
loop
cmp
pop
and
xchg
(bad)
aad
jle
xor
mov
cmp
iret
es
cs
(bad)
aad
rol
imul
dec
in
cmps
push
dec
jno
bnd
or
pop
test
and
cmp
dec
imul
dec
dec
and
stos
jecxz
cs
cmp
in
push
iret
xchg
push
mov
gs
pop
xor
or
outs
call
push
je
xchg
enter
daa
xor
mov
and
add
and
shl
mov
pop
push
push
shl
pop
addr16
ss
mov
pop
push
pop
pusha
in
jno
pop
inc
jnp
sbb
lods
std
repnz
lods
xlat
das
push
mov
jmp
fiadd
xchg
sti
sbb
icebp
ret
xor
inc
mov
adc
cmps
lahf
xor
mov
mov
out
jb
ffreep
mov
sub
cli
push
or
mov
push
jbe
mov
cmp
sub
sbb
sbb
xchg
(bad)
stc
scas
out
jl
cs
push
outs
cli
pop
fs
push
dec
mov
jno
mov
push
mov
dec
cbw
addr16
and
push
dec
test
fwait
adc
fcmovb
cwde
iret
sbb
jns
cmc
lock
ror
retf
fs
pop
mov
pop
sbb
sti
pop
jns
lods
sub
int3
xchg
or
mov
icebp
xor
iret
mov
test
sbb
hlt
ret
mov
into
fs
push
pop
jge
arpl
adc
in
ret
sub
sbb
(bad)
push
add
dec
jns
test
into
cmc
jno
pop
imul
jns
push
bound
add
fisttp
pop
inc
inc
sbb
inc
cmp
jmp
adc
push
lods
lahf
cs
add
movs
mov
push
push
xchg
int
dec
adc
sbb
inc
ret
xchg
sar
jno
adc
loope
loop
push
mov
adc
mov
ins
es
aam
outs
jp
(bad)
mov
inc
mov
imul
cs
add
or
test
xlat
bound
lahf
push
data16
add
out
leave
retf
and
in
rcr
shl
adc
rcr
imul
xor
lods
cmp
jnp
and
sti
pop
out
ds
xlat
dec
sbb
mov
and
inc
aad
inc
nop
jmp
dec
ret
jns
scas
xlat
mov
and
outs
data16
pusha
mov
ds
jae
rcl
xor
push
push
ds
or
sar
adc
bound
rol
inc
or
xlat
ret
pop
pop
inc
loope
repz
popf
xchg
fistp
loopne
inc
fs
xor
adc
xchg
push
jo
xchg
ret
rcr
aaa
or
xor
fs
aam
stos
out
fwait
adc
inc
sahf
out
mov
shl
sar
and
fdivp
mov
dec
jmp
lahf
jb
sub
pop
ins
in
xchg
rcl
cmp
imul
sbb
add
stc
lea
mov
popf
sub
add
jmp
outs
jmp
fcomp
xchg
mov
jle
inc
(bad)
sub
dec
lds
or
sti
pop
push
push
sahf
sub
add
test
jne
inc
fstp
pop
cmp
dec
mov
sub
ds
stc
or
add
jb
sub
dec
mov
xor
out
jecxz
nop
pop
xor
ret
lods
add
inc
or
cs
pop
add
fnstcw
aaa
xor
push
(bad)
stc
sbb
daa
xchg
push
jo
pop
xor
mov
dec
xor
lock
shr
cmp
aas
pushf
arpl
mov
stc
mov
or
ret
mov
jl
cmp
data16
leave
mov
loop
aas
imul
in
mov
test
mov
(bad)
push
dec
stos
mov
cmp
inc
inc
setl
mov
and
jb
mov
call
push
dec
add
xlat
test
fdivrp
pop
stos
xor
and
repnz
out
cli
add
add
retf
imul
mov
(bad)
cwde
cdq
fwait
cmc
xor
movs
inc
ror
or
imul
cmp
and
cmp
or
xchg
push
push
arpl
ds
imul
xchg
nop
mov
mul
iret
mov
not
xlat
shl
adc
das
out
shr
(bad)
push
stos
jnp
outs
jmp
inc
(bad)
mov
cmp
mov
sbb
repnz
popf
ss
loope
lods
push
add
lahf
sub
jl
cmps
mov
lods
push
neg
push
popf
shr
xchg
pop
fdivr
mov
ret
arpl
cmp
std
sbb
jp
das
bound
bound
repnz
or
jmp
sub
sbb
sub
or
and
sub
dec
sub
jl
ret
cmps
fistp
aas
cdq
icebp
dec
imul
(bad)
aam
inc
or
push
mov
ins
sbb
data16
(bad)
fdiv
imul
(bad)
out
push
sbb
sar
sub
push
aam
xchg
scas
cld
imul
popa
aaa
cld
adc
jg
js
cmp
or
ja
pop
push
adc
mov
repz
idiv
inc
inc
xchg
sbb
sub
xchg
or
fstp
cld
and
mov
js
(bad)
add
icebp
and
iret
dec
push
fistp
pop
(bad)
push
pop
jg
ds
xchg
jnp
dec
sub
jmp
scas
in
xchg
xlat
inc
lahf
neg
fld
loopne
std
adc
pop
out
int3
sub
mov
lock
pushf
push
jmp
int
xor
inc
sbb
sti
xor
ins
push
mov
dec
push
cmps
fild
xchg
dec
pop
test
fadd
in
xor
shl
ds
xchg
aaa
jecxz
(bad)
and
mov
out
daa
xchg
xchg
push
cdq
outs
mov
popa
fisttp
mov
cmp
sti
jp
bound
leave
jp
pushf
ror
adc
test
xchg
outs
and
xchg
mov
dec
into
lahf
jno
repnz
mov
or
push
scas
fistp
into
push
dec
movs
js
add
arpl
shl
mov
sar
test
fcmovnbe
xor
xchg
inc
and
mov
int3
sbb
xchg
shr
jg
inc
test
outs
nop
jmp
push
out
push
out
push
dec
jb
fsub
mov
fisub
push
cmp
xchg
aad
dec
jne
pop
pop
in
neg
cmp
enter
mov
mov
or
idiv
mov
push
push
aad
stc
mov
lock
(bad)
jle
out
and
fimul
mov
push
xchg
sub
scas
cli
aas
dec
jno
add
mov
leave
mov
mov
(bad)
outs
loop
sahf
(bad)
ja
mov
out
mov
pop
in
addr16
std
rol
hlt
inc
jl
or
es
es
xchg
in
jnp
sbb
sub
xchg
scas
fwait
dec
retf
add
mov
rcl
xor
cmp
cmps
cmp
retf
and
popa
sbb
addr16
pop
lds
addr16
mov
sub
jg
dec
xchg
mov
in
or
test
in
adc
inc
ja
vpsubd
pop
shl
(bad)
or
dec
scas
sbb
mov
pop
fwait
jp
jno
xor
or
pop
push
in
xchg
push
cmp
mov
xlat
inc
out
popa
push
and
cmp
fnop
lea
push
add
mov
push
enter
sahf
(bad)
movs
pusha
int
int3
aas
jle
jecxz
jae
xor
scas
cmps
and
in
adc
mov
not
ins
or
in
jge
ja
sub
sbb
xchg
daa
jl
mov
lds
and
push
dec
cs
push
(bad)
mov
xor
icebp
out
push
xchg
nop
pop
xchg
xchg
fwait
push
xlat
or
dec
sbb
push
es
pop
movs
shl
mov
dec
sub
and
mov
loope
movs
cmp
fwait
jmp
int3
xchg
das
push
shl
lods
ins
outs
int
iret
std
test
sbb
mul
inc
sbb
ins
mov
pop
jecxz
(bad)
(bad)
cmps
addr16
push
cmp
adc
cmp
rcr
rcl
dec
sub
and
rcl
fnstsw
pop
jmp
sbb
and
xor
fidivr
cwde
jmp
and
mov
imul
mov
sbb
push
adc
push
jne
push
xor
add
test
in
jae
movhps
pusha
dec
dec
mov
sbb
mov
dec
or
adc
mov
idiv
and
cmps
mov
and
loopne
loopne
fistp
sbb
inc
aaa
fwait
cmp
mov
outs
add
aas
in
jns
and
(bad)
jns
push
fwait
aad
pop
add
inc
jo
fyl2xp1
sbb
adc
dec
inc
jo
xor
inc
hlt
imul
stos
add
loopne
es
jns
or
ins
ins
in
loopne
dec
vpmuludq
add
fst
comiss
nop
(bad)
or
cmp
xchg
mov
inc
pushf
fst
das
fisub
cli
sbb
mov
mov
pop
in
jmp
(bad)
in
mov
sbb
std
push
nop
jo
cwde
or
pushf
jmp
imul
cmp
ins
or
mov
inc
xor
dec
sub
add
rcr
cdq
inc
in
push
and
sub
repnz
pop
cmp
retf
iret
dec
test
dec
or
mov
inc
and
mov
push
mov
(bad)
rcr
(bad)
popa
pop
loop
or
fistp
rcr
xor
repnz
adc
jg
in
es
cli
sub
sar
rol
cmc
das
jle
inc
inc
dec
xor
xchg
popf
ds
pushf
(bad)
xchg
fdiv
int3
dec
dec
aad
dec
lds
scas
sub
xor
js
add
out
dec
and
inc
push
pop
ja
(bad)
cmp
sub
sbb
in
xchg
data16
mov
(bad)
sub
cmp
inc
pop
mov
push
cwde
mov
aaa
adc
push
add
out
sbb
cwde
cwde
push
lods
pop
add
xor
or
inc
xchg
mov
leave
sub
xor
fisubr
pop
popf
push
sub
cmp
inc
or
pushf
mov
mov
push
cmc
jne
(bad)
bnd
ret
fadd
(bad)
not
leave
jl
inc
sbb
call
outs
aaa
ret
pop
in
inc
stos
mov
lods
loop
cli
ret
push
add
icebp
pop
cs
cld
or
cmp
std
push
xchg
push
imul
div
popa
jecxz
scas
ret
mov
inc
adc
int
in
pushf
test
hlt
push
popf
mov
lock
sub
xchg
push
je
cld
stos
mov
jg
icebp
mov
sahf
in
push
mov
out
inc
jg
sub
or
cmc
scas
adc
xchg
mov
xchg
clc
sbb
out
popf
je
mov
push
adc
xor
mov
lock
jmp
(bad)
fucom
test
loop
mov
mov
call
pop
xchg
stc
push
or
xor
jmp
into
jg
(bad)
icebp
inc
inc
adc
adc
mov
fs
jbe
mov
mov
mov
test
cmp
sbb
xor
mov
or
and
sahf
mov
or
loopne
jno
push
cmp
fiadd
push
loope
sar
jecxz
movs
fnstcw
stos
mov
fs
retf
(bad)
pop
mov
(bad)
stc
mov
jl
xchg
mov
push
inc
aam
adc
push
(bad)
pop
sbb
add
pop
mov
scas
hlt
or
xchg
push
sbb
ins
fstcw
push
inc
jmp
jg
icebp
mov
das
imul
cmp
ss
fld
pop
mov
xchg
or
xchg
lea
sub
jmp
sbb
mov
xchg
inc
xor
mov
jae
inc
std
test
push
jle
cmp
outs
pop
retf
aas
jnp
xchg
rcr
and
dec
xchg
mov
rcr
pusha
test
fdivr
int3
or
jg
dec
or
pop
mov
push
(bad)
fld
stos
push
mov
mov
(bad)
outs
mov
or
nop
dec
jge
push
sub
cmp
cmc
rcr
pop
ins
inc
cld
pop
xor
rol
test
call
test
cmps
sbb
pop
dec
jmp
cmp
inc
push
mov
cmps
adc
inc
fmul
(bad)
push
sub
and
push
jmp
loope
cs
repnz
das
push
sub
das
jbe
ficom
dec
mov
jg
hlt
lahf
jg
clc
mov
je
dec
and
frstor
mov
inc
jae
pushf
xor
shr
dec
mov
mov
gs
xor
xor
movs
sub
shl
cmp
xor
jno
cmp
test
lahf
sub
sub
adc
call
(bad)
jno
xor
std
or
movs
sar
je
ja
push
add
sub
cli
mov
adc
mov
pusha
nop
jp
jne
dec
fwait
sbb
mov
and
ins
icebp
push
sub
pop
aam
mov
jmp
xor
loopne
lods
jg
mov
inc
fstp
cmc
add
pop
in
(bad)
sbb
in
jb
or
sti
sbb
add
or
data16
scas
data16
fisub
jmp
mov
inc
(bad)
outs
aad
gs
out
dec
sub
cmovne
rcr
sub
mov
imul
(bad)
mov
(bad)
jl
fbstp
iret
inc
popf
adc
push
dec
jg
lea
daa
mov
or
pop
fist
rol
sbb
shl
mov
fcmovb
jp
cld
cdq
(bad)
icebp
aaa
movs
je
(bad)
outs
mov
adc
xchg
jmp
arpl
mov
fs
jmp
mov
mov
add
pop
add
jecxz
out
jns
(bad)
out
adc
mov
and
mov
adc
loope
jp
mov
pop
stc
adc
out
jle
adc
mov
rcl
pop
inc
cmps
dec
lahf
fisubr
adc
aad
loope
jb
ror
mov
hlt
ror
test
sti
jp
dec
mov
fwait
cmc
jge
push
enter
jns
ins
sbb
aaa
(bad)
push
or
shl
fidivr
out
test
dec
sub
jmp
xor
aaa
adc
movs
xchg
pop
xchg
cmp
jo
adc
mov
jae
sub
xchg
xor
mov
hlt
es
out
and
xor
mov
mov
sub
cmps
dec
cli
jns
pusha
int3
push
loope
je
pop
gs
dec
es
dec
jecxz
jmp
or
dec
pop
mov
jmp
add
push
call
ficomp
lea
fs
mov
inc
jmp
mov
dec
dec
cmp
jmp
pop
js
mov
mov
add
icebp
fcomp
neg
popf
cli
jmp
addr16
retf
cs
or
ret
hlt
ss
jbe
fwait
xchg
mov
jae
popa
push
dec
sar
push
fdiv
icebp
dec
sbb
repz
add
inc
or
xchg
or
adc
into
mov
xlat
mov
push
or
dec
mov
cli
test
jp
pop
push
shl
test
lods
jb
fadd
sbb
sub
inc
scas
fisttp
data16
cmps
jmp
mov
inc
into
in
mov
jle
sbb
jae
sub
int3
shl
cmp
jle
sahf
retf
in
cli
in
mov
mov
shl
push
inc
into
cmp
aad
mov
mov
cmc
fwait
sub
cmps
into
ins
push
or
fbld
mov
push
addr16
and
out
ror
leave
push
add
and
or
push
icebp
inc
das
les
lock
sbb
add
iret
jmp
jmp
outs
add
xchg
cld
mov
dec
das
les
dec
(bad)
(bad)
cmc
dec
cmps
out
push
bound
cmp
loopne
arpl
je
mov
or
repnz
inc
xor
test
rol
loop
cwde
push
mov
sar
jle
in
push
aam
mov
(bad)
adc
push
stos
aaa
cdq
pop
(bad)
cmps
jae
mov
pop
lods
movs
mov
push
mov
(bad)
xchg
sbb
mov
cmps
aad
rcr
ss
xchg
sub
fs
in
mov
arpl
jl
popa
int
pop
or
je
mov
push
add
ja
retf
jo
sbb
idiv
dec
xchg
xchg
movs
or
std
fld
arpl
test
inc
sbb
jg
fsubr
mov
jo
out
and
fdiv
cld
mov
jmp
pop
xchg
sti
pushf
pop
or
lahf
imul
dec
sbb
sub
or
stos
fstp
shr
lock
and
je
lea
stos
or
pop
loopne
outs
in
ret
dec
ja
push
cmp
push
mov
(bad)
daa
cmp
jp
cmp
fwait
pop
neg
aad
xchg
pop
cmp
and
in
icebp
push
adc
aad
mov
dec
stos
pop
sahf
ja
stos
mov
xchg
xor
dec
adc
push
ins
lods
push
add
mov
fsubrp
lods
out
push
out
cld
xor
mov
sbb
out
mov
and
mov
jns
shl
test
xor
sahf
es
xor
push
out
cmp
add
std
js
sti
mov
mov
jo
xchg
sti
fnstsw
outs
stos
dec
add
(bad)
fisubr
mov
(bad)
scas
jnp
sti
sub
int3
fcmovnb
dec
dec
shl
popa
mov
retf
outs
shr
(bad)
les
or
pusha
jnp
mov
mov
gs
js
sub
push
adc
push
jo
aaa
mov
sub
ret
out
sbb
add
iret
lock
mov
loop
in
stos
lock
push
add
lods
pop
ret
inc
scas
sub
ret
shl
mov
loop
rcl
push
dec
or
and
sbb
ds
retf
call
rcr
xchg
jnp
mov
dec
and
test
movs
lahf
mov
cmps
xchg
sub
dec
in
add
cmp
inc
cli
or
je
call
mov
cmc
int3
and
out
cmp
mov
push
dec
out
in
push
add
mov
jmp
fild
aaa
mov
jne
xor
adc
sbb
push
popa
sbb
in
jp
xchg
into
mov
adc
adc
or
popf
ds
into
add
ret
xchg
push
inc
aas
xchg
retf
iret
addr16
scas
cmp
push
xor
pop
scas
jns
push
out
lods
aas
icebp
pop
scas
and
sbb
popf
neg
or
mov
mov
lea
dec
inc
jb
inc
out
xchg
pop
iret
(bad)
jmp
mov
imul
push
xor
ss
pop
aaa
pop
pop
dec
jp
test
js
sub
stos
pop
leave
push
pop
aas
fnsave
sbb
mov
sti
inc
retf
mov
sbb
or
jno
fstp
idiv
daa
repnz
add
test
and
xchg
aas
movs
pop
dec
fs
pop
mov
sub
push
fcom
jl
test
fsub
(bad)
pop
cmp
inc
dec
xor
adc
adc
fs
pop
xchg
and
and
add
jns
repnz
sti
inc
mov
xchg
jmp
push
cmp
cli
dec
dec
adc
push
in
pop
mov
push
cmp
dec
mov
pop
sub
or
sub
fsubr
jbe
popa
push
js
fisubr
loopne
pop
sub
cmc
xchg
add
or
push
sbb
push
jg
sbb
xor
inc
enter
in
push
fwait
mov
sar
stos
jno
gs
mov
test
and
leave
lds
sub
push
mov
stc
push
outs
ret
lock
jp
pop
cmp
in
jo
fdiv
iret
jbe
push
dec
sbb
inc
add
ret
add
xor
jge
mov
pop
cmc
mov
dec
in
(bad)
loop
mov
lock
mov
sub
cmp
mov
fiadd
push
add
ja
test
xlat
hlt
sub
int3
retf
adc
lods
mov
arpl
movs
push
data16
(bad)
icebp
pop
enter
cli
repnz
sub
retf
ins
mov
pusha
push
lods
xor
(bad)
lods
xor
sub
mov
(bad)
mov
adc
fiadd
jmp
sbb
fmul
rcr
and
(bad)
dec
outs
mov
ins
dec
mov
sbb
pop
stos
mov
hlt
int
test
out
or
push
dec
cli
loop
popa
gs
(bad)
jbe
dec
jbe
pop
inc
imul
jno
pop
arpl
pusha
pop
push
in
bound
shr
push
popf
daa
fist
jmp
rcl
cmp
adc
lods
mov
imul
sbb
imul
icebp
cs
lahf
mov
jno
pop
pop
je
add
repnz
lds
jnp
mov
push
and
mov
stc
test
dec
movs
(bad)
aam
mov
test
cmp
add
test
sbb
enter
push
repnz
out
ins
retf
je
mov
test
int3
mov
lahf
out
aam
fnstcw
and
cwde
test
popa
xor
cmps
out
xchg
cli
pop
outs
ja
xchg
or
mov
pop
out
jnp
out
outs
inc
pop
pop
fsub
popa
sbb
fnstenv
push
inc
mov
scas
pop
push
mov
lds
push
mov
ror
and
cmps
inc
(bad)
xchg
mov
fisttp
imul
add
stos
add
int
and
and
jne
dec
outs
cmp
sbb
and
idiv
cmc
out
lods
(bad)
xchg
dec
inc
jnp
push
test
jg
and
test
clc
inc
es
out
(bad)
aaa
adc
adc
cmp
inc
push
inc
rol
mov
out
icebp
cld
loope
ret
test
(bad)
ins
mov
jecxz
xor
xlat
sub
xchg
test
xchg
rcl
int
movs
dec
loopne
ins
scas
ss
nop
mov
aad
xchg
test
xor
xchg
stos
ins
arpl
in
inc
sub
out
dec
(bad)
sub
pop
adc
dec
neg
int3
es
or
mov
je
fisubr
cmp
ret
and
scas
(bad)
leave
shr
(bad)
mov
je
sub
sti
pop
sub
arpl
jecxz
iret
xchg
cld
sub
pop
fcmove
out
mov
sbb
pop
add
ret
into
push
cmp
out
xchg
add
or
dec
xchg
mov
xor
or
xchg
inc
sub
pop
scas
cmp
cld
scas
ret
in
adc
jb
xchg
mov
dec
sub
ret
iret
jmp
test
add
das
xor
test
adc
fs
mov
das
es
add
jmp
cmp
mov
shl
add
jmp
mov
in
inc
dec
aas
pop
sub
lea
add
retf
push
add
or
ins
aas
mov
xchg
dec
jge
imul
(bad)
enter
xor
mov
lfs
mov
daa
mov
sbb
add
loopne
adc
stc
xchg
repnz
aas
jnp
lds
add
mov
retf
cli
jle
mov
cs
inc
push
jmp
ror
xchg
cwde
add
dec
les
lock
data16
hlt
mov
fs
iret
mov
ins
dec
fdivp
or
jnp
sub
pop
retf
jp
(bad)
jl
jl
mov
clc
(bad)
mov
xchg
jmp
cwde
ret
inc
std
call
pop
jmp
sub
test
xor
mov
sub
xchg
cmp
inc
sbb
cmp
cmc
test
data16
sub
repnz
mov
mov
mov
into
lods
ret
jp
mov
fstp
and
and
in
inc
inc
retf
rol
pop
inc
ret
ja
fst
mov
sbb
fwait
outs
hlt
jno
ins
cmps
outs
mov
jae
aam
retf
add
push
in
aaa
pusha
fimul
push
arpl
dec
push
mov
fmul
xor
neg
xchg
jecxz
jns
xchg
mov
mov
outs
xor
mov
ins
ror
int3
and
int
push
mov
inc
add
retf
hlt
xchg
fisttp
jp
jmp
pusha
add
call
mov
dec
rcr
inc
pushf
mov
loopne
push
gs
xchg
dec
sti
stos
fst
pop
fmul
xor
sub
ss
mov
bound
mov
and
mov
out
fimul
cli
fsub
cmc
lock
add
ds
jmp
or
addr16
(bad)
fdivr
xor
xor
pusha
dec
mov
(bad)
dec
jge
out
imul
sbb
push
mov
(bad)
test
dec
cmps
call
xor
clc
jnp
pushf
sbb
cwde
scas
add
xor
mov
std
jecxz
cmp
dec
cmp
push
scas
mov
es
mov
xchg
adc
cdq
pop
xor
fcmovnu
pop
fst
js
cmc
jo
xchg
idiv
push
mov
mov
xchg
push
int3
sub
dec
arpl
bound
mov
adc
out
test
sahf
fidivr
ret
jmp
into
jae
test
push
mov
xchg
xor
pop
ret
mov
loop
cmc
mov
push
repz
mov
pop
and
inc
jg
or
dec
out
and
pop
sub
mov
fmul
push
call
bound
aad
scas
(bad)
clc
aaa
fs
ud1
out
inc
icebp
aas
add
add
sub
mov
push
jmp
and
jnp
(bad)
clc
mov
outs
arpl
popa
mov
lock
sub
add
xor
lods
xchg
cmp
and
jl
hlt
aad
int3
and
mov
ins
retf
(bad)
mov
out
clc
and
adc
movs
mov
jo
add
or
add
jns
iret
in
mov
in
mov
pop
push
cmps
and
push
test
mov
jge
shl
rol
fidiv
lods
stos
cdq
pusha
test
push
test
sub
pop
fcmove
movs
jae
mov
aad
or
in
pop
sub
xchg
sub
xlat
fld
mov
lods
pop
mov
ret
imul
mov
jno
sub
jl
stos
jl
jecxz
idiv
adc
pop
mov
xor
lock
pop
lock
xchg
repz
outs
fbld
or
pop
sahf
cmp
mov
xchg
popa
call
jp
jne
mov
call
jno
out
adc
jmp
repz
add
jmp
les
mov
inc
cmp
test
out
pop
in
stos
and
dec
dec
mov
cmp
lock
and
pop
sub
neg
cmp
xor
push
mov
xchg
inc
les
daa
mov
dec
jmp
or
aaa
pop
cmp
das
cmps
loopne
mov
or
mov
sahf
fcmovnu
mov
pop
sbb
add
sbb
jb
in
repz
in
neg
sub
in
pushf
sbb
mov
pop
jns
call
(bad)
stc
std
ins
ret
int
aam
popf
pop
dec
add
out
div
(bad)
in
xchg
sbb
mov
inc
xchg
div
(bad)
(bad)
jns
xor
or
push
and
push
push
test
add
adc
or
cwde
add
mov
xchg
fisttp
or
sub
popa
mov
pop
(bad)
std
push
sub
sbb
clc
inc
sbb
(bad)
inc
push
or
call
fisubr
mov
inc
cmp
dec
pop
ins
push
fs
lods
shl
int3
retf
add
out
jle
fwait
add
dec
aaa
clc
repnz
inc
retf
out
enter
cmp
cmp
mov
jmp
mov
jne
adc
sbb
xchg
jmp
lahf
mov
sub
inc
or
dec
sbb
imul
test
mov
mov
ins
xchg
(bad)
pop
push
ds
jnp
ret
xor
or
mov
pusha
cdq
inc
adc
daa
pop
and
mov
iret
test
inc
push
xor
ins
clc
jl
pop
sbb
mov
imul
in
jp
stos
sub
stos
ins
daa
or
test
dec
cmc
and
mov
(bad)
cmps
outs
cmp
fsub
inc
and
aad
ds
out
sbb
dec
je
ret
push
xor
scas
(bad)
sub
jb
mov
pop
ja
push
repnz
div
shl
adc
cdq
push
ds
loop
pop
cmp
cmc
cmp
in
pop
xor
sub
fdivr
fcom
loop
aam
sbb
sahf
test
test
movs
sub
push
push
sub
icebp
aam
rol
out
xchg
arpl
dec
add
xor
ds
(bad)
stos
adc
rol
sbb
xchg
loope
push
xchg
(bad)
mov
sbb
jnp
popa
outs
adc
jno
mov
(bad)
dec
xor
outs
cwde
pcmpeqb
push
scas
add
gs
pop
pushf
mov
(bad)
mov
out
ss
out
scas
lahf
cdq
push
xchg
call
or
xor
out
(bad)
pop
scas
xor
sar
fimul
mov
mov
mov
mov
int3
jp
mov
mov
mov
mov
ss
ret
push
sbb
jmpw
jmp
outs
fidivr
and
add
pop
or
mov
xchg
ins
aad
push
imul
popf
sub
gs
out
mov
(bad)
(bad)
int3
fcmovbe
test
push
shl
adc
loope
(bad)
arpl
or
adc
add
dec
popa
fwait
sahf
ins
add
aas
jnp
mov
inc
jp
leave
addr16
iret
add
add
into
jecxz
dec
dec
pop
movs
or
jnp
and
(bad)
dec
pop
fisttp
add
icebp
xchg
and
xchg
inc
pop
add
ret
mov
imul
cmc
mov
dec
sub
push
mov
inc
push
ds
aam
adc
cmp
pop
je
icebp
or
call
fwait
mov
les
xor
cwde
or
mov
shl
icebp
xchg
in
stos
jo
push
call
stc
inc
popf
adc
xor
aas
addr16
es
push
mov
pop
pop
sub
jne
add
jae
cmp
mov
add
add
stc
iret
add
mov
sar
pop
pop
jle
or
push
add
lds
out
and
fsubr
fcom
hlt
push
pop
movs
pop
add
ret
sub
fidiv
jae
mov
enter
push
rol
loopne
jns
neg
cdq
(bad)
jge
test
pop
inc
fldz
cwde
retf
(bad)
fmul
imul
mov
or
push
(bad)
(bad)
das
jns
dec
add
cmp
jmp
inc
repz
add
and
dec
aaa
sub
sahf
movs
ficomp
sbb
mov
je
mov
sub
and
std
or
pushf
jmp
bound
jae
inc
nop
imul
fidiv
fistp
mov
dec
sbb
push
add
data16
push
adc
mov
(bad)
mov
(bad)
sub
or
mov
int3
out
cmps
(bad)
ror
in
iret
movs
stos
sar
arpl
and
sbb
add
arpl
or
fiadd
cmp
or
scas
sbb
xlat
pusha
push
jp
push
cwde
mov
pop
popf
sbb
outs
mov
fninit
outs
in
scas
push
mov
jmp
cmps
cwde
inc
or
lahf
cmp
arpl
outs
enter
(bad)
aaa
cmp
dec
ja
sti
inc
cli
sbb
push
cmps
test
push
sar
jmp
out
cmp
(bad)
fcmovbe
jnp
mov
mov
pop
jmp
inc
pop
or
popa
cdq
popa
xor
ds
aam
push
adc
sbb
dec
cli
xlat
jl
popf
jge
push
jl
pop
push
das
(bad)
mov
mov
jno
or
out
into
rol
mov
mov
cmp
adc
data16
push
inc
mov
daa
adc
adc
inc
add
pop
sar
jae
into
pop
stos
mov
loopne
mov
cmps
push
or
out
repz
dec
sub
rol
rcl
xor
push
push
call
test
mov
mov
push
pop
jns
pop
sahf
jmp
cmp
pop
ss
push
xchg
ret
lods
retf
dec
test
push
fwait
lock
shl
loop
test
int
or
jno
add
xor
pop
in
outs
and
add
sbb
outs
mov
hlt
push
dec
and
xchg
pop
push
iret
xchg
jp
mov
in
cmp
std
jle
lds
mov
enter
add
mov
pop
fsub
lods
fcomp
lahf
sub
mov
bound
inc
xor
stc
ins
dec
inc
mov
rdmsr
push
fstp
repnz
nop
xor
popf
xchg
movhps
lahf
out
sub
mov
scas
or
pop
pop
push
call
sub
int3
mov
jg
lods
pop
adc
stos
shr
pushf
mov
ins
ds
je
adc
mov
lea
jl
xchg
leave
imul
leave
int
and
div
in
es
test
dec
out
rcr
ss
sub
das
icebp
aam
aaa
push
dec
push
cmp
cmp
jle
mov
movs
test
mov
mov
test
popf
adc
fadd
inc
jmp
dec
fyl2x
lods
mov
mov
xchg
mov
add
ret
adc
dec
call
cld
push
cmps
fnstcw
stos
daa
aaa
cmp
sub
xor
jmp
cmp
mov
xchg
adc
or
xchg
add
lods
push
in
loop
sar
ins
fsubrp
push
mov
ret
pop
mov
add
cmp
mov
jmp
and
sbb
push
cmp
push
pop
sbb
fwait
loopne
sbb
sub
call
jnp
ffreep
cmp
aad
xchg
adc
scas
sbb
jb
mov
jae
lods
push
cdq
mov
push
mov
pop
and
div
out
int
retf
in
data16
jmp
jb
sahf
ins
scas
inc
cld
arpl
add
cmp
mov
ret
(bad)
nop
arpl
dec
clc
shl
ror
push
das
movs
fdiv
adc
cmp
das
fwait
dec
sub
sub
(bad)
and
mov
sbb
or
xor
fsub
call
mov
outs
sub
pop
ins
sti
xchg
jg
sub
sbb
icebp
cmp
jge
mov
push
xor
shr
leave
leave
pusha
clc
jno
pop
mov
loopne
sub
pop
xchg
mov
loope
in
mov
jmp
scas
fidiv
xlat
bound
mov
xor
iret
cmps
clc
sbb
inc
nop
and
dec
sahf
xor
sub
sub
and
sub
shr
pop
jno
int3
inc
imul
add
jmp
arpl
(bad)
fdiv
fnstsw
call
(bad)
jo
inc
and
sbb
lods
aas
das
or
(bad)
stos
jnp
jmp
sub
pop
mov
int3
jno
jno
cmp
add
cmp
push
mov
inc
out
ret
mov
call
call
inc
fsubr
jg
aas
sub
push
lahf
sbb
test
nop
imul
mov
xor
and
in
push
in
or
ret
push
inc
xchg
test
repnz
shl
ins
add
mov
push
retf
push
leave
adc
mov
out
cs
ins
or
xor
out
movs
ins
lahf
cld
and
loope
loope
sub
fst
or
arpl
dec
sbb
or
dec
test
mov
cmp
push
lods
je
outs
inc
cs
dec
rcr
pusha
movs
pop
jp
add
aas
loopne
dec
loop
mov
lods
mov
xor
adc
lds
test
ja
mov
jmp
pop
inc
aad
sbb
inc
jl
out
or
cs
inc
cmp
iret
imul
cmp
jmp
cmc
cmp
push
aas
aam
inc
rcl
fldenv
add
or
pop
test
inc
fnstsw
ror
mov
push
repz
lock
popf
outs
sar
daa
pop
xlat
test
push
pop
addr16
stos
or
fmul
stos
cwde
lds
rcr
pop
mov
aad
jo
dec
lods
mov
mov
mov
pop
mov
sbb
icebp
jg
push
push
sbb
(bad)
push
pop
out
cmp
dec
jo
cmps
xlat
(bad)
xor
rol
cmp
loopne
push
lea
mov
xchg
xchg
cmps
pop
sbb
data16
push
mov
mov
loopne
sbb
in
push
(bad)
sub
test
xchg
push
aam
fdiv
mov
pop
cmc
add
sbb
mov
push
or
xor
sub
dec
sbb
and
lods
mov
shl
out
or
and
cmp
lds
fcomp
(bad)
ja
cmps
cdq
out
out
xor
dec
in
out
sbb
mov
xchg
jmp
xor
mov
inc
mov
add
(bad)
xchg
add
add
push
adc
outs
bound
rep
dec
mov
inc
cdq
es
sub
pushf
adc
out
inc
neg
inc
push
adc
in
adc
inc
repz
sar
sub
daa
dec
ret
mov
into
fisub
mov
loopne
xchg
ja
lods
cmp
popf
mov
and
aad
mov
xchg
pop
out
push
sub
mov
sbb
aas
inc
shl
dec
shr
in
jmp
fld
push
in
loopne
push
enter
adc
xchg
dec
jo
push
shl
aad
in
sub
jo
cmp
push
jmp
mov
xchg
mov
das
test
jle
(bad)
xor
fs
test
test
movs
sbb
cmp
jp
sti
ja
das
sbb
cli
dec
jne
sahf
jp
pop
xchg
cmp
dec
out
pop
fldenv
dec
fs
add
call
hlt
mov
adc
les
into
xchg
sbb
std
stos
push
je
movs
mov
and
cli
scas
add
ins
pop
nop
mov
jo
xchg
or
nop
mov
gs
mov
mov
mov
mov
test
mov
inc
mov
inc
push
in
das
add
sbb
lods
ins
fs
adc
pop
sti
stc
sti
pop
iret
push
std
jg
mov
pop
sbb
outs
frstor
cmp
cmps
xchg
loope
aas
popf
sub
shr
xchg
xchg
fldcw
sbb
aad
arpl
and
pusha
ret
mov
pop
jge
stos
sbb
push
mov
xchg
jmp
or
outs
outs
fldenv
mov
jae
cmps
jo
xor
out
fadd
cmp
retf
pusha
cmp
popf
fcomp
xchg
push
aas
jne
xchg
inc
inc
jl
or
test
je
test
sar
aas
stc
fistp
and
jmp
cmp
rcl
pop
aaa
or
arpl
sub
add
ficom
push
mov
into
imul
inc
idiv
and
cmp
sbb
shl
add
cs
inc
nop
sub
sbb
movs
xchg
xchg
test
adc
add
shl
fidiv
icebp
loope
ins
xchg
xchg
cmp
xchg
cmp
or
mov
ficom
stos
add
les
outs
movnti
cvtps2pd
jl
and
inc
loop
rcl
arpl
xchg
adc
xchg
push
mov
retf
pop
mov
retf
loop
xchg
sar
xchg
cmp
imul
sbb
jecxz
test
adc
dec
in
push
in
add
(bad)
aad
in
push
or
ins
pop
mov
lahf
ds
dec
and
cmp
out
or
das
jge
sar
(bad)
sbb
adc
retf
test
mov
or
retf
(bad)
in
mov
pop
mov
movs
repnz
cld
push
in
repz
xchg
mov
mov
cmp
or
out
cmp
xchg
ds
mov
xchg
retf
mov
jno
fcmovnu
jp
inc
jno
xchg
aad
sub
xor
and
sub
jne
xchg
mov
ret
(bad)
sbb
(bad)
inc
fsubrp
pop
stos
loope
test
mov
daa
mov
push
add
push
push
inc
fsubr
sub
cmp
addr16
dec
mov
rcl
popa
dec
pop
add
jmp
cmc
xchg
rcl
test
cmp
jae
inc
into
out
xchg
icebp
fwait
repz
xor
fwait
daa
push
lods
adc
adc
pop
sub
lods
push
sbb
push
imul
call
jo
push
aaa
add
sub
es
mov
sbb
push
mov
call
lds
int
cmc
mov
lahf
xor
push
cmp
test
in
loop
mov
ficom
loopne
xor
xchg
xor
sar
sbb
int3
in
cdq
push
dec
mov
cwde
xchg
mov
lods
mov
fwait
pop
arpl
in
sub
cmp
jmp
retf
bound
int3
(bad)
xor
cmp
adc
xor
adc
mov
and
lea
ins
and
mov
mov
mov
sub
enter
mov
dec
xlat
icebp
pop
adc
fldenv
or
mov
cwde
mov
mov
sub
mov
lea
mov
pop
inc
sbb
iret
out
push
jno
int
push
das
sub
sti
clc
call
pop
pop
inc
sbb
rol
jne
push
mov
sahf
enter
into
fsubr
cli
sbb
cmp
jl
or
and
pop
adc
pusha
cli
int
push
push
xchg
outs
add
cs
push
lods
xchg
ret
dec
pushw
stos
or
mov
enter
(bad)
mov
cmp
or
xchg
mov
xchg
(bad)
in
test
inc
cmps
mov
ds
out
push
push
retf
loope
mov
fbstp
stc
daa
popf
popa
add
mov
(bad)
xor
inc
frstor
sbb
cs
push
add
sti
inc
jne
and
stos
clc
ret
cmp
pop
pop
ret
scas
aaa
(bad)
and
sbb
js
(bad)
jge
aam
mov
shl
arpl
in
lods
ret
pusha
jp
stos
aas
sar
jns
push
and
bound
push
call
pop
pop
sqrtps
mov
popa
les
cmp
adc
fst
cmp
test
repnz
jg
mov
sub
pop
repz
push
jbe
cwde
dec
sbb
xchg
adc
dec
fidivr
dec
popa
cld
mov
and
pop
push
bound
mov
call
cmp
sub
adc
dec
ret
xlat
sbb
push
cdq
and
mov
mov
sub
shr
inc
push
jne
inc
xchg
mov
cmp
pusha
inc
cmp
xor
jge
sti
mov
sub
adc
mov
cmps
jno
inc
cs
das
ror
pop
mov
mov
lods
cmc
(bad)
adc
xor
ds
arpl
nop
mul
addps
nop
push
pop
fdecstp
mov
pop
adc
mov
iret
or
push
sbb
into
add
std
loop
dec
ffreep
fld
push
push
pop
adc
cmp
outs
xor
dec
(bad)
das
push
mov
in
jmp
retf
fdivp
ja
cmc
shl
imul
jb
add
xor
cmp
popa
add
mov
and
mov
out
inc
ins
adc
aam
and
jp
cs
sbb
mov
add
test
push
sub
out
popa
pop
out
xchg
push
out
mov
and
and
and
mov
in
add
inc
loope
xchg
add
in
shl
inc
ins
pop
out
cwde
not
cli
outs
mov
retf
add
js
cmp
pop
test
inc
mov
fwait
mov
scas
pop
xchg
mov
xchg
shr
dec
jl
into
fcomp
out
cmps
and
mov
cmp
or
cmp
fstp
xlat
popa
mov
sub
dec
fisub
cmc
(bad)
in
and
stos
mov
xchg
out
in
ins
push
xor
sti
cld
jae
(bad)
and
add
fs
into
jnp
pusha
jmp
sub
sbb
mov
ins
sbb
imul
in
lods
mov
cwde
xlat
xchg
or
sub
dec
in
xchg
xchg
jbe
mov
cmp
repz
xor
inc
push
jns
xlat
mov
sub
scas
mov
lods
icebp
popa
sub
fidiv
push
inc
jmp
xor
dec
jmp
gs
fstp
sti
sbb
es
sahf
dec
mov
ja
test
mov
xor
pushf
call
cmc
push
sub
ret
xor
jge
mov
sbb
jmp
xchg
rcl
(bad)
cmp
aas
push
mov
clc
push
ret
jno
add
or
enter
fdivr
or
loope
mov
add
dec
jbe
xchg
shl
jb
int3
in
movs
repz
xchg
pop
repnz
call
(bad)
add
out
outs
cmp
push
test
mov
es
and
pop
jnp
jne
aam
(bad)
dec
mov
dec
stc
push
loopne
xchg
push
xchg
scas
xor
dec
or
rol
jle
dec
mov
popf
into
call
(bad)
pushf
dec
aam
leave
ret
cmp
jge
push
jne
mov
ins
jmp
bound
add
mov
pop
daa
cmp
ja
out
scas
pop
je
js
cmps
xchg
push
or
dec
rol
fnstsw
mov
int
jp
and
sbb
cmp
adc
pushf
je
pop
or
out
imul
push
pop
cmps
sbb
sub
lods
leave
jl
sbb
pop
or
jl
in
sbb
dec
mov
(bad)
xor
jb
mov
sbb
jmp
daa
ins
sub
stos
popa
cmp
inc
and
sbb
mov
pop
jmp
retf
mov
ror
test
push
or
in
in
jg
pop
or
arpl
push
pop
sbb
or
pmaddwd
pop
and
pop
push
jbe
xor
movs
in
add
pop
dec
fisttp
jae
mov
cmp
jecxz
xor
jnp
clc
sub
xor
in
mov
dec
and
retf
inc
fs
pop
cmp
mov
gs
addr16
(bad)
mov
(bad)
pop
fcom
rcr
out
cdq
pop
sub
xchg
cdq
xchg
pop
rcl
cmp
div
(bad)
or
xchg
and
movs
movs
push
mov
pop
xlat
mov
cmp
not
xor
mov
push
xchg
cmp
add
rep
pop
mov
or
sub
(bad)
(bad)
mov
push
and
dec
ins
fcmovbe
hlt
push
sub
mov
sub
lods
and
into
jbe
inc
std
jecxz
jns
enter
pop
pop
xchg
jp
div
fs
push
dec
iret
cwde
repz
mov
push
je
inc
outs
xchg
leave
lock
arpl
xchg
cmp
into
xlat
and
xchg
repz
inc
lods
pusha
sbb
retf
int3
cmp
lahf
test
es
push
pop
pop
adc
outs
clc
sti
push
sbb
mov
adc
repnz
cmp
call
rcr
dec
cdq
add
mul
pop
sub
ins
cmp
sub
pop
dec
es
dec
push
aad
popf
rcr
jle
leave
movs
mov
neg
int3
pop
stos
cmp
jns
dec
sti
inc
repz
or
in
nop
inc
rcr
mov
scas
ins
(bad)
js
aaa
xor
cmp
cmp
jecxz
add
(bad)
not
imul
cli
mov
push
or
inc
pop
dec
or
(bad)
and
push
imul
jge
jo
movs
pop
pop
movs
pop
add
mov
adc
cmp
(bad)
jmp
stos
dec
pop
pop
jmp
retf
and
mov
cmps
xor
test
pop
mov
pusha
xchg
repnz
out
int
sub
mov
mov
mov
push
mov
ror
jbe
or
aas
mov
pop
sti
pop
inc
shl
add
jnp
dec
fidivr
(bad)
movs
fcmovne
mov
scas
loop
mov
xor
popa
jecxz
or
jb
jnp
inc
and
inc
xchg
mov
dec
(bad)
lahf
es
and
cmps
mov
rcl
xchg
inc
jl
dec
dec
xor
imul
add
fcom
cmp
cmp
iret
mov
inc
cmp
inc
fadd
not
and
xor
fidivr
mov
mov
out
push
jmp
loop
push
jecxz
fstp
(bad)
fcomp
aad
fmul
push
icebp
(bad)
je
popf
sbb
xchg
loop
iret
or
sbb
jge
jns
es
(bad)
xchg
lods
sub
fnstcw
jl
in
stos
mov
(bad)
adc
sbb
arpl
adc
jae
ret
cmp
repnz
dec
pop
adc
dec
js
or
jg
int
or
sbb
(bad)
(bad)
in
iret
add
xchg
pop
enter
cmps
xchg
out
mov
iret
inc
icebp
pop
imul
sbb
mov
mov
jecxz
sar
xchg
mov
retf
push
push
pop
jle
jo
cli
repz
scas
inc
mov
popa
hlt
inc
mov
mov
loope
push
int3
addr16
dec
sub
sub
mov
repz
adc
and
repz
xor
or
leave
mov
and
and
cmps
adc
and
sub
stc
test
je
xchg
popa
xchg
mov
imul
(bad)
in
dec
test
adc
jb
sub
hlt
jmp
outs
jb
adc
hlt
push
jbe
jmp
data16
pusha
adc
add
sti
hlt
mov
and
imul
cmp
jle
xchg
jae
mov
test
or
jb
add
retf
rcr
mov
mov
in
xchg
sbb
xchg
cmp
ss
pop
aad
test
enter
loope
std
xor
push
arpl
daa
mov
jecxz
mov
inc
mov
mov
ss
dec
cmp
jbe
(bad)
shl
sbb
shr
xchg
dec
pusha
xor
push
mov
outs
mov
call
push
and
fcomp
jl
pop
mov
stos
cmps
rcl
jne
shr
sub
test
pushf
fucom
icebp
jne
jnp
in
and
pop
mov
sbb
shl
jno
inc
pushf
scas
push
out
mov
inc
mov
jle
cmp
adc
jmp
push
ins
repz
mov
cmp
or
push
sub
xor
sahf
test
inc
jb
in
out
dec
addr16
bound
out
cmps
xchg
jp
push
adc
adc
sub
loop
xor
xchg
pop
push
dec
mov
cmp
xor
leave
push
es
fcomp
dec
adc
or
mov
xchg
and
inc
les
and
pop
or
pop
push
imul
push
pop
data16
sub
push
sub
dec
dec
mov
push
sub
sti
stos
data16
pop
or
js
loope
mov
test
mov
test
(bad)
(bad)
cwde
shl
(bad)
pushf
cmp
mov
push
mov
imul
stos
sbb
jnp
push
leave
jg
clc
pop
bound
cli
mov
xor
xor
push
jnp
dec
pop
loopne
ret
lods
movs
jmp
not
outs
pop
imul
pusha
daa
push
push
jae
mov
adc
push
jmp
imul
or
and
jb
shl
in
movs
xchg
outs
cmp
xor
push
out
popa
lods
sbb
fs
jmp
mov
mov
adc
mov
sbb
pop
repnz
scas
inc
adc
loope
xor
pop
clc
cmc
xchg
pop
cmps
(bad)
imul
pop
(bad)
ficomp
cli
xor
push
into
mov
xor
fbld
ins
outs
push
lds
sub
and
pusha
loop
sub
pop
xor
or
cmps
lea
jne
cli
push
add
inc
cli
test
ret
add
lock
popa
mov
or
in
mov
out
jp
inc
and
ja
sti
neg
shr
push
pop
or
sub
jl
aas
push
lahf
fldcw
adc
mov
or
pop
inc
pop
mov
mov
cli
jno
mov
pop
jge
lds
std
imul
or
sbb
dec
not
or
clc
repz
push
outs
adc
mov
push
sub
xchg
jecxz
mov
je
das
pop
mov
rcr
pusha
scas
retf
mov
mov
nop
xor
(bad)
outs
cs
fist
int3
lds
or
outs
xchg
inc
adc
fadd
outs
sub
dec
xchg
xor
push
mov
repnz
dec
dec
dec
jnp
mov
inc
adc
xchg
xchg
mov
int3
loop
ins
test
loope
mov
enter
add
out
add
stos
into
sbb
push
icebp
lds
jb
js
icebp
aaa
jecxz
outs
sbb
iret
push
jae
clc
sub
jmp
mov
test
push
pop
jmp
ins
sbb
test
mov
dec
cmps
dec
int3
std
shl
mov
cld
inc
dec
inc
inc
pop
js
ins
in
das
push
leave
jp
and
add
(bad)
mov
and
shl
stc
ficomp
pusha
out
int3
leave
test
mov
call
pop
imul
mov
test
mov
mov
push
mov
sbb
imul
dec
or
fcom
sti
ror
xor
fisttp
push
push
pop
(bad)
outs
iret
retf
xor
nop
xchg
test
sbb
test
xchg
sub
mov
mov
loop
fstp
in
dec
xchg
dec
pusha
aam
popf
inc
jle
mov
cmp
jb
pop
inc
fs
xchg
popa
std
stos
sub
cmps
ja
mov
pop
jnp
push
jns
ins
cdq
and
call
ins
mov
or
xor
cdq
fidivr
lods
int
cmp
sub
retf
popa
add
out
ja
arpl
jnp
xor
add
add
xchg
hlt
add
ss
out
lea
neg
daa
std
test
sbb
xor
mov
std
adc
ss
ds
daa
adc
xchg
test
sbb
pusha
mov
mov
fsub
out
in
call
call
out
mov
out
rcl
pop
arpl
(bad)
and
nop
ftst
stos
add
mov
cld
add
(bad)
and
dec
push
add
not
inc
push
ret
jo
ins
jmp
and
xor
pop
cs
(bad)
test
enter
push
mov
scas
je
lock
retf
call
jae
fcmovne
test
and
fadd
pop
dec
cld
mov
out
mov
push
inc
inc
sub
pop
sbb
xchg
icebp
rcr
pop
sub
rol
sub
xchg
jge
cld
sbb
imul
fcmovnbe
ins
outs
sub
lea
pop
pop
adc
aas
mov
push
xor
or
dec
pop
out
and
add
xor
in
jle
and
sar
xor
pop
das
cmp
aam
or
iret
and
fbstp
push
fs
add
or
js
inc
add
mov
push
int
xor
jg
je
pop
push
push
cmps
mov
test
mov
sub
dec
popa
scas
iret
jg
add
bound
repz
cmp
inc
lea
mov
mov
mov
sub
loop
dec
mov
(bad)
ins
ins
add
(bad)
test
push
inc
and
enter
sahf
sub
dec
dec
cmp
lods
shr
out
sub
jae
xor
mov
jp
mov
es
rcl
xor
sbb
adc
mov
pop
or
fsub
push
pusha
(bad)
es
pop
or
sahf
mov
push
adc
pop
or
jl
sti
sub
xchg
pop
push
aas
pop
jo
(bad)
imul
pop
mov
ins
retf
sti
(bad)
rcr
(bad)
cmps
cmp
fimul
pop
sub
js
les
push
lods
(bad)
retf
std
xchg
(bad)
cmp
dec
icebp
mov
push
xchg
xchg
out
loop
cmps
(bad)
xchg
inc
jmp
(bad)
cmp
ret
(bad)
fs
cwde
xor
ret
jmp
clc
ror
into
in
mov
daa
neg
(bad)
and
lods
xor
inc
jb
or
hlt
push
jnp
loopne
call
stc
loop
sahf
lock
arpl
pop
(bad)
loopne
cld
cld
fdiv
mov
mov
adc
fstp
(bad)
add
sbb
outs
add
sbb
mov
sbb
sti
fmul
xchg
fwait
jecxz
or
sbb
es
and
popa
dec
mov
add
push
nop
jns
or
ret
int3
jge
lea
retf
test
setbe
into
jl
enter
pop
pushfw
jmp
retf
rcl
imul
pop
pop
(bad)
gs
call
xchg
hlt
(bad)
mov
dec
lods
xor
or
pop
ja
clc
and
lea
fcom
gs
fs
cs
adc
inc
add
jecxz
aas
mov
into
pop
jmp
mov
adc
xor
gs
movs
call
jp
xchg
jbe
add
xor
mov
adc
jmp
mov
jp
arpl
mov
iret
inc
shl
mov
fs
or
test
mov
imul
dec
cmps
mov
cdq
scas
repz
mov
mov
fadd
or
sub
jl
xchg
pop
pushf
sub
add
push
jecxz
fs
xlat
pop
movs
out
xor
pop
push
mov
mov
sub
and
or
enter
inc
pop
adc
test
out
jmp
push
pop
mov
cmp
ins
imul
and
fs
cld
jmp
(bad)
movs
cmps
mov
push
aad
push
scas
stos
add
cmp
push
mov
cld
scas
sub
xor
test
mov
inc
push
sub
outs
loopne
test
imul
or
cmp
lahf
push
adc
les
mov
xchg
pop
push
call
push
stos
rcl
call
dec
or
out
sbb
push
fs
jbe
sub
lods
ret
ret
je
cmps
pop
(bad)
pop
xor
add
jnp
repnz
dec
cs
inc
cli
jecxz
push
sbb
sahf
sub
ror
mov
sbb
int
mov
enter
(bad)
jge
gs
inc
mov
pusha
imul
sar
or
cmps
pop
test
outs
mov
(bad)
ficomp
outs
fwait
sti
idiv
fld
mov
xlat
bnd
js
arpl
mov
dec
stc
pop
(bad)
in
inc
pop
out
sbb
cmp
cld
(bad)
xor
ins
imul
fistp
das
test
ds
ret
sub
push
adc
in
push
(bad)
adc
nop
cmc
push
jmp
cli
fiadd
pusha
cs
mov
fistp
jo
add
shl
in
dec
mov
adc
fidivr
scas
test
inc
adc
push
test
jo
inc
push
mov
(bad)
fcmovb
ret
mov
sub
imul
adc
cmp
sbb
pop
and
and
mov
cmp
adc
pop
aad
frstor
xor
lods
xchg
ror
pushf
stos
in
xor
adc
out
lock
or
imul
sub
in
(bad)
repnz
jno
(bad)
xor
xor
mov
jnp
or
dec
imul
sti
repnz
std
add
sbb
lahf
fldz
call
or
push
icebp
fisttp
sar
cmp
sbb
jl
sub
shl
fisttp
fmul
xchg
cmp
add
push
ror
adc
retf
dec
gs
es
xchg
sub
into
(bad)
mov
fs
push
aad
retf
jge
and
jbe
in
mov
push
repnz
push
into
push
or
arpl
mov
xchg
sub
or
popa
xor
das
dec
mov
mov
pop
loop
jge
sub
data16
push
jge
sbb
sbb
mov
outs
ret
fisttp
push
pop
loopne
cld
push
inc
jecxz
fndisi(8087
cmp
push
jno
movs
adc
es
cmp
scas
dec
pop
inc
add
cdq
add
test
jmp
push
jmp
loop
shl
xor
retf
add
jmp
cdq
sub
loopne
fisub
adc
ret
jge
pop
pop
arpl
in
mov
clc
bound
retf
adc
sar
jmp
mov
in
mov
or
fisttp
popf
push
or
mov
mov
pop
sbb
clc
inc
dec
leave
outs
fist
shr
and
cmps
dec
aad
xlat
loop
outs
mov
or
dec
sub
ret
xor
aaa
jo
sbb
push
pop
mov
sbb
pop
aaa
lahf
mov
ins
xchg
pushf
fild
sar
retf
xor
int3
popa
push
imul
shl
mov
mov
mov
mov
mov
mov
jle
add
push
shl
stos
pop
inc
jecxz
dec
test
cmp
push
xchg
stc
call
jmp
xchg
stc
and
sbb
push
push
int
jne
mov
sub
inc
in
call
xor
pushf
test
add
in
scas
add
xchg
cmp
pop
(bad)
fs
retf
xchg
cmp
add
sbb
cmp
loopne
cmp
add
mov
ss
in
repz
cmp
cmp
les
dec
push
push
xchg
cmova
mov
repnz
or
jne
pop
(bad)
lock
adc
dec
or
jbe
mov
sub
mov
inc
mov
loop
adc
retf
in
daa
iret
add
sbb
add
jae
shr
js
bound
jecxz
adc
xchg
xchg
repnz
ins
pop
mov
retf
mov
mov
cmp
cmp
fsubr
ror
jbe
xchg
adc
xchg
xor
jg
mov
pop
mov
or
shl
jle
inc
sub
add
shl
mov
mov
std
ja
(bad)
xchg
dec
push
out
jno
test
push
mov
mov
cli
cdq
jnp
mov
adc
fwait
jle
xor
loope
popa
push
xor
add
xor
xor
cld
sub
mov
mov
(bad)
mov
fldcw
add
and
inc
sbb
mov
or
adc
in
sbb
aaa
push
push
jmp
dec
jno
nop
mov
push
out
sbb
lock
jns
dec
aam
in
in
adc
loope
xchg
in
xor
fstp
ja
pop
jmp
pop
loope
dec
cli
in
jge
enter
fild
xchg
and
lods
shr
cld
and
and
add
adc
int3
mov
sub
repnz
xor
cmp
xchg
and
out
push
mov
(bad)
(bad)
scas
xchg
dec
sbb
and
inc
clc
push
and
xor
js
mov
dec
add
adc
mov
dec
and
or
je
cli
fsub
xchg
jmp
or
or
repnz
ins
push
test
in
les
xlat
sub
dec
jmp
add
test
mov
sub
pop
dec
cwde
adc
jno
sbb
xchg
pop
sbb
repz
cld
fs
mov
fisttp
ins
test
in
and
add
and
aad
xor
push
test
mov
lock
sbb
dec
push
daa
ffree
nop
ins
fisubr
(bad)
xchg
push
shl
jmp
shl
sbb
xchg
call
mov
push
sbb
xor
into
into
lods
clc
bound
jmp
rol
push
jmp
test
push
popa
cmp
push
icebp
xchg
xchg
jo
aam
in
or
repz
cmp
inc
add
(bad)
out
jle
call
sub
in
jo
rcl
stos
mov
mov
outs
addr16
mov
jl
retf
xchg
sbb
add
movs
add
ror
inc
sub
seta
fisubr
inc
lea
xor
cmp
pop
dec
push
es
ins
cmp
ins
sbb
stc
mov
jns
xor
mov
xchg
push
ret
ror
test
iret
aad
popf
mov
jmp
mov
cs
cli
add
pop
mov
xor
jle
xlat
xor
shl
pusha
cs
retf
int
rcl
inc
addr16
mov
pop
push
cli
(bad)
dec
rcl
cmp
and
ret
push
aad
mul
fisttp
clc
fst
mov
mov
(bad)
jae
movs
jb
imul
js
push
aaa
dec
je
aad
xchg
retf
aaa
int
jae
loope
stc
fistp
dec
xchg
fadd
aaa
mov
enter
push
xchg
das
cmp
pop
rcr
addr16
xor
into
int
jmp
add
ins
sbb
mov
cwde
dec
pop
cld
push
or
adc
jmp
or
(bad)
sbb
sbb
sub
into
arpl
mov
jg
ja
jmp
pop
jae
mov
jae
push
xchg
outs
sbb
and
cmps
push
jmp
scas
popa
(bad)
cmp
cdq
add
push
xchg
xor
pop
popa
adc
push
cmp
add
mov
dec
jne
jmp
lahf
dec
xchg
mov
cmp
lds
sbb
out
inc
fwait
jp
in
pop
lods
iret
test
nop
mov
sbb
dec
sub
fwait
push
jns
sbb
push
dec
pop
jae
push
inc
aam
call
imul
sub
scas
pop
jno
push
pop
sub
out
dec
push
ja
ss
add
je
mov
lods
adc
or
into
xchg
cmps
ins
ss
daa
js
sub
ja
dec
xchg
xchg
push
mov
outs
test
ins
loope
(bad)
xlat
(bad)
xor
das
ins
test
push
mov
call
iret
dec
dec
loopne
ficom
stc
sahf
dec
stc
lahf
jns
inc
cmp
xor
jne
(bad)
fst
or
fisub
pop
sub
stos
(bad)
outs
mov
mov
shl
jg
ja
cmp
hlt
adc
cwde
movhps
scas
xchg
adc
mov
imul
aaa
ret
rol
fucomi
xchg
push
lds
movs
xor
adc
xor
mov
adc
or
cmc
(bad)
dec
ret
sete
xchg
arpl
xchg
mov
hlt
ret
outs
(bad)
fadd
sub
push
jmp
test
sti
imul
fstp
or
and
mov
lock
mov
int3
mov
int3
movs
push
cdq
retf
imul
aad
movs
push
in
push
movs
push
inc
out
das
mov
(bad)
or
sbb
popa
sbb
rcl
das
cld
push
repnz
mul
into
imul
add
jno
cli
(bad)
pop
push
fs
jmp
shr
test
xchg
ins
ss
jmp
xor
fdivr
mov
xor
cmps
movs
pop
mov
inc
arpl
int3
cmp
clc
test
cmp
adc
in
pusha
push
xchg
leave
inc
fcmovnu
mov
jb
std
aas
jbe
sub
lods
xchg
fs
ror
and
aas
sti
inc
and
pop
add
int3
sub
ficom
jle
adc
cld
jmp
lea
push
jnp
das
and
lods
push
pop
mov
pop
mov
pop
xchg
in
xchg
mov
arpl
pop
mov
pop
aas
add
aaa
inc
fsubr
fdivr
pop
imul
std
iret
into
pop
ins
bound
fisttp
sub
pushf
xor
aad
aam
cmp
inc
int
jmp
sti
dec
retf
pop
in
mov
int3
jecxz
push
aam
stos
xor
cli
lds
pop
adc
aaa
xchg
shl
add
das
mov
stos
jns
js
pop
inc
inc
and
loope
adc
push
repnz
pusha
sbb
jae
movs
leave
fisubr
ret
jg
inc
fsub
add
(bad)
xchg
cmp
ja
leave
clc
cmc
dec
mov
(bad)
das
xor
mov
call
call
stc
out
and
push
mov
jno
pushf
inc
push
push
ja
aad
ret
dec
cmp
push
and
call
loopne
xor
addr16
dec
fistp
les
sbb
das
rcr
shr
data16
cmp
dec
sbb
fistp
aad
cli
fcom
into
cmps
and
push
rcl
ds
leave
mov
repz
aam
(bad)
or
jb
push
idiv
mov
xchg
adc
(bad)
jmp
cmp
nop
and
mov
fld
jbe
jp
jnp
loopne
adc
push
jmp
mov
pusha
adc
inc
jae
daa
jmp
aas
push
icebp
xor
jge
inc
mov
sub
fbstp
fldcw
pushf
jmp
out
in
cmp
das
fucomp
jnp
or
mov
test
sub
int3
cld
es
loopne
xor
mov
pop
mov
cld
outs
loop
jmp
adc
and
and
cmp
cmps
(bad)
sub
aaa
rcl
pushf
ret
js
xlat
repnz
add
adc
sti
fsub
mov
clc
call
inc
les
jae
sub
and
mov
mov
retf
or
arpl
adc
push
pop
in
lds
(bad)
bound
jmp
jnp
or
push
pop
dec
mov
enter
outs
andps
jl
fs
inc
(bad)
dec
push
xchg
mov
call
(bad)
mov
jle
inc
iret
into
jb
pushf
sbb
imul
jbe
xor
popa
push
push
movs
or
inc
dec
cmc
les
and
pop
jns
add
xor
push
inc
inc
je
sbb
hlt
clc
outs
cmp
pop
in
stos
mov
and
pusha
and
gs
jl
sub
sbb
movs
mov
xlat
(bad)
adc
jl
lods
sub
pop
iret
push
mov
jne
jge
out
and
cmps
sbb
imul
(bad)
cmp
push
mov
cmp
test
push
mov
pushfw
dec
pop
je
fsub
xchg
mov
sti
stc
test
or
lods
out
sub
dec
xchg
xacquire
mov
sahf
test
cs
fs
add
pop
jno
fs
push
es
shr
adc
push
dec
fwait
lods
xor
retfw
or
push
loope
int3
out
pop
les
punpcklbw
mov
test
pop
(bad)
xor
push
dec
mov
xchg
adc
sub
enter
in
add
setg
stc
int3
dec
pop
call
jmp
out
add
jne
sbb
jae
sbb
mov
cmp
push
hlt
jmp
mov
cli
ss
xchg
es
push
mov
test
inc
ret
pop
cmc
(bad)
push
sub
xor
pop
add
adc
lahf
loopne
dec
jns
and
or
outs
jne
fcomp
push
adc
push
mov
cld
cmp
retf
aas
call
fsub
sub
sbb
out
sbb
pop
dec
pop
movs
shr
mov
fsubr
cmp
retf
scas
xor
cmp
inc
mov
or
ss
mov
jp
movs
loopne
stos
pusha
pop
mul
push
sbb
imul
inc
enter
pop
or
jg
mov
movups
and
sbb
mov
sub
xlat
cmp
mov
cmp
pusha
out
push
aam
jne
(bad)
push
movs
add
xlat
fist
xchg
repnz
nop
out
mov
cmp
aaa
sub
out
jo
adc
jecxz
fnsave
(bad)
fdiv
imul
retf
cmp
test
leave
pop
or
outs
xchg
lods
hlt
ja
xor
not
paddusw
call
(bad)
mov
lea
in
sub
enter
cmp
add
retf
mov
(bad)
dec
ss
imul
mov
jmp
mov
shr
in
mov
ins
psubusb
into
mov
popa
cwde
adc
adc
cwde
xchg
mov
mov
mov
sahf
(bad)
data16
popf
push
pop
sub
cmc
and
in
fcomp
mov
out
or
adc
adc
fcom
repz
push
vorps
mov
aaa
pop
or
out
aam
pop
loope
jp
cmp
daa
sbb
push
inc
mov
mov
xlat
mov
mov
lods
adc
stos
hlt
(bad)
mov
inc
inc
xor
sub
jmp
ror
add
or
pop
sbb
adc
daa
(bad)
out
outs
xlat
cli
ins
inc
add
dec
push
(bad)
jg
push
adc
test
push
aaa
push
push
fimul
loop
sbb
scas
pop
sbb
mov
xchg
clc
sbb
iret
shl
dec
pushf
retf
int3
je
xlat
dec
out
mov
and
sbb
jns
ins
inc
hlt
mov
(bad)
les
push
or
lahf
xor
pop
cmp
retf
add
in
hlt
push
jle
mov
and
in
test
jb
ins
fistp
inc
xchg
loopne
xchg
ds
imul
sbb
xchg
sub
outs
inc
shl
dec
dec
imul
test
adc
imul
test
cdq
pop
or
retf
icebp
cmp
sbb
js
mov
jo
ins
(bad)
(bad)
push
bound
(bad)
mov
jb
ins
and
pop
inc
and
out
rcr
dec
leave
sbb
pop
movs
sar
(bad)
iret
mov
int
xlat
dec
ja
popa
loop
pop
in
jge
js
push
jae
and
mov
cmp
js
jae
nop
shl
sbb
mov
adc
ss
shr
and
push
sti
push
loope
sub
push
sbb
adc
cld
and
or
mov
jp
cmp
cmp
jecxz
sahf
cmp
aaa
inc
pop
cmp
out
jg
call
popf
and
clc
mov
cdq
jl
xor
pushf
inc
and
cmp
ins
neg
and
pop
pop
xchg
sub
(bad)
mov
cwde
mov
daa
cmp
retf
add
out
xchg
cld
movs
push
ds
shr
cmc
scas
mov
ins
test
clc
(bad)
std
mov
repnz
in
clc
in
mov
retf
mov
popa
inc
aaa
ins
(bad)
jg
or
adc
push
jae
(bad)
in
pop
fucom
fstp
add
mov
daa
imul
pop
mov
or
jo
in
loopne
(bad)
push
mov
iret
mov
pop
xchg
call
les
imul
inc
xchg
lock
int3
adc
mov
ss
aad
xchg
je
cdq
imul
adc
je
push
jbe
and
aaa
xor
or
sub
xchg
ins
arpl
push
and
out
movs
mov
pop
sub
popf
ja
stos
in
(bad)
mul
xor
mov
test
movs
iret
(bad)
das
mov
sahf
push
(bad)
cdq
dec
xrelease
std
scas
xor
jle
push
call
(bad)
and
aam
cs
push
inc
pop
push
xchg
inc
and
xchg
pop
pop
mov
repnz
in
pop
push
rcl
pop
cmps
sub
adc
test
call
cld
std
push
call
and
pop
ins
jae
imul
sti
cmp
cmp
jg
push
xchg
nop
aad
pop
(bad)
pop
xchg
xchg
add
add
cdq
imul
das
dec
jle
out
xchg
cmp
test
dec
ins
fidivr
dec
fnstcw
call
stc
jmp
pop
mov
popa
je
mov
clc
(bad)
jb
xchg
cmps
out
fwait
add
fs
or
sub
adc
pop
sub
xlat
or
or
(bad)
mov
jmp
mov
mov
cmp
push
pop
jmp
jno
es
adc
mov
daa
les
clc
nop
(bad)
sub
pusha
(bad)
pop
outs
icebp
ins
mov
sar
xor
inc
mov
xlat
das
icebp
jge
mov
fnstsw
sbb
lods
aam
or
cli
popa
ja
leave
repnz
dec
push
pop
cmp
mov
inc
xlat
fidiv
xchg
(bad)
sub
stc
int3
cmps
sub
ret
shl
stos
jl
std
icebp
pop
jmp
clc
mov
movs
inc
retf
cs
jb
or
add
cmp
popa
mov
imul
jo
jg
xor
jge
sbb
stos
stc
(bad)
dec
icebp
add
inc
in
push
mov
test
push
cwde
pop
push
push
xchg
add
lods
fisubr
xchg
data16
adc
xor
adc
and
sub
in
sbb
add
loopne
fldcw
jmp
movs
and
(bad)
shl
call
stc
mov
in
test
jno
pop
push
imul
fidivr
lds
cld
int3
mov
adc
sbb
xor
and
es
dec
or
or
and
mov
jns
in
jbe
test
rol
call
es
repnz
pop
inc
xchg
pop
sub
data16
cmp
cmps
pop
jl
out
push
and
add
inc
lock
add
aas
xor
cmp
ins
sub
(bad)
(bad)
mov
mov
(bad)
test
pop
or
xor
mov
retf
daa
cld
frstor
repz
push
ret
pop
and
push
test
cmp
xchg
ds
adc
mov
sbb
add
fs
repz
out
adc
mov
push
clc
mov
lods
shl
jle
fstp
mov
sub
jmp
cmp
xchg
jmp
add
jg
repz
cmp
ins
sbb
jno
callw
mov
fstp
aam
fcom
add
mov
dec
(bad)
fs
pop
pop
xchg
and
mov
xor
fisub
test
mov
pop
pusha
dec
mov
cmp
js
sbb
out
mov
xchg
js
jecxz
(bad)
retf
mov
adc
mov
dec
xchg
adc
lock
out
xor
aad
push
iret
add
popa
cmp
push
pop
and
and
dec
daa
fs
aam
mov
mov
sar
cmp
mov
push
stc
stos
sbb
dec
sub
xchg
or
mov
es
adc
pop
inc
sub
add
xor
ins
xchg
inc
sbb
bound
xchg
push
je
enter
daa
in
sub
(bad)
jae
lods
jle
add
push
call
dec
sub
mov
sub
out
shl
movs
aam
xchg
jge
inc
xor
(bad)
jb
dec
push
jnp
dec
xor
mov
arpl
lods
cld
dec
mov
fstp
push
dec
repz
(bad)
aad
lods
sahf
xor
mov
push
xchg
div
not
mov
mov
sahf
fadd
retf
cdq
and
fcomp
mov
movs
jl
mov
mov
push
xor
in
cmps
loop
fnstcw
leave
jp
sbb
fcmovnbe
fidiv
sbb
gs
or
ss
mov
jp
pop
js
(bad)
out
and
mov
sbb
pushf
dec
cmp
sbb
sub
or
imul
sub
movs
jbe
xchg
fbstp
pop
inc
jmp
mov
(bad)
cmp
das
int
sbb
ror
das
call
fdivp
and
or
arpl
xchg
in
mov
rol
add
pop
push
imul
mov
into
mov
frstor
das
fisubr
out
test
or
push
movs
push
test
outs
es
fsubr
mov
lea
lds
test
cmps
repnz
pop
or
(bad)
jmp
dec
test
call
clc
test
cmp
inc
je
mov
xchg
pop
cmp
xchg
push
test
xchg
xor
pusha
pop
jne
sub
inc
push
xchg
sbb
out
stc
and
and
mov
fwait
push
clc
sbb
sbb
adc
pop
add
adc
loope
ins
repnz
and
sbb
mov
call
jnp
pop
pushf
imul
pop
or
fbld
sbb
adc
loop
cmp
and
jp
sub
or
pop
xor
aaa
pusha
loope
xor
pop
push
mov
mov
pop
outs
mov
mov
sbb
scas
scas
inc
mov
xchg
arpl
mov
sbb
add
movs
rcl
jmp
inc
lahf
sub
pop
pop
pop
mov
into
dec
mov
add
or
lds
jg
push
bound
xchg
(bad)
mov
sub
fwait
mov
movs
pushf
and
shrd
cmp
dec
mov
pop
xor
dec
(bad)
jmp
hlt
out
shr
lods
sahf
pop
mov
jg
xor
bound
rcl
sub
daa
cwde
push
add
lods
sub
jmp
lds
sbb
adc
std
dec
rol
in
mov
popf
xor
cdq
mov
add
jecxz
leave
mov
fnstenv
and
(bad)
jae
(bad)
xor
daa
popf
std
(bad)
stc
push
cs
cmp
inc
jge
(bad)
fadd
es
stos
push
xor
inc
mov
fld
(bad)
ins
leave
ds
mov
mov
add
test
xchg
jns
ja
aad
fdivr
adc
daa
sbb
cmp
pop
std
push
cmp
fs
ret
inc
push
cmps
pop
mov
add
mov
rcl
sub
adc
call
pop
sti
xchg
mov
ds
push
test
jbe
inc
retf
lea
push
and
mov
mov
or
xchg
sbb
mov
mov
inc
or
mov
push
and
gs
fidiv
jbe
dec
jg
das
jnp
int
movs
mov
iret
or
mov
xor
cmp
add
xchg
and
xchg
movs
stos
xchg
xchg
lock
inc
lahf
add
pop
fstp
add
js
icebp
mov
or
daa
add
sub
mov
and
ffreep
repnz
movs
xchg
mov
mov
cmp
mov
push
sub
imul
jmp
sbb
inc
in
movs
xchg
inc
arpl
mov
cmp
lock
lods
mov
adc
push
jp
fs
je
push
pop
jle
retf
pop
lock
sub
movs
mov
das
fwait
inc
push
pop
scas
push
mov
in
shl
dec
adc
push
inc
add
mov
add
mov
xchg
es
aam
dec
adc
xchg
mov
xor
jle
sbb
sar
push
test
lds
stos
movs
outs
test
mov
outs
fist
mov
les
int
je
pop
mov
ret
inc
test
(bad)
int3
dec
xchg
xchg
sub
arpl
jp
mov
mov
fisub
xor
dec
int3
ret
mov
cld
xchg
or
fst
aas
jl
jne
dec
fwait
jno
mov
sub
loope
pop
ins
jne
mov
jecxz
jmp
mov
or
fisubr
pop
lahf
push
imul
pusha
jbe
fs
aad
(bad)
call
jg
cs
shl
cmp
and
xor
push
xor
cmp
js
repz
paddd
out
or
push
xor
cmp
cmp
fsub
popf
stos
cmp
and
jo
in
push
loop
ss
pop
pop
aad
cmp
and
mov
js
jecxz
loope
push
sbb
xchg
loope
xlat
mov
movs
sbb
push
xchg
push
inc
and
sbb
jl
aas
loopne
push
push
in
inc
stos
push
cmps
retf
dec
and
xor
jp
or
jge
mov
mov
loope
dec
mov
xlat
lock
mov
inc
inc
fs
dec
sbb
inc
aad
mov
shl
xchg
rcl
sbb
call
inc
push
dec
stos
and
popf
lds
sti
pop
xchg
sti
cs
daa
in
sbb
cs
ror
xor
mov
or
std
mov
or
dec
jge
jl
js
pop
lock
imul
add
xchg
int3
imul
push
jge
jmp
(bad)
enter
and
inc
push
mov
xor
pushf
or
mov
ret
push
popf
arpl
sti
in
sub
adc
aam
mov
adc
fadd
lock
inc
scas
fsubr
dec
test
lods
sub
cwde
clc
outs
lods
xor
pop
fwait
stc
push
or
pop
mov
ins
dec
adc
mov
popf
mov
jno
hlt
enter
dec
mov
mov
pop
push
sar
dec
nop
loope
cmps
test
rcl
add
test
mov
shr
sti
sbb
pop
xor
mov
loope
dec
inc
and
xor
xchg
fisubr
icebp
mov
xchg
out
xchg
mov
les
mov
push
mov
enter
(bad)
cmps
sar
sar
pop
out
or
(bad)
sub
enter
test
pop
(bad)
sahf
pop
mov
repnz
mov
fcom
sbb
xchg
or
push
jmp
shl
push
rdmsr
stos
rcl
dec
cmp
imul
add
jmp
xchg
jmp
rol
pop
jg
outs
adc
add
in
ins
stos
ja
adc
ja
jnp
push
jge
dec
arpl
xchg
mov
outs
mov
sar
int3
clc
fucomi
jbe
in
jae
jmp
pop
(bad)
xchg
xchg
(bad)
pop
icebp
sbb
imul
mov
sub
xor
movs
aam
imul
ret
add
cmp
mov
cmp
data16
popa
adc
push
gs
adc
stos
push
(bad)
mov
xor
dec
mov
push
sub
mov
mov
es
mov
pusha
repz
dec
inc
retf
scas
cmp
and
sti
cmc
push
mov
push
add
sub
int3
inc
std
sbb
dec
in
aas
outs
sub
add
shr
int3
movs
jno
push
adc
add
jns
jae
call
mov
test
sbb
add
nop
aaa
add
lock
ret
pop
push
jle
retf
in
pushf
ret
or
gs
retf
adc
in
fnsave
lahf
and
push
add
mov
daa
dec
mov
or
push
je
rcr
enter
xor
sbb
push
jbe
and
xchg
outs
jecxz
sbb
sub
or
xchg
inc
std
fisttp
data16
ss
ret
not
out
out
adc
imul
dec
mul
or
add
inc
mov
pop
out
aaa
xor
js
stos
rcr
mov
mov
movs
(bad)
arpl
loop
imul
mov
retf
test
sub
scas
mov
ret
out
imul
stc
mov
xchg
xlat
jmp
xor
sar
adc
(bad)
jecxz
aad
inc
js
mov
es
inc
jne
call
inc
or
cmp
inc
add
sar
add
ins
es
lods
dec
xor
dec
or
sbb
jb
loope
shl
imul
adc
aas
push
mov
jg
xchg
mov
(bad)
in
rol
xor
pop
push
or
aas
fdiv
cmps
ret
push
xor
out
lahf
jp
data16
push
sbb
mov
iret
mov
and
imul
fs
xchg
fldcw
mov
add
dec
sti
push
xlat
jecxz
ins
inc
repz
sub
loopne
aaa
add
or
imul
lods
fst
and
nop
mov
mov
push
mov
add
and
xchg
mov
enter
cmp
jmp
aas
je
ret
js
jge
dec
cwde
into
mov
fmulp
xor
int
fsub
cwde
push
(bad)
test
loopne
lds
lods
adc
xor
sbb
shl
sub
sub
das
(bad)
add
movs
sub
xchg
aaa
(bad)
xor
xchg
stos
xchg
(bad)
jle
xchg
add
out
arpl
pop
je
and
sbb
das
js
shr
adc
pop
sbb
sub
pop
cs
dec
mov
arpl
sbb
add
(bad)
sbb
inc
sub
pop
(bad)
ds
xor
data16
pop
xor
dec
xor
test
pop
and
or
inc
inc
push
jno
push
push
test
mov
mov
stos
call
out
mov
int
push
push
mov
mov
pop
jb
dec
out
call
mov
ret
cmp
pushf
int3
sar
add
aas
mov
loope
dec
dec
mov
mov
mov
cmc
fcomp
cmp
cmp
push
repz
mov
int3
mov
pop
adc
arpl
mov
cmps
into
push
mov
dec
pop
mov
xchg
cmp
jae
and
mov
mov
cmp
mov
xchg
cwde
pop
je
jge
dec
cmp
mov
push
add
out
cmc
out
cmp
adc
iret
mov
ficom
cmp
fstp
mov
enter
ret
jg
push
mov
leave
or
mov
mov
mov
cmp
add
fsub
or
add
jl
loop
enter
stos
movs
xchg
xor
out
test
popa
xchg
inc
test
int3
enter
std
add
sti
js
mov
cmps
mov
cmp
movs
repnz
fist
mov
ret
in
mov
or
inc
sbb
data16
ret
pop
and
xchg
dec
pop
cld
jmp
out
pop
cmp
aad
xchg
mov
add
pop
jae
out
es
dec
pop
or
mov
outs
test
add
cwde
or
out
sub
and
into
adc
scas
push
rcr
mov
fs
mov
out
mov
(bad)
jle
daa
add
out
sbb
pop
pop
xor
into
test
out
lods
data16
push
push
arpl
pop
push
dec
mov
mov
arpl
mov
jae
ins
addr16
xor
test
jbe
es
push
cdq
mov
test
xor
ins
movs
cmp
stos
fimul
cli
mov
dec
cs
mov
push
xor
call
sub
das
shl
fcomp
add
cwde
std
dec
cwde
es
das
mov
popf
mov
jp
add
sub
mov
popa
lods
jno
in
hlt
call
out
adc
pop
xchg
xor
cmp
cmps
inc
xchg
inc
fadd
cs
jecxz
mov
xchg
or
push
and
pop
pop
das
mov
popa
cmc
imul
push
mov
sbb
sbb
int3
dec
rcl
dec
scas
mov
out
nop
pop
jp
add
cmc
push
or
rol
inc
pop
lods
sbb
or
clc
jnp
pop
push
pop
pop
ja
jl
leave
pop
xchg
(bad)
(bad)
mov
dec
xor
xchg
cmc
(bad)
cmp
jge
mov
pop
cdq
push
cld
rcr
mov
jns
sbb
and
fadd
leave
push
loopne
mov
popa
push
mov
jl
shl
push
mov
ss
fld
ret
sbb
jp
rcr
rcr
stos
mov
ficomp
out
enter
hlt
jbe
jmp
mov
push
or
push
pusha
pop
push
jg
sbb
in
dec
sar
arpl
retf
out
push
cmp
neg
jg
cs
fst
(bad)
cmp
pop
sahf
inc
jbe
xor
lds
pusha
inc
push
pop
ins
retf
inc
cs
sub
retf
scas
(bad)
push
ds
push
or
leave
std
jg
jmp
fcmovb
jns
data16
(bad)
outs
jmp
xchg
repz
rol
cdq
sbb
dec
in
stc
jae
or
or
mov
jbe
fist
xchg
push
xchg
loopne
pop
addr16
aam
das
test
cmp
sbb
mov
ss
bound
pop
adc
and
call
push
pop
es
pop
test
cmp
and
xchg
pop
jge
xor
cmp
lds
push
mov
scas
test
jns
xor
das
push
lds
adc
add
mov
mov
and
mov
je
out
enter
int
sub
pop
(bad)
dec
inc
mov
stc
(bad)
icebp
dec
and
push
enter
cmc
jg
push
shl
data16
pop
aas
adc
cmp
mov
mov
sbb
adc
cmc
add
gs
movs
jle
inc
pop
dec
mov
sti
sub
(bad)
call
je
jno
cmp
push
pop
pop
sbb
or
pushf
mov
fwait
mov
pop
shl
pusha
adc
mov
retf
mov
sahf
into
sar
out
push
ret
fcom
or
xor
loope
xor
(bad)
fucomip
(bad)
jmp
xchg
jae
cmp
fild
xchg
fwait
cmp
ror
ds
cmp
and
aam
cmp
dec
mov
dec
jle
aas
pop
fistp
mov
test
fbld
into
pop
mov
fcom
test
xor
ror
and
je
cwde
sub
call
mov
je
mov
cmps
add
sub
cli
outs
or
stos
imul
xchg
jne
xchg
adc
or
sub
popf
xlat
inc
imul
in
ins
sub
push
push
xor
outs
arpl
pop
lea
mov
es
xchg
call
mov
inc
test
xchg
jb
push
mov
inc
mov
or
jecxz
aas
out
or
arpl
xor
hlt
and
jno
pushf
pop
sub
sbb
or
popa
stos
repz
clc
push
sbb
add
out
add
push
pop
pop
xor
xchg
int3
push
retf
push
jle
and
stos
outs
(bad)
(bad)
xchg
aaa
std
add
and
retf
jmp
test
xor
daa
lock
xlat
cmp
push
aas
fdiv
int
pop
into
rcl
daa
pop
cld
cmp
mov
stc
hlt
inc
add
mov
cwde
mov
stos
retf
lahf
idiv
pop
test
shl
fcom
inc
ss
mov
jno
mov
dec
sub
popf
mov
cmp
xchg
iretw
dec
mov
std
sbb
pop
jnp
adc
xor
lahf
int3
call
mov
sub
sti
push
(bad)
xchg
fst
sbb
mov
push
cmp
cmps
add
cmp
retf
fcomp
jno
sub
jo
retf
xlat
xor
mov
cmps
inc
ror
les
cmp
add
xchg
inc
mov
movs
xor
call
arpl
mov
pmaddwd
ja
pop
cmps
jle
cld
mov
push
pushf
imul
xlat
int
sbb
pop
or
cmps
ins
xchg
xchg
imul
mov
mov
(bad)
js
mov
jnp
dec
or
sub
sbb
fisubr
mov
rol
out
neg
(bad)
popa
pusha
sub
inc
push
inc
lods
adc
(bad)
adc
xchg
sbb
jb
and
jle
repnz
adc
imul
sbb
cdq
addr16
in
xchg
xchg
push
push
addr16
in
add
cmps
sbb
and
rcl
or
dec
aas
movs
pop
cwde
daa
in
(bad)
je
repz
daa
xchg
movs
xchg
xor
xchg
call
push
stos
loopne
mov
test
dec
ins
imul
and
imul
add
icebp
xchg
push
lahf
xor
mov
clc
sub
or
push
rcr
adc
mov
add
sti
cmp
push
cmps
aad
cmp
pop
pop
xor
and
paddd
or
xchg
out
sub
stc
pop
ficom
or
inc
in
dec
and
cmp
sub
sub
and
in
cmp
int
enter
outs
and
ja
ret
retf
fild
mov
int3
cwde
repz
retf
cmps
or
(bad)
mov
cmp
inc
push
test
lea
mov
pop
push
xor
add
dec
add
dec
pushf
cs
bnd
xlat
cs
xor
xor
lahf
int3
int
jle
enter
ror
adc
push
outs
dec
nop
rcl
jg
(bad)
push
xchg
test
pop
inc
les
mov
mov
cmp
dec
outs
cs
cli
cmp
fiadd
and
cmps
or
push
fcomp
inc
xchg
ror
mov
je
imul
dec
shl
lods
pop
lahf
xor
into
sbb
push
push
mov
xlat
out
in
pop
ins
mov
loop
test
das
jge
imul
daa
inc
add
js
fmul
shl
and
into
ds
sub
inc
inc
or
(bad)
aaa
push
mov
cld
rol
iret
sbb
out
push
mov
aas
aaa
movs
(bad)
in
add
(bad)
lock
mov
push
outs
sub
mul
jno
ror
mov
cmp
jl
push
lods
pop
xchg
ds
call
fwait
mov
jb
ja
mov
or
jg
aas
loope
mov
scas
sbb
cli
outs
cmp
or
in
lods
movs
inc
lea
retf
jbe
pop
mov
daa
stos
inc
js
jmp
jge
cs
cdq
outs
icebp
std
ror
dec
mov
iret
cmp
test
inc
dec
data16
(bad)
icebp
xlat
test
xchg
xchg
sub
test
ficomp
fs
sub
out
test
and
mov
mov
test
pushf
imul
mov
and
ss
push
xchg
in
pushf
mov
ins
mov
xchg
push
jb
xchg
shl
shr
leave
sahf
dec
pop
adc
frstor
clc
lahf
xchg
jmp
mov
pop
rep
jmp
add
enter
add
jmp
mov
jo
movs
rol
mov
push
jo
adc
loope
call
jmp
dec
push
mov
add
scas
inc
mov
dec
xchg
mov
hlt
push
xchg
cwde
add
push
test
int3
sbb
gs
jecxz
in
or
test
fwait
sbb
mov
pop
add
fdivr
cmp
leave
push
in
sahf
pop
iret
dec
imul
sti
fwait
les
dec
sete
mov
cmps
idiv
xchg
adc
popa
xchg
or
inc
push
xabort
mov
or
(bad)
aas
sbb
stc
or
sbb
int
sbb
loope
test
add
push
stc
cld
push
mov
cmp
cmp
pop
(bad)
std
(bad)
test
mov
shl
call
mov
fidivr
xor
and
cmc
sti
out
leave
(bad)
cmp
std
mov
aas
dec
fnstsw
out
pop
mov
sub
cwde
jmp
dec
jmp
mov
or
cmps
mov
inc
out
add
stos
das
pop
jns
(bad)
mov
add
cmc
dec
inc
pop
lock
(bad)
lods
dec
pop
inc
lea
sahf
ret
push
test
rcr
fs
inc
add
pop
dec
and
cld
in
xor
ja
push
inc
cld
loope
shl
ret
cld
sub
scas
mov
fsubrp
cli
cmc
retf
pop
stc
mov
jb
rep
inc
mov
lea
lahf
xchg
xchg
ret
sub
shr
push
idiv
xchg
mov
sti
jnp
loope
pop
push
inc
and
cwde
gs
xor
and
mov
mov
add
sub
cmp
retf
mov
repz
dec
addr16
pop
fs
xor
cmp
pop
aaa
enter
xchg
iret
hlt
mov
jmp
push
mov
adc
xchg
loop
pop
push
mov
nop
jp
cmp
mov
and
cmp
and
(bad)
loope
std
retf
fmul
repnz
mov
data16
sar
or
or
mov
or
fbld
xchg
jae
fldcw
ins
aad
daa
cli
and
mov
inc
mov
add
mov
xchg
xchg
cld
cmc
mov
cli
(bad)
push
lds
jge
jl
dec
sti
sbb
push
inc
stos
lods
ret
sbb
mov
icebp
xchg
add
(bad)
inc
push
and
adc
aaa
cmc
movs
xchg
push
mov
cmp
xlat
ja
retf
int3
fisttp
inc
pop
stc
sbb
hlt
aas
ret
or
dec
pop
xchg
pop
fwait
cmp
cwde
pop
ss
push
xlat
mov
add
jmp
xor
jg
popa
mov
or
jg
ret
cmp
dec
add
aam
cs
repz
dec
loop
cmc
test
jnp
lahf
(bad)
jmp
mov
cmp
test
into
adc
movd
cmp
ret
xchg
xchg
sub
pop
test
adc
pop
pop
jp
popf
repnz
test
inc
jecxz
pop
adc
stc
mov
or
xor
add
sub
mov
mov
lods
ss
jbe
mov
jp
imul
xor
mov
gs
loop
out
shl
shl
mov
call
and
xor
repz
mov
(bad)
dec
div
xchg
dec
push
jno
jp
mov
daa
dec
aad
jnp
add
and
inc
xor
mov
lods
imul
jmp
ja
add
xchg
scas
mov
sbb
mov
loopne
mov
add
cdq
(bad)
add
mov
ror
mov
dec
dec
xchg
ret
lds
js
shl
adc
mov
daa
outs
bound
add
fidiv
xor
sub
fidivr
mov
xchg
fsub
(bad)
(bad)
adc
mov
out
jecxz
jge
fcmovnb
mov
fidiv
mov
xchg
imul
mov
mov
xor
pop
pop
mov
adc
(bad)
pusha
ss
out
add
pop
and
scas
outs
fsubr
xor
add
imul
pusha
xor
cmps
test
xor
retf
mov
push
stc
pop
and
xlat
xchg
cdq
inc
lods
ret
mov
cmp
fnstenv
jge
test
movs
add
in
stos
movs
into
dec
push
jle
xor
cmps
movs
lea
rol
movs
xor
inc
js
and
or
cmps
sti
in
and
aas
push
jb
push
(bad)
lock
pop
jmp
push
imul
(bad)
stc
pop
cmc
test
mul
xlat
stos
stos
scas
call
mov
inc
jge
lock
fcom
(bad)
ins
sub
and
pcmpgtb
push
push
sbb
jge
retf
pop
and
ja
aaa
inc
ds
xor
sub
jmp
add
push
ins
fsubr
adc
add
out
push
xchg
push
dec
pop
call
xchg
pop
pushf
(bad)
fldcw
xchg
ja
dec
and
repnz
(bad)
fild
and
xchg
push
inc
cmp
push
mov
jle
inc
clc
retf
cmp
test
mov
lods
push
inc
push
mov
xchg
test
lods
sti
xchg
shl
adc
dec
pop
repz
sub
call
dec
mov
pop
fisttp
xchg
jle
loop
loop
jmp
scas
bound
cmp
inc
(bad)
dec
jmp
adc
fs
cdq
cwde
shr
jnp
inc
lods
jp
cs
and
rol
or
add
sub
push
fdivr
aad
mov
jge
sahf
dec
mov
frstor
push
pop
sbb
(bad)
loop
fs
mov
iret
jno
fwait
or
xor
mov
call
fistp
cmp
mov
outs
xor
cdq
adc
ins
movs
pushf
aaa
xchg
outs
mov
sahf
push
sub
xor
push
movs
test
call
cmp
ret
hlt
mov
scas
jl
dec
cmp
sbb
sbb
dec
daa
(bad)
adc
stos
dec
xchg
xor
push
(bad)
(bad)
in
mul
sbb
cmps
cmps
push
jb
mov
pop
aad
mov
or
lock
aaa
xor
lea
in
and
cwde
dec
stos
cwde
jle
int
mov
cwd
cmc
popf
and
ins
cmp
les
mov
(bad)
jnp
popf
push
imul
mov
sbb
iret
aad
mov
add
xchg
sti
mov
ins
pop
inc
sbb
and
mov
call
cmps
ins
sbb
mov
pop
ds
test
pop
sbb
lea
fiadd
xchg
test
cmps
cmp
xchg
outs
popf
cmp
stos
pop
fisttp
dec
(bad)
fwait
ja
pop
pop
in
add
xlat
pop
mov
js
pop
fnstenv
and
adc
sub
retf
jmp
ds
xchg
pusha
mov
jmp
jmp
popa
dec
(bad)
repz
jae
jp
push
cmc
xor
adc
pop
(bad)
out
cmps
clc
add
mov
or
xor
(bad)
aam
sahf
mov
fwait
jb
mov
iret
sbb
sbb
push
xchg
das
or
cmp
scas
test
cs
mov
cmps
mov
bound
jle
popf
adc
and
jmp
push
mov
je
dec
aas
sub
scas
lock
mov
mov
scas
sbb
in
into
test
rep
loope
call
push
mov
out
pop
dec
mov
(bad)
nop
in
test
mov
mov
xchg
sbb
popa
sub
daa
cli
mov
push
jmp
loop
cmp
pop
inc
sbb
or
xchg
loope
mov
pop
dec
fbld
push
mov
push
(bad)
push
pop
add
or
mov
(bad)
int
pop
rol
pop
jmp
fld
leave
lock
movs
add
movs
xchg
lods
movs
pop
ins
mov
mov
add
(bad)
int
cmc
sbb
iret
frstor
dec
movs
mov
retf
jo
sbb
js
enter
shr
imul
adc
push
and
xchg
lods
(bad)
int3
sbb
pop
mov
pop
loope
fucom
dec
in
call
lahf
or
xchg
mov
mov
(bad)
and
add
mov
pop
pop
or
push
dec
shr
push
ins
je
ss
repnz
dec
push
ja
jp
pop
mov
and
fwait
in
inc
add
mov
or
adc
(bad)
fimul
inc
fiadd
in
xor
leave
int3
mov
sub
mov
lds
pop
push
test
or
and
jmp
xchg
pop
dec
jg
sbb
lds
cld
pop
adc
mov
addr16
or
lods
in
mov
(bad)
fcmovb
xchg
pushf
mov
(bad)
mov
aad
(bad)
mov
cli
div
sar
push
xchg
lahf
mov
push
adc
mov
mov
lods
ret
popa
or
sub
cli
xchg
xchg
mov
stos
xor
dec
test
into
cmp
xchg
in
add
xchg
std
xchg
add
cmp
es
and
pop
sub
adc
test
mov
add
mov
xchg
ret
mov
out
ins
sub
repnz
xlat
mov
jmp
push
aad
ss
call
or
and
pushf
push
xchg
xor
cdq
and
ret
popa
out
mov
(bad)
and
mov
jbe
mov
xor
fimul
mov
ss
add
or
inc
sar
fwait
sahf
xchg
(bad)
js
(bad)
sar
or
cmps
adc
mov
jno
dec
mov
leave
push
xor
aam
or
sub
inc
dec
dec
push
stc
(bad)
hlt
sub
and
jge
xor
jb
add
outs
pop
out
les
sub
mov
push
shl
loope
push
jp
sti
dec
jae
or
das
ss
shl
sbb
aam
push
into
fidiv
fmul
lds
jnp
(bad)
mov
pushf
cmp
push
mov
out
jg
in
jo
or
sbb
cwde
push
loopne
mov
or
mov
pop
cmp
retf
or
and
sbb
jge
inc
cwde
lea
xchg
lds
jmp
xor
cmp
cdq
test
push
dec
(bad)
gs
jo
pusha
test
jns
mov
in
jbe
sti
lods
add
shl
cpuid
(bad)
dec
shl
stos
scas
sub
leave
cmp
nop
adc
xor
mov
and
dec
mov
(bad)
add
ss
jmp
add
sub
dec
es
mov
sbb
test
add
(bad)
retf
mov
dec
clc
cmp
add
(bad)
xchg
dec
adc
adc
pop
push
scas
leave
daa
add
jg
xor
and
aas
jp
lods
(bad)
hlt
shl
mov
js
cmp
not
and
or
inc
leave
aaa
push
and
cmp
test
push
cld
movs
not
lods
push
xor
sbb
mov
push
lea
loop
scas
cmp
and
mov
test
movs
ins
jbe
jle
sub
and
js
xor
fcom
mov
mov
jl
arpl
stos
xor
dec
mov
pushf
ss
std
retf
mov
data16
or
sbb
mov
inc
jp
(bad)
dec
lods
(bad)
fst
xchg
xor
(bad)
clc
inc
ins
fiadd
pop
sti
cmp
cmp
popa
ins
std
and
rcl
out
push
mov
mov
jb
stc
pop
in
fcom
push
and
mov
fstp
pop
xchg
std
pop
lods
jne
or
mov
in
ins
jns
cmps
call
pop
jg
mov
jbe
stc
test
mov
cs
mov
add
loop
pop
mov
cmps
aad
push
jnp
pusha
dec
pop
sub
push
jle
or
xchg
jmp
fild
loope
xchg
push
xchg
fiadd
call
xchg
lsl
xchg
dec
mov
cmp
imul
je
outs
push
push
cmp
in
pop
push
dec
rcl
test
cmp
aam
sub
stos
dec
ret
xor
mov
adc
enter
mov
mov
rol
mov
jg
popa
or
push
jl
jp
cmps
mov
call
push
dec
pop
fs
cs
jge
enter
xchg
inc
push
rol
rol
sub
int
loopne
iret
jnp
add
mov
aad
lods
nop
lods
icebp
test
push
imul
arpl
std
leave
jnp
sti
icebp
test
nop
add
mov
dec
inc
imul
in
inc
xor
adc
push
test
pushf
inc
fdivr
lahf
pop
shl
ds
pop
sti
in
xchg
mov
and
mov
push
sti
mov
out
jo
gs
mov
mov
rcr
out
jg
sub
inc
std
inc
mov
push
pop
sbb
jae
cmp
cmp
imul
mov
ins
adc
mov
lods
int
dec
xor
pop
shl
pusha
fwait
shl
cmc
jne
test
or
lahf
inc
lds
lds
stos
dec
push
stc
or
and
adc
xchg
or
shl
xor
arpl
pop
xor
cs
jmp
fnstcw
mov
test
mov
sbb
mov
add
jmp
pushf
repnz
(bad)
clc
pop
enter
lahf
jne
push
ins
sbb
je
push
ret
add
ret
or
mov
in
jle
ss
sar
mov
retf
push
popa
pop
out
push
aas
xor
cmp
pushf
int3
movs
loopne
std
mov
repnz
inc
sahf
fiadd
imul
and
mov
jno
xor
add
mov
iret
fs
test
sub
jne
stos
and
repnz
lods
push
shr
pop
imul
mov
inc
inc
push
dec
mov
xor
icebp
sub
retf
clc
and
jnp
adc
shl
sbb
ins
push
in
pop
mov
mov
push
daa
and
mov
call
mov
adc
adc
and
fcom
pxor
jmp
mov
imul
add
test
pop
sbb
retf
jo
jns
jo
mov
in
(bad)
je
popa
lods
push
push
imul
scas
ss
ins
dec
into
cmp
imul
inc
cmps
push
dec
jbe
inc
sub
ret
xor
inc
add
or
lds
aam
ficom
and
cmp
inc
pop
cmp
sbb
aam
pop
inc
mov
call
xor
int
lods
pop
aam
dec
inc
inc
inc
test
in
dec
jno
xor
ja
or
ror
fs
fwait
hlt
jmp
loope
xchg
scas
scas
add
mov
sbb
inc
sbb
popa
inc
fnstenv
inc
pop
mov
(bad)
pop
xchg
xchg
jne
daa
mov
and
pop
mov
cmp
mov
push
cmp
in
lds
call
jecxz
and
lds
out
jns
mov
movs
jmp
jecxz
and
retf
imul
push
test
call
out
ss
aam
fisttp
inc
xor
mov
inc
add
jns
or
shr
out
out
mov
icebp
jge
sbb
mov
jbe
leave
jmp
mov
cmp
add
mov
push
and
cmps
sub
ins
jge
js
add
dec
sbb
div
pusha
(bad)
loop
pop
call
mov
adc
imul
int3
xchg
retf
jge
into
inc
pop
push
test
sti
add
(bad)
pop
adc
(bad)
cwde
sub
fisttp
or
call
xchg
in
mov
push
call
fistp
or
sbb
mov
stos
push
inc
int3
adc
ret
mov
test
push
mov
inc
sub
dec
mov
pop
ror
adc
mov
ror
xchg
xor
fild
repnz
fnstcw
enter
sub
mov
and
push
into
mov
scas
fdivr
je
cld
push
mov
fcmovnb
push
pop
cmp
movs
cli
or
and
pop
dec
ficom
rol
mov
xchg
lahf
les
dec
addr16
dec
jp
adc
ret
dec
xor
mov
jge
dec
arpl
inc
adc
leave
dec
std
cdq
sub
mov
or
lea
cmp
sbb
mov
mov
and
addr16
mov
shl
fnstenv
sub
mov
mov
ja
(bad)
imul
and
fdivr
mov
fisub
cmc
and
gs
or
jmp
fadd
call
pop
nop
push
xchg
push
cmp
fs
scas
push
xor
jno
and
imul
stos
push
sub
pushf
pop
pop
push
xlat
sahf
lods
add
pop
or
aas
nop
icebp
pop
jb
cmp
(bad)
cs
dec
sbb
cmps
sub
and
sub
cmp
cli
rcr
ret
shr
and
(bad)
pop
push
xor
aam
sub
mov
(bad)
adc
shl
lahf
push
push
nop
jae
sub
sub
into
int
push
jne
in
and
std
add
imul
xchg
add
cwde
xor
xor
push
jg
loopne
sbb
push
and
cmp
pop
adc
xchg
int
pop
fxam
retf
xchg
(bad)
repz
in
and
imul
jg
pop
jl
dec
dec
inc
in
movs
das
test
es
rcr
sub
push
sbb
nop
and
or
stc
sbb
aam
jl
loop
pop
dec
jno
pop
out
cmp
pop
rcl
and
gs
addr16
test
jo
xor
popf
cmp
lahf
call
xchg
jno
out
ins
sub
bound
ficom
(bad)
mov
ja
adc
pop
add
lea
sub
sbb
fwait
mov
xchg
mov
jo
ins
pop
imul
inc
mov
push
shr
test
sbb
adc
sbb
pop
mov
and
dec
adc
lods
jmp
and
sub
and
pop
mov
fisub
imul
dec
mov
and
lahf
push
arpl
push
add
icebp
out
push
outs
mov
add
mov
sbb
retf
xchg
mov
ja
(bad)
fimul
(bad)
fisub
mov
fld
cli
dec
mov
adc
jbe
loopne
pop
ficom
mov
fs
mov
jg
jo
ins
sub
mov
mov
dec
jbe
arpl
stos
and
dec
ret
sahf
mov
cdq
cdq
int
sub
dec
dec
fs
sar
ja
push
addr16
out
pop
(bad)
aad
add
in
xchg
cmp
mov
xchg
in
inc
sub
aaa
push
pop
xchg
sub
mov
xor
jmp
ss
ja
aaa
sub
cld
popa
(bad)
push
dec
mov
cld
push
and
push
adc
stc
mov
cmp
adc
lock
pop
jo
enter
movs
xchg
or
sub
mov
test
jle
les
pop
fisub
cmp
jnp
stos
inc
(bad)
sbb
mov
fnstsw
xlat
inc
repz
push
pusha
aad
inc
adc
gs
and
sbb
scas
jmp
push
jp
add
cs
xor
jb
nop
mov
inc
xor
test
jg
push
mov
push
inc
jge
pop
mov
nop
gs
call
sub
in
bound
pop
adc
popf
es
sbb
inc
jmp
add
es
add
(bad)
adc
popf
mov
jno
lods
test
into
pop
lods
movs
wrmsr
inc
(bad)
cli
cli
je
add
cdq
cmp
aad
paddq
shl
adc
adc
bswap
fcom
mov
retf
rcl
cmp
test
js
repz
pop
clc
(bad)
mov
movaps
inc
nop
push
xchg
pop
dec
test
into
or
xlat
daa
jmp
imul
lods
xchg
and
ret
adc
scas
lods
sub
pop
pop
jl
in
pop
or
outs
adc
pop
and
xchg
add
push
fist
mov
aaa
outs
shl
add
aam
xchg
cmp
sub
sub
or
push
jnp
out
movs
sbb
fld
call
cmp
mov
test
test
jg
sub
popf
xlat
push
mov
call
mov
cmp
retf
cwde
and
jle
mov
pop
retf
loop
mov
and
cmp
outs
sub
mov
nop
pop
jb
shl
in
mov
mov
fsubr
rol
sahf
mov
push
sahf
and
jmp
in
mov
cmp
stos
sub
inc
int3
mov
cmps
push
dec
jnp
mov
dec
xchg
les
sahf
sti
gs
cmovne
add
out
mov
mov
adc
int
retf
outs
inc
mov
in
add
pop
cmc
mov
cmp
inc
ret
mov
adc
arpl
out
xlat
mov
mov
aam
popf
sbb
fwait
lods
rcr
rol
adc
sbb
inc
pop
inc
shr
retf
mov
mov
jecxz
jge
jmp
call
inc
sub
shr
daa
daa
lds
in
jecxz
sub
cld
push
in
retf
push
call
cmp
dec
cmp
push
pop
jg
add
mov
mov
gs
cmp
mov
adc
jb
cmp
pop
mov
mov
fst
sti
nop
scas
xor
call
push
xor
outs
or
repz
std
xchg
push
adc
dec
push
cli
dec
mov
xchg
xchg
inc
in
lahf
push
rcr
push
cmp
(bad)
int
add
ins
cwde
jg
cwde
mov
cmp
cwde
adc
ror
inc
mov
lods
mov
lea
add
sbb
cli
dec
xchg
shr
(bad)
imul
sub
mov
lock
push
adc
jge
push
hlt
into
lods
pop
sub
xchg
xor
jmp
ins
push
jecxz
jo
shr
cmps
sar
dec
lods
pop
push
mov
lahf
lea
pop
imul
out
outs
adc
inc
cld
add
mov
dec
(bad)
jp
int
out
jno
fwait
jg
mov
adc
mov
(bad)
cmp
jmp
push
cmp
xchg
out
nop
mov
xchg
iret
mov
sahf
or
push
repnz
addr16
pop
dec
push
mov
push
sbb
dec
and
push
xor
push
ins
out
cmp
or
push
aam
in
ss
dec
sub
push
push
mov
inc
push
loop
jmp
or
fistp
pop
aas
int3
adc
retf
lock
jb
fidiv
cmp
std
out
sub
push
jge
in
inc
jo
adc
call
mov
inc
aaa
aad
jbe
dec
sub
call
mov
mov
pop
push
jp
and
push
jne
jnp
je
or
test
xchg
cmp
imul
mov
lahf
sub
mov
jl
fisub
push
test
xchg
dec
xchg
add
jae
int3
jae
cmp
sub
sub
mov
push
push
mov
add
xor
dec
repz
dec
mov
mov
add
cmps
or
jg
mov
xor
add
cmp
outs
int
adc
xlat
call
mov
mov
sub
sbb
mov
mov
retf
or
inc
cdq
add
adc
pop
ds
mov
sbb
arpl
aad
stos
repnz
std
dec
aaa
or
mov
mov
test
or
add
mov
or
xchg
pop
ret
les
(bad)
ja
jecxz
pop
cli
out
sbb
iret
call
dec
or
cmc
xchg
sbb
mov
cmp
sahf
not
cmp
fcmovne
add
scas
add
dec
test
or
data16
movs
cmp
adc
xor
push
(bad)
push
push
sub
(bad)
and
add
xor
(bad)
adc
out
stc
mov
cwde
test
xchg
aaa
fwait
pop
(bad)
shr
pop
sub
popa
xor
fsub
xchg
(bad)
cmp
inc
mov
xor
inc
inc
push
xchg
cmp
js
jp
out
aas
pop
rcl
cmp
test
push
mov
and
cmp
pop
ret
inc
push
sub
test
jne
mov
loopne
shr
outs
mov
mov
mov
mov
sbb
ins
movs
outs
cmp
popa
gs
retf
in
mov
fistp
fcomi
ret
loop
mov
sub
jmp
inc
or
sbb
jg
inc
mov
int
fsubr
int
xor
out
stc
sbb
jmp
mov
push
cmp
push
in
jae
in
pop
push
cmps
inc
adc
test
leave
movs
xor
loope
and
adc
mov
sahf
out
ss
or
cmp
jb
or
test
lds
push
or
mov
xchg
mov
icebp
cdq
cdq
add
sbb
div
cmps
mov
pop
mov
fwait
std
dec
xor
jl
jns
icebp
leave
inc
mov
sbb
inc
xchg
jmp
imul
lea
push
lea
xchg
xchg
jle
inc
push
les
xchg
cmps
xchg
ret
test
jp
stc
popf
ret
icebp
idiv
out
jb
fld
xchg
push
loop
loope
cmps
fsubr
shl
cmp
dec
cmp
hlt
xor
test
popa
add
int3
mov
retf
mov
cmps
pusha
aam
je
rcr
sub
out
jbe
sbb
push
ds
push
mov
sbb
fisttp
mov
loopne
and
(bad)
out
jp
mov
pop
pusha
xchg
fimul
jnp
fidivr
mov
push
nop
addr16
jmp
ror
push
cmp
test
imul
out
cmc
add
mov
pop
and
mul
data16
push
xchg
and
add
jmp
cwde
mov
cmp
into
push
xchg
call
mov
add
mov
in
pop
shl
mov
and
(bad)
xor
clc
(bad)
gs
mov
ja
icebp
sbb
loope
aad
stos
adc
icebp
fwait
jmp
mov
cli
push
out
fwait
jle
out
xchg
fld
fisttp
mov
mov
cs
dec
repnz
int
adc
aas
or
inc
xchg
mov
sbb
mov
push
in
add
adc
retf
adc
push
stos
(bad)
sbb
retf
ss
cmp
rcr
outs
out
pop
mov
(bad)
sub
and
pop
(bad)
inc
push
dec
call
out
sub
adc
shl
icebp
(bad)
pop
jmp
push
mov
(bad)
mov
inc
cs
sbb
jne
mov
push
ss
aas
or
inc
xchg
loope
xchg
sbb
out
cmc
jno
dec
mov
mov
jns
dec
mov
inc
or
retf
add
sub
or
retf
push
or
xchg
jmp
popf
cmp
inc
mov
int
push
lahf
retf
mov
retf
(bad)
fstp
dec
push
and
stc
hlt
push
add
cmp
mov
xchg
mov
mov
dec
in
push
fs
test
adc
cmc
add
aad
cmp
or
movs
mov
jp
mov
movs
mov
cmp
leave
jb
add
fbld
fistp
scas
push
test
hlt
sahf
les
setne
cmp
inc
mov
ja
inc
push
(bad)
sub
add
sbb
adc
data16
ds
imul
cmovg
mov
lds
cli
retf
inc
fstp
ret
clc
jmp
inc
or
pop
and
push
or
cld
inc
gs
xchg
nop
and
jl
adc
add
in
stos
ins
sbb
loopne
nop
push
lea
icebp
outs
mov
fcomip
or
test
int3
xlat
imul
cmp
pop
scas
xchg
out
push
out
mov
xchg
lahf
pop
pop
ret
jp
xlat
pusha
sahf
in
loope
jl
mov
in
dec
pop
pop
stos
fwait
pop
mov
xchg
add
mov
sbb
rcr
sbb
rcr
sub
and
lds
push
popf
mov
cmp
iret
sahf
add
xor
call
dec
mov
push
inc
not
scas
mov
dec
rcl
jp
movs
adc
push
stos
push
lods
cmp
adc
ins
scas
into
stos
int3
mov
call
pop
aas
ins
pushf
loopne
out
bound
and
(bad)
mov
stos
dec
ret
mov
jo
popf
xchg
imul
popa
jp
xchg
pop
pushf
fdiv
retf
mov
stc
(bad)
lahf
cmp
and
add
inc
and
jg
xchg
cmp
icebp
mov
icebp
inc
cmps
dec
inc
xor
rcl
mov
push
mov
xor
or
shr
ins
jp
lods
and
addr16
xor
xor
cmp
pop
mov
das
sahf
inc
aad
aam
retf
pop
push
push
push
lods
xchg
(bad)
mov
xchg
fmul
cmp
mov
fwait
scas
sbb
inc
iret
mov
push
daa
enter
jo
sbb
xchg
dec
dec
add
mov
mul
popa
pop
cmp
and
mov
sbb
sahf
pop
ret
bound
sbb
(bad)
xor
ja
add
lods
hlt
popf
pop
lahf
jmp
rol
pop
pop
out
jb
inc
addr16
sbb
ja
inc
mov
shl
dec
outs
out
pop
jge
mov
or
dec
and
ror
sti
int3
sub
stos
je
sbb
xor
inc
mov
sub
stos
mov
sar
inc
loopne
std
xlat
adc
ds
cmp
loop
sbb
cmp
xchg
les
in
sar
(bad)
add
adc
test
jae
movs
mov
or
loopne
fwait
inc
data16
pop
fnsetpm(287
lahf
add
jbe
(bad)
pop
mov
je
mov
sub
loope
ret
test
scas
addr16
or
int3
inc
lods
dec
pop
mov
dec
in
mov
jmp
mov
mov
xor
sbb
jne
test
rcl
inc
test
clc
icebp
jb
or
and
out
pop
mov
das
mov
leave
das
mov
xchg
cmp
(bad)
xor
fs
xchg
sub
les
and
adc
aad
jnp
xor
xor
data16
out
xchg
add
mov
stos
int3
lock
and
das
repnz
sub
imul
enter
cld
xor
rcr
sbb
repnz
ficomp
arpl
adc
ret
jo
cmp
rcl
jb
ds
les
rol
call
cmc
jae
cmp
xor
dec
mov
sbb
daa
push
fbld
push
mov
loop
xchg
pop
mov
push
and
call
push
imul
and
fdiv
push
dec
aaa
xor
and
mov
shl
xor
xchg
sbb
mov
jno
sub
pop
push
adc
lods
dec
sbb
addr16
cwde
push
fnsave
loop
sub
popa
sbb
retf
mov
rcr
inc
shr
mov
bound
js
jae
nop
or
mov
mov
lods
div
stos
in
cmp
mov
mov
addr16
jge
in
xor
xor
cs
xor
pop
or
mov
sbb
add
(bad)
popa
cmp
retf
cwde
dec
pusha
sbb
sbb
adc
fcom
stos
loope
push
jnp
mov
xor
or
retf
std
inc
jo
push
adc
xchg
xor
fstp
call
jp
fdivr
aad
jbe
dec
mov
add
leave
fs
and
mov
pop
cmp
adc
mov
mov
push
in
dec
jae
adc
add
add
shr
rcr
add
in
retf
mov
je
js
and
cmc
fisub
adc
lods
add
sub
push
and
sub
and
test
movs
push
add
das
nop
(bad)
imul
(bad)
lahf
clc
inc
cmp
sbb
(bad)
in
js
(bad)
adc
or
adc
mov
mov
sti
popf
pop
sub
int3
xor
stos
xchg
push
mov
dec
xor
and
sub
dec
int
loope
sub
mov
add
pop
inc
shl
cmp
out
jmp
jne
push
neg
jecxz
clc
sub
push
outs
pop
add
fst
ror
sbb
movs
pop
cmp
inc
shl
jb
ins
adc
sahf
in
in
loope
adc
push
repz
or
xchg
and
jmp
inc
cld
or
out
(bad)
xchg
stc
rcl
and
inc
inc
dec
cmp
sub
mov
and
in
xchg
jae
cdq
cmp
(bad)
scas
hlt
loop
cmp
fist
xlat
cwde
inc
daa
or
outs
adc
aaa
mov
push
fadd
push
cdq
leave
out
ja
les
mov
shr
push
jecxz
je
pop
mov
and
jmp
sub
(bad)
mov
or
lahf
outs
xor
(bad)
stc
cmp
jle
xchg
push
dec
call
arpl
mov
sub
xchg
stc
fs
xchg
cmc
fstp
into
dec
push
cmp
push
mov
mov
push
fidivr
and
sti
imul
xchg
jmp
mov
pushf
or
out
test
fimul
dec
in
pop
jne
or
dec
cwde
cmp
and
mov
clc
or
add
xchg
cld
(bad)
fs
repz
hlt
cli
ret
ja
inc
inc
jecxz
(bad)
adc
test
mov
adc
mov
sbb
ds
popf
mov
push
out
or
(bad)
pop
ja
rcr
dec
add
inc
fidiv
ds
jl
ror
imul
cmp
jb
cdq
shr
xchg
sbb
std
stos
sub
fisttp
inc
inc
jmp
dec
mov
js
mov
mov
retf
jge
enter
bound
jo
xor
shl
adc
pop
gs
cmps
popa
movs
sbb
mov
inc
jmp
push
xchg
mov
pop
ficom
or
mov
hlt
mov
mul
cli
bound
lea
cmps
inc
or
outs
retf
mov
inc
push
mul
jne
popf
call
in
push
jge
sbb
lods
mov
cmp
retf
sub
adc
das
retf
ins
lds
aam
jl
push
dec
data16
popf
jnp
sar
sbb
addr16
(bad)
jmp
pusha
(bad)
clc
icebp
and
mul
sbb
pop
cli
(bad)
imul
add
xor
das
jo
adc
jle
push
repz
rol
shl
call
jae
loop
mov
dec
xchg
movs
and
xchg
or
inc
inc
imul
outs
jb
inc
popf
shl
xor
xchg
mov
mov
out
xchg
shr
pop
mov
(bad)
neg
sub
or
loopne
je
sar
imul
adc
push
out
xchg
add
ss
push
cmp
xchg
xchg
loop
cmps
xchg
enter
repz
fdivrp
push
retf
or
test
nop
jge
outs
cwde
popf
call
inc
dec
mov
(bad)
mov
int
aas
fmul
enter
icebp
call
test
pop
popf
jge
gs
pop
cmp
test
xor
cwde
fsub
lods
rcl
push
rol
jmp
or
in
leave
call
ds
rcr
inc
mov
rcl
pop
sahf
loop
movs
xchg
pop
mov
add
inc
iret
aam
aaa
lods
int
addr16
mov
or
popa
imul
out
cmp
jno
cmp
jecxz
ja
jns
nop
sbb
jge
lahf
(bad)
mov
fimul
es
mov
daa
leave
xor
cmps
sbb
dec
adc
fcmovnbe
scas
lods
inc
push
lock
stos
imul
sbb
dec
mov
adc
mov
sbb
xor
push
and
out
mov
in
test
dec
xor
out
mov
cli
jb
inc
(bad)
push
or
jnp
stc
not
add
or
fsubr
out
retf
cmp
cmp
dec
xchg
inc
dec
jbe
pop
or
je
xchg
shr
(bad)
std
pop
dec
jbe
out
xchg
pushf
std
or
mov
mov
and
sub
fwait
sbb
int
adc
inc
pop
jl
mov
cwde
das
and
xor
inc
lock
jmp
add
sbb
push
ja
idiv
js
jecxz
out
sti
sub
cld
push
ds
mov
call
sti
xor
fadd
and
adc
mov
push
ss
hlt
ja
jge
das
repnz
gs
sahf
(bad)
mov
lahf
and
gs
and
mov
or
in
std
adc
sub
ret
gs
fnstsw
sub
push
loope
sub
dec
cmp
sti
cmp
lahf
(bad)
lock
push
push
adc
push
cmp
dec
add
(bad)
(bad)
inc
in
cmp
dec
fild
test
sbb
(bad)
fstp
add
pop
(bad)
cmp
ret
pop
movs
ror
jo
gs
mov
clc
cmp
stos
sub
test
loop
daa
je
pop
fwait
test
in
jnp
sub
add
sti
cmps
lods
je
push
or
jmp
jno
test
cmp
rol
test
push
xchg
int
dec
hlt
test
fucomi
xchg
shr
push
sbb
ss
jo
mov
mov
jb
and
dec
repz
jmp
or
shl
jmp
xchg
pop
and
fwait
cmc
mov
fcomp
or
sbb
fld
xchg
je
movs
inc
push
ret
adc
ss
inc
and
daa
mov
and
cmc
int3
std
out
or
add
ret
add
add
rcl
pop
out
or
jae
mov
push
daa
les
cli
lods
and
mov
pop
sar
loope
ja
out
cmps
test
fs
push
cmp
xchg
dec
loop
cmp
stos
popf
and
dec
cld
push
dec
push
shl
shl
not
lods
das
arpl
lahf
xor
sbb
stos
mov
(bad)
jg
add
cmp
shl
push
sub
fst
scas
sbb
movs
sbb
(bad)
sti
or
mov
pop
cld
mov
aaa
pop
mov
mul
js
add
mov
adc
icebp
xchg
test
mov
xchg
sub
imul
push
jmp
mov
mov
stos
retf
and
lods
ds
sbb
push
scas
pop
pop
loopne
hlt
xor
das
cmps
dec
cs
sub
les
dec
jb
fldcw
jmp
test
jp
mov
in
gs
mov
stos
call
ror
retf
and
sub
fdivr
sbb
jae
lods
out
and
in
xchg
add
mov
mov
pop
cmc
sub
fsubp
enter
xchg
xor
sbb
pop
ss
cmps
repnz
add
das
aaa
mov
mov
sub
fs
fisub
scas
retf
jp
sbb
push
test
data16
movs
add
test
sbb
inc
mov
jmp
ret
pop
mov
and
les
pushf
shl
cmp
imul
popf
mov
push
test
pcmpgtd
ins
cdq
(bad)
(bad)
jne
popf
out
shl
and
fucom
jmp
push
pop
dec
jo
mov
loop
jl
cmp
cs
lods
dec
add
mov
fild
xchg
xor
lods
mov
gs
jmp
xor
in
and
and
movs
scas
cmp
movs
cmc
clc
jge
adc
in
cld
adc
add
int3
pop
repz
mov
dec
pop
iret
aaa
add
loopne
loope
cmc
push
and
fmul
and
imul
out
and
xchg
into
aaa
dec
iret
lahf
add
jge
push
sub
inc
mov
jl
mov
add
dec
scas
pop
daa
cdq
inc
clc
inc
pusha
mov
pop
neg
or
mov
mov
popf
pop
fcmovbe
xor
mov
xchg
mov
ret
jmp
in
cmps
sbb
mov
xor
fldpi
add
adc
add
test
xchg
fstp
dec
cmp
xlat
add
dec
(bad)
mov
popf
scas
inc
mov
dec
in
loop
ins
and
idiv
adc
(bad)
not
cmp
push
mov
jae
ficomp
movs
arpl
mov
rcl
(bad)
lock
out
data16
(bad)
sbb
xchg
ins
daa
or
fld
and
or
fbstp
shl
lods
mov
add
pushf
add
imul
sub
ins
pop
push
dec
test
mov
xor
xor
jne
sbb
ja
lods
shl
and
mov
lods
jbe
call
hlt
xchg
ret
aas
(bad)
shr
repnz
fsubp
jg
outs
push
mov
pop
xchg
xchg
sub
push
sbb
xchg
adc
adc
das
mov
mov
and
xchg
sub
mov
pop
pop
adc
in
aas
adc
mov
popf
cmps
lds
call
push
cmps
hlt
fisubr
or
adc
mov
out
pop
dec
scas
add
mov
add
cmp
push
rcr
lahf
pushf
xor
int
ret
inc
sbb
jmp
(bad)
ficom
jb
sbb
in
sbb
adc
and
cmp
in
aaa
cmp
pop
sub
shl
cmp
cmp
out
push
mov
loop
jne
jecxz
pop
nop
call
jg
pop
mov
imul
movs
idiv
ror
inc
fnsave
retf
cdq
cmp
push
xchg
cmp
and
int
in
out
out
sbb
cmp
call
jmp
xor
int
jecxz
icebp
lock
sbb
jmp
fnstsw
pop
retf
into
int
adc
sub
xor
jno
mov
int3
sbb
int
adc
add
mov
movs
mov
mov
addr16
fwait
mov
fisub
inc
fisttp
int3
push
or
push
adc
cdq
dec
fs
cwde
jae
mov
cmp
inc
mov
or
xchg
loopne
inc
dec
sub
ds
repnz
push
pop
sti
cwde
outs
ret
or
adc
(bad)
loop
mov
sub
adc
mov
sbb
jp
adc
sub
shr
pop
dec
jg
jp
and
mov
jecxz
inc
sbb
dec
pop
sbb
adc
das
popa
fdiv
jmp
retf
xlat
mov
(bad)
aas
pop
inc
cmps
ins
jno
cmp
fcom
jo
adc
out
stos
push
fsub
pop
xor
aam
mov
and
jp
xchg
leave
cmp
and
fimul
cwde
or
mov
scas
dec
pop
jge
dec
stos
fstp
cmc
(bad)
lds
pop
lahf
outs
sbb
pop
lods
sbb
std
jnp
jbe
mov
test
into
(bad)
lea
fimul
dec
data16
pop
in
(bad)
scas
int
pop
cmp
cs
mov
dec
jmp
xchg
sbb
das
loop
(bad)
in
sbb
pop
mov
pop
aad
jecxz
cmps
mov
test
(bad)
into
cmps
and
mov
mov
adc
out
shr
fld
mov
dec
and
leave
and
out
jne
jecxz
hlt
push
push
daa
cmp
or
pop
push
sbb
out
(bad)
scas
sbb
sub
sbb
cmc
inc
call
das
test
retf
and
ds
lods
bound
sub
xchg
add
xor
adc
push
inc
sbb
bound
repz
jl
ja
cld
dec
pop
push
mov
mul
xchg
lock
pop
leave
and
jmp
scas
loope
call
(bad)
pushf
jmp
pop
jo
push
out
adc
cmp
in
jns
hlt
mov
push
loope
fbld
add
loop
aaa
pop
out
fmul
inc
xlat
fcomp
xor
mov
adc
out
mov
add
cmp
or
dec
jge
push
retf
movs
dec
mov
push
adc
in
push
je
ret
or
dec
xchg
retf
(bad)
mov
and
mov
imul
xchg
push
mov
out
fadd
pop
pop
retf
push
mov
jo
enter
icebp
add
push
sbb
pop
dec
fs
aad
mov
pop
fld
dec
cmp
(bad)
lods
int3
add
fcmove
into
mov
xor
dec
call
cdq
pop
mov
pop
xor
mov
add
sbb
mov
pop
minps
arpl
shr
repnz
mov
pushf
pop
dec
mov
xchg
push
lahf
mov
repz
pop
jmp
out
sbb
fst
aad
enter
enter
je
inc
scas
jnp
ss
and
and
in
gs
mov
das
mov
mov
out
scas
pop
xor
jecxz
xchg
mov
cmps
inc
leave
daa
iret
out
push
cwde
test
inc
loop
fwait
or
inc
int3
jecxz
imul
ja
pop
mov
test
push
retf
std
aad
push
cli
xchg
pusha
sbb
inc
imul
push
ret
fadd
xor
cmps
addr16
or
cmp
fmul
in
or
xchg
rep
or
call
or
sti
je
pop
sub
xchg
out
out
sbb
ds
out
push
icebp
sub
mov
in
or
mov
pusha
arpl
pop
sub
lods
ja
ds
dec
jbe
(bad)
fcomp
mov
outs
xor
inc
push
int
cmp
jb
jmp
ds
call
adc
cwde
cmp
jno
fmul
jl
pusha
lock
xchg
inc
loopne
dec
in
mov
jb
cmps
cwde
dec
imul
cmp
mov
jle
or
dec
shl
mov
pop
xor
aaa
rol
mov
push
cdq
ret
dec
mov
enter
stos
retf
xchg
mov
fld
add
daa
mov
lea
mov
loopne
xchg
retf
jb
int3
out
fist
xchg
lahf
repnz
adc
xor
mov
mov
xor
ret
rcl
es
sub
or
out
sbb
mov
lock
es
mov
push
mov
mov
mov
shr
stos
sbb
in
mov
call
sbb
sbb
stc
dec
cld
pop
dec
shl
pop
mov
pop
ds
ficom
xchg
fdiv
jl
mov
es
xchg
mov
mov
hlt
xchg
cmp
cmp
adc
lea
jge
cmc
hlt
sub
mov
dec
push
mov
sbb
outs
mov
test
inc
addr16
fisttp
xchg
xchg
mov
pushf
inc
add
pop
xchg
(bad)
mov
cwde
fcomi
dec
outs
add
out
les
or
ret
popf
and
push
push
call
nop
mov
dec
aad
jmp
add
icebp
jns
mov
outs
test
add
xor
in
push
xor
mov
enter
repnz
adc
adc
mov
xchg
(bad)
fidivr
jae
jb
test
cmp
sbb
mov
es
test
sar
inc
add
pop
ss
aad
adc
push
push
pop
arpl
fwait
test
dec
je
inc
in
cmps
popa
cmp
out
popa
mov
push
ss
pop
fs
xor
dec
and
or
pop
and
xchg
or
inc
mov
ins
in
add
enter
std
loope
mov
sbb
sahf
in
out
xchg
or
call
call
data16
in
cmp
xor
les
xor
out
imul
xchg
out
scas
bound
mov
(bad)
pushf
rcl
mov
mov
inc
gs
(bad)
in
and
sub
je
outs
mov
stc
sti
jnp
das
inc
add
mov
xor
imul
add
lods
sbb
xor
xor
rol
or
shl
inc
repz
adc
push
inc
pop
add
jnp
in
fwait
arpl
xor
shl
mov
imul
packuswb
out
(bad)
dec
cmps
and
shl
movs
jmp
pop
mov
add
cmc
and
scas
jge
mov
je
into
add
call
sbb
adc
and
mov
mov
mov
lods
es
cmc
inc
mov
idiv
add
ins
movs
ja
stos
movs
jg
and
sbb
out
lahf
into
test
sub
dec
sbb
test
jle
mov
daa
iret
push
or
xchg
xchg
push
mov
push
dec
sub
pop
add
jno
push
mov
imul
mov
(bad)
jp
(bad)
push
cli
xlat
mov
call
mov
pop
push
xchg
pop
bound
repz
call
in
aad
jle
outs
xor
dec
pushf
mov
mov
retf
loopne
lods
mov
bound
stc
enter
in
adc
inc
gs
(bad)
cld
gs
dec
ins
and
xor
loopne
repz
mov
adc
rol
ins
movs
mov
xchg
or
popw
xor
mov
(bad)
in
lods
mov
in
push
fcomp
jmp
cmp
out
cmps
sub
inc
cmps
add
push
inc
mov
mov
stos
mov
pop
and
push
dec
in
inc
sbb
es
adc
aas
jno
les
mov
push
mov
out
fbstp
jo
jl
outs
or
hlt
jae
(bad)
mov
sbb
shl
sub
rcr
nop
mov
int
in
add
call
repnz
push
pusha
cmps
mov
mov
dec
push
inc
and
jge
xor
scas
and
pop
push
pop
xchg
in
sbb
je
push
aam
jp
test
push
and
xor
fcomp
mov
call
inc
dec
std
pop
daa
xor
mov
sub
je
loop
(bad)
push
xchg
push
rol
fs
mov
sub
dec
cmp
pop
(bad)
jmp
or
or
adc
shr
mov
stos
leave
repnz
stos
loopne
jge
aaa
into
fs
fisubr
out
fs
call
mov
mov
dec
retf
push
scas
pusha
inc
jl
pop
fdiv
pop
jle
pop
loop
and
scas
xor
mov
cmp
push
xchg
inc
sbb
add
mov
cs
sar
sub
jmp
or
mov
ret
push
icebp
mov
mov
jmp
fistp
jg
mov
mov
inc
mov
sar
fld
jg
inc
add
int
repnz
dec
nop
and
(bad)
push
mov
cli
addr16
or
inc
mov
fbstp
pop
icebp
fistp
inc
dec
cmp
sub
lds
into
movs
cmp
nop
pop
pop
add
and
xor
sbb
add
lea
cdq
xor
mov
add
pop
loopne
test
jg
mov
sub
push
cmps
mov
cmp
jle
pop
pop
sbb
punpckhdq
inc
sub
mov
cwde
popa
pop
out
add
aas
pop
push
in
push
mov
xor
lds
(bad)
xor
sub
lea
sub
pop
es
push
add
mov
mov
loop
cmps
jno
inc
fwait
in
je
sbb
add
sbb
retf
sahf
mov
fisttp
cld
fmul
sub
pop
imul
push
cwde
shr
popa
cmp
into
loopne
mov
cmp
and
(bad)
ins
jl
push
mov
cld
movs
mov
inc
js
or
lods
movs
imul
mov
jo
jmp
xor
dec
cmp
sahf
les
mov
in
or
or
push
ins
(bad)
and
mov
xor
scas
push
fist
test
pxor
aas
push
cli
adc
mov
dec
fdivr
ins
shl
and
cs
ret
dec
push
cmps
js
fsubr
add
push
jnp
bound
jmpw
into
cs
dec
pop
ds
xor
fidiv
retf
aaa
add
pop
out
fldcw
stc
sbb
jmp
enter
mov
dec
add
push
jg
fcom
inc
dec
retf
mov
ins
and
adc
push
popa
enter
nop
out
retf
dec
sti
push
(bad)
in
mov
rol
scas
aad
cli
gs
movs
push
pusha
fbstp
mov
mov
sbb
scas
jns
mov
adc
sbb
or
sub
jo
xlat
push
call
(bad)
push
jmp
adc
fcom
mov
mov
and
aad
in
daa
or
lea
icebp
adc
fld
stos
push
jmp
mov
loope
pop
xor
cmc
aaa
xchg
std
dec
hlt
cld
inc
sub
in
stc
sahf
fidiv
inc
sbb
popf
icebp
int
pop
or
(bad)
xchg
inc
and
xor
cwde
adc
pushf
add
jns
jmp
pop
xchg
inc
lods
aam
scas
pop
push
dec
xlat
cmp
shl
add
loopne
aam
fcmovb
push
dec
(bad)
xchg
mov
jnp
out
or
mov
cdq
adc
ins
rol
stos
(bad)
sahf
inc
sbb
das
ret
fwait
dec
add
aaa
sub
jg
or
push
cmps
mov
in
enter
xor
and
mov
push
gs
mov
or
les
push
ror
test
sbb
es
fimul
test
into
and
sbb
cmps
mov
and
cld
inc
jp
stos
jl
jle
cld
pop
lods
cdq
std
cmps
and
xchg
dec
shl
lea
jmp
les
mov
daa
pushf
push
dec
inc
addr16
lds
les
nop
xor
cmp
jmp
push
mov
cmp
xor
lock
xchg
std
xor
xchg
out
sub
lock
inc
cmp
mov
push
inc
inc
mov
montmul
cmps
ret
js
aas
sar
pusha
jne
adc
and
push
mov
outs
add
sub
sbb
pop
mov
in
xchg
cs
xor
sbb
loopne
sbb
push
rol
lahf
adc
mov
inc
sub
mov
mov
add
inc
ret
hlt
cwde
into
push
mov
and
arpl
pop
fs
add
cli
mov
fpatan
sbb
mov
mov
(bad)
lock
faddp
sbb
idiv
and
mov
in
mov
ret
imul
push
(bad)
iret
push
in
dec
mov
dec
xor
into
jb
mov
inc
jne
mov
and
push
fadd
cdq
ins
xchg
pop
or
dec
dec
jns
aaa
movs
or
sub
out
mov
push
out
dec
sbb
push
pop
push
sbb
cdq
jp
cs
mov
cs
(bad)
std
shl
push
test
mov
xchg
rcl
cmps
sbb
cs
push
inc
mov
sub
jmp
clc
gs
popa
mov
or
int
js
jge
mov
or
(bad)
(bad)
fsub
sbb
add
icebp
sub
cmp
fwait
mov
push
test
cwde
jno
cdq
fild
ud2
xchg
sub
or
mulps
(bad)
xor
stos
sub
xor
dec
and
inc
(bad)
(bad)
inc
pop
jmp
stos
mov
add
lea
ror
jbe
ret
les
push
adc
cmp
push
mov
adc
sbb
push
leave
imul
clc
xor
sbb
mov
jg
push
or
add
xchg
mov
leave
lods
xchg
dec
and
jle
jg
xchg
dec
daa
or
adc
push
clc
in
or
enter
mov
and
out
dec
js
repz
es
dec
xchg
aas
xchg
pop
sub
push
cmp
cdq
stos
hlt
(bad)
jnp
mov
ja
jno
xchg
or
call
sbb
aaa
call
in
xor
test
clc
fsub
je
pop
adc
test
das
xor
pop
gs
mov
xor
jnp
inc
dec
xor
xlat
inc
shl
adc
jae
call
cmovle
lahf
int3
jle
out
sub
ins
xchg
sub
sbb
or
pop
and
(bad)
jge
push
mov
add
imul
sub
pushf
rcl
mov
pop
mov
dec
sbb
push
dec
inc
movs
rol
jecxz
rol
mov
dec
dec
jl
pop
movs
push
pop
or
repz
out
push
xchg
jmp
jbe
mov
add
neg
(bad)
fisubr
in
aad
and
mov
call
push
mov
imul
cmp
ret
cdq
scas
repnz
mov
mov
push
lods
outs
jle
sbb
daa
in
ds
mov
jle
dec
xor
out
pop
popf
scas
push
mov
or
hlt
shr
sbb
jp
das
test
xor
xchg
cld
lds
jb
outs
xchg
push
shl
in
repz
jmp
mov
mov
pop
mov
lods
add
push
jp
retf
movs
ins
sub
pop
icebp
mov
sub
rol
ins
retf
xchg
sbb
mov
add
ja
adc
addr16
xchg
dec
push
xchg
sbb
iret
popa
in
popa
movs
push
mov
shl
ja
jnp
inc
cmps
pushf
aas
addr16
sbb
retf
and
cmp
sub
jns
pop
ror
mov
(bad)
retf
aaa
pop
lea
adc
sbb
adc
je
in
mov
xor
xchg
aad
dec
inc
stos
cmps
adc
jae
sub
mov
rol
in
fsubr
jge
test
jb
or
xor
sub
xchg
mov
in
dec
pop
aam
imul
xchg
aad
cld
in
and
mov
jle
or
jo
dec
(bad)
add
jno
das
add
in
dec
sbb
mov
cmc
scas
mov
ror
(bad)
cld
neg
jle
and
sar
stc
push
mov
push
(bad)
lods
dec
daa
repnz
stos
ficom
dec
add
xor
adc
scas
push
push
stc
outs
xor
pop
lods
push
bound
or
shl
or
add
or
mov
test
scas
jbe
jg
leave
jp
fadd
sub
and
xchg
xor
xchg
dec
lahf
adc
call
cli
std
or
imul
sbb
scas
cwde
movs
mov
and
fdivr
addr16
test
movs
mov
in
rcl
mov
stos
data16
sub
cmp
add
xchg
push
adc
test
outs
cmp
loopne
push
cmp
cmp
mov
and
xchg
and
sub
fs
pop
ret
xchg
or
enter
jb
pop
fimul
xrelease
mov
push
mov
loopne
arpl
add
test
mov
mov
dec
push
repnz
mov
int3
js
or
mov
shl
xor
stc
sub
repz
jno
(bad)
(bad)
inc
retf
inc
lock
(bad)
hlt
mov
je
jb
mov
imul
inc
pop
cmp
es
hlt
fld
push
mov
adc
cmps
ins
add
xchg
or
mov
adc
ret
sahf
cli
jl
lds
xor
and
mov
cmp
push
sbb
lea
in
pop
push
dec
push
pop
adc
rcr
loop
test
and
or
xchg
ja
xchg
mov
inc
jnp
out
mov
mov
call
cmps
idiv
repz
xchg
call
xor
sub
cli
call
loopne
sti
mov
(bad)
mov
xchg
fmul
cmps
fdivr
(bad)
sahf
(bad)
addr16
(bad)
movs
int
sub
leave
xchg
inc
mov
mul
dec
mov
cmp
or
(bad)
sub
out
mov
and
stos
call
dec
dec
add
mov
add
out
lods
xor
in
ss
cli
jb
inc
cmp
stos
enter
ret
adc
aad
pop
sub
xchg
jmp
and
mov
popf
adc
pop
loop
mov
std
idiv
or
sbb
pop
std
test
xor
outs
hlt
sub
jle
inc
icebp
addr16
mov
mov
mov
pop
or
(bad)
in
xchg
pusha
dec
(bad)
js
jnp
push
ds
dec
and
(bad)
cwde
mov
cdq
mov
xor
sbb
pop
ret
stc
nop
mov
mov
mov
push
jne
add
rol
lock
cmps
jmp
fild
jp
jno
mov
push
mov
cmps
cwde
rcr
push
xor
xchg
xchg
das
mov
xor
pusha
and
icebp
mov
pop
xchg
popa
or
(bad)
cld
jo
(bad)
popf
gs
pop
in
pop
sub
das
outs
out
mov
mov
jo
add
addr16
xor
je
or
push
popa
mov
jle
ins
dec
clc
pushf
dec
movs
adc
push
lods
xchg
stos
sahf
pop
add
jmp
cmp
mov
outs
sbb
adc
dec
mov
not
pop
lahf
mov
iret
bound
sbb
cdq
mov
jne
and
repnz
movs
out
push
mov
(bad)
sar
push
xor
xchg
xor
push
inc
cmps
clc
add
mov
add
push
scas
idiv
test
jae
mov
outs
jl
pop
nop
dec
mov
(bad)
aam
cmp
mov
mov
lods
and
movs
add
jp
test
stos
xchg
add
inc
arpl
in
in
out
mov
(bad)
iret
xor
retf
jecxz
and
add
adc
das
leave
clc
data16
(bad)
sub
in
mov
int3
add
scas
shr
test
add
xchg
cmp
gs
popa
adc
mov
adc
outs
inc
pop
cli
imul
push
add
repnz
leave
movs
xchg
or
adc
jmp
adc
jge
mov
test
push
mov
and
adc
imul
dec
stc
in
and
jno
fucom
add
cmp
and
daa
jo
sub
jmp
mov
mov
and
jmp
retf
mov
sbb
enter
mov
push
sub
fnstsw
je
pop
shl
xor
out
fmul
cs
in
cmc
addr16
sbb
in
push
pop
xchg
mov
mov
sbb
mov
idiv
xor
imul
add
cmp
js
stos
mov
das
lods
sub
pusha
jl
stc
sbb
mov
jnp
mov
fs
pushf
cmp
inc
cmp
sbb
les
add
iret
ss
push
int
pop
and
cld
cmp
and
ret
mov
push
repz
sub
pop
pop
cwde
push
scas
stos
push
aad
pop
jmp
loop
rcl
in
call
inc
mov
or
jl
iret
aad
out
dec
(bad)
(bad)
xor
mov
jmp
lods
sbb
outs
daa
xor
or
addr16
mov
pusha
and
test
in
frstor
mov
bound
ret
push
jmp
sahf
scas
add
not
repnz
shl
pushf
repnz
daa
in
xor
mov
jno
fadd
pop
pop
or
mov
xchg
enter
xchg
loopne
inc
sti
cwde
cs
inc
sub
xchg
jmp
xchg
bound
mov
pop
stos
xchg
scas
loope
mov
pop
out
xchg
int
iret
cmp
add
cmovne
test
push
rol
jno
icebp
jb
ja
and
push
add
scas
inc
xchg
fs
push
rcl
cmp
iret
and
adc
mov
add
push
in
push
repz
mov
(bad)
pop
mov
push
inc
add
ret
or
mov
pusha
inc
inc
sbb
and
dec
not
mov
jbe
push
and
rol
cmp
jmp
pop
stos
mov
adc
xchg
jns
jg
(bad)
cmc
mov
arpl
or
leave
ror
cli
retf
in
lahf
jecxz
ss
and
dec
adc
mov
mov
sub
les
ss
and
pop
mov
sub
arpl
test
retf
cmp
xchg
fdiv
rcr
cmc
xor
mov
cmp
cmpps
or
js
rcl
sbb
(bad)
lods
cmp
popf
lods
scas
ins
add
sbb
aad
ss
push
and
push
xor
in
push
jnp
xor
out
stos
fnsave
cdq
int3
aaa
sahf
sbb
test
jmp
jns
aad
gs
cld
call
and
xor
(bad)
push
(bad)
sub
leave
cwde
cwde
js
in
in
push
xchg
imul
stos
mov
test
(bad)
sbb
push
jle
(bad)
push
inc
adc
(bad)
aas
xchg
call
mov
dec
sbb
into
ins
test
pop
jmp
sti
pop
mov
das
dec
test
mov
jmp
adc
stc
cmp
xchg
imul
fucompp
(bad)
xor
sbb
jmp
cmp
add
enter
inc
xchg
sbb
push
dec
xor
push
lods
shr
cmps
in
push
inc
mov
ja
fcmovnb
ret
or
loop
push
xor
mov
(bad)
jl
sub
fisttp
ds
push
int
cmp
push
mov
aad
cmp
and
out
adc
sub
inc
or
outs
xchg
adc
je
test
mov
sub
xchg
retf
mov
test
sbb
icebp
int
daa
inc
mov
iret
outs
mov
and
test
pop
mov
(bad)
or
pop
sub
add
push
test
inc
cmp
cli
mov
xchg
ds
hlt
(bad)
sbb
push
sbb
ins
retf
cmc
out
cmp
inc
mov
(bad)
xchg
movs
pslld
outs
mov
mov
cs
add
mov
jmp
stos
and
(bad)
xchg
xchg
or
or
pop
add
cmp
and
aam
xor
scas
rcl
stos
data16
and
push
aaa
into
xor
movs
(bad)
jae
jo
sbb
adc
neg
xor
cwde
xchg
pop
jb
dec
scas
jb
leave
in
mov
cli
stc
gs
mov
xchg
sbb
cmp
mov
icebp
mov
icebp
dec
imul
loopne
jae
into
lods
pop
ja
push
comiss
mov
mov
imul
adc
fsubr
rcl
or
out
in
loope
sbb
cli
inc
push
(bad)
dec
retf
push
pop
cmp
int3
xchg
fiadd
or
les
(bad)
mov
cmp
sbb
les
jnp
jnp
or
sub
scas
adc
inc
dec
cmp
aam
mov
jle
cwde
jp
gs
cmc
in
pop
push
ret
add
sub
mov
pop
push
add
push
retf
xor
add
idiv
add
iret
mov
or
push
xlat
xchg
push
outs
pop
add
or
pushf
das
push
cmp
nop
inc
fbstp
mov
add
pop
hlt
dec
adc
(bad)
dec
fwait
(bad)
lea
icebp
jne
xor
push
les
add
out
test
adc
dec
out
mov
mov
ja
(bad)
fidiv
data16
jge
retf
test
(bad)
xor
jge
fidiv
push
aaa
mov
cmp
inc
sahf
outs
mov
mov
(bad)
ins
in
and
jmp
stc
sub
ins
in
iret
jl
dec
mov
dec
dec
ds
inc
cmp
or
mov
pop
das
fld
sub
pop
pop
sub
xchg
imul
retf
shl
ror
movs
adc
jg
push
int
cmps
repnz
icebp
enter
out
xchg
adc
push
pop
mov
cmp
sub
lock
dec
push
mov
shl
push
push
outs
in
and
sar
cmc
jo
retf
dec
pop
dec
rol
add
dec
jecxz
sub
push
sub
and
jecxz
cld
ss
xor
xor
mov
xor
adc
dec
inc
call
fst
fist
cwde
dec
sub
mov
outs
sub
add
or
loopne
ror
adc
or
daa
mov
(bad)
sub
dec
ret
fwait
call
add
sahf
ss
sbb
movs
stos
jns
add
nop
jg
data16
pop
push
cdq
push
cmps
imul
xor
mov
push
jmp
or
xor
imul
jb
outs
jmp
inc
sbb
fucomi
and
cmp
cli
sbb
jb
cli
cmp
adc
popf
cdq
xlat
ins
jp
(bad)
imul
mov
and
(bad)
xlat
in
mov
fst
aaa
test
std
mov
xchg
xor
fstp
mov
xchg
pop
xor
jge
cmps
sub
aad
xchg
movlps
stos
jno
adc
outs
arpl
jb
adc
fnsave
mov
sbb
push
shl
or
leave
mov
pop
(bad)
sbb
push
push
movs
mov
test
cmp
xor
xchg
jecxz
data16
pop
pop
cmp
and
jp
test
inc
jbe
jb
mov
jo
(bad)
xor
imul
aad
std
ss
cmp
jp
data16
int3
pop
(bad)
stos
call
dec
popa
shl
jo
mov
cmp
xchg
adc
pop
fcompp
cmp
into
movq
pop
add
stos
call
jp
pusha
test
push
out
sbb
jns
mov
aam
cld
fwait
or
mov
or
sar
inc
fnstenv
(bad)
hlt
push
push
xor
mov
sbb
pop
out
xlat
mov
jl
stos
pusha
enter
stos
cmc
div
mov
movs
inc
or
fisubr
in
call
arpl
push
push
scas
call
cmp
add
ror
cmps
mov
xor
sahf
arpl
and
out
pop
lahf
dec
leave
sub
pop
pextrw
and
push
fiadd
les
adc
ins
jbe
das
inc
xchg
fs
mov
addr16
scas
in
scas
outs
(bad)
fsubr
cli
mov
iret
xchg
lock
add
test
dec
int
or
inc
jmp
frstor
hlt
cmp
iret
mov
add
ret
sub
cwde
mov
pop
mov
jae
or
xchg
test
loopne
sbb
jne
fild
lods
or
into
pop
cmc
xchg
out
xchg
pop
sbb
and
sub
dec
mov
sub
fmul
popf
xor
aaa
addr16
adc
fdiv
mov
loop
outs
pop
sbb
enter
pop
add
enter
cmp
retf
loop
sub
push
(bad)
bound
fiadd
push
push
adc
mov
faddp
in
xchg
add
out
fisub
mov
pop
push
add
and
mov
(bad)
mov
popa
xor
xchg
pop
cmp
push
sub
push
das
dec
arpl
out
mov
int3
lea
push
das
add
cmp
add
inc
jns
adc
fidiv
xor
or
and
stos
adc
cld
mov
push
aam
cmp
test
mov
aaa
gs
adc
dec
aad
jg
or
test
arpl
mov
mov
ins
sbb
pop
pop
mov
in
pop
pop
jge
loopne
out
dec
mov
loope
inc
or
mov
movzx
repz
dec
jl
das
cwde
mov
pop
mov
repz
rol
mov
scas
into
push
dec
mov
lods
sub
inc
loopne
outs
add
ss
mov
out
movs
jle
dec
and
mov
ins
aad
loope
cmp
mov
push
xchg
(bad)
mov
jo
sub
xlat
push
mov
pop
pop
retf
jns
jo
xlat
movs
scas
movs
sbb
aas
mov
jp
mov
push
lods
int
ss
call
aas
mov
dec
out
pop
push
popf
xchg
mov
addr16
mov
shl
push
mov
into
dec
repz
jae
icebp
mov
pushf
jmp
cwde
(bad)
sub
cld
fwait
or
xchg
jmp
dec
mov
or
dec
imul
imul
ret
test
mov
test
shr
loopne
stc
std
iret
cmp
movs
cdq
(bad)
retf
sbb
add
lahf
test
outs
fwait
jne
push
pop
adc
idiv
std
jmp
jl
shr
push
adc
pop
push
mov
aas
nop
and
pushf
ret
test
or
or
movs
sub
imul
sub
pop
jne
ds
stos
cwde
test
lahf
pop
push
or
mov
aam
fs
popf
mov
and
call
je
arpl
xchg
das
pop
jg
pusha
ds
cli
or
or
(bad)
test
gs
retf
icebp
xor
inc
mov
ret
mov
add
out
fisttp
xor
pop
ret
push
push
repz
xchg
or
mov
fstp
(bad)
jle
retf
fdivr
jg
test
pusha
push
call
retf
fsub
xor
jg
adc
inc
and
mov
sub
movs
xor
mov
push
in
sub
retf
cmps
mov
hlt
jnp
imul
dec
test
mov
dec
pop
inc
adc
adc
sub
sbb
mov
dec
into
imul
(bad)
pop
aas
adc
das
sbb
mov
fcmovnb
mov
and
pop
in
jno
hlt
lahf
cmps
inc
mov
cmp
mov
in
mov
mov
aas
dec
cdq
sti
xor
cmps
stos
retf
mov
pop
and
pop
xor
mov
(bad)
mov
fld
mov
and
jg
loope
lods
ja
xchg
sub
popa
ret
mov
in
push
dec
mov
pop
int
adc
pop
into
sbb
cli
push
and
jbe
and
scas
ret
push
push
out
dec
dec
inc
jecxz
in
or
ret
sub
ins
mov
sahf
pusha
lods
jmp
or
out
cmp
faddp
sub
push
nop
inc
mov
pop
cs
lahf
popa
ror
xchg
and
bound
js
jp
xchg
out
scas
inc
fst
cmp
fs
push
inc
es
test
test
in
pop
push
movs
add
addr16
je
shl
sub
lods
sub
mov
sub
dec
mov
mov
cmps
adc
ins
xor
adc
mov
out
jmp
dec
sbb
xor
adc
pop
mov
add
adc
mov
inc
nop
jne
mov
and
jae
xchg
ins
out
xchg
bound
cdq
cwde
and
sub
mov
and
mov
pop
add
add
int3
fchs
addr16
(bad)
push
das
dec
inc
push
jo
scas
pop
adc
test
mov
sar
sub
jno
jge
fldl2t
push
movs
add
xor
daa
std
add
fidivr
xchg
or
ret
mov
add
sbb
push
adc
push
imul
jbe
cmp
mov
test
mov
retf
stc
jns
or
fcmovnbe
mov
call
fcomp
inc
adc
addr16
jp
jl
iret
inc
lods
jne
iret
xor
retf
mov
mov
addr16
loop
cmp
clc
aas
cmp
cwde
pop
push
mov
sub
dec
push
and
mov
sbb
xchg
test
movs
xchg
cwde
push
cmp
push
aas
fcmovnb
xor
scas
inc
add
sub
out
mov
iret
add
jl
scas
adc
cli
xchg
xchg
call
push
xchg
sub
jae
test
dec
enter
fdivr
cdq
ror
or
int3
xlat
test
or
mov
(bad)
xchg
sbb
test
cmps
xor
arpl
scas
add
push
shl
fdivr
cmp
adc
sub
cmovne
inc
cmps
gs
pop
pop
cs
sbb
xor
inc
jecxz
lods
ficomp
pop
pop
sub
mov
push
stos
cmc
push
xor
mov
pop
leave
pop
dec
pop
dec
or
lea
jb
add
dec
xchg
(bad)
xor
int3
mov
push
ins
in
iret
inc
or
(bad)
in
not
shr
xchg
pop
pop
cmp
jp
xor
dec
sub
test
cmp
pop
mov
nop
jo
jb
shl
add
sub
xchg
ja
add
xchg
sub
out
mov
inc
aad
add
mov
cmp
jo
xor
test
lock
imul
arpl
in
push
js
or
sub
xor
jae
inc
adc
sbb
pop
mov
inc
xchg
loop
aas
repnz
inc
push
test
popa
cmp
mov
movs
sub
jae
push
dec
sub
push
(bad)
hlt
inc
clc
sbb
pmaddwd
mul
outs
out
cmp
(bad)
lds
xchg
cmp
and
mov
mov
pop
pop
sbb
xlat
jbe
popf
cmp
dec
ja
mov
arpl
ficom
mov
in
cmps
mov
xor
sub
sub
mov
push
popf
(bad)
mov
mov
cmp
ror
sar
jbe
call
add
arpl
dec
dec
xchg
outs
ja
sahf
add
push
out
jnp
pushf
pop
and
pop
scas
fstp
test
bound
gs
cmc
xchg
xchg
inc
shl
lods
cmp
int
(bad)
js
cwde
ins
cmp
gs
cmp
jno
dec
inc
jnp
xchg
fwait
arpl
adc
jl
push
add
dec
scas
cs
lods
mov
inc
repnz
sbb
mov
push
pop
push
loope
dec
test
nop
dec
aas
or
sub
xor
imul
lods
push
sti
jns
sbb
xchg
int
cmp
mov
adc
xor
lahf
sbb
xchg
push
dec
fstp
xchg
sbb
pop
push
xor
ficomp
jae
pop
pop
pop
mov
shl
inc
xchg
cli
mov
sbb
arpl
fcmovne
mov
je
enter
sar
aam
cs
iret
xor
mov
push
rcl
fcomip
cmp
fidivr
adc
fsub
out
and
sub
pop
or
and
sbb
imul
icebp
mov
shl
test
jp
jmp
out
sub
outs
adc
pop
fild
xor
push
xor
jns
dec
aaa
cli
sbb
inc
mov
aad
push
pusha
mov
mov
int
cmp
dec
mov
test
rol
adc
or
cwde
mov
call
sub
out
mov
dec
pop
sub
jae
jp
or
jns
ins
pop
pop
loope
pop
mov
fidiv
aad
imul
mov
push
push
das
sar
add
dec
or
test
retf
or
jmp
jbe
loopne
iret
retf
jg
popa
push
add
pop
dec
xchg
or
push
fcomp
in
and
lods
mov
and
cli
daa
mov
mov
mov
cmp
mov
fwait
repnz
in
leave
or
and
and
xchg
leave
pop
jl
ror
adc
mov
mov
add
stc
sbb
and
dec
xchg
mov
push
add
dec
jns
imul
shl
dec
cs
ja
xchg
test
fld
neg
aad
or
popf
mov
neg
pop
dec
and
fcom
push
shl
loop
jno
jge
or
sbb
add
and
adc
int
outs
jae
xchg
jns
cmp
push
and
not
pop
retf
cmp
pop
push
ret
push
fimul
in
add
add
mov
fwait
or
aam
stos
dec
or
or
cmps
dec
mov
sub
pusha
pusha
adc
addr16
test
fcmove
mov
add
cmp
in
imul
iret
outs
stc
push
jp
sub
(bad)
je
lods
mul
xchg
push
sub
sahf
xchg
jne
call
mov
cmp
cmp
cmp
and
cmp
xchg
loope
rcr
inc
xor
cs
aas
ds
jmp
loopne
push
mov
jle
push
push
sbb
dec
out
fist
repz
out
pop
out
ds
(bad)
loopne
cmps
jo
in
xchg
mov
jmp
jmp
mov
es
jo
sahf
fbld
sub
fcompp
(bad)
pop
dec
retf
shl
rcr
repnz
add
pop
cwde
add
jo
sar
repz
fwait
dec
sbb
or
or
cli
or
xchg
popa
and
iret
fldenv
dec
jnp
dec
bound
outs
xchg
test
mov
push
ror
pusha
lods
outs
imul
add
push
jno
shl
cmp
push
mov
mov
stos
int
jb
pop
mov
jae
pop
add
jb
xchg
jb
adc
xchg
enter
adc
dec
mov
mov
ins
lods
std
ffreep
mov
jae
pop
fs
mov
call
aam
xchg
mov
mov
push
(bad)
mov
jns
mov
adc
es
mov
jns
push
jnp
call
xor
test
(bad)
cmp
jbe
sbb
dec
sub
inc
adc
add
in
(bad)
push
mov
push
add
rcr
xchg
cmc
and
or
in
jle
xor
pop
arpl
cli
lods
(bad)
mov
or
pop
add
push
out
jp
sbb
repnz
popa
retf
mov
jns
(bad)
fs
imul
fdiv
test
lea
mov
jl
xlat
cmp
push
data16
cmp
bound
sar
ins
stos
push
sar
dec
xlat
cli
popf
fmulp
test
xor
fist
jmp
mov
jnp
fmul
cmp
retf
mov
add
in
mov
adc
out
xchg
not
dec
mov
mov
add
inc
mov
movs
call
xor
sbb
gs
add
pop
and
nop
mov
add
or
cdq
shl
xor
inc
dec
lods
in
hlt
and
xchg
xor
daa
or
jg
and
xchg
movs
mov
xchg
jl
popa
push
sub
ins
mov
pop
and
(bad)
sar
aas
cdq
lock
(bad)
mov
mov
popa
or
xor
push
ins
add
push
mov
aam
imul
mov
jg
or
dec
pop
mov
mov
xchg
popf
mov
ret
add
ret
(bad)
push
or
das
adc
adc
scas
mov
sbb
mov
pop
ins
add
mov
xor
(bad)
in
fcomp
lea
cmp
(bad)
or
jmp
adc
mov
in
sub
add
lea
aam
out
cmp
mov
ds
pop
pop
push
inc
pop
sub
mov
push
mov
inc
(bad)
out
and
das
out
inc
test
pop
or
push
mov
clc
pop
pop
mov
sahf
mov
scas
mov
push
push
loop
out
push
(bad)
xlat
xor
mov
or
cmp
dec
std
inc
sub
jnp
test
sub
ja
out
and
jecxz
push
jg
xor
loopne
push
mov
test
push
pop
fsubr
or
cmp
push
dec
and
xchg
rcr
jge
push
and
inc
je
xor
adc
jle
test
mov
cdq
aam
or
adc
xchg
jno
fmulp
mov
arpl
fild
iret
xchg
loopne
fs
aas
sbb
mov
push
test
(bad)
push
scas
dec
and
mov
icebp
pusha
cmps
lea
fcomp
div
xchg
imul
xchg
add
jo
xor
and
and
jae
cmp
aas
mov
cmps
mov
mov
test
fdiv
inc
xchg
dec
sub
dec
das
into
push
xor
pop
test
js
in
sbb
sbb
jns
jp
add
pop
jne
movs
cmp
push
and
mov
mov
les
dec
ret
adc
jl
stc
jg
(bad)
push
std
in
sub
popf
sbb
dec
pop
lock
cwde
or
jmp
jae
add
sbb
movs
mov
xor
jmp
mov
add
xlat
dec
outs
add
xchg
scas
inc
imul
pop
int3
jecxz
add
scas
xchg
xor
pop
lea
(bad)
rcr
xchg
jb
mov
mov
cmp
mov
mov
daa
adc
mov
mov
lahf
xchg
or
jb
std
sub
retf
lods
into
sbb
cmp
mov
sar
cmc
sub
popf
xchg
out
pop
sbb
js
les
int
dec
pop
(bad)
in
rcl
aad
add
jbe
dec
popa
mul
cmp
mov
std
cs
(bad)
repz
jno
and
mov
mov
stos
enter
dec
cmp
cmp
int
jmp
fstp
hlt
popa
in
xor
xchg
sub
mov
sub
retf
lds
icebp
dec
push
adc
adc
cld
ja
ffreep
lea
push
(bad)
sar
pop
cdq
test
jge
and
pop
sahf
lahf
xor
sbb
les
xor
adc
loop
push
test
push
inc
popf
ror
frstor
and
mov
ja
xchg
xchg
mov
cwde
jg
xlat
adc
xchg
sub
cmp
jmp
ffreep
sbb
sar
das
jae
mov
retf
popf
mov
arpl
and
cld
js
jns
inc
mov
call
int
(bad)
cmc
mov
and
cmp
call
std
retf
int
shl
aaa
in
movs
int3
xchg
clc
inc
xchg
mov
test
js
ds
aad
js
aad
sub
ins
sbb
mov
add
fwait
int
sbb
enter
mov
jns
mov
mov
xor
call
sub
mov
push
cs
fs
xchg
push
iret
lods
dec
pop
cwde
pushf
push
scas
mov
repnz
sbb
adc
jge
mov
xor
jmp
mov
bound
adc
arpl
jg
pop
add
ret
cwde
mov
xor
stc
cmp
or
ss
add
cmps
aad
jno
fwait
fwait
jle
and
not
jmp
mov
pop
arpl
ins
(bad)
or
cmp
daa
mov
pop
test
mov
ss
pop
dec
cmp
test
jmp
dec
ja
test
repz
out
or
xor
jp
and
retf
lds
shl
jno
xor
cmp
mov
inc
jo
and
jo
cld
ds
sbb
inc
jbe
dec
pop
xchg
xor
mov
ds
add
ss
out
mov
adc
fiadd
pushf
jl
dec
mov
test
pop
pop
loop
adc
pop
mov
cld
ror
mov
loop
sar
inc
mov
dec
mov
xchg
jbe
mov
sbb
adc
ror
call
lea
imul
cmp
or
cld
fdivr
or
xor
mov
xchg
test
inc
inc
sbb
inc
push
jns
popf
cmp
fs
fwait
repz
inc
aad
push
stos
mulps
in
ss
repnz
(bad)
idiv
or
stos
mov
cmp
push
or
aaa
or
or
imul
imul
and
idiv
imul
and
mov
fisub
out
add
xor
inc
push
mov
retf
mov
fsubr
cmc
and
inc
ins
pop
push
cdq
not
adc
adc
and
pop
in
and
fstp
jno
mov
imul
xor
mov
cs
add
or
inc
xchg
jl
aad
test
and
ins
cs
les
sbb
(bad)
retf
xor
jo
add
outs
into
xchg
jae
les
sar
test
in
lods
outs
or
mov
sub
popa
call
inc
lods
pop
fidivr
ss
int3
adc
mov
mov
(bad)
call
retf
pop
hlt
out
cmp
outs
arpl
ret
mov
cs
cmps
and
fwait
cmp
push
and
imul
xchg
inc
and
mov
push
xchg
aaa
(bad)
xor
add
rol
mov
rcl
push
cmp
hlt
imul
adc
je
xchg
inc
stos
repnz
js
cmp
movs
(bad)
cwde
cmps
enter
jmp
fld
inc
pop
and
jne
mov
and
stos
jle
loopne
(bad)
imul
mov
or
sub
pop
stos
pop
in
adc
movs
(bad)
push
sbb
adc
xlat
and
dec
in
pop
push
icebp
mov
addr16
mov
int
sub
sub
adc
add
jns
sub
or
dec
aas
xchg
ins
loope
(bad)
iret
(bad)
loope
ins
lahf
xchg
shl
sbb
pop
push
daa
dec
rcr
(bad)
in
pop
dec
imul
imul
es
mov
xor
sub
out
hlt
cld
imul
aad
imul
xchg
pop
fcmove
xor
or
xchg
adc
inc
ins
mov
pop
outs
xlat
fistp
call
sub
fdiv
or
unpckhps
add
out
iret
dec
or
std
std
out
dec
adc
test
xchg
inc
ret
(bad)
data16
dec
cmp
inc
inc
fcom
or
repz
mov
jmp
mov
sbb
add
out
xor
scas
outs
inc
and
ds
arpl
fs
xor
fisubr
xchg
pop
(bad)
mov
xor
mov
aad
add
mov
aaa
lods
cld
cld
inc
add
sub
outs
push
push
ds
push
mov
out
sub
(bad)
loope
test
std
mov
sub
push
jo
dec
xchg
pop
cmp
xchg
test
or
adc
push
xor
jb
mov
dec
imul
rcr
push
inc
shl
xchg
inc
jns
fdiv
cmove
lea
mov
and
lods
jle
je
cwde
ficomp
or
cld
rcl
pop
ret
je
add
fiadd
inc
cs
adc
hlt
or
add
clc
mov
iret
mov
and
push
xchg
je
(bad)
xor
xchg
mov
or
adc
push
(bad)
xchg
sbb
mov
std
das
add
dec
out
lahf
add
cmps
sahf
(bad)
adc
jns
sub
mov
push
jne
mov
rcl
enter
mov
cmps
xor
out
sub
jge
mov
loopne
xchg
inc
shl
mov
ds
xchg
std
retf
dec
sub
adc
sahf
xlat
cmps
or
js
imul
cmc
sbb
adc
push
leave
fcom
mov
dec
sub
sub
and
repz
data16
add
adc
sub
into
xchg
out
cld
push
fstp
clc
rcr
xchg
fwait
xchg
cli
mov
fmul
mov
dec
xor
xchg
dec
mov
adc
adc
lods
push
push
movs
nop
adc
pop
sbb
(bad)
pop
mov
bnd
jmp
fwait
inc
adc
addr16
jle
xchg
leave
and
xor
jge
mov
xor
mov
inc
mov
cmps
mov
mov
cmp
push
pop
add
in
pop
xchg
xor
imul
jb
outs
sbb
scas
jbe
push
jns
sub
das
xchg
and
test
sti
sub
shl
test
jp
out
ja
rcr
cmp
imul
sbb
fsub
xchg
std
jno
xor
inc
and
dec
fsubr
mov
pop
out
jg
xchg
cdq
fdivr
jl
shr
shl
scas
sbb
shr
fistp
sbb
shl
scas
outs
ss
adc
cmp
mov
imul
lahf
jge
inc
fwait
or
pop
jb
into
paddusw
fwait
push
outs
out
mov
xor
xchg
pop
add
aaa
cmp
scas
pushf
loope
mov
fisttp
loopne
fstp
dec
jnp
sbb
fadd
leave
(bad)
xchg
mov
jg
enter
pop
sub
push
daa
and
xor
add
and
imul
lea
mov
inc
nop
mov
(bad)
push
jbe
or
pop
mov
loopne
push
loopne
ja
sub
pop
test
dec
mov
rcr
es
adc
xor
sub
mov
in
push
rol
inc
sti
daa
xor
inc
xchg
rcr
clc
fs
cli
mov
mov
mov
jmp
cdq
iret
mov
in
cmp
push
js
sub
in
push
cwde
mov
ss
mov
(bad)
xchg
jmp
loope
mov
ds
enter
(bad)
es
enter
aad
inc
loop
push
retf
jle
mov
cli
sub
mov
(bad)
js
cmp
push
pop
dec
jo
jmp
push
xlat
sbb
data16
call
dec
out
fcomp
leave
xchg
push
daa
(bad)
push
cli
mul
xor
outs
ins
sbb
in
(bad)
sub
test
dec
or
loopne
add
lahf
cmp
or
xchg
pusha
add
(bad)
jnp
sahf
pop
imul
in
cmp
mov
and
stos
jl
scas
(bad)
pop
pop
xlat
xor
fild
cmps
mov
movs
jbe
sub
out
out
int
jno
mov
jle
sbb
xchg
mov
rcr
div
ja
push
add
jl
cmp
add
outs
sub
mov
add
ror
ins
pop
in
pop
test
mov
call
push
das
inc
test
adc
push
and
dec
mov
ins
stos
xchg
xor
mov
das
rol
fbstp
sub
rcl
or
mov
cmp
das
dec
lods
(bad)
jmp
ss
add
cmp
mov
push
mov
mov
arpl
push
lock
jbe
and
dec
mov
sar
(bad)
xchg
rol
pushf
lock
imul
sub
push
or
int
sbb
repz
sahf
lods
test
mul
add
push
adc
daa
or
xor
out
hlt
test
dec
mov
dec
push
leave
push
add
cmps
cmp
mov
repnz
(bad)
mov
xchg
xchg
cwde
sub
cmp
ret
aam
fidivr
test
or
into
push
adc
call
sub
cmc
pop
test
sbb
push
mov
push
ss
cli
addr16
xor
jnp
lahf
push
in
jb
in
ret
dec
gs
imul
sbb
mov
cmp
mov
lahf
ret
outs
mov
cmp
sbb
cld
movs
test
jb
pop
addr16
ins
int3
mov
scas
dec
movs
jmp
add
inc
xor
ins
or
dec
push
xchg
push
lahf
outs
mov
mov
(bad)
(bad)
aas
stc
outs
jbe
pushf
xchg
pop
imul
mov
sbb
push
in
(bad)
jnp
mov
ret
cmp
popa
js
xor
cmps
lock
aam
jle
adc
dec
imul
xchg
xor
call
call
push
lahf
xchg
xchg
xor
pop
test
mov
pop
add
imul
adc
and
lods
imul
mov
add
mov
push
and
jg
push
xchg
stc
adc
out
jmp
xor
stos
dec
mov
pop
loopne
call
jg
mov
jmp
rcl
dec
icebp
xchg
xchg
mov
xor
jmp
fdiv
inc
imul
xchg
int
shl
shl
daa
retf
mul
inc
xor
sbb
rcr
xchg
fldenv
popf
mov
int3
(bad)
clc
xor
(bad)
sbb
push
mov
imul
jnp
add
sar
(bad)
leave
sbb
jecxz
mov
ret
les
scas
rcl
rcl
cvtdq2ps
pop
outs
xor
test
mov
cwde
cmp
sub
bound
cmc
aad
shr
mov
fldenv
loop
outs
cmp
xchg
xor
mov
push
sbb
pop
jmp
sub
je
(bad)
arpl
push
sub
sub
adc
mov
push
call
sahf
ffree
cmp
push
adc
cmp
jp
and
adc
cs
retf
gs
cmp
out
rcr
ror
mov
jae
pop
mov
inc
retf
in
dec
and
push
movs
mov
inc
pop
or
jle
aas
cmps
sbb
lock
sub
scas
push
mov
inc
fstp
fnsave
test
imul
adc
dec
jns
mov
mov
gs
jmp
(bad)
in
js
push
lds
mov
mov
pop
cmp
pop
adc
es
jno
xor
je
cmps
loope
cmp
scas
ret
fdiv
inc
sub
push
dec
ins
dec
pop
inc
or
jne
ja
sub
out
stos
mov
test
push
dec
add
or
out
cmc
mov
jbe
push
repz
lahf
sbb
repz
fcmovne
shr
sbb
idiv
arpl
adc
jmp
fisttp
imul
movs
cmc
addr16
add
or
adc
xchg
ss
mov
xchg
aaa
or
mov
jne
mov
push
lea
cmp
int3
(bad)
dec
fnstenv
loopne
sbb
inc
fcmovne
lods
das
sahf
sbb
xor
fiadd
or
into
ret
add
fmul
lods
in
jg
xchg
mov
xor
cmovg
jno
stos
arpl
mov
jae
jnp
cwde
fisttp
mov
add
pop
jbe
test
push
and
loopne
repz
mov
push
and
ds
int
test
stos
jp
fcomi
add
not
outs
xor
ss
ss
pop
jae
scas
pushf
dec
and
mov
retf
shl
into
push
retf
sbb
sti
inc
xchg
stos
adc
jecxz
retf
push
or
mov
cmp
dec
cwde
inc
fsubr
cmp
jge
inc
(bad)
pop
dec
mov
push
sub
xchg
imul
cli
inc
and
les
mov
popa
inc
xchg
mov
std
rol
inc
add
mov
mov
pusha
stos
xor
leave
iret
nop
jecxz
int3
adc
ficomp
mov
ins
aaa
cmp
mov
push
mov
push
dec
dec
fistp
cwde
inc
adc
cwde
fistp
mov
xor
call
repnz
adc
into
push
mov
jle
add
inc
cmps
xchg
in
loopne
das
pop
sub
xor
ficom
xchg
push
test
mov
mov
ret
inc
jae
fistp
ds
scas
movs
sti
lds
js
jae
pop
sbb
mov
dec
test
aas
es
jb
pop
push
xchg
jg
xlat
mov
popa
out
ds
icebp
pop
pop
push
jl
inc
pop
or
sti
cmp
aaa
jg
pop
or
push
ss
adc
es
fwait
outs
retf
add
leave
push
fs
mov
dec
ins
pop
rcl
mov
push
jmp
movs
leave
sub
sbb
loop
scas
dec
sar
stos
mov
jne
enter
xor
enter
scas
out
xchg
inc
mov
ins
not
jo
pop
out
test
push
jmp
or
xchg
inc
cmp
pushf
xchg
fdiv
mov
int3
and
sbb
sub
stc
leave
push
xchg
je
and
or
jb
dec
dec
ins
or
or
aas
cmp
in
lods
pushf
loop
test
jmp
hlt
mov
or
push
jne
imul
outs
dec
shl
cmps
sub
cmp
out
adc
jns
cmps
fwait
xor
xchg
push
cmp
idiv
sub
dec
loope
xchg
push
daa
stos
mov
cld
out
pop
xor
jbe
sbb
mov
call
ins
inc
mov
mov
ins
mov
(bad)
pop
pushw
add
xor
int3
dec
test
mov
adc
mov
ret
xor
add
neg
xchg
stos
ins
dec
fdivr
pop
out
ja
jmp
mov
cld
and
nop
sbb
ins
mov
test
push
pop
inc
nop
mov
test
loop
or
lock
jmp
arpl
xor
inc
fsubr
shl
mov
ins
pop
scas
(bad)
fidiv
sbb
mov
dec
repnz
dec
cs
out
es
adc
call
and
xor
imul
mov
dec
imul
jecxz
(bad)
and
jne
adc
jmp
pop
out
mov
and
(bad)
paddsb
imul
nop
imul
movs
sbb
test
mov
sub
repz
imul
outs
call
test
or
push
adc
mov
inc
shl
fmul
dec
jae
iret
gs
add
ja
push
xchg
mov
add
push
inc
add
inc
shl
lahf
into
pop
xlat
adc
lods
sub
mov
cdq
test
aam
repz
daa
xchg
cmp
inc
lods
cmp
jnp
movs
retf
pusha
or
or
in
(bad)
scas
data16
xchg
dec
pusha
mov
adc
jae
fdivr
add
aad
mov
cmp
dec
retf
mov
xchg
or
lods
xchg
push
cmp
push
xor
mov
imul
cs
lods
push
cmps
cmp
mov
retf
ja
retf
sar
cmp
aaa
outs
into
jmp
and
jo
addr16
aad
je
pop
hlt
fnstenv
ja
(bad)
loop
movs
inc
or
adc
add
out
loope
jp
imul
sub
inc
sub
loop
adc
adc
add
popa
xor
sub
mov
lods
or
icebp
in
aas
test
fcom
lock
mov
shr
loope
inc
adc
rcr
clc
test
dec
xchg
xchg
push
adc
xchg
mov
loopne
mov
popf
pop
cmp
push
popf
repz
fdiv
jbe
in
pop
rcr
xchg
loope
mov
inc
pop
add
pop
retf
jne
sub
stc
pop
xlat
mov
iret
pop
mov
pop
adc
add
xchg
out
sbb
xchg
popa
add
push
pop
inc
shr
inc
push
loop
fnsave
lods
out
lds
fstp
(bad)
sbb
fild
jl
repnz
sbb
jecxz
jnp
dec
mov
movs
jl
bnd
jns
arpl
sbb
xchg
dec
sub
and
add
rcl
int
push
xchg
and
aad
cmps
popf
sub
ins
pushf
mov
int3
xchg
push
mov
mov
js
add
sbb
dec
pop
cmps
fs
(bad)
into
and
push
jp
in
pop
(bad)
into
fstp
mov
fs
pushf
xchg
jmp
cli
movs
push
aad
sbb
adc
imul
add
popa
mov
arpl
loop
(bad)
push
retf
dec
fisttp
sub
aas
out
mov
into
enter
xlat
aad
rcr
xor
sbb
addr16
xor
xchg
jp
arpl
push
fdivr
inc
lock
mov
mov
leave
lods
movs
outs
fist
pop
xor
jle
dec
push
mov
pop
sbb
mov
sbb
lods
lock
pusha
je
aaa
push
cmp
retf
idiv
add
sub
inc
and
push
(bad)
fnsave
xor
push
adc
mov
cld
cmp
aas
add
lods
out
popa
mov
xor
mov
sbb
or
pop
test
imul
and
js
(bad)
mov
ins
dec
in
aas
jo
xor
adc
xor
add
dec
push
imul
std
sub
sbb
(bad)
cdq
pop
sub
xor
push
mov
pop
xlat
xor
sub
int3
xlat
xor
cmps
gs
jmp
int3
mov
test
adc
scas
cmp
dec
xor
mov
adc
mov
pop
jne
movs
enter
add
and
push
cmps
inc
in
xor
addr16
fld
sti
jg
inc
cld
repnz
mov
mov
push
jecxz
(bad)
mov
pop
add
inc
mov
ja
xlat
(bad)
xchg
test
out
imul
fwait
xchg
fstp
adc
cmp
mov
in
aam
sub
loope
repz
inc
test
into
fwait
out
xlat
movs
jbe
sbb
inc
cwde
js
dec
clc
pop
sub
and
pop
aaa
leave
mov
add
fst
(bad)
mov
mov
or
shl
xor
xchg
pop
and
out
xor
jecxz
mov
mov
cwde
push
add
cli
retf
dec
in
rcl
stos
pop
aam
jae
push
mov
mov
or
das
mov
xchg
inc
aaa
stos
mov
fwait
sub
jno
loope
mov
sub
mov
bnd
pop
retf
jne
cmp
imul
popf
lods
cwde
push
add
inc
mul
adc
jmp
icebp
adc
mov
mov
push
xchg
xor
ja
inc
fwait
sbb
movs
fadd
pop
push
xchg
mov
sti
jp
hlt
stc
mov
(bad)
int
(bad)
fnstcw
jnp
mov
fidiv
scas
addr16
adc
(bad)
outs
mov
inc
popf
mov
aam
cld
fsubp
(bad)
or
inc
inc
add
aad
movs
(bad)
das
pop
add
fdiv
xchg
dec
shl
addr16
jno
push
and
fcmovnbe
xor
xchg
ficom
push
fadd
fcomp
xor
sahf
jo
mov
lea
jae
shl
push
cvttps2pi
xchg
retf
movs
aad
cmp
call
es
int
fstp
scas
mov
mov
cmp
sbb
adc
cmc
mov
xor
sar
mov
cmp
lahf
mov
xlat
inc
dec
fwait
push
cmp
popf
pop
leave
push
xor
addr16
sbb
outs
and
jmp
mov
pushf
loope
in
xor
out
int
pop
and
int3
xor
cs
gs
dec
mov
fst
neg
dec
push
xor
scas
lods
add
push
mov
imul
in
aaa
fisttp
push
and
cmp
call
stos
mov
adc
mov
aas
and
mov
retf
mov
fmul
(bad)
pop
dec
mov
xchg
mov
and
pop
aam
out
cs
into
inc
xchg
imul
lds
xor
sar
retf
jmp
outs
cmp
bound
push
xchg
ins
into
sbb
cdq
call
cmp
dec
add
popa
xor
and
xchg
popa
test
and
and
add
pop
pop
or
(bad)
repnz
push
pop
jl
lods
fnstsw
pop
dec
loop
mov
adc
jecxz
xchg
popf
xchg
jo
stc
cmp
movs
lahf
or
in
xor
xchg
call
in
dec
add
dec
shr
add
sub
cmp
fs
dec
sbb
jmp
dec
bnd
pop
dec
repnz
(bad)
fldcw
pop
inc
pop
test
pop
lahf
ins
sub
data16
(bad)
cmp
mov
(bad)
lock
gs
aam
push
push
test
inc
std
xor
push
data16
cmp
jp
test
sub
out
test
jbe
or
stos
movs
out
inc
xor
js
xlat
stc
into
push
mov
pushf
rol
dec
sahf
xchg
in
mov
pop
cmp
in
adc
ja
sub
mov
xor
pop
xchg
mov
and
sub
into
mov
push
mov
cmp
or
out
inc
lods
fdivr
pop
add
adc
push
fwait
dec
mov
mov
test
cmp
ins
or
lods
dec
sbb
mov
xchg
fisubr
cmp
cld
outs
mov
je
les
xchg
cmp
and
mov
stos
adc
xlat
xlat
leave
mov
mov
sbb
jg
adc
mov
mov
mov
sub
ror
inc
dec
xchg
dec
mov
ror
sub
shl
push
outs
jne
int
lods
xchg
mov
sbb
sbb
adc
xor
cmp
das
pop
inc
mov
and
inc
imul
mov
sub
mov
shr
iret
push
repz
xor
ret
push
inc
mov
pop
ins
(bad)
test
rcl
mov
xor
inc
sub
and
(bad)
cli
cmp
hlt
retf
push
sub
test
cmps
add
xor
mov
scas
mov
cli
mov
mov
and
xor
pushf
pop
fwait
add
adc
clc
sar
xchg
pushf
in
js
adc
popf
dec
jle
ficomp
mov
inc
int3
in
dec
push
not
push
add
sub
cwde
aas
dec
in
xlat
in
jle
and
dec
adc
ja
addr16
mov
lods
inc
mov
nop
es
jp
mov
add
test
shr
lock
jns
out
xor
ret
mov
push
pop
hlt
push
inc
cmp
pop
sbb
lock
cmp
ss
in
mov
fistp
push
icebp
test
add
xchg
mov
adc
sub
ss
test
pop
sti
sub
pop
cmc
mov
movs
mov
adc
and
arpl
and
fldcw
das
xchg
jbe
mov
or
rol
sub
xor
sahf
push
int
xchg
lds
sbb
aam
push
or
adc
push
push
xchg
jmp
sub
xor
test
xchg
xlat
cmp
sub
xor
mov
push
xchg
loope
mov
out
fnstenv
(bad)
or
loope
sub
jnp
mov
push
test
(bad)
jp
imul
enter
mov
das
mov
add
aam
push
xchg
or
shl
xchg
ja
fmul
and
cmp
mov
fimul
xchg
lods
pushf
pop
sbb
imul
or
adc
int3
inc
sbb
mov
sub
repnz
push
cmp
movs
(bad)
hlt
dec
(bad)
(bad)
retf
mov
imul
stos
repz
std
stos
das
aas
fst
cmp
in
clc
and
lock
cmp
jae
pop
les
outs
fisubr
or
adc
cld
aaa
sub
inc
jl
retf
cmp
les
pop
cs
push
leave
mov
mov
cdq
les
clc
stos
sbb
or
fld
push
jge
into
lods
test
test
sub
clc
and
les
ret
xchg
cs
and
add
in
mov
pop
ret
fld
push
mul
jle
test
jecxz
ret
adc
pop
ins
push
adc
fstp
mov
mov
cwde
cmp
add
je
xor
ins
sbb
xchg
data16
cmp
adc
(bad)
push
out
mov
and
neg
dec
(bad)
ror
in
cmps
add
pop
pop
repz
in
cmp
dec
sub
aad
mov
call
in
out
cli
jl
mov
push
sbb
pop
sub
jmp
push
fisubr
scas
inc
mov
pop
cs
mov
cmps
(bad)
(bad)
js
adc
sbb
mov
push
push
bt
test
fsub
test
cmp
movs
or
(bad)
aas
pop
pop
aas
mov
pop
pop
adc
add
repnz
and
loop
daa
push
and
in
inc
lock
push
pushf
pop
sub
mov
sbb
leave
xor
out
mov
xchg
jcxz
pop
mov
dec
jo
pop
cmp
cmp
inc
outs
add
mov
or
and
les
aam
sub
dec
daa
jo
pop
mov
jl
or
mov
out
adc
in
xor
loopne
hlt
sbb
sti
jmp
xlat
loope
adc
hlt
push
xchg
dec
sub
arpl
(bad)
push
dec
cs
je
jl
xchg
cmc
pop
lds
pop
retf
cmps
xlat
and
jo
cdq
push
sbb
mov
push
lock
pop
lock
sub
aad
mov
mov
movs
loope
les
out
retf
jb
inc
xchg
inc
sahf
or
repz
adc
xor
jno
arpl
or
scas
loop
xchg
rcl
adc
cmp
cmp
icebp
cmp
out
loope
jmp
or
mov
les
and
sbb
jle
and
into
cs
sub
gs
out
add
jmp
ins
lea
or
jecxz
sub
pop
shl
push
pop
jmp
lock
push
pushw
push
jmp
mov
stos
shl
icebp
es
add
les
jmp
mov
into
loop
or
sbb
(bad)
jp
inc
adc
push
imul
in
add
and
loope
cli
jl
(bad)
(bad)
test
jle
lock
clc
add
mov
inc
pop
fldenv
and
outs
mov
sub
or
icebp
movs
outs
xlat
pushf
retf
mov
and
sub
cmp
mov
btr
stc
std
loopne
cdq
stc
aam
in
in
loop
sub
sub
in
leave
jg
scas
daa
cmp
jp
imul
inc
mov
vpsrlw
ds
lahf
adc
cmp
cmc
shl
cmp
frstor
shl
push
pop
ds
push
xchg
dec
xchg
fild
jae
pop
(bad)
cmp
in
das
call
jp
je
pop
pop
xchg
mov
sbb
ror
mov
sbb
stos
outs
mov
mov
xor
add
cld
test
mov
xchg
ja
dec
(bad)
es
add
stos
rcl
aam
pop
cli
repnz
pop
shr
fdivr
shl
cwde
loop
pop
xor
and
mov
adc
fwait
mov
cmp
xchg
out
pop
cmp
mov
push
xchg
bound
out
pop
mov
jl
pop
xchg
mov
pop
sar
lahf
push
and
fcmovne
and
pushf
jg
mov
repnz
int3
lea
adc
pop
mov
ja
or
inc
pop
cmps
pop
rcr
add
loop
xor
jo
das
xchg
sti
mov
cmps
aas
mov
inc
or
mov
leave
div
push
cmc
or
scas
dec
idiv
inc
xchg
shl
call
or
out
in
cmp
mov
mov
test
jo
cmp
jns
dec
and
leave
loope
mov
repnz
stos
pop
or
pop
ds
push
test
push
adc
pop
jns
inc
push
xor
sub
mul
shr
lock
stos
add
rcr
mov
jecxz
inc
pushf
xchg
iret
into
dec
cmc
mov
call
dec
in
test
addr16
dec
shl
pusha
mov
(bad)
out
clc
les
into
enter
fs
inc
jmp
jp
mov
xor
das
data16
fdiv
cmps
dec
sbb
adc
in
call
mov
mov
adc
mov
das
pop
nop
inc
mov
bound
fwait
inc
sub
adc
and
das
push
rol
(bad)
int3
lea
jns
cmc
scas
sbb
int3
ror
mov
xchg
repnz
mov
jo
jb
push
jmp
push
cmps
into
scas
mov
mov
test
sub
sar
(bad)
out
je
jnp
stos
call
test
mov
mov
add
aaa
out
add
sub
sbb
sbb
stos
push
sahf
push
xor
fnstsw
js
in
xor
adc
mov
dec
jg
pop
fistp
pop
xchg
div
shl
add
(bad)
and
popf
leave
fsubp
mov
push
leave
in
push
xchg
stos
mov
(bad)
mov
daa
xor
xlat
dec
gs
and
mov
popa
aad
mov
mov
ds
jns
cmp
pop
loop
daa
mov
xchg
clc
fwait
pop
add
rcr
xor
inc
cmp
push
mov
add
(bad)
fwait
sti
mov
cwde
stc
dec
frstor
pop
mov
sub
cmp
aam
sbb
or
jns
xchg
jg
adc
retf
outs
outs
fs
imul
pop
xchg
ret
in
shl
imul
not
sbb
stos
mov
xor
ins
cmp
adc
jecxz
fwait
aam
aas
inc
jmp
dec
xor
scas
fisttp
lds
fst
(bad)
out
ja
repz
shr
mov
xchg
lds
pop
sbb
xchg
inc
scas
retf
add
std
pop
js
add
outs
xchg
jmp
scas
mov
mov
lea
ins
jg
test
fimul
ret
jmp
add
jns
push
push
pop
mov
cmp
cmp
fld
add
jecxz
daa
ret
retf
shl
imul
mov
mov
repnz
repz
scas
in
repz
sbb
vmovaps
movs
push
popf
call
das
cwde
aaa
push
mov
lock
cwde
cmp
loopne
jae
cmp
or
in
dec
pop
mov
and
lock
add
(bad)
and
sub
or
pop
aad
and
or
and
lods
inc
xchg
jbe
and
pop
rcl
sbb
xchg
lahf
inc
lods
std
cmp
cmps
cmp
mov
(bad)
stos
inc
clc
xchg
bound
mov
jge
push
jns
add
ja
mov
sub
or
(bad)
mov
or
xor
jge
das
rcr
pop
les
aam
sub
(bad)
arpl
mov
js
int3
out
add
nop
push
xchg
pop
mov
mov
xor
inc
push
call
sub
cmp
pushf
jne
mov
or
jo
cmps
jbe
pop
sub
dec
push
or
push
adc
push
movs
xchg
mov
dec
addr16
lahf
xchg
lods
push
(bad)
adc
movs
inc
sbb
arpl
lahf
xchg
in
mov
idiv
and
dec
pop
pop
hlt
pop
mov
jg
lock
mov
inc
push
aam
dec
out
xor
push
iret
fist
mov
rcr
jne
mov
lock
in
dec
bound
adc
div
fnsave
cwde
mov
xchg
or
ds
scas
adc
out
out
iret
sbb
leave
jns
ror
or
shl
inc
sub
mov
adc
jp
push
add
jge
or
push
nop
xchg
jle
out
stos
scas
cmps
adc
stos
jmp
sbb
cmp
xor
cmp
fwait
aas
pop
enter
movs
push
out
lock
xor
out
jl
or
adc
xor
aam
inc
mov
jecxz
js
sbb
jne
push
pusha
mov
(bad)
call
pop
shl
je
(bad)
shl
into
not
xor
bound
and
into
and
dec
jmp
les
mov
(bad)
call
in
xchg
xor
cdq
(bad)
fs
xor
sbb
sahf
call
mov
push
mov
(bad)
cmp
xchg
lods
(bad)
jmp
in
arpl
mov
vhaddps
bound
sub
add
fsubr
dec
ret
lahf
mov
popa
nop
hlt
fld
popf
cld
push
js
sub
setbe
inc
inc
xchg
jmp
ret
mov
fldln2
enter
loopne
inc
fiadd
pop
fist
pop
xchg
rcr
pusha
test
mov
push
les
retf
xor
dec
std
xlat
xlat
mov
mov
dec
cmp
loopne
sar
repz
pop
mov
cwde
pop
adc
mov
jmp
pop
push
in
int3
or
mov
in
jp
xor
inc
dec
ins
loop
shr
sti
inc
stos
adc
rcl
jnp
mov
stc
cmc
shl
jg
adc
mov
xlat
sub
cmps
ins
ss
movs
(bad)
push
cmps
movs
mov
es
sbb
fbstp
mov
mov
(bad)
pop
out
mov
xchg
inc
mov
aam
pop
mov
and
icebp
ja
or
les
push
adc
out
arpl
jae
je
iret
loop
aaa
jb
adc
push
add
leave
xor
repz
inc
or
cdq
inc
rcr
test
cmp
inc
or
inc
shr
outs
sub
cli
in
sbb
repnz
jp
or
mov
inc
popf
stc
inc
jnp
push
xor
mov
jecxz
mov
adc
bound
addr16
mov
mov
es
fmul
xor
adc
imul
(bad)
hlt
push
aaa
jl
rcl
(bad)
out
mov
sub
inc
adc
cmp
xchg
jnp
lds
neg
pop
jmp
ret
and
cmp
pop
scas
aaa
cmp
mov
mov
xor
xchg
retf
or
cmps
sub
mov
pop
mov
fs
into
xor
js
xchg
push
mov
retf
ins
mov
ret
mov
jb
xlat
bound
dec
data16
int3
cli
loop
daa
fdivrp
scas
inc
push
fnstsw
and
repnz
ins
push
(bad)
daa
int3
test
inc
sbb
mov
sbb
xor
jno
(bad)
sub
retf
or
inc
dec
mov
jge
push
cmp
hlt
popa
fidivr
loop
xor
and
scas
sub
push
xlat
out
xchg
pushf
rcl
loop
inc
aaa
dec
add
push
add
dec
fcmovbe
loop
or
clc
inc
mov
push
sahf
sub
dec
push
icebp
cld
jmp
push
stos
js
jae
and
fnsave
mov
lods
jno
cmp
and
mov
mov
fisttp
pop
dec
inc
fdiv
jns
mov
cld
xchg
pop
inc
or
adc
cmps
jle
push
mov
dec
or
dec
mov
push
fiadd
inc
int3
sub
(bad)
(bad)
mov
pop
ja
cmp
in
cmp
test
dec
call
jecxz
lds
int
mov
mov
lock
adc
push
mov
fdiv
cs
sbb
lahf
cld
push
(bad)
xor
or
movs
test
add
sbb
mov
push
mov
add
popf
pop
and
mov
adc
es
xor
dec
sub
sub
call
xor
aad
xchg
mov
ret
retf
retf
push
mov
push
popa
mov
mov
pop
sub
sar
cmp
jmp
adc
retf
mov
movs
or
mov
jg
sbb
and
jne
ins
cs
mov
aaa
dec
push
xor
scas
mov
add
sub
adc
into
stos
daa
cmp
mov
fiadd
shl
mov
addr16
jp
aaa
in
imul
fs
(bad)
ins
fidivr
es
or
pop
loope
sub
sbb
daa
out
lds
cs
or
xchg
js
fld
xchg
(bad)
out
jb
mov
cli
adc
mov
xor
mov
and
adc
retf
pop
mov
mov
dec
out
icebp
rcr
push
sub
or
jmp
push
lar
daa
leave
lea
push
stos
inc
mov
clc
in
xor
scas
sub
test
push
mov
retf
jbe
cli
mov
and
sbb
dec
in
in
icebp
aam
push
or
xor
and
or
xchg
inc
push
mov
out
in
out
xchg
dec
neg
or
in
jp
add
(bad)
out
push
mov
jle
rcr
and
pop
cmp
jo
jno
mov
or
jnp
sbb
and
mov
jno
sbb
xor
push
sahf
pop
xchg
and
rcl
dec
inc
nop
jmp
jno
ds
test
jb
loopne
pusha
jmp
add
aas
sub
aad
or
pop
rcl
movs
mov
repz
rep
cmp
loopne
gs
cdq
scas
fld
pop
loopne
inc
and
(bad)
pop
or
push
int
pop
mov
lods
mov
jp
add
(bad)
sub
aam
adc
mov
adc
into
call
sub
lahf
out
pop
adc
or
mov
js
mov
inc
pop
and
int
mov
fdivr
test
adc
and
fdivr
mov
push
in
(bad)
fs
test
fbstp
(bad)
aam
push
sbb
and
mov
xor
add
dec
xor
movs
xchg
mov
jp
sub
test
mov
sar
inc
adc
mov
mov
mov
imul
scas
xchg
jle
fsubr
push
loop
pop
das
inc
mov
push
xchg
inc
add
sbb
in
(bad)
and
add
or
xchg
sub
nop
inc
das
mov
fidiv
sub
inc
fimul
addr16
xchg
out
cmp
leave
hlt
std
and
cmp
(bad)
mov
mov
jae
loopne
jp
popa
push
repnz
iret
mov
in
scas
pop
push
push
mov
mov
movs
xchg
mov
jmp
clc
rcl
pop
jle
xchg
mov
dec
or
addr16
push
and
sub
sub
ins
enter
sub
in
pop
xchg
outs
out
inc
sti
pushf
or
or
jns
mov
not
popa
or
in
push
shl
cmp
fiadd
jecxz
pop
pop
gs
mov
xchg
shr
or
pop
jmp
mov
ss
(bad)
push
pop
(bad)
ud2
clc
jo
xchg
(bad)
or
cwde
push
cmp
fldenv
dec
inc
dec
xchg
enter
pop
jns
push
xor
addr16
ret
sub
call
and
scas
lods
fnsave
dec
cmp
mov
jle
add
movs
xchg
shr
fild
xchg
lods
push
(bad)
bnd
jmp
push
cmp
sbb
lea
movs
cmp
data16
das
ins
scas
jb
or
dec
xor
cli
aad
xor
out
test
dec
push
add
mov
inc
jmp
call
jns
xor
cs
dec
and
jno
fst
jle
cmp
inc
sbb
sti
(bad)
xchg
lods
xchg
adc
rol
aad
cmps
xor
jnp
(bad)
adc
mov
test
push
repz
lods
lock
inc
add
lahf
or
scas
ds
push
les
mov
jns
or
lock
(bad)
fnstcw
pop
mov
bound
lahf
out
nop
adc
mov
and
test
fs
cmps
daa
or
shr
inc
adc
test
fld
cdq
mov
test
mov
adc
xchg
mov
imul
adc
mov
outs
cdq
test
loopne
mov
xchg
adc
pop
cmp
(bad)
and
mov
test
sbb
cmp
push
lea
jmp
nop
and
je
cmp
xor
ds
and
movs
push
scas
sar
fst
xchg
dec
sub
aas
or
adc
jg
sbb
popa
add
pop
jae
jg
fidiv
cmc
das
jge
jbe
dec
cmp
or
outs
movs
xchg
or
sub
push
xchg
sub
ret
sub
pop
mov
sti
bound
mov
daa
mov
dec
or
fcmove
lahf
push
imul
inc
cdq
loop
popa
in
dec
jge
pop
xor
shl
retf
push
mov
inc
cmps
fs
ins
hlt
jbe
lods
pop
add
cmps
mov
push
out
aaa
arpl
arpl
cmp
adc
mov
int3
fsubp
outs
cmp
inc
daa
push
js
push
aam
clc
mov
sar
jae
pop
dec
mov
mov
in
cwde
cmp
xlat
add
popf
cmp
sbb
pusha
sar
hlt
sub
pop
(bad)
rol
jle
xchg
outs
mov
and
shr
jne
mov
gs
cmp
mov
mov
inc
add
sub
or
stos
ficomp
jno
daa
in
jmp
sub
loop
inc
add
mov
jno
clc
pop
mov
mov
daa
aad
mov
mov
(bad)
xor
mov
cmp
rcr
test
rcl
pop
push
sbb
jne
mov
mov
fisubr
sub
popa
and
movs
add
mov
mov
pop
inc
pushf
push
xchg
into
pop
cli
pop
shl
mov
aad
in
pop
cmp
sbb
pop
adc
sbb
fcomp
dec
pop
psllw
adc
pop
pop
stos
je
adc
pop
je
mov
push
mov
xor
into
jbe
stos
adc
push
xor
push
sbb
dec
push
xchg
push
cmps
rcr
ds
dec
pop
(bad)
movs
mov
dec
mov
jmp
jmp
inc
popf
mov
out
out
cmps
aas
aaa
ins
test
xor
xchg
pop
icebp
imul
daa
add
xchg
add
outs
sbb
inc
or
inc
add
movs
inc
sbb
and
mov
push
sub
pop
cmp
outs
push
inc
(bad)
ins
rcr
ret
jecxz
lds
sbb
sahf
add
icebp
xchg
fld
sbb
jo
and
movs
pop
aas
jmp
arpl
jg
std
xlat
fs
stc
jbe
inc
xor
push
xchg
xor
gs
mov
fidiv
outs
inc
xchg
mov
cmc
std
jp
push
aas
push
fs
imul
pop
shl
ds
xor
jmp
and
add
loop
cli
mov
cld
jmp
out
xchg
jo
push
push
push
pop
lods
xchg
fs
cmp
mov
fdivp
dec
mov
stc
xchg
movs
or
lahf
ins
push
cdq
pushf
int
or
and
scas
(bad)
sub
and
lock
jbe
repnz
push
jg
inc
mov
xchg
sub
(bad)
cmp
lea
outs
xchg
ins
ret
sbb
xchg
sub
aas
and
andnps
jbe
mov
mov
xlat
repnz
xchg
loope
lahf
(bad)
pop
xchg
xlat
popa
repz
sub
and
inc
test
lods
push
sub
xlat
adc
xchg
imul
and
lds
pop
cmp
or
daa
sub
std
adc
aad
repz
jmp
push
xchg
push
adc
sub
add
jl
mov
loope
push
cwde
(bad)
pop
mov
in
in
mov
jnp
test
or
add
pop
test
into
movs
ja
push
dec
in
inc
stos
push
(bad)
jmp
fidivr
fldcw
lds
push
jb
lea
add
in
clc
jae
out
jns
fdivr
inc
leave
pop
mov
aas
int3
push
cmp
push
inc
mov
inc
cmp
dec
sub
pop
addr16
loopne
je
clc
aaa
(bad)
in
and
out
(bad)
mov
aaa
outs
out
in
push
xor
ds
movsx
clc
es
and
test
mov
pop
push
(bad)
mov
jmp
cmp
mov
fcom
and
arpl
sbb
pop
push
ss
fldenv
fidiv
ins
sbb
sbb
adc
dec
(bad)
pop
lods
imul
mov
sub
cmp
pop
scas
aad
jns
push
ins
dec
and
xchg
or
les
mov
sbb
stos
mov
sar
addr16
xor
pushf
cmp
xchg
pop
sub
add
sub
shr
mov
ret
jle
mov
mov
loope
idiv
jp
jo
push
lock
(bad)
sub
rcr
out
popa
pandn
(bad)
cs
loopne
mov
or
fiadd
rol
movs
and
sbb
mov
jb
adc
jmp
dec
in
iret
jo
or
ret
adc
sub
and
out
mov
adc
lock
lds
push
cwde
mul
mov
mov
mov
xchg
dec
retf
popf
xchg
push
pop
les
adc
xchg
pop
xchg
sub
test
in
jbe
mov
mov
mov
and
pop
dec
jno
dec
shr
aaa
das
xor
add
pop
xlat
sbb
xor
inc
fisub
sbb
add
cmp
pop
sub
es
jmp
inc
ins
(bad)
rcr
sub
cwde
int3
mov
sti
pop
loopne
inc
fisttp
push
out
pop
popa
outs
push
cdq
jl
fisubr
(bad)
or
mov
mov
rcl
jge
push
jae
jmp
inc
ja
jle
leave
inc
or
sub
ror
jg
outs
sbb
mov
add
sbb
pop
ins
test
add
mov
out
scas
aam
inc
cwde
and
test
push
sbb
mov
adc
or
mov
ret
or
sahf
mov
jg
sti
dec
lods
in
cli
mov
push
pop
cmps
cmp
dec
xor
and
sbb
mov
mov
out
add
sbb
fincstp
sub
dec
in
cld
scas
mov
or
mov
jne
xchg
fdivrp
fmul
xor
xor
shl
lea
lds
outs
mov
jge
enter
add
adc
inc
dec
inc
cs
loopne
mov
mov
sub
sub
xchg
push
cmp
int
enter
cwde
add
sbb
adc
gs
imul
ins
and
add
inc
mov
pop
ins
repnz
push
fsub
scas
inc
sub
pop
fisttp
cmp
mov
cmps
dec
arpl
test
cmps
cdq
fs
mov
(bad)
pop
in
in
jae
jae
sti
jns
xor
adc
std
pop
(bad)
icebp
push
inc
or
cmps
mov
mov
sub
push
sar
xor
hlt
push
mov
pusha
icebp
push
(bad)
imul
pop
(bad)
pushf
xchg
call
jno
mov
ss
aad
out
xchg
adc
or
jecxz
and
inc
imul
mov
sbb
inc
in
aas
add
retf
or
js
mov
xchg
xchg
mov
adc
mov
pop
sahf
(bad)
out
ins
in
sahf
in
lods
xchg
ds
retf
mov
add
fs
(bad)
pop
or
lea
add
test
das
cs
imul
add
and
ins
xor
adc
cmp
xor
aaa
mov
stos
fwait
or
adc
adc
popf
cmp
jmp
cli
adc
enter
sbb
iret
mov
and
adc
inc
sbb
add
sbb
xor
mov
push
cmps
(bad)
out
xlat
push
sub
mov
mov
movs
ret
mov
inc
pop
inc
xchg
and
sbb
or
sub
add
lock
push
mov
sbb
sahf
jecxz
push
add
xchg
js
adc
icebp
add
or
es
dec
push
and
and
ja
or
mov
aad
xchg
cmove
bswap
push
xchg
cmps
and
jb
xor
stc
pop
fist
into
cdq
xchg
dec
iret
loopne
jo
scas
movs
xchg
outs
xchg
dec
(bad)
nop
fisttp
pop
jae
add
sub
stc
outs
gs
xchg
std
cld
addr16
cli
in
loopne
out
mov
xor
push
push
(bad)
adc
mul
mov
jne
dec
bound
je
popa
mov
xchg
sbb
push
xchg
lds
pop
inc
jmp
and
add
push
inc
cmc
mov
cdq
xor
div
outs
popf
xchg
repz
push
xor
mov
fwait
int3
ficomp
test
fucomi
addr16
mov
daa
xor
mov
jg
imul
mov
xor
fdiv
xchg
or
inc
sbb
push
mov
stc
cdq
push
pop
ins
stos
pusha
dec
ins
jge
int3
inc
or
jle
dec
hlt
xchg
mov
cmp
mov
mov
push
inc
fnstenv
addr16
leave
xor
ja
or
jle
(bad)
fdivr
xchg
dec
inc
(bad)
call
xchg
cmp
and
test
sub
cli
mov
loopne
push
stos
push
cwde
fs
arpl
cmp
mov
dec
fxch
leave
mov
mov
dec
pop
scas
jmp
inc
mov
fcom
aas
outs
mov
push
scas
cli
nop
mov
test
push
mov
int3
or
xchg
sub
push
sbb
pop
loop
pushf
add
sbb
outs
and
jle
fs
xchg
jbe
add
fwait
in
popf
mov
ins
stos
das
retf
xchg
fld
lds
out
and
dec
repnz
pop
popa
adc
mov
arpl
lods
les
jge
xor
mov
jmp
mul
jo
pop
iret
or
and
xchg
push
jmp
jae
push
sti
dec
retf
push
imul
pop
cmc
jmp
cmp
gs
mov
or
jbe
xchg
xchg
int
pop
sahf
sahf
mov
xor
add
test
pushf
out
xchg
or
sbb
cmps
js
fxch
movs
js
aaa
loop
sbb
add
mov
loope
dec
cwde
push
rcr
mov
out
lds
pop
mov
inc
mov
(bad)
rcl
mov
inc
and
(bad)
nop
std
cmp
jb
push
scas
ds
jmp
add
jb
sub
jne
stos
sbb
ret
pop
or
cmp
push
fmul
imul
in
mov
jmp
sub
dec
aam
mov
das
lods
daa
jmp
lods
mov
xchg
push
sti
lock
xchg
sbb
sub
mov
sahf
and
(bad)
jae
ins
fcomp
or
(bad)
cmps
inc
stos
loope
iret
in
cmp
mov
es
rcr
push
mov
cmp
cmp
add
pushf
mov
push
(bad)
fsubr
xor
sti
cmp
scas
cld
mov
mov
test
push
popa
push
ins
fcom
fs
push
int
popf
pop
lahf
sbb
stc
fsubr
test
repz
enter
sbb
(bad)
pop
lahf
test
fild
and
push
inc
dec
and
sbb
popa
dec
jmp
or
bound
lds
cmps
sbb
icebp
pop
and
cld
xor
cmp
sbb
adc
and
add
mov
mov
icebp
stos
aaa
movs
pop
mov
adc
bound
rcr
inc
inc
aas
cs
sub
jmp
aam
fwait
sbb
adc
jb
(bad)
cli
xor
xlat
test
mov
lods
(bad)
ret
jg
fst
retf
xchg
and
xchg
fisttp
shl
aam
fwait
je
cmp
pop
xor
push
jecxz
cs
cmc
aam
xchg
popf
pop
push
out
jmp
inc
cmp
mov
ror
jno
and
rol
outs
mov
mov
gs
mov
cmp
hlt
repz
sub
lods
fild
icebp
loopne
xchg
pop
xor
push
sahf
out
rep
sbb
test
scas
xchg
dec
dec
shl
add
xor
(bad)
adc
retf
mov
test
mov
mov
adc
jns
ror
adc
dec
jge
cmp
pop
in
push
mov
xlat
or
out
xchg
push
fild
stos
dec
jne
scas
push
jns
jmp
mov
fild
cmp
(bad)
adc
bound
stos
popf
fsub
not
lds
arpl
in
fadd
dec
mov
sub
inc
std
mov
movs
inc
stc
mov
mov
xor
jmp
addr16
mov
mov
or
imul
(bad)
push
cmc
jno
paddd
das
jo
out
lods
pop
mov
jecxz
sub
mov
pop
mov
sbb
mov
dec
dec
fwait
jns
push
add
mov
jmp
cmp
movs
fcomp
cdq
pxor
xor
and
sub
out
call
or
sbb
jmp
and
in
xor
movs
and
inc
ret
bound
add
sahf
mov
movs
mov
imul
call
pushf
pop
cs
addr16
add
sbb
icebp
xor
scas
(bad)
sar
xchg
shl
jne
xor
enter
repnz
in
je
imul
jle
outs
addr16
xchg
jno
es
mov
add
(bad)
sbb
ret
mov
jb
adc
inc
popf
es
test
(bad)
hlt
xor
and
xchg
jne
jmp
mov
pop
scas
rol
fisubr
aas
mov
xor
fstp
sbb
fcomp
mov
xlat
fstp
out
stc
(bad)
imul
arpl
lods
mov
mov
leave
enter
push
leave
xor
xor
retf
fwait
jmp
sub
push
outs
xchg
cmps
cmc
push
pop
jmp
push
loope
icebp
sbb
imul
mov
mov
mov
add
cli
test
push
pop
pop
pop
fadd
jg
popf
cwde
inc
jne
pushf
xor
scas
bound
cmc
or
aad
inc
adc
outs
pusha
daa
adc
dec
hlt
mov
jge
or
repnz
sbb
jl
cmp
ds
clc
ficomp
aas
or
push
loope
dec
pop
mov
and
sti
adc
(bad)
pop
fbstp
xchg
mov
ror
jne
call
jle
adc
(bad)
xchg
mov
fiadd
jbe
movs
cmp
jbe
dec
hlt
es
jp
and
sub
jbe
out
and
mov
popa
sub
leave
mov
dec
scas
adc
cmc
scas
adc
int3
push
pop
add
xor
mov
mov
and
lods
bound
mov
shr
gs
xchg
sahf
or
jnp
in
call
ret
ret
out
fist
fwait
out
push
(bad)
mov
pop
div
daa
add
mov
(bad)
push
cmps
lock
pop
(bad)
cli
loopne
dec
(bad)
sub
rcl
and
add
push
sub
sbb
inc
aas
add
fsubr
and
retf
pop
rol
mov
mov
add
test
xor
cmc
dec
xor
or
sbb
fucomip
jmp
xchg
sub
sub
add
mov
fcompp
pop
jno
lods
in
cmp
mov
cmps
push
shl
cmps
adc
repnz
cmp
jp
inc
test
dec
dec
repnz
sbb
mov
sbb
bound
or
in
dec
xor
rcl
and
inc
sbb
dec
test
adc
push
add
inc
add
leave
mov
dec
inc
mov
ret
repnz
fisubr
out
dec
sbb
mov
stc
iretw
ds
inc
std
or
retf
sbb
push
mov
add
inc
(bad)
cmp
jns
repnz
xchg
rdmsr
xor
lods
jp
ret
jmp
xchg
shl
movq
dec
add
and
popf
mov
ins
and
and
or
retf
adc
push
pop
sub
dec
div
sbb
inc
inc
imul
and
mov
cmp
add
add
and
dec
rcr
xor
loope
into
pop
dec
and
push
test
jle
fsubr
mov
pop
les
dec
xchg
xor
ins
sub
adc
test
aaa
icebp
adc
stos
mov
mov
pop
fincstp
aaa
push
inc
push
nop
dec
(bad)
mov
gs
nop
xchg
xor
mov
(bad)
pop
adc
data16
or
mov
movs
scas
test
test
dec
jo
or
xor
pop
sbb
(bad)
out
and
or
nop
in
shr
into
xchg
popa
xchg
cmp
in
jge
mov
push
sbb
inc
stc
xor
les
sahf
fidiv
cwde
mov
cwde
mov
sbb
push
and
cli
or
xor
xor
in
and
retf
and
bound
mov
stos
add
daa
xor
jecxz
in
jo
jb
xor
pop
xor
xor
jp
mov
xchg
jg
aad
pop
in
xor
push
ja
cmps
shl
jno
dec
xchg
add
mov
aaa
xor
es
pop
adc
cmp
mov
ja
xor
mov
repnz
inc
shl
push
lea
dec
mov
fbstp
jns
inc
cmp
push
scas
cmp
data16
xchg
dec
scas
sbb
stc
aad
test
fld
push
adc
fidivr
add
je
lock
xchg
in
fcomp
fidiv
lods
mov
cmps
inc
adc
test
lea
and
imul
sbb
jg
sub
xor
ins
fisub
inc
mov
mov
mov
shr
add
aaa
cli
xchg
mov
cmp
hlt
xchg
popa
data16
js
xor
lods
and
mov
retf
dec
sbb
ins
cmp
test
inc
cmp
or
rcr
xor
xor
cmc
addr16
xchg
pop
adc
xchg
jge
stos
out
xchg
rcr
dec
test
addr16
mov
and
inc
test
mov
mov
or
sub
jb
push
add
adc
test
mov
push
mov
leave
jno
stos
std
(bad)
ffree
popa
test
imul
stos
sbb
inc
add
pop
fist
or
retf
mov
or
gs
not
cmc
dec
mov
cmp
dec
retf
(bad)
fdiv
or
outs
push
push
jecxz
push
icebp
inc
inc
push
xchg
mov
add
pop
ins
fisub
push
cmp
mov
retf
jl
adc
sub
or
or
and
imul
pop
fprem1
rcr
sub
push
mov
aad
jnp
mov
xor
movs
loop
cld
fild
mov
inc
inc
in
dec
xchg
mov
and
pop
push
rcl
or
jecxz
repnz
out
mov
mov
push
pop
sub
or
sub
nop
dec
push
out
mov
pusha
cmp
test
imul
sbb
ror
jp
xchg
push
push
aam
enter
push
xor
adc
ss
push
adc
push
imul
push
movs
int
sbb
in
or
(bad)
sub
inc
pop
leave
push
sbb
lock
xchg
aam
mov
xor
push
ror
jle
xchg
xchg
push
call
pextrw
mov
pop
imul
xor
repz
aaa
and
xor
into
inc
or
push
mov
inc
and
push
and
pop
pop
(bad)
cs
jl
jno
push
jp
push
push
in
push
add
xchg
mov
dec
add
xchg
ret
and
stos
(bad)
(bad)
leave
mov
cmps
mov
inc
retf
jle
inc
mov
repnz
pop
and
push
mov
mov
jmp
add
nop
push
push
pop
ja
xchg
ins
sbb
xor
movs
mov
mov
fsub
jnp
push
or
add
mov
inc
fs
sbb
or
push
mov
pop
sbb
inc
iret
push
std
or
sub
(bad)
shl
dec
xchg
mov
(bad)
stc
retf
mov
push
sub
jmp
leave
in
(bad)
fcomp
cmp
mov
cwde
and
and
mov
xchg
push
popaw
repz
outs
inc
and
out
mov
cmp
pop
inc
pop
inc
lea
lock
int3
dec
mov
sbb
sub
mov
cmc
mov
sub
add
sar
in
fisub
add
pop
loope
push
scas
xor
pop
jl
push
mov
mov
mov
sbb
pop
mov
pop
mov
sbb
or
fwait
cmc
imul
in
xchg
or
dec
(bad)
mov
ss
xchg
fnsave
(bad)
sbb
in
xor
popa
jg
push
js
add
cli
sahf
mov
push
jb
pushf
fisub
pusha
gs
jmp
and
jo
dec
fwait
xor
and
fsubr
fs
aad
out
in
lds
mov
loop
sub
call
dec
add
(bad)
jecxz
ret
push
push
fist
ficomp
mov
dec
sbb
fistp
cs
inc
addr16
or
dec
movs
mov
repnz
shl
pop
add
fucompp
repnz
lds
xor
or
stos
push
inc
loopne
mov
dec
mov
in
pop
xchg
les
push
jle
mov
icebp
cmp
push
dec
inc
fadd
add
fidiv
mov
int
dec
jb
out
outs
sbb
sub
inc
sub
pop
rol
sub
call
cdq
dec
ja
mov
aam
jnp
sahf
fmul
out
bound
or
jbe
add
ja
outs
sub
mov
mov
fdiv
add
sub
or
enter
sti
mov
cmp
push
imul
mov
ret
int3
push
fnsave
out
and
push
pop
setae
outs
pusha
shl
xchg
fs
in
shl
lahf
add
jb
inc
xchg
ret
es
(bad)
inc
loopne
mov
scas
sub
(bad)
bound
adc
repnz
fdiv
add
sbb
jl
out
cmps
cmps
jns
and
inc
adc
fwait
push
mov
jmp
clc
dec
cmps
mov
add
push
div
dec
xor
or
add
xchg
repnz
mov
lea
push
fcomp
mov
push
dec
ins
(bad)
(bad)
loope
xchg
aas
aad
shl
test
xor
cmp
xchg
inc
mov
fcomip
enter
(bad)
pop
and
in
cmp
and
test
mov
movs
popf
pop
jns
in
int
sub
jmp
sub
add
int3
mov
lock
xchg
fist
dec
inc
mov
push
mov
mov
xchg
inc
addr16
test
dec
sbb
pop
pop
movs
test
mov
push
(bad)
adc
pop
inc
mov
repnz
out
jp
pop
sub
push
xor
sub
cdq
call
mov
div
add
push
mov
push
clc
pop
aad
movs
mov
sbb
mov
stc
dec
xchg
cs
xor
neg
jge
jno
push
xor
adc
push
pop
or
xchg
adc
fimul
inc
sub
fwait
into
mov
mov
ficomp
jmp
mov
clc
loopne
das
rcr
retf
mov
dec
bound
das
fbld
sar
daa
mov
movaps
dec
ror
ds
nop
aaa
fst
sbb
fidiv
push
mov
aad
inc
xor
inc
cmp
cmp
(bad)
in
or
jnp
or
mov
sub
outs
lods
cmp
add
js
int
jle
stos
jae
xor
in
in
ins
pop
loopne
push
push
adc
cli
xlat
loope
dec
mov
jle
daa
cmp
das
jno
cmp
xchg
cmp
mov
icebp
vmovntps
cli
dec
leave
jnp
mov
xor
scas
mov
mov
scas
cmp
or
sbb
adc
scas
gs
inc
(bad)
loop
sbb
and
jle
jae
mov
cli
call
icebp
out
popf
or
sbb
mov
pop
sbb
loop
mov
sbb
add
push
icebp
push
xor
xchg
clc
or
arpl
sbb
cmp
stos
jecxz
xchg
lahf
adc
call
mov
in
div
aad
sub
aad
ins
(bad)
repz
add
jo
fidiv
ins
inc
adc
and
xchg
(bad)
test
or
and
daa
sub
rcr
adc
xchg
test
cmp
popa
out
arpl
adc
sub
(bad)
cld
dec
xchg
repz
push
(bad)
xlat
mov
out
add
mov
dec
inc
(bad)
aam
fcmovb
push
lods
xchg
out
adc
out
int3
push
loope
dec
into
jno
jl
(bad)
lods
ret
scas
or
in
add
pop
push
push
fadd
cld
xor
ret
pop
push
or
fadd
stc
retf
fiadd
inc
in
cmp
dec
sahf
dec
mov
rol
(bad)
cmp
ins
popf
cld
mov
(bad)
dec
mov
jmp
and
cmps
xor
push
not
xchg
sbb
in
retf
adc
mov
mov
sub
push
or
not
inc
mov
jo
xchg
sbb
add
aam
mov
pop
dec
ds
cs
mov
mov
test
sbb
sub
add
sar
push
sahf
(bad)
mov
pop
jne
gs
pop
pop
leave
mov
add
inc
enter
xor
clc
dec
or
xchg
xchg
enter
sub
jecxz
mov
out
cs
adc
mov
jns
dec
push
fwait
mov
or
aam
xchg
ret
sub
mov
mov
out
imul
dec
and
sbb
dec
cmp
xor
jle
pop
mov
inc
push
repz
aam
push
and
jns
push
xlat
aad
mov
dec
mov
nop
scas
std
in
pop
adc
aad
xchg
mov
test
arpl
jno
dec
cmp
jne
push
xchg
or
and
nop
je
dec
scas
shl
push
pop
outs
or
cs
rol
aam
xchg
jmp
cmp
mov
sub
sbb
sar
mov
inc
cwde
inc
call
bound
outs
mov
and
push
sbb
xor
lds
fisubr
mov
inc
test
retf
clc
test
xlat
xchg
mov
pop
sub
adc
mov
xor
xchg
mov
ss
rcr
mov
mov
mov
or
lds
repz
or
sahf
ins
mov
stos
jl
xchg
fistp
xor
xor
lods
lahf
gs
movs
inc
scas
test
add
scas
out
pop
jo
loop
inc
mov
jg
or
pusha
adc
add
dec
push
lock
(bad)
pop
arpl
shl
jb
imul
fstp
or
inc
inc
and
cdq
cmp
pop
movs
cmp
mov
dec
enter
sub
fldcw
sahf
dec
int3
ret
mov
shl
xchg
sub
shl
std
test
and
cmp
in
fistp
xchg
fdiv
fldcw
mov
inc
fnstenv
jge
pop
sub
in
xor
pop
add
jno
fdiv
outs
jnp
scas
arpl
int3
push
and
jnp
int
mov
call
ror
cmp
jbe
fistp
test
aas
cmp
addr16
pushf
shl
aaa
mov
cmps
ror
cdq
sub
pop
cmp
push
ja
mov
sti
cli
test
push
div
dec
cli
push
xchg
mov
(bad)
jmp
sbb
xchg
xchg
cmp
sahf
xchg
out
addr16
ret
mov
dec
adc
adc
xlat
shl
inc
push
cmp
xlat
ins
add
push
jb
xchg
fsubr
ror
mov
jae
shl
or
xchg
dec
pop
or
and
(bad)
fisub
push
add
cwde
cld
fimul
mov
imul
jle
pop
pop
(bad)
into
pop
push
cmp
xor
jns
cmps
inc
or
imul
mov
sub
mov
jmp
push
iret
dec
and
fwait
mov
add
push
mov
sbb
daa
push
int3
or
dec
outs
or
sub
pop
test
repnz
jecxz
pushf
imul
inc
in
iret
shr
lock
das
in
adc
popf
or
pop
adc
or
adc
xchg
dec
adc
ins
movs
mov
xchg
inc
add
cli
jnp
int
fisubr
push
jmp
mov
pop
icebp
iret
jmp
pusha
xor
(bad)
pushf
and
cmc
ds
out
xchg
in
pop
xchg
jo
push
clc
and
mov
push
rol
shl
stos
inc
sub
dec
fld
adc
xchg
or
outs
retf
arpl
inc
retf
mov
pop
adc
mov
(bad)
xor
scas
inc
push
xor
dec
mov
xchg
test
scas
pop
or
adc
imul
jmp
jle
dec
call
arpl
mov
outs
pop
mov
sti
push
(bad)
fs
and
lods
xor
xor
jmp
or
cmp
cmp
adc
jbe
loop
pop
in
retf
dec
aam
or
cmps
aaa
mov
sbb
sbb
test
je
xchg
dec
mov
add
sti
mov
xlat
dec
shr
das
aas
jmp
mov
out
loop
mov
sub
xchg
adc
mov
sbb
inc
push
mov
jg
dec
mov
call
pop
jns
cmc
loope
lahf
mov
es
xor
inc
cli
clc
cmc
cmp
ins
lahf
xchg
stc
cdq
test
push
push
stc
mov
std
inc
rcl
cmp
mov
inc
loope
int3
push
inc
xchg
out
pop
jo
call
lahf
cli
into
sub
jb
or
sub
out
clc
jmp
mov
cmp
jns
mov
mov
push
gs
push
dec
sbb
xor
xor
retf
(bad)
mov
jecxz
jmp
ror
or
adc
aas
add
loope
xor
fdivr
push
add
xlat
(bad)
(bad)
rcr
push
movs
pushf
adc
sub
mov
xchg
jne
mov
(bad)
mov
daa
fidiv
jno
jecxz
push
inc
pop
ins
and
sub
sar
mov
mov
mov
repz
out
and
push
xchg
pop
hlt
fcmovne
adc
cld
jge
scas
je
out
pop
xor
mov
movs
jg
adc
outs
mov
add
adc
jne
adc
jmp
xchg
pusha
pop
and
push
add
dec
in
pop
jnp
movs
jmp
adc
retf
call
sbb
popf
add
in
inc
pop
pop
xchg
push
fimul
jg
mov
aas
in
cmp
in
xchg
es
mov
shl
mov
test
mov
cdq
cld
ficomp
aaa
jne
jge
mov
jns
xchg
add
mov
xor
ins
sub
div
xchg
mov
add
imul
mov
cdq
push
mov
mov
leave
sbb
retf
adc
jae
mov
dec
inc
js
(bad)
popf
and
jmp
rol
hlt
dec
jo
ins
pushf
cmp
mov
xchg
mov
fwait
dec
dec
leave
cmp
int3
push
push
push
mov
(bad)
push
fwait
pop
pop
rol
ins
cdq
inc
mov
fbld
frstor
nop
cmps
call
push
xor
nop
pop
cmp
sbb
retf
push
sahf
sub
das
js
mov
jp
jns
loopne
inc
jecxz
rol
(bad)
cmp
lods
das
aas
imul
sahf
je
out
cmp
mov
imul
js
xchg
jae
cwde
aam
xor
add
adc
jmp
das
stos
sbb
test
and
jbe
sbb
sub
push
adc
icebp
in
inc
clc
mov
mov
(bad)
mov
jle
setnp
mov
sbb
add
cmp
out
popf
mov
ficom
popf
ins
int
or
cs
xlat
or
ror
popf
jne
cmp
lods
repnz
push
jne
xor
xor
pop
xor
(bad)
(bad)
jmp
jecxz
je
or
mov
pop
movs
mov
jae
inc
mul
inc
or
inc
adc
fsubr
stos
xchg
pop
inc
inc
jle
jne
jmp
cli
xchg
outs
pop
xor
aas
enter
adc
or
in
mov
test
gs
xlat
jg
mov
leave
sub
sar
sub
and
fwait
xchg
xchg
iret
test
lock
pop
add
rcr
pop
enter
mov
fwait
ret
fs
adc
pop
(bad)
xchg
into
xchg
xlat
imul
test
push
sahf
(bad)
dec
ja
mov
mov
shl
icebp
add
push
xor
push
daa
inc
inc
jg
sub
xor
mov
call
(bad)
mov
mov
push
adc
sti
aad
stc
mov
dec
pop
sti
adc
aad
push
mov
adc
mov
mov
lock
in
std
lods
xor
lahf
mov
inc
pop
outs
inc
cmps
push
fsub
add
mov
xchg
cmp
push
dec
ficom
arpl
mov
outs
or
jne
js
ss
or
ror
retf
xor
loop
jge
in
arpl
inc
fnstsw
cmp
das
inc
xchg
enter
or
leave
mov
aam
mov
xor
cmc
xchg
ss
jp
jae
in
xchg
and
inc
sbb
cmp
inc
ret
pop
scas
mov
fnstcw
(bad)
gs
and
cmp
test
xchg
or
adc
push
not
cmp
mov
lods
mov
imul
addr16
sub
or
in
scas
push
inc
mov
mov
jno
add
leave
stc
xor
xor
shl
in
mov
pusha
ss
lahf
jmp
add
ins
mov
sbb
stos
aaa
xchg
cmp
arpl
ror
inc
pusha
xchg
lods
dec
mov
jbe
movs
in
xor
add
inc
jg
xchg
push
sbb
stos
mov
dec
mov
fsubp
cmc
or
out
push
sbb
std
cs
movs
div
fst
or
adc
inc
cmp
es
and
dec
inc
jae
add
lods
pop
ds
ror
xchg
pop
int
data16
(bad)
mov
rcr
out
call
and
add
aad
enter
mov
push
inc
push
or
adc
pop
cmps
icebp
cmp
jns
neg
push
bound
dec
movs
fsub
out
(bad)
ins
xchg
inc
adc
inc
sbb
push
leave
jnp
mov
cs
rol
jbe
add
push
gs
cmp
int
int
dec
cs
ret
popa
jg
scas
sbb
out
mov
mov
movs
jge
push
xchg
out
bound
sub
cmp
iret
cmp
test
add
xlat
cmc
inc
and
push
cmp
mov
cmps
das
cli
pop
pop
out
scas
(bad)
jae
pop
add
lds
shl
add
mov
add
or
mov
dec
and
cmp
call
xchg
mov
stos
and
shl
into
jge
add
cmp
nop
ss
hlt
stc
stos
pop
fs
outs
jbe
xchg
push
adc
(bad)
fist
cmps
cmps
inc
jmp
sbb
push
push
lods
xchg
mov
add
pop
fmul
push
fucom
adc
into
gs
cs
(bad)
fdiv
jnp
int3
jo
jmp
or
fistp
mov
mov
jle
mov
setns
retf
cmp
(bad)
mov
xchg
aam
push
or
dec
push
mov
pop
adc
das
push
xchg
sub
mov
jmp
sub
jmp
call
hlt
dec
and
bound
movs
lahf
cmps
das
dec
push
dec
rcl
push
or
jle
mov
inc
xor
fsubr
in
add
cwde
popf
pusha
mov
xchg
or
dec
in
push
mov
xor
add
mov
sub
jb
jmp
ins
fsub
sub
(bad)
dec
fstp
rcl
int3
push
(bad)
or
inc
mov
and
test
rcl
inc
sub
cmp
(bad)
jle
outs
sbb
fidivr
mov
icebp
stos
stos
stos
pop
push
xlat
pop
push
rol
jo
popa
loop
shl
repz
mov
ret
xor
mov
adc
push
jp
sub
mov
mov
(bad)
lea
test
push
out
inc
das
(bad)
leave
xchg
pop
sub
ss
mov
jnp
dec
xor
add
push
(bad)
cmps
jge
les
jae
into
push
fbld
pop
xor
pop
out
outs
pop
arpl
pop
mov
test
mov
pop
xor
pop
mov
in
int
pusha
in
popf
or
aaa
xchg
inc
mov
mov
lods
mov
arpl
nop
ficomp
xor
enter
pop
cmp
and
pop
mov
fs
xor
out
dec
dec
test
push
push
(bad)
in
dec
and
inc
jle
daa
pop
iret
xor
fisub
pushf
and
cli
cli
icebp
inc
mov
dec
(bad)
adc
inc
lods
mov
mov
dec
sub
fidiv
mov
or
inc
dec
adc
cdq
fist
jno
mov
mov
mov
mov
lods
adc
adc
int
sbb
adc
ret
mov
mov
(bad)
ss
pop
lods
ret
xchg
movs
mov
push
outs
dec
push
add
mov
in
push
and
retf
into
jbe
xor
pusha
rcl
sub
mov
sbb
call
inc
sub
jle
popf
sbb
hlt
movs
or
push
push
and
mov
shr
push
lock
xor
pop
jne
jle
in
push
loop
sub
or
es
add
dec
jb
out
dec
dec
sbb
dec
xor
pop
int
jns
inc
cmc
sahf
inc
mov
iret
aad
push
cmp
in
inc
cmp
scas
or
jge
mov
push
cmps
xor
add
ds
bound
mov
dec
dec
adc
dec
dec
imul
sub
mov
out
or
ja
dec
fst
push
mov
outs
or
pop
or
fimul
or
mov
fld
or
sbb
mov
popf
sahf
cmc
xchg
iret
mov
es
jl
mov
sub
out
fs
xchg
movs
mov
and
call
test
aas
std
push
sub
ins
cli
xchg
push
mov
push
rcl
jno
sahf
push
dec
cmp
(bad)
ss
jle
(bad)
fs
lahf
xchg
mov
inc
jnp
dec
or
outs
xchg
pop
inc
cmp
ss
jg
mov
aad
call
mov
or
or
dec
mov
mov
jmp
cmp
xor
aaa
jne
call
xchg
int3
and
add
ret
sub
mov
cmp
inc
jg
pop
cmp
mov
mov
mov
adc
mov
(bad)
cmp
mov
loopne
loopne
cmp
push
icebp
mov
dec
cld
test
cmp
jp
add
xchg
cs
pusha
mov
or
std
sub
rcl
dec
or
retf
jl
stos
pushf
daa
dec
add
call
cmp
fbstp
jne
push
(bad)
xor
(bad)
jnp
cmp
or
popf
clc
or
sbb
jnp
pop
inc
out
xchg
dec
xor
adc
pop
cli
mov
cmps
into
pop
je
mov
pop
std
(bad)
icebp
dec
cmp
sbb
ret
add
cmp
fld
aad
in
out
and
loope
movs
ret
adc
pop
jo
add
jne
jnp
inc
or
sbb
jno
jmp
cmps
sbb
mov
jne
mov
bound
sar
cmp
fwait
inc
sbb
stos
call
scas
xor
je
xor
sbb
nop
mov
(bad)
mov
loope
add
stc
call
jae
add
movs
cmp
cmp
add
jns
jno
aad
popa
pop
sub
cwde
loopne
test
add
(bad)
pop
out
xchg
pop
shr
cmc
jmp
mov
(bad)
movs
mov
xor
push
mov
sbb
adc
pusha
push
addr16
or
xor
push
rcl
cld
push
arpl
dec
add
sar
imul
cmp
stc
add
jg
bound
or
daa
cmp
cli
out
inc
mov
mov
nop
jns
nop
(bad)
in
call
sub
fistp
scas
dec
add
sti
out
lds
addr16
mov
ss
int
sbb
push
cmp
or
cdq
xchg
sub
mov
inc
jl
je
in
dec
adc
icebp
shl
icebp
push
mov
xlat
out
in
fcmovbe
inc
xor
sahf
sahf
jo
mov
jns
hlt
fs
addr16
in
cmps
jle
inc
or
mov
(bad)
imul
imul
add
jl
mov
in
lock
enter
fbstp
push
retf
jne
mov
test
sub
retf
ror
pop
cmp
push
nop
mov
loopne
xlat
lea
movs
jne
dec
lea
or
mov
(bad)
ret
mov
jmp
mov
es
mov
ins
push
fist
ins
inc
lds
arpl
sbb
jne
popa
xlat
je
xchg
pop
sub
inc
sub
adc
(bad)
or
mov
out
push
xchg
push
and
inc
(bad)
in
inc
test
xchg
data16
lea
fs
push
mov
fst
sahf
js
inc
mov
imul
cli
outs
and
push
inc
fwait
or
divps
dec
ja
push
ss
ficomp
cdq
pop
adc
outs
pop
sti
les
fldcw
arpl
aad
mov
cwde
ror
mov
aaa
push
add
add
popa
pop
xchg
ret
popa
dec
(bad)
mov
enter
test
pop
sub
jae
pop
fidiv
xchg
sub
iret
shl
not
xchg
sar
jae
mov
enter
cmp
popf
mov
gs
loope
fsub
ss
retfw
dec
test
in
clc
lock
ficom
js
scas
addr16
and
(bad)
sti
push
aad
ret
lods
push
mov
fcomi
scas
ins
pop
and
add
cmp
jmp
sbb
dec
stos
jmp
stos
aam
popa
mov
xor
xchg
sub
int
(bad)
ins
inc
jle
test
dec
mov
jbe
sahf
or
fwait
cmp
cwde
inc
xchg
mov
pop
xor
push
test
jge
cmp
(bad)
adc
loopne
fimul
rcr
adc
push
in
jg
add
cmp
jge
iret
(bad)
out
mov
or
outs
js
nop
out
stos
add
mov
das
add
jns
push
dec
mov
jae
add
fxch
add
add
rcl
daa
pop
lds
inc
push
mov
mov
pop
ss
sbb
jnp
add
xchg
pop
int
es
pop
xor
pop
xchg
jb
xchg
retf
mov
xor
dec
mov
xchg
(bad)
push
push
mov
sub
int3
cli
sub
ins
fdivr
sub
mov
data16
mov
call
pusha
ins
les
test
dec
(bad)
mov
in
jp
or
xchg
push
mov
in
cmp
push
jmp
cmp
das
repz
push
loope
xchg
sbb
scas
lods
fmul
lock
imul
sbb
into
sbb
dec
xor
add
cmp
(bad)
(bad)
sbb
fbld
cmp
mov
lea
and
(bad)
(bad)
in
xchg
(bad)
popf
mov
jmp
dec
sbb
add
pusha
mov
push
sbb
adc
add
pop
int3
push
add
(bad)
pop
sub
add
cmp
cmps
xchg
sub
jae
(bad)
cli
into
(bad)
sub
push
add
in
mov
cmp
jmp
pop
push
movs
mov
(bad)
or
call
pop
push
cwde
cmps
out
and
push
pop
not
push
dec
not
sahf
outs
outs
mov
les
lods
loope
(bad)
cli
cmp
jb
push
pushf
push
jmp
mov
adc
jnp
mov
lods
jmp
sti
rcl
stos
jno
push
loop
ss
push
aaa
xor
jb
aam
sbb
mov
gs
adc
shl
ja
std
inc
push
push
add
xor
out
jl
(bad)
mov
mov
clc
or
popf
pop
adc
jbe
fldenv
adc
push
xchg
push
mov
jg
pop
aaa
cmc
pop
fsubr
(bad)
and
repz
jnp
adc
dec
sar
cmp
push
cmps
frstor
mov
aam
mov
int
ret
xor
rcl
out
rol
mov
push
sub
scas
mov
arpl
inc
mov
leave
jb
inc
push
fs
pushf
cs
call
sub
movs
fnsetpm(287
jecxz
daa
mov
outs
and
arpl
or
mov
in
inc
call
test
add
sub
pop
xor
adc
lods
hlt
xchg
jae
je
cmps
ret
or
mov
pop
outs
fs
stc
mov
jecxz
inc
ja
push
ja
push
scas
or
cmp
les
data16
xchg
in
pop
retf
adc
loope
mov
inc
inc
(bad)
jmp
movs
push
shl
jg
mov
test
stos
in
pop
in
dec
push
adc
add
sbb
sbb
mov
in
jbe
repnz
rcr
(bad)
xchg
and
fcomi
fld
aad
imul
pop
test
inc
xchg
scas
cmp
out
ins
int
xor
fldenv
movzx
mov
nop
sbb
in
mov
xchg
test
mov
ror
dec
std
cmp
adc
sbb
add
mov
stc
rol
out
lods
popf
pop
fistp
fcmovnu
push
in
repz
dec
sub
je
cmc
sbb
cwde
mov
sbb
xchg
sahf
push
sar
push
outs
inc
lahf
pop
jecxz
mov
adc
jnp
add
sti
daa
xchg
push
out
pop
das
shl
mov
dec
fucom
mov
mov
pop
arpl
std
push
pop
cmp
xchg
add
in
dec
cs
lahf
icebp
inc
push
pop
cmp
sbb
dec
mov
les
pop
dec
ror
aad
mov
sbb
mov
mov
mov
out
ror
dec
dec
rcl
clc
sahf
nop
or
stos
(bad)
ss
lods
ins
js
and
pop
mov
loope
cwde
mov
xor
push
inc
ja
iret
cwde
ins
daa
sti
jno
jne
daa
jne
pop
imul
or
fstp
in
push
jno
(bad)
sbb
xor
mov
leave
cdq
nop
mov
push
dec
bnd
(bad)
jne
sub
mov
ds
cmp
gs
mov
adc
inc
mov
test
(bad)
gs
pop
sti
inc
test
adc
push
test
(bad)
jns
xor
arpl
pop
dec
hlt
lods
movs
cdq
jl
das
sbb
adc
adc
sahf
movs
and
mov
and
sub
lds
adc
test
pop
std
sbb
xlat
fcmovnu
xchg
or
mov
sub
jb
cdq
inc
mov
scas
arpl
xchg
or
jg
sbb
or
cmp
jp
push
jbe
pop
sbb
aaa
cmovle
dec
imul
inc
mov
les
movs
cmps
ds
push
movs
std
xor
rcl
ret
inc
mov
retf
cdq
inc
or
add
dec
scas
xor
iret
addr16
jl
pop
xchg
cmp
jecxz
inc
shl
fstp
jmp
sbb
fadd
fdivr
or
dec
call
aad
dec
push
xor
ins
arpl
cmp
mov
mov
cdq
cs
cmc
jle
mov
pop
fisubr
pop
jno
xchg
out
retf
loopne
jg
out
adc
call
dec
jle
mov
cld
ins
lea
test
fwait
push
scas
xlat
inc
dec
push
int
mov
sub
mov
out
or
addr16
pusha
add
fist
jo
popf
xchg
ins
icebp
leave
sub
in
pop
sbb
push
or
out
fldenv
(bad)
leave
mov
mov
jl
idiv
call
test
and
(bad)
adc
ins
dec
mov
stos
jb
repnz
ror
int
call
in
out
stc
clc
adc
outs
int3
jae
or
out
xchg
jg
or
fisttp
or
sub
cli
enter
popa
pop
mov
mov
jg
xchg
sub
or
xchg
aas
rcr
mov
ret
pop
inc
popa
pop
xor
movs
adc
dec
(bad)
add
dec
aas
test
lahf
inc
mov
rcl
push
cmp
ret
movs
pop
or
les
mov
pop
popa
sub
mov
mov
jl
pop
push
mov
shl
jb
mov
jl
pop
mov
in
or
ja
jne
pop
rcr
jmp
add
sbb
imul
push
cs
mov
pop
or
fld
test
dec
loopne
or
pushf
pop
aaa
or
div
sbb
cmps
in
sti
mov
(bad)
ret
inc
add
xor
push
sub
xchg
pop
cmp
retf
or
lods
mov
clc
aam
mov
nop
in
fisttp
jno
adc
ins
inc
mov
jg
add
adc
(bad)
or
dec
and
adc
xor
ss
xchg
sbb
dec
ins
es
xchg
xor
mov
sub
cmp
clc
cwde
mov
mov
sbb
into
loope
mov
daa
add
inc
repnz
retf
dec
sti
fimul
cli
call
cmp
mov
push
stos
bound
arpl
inc
out
mov
inc
mov
pop
adc
sub
jb
xor
mov
aaa
pop
mov
mov
lea
movs
cmp
test
cmps
xchg
call
cmp
test
sub
imul
inc
adc
inc
sub
push
(bad)
shl
call
repz
fcmovbe
adc
lahf
xchg
dec
xor
mov
in
mov
xor
es
jb
pop
pushf
icebp
mov
mov
mov
mov
in
mov
xchg
jg
int3
inc
mov
cmp
jbe
iret
add
ret
adc
xchg
stos
in
push
adc
ficom
jp
sbb
sub
push
xchg
xchg
dec
gs
jmp
inc
xchg
inc
bound
mov
pusha
jle
loopne
inc
aaa
sbb
enter
push
dec
push
leave
or
xchg
adc
pop
adc
pop
(bad)
push
xchg
mov
into
xchg
loopne
inc
hlt
ret
repnz
aas
into
mov
pop
in
inc
fnstsw
jge
push
stc
mov
fidiv
out
xor
inc
dec
xor
sbb
(bad)
dec
dec
and
mov
ficomp
mov
and
push
scas
xor
push
xchg
(bad)
push
inc
test
(bad)
mov
sahf
adc
xchg
loope
or
jns
ss
int
ret
outs
mov
cs
(bad)
aam
or
xor
and
hlt
mov
cmp
les
dec
jmp
cld
mov
add
mov
sar
pop
lea
loop
loopne
test
(bad)
pop
dec
inc
adc
cmp
and
mov
pop
into
(bad)
adc
dec
mov
nop
add
iret
dec
mov
mov
fs
push
mov
and
mov
inc
sub
test
call
mov
pop
cmps
shl
out
mov
mov
in
jg
add
or
mov
pop
xor
mov
and
popf
pop
ret
adc
(bad)
jge
or
jge
or
daa
push
mov
(bad)
ins
ret
add
pop
call
leave
inc
adc
dec
mov
(bad)
sub
shl
rcr
jmp
mov
jg
fisttp
movs
sbb
popa
pop
mov
cmp
retf
mov
jg
or
adc
add
add
(bad)
gs
je
mov
call
inc
int
mov
push
out
adc
outs
lea
pusha
xchg
xor
adc
xor
test
movs
inc
retf
mov
add
stos
xchg
sti
ins
rcr
(bad)
aad
leave
das
or
xchg
jg
inc
adc
xor
(bad)
sub
inc
out
inc
push
loop
push
cmp
std
ds
sbb
push
out
test
inc
sub
in
add
lods
pop
push
jo
out
and
stos
nop
ins
cdq
fs
or
int
pop
jg
push
shl
in
fidiv
pop
lds
or
sub
pop
dec
pop
cdq
xchg
pop
popa
daa
push
sbb
push
into
aaa
inc
xchg
adc
push
mov
int3
xor
jge
(bad)
mov
cmp
cwde
cli
add
push
ss
and
push
xchg
enter
mov
mov
pop
sub
mov
add
push
repnz
push
mov
mov
mov
inc
stc
push
adc
add
in
aas
leave
sahf
pop
cmp
jne
mov
push
mov
inc
sbb
inc
add
(bad)
inc
fdivr
xor
push
mov
pop
mov
mov
jge
cld
or
jp
mov
jae
out
mov
xchg
xor
pop
je
dec
sub
fmul
jp
cld
or
cmp
cs
bound
(bad)
xchg
inc
xor
ds
mov
jg
or
shl
enter
and
dec
call
adc
inc
jecxz
sub
outs
lods
cwde
lahf
stos
add
pop
aad
add
aam
mov
xor
sbb
mul
arpl
imul
fmul
fst
inc
ja
sbb
jne
pop
inc
aas
xor
ja
stos
inc
and
or
hlt
or
in
xor
adc
call
jo
fwait
jmp
in
dec
mov
imul
dec
(bad)
pop
call
nop
mov
adc
push
dec
sub
loop
fsub
sti
add
push
add
scas
hlt
out
ficom
cmp
push
clc
push
iret
aas
mov
dec
fild
mov
pop
shr
sbb
das
and
cmp
out
push
lds
ins
mov
fadd
inc
rol
xor
jp
push
daa
outs
jmp
imul
ror
xchg
inc
stos
repz
sar
vhaddpd
stos
xlat
pop
in
xchg
sub
inc
in
sub
fidiv
enter
daa
lea
lock
xlat
cmp
cmps
popa
popf
stos
sti
cmp
or
jbe
push
xchg
jp
ret
pop
inc
into
jl
clc
sub
sbb
fldenv
pop
cmp
test
mov
jmp
push
in
lahf
mov
ds
cmp
adc
mov
inc
mov
inc
cmp
sub
(bad)
call
call
pop
cmp
mov
push
cmps
(bad)
jne
fnstsw
sbb
inc
fistp
out
mov
mov
jl
jmp
(bad)
test
sahf
ror
movs
mov
sub
das
cmps
push
cmps
loope
lahf
push
fisubr
sti
or
rol
popa
loop
loopne
loop
ror
dec
addr16
(bad)
and
xchg
frstor
fsubr
aam
push
cmp
sbb
inc
xor
lods
mov
mov
mov
add
addr16
dec
repz
test
push
dec
aaa
sub
scas
jns
into
outs
dec
ins
enter
push
pop
xchg
jbe
push
sub
shl
xchg
jne
repz
popa
cmc
and
sub
loopne
xchg
push
dec
pushf
sti
mov
mov
and
cmps
cmc
jne
test
lods
neg
popf
pop
adc
mov
out
enter
(bad)
jp
(bad)
lea
pop
jecxz
push
cmp
sahf
(bad)
rep
xor
add
xlat
jmp
leave
addr16
arpl
jmp
cld
loope
ja
aas
push
ror
mov
stos
leave
add
mov
aas
or
movs
dec
jl
arpl
inc
enter
pop
daa
shl
enter
push
fwait
ror
or
cmp
rcl
clc
inc
aam
push
jl
setne
(bad)
(bad)
cs
mov
test
xlat
cs
cwde
fmul
xchg
(bad)
pop
and
retf
xor
bound
mov
mov
jae
dec
mov
sub
push
xchg
ror
retf
popf
mov
fs
repnz
push
bound
fld
cmp
test
arpl
popf
and
outs
enter
jnp
ds
js
loope
push
add
scas
cmp
adc
push
jno
sbb
xchg
mov
movs
stos
mov
int3
sbb
pop
push
nop
add
popa
(bad)
xor
fstp
bound
ret
movs
mov
lods
push
cmp
jnp
lds
int
and
repnz
xor
jp
(bad)
inc
adc
movs
pop
loop
movs
jecxz
mov
sbb
adc
hlt
add
dec
push
push
or
jb
xor
xchg
addr16
push
and
fsubr
push
sub
sbb
popa
scas
push
call
fist
mov
xor
enter
dec
xor
xlat
xchg
int
fmul
push
enter
jmp
out
fcmovu
mov
jecxz
add
in
imul
cmp
(bad)
leave
jnp
fdivr
xor
test
popa
hlt
jmp
xchg
cld
push
or
nop
call
ja
jl
lods
stos
clc
bound
in
jmp
and
mov
jmp
jae
xor
pop
sbb
jl
sahf
push
dec
add
xchg
movs
pop
sbb
mov
dec
mov
sbb
cld
xor
cwde
jg
add
imul
mov
ja
pop
dec
pop
clc
push
xor
(bad)
aaa
or
and
sahf
mov
jmp
ins
push
mov
(bad)
out
and
xor
or
or
sbb
pop
das
lea
xchg
pop
loope
push
into
arpl
mov
mov
push
xchg
test
inc
push
scas
out
dec
test
cwde
xchg
jne
bound
or
into
cmp
xchg
out
int3
mov
popf
pop
adc
jae
xor
mov
mov
pop
aam
shr
inc
dec
test
int
(bad)
fmul
les
ret
lods
clc
xchg
jno
and
jmp
icebp
and
mov
dec
and
xchg
inc
bound
loope
add
jmp
loope
clc
fistp
push
mov
aas
xchg
sub
mov
imul
mov
add
sbb
inc
push
or
mov
cmps
push
and
aad
mov
stos
pop
out
inc
xchg
push
inc
sub
(bad)
add
xchg
int3
call
call
pusha
outs
add
jns
mov
(bad)
xor
ret
int
adc
push
sbb
sbb
(bad)
pop
(bad)
jnp
ins
dec
jno
adc
sbb
retf
in
inc
and
sbb
xchg
xchg
jne
and
loopne
imul
pop
clc
ficomp
push
adc
inc
sti
in
rcl
repz
fwait
mov
or
mov
add
int
in
xchg
mov
mov
(bad)
mov
add
es
jecxz
mov
push
xchg
dec
xchg
std
call
mov
ret
iret
ja
jmp
xor
push
stos
jmp
or
pop
sbb
inc
mov
mov
sbb
adc
not
leave
jae
sbb
gs
push
dec
rol
xchg
jecxz
dec
dec
push
lods
dec
sbb
cli
test
inc
push
pslld
xor
lds
fimul
fbld
add
fiadd
pop
shl
test
repz
inc
popa
push
mov
jbe
adc
in
pop
inc
xchg
test
and
and
xor
sub
add
adc
xchg
out
sub
(bad)
pop
inc
test
mov
jae
xchg
xor
dec
add
jae
(bad)
fbstp
fs
cwde
or
js
in
jle
repz
push
in
cs
add
fs
mov
fstp
fs
fbld
out
or
mov
and
inc
mov
iret
mov
jl
in
or
cmp
jae
jmp
rcl
in
inc
or
mov
std
push
scas
aam
cld
mov
mov
dec
int
adc
test
mov
sub
inc
inc
cmp
in
jb
sub
push
mov
adc
pushf
pop
ins
pushf
stmxcsr
cwde
addr16
add
fcmovb
sbb
pop
add
retf
fstp
inc
idiv
popa
in
les
xor
test
pop
(bad)
xchg
cmc
jnp
jb
jg
push
push
jbe
pop
pop
jnp
xlat
lea
jns
aad
push
xor
push
or
push
pop
std
inc
cmps
pop
mov
mov
ficom
cmp
(bad)
mov
out
inc
fadd
jmp
mov
fcmovne
scas
leave
pop
push
push
and
or
push
inc
cmp
xchg
xor
fisub
inc
pop
stos
adc
xchg
in
les
sub
push
popf
test
aad
das
les
fisubr
mov
mov
mov
mov
shl
push
sahf
dec
setg
add
scas
test
mov
xchg
outs
dec
xor
(bad)
mov
mov
inc
cld
inc
aas
adc
sahf
add
push
rol
jmp
int
or
jne
push
sbb
into
pushf
adc
xchg
and
test
jg
out
or
sti
push
les
mov
lea
mov
lods
movs
ins
push
dec
mov
dec
dec
inc
cmp
jo
or
push
stos
in
jb
and
xor
sbb
mov
jmp
push
int3
jo
ret
fstp
add
retf
jbe
add
inc
push
cmp
sub
movs
lahf
shr
rcr
(bad)
and
jge
sti
ja
adc
sbb
and
push
or
pop
scas
fidivr
repz
(bad)
inc
add
loopne
adc
pusha
stos
inc
and
pop
xlat
adc
adc
aaa
fild
mov
fcom
call
xchg
out
aam
xchg
xchg
lods
adc
add
stos
or
sub
mov
pop
adc
pop
mov
data16
iret
pop
mov
outs
sbb
lods
sub
xor
stos
or
mov
cmp
in
inc
sbb
dec
sti
(bad)
fs
and
imul
jle
movs
xchg
into
fidiv
add
cmp
das
push
out
jge
jne
imul
in
aaa
or
dec
cmp
mov
retf
outs
iret
sbb
mov
(bad)
repnz
jmp
or
inc
nop
cmps
retf
ins
outs
cmp
cdq
dec
adc
ret
cmc
push
outs
xchg
cld
xor
xchg
sub
push
pop
dec
cmp
mov
push
test
xchg
xor
xor
cmp
ins
and
mov
or
xchg
push
dec
mov
dec
mov
mov
gs
sub
cmp
fs
ret
daa
adc
(bad)
mov
push
jae
loop
js
xor
mov
xchg
pop
aam
push
sub
out
data16
mov
mov
inc
rol
push
pop
jmp
out
push
push
stos
call
sub
ret
pusha
outs
jmp
xlat
mov
pop
pop
int3
mov
sahf
xchg
mov
pusha
push
fcmovne
sbb
out
loop
gs
xchg
mov
or
xchg
hlt
aad
(bad)
loopne
jmp
push
out
xchg
lods
dec
jmp
sub
dec
sub
imul
inc
and
push
(bad)
iret
pusha
and
dec
fcmovbe
add
pop
inc
xchg
ret
jb
mov
xor
sbb
in
and
jg
mov
ud0
in
push
adc
adc
or
repnz
stos
add
adc
repnz
sbb
push
ja
mov
xor
pop
cmp
mov
data16
pop
stc
stos
call
aam
cdq
loope
imul
arpl
or
jnp
mov
xchg
xor
sti
movs
ret
push
mov
mov
inc
mov
pop
sbb
repnz
outs
add
xchg
sbb
cwde
test
adc
jne
mov
or
retf
jae
add
mov
nop
imul
inc
dec
push
scas
pop
mov
sub
and
jp
adc
pop
div
xchg
mov
lods
mov
mov
and
call
add
pop
xor
add
or
add
not
test
(bad)
out
es
xchg
sbb
(bad)
sbb
test
xor
cmc
pop
pop
cmc
adc
xchg
in
call
out
icebp
sti
ss
ret
or
les
jo
mov
or
or
add
leave
mov
cwde
jne
mov
pop
shl
xor
add
mov
mov
sbb
jp
aad
xor
xchg
fadd
and
add
sbb
xchg
out
loope
cmp
sub
inc
rcr
xor
les
loopne
into
pushf
fiadd
mov
int
pop
push
jns
push
movs
outs
mov
(bad)
xor
addr16
mov
or
add
push
(bad)
cmp
mov
pop
cld
bound
ds
bnd
jb
or
rcr
cli
or
gs
stos
ret
jg
stos
cmps
mov
pop
mov
xchg
push
xor
(bad)
popa
movs
mov
in
jl
lods
dec
sbb
out
and
sbb
shr
fs
sti
fsub
sub
jl
(bad)
cmp
int3
xchg
mov
imul
into
dec
movs
ja
daa
(bad)
cmp
leave
fsubp
imul
fcom
push
hlt
sbb
pop
jle
mov
mov
inc
shr
sbb
rcl
inc
push
outs
xchg
aaa
jnp
dec
int3
sbb
adc
or
cdq
dec
ret
pop
pop
(bad)
inc
aas
(bad)
shr
leave
lock
pusha
jne
ret
popa
mov
push
mov
jle
ds
inc
adc
cli
cmp
adc
pusha
shl
or
dec
and
jg
dec
push
in
jnp
mov
aas
jne
js
or
mov
pop
adc
lahf
dec
aad
adc
or
pop
jnp
(bad)
jnp
fadd
xor
cs
add
and
jle
dec
mov
inc
push
cmp
lods
push
cmp
push
test
pop
scas
jo
mov
and
mov
xor
or
xlat
mov
aam
stos
or
dec
jns
fcom
in
call
adc
mov
mov
push
or
xor
xchg
pop
hlt
je
xchg
sbb
push
mov
inc
cmp
loopne
pop
pop
xor
adc
sub
mov
jae
dec
and
sub
mov
into
dec
lods
xor
lea
jmp
daa
mov
les
pushf
mov
in
jbe
sti
mov
mov
call
inc
in
sbb
in
sub
jle
sub
cld
xchg
push
push
jno
stc
cs
scas
aam
fild
ins
out
push
retf
das
cmp
enter
or
out
pop
fs
in
push
cmp
push
out
mov
xchg
adc
test
xor
mov
xor
mov
and
mov
push
cmp
imul
add
mov
enter
cmp
(bad)
xchg
xor
sbb
rcl
icebp
pop
outs
and
dec
loope
or
jge
repz
xchg
in
pop
xchg
inc
rcr
add
fisub
in
out
inc
dec
xlat
mov
fcom
clc
pop
push
test
xor
cld
stos
stos
inc
and
and
rcl
xor
sbb
mov
dec
adc
mov
dec
out
push
mov
pop
push
daa
es
das
repnz
xor
in
(bad)
rcl
xchg
inc
sbb
retf
fsub
push
je
add
lods
push
xor
stos
mov
addr16
xchg
cmp
push
push
div
adc
xchg
cdq
lods
xchg
arpl
inc
mov
pushf
das
inc
imul
inc
ret
out
pop
(bad)
repz
pop
outs
daa
dec
arpl
xor
xchg
(bad)
mov
xor
push
int
shl
pop
inc
xchg
out
(bad)
sub
cdq
cmovae
add
pop
push
xlat
test
rcl
retf
jmp
cmps
jmp
popa
or
ret
inc
add
xchg
arpl
mov
and
jae
scas
mov
mov
mov
imul
xor
lds
test
xor
inc
mov
cs
sbb
and
fldenv
cmc
push
outs
shl
fisttp
mov
scas
lahf
mov
test
xchg
mov
dec
in
and
in
jbe
jbe
loope
adc
xchg
lods
in
fcom
dec
lods
and
call
sbb
stos
mov
adc
and
fmul
adc
movs
(bad)
popa
(bad)
sub
pop
mov
xchg
mov
sar
xor
div
rep
frstor
xor
xor
jge
mov
sbb
jl
push
bound
jmp
ss
(bad)
loop
jl
jg
cmc
popa
in
in
and
aas
jno
sbb
jmp
lods
inc
cmp
dec
add
into
mov
(bad)
pop
int3
xor
(bad)
lock
and
std
lods
sub
(bad)
clc
xor
pop
adc
push
fiadd
fstp
fcmovu
shl
fxam
jb
(bad)
leave
stos
cwde
int
mov
scas
inc
or
scas
pusha
jo
xor
pushf
ins
ss
jp
xor
push
sbb
in
in
and
fwait
push
jne
and
pop
ret
mov
adc
mov
int
scas
mov
cmp
inc
mov
in
in
mov
inc
daa
xor
out
adc
sub
fisub
jl
mov
mov
mov
and
and
cmps
dec
data16
pop
pop
or
retf
sbb
sbb
push
inc
jns
test
js
call
adc
es
push
mov
jmp
aam
(bad)
sub
cmps
lea
pop
or
(bad)
jb
lds
mov
mov
inc
push
inc
in
mov
or
jl
sub
add
adc
xchg
outs
or
stc
daa
push
inc
jo
mov
inc
shr
pop
loope
int3
bound
cmp
adc
sar
mov
(bad)
dec
mov
xchg
jmp
lock
mov
jno
lahf
js
in
scas
sbb
push
xchg
outs
loop
aad
xchg
scas
mov
ja
jmp
xchg
inc
xchg
addr16
ror
jns
inc
cld
ret
or
xor
bound
and
sbb
jmp
sub
dec
call
daa
dec
lahf
bnd
jecxz
test
xlat
push
mov
fmul
mov
inc
cmp
adc
les
(bad)
or
mov
sub
mov
add
loope
lock
cmc
mov
in
add
pop
jg
push
scas
pop
jns
adc
pushf
fnsave
push
aaa
je
pop
push
loopne
sar
popf
cmp
jbe
inc
adc
xor
out
dec
les
nop
mul
retf
ret
add
add
test
aam
pop
cmp
test
xor
mov
cld
add
popa
fld
jmp
lock
cwde
test
xchg
(bad)
(bad)
mov
xchg
mov
dec
xor
iret
cmp
xchg
xor
(bad)
test
push
inc
dec
xchg
push
push
dec
daa
push
ins
cmp
lahf
inc
in
clc
mov
dec
inc
inc
xor
sub
mov
mov
mov
cmp
call
or
jmp
ret
inc
(bad)
lock
lds
jle
hlt
icebp
repz
dec
adc
xchg
ja
and
js
jae
adc
mov
jg
inc
cwde
jecxz
ficomp
loopne
jmp
dec
xchg
push
fiadd
xchg
loopne
pop
adc
push
daa
pop
inc
pop
cli
mov
int
cmp
imul
push
xchg
retf
(bad)
push
sbb
sub
mov
and
push
iret
int
fcomp
pop
dec
jbe
mov
pop
movs
push
mov
sti
bound
or
add
arpl
push
or
jne
cdq
cmp
pop
popf
mov
pop
mov
sub
repz
and
test
stos
mov
inc
out
or
xor
mov
dec
push
add
ror
ficom
dec
push
pop
gs
and
add
sbb
fsubr
into
pop
sbb
sbb
add
outs
sbb
inc
repz
(bad)
and
push
xchg
(bad)
popa
mov
fcom
out
and
xor
ror
hlt
fwait
cwde
js
fistp
fscale
sbb
arpl
mov
inc
pop
sub
jl
ret
rcr
add
call
push
push
push
sbb
pop
fidivr
push
scas
scas
lods
mov
pop
jbe
pusha
cli
and
sub
je
movs
out
loop
pusha
sbb
test
or
push
dec
xchg
ins
iret
neg
mov
loop
cmp
dec
pop
pop
popa
lods
jo
push
mov
push
add
bound
shl
pop
aaa
or
popf
mov
push
rol
dec
sar
cld
or
xor
adc
fs
js
fidiv
lds
in
bound
repz
setl
adc
std
into
push
dec
adc
pushf
mul
xor
ret
dec
stos
cmp
(bad)
pusha
inc
outs
mov
aas
ds
fs
sub
lds
and
or
leave
adc
mov
scas
and
jbe
sbb
lea
sti
enter
pop
nop
cwde
test
les
fwait
xchg
push
inc
test
loope
addr16
dec
sub
(bad)
out
mov
mov
sbb
rcr
retf
mov
and
ja
ret
dec
mov
(bad)
sbb
fadd
xlat
adc
pop
pop
frstor
(bad)
cmps
cmp
out
idiv
aad
pop
jmp
out
rcr
xchg
dec
int
pop
dec
out
mov
es
popa
popa
and
div
in
mov
sub
(bad)
cmp
push
inc
fs
inc
mov
sub
lods
repnz
or
not
jo
xchg
and
mov
(bad)
not
or
addr16
cld
data16
bound
mov
sub
nop
and
mov
fsubr
(bad)
sub
xor
movaps
in
aad
fbld
xor
add
mov
pop
mov
ror
retf
add
push
fstp
pop
scas
cmp
inc
and
repz
arpl
push
xchg
push
mov
jmp
mov
cmps
(bad)
xor
mov
jns
push
inc
pop
pop
shl
shl
add
ja
cmp
pushf
gs
dec
pusha
in
and
mov
xchg
outs
add
(bad)
shr
outs
scas
in
scas
jmp
add
lahf
jo
push
xor
stos
jge
sbb
cmp
cmp
mov
cdq
mov
adc
mov
ds
push
(bad)
xor
and
xlat
push
inc
and
pop
fcomp
in
lea
xor
(bad)
mov
or
add
xchg
jmp
int3
movs
fs
dec
push
xor
lods
xlat
vmovshdup
sbb
mov
cmc
adc
pop
repnz
scas
fdiv
(bad)
adc
add
cmp
hlt
push
ret
mov
loope
(bad)
fwait
hlt
mov
hlt
mov
xchg
imul
jle
cmps
test
push
div
jl
pop
and
dec
js
add
stos
in
(bad)
sub
jg
mov
cmp
pop
fistp
arpl
xchg
jmp
bnd
outs
push
cli
ins
stos
push
std
add
bound
fcom
sub
xchg
xchg
(bad)
mov
sahf
xor
in
mov
ja
idiv
mov
int
mov
add
push
adc
out
(bad)
dec
inc
outs
addr16
push
pop
outs
sub
in
int
popa
inc
std
dec
cld
inc
adc
and
push
xchg
sub
adc
mov
outs
and
test
retf
xor
into
(bad)
xchg
sbb
xor
outs
pop
addr16
out
cmp
fnsave
push
bound
mov
add
scas
icebp
stos
sub
sub
and
xchg
jmp
push
jb
xchg
int3
call
adc
mov
gs
out
cmp
add
mov
dec
loopne
lods
and
icebp
mov
inc
dec
push
ds
jl
push
into
push
popf
dec
jo
aad
cmp
dec
push
cmp
into
inc
neg
inc
xchg
push
repnz
and
add
mov
ja
stos
and
and
dec
stc
outs
xor
cmp
dec
jg
jno
sub
addr16
lds
push
out
fldenv
in
into
lea
push
stos
inc
push
dec
sbb
or
popf
jno
or
jbe
and
cmps
adc
sar
(bad)
jno
call
inc
dec
mov
ins
test
jle
mov
and
adc
imul
sbb
mov
aad
pop
push
inc
mov
popa
mov
popf
movs
pop
xchg
je
add
imul
cdq
jge
repnz
pop
cld
fsubr
repz
xor
push
aas
pop
sub
call
movs
xchg
cmps
push
movs
xchg
pushf
mov
inc
(bad)
and
out
jnp
in
js
mov
stos
mov
jne
movs
mov
mov
xchg
sbb
pushf
mov
inc
and
adc
xchg
sub
and
sub
xchg
mov
xchg
push
rol
imul
inc
enter
into
sub
cmp
xor
sti
hlt
pop
cmc
in
ins
adc
or
ret
inc
sub
and
je
dec
shr
js
ins
cs
lea
sub
xchg
xchg
jmp
das
loop
in
push
and
cmp
out
and
push
test
rcl
fwait
clc
enter
test
pop
xor
(bad)
enter
dec
(bad)
sar
xor
inc
retf
sbb
(bad)
mov
pop
xlat
inc
adc
(bad)
jecxz
leave
add
cmp
aad
xor
cmp
mov
mov
lahf
pop
sbb
and
mov
dec
pusha
mov
or
adc
and
in
push
cmc
mov
in
adc
std
popf
mov
inc
clc
aaa
int3
neg
pop
adc
sub
sbb
mov
mov
sub
mov
(bad)
jl
js
out
lds
sub
out
push
push
mov
retf
repz
xchg
int
adc
push
std
or
ud1
(bad)
cdq
push
push
and
mov
mov
pop
push
push
mov
cmp
adc
inc
and
ins
xchg
cwde
add
add
fild
jbe
xor
out
call
pop
iret
inc
cmp
sub
xor
imul
pop
push
in
out
rol
test
gs
inc
sub
test
push
mov
pop
not
popf
nop
pop
inc
inc
test
fsub
js
out
pop
cmp
sbb
push
pop
stos
jg
dec
jp
push
rcr
test
push
nop
sbb
xor
gs
mov
rcr
cld
ror
push
cmc
mov
std
(bad)
sub
in
mov
outs
in
jmp
push
mov
add
call
xor
leave
stos
stc
cmps
jae
rcl
pop
sub
test
lods
in
push
int
or
ins
out
push
test
push
repnz
cmp
dec
sbb
mov
mov
push
in
jg
mov
mov
into
leave
dec
push
xchg
sti
out
in
test
mov
sub
mov
call
pop
push
lods
adc
xor
sar
stos
dec
jmp
popf
mov
stc
mov
ret
add
mov
aam
push
cmc
push
(bad)
sbb
push
push
mov
scas
pop
xchg
and
in
pop
inc
cmps
cmp
stc
xchg
loope
mov
div
sub
push
push
inc
or
hlt
push
stos
lods
push
out
dec
adc
xlat
mov
mov
dec
mov
mov
rol
enter
xor
jno
push
and
nop
adc
clc
or
dec
sub
mov
cmp
(bad)
out
cmps
push
sbb
shrd
pop
test
pop
cdq
mov
idiv
dec
pop
jnp
xor
pop
mov
scas
ret
fisttp
inc
imul
test
adc
jb
inc
les
cmp
sub
test
pop
and
test
mov
(bad)
test
xchg
dec
mov
dec
xor
cs
pop
and
xlat
lock
retf
jmp
test
stc
pop
out
and
movs
adc
push
rcl
hlt
adc
pusha
neg
mov
out
js
or
adc
into
stos
dec
cdq
jns
add
and
adc
dec
popa
repz
mov
rcr
arpl
or
(bad)
loope
mov
test
xor
inc
pop
pop
cmp
xor
das
adc
(bad)
in
mov
sub
push
push
std
mov
mov
sub
pop
std
add
cdq
test
sub
jmp
cld
call
adc
mov
cmp
call
mov
out
or
add
mov
(bad)
pop
pop
std
jle
push
add
dec
shl
scas
cli
lods
mov
(bad)
fcom
shr
in
fdivr
leave
xor
inc
mov
imul
aad
sbb
sub
push
dec
shl
pop
shl
pop
push
jp
xor
test
cwde
mov
js
mov
js
retf
xchg
mov
or
inc
int
sub
mov
fs
retf
fsub
pop
ja
or
mov
xchg
xor
inc
pop
ret
les
mov
mov
sub
loope
lds
je
add
mov
mov
(bad)
mov
div
scas
add
mov
frstor
icebp
mov
cdq
cmps
xor
inc
fpatan
mov
stos
jns
sti
icebp
not
test
icebp
repnz
push
hlt
inc
or
ficom
test
mov
call
pusha
lods
xor
mov
aam
movs
dec
xchg
cwde
iret
arpl
in
mov
mov
inc
fld
adc
xchg
xchg
in
mov
add
mov
arpl
mov
sbb
shr
rcl
aad
dec
jae
je
(bad)
and
sub
push
adc
in
std
std
movs
ds
(bad)
jp
data16
jae
xor
mov
mov
mov
lahf
mov
into
adc
(bad)
mov
lea
icebp
sbb
dec
jne
das
test
pop
adc
mov
mov
add
out
fld
es
enter
push
sbb
fisttp
push
sbb
pop
jmp
sub
dec
aad
lock
xchg
pop
mov
xchg
jg
mov
sub
(bad)
or
mov
repnz
fs
(bad)
out
cmp
xchg
sar
and
jp
pop
jp
ja
sbb
ins
sbb
loopne
fs
xor
pushf
lods
add
scas
std
mov
mov
mov
lods
push
icebp
add
jne
bound
adc
adc
add
sub
sar
sbb
adc
xchg
xchg
mov
and
mov
sbb
cmp
push
jnp
add
fs
enter
mov
(bad)
(bad)
cli
rcr
leave
mov
sub
push
and
pop
dec
xchg
jno
adc
inc
adc
add
aad
repnz
(bad)
shr
jmp
or
xor
(bad)
and
sbb
outs
jbe
xor
push
xor
adc
(bad)
jp
ins
mov
jecxz
int3
ret
and
inc
pop
mov
popf
and
mov
pop
(bad)
cdq
xlat
loopne
pop
cmps
and
push
ds
out
dec
cmp
hlt
push
retf
inc
add
mov
cmp
sub
mov
inc
pop
pushf
add
popf
jmp
fwait
jecxz
in
xor
movs
aad
cmp
(bad)
pop
pop
js
mov
xchg
cmp
xchg
or
xchg
loopne
xor
(bad)
mov
cmp
push
or
xchg
xchg
aaa
mov
xchg
dec
xor
pop
pop
xchg
jmp
(bad)
and
jg
into
sbb
mov
mov
xchg
mov
jnp
mov
stc
(bad)
jmp
sub
std
xchg
push
fisubr
out
sahf
jp
xor
cmp
jae
jne
xor
mov
leave
popa
xchg
xor
add
(bad)
jge
and
add
mov
test
(bad)
jg
lea
or
in
int3
pushf
pop
retf
hlt
(bad)
cmp
test
xchg
xchg
cwde
loope
fist
cmc
xchg
je
push
cli
xchg
lahf
mov
dec
shr
mov
clc
mov
push
inc
mov
or
mov
ins
stos
sbb
pop
fisubr
aaa
xchg
push
sbb
jne
mov
jae
out
mov
push
enter
pop
mov
xor
jmp
test
mov
lods
lods
cmp
cmc
and
mov
dec
sti
pop
mov
dec
sub
sbb
gs
push
stc
push
(bad)
ror
call
adc
jle
pop
mov
lock
inc
repnz
push
adc
sbb
jns
rol
pop
in
sti
jle
xor
(bad)
fistp
push
popa
mov
mov
pop
mov
clc
jno
(bad)
fcom
ja
mov
and
(bad)
test
sbb
mov
in
(bad)
rcl
add
lds
test
cmp
das
fwait
lods
push
xor
mov
and
out
popf
jb
sub
and
sub
call
add
mov
sbb
xor
das
push
jmp
es
int
cmps
adc
push
ror
jmp
(bad)
push
jg
(bad)
in
je
pushf
sbb
sbb
jge
pusha
mov
dec
je
sub
in
test
ja
sbb
add
add
call
push
pushf
push
push
dec
pop
jne
icebp
js
inc
xchg
ds
mov
int3
adc
mov
xchg
xchg
icebp
push
sub
mov
mov
mov
and
sti
jno
dec
inc
cli
pop
mov
mov
shr
push
sbb
aaa
mov
xlat
jecxz
mov
push
arpl
pop
je
xchg
cmp
lahf
mov
xor
pop
dec
adc
cld
rcr
mov
jmp
push
dec
xor
or
les
adc
mov
mov
pop
pop
ins
adc
pop
outs
adc
cmp
cld
nop
add
mov
mov
add
adc
pushw
mov
test
daa
mov
dec
mov
xlat
fwait
(bad)
in
xchg
cmc
inc
jns
out
icebp
jle
dec
sti
jo
xchg
in
push
inc
xor
pop
mov
into
jns
push
and
cli
test
cmps
outs
push
or
sar
push
into
mov
retf
test
popf
xor
cmp
je
test
xchg
out
mov
(bad)
mov
in
sahf
popa
ja
loop
adc
fs
pop
dec
imul
dec
jmp
sar
stos
enter
xor
js
push
add
and
xchg
dec
jmp
sub
fisub
popf
pop
lds
push
sbb
test
lea
mov
add
or
imul
jle
add
mov
mov
loop
inc
xchg
rcl
pop
in
jle
sub
xor
mov
add
movs
in
ret
xor
push
fistp
or
cmp
sub
hlt
mov
or
lahf
(bad)
ret
mov
push
mov
rol
(bad)
retf
xlat
or
fidiv
or
jg
pop
pop
xchg
jl
dec
fld
pop
imul
lahf
mov
cmps
sbb
std
cmp
cmp
push
mov
mov
shr
ret
mov
mov
inc
popa
sbb
pop
push
outs
test
jne
jmp
add
mov
dec
aam
jl
ins
lds
xchg
popa
bound
and
mov
xchg
sub
cmp
cmp
jl
xor
sub
shr
mov
mov
dec
into
std
out
jae
jbe
stc
lea
pop
in
adc
jo
xchg
sbb
fmul
xor
shl
aaa
aad
in
test
clc
jno
dec
(bad)
int
sti
clc
jb
adc
addr16
sub
mov
retf
mov
cmp
fnstcw
and
jno
in
cs
pop
sti
lea
cmp
inc
sbb
xchg
(bad)
sub
das
mov
outs
gs
call
enter
movsx
add
cld
push
loopne
ja
out
dec
sar
mov
jle
ficom
mov
inc
mov
outs
or
into
jns
popf
inc
retf
int3
pop
retf
dec
call
mov
retf
aaa
out
mov
aad
cmp
mov
gs
xchg
jb
cmps
mov
ds
or
loope
adc
push
xchg
and
call
and
jl
mov
pop
int
push
idiv
pop
sar
popf
xchg
push
inc
jbe
pop
mov
movntq
add
aam
leave
pop
(bad)
cmps
jmp
and
pop
inc
arpl
outs
enter
or
and
dec
sbb
jmp
test
lock
adc
mov
ins
or
ss
popf
push
pop
cmc
fld
jecxz
and
dec
mov
imul
imul
and
sub
sbb
adc
fisttp
stos
(bad)
sub
loope
fsubr
fwait
jmp
mov
sbb
dec
shl
into
leave
cmc
lods
jmp
mov
in
sub
sti
push
cdq
shl
(bad)
aam
inc
imul
(bad)
and
(bad)
push
sub
mov
pop
leave
mov
jnp
sub
xor
dec
scas
outs
(bad)
xchg
loop
daa
pop
not
outs
inc
repnz
movs
or
retf
retf
bound
push
mov
call
pop
mov
push
xor
mov
aas
adc
pop
bound
in
int
sbb
movs
call
xlat
sub
mov
ror
or
jecxz
retf
and
test
xchg
rol
dec
jo
xor
mov
mov
push
inc
sub
shl
cmp
add
jmp
repnz
retf
retf
outs
mov
shl
les
pop
out
xor
ror
les
pop
inc
cmc
in
cmp
dec
(bad)
and
rcr
test
jmp
idiv
sbb
stc
stos
mov
aas
adc
mov
sbb
(bad)
cmp
addr16
leave
call
sub
pop
mov
mov
(bad)
sti
into
mov
sub
in
int
push
cwde
jmp
push
cdq
or
sub
ds
xor
add
cdq
sbb
push
xchg
add
push
loopne
mov
mov
retf
ins
dec
icebp
lds
mov
xchg
ss
mov
lods
jg
adc
push
jge
outs
iret
fadd
imul
sbb
cs
pop
pcmpeqb
jns
xor
mov
jno
xchg
ds
movs
std
xchg
push
mov
push
cmp
inc
movs
add
mov
cmc
cmp
jl
add
(bad)
test
sbb
in
movs
adc
(bad)
stos
arpl
push
imul
push
aas
xchg
fcomp
xor
mov
and
push
cld
movs
mov
mov
xlat
xchg
jp
sub
jno
or
mov
lock
aam
fdivr
dec
lods
mov
jg
mov
shl
cli
mov
int
mov
lods
cmps
mov
fst
add
invd
mov
adc
lock
fadd
lahf
and
pop
dec
cld
push
popa
xor
pop
pop
inc
push
cwde
sub
xchg
test
dec
ret
daa
shl
shr
(bad)
fwait
sub
repz
fdivr
pop
xor
lds
add
jns
popf
pop
je
test
daa
push
push
test
ficomp
retf
in
iret
push
xchg
outs
xchg
test
arpl
cmp
cmp
icebp
push
mul
test
or
js
enter
add
pop
fst
int3
es
push
inc
and
mov
xchg
adc
imul
adc
add
or
cmp
adc
imul
mov
or
xor
fbld
sub
cmp
and
add
xor
(bad)
jl
adc
mov
push
cmp
pusha
bound
fldcw
jbe
call
clc
sub
out
bound
imul
in
retf
dec
xchg
mov
xchg
mov
pop
cmps
mov
arpl
fsubr
(bad)
int
ds
fs
movs
stos
cwde
mov
adc
rcr
inc
push
stc
sbb
add
adc
out
xchg
std
push
repnz
lds
push
ins
xchg
je
cmp
mov
pop
int
xchg
rol
hlt
xor
rcl
out
call
mov
cmp
fmul
xlat
cld
mov
dec
xlat
xchg
sbb
js
fucomp
push
sub
xchg
cld
icebp
pop
mov
imul
xchg
std
dec
sbb
dec
fistp
and
sbb
add
adc
addr16
imul
call
or
pop
cmp
xlat
stos
ret
nop
das
adc
inc
inc
rcr
mov
sub
stc
dec
sub
push
popf
mov
stos
jo
sub
in
out
dec
xor
movs
(bad)
sti
cmp
scas
(bad)
fild
lds
jbe
xor
adc
mov
ja
call
pop
sbb
jns
mov
xchg
jae
ror
iret
or
cs
gs
and
pop
or
mov
stos
in
adc
fcomp
sbb
and
not
es
jmp
mov
inc
in
js
push
sti
dec
mov
fs
mov
enter
xchg
mov
sti
and
jmp
pop
sbb
inc
or
dec
add
jb
retf
adc
mov
je
mov
jge
mov
int
mov
stc
inc
jmp
mov
jno
sbb
and
mov
cs
xor
ret
test
shl
dec
mov
sbb
cmp
adc
jae
imul
(bad)
retf
xchg
ja
add
sbb
mov
pop
sbb
cmp
popf
cdq
in
push
adc
jecxz
stc
ficom
sub
sbb
aam
xor
cs
test
cmps
mov
inc
mov
sti
fisubr
pusha
ror
dec
add
adc
push
inc
fs
push
je
popf
and
xchg
imul
mov
pop
in
sub
ins
mov
sub
xchg
scas
inc
dec
loopne
mov
(bad)
fld
jnp
sbb
out
jno
adc
jnp
xchg
add
int3
xlat
in
adc
fbld
ins
pop
mov
ja
enter
pop
adc
cld
mov
jmp
jae
out
out
pop
mov
bound
cmp
and
mov
add
in
ret
mov
xor
(bad)
xlat
call
test
jbe
fwait
fs
shr
cmc
mov
rol
movs
outs
je
pop
std
(bad)
cs
mov
xchg
mov
ss
in
or
js
jb
or
push
sbb
lahf
add
mov
out
aas
xor
mov
stc
sbb
jb
mov
add
mov
xor
xchg
stc
sbb
xchg
call
xchg
scas
push
jne
inc
std
inc
pusha
inc
clc
inc
push
or
movs
xor
not
fild
and
xchg
sub
push
sub
fsub
jnp
nop
sbb
inc
movs
pushf
test
dec
ret
sahf
fisubr
add
mov
inc
mov
jmp
test
pusha
xchg
sub
nop
mov
adc
test
add
fst
dec
jge
in
cdq
xor
jecxz
(bad)
dec
ja
xor
push
or
mov
call
ret
and
(bad)
jne
test
loopne
leave
les
adc
mov
pop
(bad)
pushf
dec
dec
push
cmp
fstp
inc
shr
loop
dec
in
dec
pop
js
(bad)
mov
cmp
dec
jg
call
push
fist
mov
jne
pop
test
dec
test
aaa
jns
pop
jp
in
into
sbb
xchg
stos
sbb
aas
push
push
xchg
xchg
stos
xlat
daa
and
or
icebp
adc
ins
fist
mov
jg
pop
dec
sbb
mov
pusha
dec
fcmovnb
je
sahf
cmps
cmps
add
push
movs
pop
pop
cdq
ficom
adc
adc
sub
cmp
or
push
push
pop
in
mov
sti
add
mov
inc
outs
mov
and
jmp
jnp
out
ins
js
and
add
outs
push
ror
daa
jb
push
sub
mov
mov
jle
add
xor
add
lods
outs
dec
fbstp
idiv
dec
fsubr
mov
push
mov
rsqrtps
mov
xor
hlt
inc
sub
push
xchg
and
lgs
idiv
cli
sub
jnp
adc
mov
push
(bad)
mov
loopne
inc
xchg
fild
push
test
and
movs
scas
add
and
jl
rcr
(bad)
mov
aaa
arpl
push
bnd
scas
pop
inc
arpl
std
dec
push
ss
rcr
js
jb
cmc
mov
xor
jl
dec
loope
(bad)
fwait
bound
inc
dec
leave
inc
ret
push
adc
push
movups
add
or
in
(bad)
(bad)
sahf
jmp
push
push
inc
add
scas
fxch
mov
mov
ja
and
sbb
cmp
and
or
add
jg
dec
push
aad
sti
dec
mov
dec
mov
in
(bad)
adc
retf
or
sbb
movs
int3
das
outs
sbb
rcl
xchg
inc
mov
aam
pop
mov
in
rol
(bad)
jmp
js
add
retf
or
movs
popf
cmp
scas
movs
xor
mov
mov
gs
or
bound
sub
gs
sbb
mov
xchg
or
and
loope
arpl
in
cmp
fimul
(bad)
mov
cmc
out
or
cwde
out
lods
movs
jbe
das
je
mov
sub
mov
mov
mov
imul
jge
mov
mov
lods
pushf
mov
add
fbstp
jg
inc
repz
jle
popf
fnstsw
pop
gs
jl
repnz
add
pop
xor
xor
pop
dec
mov
jle
sub
mov
gs
movd
pop
and
xchg
int
mov
popf
dec
mov
das
pop
adc
pusha
mov
aad
cld
add
not
xchg
rol
dec
xchg
scas
or
in
cld
sbb
mov
cli
sbb
dec
lea
sbb
xor
sub
jle
js
xor
repnz
scas
or
inc
jnp
rcr
sbb
add
ins
ret
jae
xor
add
mov
dec
sub
cmp
mov
jle
adc
cld
stos
mov
cmp
push
mov
mov
xadd
sbb
out
dec
dec
into
mov
mov
or
sti
lea
push
xchg
mov
clc
sbb
inc
in
push
jmp
pop
push
inc
mov
nop
push
es
(bad)
fld
xchg
fistp
add
mov
push
ret
movs
mov
sbb
leave
movs
cmc
ror
int3
dec
xor
mov
fwait
loope
ror
or
xchg
loop
retf
dec
mov
xor
aaa
int
shr
push
and
leave
sbb
ja
ins
jp
out
cmps
int3
nop
dec
test
ret
ds
arpl
cmp
popa
sbb
mov
sub
or
mov
fist
cmp
in
pop
in
mov
repnz
or
fsubrp
push
mov
out
fimul
jl
stos
sub
ret
ficomp
push
icebp
pop
cmp
retf
sbb
sbb
nop
inc
and
mov
or
cs
sub
or
aam
lock
pusha
nop
sub
sub
lock
dec
push
es
cmp
adc
test
ss
and
push
cmc
sub
inc
aas
outs
xchg
and
sub
test
mov
cs
xor
aam
ret
sbb
cmps
repnz
jp
sbb
aad
xor
dec
add
nop
mov
outs
movs
adc
mov
pusha
xlat
or
sahf
sub
add
mov
lahf
out
je
dec
push
test
and
mov
out
ins
jns
aad
lea
jne
push
jae
daa
(bad)
test
jno
cmp
into
std
pop
ret
mov
fistp
jbe
pushf
std
lds
add
out
push
(bad)
in
push
jp
rol
and
sub
mov
cmc
jnp
adc
xor
sub
mov
fiadd
pusha
ja
fnstcw
test
jne
jle
ficom
retf
jb
mov
leave
test
test
clc
aaa
sbb
jne
mov
neg
inc
pushf
cmps
adc
repnz
imul
(bad)
lock
or
jecxz
inc
cmp
push
push
jne
cmps
cs
adc
pushf
xor
neg
in
adc
out
data16
jno
(bad)
mov
lock
out
or
xchg
imul
sar
pop
mov
or
add
(bad)
cmp
inc
push
cmp
cwde
add
aaa
pop
jo
lock
add
(bad)
repnz
xchg
sub
cmp
cli
std
mov
loopne
sar
jl
push
hlt
xchg
hlt
cmp
jnp
jmp
jns
xor
push
stos
mov
mov
shl
push
pop
retf
call
test
jnp
mov
fsubrp
add
inc
mov
sub
ds
ret
call
cmp
mov
ss
lock
inc
ins
fwait
pop
cdq
scas
mov
movs
or
addr16
cmp
mov
add
popa
dec
pushf
jo
mov
pop
and
xchg
mov
xchg
jmp
fwait
jb
les
sbb
cmp
call
sub
loopne
adc
sub
into
pusha
dec
xchg
inc
repz
(bad)
loop
xchg
ja
inc
cmc
add
push
inc
mov
cmp
loopne
mov
fadd
mov
xor
add
iret
xor
das
js
pop
(bad)
mov
jno
jne
push
xchg
ins
gs
sbb
aas
pushf
mov
(bad)
es
xchg
icebp
(bad)
out
out
out
cmp
lock
lahf
dec
jae
push
adc
sti
mov
aad
das
cmp
xor
mov
les
pusha
fs
test
jl
jp
shl
scas
adc
and
mov
xor
mov
(bad)
int3
ds
inc
add
das
and
pushf
popf
mov
test
or
xor
fdiv
jg
jno
shr
call
or
and
or
push
push
jns
and
sti
xor
aad
mov
enter
movs
repz
xor
jb
in
jg
push
jbe
mov
mov
jmp
(bad)
mov
or
adc
pop
mov
mov
lahf
mov
and
cmps
aaa
into
movs
dec
out
mov
lds
xor
ins
mov
pop
cmp
and
test
je
push
stos
pop
adc
jns
mov
daa
push
icebp
mov
and
mov
sbb
cmp
ds
outs
pop
ss
pop
mov
sti
ss
jae
retf
shr
and
pop
icebp
inc
aam
jp
ror
idiv
lods
mov
outs
das
in
nop
stc
mov
push
dec
inc
or
mov
inc
imul
scas
mov
retf
pop
and
dec
pop
retf
scas
fild
jg
test
sbb
movs
(bad)
loope
pop
inc
out
xchg
mov
xor
aam
pop
push
push
mov
test
into
jno
int
push
test
mov
aaa
stos
inc
dec
jecxz
out
cmp
in
mov
xor
js
inc
sub
outs
jp
sti
aas
fmul
push
sub
arpl
push
dec
sbb
fstp
loopne
pop
in
loop
rcl
(bad)
clc
pop
movs
pop
outs
jp
mov
icebp
xor
pop
pop
movs
jmp
jb
cld
pop
xor
xor
mov
mov
mov
add
jle
fisttp
pushf
push
rdtsc
loopne
ret
inc
mov
fist
imul
xchg
dec
dec
scas
iret
movs
push
and
aam
adc
dec
inc
stos
rol
push
pop
ins
cmp
int
nop
or
sub
pusha
rcpps
scas
xchg
xchg
not
dec
and
inc
lds
das
fmul
mov
jo
(bad)
scas
std
mov
ficom
cmp
xchg
in
scas
mov
add
out
jne
mov
jecxz
test
dec
jl
(bad)
push
lds
xchg
add
repz
das
mov
addr16
outs
mov
and
mov
or
into
pop
test
jns
addr16
mov
dec
fstp
mov
jp
repz
cmp
sbb
repnz
sbb
cmp
sub
or
xlat
jl
inc
and
mov
ret
lock
and
add
ins
sbb
jbe
stc
sub
add
in
aam
dec
xchg
sar
sbb
dec
rcl
cmps
loope
aad
and
sub
call
xchg
jns
fwait
enter
stos
ror
cmps
sbb
add
adc
xchg
int3
xchg
stos
adc
mov
inc
iret
es
mov
retf
xchg
sbb
fisub
outs
push
js
in
mov
lock
in
cmp
mov
loope
pop
add
fsubrp
jne
mov
push
jl
cmp
mov
sbb
in
sub
repnz
cmc
hlt
rcl
and
jmp
mov
adc
pop
xor
or
inc
ins
aaa
bound
test
xor
pop
fs
aaa
cli
jl
aam
push
sti
xchg
sub
in
or
in
outs
dec
mov
mov
push
loop
jbe
outs
push
and
xchg
mov
cmp
fbld
dec
aaa
pop
aaa
mov
inc
dec
jp
neg
leave
pop
sbb
clc
inc
test
ja
pushf
movs
add
scas
or
add
stos
out
outs
repz
sub
xlat
push
mov
adc
aas
pop
sbb
pop
mov
lods
mov
inc
int3
std
pop
sbb
jo
gs
cld
fldenv
push
daa
fdiv
xor
sbb
add
shl
mov
mov
fcmovnbe
out
jg
pop
les
pushf
sbb
aam
mov
xchg
daa
xchg
jge
push
dec
and
push
inc
ins
xlat
sub
add
retf
pop
adc
ins
add
test
jbe
icebp
iret
cs
mov
mov
pop
and
lahf
bound
or
mov
sbb
mov
fnstsw
call
jecxz
enter
sub
retf
in
hlt
ror
int3
push
sub
cmp
jae
jne
pop
adc
pop
fdiv
sbb
adc
push
mov
mov
das
sub
out
js
stc
ror
out
enter
push
jl
pop
in
lahf
pop
rol
jnp
inc
dec
aam
xchg
scas
adc
jne
icebp
pop
adc
push
in
mov
inc
adc
push
rol
mov
xor
out
xor
aam
fsubr
xchg
arpl
stc
call
pop
pop
jp
dec
mov
loopne
xchg
jp
mov
pop
inc
mov
pop
std
shl
cld
inc
add
aad
sar
adc
pop
loope
mov
adc
addr16
loope
in
es
stc
mov
sub
xor
cmp
mov
jg
pop
mov
inc
ror
mov
jp
rcr
(bad)
and
(bad)
repz
aam
jb
cmc
bound
ins
(bad)
or
pop
lea
cmp
mov
mov
pushf
lea
es
jp
jo
add
sbb
inc
daa
xchg
leave
mov
mov
aam
and
mov
add
pushw
loop
out
pushf
or
push
pop
ret
mov
pop
sub
clc
imul
ja
xor
push
inc
call
(bad)
fbstp
and
jg
xchg
arpl
mov
aas
xor
in
psubusw
xor
shl
adc
mov
cmp
dec
xor
push
push
mov
fidivr
in
jmp
xchg
jbe
mov
sbb
rol
(bad)
cmps
xchg
repz
jae
adc
(bad)
adc
jbe
sbb
cmps
xchg
pop
cmp
sbb
dec
jne
or
jne
jge
inc
addr16
shl
add
jl
mov
sbb
call
xchg
push
pop
ins
cmp
lds
dec
inc
sbb
stc
aam
repnz
int
xchg
pop
mul
sbb
mov
bound
sbb
popa
test
jmp
jmp
icebp
stos
scas
loope
mov
jo
(bad)
sbb
push
and
ins
add
or
cmp
adc
sbb
fisub
cli
mov
out
ins
jmp
call
xor
sub
mov
test
pop
add
ins
mov
xchg
sbb
and
mov
xor
jno
pusha
push
fsub
push
pop
xchg
or
scas
inc
cld
fld
xchg
test
aad
sub
sbb
mov
xchg
fild
cmp
cmc
aaa
xor
je
neg
and
fwait
xchg
add
nop
push
mov
(bad)
fldl2e
xlat
shr
and
mov
xchg
fst
dec
dec
aad
add
xchg
cmps
adc
cdq
adc
pop
mov
jg
lahf
mov
jo
jno
mov
push
rol
xor
(bad)
clc
pop
lahf
mov
and
sub
call
xchg
(bad)
jnp
mov
or
sub
repz
cli
jl
(bad)
out
fild
and
(bad)
loopne
dec
push
pop
xor
sub
or
xor
pop
std
idiv
sbb
pop
nop
cmp
sbb
push
inc
(bad)
shr
adc
aas
cld
fdivr
fyl2x
inc
(bad)
(bad)
adc
cmp
fsubr
adc
inc
jns
jge
xchg
push
fsubr
dec
xchg
ss
and
jmp
das
std
mov
inc
mov
lds
test
adc
mov
outs
jno
in
(bad)
dec
and
xchg
lds
sub
pop
mov
add
leave
sub
stos
sub
shl
test
stos
push
sub
test
xchg
bound
dec
icebp
(bad)
xchg
iret
xchg
repz
inc
movs
sbb
dec
dec
cmc
and
test
cmp
cmp
dec
ds
int
out
bound
call
mov
mov
mov
dec
iret
in
es
inc
push
into
push
sub
xor
pop
mov
xchg
pop
ss
into
aam
jae
aad
mov
inc
inc
fiadd
fist
cmp
arpl
fidiv
mov
adc
jle
bound
dec
jno
adc
push
loope
sub
lods
xchg
mov
lods
xchg
loop
push
repz
scas
repz
add
dec
outs
jge
stos
sub
(bad)
and
inc
cmp
fwait
jmp
and
repnz
test
push
sub
pop
jp
jbe
xor
pop
pop
xchg
loop
xchg
fdiv
in
mov
push
mov
movzx
xlat
stos
sbb
xor
inc
adc
out
les
sbb
jge
inc
fidivr
or
jno
jb
pop
or
add
mov
popa
cmp
mov
pop
mov
sub
cmps
fadd
push
imul
cmp
cmp
and
xor
inc
push
ins
xor
outs
sti
add
mov
and
addr16
rcl
fld
ins
jmp
rcl
int3
jmp
mov
(bad)
mov
loope
aad
mov
popa
clc
ficomp
js
jbe
and
adc
test
ror
fistp
test
inc
jbe
lods
out
retf
add
dec
dec
fidiv
mov
xchg
add
push
xchg
pushf
or
cwde
cld
mov
jg
fsubrp
push
jl
(bad)
out
mov
mov
mov
fild
push
into
loopne
inc
adc
add
push
add
stos
inc
in
popf
cs
retf
cli
dec
mov
push
std
dec
retf
adc
inc
pop
adc
(bad)
sti
push
rcr
mov
daa
stos
in
sahf
fdiv
movs
(bad)
psraw
jg
xchg
cdq
jnp
mov
push
rcr
retf
jecxz
jne
mov
add
or
mov
mov
sbb
enter
retf
pop
add
cmp
mov
add
jle
scas
sbb
add
inc
mov
adc
or
add
mov
mov
ror
mov
pusha
dec
retf
fmul
das
dec
(bad)
inc
sub
cs
jle
or
xchg
(bad)
(bad)
nop
or
stos
das
xlat
ret
add
pop
jmp
cdq
cmps
aad
daa
jo
or
mov
push
lods
add
outs
pand
pop
imul
popfw
mov
lock
sub
xor
mov
jne
sub
jb
xor
mov
retf
in
add
in
mov
pop
xchg
xor
test
ins
out
jno
scas
ret
aam
retf
mov
mov
aas
cmps
cwde
jge
inc
std
fidiv
jb
xlat
mov
pushf
pop
dec
jnp
std
sbb
les
adc
repnz
push
repnz
fs
pop
jp
inc
add
mov
xchg
pop
sub
pop
sub
and
popa
cwde
arpl
das
(bad)
xor
and
pop
mov
inc
ss
dec
or
pop
pusha
(bad)
cmc
rcr
jmp
xchg
in
test
push
jbe
dec
out
aaa
call
mov
out
stos
lar
fwait
ret
mov
or
inc
dec
sbb
inc
mov
adc
mov
arpl
jb
and
mov
retf
sub
mov
sti
mov
jmp
push
scas
ret
loope
jo
bound
(bad)
rol
and
jbe
lods
jg
fbld
jnp
arpl
push
loope
and
clc
or
add
mov
and
out
std
mov
cmc
adc
inc
cwde
enter
or
pop
iret
aas
cmp
jo
fidiv
adc
mov
jg
mov
xchg
xor
clc
xchg
mov
pop
cld
push
out
das
shr
retf
xchg
mov
push
and
je
movzx
mov
dec
and
lods
call
jle
push
push
mov
or
stc
mov
jmp
out
dec
sub
dec
and
and
sbb
adc
and
mov
out
inc
jmp
enter
in
arpl
add
jg
fidivr
pop
sub
loope
push
shr
test
leave
in
jl
mov
sub
pop
out
scas
sub
lods
xor
inc
add
xor
mov
cmp
sub
mov
dec
or
and
fcomp
dec
ins
stc
pop
sub
xchg
mov
pop
outs
dec
sbb
add
(bad)
int3
popa
and
pop
sub
jg
cmp
sar
and
xchg
lds
add
mov
and
cmp
popa
in
pushf
cwde
imul
pop
inc
push
mov
inc
jae
fistp
int3
xor
fild
xor
xchg
pop
pop
or
adc
sti
call
ja
inc
ret
push
mov
das
push
cmp
jl
fs
pop
lds
outs
fcomp
jge
push
mov
stos
mov
rol
loop
mov
scas
imul
stos
xor
inc
ret
jp
repz
(bad)
lea
ins
sti
sbb
in
shl
aaa
xchg
sbb
aad
loope
iret
ret
daa
loop
shl
(bad)
aas
pop
dec
push
out
or
out
sbb
jmp
push
adc
dec
cmps
sub
inc
lock
push
fcomp
loope
cdq
dec
ja
aaa
sub
pop
add
dec
data16
ss
push
push
sub
movs
xchg
fs
xchg
cs
cmp
arpl
popf
inc
mov
in
aas
in
sub
in
iret
mov
jle
std
jmp
sti
mov
sub
(bad)
mov
in
push
rcr
scas
pop
scas
adc
call
push
cwde
outs
sub
iret
xchg
sub
int3
adc
xchg
cmp
cmp
sti
xor
sbb
and
fld
sbb
or
dec
and
lock
xlat
out
dec
xor
mov
add
push
xchg
sbb
add
ror
dec
dec
dec
push
xlat
mov
sti
pop
jb
xchg
(bad)
(bad)
cpuid
in
out
jnp
cmp
sub
dec
jge
cli
inc
mov
aas
pushaw
jmp
aam
pushf
jmp
enter
movs
ins
jp
test
cdq
push
shl
ins
push
scas
stos
mov
or
ror
and
xor
add
pop
cs
dec
mov
pop
cmp
cdq
jne
mov
bound
test
xor
and
cmps
mov
xor
aaa
dec
ret
xchg
cwde
aas
xor
(bad)
js
outs
adc
arpl
in
or
dec
or
popa
sub
or
out
pop
loope
inc
in
enter
test
pushf
mov
or
dec
cs
ins
sbb
icebp
jo
stc
sub
and
frstor
add
call
out
jae
sbb
aam
mov
rcl
dec
aad
dec
dec
mov
les
pop
and
enter
dec
mov
dec
(bad)
shl
pop
adc
in
push
sub
sti
in
mov
shl
push
and
cmp
push
push
inc
xchg
ds
div
push
dec
push
jns
fcomp
shl
sbb
cmps
out
mov
pushw
dec
out
imul
pop
sub
dec
inc
out
(bad)
xor
aaa
jne
xor
jge
sar
mov
mov
test
in
mov
lods
dec
movs
stos
xor
adc
mov
mov
sub
jge
retf
mov
in
into
mov
adc
fyl2x
ss
mov
test
mov
pop
pushf
retf
ins
bound
sub
dec
mov
xchg
mov
sub
repnz
sbb
and
mov
les
hlt
push
cmp
sti
sahf
jge
cmps
test
call
arpl
loope
mov
inc
mov
leave
adc
call
in
arpl
dec
mov
and
inc
inc
push
xor
xchg
push
push
in
imul
jge
mov
add
push
outs
push
cli
mov
shr
push
mov
sahf
retf
sub
mov
vrsqrtps
call
in
cmp
push
or
mov
fwait
and
call
in
cmp
push
pop
mov
inc
mov
ins
int
sbb
xor
jae
(bad)
jl
push
lea
sub
and
(bad)
xchg
dec
jb
xchg
neg
in
sub
call
mov
push
or
cmp
mov
outs
in
jbe
dec
dec
fs
in
fdiv
jmp
ret
mov
pushf
pop
or
repz
std
popf
ss
aam
aad
jl
mov
loopne
sub
ss
lock
dec
push
mov
test
lds
out
not
dec
lahf
pusha
mov
and
int
mov
stos
pop
add
and
jno
mov
mov
or
sbb
jnp
mul
mov
mov
pop
xchg
ret
mov
or
cmps
test
or
retf
rol
cmps
(bad)
jns
dec
inc
aas
pop
popf
pop
out
pusha
out
add
sahf
in
int
je
mov
out
cdq
test
mov
pusha
and
arpl
cs
dec
pop
xor
ret
xor
test
outs
xor
aaa
shl
pop
loope
jo
cmp
jmp
mov
pusha
xchg
sub
(bad)
popa
jns
xchg
das
mov
fild
inc
ss
and
cmp
adc
push
adc
popf
sbb
sti
call
push
leave
and
lods
pop
nop
sbb
cmp
xlat
lods
fadd
(bad)
xor
(bad)
jno
dec
push
jge
push
adc
sub
(bad)
pop
push
mov
dec
adc
xchg
xor
jg
add
cs
sbb
iret
mov
add
mov
fistp
xor
in
or
dec
aam
in
pop
gs
or
mov
mov
mov
cmp
mov
xchg
stos
pop
nop
ins
xor
mov
add
add
xchg
jno
pop
or
push
retf
stos
push
xchg
mov
mov
pop
jle
sti
pop
cwde
ja
aas
mov
popf
clc
daa
dec
aaa
sbb
jne
lods
mov
xor
dec
jmp
ret
test
xchg
sbb
shl
mov
jmp
repz
(bad)
out
ret
repnz
mov
call
inc
jns
inc
mov
and
sahf
jns
dec
(bad)
dec
xchg
int3
lock
jnp
mov
or
ror
cmp
lea
stos
(bad)
cld
jl
mov
pop
mov
test
add
add
add
popa
stos
fwait
mov
daa
jns
arpl
fiadd
lods
sbb
(bad)
xlat
nop
cmp
ret
inc
push
jno
in
sub
xor
mov
ret
fdivr
cli
sti
rcl
jnp
jmp
adc
pop
sbb
in
cmc
div
push
push
inc
push
pop
enter
mul
dec
out
jp
inc
pop
inc
cmp
retf
cmp
fwait
mov
mov
mov
mov
cs
aaa
add
adc
das
jg
shl
ror
pop
pop
jbe
in
push
fdiv
add
add
xor
and
scas
stc
dec
dec
jns
lahf
js
jmp
xchg
cmp
js
sbb
test
test
adc
mov
dec
popf
add
dec
inc
xchg
gs
and
inc
mov
cs
loope
add
mov
and
nop
xor
iret
into
js
movs
cmp
lahf
jmp
mov
cmp
xlat
adc
ret
adc
push
cmc
nop
or
push
mov
ret
call
iret
sahf
pusha
mov
pop
push
mov
mov
xor
xlat
push
cmp
add
lock
cmps
push
lahf
leave
mov
movs
sub
push
or
mul
push
fwait
cmp
imul
and
inc
and
push
popa
sbb
mov
out
imul
shl
jne
movs
call
rcl
lahf
mov
sub
retf
jge
jge
fcomp
lods
pusha
push
pusha
add
or
leave
mov
pop
ss
test
inc
sub
mov
inc
sahf
dec
imul
ins
in
sub
outs
sbb
(bad)
repnz
dec
shl
mov
xor
sbb
leave
push
js
es
push
cmp
push
pop
stos
dec
lods
pop
sub
mov
repz
inc
lea
enter
add
pop
xchg
adc
xchg
pop
shl
jbe
out
out
pop
or
inc
loopne
out
push
shl
sahf
adc
pop
retfw
cmp
push
(bad)
(bad)
inc
mov
xchg
xlat
(bad)
xchg
add
push
or
cli
sbb
in
lea
and
fs
push
jmp
jmp
retf
push
xchg
call
in
jmp
mov
push
mov
into
pop
mov
fistp
lock
pop
xor
outs
enter
mov
xchg
jg
adc
adc
xchg
es
test
push
lods
int3
(bad)
adc
(bad)
sbb
pop
xchg
adc
jns
sbb
xor
(bad)
ins
aaa
(bad)
call
push
int
imul
and
lods
out
cmp
into
es
mov
aas
(bad)
in
cdq
into
jp
add
xor
adc
ss
bnd
mov
jg
dec
adc
mov
cmp
xchg
adc
xor
dec
push
jo
lods
push
inc
leave
sbb
dec
inc
inc
int
ret
ret
mov
sbb
add
push
adc
mov
test
mov
cmp
mov
ret
frstor
pop
inc
retf
iret
bound
adc
int3
push
js
fimul
xchg
sbb
je
(bad)
sbb
inc
xchg
into
in
push
pop
jmp
(bad)
outs
(bad)
adc
iret
les
jnp
js
jg
jl
sbb
and
ins
lods
pushf
push
mov
bnd
xchg
rol
in
mov
xor
cs
pop
sub
or
adc
imul
xchg
xchg
cmp
jmp
cs
test
rcl
lds
push
stos
outs
repnz
js
dec
inc
test
movs
enter
fisub
mov
retf
ss
fcomp
ret
jle
adc
dec
not
lods
jmp
sub
jge
std
mov
ins
mov
bound
int
ret
dec
mov
leave
adc
retf
shr
xchg
sub
and
cmp
icebp
out
cmp
xchg
add
cli
mov
mov
lds
xchg
idiv
paddd
inc
repz
mov
fsub
sub
push
mov
(bad)
addr16
test
(bad)
std
(bad)
pushw
cdq
add
in
das
push
mov
fdivr
mov
(bad)
jecxz
and
sahf
add
icebp
sahf
rcr
mov
or
lock
ds
mov
stos
cmp
out
jnp
push
test
push
dec
sbb
gs
rcr
ds
xchg
mov
cdq
jmp
scas
cld
fs
stc
loopne
cmp
xchg
dec
stos
or
fsubr
adc
out
jge
pop
sub
fild
pop
out
pop
dec
ffree
inc
dec
lods
imul
xlat
shl
outs
dec
lea
enter
inc
cmp
(bad)
sbb
and
scas
pop
mov
in
aad
dec
adc
fldenv
inc
xchg
sbb
xchg
neg
mov
cmps
dec
cmc
sti
mov
adc
pop
jo
add
cmp
adc
dec
cdq
and
stc
jge
fisubr
test
add
out
inc
call
shl
stc
in
and
fs
mov
mov
dec
sbb
dec
retf
xchg
rcl
pop
std
mov
call
mov
fadd
aam
clc
inc
js
push
out
pushf
enter
mov
pushf
or
mov
into
pop
call
jo
enter
sub
xchg
and
das
movs
xor
dec
fild
adc
xlat
mov
push
repz
push
xchg
std
cmp
div
stos
fstp
cmps
push
jge
inc
(bad)
in
aas
sub
dec
sbb
xor
jmp
dec
loop
cmps
addr16
xlat
add
mov
ret
sar
ret
xchg
jo
pushf
aas
aam
in
in
rcr
enter
dec
call
mov
adc
aad
call
ret
lods
test
sbb
push
xchg
mov
add
loopne
sub
test
(bad)
(bad)
aaa
push
loop
and
cld
sub
xor
pop
outs
scas
pop
add
rcl
mov
test
lods
pushf
movs
cmp
mov
retf
sbb
in
mov
pop
cwde
mov
mov
lods
xchg
mov
jae
dec
(bad)
fcom
sbb
jmp
out
in
pop
inc
test
push
(bad)
ficomp
dec
in
pop
jnp
(bad)
xor
push
(bad)
push
cmp
and
mov
dec
ja
push
mov
inc
ins
or
bound
dec
inc
adc
jmp
dec
je
movs
das
mov
daa
mov
sahf
pop
clc
shl
(bad)
aam
and
and
xchg
outs
add
lock
sbb
aam
call
das
lahf
rcl
imul
lea
test
push
loop
xchg
adc
es
push
fnstsw
and
push
lahf
pop
sbb
repnz
sbb
sbb
bound
adc
les
scas
(bad)
std
jmp
xchg
stc
push
sub
stc
sub
js
sbb
stos
shr
pop
add
adc
mov
push
mov
pop
inc
mov
dec
scas
sub
push
rcr
mov
mov
mov
fisub
xlat
das
sub
call
ret
hlt
push
sbb
arpl
ret
pop
iret
sbb
push
rcr
push
std
inc
or
cmp
mov
mov
call
cmc
popa
push
lods
add
cmp
cs
in
pusha
movs
or
js
pop
mov
mov
or
jge
add
pusha
test
fistp
in
push
adc
in
addr16
push
xor
loope
xor
test
(bad)
fidiv
(bad)
jl
xlat
mov
cmp
xchg
dec
bound
cdq
loop
test
mov
pop
xor
add
in
retf
push
dec
sti
cmp
push
scas
or
repz
or
inc
mov
add
or
pushf
pop
dec
cmc
test
mov
xor
repz
aad
out
mov
scas
hlt
cld
adc
pop
outs
jo
sub
(bad)
adc
or
cmp
aam
push
rcl
(bad)
inc
es
xor
es
in
jl
mov
inc
add
or
mov
jl
daa
or
add
xor
out
inc
jp
out
xchg
or
mov
aas
push
dec
shr
sub
into
push
cmp
imul
jns
imul
sbb
das
dec
ret
int
inc
jmp
xchg
dec
inc
mov
loope
adc
movs
test
inc
sbb
(bad)
mov
movs
mov
jno
mov
popf
(bad)
dec
cmc
aam
or
xchg
out
ror
cmc
popf
pop
lock
in
int
jmp
adc
outs
out
pushf
not
jl
pop
xor
pop
adc
push
mov
sub
iret
adc
popa
popf
enter
mov
dec
adc
and
or
das
fwait
ins
mov
lds
int3
cli
push
dec
jne
scas
or
and
das
jmp
fcomp
stos
das
jne
out
out
retf
sbb
lahf
pop
mov
int3
(bad)
aam
iret
div
cld
popf
dec
(bad)
mov
jmp
in
push
or
sahf
retf
dec
sbb
(bad)
mov
or
sub
push
lods
mov
mov
shl
mov
jg
add
cmc
add
pop
sub
cmc
or
lock
aam
cdq
adc
(bad)
mov
mov
fidivr
pop
cmp
mov
push
in
push
push
jo
(bad)
ss
cs
jp
fmul
mov
popa
repz
(bad)
jle
test
retf
jle
aad
adc
adc
mov
mov
imul
xchg
imul
cwde
in
inc
xchg
pushf
or
fdivr
fsubr
dec
inc
sbb
repz
jecxz
adc
jp
shl
inc
dec
stos
mov
imul
add
ret
das
loopne
add
ds
mov
jg
mov
idiv
cwde
xchg
ss
mul
dec
in
xchg
stc
icebp
push
into
xor
xor
mov
sbb
mov
loopne
add
xlat
in
enter
and
or
push
imul
test
pop
cmc
cmc
(bad)
adc
sub
jp
jl
(bad)
std
and
iret
ds
outs
in
imul
push
out
dec
xlat
dec
add
scas
mov
and
mov
and
jecxz
addr16
push
push
cmps
sub
cmps
loop
xchg
ds
stos
ret
clc
dec
adc
pop
(bad)
pop
mov
mov
jge
push
pop
rol
inc
push
xor
adc
sbb
ja
cmp
fisttp
jne
pop
xor
(bad)
shl
xchg
mov
in
mov
test
sbb
loopne
xchg
addr16
orps
and
aam
jmp
push
dec
mov
shl
popf
(bad)
jae
icebp
lods
data16
xchg
jnp
inc
cmp
add
xor
fidiv
cmp
jns
xor
outs
movs
int3
retf
loope
dec
aas
es
mov
je
mov
ins
mov
aas
jb
inc
fidiv
xchg
push
in
add
pop
mov
add
ja
pushf
test
test
popa
or
or
jmp
sub
in
in
adc
cli
pusha
rcl
icebp
and
mov
adc
dec
push
sar
xor
les
and
jp
jle
fdiv
push
jae
sbb
in
aaa
hlt
jne
pop
inc
or
leave
sbb
or
(bad)
or
in
sub
cmc
add
dec
dec
nop
sbb
mov
xchg
mov
arpl
and
cwde
loop
cmp
shl
ror
pop
xchg
xor
rol
add
dec
mov
fxch
mov
das
enter
test
pop
dec
jg
es
pop
mov
xchg
and
lea
fmul
mov
xchg
(bad)
add
ret
mov
pop
stc
test
cmp
in
rcr
jmp
adc
call
fs
cvtdq2ps
adc
loope
and
js
inc
add
add
and
hlt
pop
add
or
xor
xor
xchg
mov
dec
sbb
push
daa
dec
fiadd
rcr
pop
out
outs
and
scas
pop
mov
pop
jno
mov
test
jp
or
and
and
jmp
cmps
xor
mov
test
mov
loopne
nop
test
push
add
nop
in
mov
into
out
mov
test
mov
jb
xchg
push
and
jae
push
mov
gs
jl
mov
xor
scas
jne
cmp
js
mov
inc
cli
aaa
scas
add
sbb
push
xor
and
mov
popa
inc
daa
push
mov
retf
xor
popa
push
jecxz
shl
rol
fsubp
test
pop
xor
ins
adc
loopne
pop
xchg
scas
fld
adc
stos
add
jmp
retf
cld
fadd
jno
scas
leave
mov
(bad)
(bad)
pop
fst
pop
mov
lock
jle
dec
cld
test
icebp
or
je
push
loop
(bad)
cmc
pextrw
sbb
and
je
mov
sti
cdq
push
mov
pop
or
je
pop
test
ret
jnp
add
loope
std
jl
ror
das
ds
aad
cmp
(bad)
xchg
sub
stos
xchg
xor
fcomip
jmp
pop
sub
(bad)
and
inc
pop
pop
dec
dec
enter
sub
adc
rcl
push
mov
push
cs
xor
push
dec
jp
fucomi
add
dec
scas
and
inc
inc
xor
repz
aaa
dec
inc
add
loopne
int3
push
adc
xchg
xchg
or
push
cli
inc
mov
scas
jle
push
sbb
or
shr
mov
push
xor
jns
dec
mov
sub
aas
jmp
adc
cmp
mov
lods
sbb
xor
out
stc
fdiv
and
in
and
call
dec
addr16
add
sahf
mov
xchg
in
fnstenv
aad
out
pop
fadd
mov
and
dec
dec
retf
ret
pop
test
jmp
sbb
sar
jno
sahf
pop
dec
xchg
imul
(bad)
adc
sti
jle
dec
xchg
enter
pop
sar
or
sbb
mov
sbb
jnp
cld
mov
aad
add
mov
or
fcmovne
jg
push
movs
call
test
dec
mov
sub
jmp
imul
mov
mov
push
add
mov
mov
mov
stos
jnp
xchg
add
mov
clc
rsqrtps
pop
xchg
mov
pop
mov
xbegin
mov
stos
loope
mov
xor
and
in
mov
push
inc
data16
xchg
pusha
pop
push
pop
lock
shl
jecxz
xchg
pop
dec
push
jbe
fcomp
xchg
push
pop
jbe
mov
push
test
jne
fnstcw
mov
aad
rcr
add
xor
and
push
pop
int
daa
push
mov
push
test
pop
and
jmp
mov
jl
inc
push
mov
pop
sbb
call
jg
inc
mov
push
push
pop
dec
mov
ja
and
mov
test
adc
or
push
int3
out
inc
(bad)
out
xchg
stos
lods
inc
hlt
jo
test
fwait
push
add
and
adc
lea
inc
xchg
jb
cwde
mov
jmp
cmp
stos
in
imul
mov
sub
addr16
jnp
outs
cmp
add
stos
mov
mov
outs
js
loopne
jmp
fwait
sbb
test
sub
sub
mov
mov
iret
jg
mov
add
push
ds
cmp
cmp
hlt
cs
dec
cmps
mov
push
xchg
test
and
cmp
inc
call
in
cmp
icebp
push
cmp
push
mov
inc
inc
iret
mov
aad
push
outs
fwait
jne
das
sub
and
push
test
aaa
out
adc
xor
adc
or
jle
sar
je
pop
movs
jge
rcl
xor
std
jno
sub
ins
sub
or
mov
loop
jg
test
sub
lods
sbb
inc
xor
pop
xchg
mov
mov
into
inc
xchg
push
or
xchg
cmp
xchg
or
mov
xor
rcr
xor
das
xchg
inc
adc
cs
daa
sbb
test
push
mov
bnd
push
mov
or
les
lods
sbb
ins
dec
cmp
inc
push
mov
push
lods
lods
inc
xlat
int3
xor
aas
xor
mov
outs
cmp
mov
clc
or
dec
loopne
and
shl
mov
add
pop
add
mov
leave
inc
test
jmp
push
push
xor
pop
cs
xchg
inc
push
data16
xlat
pcmpgtd
cmps
daa
leave
jg
rol
test
cdq
test
jge
sbb
jp
inc
dec
or
jmp
mov
pop
ss
xlat
scas
lds
mov
pop
ins
add
jnp
pusha
enter
dec
and
sbb
mul
fist
mov
scas
push
push
loop
daa
pop
jmp
arpl
aas
pop
mov
imul
jmp
sub
rol
gs
out
mov
jge
and
fsubr
out
cmc
or
mov
inc
maskmovq
mov
adc
ficom
mov
(bad)
cld
or
out
popf
in
pop
dec
lock
adc
hlt
into
add
or
leave
adc
sbb
mov
lods
xchg
js
mov
ror
mov
addr16
push
fild
sbb
mov
push
dec
aas
fwait
int3
cmp
mov
stc
pop
(bad)
fidivr
fisub
add
mov
jmp
icebp
xchg
imul
xchg
jne
out
pushf
mov
and
lock
dec
ja
ss
and
ja
aam
inc
xor
adc
cwde
in
dec
xchg
cmps
sti
cmps
js
mov
mov
out
mov
ds
aas
scas
outs
pop
add
je
mov
pop
inc
test
jbe
mov
adc
(bad)
retf
push
cwde
mov
push
popa
push
fdivp
ds
push
mov
test
clc
shl
mov
sub
and
and
pushf
pusha
cmp
fld
inc
fisub
push
out
adc
out
nop
aas
push
mov
mov
fs
aam
(bad)
xor
pop
sub
jp
lock
into
lock
ret
scas
mov
outs
jg
retf
and
icebp
ins
fst
adc
jae
fcom
lds
sub
jl
sbb
pop
sbb
dec
hlt
loop
repz
leave
mov
das
test
daa
mov
jl
and
xchg
(bad)
movs
(bad)
sub
xor
pusha
adc
pop
rcr
adc
cmc
daa
js
test
xchg
push
and
xor
ror
out
pop
xor
dec
(bad)
mov
lahf
in
jnp
mov
xchg
dec
(bad)
jp
mov
out
mov
add
and
dec
adc
bound
jmp
fdiv
mov
cmps
std
(bad)
popa
inc
out
xor
dec
out
dec
addr16
test
mov
ins
in
stc
test
aaa
inc
fcomp
dec
and
and
or
inc
icebp
retf
inc
mov
mov
fs
mov
gs
push
or
dec
mov
and
pop
test
stos
je
loope
fimul
lods
jnp
movs
jle
push
and
adc
add
ret
out
push
cmps
xchg
rol
pop
into
xor
add
dec
pop
cmp
js
push
imul
fs
cld
es
cmp
outs
(bad)
(bad)
xor
loop
or
inc
mov
jno
int3
sub
push
in
rcr
mov
std
push
xchg
adc
xchg
inc
out
add
xor
cli
mov
xchg
mov
(bad)
jp
rcl
jno
adc
mov
sbb
dec
or
iret
dec
cmc
cmp
out
rcr
jmp
lahf
mov
sub
and
das
mov
enter
ret
dec
je
xor
xchg
add
cmps
add
xor
nop
xchg
not
push
ja
add
dec
stos
aas
xchg
sar
outs
ins
test
loop
fistp
call
fld
popa
push
and
dec
lods
and
push
cmc
mov
lahf
outs
daa
and
xchg
jmp
push
fbld
stos
test
push
xchg
xchg
xchg
inc
mov
in
jno
test
or
and
test
(bad)
fimul
(bad)
dec
inc
cmps
(bad)
outs
es
repnz
jge
test
shl
dec
ret
ss
fwait
scas
mov
sbb
(bad)
sub
mov
scas
iret
adc
mov
dec
push
aad
mov
cmp
scas
adc
jb
pop
or
ror
pop
or
pusha
mov
in
pop
or
mov
add
pop
test
icebp
call
ins
mov
sti
xchg
scas
sbb
pop
cmps
cmc
push
pop
and
xor
ds
sahf
test
xchg
sbb
lods
inc
push
lea
fild
cmp
inc
sub
push
xor
dec
sbb
mov
fld
leave
mov
xor
fmul
jl
jmp
pop
xchg
ja
sahf
test
out
sbb
shld
or
(bad)
mov
test
ss
jo
pop
test
test
inc
das
icebp
ror
addr16
fnstsw
ret
dec
mov
mov
mov
cmp
pop
and
stos
inc
or
or
jmp
pop
mov
adc
and
jmp
int3
jbe
bound
mov
inc
mov
lahf
mov
les
sub
push
test
xchg
in
loop
cmc
mov
jmp
bound
lahf
fwait
jo
xchg
mov
in
cwde
in
fdivr
in
(bad)
lahf
push
xor
ret
pop
fist
mov
rcl
ja
movs
inc
in
repnz
ficomp
adc
je
mov
fisttp
mov
and
or
ins
or
xchg
inc
xchg
out
jecxz
outs
arpl
movs
pop
dec
lahf
enter
mov
add
enter
mov
(bad)
aas
jo
xor
ja
sub
xor
out
pop
fsubr
les
imul
or
jne
pop
cli
pop
fstp
jp
xor
aad
xor
mov
mov
gs
loope
add
ins
movs
test
scas
add
scas
add
fsubr
enter
cmp
jbe
in
push
xor
pop
push
popf
je
mov
inc
push
inc
cmps
test
jle
out
nop
pop
jmp
not
pop
xor
cmp
stos
les
xor
cmp
jb
enter
arpl
sbb
std
rol
xchg
icebp
adc
inc
(bad)
sbb
loope
push
sbb
repnz
mov
dec
sbb
ret
pop
mov
push
in
and
ins
scas
retf
xlat
daa
add
jmp
data16
in
pop
mov
shr
scas
jo
int
dec
push
xchg
cmp
int
aad
xchg
adc
bound
push
and
inc
jbe
into
mov
xchg
sub
aad
add
dec
jne
fadd
std
push
in
sub
mul
mov
adc
int
mov
lds
loopne
mov
mov
xor
cmp
scas
mov
push
and
mov
sbb
inc
sti
sbb
call
rcl
lahf
pop
sar
xchg
and
mov
cmp
ror
mov
mov
out
sub
or
jge
jns
jne
mov
push
inc
outs
mov
call
aad
aas
push
mov
push
repz
adc
arpl
mov
retf
in
mov
sub
outs
in
fcom
push
retf
es
mov
fnstenv
push
hlt
retf
push
push
shl
push
pop
xor
adc
jp
aaa
push
loop
pop
lds
retf
fild
adc
mov
retf
inc
push
sub
jbe
and
xchg
xchg
dec
cld
or
shl
or
fcmovu
adc
mov
cli
and
js
sub
and
mov
(bad)
(bad)
sar
xor
ins
sbb
adc
hlt
idiv
rcr
movs
pop
stos
add
in
xchg
cs
mov
xor
icebp
neg
enter
xor
test
out
sub
inc
ins
and
inc
mov
sbb
jp
fmul
fwait
(bad)
jmp
inc
mov
gs
jmp
ja
repnz
aaa
pop
push
sahf
or
cmp
ins
dec
sub
test
loop
pop
inc
addr16
lods
and
and
rcr
icebp
and
rep
pop
mov
pop
sar
movs
mov
in
lods
test
xor
addr16
jmp
movs
stos
xor
push
dec
clc
fwait
add
gs
jnp
iret
inc
xchg
retf
mov
call
sub
sub
push
movs
dec
mov
mov
or
enter
hlt
sbb
mov
int
addr16
pop
outs
sbb
(bad)
push
or
inc
jge
fs
scas
sub
fst
iret
mov
dec
pop
jae
leave
mov
mul
aaa
sar
ret
jmp
ins
scas
sub
mov
fmul
fistp
aad
mov
jge
in
cmp
mov
out
mul
jns
imul
mov
lea
addr16
retf
ins
push
dec
jb
xchg
mov
cmc
and
cmc
xchg
mov
sub
das
add
mov
sbb
sub
sub
adc
push
ret
cld
out
cmp
add
jb
dec
inc
rol
(bad)
add
mov
mov
aad
shr
shl
ss
into
mov
mov
stc
push
xchg
lods
cwde
mov
je
stos
push
mov
movs
movs
mov
mov
xor
shr
dec
inc
and
ficom
mov
fs
xchg
dec
jne
sbb
enter
sub
sub
adc
xchg
jb
or
dec
add
mov
sti
inc
not
xlat
leave
in
push
movs
or
inc
sar
mov
mov
mov
sub
mov
mov
cmp
cs
ror
mov
inc
out
jns
inc
leave
sti
inc
adc
fst
mov
cmc
add
iret
mov
sub
mov
retf
xchg
(bad)
xlat
out
mov
(bad)
ficomp
add
ins
jecxz
in
push
inc
dec
pxor
add
loopne
xor
mov
aam
mov
push
jecxz
xor
retf
and
xor
cmp
fidivr
xchg
call
in
scas
add
leave
aad
mov
mov
inc
add
sbb
addr16
push
(bad)
lar
ror
lea
ins
jmp
jne
dec
add
test
call
dec
sbb
cmp
rcr
cmp
call
shl
pop
pop
cmp
push
push
mov
iret
out
fadd
inc
loope
cmovg
add
and
pop
and
mov
jno
mov
aam
ret
xchg
lods
(bad)
adc
mov
mov
dec
push
retf
test
dec
inc
fist
mov
dec
cmp
ss
or
cld
ret
jo
mov
out
pop
popf
aaa
dec
pop
xchg
nop
sbb
lock
cmp
ficomp
ins
out
clc
in
lods
imul
push
lea
push
mov
and
(bad)
ds
sbb
mov
adc
push
xlat
push
mov
push
scas
cmp
push
xor
mov
xchg
pop
sub
jne
retf
out
sbb
leave
cmp
push
jle
lea
cmc
mov
leave
jecxz
push
xchg
imul
xchg
pop
jmp
mov
aaa
xchg
movs
sbb
stos
pop
into
cld
das
add
mov
mov
in
lea
arpl
inc
dec
dec
movs
retf
push
pusha
stos
sti
cmp
cli
(bad)
in
std
jae
out
dec
lds
or
mov
repnz
les
jo
adc
pop
popa
adc
sub
push
imul
fs
or
pusha
movs
mov
fisub
xchg
in
addr16
outs
sub
push
(bad)
icebp
cmp
cmp
sbb
outs
(bad)
out
(bad)
fidiv
das
std
mov
dec
fwait
adc
repz
mov
aad
sbb
mov
push
sahf
mov
mov
or
dec
add
add
jbe
inc
(bad)
or
out
jmp
shr
dec
or
push
lahf
in
cmp
(bad)
mov
enter
in
dec
mov
sbb
jno
fiadd
(bad)
xor
sahf
jo
dec
mov
mov
jge
scas
(bad)
lods
inc
or
into
pushf
mov
xor
mov
std
mov
mov
repnz
sub
xchg
and
sbb
leave
push
xor
ret
jmp
pop
mov
cmps
xchg
add
(bad)
mov
movs
dec
les
mov
jmp
gs
outs
jl
ror
popf
jmp
loope
push
mov
rcl
xor
imul
bound
in
out
sub
dec
int3
cmp
out
addr16
ins
pop
inc
out
push
xor
aaa
mov
cli
ja
mov
cmp
rcl
fnstenv
lea
pop
cmp
jp
cmp
(bad)
add
rcl
hlt
mov
and
clc
retf
jmp
xchg
lahf
je
pop
hlt
push
cmp
adc
xchg
cmp
int
cwde
push
push
into
stc
out
test
cmp
adc
addr16
mov
push
lods
popa
adc
adc
xchg
cmp
sbb
call
adc
xchg
cmp
stos
aaa
add
and
(bad)
outs
sub
cwde
iret
sub
or
and
adc
mov
sbb
cwde
jne
cmps
test
rcl
xchg
or
cmp
inc
je
jmp
mov
bound
loopne
and
mov
jnp
xor
lea
mov
xchg
mov
jmp
add
popf
sbb
arpl
icebp
mov
jg
mov
lahf
test
push
and
mov
mov
aaa
adc
sub
pop
sub
jb
ins
iret
add
outs
addr16
stos
add
push
cmp
xor
stos
mov
jae
lahf
mov
retf
(bad)
sub
hlt
mov
loop
inc
jbe
jmp
mov
imul
ret
cmp
jae
sbb
stos
pop
and
cdq
add
je
retf
js
mov
jae
sbb
inc
int3
aaa
mov
mov
dec
rcl
lods
(bad)
sub
mov
xchg
pop
sub
mov
dec
sub
movs
dec
sub
in
sbb
inc
js
dec
pushf
push
sub
pop
ds
je
add
xlat
pusha
inc
cmp
adc
into
push
ja
xchg
pop
pop
xchg
wrmsr
cmp
adc
aaa
dec
repnz
ja
test
inc
xchg
ins
stc
fldenv
xor
rcr
(bad)
in
rcr
and
mov
mov
rcr
mov
lods
test
cmps
or
cmp
call
adc
jns
or
sub
scas
out
shl
je
call
and
and
mov
push
ds
mov
fist
jg
lds
or
mov
sar
leave
add
jg
cmp
scas
es
nop
pop
call
and
es
jmp
xor
andps
sar
jmp
xchg
ja
sub
in
ror
sbb
stc
ins
adc
dec
dec
mov
mov
sbb
fmul
imul
rcl
cld
mov
fisttp
retf
mov
call
xor
push
fistp
push
push
or
lods
stos
int3
test
call
int
push
scas
mov
inc
popf
movs
pop
jecxz
call
out
xchg
xor
jp
mov
xchg
cli
lea
fdiv
adc
std
popa
mov
cmp
push
xchg
aas
push
shr
pop
sub
call
or
(bad)
scas
dec
adc
(bad)
and
(bad)
ret
xor
adc
les
push
sbb
leave
(bad)
or
sar
sub
in
xchg
in
add
add
sbb
mov
xchg
cmp
mov
aaa
add
mov
idiv
leave
outs
inc
push
stos
popf
lods
pop
cmc
sub
(bad)
cmp
or
jmp
sub
lea
add
rol
js
mov
push
or
(bad)
cwde
add
sbb
pop
loopne
xor
mov
pop
fiadd
mov
jp
sar
xchg
mov
hlt
cmp
push
bound
out
pop
scas
dec
xchg
cmps
cmp
sub
add
or
arpl
dec
movs
adc
xor
push
ins
es
lock
cmps
mov
fld
jb
movs
retf
and
xor
aaa
enter
add
fcmovnu
int
jmp
xchg
and
je
jl
shl
xor
pop
mul
es
push
rcr
pop
pop
rcl
outs
fstp
(bad)
jg
out
xor
mov
mov
sub
add
sub
test
jnp
xchg
(bad)
sbb
pusha
mov
jb
jb
inc
mov
sub
dec
mov
xchg
lods
mov
pop
mov
mov
rcr
es
fldcw
sbb
fwait
inc
xor
or
stc
jp
cmp
xlat
mov
inc
popa
adc
fnstcw
pop
jmp
inc
push
cld
inc
out
sub
push
cmps
jb
lahf
jns
out
retf
add
push
aam
(bad)
push
into
rcl
lea
dec
or
clc
sub
xchg
and
or
jmp
pop
or
sti
es
jbe
(bad)
imul
mov
pop
inc
lds
jb
xor
lods
xchg
push
nop
or
in
aas
ret
bound
mov
gs
xchg
call
lods
xchg
push
push
(bad)
mov
cmp
jo
or
ret
xchg
or
in
dec
adc
(bad)
push
imul
(bad)
push
test
xor
test
add
nop
mov
mov
cmps
mov
push
ja
test
push
pusha
lods
ins
inc
adc
jno
imul
xor
mov
scas
jl
call
or
inc
mov
addr16
icebp
jl
jle
retf
cmp
xor
fdivr
scas
xor
sub
mov
and
pop
(bad)
add
xchg
push
stos
sbb
mov
mov
sti
push
or
test
mov
xchg
in
pop
xchg
xchg
mov
sub
fmul
jo
mov
inc
idiv
es
add
jge
out
add
pop
rcl
pop
ds
dec
inc
in
test
push
fiadd
mov
dec
jecxz
jmp
inc
mov
mov
add
push
jp
fmul
adc
xor
outs
fdivr
dec
mov
or
push
jle
add
sub
test
cdq
xor
fsubr
scas
std
shl
or
and
add
mov
js
cmp
(bad)
mov
nop
dec
pop
or
and
push
outs
cwde
jmp
mov
and
and
(bad)
les
jmp
mov
xchg
push
call
sar
jle
out
mov
mov
(bad)
cmps
jmp
call
adc
repnz
lods
les
dec
loop
cmps
adc
cmp
(bad)
lock
les
(bad)
imul
mov
adc
jbe
jmp
add
add
out
clc
cmps
sub
popf
push
test
mov
inc
jge
pop
in
or
aas
mov
ja
js
ins
dec
and
ds
mov
dec
sbb
loope
cmp
add
jmp
lods
mov
add
fistp
dec
cmp
aas
adc
sbb
xchg
add
ret
cs
pushf
mov
(bad)
cmp
mov
fistp
xchg
lock
call
push
adc
mov
sub
fs
inc
stc
mov
sbb
das
xchg
adc
jo
cli
adc
daa
add
outs
dec
mov
xchg
mov
mov
fist
(bad)
cmp
nop
cli
xor
ins
test
fild
sbb
jp
repnz
mov
push
adc
fsubr
dec
(bad)
push
ss
inc
pop
loope
jnp
or
clc
and
pop
fs
dec
int3
sahf
pop
mov
push
mov
aam
adc
mov
mov
mov
push
sub
inc
cld
pop
pop
ins
test
add
stos
ret
mov
out
in
pop
add
(bad)
(bad)
pop
test
repnz
fiadd
sbb
mov
wrmsr
mov
repnz
push
mov
mov
cwde
jmp
retf
mov
adc
sbb
or
xchg
cmps
push
nop
out
pop
sub
or
cmp
add
sbb
loop
aad
mov
das
in
in
or
lea
and
xchg
cmps
sar
in
(bad)
xorps
adc
sub
and
add
dec
out
push
stc
stos
cmp
(bad)
mov
fldenv
ins
sbb
xor
pop
out
stos
imul
popw
add
sub
ins
popa
adc
js
inc
adc
and
test
sub
xchg
out
(bad)
xlat
jge
cs
(bad)
cmp
popa
(bad)
cld
add
sar
shr
lea
gs
sbb
and
sbb
xor
stos
in
xor
outs
cmp
push
dec
and
xor
or
push
cmp
ja
test
aam
daa
out
ins
adc
inc
hlt
pop
in
xchg
jge
retf
test
es
das
inc
push
scas
mov
and
sbb
shl
sti
cmp
ss
push
cmps
or
scas
jne
dec
daa
mov
stc
mov
test
sbb
mov
cwde
gs
in
inc
in
jp
out
mov
and
and
shl
stos
xor
adc
dec
out
inc
mov
inc
xchg
mov
push
push
sbb
mov
adc
scas
lods
sar
ins
and
gs
test
dec
xchg
(bad)
dec
leave
sub
sahf
mov
in
mov
pusha
sub
pop
xchg
bound
and
icebp
push
jbe
pop
outs
adc
fcomp
dec
or
repnz
fwait
ja
adc
leave
or
lahf
dec
in
inc
rcl
xchg
in
cmp
popf
pushf
dec
fstp
cmp
sbb
hlt
test
adc
pop
push
sbb
cld
shl
xchg
cmp
stc
repnz
fstp
add
mov
loope
movs
xor
ror
pop
aam
fwait
xor
pop
sub
sbb
sub
callw
mov
push
dec
push
call
dec
cmc
jnp
xchg
and
(bad)
push
inc
or
jno
test
sbb
ret
ret
jg
ficom
or
jg
jmp
(bad)
in
clc
sub
scas
xor
cmp
push
js
dec
out
and
aam
push
loope
mov
std
mov
pop
enter
in
std
mov
scas
lods
scas
int3
mov
lods
aas
push
mov
call
cli
(bad)
hlt
sub
add
scas
inc
sahf
rol
pop
jmp
pop
sbb
pushf
push
add
pop
dec
mov
pop
and
push
dec
inc
call
push
sar
outs
sub
dec
lahf
jo
out
sub
in
popf
outs
add
sahf
jmp
into
ret
movs
sti
faddp
test
push
sbb
int3
push
or
xor
inc
jbe
inc
add
aad
fcomp
push
adc
add
mov
cmp
adc
les
push
jno
pop
inc
push
xchg
gs
je
adc
xchg
cmp
fwait
lds
and
jle
imul
and
jp
movs
dec
shr
xchg
sub
sub
sub
jne
push
xchg
std
(bad)
outs
arpl
mov
and
or
mov
scas
jg
sub
cli
xchg
iret
pop
pop
mov
cmp
xchg
shl
clc
cwde
ret
pushf
das
xor
jne
mov
push
push
bound
div
ins
dec
and
xchg
lea
imul
jge
in
pop
out
or
test
inc
mov
icebp
aas
xor
jne
jecxz
cmp
aad
cli
into
dec
lahf
icebp
clc
xor
shl
jecxz
ds
cwde
add
mov
push
cmps
popf
mov
pop
retf
call
fldcw
add
leave
call
dec
(bad)
dec
xchg
mov
adc
sub
scas
bsr
mov
mov
sbb
or
(bad)
(bad)
daa
push
sub
ds
mov
pop
stos
jmp
sub
and
xchg
inc
xor
push
jbe
outs
cli
outs
lea
out
inc
xor
in
adc
pop
neg
mov
xchg
inc
ds
or
in
and
test
push
cmp
sub
jnp
repnz
mov
jg
and
sub
pop
sbb
jle
nop
adc
add
jge
mov
clc
pop
dec
sbb
int
out
out
sub
mov
rcl
aaa
mov
lahf
bound
jo
and
push
fs
xchg
mov
jo
inc
dec
cmp
cmp
mov
in
cmc
sub
call
imul
jge
outs
or
xchg
stos
movs
fidiv
adc
out
(bad)
std
inc
mov
sbb
shl
mov
dec
mov
bound
mov
es
clc
cdq
push
adc
jbe
jmp
pop
fisttp
add
mov
enter
fidivr
mov
sbb
fwait
push
(bad)
(bad)
out
retf
pop
xor
jmp
xor
addr16
popa
fcom
test
int
jb
lahf
sub
call
pushf
push
(bad)
int3
xor
out
sub
fbld
adc
mov
cdq
inc
addr16
push
repz
xor
mov
sbb
in
dec
gs
movs
cmc
outs
xchg
jae
adc
jne
cmp
scas
(bad)
cmp
sub
pop
cmp
mov
cli
icebp
mov
retf
push
shr
ror
xor
jp
sbb
mov
ret
(bad)
ins
clc
shrd
sub
adc
dec
add
sbb
cmc
adc
in
(bad)
movs
jnp
cwde
xor
pusha
jge
shl
fst
mov
mov
jp
push
mov
sub
mov
sbb
cmp
sub
addr16
ror
pop
fbstp
test
scas
ret
pop
mov
mov
in
int3
push
jns
(bad)
call
jmp
add
push
ins
dec
mov
mov
clc
xlat
lds
cwde
mov
inc
in
fs
mov
in
(bad)
and
sar
shr
test
pop
lock
push
push
adc
add
jge
int3
shl
jg
push
out
stos
in
jge
xor
mov
test
mov
sbb
jmp
sbb
(bad)
fld
call
out
cmp
shl
adc
(bad)
sbb
cmp
push
pop
jg
rol
(bad)
dec
mov
xor
push
clc
dec
xor
cmp
cmp
push
inc
arpl
leave
je
sar
dec
adc
mov
mov
ror
adc
and
dec
jle
pop
test
dec
jmp
cld
or
dec
mov
or
mov
and
mov
and
lahf
and
pop
add
mov
ins
add
icebp
ret
rep
mov
mov
adc
rcl
imul
mov
push
mov
jle
rcr
test
imul
cmp
sbb
inc
mov
or
(bad)
jl
xchg
(bad)
adc
sti
inc
mov
bound
mov
and
std
mov
xor
cmps
je
mov
enter
dec
pop
xchg
jl
dec
cmp
or
das
retf
arpl
lahf
cmc
jnp
or
rcr
iret
ja
mov
call
adc
fldenv
mov
pop
out
mov
dec
sbb
imul
xchg
jle
(bad)
repnz
jl
test
dec
mov
lock
jle
add
scas
cmc
cmps
in
movs
in
or
enter
cmp
xor
inc
je
sbb
scas
ja
mov
nop
cmp
cmp
pop
imul
mov
mov
xor
jg
ror
sbb
leave
adc
jmp
jecxz
xchg
lods
ins
mov
mov
sub
xchg
rcl
pop
dec
ss
movs
adc
pop
sbb
jle
or
xchg
lds
mov
ja
les
vunpcklps
cmp
and
jb
xchg
pop
mov
fs
addr16
retf
popf
fisub
jp
jbe
push
xchg
jge
repnz
jns
movs
call
add
jb
fsub
inc
pop
push
push
sbb
xchg
inc
sbb
jbe
bound
mov
xor
int
lods
lods
push
retf
pop
inc
icebp
out
les
cli
or
xor
mov
sbb
fcom
mov
cdq
add
xchg
xchg
jnp
xor
push
cmps
mov
loop
mov
cmp
pop
dec
add
mov
and
add
out
(bad)
test
test
std
cmps
(bad)
(bad)
mov
ins
sbb
push
out
push
or
jmp
cdq
fwait
ja
imul
aam
pop
add
data16
fcom
cmp
ret
test
mov
push
pop
clc
aam
jne
int3
push
(bad)
cmp
ficomp
rcl
add
call
push
pop
rol
cwde
ins
pop
xchg
dec
sar
mov
cdq
mov
mov
(bad)
xlat
pop
adc
rol
cmp
inc
fidiv
sbb
fbstp
scas
xor
sti
jmp
pop
iret
pop
dec
cmp
dec
mov
jp
sub
sub
ins
test
or
loope
imul
xchg
jp
xor
popf
xor
out
cmc
retf
movs
and
mov
mov
fsub
and
outs
xor
ret
scas
jo
cwde
mov
push
jecxz
dec
pop
adc
pop
cmp
retf
jae
pop
xor
sbb
dec
adc
or
pop
push
loop
pop
retf
xor
xchg
or
and
inc
pop
in
scas
jo
jb
cmp
arpl
dec
adc
loopne
pop
es
stos
jnp
outs
and
cld
cs
stc
retf
cmp
add
dec
sub
push
jl
cmp
add
leave
mov
out
add
jle
push
jo
out
jg
mov
or
and
fwait
sub
fnstsw
xor
pop
inc
jb
mov
cmp
and
jo
(bad)
out
xchg
mov
adc
mov
jg
int
rol
fist
mov
mov
pop
in
push
mov
or
gs
add
push
mov
nop
lahf
adc
js
xchg
jnp
test
sbb
and
cld
push
(bad)
loope
mov
test
mov
xor
pop
or
mov
(bad)
(bad)
mov
data16
mov
jno
push
and
adc
push
not
sbb
movs
sub
aaa
xchg
arpl
mov
push
out
pop
rol
xor
mov
ret
xor
setl
enter
out
inc
test
aaa
sbb
push
js
retf
adc
aad
mov
movs
and
fsubr
dec
nop
js
je
xor
test
mov
or
dec
fwait
stos
mov
and
daa
sti
sahf
mov
das
push
scas
popf
movs
test
out
sbb
cmp
daa
std
cli
add
ret
fwait
xor
pop
inc
mov
pop
ds
call
repz
pop
imul
stos
mov
mov
leave
ins
push
cmc
pop
addr16
mov
mul
jl
mov
inc
popa
shl
push
ror
and
jg
mov
scas
sub
inc
mov
out
das
(bad)
sub
dec
or
pop
mov
xchg
pop
dec
and
lea
and
addr16
int3
fwait
mov
fild
sbb
mov
in
std
jl
bound
jecxz
xor
dec
sahf
(bad)
cdq
aas
pop
mov
ficomp
test
add
leave
fwait
imul
iret
fnsave
mov
add
pop
add
test
dec
cmp
mov
das
jmp
cdq
lea
jmp
sub
add
loopne
cmp
or
adc
jg
xor
mov
leave
pop
pop
(bad)
mov
(bad)
iret
call
rcr
xchg
pusha
iret
fisubr
mov
sub
or
in
push
enter
(bad)
out
fidivr
sbb
lahf
push
fdivr
jmp
repz
int3
outs
or
pop
cmc
inc
lahf
xor
add
jo
aam
add
fwait
rcl
pushf
cs
aas
mov
loop
fsubp
(bad)
jo
xor
xor
sahf
pop
enter
add
test
xchg
leave
sti
mov
iret
nop
push
sti
sahf
xor
aaa
stos
pop
fild
popa
rcr
or
in
xchg
mov
add
adc
fcomp
aam
sbb
jo
xchg
and
retf
pop
sub
xchg
js
div
fisub
imul
pusha
rcr
fs
fwait
loop
pop
lahf
outs
add
fxch
loop
cmp
cmps
jle
add
mov
mov
push
clc
js
out
out
jns
das
in
imul
(bad)
cmp
xchg
cli
mov
jge
das
push
outs
sub
mov
and
lock
enter
stos
pop
jo
push
push
xchg
out
adc
jg
push
push
pusha
out
jmp
mov
aad
mov
adc
adc
shl
je
cli
ror
sbb
sti
pop
inc
pop
loope
jbe
pop
mov
pop
add
push
xchg
(bad)
sti
and
push
fidivr
cdq
inc
pop
mov
arpl
and
inc
loopne
xchg
stos
sti
or
nop
sub
jmp
push
inc
cs
dec
(bad)
xchg
inc
pop
jl
gs
jbe
xor
fld
addr16
or
lahf
mov
or
ds
inc
in
or
aam
stc
mov
xchg
add
ins
(bad)
mov
aad
imul
arpl
or
int3
jg
fs
jns
popa
cli
pop
cs
pop
inc
xor
xchg
sbb
mov
mov
mov
cli
ror
push
and
mov
push
std
sar
popa
dec
pop
adc
push
or
pop
push
xchg
dec
sub
bound
mov
lods
mov
cmp
imul
mov
call
(bad)
jns
in
jle
mov
pop
(bad)
xor
push
aaa
push
push
mov
push
pop
jbe
outs
cli
jp
std
pop
sub
mov
pop
(bad)
scas
mov
and
sub
stc
mov
inc
mov
mov
fwait
(bad)
call
pop
pop
ret
ror
fnstenv
inc
in
leave
sub
and
mov
jo
rcl
push
cmp
test
shl
mov
repnz
into
mov
cmps
call
push
ret
imul
ficomp
add
cdq
icebp
out
dec
xchg
xchg
(bad)
xor
adc
outs
push
mov
inc
(bad)
adc
adc
xor
push
push
push
push
pop
mov
sbb
sub
inc
push
mov
rol
sub
cmps
idiv
mov
enter
daa
sbb
xor
call
jmp
aas
xor
jae
push
jbe
dec
fist
ja
push
mov
adc
xchg
pop
or
xor
(bad)
sub
push
mov
stos
xchg
cwde
and
test
inc
out
add
mov
addr16
clc
xchg
lock
or
popa
cmp
(bad)
imul
cli
jge
xor
cld
aaa
movs
or
adc
cmp
retf
int3
sbb
scas
cmp
push
mov
ja
xor
ja
clc
cwde
fmul
stos
and
(bad)
mov
xor
ret
mov
sub
add
pop
and
test
pushf
adc
xchg
mov
daa
aaa
jno
jno
inc
pop
and
ds
or
(bad)
and
and
or
mov
ins
push
retf
outs
and
or
je
mov
mov
ret
lock
test
mov
sbb
lods
adc
test
sbb
inc
mov
ds
mov
fisubr
add
test
test
ins
sbb
outs
mov
push
adc
repnz
out
sbb
xor
ror
movs
jae
add
clc
addr16
mov
pusha
push
pop
lea
push
or
out
sti
cmp
push
fisub
fcmovu
xor
sub
dec
ins
cmp
mov
movs
mov
imul
push
stos
or
fnstenv
iret
ins
xor
js
adc
daa
pop
fiadd
outs
lock
push
sbb
aad
adc
or
add
repz
fidivr
dec
je
rcr
add
cmp
adc
imul
mov
call
inc
jo
cmps
sub
clc
inc
repnz
gs
call
lods
jnp
fs
jbe
stos
adc
pop
jmp
sbb
dec
pop
scas
mov
ja
cmp
adc
add
cmp
les
cmp
inc
lahf
push
cwde
mov
or
jg
inc
sbb
pop
or
xchg
ror
pop
inc
inc
ja
add
sbb
(bad)
mov
loopne
xchg
mov
ss
sbb
push
mov
sbb
or
mov
(bad)
mov
ins
shl
add
arpl
push
into
adc
mov
ins
arpl
jg
test
sub
cmp
out
call
xor
ins
dec
dec
jg
push
xor
sbb
dec
dec
ds
mov
cdq
jg
imul
shr
std
jp
cmp
aad
and
adc
jl
ins
xor
pop
in
mov
outs
out
(bad)
lods
bound
inc
add
stc
loopne
fs
push
cmp
sub
mov
and
sub
mov
lea
add
bound
sbb
xchg
pop
xchg
jg
pop
in
enter
shr
pusha
loopne
xor
aas
out
pop
ins
dec
dec
adc
pop
in
cmps
push
int
xor
xor
xor
xchg
add
mov
adc
pop
int
cmp
div
adc
push
xchg
jns
sbb
fsubr
pop
cmps
dec
mov
lahf
or
cld
add
jb
cmp
ret
mov
jno
clc
cli
js
bound
test
ret
pop
sar
add
fisttp
iret
push
leave
mov
bound
test
(bad)
fidivr
leave
cmp
cmp
icebp
pop
xchg
inc
xor
sti
mov
jecxz
iret
dec
sbb
(bad)
mov
clc
out
pop
cmp
jb
aam
(bad)
nop
adc
rcl
mov
sub
arpl
or
and
retf
(bad)
sbb
sub
hlt
addr16
pop
test
stos
cmp
jmp
and
mov
in
clc
enter
xchg
pop
bound
leave
add
push
push
sub
mov
(bad)
rcl
cmp
ret
out
pop
cmp
nop
repz
jbe
adc
repnz
dec
jg
and
cmp
jle
or
gs
push
mov
pop
fdiv
pop
xor
in
mov
test
push
(bad)
or
dec
arpl
cmps
aas
sub
dec
stos
loopne
mov
inc
popf
and
imul
setae
dec
mov
cs
xchg
xchg
mov
cs
xlat
jmp
dec
adc
int3
jecxz
adc
jo
repnz
mov
pop
inc
sbb
ror
dec
je
gs
and
sub
dec
cmp
aam
add
bound
cmp
mov
fucomp
int
test
and
dec
xchg
sub
cmps
les
cli
push
ins
inc
fs
pop
mov
xor
inc
cmp
dec
sbb
(bad)
xchg
out
neg
pop
in
shr
into
ds
cmovo
sbb
jecxz
sbb
pop
and
sub
adc
fs
fld
ror
push
test
and
out
shl
(bad)
cmp
dec
dec
xchg
inc
jmp
pusha
je
stos
jne
and
sub
cld
fcomp
adc
fist
pop
movs
shl
leave
and
lock
rcr
pop
in
dec
pop
ret
pop
aas
into
popf
mov
xchg
add
sbb
lahf
push
add
mov
inc
dec
xor
sub
add
mov
jge
or
push
inc
xchg
neg
cld
inc
fisubr
and
out
scas
retf
add
pop
mov
leave
scas
mov
out
rol
test
fisubr
and
xor
sahf
das
into
pop
mov
neg
pop
enter
adc
(bad)
es
or
mov
mov
cmp
sub
sahf
call
pop
mov
scas
repnz
mov
push
in
mov
mov
jnp
mov
mov
ds
xchg
ret
fisub
inc
xchg
jg
push
(bad)
jns
mov
(bad)
pop
fld
shr
pop
imul
mov
mov
sub
mov
pop
scas
jbe
popf
fnsave
dec
push
mov
jb
in
jb
xchg
ror
retf
nop
xor
fstp
loop
imul
xchg
sbb
pop
xchg
aad
aaa
xor
and
xor
adc
push
fistp
jl
aad
sub
push
cmp
repnz
pop
push
push
and
xor
xor
es
mov
fimul
es
rol
xor
jae
int
popa
(bad)
stc
(bad)
mov
pushf
bound
jo
xchg
test
stc
sub
pushf
dec
sbb
jmp
xor
dec
sub
jmp
out
out
(bad)
and
sti
iret
lods
mov
adc
out
sub
sbb
add
xor
scas
fld
jmp
in
mov
jle
cmp
mov
lods
and
leave
enter
push
inc
mov
mov
adc
call
or
cmp
and
test
in
lds
xor
push
pop
call
sar
ins
sahf
sbb
out
movs
(bad)
popf
and
or
call
push
xor
aas
add
bound
xchg
hlt
adc
ret
jb
outs
cmp
dec
pushf
push
cmps
popf
ds
sub
push
mov
call
pop
push
fwait
xchg
push
push
mov
jmp
xor
add
xor
sti
into
mov
fucom
popa
stos
pushf
pop
cmp
dec
push
inc
inc
inc
mov
mov
xor
nop
sahf
xlat
ret
mov
(bad)
arpl
aam
push
cmp
cmp
icebp
imul
fisubr
mov
(bad)
sahf
in
int
das
push
popa
push
loop
jg
fprem
jmp
rcl
test
sbb
push
dec
jo
push
(bad)
sbb
rep
repnz
push
or
add
push
adc
aaa
xlat
out
sar
push
pop
std
stc
jnp
fisttp
or
cmps
mov
dec
xchg
daa
jmp
sbb
jmp
sub
retf
sti
inc
icebp
pushf
mov
lods
popa
sahf
cmp
xchg
retf
sbb
cmp
push
mov
jecxz
test
pop
shl
sar
add
xor
nop
dec
xchg
xor
lock
mov
mov
mov
cmp
xor
add
jecxz
fst
out
pusha
push
(bad)
mov
movs
int3
(bad)
aad
cdq
movs
mov
push
push
outs
loop
out
mov
fisttp
fwait
jno
(bad)
in
sbb
jmp
dec
sti
sub
jnp
and
aam
pop
imul
cmps
clc
dec
xor
mov
mov
sar
retf
aaa
cmp
imul
ret
add
pop
stc
sbb
inc
pop
dec
call
xor
sbb
jge
sub
mov
jno
test
test
xchg
jns
pop
sbb
idiv
stos
adc
cmp
addr16
mov
mov
cmp
test
pop
outs
ror
and
pushw
daa
jnp
xchg
mov
pusha
call
cmp
pop
pop
(bad)
int
popa
mul
add
xchg
ds
(bad)
or
push
adc
push
sub
adc
lea
retf
pop
loop
xor
dec
int
(bad)
fist
mov
test
imul
fldenv
xchg
arpl
(bad)
fcomi
mov
sub
ins
out
jp
ficomp
ret
aam
inc
mov
mov
daa
add
mov
push
cmc
xor
jnp
ror
pop
test
add
(bad)
xchg
dec
jmp
xchg
push
test
sbb
cwde
ja
push
pop
pop
or
xchg
arpl
call
out
pop
mov
das
(bad)
lods
fnstcw
mov
jmp
mov
std
inc
addr16
adc
sub
rcr
mov
jmp
loopne
cmc
retf
xchg
push
jb
aaa
jnp
ins
(bad)
xlat
retf
dec
retf
dec
adc
pop
iret
out
ret
sbb
test
gs
scas
mov
stc
mov
inc
daa
dec
ins
fisub
int
mov
daa
jl
repnz
xchg
psubb
jle
int
iret
xor
data16
xor
dec
in
fldenv
es
add
sub
pop
adc
dec
mov
inc
mov
into
stc
arpl
in
fisub
push
mov
adc
arpl
xchg
inc
add
aad
jno
cmps
out
hlt
jbe
jns
jmp
lahf
pxor
fs
jo
mov
and
adc
push
retf
mov
pop
mov
rcr
sub
and
xor
push
cdq
adc
inc
pop
or
int
(bad)
out
ja
cmp
sub
xchg
cmp
add
sti
jnp
loopne
fmulp
sbb
jb
scas
or
jo
fcomp
mov
repnz
sub
sti
jg
enter
jecxz
pushf
mov
(bad)
out
(bad)
dec
xor
in
and
or
add
out
cmp
sbb
cs
lock
repz
es
jmp
jns
ins
xchg
imul
add
sahf
sti
xor
dec
fcom
cmp
fstp
jo
test
mov
repnz
(bad)
xor
test
sbb
and
xchg
sbb
xor
int
pop
xchg
and
inc
int3
xchg
xor
loopne
jnp
and
outs
sbb
pop
arpl
adc
dec
xor
jno
nop
jae
mov
icebp
outs
outs
pop
jb
jg
hlt
rcr
or
mov
lods
lods
stos
inc
iret
sar
int3
dec
pusha
clc
pop
and
shl
add
ret
and
jae
aas
jnp
push
ror
lds
add
push
aam
js
adc
mov
add
in
pop
(bad)
ins
cmp
mov
mov
xchg
push
lahf
ret
pmulhw
mov
xchg
jg
sub
ror
ret
retf
pop
sub
sub
stc
sahf
lock
pop
pop
into
cmp
ret
inc
sar
lock
ins
sbb
xchg
mov
jge
(bad)
dec
push
pop
push
enter
mov
mov
mov
cmps
in
(bad)
pushf
adc
xchg
add
xchg
cld
mov
jmp
ss
or
in
pop
daa
mov
adc
mov
inc
pop
(bad)
in
repnz
movs
retf
iret
in
adc
dec
pop
mov
mov
pop
(bad)
pop
repnz
xor
or
ins
and
pcmpgtb
in
cmp
pop
mov
cmp
scas
ret
das
push
jmp
mov
and
scas
cmp
mov
xchg
mov
outs
(bad)
dec
aaa
fbld
jno
pop
mov
push
in
(bad)
inc
mov
aad
jg
mov
xchg
inc
ss
add
xor
in
cmp
mov
push
push
(bad)
pop
imul
(bad)
jg
lahf
push
push
icebp
shrd
push
jns
mov
jbe
scas
movs
ret
push
mov
ins
sbb
retf
call
xchg
jo
jae
pop
cld
push
jmp
sbb
or
mov
es
outs
(bad)
jecxz
into
pop
push
dec
mov
test
and
jp
xor
mov
cli
out
or
rcr
and
mov
sbb
jns
test
into
adc
cwde
xchg
fcomp
sbb
jp
int
mov
je
fcomip
icebp
ret
or
int
dec
push
cmp
inc
jge
pop
or
in
rcl
int3
pop
loope
cdq
cmp
icebp
mov
xchg
arpl
fcomp
adc
jo
pop
xchg
dec
push
imul
(bad)
jno
outs
fwait
inc
push
jl
adc
(bad)
outs
xor
lds
jae
cdq
lods
imul
push
cmps
stos
jno
aaa
mov
add
ret
mov
(bad)
shl
cld
mov
outs
dec
xor
xchg
fstp
enter
sub
xchg
pusha
inc
add
and
dec
adc
pop
pop
cld
cmp
lods
lods
fcomp
scas
ret
push
lods
cwde
dec
lds
ja
jno
mov
dec
jb
jecxz
hlt
pop
idiv
sub
pop
pusha
dec
and
add
adc
movs
out
push
(bad)
or
retf
mov
inc
sar
pop
adc
movs
cs
fucomi
pop
aam
push
inc
inc
or
test
dec
xchg
cmp
jge
sbb
xchg
pop
push
pop
rcl
outs
lds
adc
je
add
inc
sub
mov
js
shl
std
or
pushf
call
dec
fs
jge
mov
lds
aas
ret
mov
aaa
mov
sbb
mov
jg
inc
and
test
hlt
cmp
sbb
cmc
or
sub
not
call
mov
and
popa
test
or
push
fnsave
or
lock
enter
push
cmp
les
xor
and
aad
add
adc
mov
or
inc
add
jae
das
sahf
sbb
add
outs
pop
mov
inc
dec
adc
addr16
in
dec
dec
dec
dec
and
mov
cmp
test
cli
sub
lea
cmp
lea
push
outs
push
mov
fmul
jae
xor
xor
push
clc
loopne
inc
fisubr
push
jnp
add
jbe
mov
and
in
pop
mov
push
push
stos
xchg
(bad)
aas
adc
into
push
(bad)
scas
push
ret
stos
dec
int3
shl
in
adc
ins
sbb
cmp
mov
mov
(bad)
xor
push
repnz
loop
cwde
(bad)
out
(bad)
scas
(bad)
xor
(bad)
pop
xchg
and
and
xor
test
mov
test
out
call
(bad)
div
xlat
iret
adc
cmp
cmp
les
sub
add
cmp
mov
adc
pusha
xor
push
scas
into
mov
pop
mov
les
daa
lahf
int
pop
movs
cmp
jne
pop
and
call
jae
pop
daa
rcr
cmc
mov
xor
jmp
xchg
pop
mov
cli
and
es
sub
push
sbb
pusha
enter
ja
dec
push
fild
rcl
add
and
ret
dec
repnz
aad
push
imul
enter
in
or
pusha
adc
ret
inc
xchg
cmp
adc
jge
jp
sahf
and
mov
retf
mov
cmps
or
lods
mov
push
mov
cmp
mov
mov
or
(bad)
sub
mov
pop
fdiv
in
outs
xor
push
lds
mov
mov
test
ja
call
pop
xor
mov
jae
cmp
or
push
xchg
js
mov
mov
sub
and
and
adc
and
pop
pusha
sub
idiv
xor
loopne
(bad)
(bad)
mov
pushf
or
sbb
sub
not
or
pop
loopne
inc
push
mov
or
movs
clc
xchg
sub
jbe
xor
jmp
loopne
fwait
or
and
xchg
fisubr
push
div
rcl
pop
cli
xor
adc
shl
mov
and
sti
outs
sbb
cmp
js
test
jecxz
mov
push
imul
inc
int
xor
dec
addr16
add
mov
in
and
ss
xchg
iret
mov
sbb
mov
jle
ret
mov
or
mov
sbb
stos
aas
inc
hlt
arpl
xchg
adc
into
jae
in
cmp
mov
jns
cmp
xchg
scas
xor
add
nop
ins
std
push
(bad)
fstp
push
stos
cmp
movs
mov
into
or
sub
jmp
xchg
mov
movhps
loope
pop
jb
aaa
push
retf
push
hlt
(bad)
int3
add
repz
push
or
(bad)
rol
ret
test
push
fmul
stc
push
cmc
(bad)
out
jp
push
stos
mul
call
je
and
and
mov
sbb
mov
out
jle
sbb
cdq
push
(bad)
call
stos
pusha
pop
in
rol
mov
cs
imul
inc
and
adc
outs
lods
dec
push
inc
mov
(bad)
fs
sbb
and
data16
std
fcomp
dec
sub
push
and
enter
sbb
fld1
cmps
inc
retf
fs
dec
or
or
jmp
(bad)
repz
jmp
(bad)
and
outs
dec
sbb
jl
loope
mov
xlat
or
xchg
fisttp
pand
rcr
adc
out
jne
sahf
push
sbb
call
mov
mov
int3
xlat
mov
mov
addr16
pop
add
mul
push
cmps
mov
jl
sub
mov
(bad)
push
push
and
sub
inc
in
adc
mov
mov
bswap
jmp
mov
cdq
push
inc
mov
call
retf
fistp
stos
sbb
push
fisttp
sub
out
sbb
jp
inc
aas
mov
int
out
adc
push
fimul
mov
push
xor
fbld
cmc
shl
int
pop
outs
xchg
and
out
shl
fwait
sub
and
sub
pop
push
rol
std
inc
inc
sbb
aam
add
jl
sub
mov
rcl
push
cmp
mov
jne
aaa
pop
lods
sbb
mov
push
push
cmp
call
lahf
inc
xchg
test
imul
dec
int3
fnstenv
fdivr
fsubr
cmps
jno
mov
loopne
jle
dec
inc
adc
or
aaa
cs
in
and
adc
inc
ds
sbb
sub
je
data16
add
fs
arpl
enter
dec
das
loopne
inc
inc
ja
xchg
push
scas
stos
or
lods
leave
add
push
lds
mov
mov
cmps
scas
adc
inc
xchg
mov
(bad)
push
and
loopne
jg
xrelease
lahf
mov
popf
retf
loop
lahf
cmp
movs
mov
es
mov
sub
dec
mov
cmp
sbb
nop
xor
xchg
lock
cmps
clc
sub
push
call
int3
push
xlat
ret
pop
sti
sbb
ins
adc
sti
cmc
retf
inc
or
jnp
loop
bound
mul
sahf
pop
jmp
mov
aad
mov
ins
out
jg
add
adc
adc
pop
rol
loope
inc
dec
jle
addr16
push
loopne
cmp
sbb
push
dec
inc
dec
pusha
mov
xchg
mov
add
movs
cwde
fcomp
mov
jg
push
ffreep
jbe
pop
cmp
cmps
adc
into
push
xor
call
(bad)
movs
sbb
xor
cmp
adc
pop
pop
neg
sub
sar
or
xor
ret
or
aas
sub
xor
mov
stos
mov
ins
cs
ret
mov
test
push
pop
inc
xor
in
mov
imul
scas
call
and
pop
or
push
std
mov
xor
sti
add
and
daa
inc
cmp
imul
test
push
add
call
mov
repz
jp
push
mov
movs
or
pop
mov
repnz
xchg
test
dec
dec
js
jno
inc
ficom
call
sbb
mov
mov
cmps
xchg
sub
call
xor
push
mov
inc
push
dec
jnp
lods
mov
ror
jne
mov
mov
push
sub
add
fs
js
xchg
cmp
or
xor
js
lahf
xor
dec
cld
bound
dec
add
mov
in
jle
fucomi
mov
pop
inc
push
stos
aam
lods
mov
cs
adc
fwait
scas
ds
repz
push
pushf
cdq
sub
retf
mov
retf
lods
dec
and
div
gs
inc
std
test
ins
fnsave
cmp
ror
xchg
add
je
xor
push
jle
jle
popa
loopne
loop
arpl
jmp
addr16
mov
jae
test
inc
es
(bad)
ins
jae
inc
jne
xor
adc
repz
dec
cdq
mov
or
add
shl
ja
js
ins
lods
shl
mov
mov
retf
fisub
dec
mov
test
popf
pop
inc
xchg
pop
popa
aas
sub
jbe
int3
clc
sub
sbb
jmp
dec
pop
ret
add
int
push
(bad)
in
xchg
repz
gs
mov
call
js
(bad)
mov
or
call
lods
mov
mov
mov
repnz
outs
jp
push
inc
xchg
lds
div
jecxz
xor
movs
xchg
pop
jns
push
(bad)
mov
cdq
jp
je
adc
ins
dec
out
test
popa
mov
in
cld
xchg
mov
dec
unpckhps
aad
sub
mov
mov
mov
push
xchg
scas
xchg
movs
adc
cli
hlt
and
add
cmp
or
sbb
pop
(bad)
pop
xchg
inc
jl
xor
int
jmp
or
sbb
pusha
and
in
out
stos
aad
mov
push
call
mov
icebp
or
shr
sub
push
pmulhw
retf
sub
test
pop
stc
adc
push
sbb
push
inc
addr16
jmp
push
test
jo
pop
ret
into
fadd
xchg
hlt
sub
icebp
jo
popa
add
adc
pop
jbe
dec
ret
adc
lods
dec
cdq
lahf
mov
or
jge
and
mov
mov
mov
int
cli
out
add
mov
outs
pop
out
sbb
stc
inc
inc
mov
xlat
test
pop
xor
movs
out
push
call
and
(bad)
dec
sbb
je
std
push
ficom
out
out
int3
pop
jmp
jns
fdivr
(bad)
or
icebp
mov
add
push
mov
adc
test
dec
ins
(bad)
jne
mov
mov
cwde
in
or
aas
pop
pop
push
xchg
pusha
sub
pop
mov
mov
xor
test
jg
sub
jno
test
rcr
xchg
mov
mov
fild
dec
pop
int
mov
(bad)
movs
rol
out
xchg
xor
into
icebp
mov
call
sub
fnstenv
daa
jp
ret
imul
cmps
popa
retf
cli
nop
test
ins
xchg
push
pop
enter
jmp
push
fcom
push
int3
movs
add
lea
nop
test
and
ret
pop
or
in
cmp
sbb
fstp
pop
sub
div
sbb
iret
sbb
icebp
add
(bad)
pop
out
out
ins
ds
xor
sub
mov
xchg
pop
adc
dec
add
ffree
shl
je
pop
xlat
mov
lea
inc
jns
mov
push
xchg
dec
fadd
mov
xor
jmp
sbb
add
out
bound
lods
and
scas
mov
sbb
jp
and
sbb
in
push
int
and
fild
pop
pop
sub
cmp
adc
js
mov
repnz
retf
outs
aaa
in
out
outs
(bad)
into
pop
rcl
mov
add
enter
sbb
cwde
fcom
(bad)
in
pop
pop
cdq
scas
pop
imul
movs
(bad)
jo
push
mov
lods
in
adc
and
xor
ret
lods
mov
ret
pop
mov
call
enter
mov
add
fwait
sbb
mov
stos
push
call
cmp
push
int3
jle
xor
fcomip
mov
push
or
mov
jmp
mov
aad
pop
adc
aas
xchg
mov
aas
lods
and
pop
cmp
cld
daa
sbb
ror
out
add
mov
pusha
sti
or
cmc
fcom
sar
in
add
aaa
xchg
jno
xchg
mov
mov
cmp
dec
fidivr
outs
scas
push
scas
(bad)
push
mov
int3
sti
loope
aam
aam
pop
rol
jo
or
mov
cmp
mov
cmps
shr
xchg
in
movs
or
or
fs
mov
paddsw
or
cmp
call
enter
xchg
repnz
out
inc
popf
mov
nop
push
xor
icebp
outs
adc
lods
sub
rol
je
scas
add
dec
xlat
mov
cmps
daa
test
mov
mov
lock
sub
ja
jo
xor
ret
test
push
ja
in
xor
xchg
add
inc
aam
dec
fldenv
inc
pop
cmp
dec
int3
sub
mov
in
cmp
jo
push
mov
fimul
fwait
xchg
test
test
mov
arpl
imul
dec
add
(bad)
cdq
inc
mov
lods
adc
xor
or
lods
scas
(bad)
mov
je
mov
pop
jge
or
jns
stc
cmp
cli
jl
out
pushf
xor
fimul
movs
sub
std
ret
xor
cli
(bad)
std
ja
inc
xchg
sub
fild
inc
push
dec
pushf
dec
sub
stos
in
call
pop
jecxz
fild
repnz
aam
adc
test
ror
xlat
(bad)
xchg
push
add
ds
cmp
cmps
call
out
sbb
mov
xor
mov
and
pop
arpl
adc
adc
inc
inc
ss
jge
or
dec
stos
inc
int3
push
(bad)
mov
adc
xchg
adc
inc
outs
mov
out
ficomp
test
shr
jecxz
mov
aas
lahf
shr
hlt
lea
scas
pop
dec
jg
mov
(bad)
or
fisttp
stos
jmp
ror
cmp
test
dec
dec
ret
arpl
jae
push
gs
bound
mov
mov
adc
cmp
mov
sub
(bad)
fnstenv
(bad)
les
sub
outs
or
bound
adc
ja
ret
push
fisttp
ret
xchg
push
mov
addr16
fstp
dec
add
push
mov
ss
shr
inc
or
inc
or
and
pop
mov
or
rol
cmps
sbb
mov
sbb
xor
cmp
xor
add
(bad)
pop
lods
shr
xor
dec
cmp
sbb
adc
sbb
call
cli
ret
fcmovnbe
cdq
stc
jecxz
add
add
xor
into
or
js
xchg
lods
mov
mov
inc
mov
mov
loop
fnstcw
mov
ret
in
xchg
in
cmps
icebp
add
out
push
sar
dec
daa
in
out
clc
std
pop
or
in
jmp
shr
mov
gs
inc
call
cmps
add
mov
adc
pop
imul
push
inc
xor
test
not
push
fsub
shl
call
fldenv
sbb
fmul
adc
repz
out
aaa
inc
rcr
(bad)
jb
nop
rcl
add
fisubr
add
jg
pop
xor
mov
cmp
mov
in
test
fmul
cmp
rcl
icebp
jb
pop
js
imul
cs
sub
je
lahf
pop
pop
(bad)
(bad)
and
icebp
cwde
sbb
jnp
lods
mov
sub
add
pop
jmp
pop
adc
cvtps2pd
or
xchg
inc
cmps
retf
inc
inc
fidiv
test
xchg
lea
xchg
ja
mov
pushf
add
push
jmp
mov
inc
das
fld
mov
fadd
and
mov
pop
stos
stos
data16
xor
inc
shr
dec
mov
cmp
mov
sbb
push
xchg
outs
out
mov
xchg
(bad)
fst
cpuid
xor
and
cmp
mov
ins
data16
adc
icebp
bound
popa
xor
pop
sub
jmp
stos
call
inc
(bad)
out
lds
icebp
call
dec
mov
pop
leave
dec
sar
sub
les
stos
jbe
loope
sbb
icebp
inc
ds
and
pop
ja
xchg
jns
jg
cmp
mov
xor
cmp
imul
in
sahf
lea
push
sub
push
pop
push
sub
je
xchg
mov
xchg
jge
cwde
push
ja
jbe
sbb
xchg
fdivr
hlt
mov
mov
loope
psllq
ret
imul
xor
dec
inc
fiadd
xchg
cld
repnz
sbb
leave
pop
mov
jne
out
push
test
cmp
test
jge
pusha
add
xchg
je
loope
mov
and
scas
mov
mov
ror
mov
fidivr
out
mov
daa
aad
cld
fucomi
push
mov
add
cmc
arpl
dec
jmp
mov
in
xchg
inc
add
inc
and
or
arpl
sahf
mov
mov
jp
mov
jl
mov
adc
or
xchg
push
retf
(bad)
and
sar
and
mov
add
pusha
xchg
adc
leave
ret
or
mov
ins
sub
lods
call
sbb
stos
stos
jnp
and
add
fcmovbe
mov
lock
jns
jle
arpl
push
retf
xchg
sbb
xchg
dec
std
test
outs
inc
stos
call
xor
jbe
enter
or
fnstcw
adc
lock
(bad)
sahf
inc
clc
pop
std
sahf
xchg
mov
enter
sbb
in
jmp
pop
and
repnz
jle
pop
xor
dec
gs
mov
jecxz
icebp
arpl
shl
(bad)
lea
data16
pop
xor
or
push
jmp
adc
mov
fild
inc
int
arpl
jle
mov
and
enter
pop
pop
lds
idiv
dec
cmps
in
cmps
mov
in
ret
repnz
fistp
pop
xchg
cdq
loope
sahf
out
imul
sub
loopne
and
inc
movs
mov
aam
mov
int3
push
fisub
(bad)
ins
mov
enter
mov
test
dec
call
push
repz
cs
push
add
ds
aaa
push
imul
mov
(bad)
mov
jg
sub
jmp
mov
jb
enter
loopne
setp
xor
aas
pop
pop
loope
rol
fwait
or
pop
sbb
ror
xchg
add
and
push
lods
imul
lock
dec
mov
adc
int
push
int3
mov
pushf
call
cld
sbb
dec
pop
into
dec
inc
push
scas
jb
sub
pop
push
scas
jle
xchg
or
push
sbb
mov
enter
mov
mov
(bad)
add
frstor
loopne
sub
adc
lds
mov
xlat
xchg
aas
dec
mov
retfw
xchg
pusha
and
sahf
or
xchg
mov
jmp
adc
mov
int
mov
sbb
or
sub
xor
cmps
mov
sbb
out
shl
xor
push
push
mov
sbb
or
cmp
mov
(bad)
dec
(bad)
cmp
scas
push
cld
push
imul
rol
push
fisttp
mov
dec
sahf
jmp
pop
imul
into
lds
in
sub
sbb
gs
leave
(bad)
cmc
jle
xor
cmp
stos
sub
sbb
push
icebp
loop
mov
ror
ins
cmps
in
or
add
xchg
inc
xor
dec
js
mov
and
dec
sbb
adc
push
imul
movs
push
ror
push
daa
push
push
mov
fsub
outs
shl
mov
adc
pop
dec
nop
(bad)
mov
fimul
or
pusha
mov
cmps
fnstcw
adc
xor
xchg
lock
push
xchg
xor
or
mov
mov
push
mov
iret
xchg
in
cmp
imul
ret
jecxz
mov
add
sub
(bad)
fidivr
(bad)
ds
cdq
call
jecxz
adc
inc
aas
addr16
movs
das
cld
mov
xchg
inc
inc
xchg
dec
sahf
out
adc
fucomp
inc
add
pop
shl
add
pop
push
lds
lea
les
inc
fisubr
iret
aas
xchg
outs
daa
std
fild
arpl
xchg
(bad)
push
push
inc
fild
mov
add
pop
sub
cmp
xchg
jge
pop
leave
sub
mov
les
xor
pop
icebp
not
push
adc
fst
mov
scas
shr
int3
ss
imul
dec
aad
rol
cmp
pop
addr16
leave
jnp
pop
test
jg
sub
ret
ror
inc
push
xchg
in
jno
scas
lea
sbb
jp
addr16
into
int
mov
mov
jl
(bad)
sbb
pop
test
stos
rol
nop
mov
out
lds
xchg
sub
or
dec
div
mov
sti
jp
sti
jl
add
inc
cwde
test
and
pop
push
stos
jge
mov
scas
sub
sbb
leave
(bad)
movs
mov
hlt
outs
jg
loope
xchg
(bad)
sbb
adc
add
scas
jbe
ins
arpl
jae
jnp
push
lahf
sbb
test
hlt
stc
cmp
jbe
cld
sub
mov
jae
dec
mov
sbb
lock
in
imul
call
imul
add
out
std
jecxz
push
mov
loope
and
mov
out
std
mov
ds
clc
jbe
mov
ds
pop
mov
jl
bound
add
xor
into
mov
pop
scas
fistp
or
test
out
xchg
push
jl
neg
inc
out
sbb
icebp
popa
jae
mul
pop
scas
and
(bad)
mov
bound
bound
adc
mov
(bad)
fwait
dec
leave
cmp
dec
mov
xchg
call
popa
enter
imul
cli
outs
ficom
mov
popf
test
rcr
fistp
cmp
ss
loope
cld
(bad)
xlat
push
sbb
or
xchg
mov
repz
fcomp
pop
int3
imul
xchg
xor
popa
les
into
in
xor
xchg
mov
cwde
stc
add
ficomp
out
inc
mov
push
loope
fucomp
aad
push
imul
outs
sar
mov
(bad)
test
aam
mov
mul
repnz
int
test
push
jp
and
fisubr
outs
pop
dec
mov
mov
popa
sbb
mov
(bad)
xor
aad
pop
scas
xor
mov
push
shl
or
mov
push
icebp
iret
mov
push
std
mov
out
dec
add
dec
out
xlat
push
sub
shl
mov
mov
imul
pusha
pop
push
cmp
or
bound
dec
mov
shr
cmp
stos
sbb
or
shr
test
(bad)
fs
and
dec
sar
xor
add
je
loopne
and
jle
mov
pop
cmps
rcl
loopne
lods
xchg
repz
cmp
movs
inc
ins
pop
adc
mov
and
xlat
mov
out
movs
(bad)
je
std
fdivr
jno
pop
adc
mov
sub
lods
jo
in
fs
lods
scas
push
xor
push
cmps
add
in
repz
jmp
mov
sub
adc
js
sbb
and
mov
dec
push
in
cmps
das
call
es
inc
sub
push
or
xor
out
ins
stos
add
dec
call
inc
jg
adc
and
loop
mov
pushf
jl
ja
sbb
xchg
xor
out
xor
push
out
cmp
cmps
adc
shl
(bad)
push
lock
scas
nop
mov
movzx
dec
xchg
(bad)
mov
fadd
add
int3
cmc
mov
adc
mov
out
stos
ins
out
mov
jmp
mov
or
jmp
inc
mov
adc
inc
jmp
out
inc
jo
xor
xchg
and
push
or
dec
invd
inc
icebp
add
sahf
sti
ja
xor
out
xchg
dec
jne
adc
adc
or
lea
shl
mov
mov
xchg
lea
xchg
js
rcl
adc
jns
sub
fldpi
dec
cmps
into
pop
fist
stos
arpl
sub
cmp
xor
or
mov
(bad)
jns
neg
jp
(bad)
pop
cmp
mov
cs
inc
fidiv
retf
lods
fdivrp
jmp
test
push
sbb
popf
cmp
add
loop
jmp
inc
xchg
xchg
and
mov
sbb
adc
mov
mov
push
inc
les
push
dec
jbe
inc
inc
push
(bad)
dec
pop
jmp
scas
mov
fs
inc
fimul
inc
jp
(bad)
mov
jle
sub
ins
lods
and
sbb
sbb
or
push
stos
cdq
cli
retf
retf
sbb
xchg
cmps
div
xchg
sbb
call
cmps
movs
pop
shl
and
lock
repz
fidivr
dec
iret
sub
stos
or
mov
pop
sbb
and
cld
in
(bad)
ds
ret
jg
fwait
cmc
inc
ja
xchg
ss
lea
dec
pushf
and
fld
cli
cmp
jle
repz
jnp
xor
push
push
arpl
fucom
ds
cmps
mov
fld
rcl
and
fs
or
sbb
sub
mov
push
mov
adc
fmul
push
pop
rcr
ds
jg
dec
call
or
je
movs
fwait
call
test
call
movs
mov
pushf
dec
fcom
into
xor
cmp
sub
cmp
adc
cmp
push
and
ins
int3
shl
ja
popf
pop
retf
add
mov
xor
mov
inc
mov
add
dec
jns
mov
in
cmp
mov
(bad)
fstp
stos
pop
and
outs
or
hlt
or
clc
ds
addr16
push
cld
push
cmp
jb
push
fs
add
cmps
retf
mov
gs
ins
cli
and
scas
cmps
lahf
mov
inc
out
(bad)
int
ror
cmp
enter
cmc
ror
mov
ret
pop
mov
cmp
cmps
sti
mov
add
imul
lods
outs
xchg
jnp
repz
xchg
pop
mov
xor
and
aad
ins
mov
imul
push
popf
scas
and
call
frstor
mov
sbb
sbb
stos
xchg
xor
dec
xor
cmps
std
loop
hlt
mov
imul
(bad)
jle
out
cmp
jmp
dec
dec
dec
inc
cli
mov
lock
test
je
jmp
add
out
ss
popa
cmp
jno
inc
jp
dec
es
(bad)
imul
out
loopne
lock
or
dec
mov
fisub
rcr
sub
loopne
xor
mov
aam
mov
scas
out
jmp
les
xor
inc
jge
daa
push
(bad)
lods
js
clc
or
jecxz
push
cld
test
pop
ucomiss
adc
pop
movs
mov
mov
iret
mov
mov
jo
nop
jae
mov
push
jmp
or
mov
dec
add
loop
into
nop
cmp
adc
ins
in
(bad)
mov
popa
inc
push
dec
dec
cmp
xor
sti
lods
call
mov
mov
lock
lea
adc
push
stos
ffreep
mov
test
and
mov
or
adc
push
dec
addr16
pop
cli
fnstcw
sub
sub
adc
and
sub
jg
icebp
int3
and
jecxz
push
scas
bound
push
mov
sub
retf
push
cmps
int
mov
mov
push
ds
repz
pop
int
jb
repnz
movs
ficom
jb
test
shl
xor
inc
push
jle
shl
(bad)
stos
mov
mov
clc
sahf
das
xchg
in
and
(bad)
dec
push
(bad)
in
jo
in
hlt
loope
pop
call
sub
add
in
cmp
ss
std
daa
mov
je
mov
shl
sub
les
push
jp
mov
fsubr
jne
mov
sbb
fstp
xchg
scas
mov
cmp
fild
and
cmps
aas
push
cmp
in
pop
mov
and
sub
adc
inc
jb
mov
adc
mov
ficomp
bound
sub
movs
push
sub
push
dec
mov
mov
mov
rcr
call
repz
push
jmp
pop
pop
or
aam
cli
outs
popf
dec
sub
cs
push
scas
jp
dec
loope
pop
push
fcomp
or
xchg
push
inc
gs
push
mov
stc
inc
mov
xor
cmc
in
xor
sbb
bound
repnz
(bad)
out
dec
mov
rcl
jb
out
aas
jo
xor
imul
lea
cdq
pop
or
xor
add
out
add
xor
clc
inc
xor
and
cmp
or
clc
and
arpl
dec
inc
and
xor
inc
mov
imul
jmp
rol
adc
out
sar
xor
xchg
mov
jmp
jae
push
push
in
ss
int3
aaa
fld
repnz
leave
and
movs
cmps
test
fst
cmc
or
dec
ror
fs
mov
pop
mov
into
icebp
into
scas
loopne
test
xchg
lahf
sub
jne
xchg
adc
jmp
cmp
jo
in
add
fcomp
cmp
aaa
nop
push
adc
or
jns
push
in
fwait
dec
mov
pop
xor
jns
mov
mov
pop
int
(bad)
adc
adc
out
or
mov
adc
and
sahf
lds
or
xor
add
add
enter
push
cli
mov
sti
mov
scas
cmp
shl
fldenv
inc
cmp
out
add
jbe
inc
mov
scas
(bad)
out
push
sbb
aam
gs
idiv
gs
icebp
mov
dec
aaa
es
mov
bound
shr
les
cmp
adc
push
gs
arpl
adc
xchg
sub
cdq
adc
fcmovbe
mov
retf
mov
aas
mov
aam
push
cli
sbb
fwait
sbb
rol
or
and
xor
push
fs
cmp
jbe
es
mov
pop
mov
out
jle
gs
adc
fdivr
imul
pop
adc
(bad)
das
xchg
retf
lea
or
cmp
ds
mov
add
mov
cmp
test
ins
sahf
mov
shr
inc
sbb
push
jl
jle
mov
fucomi
mov
or
adc
jecxz
sbb
dec
or
mov
jnp
pusha
loopne
xlat
stos
cmp
mov
fs
push
int3
test
retf
(bad)
sbb
lea
in
std
add
mov
jge
cmp
cmp
adc
sbb
arpl
out
call
mov
mov
cdq
dec
mov
and
sub
sahf
daa
out
push
dec
gs
(bad)
call
retf
mov
outs
outs
call
pop
iret
jno
call
outs
fldcw
rcr
or
push
xor
aaa
icebp
adc
frstor
addr16
lahf
jo
xor
add
(bad)
imul
stos
aas
in
sub
fucom
in
mov
aas
aaa
in
inc
jle
jmp
xchg
movs
mov
aam
aad
repnz
shl
dec
push
imul
(bad)
jns
add
mov
adc
push
xchg
ds
pop
test
sti
sbb
int
repnz
cmp
idiv
sub
lahf
xchg
xchg
mov
jbe
fwait
shl
sub
lods
dec
pop
mov
mov
mov
out
leave
popa
and
in
xchg
movs
or
outs
or
sbb
xchg
add
iret
in
xor
sbb
loopne
cmp
icebp
cmp
ss
ficomp
or
xor
std
fisub
outs
popa
adc
(bad)
daa
cmps
arpl
cmps
jge
outs
jecxz
popf
add
cli
xchg
xor
imul
inc
inc
cmp
aam
loop
int3
jae
sub
sub
jb
mov
dec
push
inc
out
adc
jge
sbb
cli
add
jb
push
adc
lods
mov
sub
mov
rol
(bad)
stc
push
add
jecxz
sub
push
cmp
emms
jnp
pushaw
mov
aam
jl
cs
jmp
jbe
xor
je
push
outs
adc
cmp
and
mov
das
imul
pop
pushf
inc
xchg
clc
push
aam
mov
cmc
loopne
test
mov
pop
(bad)
hlt
fimul
jne
ret
inc
xchg
jmp
mov
data16
sbb
add
inc
sub
push
rcl
dec
xchg
mov
dec
pop
push
(bad)
sbb
ins
test
test
push
lock
or
mov
and
pop
cwde
mov
pop
xor
shr
mov
fcomi
ror
push
pop
dec
sbb
fnsave
pushf
out
mov
pop
or
ds
xor
iret
stc
imul
inc
imul
xchg
rcr
xchg
dec
jmp
mov
je
je
out
das
and
mov
aaa
or
push
retf
inc
cs
dec
imul
mov
ja
loop
jp
aas
mov
sbb
out
jo
jmp
leave
sub
fdivr
fsubr
bsf
loopne
xchg
enter
xchg
pop
scas
mov
mov
in
imul
mov
ss
push
into
loope
hlt
sub
imul
cmps
mov
mov
fadd
add
out
mov
xor
scas
inc
mov
ins
dec
in
fist
mov
jmp
mov
xchg
push
inc
mov
ja
jne
popw
iret
xlat
pop
(bad)
call
push
or
leave
inc
ja
ins
jle
cmp
or
xor
jae
leave
and
or
mov
push
pop
in
repnz
mov
fimul
outs
mov
lahf
inc
jle
sub
and
test
xchg
pusha
xor
jb
bound
or
push
inc
aaa
push
xchg
mov
pop
sub
cld
sbb
pop
mov
mov
fimul
aam
sbb
mov
sbb
mov
adc
mov
xchg
imul
cmp
data16
cmp
psubsb
outs
retf
mov
xchg
mov
mov
push
arpl
jecxz
retf
addr16
and
(bad)
adc
cmps
jae
jge
movd
scas
jmp
pop
inc
xlat
pushf
jmp
lock
sbb
lds
call
rcr
test
mov
scas
sub
not
imul
ftst
mov
(bad)
in
mov
fisttp
lods
loopne
les
inc
loopne
outs
fcomp
(bad)
adc
je
jns
and
mov
in
mov
and
ror
cmp
xor
cmp
loopne
inc
jl
cmp
jno
cmp
fbstp
xchg
cmp
pop
daa
sub
fstp
fs
xchg
int3
call
push
imul
jl
xchg
call
lea
outs
(bad)
fsub
xchg
call
fild
clc
or
outs
(bad)
bound
sar
dec
and
mov
aas
cmp
out
loop
dec
neg
ret
mov
pop
mov
sti
mov
jno
pop
bound
add
(bad)
in
bound
or
nop
lods
sub
jmp
push
sub
lods
in
(bad)
sbb
and
jo
cmp
fdivr
(bad)
hlt
cmps
(bad)
mov
cwde
scas
xor
xor
cmp
clc
scas
(bad)
jns
add
or
mov
mov
push
fcomp
xor
sbb
dec
mov
jp
bound
fld
pop
shl
pop
daa
retf
ja
call
cmp
sub
scas
fucom
jne
test
sbb
mov
fild
imul
dec
std
bound
pop
sar
iret
jle
ja
jge
daa
clc
(bad)
pop
pop
je
hlt
pop
sub
js
test
xchg
push
xor
lods
movs
fwait
inc
mov
lahf
mov
mov
cmp
mov
jg
clc
std
dec
adc
jo
imul
daa
xchg
stos
xor
loopne
mov
ds
push
cmps
fisub
int
cmp
stc
pop
and
xor
sub
call
lahf
sbb
mov
mov
ss
pop
add
xor
mov
(bad)
sbb
ins
sub
xchg
or
repnz
sub
add
ins
mov
and
test
ins
daa
fnsave
faddp
loop
jne
loopne
ss
jmp
fild
mov
jb
pop
aad
ror
daa
retf
xchg
xchg
ins
aaa
arpl
xor
add
movs
ins
dec
push
stos
test
sbb
xlat
lds
pop
vpackuswb
or
or
xchg
jmp
jl
and
mov
and
stc
rcl
movs
shr
fwait
xlat
aad
jnp
cmp
pop
out
inc
nop
jmp
pop
dec
dec
loop
in
and
sbb
cmp
mov
outs
xchg
sub
loop
movs
std
mov
(bad)
fnsave
jg
arpl
mov
adc
imul
inc
ins
dec
retf
mov
aas
push
adc
jmp
scas
and
cmp
fnstsw
data16
imul
jg
sbb
push
shl
fisttp
dec
inc
bound
loop
or
jge
push
in
in
je
out
jo
sbb
repz
jmp
ss
sbb
je
jnp
sub
xchg
mov
pop
xor
cld
inc
inc
mov
lods
add
or
cmp
mov
cmp
data16
dec
mov
jnp
inc
mov
lods
jns
mov
mov
pusha
imul
push
sub
inc
adc
inc
push
rcl
pop
test
pusha
cdq
xor
add
mov
sahf
sbb
or
mov
mov
sbb
cmp
mov
outs
dec
mov
test
xchg
sub
push
les
push
js
dec
jo
int3
div
add
repz
adc
mov
aaa
mov
imul
cld
or
mov
ins
pop
mov
arpl
sub
enter
(bad)
sub
retf
movs
jle
retf
fucomip
mov
dec
jg
or
add
les
pop
and
cli
push
in
or
das
inc
(bad)
jne
aad
inc
out
je
xor
into
xor
pop
repnz
das
mov
loopne
and
sbb
xor
add
mov
ficom
cmp
cmc
ret
mov
lds
enter
xor
mov
pop
jmp
fwait
sub
je
xchg
jle
push
bound
or
sub
lock
xchg
sbb
fbstp
scas
push
mov
in
sub
cmp
push
mov
(bad)
loop
pop
lods
cmps
mov
adc
dec
push
pop
pop
xor
addr16
stos
xor
jo
out
cmp
pop
mov
outs
pop
fstp
inc
popa
in
adc
or
lds
addr16
and
(bad)
lock
xchg
jecxz
jbe
jb
pushf
call
xor
sbb
rol
adc
ins
out
xlat
sub
push
mov
aaa
imul
movs
xlat
inc
adc
jo
in
enter
(bad)
out
in
jne
loopne
retf
push
movs
daa
sub
fnstenv
idiv
pushf
sub
leave
mov
retf
xchg
pop
or
pop
mov
mov
dec
scas
popf
mov
aas
pop
push
inc
ss
sub
call
repnz
push
mov
outs
fs
int3
clc
ret
rcl
cmp
ror
movsx
in
sbb
pop
sbb
adc
lods
jne
adc
pop
sbb
push
dec
repz
mov
add
out
xor
push
xchg
inc
xor
fcomip
jnp
mov
cmps
shl
test
adc
mov
in
dec
jae
imul
mov
in
rol
dec
dec
ror
xchg
jecxz
pop
aam
add
pushf
xchg
cmp
inc
xlat
push
clc
adc
mov
pusha
push
gs
xchg
int
xchg
in
ss
or
out
shl
push
or
sbb
fucom
add
fnstenv
jmp
jmp
pop
jae
push
rcl
mov
jp
repz
xlat
ror
int3
cmp
add
mov
push
push
mov
xchg
inc
or
xchg
push
aas
test
pop
fxtract
push
rcr
add
movs
add
mov
fdivr
test
mov
jno
fnstcw
dec
inc
outs
stos
mov
(bad)
loope
pop
sti
fwait
sub
xor
mov
mov
stos
imul
in
(bad)
jno
arpl
add
dec
push
pop
xchg
inc
lahf
sub
out
xchg
cdq
push
xor
push
inc
push
popf
mov
pusha
or
mov
cs
and
xchg
mov
ror
retf
(bad)
push
int
push
jl
adc
into
jl
in
jg
sbb
out
pop
push
or
cmp
mov
aad
pop
sub
dec
out
std
or
aam
mov
mov
out
jmp
scas
clc
es
pop
adc
push
push
add
lock
cmp
dec
ss
jns
imul
icebp
inc
pop
or
and
repnz
jle
mov
xchg
or
int3
out
pop
(bad)
mov
lds
mov
test
out
out
loop
mov
push
in
mov
cmps
sub
aaa
jle
mov
mov
cmp
int
xchg
adc
movs
push
fst
popf
cld
push
daa
xchg
sti
enter
mov
nop
push
scas
jmp
mov
pop
inc
movs
jb
mov
or
xchg
pop
outs
pop
mov
mov
adc
adc
dec
scas
pop
inc
mov
adc
les
(bad)
cli
push
int
fld
jp
sub
cli
xor
push
hlt
cli
fld
mov
jae
cli
gs
lahf
(bad)
cli
pop
xor
sahf
push
mov
adc
push
inc
adc
dec
ret
sti
mov
test
(bad)
pushf
dec
ficomp
mov
xchg
cmp
xchg
in
js
add
es
or
push
mov
dec
mov
fiadd
jmp
fnsave
sub
int3
ins
ja
call
dec
add
jecxz
xchg
dec
je
test
pop
mov
dec
gs
test
pushf
sbb
je
sub
and
fidiv
sahf
call
xor
ins
dec
in
scas
inc
push
push
out
mov
xchg
mov
xor
and
not
pop
jmp
sub
jge
cld
dec
cmp
int
outs
lock
sub
cmp
sub
inc
sub
pop
cmp
retf
addr16
pop
das
mov
pop
lds
cmp
jecxz
sub
cmps
test
pop
call
inc
inc
hlt
fist
xchg
or
fistp
rol
xor
push
movs
add
aaa
xchg
cmp
hlt
inc
sbb
(bad)
adc
xchg
fsub
mov
pop
adc
xchg
inc
jl
data16
repz
adc
dec
push
arpl
dec
sub
(bad)
sub
mov
ins
stos
cld
movs
cmps
ds
add
xor
adc
fmul
sub
mov
hlt
into
add
aas
xor
inc
or
stc
js
arpl
mov
(bad)
pop
pop
xor
leave
add
push
push
inc
mov
inc
pop
dec
iret
mov
mov
nop
enter
(bad)
pop
jno
xor
movs
stc
dec
pop
jbe
arpl
movsx
cmps
cmps
(bad)
out
mov
jg
mov
add
shl
pusha
lahf
fwait
sub
and
cmp
add
neg
push
and
mov
clc
inc
mov
adc
mov
and
ja
mov
pushf
(bad)
ret
(bad)
lahf
es
mov
pop
adc
pop
lods
dec
push
mov
sbb
sub
cmp
xor
data16
dec
or
sbb
loope
add
mov
xlat
sbb
pop
jl
rol
mov
push
movs
inc
scas
xchg
pop
jl
push
cdq
sub
in
icebp
sbb
repz
fcomp
pop
jo
pop
cmp
repz
pop
sbb
stos
pusha
aad
cmps
jmp
add
int
adc
dec
cdq
inc
pop
xor
bound
loope
adc
stos
push
movs
inc
aas
stos
cwde
sbb
call
nop
cmps
(bad)
or
mov
test
popf
pop
dec
call
pop
(bad)
cmc
out
adc
icebp
in
test
mov
leave
cmp
jg
xchg
outs
cmp
fs
push
dec
jge
ja
lods
pop
movs
dec
mov
outs
inc
and
cmc
retf
mov
repz
movs
hlt
dec
inc
push
jno
sub
pushf
(bad)
(bad)
jbe
shl
mov
imul
(bad)
push
xor
inc
xchg
fisub
inc
rcl
clc
cmp
sub
out
jns
fs
inc
je
xchg
adc
dec
push
jl
shr
xchg
push
jle
fcomp
or
inc
call
adc
fs
jg
or
std
ins
pop
xchg
and
lods
daa
adc
and
sub
mov
scas
aaa
mov
sub
xchg
jno
lods
arpl
je
fucomip
aas
and
cld
test
push
sub
pop
fs
mov
jecxz
sub
test
lock
xchg
mov
sti
fdivr
dec
(bad)
push
xor
(bad)
cmps
icebp
cwde
ds
out
fstp
popa
and
cmp
int
push
sub
push
cli
daa
inc
inc
push
and
movs
bound
dec
and
adc
(bad)
or
lods
fldenv
cdq
add
mov
dec
dec
push
sbb
std
daa
cmp
xor
aaa
call
sbb
into
pop
push
icebp
jl
movs
ret
retf
inc
mov
movs
in
pushf
push
fwait
mov
aaa
sbb
pushf
retf
sub
in
bound
or
lea
cmp
cmp
data16
dec
cld
mov
xor
std
jp
fdiv
jmp
ins
lock
cmp
ficomp
ja
push
inc
push
mov
ffree
jnp
rol
stos
aad
jmp
and
add
add
in
dec
jecxz
call
add
popf
(bad)
out
or
inc
push
pop
(bad)
mov
mov
add
das
ret
or
push
sub
add
cs
or
add
call
jmp
dec
addr16
stos
xchg
push
es
das
mov
in
mov
imul
mov
rcl
or
push
div
movs
fiadd
fs
jae
clc
jo
out
mov
out
mov
fnclex
ret
fdivr
pop
mov
popa
add
dec
cdq
sbb
xchg
ds
pusha
cmps
cmp
mov
dec
or
jo
not
cmp
dec
xchg
xor
imul
pusha
jle
add
inc
fisubr
pop
clc
xor
jl
cmps
retf
push
call
je
jo
push
out
mov
in
push
cmps
inc
mov
enter
sahf
jo
inc
push
in
sahf
outs
jl
mov
mov
adc
push
pushf
clc
add
jmp
or
dec
sub
int
imul
fimul
xchg
sub
mov
dec
jg
loope
adc
mov
shr
or
stc
lods
pop
dec
mov
test
add
jge
ds
das
imul
add
sbb
scas
movs
dec
xchg
test
pop
pop
jecxz
sahf
out
ds
pop
push
inc
mov
xchg
mov
je
push
xlat
sbb
in
(bad)
pop
xor
sbb
push
test
mov
inc
push
and
push
pop
jmp
fwait
xor
cli
dec
les
sbb
imul
pop
sub
sub
loopne
stos
out
jno
mov
cmc
sbb
fs
enter
dec
mov
out
out
or
ins
lahf
popa
mov
mov
in
inc
cmp
or
lds
sub
jp
leave
out
loop
(bad)
mov
xchg
push
push
vpaddsb
cdq
sub
out
add
in
mov
aad
dec
adc
xchg
clc
or
pop
sahf
sub
xchg
jmp
sub
ins
out
xchg
clc
adc
hlt
lods
or
retf
xchg
jb
fwait
pop
repz
xor
in
mov
retf
cmp
pop
push
or
xchg
vandnps
sti
imul
jb
ins
cmp
add
mov
or
inc
pop
ror
mov
mov
xor
jmp
xor
push
lock
fadd
ficomp
lods
dec
inc
mov
mov
sbb
mov
cmc
adc
dec
std
push
int
inc
loope
std
pop
fwait
jne
add
pop
mov
mov
xchg
xchg
in
loopne
mov
mov
test
int3
fnstsw
cdq
inc
ds
mov
pusha
push
in
dec
mov
adc
aam
loopne
pop
jo
add
mov
pop
adc
mov
sbb
pop
mov
adc
aad
cmp
dec
and
sahf
mov
in
pop
je
loop
fprem1
outs
or
movs
retf
das
mov
dec
(bad)
stc
mov
dec
enter
xlat
rcr
(bad)
mov
sti
fidiv
loopne
and
pop
jo
jle
mov
jbe
or
retf
cmp
add
into
inc
mov
adc
je
shr
cmc
addr16
mov
retf
das
lds
inc
arpl
mov
and
(bad)
pop
push
sub
sub
fldenv
loopne
dec
in
xchg
arpl
adc
cmc
xchg
inc
mov
int
outs
adc
es
call
fimul
shl
fwait
pop
cmp
cmps
sar
scas
fwait
inc
data16
cmp
or
adc
outs
add
and
mov
xchg
(bad)
iret
dec
pop
aas
icebp
add
repz
sub
adc
loope
jno
popa
jle
ret
icebp
xchg
fldenv
xchg
hlt
xor
out
ret
mov
sub
push
cs
sbb
or
mov
cmp
in
sbb
(bad)
pop
and
call
imul
das
inc
(bad)
ja
sub
sbb
or
test
jg
cmps
push
jle
push
pop
loop
(bad)
out
add
cli
and
popf
je
mov
dec
icebp
sub
rol
out
pop
mov
mov
int3
pop
out
daa
jae
hlt
mov
pop
(bad)
push
fld
mov
or
aas
dec
xor
pop
fwait
or
add
out
inc
inc
jl
leave
or
push
dec
in
xchg
call
push
xchg
int3
loopne
xor
mov
test
std
mov
fld
ja
cmp
addr16
bound
dec
(bad)
and
xchg
push
popf
lods
dec
mov
dec
jo
scas
add
push
adc
dec
fsubr
inc
in
xchg
cmp
or
(bad)
pmulhw
add
jmp
icebp
test
inc
icebp
add
inc
xor
ret
and
es
jge
stc
lds
dec
(bad)
sub
sub
test
movs
fadd
in
cmpps
(bad)
call
pop
sbb
sahf
aaa
pop
sub
rol
pop
stos
jmp
mov
mov
pop
or
addr16
pop
in
and
stos
xchg
shr
mov
cmp
popa
test
adc
hlt
push
or
mov
xor
xchg
adc
jno
stos
jmp
iret
int
inc
out
sub
sub
jle
sub
cmp
mov
push
in
lods
ret
cmps
repz
pop
mov
jge
inc
push
cmp
jns
xor
jg
movs
(bad)
mov
push
(bad)
pushf
pop
test
jmp
mov
cmps
adc
sbb
outs
cmps
mov
(bad)
jp
out
aad
or
jbe
out
loope
mov
mov
and
movs
inc
outs
(bad)
or
mov
pop
inc
in
out
dec
rcr
fistp
lods
jmp
les
inc
ins
das
mov
imul
xchg
inc
xor
dec
pop
arpl
scas
xor
sub
fistp
pop
outs
repz
rol
jmp
stc
push
enter
repz
stos
inc
shr
push
mov
cmp
rcl
mov
lods
sub
push
mov
popa
jg
xchg
add
(bad)
pop
pusha
push
or
mov
bound
(bad)
jne
or
dec
scas
mov
sub
retf
jle
shl
inc
adc
rcr
cmp
stos
pop
xor
ins
pop
test
lahf
pop
fnstcw
lock
xchg
test
lds
dec
push
mov
xchg
test
xor
inc
mov
push
(bad)
adc
dec
pop
movs
xchg
adc
add
cwde
sub
pop
je
xchg
and
call
pop
jg
fs
jecxz
mov
sub
outs
or
iret
leave
pushf
add
cmps
or
mov
int
inc
xor
addr16
jmp
pop
es
pop
sub
xchg
add
pop
inc
sbb
adc
lods
out
pop
dec
pop
je
jae
sub
dec
les
test
push
cmp
movs
sbb
out
retf
push
add
jg
jp
scas
jecxz
or
lock
push
(bad)
(bad)
icebp
pop
add
ret
mov
jne
push
call
or
dec
(bad)
aam
push
in
jns
xchg
fisttp
test
push
jne
leave
scas
movs
mov
cld
mov
imul
mov
nop
stos
scas
es
sub
pop
and
jle
stc
test
pop
in
push
mov
addr16
pop
inc
xor
int
loop
push
add
cmpxchg
or
pushf
push
or
adc
shl
aam
adc
(bad)
out
inc
or
pop
jae
sahf
sub
mov
cmp
pop
and
repnz
imul
and
test
mov
into
aaa
ret
dec
pushf
mov
clc
mov
push
dec
pop
lahf
xor
popf
icebp
xor
jns
ret
out
scas
(bad)
xchg
sub
sbb
mov
shl
and
in
or
jl
aas
cmp
push
pop
ss
mul
xor
cmp
push
cmp
pop
rcl
outs
pop
shl
cwde
cmp
int
mov
pop
sbb
mov
sbb
lock
in
mov
mov
popf
movaps
cwde
sbb
dec
ins
sbb
jae
fwait
dec
cmps
test
sbb
xchg
adc
inc
adc
or
dec
nop
movs
out
dec
cmp
xchg
lock
cmp
leave
fstp
std
xchg
dec
sti
inc
fbstp
leave
pop
into
stos
outs
push
scas
or
ret
adc
call
mov
mov
ret
or
fldcw
inc
out
loope
loopne
dec
push
sub
shr
xor
cli
push
nop
loope
mov
cmp
test
dec
shl
repz
mov
cmp
fwait
icebp
bound
jge
inc
mov
sahf
adc
loop
and
loop
neg
push
aad
lock
xor
mov
mov
pusha
outs
xchg
or
xor
stc
sub
fcom
sbb
outs
mov
stos
mov
jge
test
mov
cdq
stos
out
es
mov
mov
dec
(bad)
dec
mov
pop
jns
fwait
cs
mov
sbb
repz
mov
int3
and
retf
xchg
pop
or
inc
(bad)
pop
dec
jl
dec
dec
(bad)
addr16
add
sub
in
push
nop
cmp
pop
bnd
ds
mov
mov
add
push
pushf
test
pop
xchg
lea
pop
or
aam
and
add
fidiv
lods
xchg
loope
xchg
jmp
dec
dec
fld
pop
and
test
bound
mov
jge
fsubrp
add
jae
cmc
scas
sub
repnz
daa
jns
ins
(bad)
sbb
xchg
push
in
aaa
add
shr
pop
stos
and
outs
(bad)
sub
sub
mov
xchg
cli
adc
xlat
jo
dec
call
cmps
sub
cwde
rcl
test
ror
shl
repnz
fstp
scas
int3
jns
(bad)
daa
into
cmps
or
sub
sbb
repnz
fucomi
push
ds
dec
mov
scas
mov
je
adc
xchg
out
and
adc
outs
fidivr
movs
sbb
push
ja
xor
out
add
movs
add
sub
iret
cmp
jl
enter
(bad)
out
push
dec
or
in
int
mov
popf
pushf
cmp
fild
fdiv
mov
jl
fldcw
mov
jecxz
stos
mov
scas
call
cmp
cmp
out
add
imul
std
call
and
mov
mov
inc
mov
rcr
frndint
pop
out
push
and
adc
lahf
sti
lods
xor
push
rcl
sbb
sub
mov
fbstp
mov
jmp
or
adc
pop
pop
and
add
sub
add
adc
vpunpcklwd
add
adc
lds
ror
xor
icebp
dec
enter
movs
test
mov
out
inc
iret
mov
mov
fsubr
jmp
leave
out
sbb
mov
and
jecxz
mov
mov
cmp
mov
aas
mov
mov
clc
inc
leave
cs
cmp
es
xchg
pop
xchg
pusha
test
sbb
aad
sbb
and
cmp
test
dec
ret
xor
mov
cld
scas
jp
rcl
movs
(bad)
jns
mov
sbb
jmp
out
pop
sbb
xor
mov
movs
fidiv
fistp
int
push
cmp
(bad)
das
inc
cmp
aas
fcmovnu
fimul
mov
adc
or
fisub
pop
ins
pusha
(bad)
mov
loopne
aaa
cmps
or
cmp
int
mov
loop
test
mov
pop
mov
les
int3
daa
add
xlat
fcom
jo
inc
in
and
scas
retf
test
ret
xor
mov
aam
lea
mov
mov
aad
cmp
rcl
inc
cmps
mov
pop
xor
pop
mov
ror
(bad)
xchg
adc
push
cmp
cmp
cmp
push
fimul
pop
cdq
sub
leave
pusha
cwde
rol
popa
mov
stc
jns
sub
rcl
js
in
ss
cdq
out
popf
loop
xchg
sti
mov
in
sti
jg
inc
retf
in
inc
add
push
sbb
jp
or
pop
mov
jmp
into
hlt
push
cmps
loop
gs
test
repz
outs
push
push
lahf
(bad)
das
mov
test
xchg
sbb
daa
jbe
xor
xchg
mul
sbb
int3
das
stos
dec
and
rcl
adc
jae
in
(bad)
int3
into
arpl
cmp
mov
imul
mov
mov
pop
xor
xor
xor
add
add
cli
stos
xlat
ror
out
stos
movups
jp
push
loop
and
adc
cmp
mov
data16
adc
in
inc
or
inc
dec
mov
mov
mov
jae
mul
pop
and
ret
std
jmp
mov
and
add
pop
inc
rol
and
jo
cmp
ds
js
dec
lods
hlt
mov
scas
lds
push
lock
xor
jo
push
adc
mov
std
movs
jns
das
xor
ret
sbb
push
adc
adc
xchg
(bad)
(bad)
cli
sahf
xchg
sti
push
pop
mov
outs
xchg
lahf
(bad)
push
cmp
enter
push
sbb
lods
xchg
mov
pop
mov
mov
dec
dec
stc
or
fcmovnb
add
xchg
xchg
xchg
dec
jmp
retf
cwde
ins
mov
pop
inc
xchg
push
cdq
and
cdq
lock
add
inc
xchg
mov
adc
aad
arpl
es
cmps
in
das
hlt
adc
test
sar
arpl
pusha
shl
xor
in
sbb
clc
aas
jg
lods
mov
push
std
sbb
sar
xchg
xchg
mov
mov
sub
rcr
mov
imul
pop
adc
or
inc
rcr
popa
cmp
pop
je
pop
int
xlat
aam
adc
dec
js
push
lea
add
jns
add
or
repz
dec
cmp
std
bound
aas
push
loopne
xlat
retf
sub
or
jae
movs
iret
xor
(bad)
test
jg
push
or
xlat
loop
dec
retf
xor
add
cmp
mov
cmc
mov
cmp
sahf
(bad)
cmp
xchg
push
pop
inc
dec
cmps
pop
cmp
cwde
sub
imul
movs
or
and
pop
jnp
mov
rol
lods
hlt
pop
cmp
push
xchg
outs
aam
add
ins
mov
adc
shl
daa
mov
inc
sbb
loop
retf
lods
fldenv
aam
fsub
pop
lea
pop
std
lock
ret
in
or
dec
mov
jecxz
xchg
sub
push
xchg
in
pop
lea
jmp
aam
mov
mov
add
fcomp
shl
not
movs
(bad)
bound
ror
shl
adc
or
sahf
xor
mov
mov
push
aaa
inc
fwait
xchg
cwde
xlat
mov
pop
or
in
in
pusha
adc
cwde
mov
add
jmp
mov
cwde
push
sbb
add
std
sbb
out
mov
jnp
push
bound
dec
sub
imul
nop
rcr
sti
rep
adc
dec
repz
fistp
bound
cmp
jl
xchg
call
bound
arpl
or
pop
(bad)
push
mov
cmps
gs
in
int
bound
mov
adc
jae
sub
mov
loopne
retf
inc
ds
add
adc
lea
mov
aas
fistp
rcr
dec
mov
icebp
jmp
(bad)
into
gs
rcl
jae
mov
(bad)
leave
rcr
test
jnp
push
pusha
sbb
mov
or
xor
inc
pop
fisub
cmp
jg
mov
mov
fidiv
add
(bad)
push
imul
daa
pop
fiadd
xchg
movs
test
mov
and
leave
rcr
or
and
inc
pop
add
dec
out
test
inc
inc
iret
mov
js
inc
dec
cdq
sar
test
jmp
aas
lods
push
adc
adc
ss
or
aas
call
mov
retf
sub
push
data16
mov
cmp
add
add
or
push
retf
dec
cmps
repz
adc
fsub
lock
das
sar
adc
push
imul
cmp
jnp
mov
lea
fwait
mov
inc
mov
loopne
dec
and
std
push
repnz
and
jnp
imul
fs
dec
add
(bad)
or
xlat
xor
cld
cmp
sahf
mov
xchg
pop
jmp
stos
xchg
(bad)
aaa
sbb
loope
jb
cmp
sbb
lock
xchg
xchg
jnp
(bad)
leave
scas
jl
push
loope
(bad)
out
or
push
in
jns
xor
imul
fnsave
mov
sbb
stos
neg
ret
(bad)
or
pop
outs
adc
hlt
adc
mov
imul
mov
cmp
fld
imul
cwde
or
jno
add
xchg
mov
cmc
aad
fcomp
mov
mov
xchg
xchg
mov
xor
mov
in
scas
mov
jmp
mov
lds
push
in
js
and
call
retf
daa
pop
arpl
popa
in
inc
outs
sub
mov
pop
adc
jo
push
dec
outs
inc
adc
pushf
mov
push
mov
cwde
repnz
std
mov
cmp
sbb
pop
jno
clc
ror
test
push
fdivr
cmp
jmp
sahf
lea
mov
push
in
mov
add
(bad)
jo
mov
xor
xor
xor
out
push
mov
imul
movs
sbb
ror
sbb
aaa
and
sbb
inc
mov
push
ret
imul
arpl
sbb
mov
neg
push
adc
xchg
lds
mov
or
xchg
call
jle
inc
dec
lahf
push
repz
sar
(bad)
hlt
sbb
cmc
fnstsw
dec
dec
retf
xor
scas
ins
xchg
(bad)
xchg
test
dec
pop
or
push
lea
mov
cmp
jno
stos
jne
retf
or
lock
(bad)
mov
aas
xor
push
jnp
xchg
cs
jmp
sbb
cmps
dec
ins
out
jecxz
cmovnp
ror
lds
cmp
cwde
xor
aam
dec
imul
jle
adc
push
imul
jmp
dec
or
mov
cli
arpl
mov
ret
in
sub
sub
dec
addr16
out
scas
out
in
pop
rcl
xor
jmp
test
sbb
cld
add
shr
neg
lods
jmpw
push
xchg
in
fcomp
repz
add
jne
jge
or
adc
push
les
fsubr
mov
es
add
loop
xchg
outs
pop
pop
mov
movs
pop
push
inc
jp
shr
ja
lods
fcmovb
xlat
sbb
sub
add
lods
pop
pop
cmps
adc
jnp
fiadd
sar
mov
xchg
add
sub
jns
adc
int3
(bad)
add
fst
ins
jo
or
mov
and
(bad)
pop
push
jnp
xchg
mov
js
dec
sub
pop
jmp
(bad)
mov
cld
inc
cmp
adc
cmp
mov
sub
sar
int3
inc
scas
dec
sbb
imul
xor
mov
ja
jmp
xchg
push
dec
xchg
fdivp
xlat
sub
add
xchg
jle
mov
rcr
int
nop
xchg
mov
mov
xchg
xor
aad
loopne
(bad)
and
sub
fisub
xor
stos
xor
ret
pop
and
cli
mov
mov
lahf
scas
and
cli
addr16
mov
mov
push
cmp
daa
jnp
push
inc
add
xor
loop
mov
int3
addr16
jecxz
sbb
neg
jns
int
inc
fimul
add
adc
out
mov
pop
dec
gs
fld
xor
cdq
pop
test
pop
dec
dec
pop
movs
leave
addr16
inc
pop
mov
into
fsin
cld
mov
(bad)
jg
ja
push
movlps
les
and
mov
sub
ret
sbb
xor
cmp
pop
mov
xchg
push
stc
daa
pop
mov
call
call
jnp
test
aas
dec
xor
cmp
iret
mov
pop
add
jbe
push
push
scas
sub
push
sbb
and
sbb
xor
dec
dec
aad
out
mov
push
cmc
lock
or
jl
fstp
dec
test
dec
add
arpl
sub
jecxz
dec
add
jae
push
push
dec
rcr
inc
loop
dec
sub
push
mov
adc
push
ret
push
sbb
pop
imul
fcmovu
(bad)
fimul
lea
push
adc
jae
test
call
mov
sub
popf
into
js
xlat
enter
jmp
jb
fsubrp
push
dec
and
mov
inc
mov
push
gs
mov
jo
cmpxchg
pop
hlt
add
and
mov
lods
out
sub
test
fidiv
out
mov
dec
mov
sbb
sub
mov
inc
js
jmp
mov
fld
ret
ins
ret
int3
call
pop
fsub
cmps
ror
dec
aam
test
rcr
sub
(bad)
hlt
jnp
jae
mov
test
lock
jbe
nop
icebp
inc
pop
dec
mov
sbb
popa
sar
popf
jle
mov
push
ret
push
in
das
push
sbb
adc
mov
mov
cwde
and
adc
push
xor
mov
call
mov
inc
in
and
sbb
inc
dec
stc
jo
inc
(bad)
movs
mov
push
js
jmp
xchg
mov
mov
inc
enter
(bad)
jb
int3
mov
dec
cs
or
jns
in
mov
js
add
mov
imul
pop
ret
mov
and
add
xchg
jmp
mov
adc
in
xor
dec
push
scas
and
and
mov
in
ds
in
push
push
out
das
nop
nop
rcl
pusha
fs
outs
(bad)
jp
xchg
or
adc
loope
cmp
xchg
shr
ins
aam
repnz
mov
hlt
jno
inc
pushw
dec
pop
sbb
adc
xor
loopne
push
mov
movs
movs
fldcw
jbe
xchg
(bad)
mov
xlat
cmp
sbb
and
jecxz
dec
push
lds
dec
(bad)
cmp
adc
nop
into
or
ret
hlt
mov
sbb
and
mov
retf
(bad)
arpl
fld
xor
xor
sub
jnp
xchg
add
popf
push
into
aam
fcmovb
sbb
mov
inc
mov
jne
sbb
enter
jbe
(bad)
hlt
add
loope
pop
push
xor
sbb
mov
xchg
repnz
inc
xchg
dec
mov
(bad)
pop
mov
sahf
dec
fdivr
dec
fld
aam
es
stc
pop
mov
mov
(bad)
jmp
lods
lea
pop
scas
pop
mov
xchg
sbb
push
adc
xor
and
jmp
cdq
dec
ins
lds
mov
scas
or
adc
aaa
sub
push
sub
xchg
add
adc
sbb
mov
leave
mov
mov
cmp
or
mov
adc
popf
push
js
xchg
(bad)
mov
loope
jecxz
push
fdivr
aam
dec
and
sti
mov
pop
fcomp
jae
nop
push
ficomp
jle
inc
pop
push
adc
jb
es
enter
pop
push
push
and
dec
xchg
add
test
adc
adc
fadd
pop
fwait
das
hlt
(bad)
loope
xchg
cmc
clc
mov
fist
jge
pushf
mov
(bad)
out
push
jp
and
loope
jl
or
or
pop
sbb
fmulp
enter
pusha
repnz
or
pop
jle
inc
shr
sub
mov
jge
push
test
dec
push
pop
pop
add
xchg
cdq
test
sar
outs
in
scas
into
cs
push
sub
pop
gs
pop
shr
and
push
push
sub
sbb
adc
adc
std
test
out
cmp
fwait
push
imul
pop
mov
dec
(bad)
shl
pop
arpl
pop
iret
out
and
imul
cld
call
(bad)
sbb
shl
test
rcr
and
mov
retf
jnp
inc
sub
dec
fisttp
jo
sahf
dec
cld
pop
add
(bad)
adc
(bad)
cld
xchg
mov
add
ss
int3
jns
test
mov
mov
pop
(bad)
dec
adc
lds
shl
mov
retf
call
loopne
iret
xor
ss
fist
sbb
and
xchg
sahf
and
mov
repz
push
scas
loope
aas
arpl
and
scas
dec
(bad)
popf
or
jl
stos
(bad)
aaa
jnp
pop
sbb
frstor
xlat
sbb
cmp
(bad)
ror
xchg
sbb
loopne
into
push
inc
nop
fist
push
xor
xchg
cmp
arpl
loope
sbb
add
xor
(bad)
xchg
iret
std
lahf
xor
xor
out
in
ret
inc
add
repnz
push
lods
test
in
bound
je
jno
sbb
icebp
sub
dec
rep
mov
retf
inc
lahf
cmp
inc
xchg
add
cmp
push
jne
arpl
sbb
je
rcr
mov
jb
pop
fmul
out
jnp
sub
mov
push
lds
aas
jno
movs
or
icebp
sub
shr
js
pop
add
jmp
jo
icebp
callw
rcr
jmp
rcl
fst
out
clc
xor
ret
or
pop
xor
xor
mov
dec
cmp
mov
test
pop
ins
jnp
jmp
fld
push
xchg
aaa
sahf
lods
pop
cmps
or
adc
cmp
test
dec
movs
xchg
into
in
and
rcl
push
gs
test
adc
jecxz
imul
and
and
jp
cdq
pxor
div
mov
dec
jg
mov
fsubr
stos
sub
mov
call
mov
cmp
add
imul
in
inc
call
sbb
(bad)
iret
movs
pop
out
and
inc
xchg
iret
pop
pushf
pop
call
mov
(bad)
leave
push
add
lock
ror
call
ss
dec
sbb
jg
sbb
and
push
out
and
sub
xchg
cmp
loopne
push
cld
outs
stc
add
mov
cmc
mov
ja
or
aad
mov
aaa
jge
xor
pop
jge
lods
loopne
sbb
ret
jbe
xor
movs
and
scas
xchg
or
pop
jecxz
outs
ret
fdivr
pop
mov
xchg
dec
movs
mov
loopne
pop
lods
cwde
jae
or
xor
enter
add
iret
mov
hlt
mov
mov
das
call
jno
daa
jecxz
ss
adc
pop
push
int
mov
clc
add
fs
cld
aam
lea
jmp
dec
push
add
inc
mov
lea
ffreep
not
enter
jo
aad
div
pop
fmul
sar
je
cdq
and
sub
and
jnp
(bad)
push
lods
in
xchg
jg
sub
pop
sbb
leave
gs
dec
mov
rcr
test
in
mov
xor
clc
dec
cld
or
mov
sbb
in
repz
shl
pop
jge
push
arpl
and
pop
inc
jmp
mov
inc
aas
sbb
xchg
movs
mov
pusha
cmc
in
daa
sbb
retf
in
pop
add
cmp
mov
sub
jns
mov
js
test
and
xchg
push
jmp
xor
dec
dec
push
rol
dec
push
xchg
stc
or
imul
sbb
popf
aad
jbe
push
hlt
lods
movs
ja
aaa
loopne
pop
sar
retf
dec
jl
push
inc
int3
xchg
paddw
cmps
sbb
xor
mov
sti
aas
lds
in
jmp
or
and
pop
sub
sbb
ins
scas
xlat
ins
sti
out
jno
add
idiv
sbb
repnz
ror
mov
scas
push
mov
leave
jno
mov
or
mov
cmps
test
in
(bad)
pop
adc
mov
or
in
xchg
retf
pop
inc
mov
cmp
and
mov
and
(bad)
lds
addr16
or
retf
sub
jo
stos
clc
sbb
and
xor
out
scas
cmps
push
ret
mov
or
mov
adc
mov
out
les
(bad)
mov
jmp
xchg
fistp
mov
jnp
cmp
add
call
repnz
test
fcom
repz
dec
push
and
pop
out
pop
push
dec
xchg
in
xor
call
add
scas
test
xchg
dec
sub
add
fwait
add
aas
jge
fstp
sub
jl
sbb
push
shl
pop
movs
mov
je
mov
mov
test
aad
es
xchg
loope
in
lods
pop
aad
adc
es
movs
loop
fistp
adc
fs
jecxz
daa
xor
and
inc
nop
in
stos
in
mov
inc
jb
and
mov
add
pop
test
adc
scas
pop
mov
xchg
int3
inc
cld
push
cwde
cli
mov
sbb
out
pop
and
into
fwait
lods
scas
pop
mov
dec
call
bnd
idiv
pop
das
gs
jo
push
pop
mov
fisttp
pusha
push
sub
xlat
mov
push
cli
test
shr
(bad)
sbb
mov
xchg
loope
mov
and
les
sbb
pop
mov
mov
sbb
outs
mov
cmp
pop
aas
add
add
ins
into
dec
sub
sub
dec
aad
mov
push
mov
outs
push
pop
popf
mov
sub
jo
lahf
sbb
test
aas
xchg
mov
cmps
(bad)
scas
or
out
cli
or
ins
out
mov
popa
push
ins
test
fs
js
push
dec
scas
adc
push
inc
addr16
(bad)
fs
scas
fdivr
push
arpl
mov
(bad)
ja
mov
int
out
pop
dec
aam
popa
add
std
adc
and
lahf
push
and
aas
stos
mov
ss
ror
push
movs
sub
jns
adc
xor
xor
push
mov
ror
cmp
push
test
gs
stc
adc
inc
das
cmp
rcl
shr
lds
lods
sti
push
push
je
call
xchg
loope
outs
adc
pushf
and
std
push
mov
mov
mov
mov
sub
cmp
in
loopne
dec
fst
xor
and
push
int
ins
fwait
mov
cmp
mov
ja
sbb
dec
out
inc
fwait
mov
mov
xchg
xor
cdq
std
cmp
nop
cmp
int
pcmpeqw
jmp
sahf
xchg
mov
jp
push
lds
adc
cs
retf
cs
push
mov
clc
pop
addr16
icebp
in
ret
fist
sub
mov
imul
add
das
pop
pop
outs
stos
dec
cmp
jnp
iret
xor
ins
push
add
mov
push
call
jnp
jl
add
sbb
cmps
(bad)
mov
adc
(bad)
dec
fidiv
jmp
js
outs
sub
fimul
stc
pop
jo
sbb
jg
cmp
in
lock
ficomp
loop
test
(bad)
mov
mov
outs
xor
lds
or
inc
jge
cmp
outs
mov
push
xor
repz
sbb
mov
push
xchg
inc
sub
out
cmp
repz
ds
sbb
xor
mov
bound
repnz
in
inc
xor
ins
sub
(bad)
fmulp
repnz
inc
sahf
jp
das
lods
in
cmp
or
retf
(bad)
clc
(bad)
add
sti
add
das
cld
cs
mov
xor
(bad)
dec
or
or
(bad)
call
mov
or
sahf
hlt
mov
xor
mov
das
pop
jmp
(bad)
test
(bad)
in
loopne
(bad)
dec
int
mov
add
outs
mov
jge
stos
xchg
test
test
mov
call
lods
stc
mov
sub
retf
push
fdiv
in
clc
nop
sbb
push
xchg
and
rol
jmp
cld
inc
imul
into
fmul
and
test
daa
fadd
fmul
mov
dec
adc
stc
push
inc
shl
and
fist
test
iret
mov
imul
push
bnd
sbb
fld
or
sub
pop
fisttp
jae
push
push
push
jge
add
cmp
popf
out
pop
mov
adc
jae
pop
std
and
icebp
pop
enter
icebp
test
push
and
pop
cs
mov
jmp
jmp
cmps
mov
adc
mov
(bad)
retf
jo
push
inc
lods
sbb
dec
fcom
ds
imul
sub
sbb
pop
int3
arpl
mov
outs
out
shr
dec
les
inc
movs
add
cmps
dec
es
mov
addr16
add
push
mov
popf
fldl2t
xchg
dec
cmp
xor
aas
inc
popa
iret
mov
xchg
aas
add
add
mov
push
lock
in
cli
pop
loopne
xchg
sbb
mov
jle
adc
ja
dec
jmp
xchg
sub
movs
sub
sbb
mov
movs
mov
or
adc
mov
aaa
jbe
scas
adc
jae
push
mov
rcr
dec
and
dec
out
std
loopne
aaa
adc
addr16
mov
add
(bad)
fpatan
adc
mov
mov
pop
outs
and
or
or
dec
xchg
pop
stc
sub
mov
repnz
jae
mov
jnp
add
call
sar
stos
stos
mov
lods
cs
js
push
repz
imul
(bad)
lods
or
jl
xor
xchg
mov
jl
int
add
mov
mov
lea
js
test
std
or
mov
pop
xor
lock
jge
clc
fild
adc
xchg
test
ss
push
sub
xchg
push
mov
xchg
or
in
loop
cs
pop
dec
push
push
fldcw
xchg
xor
mov
push
sub
lds
inc
inc
lods
xchg
jno
rsm
cmc
jle
xor
push
mov
fcmove
xchg
jp
dec
xor
(bad)
clc
mov
lock
sbb
div
inc
jmp
sub
inc
mov
inc
sub
xchg
nop
mov
dec
push
repz
pop
imul
(bad)
cli
lds
bound
bound
mov
call
jmp
cmp
sbb
sub
mov
jecxz
or
xchg
jo
lock
xchg
mov
mov
daa
mov
dec
cmc
jns
fs
call
xchg
sar
jnp
outs
cmp
xchg
in
lods
and
popf
not
icebp
pop
(bad)
clc
rcr
mov
mov
dec
cmp
clc
je
push
cmp
std
cmps
ja
outs
movs
mov
les
push
jge
scas
ror
ja
loop
scas
xchg
adc
pop
add
repnz
test
mov
jl
in
dec
pop
test
cmp
xor
pop
in
xchg
retf
test
xchg
xor
mov
mov
xchg
jge
mov
inc
add
cdq
dec
movs
nop
add
jmp
fwait
jp
scas
in
sub
mov
imul
sbb
clc
loop
int3
int3
push
fidivr
xchg
cmp
pop
dec
mov
mov
cmp
cld
scas
add
imul
jp
or
mov
test
add
jns
xchg
jmp
or
(bad)
sub
(bad)
dec
cmps
clc
inc
call
setae
or
pushf
or
inc
mov
inc
push
inc
lods
ret
fistp
inc
fwait
pop
push
bound
and
pand
out
pop
xor
adc
imul
es
adc
xchg
out
jb
mov
out
ror
fild
outs
jmp
lea
lods
imul
mov
or
lea
aaa
and
std
in
popf
pop
int3
data16
sbb
sbb
jp
js
xchg
mov
retf
fsubr
(bad)
jmp
sbb
mov
and
dec
aad
jnp
lods
(bad)
iret
and
sub
add
or
add
pushf
hlt
jmp
loope
mov
xchg
mov
loop
sub
lock
pop
leave
push
not
mov
dec
jmp
hlt
cld
cmp
dec
nop
rcr
sub
and
xchg
outs
mov
fadd
jg
(bad)
mov
sub
dec
mov
movs
sub
repz
mov
cmps
adc
pushf
test
and
mov
popf
sbb
int
inc
repnz
xor
or
retf
sub
std
leave
and
imul
mov
push
in
mov
imul
pop
arpl
jbe
or
dec
sub
mov
add
jbe
stc
cmps
in
pop
add
mov
push
fsub
dec
dec
jp
cmp
das
push
out
pop
jmp
lahf
shl
xor
jmp
adc
daa
pop
leave
mov
cld
inc
mov
int3
test
push
stos
popa
xchg
or
enter
mov
and
pop
push
push
mov
mov
pop
pusha
fisttp
jmp
cs
popf
mov
enter
adc
lea
jmp
jns
pusha
adc
jecxz
sbb
in
cmp
icebp
mov
fs
shr
scas
aas
sti
push
fild
mov
ins
sub
out
push
popf
sar
adc
mov
lods
ret
imul
cmp
pop
data16
cmp
sub
out
stos
(bad)
in
imul
and
mov
xlat
lock
pop
and
pop
cmps
mov
lds
add
cmp
into
fmul
mov
lea
xchg
paddsw
jne
neg
mov
xor
ficomp
aas
push
adc
jnp
and
ins
scas
push
add
fisttp
mov
es
into
pop
inc
std
inc
xlat
mov
mov
ja
cmp
mov
cmc
and
out
cmc
das
inc
popf
ja
std
or
add
(bad)
fdiv
jl
sub
sti
jmp
dec
mov
cmp
sbb
inc
int3
loopne
fs
and
inc
jl
or
fild
pop
inc
sbb
dec
scas
dec
sbb
xor
popf
test
pushf
pop
mov
and
adc
mov
sbb
imul
in
sub
and
call
cmp
fs
xchg
mov
fsubr
sub
fcom
repz
add
mul
lahf
ror
mov
sbb
stos
icebp
movs
sub
js
cmp
and
or
out
das
push
cs
lods
loop
xor
mov
(bad)
daa
or
push
cmps
mov
into
adc
hlt
pusha
shr
adc
mov
out
xchg
or
jo
mov
iret
fcomp
retf
call
loope
stos
sub
scas
sub
ret
push
jb
lds
sub
sahf
mov
push
js
xchg
and
pop
xchg
mov
out
lahf
leave
(bad)
jmp
fistp
mov
sti
js
hlt
cld
(bad)
xor
stc
push
loopne
inc
mov
sahf
mov
sbb
data16
pop
or
mov
jmp
push
or
jae
jb
xlat
lea
lock
mov
popf
inc
cmovbe
out
add
push
xor
dec
sbb
push
dec
jo
movd
xchg
mov
retf
dec
jnp
dec
mov
and
mov
push
neg
xchg
pop
pop
in
bound
int
stc
gs
mov
push
jmp
sbb
mov
shl
data16
inc
and
or
add
adc
inc
xchg
scas
cmp
mov
test
xor
lods
dec
push
ret
mov
and
mov
mov
enter
xchg
push
outs
pop
pop
and
mov
cli
mov
sub
push
push
ja
cdq
sahf
mov
int
leave
js
xchg
mov
dec
mov
mov
out
hlt
mov
or
push
or
pusha
(bad)
in
sub
stos
jecxz
lods
fistp
cdq
outs
jl
push
xchg
xor
fcom
inc
and
ficom
mov
adc
and
xchg
or
movs
push
aad
cmp
nop
xchg
and
bound
mov
pop
xchg
adc
int
sub
std
outs
pop
dec
repnz
jns
sub
arpl
cmp
and
mov
jmp
jo
loop
repnz
sbb
and
push
ret
cmp
cmps
loope
aam
add
xchg
dec
dec
xchg
mov
and
push
cmp
xor
sbb
inc
sub
inc
leave
mov
mov
test
imul
cli
mov
cld
fld
push
ret
mov
int3
rcr
imul
mov
dec
ret
fistp
or
das
cld
ret
or
sbb
push
or
fisub
ror
fbld
mov
pushf
clc
push
cmps
add
lahf
repz
setge
loope
ins
js
mov
xor
push
xchg
push
inc
ss
mov
or
ins
ins
sbb
pop
loop
xor
mov
dec
and
repnz
mov
pop
mov
hlt
sub
adc
xor
fcomp
mov
xchg
or
in
daa
mov
xchg
out
or
in
aas
mov
mov
xor
inc
inc
loope
outs
inc
mov
ja
outs
out
jno
adc
cmp
dec
push
leave
into
cwde
daa
xor
aas
outs
xchg
in
add
dec
in
push
jb
rsm
int
add
xchg
push
mov
mov
pop
adc
scas
add
cmc
aas
lahf
mov
loopne
(bad)
into
sbb
(bad)
ins
rcl
adc
in
loopne
icebp
mov
leave
sar
dec
daa
lea
adc
inc
aaa
int
jns
cmp
repnz
inc
sub
cdq
ins
dec
aam
push
hlt
stos
in
or
sbb
push
mov
xor
push
iret
cmp
dec
mov
mov
sub
add
mov
outs
das
test
mov
clc
pop
push
pop
sbb
jbe
jbe
loopne
xlat
stos
jne
ret
sbb
mov
xchg
xchg
pop
adc
jb
ins
test
dec
fwait
add
inc
in
dec
jnp
xor
pusha
fwait
loope
pop
jnp
lahf
cmp
std
hlt
jmp
shl
sub
adc
sub
mov
into
std
(bad)
fst
ficomp
lea
and
mov
jg
fcmovne
test
in
add
cdq
lea
loopne
mov
mov
xlat
test
into
sbb
jbe
or
mov
mov
and
fistp
xchg
push
es
lahf
jmp
jb
mov
cmp
or
jg
mov
push
dec
push
call
fs
jns
mov
xor
jo
pop
adc
lods
std
mov
and
loope
pop
add
loopne
retf
aaa
lods
nop
xchg
shr
cmp
xor
icebp
int
adc
js
(bad)
mov
push
dec
inc
jl
dec
mov
and
repz
dec
and
sbb
mov
xchg
lahf
dec
and
std
test
call
push
(bad)
xchg
xor
adc
xor
mov
add
cld
jno
jbe
jge
test
xchg
test
in
in
mov
push
xchg
fcmove
jmp
lds
xor
pop
sub
addr16
and
jl
xchg
retf
xor
cmp
add
int
dec
xor
retf
jae
mov
imul
movs
pop
mov
ldmxcsr
push
add
cmps
cmps
xor
or
std
jns
popf
mov
aad
sahf
jns
aaa
push
test
sub
cmp
push
into
not
cs
mov
gs
xor
cmp
into
cmp
push
shl
fld
mov
adc
sub
cmp
push
inc
inc
dec
xchg
push
aad
jne
cld
xlat
add
outs
imul
aam
mov
shl
dec
push
sbb
sub
jecxz
mov
lods
int
jecxz
test
push
fwait
jp
je
inc
adc
popa
adc
push
imul
adc
push
sbb
out
pop
adc
mov
push
js
xor
sub
adc
jno
in
mov
test
loop
jb
push
lea
cmp
cmp
enter
pushf
sub
or
mov
int
or
lahf
push
jno
mov
pop
outs
rol
mov
int3
test
inc
add
aad
fwait
xchg
stc
(bad)
gs
xor
(bad)
pop
leave
push
xor
dec
test
pop
arpl
into
aaa
jl
or
fiadd
xchg
mov
mov
jo
xchg
sub
adc
and
xchg
push
leave
adc
fld
cli
and
rol
dec
pop
push
dec
lea
(bad)
hlt
lahf
dec
jge
inc
int
xchg
push
das
(bad)
in
mov
push
sahf
stos
xor
ja
jbe
xchg
lahf
sbb
sti
mov
sub
pop
les
cmp
jecxz
imul
and
stos
ja
imul
inc
(bad)
ins
arpl
retf
ret
fdivr
scas
pop
sbb
lods
es
mov
dec
stos
fist
fstp
ins
bound
sub
inc
inc
in
dec
sub
js
ret
push
sub
fild
cli
cs
bound
jp
adc
mov
cmp
sbb
jb
fwait
push
mov
mov
retf
push
leave
xchg
mov
xchg
dec
call
lods
ss
cmp
xor
enter
jmp
rcr
lock
push
cmp
rcr
lea
fisub
inc
xor
lock
push
mov
inc
retf
cmps
xchg
sbb
sbb
adc
adc
pop
out
fdivr
test
dec
jne
out
sub
cwde
lock
jne
or
dec
mov
cwde
sahf
test
pmaxsw
dec
dec
(bad)
call
in
mov
sbb
xchg
mov
push
push
sbb
push
adc
loop
icebp
inc
pop
add
push
cmp
xor
push
call
inc
push
push
imul
data16
shl
mov
loop
cld
js
xor
lods
in
dec
push
pop
and
addr16
jne
movs
cmp
or
aad
loope
dec
or
ret
imul
fnstenv
popa
add
sub
retf
xchg
adc
xchg
je
test
iret
push
mov
test
sbb
mov
pop
pop
pushf
fidiv
add
sub
xchg
push
je
aam
iret
sub
popf
repz
sahf
in
sar
add
and
outs
ficomp
iret
cmp
jns
cmp
call
out
pop
adc
add
add
mov
mov
test
jo
outs
jg
push
add
add
mov
in
mov
cld
(bad)
adc
jb
mov
pop
inc
loop
bound
fimul
adc
lds
jo
scas
sub
lea
xchg
in
add
pop
sub
ins
mov
leave
mov
fnsave
call
rol
mov
fwait
mov
out
ins
or
jl
xor
adc
or
jae
sti
lods
add
mov
sar
mov
dec
pop
int3
out
sar
mov
stos
fdiv
or
ss
cmp
adc
cdq
mov
rol
daa
pusha
pop
mov
retf
aas
push
js
jno
ret
add
fcomp
xor
push
and
mov
es
adc
into
les
cmp
pop
mov
push
mov
push
xchg
xor
push
or
iret
test
jb
sbb
daa
mov
loop
xchg
push
or
out
xchg
popf
addr16
and
mov
and
dec
push
lahf
xchg
dec
pop
sti
inc
addr16
inc
test
xchg
arpl
ror
out
iret
(bad)
outs
hlt
cmc
push
ins
ss
movs
cmps
ja
neg
xchg
fcmovnu
aaa
enter
push
fwait
sbb
scas
sub
enter
jle
es
rol
xor
scas
mov
or
jmp
mov
mov
in
aad
js
ror
cmc
in
call
mov
add
inc
(bad)
mov
inc
ins
out
call
cld
jl
cmc
(bad)
jl
ret
ficomp
pop
ds
push
sbb
lock
mov
or
push
mov
sbb
imul
sbb
jne
rcl
(bad)
and
mov
mov
popf
xchg
fistp
jbe
repz
mov
jae
dec
xor
xor
adc
jp
outs
mov
add
stc
mov
and
fsubr
inc
out
int
ins
(bad)
vphaddwq
inc
mov
(bad)
push
and
jle
cmp
or
adc
inc
or
xchg
loop
repz
add
imul
add
sub
mov
cmps
mov
cld
or
inc
dec
xchg
sar
xor
jl
mov
pushf
pop
mov
int3
jmp
jl
call
adc
pop
xchg
xlat
adc
neg
movs
adc
jg
push
cmp
je
arpl
mov
loope
cmps
sbb
xlat
inc
out
arpl
scas
xor
mov
mov
pop
xor
push
jge
imul
xchg
cld
stc
sti
mov
inc
xchg
sar
fcomp
outs
mov
scas
push
int3
inc
jne
add
test
sub
retf
xor
mov
(bad)
mov
aam
mov
clc
(bad)
or
aad
call
shr
xor
adc
stos
xor
mov
test
add
push
sbb
jp
pop
mov
(bad)
in
or
fimul
(bad)
daa
inc
test
adc
mov
jb
pop
mov
test
int
in
scas
jb
xor
aam
in
pop
sahf
inc
(bad)
iret
cmps
pop
push
nop
jmp
push
dec
adc
test
push
loopne
cmps
mov
dec
out
sbb
and
jmp
dec
cmps
dec
call
(bad)
lods
or
push
cmp
or
push
enter
loopne
pop
add
xor
mov
sub
ja
mov
mov
push
loopne
jl
or
xor
imul
ja
xchg
jne
xchg
inc
jb
arpl
xor
or
fwait
outs
or
shl
jns
retf
in
dec
dec
dec
leave
dec
and
sub
shr
or
jbe
jnp
jnp
call
daa
and
(bad)
xchg
jmp
sbb
jp
mov
fistp
icebp
int
out
jb
sbb
mov
jecxz
push
js
sbb
mov
jecxz
xor
jno
ss
out
bound
jp
jmp
xchg
loop
push
sub
jmp
test
sub
ret
in
or
sub
outs
sbb
or
mov
stc
sbb
push
inc
ins
adc
aas
or
rcl
inc
sbb
jns
add
mov
ins
addr16
mov
cmp
(bad)
sbb
(bad)
pop
cld
loope
retf
cmp
mov
mov
or
push
mov
ror
aas
push
adc
xor
cmovge
push
shl
cmc
lods
imul
dec
fnstcw
jmp
xlat
repnz
add
psrad
xor
mov
mov
cmp
outs
jp
dec
lods
(bad)
mov
lock
mov
xchg
jae
adc
xchg
or
push
(bad)
ss
add
stos
push
push
xchg
xchg
push
xchg
xchg
sbb
fstp
xchg
in
mov
ror
push
aad
add
rol
pop
xor
mov
adc
xor
xchg
cmp
mov
xchg
shl
call
mov
add
stos
or
out
mov
jb
and
add
(bad)
mov
les
fld
popa
push
sub
dec
dec
jge
adc
adc
or
adc
lods
inc
lock
iret
cmp
lea
or
es
cli
inc
jae
aad
imul
dec
inc
xchg
xchg
adc
inc
adc
adc
sub
adc
mov
mov
sub
jle
sbb
fnstsw
loopne
add
pop
cmpxchg
rcr
push
push
sub
push
data16
push
xchg
lods
addr16
or
div
jg
or
loop
push
rol
out
add
pop
dec
cmp
push
cs
jl
(bad)
mov
add
aam
or
into
or
mov
and
shl
std
stos
data16
(bad)
loopne
dec
imul
pop
(bad)
fild
mov
jbe
sub
sbb
sub
push
xor
(bad)
shl
cs
repnz
mov
push
and
cmp
cmps
(bad)
(bad)
dec
das
pusha
loop
(bad)
idiv
sub
adc
hlt
pusha
or
add
nop
jo
inc
(bad)
leave
push
out
jp
jl
mov
push
and
out
lods
in
inc
scas
mov
push
add
or
popf
in
adc
mov
ins
ss
jmp
call
ret
and
in
and
test
mov
adc
out
mov
or
mov
pop
aad
inc
mov
push
xor
arpl
iret
fs
cdq
cmp
and
pop
imul
push
push
scas
sub
mov
inc
xchg
xchg
and
ror
sbb
mov
mov
sahf
mov
dec
inc
fcomp
in
outs
mov
cmp
push
fwait
hlt
int
jae
cmps
fist
xchg
jmp
dec
fsubr
push
jo
push
or
call
adc
cs
jmp
mov
mov
call
push
icebp
mov
loopne
sub
ds
push
mov
popf
mov
js
into
daa
mul
cmp
push
in
lods
hlt
ret
fs
and
jecxz
inc
sbb
ror
into
mov
movs
js
add
pop
mov
retf
imul
mov
pop
mov
cmps
sub
sub
push
loope
fild
push
cld
icebp
lock
dec
das
cmps
movs
lds
xlat
into
push
gs
pop
dec
loopne
lods
xchg
sbb
xor
cwde
inc
adc
cmp
or
sar
js
out
pushf
mov
mov
dec
scas
ret
cmp
jae
ds
push
in
sub
xchg
add
mov
ins
push
sbb
sbb
shl
stos
sbb
mov
adc
sub
sub
fs
sar
retf
adc
mov
and
and
add
dec
hlt
jle
dec
repnz
xchg
inc
aad
daa
ins
test
mov
mov
and
imul
js
iret
push
(bad)
cmp
fwait
xchg
xchg
aaa
jg
(bad)
call
xor
sub
leave
movs
test
cmps
mov
pop
test
dec
clc
jae
adc
dec
jl
je
hlt
js
cmps
mov
inc
pusha
jmp
ficom
cmp
rol
in
jge
push
cli
or
mov
ror
rcl
or
(bad)
pop
add
or
mov
and
or
enter
mov
retf
int
adc
jbe
dec
inc
ja
sbb
inc
and
shl
inc
xor
int3
jmp
adc
fmul
xor
adc
push
addr16
ret
es
mov
add
pop
dec
outs
xchg
enter
mov
mov
mov
ins
in
add
pop
or
repz
sub
cmp
and
ins
jge
add
xor
in
sar
cmp
nop
push
inc
mov
out
cmc
sub
mov
pop
sbb
enter
neg
adc
cmp
xor
loope
fadd
and
ins
ror
std
xchg
adc
std
or
dec
add
mov
fcomp
mov
nop
pop
jmp
lods
xchg
adc
sub
or
inc
xchg
and
popa
stc
mov
int
mov
imul
lds
pop
xchg
retf
mov
sahf
dec
sub
out
push
inc
mov
(bad)
in
sbb
in
neg
push
aad
(bad)
repz
iret
adc
shr
js
jecxz
bnd
(bad)
bnd
pop
cmps
aaa
jle
cmp
scas
and
fstp
fs
nop
sbb
pop
xchg
ss
add
adc
jle
sub
jo
push
mov
fnstsw
shr
pop
dec
retf
sbb
sbb
pushf
dec
jmp
imul
popf
enter
mov
shl
rol
or
dec
test
ins
xchg
xchg
mov
pop
mov
aad
das
das
loope
inc
mov
adc
test
or
dec
test
stc
jb
cmp
inc
jl
push
pop
inc
cs
dec
retf
int3
gs
test
jmp
add
and
pop
nop
add
stc
retf
std
mov
in
rcr
add
dec
lahf
jp
adc
fmul
xchg
adc
outs
rol
sbb
and
add
mov
push
popa
call
cdq
jo
pop
xor
pop
les
mov
and
mov
xchg
movs
push
icebp
and
(bad)
jno
in
jbe
pop
mov
xor
jl
inc
cwde
in
sub
mov
sub
mov
xor
jl
sti
dec
xchg
add
ss
adc
sub
gs
and
xchg
out
xchg
xor
inc
pop
dec
mov
push
(bad)
xchg
jl
or
push
fcomp
retf
retf
add
call
jg
nop
inc
mov
mov
cmp
ds
or
push
out
aaa
repz
adc
push
lds
into
sti
bnd
call
xchg
sub
add
xor
repnz
aam
pop
mov
dec
mov
mov
pushf
out
inc
pop
clc
pop
sbb
retf
sub
ins
gs
dec
test
sti
jg
and
rol
cli
lahf
std
stc
rol
mov
or
(bad)
jne
loopne
mov
or
frstor
shr
adc
mov
arpl
out
lods
sbb
fstp
push
out
enter
lds
mov
xchg
clc
mov
fxch
xor
js
movs
mov
sahf
and
push
cmc
fisttp
popa
icebp
paddq
out
sbb
ds
and
std
pop
adc
popa
pop
xchg
(bad)
out
cmp
xchg
xchg
adc
data16
call
mov
mov
mov
and
fnstsw
call
push
bound
addr16
in
fisttp
fcom
dec
jecxz
(bad)
xor
sub
mov
dec
stc
and
and
inc
addr16
and
mov
leave
push
sbb
jl
enter
cld
mov
xor
aaa
jno
les
pop
jp
call
sahf
push
push
mov
push
fisttp
imul
jno
jns
mov
xchg
xor
iret
inc
retf
test
mov
sub
xchg
mov
ret
scas
inc
pop
ins
outs
sbb
jo
inc
pop
jmp
mov
aas
in
xchg
rol
jae
push
shr
jmp
fadd
test
stos
cmps
lods
test
push
in
dec
pop
adc
xchg
cmc
jb
mov
shr
lds
into
sub
ret
mov
mov
push
cmp
pop
sbb
pop
jp
sbb
mov
pop
popa
cmp
test
ret
retf
xchg
pop
jbe
fs
pop
mov
loop
add
sub
bound
jp
loope
mov
mov
xchg
dec
xchg
in
jmp
push
ror
mov
xor
or
lock
out
cmps
add
ret
into
dec
xor
sub
xchg
jg
adc
jge
jmp
test
mov
enter
push
jnp
cmp
cmp
push
(bad)
pop
aam
(bad)
fsubr
mov
bound
mov
push
sub
mov
jbe
add
cs
stc
lock
pop
push
mov
in
enter
popf
lock
add
arpl
sub
mov
push
pop
in
mov
fcom
sub
cmp
mul
cli
sub
movs
mov
push
movs
popf
push
mov
daa
daa
add
test
xlat
xchg
sub
dec
(bad)
mov
inc
sbb
mov
adc
lds
and
jle
pop
inc
ret
sub
sbb
xchg
dec
or
push
mov
retf
lods
xor
pop
push
xchg
add
cmp
adc
ss
loope
cmps
push
jmp
lea
and
mov
inc
mov
push
in
mov
mov
loopne
(bad)
jle
ins
ret
xchg
cmps
push
mov
mov
(bad)
mov
adc
xchg
xchg
xchg
fist
jns
add
pop
jnp
sbb
inc
aad
pop
xor
inc
(bad)
(bad)
pop
stc
or
sub
not
and
punpckldq
sub
out
xchg
aas
div
cwde
jne
fistp
mov
mov
push
rol
sti
jg
clc
fisubr
xchg
movs
mov
mov
dec
push
and
and
test
xchg
imul
not
jg
and
and
enter
jmp
dec
ficom
fcomp
jge
movs
jle
jg
push
pop
xor
inc
stc
pop
stos
add
lea
out
add
es
jmp
adc
or
int3
call
cmp
fwait
xor
sbb
loope
xor
cmp
sbb
outs
inc
mov
out
and
loopne
jae
outs
aas
xor
in
mov
adc
push
imul
mov
mov
movs
sub
xchg
sub
xchg
out
dec
stos
mov
pop
les
inc
jns
cmp
loope
rcl
mov
dec
addr16
sub
call
in
les
pop
jmp
xor
inc
mov
lods
sub
inc
ror
push
xchg
shl
push
cmps
les
mov
gs
(bad)
mov
fwait
ins
inc
push
mov
sbb
mov
jecxz
mov
scas
mov
jae
nop
dec
pop
push
ds
push
xchg
popa
gs
adc
ret
das
int
jge
paddb
aam
cwde
jno
mov
cs
movs
icebp
stc
sti
adc
rcr
cdq
adc
out
mov
(bad)
addr16
jo
pop
mov
push
sbb
pop
loope
inc
out
jg
sub
je
mov
xchg
out
adc
inc
cmp
mov
jge
cwde
lahf
stos
inc
xchg
pop
pushf
sbb
movs
iret
sbb
dec
or
retf
test
or
sar
mov
push
add
sbb
mov
cmp
jmp
fnsave
cmps
repz
out
aas
fucomi
rcl
jmp
mov
cmc
sub
not
ret
or
call
aad
pop
sub
mov
xchg
jle
jae
fisttp
shl
sbb
jnp
inc
mov
ins
mov
scas
(bad)
cmp
test
add
jl
mov
arpl
inc
not
movs
mov
out
fs
hlt
dec
iret
fld
xchg
sub
mov
ret
ins
idiv
gs
xchg
add
push
scas
and
(bad)
fwait
fwait
and
stc
jl
push
movs
adc
stos
aad
and
xchg
arpl
push
out
nop
retf
loop
or
stos
sbb
xchg
cmp
push
fsub
test
mov
dec
outs
mov
inc
(bad)
sbb
dec
push
pop
push
jg
nop
dec
xchg
aam
jle
dec
fistp
xor
xchg
fidivr
dec
pushf
dec
ret
xor
push
fld
popf
mov
jl
and
mov
jae
lea
add
outs
inc
inc
fwait
cdq
aaa
adc
or
shl
or
sub
out
and
movs
ins
pop
cmp
jg
movs
or
cmp
xchg
adc
dec
dec
sub
sbb
sbb
rcr
cli
jmp
imul
inc
aas
pop
xor
dec
push
mov
test
jbe
or
test
adc
imul
push
push
ret
(bad)
fild
test
sbb
push
inc
aad
xor
sbb
int
sub
(bad)
jge
and
mov
pop
cmps
mov
fst
pop
cld
inc
sub
cmp
in
enter
xor
test
icebp
je
(bad)
mov
imul
sub
jnp
xchg
push
in
retf
inc
cdq
movs
stos
push
and
outs
pop
imul
dec
sbb
icebp
mov
cli
std
leave
cmp
xor
or
sub
mov
cmp
in
cld
cmp
fwait
mov
mov
adc
mov
xchg
pop
adc
mov
pop
in
int
sub
add
das
jg
leave
mov
sub
popa
sbb
test
cmp
repnz
jnp
mov
dec
shl
fdivr
mov
lods
push
jp
pop
adc
mov
dec
pop
fld
aam
scas
loopne
xchg
adc
stos
iret
out
dec
push
ja
inc
scas
and
xchg
js
mov
dec
dec
adc
ins
std
add
jge
daa
add
inc
pop
lods
in
mov
fisttp
sti
adc
fdiv
jecxz
leave
sub
and
xchg
jle
aam
push
push
fs
mov
icebp
push
popf
mov
dec
sub
dec
push
call
icebp
gs
jbe
push
pcmpeqw
adc
cdq
sub
sar
pop
sbb
jle
push
cdq
cmp
ins
dec
pop
mov
mov
cmp
pop
or
(bad)
push
daa
mov
adc
sub
xlat
xor
add
xor
cmps
sahf
mov
stos
(bad)
push
xchg
call
aad
bound
mov
pushf
push
movs
jns
je
ds
cmp
lea
xor
test
mov
test
mov
cli
add
cmps
cmps
and
inc
loope
mov
xor
dec
jne
dec
sbb
inc
sub
(bad)
imul
bound
cmps
outs
pusha
(bad)
mov
mov
ins
pusha
xor
std
test
(bad)
in
lods
and
jmp
mov
pop
fsubr
inc
fmul
add
mov
adc
leave
int
add
cmp
cmp
xor
in
out
hlt
mov
ins
xlat
pop
stos
pushf
(bad)
into
or
cmp
jb
xchg
repz
sbb
push
mov
adc
adc
iret
les
ss
mov
pop
xor
repz
(bad)
fcomp
test
sub
fld
das
adc
sub
cmp
lea
push
mov
or
js
retf
imul
aad
leave
imul
push
dec
lds
sbb
or
out
sub
lea
cs
jae
mov
retf
test
in
dec
xchg
or
xchg
popa
(bad)
repnz
mov
mov
(bad)
ret
add
jno
lahf
inc
ss
outs
lock
outs
cmp
ror
aaa
push
mov
add
pop
adc
aam
stc
gs
je
aam
and
aad
into
test
inc
loop
into
inc
push
jne
dec
xchg
add
stos
xlat
mov
jns
into
aam
xor
sbb
pop
cmc
dec
enter
and
push
pop
out
hlt
push
imul
cmps
and
cmp
and
adc
dec
movs
in
push
mov
loope
(bad)
int
sar
ret
cmp
pusha
ret
jl
rcr
add
out
mov
das
mov
rol
loopne
add
in
mov
mov
cdq
pop
pop
inc
mov
or
xor
div
aas
pop
jno
sbb
sub
in
in
and
shr
lods
in
pop
out
movs
sub
cmp
push
add
xor
mov
je
imul
inc
mov
mul
adc
dec
pop
sbb
shr
fwait
cmp
dec
pop
xor
mov
cmp
int3
pop
mul
push
dec
and
jnp
cmps
inc
mov
adc
xchg
mov
fs
mov
jge
inc
stos
jmp
xchg
sbb
cmp
fdivr
mov
and
pusha
jnp
push
lods
lea
cmps
inc
inc
sar
pusha
dec
lods
inc
xor
push
or
jg
mov
mov
mov
mov
(bad)
mov
jbe
stc
dec
scas
and
retf
mov
jle
jge
and
dec
cld
or
(bad)
sbb
xchg
add
cld
fcomp
outs
push
imul
sub
adc
and
pop
inc
retf
test
inc
add
push
lods
fild
bound
jmp
jmp
and
fmul
cwde
jnp
in
and
sub
xchg
mov
xchg
jg
ins
and
jp
leave
ret
sub
cmp
lea
psubw
rcr
mov
or
adc
shl
call
cli
sti
dec
jp
arpl
or
dec
jns
fwait
push
mov
xchg
not
jmp
int3
jae
ret
mov
and
xchg
sbb
dec
stc
clc
sti
ins
js
mov
sar
xor
sbb
int3
push
sbb
mov
mov
mov
mov
rcr
stos
sub
out
xchg
xor
sbb
xchg
add
xchg
loopne
pop
adc
adc
or
cdq
dec
cdq
mov
mov
sub
inc
push
dec
cdq
int3
dec
push
in
sub
mov
xchg
fs
fist
sbb
mov
mov
shr
in
cwde
push
xchg
jbe
dec
sbb
bnd
add
sub
pop
dec
aam
(bad)
std
in
int3
scas
add
add
fild
sar
pop
test
sub
push
xchg
push
mov
lea
sbb
outs
test
idiv
fs
addr16
repz
daa
cdq
movs
cld
inc
inc
mov
push
push
sub
jg
clc
push
lds
dec
retf
xchg
popa
jge
out
daa
xlat
loop
stc
mov
dec
sbb
mov
and
js
jge
and
in
push
sub
jmp
adc
sub
xor
or
outs
mov
push
outs
push
cmc
scas
xor
mov
sar
retf
mov
and
int3
or
cmp
(bad)
push
(bad)
mov
or
or
xor
leave
cmp
pop
fs
jmp
fs
ficomp
jae
xchg
test
js
lds
out
std
push
mov
cwde
hlt
cmp
jb
cmp
int3
or
mov
cmp
jb
adc
jne
and
fucomi
and
addr16
imul
fs
adc
push
cmp
or
out
cmp
mov
v4fmaddps
mov
gs
pop
add
out
jmp
mov
(bad)
cmp
mov
idiv
sbb
mov
rol
loop
js
int
clc
cmp
in
dec
aas
sub
push
inc
jmp
lods
mov
neg
or
cmc
and
cs
push
sub
cmp
pop
(bad)
loopne
inc
fbstp
or
test
push
shl
push
(bad)
cmp
and
or
xchg
mov
dec
out
add
mov
pavgb
xchg
cld
push
jne
jno
inc
adc
mov
leave
enter
lods
popf
lods
cmps
test
mov
push
outs
retf
mov
or
cmps
les
(bad)
pushf
nop
cld
mov
or
sar
add
xchg
arpl
adc
dec
pop
imul
bound
adc
adc
les
das
pusha
add
or
add
aam
sub
leave
pop
adc
dec
dec
mov
jmp
out
adc
mov
push
adc
pushf
dec
nop
or
or
sbb
adc
mov
les
test
add
test
stos
xor
arpl
pop
sti
jl
adc
xor
push
(bad)
and
mov
adc
sbb
jno
mov
loopne
lods
call
xor
xor
xor
cmp
loope
das
jp
mov
pop
fsubr
sbb
int3
add
inc
xchg
in
test
int
dec
in
jb
cmp
out
mov
mov
movntq
popa
add
sub
call
fsubp
inc
nop
adc
fwait
sub
retf
(bad)
push
test
fisub
adc
call
add
lods
test
cmp
cwde
add
loop
pop
in
jl
fwait
push
mov
jp
and
sbb
test
jae
dec
and
xor
out
sub
pop
inc
sti
ret
(bad)
mov
xchg
push
jmp
stc
pop
ins
fs
out
lods
dec
pop
sub
jnp
sub
(bad)
out
mov
test
pusha
sbb
test
pop
clc
adc
out
movs
jecxz
jmp
or
push
sub
stos
ret
mov
dec
daa
sbb
mov
xchg
sbb
xor
sbb
dec
sbb
ins
dec
test
jns
leave
mov
pop
inc
jns
hlt
out
fdivr
loope
push
aas
jg
aad
or
popa
cmp
and
or
mov
cli
xchg
or
push
cmp
pop
mov
cs
stos
nop
mov
xor
call
cwde
mov
mov
rol
push
stc
fnstenv
xor
div
adc
shl
mov
mov
xor
ss
test
jno
aas
dec
mov
jo
jmp
rcl
ja
jbe
imul
lock
sti
ret
fwait
sbb
(bad)
inc
jmp
mov
idiv
mov
sub
and
das
test
jb
or
call
mov
add
mov
cdq
inc
inc
or
call
scas
jbe
cwde
fwait
mov
or
jecxz
test
repz
cli
jae
push
loop
ret
in
pushf
pop
xor
and
shl
in
jo
push
fbld
repz
dec
fs
inc
jle
fs
xchg
ja
pop
clc
movs
sbb
jmp
lods
add
ins
mov
test
or
jmp
test
inc
mov
jb
xchg
and
outs
call
add
aam
mov
push
mov
fwait
or
fcomp
int
repz
xchg
xor
inc
xchg
jmp
outs
mov
in
cwde
sbb
pop
mov
mov
add
push
shl
sbb
mov
int3
jbe
nop
xchg
mov
xchg
fcom
add
outs
and
mov
ror
mov
imul
fsubrp
(bad)
mul
inc
out
fld
call
jae
sbb
mov
jp
adc
pop
xor
fiadd
mov
jle
bound
pop
shl
jp
mov
leave
je
push
mov
sub
in
js
mov
xchg
les
mov
push
and
in
ficom
shr
cwde
je
mov
hlt
sbb
jne
mov
xor
mov
repz
cli
sahf
mov
loope
jns
mov
test
add
cdq
das
mov
ins
cmp
inc
mov
(bad)
out
adc
test
or
xor
aaa
pop
into
(bad)
fstp
pushf
das
retf
hlt
fsub
fs
rsm
sub
xchg
ret
push
(bad)
mov
jge
popf
xor
dec
imul
(bad)
or
xor
jnp
xchg
push
(bad)
fdiv
cmp
test
mov
fstp
mov
lods
cmc
push
inc
add
int
ins
mov
imul
and
cmp
cmps
outs
jmp
jge
retf
rcr
xor
loope
test
rcr
mov
inc
inc
retf
fdiv
(bad)
popf
(bad)
les
lea
and
push
adc
popa
popa
fimul
add
add
mov
adc
outs
les
loope
add
mov
or
xchg
sbb
stc
sub
pop
mov
xor
xchg
imul
cwde
mov
out
sti
push
sbb
mov
add
mov
in
adc
neg
out
inc
out
ins
sti
fnstsw
hlt
mov
cmps
sub
int
(bad)
and
das
leave
push
and
add
aam
jp
mov
jecxz
int3
int3
xor
add
cmps
pusha
btc
adc
jnp
out
mov
fst
jmp
xchg
pop
ja
mov
adc
sub
or
test
movs
xchg
sbb
cmp
mov
pushf
nop
push
pop
ins
test
dec
out
cs
test
je
movs
dec
in
cmp
lock
lods
je
adc
and
mov
sbb
inc
jecxz
lea
sbb
ror
mov
mov
jmp
push
test
xor
jmp
scas
and
cmp
mov
loop
mov
mov
mov
push
imul
add
sbb
int3
dec
mov
sub
jae
cli
scas
aad
xchg
mov
push
push
push
cmp
jmp
sti
retf
or
fs
idiv
sub
mov
sub
mov
call
adc
xlat
int3
es
sub
pop
popa
out
cmp
xchg
add
retf
(bad)
cld
inc
dec
xchg
mov
push
mov
xchg
jecxz
mov
inc
or
sar
xchg
into
int
mov
fcmovnbe
cmp
xchg
hlt
and
push
sub
(bad)
iret
xor
sub
clc
add
cmp
xchg
and
inc
stos
ja
cdq
imul
and
pusha
and
sub
je
dec
or
jnp
sti
in
movs
xchg
ret
jae
mov
xor
das
clc
rcr
xor
jp
fisttp
in
jne
ins
ss
sbb
xor
lods
jecxz
jge
add
pop
fimul
push
fldenv
add
fadd
or
rcl
fs
fcom
mov
lock
push
add
sub
jp
clc
rcl
sub
movs
dec
leave
adc
cwde
std
push
rcl
jp
sub
push
int3
ret
sti
xor
sbb
inc
jmp
sbb
outs
or
xchg
inc
cmp
cmc
loope
test
bnd
std
sub
mov
jge
xchg
pop
stos
into
add
test
lea
push
iret
pop
lahf
test
mov
sub
stos
inc
push
cmp
lods
jle
fst
jg
stos
push
dec
push
pusha
call
cwde
adc
xchg
inc
sbb
adc
cmc
xor
mov
(bad)
out
lods
mov
mov
scas
or
add
push
(bad)
clc
mov
repnz
sbb
retf
fisttp
aad
dec
loope
outs
xlat
add
cmp
sbb
sbb
adc
dec
jmp
and
inc
mov
jmp
inc
popa
mov
dec
mov
add
sub
mov
add
mov
outs
fnstsw
jle
mov
add
sub
xor
xchg
fisubr
retf
xor
lock
cli
mov
sbb
mov
mov
mov
sub
cmp
(bad)
jmp
ins
aas
sub
dec
push
test
add
pop
idiv
pusha
add
mov
and
mov
outs
mov
pop
stos
cmp
push
sbb
mov
nop
and
js
ss
vandnps
or
and
mov
and
sub
jbe
shl
jg
fstenv
mov
adc
and
(bad)
mov
pop
xchg
jno
pusha
mov
mov
outs
lock
xor
out
mov
dec
jecxz
xchg
fnstsw
cdq
rcr
add
push
pop
stos
cli
jle
pop
test
in
pop
mov
mov
cmc
test
mov
and
mov
(bad)
aam
cmp
or
inc
repz
cli
xor
lds
sbb
(bad)
hlt
jge
pop
or
cs
movs
add
call
das
(bad)
dec
clc
adc
adc
sub
leave
shl
aaa
xor
out
shl
or
adc
inc
inc
pop
outs
mov
mov
cld
sti
test
imul
aaa
fcmove
outs
add
inc
cdq
jmp
jecxz
ffreep
jmp
dec
test
sub
and
fs
jb
mov
js
xchg
mov
inc
pop
nop
inc
sbb
inc
in
add
mov
loop
std
xchg
push
in
push
out
bound
push
es
(bad)
cld
mov
int3
and
xchg
mov
pop
sbb
adc
fs
xchg
or
or
cli
ret
out
popf
jge
pop
mov
dec
leave
iret
nop
or
inc
into
movs
mov
mov
mov
ror
movs
xchg
cld
sti
popa
xchg
hlt
ja
hlt
(bad)
pop
ins
jnp
ret
xor
adc
fsubr
add
mov
pop
hlt
adc
dec
out
pop
jg
mov
sbb
xor
lahf
sub
add
cld
fist
sub
mov
xlat
pop
dec
ja
mov
push
(bad)
mov
and
in
aas
jle
inc
dec
push
and
ret
stos
xor
cli
mov
(bad)
fidiv
js
int3
shl
push
fdivr
sar
mov
sbb
push
jl
xchg
sbb
std
addr16
bound
mov
or
cli
inc
pushf
out
pop
pusha
mov
mov
(bad)
in
ret
adc
lods
xchg
cmps
xchg
add
xchg
jno
jmp
sbb
fadd
fiadd
ret
mov
mov
loop
test
adc
mov
add
cmp
xchg
sbb
inc
push
add
js
test
jno
aas
sbb
mov
daa
or
or
loop
pop
cmp
out
ins
mov
and
pop
push
(bad)
xor
movs
inc
lea
inc
pusha
test
hlt
outs
mov
(bad)
inc
sbb
push
inc
outs
in
cmp
dec
imul
sub
cmc
mov
mov
out
or
mov
pop
and
xor
aaa
fnsetpm(287
or
cmp
push
loope
out
sahf
pop
in
push
jmp
mov
mov
push
xor
test
or
inc
test
inc
sub
iret
and
or
cs
push
mov
mov
inc
int
jb
lds
std
cld
dec
stos
adc
jle
xor
fsubr
hlt
(bad)
dec
(bad)
fmulp
imul
inc
jbe
shl
pop
jb
sti
stos
jge
in
inc
mov
jl
out
in
mov
inc
and
imul
or
aad
pop
mov
test
shl
aam
xchg
mov
and
cld
(bad)
mov
mov
test
sub
dec
(bad)
mov
inc
out
add
xlat
jp
iret
scas
inc
ss
outs
xor
rcl
xlat
inc
sahf
stos
pusha
inc
fisttp
dec
inc
xchg
pop
push
call
clc
sti
or
das
sub
loopne
dec
pop
into
movs
sbb
pop
jg
sar
aas
cmp
std
arpl
mov
out
ja
shr
xchg
stc
rcr
xchg
dec
smsw
and
mov
js
dec
popf
loop
inc
sub
adc
mov
mov
mov
iret
scas
lds
ins
ja
dec
retf
ins
xchg
shl
sbb
pop
dec
sbb
mov
mov
xchg
adc
in
(bad)
sbb
mov
js
rcr
int
mov
test
jmp
and
add
sbb
adc
aam
sub
adc
xchg
test
lock
ficomp
inc
jp
iret
test
jb
out
add
or
rol
adc
popa
mov
repnz
xchg
push
out
cmovo
out
dec
dec
jle
test
pop
fisttp
(bad)
pop
sub
sbb
xchg
lds
in
pop
scas
mov
xor
lods
xchg
push
bnd
call
cmp
cmp
in
aaa
push
loop
ret
sub
sti
add
push
pushf
clc
cmp
sbb
push
dec
xchg
sbb
xor
rol
call
fistp
xchg
loopne
adc
and
add
sub
(bad)
xor
push
or
bnd
push
repnz
push
push
std
xchg
and
pop
cmp
pushf
mov
lahf
mov
ja
ins
outs
pop
mov
pop
adc
mov
jp
mov
stos
dec
aaa
xlat
jl
sbb
outs
mov
cwde
fidivr
dec
js
loope
push
ins
mov
mov
sub
outs
cdq
stos
add
mov
mov
clc
das
pop
or
sti
sub
mov
rcl
xor
lea
jmp
or
mov
je
add
push
mov
dec
call
cld
mov
adc
retf
dec
or
jp
inc
je
mov
lock
pop
push
ds
add
addr16
xchg
addr16
xchg
mov
test
mov
cmp
in
mov
xor
repnz
repnz
ds
aaa
push
stc
push
std
push
hlt
aaa
mov
fyl2xp1
xchg
push
stc
mov
nop
mov
and
ja
rcl
add
daa
mov
jge
fadd
mov
not
fistp
jns
dec
fistp
xor
sbb
stos
or
fldenv
aaa
fs
or
(bad)
into
loop
repnz
dec
loopne
cmp
js
aas
in
in
mov
mov
jmp
test
mov
test
mov
shl
aam
push
leave
sub
ror
push
add
mov
ret
lods
pop
sbb
sahf
adc
rcr
in
pop
mov
jmp
push
in
mov
mov
xlat
(bad)
pop
int
stos
jl
inc
(bad)
jg
dec
pop
repz
fwait
hlt
clc
and
mov
xor
test
push
ss
sbb
retf
movs
mov
push
jo
sbb
mov
jnp
daa
xchg
jecxz
dec
pop
adc
mov
xlat
neg
cli
std
mov
sub
cmps
icebp
or
sub
jbe
or
repz
xchg
shl
adc
fwait
pop
addr16
xchg
sbb
fistp
sbb
out
shl
jge
jbe
push
lahf
mov
dec
and
pop
ss
lds
sub
jg
imul
cwde
lock
mov
and
aaa
jecxz
mov
jmp
loope
sti
fmul
cmp
sbb
push
xchg
repz
add
lods
adc
scas
add
jno
push
frstor
or
shl
xchg
iret
mov
fcmove
aaa
jno
mov
dec
cmc
cmp
inc
mov
arpl
gs
push
das
mov
inc
inc
adc
cwde
enter
push
mov
fst
gs
aas
test
ss
movs
inc
cmp
fidiv
iret
cmp
jecxz
fadd
mov
inc
pop
and
es
jl
aam
mov
xlat
pop
stc
xlat
jnp
popf
inc
and
mov
or
push
int
mov
into
dec
mov
cmps
retf
leave
adc
mov
mov
inc
mov
mov
cmps
pop
xor
jae
arpl
dec
jne
jg
daa
adc
mov
test
outs
aaa
hlt
jno
mov
sbb
jl
bound
xor
dec
mov
nop
enter
inc
cmc
jno
mov
sbb
mov
xchg
clc
add
js
inc
test
xor
sub
add
mov
xor
pop
mov
imul
js
icebp
adc
cmp
out
rol
clc
aam
push
xchg
retf
arpl
add
(bad)
xchg
jmp
aam
adc
vpmacsdqh
xchg
(bad)
jg
adc
pop
xor
loop
push
pop
out
dec
dec
xchg
ins
and
mov
mov
inc
jo
call
inc
sbb
jmp
jb
and
ins
push
sub
outs
gs
sar
sbb
call
pop
sbb
das
push
xchg
popa
jp
mov
loope
mov
scas
inc
xchg
and
xchg
in
std
mov
sub
mov
pop
push
sbb
jmp
and
pop
leave
push
mov
nop
push
pop
and
sbb
stos
jg
and
fisub
jae
adc
inc
xchg
xor
call
fsub
push
jbe
xor
repz
mov
jle
fs
pop
fwait
mov
push
mov
mov
pop
(bad)
int
add
or
cli
fisttp
cmps
add
aad
in
pop
or
or
cmc
sbb
xor
cmc
mov
enter
ret
jns
mov
push
pop
daa
xchg
cwde
cmp
shr
ins
repnz
mov
les
mov
and
dec
add
rcr
jmp
and
or
scas
push
out
sahf
es
xor
push
pop
ja
jl
mov
cmps
movs
mov
test
outs
mov
jae
pusha
outs
enter
fistp
or
scas
xor
push
mov
gs
pushf
leave
or
xchg
loope
mov
inc
cmp
and
mov
hlt
shl
loop
mov
iret
dec
fmul
ja
pop
pop
shl
es
inc
jge
int3
xchg
adc
xor
adc
or
rcl
in
jecxz
xor
inc
movs
cmps
dec
adc
movzx
cli
or
adc
or
push
icebp
movs
xchg
mov
shr
mov
add
or
pop
std
dec
cwde
jge
stos
aad
mov
lods
mov
inc
sub
add
push
xchg
cmp
mul
enter
lock
test
movs
add
dec
test
fist
aas
cmps
mov
aas
pop
fdivr
inc
xor
push
lock
cdq
mov
add
out
sub
mov
pop
ret
inc
icebp
push
mov
call
data16
in
add
xchg
add
inc
(bad)
inc
in
mov
xchg
adc
ret
xchg
gs
jmp
scas
mov
dec
adc
dec
mov
jne
les
in
cwde
xor
not
test
push
mov
jp
add
in
lods
adc
aad
retf
stc
aas
mov
stos
out
push
(bad)
mov
sar
jmp
mov
xor
jl
sub
jne
in
xchg
add
sbb
shl
movs
mov
in
xor
in
and
mov
mov
out
mov
hlt
dec
(bad)
leave
or
das
push
xor
icebp
pop
lods
adc
pop
pop
lds
lock
es
ss
push
in
test
pop
pop
push
call
push
aam
sar
fldenv
jp
repnz
pop
ss
aad
push
mov
nop
ja
inc
pusha
and
fs
movs
pop
arpl
add
jp
stc
mov
bnd
arpl
cwde
adc
call
call
add
pop
xlat
fidiv
outs
jmp
add
mov
test
mov
clc
and
dec
add
imul
in
adc
js
movs
mov
pop
(bad)
in
mov
cmc
out
rcl
push
loopne
sbb
sub
jmp
fisttp
xlat
sub
jmp
inc
jbe
mov
cmp
mov
pop
into
into
and
rcr
xchg
mov
or
addr16
loopne
retf
(bad)
loop
pop
lods
push
and
mov
cmps
xchg
xor
cld
ins
push
jecxz
push
jno
jmp
mov
add
in
push
shr
jmp
sbb
pusha
call
mov
jge
adc
dec
enter
or
sub
xchg
stos
test
jge
int3
dec
pop
aam
dec
out
cmp
in
fwait
call
mov
rcr
mov
daa
or
ds
stos
or
and
cmp
lods
xlat
fnsave
push
les
mov
push
mov
xchg
xor
popa
call
or
in
enter
mov
aaa
call
add
xor
mov
stc
pop
pop
sub
leave
iret
int
push
push
xor
or
inc
add
(bad)
loope
fs
push
xchg
sbb
jbe
mov
dec
jns
cmps
sbb
push
adc
mov
xchg
lods
inc
mov
push
hlt
cld
sub
call
cmp
xor
and
inc
jl
not
xlat
(bad)
pop
test
sbb
ds
sub
fsubr
dec
sub
js
pop
dec
push
or
xchg
sbb
retf
mov
stos
js
into
or
scas
mov
fidiv
mov
mov
in
add
les
rcl
cwde
fsub
dec
sub
ins
mov
retf
aam
cli
push
mov
fld
cmp
pop
ins
or
xor
add
out
ja
test
out
(bad)
aam
ret
movs
scas
shl
scas
fistp
adc
cli
dec
cmp
out
mov
popf
mov
xor
jmp
pop
call
push
inc
xchg
and
pop
inc
or
dec
pop
mulps
pop
into
jge
add
mov
fimul
adc
push
xlat
(bad)
jno
adc
mov
add
jo
clc
cmp
outs
pminub
jnp
movaps
pop
pop
inc
call
jecxz
inc
test
or
xchg
dec
adc
xchg
out
dec
enter
dec
jmp
jmp
cwde
mov
leave
adc
icebp
push
ins
in
cld
jmp
inc
aad
push
fdiv
mov
js
ins
sbb
xor
push
call
xor
add
xor
cld
and
xor
rcr
ins
jne
(bad)
xchg
data16
or
mov
cmp
mov
movs
in
into
inc
test
mov
nop
inc
xchg
daa
imul
bound
fist
iret
xor
into
test
loopne
dec
cmp
test
mov
sbb
push
daa
mov
hlt
push
lea
cmp
stc
lea
cld
das
sti
cli
ficomp
fnstsw
call
dec
xor
in
pop
sbb
and
je
sbb
cmp
call
adc
jo
add
xchg
retf
mov
lock
adc
clc
fisubr
and
retf
mov
add
sar
into
add
or
or
pushf
add
fscale
arpl
mov
call
cmps
xor
push
xchg
sub
jl
pop
repnz
mov
cmps
test
pusha
cmps
and
popf
addr16
dec
sbb
fsub
xchg
sub
jo
loop
adc
lods
jp
or
lea
push
(bad)
cld
inc
sub
push
fsubp
mov
stos
pop
cli
adc
mov
dec
sbb
stos
jns
adc
test
sbb
mov
sub
(bad)
pop
ins
shl
aam
movs
cmp
clc
sub
test
jge
aad
inc
in
int3
add
scas
add
cld
xchg
(bad)
sub
sbb
addr16
cdq
sahf
ins
cmovns
add
xor
push
mul
inc
jge
pop
sub
mov
pusha
and
lock
jne
les
in
loope
stos
stos
aaa
inc
in
cmp
dec
pop
fnstenv
add
sub
xchg
lock
xchg
xchg
inc
cmc
daa
test
in
retf
adc
ss
popf
mov
jb
jmp
adc
sbb
xor
pcmpeqw
pop
add
push
aas
stc
push
dec
out
jo
outs
std
xchg
add
cs
xor
mov
clc
cmp
loopne
ja
xchg
out
adc
popf
ret
outs
xchg
stos
sub
aaa
inc
jp
lods
hlt
out
pop
adc
pop
ins
mov
std
in
idiv
mov
jnp
xor
xor
stos
mov
mov
push
jno
or
xchg
and
push
mov
cmp
ss
aad
xchg
sub
adc
cmp
mov
pop
dec
mov
mov
cdq
push
loope
push
jle
stos
xor
sub
pop
xor
push
(bad)
es
scas
pop
(bad)
pop
and
xor
movs
call
sbb
mov
and
mov
mov
xlat
xor
push
pop
je
cmp
pop
lock
dec
push
or
push
sub
add
xlat
call
pushf
imul
jns
out
retf
pop
jmp
mov
mov
scas
nop
not
clc
data16
(bad)
aad
in
movs
fist
sbb
movs
fcom
inc
std
ss
cmp
push
or
pop
dec
loope
fld
fdiv
add
sahf
jp
lods
(bad)
out
bnd
mov
dec
pop
loopne
gs
rol
or
add
int3
mov
neg
call
scas
xor
mov
add
rol
ror
sub
cmps
cmps
jne
xor
hlt
jge
add
sub
ja
outs
inc
not
cmp
arpl
and
add
push
cmc
lods
or
pop
movs
sbb
adc
es
loopne
jle
dec
and
mov
push
sahf
xchg
cwde
jb
or
outs
das
cmp
aaa
popf
arpl
jge
adc
mov
shr
inc
jmp
jnp
jo
push
xchg
das
aas
fnstcw
mov
out
xchg
test
scas
movs
add
sahf
inc
mov
int
lahf
add
sbb
add
(bad)
int3
fisubr
add
fstp
stos
cdq
sar
jge
or
inc
dec
loop
mov
sub
aas
jle
lahf
mov
ret
cwde
retf
(bad)
adc
adc
inc
xchg
loop
and
(bad)
pop
rcr
jl
lock
adc
cwde
inc
dec
jg
clc
or
scas
push
nop
(bad)
test
adc
push
lods
or
sbb
sub
lods
xor
test
adc
imul
mov
outs
push
jo
mov
ficomp
xchg
dec
shl
push
push
inc
mov
pop
push
test
add
repz
lods
sbb
shl
popa
jbe
lds
inc
pusha
sub
sti
retf
aad
outs
and
dec
sbb
fstp
jge
mov
pop
xor
and
adc
test
add
mov
add
and
jne
jl
inc
lods
out
icebp
dec
int3
ins
je
mov
xor
push
ins
mov
fisub
add
fisubr
loop
sbb
push
aam
std
cmp
mov
fldenv
(bad)
aaa
pop
les
jno
sub
xchg
ret
add
sti
lods
enter
mov
pusha
xchg
mov
mov
ds
ss
scas
in
cmps
aad
sub
or
outs
adc
dec
shr
jnp
clc
fld
nop
pusha
mov
mov
lea
out
and
popa
imul
mov
leave
(bad)
jl
and
adc
inc
pop
mov
arpl
ins
mov
inc
push
xor
js
dec
jnp
mov
jmp
xor
dec
mov
cmp
movs
(bad)
into
(bad)
sbb
pop
int
cli
mov
leave
arpl
cmps
mov
xchg
outs
dec
jp
jo
push
sub
je
cmp
jmp
stc
fistp
push
sub
add
sbb
push
add
mov
and
adc
add
inc
repz
fstp
xor
(bad)
push
add
dec
mov
or
ds
jo
push
lods
dec
mov
lea
push
pop
sbb
out
and
ds
sbb
les
pop
inc
jecxz
inc
or
mov
inc
mov
cdq
fld
pop
pop
sbb
jo
mov
inc
loopne
call
inc
pushf
cdq
cmp
xchg
in
cwde
mov
xlat
mov
or
rcr
retf
or
xchg
cmp
and
hlt
xor
inc
aam
test
inc
mov
inc
(bad)
sbb
gs
(bad)
xor
out
pusha
bswap
add
mov
mov
fcomp
pop
push
push
cli
jb
pop
jb
adc
sub
or
adc
out
imul
daa
addr16
or
xor
inc
(bad)
mov
cmps
add
sar
idiv
push
lods
pusha
xor
shl
sti
adc
(bad)
push
mov
pop
loopne
mov
push
push
enter
iret
retf
push
pop
sub
push
cmps
pop
mov
xchg
xchg
shl
xchg
and
jae
mov
mov
push
jne
pop
jb
mov
pop
push
jg
sub
mov
mov
dec
adc
jmp
mov
dec
ins
lods
inc
mov
dec
xchg
fwait
jbe
sar
js
retf
dec
clc
pop
lods
fwait
xchg
cmp
add
repnz
xchg
xor
sbb
xor
cld
jle
sbb
xchg
push
mov
dec
lds
rcl
hlt
jecxz
inc
push
(bad)
jne
add
cmc
dec
scas
in
xchg
sbb
jle
jns
jbe
ficomp
cmp
adc
into
in
iret
push
outs
push
cmp
(bad)
enter
sub
and
pop
mov
xchg
pushf
loope
mov
test
int
jle
xchg
js
jle
fnstenv
in
cmp
addr16
xchg
jge
xor
out
jbe
test
xor
cs
or
dec
pop
pushf
xor
retf
mov
xor
adc
pusha
fs
fidivr
xchg
jle
mov
aaa
es
aad
icebp
outs
aad
add
xor
in
dec
fnstenv
(bad)
arpl
fwait
adc
outs
jle
ins
fwait
pop
test
mov
mov
je
mov
xor
add
jmp
sub
sbb
movs
sub
dec
push
adc
hlt
cvtpi2ps
mov
cld
mov
fst
dec
or
fadd
jmp
out
in
pop
mov
add
dec
sub
cmp
(bad)
and
cmp
les
or
fwait
pop
mov
dec
sti
mov
fwait
push
stc
fwait
inc
pop
scas
ins
sbb
or
push
jo
in
dec
(bad)
int3
mov
leave
scas
out
shl
aad
icebp
pop
lods
out
cmc
je
push
mov
(bad)
popa
sbb
imul
lods
mov
movs
leave
das
icebp
fist
outs
xchg
cmp
dec
cmps
daa
pop
bound
fstp
cmp
(bad)
int3
or
xchg
out
mov
push
push
call
lock
ds
sub
jo
and
mov
add
test
js
aas
sar
push
pop
fst
or
sub
(bad)
rcr
jbe
cmp
push
gs
sti
cdq
cmps
jmp
js
(bad)
push
xor
(bad)
xchg
push
jecxz
out
inc
stc
bound
lods
retf
das
cmp
and
xchg
mov
sbb
pop
sub
fnstenv
lahf
test
ins
jns
loopne
jae
jo
into
pop
xor
sub
aaa
dec
pop
nop
jo
xor
or
call
xchg
inc
mov
pop
nop
mov
push
sbb
cs
and
sub
and
test
stos
retf
fistp
in
mov
pop
xchg
mov
and
ret
jae
shl
pop
(bad)
cmp
jecxz
movs
data16
idiv
pop
mov
pop
xor
add
outs
and
or
stc
dec
sub
js
fs
retf
and
mov
cpuid
add
imul
push
push
sub
les
jo
xchg
push
sbb
sbb
pusha
in
xlat
xchg
cwde
aas
addr16
sub
xor
sahf
jmp
jp
push
push
cmp
fstp
lock
rol
arpl
lds
frstor
repz
and
lahf
in
or
push
outs
lods
ins
xlat
stc
fist
pop
ss
dec
add
mov
pop
sahf
hlt
aam
push
push
and
ret
mov
scas
pop
add
dec
std
(bad)
(bad)
outs
ret
les
std
lock
push
inc
xor
sbb
mov
aam
inc
mov
sub
mov
aaa
jae
dec
mov
dec
ret
adc
addr16
repz
shl
jno
mov
xlat
in
cld
out
mov
jl
xor
jmp
dec
(bad)
pop
mov
mov
add
inc
inc
loope
fcomp
in
test
das
icebp
sahf
xchg
add
shl
std
xlat
call
and
into
cdq
test
push
mov
call
dec
jae
fld
cmp
add
nop
shl
sub
call
movs
sbb
jecxz
in
xor
xchg
jl
xchg
rol
xor
jmp
fidiv
xor
sub
nop
aam
mov
sahf
fcmovne
out
cdq
mov
mov
fs
pushf
sub
add
push
xor
adc
aaa
cs
sbb
xchg
fiadd
mov
mov
and
mov
ret
lods
popf
jl
inc
mov
ret
shl
jp
test
jno
dec
(bad)
and
sahf
lds
push
les
(bad)
and
in
sbb
std
movs
arpl
fdivrp
mov
cmc
in
(bad)
(bad)
xchg
hlt
jle
push
pop
dec
jnp
add
fwait
int3
cli
push
mov
aas
adc
gs
push
ins
pop
pop
pop
mov
int
clc
stos
dec
mov
xor
loopne
push
sbb
aam
cmps
(bad)
fist
mov
addr16
or
cmp
pop
sbb
jp
dec
xchg
(bad)
mov
adc
sbb
add
add
call
xor
sbb
push
sahf
mov
call
and
fcmovnbe
jno
mov
popa
cmp
rol
sbb
addr16
outs
cli
js
ja
sbb
push
shr
sbb
inc
std
or
cmp
out
in
jae
inc
je
adc
sub
sbb
cs
outs
pop
jno
das
jmp
add
lock
shl
mov
jns
xchg
push
xlat
add
pop
(bad)
test
pop
jle
pop
push
jl
inc
test
in
cmp
inc
cmp
pop
xchg
test
pushf
aad
and
dec
cli
loope
fcomi
lahf
lahf
pop
loopne
(bad)
pop
repnz
iret
xlat
ror
sub
test
jle
mov
adc
xchg
push
hlt
add
push
xor
and
rcr
fst
cmp
xor
repz
into
fstp
call
adc
pop
adc
rcl
rcr
inc
add
es
adc
cmp
cmp
lea
cld
cmps
jno
jb
or
popa
xchg
imul
rcr
cli
jge
xor
fist
out
cmps
mov
ss
je
fs
call
test
push
jg
test
jge
inc
push
clc
dec
repnz
pushf
cs
cs
mov
fild
ret
rcl
xor
mov
popa
jle
sbb
mov
and
es
pushf
dec
dec
je
fst
jno
jecxz
add
(bad)
mov
ss
daa
sbb
mov
(bad)
hlt
xchg
and
dec
sub
pop
pop
lods
mov
lods
pop
ffree
(bad)
call
mov
adc
inc
or
add
shl
or
push
out
xor
fdivr
push
js
add
inc
mov
cli
sbb
add
add
cwde
inc
xchg
popf
dec
sbb
xor
mov
pop
xor
cmp
gs
cmp
mov
mov
aam
rol
imul
aaa
mov
fdivrp
sub
std
vandps
inc
into
sub
sbb
adc
setnp
lock
daa
mov
sbb
xor
or
add
push
cld
add
mov
add
mov
shr
lock
and
test
lahf
sub
int
sar
ds
cmps
mov
jl
das
fild
inc
mov
idiv
sub
mov
adc
mov
dec
iret
fiadd
mov
sbb
fmul
pop
xchg
pop
popa
adc
ss
mov
xor
mov
cmp
mov
shl
aad
or
dec
mov
xchg
cmp
jmp
ja
in
out
sub
dec
popf
inc
stos
mov
cmp
mov
shl
cmps
popa
mov
fiadd
imul
pop
push
and
jmp
lea
idiv
sbb
enter
xchg
xchg
lock
dec
popa
push
push
es
in
sar
adc
adc
xchg
icebp
xor
cmp
into
pop
shl
mov
and
into
or
xor
sub
xor
fld
scas
mov
adc
add
fbld
in
push
pop
stc
jne
sbb
inc
mov
mov
and
ins
outs
ror
ds
pushf
jp
rcr
mov
mov
not
mov
push
lods
mov
push
jb
sbb
inc
and
dec
pop
inc
mov
and
inc
pusha
cs
gs
xor
cmps
mov
das
cmp
gs
leave
or
push
fimul
mov
mov
movs
jno
inc
sub
pop
(bad)
outs
cmc
and
test
js
mov
dec
ror
jno
daa
iret
adc
xchg
cdq
hlt
jmp
pop
mov
cmps
xchg
shl
fist
int3
(bad)
lea
jns
scas
push
xor
pop
xlat
les
jae
nop
dec
xchg
dec
xchg
inc
dec
mov
cdq
or
cmp
clc
adc
and
mov
cdq
enter
and
jl
inc
pop
iret
jmp
dec
xchg
xchg
imul
neg
mov
(bad)
retf
jp
stc
daa
or
and
pop
fisubr
adc
sbb
in
and
jmp
dec
aam
jbe
inc
(bad)
pop
call
inc
shr
xor
je
push
add
xor
adc
pop
rol
pop
mov
and
out
fs
push
mov
rol
fiadd
mov
nop
xor
pop
mov
jbe
sub
ins
test
jmp
lea
mov
(bad)
and
xchg
jmp
fwait
scas
or
(bad)
shr
mov
inc
mov
xchg
push
lahf
test
mov
pop
ss
icebp
das
not
dec
mov
ret
aam
daa
jnp
or
mov
pop
pop
pop
int3
inc
jecxz
adc
cmp
fild
jg
fwait
mov
(bad)
(bad)
jmp
cmp
push
sbb
jo
fcom
sub
or
out
lea
sub
add
scas
push
jns
adc
cmps
add
jmp
inc
pop
adc
ja
into
std
adc
movs
cmps
outs
mov
xchg
mov
idiv
and
mov
cld
or
sub
retf
add
dec
iret
out
cwde
push
jp
fisttp
add
inc
add
in
or
xor
inc
cs
das
fisub
arpl
mov
xor
sub
out
aam
mov
ja
mov
fstp
or
movs
inc
cmovae
popf
call
lea
stos
das
repz
mov
ds
repnz
in
pop
fldenv
out
sbb
dec
(bad)
sbb
aad
out
cs
je
fdivr
pop
sti
sub
popf
cmp
mov
sbb
cld
dec
cli
push
into
sub
mov
pop
mov
mov
cmp
cmp
mov
retf
aam
bound
cmovp
clc
sbb
sub
mov
ror
int
mov
push
(bad)
ins
or
jp
imul
dec
test
mov
aas
ficomp
daa
in
and
xor
mov
repz
sub
inc
mov
sub
rol
loopne
ds
dec
movs
gs
mov
call
jl
and
(bad)
and
iret
dec
and
push
loope
cwde
push
stos
call
int3
fs
push
rdpmc
xchg
push
test
js
aad
adc
test
add
leave
jno
ret
arpl
adc
gs
sar
sub
jl
sub
push
mov
dec
popa
setb
fisttp
jbe
pop
pop
outs
xchg
cmp
pop
sub
sbb
imul
push
push
fcom
ins
mov
lods
test
pop
(bad)
pushf
sub
xchg
mov
div
lods
adc
rep
es
dec
or
pop
sub
fistp
mov
clc
mov
popf
retf
xchg
dec
push
or
xor
jns
mov
arpl
cld
jno
pop
inc
and
loop
lea
push
and
hlt
mov
sbb
add
ja
mov
mov
clc
xor
mov
loop
pop
mov
pop
jmp
add
jnp
inc
(bad)
test
ins
in
in
pop
imul
je
mov
inc
add
dec
scas
xor
cmc
and
sub
scas
int
fsubr
or
dec
or
call
cmps
inc
dec
push
xchg
in
js
nop
inc
cs
aas
jns
in
ds
arpl
rol
imul
sub
inc
xchg
sub
retf
dec
fmulp
inc
push
in
cmps
push
adc
fiadd
pop
fild
sub
loopne
mov
mov
in
xchg
dec
mov
cmp
push
xchg
stos
push
xchg
fistp
ins
mov
cmp
jl
imul
cmp
jmp
test
pop
cli
shl
lods
dec
jp
ds
outs
fxch
mov
in
shl
xor
pop
mov
mov
add
pop
xlat
sub
jmp
data16
sub
std
in
pop
xchg
mov
loopne
mov
stc
(bad)
jmp
lock
mov
dec
jle
inc
jo
jnp
int3
repnz
sbb
popa
mov
dec
jecxz
cs
dec
jl
test
xchg
and
or
sahf
leave
xchg
cli
adc
mov
add
inc
fiadd
push
dec
test
cmp
mov
xor
mov
mov
cmc
xor
fs
adc
test
sbb
adc
jb
aas
movs
adc
fadd
loope
fucom
or
xchg
dec
adc
jnp
xor
push
sub
pop
and
out
dec
jne
xchg
test
outs
inc
or
sti
cmps
jp
xor
ficomp
mov
mov
aad
movs
and
(bad)
rcl
dec
test
movs
inc
sub
mov
dec
cs
and
jmp
adc
and
inc
arpl
ret
outs
cmp
cs
mov
shr
mov
into
in
push
pop
sbb
sar
xchg
test
add
ror
and
jmp
dec
dec
cld
fiadd
cwde
cmp
mov
out
scas
ins
cmps
mov
in
(bad)
rcl
fcomi
dec
aaa
mov
xor
addr16
adc
out
jl
(bad)
out
jge
jle
add
xchg
imul
sub
mov
jle
adc
ret
pop
les
clc
push
pushf
mov
xlat
mov
sub
je
sbb
gs
or
mov
pop
mov
icebp
cmps
es
and
jg
fst
adc
sbb
add
retf
lahf
xor
and
add
(bad)
fild
add
dec
cmp
mov
movs
push
mov
fidivr
movaps
in
pusha
movs
push
mul
daa
add
aam
cwde
xor
jmp
jo
jmp
es
aam
pop
xchg
sbb
xor
jmp
std
add
jp
adc
fidivr
movs
ret
(bad)
retf
popf
add
and
push
sub
jg
sub
mov
retf
imul
xlat
pop
lds
pop
inc
dec
in
aaa
jp
xor
(bad)
mov
fstp
and
dec
mov
cmc
xor
aaa
fstp
xchg
loopne
push
popa
jae
and
aaa
loop
xor
pusha
xor
aaa
inc
push
aaa
jbe
arpl
cmc
lods
lods
push
loopne
icebp
xchg
jno
or
fimul
push
sbb
mov
sub
lds
and
sahf
iret
hlt
loopne
cdq
jb
mov
call
lock
sub
mov
cmc
inc
jb
cmp
xor
popa
xor
xchg
fwait
push
and
(bad)
xor
in
into
and
ret
push
sub
sub
xchg
mov
xor
add
jb
out
or
or
in
xor
in
dec
sbb
ins
jg
(bad)
xchg
(bad)
add
xchg
sbb
mov
cmc
cmp
das
mov
jle
bound
mov
enter
or
inc
bound
jge
test
xor
prefetch
mov
and
das
pushf
jl
xchg
xor
jo
mov
cmp
cmp
pop
out
loopne
dec
mov
push
adc
aas
arpl
cwde
shl
mov
bound
inc
sub
jp
int3
cwde
ins
(bad)
fdivr
sar
adc
fcomp
iret
rsqrtps
aad
(bad)
pop
in
jge
ins
add
add
mov
push
mov
cmp
xchg
dec
(bad)
clc
enter
mov
jae
adc
out
mov
xchg
xchg
or
mov
movs
cmp
out
pop
push
sar
xchg
call
ins
pcmpgtw
xchg
mov
mov
jno
or
lock
retf
pop
addr16
int3
pop
sub
pushf
sub
push
xor
pop
repz
dec
pop
test
mov
inc
sbb
repnz
test
shl
stos
xchg
inc
shl
push
cmp
fimul
cmc
call
call
ret
xchg
push
pop
into
std
jo
das
add
inc
fwait
cmp
es
push
jmp
jbe
cmps
in
pop
daa
jg
sub
mov
pop
loop
test
fs
pop
movs
mov
popa
inc
les
cmp
dec
add
cmp
sub
sbb
and
cmp
stos
sub
(bad)
push
inc
sbb
mov
and
test
push
dec
jle
das
bound
lods
adc
dec
in
fwait
int3
ss
fwait
pop
sub
movs
pop
test
or
xchg
call
(bad)
xchg
sbb
ror
add
sub
scas
jnp
sub
mov
inc
or
sub
xchg
out
push
xor
adc
pushf
shl
pop
hlt
dec
repz
retf
adc
or
dec
aas
cmp
aaa
inc
aaa
pop
and
xchg
inc
sub
fisub
jno
mov
mov
es
push
outs
ss
cmp
jo
sub
and
mov
cmp
bound
mov
test
xchg
mov
repnz
ins
xchg
push
push
cli
xor
in
retf
push
or
push
cld
mov
mov
cdq
mov
jne
inc
mov
(bad)
jle
lea
fist
mov
dec
loope
jmp
sub
mov
and
push
and
sbb
in
sbb
retf
and
div
sahf
mov
add
sbb
stc
add
cmp
aaa
popa
xor
jge
dec
mov
add
or
pop
ficom
cmp
add
loop
add
xor
dec
dec
adc
mov
addr16
test
mov
xchg
std
adc
popa
mov
out
xor
rcr
xor
cld
ins
sbb
bound
mov
adc
loope
rol
push
idiv
sub
not
inc
mov
arpl
push
add
lahf
or
add
bound
pop
mov
sbb
cmp
test
jnp
dec
mov
xchg
stos
pop
cmps
aad
mov
or
addr16
cmc
and
push
adc
fisttp
adc
stos
and
fcmovne
repz
rcr
js
shr
cmps
ds
mov
add
mov
jns
test
in
adc
pop
loop
add
inc
pop
jbe
and
add
xchg
icebp
xchg
(bad)
addr16
sbb
pop
dec
or
movs
gs
and
arpl
jo
push
xchg
test
xor
inc
fs
(bad)
xor
(bad)
dec
push
fsubr
cmp
sbb
mov
leave
pop
jle
neg
or
fmul
pop
cmp
mov
cli
je
push
dec
clc
pop
fucomp
dec
into
add
jmp
ins
dec
leave
cwde
push
jmp
adc
adc
bound
xor
dec
and
inc
test
in
and
ficom
outs
add
jp
sub
hlt
dec
jecxz
and
xor
add
imul
outs
pop
sub
inc
int
and
gs
lods
pushf
loopne
or
xor
dec
xlat
mov
push
xchg
adc
cld
mov
mov
hlt
jnp
ret
cmp
pushf
push
loope
push
mov
mov
xchg
imul
fidiv
cmp
iret
jb
retf
scas
pop
out
push
ss
cmps
aas
sbb
popa
mov
dec
(bad)
out
mov
inc
jns
mov
jp
shr
xor
sbb
rcl
popa
push
cs
jge
and
xchg
add
and
jle
mov
and
into
mov
and
pop
xchg
outs
mov
adc
add
loopne
mov
cvtps2pd
frstor
push
adc
lahf
lods
sbb
sbb
dec
and
movs
stc
(bad)
inc
bound
mov
sahf
mov
adc
jecxz
out
dec
iret
nop
pop
mov
jp
xchg
mov
fdivr
push
call
mov
push
sbb
dec
outs
test
scas
out
sbb
pop
data16
jle
sbb
pop
pushf
ins
push
retf
mov
rol
inc
loope
dec
aas
sbb
xchg
cdq
lahf
xor
mov
xchg
adc
pop
imul
hlt
in
and
sbb
jne
popf
jecxz
popf
retf
test
or
cmp
mov
push
in
fnstcw
jmp
push
jmp
mov
jb
pop
out
aaa
inc
add
out
fnstsw
jbe
lods
and
xor
sub
test
mov
in
push
lods
xchg
aas
dec
js
cdq
jo
lahf
xchg
enter
dec
mov
scas
add
out
pushf
(bad)
stc
and
jge
and
outs
mov
hlt
(bad)
sbb
add
(bad)
stos
lods
out
cwde
add
pop
add
pop
add
xchg
inc
cmp
add
mov
xchg
jmp
cwde
jecxz
push
int3
out
std
(bad)
daa
imul
cdq
clc
mov
lea
xchg
aad
js
outs
and
jmp
add
stos
cmps
neg
pop
push
mov
mov
imul
inc
cmps
xchg
and
dec
xchg
shr
fcom
lods
jl
shl
stc
mov
stos
lds
jp
xchg
or
pop
cmc
or
xchg
int
jp
lea
push
xchg
stos
out
xor
in
movs
popf
daa
sub
mov
mov
loope
or
add
add
push
stos
cwde
test
jno
and
loopne
or
das
jg
push
mov
sbb
adc
fs
pop
dec
xchg
mov
pop
pop
jmp
sahf
shl
add
jae
retw
sub
dec
and
int3
adc
and
dec
xor
jle
xor
daa
xchg
int
(bad)
sahf
test
fistp
ror
imul
nop
or
adc
bound
jno
mov
addr16
jno
ins
retf
loop
xchg
xor
add
add
mov
sub
std
sbb
xchg
mov
and
pop
ficom
shl
enter
inc
fs
or
mov
jle
(bad)
sbb
das
dec
(bad)
in
push
mov
mov
je
push
out
cli
pop
int
iret
(bad)
xchg
push
push
and
mov
mov
repz
xor
into
mov
pop
adc
pop
jb
adc
mov
push
jb
sbb
jo
sbb
arpl
lea
in
scas
repz
jae
push
xchg
ficomp
xor
mov
mov
(bad)
and
fstp
adc
(bad)
dec
fbstp
call
xlat
enter
stos
add
loop
mov
test
fwait
cmp
xor
push
clc
bound
int
mov
push
or
cmc
shl
xor
xchg
pop
jae
sub
hlt
or
mov
ds
sub
rcr
cld
int
fcmove
jnp
add
mov
movs
sar
jae
fbstp
xchg
jb
nop
fwait
jge
test
int
lock
dec
cmps
xchg
mov
repz
dec
sbb
mov
push
or
and
push
adc
call
add
sub
sti
(bad)
push
ror
xor
push
(bad)
jno
pop
xor
lahf
dec
jmp
icebp
fucom
test
aas
sub
jmp
mov
enter
jnp
std
mov
push
dec
fwait
fwait
imul
push
out
or
push
repz
mov
jle
sbb
int3
xor
cmp
shl
dec
lahf
fidiv
rcr
mov
js
iret
xor
adc
std
inc
push
mov
cmp
aad
lods
xchg
aad
pushf
inc
fisubr
cmp
cmp
add
pop
sbb
pop
cld
sbb
add
lds
je
stc
xchg
or
mov
and
mov
rcr
movs
push
add
cli
xor
(bad)
test
jo
sub
jmp
adc
pop
lock
lds
mov
ret
add
iret
scas
adc
mov
psubd
mov
pop
aas
xor
or
cld
xchg
scas
lahf
add
(bad)
xchg
data16
loopne
nop
inc
jecxz
ins
inc
mov
sti
lds
sti
inc
or
mov
mov
mov
(bad)
pop
aam
xchg
daa
pusha
jl
and
out
ds
in
je
inc
sbb
and
xchg
xchg
stos
movs
and
add
sub
or
pop
ds
idiv
ror
xor
jbe
sub
and
(bad)
jmp
fcom
mov
pop
stos
xchg
rcl
and
jo
and
push
icebp
fldenv
sub
pop
add
jnp
inc
cld
mov
jb
dec
inc
das
in
mov
xchg
cmp
aaa
daa
les
les
push
inc
loope
adc
mov
jnp
cmps
in
xor
and
jmp
inc
fild
lods
enter
cmp
adc
xor
xchg
jo
inc
stos
mov
pusha
(bad)
in
repz
pop
xor
(bad)
loop
les
and
dec
cmp
push
pop
pop
or
push
ret
mov
outs
xchg
hlt
in
and
and
mov
(bad)
ja
add
pop
xchg
jg
repz
mov
leave
mov
jo
lahf
loopne
inc
adc
pop
and
fimul
or
shl
addr16
dec
(bad)
out
in
xchg
xchg
mov
sub
mov
pop
mov
add
pusha
fidivr
or
adc
test
scas
imul
push
mov
mov
pop
cmps
les
int
(bad)
sbb
mov
aaa
pop
sbb
push
xor
inc
out
cmp
xor
sbb
sub
popa
stos
je
inc
mov
movs
push
lds
(bad)
pop
stos
data16
sub
je
daa
jmp
out
mov
call
lock
data16
or
mov
popf
cmp
fiadd
sub
(bad)
div
mov
scas
mov
dec
mov
cwde
(bad)
jecxz
int3
dec
imul
ds
sbb
inc
pop
inc
test
inc
lock
mov
lea
push
xor
xor
popa
xchg
sub
into
test
mov
and
pop
dec
jo
jne
cmc
cli
addr16
cmp
mov
jge
movs
bnd
inc
pop
sbb
jp
push
(bad)
test
leave
aad
add
fs
dec
lahf
ds
sub
(bad)
jmp
dec
ja
and
data16
jmp
jae
(bad)
icebp
loopne
sti
xchg
sbb
dec
cmc
cmp
mov
xor
xchg
and
inc
and
pop
stos
test
stos
dec
pop
ins
xchg
(bad)
mov
jbe
dec
stc
xchg
pop
repz
mov
mov
sub
and
cmp
fndisi(8087
fmul
paddsw
out
pop
jnp
sbb
test
xchg
clc
inc
push
sub
sbb
ss
mov
setae
jmp
add
jecxz
outs
dec
sub
(bad)
psadbw
test
push
pop
mov
xchg
clc
data16
int
in
push
dec
push
outs
sbb
je
sbb
cs
repnz
xor
stos
inc
out
jnp
pop
pusha
add
lods
retf
cmp
mov
jbe
push
div
int3
scas
xchg
mov
(bad)
es
add
(bad)
mov
vpmacssdd
adc
push
jo
inc
jmp
call
or
fdiv
mov
sbb
cld
call
cmp
jecxz
jle
dec
sbb
or
add
shl
rcl
adc
imul
cdq
test
out
(bad)
pushf
add
mov
mov
jecxz
mov
adc
fadd
push
outs
(bad)
cmps
sub
sub
js
xor
in
addr16
stos
outs
adc
cmp
sbb
or
scas
sbb
mov
cli
test
sti
nop
cwde
pop
mov
loope
mov
data16
cmp
dec
ds
sub
(bad)
mov
mov
jle
dec
pop
xchg
and
dec
jg
loopne
ror
loopne
out
mov
fdiv
xchg
jno
jb
push
daa
fadd
cmp
(bad)
repz
adc
or
jmp
mov
mov
pop
sar
cmp
add
jns
aad
jae
mov
daa
cmp
mov
(bad)
cmp
xchg
cld
fistp
rol
adc
xor
shl
adc
lahf
adc
ficomp
and
sub
push
sti
cwde
in
das
jbe
dec
retf
into
bound
inc
lods
or
js
inc
push
mov
addps
sub
mov
jo
out
in
comiss
outs
movs
push
jb
sub
jb
shl
mov
adc
cli
nop
and
mov
ja
or
add
in
retf
mov
sbb
pop
les
mov
out
fxch
or
mov
repz
jmp
jl
push
lock
mov
xor
je
jl
sar
sub
int
add
in
or
or
loopne
in
push
mov
adc
retf
jo
arpl
mov
or
sti
pushf
in
ret
neg
xchg
push
adc
imul
(bad)
and
test
mov
inc
loopne
mov
pop
sbb
lock
ins
push
(bad)
repnz
test
lahf
mov
dec
cmps
push
mov
fmul
xor
xchg
jmp
push
out
mov
in
mov
ins
or
pop
xor
sub
add
fstp
clc
shl
mov
ret
xchg
inc
std
and
jnp
neg
fst
mov
in
scas
and
mov
and
sbb
bswap
cmp
adc
ret
and
push
mul
out
add
sub
mov
jns
mov
test
xchg
retf
out
pop
jo
out
pop
mov
movs
push
xchg
fisubr
movs
retf
out
adc
movs
aaa
int
nop
out
xor
push
cdq
test
aad
push
jl
sbb
pop
push
mov
push
out
mov
cld
ficomp
inc
xchg
out
int
adc
inc
out
hlt
pop
inc
scas
loop
adc
xor
add
adc
or
adc
fcmovu
lock
cmps
pop
xchg
sbb
sub
adc
hlt
imul
dec
leave
ins
je
cmp
jo
mov
xchg
dec
dec
jmp
sbb
(bad)
js
adc
push
(bad)
jbe
and
sub
pop
mov
sub
icebp
push
fdiv
pop
lock
aas
or
in
dec
cmp
cld
adc
fs
push
xor
lahf
das
icebp
mov
int
pusha
imul
outs
fdivp
sbb
das
inc
jmp
clc
cmp
inc
push
out
call
outs
call
cmc
loopne
icebp
cs
clc
loopne
inc
je
in
int3
dec
or
mov
dec
lods
jo
push
sbb
arpl
lea
cmps
repz
daa
and
and
xchg
xchg
int
int3
mov
in
fsubrp
js
pop
clc
xchg
jns
mov
cmc
shr
pop
fcom
add
stos
cmps
xor
test
add
mov
pmulhuw
icebp
inc
arpl
loope
mov
mov
sbb
js
jge
aam
sahf
sbb
aaa
xor
sbb
js
or
inc
sbb
imul
pop
xor
cld
sub
outs
mov
stos
repz
movd
mov
jmp
ins
cmp
jo
mov
lahf
cli
mov
retf
mov
jle
and
mov
aam
movs
in
jge
mov
push
call
out
mov
sar
adc
jne
dec
dec
fstp
pop
pushf
cmc
shl
fld
jns
jg
retf
cdq
push
and
sbb
and
pop
pop
out
test
adc
adc
sar
sbb
push
xor
pop
cs
add
test
rol
data16
icebp
mov
dec
mov
xor
and
and
dec
jne
retf
cmp
int3
and
or
mov
jns
jae
repnz
cmps
pop
jmp
neg
mov
xor
fisubr
xchg
arpl
retf
add
data16
cmc
out
pop
pop
sub
pop
jne
mov
in
add
sub
cmp
xor
popa
test
cmp
(bad)
sbb
leave
(bad)
xor
mov
ins
stc
jecxz
stc
jmp
out
pop
js
xor
call
fisub
outs
sahf
adc
scas
fisttp
push
ss
sbb
pop
jl
adc
(bad)
dec
cdq
(bad)
jae
push
adc
sbb
in
push
adc
out
scas
dec
xchg
add
jecxz
gs
ja
and
stos
aas
jns
test
(bad)
sub
inc
pop
jno
(bad)
cmp
add
pop
pop
out
dec
xchg
and
scas
mov
mov
sub
repz
ror
movs
xor
mov
adc
mov
adc
add
push
call
xor
bound
dec
cmps
test
jb
xchg
rol
inc
arpl
outs
push
sub
dec
ja
hlt
sar
cdq
in
fcomp
jnp
daa
and
cwde
stos
pop
cs
fld
jae
stos
cmp
hlt
movs
mov
fst
dec
hlt
ss
xor
pop
test
push
jl
sbb
xchg
xor
pop
adc
push
xor
int
xchg
mov
ret
pop
inc
jge
lods
lds
fstp
xor
shr
pop
push
adc
in
jp
mov
sub
(bad)
ds
pop
xchg
dec
sbb
xchg
and
dec
outs
jle
shl
jmp
add
fisub
xor
jb
jno
xor
lods
fstp
jecxz
out
inc
leave
adc
mov
push
cs
mov
or
sub
xchg
in
add
pop
pop
fisttp
mov
enter
jmp
and
(bad)
push
pop
les
or
adc
fldenv
mov
jbe
and
and
cmp
jo
shl
fisub
mov
bound
mov
xor
push
push
mov
rol
cwde
xchg
sbb
(bad)
fmul
or
ja
xor
lahf
push
retf
adc
test
(bad)
pop
mov
into
fwait
xlat
xor
pop
cmp
or
mov
cs
and
push
dec
fcom
sbb
lahf
sbb
xchg
xor
xor
call
xchg
mov
test
pop
mov
cmps
ret
dec
fimul
xchg
aaa
in
jmp
ins
cli
inc
aaa
loope
repz
popa
imul
(bad)
adc
jmp
popa
fdivr
dec
push
or
pop
push
fld
popa
loope
inc
add
and
adc
cmps
js
outs
cmp
xchg
ja
iret
push
sub
inc
scas
inc
ret
retf
mov
fmul
jmp
push
(bad)
mov
xchg
xlat
out
fwait
adc
add
out
movs
or
jne
retf
ror
adc
cmp
sbb
inc
das
leave
mov
and
push
xor
ret
sub
inc
push
(bad)
ror
pusha
out
je
test
test
sahf
lds
xor
(bad)
jnp
jge
cmp
xchg
sbb
hlt
xor
xchg
pop
lods
adc
pop
xchg
xchg
and
add
int3
out
retf
add
sar
push
scas
pop
fwait
popa
imul
inc
jb
sub
jb
or
inc
scas
movs
lods
sub
add
xchg
mov
push
movs
cmp
xor
out
mov
hlt
hlt
push
dec
mov
xor
push
les
and
xchg
cmc
cmp
fisubr
gs
ss
cmc
sbb
adc
sub
pop
out
push
jo
mov
inc
dec
ret
lahf
repnz
xor
push
add
add
sbb
ds
rcl
ja
test
addr16
cwde
mov
mov
arpl
dec
popf
dec
sbb
imul
mov
mov
sti
or
aam
or
sbb
pop
jg
or
mov
aaa
in
loopne
stos
nop
jle
push
(bad)
mov
test
mov
fistp
(bad)
cmp
adc
scas
mov
push
loope
push
nop
fmul
rcl
aas
push
mov
nop
imul
scas
jo
fs
into
adc
bswap
clc
fisub
lods
cmps
push
stos
adc
mul
mov
js
lock
xor
mov
push
enter
mov
and
xor
dec
std
sbb
fild
(bad)
pushf
test
call
push
inc
jnp
out
cs
imul
shl
jae
ja
jge
mov
inc
cmps
cmps
scas
and
inc
fimul
mov
ja
xor
pop
pop
arpl
pop
xchg
cs
or
in
iret
push
out
xor
rcr
sub
or
loope
stos
stos
popa
xor
cwde
std
push
out
cmp
xor
and
popa
and
addr16
push
mov
mov
sub
sahf
call
add
and
sub
push
pop
pusha
popf
sbb
jbe
hlt
mov
jnp
jns
pop
lods
mov
imul
pop
mov
std
stos
ja
lods
enter
sbb
(bad)
sub
pop
or
lahf
jecxz
retf
sub
xor
cmps
or
cwde
push
cmc
sahf
xchg
das
xchg
push
leave
xchg
(bad)
push
jnp
or
icebp
lahf
and
loopne
in
add
cmp
retf
jbe
mov
adc
xor
sahf
pop
cld
mov
clc
mov
aad
(bad)
mov
(bad)
jmp
cmp
mov
sbb
test
pop
fsubr
mov
idiv
stos
and
or
out
push
inc
xor
pop
fsub
stc
ins
or
fnsave
sar
jns
fild
or
mov
std
fcom
xor
and
jmp
push
(bad)
mov
bound
push
pop
push
shl
test
in
ins
push
mov
mov
mov
pop
std
xor
jp
test
mov
imul
ins
push
adc
imul
and
push
cs
sbb
xchg
mov
test
and
imul
jg
add
sub
and
outs
pop
lahf
movs
and
fnstsw
mov
sub
dec
add
es
or
cwde
mov
pop
mov
xor
push
fs
pushf
inc
aad
cmp
ins
sub
mov
pop
repz
inc
sub
xchg
ja
mov
jl
rcr
cwde
dec
xchg
test
inc
cmp
cmp
mov
clc
cmp
pop
(bad)
retf
repz
push
xchg
add
jno
ror
shr
inc
(bad)
jbe
rol
cmp
js
int3
mov
cmp
int
mov
jbe
jbe
or
jnp
popa
cmp
and
inc
retf
nop
lea
push
jb
jge
sbb
cmp
in
xor
das
pop
out
daa
xchg
xor
and
in
sahf
daa
pop
jo
fisttp
jl
fwait
lock
and
mov
mov
push
push
dec
and
fidiv
aad
fcomi
add
test
push
call
cmp
(bad)
or
cmp
aas
in
mov
loop
jmp
fiadd
sub
int
or
mov
ins
pushf
mov
retf
sbb
(bad)
cli
xchg
in
adc
dec
add
fadd
cmp
xchg
mov
aad
gs
xor
xor
pop
int3
xor
sti
pop
mov
or
sahf
test
cmp
sbb
adc
jl
lahf
inc
push
push
mov
cmps
test
out
arpl
sbb
jecxz
aaa
mov
outs
(bad)
or
mov
jp
(bad)
(bad)
rcl
enter
xchg
cdq
push
cli
lds
popa
xor
sub
fild
push
dec
cwde
gs
xchg
cdq
adc
jno
fldenv
std
sub
lahf
out
jmp
add
fisub
add
stos
mov
imul
and
adc
shr
call
and
pop
push
or
mov
push
cmp
xor
call
push
in
sar
inc
add
xor
out
mov
adc
push
(bad)
push
je
xchg
into
mov
mov
cmp
in
add
inc
or
push
push
daa
fimul
xchg
adc
mov
jbe
mov
cmp
push
cmps
cmp
cmp
mov
jb
popf
or
dec
mov
cwde
(bad)
cdq
jmp
aam
jp
cmp
enter
clc
call
shr
pop
lahf
setge
xchg
lock
jnp
mov
jo
(bad)
in
dec
js
cwde
xchg
cs
sbb
or
mov
mov
jg
sbb
xchg
aam
xor
(bad)
(bad)
loope
cli
cmp
cmps
pop
pop
inc
cmp
add
inc
and
icebp
out
std
(bad)
push
dec
adc
jle
pop
rcl
sbb
sar
mov
out
mov
outs
push
cli
cmp
pushf
loope
jno
pop
out
pusha
fs
dec
loop
add
out
push
xchg
jne
sub
add
dec
mov
into
jle
push
fwait
icebp
es
cmp
push
and
jne
and
dec
cmc
dec
jge
lock
adc
std
(bad)
outs
daa
add
mov
enter
mov
dec
cmps
mov
inc
jl
fcmovnb
jge
test
inc
push
sti
ins
(bad)
in
stc
cmps
mov
lods
pop
pop
push
fcmovnu
sbb
adc
cmc
scas
je
lods
and
xchg
push
out
jmp
mov
movs
clc
lea
mov
push
int3
pop
and
cdq
jae
xchg
imul
cmp
xor
xchg
mov
dec
ret
xchg
mov
popf
mov
pop
es
mov
mov
xchg
xchg
hlt
rcl
pop
in
in
test
jmp
rcr
push
cmp
cdq
repnz
mov
jno
mov
adc
daa
xchg
or
xchg
into
ror
inc
push
lods
add
and
call
pushf
fwait
mov
sub
push
int
mov
les
and
sub
jl
jns
loope
cmp
retf
push
xlat
pop
iret
aaa
arpl
data16
ss
cmp
lock
rol
setb
pop
ret
or
xor
mov
lahf
scas
sti
push
test
mov
test
xchg
cs
mov
inc
inc
push
data16
pop
cmp
mov
(bad)
cli
mov
xlat
xor
mov
ficomp
or
sbb
aaa
sub
ja
cmps
push
(bad)
mov
adc
jmp
sbb
fs
adc
mov
adc
frstor
xchg
cmps
dec
ins
inc
cmp
test
and
mov
mov
gs
push
mov
mov
(bad)
and
in
mov
jb
sbb
ret
sub
dec
dec
mov
mov
xor
jl
xchg
add
inc
std
outs
test
or
mov
or
neg
popf
call
leave
rcl
in
in
or
dec
jecxz
out
mov
and
cmp
into
js
ss
jb
jbe
cmc
dec
stc
call
rcr
jne
pop
pop
inc
outs
or
mov
retf
fwait
xchg
push
mov
stc
neg
dec
aas
mov
adc
shl
(bad)
push
cmp
jmp
(bad)
fsubp
jne
adc
add
or
or
data16
(bad)
les
xor
push
push
inc
imul
inc
loopne
outs
mov
pop
xor
jge
bound
xor
es
xchg
xchg
ja
mov
mov
dec
pop
test
mov
cmp
mov
loopne
and
xor
fist
pop
scas
or
cmp
rcr
test
retf
sahf
or
movs
cmc
je
sub
rcl
sub
call
cli
test
scas
retf
js
cmps
pop
(bad)
cmps
or
adc
shl
lahf
stos
jmp
mov
mov
dec
fwait
dec
jbe
inc
xor
loop
mov
mov
cmp
mov
cld
sub
inc
daa
call
test
pop
sti
and
push
add
pop
inc
jl
or
xchg
test
dec
jbe
mov
push
mov
push
fidivr
xor
cmp
lods
mov
retf
cdq
int
push
sub
cwde
hlt
ins
jmp
ins
stos
push
pop
and
aad
fisttp
sub
std
add
stos
sbb
test
adc
arpl
stc
cli
jecxz
inc
push
shr
or
fs
jb
test
ficom
(bad)
stc
push
sub
les
nop
jle
inc
pop
mov
cmps
xchg
ret
ja
popf
push
mov
add
call
sbb
in
(bad)
mov
sbb
inc
and
ret
pop
mov
loope
mov
dec
pusha
test
lods
daa
es
cld
(bad)
sub
push
mov
push
mov
ffreep
repz
push
shr
icebp
sar
push
xor
inc
jns
jp
mov
mov
jae
in
and
in
lds
cmp
repz
push
in
pop
push
jb
add
nop
sbb
cmp
pop
rol
mov
bound
pop
cmp
add
xor
or
arpl
in
ret
aam
outs
jg
stos
or
xor
cli
pop
fldcw
fnsave
out
(bad)
test
mov
dec
nop
ins
push
(bad)
ins
sbb
cld
push
out
out
iret
ss
cmp
pop
dec
iret
mov
lods
popf
out
mov
and
icebp
xor
inc
xchg
push
or
sub
adc
adc
enter
adc
or
pop
leave
cmps
pop
sub
cmp
sub
enter
std
inc
lea
jns
into
mov
movs
inc
push
outs
imul
xor
cmp
cmps
leave
cmp
and
adc
(bad)
sbb
movs
lea
push
cli
adc
lea
or
jne
mov
(bad)
repnz
xor
xor
rcl
adc
aaa
sbb
cmp
cwde
cmp
adc
and
sbb
jae
popf
test
inc
not
arpl
movs
push
xchg
or
loope
mov
ins
sbb
rcl
mov
mov
(bad)
jo
not
pusha
cli
call
and
cmps
fidivr
jmp
sub
repz
retf
mov
retf
lds
in
scas
cmp
fdiv
mov
cmps
pop
lds
and
push
retf
mov
iret
rol
shl
cmp
arpl
test
mov
add
mov
call
mov
mov
sbb
clc
fs
out
test
shl
pop
xchg
arpl
ret
adc
mov
out
mov
out
jle
pushaw
sub
add
pop
lahf
ds
pop
jbe
fldenv
ffree
mov
shl
jmp
xor
jmp
jns
in
sub
aam
inc
push
sub
in
cmp
mov
(bad)
cs
xlat
dec
cmp
aas
daa
add
cs
inc
imul
cwde
lods
push
xor
dec
lea
inc
bnd
xchg
mov
iret
jl
lods
test
mov
push
xor
jb
fbld
pusha
or
mov
dec
jecxz
hlt
push
mov
add
test
fstp
push
jg
pop
gs
add
stos
mov
ret
jmp
mov
les
xor
jg
int
inc
push
in
push
sbb
(bad)
push
cmp
mov
inc
inc
arpl
lds
push
sub
adc
and
and
ss
ins
dec
push
leave
or
dec
fbld
ret
sbb
(bad)
jns
mov
call
mov
pop
xchg
xchg
inc
add
daa
pop
and
cdq
jae
cmp
and
jp
add
mov
(bad)
push
pop
jge
pop
stc
pop
mov
xor
mov
cli
les
out
sar
xor
inc
mov
or
adc
xchg
sbb
lods
cwde
aaa
or
pushf
sar
cmps
mov
add
je
cmp
test
cmp
adc
xor
push
xchg
outs
dec
mov
jne
loop
inc
sbb
cmp
xor
sub
push
xchg
mov
stos
mov
cmp
loopne
jb
call
push
mov
into
shr
adc
scas
or
xlat
cs
scas
test
mov
pop
neg
push
cmps
xchg
test
mov
lock
das
adc
stos
ins
push
fld
mov
shl
or
nop
xchg
scas
loopne
inc
nop
and
jl
pushf
mov
(bad)
xor
jge
fwait
sub
je
outs
add
push
cmp
sbb
mov
push
lds
inc
push
add
sbb
outs
(bad)
cwde
push
repz
(bad)
mov
call
test
jno
adc
adc
inc
cmp
repnz
cli
and
pusha
push
jg
mul
cmc
ss
cwde
adc
jg
lods
loopne
ds
mov
cli
rcr
adc
movs
je
sbb
mov
cmp
pusha
mov
dec
aad
rcr
les
xchg
cmp
ret
fisubr
lds
lock
pop
sbb
loop
es
hlt
push
adc
mov
fimul
dec
mov
mov
jle
adc
das
cmp
into
cmp
aaa
cmp
mov
ret
xor
push
mov
test
adc
push
pushf
loopne
aas
mov
imul
mov
ret
fwait
mov
and
dec
or
call
fdivr
xchg
aam
mov
sub
dec
fldcw
xchg
in
out
ror
test
and
mov
pusha
sbb
repnz
jl
push
and
test
jge
retf
hlt
inc
rep
inc
pop
fsin
push
cmp
shr
pop
add
xor
cmp
imul
icebp
(bad)
lock
leave
scas
dec
or
pushf
cli
add
ss
adc
mov
ds
inc
aas
in
cdq
mov
mov
movs
and
fst
adc
iret
xchg
mov
xor
(bad)
sbb
or
jns
fmul
cmp
aaa
loopne
push
(bad)
fisttp
mov
inc
shr
push
xchg
imul
dec
aas
add
dec
inc
pop
mov
repnz
or
mov
data16
bnd
jecxz
lea
pusha
cmps
dec
xchg
inc
lods
lea
shl
pop
jl
push
mov
and
(bad)
xchg
es
out
stos
sahf
retf
(bad)
pop
cmp
mov
fcmovnbe
ja
jo
(bad)
fdiv
shl
das
repz
dec
lea
(bad)
mov
js
mov
xchg
aas
dec
(bad)
int3
call
daa
enter
cmp
pop
push
xor
pop
jo
and
and
mov
arpl
loop
cmp
das
jae
push
dec
xor
out
and
fstp
in
cmps
push
adc
dec
outs
in
xchg
ins
imul
dec
mov
jne
and
sbb
sar
xchg
inc
mov
jbe
push
adc
mov
std
push
pushf
popf
imul
sub
pop
cmps
inc
push
or
and
mov
add
fnsave
jp
stos
push
arpl
mov
mov
xchg
loopne
outs
add
test
enter
jl
mov
xor
jne
mov
loopne
dec
sbb
test
call
xchg
(bad)
mov
push
cmps
ins
cmp
pop
jmp
pop
pusha
bound
pop
push
sub
fmul
add
xlat
cmp
fs
fwait
int
loope
cmp
lahf
adc
fsubrp
xchg
cmp
sbb
dec
pop
(bad)
xchg
push
(bad)
iret
mov
cmp
setl
ret
hlt
ret
sub
and
add
mov
aaa
dec
sti
in
sbb
jg
xchg
xchg
lahf
ds
cmp
sub
jo
dec
add
pop
loopne
(bad)
push
jmp
adc
imul
jns
fld
push
add
push
pop
fidivr
outs
add
or
sub
sbb
jp
cmp
or
or
mov
icebp
mov
out
pop
imul
rcl
sbb
fs
js
je
cmp
rol
mov
dec
pop
int
lods
movs
cdq
or
aaa
out
jg
push
cli
and
and
fidivr
cdq
aas
movs
fnstenv
cmp
cmp
cmc
cwde
(bad)
lds
rcl
fstp
sbb
hlt
fild
in
call
xchg
mov
mov
fadd
ja
test
pop
and
imul
icebp
pop
ror
mov
outs
dec
xor
int3
retf
(bad)
xor
or
repnz
loope
mov
xor
and
pop
out
leave
rcl
xor
pop
cmc
iret
hlt
xchg
cmp
jmp
loopne
add
mov
sub
retf
pusha
inc
mov
fisub
jno
jmp
dec
push
adc
add
mov
in
mov
xchg
dec
xor
test
push
shl
dec
cmps
ss
ja
cmp
xor
xor
jns
jne
imul
pop
cmp
addr16
repnz
sbb
mov
inc
dec
add
xor
xor
mov
jmp
out
mov
dec
or
or
or
cmc
inc
dec
daa
inc
sub
dec
and
mov
lahf
enter
mov
dec
mov
push
into
inc
leave
mov
push
mov
or
daa
dec
jnp
jb
test
std
cld
inc
addr16
mov
mov
xchg
xchg
and
(bad)
loope
sbb
add
jmp
adc
cwde
mov
lds
sbb
jmp
stc
outs
jmp
adc
or
sub
scas
or
idiv
ds
scas
stos
les
mov
sub
and
psubw
in
push
ret
add
stc
mov
adc
test
or
mov
or
inc
add
shr
jb
inc
mov
push
loopne
pop
(bad)
mov
ins
push
cwde
push
push
dec
mov
mov
cmc
fwait
repnz
cmp
loop
jmp
push
lods
jmp
mov
enter
je
enter
push
pop
inc
(bad)
jb
stos
xchg
add
xor
fldenv
out
sar
js
push
and
fisubr
ret
fidiv
pop
cwde
cli
dec
lahf
add
pop
ret
jg
add
adc
ret
imul
lods
mov
aas
mov
cli
jnp
add
push
repz
nop
loopne
pop
nop
cdq
lahf
and
gs
popa
movs
adc
pushf
adc
mov
jecxz
cmps
jp
push
ret
mov
not
in
in
sbb
cmp
adc
gs
inc
bound
jecxz
stos
pop
repnz
add
sbb
jbe
nop
fmul
add
sbb
jb
sub
nop
mov
addr16
cmp
xchg
xchg
pop
repz
mov
(bad)
enter
xchg
lea
mov
add
aaa
and
arpl
mov
xor
mov
sbb
mov
(bad)
or
push
cmp
jne
cs
jp
cmp
js
push
jbe
add
aam
lahf
push
sub
cs
outs
push
cli
cmp
sub
hlt
jnp
loopne
mov
pop
cmps
cld
sti
mov
push
dec
sbb
pop
call
jns
popf
cmc
pusha
cmc
push
mov
pop
inc
or
iret
adc
mov
add
leave
out
jns
jle
or
sar
(bad)
test
shl
bound
cmp
and
mov
fimul
shr
ds
push
loope
sbb
or
rcr
les
push
or
sbb
adc
and
xchg
jne
js
cli
push
jg
and
xchg
and
push
mov
or
hlt
sti
dec
sbb
pop
add
mov
xor
dec
retf
shl
shl
fild
ss
in
jge
mov
pop
arpl
mov
or
mov
mov
das
popa
or
std
sub
fcmovnu
bound
ins
call
(bad)
adc
sub
ins
loop
inc
stc
adc
loop
add
ja
mov
mov
lahf
cs
lea
sub
or
sub
mov
add
std
xchg
repz
cmp
repz
test
je
add
lods
mov
fdiv
add
lds
fdivr
pop
mov
(bad)
jmp
fidivr
mov
jnp
push
movs
cmp
pop
add
mov
inc
pop
pop
pusha
dec
lds
out
cmps
jg
adc
lods
dec
jl
mov
je
cs
rcl
faddp
fisubr
aas
std
add
push
jne
sbb
mov
add
sahf
dec
add
arpl
inc
repnz
inc
fs
sub
xchg
div
scas
dec
fucomi
dec
test
mov
ficomp
fbstp
sti
jno
loopne
jnp
add
inc
cdq
icebp
(bad)
push
cmp
add
mov
mov
out
adc
cmc
sbb
mov
(bad)
(bad)
inc
adc
jmp
jne
fdiv
add
inc
push
inc
mov
jmp
jp
jb
xchg
jp
paddsb
jmp
sar
push
or
addr16
mov
inc
or
mov
sbb
push
neg
mov
push
mov
push
aad
jno
mov
dec
in
dec
push
mov
cwde
cmp
mov
pop
cmps
cmp
test
ja
mov
cmc
xor
xor
push
enter
in
fmul
lock
lods
cmc
or
cmp
pop
arpl
mov
into
fnstcw
fwait
sub
jmp
pop
pop
popa
or
jnp
mov
test
jmp
movs
loope
cdq
jb
mov
inc
test
loope
les
(bad)
int
in
test
xor
xchg
mov
adc
xor
ss
xchg
pop
mov
mov
int3
dec
ret
mov
je
call
mov
(bad)
jmp
sub
sub
dec
inc
xchg
xchg
lea
sub
jmp
test
dec
sub
cmp
jo
lahf
xchg
out
retf
mov
icebp
lods
in
inc
dec
mov
les
ja
popa
mov
push
out
lods
dec
cmp
and
and
or
shl
jne
or
pop
mov
and
in
jge
lods
cmp
pop
cmp
sub
add
retf
jecxz
movs
into
call
clc
ret
mov
lock
call
xor
push
jmp
xchg
fadd
jp
pop
mov
sbb
jl
fisttp
out
mov
xor
and
mov
jb
ins
dec
lock
jp
fistp
stos
hlt
rol
mov
lds
ror
jmp
lahf
inc
call
dec
add
cmc
mov
std
pop
mov
add
jno
add
dec
or
sbb
mov
jae
mov
rcl
int3
pop
jnp
leave
mov
sub
dec
div
aad
test
pop
mov
inc
adc
mov
dec
(bad)
fdivp
pop
in
pusha
mov
cmp
ret
repnz
(bad)
(bad)
sar
fld
sub
into
pusha
mov
or
adc
jle
aaa
stos
ds
xor
mov
inc
sub
mov
mov
cli
(bad)
mov
mov
fldcw
fs
dec
cdq
push
out
ret
pop
xor
lea
aam
inc
outs
outs
sbb
ret
test
pop
shl
adc
ss
addr16
cmps
outs
repz
out
push
cmp
sbb
inc
dec
adc
stc
pop
div
mov
and
neg
fsub
inc
sub
icebp
push
adc
mov
and
push
(bad)
scas
cdq
adc
cld
call
mov
jecxz
dec
(bad)
dec
cwde
pushf
in
ret
daa
cmp
enter
cmps
xchg
(bad)
nop
cld
test
cmp
or
dec
ins
shl
xchg
sbb
or
mov
cmp
jo
jmp
xchg
hlt
retf
neg
add
sar
mov
into
sub
ins
fimul
in
mov
jae
pop
cmps
adc
repz
int3
mov
xchg
stos
loop
jmp
or
pop
scas
(bad)
xor
sbb
and
mov
cmp
sar
dec
mov
xchg
lods
adc
lods
nop
stos
test
std
mov
ins
je
out
and
push
repz
iret
js
neg
shl
and
lds
pop
repnz
or
sbb
fcom
mov
clc
add
push
adc
sbb
inc
test
(bad)
and
mov
shl
sub
xor
mov
xchg
sub
iret
movs
pop
pop
add
push
shl
sar
mov
and
rcl
enter
dec
push
sub
test
out
out
out
sub
out
and
mov
cmp
out
pop
(bad)
ds
xor
rol
push
xor
jge
popf
adc
xor
daa
push
mov
adc
(bad)
test
popf
add
fcomp
push
sbb
sub
movs
add
xchg
mov
jg
clc
and
add
sub
xchg
cmc
mov
mov
pop
xchg
push
sub
and
mov
mov
shl
in
cdq
xchg
inc
test
cmp
fldcw
mov
inc
dec
imul
sub
sahf
pusha
mov
fidivr
jne
(bad)
int3
sbb
cmp
jno
sub
or
jecxz
adc
out
jge
inc
scas
cmp
jmp
cmp
xor
out
cmp
pop
inc
cdq
mov
push
xchg
aas
xor
mov
in
lods
push
and
popa
push
in
sbb
pop
or
fstp
pop
pop
adc
out
adc
lock
mov
int3
cdq
or
adc
mov
jbe
in
movs
enter
xor
sbb
push
xchg
sub
or
nop
push
jb
cmps
int
fimul
or
xchg
std
mov
add
add
and
and
pop
(bad)
in
add
or
dec
lods
add
jo
rcr
pop
adc
iret
clc
pop
inc
lds
(bad)
cdq
xchg
lahf
mov
fcomp
cli
je
cmps
daa
jb
inc
aad
add
jbe
and
mov
cmp
adc
and
lahf
or
adc
repnz
out
mov
sbb
sbb
mov
cld
xchg
nop
scas
sbb
dec
lods
sbb
fwait
and
ins
cwde
and
leave
inc
dec
xchg
test
es
popa
ins
xor
int
clc
mov
xchg
sar
sub
cmp
pop
pop
and
not
movs
call
sbb
and
push
adc
mov
xchg
mov
mov
sub
push
repnz
and
leave
test
or
xchg
push
and
loopne
mov
cwde
adc
xchg
mov
sti
jge
fucomip
in
aam
les
xchg
out
and
pop
add
aad
aad
punpckhdq
jecxz
popa
sbb
imul
mov
loope
pop
mov
adc
xchg
nop
clc
mov
mov
popa
sbb
lods
ins
mov
(bad)
lods
ins
jl
jp
shr
nop
out
pop
mov
push
push
test
dec
jl
push
scas
push
mov
call
in
int3
pop
jne
int3
or
scas
cmp
mov
mov
xchg
cli
rcr
or
mov
scas
mov
jb
nop
pop
push
xor
inc
leave
push
mov
ja
ds
cmp
ret
lods
pop
pop
xchg
in
rcl
mov
aas
rcr
lock
(bad)
cmp
js
and
mov
ds
add
lds
in
cdq
hlt
(bad)
mul
test
xchg
jp
inc
cmc
ins
das
or
jo
add
(bad)
pop
pop
stos
stos
mov
pop
stos
or
(bad)
lods
int3
sbb
mov
cli
cmps
mov
fnstsw
dec
pop
or
aad
cmps
dec
adc
xor
dec
adc
adc
leave
mov
jmp
test
mov
mov
loopne
rsqrtps
cmps
dec
pop
lea
ficomp
inc
movs
sub
xchg
adc
dec
add
js
mov
mov
push
lahf
xchg
out
xchg
out
xchg
and
sar
mov
mov
pop
and
in
ins
das
dec
cmp
sar
push
jge
sub
dec
enter
jg
mov
(bad)
in
out
or
sti
push
sub
fwait
arpl
fwait
mov
sbb
test
lea
(bad)
pop
int3
and
sub
mov
cmp
out
and
mov
sub
xchg
pop
das
dec
popf
jp
jmp
jecxz
shr
mov
pop
push
pusha
or
jecxz
xor
pop
sub
scas
dec
cli
inc
pop
fcomp
push
(bad)
sub
ret
or
mov
fdivr
shl
cli
test
lods
sbb
or
and
adc
pop
test
movs
sub
rol
inc
into
imul
xchg
mov
(bad)
sub
dec
stc
xor
ins
lea
or
repnz
loop
or
je
or
pop
adc
cmp
arpl
jae
pushf
inc
sub
cmp
jp
in
ins
aaa
dec
inc
lods
mov
sub
xor
(bad)
fdivr
mov
jp
push
jb
or
jns
jnp
rcl
ds
or
or
inc
push
cmc
sbb
int
cli
sahf
shl
syscall
fnsave
out
or
cmp
ins
pop
fwait
mov
icebp
add
arpl
clc
(bad)
cmps
pop
outs
jmp
call
imul
sbb
push
sahf
sbb
sub
adc
repz
xchg
lds
fs
ror
cmp
push
sub
xchg
push
xlat
adc
test
jnp
jl
or
xchg
(bad)
dec
push
clc
sub
mov
sbb
cmp
nop
sti
add
cmp
leave
add
out
sbb
jno
mov
mov
add
dec
imul
movs
or
ret
inc
dec
pusha
mov
jmp
into
xchg
lea
lods
xchg
daa
shl
jl
aaa
scas
xor
sbb
mov
enter
retf
dec
xchg
ror
lock
retf
fdiv
mov
cld
dec
jg
mov
fwait
ds
or
dec
popa
dec
adc
or
cli
pusha
pop
(bad)
repz
iret
loope
call
sbb
fmul
cmc
cmp
sub
inc
int
out
pop
movhps
adc
sar
sbb
sbb
push
lods
xor
inc
pop
cdq
sub
push
int
test
imul
xchg
cmps
sbb
ret
adc
lods
jl
pop
xor
test
cs
sar
xchg
(bad)
jp
mov
mov
cmps
cmp
les
shl
or
fstp
test
sar
push
sub
out
pop
add
pop
pop
lds
sbb
hlt
retf
lahf
sub
jae
fsub
jno
loope
and
inc
jmp
push
xchg
xchg
pop
scas
mov
push
cmp
ss
and
or
sti
out
fs
push
mov
cmps
mov
inc
(bad)
fsubp
mov
push
xor
data16
xchg
popa
mov
jmp
sub
stc
lods
xchg
mov
sbb
and
dec
fimul
push
sbb
push
test
sbb
sbb
add
clc
movs
ja
repz
je
test
sub
xor
adc
add
and
xchg
push
mov
push
sbb
stc
mov
pop
xchg
cmp
data16
mov
out
dec
leave
mov
stos
test
lahf
jo
mov
mov
setae
pop
sub
fwait
mov
(bad)
and
int3
or
imul
cdq
call
mov
retf
sub
push
dec
pop
int3
imul
das
mov
push
xor
das
frstor
mov
into
cmc
js
adc
xchg
sub
jle
in
sahf
ret
and
inc
mov
dec
hlt
push
push
in
sbb
dec
sub
gs
in
ret
pop
pop
ror
jbe
pop
ret
fucomp
fiadd
jle
mov
push
out
test
xchg
push
add
ret
add
add
mov
data16
mov
les
movs
clc
xchg
push
pop
xchg
mov
xchg
gs
xchg
rol
adc
mov
fisttp
stos
mov
pop
sti
enter
cli
or
fucomi
sub
cmp
xor
and
fxam
mov
std
or
xchg
call
and
ins
(bad)
hlt
jmp
dec
sti
js
mov
bound
loop
and
jo
idiv
add
out
popw
fisttp
daa
mov
lahf
xor
repz
test
xor
push
add
or
ret
jo
sbb
jne
cli
es
jge
pop
repnz
mov
sub
mov
push
and
inc
inc
mov
mov
pop
cmps
and
cmc
repz
jne
pop
mov
pop
(bad)
cmp
inc
rcr
push
lea
addr16
clc
pop
mov
mov
jmp
xchg
push
cmp
sbb
inc
rcr
jno
mov
aad
sub
loop
mov
xchg
jmp
adc
bswap
pop
inc
jbe
sahf
popf
xor
cmp
xor
adc
fmul
(bad)
ret
xor
mov
(bad)
pop
jns
push
dec
inc
pop
ins
adc
cmps
das
call
cmc
add
xlat
jo
leave
call
hlt
sbb
push
add
js
or
push
fldcw
mov
xor
sub
jp
dec
into
mov
inc
cdq
lods
arpl
add
cmps
popa
pop
push
nop
mov
repz
jae
in
popa
mov
aas
add
retf
ret
movs
call
xor
mov
sbb
test
push
xlat
scas
test
mov
(bad)
fldcw
lods
dec
js
inc
jmp
loope
int
lock
pop
cmp
and
add
icebp
mov
(bad)
ins
jmp
fadd
push
adc
mov
xchg
jl
mov
and
cmps
sbb
jo
retf
mov
scas
jne
pop
jmp
push
adc
retf
push
sub
das
sahf
jle
ins
sti
inc
xchg
dec
call
into
mov
xor
arpl
jb
cmps
(bad)
lock
cmovae
push
xchg
sub
xor
dec
jmp
sar
and
out
xor
(bad)
xchg
mov
repz
jne
xchg
daa
adc
and
or
push
aad
iret
dec
xchg
loope
inc
mov
pop
js
mov
bound
xchg
cmp
stos
hlt
movs
mov
inc
loop
outs
pop
fdivr
mov
jb
dec
mov
or
mov
pop
cmp
push
cld
mov
xchg
sahf
xchg
(bad)
xchg
std
imul
sub
dec
xchg
jecxz
jmp
jmp
stc
push
inc
push
lea
jmp
mov
std
fwait
pushf
rcr
or
sub
enter
(bad)
jle
xor
lods
inc
push
pop
xor
inc
pop
mov
mov
push
adc
cwde
or
movs
or
cmps
pop
lods
mov
pop
in
sbb
sbb
xchg
cld
push
es
sbb
mov
call
adc
loop
and
mov
daa
lock
dec
cld
mov
push
xchg
sbb
xchg
or
nop
jo
add
loope
shr
ror
adc
icebp
jle
push
gs
int
xchg
cwde
xor
loopne
sbb
push
pop
loope
adc
sub
ja
adc
adc
sub
sti
arpl
inc
or
popa
pop
mov
mov
push
jo
cmps
ds
scas
mov
(bad)
push
push
(bad)
fbstp
or
push
or
ffree
test
daa
push
ss
(bad)
call
fs
fcmovb
inc
fstp
mov
sub
out
pushf
sub
test
xor
adc
adc
popf
cld
mov
pop
adc
fmul
cs
push
pop
mov
cld
add
(bad)
out
and
ja
pusha
js
mov
scas
int3
adc
and
fist
xor
mov
outs
iret
loop
mov
push
ror
pop
movs
pop
adc
or
or
int3
out
or
mov
loop
fisttp
out
add
js
sbb
retf
push
ret
mov
or
mov
(bad)
pop
or
lock
push
adc
push
push
jge
fdivr
fsubr
aaa
or
sub
shl
and
outs
inc
mov
inc
pop
push
std
nop
pop
mov
outs
inc
test
leave
inc
and
dec
push
push
pusha
cmps
jl
sub
aam
out
xchg
jb
pop
and
mov
mov
pop
push
pop
lds
call
mov
pop
out
pop
hlt
pop
out
cmps
xchg
mov
ss
inc
adc
adc
sbb
imul
push
sub
pushf
ins
dec
call
jp
pushf
aaa
sub
adc
or
ja
jae
or
mov
add
inc
loop
push
push
les
adc
int
mov
xor
or
jns
or
pop
jo
shr
xchg
dec
mov
jl
fs
xchg
pop
das
xor
pop
outs
mov
push
call
test
push
js
imul
fisub
and
ins
stos
repnz
jnp
pop
add
jns
aas
mov
enter
jo
fcom
ficomp
fiadd
sub
aaa
pop
sbb
stos
int
jb
push
lods
test
sbb
sub
repnz
fcomp
lods
xor
repz
xchg
scas
push
call
add
cdq
inc
cs
int3
ret
xchg
pop
adc
out
gs
add
loop
jbe
sub
cmp
pop
add
cmps
fsub
(bad)
inc
mov
jae
fbld
sbb
jg
dec
scas
movs
lods
outs
popa
mov
out
lds
in
pop
sub
out
add
stos
add
fist
xchg
pop
ja
(bad)
movs
jl
cmps
adc
and
outs
stos
lahf
shr
out
push
jl
lahf
repnz
lods
mov
cmps
imul
in
imul
dec
xchg
inc
call
mov
jb
mov
jbe
test
les
data16
mov
rol
sbb
icebp
mov
pop
lods
pop
clc
add
icebp
fstp
fist
cmps
ret
stos
dec
loope
ret
pop
cmp
adc
into
fs
hlt
jns
enter
fimul
push
or
cmp
cmc
into
and
jge
in
push
dec
(bad)
push
and
push
inc
sub
je
xchg
jecxz
ins
jge
ret
iret
ins
and
(bad)
add
pop
pop
pop
and
or
ins
arpl
rep
add
cdq
dec
jb
push
pop
push
inc
rol
cwde
test
repz
mov
mov
fidiv
jno
push
jmp
mov
push
test
lock
push
xor
mov
or
jmp
sbb
inc
test
sbb
jae
sub
(bad)
pop
ror
sbb
jl
adc
inc
push
sub
mov
xor
retf
pushf
sysexit
mov
fldcw
dec
dec
into
adc
inc
xchg
call
hlt
out
mov
and
mov
lods
scas
xor
mov
pop
fs
call
jbe
cdq
xchg
cmps
imul
in
jecxz
das
ja
stos
push
pusha
loopne
mov
outs
nop
jmp
sbb
aas
push
mov
sbb
add
mov
ja
dec
ins
ja
add
xchg
ficom
pop
scas
and
push
jge
ds
xor
mov
fbstp
sar
jecxz
or
mov
jne
sub
xchg
mov
mov
imul
mov
push
outs
lea
retf
mov
scas
adc
or
movs
repnz
retf
mov
cld
sub
cli
adc
pop
and
mov
retf
push
inc
dec
pop
idiv
xlat
sub
jbe
jnp
jno
xlat
call
leave
dec
inc
dec
shl
imul
xchg
sub
(bad)
stos
es
jecxz
gs
add
push
test
dec
and
cdq
daa
out
fnsave
dec
xor
pop
rcl
jl
xchg
xor
push
sub
jge
call
cmps
mov
das
mov
leave
push
neg
mov
pusha
test
push
imul
rcr
gs
jb
inc
call
retf
fisub
cdq
or
stos
gs
jo
aad
aaa
pop
lods
add
pop
jecxz
fiadd
(bad)
jmp
and
sti
dec
or
adc
movs
mov
je
je
jbe
xchg
call
xor
sahf
arpl
sbb
xchg
cld
push
cmps
mov
xor
pop
mov
inc
cs
test
aas
aaa
xor
and
jg
(bad)
mov
mov
cmp
arpl
ret
lea
mov
dec
inc
mov
push
xchg
cmps
retf
js
mov
lds
enter
nop
add
push
xchg
push
lock
dec
sub
cmp
sbb
sti
pop
iret
outs
push
lock
pop
pop
pop
xor
push
ret
dec
mov
add
fsubr
inc
sbb
(bad)
xor
mov
jmp
div
mov
adc
shl
push
ror
imul
inc
sub
addr16
pop
jne
xor
jmp
jne
xchg
mov
ins
scas
push
test
lea
or
xchg
mov
arpl
or
repnz
repnz
dec
scas
xchg
jns
jno
inc
dec
ficom
mov
stos
lods
shl
std
data16
ins
mov
cmp
lods
and
jae
push
imul
cmc
mov
jecxz
adc
or
lock
and
jno
(bad)
pusha
and
(bad)
jno
fsub
outs
jp
inc
daa
mov
fst
cli
aas
push
jns
jae
pop
nop
leave
and
in
call
rcr
push
ja
lods
in
adc
xor
mov
or
mov
aam
mov
rcl
jb
test
cmp
push
and
fbstp
jmp
sbb
sar
clc
cmp
jnp
int
repnz
jmp
adc
sbb
mov
fsub
scas
and
loop
xor
push
pop
imul
ins
xor
fcom
sub
or
push
xor
repz
inc
jge
push
pusha
sbb
pop
call
les
imul
std
push
jno
add
xchg
inc
dec
mov
dec
push
push
pop
pop
aas
int3
xchg
sbb
jmp
(bad)
cs
and
repz
out
sub
sub
imul
(bad)
adc
dec
inc
jbe
out
adc
fnstenv
out
lds
dec
int3
mov
pop
sub
sub
mov
arpl
pop
adc
push
leave
and
loope
sbb
stos
jno
sbb
out
pop
jno
adc
mov
cmp
fucomi
call
xlat
inc
fcomip
add
mov
repnz
pop
into
jno
in
adc
repz
call
inc
lahf
xchg
mov
ss
push
and
push
inc
jo
test
movs
test
sub
xor
mov
jae
div
mov
stos
aam
xchg
mov
jp
xor
(bad)
mov
push
mov
push
push
adc
fisttp
pop
fidivr
dec
ror
push
test
dec
push
imul
dec
mov
adc
push
mov
adc
leave
mov
lds
fnsave
fbstp
(bad)
and
dec
xchg
inc
push
les
je
mov
pop
leave
xchg
and
daa
xchg
jmp
sub
xchg
xor
push
cmc
xor
cwde
jae
fld
test
mov
inc
jbe
xchg
ins
loopne
cdq
imul
sub
sti
scas
jmp
mov
jnp
test
adc
dec
xchg
dec
adc
jp
std
je
sub
inc
mov
out
mov
cdq
mov
sub
xor
pop
push
sub
ror
fwait
push
out
leave
push
daa
movs
xlat
mov
call
retf
(bad)
shr
push
fimul
out
call
dec
sar
and
sub
mov
jecxz
jns
sbb
ss
setae
ror
add
sar
inc
lea
cs
in
lods
popf
sbb
xor
shl
push
xchg
(bad)
das
xor
jl
push
aam
push
pop
or
push
jmp
mov
pop
or
pop
in
aam
sub
mov
sbb
jnp
or
lea
into
and
and
fwait
data16
and
loop
hlt
pop
je
lods
std
in
das
jno
adc
push
xchg
aam
xchg
push
in
pop
mov
mul
inc
retf
aaa
test
mov
enter
sub
lock
pop
cdq
fnsave
add
nop
cli
js
lea
pop
lods
push
gs
cmp
mov
fucomi
jl
jbe
push
aad
rcr
mov
xchg
xchg
xor
add
lock
test
jmp
in
es
repz
bound
gs
cmp
ins
adc
sub
ss
mov
xor
call
pop
and
ficom
pop
xor
dec
in
cmp
xlat
rcl
arpl
sub
mov
cmc
push
jecxz
call
inc
push
xchg
push
cld
mov
jg
cmps
lea
push
and
ds
movs
retf
xchg
movs
pop
es
xchg
popf
popa
or
jmp
sub
xor
fdivr
dec
sub
and
push
mov
nop
in
mov
add
dec
lahf
adc
mov
mov
or
push
or
fdivrp
jns
cld
rcl
sbb
mov
add
call
mov
ss
in
cmps
adc
jnp
(bad)
shl
mov
and
(bad)
neg
enter
and
mov
adc
test
cmc
call
or
fldenv
add
pop
aaa
repz
ins
mov
xchg
mov
retf
das
call
lods
push
jge
iret
xlat
xor
push
iret
popa
adc
outs
jno
xchg
int
mov
jbe
fist
pop
test
inc
popf
jno
mov
sbb
add
cmp
ins
dec
mov
dec
rcl
sbb
in
pusha
mov
cmp
iret
fisub
jl
(bad)
fimul
fiadd
rcl
dec
dec
mov
aam
adc
fld
addr16
mov
jge
xchg
lahf
(bad)
(bad)
push
xchg
into
enter
stc
sbb
inc
mov
addr16
jnp
cmp
xor
les
test
or
hlt
icebp
out
xchg
jb
lea
dec
xchg
cmp
cld
inc
bnd
test
sbb
fld
cmpxchg
data16
cmp
mov
adc
cmc
or
dec
pop
leave
and
xchg
loope
dec
mov
jne
sub
outs
fs
mov
sbb
mov
pop
clc
les
leave
mov
dec
inc
test
jmp
dec
fidiv
fwait
xor
lods
xor
and
call
mov
fs
sbb
xchg
popf
dec
push
adc
xchg
call
push
fsubr
pop
cmp
dec
jnp
retf
mov
iret
jmp
outs
out
ins
test
mov
pop
cmc
pop
lea
adc
xchg
or
stc
mov
ss
ret
push
mov
xchg
std
push
or
pushf
or
jmp
xor
int3
outs
aam
or
mov
test
popf
add
push
in
xor
lods
enter
push
add
dec
push
push
dec
or
cmp
mov
leave
xor
xlat
and
(bad)
jns
xchg
or
inc
inc
push
fwait
push
mov
cmp
pop
inc
lods
adc
cmp
ja
retf
sahf
inc
dec
test
call
sbb
fld
xor
cmp
dec
mov
scas
icebp
sbb
stos
mov
inc
pop
addr16
mov
sub
mov
lahf
imul
test
pop
repnz
mov
(bad)
adc
and
(bad)
fdivrp
daa
jmp
jge
ret
idiv
and
sbb
cdq
xor
sti
sub
cs
cli
xchg
mov
lahf
fist
sbb
leave
lock
arpl
xchg
sbb
sbb
push
dec
mov
cld
inc
(bad)
sub
je
ds
ja
stos
sub
or
rol
xor
mov
fimul
mov
aam
mov
rcl
mov
daa
sub
add
sub
sar
test
inc
repz
pop
inc
jmp
inc
scas
hlt
fisttp
fstp
sbb
fistp
jl
push
retf
fmul
into
(bad)
and
mov
mov
aas
pop
shl
jg
mov
stc
arpl
add
xor
fidivr
into
xchg
sti
pop
add
push
scas
inc
dec
push
adc
(bad)
xchg
jb
add
stc
adc
out
test
sub
push
das
lods
clc
outs
fistp
in
imul
mov
sahf
or
imul
in
in
(bad)
out
push
lock
pop
dec
adc
lds
popa
call
aaa
push
and
ret
xor
outs
addr16
sbb
sbb
cmp
inc
cmp
icebp
pcmpgtb
adc
jne
mov
cdq
test
out
sub
fdivr
ins
push
cmps
cli
inc
ror
aaa
adc
ret
push
cmps
mov
loope
in
pop
loope
cld
arpl
or
outs
stos
ret
jae
mov
push
add
xchg
movs
mov
std
mov
inc
dec
and
daa
xchg
sbb
mov
sub
minps
or
fdiv
je
fwait
push
xchg
(bad)
sub
out
xchg
fnstenv
outs
cmp
ins
dec
pop
cmp
mov
cld
(bad)
sbb
xor
movs
repnz
sub
xchg
push
(bad)
add
test
out
imul
push
into
sub
jl
fdivrp
fwait
sub
ins
or
sub
pop
mov
lds
shr
aas
sbb
add
mov
ret
cs
add
retf
push
xchg
xlat
int3
stos
(bad)
out
icebp
adc
fist
mov
ror
into
jo
mov
jbe
mul
xor
sub
cmp
or
imul
add
outs
xchg
dec
and
jmp
repnz
mov
cld
jle
in
cmp
stc
callw
mov
xor
push
or
pop
inc
jmp
inc
rol
add
repz
cmps
adc
xchg
pop
cld
mov
push
xchg
xchg
arpl
pop
sub
pop
sbb
and
retf
sahf
int3
push
leave
retf
mov
sar
call
xchg
xor
clc
lods
jo
imul
arpl
mov
leave
sub
jo
(bad)
ja
cli
in
in
mov
movs
enter
dec
jo
ins
out
xor
iret
bound
daa
or
jp
or
retf
popf
jle
ins
sbb
out
jmp
dec
jmp
lds
inc
inc
ins
jnp
stc
test
mov
mov
(bad)
jp
pusha
cmp
xlat
lds
cmp
push
inc
idiv
cdq
fistp
cwde
sbb
pop
jbe
dec
daa
sub
cmp
adc
or
dec
lea
fadd
(bad)
in
jecxz
cmp
jbe
scas
std
movs
mov
in
dec
icebp
test
push
imul
jle
and
cwde
xor
das
and
fcomp
xor
jbe
std
test
pop
xor
cld
cmp
shl
jo
mov
mov
add
aad
enter
movs
popf
je
mov
in
xchg
push
pop
add
imul
addr16
jb
out
push
inc
enter
xor
cli
jge
sbb
lea
push
cld
pop
daa
xchg
lea
mov
pop
imul
xlat
sbb
leave
adc
out
pop
fucomip
daa
jg
or
lods
ja
aam
mov
xchg
mov
into
test
and
fld
push
cmp
pop
or
clc
add
jle
fwait
ucomiss
xlat
mov
dec
retf
mov
mov
xchg
pop
jge
daa
and
in
cmp
mov
sub
cmp
fcmove
call
xor
je
movs
jmp
add
movs
stc
jmp
ins
dec
fist
lock
mov
frstor
push
push
mov
int
mov
call
retf
addr16
cmp
fiadd
add
or
mov
cmp
imul
gs
adc
icebp
rol
imul
xchg
enter
fisttp
dec
mov
add
add
xchg
and
(bad)
cmp
mov
jl
arpl
pop
adc
inc
or
pop
repz
ds
push
mov
stc
ins
out
push
dec
outs
sub
shl
xchg
pop
and
test
adc
dec
neg
aad
mov
cmp
xchg
add
rol
inc
cmp
out
push
sub
xchg
mov
movs
xor
cdq
and
std
je
xchg
mov
hlt
(bad)
(bad)
arpl
(bad)
cmp
mov
cmps
jns
call
in
jecxz
add
fadd
das
movs
unpcklps
leave
or
(bad)
sbb
push
loop
jne
xor
xor
pop
and
imul
sbb
adc
test
pop
addr16
shr
lahf
push
xchg
mov
shr
scas
mov
out
inc
fild
mov
push
in
cmc
nop
mov
jbe
fdivr
std
cmp
sub
repnz
jmp
xchg
loop
push
stos
xchg
xor
push
icebp
or
lahf
jg
fmul
jns
mov
cmp
mov
push
(bad)
mov
test
adc
cwde
inc
fcmovu
sbb
retf
test
inc
push
push
loop
cmps
xor
inc
xor
sbb
sub
inc
test
push
adc
push
pop
cmp
pop
xor
adc
sahf
sbb
and
add
idiv
mov
pop
xchg
push
aad
pop
sub
adc
sub
add
mov
sub
aaa
mov
cmp
mov
ja
jl
jle
jbe
jmp
in
mov
imul
test
dec
xor
fwait
sbb
inc
jle
adc
js
adc
int
jnp
pop
shr
mov
lods
repz
aam
je
call
xor
mov
sar
dec
test
fld
call
jg
shl
and
scas
add
jbe
dec
xlat
aaa
cmp
sti
mov
cmp
push
jmp
ins
cmp
or
jno
mov
dec
and
inc
lock
cwde
dec
adc
xchg
rol
imul
adc
mov
fmulp
inc
mov
xlat
mov
inc
sbb
movs
fsubrp
loope
jecxz
std
pushf
out
retf
mov
pop
jl
rcr
mov
icebp
je
jp
pop
sub
jmp
sbb
mov
push
jnp
push
loop
loope
and
dec
add
push
aas
ss
fsubr
sub
sbb
inc
push
popa
or
je
dec
ret
out
ss
push
pop
and
jbe
outs
sbb
cdq
lahf
mov
add
push
jo
(bad)
xlat
sar
int
cmps
inc
dec
cmp
imul
mov
bound
sub
fdiv
pop
pop
lods
xlat
jo
(bad)
scas
out
jae
mov
push
inc
add
jge
cmp
or
push
xor
ds
int3
mov
aad
add
(bad)
int3
mov
idiv
jae
lods
test
mov
mov
xchg
adc
add
push
pop
arpl
shl
jno
sqrtps
rcl
imul
dec
and
xchg
test
mov
(bad)
mov
ror
push
add
jle
cmp
pop
je
mov
xlat
(bad)
retf
jmp
retf
mov
xchg
call
(bad)
mov
mov
test
jne
xchg
pop
jo
cs
dec
test
dec
mov
(bad)
icebp
xor
imul
cmc
dec
inc
call
icebp
pop
rcl
mov
dec
mov
dec
pusha
pop
sbb
push
jecxz
dec
jecxz
mov
mov
inc
(bad)
push
push
retf
out
pop
dec
and
push
add
std
mov
sbb
movs
inc
repz
sar
icebp
clc
dec
fsub
push
pop
lds
in
jno
fst
ret
sub
pop
aas
mov
add
(bad)
ret
js
lock
mov
std
loopne
jno
xor
into
mov
pop
call
ins
imul
jo
xor
add
push
push
(bad)
xor
xchg
loop
push
stos
fdiv
jno
fcomp
mov
lahf
jl
bound
add
iret
lods
sbb
ins
jge
cmp
and
cmp
in
ins
lea
jge
mov
mov
inc
ret
nop
iret
add
ja
sahf
push
(bad)
mov
pop
adc
js
cmp
add
retf
mov
and
xchg
cmps
jge
cmp
jae
cmc
into
test
mov
pop
idiv
ret
cmps
xor
or
popa
ret
std
dec
dec
aam
adc
mov
jmp
mov
mov
xchg
xchg
pop
push
je
(bad)
mov
push
ds
ror
test
(bad)
std
loopne
imul
out
push
mov
inc
jns
xchg
lods
sub
clc
xor
dec
adc
sbb
inc
add
call
mov
dec
ins
or
ja
add
mov
xor
retf
sbb
aas
fstp
cmp
or
out
add
rcl
out
sbb
cmps
sub
in
sbb
add
dec
into
push
scas
xlat
les
sub
sbb
sbb
jl
mov
pop
hlt
lods
push
mov
data16
fs
add
dec
mov
or
adc
xchg
out
sar
retf
popa
push
cmp
inc
fwait
stos
dec
xor
(bad)
idiv
xchg
mov
inc
inc
inc
and
or
int
fistp
mov
cmp
outs
inc
push
fwait
fwait
into
lock
pop
pop
out
push
and
loop
adc
loop
dec
das
sbb
xchg
icebp
aas
ficomp
sbb
pop
test
mov
pop
or
lods
ret
je
(bad)
pop
add
hlt
dec
out
ins
fist
lods
push
dec
jmp
repnz
push
hlt
movs
leave
push
xchg
jae
movs
cmp
loopne
xor
mov
mov
rol
jmp
sub
or
sbb
mov
leave
push
push
jne
sub
add
sub
je
jmp
adc
fldcw
cs
loop
aad
jno
sahf
fistp
sbb
mov
stos
mov
fld
nop
jecxz
or
jmp
test
ins
cmps
mov
out
cmp
mov
mov
lahf
xchg
pusha
test
mov
out
mov
mov
or
or
add
in
sysexit
or
cmp
je
jne
mov
pop
adc
mov
pop
mov
pusha
popa
sub
push
mov
sti
add
adc
lods
or
xchg
cmp
leave
loope
fisubr
mov
or
xchg
pop
pop
or
or
or
(bad)
out
outs
cmp
or
sub
inc
in
or
sub
adc
cmp
repz
push
cs
imul
idiv
sub
clc
push
xor
xor
sub
mov
pushf
cmps
xchg
scas
imul
cli
mov
sbb
mov
(bad)
in
(bad)
pop
fistp
outs
ss
cmc
lods
mov
fld
stc
inc
adc
xchg
dec
ret
popf
xchg
ja
in
mov
sub
lods
cmp
pop
lods
(bad)
pushf
xor
out
les
dec
and
and
iret
adc
ss
(bad)
cld
ds
ret
bound
xchg
sub
inc
mov
ins
xchg
or
push
mov
sahf
retf
fistp
push
and
xor
sbb
int
rol
rcl
sahf
jb
pop
pop
(bad)
or
pop
dec
in
imul
cld
icebp
inc
enter
call
popf
scas
mov
xor
aam
or
ret
xchg
aam
dec
mov
(bad)
ins
imul
sbb
mov
inc
pusha
mov
sub
or
mov
jb
and
or
mov
fucomip
cmp
fsub
and
dec
outs
cmp
inc
adc
adc
mov
gs
adc
(bad)
and
xor
je
mov
ins
lahf
and
mov
pushf
lds
jecxz
sbb
shl
add
out
inc
xlat
(bad)
dec
mov
and
xchg
ret
jbe
mov
jae
sub
jp
out
fs
loopne
mov
loopne
jnp
inc
push
pop
xor
cdq
adc
xchg
loope
xor
fcomp
adc
cmove
cmp
push
dec
inc
sub
mov
popa
outs
in
scas
lsl
popa
mov
cmp
mov
add
push
sbb
dec
push
add
push
xchg
jecxz
call
outs
out
mov
std
sub
add
pop
xchg
push
inc
stc
mov
jbe
pop
mov
sub
mov
jb
mov
adc
mov
jecxz
mov
test
cmps
dec
mov
jg
mov
int
add
push
mov
pop
in
movs
ins
push
sahf
push
out
mov
inc
sub
repnz
in
and
mov
sti
pop
jns
mov
call
mov
vmwrite
mov
and
xchg
stc
mov
and
or
sbb
xchg
dec
push
and
jo
jp
cwde
ja
mov
or
test
fbstp
jnp
and
push
add
jecxz
mov
test
and
cmps
inc
add
push
imul
push
shl
add
pusha
inc
outs
adc
test
in
xchg
or
cmc
or
nop
test
sub
mov
adc
ja
or
je
jbe
add
jg
jbe
dec
test
or
mov
pusha
xchg
cmp
sbb
fsub
adc
fwait
stos
or
cmp
push
fidiv
ins
xor
xor
sub
inc
daa
scas
sbb
stc
push
cmp
lods
mov
in
add
hlt
test
sbb
imul
cdq
iret
lods
pushf
stc
popf
sub
jmp
outs
dec
fidiv
push
xchg
mul
aad
sahf
jge
stos
cwde
cmp
bound
add
or
add
jae
neg
xchg
jle
mov
int3
aam
rcr
mov
dec
sbb
outs
arpl
shl
aas
retf
and
loopne
pop
adc
pop
out
sti
push
add
dec
jno
aad
nop
test
in
sar
jp
jno
push
pushf
stos
std
sub
sbb
outs
mov
addr16
(bad)
cld
inc
(bad)
sub
repz
mov
or
xor
(bad)
aam
stc
push
mov
inc
rcr
shl
shl
nop
mov
mov
imul
dec
xchg
cs
and
mov
cmps
and
xlat
fst
mov
enter
out
int3
imul
dec
xor
mov
cmps
in
sbb
gs
cmp
lods
test
mov
inc
gs
ins
sbb
adc
outs
push
dec
fstp
scas
popa
xchg
xor
retf
cmp
xor
rol
imul
add
ss
xchg
push
cmp
dec
cmp
cmps
repz
fnsave
loopne
out
dec
inc
addr16
xor
push
sbb
popa
lds
in
aaa
xchg
mov
push
and
pop
mov
repz
fcom
cmp
aas
das
sbb
push
ror
jle
push
loop
test
scas
lea
mov
dec
push
enter
inc
mov
and
sar
enter
pop
scas
into
call
mov
adc
int
push
cmp
clc
fs
mov
leave
mov
xchg
mov
mov
push
stos
stos
inc
or
das
scas
shl
mov
shr
xchg
sbb
push
into
xchg
fs
ss
(bad)
(bad)
jl
sbb
loope
cdq
stc
ins
psubsw
lahf
xor
sub
push
jl
lods
jmp
ret
in
pop
push
and
sar
test
shl
mov
dec
mov
aad
adc
stc
adc
fistp
int3
hlt
mov
movs
dec
adc
xor
cli
inc
dec
daa
adc
dec
outs
and
retf
mov
mov
pop
pushf
sbb
xor
int3
inc
pop
call
shl
sub
jmp
mov
ja
daa
jb
xchg
mov
jl
cmc
iret
xor
mov
and
pop
pop
pop
add
ins
retf
or
jnp
cmp
lods
ds
aam
daa
xchg
xor
push
hlt
(bad)
and
or
mov
and
mov
enter
cmc
push
rcl
mov
call
shl
jmp
cwde
mov
aam
or
adc
push
call
cmp
stc
push
aaa
arpl
xor
lods
and
push
mov
dec
add
push
(bad)
adc
and
cs
rcr
adc
fdiv
add
lods
test
scas
ja
mov
in
adc
rcr
xchg
xchg
loope
dec
icebp
scas
fsubr
adc
inc
cs
cmp
xchg
mov
scas
cwde
cmp
retf
adc
mov
test
sbb
cdq
pop
cmps
(bad)
push
cdq
pop
push
mov
push
push
rcl
fdivr
sbb
adc
jg
mov
add
pop
mov
dec
sub
xchg
outs
or
mov
mov
fcmovnbe
and
add
push
aam
inc
adc
inc
in
xchg
xchg
sar
sub
jp
imul
sbb
xchg
push
inc
iret
pop
cmps
bound
dec
mov
push
lea
jmp
hlt
jb
lods
fsub
xor
call
jnp
pop
fild
jmp
retf
add
jo
push
fwait
or
and
cmp
das
sub
out
dec
xchg
aad
dec
and
sub
jle
lea
sbb
aad
je
pop
ja
adc
mov
loope
and
jp
push
or
sti
je
xchg
call
dec
or
sbb
and
dec
lods
xchg
std
imul
fidiv
imul
jno
mov
mov
push
shl
mov
(bad)
jecxz
jle
(bad)
loopne
dec
fcom
scas
ret
inc
dec
int3
jmp
ss
sbb
lods
jecxz
imul
inc
pop
and
(bad)
mov
stos
std
xchg
mov
push
sub
xchg
dec
(bad)
mov
sbb
add
in
jne
sbb
scas
or
dec
add
lods
mov
test
jno
pop
dec
mov
and
ins
jnp
ins
add
loope
sbb
call
adc
mov
lods
inc
int
fst
in
ds
push
jne
sub
inc
ins
push
add
and
inc
dec
addr16
cmp
push
xchg
cmp
in
clc
inc
sub
cwde
lahf
adc
pop
fnsetpm(287
inc
xor
pop
add
mov
js
mov
dec
out
(bad)
xchg
aaa
and
(bad)
sbb
out
test
add
in
dec
or
aas
fidiv
pop
mov
jo
mov
pop
mov
movs
pop
arpl
rol
pop
(bad)
mov
sahf
rol
push
xchg
pop
mov
enter
push
mov
adc
add
mov
ror
sub
in
jbe
mov
xchg
inc
jne
xor
loop
(bad)
pop
cmp
aaa
xchg
sbb
mov
inc
jl
add
adc
jp
mov
iret
pop
pop
and
xor
inc
mov
ret
or
push
and
push
xlat
cmps
xor
sub
out
cmp
xchg
inc
push
(bad)
scas
jecxz
pop
jecxz
fild
outs
push
leave
cwde
es
lock
mov
dec
sbb
push
jge
mov
and
mov
fnstsw
mov
jbe
inc
push
imul
pop
xor
push
jae
mov
push
in
imul
ds
mov
in
movs
mov
mov
das
in
dec
loopne
xchg
sbb
out
pop
mov
lds
and
jecxz
mov
cmp
adc
mov
inc
dec
inc
xchg
dec
xchg
lods
push
outs
ja
lea
ret
std
shl
mov
sbb
dec
jle
int3
sysret
pop
mov
fmulp
gs
in
aas
ret
mov
(bad)
hlt
push
js
sahf
shr
arpl
xchg
(bad)
(bad)
nop
pusha
push
dec
mov
push
(bad)
stc
fdivrp
cmp
jmp
aas
daa
pop
pop
jmp
push
aas
sub
jbe
dec
sbb
push
mov
stc
mov
push
(bad)
in
push
ror
pop
push
dec
pop
leave
icebp
or
imul
xlat
(bad)
mov
inc
jns
(bad)
lds
and
fiadd
jo
mov
shr
cli
mov
sbb
(bad)
ror
movs
test
cs
mov
mov
das
cld
popa
js
stos
ins
jnp
sbb
inc
pop
add
stc
and
and
in
mov
mov
and
dec
push
mov
cli
lods
sub
int3
xor
adc
cmc
sub
aam
mov
mov
push
xchg
mov
cmps
js
cwde
push
js
scas
adc
inc
shr
add
sbb
xchg
ficomp
cmp
js
sub
jo
(bad)
stos
popa
retf
das
movs
pusha
and
cli
inc
cmc
or
fst
cmp
push
shl
sub
dec
loope
xor
or
cmp
nop
mov
or
mov
push
cli
jae
mov
wbinvd
call
mov
push
(bad)
das
retf
iret
sub
pop
icebp
in
neg
loop
mov
and
les
imul
in
icebp
(bad)
xor
lea
(bad)
fcomp
pop
inc
in
or
mov
movs
dec
outs
mov
sbb
xor
sahf
push
pushf
add
jnp
call
jecxz
mov
enter
xor
dec
mov
(bad)
jmp
hlt
fdivr
ret
mov
repnz
stc
push
inc
adc
shl
mov
lds
mov
shl
cs
cmp
mov
or
xchg
cmp
and
ins
dec
add
cmp
xchg
in
push
dec
mov
out
stos
jne
mov
xchg
push
pop
and
jg
pushf
add
mov
cdq
dec
sub
push
stos
movs
pop
xchg
lods
fwait
sub
leave
fiadd
shl
dec
sub
sub
xlat
jg
pop
out
adc
enter
ret
jle
mov
mov
fadd
jnp
cmp
and
js
inc
xchg
cmp
iret
retf
adc
je
jp
pushf
mov
js
retf
pushf
in
fs
dec
shl
xor
ins
out
jns
(bad)
mov
xchg
xchg
mov
int3
jns
cmp
sub
sub
rol
cwde
jg
mov
out
mov
and
xchg
stos
sti
jp
and
adc
enter
inc
stc
fld
prefetch
dec
adc
mov
or
adc
mov
adc
jno
dec
aam
and
or
rol
dec
in
and
aad
out
adc
loop
add
xchg
pop
sub
push
(bad)
out
add
cmp
xor
imul
lahf
and
fidivr
fwait
and
fs
cmps
inc
and
ins
pop
aas
test
sbb
(bad)
mov
ret
outs
mov
or
sbb
sub
cmps
sbb
mov
popf
std
mov
loope
mov
ja
arpl
scas
dec
push
test
icebp
dec
dec
loope
es
cwde
dec
sub
retf
mov
pop
das
ins
cmp
fcmove
jno
mov
lea
in
jbe
out
adc
aaa
iret
adc
xor
jmp
cmc
ret
mov
hlt
jp
mov
test
push
mov
jmp
loopne
mov
lahf
mov
inc
sti
sbb
xchg
ds
jg
(bad)
dec
pop
adc
loopne
jg
jge
fbstp
sub
(bad)
push
sub
xor
sub
es
mov
test
push
inc
push
adc
outs
(bad)
jns
cmp
data16
inc
sub
das
jne
jae
inc
or
aas
fsubp
(bad)
pop
xchg
mov
jg
aad
xor
and
and
jmp
test
xchg
mov
dec
push
mov
and
stos
(bad)
cld
dec
xor
push
mov
jmp
mov
dec
test
lds
and
lock
xchg
popf
retf
fwait
push
test
lods
std
mov
add
jns
movnti
aam
or
pop
mov
xor
ss
dec
push
jp
das
ret
adc
cld
dec
jecxz
mov
(bad)
mov
rcr
push
stos
ret
pop
icebp
cs
mov
in
stc
mov
push
(bad)
fnstcw
or
adc
mov
pusha
mov
push
ds
mov
clc
mov
stos
mov
in
outs
in
cmp
movs
pop
repnz
and
je
push
add
outs
xchg
and
das
dec
push
dec
cmp
in
dec
rcl
pop
inc
jle
shr
and
ins
jge
mov
sub
ins
or
retf
lea
dec
(bad)
in
(bad)
outs
addr16
xor
pop
xchg
stos
int3
fist
outs
es
mov
es
pusha
ss
cmp
mov
sbb
push
rcr
icebp
add
pusha
cmps
imul
fisttp
rcr
mov
(bad)
mov
test
shr
jmp
std
fnstcw
sti
loopne
mov
bts
xor
cmp
ja
cmovge
int3
adc
dec
jns
sahf
pop
movs
xchg
test
dec
add
pop
out
mov
iret
mov
and
or
add
dec
inc
mov
dec
out
scas
inc
aad
and
xor
out
repnz
js
aad
cld
dec
(bad)
ja
inc
ror
neg
mov
(bad)
mov
push
push
into
and
pop
adc
es
fisubr
cmovae
pushf
cmp
jb
loope
mov
loop
lahf
cmps
fldcw
retf
adc
cmp
(bad)
pop
sub
out
pop
xor
enter
addr16
inc
push
add
and
mov
adc
inc
inc
adc
mov
in
pushf
adc
call
and
test
add
jbe
push
fcmovu
xchg
adc
mov
bound
xchg
cmp
mov
jne
mov
mov
fisttp
sbb
cmp
or
int
inc
aad
out
add
aaa
in
les
dec
pushf
call
dec
adc
loope
out
mov
cmps
cmp
add
adc
dec
jb
dec
xchg
repz
jo
inc
ret
scas
fisub
xor
lods
cmp
push
inc
jg
(bad)
outs
push
stos
mov
into
dec
sar
pop
push
push
sbb
test
inc
ret
test
out
inc
dec
leave
jo
mov
pop
xor
and
call
outs
pop
out
hlt
pop
push
outs
jns
fadd
pop
bound
inc
fld
pusha
jg
pop
jne
(bad)
mov
sub
jp
mov
sbb
loopne
mov
adc
jp
sbb
xchg
jnp
inc
jmp
push
shl
into
xor
sub
(bad)
add
test
rcr
push
adc
or
cli
xchg
and
loopne
or
dec
lods
(bad)
cmp
clc
fsub
and
test
pop
sub
cdq
mov
sbb
cmp
in
outs
test
sub
(bad)
jmp
test
sub
cli
scas
cmp
imul
dec
push
daa
lods
sbb
jmp
inc
sub
adc
jbe
gs
test
mov
jge
aad
sub
add
or
adc
dec
pop
add
ds
add
push
mov
mov
sub
push
leave
icebp
jb
pop
pushf
pop
arpl
popf
cmp
(bad)
mov
adc
push
mov
push
ret
enter
sbb
or
push
add
iret
inc
rcl
cmp
loop
push
rcr
add
aad
arpl
ds
inc
pop
pop
sti
adc
lods
sbb
ret
pop
or
add
dec
or
pop
(bad)
mov
pop
ins
div
inc
add
inc
dec
cmp
mov
cmp
addr16
cmp
pusha
retf
int
call
lahf
cmp
or
sbb
jg
call
icebp
mov
fisttp
add
retf
cdq
jmp
lods
rcl
out
push
cmp
(bad)
xor
movs
les
mov
dec
stc
cld
rcl
mov
xlat
int3
mov
lods
mov
loopne
nop
and
scas
sbb
(bad)
ror
clc
ins
jbe
sbb
out
push
inc
sbb
mov
ror
push
jmp
retf
in
out
jmp
cmp
ja
out
out
pop
inc
test
sub
push
sbb
add
mov
pop
dec
sub
loope
stc
dec
pop
imul
xchg
xchg
push
xchg
push
push
xchg
daa
sar
in
iret
jle
cmps
dec
popa
or
lock
js
icebp
adc
xor
and
retf
inc
cmp
ret
mov
es
dec
std
adc
push
xor
dec
mov
cs
or
or
jo
push
mov
inc
add
fdiv
in
jmp
ds
mov
cmp
in
jle
icebp
push
inc
lds
in
push
push
das
mov
dec
lods
xchg
mov
push
pop
adc
inc
xor
in
(bad)
pushf
inc
jo
int
loope
mov
ss
sbb
jb
out
add
mov
idiv
mov
outs
xchg
and
jecxz
ins
leave
jp
(bad)
pushf
sub
addr16
inc
add
ret
iret
or
test
movs
pop
stos
not
mov
and
sub
add
push
fdiv
test
pop
adc
cli
cld
lods
and
push
add
cmps
shr
jmp
mul
or
(bad)
(bad)
push
pop
nop
dec
cmp
fisttp
sbb
sbb
aad
inc
jmp
jmp
mov
sbb
in
js
push
push
push
add
fidivr
dec
add
push
cmp
pop
xchg
pop
dec
xor
push
cld
repnz
inc
arpl
in
push
into
(bad)
jg
inc
sbb
xchg
dec
retf
push
cmp
arpl
jns
(bad)
mov
mov
push
push
mov
mov
fisub
xor
dec
pushf
mov
push
pop
arpl
test
jae
pop
add
jbe
inc
mov
pop
push
dec
mov
aaa
mov
(bad)
xchg
les
dec
bound
aam
adc
push
cmp
push
mov
sti
and
sti
xchg
push
adc
xor
jl
xor
ret
icebp
loope
pushf
(bad)
and
cmc
inc
int
int3
mov
ins
gs
scas
ss
sub
jmp
clc
fidivr
int
sbb
mov
std
in
pop
mov
out
push
mov
mov
lea
movs
neg
push
xchg
leave
inc
outs
iret
mov
jne
xor
les
stos
or
sub
xor
ins
(bad)
mul
add
jmp
jns
and
lods
hlt
imul
int3
test
mov
sub
(bad)
retf
inc
repnz
inc
inc
outs
pop
(bad)
enter
repz
jns
out
mov
imul
fs
shl
jecxz
sub
adc
test
and
es
mul
pop
push
sub
dec
xlat
jns
and
or
call
pop
and
aad
fstp
lds
sbb
mov
neg
test
jno
lahf
fadd
test
adc
cli
mov
sbb
jne
cmp
mov
nop
mov
dec
mov
or
sub
cmps
mov
(bad)
xor
cmp
mul
aam
inc
or
cli
fld
inc
xor
xlat
xchg
sbb
shr
mov
fadd
outs
and
push
jmp
ss
push
ficom
loope
dec
xchg
pop
daa
inc
out
fs
push
and
test
push
xor
pop
add
jae
shl
xchg
jmp
lds
add
int3
mov
xor
stc
push
in
pop
or
xchg
sbb
js
mov
mov
lock
cmp
fisub
addr16
mov
imul
retf
cs
imul
push
xor
cmp
dec
push
pushf
es
xchg
and
inc
das
dec
pushf
aas
inc
mov
mov
mov
fdivr
je
add
stc
in
mov
jns
sub
or
out
jb
push
js
(bad)
push
cmp
shl
or
sbb
xor
(bad)
sub
jmp
bound
mov
dec
xchg
add
test
cmps
pop
aas
data16
loop
fdivr
aad
aas
dec
cmps
cmps
push
lods
int
add
or
jmp
jmp
and
inc
fisubr
pop
test
mov
add
clc
xor
inc
scas
leave
cld
or
add
fnstcw
add
jmp
xor
fisubr
sahf
pop
inc
aam
test
inc
push
pop
jno
and
enter
pop
aaa
imul
into
ret
inc
ds
loop
cmp
inc
(bad)
(bad)
js
mov
push
jns
dec
retf
and
call
cs
or
mov
add
sbb
mov
fldcw
and
cmp
pop
aad
imul
pop
cmp
call
dec
mov
scas
mov
fcomp
call
stos
mov
scas
in
add
loop
test
gs
js
adc
mov
jnp
jae
push
and
xchg
(bad)
mov
leave
sbb
inc
jb
stos
sti
add
mov
retf
fisubr
scas
mov
rcr
repnz
hlt
rcl
add
cwde
xor
loop
sub
sbb
pop
scas
(bad)
cmc
cld
sahf
mov
xor
jbe
cmps
dec
aad
dec
pop
test
cdq
cmc
cmp
test
push
loop
mov
dec
cmp
int3
call
lods
sub
std
mov
and
leave
jecxz
icebp
sub
fadd
test
or
neg
xor
int
imul
imul
inc
jge
adc
(bad)
cmp
shl
inc
fadd
push
arpl
adc
cli
lods
fdivp
xor
loope
scas
es
fld
cmp
sbb
mov
push
push
enter
shr
inc
retf
or
xor
pusha
fs
outs
arpl
xchg
sub
mov
pop
inc
inc
xor
inc
jp
dec
aad
push
and
add
or
in
lods
pop
and
fs
imul
daa
fcomp
cmp
mov
xchg
pop
cmp
stos
mov
sbb
fcom
mov
loop
daa
push
fist
and
cli
adc
test
sub
aaa
sbb
das
jo
mov
ret
ret
lock
gs
loopne
dec
jb
dec
mov
adc
cmp
aad
rcl
jl
movs
pop
lods
pop
ds
add
fstp
xchg
add
cmp
sbb
(bad)
loopne
pop
es
jmp
rcr
cmp
bound
cwde
adc
xchg
dec
aaa
mov
xor
fisttp
rcl
xchg
jl
xchg
or
push
icebp
int
(bad)
mov
and
das
mov
mov
jbe
loop
outs
or
push
inc
xchg
xchg
adc
push
jb
xor
adc
dec
std
in
cmps
clc
or
stos
mov
je
dec
inc
loop
cli
pusha
pushf
xchg
mov
inc
mov
xchg
outs
in
pop
out
in
int
jle
jecxz
adc
aaa
popf
adc
pop
mov
int3
fst
(bad)
(bad)
xchg
fisub
mov
aas
dec
add
imul
ret
add
fs
dec
add
cmp
sbb
mov
push
inc
aaa
mov
imul
mov
mov
jmp
jle
or
ins
jle
ror
mov
and
mov
pop
aam
or
je
push
mov
loopne
mov
mov
sbb
scas
ja
add
adc
push
or
jl
sub
cmp
mov
mov
cmp
adc
retf
jae
mov
and
(bad)
imul
jg
mov
add
xchg
ins
mov
fstp
or
popf
push
pop
cmps
jp
and
outs
adc
pop
xor
in
fwait
add
loope
int3
inc
mov
retf
xor
pop
jge
arpl
xchg
mov
gs
cmp
dec
in
cmp
mov
dec
sub
iret
retf
xchg
dec
in
div
push
into
pop
hlt
std
fwait
pop
cwde
popa
mov
jg
xchg
jle
mov
push
xchg
adc
sub
pop
add
mov
mov
mov
inc
sub
or
enter
jp
xor
inc
jle
js
and
stc
in
xor
push
das
sub
cmc
pop
and
push
mov
jg
push
cmp
mov
and
jle
cli
dec
retf
nop
nop
in
aam
call
leave
and
in
jmp
jmp
jecxz
push
(bad)
adc
repz
sub
mov
stc
xchg
push
shl
pusha
and
retfw
jg
mov
fisubr
daa
jecxz
mov
push
retf
mov
pushf
(bad)
push
xchg
mov
ins
sbb
sbb
fistp
jmp
vmread
mov
es
mov
cmp
call
fstp
xchg
push
test
sub
sbb
mov
aaa
push
jge
push
dec
fmulp
and
inc
mov
xchg
cli
dec
fwait
inc
fild
xchg
xchg
(bad)
shl
jmp
(bad)
sbb
or
ds
mov
aam
js
sub
iret
add
xchg
push
jae
sub
push
mov
jnp
jno
out
mov
lea
fimul
repnz
mov
outs
push
or
adc
inc
or
push
mov
test
scas
inc
and
int3
(bad)
pop
xor
jge
jmp
jecxz
and
cmp
push
push
push
cwde
enter
add
sub
sbb
jg
(bad)
push
pop
mov
jl
aad
cmp
cwde
(bad)
xor
(bad)
mov
xor
sti
xor
xor
mov
ss
push
adc
repz
pop
jnp
and
sub
inc
movs
das
adc
call
into
stc
xor
cmp
test
push
and
cmp
(bad)
adc
imul
lock
dec
lock
shl
push
mov
pop
ret
gs
pop
pop
jge
mov
js
jno
repz
jbe
cmps
cli
into
ss
inc
int3
outs
dec
push
call
mov
pop
mov
add
pop
fidiv
xchg
pop
dec
in
sar
mov
cmp
das
push
mov
bound
ret
sti
xchg
mov
push
test
add
(bad)
rcl
test
add
pop
test
mov
pop
or
jecxz
nop
aas
cmp
add
xchg
mov
test
xchg
dec
movs
stos
mov
adc
outs
lds
push
mov
ret
out
add
(bad)
in
dec
add
mov
ja
scas
sbb
scas
sahf
mov
pop
in
test
push
in
enter
fisubr
inc
mov
fadd
bswap
push
sbb
out
push
xlat
pop
cmps
ins
retf
(bad)
and
mov
int3
mov
loope
push
imul
push
cmp
ficomp
daa
std
add
and
int
icebp
retf
cmps
and
outs
lock
mov
cmps
xor
xor
ret
pop
enter
stc
cmp
aam
sbb
push
test
out
retf
push
jmp
mov
push
dec
out
cdq
(bad)
add
stc
cs
lock
stos
or
mov
fwait
push
pop
pop
pop
ins
xchg
int3
inc
retf
add
mov
in
daa
push
xchg
pop
xor
outs
cmp
ds
adc
lock
cmp
jl
mov
scas
outs
jo
xor
inc
int3
jb
js
sbb
jecxz
mov
les
pop
inc
f2xm1
in
stc
dec
shl
les
push
outs
jmp
mov
(bad)
push
xchg
fbstp
xor
cmovnp
retf
out
pop
shl
(bad)
pusha
jge
push
rcr
movs
or
adc
push
pop
push
inc
push
hlt
pop
bound
fs
test
rol
fsubrp
repz
adc
xor
call
push
std
xchg
sub
jmp
je
adc
ss
ficomp
pop
jl
mov
xchg
xor
popf
mov
inc
and
push
jns
aaa
rcr
pop
push
in
or
add
test
mov
or
xor
dec
jp
mov
sti
dec
cmp
cmps
sbb
sbb
mov
mov
inc
inc
sub
arpl
or
pop
push
jae
push
fcmovnbe
jle
repnz
fs
jecxz
pop
test
movs
sbb
out
mov
or
sub
shl
retf
pmaxsw
jae
pop
cld
sbb
push
lock
shl
inc
fs
jp
loop
test
repz
add
add
mov
mov
jmp
ds
adc
pop
scas
sub
pop
push
(bad)
mov
inc
mov
sub
pop
nop
clc
popa
mov
mov
and
mov
mov
movs
stc
movs
test
inc
jo
add
clc
mov
inc
icebp
es
pop
ret
cs
ret
xor
in
(bad)
in
les
and
cmp
fidivr
jns
cmp
mov
rol
arpl
repz
xchg
shr
shl
stc
sti
add
push
sbb
cld
pop
jno
push
xchg
cmp
mov
aam
iret
lahf
mov
push
(bad)
idiv
inc
xor
cli
fisub
imul
lahf
jg
mov
popf
int3
add
icebp
pop
push
sar
pusha
xor
xchg
xchg
int3
or
outs
sub
or
or
mov
xchg
out
mov
add
mov
mov
fdivr
cmps
mov
daa
jno
sub
jl
lods
mov
psubusb
stos
int
outs
add
sbb
aas
or
movs
ret
and
lahf
sub
push
imul
xchg
or
mov
and
das
lods
aas
xchg
pusha
mov
sbb
pop
cmc
retf
dec
sti
xchg
fadd
out
and
xchg
add
mov
mov
mov
pop
jecxz
adc
rcl
jle
jle
mov
lock
and
pop
sbb
cmp
aaa
inc
jp
test
adc
fwait
mov
pop
sub
cli
cli
scas
stos
cmc
adc
in
sbb
fcmovbe
cmp
lods
(bad)
ret
cs
dec
loop
repnz
nop
cwde
jp
or
mov
test
adc
test
mov
adc
sbb
ret
push
dec
add
scas
mov
ss
inc
mov
popf
or
sub
out
push
addr16
int
mov
test
pop
ins
cmp
xor
sbb
cmp
out
mov
cmp
das
jl
sbb
ins
mov
dec
adc
dec
jno
mov
outs
jp
cmp
inc
sti
add
dec
mov
mov
push
retf
mov
xchg
ret
movs
scas
fisttp
adc
jecxz
jo
lds
pop
mov
(bad)
jne
jne
adc
mov
in
add
mov
push
pop
sbb
inc
cs
in
and
or
fidiv
cdq
ficom
in
cs
ja
mov
retf
(bad)
xchg
cmps
add
sub
fdivr
add
fiadd
mov
(bad)
xchg
aaa
sbb
clc
stos
call
inc
pop
popa
jnp
and
cmps
mov
pop
call
push
lea
mov
jecxz
push
or
xlat
dec
mov
ds
call
ins
nop
addr16
jle
sub
(bad)
push
test
cdq
and
xor
adc
xlat
sbb
fimul
scas
scas
(bad)
push
clc
sbb
aam
movlps
(bad)
cmp
das
sbb
(bad)
jl
xor
mov
mov
cs
push
xor
dec
xchg
ds
mov
mov
in
mov
mov
call
je
dec
mov
and
(bad)
addr16
stc
mov
loopne
xchg
scas
call
outs
xor
aad
pop
aam
xchg
cld
inc
jg
and
adc
fld
out
add
jp
inc
jb
xchg
adc
jle
stos
push
jbe
shr
mov
imul
cmp
repnz
dec
jb
cld
push
push
int3
cmp
dec
loop
repz
xchg
movs
sti
test
mov
inc
xlat
loopne
xchg
cmp
mov
addr16
mov
mov
and
enter
div
(bad)
fisttp
and
dec
iret
sub
pusha
dec
ins
jb
mov
das
and
cwde
cmp
and
sub
or
inc
add
mov
sub
scas
cli
je
dec
or
aaa
mov
out
addr16
add
pop
xor
xchg
lods
popf
stos
arpl
lock
jb
cmp
xchg
xchg
loop
repnz
sbb
cmp
jle
push
(bad)
mov
je
loope
jo
pop
jne
pop
mov
inc
nop
or
lea
call
push
push
ins
dec
je
cmps
inc
out
cmps
clc
ja
xor
cwde
jae
hlt
cmp
stc
inc
and
inc
push
pushf
ret
add
mov
lea
xor
push
inc
push
fidivr
fwait
aad
call
cmp
ss
sub
push
into
inc
pushf
test
cli
xchg
sbb
aas
mov
mov
sbb
jno
and
xlat
add
mov
popa
sti
cwde
int3
xor
call
xchg
cmp
sub
mov
adc
mov
push
sub
popa
sar
and
dec
mov
dec
lahf
xchg
mov
sub
add
push
sbb
adc
outs
cwde
xchg
lock
mov
and
pusha
nop
jl
sbb
call
fld
test
imul
xchg
jb
(bad)
sti
add
push
iret
mov
jecxz
or
sti
add
mov
popf
into
jp
lods
push
dec
and
in
pop
dec
enter
adc
sub
ror
xor
sbb
cmp
out
push
data16
sub
or
jae
inc
daa
fsubr
repnz
push
and
push
cmc
or
inc
(bad)
jle
add
outs
loop
in
sbb
test
jae
sub
cmp
jbe
in
das
(bad)
inc
push
mov
and
dec
lock
sub
dec
idiv
cmps
sub
cli
mov
pop
loope
icebp
pop
or
jnp
pop
sbb
das
push
sbb
daa
pusha
fdivr
ror
add
and
jle
jb
rcl
xchg
mov
ins
mul
and
pop
shl
fcmovbe
das
mov
fstp
and
mov
aam
adc
in
scas
arpl
bound
popa
add
xchg
xchg
inc
sti
jne
inc
shr
popa
imul
stos
ins
add
mov
and
daa
mov
clc
(bad)
test
out
ss
pop
fwait
dec
fistp
push
xor
add
das
cmps
cwde
sub
pop
fbld
xor
inc
push
xchg
lea
ret
shl
push
(bad)
or
mov
cmp
popa
sti
xor
jg
shl
out
mov
(bad)
xchg
add
mov
adc
cwde
inc
call
pop
pop
or
xlat
dec
pop
cmp
(bad)
cmp
jns
iret
mov
pop
jnp
and
mov
and
mov
test
and
fs
stos
push
gs
push
add
push
popf
mov
sbb
xchg
stc
jecxz
stc
in
or
les
sbb
loope
fcmovne
(bad)
ret
sbb
sahf
add
xchg
out
add
lods
pop
in
fdivr
or
das
add
pop
jmp
cmp
dec
loopne
jge
stos
scas
and
xchg
fmul
lock
jno
mov
(bad)
into
aaa
pop
jl
or
adc
in
push
out
sbb
cmc
ret
pop
sub
and
(bad)
jmp
mov
jle
jp
adc
outs
aam
stc
pop
lahf
jmp
in
out
mov
adc
lea
sbb
pop
sahf
mov
mov
test
out
add
ret
jecxz
loopne
inc
popa
fist
sti
enter
cdq
and
cmc
push
shl
mov
mov
pop
popf
sbb
add
outs
or
pusha
movs
mov
fbstp
mov
outs
sti
mov
test
fild
and
dec
and
push
jnp
repnz
js
fist
in
jbe
adc
pop
(bad)
adc
leave
sub
les
arpl
es
mov
inc
cmp
bound
pop
dec
add
xor
jno
movs
fcom
sti
(bad)
sbb
das
enter
popa
jg
mov
xchg
fistp
leave
ror
ret
hlt
add
sbb
jl
mov
mov
mov
cli
sbb
push
sbb
cmc
call
pop
xor
daa
pop
aad
inc
ficom
or
jp
dec
(bad)
add
adc
cmp
jmp
push
mov
cmps
test
aad
dec
push
push
adc
or
xchg
test
sbb
test
inc
mov
call
cdq
push
ja
cmp
stos
pop
ret
jge
mov
add
(bad)
xor
xor
cmp
mov
bound
test
sub
push
push
pop
in
ja
adc
ret
mov
movs
xor
movs
fsubr
mov
hlt
mov
mov
jp
nop
fnstsw
jno
les
fdiv
jno
add
mov
adc
rcr
sub
aas
loopne
pushf
ret
arpl
and
js
xor
fnsave
pop
jl
sbb
dec
and
iret
cmps
aad
adc
jmp
out
xchg
adc
adc
mov
adc
adc
loope
cmp
stos
inc
clc
jb
ja
cmp
jne
mov
jae
icebp
lock
xsavec
test
jo
mov
pop
movs
sub
xor
jp
and
test
pop
jl
jge
loopne
sub
push
pushf
rcl
in
mov
adc
(bad)
jmp
loopne
aad
push
fs
lea
loopne
inc
bound
inc
out
scas
stos
addr16
cli
fild
add
mov
pop
inc
pushf
inc
popa
or
xor
dec
(bad)
jmp
dec
ins
sub
xor
sub
cld
cld
adc
add
jg
arpl
int3
outs
jge
outs
mov
je
and
sub
lock
enter
ret
pop
call
push
xchg
gs
dec
dec
movs
out
int
and
dec
or
imul
pop
data16
mov
inc
cmps
loop
adc
pushf
add
pop
test
in
mov
movs
dec
pop
sub
cli
add
push
sbb
add
push
mov
js
xchg
je
mov
jns
xor
pop
adc
shr
push
pop
cmps
sub
mov
mov
rcr
xchg
mov
loopne
or
xor
mov
lods
inc
add
sub
mov
rcr
aas
mov
mov
jle
scas
mov
mov
jp
mov
call
pop
jle
mov
sbb
lds
out
dec
push
add
xor
sbb
lahf
mov
xor
(bad)
and
sub
pop
mov
cwde
retf
cmp
leave
adc
imul
mov
outs
mov
popa
mov
adc
dec
call
in
cmp
jmp
cmp
push
arpl
xchg
nop
stc
shl
es
pop
cdq
imul
pop
cmp
dec
mov
lock
icebp
(bad)
rol
lds
pop
sbb
mov
jge
adc
cmp
mov
jecxz
dec
test
xor
dec
push
loop
test
push
adc
mov
xor
jne
rcl
add
mov
sub
mov
test
add
dec
pop
jmp
icebp
hlt
xor
sbb
lock
(bad)
(bad)
push
(bad)
push
lods
push
rcl
xchg
aaa
pop
lds
ins
stc
cmp
popa
xchg
test
addr16
jg
sbb
in
out
jp
fmul
das
xchg
pop
push
cmps
jl
inc
mov
movs
(bad)
movs
fcomp
ds
xchg
cmp
xchg
cmp
jle
mov
imul
lea
and
and
into
loope
adc
adc
mov
out
icebp
jo
test
aas
xlat
(bad)
scas
xchg
nop
mov
pop
xchg
mov
sbb
pushf
push
inc
adc
out
xchg
data16
in
sub
call
mov
aad
fld
mov
shl
jl
add
mov
and
dec
and
jne
(bad)
ficom
jbe
mov
outs
pop
cmps
pop
push
into
iret
mov
gs
jp
xchg
mov
int
mov
aad
scas
lea
into
jge
enter
lods
or
call
xchg
mov
daa
push
mov
or
js
test
or
popf
and
lahf
in
jbe
daa
or
cwde
xchg
cmp
ror
or
sysexit
add
dec
jmp
pop
imul
sub
push
lea
test
fmul
add
xchg
mov
inc
and
inc
inc
dec
ja
push
cmp
cmp
mov
mov
aad
and
fwait
outs
repnz
or
add
shl
test
fsub
mov
rcr
movs
and
xchg
pop
sub
push
iret
loop
clc
ss
fmulp
lahf
outs
into
dec
and
lods
aam
mov
out
or
jecxz
and
jmp
mov
jg
gs
imul
cmp
pop
fidiv
dec
mov
jmp
test
ror
fidiv
clc
mov
test
mov
mov
call
aad
ss
test
test
ret
push
cmps
ja
xchg
add
movs
(bad)
jnp
fidiv
test
repnz
inc
pop
in
sahf
add
sub
lods
push
xchg
and
jno
and
outs
iret
add
scas
mov
pop
retf
jp
xchg
sub
and
retf
or
sbb
lahf
cwde
inc
push
cmps
cmp
stos
dec
stc
or
aas
mov
popa
inc
clc
jmp
lock
dec
add
push
xor
pop
xor
outs
xlat
dec
in
and
xchg
ja
cmovo
jne
fcom
retf
push
cmc
ret
dec
mov
sub
mov
pop
mov
pop
cmps
dec
hlt
repz
push
pop
shl
stos
pop
das
repz
adc
test
pop
sbb
je
sbb
jbe
cmp
mov
mov
pushf
sub
jnp
mov
inc
jbe
retf
shr
ins
mov
pop
mov
pop
sbb
push
retf
fs
les
std
cli
jns
lds
pcmpeqb
in
cwde
inc
test
inc
or
pop
adc
loop
in
imul
push
pusha
in
(bad)
mov
arpl
dec
sub
push
out
mov
and
xor
clc
jns
out
sbb
bound
cwde
sub
adc
pop
test
cmp
mov
add
push
pop
jecxz
pop
dec
lahf
(bad)
out
mov
fwait
test
sahf
popa
jae
(bad)
mov
out
out
dec
pop
arpl
jnp
mov
into
mov
adc
mov
or
pop
outs
pop
mov
scas
mov
inc
sbb
lods
ds
xlat
std
and
dec
mov
les
push
(bad)
sbb
mov
add
add
add
cmp
push
push
and
(bad)
(bad)
or
(bad)
jp
sbb
leave
pop
lea
sbb
jb
and
mov
xchg
dec
(bad)
mov
sub
or
pop
je
inc
sti
xchg
addr16
dec
lods
mov
pop
add
xchg
mov
jmp
addr16
or
rol
movs
and
fcmovnbe
cmp
fld1
or
adc
mov
dec
pop
in
gs
scas
mov
sbb
sbb
jmp
loope
retf
out
mov
(bad)
data16
in
pushf
push
icebp
add
adc
sub
hlt
es
cmp
cld
add
add
aam
idiv
or
push
mov
dec
cmp
adc
xchg
popf
push
push
push
mov
or
cs
inc
add
aam
inc
sar
pop
xchg
test
rol
sub
cmp
sti
push
add
push
mov
cmp
sbb
or
jb
pop
xor
mov
imul
or
push
js
and
hlt
and
sbb
test
xchg
jns
imul
aad
repnz
cmps
or
dec
adc
ins
cmps
std
lods
icebp
xchg
mov
scas
cmps
xchg
pop
das
pop
mov
mov
imul
mov
cmc
fistp
inc
sbb
dec
add
inc
adc
or
test
test
sti
inc
popa
lock
inc
call
push
mov
call
adc
and
mov
inc
and
mov
mov
sbb
icebp
sbb
repnz
fistp
out
popa
jno
mov
xor
call
or
mov
dec
test
ja
mov
add
jo
pop
fmul
ss
pop
gs
shl
or
sub
mov
cmps
mov
sub
add
inc
and
inc
mov
and
xchg
inc
adc
xchg
adc
sbb
cmp
xor
rol
jno
test
out
movs
mov
(bad)
sahf
mov
call
retf
sbb
sub
xchg
mov
pop
cmps
outs
add
arpl
xlat
adc
pop
cmp
out
cmp
jecxz
js
and
(bad)
xchg
inc
loopne
movs
fwait
pop
inc
in
or
and
lea
pop
or
mov
pop
pop
fsubr
test
pop
test
inc
and
or
rcl
and
jne
rcl
in
call
lahf
ins
cmp
hlt
out
add
sbb
das
xchg
dec
nop
add
icebp
adc
es
dec
stos
ins
sbb
call
xor
mov
adc
jnp
stos
adc
cdq
push
pop
jo
stos
imul
jg
test
outs
int
retf
adc
pop
movs
and
jae
pop
jb
gs
add
es
push
test
mov
test
adc
jl
aam
xlat
jns
pop
jns
(bad)
ds
adc
mov
or
das
jnp
mov
imul
test
aam
imul
loop
test
jle
push
ret
enter
push
ja
dec
xchg
sbb
lea
push
ss
add
xchg
test
lods
bound
ror
cmp
sbb
sbb
pusha
fnstsw
sub
jae
mov
pusha
aas
mov
pop
(bad)
dec
jp
add
mov
sub
mov
cdq
retf
retf
fldcw
ret
mov
je
push
ret
ins
loop
shr
push
add
push
cli
enter
adc
aad
std
imul
xor
sbb
mov
mov
outs
(bad)
mov
dec
xchg
jp
cli
retf
inc
and
stos
into
mov
pop
imul
adc
adc
dec
push
cld
and
pop
(bad)
sub
retf
fwait
out
pop
lods
dec
sbb
push
push
retf
int
and
test
call
add
imul
mov
xor
jp
jnp
les
jno
adc
retf
jl
sti
dec
mov
push
push
xchg
bound
aad
scas
emms
je
ffree
aad
ins
or
imul
push
xor
cmp
add
mov
adc
add
stc
movs
fistp
sbb
fidivr
jno
(bad)
test
fild
wbinvd
mov
xchg
imul
mov
mov
mov
mov
shl
popa
ficomp
mov
mov
ret
or
pop
push
cld
aam
push
cmp
mov
and
cli
jp
and
xchg
ins
ret
cmp
aam
cmp
add
cld
mov
jp
pop
mov
cmp
fstp
stos
div
sbb
aam
mov
push
dec
aaa
fwait
xchg
aad
loop
xchg
cmc
lods
rep
sub
xor
std
cmp
loopne
stos
jb
not
loop
movs
inc
xor
dec
xchg
pop
lds
mov
jb
or
stc
fcmovb
nop
adc
(bad)
movs
(bad)
cwde
inc
xchg
adc
sti
xchg
mov
movs
dec
movs
stos
mov
sbb
mov
pop
ret
sbb
movs
sub
and
adc
ins
ret
and
aad
cdq
cs
push
add
les
scas
ret
cmp
loop
pop
xchg
(bad)
cmp
mov
addr16
mov
adc
out
data16
aad
gs
mov
xor
movs
jle
xor
add
pop
aas
or
mov
in
inc
jmp
dec
dec
test
cmp
cmp
cmp
es
les
in
pop
xor
(bad)
mov
loopne
rol
jmp
or
fstp
inc
test
retf
or
sbb
(bad)
outs
mov
adc
in
xchg
lea
je
aad
shl
mov
add
mov
mov
ss
cld
mov
xchg
std
arpl
xor
in
bound
mov
mov
xchg
hlt
sbb
outs
and
int
sub
jmp
push
mov
cld
or
lods
mov
cs
ins
(bad)
xor
scas
push
add
mov
jge
mov
cmp
mov
push
imul
push
jns
(bad)
retf
pusha
outs
scas
mov
gs
shr
in
sub
retf
hlt
ins
lock
dec
sbb
inc
or
pop
xchg
jne
or
jmp
iret
add
xor
and
fst
jne
pop
call
pop
cmp
push
and
inc
idiv
outs
and
scas
frstor
les
call
(bad)
outs
cmp
movs
cmp
inc
lods
les
jne
pushf
add
aas
cmp
loope
jge
adc
shl
push
xchg
out
mov
stc
cmp
mov
in
push
add
sbb
cs
cmp
fwait
lahf
push
aad
and
ins
aaa
push
cmp
loope
ror
xchg
xor
sbb
or
ret
int3
clc
into
out
popf
test
cmp
lods
div
xor
xor
mov
adc
push
lahf
cmp
lods
(bad)
mov
call
and
call
dec
ret
jne
imul
mov
push
and
inc
xchg
iret
repz
in
jp
in
sti
enter
lods
stc
js
jnp
iret
cwde
pop
cli
jg
pop
sub
loope
xor
in
pop
in
mov
cmp
mov
jns
adc
mov
push
ds
shr
xor
xor
gs
dec
ds
pop
lock
mov
aad
inc
imul
xor
imul
cmc
or
sub
mov
dec
je
(bad)
sub
or
(bad)
loope
mov
fiadd
fisub
sbb
arpl
add
xor
inc
jb
loope
jle
outs
in
xor
sbb
in
not
mov
nop
mov
mov
cmp
cdq
mov
pop
fwait
sub
leave
out
jnp
imul
pop
xor
addr16
xor
or
(bad)
push
cmp
iret
(bad)
cdq
add
jl
adc
ss
xor
(bad)
bound
or
adc
mov
imul
add
in
sbb
dec
xchg
xchg
(bad)
clc
push
cmp
test
xor
cs
add
dec
lea
ds
imul
int3
lods
dec
or
mov
mov
movs
mov
xor
inc
or
retf
fnstsw
mov
cmps
mov
(bad)
lods
sahf
lods
push
add
hlt
das
jle
retf
mov
or
clc
add
cmp
shr
jl
cmc
mov
int3
loopne
sub
lds
xor
loop
dec
iret
pop
ret
jle
jb
daa
enter
aas
movs
or
adc
popf
or
pushf
dec
sar
inc
stos
cmps
mov
into
jbe
mov
push
xchg
dec
pop
fstp
adc
adc
push
nop
add
add
stc
mov
lock
adc
jnp
inc
jmp
call
loope
outs
mov
cs
push
mov
out
mov
push
lods
push
out
cmp
adc
mov
mov
mov
or
int3
in
cdq
aas
repnz
or
pop
xchg
push
lods
leave
jge
push
inc
scas
fmul
ficomp
mov
call
les
in
push
add
ja
jmp
int3
adc
hlt
pop
(bad)
call
or
loop
dec
sbb
jo
loop
jl
adc
or
(bad)
stos
mov
pop
dec
xchg
add
dec
clc
xchg
sbb
rol
mov
mov
(bad)
sti
call
in
(bad)
nop
or
icebp
pop
sbb
outs
dec
shl
(bad)
fld
mov
jl
mov
retf
push
ds
ret
jmp
ins
into
repnz
mov
cdq
inc
cwde
rol
add
retf
push
scas
mov
mov
xchg
sahf
lods
mov
pop
jg
retf
sbb
inc
and
mov
shl
dec
dec
aam
sti
imul
push
in
iret
pop
in
jmp
cmp
hlt
mov
hlt
mov
movs
(bad)
jmp
push
aas
(bad)
cmp
(bad)
aaa
sahf
in
jo
dec
repz
push
and
pop
out
stc
jecxz
(bad)
push
jnp
add
ins
mov
(bad)
jnp
ret
aam
fnstcw
aas
or
inc
rep
cli
and
cmp
sub
xchg
lods
movs
clc
loope
test
ds
hlt
mov
(bad)
sub
xchg
out
addr16
pop
dec
add
jle
mov
cmp
sub
pop
sub
shl
call
xor
(bad)
or
and
mov
icebp
xchg
call
inc
mov
aam
call
dec
jmp
cmp
ja
adc
mov
cld
or
cmp
das
imul
bound
int
inc
div
mov
xlat
mov
imul
inc
outs
popf
push
pop
mov
aad
xor
call
sub
cwd
imul
mov
fdiv
paddd
mov
out
xchg
ret
push
pop
inc
mov
in
pusha
sbb
dec
test
stos
pop
sbb
pop
adc
aam
jle
loop
jnp
cmp
dec
test
jae
jns
push
sbb
repnz
jge
fmul
sbb
xchg
push
xor
pushf
xchg
stos
pop
shl
sub
out
int
mov
mov
imul
mov
stos
jb
adc
jl
stos
imul
in
scas
jge
inc
sub
jno
mov
or
ret
hlt
xlat
mov
sub
test
adc
loope
dec
fld
pop
out
shl
or
sbb
adc
push
add
shl
sub
mov
add
rcl
loopne
xchg
ja
sbb
pop
sbb
add
cdq
pop
mov
mov
dec
lahf
loopne
lea
pop
sbb
xchg
adc
hlt
js
jno
cdq
aam
int
clc
loopne
mov
add
call
sahf
lods
push
leave
dec
push
in
add
fidiv
int3
adc
push
fldenv
and
nop
fnstsw
add
repz
loop
and
ret
add
cld
and
outs
sub
sub
mov
lea
mov
in
cdq
xor
mov
or
mov
xor
add
ret
cmp
mov
fidivr
or
shl
fcom
out
int3
pop
jb
jmp
nop
jb
ficomp
loopne
ror
jne
fsubr
add
dec
ret
ret
xor
push
xchg
xor
sti
sbb
movs
mov
jle
rcr
in
pop
aam
lea
adc
push
cmps
and
mov
xor
mov
or
call
cld
scas
xchg
mov
icebp
lods
mov
fcmovnu
leave
xor
jo
or
cmp
pop
ret
push
inc
ds
int
aas
pop
sti
es
int
je
into
cld
mov
int3
leave
inc
push
push
repz
ja
clc
mov
in
or
mov
inc
dec
push
mov
xchg
add
pop
dec
push
ret
mov
push
pop
stos
xor
add
lods
iret
mov
add
push
and
xor
movs
call
aad
jmp
enter
mov
dec
mov
pushf
fimul
cmps
fstp
push
pop
sbb
loop
cmp
cld
push
sub
sbb
jbe
daa
xchg
mov
ins
rcr
imul
push
leave
imul
mov
mov
scas
leave
mov
jb
pop
mov
ds
je
ja
mov
dec
hlt
cwde
inc
cmp
cmp
add
push
sub
je
sub
mov
push
jno
aaa
mov
xchg
int3
jmp
xchg
jnp
repnz
arpl
aaa
ins
sti
inc
mov
pop
sahf
mov
sbb
cmp
in
and
cld
cmc
aam
mov
jle
push
mov
pop
icebp
mov
or
fidiv
inc
pop
retf
add
ins
xchg
retf
push
loopne
cmp
rcl
push
test
ror
sbb
xchg
dec
dec
push
xor
popa
mov
push
int3
loope
cmp
das
scas
sti
jp
xchg
inc
lods
dec
mov
cmp
repz
adc
sub
jg
jne
xor
cmp
and
push
pop
arpl
cmp
test
in
xchg
call
adc
pusha
popa
xchg
je
push
test
pop
ins
xchg
inc
in
jno
and
mov
pop
jnp
mov
pop
sahf
repnz
sbb
mov
jnp
mov
inc
mov
(bad)
lahf
dec
mov
dec
mov
push
xchg
rcr
sbb
and
jb
add
mov
or
jbe
fidiv
sub
int3
inc
xlat
lods
cmps
mov
test
in
ret
lds
gs
cmc
gs
aad
mov
aaa
mov
jmp
pop
aaa
std
xchg
xchg
cdq
inc
lahf
cmp
fcom
shr
(bad)
loopne
push
test
mov
test
jmp
mov
ror
adc
xchg
dec
adc
mov
imul
jne
loop
popf
sub
mov
stc
xor
sbb
enter
push
push
outs
cs
stos
and
fsub
les
ins
std
push
test
xor
sub
aas
xor
loope
mov
sub
test
and
movs
mul
cld
xchg
std
adc
xchg
inc
jge
and
pop
into
js
pop
and
cli
jp
sub
sti
inc
nop
dec
jmp
mov
es
rol
xchg
shl
adc
(bad)
cs
mov
adc
cmp
fadd
retf
mov
popf
jp
dec
fbld
add
mov
js
repz
packuswb
pop
sub
adc
mov
rol
jmp
(bad)
das
xchg
into
pop
push
loop
(bad)
rol
xchg
aad
pushf
clc
lock
stc
inc
ja
push
sbb
bound
cmc
js
lods
sub
jb
cmp
imul
fsub
cmc
xor
(bad)
fbstp
xchg
test
mov
push
push
jae
pop
ds
mov
ret
(bad)
cs
cmp
movs
js
mov
and
jmp
dec
push
adc
xchg
icebp
sub
call
mov
ss
xchg
in
ins
ds
add
mov
jno
add
xlat
pop
outs
ret
sti
jge
dec
fs
bound
and
and
mov
sbb
and
sti
sar
(bad)
nop
retf
retf
or
fist
stc
es
test
dec
std
ss
int3
(bad)
push
and
jl
outs
push
call
ja
test
arpl
ret
retf
xchg
scas
rcr
fdivr
xchg
cmps
mov
mov
aad
xchg
(bad)
dec
mov
add
mov
popf
shl
xchg
cli
imul
es
pop
in
lods
int
or
mov
movs
pop
faddp
mov
lock
push
movs
adc
retf
push
push
gs
jecxz
aaa
dec
mov
mov
pop
mov
popf
movs
(bad)
mov
fistp
xor
daa
inc
cmp
jmp
mov
ficomp
rep
lea
xor
hlt
and
std
div
cmp
xor
pop
push
xor
loopne
sub
dec
mov
lds
in
int3
scas
sub
pop
hlt
in
add
adc
sub
loopne
adc
inc
pusha
imul
mov
ret
out
clc
push
loopne
(bad)
retf
pop
mov
in
xchg
cs
inc
shl
or
je
dec
arpl
sbb
xchg
repz
pop
out
popa
mov
clc
les
push
test
dec
pop
jns
pop
inc
call
or
mov
xor
imul
xchg
mov
fld
aad
(bad)
and
inc
nop
mov
sbb
nop
sahf
(bad)
push
in
and
push
add
(bad)
ins
jno
push
stc
int
or
mov
jbe
cld
stos
add
xor
ds
sbb
test
xchg
pusha
inc
shl
(bad)
adc
pop
cmp
adc
inc
fadd
xor
jb
pop
fwait
push
fisub
popf
popf
mov
add
jo
punpckhwd
mov
ins
or
mov
nop
sar
cmp
mov
dec
mov
or
xlat
mul
mov
je
inc
(bad)
push
sti
icebp
dec
sub
test
inc
cmp
xor
test
pusha
sahf
mov
fcom
retf
xlat
or
sbb
sbb
xchg
lods
loop
(bad)
leave
pop
or
aam
jge
outs
pop
pop
mov
sbb
retf
inc
dec
movs
icebp
pop
add
movs
jnp
loopne
icebp
call
xlat
jecxz
mov
addr16
leave
jnp
or
adc
mov
push
fs
pop
pswapd
enter
add
ficom
dec
out
jb
fnstsw
mov
movs
cmp
jmp
cld
lods
fdivr
icebp
mov
cmps
(bad)
sub
push
lea
js
retf
imul
nop
popf
xchg
add
into
fcom
push
xchg
jns
rcl
movs
fsin
loope
stc
daa
bound
and
cmp
adc
mov
lahf
mov
jmp
push
push
cmp
push
das
(bad)
icebp
pop
inc
pop
popa
mov
mov
stos
inc
mov
cmp
stos
data16
inc
sub
cld
lods
and
scas
push
js
push
cmp
pop
sub
sbb
fldl2t
sbb
jb
fdivp
push
mov
and
repz
dec
fldcw
jmp
adc
rcr
in
pop
(bad)
pop
jne
test
mov
sbb
sub
dec
mov
fsubr
mov
mul
repz
scas
lods
cli
repnz
cs
outs
xor
outs
ins
leave
or
sar
ret
jne
clc
mov
aas
fsubr
mov
rcr
(bad)
sub
fs
or
jae
mov
mov
jmp
mov
stos
mov
loopne
(bad)
add
jno
inc
xlat
mov
fldcw
sub
lods
jne
fwait
xchg
out
mov
cli
push
lock
popf
fs
pop
test
mov
data16
sar
sbb
push
cmps
int
jae
fs
pop
addr16
push
or
repnz
pop
push
adc
shr
out
retw
stos
lea
sub
ins
push
and
inc
dec
add
jmp
sub
loop
in
(bad)
or
in
mov
pop
sub
test
pusha
test
pop
fldcw
adc
sub
sahf
ficom
jo
pop
mov
or
repnz
mov
test
jecxz
std
jns
sub
loop
or
pop
cmps
jg
mov
or
sbb
mov
xlat
data16
cmp
jno
push
test
outs
daa
neg
das
add
push
mov
loop
add
or
fist
pcmpeqd
(bad)
jns
jmp
adc
push
jne
out
sub
xor
ins
jno
sahf
leave
push
and
mov
inc
div
fld
je
dec
xchg
mov
retf
xor
xchg
outs
cmp
shl
push
mov
nop
sub
pop
arpl
sub
jge
frstor
mov
sbb
mov
jp
mov
sbb
xor
inc
outs
in
adc
mov
popf
and
aad
push
mov
xor
dec
push
push
lods
popf
daa
gs
out
scas
xchg
popa
jge
pop
aaa
scas
jmp
or
fcom
xor
jmp
xchg
jl
enter
push
(bad)
aad
or
jmp
push
jle
pushf
dec
cmps
stos
add
retf
mov
dec
in
pop
mov
lea
dec
std
loop
fld
fwait
pop
and
leave
xlat
leave
gs
and
in
movs
and
dec
add
retf
and
cs
lahf
inc
enter
in
test
(bad)
push
jbe
cdq
sub
and
fist
stos
out
or
and
jnp
jae
dec
mov
sbb
dec
jge
(bad)
inc
dec
mov
inc
(bad)
sbb
enter
outs
and
dec
rcr
ja
or
adc
outs
(bad)
lock
ret
shl
mov
fs
inc
pop
mov
lds
fcmovnbe
out
pop
sub
ds
(bad)
jne
sub
out
inc
sbb
lahf
sub
adc
cdq
inc
test
out
fmul
xchg
jno
js
fs
jle
cmp
sbb
pop
iret
or
out
div
dec
scas
and
push
jg
into
lock
sahf
xchg
pop
pop
dec
cmps
jo
int
std
fisttp
or
outs
ret
icebp
inc
xor
jns
retf
retf
mul
mov
test
mov
push
mov
lea
les
ror
ror
lods
sub
loopne
pop
inc
stc
and
mov
cmc
mov
imul
push
or
js
or
ins
or
jb
imul
push
push
cdq
gs
sub
cmc
sbb
out
popf
cwde
xchg
movs
push
jns
stos
dec
mov
xchg
jge
lahf
gs
lods
outs
mov
xor
add
pop
(bad)
mov
imul
int
sbb
push
xchg
popf
add
cmp
pop
cmp
jo
mov
in
pop
js
mov
add
xor
retf
(bad)
pushf
mov
push
neg
(bad)
je
arpl
sbb
cli
daa
mov
pop
(bad)
loop
ret
cld
aad
addr16
cmp
or
mov
leave
push
pushf
dec
mov
popa
and
xor
push
cmp
ins
lock
fdiv
iret
in
imul
jp
repnz
icebp
scas
jnp
sub
popf
jge
dec
sub
push
xor
jmp
dec
stc
stos
and
inc
push
dec
and
mov
jp
mov
ror
mov
push
aaa
xchg
std
(bad)
mov
xchg
fcomip
in
sub
add
xabort
pop
mov
cmp
push
ret
imul
mov
call
adc
pop
pop
sub
pusha
cmp
cmp
mov
outs
xor
ds
mov
jno
shl
add
adc
outs
mov
mov
dec
mov
mov
sbb
sub
(bad)
pop
mov
cli
sub
fcmovbe
ins
sub
pop
jmp
jbe
call
and
lea
inc
xchg
aaa
push
nop
push
sub
jmp
add
mov
pop
icebp
xchg
ficom
push
push
je
or
adc
call
std
aam
xor
pop
cmp
sub
pop
in
jno
fnstcw
push
inc
xchg
leave
jnp
movs
sar
or
jmp
xchg
cmp
popa
sub
pushf
jle
mov
jnp
mov
push
mov
and
mov
push
out
popa
stos
inc
sub
pop
jns
mov
rcr
inc
inc
call
fs
nop
jb
ins
inc
mov
push
cmp
test
pop
into
cmp
jno
cwde
stos
mov
xor
cmp
leave
push
data16
xlat
ins
xor
push
loope
push
adc
pop
mov
mov
xchg
ja
outs
ror
jo
cmp
add
pop
mov
daa
dec
jbe
jp
shl
sar
retf
inc
das
dec
imul
sub
xchg
mov
ins
fnstenv
pop
jecxz
aaa
jmp
inc
mov
pop
xor
inc
loopne
cmp
jmp
mov
jbe
or
leave
mov
not
push
add
push
nop
sbb
js
test
test
cmp
into
in
mov
lahf
pop
mov
cmp
add
cli
or
ja
ins
iret
(bad)
jmp
out
sti
nop
shl
mov
lsl
cmp
repz
jne
mov
push
xor
mov
ror
xor
push
cmps
aad
lods
mov
jg
xlat
das
dec
dec
pop
mov
mul
pusha
inc
gs
pop
mov
xchg
pop
fst
push
add
fcomp
in
ins
pop
sub
pop
adc
inc
adc
cmp
outs
dec
cmp
cmps
pop
aaa
nop
aaa
mov
pop
dec
push
pop
pop
xchg
aas
idiv
adc
pop
add
jle
adc
or
xor
dec
jb
sub
push
enter
push
push
cmp
call
test
ds
mov
sbb
dec
adc
inc
mov
push
outs
cmps
sbb
cli
test
std
repnz
inc
std
jmp
rol
loopne
mov
movs
cmovs
push
cmp
sahf
xor
adc
mov
pop
push
sub
mov
icebp
loopne
mov
inc
mov
mov
pop
or
test
scas
mov
stos
retf
pop
retf
vmwrite
je
fldcw
repnz
dec
in
mov
adc
cmp
ror
frstor
in
cmps
popa
push
jl
jmp
rol
and
jnp
mov
lea
add
ins
fild
cmps
add
mov
adc
data16
push
sbb
and
inc
aad
mov
jge
(bad)
mov
mov
xchg
inc
xchg
stos
mov
jmp
jg
dec
fimul
jle
pop
mov
xchg
jbe
mov
push
sbb
pop
pop
push
test
and
push
or
fadd
dec
jle
aad
mov
fs
inc
ret
iret
jb
(bad)
loopne
sbb
mov
jno
mov
es
fisttp
popf
pop
stos
jle
add
and
js
sbb
push
or
icebp
jecxz
sbb
jbe
inc
in
outs
adc
jp
dec
jbe
jae
push
cli
or
add
bound
xchg
jmp
shl
mov
jmp
fldenv
or
cmp
mov
jnp
scas
inc
shl
jge
movs
add
aaa
test
ss
inc
push
push
(bad)
fnstenv
fadd
test
inc
fwait
loopne
movs
mov
add
nop/reserved
mov
mov
fcomp
imul
mov
in
ret
pop
adc
jno
mov
hlt
cmps
jnp
jbe
lods
lds
mov
or
cmc
mov
scas
xchg
arpl
push
adc
sub
fmul
mov
fnsave
mov
ret
mov
loopne
fisub
and
cmp
call
dec
ins
fidivr
popf
mov
aaa
xor
pop
jecxz
dec
dec
(bad)
stc
fwait
xor
imul
cmp
pop
dec
cld
pop
in
es
cmp
cmps
call
or
lods
and
jecxz
shr
xchg
jo
outs
test
mov
add
pusha
sbb
sbb
out
int
shr
push
push
cmc
pop
xchg
icebp
mov
adc
xchg
ss
sbb
jle
out
push
push
xchg
mov
cmp
mov
xchg
sub
(bad)
int3
inc
adc
aaa
push
add
adc
xchg
aaa
je
sbb
cs
jbe
xchg
add
adc
dec
mov
push
push
mov
jns
clc
cmp
add
cmp
pop
cmp
xor
or
scas
xchg
mov
adc
imul
out
stos
xchg
inc
daa
enter
cmps
or
std
(bad)
ror
jg
mov
mov
movs
lahf
cmps
mov
push
retf
pop
push
jle
fld
pop
add
aaa
cli
lock
arpl
repz
adc
sbb
clc
pop
pop
aam
sbb
or
and
inc
das
je
cmps
jmp
sahf
mov
sub
push
and
lods
and
and
aaa
fcmove
adc
je
cld
mov
shr
into
mov
push
(bad)
mov
int3
addr16
push
fcomp
movs
pop
pop
ficom
popf
jecxz
mov
sahf
iret
and
xchg
push
or
jp
and
mov
push
add
mov
jmp
push
or
adc
pushf
push
jecxz
dec
or
leave
rcr
rol
sub
mov
std
push
fnsave
cmp
adc
(bad)
fcomip
inc
ds
jmp
loopne
xchg
or
test
mov
das
jo
lds
out
aaa
xchg
xchg
xor
cli
push
clc
xchg
outs
jmp
jnp
test
dec
cmp
pop
jb
in
fdivr
(bad)
mov
pusha
push
addr16
(bad)
pop
psubw
js
or
in
popf
out
fcomi
sbb
ss
hlt
imul
cwde
cmovno
or
or
inc
and
dec
mov
dec
fwait
push
popf
mov
mov
adc
hlt
outs
ret
push
or
cli
pop
scas
push
pop
fild
mov
adc
adc
out
or
xchg
inc
xchg
stc
mov
hlt
or
rcl
pop
in
push
test
push
adc
and
(bad)
and
out
retf
and
stc
out
push
lods
aad
(bad)
jg
(bad)
call
xor
mov
jae
lahf
push
jbe
in
bound
sbb
in
sub
gs
retf
hlt
push
push
and
and
in
jne
sbb
jmp
cmps
mov
pop
inc
int
xlat
jmp
lods
aam
icebp
xor
test
push
jmp
fisubr
jnp
dec
pop
or
push
sbb
(bad)
jg
in
push
pop
jle
mov
push
mov
ins
enter
add
and
fld
fist
or
(bad)
cmps
xchg
mov
push
pop
mov
mov
ret
mov
pop
dec
icebp
imul
xchg
mov
cmp
xor
mov
and
mov
add
test
jmp
cmp
outs
fwait
arpl
daa
rcr
cli
pop
daa
dec
popa
adc
add
and
scas
fcmove
or
lods
stos
pop
dec
out
ds
cmp
push
push
aam
add
cmps
outs
jns
mov
jmp
mov
cmps
add
(bad)
js
or
push
mov
in
outs
cmc
enter
push
jp
call
bound
pop
xchg
leave
in
rcl
mov
and
(bad)
std
out
js
pop
ficom
jae
es
icebp
xchg
rcr
pop
or
cmp
(bad)
jnp
into
xchg
sub
adc
pop
inc
and
fisub
pop
ds
out
(bad)
add
sub
cs
icebp
dec
repnz
add
call
mov
aas
cmps
dec
imul
fdivr
adc
mov
xor
mov
xchg
jecxz
push
test
fsubr
call
dec
jg
adc
dec
push
fs
adc
xor
push
push
xchg
(bad)
call
sub
or
inc
in
pop
lea
add
paddusw
mov
sub
xchg
sbb
sub
mov
in
(bad)
sub
dec
nop
test
jb
sbb
inc
mov
sbb
test
adc
into
shr
hlt
adc
cmp
dec
xchg
add
jo
and
repnz
cmps
cdq
movs
nop
xor
out
loop
fsincos
or
(bad)
(bad)
adc
add
dec
xor
ins
xchg
cmc
and
jmp
inc
xor
fldcw
imul
(bad)
adc
icebp
push
ja
pop
pop
xchg
bound
fistp
jo
shl
jecxz
data16
mov
mov
imul
jmp
adc
push
mov
test
test
and
jmp
(bad)
(bad)
push
js
mov
push
cmp
dec
or
xor
aas
push
retf
lea
xlat
xchg
call
mov
pop
leave
add
xor
lock
repz
(bad)
jnp
jbe
inc
jge
jmp
push
test
or
fst
imul
cmp
in
push
fist
jmp
xchg
add
or
pop
cmp
and
aas
out
or
pop
jl
jne
pop
sti
std
inc
sahf
dec
sti
lock
dec
loope
mov
(bad)
das
jno
loop
and
add
jo
push
xchg
dec
out
xor
or
push
pop
pop
ins
sahf
aaa
js
sahf
jp
repz
mov
mov
arpl
or
or
fld
aad
(bad)
xchg
mov
aam
jl
repnz
jne
xchg
fidiv
adc
jl
fbld
fcom
clc
imul
cdq
call
push
inc
scas
fild
cmp
mov
jo
cmp
jne
mov
cmps
or
aas
ins
push
repnz
mov
daa
inc
in
retf
pusha
or
sub
pop
ja
jbe
call
add
xlat
loopne
pusha
or
jmp
dec
sbb
sbb
inc
push
fcomp
inc
xlat
mov
inc
and
test
sbb
push
sar
xchg
test
mov
test
jno
(bad)
cmp
inc
sbb
scas
xor
push
cmp
hlt
ins
nop
push
pop
mov
int
aad
mov
rol
push
pop
inc
sbb
mov
inc
fild
push
in
push
rcr
enter
jo
xchg
and
ror
sbb
fdivr
push
push
hlt
out
std
and
mov
repz
dec
mov
test
inc
lahf
(bad)
arpl
popf
pusha
test
jl
out
test
enter
jno
cmp
xchg
add
cmps
mov
scas
pop
mov
in
fld
pop
shl
(bad)
xchg
nop
inc
inc
add
ds
dec
mov
inc
lahf
lea
iret
and
ja
adc
stos
sbb
xchg
pop
mov
dec
inc
sbb
fs
lea
retf
mov
sub
adc
mov
mov
aad
mov
push
pop
xor
xor
pop
mov
loope
mov
push
nop
and
outs
xchg
mov
xor
repnz
dec
loopne
xlat
mov
mov
and
outs
imul
mov
cli
push
push
pop
dec
jae
xchg
ins
jno
pushw
pop
pop
jne
mov
add
cmp
jne
cld
pop
out
mov
retf
shl
loopne
sub
jns
jae
or
imul
add
jmp
rep
out
enter
stc
push
loopne
inc
inc
pusha
mov
and
out
loope
cmp
dec
lods
or
sbb
dec
mov
mov
jbe
neg
dec
mov
adc
mov
scas
inc
out
sbb
dec
movs
in
lods
les
rcl
or
hlt
int
or
fisttp
and
lahf
aam
sar
cmp
and
cmc
stc
(bad)
jge
pop
and
mov
adc
std
mov
dec
push
jb
cmp
mov
mov
and
push
icebp
push
in
mov
xchg
dec
loopne
mov
pop
mov
(bad)
adc
loop
call
sub
inc
cmp
clc
mov
ror
inc
sub
aam
cmp
mov
hlt
mov
in
push
add
jb
scas
cmp
lea
adc
mov
add
sbb
test
cmps
ficomp
mov
fadd
or
mov
inc
cli
and
push
push
inc
mov
popa
leave
sub
add
mul
(bad)
push
pop
xor
jne
fbstp
test
and
test
adc
aaa
rcl
test
xchg
outs
in
aad
sbb
mov
fisub
pop
mov
mov
inc
inc
push
lea
xlat
mov
xchg
pop
fldcw
rdtsc
and
jae
enter
xchg
push
stc
pop
ficom
cwde
outs
aam
mov
icebp
push
fdivr
sub
adc
add
jmp
aaa
xchg
mov
xchg
pusha
aad
jge
mov
pushf
ret
clc
sbb
icebp
daa
and
and
push
gs
cmp
push
add
adc
jecxz
push
out
fucom
call
cmp
or
mov
mov
cmp
inc
push
inc
aaa
sub
std
out
add
and
inc
jmp
xor
jmp
mov
int3
or
or
mov
sti
sub
fmulp
mov
sbb
cmc
(bad)
retf
jno
jle
jb
mov
xor
(bad)
push
rcl
dec
fwait
inc
adc
push
sub
inc
or
cmp
nop
(bad)
sub
cmp
jae
pop
addr16
cli
push
push
clc
cmp
mov
jge
dec
xchg
int
pop
mov
fcmove
out
or
cmp
xor
sar
xchg
push
mov
cmp
push
retf
xchg
fild
mov
push
xor
mov
xor
xchg
xor
stos
popf
adc
ins
push
push
pop
xor
jmp
fcmovbe
xchg
es
sub
add
sub
xor
call
enter
inc
cmp
mov
jmp
out
pusha
or
stc
dec
iret
sbb
adc
push
test
sar
and
xchg
lods
(bad)
data16
out
inc
int
inc
mov
out
out
xchg
aas
dec
cld
das
mov
retf
clc
mov
jno
cmp
pop
scas
mov
xor
pop
dec
pop
fsub
scas
jmp
xchg
xchg
mov
scas
je
xor
js
add
(bad)
mov
je
movs
adc
fistp
js
and
add
push
mov
call
hlt
xchg
enter
push
sub
and
adc
test
paddb
sbb
mov
sub
or
hlt
int
out
fsub
test
inc
std
sbb
or
sub
push
mov
repnz
pop
add
loopne
mov
jmp
sub
sbb
scas
adc
jp
mov
test
in
cmp
add
push
rcr
in
(bad)
cmp
cmp
push
sti
sbb
rol
enter
mov
data16
cli
(bad)
push
sbb
jecxz
int3
out
dec
jle
shr
mov
icebp
inc
mov
imul
and
aaa
cmp
outs
jns
push
lea
and
inc
inc
loope
push
xlat
pop
neg
cmp
mov
inc
mov
or
xor
xor
dec
leave
jno
ds
pop
cmp
xchg
mov
sti
jbe
jno
pop
jmp
mov
rcl
inc
push
xchg
push
not
repz
call
mov
rcr
jno
xchg
(bad)
and
push
push
dec
pop
xchg
(bad)
scas
in
dec
fwait
or
out
pop
mov
lahf
adc
(bad)
mov
popa
fdivr
jb
aam
mov
xor
sbb
out
pop
mov
div
(bad)
mov
daa
sub
sbb
jmp
retf
mov
cli
popa
vpavgw
mov
cmps
add
aaa
dec
xchg
jle
add
mov
data16
adc
pop
aas
mov
(bad)
xchg
jl
inc
add
jns
lods
and
fmul
or
pop
jecxz
and
add
jle
pop
hlt
fucomi
ds
bound
push
cli
xchg
shl
pop
sbb
stos
inc
jnp
mov
das
test
lea
mov
movs
or
add
pop
(bad)
pop
mov
test
add
ins
push
mov
inc
test
ins
or
rol
adc
mov
(bad)
fisubr
shr
pop
fidiv
fdiv
cmp
loop
int3
lock
in
into
xchg
cmc
sbb
dec
inc
or
movs
sbb
dec
addr16
dec
mov
fild
cmp
xor
add
(bad)
arpl
nop
aaa
adc
jge
mov
sbb
add
out
sub
retf
imul
jmp
inc
add
push
and
repz
in
test
bound
clc
data16
fistp
in
int
and
jnp
ins
cs
ret
pop
fistp
ja
mov
mov
xor
jo
xchg
push
out
das
cmp
xor
xor
clc
imul
pop
ins
movs
rcl
adc
xor
mov
sub
call
ss
fnstenv
mov
movs
mov
scas
out
adc
nop
jmp
xor
fsubp
(bad)
ret
sub
push
out
js
mov
(bad)
stos
pusha
mov
rcl
lods
mov
push
(bad)
and
out
retf
sub
fdivr
mov
xchg
jbe
push
stos
imul
icebp
(bad)
cmp
mov
in
dec
sbb
ret
mov
jg
mov
sahf
mov
xchg
xchg
mov
in
xchg
and
xor
adc
in
mov
add
fdivr
sbb
cmps
dec
push
dec
jp
jmp
jl
mov
je
std
adc
(bad)
push
pop
es
mov
daa
pop
jle
out
jg
cmp
lea
(bad)
test
add
xchg
add
push
(bad)
fist
into
jp
out
dec
scas
nop
cmps
dec
inc
fiadd
popf
add
in
and
mov
out
mov
into
inc
xchg
lds
dec
out
inc
push
push
ins
add
retf
clc
int3
(bad)
call
jge
in
adc
cdq
(bad)
xchg
(bad)
sbb
daa
fs
jnp
mov
daa
scas
push
or
clc
jle
cmp
fs
add
xlat
sbb
xchg
sub
lock
fidivr
dec
pop
(bad)
adc
mov
cmp
dec
mov
sbb
sbb
rcl
add
mov
aam
loope
cmp
mov
pop
mov
cmp
test
lock
data16
jns
jnp
hlt
into
outs
shr
mov
icebp
and
pop
mov
arpl
cmp
loopne
sahf
sbb
jecxz
(bad)
add
in
(bad)
pop
fiadd
ins
xchg
inc
push
inc
and
sbb
hlt
inc
loope
sub
mov
or
mov
or
mov
xchg
shr
xchg
jb
mov
adc
cmps
add
std
stos
mov
jne
jbe
sti
aaa
mov
add
or
cmp
ror
in
mov
cmp
(bad)
pop
sbb
mov
push
mov
sub
mov
adc
pop
paddusw
cmps
pop
std
in
jmp
loopne
fdivr
or
jne
test
js
xchg
add
mov
inc
rcl
dec
fwait
dec
jge
rol
sbb
mov
call
iret
xor
call
(bad)
leave
scas
ins
push
push
outs
rcl
sub
mov
call
sub
push
sti
push
mov
push
rcr
or
and
xor
and
push
out
xchg
xchg
or
jmp
fadd
rol
mov
and
jbe
jg
pop
push
cmp
mov
es
int
ins
jns
outs
sbb
sbb
ret
ins
mov
push
(bad)
and
mov
fidiv
fnsave
call
clc
pushf
add
mov
cmps
test
cmc
aad
push
dec
ficomp
das
das
mov
push
ins
pop
xlat
(bad)
fisttp
dec
psubusb
aam
adc
inc
jnp
lahf
xchg
in
movs
xor
push
mov
iret
xchg
hlt
std
mov
mov
mov
xchg
xchg
cmp
sbb
pop
jb
mov
ins
in
adc
pop
ret
xor
ss
aaa
xor
pop
popf
cmp
mov
test
push
xor
in
adc
scas
sahf
fidiv
cmps
sbb
popf
jo
into
aam
rcl
dec
cmp
in
mov
retf
inc
mov
xchg
jl
push
sti
bound
cld
xchg
jecxz
je
(bad)
out
dec
clc
jae
adc
sub
rcl
add
aaa
ins
repz
jmp
sbb
scas
movs
and
jae
stc
inc
jne
pop
mov
mov
cmp
inc
pop
mov
xchg
push
cmp
mov
sub
add
jge
js
pop
mov
or
pop
rcl
pop
mov
mov
cmp
data16
pop
mov
pushw
xchg
cs
pushf
dec
hlt
xchg
jb
mov
aaa
cs
aad
jae
cld
outs
je
scas
ss
push
cdq
div
clc
lahf
lea
inc
fwait
add
inc
sub
inc
or
or
jns
or
ds
xchg
mov
movs
push
add
ss
minps
(bad)
sar
mov
sub
shl
mov
mov
adc
and
in
sbb
jo
les
test
out
mov
lahf
mov
mov
clc
jg
lock
fistp
xor
(bad)
outs
dec
push
out
in
rcr
loopne
mov
and
or
xchg
cdq
or
sub
pop
test
adc
popf
add
sar
pop
(bad)
mov
inc
inc
sahf
inc
out
push
and
or
(bad)
aam
cli
mov
push
mov
shr
push
xor
and
inc
out
mov
xor
sub
bnd
jmp
in
sub
sbb
jns
or
xchg
push
pop
cmps
sbb
ja
xor
loopne
ret
mov
sub
ins
fwait
sub
sbb
ficomp
lock
retf
dec
cld
pop
popa
xchg
jnp
pushf
dec
fwait
or
retf
push
cmp
cmps
(bad)
mov
pusha
popa
mov
add
jne
mov
int
jl
repnz
popa
iret
xchg
xchg
jns
(bad)
test
jns
push
outs
(bad)
mov
add
loopne
(bad)
fisttp
movs
neg
retf
cmp
sbb
and
sbb
jnp
aas
and
pop
ins
repz
popf
test
sub
jecxz
push
scas
fcomip
push
xchg
cmp
cmp
pop
and
xor
daa
frstor
or
xchg
mov
loope
push
or
inc
sbb
adc
pcmpgtw
and
sub
xor
jb
push
jmp
ins
and
cmp
xor
and
mov
jmp
dec
in
inc
data16
push
sub
adc
fcmovu
cmp
cli
sbb
les
or
push
lods
sub
imul
sub
adc
push
gs
out
stos
pop
mov
and
movs
pushf
sar
add
add
imul
push
cmp
dec
mov
push
stc
fst
mov
mov
dec
test
and
pop
test
cmp
pop
inc
mov
sub
push
add
mov
xchg
dec
dec
xor
and
stos
add
mov
test
and
mov
fcomi
call
stos
dec
add
sub
jns
movs
fdiv
(bad)
xchg
mov
nop
xchg
push
mov
push
push
(bad)
jmp
and
fbstp
or
retf
sub
inc
es
jge
icebp
hlt
cs
test
mov
ja
push
jno
mov
pop
mov
ds
retf
aas
cld
popf
cmp
or
inc
jle
mov
add
mov
cmp
lods
rcl
icebp
add
mov
xor
retf
mov
(bad)
fist
js
pop
(bad)
mov
fild
pusha
lock
test
shr
inc
cmp
xchg
repz
lods
loop
cvtps2pd
cwde
pop
stc
(bad)
inc
das
sbb
movs
rcl
push
xor
push
sbb
inc
sbb
jecxz
retf
and
pushf
xchg
dec
call
push
popa
daa
and
add
cwde
mov
mov
jmp
push
popa
xchg
or
xor
push
shr
push
mov
loope
pop
lahf
data16
inc
fwait
push
adc
xchg
mov
adc
adc
call
sbb
xchg
adc
jmp
dec
jg
mov
add
pop
out
add
mov
adc
test
addr16
in
inc
jne
adc
push
add
adc
or
sub
xchg
icebp
inc
lea
(bad)
shl
cli
cmps
sub
inc
sbb
das
in
and
call
in
test
clc
outs
cwde
call
xchg
jle
call
(bad)
out
dec
sbb
xchg
jmp
jne
(bad)
and
and
popf
test
cmp
jecxz
bnd
push
arpl
fisub
call
xor
jg
adc
push
cmps
xchg
dec
sahf
add
adc
(bad)
out
xor
jmp
cmp
inc
adc
ins
xor
jnp
sar
or
sub
jp
and
loopne
fnstsw
xchg
jb
mov
ins
sub
repnz
adc
push
loope
adc
or
xchg
into
mov
sbb
jp
inc
xchg
mov
xor
sti
xchg
test
push
mov
pop
jnp
cld
lods
sbb
mov
lods
push
ret
scas
and
rol
fisttp
push
mov
out
pop
pop
jno
cli
mov
sbb
addr16
gs
outs
ja
sbb
out
(bad)
les
out
fwait
xor
(bad)
push
into
enter
xor
movs
or
push
imul
iret
mov
sbb
lds
pop
shld
aas
cmp
inc
add
adc
xor
out
dec
and
(bad)
retf
cmp
in
je
test
pop
or
call
aaa
jg
(bad)
push
jle
imul
lock
pop
fld
or
adc
push
pop
and
mul
fild
pop
mov
loope
inc
fsub
add
pop
push
push
and
dec
mov
cdq
int3
mov
repz
fst
sahf
jp
push
push
cmp
inc
jns
call
fcom
sahf
loop
inc
test
push
cmp
es
push
pop
rcl
adc
fistp
(bad)
sub
(bad)
xor
xchg
lahf
jnp
cmp
jno
or
call
cmp
ret
xchg
loop
xlat
push
xchg
jmp
test
and
mov
cmovne
xor
pop
adc
pop
js
dec
pop
push
mov
js
dec
push
jnp
xchg
pop
das
ja
lahf
mov
loope
add
add
xchg
sbb
pop
xor
xor
xchg
xchg
je
or
gs
out
xor
rcl
jp
inc
pop
mov
adc
hlt
stos
lods
int3
push
add
lock
sbb
aad
(bad)
std
shr
jg
jb
or
iret
push
xchg
lea
dec
in
fiadd
daa
cli
cwde
loopne
or
adc
test
mov
pop
xchg
add
mov
test
sub
dec
je
mov
les
jmp
in
clc
in
stc
test
daa
shl
cmp
and
add
mov
xor
push
inc
mov
adc
inc
lea
push
scas
sar
sub
loope
jns
out
dec
ret
cmps
scas
scas
mov
push
xchg
jp
fdiv
ins
mov
xchg
adc
(bad)
and
push
rol
into
in
cli
sub
in
inc
cli
jecxz
lea
out
imul
jmp
int
fcomp
loopne
pop
popa
cmp
mov
and
fs
dec
dec
enter
and
neg
cwde
cmp
inc
sub
neg
retf
popa
sbb
das
adc
sub
fdivr
cwde
push
inc
iret
pop
out
push
sub
adc
xor
dec
sbb
jmp
call
repz
mov
xor
pushf
fdivr
rcl
push
dec
icebp
mov
dec
sub
scas
inc
sub
cmp
add
repz
mov
movs
ds
cmp
fidivr
ror
sbb
leave
pushf
icebp
and
mov
loope
and
xor
lds
mov
sbb
adc
sub
hlt
xchg
mov
test
cwde
rol
lahf
dec
lahf
cmp
mov
sbb
mov
dec
in
jbe
aam
or
(bad)
mov
xor
or
xlat
out
sub
sub
mov
and
sbb
pop
outs
dec
cmp
outs
sti
sar
pushf
inc
(bad)
in
fld
jns
jns
out
data16
inc
sti
out
jo
mov
cwde
clc
mov
cmps
cmps
popa
cmp
push
push
add
push
pusha
inc
setno
cmp
nop
jmp
mov
sub
ss
pop
jg
push
xchg
inc
inc
adc
js
outs
test
pop
pop
mul
test
sti
enter
inc
icebp
jmp
loopne
lea
and
xor
push
cmp
xor
fnstcw
mov
cli
pushf
mov
sub
les
repz
data16
popa
clc
or
pusha
sub
jbe
jne
stc
and
push
cld
gs
jb
push
js
push
popf
inc
mov
retf
int
dec
aaa
xchg
inc
sbb
outs
sub
js
xor
pmullw
(bad)
je
in
(bad)
mov
sbb
adc
imul
retf
mov
dec
adc
dec
popa
add
dec
in
push
xor
rcl
xchg
pop
mov
xchg
xor
out
push
mov
pop
call
loop
mov
sub
or
add
rcl
aaa
(bad)
dec
ins
mov
cmp
and
pop
je
dec
cmps
gs
mov
retf
xchg
mov
mov
sub
stos
inc
ret
icebp
mov
ret
sub
div
cmp
jnp
push
data16
stos
push
or
xor
pop
cmp
dec
inc
std
inc
sbb
xchg
xchg
lahf
inc
and
adc
iret
lahf
mov
adc
sub
out
mov
jp
(bad)
adc
test
jg
inc
stos
fwait
in
jg
in
xlat
lods
sub
add
push
jl
mov
jecxz
push
sbb
cmp
xchg
inc
call
sub
sbb
les
dec
pop
loop
imul
dec
ins
mov
jo
sub
pop
ja
lods
cmp
xchg
out
outs
dec
push
xor
push
shl
repz
(bad)
clc
xor
mov
out
inc
ins
mov
retf
sub
imul
aam
rol
in
push
sbb
shl
push
aad
jbe
xor
mov
bound
jmp
jbe
sbb
out
test
cmp
(bad)
ja
mov
imul
and
pop
mov
inc
pop
pop
inc
dec
sub
pop
mov
sbb
inc
mov
push
pop
push
jnp
bound
mov
sub
and
test
aam
hlt
lock
mov
cmps
pop
dec
add
imul
mov
rol
mov
cwde
xchg
adc
push
pop
mov
lods
call
sub
(bad)
scas
push
mov
jl
adc
mov
cmp
es
jae
out
sub
jnp
cmp
dec
xchg
hlt
xor
adc
mov
fbld
adc
mov
ret
in
or
sub
dec
cmp
bound
fnsetpm(287
js
int
jmp
sbb
fwait
aaa
test
into
lahf
sub
push
fwait
sub
adc
sub
(bad)
mov
xchg
mov
lea
lds
xor
add
or
jbe
adc
mov
dec
popf
shr
ja
ficom
out
and
mov
pop
mov
add
push
loop
jb
dec
js
mov
dec
pop
iret
sub
dec
and
and
add
xor
in
shl
mov
fdivr
add
jno
std
pop
push
stc
movs
cdq
jecxz
jae
ror
(bad)
xchg
das
test
xchg
(bad)
jno
into
ret
xor
mov
fcomp
cmps
pop
mov
jle
mov
add
not
(bad)
jae
aad
fdivr
pop
cmc
pushf
push
cmp
add
push
std
dec
pop
inc
ins
lds
jle
mov
pop
xlat
pop
add
xchg
jge
and
jns
jne
mov
jle
adc
sbb
cmp
icebp
sbb
xchg
push
and
pop
popf
out
(bad)
icebp
addr16
je
and
loop
pop
xchg
and
adc
mov
idiv
mov
loop
xchg
sbb
nop
cli
int
or
push
or
push
cmc
enter
popa
test
sub
loop
gs
or
add
sbb
xchg
(bad)
adc
pop
or
or
mov
ret
sbb
push
ins
jae
in
push
mov
movs
adc
jns
fwait
add
icebp
aaa
dec
mov
pop
pop
sub
pop
mov
lea
call
aam
mov
add
pmaxub
aad
inc
mov
stos
mov
call
mov
jne
push
jnp
popf
push
aas
out
stos
mov
cmp
pop
push
pop
fiadd
int
xor
xor
(bad)
mov
addr16
mov
mov
out
hlt
push
cmc
stc
or
mov
mov
mov
iret
lods
icebp
je
push
sahf
fiadd
ffree
jge
sub
aas
mov
call
test
mov
jmp
lahf
loope
in
cmp
sbb
mov
sbb
lea
scas
(bad)
fistp
mov
inc
adc
mov
repz
stos
jne
retf
inc
xor
or
cld
into
lsl
fs
popa
mov
inc
xor
mov
cmps
jmp
mov
ins
mov
mov
adc
push
shr
fwait
movs
iret
shr
and
jp
mov
pop
movs
addr16
sub
dec
lods
stos
xor
iret
pop
and
sbb
repnz
sbb
xchg
test
push
mov
push
push
(bad)
or
cmps
fwait
outs
add
call
sub
add
pushf
cmps
sbb
cmps
cdq
loope
daa
xor
bnd
es
push
adc
popa
jmp
jmp
(bad)
adc
call
cdq
stos
sbb
jp
inc
adc
aam
push
inc
clc
mov
push
xchg
pop
out
inc
gs
pop
sub
cmps
push
mov
icebp
dec
scas
test
inc
jmp
or
sbb
cmp
aaa
mov
jb
push
mov
lds
sbb
movs
and
cmc
inc
sbb
arpl
jne
sbb
sbb
sub
or
inc
mov
shl
sbb
sahf
mov
out
repz
push
iret
xchg
in
xor
scas
loop
(bad)
jb
dec
xchg
inc
(bad)
loope
test
add
jmp
fisttp
lahf
jp
fs
and
jecxz
(bad)
dec
or
and
jg
pop
aaa
sub
jmp
jns
sub
adc
cdq
sub
outs
add
or
push
push
sbb
cmp
and
iret
push
mov
out
dec
lock
sbb
mov
(bad)
outs
adc
pop
pop
xchg
popf
lods
test
js
jmp
(bad)
jne
rcr
mov
outs
push
hlt
rcr
sti
enter
push
jb
gs
icebp
repnz
mov
xchg
sahf
(bad)
movs
mov
jno
repnz
dec
adc
shr
and
inc
adc
xor
(bad)
mov
ret
imul
inc
or
dec
jnp
xchg
jg
fisub
idiv
adc
push
ss
mov
or
pop
mov
mov
mov
or
or
es
lds
hlt
push
xchg
sbb
add
xchg
cmp
jl
mov
mov
lods
(bad)
cld
mov
jnp
add
arpl
loop
sub
out
test
int
cmp
or
adc
repnz
adc
sub
xchg
cdq
mov
cmp
mov
retf
sbb
pop
fild
fnsave
xor
std
dec
gs
out
xchg
imul
out
fadd
call
mov
mov
movs
push
push
test
or
dec
mov
cmp
inc
mov
mov
jo
jns
mov
add
xchg
ss
enter
loop
outs
arpl
inc
inc
test
sbb
jge
popa
out
inc
ret
add
sbb
stc
rcl
imul
dec
aas
bound
in
cli
aaa
xchg
shr
inc
jle
push
mov
cmp
leave
mov
leave
mov
push
movs
fstp
fisttp
test
cmp
loope
mov
mov
popa
inc
ss
mov
std
out
test
add
in
enter
stos
mov
mov
jl
pop
iret
or
mov
mov
push
es
jo
lahf
adc
stos
gs
call
mov
fisub
loopne
fistp
call
inc
and
or
lock
add
adc
push
imul
ret
mov
dec
dec
mul
sub
mov
and
xchg
jmp
dec
lods
popa
cmp
push
add
in
leave
(bad)
(bad)
arpl
pop
mov
cmp
lods
scas
lock
data16
lea
mov
mov
(bad)
out
loopne
cli
mov
xor
loope
jnp
push
mov
dec
aam
mov
sbb
ins
stos
push
jae
aad
scas
jnp
sub
jno
div
xchg
dec
stc
mov
inc
jnp
or
lock
es
repnz
jp
(bad)
add
test
push
pop
test
mov
xor
clc
mov
frstor
bnd
cli
mov
ss
pop
adc
cdq
dec
or
lods
inc
or
mov
pop
inc
in
shl
mov
shl
push
sub
inc
adc
ins
into
into
int
cmp
ret
inc
jecxz
daa
cdq
push
xor
dec
mov
pop
outs
cmp
into
sbb
daa
cs
dec
jl
sbb
inc
push
dec
imul
ret
xchg
or
in
pop
mov
push
retf
sbb
xor
adc
jge
sbb
dec
movs
xlat
cmps
xchg
sbb
hlt
xor
mov
imul
xchg
cmp
out
imul
ror
sbb
mov
call
sbb
dec
in
xor
mov
int3
cmp
es
mov
popa
test
push
nop
xchg
in
xor
jle
sahf
shl
bound
push
sub
bnd
sub
add
mov
sub
nop
hlt
das
ret
repz
sub
push
dec
out
mov
adc
es
mov
out
push
(bad)
je
xchg
sub
mov
sahf
adc
scas
mov
jno
sub
in
cmp
jmp
xor
rcl
sbb
shr
call
sub
clc
push
aas
and
fucomip
and
dec
rcl
xor
rol
out
mov
loop
push
stc
int3
mov
in
fidiv
imul
ds
(bad)
adc
(bad)
shl
clc
int3
lahf
loop
push
stos
arpl
mov
or
jp
inc
imul
retf
in
pusha
xchg
mov
xchg
fmul
dec
mov
hlt
rol
xchg
xor
xor
(bad)
pop
jns
mov
add
mov
cmp
in
retf
mov
xor
cmp
inc
popf
enter
jmp
lahf
mov
mov
dec
mov
sbb
jbe
sub
es
or
mov
jnp
icebp
cmps
push
mov
ror
mov
jb
jp
jno
push
ret
test
cli
push
pop
and
inc
and
xor
test
sub
int
ins
loop
imul
mov
fs
cmps
mov
ja
fcomp
and
pusha
sbb
add
sbb
or
addr16
dec
mov
push
pop
fldcw
fsub
mov
jmp
add
call
or
test
xlat
xor
mov
(bad)
stc
loop
jno
and
xor
out
pop
sbb
adc
sub
xor
cmp
mov
mov
add
div
and
imul
int3
pop
scas
mul
sbb
call
and
dec
out
add
inc
sbb
in
es
ja
add
mov
ins
ds
dec
je
scas
inc
lods
rol
mov
out
test
cli
les
dec
std
mov
jo
stc
mov
aaa
dec
mov
test
clc
outs
inc
(bad)
ins
push
and
inc
mov
dec
les
stos
cmps
out
cmp
cdq
xchg
add
sub
jmp
sub
and
push
mov
aam
pop
sbb
test
jle
adc
movs
mov
cmps
mov
mov
and
or
pop
xor
std
nop
mov
sub
pop
ja
ret
xor
mov
nop
test
mov
es
add
sub
out
jp
push
fcmovne
neg
pop
mov
xchg
inc
int
dec
push
sahf
cmp
dec
mov
les
dec
cmps
ins
push
and
ins
pushw
inc
in
es
sbb
inc
and
mov
and
test
adc
(bad)
aam
xor
jle
adc
cmp
fnstcw
loop
add
or
inc
inc
inc
xchg
jae
stc
dec
jmp
cld
call
jmp
adc
pop
jbe
mov
bound
fcomp
jg
sbb
rcl
jnp
int
in
push
or
sub
std
xor
or
popa
push
add
xor
add
inc
adc
and
popa
cdq
push
add
jmp
pop
sub
loop
inc
dec
pop
out
int3
enter
jg
add
loop
scas
push
mov
and
mov
jns
push
dec
jl
adc
sub
xchg
or
xlat
mov
pop
mov
test
jmp
cmp
inc
pop
lar
sbb
jne
mov
mov
jg
cmp
dec
pop
loope
mov
mov
ret
je
cwde
(bad)
dec
iret
icebp
cmp
dec
mov
or
mov
sub
add
pushf
xchg
dec
xor
imul
push
add
sbb
pusha
sub
and
push
mov
ret
adc
dec
imul
inc
cmp
cdq
out
and
xchg
int3
and
dec
test
stos
mov
adc
loope
xchg
xchg
adc
inc
lods
hlt
shl
dec
xchg
cmp
movs
sbb
adc
lods
xchg
int
cs
mov
push
in
imul
inc
mov
jne
push
iret
push
pop
arpl
int
retf
int3
retf
push
fwait
inc
xor
xchg
sub
mov
fiadd
ja
inc
jp
add
fdivr
icebp
cs
xor
(bad)
imul
cmp
push
adc
lods
mov
push
call
aam
repz
sbb
leave
sahf
sbb
xchg
mov
xor
shl
adc
cmps
sti
call
shl
dec
xchg
in
fwait
add
push
sbb
(bad)
scas
fsubrp
cmp
mov
js
iret
mov
or
test
and
data16
jmp
call
fild
in
pop
mov
push
jle
leave
ins
sbb
sub
adc
dec
test
popf
popf
rcl
das
cmps
inc
popa
pop
(bad)
nop
pop
cmp
sbb
fistp
sbb
sysenter
ret
push
inc
out
fmul
(bad)
xchg
arpl
xchg
sub
adc
leave
inc
rol
fild
push
adc
retf
add
and
mov
or
test
cmps
jb
xor
xchg
mov
mov
ins
test
sub
inc
sub
iret
les
in
repz
pop
or
mov
ret
mov
push
sub
pop
xor
xchg
inc
rcr
fxch
call
jno
jmp
neg
mov
int
imul
inc
mov
shr
xchg
ret
push
cdq
out
adc
pushf
and
call
jmp
in
push
out
mov
mov
fimul
push
mov
xchg
(bad)
push
test
data16
cld
sub
dec
les
dec
cli
call
cmp
dec
add
stc
repnz
ret
cs
mov
add
or
xchg
add
xor
lock
jp
push
adc
push
xchg
rol
fsubr
out
cdq
repnz
sbb
out
fdiv
jns
push
lock
into
shr
mov
sub
aaa
das
dec
outs
test
cmp
hlt
add
dec
adc
mov
ja
popa
stc
out
sbb
popf
aad
int3
add
mov
ret
and
xor
jbe
fimul
pop
call
(bad)
push
xor
mov
pop
repz
pop
mul
dec
sub
or
scas
or
jp
lock
xchg
jnp
inc
enter
das
jbe
lods
pop
outs
cld
jg
test
sub
add
mov
jge
mov
xchg
xchg
cmp
cmc
sbb
in
push
push
iret
rol
imul
pmaddwd
cwde
fdivr
push
pop
sbb
movs
xchg
xor
pop
push
mov
shl
and
pop
scas
push
sbb
inc
retf
and
lods
ins
xchg
mov
mov
xor
xchg
(bad)
repz
std
jmp
or
in
dec
pop
hlt
mul
jo
sub
add
adc
or
mov
les
stos
out
pop
pushf
cmp
inc
retf
mov
out
xor
xchg
mov
retf
stc
stos
xor
jae
pop
cmp
movs
and
call
push
mov
scas
inc
stos
xor
(bad)
push
das
cmps
pop
sti
aam
gs
add
push
popf
or
and
dec
or
xchg
mov
sub
pop
add
adc
call
daa
xchg
in
xor
fstp
mov
(bad)
loop
xchg
sbb
ins
lahf
push
in
mov
cmps
inc
stos
jo
mov
xchg
mov
aas
xchg
aam
push
jmp
jo
sub
fwait
sar
cld
sub
pop
pop
in
int
add
or
pop
test
ds
fcmovbe
sbb
cwde
hlt
in
rcr
jne
mov
and
cli
adc
mov
jo
lods
loopne
xchg
loop
sub
fcmovbe
scas
sub
das
mul
cld
repnz
aaa
push
cld
mov
sub
fwait
retf
mov
cmc
out
mov
cdq
cs
into
pop
cmps
mov
sbb
(bad)
aad
(bad)
adc
xor
fdiv
push
stc
xchg
cmp
movs
push
push
arpl
jns
arpl
repz
xchg
add
mov
sub
outs
sbb
test
dec
adc
ja
adc
add
aad
outs
fidiv
and
sbb
jmp
inc
mov
lods
mov
call
push
je
push
fisttp
sub
cmp
sahf
add
mov
retf
pop
pop
adc
mov
aas
shr
mov
jbe
icebp
cmp
in
test
mov
dec
pop
xchg
dec
and
cmp
call
into
scas
(bad)
cmp
jns
pop
sbb
sub
pushf
and
std
fisttp
sbb
imul
inc
fcom
jmp
enter
and
rcr
pop
jl
mov
push
mov
aas
mov
test
and
jmp
into
imul
xchg
pushf
push
jnp
mov
push
lods
cli
dec
icebp
xor
cli
mov
icebp
out
or
jmp
dec
cmp
jp
add
pop
jbe
jmp
ss
nop
mov
sbb
pop
leave
sub
sub
popa
scas
nop
mov
jmp
cmps
inc
sbb
cdq
sub
retf
popf
push
jb
cmps
mov
cmp
sub
loope
leave
loop
sbb
(bad)
dec
add
ins
xor
pop
xor
mov
sahf
fist
jb
jmp
or
test
pop
sub
mov
ins
ficomp
dec
lds
sub
sahf
scas
xchg
leave
lock
leave
test
pop
and
lods
inc
xchg
out
imul
pinsrw
mov
dec
push
sub
push
bound
arpl
or
loope
test
push
imul
mov
mov
shl
test
sbb
xchg
out
sub
jbe
sbb
mov
adc
sbb
aaa
aaa
xchg
ins
adc
or
pop
jecxz
sbb
in
(bad)
imul
cmp
mov
imul
imul
dec
rcr
xchg
leave
bound
fild
push
and
mov
mov
ins
push
sub
imul
mov
and
cmp
enter
mov
loope
adc
add
fsub
(bad)
mov
rcl
dec
push
xor
inc
cmp
cmps
cmp
les
or
fst
push
leave
mov
sbb
and
jno
out
mov
out
ror
sbb
je
repnz
xor
mov
mov
cli
xchg
sbb
loopne
sub
cmc
int3
jl
outs
xor
mov
adc
sbb
rcr
inc
pop
sar
push
stc
data16
adc
outs
in
mov
cmp
fist
mov
out
cmp
mov
ins
jbe
in
inc
out
pop
imul
mov
in
cs
into
ret
adc
pop
inc
and
pop
int3
in
in
ret
push
mov
mov
add
mov
sar
mov
or
mov
mov
mov
(bad)
inc
cdq
adc
push
cmc
sahf
add
inc
inc
in
movs
add
adc
cmc
pop
or
xchg
nop
or
daa
daa
adc
jno
scas
loopne
dec
(bad)
jmp
outs
fisttp
aam
sbb
imul
bound
push
jae
hlt
sbb
sub
call
not
lods
repz
or
or
mov
cld
add
push
or
xchg
hlt
push
in
pop
push
outs
xor
mov
cmps
cmp
fldenv
fwait
ret
pop
push
mov
dec
and
push
push
pop
lds
or
and
push
aaa
gs
sub
mov
(bad)
push
mov
cmp
pop
inc
es
push
adc
jecxz
cmp
mov
dec
jecxz
scas
lods
rol
retf
xor
and
mov
add
mov
hlt
aaa
jecxz
add
stos
call
lods
add
cmp
xchg
sbb
mov
(bad)
bound
push
push
push
ins
sbb
lea
outs
in
rcl
lock
in
sbb
nop
lock
jno
movs
aam
push
dec
and
jle
add
jle
outs
mov
and
mov
cmp
push
ins
jbe
es
stc
aam
out
and
xchg
mov
ss
sub
jns
outs
ja
in
adc
jb
fstp
leave
popf
mov
or
popf
mov
push
inc
or
jb
(bad)
pushf
call
mov
pop
cmc
mov
(bad)
daa
lods
mov
icebp
push
add
push
add
jp
pusha
inc
pop
cmp
adc
sub
aam
out
(bad)
pop
inc
adc
call
push
out
and
imul
sbb
add
aas
inc
cmp
mov
xchg
mov
pusha
and
fbstp
adc
ins
(bad)
push
rol
and
loope
pusha
cmc
adc
retf
mov
cmp
ds
mov
enter
mov
sub
frstor
scas
inc
mov
mov
pop
std
or
in
xchg
add
xchg
cdq
int
gs
mov
mov
(bad)
and
pushf
bound
xchg
mov
ds
lds
pop
dec
pop
or
jae
jae
jne
and
and
cmp
pop
mov
retf
dec
jle
xchg
cdq
cmp
sub
mov
mov
sbb
push
addr16
jo
sbb
mov
out
push
out
and
in
mov
outs
xchg
xlat
popw
add
and
pop
cmc
xor
cli
pop
into
fild
out
test
cmc
xlat
fadd
out
xchg
loop
ins
movs
outs
out
cli
xor
test
mov
xchg
inc
xchg
dec
popa
inc
(bad)
lods
aam
xor
mov
push
push
jno
shl
sub
and
inc
outs
jne
pop
sti
pop
ds
cmp
addr16
(bad)
pop
jg
cld
mov
pop
adc
add
add
sub
and
mov
sub
test
test
ja
lock
repnz
stc
mov
cmps
mov
loopne
mov
ds
in
inc
cwde
adc
loope
lods
stc
and
xchg
mov
popf
inc
iret
aam
xchg
mov
mov
cmp
mov
cmp
adc
push
imul
and
daa
retf
fsub
dec
mov
into
(bad)
sbb
lock
mov
fldcw
push
pop
fninit
scas
es
scas
inc
js
cmp
mov
fcmovu
pop
js
lahf
fsubr
fwait
push
cdq
adc
dec
sub
or
jno
int3
jnp
cli
mov
dec
pop
adc
push
es
idiv
retf
ret
(bad)
sbb
movs
pop
fistp
mov
ftst
xchg
(bad)
jns
imul
fs
xor
xchg
adc
jmp
cmp
mov
pop
pushf
push
loopne
fisttp
pop
add
inc
add
xchg
cs
test
pop
inc
out
cmp
cld
adc
sbb
push
cmp
mov
xor
ret
push
je
lods
push
(bad)
ss
sub
mov
je
(bad)
shr
xor
enter
mov
lods
xor
fbld
cmp
sbb
div
mov
inc
and
cmp
jo
push
cmp
mov
test
push
jns
enter
das
sub
and
jmp
mov
cmp
ret
pusha
jl
push
std
jnp
and
add
dec
push
int
mov
push
add
arpl
and
movs
jno
and
inc
sub
mov
jnp
xchg
retf
shl
loope
add
cmp
or
pushf
xor
or
cmp
in
add
pusha
not
sbb
leave
lods
xor
jl
mov
ins
fst
and
loopne
stc
test
add
jmp
and
retf
and
aas
xor
dec
in
lods
cmc
pop
jle
jle
inc
and
jns
out
gs
mov
test
imul
pop
(bad)
in
inc
push
pop
or
inc
sub
pop
jge
std
mov
dec
add
into
xor
push
in
cmps
xchg
mov
cmp
and
outs
imul
pop
popf
push
sub
loopne
in
retf
lods
lds
cmp
cmp
inc
xlat
push
mov
dec
or
mov
mov
sar
(bad)
pusha
inc
loopne
inc
adc
and
sub
imul
je
sbb
(bad)
add
idiv
ins
in
xchg
fs
nop
call
pop
pop
in
xchg
or
jmp
add
fisubr
inc
xor
jne
imul
jg
test
fs
dec
cmp
sbb
pop
or
fisttp
and
int
mov
ins
ss
call
mov
jno
sub
out
adc
xchg
mov
pop
or
imul
nop
add
or
or
xchg
sar
and
rol
ror
in
push
mul
xchg
rcl
gs
enter
dec
inc
ss
xchg
add
cmp
enter
addr16
in
adc
adc
icebp
mov
sub
jle
aam
or
or
xor
or
hlt
cmp
lock
(bad)
nop
pusha
nop
dec
jecxz
jp
loop
test
pop
lahf
and
loopne
push
outs
data16
pusha
repnz
into
pushf
push
lods
mov
pop
ficomp
pop
xor
push
call
mov
dec
push
sbb
mov
pop
arpl
outs
in
inc
loopne
scas
pop
scas
shl
fidivr
repnz
stos
out
and
(bad)
cld
jle
int
pusha
arpl
stos
pusha
loopne
in
clc
and
xor
icebp
dec
mov
add
stc
jb
rol
out
sub
sbb
call
pop
cmc
push
inc
sahf
cmps
sub
jno
cmp
pop
addr16
outs
out
fs
jb
adc
jo
add
cld
lahf
scas
test
fwait
mov
sbb
cmp
jp
arpl
outs
repnz
fstp
push
sbb
in
mov
sti
mov
xor
add
cmc
mov
xchg
sbb
xor
addr16
sub
dec
in
xchg
jmp
imul
ins
int3
lods
inc
pushf
mov
(bad)
fiadd
jne
(bad)
cmp
les
pop
(bad)
mov
js
not
and
ss
inc
icebp
fldcw
mov
dec
mul
inc
shl
jmp
imul
jmp
jl
sahf
out
pop
add
retf
xor
sub
jb
pusha
repnz
in
add
push
mov
jns
mov
popf
mov
add
dec
scas
lds
push
or
push
scas
scas
daa
inc
and
push
or
pop
cmp
push
test
bound
jg
fsub
cmc
pop
or
push
in
mov
ror
les
pop
sub
mov
or
push
shl
jg
(bad)
mov
retf
popf
push
lods
jns
imul
movs
test
xor
cmc
xchg
inc
loopne
je
xor
lahf
pushf
add
popa
(bad)
adc
jge
test
dec
mov
aas
pop
scas
mov
test
sbb
(bad)
cmp
mov
ja
mov
cmc
lods
xchg
(bad)
xchg
inc
cmp
mul
nop
pop
mov
icebp
mov
xor
jge
push
rcr
gs
mov
nop
xor
mov
lds
call
sub
xor
sti
pop
out
lods
sahf
int
dec
mov
adc
int
aaa
sbb
or
add
sub
ret
cdq
sbb
push
mov
add
push
dec
js
je
adc
stos
retf
loop
(bad)
scas
data16
in
pop
js
and
sbb
in
aad
jmp
data16
adc
inc
les
pop
xchg
lock
fwait
jecxz
cmp
lock
add
aam
aaa
in
adc
mov
inc
push
mov
aam
fidiv
fcomp
push
das
(bad)
int3
or
int3
dec
pushf
les
ror
sub
sub
add
xchg
jbe
(bad)
aam
sub
xor
pop
(bad)
add
mov
jg
sahf
dec
sbb
mov
sbb
hlt
xchg
imul
jge
pushf
push
(bad)
nop
jae
not
fisubr
push
test
test
jle
out
stc
loope
inc
inc
mov
xchg
mov
push
popa
aam
popf
jbe
int3
push
cmp
popf
outs
cmp
stos
cld
fsub
xchg
push
scas
pop
std
aaa
mov
inc
js
or
out
push
mov
mov
xor
fistp
out
jb
cmps
stc
sbb
pushf
rcl
mov
inc
push
sahf
adc
aas
mov
or
repnz
push
push
cmp
pop
or
dec
and
out
in
push
popf
ja
loopne
jl
cmp
mov
inc
mov
sti
mov
add
add
add
sar
pop
scas
dec
or
jnp
add
(bad)
fsubr
sub
fwait
mov
xor
mov
fisub
push
mov
mov
xor
sbb
sbb
inc
inc
jnp
pop
test
shr
ret
jne
es
jo
cmp
fs
mov
mov
add
repnz
sbb
xrelease
push
and
mov
lock
loope
sbb
adc
pop
mov
data16
mov
xor
fcomp
rcl
js
out
lods
sub
add
jecxz
jno
mov
sbb
dec
dec
cwd
add
add
enter
jne
push
clc
xchg
mov
xchg
add
push
sbb
ror
jge
(bad)
jp
test
fsub
cmp
mov
and
les
dec
or
das
stos
loop
mov
mov
les
push
jl
shl
fwait
xchg
lea
call
inc
nop
xchg
jp
push
leave
cmp
push
(bad)
add
or
das
sub
aad
xchg
sbb
mov
dec
sub
out
pop
mov
into
rcr
add
call
pop
stos
and
not
fs
mov
inc
sub
lds
mov
push
or
stos
add
or
jp
sub
xor
nop
out
xor
mov
or
adc
dec
mov
pushf
ds
aad
loopne
sbb
test
outs
inc
pop
loope
adc
jmp
add
dec
jg
stc
pop
out
daa
imul
mov
sbb
adc
jnp
cmps
push
shl
mov
jge
inc
call
mov
or
stos
loope
xlat
dec
mov
push
rcl
les
adc
mov
(bad)
mul
jns
je
into
mov
frstor
mov
sti
jo
jmp
pop
data16
push
(bad)
push
inc
es
mov
xor
inc
ror
mov
movs
movs
pop
out
push
push
ror
ret
mov
test
cwde
loopne
out
imul
and
call
jnp
xchg
(bad)
xchg
sub
test
adc
fist
adc
inc
xor
clc
leave
pop
mov
jp
xchg
mov
adc
aam
shl
call
jo
inc
repnz
test
jb
cmp
and
push
dec
jnp
or
enter
lahf
fisub
push
icebp
in
js
and
je
test
add
xor
cdq
push
mov
add
aad
xchg
and
scas
inc
push
jne
or
inc
rcr
fld
jo
fadd
mov
das
je
or
bound
add
test
push
inc
call
repz
lods
gs
xor
ret
test
sbb
inc
mov
bound
nop
rcl
shl
inc
cmps
mov
or
gs
outs
into
push
and
pop
aad
(bad)
fadd
fmul
xchg
sub
(bad)
cmp
mov
bts
add
frstor
mov
pushf
dec
fsub
cdq
lods
xchg
call
inc
minps
mov
aas
fdivr
fwait
out
adc
(bad)
mov
clc
pusha
mov
sbb
out
xchg
jl
mov
lds
addr16
dec
iret
(bad)
repz
dec
push
inc
push
pop
dec
mov
xchg
sbb
lahf
popa
rcr
xchg
(bad)
pop
jle
fimul
movs
fabs
das
int
xchg
mov
(bad)
xlat
aad
sar
lods
inc
push
out
push
ret
xchg
repnz
pop
jmp
xor
sbb
dec
sti
shr
std
je
and
aad
push
and
adc
pop
jecxz
add
lods
cmps
hlt
pusha
xor
(bad)
aad
xchg
adc
stos
fidiv
jnp
test
add
aas
inc
icebp
stc
xor
into
inc
sub
ds
out
or
scas
mov
cmps
imul
cmp
push
jo
and
div
cmp
jns
adc
fnstsw
jp
push
aas
mov
jg
inc
mov
pop
push
cld
sbb
or
xchg
into
call
xor
test
(bad)
adc
jge
popa
mov
adc
in
movs
inc
cmp
mov
lds
push
fisubr
js
push
mov
hlt
(bad)
push
fnstsw
jmp
or
shl
lods
adc
add
call
(bad)
cli
cmp
jecxz
sahf
or
pop
aad
sub
xlat
mov
and
jle
mov
dec
rol
scas
and
push
pop
test
les
pushf
lahf
mov
xchg
mov
xor
rol
cmc
cdq
aad
or
xor
leave
ins
lock
mov
adc
cmp
or
ficom
scas
fsub
loopne
dec
inc
mov
gs
jnp
xor
and
and
adc
inc
jno
mov
and
aad
int3
mov
xor
popa
ret
popf
jmp
out
xor
inc
pop
cli
dec
out
popa
adc
shl
cmp
lods
mov
dec
data16
inc
xchg
sub
mov
inc
test
or
je
mov
retf
mov
cmp
dec
add
cdq
ficom
or
push
add
js
xor
stc
ret
jae
repz
(bad)
mov
or
fdiv
call
mov
inc
out
shl
pop
pop
add
push
pop
lea
mov
or
dec
sub
lds
(bad)
jns
mov
jl
aad
add
and
aam
in
shl
ins
cli
fisub
dec
or
and
or
jnp
pop
and
mov
xor
test
arpl
std
or
loop
mov
jl
push
and
mov
xchg
inc
int3
inc
jmp
(bad)
neg
fmul
sbb
xor
mov
test
xchg
outs
or
stos
push
addr16
sub
or
sbb
inc
enter
into
hlt
stos
in
lods
inc
in
(bad)
aas
daa
mov
mov
pop
adc
mov
fsubr
pop
std
enter
aas
(bad)
jne
sahf
lds
inc
pop
movs
ret
xchg
retf
ss
je
arpl
std
(bad)
jmp
mov
or
ret
(bad)
push
ret
fstp
xlat
xchg
push
push
jge
inc
jns
mov
cwde
retf
push
cs
add
mov
imul
retf
mov
fisttp
push
xchg
fnstcw
pop
and
loop
push
out
ins
mov
mov
int3
xchg
movs
or
add
je
iret
ss
(bad)
cdq
and
loope
dec
cdq
push
jbe
cmp
pop
adc
jecxz
xchg
xor
xor
push
mov
mov
sbb
mov
mov
pusha
add
test
(bad)
imul
call
arpl
cld
adc
and
sahf
cmp
xchg
xchg
in
shl
pop
cli
shl
inc
fcmovu
lahf
fistp
popa
add
mov
cmp
cld
and
jno
in
test
or
(bad)
mov
pop
adc
(bad)
sub
int3
repz
sahf
mov
dec
mov
jl
mov
fisub
mov
icebp
push
pop
ss
shl
ds
add
sbb
(bad)
dec
xlat
jnp
lods
arpl
sahf
in
and
jmp
addr16
adc
and
ja
xchg
pop
test
popf
addr16
pushf
ret
in
jae
push
and
or
das
mov
pop
lahf
xchg
cmc
jbe
or
loop
sub
aam
push
call
cmp
lds
rcl
dec
int
test
dec
adc
cmp
lea
(bad)
dec
mov
xchg
rcl
and
in
repz
jmp
mov
pop
sbb
xor
ss
sbb
xor
idiv
xchg
xor
popa
mov
pop
sbb
jge
sub
loope
lds
push
mov
mov
pushf
out
aad
ror
xchg
cmps
aad
nop
xchg
mov
cwde
jecxz
add
xchg
stos
fwait
in
add
lods
cli
jl
jg
test
cmp
scas
inc
mov
out
jmp
and
ret
adc
xor
mov
and
xchg
cmps
push
sbb
std
dec
in
shl
fdiv
cld
push
xor
cmp
jg
jbe
adc
aas
jmp
ss
mov
pop
outs
lods
(bad)
mov
mul
sbb
xor
ss
mov
call
jecxz
imul
popf
sub
lds
add
test
stc
push
xchg
sbb
sub
fidivr
sbb
adc
fst
add
jmp
jmp
push
mov
mov
iret
movs
fcom
out
fstp
mov
aaa
pop
retf
arpl
ins
sub
pushf
sbb
ins
mov
ds
jg
dec
ffree
je
into
push
sub
dec
jns
xchg
loope
sbb
jo
dec
pushf
pop
adc
mov
loop
dec
xchg
sub
je
cmp
mov
lahf
pop
nop
dec
push
ins
mov
xor
sub
in
push
cmp
arpl
mov
adc
push
or
clc
ret
sbb
sbb
and
pop
stos
sbb
inc
mov
mov
mov
popa
(bad)
dec
push
push
test
repz
retf
add
xchg
fsubr
and
(bad)
xchg
dec
mov
imul
(bad)
or
push
push
stc
pushf
iret
and
repnz
sbb
test
lods
out
sub
cli
mov
xchg
out
push
rcr
sbb
mov
mov
push
pop
cmp
xchg
rol
or
mov
imul
or
out
scas
fimul
pop
lods
lods
or
inc
push
scas
icebp
mov
test
cmp
(bad)
xor
call
clc
pop
scas
cdq
sbb
stos
push
cmp
repnz
cs
add
pop
ds
pop
arpl
xor
mov
sub
cmp
xchg
dec
fcmove
inc
lds
(bad)
jne
xchg
mov
pop
ret
pop
or
leave
and
xchg
pop
or
int
fsub
aas
pop
call
pop
dec
leave
add
(bad)
lods
in
xchg
mov
jb
dec
lahf
mov
jmp
cdq
push
clc
push
cmp
and
pop
cmp
inc
(bad)
cli
mov
stos
mov
(bad)
pop
mov
in
push
push
or
cmp
dec
push
mov
jnp
arpl
das
and
adc
in
jmp
xor
pop
aad
ror
or
daa
stos
mov
ins
adc
in
fldenv
scas
xor
and
(bad)
in
(bad)
jcxz
das
cmp
sub
fidiv
sar
fwait
into
lods
clc
jb
mov
mov
jno
(bad)
xrelease
das
jp
xor
jns
ret
add
pop
mov
lds
inc
ret
repnz
lahf
aas
jp
mov
dec
jb
inc
rcl
retf
lea
ins
call
adc
adc
adc
rol
rcr
push
mov
mov
out
mov
neg
int3
sti
push
cs
jnp
shl
jl
dec
adc
push
rcr
pop
add
xchg
test
inc
sub
lods
push
xor
std
push
mov
sbb
xchg
pop
mov
repnz
xor
movsx
push
push
(bad)
stc
iret
jbe
stos
mov
dec
iret
jmp
shl
ss
sub
and
arpl
sub
int3
hlt
mov
popf
add
gs
sahf
add
iret
cmps
cli
out
and
pop
adc
xchg
ss
ficomp
cld
jle
mov
stc
imul
(bad)
fld
test
mov
test
sti
mov
mov
fidivr
or
jae
mov
pop
mov
js
xor
xchg
leave
ins
sub
and
or
mov
push
call
lds
gs
cmps
call
test
add
dec
jb
mov
fcmovnbe
dec
push
cmps
(bad)
mov
(bad)
mov
pusha
out
xor
and
into
or
cmp
pop
in
in
and
cs
ins
jnp
push
mov
int3
mov
scas
cmp
mov
test
fwait
ins
add
neg
or
enter
sbb
fild
jecxz
jb
cwde
and
aaa
(bad)
dec
shld
mov
fdivr
into
push
rcl
popf
xchg
data16
add
dec
xchg
push
rcr
neg
std
jge
in
jp
jg
mov
shl
hlt
cli
mov
je
fdiv
iret
xchg
ins
rcr
scas
push
inc
pop
out
mov
clc
scas
fwait
dec
mov
rol
dec
mov
mov
(bad)
sub
dec
mov
cmps
inc
mov
jnp
add
inc
mov
add
mov
xor
jb
fld
push
stos
push
stos
movs
aam
mov
call
in
mov
icebp
sub
xor
mov
dec
sub
das
mov
aaa
popa
les
mov
xlat
cmc
jmp
imul
int3
push
xor
adc
pop
jmp
nop
pop
int3
push
xchg
or
cmps
pop
xchg
jb
jno
mov
lods
fist
push
test
dec
pop
retf
inc
xor
in
aas
popa
dec
or
repz
jmp
es
sub
adc
test
or
inc
cmp
sbb
(bad)
int3
push
xchg
jmp
dec
xchg
dec
add
sar
ss
or
clc
out
mov
retf
mov
inc
pop
enter
and
mov
(bad)
call
or
(bad)
mov
jbe
lock
sbb
jle
lahf
and
ret
pop
xchg
ins
scas
and
inc
lea
dec
or
loope
mov
ja
das
neg
jp
popa
push
loope
fild
out
cmp
xchg
cmp
in
adc
(bad)
movs
adc
adc
scas
pop
xlat
sbb
jno
pop
mov
popf
jb
imul
cmc
pop
gs
imul
sub
out
jp
leave
and
sub
pop
jno
pop
push
ss
ins
pushf
or
loop
adc
and
leave
and
push
jmp
dec
xchg
push
and
adc
(bad)
xlat
enter
fwait
mov
jp
pop
jns
es
adc
cmp
or
cmp
pusha
ja
inc
cs
xchg
cld
sbb
or
mov
pushf
adc
cmps
push
(bad)
sub
popf
loop
xor
xchg
cwde
outs
js
imul
sub
es
(bad)
jmp
lea
mov
xchg
cmc
call
(bad)
mov
xchg
stos
pusha
jl
sub
(bad)
xlat
mov
ret
ins
test
jg
fstp
mov
test
pop
mov
int3
arpl
mov
mov
mov
sbb
cmps
mov
mov
aad
inc
fisubr
and
sub
shl
test
xchg
adc
pop
mov
popf
cmp
mov
lods
pop
adc
or
int
shr
dec
sub
test
pop
fadd
push
pop
ins
xor
into
lahf
xor
dec
ret
pop
mov
jns
inc
cs
sub
mov
pop
repz
cli
add
sub
mov
push
xor
(bad)
jns
or
icebp
out
push
xchg
push
xchg
adc
sub
mov
aaa
or
repz
xchg
imul
dec
or
xchg
loop
fwait
or
cmps
int3
xchg
mov
mov
inc
dec
dec
std
fcmovne
mov
iret
ret
int
dec
lahf
pop
call
add
or
sahf
mov
inc
fst
sub
inc
call
cmp
dec
adc
and
enter
xchg
bound
(bad)
sub
jp
scas
je
sub
lea
mov
push
jmp
rcr
repz
mov
mov
je
fucomp
xlat
or
jecxz
stos
jle
and
aaa
ins
mov
pop
mov
test
cli
outs
adc
das
js
jno
cs
xlat
mov
pop
push
dec
fbstp
clc
and
in
push
pop
inc
hlt
ds
jmp
dec
inc
inc
pop
or
xchg
repnz
movs
mov
mov
repz
push
xchg
jne
shl
and
dec
sub
lahf
push
test
jae
or
sti
inc
jecxz
mov
cmp
xor
out
sbb
div
xchg
sub
and
mov
jg
jmp
pop
or
mov
jmp
dec
loopne
mov
stc
shl
or
and
sar
sar
inc
loope
loop
je
ror
mov
or
cld
rol
fmul
push
push
add
adc
popa
xchg
or
and
cdq
fild
xor
ins
sahf
call
ret
add
addr16
clc
mov
nop
stos
xchg
mov
or
scas
dec
int
mov
and
out
jae
cmp
mov
shl
push
dec
test
and
mov
jb
dec
stos
pop
stos
sub
test
cld
xchg
sahf
test
push
out
push
xor
jg
mov
call
cs
in
cli
inc
push
mov
inc
jmp
jmp
sub
ds
jl
cmp
sub
push
out
xor
xor
xchg
adc
shr
outs
jge
movs
mov
push
cmp
cwde
xor
pop
lods
fs
jns
imul
push
cmp
mov
adc
sub
xor
or
fwait
and
push
stc
jns
fidiv
out
adc
adc
push
adc
pusha
ret
mov
gs
mov
dec
xor
popf
push
ins
pop
push
pop
mov
push
inc
xchg
jb
pop
movs
xchg
and
pop
mov
inc
neg
scas
lea
sbb
mov
stos
dec
push
push
mov
lea
aad
cmp
cmp
je
dec
cmp
jno
gs
ja
in
(bad)
addr16
stc
aaa
mov
std
sar
(bad)
pop
sbb
sahf
jge
add
(bad)
mov
lds
sar
(bad)
jb
retf
fld
jno
xor
inc
fdivr
imul
addr16
test
push
adc
ins
cmp
pusha
mov
cwde
std
push
es
jne
and
retf
repz
movs
out
ror
out
xchg
stos
pop
xor
push
cmp
dec
dec
(bad)
stos
pop
mov
mov
or
rcl
push
push
ror
jecxz
pop
data16
(bad)
sahf
push
rcl
and
ja
call
fmul
cmp
(bad)
in
push
loopne
lds
mul
repnz
pop
mov
imul
pop
push
ds
fnstsw
mov
dec
dec
xchg
sub
mov
call
out
fld
sahf
pop
pop
and
aaa
jl
cli
scas
mov
cmp
ja
(bad)
and
jl
retf
outs
inc
add
add
sub
popa
dec
sub
push
sbb
les
cdq
xor
fcomi
cmp
sub
jb
inc
sbb
(bad)
scas
push
shl
mov
mov
dec
push
push
or
fsubr
adc
jecxz
and
out
stc
ret
add
cs
sbb
dec
aaa
or
ror
daa
sbb
rcl
inc
retf
or
enter
clc
es
adc
sbb
or
test
add
jle
jmp
jae
xchg
shr
test
jns
push
mov
push
repnz
or
cmp
sub
sbb
adc
cmps
jae
sbb
aad
xchg
sbb
adc
shl
dec
or
mov
pop
jb
ins
int3
adc
nop
mov
test
sbb
movs
aas
fadd
mov
pop
mov
(bad)
sbb
jo
mov
neg
mov
ret
xor
mov
mul
neg
sbb
push
dec
nop
xchg
jp
es
pushf
ret
int3
push
and
jb
dec
repz
or
cmps
rol
cmp
inc
xchg
xlat
cmp
push
loopne
(bad)
sbb
mov
js
sub
(bad)
push
cwde
(bad)
jle
sbb
xchg
dec
movs
lods
pop
mov
add
jecxz
push
sbb
sbb
ss
ja
cmp
scas
push
push
pop
mov
cdq
sub
pop
cld
mov
and
adc
fadd
cmp
pop
jg
sbb
fistp
aad
icebp
jge
cmp
cld
stos
sbb
clc
push
mov
jg
out
mov
jle
aam
rep
cmps
sbb
popa
xchg
inc
jp
xchg
clc
lock
popa
sbb
jnp
xor
repnz
xchg
pop
jae
aas
or
pop
xor
stc
cmps
repnz
test
pop
adc
arpl
fs
push
push
lea
mov
fmul
ret
mov
mov
push
cmp
mov
xchg
dec
test
mov
xchg
stos
push
fnsave
ror
or
cld
adc
push
loop
sub
jle
movs
and
push
out
dec
push
scas
(bad)
cwde
or
dec
iret
mov
call
pop
and
xchg
mov
pop
push
push
dec
pop
jg
mov
pop
sbb
call
dec
cli
pop
jae
cwde
jp
xlat
fsubr
or
inc
pusha
loop
in
inc
js
ja
mov
push
push
mov
adc
push
ret
stc
pusha
pop
xor
dec
(bad)
mov
sbb
push
arpl
mov
(bad)
ja
cmp
sbb
sub
lds
test
xor
jmp
fdivr
mov
std
or
mov
or
jecxz
add
aam
adc
jb
cli
jne
leave
jecxz
jle
sub
(bad)
mov
push
addr16
stc
push
cwde
xchg
jae
mov
push
cs
fwait
sub
clc
popa
call
add
cmp
mov
sbb
sar
cmps
push
fstp
mov
pop
mov
xchg
and
jmp
and
out
cmc
scas
xchg
test
adc
or
cmp
dec
jns
sbb
xchg
xchg
xor
or
outs
sbb
push
adc
push
xlat
les
out
jl
add
pop
fisub
jne
rol
call
pop
jmp
and
pop
and
pop
scas
mov
fld
fs
and
inc
and
stc
dec
mov
push
jp
mov
add
push
or
addr16
aam
out
shl
addr16
in
jmp
pusha
scas
mov
mov
fsub
retf
jl
cmp
es
adc
dec
pushf
or
outs
pop
(bad)
and
in
or
jp
shr
not
xor
adc
addr16
xchg
sbb
inc
push
test
mov
in
sbb
ins
xor
xchg
xchg
add
pusha
icebp
mov
cmp
(bad)
out
mov
mov
ja
into
imul
mov
aaa
aas
or
pop
stos
aas
inc
mov
test
mov
repnz
int
inc
push
retf
sub
lods
mov
mov
jl
iret
add
pop
stc
xchg
cs
add
test
sbb
jb
inc
adc
fnsave
inc
ds
or
mov
sub
pop
call
pop
xchg
imul
lods
lock
call
call
lds
shl
dec
and
sub
mov
cmc
int3
fistp
stc
jo
and
inc
imul
or
jge
fs
jmp
lock
pop
cs
push
lods
(bad)
repz
pop
je
xor
(bad)
jbe
pusha
stos
mov
pop
aaa
outs
call
repz
mov
mov
mul
not
ins
pop
pop
gs
and
rcr
mov
arpl
dec
adc
mov
aad
cmp
bound
adc
icebp
xchg
xor
aad
push
xor
ret
mov
dec
mov
punpcklwd
jbe
out
popa
adc
jmp
adc
xchg
ret
add
cmc
cmp
or
sbb
test
int3
pop
dec
or
xchg
in
dec
mov
popf
inc
pop
arpl
xchg
shr
fstp
and
mov
and
int3
ret
sbb
mov
xor
retf
ins
fidivr
retf
xchg
adc
mov
adc
inc
pushf
bound
inc
and
dec
or
mov
mov
stc
pop
es
xor
test
retf
and
pushf
(bad)
iret
xchg
mov
ret
call
lahf
xlat
xchg
rcr
dec
cld
cld
xor
sbb
or
cmp
bound
lock
hlt
xchg
enter
xor
cs
imul
loopne
and
loop
std
leave
adc
mov
scas
leave
xchg
retf
or
shl
pop
jo
hlt
mov
popf
retf
sub
jl
adc
gs
push
movs
adc
push
mov
cmp
test
in
movs
xchg
lea
test
and
test
lds
add
xchg
inc
pop
test
repnz
daa
xchg
lds
ret
push
mov
ja
xchg
and
adc
scas
(bad)
cmps
test
in
push
ficomp
sub
push
xor
adc
fmul
and
and
jp
add
xor
add
data16
call
jne
aaa
pop
es
pop
push
jo
mov
loop
adc
sahf
cmps
jecxz
setp
xchg
inc
dec
loopne
dec
jp
inc
sbb
jbe
iret
jge
out
mov
test
sub
sbb
or
or
addr16
int3
dec
outs
mov
cmp
fwait
lock
xchg
(bad)
push
add
lds
mov
mov
pop
adc
aad
mov
lock
inc
cmc
cwde
in
mov
or
push
jmp
fwait
je
lock
mov
hlt
mov
push
(bad)
mov
mov
es
cld
addr16
out
leave
and
out
xchg
and
jmp
shr
and
cmp
test
or
mov
adc
pop
or
inc
mov
xor
mov
ds
sbb
sub
fdiv
pop
adc
dec
js
mov
sub
pop
fcom
jp
sub
stos
inc
sub
shl
scas
out
push
ret
cwde
(bad)
fistp
fdiv
mov
pop
test
inc
mov
dec
or
sub
adc
neg
push
movs
pop
adc
pop
pop
lea
fs
pop
pop
lock
out
jge
fwait
mov
pop
jmp
jecxz
clc
sub
test
cmp
mov
pop
adc
sub
pusha
pop
mov
cdq
daa
out
mov
and
jge
inc
adc
fstp
cwde
inc
scas
sub
pop
cmp
adc
mov
jnp
adc
jge
call
ror
push
mov
cdq
ins
adc
sbb
and
adc
ds
popa
jmp
inc
sbb
or
push
pop
cli
jecxz
push
mov
xchg
jmp
out
scas
sar
push
out
push
add
dec
div
sub
mov
scas
mov
mov
fldcw
or
and
and
mov
movs
mov
mov
imul
ficomp
xor
sbb
xor
cmp
fcomp
call
(bad)
lahf
dec
add
pop
(bad)
ins
fs
inc
sti
cld
inc
adc
jae
pop
lds
js
shl
jb
js
test
and
mov
in
fwait
iret
cwde
cwde
jp
sti
mov
pop
pusha
nop
mov
cmp
rol
outs
lods
scas
retf
bound
or
jno
adc
mov
add
test
gs
jmp
jmp
sub
test
push
sub
bound
ja
int
dec
idiv
jae
fsub
mov
(bad)
in
dec
jmp
daa
stos
leave
cli
in
aad
pop
out
and
mov
xor
out
pop
adc
jmp
and
jmp
js
xor
cmp
sub
jmp
jl
mov
lahf
mov
jmp
sub
std
push
outs
sub
mov
add
in
sbb
jmp
xchg
sub
mov
aad
cli
mov
dec
sbb
add
test
gs
in
dec
xor
ficomp
clc
cmp
add
aam
cli
mov
mov
rcr
adc
scas
shl
cs
ret
ds
dec
dec
adc
mov
outs
pop
jo
jbe
out
data16
jne
pop
(bad)
in
ret
call
(bad)
pushf
clc
or
out
sub
scas
mov
add
std
mov
pop
retf
pop
mov
add
bound
mov
imul
pop
xchg
pop
dec
xor
movs
xchg
test
sub
mov
jbe
sub
push
xor
cmp
add
sar
test
push
cmp
jne
jecxz
iret
test
adc
mov
sbb
rol
cli
mov
stos
mov
jno
push
ins
imul
xchg
shr
shl
mov
sahf
out
sbb
add
jmp
xor
ret
dec
lahf
(bad)
mov
dec
push
rep
(bad)
mov
scas
inc
mov
aaa
pop
test
push
push
sbb
movs
retf
mov
jne
xchg
xor
bound
mov
jnp
(bad)
into
mov
push
aas
or
shl
(bad)
xchg
into
fdivp
pop
lahf
ret
shl
cmp
push
lods
cli
cmps
ins
mov
push
mov
pop
mov
scas
jp
mov
icebp
cmps
aas
pusha
mov
sbb
je
add
inc
push
out
mov
xor
jle
cmp
movs
jmp
inc
pop
adc
rcr
or
add
(bad)
add
sub
push
mov
sub
mov
jb
jb
adc
inc
push
mov
jns
aam
mov
mov
adc
and
or
std
jbe
int3
xchg
xchg
push
adc
call
adc
(bad)
pop
mov
pushf
push
xchg
out
mov
shr
int3
or
dec
das
push
int3
inc
and
test
test
call
xor
ins
inc
xchg
pop
xor
jae
push
pop
pxor
adc
xchg
push
sub
out
mov
aad
test
or
dec
sbb
dec
mov
add
adc
imul
push
xchg
jno
int3
jbe
pop
arpl
push
gs
xchg
inc
cmp
iret
sbb
popf
ins
and
imul
jl
inc
out
outs
imul
loopne
jmp
xchg
test
repnz
jae
jmp
test
call
dec
add
retf
mov
jmp
ja
scas
inc
or
mov
je
fwait
dec
sub
cmp
xchg
lock
adc
xchg
mov
push
xchg
fmul
fisubr
xchg
cmp
retf
dec
popf
cli
mov
ret
leave
aad
repz
jbe
out
mov
shr
repnz
lods
dec
jb
fnstenv
jno
lods
jecxz
test
imul
sahf
adc
sub
pop
cmp
mov
fs
cwde
jmp
mov
lds
xchg
arpl
xor
mov
pop
fwait
mov
rcr
mov
retf
psubw
push
xor
mov
jg
sub
int
loope
stos
dec
sbb
gs
popf
ja
aam
loope
lea
mov
xor
ss
loopne
cmp
repnz
pop
pop
out
inc
mov
add
lock
lods
mov
inc
pop
cmp
cwde
cli
in
aaa
push
mov
fcom
push
and
sbb
jl
enter
mov
jg
jp
repnz
rcr
xlat
dec
add
mov
and
scas
add
inc
jmp
adc
aas
cwde
fdivr
xchg
xor
pop
rcr
sar
imul
test
movs
dec
dec
add
mov
in
push
(bad)
ror
jns
out
jns
cli
xor
jle
push
xor
pop
sbb
jle
sbb
shr
mov
sti
mov
jp
pop
cmp
inc
mov
inc
sub
sub
push
mov
jno
pop
mov
cmp
iret
mov
jb
(bad)
inc
(bad)
in
in
and
inc
fst
adc
push
cld
lds
or
aaa
jae
out
jecxz
dec
cs
dec
stos
xchg
push
out
repnz
fs
or
lods
scas
sub
xchg
(bad)
push
xchg
xor
loopne
xor
ss
push
gs
dec
out
mov
ret
push
cwde
rcl
mov
hlt
ror
lahf
mov
loop
ss
fstp
jne
push
dec
push
sbb
inc
push
jl
pop
or
int3
cmc
das
or
stc
and
mov
fwait
test
aaa
cmp
call
push
ins
jnp
add
pusha
mov
ret
cld
cmp
pop
adc
dec
dec
repnz
adc
push
adc
and
ss
rol
sub
lea
shl
and
outs
push
imul
adc
cwde
mov
out
adc
mov
pop
shl
and
test
push
cmc
stos
jp
sbb
pop
cmps
adc
rcr
retf
sahf
fsub
push
call
sub
test
daa
xchg
xchg
pop
pop
clc
scas
mov
pop
adc
repz
inc
ret
lds
pushf
test
ins
test
popa
outs
sbb
sbb
add
fsubp
pop
sub
retf
mov
leave
push
cld
mov
in
ins
pop
outs
mov
add
cmc
imul
jne
push
rcr
push
xor
mov
int
stc
jle
daa
std
test
imul
pop
icebp
js
es
mov
cmp
jecxz
ins
sbb
call
sar
in
gs
loop
fwait
add
es
in
push
dec
(bad)
leave
or
dec
inc
xor
push
push
in
xor
adc
xor
dec
jle
inc
pop
pusha
xor
bnd
add
int
fld
and
iret
cld
stos
dec
int3
adc
mov
jae
adc
inc
icebp
dec
iret
adc
int3
lods
mov
fwait
xchg
jp
or
fild
fwait
jns
xor
or
int3
xchg
rcr
sar
pop
xor
mov
repz
inc
sbb
mov
movs
mov
push
outs
pop
and
or
pusha
jge
loop
fistp
cmp
cmp
pusha
jmp
xor
inc
je
push
add
mov
push
mov
sar
adc
xor
hlt
ret
or
adc
and
or
push
loope
xor
xor
cmp
mov
mov
or
pop
xchg
out
test
jcxz
test
sbb
and
inc
mov
xor
adc
mov
mov
mov
mov
sbb
lea
iret
jg
mov
pushf
popa
jl
jne
xchg
stos
ret
into
push
test
xor
dec
or
fstp
cmps
cmps
cmp
shl
or
or
jo
(bad)
bound
stos
aam
mov
(bad)
repnz
xchg
call
and
inc
or
cmp
xchg
sub
jecxz
ror
sub
lds
gs
xchg
dec
dec
sbb
push
pop
sar
imul
xchg
sub
adc
aam
cmp
mov
mov
sbb
push
mul
mov
idiv
sbb
pop
cmp
js
stos
sbb
jb
test
sub
add
adc
(bad)
sub
es
fs
mov
mov
cmp
stos
daa
cmp
scas
push
inc
jg
aaa
es
(bad)
push
int
iret
imul
sub
test
mov
sub
dec
test
or
xor
or
mov
cld
shl
jge
cld
pop
out
push
stos
mov
jmp
mov
movs
and
(bad)
fs
mov
sahf
lahf
test
aam
enter
nop
scas
in
push
aam
push
aaa
xor
and
movs
dec
loopne
mov
loop
int
test
cmps
repz
ss
sahf
aaa
xchg
and
inc
inc
adc
cmps
xchg
(bad)
cmps
pop
push
mov
and
sub
xchg
pop
xchg
popa
add
rol
jne
stc
shl
and
int
mov
and
sub
cmp
cmp
fs
std
pop
cdq
jmp
enter
mov
call
fiadd
jge
rol
mov
es
mov
dec
mov
jmp
pop
repnz
xchg
add
inc
dec
lods
arpl
int
stos
inc
sar
xor
lock
loop
sbb
add
mul
mov
lahf
cli
adc
xchg
repnz
or
pop
add
jno
lods
cmp
int
push
push
push
push
pop
data16
jg
(bad)
ds
lds
test
push
mov
nop
xor
sub
or
adc
mov
stc
fnsave
pop
cmc
daa
arpl
in
stos
add
xchg
imul
jecxz
gs
cmps
pop
fld
jo
and
inc
adc
pop
push
xchg
in
stos
adc
mov
sbb
popf
add
and
xchg
cmps
loop
xlat
outs
scas
or
jg
(bad)
or
rol
or
add
or
dec
shl
add
or
cld
cld
test
fsub
test
fild
dec
xchg
mov
mov
add
xchg
cmp
int
scas
cmp
jp
add
sub
rcr
sub
in
mul
and
lea
inc
xchg
ret
je
(bad)
mov
sub
movs
(bad)
add
gs
mov
cmc
lds
sub
dec
fs
sub
pushf
and
add
in
rol
loop
int
mul
icebp
mov
mov
in
imul
and
xor
fnsave
push
scas
ins
mov
or
and
fs
fsubr
loopne
mov
scas
jge
dec
push
push
sub
inc
xor
gs
jno
lahf
xchg
gs
jnp
xchg
sahf
outs
fwait
lds
push
pop
mov
lock
mov
adc
sub
in
movs
pop
cdq
and
or
popf
fdiv
add
jecxz
mov
inc
ret
ins
sti
jl
adc
pop
fidiv
sar
sub
scas
mov
leave
cld
cs
or
sbb
and
je
mov
fild
dec
mov
mov
movs
pop
xchg
mov
mov
scas
sbb
out
cmp
call
xor
sub
push
dec
jg
mov
push
mov
or
jo
mov
sbb
mov
je
cmp
shl
xor
push
pop
stos
cwde
sbb
scas
sub
and
ficom
es
ins
nop
lods
pop
shl
or
sub
xor
shl
and
cmp
scas
test
(bad)
or
lea
clc
gs
fmul
repz
ficomp
(bad)
rol
mov
pop
in
xor
mov
jmp
push
fs
stc
loopne
or
xor
mov
xor
dec
adc
cld
or
mov
jno
sbb
lea
call
(bad)
pop
sbb
pop
jnp
js
push
(bad)
int
xlat
inc
mov
out
aad
cvtps2pi
rcl
adc
push
jnp
pop
mov
imul
adc
sub
push
sub
test
xlat
inc
push
add
ret
arpl
mov
add
es
inc
aam
test
adc
inc
jle
xor
jp
outs
test
out
push
mov
imul
hlt
pushf
test
push
(bad)
pop
dec
dec
push
outs
hlt
and
push
mov
aad
pop
or
sar
or
call
mov
xor
or
out
sbb
ins
push
call
mov
fwait
ja
pmaxsw
leave
mov
sub
inc
cli
loop
mov
repz
cdq
stc
pusha
jno
out
push
xor
outs
int
sub
jns
or
daa
ins
movs
lea
mov
push
xchg
sbb
jmp
inc
jecxz
addr16
pop
xor
push
jnp
sub
mov
mov
imul
jecxz
mov
int3
dec
mov
push
rol
outs
mov
sbb
push
iret
add
mov
pop
sbb
jecxz
cmp
xchg
xor
mov
or
into
inc
and
repnz
pop
dec
lock
ss
ret
sub
mov
pop
imul
in
sbb
ret
mov
jl
mov
in
push
lea
and
add
stos
mov
cmp
repnz
and
mov
stos
les
sub
not
sbb
dec
in
jnp
sub
push
aam
dec
mov
sar
shl
rcl
loop
test
aam
lods
xor
push
jmp
imul
aas
jbe
mov
scas
ins
push
or
dec
jne
sbb
arpl
fisubr
ss
jge
mov
and
in
std
and
cmp
xor
and
cmps
jno
mov
ror
sbb
les
icebp
or
jmp
outs
ja
fsub
xor
stos
inc
lock
pop
sub
in
jne
test
movs
jle
or
loop
not
dec
(bad)
scas
mov
pop
mov
sub
lahf
dec
xchg
out
mov
ss
pop
and
nop
outs
mov
stos
mov
popf
popa
jmp
hlt
cmp
jo
and
push
xchg
cmp
in
xlat
jmp
movs
hlt
jmp
outs
mov
or
mov
ficomp
das
fsubr
pop
cwde
out
or
cs
(bad)
pop
dec
sbb
adc
outs
add
imul
fsubr
dec
fstp
frstor
xchg
sbb
fbld
stos
int
scas
scas
dec
inc
pop
das
outs
lock
push
xlat
add
xor
sub
std
adc
push
test
dec
mov
fdiv
frstor
cmp
xchg
cs
xchg
or
daa
push
icebp
test
pop
xor
movs
cmp
jg
js
add
mov
sub
jno
dec
arpl
or
sbb
aaa
(bad)
loopne
push
adc
aam
sbb
xchg
jle
mov
mov
push
mov
add
popf
xchg
fnsave
shl
aaa
mov
in
out
enter
shl
inc
(bad)
xchg
sti
pop
xchg
push
dec
into
xchg
pop
xor
jns
pop
xchg
cmp
lea
push
cmp
add
jbe
pusha
(bad)
push
gs
jns
xor
pop
pop
jmp
test
mov
xchg
inc
xchg
ret
cmp
jne
xor
mov
cmp
jmp
pop
inc
push
pusha
pushf
fild
cld
ss
jmp
dec
push
adc
out
adc
mov
imul
std
ret
cmc
jmp
aam
cmp
or
mov
aas
sbb
inc
pusha
iret
cmps
push
mov
xchg
fwait
cmc
retf
lods
sbb
mov
inc
out
stos
pop
jnp
fcomp
daa
and
push
inc
test
xor
aas
repnz
pop
jmp
sub
sub
jp
mov
pop
outs
into
cmps
das
push
jle
adc
pusha
jecxz
and
mov
(bad)
mov
out
popa
jnp
add
xchg
mov
mov
jbe
cdq
dec
cmp
mov
xchg
push
jae
push
aam
inc
outs
mov
arpl
fild
push
imul
dec
mov
popf
add
movs
(bad)
inc
lods
mov
repz
call
popf
fmul
std
mov
out
fadd
mov
movs
pushf
mov
push
inc
jmp
cmps
pop
ror
aas
inc
aad
stos
sub
mov
outs
mov
pop
nop
adc
gs
xor
cmp
mov
sub
mov
push
pop
test
scas
test
jb
in
push
rcl
jg
mov
outs
push
iret
mov
ins
popf
icebp
push
(bad)
rol
cmp
jns
cli
aaa
jecxz
xchg
xchg
fwait
shr
shr
mov
jnp
loope
shl
out
pop
popf
ins
jmp
mov
in
into
push
test
(bad)
adc
or
retf
adc
mov
icebp
inc
pop
jmp
iret
idiv
(bad)
fld
ret
sub
xchg
sub
retf
loopne
repz
mov
xor
(bad)
loopne
mov
pusha
pop
dec
dec
sbb
stos
jl
dec
test
or
bnd
cmp
mov
cmps
ret
or
xchg
pop
and
lock
and
cmp
stos
cmps
xchg
inc
cmc
cdq
jbe
lds
cmc
je
fimul
dec
lahf
pop
push
inc
retf
jne
jmp
sti
mov
test
cmp
cmp
retf
rcl
xchg
sahf
int3
sub
push
lahf
cdq
push
cmp
adc
inc
clc
(bad)
adc
fidiv
(bad)
cld
and
sbb
xor
or
sar
in
mov
loopne
das
or
inc
add
mov
mov
xchg
repz
movs
rol
movs
mov
mov
xchg
cs
cs
repz
cmps
cmp
gs
or
xor
sub
pop
gs
(bad)
popa
int
out
aam
nop
test
inc
outs
mov
sbb
rcr
int3
outs
(bad)
cmp
sub
jle
clc
add
pusha
pop
stos
out
loop
push
mov
mov
aaa
adc
pop
movs
sub
rep
pop
imul
jmp
gs
sahf
and
arpl
(bad)
mov
out
xor
inc
icebp
mov
and
mov
and
sti
push
xchg
xlat
mov
push
cmp
les
pop
data16
add
mov
imul
mov
adc
repz
push
mov
pop
ins
sub
movs
jmp
cmp
jmp
mov
dec
rol
xor
push
mov
or
fldcw
pop
mov
lods
fcmovbe
and
movs
sub
dec
push
cmp
mov
jb
cdq
push
mov
sahf
lods
lahf
(bad)
ja
mov
lods
mov
bound
dec
stc
xor
cmp
scas
psadbw
mov
das
push
push
xor
xchg
mov
psubsw
mov
neg
dec
mov
mov
retf
inc
mov
jg
cli
inc
movs
jno
daa
test
ret
add
pop
stos
fcomp
or
push
ja
aaa
jne
int
scas
lahf
rcl
pop
(bad)
jmp
push
ja
gs
dec
add
or
jbe
mov
mov
jp
and
cli
inc
push
(bad)
pop
(bad)
ins
xor
jge
mov
sbb
or
jmp
int
push
cmp
mov
out
shl
push
outs
int3
sub
inc
mov
pop
cmc
scas
loop
lahf
std
mul
loop
push
ins
cmps
push
mov
jp
repnz
ins
pop
sub
mov
add
pop
lods
in
mov
out
mov
int
sbb
jmp
cmp
cmp
cmp
outs
cmp
sub
push
mov
sbb
dec
and
mov
dec
mov
add
jo
or
mov
popa
retf
pusha
ss
xchg
arpl
test
mov
ja
inc
cmp
mov
add
sbb
loope
adc
jle
rol
(bad)
xor
jle
jecxz
dec
mov
into
push
add
popf
lods
pop
sbb
xor
pop
inc
jg
(bad)
pop
loope
jnp
dec
mov
pop
imul
adc
adc
sbb
cs
dec
fimul
das
xchg
mov
out
pop
js
test
(bad)
jg
hlt
or
or
fnstsw
mov
mov
into
mov
mov
inc
mov
mov
pop
in
(bad)
in
mov
push
ret
sub
push
ret
mov
push
fistp
and
mov
pushf
inc
retf
sbb
cmp
sahf
mov
or
js
mov
sub
call
push
sub
lahf
dec
sbb
xor
gs
push
xor
scas
test
in
mov
and
in
shr
pushf
aam
jns
lods
add
pop
jae
or
jmp
ja
or
std
push
sahf
(bad)
or
mov
ret
or
mov
jmp
pushf
jns
mov
or
out
sub
push
sbb
cwde
idiv
and
inc
cmp
adc
cmp
mov
lahf
imul
sbb
sbb
call
and
push
jl
sbb
mov
or
pop
pop
dec
outs
inc
xchg
pusha
jp
adc
in
aad
movs
cmc
xchg
cmp
adc
dec
mov
icebp
nop
mov
fwait
(bad)
mov
xchg
mov
pop
push
jae
ins
in
call
lds
or
test
lods
push
into
js
pop
fs
sub
sbb
sbb
adc
cld
inc
sub
cs
adc
div
cs
fnstcw
dec
addr16
push
inc
push
lahf
int
pop
cmp
jbe
cmp
mov
jle
mov
call
jle
dec
sbb
mov
int3
bnd
inc
sbb
ja
cli
loopne
pop
scas
inc
mov
aas
add
fistp
mov
dec
pop
adc
pop
jae
mov
adc
out
mov
jle
repz
inc
xor
sbb
out
and
inc
fxch
sbb
xor
pop
lds
push
jl
inc
add
pop
inc
or
xchg
adc
push
sub
jno
pop
push
mov
jno
pop
mov
mov
jecxz
repnz
and
fs
movs
pop
push
fcom
dec
cld
dec
pop
mov
pop
xchg
movs
out
lock
and
sbb
mov
(bad)
jmp
inc
cmp
fwait
sbb
in
sti
and
or
add
ds
aas
sub
add
fwait
xchg
cmp
mov
jecxz
push
lahf
enter
sub
mov
sub
test
scas
fwait
ins
sbb
shl
movs
pop
icebp
push
mov
out
push
out
and
inc
sub
inc
sbb
push
in
addr16
pop
and
addr16
adc
enter
scas
inc
imul
lahf
mov
push
lock
mov
(bad)
loope
sbb
test
pop
or
cs
jge
adc
pop
jge
(bad)
cmc
add
and
pop
mov
jp
and
sbb
mov
aad
mov
xor
pusha
add
sar
test
jle
adc
cs
lahf
sti
or
fidivr
mov
in
jb
sub
push
(bad)
cmp
push
jge
sub
sbb
retf
mov
xchg
add
(bad)
int3
js
xchg
in
sub
jns
sub
repz
cmp
add
lds
xchg
and
es
cmps
je
pop
lods
pop
xor
cmp
bound
aaa
push
mov
aad
in
es
sub
pop
in
pop
(bad)
fimul
xchg
addr16
in
mov
lods
mov
pop
sub
inc
pop
pushf
pop
icebp
fdiv
jg
dec
mov
cmp
mov
or
repz
int
push
xlat
sbb
not
mov
adc
retf
inc
push
adc
cmps
dec
inc
adc
jg
push
xchg
mov
lahf
jecxz
imul
stos
cmp
shr
xchg
sbb
mov
xchg
imul
mov
div
repnz
add
movs
test
fild
int3
and
rcl
(bad)
cld
repz
push
js
push
or
pop
mov
lock
aad
cld
or
test
aaa
mov
ja
jbe
cs
lods
cdq
pop
and
test
dec
retf
push
(bad)
shr
inc
outs
xor
inc
gs
mov
pop
adc
adc
jl
shl
imul
and
outs
and
fwait
push
fsubr
mov
aaa
movs
jmp
bswap
push
push
jg
or
push
(bad)
out
mov
scas
cmp
daa
cmps
sbb
push
loop
icebp
mov
movs
imul
mov
lock
out
push
leave
outs
nop
mov
dec
(bad)
jno
inc
js
add
or
xchg
jae
dec
sub
add
scas
jns
xchg
aam
mov
mov
les
xlat
add
xchg
jp
ja
scas
sbb
(bad)
sub
or
(bad)
cmp
push
add
add
pop
cmc
jns
sbb
ror
or
sbb
repz
in
or
lea
jl
add
sti
lods
pop
icebp
stos
popa
test
mov
inc
and
arpl
in
pop
mov
mov
pop
add
call
lods
cmp
pop
lea
sbb
add
ret
bound
cs
jmp
(bad)
shl
ret
push
dec
inc
mov
(bad)
je
cs
sbb
nop
add
and
shl
out
push
das
xchg
jl
popa
mov
jmp
ret
push
sub
mov
cmp
mov
les
ret
ss
in
leave
add
pop
mov
test
fs
jno
xor
aad
out
cmp
or
sbb
imul
and
hlt
cmp
push
call
repnz
pop
fsubr
mov
mov
adc
into
ret
sahf
jge
dec
mov
imul
icebp
in
ss
pusha
or
cwde
mov
mov
xchg
push
je
mov
(bad)
repnz
test
aam
cld
aaa
sub
cmps
add
mov
lods
mov
and
in
add
sahf
mov
(bad)
push
push
int
stos
(bad)
sbb
dec
loopne
push
mov
mov
jo
sbb
dec
sbb
not
cmp
jle
dec
push
stos
add
das
xor
or
or
out
ret
and
add
mov
mov
out
test
push
sbb
(bad)
mov
sahf
mov
jl
sbb
xchg
out
pop
ja
mov
cmps
aas
out
repz
(bad)
lea
sbb
or
jge
jp
sub
cli
mul
mul
sahf
jmp
test
cmp
out
hlt
cmp
addr16
movs
data16
xchg
jmp
out
add
aad
xchg
aam
push
mov
sahf
mov
jno
xor
jge
add
xchg
sti
sbb
out
push
xlat
and
and
sahf
dec
push
fcmovbe
call
das
(bad)
sahf
fisubr
daa
ins
or
push
or
pop
jp
push
jnp
mov
jecxz
in
fstp
cld
jo
cmp
scas
ins
(bad)
sahf
jmp
mov
add
fwait
(bad)
call
lock
pop
lahf
mov
jl
xchg
pop
pop
bound
(bad)
cmp
test
push
jmp
int3
cmp
push
jmp
imul
movs
sub
lock
movs
sub
xchg
xchg
mov
jecxz
lods
jmp
xor
add
jne
lea
les
movs
push
scas
mov
int
rol
mov
stc
jno
test
xchg
nop
or
jecxz
cli
sbb
loopne
sub
inc
dec
shl
aam
inc
cmp
jae
arpl
mov
push
push
push
cmc
mov
adc
push
sub
or
dec
stos
mov
cwde
and
cmp
(bad)
lock
push
sub
mov
or
out
pop
push
mov
in
ret
xor
mov
fild
out
mov
xchg
mov
inc
or
push
and
scas
push
ret
(bad)
jl
dec
retf
mul
jle
(bad)
adc
push
sbb
fld
mov
in
scas
jbe
mov
mov
or
cdq
sbb
jecxz
lods
je
cmp
pop
enter
dec
aad
psllq
inc
sbb
add
dec
leave
(bad)
(bad)
neg
stos
mov
shl
push
or
jno
cld
cli
aad
mov
inc
dec
movs
addr16
das
mov
cli
jnp
je
pop
push
aaa
not
ja
xor
xor
mov
or
jo
cmp
jmp
enter
and
cld
and
call
jge
ret
cmp
xlat
hlt
push
aad
(bad)
sahf
xchg
jge
addr16
xchg
xor
fild
sahf
retf
movs
test
fidiv
inc
jl
(bad)
pop
adc
sub
repnz
ja
and
add
push
fist
mov
fcom
imul
imul
push
lock
sahf
ins
pop
mov
xchg
add
sub
cdq
imul
addr16
mov
mov
fwait
repz
mov
mov
push
push
adc
jp
inc
ret
clc
dec
push
enter
ins
push
mov
ret
test
ror
test
mov
stos
(bad)
jb
retf
and
clc
leave
pop
fcompp
jp
mov
ja
add
les
push
xor
lods
mov
pop
push
fs
pop
or
(bad)
mov
jmp
movs
mov
aas
stos
mov
(bad)
push
pop
fwait
pop
adc
pop
test
jp
pop
jo
out
pop
cmp
into
mov
mov
pop
xor
cdq
sub
nop
sub
cli
mov
das
mov
sti
inc
xor
jecxz
xchg
scas
mov
ret
or
or
adc
sub
pusha
js
cs
cmp
adc
mov
add
sub
rcr
jg
outs
push
aaa
ja
or
push
lahf
jb
aad
sub
out
xchg
retf
mul
jmp
(bad)
pop
idiv
stos
out
mov
movs
loopne
xor
(bad)
mov
push
(bad)
movs
sbb
cmp
mov
or
jecxz
std
enter
pop
das
mov
push
shr
dec
scas
sahf
pop
push
aas
dec
push
call
je
popf
mov
imul
nop
fstp
jnp
outs
and
inc
popf
xor
adc
cdq
add
call
in
pop
daa
into
ficom
neg
adc
push
cmp
div
push
shl
push
dec
(bad)
mov
das
adc
dec
sbb
cmp
push
aaa
retf
cmp
test
push
(bad)
(bad)
dec
retf
aam
neg
hlt
xchg
arpl
xor
cmp
add
sub
shr
scas
cmp
push
mov
sahf
icebp
cdq
cmps
icebp
lods
and
repnz
cmp
jmp
dec
aaa
jp
inc
add
push
sti
xchg
adc
call
dec
(bad)
dec
movs
int
repnz
add
adc
dec
lea
inc
cmps
pop
lock
psadbw
adc
cmp
mov
add
cmp
push
test
mov
cmp
aam
and
call
xor
dec
test
or
retf
scas
das
xor
mov
nop
jns
adc
sar
retf
add
pop
bound
jbe
movs
jns
mov
sub
xor
cmp
retf
or
inc
cli
fs
aad
enter
leave
dec
pop
push
dec
iret
push
popf
and
je
mov
mov
test
ss
mov
out
popf
fmul
outs
test
push
cmp
push
sub
stc
and
or
rcr
rol
add
mov
sahf
sbb
jo
xor
mov
mov
test
(bad)
and
xor
(bad)
fstp
inc
and
and
adc
mov
(bad)
jle
pushf
pop
loopne
call
addr16
retf
js
xor
mov
out
adc
push
pop
loop
dec
inc
jae
int
push
push
mov
inc
adc
adc
ror
mov
adc
push
dec
push
repz
bound
neg
ins
add
cmp
mov
push
sbb
out
cmp
pop
test
dec
adc
fsub
movs
arpl
mov
mov
xchg
cli
jns
inc
into
xchg
dec
mov
les
mov
movs
cli
out
aad
dec
aaa
aam
pop
ficom
pusha
sbb
fdivr
xchg
nop
stc
dec
fcmovnb
out
(bad)
cmp
fnstenv
and
and
addr16
jno
pop
mov
cmps
inc
stos
enter
mov
aam
or
push
bound
sbb
adc
pop
xchg
cdq
popa
inc
movs
cmc
mov
leave
in
push
je
shr
sub
shr
ret
cmps
mov
push
dec
aas
jo
icebp
shr
scas
add
xor
(bad)
sub
push
pop
push
xchg
in
aam
(bad)
das
cdq
in
jmp
es
lea
sbb
cs
retf
shl
dec
push
adc
inc
mov
clc
sub
sub
movs
mov
fidiv
mov
cdq
mov
pop
cmps
int3
pop
and
les
ret
jle
mov
cmp
mov
retf
or
cmps
into
movs
lahf
js
(bad)
pop
xor
jns
cmp
add
data16
or
call
xor
sbb
jge
and
ja
aad
imul
add
pop
inc
pop
stos
mov
jnp
or
(bad)
stc
hlt
cmps
jmp
arpl
popf
jmp
inc
loop
pop
enter
adc
jmp
push
adc
cdq
mov
mov
into
test
out
jge
cwde
jne
adc
aas
and
fcomp
adc
pushf
(bad)
mov
dec
mov
mov
stos
inc
dec
cmp
mov
lock
hlt
cwde
mov
or
stos
pop
dec
or
sbb
push
inc
or
mov
dec
dec
and
movs
mov
call
jno
push
adc
or
out
in
mov
pushf
in
add
sbb
pop
inc
les
jo
pop
cmove
and
pusha
leave
mov
xlat
popa
int
push
mov
out
std
mov
outs
jnp
adc
mov
jmp
xchg
fwait
(bad)
aas
ffree
mov
ins
xchg
push
mov
sub
push
outs
scas
sbb
dec
loope
push
mov
lea
mov
add
movs
adc
mov
adc
xor
xor
pop
fucomip
adc
cs
xchg
cli
(bad)
bound
dec
fisttp
cmps
mov
adc
fidivr
sbb
fs
sub
mov
xor
aaa
mov
xchg
and
bound
in
and
push
cld
sub
mov
rol
xor
dec
cli
aam
in
mov
cmp
jae
addr16
mov
mov
pop
inc
xchg
sub
nop
push
(bad)
shl
retf
jge
and
je
mov
sub
inc
imul
popa
sub
clc
cld
ss
xchg
cli
in
sub
jg
and
shl
out
scas
pop
outs
push
das
cmp
std
(bad)
push
sub
or
dec
cmps
jle
jae
mov
imul
ret
cmp
test
in
lods
daa
cli
cmps
popa
xchg
fisub
jne
mov
movs
pop
xchg
imul
cmp
loope
pop
jnp
xchg
call
adc
sbb
lahf
loop
shr
cmp
(bad)
jne
clc
fnstenv
or
repnz
xchg
shl
pop
add
stos
cmps
cmovae
and
sbb
mov
push
add
in
cs
or
adc
jmp
shr
jg
leave
call
div
xor
(bad)
in
retf
repnz
(bad)
repnz
add
das
pop
mov
mov
and
jmp
(bad)
sub
dec
mul
out
loop
sub
ret
daa
sbb
or
ret
pop
mov
(bad)
test
xchg
mov
adc
mov
fwait
addr16
push
mov
cli
out
and
hlt
enter
cmps
cwde
andps
mov
std
(bad)
std
xchg
fucomip
push
mov
push
jge
aam
(bad)
fdivr
ss
test
arpl
leave
xchg
das
jnp
push
enter
repnz
jne
mov
xchg
not
or
arpl
pusha
out
nop
xchg
push
adc
mov
popf
jmp
mov
mov
jmp
les
cmps
cli
ret
sahf
aad
xchg
in
push
push
scas
call
pop
cli
lea
adc
pop
sub
pop
sub
cmps
lock
dec
cs
add
icebp
jae
jnp
das
int3
mov
mov
mov
cmp
push
je
or
jmp
or
pop
inc
pop
push
pop
rcr
jnp
jmp
jne
fisttp
pop
mov
ds
mov
jecxz
or
rcl
mov
mov
pushf
mov
add
pop
aad
or
mov
jge
adc
add
dec
stos
jl
mov
cwde
mov
int3
cld
xchg
retf
movs
int3
dec
leave
push
jno
inc
ficomp
cs
shl
popf
imul
aas
sub
mov
test
pop
jp
fisubr
adc
pop
das
jne
cmp
sub
out
sbb
sub
cmc
repnz
mov
push
adc
or
push
retf
and
pop
mov
shl
jbe
lock
jl
cmp
adc
cmp
sbb
aad
test
pop
ror
mov
fst
rol
push
movs
pop
repnz
xor
jns
xor
dec
outs
sub
sbb
hlt
and
shl
out
lods
mov
xchg
mov
lahf
push
mov
ins
or
adc
push
arpl
je
es
push
jns
jnp
ins
fldcw
lods
out
movs
clc
gs
sbb
mov
imul
add
gs
jnp
mov
add
dec
ins
popa
xchg
in
jb
frstor
stos
push
cmp
push
mov
arpl
add
xor
mov
lds
je
sub
(bad)
mov
mov
call
(bad)
stc
(bad)
cmp
loop
scas
jae
jge
test
sbb
xor
sbb
push
sar
pop
or
dec
mov
cmps
and
sti
movs
outs
mov
pop
mov
push
(bad)
add
test
iret
movs
cmp
fadd
inc
ret
aad
mov
idiv
ins
std
xchg
xor
pop
push
rcr
xchg
aad
pop
xor
fld
bound
in
inc
and
movs
cmps
pushf
sbb
mov
pop
dec
lods
not
jne
push
in
cwde
(bad)
movs
mov
ffree
iret
sub
mov
jle
enter
mov
mov
cmp
hlt
cmps
fiadd
fdiv
popf
mov
aad
mov
stc
xchg
mov
cmp
movs
mov
ds
cmp
cwde
mov
sti
push
or
and
mov
sbb
stc
or
xor
mov
test
aad
and
mov
push
or
mov
test
lea
push
jp
outs
sub
and
movups
sub
aad
lds
lods
xor
iret
mov
sbb
jmp
mov
add
jb
pushf
rcl
ret
push
cmp
sbb
cmp
adc
(bad)
clc
iret
pop
mov
fdivr
and
xchg
sub
cmp
lods
pop
xor
fisubr
jle
lods
mov
loop
pop
cwde
mov
add
aaa
lahf
je
mov
int3
mov
or
push
dec
cli
cli
or
in
mov
and
test
mov
cmps
cmp
mov
push
lods
test
add
mov
xor
jns
adc
mov
bound
jle
push
rcl
mov
push
jo
pop
dec
add
mov
pop
sub
or
retf
push
inc
dec
repnz
icebp
add
shl
imul
push
out
mov
(bad)
lahf
fsubr
xor
and
test
call
fist
int3
add
les
lods
call
call
cmc
lods
imul
lds
cmp
cmps
add
leave
sub
je
add
mov
repnz
xor
in
mov
lea
add
daa
cmp
jecxz
into
sbb
std
dec
sbb
jns
icebp
pop
mov
lds
pop
mov
or
mov
jo
popf
sbb
push
or
retf
fidivr
mov
test
ss
mov
sti
dec
das
ins
dec
test
xor
mov
push
jo
pushfw
call
mov
jl
mov
popa
push
xor
jno
fcmove
retf
pop
and
stos
add
daa
bound
xchg
push
fist
cs
test
cmp
gs
jne
sbb
adc
jb
out
ja
sub
aaa
sar
std
cmps
pop
and
and
(bad)
scas
std
inc
dec
pop
xchg
mov
ins
out
dec
and
inc
addr16
sbb
mov
dec
mov
mov
jne
cmp
lahf
bound
jb
push
(bad)
loope
(bad)
mov
je
adc
push
ret
rcr
sbb
je
(bad)
sub
sub
ja
ret
sub
stc
lea
ret
mov
mov
movs
dec
push
push
pop
aad
and
mov
gs
pushf
inc
cmps
jg
loope
scas
or
scas
dec
sbb
push
bnd
lahf
shld
add
mov
call
jo
inc
arpl
jae
ret
adc
or
sub
inc
fs
jge
fldcw
cmp
pop
or
scas
or
nop
mov
jo
movs
xchg
add
inc
sub
mov
xchg
rol
add
pop
jl
or
push
jecxz
icebp
outs
lahf
or
les
mov
rol
add
call
fmul
pushf
loope
xchg
mov
xor
adc
push
hlt
xchg
cmp
inc
js
add
or
dec
movs
xchg
jmp
push
movs
movs
and
leave
push
or
daa
cmp
iret
push
mov
lods
or
gs
sbb
sub
adc
and
fisttp
lods
stc
inc
xor
and
xor
fld
fnstcw
and
lds
hlt
pop
(bad)
scas
add
sub
dec
lods
ret
jbe
mov
sbb
lods
jge
bound
aas
call
fld
or
mov
adc
mov
out
cmp
xchg
mov
jmp
call
push
scas
retf
sub
add
jmp
sub
dec
mov
push
cmp
repz
jecxz
sbb
es
aas
and
push
push
mov
aaa
arpl
xor
adc
mov
sbb
cmc
fstp
fidiv
xor
mov
xchg
mov
inc
jle
push
xor
in
pop
movs
inc
adc
inc
mov
mov
ret
mov
xchg
cmp
daa
jnp
jecxz
adc
enter
mov
mov
mov
dec
inc
inc
enter
fidiv
movs
shr
iret
mov
clc
sub
(bad)
cwde
mov
popf
outs
pop
jmp
imul
pop
xor
mov
cmp
cmp
jnp
loop
fs
mov
ret
cwde
mov
test
push
sub
cmp
xchg
out
xor
xchg
test
push
xor
in
jo
popf
(bad)
clc
ss
pop
sbb
fadd
mov
stos
add
daa
repnz
aaa
test
push
mov
cs
xor
fld
jge
add
push
push
lock
sbb
rcl
sbb
push
mov
scas
xchg
jae
(bad)
push
fist
iret
rcr
jmp
inc
cmps
loop
pop
jo
int3
sub
loopne
out
pop
and
loope
gs
mov
dec
shl
push
test
push
cmp
dec
push
popf
call
enter
loop
dec
ret
mov
and
dec
and
or
repnz
cmps
aam
cdq
enter
fistp
ret
sahf
lods
leave
and
retf
dec
jl
push
icebp
xchg
pop
sub
dec
pop
shr
aad
sub
scas
xchg
ss
and
loope
bound
jb
mov
add
push
xchg
out
movs
sar
test
(bad)
popf
fbstp
popf
xchg
out
aam
test
add
jle
push
(bad)
xor
or
stos
adc
int
add
pop
mov
test
inc
frstor
fisttp
fadd
xchg
out
arpl
xlat
pusha
out
xchg
out
push
outs
movs
ror
push
push
xor
shl
addr16
jno
jne
(bad)
or
fbstp
sbb
add
jmp
jmp
jl
fdivr
sub
sub
into
dec
push
adc
pop
push
or
xchg
sub
fadd
push
xchg
sar
and
fistp
fadd
mov
or
mov
in
shl
cmp
xor
mov
mov
out
xor
pop
pop
xchg
mov
mov
push
arpl
push
push
xchg
sub
mov
mov
mov
out
ins
dec
inc
and
cmps
jns
push
in
das
mov
movs
pop
in
addr16
lahf
addr16
mov
push
mov
test
ja
sbb
add
ficom
xor
int3
xor
sbb
xchg
or
xchg
xor
pop
add
cmp
dec
(bad)
sub
cmps
mul
jnp
into
aad
mov
pop
int
and
adc
and
mov
or
mov
imul
rcr
ins
repz
icebp
out
pop
xor
(bad)
or
mov
pop
push
retf
jns
cmps
push
out
cmps
stos
jp
idiv
jge
popa
xchg
sub
in
xor
sbb
clc
cli
push
mov
in
or
mov
adc
retf
ret
fiadd
pushf
outs
(bad)
lahf
mov
xor
adc
stos
mov
test
mov
mov
add
test
sbb
mov
retf
imul
cmp
sub
in
and
jae
fimul
dec
nop
daa
push
ret
icebp
sbb
inc
es
cmps
fs
maxps
ret
sti
push
shr
retf
ja
ret
xchg
xor
sub
mov
loope
iret
rcr
cld
pop
test
xor
popf
retf
cmp
shl
sub
add
mov
ror
cmc
sbb
addr16
push
stos
mov
push
mov
(bad)
ja
or
icebp
or
pop
pop
pop
fst
sbb
fwait
ja
cmp
inc
repnz
mov
call
outs
sub
adc
mov
(bad)
loope
sub
xchg
xor
sbb
dec
sub
sti
ins
cli
sbb
jmp
gs
sbb
or
call
mov
xlat
aas
add
jb
retf
inc
ss
inc
cmp
pop
inc
pushf
cwde
fmul
in
loope
cmp
ror
cwde
dec
popa
aad
mov
and
test
(bad)
jb
xor
sar
mov
outs
or
xchg
sbb
not
sub
lahf
test
rol
outs
and
push
mov
cmps
stos
je
pop
mov
lock
jae
cmc
jmp
xchg
adc
adc
sbb
sti
jae
add
jg
xor
fwait
adc
add
xchg
xlat
dec
call
xchg
outs
int
inc
jae
mov
jno
sub
xor
xchg
stos
mov
dec
mov
lock
rcl
imul
stc
mov
out
sub
sar
in
loopne
push
ror
movs
sub
ret
scas
out
inc
pop
fidiv
pop
inc
add
sub
mov
adc
or
sbb
test
dec
sbb
sub
je
xchg
movs
icebp
mov
enter
call
retf
xchg
clc
test
fnstsw
fcmovb
cmc
ficom
enter
push
les
cmp
movs
sub
int
shr
jnp
sub
pop
add
push
add
sub
sub
fdiv
scas
fs
lods
daa
xchg
push
jnp
les
mov
dec
inc
or
std
ja
xchg
mov
mov
jmp
sbb
out
sbb
adc
sub
xor
aas
test
fs
and
fmul
mov
shl
nop
push
adc
dec
(bad)
push
int
add
stos
sub
mov
dec
cmp
fst
pop
sbb
stc
cmp
xchg
lahf
mov
ins
or
adc
sub
scas
lea
mov
push
pop
scas
adc
mov
std
(bad)
jmp
ins
(bad)
sar
or
add
outs
das
dec
fistp
sub
dec
jnp
aam
out
mov
push
xor
sbb
popf
leave
out
and
gs
inc
leave
fcmovbe
loopne
pop
scas
rcl
mov
ins
ins
in
mov
hlt
mov
int3
or
test
dec
push
sbb
addr16
in
inc
out
loope
lds
sub
inc
push
jecxz
cmps
or
and
add
in
(bad)
pop
test
sbb
or
mov
push
into
dec
xchg
not
or
pop
xchg
add
(bad)
adc
cmc
test
int
mov
in
ja
enter
sub
mov
jg
in
(bad)
xchg
jns
or
push
jmp
push
pop
sub
sbb
fcom
jp
add
dec
fisubr
xor
loop
loop
or
addr16
mov
add
fisttp
xchg
shl
pop
add
imul
bound
add
cmp
jae
jecxz
sar
lahf
inc
gs
cmps
xor
xchg
test
push
add
xor
ja
outs
pop
(bad)
cs
out
or
sbb
movs
lods
mov
inc
push
bound
imul
fsub
(bad)
adc
iret
fldenv
jnp
or
jge
arpl
in
xchg
sub
call
jbe
mov
sub
mov
retf
popa
into
push
imul
int3
pop
std
cmps
or
add
jge
xor
loop
aaa
mov
xchg
cs
sar
and
jg
rcl
shl
xchg
retf
pop
aam
bound
scas
into
cmp
sub
adc
out
jae
push
retf
jle
gs
and
leave
pop
xchg
sub
dec
call
mov
and
inc
out
loope
and
jle
push
mov
sbb
js
fst
adc
pop
stos
lods
cmp
aam
sub
jge
jae
iret
dec
fwait
call
sar
push
inc
sub
ret
(bad)
fild
jecxz
out
adc
int
sbb
pop
pop
push
push
add
fcmove
ficom
xor
mov
push
les
ins
add
sub
push
xchg
xor
jmp
fimul
sub
pop
fld
or
int
cmp
enter
dec
or
or
in
les
xor
inc
pop
push
imul
rol
mov
add
shr
mov
cmc
fsubr
or
rcl
pusha
arpl
enter
and
inc
xchg
ret
and
adc
fcom
leave
xchg
sbb
jp
aad
jg
sbb
int
imul
xor
push
nop
mov
repnz
jbe
int
mov
add
push
jge
dec
sbb
jne
or
dec
imul
dec
test
xchg
or
addr16
dec
pop
push
pop
push
sahf
(bad)
fist
jne
loope
adc
sbb
xchg
adc
test
dec
adc
loop
daa
inc
int3
inc
loop
shl
adc
and
dec
fisttp
pop
mov
out
movs
mov
and
shl
add
xor
aaa
leave
jmp
scas
push
shl
sahf
cld
sbb
mov
loopne
and
das
dec
int3
ret
dec
xor
movs
loop
jecxz
fld
adc
xchg
fxch
pop
add
retf
fistp
cmp
rcr
shr
xor
adc
(bad)
and
jnp
inc
(bad)
aas
inc
or
jmp
jp
jge
mov
aaa
retf
ret
add
push
fwait
sbb
add
in
lahf
inc
push
jns
retf
into
cmps
lods
inc
ret
xor
jae
push
add
iret
fs
inc
xor
xchg
(bad)
jl
xor
js
rcl
ret
sbb
dec
jmp
gs
test
jno
cmp
test
push
bound
jns
dec
fdiv
das
(bad)
(bad)
jmp
pop
ja
or
dec
sbb
scas
fst
xchg
in
mov
add
popa
rol
pop
in
fidivr
push
cld
repnz
mov
jbe
fldenv
outs
lods
mov
clc
xchg
retf
cmc
push
pop
hlt
in
sbb
iret
push
pusha
fs
inc
test
and
jg
js
fistp
imul
sbb
sbb
popf
scas
jge
outs
lock
aam
out
jo
xor
in
mov
std
icebp
test
ficomp
cwde
push
and
mov
jae
add
jl
leave
xchg
sub
stos
pusha
adc
es
aaa
and
fld
cmp
adc
cwde
cmps
mov
adc
ret
and
arpl
mov
cld
jp
cli
scas
loop
xchg
xchg
mov
mov
adc
int
stos
scas
mov
pop
pop
mul
inc
cdq
test
mov
sub
js
out
cli
jle
xchg
fwait
shl
sbb
mov
sub
clc
imul
or
adc
ret
jmp
pusha
mov
mov
jnp
sub
mov
dec
inc
adc
sbb
fxch
jl
cmps
push
test
(bad)
aas
inc
xor
push
ror
mov
cmp
jnp
mov
jg
scas
lods
cwde
jmp
jg
ja
sub
mov
or
and
aam
cmps
add
add
pop
push
xchg
dec
mov
jbe
sub
cmp
ins
sub
repnz
outs
test
mov
add
lahf
mov
int3
fdivr
in
jecxz
int
fnstenv
popa
mov
enter
pushf
xchg
cmp
jo
pop
or
mov
jnp
fdiv
ins
jb
add
mov
test
inc
rcl
jne
sbb
lods
gs
ds
rcl
rol
adc
inc
inc
sbb
int
mov
stc
in
jecxz
loopne
daa
or
les
popf
pop
psubb
cmc
cmp
aas
mov
lods
jmp
fbstp
test
or
or
int3
pusha
adc
lahf
mov
sub
adc
push
cld
jecxz
(bad)
push
mov
sub
cmp
mov
adc
rol
cli
xor
cmps
push
add
retf
test
out
push
add
pop
add
xchg
test
add
pop
outs
xor
lahf
cmp
mov
lock
sbb
or
daa
retf
jbe
in
pop
pop
or
sar
sbb
inc
push
jns
(bad)
xor
push
sbb
or
mov
ficomp
icebp
(bad)
xchg
jg
(bad)
or
cmp
mov
(bad)
out
add
pop
jno
pop
xchg
pop
(bad)
mov
and
jle
xchg
cmp
(bad)
sti
int3
rol
test
adc
loope
add
push
aas
jmp
push
sbb
xchg
fidivr
shl
jo
std
jno
sbb
cmc
ins
dec
call
ss
cdq
add
in
into
(bad)
shr
xchg
xor
pop
mov
sub
dec
inc
js
sub
sub
cmp
push
in
loopne
xchg
scas
adc
in
or
pop
nop
iret
ret
cmc
sub
or
stos
retf
xchg
pop
retf
int3
imul
arpl
fistp
scas
iret
inc
jne
and
mov
ja
jns
sahf
add
leave
mov
jbe
and
iret
or
in
(bad)
iret
outs
cli
in
jg
movs
xchg
pusha
test
mov
idiv
aaa
push
dec
ja
ret
jge
movs
pop
lods
sbb
mov
in
xor
rcl
outs
ins
call
add
push
mov
fs
dec
adc
mov
shr
call
fiadd
xchg
(bad)
mov
retf
push
push
fstp
xchg
std
mov
xchg
clc
jo
(bad)
mov
mov
std
mov
and
xor
cmp
dec
pop
xchg
sub
popa
test
scas
sbb
push
sti
nop
out
test
test
(bad)
sbb
push
in
cmps
neg
ins
fdivr
int3
sub
pop
xchg
mov
jae
inc
xchg
mov
dec
sbb
mov
loope
mov
dec
pusha
mov
dec
repnz
inc
add
pop
pop
jl
sahf
pop
in
xchg
repz
push
cmp
(bad)
xchg
xchg
fist
xchg
in
sub
test
stos
jmp
pop
ds
mov
aas
cmp
gs
xchg
(bad)
or
jecxz
cli
pop
adc
fld
enter
stos
cld
xchg
jge
mov
lock
and
rcl
inc
pop
cmp
cmp
int3
les
cmps
(bad)
in
sar
pop
inc
fnstcw
or
mov
and
xchg
jnp
in
aaa
imul
out
pop
ss
mov
pop
das
dec
enter
bsr
dec
inc
xor
test
cmp
jle
inc
adc
cmps
mov
movs
jns
cs
xor
xchg
sbb
adc
jne
pop
xchg
jns
push
loopne
lds
ins
mov
dec
in
mov
dec
sbb
adc
mov
mov
sub
repz
adc
mov
xor
jo
xchg
(bad)
jmp
jp
retf
push
sahf
mov
int3
pop
mov
adc
fnsave
and
addr16
jb
mov
adc
xchg
and
add
(bad)
jmp
stos
or
mov
cmp
lods
call
stc
cld
icebp
cmp
cmps
pop
cmp
fcom
pop
aad
lods
and
push
repnz
push
mov
or
ins
(bad)
xor
xor
jle
mov
push
ja
cmp
pop
fs
sahf
ror
inc
das
lahf
hlt
movs
xlat
mov
jbe
and
and
jno
fxch
adc
and
mov
std
loop
and
stos
push
and
jp
cmp
int
xor
sub
shl
push
push
jecxz
sbb
arpl
movs
jle
sbb
pop
cmp
dec
jbe
jb
retf
(bad)
and
out
ret
fimul
cmp
clc
call
or
cmp
dec
or
mov
fst
stos
into
cmc
test
addr16
sbb
lds
adc
mov
jge
(bad)
mov
xlat
or
(bad)
loop
call
icebp
sub
and
or
xchg
rcr
add
stos
jg
mov
inc
jecxz
btc
xor
fs
inc
(bad)
mov
mov
sahf
push
push
mov
push
sub
aam
cmp
imul
xchg
pop
sar
mov
mov
ds
cmc
retf
test
pop
mov
ins
loop
sub
mov
lahf
out
repnz
stc
mov
xchg
rol
int
sbb
mov
xchg
das
cmps
adc
xor
jl
inc
push
daa
ja
sbb
cmp
fimul
xchg
mov
push
xor
cwde
sub
shl
lods
xchg
je
ror
xchg
cmp
sub
das
(bad)
sbb
pushf
dec
push
test
mov
pop
cmp
pop
cmp
inc
and
adc
cmc
or
js
mov
or
sbb
int
call
fwait
clc
sbb
inc
(bad)
rcr
cdq
xchg
sub
and
jno
ret
and
in
adc
stos
adc
mov
and
pop
dec
mov
cmp
inc
pop
pop
movs
push
xchg
(bad)
std
sub
daa
das
repnz
je
mov
cmps
mov
pusha
jae
pop
sub
sahf
pushf
adc
push
mov
in
or
xor
mov
cmc
mov
add
pushf
inc
xor
(bad)
in
jl
and
mov
ins
add
nop
fwait
mov
ins
(bad)
repz
enter
sbb
fstp
cdq
xlat
inc
dec
pop
sbb
jbe
pop
cmp
sar
fbld
repz
jb
xor
push
jg
mov
cmp
arpl
add
or
mov
addr16
adc
icebp
cwde
mov
gs
mov
push
push
mov
mov
outs
mov
addr16
mov
cmp
push
adc
pop
jmp
lock
gs
loopne
std
jg
push
cmp
sub
pushf
fimul
jmp
jecxz
adc
adc
add
adc
dec
fist
movs
(bad)
sub
add
ins
and
xchg
dec
addr16
lods
retf
push
sbb
inc
js
out
movs
or
inc
ficom
and
mov
and
xor
dec
add
pop
hlt
mov
cld
leave
repnz
out
lods
lock
or
pop
shl
and
mov
cmp
jl
pusha
push
cmp
inc
pop
popf
sbb
cmp
cs
rcl
jns
sub
(bad)
out
xor
push
pusha
adc
out
pop
bound
lea
cmp
pop
cdq
retf
(bad)
sbb
fdiv
sbb
ret
sub
add
push
mov
jmp
jp
jns
pusha
mov
xor
push
adc
test
movs
adc
xor
(bad)
aad
adc
movs
movs
sbb
in
int
(bad)
dec
cld
dec
push
add
(bad)
mov
jmp
fstp
leave
or
inc
push
ret
cdq
adc
xor
add
pop
loopne
mov
call
stos
fs
(bad)
xchg
fst
push
sti
out
pop
jle
add
fucom
cs
es
shl
shl
je
mov
pop
mov
movs
test
inc
nop
int3
dec
mov
add
es
idiv
or
sbb
jg
(bad)
fstp
push
fcmovb
or
mov
call
ds
out
pusha
inc
test
jle
test
adc
iret
pop
xchg
mov
ds
ss
repnz
lahf
adc
mov
xchg
outs
popa
adc
jle
outs
inc
xor
or
arpl
dec
pusha
ds
fcomp
fimul
push
xchg
xor
mov
hlt
or
sar
fs
mov
jo
push
inc
or
enter
sbb
push
xchg
adc
test
mov
mov
xchg
popa
in
xchg
out
retf
pop
lds
add
mov
addr16
dec
push
mov
fcmovb
ins
jns
sbb
aam
out
jns
iret
loop
sbb
pop
nop
pop
in
je
mov
popf
hlt
into
pop
cmp
xor
dec
movs
pop
pop
std
mov
daa
movs
push
dec
(bad)
adc
out
mov
in
fstp
(bad)
inc
adc
mov
mov
stc
ds
pop
ffreep
adc
pop
sub
cmp
jecxz
cmps
in
rcl
popa
xchg
loop
xchg
inc
dec
sar
push
mov
mov
push
pop
sbb
sbb
lock
inc
xchg
mov
loop
mov
add
fs
leave
cmps
mov
imul
mov
int3
mov
fs
clc
shr
mov
mov
loopne
xchg
loop
cmp
iret
dec
dec
shl
sub
jmp
fs
pop
scas
neg
std
sbb
sbb
sub
aam
add
ficomp
and
outs
movs
pop
push
fst
xchg
icebp
jb
repnz
js
sub
retf
xchg
pop
(bad)
daa
loop
fisttp
imul
mov
aad
ss
sbb
mov
push
pop
sub
or
inc
cmps
dec
outs
mov
xchg
stos
jmp
cmp
xchg
(bad)
arpl
mov
ret
rcl
cmc
and
sub
ja
inc
xlat
mov
jbe
adc
outs
mov
fild
push
sar
ret
ret
cmp
adc
cvtdq2ps
stc
repz
mov
aad
and
mov
lods
push
sub
fadd
adc
jno
into
cwde
test
mov
test
sub
or
push
fiadd
fsubr
jmp
sub
jl
pop
mov
cld
ds
in
xchg
movs
and
jb
xchg
and
mov
pushf
retf
pop
mov
inc
lea
push
mov
ret
dec
xor
sbb
aaa
dec
jmp
setg
adc
loope
nop
add
test
jo
scas
jle
clc
jbe
jae
stc
mov
mov
add
fcomi
scas
(bad)
int3
sub
inc
addr16
hlt
inc
xor
push
mov
aas
mov
ror
mov
add
cmps
retf
scas
jl
push
jae
out
cmp
sub
pop
mov
cs
xchg
jmp
mov
and
or
jno
outs
call
adc
mov
std
ja
pop
fld
test
mov
and
and
bound
sub
ror
mov
sub
js
mov
adc
jge
pop
mov
and
add
sub
xchg
mov
or
mov
movs
inc
push
inc
mov
xchg
loopne
or
sub
sbb
adc
dec
ret
pop
clc
mov
dec
xchg
push
push
push
data16
cmp
mov
cmps
stc
ss
daa
dec
in
repnz
push
mov
jns
std
clts
push
dec
ja
cmps
int
mov
cmp
loope
out
sub
add
(bad)
dec
js
jmp
cmp
fstp
(bad)
loopne
mov
aas
shl
adc
mov
push
dec
push
cld
in
mov
cmp
int
pop
test
(bad)
in
out
(bad)
scas
and
out
daa
xchg
data16
mov
dec
sub
das
int3
test
jmp
mov
cmp
pop
xchg
dec
sub
and
jmp
mov
mov
cwde
lods
xchg
sahf
mov
test
cmp
mov
pop
or
mov
js
pop
outs
mov
int
(bad)
dec
cld
jle
scas
lods
add
push
push
movs
xchg
ss
mov
pop
repnz
bound
dec
jg
or
sbb
fimul
movs
add
sbb
(bad)
dec
fstp
pushf
cli
sbb
icebp
push
jg
retw
pop
test
push
pusha
mov
lds
jno
pop
movs
ds
and
rcr
jmp
into
xlat
(bad)
xchg
or
and
sar
cmp
pop
or
mov
mov
mul
std
sbb
push
or
pusha
test
stos
and
jb
cmps
in
pop
mov
cmp
mov
cmps
arpl
push
outs
mov
rcl
push
pop
xor
push
jns
neg
cmp
cmc
pop
arpl
int3
or
mov
mov
mov
mov
pop
push
pusha
sbb
ins
inc
mov
scas
cli
fsub
fsubr
mov
(bad)
ret
mov
inc
not
xor
dec
int3
shl
mov
inc
adc
push
cmp
cmps
push
and
mov
mov
out
daa
mov
pusha
jnp
sahf
inc
clc
ins
mov
test
sub
fisttp
sub
xor
bound
aam
xlat
cmp
adc
repz
jecxz
fstp
sbb
dec
fsub
pop
push
jb
sbb
jb
xor
dec
stc
test
aas
xor
dec
dec
inc
xor
dec
mov
out
or
shl
repz
jb
(bad)
rcl
jmp
mov
sbb
push
xor
pop
out
aad
imul
popf
retf
push
mov
arpl
jl
(bad)
jle
xor
test
loop
loopne
fld
mov
out
xor
inc
(bad)
stc
stos
addr16
jbe
enter
(bad)
jmp
mov
iret
ins
int
les
mov
(bad)
ud1
jns
test
mov
push
es
icebp
sbb
cmps
or
icebp
push
xor
mov
jge
adc
mov
push
cmp
add
lods
jmp
into
fwait
push
push
push
sbb
pop
(bad)
cdq
adc
imul
jmp
xor
jmp
outs
or
fstp
pop
inc
retf
retw
xchg
loop
and
sbb
(bad)
xor
in
jg
test
and
in
fwait
sub
cwde
jmp
pop
popa
movs
stos
(bad)
clc
push
jl
in
xchg
jnp
cs
push
jns
cmp
pop
and
mov
mov
mov
scas
xor
mov
(bad)
push
dec
adc
test
pop
iret
hlt
arpl
jns
xchg
jmp
or
inc
retf
fs
in
xor
(bad)
jp
fst
cmps
aam
xchg
xchg
xchg
sub
arpl
inc
xor
dec
pop
in
mov
xchg
(bad)
sub
xlat
(bad)
cmp
adc
fnstsw
lods
arpl
sbb
pop
ja
aam
cmp
in
out
push
adc
out
fs
mov
inc
sub
pop
lods
ss
ret
fimul
mov
inc
xor
std
mov
xchg
xchg
sbb
jns
xor
sub
std
jne
ret
clc
ins
jb
push
(bad)
dec
sbb
enter
push
cmps
inc
ficom
hlt
add
cli
adc
pop
jg
jmp
push
sbb
and
and
sbb
or
xchg
add
and
js
sbb
xor
stc
sbb
bound
xchg
retf
mov
mov
(bad)
cmp
mov
dec
outs
fisttp
in
lods
ds
rol
ja
inc
push
scas
add
jmp
ins
sbb
inc
mov
test
pop
adc
dec
adc
out
mov
mov
test
and
mov
cmp
sub
xchg
mov
cs
or
fist
or
sub
inc
jne
mov
sbb
push
je
and
dec
mov
xor
or
iret
mov
mov
and
mov
imul
repnz
mov
and
push
shl
sub
add
inc
out
pushf
and
xor
jns
push
stc
xchg
enter
(bad)
sub
mov
mov
add
adc
push
jmp
or
jo
and
inc
xchg
mov
xlat
xchg
out
loopne
clc
adc
inc
(bad)
mov
icebp
or
mov
rol
inc
push
out
add
mov
adc
push
mov
mov
les
data16
xchg
cld
fst
fadd
dec
jno
mov
scas
jnp
sub
rcl
inc
stos
sbb
stos
jno
and
mov
inc
cmp
jl
loopne
fwait
or
mov
cli
add
xchg
sub
push
push
popf
arpl
loop
test
fcomp
rcr
dec
cdq
mov
ss
fs
jns
mov
pop
out
popf
dec
xor
mov
test
sbb
xchg
xchg
cdq
aas
daa
das
in
sub
cmp
ss
mov
stc
add
popa
inc
mov
in
xchg
and
adc
cmp
jb
ins
retf
fdiv
dec
fidiv
mov
fs
push
push
push
xor
adc
sbb
movs
sbb
mov
adc
pop
rol
nop
add
sbb
add
iret
adc
inc
or
ja
jl
mov
test
dec
jg
push
xchg
mov
dec
pop
lock
(bad)
repz
jne
repnz
ja
and
or
call
push
mov
aas
cdq
push
cdq
pop
rcl
test
icebp
mov
inc
and
sub
xchg
dec
scas
add
mov
mov
push
xor
ret
iret
xlat
call
js
and
icebp
test
dec
test
out
(bad)
stos
and
ds
jl
popa
sub
call
jnp
ds
bound
lods
adc
sbb
jl
cmp
pusha
mov
mov
and
(bad)
push
out
inc
adc
xor
loop
stos
mov
cmps
call
rcr
jno
sub
test
or
xchg
jb
outs
jp
dec
(bad)
scas
mov
les
clc
call
stc
dec
cs
fist
test
or
shl
sub
scas
dec
shl
clc
mov
imul
scas
movs
out
imul
dec
push
das
lahf
test
fsub
fcom
sub
es
out
pop
sbb
scas
jno
imul
pop
out
push
jp
push
mov
push
daa
movs
addr16
mov
xchg
sbb
pop
cld
sbb
call
add
cmps
jmp
movs
mov
ret
and
fst
movs
cmp
pop
and
xchg
test
xchg
or
ss
pop
or
mov
xor
shl
push
adc
das
pushf
shl
and
lods
push
inc
dec
jae
outs
icebp
jb
dec
ror
jecxz
xor
and
scas
sbb
not
adc
ja
cdq
xor
ror
or
mov
cwde
sub
pop
daa
mov
int
mov
mov
outs
jp
(bad)
js
retf
in
fcmove
dec
jno
sub
xor
pop
pusha
xchg
mov
jecxz
push
push
dec
(bad)
mov
and
mov
mov
ja
adc
movs
mov
push
out
sbb
in
pushf
fldcw
sbb
cs
(bad)
cmc
loope
es
loopne
popa
scas
arpl
cmc
cmp
sub
das
push
call
cmps
push
and
retf
dec
mov
xchg
mov
xor
outs
aaa
daa
(bad)
lds
loopne
dec
std
jmp
jmp
pusha
enter
scas
sbb
call
push
outs
inc
jo
pusha
loopne
scas
mov
xor
(bad)
inc
(bad)
jne
into
inc
sub
mov
mov
push
clc
test
ins
ror
fld
mov
jne
mov
push
inc
jge
(bad)
std
push
jecxz
jo
lods
push
(bad)
sub
daa
rol
xchg
jge
adc
fstp
and
dec
add
dec
sahf
in
clc
(bad)
into
das
mov
cwde
aam
xchg
adc
pop
aaa
bound
(bad)
(bad)
adc
test
push
add
out
pop
pand
lods
jmp
ss
or
pop
dec
mov
adc
inc
push
into
outs
xchg
adc
push
(bad)
int
cmc
inc
aas
stos
fld
push
lods
add
pusha
jnp
dec
aam
jno
sbb
xchg
add
sub
mov
add
fnstsw
pusha
push
pushf
push
les
and
movs
jmp
mov
dec
xchg
(bad)
sti
test
cmp
mov
inc
mov
inc
fcmovnbe
push
xchg
hlt
cld
retf
loop
mov
mov
add
js
mov
fcmovne
enter
dec
loop
jnp
ret
int
cmp
sub
add
inc
xlat
mov
movaps
int3
and
je
out
sbb
mov
fwait
cmc
dec
and
cmp
mov
sub
push
(bad)
sbb
(bad)
xchg
add
xor
xor
sbb
cmc
movq
and
out
scas
jp
in
ins
repz
(bad)
pushf
scas
idiv
jmp
pop
pop
xlat
dec
cmp
pop
jae
int
sahf
push
jae
pushf
cld
sete
xchg
mov
jbe
scas
xchg
push
hlt
mov
sbb
ret
and
dec
jg
mov
mov
aaa
lea
aad
and
xlat
jmpw
push
int3
jo
xor
mov
mov
xchg
stos
mov
test
mov
daa
mov
xchg
aaa
cld
dec
cwde
add
jle
push
xchg
test
shl
dec
jno
stos
call
nop
jno
add
add
sub
adc
pop
mov
or
mov
jg
test
or
and
mov
mov
pop
fsubrp
call
and
jmp
aaa
push
pushf
xor
cmp
jb
or
(bad)
ja
inc
ins
cmp
loope
data16
fidiv
ins
fcmovbe
jmp
cli
push
inc
je
dec
fbstp
pop
pop
cwde
sub
add
in
stos
sbb
(bad)
cli
xor
sub
fiadd
cmp
fild
jecxz
repnz
sbb
pusha
rcr
push
adc
in
and
(bad)
add
mov
mov
sub
jae
push
out
fldcw
push
mov
fdivr
data16
mov
es
idiv
or
cmp
cmp
jp
jb
xor
data16
sub
jne
or
jb
push
pop
out
cmps
outs
test
loopne
push
lahf
loop
lods
push
inc
inc
(bad)
aam
cmps
call
xor
call
mov
cdq
mov
popa
mov
sar
dec
shr
ja
mov
mov
push
neg
push
sbb
and
add
or
cmp
outs
mov
enter
cdq
popf
data16
arpl
mov
add
jmp
xor
push
imul
mov
push
add
xchg
mov
jae
movs
xchg
(bad)
dec
mov
out
xor
pop
push
hlt
xor
xchg
xchg
mov
mov
outs
movs
push
ret
cmps
pop
jne
sbb
jecxz
jge
leave
push
dec
cli
sti
mov
push
scas
jmp
mov
dec
push
in
das
pop
lahf
xchg
add
push
fcmovb
add
cmp
xchg
sub
inc
jae
mov
push
sbb
das
fs
jo
ss
xchg
int
xchg
pop
lock
pop
jnp
and
ss
aad
test
jb
mov
dec
call
jb
or
int3
adc
mov
xchg
and
movs
jg
mov
mov
aaa
bnd
cli
(bad)
aaa
mov
ins
mov
int
cmps
inc
dec
adc
test
or
sub
jp
adc
loop
sbb
mov
and
mov
mov
xor
dec
lock
or
and
scas
lods
pop
pop
dec
ins
inc
ror
pop
stos
mov
mov
fidivr
sub
push
sub
mov
inc
loope
xchg
loopne
ins
xchg
dec
outs
aaa
and
mov
dec
xchg
rcl
sub
sbb
and
arpl
mov
xor
mov
xor
shl
pop
dec
xlat
stos
push
aad
pop
in
(bad)
out
inc
aad
sbb
cmp
cmps
fstp
add
or
mov
and
loopne
outs
mov
std
dec
or
dec
jecxz
in
xchg
ret
adc
mov
pop
sub
loopne
test
or
adc
add
jo
mov
jnp
jmp
mov
sar
inc
mov
gs
sahf
xor
xchg
aaa
inc
xor
xchg
iret
ins
cmp
stos
mov
stos
test
fdivrp
mov
xchg
repz
into
out
cmp
mov
lea
dec
shr
mov
jg
dec
mov
jae
dec
in
adc
ss
pop
xor
dec
test
and
mov
or
dec
xchg
sub
(bad)
out
(bad)
xlat
fistp
sahf
lods
data16
sbb
adc
mov
mov
xor
pop
sahf
out
mov
mov
and
mov
mov
cmc
popf
mov
fist
imul
ja
test
rol
cmp
xor
xor
and
stc
hlt
add
push
shl
jnp
sub
push
mov
jmp
pop
fisub
cmp
and
pop
retf
(bad)
jb
cmp
push
pop
adc
sub
into
popf
addr16
mov
sbb
add
nop
xchg
sub
xor
dec
jl
or
adc
lods
or
or
movs
lods
push
cdq
aam
sub
mov
loop
inc
out
and
ins
xchg
scas
sahf
repnz
lahf
cmps
test
out
xor
jbe
mov
sbb
popf
xchg
aam
and
call
mov
sub
pusha
and
sysexit
ja
enter
inc
cld
retf
jb
shr
out
lock
jmp
arpl
popf
mov
cmps
sbb
and
or
daa
pushf
scas
pop
test
popa
or
inc
(bad)
pop
cmp
ret
repz
cmps
mov
mov
nop
push
pop
sbb
push
fld
and
in
xchg
mov
push
jbe
in
sahf
loope
pop
jecxz
push
push
xor
je
ret
mov
adc
loop
adc
mov
into
mov
ins
mov
sahf
bound
push
nop
dec
mov
cdq
loope
mov
data16
pushf
and
dec
loope
add
lds
jecxz
aad
arpl
ins
jbe
xchg
aaa
mov
pusha
adc
cdq
cmc
gs
jle
lea
sbb
xchg
(bad)
pop
pop
add
in
xchg
jmp
mov
out
enter
repz
je
outs
out
cmps
ret
rol
xlat
ds
arpl
(bad)
(bad)
inc
sbb
jne
pop
sub
leave
scas
mov
out
int
(bad)
repnz
fldenv
sub
repz
pusha
and
nop
cmp
int
xor
cli
jmp
adc
arpl
addr16
cmp
cld
in
adc
pop
cmp
ins
sbb
xor
lods
cmps
repz
retf
retf
xlat
or
add
mov
mov
push
leave
adc
test
es
push
push
add
sub
adc
fwait
cmp
cmp
adc
or
aas
pop
cwde
outs
mov
mov
stc
ja
mov
push
movs
push
call
mov
mov
loop
dec
pop
emms
out
lods
call
mov
into
repz
test
and
out
push
or
inc
mov
mov
loope
inc
push
pushf
aas
mov
retf
mov
jbe
adc
pushf
into
arpl
clc
in
sbb
xor
sbb
jbe
pop
mov
adc
daa
in
or
cwde
retf
sub
xchg
add
pusha
push
cmc
repz
push
inc
test
(bad)
ins
popa
jmp
lahf
add
daa
lahf
push
mov
rcr
jo
call
call
jns
mov
adc
push
in
ret
mov
in
and
sahf
shl
cs
test
cmp
adc
adc
frstor
pop
sbb
sub
push
mov
int3
jno
ret
imul
je
adc
fdivr
sbb
inc
push
sbb
sub
int3
or
mov
jo
stc
rcr
dec
sti
aas
sub
sub
and
out
mov
aam
shr
add
push
dec
fs
je
lahf
pop
add
cmps
xor
pop
in
loope
mov
es
adc
bound
leave
in
lock
jnp
dec
mov
fld
(bad)
and
clc
and
mov
and
jl
aam
leave
lods
nop
pushf
sub
sbb
in
dec
mov
out
ja
adc
nop
xchg
stos
lea
clc
scas
fcmove
inc
fisubr
pushf
mov
ja
sub
mov
sbb
xor
xchg
jnp
mov
inc
jg
stos
dec
add
add
push
mov
pop
jae
inc
xchg
push
lds
out
out
das
in
ins
sahf
cld
push
pop
push
mov
xchg
adc
loope
sbb
sbb
pop
xlat
out
test
jo
pop
ins
ja
and
inc
punpckhdq
sub
repnz
test
inc
pusha
xchg
clc
push
sbb
xor
pop
stos
jl
push
test
mov
pushf
das
out
das
and
dec
fbstp
(bad)
mov
ud0
sub
aas
retf
cmp
push
xchg
or
pop
aaa
adc
mov
jno
(bad)
(bad)
loop
cmp
and
push
xchg
inc
ret
mov
dec
sbb
push
ja
xor
fist
js
mov
shl
pop
add
dec
mov
in
leave
xlat
mov
lea
cwde
mov
sub
push
call
rcr
mov
add
sub
mul
into
ds
push
mov
rol
push
gs
sub
test
sar
repz
jmp
cmp
in
ror
cwde
xchg
aas
mov
dec
cmp
(bad)
mov
jo
dec
ins
fidiv
sar
cmp
adc
dec
sub
test
cmp
sub
cmp
aad
cmp
jg
mov
inc
(bad)
mov
ret
and
pop
push
sbb
not
and
or
jle
push
jge
cmp
cli
push
jno
xchg
leave
mov
jecxz
add
cmp
xor
pop
fcom
add
jle
stos
push
dec
cmp
fld
or
and
push
arpl
mov
std
mov
push
shl
sbb
adc
test
and
push
push
sub
sbb
xchg
jecxz
js
add
popf
(bad)
popa
sub
sub
fstp
shr
(bad)
mov
and
gs
int
push
inc
loopne
jo
cmp
or
sar
ins
sbb
or
push
xchg
mov
test
mov
ins
outs
retf
cwde
ror
retf
jns
cmp
dec
jne
fstp
jl
fbstp
jbe
jle
cwde
pop
pop
push
push
stc
xor
jp
lds
fsubrp
ficomp
dec
imul
mov
push
mov
inc
push
and
push
scas
jle
inc
aaa
(bad)
mov
xchg
dec
mov
sub
pop
test
mov
aas
out
int
ja
fs
mov
out
addr16
movs
daa
push
push
movs
push
retf
out
inc
scas
in
mov
scas
push
sub
iret
dec
cmp
or
dec
add
pop
shrd
cmp
push
test
mov
pop
loope
mov
add
pop
sub
jl
std
aaa
stc
mov
and
mov
sbb
adc
cmps
pushf
sbb
dec
mov
jecxz
inc
add
idiv
jecxz
pop
push
xor
pusha
hlt
out
pop
xchg
add
outs
retf
push
and
and
jle
sbb
jmp
lds
out
xchg
fdivr
ins
lahf
push
push
adc
add
test
popf
das
int3
hlt
pushf
cs
inc
mov
and
add
aaa
jno
leave
add
arpl
dec
pop
retf
pushf
sub
cmps
cmp
jns
sbb
pop
retf
jl
gs
fidivr
retf
mov
pop
jge
stos
dec
ja
imul
or
push
mov
repz
je
dec
push
jmp
sub
pop
and
xchg
inc
add
aaa
ss
sbb
jne
in
cmp
and
mov
xor
pop
or
loope
push
inc
(bad)
cmp
cmc
inc
ss
call
add
sbb
dec
add
adc
cmp
xor
scas
and
jp
pinsrw
add
mov
adc
or
xor
imul
or
xchg
dec
mov
movs
cmps
shr
icebp
sbb
cli
lock
jge
jl
pop
nop
out
js
dec
mov
lahf
pop
(bad)
sbb
sbb
push
xor
push
ja
ins
js
arpl
movs
retf
stos
repz
shl
cmp
out
cmps
inc
fsubr
inc
mov
into
mov
lock
repnz
xor
add
ror
popf
(bad)
movs
push
fisub
and
ror
mov
sti
jnp
xor
out
dec
jne
jns
xchg
rcr
mov
add
loopne
leave
rcl
pop
xchg
mov
je
pop
push
mov
jbe
lock
(bad)
ret
std
scas
xor
jmp
pusha
mov
jo
ins
adc
in
es
mov
clc
sbb
in
retf
xor
sub
cwde
xchg
mov
inc
pusha
loope
push
loopne
(bad)
jmp
add
and
mov
push
add
inc
(bad)
mov
les
mov
jns
je
jmp
push
fs
add
sub
rsm
lods
sub
addr16
dec
push
inc
push
and
lea
xchg
test
mov
sbb
into
test
gs
mov
push
and
mov
cwde
sbb
sar
jbe
and
cmps
rcr
cmps
mov
xlat
test
cdq
jo
stc
push
stos
in
sbb
data16
scas
pusha
retf
lahf
aaa
and
(bad)
push
movs
sbb
addr16
sub
(bad)
mov
fidivr
fld
fsubr
mov
push
sbb
mov
xchg
aaa
retf
data16
or
push
(bad)
je
pushf
lahf
fisub
and
test
shl
adc
push
bound
mov
sub
mov
out
xchg
add
fisttp
in
scas
add
add
push
sti
je
inc
lods
and
int3
push
add
cld
pusha
xchg
and
jbe
jmp
sahf
dec
mov
mov
ret
mov
lock
iret
jo
mov
and
sbb
fidivr
mov
pop
cmc
mov
int
and
in
mov
mov
mov
dec
fsub
xor
push
test
clc
nop
(bad)
aaa
and
dec
and
sub
call
mov
das
sub
push
ins
sub
test
pop
nop
xor
ds
mov
mov
in
mov
jecxz
inc
push
xchg
and
cdq
aam
push
sub
inc
aam
jl
in
sbb
lods
or
adc
retf
scas
dec
in
imul
dec
jmp
pop
mov
sahf
popa
add
cmp
xor
es
xlat
fwait
mov
retf
sub
inc
outs
mov
inc
push
cld
mov
fnsetpm(287
ret
jnp
dec
sub
es
and
jg
(bad)
into
and
mov
outs
rcr
pop
fdivr
cdq
mov
jge
mov
jmp
mov
and
clc
mov
fcom
in
(bad)
arpl
popf
dec
xor
cmp
rcr
popa
mov
add
fdivp
or
pop
mov
xchg
sbb
xchg
aam
xor
jle
add
ins
(bad)
add
xor
outs
mov
jg
scas
repnz
loope
fadd
mov
ret
inc
and
aad
sbb
aaa
sar
mov
sbb
test
(bad)
inc
mov
jecxz
dec
(bad)
scas
or
mov
dec
mov
std
out
(bad)
jns
mov
or
retf
cmc
scas
dec
mov
pop
iret
mov
sub
cmc
mov
push
stos
push
or
cmps
fucomip
mov
jp
jmp
sub
icebp
adc
mov
jnp
pop
sbb
shl
scas
or
sub
jp
jg
das
mov
push
sbb
or
sbb
aad
loope
fistp
leave
xchg
sbb
pusha
dec
push
call
pushf
aas
sti
xchg
mov
bound
sbb
mov
adc
inc
or
cmp
scas
into
inc
fsubr
or
add
cmps
imul
retf
cmp
xchg
call
fstp
pop
cmp
push
pop
stc
sti
pop
jae
les
cld
(bad)
loopne
fbstp
lea
mov
pop
cmc
mov
sti
xchg
fs
add
shr
jae
test
call
dec
aad
xchg
sar
loope
into
jns
(bad)
mov
sahf
pop
push
jle
es
cmp
shl
mov
loop
sub
fisttp
pop
dec
adc
shl
not
jmp
cmc
outs
lock
popa
data16
lea
or
dec
pop
inc
adc
jge
jg
jmp
in
cmp
(bad)
stc
clc
cmps
sub
arpl
addr16
pop
stc
cmps
xlat
popf
push
(bad)
dec
imul
or
out
or
cmps
cmp
mov
sbb
mov
mov
or
inc
jl
not
add
or
xchg
adc
jmp
add
icebp
mov
ret
xor
bswap
ror
jecxz
adc
retf
jle
mov
xchg
(bad)
ror
clc
mov
cmps
clc
jle
dec
aam
adc
fldenv
lock
or
mov
enterw
cmp
cmp
lahf
popf
aaa
mov
mov
es
mov
xor
adc
add
in
inc
cli
push
sub
xchg
sub
inc
pop
rcl
cmps
imul
aaa
jno
daa
aad
sbb
adc
mov
rol
sti
into
lea
daa
jo
xor
cmc
and
sahf
pop
push
mov
(bad)
icebp
call
or
cmp
retf
dec
(bad)
sbb
push
xchg
scas
aad
sub
dec
std
(bad)
jle
test
jmp
or
inc
pop
je
xor
test
pop
cmc
sbb
sub
outs
addr16
or
arpl
push
dec
sbb
clc
aam
mov
scas
ins
adc
imul
add
(bad)
sti
(bad)
adc
jnp
pop
mov
or
sub
popf
pop
or
iret
push
test
adc
push
jns
and
retf
lods
ss
icebp
sbb
mov
sbb
sahf
mov
jb
sub
mov
adc
sbb
cld
xor
das
cmps
and
pop
lds
cs
out
(bad)
jge
jle
ja
clc
cmps
ret
xchg
bound
jno
ins
pop
in
and
ins
jmp
jl
je
pop
fdivr
popa
and
stos
stc
popa
and
test
rol
fdivr
cmp
xor
call
rcl
je
push
xor
fisttp
repz
ins
rcl
adc
xchg
sbb
add
mov
xchg
and
call
jo
push
cmp
or
loope
test
xor
add
int3
lahf
call
fsubp
or
adc
les
cwde
or
inc
mov
inc
imul
nop
(bad)
jnp
(bad)
addr16
or
mov
sbb
push
lock
cmp
mov
pop
adc
xchg
adc
fsubrp
les
xchg
mov
sub
mov
jo
stos
or
lahf
add
scas
sub
adc
sbb
neg
(bad)
jmp
fwait
fwait
sub
pop
push
test
arpl
sub
out
lahf
sbb
xchg
rcl
arpl
pushw
mov
cmp
push
mov
adc
bound
mov
cmp
cmp
rcr
int
fdivr
jg
adc
pop
loope
data16
repnz
dec
lock
or
ins
push
js
stos
ds
iret
iret
inc
loopne
mov
mov
mov
and
mov
ret
clc
lock
sub
mov
out
movs
or
das
daa
ins
mov
and
cmp
in
cmp
push
cli
ja
pop
bound
ret
pop
sbb
inc
jno
inc
repz
mov
or
fs
repnz
fcomip
sub
scas
(bad)
repz
jg
data16
scas
mov
out
mov
aam
cmp
iret
(bad)
aam
jbe
scas
sbb
leave
test
jl
dec
pop
fdiv
or
fnstsw
mov
pop
jle
add
cmc
in
pop
popf
das
test
ins
test
movs
xor
call
stos
push
xor
shl
sub
rol
fsubr
inc
jnp
ret
icebp
cdq
test
pop
in
sub
imul
dec
mov
adc
cld
mov
cmc
cmps
repnz
add
xor
inc
pop
mov
mov
xchg
pusha
leave
sub
sub
int3
popa
(bad)
push
pusha
jo
jmp
pop
sti
cwde
cwde
cwde
clc
add
inc
data16
dec
mov
xchg
add
cld
int3
jmp
mov
mov
fcmovnbe
inc
pop
in
xor
xor
jp
inc
(bad)
lods
in
mov
push
pop
inc
inc
inc
sub
cmp
fisttp
mov
test
cmp
sub
cmp
int3
aam
leave
fidivr
int3
ins
scas
test
lahf
mov
or
(bad)
in
xor
outs
inc
test
test
dec
pop
push
xchg
jge
push
arpl
or
lahf
or
test
js
xchg
int
adc
stos
jns
xchg
test
lahf
int
cmps
and
test
xor
add
push
enter
pop
pop
movs
ja
dec
popf
sub
test
xlat
test
int
cld
mov
lods
or
out
ret
mov
(bad)
or
xor
pop
or
cld
or
test
monitor
jmp
jno
sbb
dec
mov
pop
lock
push
xor
mov
mov
jecxz
lock
mov
outs
mov
mov
(bad)
or
cmps
xchg
imul
adc
and
fisubr
fwait
mov
sub
sub
lods
bnd
(bad)
push
out
mov
dec
(bad)
aas
in
dec
sub
jl
out
scas
dec
es
dec
xlat
mov
loope
pop
repnz
mov
push
data16
or
aad
cmp
jno
xsaveopt
aaa
test
fmul
shl
(bad)
mov
mov
adc
inc
push
mov
jle
loope
sub
inc
sub
sub
les
jmp
adc
cdq
jno
adc
cmovg
or
push
dec
test
dec
mov
push
xchg
loop
inc
push
push
push
pop
cmp
push
push
cwde
mov
in
sub
jp
inc
imul
jae
sbb
xchg
xor
mov
sbb
fist
xor
and
mov
es
mov
jmp
pop
or
aaa
inc
push
inc
pop
les
mov
shr
popf
frstor
mov
mov
jge
shl
sar
push
repnz
int3
jnp
cs
push
lock
pop
push
int3
push
mov
aas
jecxz
fcom
push
push
sbb
out
js
mov
icebp
test
nop
loope
fcom
or
rcr
rcr
fstp
inc
adc
push
jmp
js
test
(bad)
(bad)
das
add
pop
js
shr
rol
stos
aas
mov
cmp
jp
xor
push
retf
adc
jno
sbb
or
xlat
inc
mov
not
mov
mov
xchg
mov
cmp
mov
sbb
cmp
sub
push
cld
iret
mov
aam
jmp
sbb
test
xor
nop
out
pop
sub
sub
xor
pop
jbe
adc
push
mov
cmp
aas
aam
pop
(bad)
push
loop
mov
mov
imul
and
push
dec
movs
movs
mov
xor
push
mov
mov
(bad)
and
jmp
jnp
scas
out
cmp
jbe
cmp
push
mov
sub
jno
cmp
dec
mov
movq
xor
xchg
data16
jg
jmp
fisub
mov
ficomp
in
stos
and
repz
cmps
les
std
mov
fild
in
sbb
call
(bad)
lock
aaa
xchg
aaa
cmp
fistp
pushf
jmp
jae
call
push
repnz
add
inc
xor
cmp
sub
imul
jo
dec
into
loopne
and
cdq
sub
and
mov
inc
mov
add
and
push
es
data16
out
ds
mov
mov
xlat
push
xchg
loope
adc
mov
int3
adc
xor
loopne
mov
(bad)
xchg
cwde
mov
push
sahf
popa
retf
mov
push
cmp
scas
test
pop
push
lods
cmps
inc
ja
add
imul
pop
lods
mov
pop
scas
ret
push
sbb
pop
xchg
lea
xor
in
pop
jno
adc
retf
push
fwait
je
cmps
jp
dec
xchg
(bad)
rcl
dec
das
inc
and
mov
dec
mov
in
or
inc
(bad)
ja
cmps
fild
(bad)
cmp
mov
jmp
mov
xchg
jecxz
repz
jnp
jmp
pop
les
jb
jle
pop
adc
add
xchg
jmp
loopne
xor
shl
inc
cmp
pop
push
xchg
inc
(bad)
fucomi
(bad)
jl
xchg
cmp
bound
dec
repz
push
jg
sub
pop
xchg
mov
add
je
mov
fmul
xchg
fsubr
mov
fldcw
or
inc
fldenv
and
or
mov
nop
popa
and
adc
xor
mov
cmp
sub
push
mov
aas
pop
xchg
hlt
out
dec
pop
movs
or
hlt
or
xor
cmp
and
out
out
ins
loopne
inc
aas
or
jl
rcr
xchg
mov
pop
lea
inc
cmp
sub
and
fistp
ins
pop
lea
add
imul
imul
cdq
push
lea
xor
test
ss
push
shr
push
jp
mov
and
push
and
sub
shl
gs
add
sbb
sub
inc
xchg
cli
repz
in
xor
ins
adc
loopne
push
push
aam
pop
add
mov
mov
(bad)
cli
pusha
lds
fadd
call
jno
xchg
pop
push
lds
xor
retf
mov
sbb
rcl
mov
pop
or
sbb
or
cdq
lods
loope
retf
cmps
adc
inc
xchg
jle
pop
mov
dec
cmps
cmp
sbb
iret
inc
jmp
add
enter
xor
cmps
push
sub
and
(bad)
aad
jp
int
es
loop
pushf
xchg
je
nop
sbb
(bad)
mov
or
jae
icebp
mov
sub
push
pop
fimul
aam
xor
(bad)
(bad)
cmp
lods
nop
add
add
test
fwait
cmp
(bad)
jae
into
neg
popf
nop
inc
sar
(bad)
in
(bad)
sub
loope
call
cli
call
lahf
stc
inc
mov
ins
ins
inc
xor
mov
pusha
shl
add
adc
and
xchg
sbb
aas
int
fnstsw
sti
ja
gs
push
mov
mov
jns
jp
xor
sbb
push
cs
sub
inc
pop
mov
std
fwait
(bad)
cmps
imul
sub
out
adc
ror
cs
lods
jg
pop
dec
add
jmp
jns
mov
mov
gs
cmps
xchg
je
lahf
mov
in
out
jl
adc
cmp
push
je
mov
pop
cmp
les
lock
jmp
daa
in
repz
pop
sub
repnz
fsubr
push
shl
xor
(bad)
retf
ins
pop
ja
and
cmp
inc
jno
push
dec
fdivr
mov
pop
sbb
aam
adc
and
dec
xchg
fdiv
cwde
fsubr
inc
push
adc
mov
enter
xchg
cmp
cli
imul
or
push
(bad)
loop
hlt
scas
xchg
or
ds
sbb
xchg
outs
(bad)
lods
jmp
scas
imul
and
add
inc
inc
mul
or
sub
mov
mov
mov
scas
adc
pop
push
xor
dec
fstp
xor
jg
mov
test
cdq
popa
xor
fadd
pop
xor
mov
xchg
mov
jne
shl
rol
cmp
push
imul
sbb
sbb
push
pop
shl
jae
mov
sub
cmps
mov
pop
in
aam
iret
jbe
sub
es
adc
cli
xor
int3
mov
loopne
mov
mov
lods
pop
push
add
fadd
dec
js
sub
fmul
mov
das
gs
push
pop
dec
imul
mov
cmp
and
fyl2xp1
mov
cld
or
sbb
pop
clc
and
and
mov
push
stos
fisttp
inc
in
in
imul
xchg
cmps
mov
fimul
jge
cmp
js
inc
and
inc
fwait
pop
imul
fdivr
clc
sahf
mov
popf
out
sbb
fwait
xchg
xchg
retf
neg
and
cld
mov
jmp
cmp
das
sub
push
ror
sti
inc
jl
cli
retf
lods
xchg
lss
stos
jge
inc
and
aas
adc
adc
jnp
retf
dec
sbb
into
mov
ins
jecxz
xchg
or
icebp
loope
arpl
or
xor
mov
jne
frstor
mov
dec
mov
cli
ins
xor
pushf
jmp
adc
push
in
gs
aam
sub
loope
or
xchg
(bad)
mov
rcl
pop
mov
jo
mov
nop
pop
int
enter
or
cmp
loope
test
scas
xchg
sbb
jns
jmp
int3
jp
dec
retf
xor
aas
stos
and
jns
push
push
mov
cmps
and
out
std
lods
jne
loopne
mov
and
xor
push
lock
enter
cmp
aad
or
jno
jmp
adc
mov
ret
mov
push
pop
xchg
imul
in
or
inc
jmp
outs
cmps
mov
sbb
nop
rol
mov
cmp
mov
jns
xchg
dec
mov
fist
xor
mov
or
pop
sbb
xchg
mov
adc
sti
shr
test
nop
ror
xor
cli
mov
xchg
dec
stc
cmps
add
fsub
sbb
push
retf
mov
nop
jle
cli
cmp
xor
dec
add
and
jmp
mov
inc
dec
fcom
jno
jge
xchg
dec
ss
mov
clc
cmp
fbstp
jnp
or
sahf
inc
lds
out
cmps
jmp
ror
xchg
outs
dec
aad
jno
bound
and
sub
gs
int3
(bad)
out
mov
adc
xor
(bad)
jp
popf
mov
push
push
xchg
and
adc
or
push
fdiv
xchg
imul
test
int3
(bad)
sub
sbb
clc
stc
dec
mov
bound
pop
js
shl
data16
push
and
imul
lock
mov
mov
dec
clc
inc
cmp
iret
push
retf
arpl
xchg
clc
adc
mov
jl
fldenv
div
xor
mov
popa
cmc
sub
arpl
out
mov
ret
push
dec
shl
adc
movs
aas
je
inc
jae
ss
pop
fsubr
stos
fisttp
call
repz
jbe
bound
arpl
xor
or
or
mov
shl
test
out
mov
aas
xchg
in
mov
out
push
movs
js
(bad)
cmp
cmp
sahf
(bad)
out
fwait
es
push
mov
add
dec
outs
ins
mov
sub
imul
repnz
fist
mov
mov
add
lahf
sub
(bad)
sub
repz
jo
rol
call
sub
or
js
xor
std
xchg
retf
stc
pushf
adc
ret
inc
sub
xor
inc
jae
dec
inc
les
call
xchg
pop
movs
sub
pop
add
cmp
movs
dec
sub
stc
xchg
pop
mov
xor
loopne
push
xchg
cmp
adc
rcl
sbb
or
fnstenv
lods
adc
mov
popa
aaa
inc
mov
xor
scas
movs
pop
jb
jae
xchg
mov
sub
and
repz
leave
pop
int3
test
xchg
sub
fmul
jmp
repnz
add
jmp
in
rcr
out
adc
cli
inc
sub
and
pop
push
lods
cmp
add
call
pop
test
xor
inc
mov
mov
xchg
push
repnz
sub
fwait
xchg
dec
push
aaa
outs
ret
push
mov
xor
js
pop
cmp
cwde
cmp
xor
loopne
fidiv
mov
(bad)
or
dec
and
cli
call
rcl
and
pop
add
lea
xor
in
xchg
(bad)
test
data16
lods
fist
cmps
lds
xchg
xor
adc
push
or
inc
add
inc
fild
ins
sbb
xlat
(bad)
xor
(bad)
aam
xchg
xchg
xlat
mov
enter
push
sbb
mov
xor
sub
mov
mov
add
xchg
mov
sar
mov
stos
adc
jne
es
fisubr
ins
add
(bad)
out
in
pop
cmp
test
stc
call
push
and
and
pop
mov
adc
xor
push
adc
scas
fist
fdiv
imul
out
fwait
mov
loop
es
jns
inc
pop
dec
adc
xchg
cld
test
and
xchg
or
arpl
int3
add
icebp
jno
mov
xchg
pop
push
je
push
add
mov
leave
lods
mov
sbb
cmp
xchg
adc
cmp
cmp
dec
xchg
jno
aam
aam
int
int
mov
pop
fsubr
dec
xor
test
imul
std
mov
retf
jo
jl
cdq
cdq
adc
jnp
ins
and
mov
jb
pop
inc
xor
pop
adc
adc
sub
sbb
sub
aam
(bad)
aas
test
test
mov
push
rcl
inc
push
std
(bad)
and
cdq
pop
push
xor
cwde
or
fadd
fcomp
jg
(bad)
mov
addr16
leave
mov
loop
mov
sub
mov
fidiv
xchg
cwde
push
aad
fisubr
loop
xchg
es
cmp
or
int3
repnz
or
les
sub
xor
aas
std
hlt
pop
jecxz
xchg
aas
mov
inc
movs
lds
mov
xchg
push
mov
dec
push
(bad)
shr
push
cld
jns
add
add
xchg
xlat
std
pop
(bad)
repz
sbb
push
retf
fs
call
or
es
or
sub
mov
retfw
or
add
(bad)
(bad)
pop
test
mov
adc
outs
mov
xor
mov
(bad)
enter
ret
movs
pop
das
addr16
int
pop
mov
mov
in
mov
addr16
add
dec
arpl
loope
xor
pop
jmp
sbb
ins
jbe
stos
inc
inc
xor
pop
push
and
sbb
dec
into
add
jb
icebp
add
xor
jbe
mov
and
jmp
mov
neg
cld
and
push
(bad)
retf
xchg
addr16
inc
icebp
in
xor
enter
lods
pusha
hlt
jae
lods
and
fwait
test
arpl
jl
adc
sbb
iret
xchg
adc
inc
stos
lods
outs
mov
push
leave
jo
fisub
test
sbb
dec
aad
sbb
pop
fdiv
mov
push
push
mov
int
sub
add
mov
arpl
das
xor
fwait
loop
leave
mov
or
mov
mov
sbb
jmp
sub
retf
ja
call
test
mov
xchg
add
sbb
and
aam
out
cld
cli
jmp
lea
icebp
cmc
push
cdq
les
imul
scas
lea
add
jecxz
ret
add
cmc
push
movs
popa
jo
jp
in
mov
ret
fs
stc
scas
loop
inc
mov
imul
mov
push
cmps
jl
icebp
fbld
mov
mov
mov
push
(bad)
sahf
pop
mov
sbb
mov
das
adc
mov
or
lds
inc
sub
add
and
(bad)
out
mov
pusha
imul
push
pop
mov
xor
push
call
mov
dec
inc
jecxz
mov
fnstcw
xchg
sub
ja
imul
je
mov
test
or
stos
test
or
sti
mov
or
mov
out
pop
sbb
pop
jp
inc
push
mov
fisttp
push
and
jbe
inc
mov
aad
fstp
jae
push
dec
push
pop
mov
adc
and
cli
es
hlt
das
add
mov
mov
fcomip
sti
inc
pusha
or
jmp
xlat
test
in
sbb
lods
call
test
data16
lock
pop
jne
fwait
test
pop
xor
and
mov
xor
adc
clc
push
adc
jne
sbb
aam
jg
xor
mov
or
test
retf
push
fadd
push
enter
mov
mov
shr
mov
mov
push
adc
int
aaa
movs
or
push
pop
mov
pop
shl
inc
test
fptan
(bad)
aad
fisubr
push
in
stos
sti
push
sbb
mov
(bad)
call
test
xor
sub
and
fist
sbb
lahf
xor
add
xchg
cmp
out
mov
sub
ret
push
dec
addr16
in
mov
fild
dec
scas
push
not
sbb
movs
test
sub
mov
fnstcw
sbb
jl
loopne
movs
retf
dec
sub
cmp
repz
(bad)
sub
dec
add
xchg
inc
jge
jns
sub
out
jmp
mov
je
dec
xor
in
call
or
icebp
mov
dec
push
mov
push
ret
pop
out
mov
lahf
fst
aas
mov
jp
pop
jp
add
pop
dec
adc
push
inc
add
mov
dec
fs
dec
jl
in
push
xor
daa
add
jb
adc
icebp
sub
cmp
test
or
jmp
ficomp
sub
in
or
mov
mov
call
cmps
sub
or
scas
adc
scas
scas
adc
sub
in
scas
shl
xor
movs
cmp
or
cmp
dec
in
adc
and
call
push
or
and
cmp
loope
hlt
fidivr
mov
and
call
ins
sub
mov
sti
call
retf
jae
loop
push
rcr
retf
rcr
mov
xor
add
js
stos
inc
ret
inc
xchg
mov
sbb
adc
or
sbb
mov
and
int
inc
ficom
add
adc
fwait
mov
shr
inc
outs
sub
ins
jno
push
mov
push
in
mov
push
repnz
jbe
jns
adc
fwait
sub
jmp
stos
out
ret
fst
pusha
mov
lds
xchg
fs
mov
out
jle
pop
nop
fistp
scas
test
jo
pop
fimul
adc
xchg
(bad)
aas
les
pop
pop
aam
or
xor
push
out
cmps
sub
or
loop
mov
das
cs
mov
pop
mov
pop
inc
xchg
(bad)
fwait
je
ret
cld
adc
cli
mov
cld
adc
lahf
mov
arpl
lods
call
xlat
pslld
or
xchg
sbb
push
jno
mov
xor
das
push
push
dec
inc
mov
mov
lods
push
add
pop
add
outs
and
mov
xor
add
cmp
push
inc
cld
mov
sar
push
mov
xor
xchg
je
sti
enter
jmp
es
sub
add
mov
adc
std
std
aad
jno
jl
or
(bad)
push
js
gs
xchg
out
(bad)
push
ins
rcr
push
out
mov
xor
xchg
repz
icebp
inc
or
loop
loopne
movs
int
push
mov
push
popf
add
dec
fcomp
push
stc
dec
fs
jbe
movs
cmp
out
cmc
push
addr16
and
sub
out
sub
(bad)
sbb
sub
int
mov
sub
sbb
fs
mov
rcr
pop
js
pop
jl
aas
or
push
inc
std
adc
xchg
loopne
call
pop
js
cwde
push
ss
pop
or
add
lahf
mov
mov
outs
daa
bnd
hlt
xchg
push
fnstenv
mov
ficom
sub
mov
mov
cmp
jo
or
adc
push
clts
ror
popa
jp
dec
aaa
push
sub
nop
sbb
aad
cs
mov
inc
lahf
mov
jnp
int
mov
enter
fdivr
rol
mov
mov
cmps
in
dec
dec
lock
push
push
dec
or
fld
xchg
sub
test
in
rol
add
scas
rol
mov
int3
icebp
(bad)
fmul
lock
xchg
cmp
(bad)
icebp
pop
ret
sub
out
cmp
out
xchg
add
xlat
sub
push
xchg
push
das
mov
repnz
pop
ja
movs
inc
sub
mov
mov
sar
inc
xchg
(bad)
test
pop
dec
fdivr
pusha
test
mov
in
jecxz
cmp
cmp
call
mov
mov
clc
sbb
pop
hlt
adc
mov
xchg
add
sbb
pop
dec
test
mov
(bad)
pop
xor
cmps
lods
xor
imul
push
inc
cli
loop
mov
jne
jge
dec
mov
xchg
inc
es
mov
cmp
pop
frstor
sub
outs
loopne
fistp
arpl
cmp
ja
cdq
sahf
sti
dec
xor
outs
jb
into
mov
sbb
cmp
xchg
(bad)
jmp
inc
inc
cwde
sub
stos
push
imul
retf
mov
icebp
std
out
int3
neg
mov
mov
xchg
les
repz
ss
mov
lea
sbb
push
adc
test
xchg
push
cs
xor
mov
int
leave
dec
sahf
jge
dec
loopne
mov
push
aas
rcl
repz
push
pop
pop
push
inc
dec
jp
mov
cmp
fs
sbb
xchg
and
xchg
jne
inc
sbb
test
or
push
lds
push
rol
cmp
loopne
arpl
sbb
mov
or
jmp
adc
cmp
fwait
movs
push
ss
jo
nop
stc
push
sbb
xchg
mov
adc
push
das
inc
and
mov
xchg
scas
sti
idiv
mov
int
hlt
jl
dec
jno
add
xor
lods
cwd
neg
mov
add
add
sub
inc
and
(bad)
cdq
mov
jl
add
out
push
repnz
inc
out
sub
sub
pushf
cmp
pop
sub
mov
xchg
fbld
push
iret
push
sbb
mov
or
or
call
inc
add
and
arpl
mov
dec
into
pop
dec
or
and
sub
push
ret
mov
mov
stc
or
pusha
inc
and
jmp
cmp
jg
jecxz
sub
xchg
xchg
dec
movs
test
shr
(bad)
dec
pop
mov
aas
fsub
fild
xchg
imul
push
test
dec
out
jp
sub
sub
cmp
add
add
leave
pop
iret
and
iret
lock
or
pop
lds
test
or
test
adc
sbb
jp
adc
add
cmp
jmp
dec
pop
dec
aaa
lahf
in
rcl
nop
mov
mov
jg
mov
or
cmp
push
fst
cdq
std
add
test
and
jnp
sbb
sahf
inc
sbb
pop
fst
ins
cli
mov
(bad)
out
xchg
je
and
xor
and
jmp
jp
lahf
je
mov
adc
rcl
not
sub
xor
and
mov
out
lahf
clc
ja
test
cwde
mov
pusha
(bad)
push
pop
xchg
xchg
aas
gs
lahf
loopne
xor
rol
int3
jns
jnp
lods
push
push
(bad)
(bad)
test
movs
push
(bad)
aad
xor
pop
add
cmp
add
stc
push
mov
fucomip
mov
or
mov
push
enter
pop
pushf
sbb
in
sbb
or
ficomp
pop
jnp
push
imul
mov
aam
fisubr
cld
test
push
jne
in
jmp
sti
imul
adc
sbb
js
sahf
and
xor
inc
out
and
mov
outs
pop
mov
dec
pop
xor
add
xlat
push
push
mov
push
shr
int3
and
or
in
jmp
out
mov
jmp
inc
jns
jl
lahf
push
pop
cli
dec
outs
mov
sub
or
mov
out
ucomiss
jmp
pusha
mov
out
fs
fwait
das
arpl
popf
je
xchg
rol
sub
sbb
sub
xchg
fsub
dec
div
push
and
adc
scas
std
push
sub
mov
loop
and
add
movs
nop
and
ret
(bad)
pop
dec
ins
loopne
icebp
cmp
sti
jbe
dec
shl
xchg
jmp
ja
jl
or
add
add
xchg
jle
leave
neg
leave
inc
sbb
call
push
sbb
push
(bad)
ret
imul
aas
shl
in
addr16
fwait
sahf
mov
inc
and
add
je
jns
xchg
cli
int
jl
loope
jae
mov
mov
fdivr
pop
fnstenv
call
out
xchg
ret
movs
ins
push
movs
add
inc
xchg
jecxz
mov
loop
jecxz
jns
mov
jge
and
fstp
call
scas
xchg
pop
inc
shr
loope
movs
mov
or
cli
xchg
popf
cmp
mov
fstp
into
mov
dec
repz
jb
daa
xor
std
repz
cmp
push
cmps
adc
add
scas
pop
movs
sbb
mov
bound
js
adc
iret
adc
into
mov
ins
(bad)
sub
(bad)
cmp
pop
pop
popf
sub
xor
push
imul
daa
iret
or
sbb
jne
std
xor
xlat
xlat
iret
mov
cmp
mov
aas
xor
cdq
fld
ins
dec
cld
repnz
sub
arpl
movs
pop
mov
stc
pusha
int3
or
mul
(bad)
std
xor
jnp
add
les
call
dec
jecxz
mov
scas
mov
xor
pop
ftst
dec
mov
into
(bad)
cmp
ja
nop
mov
call
(bad)
jbe
xor
dec
push
mov
ins
mov
leave
in
and
push
sub
adc
adc
cmp
in
sahf
jle
fwait
rcl
enter
test
sub
push
jmp
push
push
aam
cmps
and
mov
pop
mov
or
xor
lock
xchg
mov
ins
mov
shr
rol
push
pop
add
int3
in
mov
xchg
adc
in
mov
and
push
popa
push
icebp
enter
cli
push
out
lahf
add
loopne
lock
icebp
sbb
xchg
sti
je
ficomp
xlat
jle
aad
cmp
es
int
jp
or
adc
jg
pop
fcomi
xor
(bad)
rcl
and
mov
std
push
mov
adc
push
jno
push
call
mov
mov
and
push
or
dec
out
push
mov
movs
pop
jmp
popw
sub
imul
jl
(bad)
inc
or
xchg
push
iret
adc
and
adc
xchg
xor
not
adc
jecxz
int3
jp
inc
xchg
hlt
cmc
pop
adc
and
stc
push
push
sub
fs
dec
cwde
jg
sub
xchg
test
fstp
fstp
(bad)
rcr
push
xchg
les
sbb
out
outs
shr
push
add
test
sub
inc
jne
sub
xlat
sbb
fisubr
cmp
cmp
jns
repz
pop
movs
push
ror
cmc
shr
movs
leave
out
pop
xchg
dec
imul
shl
das
xchg
push
add
retf
pop
dec
xor
push
xchg
sahf
(bad)
cmp
pop
push
adc
jae
dec
hlt
sub
mov
test
or
je
neg
adc
sbb
push
ss
mov
mov
lock
jg
popf
int
hlt
xchg
pop
or
push
pop
bound
sub
mov
sbb
xchg
dec
aas
add
mov
jno
loope
sub
iret
popf
or
jle
loopne
add
mov
dec
rcl
repz
mov
jge
fwait
idiv
xchg
sub
mov
jg
pop
sti
gs
cmp
mov
dec
mov
push
mov
mov
push
push
test
jno
xchg
pop
lds
out
fcmovnu
pusha
data16
jecxz
stos
test
cmps
iret
jmp
or
jbe
loopne
(bad)
pop
data16
jle
hlt
(bad)
sub
pop
ins
xchg
je
inc
inc
cmp
shr
and
and
mov
pop
push
pop
cld
jns
xchg
iret
adc
or
inc
jns
jl
sub
sub
call
or
jl
imul
add
push
jae
mov
add
fwait
add
test
lods
xchg
shl
aam
sub
rcr
jmp
xor
sub
sbb
pop
aaa
call
xchg
nop
push
aaa
jl
mov
jnp
ja
lahf
leave
cmp
jle
ins
sysretw
sahf
or
fcmovnb
lds
jmp
push
dec
pop
jae
shl
or
fisubr
in
cmp
mov
ins
push
push
jmp
add
stos
dec
aaa
lods
daa
movs
nop
add
sar
test
sbb
sti
sub
push
aaa
mov
mov
retf
sbb
cmp
scas
dec
aaa
adc
pop
sahf
xchg
mov
test
shl
mov
inc
fcmovb
or
pushf
nop
call
pop
jmp
push
inc
cmp
cmp
push
ret
add
ret
or
inc
ins
sub
push
jmp
xor
mov
imul
mov
ret
or
adc
icebp
mov
dec
dec
dec
xor
test
xor
test
(bad)
hlt
rol
fs
aad
mov
(bad)
sbb
push
movs
call
fsub
xchg
jbe
aaa
add
das
pop
movs
jbe
cwde
sub
inc
test
frstor
(bad)
fnstsw
movs
xor
adc
inc
jo
jnp
iret
sub
bnd
cmc
mov
mov
aad
push
aaa
jg
mov
mov
(bad)
cmp
and
and
mov
repnz
outs
sub
loopne
push
repnz
imul
loope
ret
call
out
fnstenv
pop
test
push
sar
xchg
mov
retf
xor
repnz
div
ins
sub
mov
push
aaa
pop
add
fild
fdivr
mov
cmps
cld
into
xor
xchg
xor
ror
ss
lds
aaa
and
ret
scas
xor
(bad)
dec
in
inc
cmps
into
(bad)
cmps
xchg
cs
in
mov
add
push
imul
loopne
pop
call
pop
ds
dec
test
push
fwait
pop
cld
stc
xlat
(bad)
pop
out
loop
mov
jg
mov
adc
imul
jmp
xchg
xchg
add
pushf
shl
jo
icebp
push
in
(bad)
jmp
jp
dec
mov
mov
test
jl
pop
les
push
int3
pop
loop
lods
in
pop
pop
pop
mov
(bad)
jb
and
mov
neg
je
push
dec
dec
aad
xor
test
mov
cmp
popa
clc
mov
pop
jle
dec
push
into
loopne
cmp
xchg
inc
test
ret
push
mov
dec
call
(bad)
test
xor
jmp
in
int3
mov
dec
ret
jo
loopne
inc
or
repnz
cmp
call
mov
xor
adc
adc
inc
cmp
and
push
inc
neg
push
movs
xor
sub
mov
int
sar
pop
lods
icebp
xor
xchg
aas
in
or
mov
(bad)
push
mov
fdiv
mov
iret
aam
cld
pop
out
(bad)
div
mov
sub
jle
aam
loopne
xchg
add
sbb
jae
cmp
into
mov
push
shl
jne
xor
xchg
mov
sbb
cmps
cmp
mov
mov
arpl
cwde
jmp
cld
ficom
jno
out
adc
mov
xlat
jge
sar
ror
(bad)
mov
dec
pop
add
mov
test
mov
pushf
xor
and
lock
loopne
adc
shl
jbe
xchg
js
repz
js
jge
mov
in
and
aad
nop
in
mov
mov
in
rol
sbb
ds
push
ins
aas
mov
(bad)
lea
loopne
sahf
bound
pop
xor
dec
or
sub
sbb
repz
out
fs
sub
rol
sbb
or
shr
dec
mov
movs
callw
call
push
push
es
dec
inc
sbb
push
xchg
adc
sbb
dec
pop
aam
or
movs
cdq
cmp
lods
xchg
pop
scas
mov
out
cmp
ja
sub
push
xor
xor
pop
mov
jo
push
mov
sbb
ins
mov
push
jno
sbb
mov
dec
sub
pop
ss
add
jo
int
jp
pop
fld
push
push
retf
arpl
(bad)
fidivr
sti
dec
dec
pop
pushf
push
daa
test
outs
adc
daa
xchg
jno
add
aad
add
test
and
rol
in
int
push
movs
dec
not
jecxz
add
pop
jmp
jb
jnp
dec
mov
mov
add
inc
pop
mov
push
push
or
mov
rcl
or
or
in
stc
test
jmp
inc
and
push
into
in
mov
add
in
or
or
repz
repnz
sbb
push
test
and
arpl
repnz
fdiv
or
xchg
shr
sub
iret
std
xor
add
test
adc
cmc
xor
je
cmc
call
pop
mov
mov
dec
mov
mov
xor
add
cli
pop
(bad)
out
test
inc
pop
mov
iret
stc
jo
mov
or
cs
jno
xor
pusha
push
movs
mov
loopne
fwait
test
(bad)
je
lods
into
and
jl
repnz
es
adc
jb
add
movs
xor
pop
add
cmps
cmp
test
loope
mov
pop
cs
dec
dec
imul
rdpmc
xchg
cs
or
jb
iret
fs
pop
hlt
ins
leavew
bound
aaa
push
inc
fimul
push
pushf
imul
add
cmp
loopne
mov
loopne
aaa
es
mov
mov
pop
push
pop
or
dec
data16
xchg
mov
inc
push
push
jecxz
sbb
neg
iret
bound
and
je
popa
add
and
mov
daa
lock
cdq
jne
push
repnz
outs
adc
stos
mov
fiadd
ins
sub
mov
int
mov
cmp
imul
jle
ret
jmp
outs
hlt
fadd
out
mov
push
mov
out
dec
rcl
push
sub
or
rcl
lds
data16
repnz
test
adc
mov
adc
ins
mov
jb
jp
out
mov
mov
sbb
xchg
lahf
scas
pop
popa
mov
mov
test
data16
test
hlt
loope
paddb
or
fst
aam
jbe
int
mov
adc
xchg
adc
xor
lock
mov
pusha
add
jne
pop
and
push
shr
fwait
xchg
sbb
movs
rcr
pop
pop
loop
dec
loope
ins
xor
dec
xchg
add
call
in
adc
inc
fisub
mov
fs
mov
or
lods
pop
xchg
xor
lock
in
shr
call
xor
dec
fistp
(bad)
lods
mov
sub
and
cmc
or
cld
inc
mov
in
adc
cmps
pop
xchg
mov
test
div
push
xchg
xchg
add
shl
in
push
retf
or
or
js
xor
mov
xchg
ret
movs
fisttp
enter
sahf
pop
inc
pop
push
jl
mov
adc
jb
inc
sub
idiv
and
pop
ins
jecxz
push
dec
stos
fbld
jb
mov
cwde
pop
cs
imul
pop
push
pop
push
sbb
xchg
fstp
scas
clc
pop
lock
mov
or
push
ret
aas
mov
cld
and
mov
inc
int3
shr
and
pop
aam
into
push
mov
lds
mov
cmp
xchg
aas
repnz
adc
stos
pop
movs
dec
add
stos
retf
test
and
(bad)
mov
pop
xchg
js
test
mov
cmp
jo
mov
enter
js
fcomp
movs
mov
sub
mov
ins
mov
cmp
mov
mov
inc
pop
sub
cmp
repz
call
scas
jnp
fs
retf
inc
ret
loop
mov
pusha
cld
sbb
nop
inc
ins
or
mov
iret
jo
mov
xlat
jl
sub
push
scas
dec
inc
jae
pop
push
mov
mov
mov
mov
fidiv
adc
jl
ror
jg
cmp
jmp
fwait
imul
mov
popa
push
stos
dec
fbstp
shl
aad
mov
sub
lods
int3
sub
sub
mov
jb
mov
mov
stos
out
shl
jae
fcomp
xor
and
xor
ja
mov
and
push
aaa
pop
int
mov
mov
gs
add
aaa
add
inc
mov
fmul
mov
mov
mov
xchg
push
sar
mov
pop
ins
mov
and
ja
mov
sahf
mov
stos
movhps
xchg
sahf
xor
fst
ja
idiv
adc
adc
jp
test
pop
adc
dec
retf
jmp
daa
add
(bad)
and
mov
in
adc
rcr
daa
jnp
or
sub
xor
adc
std
jb
sbb
cmp
mov
push
mov
out
and
or
and
and
jmp
out
add
int3
mov
mov
jge
test
sar
jne
aas
sub
cmps
push
shr
adc
cmps
inc
xchg
cmp
bound
mov
idiv
sub
ret
daa
enter
mov
outs
dec
pop
inc
xchg
xchg
jle
movs
or
jmp
sbb
inc
mov
(bad)
cwde
add
fldenv
cli
xor
inc
xchg
enter
adc
leave
and
or
in
or
(bad)
loop
xchg
xchg
mov
xchg
pop
adc
sub
ja
(bad)
clc
rol
cmc
in
ret
imul
ficom
xchg
xchg
(bad)
loopne
jg
jne
push
cmp
dec
pop
sub
adc
dec
sbb
ins
aaa
call
in
out
xchg
mov
or
idiv
inc
fidivr
test
cmp
icebp
adc
or
xchg
aam
mov
rol
inc
clc
loopne
sbb
loop
sbb
pop
xchg
sbb
clc
inc
or
movs
das
push
ja
mov
clc
push
jg
cld
in
rcr
aam
loop
jns
mov
xchg
inc
adc
xchg
ins
push
add
jge
call
outs
xchg
inc
inc
bound
inc
dec
call
add
push
push
test
pop
inc
out
mov
pop
inc
stos
jmp
push
cmp
es
sti
inc
jno
mov
xchg
sub
popa
dec
hlt
cmp
inc
xchg
inc
inc
int
jge
mov
mov
xchg
icebp
xchg
cwde
sbb
sti
and
add
push
mov
sub
mov
xor
pop
rol
sbb
sub
mov
icebp
jb
jp
ja
aaa
dec
out
mov
xchg
pop
(bad)
retf
rol
movs
in
push
sub
and
cmps
xor
sub
pusha
std
movs
enter
jno
mov
or
dec
mov
in
data16
or
jne
push
daa
xor
out
fisubr
aad
pop
xor
retf
adc
ins
add
cmp
jle
jmp
jb
aam
push
popa
xchg
dec
cmps
and
dec
loopne
sti
mov
mov
(bad)
pop
mov
outs
jmp
popf
cwde
dec
jl
push
inc
add
bound
bound
int
inc
in
push
faddp
call
ja
pop
mov
test
cmps
ret
fistp
lods
stos
arpl
push
idiv
pop
aam
jp
dec
mov
adc
pop
out
stos
push
popf
out
mov
fdiv
mov
dec
arpl
mov
aad
(bad)
or
jne
adc
in
add
xchg
or
call
cmp
fcom
xor
sbb
adc
xor
jb
(bad)
das
mov
enter
push
aad
fwait
sub
or
xor
xor
pop
mov
push
daa
int
mov
dec
mov
(bad)
cmp
dec
sub
ds
dec
fcom
mov
mov
mov
or
jno
cmp
mov
push
test
(bad)
mov
lods
jno
push
xor
movs
scas
sub
jge
fbstp
div
ins
ror
dec
fst
mov
push
in
dec
mov
hlt
scas
xor
cmc
das
dec
outs
mov
mov
shl
push
jnp
sub
rcl
cmp
sub
jge
movs
push
lahf
mov
sub
js
mov
loope
fcom
pop
sahf
outs
pminub
in
and
out
mov
add
test
dec
in
mov
push
ja
fwait
loop
or
(bad)
fbld
popf
test
cmp
popf
rcr
mov
mov
fwait
ds
push
(bad)
in
mov
faddp
icebp
add
jno
jae
jp
out
xchg
and
and
test
and
inc
test
repz
imul
push
jnp
out
sbb
dec
mov
lods
les
leave
add
in
dec
push
ss
div
cmp
cdq
loop
push
(bad)
imul
lods
ja
stos
inc
test
mov
inc
inc
pop
test
mov
pushw
fimul
mov
push
pusha
cs
adc
mov
(bad)
addr16
stos
lea
out
jmp
mov
inc
xchg
dec
fst
outs
pop
cmp
test
imul
in
mov
fcmove
cli
fwait
retf
add
inc
jle
mov
call
push
mov
jb
lahf
addr16
(bad)
and
sbb
mov
push
and
addr16
(bad)
ds
scas
out
test
popf
stos
xlat
pop
mov
ret
mov
in
dec
sbb
pmullw
loop
imul
jno
in
lods
xor
fs
lahf
jo
add
mov
sahf
lock
dec
call
bound
push
div
cmps
sar
inc
and
pop
sbb
cmp
xor
out
in
inc
ss
inc
push
fmul
or
fldlg2
jne
fsqrt
daa
int
cmc
add
pop
shl
sbb
lea
mov
arpl
arpl
sub
add
push
pop
pusha
pop
pop
cmc
out
int3
adc
(bad)
clc
loop
loope
sbb
adc
lock
pop
cli
add
rcr
leave
mov
rol
push
les
(bad)
or
mov
(bad)
and
jbe
jmp
test
cmc
vmread
ret
jl
out
mov
mov
sbb
popa
xchg
cs
cmc
dec
outs
cmps
or
imul
shr
jnp
inc
imul
pop
add
fdiv
mov
dec
and
stos
jle
xchg
sub
lock
adc
xchg
sbb
or
cmc
sub
loope
or
pusha
cdq
sti
nop
pop
outs
cli
pop
das
mov
mov
jae
iret
mov
or
jae
xchg
sub
jno
or
adc
(bad)
jmp
repnz
push
(bad)
add
sub
mov
nop
and
push
mov
mov
loopne
mov
out
sub
jle
ja
pop
sub
sub
push
add
or
popf
add
xchg
jbe
xchg
icebp
dec
and
daa
out
sub
cdq
stc
fisubr
outs
inc
mov
dec
test
retf
push
loopne
lds
dec
dec
cmps
mov
pop
xlat
ss
add
pop
(bad)
fbld
sub
jno
ds
(bad)
(bad)
add
mov
add
pop
pop
setbe
mov
fld
sbb
push
inc
push
mov
call
mov
or
ja
outs
ds
je
cmc
stos
xchg
sub
pop
int3
sar
fistp
jo
ret
ins
adc
push
sti
xchg
add
mov
jmp
test
iret
ins
popf
call
imul
mov
jmp
xor
jle
repz
xchg
out
hlt
pop
inc
push
mov
pop
in
popf
daa
and
and
xor
push
cmp
mov
scas
cmp
push
cmp
sbb
pop
and
jb
pop
mov
nop
dec
arpl
(bad)
or
jne
mov
lock
fdivr
std
dec
adc
pop
push
aam
and
mov
call
test
ret
int
int
push
pop
rol
mov
cmp
sahf
mov
adc
add
call
adc
test
jg
fstp
retf
add
out
push
adc
or
mov
sub
jmp
or
shl
mov
inc
lahf
mov
enter
je
or
test
inc
arpl
call
xchg
fcomp
in
push
cli
mov
or
mov
and
or
out
int3
bndstx
jb
xadd
xrelease
cmc
gs
jmp
add
jge
xor
mov
mov
mov
push
jecxz
out
not
stos
inc
in
stc
mov
test
addr16
dec
add
and
jb
mov
add
pusha
ja
xor
dec
inc
pop
mov
cmp
inc
sub
push
or
sar
mov
and
jns
xor
sub
sbb
xor
retf
sub
imul
jmp
jle
int
lahf
lahf
xor
pop
das
loopne
and
inc
ret
stos
adc
mov
imul
lea
fnstcw
jne
mov
pop
mov
gs
retf
in
add
jne
retf
je
cli
pop
mov
jne
xor
sbb
das
les
lahf
jle
int3
push
test
sub
popf
or
in
rcr
fcomp
mov
fst
jmp
xchg
mov
and
mov
test
mov
cmp
pop
pop
in
xchg
xor
fmul
fdiv
inc
xchg
cmp
and
mov
push
sar
jp
sub
ss
cld
cld
jp
fsub
cmovg
jl
jecxz
pop
xor
(bad)
inc
stc
imul
and
ror
or
add
shr
lea
rol
test
test
dec
pusha
sub
movs
loope
dec
xchg
retf
xor
call
repz
or
push
out
jmp
mov
inc
push
fwait
movs
in
imul
dec
add
push
xchg
cmp
fs
jg
rcr
rol
mov
jno
outs
leave
xor
clc
sub
repnz
push
xchg
jb
inc
and
rol
(bad)
push
mov
aaa
ss
stos
mov
ins
push
mov
mov
adc
mov
inc
hlt
loop
add
cmc
ss
mov
inc
pop
xor
cmps
and
das
pop
scas
or
pop
adc
xchg
and
adc
and
rcl
cmp
repnz
loope
adc
(bad)
jp
mov
movs
ret
cmc
scas
retf
out
(bad)
pusha
or
test
enter
fdiv
or
pop
pop
cmps
ins
pop
sbb
pushf
push
fnstcw
adc
xchg
inc
pop
inc
fcmovnb
movs
daa
das
mov
popa
mov
out
imul
sar
and
lahf
cmp
push
add
int3
or
stos
sahf
je
retf
jecxz
and
jo
loopne
mov
cmps
mov
popf
jns
bound
aam
xlat
sar
lods
aad
std
out
pop
scas
gs
in
popf
add
xor
push
gs
cmp
push
pop
jmp
cmps
or
xor
mov
ja
jmp
adc
sub
cld
mov
test
addr16
and
hlt
jbe
call
mov
ins
pop
xor
pop
in
and
pop
ror
mov
jne
rol
loop
rcr
xor
xchg
mov
in
movs
mov
fadd
outs
imul
add
push
pop
or
mov
cdq
pop
add
xchg
adc
fisub
cdq
popf
or
arpl
jno
test
adc
and
mov
das
mov
push
(bad)
jle
or
add
xchg
les
mov
add
out
addr16
adc
call
js
pop
sub
cmp
push
xor
repnz
retf
cmp
shr
mov
cdq
mov
or
xchg
in
push
inc
stos
out
or
or
xor
adc
sub
jb
and
add
mov
mov
sbb
dec
ja
mov
in
js
mov
scas
aaa
adc
ret
aaa
cmc
add
rcpps
and
jmp
mov
sub
cmp
je
push
jp
inc
lods
jg
(bad)
xchg
jge
pop
sub
pop
movs
jne
(bad)
iret
fwait
mov
or
sti
imul
cmps
ret
xchg
lods
test
mov
mov
in
not
adc
out
pop
xchg
cld
push
and
mov
or
sub
test
sbb
out
aas
jne
jmp
(bad)
push
xchg
sbb
inc
cmp
leave
add
inc
push
jle
mov
sub
adc
sbb
cmp
ins
mov
stc
stc
call
fldenv
mov
jmp
mov
iret
repz
or
mov
fcomp
push
(bad)
bound
xor
mov
fcmovne
aas
cmp
jmp
cli
shl
stos
cld
popa
mov
es
and
inc
outs
cmp
and
stc
imul
or
out
movs
sub
mov
mov
fcmovu
adc
loopne
scas
inc
in
loope
xor
add
retf
sub
adc
daa
pop
adc
push
or
lods
retf
mov
mov
pop
cmps
fs
out
data16
shl
retf
xor
jp
leave
jge
daa
int
test
ja
iret
or
sar
(bad)
repnz
sub
loope
in
add
jae
stos
movs
das
pushf
aad
stc
sar
dec
cmc
pop
or
and
mov
mov
mov
stos
inc
fs
pop
sti
cmp
repz
cmps
shl
add
xor
mov
mov
jge
adc
sbb
lods
push
fbld
inc
imul
push
data16
lods
js
or
or
jnp
pop
retf
jecxz
cmp
push
scas
ins
fbld
sbb
outs
out
mov
ins
inc
and
mul
and
adc
sbb
cmp
scas
test
push
(bad)
out
call
or
ror
pextrw
ja
in
or
sub
push
mov
out
inc
pop
mov
push
jmp
push
add
mov
add
mov
fidivr
sbb
mov
push
adc
jbe
pop
in
xchg
sub
movs
cld
mov
mov
mov
jnp
inc
scas
popa
push
inc
jg
scas
mov
dec
sub
inc
cmp
repnz
out
sahf
(bad)
lea
loop
jno
iret
inc
addr16
and
mov
jmp
shr
inc
push
iret
call
div
cmp
jno
mov
(bad)
popf
pop
jle
fwait
dec
mov
ins
inc
xchg
outs
pop
sub
fs
mov
enter
faddp
adc
loope
xchg
pop
jo
fadd
jns
dec
jo
mov
(bad)
pusha
add
repz
cmc
mov
shr
stos
pushf
clc
xchg
push
add
push
fimul
mov
pmaxsw
imul
or
lock
pop
dec
out
fbld
cs
or
cld
cli
fild
movs
shl
dec
or
xor
imul
push
(bad)
cwde
cwde
les
sahf
jecxz
pusha
push
loop
test
test
sar
(bad)
adc
dec
sub
mov
dec
jmp
xchg
test
fsqrt
mul
xchg
pop
add
inc
pop
mov
ja
lods
push
std
out
movs
test
mov
dec
daa
adc
and
outs
mov
scas
jge
(bad)
jb
sub
inc
fisttp
push
and
jnp
rcl
jae
sub
cwde
js
retf
jg
retf
bound
xchg
loop
test
cmp
dec
shr
lds
fnstenv
push
imul
xchg
xor
pop
dec
jmp
dec
push
xchg
and
adc
in
inc
dec
cmp
(bad)
dec
xchg
icebp
icebp
push
cs
aam
adc
pop
cmp
fcomp
push
out
inc
sbb
inc
in
pop
stc
mov
dec
jecxz
dec
rcr
sub
fistp
xor
add
aam
(bad)
nop
test
ins
iret
enter
dec
add
test
pop
dec
and
jne
movs
loope
stos
cmp
mov
cwde
jg
push
mov
cmp
mov
dec
test
push
ror
fwait
popa
adc
and
xchg
ds
call
and
xsha256
cmps
push
push
add
or
cmps
xchg
cmp
xchg
jg
mov
lea
movs
les
cdq
xchg
nop
push
add
gs
mov
push
(bad)
cmp
stos
mov
mov
jmp
push
push
sub
inc
fdivr
inc
push
inc
arpl
and
fwait
push
cmps
xchg
lock
or
xchg
pop
sbb
mov
hlt
pop
cmp
push
adc
jnp
scas
lea
fiadd
nop
sbb
sbb
imul
call
pop
imul
in
add
cmp
pop
push
and
pop
and
in
outs
leave
mov
xchg
cdq
adc
mov
outs
inc
js
xchg
xchg
pop
leave
xlat
dec
cwde
jae
and
jg
out
mov
add
push
push
cs
mov
and
mov
pop
and
lods
daa
fstp
and
jno
dec
cmps
dec
pop
and
popa
push
jp
mov
pop
or
fidiv
test
stc
test
push
pop
xchg
add
test
(bad)
cmp
test
push
fbld
cli
adc
and
or
stos
inc
jmp
fnstsw
div
push
or
in
pop
aaa
mov
inc
sub
into
int3
adc
add
xor
stos
test
stos
adc
aaa
imul
push
cmc
test
mov
repz
jmp
aam
out
pop
repz
adc
jbe
adc
movs
push
xchg
(bad)
pop
je
or
je
pusha
scas
pop
(bad)
and
dec
outs
xchg
out
and
add
jmp
xor
adc
or
(bad)
shl
and
pop
cmps
lods
pop
and
hlt
mov
sub
jo
mov
jns
(bad)
repnz
scas
(bad)
pop
add
mov
rcr
mov
jns
sbb
and
(bad)
mov
push
push
test
mov
sar
shl
mov
loope
inc
dec
jg
(bad)
jmp
and
popf
mov
popf
fisubr
addr16
jl
xor
push
mov
mov
or
jb
cld
adc
mov
popf
imul
add
inc
sub
(bad)
fs
fist
cs
popf
inc
add
mov
rcl
pop
in
cmp
(bad)
cmps
jb
retf
jl
scas
xor
or
mov
adc
push
push
add
and
cwde
cmps
inc
cdq
push
in
cmp
mov
sbb
daa
or
jle
pop
xchg
bound
pop
movs
test
push
and
lds
dec
dec
test
shl
lods
push
cwde
movs
push
daa
imul
ins
jb
call
xchg
dec
and
pop
xchg
xchg
cmp
ds
jae
jp
inc
dec
aam
push
fsub
lea
jbe
(bad)
cmps
ja
movs
out
test
in
sti
mov
enter
inc
in
arpl
es
aam
pop
mov
add
shr
xchg
sub
repz
push
loope
test
outs
jns
inc
aad
iret
fist
xor
int
push
sub
push
or
dec
nop
jnp
shr
jle
cmp
shr
mov
mov
mov
pop
adc
xchg
sar
aas
fild
repz
or
cmp
sub
movs
movs
xchg
xchg
jp
or
shl
ins
aam
add
push
sub
xchg
cmp
or
mov
mov
icebp
pop
mov
xchg
stc
and
mov
daa
cmp
pop
clc
xor
push
mov
pusha
mov
daa
(bad)
and
stc
pop
adc
aam
adc
mov
mov
sub
aas
fwait
jmp
add
mov
mov
jecxz
inc
mov
(bad)
or
jmp
jno
cmp
data16
sub
das
push
or
jg
xchg
dec
xlat
loope
and
xchg
inc
pop
imul
(bad)
sbb
dec
sahf
sub
inc
mov
jmp
xchg
(bad)
hlt
or
dec
lock
mov
dec
call
iret
test
jp
popa
stc
push
sbb
adc
fs
sbb
dec
xchg
aad
jg
or
sti
mov
hlt
and
inc
lods
dec
xlat
mov
fdiv
into
lds
rcl
jmp
pushf
hlt
jnp
out
clc
mov
and
lahf
repz
fcmovnu
jp
xor
sbb
leave
pop
dec
sbb
repnz
dec
(bad)
scas
jle
cmp
mov
aaa
sub
push
xchg
add
adc
(bad)
and
mov
pop
mov
adc
repz
(bad)
gs
(bad)
add
cmps
add
add
sar
or
cli
popa
cs
fs
je
or
ins
pop
sbb
sub
imul
mov
cs
mov
inc
or
dec
dec
sbb
leave
jae
ror
pop
jo
outs
pop
cmp
ds
sbb
fidiv
rcr
fstp
xor
jp
inc
jb
out
lea
push
div
and
cmp
test
dec
test
test
stc
cwde
ret
sbb
dec
mov
call
push
out
pop
and
cld
ror
cmps
dec
imul
(bad)
ins
pop
mov
mov
iret
cwde
xchg
repnz
xor
and
mov
ins
lock
sub
aad
mov
pop
scas
dec
stc
pushf
rcr
scas
sub
inc
ffreep
push
mov
fimul
fisttp
es
xchg
fimul
pop
or
and
sub
mov
ret
jbe
(bad)
cs
push
cmp
bound
dec
mov
push
in
gs
fadd
and
add
neg
inc
xchg
test
pop
scas
xchg
mov
sub
leave
fbld
clc
push
jp
jle
add
out
imul
mov
(bad)
jae
ror
mov
add
movs
js
ins
or
sbb
(bad)
ins
dec
jbe
xchg
pop
jmp
pop
inc
cmp
das
je
push
and
jb
fwait
sbb
leave
outs
outs
movs
fsub
xor
retf
and
pop
mov
popf
test
inc
pop
imul
js
fidiv
push
(bad)
scas
fsubr
leave
xchg
or
enter
mov
movs
cmp
sbb
lahf
dec
aas
popf
jb
mov
aam
add
and
bound
test
mov
lahf
pop
loopne
addr16
imul
xor
sub
pop
add
xchg
imul
fnsave
(bad)
fmul
push
xor
push
cdq
dec
test
cdq
xor
jno
loopne
and
or
popf
cmc
adc
fnstcw
jb
xchg
xchg
rcr
test
mov
loopne
dec
mov
pusha
jl
cmc
repnz
lahf
test
jo
popa
inc
xlat
sub
pop
test
mov
bnd
adc
cmc
cmp
loopne
inc
sub
cs
push
or
mov
adc
and
sub
push
xlat
loope
sbb
or
fwait
jle
es
mov
fist
call
mov
popf
pop
pop
aam
lods
mov
push
fs
fld
ins
jns
repnz
and
(bad)
mov
cld
daa
(bad)
dec
sub
jmp
imul
dec
scas
std
hlt
enter
sub
cmps
mov
popf
hlt
mov
mov
add
sub
out
mov
pusha
xchg
jmp
test
test
mov
xor
cmp
add
not
adc
push
sar
pop
ins
cmp
lahf
pop
pop
add
mov
shl
sbb
push
leave
dec
pop
outs
inc
mov
xchg
mov
xchg
ss
ficom
das
or
push
retf
mov
sbb
js
inc
ja
pop
ss
mov
imul
lock
and
mov
pop
mov
(bad)
and
jb
scas
in
dec
cmp
mov
add
inc
lea
push
mov
pop
xchg
mov
jns
cmps
bnd
test
sub
call
pop
mov
mov
scas
sbb
mov
inc
out
add
test
pop
xor
(bad)
hlt
das
adc
ret
popa
push
push
imul
mov
(bad)
xor
xchg
das
cdq
or
into
mov
scas
call
shl
imul
sub
dec
int3
scas
jae
push
daa
daa
movs
adc
mov
xchg
sub
lods
fsubr
sbb
cmp
add
out
jo
mov
push
and
aad
in
push
xor
leave
xchg
popa
push
cmps
fisubr
es
shr
pop
out
sbb
sub
and
adc
xchg
jbe
sbb
dec
dec
cmp
jae
repnz
repnz
std
jl
mov
xor
jnp
cmp
mov
lds
inc
or
add
jo
pop
adc
enter
mov
jp
and
mov
cmp
imul
adc
pop
pop
inc
inc
lods
mov
xchg
push
das
mov
or
aam
jno
pop
fmul
pop
xor
jl
dec
push
mov
jbe
loop
mov
movs
inc
repnz
xchg
adc
pop
xchg
fidivr
cmps
inc
addr16
cmp
push
inc
repnz
fild
(bad)
gs
in
ret
xor
or
out
lds
in
lods
mov
dec
es
in
cmp
push
icebp
aas
into
stos
out
aaa
fisub
pop
mov
xchg
cdq
sahf
jbe
(bad)
jb
clc
ins
dec
jno
in
mul
mov
add
cmps
out
das
jo
xor
lahf
jmp
ins
add
loop
xchg
outs
icebp
cli
mov
jecxz
ja
fisubr
mov
push
push
mov
pop
dec
rcr
pop
and
push
cmp
int3
(bad)
lods
das
jnp
jp
or
arpl
dec
pushf
jle
les
je
mov
and
dec
(bad)
sbb
test
out
xor
inc
sbb
cdq
mov
dec
mov
les
(bad)
test
repnz
xchg
ss
sub
xchg
cwde
xor
lods
stos
hlt
ja
lahf
lods
out
pop
inc
or
inc
adc
test
scas
and
mov
sbb
xchg
sbb
loop
pop
add
sti
lods
jl
in
stos
add
mul
adc
rep
out
push
cdq
lock
call
clc
lods
repnz
icebp
icebp
addr16
lahf
jl
mov
scas
cmc
mov
pop
sti
cmp
dec
loopne
add
sbb
leave
lods
cdq
or
ins
fiadd
repnz
push
cs
or
sbb
jmp
cmp
rol
xchg
ret
jmp
mov
add
test
jp
repz
das
and
cli
pop
sub
pushf
push
ja
dec
imul
mov
sbb
add
cmp
cmc
loopne
cmp
push
push
out
fnstenv
(bad)
pop
cmc
dec
stos
and
xor
mov
ins
fsubr
jae
mov
ret
retf
sbb
outs
out
lods
gs
xchg
push
ret
xchg
xchg
ja
shl
inc
aaa
sbb
shl
es
and
or
mov
sub
(bad)
jg
imul
dec
dec
in
xchg
jne
inc
je
retf
push
sub
add
mov
or
and
mov
retf
into
inc
sbb
or
dec
fist
(bad)
lock
sahf
pop
sub
jne
xchg
fs
rcr
mov
rcr
ret
jmp
cmp
push
sbb
fs
leave
pop
push
nop
aad
add
cmp
fsubr
nop
xchg
(bad)
and
movs
punpckhdq
push
or
gs
(bad)
sub
retf
les
leave
sar
jmp
push
sub
pushf
add
sahf
je
cli
mov
out
gs
clc
imul
cmc
sub
dec
mov
dec
test
js
and
adc
sti
add
loopne
retf
jmp
out
test
mov
ret
inc
add
rcr
inc
hlt
cmp
xchg
push
test
jp
imul
mov
call
sahf
scas
pop
out
sub
or
scas
hlt
xor
aam
repz
cmps
stos
movzx
ss
pop
cmp
and
push
rcr
mul
mov
add
call
dec
cmc
out
push
xchg
mov
mov
cmps
adc
mov
sbb
retf
pop
stos
ins
xchg
push
xchg
mov
push
call
in
aad
(bad)
mov
xchg
(bad)
pxor
fdiv
sub
les
and
or
sub
adc
jb
and
sub
pop
arpl
(bad)
imul
add
mov
nop
mov
xor
out
div
mov
cmp
mov
jecxz
into
pop
mov
cmp
data16
pop
sar
sub
cwde
xchg
mov
lods
fs
cmp
mov
imul
cmp
jae
xchg
jae
push
fisttp
pop
jl
pop
hlt
mov
xchg
add
in
cwde
mov
or
(bad)
jecxz
dec
loopne
call
in
xchg
ficom
dec
ds
loopne
call
xchg
outs
mov
mov
or
cmp
movs
(bad)
pop
imul
stos
es
sub
mov
out
jge
rcr
ds
and
fmul
mul
xor
hlt
test
test
mov
pop
(bad)
sub
js
jl
add
pop
jle
lds
(bad)
in
rcl
std
aas
add
cmp
rol
mov
inc
push
call
out
imul
pop
es
mov
dec
cmp
fild
pushf
adc
rcr
sbb
mov
int3
sar
push
sbb
repz
pop
inc
test
arpl
stos
pushf
cmp
jge
stos
xchg
jl
into
mov
lea
movs
call
adc
arpl
xchg
(bad)
cmp
push
int
into
push
out
jmp
(bad)
mov
arpl
icebp
xor
cld
cmps
mov
cmp
mov
mov
mov
dec
mov
or
(bad)
and
xchg
stc
cmc
lds
mov
cmp
popf
mov
int3
div
jae
xchg
aad
data16
test
sbb
(bad)
pop
sbb
cmp
sub
inc
loop
movs
push
in
pop
aam
jecxz
cmp
sar
jns
pop
cli
push
jnp
add
push
sbb
xor
lock
les
inc
pop
dec
rcl
adc
cmp
xchg
leave
call
adc
add
inc
in
push
pushf
add
mov
(bad)
vmread
mov
stos
(bad)
popf
repz
fcomp
ret
out
mov
adc
scas
sbb
mov
sbb
add
fild
movs
call
dec
ret
nop
ficomp
and
arpl
inc
retf
and
push
test
call
out
aas
call
rcl
js
cmp
mov
xlat
mov
mov
cdq
xor
aam
in
push
dec
in
jp
push
dec
aam
xchg
jbe
push
pop
(bad)
out
clc
jle
adc
jne
mov
fs
cmp
cmp
mov
lods
inc
(bad)
and
test
icebp
pop
das
call
add
stos
in
scas
sub
popa
lds
jp
mov
jmp
movs
mov
dec
(bad)
(bad)
in
into
adc
and
jbe
jmp
xchg
imul
ret
ffree
dec
fild
xchg
aaa
mov
out
dec
sub
(bad)
popa
out
(bad)
mov
jl
arpl
aas
out
pop
gs
and
sti
cmp
cmc
jb
mul
scas
sub
push
std
shl
jbe
cs
cmp
mov
mov
jp
iret
sub
inc
ret
push
dec
in
imul
mov
and
pop
loope
jbe
xchg
pop
idiv
mov
cmps
ins
movs
lea
or
cdq
mov
or
test
jg
jae
mov
mov
sti
and
push
jae
inc
(bad)
or
(bad)
xchg
push
push
frstor
ins
dec
cmps
and
cmp
xlat
(bad)
cmp
out
test
xor
jae
loopne
test
xchg
test
jp
xlat
or
push
mov
jp
cli
mov
gs
loop
and
push
pop
mov
adc
scas
dec
mov
shl
mov
in
xchg
jge
test
cmp
jbe
add
adc
jne
rol
add
add
add
fdivr
test
call
cli
mov
hlt
pop
mov
mov
(bad)
jle
cmps
jno
aas
fucom
jecxz
(bad)
mov
xor
loope
mov
pop
mov
inc
sub
out
lods
push
push
fstp
mov
leave
bound
jecxz
inc
outs
xor
xchg
jo
enter
dec
fst
cwde
jno
add
sub
push
inc
dec
test
and
push
or
adc
sbb
(bad)
in
pop
sbb
mov
ins
sbb
idiv
mov
xchg
jbe
xor
sub
icebp
cmp
sbb
iret
jns
sub
push
xchg
loope
cmp
sbb
xchg
mov
push
mov
dec
rcr
lods
push
mov
adc
lock
push
adc
pop
(bad)
push
pop
and
xor
cmp
sahf
movs
adc
scas
and
mov
mov
aam
fldenv
mov
add
ss
push
mov
jb
loopne
repz
mov
adc
or
pop
xchg
push
inc
ins
add
loope
les
dec
dec
add
or
aaa
fisub
or
push
call
cmc
ds
out
mov
arpl
and
sub
fdivr
aam
lock
fisttp
loop
jb
in
js
xor
push
xchg
fimul
pop
mov
xchg
es
enter
shl
div
jp
cmps
xor
push
adc
fsub
nop
bound
mov
cmp
pop
shr
dec
js
jmp
push
push
xchg
jb
jl
cli
mov
xchg
mov
mov
push
(bad)
icebp
loopne
inc
in
or
inc
xchg
dec
test
fisubr
rcl
sub
cmp
push
mov
shl
push
jp
xchg
jae
jo
push
mov
sub
pop
push
cmp
adc
in
daa
cmps
in
cmp
lea
and
mov
add
adc
in
retf
pop
clc
in
retf
add
sub
stos
sbb
mov
or
rcr
daa
sub
lds
sbb
fs
cli
and
repnz
push
and
fdivrp
mov
out
pusha
idiv
movs
inc
nop
ds
jnp
sub
cmp
dec
adc
imul
jb
mul
lahf
cwde
outs
pop
mov
test
mov
movs
push
push
push
lods
xchg
push
sbb
push
xchg
add
xor
mov
mov
push
push
data16
dec
dec
int
jp
dec
lahf
in
or
in
jae
mov
mov
das
scas
sbb
push
mov
movs
dec
inc
int3
xor
mov
(bad)
dec
retf
loope
dec
jecxz
shl
jg
pop
aam
mov
fs
ss
lock
dec
push
fs
xor
aad
std
and
push
ret
test
dec
and
scas
loope
mov
and
into
arpl
lahf
xchg
dec
jb
lods
pop
add
mov
mov
fstp
aad
dec
loope
add
push
cmp
xchg
dec
out
push
push
test
inc
push
adc
mov
xchg
popf
loope
mov
mov
or
xchg
fwait
adc
fcmovu
int
rol
retf
pop
jmp
lahf
mov
aaa
(bad)
arpl
sub
adc
pop
sbb
mov
xor
jmp
mov
xchg
movs
adc
nop
xor
in
fld
sbb
sub
pop
pop
pop
jae
push
scas
retf
pop
aaa
cmp
pop
hlt
sbb
cdq
or
jl
js
xor
(bad)
popa
out
cdq
and
or
fnop
(bad)
enter
out
aam
repz
inc
inc
pop
js
stos
imul
sbb
popa
lds
adc
mov
scas
add
nop
pusha
in
sbb
js
sti
dec
movs
jmp
and
push
sbb
push
fstp
and
sub
cmp
pop
popw
pop
nop
out
sbb
cwde
add
in
retf
popf
mov
out
xor
jnp
(bad)
stos
pop
xchg
jp
xor
mov
sbb
rcl
pop
lea
int3
test
les
aaa
or
fisttp
add
xor
int
adc
mov
outs
mov
mov
(bad)
adc
addr16
adc
into
sub
inc
xor
xor
pop
fbld
daa
sub
jecxz
je
repz
cmp
inc
dec
inc
jecxz
sub
shl
xor
cdq
dec
lds
test
sbb
inc
jp
xchg
xor
fmul
jne
and
cmps
mov
pop
push
shr
or
xlat
inc
cmp
jbe
cmc
lock
std
jl
popf
jnp
jnp
fstp
cli
xlat
in
sub
not
cld
sub
movs
inc
and
in
ret
xor
ficomp
retf
adc
es
xchg
(bad)
jae
(bad)
adc
inc
mov
stos
and
mov
int
and
daa
mov
or
push
movs
xlat
sar
fdivr
shl
hlt
ret
push
test
js
imul
or
movs
xlat
jg
or
jb
arpl
mov
xchg
adc
or
pop
jge
push
(bad)
call
int
adc
ror
xor
jmp
daa
in
(bad)
test
inc
out
call
mov
ret
mov
jns
xlat
xchg
addr16
aas
iret
adc
and
fyl2x
ret
sub
or
rcl
pop
in
inc
dec
idiv
and
cmps
mov
daa
in
sbb
xor
gs
mov
dec
adc
and
push
cdq
add
or
(bad)
leave
not
in
sub
out
push
mov
jg
mov
mov
and
repnz
cli
(bad)
test
jmp
pusha
retf
gs
das
mov
and
push
push
aaa
jmp
mov
pop
push
sbb
push
inc
sbb
mov
jbe
ins
push
sbb
inc
lock
xor
es
ins
jnp
adc
or
jmp
ins
inc
cmp
jecxz
cmp
inc
lods
jp
retf
add
or
cmc
cmp
sbb
mov
or
inc
add
or
and
cmp
(bad)
xor
add
in
sub
xor
sbb
gs
pop
jl
outs
ins
dec
mov
mov
or
retf
jecxz
hlt
in
adc
in
jno
xchg
test
xchg
mov
xor
cld
stc
push
cmps
or
sbb
push
mov
out
cmc
(bad)
cmp
cmp
xor
pop
xchg
push
jo
adc
inc
outs
inc
adc
push
mov
sti
pop
cwde
xor
lea
ss
(bad)
jp
out
jecxz
mov
cld
jmp
or
inc
pushf
addr16
adc
pop
push
retf
jmp
clc
fcom
jle
mov
call
out
jbe
sbb
lock
shr
jb
scas
mov
adc
or
outs
in
mov
sar
mov
add
jl
out
inc
xor
push
xchg
(bad)
mov
jmp
sbb
test
fisub
js
mov
test
(bad)
fwait
adc
outs
es
dec
das
xlat
lds
iret
test
or
in
push
(bad)
push
xchg
mov
adc
pop
scas
mov
ds
je
cmp
sbb
(bad)
ror
movs
repz
pop
(bad)
leave
xchg
jnp
mov
outs
pop
int3
repz
jnp
jl
jae
js
repz
lea
mov
xchg
xor
pop
sti
int3
sub
jmp
sahf
xchg
sahf
pop
outs
add
test
popa
jl
dec
stc
xchg
adc
sti
dec
aad
sub
pop
or
dec
(bad)
pop
xor
pop
(bad)
sub
enter
leave
das
mov
test
jecxz
sbb
mov
mov
mov
test
cmp
aam
xor
inc
popa
inc
movs
stos
jmp
jmp
lock
xchg
scas
ret
jge
pop
scas
cwde
aaa
xchg
xchg
push
daa
fs
and
inc
jb
in
adc
hlt
das
sbb
ins
jo
fcmovnb
stos
in
jne
mov
dec
rcr
mov
out
jge
add
in
mov
in
pop
retf
in
ins
daa
jb
mov
cs
in
retf
call
rol
out
in
nop
lahf
sub
jmp
and
ret
inc
repnz
mov
jmp
aad
or
xchg
mov
pop
push
mov
sbb
imul
pop
ins
imul
inc
jo
pop
jg
cmp
stos
dec
sbb
mov
sub
pop
scas
mov
aam
ud1
mov
outs
lahf
and
pushf
fdivr
sbb
sub
xchg
or
or
rcl
aam
pusha
xchg
jbe
out
sbb
stos
pop
fstp
xchg
mov
xchg
lods
xor
jle
aam
xor
mov
sub
jne
lds
mov
inc
gs
mov
pop
inc
(bad)
(bad)
mov
pop
and
mov
cmp
xor
in
rcl
xchg
fwait
lods
popa
sahf
mov
fcomp
sbb
dec
je
sbb
jl
cs
lea
mov
sar
mov
rcr
mov
dec
cmp
and
jnp
xchg
aaa
push
sar
outs
jp
je
jg
jmp
and
cmps
push
repnz
retf
cld
dec
rcr
sbb
pushf
adc
or
fstp
loope
mov
inc
sbb
jg
cmp
mov
jbe
jg
shl
pop
jae
lahf
mov
fnstenv
mov
ins
fimul
out
cld
bsr
pop
cmps
jmp
test
xchg
pop
aaa
mov
cdq
add
ss
outs
test
out
in
or
out
jle
lahf
(bad)
movs
neg
push
push
push
js
retf
les
int3
push
xchg
mov
mov
push
xchg
sbb
add
mov
xor
(bad)
dec
jne
pop
fcom
pop
outs
jecxz
jmp
or
and
mov
add
addr16
jl
dec
sub
pusha
xor
inc
test
pop
les
jle
scas
or
mov
sub
adc
pop
and
xor
inc
aam
es
mov
add
sub
ins
sbb
(bad)
(bad)
in
push
imul
pop
jmp
ins
popf
dec
in
or
cmp
pushf
outs
cmp
mov
push
test
xchg
dec
or
jbe
inc
xor
retf
mov
imul
adc
imul
scas
xchg
pop
jmp
(bad)
rcr
pop
push
pop
fcomp
fild
add
or
xchg
cmps
imul
pop
sbb
je
xchg
(bad)
jge
mov
and
pop
movs
jg
test
push
lock
shr
xchg
push
xor
lds
mov
cmp
adc
aas
push
in
lahf
outs
xchg
int3
cmp
pop
sbb
add
loope
iret
jg
xlat
cmp
lods
mov
cmp
jp
sub
in
fiadd
pop
sar
pop
pop
sub
push
(bad)
push
ror
stc
and
pushf
xlat
inc
jo
fs
mov
sti
sbb
scas
mov
mov
add
fs
add
in
es
and
ss
fidivr
cmc
hlt
imul
jg
pop
dec
sahf
lahf
or
pop
retfw
cwde
stc
mov
mov
sbb
adc
sub
mov
mov
or
sbb
out
inc
lea
xor
sub
es
or
pusha
mov
lds
fs
ja
cmp
xor
(bad)
stos
(bad)
jecxz
or
stos
inc
lahf
sub
and
xchg
mov
(bad)
mov
daa
inc
or
retf
ja
pop
retf
xor
scas
call
inc
push
or
ret
out
aam
js
repnz
add
(bad)
dec
retf
sbb
jl
sub
xchg
inc
(bad)
repz
gs
sub
out
retf
aad
bound
and
mov
test
sar
mov
xor
and
push
push
mov
add
dec
pop
mov
dec
lods
pop
push
add
jns
lock
pusha
adc
push
xchg
push
sbb
mov
adc
aad
xchg
dec
lods
(bad)
lods
adc
mov
inc
outs
pusha
adc
loop
test
mov
shl
(bad)
fcmovb
js
les
movs
mov
in
stc
xchg
(bad)
stc
leave
jo
pusha
test
cdq
jl
stos
pushf
es
push
in
cmp
adc
and
popf
adc
jmp
cmp
dec
xor
pop
jecxz
ret
je
cld
xchg
retf
cmps
ret
jg
scas
push
nop
int
sbb
pop
imul
jle
push
scas
mov
mov
fidiv
call
cld
pusha
loope
xchg
xlat
in
cmp
popa
inc
mov
adc
adc
int
xchg
fild
add
xor
dec
xor
sub
add
int3
ror
sub
into
dec
mov
in
repnz
mov
shl
cmps
and
xchg
dec
mov
pop
xchg
pop
inc
sti
mov
cmc
int3
ins
lods
add
imul
xchg
cmc
mov
push
inc
ret
push
test
outs
xor
xor
sub
mov
mov
mov
add
push
popa
cmps
loope
fmul
sbb
or
push
ins
repz
jle
ds
stos
sbb
hlt
mov
fidivr
and
mov
cmp
xchg
jns
pop
fmul
out
and
sub
ror
cmp
and
mov
(bad)
ror
inc
push
jnp
sub
jmp
inc
xchg
push
arpl
xchg
jl
fprem1
imul
cmps
cmp
push
dec
mov
xor
fdiv
fisub
xor
inc
ja
es
cld
push
adc
nop
into
xor
mov
xchg
mov
adc
lea
ror
push
scas
std
jno
je
dec
fsub
push
jne
and
push
and
mov
xchg
cmp
sbb
adc
stos
or
mov
popf
jmp
or
test
xchg
inc
xor
pop
inc
xchg
mov
lock
mov
or
mov
and
xchg
icebp
mov
fadd
pop
mov
cld
inc
add
out
push
repz
les
or
adc
sbb
mov
in
fdivr
mov
xor
xchg
jecxz
add
addr16
mov
rcr
mov
repnz
pop
sub
mov
addr16
adc
dec
cmps
adc
dec
mov
jle
das
ffreep
mov
pop
fisubr
push
jno
xchg
cmp
and
cwde
cmp
and
loop
push
(bad)
fs
xor
jecxz
test
mov
ja
sub
in
pop
sbb
xchg
ins
sahf
sbb
push
and
sub
sub
outs
lock
cmp
ss
jb
xchg
fisub
sbb
nop
out
cmp
movs
xchg
scas
dec
inc
push
mov
out
aam
pushf
push
dec
dec
(bad)
out
sub
ja
nop
fimul
cld
sub
push
test
addr16
aam
retf
mov
or
mov
or
hlt
arpl
loop
cmp
aam
div
les
retf
xchg
sub
clc
clc
push
push
mov
aad
mov
mov
ins
test
pop
pop
shl
retf
mov
je
nop
sub
xchg
cmp
cmps
cmp
ja
xchg
jae
icebp
in
sbb
fld
jle
mov
jnp
xchg
nop
lods
xchg
dec
dec
enter
push
outs
push
dec
movs
dec
fadd
mov
test
jle
or
or
add
ins
jne
fsub
xchg
xor
(bad)
dec
dec
jns
or
push
jp
les
cmp
movs
inc
(bad)
loope
sbb
or
jnp
inc
xor
enter
adc
mov
sbb
hlt
fdivr
dec
lods
push
nop
aas
les
dec
out
xor
adc
xor
imul
jbe
jne
and
jmp
xchg
jle
xchg
sub
sbb
add
pop
js
cmp
test
xor
ja
push
jns
push
mov
repnz
paddq
clc
adc
cmp
adc
aaa
(bad)
jns
cmp
(bad)
cld
jp
cmc
dec
add
das
nop
mov
push
(bad)
or
fnstenv
mov
out
xchg
fild
cmp
(bad)
sbb
add
rcl
jns
data16
cwde
inc
mov
add
adc
je
or
jmp
jp
(bad)
stc
cmp
call
xchg
pop
mov
(bad)
xlat
addr16
(bad)
out
imul
test
rcr
sti
ret
aas
out
ins
jnp
iret
pop
or
pop
add
int
clc
dec
fisttp
push
and
aaa
nop
adc
fild
xchg
or
setp
aas
mov
fdivr
or
adc
dec
pop
dec
dec
ss
sbb
ret
push
push
mov
push
cmps
mov
jl
shr
add
dec
xchg
lahf
cmc
rcr
inc
adc
push
adc
mov
aas
sar
pop
cld
int
shl
mov
dec
adc
fsub
sar
aas
cld
(bad)
or
stc
adc
xor
lds
test
stos
mov
aas
arpl
imul
xchg
ins
xchg
jne
dec
xchg
adc
mov
and
ins
jns
les
add
push
leave
enter
push
mov
jge
(bad)
outs
mov
inc
push
inc
loopne
lods
inc
mov
sub
mov
add
push
xor
cmp
out
push
push
fwait
rcl
xor
dec
push
movs
nop
cmp
in
outs
rol
mov
push
jecxz
push
or
(bad)
aad
mov
cmp
aam
adc
arpl
xor
jnp
je
dec
and
or
test
(bad)
repnz
mov
call
cmp
push
dec
and
push
pop
inc
mov
dec
push
imul
call
iret
inc
pop
jmp
lods
mov
lds
jmp
fadd
into
push
xchg
and
clc
ret
or
add
std
in
fmul
and
push
mov
mov
add
mov
outs
jmp
mov
pop
sub
xchg
push
inc
and
dec
out
lahf
call
das
es
pop
dec
adc
(bad)
sbb
and
out
dec
jne
bound
mov
mov
xor
sahf
leave
pusha
jmp
jmp
add
(bad)
cmps
les
fwait
js
div
adc
cmp
pop
push
test
mov
cmp
nop
xor
xor
adc
dec
mov
dec
out
pop
sti
inc
lock
add
outs
movs
rcl
xlat
in
and
xlat
dec
adc
pop
pop
push
mov
xchg
aas
jne
mov
jmp
into
mov
out
adc
stos
movs
and
fmul
xchg
push
pop
pushf
rol
jge
ins
pop
pop
jbe
std
data16
and
jle
mov
lds
data16
mov
cmp
xchg
lods
pop
mov
pop
inc
adc
lea
in
bswap
dec
repz
pop
aam
shrd
and
mov
or
pop
lods
mov
jbe
ds
jb
xor
and
add
(bad)
in
sub
stos
das
and
sbb
aad
adc
adc
in
and
mov
mov
or
adc
or
adc
sub
fstp
or
sbb
xchg
push
cmc
mov
pop
xchg
adc
or
mov
pop
jmp
test
(bad)
cmp
xor
push
(bad)
xor
pop
push
movs
call
pop
lods
clc
repz
inc
aaa
jecxz
mov
dec
and
int
loopne
(bad)
xor
hlt
gs
xchg
xchg
mov
fidivr
jmp
test
loope
mov
and
push
ror
jb
dec
(bad)
(bad)
jns
loopne
xchg
add
push
mov
sub
adc
sbb
(bad)
fyl2xp1
push
inc
neg
push
xchg
in
mov
aas
or
jae
jo
jecxz
into
stos
pusha
mov
stos
in
je
xchg
movs
push
xor
jb
push
stos
lea
js
lds
out
nop
ins
mov
mov
mov
pop
sbb
cmp
bound
sbb
sbb
sahf
mov
mov
mov
in
adc
jl
inc
(bad)
fwait
push
lods
fcmovb
inc
fwait
sahf
sti
add
and
sub
add
ret
inc
pop
cmp
std
shl
adc
mov
add
xor
jmp
fcomp
in
and
xor
inc
or
mov
push
cmp
push
push
or
fisub
fild
scas
stos
pushf
mov
xor
gs
and
jl
pop
push
jmp
loopne
retf
sub
push
inc
fsub
cdq
push
out
cdq
push
xchg
sahf
add
scas
in
push
pop
jb
mov
(bad)
xchg
repnz
sub
add
pop
ror
and
sub
dec
xchg
and
cwde
adc
mov
and
sbb
inc
inc
push
int3
(bad)
imul
std
mov
out
mov
inc
and
push
xor
fisub
push
push
pop
aam
xlat
pusha
lods
dec
arpl
repz
push
imul
loope
sub
out
retf
mov
outs
jmp
inc
mov
pop
jmp
xor
cmc
mov
push
fimul
test
xchg
in
aam
shl
scas
daa
jle
push
add
adc
xchg
clc
rol
jnp
aad
call
shr
xor
ret
jne
add
scas
xchg
aas
in
bswap
push
adc
pop
push
mov
test
sti
sub
scas
jns
mov
jg
inc
mov
pop
adc
(bad)
push
jno
rol
test
and
add
inc
adc
adc
sbb
xor
add
es
mov
inc
aaa
iret
mov
rol
sti
xchg
or
jnp
jp
in
jg
popa
ins
pop
and
(bad)
dec
call
ret
fmul
loope
into
js
push
rcr
hlt
(bad)
cmp
out
lods
loopne
cwde
mov
and
mov
data16
adc
shl
add
neg
and
inc
cmp
popa
cmps
mov
inc
add
jne
fstp
out
loopne
mov
and
jnp
dec
leave
ja
push
jb
ds
hlt
mov
(bad)
mov
enter
ds
and
test
and
mov
xor
clc
ja
or
bnd
scas
jo
jne
les
xor
cdq
imul
xchg
pushf
cmps
push
(bad)
scas
icebp
push
(bad)
leave
inc
mov
out
adc
loope
repnz
and
fnstenv
lea
pop
cmp
in
ds
shl
(bad)
imul
sahf
adc
in
mov
cld
xchg
ds
dec
and
dec
add
clc
cmps
or
movs
push
clc
(bad)
jmp
sbb
jmp
mov
mov
imul
push
pop
pop
call
xchg
(bad)
out
mov
sbb
xchg
sti
mov
sub
icebp
push
inc
xchg
pop
lods
add
lds
cmp
mov
sub
sbb
ret
mov
out
leave
loopne
frndint
nop
data16
lds
push
pushf
xor
(bad)
adc
sbb
sub
pop
push
jl
mov
es
jo
cld
xchg
cs
das
sahf
fwait
sbb
xlat
call
inc
mov
lds
call
test
test
pop
xchg
out
sbb
loope
pop
loopne
dec
iret
cmp
mov
mov
xor
jo
and
inc
stos
and
inc
xor
rcl
fsubr
or
push
imul
dec
int3
xlat
adc
mov
into
ret
cld
and
fwait
(bad)
imul
fist
jae
jp
mov
sbb
cmc
stc
fdivr
rcr
dec
cdq
fild
call
add
jge
inc
sahf
dec
sub
ja
das
mov
or
ret
lods
lds
movs
out
jmp
pop
(bad)
pusha
lods
xor
jne
push
loope
repnz
test
cmp
xor
or
push
jo
inc
inc
mov
lea
jle
je
or
pop
sub
adc
pop
and
repnz
rol
sub
adc
(bad)
jg
push
(bad)
bound
fucomip
sub
push
test
pop
xor
icebp
bound
adc
mov
xchg
cmps
retf
ja
loope
inc
xchg
adc
push
mov
jle
loope
or
jecxz
stos
je
jb
test
inc
sbb
js
mov
or
pop
cmps
xchg
movs
mov
or
cld
data16
inc
mov
je
pop
dec
push
jnp
push
mov
inc
xchg
xor
cmc
dec
fsubr
push
pop
mov
in
xor
cmps
jns
pop
pusha
fs
dec
sbb
cmp
outs
add
lock
outs
xlat
and
iret
xchg
adc
jns
jmp
call
repz
sti
loope
les
mov
or
test
aaa
mov
outs
xor
leave
repz
(bad)
adc
shl
dec
ins
je
idiv
pop
pop
dec
outs
pop
xor
jno
pop
(bad)
jno
dec
retf
imul
pop
mov
lods
dec
stos
push
sub
jl
aaa
cld
aaa
push
in
popa
xor
push
push
loope
aam
add
aad
ret
fistp
sub
aaa
sub
pop
or
sbb
iret
inc
or
sub
in
inc
clc
push
cmc
mov
fcmovne
xchg
add
ja
xchg
add
or
scas
es
fs
loope
bound
add
jl
inc
mov
or
cdq
sahf
cli
dec
sbb
repz
pop
stc
cli
stos
xor
js
push
sbb
add
or
mov
cmps
inc
add
jge
lods
arpl
mov
xchg
add
sbb
mov
xchg
jno
shl
or
push
pop
mov
popf
(bad)
(bad)
test
add
xchg
and
lods
sar
(bad)
call
sub
push
jae
imul
and
cmp
xchg
sub
into
sbb
push
cdq
loope
dec
xchg
cmp
mov
mov
(bad)
mov
or
mov
iret
dec
inc
into
outs
push
daa
or
dec
sbb
dec
jecxz
mov
repz
mov
fadd
adc
imul
xchg
push
shr
pusha
xor
jnp
sahf
iret
icebp
and
outs
or
rcr
jmp
inc
popa
and
cmp
sbb
loopne
sbb
mov
adc
jmp
std
imul
sbb
jne
push
push
or
push
cld
les
std
push
es
rcr
ins
push
dec
and
aam
movs
jns
pop
cmp
xor
or
(bad)
pop
outs
jmp
dec
and
xor
pop
inc
data16
imul
mov
mov
daa
cmp
nop
push
cli
push
pop
and
stc
hlt
ins
fwait
daa
outs
add
and
xchg
jle
in
das
xchg
movs
sub
ds
aas
add
lock
fwait
rcr
pminsw
stos
sbb
mov
pushf
add
adc
and
add
dec
or
jle
xchg
fdivp
sbb
pop
ja
lock
jmp
test
adc
popf
xor
popf
mov
aaa
cdq
scas
jne
idiv
jnp
mov
or
shl
popf
repnz
iret
aad
hlt
xchg
pop
jg
inc
repnz
ror
sbb
and
outs
push
adc
lods
pop
mov
cli
call
push
pop
fnstsw
pop
mov
xor
push
xchg
nop
xchg
ins
cmc
jle
pop
ins
ror
outs
test
dec
sub
aam
sub
pop
movs
stos
ror
mov
outs
imul
int3
ror
lods
test
in
xor
inc
lock
inc
push
(bad)
pop
sub
inc
mov
push
mov
or
test
inc
(bad)
fisttp
js
ja
jno
fdivp
sub
(bad)
dec
cmp
jae
jecxz
retf
in
call
lods
xchg
fld
scas
(bad)
ds
and
xchg
mov
iret
jo
fsub
shl
inc
jmp
jae
push
push
push
pop
jbe
mov
dec
xchg
jecxz
(bad)
call
dec
aam
out
add
mov
jle
lods
pop
jnp
sbb
ret
lea
out
xchg
add
std
das
nop
jbe
gs
ins
sub
pop
cmp
and
jns
cli
outs
outs
test
lods
outs
in
bound
loopne
test
push
lock
dec
je
or
repnz
sub
fadd
jnp
retf
sbb
or
shl
int3
(bad)
and
ret
jae
mov
ss
out
mov
cmp
clc
xchg
fisttp
iret
dec
push
out
xchg
sub
mov
and
or
in
mov
mov
xlat
jbe
(bad)
adc
call
sahf
sbb
pop
call
xlat
sbb
fadd
and
dec
lods
and
xor
xchg
mov
xor
lahf
shl
sbb
sbb
mov
sub
mov
mov
pop
scas
fsub
pop
(bad)
rcl
lock
popf
mov
(bad)
cmp
mov
pusha
jne
std
push
fbld
jecxz
push
cmp
call
test
push
rcl
or
loopne
fwait
push
neg
mov
or
dec
sub
popa
mov
sub
pop
jg
push
push
das
adc
cmc
push
js
jne
cmc
jecxz
adc
mov
(bad)
idiv
jecxz
adc
call
div
js
xchg
les
lea
sub
(bad)
fwait
idiv
adc
cwde
jle
fadd
das
clc
sahf
cmp
mov
or
add
int3
and
out
sar
pop
xchg
movs
inc
dec
jnp
mov
retf
call
repz
jmp
adc
mov
mov
mov
push
std
mov
sub
jmp
test
ss
inc
lods
push
aam
xor
icebp
ja
out
gs
push
jge
jge
sbb
in
or
sbb
cmp
adc
push
mov
rcl
jns
sbb
sub
mov
ins
xchg
scas
mov
in
jbe
push
in
scas
inc
call
cmp
mov
test
ret
jp
mov
push
mov
std
push
dec
or
lahf
inc
ret
xor
loop
ss
xchg
in
arpl
in
push
sbb
and
and
sahf
fwait
add
xchg
cdq
pop
push
fadd
inc
push
out
xchg
mov
xor
loop
std
add
add
in
jns
mov
in
adc
xor
arpl
arpl
dec
(bad)
fsub
nop
mov
jnp
and
loop
mov
jnp
pop
mov
fwait
(bad)
loopne
push
add
push
pop
fimul
or
in
mov
add
fcomp
jb
idiv
add
adc
mov
pusha
mov
stc
nop
in
mov
ins
xchg
cmp
mov
sti
(bad)
in
ror
ds
and
or
sbb
mov
shr
jmp
cwde
xor
test
cmc
mov
out
push
(bad)
repnz
xchg
mov
xchg
or
ds
ret
imul
shl
push
aad
or
push
test
dec
xlat
xor
(bad)
fs
inc
not
dec
jne
mov
cmps
mov
push
pushf
jno
repnz
sub
xor
lods
mov
pop
pop
es
cmp
pop
cmp
lock
gs
sub
imul
mov
mov
xor
aaa
stos
mov
xor
cmp
mov
les
xor
jmp
pop
sahf
hlt
outs
mov
pop
out
shl
sbb
mov
jnp
mov
fstp
inc
cmc
imul
inc
rcr
cwde
xchg
lds
out
out
sub
popa
adc
pop
jo
push
push
shl
scas
adc
jmp
mov
adc
xchg
cmp
nop
and
cmp
jnp
jnp
inc
mov
test
cmp
std
shl
(bad)
pop
cmc
jge
cs
pop
mov
or
fnstenv
mov
push
push
jb
int3
aam
mov
fwait
cmp
xchg
stos
cmc
xor
jmp
push
mov
std
adc
dec
test
sub
and
sub
imul
push
popa
sbb
int3
mov
inc
iret
out
scas
pop
and
daa
ins
or
fnsave
jmp
xchg
add
push
dec
nop
add
shl
stos
adc
aad
aas
(bad)
sbb
cmc
iret
in
xor
outs
div
adc
fsubp
sub
sub
push
arpl
push
xchg
push
iret
and
std
ret
dec
xchg
fimul
inc
add
rcr
adc
xchg
imul
mov
cmp
jne
repnz
mov
mov
sub
mov
cld
mov
popa
cmp
push
xor
repnz
outs
push
pop
sub
push
lods
es
ins
cmps
(bad)
cld
retf
xor
(bad)
lods
adc
lods
or
mov
mov
mov
mov
add
cli
out
mov
mov
push
add
dec
or
daa
xchg
mov
mov
push
mov
lods
retf
mov
(bad)
fnstcw
cmc
movs
xor
jno
inc
addr16
scas
mov
jmp
arpl
pop
xchg
(bad)
sub
mov
sar
mov
out
jnp
jle
dec
fdiv
sub
mov
out
pop
push
sbb
push
cmp
push
(bad)
xlat
leave
(bad)
bound
(bad)
mov
dec
pop
adc
fadd
and
push
jmp
cdq
jge
jmp
test
cmp
pop
arpl
xor
mov
pop
inc
cmc
ja
and
xchg
adc
push
push
repnz
jae
xor
imul
push
(bad)
repnz
add
xchg
adc
or
push
jo
fstp
rol
enter
and
ret
adc
ret
jmp
arpl
cld
js
or
cmp
test
jle
add
rol
inc
jno
and
push
popa
inc
call
mov
call
nop
cmc
retf
add
jg
ja
aaa
add
jbe
inc
dec
shl
call
mov
mov
adc
shl
sub
es
loop
cmp
push
pop
in
loopne
cmp
test
(bad)
outs
xor
jae
mov
cli
(bad)
in
mov
jns
push
cdq
leave
dec
xor
fs
out
int
add
and
sub
outs
fdiv
cs
ror
sub
push
and
aad
mov
push
aam
scas
pop
ins
aaa
cmp
out
xor
fs
sbb
out
out
xchg
cmps
or
(bad)
xor
sub
test
xchg
sar
das
add
pop
inc
mul
jno
mov
mov
pop
mov
or
pop
call
mov
shl
mov
mov
push
and
dec
sbb
adc
gs
dec
and
jae
lahf
adc
or
mov
cmp
lahf
cmp
dec
or
adc
and
mov
xor
mov
in
gs
fwait
or
sub
jge
nop
shl
xchg
mov
sbb
cmp
(bad)
cmp
les
push
sub
out
push
and
mov
sbb
enter
xchg
add
ds
loope
push
cmps
cmp
bound
loopne
and
inc
retf
push
int3
sti
push
shl
loop
xchg
jnp
fidiv
loop
(bad)
into
mov
fidivr
lock
xor
les
xor
jge
inc
mov
fstp
out
stc
push
pop
scas
les
inc
adc
mov
fdiv
fisub
pushf
xchg
push
pop
sti
xchg
loope
dec
sti
push
fs
cld
mov
pusha
mov
mov
ret
cli
or
xor
pop
test
mov
mov
scas
jle
pop
mov
jmp
addr16
adc
sbb
adc
lahf
mov
ds
test
fwait
inc
mov
xchg
stc
cdq
or
mov
test
lods
lock
dec
adc
cli
jbe
xor
jb
sbb
lock
push
(bad)
jns
movs
ins
lods
mov
ret
or
lea
std
scas
push
jnp
rcr
push
mov
xchg
xabort
sbb
mov
test
xchg
sbb
fadd
jg
jo
repnz
inc
jmp
rcr
aas
bound
sub
mov
stos
pop
inc
inc
jle
lods
jno
push
mov
sub
jb
cmp
push
jne
xlat
rol
inc
cld
push
ins
inc
rcr
sbb
ds
icebp
fist
mov
(bad)
mov
in
ins
inc
daa
retf
mov
outs
push
cmp
mov
cmp
mov
idiv
cmps
xchg
out
jle
adc
test
inc
xchg
imul
loop
outs
mov
push
inc
fwait
pop
arpl
cli
pop
add
sbb
pop
imul
in
js
sti
sbb
push
data16
adc
jge
xchg
cmps
pushf
retf
scas
sahf
test
addr16
push
stc
fiadd
pop
cdq
pop
xchg
movs
inc
sub
sub
adc
(bad)
pop
pushf
and
mov
pop
pop
mov
ins
push
push
std
gs
outs
fldcw
das
call
jge
addr16
out
retf
dec
aaa
ret
ret
ins
dec
push
sti
pop
push
hlt
repnz
gs
scas
sbb
add
(bad)
jl
fnsave
movs
test
and
je
in
aad
push
jae
push
sbb
retf
das
pop
sbb
(bad)
test
inc
push
adc
popf
ds
aad
push
fisttp
add
scas
mov
and
sbb
shr
pusha
cs
test
pushf
out
dec
inc
imul
xor
sub
aaa
sbb
and
aaa
pop
fistp
fcomip
xor
xor
cmp
and
cmp
pop
cmp
int3
inc
add
add
retf
xor
and
out
mov
adc
into
das
cmp
xor
mov
out
ds
add
icebp
xor
adc
iret
into
and
shr
and
out
lods
add
outs
adc
in
dec
movs
push
movs
popf
cmp
mov
lds
popa
mov
fs
sub
dec
push
hlt
fiadd
lea
xchg
ror
pop
loope
imul
mov
ds
sbb
test
pop
in
retf
push
push
retf
imul
pop
inc
gs
adc
sub
int3
jecxz
xchg
mov
push
xor
pushf
mov
cmp
pop
jecxz
jl
mov
cmp
pushf
push
sbb
and
mov
es
rcl
inc
addr16
xchg
adc
or
je
xchg
adc
aam
and
pop
aam
mov
test
mov
and
push
arpl
loope
js
cmp
xor
pop
dec
mov
push
sahf
imul
ret
scas
fild
xor
sub
lahf
sti
lods
pop
adc
inc
mov
cdq
xchg
jg
pop
(bad)
mov
or
imul
cmp
sbb
mov
and
addr16
gs
loopne
push
rcr
(bad)
clc
retf
mov
sub
int3
jp
inc
mov
call
cld
mov
cdq
pop
jle
pop
test
mov
xchg
pop
adc
inc
pop
loopne
add
or
enter
fcomp
sti
jg
lods
sub
sbb
stos
fbstp
add
aam
shl
sbb
repz
pop
bnd
xchg
pop
cli
retf
loopne
add
das
sbb
das
sub
daa
ss
fwait
push
pop
mov
out
xchg
add
aam
mov
ins
(bad)
pop
in
test
mov
add
mov
or
jge
fild
mov
dec
aad
mov
mov
js
jecxz
stos
xchg
movs
ds
adc
pop
cmp
pop
int3
sub
sub
inc
mov
std
xor
lock
in
retf
mov
or
movs
xchg
xlat
jl
bound
mov
adc
dec
sbb
or
int
das
out
and
push
jbe
jg
inc
push
or
mov
call
pop
xor
xor
ja
mov
test
(bad)
cli
adc
ret
ret
push
xchg
pop
sbb
popa
pusha
sbb
hlt
pop
imul
mov
add
cmp
jne
call
enter
add
shl
mov
pop
sbb
icebp
test
(bad)
in
push
jl
adc
xchg
fcomp
jp
adc
int
jne
sahf
fsubrp
dec
add
ret
lock
mov
fldenv
push
push
icebp
mov
test
jb
ss
dec
xchg
adc
pushw
fst
push
test
pop
sbb
or
(bad)
adc
(bad)
xchg
les
test
and
retf
jne
mov
cmp
rcr
mov
scas
cmp
pop
mov
push
stc
mov
out
fistp
jmp
ins
push
outs
pushf
sub
les
retf
fs
cs
inc
test
into
enter
mov
repz
push
(bad)
mov
je
addr16
rol
and
fst
cwde
movs
mov
jle
cmp
adc
xchg
mov
clc
jns
push
mov
call
bound
cmp
xchg
imul
jg
arpl
mov
sahf
out
adc
push
pop
out
or
cmps
or
mov
sbb
sub
xchg
repz
and
adc
push
add
test
mov
push
mov
cmp
mov
sub
fimul
mov
test
js
sub
pop
cs
icebp
mov
jmp
mov
leave
and
movs
cmp
dec
mov
and
sub
and
pop
xchg
inc
mov
mov
push
inc
mov
loope
retf
lods
push
pop
push
fcomp
add
or
rcl
ret
dec
(bad)
cmp
in
mov
mov
je
pop
adc
cld
sub
mov
aam
push
xchg
lds
retf
add
(bad)
loop
cmp
fwait
test
jo
mov
mov
fidiv
jae
push
mov
fwait
outs
mov
(bad)
jg
idiv
xchg
cld
mov
imul
add
sub
dec
sub
into
xor
test
icebp
out
addr16
push
call
fadd
cmp
movs
mov
xor
rol
js
call
imul
mov
fmul
or
fwait
aaa
arpl
sub
inc
push
stc
mov
dec
cmp
daa
inc
sub
test
pop
add
(bad)
xor
add
mov
push
(bad)
add
jb
inc
mov
jb
inc
xlat
sub
fwait
jmp
adc
inc
shl
std
iret
dec
aam
dec
pop
outs
pop
arpl
xchg
outs
repnz
(bad)
mov
adc
sbb
fdivr
xchg
inc
push
sub
fisubr
mov
(bad)
shl
dec
mov
sub
(bad)
jae
jg
movs
pop
movs
(bad)
(bad)
jmp
inc
ja
jg
(bad)
call
(bad)
(bad)
js
pop
aaa
inc
sub
std
pop
sbb
outs
ret
int
pop
or
repnz
and
clc
lock
sbb
mov
jne
cdq
call
jnp
jmp
(bad)
cmp
dec
mov
xor
push
jmp
cmp
jae
sub
in
dec
loop
jmp
add
mov
pop
and
fsub
loope
add
dec
adc
cmp
mov
pop
fwait
dec
div
push
jmp
mov
jns
ja
dec
push
es
jno
stos
sub
jb
inc
vandps
xor
add
sbb
push
mov
es
jge
push
push
dec
imul
aam
js
stc
and
call
movs
mov
xchg
dec
das
ret
sbb
dec
dec
push
bound
xchg
jp
and
and
cwde
aad
ins
repz
and
and
icebp
lahf
sbb
cmp
jno
ins
mov
push
aam
ins
enter
in
sub
or
cs
cmp
add
mov
push
loope
add
add
xchg
call
xor
xor
imul
mov
(bad)
aaa
mov
adc
inc
dec
inc
jbe
dec
adc
into
loopne
je
and
sub
push
jle
xchg
xor
repnz
in
repz
xchg
out
scas
les
fcmovnu
sub
out
sub
sar
dec
xchg
or
shl
ja
cmp
into
popf
jecxz
sahf
or
lods
icebp
adc
xchg
or
sti
(bad)
jmp
xor
stos
ss
mov
hlt
mov
push
fdiv
dec
dec
sbb
out
imul
xchg
adc
lds
sub
stos
(bad)
in
sar
add
out
pusha
(bad)
in
setbe
enter
data16
adc
shl
and
loope
ret
mov
dec
(bad)
pushf
and
sti
sbb
rcr
mov
(bad)
push
cmps
add
push
stos
not
movs
int3
mov
iret
ins
das
scas
jbe
or
clc
sti
xlat
cmp
cmp
sbb
add
fucomip
enter
push
sub
jl
xor
inc
inc
sbb
sub
popa
cld
rep
xor
imul
inc
xchg
cmp
outs
jae
test
mov
ss
sub
cmp
lahf
fld
and
pop
sti
pop
sbb
jmp
jge
sbb
movs
addr16
arpl
gs
push
ins
inc
push
mov
mov
fdiv
in
stos
and
add
xchg
neg
jecxz
mov
pushf
les
pop
inc
movs
in
xor
adc
pop
inc
sbb
les
shr
mov
ror
jns
add
mov
ins
sti
fild
pusha
inc
jnp
xchg
fsub
mov
jbe
into
inc
mov
(bad)
xchg
push
cmps
add
es
arpl
pop
daa
or
jns
sti
fadd
jb
ss
jl
xchg
dec
ret
lds
mov
push
ror
into
and
xchg
adc
jns
push
arpl
push
int
add
cmps
xchg
(bad)
not
(bad)
and
loope
mov
push
inc
mov
inc
jl
fisttp
cmp
std
hlt
fld1
scas
jg
sbb
xor
stc
fsubr
jl
sti
push
test
cmp
jl
push
daa
(bad)
xchg
hlt
pop
ins
sub
cmps
seta
jb
xor
punpckldq
arpl
rcr
jbe
mov
push
mov
hlt
mov
rcl
and
gs
pop
mov
add
xor
inc
ins
xchg
imul
cld
out
dec
jnp
fdivr
je
addr16
hlt
sar
inc
out
xchg
fist
push
add
jb
sub
xor
ins
sub
or
cmp
test
sub
jp
xor
push
lea
adc
inc
or
push
retf
call
cdq
lods
jb
xchg
pop
push
(bad)
xor
xor
push
dec
hlt
add
mov
(bad)
call
mov
(bad)
adc
fiadd
jns
repnz
push
sbb
ins
sub
psubsb
inc
pop
fmul
dec
cmp
fs
mov
stos
add
mov
fld
and
rcl
or
cmp
xchg
call
out
movs
xor
mov
leave
dec
jb
(bad)
mov
sub
(bad)
jmp
mov
dec
lea
cwde
(bad)
out
sub
pop
pop
and
cdq
or
stos
or
dec
cmp
scas
fisub
sub
inc
sbb
ffreep
cmp
retf
pop
jge
adc
xchg
test
lods
mov
and
dec
xor
outs
sbb
inc
(bad)
icebp
sub
jbe
retf
loopne
jbe
(bad)
fcom
jae
hlt
retf
aam
daa
rcl
mov
mov
pushf
fs
xchg
leave
adc
dec
jne
sbb
dec
inc
sub
shr
and
sub
pushf
lea
mov
fcomp
push
je
pop
(bad)
shl
xchg
jo
or
sub
push
jbe
stc
movs
sub
mov
add
cli
add
xor
cmp
pop
push
mov
push
cmp
dec
mov
push
sub
mov
(bad)
test
inc
daa
push
mov
stos
and
push
std
in
or
shr
icebp
std
int3
mov
mov
xor
iret
mov
or
xchg
test
ror
(bad)
js
stc
adc
and
pop
ds
add
adc
fld
stos
dec
push
popf
xor
or
pop
mov
add
push
outs
dec
pop
pop
fisubr
mov
mov
cmp
test
dec
imul
jmp
ja
pop
cmp
test
cmp
(bad)
jmp
not
call
inc
aas
hlt
addr16
int
fsubp
ret
add
rcr
cmp
mov
mov
inc
ins
bswap
fcomip
or
xor
jno
pop
aam
arpl
pop
fmul
clc
popf
inc
push
mov
test
fist
out
pusha
sub
mov
outs
cmps
xchg
pop
xor
outs
repz
lock
pop
sub
xor
jg
(bad)
mov
dec
sar
pop
loopne
(bad)
ds
pop
(bad)
mov
add
push
shl
retf
daa
sub
and
dec
cmp
aam
dec
icebp
xchg
xor
stos
push
out
jp
xchg
out
hlt
mov
rol
and
inc
pop
test
sahf
outs
ds
cmps
pop
jae
inc
(bad)
mov
loope
mov
mov
or
bound
ss
push
(bad)
add
mov
jge
nop
or
bound
sub
and
stos
and
sahf
pushf
mov
pop
dec
dec
pop
sub
sub
adc
push
movs
es
adc
push
dec
loop
adc
lods
neg
push
xchg
out
and
jmp
adc
xchg
xchg
and
mov
mov
gs
cli
ss
dec
(bad)
frstor
outs
ins
addr16
icebp
and
and
adc
ins
leave
fwait
sub
jmp
push
aam
scas
cmc
jg
jg
mov
jge
pop
jb
xchg
movs
data16
fld
push
push
loop
mov
sub
pop
xchg
push
dec
(bad)
pop
mov
pop
mov
push
push
pop
add
and
add
dec
jmp
xlat
xchg
mov
pop
outs
sbb
std
and
mov
or
lock
cmp
inc
imul
adc
enter
sub
sub
xchg
loop
push
jmp
push
or
and
push
(bad)
sahf
popf
arpl
xor
pusha
sub
push
repz
cmp
pop
push
popa
xor
jmp
je
hlt
ins
cmps
sub
loopne
mov
out
mov
scas
outs
int
ror
mov
movs
cmps
dec
mov
or
movs
test
adc
cmps
jp
mov
int3
mov
push
inc
dec
mov
out
push
mov
pop
int3
gs
xlat
xlat
cwde
retf
mov
mov
add
enter
mov
nop
mov
push
int
(bad)
jns
(bad)
sahf
fnstcw
xchg
and
pushf
jo
push
test
mov
dec
inc
mov
mov
loope
fld
outs
test
(bad)
pop
sub
inc
je
das
dec
aaa
mov
push
push
movs
sbb
push
adc
ss
adc
cmp
fwait
pop
sub
ja
sub
cmp
mov
sbb
or
aad
jge
scas
(bad)
fmulp
xchg
shr
cmp
ds
and
xchg
jge
cld
stc
(bad)
(bad)
or
push
jns
sahf
push
sbb
dec
mov
pop
push
push
int3
data16
sbb
xchg
imul
adc
ret
test
mov
add
xchg
scas
xchg
ins
clc
or
jecxz
sbb
xor
cwde
push
enter
dec
jb
addr16
inc
ss
out
push
dec
repz
xor
ffree
mov
sub
push
mov
dec
mov
test
mov
jnp
(bad)
cli
add
push
aam
(bad)
nop
iret
mov
je
xor
adc
sbb
dec
mov
(bad)
dec
xchg
je
hlt
xchg
call
dec
xor
mov
mov
clc
(bad)
mov
jbe
mov
sbb
stc
mov
stc
jno
sbb
loope
jmp
inc
loop
lods
pop
out
adc
mov
dec
adc
cmp
adc
mov
in
pop
inc
xchg
dec
adc
in
pop
add
add
ret
mov
arpl
stc
(bad)
arpl
xor
xchg
ds
inc
dec
cmp
push
sub
ins
add
int3
ja
push
frstor
xchg
je
pusha
movs
imul
sub
bound
adc
test
pop
je
ret
in
xor
pop
cli
shl
mov
sbb
outs
adc
lods
xchg
lea
or
hlt
ret
mov
sbb
jb
xchg
mov
jns
je
sub
lock
sbb
and
dec
pop
sbb
sbb
push
clc
cld
fld
dec
in
cmc
mov
pop
mov
mov
cmp
xor
stos
dec
movs
cmps
xchg
and
mov
and
int3
jmp
inc
aaa
inc
rol
mov
jl
add
repnz
mov
cmp
jmp
mov
xor
enter
adc
inc
(bad)
int
dec
ds
(bad)
adc
adc
test
push
jno
push
stc
mov
shl
std
pop
sbb
cwde
or
cmp
xor
lahf
imul
pop
stc
fsubr
fdivp
xchg
sub
push
repz
call
sbb
aam
sbb
pop
test
xchg
test
jnp
xchg
hlt
mov
cmps
mov
je
jnp
icebp
add
call
cli
sbb
movs
pop
sbb
xor
js
xchg
sbb
mov
gs
sahf
cld
jo
push
cmp
jmp
cmp
dec
push
mov
push
jp
pusha
mov
add
arpl
test
push
std
pushf
inc
int3
in
ret
jecxz
jb
sub
les
lds
(bad)
int3
cld
dec
in
dec
cmp
scas
jnp
call
imul
jb
pop
cli
and
mov
lods
add
and
sbb
cld
cmp
pop
cmp
sbb
or
(bad)
adc
sar
sbb
lock
xchg
adc
fcomp
jmp
retf
mov
and
inc
push
push
and
retf
cld
jge
lods
retf
inc
cmc
adc
push
and
sbb
lahf
scas
in
adc
mov
lods
or
dec
iret
xchg
sbb
fwait
pop
or
add
fsubr
shl
cmps
push
ins
mov
test
test
adc
and
cmp
dec
sub
outs
adc
int3
mov
ins
dec
cmp
cmps
jmp
jecxz
fs
mov
(bad)
mov
inc
stc
dec
push
sub
bound
call
dec
xor
pop
dec
mov
fst
mov
sti
retf
and
or
jle
mov
xor
(bad)
mov
sbb
dec
jnp
addr16
aam
das
lds
or
(bad)
rcr
cdq
and
in
xor
in
or
xchg
mov
retf
inc
fs
xlat
and
ror
pop
push
das
pop
mov
fs
scas
jge
pop
ror
jb
int3
loopne
ins
push
sub
leave
test
pop
push
push
retf
add
jae
retf
and
ficom
mov
scas
xor
mov
push
mov
dec
cdq
cmp
(bad)
daa
cld
lfs
call
retf
sbb
es
repz
ss
pop
fistp
repnz
in
stc
or
push
loopne
push
ins
push
jmp
jns
add
jno
jae
sti
mov
push
out
aam
sub
sahf
adc
mov
ins
loop
push
scas
es
add
dec
push
mov
scas
lods
ds
jg
add
stos
stos
cmp
adc
(bad)
push
and
push
lods
and
mov
mov
or
aam
(bad)
push
ss
out
enter
sub
fnstenv
fs
xlat
ins
or
jg
mov
inc
adc
fsub
sbb
cmp
jge
sub
(bad)
aad
cmps
gs
jb
out
sbb
sub
lods
stos
pop
add
xor
push
adc
fcom
xchg
dec
loopne
add
sbb
jo
(bad)
aam
jp
jnp
sbb
in
and
pop
mov
push
cwde
xchg
jl
mov
test
and
and
ins
retf
sub
cmp
push
xchg
mov
xor
or
adc
scas
push
adc
fcom
(bad)
xor
hlt
movs
mov
cmps
cwde
shr
xchg
ficom
retf
test
daa
xlat
xchg
sub
pusha
call
pop
movs
es
fsubr
xchg
cld
dec
imul
ss
jmp
dec
imul
aas
out
mov
xchg
sbb
cmp
mov
and
mov
mov
ins
pop
inc
and
inc
js
xchg
or
inc
outs
xchg
enter
cmps
push
inc
jecxz
sahf
mov
sbb
call
cli
(bad)
loope
push
outs
xor
lds
mov
dec
mov
mov
test
mov
fs
mov
pop
int3
mov
fucom
adc
xor
(bad)
frstor
push
push
jg
mov
mov
cmps
xchg
inc
out
push
dec
sbb
movs
stc
pop
(bad)
pop
(bad)
fiadd
fsub
dec
mov
jne
add
sub
and
and
ss
sbb
and
push
cmp
test
test
xlat
cmps
and
inc
sbb
fbld
in
mov
xor
and
outs
mov
mov
push
loop
shrd
mov
mov
sub
fs
xor
ins
dec
mov
fsubr
mov
mov
dec
sbb
sbb
fmul
pushf
neg
mov
not
add
mov
mov
enter
adc
add
inc
push
sub
sbb
shl
repnz
ret
push
xchg
aaa
imul
jp
iret
test
movs
outs
mov
lea
or
adc
and
lds
out
push
add
neg
sbb
dec
mov
push
adc
push
les
movs
(bad)
cs
nop
jmp
(bad)
mov
shr
(bad)
(bad)
push
add
pop
or
arpl
xor
dec
xchg
pop
popa
cmc
(bad)
sub
pop
shl
and
loopne
repnz
mov
mov
iret
aaa
frstor
outs
jnp
and
adc
inc
xchg
cs
arpl
(bad)
xlat
pushf
pop
out
mov
push
push
aas
xlat
xchg
std
mov
cwde
fdiv
and
xor
pop
fwait
ins
jle
lods
out
mov
and
mov
test
mov
push
pop
cdq
xlat
dec
in
cmps
in
pop
ror
dec
xchg
dec
jne
jge
adc
mov
sbb
fbstp
jnp
ins
cmp
mov
fucomi
movs
or
aam
and
pop
push
and
das
bound
repz
jnp
jmp
push
xor
cmps
retf
lock
adc
aas
jae
pop
pop
sub
test
ret
sub
xor
std
xchg
sub
dec
aas
push
jl
add
icebp
cmp
fwait
iret
test
xchg
daa
jbe
sub
mov
retf
loopne
repnz
fmul
leave
test
int3
and
rcl
dec
(bad)
mov
cmps
mov
dec
adc
dec
inc
pop
dec
dec
loope
xchg
mov
xor
rcl
and
push
mov
loop
sbb
dec
dec
mov
and
xchg
mov
mov
(bad)
les
enter
mov
lods
ret
xor
(bad)
jmp
xor
sti
adc
inc
push
pop
pop
inc
jae
test
xchg
and
movs
pop
stos
fs
sub
mov
call
popf
fwait
jae
xor
nop
int
mov
fcom
mov
cmpxchg
(bad)
pop
jmp
xor
mov
or
jmp
aas
mov
pop
cli
mov
sahf
and
cmps
jmp
ds
into
sbb
dec
xor
mov
mov
lods
push
gs
shl
push
or
out
xor
retf
mov
call
pshufw
mov
push
mov
cmps
xor
adc
lea
jle
mov
jns
push
or
std
push
jmp
add
sbb
xor
cwde
lea
div
hlt
data16
ss
jbe
sbb
ins
sbb
or
std
jecxz
out
adc
lock
cmp
cmps
sub
sti
(bad)
std
dec
cmp
sbb
pop
xlat
enter
lahf
popf
call
retf
lds
pop
inc
push
xor
adc
xchg
sbb
and
sub
jae
mov
daa
pop
xor
jle
js
pop
pop
jnp
inc
sbb
mov
aad
and
fs
xor
sahf
xor
inc
push
(bad)
jo
or
push
mov
mov
mov
dec
inc
call
in
ds
(bad)
mov
jecxz
cmp
add
jmp
inc
mov
cmp
mov
data16
fcmovnu
je
jg
nop
loopne
into
mov
fcomp
call
inc
movs
stos
loope
dec
in
stos
clc
push
sbb
loop
jge
add
cdq
jp
mov
stos
adc
mov
cmp
jmp
das
sub
(bad)
sti
add
lods
sub
xor
and
dec
adc
mov
dec
push
sar
test
arpl
in
repz
mov
mov
mov
sbb
pop
add
xchg
mov
stos
aam
sbb
jnp
sub
inc
xchg
movs
icebp
fdivp
inc
aas
mov
test
movs
and
not
pusha
or
movs
xchg
sbb
cdq
cmps
mov
adc
and
sbb
loopne
sbb
test
std
pop
sbb
fsubr
inc
cmc
push
or
imul
push
cdq
sub
adc
mov
sbb
jg
inc
push
jle
dec
jno
xchg
pop
mov
stos
dec
arpl
push
pop
cmc
mov
das
es
cli
adc
lds
imul
mov
xchg
jo
rcl
mov
mov
add
pop
sbb
lods
mov
setb
pop
push
aaa
out
lahf
or
jmp
ficomp
leave
xchg
(bad)
nop
cmc
xchg
cmc
stos
and
pop
sbb
fldenv
outs
pop
je
and
adc
data16
xor
shl
enter
sub
fist
leave
(bad)
mov
mov
xor
loopne
ja
pop
daa
sub
scas
cmp
push
adc
inc
xor
outs
sbb
mov
dec
and
add
xor
xchg
movs
ds
cmp
iret
push
jne
mov
or
mov
xor
in
xchg
pop
popa
fsub
mov
mov
pusha
inc
or
jo
push
icebp
push
outs
(bad)
pop
xchg
pop
outs
loopne
inc
popa
in
add
pop
adc
test
(bad)
pop
std
rcr
retf
or
(bad)
fdivr
nop
xchg
imul
xchg
cwde
mov
mov
popa
aam
cmp
push
arpl
cmp
in
test
xor
in
xor
mov
pushf
sahf
pop
sar
xor
lahf
and
outs
movs
xacquire
push
sub
jnp
call
adc
jno
call
cmp
aad
pop
push
xchg
push
scas
adc
cmps
xchg
fld
sbb
out
mov
outs
and
retf
mov
push
jecxz
cmp
js
sub
fs
stos
repz
mov
sbb
call
retf
push
sub
dec
pop
test
jecxz
ins
mov
jmp
int3
cdq
das
dec
inc
mov
shl
sti
pop
ret
ins
or
adc
cmp
imul
sbb
je
mov
dec
xor
sbb
mov
cwde
mov
xor
ret
mov
jg
sub
cld
and
repnz
xor
and
push
out
out
xchg
mov
cmps
bound
push
adc
aam
cmp
in
inc
adc
(bad)
pop
mov
push
mov
lock
jp
mov
js
popf
arpl
ds
mov
mov
xor
xor
push
aam
ret
xchg
imul
ins
pushf
mov
and
push
dec
and
mov
cmp
rcr
jne
enter
fmul
inc
mov
popa
imul
xchg
add
jb
in
out
sbb
ret
xor
or
test
daa
in
ror
pop
push
cmp
jns
pop
sub
stos
outs
pop
sub
dec
cmp
xor
jle
gs
out
fs
jno
cmps
hlt
and
mov
jb
cmp
and
sbb
call
fs
daa
ret
jmp
pop
xchg
(bad)
hlt
inc
int
jecxz
mov
add
push
js
jo
push
out
js
outs
and
pop
cdq
cdq
push
sub
push
xor
sbb
jne
cli
mov
and
jnp
and
call
(bad)
pusha
(bad)
cld
nop
fnsave
pusha
(bad)
(bad)
(bad)
test
mov
in
outs
popf
test
and
mov
in
ret
data16
bound
xor
ret
mov
das
cmp
outs
sub
adc
inc
ins
shr
(bad)
xor
ror
mov
pusha
int
sbb
pop
test
inc
aad
xor
cmp
mul
lds
jbe
pop
bound
stc
inc
cmp
mov
stos
xchg
xchg
sub
jl
xchg
popf
daa
dec
mov
loop
mov
jp
mov
std
cmc
sub
and
mov
and
outs
cmp
aam
aam
sub
mov
ret
punpckhwd
rcl
dec
mov
inc
int
xchg
ror
hlt
popa
mov
lods
mov
mov
xor
pop
xchg
div
retf
retf
add
movs
call
cli
xchg
(bad)
cmp
or
js
jbe
aam
adc
test
mov
stos
jae
in
stos
lods
retf
lea
mov
and
jno
rcl
mov
add
out
sub
loopne
pushf
cmp
(bad)
mov
(bad)
mov
sub
repz
xor
out
lea
ss
dec
or
es
ss
aam
call
sub
and
xor
jo
sub
stos
jmp
out
pop
inc
or
mov
mov
int
fadd
xchg
shr
loope
mov
inc
xor
imul
pop
aam
repz
stos
les
(bad)
leave
jo
and
mov
mov
xor
mov
iret
jmp
adc
push
inc
imul
xchg
movs
cli
int3
xchg
push
add
in
sbb
sbb
cmps
pop
add
mov
jae
cmp
jle
cmp
retf
push
sbb
push
fcomi
xchg
ja
push
rcr
push
cmp
cmps
test
or
inc
sbb
movs
(bad)
dec
or
sub
sub
xchg
and
popf
push
and
cmp
repz
test
adc
aas
jo
daa
(bad)
sub
out
xlat
dec
or
jp
cmp
out
add
sbb
stos
test
(bad)
xchg
dec
aam
into
dec
jbe
push
or
sub
fisttp
jb
or
mov
xchg
add
(bad)
sub
lds
aaa
mov
fwait
mov
mov
ins
add
fbstp
pop
pop
jp
pop
imul
fs
hlt
pop
out
cmp
int3
cdq
pop
sbb
sub
mov
mov
adc
stos
popf
jmp
es
cmps
mov
jge
fisub
xchg
inc
xor
aad
cmp
ds
and
aaa
in
pop
sub
xor
(bad)
cmp
mov
cmps
shl
inc
out
pop
fiadd
jmp
ror
jl
fcom
loopne
mov
and
jle
add
aam
into
and
loop
stos
jmp
jo
cmp
xchg
arpl
dec
inc
in
xor
clc
mov
add
mov
loopne
cdq
jbe
je
and
retf
call
mov
jae
add
mov
sbb
cmp
jb
ds
outs
fst
jnp
add
cmp
sub
sub
push
mov
call
(bad)
out
or
sbb
mov
push
es
cmp
ret
test
and
sbb
mov
add
mov
pop
mov
dec
mov
push
mov
(bad)
sti
lds
wbinvd
das
cmp
imul
scas
std
sbb
xchg
les
out
or
jge
dec
call
out
lahf
mov
sbb
adc
jp
int
sub
jmp
dec
jl
sbb
mov
push
scas
rcr
push
xchg
xchg
xor
xor
(bad)
jl
ins
dec
lods
adc
pop
test
jp
rol
les
and
sbb
push
ins
out
sub
xchg
cmp
dec
cld
jmp
dec
xor
pop
cs
lea
popf
cmp
in
mov
add
mov
xchg
out
test
and
rol
dec
rcl
cmp
and
sar
repnz
and
data16
test
mov
inc
cli
daa
adc
and
sbb
cmps
xchg
outs
jecxz
les
pop
fild
lock
pop
loopne
xchg
stos
xor
and
call
dec
iret
mov
stc
jp
rcr
stos
lock
inc
ins
nop
adc
int3
pop
lock
push
or
mov
or
sub
retf
mov
inc
adc
jg
(bad)
adc
xor
out
push
mov
aam
mov
(bad)
cmps
mov
jecxz
movs
xchg
dec
jmp
ret
add
cmp
mov
(bad)
mov
imul
lahf
fld
bound
loopne
sbb
pop
pop
jae
or
inc
loop
iret
movs
int
push
push
add
adc
(bad)
adc
push
cmc
(bad)
dec
repnz
out
pop
sbb
(bad)
call
enter
xchg
ret
xor
daa
sub
test
cmp
push
leave
add
or
movs
inc
fisubr
icebp
repnz
int
mov
xchg
adc
sbb
faddp
mov
aam
stos
out
or
sbb
test
pop
push
retf
adc
nop
js
(bad)
ss
std
shr
lods
mov
mov
jb
xchg
fst
push
sbb
and
daa
in
jno
mov
push
test
or
test
mov
cmp
shr
out
cmp
ret
mov
xchg
jge
cdq
sahf
ret
jmp
mov
pop
shl
inc
call
and
shl
push
push
ret
adc
cld
cdq
jp
sbb
mov
cdq
sbb
mov
xchg
aam
repnz
or
dec
cmp
mov
jae
push
stos
daa
out
add
cld
add
xor
cmps
sub
push
xor
outs
imul
sub
mov
inc
cli
(bad)
in
xlat
xchg
xchg
js
push
loop
ror
icebp
in
fisub
gs
sbb
pop
test
test
rcr
jno
loopne
dec
and
push
aad
adc
(bad)
fs
and
hlt
push
pop
test
imul
retf
cmc
movs
sbb
in
xchg
adc
mov
(bad)
pusha
xchg
ret
jns
mov
push
cmc
sub
push
push
in
bound
sbb
repnz
mov
fadd
pop
jle
push
adc
pop
btr
xor
shr
lds
ror
shl
inc
fnstsw
iret
push
loopne
lds
sbb
sbb
sub
loopne
int3
mov
inc
sti
mov
push
push
mov
xchg
pop
std
push
push
dec
lea
mov
imul
cwde
xchg
and
sar
in
loopne
ins
push
lods
dec
out
das
retf
inc
xor
pop
mov
sub
hlt
pop
rcl
push
push
ss
adc
cli
imul
mov
aaa
xor
pop
and
xor
or
add
sar
std
or
mov
mov
sbb
and
xchg
mov
ds
and
xchg
mov
dec
pop
(bad)
shl
mov
sub
ret
adc
iret
dec
mov
(bad)
std
cli
.byte
.byte
