sbb
add
and
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
dec
outs
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
add
add
pop
sub
push
lea
push
lea
or
xor
nop
nop
nop
nop
add
jne
mov
sub
adc
jae
mov
inc
mov
inc
jmp
nop
nop
nop
mov
add
jne
mov
sub
adc
adc
add
ja
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
ja
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jle
mov
inc
mov
inc
dec
jne
jmp
mov
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
pop
sub
push
lea
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
pop
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
push
mov
jns
movzx
inc
push
inc
mov
push
call
pop
mov
add
jmp
lea
add
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
popa
jmp
push
push
pop
and
or
xchg
out
scas
mov
call
add
fiadd
add
out
outs
dec
add
add
push
push
add
add
jno
push
push
mov
inc
cld
push
or
or
adc
or
xor
fs
fstp
les
sub
push
jb
ret
jmp
outs
inc
out
pop
pop
pop
leave
ret
mov
push
mov
sbb
popa
jl
cmp
je
adc
je
push
inc
ja
out
out
adc
stc
pop
pop
cmp
or
mov
cmp
sti
cli
(bad)
(bad)
call
punpckldq
sahf
in
or
push
leave
ret
addr16
push
inc
or
lahf
mov
or
test
push
mov
jne
or
pop
cmp
std
idiv
jae
and
je
push
cs
mov
mov
ret
mov
add
mov
das
xchg
push
mov
rcr
jmp
mov
push
jns
fdivrp
(bad)
dec
out
jmp
mov
movzx
sub
xor
add
lea
push
add
push
and
ins
add
call
cld
(bad)
mov
adc
inc
inc
cmp
jge
mov
in
and
jo
rcl
and
sub
cld
ss
inc
add
fs
or
rcr
lods
adc
sub
or
sbb
(bad)
pop
push
in
je
movhps
push
sbb
fld
test
push
dec
test
dec
push
or
adc
test
or
in
pusha
inc
cli
std
adc
or
sub
push
sbb
fadd
rol
inc
and
in
mov
arpl
or
adc
sub
push
loope
inc
push
push
pop
push
pop
push
arpl
fmul
push
into
jge
jns
dec
jbe
in
xor
push
mov
mov
mov
ins
fsub
or
in
daa
cmp
jle
outs
pop
or
inc
ss
adc
fild
and
add
xor
push
jbe
and
adc
into
pop
and
mov
and
sub
div
popa
pop
mov
std
or
add
xchg
bound
and
(bad)
fcomp
mov
push
clc
stos
shl
popa
ins
retf
or
mov
or
dec
add
mov
ins
dec
jl
dec
jge
and
mov
inc
cmp
dec
in
push
mov
dec
bound
jne
xchg
jge
in
adc
pop
add
xchg
or
cmp
xchg
sbb
inc
push
stc
in
jmp
inc
pop
jne
pusha
cld
fs
bound
cmp
jmp
jecxz
add
pop
sti
dec
cs
add
pusha
sti
jle
in
inc
into
inc
add
cli
pop
cli
fsub
xchg
add
xchg
js
add
push
stc
push
push
or
enter
and
add
and
inc
push
clc
mov
and
jne
cmp
popf
and
shrd
jmp
lea
add
add
xlat
jb
add
push
pushf
clc
inc
push
in
(bad)
mov
add
test
popf
shl
sbb
clc
es
int3
push
xor
mov
push
dec
add
add
push
pop
and
cmp
pop
jb
in
jns
add
les
clc
add
iret
xor
cs
cld
mov
xor
adc
jbe
movs
mov
and
mul
cld
or
idiv
jno
and
mov
inc
clc
push
popa
add
das
fisubr
outs
outs
mov
lock
jo
call
ja
ret
jne
mov
or
mov
popf
xor
inc
sti
add
in
in
jmp
mov
sti
daa
imul
out
fdivr
push
push
cmp
pop
or
ins
jmp
jae
pop
pop
jbe
jo
and
lock
out
adc
test
mov
cmps
je
push
fldenv
push
cmp
pop
sbb
push
imul
add
(bad)
xlat
or
idiv
mov
sub
jge
fild
fcomp
sahf
jbe
cmp
xor
jecxz
fcom
or
movs
push
not
mov
jnp
and
int
jmp
cmp
jl
ins
mov
cmp
cmp
add
mov
mov
add
(bad)
fild
ja
inc
and
movs
jae
mov
test
jmp
mov
aam
jge
es
mov
(bad)
in
int
push
div
dec
mov
std
mov
mov
stc
test
jne
cmp
(bad)
imul
ret
inc
push
arpl
shl
xor
outs
pusha
adc
xchg
retf
or
arpl
and
enter
jmp
mov
fwait
scas
sbb
mov
adc
push
(bad)
cmp
add
enter
in
jmp
jnp
ret
out
sbb
adc
cmp
dec
out
jns
jge
xchg
adc
test
and
pop
fdiv
int
int3
and
xchg
mov
pop
daa
adc
or
call
sub
in
xchg
cmp
or
push
mov
(bad)
pusha
ret
pop
fisub
(bad)
nop
mov
xchg
or
pop
popf
xchg
fld
leave
fs
cmp
(bad)
xchg
shl
and
loop
sahf
test
mov
push
jge
adc
in
stos
or
push
xchg
sub
xlat
xchg
adc
or
into
adc
popa
not
dec
fdivr
or
jp
adc
push
cmp
cmp
adc
add
xor
xchg
daa
adc
cmp
mov
pusha
test
and
mov
jp
push
mov
(bad)
and
rcl
rol
jae
cdq
dec
cli
or
cli
aad
pop
push
inc
dec
retf
push
xor
les
xor
or
cld
xchg
or
sbb
xchg
adc
add
popa
ss
es
outs
push
xchg
js
push
sbb
movs
test
jg
add
ret
dec
xor
mov
(bad)
ins
clc
dec
cmc
shr
inc
mov
or
add
loope
or
scas
(bad)
in
shr
xorps
loop
call
test
add
mov
and
or
loop
or
or
add
inc
pusha
test
and
(bad)
mov
test
int3
js
add
add
icebp
rcl
xchg
js
in
inc
pop
mov
stos
std
xor
clc
or
adc
adc
jmp
or
jecxz
mov
mov
jne
sub
cmp
mov
lods
or
cs
mov
sbb
sub
test
xor
mov
xor
int3
adc
hlt
mov
scas
dec
outs
add
mov
in
xor
or
push
fld
push
xchg
je
mov
mov
xor
mov
inc
cmp
jge
dec
mov
mov
nop
(bad)
fnstenv
nop
adc
sbb
rcr
cmp
cwde
inc
retf
add
inc
mov
retf
push
nop
mov
cwde
pushf
push
xchg
ins
popa
in
mov
pop
xchg
and
cmp
sub
xchg
xor
(bad)
(bad)
in
ror
xor
mov
cmp
rol
sbb
sub
pop
adc
sub
arpl
pop
xchg
or
test
cmps
nop
sub
mov
inc
adc
mov
and
sahf
mov
adc
push
scas
lock
fcmovnu
pop
loop
add
push
test
add
sub
nop
jns
stc
and
mov
jle
mov
pop
fidivr
sbb
mov
xor
push
lea
cmp
jge
inc
push
or
push
mov
mov
push
mov
push
sub
mov
mov
pop
je
push
test
ret
cmp
fdiv
adc
push
imul
or
lds
scas
(bad)
jmp
mov
mov
in
adc
sub
hlt
movs
sti
(bad)
ss
(bad)
sbb
test
sub
mov
das
jmp
aas
ud2
(bad)
out
mov
add
adc
or
xchg
inc
mov
or
or
add
test
call
clc
or
mov
mov
jmp
outs
mov
push
(bad)
lea
(bad)
inc
out
in
(bad)
jns
data16
lea
call
daa
(bad)
xor
xchg
sub
shl
or
sbb
inc
xchg
sbb
into
cwde
loope
or
gs
les
push
js
outs
add
push
jp
inc
idiv
pop
and
or
jbe
and
cmp
sbb
sar
xchg
adc
fdivr
add
ror
pop
test
ret
or
aas
dec
push
fadd
dec
push
enter
push
nop
or
xchg
push
pusha
ret
add
cmp
sub
call
mov
mov
jo
and
push
mov
rcl
push
stos
cmp
(bad)
xlat
push
fsub
lock
pop
pushf
and
xor
jo
or
xchg
jno
mov
into
jbe
aad
cmp
ss
xor
or
ud1
enter
in
call
cdq
mov
sub
xchg
and
push
cmps
sub
sbb
dec
push
jl
push
pop
xchg
and
xor
xor
leave
test
scas
mov
gs
cli
sub
xor
je
test
mov
lea
ds
loop
call
test
mov
push
mov
scas
out
mov
jge
cmp
(bad)
pop
inc
mov
or
add
or
mov
aad
into
sar
and
ins
js
and
mov
loope
add
aas
mov
and
add
bound
xor
ins
les
inc
cmc
push
inc
das
nop
add
sub
mov
mov
int3
lds
or
lds
and
cld
sub
push
or
jl
push
dec
ret
jg
add
dec
jge
not
adc
clc
ss
jb
pop
push
in
fist
adc
sub
nop
and
in
cmps
and
or
xchg
sub
(bad)
fs
mov
sti
push
cmp
js
shl
cmp
cmp
enter
test
xor
push
rcl
cdq
mov
div
push
xchg
add
shl
mov
push
xor
les
push
cwde
mov
dec
arpl
dec
inc
outs
popa
jl
mov
call
iret
lock
sbb
or
ss
bound
and
das
cmp
or
call
jb
arpl
pusha
stc
call
adc
test
or
pusha
clc
fsub
dec
aaa
pop
neg
ins
sub
adc
xor
enter
div
jmp
cmp
arpl
push
cmc
push
cmc
xor
cmp
inc
das
xor
hlt
xor
cli
in
ret
ror
jge
push
daa
dec
push
adc
lock
hlt
aaa
out
xchg
and
cs
retf
and
mov
or
sbb
lods
fsub
out
dec
or
pop
inc
jbe
daa
inc
xor
or
add
sbb
jle
add
cmp
pop
jp
cmp
enter
xlat
and
test
mov
rcr
pop
cdq
das
lahf
cmp
sub
das
xchg
push
jnp
xchg
cmps
popf
inc
movs
iret
dec
pop
leave
pop
adc
data16
fld
aaa
je
lds
lock
xchg
out
dec
add
or
push
rcl
es
ds
movs
push
push
cmp
enter
lods
push
fld
pop
inc
xchg
jno
mov
outs
lds
hlt
mov
in
pop
mov
xor
and
sahf
pop
sub
pop
call
aaa
subps
jbe
sbb
stos
jmp
inc
push
in
out
imul
mov
sub
push
(bad)
js
dec
(bad)
adc
(bad)
sbb
add
sub
sub
gs
xor
inc
cmovns
cmp
add
mov
ror
and
adc
and
fcomp
xchg
jb
and
xor
cs
mov
cdq
jne
lea
je
push
and
ds
sub
inc
fcom
rcl
push
dec
dec
mov
hlt
and
xor
push
xchg
and
iret
add
adc
sbb
fstp
stos
xchg
pop
sbb
enter
jne
fldcw
arpl
sahf
loopne
daa
loope
and
sbb
adc
sub
ins
test
call
pusha
loope
outs
or
(bad)
jne
inc
inc
cmp
jge
(bad)
pop
test
mov
inc
and
inc
jne
mov
push
lods
dec
jne
sub
mov
pusha
sbb
add
inc
mov
idiv
jge
xor
in
ror
jne
fs
fimul
pop
mov
push
in
inc
mov
inc
mov
fwait
sbb
imul
inc
push
sbb
mov
and
sar
adc
shl
adc
sbb
mov
add
mov
inc
and
dec
add
mov
jp
jmp
(bad)
(bad)
jge
mov
and
and
or
inc
mov
pop
jb
je
lea
push
fwait
int3
adc
gs
cli
mov
pushf
mov
mov
xchg
mov
cmp
(bad)
dec
imul
ret
mov
shl
and
jl
lea
xchg
or
loopne
or
cmp
(bad)
xchg
xchg
inc
test
mov
dec
push
push
inc
inc
jle
push
inc
daa
fisub
rol
inc
xlat
add
fwait
mov
push
mov
(bad)
add
mov
push
sub
cmp
sub
pop
mov
push
add
ficom
add
and
and
push
cmovnp
jle
dec
add
in
dec
movs
dec
cld
arpl
or
lar
add
gs
add
ja
sub
lods
adc
(bad)
mov
mov
sbb
data16
add
lods
dec
jb
dec
cs
mov
js
pop
(bad)
push
pop
mov
sub
mov
out
enter
fmul
pusha
and
dec
ss
dec
call
mov
mov
arpl
mov
xor
les
jmp
cmc
push
leave
dec
mov
mov
inc
xor
aaa
imul
xor
add
mov
sub
in
mov
shufps
pop
inc
add
mov
cmp
mov
jg
mov
nop
adc
retf
int3
inc
add
test
pop
sbb
popa
add
sub
push
les
pusha
jl
fidivr
pop
and
mov
cmps
pop
mov
mov
sar
or
or
pop
adc
sahf
daa
xchg
adc
xor
nop
xor
call
mov
mov
xchg
cld
mov
dec
ss
add
cmps
xchg
mov
sub
dec
sub
outs
sti
push
dec
dec
mov
mov
jp
test
or
or
push
jbe
sub
mov
add
dec
js
shl
adc
mov
jl
movs
jo
rcr
fild
std
rcl
stos
or
(bad)
fild
ffreep
test
xor
sub
daa
nop
bound
xor
cld
std
inc
and
or
aad
fdivr
jae
sbb
lea
rcr
jp
and
sbb
cmps
mov
call
inc
push
or
int3
cmc
sub
dec
test
imul
mov
add
pop
fst
mov
sub
or
call
loope
neg
pusha
js
leave
push
and
xchg
(bad)
or
and
fsub
rcr
sbb
or
jb
fs
add
jnp
pop
leave
sub
imul
sub
sti
push
sbb
pop
cmp
fdiv
pop
add
dec
mov
jp
mul
idiv
pop
and
pop
leave
leave
dec
clc
test
sub
cmc
dec
sub
pop
inc
pusha
fldenv
xchg
(bad)
aas
inc
jmp
shr
dec
outs
fld
in
cmc
push
in
hlt
and
mov
test
cmp
inc
scas
movs
sub
push
xor
sti
fdiv
push
push
jnp
adc
push
push
sbb
add
lds
jbe
(bad)
sbb
sub
out
add
mov
sbb
(bad)
sub
cmps
push
adc
inc
xchg
mov
cmps
and
add
pop
cmp
test
xchg
fs
out
sbb
je
cs
jb
push
fadd
add
push
adc
sub
xor
add
dec
add
movs
in
imul
xor
and
fwait
sub
mov
dec
sbb
inc
xchg
inc
push
cld
add
add
data16
adc
add
cmp
pop
nop
adc
pop
fstp
cmp
sar
gs
cmc
add
sbb
ins
or
loope
lds
cmc
add
dec
imul
sbb
shr
xor
fwait
mov
xor
popa
mov
adc
push
mov
popf
cs
and
or
mov
not
lods
cdq
nop
adc
mov
lock
mov
jp
in
arpl
push
sub
dec
add
sbb
(bad)
inc
add
ret
shl
test
jge
fisubr
sbb
outs
add
inc
cmp
es
mov
adc
or
mov
push
fldenv
cmp
pop
and
sbb
mov
shr
adc
(bad)
xor
mov
sbb
rol
pop
popa
movs
xchg
inc
add
pop
nop
pop
sbb
add
jmp
mov
mov
mov
data16
and
xchg
cmp
mov
repnz
test
mov
jmp
and
push
in
test
(bad)
and
adc
mov
outs
mov
in
or
adc
fcomp
test
inc
jg
mov
jmp
pop
inc
imul
jge
jno
pop
cmc
fcmovnb
push
xchg
add
test
call
call
adc
out
inc
push
add
test
adc
cmp
mov
adc
sar
cmp
or
pushf
ins
addr16
push
ret
rcr
fimul
adc
jl
dec
sbb
add
popf
push
test
adc
pop
mov
add
add
rol
ret
fisubr
inc
pop
dec
push
(bad)
sti
mov
ret
add
pop
xchg
inc
jb
mov
movs
inc
add
jne
jle
inc
movs
retfw
inc
test
ficomp
pusha
inc
mov
xchg
mov
sub
test
mov
(bad)
jnp
push
rol
imul
aad
xor
popa
in
popf
test
test
add
mov
cs
imul
push
mov
test
or
sub
inc
rol
add
sbb
mov
mov
jp
mov
dec
xchg
test
ret
iret
std
xchg
jmp
add
push
repnz
pop
cmps
das
xor
sbb
rcl
sub
add
inc
pushf
adc
pop
cli
jmp
or
in
mov
or
sbb
mov
push
stos
adc
push
mov
xor
lahf
ds
loopne
jo
push
or
push
add
add
(bad)
loopne
imul
adc
and
lock
xor
pop
or
inc
dec
popa
and
cli
out
push
push
lea
out
stos
scas
loop
jnp
hlt
add
mov
dec
push
out
ds
jmp
inc
test
ret
xchg
cmp
cmc
add
lods
cmp
pop
sbb
daa
rcl
xor
out
gs
cmp
call
push
inc
outs
mov
xchg
sahf
aad
clc
sub
cld
fnsave
add
adc
dec
loopne
fcomp
sti
sub
mov
outs
inc
cmp
jne
and
cmp
dec
dec
lea
adc
and
movs
fidiv
pusha
and
cmp
mov
arpl
fbstp
inc
adc
jle
cmp
adc
mov
add
pop
arpl
adc
add
jne
xor
test
add
inc
push
jo
pop
pop
enter
push
sub
loop
retf
push
test
mov
pop
ss
dec
ror
sbb
xchg
cdq
std
ja
movs
xchg
mov
adc
fwait
push
(bad)
and
push
ret
xchg
and
sbb
(bad)
cmc
and
pop
push
in
sbb
cmp
mov
and
ss
pop
inc
adc
jno
iret
sbb
or
dec
or
cmp
data16
ins
ret
xor
mov
mov
xor
xor
in
inc
fdiv
cmp
jne
adc
idiv
jne
push
push
dec
adc
or
mov
test
mov
cld
fisub
dec
xor
add
jle
add
xchg
std
shr
sbb
lock
adc
xor
aaa
push
daa
repnz
test
pusha
push
daa
movs
mov
push
pop
scas
push
jl
and
loope
dec
aam
mov
cmp
aas
js
dec
jne
mov
sub
in
ins
cmp
sub
or
sub
jbe
mov
sti
add
fidiv
lods
sbb
std
cmp
dec
cs
mov
inc
fwait
cmp
mul
enter
cmps
mov
cmp
in
jl
les
jmp
je
cmp
add
cld
jbe
in
adc
adc
or
xchg
iret
fcomp
jle
mov
sub
jl
enter
arpl
inc
shl
(bad)
loopne
aas
push
les
xchg
sub
cmp
fmul
inc
(bad)
add
lea
sbb
pop
ss
and
pop
rol
or
mov
adc
fidiv
push
test
xor
pusha
mov
push
pusha
mov
cli
sti
push
loopne
cmc
push
push
pusha
mov
sbb
mov
fld
add
push
push
mov
and
mov
add
loop
or
add
mov
jne
sbb
mov
inc
inc
sbb
lds
mov
adc
mov
es
mov
sub
aam
and
mov
test
das
(bad)
fstp
jb
cmp
jb
mov
mov
or
enter
or
int3
(bad)
outs
inc
mov
cmp
rcr
sbb
ja
(bad)
and
jl
push
in
mov
imul
mov
add
pushf
mov
pop
mov
add
adc
inc
test
(bad)
aaa
push
xchg
into
or
les
es
push
out
sbb
add
mov
adc
add
inc
add
add
loopne
or
pop
lock
adc
push
or
je
int
sbb
js
test
add
inc
add
in
jne
adc
dec
xor
dec
sbb
xor
xor
nop
rcr
scas
jb
push
dec
add
mov
aad
adc
movs
(bad)
lea
test
in
pop
outs
inc
hlt
mov
pop
adc
das
ins
pop
sti
mov
dec
adc
test
sbb
add
sub
ret
jge
xchg
sub
or
test
add
xor
inc
mov
cs
or
sub
mov
scas
mov
aam
outs
pop
test
sub
or
retw
bound
(bad)
cmp
jne
push
mov
cwde
push
and
sahf
loop
mov
mul
outs
mov
add
js
mov
push
ret
sti
sti
fbstp
add
cli
add
or
or
jbe
fcomp
shl
(bad)
push
nop
mov
inc
pop
adc
add
cwde
jae
mov
mov
add
sbb
mov
pop
jno
xchg
mov
add
mov
daa
shr
or
rol
fstp
lock
jb
jnp
add
inc
lahf
sub
jae
dec
add
scas
add
loope
fadd
mov
out
inc
jns
xor
pop
iret
movs
mov
dec
inc
inc
xchg
cwde
inc
pushf
and
ins
jle
call
shr
adc
daa
add
adc
push
adc
adc
jge
push
inc
inc
or
add
or
pop
add
pop
mov
scas
dec
jp
in
invd
adc
jmp
push
adc
pop
in
sub
inc
pushf
fdivr
add
dec
or
dec
mov
xchg
cmc
cmps
push
(bad)
cmp
adc
dec
and
js
xor
jmp
into
add
inc
icebp
mov
or
call
shr
leave
loopne
sbb
push
imul
and
sar
push
retf
push
js
jnp
adc
add
ficom
movs
and
out
loope
add
adc
enter
cmp
shl
xchg
sahf
inc
adc
cmp
xor
aaa
jle
test
int3
sbb
std
cwde
iret
bound
jp
push
lahf
sbb
jmp
cli
or
push
jmp
cmc
adc
pop
cwde
jmp
adc
cmc
push
sbb
dec
xor
xor
sub
sahf
push
jb
push
hlt
jg
and
and
pop
sub
inc
sbb
jb
push
jb
add
and
push
or
add
lds
cmp
xchg
not
sbb
xor
push
pop
xor
pop
xor
push
pop
pop
mov
test
cmp
(bad)
fiadd
call
mov
mov
push
push
outs
dec
sub
test
adc
jne
cmp
push
add
and
xor
inc
dec
or
adc
push
xchg
inc
cmp
jp
es
pop
sti
fisub
adc
pop
xor
ins
repnz
mov
in
xchg
jle
mov
push
cdq
retf
in
popf
je
rcl
push
pop
push
stc
inc
add
xor
int3
rol
jae
in
idiv
test
pushf
add
(bad)
(bad)
cld
jae
popf
ins
adc
pop
push
xor
add
sub
sar
lock
xchg
ret
dec
sub
or
in
xchg
jl
mov
call
pop
mov
adc
pusha
add
mov
cmp
loopne
sbb
mov
mov
test
je
test
leave
bound
cmp
inc
imul
inc
mov
push
add
inc
or
push
inc
sahf
jge
sub
mov
dec
mov
cdq
jne
bound
icebp
jo
jne
sub
sbb
push
inc
xabort
mov
ins
mov
pop
jno
pop
movs
daa
cmp
sub
mov
mov
fdiv
int3
mov
sub
pusha
and
and
xchg
jge
and
in
and
push
enter
call
outs
sbb
push
cmp
push
shr
int
movs
ret
dec
xor
or
inc
mov
mov
add
add
add
or
sub
or
inc
xchg
or
adc
les
xor
push
fcomp
aas
pop
out
(bad)
sbb
jmp
jmp
sub
lods
jno
lea
jae
cmps
inc
inc
push
xchg
push
mov
jmp
fstp
pop
jbe
sub
add
xor
and
inc
mov
ret
sub
gs
pop
sub
or
inc
enter
lock
mov
paddq
inc
rol
fcomp
test
add
xchg
jmp
retfw
mov
cmp
add
in
pop
dec
(bad)
and
xor
sbb
adc
cmp
mov
cwde
jg
mov
das
sar
mov
inc
mov
pushf
jle
lods
enter
xchg
xor
push
movs
gs
cmp
ret
in
hlt
push
jmp
ret
push
pop
or
adc
(bad)
fsubr
std
jmp
test
sbb
out
jle
in
jnp
inc
int3
stos
loopne
movs
jmp
pop
stos
lods
mov
loop
cld
rcr
arpl
xor
xor
add
inc
cmp
adc
sbb
or
or
jmp
adc
fimul
or
and
add
and
push
adc
hlt
xchg
jl
sub
bound
mov
or
mov
mov
or
fs
fs
cmp
fs
dec
and
mov
fs
mov
fs
in
mov
fs
inc
mov
mov
pop
inc
and
mov
mov
sub
mov
mov
cmp
pop
mov
push
pop
pop
pusha
mov
mov
pop
fs
imul
pop
mov
lea
mov
pop
int3
jl
add
jb
adc
push
test
mov
xor
enter
cmp
adc
pushf
xor
retf
test
dec
enter
(bad)
and
test
out
mov
push
enter
sahf
adc
or
cdq
nop
rcl
inc
xchg
or
test
fs
nop
gs
shl
es
jecxz
cdq
nop
gs
repnz
test
fs
add
enter
adc
daa
lock
mov
sub
xor
xor
retf
test
pusha
lods
(bad)
adc
adc
or
and
test
bound
mov
enter
jnp
retf
test
and
dec
enter
mov
adc
enter
xor
test
mov
in
enter
icebp
inc
test
mov
gs
sub
xor
pop
es
cmp
gs
xchg
inc
pop
inc
pusha
pop
es
push
fs
push
fs
outs
es
nop
jo
je
les
dec
push
mov
push
les
je
cld
or
pop
sub
pop
jle
and
xor
jg
xlat
jne
fcmovu
and
xor
mov
sub
mov
sbb
loop
nop
lods
ins
and
mov
mov
in
in
ins
sbb
and
pop
pop
or
fs
sahf
pop
and
mov
aas
and
and
add
cwde
cmp
push
xor
sub
push
push
test
scas
popf
or
hlt
cmp
add
jo
add
mov
pusha
push
adc
adc
mov
lea
dec
push
mov
je
add
push
pushf
ins
inc
scas
je
jle
bound
add
aaa
push
out
add
or
inc
mov
xchg
inc
jae
add
and
add
mov
ins
leave
int
lods
test
and
jbe
push
dec
sbb
adc
add
or
mov
adc
cmp
sbb
pusha
and
adc
adc
and
mov
mov
pop
add
mov
addr16
mov
mov
push
mov
(bad)
out
or
add
sub
je
sub
jne
mov
and
adc
or
adc
rcr
retf
ins
mov
xchg
jbe
or
add
adc
ret
sub
inc
fldlg2
add
daa
or
adc
enter
test
adc
jo
inc
mov
fisttp
aam
sar
sub
adc
leave
leave
pop
pusha
dec
dec
pop
(bad)
mov
add
push
mov
movsx
cmp
sbb
push
cmps
repnz
xor
add
xlat
outs
push
retf
mov
push
sub
je
fistp
mov
xchg
ficomp
inc
xor
cld
jl
imul
not
pop
push
or
push
pop
hlt
adc
lock
leave
dec
cmp
adc
into
inc
fisttp
push
lock
xor
add
adc
cmp
or
mov
cmp
pushf
scas
mov
mov
sub
adc
jmp
xor
(bad)
jl
push
mov
cld
cmp
add
xor
adc
cmp
data16
mov
retf
adc
sahf
xor
push
xchg
jmp
test
sub
or
cmp
push
js
inc
cld
lds
sub
call
mov
jmp
test
mov
jae
sub
cmps
in
ja
ret
sbb
ret
mov
mul
adc
adc
stos
or
adc
pop
mov
push
mov
sbb
add
fisub
push
pop
inc
inc
addr16
enter
and
add
inc
xor
jmp
push
pop
das
push
mov
add
dec
pusha
jo
inc
add
jae
enter
sbb
add
inc
sub
push
mov
and
push
pusha
add
and
(bad)
add
cmp
xor
(bad)
or
ret
cwde
cld
mov
cld
jbe
sbb
inc
dec
lock
loopne
bound
pop
jo
inc
ss
and
mov
dec
pop
lahf
sti
sbb
sub
daa
lods
push
and
fs
jmp
mov
dec
sbb
jne
dec
js
arpl
push
loop
sbb
inc
mov
pcmpgtd
in
pop
jbe
add
inc
adc
pop
jge
sbb
xor
dec
xor
out
push
and
mov
or
mov
loopne
idiv
mov
dec
cmp
ja
inc
jmp
ret
and
call
(bad)
add
xor
cmp
jbe
js
inc
ja
icebp
outs
sub
and
mov
ins
imul
mov
or
(bad)
idiv
push
retf
lock
jmp
sti
or
pop
add
add
mov
faddp
add
inc
jmp
cmp
push
and
mov
cmp
enter
repz
or
cmp
xchg
sti
movs
jge
jnp
jnp
out
mov
jmp
je
outs
retf
ss
je
and
jmp
or
in
sbb
push
xchg
fistp
push
dec
fist
inc
push
push
jecxz
inc
dec
inc
out
pop
inc
in
xor
push
and
aas
test
fcom
outs
or
mov
mov
sbb
rcl
mov
shl
pop
ins
fcmovnu
hlt
dec
fist
push
call
sbb
and
cli
jne
adc
call
mov
jbe
mov
cmp
(bad)
ret
and
outs
mov
sbb
jb
sub
or
mov
add
or
cmp
(bad)
push
push
lock
and
push
and
and
sbb
cmp
hlt
sbb
cmp
clc
adc
cli
adc
jns
xchg
or
or
(bad)
stos
and
das
dec
and
inc
mov
or
xlat
and
stos
jp
ds
fstp
sub
or
not
and
mov
sbb
ss
or
cli
xchg
or
sub
mov
inc
jmp
in
mov
sub
or
(bad)
sbb
scas
dec
cmp
pusha
addr16
inc
or
or
inc
push
xchg
ins
fild
adc
adc
dec
and
cs
mov
bound
xor
es
dec
jg
lock
loopne
add
jnp
mov
sub
jp
je
jmp
in
cmp
adc
sub
fmul
(bad)
into
(bad)
jmp
jmp
leave
fimul
out
addr16
pop
fcom
xor
je
push
jmp
les
fwait
cmp
shr
push
and
mov
push
cs
imul
ins
jb
nop
jmp
jp
sbb
adc
sbb
outs
out
adc
xchg
ret
or
cmp
mov
(bad)
push
add
pop
mov
fucomp
add
sbb
mov
int3
sbb
fistp
pop
ret
fidivr
int3
std
aaa
push
sub
sub
pop
sbb
xor
adc
cmp
(bad)
adc
push
not
mov
adc
inc
(bad)
test
retf
repz
mov
mov
xor
mov
inc
sub
mov
daa
int3
popa
or
inc
push
xchg
mov
lahf
hlt
push
inc
push
div
dec
je
mov
mov
adc
retf
mov
push
adc
mov
dec
repz
enter
add
call
(bad)
clc
int
mov
cmps
jbe
mov
push
stos
mov
stos
movs
and
enter
cwde
mov
aas
sbb
push
outs
cwde
sahf
inc
ret
and
add
fcmovnu
je
pop
sub
jp
pop
pop
retf
mov
xchg
add
and
or
sub
sbb
mov
jl
sub
fninit
fldcw
mov
sbb
jmp
shl
in
add
jnp
jno
cmp
xor
movs
dec
pop
out
outs
mov
call
mov
mov
adc
data16
or
fdivr
jge
jns
and
fs
xor
sbb
std
mov
arpl
cs
add
loopne
mov
push
pop
call
pop
stos
fsub
mov
adc
inc
sbb
adc
arpl
ins
sub
mov
push
mov
js
sub
out
push
xor
pusha
(bad)
push
mov
add
das
sub
push
mov
jecxz
adc
popa
xchg
mov
adc
imul
imul
fild
push
stos
je
mov
cmp
cmp
jbe
push
and
outs
loopne
fs
lahf
jb
loopne
ror
and
mov
push
xor
(bad)
mov
jecxz
addr16
sbb
dec
test
jne
outs
adc
cmp
mul
jb
sbb
cld
mov
cld
mov
pushf
xor
add
inc
mov
jns
sub
and
data16
and
mov
add
mov
test
les
push
jnp
mov
mov
push
leave
shl
and
sar
jnp
ficomp
rcr
std
mov
xor
mov
or
jg
mov
rcl
pop
push
je
jg
push
jmp
and
shl
adc
push
or
push
int3
jb
lock
add
in
dec
mov
adc
loopne
xor
icebp
shr
cmp
jl
pop
push
jmp
jle
sub
shl
xor
mov
sub
jecxz
rol
or
fdiv
add
xor
mov
(bad)
jns
jl
adc
push
lahf
fmul
leave
jne
sub
(bad)
outs
or
sbb
and
sar
hlt
ss
leave
fsubr
push
pop
sub
push
fdivrp
sbb
push
pop
aaa
push
call
ja
jb
mov
jmp
icebp
mov
inc
retf
sbb
std
lea
clc
and
pusha
sbb
dec
sbb
imul
inc
adc
pop
push
cmp
jb
(bad)
shl
push
aas
cmp
jb
mov
sub
jb
pop
pop
mov
sbb
mov
lea
push
sub
xbegin
mov
add
xor
push
mov
mov
inc
call
rol
ret
movs
pop
test
inc
add
ret
pop
jne
push
ret
or
cs
push
loope
cli
dec
repnz
jnp
cmp
jb
pop
(bad)
fidivr
out
dec
jmp
mov
cmp
imul
mov
push
pop
pop
pop
loope
or
lea
inc
or
pop
ins
jne
cmp
icebp
je
xor
sub
test
outs
shl
add
cmp
jne
jne
push
lea
mov
xor
retf
test
dec
mov
mov
mov
fnstenv
mov
push
pop
push
push
mov
inc
add
lock
shl
repnz
pop
push
pop
sbb
lods
mov
ins
or
push
adc
sub
mov
push
shl
sub
push
jb
add
push
loop
push
xor
(bad)
pop
mov
push
lea
or
mul
jl
inc
mov
add
fs
mov
pop
lahf
xor
sbb
adc
sbb
adc
mov
add
daa
sbb
sub
shr
cmp
repz
ja
mov
das
and
mov
xor
test
jg
cs
mov
jb
inc
inc
adc
mov
jge
jb
and
outs
fild
ror
shrd
retf
lds
pop
(bad)
jg
rol
stc
inc
mov
sub
push
dec
and
call
sub
popa
add
add
sub
mov
sbb
outs
or
sbb
inc
shl
xor
xchg
push
stos
fs
out
and
mov
dec
js
lock
or
inc
cmp
mov
mov
jle
lea
lds
add
xchg
or
xchg
dec
and
mov
sub
push
push
add
push
jmp
jecxz
push
push
push
pop
adc
sbb
or
pop
xchg
ds
ins
xchg
sub
inc
mov
adc
mov
je
jecxz
jne
pop
or
jne
mov
mov
push
push
mov
mov
push
(bad)
jmp
inc
inc
mov
push
outs
adc
adc
test
sar
xchg
push
scas
(bad)
xor
sub
inc
movs
push
or
dec
inc
ss
(bad)
rol
dec
aam
mov
mov
xor
adc
or
clc
inc
jle
dec
push
xchg
fmul
or
cmp
fadd
inc
push
jbe
pop
aaa
test
jg
shl
mov
push
or
shl
popa
inc
jle
cmps
pop
adc
adc
or
mov
and
sub
std
lea
sub
jns
push
cld
add
push
push
jbe
cmp
je
pop
loope
pop
xchg
mov
les
call
xchg
ja
jge
adc
fstp
xlat
inc
fdiv
es
ficom
ds
adc
and
push
mov
push
inc
sub
fnstenv
sbb
xor
xchg
lds
mov
fwait
rcr
and
push
sar
sar
sub
inc
ret
or
cmp
cmps
retf
add
and
lock
jmp
or
pop
dec
cmps
gs
fild
jecxz
inc
addr16
or
and
mov
out
xor
(bad)
in
or
(bad)
jle
(bad)
cmp
jle
stc
sub
add
lea
pop
pop
aam
jmp
(bad)
push
adc
push
dec
cdq
dec
out
out
and
mov
push
push
dec
mov
add
loope
mov
rcl
cmp
jne
fiadd
add
cmp
pop
push
push
jae
mov
add
pop
pop
pop
aaa
pop
aaa
cmp
(bad)
jl
sub
daa
mov
out
test
push
cld
lods
xchg
fcom
sub
test
lock
stc
fst
test
mov
push
add
popa
jb
cmp
ja
sub
pop
rcr
mov
jge
neg
gs
shl
enter
repz
push
inc
inc
loope
ffreep
repz
pop
stos
jne
jmp
jl
dec
outs
and
xchg
sar
push
push
xchg
dec
scas
inc
ja
sahf
inc
push
dec
cmp
jmp
mov
daa
add
je
mov
stos
int3
repnz
rep
pop
mov
pop
scas
and
xchg
call
add
les
das
ja
outs
adc
nop
adc
add
add
or
or
jae
add
cmp
jae
std
mov
mov
and
dec
dec
xor
xor
test
test
movs
dec
je
jmp
sub
cld
pop
push
test
pop
xor
aas
loopne
and
ss
push
cs
pop
pop
nop
pop
sub
fst
push
cli
jecxz
adc
jmp
pop
xchg
push
aaa
mov
push
in
jo
ret
adc
pop
clc
jne
sbb
mov
add
lea
add
je
cmp
je
cmp
je
pop
jecxz
sub
add
mov
ret
add
jg
cmp
push
push
add
dec
jmp
sbb
clc
arpl
push
push
fdiv
push
or
inc
add
xor
(bad)
mov
jecxz
cmp
pop
push
mov
mov
and
inc
mul
shl
ret
cmps
aaa
and
xor
jmp
test
cmp
imul
in
dec
jae
or
popa
aas
bound
ins
lods
jo
sbb
das
xchg
pop
jno
jno
(bad)
cmc
dec
or
cmp
out
aad
push
test
sbb
movs
out
aaa
hlt
fwait
pop
lods
mov
ja
sub
add
inc
jmp
jo
jmp
lea
aaa
or
or
jmp
mov
dec
fwait
outs
in
push
mov
and
ret
mov
mov
pop
inc
push
test
jne
push
sbb
test
add
jge
fmul
pop
or
in
(bad)
mov
fdiv
ins
jmp
fadd
hlt
adc
sbb
pop
sbb
or
fwait
mov
inc
sbb
inc
addr16
inc
enter
add
stos
loop
mov
stos
ret
xchg
mov
(bad)
mov
movzx
jp
dec
or
aam
sub
xor
mov
mov
fwait
cmps
jmp
out
push
aad
dec
jmp
mov
jmp
mov
and
mov
mov
or
in
movs
push
icebp
(bad)
in
clc
add
loopne
mov
ins
jmp
int3
jg
(bad)
daa
fbld
jecxz
push
call
psllq
popa
inc
mov
add
mov
pop
movs
icebp
in
mov
push
or
mov
add
lea
dec
(bad)
push
adc
sbb
test
sub
ins
mov
add
or
push
jae
sbb
int3
mov
pop
add
sti
mov
je
pop
mov
push
jae
sahf
bound
inc
sub
push
mov
test
add
mov
adc
xchg
pop
mov
xchg
imul
sti
add
pop
mov
cmp
in
xor
mov
sbb
jp
bound
fwait
push
mov
or
fsub
xchg
adc
int3
push
push
add
push
mov
pop
pop
pop
mov
addr16
clc
ins
jne
mov
fld
inc
or
mov
arpl
xor
push
sub
js
das
or
adc
xor
aas
and
call
lea
cmp
rcl
or
push
je
or
ins
mov
pop
cmp
cmp
test
(bad)
adc
pop
dec
pop
jmp
ficomp
adc
sbb
push
fnstcw
sti
idiv
mov
loop
jo
rcr
js
test
jne
bound
outs
or
jg
js
sub
or
jne
xor
pop
mov
sub
xor
lods
retf
or
adc
add
jne
loope
aam
cdq
clc
push
lock
pop
jecxz
or
sub
es
sub
loope
push
sbb
int
adc
or
shr
pop
pop
xchg
add
jno
out
sub
daa
push
and
xchg
fdiv
popa
out
sbb
mov
(bad)
icebp
or
add
fldcw
cmp
add
mov
dec
sbb
ins
xor
mov
push
movhps
inc
push
jne
jle
mov
leave
mov
or
call
and
pop
shl
push
mov
aas
mov
rcl
dec
and
mov
fmulp
sbb
push
adc
cmp
arpl
cmp
xor
xor
push
and
pop
jbe
inc
xchg
retf
add
call
mov
lea
fmul
or
cmp
mov
pop
lods
sub
add
or
jno
push
inc
dec
ja
call
(bad)
ins
sub
addr16
pusha
mov
icebp
loope
xor
fild
popa
test
mov
push
mov
xchg
mov
movs
call
loopne
inc
in
or
jmp
or
push
or
sbb
push
pop
add
and
scas
or
add
mov
outs
out
loopne
add
pop
cmp
aaa
js
add
adc
mov
rol
and
mov
inc
cmp
jbe
add
stos
pop
(bad)
mov
lods
mov
sbb
push
adc
push
(bad)
mov
hlt
jecxz
adc
or
shr
jns
cmp
push
xchg
pushf
retf
int3
enter
enter
fdiv
inc
out
retf
ja
push
inc
mov
js
mov
push
sar
and
aam
xchg
fldcw
test
and
pop
jge
sbb
std
add
dec
or
pop
adc
inc
jmp
mov
add
mov
stos
xchg
div
mov
inc
sub
stos
mov
add
fistp
and
push
dec
inc
stos
mov
stos
cmps
loopne
jne
addr16
or
clc
lea
push
pushf
call
pop
xchg
sahf
xor
test
inc
mov
test
in
xor
fdivr
pop
cld
shl
pop
nop
or
hlt
(bad)
push
push
cmp
loopne
push
cmp
push
xchg
sub
outs
push
stos
test
push
das
icebp
adc
(bad)
fcom
sbb
idiv
je
dec
adc
xchg
or
lods
mov
sub
or
cld
std
jg
mov
sub
jne
or
jmp
sti
push
fnstsw
mov
lea
mov
sbb
inc
pop
call
lea
ins
sub
popa
add
daa
push
ins
or
test
rcr
jmp
cmp
(bad)
loope
or
push
inc
cmp
pop
inc
mov
jne
or
add
push
aam
push
or
cmp
fxtract
mov
stos
imul
add
cs
in
xor
inc
push
or
icebp
stos
sbb
rcr
inc
push
cmp
inc
call
push
pop
test
xchg
jp
jmp
xor
sbb
mov
add
jno
xor
mov
add
jp
inc
jp
cdq
sub
sbb
push
pusha
adc
mov
mov
ins
les
sar
pop
aad
mov
add
jo
dec
sti
hlt
mov
movs
adc
inc
or
push
add
mov
dec
jae
sahf
dec
and
jle
popa
pushf
clc
mov
push
mov
mov
test
and
shl
sbb
out
ins
or
or
add
in
fiadd
into
push
loopne
or
ror
fisub
cwde
mov
or
xor
mov
or
jmp
adc
or
je
cmp
or
ins
jecxz
in
test
mov
cmp
(bad)
sub
mov
and
xor
loop
sbb
push
mov
inc
enter
jb
out
ins
ins
sbb
je
or
retf
and
pop
mov
adc
add
scas
jne
mov
rcl
or
xor
pop
jge
inc
sub
and
cmp
sbb
fsubr
mov
mov
and
not
push
sbb
test
mov
add
js
js
lea
adc
(bad)
jne
and
fmul
outs
hlt
sbb
mov
cmp
je
mov
push
(bad)
(bad)
sub
neg
pop
add
jl
loope
push
add
inc
add
or
lea
mov
xor
or
dec
test
mov
mov
pop
jnp
add
mov
inc
ret
repnz
sub
pop
sbb
cmp
xchg
gs
inc
cmp
jb
add
push
inc
dec
ret
stos
and
cdq
dec
stos
mov
pop
jbe
pop
arpl
cli
pop
sub
mov
hlt
sbb
ret
pop
movs
xchg
clc
sub
push
sub
dec
or
push
cmp
sar
dec
js
cmc
lock
call
int3
call
pop
ret
push
fsub
dec
cmp
sbb
adc
pusha
inc
int3
lods
add
push
adc
mov
cli
push
popa
popa
inc
jmp
cld
ins
out
push
xor
movs
mov
mov
aam
xor
bt
or
add
xchg
(bad)
in
and
ja
mov
mov
mov
mov
mov
jmp
cmp
unpckhps
bound
in
arpl
push
popf
pop
or
push
mov
mov
mov
dec
adc
cld
mov
in
push
sahf
mov
aaa
add
pop
cld
inc
add
jmp
or
fist
pop
inc
or
les
das
push
mov
xchg
sub
push
test
ror
pop
dec
add
mov
call
sar
mov
pop
lahf
in
test
into
in
rol
inc
add
call
sub
rol
mov
pop
rcr
das
push
in
mov
jecxz
and
fiadd
ins
ss
out
push
jmp
pop
dec
push
ins
mov
jne
test
cli
ret
inc
inc
out
push
sbb
push
mov
inc
(bad)
cmp
loopne
in
loopne
je
push
movs
je
(bad)
sar
(bad)
push
and
or
hlt
mov
jg
jecxz
loop
push
pop
cmp
push
xlat
lds
or
cmp
mov
dec
mov
add
xchg
push
mov
xlat
adc
fimul
or
xor
rcr
(bad)
cmp
jmp
push
mov
ins
jo
inc
inc
inc
je
add
nop
xchg
inc
inc
inc
inc
cwde
pushf
mov
inc
test
mov
inc
inc
inc
inc
mov
inc
inc
inc
enter
inc
inc
inc
inc
fcomp
loopne
inc
inc
inc
inc
call
jl
inc
clc
cld
add
mov
or
adc
mov
mov
xor
mov
mov
push
mov
mov
je
mov
mov
xchg
mov
movs
mov
mov
mov
mov
fmul
in
mov
clc
sbb
stc
mov
add
or
sbb
sbb
adc
sbb
sbb
sbb
sub
sbb
sbb
xor
cmp
sbb
sbb
dec
dec
add
inc
push
test
or
mov
add
out
in
lar
or
pop
or
aas
push
push
add
dec
add
push
sbb
scas
adc
fdivr
es
in
in
inc
call
(bad)
in
cmp
gs
dec
push
and
cs
xor
xor
jge
add
pop
push
pop
push
push
imul
pop
mov
das
outs
imul
outs
ds
clc
push
jb
adc
or
pop
sti
push
ss
fs
inc
pusha
iret
or
push
lods
xor
jmp
mov
mov
inc
adc
cmp
in
lock
adc
xor
push
adc
rcr
dec
jg
pop
inc
sub
jno
clc
addr16
dec
inc
or
inc
jns
gs
popa
xchg
mov
ror
sbb
aam
fcom
test
retf
push
dec
int3
inc
fmul
xchg
std
add
pop
inc
and
adc
and
in
sti
pushf
dec
nop
mov
popa
xchg
fild
cmc
outs
xchg
inc
fcomp
push
pusha
add
fs
call
nop
xchg
cwde
cmp
nop
inc
pushf
mov
push
test
cwde
mov
jne
add
and
xor
pop
lods
icebp
adc
nop
or
leave
xchg
cmp
outs
push
jne
push
gs
das
cmp
add
or
push
popa
cmp
xor
or
fs
popa
outs
dec
div
jo
jb
inc
jo
int3
and
add
mov
mov
jl
jo
cwde
in
sahf
dec
imul
inc
jp
rcl
jge
and
push
popa
in
call
xor
xor
inc
dec
dec
cs
push
add
add
sub
daa
popa
mov
and
mov
repnz
int
add
aaa
lods
jno
xchg
stc
inc
xchg
dec
bound
and
dec
mov
retf
fisubr
ins
push
outs
outs
je
push
sub
sbb
cmp
pop
adc
push
mov
ins
popa
lea
inc
add
jns
hlt
aaa
inc
or
enter
push
cmc
pop
cmp
inc
push
neg
pop
clc
sbb
pusha
stc
fs
push
ins
sti
jo
je
sbb
and
(bad)
js
jl
jb
and
xchg
xchg
mov
dec
pop
mov
cmp
add
cmp
fld
pop
or
retf
sbb
test
sahf
xchg
or
and
sbb
pop
cmp
out
xchg
lock
or
clc
not
add
add
gs
or
cli
leave
xchg
push
or
mov
out
jo
movs
and
or
js
xchg
pushf
das
in
push
ror
fwait
pop
or
dec
push
pop
pop
mov
dec
push
add
fiadd
mov
dec
inc
dec
dec
mov
jecxz
push
adc
in
add
xchg
or
ds
test
lea
jg
enter
pop
inc
dec
dec
inc
dec
xchg
mov
pop
dec
or
push
push
pop
ret
push
popa
jae
fldenv
jo
aam
adc
popa
mov
dec
ret
loope
rcr
clc
ret
pop
mov
dec
ret
or
ins
adc
jl
jne
je
sbb
lods
jmp
mov
sbb
popa
adc
xor
inc
sar
enter
xchg
std
rcl
lods
or
add
cdq
call
imul
jbe
mov
push
fs
cmp
cmp
sub
leave
inc
scas
add
cwde
inc
pop
and
sbb
mov
(bad)
lods
arpl
pusha
pop
inc
inc
add
sub
dec
dec
inc
push
pop
push
inc
pop
loop
aaa
pop
pop
pop
dec
pop
pop
ds
pop
pop
adc
call
pop
inc
push
inc
xor
inc
pop
add
into
(bad)
ficom
inc
pop
(bad)
(bad)
dec
sub
xor
ins
cmp
push
js
jle
cmp
dec
sbb
or
(bad)
neg
xchg
cdq
pop
pop
inc
inc
inc
inc
inc
int
dec
xchg
ss
and
ins
data16
jno
sub
xor
inc
mov
xchg
push
pop
push
inc
push
cmp
dec
pop
push
pop
inc
push
pop
cmp
pop
pop
and
push
jl
jns
ja
jo
jle
jge
ins
push
in
xchg
xchg
and
pop
pop
inc
cmp
jno
lock
je
gs
xor
dec
outs
jnp
jge
data16
cmp
mov
in
mov
inc
xchg
xchg
lea
lahf
mov
outs
imul
jg
and
popa
pusha
fs
pop
inc
aas
std
dec
inc
mov
xor
sub
adc
inc
inc
add
pop
inc
xor
pop
push
outs
adc
push
push
push
dec
push
ins
push
std
or
push
pop
outs
pop
push
add
xor
mov
sub
inc
outs
data16
pusha
sub
inc
aaa
push
js
ja
outs
imul
pop
jnp
jp
jno
push
dec
sub
push
out
add
ss
cmp
push
push
inc
xor
mov
ret
push
xor
sahf
(bad)
push
jne
sub
push
push
push
ja
or
push
lods
pop
arpl
std
push
in
enter
pop
pop
push
inc
test
imul
aas
jnp
cmp
jmp
loop
dec
jp
xchg
fucomi
out
xor
cwde
or
xor
jmp
push
xchg
nop
lahf
xchg
push
daa
repz
jnp
bound
jge
xor
jae
jl
mul
jo
es
sub
je
xor
std
(bad)
(bad)
jnp
js
je
outs
jne
jo
in
jmp
sub
xor
xor
pop
je
pop
jnp
push
div
sub
sub
fs
popa
jno
pop
jle
imul
jnp
inc
aaa
mov
xchg
pushf
cwde
cdq
mov
sbb
data16
xor
and
push
push
inc
imul
xor
lds
pop
adc
(bad)
xchg
xchg
mov
fwait
add
mov
mov
pop
pop
cld
jg
inc
or
jl
popa
jnp
cmp
mov
jp
jns
jp
jb
cld
mul
jae
ins
out
jmp
data16
jo
sbb
aaa
clc
call
push
popa
xor
jns
cmp
jl
push
(bad)
jg
not
inc
jo
arpl
jae
cmp
cmp
lock
sbb
pop
pop
pop
inc
clc
fstp
xor
xor
in
out
outs
mov
jle
popf
aas
xchg
adc
cdq
push
(bad)
movs
xacquire
jl
aas
xor
push
push
inc
lea
std
pop
push
jle
popa
cli
gs
and
ds
test
dec
cmp
push
inc
je
push
inc
out
add
push
push
test
(bad)
mov
xchg
xchg
lea
dec
(bad)
lahf
test
adc
movs
jg
call
dec
dec
push
fwait
or
jge
pop
dec
addr16
test
ins
ret
ss
jno
pusha
jp
push
jae
jne
loope
dec
sbb
jle
jge
pop
pop
push
pop
cmp
pop
sti
bound
inc
sahf
outs
jo
jle
jbe
imul
jno
test
pop
inc
inc
sub
inc
add
ror
(bad)
(bad)
fld
fmulp
iret
fcmovnbe
sti
xor
inc
mov
lock
push
add
dec
pop
pop
arpl
inc
and
rcl
add
retf
(bad)
add
jnp
jle
js
jno
dec
sbb
jg
dec
or
jmp
jge
pop
xchg
dec
test
pusha
jnp
jge
or
outs
push
jnp
lea
punpckhdq
pop
(bad)
pop
mov
mov
arpl
push
pop
jb
xlat
mov
imul
jne
pusha
jg
mov
push
aam
data16
or
fild
jge
pop
pop
add
dec
adc
ror
fcmove
les
(bad)
adc
jb
imul
pop
pop
mov
das
pop
je
jbe
jle
sub
loope
imul
xchg
jl
pop
push
mov
add
lods
rcl
pop
pop
sbb
out
sti
jne
scas
dec
pop
and
push
ja
jp
jbe
out
mov
push
push
les
lods
div
loopne
cmp
inc
push
push
inc
and
sti
out
pop
std
ja
cmp
jnp
mul
jbe
push
jae
pop
jbe
inc
cld
lea
test
adc
push
shl
and
loopne
adc
xchg
gs
pusha
outs
pop
pop
and
or
ins
or
aaa
jle
dec
jo
inc
imul
mov
cmp
or
and
jb
or
dec
adc
dec
jb
add
dec
shl
add
gs
dec
shl
shl
out
cli
sub
xchg
push
adc
xor
imul
mov
(bad)
sbb
xor
inc
shl
test
cmp
add
pusha
push
push
adc
add
jnp
mov
adc
sbb
jb
les
aas
pop
adc
mov
and
fimul
leave
add
mov
imul
outs
adc
pop
mov
and
adc
sub
mov
addr16
and
cmp
ss
jbe
jbe
and
arpl
inc
mov
sbb
leave
(bad)
ror
int
rcl
or
int
neg
fiadd
test
add
test
or
sub
shl
add
add
push
movlps
mov
add
nop
push
add
dec
pop
nop
mov
add
test
add
std
mov
push
pop
mov
int
mov
(bad)
mov
jae
jo
outs
addr16
ins
and
outs
outs
outs
je
bound
jb
outs
and
mov
fild
inc
dec
push
and
fs
leave
fidiv
adc
lds
jb
jne
mov
push
and
add
mov
(bad)
data16
add
or
add
mov
sub
inc
loopne
add
stos
sbb
add
xchg
push
aas
mov
xlat
aaa
cmp
gs
pop
ds
nop
jmp
and
idiv
jmp
popa
or
adc
sahf
mov
aam
mov
lock
inc
push
stc
daa
xor
jb
ins
outs
xchg
pushf
int
arpl
mov
inc
and
mov
imul
add
shl
or
in
add
(bad)
xor
les
dec
idiv
mov
mov
pop
sbb
mov
or
and
mov
inc
xor
push
add
sub
sub
fdivr
mov
and
adc
les
jne
push
mov
xor
nop
add
mov
clc
test
pop
pop
mov
jmp
mov
xor
lea
ins
outs
add
push
(bad)
or
fisubr
ins
(bad)
fbstp
mov
mov
pop
hlt
push
dec
cmp
lods
sti
mov
add
pop
inc
push
sbb
push
(bad)
mov
add
sbb
inc
es
mov
mov
(bad)
sti
out
pop
xlat
add
int3
ins
sbb
dec
(bad)
cmp
jne
cmp
fstp
fnstsw
add
pop
xor
jmp
adc
neg
adc
or
push
sti
fwait
jb
jo
jmp
inc
adc
mov
movs
mov
add
stos
jl
loop
and
shr
inc
test
mov
pop
sti
call
in
movs
jle
inc
cmp
dec
mov
mov
jmp
sbb
pop
push
(bad)
push
test
jle
lods
cld
xchg
or
jnp
enter
pop
int3
je
fisttp
cld
or
enter
mov
mov
aas
mov
add
rol
cmp
pop
mov
and
in
lods
fnstsw
add
call
inc
pusha
in
mov
mov
sahf
retf
jmp
xor
ins
jo
out
fcom
das
sub
push
sahf
mov
into
pop
push
call
dec
imul
mov
in
push
pop
mov
dec
inc
fcomp
call
call
int
and
aaa
push
xor
add
add
in
cwde
xchg
add
xor
jmp
push
jbe
cmp
xchg
add
cmp
xor
and
and
adc
mov
mov
mov
ins
enter
push
push
into
lea
inc
inc
fwait
mov
ins
push
mov
f2xm1
(bad)
or
ret
jnp
call
sub
leave
cmp
push
jbe
and
jnp
jbe
cmp
push
push
mov
or
cmp
out
cmp
adc
add
push
out
movs
push
lahf
or
jno
adc
push
call
pop
das
pop
je
mov
mov
(bad)
dec
add
push
retf
mov
cmp
pop
sub
jb
lods
fcomp
sub
mov
add
cmp
or
pop
lea
jae
cmp
mov
inc
not
mov
neg
sub
sub
ret
jge
or
push
outs
ins
mov
cmp
cs
add
jle
out
adc
pop
and
fidiv
and
push
test
cmp
or
out
xchg
jge
movs
push
or
or
gs
cdq
jmp
adc
push
mov
leave
fs
fst
xchg
ret
in
out
jmp
or
xor
hlt
jb
jmp
jge
test
daa
push
xor
mov
(bad)
test
test
aam
push
or
bound
push
pop
dec
int3
add
inc
add
mov
lds
or
adc
sbb
pop
lods
fistp
xor
jns
dec
test
shr
ficom
add
fs
or
fisttp
inc
outs
and
xchg
dec
push
add
pop
and
cmp
hlt
push
add
sub
mov
add
sub
sbb
xor
and
inc
popa
jae
ja
jb
adc
or
push
outs
ins
popa
dec
sbb
push
sbb
push
cmp
je
je
neg
jmp
jb
imul
xor
imul
pop
cmp
mov
outs
jo
cwde
icebp
pop
imul
adc
imul
mov
xor
push
xor
mov
adc
fld
enter
pop
lock
xlat
je
cld
or
adc
and
pop
aaa
pop
rol
aaa
mov
ss
shl
pop
mov
jmp
ror
inc
stos
gs
pop
sub
pop
test
mov
fdiv
bound
adc
add
jecxz
inc
jecxz
ins
or
fwait
or
inc
(bad)
int3
jge
mov
inc
mov
sar
ss
add
ja
adc
loopne
outs
push
mov
push
imul
popa
cld
dec
inc
push
dec
inc
dec
addr16
inc
popa
pop
imul
das
ror
outs
outs
imul
mov
push
outs
pop
cmp
popa
addr16
aad
push
inc
movs
jbe
das
imul
push
or
outs
ja
fiadd
push
or
dec
add
pusha
addr16
push
outs
push
add
xor
int
or
ins
(bad)
mov
inc
jne
retw
push
dec
popa
mov
xchg
stc
adc
(bad)
(bad)
(bad)
aas
add
push
xor
xor
xor
xor
xor
xor
dec
xor
push
jno
xchg
(bad)
jmp
lahf
xor
fwait
xor
xor
xor
xor
xor
(bad)
(bad)
inc
ret
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
add
(bad)
jnp
mov
into
xor
test
xor
cwde
push
mov
add
xor
jae
jb
mov
lds
or
push
popa
ins
jne
fnstenv
add
gs
js
mul
in
push
jne
jns
adc
outs
aas
inc
dec
mov
and
push
jl
and
mov
or
lds
xchg
cmps
pop
sti
mov
adc
add
sbb
test
inc
ret
jno
jge
gs
push
pop
outs
jne
jbe
jnp
sbb
imul
sub
mov
xchg
push
sbb
add
add
mov
bound
dec
popa
fnstenv
ret
ins
cmp
sub
or
ins
and
scas
adc
adc
outs
je
mov
and
fldlg2
lea
jb
push
jns
push
test
sub
fld
or
pusha
jbe
inc
outs
ins
dec
daa
jnp
(bad)
xlat
jae
cmp
imul
in
sbb
inc
mov
dec
popa
jae
jp
mov
jne
pop
jmp
xor
pop
dec
jae
fwait
mov
inc
sub
sub
sbb
cdq
ficom
ja
bound
outs
cmps
push
arpl
sbb
ins
outs
sbb
push
pop
(bad)
mov
ins
push
sub
jbe
jnp
fs
push
xor
push
adc
cs
or
xchg
sbb
in
sbb
cvtdq2ps
or
sbb
pop
popa
fwait
push
jb
out
and
dec
or
fwait
ins
sbb
inc
dec
inc
fnstcw
(bad)
push
imul
adc
cmp
fistp
dec
aas
movs
(bad)
pop
push
popa
imul
sub
pop
add
cdq
jo
or
fwait
push
or
leave
push
(bad)
push
pop
adc
aaa
jp
js
xchg
ucomiss
jmp
test
rcr
push
ins
(bad)
fisub
les
or
push
aas
lods
dec
ss
test
push
sbb
js
ins
inc
push
and
adc
inc
int3
cmp
mov
ins
inc
or
outs
imul
pop
push
packssdw
outs
sbb
mov
test
arpl
out
adc
int3
test
cmp
push
push
je
ja
gs
or
xlat
les
mov
jo
popa
push
int
sub
pop
dec
stos
mov
xor
shl
mov
and
pop
adc
shl
xor
arpl
and
xlat
xchg
or
push
or
sub
jno
jl
or
inc
outs
mov
rcl
pop
pusha
ss
push
int
minps
cdq
pop
push
(bad)
(bad)
jae
jbe
xchg
cdq
or
adc
cmp
mov
cmp
imul
xlat
mov
test
xor
retf
push
loope
mov
push
inc
out
scas
arpl
inc
cli
outs
or
js
push
aaa
fisub
outs
popa
les
push
add
test
or
or
adc
add
or
or
ds
(bad)
jg
or
and
adc
adc
adc
add
or
add
(bad)
push
sub
and
sbb
and
in
(bad)
fisttp
adc
push
xor
add
push
sbb
add
cmp
mov
(bad)
in
sub
adc
or
push
inc
or
or
add
in
pop
sti
outs
add
add
and
mov
prefetchnta
adc
xlat
mov
and
adc
add
cld
jg
sbb
sbb
and
or
push
dec
and
dec
test
sub
push
sub
push
and
aaa
cmp
mov
mov
xor
dec
adc
dec
dec
adc
pop
sbb
out
or
fidivr
mov
das
or
sbb
outs
(bad)
mov
(bad)
adc
cli
adc
and
loope
adc
cmp
pop
aaa
ins
mov
pop
push
sub
adc
add
push
cmp
mov
ret
cmp
push
sub
xor
jle
jmp
add
sub
adc
dec
sub
data16
das
add
scas
(bad)
call
out
and
push
pop
add
adc
jb
or
adc
and
push
push
push
inc
sbb
sub
and
push
sub
inc
lock
add
sub
adc
lock
add
aaa
fdivr
and
inc
push
push
cmp
add
sub
js
aas
and
pop
std
outs
pop
mov
dec
push
pushf
bndldx
lock
add
pop
push
pop
or
sbb
mov
and
or
or
test
and
das
ins
gs
adc
or
or
in
mov
adc
adc
ja
jae
sub
or
div
and
sub
dec
dec
push
sbb
loope
xor
pop
sbb
add
or
push
adc
ins
cmp
adc
cmps
sbb
adc
sub
fstp
adc
sbb
js
mov
data16
adc
and
pop
jo
fisttp
add
adc
pushw
adc
or
or
pop
sub
push
dec
adc
sbb
sub
(bad)
adc
add
hlt
cmovge
push
pop
js
xor
pop
jae
sbb
adc
xchg
ficom
or
or
aaa
(bad)
pop
ins
push
or
sub
or
adc
lock
std
adc
push
adc
and
cmp
and
sub
cmp
sbb
inc
sti
mov
adc
adc
and
sbb
push
sbb
and
sbb
fstp
es
pop
or
pop
add
mov
jg
pop
sbb
xchg
lock
add
call
sysret
adc
inc
adc
cs
aaa
dec
std
(bad)
mov
js
adc
xor
es
mov
movs
sbb
push
adc
or
or
outs
inc
pop
sbb
jbe
test
lock
and
or
dec
or
loope
sub
xor
adc
mov
sbb
sbb
adc
mov
ins
or
add
add
outs
pop
mov
or
popa
(bad)
push
pop
or
xor
xchg
mov
lock
add
add
clc
not
add
add
lahf
inc
add
add
add
and
.byte
