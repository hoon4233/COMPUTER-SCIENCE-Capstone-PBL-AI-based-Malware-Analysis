mov
test
arpl
add
add
add
push
add
enter
push
mov
sub
mov
leave
jmp
xchg
(bad)
sti
pop
mov
mov
je
mov
lahf
popf
pop
add
add
push
call
and
or
in
mov
call
push
add
pop
mov
arpl
mov
mov
add
(bad)
mov
pop
or
hlt
push
or
sbb
push
or
xor
ja
pop
fadd
or
sub
imul
add
dec
push
and
ret
fstp
mov
outs
ror
cld
shl
mov
dec
xor
cmp
sbb
adc
push
jmp
add
pushf
mov
lea
mov
mov
hlt
pop
and
mov
pop
jnp
or
inc
or
lock
mov
add
cmp
mov
sub
add
add
std
mov
or
pop
xor
add
pop
pop
ret
mov
cmp
xchg
push
pop
cmp
mov
rcr
sbb
pusha
or
mov
shr
out
fnstsw
xor
icebp
add
inc
push
or
test
sar
les
adc
or
sub
or
(bad)
pop
jo
out
nop
add
jl
jg
pusha
mov
mov
and
mov
movs
test
mov
cmp
or
out
add
mov
cmp
es
mov
ret
nop
nop
nop
pop
adc
clc
inc
fdiv
(bad)
fild
push
adc
add
add
or
sti
jbe
adc
mov
add
pop
jb
mov
fisubr
cmp
push
add
out
sbb
ins
mov
and
sbb
fs
push
add
daa
sub
out
push
fcmovnu
add
inc
addr16
pop
jg
adc
push
push
sbb
mov
in
(bad)
out
mov
mov
dec
inc
fmul
pushf
rol
push
test
(bad)
cmps
push
hlt
iret
imul
or
ror
ds
pop
lock
jge
in
call
mov
sub
mov
imul
push
push
pop
pop
push
xor
xor
ds
mov
push
call
ins
(bad)
std
push
pop
jmp
mov
jne
sbb
inc
or
xchg
dec
mov
int
popa
sahf
lock
mov
out
cmp
mov
and
push
sbb
mov
xor
sub
push
adc
cmp
jne
shl
pop
inc
shl
dec
push
sti
lea
jmp
and
hlt
outs
shl
mov
or
jo
loope
jnp
or
cmp
jmp
add
or
cli
data16
jmp
push
fwait
push
or
adc
jmp
jmp
mov
rol
add
sub
inc
movs
or
lock
sbb
add
mov
sar
mov
jmp
push
loopne
(bad)
fldlg2
js
jge
xor
shr
mov
push
inc
mov
mov
ja
xor
jge
(bad)
imul
xor
mov
push
mov
jae
mov
call
lods
(bad)
in
loope
add
mov
mov
xor
mov
mov
add
loope
fdiv
clc
pop
setle
jne
mov
fmulp
push
mov
adc
inc
cmp
in
or
or
outs
call
add
or
add
fcomp
jo
adc
(bad)
fsub
adc
sbb
sub
cmp
inc
subps
les
fsubr
sub
lds
ds
aam
pop
push
in
lea
push
test
out
lds
jecxz
jge
add
push
push
push
inc
add
out
mov
sub
imul
fldenv
cmp
pop
mov
pop
jmp
adc
mov
or
sbb
out
pop
adc
fwait
adc
push
or
jae
or
clc
cmps
lea
ret
inc
and
test
sbb
gs
jecxz
das
or
inc
mov
lods
int
imul
adc
or
mov
pop
adc
add
pop
and
mov
test
or
(bad)
pop
mov
push
hlt
jle
xchg
adc
ficomp
arpl
sbb
and
or
push
pushw
sbb
add
xchg
push
ret
in
inc
jne
popa
adc
hlt
ins
mov
cmp
leave
inc
sahf
hlt
cmp
jbe
or
add
mov
add
and
or
icebp
push
mov
and
in
sbb
adc
push
add
pop
outs
(bad)
cs
pop
xor
mov
loopne
out
dec
(bad)
fcom
sbb
lods
mov
sub
pushw
add
mov
dec
mov
xor
inc
lock
or
call
outs
dec
push
pop
or
cmps
or
inc
add
pop
adc
mov
ret
or
sub
(bad)
jnp
jge
add
and
push
and
cmps
or
sub
in
test
cmp
sti
outs
xor
cld
xchg
shl
adc
jo
(bad)
mov
test
sub
mov
adc
mov
dec
or
xchg
xchg
jae
inc
or
iret
(bad)
adc
add
push
shl
jl
mov
mov
mov
mov
into
mov
inc
mov
jnp
adc
xchg
imul
js
push
pop
mov
mov
icebp
mov
call
jmp
pop
xor
ins
sbb
lods
(bad)
ins
inc
push
outs
mov
mov
push
(bad)
and
mov
jnp
xor
adc
fidiv
mov
or
add
div
mov
adc
cmp
fidiv
or
push
jne
push
adc
lahf
add
hlt
push
sar
pop
cli
jo
jnp
or
sbb
or
test
jae
ret
movs
retf
fsubr
inc
(bad)
fcmovu
add
lea
out
out
loope
shr
xor
and
inc
jl
int
ret
add
and
mov
adc
ds
sub
and
or
jnp
scas
inc
retf
sbb
jo
clc
add
mov
clc
loop
cld
sub
shr
add
dec
cmp
jo
sbb
mov
add
xchg
xchg
dec
or
xor
idiv
pop
or
clc
add
sbb
and
xor
jmp
call
(bad)
ins
ret
les
or
dec
out
add
inc
aad
or
add
out
iret
mov
push
cmp
xor
sar
jbe
mov
addr16
mov
jne
and
pop
jp
jle
pop
xchg
add
adc
cmp
xchg
pop
outs
pop
ds
pop
push
rol
nop
sub
add
xor
hlt
fisttp
mov
aaa
sahf
mov
pushf
mov
fs
pusha
movs
adc
dec
fdivr
jb
add
outs
mov
rol
adc
adc
xchg
popf
retf
loopne
imul
pop
cwde
adc
adc
lock
sahf
or
sahf
mov
pop
imul
lahf
jno
jmp
push
es
das
adc
jecxz
pusha
js
xor
inc
mov
test
mov
push
inc
sub
movs
mov
jmp
shl
nop
sahf
shl
fmul
je
aas
sbb
rol
add
or
sub
or
or
add
pop
and
repnz
adc
ret
and
push
jge
js
pusha
js
adc
cmc
out
jbe
adc
movhps
in
xor
jge
sub
xor
lea
sti
sahf
add
xchg
inc
push
shl
movs
dec
out
xchg
outs
add
or
in
pusha
sbb
xchg
xor
mov
movs
dec
imul
cmp
js
inc
fwait
push
ror
icebp
mov
jl
pop
mov
mov
outs
push
xchg
ins
std
mov
into
popf
cli
cs
cdq
je
or
cmp
mov
inc
xor
pop
xor
ror
popa
lea
pushf
and
sbb
or
cld
or
dec
cmp
or
inc
clc
(bad)
inc
or
jbe
inc
add
push
test
jmp
dec
call
add
dec
or
test
jne
dec
adc
fistp
push
or
out
dec
loop
es
mov
leave
add
lea
outs
lock
add
adc
jl
icebp
cmp
jne
pop
jmp
add
push
scas
add
adc
jle
adc
adc
adc
call
mov
ret
shl
inc
jmp
inc
loop
daa
mov
push
push
pushf
lock
fadd
or
inc
das
push
adc
ret
and
jno
push
ror
jecxz
movs
dec
adc
jno
and
cmp
or
cmc
test
push
fmul
outs
adc
add
push
push
jg
mov
add
movs
cmpxchg8b
(bad)
int
popf
pop
sub
stos
out
jecxz
adc
jo
nop
sti
rol
push
fdivr
dec
sbb
ret
rol
out
(bad)
in
movups
cmp
not
out
ds
jo
mov
mov
iret
call
jge
xchg
aaa
cli
adc
sub
ds
xor
and
imul
jle
sahf
inc
add
sbb
or
in
adc
fist
pop
dec
leave
clc
mov
out
jge
xor
(bad)
ror
cld
sahf
sbb
movs
adc
sub
or
xor
addr16
inc
cmps
icebp
sub
(bad)
sbb
and
ss
js
(bad)
or
sub
inc
mov
and
je
and
adc
push
push
cli
cld
sti
or
and
add
mov
push
stc
mov
xchg
(bad)
in
inc
or
addr16
adc
clc
adc
add
pusha
add
add
xor
mov
adc
inc
sbb
sub
neg
fsubp
enter
bound
into
push
popa
cmp
push
inc
pop
xor
and
xchg
jns
pop
popa
ret
cmp
scas
mov
add
jne
imul
add
into
loop
bound
jo
cmps
add
sub
xor
mov
add
sbb
das
gs
add
xor
das
call
mov
sub
cwde
push
push
rcpps
push
sahf
shl
jmp
xchg
xor
push
pop
fbstp
mov
test
cmp
inc
mov
test
lea
mov
in
enter
clc
add
mov
nop
jmp
inc
dec
pop
add
mov
mov
xor
lahf
adc
test
loope
in
rcl
push
push
ret
retf
and
movs
fcmovnbe
test
cmp
sti
or
cmp
or
adc
sbb
fcmovnb
fmul
ficomp
xchg
mov
fdiv
dec
xchg
into
sbb
mov
adc
shl
adc
inc
ret
mov
iret
jg
fbld
jl
jge
sbb
mov
pop
xor
(bad)
adc
mov
mov
mov
pop
ret
das
jmp
je
call
je
sub
jge
lea
add
shl
add
neg
sbb
adc
adc
adc
sub
sub
jmp
xchg
jne
xchg
mov
and
push
push
mov
cmp
pop
mov
je
push
fisubr
in
leave
sbb
dec
or
and
call
(bad)
push
(bad)
dec
cmp
outs
je
lea
cmp
ja
mov
in
sbb
ret
mov
inc
adc
mov
or
or
mov
pop
(bad)
or
jne
push
mov
add
mov
mov
mov
jne
pop
adc
ret
jg
mov
add
pop
and
mov
je
add
jne
lods
adc
popa
into
std
(bad)
fst
cmp
jne
and
adc
cmp
mov
pop
push
jbe
mov
jae
mov
ins
xor
jbe
cmp
jne
xor
add
push
inc
xor
and
fstp
leave
pop
sti
xchg
pop
push
inc
push
sub
mov
je
lea
imul
std
popf
cmp
sete
cmp
add
jne
cmp
fnstenv
cmp
mov
push
cs
sbb
or
add
xchg
pop
popa
ret
push
je
or
adc
fsubr
js
pop
je
call
adc
sbb
mov
in
fimul
fadd
(bad)
mov
dec
sub
cmp
lds
mov
pop
adc
sub
leave
add
dec
add
fistp
dec
mov
int
dec
cmp
pop
cmp
fld
shr
pop
pop
mov
out
test
and
shr
add
dec
(bad)
loope
aas
adc
mov
sbb
cli
test
mov
(bad)
in
sbb
cmp
mov
je
or
add
cmp
imul
and
mov
xchg
js
lea
stc
or
xchg
mov
jmp
lea
ja
cs
vmovdqu
sar
retf
dec
js
popf
mov
je
in
mov
je
mov
inc
jbe
pop
mov
mov
jmp
nop
push
dec
and
adc
adc
repz
out
adc
repnz
repnz
test
push
xchg
jp
mov
mov
pop
sub
mov
push
pop
push
and
test
jo
ds
je
mov
and
push
push
push
pop
or
mov
sub
push
aad
xchg
jb
pop
mov
dec
xor
mov
jne
adc
loop
xchg
sub
xchg
rol
jb
dec
jbe
lods
jge
sbb
or
mov
iret
fsubp
fsub
imul
pop
sbb
jmp
cld
push
sbb
mov
nop
adc
cwde
or
les
std
aad
and
mov
sbb
cmc
or
push
addr16
push
xor
call
and
adc
xchg
mov
and
xor
ret
xchg
mov
(bad)
mov
cmp
test
dec
sbb
sub
mov
add
out
pop
dec
mov
add
cmp
mov
adc
shl
cmp
push
lods
jne
pop
jle
adc
jmp
lods
ja
mov
ror
scas
sbb
xchg
cmp
jne
cmp
cmc
hlt
mov
xchg
mov
mov
mov
mov
fstp
cld
cmp
aas
mov
fld
lods
dec
sub
cmp
jg
rcr
xchg
dec
dec
add
std
sub
clc
or
mov
mov
push
repz
jne
inc
mov
jge
lock
pop
sub
cs
cmp
je
out
out
dec
dec
aaa
shl
mov
sbb
retf
enter
jg
hlt
div
jne
jmp
nop
xor
adc
movhps
ret
mov
xchg
mov
jbe
push
and
add
mov
cmp
std
int
fld
lahf
jae
add
xor
cmc
cmp
cmps
aad
sub
mov
sbb
or
sbb
xchg
xchg
jae
clc
mov
jne
lea
xor
ins
add
and
mov
stos
or
cmp
dec
scas
or
push
jno
jmp
ret
xor
sahf
jl
js
pop
mov
es
es
and
push
inc
add
xchg
loope
cdq
in
cmp
pop
dec
data16
or
ret
je
add
pop
sub
fimul
retf
or
ins
mov
add
mov
and
cli
add
push
add
or
or
mov
out
dec
mov
rcl
mov
fmul
push
push
pop
stos
or
mov
ins
or
xchg
clc
lods
mov
add
call
add
add
mov
js
xor
js
push
xor
in
add
(bad)
mov
fs
xor
jl
ret
or
sbb
inc
cmp
lods
cs
mov
icebp
mov
sub
sbb
jg
mov
add
sbb
mov
add
(bad)
sbb
mov
ret
test
and
fcmovnb
movs
(bad)
stc
mov
add
or
fimul
inc
rol
and
push
pop
fstp
jbe
fdiv
sub
xor
fist
pop
and
leave
ror
and
xchg
mov
adc
pop
add
mov
outs
cwde
dec
mov
je
mov
xor
(bad)
aaa
sub
sub
jbe
shr
and
rcr
pop
xor
fimul
cmp
xchg
sahf
inc
fadd
rcr
mov
xchg
pop
jp
and
jge
popa
sbb
and
add
pop
mov
mov
dec
sbb
inc
or
pop
js
in
xor
sahf
call
inc
in
xchg
icebp
sbb
cmp
dec
cmc
call
outs
cmp
mov
cmp
or
xchg
lods
movs
mov
pop
int
sub
and
push
enter
push
lock
leave
push
pop
jmp
mov
or
inc
cmp
push
mov
pop
mov
dec
xor
in
div
pop
icebp
push
inc
xor
mov
xor
jl
sbb
or
adc
cwde
or
cmp
dec
test
ja
ss
in
mov
ret
retf
jmp
(bad)
xor
push
imul
fsub
mov
dec
retf
icebp
mov
add
adc
jnp
pusha
add
sub
add
daa
mov
bound
xchg
repnz
rcr
(bad)
xor
in
and
daa
push
sbb
sbb
jg
mov
xor
mov
jbe
adc
xchg
push
sbb
mov
ret
push
int
ret
xor
div
movs
iret
cmp
cli
ss
mov
mov
dec
inc
fwait
fs
inc
jmp
scas
add
es
and
ins
icebp
cmp
je
xor
cs
addr16
pusha
gs
xor
jne
xchg
xchg
pop
jo
(bad)
push
fisubr
push
push
and
mov
ret
or
add
adc
mov
nop
ret
bound
pusha
or
or
push
jmp
ss
xchg
or
rol
dec
rcl
push
jo
inc
cmp
adc
gs
outs
xchg
mov
out
adc
fimul
sbb
fdivp
inc
adc
cmp
loop
test
inc
add
push
or
push
adc
add
scas
push
fist
pop
pushaw
inc
or
dec
inc
in
sbb
inc
add
outs
cli
push
imul
add
jmp
mov
je
jle
adc
push
sbb
inc
push
or
dec
and
pusha
das
test
pop
xor
aad
test
push
sti
and
mov
dec
add
dec
mov
inc
test
and
xor
jne
mov
ins
clc
sub
fs
fsub
or
and
or
sbb
or
lds
jne
and
push
dec
sbb
push
mov
mov
mov
and
sahf
pop
and
scas
push
fist
cwde
or
mov
jno
call
mov
jmp
dec
xor
(bad)
dec
mov
je
mov
mov
nop
jne
push
mov
add
je
jno
xchg
ret
push
inc
jne
mov
pop
xchg
xor
stc
cmp
ins
test
out
aaa
(bad)
mov
inc
rol
mov
mov
cmp
jne
xchg
icebp
and
in
sub
mov
dec
or
cmp
in
pop
pusha
pop
cmp
mov
stc
inc
or
fsubr
or
dec
push
inc
test
pop
(bad)
xlat
xchg
push
mov
inc
jmp
ror
scas
or
shr
lock
jmp
scas
mov
lea
add
push
loopne
xor
or
add
dec
out
dec
cmp
jle
mov
fwait
or
inc
shl
xor
add
aaa
adc
retf
(bad)
js
fild
jge
cwde
jbe
clc
cmp
or
push
xor
mov
call
adc
shr
imul
sub
sbb
mov
pop
or
or
mov
xor
sub
iret
add
cmp
inc
push
cdq
inc
outs
fs
int3
test
ret
pop
loopne
sub
(bad)
lahf
jbe
sbb
sahf
xchg
sub
or
jbe
(bad)
retf
pop
mov
mov
mov
je
dec
fisttp
add
inc
je
cmp
lds
mov
je
push
ins
shr
cmps
sub
ins
stos
adc
lods
push
sar
add
push
mov
jg
push
je
inc
jne
call
ins
or
cli
add
jne
sbb
or
xchg
addr16
test
pop
add
add
pop
sub
clc
push
and
rol
mov
sbb
fdiv
mov
xor
xchg
je
mov
gs
div
loope
daa
and
imul
and
adc
mov
or
js
retf
dec
out
imul
jmp
jg
add
mov
mov
nop
add
movs
sbb
xor
jmp
cwde
adc
rol
inc
pop
js
jnp
sbb
ins
add
dec
fadd
dec
xor
and
ins
and
jne
sbb
lods
sub
inc
je
cmps
adc
std
mov
add
popa
inc
int
mov
mov
test
and
mov
fwait
adc
je
(bad)
scas
add
sub
jne
sub
iret
push
push
(bad)
xchg
inc
xlat
mov
xchg
jmp
mov
retf
mov
jl
mov
cwde
or
sbb
nop
punpcklbw
(bad)
mov
add
mov
jbe
ds
sbb
je
repz
mov
into
lea
sbb
sub
and
outs
xchg
mov
dec
aas
xor
nop
aad
sti
mov
fsub
dec
jmp
call
pop
add
pop
add
inc
xchg
mov
je
in
int
xor
jne
cmp
ins
sbb
jmp
fbld
mov
scas
mul
pop
jnp
and
dec
push
xor
(bad)
cmp
mov
push
stc
dec
jo
sbb
cmp
je
cmp
arpl
mov
(bad)
sub
data16
and
aas
je
add
(bad)
jne
sbb
jge
mov
clc
xor
jmp
jg
lods
adc
add
inc
sub
mov
and
dec
and
xchg
xchg
shr
arpl
cld
mov
arpl
xor
cli
xor
nop
pusha
rcl
pop
cmp
bound
test
pop
ds
add
xchg
jmp
add
ja
aas
sahf
in
jmp
lock
xchg
inc
pop
out
in
cmp
sbb
clc
dec
pop
test
jp
jl
bound
jno
mov
(bad)
out
inc
mov
jl
pop
out
test
push
mov
fadd
mov
xor
pop
lock
or
dec
pushf
jbe
inc
iret
jae
int
iret
mov
mov
pop
lods
mov
jo
cmp
add
sub
test
ror
iret
push
add
jae
sbb
pop
push
xor
mov
es
inc
ins
sub
jl
lock
and
nop
fcom
sbb
call
xor
mov
jb
push
ins
sub
shl
sub
xchg
mov
xor
(bad)
cmps
(bad)
loope
shl
inc
mov
jns
sbb
add
std
cmc
fs
sbb
push
mov
fcmovnb
mov
push
test
jl
inc
sub
dec
sbb
jnp
jo
lods
int
sbb
fisttp
mov
cmp
or
add
sbb
nop
loopne
xchg
add
daa
loope
or
scas
adc
scas
sbb
(bad)
add
push
mov
mov
fdiv
or
repz
jne
ror
scas
leave
jmp
pop
sbb
sbb
xor
adc
in
sahf
mov
add
je
retf
dec
int3
sub
pusha
jns
add
ds
arpl
setnp
retf
push
out
fcom
add
add
test
xlat
xor
jecxz
jmp
(bad)
dec
lahf
mov
lods
jl
jmp
sbb
adc
jl
aaa
sbb
inc
sub
mov
inc
xchg
adc
and
bound
mov
jg
mov
pop
ins
jno
dec
push
and
gs
adc
test
bswap
cmp
inc
es
ins
adc
and
xor
fisttp
cmp
das
sub
inc
adc
scas
mov
and
or
test
(bad)
sbb
and
std
data16
push
fst
or
pusha
add
dec
lea
adc
push
cdq
ins
movs
test
mov
add
mov
xchg
add
inc
inc
jae
push
mov
or
in
mov
test
push
call
lds
fisub
push
fadd
jae
stos
add
jmp
adc
ins
iret
adc
add
jne
adc
mov
cld
jge
jl
mov
ret
add
dec
adc
cmp
pop
mov
push
mov
add
adc
jl
pop
jmp
retf
adc
inc
add
pop
mov
xchg
and
xor
push
in
arpl
fiadd
into
aad
pcmpeqb
xchg
jae
fistp
jb
in
in
xchg
push
xor
je
outs
in
popa
jne
aaa
sahf
adc
sbb
cmp
dec
cmp
cwde
xor
enter
dec
dec
and
test
dec
jne
out
or
and
or
push
mov
pop
hlt
jmp
sbb
je
shl
test
dec
sbb
jne
or
js
rcl
dec
push
sub
xchg
jge
pop
push
push
push
jge
sti
mov
pop
or
fdiv
or
sbb
inc
scas
(bad)
xor
fst
pop
mov
cmp
rcr
aam
(bad)
stos
add
mov
rol
jne
jnp
push
xchg
mov
test
(bad)
mov
les
popf
in
mov
(bad)
pop
mov
adc
(bad)
leave
(bad)
add
or
add
add
mov
les
mov
push
ins
xor
out
pop
push
stos
fucomi
sbb
cmp
mov
mov
cmp
sbb
adc
cli
jne
mov
jmp
(bad)
aad
adc
xor
fstp
rol
call
or
(bad)
sbb
mov
add
test
int
test
cmps
or
dec
pushf
lock
retf
daa
mov
rol
jne
ins
loop
add
ror
mov
xchg
jne
xor
ss
mov
in
cmp
sbb
mov
cmp
and
adc
xor
and
xor
xchg
sbb
jle
inc
sbb
mov
xor
lds
shl
sub
ins
add
push
lea
lds
push
pop
fcomp
inc
add
or
js
je
fwait
mov
or
pop
push
fdivr
mov
pop
sbb
fbstp
ret
or
xor
in
sahf
shl
sahf
test
mov
xchg
mov
mov
cwde
push
adc
mov
inc
loopne
inc
add
retf
inc
ss
fs
push
cmp
mov
or
and
inc
adc
fnstenv
and
(bad)
jo
popa
add
mov
dec
test
retf
and
mov
xchg
add
or
aas
jmp
dec
stos
mov
mov
inc
jae
xchg
mov
clc
and
je
fbstp
xor
aam
mov
add
loopne
dec
sub
mov
ins
frstor
inc
push
jne
jg
(bad)
arpl
push
ds
sub
data16
sbb
sbb
mov
dec
cmp
cmp
ins
push
cmp
jne
inc
mov
fwait
je
loopne
pop
test
and
mov
test
add
shr
cmp
test
lea
addps
cmp
imul
add
mov
nop
add
test
add
push
xor
push
in
test
add
jne
lods
mov
or
fucomi
cmp
in
lahf
dec
xlat
shl
test
push
sub
cmp
and
mov
push
inc
inc
jbe
add
and
stos
mov
idiv
and
jo
xchg
(bad)
clc
push
hlt
aas
sbb
xor
into
repnz
or
movs
inc
inc
nop
jne
pop
movs
sqrtps
jecxz
adc
or
cdq
fcomp
or
jmp
jmp
adc
add
dec
loope
daa
les
sub
mov
(bad)
jmp
call
int3
popa
fsub
xchg
mov
rol
in
mov
jne
mov
ss
mov
js
sar
lock
out
cmp
xor
pop
sbb
or
push
mov
sub
outs
(bad)
inc
xchg
je
mov
lods
mov
cmp
dec
mov
pop
adc
push
mov
mov
adc
aas
jmp
fadd
add
jmp
(bad)
xchg
test
fmul
test
xor
fsub
or
sbb
or
jmp
inc
aaa
pop
jmp
mov
sbb
push
fst
push
push
pop
xor
pushf
and
or
inc
sbb
jl
push
jmp
mov
rcr
sbb
or
jo
and
adc
popa
dec
(bad)
adc
ins
push
sbb
xlat
sub
ss
call
sti
jle
mov
or
or
cmp
jle
pop
frstor
mov
cmp
mov
dec
jmp
rol
jle
sbb
in
push
push
ret
adc
test
or
jb
add
(bad)
pand
xchg
or
jno
pusha
daa
test
mov
ins
sub
cmp
out
fs
sub
(bad)
fiadd
(bad)
mov
jp
iret
cmp
fld
lods
and
or
call
push
arpl
fdivr
fild
out
fadd
test
aam
cs
mov
or
adc
imul
icebp
retf
adc
test
imul
or
add
cmp
sub
push
mov
movs
jp
(bad)
ins
test
mov
dec
jae
xchg
xor
(bad)
jo
adc
mov
and
cld
jmp
shl
adc
mov
inc
pop
mov
mov
inc
sub
mov
arpl
jmp
ins
test
pop
fwait
sbb
push
fsub
mov
sub
jecxz
cdq
ds
mov
sub
out
push
add
mov
add
push
adc
in
xchg
cmp
inc
mov
rcl
sti
(bad)
aas
les
cmp
mov
mov
or
mov
pop
jnp
xor
push
mov
or
add
fist
jp
or
pop
adc
mov
nop
cmp
cmc
addr16
mov
xor
lea
jbe
mov
(bad)
pop
push
movs
and
(bad)
fisttp
push
popf
and
es
mov
mov
ja
pop
jmp
out
push
push
ja
cmp
inc
lods
xor
push
das
shl
add
mov
jno
call
call
xchg
sti
aad
xchg
mov
fist
push
or
and
mov
inc
sar
adc
ins
or
call
inc
mov
pop
int3
sub
pop
int
lahf
popa
rol
iret
xchg
and
or
popa
ins
or
mov
rcr
push
inc
mov
outs
loopne
inc
inc
add
shl
stc
add
fisubr
add
jne
jns
ret
jp
in
mov
ret
jp
fdivr
add
mov
sbb
fidivr
fsub
pop
pop
sub
shr
imul
sar
fadd
arpl
or
adc
mov
in
mov
jb
or
mov
sub
add
pop
xor
fxch
ss
mov
xchg
fcomp
mov
xchg
or
push
xor
mov
jbe
adc
sbb
add
adc
mov
pop
or
pop
stos
lea
adc
mov
dec
jge
shl
mov
jo
ficomp
rol
div
shl
cli
sbb
hlt
lea
jmp
jg
sub
pop
and
scas
cmp
cs
dec
adc
mul
sbb
sbb
pop
cmp
and
jo
ds
pop
sub
mov
nop
inc
cmp
shl
call
and
arpl
push
sub
xchg
dec
outs
dec
mov
into
in
mov
inc
jo
imul
ja
or
ins
inc
pusha
imul
add
fstp
rol
pop
adc
outs
cmp
leave
adc
mov
xor
pusha
sbb
push
rol
adc
repz
out
and
or
mov
jne
(bad)
mov
adc
arpl
sub
outs
mov
pop
or
rcr
push
mov
or
nop
jmp
xchg
fsub
fcom
mov
and
addr16
dec
movs
shl
dec
adc
ins
pop
add
pop
jne
or
jbe
fld
jne
mov
push
add
lahf
fdiv
(bad)
call
jecxz
ret
push
neg
sub
mov
inc
mov
push
mov
nop
jbe
or
or
ja
cs
xor
(bad)
sbb
pop
and
cmp
popf
pop
pop
jl
fisttp
push
or
iret
mov
aam
outs
mov
pop
inc
pop
not
cdq
in
clc
or
xlat
leave
and
ror
mov
xor
add
(bad)
mov
ja
sub
jmp
setg
sbb
pop
je
adc
sar
mov
outs
add
mov
ror
ret
cmp
or
inc
dec
iret
sub
and
rol
jle
inc
(bad)
fistp
out
jne
mov
or
or
pop
stc
sbb
sbb
jnp
adc
clc
stos
pusha
rol
push
xlat
pop
cmp
pop
add
xchg
dec
outs
fild
and
mov
mov
outs
(bad)
arpl
jp
fwait
int
push
xchg
add
jb
mov
loopne
xchg
int
out
cld
fmul
cs
imul
pop
sub
jp
and
mov
(bad)
sbb
fnstcw
xor
add
sbb
test
sbb
stc
loop
inc
test
lods
fadd
fs
inc
fisttp
adc
ins
sub
xchg
xchg
popf
mov
dec
mov
adc
mov
(bad)
psrad
mov
and
or
cmp
adc
js
dec
dec
call
mov
mov
pop
clc
mov
nop
lock
dec
dec
paddsb
mov
mov
bound
icebp
xchg
inc
jnp
jle
icebp
test
test
icebp
jo
retf
mov
(bad)
sar
sbb
or
mov
inc
mov
into
cmp
mov
sub
dec
mov
push
cmovs
test
mov
mov
mov
or
fadd
lahf
pop
and
lock
xlat
test
mov
inc
in
mov
inc
mov
lahf
xchg
aas
mov
sub
fadd
sbb
adc
push
dec
mov
stos
mov
inc
or
inc
ins
pop
add
nop
je
inc
or
xchg
ret
cmp
jne
cmp
(bad)
int
out
ja
(bad)
xor
mov
adc
cmp
rcl
cmc
gs
mov
ins
aad
minps
enter
push
shr
adc
out
mov
and
and
push
mov
ror
xchg
push
lahf
loopne
ins
fmul
call
lea
and
adc
xor
les
je
dec
cmp
fcmovb
add
push
mov
sbb
push
push
push
sahf
sub
jbe
(bad)
fadd
mov
test
fldenv
cwde
add
(bad)
pushf
lea
and
mov
pop
lock
sbb
push
test
sub
xchg
or
jbe
add
cld
sub
mov
mov
mov
mov
neg
mov
push
ror
daa
ret
iretw
cld
jmp
jmp
push
test
fistp
or
mov
mov
ss
mov
xor
mov
mov
sub
mov
mov
mov
retf
xor
mov
xchg
mov
leave
test
xor
sahf
cmp
pop
aam
mov
jne
or
push
aaa
fld
ret
dec
or
rol
mov
jo
mov
xor
inc
pop
adc
push
cmp
leave
je
pusha
popa
add
(bad)
mov
xchg
or
jge
sub
mov
outs
push
fdivr
push
inc
xor
adc
ins
push
sbb
lds
ins
sub
push
rol
mov
test
jb
pop
or
aad
xor
inc
mov
test
mov
adc
or
xor
add
xor
pop
idiv
jmp
xor
add
js
push
inc
push
aad
jp
arpl
mov
xchg
arpl
mov
outs
dec
(bad)
jmp
xor
inc
mov
int
adc
push
clc
xchg
ins
pop
ins
sub
add
ret
xchg
sub
add
lahf
xor
and
sbb
mov
push
rcl
mov
lods
jmp
jbe
mov
mov
mov
pop
sbb
aas
mul
add
loope
mov
adc
lds
mov
or
mov
mov
jno
adc
jle
je
add
fst
test
outs
(bad)
test
mov
cmp
aad
add
lock
and
shl
push
inc
pandn
pop
stos
add
jecxz
cmp
dec
mov
or
hlt
mov
aam
pop
inc
es
sbb
add
sbb
aaa
mov
je
lods
cmp
add
adc
sbb
or
call
fiadd
fsub
outs
mov
(bad)
rol
das
dec
mov
hlt
and
xor
and
psubusw
push
and
and
adc
mov
adc
jo
dec
or
ror
sbb
jge
mov
call
mov
ffree
add
retf
call
pop
mov
lahf
push
sbb
das
lahf
pop
lea
jne
mov
fadd
mov
fidivr
adc
xchg
leave
add
xchg
xor
add
add
inc
xchg
mov
sbb
mov
inc
rol
je
pop
pop
jmp
fisttp
inc
push
adc
das
cmp
je
pop
push
mov
adc
xor
mov
pusha
mov
push
or
pop
adc
adc
nop
add
add
mov
int
adc
push
cmp
or
leave
ret
pop
push
adc
xor
or
push
sub
pop
mov
shl
adc
pop
cmp
jbe
cmp
pop
sti
add
add
loopne
sub
sahf
add
push
cwde
in
sbb
test
mov
fadd
mov
mov
push
jge
mov
and
pop
dec
mov
jne
mov
out
add
lds
mov
mov
adc
add
nop
pushf
imul
int
sti
push
pop
jbe
ds
mov
rol
or
or
push
add
mov
ins
add
loope
sub
inc
ret
add
pop
fld
jne
pop
outs
jmp
ins
icebp
xor
jg
pushf
pushf
pop
push
xor
pop
push
popf
or
push
les
mov
mov
fbstp
outs
ret
mov
test
pop
or
pusha
or
jns
add
ret
xchg
inc
jle
sbb
add
or
clc
nop
add
and
mov
aaa
shr
and
jne
jae
mov
ins
sub
jbe
jns
ins
and
cmp
sub
xor
adc
sbb
sub
jmp
mov
(bad)
xchg
cld
lea
xchg
pop
ds
sub
xor
ds
cmp
mov
and
iret
loop
pop
and
mov
leave
ret
push
or
xor
std
add
pop
les
outs
xor
xor
pop
leave
add
push
jo
ins
in
fld
and
pop
je
add
lods
lods
mov
mov
inc
jo
inc
inc
aam
enter
adc
mov
and
or
aaa
stos
aam
inc
pusha
pop
mov
cmp
jmp
xchg
out
add
pop
mov
pushf
jg
mov
ret
add
test
je
lods
rol
idiv
pop
popa
sub
icebp
(bad)
fisttp
jle
push
or
cmp
sbb
push
mov
sbb
jne
mov
adc
loopne
movs
pop
mov
push
push
or
aam
clc
hlt
test
test
push
mov
add
or
mov
lock
cmp
mov
je
push
and
mov
mov
test
fst
inc
punpckhbw
std
sbb
loopne
mov
icebp
scas
int
adc
popa
dec
mov
in
jb
lock
mov
stc
js
sub
lea
adc
mov
mov
add
inc
sbb
out
adc
cmp
sub
jo
jge
fstp
and
pop
hlt
jno
push
icebp
dec
add
mov
mov
(bad)
mov
and
xchg
add
jg
push
inc
add
pop
and
pop
adc
mov
adc
add
(bad)
jg
loopne
inc
mov
sti
ja
aam
call
por
pop
nop
ins
inc
adc
lods
and
mov
test
(bad)
es
jmp
(bad)
ins
mov
pop
fnstenv
daa
add
xor
fiadd
xchg
ins
pop
les
cmp
sub
shr
add
movs
inc
sti
add
jne
jmp
push
lods
push
(bad)
push
adc
mov
and
in
aas
ins
mov
shl
and
cmp
mov
ins
or
add
jne
clc
ffree
outs
adc
or
test
mov
push
ror
jne
cmp
dec
push
push
and
ret
add
pusha
xor
popa
cld
(bad)
fsubr
aas
push
outs
or
and
add
mov
inc
adc
xchg
aas
cmc
fninit
pop
ret
adc
jo
orps
cwde
popa
out
mov
popa
clc
enter
aam
sbb
outs
push
icebp
jge
lock
mov
and
(bad)
or
inc
and
xchg
jbe
ins
lods
and
add
out
jo
pop
fild
test
mov
adc
jae
cmp
bound
popf
and
mov
cmp
pop
imul
jmp
scas
(bad)
ja
mov
push
outs
xor
pusha
fsubr
or
test
or
mov
aaa
cld
aas
push
dec
outs
outs
mov
fidiv
inc
pop
dec
sbb
cli
je
mov
aaa
icebp
add
jl
pop
dec
cmps
push
or
jle
or
and
ficomp
adc
add
cmp
sbb
add
retf
pop
adc
(bad)
or
add
inc
mov
mov
adc
js
add
in
xor
jp
outs
or
jle
aas
or
mov
inc
nop
or
pop
aaa
pop
in
pop
pop
adc
jnp
inc
sub
xchg
rcr
pop
dec
adc
or
loopne
addr16
inc
pop
ret
scas
fmul
shl
inc
rol
pxor
and
or
pop
push
mov
push
xchg
push
mov
or
inc
popa
sub
mov
(bad)
push
jb
or
sub
add
or
dec
fistp
xor
xor
test
mov
add
mov
mov
(bad)
push
inc
ret
adc
(bad)
pop
scas
xor
iret
mov
ss
pop
pop
pop
or
ror
mov
data16
sbb
jne
mov
das
sub
mov
call
mov
mov
sbb
scas
jg
cmc
push
and
aas
aad
sbb
add
jge
jae
or
mov
mov
sahf
call
pop
sbb
ins
je
add
jne
ds
loopne
outs
mov
mov
sbb
add
test
adc
lock
call
mov
add
scas
ror
and
adc
inc
push
pop
push
pop
ud0
mov
imul
ins
fild
ins
mov
adc
xchg
jnp
xor
retf
adc
sar
dec
les
dec
es
xor
out
(bad)
(bad)
popa
inc
inc
or
fistp
aam
mov
je
(bad)
pop
sub
mov
(bad)
xchg
xchg
icebp
mov
xchg
push
jp
dec
inc
mov
xor
aas
sbb
push
arpl
pandn
mov
adc
stos
mov
dec
jmp
mov
mov
sub
jle
mov
cmp
jno
xor
and
add
nop
retf
mov
xlat
sub
cmp
shr
mov
popf
cmp
sub
jnp
inc
mov
add
mov
push
mov
sti
mov
and
(bad)
adc
jmp
fstp
cmp
add
adc
ss
xchg
cwde
mov
jmp
mov
pop
nop
setge
gs
push
mov
sbb
jbe
(bad)
jmp
mov
js
jecxz
jmp
xor
iret
mov
and
bound
jne
and
or
(bad)
fistp
pop
cmp
(bad)
mov
cmp
mov
test
lahf
(bad)
pop
dec
es
js
jne
fs
in
xor
je
pusha
je
add
add
inc
je
shl
dec
retf
or
adc
rol
rcl
test
cwde
jne
mov
sbb
cli
loopne
adc
(bad)
out
fisttp
mov
aad
movups
test
xor
sbb
push
fsubr
mov
aaa
sbb
cmc
push
sbb
outs
cmp
ud0
data16
push
arpl
das
and
and
jnp
inc
pop
adc
adc
mov
mov
nop
fidiv
mov
into
adc
adc
dec
pop
or
fadd
cwde
(bad)
cmp
mov
fmul
sub
adc
mov
addr16
pop
push
fcom
inc
push
push
mov
xor
cmp
pop
mov
adc
or
sbb
cmp
inc
pusha
xchg
cmps
lea
(bad)
push
dec
or
or
sub
lock
not
inc
push
rol
xchg
jo
mov
or
pop
je
pop
iret
mov
pop
mov
jno
loope
or
dec
scas
mov
mov
and
popf
leave
ret
movlps
ret
sub
and
mov
cs
mov
cdq
mov
out
es
shl
(bad)
mov
push
cmp
mov
dec
add
jmp
pop
les
push
add
inc
push
movsx
cmc
xor
test
sbb
add
push
cmp
mov
mov
mov
aad
sahf
out
mov
push
xor
xchg
push
adc
retf
adc
xchg
jns
js
test
add
ret
and
add
lahf
popa
inc
lea
jbe
push
sbb
inc
int
jge
inc
(bad)
(bad)
lss
nop
or
push
adc
jmp
into
ror
mov
add
fbstp
inc
jae
sub
adc
or
ret
push
mov
sbb
mov
out
cmp
fs
xor
out
push
out
ins
jbe
jle
ins
and
jb
or
nop
mov
cmp
or
inc
cmp
push
outs
push
loopne
outs
jne
mov
je
xor
je
sbb
loop
mov
cmovbe
clc
sbb
(bad)
mov
btr
pop
add
jmp
mov
push
mov
or
out
jb
or
ja
sub
push
js
aad
mov
(bad)
xchg
loop
and
lock
and
nop
inc
push
cmp
xor
sbb
or
sbb
and
sbb
sbb
inc
fs
inc
push
dec
dec
push
and
pop
sbb
shl
xor
js
shl
mov
xor
and
and
and
je
or
enter
mov
mov
and
and
and
mov
iret
lods
dec
sbb
push
dec
neg
add
cmp
ficomp
jo
mov
xor
push
inc
mov
inc
shl
xor
sub
mov
fcomp
xor
inc
cdq
(bad)
(bad)
dec
ret
pop
ss
nop
scas
retf
add
rcl
pop
out
iret
jge
add
gs
inc
pop
in
shl
and
and
inc
mov
sub
ins
sub
dec
dec
cli
pop
adc
dec
sbb
in
mov
sbb
fimul
cmp
ret
nop
aas
push
outs
pop
test
adc
stc
inc
shl
mov
pop
retf
adc
push
dec
sub
add
stc
inc
xor
sbb
bnd
loopne
stc
neg
cmp
cmc
add
pop
hlt
xchg
std
mov
sub
mov
jmp
add
add
and
sub
jmp
popa
mov
fwait
adc
mov
adc
mov
cmp
mov
inc
jge
fiadd
jg
pop
mov
jle
add
(bad)
push
ror
loop
mov
or
push
lock
enter
inc
mov
daa
xchg
in
pop
mov
jae
lea
fstp
mov
adc
mov
xor
dec
xor
aas
sbb
std
dec
inc
fiadd
add
or
test
js
xor
or
iret
xor
in
add
mov
sub
pop
mov
fs
lock
mov
jl
arpl
add
push
loopne
dec
add
mov
pop
not
add
pop
xor
ficom
pop
loopne
ret
and
daa
jb
jno
xor
jg
jno
test
cmp
xor
xchg
(bad)
aas
les
shl
pop
add
sbb
jge
cmp
sub
jo
and
sbb
sub
jp
mov
push
das
je
or
je
mov
in
jb
in
adc
adc
adc
and
pusha
xor
adc
cvttps2pi
ret
outs
dec
or
shl
push
adc
pop
dec
rol
jge
or
or
pop
js
cmp
adc
mov
inc
sbb
adc
dec
or
iret
sbb
sti
push
out
loopne
sub
mov
shl
add
cmp
fdiv
mov
in
mov
mov
mov
loopne
scas
add
jb
loope
out
adc
icebp
inc
test
cmp
inc
test
scas
das
mov
xchg
adc
xor
push
aas
or
outs
sbb
mov
out
test
add
movlps
jecxz
arpl
(bad)
jecxz
ficomp
or
pop
pop
sub
and
mov
call
out
bnd
inc
mov
aas
imul
aas
mov
cmp
xchg
sti
cld
ss
je
nop
movsx
or
mov
cs
push
xchg
mov
imul
inc
add
ins
mov
fiadd
fs
pop
mov
hlt
inc
(bad)
out
rcr
fild
call
gs
popa
data16
or
mov
or
dec
cmp
cmp
test
mov
fdiv
or
dec
mov
sahf
sub
push
dec
sbb
ret
outs
pusha
pop
test
in
in
sub
push
jb
jg
outs
pop
inc
enter
outs
push
nop
pop
mov
outs
and
aas
or
inc
sahf
pop
je
xchg
mov
sbb
shl
bound
push
sbb
cdq
sub
gs
ret
xchg
(bad)
pop
sbb
mov
xchg
mov
mov
xchg
or
xor
dec
push
dec
sbb
push
das
adc
jmp
mov
add
jg
add
pop
enter
test
loopne
or
js
aam
out
daa
ins
enter
(bad)
outs
mov
daa
ds
lahf
cmp
cld
shl
sbb
scas
pop
xor
or
sti
dec
les
addr16
test
adc
popa
mov
loop
pop
or
popf
lods
cmp
bound
mov
push
sbb
fiadd
sbb
pop
mov
and
lods
dec
inc
js
fbstp
xor
es
mov
(bad)
fsubr
dec
mov
mov
test
mov
cmp
repnz
add
cmp
iret
sub
and
fs
dec
lods
pop
push
fwait
test
sub
or
lock
sbb
call
int3
adc
jnp
sbb
pop
inc
stos
mov
push
mov
imul
lods
sbb
xchg
mov
and
or
or
cmp
fisub
or
jae
nop
shl
je
jns
lahf
add
pop
xor
shl
adc
test
dec
mov
or
push
mov
inc
ret
lods
mov
jbe
pandn
jne
adc
mov
test
jb
ins
fild
inc
mov
and
loop
adc
fild
leave
add
jmp
mov
ja
adc
call
outs
xor
sbb
dec
fwait
or
adc
and
inc
mov
xchg
mov
out
in
shl
push
adc
jne
adc
fs
outs
and
test
ins
outs
sbb
pop
and
arpl
call
sub
(bad)
iret
(bad)
push
pop
inc
mov
movd
inc
(bad)
jno
and
mov
inc
push
aam
sbb
add
dec
ficom
pop
jno
inc
add
mov
push
or
sbb
or
ja
bound
lahf
gs
mov
inc
call
out
xor
cmp
inc
cmp
adc
pop
inc
sbb
stos
push
lods
test
pop
and
ss
adc
sbb
or
loope
inc
and
fcom
mov
cmp
arpl
sbb
cmp
mov
xor
mov
mov
pop
and
(bad)
into
cmp
xchg
icebp
mov
ins
sub
nop
cmp
sbb
adc
xor
imul
push
mov
mov
mov
mov
inc
adc
sti
adc
fcom
aaa
fst
outs
push
pop
mov
pop
adc
in
push
dec
sbb
jb
fidiv
mov
push
fcomp
adc
inc
and
fwait
dec
or
or
pop
push
jno
cdq
push
retf
adc
mov
mov
and
and
dec
rcr
les
jbe
and
xchg
bound
mov
jmp
or
inc
jle
je
in
dec
test
sti
push
pop
adc
enter
test
sub
or
adc
and
sub
iret
sub
jg
adc
ins
outs
das
dec
xchg
sbb
inc
dec
ins
int3
mov
mov
enter
in
sbb
pop
mov
and
xor
int3
fcom
pop
leave
sbb
ja
mov
add
cwde
pusha
xchg
cmp
enter
loop
sbb
shr
pop
inc
leave
ret
paddb
nop
inc
or
or
xor
rol
adc
(bad)
leave
ret
fstp
in
xor
mov
cld
inc
xor
jmp
nop
loopne
jmp
ins
jae
leave
mov
fcomp
movs
push
push
(bad)
movs
cmp
adc
out
iret
lds
jne
push
shl
adc
mov
fsub
pop
push
adc
mov
in
jge
mov
jmp
adc
mov
fs
or
mov
leave
je
fild
jg
add
push
imul
adc
add
jmp
inc
dec
rol
push
and
call
daa
mov
mov
xchg
shl
mov
sub
xchg
push
sbb
mov
dec
test
das
stc
pop
add
push
inc
mov
push
add
xor
sub
mov
lds
mov
clc
add
test
sub
mov
retf
aas
jp
push
or
sub
fimul
push
dec
xor
adc
cmp
mov
je
jno
pusha
jl
(bad)
ins
je
mov
jae
cmp
popa
les
pusha
mul
mov
or
add
test
faddp
jmp
push
dec
aad
in
or
pop
xlat
add
adc
add
or
pop
test
inc
sbb
je
dec
mov
or
mov
icebp
cmp
xor
test
dec
icebp
mov
in
jmp
mov
sbb
shl
or
add
xchg
js
cmp
or
adc
inc
test
iret
repz
add
test
inc
pop
jmp
outs
movs
sub
sbb
cmp
sub
cmp
and
arpl
nop
mov
dec
mov
add
popa
out
mov
xchg
dec
lock
pop
shl
add
mov
lock
jg
aad
mov
mov
cmp
ja
mov
jbe
jp
test
mov
cmp
inc
ret
pop
mov
inc
sub
into
popa
cli
sbb
js
pop
adc
push
add
pop
adc
repz
sub
shr
mov
shr
jmp
add
scas
fild
dec
bound
inc
(bad)
cmp
cli
fs
pop
adc
fadd
jge
dec
mov
sub
mov
xor
call
mov
lods
xchg
int3
dec
outs
ret
push
or
add
inc
push
scas
and
or
dec
cwde
jmp
cmp
test
push
call
pusha
dec
jmp
adc
push
cmp
add
or
sbb
jo
pop
inc
nop
sub
test
add
inc
xor
xor
mov
xchg
xor
aaa
arpl
add
jb
iret
jge
test
jg
or
push
jmp
mov
mov
jbe
xor
xor
cmp
in
sbb
inc
add
pushf
sbb
inc
sbb
add
and
or
or
pusha
adc
add
inc
jnp
test
sbb
push
mov
leave
iret
adc
cwde
rcr
movs
mov
jbe
xor
cmp
dec
inc
mov
push
(bad)
js
jmp
mov
adc
fistp
outs
je
pop
lahf
sbb
jmp
jecxz
inc
jmp
and
sahf
je
pop
xchg
pop
call
or
fdiv
or
cs
mov
fiadd
mov
icebp
fild
sub
shr
daa
add
pop
jmp
mov
in
pop
rol
and
(bad)
cs
xor
je
pop
mov
or
nop
bound
push
cmp
or
add
test
add
xchg
pusha
jb
add
dec
loop
jmp
aaa
sub
pop
out
je
inc
inc
mov
call
sbb
push
sbb
push
mov
ret
and
adc
add
cmp
mov
adc
mov
rcr
sbb
mov
xchg
push
add
ret
popa
mov
(bad)
ins
and
push
sub
lds
inc
outs
jmp
pop
fsub
movs
dec
fist
and
cmps
shr
adc
rol
dec
or
outs
sbb
sbb
ret
jl
push
int3
mov
inc
adc
scas
aas
or
sub
inc
push
and
or
inc
ret
cmp
sub
xor
fdivr
ins
dec
dec
push
aas
cli
xor
neg
jmp
jg
fsub
push
xchg
lea
push
stc
mov
mov
xchg
aas
pop
fdivr
sub
inc
push
inc
inc
push
dec
inc
sbb
mov
mov
dec
ror
inc
cld
pop
push
sbb
jae
mov
out
xchg
int3
test
sbb
mov
mov
mov
push
adc
mov
adc
stos
and
mov
cmp
test
ror
and
(bad)
int3
fist
mov
scas
xchg
dec
inc
pop
sub
call
push
frstor
mov
inc
lock
xchg
(bad)
or
ins
sar
cwde
stos
popa
add
js
cld
aad
icebp
ret
adc
and
test
push
add
inc
dec
xchg
jae
adc
adc
adc
adc
aas
fdivr
in
test
test
int3
jge
sahf
mov
sbb
or
es
or
lahf
add
sbb
test
mov
add
sbb
mov
inc
and
popa
ja
fs
mov
cdq
cmp
cmp
inc
ret
fdiv
(bad)
(bad)
and
mov
sbb
idiv
mov
inc
call
mov
dec
xchg
ins
(bad)
shl
ss
test
adc
xor
je
add
xchg
adc
test
scas
cmps
(bad)
add
push
sbb
sbb
pop
mov
pop
pop
xchg
test
mov
bound
sub
sub
or
mov
xor
scas
mov
(bad)
xor
das
mov
pop
mov
inc
mov
mov
daa
mov
hlt
xor
cmp
pushf
jmp
les
add
mov
cmp
int
pusha
mov
sahf
or
jmp
pop
mov
loop
xchg
dec
jne
sub
es
pop
pop
mov
les
sub
inc
add
mov
xlat
lahf
test
push
and
fild
lock
je
mov
jge
or
adc
repnz
add
mov
ja
mov
mov
loopne
cmp
loope
cwde
ffree
jne
xchg
jns
(bad)
inc
add
les
ja
int
loopne
cs
mov
lea
jno
pop
jmp
fsub
dec
rol
shr
loope
es
inc
call
ret
push
lea
popf
push
shl
xchg
mov
loopne
(bad)
mov
fild
jge
xor
(bad)
pop
clc
pop
xchg
mov
adc
add
fild
adc
mov
add
pop
outs
mov
dec
repnz
adc
inc
xor
sub
cmp
in
xlat
mov
xchg
call
xor
test
hlt
idiv
(bad)
(bad)
inc
out
mov
xchg
div
add
dec
cmps
add
push
push
pop
mov
add
daa
sbb
das
mov
xchg
mov
jg
lds
pushf
lods
cwde
push
mov
mov
stos
popa
cwde
lods
xchg
inc
mov
cmp
inc
or
hlt
cwde
ror
rol
jne
and
ret
cmc
in
adc
push
lock
nop
cmp
push
mov
mov
or
mov
aad
or
add
or
int
add
outs
fadd
ins
xor
add
pandn
pop
mov
and
add
jg
outs
sbb
pop
push
lsl
adc
and
adc
mov
add
inc
add
mov
std
(bad)
call
cmps
mov
sti
repz
(bad)
stc
bnd
jmp
in
(bad)
push
fdivr
lock
ret
cmc
clc
mov
retf
in
add
adc
mov
inc
dec
pop
nop
add
sbb
call
arpl
dec
inc
rcl
or
pop
(bad)
in
fild
mov
mov
push
jb
push
(bad)
jmp
popa
ins
and
outs
outs
outs
je
bound
jb
outs
and
inc
dec
push
and
fs
xchg
gs
nop
mov
inc
icebp
loopne
add
cmp
push
or
fs
pop
pop
ins
dec
fs
jnp
xor
enter
jge
imul
aaa
fwait
and
popa
pop
mov
dec
pop
push
adc
adc
and
add
or
cmp
xor
dec
clc
add
adc
gs
add
xor
mov
push
inc
add
xor
add
pop
push
mov
out
(bad)
push
pop
mov
mov
push
cmp
push
add
and
ins
pop
and
or
sti
cs
js
pop
lahf
push
fist
mov
or
jb
popa
je
or
mov
outs
mov
sti
sbb
outs
daa
mov
cs
adc
sbb
jb
add
or
dec
mov
ins
outs
pop
mov
in
sub
add
daa
pop
inc
popa
pop
inc
outs
push
mov
cld
inc
mov
icebp
sbb
add
ret
jg
xchg
je
push
call
pop
pop
mov
add
and
push
es
daa
mov
add
fist
(bad)
sub
pop
add
jo
call
jnp
xor
or
and
adc
inc
add
sbb
mov
and
adc
add
add
pop
pop
dec
and
in
bound
push
mov
xor
call
call
ja
cmp
je
jmp
or
pop
jae
and
lahf
cdq
leave
fidivr
jb
push
call
sbb
ja
mov
xor
popa
cmp
daa
daa
fisttp
inc
and
daa
adc
jbe
jo
ja
pop
push
call
imul
or
dec
sahf
jge
ja
dec
or
ja
sub
fs
or
adc
inc
inc
push
sbb
or
and
stc
popa
or
xor
cmp
enter
cmp
leave
inc
jg
ret
add
inc
dec
addr16
mov
mov
gs
mov
add
dec
pop
xchg
gs
dec
push
push
push
push
fs
xchg
gs
push
push
push
inc
push
mov
outs
push
pop
call
push
adc
or
and
adc
push
sbb
inc
or
or
in
out
sub
and
in
in
sbb
adc
in
in
or
jbe
dec
or
lea
ins
mov
nop
test
mov
arpl
adc
sub
mov
mov
and
js
shl
cmps
ins
sbb
pop
(bad)
in
xor
xor
data16
fiadd
in
ss
pop
cmp
lock
ret
mov
add
je
mov
ds
outs
push
push
or
loopne
jno
jns
cld
add
mov
jae
pop
push
adc
push
lea
mov
popf
(bad)
pop
add
in
cld
popf
dec
leave
xor
sub
mov
int
or
popa
push
mov
adc
or
sub
leave
leave
push
test
aas
pop
add
frstor
sub
jae
(bad)
sbb
stos
in
mov
bound
call
clc
xchg
clc
call
or
or
xor
lods
push
dec
dec
or
or
scas
ss
mov
fcom
cmp
xor
sbb
in
ss
or
std
mov
and
aaa
pop
and
or
sub
imul
adc
sub
jmp
out
fcom
ins
addr16
add
test
mov
jl
mov
cdq
mov
dec
outs
dec
push
enter
pop
cmp
cwde
or
in
stos
(bad)
dec
push
xor
push
jl
push
ret
jo
hlt
loope
push
shr
clc
xchg
gs
push
and
jnp
ret
push
inc
xor
add
fild
cmp
jle
test
outs
enter
fstp
sub
imul
mov
mov
inc
xchg
or
inc
sahf
icebp
adc
adc
add
fbld
or
cmp
out
pop
mov
jecxz
xor
and
push
push
push
lock
adc
and
add
outs
fisttp
in
adc
icebp
add
repnz
jmp
ins
or
jo
outs
sub
sbb
ins
jp
je
ror
adc
call
int
ret
nop
outs
out
lods
fnsave
pop
push
adc
loopne
shl
call
shl
pop
jae
mov
jg
push
ja
jle
cmp
jne
push
pop
mov
fnstsw
jmp
xor
div
cmp
jb
mov
imul
maskmovq
imul
add
rol
outs
lock
mov
jae
cmp
jne
fsub
call
adc
xchg
int3
or
sub
adc
cmps
fwait
shl
xor
call
and
inc
lock
in
call
inc
pusha
mov
mov
or
mov
sbb
mov
mov
(bad)
push
xor
pushf
xor
scas
mov
movs
mov
inc
jae
sti
pop
mov
rol
jecxz
mov
popf
call
mov
loope
sub
xchg
out
dec
sub
dec
or
test
call
dec
pop
adc
jg
dec
pop
in
xchg
add
or
push
lock
fistp
mov
and
mov
jle
xor
push
mov
scas
adc
pop
cmc
popa
push
(bad)
imul
adc
nop
dec
cmp
inc
shr
dec
call
popf
rcr
inc
call
repnz
or
leave
inc
sbb
imul
imul
add
movs
inc
addr16
ret
outs
mov
push
mov
dec
mov
cmps
cmp
call
adc
jl
rcr
jno
sub
mov
cmp
cmp
test
retf
pop
add
pop
adc
push
ret
xchg
pop
xchg
or
add
in
jge
loope
fcomp
scas
arpl
ja
jmp
mov
into
pop
jmp
mov
div
js
mov
into
int3
das
ins
cmp
ret
mov
jmp
add
aam
aad
sub
mov
sub
je
cs
add
rcl
jne
test
jge
test
push
fild
or
mov
pop
mov
pop
pop
mov
inc
cmp
jno
loope
repz
out
pop
jne
cmps
pop
xor
sbb
loop
je
adc
pop
jbe
out
pusha
call
xor
imul
shl
fs
aaa
push
jg
or
dec
jb
or
pop
out
ja
mov
jmp
push
nop
test
push
sbb
adc
sbb
adc
jg
call
pop
mov
sti
rcr
or
sbb
adc
inc
(bad)
loopne
adc
sub
outs
xor
pop
frstor
adc
jno
or
jnp
add
sub
dec
stos
or
jbe
popf
mov
lock
call
hlt
and
or
push
push
or
fnstsw
adc
(bad)
cmp
sti
adc
sbb
cdq
add
loope
sub
pop
cmp
leave
test
sub
mov
ret
aam
hlt
mov
rcr
pop
or
adc
adc
cs
adc
add
cmps
add
jl
mov
rol
cmc
les
inc
test
inc
cmc
in
fld
mov
je
cmp
pop
pop
mov
sbb
call
push
mov
inc
push
push
mov
ficom
enter
in
dec
sbb
movs
mov
push
ret
out
push
test
push
jp
mov
push
loop
mov
pop
add
xor
inc
add
inc
sub
xor
dec
push
or
leave
cmp
pop
aaa
cs
mov
or
inc
inc
and
or
aam
push
and
add
loop
add
retf
add
stos
pop
pop
inc
mov
or
outs
adc
std
jg
pop
ror
dec
jne
and
mov
movs
cs
mov
and
lock
push
scas
or
xor
mov
and
pusha
inc
add
mov
dec
add
fcmovb
ret
mov
sbb
xchg
adc
xor
jmp
mov
and
mov
adc
jle
into
sub
or
jge
pop
loopne
cmp
hlt
(bad)
pop
mov
in
and
mov
inc
push
push
rol
sbb
mov
test
adc
add
pop
push
or
mov
adc
popa
adc
xor
pusha
test
xchg
push
cmps
ds
cld
(bad)
fistp
push
and
mov
xlat
pop
push
mov
or
call
cmp
(bad)
jbe
fwait
or
sar
add
push
sub
lods
jnp
imul
push
pop
inc
pop
adc
js
or
add
push
(bad)
push
fdiv
cmps
scas
sub
(bad)
cmp
ror
lea
pop
mov
test
pop
in
lock
jne
push
mov
mov
retf
ja
lea
movs
mov
ror
jmp
stc
das
adc
push
iret
cmp
sub
cwde
push
mov
or
in
mov
ja
mov
lea
mov
ss
popa
inc
mov
sub
mov
add
or
dec
ja
push
xor
jbe
icebp
sbb
movs
loopne
in
je
jmp
sub
push
push
push
sub
fsubr
mov
sub
sbb
sbb
(bad)
(bad)
jg
sub
or
pop
pop
outs
clc
outs
add
dec
or
loopne
or
push
pop
ss
inc
retf
jp
xchg
add
and
sbb
cmp
rcl
xor
mov
mov
clc
mov
or
outs
and
js
lods
and
sbb
ss
ss
ds
ucomisd
ja
lahf
test
jp
push
add
mov
jbe
push
sbb
or
inc
inc
sbb
jmp
outs
mov
mov
xor
xorps
push
sub
add
mov
stc
push
jo
loop
pop
add
adc
or
or
idiv
je
push
inc
fild
sub
mov
push
push
outs
push
pusha
sub
pop
dec
jno
fnstenv
sbb
pop
retf
push
daa
and
xor
(bad)
je
dec
cmp
daa
sar
rcr
fs
mov
push
iret
mov
mov
jecxz
fisub
mov
jmp
jl
or
add
push
(bad)
fs
in
jbe
add
push
mov
push
cli
cmc
mov
pushf
jne
or
and
stos
(bad)
outs
or
push
jb
fidiv
enter
call
dec
stc
out
jg
sbb
pop
mov
sbb
dec
out
add
arpl
inc
lods
push
fild
add
int3
fistp
jb
or
add
(bad)
test
push
xchg
out
loopne
movs
add
shl
add
xchg
rcr
push
call
sub
push
lock
inc
loope
mov
dec
mov
push
add
or
push
loopne
mov
add
out
clc
dec
outs
(bad)
ds
mov
pop
daa
cmp
push
mov
mov
retf
mov
mov
out
dec
loopne
dec
gs
add
and
sbb
dec
xor
lea
push
sti
jge
loop
test
jmp
xchg
jmp
lods
adc
or
and
sub
fdiv
xchg
aam
rol
int3
(bad)
enter
cmp
(bad)
int3
rcl
cmps
mov
mov
push
mov
sti
jbe
outs
adc
ss
or
(bad)
add
push
xor
(bad)
push
dec
shl
pop
sbb
xlat
fmul
adc
and
call
sub
ror
adc
push
(bad)
int
test
cmp
xor
mov
sbb
and
scas
ss
sbb
cmp
aam
adc
fdivr
jae
call
inc
mov
addr16
pusha
cmc
fs
gs
xor
dec
and
and
cmp
sub
xor
cmp
xchg
push
cmp
mov
inc
mov
mov
pop
aas
inc
outs
inc
cld
xor
int
push
push
cwde
xchg
sub
invlpga
jmp
adc
adc
cmp
push
mov
mov
dec
mov
cs
mov
leave
pushf
dec
push
nop
push
mov
and
(bad)
call
pusha
dec
mov
jmp
push
pop
fmul
cmp
sub
cmp
xor
and
outs
clc
data16
sbb
mov
cmp
sbb
movs
dec
sbb
add
push
fild
retf
jle
out
cmp
mov
pusha
adc
push
dec
cmp
imul
push
nop
mov
or
and
pop
mov
popa
and
adc
jo
push
popf
mov
ins
cmp
inc
call
and
neg
rol
pop
xor
jne
nop
(bad)
fist
add
jbe
sbb
call
sub
fist
mov
or
jns
adc
repz
inc
add
and
unpcklps
jb
adc
pop
mov
inc
cmp
(bad)
call
add
call
inc
mov
jmp
(bad)
lods
and
call
or
adc
icebp
scas
stc
hlt
(bad)
jmp
cmp
fmul
push
and
retf
dec
dec
dec
dec
mov
dec
dec
dec
mov
fs
je
push
pop
sub
enter
scas
jae
lods
ret
push
int
dec
pop
add
jmp
fiadd
add
jp
leave
dec
xchg
bound
sbb
rcl
pop
pop
cld
push
lock
push
or
mov
mov
and
cmp
dec
inc
lods
adc
cmp
cmp
fiadd
fwait
popf
movq
repnz
(bad)
pop
(bad)
adc
sbb
shl
pop
sahf
icebp
repnz
jle
jle
(bad)
mov
cmps
xor
add
movs
adc
mov
mov
inc
cmp
xchg
stos
sti
int3
fdivr
icebp
sbb
jmp
xor
dec
adc
inc
inc
aam
cwde
lods
push
mov
mov
mov
mov
pusha
sbb
adc
jecxz
xor
sub
je
and
mov
loopne
add
mov
or
loopne
jns
in
add
(bad)
jle
(bad)
or
push
inc
(bad)
jle
ja
or
or
jns
ret
mov
jne
ret
clc
mov
jmp
gs
call
mov
push
add
xchg
test
mov
and
or
ins
or
sbb
sbb
cmp
sar
mov
xchg
push
jmp
or
mov
push
push
call
stos
adc
inc
add
sub
ret
shl
(bad)
mov
shl
in
add
pop
mov
popa
mov
rcl
clc
mov
mov
cmp
jne
push
(bad)
leave
mov
or
and
mov
sbb
aam
or
jmp
mov
mov
add
movs
outs
hlt
push
push
push
inc
push
adc
test
push
aam
lds
inc
jl
or
mov
inc
pop
or
push
adc
mov
dec
push
sub
mul
jbe
push
pusha
lods
in
and
test
ins
pop
push
popa
ror
lods
ins
or
mov
cwde
dec
push
popa
xchg
mov
mov
push
(bad)
shl
xor
push
aaa
push
xchg
fsub
sbb
cmp
dec
xlat
jge
push
shl
pushf
sbb
and
push
cdq
pop
test
or
and
stos
inc
push
xchg
mov
mov
mov
or
jo
ins
lock
and
inc
mov
or
push
xchg
xor
push
jmp
mov
add
out
in
push
pop
or
inc
jo
push
es
pop
jns
sbb
lods
std
inc
jb
loopne
and
mov
pop
call
xor
mov
sbb
outs
dec
sub
popf
cld
retf
pop
aam
(bad)
in
loopne
aam
sbb
call
adc
out
jle
mov
inc
cmp
repnz
push
(bad)
repnz
cmp
ins
out
ja
pop
div
inc
jle
stos
push
add
sub
add
xlat
push
neg
sbb
btc
rcl
add
jmp
mov
or
mov
inc
xlat
sbb
mov
mov
cmps
mov
call
rcl
xchg
adc
js
or
add
add
enter
shl
add
mov
inc
lock
fsub
out
inc
in
pop
rol
sub
inc
in
ja
(bad)
les
test
lea
adc
inc
daa
sub
ret
adc
add
push
or
jnp
fadd
jl
std
mov
push
add
push
mov
inc
or
add
daa
cmp
inc
cmp
push
daa
push
add
in
pusha
lea
adc
lock
fsubrp
adc
rol
rol
inc
lds
jns
add
daa
push
inc
loopne
lods
and
xchg
push
mov
push
push
jne
test
adc
jge
adc
(bad)
fsub
fbld
(bad)
in
adc
mov
stc
stos
movs
push
imul
into
in
cmp
ret
ins
outs
loope
add
call
fist
ja
push
dec
mov
add
inc
inc
xchg
stos
sub
and
cmp
stos
or
ins
call
idiv
sub
add
add
cdq
fisttp
push
and
ins
and
rol
lods
int3
cli
les
cli
ss
pop
mov
or
ds
jge
pop
jl
call
inc
movs
rcl
xor
test
mov
inc
pop
bound
inc
mov
fcom
dec
jl
in
adc
dec
mov
test
sub
xchg
arpl
jns
jnp
jecxz
cmps
cmps
cmp
shl
pop
jl
xor
dec
jne
sbb
mov
inc
adc
(bad)
mov
mov
(bad)
(bad)
push
and
jmp
xchg
inc
in
retf
aas
add
push
pop
jmp
aas
cmp
jmp
loopne
hlt
imul
inc
clc
push
or
sbb
mov
jne
fidiv
movs
lea
mov
nop
mov
or
pop
movs
dec
mov
lock
push
adc
xchg
xor
jmp
ret
enter
(bad)
dec
push
jbe
inc
cmps
push
sar
sub
dec
inc
(bad)
std
in
add
sub
lock
mov
mov
pop
jns
or
xor
jmp
push
add
push
pop
inc
mov
inc
add
add
xor
add
icebp
pop
das
test
aaa
pop
jbe
and
sbb
rol
pop
ja
into
sub
jle
cs
sbb
imul
clc
pushf
push
int
repnz
in
add
pop
lods
adc
jg
int
pusha
lods
adc
rcl
in
sbb
push
add
push
lods
mov
jne
pop
push
jnp
push
add
or
add
mov
jae
sti
mov
or
dec
xchg
xchg
xor
inc
and
cmc
mul
push
lods
cmp
jmp
pop
test
xchg
inc
lahf
hlt
stos
(bad)
pushf
js
cld
ins
fs
aam
jne
xchg
adc
pop
jp
mov
jnp
(bad)
adc
shr
or
mov
push
cmp
or
fmul
add
pop
and
mov
sub
ss
xor
test
sbb
jmp
aam
and
jae
leave
sbb
in
fimul
sbb
mov
push
in
call
adc
inc
pusha
cmp
push
push
lods
call
mov
lock
arpl
xor
fwait
jmp
retf
pop
leave
rol
adc
dec
int
pop
(bad)
jmp
push
loopne
test
mov
pop
test
and
fist
push
jecxz
xchg
je
push
or
dec
mov
adc
jmp
inc
sub
pusha
dec
cmp
mov
in
jl
imul
repz
repz
and
sub
addr16
sub
adc
pushf
fs
lods
mov
add
push
xchg
jnp
out
outs
repz
cmp
scas
lods
imul
jmp
sub
scas
lock
jge
xor
xchg
or
push
add
ds
not
adc
push
imul
inc
pop
mov
push
adc
clc
mov
sub
repnz
add
jae
lea
push
aam
dec
cld
add
(bad)
bound
push
mov
fild
or
sub
push
add
movs
push
add
push
or
test
jne
xchg
mov
add
(bad)
mov
mov
fsubr
or
mov
add
jmp
out
popf
sbb
jmp
(bad)
leave
add
sub
in
push
ins
mov
mov
aam
pop
dec
aas
add
cmp
rcr
add
call
jle
hlt
lea
lock
in
aaa
enter
cmp
jle
stos
jecxz
js
and
dec
jl
es
push
aaa
xchg
call
aas
jbe
js
mov
jne
aaa
call
sub
repz
dec
mov
dec
cld
std
cmp
je
inc
dec
cmp
ret
push
adc
jne
aaa
int3
sub
dec
lods
out
mov
mov
(bad)
inc
jmp
cmp
mov
adc
xchg
xor
push
cmp
jl
inc
push
inc
lea
addr16
cmp
or
adc
in
add
dec
mov
mov
dec
push
pushf
movs
test
in
pop
or
sbb
inc
lds
xchg
gs
xor
sbb
adc
xor
xor
xchg
(bad)
stos
lods
or
mov
mov
inc
out
add
inc
mov
mov
add
adc
mov
or
add
fild
pop
pop
cmc
pop
aad
test
std
push
or
jg
cli
inc
push
movzx
cmp
out
or
pop
js
push
loopne
ret
or
mov
xor
mov
xchg
mov
jmp
add
add
and
mov
push
or
fdivr
cld
or
push
xor
ret
hlt
jne
xor
clc
stos
ds
test
(bad)
movs
push
in
push
inc
push
sub
mov
adc
clc
adc
fbld
adc
inc
push
or
cmp
add
test
sbb
push
inc
mov
jl
(bad)
ret
cwde
sbb
xchg
and
mov
cpuid
jne
push
sub
xchg
or
sbb
inc
mov
popf
jge
mov
or
outs
cmps
pop
imul
mov
ss
add
movs
inc
ficom
pop
in
xor
mov
push
dec
call
dec
rcl
sbb
pop
mov
push
mov
loope
mov
scas
pop
or
call
popf
xchg
add
mov
div
pushf
or
iret
or
mov
pushf
mov
std
push
ror
add
push
cli
stos
inc
rcl
mov
mov
mov
add
and
or
add
lea
rcl
rol
(bad)
mov
not
and
and
enter
out
outs
cld
lods
or
mov
mov
or
enter
das
sub
stc
and
or
jl
mov
and
scas
ins
inc
iret
lsl
mov
test
pop
xor
xchg
adc
into
mov
pop
mov
and
mov
and
or
push
dec
cli
mov
iret
outs
je
scas
(bad)
cmc
ret
fistp
pop
jecxz
ror
add
or
mov
repz
xchg
rcr
pop
sti
mov
fisub
ret
dec
cmp
adc
test
enter
in
jle
mov
not
sbb
fnstcw
jbe
imul
ja
add
(bad)
fcmovu
imul
inc
mov
outs
mov
fdiv
jle
data16
jecxz
and
mov
fdiv
scas
test
call
rcl
imul
pop
cmp
cs
xlat
sbb
cld
imul
xlat
pop
mov
test
xchg
(bad)
push
fcom
mov
jae
and
nop
imul
jae
in
mov
clc
xchg
in
jae
cs
setae
std
jmp
inc
cld
std
in
iret
inc
lock
lock
cmps
out
out
jl
daa
clc
push
and
or
repz
mov
mov
adc
jge
clc
sbb
imul
sbb
test
fcomp
inc
and
out
test
inc
ror
cli
push
xchg
mov
pop
push
pop
pop
es
aaa
neg
ror
loope
stc
ret
outs
imul
jle
(bad)
mov
xchg
(bad)
jle
xlat
cmp
jle
sbb
das
(bad)
cmp
jo
(bad)
int
and
loopne
mov
lods
lock
adc
add
ret
fidiv
hlt
test
mov
jge
lods
pop
hlt
enter
out
out
ins
int3
adc
rcr
clc
or
int
and
ss
or
mov
mov
popf
push
sub
icebp
(bad)
pop
aaa
ret
jp
je
rcl
sbb
xchg
xlat
daa
ror
sbb
jmp
adc
inc
je
jg
fld
sub
cmp
mov
test
je
cld
and
xchg
cmp
xor
push
clc
mov
pop
movs
cwde
jns
inc
aam
cld
add
add
call
test
fdiv
int
pusha
dec
fstp
mov
(bad)
div
jno
popa
or
adc
jge
adc
ins
pop
adc
inc
lds
pop
or
lock
or
scas
ins
out
cmp
std
push
pop
or
inc
jmp
push
pop
sub
lea
rol
mov
retf
xor
xor
mov
add
mov
sti
push
ret
adc
jns
xor
mov
neg
fild
jmp
enter
push
cmc
cmp
jle
sub
cmp
mov
adc
stc
inc
pop
pop
cli
daa
mov
aas
(bad)
mov
pop
test
out
aam
(bad)
jo
sbb
cdq
mov
test
(bad)
xor
adc
fdiv
ror
rcl
fst
adc
push
ss
cdq
(bad)
shr
(bad)
mov
(bad)
clc
jl
pop
push
cli
adc
in
or
gs
lods
les
icebp
inc
jnp
mov
and
(bad)
or
mov
fist
ja
repz
test
push
or
repnz
imul
pop
cmps
and
es
fbld
cld
or
ret
pop
pop
gs
into
pushf
xor
int3
or
mov
pop
loopne
and
pop
mov
or
test
outs
addr16
data16
loopne
sub
push
pop
pop
sar
inc
add
adc
mov
test
or
ret
(bad)
add
push
div
push
add
retf
fsub
imul
mov
retf
add
icebp
sar
cmp
(bad)
push
mov
shl
xor
add
clc
mov
rol
(bad)
pop
js
mov
in
inc
sub
pop
mov
add
mov
aad
xchg
or
push
inc
rcr
bound
outs
into
push
pop
bound
ins
mov
shr
add
or
lea
rol
inc
lods
pop
call
inc
adc
mov
call
sub
cmp
jb
push
mov
mov
mov
outs
movs
push
xchg
clc
pushf
sub
shr
inc
mov
sbb
sbb
push
out
cmp
jb
arpl
ficom
test
push
ins
push
push
dec
mov
add
adc
push
jle
push
and
idiv
cmp
pop
das
jb
js
sub
push
dec
mov
adc
xor
call
pop
push
out
or
pop
push
mov
sbb
jl
cli
add
and
scas
dec
push
popf
push
scas
push
loopne
cmps
xlat
(bad)
rep
cdq
or
dec
rol
sub
cli
push
push
pop
pop
in
pop
add
mov
je
cs
and
fild
(bad)
and
pop
pop
mov
inc
test
movq
jmp
cmp
lea
inc
dec
or
pop
clc
ret
pop
std
jge
jb
fsincos
cs
enter
xor
dec
ja
in
fistp
(bad)
sar
int3
mov
shr
call
jbe
ss
add
call
mov
adc
pop
sti
mov
or
sbb
fsub
stc
(bad)
call
xor
lods
bound
dec
xor
fcmovne
fstp
ret
in
adc
mov
and
sbb
stos
clc
xlat
or
test
pop
call
(bad)
clc
popf
adc
or
pop
mov
xor
test
pop
xchg
sbb
adc
arpl
xchg
push
cs
mov
loopne
lock
inc
mov
xor
jne
dec
icebp
lock
jmp
jg
hlt
in
adc
pusha
or
ins
or
xor
mov
sti
sbb
push
dec
push
lea
ret
hlt
imul
mov
loope
sub
in
test
fwait
push
push
clc
sub
xor
int3
(bad)
inc
cmp
fisubr
jnp
test
sub
add
call
mov
and
mov
or
popf
push
xchg
pop
rcl
rol
ret
(bad)
xchg
pop
inc
mov
mov
loopne
fiadd
mov
xor
aad
clc
push
sbb
xchg
mov
hlt
and
jmp
loope
inc
add
ret
add
mov
out
and
xor
jbe
push
push
out
ret
mov
shr
nop
add
mov
sbb
inc
mov
call
mov
mov
pop
inc
sub
call
push
test
inc
in
arpl
movs
cmp
xor
dec
enter
and
cmp
jbe
push
js
sti
cmc
aam
aam
dec
enter
sbb
ds
loopne
call
aam
and
stos
dec
or
sub
add
call
enter
enter
jp
or
pop
in
test
fs
push
xor
call
inc
fcmovnbe
int
lock
pop
jb
out
repnz
fs
loop
cmp
inc
inc
dec
dec
nop
enter
and
imul
inc
pop
outs
and
fs
inc
es
aam
fcom
inc
push
sub
das
out
dec
enter
add
enter
repnz
leave
push
ret
adc
cmp
xor
cmp
and
pop
or
test
jge
adc
test
dec
mov
pop
xchg
inc
dec
inc
es
and
fs
add
push
and
jmp
pop
fiadd
xchg
shl
pushf
lods
mov
ror
shl
xchg
icebp
inc
mov
add
xor
mov
add
xchg
test
or
idiv
push
xchg
call
sbb
mov
out
dec
pop
push
adc
mul
pop
inc
out
mov
or
sar
fdivr
inc
popa
dec
dec
stos
mov
cmps
and
pop
(bad)
nop
and
sahf
inc
ins
test
inc
jg
and
add
lds
in
sbb
and
and
mov
inc
(bad)
or
dec
adc
ins
fld
dec
push
push
ficom
outs
in
pushf
es
call
jns
daa
cli
stc
data16
inc
jb
arpl
inc
mov
or
mov
inc
das
or
jo
aad
xor
pushf
js
or
into
pop
mov
push
jo
dec
mov
jbe
mov
push
mov
idiv
inc
or
js
inc
(bad)
dec
(bad)
aam
in
or
int
push
test
mov
pusha
adc
and
xchg
hlt
pusha
pop
pop
jne
mov
test
in
retf
or
inc
iret
sysenter
and
push
frstor
xor
popa
adc
push
adc
add
mov
xor
or
and
retf
add
call
loope
pop
pop
mov
ja
ret
xchg
mov
xor
mov
dec
adc
push
cmp
and
fbstp
sbb
fsubr
and
push
pop
lods
fstp
clc
mov
pop
push
je
inc
shufps
rcl
or
pop
jmp
shl
jmp
adc
jp
int3
fmul
mov
push
inc
inc
mov
adc
inc
out
test
inc
inc
cmp
push
sub
or
push
sub
int
leave
or
mov
ror
push
gs
jg
mov
out
clc
imul
not
es
aam
mov
jns
ins
push
aaa
pop
sar
pop
push
ret
or
xlat
div
pop
call
sahf
clc
cmovb
jns
mov
cld
adc
pop
sbb
push
jmp
xor
and
cmp
xchg
std
mov
and
or
nop
or
or
dec
push
fcom
add
int3
cs
out
inc
(bad)
add
test
ins
mov
inc
pop
push
retf
and
push
sbb
or
xchg
push
aam
jo
arpl
shl
mov
mov
mov
(bad)
shl
mov
inc
or
jp
adc
loopne
in
shr
sbb
inc
add
or
test
(bad)
push
add
xor
das
mov
imul
or
out
push
mov
adc
xor
stc
and
adc
inc
pop
push
(bad)
sbb
and
mov
dec
add
arpl
outs
adc
push
daa
mov
pop
mov
lock
fcom
push
push
sbb
(bad)
sbb
lea
cld
mov
adc
aam
or
push
jge
xor
ret
xchg
ins
hlt
push
mov
add
pop
retf
ins
xor
loopne
or
sbb
psrlw
mov
push
push
aam
push
mov
enter
jmp
shr
cmp
add
sbb
scas
or
test
shr
sub
mul
pushf
cmp
jbe
retf
dec
push
rol
retf
daa
mov
push
mov
or
retf
add
div
fwait
jnp
sbb
push
inc
xor
xchg
push
(bad)
ss
inc
adc
sahf
test
fs
mov
pop
dec
dec
push
int3
push
add
rol
sti
jl
dec
or
sub
or
(bad)
ds
(bad)
out
out
xchg
push
push
mov
sbb
mov
stos
push
in
cmp
push
popa
add
clc
sbb
outs
pushf
jbe
(bad)
(bad)
mov
push
sub
push
add
ror
aam
xchg
std
add
push
shr
push
jo
or
jno
out
pop
push
fdivr
push
ret
xor
pop
pop
nop
jge
or
leave
push
inc
popa
nop
out
fisttp
sub
and
daa
leave
test
lock
xchg
or
inc
mov
lea
and
cmps
loop
mov
enter
xchg
mov
or
add
dec
hlt
pop
(bad)
cli
test
xchg
rol
mov
pushf
loopne
(bad)
lock
push
inc
pop
mov
jbe
sub
fcom
inc
xchg
es
or
xchg
jmp
inc
adc
mov
xor
sbb
add
add
adc
and
enter
xlat
loopne
push
jge
sbb
pop
movzx
(bad)
lea
mov
or
push
pop
sbb
aaa
inc
ins
mov
xor
mov
or
mov
xchg
pop
data16
inc
add
shl
and
in
xor
pop
inc
sub
mov
mov
xor
mov
inc
call
scas
jecxz
aaa
jne
mov
ss
aad
retf
hlt
or
sub
call
(bad)
mov
shl
(bad)
pusha
add
cmps
mov
add
xor
shr
test
or
imul
pop
scas
test
sbb
and
add
jbe
jge
jne
pop
mov
pop
test
test
or
sub
jb
dec
mov
loopne
mov
dec
mov
aaa
inc
jmp
ins
mov
sbb
dec
mov
dec
cs
jp
call
jno
je
loopne
in
add
adc
fndisi(8087
mov
add
rcr
jnp
add
dec
popa
mov
push
sub
sbb
inc
mov
popf
cmps
or
or
mov
dec
call
test
sbb
push
xchg
call
lock
icebp
into
push
inc
pushf
ja
dec
fstp
sub
(bad)
sbb
pop
xor
push
jle
add
daa
sbb
imul
mov
ja
jmp
sbb
inc
jp
or
push
bound
push
and
xor
jbe
std
sahf
sub
gs
rcl
ds
or
in
sbb
pop
mov
fnstsw
cld
sbb
add
sbb
inc
inc
xlat
jmp
fcomp
and
je
add
dec
call
or
fucomi
call
cmps
addr16
push
adc
sbb
adc
push
pop
adc
popf
jge
push
push
les
or
mov
loopne
cmp
adc
sti
ins
daa
push
xchg
and
les
dec
push
push
ins
inc
xor
cmp
add
push
add
add
cmp
mov
and
loope
mov
sub
mov
sub
mov
or
(bad)
(bad)
sub
inc
or
sbb
pusha
daa
dec
sbb
pop
clc
push
mov
jbe
or
push
js
inc
mov
adc
test
push
add
jo
mov
xchg
fcomip
cmps
mov
mov
fadd
popa
add
cli
mov
push
loope
ret
mov
cmp
jle
lock
cmp
jg
sub
dec
xor
jno
mov
arpl
(bad)
sahf
out
repz
jmp
mov
inc
mov
push
es
aaa
enter
push
inc
ins
adc
pop
lahf
mov
and
adc
and
jg
add
add
push
mov
pop
push
xlat
aam
mov
inc
inc
add
inc
inc
fiadd
or
add
mov
push
ret
add
mov
mov
inc
dec
xor
inc
add
inc
inc
jo
sub
out
fcmovbe
imul
xlat
or
add
adc
cmps
jnp
loopne
xor
in
les
jbe
adc
fsubr
adc
sbb
popf
dec
sbb
lea
lock
adc
mov
loopne
add
and
fisttp
mov
jne
outs
dec
sbb
xor
das
das
das
outs
add
je
sub
je
xor
inc
das
das
xor
fsub
je
push
cmp
pushf
cmps
retf
xor
mov
pop
or
ret
push
neg
hlt
cmp
int3
fiadd
mov
icebp
clc
mov
push
cmp
mov
add
int3
add
out
dec
test
add
and
rcr
jmp
sar
cld
sub
mov
push
lock
dec
and
adc
mov
or
add
(bad)
call
jno
aam
push
inc
shr
out
sub
ror
jne
mov
sub
add
mov
or
push
jne
cmp
dec
push
sub
mov
(bad)
inc
push
adc
cmp
sub
adc
inc
pushf
jne
arpl
mov
push
jns
(bad)
loope
add
jo
adc
lea
push
adc
cmp
push
push
test
mov
push
mov
mov
jbe
sub
inc
jmp
mov
pop
mov
shl
jbe
push
sub
push
data16
inc
add
out
push
adc
mov
mov
dec
push
ret
jns
(bad)
ss
push
pop
call
adc
sahf
aam
jb
mov
push
lods
mov
push
dec
dec
ja
xchg
dec
adc
mov
adc
cmp
inc
xor
push
sub
call
push
lods
push
test
mov
jae
popa
adc
push
inc
and
mov
sar
ds
cdq
push
mov
shl
and
inc
jmp
jae
fsub
lds
adc
pop
mov
push
mov
into
stos
ficom
loope
cmps
jb
fst
les
adc
aas
lea
lock
clc
xor
dec
sar
jp
(bad)
sar
mov
and
setne
call
mov
cmp
inc
or
and
adc
retf
mov
inc
adc
mov
mov
ja
lock
cmp
or
pop
add
pop
icebp
adc
(bad)
ins
jo
je
add
pop
xor
mov
pop
retf
sub
sti
inc
cmp
dec
out
mov
adc
je
sub
jnp
inc
xor
adc
in
adc
pop
add
data16
in
jp
or
pop
push
adc
jl
js
add
mov
dec
lods
sub
(bad)
(bad)
fild
pusha
imul
push
jmp
data16
or
in
rcl
pop
movs
cmp
sar
mov
mov
lods
add
sahf
mov
pop
je
add
adc
(bad)
cmp
lds
ror
push
cmp
int3
and
into
xor
xor
sub
loopne
inc
cmps
cmps
and
sti
or
fs
sbb
sbb
cld
and
cli
jae
pop
xchg
and
ds
sbb
push
lods
push
mov
dec
add
cdq
es
ins
sub
mov
or
mov
add
imul
mov
nop
and
push
fs
(bad)
ja
aaa
sbb
jl
cmp
add
mov
and
dec
or
push
loopne
mov
xchg
or
mov
(bad)
xor
cmp
add
inc
jne
dec
inc
aaa
inc
jp
aaa
daa
(bad)
mov
mov
psubb
or
xor
sub
mov
xchg
push
inc
adc
ret
jecxz
xchg
sub
inc
add
cld
add
xor
mov
arpl
leave
jbe
cpuid
inc
les
sbb
adc
ror
push
(bad)
and
ror
aaa
int3
cmp
mov
inc
test
push
sbb
mov
mov
scas
or
dec
in
add
cdq
cmp
or
cld
idiv
call
push
lds
dec
inc
cs
or
mov
fnsave
push
das
mov
rcl
push
fild
jle
cmp
dec
mov
mov
jmp
fisubr
mov
pop
mov
fwait
pop
pusha
mov
push
pop
jl
ins
test
or
lds
jl
inc
movs
imul
jl
stos
xchg
or
pop
pop
ja
bnd
pop
shr
test
call
push
(bad)
pop
ror
mul
test
mov
ror
scas
jecxz
push
push
inc
or
sti
mov
(bad)
or
js
and
add
ja
mov
test
jb
xor
enter
fistp
loop
or
sub
inc
and
mov
mov
icebp
inc
xor
push
int
leave
xor
xor
sbb
push
adc
mov
inc
mov
push
or
cmp
sbb
popa
add
push
cmp
sbb
or
adc
inc
mov
push
push
addr16
add
or
pop
cdq
sub
test
jmp
and
fstp
adc
mov
dec
adc
js
in
pop
stos
push
call
or
aad
and
or
movs
sar
mov
ja
push
ja
ins
adc
pop
dec
enter
je
js
sub
je
sub
sub
jp
inc
cwde
call
fwait
shr
cmp
mov
mov
test
push
(bad)
rol
fsubr
push
sbb
out
jmp
add
lock
mov
push
cwde
or
xchg
fs
or
sahf
and
sbb
mov
pop
push
(bad)
sbb
add
add
or
pushf
ins
mov
mov
pop
mov
push
add
inc
mov
inc
push
add
jbe
adc
push
lds
je
sub
add
and
cmps
add
mov
pop
mov
adc
int
or
mov
jle
adc
call
in
and
push
test
sbb
imul
(bad)
adc
add
jp
push
dec
dec
add
mov
jns
dec
push
imul
les
pushf
(bad)
loope
outs
jae
(bad)
pop
call
bound
push
mov
fadd
les
in
xor
ja
and
lea
or
repnz
dec
mov
call
push
je
inc
xor
cli
fnstsw
lods
mov
inc
dec
jne
mov
sbb
mov
fs
js
push
jmp
or
rcl
adc
ss
(bad)
lods
cmp
shl
mov
inc
imul
nop
pop
ins
cld
mov
js
fsub
jne
ins
je
(bad)
adc
xor
dec
sub
add
inc
or
add
enter
jno
mov
jo
(bad)
inc
cmp
mov
dec
mov
or
mov
ins
call
out
rcr
dec
sbb
and
std
mov
inc
and
icebp
add
ror
or
pusha
pop
dec
add
and
ret
push
pop
hlt
cmp
fiadd
adc
or
fs
shl
inc
sub
jne
(bad)
push
pop
adc
jl
test
lods
or
or
mov
or
rcr
push
mov
pop
fdiv
fcom
add
push
je
cmp
mov
or
add
call
scas
dec
push
dec
sbb
push
mov
push
movs
push
push
push
add
outs
inc
push
rol
sar
pop
les
(bad)
mov
bound
bound
(bad)
mov
(bad)
and
and
addr16
sbb
lea
ss
adc
jmp
repnz
(bad)
call
adc
ss
inc
or
ss
inc
sbb
push
aaa
fcom
mov
loopne
js
mov
cmp
je
sub
dec
loope
out
pop
jmp
(bad)
xlat
ror
out
or
sub
ret
je
cmp
in
adc
mov
jle
test
sti
add
test
popf
or
sti
in
inc
test
mov
shr
cmp
imul
sbb
(bad)
call
xor
je
sub
inc
popa
adc
sti
fnstenv
dec
mov
daa
or
loopne
sahf
pop
jle
push
adc
push
dec
add
jbe
cmp
or
lea
adc
and
ret
mov
inc
je
jg
mov
retf
jbe
mov
xor
push
test
nop
adc
sti
out
or
jo
and
stos
movs
sahf
aam
pop
aas
punpckhdq
scas
adc
adc
clc
lea
(bad)
pushf
sti
mov
adc
push
push
cmp
cmp
xor
or
adc
(bad)
mov
fcmovnb
jmp
je
out
lods
rcl
push
sbb
icebp
mov
and
push
js
les
mov
add
stos
movs
in
add
mov
sbb
clc
pop
adc
lods
jp
ret
adc
repz
icebp
cmps
or
dec
push
inc
xchg
mov
pop
add
cmp
push
sub
sbb
sbb
retf
pop
xchg
and
in
cmp
mov
pop
jmp
pop
add
aaa
rcl
pop
add
es
sub
nop
cs
fprem
xchg
add
xor
mov
sbb
pop
sbb
adc
xor
add
outs
pushf
inc
dec
xor
cmp
adc
sub
add
cmovo
inc
pop
mov
shl
add
mov
cmp
add
pusha
ins
push
sbb
(bad)
aas
pop
push
call
pop
inc
je
movs
(bad)
sub
js
mov
mov
not
or
adc
lods
gs
dec
inc
je
push
jne
je
push
jns
inc
pop
dec
cmc
es
adc
mov
push
sbb
sti
push
popa
inc
call
cmc
mov
stc
add
lods
jns
lods
outs
ja
idiv
mov
mov
addr16
inc
stos
push
xor
mov
and
push
pop
jp
fdiv
fs
pop
inc
ret
fwait
outs
jl
add
push
cdq
and
loop
add
sar
inc
shl
push
jmp
rcl
cwde
jl
pop
fist
add
imul
pop
test
ret
and
push
sbb
test
push
add
adc
adc
je
sahf
xlat
jb
push
scas
push
sub
out
inc
(bad)
cmp
div
jmp
pop
jle
sub
mov
mov
cmp
jg
jl
dec
adc
jl
add
or
push
mov
outs
das
sbb
inc
pop
mov
inc
sub
mov
or
cmp
push
inc
mov
cmc
(bad)
movs
push
lock
jmp
cmp
jl
add
jg
imul
imul
cli
mov
pop
push
cmp
call
adc
loop
push
jp
call
pop
adc
mov
xlat
push
add
rcl
std
push
je
mov
test
sbb
xor
sub
mov
jb
jmp
inc
cmp
xor
loopne
push
add
je
mov
mov
add
nop
out
dec
jne
or
and
pop
icebp
jne
push
or
pop
xor
clc
ret
xor
mov
mov
or
mov
jle
inc
dec
jne
add
rcr
push
adc
jle
xchg
ficom
adc
cmp
aaa
sub
shl
xor
cmp
mov
xor
pop
adc
ins
mov
adc
add
push
add
sar
add
jmp
cmp
push
jo
jmp
sub
test
pop
inc
inc
adc
or
or
pop
movs
inc
sub
mov
mov
and
fmul
add
mov
cmp
fadd
adc
test
mov
jbe
ja
pop
sub
jns
movs
call
or
mov
jp
inc
inc
jmp
pusha
ds
stos
ror
or
(bad)
pop
adc
retf
and
stc
add
jo
push
mov
pop
or
test
add
pop
add
lods
cld
rcr
bound
or
dec
mov
repnz
(bad)
mov
test
push
pop
dec
inc
inc
add
ss
push
in
add
mov
jle
push
mov
mov
adc
fistp
adc
mov
lods
jl
cld
push
test
add
add
and
and
call
jmp
shr
pop
mov
mul
seto
dec
scas
std
shl
or
push
nop
sbb
pusha
loopne
add
inc
or
jl
cmp
mov
ds
in
cmps
sub
adc
and
mov
add
sbb
std
inc
loope
scas
add
inc
pop
icebp
adc
add
shl
mov
mov
ja
inc
loopne
aam
aas
daa
ret
pop
inc
push
jnp
add
je
(bad)
outs
mov
mov
adc
pop
in
add
sbb
add
inc
jo
xchg
cmp
movs
mov
in
stc
and
and
fadd
pop
xlat
popf
shl
in
sbb
in
aas
or
mov
fdivrp
sbb
popa
loope
jmp
and
div
push
lock
cmps
inc
sbb
pop
sbb
or
popf
add
mov
pop
pop
xchg
cmps
dec
inc
mov
sbb
add
xor
ret
xchg
cmp
dec
cmp
xchg
xor
sbb
adc
and
xor
ins
inc
pop
sbb
(bad)
movs
and
fwait
adc
push
jmp
add
ds
or
mov
cmp
test
pop
cwde
xor
stos
and
pop
sbb
fs
ss
mov
stc
add
lahf
imul
add
inc
inc
mov
xchg
or
add
inc
ss
add
cld
jb
bound
dec
mov
sar
jmp
dec
xchg
sti
mov
cmps
adc
icebp
sahf
lods
xor
arpl
adc
mov
xor
jmp
adc
fcomp
xadd
mov
and
call
xor
and
adc
add
rol
mov
mov
cwde
pop
pop
inc
and
aad
lahf
sub
inc
and
mov
xor
push
xchg
rcr
pop
shl
or
xor
ficom
xchg
dec
shr
or
xchg
test
int3
fcomp
clc
or
cmps
imul
imul
imul
call
pusha
outs
popf
ins
call
cmps
bound
pop
xlat
ret
jb
push
retf
js
bound
push
jmp
add
push
call
mov
call
add
imul
imul
jbe
fxtract
xchg
and
add
xchg
iret
add
dec
rol
lods
call
adc
std
add
pop
or
adc
je
cmp
das
jb
jb
popa
addr16
sti
jmp
je
ins
popa
imul
pop
sbb
push
scas
std
ja
and
add
je
ins
ins
jae
pop
mov
outs
outs
ins
popa
jne
arpl
jae
jne
outs
imul
jg
ja
ins
outs
popa
fs
push
push
and
popa
mov
ins
mov
cs
je
adc
cmp
bound
jb
jae
sti
fcmovnbe
pop
das
push
push
or
ja
jne
ins
cmp
pop
sbb
mov
add
popa
jbe
sub
(bad)
fiadd
and
and
xor
imul
jo
jae
ja
adc
cmp
xor
aaa
dec
adc
imul
dec
sub
in
aas
and
cmp
xlat
pop
pop
jge
aas
add
add
add
in
mov
add
add
inc
add
add
out
int
sbb
or
add
mov
dec
aaa
add
les
pop
jae
inc
or
add
xlat
jge
xor
push
xor
sbb
aas
inc
cli
outs
shr
xor
dec
add
imul
frstor
pop
dec
xor
jmp
add
(bad)
loopne
lock
in
out
cmp
or
(bad)
mov
out
and
pop
sub
mul
das
out
loopne
loope
loopne
in
and
or
in
enter
in
in
mov
push
addr16
push
dec
inc
loopne
je
mov
clc
(bad)
fs
dec
sbb
or
push
dec
mov
in
xchg
sbb
add
pop
pop
shl
add
popa
test
mov
inc
ret
adc
sub
mov
std
bound
adc
daa
das
mov
mov
inc
jae
mov
sbb
xor
mov
or
jb
push
fs
cmp
ret
shl
adc
dec
jb
in
ds
retf
enter
inc
pop
pop
push
aas
adc
cmp
das
or
dec
nop
loope
dec
push
xchg
inc
and
rcr
test
add
je
add
scas
iret
add
addr16
jne
add
push
push
jns
inc
pop
add
pop
jo
mov
adc
cmp
mov
push
pop
sbb
lock
and
or
lea
jns
fs
das
ds
call
push
pop
je
add
xchg
inc
add
ret
ins
cmp
jnp
sub
jb
push
retf
bound
jae
adc
push
sahf
test
sti
and
aas
push
xchg
cmp
cmp
adc
xlat
ficomp
push
dec
fbstp
pusha
imul
sbb
ins
ins
mov
add
outs
cwde
add
cmp
loopne
outs
xchg
cmovl
je
inc
inc
push
pop
xor
pop
mov
sub
sub
daa
jmp
mov
sub
outs
icebp
mov
pop
jecxz
das
mov
xchg
std
ja
jae
jo
outs
jb
gs
gs
pusha
ja
xor
js
pop
add
lock
inc
in
pop
dec
push
push
dec
inc
or
push
(bad)
icebp
sbb
outs
xor
inc
or
shl
shr
sbb
add
in
je
jo
jo
mov
data16
or
dec
jne
pop
ins
or
push
add
xor
iret
(bad)
sar
outs
lds
and
into
mov
sbb
pop
pop
push
or
les
ins
arpl
ins
fist
js
fcomip
ins
cmp
add
lahf
je
dec
dec
xor
pop
xchg
adc
aaa
push
inc
xchg
cmp
aas
enter
pop
je
xor
add
pushf
mov
dec
dec
scas
jge
mov
pop
sbb
push
push
and
push
dec
rcr
cmp
in
mov
inc
inc
push
inc
pop
and
cmp
test
push
push
nop
cmp
jae
xor
(bad)
cmp
pop
hlt
dec
test
loope
ss
adc
inc
nop
sub
cmp
sub
stc
pop
nop
pop
retf
sbb
cmp
mov
pop
xor
ja
popa
xchg
mov
(bad)
add
push
sub
int
xor
stos
cli
pop
xor
call
jo
xchg
xor
pop
inc
dec
dec
add
fbld
or
dec
out
inc
clc
call
sar
in
sti
jmp
jmp
dec
add
in
pusha
sti
sbb
ins
pop
dec
xor
rcr
push
dec
cmp
add
jmp
aaa
dec
cmp
add
push
inc
or
add
add
add
imul
sahf
xchg
fisubr
outs
add
jo
inc
cwde
das
add
add
daa
stos
pushf
pop
pop
loopne
jge
daa
mov
ins
sbb
imul
test
adc
or
imul
jb
add
ret
inc
pop
pop
outs
add
ja
mov
pop
(bad)
jo
pop
and
cmovno
addr16
outs
and
sbb
cmc
fstp
xor
xchg
lds
push
cmp
inc
pushf
add
dec
adc
mov
xchg
sub
xor
mov
xor
dec
cmp
and
pop
cmp
xchg
ins
loopne
sbb
jb
sub
das
jns
xchg
inc
popf
xor
jne
inc
sbb
arpl
clc
adc
mov
dec
push
push
dec
adc
dec
dec
pop
add
iret
repz
mov
or
out
cmc
fisubr
in
call
jmp
std
mul
add
add
or
sar
or
sub
pop
sub
dec
call
sub
(bad)
fld
inc
add
repz
ret
cmp
mov
xchg
push
xor
inc
imul
and
sbb
imul
sub
in
ss
jmp
dec
inc
dec
jmp
pop
ret
loop
and
in
loope
sub
repnz
and
out
repnz
add
cmp
sbb
das
repz
aas
jmp
ins
add
add
iret
repz
cmp
add
jbe
adc
pop
fs
outs
js
mov
add
xor
bound
xchg
push
(bad)
xor
das
sub
jne
test
shl
sub
adc
xor
(bad)
ja
xor
push
xor
(bad)
xor
adc
mov
adc
das
or
add
push
pop
push
or
das
push
push
pop
add
retf
fisubr
adc
daa
sub
sub
pop
sbb
and
in
jae
xor
xchg
adc
push
movs
adc
repz
jne
sbb
rcl
adc
add
gs
imul
push
dec
adc
pop
push
ss
xchg
jmp
xchg
push
mov
out
adc
daa
push
add
dec
out
xchg
lahf
adc
leave
mov
push
jge
adc
dec
xor
pop
retf
test
adc
adc
rol
push
push
sub
sub
pop
cs
jle
cmps
int
add
outs
adc
std
sub
inc
imul
imul
adc
adc
into
call
dec
pusha
in
fistp
push
inc
push
dec
push
mov
jne
push
mov
inc
add
pop
in
das
push
xchg
ficomp
push
mov
out
int
push
xlat
adc
push
cdq
cs
in
add
push
add
cmp
sbb
je
dec
add
sub
gs
mov
in
out
outs
pop
pop
add
push
mov
inc
js
add
popa
jae
(bad)
add
dec
retf
jmp
jo
lahf
ja
fstp
in
test
push
iret
icebp
pop
dec
sbb
pop
neg
out
mov
jo
xchg
or
xchg
out
je
lea
mov
pop
cmp
push
imul
push
in
rol
dec
add
ins
mov
add
and
push
mov
mov
mov
dec
mov
pop
inc
bound
adc
add
adc
scas
sub
fnstsw
and
or
or
inc
mov
(bad)
ins
pop
add
jbe
adc
push
adc
shld
outs
push
sub
imul
mov
inc
jbe
xchg
into
add
adc
and
rcr
sbb
ret
jae
push
dec
test
sbb
pop
daa
shr
mov
arpl
push
add
retf
push
xchg
imul
aas
push
ins
ja
stos
mov
inc
and
ucomiss
cmovno
mov
dec
xor
mov
inc
ins
addr16
mov
add
outs
js
sub
pop
pop
retf
push
cmp
xchg
js
mov
psrlw
adc
inc
pop
or
add
fcom
cwde
mov
adc
ret
int
or
xchg
xor
add
pop
les
jle
push
cmps
mov
iret
dec
arpl
mov
lahf
jo
add
ins
sbb
add
gs
xor
outs
mov
test
fiadd
add
addr16
and
jo
xchg
mov
jb
or
push
xchg
adc
dec
jp
push
cdq
fwait
mov
mov
cmps
shl
popa
ins
(bad)
fild
(bad)
retf
cmp
jmp
rol
adc
mov
push
push
call
mov
xor
pop
stc
and
ffreep
cs
dec
sub
pop
xor
sbb
inc
dec
arpl
sub
std
shr
adc
dec
gs
or
lods
adc
inc
push
inc
push
push
daa
add
outs
lods
ins
retf
or
imul
push
neg
adc
loopne
ja
inc
add
ret
arpl
ins
add
pop
pop
pop
sub
frstor
cmp
rol
add
enter
pusha
fnstenv
adc
pop
sub
gs
clc
les
adc
add
arpl
add
push
add
xchg
add
and
pusha
pop
jo
push
dec
adc
js
rcr
int
aas
xor
mov
jns
xchg
adc
add
mov
pop
(bad)
les
mov
jmp
mov
add
inc
fild
dec
pop
sti
outs
lods
or
enter
xor
pop
or
mov
add
sbb
sub
or
add
dec
add
add
ins
mov
add
sbb
fadd
cmp
mov
jae
mov
push
in
add
dec
retf
inc
test
mov
adc
or
jae
mov
sub
jmp
in
jo
or
xlat
add
stc
iret
js
fcom
add
inc
xor
mov
inc
and
dec
lock
cmp
cmp
pop
cmp
dec
shl
or
inc
inc
xor
fstp
or
adc
iret
sbb
jae
add
inc
sbb
mov
mov
outs
daa
test
icebp
fld
add
cs
pop
pop
fistp
push
push
xor
push
cmps
mov
ret
mov
push
xchg
xchg
xor
pusha
xor
and
inc
push
mov
or
ret
test
mov
ins
mov
jl
pop
add
xlat
ins
jns
mov
xor
imul
movs
sti
mov
cmp
dec
inc
dec
sbb
and
inc
jmp
imul
inc
mov
scas
and
jmp
sbb
cld
inc
cli
lods
in
mov
add
pop
xor
add
add
pop
data16
or
arpl
and
cld
arpl
push
jmp
aaa
or
jmp
sti
pop
or
sub
inc
(bad)
or
adc
and
xchg
push
push
movs
nop
(bad)
scas
loope
xchg
mov
(bad)
cmp
sub
jne
lods
clc
sub
add
loope
xor
and
add
adc
pop
test
xor
pop
add
addr16
or
sbb
add
mov
addr16
gs
or
jmp
inc
add
scas
push
add
xor
xchg
jmp
ins
pop
pop
rcl
mov
add
sub
rcr
ja
(bad)
aas
repnz
(bad)
mov
add
xor
cmp
pop
add
dec
xlat
std
add
push
nop
cmps
cmp
xor
or
or
inc
cmp
pop
and
add
or
sub
repz
enter
sub
lds
xchg
ror
sub
pop
hlt
mov
add
cmp
mov
ret
pop
or
sub
sbb
add
add
cmc
and
ds
mov
xor
pop
or
xor
mov
add
or
or
add
add
arpl
xchg
sbb
aas
and
push
sbb
out
or
je
int3
inc
(bad)
and
dec
and
dec
or
arpl
sbb
xchg
mov
jb
fld
cmp
mov
std
pop
adc
das
fild
add
adc
xor
or
out
(bad)
push
leave
add
mov
out
mov
add
addr16
or
in
pop
or
arpl
fcomp
inc
pop
imul
mov
daa
push
jbe
mov
mov
adc
cmc
mov
adc
add
cld
push
adc
sahf
rol
add
fnstsw
adc
inc
or
dec
push
or
lock
test
add
push
or
and
and
adc
and
xchg
enter
add
retf
(bad)
jo
sbb
add
mov
xchg
jmp
pop
mov
xchg
lea
or
and
sbb
bound
adc
out
inc
mov
fisttp
adc
add
push
mov
or
fist
cmp
fsubr
pop
push
xchg
pop
xchg
inc
jno
pop
int3
cmp
mov
fsubr
push
ins
arpl
and
jge
jo
add
sbb
add
jg
(bad)
cmp
pop
push
push
push
(bad)
push
mov
inc
cmp
jl
mov
mov
shr
test
or
add
pop
jp
(bad)
(bad)
mov
add
sub
cmp
mov
mov
and
movs
in
fcomp
mov
cmp
cwde
or
inc
cmp
jne
aas
loopne
fild
adc
add
adc
or
inc
scas
mov
movs
adc
iret
push
invd
push
add
pusha
adc
out
call
or
add
sub
jmp
push
mov
sbb
add
fsubr
mov
(bad)
daa
dec
or
and
or
adc
ins
nop
adc
je
enter
js
dec
enter
push
push
fldcw
jg
test
sbb
and
sub
pop
cmp
mov
add
arpl
mov
mov
sub
mov
setle
or
push
adc
mov
nop
out
ins
adc
and
mov
inc
test
push
icebp
daa
test
push
scas
addr16
add
aas
xor
add
adc
(bad)
test
or
add
mov
mov
test
dec
cs
add
push
frstor
shr
mov
push
add
add
push
outs
inc
xchg
push
add
add
addr16
(bad)
(bad)
inc
xor
xor
xor
aas
xor
pop
xor
jge
xchg
xor
xor
xor
xor
(bad)
(bad)
fidiv
add
or
sbb
inc
xor
xor
js
test
or
inc
sbb
mov
xor
xor
mov
call
xor
(bad)
(bad)
(bad)
push
xor
popf
xor
xor
mov
adc
aaa
addr16
xor
(bad)
(bad)
(bad)
push
sub
cmp
pop
cmp
mov
out
out
cmp
cmp
fdivr
clc
cmp
pop
cmp
jb
mov
outs
lock
cmp
cmp
cmp
cmp
inc
cmp
cmp
cmp
cmp
(bad)
(bad)
dec
cmp
cmp
cmp
cmp
cmp
(bad)
cmp
int
fistp
(bad)
call
ds
ds
ds
sar
cs
dec
aas
jl
xchg
lahf
aas
enter
mov
hlt
push
or
pop
xor
ja
mov
cwde
xor
xor
xor
pop
(bad)
(bad)
(bad)
push
and
cmp
dec
xor
ins
xor
jle
pushf
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
mov
xor
xor
xor
addr16
xor
xor
xor
(bad)
(bad)
(bad)
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xchg
(bad)
push
push
call
aaa
iret
aaa
lock
div
stc
inc
cmp
dec
cmp
cmp
sub
test
or
cmp
cmp
cmp
cmp
(bad)
(bad)
(bad)
(bad)
cmp
stos
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
jmp
icebp
cmp
adc
xor
xchg
sbb
and
arpl
js
mov
xchg
aas
mov
aas
retf
inc
sub
(bad)
call
cli
xor
xor
xor
xor
xor
into
xor
xor
xor
mov
(bad)
push
xor
xor
xor
xor
xor
push
xor
les
pop
ss
ss
ss
ss
pop
or
cld
push
push
aaa
mov
shl
aaa
xor
cmp
in
cld
cmp
(bad)
cmp
lea
inc
cmp
adc
push
cwde
xor
xor
call
inc
xor
adc
mov
cmp
clc
(bad)
(bad)
dec
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
outs
xlat
push
ds
and
pusha
ds
call
ds
ds
mov
(bad)
aas
jmp
pushf
pop
xor
push
jg
pop
push
xor
fist
or
jne
cld
xor
cmps
sub
push
fnstenv
shl
fdiv
jmp
dec
jg
in
fist
xchg
(bad)
(bad)
cmp
xchg
cmp
(bad)
fcomip
(bad)
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
(bad)
cmp
cmp
cmp
cmp
cmp
pop
jnp
cmp
mov
pop
jmp
ds
idiv
xchg
fwait
hlt
clc
mov
fwait
dec
xor
pushf
xor
xor
xor
xor
xor
xor
xor
xor
lods
sub
xor
dec
inc
xor
(bad)
push
jmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
getsec
std
call
cs
pushf
xor
(bad)
xor
mov
sub
aaa
xor
mov
mov
cmp
cmp
cwde
cmp
jg
fcomip
cmp
cmp
cmp
mov
jo
clc
outs
push
cmp
das
es
dec
mov
test
pop
out
ds
aas
cld
mov
test
dec
xor
pop
dec
xor
(bad)
jmp
xor
out
ins
in
(bad)
push
loop
pop
cmp
cmp
dec
cmp
ja
mov
xchg
cmp
add
(bad)
(bad)
in
inc
push
xor
pop
xor
xor
sbb
in
jecxz
xor
loope
xor
xor
xor
xor
xor
xor
cld
ret
xor
in
xor
xor
xor
xor
xor
add
cwde
cmp
cmp
mov
pop
cmp
push
cmp
cmp
cmp
movs
ds
push
jno
bound
cmp
push
fdivr
clc
movs
inc
xchg
(bad)
(bad)
jmp
sbb
and
add
mov
xchg
push
push
and
stos
stos
fs
sbb
xor
rcl
rcl
inc
and
imul
xor
dec
jbe
dec
(bad)
(bad)
sti
fbld
gs
ins
popa
jae
gs
dec
inc
inc
inc
inc
dec
inc
dec
retf
div
push
xchg
ss
xor
xor
aam
je
ja
adc
inc
(bad)
sub
pop
push
cmp
gs
gs
sbb
popa
fs
adc
(bad)
in
add
pop
arpl
sbb
arpl
mov
jno
arpl
jb
add
sub
push
pop
and
mov
add
clc
fstp
daa
and
jb
jne
and
je
outs
inc
rcl
ins
mov
scas
lods
icebp
ins
imul
loopne
std
ja
jae
jbe
ins
jns
add
pop
popa
add
rol
push
pop
inc
dec
popa
jno
add
ja
je
xchg
daa
xor
and
ja
xor
sub
and
aas
ja
jg
inc
div
arpl
push
or
cmp
lahf
dec
es
add
or
or
test
fsub
fst
mov
or
inc
xchg
aas
pop
push
sub
xor
add
pop
push
add
sbb
sbb
xor
push
enter
push
pop
or
dec
push
inc
dec
pop
add
add
jns
add
lea
jae
repz
sub
adc
call
push
jmp
push
xor
pop
cmps
add
adc
add
das
add
push
xor
ret
scas
sbb
add
xchg
mul
pop
pop
xor
and
add
inc
dec
cmp
pop
adc
adc
int
mov
loop
test
ss
dec
jno
das
push
sbb
test
jg
push
and
sub
mov
jmp
pop
fwait
inc
add
inc
or
push
mov
enter
add
pusha
fld
das
enter
add
inc
adc
add
dec
add
and
movs
pusha
dec
adc
sub
xchg
push
add
inc
push
shr
clc
pop
pop
add
adc
pushaw
test
popa
aam
push
push
or
push
fsub
test
jne
mov
pusha
loope
aam
sti
xchg
int
imul
adc
out
adc
adc
push
or
es
pop
pop
push
aad
mov
inc
stos
jno
popa
aaa
inc
les
or
push
and
jnp
mov
push
cmp
and
popf
pop
adc
dec
push
mov
imul
sbb
imul
jno
mov
add
mov
popa
push
test
sub
cs
sub
outs
mov
or
cmp
fisubr
jne
inc
jae
in
test
push
pop
gs
jb
add
ja
and
cld
and
add
jo
ins
and
and
ja
retf
in
xchg
push
add
push
inc
pop
fist
push
mov
adc
push
add
fld
stc
imul
add
aas
xor
inc
loopne
jmp
(bad)
sub
push
add
call
xchg
push
add
in
jl
rol
add
adc
dec
das
mov
stc
add
push
and
sub
adc
mov
cmp
pusha
push
add
call
mov
sub
(bad)
popa
adc
js
gs
sbb
pop
xchg
mov
and
imul
imul
fwait
ins
add
push
jg
add
cmp
or
mov
imul
outs
mov
scas
add
call
shr
outs
out
clc
adc
add
enter
inc
adc
add
not
retf
outs
retf
popa
outs
add
inc
mov
push
aad
cwde
or
cmp
test
sub
xor
cmp
or
frstor
bound
inc
imul
adc
jb
sub
inc
pop
fldlg2
xlat
sahf
addr16
je
push
adc
mov
ins
xor
or
xor
mov
ins
data16
ss
mov
dec
or
pop
je
test
inc
add
pop
xor
add
jge
jmp
popf
adc
pop
add
popa
sar
adc
or
or
add
retf
or
test
add
fisttp
add
xor
pop
jmp
rep
pop
xor
fdiv
aas
clc
pop
pop
aaa
ins
test
inc
pop
add
or
pop
add
aaa
ins
mul
lods
sti
pop
add
or
fldenv
sub
pop
add
lods
mov
pop
or
cmp
jge
inc
adc
out
addr16
adc
ds
adc
cmps
imul
cmp
sbb
sar
je
cmp
scas
pop
add
dec
fmul
ret
pop
inc
test
sbb
lea
lea
mov
sbb
arpl
or
aaa
sar
fild
or
or
cmp
pop
or
sbb
pop
fsub
ds
jae
and
or
imul
enter
and
add
cmp
pop
aas
outs
or
add
nop
adc
mov
sub
and
iret
add
pop
in
push
sbb
pop
add
and
fwait
pop
das
or
fs
fwait
mov
scas
sbb
dec
fisttp
loopne
hlt
pop
scas
jmp
aaa
pop
aaa
pusha
sbb
stos
or
push
xor
scas
mov
sbb
dec
sahf
sbb
mov
mov
add
jle
jmp
mov
mov
add
mov
sub
mov
add
sub
out
in
retf
(bad)
mov
test
jle
push
mov
mov
or
fs
adc
or
fs
lods
ins
fcomi
gs
add
gs
or
ds
fild
cmp
data16
push
and
(bad)
call
add
dec
ins
jae
push
lods
adc
push
add
mov
sub
cmp
mov
sbb
mov
ins
sbb
push
hlt
push
jmp
outs
outs
jl
add
(bad)
jo
sub
adc
mov
sub
add
imul
out
outs
fstp
fwait
jb
and
or
pop
jmp
and
ds
cmps
test
je
das
push
popa
sub
inc
mov
add
or
in
push
jmp
add
outs
or
stos
pop
jb
int3
push
inc
bound
add
lds
fdiv
pop
pusha
fld
jge
sbb
or
test
xchg
mov
jge
jbe
lea
nop
mov
pop
cdq
or
add
or
outs
fld
or
or
mov
mov
mov
or
pop
pop
aaa
pusha
ffree
or
bswap
or
das
in
fisttp
pop
ror
aam
push
lods
sti
es
psubusb
fstp
faddp
mov
pmulhuw
out
lods
sbb
pop
out
or
je
or
das
cli
setnp
or
das
adc
fwait
shr
or
mov
(bad)
or
sub
dec
adc
mov
sbb
imul
frstor
or
daa
or
por
fisttp
(bad)
xor
xor
add
or
pop
cmp
ret
das
inc
or
dec
sar
or
jne
mov
push
or
inc
pop
or
pusha
fld
pop
or
(bad)
or
or
ja
aaa
mov
and
psubusw
cs
jle
pop
or
mov
ja
sub
shl
xor
pop
push
hlt
push
add
pop
sub
add
pop
fs
sbb
ficom
call
jo
in
sub
cmp
push
mov
inc
int
and
inc
mov
push
adc
adc
outs
out
inc
add
and
outs
imul
(bad)
pop
push
ja
and
jne
rol
xchg
xor
add
and
sub
and
xor
add
outs
sub
call
add
sub
out
adc
cmp
int
mov
inc
dec
sub
pop
nop
add
rcl
in
xchg
add
pop
cwde
cli
(bad)
inc
retf
jbe
xor
adc
add
fs
push
fs
pop
aaa
or
push
call
xor
pop
push
dec
mov
mov
and
push
je
aas
or
mov
add
lods
xor
call
aas
ss
inc
push
fiadd
ins
movs
xor
cmp
nop
fmul
test
iret
mov
pop
clc
push
sbb
adc
add
das
add
mov
mov
mov
jo
mov
sbb
xor
ins
popa
push
add
pusha
sbb
xchg
mov
xor
(bad)
mov
jo
xor
lock
lods
fnstenv
and
rcl
xchg
mov
mov
adc
xor
cmp
pop
adc
and
xchg
in
mov
push
add
mov
inc
mov
add
push
push
not
inc
add
test
adc
adc
mov
xor
(bad)
pop
rcr
add
stos
dec
shl
(bad)
adc
and
dec
push
pusha
imul
sub
cmps
in
or
es
shl
jo
push
cmp
xor
mov
rcr
cmps
imul
loopne
adc
add
cmps
imul
imul
cmps
imul
call
retf
or
add
pusha
daa
add
add
jnp
xchg
adc
rol
add
movs
and
xor
inc
inc
stos
add
inc
mov
push
stos
add
fstp
lock
add
adc
add
stos
stos
sub
add
push
push
xor
dec
inc
push
push
push
and
xchg
stos
fs
push
push
push
xor
dec
inc
push
xchg
push
and
xchg
push
fs
push
leave
push
xor
push
inc
push
xchg
mov
xchg
push
push
push
push
leave
test
stos
stos
sub
push
push
push
xchg
mov
xchg
push
push
and
stos
stos
fs
sbb
xor
dec
inc
push
push
push
and
xchg
stos
fs
push
push
push
xor
dec
inc
push
xchg
push
and
xchg
push
fs
push
leave
push
xor
push
inc
push
xchg
mov
add
push
push
shl
gs
popa
jo
outs
or
loopne
adc
imul
sbb
adc
inc
adc
adc
clc
adc
mov
push
int
add
inc
adc
rcl
je
add
sub
dec
add
mov
adc
push
popf
mov
inc
cmp
inc
ror
cdq
cmpxchg
jo
pop
adc
add
or
push
sub
sub
sub
jp
jbe
push
popf
dec
jl
fs
adc
push
cmps
adc
jae
mov
add
lods
dec
ds
test
dec
dec
outs
popa
or
adc
(bad)
ret
dec
fcomp
push
lock
fcomp
push
outs
push
inc
inc
mov
xor
adc
ins
jae
aaa
jae
ror
iret
or
fs
push
adc
or
mov
inc
xchg
mov
and
sub
or
scas
stos
mov
je
push
ror
mov
cmps
jecxz
push
hlt
add
call
mov
enter
push
shr
jo
adc
outs
outs
or
popfw
or
xchg
cmps
in
adc
psrlq
add
xlat
bound
sbb
and
push
mov
test
push
and
popa
les
shl
pop
push
jae
data16
fistp
pop
ins
and
mov
lahf
ins
arpl
pop
sbb
int3
retf
or
jb
and
mov
stos
lods
popa
ins
pop
sub
sub
or
fldenv
add
jo
ins
gs
xor
ins
jbe
and
loopne
xchg
add
stos
clc
pop
add
add
test
std
or
add
add
add
or
add
aaa
and
push
add
push
(bad)
mov
or
jnp
add
pushf
inc
cmp
sbb
push
xor
add
scas
ret
or
lock
enter
cmp
mov
add
hlt
xchg
nop
xchg
les
push
pusha
jmp
push
test
or
sti
or
call
sub
bound
or
rol
add
daa
imul
shl
or
cmps
add
cmp
push
push
or
loopne
dec
scas
test
cmp
daa
je
jae
or
add
pop
daa
mov
es
mov
xchg
pop
jbe
scas
lods
mov
add
or
add
add
add
inc
add
adc
mov
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
lea
lea
push
xor
stos
pop
dec
push
push
push
call
popa
lea
push
cmp
jne
sub
jmp
jmp
push
mov
cld
lods
test
je
push
pop
push
loop
call
jmp
pop
ret
add
rol
rol
rol
rol
add
fadd
inc
