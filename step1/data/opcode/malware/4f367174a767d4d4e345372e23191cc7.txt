sbb
neg
add
loope
add
add
add
add
addr16
push
mov
sub
mov
leave
jmp
xchg
punpcklbw
(bad)
mov
mov
test
je
mov
sti
in
pop
add
add
push
call
and
or
adc
call
add
pop
sub
in
mov
std
sbb
lea
mov
mov
fstp
pop
jns
lock
push
pop
or
hlt
push
sti
idiv
scas
or
push
mov
jne
or
xor
fstp
mov
or
dec
and
pop
sbb
mov
xlat
(bad)
iret
mov
add
add
dec
push
and
sti
div
pushf
mov
and
mov
pop
cmp
mov
mov
pop
lods
mov
adc
push
fdiv
add
pop
adc
push
inc
js
fsubr
neg
lea
into
std
loopne
or
adc
nop
lea
pop
add
mov
jnp
mov
retf
xchg
adc
ja
cmp
xor
dec
mov
mov
in
clc
add
test
or
pop
xor
cld
mov
adc
pop
ret
xchg
cmp
xchg
push
pop
cmp
fbstp
jmp
cmp
sbb
pop
fs
imul
fld
jmp
xor
icebp
add
sub
or
mov
jne
sbb
cmp
mov
popa
sar
xchg
sub
enter
(bad)
pop
test
jne
pop
jo
out
into
js
mov
add
mov
cmp
addr16
aaa
mov
mov
test
mov
out
je
pop
cdq
adc
test
xor
leave
ret
mov
pop
test
es
pop
ret
nop
add
jbe
mov
in
out
and
adc
add
sbb
xchg
or
ins
mov
ins
retw
push
sbb
pop
shr
mov
and
or
out
jbe
and
and
push
pop
jmp
add
mov
mov
imul
loopne
ror
test
mov
test
jecxz
cs
xchg
movzx
add
jmp
sbb
neg
jle
pop
pop
jmp
sbb
adc
idiv
mov
loopne
setp
fbstp
xlat
or
imul
pop
pop
shr
lea
jbe
mov
adc
clc
jno
mov
or
jnp
dec
fcom
cdq
fsub
dec
inc
add
mov
jl
shl
pop
inc
sar
sti
push
popw
retf
add
mov
retf
sbb
repnz
retf
inc
dec
mov
jl
jns
jge
fiadd
fistp
rol
ja
ror
add
push
jmp
out
in
loopne
in
jmp
jmp
call
aaa
pop
mov
call
mov
neg
jo
push
movzx
xchg
(bad)
push
push
dec
mov
test
ins
call
adc
fcomp
test
add
loopne
add
jno
sbb
mov
in
push
adc
imul
sub
or
mov
pop
or
ret
mov
cmp
cmp
outs
sbb
pop
idiv
shr
int
mov
pop
ret
stos
scas
popa
loopne
mov
fisttp
test
hlt
(bad)
out
add
addr16
pop
setle
push
xchg
arpl
cld
std
leave
and
mov
cdq
loopne
add
test
leave
ret
xchg
sbb
sbb
cmp
jb
or
stos
push
aas
sbb
mov
xchg
sbb
imul
add
mov
arpl
aas
(bad)
fadd
cmp
rol
into
dec
jbe
adc
and
add
pop
add
lods
mov
push
xchg
dec
lock
scas
mov
adc
xor
adc
and
sti
bound
add
inc
xchg
cld
fidivr
or
fisubr
out
sbb
inc
sub
mov
daa
mov
jl
in
jmp
outs
sub
mov
int
dec
pop
adc
setg
outs
add
pop
sbb
mov
sbb
or
sub
aam
cmps
add
loopne
adc
cs
popa
mov
cwde
(bad)
jg
or
add
sbb
outs
sub
cmp
jbe
retf
adc
and
push
add
in
mov
test
mov
add
inc
hlt
xchg
ror
adc
ja
jg
lea
xchg
addr16
mov
fadd
ret
adc
xlat
or
fcmovu
adc
xor
inc
arpl
ret
push
fisub
pusha
lock
clc
push
jbe
or
xor
fstp
movs
ret
cld
shl
xlat
lock
call
test
mov
ins
cli
inc
push
add
aaa
fsub
dec
inc
or
add
push
inc
cmp
jbe
out
ret
xchg
or
outs
(bad)
inc
or
in
pop
mov
repnz
inc
or
mov
sub
fild
xor
iret
pop
cld
aas
(bad)
(bad)
jbe
arpl
ret
adc
inc
loope
push
push
jmp
xor
push
mov
add
or
popa
stos
push
xor
not
mov
sub
or
and
xchg
iret
jl
arpl
or
loopne
scas
jl
sbb
ja
test
add
or
mov
ja
lods
icebp
je
sbb
add
or
(bad)
push
or
pop
pop
fucomi
nop
adc
jns
rcl
cs
mov
dec
adc
and
mov
mov
jmp
dec
sbb
push
cwde
mov
mov
inc
pop
adc
add
or
pop
dec
or
jne
xor
icebp
and
pop
add
mov
out
mov
bswap
rol
inc
cmp
popa
xchg
rol
daa
sahf
sti
lea
add
jbe
imul
icebp
mov
mov
adc
(bad)
ja
inc
cwde
icebp
lea
lds
es
xchg
inc
cli
stos
push
inc
xlat
xchg
mov
mov
pushf
repnz
das
(bad)
popf
movs
addr16
adc
(bad)
or
mov
and
cmps
test
pop
mov
or
fmul
int3
or
and
loope
out
dec
shr
inc
push
fadd
sub
fbld
jmp
loop
sbb
fsub
fsubr
inc
or
test
inc
dec
ins
enter
mov
popa
xor
and
inc
add
mov
xchg
not
sbb
aaa
or
adc
adc
repz
mov
adc
ror
push
add
loopne
or
ss
jl
jmp
jl
gs
lahf
push
out
adc
jl
sub
sub
jg
je
test
adc
adc
mov
adc
mov
jo
adc
ins
(bad)
dec
add
cmp
push
out
mov
xchg
pop
cld
ds
or
cli
cmp
or
or
xor
into
popf
(bad)
push
out
fcom
mov
sub
int
icebp
test
(bad)
jmp
mov
fistp
fsubp
pop
pushw
cli
ret
daa
mov
hlt
sub
shld
clc
adc
leave
mov
mov
jge
dec
push
mov
(bad)
mov
xor
mov
or
adc
int
cmp
dec
je
push
loopne
cmp
adc
sub
xchg
sbb
dec
pusha
hlt
adc
mov
cmp
call
(bad)
daa
test
push
jmp
leave
ret
jecxz
mov
mov
mov
loope
mov
adc
or
add
(bad)
xchg
pop
jne
or
xchg
mov
outs
add
cdq
sbb
inc
sti
movs
adc
adc
mov
(bad)
adc
xchg
mov
int3
mov
dec
addr16
jmp
xchg
mov
pop
inc
jmp
cmps
sub
adc
pop
or
sar
pop
lods
dec
rcr
adc
jge
lea
mov
daa
movs
(bad)
(bad)
(bad)
cmc
push
pop
add
adc
je
mov
xor
(bad)
lock
mov
shl
daa
cmp
out
and
adc
jns
jmp
push
sahf
jo
mov
push
or
cwde
add
sbb
and
(bad)
adc
mov
outs
int3
daa
jp
fadd
and
scas
jg
shl
and
pop
test
pop
ins
adc
popa
les
and
jbe
dec
loopne
sbb
nop
ds
and
les
mov
xor
sbb
mov
push
gs
cdq
loop
jg
jmp
xor
adc
dec
popf
pop
pop
and
cmp
mov
adc
lea
add
add
mov
jge
jae
add
xor
adc
jecxz
dec
test
mov
adc
sbb
and
or
mov
add
(bad)
pop
jge
mov
and
(bad)
adc
mov
adc
pop
or
mov
test
push
or
push
and
dec
pop
popf
or
adc
sub
stos
xchg
mov
cmc
jne
ror
(bad)
(bad)
pop
icebp
data16
nop
(bad)
pushf
push
idiv
jmp
xor
outs
or
xchg
cmp
jle
jmp
aas
cs
(bad)
loopne
add
les
rcl
or
out
shl
icebp
inc
mov
les
cmp
xor
clc
pop
clc
and
shl
(bad)
sbb
jmp
nop
mov
in
mov
fbld
in
jmp
sbb
shr
cmp
bound
int
or
fist
adc
add
mov
(bad)
or
xchg
xor
jb
in
add
ror
or
out
mov
hlt
in
retf
rol
mov
push
imul
test
adc
mov
sti
daa
push
add
or
dec
fdivr
js
fisubr
in
jecxz
das
repnz
fisttp
ret
lds
jo
test
cmp
add
rcr
xchg
es
xchg
sti
in
arpl
mov
add
clc
clc
add
ret
es
mov
and
add
addr16
aaa
adc
mov
pop
inc
cmp
shl
fidivr
or
push
inc
mov
popa
or
jne
ret
ins
outs
jo
adc
cwde
mov
int3
outs
int
sbb
mov
xchg
cmp
cld
xor
movs
jnp
inc
mov
cmp
push
inc
mov
pop
retf
loop
sbb
jge
mov
jmp
inc
int
jmp
clc
and
(bad)
outs
xor
(bad)
pop
icebp
fnstenv
pop
or
or
ror
lea
inc
nop
push
(bad)
xchg
bts
movntq
push
(bad)
and
adc
rol
js
fcom
push
jp
fcmovb
jge
fadd
dec
ins
add
sub
call
fadd
mov
sbb
shr
repz
and
xchg
xchg
push
inc
jns
jmp
cmp
ret
add
daa
xchg
loope
pop
dec
lock
lods
xchg
lds
nop
fbstp
shr
and
das
sbb
pusha
xlat
adc
popa
je
(bad)
leave
ret
mov
pop
dec
adc
sbb
call
sub
adc
cmp
jbe
add
ins
lds
mov
lds
adc
fwait
jnp
inc
cdq
inc
daa
jl
xchg
loop
dec
les
push
pop
imul
xor
psrlw
lock
test
dec
mov
sub
enter
in
sbb
scas
std
sti
je
mov
leave
je
mov
xchg
test
xchg
call
sti
sbb
out
ds
ins
ss
and
or
mov
inc
push
add
arpl
push
mov
sti
add
mov
loope
jg
rol
push
jne
sub
inc
pop
outs
jmp
out
out
push
ds
pushf
pushf
movs
xor
pop
push
xor
test
cpuid
and
xchg
mov
test
add
test
or
or
test
inc
sbb
add
les
adc
in
dec
push
and
shr
and
jne
jae
mov
ins
sub
jbe
jns
ins
and
cmp
sub
pop
mov
aad
sbb
add
jmp
das
mov
cmc
je
and
mov
jne
xchg
pop
xchg
imul
inc
mov
loope
or
je
sub
mov
adc
sbb
xchg
dec
mov
add
add
test
mov
mov
mov
jne
imul
jmp
in
(bad)
lea
arpl
and
pushf
dec
dec
cmp
add
mov
fidiv
pop
je
add
lods
inc
jne
mov
push
inc
aam
sbb
dec
enter
fwait
in
cmp
aaa
stos
aam
in
add
in
cmp
jmp
jp
mov
sbb
or
pop
push
sub
fistp
mov
jae
repnz
push
ins
scas
sub
push
sub
in
and
sub
jle
push
or
fist
cmp
push
mov
sar
pop
hlt
or
mov
imul
jne
mov
jne
push
or
icebp
xlat
clc
hlt
test
test
test
add
and
add
add
cmp
sub
das
jae
je
push
and
sar
or
add
jp
mov
popf
or
fisttp
je
dec
lea
dec
mov
add
bnd
push
cs
mov
lock
mov
sub
lea
adc
mov
fucomi
pop
xor
xor
(bad)
jbe
enter
cmp
sub
jo
jge
call
jb
cmp
or
cli
xchg
in
loop
out
jmp
nop
sldt
mov
fsubr
mov
inc
lods
cmc
or
je
adc
sub
pop
adc
pop
mov
scas
sbb
adc
mov
(bad)
adc
paddsb
mov
inc
sub
in
mov
ret
xor
jmp
(bad)
in
xchg
inc
ss
es
jmp
dec
in
add
xchg
xor
addr16
and
wrmsr
leave
jmp
ror
mov
jno
sub
push
sub
push
arpl
std
pop
movs
push
inc
movs
mov
pop
mov
sahf
ret
add
je
jnp
sub
add
je
and
test
adc
lock
shl
and
push
das
jmp
cmp
arpl
je
add
jne
adc
fistp
je
pop
repnz
mov
xor
add
jne
mov
inc
dec
(bad)
leave
add
mov
hlt
add
pop
pop
pop
lea
mov
push
outs
add
and
add
adc
mov
xchg
jmp
nop
add
fninit
pop
ret
orps
mov
popa
clc
pusha
ret
xchg
cmp
inc
inc
or
inc
aam
push
xchg
jge
push
pusha
je
jmp
(bad)
ret
or
mov
js
mov
icebp
mov
cmp
inc
xor
pop
clc
mov
push
mov
ret
test
jae
lods
mov
ret
or
cmp
pop
(bad)
jmp
xor
mov
mov
outs
xor
aas
fsubr
or
sub
or
or
mov
aam
push
outs
inc
(bad)
(bad)
xchg
mov
fidiv
jmp
pop
je
mov
and
clc
pop
jne
add
push
adc
pop
and
xchg
mov
ja
ficomp
adc
push
mov
sbb
add
sbb
sbb
mov
cmp
pusha
dec
mov
push
mov
sbb
add
sub
retf
adc
in
dec
fdivr
sar
jmp
nop
scas
nop
pop
push
dec
pop
fs
inc
push
mov
test
fs
ins
add
je
and
iret
dec
ja
add
or
adc
sub
xor
and
xor
add
and
dec
cmp
sbb
pushf
cmp
cld
add
add
add
in
in
add
lock
or
cmp
add
add
inc
add
dec
xor
stc
fbstp
data16
push
popa
xchg
lock
mov
stos
sub
or
add
inc
inc
xchg
push
and
and
jle
(bad)
(bad)
push
aaa
ds
and
ss
push
sub
xor
cmp
mov
add
cmps
imul
add
in
jg
add
repz
adc
and
inc
inc
pop
or
or
or
fsub
mov
push
add
and
jae
jo
outs
addr16
(bad)
(bad)
jmp
and
outs
outs
outs
and
and
outs
xor
and
and
gs
std
psadbw
jmp
mov
outs
mov
mov
mov
mov
jns
out
mov
mov
arpl
pusha
cmp
dec
push
pop
dec
inc
add
(bad)
jge
dec
add
push
mov
loopne
and
add
jae
mov
add
cmp
cli
push
and
sub
adc
and
(bad)
sahf
jo
sub
cmp
push
inc
add
div
sub
sub
in
mov
add
cmp
mov
rol
aam
push
xchg
jne
xor
add
sysexit
pop
or
ss
cmp
xor
cmp
cmp
aas
enter
adc
je
arpl
pusha
addr16
nop
inc
fs
pop
inc
or
mov
jg
ins
jb
popa
je
or
push
and
pop
(bad)
test
mov
es
out
cmp
dec
add
dec
daa
out
jge
xor
jb
jb
push
dec
repz
sti
xlat
dec
mov
jb
ins
outs
sub
push
add
call
push
inc
push
pcmpgtb
pop
pop
nop
inc
push
sbb
pop
inc
push
sbb
pusha
push
sbb
bound
sbb
gs
inc
push
push
push
sbb
ins
inc
push
sbb
jo
sbb
jb
je
fs
inc
jne
ja
nop
inc
push
js
jp
inc
push
sbb
jge
push
sbb
add
fs
add
or
je
add
data16
jl
outs
pop
mov
pop
xlat
call
(bad)
inc
mov
and
dec
or
fistp
idiv
add
add
rol
adc
or
mov
push
push
ficomp
call
outs
outs
call
mov
pop
leave
ret
lds
in
mov
push
arpl
push
lea
(bad)
(bad)
mov
jne
sub
call
push
lea
push
mov
popa
push
call
enter
cmp
clc
je
jmp
hlt
jne
call
push
(bad)
in
lock
ret
jne
test
push
or
test
adc
add
jbe
or
ja
scas
out
call
sub
or
fbstp
or
mov
pop
(bad)
push
call
inc
dec
lods
sahf
jne
in
imul
jne
call
call
mov
jmp
push
mov
repz
std
fidiv
out
fs
inc
retf
pop
addr16
and
jbe
xlat
inc
add
cmps
push
cmp
mov
push
jmp
les
mov
mov
dec
fs
outs
push
in
aaa
jl
jg
pop
pop
leave
jne
sub
push
cmp
js
loope
outs
xor
push
xor
add
ret
fwait
mov
fidivr
imul
fisttp
enter
clc
int3
add
and
stos
add
js
ror
mov
or
xlat
adc
imul
ins
mov
xchg
or
pop
cmp
repz
cld
add
into
mov
out
push
hlt
call
ret
xchg
ss
push
das
pop
xor
adc
(bad)
lock
mov
lea
je
sub
es
test
lods
in
fdivrp
adc
xchg
add
push
push
call
ficomp
rol
or
inc
fld
pop
pop
sub
inc
and
out
ss
sahf
cmp
xchg
or
mov
test
or
pop
pop
xchg
ret
pop
mov
fmul
push
mov
shl
sbb
mov
push
call
jecxz
mov
(bad)
adc
lds
push
ins
dec
adc
add
call
cmc
jge
neg
loopne
call
pusha
ja
pop
dec
and
push
or
sti
mov
jo
rcr
call
adc
in
fld
rcr
cmp
lahf
mov
and
adc
or
daa
adc
inc
push
pop
fsubr
sbb
pop
xor
imul
inc
and
add
sbb
icebp
or
dec
pop
sbb
sub
aas
or
repz
test
xor
or
es
loopne
push
pop
or
mov
imul
ins
(bad)
mov
push
or
(bad)
xlat
push
inc
push
rcr
xchg
inc
je
test
ret
mov
xchg
jl
push
lock
retf
sub
in
(bad)
push
jne
push
fmul
(bad)
jmp
mov
das
add
pop
cmp
jne
addr16
(bad)
jg
call
call
shr
inc
shr
mov
push
shl
icebp
cmp
jae
mov
imul
(bad)
pop
maskmovq
imul
xor
pop
add
std
pop
clc
fcmovnbe
add
mov
sub
mov
(bad)
jae
xchg
cli
fs
mov
call
pop
push
mov
test
push
ss
jg
mov
les
je
hlt
rol
loope
sub
call
lock
or
inc
xchg
dec
in
movs
in
(bad)
jbe
fild
fnstsw
mov
js
add
mov
(bad)
sbb
mov
xchg
psubsb
and
mov
fidiv
gs
popa
adc
mov
ins
pop
pop
mov
or
outs
jo
je
ds
mov
enter
sbb
into
in
sub
call
aaa
push
and
xlat
pop
icebp
mov
xchg
mov
xor
div
adc
jle
test
add
jno
sti
pop
fdiv
or
js
jmp
add
pop
push
outs
or
retf
movs
in
cmps
test
cdq
adc
test
push
fisttp
iret
test
dec
lahf
mov
(bad)
stc
jb
push
fld
icebp
mov
gs
inc
inc
adc
mov
int3
je
clc
in
jle
sbb
inc
lock
iret
pop
mov
inc
jo
jmp
add
fnsave
mov
sbb
dec
ja
(bad)
lahf
push
mov
push
vpaddq
aaa
les
das
shr
jmp
call
outs
cld
push
fisttp
mov
lea
mov
cs
dec
jl
push
fistp
sub
add
push
mov
mov
push
cmp
push
jmp
mov
shl
pop
pop
outs
fstp
in
xchg
(bad)
xor
jmp
add
addr16
call
cmps
sti
sbb
ja
sub
adc
jae
call
sub
iret
mov
call
neg
int
ret
adc
jecxz
mov
pop
jmp
add
jmp
adc
pusha
push
push
mov
(bad)
sbb
sub
je
cs
daa
jne
dec
shl
stos
or
xlat
das
add
jb
push
out
or
(bad)
cld
jmp
mov
adc
popf
mov
sar
adc
sub
pop
js
add
pop
mov
arpl
cmp
je
movs
jge
cmp
ud2
push
loop
add
aaa
mov
mov
pusha
call
jmp
out
out
retf
in
repz
imul
jmp
push
mov
fsubr
mov
add
mov
push
daa
iret
push
dec
arpl
leave
call
ja
cmp
stc
mov
cld
mov
jmp
loope
pop
loopne
test
js
or
ins
xchg
mov
jl
ss
test
sbb
push
aaa
fucomp
sti
rcr
(bad)
jmp
jne
out
in
xchg
adc
pop
cmp
mov
push
xchg
pop
shl
loope
out
mov
adc
add
jle
lods
pop
adc
and
jno
xor
mov
ja
or
fild
arpl
test
pop
mov
jbe
pop
cli
xchg
sbb
(bad)
jmp
data16
mov
test
adc
fstp
shl
mov
sbb
adc
or
push
inc
loop
push
or
fcomp
sbb
and
jmp
(bad)
fimul
push
xlat
sub
aaa
pop
push
(bad)
call
out
mov
shl
ret
xor
xor
push
mov
mov
adc
jb
sub
mov
mul
jae
jp
push
push
or
cmp
push
js
inc
mov
scas
push
lock
aad
or
jg
out
mov
cmp
jo
das
je
(bad)
cmp
mov
pop
cmp
mov
mov
sub
or
inc
pop
retf
mov
or
mov
fidivr
aas
ja
pusha
push
imul
adc
(bad)
ss
pop
rcl
das
xor
clc
jno
jecxz
ror
sub
aad
aam
cwde
pop
shl
adc
inc
retf
adc
shl
xor
dec
out
mov
xor
jge
pop
cmp
jmp
outs
mov
inc
outs
pop
ret
mov
add
fisttp
or
push
(bad)
(bad)
push
fs
push
xor
shr
push
loop
not
test
ret
mov
pop
jmp
fst
imul
or
sar
jl
retf
add
stos
xchg
pop
dec
push
in
push
imul
call
adc
mov
inc
xchg
je
and
mov
and
add
mov
and
pop
push
(bad)
mov
aaa
js
call
call
scas
pusha
or
jnp
ret
test
mov
inc
clc
iret
adc
loop
mov
push
outs
jmp
mov
or
adc
enter
xor
add
out
out
pop
mov
and
popa
mov
jb
or
cmp
mov
aam
jne
add
push
push
and
sbb
add
add
mul
loopne
(bad)
in
das
cmc
cmps
enter
cmp
stos
jmp
outs
mov
xchg
cmc
jmp
jmp
pusha
push
test
repnz
jl
in
add
or
xor
in
adc
jns
mov
mov
adc
or
pop
push
pop
push
data16
stc
pop
add
sbb
jle
in
mov
in
outs
adc
adc
adc
(bad)
imul
fwait
adc
or
add
aam
aaa
ficomp
adc
adc
sub
or
pop
inc
pop
ret
jecxz
rcr
hlt
push
lock
mov
and
and
lds
inc
or
idiv
clc
xor
pop
out
xchg
xchg
bnd
mov
js
sahf
add
ja
cmp
xchg
cli
inc
mov
and
loope
mov
rcl
add
push
daa
loopne
idiv
enter
rcr
push
fdiv
inc
jmp
pop
clc
daa
clc
inc
ja
sbb
iret
int
mov
push
jbe
or
push
(bad)
ins
sub
lahf
sbb
(bad)
ss
js
out
sub
pop
or
mov
mov
push
shr
ja
shl
inc
pop
mov
shr
fdiv
fs
add
shl
cli
test
or
adc
push
add
jno
icebp
stc
ds
adc
sbb
mov
mov
dec
jge
clc
lods
adc
repz
sub
mov
lds
arpl
rol
pop
test
sbb
xor
shl
(bad)
fnstsw
push
mov
aam
push
inc
outs
loope
push
or
dec
or
loopne
or
cmp
gs
adc
push
mov
add
adc
jecxz
dec
jb
aas
adc
pop
adc
fidiv
shr
and
push
push
push
push
popf
mov
add
mov
loope
out
ds
push
adc
push
jmp
or
adc
sub
adc
cwde
sub
pop
add
fistp
std
jbe
dec
movsd
push
cs
sbb
inc
jp
push
jg
pop
lock
enter
ins
pop
dec
pop
das
enter
popf
pop
das
sub
push
(bad)
fnstsw
push
call
adc
dec
addr16
out
mov
mov
ins
sub
data16
test
mov
xor
iret
xchg
or
mov
inc
xchg
pop
pop
add
push
inc
mov
std
pop
je
mov
pop
push
push
inc
fisttp
movs
adc
inc
xor
mov
push
push
lds
mov
jo
punpcklbw
bnd
add
jns
xchg
mov
pop
mov
or
adc
outs
xchg
repz
and
mov
add
dec
adc
imul
push
pusha
test
xchg
int
(bad)
cld
imul
es
mov
repnz
fstp
mov
rol
frstor
jl
jns
pop
jbe
jbe
aaa
cld
xor
das
outs
pop
dec
inc
les
adc
adc
daa
cmp
pop
std
ret
cld
add
iret
mov
mov
loop
jp
ror
push
pop
cld
cmc
lods
mov
pop
ror
out
ja
push
int3
pusha
inc
push
(bad)
imul
ror
outs
push
pop
repz
add
loope
jo
lods
fstp
push
cli
cmp
pop
ror
fdiv
xchg
pop
fidivr
fist
leave
std
(bad)
cld
call
cs
jne
daa
jo
pop
(bad)
imul
xchg
dec
icebp
leave
iret
test
aaa
jge
jmp
xor
std
and
(bad)
in
loope
jmp
shl
loopne
call
sar
jne
loopne
xchg
pop
std
(bad)
in
pop
push
(bad)
adc
jl
ss
mov
stc
movs
inc
call
imul
cli
push
inc
cmp
push
je
xor
imul
jnp
adc
pop
push
out
push
mov
lods
fdivr
inc
mov
es
pop
dec
adc
inc
fmul
fistp
fild
push
neg
inc
adc
push
pop
add
mov
push
loopne
rcl
loop
in
pop
pop
mov
out
cld
cmps
fcomp
mov
cli
pop
pop
dec
aas
hlt
dec
daa
cmp
test
mov
call
mov
js
dec
test
cwde
dec
je
dec
movs
dec
mov
add
iret
je
push
xchg
push
sub
test
out
adc
jmp
push
fsubr
(bad)
movs
mov
mov
xchg
cs
mov
dec
add
mov
inc
shl
out
retf
cld
test
inc
(bad)
clc
push
(bad)
mov
hlt
inc
add
shl
data16
cmp
cmps
aam
ja
mov
mov
inc
xchg
or
test
jo
jmp
mov
(bad)
add
nop
(bad)
mov
(bad)
es
xlat
fild
(bad)
aam
outs
pop
sbb
mov
fmul
sbb
mov
mov
imul
sbb
mov
push
sub
pop
mov
push
fcom
push
pop
daa
mov
and
and
loopne
sbb
fadd
mov
adc
xor
fs
xor
js
add
call
adc
out
cmp
mov
inc
cmps
push
ficomp
adc
aaa
push
(bad)
fnsave
pop
add
div
mov
cmp
mov
mov
or
adc
lods
jnp
mov
int
or
dec
(bad)
neg
mov
adc
mov
cmp
aaa
xor
cli
xchg
ffreep
aaa
out
add
pop
pop
in
mov
imul
pop
je
aas
pop
sub
je
mov
cld
imul
jo
sbb
push
shl
xor
xor
(bad)
xchg
clc
cmp
je
lea
cmp
mov
mov
inc
cmp
(bad)
jns
jbe
push
jno
mov
mov
push
mov
cld
jne
dec
or
aad
test
aam
test
pop
or
sub
xchg
stc
repz
mov
test
push
pop
hlt
pop
mov
call
push
out
jbe
xor
shl
jg
cmp
adc
jmp
fist
or
sbb
aad
(bad)
dec
sti
xchg
aam
das
in
mov
(bad)
ins
addr16
push
jo
retf
mov
push
mov
xchg
adc
push
imul
fisttp
call
cmp
and
ins
mov
pop
pop
pop
push
or
jnp
and
and
fmul
sub
scas
pop
in
call
dec
cmp
popf
(bad)
mov
push
popf
inc
int3
ja
adc
iret
ret
mov
dec
or
inc
inc
das
pop
mov
pop
mov
pop
mov
test
(bad)
bound
sub
call
or
js
mov
mov
adc
push
cmp
xchg
mov
mov
and
test
add
pop
inc
jne
and
fwait
push
inc
add
daa
and
inc
das
shl
lsl
cmps
mov
xchg
loope
loope
popa
repz
repz
fdiv
jo
pop
leave
cmp
mov
mov
mov
push
mov
mov
lods
and
aam
unpckhps
sbb
sub
inc
icebp
iret
inc
cmp
lods
aam
(bad)
and
inc
jb
lahf
leave
mov
or
add
pop
or
into
dec
fld
rol
movs
pushf
aaa
pop
ins
iret
and
mov
sbb
aaa
(bad)
push
push
jmp
fwait
jb
ror
push
test
test
cmp
(bad)
pop
or
pop
jmp
dec
push
push
add
out
ret
push
ins
clc
adc
call
aad
(bad)
adc
cld
pop
pop
lock
push
cld
not
inc
clc
sub
jmp
or
clc
aas
pop
sbb
jae
cmp
mov
por
nop
push
je
add
xlat
mov
test
xchg
cld
jmp
movs
pop
xlat
xor
outs
inc
mov
add
jge
jo
loopne
(bad)
mov
cld
jo
pop
jnp
or
clc
outs
aaa
xor
jle
jl
imul
mov
jmp
xchg
sub
ja
pop
leave
mov
in
push
cli
inc
fcom
pop
add
jo
js
rol
cmp
cld
scas
shl
ja
cdq
pop
ja
in
out
mov
repz
add
inc
pop
sub
fscale
div
or
mov
inc
cmp
mov
mov
or
mov
call
mov
and
out
jg
inc
push
jmp
sub
hlt
mov
iret
jle
mov
or
inc
add
cmp
outs
ins
pop
clc
mov
je
mov
psubb
outs
test
clc
aad
mov
mov
loopne
or
add
rol
test
xlat
ins
push
add
dec
xchg
push
or
push
mov
add
jg
pusha
jne
pop
or
arpl
stos
mov
sub
mov
es
rol
mov
les
push
mov
xchg
mov
xchg
cld
adc
test
pop
retf
mov
pop
popa
xlat
les
mov
cmps
jbe
mov
pop
out
scas
jb
(bad)
cli
push
popa
adc
cmp
mov
xor
lea
and
jle
cmp
jne
imul
sbb
cmp
or
and
pop
mov
adc
call
pop
push
or
jmp
mov
fild
(bad)
in
mov
cmc
push
push
movs
mov
push
xchg
dec
ins
push
push
out
mov
(bad)
aad
sub
sbb
ja
mov
inc
pop
dec
inc
push
or
retf
mov
sbb
mov
add
ror
lods
push
push
out
dec
push
pusha
dec
pop
cmps
(bad)
jmp
mov
push
cmp
mov
lea
mov
lods
add
push
imul
(bad)
in
ja
mov
cmp
sbb
fucomi
cmp
add
cmp
mov
in
popa
push
lahf
xor
and
mov
push
cdq
pop
idiv
sub
(bad)
sub
ret
add
xchg
push
and
cmp
in
imul
xlat
das
add
call
push
int3
das
(bad)
lock
xor
sbb
fild
leave
mov
or
test
inc
imul
cwde
shufps
mov
rol
add
lahf
int
test
cld
push
call
sar
cs
(bad)
jle
add
imul
jne
jmp
pop
push
ret
cmp
or
inc
lahf
jge
ffree
pop
aaa
and
jmp
lock
jb
enter
push
xor
hlt
and
das
int3
test
adc
lock
int
int3
xor
ss
pop
aam
inc
enter
aaa
(bad)
aam
imul
(bad)
loopne
hlt
mov
xchg
or
neg
and
clc
je
ins
pop
arpl
pop
mov
jbe
call
out
imul
mov
idiv
out
fsubr
mov
in
pop
popa
jbe
js
aaa
mov
call
and
cmc
fcomp
arpl
cdq
or
dec
xor
(bad)
out
imul
mul
xchg
outs
add
xor
push
sbb
daa
cmp
out
cmp
or
mov
fdiv
pop
adc
(bad)
push
loopne
pandn
push
or
out
das
push
jbe
dec
mov
scas
xchg
test
dec
or
mov
xchg
iret
lahf
aas
pop
call
add
call
iret
or
lea
push
add
sub
push
mov
or
lock
out
(bad)
sti
pop
in
fimul
aaa
ffreep
cmp
or
cmps
int
test
jg
div
inc
jecxz
or
aad
daa
mov
add
jns
adc
pop
or
xor
dec
or
lods
fwait
inc
push
pop
jo
out
rol
sbb
mov
adc
les
mov
jnp
fdivr
dec
in
lock
fist
dec
in
inc
add
xchg
pop
cld
pop
idiv
xlat
int
ins
ret
lods
push
lds
lea
pop
out
sbb
add
inc
les
sets
imul
lea
test
outs
mov
iret
xchg
add
sar
lds
and
mov
pop
mov
cwde
fldenv
push
cli
add
mul
outs
jmp
inc
in
push
fnstenv
cmp
jb
jno
mov
outs
out
cmp
pop
add
test
out
aas
push
sar
pop
pop
jns
(bad)
adc
pop
cmp
mov
sub
xchg
into
(bad)
in
jmp
retf
out
std
outs
movs
fidiv
cld
je
cmp
enter
movs
(bad)
pop
push
leave
dec
or
jmp
jmp
cmp
sbb
test
inc
xchg
inc
mov
xchg
mov
mov
outs
mov
sbb
popf
adc
adc
cdq
push
pusha
pop
idiv
sub
pop
ins
jo
xor
(bad)
in
aas
pop
or
iret
dec
fbstp
mov
mov
loop
push
and
mov
stos
sbb
in
mov
add
dec
mov
pop
pusha
pop
add
bound
cld
out
or
cld
cld
mov
jge
xor
lahf
sar
cmp
popa
push
mov
sar
jo
(bad)
aas
cli
ins
jo
cmp
jmp
daa
sub
test
iret
push
sub
mov
js
inc
pushf
sub
aas
push
xor
or
outs
aas
push
add
js
cli
and
jp
cmps
cmp
aam
inc
outs
dec
adc
jne
pop
pop
out
adc
dec
ins
or
jno
fsubr
xor
xor
enter
mov
push
xchg
or
(bad)
cmp
inc
mov
jmp
aas
jne
jmp
pop
mov
adc
aas
neg
mov
push
mov
mov
adc
mov
imul
sub
sbb
dec
mov
pop
scas
push
sbb
ds
mov
aam
mov
out
aas
cmp
inc
(bad)
aaa
or
lock
pop
or
jmp
push
shl
xchg
hlt
addr16
lahf
sti
or
std
ins
sbb
(bad)
cld
sti
ret
aas
out
neg
cld
xchg
push
mov
pop
mov
sub
(bad)
jmp
cmp
out
add
js
pop
mov
cld
ror
sti
sti
jbe
jg
inc
cld
jmp
jp
out
or
pop
xor
ss
pop
sbb
ret
clc
out
cmp
or
aas
(bad)
bnd
adc
mov
pop
add
ins
mov
xchg
and
push
rcr
(bad)
icebp
pop
mov
xchg
dec
cld
or
ins
push
movzx
ficom
mov
mov
inc
fsubr
ins
dec
xor
sbb
or
ss
mov
fidiv
retf
fbstp
pop
push
push
xor
inc
arpl
loope
sar
xchg
mov
aas
jno
dec
imul
dec
call
push
xor
push
xchg
retf
sbb
in
jmp
push
mov
mov
int
push
cmp
inc
lock
dec
mov
out
enter
ins
clc
rcl
fwait
pop
enter
jmp
jmp
(bad)
js
aaa
add
adc
rcr
(bad)
adc
mov
push
mov
sbb
push
push
daa
sbb
lock
cmp
sbb
sti
shr
xor
mov
inc
push
jecxz
xor
mul
push
push
cmp
jmp
inc
in
pop
fdivr
ret
sbb
pop
fisttp
in
hlt
call
fistp
cs
pop
dec
inc
lea
add
dec
dec
pop
pop
movs
das
cmp
adc
mov
retf
mov
jnp
in
shr
(bad)
outs
jns
jb
inc
clc
movsx
cmp
or
jmp
mov
shl
pop
pop
mov
clc
xchg
push
pop
loope
inc
les
dec
pop
imul
outs
test
jmp
mov
fidivr
leave
add
fwait
mov
call
inc
(bad)
aas
lds
mov
lock
pop
xor
mov
cmp
jno
pop
jmp
fdivr
(bad)
mov
mov
sbb
cmp
in
pusha
mov
push
cmp
cmp
adc
push
lods
loopne
sahf
mov
pop
cmp
mov
cld
pushf
ins
push
push
into
dec
xor
sbb
jmp
jno
mov
jmp
ss
test
cmp
xlat
test
popa
jae
clc
pop
fdivr
lahf
fmul
jmp
popf
dec
idiv
mov
int3
push
sbb
sub
cli
mov
mov
popf
outs
push
test
pusha
add
sbb
xchg
mov
adc
ja
pop
pusha
cmp
out
xchg
inc
adc
test
or
in
mov
xchg
inc
cs
xchg
sub
mov
lods
pop
jo
xor
daa
(bad)
retf
das
ror
rol
jmp
sbb
repz
jge
jl
pop
cmp
push
push
jae
ret
cmps
not
cmp
hlt
sub
daa
push
mov
arpl
iret
lahf
push
fadd
add
outs
int
pop
push
fcom
mov
call
imul
aaa
repz
cmp
aam
aam
retf
repz
sub
(bad)
jge
mov
mov
test
ins
or
cli
push
loope
ret
sar
pop
mov
dec
mov
mov
enter
js
std
icebp
in
cmp
shr
repnz
js
aaa
fstp
test
cmp
dec
lea
fcomip
stos
inc
xchg
mov
fdiv
int3
pop
lods
xor
(bad)
jb
push
jb
call
jge
pop
cli
(bad)
sub
pop
jge
in
fcom
shl
push
sbb
sbb
jno
push
inc
dec
outs
and
outs
pop
cs
and
mov
ficomp
add
cdq
add
loopne
adc
cld
inc
ins
das
jge
movs
fs
cmp
cmp
jle
cld
cs
dec
mov
out
(bad)
jmp
mov
stc
mov
call
outs
cli
push
push
stos
scas
pop
jg
daa
mov
shr
nop
in
(bad)
add
pop
or
jmp
push
mov
test
sbb
enter
jle
test
pop
outs
ja
daa
aam
sub
mov
das
hlt
dec
ror
jo
xor
xlat
xchg
aaa
jno
push
popa
repz
(bad)
shl
int3
mov
sbb
xor
aas
retf
cli
jle
hlt
and
push
sub
fwait
loopne
idiv
cmp
jne
dec
or
mov
jg
enter
mov
mov
inc
inc
dec
cmp
or
pop
mov
add
(bad)
jne
sbb
jbe
cld
(bad)
cmp
shr
adc
mov
lods
mov
mov
mov
sub
xchg
mov
add
pop
mov
xor
push
pop
pop
push
pop
loop
sbb
and
(bad)
call
ins
ret
daa
mov
daa
push
adc
mov
add
dec
or
jmp
inc
and
ss
dec
inc
add
mov
cmp
pop
inc
mov
sub
jns
sbb
and
pop
cmp
fldcw
xor
call
lahf
ror
jo
in
aam
and
cmp
fild
mov
pop
mov
dec
das
mov
pop
js
cmp
or
cli
(bad)
xor
and
and
mov
adc
push
lock
aam
cld
lea
lods
jmp
inc
(bad)
in
dec
nop
lea
mov
or
cli
push
add
outs
sbb
rol
loope
das
(bad)
cmp
jnp
jne
mov
mov
or
push
inc
push
int
(bad)
dec
mov
add
cmp
out
or
js
js
or
jb
in
das
lock
xor
mov
xchg
xchg
in
(bad)
(bad)
fbld
add
and
(bad)
cmp
mov
jbe
fdivr
es
or
push
xor
rol
jmp
test
gs
xchg
(bad)
iret
std
pop
add
fdivr
add
test
sbb
loop
pop
sub
out
xchg
inc
clc
xlat
mov
inc
push
mov
jmp
fsub
js
sahf
jne
in
cmps
loop
xor
push
pop
pop
loopne
cld
gs
inc
sbb
xchg
and
mov
mov
sbb
jns
test
mov
xor
push
popf
cmps
sub
and
dec
or
mov
sub
call
es
lock
mov
sti
pop
fcomp
call
mov
(bad)
mov
mov
fimul
dec
clc
mov
lahf
mov
mov
xor
imul
push
dec
xchg
sub
lods
jmp
push
movs
xlat
sbb
fidivr
dec
fisubr
jno
pop
mov
pusha
add
mov
mov
jno
add
outs
pop
jo
stos
cs
and
mov
mov
inc
iret
iret
xor
stos
cli
ja
or
xor
mov
jmp
jg
ret
mov
or
inc
xchg
dec
or
(bad)
push
jg
test
mov
(bad)
jmp
mov
or
dec
or
(bad)
and
or
add
cmp
xlat
idiv
add
(bad)
mov
not
xchg
and
and
or
mov
(bad)
fisub
push
mov
call
call
xor
and
or
add
mov
jl
lsl
mov
imul
fsub
pop
mov
push
pop
les
or
push
out
into
fistp
mov
aaa
retf
xlat
mov
cli
dec
and
std
(bad)
dec
or
rcr
cli
lea
rol
add
mov
and
outs
das
mov
inc
or
add
mov
fmul
aad
stc
pop
and
push
mov
ror
xor
xor
mov
neg
xchg
push
mov
and
(bad)
stc
fmul
pop
adc
xchg
inc
std
ja
push
shl
fisubr
push
es
sub
idiv
pop
sbb
pop
pop
or
push
ins
rol
cli
outs
hlt
mov
mov
neg
or
add
lea
mov
test
(bad)
stc
push
fisttp
rcr
push
loopne
pop
js
or
ror
sbb
das
mov
push
and
push
rol
jp
mov
mov
or
rcr
cld
inc
std
push
outs
mov
push
call
and
nop
imul
mov
inc
jmp
xlat
into
jmp
or
test
pop
setae
pop
jmp
fistp
ret
lahf
sbb
ret
fmul
lock
das
mov
dec
(bad)
enter
repz
clc
(bad)
fcmovne
sub
sbb
or
mov
fwait
imul
shl
mov
pop
repnz
addr16
xor
add
cmp
or
test
and
outs
cmovo
or
and
mov
sbb
aad
pop
push
pop
pop
es
ins
loope
xchg
mov
pop
fcomp
ret
add
xor
aad
stos
(bad)
mov
lods
sub
dec
and
ja
out
jle
mov
retf
sbb
(bad)
cmp
pop
(bad)
imul
fstp
ror
fadd
pop
add
push
adc
and
in
mov
push
rcr
fistp
or
ja
arpl
and
or
pop
stc
mov
add
xchg
inc
fld
out
fcomp
or
mov
mov
shl
add
xchg
jns
sbb
int
and
adc
push
nop
enter
jmp
mov
mov
(bad)
pop
aaa
ret
aam
div
ret
(bad)
out
dec
cli
or
les
hlt
jb
ins
outs
jecxz
add
fadd
add
mov
sbb
shr
not
pop
inc
in
jbe
cs
(bad)
lods
sub
(bad)
cmp
(bad)
ficomp
or
add
add
out
test
and
push
fnstsw
mov
rcr
enter
clc
mov
arpl
test
jns
mul
pop
aam
outs
jmp
outs
addr16
and
adc
push
jge
cld
mov
or
xor
mov
mov
add
adc
adc
mov
mov
jno
popa
or
dec
add
loop
dec
pop
adc
ins
pop
adc
cmc
aaa
(bad)
out
jnp
shr
pop
lock
adc
jecxz
push
pop
ins
jmp
idiv
add
inc
jmp
iret
add
inc
or
rol
jecxz
retf
pop
int3
(bad)
xor
xor
add
push
add
mov
or
lock
push
movs
inc
pop
shl
fild
sub
xchg
push
psllw
fadd
cmp
jle
sub
cld
xor
fwait
jecxz
stc
pop
lea
cld
daa
mov
push
fild
jnp
mov
icebp
in
xor
aam
adc
xor
rcr
sbb
mov
rol
xchg
loope
out
outs
push
or
rcl
(bad)
xor
call
(bad)
shr
cwde
fistp
push
pop
hlt
push
cmp
jl
sbb
mov
fbstp
fcmovb
fild
(bad)
sbb
fidiv
and
xadd
or
or
mov
test
dec
xchg
jmp
inc
push
or
ficom
rcr
test
pop
and
ja
popa
popa
jae
pop
mov
ret
int
push
sub
dec
fcom
xchg
addr16
pushf
movs
ret
pop
arpl
mov
icebp
mov
test
xchg
int3
or
(bad)
std
fiadd
sahf
aad
mov
xchg
mov
jmp
or
cmps
loopne
rcr
test
cmps
or
inc
add
or
pop
ja
stos
lds
pusha
out
sub
adc
mov
inc
sub
add
mov
push
or
(bad)
(bad)
(bad)
lea
mov
xor
js
add
das
icebp
inc
neg
cs
lock
inc
enter
xor
push
pop
test
lea
loopne
ins
neg
and
or
das
mov
cmp
xlat
sub
gs
inc
xor
adc
xchg
rol
fcmovu
jp
inc
mov
inc
or
into
push
jo
loopne
xchg
ret
mov
push
inc
push
stc
inc
sbb
mov
lea
int3
mov
sbb
fisttp
bound
cmps
mov
mov
add
mul
call
jge
lea
call
stc
sbb
lods
(bad)
push
cmp
jae
inc
lock
mov
mov
sar
adc
sub
lods
std
jb
sub
or
inc
xor
outs
add
jmp
pusha
mov
xor
mov
aas
jmp
mov
push
lea
sbb
sub
fstp
ret
inc
cmp
in
jecxz
movs
cs
jmp
gs
jp
or
shr
imul
push
sub
out
mov
mov
add
lea
fild
pop
push
ins
and
cmp
adc
mov
jmp
js
sub
push
sbb
shl
mov
ficomp
ins
fimul
das
fisttp
or
cmp
pop
push
push
inc
loope
sbb
scas
inc
and
rcr
imul
(bad)
dec
pop
pop
mov
ss
pop
dec
jae
mov
mov
mov
jb
dec
stc
inc
ins
inc
je
pop
adc
xchg
scas
arpl
fcmovnbe
sub
clc
xor
popf
call
mov
jl
cmp
jne
push
sub
out
test
das
xchg
fcom
test
lock
mov
jne
outs
rcl
cmp
lea
xchg
mov
dec
call
mov
and
call
push
lahf
mov
popa
lock
in
sbb
xchg
call
push
adc
(bad)
jg
out
enter
mov
loopne
pop
in
ror
push
mov
cmp
xor
sbb
(bad)
cs
dec
loop
dec
lea
pop
call
call
in
call
fcomp
pop
rcl
dec
call
jne
in
pop
xchg
cmp
add
jb
sub
aas
mov
sub
stc
jne
and
out
enter
push
out
xchg
fidiv
sub
lods
cmp
cdq
adc
and
or
mov
sub
out
not
out
(bad)
jge
dec
mov
iret
push
pop
call
lods
fld
jmp
das
icebp
loope
lahf
cld
sbb
(bad)
pop
mov
ret
bound
rcl
repnz
cmp
fdiv
cmc
sub
test
cmp
pop
popa
cmp
push
outs
mov
ja
push
fld
test
aam
mov
movs
fadd
(bad)
fcomi
hlt
dec
jp
in
ret
cmps
sar
mov
jnp
ss
sbb
(bad)
dec
aas
jg
cld
call
mov
stc
call
mov
push
jp
out
add
bound
xchg
inc
sub
push
push
push
pop
clc
mov
push
lea
das
call
pandn
jae
rcl
jb
rcr
jnp
lods
push
sbb
push
lea
sbb
pop
push
or
clc
push
mov
pop
jo
call
hlt
jb
mov
or
retf
clc
inc
div
(bad)
call
clc
sub
pop
adc
sti
sub
loopne
lods
push
iret
call
fld
cmp
xchg
rol
mov
lock
test
ret
out
jb
jl
dec
ds
(bad)
out
outs
(bad)
sub
fidivr
aaa
popf
push
jmp
call
mov
dec
das
in
out
ds
pop
inc
into
lock
icebp
sbb
nop
not
aas
mov
inc
jecxz
loop
pandn
or
sar
nop
clc
push
xchg
mov
fsubr
retf
pop
(bad)
jle
mov
cld
aam
fdivrp
retf
loopne
test
add
aas
sbb
out
es
jbe
inc
pop
rol
mov
jge
sar
aas
add
ret
test
or
ret
jnp
dec
dec
call
cli
(bad)
call
mov
call
outs
dec
xchg
das
les
aas
mov
int
mov
fadd
pop
int
sbb
outs
cmp
out
or
dec
mov
lods
push
cmp
cdq
add
jmp
sub
lock
data16
aas
sbb
pop
push
mov
(bad)
dec
mov
call
inc
dec
push
div
out
js
cld
dec
sub
aam
mov
sbb
sbb
add
js
sbb
scas
xor
dec
sbb
adc
pop
xlat
mov
in
or
mov
jbe
lahf
clc
adc
out
std
fcomp
mov
sti
call
arpl
shl
sti
add
call
jle
sub
push
pop
cmp
daa
pop
ins
dec
push
in
mov
or
adc
scas
mov
outs
dec
push
(bad)
clc
dec
or
jecxz
shr
dec
pop
clc
jle
call
fld
dec
push
iret
pushf
and
mov
mov
sub
dec
ss
(bad)
pop
test
pop
out
push
lock
pop
dec
dec
out
or
dec
xchg
iret
cmp
out
adc
mov
fisttp
daa
retf
and
cld
addr16
repnz
add
and
sahf
out
mov
lock
cmp
xor
jno
fnsave
dec
inc
nop
add
enter
mov
cmp
das
es
ja
dec
ror
pusha
hlt
ds
inc
cmp
pop
rol
xor
jmp
repnz
jle
mov
call
sbb
call
xchg
xor
or
add
or
dec
pop
sub
nop
jae
leave
xor
cmp
xchg
lock
lock
jp
xor
(bad)
gs
mov
sub
cmps
sbb
(bad)
jge
mov
xchg
ds
outs
out
data16
add
enter
and
adc
add
xchg
stos
jle
mov
pop
mov
cmp
outs
sbb
or
imul
add
cmc
out
fistp
xchg
pop
repnz
out
jno
out
mov
add
lahf
or
inc
adc
sbb
sub
test
add
adc
adc
jae
pop
push
mov
and
fsub
inc
or
jmp
dec
xor
retf
jmp
sbb
fsub
ds
imul
in
sbb
and
aas
dec
sub
pop
sbb
stc
mov
sub
test
scas
inc
mov
aas
test
test
(bad)
repnz
add
sub
iret
(bad)
out
jmp
test
or
push
add
jae
fist
test
xor
ja
fwait
and
inc
and
and
ret
mov
xchg
inc
push
(bad)
or
adc
(bad)
cmp
pop
pusha
movs
test
into
addr16
icebp
mov
push
xor
push
sub
inc
shr
ins
jge
push
push
ror
mov
jle
das
push
or
or
add
scas
sbb
mov
inc
imul
pop
xor
aaa
inc
sbb
outs
scas
jbe
mov
into
jmp
mov
sub
hlt
pop
fsub
or
dec
popf
jge
or
sbb
mov
push
push
dec
in
sbb
mov
ret
xchg
pop
sub
fsubr
scas
push
out
add
cdq
out
push
cld
xor
inc
pop
jg
pop
mov
cli
sub
xlat
daa
cli
in
or
sbb
cli
mov
(bad)
push
daa
ss
mov
add
pop
mov
test
jae
push
sbb
jp
xchg
push
add
xchg
pop
retf
or
pcmpgtb
push
arpl
out
pop
daa
mov
mov
out
dec
sbb
add
das
mov
inc
fistp
in
pop
call
add
imul
fistp
out
pop
mov
mov
pop
push
jnp
mov
(bad)
mov
mov
jp
mov
adc
test
add
sbb
pop
mov
jge
and
push
pop
es
push
sub
movs
pop
cs
pop
jno
jl
adc
mov
add
lods
lock
test
adc
xor
add
jl
shl
or
loop
daa
popa
stos
push
fstp
pop
sar
rcl
jmp
add
ficom
icebp
push
test
(bad)
pop
out
mov
push
stos
lock
rcr
adc
jge
mov
pop
inc
cmc
dec
cdq
inc
xchg
(bad)
mov
imul
call
add
scas
leave
int3
push
pop
pop
pop
ds
adc
dec
mov
xor
outs
movhps
sbb
inc
arpl
inc
sbb
mov
sbb
push
shl
sbb
xchg
or
adc
xchg
std
jmp
sbb
les
sbb
loop
idiv
sbb
adc
loope
punpckhdq
add
dec
test
pmuludq
or
pop
dec
std
fcomi
pop
mov
int
and
iret
dec
ror
ins
in
fdiv
pop
dec
xlat
jecxz
jo
ja
mov
add
or
ins
jg
push
lahf
cmps
stc
pop
inc
push
movs
push
mov
out
mov
add
dec
push
mov
jo
push
adc
fstp
mov
inc
mov
nop
push
jle
dec
sbb
mov
bextr
mov
outs
or
mov
ror
push
out
mov
add
adc
test
test
iret
rcr
clc
sbb
rcl
push
mov
in
(bad)
sbb
add
jg
pusha
push
or
cmp
iret
add
push
mov
push
stos
push
not
aaa
inc
sbb
sub
mov
or
sbb
not
fmulp
push
mov
nop
push
push
daa
ins
or
mov
pop
fbld
xchg
cmp
and
fist
call
or
imul
add
stos
imul
in
(bad)
or
add
mov
mov
jg
mov
cld
push
sbb
fist
jge
ja
aaa
int3
jg
jg
fwait
mov
jl
jns
push
in
or
ja
or
pop
add
push
jp
mov
das
cs
push
jecxz
(bad)
in
(bad)
and
adc
pop
lea
push
sub
test
outs
loopne
dec
in
or
inc
cld
addr16
or
sar
in
sub
outs
and
in
adc
retf
mov
ss
idiv
jle
jg
fdivr
xchg
add
xchg
jge
or
pop
call
cld
adc
lock
loopne
lods
icebp
and
leave
mov
push
sbb
enter
call
cmps
clc
pushf
sub
in
loopne
fild
pop
rol
leave
mov
movs
or
js
fdivrp
mov
mov
adc
dec
push
mov
pop
cwde
xlat
sbb
push
ins
jge
xchg
cs
sti
cwde
jo
mov
mov
inc
or
ds
sbb
mov
clc
push
mov
out
dec
or
dec
push
cmc
fwait
sbb
dec
xor
push
nop
loopne
push
adc
fimul
xlat
and
lods
pop
scas
mov
cs
push
mov
ret
pop
cmc
out
loopne
or
fstp
clc
in
out
xchg
loopne
push
std
outs
not
or
jge
mov
int3
adc
sbb
cli
ja
cmp
or
shl
ins
std
imul
mov
jle
out
shl
mov
lahf
push
imul
(bad)
sbb
jmp
fs
cwde
cmp
(bad)
pop
add
xor
mov
lds
call
movs
(bad)
js
and
mov
sbb
cs
cli
hlt
xor
mov
add
mov
ror
(bad)
fsubr
cld
add
test
into
or
adc
add
sub
jne
xlat
jle
mov
push
or
movs
(bad)
(bad)
sub
aaa
adc
std
loopne
leave
call
or
inc
push
add
dec
push
mov
mul
mov
clc
cmp
pop
outs
leave
into
jmp
sbb
sbb
loopne
icebp
xor
pop
mov
or
mov
mov
js
(bad)
dec
mov
inc
retf
nop
mov
addr16
(bad)
ret
cli
les
cmp
je
inc
xor
jne
inc
stc
mov
pop
xchg
rdtsc
fwait
rcl
sub
xor
jmp
ins
jg
push
xchg
fsub
fmul
fsubr
(bad)
sbb
adc
test
mov
mov
inc
lds
loopne
push
mov
add
mov
dec
mov
add
pop
add
push
xchg
(bad)
div
dec
pop
int
dec
repz
jg
clc
test
out
mov
shl
mov
pcmpgtw
aaa
dec
sbb
test
xchg
stos
shl
add
mov
xor
cld
bnd
pop
inc
push
fdiv
add
push
loope
std
(bad)
sbb
call
jbe
adc
push
inc
(bad)
iret
and
mul
add
(bad)
cmp
mul
push
mov
or
call
adc
shr
(bad)
fldenv
adc
(bad)
ss
cmp
test
sub
dec
shr
(bad)
aaa
mov
pop
mov
sbb
dec
add
push
pusha
mov
jg
jge
or
lea
mov
(bad)
scas
lock
mov
mov
mov
add
jge
add
and
cmps
push
lock
mov
pop
fild
inc
pop
add
movs
(bad)
cmp
jbe
push
sbb
test
mov
(bad)
fiadd
div
pop
repz
lods
lock
jne
adc
ja
(bad)
xchg
scas
and
scas
push
pop
and
movs
loope
test
idiv
lea
pop
call
inc
call
out
in
jmp
dec
mov
jg
jle
loope
stc
xor
pop
pushf
(bad)
mov
pop
inc
shr
enter
loopne
mov
pop
xchg
loope
add
dec
call
add
jge
leave
je
xchg
repz
in
test
jge
jl
cmps
(bad)
cmp
loope
mov
jg
adc
add
call
je
call
clc
es
fnsave
int
xor
jmp
inc
sbb
mov
pop
fwait
test
out
fsub
lea
xor
sbb
popf
mov
adc
inc
js
std
push
and
and
mov
cdq
cmp
dec
xor
adc
leave
(bad)
ja
and
dec
pop
outs
ja
sbb
wbinvd
hlt
test
push
stos
sbb
outs
add
inc
or
or
shr
cld
mov
mov
pusha
fadd
pusha
movs
dec
or
add
cmps
mov
sar
les
fisubr
push
aad
cmp
scas
push
loope
(bad)
scas
or
jmp
hlt
jg
(bad)
call
outs
pop
fiadd
hlt
outs
pop
inc
retf
icebp
push
mov
xchg
imul
arpl
mov
lds
cmp
jg
ret
ret
jecxz
test
push
push
js
mov
out
pop
mov
mov
bound
cmp
cmp
sub
pop
(bad)
test
push
jge
je
int3
mov
inc
pop
mov
popf
sub
cmps
inc
pop
arpl
xchg
jge
fimul
mov
xor
mov
in
fucomi
push
mov
sub
loop
push
test
dec
jl
ret
sbb
mov
mov
gs
mov
lock
idiv
mov
das
sti
or
xchg
or
scas
div
and
mov
mov
(bad)
jne
lahf
sbb
stos
jl
pop
sbb
fisttp
jno
xor
mov
dec
cmp
aad
je
arpl
int
int3
sub
les
test
cwde
test
(bad)
lock
outs
lahf
push
xchg
xlat
or
sbb
lods
add
adc
mov
faddp
popf
fild
jl
call
and
mov
(bad)
ret
sbb
je
scas
ins
lock
(bad)
and
inc
pop
xor
mov
jae
retf
push
fadd
sbb
dec
add
or
retf
inc
jecxz
jo
push
push
push
mov
add
mov
adc
sti
dec
push
cmp
mov
leave
add
adc
mov
call
test
add
retf
dec
sbb
add
jg
push
out
push
mov
mov
add
pop
aad
sar
inc
out
daa
fidiv
popf
xchg
test
cmp
(bad)
cmp
cld
(bad)
xlat
lock
div
loopne
or
or
(bad)
call
fldenv
sbb
cmovl
pop
sub
inc
or
fnstenv
inc
rcl
ins
jnp
outs
add
xor
and
add
push
dec
cdq
xchg
jno
scas
ins
xchg
fild
lock
dec
or
dec
fild
lock
outs
or
mov
sbb
inc
sbb
in
or
je
test
push
je
call
pop
fstp
adc
add
xchg
pop
call
pop
call
xor
cdq
sbb
ror
(bad)
std
and
mov
out
and
fsubp
fcmovnu
add
cdq
arpl
fst
jne
or
push
pop
fdivr
dec
outs
push
leave
and
sete
test
add
or
mov
dec
mov
js
inc
push
and
push
lock
iret
hlt
out
cmps
jmp
int3
or
int
lock
mov
pop
sbb
mov
mov
retf
in
inc
cmp
jmp
stos
pop
sbb
clc
scas
lds
adc
lods
push
test
sbb
xor
pop
inc
fstp
push
pcmpeqb
sbb
mov
inc
(bad)
(bad)
cmc
ror
cmp
aaa
test
repnz
shr
adc
dec
or
dec
jge
lea
add
adc
add
mov
cmc
ds
pop
shr
(bad)
jg
mov
div
lea
add
or
ins
or
push
dec
inc
test
test
stos
mov
adc
psadbw
sar
pop
pop
push
dec
dec
mov
call
neg
mov
(bad)
iret
add
cmp
add
dec
in
sbb
mov
clc
push
cmc
mov
(bad)
pop
rol
mov
aas
mov
mov
sub
mov
cmp
add
or
ret
sbb
or
inc
inc
test
aad
push
mov
jge
scas
add
outs
mov
ja
iret
cmp
(bad)
das
jne
aaa
or
call
(bad)
fcomp
call
not
xchg
call
pop
sbb
mov
mov
fdiv
adc
shl
push
scas
mov
push
xlat
scas
(bad)
pop
fnstsw
fild
add
outs
outs
push
lea
xor
xchg
test
sub
pop
sbb
cmps
cs
and
aam
ds
in
pop
and
adc
(bad)
je
addr16
out
or
add
int
xor
add
push
push
or
push
cmp
sbb
mov
sbb
out
adc
pushf
scas
jmp
push
mov
mov
push
rcl
jl
or
inc
or
mov
mov
(bad)
aad
jne
or
or
lock
dec
push
js
sar
and
cli
mov
out
cli
adc
jno
outs
dec
jmp
xor
fsub
push
fst
or
repnz
add
stos
adc
mov
or
es
push
out
add
outs
lahf
adc
jno
push
rol
daa
mov
cld
ja
xchg
test
add
jne
test
(bad)
jne
(bad)
mov
pop
pop
push
mov
sub
cmp
mov
mov
sbb
adc
xor
adc
and
and
stc
pop
pop
fidivr
test
add
out
test
sub
or
sbb
jmp
je
pop
leave
dec
enter
or
out
adc
push
jg
and
aaa
ins
ins
mov
dec
cmc
dec
or
add
jmp
out
mov
jno
(bad)
aas
mulps
mov
sbb
mov
or
dec
js
rcr
sub
cmp
and
add
dec
rcr
sbb
sub
and
sub
cmc
and
fist
pop
sbb
sub
mov
cmps
sbb
sub
xor
mov
jmp
call
pushf
popa
pop
aaa
retf
or
lahf
xor
sets
adc
aad
stos
iret
seta
js
add
xor
cmp
pop
adc
jge
inc
add
psubd
push
cmp
inc
or
ss
and
fcom
and
cli
jl
out
mov
cld
push
push
bound
adc
sbb
loopne
add
popa
mov
hlt
call
sar
jmp
xchg
or
inc
fbstp
or
ins
call
push
mov
mov
loop
out
not
lahf
inc
lds
mov
jp
xlat
scas
in
mov
je
add
mov
xchg
fisttp
test
iret
mov
mov
sbb
dec
jo
cwde
push
cmps
or
pop
adc
cmc
jbe
cld
es
cmc
push
jge
mov
push
mov
lea
pusha
int
sbb
push
stos
fist
adc
sbb
push
jge
call
ret
daa
iret
pushf
pop
mov
xlat
fwait
pop
aas
je
pop
pop
mov
dec
mov
inc
xor
bound
add
push
retf
fld
fmul
jb
test
dec
jo
and
add
mov
call
or
add
or
add
rol
mov
out
inc
shl
fidiv
push
ins
mov
xchg
xchg
aas
je
cmp
stos
dec
sub
stos
push
xor
shl
fcom
jl
jo
pusha
add
inc
mov
add
sub
cmp
mov
adc
and
ins
add
adc
mov
pop
addr16
mul
in
adc
inc
stos
(bad)
(bad)
test
inc
std
push
mov
sub
dec
push
cmp
fist
inc
je
mov
pop
ja
jmp
or
(bad)
outs
xchg
jmp
icebp
js
(bad)
mov
cmc
popf
nop
(bad)
jle
and
sbb
add
jne
loopne
inc
cmp
pop
jbe
movzx
cmps
cmc
inc
inc
into
jmp
ins
loopne
jb
scas
rol
sbb
push
or
leave
aaa
mov
fucom
push
mov
mov
outs
jl
xor
into
lea
ret
outs
scas
cmp
(bad)
pop
sbb
les
sub
(bad)
arpl
jg
loope
and
cmps
(bad)
test
ss
pop
sbb
cmc
lahf
adc
test
push
aas
sub
sbb
sub
mov
loopne
mov
pop
loope
iret
cmp
jne
cld
jge
jne
cwde
pop
loope
lods
add
mov
dec
mov
call
add
pop
ret
es
jne
add
cmp
cli
lock
cmc
or
not
sub
sbb
mov
sar
sbb
inc
pop
pop
inc
loop
mov
add
jbe
(bad)
jecxz
pop
inc
mov
jmp
xor
ja
loop
jg
imul
inc
lods
sub
xchg
mov
loope
mov
daa
lahf
clc
ror
out
data16
ret
add
inc
mov
sbb
inc
inc
jg
xor
jecxz
push
das
loopne
mov
adc
std
push
sbb
xchg
hlt
sbb
jbe
dec
mov
jecxz
add
(bad)
div
push
pusha
push
mov
ss
add
pop
int3
cs
out
out
lds
lods
pop
mov
addr16
rol
xor
jle
fnsave
pop
std
and
sbb
xchg
cdq
sbb
mov
mov
or
out
push
jnp
push
add
or
lods
sbb
jle
fst
data16
das
sbb
js
sahf
loop
mov
neg
mov
push
retf
mov
or
addr16
loop
mov
pop
mov
push
sbb
les
pusha
inc
icebp
fmul
lahf
jle
and
inc
pusha
fisub
add
out
aaa
popa
fimul
jmp
or
or
xor
jb
fidivr
sub
xor
dec
push
mov
add
pop
call
cdq
outs
inc
xor
movs
in
(bad)
rcr
imul
push
fdivr
(bad)
loope
aas
loop
(bad)
pop
ror
jg
xlat
push
push
stos
cli
or
add
mov
mov
push
jno
jle
dec
sub
dec
push
test
repz
or
cli
cld
add
mov
sbb
and
adc
pop
push
add
sbb
ror
ins
mov
cmp
mov
call
aaa
pop
jg
call
inc
pusha
mov
jmp
pop
xchg
cmp
jne
iret
cmc
mov
pusha
add
(bad)
sbb
(bad)
test
inc
cmc
or
vcomiss
pop
pop
ret
pop
mov
push
pop
adc
xchg
repz
test
iret
(bad)
aaa
icebp
or
clc
jle
inc
inc
or
sbb
out
imul
(bad)
retf
je
push
cs
or
ja
pop
sub
pop
sub
or
arpl
add
and
or
lods
and
jg
add
arpl
jns
hlt
pop
rcr
add
or
pop
xlat
icebp
ret
xchg
outs
fist
mov
pop
adc
ss
sub
ss
call
add
inc
ins
call
cmps
pop
add
xchg
add
dec
mov
ror
js
call
inc
std
psadbw
mov
in
dec
adc
inc
sub
cmps
cmp
push
mov
hlt
aas
push
fmul
adc
hlt
and
fidivr
lods
sub
scas
dec
sub
das
loopne
mov
push
push
inc
or
mov
test
inc
aad
or
cmp
stos
mov
call
aas
add
xor
dec
repz
mov
les
xchg
js
fbstp
and
inc
imul
adc
push
icebp
daa
xchg
rol
push
mov
jmp
adc
not
adc
inc
mov
outs
hlt
shl
cld
mov
call
add
jecxz
mov
aaa
(bad)
lahf
sbb
xchg
push
or
mov
mov
mov
sub
(bad)
mov
push
addr16
iret
sbb
sbb
sahf
hlt
lods
aam
js
sub
call
adc
pop
int3
out
imul
outs
cld
cmp
adc
jmp
add
pop
sub
adc
dec
add
pop
clc
or
bnd
pop
js
xchg
sub
jge
fisub
cmps
mov
daa
adc
ret
and
mov
or
sbb
cmp
and
push
or
cli
push
inc
jecxz
inc
xor
(bad)
mov
mov
or
push
and
aas
pop
jmp
inc
push
xor
jge
push
call
sbb
pop
outs
sub
cmp
(bad)
push
jl
mov
lahf
dec
jno
clc
adc
xchg
sbb
xchg
popa
or
daa
inc
jl
sub
lock
or
jle
dec
inc
xlat
cmps
dec
mov
inc
std
in
cdq
hlt
cmp
adc
cmp
dec
test
cmc
daa
dec
mov
lea
xchg
push
pop
outs
popa
mov
aas
sub
pop
and
cdq
mov
pop
inc
lea
aaa
iret
call
inc
fs
jo
fidiv
sbb
jmp
movups
push
jle
and
mov
push
ror
dec
add
mov
add
arpl
mov
pop
or
enter
lahf
push
icebp
pop
js
sbb
mov
jg
push
add
clc
lds
inc
mov
xor
mov
dec
ja
jmp
cmp
outs
scas
loopne
dec
pop
or
push
lea
jo
jle
xlat
xor
mov
add
fdivr
fiadd
cmp
mov
and
add
pop
jp
sti
add
pop
jg
icebp
xor
fcomp
out
xchg
add
mov
push
fdivp
and
jecxz
mov
lds
(bad)
(bad)
fadd
fild
out
int
aaa
js
push
push
xor
dec
xchg
out
xor
cld
cmp
test
scas
sub
xchg
scas
or
pop
loopne
lock
sbb
cmps
sub
or
add
cs
test
sbb
bound
frstor
push
jg
stos
imul
cs
aaa
(bad)
push
mov
(bad)
and
mov
push
push
test
sub
lock
repz
add
rcl
into
add
ficomp
(bad)
mov
fs
or
mov
not
mov
push
data16
mov
push
pushf
hlt
xor
cmp
pop
pop
jns
ja
popa
repz
icebp
(bad)
mov
add
push
lock
bound
jo
ds
fisttp
add
dec
pop
sbb
inc
xchg
pop
inc
mov
add
mov
add
hlt
pop
outs
inc
sub
xchg
clc
mov
pop
repnz
(bad)
retf
cmp
pop
bound
lock
(bad)
sub
mov
ds
inc
mov
dec
dec
inc
cmps
or
out
adc
clc
sub
iret
lock
inc
cmps
fadd
mov
push
dec
add
xor
and
pusha
mov
push
push
mov
lahf
clc
push
in
fcomp
mov
je
push
and
mov
or
cmp
not
into
hlt
call
pop
add
add
adc
outs
or
sti
cmp
jne
arpl
lea
add
mov
push
inc
or
aas
xlat
(bad)
fucomi
push
xor
add
ficom
mov
sqrtps
cmps
call
jmp
out
je
push
and
dec
pusha
mov
out
and
push
cmps
aas
ds
repz
fwait
test
sub
mov
and
outs
addr16
add
ja
mov
dec
das
movs
xchg
pushf
outs
mov
in
or
outs
adc
push
xor
mov
int3
mov
push
or
cmp
repnz
push
arpl
push
mov
pop
call
icebp
or
call
hlt
mov
loope
push
arpl
push
mov
scas
jp
pop
iret
push
(bad)
pop
dec
or
mov
cmps
push
daa
jb
(bad)
jg
and
cmp
cmp
or
cld
or
ret
and
sar
out
stos
pop
add
push
call
sti
push
in
sbb
sbb
rol
or
adc
clc
push
xchg
xor
retf
add
or
repz
jno
test
inc
jle
cmp
push
fbld
cmp
xchg
out
add
retf
out
aaa
lds
js
lock
jns
pop
jle
sub
loop
(bad)
inc
cmp
jo
jl
inc
inc
cmp
jo
clc
jmp
aas
pop
jmp
mov
out
mov
sbb
xchg
push
lods
test
or
inc
xlat
sti
jg
inc
or
inc
mov
sbb
add
jmp
cmp
jo
add
(bad)
(bad)
jg
jg
jb
or
mov
fcomp
push
cmp
xchg
mov
(bad)
pop
xchg
lock
dec
or
dec
sti
sub
xor
xchg
test
or
pop
ret
test
push
jne
adc
xor
xlat
lock
(bad)
jg
sbb
sbb
xor
fild
(bad)
mov
mov
jne
jmp
inc
cmps
xor
cmp
mov
sbb
xchg
jecxz
add
je
mov
mov
adc
je
sub
cmc
inc
(bad)
jecxz
mov
jne
or
sub
add
mov
out
(bad)
stc
iret
pop
fdivr
or
fld
cmp
je
inc
mov
xor
push
movs
dec
fisubr
loopne
mov
je
test
mov
jne
sar
xchg
test
js
jnp
mov
sbb
cmp
js
adc
outs
mov
add
adc
jne
inc
mov
cmp
(bad)
idiv
mov
mov
fs
lea
jmp
adc
adc
out
fistp
or
aaa
or
lods
add
jno
jmp
inc
movups
ins
cld
push
mov
inc
pop
xchg
xchg
inc
les
mov
or
fld
mov
push
test
xlat
cmp
mov
xchg
gs
sbb
inc
dec
cmp
xchg
jne
jle
xorps
mov
daa
ds
(bad)
pop
xchg
out
loope
cs
ds
sub
movs
fisttp
test
imul
fwait
pop
ds
add
sar
sbb
or
pusha
jmp
call
ins
push
fwait
lahf
ret
push
rcl
inc
jg
inc
movs
(bad)
lahf
daa
lock
add
or
xor
loop
pop
lds
dec
push
lock
mov
push
inc
movs
in
sub
iret
mov
fistp
sbb
push
mov
push
mov
ins
mov
xchg
repz
scas
ins
sbb
fdiv
pop
sub
sub
int3
imul
cmp
cld
jg
aad
pop
add
ret
mov
stc
add
fistp
or
addr16
dec
add
mov
push
add
jl
clc
je
call
div
loope
imul
or
pop
mov
neg
(bad)
enter
stos
fldcw
mov
push
jle
test
or
cmp
push
jl
cmp
jbe
pop
dec
adc
sub
lods
test
adc
cmc
add
daa
in
addr16
ffreep
push
mov
push
xor
mov
test
inc
cwde
sbb
add
(bad)
mov
jo
pop
cmp
push
hlt
xlat
xchg
fisttp
sbb
mov
pop
mov
iret
clc
daa
pop
arpl
adc
aas
es
jae
clc
sub
adc
js
sub
add
in
shl
push
dec
cld
sbb
pop
add
pop
adc
ins
repz
dec
sbb
inc
lock
(bad)
lock
or
dec
fcomp
add
call
rcl
and
fcom
adc
jg
adc
fs
in
sbb
int3
inc
test
out
xchg
fdivp
or
jo
xlat
aam
mov
add
icebp
adc
mov
in
push
inc
pop
or
or
neg
(bad)
dec
dec
jecxz
add
pop
cmp
inc
lock
popf
push
push
dec
fist
pop
push
loopne
lahf
(bad)
std
sahf
push
loopne
inc
mov
or
(bad)
(bad)
stos
adc
outs
xor
fldcw
popf
and
retf
push
js
dec
jg
add
scas
or
mov
stos
out
test
cmp
call
xchg
cs
mov
mov
sbb
lds
mov
cmp
pop
cli
inc
dec
jns
sub
cld
aaa
(bad)
(bad)
retf
jne
addr16
ret
dec
(bad)
into
add
jmp
xchg
cld
cmps
push
aaa
fmul
dec
cmp
inc
aaa
jg
in
sbb
and
(bad)
push
xor
add
jmp
mov
clc
ret
pop
push
sub
cld
scas
cld
cmp
retf
xchg
in
jge
sub
test
dec
pushf
cmp
out
pop
add
or
fpatan
fs
in
ins
mov
aaa
pop
mov
ret
repz
pop
loope
xchg
push
retf
jle
add
and
xchg
mov
fild
push
stos
aam
adc
arpl
xchg
cmp
das
push
popa
jl
sbb
dec
outs
ja
mov
sub
jg
xor
push
xor
out
push
outs
sbb
sub
cvtps2pd
out
sbb
pop
cli
lahf
jns
pop
ins
mov
jb
or
mov
adc
push
inc
adc
dec
add
add
ret
push
fistp
add
pop
adc
hlt
movsx
mov
adc
mov
push
pop
addr16
mov
sete
push
push
imul
mov
or
in
in
out
or
out
lock
repnz
enter
cmc
xor
and
and
and
dec
and
enter
pop
cmp
and
cwde
add
jb
add
pop
push
imul
ss
movs
call
mov
ror
pop
ins
jne
dec
shl
xchg
test
les
ss
rol
in
add
ja
mov
shl
nop
pushf
xor
shl
xlat
jne
xlat
add
jg
pop
sbb
jne
cld
mov
pop
sbb
lock
pop
test
das
call
je
or
cmp
pop
pop
pop
dec
jp
pop
xor
shl
mov
xchg
rcl
dec
sar
call
outs
adc
pop
and
sbb
out
xor
xlat
jne
scas
ja
pop
xchg
jmp
sar
(bad)
aas
pop
or
(bad)
(bad)
(bad)
jmp
push
ins
and
jae
and
jae
sub
je
push
pusha
jo
jae
ja
mov
mov
cmp
add
xor
xor
mov
gs
sub
gs
ins
jb
and
mov
or
jo
outs
ds
and
mov
aas
pop
cmp
retf
and
jmp
push
or
and
inc
add
or
ins
aaa
inc
inc
add
jns
sub
adc
or
ds
in
sbb
or
pop
or
jnp
or
adc
xor
stos
imul
sbb
add
ins
or
jae
adc
sqrtps
and
das
or
pop
pop
gs
inc
adc
dec
add
adc
pop
in
ins
out
ja
lahf
pop
aaa
or
cmp
and
out
dec
push
pop
punpckldq
push
adc
cmp
(bad)
dec
sbb
xor
loopne
lock
jmp
cmp
or
mov
out
pop
mov
ss
pop
pop
lock
jp
sub
mul
das
xchg
jmp
xchg
jmp
sbb
in
(bad)
pop
(bad)
mov
inc
pusha
daa
hlt
sbb
(bad)
mov
jo
das
das
imul
jb
gs
or
arpl
popa
imul
outs
je
pop
and
imul
push
sbb
mov
(bad)
ja
pop
add
adc
sbb
movsx
jg
div
push
sbb
cmp
ficomp
(bad)
xor
push
dec
sub
mov
das
(bad)
fdiv
loope
outs
addr16
jae
outs
outs
cmp
pop
ins
outs
mov
mov
pop
xor
pop
and
mov
ins
mov
xor
popa
xor
imul
aaa
xchg
inc
mov
add
push
fwait
int3
cmp
js
dec
pop
jle
loopne
jbe
imul
pop
outs
out
mov
push
add
cmovne
or
imul
(bad)
imul
(bad)
nop
and
mov
pop
xchg
mov
or
fdivr
xchg
pop
rol
pop
pop
xor
(bad)
cmp
pop
xchg
pop
and
cwde
pop
pop
inc
cdq
push
aas
call
mov
dec
popf
or
sahf
pop
lahf
pop
jecxz
loopne
sti
inc
inc
and
inc
arpl
sub
aaa
or
inc
jne
scas
js
ins
aam
(bad)
inc
jns
jo
ins
sub
inc
gs
iret
ins
adc
mov
and
xor
jns
push
pop
lea
or
stos
setl
or
mov
fst
sub
sub
shl
jno
retf
cmps
je
ret
or
or
ss
add
shl
out
fs
sub
pop
jo
shr
sub
pusha
push
(bad)
xlat
imul
je
popa
fcmovnu
cmp
and
aas
cmps
outs
addr16
(bad)
ret
lods
cmp
cs
pushf
xchg
div
imul
(bad)
xchg
dec
enter
mov
pop
js
jecxz
jns
mov
mov
add
outs
pop
sti
mov
jns
pop
dec
push
sbb
out
or
inc
inc
inc
(bad)
aaa
sub
sub
fild
mov
mov
add
xchg
shr
gs
pop
push
inc
(bad)
lea
xchg
je
jle
jo
outs
pop
(bad)
fsubr
mov
pop
inc
outs
push
stos
sub
outs
xor
js
pop
pop
and
ins
add
pop
aam
and
pop
dec
sbb
idiv
imul
xor
inc
xor
pop
outs
mov
fs
sbb
mov
xor
jo
in
je
stos
pop
sub
in
xor
ja
mov
bound
cld
jle
and
arpl
mov
mov
bound
imul
dec
std
jmp
add
mov
mov
ins
jmp
xchg
jg
outs
popa
inc
out
das
outs
clc
mov
xchg
into
ins
imul
xor
inc
ss
pop
sbb
pop
cwde
lods
adc
fbstp
imul
jae
push
cmp
jg
pop
jns
push
hlt
je
popa
xchg
mov
sub
movs
inc
push
sbb
pop
fcompp
shr
shr
dec
dec
aad
(bad)
mov
xchg
ins
mov
sub
cmps
cmp
ficomp
aad
jle
push
sbb
xlat
pextrw
and
and
pop
and
push
dec
inc
std
(bad)
pop
fstp
pop
inc
inc
inc
push
inc
movs
nop
pop
out
rol
push
pop
and
add
push
clc
mov
push
add
pop
popa
addr16
imul
push
push
lahf
jb
ins
pop
mov
or
addr16
repz
cmp
outs
jl
cmp
or
addr16
jp
aaa
mov
mov
pop
jb
bound
ja
jle
(bad)
pop
pop
arpl
pop
gs
inc
add
outs
mov
xor
mov
fs
jnp
outs
popa
and
jo
lahf
push
sbb
cmp
inc
cmp
push
jae
outs
imul
cmp
sub
add
adc
jp
jmp
pop
ja
jp
data16
mov
pop
pop
push
arpl
outs
outs
cld
arpl
jae
jne
jb
pusha
push
inc
dec
adc
inc
xor
mov
mov
dec
cs
addr16
ds
push
lods
push
aam
xchg
sahf
sar
add
jmp
dec
aaa
stos
loop
jmp
sti
jmp
in
in
add
lds
addr16
loope
push
shr
or
bound
sbb
inc
add
or
inc
shl
xor
clc
jg
inc
add
or
add
add
xlat
pop
adc
das
xor
push
aas
and
jbe
sub
adc
pop
xor
test
sub
add
adc
mov
add
sbb
lahf
jmp
aaa
mov
push
jle
movs
(bad)
fild
and
loopne
mov
call
adc
ficomp
div
push
sub
icebp
jmp
add
mov
jg
out
jmp
sub
sub
pop
push
aaa
pop
jo
sti
mov
mov
ret
xor
fs
arpl
ins
adc
jnp
popa
mov
jne
bound
pop
je
das
data16
imul
(bad)
and
jne
imul
outs
cmp
xor
push
mov
adc
inc
jmp
cmp
adc
sbb
mov
inc
pop
jo
mov
aad
adc
add
rcl
jge
sbb
imul
mov
pop
or
loope
rcr
jmp
aas
and
sbb
mov
ins
pop
stos
jo
scas
pushf
push
push
jae
xchg
pop
mov
mov
jns
mov
xchg
sbb
and
sbb
dec
push
add
rol
pop
xlat
inc
pop
cs
aas
movlps
lea
cmp
inc
mov
mov
jne
pop
addr16
pusha
inc
idiv
mov
dec
dec
push
push
cmp
inc
inc
dec
dec
jbe
or
in
cmps
dec
or
or
or
or
or
popf
fstp
or
or
push
aaa
pop
mov
or
mov
outs
jae
pop
cmp
pop
push
mov
sbb
addr16
or
mov
aas
mov
imul
popf
push
daa
pop
xchg
add
jmp
ror
out
sub
out
pusha
xor
mov
enter
pop
aas
arpl
or
cs
(bad)
call
div
jo
lock
cwde
fs
out
and
out
bnd
fbstp
cld
cld
and
das
gs
push
aas
aas
jmp
push
push
add
repnz
test
std
out
call
jmp
adc
push
mov
push
inc
movs
pop
in
and
jnp
cmp
nop
fbld
mov
jge
xlat
jge
scas
add
xchg
rol
call
loope
inc
call
and
imul
jl
je
jns
push
iret
xchg
bound
repz
ror
ja
ret
loopne
jne
push
aas
xchg
dec
jmp
fidivr
(bad)
and
arpl
xchg
outs
xor
imul
mov
fdivr
vpsubq
movs
jnp
shl
(bad)
int3
jge
imul
sbb
outs
adc
and
jp
mov
fsubr
ins
into
dec
cmp
jg
int
mov
mov
pop
sahf
jnp
ins
pop
loop
outs
outs
pop
lods
imul
cmps
or
xor
mov
sti
add
add
push
aaa
or
popf
mov
bswap
pop
sub
pop
xor
fwait
add
daa
add
fmul
pop
daa
iret
pop
pop
xlat
sub
and
add
daa
or
sar
aad
jo
(bad)
daa
rol
call
pop
fldenv
das
fild
sub
fisttp
pop
arpl
jp
fwait
cmp
je
shl
(bad)
outs
call
dec
mov
add
lock
jg
pop
sub
call
xchg
xchg
call
jmp
sub
and
shl
add
inc
loop
not
fisubr
pop
neg
cs
jne
lock
xchg
pop
shl
pop
mov
xor
je
pop
mov
(bad)
jne
shl
test
outs
and
pop
xor
add
(bad)
nop
cmps
imul
scas
imul
mov
outs
xchg
imul
mov
pop
inc
retf
mov
mov
jns
out
pusha
mov
push
das
inc
push
jb
fmul
imul
and
fiadd
lahf
push
setg
popa
add
imul
push
push
int
jne
ins
pop
jnp
xor
je
pop
in
push
in
fmul
push
pop
push
jg
dec
jl
adc
or
(bad)
pop
pusha
jnp
mov
inc
sbb
cwde
dec
outs
pop
dec
jge
daa
cmp
mov
dec
inc
push
cmps
dec
movq
ja
outs
jae
jge
push
in
lods
data16
push
inc
push
inc
js
addr16
imul
adc
jnp
inc
dec
jo
adc
imul
mov
movs
dec
popa
xchg
adc
dec
dec
push
imul
cmps
fsubr
mov
sahf
cmovae
mov
push
cdq
out
mov
mov
iret
sub
mov
xchg
je
rcl
test
push
mov
add
ret
jbe
fbld
push
or
jl
fs
popf
cmp
scas
dec
jnp
push
pop
daa
cmovno
push
pop
jmp
pushw
inc
gs
icebp
pop
pop
push
jl
push
mov
mov
or
push
gs
outs
out
cmp
xlat
pop
ja
add
sub
outs
sub
les
dec
clc
jg
iret
ja
ins
aam
mov
popa
jo
bswap
(bad)
jmp
gs
add
inc
inc
xor
aad
add
jae
mov
(bad)
mov
pop
loopne
xchg
pop
push
imul
sbb
bound
push
outs
or
or
ficom
dec
ucomiss
cmp
adc
xchg
or
(bad)
jae
dec
imul
stos
add
pop
sub
loope
pushaw
sbb
mov
adc
jb
xor
pop
gs
jge
xor
push
sbb
(bad)
fisttp
outs
rcr
ds
adc
gs
jo
ficom
pop
sbb
inc
push
jg
sbb
jbe
and
movups
pop
push
and
movs
sub
jnp
inc
sbb
or
outs
and
maxps
add
dec
into
jle
inc
sbb
add
inc
aaa
call
pop
arpl
(bad)
lds
dec
aaa
jp
popa
or
adc
fdiv
pop
gs
(bad)
mov
ja
cs
jno
test
inc
push
pop
bound
test
movq
gs
xchg
dec
gs
push
add
and
push
fcom
ja
mov
call
xlat
aam
daa
inc
and
imul
mov
popa
adc
push
out
inc
push
dec
cmp
mov
mov
outs
inc
in
push
adc
mov
lods
js
sbb
shl
pop
gs
dec
mov
test
ja
pop
inc
or
setne
push
loope
outs
adc
(bad)
fdivr
inc
outs
jmp
fdivr
in
ja
xor
imul
xchg
xor
pop
push
in
lea
dec
les
ret
addr16
out
out
adc
addr16
idiv
cmps
outs
pop
sti
add
imul
neg
pop
fcmovnb
dec
push
ins
sbb
aas
add
add
push
ja
(bad)
arpl
cld
popa
mov
jne
push
jge
gs
aaa
fiadd
add
iret
mov
je
ins
cli
inc
out
in
push
dec
stos
in
ret
pop
pushw
inc
outs
fcomp
popa
ins
adc
data16
inc
or
fdiv
inc
popf
add
cmovnp
lods
arpl
xor
mov
stos
frstor
sub
ins
out
stos
bswap
cmc
cmp
pop
push
ja
jmp
mov
not
aas
jl
shr
mov
aad
pop
push
push
hlt
mul
test
mov
add
pop
or
outs
(bad)
fs
sti
into
and
mov
inc
inc
dec
sub
arpl
std
icebp
xor
popa
rcr
popa
ins
jno
inc
dec
dec
mov
and
ret
jne
mov
out
or
imul
pop
arpl
in
imul
mov
ds
or
jae
xlat
jb
or
out
out
pop
inc
dec
dec
xor
and
lds
pop
jmp
mov
stos
retf
leave
pop
add
enter
mov
pop
inc
pop
pop
add
mov
fiadd
int3
unpckhps
scas
jge
pusha
daa
ss
dec
pop
and
rol
aad
xlat
or
enter
fidiv
enter
(bad)
enter
(bad)
loopne
or
loop
or
in
out
or
enter
jmp
in
enter
out
out
lock
repz
hlt
cmc
div
or
enter
cli
xor
and
and
push
sbb
xor
pop
add
sbb
test
push
pop
or
nop
inc
push
sbb
or
push
sbb
clts
sbb
adc
adc
fs
inc
adc
push
fs
inc
push
pop
sbb
nop
inc
push
sbb
sbb
push
sbb
pop
push
sbb
and
and
fs
inc
and
es
inc
push
daa
sub
nop
inc
push
sbb
sub
push
sbb
das
push
sbb
xor
xor
fs
inc
xor
ss
inc
push
aaa
cmp
nop
inc
push
sbb
cmp
push
sbb
aas
push
sbb
inc
inc
inc
mov
inc
add
inc
out
fild
and
pop
sbb
dec
pop
dec
pop
pop
mov
lea
dec
pop
dec
pop
add
jl
imul
js
pop
nop
xor
dec
test
daa
push
aas
dec
mov
adc
jns
pop
cdq
mov
rcl
add
and
push
pop
pop
inc
lock
imul
jg
add
pop
dec
mov
inc
fistp
mov
arpl
call
packsswb
inc
(bad)
and
pmuludq
enter
or
in
pop
add
adc
cwde
loopne
std
inc
add
adc
sub
adc
jo
rol
test
dec
mov
adc
push
sbb
jb
or
jb
jae
xchg
add
leave
adc
aaa
mov
or
adc
cmp
and
adc
inc
adc
daa
mov
cmp
add
jns
adc
lahf
add
sub
aaa
adc
pop
inc
daa
lds
sti
fcmovnbe
dec
adc
aas
add
jg
fwait
mov
adc
inc
arpl
adc
pop
add
out
(bad)
jge
cmps
fldenv
(bad)
mov
mov
adc
jo
adc
jnp
iret
adc
adc
iret
jmp
or
iret
xor
sub
iret
scas
imul
outs
xor
mov
daa
xchg
pop
xchg
das
pop
xlat
jne
cwde
xor
push
pop
daa
pop
lods
sub
aaa
mov
aaa
cld
mov
fst
adc
adc
sub
pushf
inc
sbb
xchg
inc
icebp
popa
inc
sbb
fsub
jmp
mov
sub
pop
daa
mov
iret
jmp
loope
adc
fisttp
retf
test
test
dec
pop
sbb
adc
push
add
push
in
xchg
sbb
adc
xchg
add
fnsave
dec
out
xor
loope
adc
ins
adc
scas
mov
pop
mov
mov
sbb
sbb
push
jp
mov
loopne
dec
xchg
mov
xor
or
mov
adc
push
mul
imul
shr
add
icebp
dec
je
sub
and
dec
rol
cld
adc
push
sbb
(bad)
cmp
add
xchg
retf
ret
rol
scas
and
adc
jmp
fcomp
out
adc
cmp
fimul
or
aas
adc
pusha
pop
shl
fcmovnu
arpl
shl
adc
sub
fcomp
fldenv
outs
jl
or
pop
fisttp
pop
sbb
fst
aaa
mov
(bad)
mov
and
jns
addr16
and
or
jge
push
test
aas
fsub
ret
aam
(bad)
rcl
fs
mov
pop
ja
adc
rcr
push
cmps
ds
enter
adc
inc
or
xchg
cmps
pop
mov
and
cdq
cmps
out
cmp
adc
aas
lds
pop
jmp
out
jne
jb
or
fidiv
mov
ja
cmps
mov
adc
loope
adc
add
psubw
adc
cdq
xchg
adc
int3
sbb
pop
mov
or
int3
or
or
or
leave
mov
mov
pop
pop
arpl
repnz
adc
or
push
aaa
arpl
jne
imul
aas
sbb
sbb
mov
jae
je
pop
dec
lods
mov
xchg
adc
jb
emms
sub
adc
xor
adc
pop
sar
inc
fist
adc
add
aas
in
inc
jl
unpckhps
and
and
mov
cmp
add
or
iret
aaa
add
dec
pop
pop
scas
pop
outs
les
cmovle
dec
outs
xor
xchg
scas
bound
retf
ins
nop
adc
xor
outs
adc
fld
or
out
cmp
pop
jae
dec
pop
data16
inc
adc
adc
adc
xchg
sahf
sbb
call
adc
leave
or
xor
xor
jmp
pop
sub
repz
pop
ins
mov
das
daa
ret
aaa
daa
sbb
in
sbb
pop
sub
adc
pop
into
call
inc
xchg
adc
enter
adc
ins
cmp
pop
adc
ret
int
or
outs
nop
scas
shl
cmp
jnp
outs
xlat
daa
jmp
adc
aas
fst
adc
pop
or
dec
inc
dec
push
inc
pusha
adc
fimul
enter
pop
adc
xor
pusha
data16
fisub
or
inc
daa
nop
rcr
inc
pop
adc
push
rol
or
sbb
sbb
add
adc
arpl
outs
outs
adc
sbb
push
xchg
push
je
ins
nop
and
out
add
cmp
call
adc
call
and
jge
out
aaa
cmp
or
add
pop
inc
adc
pop
xchg
xor
shr
jns
adc
daa
dec
nop
inc
fsub
add
dec
aas
(bad)
pop
outs
cmp
xchg
pop
adc
adc
add
or
fisttp
or
enter
movs
mov
repnz
or
xchg
xlat
pop
adc
(bad)
aam
xor
iret
inc
or
inc
aaa
cmp
dec
ffreep
dec
ss
mov
mov
sub
pop
enter
xchg
xchg
xchg
adc
pop
cwde
push
in
xchg
arpl
test
lea
jb
xor
push
xchg
call
test
jmp
int
loop
cmc
in
cli
imul
sti
imul
add
sti
fdivp
js
push
push
je
aaa
push
aaa
rol
push
push
pop
loopne
test
das
inc
add
pop
jmp
lods
xor
mov
lods
nop
or
lock
mov
sbb
mov
adc
mov
mov
jmp
ins
add
mov
mov
push
pop
xchg
mov
sbb
bsf
fs
rol
mov
push
rol
aaa
ret
or
pop
(bad)
jmp
into
sahf
sbb
xlat
(bad)
adc
rcr
pop
aaa
in
sbb
pop
(bad)
lds
push
(bad)
aas
fmul
daa
sub
or
loope
sbb
inc
out
pop
rcl
das
inc
shl
fcom
aam
aad
enter
(bad)
xlat
fsub
or
fcmovu
or
(bad)
(bad)
or
enter
loop
enter
in
enter
out
call
jmp
push
sbb
out
push
sbb
lock
repnz
repz
cmc
xor
pusha
ret
jg
idiv
enter
stc
cli
sti
and
(bad)
pushf
add
(bad)
push
adc
adc
fwait
pushf
adc
add
sbb
push
pop
or
fs
inc
or
or
push
or
pop
cdq
aas
mov
pushf
dec
adc
enter
loop
mov
sub
xor
add
add
or
in
jne
adc
ja
pop
cmps
and
inc
in
adc
adc
or
jle
xchg
ss
pushf
inc
mov
inc
jge
pop
pop
into
adc
push
in
and
adc
call
pop
pop
mov
dec
aas
sub
push
fmul
push
fstsw
stos
emms
jns
xchg
jge
add
jge
outs
or
pop
and
imul
pop
mov
jle
in
xor
push
push
push
out
mov
inc
loope
push
inc
cmp
jl
scas
mov
fist
rol
xor
or
mov
jns
sub
jl
call
inc
lock
jg
fisubr
add
add
rol
adc
loop
lahf
and
add
push
pop
mov
mov
pop
mov
les
cwde
fld
in
int3
addr16
ss
in
(bad)
inc
cmp
jl
outs
jae
jmp
es
in
mov
jmp
fist
mov
(bad)
addr16
push
push
push
(bad)
inc
mov
mov
inc
adc
push
cmp
ins
loope
ja
pop
aaa
call
or
cmp
or
or
aas
cli
jb
add
sti
std
pop
dec
fsub
inc
inc
xor
and
and
and
dec
popf
jmp
sbb
dec
pop
mov
shl
pushf
pop
fdivr
jne
mov
mov
aaa
loopne
je
nop
pop
push
pop
push
(bad)
push
and
addr16
add
xchg
ja
fsubr
jnp
mov
xor
outs
jnp
jle
push
and
sar
ins
or
jo
sar
xor
out
imul
pop
xor
adc
push
ds
sub
outs
jmp
sbb
stc
xchg
out
aas
adc
scas
fnsave
pop
or
ja
les
cmp
sbb
(bad)
jbe
mov
das
push
push
sub
outs
inc
xchg
test
out
out
out
aaa
cwde
mov
sub
ret
and
mov
sub
xor
pusha
pop
sub
jbe
ja
js
xlat
jne
repnz
popa
pop
stos
pop
int3
inc
int3
pop
mov
jmp
dec
jmp
jg
out
adc
test
cmp
inc
call
into
inc
sbb
jbe
inc
push
shr
test
fimul
in
loopne
add
jmp
ja
pop
mov
out
adc
push
mov
fisttp
loop
or
movs
cli
(bad)
loope
(bad)
adc
add
shl
loopne
std
cmps
add
adc
inc
outs
ins
push
fs
(bad)
jo
ja
les
lods
inc
dec
cmps
and
cmp
ins
out
adc
sti
frstor
icebp
cld
pop
sub
outs
inc
jmp
jbe
and
fwait
mov
neg
or
pushf
pop
popf
sahf
lahf
or
enter
mov
mov
or
test
or
stos
stos
or
lods
lods
scas
scas
or
enter
mov
enter
mov
enter
mov
mov
mov
push
sbb
mov
mov
fs
inc
ret
(bad)
lds
push
mov
nop
inc
push
sbb
retf
pop
sbb
into
add
(bad)
(bad)
jg
and
xor
xor
out
and
pop
xor
lods
and
xor
and
xor
nop
clc
(bad)
push
fidiv
shl
or
sbb
inc
xor
xor
push
and
inc
push
sbb
adc
sbb
adc
adc
fs
inc
adc
adc
push
adc
adc
adc
inc
push
sbb
adc
sbb
adc
adc
ins
dec
inc
out
pop
out
fs
inc
push
lock
repnz
inc
push
sbb
hlt
cmc
inc
push
sbb
clc
push
sbb
cli
sti
cld
sbb
std
(bad)
inc
adc
adc
or
enter
adc
enter
adc
enter
adc
adc
or
adc
push
push
sbb
adc
adc
fs
inc
adc
push
pop
sbb
sbb
inc
push
sbb
push
push
sbb
and
and
fs
inc
and
es
sub
sub
inc
push
sbb
cs
sbb
xor
xor
fs
inc
xor
ss
cmp
cmp
inc
push
sbb
ds
sbb
inc
inc
inc
call
inc
jne
mov
and
popf
and
xor
xor
mov
xor
xor
sbb
mov
xor
xor
xor
(bad)
xor
(bad)
push
ss
xor
cmp
cmp
cmp
outs
(bad)
(bad)
(bad)
(bad)
cmp
sub
cmp
cmp
cmp
cmp
cmp
add
(bad)
mov
cmp
cmp
pop
cmp
fisubr
test
out
(bad)
(bad)
(bad)
(bad)
in
cmp
cmp
cmp
cmp
das
fistp
cmp
cmp
jns
xchg
cmp
push
ds
(bad)
jg
sub
sub
ds
(bad)
sub
enter
jmp
stc
adc
inc
sub
cld
(bad)
(bad)
(bad)
aas
das
aas
dec
aas
add
imul
aas
mov
enter
mov
sub
aas
repnz
stc
aas
popa
jmp
dec
aaa
dec
and
test
lahf
xor
and
(bad)
push
sbb
retf
xor
xor
xor
das
xor
xor
xor
pop
xor
and
mov
(bad)
(bad)
push
scas
xor
xor
xor
xor
pop
xor
retf
xor
push
xlat
lea
xor
and
aaa
cmp
aas
shr
push
(bad)
(bad)
push
loop
mov
cmp
inc
cmp
jb
clc
sub
sub
(bad)
(bad)
push
cmp
pop
cmp
sub
cmp
sub
cmp
lods
cmp
cmp
cmp
cs
(bad)
(bad)
sbb
sub
mov
pop
sub
mov
outs
sub
aas
push
aas
dec
(bad)
in
aas
or
pop
xor
and
(bad)
(bad)
(bad)
and
xor
inc
xor
and
(bad)
mov
xor
mov
fisub
push
cwde
xor
xor
xor
cmp
loop
inc
xor
(bad)
dec
shl
and
leave
ss
and
cmp
(bad)
(bad)
jg
jl
and
mov
and
xor
repz
sbb
ss
aaa
sbb
aaa
div
dec
cmp
(bad)
fstp
lods
std
cmp
mov
dec
sub
cmp
sub
(bad)
sub
xchg
cwde
cmp
sub
cmp
cmp
cmp
das
loope
jmp
xor
add
sub
(bad)
stos
ds
aas
xchg
aas
and
fbstp
push
aaa
clc
inc
fild
stc
and
jle
mov
mov
xor
inc
xor
test
(bad)
jmp
jae
mov
jns
push
daa
inc
xor
adc
xor
mov
retf
ss
and
cmp
xlat
cmp
mov
mov
cmp
sub
sub
(bad)
mov
sub
cmp
cmp
adc
mov
test
inc
ja
cmp
cmp
cmp
das
movs
cmp
cmp
cmp
(bad)
(bad)
push
das
sar
mov
loop
pusha
cmp
dec
or
xor
push
sub
imul
call
ds
sub
jge
and
aas
mov
sar
dec
sub
mov
cmp
and
lahf
xor
xor
xor
test
(bad)
push
mov
xor
add
xor
xor
push
xor
xor
call
dec
xor
xor
daa
inc
xor
es
mov
dec
jmp
cld
or
cmp
lods
cmp
sub
cmp
cmp
cmp
pop
clc
rcr
sub
cmp
aad
cmp
pop
sub
cmp
xor
ds
sub
out
xor
jo
outs
mov
xor
xor
and
popf
xor
inc
and
xor
xor
xor
and
sbb
jecxz
shl
fdiv
loopne
and
pushf
add
iret
out
jg
jg
xor
nop
and
xor
and
xor
(bad)
out
cli
movs
xor
(bad)
adc
sbb
push
cmp
cmp
fdivrp
(bad)
mov
das
and
sub
cmp
sub
cmp
nop
das
inc
cmp
or
movs
pop
lds
push
and
aad
or
xlat
fadd
fcmovu
fmul
enter
fbstp
enter
loope
enter
jecxz
in
or
out
or
jmp
xor
and
out
out
xor
and
and
and
clc
or
stc
cli
sti
cld
or
enter
inc
pop
pop
add
jbe
pop
push
arpl
push
outs
cmc
ins
imul
pop
dec
jbe
push
sub
xor
inc
ins
popa
shl
loopne
adc
inc
inc
inc
inc
dec
xor
add
les
xor
xor
jbe
mov
ja
xor
pop
push
je
add
inc
daa
jb
ins
imul
jns
fs
daa
sbb
outs
jb
adc
and
loopne
les
mov
pop
add
xchg
and
jb
jne
ins
push
jne
and
je
fs
aad
mov
xor
adc
fs
and
and
imul
outs
and
jne
jb
push
es
imul
mov
sub
adc
xor
nop
pop
cmp
popa
sub
add
push
xor
fs
add
add
outs
jnp
add
mov
int3
(bad)
shl
cmps
cli
or
push
xor
shl
cwde
mov
dec
shl
fsubrp
cld
or
dec
xlat
popf
pop
sbb
outs
sub
cmp
dec
pop
xor
shl
jbe
mov
test
mov
dec
into
fsub
in
test
xchg
mov
or
jbe
add
add
add
add
and
push
push
jno
xor
add
inc
mov
push
gs
add
jle
stos
sbb
inc
add
adc
mov
push
stos
sub
push
add
xchg
mov
xchg
push
push
push
push
leave
test
stos
stos
sub
push
push
push
xchg
mov
xchg
push
push
and
stos
stos
fs
sbb
xor
dec
inc
push
lods
stos
mov
fadd
(bad)
and
add
jmp
sub
outs
push
out
out
js
push
jb
inc
movs
mov
jg
dec
imul
jne
mov
adc
adc
or
mov
jmp
adc
test
cmps
add
push
adc
push
iret
sub
push
(bad)
pop
sub
and
jge
sbb
sub
jp
dec
jae
(bad)
fst
push
je
dec
or
pop
fnstenv
dec
outs
popa
fs
outs
imul
push
outs
push
jo
mov
je
inc
push
ins
jae
pop
inc
mov
jbe
fsubr
mov
or
and
mov
aam
push
icebp
movnti
add
dec
mov
or
pop
pop
addr16
popa
sub
or
push
push
jo
outs
jbe
sti
shr
outs
or
or
lods
adc
je
jo
out
addr16
bound
mov
and
and
mov
push
xor
into
sahf
in
sbb
and
scas
data16
ja
enter
pop
ins
gs
arpl
mov
or
mov
and
popf
ins
pop
inc
cmc
jbe
add
mov
inc
push
clc
pop
(bad)
(bad)
clc
pop
add
in
loopne
push
loopne
lsl
add
cmp
pop
add
inc
adc
adc
inc
add
in
into
add
add
add
pop
add
fmul
inc
xor
add
adc
adc
addr16
adc
sbb
sar
add
add
aaa
sbb
add
ss
imul
and
pop
iret
add
shl
sti
mov
pop
fdiv
std
pusha
shr
jae
or
fsubr
daa
imul
mov
daa
inc
push
push
or
fcom
(bad)
fist
add
daa
je
inc
or
ins
jae
or
rcl
add
xor
xchg
arpl
mov
shl
add
or
add
add
add
adc
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
lea
lea
push
xor
stos
pop
dec
push
push
push
call
popa
lea
push
cmp
jne
sub
jmp
jmp
push
mov
cld
lods
test
je
push
pop
push
loop
call
jmp
pop
ret
add
fild
jecxz
inc
add
lock
add
fild
add
add
