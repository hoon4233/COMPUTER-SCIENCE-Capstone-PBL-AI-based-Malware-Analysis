jmp
mov
mov
sub
popa
sub
dec
fnstsw
cdq
or
or
cmp
push
jecxz
sbb
xlat
ja
cmps
push
mov
loopne
xchg
nop
ins
cmp
xchg
lods
test
scas
movs
aaa
cli
sbb
cwde
push
hlt
cdq
sbb
clc
xor
fcom
popa
leave
sub
mov
and
cmp
in
xchg
adc
call
sub
ficom
rcl
ror
aad
mov
push
pushf
pusha
cli
(bad)
or
cdq
pusha
lahf
shl
pop
pop
outs
out
push
pop
cld
sub
test
jnp
clc
xor
lahf
cmp
jmp
and
cmps
jl
lahf
out
jns
dec
mov
jnp
xchg
pop
jb
repz
mov
std
push
pushf
mov
dec
inc
ja
xor
push
push
shl
test
imul
scas
and
pop
xchg
jmp
mov
jae
in
add
push
sub
stc
movs
sar
lahf
loope
pop
mov
mov
test
sub
aad
mov
retw
push
lahf
jmp
dec
stos
mov
sbb
aad
mov
push
fcomp
push
data16
dec
mov
inc
scas
test
data16
pushf
xlat
jb
nop
jge
les
mov
test
leave
and
fstp
cli
mov
jle
rcr
xor
shl
imul
dec
test
push
xchg
in
ret
leave
dec
stc
xor
or
xchg
mov
test
inc
mov
cdq
addr16
ret
call
mov
jmp
ficom
ret
cmp
dec
adc
xor
stc
sub
ds
jns
mov
shr
dec
rcr
or
and
mov
and
sub
pop
mov
cmp
pushf
sub
gs
adc
gs
fwait
test
xchg
int3
mov
cwde
leave
test
pop
outs
cmp
dec
test
and
or
loope
xchg
mov
sub
mov
fistp
adc
and
in
inc
adc
cmp
dec
out
xor
sahf
je
jmp
test
pop
pushf
dec
hlt
dec
or
or
and
cmp
sub
test
sbb
cmp
adc
ins
jno
adc
mov
jmp
fs
dec
jmp
int3
cmps
inc
sub
lods
cld
int3
jns
sbb
std
(bad)
xchg
add
or
mov
xor
stos
jg
lahf
lods
jns
inc
xlat
adc
and
pusha
seto
repz
pusha
loopne
in
cdq
test
sub
add
call
icebp
sub
icebp
xor
ficomp
mov
sub
sbb
mov
lods
loope
fstp
pushf
lock
lods
lds
scas
and
push
jnp
push
xchg
fnstsw
push
dec
cdq
xor
and
(bad)
adc
scas
outs
adc
add
daa
adc
adc
outs
fnsave
push
lds
mov
sahf
mov
cmp
mov
mov
inc
mov
stc
shl
scas
ins
rcl
pop
aad
outs
sahf
test
push
pop
pop
jb
add
sbb
inc
push
(bad)
outs
xchg
xchg
cwde
outs
pop
out
fnstcw
fucomp
and
pop
call
add
push
jns
inc
push
scas
ins
in
bound
push
inc
movs
dec
xchg
xor
dec
or
xchg
fidiv
cmp
inc
jecxz
nop
daa
cmp
sar
fadd
lahf
lods
(bad)
pop
es
or
pop
je
std
inc
cmp
pop
stos
pop
aad
out
jmp
jbe
loop
add
cmp
cmp
xchg
mov
rep
cdq
push
pop
cwde
jnp
jo
and
sahf
mov
sbb
xor
xor
imul
jns
sbb
mov
or
mov
mov
sbb
push
jae
fist
cmp
aad
repz
push
loope
loop
rol
test
jb
jo
aad
jge
add
pushf
dec
jno
rol
xor
push
cmp
in
fwait
mov
push
lea
jns
lods
jmp
adc
movs
pop
jnp
cmps
inc
add
loop
xchg
mov
inc
and
fsubr
or
mov
xchg
into
inc
into
mov
pop
sub
and
mov
add
jo
hlt
(bad)
fnstsw
repnz
shl
or
adc
or
aaa
mov
arpl
loope
dec
fucomi
shl
mov
mov
(bad)
sbb
inc
mov
push
imul
jmp
sbb
hlt
aaa
and
mov
mov
xor
outs
scas
popa
cmp
adc
(bad)
adc
mov
inc
fdivr
cmp
mov
adc
push
jmp
call
fidiv
out
xchg
jnp
cmp
repnz
cmp
or
sub
push
mov
xchg
mov
xchg
ror
inc
mov
js
sub
dec
cmp
je
push
xor
add
push
dec
in
sbb
dec
popf
(bad)
jno
sub
jae
sbb
inc
sbb
xchg
inc
mov
stc
mov
mov
icebp
or
ficomp
out
mov
mov
jge
xchg
icebp
leave
sahf
jecxz
pop
fisttp
jle
adc
jb
shl
(bad)
out
push
push
sbb
mov
rcr
rcl
outs
test
out
and
repz
pop
jmp
sar
cmc
cmp
mov
loope
fs
push
mov
mov
xchg
pusha
xchg
pop
in
inc
add
rcl
cs
out
data16
adc
cwde
mov
or
or
lods
gs
pop
test
xor
es
push
mov
mov
sub
dec
pop
aaa
or
pushf
std
into
add
aaa
(bad)
jae
out
fwait
mov
sbb
cwde
sbb
xor
ja
addr16
sub
retf
xchg
test
rcl
fiadd
add
jnp
bswap
or
xchg
pop
cmp
mov
test
(bad)
mov
mov
in
enter
fsub
ror
mov
cmp
mov
les
or
xchg
cld
jmp
mov
jns
sbb
mov
(bad)
pop
pop
enter
inc
ror
mov
jmp
fmul
lahf
jae
outs
dec
jecxz
mov
dec
repz
inc
and
aad
test
pushf
adc
push
sbb
outs
inc
inc
jae
in
jmp
adc
push
seto
lods
popf
lds
gs
dec
outs
in
sub
int
mov
xchg
scas
rcr
mov
outs
jl
jmp
xlat
mov
jae
adc
mov
or
and
dec
enter
mov
rcr
outs
push
jmp
(bad)
imul
xchg
mov
jo
rcr
cmp
loope
mov
ror
arpl
(bad)
(bad)
mov
fwait
repnz
sti
push
arpl
xchg
outs
jnp
aad
and
int3
nop
xchg
nop
xchg
mov
sbb
mov
push
ss
stos
cwde
pusha
pop
add
jg
sub
and
mov
in
jle
stc
outs
mov
jo
cdq
std
inc
jne
or
jb
fld
hlt
jl
and
dec
outs
sub
push
sbb
cwde
add
mov
pop
push
(bad)
fdivr
outs
push
add
fild
nop
inc
adc
xor
jo
call
outs
jae
pop
adc
adc
cwde
rcl
rcr
sub
cmc
or
into
cmc
add
xor
in
ret
xor
ins
mov
mov
pop
std
jnp
ins
push
cld
fsub
call
test
mov
inc
jns
jmp
jle
ins
stc
inc
cmps
or
jl
cmp
fbld
jg
(bad)
js
xchg
and
sbb
or
nop
inc
jl
mov
jp
loop
inc
retf
popf
inc
sbb
ins
rcr
and
mov
mov
retf
loopne
jnp
loopne
nop
test
(bad)
cld
sbb
adc
je
pop
shl
inc
sbb
std
dec
mov
push
xchg
shr
xor
pusha
mov
aas
je
fdiv
fwait
dec
jge
xchg
mov
hlt
sbb
mov
sub
mov
mov
jae
adc
mov
cmp
adc
loope
or
aad
sbb
pop
and
enter
pop
aad
or
mov
imul
mov
dec
cmp
stos
nop
(bad)
sti
pop
pusha
lods
jmp
je
test
mov
adc
fldenv
mov
and
lahf
mov
dec
inc
mov
scas
(bad)
mov
and
mov
imul
dec
push
imul
jg
or
lods
cld
xchg
mov
inc
bound
arpl
mov
jge
call
push
mov
jne
je
dec
pop
rcr
mov
(bad)
call
inc
xchg
test
add
cld
ss
push
mov
jbe
mov
mov
sbb
pushf
jo
cmp
inc
inc
mov
sahf
dec
jo
shl
pop
pusha
cmp
js
aaa
loopne
mov
ins
xchg
sbb
cmp
scas
cmp
mov
inc
(bad)
dec
rol
jno
and
stc
xor
xor
stos
pop
push
add
fnstsw
mov
div
loope
mov
jnp
lds
cmp
iret
lds
and
pop
jg
out
pop
mov
outs
sub
retf
mov
cmp
test
cmp
ins
sti
sub
test
mov
cmp
jge
mov
cmp
jmp
adc
mov
add
pop
jo
or
int
call
retf
mov
ror
out
adc
stc
fdiv
sbb
es
sbb
dec
or
sbb
(bad)
(bad)
sub
mov
mov
sbb
sub
lds
mov
or
movs
je
mov
data16
lds
aaa
test
push
fstp
loope
xchg
lahf
jae
push
pop
popa
inc
sti
mov
arpl
(bad)
dec
stos
sets
push
xchg
mov
loop
lods
sub
fiadd
dec
jmp
daa
sbb
mov
cmp
loope
adc
mov
repz
push
push
cmp
push
lods
dec
mul
fstp
cld
shl
push
add
arpl
pop
ins
shl
rcl
shufps
mov
pop
std
repz
sahf
popa
cdq
jmp
mov
(bad)
fcmovne
push
std
in
xor
mov
enter
outs
or
mov
aam
and
push
bound
nop
stc
mov
cmps
mov
xor
sbb
cmp
jp
out
mov
xor
out
xchg
push
xor
aam
cs
sub
mov
adc
jmp
outs
rcl
sbb
and
adc
sub
push
dec
ror
adc
out
jmp
iret
cmps
xchg
sbb
mov
stc
fdivrp
mov
jl
add
(bad)
ror
inc
ss
push
das
into
cdq
add
neg
push
ror
push
xchg
adc
mov
shl
sub
(bad)
or
jl
ja
popa
xchg
out
test
sub
or
ja
stos
mov
pop
inc
(bad)
aas
test
push
mov
cmp
pop
ret
add
pop
enter
inc
push
fnsave
cmp
mov
inc
loop
sar
les
lods
jge
sub
lahf
pop
push
mov
leave
sahf
inc
or
loopne
fsubr
(bad)
push
sbb
jno
fidiv
imul
adc
push
sub
pop
fisubr
or
xor
add
xchg
lea
mov
jp
adc
mov
inc
pop
mov
sbb
jnp
cwde
repnz
dec
sub
fidivr
mov
xchg
xor
cmp
mov
inc
sbb
mov
in
pop
or
add
cld
sbb
loop
je
sbb
mov
xchg
icebp
into
mov
ret
sbb
push
in
jecxz
or
push
cmps
imul
inc
inc
xchg
and
out
sbb
stos
into
out
scas
aaa
cwde
stos
inc
xchg
mov
pop
loop
mov
je
mov
int
sub
push
pop
add
jne
jb
(bad)
mov
cld
pop
in
iret
fisubr
sub
cmc
(bad)
xchg
mov
rcl
dec
mov
das
data16
cdq
hlt
ret
clc
and
xchg
outs
jnp
enter
xchg
jne
add
fdivr
jnp
(bad)
fstp
mov
fsubr
push
fsubr
xor
jb
mov
fwait
out
and
dec
jb
bound
jecxz
mov
ret
jnp
push
call
(bad)
pop
stos
in
in
inc
call
inc
out
pop
xchg
shr
sub
test
nop
mov
pop
out
stos
push
add
div
in
iret
xchg
call
imul
dec
(bad)
push
fdiv
lea
xor
add
test
ds
mov
add
push
jge
pop
inc
stc
mov
jo
xchg
xor
fs
(bad)
jb
sub
mov
enter
imul
sar
sbb
out
shl
std
ins
lock
mov
rcl
imul
inc
dec
jmp
shr
mov
cs
mov
(bad)
cld
clc
xor
mov
cld
in
out
repnz
xchg
pop
jg
icebp
mov
mov
jne
mov
sub
jns
xchg
ss
ds
cmp
mov
popf
sbb
mov
outs
fldlg2
movs
inc
mov
jle
cdq
mov
mov
sbb
cld
fld
cmp
pop
movs
repz
pop
mov
jmp
aam
daa
arpl
pusha
leave
lahf
xor
xor
xchg
or
mov
push
sti
add
mov
int
dec
imul
sbb
cmp
ins
lahf
and
sub
adc
in
data16
in
test
test
mov
xor
clc
and
fimul
es
stc
aas
imul
pop
punpcklbw
call
fsub
push
adc
push
int
gs
push
jbe
ins
cmp
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
.byte
