lock
add
add
add
add
add
add
add
push
add
add
add
sub
jge
add
add
add
xor
add
add
add
and
or
jge
add
add
add
add
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jae
add
or
add
add
sub
add
or
add
sbb
add
in
add
add
add
push
inc
add
add
push
add
add
inc
add
add
jno
add
push
add
add
add
add
add
add
pop
push
add
and
push
pop
push
sub
add
push
add
push
pop
push
sub
add
push
and
add
add
sub
add
push
add
or
add
xor
pop
mov
add
mov
add
and
add
add
add
and
add
pop
jge
add
add
add
add
mov
cmp
(bad)
jmp
add
mov
mov
inc
inc
add
add
pop
(bad)
(bad)
inc
add
add
(bad)
inc
push
mov
add
add
add
add
pop
jge
add
add
add
add
mov
cmp
(bad)
(bad)
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
add
add
adc
add
add
add
aad
add
add
add
xor
add
add
adc
mov
or
or
add
add
add
add
inc
add
add
pop
add
add
or
add
add
add
inc
add
add
add
jg
add
push
or
add
add
pop
rol
jle
add
add
pop
inc
push
inc
or
add
add
sti
add
add
add
inc
or
add
add
pop
push
add
add
add
mov
or
cmps
push
sub
and
add
add
sub
jle
add
add
mov
rol
and
add
add
(bad)
(bad)
jmp
add
add
add
mov
or
push
(bad)
(bad)
ficom
fimul
sub
push
mov
sub
mov
stc
add
add
add
or
sub
jle
add
add
mov
rol
jle
add
add
pop
rol
jle
add
add
sub
or
add
add
add
cmp
add
add
imul
push
add
pop
push
add
add
fiadd
or
or
add
adc
fnsave
add
add
add
add
mov
or
or
inc
add
add
adc
add
adc
inc
add
add
jecxz
(bad)
dec
add
add
sub
and
add
add
sub
or
add
or
add
add
mov
or
into
sub
fadd
push
jae
add
or
mov
add
add
mov
or
or
inc
add
add
adc
add
adc
inc
add
add
jecxz
(bad)
call
add
add
sub
and
add
add
sub
pop
outs
adc
add
and
add
add
sub
fsub
sub
push
inc
add
add
and
add
adc
inc
pop
add
add
add
add
add
jae
add
mov
add
dec
add
add
add
push
or
or
add
pop
push
add
pop
pop
or
add
pop
rol
and
add
add
or
push
das
or
add
add
mov
or
mov
add
add
adc
mov
add
xor
and
add
add
sub
jle
add
add
xor
add
add
(bad)
(bad)
jmp
leave
adc
pop
push
add
add
(bad)
(bad)
jmp
add
add
add
mov
or
inc
(bad)
(bad)
(bad)
fiadd
fiadd
fiadd
push
inc
add
add
and
add
adc
inc
pop
add
add
add
dec
add
add
add
add
add
add
add
add
add
push
add
add
add
pop
rol
and
add
add
adc
and
add
sub
jle
add
add
pop
push
add
add
add
mov
or
xchg
sub
and
add
mov
or
mov
push
sub
and
add
add
(bad)
(bad)
jmp
add
add
add
pop
rol
and
add
add
(bad)
(bad)
jmp
add
add
add
mov
or
dec
(bad)
(bad)
(bad)
fstp
(bad)
jmp
fstp
(bad)
jmp
retf
xor
retf
xor
add
add
std
(bad)
inc
add
add
std
(bad)
inc
pop
mov
add
mov
add
push
mov
add
add
adc
sub
inc
les
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
retf
add
add
add
add
add
enter
mov
add
add
add
adc
add
add
add
ret
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
xor
add
add
add
add
and
out
pop
and
out
pop
mov
add
add
add
add
add
push
mov
add
add
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
jnp
add
add
add
xor
add
add
add
add
test
and
add
add
add
add
add
push
mov
add
add
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
add
jge
add
add
add
add
inc
add
add
add
add
fst
push
and
push
jo
mov
add
add
add
add
add
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
mov
add
add
add
add
add
add
xor
add
add
add
add
mov
dec
and
add
add
add
add
add
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
mov
add
add
add
jge
add
add
sbb
add
mov
add
add
add
push
inc
add
add
add
add
inc
or
add
aad
add
mov
add
adc
add
xchg
add
add
add
jecxz
add
xor
add
pop
add
add
add
add
add
jle
add
or
push
or
and
add
pop
sar
add
add
jnp
add
add
rol
add
popa
rol
and
add
add
jb
add
jo
adc
add
cmp
add
add
mov
sub
add
add
(bad)
inc
jnp
add
add
fiadd
add
mov
add
and
add
add
(bad)
jmp
aas
add
jnp
add
add
fld
add
pop
sar
add
add
add
add
mov
cmp
(bad)
jmp
mov
add
or
add
pop
and
pop
sub
add
push
and
add
add
(bad)
jmp
and
add
add
add
add
add
sar
add
add
add
add
mov
cmp
(bad)
(bad)
jmp
and
add
or
out
(bad)
(bad)
inc
cmp
jmp
or
add
mov
cmp
(bad)
(bad)
jmp
add
pop
add
add
jnp
add
add
and
add
add
(bad)
jmp
push
push
inc
inc
add
add
mov
add
add
push
mov
add
add
fiadd
fiadd
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
add
jno
add
jno
add
add
add
adc
add
sbb
add
outs
add
add
add
push
mov
push
adc
inc
add
add
add
add
push
inc
add
add
pop
add
add
push
inc
add
add
push
add
add
add
arpl
add
sub
add
push
or
add
add
ret
add
add
or
add
add
add
pop
rol
and
add
add
push
jle
add
add
daa
and
add
add
sub
push
jle
add
add
push
pop
push
add
add
add
mov
push
sub
add
add
(bad)
frstor
or
add
pop
push
add
add
add
sub
add
add
add
add
pop
rol
jle
add
add
dec
pop
push
add
stos
add
add
frstor
inc
add
add
pop
add
add
push
inc
add
add
jg
add
pop
add
add
add
sub
adc
add
add
pop
pop
rol
adc
add
add
add
mov
push
sub
adc
dec
and
add
add
sub
jle
add
add
sub
add
add
or
or
inc
inc
add
add
adc
add
add
push
mov
add
add
and
add
add
(bad)
(bad)
jmp
add
add
add
mov
push
cmp
(bad)
(bad)
fisub
ficomp
add
add
mov
push
sub
push
inc
add
add
pop
add
add
push
inc
add
add
xor
add
sbb
add
(bad)
(bad)
inc
add
add
push
pop
mov
adc
add
and
and
add
add
cmp
(bad)
(bad)
dec
pop
push
or
add
or
add
add
mov
push
sub
push
add
or
add
add
fidiv
add
add
mov
push
sub
push
inc
add
add
adc
add
adc
inc
add
add
jecxz
(bad)
call
add
add
sub
and
add
add
sub
or
add
or
add
add
mov
push
sub
sub
fcom
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
add
or
add
or
xor
(bad)
call
add
add
cwde
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
cmp
add
add
add
mov
sub
mov
stc
add
mov
add
mov
add
and
push
and
sbb
add
add
add
add
add
add
add
add
add
mov
add
add
sub
add
sbb
add
mov
add
add
mov
or
or
add
add
add
add
add
jo
jl
add
add
sbb
add
sub
add
or
add
add
pop
jge
add
add
adc
add
fisttp
add
and
and
and
add
add
add
add
add
add
add
add
add
push
mov
add
add
push
inc
add
add
daa
add
add
or
add
add
add
add
add
add
add
sub
add
rol
add
inc
add
add
adc
and
add
push
jge
add
add
add
add
add
gs
push
push
add
add
add
adc
sub
and
add
add
sub
add
push
sub
add
add
mov
or
xchg
jnp
add
add
fld
add
inc
push
inc
sub
adc
add
add
add
out
add
add
or
add
add
mov
or
push
(bad)
(bad)
call
add
cmp
add
add
mov
or
inc
(bad)
(bad)
jmp
add
add
sbb
add
add
add
sbb
add
sub
add
or
and
add
add
(bad)
(bad)
jmp
add
push
add
add
(bad)
(bad)
(bad)
fisttp
fld
push
add
or
jb
add
jo
lea
add
add
push
adc
push
add
add
sbb
add
mov
add
or
jb
add
jo
lea
pop
adc
push
add
add
sbb
adc
pop
jb
add
jo
adc
sbb
add
add
adc
sbb
add
jo
adc
sub
add
or
add
add
push
jge
add
add
push
fisub
add
mov
sub
mov
stc
add
inc
add
add
sbb
add
adc
inc
add
add
add
add
add
add
inc
add
add
adc
outs
pop
add
or
add
push
mov
add
and
add
add
cmp
add
add
sub
add
or
and
add
add
sub
or
add
and
add
mov
or
mov
call
lea
and
add
add
cmp
(bad)
(bad)
call
inc
add
add
pop
add
add
or
add
add
add
add
add
cmp
adc
add
or
add
or
jb
add
jo
imul
add
or
and
add
add
pop
jb
add
jo
adc
add
sub
and
add
add
sub
add
jnp
add
add
jnp
add
add
add
add
add
jge
add
add
add
add
mov
or
xchg
add
and
add
push
jge
add
add
add
add
mov
or
push
imul
push
or
add
add
push
jge
add
add
fisub
add
add
add
sub
push
push
add
add
add
add
add
jnp
add
add
jge
add
add
add
add
add
mov
add
pop
jge
add
add
and
add
pop
jge
add
add
loope
(bad)
jmp
fstp
(bad)
(bad)
inc
outs
and
add
or
add
add
mov
or
arpl
(bad)
jmp
pushf
adc
add
add
add
cmp
add
cmp
add
push
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
dec
add
add
add
xchg
add
add
add
add
add
add
xor
xchg
add
add
add
adc
pop
or
and
or
mov
add
add
add
add
add
pop
mov
add
mov
add
push
mov
add
add
add
add
push
jge
add
add
lea
add
lea
add
add
push
push
jle
add
add
push
pop
jb
add
jo
push
sub
add
or
add
and
add
pop
jge
add
add
and
add
pop
jge
add
add
add
fiadd
sub
push
mov
sub
mov
stc
add
add
add
add
add
test
add
xor
add
add
add
add
add
sub
add
or
add
xor
add
add
add
add
and
stc
data16
stc
data16
add
add
add
add
add
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
mov
add
add
jle
add
or
sub
sbb
add
add
add
adc
mov
or
or
add
add
add
add
add
add
sldt
add
rol
fnsave
add
add
(bad)
add
add
inc
add
add
inc
add
add
mov
add
mov
add
adc
inc
or
add
add
add
sub
add
add
add
add
add
sbb
add
lahf
add
add
add
add
add
add
add
pop
adc
add
mov
sub
mov
stc
add
pop
add
add
adc
mov
inc
and
add
add
cmp
add
or
add
pop
xchg
add
add
popa
add
rcr
add
and
add
add
(bad)
(bad)
(bad)
cmp
add
add
adc
and
add
add
(bad)
(bad)
(bad)
cmp
add
add
or
add
mov
or
xor
(bad)
inc
mov
call
or
add
mov
or
sbb
(bad)
jmp
ret
add
add
pop
add
add
or
add
add
add
add
add
xchg
add
jae
add
or
push
push
push
jle
add
add
pop
rol
jle
add
add
pop
rol
jle
add
add
sldt
add
rol
jle
add
add
pop
rol
jle
add
add
pop
rol
and
add
add
adc
and
add
add
and
add
(bad)
(bad)
jmp
add
push
pop
push
adc
and
add
add
(bad)
(bad)
jmp
add
add
add
mov
or
push
(bad)
(bad)
(bad)
fnstsw
add
fnsave
add
push
adc
adc
add
(bad)
(bad)
(bad)
cmp
add
add
inc
add
add
and
add
adc
inc
pop
add
add
add
add
add
add
add
add
data16
add
add
or
jle
add
or
jle
add
add
cmp
adc
add
adc
add
pop
rol
and
add
add
push
pop
sub
add
or
and
add
add
sub
add
add
mov
or
lea
push
sub
add
or
and
adc
cmp
(bad)
jmp
add
add
jo
lea
add
add
pop
adc
push
jb
add
jo
adc
pop
jb
add
jo
adc
sub
add
or
push
add
add
(bad)
(bad)
jmp
sbb
sldt
add
pop
rol
and
add
add
(bad)
(bad)
jmp
mov
add
add
mov
or
push
(bad)
(bad)
(bad)
fisubr
fisubr
and
add
mov
or
cmp
(bad)
call
add
test
(bad)
jmp
or
add
mov
or
and
(bad)
(bad)
cmp
mov
pop
lea
add
add
add
add
mov
or
pop
std
(bad)
jmp
lods
mov
mov
add
add
add
cld
(bad)
inc
add
add
cld
(bad)
inc
push
mov
add
add
sub
add
cld
(bad)
inc
cmp
jmp
or
add
mov
or
mov
jl
(bad)
call
inc
add
add
pop
add
add
or
add
add
add
aaa
add
add
add
add
add
or
add
sldt
add
rol
jle
add
add
pop
rol
and
add
add
or
add
sub
jle
add
add
pop
rol
and
add
add
sub
and
add
add
fstp
std
(bad)
jmp
fstp
std
(bad)
call
adc
add
add
mov
or
and
(bad)
(bad)
cmp
cld
(bad)
(bad)
jle
add
add
pop
rol
jle
add
add
adc
add
rol
jle
add
add
sldt
add
rol
fstp
sti
(bad)
jmp
fstp
sti
(bad)
dec
sub
inc
add
add
add
and
add
add
add
add
add
add
add
add
jmp
add
jnp
cmp
push
adc
add
add
sbb
dec
add
adc
add
add
add
inc
add
add
add
add
sub
sub
inc
inc
add
add
add
add
or
add
add
add
mov
sub
mov
stc
add
push
mov
add
add
pop
mov
add
mov
add
add
add
add
add
xor
add
add
add
add
inc
scas
das
inc
and
inc
mov
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
pop
mov
add
mov
add
push
mov
add
add
add
jge
add
add
sbb
add
mov
add
adc
inc
add
add
push
add
add
inc
add
add
inc
add
add
add
adc
add
arpl
add
push
push
push
or
push
push
and
add
add
pop
dec
cs
and
mov
and
mov
mov
add
add
add
add
add
push
mov
add
add
and
add
add
add
add
add
sldt
add
rol
and
add
add
add
and
push
pop
pop
sub
add
push
and
add
add
(bad)
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
sub
add
add
add
add
mov
add
add
xor
add
add
add
add
adc
inc
add
add
push
add
add
inc
add
add
add
add
add
xchg
add
add
add
jle
add
add
adc
add
pop
inc
pop
rol
and
stos
test
xor
add
add
add
add
add
add
add
add
push
mov
add
add
and
add
add
sub
add
push
and
add
add
xor
mov
add
mov
add
and
add
add
add
and
push
pop
pop
push
push
and
add
add
(bad)
jmp
add
add
add
mov
cmp
(bad)
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
add
adc
add
add
add
add
add
xor
add
add
add
add
and
xchg
lock
mov
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
push
mov
add
add
pop
mov
add
mov
add
add
add
add
add
xor
add
add
add
add
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
test
pushf
xor
test
pushf
xor
add
add
add
add
push
mov
add
add
add
jge
add
add
sbb
add
mov
add
adc
inc
add
add
push
add
add
inc
add
add
adc
add
and
add
add
add
or
add
or
and
add
add
add
adc
add
das
dec
and
add
add
add
add
add
sldt
add
rol
and
xchg
push
and
addr16
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
push
mov
add
add
and
add
add
add
sub
add
push
and
push
add
mov
cmp
(bad)
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
sub
add
add
add
add
add
mov
add
add
xor
add
add
add
add
add
sub
add
or
jae
add
or
sbb
add
add
sub
add
push
add
sub
add
sub
xor
add
add
add
add
and
cmps
adc
pop
mov
add
add
add
add
add
push
mov
add
add
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
jnp
add
add
add
xor
add
add
add
add
scas
sahf
adc
and
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
add
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
add
add
sbb
add
jl
add
or
add
push
mov
push
adc
inc
add
add
add
add
jle
add
add
sldt
add
rol
jle
add
add
adc
add
rol
jle
add
add
sldt
add
rol
jle
add
add
pop
rol
fimul
fimul
mov
add
mov
add
adc
push
inc
add
add
sub
add
adc
inc
or
add
scas
add
add
add
mov
add
sbb
add
movs
add
add
add
add
add
and
add
adc
add
or
add
add
cmp
inc
add
add
pop
add
add
push
inc
add
add
jbe
add
test
add
pop
add
add
add
push
adc
pop
adc
jle
add
add
or
add
or
add
add
adc
add
rol
jle
add
add
sldt
add
rcl
or
add
add
or
dec
pop
rol
and
add
add
adc
sub
and
add
add
sub
jle
add
add
or
or
add
add
add
mov
push
cmp
(bad)
jmp
add
add
add
mov
push
cmp
(bad)
fnstsw
add
fnstsw
add
push
inc
add
add
pop
add
add
push
inc
add
add
cmp
add
dec
add
add
add
add
adc
push
add
add
pop
rol
jle
add
add
pop
rol
jle
add
add
xor
adc
add
add
add
mov
push
sub
xor
add
sub
jle
add
add
pop
rol
and
add
add
sub
and
fidiv
dec
and
fidiv
dec
mov
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
push
mov
add
add
and
add
add
(bad)
(bad)
(bad)
fld
fnstsw
add
or
imul
add
mov
push
cmp
(bad)
(bad)
(bad)
cmp
(bad)
call
inc
add
add
xor
add
adc
inc
or
add
mov
add
ins
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
pop
sbb
add
inc
or
add
add
mov
push
sub
add
sldt
add
or
or
add
mov
push
sub
add
add
push
sub
or
or
add
add
fiadd
add
inc
inc
or
add
add
adc
add
rol
and
add
add
(bad)
(bad)
inc
sub
and
add
add
(bad)
(bad)
jmp
xor
add
add
mov
push
cmp
(bad)
inc
sub
add
(bad)
(bad)
dec
jle
add
add
dec
and
adc
cmp
(bad)
jmp
and
add
add
inc
add
popa
rol
and
add
mov
push
cmp
(bad)
(bad)
jmp
mov
add
pop
rol
and
add
add
(bad)
(bad)
jmp
add
or
add
mov
push
cmp
(bad)
(bad)
(bad)
fiadd
fiadd
push
lea
add
add
add
adc
push
add
add
cld
(bad)
(bad)
cmp
adc
jle
add
add
adc
add
add
adc
add
pop
rol
jle
add
add
sbb
push
pop
jle
add
add
rol
adc
pop
pop
rcl
push
adc
pop
pop
rcl
push
jle
add
add
pop
rol
fiadd
fiadd
add
adc
cmp
(bad)
call
or
mov
mov
add
add
cld
(bad)
jmp
jne
adc
add
pop
xchg
pushf
adc
pop
pop
adc
and
add
mov
push
cmp
cld
(bad)
jmp
cmp
adc
push
adc
and
add
add
cld
(bad)
jmp
stos
adc
or
adc
xchg
pushf
adc
pop
pop
adc
adc
pop
pop
adc
and
add
add
sti
(bad)
jmp
xchg
add
or
jle
add
add
adc
add
pop
sub
add
add
shl
mov
add
or
adc
add
adc
add
dec
pop
pop
pop
jle
add
add
pop
rol
jle
add
add
push
rol
jle
add
add
pop
rol
fst
jmp
fisttp
(bad)
inc
adc
or
add
adc
add
adc
add
add
mov
push
cmp
(bad)
(bad)
fidiv
sub
jle
add
add
pop
rol
fiadd
fiadd
fiadd
jae
add
or
jle
add
add
pop
jle
add
add
rol
jle
add
add
pop
rol
jle
add
add
pop
rol
jle
add
add
adc
add
rol
jle
add
add
pop
rol
fucomp
cli
(bad)
jmp
fucom
cli
(bad)
jmp
add
mov
sub
mov
stc
add
or
inc
hlt
add
push
add
add
add
add
add
adc
add
add
add
mov
add
stos
add
add
add
push
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
xchg
add
add
add
add
add
add
add
add
add
fadd
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
pusha
add
add
add
add
add
add
add
add
add
add
add
add
addr16
add
adc
add
adc
add
cmp
add
add
repnz
pop
adc
repnz
pop
adc
inc
inc
add
add
add
add
or
add
add
add
mov
sub
mov
stc
add
push
mov
add
add
pop
mov
add
mov
add
sub
add
or
add
cwde
add
add
add
add
pop
adc
adc
add
add
add
add
add
push
mov
add
add
jae
add
or
add
sub
ret
add
add
jge
add
add
and
push
pop
pop
sub
add
push
add
add
pop
push
add
adc
add
adc
add
rol
add
push
pop
push
sub
add
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
sub
adc
add
add
add
add
adc
add
add
add
inc
add
add
add
add
add
mov
sub
mov
stc
add
push
call
call
add
add
add
add
add
pop
mov
add
mov
add
push
mov
add
add
add
add
add
add
xor
add
add
add
add
add
mov
sub
mov
stc
add
mov
add
mov
add
and
and
xor
out
(bad)
xor
add
add
add
add
push
mov
add
add
add
jge
add
add
sbb
add
test
add
add
adc
inc
add
add
and
add
or
add
add
add
mov
add
add
add
add
add
add
add
push
or
or
sub
add
push
jle
add
add
rol
and
or
mov
and
add
mov
sub
sub
add
push
pop
pop
shr
and
add
and
add
add
pop
and
add
add
sub
and
add
add
iret
add
add
pop
push
add
in
push
jb
and
push
jb
mov
add
add
add
(bad)
inc
add
add
(bad)
inc
push
mov
add
add
and
add
add
(bad)
jmp
cmps
and
add
add
(bad)
(bad)
fiadd
fiadd
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
add
add
add
add
(bad)
add
adc
add
add
add
inc
add
add
add
add
nop
mov
sbb
nop
mov
sbb
add
add
add
add
pop
mov
add
mov
add
push
mov
add
add
sub
push
mov
sub
mov
stc
add
jnp
add
add
add
xor
add
add
add
add
inc
dec
fisubr
and
fisubr
mov
add
add
add
add
add
pop
mov
add
mov
add
push
mov
add
add
sub
push
mov
sub
mov
stc
add
add
add
add
add
add
inc
add
add
add
add
mov
mov
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
mov
add
push
mov
add
add
sub
push
mov
sub
mov
stc
add
jnp
add
add
add
xor
add
add
add
add
lea
nop
les
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
mov
add
push
mov
add
add
sub
push
mov
sub
mov
stc
add
add
add
add
adc
add
sub
add
add
add
add
push
add
or
add
add
add
push
push
and
add
add
sub
add
push
add
sub
add
push
add
sub
add
push
sub
sbb
add
cmp
add
adc
inc
add
add
and
add
pop
inc
pop
add
add
add
add
add
add
add
add
add
add
push
add
add
add
sub
jnp
add
add
sub
add
push
jle
add
add
pop
rol
jle
add
add
push
add
add
rol
add
push
pop
push
sub
add
and
add
mov
sub
add
push
xor
pop
cli
mov
and
sub
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
pop
mov
add
mov
add
push
mov
add
add
and
add
add
(bad)
jmp
inc
add
add
add
sub
add
push
pop
push
and
or
cs
(bad)
jmp
inc
and
add
add
(bad)
inc
sub
add
push
push
xor
add
add
mov
cmp
(bad)
(bad)
jmp
rol
sub
add
push
pop
push
pop
shr
and
add
and
add
add
(bad)
jmp
mov
add
(bad)
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
add
add
add
sub
add
add
add
add
add
add
xor
add
add
add
add
and
jge
arpl
cmp
arpl
add
add
add
add
add
add
add
mov
sub
mov
stc
add
push
mov
add
add
pop
mov
add
mov
add
add
add
add
add
xor
add
add
add
add
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
shr
pop
and
jmp
add
add
add
add
add
push
mov
add
add
add
jge
add
add
sbb
add
in
add
or
inc
add
add
cmp
add
and
and
mov
add
add
add
add
add
push
mov
add
add
pop
inc
add
add
pop
add
add
add
add
add
or
add
and
add
sbb
pop
sub
jle
add
add
push
push
jle
add
add
scas
add
add
adc
add
add
and
add
pop
punpcklwd
add
push
and
add
add
add
sub
add
sub
add
add
mov
cmp
(bad)
jmp
add
add
add
pop
rol
and
add
add
(bad)
jmp
add
add
add
mov
cmp
(bad)
(bad)
fiadd
fiadd
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
add
add
add
retf
add
add
add
xor
push
add
add
add
adc
mov
or
or
add
add
add
add
inc
add
add
and
add
adc
inc
pop
add
add
add
add
add
add
add
add
add
mov
add
imul
add
add
or
jle
add
or
jb
add
jo
lea
add
add
pop
adc
push
add
add
add
or
push
add
add
daa
add
or
add
or
jle
add
add
pop
rol
and
add
add
push
pop
sub
add
or
and
add
add
(bad)
(bad)
jmp
push
add
push
pop
pop
push
push
and
adc
cmp
jmp
jge
jle
add
add
sub
add
push
pop
jle
add
add
pop
adc
add
add
add
add
mov
or
sub
(bad)
jmp
add
add
add
mov
or
sbb
(bad)
jmp
jae
mov
mov
inc
add
add
mov
(bad)
inc
add
add
push
mov
add
add
pop
jb
add
jo
and
add
sub
and
add
mov
or
(bad)
(bad)
(bad)
cmp
(bad)
jmp
add
add
mov
or
enter
fisubr
imul
add
add
add
or
add
add
add
add
add
add
sub
adc
adc
add
add
jmp
add
popa
push
and
add
add
push
pop
pop
shr
and
add
add
add
pusha
pop
push
and
add
add
add
iret
add
add
sub
add
ficomp
cmp
add
add
xor
and
add
add
cmp
inc
add
add
pop
add
add
or
add
add
add
je
add
dec
add
add
add
push
adc
jle
add
add
pop
rol
add
add
add
adc
add
shr
and
add
and
add
add
adc
add
sub
add
xor
pop
mov
add
mov
add
and
add
add
sub
add
push
pop
push
sub
add
and
add
add
sub
and
add
add
(bad)
(bad)
(bad)
(bad)
add
add
ffree
add
add
inc
add
add
pop
add
add
or
add
add
add
xor
add
inc
add
add
add
push
push
add
jnp
add
add
xor
sub
add
add
add
add
adc
add
shr
and
add
or
push
or
add
or
sub
add
push
xor
add
sub
jle
add
add
pop
rol
and
add
add
sub
and
add
add
(bad)
(bad)
(bad)
fiadd
fiadd
and
add
add
(bad)
(bad)
jmp
add
mov
sub
mov
stc
add
cmp
add
add
mov
or
es
(bad)
(bad)
cmp
(bad)
(bad)
inc
jnp
add
add
aas
add
push
or
jnp
add
add
cmp
add
add
push
add
add
add
add
add
adc
add
add
add
jne
add
inc
add
add
add
adc
add
add
add
fiadd
add
call
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
xor
push
add
add
add
adc
mov
or
or
add
add
add
add
push
jle
add
add
pop
rol
push
pop
and
push
pop
or
add
add
push
jle
add
add
pop
rol
jle
add
add
pop
rol
jle
add
add
push
add
add
pop
inc
pop
rol
ficom
fimul
sub
push
mov
sub
mov
stc
add
sub
push
jle
add
add
pop
rol
pop
pop
pop
jle
add
add
pop
jle
add
add
pop
or
add
add
pop
rol
jle
add
add
pop
adc
add
or
add
add
pop
rol
fiadd
fiadd
push
inc
add
add
adc
add
adc
inc
add
add
cmp
add
add
add
sub
add
push
or
add
add
mov
or
fst
mov
add
mov
add
sub
push
add
add
push
add
add
rol
jle
add
add
pop
rol
jle
add
add
pop
rol
jle
add
add
jg
rol
(bad)
add
add
ffree
add
add
jae
add
push
adc
add
(bad)
(bad)
jmp
movs
push
inc
add
add
pop
add
add
or
add
add
add
add
add
add
fdivr
or
or
inc
add
add
dec
add
add
add
add
add
add
mov
add
add
push
or
add
inc
popa
or
add
add
add
pop
rol
and
add
add
or
add
add
and
add
add
mov
or
mov
add
add
pop
rcl
add
add
add
mov
or
jne
(bad)
jmp
add
add
add
mov
or
data16
(bad)
(bad)
fld
(bad)
jmp
fnstsw
(bad)
(bad)
call
add
add
adc
and
add
add
(bad)
(bad)
(bad)
fnsave
add
add
sub
push
push
push
jle
add
add
pop
rol
adc
and
add
add
adc
jle
add
add
pop
rol
fiadd
fiadd
fiadd
push
inc
add
add
pop
add
add
or
add
add
add
add
add
add
add
add
add
or
pop
push
adc
jle
add
add
pop
rol
jle
add
add
adc
add
rol
jle
add
add
pop
rol
jle
add
add
or
adc
add
adc
add
pop
rol
jb
add
jo
lea
add
add
or
or
jg
add
add
daa
add
or
push
add
add
daa
add
or
add
or
pop
and
add
add
(bad)
(bad)
call
pop
jb
add
jo
and
add
sub
and
add
add
(bad)
(bad)
jmp
add
or
adc
adc
add
add
add
mov
or
and
add
add
add
mov
or
push
(bad)
(bad)
(bad)
fstp
std
(bad)
jmp
fst
std
(bad)
call
or
add
add
add
pop
add
add
add
add
add
adc
add
add
add
outs
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
outs
add
add
add
add
add
add
add
add
add
add
add
stc
add
add
add
push
add
add
add
add
xor
add
add
add
jle
call
mov
add
add
add
add
add
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
mov
add
add
sub
add
adc
add
pop
add
add
add
add
sub
add
or
add
xor
add
add
adc
add
add
mov
sub
and
xor
jns
inc
inc
add
add
outs
add
add
add
add
add
add
mov
add
add
pop
mov
add
mov
add
push
inc
add
add
adc
add
pop
inc
add
add
inc
add
add
add
jle
add
add
sub
add
or
and
add
add
add
add
jo
pop
add
add
sub
add
outs
sub
add
jae
add
or
push
sbb
add
add
add
mov
sub
mov
stc
add
add
add
add
add
add
add
inc
add
add
add
add
test
outs
and
enter
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
add
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
jle
add
add
add
add
add
inc
add
add
add
add
aad
or
sbb
add
add
add
add
or
add
add
add
mov
sub
mov
stc
add
push
mov
add
add
pop
mov
add
mov
add
add
sub
adc
add
pop
add
add
add
adc
les
sbb
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
pop
mov
add
mov
add
push
mov
add
add
sub
add
push
jb
add
jo
push
add
add
add
or
push
je
add
sbb
sbb
add
in
add
add
add
push
inc
add
add
push
add
add
inc
add
add
add
add
add
je
add
inc
add
add
and
push
pop
pop
push
push
jle
add
add
push
sbb
add
and
push
pop
pop
shr
cmp
add
add
sub
add
push
pop
jns
push
push
and
add
add
sub
add
push
pop
cmp
sub
add
add
mov
sub
sub
add
push
pop
pop
push
push
and
add
add
(bad)
jmp
add
add
add
mov
cmp
(bad)
jmp
aam
pushf
add
aam
pushf
add
add
add
add
add
push
mov
add
add
pop
mov
add
mov
add
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
add
add
add
add
aam
add
adc
add
sbb
add
add
add
adc
mov
or
add
add
add
add
add
add
pusha
push
sbb
add
and
add
(bad)
add
add
sbb
add
(bad)
push
or
adc
jle
add
add
push
and
add
and
add
push
and
add
or
xor
or
or
or
push
push
adc
push
adc
adc
push
pop
add
add
or
pop
adc
frstor
add
fstp
add
push
adc
jae
add
or
adc
pop
pop
push
pop
pop
pop
push
push
pop
add
add
and
add
or
add
adc
fst
add
add
fisttp
add
add
inc
add
add
push
add
add
or
add
add
adc
add
add
add
xchg
add
fadd
add
adc
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
jl
add
cmps
add
add
adc
pop
adc
push
add
add
jle
add
add
and
add
and
add
mov
or
and
adc
call
or
or
add
inc
and
add
add
(bad)
(bad)
call
cmp
add
add
add
add
mov
or
(bad)
jle
add
add
pop
add
add
int
add
and
add
add
(bad)
(bad)
(bad)
cmp
or
add
add
inc
push
add
inc
adc
or
inc
adc
and
add
add
(bad)
(bad)
call
or
or
jo
pop
add
add
(bad)
(bad)
jmp
cwde
and
add
add
(bad)
(bad)
call
or
inc
sub
add
adc
jmp
add
mov
inc
mov
add
add
add
add
add
add
inc
add
add
push
mov
add
add
push
cmp
(bad)
jmp
add
add
mov
or
call
or
inc
sub
or
add
mov
or
call
or
outs
and
add
add
(bad)
(bad)
jmp
and
sldt
add
(bad)
(bad)
call
sub
adc
add
add
mov
or
jmp
aas
and
add
add
(bad)
(bad)
(bad)
jle
add
add
and
add
(bad)
(bad)
(bad)
jmp
add
add
mov
or
(bad)
cmp
(bad)
(bad)
call
or
push
add
add
(bad)
(bad)
jmp
and
add
add
(bad)
(bad)
(bad)
fst
fisttp
sldt
add
push
inc
add
add
dec
add
add
or
add
add
add
add
add
add
add
add
add
add
loopne
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
sbb
inc
stc
cld
(bad)
jmp
push
add
add
cmp
xchg
or
or
add
mov
or
add
add
add
push
add
push
adc
or
add
mov
or
jmp
adc
pop
add
add
push
sbb
add
(bad)
es
adc
jle
add
add
push
and
add
pop
add
add
jp
pop
sbb
add
pop
add
add
lods
add
add
and
add
and
add
and
add
sbb
add
pop
add
add
pop
add
add
and
add
fisttp
add
and
adc
call
add
aaa
add
add
add
add
mov
or
(bad)
cmp
pop
adc
adc
imul
and
add
add
(bad)
(bad)
jmp
add
inc
add
add
pop
add
add
or
add
add
jle
add
inc
add
add
add
push
adc
push
adc
jle
add
add
push
and
add
push
push
pop
add
add
and
add
push
pop
pop
adc
adc
push
and
add
pop
dec
push
sbb
add
add
add
mov
or
sub
add
mov
or
jle
add
add
aaa
push
add
inc
adc
and
add
add
(bad)
(bad)
jmp
add
add
add
mov
or
(bad)
fnstsw
add
add
fnstsw
add
add
add
sbb
add
or
add
mov
or
(bad)
cmp
add
add
mov
pop
lea
add
add
add
or
adc
(bad)
cmp
add
add
inc
add
add
pop
add
add
or
add
add
popa
add
add
add
add
add
or
jg
add
add
sbb
stc
add
jo
sbb
add
or
add
add
mov
or
add
and
add
sub
and
add
add
sub
jle
add
add
push
sbb
add
add
add
mov
or
and
add
add
(bad)
std
(bad)
jmp
(bad)
std
(bad)
call
mov
add
mov
add
and
add
add
std
(bad)
inc
pop
pop
pop
inc
js
add
and
add
add
std
(bad)
jmp
add
mov
sub
mov
stc
add
icebp
cli
(bad)
call
inc
add
add
pop
add
add
or
add
add
sbb
add
add
add
add
adc
add
punpckhdq
and
add
add
add
mov
or
and
and
add
add
sub
adc
and
add
add
sub
and
add
add
ffree
std
(bad)
jmp
fnstsw
inc
add
add
pop
add
add
or
add
add
push
add
add
add
add
add
push
or
or
add
push
and
add
sbb
add
add
add
add
mov
or
test
add
sbb
add
sub
or
pop
push
add
mov
or
and
add
add
frstor
(bad)
(bad)
jmp
frstor
(bad)
(bad)
(bad)
jle
add
add
and
add
sbb
add
fst
(bad)
jmp
add
add
mov
or
inc
cmp
(bad)
(bad)
jmp
or
add
mov
or
jmp
cmp
or
add
mov
or
call
add
sbb
(bad)
jmp
push
add
add
sti
(bad)
(bad)
cmp
pop
add
add
push
sbb
add
sub
fisubr
and
add
add
sti
(bad)
inc
mov
cmp
cld
(bad)
jmp
add
add
mov
or
(bad)
cmp
add
add
add
add
xor
add
xor
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
xchg
add
add
adc
add
add
add
(bad)
add
add
dec
push
add
push
add
add
add
add
add
add
add
jns
add
mov
add
adc
add
add
add
int
add
adc
push
add
push
add
add
add
add
add
add
pop
add
sldt
add
pop
add
add
add
adc
add
add
add
inc
add
add
add
add
icebp
cmps
or
and
cmps
or
mov
add
add
add
add
add
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
mov
add
add
add
add
add
add
xor
add
add
add
add
mov
add
mov
add
and
test
jg
inc
inc
add
add
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
mov
add
add
add
jge
add
add
adc
add
adc
add
add
sub
add
or
push
sub
add
push
add
sub
add
push
sub
add
add
add
inc
add
add
add
add
sar
mov
and
ds
mov
add
add
add
add
add
push
mov
add
add
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
jnp
add
add
add
xor
add
add
add
add
test
mov
sub
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
add
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
add
add
adc
add
cmp
add
add
mov
add
mov
add
and
mov
mov
inc
add
add
add
add
add
add
add
add
add
mov
add
add
sub
push
mov
sub
mov
stc
add
add
add
xor
add
add
adc
add
and
push
jne
inc
or
add
add
add
add
add
push
mov
add
add
jae
add
or
push
or
add
add
pop
rol
jb
add
jo
and
add
daa
add
or
xor
add
and
add
add
fiadd
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
sub
add
adc
add
add
add
add
adc
add
sbb
add
add
add
push
mov
movups
inc
add
add
add
add
pop
mov
add
mov
add
push
inc
add
add
adc
add
adc
inc
add
add
sbb
add
xor
add
enter
sub
push
mov
sub
mov
stc
add
or
add
add
mov
(bad)
aad
fild
add
or
xor
add
outs
xor
add
rol
add
sub
add
or
add
or
add
or
add
adc
sub
push
inc
add
add
and
add
adc
inc
pop
add
add
add
add
add
add
add
mov
add
pop
add
add
add
push
adc
push
push
or
jnp
add
add
jnp
add
add
push
or
sub
add
and
add
and
add
pop
sar
add
add
and
add
pop
rol
and
add
add
adc
pop
push
and
add
adc
sub
pop
inc
pop
push
or
push
add
add
(bad)
(bad)
jmp
add
add
add
mov
(bad)
(bad)
(bad)
call
or
mov
xor
and
add
add
(bad)
(bad)
jmp
add
jle
add
add
and
add
sar
add
add
add
add
mov
(bad)
(bad)
(bad)
jmp
add
mov
mov
inc
inc
add
add
sar
(bad)
inc
add
add
(bad)
(bad)
inc
push
mov
add
add
and
add
add
(bad)
(bad)
(bad)
fiadd
fiadd
adc
add
push
add
push
or
pop
or
xor
push
adc
push
add
push
adc
pop
jle
add
add
das
pop
push
adc
jmp
fnstsw
(bad)
push
add
or
or
or
aaa
add
or
add
or
add
or
or
add
add
mov
(bad)
(bad)
(bad)
(bad)
cmp
add
push
adc
adc
and
push
and
add
and
add
sar
add
add
call
add
add
inc
add
add
pop
add
add
cmovne
add
fld
add
into
add
add
add
add
add
or
push
or
jb
add
jo
lea
or
or
add
inc
add
push
mov
jl
add
add
daa
add
or
popa
add
jo
adc
sbb
add
add
adc
sub
add
or
inc
add
push
add
add
jo
lea
add
add
or
or
jg
add
add
daa
add
or
outs
add
jo
adc
sbb
add
sub
add
and
add
add
(bad)
(bad)
inc
pop
inc
xor
add
add
mov
(bad)
(bad)
(bad)
jmp
add
add
jo
lea
add
add
or
jnp
add
adc
or
and
add
add
(bad)
(bad)
jmp
add
add
add
mov
(bad)
(bad)
(bad)
(bad)
frstor
fstp
test
add
and
add
adc
adc
jb
add
jo
cmp
add
sub
add
or
sub
add
or
add
cld
(bad)
(bad)
cmp
and
add
pop
rol
jle
add
add
pop
rol
add
add
pop
sar
add
add
add
add
add
and
sar
add
add
and
add
pop
rol
fnstsw
(bad)
jmp
fnsave
(bad)
inc
sub
add
add
add
jnp
add
sbb
add
xchg
add
add
add
add
add
add
add
add
add
push
add
add
add
stos
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
adc
add
sbb
add
mov
add
adc
inc
add
add
push
add
add
inc
add
add
and
add
jp
add
inc
add
add
add
add
or
or
and
add
pop
sar
add
add
pop
pop
or
add
add
mov
sub
push
and
inc
and
add
add
add
jnp
add
add
pop
ror
and
add
add
fiadd
xor
fiadd
xor
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
push
mov
add
add
sub
and
add
add
(bad)
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
sub
add
adc
add
add
add
add
adc
add
sbb
add
add
add
add
push
add
or
add
add
add
jle
add
or
inc
add
push
sub
add
sbb
add
add
add
adc
inc
add
add
dec
add
add
pop
repnz
pop
repnz
inc
inc
add
add
data16
add
add
add
add
add
mov
add
add
or
add
add
add
popf
add
add
add
add
add
fld
add
mov
add
push
or
push
jle
add
add
pop
rol
add
add
jo
jl
add
add
daa
add
or
sbb
add
sub
add
jle
add
add
push
pop
push
pop
pop
push
or
add
add
mov
cmp
(bad)
inc
sub
and
add
mov
cmp
(bad)
jmp
pop
add
add
jo
lea
add
add
push
jb
add
jo
or
adc
sub
add
or
add
sub
add
and
add
add
(bad)
jmp
cmp
add
add
mov
cmp
(bad)
(bad)
inc
and
daa
and
add
add
(bad)
jmp
movs
add
add
add
inc
add
push
and
add
add
(bad)
jmp
les
add
or
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
sub
inc
sbb
add
add
add
add
add
add
add
xor
add
add
add
add
and
pop
jb
and
pop
jb
mov
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
push
mov
add
add
pop
mov
add
mov
add
add
add
add
add
xor
add
add
add
add
icebp
movs
out
and
movs
out
mov
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
push
mov
add
add
pop
mov
add
mov
add
add
jge
add
add
sbb
add
call
add
adc
mov
jnp
and
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
mov
add
push
mov
add
add
jae
add
or
jle
add
add
pop
rol
jle
add
add
and
rol
jb
add
jo
lea
add
add
push
push
add
inc
add
push
mov
add
jo
push
sbb
add
add
push
sbb
sub
add
mov
add
and
add
xchg
add
jo
lea
add
add
pop
push
jg
add
add
daa
add
or
add
add
daa
add
or
add
jo
pop
sub
add
and
add
and
add
pop
sar
add
add
add
fiadd
sub
push
mov
sub
mov
stc
add
add
add
add
add
fcomp
add
adc
add
or
add
push
add
add
add
add
sub
sahf
jae
sub
sahf
jae
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
and
add
rol
fiadd
fiadd
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
add
add
add
cmp
add
adc
add
add
add
push
add
add
add
add
mov
add
mov
add
and
push
lods
push
push
add
add
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
mov
add
add
push
and
add
adc
add
and
add
and
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
jle
add
add
jl
add
and
jb
outs
addr16
add
add
add
add
push
push
add
add
add
add
inc
push
dec
inc
add
add
add
ins
outs
bound
add
add
add
add
add
push
adc
add
add
and
add
add
add
add
or
add
sub
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
or
push
add
add
add
rol
outs
add
add
add
push
add
add
add
push
add
cmp
push
add
cmp
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
add
add
add
cdq
add
add
cdq
add
add
add
add
add
rol
add
add
add
push
add
add
add
add
add
add
inc
add
add
add
enter
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
aaa
add
add
add
add
adc
cmp
or
push
add
add
add
add
lldt
add
add
add
add
pop
add
add
add
add
sbb
add
add
add
xor
add
add
add
add
xor
add
add
add
cmp
aaa
add
cmp
cmp
cmp
add
add
inc
add
inc
add
inc
add
inc
add
aaa
add
cmp
cmp
aaa
add
cmp
cmp
cmp
add
add
aaa
add
cmp
cmp
cmp
add
add
inc
add
inc
add
inc
add
inc
add
aaa
add
cmp
aaa
add
cmp
cmp
cmp
add
add
cmp
cmp
cmp
add
add
inc
add
add
add
xchg
dec
add
add
je
add
add
xchg
aaa
add
mov
add
add
xchg
cmp
pushf
and
add
add
add
add
add
add
shl
add
add
add
add
add
add
or
add
jo
add
add
or
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
hlt
sub
add
add
add
add
add
add
add
add
cwde
xor
add
add
add
add
add
add
xchg
dec
add
add
add
add
add
add
add
add
add
add
add
add
or
add
mov
add
add
add
add
add
add
aaa
add
add
add
push
add
add
add
add
cmp
add
add
add
add
add
add
add
verr
add
add
sbb
add
add
add
add
add
or
verr
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
adc
or
add
add
add
adc
and
add
or
add
jo
add
add
or
add
rol
add
add
add
inc
add
add
or
adc
pusha
inc
add
add
sbb
adc
cwde
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
je
add
add
xchg
sbb
jne
sbb
rcl
add
sbb
add
add
add
push
add
add
xchg
or
add
mov
add
add
add
add
push
add
add
xchg
or
add
sub
add
add
xchg
or
add
nop
push
add
add
add
add
nop
push
add
add
add
add
xor
add
or
sbb
sbb
add
add
add
pop
add
add
sbb
add
add
add
pop
add
add
or
sbb
inc
pop
add
add
or
sbb
xchg
pop
add
add
xchg
sbb
jne
sbb
loopne
add
add
add
sbb
jo
add
add
add
add
aam
add
add
add
push
add
add
add
add
arpl
add
add
add
add
add
add
or
pop
add
add
add
add
add
add
add
and
in
add
add
add
add
push
add
add
xchg
sbb
jne
and
add
add
aaa
add
cmp
dec
add
dec
add
dec
add
dec
add
dec
add
push
add
dec
add
push
add
pop
add
pop
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
push
add
dec
add
dec
add
add
adc
dec
add
add
add
or
and
dec
add
add
add
or
xor
dec
add
add
add
or
inc
add
or
dec
add
or
push
add
ltr
dec
add
add
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
movs
add
add
mov
dec
add
add
add
movs
add
icebp
add
add
leave
add
add
leave
add
add
add
push
add
add
add
add
stc
add
add
pushf
add
or
dec
add
adc
dec
add
add
mov
add
add
add
add
add
add
add
add
add
mov
leave
add
inc
add
add
inc
add
pop
add
add
ja
rol
add
push
add
jle
enter
nop
add
add
mov
add
(bad)
add
add
dec
add
add
dec
add
add
add
cmp
add
stc
add
add
data16
add
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
push
add
add
jecxz
lock
add
inc
jecxz
imul
add
add
inc
jecxz
inc
add
add
imul
add
add
inc
inc
add
inc
inc
add
inc
popa
add
inc
and
imul
add
imul
add
imul
add
imul
add
add
add
inc
add
imul
add
add
inc
inc
add
inc
pusha
add
inc
popa
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
add
imul
add
add
add
add
add
add
add
and
inc
add
rol
add
add
push
imul
add
pop
imul
add
imul
add
or
inc
inc
or
inc
mov
mov
add
add
add
add
add
add
add
add
add
add
push
add
ins
add
pop
xchg
add
add
add
out
add
bound
add
add
add
add
add
add
add
fs
add
out
sbb
add
add
out
cdq
add
add
add
add
add
add
add
add
add
gs
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
arpl
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jae
gs
cs
gs
arpl
outs
add
jae
ins
bound
imul
imul
jae
gs
bound
gs
jb
jo
imul
imul
jae
gs
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
ins
push
imul
je
jb
bound
add
imul
jne
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
jae
gs
add
push
arpl
popa
jb
push
push
gs
bound
arpl
je
jb
bound
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
arpl
je
outs
outs
add
jae
gs
cs
dec
add
ins
outs
jb
push
je
gs
ins
add
jae
gs
cs
dec
cs
outs
ins
jo
gs
imul
ins
popa
je
push
je
gs
ins
add
jb
popa
ins
add
imul
ins
add
jo
jae
add
ins
jo
gs
imul
add
jb
outs
add
jo
jns
outs
jo
dec
outs
gs
popa
ins
imul
add
imul
jb
jns
inc
jns
add
jae
ins
bound
dec
gs
outs
fs
outs
outs
add
je
xor
push
outs
push
je
imul
ins
popa
je
inc
outs
outs
ins
gs
outs
add
outs
arpl
add
imul
xor
dec
gs
outs
fs
popa
jae
add
jbe
imul
outs
popa
add
je
inc
outs
je
jns
outs
imul
inc
jno
popa
ins
imul
add
ja
jne
add
jns
gs
jb
popa
jns
dec
outs
je
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
imul
imul
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
jae
gs
cs
gs
jne
arpl
add
jae
jne
arpl
popa
outs
popa
addr16
push
jns
je
ins
cs
ins
outs
bound
imul
add
ins
je
jb
dec
outs
outs
add
data16
outs
arpl
jno
popa
ins
jae
push
jns
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
je
inc
jae
gs
bound
inc
gs
bound
arpl
jb
popa
jns
inc
outs
jo
add
jo
outs
ins
popa
imul
add
jo
outs
ins
popa
imul
js
arpl
imul
ins
bound
addr16
inc
outs
fs
popa
jae
add
je
inc
jne
ins
dec
popa
ins
add
gs
je
dec
outs
jae
popa
outs
arpl
jb
ins
inc
outs
fs
outs
ja
popa
jo
push
outs
ins
outs
popa
add
je
inc
jne
jb
outs
je
outs
ins
popa
imul
inc
popa
jae
inc
imul
jns
jae
je
inc
jo
ins
imul
inc
popa
jae
add
jae
gs
cs
arpl
imul
arpl
inc
jbe
fs
arpl
inc
jb
popa
je
inc
outs
ins
popa
imul
imul
popa
addr16
je
jb
bound
add
je
imul
jb
gs
add
jne
jbe
jae
cs
add
arpl
ins
imul
jne
arpl
outs
jb
je
jb
bound
add
bound
arpl
add
data16
push
pop
xor
arpl
outs
jb
inc
pop
xor
inc
pop
xor
inc
pop
xor
inc
add
push
jne
jbe
jae
add
jb
jae
jne
arpl
add
add
add
jne
add
jo
imul
add
jnp
xor
jge
sub
add
sub
add
add
das
add
xor
jge
and
jnp
xor
jge
and
jnp
xor
jge
and
add
arpl
jb
popa
add
jae
outs
add
imul
add
outs
add
add
jnp
xor
jge
and
add
add
outs
add
bound
ins
add
jae
jne
add
imul
jne
outs
add
outs
add
add
add
imul
outs
add
push
outs
add
jb
add
and
add
add
popa
add
add
outs
add
je
add
imul
jb
add
add
add
or
outs
add
add
add
jl
add
outs
add
ins
add
add
add
or
jae
add
outs
add
or
add
popa
add
add
outs
add
jae
add
adc
xor
jge
sub
jnp
xor
jge
jl
add
jne
ins
add
add
sub
outs
add
jae
cmp
jnp
xor
jge
pop
add
xor
jge
and
jnp
xor
jge
sub
jnp
xor
jge
and
add
data16
add
add
add
or
outs
add
push
or
push
add
or
jnp
xor
jge
add
dec
add
add
add
jne
jbe
popa
add
add
cmp
add
add
jb
add
pcmpeqd
ins
add
imul
bound
add
push
add
sahf
int
add
ror
add
add
or
and
add
add
push
add
add
add
add
adc
pop
add
push
add
push
pop
and
or
and
add
and
sbb
push
add
sbb
add
push
push
push
push
add
push
push
sbb
push
push
sbb
sbb
sbb
adc
add
imul
and
add
push
add
sbb
add
adc
add
add
gs
and
add
adc
and
sbb
adc
or
add
or
sbb
push
push
sbb
add
add
gs
push
push
add
add
and
movs
add
add
push
or
add
and
and
xor
sbb
mov
add
add
add
add
add
add
add
add
add
push
jns
je
ins
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
push
or
or
and
or
push
add
push
push
add
or
add
sbb
and
or
add
or
add
sbb
add
add
and
or
add
sbb
and
push
add
add
push
add
add
and
add
push
sbb
add
add
sbb
or
or
or
add
lea
xchg
push
add
add
adc
push
and
sbb
sub
push
add
add
or
add
add
add
add
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
ins
jne
jbe
jae
add
push
add
adc
jo
jb
addr16
and
xor
xor
add
arpl
xor
xor
cmp
sub
sub
sub
gs
popa
xor
xor
add
add
xor
xor
xor
xor
add
add
dec
arpl
outs
imul
jno
jo
outs
jb
js
ja
jge
dec
dec
dec
dec
dec
and
add
xor
xor
xor
cmp
cmp
cmp
xor
xor
xor
xor
add
add
add
push
pop
or
adc
dec
or
or
sbb
add
add
or
pop
add
or
sbb
or
gs
adc
sbb
sbb
push
sbb
add
push
push
sbb
or
add
push
or
add
or
add
push
add
add
add
or
add
or
add
or
sbb
or
or
or
sbb
push
add
push
pop
add
or
adc
push
push
add
or
add
or
add
or
pop
add
push
adc
push
or
adc
or
adc
push
sbb
add
or
pop
add
or
add
add
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
inc
push
inc
inc
push
xor
or
add
add
add
add
jo
jae
add
outs
add
add
add
and
add
add
pop
mov
and
das
sbb
dec
dec
movs
mov
dec
push
cmp
popa
push
test
push
mov
pop
push
popa
jae
(bad)
and
sahf
pop
cld
es
mov
loope
scas
mov
movs
ret
je
mov
mov
(bad)
arpl
jmp
enter
loope
je
jae
sbb
cwde
addr16
push
and
cmps
clc
jmp
adc
in
pop
cmps
xlat
push
cdq
jmp
dec
jno
rcr
in
push
(bad)
int
or
mov
xor
ret
data16
retf
jp
add
add
out
iret
mov
sbb
cmp
in
xchg
jbe
mov
aam
push
pop
mov
out
sub
inc
xchg
out
sub
arpl
rol
xchg
dec
or
jns
(bad)
cmp
adc
xchg
jle
imul
div
xchg
and
push
fist
leave
fs
xchg
mov
mov
nop
stos
or
lods
push
outs
(bad)
mov
stc
or
in
(bad)
in
fucomp
dec
aas
jp
repz
(bad)
cmps
repz
mov
xor
cmps
ja
cmc
inc
in
adc
(bad)
cmovge
ja
movs
fcomp
icebp
jp
inc
xlat
adc
mov
in
rol
cmps
shr
pop
cmp
dec
dec
inc
push
inc
in
mov
sbb
and
inc
xor
aas
jb
test
xlat
mov
call
retf
mov
dec
sbb
jbe
inc
fcomp
jae
push
pop
jp
mov
cwde
addr16
lea
ret
inc
inc
in
mov
ins
pop
out
mov
clc
cmp
call
and
mov
daa
ss
mov
hlt
mov
xchg
ins
add
sahf
cmp
(bad)
cld
nop
je
outs
cmp
dec
jnp
xchg
dec
imul
mov
fs
push
imul
jge
sbb
(bad)
jmp
jne
mov
movs
sub
mov
mov
add
fnstcw
add
jns
mov
leave
sub
test
mov
add
and
dec
cmp
retf
sbb
mov
jbe
cmp
int
sar
mov
sub
inc
(bad)
rcr
sbb
scas
cs
sub
enter
mov
jmp
inc
clc
xor
es
mov
cwde
int
or
push
out
adc
mov
or
dec
jg
int
scas
mov
mov
dec
adc
leave
cld
aaa
call
stos
sub
gs
int
dec
not
ret
and
ds
js
fsincos
push
mov
hlt
jecxz
loope
ins
inc
fdivp
mul
call
loop
clc
test
dec
ss
inc
adc
out
(bad)
movs
push
mov
jp
push
jne
pop
jge
mov
jmp
push
and
adc
mov
xor
mov
xchg
hlt
sbb
inc
inc
jb
es
pop
fld
push
mov
fmul
test
cmp
and
dec
xor
cli
xchg
aam
xchg
and
mov
es
pusha
enter
or
fnstsw
ins
lods
mov
les
icebp
add
cmc
test
pop
push
aam
or
call
add
fidiv
enter
sub
imul
in
mov
jns
pop
cmp
test
sub
jo
and
add
cmp
jns
jl
nop
test
cmp
nop
sahf
mov
repnz
test
je
mov
outs
jle
out
pop
add
bound
and
xchg
inc
stos
addr16
adc
cld
sti
pop
or
xchg
xor
xchg
push
xchg
push
cmp
ud0
imul
push
xor
cmc
xor
cmps
enter
push
xor
loop
cld
pop
test
fcmovb
daa
leave
mov
sar
inc
arpl
lods
not
jle
in
mov
cmp
jne
xchg
ret
fild
inc
push
(bad)
and
push
jbe
xor
cwde
out
fwait
xlat
fwait
in
cmp
pop
xor
push
nop
retf
inc
(bad)
rcl
shr
sub
je
mov
gs
or
inc
retf
mov
pop
add
jnp
mov
(bad)
sbb
leave
int
sar
add
mov
popa
sar
cs
enter
fidivr
dec
popa
js
mov
inc
cli
cmp
pop
mov
fistp
mov
int
ds
repz
(bad)
(bad)
and
sbb
mov
call
je
xor
in
xor
inc
or
int3
jo
mov
push
rol
jns
jae
pop
xor
loopne
iret
cmc
movs
stos
pop
ins
lods
cmp
push
pop
xlat
push
test
jne
xor
cmp
inc
lods
paddq
xor
mov
es
scas
push
daa
pop
mov
test
cli
in
scas
cmc
stc
ficom
imul
out
popf
add
int3
stos
or
and
pop
dec
adc
mov
add
mov
sbb
fstp
mov
and
outs
js
adc
retf
repnz
out
pop
jl
sti
loop
dec
dec
cs
in
imul
mul
xor
(bad)
jno
mov
adc
add
sbb
xor
inc
lahf
inc
addr16
imul
loopne
xchg
jbe
inc
mov
pop
iret
and
jns
out
add
int
inc
xor
neg
cmp
fisub
ins
fcomp
aam
mov
enter
out
mov
out
bound
ds
daa
idiv
inc
pop
pop
sahf
xchg
lods
stc
(bad)
cld
cmp
frstor
aad
or
popa
aam
fnstcw
retf
push
and
cdq
and
cwde
rcr
jl
fs
loope
mov
hlt
jge
push
add
(bad)
sti
mov
mov
(bad)
cmp
sub
out
push
imul
fs
lds
and
fsub
mov
inc
cmc
ins
mov
dec
repz
(bad)
fbld
movs
loopne
ss
(bad)
and
fcomp
loop
stos
pop
into
mov
ror
sub
int3
jle
repnz
ror
fild
stos
or
jmp
int
outs
adc
push
adc
or
rol
sbb
ret
shl
int
xchg
mov
mov
aas
sub
dec
push
test
mov
fiadd
and
cmp
cmc
scas
test
lahf
adc
mov
cmp
aam
lods
jecxz
add
or
test
sbb
push
xchg
je
ss
mov
pop
out
pop
dec
pop
add
call
movs
sbb
cmp
aad
movs
and
das
(bad)
fild
gs
xchg
push
xchg
sub
and
mov
jb
cmp
clc
movs
in
bound
sti
ror
jo
(bad)
scas
inc
sar
mov
mov
sub
test
pop
inc
(bad)
mov
mov
mov
cdq
and
rcr
xor
mov
mov
pop
xchg
mov
jo
jecxz
push
in
(bad)
or
mov
stc
or
mov
jne
nop
pop
sbb
mov
mov
and
ror
push
cli
(bad)
test
(bad)
jnp
(bad)
scas
mov
iret
dec
fistp
cmp
and
or
aas
adc
arpl
imul
jge
test
inc
mov
leave
jp
add
push
dec
rcl
in
xchg
push
fxch
xchg
repz
jmp
std
(bad)
sahf
mov
outs
push
shl
xchg
sti
loop
es
sub
xchg
retf
js
mov
jmp
and
xchg
ins
sub
add
cdq
das
sbb
adc
cmps
sar
sbb
(bad)
push
inc
mov
or
xor
push
std
mov
stc
xchg
fdiv
lds
in
xor
sub
sbb
dec
std
lea
xor
mov
cmp
fimul
loopne
dec
cmc
mov
out
aaa
jae
and
rdpmc
call
addr16
push
xchg
(bad)
movs
push
das
imul
mov
pop
and
mov
xchg
xor
retf
(bad)
sbb
or
stos
push
jge
or
loope
and
dec
dec
mov
stc
fisttp
shl
cli
pop
pop
int
stos
mov
mov
repnz
ret
jmp
arpl
xchg
(bad)
ins
int
mov
inc
jge
retf
sbb
mov
jge
stc
test
xchg
push
jbe
sahf
mov
adc
sbb
pop
xchg
aad
nop
sub
sub
int3
push
cmp
ja
gs
sub
clc
jbe
add
and
xor
push
stc
scas
aaa
dec
inc
js
stc
push
add
jmp
test
test
clc
pop
xchg
aas
sbb
pushf
jbe
cdq
ret
mov
stos
push
xchg
pushf
push
repz
push
push
data16
and
mov
pushf
pop
call
mov
stos
mov
scas
mov
cmp
push
enter
mov
loopne
push
inc
xchg
test
pushf
hlt
sub
and
pushf
data16
push
mov
push
call
jbe
jl
and
push
mov
rol
test
adc
loope
mov
mov
enter
xor
cli
push
inc
cli
test
fiadd
cmp
jb
scas
or
popa
and
pusha
push
pop
push
cmps
inc
loopne
fs
out
and
daa
fistp
pusha
adc
or
jne
cmp
stos
jp
sbb
cmp
jnp
and
push
test
sbb
sub
nop
(bad)
push
loopne
repnz
inc
and
popf
inc
call
ror
pop
xchg
mul
aad
jns
adc
dec
(bad)
mov
sub
rol
popa
mov
in
sar
pop
cmps
cdq
push
push
movs
and
push
loopne
inc
lea
jns
pusha
lods
mov
pop
cmp
jmp
jns
cdq
stos
hlt
cmp
fmul
cli
daa
mov
pop
push
cld
test
mov
xor
push
pop
dec
xchg
stos
and
sbb
ret
mov
cmc
scas
cmps
in
iret
mov
xor
or
add
inc
or
cmps
cs
mov
imul
mov
aad
jmp
sahf
mov
addr16
dec
sub
add
xchg
inc
sub
dec
movs
sbb
inc
mov
pop
enter
(bad)
ja
pop
inc
mov
mov
pushf
sub
dec
jg
fimul
mov
inc
or
shl
dec
jnp
inc
cmp
cwde
aas
nop
jmp
dec
and
ins
dec
outs
stos
shl
ret
push
jo
ds
pop
or
mov
and
jecxz
in
test
cmp
and
fidiv
cmp
add
fisttp
mov
xchg
js
lods
jecxz
outs
mov
sub
sub
sti
add
pop
sub
sbb
ins
scas
movs
mov
jo
out
test
adc
mov
pop
bound
imul
sub
xor
and
sbb
jecxz
shl
pop
clc
popf
stos
popf
stos
out
pop
inc
outs
push
add
xchg
jnp
pop
mov
xor
in
es
mov
sbb
push
cmc
jmp
adc
jne
push
dec
mov
dec
ins
mov
push
clc
cmp
adc
std
cmp
xor
add
mov
icebp
pop
gs
cwde
push
call
leave
(bad)
push
std
xlat
xor
mov
stos
xor
jbe
and
aaa
scas
nop
push
and
sbb
jl
fstp
fdiv
xchg
mov
mov
xchg
js
cmps
mov
xor
push
mov
inc
into
(bad)
push
sbb
out
inc
adc
test
mov
xchg
xchg
mov
sbb
ficomp
pusha
mov
(bad)
jecxz
in
ss
test
sub
mov
and
mov
pop
je
imul
xor
std
retf
enter
out
in
mov
or
xchg
lods
out
and
test
jmp
and
and
aam
mov
xchg
ins
ud2
and
ja
add
mov
push
or
jle
movs
xor
lock
lods
(bad)
loop
(bad)
(bad)
outs
cmps
mov
xor
ja
out
mov
mov
jl
aaa
popf
mov
(bad)
scas
mov
rcr
ss
test
sub
mov
pop
xchg
xor
rol
jno
hlt
outs
xor
repz
into
jnp
mov
es
sti
rcr
push
xor
pop
dec
sub
inc
mov
or
jmp
xlat
sti
mov
inc
or
jmp
test
cld
leave
xchg
pop
inc
mov
and
or
xlat
lods
ds
fadd
data16
fnstsw
push
scas
in
mov
mov
mov
sub
cmp
push
xor
mov
add
sti
fnstsw
cmp
les
xlat
xor
mov
cmp
sbb
sub
and
or
pop
test
cmp
xor
xor
sar
iret
cmp
ds
mov
rcr
jmp
mov
sbb
jb
lea
xchg
cmp
das
inc
cmp
lods
add
push
pop
mov
dec
pushf
mov
xchg
sbb
movs
imul
loope
push
ret
jmp
in
(bad)
int
xchg
(bad)
cld
push
lods
sbb
adc
jo
and
jae
jno
push
retf
cs
cmps
cs
cmp
inc
and
adc
fcmovnb
mov
jno
in
ja
mov
sbb
repnz
cmp
and
jbe
fcmovb
stos
add
pop
dec
jle
arpl
in
mov
xchg
mov
pop
outs
cdq
aam
add
pop
in
xor
lock
cmp
mov
mov
pop
sbb
test
movs
int3
(bad)
jns
sub
add
gs
sub
(bad)
int
cld
mov
mov
cmp
in
cli
dec
push
(bad)
inc
pop
dec
out
out
dec
cmc
dec
cmp
sahf
mov
rcl
cdq
hlt
test
pop
mov
push
ss
movs
mov
push
xor
inc
or
fwait
jmp
mov
jge
imul
sub
mov
fsubrp
jnp
xchg
(bad)
fstp
idiv
nop
retf
add
das
out
or
sbb
ins
xor
icebp
hlt
aam
test
inc
sbb
sub
addr16
push
shr
mov
inc
ret
aas
or
sbb
sub
cmps
or
adc
push
jge
retf
push
lea
pop
int
sub
stos
or
cld
xor
mov
xchg
loope
sub
jnp
shl
out
mov
call
push
lahf
adc
sub
mov
inc
mov
mov
loop
sbb
dec
fcom
dec
ficom
and
pusha
add
sub
jnp
fxch
sahf
mov
adc
mov
jmp
mov
dec
jg
ficomp
push
jle
mov
jecxz
dec
and
fsubr
and
fistp
sbb
cmps
into
ja
aad
dec
sbb
movs
sti
mov
add
inc
rol
int
mov
pusha
adc
or
in
push
or
inc
or
sbb
retf
iret
push
cmp
popf
jecxz
xor
sub
mov
push
pop
xor
jno
repnz
cmp
add
sbb
cmp
mov
jp
push
adc
xor
pop
pop
dec
hlt
outs
mov
loopne
leave
daa
mov
jns
sub
int
loope
lahf
call
rol
inc
push
mov
enter
sub
int
cmp
lock
jnp
xchg
dec
jle
(bad)
pop
sub
scas
cmp
xlat
dec
retf
push
pop
fcomp
fsubrp
lods
jp
cmp
(bad)
adc
xchg
ins
retf
xor
test
jno
dec
sub
jl
loop
mov
inc
ja
sti
mov
jg
std
cs
adc
retf
inc
fsub
xchg
out
jne
sbb
sub
data16
daa
cmp
mov
push
push
imul
daa
xchg
inc
out
jns
add
jge
xor
ret
test
(bad)
bnd
mov
leave
(bad)
or
fisttp
leave
arpl
and
xchg
or
fdivr
imul
push
lahf
add
ret
gs
lods
out
test
mov
inc
xchg
pop
fbld
iret
dec
pop
add
xor
je
outs
popa
not
fst
not
jp
and
call
sub
rol
pop
adc
fld
cwde
pop
out
jmp
inc
cmps
out
mov
or
aaa
mov
cdq
sbb
retf
cli
mov
push
sti
pop
imul
jbe
jmp
jmp
pop
mov
jns
ror
movs
arpl
sub
in
repz
mov
ss
mov
scas
outs
and
idiv
pop
dec
mov
mov
imul
xchg
xor
and
pop
cli
das
cmp
out
xchg
stc
in
sbb
xchg
jle
test
cmp
mov
jae
mov
test
add
xchg
xchg
aam
jne
ffree
arpl
cmp
stos
or
inc
sbb
xor
cmp
push
jmp
mov
movs
stos
mov
ins
fs
fcmovb
jae
into
shl
(bad)
repz
dec
or
loop
xchg
fdiv
pop
mov
fdiv
int
ror
(bad)
loope
repnz
(bad)
shl
or
ins
add
leave
inc
add
ss
inc
out
out
rol
pusha
inc
add
and
push
mov
add
aas
mov
mov
cmp
push
add
fist
sbb
adc
inc
adc
in
pmuludq
lea
retf
push
add
pop
mov
retf
inc
fadd
shr
xchg
lock
jnp
hlt
repnz
or
and
iret
cli
and
xchg
das
ret
aad
xchg
das
test
ror
loopne
inc
arpl
jmp
xor
adc
sub
ret
fdiv
xchg
imul
or
aaa
movs
enter
cmps
push
pushf
dec
call
mov
leave
inc
mov
clc
or
or
inc
pop
(bad)
repnz
pop
or
int
fwait
repnz
cmp
fadd
inc
jmp
xor
out
mov
cmps
retf
sub
imul
aad
das
mov
push
pusha
test
cmp
jl
les
out
sub
and
std
pop
int3
dec
jnp
pop
jb
rcr
dec
push
out
lahf
fmul
sbb
imul
rol
sbb
sti
xchg
lahf
(bad)
mov
ror
pop
push
push
or
or
push
enter
les
das
pop
lahf
jg
cmp
out
stos
rcl
or
dec
dec
push
loope
ins
lock
xor
je
dec
cmp
or
dec
dec
adc
add
dec
outs
mov
mov
repnz
xor
mov
jbe
ds
cmp
out
and
push
outs
xchg
outs
stos
jns
gs
pop
daa
je
mov
sbb
adc
cmp
push
sbb
ss
xchg
aas
cmps
dec
fsubr
pushf
cmp
(bad)
mov
cmp
retf
sub
ins
call
add
pop
and
adc
sub
out
fisubr
xchg
clc
pop
test
and
in
add
mov
out
popa
aas
cmp
gs
xchg
dec
bound
add
push
mov
xchg
sub
push
sbb
push
int
jno
mov
in
lahf
dec
aas
mov
test
mov
lock
fcmovnbe
push
daa
dec
jnp
pop
mov
addr16
shr
test
jne
xchg
mov
and
pop
push
push
mov
and
fidiv
loope
jno
cli
in
inc
ret
pop
mov
mov
xor
xor
inc
js
xor
bnd
adc
rcr
mov
mov
test
ret
je
push
aaa
icebp
cli
loop
test
fwait
retf
pop
sbb
mov
cmp
ja
dec
test
ss
dec
inc
dec
push
popf
jp
adc
xor
lds
mov
iret
mov
adc
sbb
fs
fs
xor
xchg
les
hlt
pop
gs
add
(bad)
xchg
or
shr
cmp
inc
int
push
mov
fistp
jge
outs
cld
mov
stos
xchg
sbb
pop
pop
enter
repnz
mov
push
mov
adc
inc
into
mov
push
inc
shl
dec
hlt
adc
push
imul
and
pushf
(bad)
leave
and
ret
les
gs
out
push
neg
inc
pushf
cmp
ficomp
(bad)
pop
call
les
mov
sbb
mov
jl
or
mov
or
mov
jbe
sub
mov
pop
loop
jle
add
(bad)
mov
add
add
dec
(bad)
mov
mov
test
shl
sub
movs
std
sub
xlat
out
pop
push
scas
fwait
cmp
dec
add
sbb
lock
cmp
pop
stos
dec
push
add
addr16
xor
push
stos
pop
aam
jl
xchg
addr16
fcomp
adc
arpl
sub
mov
mov
outs
xor
and
xor
call
and
loop
jle
(bad)
push
xchg
jmp
sahf
in
call
add
push
cmp
es
movs
aam
mov
xchg
test
fisttp
cmp
or
push
outs
aam
cmc
push
loope
adc
xor
test
popf
sub
xor
out
mov
or
pushf
xor
and
(bad)
add
dec
icebp
mov
inc
lods
dec
xlat
stos
mov
(bad)
adc
pop
lods
sub
inc
jg
sti
mov
pop
sub
mov
cs
sahf
push
jp
mov
jne
mov
cli
jae
loope
popa
mov
jbe
loopne
cmp
cwde
xchg
js
add
push
jg
add
cmp
xor
(bad)
sub
fiadd
das
dec
cwde
xchg
jns
sub
retf
sub
mov
popf
cdq
loop
jo
cmp
sub
ss
imul
mov
xchg
ss
jnp
aad
add
es
xor
cmc
pushf
mov
in
sub
aas
inc
lods
les
shl
add
cmc
sub
lods
push
mov
out
mov
and
in
out
in
nop
jae
ja
push
loope
dec
sbb
popf
add
jmp
mul
mov
ret
adc
xor
or
push
inc
out
xor
sub
and
pop
dec
mov
jp
fsubrp
add
and
shl
mov
jne
cmc
xor
xor
out
push
xlat
pop
or
and
inc
test
and
adc
in
adc
fucomi
jmp
lods
jbe
test
movs
stos
std
mov
push
sahf
aas
loop
inc
hlt
ror
jnp
call
mov
pop
push
imul
adc
mov
dec
mov
dec
mov
inc
inc
jmp
sbb
ins
ret
pop
mov
lock
out
add
jmp
cmp
iret
dec
into
ret
inc
jp
mov
sbb
loop
daa
push
(bad)
stos
ja
stos
xchg
in
pop
test
scas
xor
mov
push
scas
dec
div
adc
mov
pop
fwait
cmps
jmp
push
inc
dec
or
sub
test
test
pusha
ret
xchg
xchg
mov
xchg
fisubr
repnz
movs
and
adc
or
jle
sahf
jmp
jb
out
test
shl
sub
xor
xor
jbe
xor
movs
push
xor
cmps
(bad)
sbb
push
cmp
jnp
add
or
movs
adc
push
fisttp
xchg
xchg
push
xchg
add
mov
or
push
dec
mov
sbb
jns
test
and
cmp
aaa
lahf
push
loop
aaa
cmp
jl
mov
or
test
sbb
cmp
mov
cmp
pop
clc
std
test
mov
cmp
out
or
mov
dec
(bad)
cmc
ss
fidivr
adc
xchg
gs
das
ror
push
jmp
add
xchg
jmp
retf
(bad)
dec
inc
fld
inc
repz
pop
fisttp
pop
(bad)
sbb
cmp
jno
iret
adc
arpl
adc
imul
push
cs
or
(bad)
pop
cld
jg
push
fwait
sahf
push
xchg
outs
mov
popa
sub
pop
cld
xchg
inc
lods
xor
cmp
aam
fisub
nop
and
shl
or
(bad)
push
mov
push
mov
ins
pop
jmp
and
jmp
and
and
push
cmp
mov
and
outs
xlat
inc
arpl
ja
(bad)
hlt
in
out
dec
pop
push
fiadd
out
jecxz
stc
mov
loope
mov
std
cwde
mov
sub
push
push
push
cwde
fnstenv
test
lods
sti
cmp
mov
out
not
xchg
out
aas
mov
enter
push
xor
mul
push
out
pop
jp
inc
inc
call
dec
mov
mov
pop
xchg
pop
jle
fcom
mov
xchg
jge
xor
fidivr
cmp
pop
mov
iret
jmp
dec
jo
push
retf
pop
push
sub
xor
push
mov
mov
stc
jecxz
ds
retf
adc
outs
inc
inc
gs
cmp
sub
das
popa
adc
out
mov
gs
in
imul
jns
outs
inc
sahf
(bad)
scas
mov
das
sub
call
dec
stos
loop
ins
xor
aas
dec
popa
movs
or
ins
loopne
mov
lahf
cs
lock
aas
in
adc
stos
jne
dec
and
cmp
data16
aad
cdq
mov
(bad)
xor
and
push
cmp
xchg
cmp
in
retf
out
sub
mov
aas
lods
stos
mov
sbb
add
mul
das
xor
ss
inc
fbld
and
pop
mov
aad
out
(bad)
cmp
dec
sub
inc
pop
or
mov
shl
inc
imul
sbb
cmp
sbb
sub
ds
jl
adc
xchg
inc
and
push
adc
mov
(bad)
loop
cmc
push
cmp
and
and
adc
sbb
ja
dec
sub
xchg
inc
out
repnz
mov
pop
adc
xchg
loope
rol
ret
not
add
cld
clc
jle
push
jp
or
jbe
scas
xchg
repnz
mov
jnp
movs
retf
sbb
sub
sub
or
test
fimul
cmp
lods
jbe
adc
sti
mov
(bad)
lock
mov
mov
pusha
shr
add
mov
jmp
call
sub
lds
mov
dec
cmp
sbb
ret
cmp
mov
cs
cdq
dec
int3
clc
push
xor
inc
dec
sbb
inc
xor
xchg
or
jno
pop
mov
daa
pop
icebp
push
push
(bad)
dec
xchg
adc
cmp
cmovo
sub
int
adc
mov
cs
enter
jmp
dec
pushf
shl
inc
jcxz
fild
dec
xchg
js
ret
pushf
enter
fstp
mov
daa
or
int
outs
xor
lods
mov
xor
jle
fiadd
pop
mov
xchg
sahf
fistp
sub
rcr
and
pop
xor
aad
out
push
push
movs
xor
aas
(bad)
cmp
xchg
lahf
repz
xchg
cmp
cmp
jns
xlat
nop
pusha
add
dec
lods
sub
inc
scas
std
mov
push
stos
test
xchg
jns
(bad)
xchg
inc
mov
sbb
inc
pop
shr
mov
mov
pop
inc
cmp
pop
retf
mov
loop
jb
pop
jnp
inc
cmp
mov
inc
dec
sbb
add
aad
mov
retf
fisubr
add
mov
in
and
pop
cmp
pop
stc
add
cmps
out
adc
and
sbb
scas
xchg
mov
inc
jb
mov
lds
mov
fisubr
jmp
je
dec
in
or
mov
pusha
je
jg
lods
adc
inc
std
and
and
cmp
mov
mov
rcr
mov
hlt
das
mov
call
mov
mul
mov
outs
mov
ins
mov
cmc
sbb
(bad)
lahf
les
xor
push
rcl
loopne
dec
out
sbb
or
xchg
mov
stos
fsubr
inc
jnp
cmp
xor
push
(bad)
fisubr
push
rcl
icebp
in
iret
fist
lock
ror
inc
pop
test
test
pusha
xor
jl
div
sbb
arpl
mov
ja
pushf
xchg
pop
or
sub
sahf
daa
push
xor
sub
pop
inc
sub
imul
jmp
cmp
shl
adc
retf
sar
push
push
imul
push
mov
cmp
test
mov
inc
cli
dec
shl
push
je
fimul
daa
fadd
stos
sub
repnz
and
mov
cs
call
fistp
inc
jmp
jg
repz
dec
clc
inc
cmps
push
mov
mov
sub
mov
sbb
mov
mov
int
push
and
int
je
push
sahf
lods
xchg
shr
test
bound
repnz
push
movs
pop
or
into
push
or
dec
ds
imul
jno
dec
sbb
arpl
jmp
enter
call
adc
pushf
fwait
jnp
int
stc
cmp
sub
xor
adc
xchg
outs
mov
inc
into
sub
out
inc
and
push
cmp
outs
mov
aad
inc
push
js
mov
movs
push
xchg
(bad)
mov
fs
or
jle
cdq
out
push
call
push
fld
mov
je
shr
and
adc
xor
push
in
add
push
jo
leave
mov
sti
sbb
test
std
xchg
outs
(bad)
das
ffree
ror
jg
sub
outs
jge
call
push
jb
inc
xchg
or
fstp
adc
push
in
(bad)
push
and
mov
lds
xor
xor
pop
jbe
je
push
pop
xor
inc
call
xlat
ins
(bad)
mov
std
je
jne
mov
push
mov
mov
ds
out
push
nop
imul
std
sahf
enter
outs
xchg
mov
dec
out
and
xor
mov
jecxz
dec
retf
cli
shl
enter
shr
lds
icebp
fisubr
out
inc
mov
packsswb
test
jp
gs
stc
mov
sbb
mov
and
and
dec
aas
xchg
hlt
cmp
push
cli
mov
arpl
aas
daa
out
xor
xor
push
fisubr
adc
sub
adc
inc
fdivr
xchg
cmp
ds
in
dec
cmp
dec
mov
mov
sub
lahf
stos
mov
fistp
mov
not
sbb
push
xchg
sbb
inc
push
push
stos
sbb
in
xchg
in
sbb
cmps
leave
push
les
pushf
pop
xlat
daa
or
mov
fst
and
add
pop
jg
pop
test
inc
mov
mov
lock
push
aam
dec
push
cmp
aad
not
sub
cmp
cdq
push
jo
jno
in
cmp
push
cmc
inc
jb
je
sub
out
das
lea
(bad)
mov
or
mov
lahf
and
sti
mov
out
(bad)
sbb
in
or
outs
lods
fsubp
mov
cmp
inc
call
loopne
rcl
push
mov
loope
rcr
mov
ret
mov
fisubr
push
outs
aas
mov
sub
adc
xchg
leave
sbb
mov
xor
call
addr16
mov
imul
mul
mov
cs
adc
jns
sub
outs
repz
xlat
cwde
es
arpl
push
ret
out
xchg
pop
inc
and
inc
jp
cld
leave
retf
mov
inc
dec
into
jmp
cmp
inc
lods
and
cmp
scas
test
dec
pop
loopne
sub
out
das
or
jne
dec
fistp
out
mov
dec
stos
jae
(bad)
js
push
xchg
push
push
(bad)
repnz
call
rcr
dec
mov
leave
sbb
fsubr
lods
push
inc
mov
das
imul
xchg
dec
dec
mov
push
add
iret
iret
add
jmp
push
loop
cmp
adc
iret
mov
mov
adc
fcmovbe
adc
outs
mov
loop
push
scas
ret
dec
adc
jmp
repz
mov
jge
js
jmp
cdq
mov
cmps
sbb
ins
adc
mov
push
shl
mov
fcomip
mov
hlt
inc
and
adc
aad
dec
push
loop
ficomp
xchg
clc
les
imul
sub
jne
sbb
fisttp
xlat
mov
xchg
sub
ins
sbb
xchg
test
adc
add
sub
mov
push
es
mov
jmp
addr16
lods
sbb
daa
and
push
pop
jle
fiadd
pop
lds
cdq
cmp
cmp
mov
repz
cmp
jae
int3
lods
adc
ror
cs
inc
sub
cld
dec
retf
js
adc
retf
test
(bad)
xor
sbb
sub
aad
out
fist
or
and
mov
test
mov
xchg
jle
mov
lahf
pop
and
sbb
js
cmp
outs
mov
inc
jl
dec
(bad)
jns
inc
mov
jno
in
inc
xchg
mul
push
or
and
rcr
std
paddsb
das
xchg
mov
rep
cmps
adc
push
or
cmps
push
sub
jge
add
jmp
cmp
mov
dec
sbb
push
ret
inc
mov
retf
pop
int3
in
lahf
mov
jecxz
pushf
sbb
lock
sub
imul
sbb
jge
sub
mov
and
sti
enter
(bad)
lea
inc
push
lahf
xchg
mov
add
push
xchg
pop
and
gs
sbb
fsubp
(bad)
adc
js
out
jmp
popa
or
jle
jb
rol
stc
sbb
mov
or
jno
mov
rcl
dec
dec
or
mov
rcl
xor
test
in
pop
lahf
dec
add
pop
sbb
xchg
xchg
adc
mov
mov
jae
(bad)
out
jne
jbe
mov
jmp
(bad)
pop
xchg
mov
xor
mov
mov
int3
xor
cmp
setnp
jns
push
mov
or
push
and
gs
add
fild
or
mov
mov
sub
aas
daa
jge
hlt
(bad)
inc
fmul
or
es
stos
test
(bad)
jg
xchg
imul
xor
imul
sub
adc
sbb
call
popf
cmp
adc
repnz
pop
out
jnp
test
lea
add
test
repnz
repnz
fs
fs
push
(bad)
addr16
loopne
sub
dec
out
fisttp
cmps
hlt
and
jae
xchg
push
mov
mul
add
pop
inc
or
xor
inc
mov
mov
sub
inc
push
cwde
jb
imul
ins
das
fadd
dec
mov
test
mov
pop
pop
xchg
xchg
lea
pusha
frstor
sahf
lods
xchg
es
jecxz
imul
add
out
div
pop
popf
loop
outs
ds
cmp
aad
jae
pop
xchg
sub
ja
mov
xchg
stos
cli
or
xchg
aad
add
cmp
out
or
sahf
cwde
(bad)
dec
sahf
xor
test
test
sub
mov
xor
xchg
call
mov
pop
push
xchg
shl
pop
std
mov
imul
fidiv
pop
hlt
mov
cmp
fimul
imul
repnz
add
adc
cdq
mov
xor
imul
addr16
scas
fucomi
aas
cmp
cli
cmp
and
fisub
jecxz
pop
call
add
out
nop
pop
mov
inc
popf
inc
mov
in
ret
out
mov
cmc
mov
jmp
in
mov
ror
sbb
mov
push
or
pop
out
sub
repz
push
mov
sub
sahf
js
imul
sahf
cmp
xchg
rcr
fmul
and
push
sub
mov
xchg
test
xchg
not
test
fnsave
jae
pusha
add
outs
ret
adc
xor
adc
push
jl
mov
repnz
push
aas
sub
pushf
(bad)
pop
xor
sub
bound
pop
movs
fcomip
rol
jno
jne
ds
cmp
adc
mov
je
xlat
jno
add
cs
les
into
inc
mov
jmp
adc
dec
sbb
das
xchg
adc
adc
sti
pop
test
mov
jnp
xlat
sbb
pop
jae
adc
or
adc
aas
dec
cmp
scas
push
or
int
bswap
test
xor
sbb
out
lods
shl
retf
aas
test
arpl
ret
outs
pop
hlt
loope
dec
lods
mov
push
pop
sbb
cmp
jp
push
outs
shl
outs
sub
mov
mov
push
mov
cmp
cld
fwait
and
out
push
push
pop
jmp
(bad)
clc
xchg
repnz
sahf
pop
push
popf
in
mov
fisub
push
or
jae
pop
in
stos
mov
mov
int3
add
dec
add
popa
div
test
shl
fcmovnu
clc
cmp
jmp
xchg
mov
popa
add
sbb
xchg
in
and
inc
stos
jp
adc
fistp
icebp
bound
xchg
not
xor
stc
cmp
mov
fidiv
push
jle
out
test
and
ror
mov
fldcw
jns
pop
inc
sbb
sti
nop
mov
ror
mov
out
callw
fwait
gs
push
in
fild
pop
call
jb
(bad)
cmp
daa
xor
push
mov
cmp
add
(bad)
repz
pop
inc
sar
cdq
sub
mov
xchg
nop
sub
pusha
xor
jnp
cs
dec
out
jo
inc
imul
rcl
fucomi
shr
mov
push
ss
das
cwde
sub
pop
mov
sbb
imul
mov
or
das
jns
aaa
push
jns
sub
popa
mov
sar
sub
push
(bad)
aam
mov
mov
jge
adc
pushf
fbstp
aam
cmc
inc
push
and
xchg
adc
das
mov
sbb
push
or
stc
inc
mov
cli
ins
in
mov
idiv
push
sub
xor
push
shl
cwde
lods
jno
call
fwait
xor
nop
daa
pmaddwd
push
ins
adc
(bad)
shl
(bad)
push
mov
mov
lods
out
mov
hlt
enter
cmp
mov
fwait
sbb
out
jecxz
(bad)
sbb
ret
push
retf
loop
dec
or
push
call
dec
xchg
ret
test
mov
daa
jno
ret
call
rcpps
push
in
shr
in
jge
jmp
sbb
loope
inc
or
push
retf
adc
ror
enter
mov
(bad)
sbb
mov
call
mov
fadd
cmc
in
mov
add
mov
fwait
sub
pop
mov
adc
push
retf
pop
and
xchg
inc
mov
or
adc
cmp
xor
out
jbe
ins
pop
inc
mov
test
aad
or
inc
or
sbb
(bad)
dec
loop
pop
in
dec
jge
sbb
xchg
mov
adc
ja
(bad)
mov
(bad)
push
sar
dec
dec
jb
pshufw
lods
test
add
xchg
rcl
pop
jbe
and
clc
sbb
xor
fwait
addr16
es
inc
jne
mov
mov
loop
in
xor
call
mov
cmps
jbe
aaa
into
inc
mov
aam
xchg
div
add
mov
ja
push
pusha
cmp
push
call
and
retf
ror
nop
dec
idiv
popa
mov
jae
dec
imul
lds
lock
hlt
setb
cmps
(bad)
faddp
popf
ret
jae
shr
mov
jmp
xchg
cmc
pop
push
call
es
add
ss
cmc
mov
or
loopne
mov
repz
mov
imul
sbb
sar
(bad)
in
cmp
mov
add
add
lods
and
dec
out
xchg
stos
call
in
cmps
test
dec
mov
sbb
leave
loope
icebp
xor
pop
jae
sbb
(bad)
mov
ficomp
sbb
inc
sub
cmp
and
cld
mov
pop
inc
push
mov
(bad)
js
pop
cmps
iret
or
dec
std
call
pop
jmp
jg
fiadd
test
call
and
daa
jno
dec
mov
or
je
ins
mov
cmp
push
or
cs
inc
sbb
dec
xchg
int
lahf
push
iret
pop
in
push
sbb
jmp
stc
arpl
sbb
pop
ja
jmp
ror
ret
fidivr
cli
(bad)
mov
mov
jmp
push
sub
arpl
mov
or
push
ss
lods
loopne
ror
mov
xor
sub
mov
mov
push
test
in
icebp
sbb
push
imul
jb
je
push
repnz
cwde
push
int
adc
outs
mov
(bad)
bnd
fcom
test
or
pop
pop
les
sbb
adc
loop
enter
mov
(bad)
ret
and
mov
cdq
or
adc
add
and
mov
adc
(bad)
or
inc
push
imul
xor
fadd
jge
rol
add
ss
dec
cmp
iret
mov
jno
addr16
inc
out
repnz
in
mov
sbb
mov
leave
push
data16
adc
(bad)
xchg
lds
mov
sbb
mov
pop
(bad)
or
mov
dec
sub
jmp
cmc
pop
dec
mov
jmp
es
cli
cdq
xor
clc
add
scas
adc
stos
cli
cmps
pusha
popf
leave
out
sbb
jo
mov
fiadd
dec
mov
mov
jo
xchg
(bad)
jno
mov
cld
push
rol
push
push
cmp
or
push
iret
pusha
out
data16
jae
loopne
mov
sbb
cmps
xchg
jp
pop
push
or
dec
scas
sti
mov
lods
outs
mov
cmp
jns
sbb
in
xor
aam
jecxz
mov
dec
rol
sti
(bad)
adc
jmp
push
shl
push
jp
ja
sbb
emms
or
sub
(bad)
pop
push
jl
cmp
add
data16
rol
rcr
mov
sub
push
stos
jecxz
or
div
shl
stc
push
out
xor
popf
hlt
inc
jmp
xchg
cmp
xchg
into
mov
add
lds
jmp
add
mov
cdq
add
inc
add
mov
inc
xchg
int
leave
cmp
and
cdq
test
xor
add
lods
jno
cmp
(bad)
pop
mov
inc
shl
jmp
stc
sub
add
dec
jp
cmp
push
das
sbb
fstp
inc
push
ss
(bad)
out
push
add
jge
mov
gs
xchg
xor
push
stos
push
mov
(bad)
sar
dec
fistp
fidivr
pop
retf
inc
pop
pop
cmp
dec
js
xchg
xchg
test
(bad)
stos
repnz
ret
push
add
dec
cmps
mul
push
mov
jne
mov
push
xor
ins
pop
and
ret
pop
mov
iret
pop
in
jecxz
imul
jne
das
outs
fldenv
ss
dec
dec
mov
iret
mov
je
mov
enter
mov
jo
retf
das
mov
fs
out
out
adc
dec
mov
popf
leave
nop
loopne
push
mov
jbe
mov
mov
shl
(bad)
xlat
mov
cld
cld
aaa
in
and
mov
sti
scas
pop
and
xor
sub
or
mul
add
dec
sub
call
(bad)
(bad)
push
mov
or
xor
and
(bad)
ror
out
cmps
sbb
push
jo
popa
sbb
jg
xor
pop
out
movs
push
add
mov
out
std
mov
cmps
dec
shl
addr16
jg
xchg
lea
(bad)
mov
adc
test
cmps
ret
xchg
out
retf
inc
mov
jnp
or
xchg
(bad)
icebp
inc
es
push
(bad)
jb
and
jo
mul
repnz
jg
adc
arpl
inc
inc
out
dec
dec
xcrypt-ofb
cmps
push
out
cmp
imul
inc
or
aad
xchg
cdq
lahf
or
jl
stos
add
mov
jb
xchg
sub
std
mov
jmp
adc
cmp
ins
dec
sbb
jmp
in
out
push
lahf
cmp
(bad)
jne
cmps
pop
std
aaa
pushf
movs
imul
ds
nop
pop
loop
aad
out
xchg
jmp
jo
inc
stos
ins
or
xor
and
ins
mov
pop
ss
daa
je
out
inc
sbb
rcr
mov
jnp
and
or
and
xchg
mov
push
fisubr
mov
retf
pusha
hlt
pushf
std
push
ja
mov
jmp
push
jae
sbb
mov
or
push
cmp
adc
push
(bad)
cmps
cmp
and
sbb
pop
add
(bad)
rol
call
add
sub
dec
dec
(bad)
sar
repz
sub
into
(bad)
dec
outs
ror
(bad)
push
mov
xchg
les
dec
jmp
dec
ja
inc
add
dec
inc
pop
lds
retf
jmp
scas
cdq
imul
call
xchg
(bad)
into
ds
sub
lods
cdq
inc
outs
xchg
pop
daa
das
sub
loop
lods
das
mov
pop
aaa
gs
mov
xor
icebp
cli
arpl
jge
arpl
xchg
sub
add
xor
call
test
xchg
ficom
mov
cmp
lock
mov
imul
rcr
sbb
xor
and
mov
rcr
adc
sub
sbb
push
fwait
jo
ins
into
scas
mov
dec
xor
jmp
inc
jnp
pusha
aam
jl
xlat
jp
jbe
pop
push
adc
xchg
ficom
and
mov
and
lock
pushf
aas
xchg
(bad)
sbb
ficomp
sbb
adc
adc
push
and
call
ja
mov
xor
jge
sbb
ffreep
adc
enter
retf
mov
jmp
in
lods
loope
jnp
ror
lea
or
pop
cmps
rol
(bad)
mov
outs
pop
inc
push
fnstsw
xchg
movs
into
xchg
arpl
aam
mov
pushf
push
mov
inc
push
das
rcl
pop
add
aaa
jmp
std
pop
mov
je
push
xor
inc
and
loopne
cmp
xchg
arpl
dec
mov
imul
adc
addr16
sbb
(bad)
mov
ja
cmp
dec
push
aad
loop
ror
sub
inc
jmp
sub
lock
pop
sub
sub
das
retf
repz
xor
xchg
and
(bad)
cmp
hlt
pop
mov
and
or
in
jb
mov
call
not
es
adc
aaa
outs
mov
mov
xchg
test
out
in
push
add
push
scas
int
out
lods
pusha
stos
mov
and
sub
pop
push
pop
imul
dec
pop
dec
jg
jmp
jne
jnp
xchg
data16
add
into
and
xchg
hlt
(bad)
pop
add
dec
and
lock
inc
sub
in
sbb
call
(bad)
jp
js
repnz
sbb
test
lods
xchg
xchg
fadd
out
jo
adc
les
movs
mov
xchg
loop
not
sub
mov
js
(bad)
sub
call
repz
retf
icebp
ins
xor
fst
inc
out
dec
call
arpl
cmp
lods
cs
cld
js
out
jmp
cmp
push
add
or
dec
mov
movs
mov
inc
and
xchg
mov
aaa
xor
out
arpl
repz
sbb
daa
and
stos
addr16
mov
push
pop
mov
mov
shl
test
mov
adc
and
fld1
jns
data16
cmc
mov
(bad)
jmp
rcr
std
push
popf
cmp
or
cmp
cmp
add
gs
dec
stos
xchg
pop
dec
loop
in
or
adc
sbb
das
ins
or
(bad)
iret
mov
sub
stc
popa
movs
mov
(bad)
sbb
pop
ja
outs
movs
dec
shr
inc
fdivr
jp
test
call
lock
loopne
jbe
outs
xchg
int3
stc
cmp
aad
sub
pop
pop
push
sub
or
or
hlt
popa
js
lea
jle
xlat
xchg
and
inc
mov
ja
pop
into
xchg
inc
call
cld
sti
push
stc
out
(bad)
pop
pop
outs
mov
ret
pop
das
lea
ficom
call
test
add
xchg
cmps
lock
test
mov
cmps
cmp
mov
jle
(bad)
xor
popa
sub
scas
std
out
aas
test
or
xchg
jmp
repz
inc
pop
mov
daa
cdq
loop
retf
add
adc
popf
into
arpl
lods
and
ins
mov
push
adc
lods
jo
jne
cdq
aad
dec
fnstenv
pop
pop
in
sbb
repz
faddp
sub
or
adc
enter
dec
mov
mov
cs
(bad)
mov
in
stos
std
add
xchg
frstor
je
mov
loopne
jae
aas
in
mov
inc
xchg
inc
xchg
and
jmp
sub
aad
lea
pop
sub
bound
mov
das
push
arpl
fstp
inc
rcr
jb
leave
ror
clc
out
pop
aad
pop
or
cmc
sub
adc
lods
stos
loop
arpl
aaa
inc
ffree
xor
push
xor
cmp
add
sub
mov
sbb
lds
retf
adc
sbb
movs
clc
lock
call
pop
enter
sub
jp
xlat
xchg
or
cmps
fstp
and
cmp
sub
mov
aaa
cmps
dec
pop
movs
add
fld
or
call
push
xlat
jb
push
add
sbb
mov
vmovntps
adc
imul
dec
repnz
dec
inc
pop
jmp
sub
test
xor
bnd
shr
xor
pop
imul
into
popa
je
mov
or
push
ror
cld
stos
pop
push
pop
pop
xchg
int3
xchg
cmps
lahf
je
fs
test
push
sbb
sub
mov
(bad)
xor
mov
fcmovnbe
enter
sub
add
push
pop
cmovno
inc
popa
test
es
mov
cmps
or
enter
rcr
push
jmp
xchg
outs
imul
outs
jno
repz
(bad)
jns
pop
and
mov
data16
cmc
lock
cmps
add
gs
push
inc
sbb
in
xchg
xlat
and
(bad)
xor
fst
arpl
push
jbe
sbb
add
inc
add
sahf
mov
mov
ds
inc
cmp
or
sub
inc
imul
das
jo
sbb
adc
push
inc
jo
xlat
int
in
(bad)
sub
fmul
lods
std
sbb
dec
sub
retf
mov
test
or
pop
pop
and
cmps
imul
cld
test
cli
jg
and
cwde
cmp
push
into
(bad)
scas
aam
dec
mov
rol
cmp
sbb
call
jae
test
mov
sub
xchg
stc
mov
add
test
sbb
les
dec
sbb
mov
iret
mov
jp
out
clc
xor
adc
xchg
lock
fistp
outs
js
mov
inc
arpl
adc
jae
scas
call
mov
in
xor
push
lea
ins
pop
fnsave
push
retf
xchg
add
and
loopne
aas
push
div
into
call
pop
xchg
adc
adc
jne
jns
jns
shr
sub
xor
dec
repz
dec
adc
sbb
test
stos
push
cmp
push
(bad)
fwait
leave
gs
dec
imul
shr
mov
sub
mov
out
mov
scas
sub
loope
cmp
cmp
sbb
movs
rcl
btc
aam
loope
push
imul
jmp
sbb
inc
adc
ror
sbb
ja
adc
stos
shl
enter
out
(bad)
pop
test
sbb
icebp
out
stos
adc
mov
adc
xchg
push
fisttp
cli
addr16
add
xchg
add
adc
mov
ds
ins
addr16
aad
pop
fucomp
xchg
inc
and
std
xchg
call
mov
or
jae
sub
out
in
gs
sbb
imul
xor
ins
sub
inc
xor
pop
sbb
sbb
stos
pop
call
imul
shr
fucom
neg
mov
lds
(bad)
sub
jl
stos
adc
stos
xchg
xor
ret
pushf
fimul
jmp
jb
cmps
rol
int
rep
imul
test
inc
pop
push
pop
mov
cmp
add
xor
jp
retf
dec
ja
mov
out
pop
or
mov
jl
dec
scas
aas
jge
sbb
mov
push
mov
mov
fmul
and
adc
push
jl
rcl
inc
mov
cmp
push
mov
push
test
pop
cwde
add
test
pop
or
xchg
imul
mov
popa
push
add
cmp
data16
iret
popf
dec
bound
jl
mov
xchg
or
jbe
push
inc
push
or
xchg
add
jo
inc
jne
mov
inc
movs
and
aas
add
xchg
call
ret
fistp
mov
push
(bad)
aad
jnp
ins
arpl
retf
pop
aaa
pop
std
adc
shr
out
shr
dec
fidiv
cmp
jmp
sub
(bad)
aaa
jl
mov
ins
addr16
scas
loop
(bad)
jg
pop
dec
xor
cmp
mov
hlt
and
mov
jne
ins
lods
imul
cmp
add
dec
cmp
cmp
mov
cld
or
outs
pop
add
daa
lods
rcr
dec
sub
inc
cmp
push
or
ja
dec
push
ss
jge
add
inc
stc
xchg
mov
mov
push
inc
stc
cmps
cmp
ret
addr16
popf
push
inc
sahf
aad
lock
scas
dec
jle
les
(bad)
gs
jae
adc
shr
mov
enter
xchg
jmp
inc
inc
pusha
out
pop
ret
xlat
inc
jmp
cmp
add
call
(bad)
or
adc
sub
xchg
add
jno
dec
push
neg
aad
cli
imul
mov
xlat
jbe
xor
inc
pop
rcl
movs
pop
adc
repnz
aad
adc
test
aam
inc
jl
adc
mov
pusha
add
icebp
pushf
popa
jp
and
sub
mov
xchg
gs
test
adc
ins
or
push
xor
loope
jmp
ret
jae
fdivr
imul
stos
ss
sub
cs
and
stos
out
int3
mov
cld
xor
mov
shr
and
out
sbb
pushf
scas
or
inc
dec
cmp
nop
sub
lods
test
test
sub
lock
les
scas
pop
out
lods
mov
icebp
jnp
out
jp
push
(bad)
and
cmp
jl
ins
movs
push
cmp
push
rcl
push
pushf
jbe
mov
or
(bad)
ficomp
push
sub
cmp
jmp
aad
jne
cmps
jae
(bad)
test
js
mov
xchg
mov
jl
sub
pop
mov
ins
or
std
(bad)
test
test
in
xchg
repnz
(bad)
mov
jnp
xor
mov
sub
ins
pop
push
popa
cmps
cwde
ret
xor
in
pop
(bad)
les
mov
mov
add
scas
sbb
add
jg
arpl
xchg
mov
ret
ins
rol
ss
mov
and
ror
test
and
xor
faddp
in
cmp
mov
cs
or
out
xchg
repz
or
out
sub
jno
push
xchg
sub
cmp
rcr
jnp
jle
xor
repz
into
mov
shr
into
cdq
cmps
push
pop
(bad)
fistp
aaa
mov
cli
inc
lods
cmp
pop
dec
jnp
sbb
or
adc
jl
rol
and
or
jne
add
add
out
dec
(bad)
pop
sahf
and
fs
dec
cld
mov
sub
fisttp
movs
lds
xor
fdiv
sbb
cmp
mov
js
sub
je
cdq
sub
outs
ds
cmp
sbb
ss
xor
iret
(bad)
dec
adc
xchg
jno
adc
xor
mov
inc
addr16
repnz
add
mov
cmp
cmp
dec
mov
sbb
call
pop
adc
dec
jge
and
dec
test
inc
retf
sub
pop
sub
pop
inc
dec
xchg
scas
or
xor
loop
cmp
cmc
enter
xor
and
dec
int3
test
cmp
mov
pop
sar
or
repnz
dec
fimul
push
fwait
stos
fadd
jp
cmp
jge
retf
dec
mov
adc
repz
out
addr16
inc
jle
and
rcl
sar
add
fs
dec
movs
arpl
cs
shr
adc
xchg
mov
pop
sub
dec
aas
aaa
jecxz
xchg
das
inc
add
and
mov
push
mov
or
xchg
jbe
pop
pop
(bad)
cld
call
jbe
scas
mov
and
add
mov
fisub
fwait
sbb
sbb
aad
fcom
push
mov
into
fs
jecxz
loope
dec
cmp
lahf
cmp
pop
jnp
daa
fdiv
adc
sub
push
test
sbb
stos
mov
fmul
test
arpl
mov
add
jg
ja
in
adc
ds
cs
xchg
ret
add
sub
or
or
and
mov
push
pop
jnp
jmp
adc
and
adc
sub
pop
(bad)
cmps
pop
cwde
and
test
cmp
iret
jle
fs
adc
mov
sbb
mov
xor
cmp
cmc
icebp
xor
cwde
in
lods
or
test
mov
mov
pop
cmp
push
lods
loopne
mov
inc
or
mov
mov
push
(bad)
fist
jg
daa
push
and
cmc
pushf
arpl
pusha
inc
fiadd
hlt
mov
test
sti
call
(bad)
mov
push
push
hlt
out
btr
cmps
push
repz
adc
mov
xor
enter
jbe
rcl
jae
out
xchg
jns
hlt
lahf
loop
ins
mov
out
imul
pop
jmp
test
push
outs
call
inc
popf
add
cwde
mov
imul
ret
push
mov
pop
fadd
or
xchg
push
pop
jge
jle
mov
xor
and
dec
cmp
pop
dec
iret
icebp
xlat
jp
jns
sub
add
adc
mov
addr16
push
xor
jl
inc
mov
cs
cmp
bound
lea
push
out
and
cs
xchg
add
(bad)
cli
in
test
xlat
sbb
imul
push
inc
mov
lock
xor
in
out
pop
or
cmc
(bad)
div
jnp
push
pop
mov
int
mov
and
pop
pop
jns
mov
(bad)
pop
iret
ja
cmp
or
adc
fwait
pop
movs
aas
cmp
add
push
pop
imul
lds
mov
(bad)
std
pusha
pop
xchg
data16
xor
call
stc
stc
xor
(bad)
(bad)
jns
jmp
repnz
popf
xchg
es
cmp
sti
xlat
mov
popa
mov
jb
adc
xor
pop
in
int3
xchg
and
movs
ds
mov
mov
sbb
sysenter
sub
leave
sbb
rcpps
add
pop
sub
addr16
test
outs
scas
cvtps2pi
jecxz
push
outs
sbb
fist
aam
push
sub
repz
popa
mov
dec
dec
mov
mov
sar
push
mov
pop
cmp
adc
int
je
sub
mov
adc
and
inc
jns
xlat
test
mov
mov
mov
ret
sbb
lods
jns
xor
data16
(bad)
mov
imul
xor
enter
lods
or
and
(bad)
lahf
xchg
mov
pusha
lahf
xchg
out
pop
jb
sbb
jae
(bad)
inc
dec
and
imul
fs
leave
jecxz
jmp
jns
add
ror
dec
xchg
push
mov
mov
bound
mov
rcl
aaa
shr
ret
dec
repnz
xchg
inc
push
adc
mov
mov
les
cmp
rcr
cs
push
clc
sbb
sti
outs
xchg
or
push
sti
not
ret
ficomp
(bad)
(bad)
jmp
sahf
outs
cmp
mov
(bad)
pop
push
jmp
retf
test
and
jl
or
jmp
pop
mov
add
jle
ficom
xchg
push
nop
mov
test
in
adc
pop
pop
jmp
dec
xchg
or
sbb
push
mov
ins
cld
push
dec
adc
jle
stos
mov
mov
icebp
daa
cmp
xor
mov
rcr
dec
sbb
inc
sbb
nop
pop
aaa
loopne
and
aam
cs
inc
movs
adc
mov
push
sbb
push
jp
mov
(bad)
adc
xchg
xor
push
xchg
mov
or
outs
pop
add
call
retf
enter
dec
adc
dec
xchg
pop
test
mov
and
into
sbb
scas
leave
shl
in
aas
inc
sub
fwait
icebp
pop
stos
nop
dec
mov
xchg
or
mov
jo
jne
stos
sub
push
addr16
retf
or
fs
jg
out
mov
shr
aas
mov
(bad)
sub
lds
call
adc
neg
ss
shl
pop
lock
cmove
retf
pop
aam
jmp
out
shl
push
xchg
cli
pop
xor
fnstenv
fnsave
inc
inc
xchg
dec
jnp
xor
or
and
pop
mov
sub
add
xor
mov
sub
test
inc
cmp
and
popf
jmp
sub
push
mov
or
pop
aas
clc
sbb
cwde
fisub
gs
int
adc
ss
std
ret
jmp
pusha
pushf
or
xchg
popf
inc
xlat
fs
loope
cli
sub
or
int
out
mov
fldcw
dec
and
or
mov
fsubr
movs
outs
test
mov
cli
or
push
mov
addr16
ins
sbb
mov
cmps
stos
scas
lahf
outs
inc
stc
pop
push
mov
cld
in
pop
cmp
jnp
(bad)
push
or
cmps
sub
scas
sbb
lods
ret
mov
jmp
test
push
xor
shr
xor
aam
fild
adc
mov
dec
pop
pop
push
xor
sub
loopne
push
call
adc
and
pop
pop
xor
arpl
jnp
adc
dec
mov
mov
jle
mov
adc
mov
adc
je
jmp
mov
iret
mov
push
xrstors
sub
jecxz
dec
pop
sbb
mov
test
mov
pusha
sti
inc
ret
test
or
cwde
xor
pop
jp
sahf
into
jmp
daa
inc
shr
jl
push
add
push
call
arpl
test
mov
shl
xchg
dec
and
push
sbb
pop
mov
cmp
addr16
rcr
and
stos
inc
xchg
mov
repz
mov
sub
jmp
ret
pop
cli
out
cmps
loopne
sub
stos
clc
xchg
inc
loop
pop
or
add
outs
(bad)
in
and
jmp
lock
jg
aad
outs
fucomp
lds
test
clc
je
pop
dec
push
out
mov
add
stos
arpl
push
loope
xor
int
push
jge
lock
sbb
mov
sub
cmp
mov
dec
cmp
and
call
add
and
shr
cmp
push
ja
xchg
mov
bnd
dec
cld
push
mov
adc
push
rcr
lds
inc
push
xor
lods
sub
xor
xchg
mov
jnp
movs
imul
mov
ins
loopne
daa
test
jns
and
scas
push
xchg
shl
(bad)
call
stos
dec
imul
js
out
xchg
cld
or
ins
jle
stos
pop
mul
jge
movs
dec
repz
movs
shr
(bad)
dec
mov
stos
sti
xchg
xchg
into
outs
addr16
jb
pusha
fidivr
add
into
fimul
(bad)
xor
aas
sub
loopne
or
in
sbb
mov
mov
xchg
pop
loopne
(bad)
adc
sti
dec
scas
sahf
mov
dec
inc
or
mov
cmps
adc
mov
repnz
(bad)
fsubr
(bad)
mov
inc
stos
dec
cmp
jp
in
into
cmp
add
mov
pop
sbb
pop
loope
rcr
jns
mov
add
fld
dec
dec
mov
repnz
or
ret
pop
push
pusha
enter
ss
jp
(bad)
loopne
mov
fs
loope
push
adc
ins
jnp
ffree
inc
fmul
fstp
nop
out
sbb
aaa
pop
push
cmp
sbb
je
loop
sub
js
daa
mov
inc
inc
and
shl
in
ret
pop
icebp
xchg
cld
pushf
pop
int3
std
std
pushf
pop
jp
dec
mov
sbb
imul
imul
or
and
fwait
cmp
js
inc
popa
fstp
pop
in
popa
and
sbb
xchg
pop
push
jmp
dec
imul
mov
sbb
xor
xlat
cld
mov
push
push
outs
inc
icebp
data16
sub
data16
stos
call
fisttp
mov
pop
jno
xchg
push
jmp
pushf
test
jp
mov
sub
cwde
inc
xchg
adc
xor
xchg
std
hlt
outs
sbb
sub
dec
xor
jmp
mov
test
ins
ss
cmp
jg
fld
mov
aaa
dec
pushf
cmp
mov
test
pop
rcr
or
daa
in
mov
push
ret
fisttp
iret
imul
bound
or
mov
int
sub
loopne
lds
push
xor
test
mov
pop
jb
outs
sbb
and
stos
mov
(bad)
mov
call
cmps
(bad)
ds
into
add
adc
sar
mov
test
cs
sbb
fldcw
ret
(bad)
mov
push
int3
xchg
lds
std
rcl
ret
outs
aas
dec
ret
lock
pop
pop
cmc
pushf
scas
into
fst
test
pop
jbe
scas
lods
add
in
jl
xchg
int
jmp
je
bound
adc
int
loope
retf
xchg
mov
or
(bad)
dec
adc
pop
inc
mov
jmp
sti
mov
mov
adc
aam
lock
je
shr
das
sub
fld
leave
adc
das
retf
jle
fwait
adc
jmp
fidiv
call
or
aad
xor
fbld
ins
mov
and
out
pusha
xor
stos
push
imul
cmpxchg
sub
out
ret
mul
cmps
mov
popa
es
idiv
pop
jmp
jle
push
xor
outs
pop
ss
rcr
in
push
and
repnz
das
sbb
sbb
mov
xchg
jp
std
out
ins
das
js
outs
call
jnp
sbb
fwait
pop
jecxz
jl
mov
pop
lds
arpl
cld
int
xchg
mov
and
rol
adc
or
jmp
lods
push
jl
sbb
jno
cmp
dec
push
fistp
stc
jns
mov
sub
mov
popa
jle
cmp
inc
sub
xchg
imul
jg
in
movs
sbb
mov
lods
mov
jge
and
inc
movs
jae
movs
lea
loopne
outs
push
cmp
mov
push
loop
pop
dec
retf
call
out
adc
or
jo
sbb
(bad)
stos
xchg
scas
arpl
sub
mov
or
mov
sahf
add
push
fild
cmp
mov
out
xor
dec
fmul
stc
bound
leave
mov
pop
popa
xchg
mov
mov
jo
movs
(bad)
aad
mov
xchg
out
push
dec
cwde
or
stc
cmp
jnp
out
cld
dec
lods
jle
les
cli
(bad)
std
inc
lods
das
mov
cmp
in
mov
retf
cwde
cmps
push
hlt
dec
mov
mov
lock
mov
cmp
ins
sub
stos
jp
push
jmp
cmps
mov
stc
shl
xchg
push
fsubp
pusha
sbb
or
ret
adc
jae
inc
jmp
adc
sbb
mov
in
movs
sub
cmp
push
iret
ds
mov
pop
pop
push
data16
sub
dec
adc
mov
aad
xchg
gs
mov
jg
jmp
inc
jne
retf
sahf
rol
out
cmp
xlat
jbe
lods
jne
in
cdq
adc
sub
xor
fwait
leave
sbb
in
int
repnz
loope
cmp
jp
mov
mov
jmp
push
fdivr
mov
xchg
pop
xchg
imul
sbb
cmps
mov
inc
dec
pusha
outs
lahf
mov
mov
jl
inc
mov
xor
or
ret
mov
pop
inc
rcl
jecxz
jmp
mov
jl
sbb
mov
jecxz
fstp
call
sub
push
fs
mov
shl
mov
out
inc
adc
jmp
mov
inc
hlt
rol
fwait
adc
imul
pop
pushf
fimul
fstp
mov
add
scas
dec
mov
and
mov
xor
mov
and
outs
pop
and
daa
inc
add
ja
pop
and
mov
pop
push
(bad)
lea
test
push
or
adc
cli
test
pop
xchg
loop
sub
xchg
mov
adc
in
adc
xchg
sub
dec
dec
jbe
mov
cmp
lahf
xchg
fcos
fisubr
leave
and
std
mov
pop
out
mov
pop
pop
adc
mov
jb
push
mov
stos
cmps
je
push
sub
pop
xchg
pop
loope
adc
push
add
or
ret
jmp
pop
mov
inc
push
mov
or
daa
(bad)
in
and
(bad)
(bad)
fisubr
dec
pop
pop
xor
icebp
jb
cmp
ret
cs
popf
mov
xchg
fldenv
inc
hlt
sbb
out
dec
aas
adc
fnstcw
mov
leave
sbb
or
je
call
iret
fwait
add
dec
and
(bad)
adc
sbb
fucomip
jge
sbb
or
or
rcl
mul
movs
inc
xchg
cmp
cmp
mov
sti
(bad)
cdq
mov
(bad)
in
out
(bad)
fisub
jl
jmp
shl
pop
xchg
nop
not
or
cmp
mov
pop
test
jmp
jmp
in
push
inc
xchg
addr16
push
xchg
push
pop
scas
dec
xor
cmp
cmp
pop
cdq
test
pop
in
or
push
or
pop
mov
xchg
sub
mov
push
inc
leave
lods
xchg
inc
push
xchg
adc
lods
adc
and
mov
add
adc
cld
inc
repnz
xor
xchg
leave
retf
lods
scas
sar
adc
movs
ss
dec
jo
and
(bad)
jmp
adc
inc
out
outs
and
stos
xchg
stos
shl
loop
or
pop
sub
dec
mov
int3
ds
and
xor
push
out
pop
mov
push
repz
bound
movs
sub
ins
and
ficomp
sti
jg
and
pop
dec
gs
mov
icebp
cdq
jno
or
or
sbb
out
in
in
xchg
push
mov
data16
scas
push
lods
push
scas
in
mov
mov
mov
inc
push
sbb
fisubr
out
test
push
cmp
es
into
lods
aam
loopne
jb
mov
ins
loop
movs
mov
jno
lods
test
outs
pop
sbb
add
aas
mov
int3
shl
ss
add
ret
pop
mov
lods
cwde
xchg
dec
jbe
mov
xchg
dec
cmp
xor
mov
test
sub
pop
pop
test
xchg
cs
cli
scas
cdq
mov
js
in
(bad)
adc
movups
out
sub
cmp
and
ds
imul
adc
stos
pop
pop
loop
or
pop
dec
mov
cmp
out
popf
call
and
in
fst
mov
out
js
stc
sti
dec
scas
jbe
sub
sub
rol
loope
int3
and
mov
cmp
iret
sti
cmp
call
pop
cmp
repnz
outs
sbb
adc
push
stos
clc
ss
(bad)
push
xor
aaa
or
inc
mov
mov
adc
or
(bad)
mov
jns
pop
add
in
jge
rcl
or
nop
es
cmc
std
neg
or
xor
and
adc
or
sahf
fild
sbb
add
fwait
bt
daa
gs
jle
pop
jmp
push
add
xchg
movs
push
(bad)
fwait
je
data16
out
pop
and
into
aad
and
push
xchg
sbb
repnz
dec
sub
addr16
mov
mov
icebp
bound
cwde
inc
movs
cmp
fimul
leave
into
push
mov
aaa
jmp
cwd
pop
sti
(bad)
adc
fisttp
out
imul
or
aas
xor
pop
cld
shl
ror
fwait
test
gs
mov
add
sub
dec
ins
popf
push
out
sub
in
jl
repnz
mov
cld
add
test
sbb
mov
clc
add
rol
test
bswap
dec
xchg
mov
stc
aaa
sahf
pop
cmp
rol
lods
pop
pop
push
add
add
int
call
in
pop
pop
push
imul
xchg
xchg
pop
test
pusha
sub
mov
mov
test
push
cmps
add
leave
sub
and
xchg
jae
rol
or
lea
je
in
bound
pop
jp
lds
arpl
mov
push
pusha
xchg
xchg
push
jmp
or
mov
and
fldenv
push
or
lods
arpl
mov
mov
jge
jmp
xchg
ss
adc
inc
xchg
sbb
(bad)
mov
movs
xchg
imul
cdq
lods
ja
push
aam
xor
push
cli
ret
and
imul
cmp
dec
inc
test
sub
mov
imul
test
imul
jne
outs
sar
clc
xchg
cld
pop
rol
addr16
push
popa
push
fldenv
pop
mov
fs
add
jmp
jns
lods
push
pop
mul
push
mov
sub
push
adc
xchg
fmul
call
jmp
jmp
gs
mov
arpl
sub
or
jmp
rep
inc
shl
dec
scas
xor
outs
xor
push
stc
iret
mov
sub
push
inc
xor
adc
stos
push
ins
pop
dec
and
mov
pop
add
ds
push
jno
pop
into
and
cmp
or
pop
stos
xor
add
fsub
gs
inc
push
mov
xchg
xor
xchg
dec
sub
push
pop
jbe
mul
push
test
xor
aaa
sbb
push
int3
mov
cld
push
cld
pushf
fs
mov
ficom
mov
arpl
cmp
push
shr
cmps
es
inc
scas
sub
mov
jp
fucomip
pop
mov
test
stos
cmp
movs
out
add
fs
sbb
mov
retf
push
imul
cmp
sbb
ins
shl
mul
adc
retf
lock
cmp
inc
movs
pop
add
mov
retf
xchg
mov
or
push
dec
xor
or
(bad)
movs
lods
xor
cs
push
pop
scas
(bad)
mov
cdq
jg
add
mov
cmp
stos
sub
pop
and
pop
mov
sti
push
loope
add
add
das
sbb
sbb
push
cdq
dec
jne
mov
mov
mov
jns
jecxz
inc
aaa
ins
mov
jne
cs
ja
cmp
jo
rol
jmp
ja
sbb
mov
mov
and
and
clc
test
xor
call
mov
mov
jns
mov
push
inc
stc
shr
adc
mov
ds
cmps
test
mov
jg
aas
sub
add
fisubr
add
xor
test
add
fsubr
ret
fcomp
aam
sbb
xchg
jl
xor
or
je
xchg
dec
addr16
loop
pushf
push
sbb
jnp
shl
or
push
mov
add
dec
jle
ret
mov
out
leave
sub
pop
lahf
dec
cli
jecxz
or
mov
mov
test
jecxz
jecxz
ss
icebp
cmp
call
cli
(bad)
clc
outs
mov
fisttp
pop
or
les
test
cmp
movs
push
pop
cs
(bad)
fild
fisttp
or
cmps
push
mov
jmp
fistp
add
push
es
sub
mov
mov
inc
and
xchg
pop
je
add
add
arpl
cmp
je
jl
rol
add
mov
ds
bound
jnp
test
mov
into
xor
loop
or
test
jb
outs
inc
jg
pop
mov
pop
add
push
enterw
sub
and
(bad)
mov
dec
pop
rol
pop
hlt
mov
mov
pop
ror
inc
mov
inc
adc
(bad)
(bad)
int
cmps
push
imul
xchg
test
jmp
sar
sbb
and
pop
addr16
(bad)
mov
cld
scas
jno
dec
(bad)
sub
loope
out
sbb
jmp
mov
cmp
in
(bad)
aad
push
xchg
cmc
xor
push
jb
and
ror
int3
pop
aas
lahf
test
sub
cmp
aaa
xchg
and
and
mov
dec
lods
push
std
lods
cli
psubusw
mov
mov
pop
enter
stc
shl
push
hlt
lock
leave
mov
in
pushf
mov
push
jno
lea
push
jecxz
push
pusha
sbb
jb
dec
pop
dec
ins
lock
stos
call
out
xchg
ficomp
je
xchg
and
jp
aam
and
(bad)
mov
push
inc
xor
enter
sbb
push
add
loop
jmp
pop
pop
cmps
iret
adc
cli
jne
retf
inc
mov
add
mov
mov
(bad)
xchg
ret
mov
pop
sti
xor
cmp
cmp
repnz
mov
sbb
inc
hlt
popa
jl
sub
mov
lds
scas
fisubr
xor
pop
sbb
fcmovnu
mov
mov
push
sbb
test
in
adc
ins
imul
xchg
lea
jmp
or
xor
cdq
mov
arpl
call
jge
dec
mov
xor
jmp
mov
cmps
adc
stc
ficomp
repz
(bad)
test
rcr
xchg
xor
push
test
jnp
push
in
stos
xor
push
and
pusha
pop
dec
xchg
mov
or
xchg
sbb
mov
pop
mov
inc
jl
pop
mov
ffreep
adc
adc
push
(bad)
lea
call
fcom
popf
jp
out
inc
lea
jno
xchg
mov
mov
jmp
lea
rcl
dec
pop
(bad)
ins
call
jns
(bad)
in
pop
xchg
pushf
mov
mov
add
sbb
shr
call
pusha
push
rol
in
lods
adc
(bad)
int3
(bad)
les
out
add
pop
pop
dec
lods
jl
je
test
in
pushf
and
mov
and
das
add
shr
xor
ret
cmp
inc
in
xchg
scas
fucom
jl
aam
mov
scas
xchg
push
pop
iret
rol
in
(bad)
call
mov
in
jecxz
push
mov
jo
out
inc
jno
cwde
out
sub
fst
rcr
mov
jne
popa
out
cmp
sub
loope
hlt
adc
mov
or
dec
in
xchg
rcr
and
push
jmp
or
xchg
xchg
and
mov
pop
and
test
outs
imul
retf
xlat
inc
je
lahf
enter
rol
lds
add
pop
fs
stos
int
shl
push
stos
add
lock
or
cmp
push
test
and
gs
add
gs
mov
ins
mov
fidivr
inc
dec
or
dec
out
mov
pop
aaa
(bad)
hlt
out
inc
(bad)
and
and
je
jo
dec
data16
mov
xor
push
mov
xchg
sub
loopne
dec
call
cmp
jb
and
xchg
(bad)
mov
shr
cmp
adc
xchg
lods
and
lds
pusha
aad
adc
aaa
retf
test
stc
and
test
xor
mov
xchg
jns
cdq
xchg
out
fdiv
cmps
rcr
jo
daa
dec
fnstenv
adc
add
scas
xor
movs
push
xor
in
jae
sub
sbb
mov
inc
dec
mov
dec
add
cmp
push
das
inc
aaa
jmp
or
and
xchg
and
ds
mov
in
sbb
push
pop
push
(bad)
popf
push
ins
mov
xor
mov
test
js
mov
jo
inc
ret
or
inc
and
pusha
mov
bound
call
pop
std
cmp
or
cli
pop
jge
and
cmp
pop
mov
scas
fsubr
pop
pop
test
push
ins
jo
push
popa
inc
dec
cmp
or
lods
int3
enter
and
sbb
jns
mov
ds
jne
mov
push
xor
cmp
iret
mov
sub
sbb
jp
sbb
inc
mov
(bad)
push
(bad)
adc
(bad)
jmp
outs
or
and
(bad)
sbb
es
pop
aam
or
cmp
arpl
add
dec
ret
test
jo
pop
xor
xchg
in
and
pushf
shl
mov
dec
arpl
sub
in
sub
inc
loop
sbb
cmps
push
mov
lahf
pop
(bad)
pop
daa
xor
jl
push
xchg
jge
scas
sbb
and
fmul
adc
mov
in
ret
mov
mov
jp
sahf
or
xchg
shl
xchg
test
lea
fwait
add
pushf
xor
jnp
mov
ror
jns
jecxz
(bad)
mov
inc
dec
jnp
pop
dec
repnz
pushf
lds
inc
icebp
and
addr16
xor
adc
cmp
pop
or
(bad)
mov
xor
(bad)
sbb
mov
stc
xor
xchg
add
loop
cmc
lahf
ins
ror
add
cld
push
push
mov
sbb
call
call
xchg
dec
or
cmp
xchg
or
loope
cdq
addr16
adc
add
sbb
sbb
(bad)
mov
pop
fcmovne
jne
shl
push
jecxz
sbb
inc
in
mov
mov
xor
push
fdiv
aad
faddp
push
(bad)
xor
ret
mov
inc
cld
pop
test
imul
mov
shl
adc
sub
mov
jge
fnstenv
jno
cdq
mov
xchg
in
repnz
xchg
push
scas
dec
dec
add
test
ret
xchg
jp
inc
ins
jecxz
pop
repz
icebp
sub
jge
mov
add
mov
adc
dec
sub
sub
loope
pop
adc
out
mov
rcr
stos
push
stos
gs
imul
icebp
push
aas
jne
push
sahf
cs
sub
shl
xchg
ja
push
lock
cmps
bound
das
or
fwait
cmp
data16
adc
jge
push
(bad)
mov
sti
shld
dec
loope
or
pop
int
jmp
shr
shl
xor
xor
inc
xor
jmp
pop
leave
out
push
mov
clc
dec
jnp
cli
push
bound
sti
pop
and
jns
dec
or
sbb
cmps
xchg
jecxz
jo
jmp
cwde
ret
rcl
mov
mov
data16
add
sti
xchg
pop
jns
sub
movs
pop
and
shl
sub
lds
loopne
or
lds
sbb
xchg
inc
leave
mov
and
adc
setl
stos
or
popf
mov
adc
aaa
jno
add
xchg
jle
push
add
cli
ins
in
iret
push
ret
imul
xchg
fwait
and
mov
out
cmp
jl
enter
aas
ret
and
cmp
mov
jp
cs
push
nop
out
cmp
cld
repz
shl
ret
push
push
ins
pop
(bad)
dec
push
jecxz
sbb
test
lods
sub
dec
lods
jmp
fwait
lods
pop
push
ja
lock
push
pusha
jb
xchg
movs
add
sti
fsubr
cmp
(bad)
mov
xchg
mov
retf
les
jo
call
aas
out
xchg
lock
mov
jno
cs
ins
arpl
and
inc
inc
mov
xor
xor
mov
lods
mov
dec
inc
call
mov
nop
dec
dec
adc
sub
sub
shr
sub
add
pop
add
pop
scas
inc
adc
xor
mov
jb
and
in
jge
(bad)
xor
mov
xor
ror
sbb
cmp
in
ficom
cld
dec
into
dec
in
sub
xchg
daa
adc
daa
push
inc
push
(bad)
(bad)
jl
pop
pop
or
sar
pusha
sub
out
out
cmp
add
popf
nop
scas
xor
fstp
ja
sub
jbe
ins
pop
pusha
ficomp
(bad)
pop
das
lock
leave
inc
pop
or
stos
mov
sbb
and
pop
pop
je
test
dec
addr16
jl
jp
mov
mov
jmp
(bad)
mov
jge
mov
in
mov
stc
stos
mov
rcr
(bad)
mov
xchg
fdivr
jae
pushf
repz
std
sahf
clc
jae
mov
arpl
push
aas
pusha
bound
xchg
adc
mov
daa
mov
pop
enter
xchg
hlt
dec
sub
das
cmp
stos
(bad)
jp
or
mov
jl
fldenvw
dec
xor
cli
cmps
test
fidiv
xchg
push
outs
cmps
sbb
sahf
add
lods
addr16
or
in
push
push
mov
xchg
push
sbb
aas
sti
adc
and
add
fmul
cmp
pop
mov
mov
jno
push
int3
sbb
push
xor
scas
arpl
add
add
xchg
test
or
hlt
add
push
stos
fs
push
dec
and
xchg
xchg
cmp
sbb
das
mov
(bad)
fmul
pop
ss
movs
sub
inc
gs
arpl
mul
dec
xchg
shl
dec
stos
mov
es
xchg
and
inc
test
jae
push
pusha
cdq
xchg
mov
jecxz
bound
inc
push
(bad)
hlt
jle
add
and
add
sar
pop
cdq
dec
mov
add
arpl
(bad)
inc
jmp
pop
and
mov
lods
add
jmp
cdq
and
inc
aaa
add
or
jecxz
dec
cmp
es
inc
dec
push
out
inc
sbb
add
hlt
dec
aas
push
int3
call
(bad)
mov
mov
add
and
pop
mov
sti
jg
xor
shl
pop
add
or
imul
jbe
std
push
clc
call
ins
xchg
mov
push
cmp
cs
mov
outs
cld
gs
sub
mov
adc
jmp
mov
std
xchg
jbe
xor
mov
sub
das
loopne
bound
popf
cdq
and
call
pop
leave
xchg
cld
adc
cld
loope
imul
outs
daa
cmp
jne
into
fild
loopne
ins
outs
movs
das
je
sbb
hlt
jecxz
mov
mov
mov
test
xchg
bound
xor
or
call
popa
stos
inc
sbb
retf
aaa
mov
xor
dec
jl
push
xchg
sbb
call
sbb
into
push
sar
adc
test
dec
aad
test
and
stc
nop
mov
or
add
scas
ja
push
mov
add
xlat
mov
lds
in
daa
in
popf
imul
not
fidivr
into
push
mov
adc
mov
push
lods
fld
cs
pop
hlt
jnp
frstor
push
enter
lahf
out
cdq
rcl
call
pop
push
adc
mov
or
push
inc
mov
out
mov
push
outs
inc
movs
cdq
lods
pop
imul
mov
push
jo
cmps
sbb
mov
or
pop
and
in
cmc
sti
out
xchg
addr16
sbb
xchg
bound
pop
sahf
stos
nop
int
jns
(bad)
mov
lods
push
inc
rcl
cli
(bad)
movs
mov
cmp
xchg
sub
psadbw
add
outs
dec
dec
(bad)
(bad)
(bad)
dec
stos
call
aaa
int
test
(bad)
shr
fimul
cmc
sbb
xlat
inc
add
xchg
mov
shl
iret
or
adc
ins
loope
jp
fimul
jle
shl
mov
xchg
fs
lds
popa
cs
ins
push
adc
cmps
outs
mov
in
sahf
out
xor
pop
mov
and
ja
cmc
cli
hlt
jb
imul
lods
in
adc
xchg
or
pop
push
jecxz
sbb
jl
add
gs
mov
paddd
das
inc
cmp
div
shl
or
push
xlat
xchg
mov
jnp
jge
jecxz
stos
test
inc
in
call
push
ins
and
xchg
scas
ds
fidivr
jmp
leave
or
sar
and
pop
(bad)
std
jmp
int
push
(bad)
je
xchg
cld
push
adc
and
adc
sub
es
pop
cmp
mov
jmp
fst
pop
fcom
jg
sar
data16
ja
daa
xor
rol
cs
sbb
daa
xchg
mov
push
jne
ins
mov
jnp
div
je
(bad)
mul
lds
inc
jnp
mov
push
retf
xor
adc
jmp
pop
lods
(bad)
and
mov
inc
mov
adc
adc
push
or
aad
stos
push
shl
dec
rol
repz
mov
push
(bad)
loope
jmp
pop
push
loopne
adc
jb
pushf
push
sub
mov
cmp
cmc
xchg
(bad)
mov
lods
mov
test
arpl
xor
sbb
(bad)
stos
jmp
ret
sar
lea
mov
mov
mov
xchg
and
jnp
mov
pusha
pop
out
lock
(bad)
retf
retf
repz
cmps
push
mov
daa
hlt
inc
push
mov
ins
in
ficom
cmp
jno
jne
push
(bad)
hlt
inc
xrelease
stos
icebp
pop
dec
imul
std
mov
cli
jbe
ins
sti
push
fcom
cld
(bad)
and
push
jns
inc
jns
ret
pusha
(bad)
dec
cs
outs
rcl
add
(bad)
fild
shl
sbb
push
dec
int
ins
scas
imul
push
or
in
dec
sti
fiadd
mov
or
mov
xchg
push
ret
pop
loop
xchg
sbb
jl
mov
retf
inc
loope
aas
cmp
or
cmps
inc
cmps
div
pusha
adc
lods
xchg
mov
dec
adc
jns
scas
repnz
fcmovnb
loopne
stc
jne
ins
or
xchg
add
stc
mov
mov
jo
sar
pop
daa
cmps
stos
pop
sub
push
cdq
push
int
jb
(bad)
push
inc
xor
jmp
movs
ss
ficom
jmp
ficomp
and
into
mov
xlat
call
fxch
aad
add
in
cmp
lea
std
test
and
ret
dec
fidivr
xchg
sbb
mov
rcr
ja
lea
in
loop
push
test
pop
ja
imul
bound
inc
sub
cmp
pop
inc
or
neg
mov
div
dec
nop
mov
mov
adc
repz
je
xor
push
add
sbb
inc
out
fistp
sbb
scas
stc
xchg
adc
sbb
sbb
jmp
stos
int3
pop
and
xor
out
mov
dec
jp
cld
xchg
cmc
cmc
call
ret
femms
lods
mov
out
stos
fsub
pop
pop
loopne
sub
shl
fidiv
adc
xchg
repz
inc
mov
retf
sahf
test
and
shl
popf
xchg
(bad)
jnp
xchg
(bad)
jmp
popa
test
jle
call
in
rol
loopne
pushf
pop
push
leave
scas
mov
neg
sbb
iret
hlt
les
loope
pop
sbb
fadd
dec
and
inc
xchg
(bad)
pusha
adc
out
es
js
fdivr
sbb
xchg
popf
sbb
test
les
adc
test
sbb
jp
and
mov
inc
add
sbb
inc
push
sbb
pop
fdiv
(bad)
or
imul
gs
(bad)
mov
stos
retf
or
das
inc
mov
mov
inc
xchg
mov
adc
arpl
and
add
jno
xchg
lds
test
retf
push
sahf
push
mov
pushf
or
xchg
adc
cmp
test
push
das
pop
add
sbb
retf
xchg
or
rcr
test
ficom
fnstsw
and
mov
js
inc
sub
push
outs
push
adc
dec
in
cdq
lds
outs
mov
xchg
push
xchg
jg
cwde
xchg
fnstenv
xlat
popa
cli
push
daa
int
cmp
data16
adc
mov
push
std
frstpm(287
push
pop
cli
add
(bad)
ss
pushf
icebp
dec
jp
jo
ja
loope
aaa
push
and
cmp
cs
xchg
and
js
daa
mov
mov
outs
mul
add
imul
pop
cwde
mov
dec
add
(bad)
hlt
inc
aad
cmp
sub
push
cwde
loopne
lods
test
or
pushw
leave
mov
lods
sbb
dec
(bad)
outs
and
cmp
inc
xor
push
pop
dec
outs
stos
mov
push
pop
packssdw
dec
or
inc
retf
mov
loop
sar
pop
mov
shl
out
adc
in
std
(bad)
pop
test
cmp
(bad)
or
xchg
je
jno
loope
push
out
call
loope
push
cmc
sbb
lds
into
(bad)
pop
cmp
call
jg
rcr
loop
mov
adc
pop
adc
lods
push
jae
cmps
cld
call
push
enter
push
mov
inc
add
pop
ret
out
jnp
jb
js
mov
pop
out
dec
scas
jmp
cmps
ins
cmp
mov
xchg
xor
scas
push
lods
lds
test
mov
cdq
sar
dec
cdq
xor
ret
pop
jo
aad
seta
mov
(bad)
jb
(bad)
cmc
aam
mov
enter
sub
stc
xchg
jns
pop
test
call
and
movs
and
lock
js
push
lock
fisubr
mov
sbb
mov
push
jnp
adc
aas
retf
inc
mov
mov
popa
iret
jp
ins
pop
jbe
xchg
loopne
sbb
ror
jmp
or
clc
neg
push
mov
xor
mov
loop
(bad)
push
mov
lds
data16
push
push
(bad)
fidivr
xchg
push
xlat
loop
mov
jp
push
adc
mov
push
out
push
xor
push
sbb
cmps
fs
and
cmp
push
xor
add
xor
add
(bad)
icebp
xchg
mov
mov
mov
or
sub
and
pusha
cmp
inc
and
xor
dec
jmp
cmp
mul
xor
enter
adc
pop
jb
fdivr
test
and
sbb
out
inc
mov
push
xchg
test
mov
mov
jmp
jae
mov
xor
and
push
push
scas
in
sub
xor
jne
pop
repz
enter
xchg
mov
xlat
mov
cmp
adc
sahf
iret
or
mov
inc
pop
sub
add
add
rcl
push
mov
pop
std
xor
cmovp
les
cmp
lock
gs
mov
mov
into
js
icebp
sub
mov
std
mul
movs
adc
adc
leave
mov
xchg
clc
mov
test
mov
and
nop
mov
into
add
adc
aas
sub
mov
push
mov
inc
add
mov
aaa
por
adc
push
push
iret
fiadd
adc
pop
or
mov
mov
int3
mov
dec
ror
mov
popf
mov
add
push
out
adc
add
mov
iret
cwde
pop
mov
xor
mov
pop
pop
cmp
mov
xchg
cs
mov
outs
hlt
add
pushf
jmp
jle
push
aad
loopne
hlt
sub
test
adc
in
or
adc
dec
int3
pop
and
test
inc
sbb
ror
jmp
pop
jns
mov
pusha
jno
jne
push
xlat
jne
fcom
test
push
test
dec
(bad)
pop
es
mov
inc
je
lds
xchg
dec
addr16
cs
push
scas
ret
dec
mov
xor
pop
pop
dec
pop
stos
dec
scas
lods
push
in
xchg
add
adc
pop
in
clc
mov
dec
cmps
pop
in
add
(bad)
idiv
cli
and
jo
(bad)
pop
mov
mov
pop
in
call
mov
shl
aam
dec
clc
xor
adc
in
ins
sub
test
sahf
loopne
popf
sbb
fwait
inc
int3
out
jae
or
adc
inc
imul
into
and
cmps
std
mov
add
mov
sub
inc
nop
sbb
popa
out
enter
or
mov
rcl
jb
dec
mov
lds
fsubp
mov
(bad)
ror
lods
xor
inc
movs
ins
add
jmp
ins
dec
dec
inc
aam
lds
ret
out
lods
pop
adc
repz
mov
mov
pop
(bad)
in
xchg
jns
mov
hlt
mov
sahf
push
or
out
out
fsubr
scas
ret
iret
mov
movs
xlat
std
adc
gs
sahf
pop
sbb
cwde
out
jb
std
xchg
out
push
mov
xor
retf
jge
cmps
mov
or
ins
dec
cvtps2pi
into
mov
ja
enter
shl
clc
adc
push
dec
xor
mov
sub
jbe
push
outs
rol
mov
cmps
sahf
ret
inc
in
push
mov
mov
inc
mov
cmp
sti
hlt
dec
sbb
repz
(bad)
or
add
push
or
pop
sub
sbb
int
cmp
jo
mov
fistp
add
movs
sar
rcr
fcomp
push
hlt
xor
in
cwde
and
mov
push
mov
sub
js
ror
pop
xchg
or
cmp
jnp
push
int3
push
retf
mov
fsub
fsub
(bad)
mov
(bad)
pop
cmp
mov
outs
fsubr
inc
adc
(bad)
pop
xchg
bound
sahf
ja
mov
push
nop
inc
retf
out
std
imul
neg
mov
dec
aas
add
adc
and
xchg
xor
das
rol
cmps
inc
add
inc
pop
mov
ret
and
adc
lea
mov
sbb
sub
mov
ja
fwait
jbe
pop
jns
xlat
imul
mov
mov
mov
hlt
fild
add
movs
push
(bad)
shl
mov
not
retf
mov
je
scas
lock
test
out
push
fbstp
mov
and
sbb
xchg
xchg
jmp
sbb
retf
dec
pop
aad
cmp
(bad)
mov
mov
ret
fmul
shl
push
pop
pusha
jns
pop
xor
inc
cmps
sub
leave
pusha
fwait
imul
bound
add
js
pop
push
xor
(bad)
xchg
inc
int3
daa
sbb
sub
sub
jmp
add
lahf
mov
jmp
pop
inc
xchg
cmp
aad
dec
(bad)
sbb
hlt
imul
out
mov
mov
das
xor
sub
xchg
scas
adc
xchg
jbe
imul
or
mov
mov
(bad)
(bad)
sub
(bad)
popf
adc
adc
cld
aam
mov
rcl
sti
and
adc
mov
fidiv
mov
pushf
movs
fcom
leave
(bad)
ror
mov
push
or
outs
sti
mov
in
hlt
ins
cmp
fst
repnz
leave
fbstp
xor
retf
sub
int
xchg
sbb
jns
mov
add
cmp
mov
stos
xor
movs
test
(bad)
adc
mov
aaa
dec
test
cmps
mov
mov
lahf
ret
xor
jmp
sub
pop
xchg
loopne
shr
adc
sar
pop
int3
sbb
in
iret
jnp
ds
(bad)
or
jb
aad
test
add
scas
jg
mov
ins
push
(bad)
dec
adc
call
xchg
fld
jbe
scas
sub
push
xchg
cli
mov
push
addr16
scas
dec
out
shl
cmp
inc
inc
mov
into
cdq
add
pop
jl
mov
lahf
les
ins
mov
dec
test
jb
in
adc
sahf
mul
stos
mov
dec
fcomip
data16
sub
je
mov
jae
push
enter
fmul
pushf
inc
fstp
pusha
pmullw
dec
sub
cld
xor
loop
and
adc
retf
cmps
pusha
add
mov
not
out
lods
push
in
mov
rcr
add
inc
xor
lahf
mov
lods
sub
adc
cmp
ja
or
rol
retf
push
add
adc
aad
arpl
icebp
repz
loope
dec
dec
or
cmp
pop
push
imul
imul
adc
mov
sbb
xchg
jp
ret
xchg
mov
(bad)
and
xor
cmp
aas
(bad)
pop
stos
push
xlat
add
sub
jmp
pop
pop
push
xlat
icebp
sti
pop
dec
mov
ins
mov
adc
mov
shr
movs
sahf
cs
mov
cmp
push
rcl
scas
shl
dec
fbld
xchg
mov
xor
mov
mov
jnp
mov
pusha
(bad)
pop
or
adc
enter
mov
ss
fcmovne
ss
cmp
dec
sub
out
mov
dec
cmp
mov
test
test
push
in
jne
repz
retf
popa
xor
je
cdq
sub
int3
stos
and
fsubp
int
int3
inc
imul
jmp
cli
clc
cmp
fstp
movs
push
inc
push
dec
imul
sbb
imul
sbb
inc
xor
mov
cmc
aam
les
cdq
out
retf
aaa
leave
shr
lods
xchg
adc
lds
sbb
(bad)
adc
loop
jecxz
sub
mov
add
mov
data16
cld
cld
test
stos
inc
(bad)
fist
out
dec
cmps
or
or
fs
leave
adc
test
(bad)
xchg
adc
(bad)
aaa
popf
inc
sub
xchg
outs
ror
cmps
in
xlat
inc
push
dec
pop
jbe
jae
dec
mov
movs
sub
or
xchg
sbb
jb
enter
mov
mov
push
adc
mov
push
add
sbb
aaa
dec
cld
lods
mov
mov
arpl
test
adc
lea
aas
scas
dec
rcl
test
aam
mov
int
aaa
jno
repnz
cmp
mov
ins
hlt
imul
mov
push
cmp
jbe
mov
jnp
lahf
into
mov
in
call
dec
loopne
(bad)
push
fisub
ret
lea
mov
jbe
or
shl
jmp
(bad)
sbb
outs
adc
outs
lock
pop
icebp
outs
cmp
fwait
into
xchg
dec
mov
adc
pop
lahf
js
movs
inc
hlt
or
imul
scas
loope
and
scas
jb
mov
aas
in
pop
ret
cmp
dec
cdq
ret
out
or
ret
mov
into
movs
sub
rol
popf
mov
aad
lds
and
xor
cmps
cs
jne
bnd
mov
inc
idiv
ins
mov
sbb
(bad)
aaa
imul
stc
sbb
push
mov
inc
add
push
inc
sti
test
mov
arpl
stc
mov
push
mov
push
cli
xchg
lods
sbb
(bad)
or
pop
cld
test
fs
add
mov
fnstenv
mov
mov
and
fisttp
ja
popa
ret
jle
cmp
out
out
lea
push
int
mov
xor
jmp
or
or
and
loop
aad
mov
ins
arpl
pop
les
dec
adc
jmp
mov
arpl
jecxz
repnz
sub
sbb
and
inc
mov
shl
nop
or
mov
fisub
inc
inc
mov
inc
stos
mov
adc
xor
ret
adc
inc
dec
enter
adc
mov
and
xor
int3
rcl
xchg
mov
popf
sbb
push
jns
aas
lds
cwde
mov
stc
stc
mov
mov
sub
fist
je
mov
push
cmp
cmp
or
out
ja
jae
add
bound
add
lahf
mov
inc
mov
dec
cmp
push
jne
es
shl
and
mov
xor
sbb
push
or
cmpps
mov
jbe
fbstp
lods
jg
icebp
mov
push
das
adc
cmp
std
xor
push
and
lock
xchg
imul
adc
push
adc
add
cs
aad
mov
pusha
repz
push
fild
cmp
adc
aaa
xchg
scas
sub
dec
leave
inc
add
div
pop
clc
js
mov
loop
sbb
mul
jae
push
pop
test
dec
xchg
(bad)
pop
dec
mov
into
cmp
nop
and
sti
out
aad
nop
retf
push
in
cmc
push
shr
add
sub
out
iret
icebp
jg
mov
int3
dec
fild
out
push
hlt
es
jmp
aad
and
leave
cmps
fsub
xchg
or
sub
mov
dec
adc
ja
sbb
add
adc
mov
jb
adc
add
in
loopne
jbe
lea
and
add
icebp
xchg
cmp
jg
sub
sbb
fcom
lea
jmp
cmp
add
jmp
inc
jae
mov
gs
push
cli
scas
jmp
scas
imul
imul
add
addr16
das
nop
add
ins
sbb
fcom
cdq
mov
mov
fist
add
push
(bad)
mov
pop
push
jp
shl
iret
rol
cmps
mov
into
in
jle
mov
adc
push
fdiv
push
mov
std
dec
(bad)
push
xlat
pop
cmp
or
add
jle
mov
and
or
icebp
hlt
or
xchg
mov
inc
push
push
mov
js
clc
cdq
xor
bound
xchg
add
dec
dec
inc
cmps
loope
push
push
push
fcmovb
repz
pop
arpl
sar
repz
jae
jg
in
mov
xor
mov
repz
xor
xor
popa
and
inc
es
mov
std
test
and
std
and
mov
sti
fwait
pop
jmp
gs
mov
rcl
es
les
dec
jl
sbb
mov
fwait
and
repz
scas
push
stc
mov
mov
sub
aad
data16
mov
inc
push
xor
cmp
sbb
lods
jle
jmp
sub
and
sbb
test
sbb
xor
jge
dec
add
pop
(bad)
mov
cs
retf
cmp
and
shl
arpl
aad
add
pop
add
and
push
inc
cmp
arpl
cmp
scas
add
pusha
das
dec
shl
lods
cmps
xchg
inc
cmp
sbb
mov
gs
xor
inc
cld
into
add
dec
pop
xchg
pop
xchg
jmp
adc
sbb
std
jge
push
sbb
mov
xchg
jmp
pop
cld
mov
xor
sbb
out
cli
sub
xchg
fsub
sbb
lea
xchg
push
inc
mov
aas
xlat
push
push
out
xor
fild
sub
pop
dec
and
aas
addr16
lds
pop
stos
clc
addr16
pop
dec
int
jmp
enter
sub
mov
add
mov
hlt
cld
mov
mov
scas
inc
xor
aaa
jg
pop
out
test
int3
mov
push
out
test
adc
test
les
push
mov
push
pusha
sub
pop
ins
aam
add
jno
sub
test
sbb
xchg
aas
lahf
mov
fadd
dec
fnstenv
in
movs
(bad)
mov
jmp
jecxz
out
test
test
mov
mov
cmc
xor
jp
(bad)
fild
loop
jae
jo
dec
ja
mov
cli
adc
fisttp
jmp
jae
push
and
push
retf
sbb
sbb
adc
loop
push
out
movs
inc
cdq
int3
fsubp
jmp
cmp
mov
mov
push
pop
sbb
addr16
iret
fmul
cmp
out
and
sbb
push
jae
or
das
xchg
rcl
sahf
mov
out
out
ins
mov
xchg
push
sbb
adc
add
pusha
adc
mov
jmp
xchg
test
push
mov
lods
sbb
fnstsw
cmp
jae
bound
enter
or
pusha
jb
mov
mov
stos
(bad)
es
fwait
test
xor
cmp
and
xorps
mov
test
jb
stc
xor
sub
out
xchg
and
repnz
fwait
sbb
hlt
or
and
scas
out
pusha
popf
push
pop
xchg
cmp
pop
pop
es
cld
gs
out
nop
cmps
and
jle
sbb
aaa
inc
pop
pop
pop
cmps
call
(bad)
rcl
pop
xchg
pop
cmp
bswap
pushf
pop
pop
dec
mov
fcmovnbe
sar
mov
mul
cld
or
enter
popa
lahf
lock
iretw
in
pop
sbb
sub
xchg
xlat
adc
or
sub
push
jbe
rcr
mov
mov
jecxz
sub
sub
aad
imul
sbb
mov
inc
xchg
arpl
into
into
xchg
dec
ins
bnd
lods
push
and
(bad)
(bad)
iret
mov
sub
and
test
ficom
in
and
push
shl
out
and
ss
sbb
xchg
mov
mov
loop
and
push
cmp
cmp
imul
jne
sti
pushf
xchg
test
sub
ficom
push
rol
daa
jg
mov
push
sub
out
scas
xchg
movs
lds
jnp
mov
fstp
xor
jg
aam
pop
test
jo
cmp
cmp
icebp
call
pop
inc
inc
push
jg
jnp
aaa
ret
cmc
push
cwde
jp
inc
dec
cmp
cmp
or
adc
rcl
mov
dec
inc
mov
shl
or
lds
call
ja
int3
adc
mov
(bad)
(bad)
lds
hlt
sub
inc
adc
ss
sub
(bad)
jnp
xchg
dec
dec
je
xchg
mov
pop
push
pop
aaa
sbb
or
push
sbb
ja
or
dec
mov
lds
adc
ja
mov
cmc
loop
fxch
sbb
ror
loopne
out
mov
xor
and
cmp
mov
xchg
test
cli
xchg
xor
ret
repnz
pop
sub
cld
pop
adc
jne
sub
dec
mov
and
inc
mov
push
sub
repz
and
sti
clc
retf
sub
cmps
jg
inc
or
dec
cmp
and
jecxz
popa
ja
jecxz
and
fcom
cmp
fnstcw
test
xchg
adc
jne
shr
call
scas
repz
and
push
jmp
loopne
dec
or
mov
push
aas
jmp
cld
cmc
lods
and
jnp
sub
mov
stos
adc
xchg
int
jnp
jo
jl
xor
pop
jp
stos
pop
push
gs
mov
inc
iret
jb
mov
adc
pop
mov
xchg
push
xchg
ins
bound
(bad)
cmp
leave
and
xor
addr16
outs
daa
cs
pop
gs
out
mov
cmp
mov
mov
mov
push
mov
cs
dec
in
push
ret
stos
arpl
adc
cmp
xchg
xchg
mov
ins
in
fistp
dec
push
or
xchg
sbb
push
fcmovbe
mov
retf
push
mov
cmp
mov
movs
mov
pop
cmp
cs
jmp
ins
test
sub
enter
mov
fdiv
jp
arpl
sar
or
rcl
cmp
jge
jle
xchg
lahf
daa
mov
jge
dec
test
or
stc
sub
xor
jno
inc
test
dec
mov
in
icebp
inc
iret
jmp
lock
inc
pop
shr
dec
ror
sub
push
std
es
imul
mov
jle
outs
popf
ins
fstp
ror
imul
pusha
add
enter
fs
pop
into
(bad)
repnz
inc
or
outs
les
inc
sbb
adc
jo
xchg
dec
jecxz
push
sub
retf
nop
lahf
pop
dec
cmp
jg
adc
xchg
and
fdiv
cmp
adc
pop
dec
push
in
jge
test
cmps
cs
dec
test
jg
cmps
pop
inc
push
push
nop
mov
outs
cmp
int3
pushf
shr
mov
mov
inc
push
mov
fidivr
inc
sub
aad
push
int
mov
test
stc
inc
adc
shl
cmp
dec
sbb
test
pop
sub
add
mov
cs
mov
cmp
stos
xchg
fwait
movs
jnp
push
xor
gs
sub
repnz
adc
and
popa
and
add
and
xor
ja
and
xor
es
loopne
push
fstp
xchg
loope
mov
jmp
test
pop
xchg
jl
mov
popf
push
sbb
add
imul
into
push
or
in
test
pop
push
loop
lods
mov
add
push
scas
stos
inc
out
dec
add
vmovaps
fidiv
adc
data16
sbb
xlat
aad
or
ret
ja
dec
cwde
inc
out
cld
pop
mov
call
dec
inc
mov
jns
and
ins
(bad)
fnsave
icebp
outs
and
adc
push
stos
enter
iret
add
repnz
imul
add
push
aaa
push
sti
stos
jecxz
scas
or
mov
shl
aas
ja
not
adc
(bad)
push
vpaddsb
lock
sub
outs
bnd
sar
ins
out
mov
mov
rol
in
mov
dec
jae
dec
pusha
push
dec
sub
hlt
push
into
out
push
dec
mov
inc
fild
adc
inc
nop
lahf
jne
or
popf
fimul
add
loop
pop
push
add
jl
jnp
(bad)
jl
mov
ins
mov
rcl
loop
inc
retf
sub
hlt
sti
and
pusha
xchg
inc
shl
clc
or
dec
int3
mov
push
inc
test
movs
mov
inc
test
inc
inc
in
movs
adc
repz
cmps
cmp
sbb
add
das
dec
jnp
sbb
pop
repnz
cmp
sbb
dec
(bad)
xchg
cmp
mov
mov
push
add
mov
push
xor
mov
ins
test
xchg
or
or
add
test
fisttp
rol
stos
and
bound
vcvtss2si
rol
add
(bad)
push
das
inc
outs
mov
sbb
cmp
xchg
in
call
sub
shl
cmp
iret
ss
push
mov
pop
out
cmp
pushf
add
sub
lods
xchg
or
ret
cmp
jb
test
push
lock
mov
retf
sbb
or
jns
add
loop
push
sub
out
add
enter
ins
mov
cmp
lods
stos
out
jmpw
enter
pop
xchg
cmc
push
(bad)
jg
mov
mul
enter
mov
fstp
push
xchg
sub
dec
cwde
ret
icebp
jg
push
push
jle
push
icebp
and
pop
lock
in
pop
jg
loope
sbb
cmp
mov
fisubr
mov
jns
arpl
jo
pop
mov
popa
sbb
sbb
bound
xchg
dec
xor
arpl
or
sub
movs
pop
xchg
imul
dec
popa
jne
fdivr
push
(bad)
in
xor
pop
xor
call
ins
or
mov
rol
sub
pop
fst
test
adc
inc
ins
mov
pop
pop
mov
jae
and
arpl
mov
outs
in
xchg
fmul
into
stc
mov
mov
jns
jl
js
mov
inc
leave
in
mov
rcl
in
int
inc
push
inc
iret
or
call
inc
add
movs
cmp
jb
mov
mov
imul
mov
jge
out
xchg
mov
or
stc
hlt
arpl
in
iret
xor
mov
out
cmps
adc
movs
(bad)
xchg
cmp
call
out
jge
or
mov
pop
mov
pop
popa
xchg
les
and
ss
movs
adc
mov
arpl
shl
dec
icebp
dec
fistp
repz
pop
stc
into
xor
and
cmp
xchg
int3
push
sbb
sahf
xor
mov
leave
fs
cwde
sbb
mov
xor
cmps
rcr
enter
inc
mov
mov
jecxz
clc
dec
push
lods
and
icebp
mov
fidiv
jb
out
cmp
(bad)
xor
data16
frstor
pusha
cmp
bound
ret
add
sbb
jg
test
and
or
cli
mov
shl
adc
sar
scas
inc
mov
mov
adc
test
imul
aam
and
fld
loop
movntq
imul
sbb
cwde
jo
fisub
adc
xchg
mov
mov
fucom
jno
lea
enter
fidiv
mov
ins
mov
jae
js
mov
adc
aas
xor
or
call
popa
cmp
in
and
scas
or
int3
jmp
and
jne
add
loope
jl
stos
mov
iret
movs
pusha
js
mov
in
aad
iret
dec
bound
jp
xlat
in
push
or
jno
cmp
jno
pop
jle
xchg
ins
adc
scas
jmp
xlat
mov
sub
push
jmp
jbe
scas
aad
xor
(bad)
(bad)
mov
fisttp
mov
mov
daa
adc
jns
lods
push
pop
sbb
ret
scas
pop
sub
dec
shl
mov
int
or
je
data16
das
arpl
cmp
xchg
loope
push
mov
out
push
jg
call
push
inc
pop
mov
add
ror
jb
jmp
cmp
adc
inc
loop
mov
ins
icebp
dec
cmp
je
arpl
cs
or
adc
shr
fucomi
jecxz
mov
into
nop
(bad)
push
in
sub
cmp
fisubr
push
sar
mov
dec
lods
push
cld
outs
xchg
push
and
loop
imul
inc
jmp
adc
lds
sbb
push
pusha
aad
rol
mov
int3
push
pop
outs
mov
sar
mov
lods
and
pusha
xlat
icebp
mov
xchg
popf
test
out
(bad)
call
dec
push
scas
pushf
dec
sub
sbb
pop
(bad)
sbb
sbb
or
and
dec
sbb
dec
test
add
popf
ins
jmp
ficomp
fsubr
jb
lea
mov
mov
mov
push
out
in
loop
ret
movs
gs
xor
ins
xchg
mov
aas
clc
std
sti
jo
mov
lds
js
gs
jbe
outs
and
xor
loop
(bad)
pop
xor
je
in
or
dec
mov
push
inc
pop
jbe
test
in
sub
outs
adc
cmp
xchg
or
dec
mov
fidiv
or
pop
out
test
add
xchg
aas
inc
and
bnd
scas
push
cmp
fild
xchg
movs
mov
sbb
sub
dec
aas
inc
into
jb
mov
cdq
xor
sub
shl
(bad)
adc
cmps
(bad)
cmp
jmp
cmp
sti
inc
js
hlt
(bad)
push
xor
jne
lods
popf
mov
movs
fldenv
lds
fild
sar
in
les
das
pop
cmps
hlt
xor
(bad)
sar
sub
add
test
std
shl
xchg
ror
rcr
jno
pop
dec
in
cmp
rol
fistp
dec
push
cmp
push
push
and
sbb
xchg
or
mov
jmp
pop
push
adc
test
push
adc
push
cmps
idiv
push
ja
xor
inc
js
pop
ret
sub
cmc
aam
mov
and
mov
xor
inc
lahf
jne
scas
inc
cld
pushf
out
jecxz
scas
and
xor
mov
fidiv
jge
and
imul
test
mov
mov
icebp
fldl2e
fild
sar
dec
shl
repz
jnp
sbb
lods
fstp
ins
(bad)
cmp
xor
cmps
jmp
adc
fiadd
xchg
(bad)
jb
or
xchg
shl
mov
add
sub
ds
mov
jmp
pop
pop
out
addr16
mov
(bad)
lods
arpl
fist
inc
(bad)
ins
or
in
shl
lods
jge
mov
test
pusha
mov
cmps
adc
pop
out
sub
std
pop
inc
pop
dec
test
adc
mov
xchg
enter
in
ror
push
or
lds
mov
dec
cmp
xor
les
jbe
dec
mov
xchg
mov
std
add
mov
sub
dec
mov
mov
call
bound
call
std
pop
mov
add
enter
fist
test
mov
mov
not
stos
daa
std
sti
jae
mov
xor
cmp
add
jae
jge
mov
(bad)
shr
mov
fiadd
cmp
in
clc
inc
imul
jmp
test
into
jae
loopne
into
mov
mov
es
call
dec
adc
push
test
test
aas
(bad)
rol
jl
pop
pop
sbb
bound
xchg
arpl
or
pop
ins
(bad)
mov
rol
popf
pop
retf
and
add
jnp
and
scas
jmp
call
and
sti
sbb
jb
or
cmp
(bad)
das
pop
inc
pop
jbe
mov
lea
jbe
push
ror
ficom
ds
lahf
cmp
and
cs
adc
stos
pop
leave
inc
fcom
push
pop
ins
popa
dec
push
es
stos
mov
ret
in
mov
mov
fstp
rol
into
lds
scas
add
mov
(bad)
(bad)
mov
cld
in
xchg
dec
addr16
add
syscall
jmp
sub
and
test
sbb
(bad)
hlt
pop
pop
mov
mov
xchg
adc
jmp
cmp
gs
dec
xor
adc
mov
mul
add
inc
dec
aas
xor
push
bnd
outs
or
retf
push
inc
push
ja
ss
mov
pop
push
xor
scas
pop
in
not
dec
jle
icebp
dec
mov
dec
in
mov
sub
in
dec
cs
fsubr
sbb
sbb
dec
sti
stc
push
sub
pop
dec
lods
aad
inc
pop
xor
sbb
jb
test
es
mov
shl
dec
cli
jns
mov
xlat
ds
lock
mov
inc
pop
(bad)
mov
pop
mov
outs
dec
push
test
adc
(bad)
or
and
cmps
jl
out
lahf
stc
outs
cli
inc
dec
pop
test
test
gs
jecxz
icebp
daa
pop
loop
mov
mov
retf
dec
xchg
stos
jl
dec
pop
and
ret
push
xchg
cmc
fmulp
fadd
dec
sbb
add
and
jmp
cmp
push
sub
lds
(bad)
arpl
xor
and
repnz
inc
pop
(bad)
loope
ret
dec
mov
lds
adc
or
(bad)
stc
iret
addr16
(bad)
(bad)
aam
out
add
mov
push
mov
pop
jl
push
fnsave
es
jl
sub
(bad)
leave
inc
mov
cmps
pop
out
int3
jg
xchg
leave
(bad)
dec
sub
repz
cs
jmp
xor
mov
or
push
push
sbb
call
fwait
cmp
int3
or
into
lea
repz
shl
jl
cmp
cmp
sbb
out
add
js
xlat
popf
sub
push
sub
jno
push
jecxz
jbe
inc
mov
xchg
adc
es
test
push
cmps
or
sub
and
outs
push
iret
ret
sbb
jae
sub
or
push
adc
jno
leave
fisttp
mov
mov
in
xchg
cwde
sub
mov
pop
int
mov
sbb
push
sahf
call
js
xor
jmp
sbb
add
sub
jle
scas
xor
std
pop
lahf
inc
mov
cmps
pop
call
daa
arpl
js
test
xor
jne
dec
pop
xor
sub
mov
cmps
out
imul
sub
adc
mov
jne
jg
and
cmc
jmp
mov
in
jnp
cmp
xor
stc
inc
int
ror
into
dec
jae
cmps
jne
loopne
ins
stos
test
mov
xchg
inc
mov
dec
cmp
repnz
or
add
inc
shr
add
retf
(bad)
cmp
lods
and
ins
ss
fs
fmul
push
or
out
mov
mov
out
in
movs
sub
dec
fimul
dec
jg
clc
sub
call
into
sti
xlat
inc
sub
mov
mov
ja
lods
stc
xor
sub
and
add
(bad)
jecxz
arpl
jns
xor
aas
inc
cmps
pushf
in
and
xlat
imul
push
mov
push
sbb
push
cmp
fidiv
mov
jns
pop
or
jbe
xchg
gs
dec
sbb
movs
jl
inc
sbb
loop
adc
int
fsubr
(bad)
movzx
lea
stc
icebp
xor
mov
imul
jno
jle
xchg
add
dec
out
outs
jp
inc
cwde
inc
jo
mov
aaa
adc
icebp
push
pop
jmp
xchg
stos
pop
loope
aad
fs
out
pop
int
enter
push
aas
xchg
and
sub
cmps
test
in
sti
loope
dec
lds
jle
mov
sti
dec
in
push
inc
inc
cwde
jmp
enter
stc
fdivr
adc
dec
inc
in
mov
cmc
xchg
enter
mov
dec
in
fsub
sbb
pushf
mov
das
cld
dec
mov
cmp
sbb
out
inc
movs
cmp
and
or
sub
aam
lock
pop
enter
xchg
and
xchg
mov
mov
sbb
or
lahf
cli
or
xchg
leave
push
push
fwait
cmp
and
fld
cmps
lock
out
nop
outs
add
ret
jae
mov
mov
inc
lock
or
sbb
cmp
mov
xor
cmps
adc
adc
mov
mov
and
int
mov
add
adc
add
sub
into
data16
aad
jl
stos
cmp
loopne
or
ret
in
sbb
jne
pop
mov
bswap
xor
movs
and
(bad)
call
dec
cmovs
ds
inc
mov
adc
mov
sub
jno
add
xchg
mov
std
hlt
inc
fiadd
push
outs
mov
nop
push
jmp
and
dec
es
test
and
adc
and
shl
ror
sahf
xchg
jecxz
jne
xor
fstp
fmul
dec
adc
sub
xchg
stc
mov
jae
adc
(bad)
div
xchg
mov
pop
adc
or
jecxz
sub
mov
and
and
and
sbb
mov
push
fs
inc
mov
cmp
or
mov
inc
mov
and
arpl
das
out
mov
enter
pop
int
dec
push
(bad)
in
stc
lea
cmp
pusha
mov
ret
cmp
adc
movs
popa
mov
lea
loopne
sub
and
or
test
mov
shr
sbb
outs
in
fdiv
and
jecxz
sbb
(bad)
outs
dec
xlat
mov
sbb
mov
or
mov
sbb
addr16
dec
outs
mov
arpl
sbb
in
sub
pop
jo
(bad)
adc
push
gs
jnp
dec
and
push
popf
out
movs
xchg
mov
jae
cmp
in
fadd
loope
jae
push
fimul
push
sub
shl
test
arpl
xor
lods
stos
mov
mov
js
sbb
popa
(bad)
cmp
mov
xchg
fst
fild
cmp
ss
shr
lahf
jne
adc
pushf
pop
fidivr
popf
mov
js
pop
mov
xchg
nop
stos
sub
dec
mov
int3
in
xor
jmp
aas
pushw
inc
sub
aaa
fidiv
test
xor
int3
shl
add
lods
scas
push
nop
sub
add
in
sahf
in
mov
(bad)
lods
pop
loopne
xchg
in
dec
(bad)
dec
sbb
mov
popa
pop
inc
daa
lea
sub
jl
push
jo
pop
outs
sbb
test
xchg
sbb
sbb
fld
call
call
les
rcr
push
lods
ins
cs
mov
pusha
test
arpl
stos
rol
cmps
je
xchg
daa
and
xchg
xchg
mov
mov
pop
mov
cs
inc
mov
mov
mov
jns
adc
je
ret
stos
rol
(bad)
in
sbb
ja
popa
fimul
in
mov
dec
or
test
lods
and
stos
pop
cmc
call
and
neg
mov
sbb
sub
outs
sub
nop
aam
mov
fnstsw
(bad)
stos
cli
lods
push
cmps
xchg
pushf
dec
packssdw
mov
ss
dec
adc
jbe
and
pop
ret
loop
and
mov
(bad)
push
call
add
mov
cmps
jno
aam
(bad)
sbb
movs
cmp
loopne
xchg
cmps
das
retf
repz
into
add
inc
jmp
std
jecxz
nop
ret
sub
mov
jo
into
push
fnstcw
fcomp
and
jno
std
ins
addr16
jmp
popf
(bad)
adc
jne
sub
out
sar
push
popf
jb
or
cdq
iret
ret
xchg
aaa
imul
fidivr
pop
dec
ficomp
imul
push
mov
mov
ds
jmp
xor
arpl
fdivr
xlat
jae
dec
test
mov
cmp
sub
cdq
aam
leave
iret
sti
adc
int3
(bad)
stos
scas
jg
shr
into
inc
fnsave
loopne
loop
inc
(bad)
(bad)
jno
dec
xlat
retf
adc
mov
push
fimul
push
or
ins
in
movs
push
mov
fucomp
cmp
adc
push
ret
das
dec
and
idiv
xor
sbb
xor
dec
lea
fisubr
pop
xchg
or
fldln2
fstp
sub
pusha
leave
out
or
pop
ins
add
jne
in
jns
mov
push
sbb
(bad)
and
sbb
pop
push
lds
sbb
ret
xor
adc
fwait
fwait
inc
mov
cmc
mov
add
sti
cmp
mov
test
loopne
test
popa
nop
mov
sar
call
das
mov
xor
imul
(bad)
pop
cmps
adc
imul
in
out
aaa
or
push
arpl
or
xor
sbb
loop
jge
push
xchg
out
nop
stos
retf
hlt
std
outs
jmp
(bad)
cli
push
sub
adc
mov
sbb
xchg
mov
in
in
fisttp
push
mov
push
fmul
sbb
dec
(bad)
retf
push
pop
fisttp
out
pop
cmp
mov
lods
or
in
xchg
out
mov
add
inc
int3
mov
out
cwde
mov
sub
das
stos
adc
add
in
push
stos
imul
jg
cmp
gs
xor
(bad)
out
leave
pop
ret
es
sub
aad
sbb
adc
outs
stc
add
pushf
cwde
mov
retf
ins
sbb
inc
addr16
mov
mov
out
lea
sbb
ret
xchg
adc
mov
jns
add
pop
das
adc
xor
push
jp
paddb
mov
cmp
jns
cmp
mov
pop
push
pop
mov
sar
xor
jno
add
iret
push
adc
lahf
pop
pop
pop
jmp
cli
or
loop
clc
xchg
pop
jbe
shl
mov
jle
dec
push
sti
push
cmps
push
fistp
mov
sbb
sbb
iret
pop
pop
add
inc
into
scas
outs
xlat
mov
loop
std
cli
adc
rol
push
push
fwait
dec
aam
retf
sbb
aad
out
ss
xor
aaa
(bad)
leave
mov
leave
stos
pusha
adc
pop
inc
leave
inc
cmp
add
xchg
xchg
cmps
cs
or
(bad)
jns
push
fadd
icebp
add
ins
sub
test
in
sti
pop
jnp
test
retf
cwde
mov
xchg
lds
dec
sbb
(bad)
push
test
inc
inc
mov
xchg
and
(bad)
fist
into
and
retf
jmp
jp
xor
inc
test
mov
mul
ret
xchg
pop
inc
lock
(bad)
jp
push
sub
mov
arpl
leave
jmp
push
outs
je
(bad)
jno
ins
or
mov
xor
ja
sbb
pop
mov
fwait
stos
in
call
jl
and
fdiv
jle
dec
jmp
sahf
push
mov
sub
test
jl
test
inc
jp
xor
lods
je
das
push
inc
inc
push
icebp
inc
dec
and
xchg
dec
mov
rcl
ds
movs
push
adc
sub
mov
fdiv
arpl
mov
jecxz
shl
popa
icebp
mov
idiv
jns
mov
fwait
mov
or
inc
int
ror
mov
sahf
jmp
dec
js
pop
paddusw
or
mov
call
mov
inc
lods
shl
dec
inc
add
mov
fcmovb
adc
sti
movs
std
stos
int
dec
adc
add
cmp
je
lds
sub
sbb
cld
mov
in
pop
lock
aaa
imul
mov
rcl
test
lahf
sbb
lods
in
movs
mov
add
aaa
dec
push
xor
push
test
jle
pusha
mov
xchg
outs
jl
in
loope
movs
sub
fist
sub
add
cli
or
xor
test
dec
push
or
xchg
neg
(bad)
aam
jne
sahf
and
sub
(bad)
shl
sub
xlat
dec
mov
loopne
pusha
or
test
stc
cli
lahf
out
int3
xchg
jl
stos
push
mov
icebp
in
jmp
cmps
pop
jmp
or
inc
inc
cmp
sar
cmp
mov
stos
xchg
push
or
or
nop
lahf
add
mov
push
(bad)
cwde
inc
inc
xchg
inc
fild
mov
cmp
(bad)
mov
fcmovnu
test
sbb
jg
jl
js
or
out
cli
loope
xchg
mov
or
pop
fistp
sbb
popf
cmps
not
xchg
cmp
imul
out
(bad)
adc
jmp
push
pop
xchg
pop
nop
or
inc
inc
in
mov
jp
jp
xor
jbe
cmp
mov
loope
sub
rol
add
je
dec
imul
pusha
cli
or
mov
ret
imul
xchg
retf
mov
ss
pop
aaa
sub
dec
and
pop
push
push
xchg
mov
aas
xor
and
xchg
(bad)
mov
jns
aad
int
xchg
pop
dec
ret
xchg
or
mov
out
inc
jb
push
(bad)
push
dec
mov
xor
jmp
and
cmps
mov
lods
ret
push
or
in
std
sahf
lea
sti
adc
jnp
repz
xchg
mov
lahf
mov
repnz
jmp
fisttp
dec
mov
lahf
jb
add
pop
hlt
lahf
cdq
test
inc
daa
sbb
jmp
in
imul
mov
mov
ret
and
psubq
fcmovb
mov
pop
adc
inc
or
inc
scas
dec
sub
cmp
cmp
mov
imul
jmp
adc
jne
cmps
inc
mov
out
(bad)
loope
retf
push
inc
fcmovu
xchg
xor
test
push
dec
outs
sbb
scas
or
pop
pushf
and
jmp
jp
jb
and
xchg
faddp
inc
sahf
adc
or
or
repz
push
jl
inc
ficom
out
test
mov
idiv
xchg
mov
in
sub
(bad)
mov
in
mov
mov
push
sub
aad
jne
xor
std
jo
not
mov
pushf
mov
jge
clc
xor
sbb
cli
sbb
leave
cwde
mov
cmp
jnp
aad
or
lods
pop
jnp
xchg
bound
push
(bad)
xchg
repnz
mov
xor
pop
push
or
add
nop
add
mov
mov
stc
mov
pop
or
cmp
pop
fist
mov
rcl
inc
push
out
or
ins
frstor
jmp
dec
adc
sub
lds
sub
mov
lahf
popa
scas
dec
out
sahf
shl
xchg
sbb
and
adc
hlt
jmp
popf
stc
rcr
mov
cli
xor
popf
pop
inc
aad
test
in
xor
or
popa
xchg
xor
pushf
(bad)
or
aam
jg
adc
das
shr
mov
out
retf
mov
aas
inc
adc
xor
(bad)
dec
scas
scas
add
out
sbb
xchg
rcl
xchg
cmp
jb
push
ins
lods
es
pushf
dec
int3
sbb
mov
out
dec
sbb
fwait
mov
pop
std
lahf
dec
or
iret
scas
fwait
mov
in
in
lods
and
mov
xlat
and
out
jp
iret
aaa
imul
cmp
jge
mov
adc
push
scas
stc
jmp
mov
sub
lods
lea
inc
xchg
lahf
and
sub
gs
mov
outs
or
fisub
push
jp
add
pop
fwait
inc
(bad)
xor
jnp
add
xchg
repnz
mov
xor
push
nop
pop
dec
dec
repnz
xor
and
jne
dec
jg
mov
pushf
ins
lods
pop
cmp
pop
std
das
jecxz
pushf
mov
ret
hlt
and
mov
imul
sahf
daa
popf
fist
push
mov
adc
jmp
mov
lea
stos
pop
stos
call
int3
dec
push
add
jl
dec
pop
in
das
and
sbb
adc
mov
adc
add
push
xchg
data16
and
cmp
ins
scas
outs
xchg
xor
dec
add
ds
jmp
pop
leave
and
jo
test
cmp
rcl
adc
mov
mov
pop
jo
retf
dec
xor
push
pushf
loope
stos
and
movs
pop
sub
test
and
push
aas
test
mov
sub
xchg
and
sbb
icebp
adc
sar
lea
fs
in
add
addr16
add
fisttp
loop
mov
inc
fadd
out
xor
cli
push
and
outs
xor
adc
sbb
test
test
cmps
icebp
add
icebp
outs
mov
mov
stos
mov
jns
(bad)
mov
movs
add
sub
push
cmps
hlt
push
mov
int3
sti
push
add
gs
inc
and
movs
fnstsw
cs
mul
lods
dec
rcl
pop
ror
bound
xlat
out
pushf
outs
mov
js
mov
js
scas
loope
arpl
sar
lock
cmp
pop
std
jmp
into
stc
pushf
sbb
xchg
in
jb
call
dec
mov
xchg
pop
lods
and
sbb
(bad)
repz
loope
mov
push
sub
dec
movs
femms
call
ret
mov
frstpm(287
push
ja
mov
ret
push
rol
mov
loop
xor
sub
pop
dec
test
add
loop
retf
push
adc
imul
jmp
lods
push
cld
jo
cmc
gs
fstp
jg
ins
aam
in
lock
fld
sbb
arpl
cmps
repz
lea
in
mov
out
fadd
and
or
and
pop
jns
dec
stos
fisubr
aas
adc
cmps
icebp
dec
dec
push
je
ins
inc
cmps
pop
das
es
sbb
jae
popa
stos
gs
lods
test
pushf
scas
and
pop
and
in
xchg
cmp
stos
daa
pop
mov
xchg
test
dec
add
cdq
sbb
and
shl
inc
sbb
and
push
pop
sbb
jne
je
cmp
xor
pop
(bad)
jmp
cmp
cmp
mov
ret
jl
je
sahf
or
push
loopne
xchg
retf
pushf
jne
test
sar
ja
icebp
test
mov
ins
add
cmp
(bad)
cli
sahf
fnstcw
imul
adc
or
rol
je
dec
inc
in
das
test
adc
outs
or
gs
shr
inc
dec
repnz
ins
out
adc
jmp
rcr
inc
pop
cmc
dec
xor
bound
rcl
(bad)
jle
scas
in
imul
enter
aaa
mov
popa
and
xchg
stc
fs
mov
pop
daa
sar
(bad)
jl
and
push
lods
cwde
je
xchg
adc
or
adc
sbb
fnstsw
and
sbb
lock
leave
cmp
cld
xor
enter
pusha
dec
pop
mov
mov
inc
lds
ja
idiv
lds
push
cmp
(bad)
jp
inc
mov
mov
nop
push
jno
jge
or
mov
mov
movs
mov
jne
mov
inc
cwde
mov
das
test
jle
ja
push
and
bound
mov
pop
dec
push
xchg
adc
outs
pusha
adc
out
inc
sbb
xor
pop
popa
jp
aas
outs
gs
in
call
mov
mov
add
push
in
neg
cmps
fwait
nop
dec
mov
out
sub
jecxz
leave
xchg
movs
sub
lods
sbb
cwde
pop
outs
rcr
fwait
sub
add
push
cmp
test
ins
xchg
ret
aas
dec
adc
or
bound
mov
jge
lods
std
push
test
dec
push
out
stos
push
add
push
inc
sub
arpl
call
icebp
adc
add
xor
xchg
test
mov
dec
push
and
jecxz
ret
mov
idiv
enter
xchg
xlat
dec
aam
test
mov
sub
push
push
in
push
outs
retf
dec
jo
or
jns
ret
ins
mov
nop
dec
sbb
fwait
scas
lods
movs
aas
loop
xchg
ds
retf
add
in
popf
(bad)
adc
inc
out
mul
xor
scas
jp
(bad)
(bad)
test
lds
sbb
dec
stc
mov
ins
ret
dec
push
sbb
sub
fnstenv
push
mov
fnstcw
jne
lock
mov
push
sbb
jecxz
push
push
adc
fs
xchg
jns
jbe
pop
(bad)
imul
iret
rcr
into
out
xor
aad
aaa
repz
xchg
sub
out
push
popf
dec
fdiv
mov
mov
movs
sub
(bad)
inc
retf
push
call
je
inc
pop
test
aad
jle
(bad)
mov
adc
ins
dec
ficom
leave
mov
in
mov
inc
pop
cmp
cli
ins
in
mov
dec
and
add
clc
cdq
jecxz
adc
or
retf
inc
int
mov
dec
fwait
cld
idiv
ds
sbb
mov
movs
je
pop
setb
sbb
xor
mul
push
jmp
ins
ror
out
daa
cdq
imul
sub
in
add
rcl
out
popf
lods
retf
pop
push
cld
push
(bad)
push
add
pop
inc
pop
mov
pop
pop
jge
pushf
lea
dec
rol
sbb
fnstenv
cld
push
shl
pop
les
cmp
xor
retf
mov
ds
pushf
xor
mov
push
push
aaa
stc
clc
mov
rcr
neg
aas
pop
dec
mov
pop
call
inc
xchg
mov
dec
jno
and
fnstenv
xlat
jnp
pusha
leave
int3
call
mov
or
add
sbb
inc
fstp
in
sub
lods
fdiv
xchg
cmps
(bad)
xchg
movs
jmp
xor
jge
aam
and
jmp
and
sub
jnp
add
inc
cmps
add
imul
(bad)
sub
add
mov
ins
mov
shr
mov
in
mov
mov
and
mov
cmps
movs
mov
int3
and
and
dec
mov
hlt
sbb
mov
movs
cdq
mov
jbe
cmps
enter
cmp
push
add
popf
xor
add
dec
adc
scas
adc
jge
sahf
sbb
mov
pop
jp
mov
fidivr
jae
push
ss
xlat
imul
inc
mov
fbstp
jne
adc
sbb
sbb
ret
xchg
and
leave
adc
addr16
lods
sub
push
loope
enter
adc
xor
jmp
cmp
jg
mov
add
add
loop
outs
mov
inc
dec
dec
jg
dec
mov
les
lods
call
add
pop
adc
fwait
ds
sbb
xor
ror
mov
movs
and
sub
scas
ret
push
pop
jns
ret
cmps
stos
lods
or
mov
fst
test
imul
lahf
fldcw
sbb
movs
(bad)
jmp
jle
mov
inc
mov
sbb
enter
sbb
mov
pop
adc
sbb
push
mov
xchg
pop
aad
mov
adc
pop
jle
adc
and
mov
ins
pop
jmp
(bad)
(bad)
sub
mov
jecxz
mov
inc
(bad)
cli
loope
mov
cli
sub
cwde
cs
cmc
jno
xor
push
je
push
pop
lods
adc
retf
xchg
push
scas
mov
dec
movs
xchg
(bad)
dec
jp
rol
sar
test
pushf
test
out
push
scas
(bad)
imul
sub
fsubrp
xlat
(bad)
loop
fcmovne
push
cwde
dec
inc
icebp
and
(bad)
rol
mov
popf
in
mov
je
and
mov
nop
xor
aad
call
arpl
test
gs
je
jp
pop
jle
icebp
adc
test
xor
dec
or
dec
mov
int3
pop
dec
inc
fcomp
mov
imul
inc
fdivp
mov
jae
(bad)
mov
outs
jae
dec
out
fdiv
xchg
sub
stos
idiv
fs
xchg
loop
and
aad
retf
icebp
outs
mov
shl
inc
ret
xchg
xchg
fnstsw
out
adc
stos
mov
xchg
in
ficomp
xchg
jmp
addr16
add
test
scas
xor
mov
inc
aam
and
clc
imul
push
xchg
add
or
mov
fnsave
js
push
outs
and
out
or
fidivr
inc
add
inc
inc
lea
dec
xchg
cmp
jae
sahf
imul
gs
imul
push
mov
aam
push
xor
xor
in
jno
cmps
inc
sar
je
mov
and
in
adc
adc
pushf
daa
test
cmp
mov
xchg
mov
adc
and
jge
sub
dec
pop
popf
xchg
or
hlt
push
stos
fist
ret
(bad)
rcl
shl
lock
pushf
nop
cwde
iret
xchg
pop
sub
clc
xchg
sbb
test
xchg
js
lock
xchg
xchg
push
adc
adc
jae
jecxz
shl
mov
mov
sti
hlt
pop
int3
jmp
imul
sbb
dec
xchg
xchg
mov
(bad)
cld
pop
or
push
adc
pop
cs
shl
cmp
das
data16
xor
sub
imul
das
and
mov
mov
mov
inc
ret
sbb
cld
(bad)
sub
lahf
inc
dec
aas
inc
push
adc
xor
push
gs
fadd
test
push
ja
sub
lds
stos
inc
pushf
gs
les
sbb
imul
mov
mov
sub
test
mov
gs
mov
fmul
lods
sbb
(bad)
xchg
pop
mov
sti
cmc
jne
imul
jl
in
jp
pushf
mov
or
das
dec
jmp
btc
mov
mov
push
mov
fs
cmp
sbb
ds
icebp
push
out
into
mov
imul
and
jns
jle
and
push
pop
mov
int
add
mov
push
xor
push
sbb
fisub
or
push
xor
imul
lds
repnz
dec
jb
sub
movs
add
lahf
fwait
pop
(bad)
jp
cmp
(bad)
fs
ret
sub
adc
adc
cs
scas
pop
mov
inc
int
and
leave
aas
retf
std
dec
dec
xchg
lods
cmp
mov
mov
pop
addr16
xor
mov
inc
sbb
rol
ds
adc
dec
sbb
fwait
dec
pop
mov
xchg
jo
fnsave
sbb
out
xor
pop
mov
in
inc
sub
cmp
sti
jo
inc
sti
push
cmps
pop
and
pop
xor
cmp
xchg
mul
mov
in
retf
out
out
int
int3
sub
hlt
mov
adc
ja
sbb
data16
inc
inc
jo
in
out
mov
inc
mov
je
xchg
(bad)
pusha
stc
sahf
test
jnp
inc
sbb
out
xchg
push
int
sar
mov
je
adc
xchg
sbb
sbb
(bad)
sub
mov
inc
sub
jg
in
test
pop
inc
and
mul
call
xchg
and
pop
mov
test
gs
adc
adc
adc
xor
push
test
pop
lods
jne
data16
shl
scas
mov
stos
add
fsub
retf
dec
rcl
call
lods
jne
mov
data16
std
ror
mov
pop
es
cmc
sbb
mov
lds
sub
aas
push
mov
imul
je
ficomp
call
stos
dec
dec
jnp
jno
iret
sub
pop
or
jmp
outs
and
add
ja
shl
pop
stc
in
aad
cmc
push
mov
and
sub
add
in
cmp
clc
enter
adc
ret
movd
sti
add
mov
(bad)
lds
int
and
mov
fwait
bound
jmp
or
inc
aam
adc
cld
sahf
sub
push
sbb
pop
stc
fwait
push
mov
sub
adc
pop
sbb
adc
mov
ins
adc
dec
rol
push
mov
dec
fstp
inc
or
add
mov
jmp
sbb
mov
lods
or
(bad)
xor
jbe
sbb
leave
sub
jbe
fisub
sub
xchg
mov
mov
shl
sbb
cwde
sbb
(bad)
outs
stc
sbb
(bad)
scas
cdq
ror
dec
adc
out
ffreep
dec
pop
neg
adc
jp
mov
in
(bad)
into
retf
pushf
jb
push
dec
ins
pushf
add
or
or
retf
out
in
icebp
das
sti
pusha
sub
mov
mov
loopne
xchg
retf
and
(bad)
xchg
adc
sbb
or
fwait
mov
pop
xor
lods
jns
je
nop
mov
shl
cdq
push
pop
adc
mov
lea
adc
or
stc
or
data16
es
loop
mov
xor
ins
je
stc
cmp
xchg
fdivr
pop
inc
sub
jmp
push
ret
push
xchg
sar
enter
ror
fcom
rol
ins
sbb
iret
js
ret
sub
js
mov
sbb
push
sbb
outs
sub
(bad)
loope
out
mov
mov
inc
inc
repnz
ss
stos
js
sbb
lods
jg
and
ror
push
cmps
jge
stos
and
jne
scas
push
sub
cld
jl
jbe
es
xchg
mov
sbb
scas
bound
sbb
shl
jecxz
shr
call
push
out
pop
cmp
inc
push
xchg
movs
inc
xchg
scas
daa
sub
stos
dec
enter
jecxz
sub
fld
test
stos
cld
pop
in
xchg
mov
shl
xor
inc
push
sbb
mov
cmp
ja
lds
bound
shl
pop
(bad)
(bad)
mov
fiadd
enter
or
arpl
nop
pop
cmp
or
mov
xor
cmp
(bad)
fstp
sbb
sbb
mov
rcr
mov
mov
fsub
mov
(bad)
out
dec
xor
into
js
aas
and
call
xor
ins
jae
xlat
pop
mov
add
push
lea
push
pop
test
enter
gs
lods
popa
ss
pop
or
nop
cmps
adc
push
out
push
dec
call
shr
inc
in
pop
lods
jp
dec
into
jle
push
test
dec
lahf
cmp
xchg
cmps
neg
mov
repnz
push
ins
jnp
and
sub
jmp
in
mov
push
xchg
add
jno
xchg
inc
push
sub
aad
mov
add
lds
gs
(bad)
iret
xchg
or
ins
mov
push
sbb
pop
in
dec
(bad)
retf
mov
xchg
daa
and
xor
dec
cmovbe
movs
stc
call
adc
out
or
sar
push
jno
pop
aas
imul
and
arpl
or
pop
cmp
loop
jge
call
pop
sbb
dec
mov
dec
inc
sbb
jae
loope
fs
add
movs
push
loopne
enter
and
cmp
and
movs
xchg
sub
pushf
aam
jbe
pop
test
dec
leave
adc
or
dec
jnp
mov
and
in
fsubr
mov
(bad)
mov
fmul
push
adc
jae
(bad)
ror
jmp
dec
js
mov
test
jmp
cmp
push
cdq
pop
mov
mov
mov
push
inc
mov
inc
cld
pop
rol
push
mov
inc
add
test
pop
(bad)
jb
shl
out
out
push
in
push
(bad)
clc
stc
(bad)
(bad)
cmp
dec
add
or
jecxz
sbb
or
mov
mov
(bad)
in
(bad)
test
stos
not
imul
arpl
cli
mov
jmp
cmp
adc
in
push
pop
loopne
pop
dec
cmps
sub
gs
inc
inc
inc
add
adc
iret
add
jns
cwde
in
lea
or
ja
repnz
lea
push
jmp
outs
mov
mov
imul
clc
cmps
repz
call
inc
(bad)
ss
mov
imul
out
mov
pop
shr
and
mov
jmp
mov
mov
stos
or
imul
jae
jle
cmp
popa
sbb
mov
jp
mov
push
fnstenv
mov
xchg
sti
aam
cmp
and
outs
jnp
push
and
ja
enter
xchg
xor
xor
ins
add
sbb
rcl
jae
div
mov
lds
ss
addr16
test
lea
or
push
dec
jl
(bad)
test
cwde
mov
pop
xchg
xchg
add
cmc
(bad)
sbb
xor
jp
daa
fcomp
cmps
xchg
push
push
mov
adc
adc
xchg
in
and
jbe
mov
mov
fdivp
shr
mov
ins
cmp
enter
dec
out
out
repz
iret
pop
pop
mov
pop
test
sar
fsub
ret
jmp
add
aaa
dec
fistp
fidiv
ficomp
movs
movs
cmp
sbb
aas
lods
jmp
das
mov
jmp
movs
add
add
pop
fcomp
ret
jecxz
cwde
cld
or
(bad)
iret
fnstsw
mov
or
push
(bad)
ret
pop
ror
in
jo
jno
push
bound
fsubr
(bad)
sub
repz
rol
jmp
lods
das
add
aaa
add
cmc
mov
sbb
adc
sbb
xchg
jae
ret
inc
mov
sub
dec
xchg
sbb
xchg
jae
adc
xchg
(bad)
ss
jmp
cs
stc
xchg
and
jae
mov
push
adc
xor
sub
mov
jae
jecxz
push
in
push
aam
adc
daa
push
sub
out
pop
cmp
xchg
dec
out
dec
call
and
mov
ins
in
or
retf
push
imul
sub
fisttp
lock
iret
out
loop
clc
sar
and
popa
jns
dec
push
in
cld
(bad)
cwde
je
xor
cmp
icebp
hlt
das
call
dec
enter
or
loop
aam
sub
pop
xor
(bad)
lds
sub
push
pop
jns
pop
sbb
cmp
std
into
xchg
enter
jecxz
jl
add
pusha
pusha
imul
pop
pushf
mov
and
fst
or
jge
jnp
adc
or
data16
loope
aaa
dec
ds
test
jnp
mov
gs
mov
and
mov
lock
inc
(bad)
fdivrp
idiv
adc
dec
test
dec
cli
stos
mov
xchg
lock
scas
test
cs
cmp
add
cwde
fwait
scas
enter
or
fs
sub
lea
outs
leave
pop
fstp
pop
pop
jns
nop
pop
sti
in
popf
jnp
push
retf
xor
bound
ins
fld
pop
pusha
xchg
xchg
and
add
cmp
xor
jg
push
lods
jle
mov
mov
jl
and
push
ret
fdiv
or
(bad)
push
jg
cmc
mov
pop
jge
xchg
add
stos
jbe
test
inc
xchg
or
push
mov
add
fstp
arpl
js
jl
mov
(bad)
adc
jmp
mov
js
pop
aam
mov
adc
paddsw
ins
and
hlt
mov
repnz
retf
rcl
js
fild
(bad)
out
or
in
pop
ss
jno
add
enter
cwde
dec
hlt
mov
(bad)
pop
add
and
test
push
out
std
leave
js
test
cmps
int3
cli
mov
fs
pop
inc
lock
fstp
fwait
daa
adc
cmp
mov
mov
sbb
out
xlat
(bad)
nop
cmps
and
cld
das
mov
lods
neg
lods
fs
stos
xor
mov
out
inc
mov
bnd
jge
sbb
sar
fstp
add
pop
and
push
sub
pop
mov
cdq
call
sti
jl
pop
dec
cmps
fsubr
les
cmp
ss
stos
shl
xchg
sub
(bad)
movs
les
les
dec
call
sti
lock
xor
push
cmp
mov
inc
bound
mov
jl
cmps
mov
in
xchg
mov
ds
and
data16
lods
xchg
pop
fisttp
mov
adc
int
mov
mov
pop
sub
mov
or
pop
dec
iret
adc
push
inc
call
add
mov
icebp
jns
aad
mov
sub
fwait
mov
inc
dec
fucomp
push
in
xchg
dec
xor
or
xor
repz
mov
icebp
sti
xchg
cmps
mov
fnstenv
aaa
retf
ror
(bad)
bound
es
xchg
pop
shl
jl
mov
sub
and
sbb
add
sbb
xchg
sbb
dec
jge
mov
pop
xor
icebp
mov
push
add
aaa
mov
in
stos
scas
push
clc
sbb
js
in
gs
sub
inc
or
mov
sub
mov
mov
int
stc
or
aam
xor
xor
hlt
and
jmp
scas
int
imul
cmps
aaa
pop
outs
shl
iret
addr16
loope
jns
pop
xor
jo
out
retf
or
jle
cli
lea
xchg
out
push
and
loopne
jmp
in
adc
xor
pop
out
push
data16
test
mov
adc
loop
mov
xchg
(bad)
mov
push
sahf
pop
add
push
(bad)
jp
mov
aam
les
add
mov
mov
dec
fwait
sub
call
lahf
push
sub
xor
(bad)
xlat
sbb
daa
lock
idiv
and
mov
cmp
ret
loopne
jns
ret
xor
dec
and
jo
cwde
sbb
out
lds
in
and
sub
loope
sub
push
push
stc
cmp
nop
in
data16
push
sub
push
sbb
pop
movs
test
dec
test
pop
jmp
in
call
jmp
inc
icebp
mov
inc
loope
cs
mov
cmp
sub
xor
adc
shr
cs
jno
movs
shl
stos
sbb
add
dec
stos
xor
in
mov
lods
fnstsw
push
stos
jmp
xor
or
and
pop
popa
mov
rol
cmp
inc
sbb
(bad)
out
dec
cmp
stos
scas
es
ins
push
shl
cdq
ins
mov
mov
add
(bad)
addr16
mov
push
lahf
rcr
mov
xchg
retf
jnp
xchg
cmp
mov
scas
leave
adc
sbb
push
mov
jg
inc
xor
sbb
in
inc
mov
mov
cld
ja
pusha
jo
popf
(bad)
iret
aam
cmp
adc
inc
rol
fs
loope
aaa
ds
pop
jg
dec
xor
xchg
mov
adc
pop
(bad)
(bad)
mov
mov
mov
pop
sar
xchg
dec
test
cmp
pop
xor
sbb
sub
pop
shl
cmp
or
adc
mov
or
retf
nop
std
xchg
sub
(bad)
ja
sub
cmp
sub
dec
fldenv
sbb
lods
jno
in
ja
mov
pusha
std
sbb
fist
call
cmp
gs
inc
add
pop
jmp
pushf
push
fcomip
outs
dec
sbb
shl
pop
or
retf
add
cs
cs
add
add
stc
and
repnz
fidiv
(bad)
into
test
pop
xchg
adc
aas
add
loopne
enter
xlat
pop
jp
sbb
jb
test
jl
mov
test
lock
das
int3
mov
scas
sub
mul
add
stos
sahf
leave
jecxz
jp
cmps
jne
fld
push
dec
lds
aam
ret
inc
jno
push
add
cmps
cmp
in
outs
and
xchg
adc
fmul
mov
test
xor
mov
pusha
mov
clc
mov
in
mov
ret
dec
addr16
shl
imul
aas
rcl
nop
adc
or
(bad)
jge
loopne
repz
test
jne
ds
xor
(bad)
jp
(bad)
and
jp
mov
(bad)
int3
lahf
test
mov
xor
arpl
push
dec
pop
lea
mov
mov
je
enter
stos
div
push
inc
and
jno
mov
ins
pop
xor
(bad)
in
sub
pop
lock
jb
int3
outs
adc
mov
adc
mov
mov
hlt
and
inc
scas
xchg
xor
hlt
les
cli
in
fstp
push
lea
dec
clc
iret
mov
test
pop
in
stc
mov
stc
xchg
out
movs
into
adc
sub
push
fldcw
mov
mov
vpor
mov
aad
fcmovnb
inc
jnp
pop
jge
mov
hlt
add
imul
mov
scas
xchg
loope
jne
leave
mov
mov
(bad)
cmp
jbe
cli
sbb
jnp
cli
call
adc
lods
push
ins
ret
into
js
mov
shl
xchg
jb
pop
or
pop
rcr
jne
nop
xor
stos
or
fdivr
dec
or
into
daa
push
xchg
push
ret
sub
imul
cs
pop
mov
add
push
sub
xor
dec
xchg
jno
and
sub
mov
sbb
xor
push
jno
push
xchg
dec
pusha
pushf
pop
and
movs
xor
or
xchg
cmc
xor
jbe
ja
lods
bound
or
push
sti
xchg
push
sbb
or
dec
push
mov
ficom
ret
dec
and
mov
jle
outs
pop
dec
int3
pop
ds
mov
sbb
sbb
ins
retf
mov
cld
add
jp
in
loopne
push
pop
sti
mov
jg
outs
pop
sub
in
hlt
jb
mov
scas
jbe
push
pop
pushf
xchg
mov
aad
test
jp
aad
ins
sbb
push
push
push
ins
xchg
mov
in
fdivr
or
or
cmp
dec
int
cbw
dec
mov
cli
mov
imul
push
dec
inc
movs
repnz
lock
push
push
dec
dec
sub
jle
inc
dec
mov
cmp
jo
retf
push
sahf
shl
sbb
popf
fwait
dec
xchg
(bad)
pusha
pusha
jecxz
mov
ja
frstor
jl
js
mov
jb
sbb
fisub
mov
mov
outs
shl
pop
cmp
sub
mov
and
mov
cmp
fsub
ins
push
inc
jmp
repnz
xor
sbb
lds
mov
pop
add
icebp
mov
cmc
and
(bad)
adc
mov
mov
loop
mov
aaa
mov
dec
scas
out
push
scas
jae
cmps
mov
mov
push
std
sub
jns
xchg
cmp
(bad)
adc
cmp
(bad)
mov
and
ficom
in
fcom
xchg
(bad)
retf
js
pop
inc
mov
clc
cmp
cmps
mov
jb
add
mov
and
push
out
in
loopne
(bad)
sbb
dec
jmp
adc
cmp
cmp
push
rcr
cmp
fcomp
push
inc
stc
xor
mov
pop
mov
mov
jnp
cmp
cld
out
push
jne
lahf
push
jo
jno
pop
add
or
jg
(bad)
xor
(bad)
dec
in
fwait
mov
out
xor
test
xor
daa
loopne
or
inc
xor
xchg
jmp
or
repnz
in
sub
cmp
push
or
scas
call
rol
xor
les
mov
repz
loop
cs
mov
scas
mov
aad
add
pop
daa
lea
stos
inc
test
add
fsubr
xchg
add
jae
mov
sti
cmp
stos
push
fistp
pop
mov
repz
sbb
ins
ins
lahf
int3
fdiv
cli
and
push
fld
ja
dec
mov
sub
pop
jnp
fwait
push
int
push
mov
enter
cmp
mov
xchg
xor
sbb
(bad)
sub
nop
outs
arpl
cwde
sbb
and
mov
lahf
pop
jo
frstor
pusha
sahf
leave
loope
mov
popf
inc
rcl
pop
hlt
mov
push
add
sub
mov
add
push
mov
xor
sbb
iret
sub
sbb
mov
jmp
sub
ss
mov
lea
mov
jmp
std
jg
in
int3
rcr
fidivr
retf
sahf
add
imul
test
mov
adc
or
mov
mov
in
sub
(bad)
fdivr
stos
lods
icebp
mov
cmps
imul
pop
or
sbb
das
shl
cmps
pushf
pop
mov
cmp
call
cmp
mov
pop
shl
cwde
jmp
mov
and
sbb
jne
mov
or
out
add
add
mov
add
inc
inc
stc
fadd
or
jl
das
mov
inc
imul
push
pushf
cmp
push
arpl
fcmove
xor
retf
mov
(bad)
stc
imul
dec
sbb
out
adc
out
and
pop
jo
or
ret
cmp
icebp
cmps
adc
mov
mov
iret
and
out
mov
adc
or
stc
ja
pop
xor
mov
ret
loop
dec
popa
(bad)
stos
push
mov
fldcw
xor
out
adc
mov
or
movs
inc
or
sub
gs
test
adc
push
shl
cmp
add
test
sub
lds
jae
mov
cmp
lds
lock
gs
cmp
mov
lds
shl
adc
daa
rcr
enter
mov
jmp
inc
mov
imul
test
lods
xchg
movs
rol
cwde
cwde
jae
dec
inc
cmp
aam
scas
push
xor
je
(bad)
shr
adc
or
mov
mov
xor
gs
les
seto
push
ins
push
ret
rcl
xchg
rcr
addr16
or
shl
rcr
sbb
jge
jb
inc
add
cdq
adc
xlat
cmp
shl
in
sbb
aaa
stos
sbb
jo
in
cli
mov
mov
fcmovnbe
cmp
fimul
xchg
hlt
jns
mov
push
shl
adc
xchg
jp
das
pop
inc
mov
dec
icebp
in
pop
mov
scas
mov
fldcw
sahf
and
mov
mov
fcmove
sub
jno
inc
fwait
inc
cmp
xor
and
movs
sar
call
dec
mov
shl
cdq
mov
scas
leave
mov
jns
fadd
jmp
das
xchg
cmp
dec
xlat
pop
mov
js
rcl
addr16
adc
sti
xchg
jecxz
push
jecxz
fistp
es
shl
cmps
bound
dec
arpl
xor
mov
and
gs
mov
loopne
test
jne
mov
test
shl
add
jmp
jg
lods
add
nop
in
push
pop
sub
push
dec
in
and
(bad)
ja
gs
shl
shl
jle
jle
inc
jmp
jno
and
push
push
sbb
xchg
ins
xor
xlat
fcom
sbb
push
jp
out
push
pushf
cmp
sbb
call
imul
out
jmp
jmp
jg
mov
jg
mov
(bad)
lahf
stos
and
jp
mov
mov
or
mov
pop
jno
in
push
daa
aaa
push
xor
je
xor
sahf
leave
inc
xchg
xchg
outs
mov
test
shr
dec
(bad)
xor
ins
mov
pop
cmp
jno
enter
(bad)
cdq
and
push
lods
sub
sub
add
mov
inc
sti
(bad)
ins
sahf
fcom
add
loopne
in
mov
mov
sub
mov
mov
pop
xchg
xchg
pop
jecxz
push
xchg
out
sub
addr16
cmp
sub
repz
push
add
cdq
xchg
iret
pop
cdq
lea
ror
jmp
lods
jns
mov
inc
aad
in
loop
pusha
popf
jp
stos
aad
scas
cs
add
xchg
popf
in
cld
jo
hlt
mov
mov
add
jp
cs
pop
cdq
nop
sbb
cli
dec
sahf
pop
addr16
je
sub
inc
fcmovne
inc
out
dec
mov
repz
jno
pop
ret
ror
mov
test
(bad)
pop
daa
mov
push
sub
cli
movs
je
(bad)
stc
xor
add
icebp
push
adc
ror
sub
push
test
or
jnp
lds
push
icebp
mov
cld
mov
mov
loope
dec
loop
sub
add
je
mov
pop
or
mov
push
out
movs
scas
fimul
aad
sbb
mov
mov
lahf
mov
pop
pop
(bad)
xchg
js
out
in
ret
sub
loopne
push
cmp
lods
mov
mov
and
jle
rol
(bad)
mov
cs
fcom
add
aam
push
loopne
xchg
pop
hlt
int3
mov
rcr
in
pop
fwait
xchg
in
inc
mov
jns
call
and
test
adc
pop
xor
or
xchg
(bad)
ftst
push
jnp
fcomp
or
ins
xchg
jge
pop
(bad)
mov
pushf
adc
or
inc
(bad)
sub
mov
ret
lds
jmp
idiv
aas
push
in
mov
push
out
adc
sbb
gs
jle
iret
cmps
sbb
adc
cmp
xor
clc
data16
jnp
call
mov
jg
rol
add
push
test
pop
ss
shl
lock
data16
xlat
dec
cmc
fcomp
push
addr16
mov
mov
xchg
outs
push
push
lds
sbb
shl
inc
fild
cmps
repnz
stc
dec
in
mov
sbb
leave
xchg
mov
pop
mov
jns
cmps
mov
push
js
or
pop
pop
or
dec
dec
xchg
clc
inc
imul
movs
aad
xor
pop
adc
push
adc
shl
(bad)
jb
inc
fild
clc
mov
push
pop
out
mov
xor
push
not
xchg
lods
mov
bound
jg
test
mov
scas
lock
jb
in
dec
ss
loope
push
adc
pop
sbb
jno
mov
repnz
js
mov
imul
call
cmp
outs
out
cld
xor
mov
outs
inc
lea
sti
shl
and
dec
pop
adc
je
mov
shl
popf
sbb
in
out
ds
lods
hlt
sbb
pop
mov
ret
sahf
dec
xchg
int3
ins
or
and
(bad)
div
mov
shl
pop
push
and
mov
call
movs
xchg
mov
hlt
jo
outs
mov
mov
loopne
mov
stc
jbe
sti
loopne
je
pop
fcmovb
jmp
inc
aad
sahf
sbb
icebp
dec
adc
dec
cmp
pushf
lods
dec
mov
in
mov
out
sub
jo
stos
pop
out
adc
adc
jae
sub
out
call
test
pop
in
cmc
test
movs
add
xchg
int
lods
jl
xor
xor
jle
mov
mov
and
fsubr
fst
mov
mov
xchg
dec
rcl
(bad)
sbb
hlt
jp
and
xchg
(bad)
xchg
in
dec
mov
push
mov
mov
in
arpl
jp
cmp
xlat
imul
inc
ins
ds
sbb
enter
jge
inc
aas
add
inc
ret
fucomip
test
xlat
movs
adc
mov
push
scas
cwde
pop
or
xchg
pop
test
sbb
sub
in
outs
or
adc
pop
or
adc
mov
cmp
cmps
nop
imul
push
pusha
sti
mov
popa
xor
sbb
clc
jae
xchg
pop
pusha
lds
(bad)
sbb
push
call
inc
inc
out
(bad)
and
test
jmp
inc
jl
xor
or
mov
clc
pop
popa
aam
inc
sub
scas
xchg
or
shr
ja
retf
loope
(bad)
aad
and
push
into
fsubr
adc
add
ja
pop
test
cmp
cmp
shr
or
push
push
fld
adc
mov
pop
xchg
pusha
inc
jb
and
dec
dec
mov
lock
mov
cmp
repz
mov
mov
mov
cwde
call
loopne
sbb
or
fwait
fwait
ja
xor
or
xor
dec
add
cmp
pop
mov
enter
pop
mov
mov
adc
enter
(bad)
xchg
mov
fnstcw
cli
cmps
pop
bound
and
fld
leave
pop
cmp
mov
pop
pop
push
xor
jmp
push
loopne
stos
xor
sub
mov
mov
xor
dec
adc
mov
mov
iret
mov
(bad)
shr
pop
and
fdivr
mov
das
cmp
loop
dec
adc
aaa
dec
aaa
in
ficom
or
cmp
ror
add
cwde
cli
mov
sbb
loopne
daa
add
xor
xor
or
and
call
and
std
xchg
xor
or
push
loopne
xor
and
mov
push
les
jecxz
ins
iret
xor
dec
test
or
pop
add
xchg
or
aas
add
sub
jae
and
add
xchg
sbb
retf
retf
pop
adc
mov
aas
ins
comiss
inc
pushf
jle
adc
sbb
dec
sti
pop
loopne
jb
icebp
sbb
pop
dec
xor
bound
fldcw
xlat
push
repz
sbb
(bad)
mul
inc
jecxz
outs
adc
sar
dec
xchg
popa
jae
mov
xlat
repz
and
adc
push
dec
push
mov
std
aaa
fisttp
dec
hlt
or
cmp
sub
ja
out
push
test
lahf
ins
cli
or
ret
and
mov
call
rcr
mov
je
inc
pop
push
in
xchg
pop
ins
mov
mov
mov
pop
fisubr
ret
inc
jg
call
xchg
(bad)
fisubr
inc
dec
adc
ja
add
aaa
xor
sbb
jae
or
mov
xchg
inc
mov
fcmovnb
cmp
dec
inc
mov
cmps
push
cmp
fisttp
xchg
imul
xor
xor
sub
xchg
pop
daa
arpl
scas
add
daa
ss
cmp
push
lods
sbb
and
push
rcl
stc
adc
fsub
inc
scas
sub
(bad)
inc
imul
sub
sbb
std
mov
loop
clc
lods
sub
jle
or
push
repnz
push
addr16
mov
jg
std
das
or
push
sub
mov
out
test
push
mov
or
inc
rcl
pop
loop
fisub
mov
xchg
inc
dec
mov
jmp
and
dec
add
call
sbb
es
popf
loop
sub
or
pop
shl
ins
xchg
ins
sti
clc
inc
jno
shl
sbb
int3
inc
adc
retf
call
sbb
and
inc
sbb
cmp
cmp
ret
in
and
out
jmp
call
shl
iret
enter
add
sbb
and
sub
pusha
add
jnp
xchg
int
adc
cmp
push
or
pop
mov
ffreep
aaa
pop
mov
loopne
and
ret
stos
push
pop
inc
gs
daa
cwde
std
inc
int3
mov
(bad)
push
pop
xor
mov
fsubr
cs
pop
jno
dec
mov
ss
mov
imul
mov
push
cmp
out
xor
clc
or
add
add
xchg
ja
or
test
in
and
push
in
push
cmps
mov
sets
sub
bound
imul
adc
push
xor
xor
test
les
pop
xchg
call
mov
out
loope
(bad)
mov
in
pop
mov
pop
push
jne
adc
retf
mov
test
or
mov
xor
sub
dec
cmp
iret
push
sti
dec
pop
xchg
test
test
in
mov
xor
dec
dec
idiv
pop
je
and
lods
(bad)
xor
xor
adc
dec
sbb
cmp
(bad)
ficom
pop
dec
jnp
or
mov
stos
(bad)
scas
sub
data16
je
nop
mov
cmps
jb
cmp
call
gs
cld
cld
dec
sbb
mov
movs
adc
ins
out
xchg
add
sbb
pop
add
gs
test
retf
mov
mov
mov
and
addr16
imul
arpl
outs
movs
push
sbb
add
or
cmp
pusha
sar
xchg
push
mov
outs
inc
mov
ror
es
aad
into
stos
xlat
adc
pop
pop
adc
stos
ret
test
and
pop
into
in
mov
sub
out
mov
dec
(bad)
in
retf
imul
imul
mov
repz
jno
xchg
retf
jmp
fcomi
cmc
or
mov
inc
adc
pop
or
leave
cmp
movs
not
ficom
ins
push
add
adc
sub
rcr
cdq
pop
mov
mov
popf
or
pop
mov
daa
pop
jo
in
sbb
mov
add
nop
leave
mov
(bad)
adc
ins
sub
mov
pop
mov
jno
rcr
fld
xor
xchg
jbe
pusha
jb
outs
cmps
mov
imul
xchg
sbb
shr
xchg
shl
test
add
cs
out
mov
dec
sub
ins
(bad)
fistp
cmp
pusha
retf
adc
stos
rcl
pop
(bad)
xor
mov
pop
jl
or
not
imul
and
test
addr16
xor
cmp
xchg
ins
sbb
fwait
sbb
xchg
(bad)
xor
mov
mov
idiv
test
add
aas
(bad)
lock
loopne
retf
jb
push
call
pop
dec
or
shl
sub
fsub
and
pop
or
dec
fcmovnb
stc
or
fnsave
jg
mov
cmps
sub
mov
cdq
or
in
xor
icebp
cmps
loopne
pop
(bad)
movs
pop
mov
jg
mov
xchg
xchg
jns
sub
or
jp
(bad)
sub
stos
pop
call
(bad)
add
outs
xchg
ja
inc
dec
ret
repnz
mov
mov
lods
cmps
inc
sbb
cmp
xor
add
les
push
fcom
in
xor
ins
call
sub
cld
shl
or
int3
mov
xor
pop
cmp
test
dec
mov
int
pop
pop
adc
xchg
add
add
ds
push
pop
xchg
inc
ficomp
das
popf
je
dec
mov
sbb
(bad)
idiv
add
jge
add
aad
mov
pop
sahf
and
add
mov
adc
ret
mov
mov
outs
mov
sbb
outs
adc
xor
mov
pop
jo
ds
stos
mov
or
imul
inc
fiadd
sub
or
inc
call
or
pop
sti
push
mov
dec
sti
ror
arpl
mov
ret
add
es
mov
mov
mov
pop
shr
adc
mov
jmp
ins
fcom
in
in
ret
aad
mov
sbb
xchg
cmps
test
loope
leave
pop
and
or
shl
ja
or
cmp
add
cli
repz
cmp
out
sub
dec
adc
shr
jle
jle
leave
cmp
outs
jae
pop
push
pop
mov
test
cmp
das
mov
aam
adc
jl
std
push
sbb
std
fdiv
test
outs
fistp
push
push
push
pusha
sbb
mov
dec
(bad)
pop
mov
outs
jge
push
test
pop
lock
xchg
(bad)
xchg
repnz
out
mov
cwde
int
lock
add
jg
mov
daa
pop
and
inc
and
push
push
pop
xchg
jmp
jno
mov
push
addr16
add
imul
inc
retf
add
imul
pusha
dec
test
loope
mov
lahf
das
mov
ins
push
in
push
ror
dec
sbb
loopne
loopne
cmp
push
inc
push
adc
outs
pop
adc
ins
mul
pop
jge
and
(bad)
bound
and
jmp
add
xor
sbb
movs
pop
and
pop
sub
and
pop
ror
mov
pop
scas
mov
sbb
xor
icebp
jb
mov
sar
mov
dec
jnp
lock
lea
jmp
mov
or
or
daa
std
pop
mov
mov
mov
sub
pushf
cld
cmp
mov
popf
out
xor
mov
mov
push
iret
xchg
jle
mov
stos
js
xor
or
sbb
ins
add
xor
(bad)
jmp
test
dec
or
cmp
(bad)
xchg
rcr
add
mov
pop
xchg
push
sub
iret
cli
inc
fnstcw
xor
lods
mov
ficomp
dec
inc
mov
mov
jb
retf
mov
out
and
out
mov
arpl
js
adc
mov
std
mov
push
jo
out
add
imul
fs
fmulp
cwde
lods
add
fist
dec
(bad)
jmp
(bad)
mov
push
sbb
cli
jbe
push
dec
jno
jecxz
add
movs
adc
xor
jne
or
inc
mov
nop
push
cmc
mov
jae
xor
outs
cmp
mov
pop
inc
ins
inc
aaa
pop
add
add
scas
jbe
lods
mov
or
cmp
ds
lock
jg
cwde
popf
pop
inc
cdq
out
ins
push
(bad)
ror
in
loop
cmp
cld
(bad)
dec
mov
out
or
mov
sbb
add
shr
pop
mov
aam
vmovdqa
popa
cmps
out
inc
stos
mov
lods
rcl
or
mov
jns
mov
mov
in
mov
rol
and
add
push
fbld
test
push
sbb
mov
adc
int
jg
mov
pop
sub
fild
ret
add
shl
repnz
and
fnstcw
inc
hlt
sub
xor
cmp
rol
mov
mov
sahf
shr
jmp
popa
outs
fcomp
add
add
dec
retf
outs
and
mov
popa
scas
fcomp
int
fs
ins
mov
cwde
mov
cmp
mov
(bad)
add
inc
cmp
test
les
sbb
mov
rcr
cmp
les
sub
inc
lds
test
or
jns
jge
xchg
inc
adc
dec
jl
cmp
pop
pop
xrelease
adc
(bad)
mov
test
push
mov
enter
inc
mov
and
js
fbld
test
aas
out
add
bound
fadd
dec
dec
iret
mov
pop
add
inc
pop
xchg
ror
rol
sar
ret
out
clc
jecxz
adc
xchg
xchg
ret
sbb
pop
xlat
jp
ficomp
mov
xchg
js
dec
push
not
je
mov
mov
movs
jge
fdiv
adc
pushf
and
jmp
int
inc
jmp
mov
jbe
das
test
jmp
mov
add
(bad)
jp
add
add
lods
jbe
pop
mov
xchg
jmp
sbb
pop
sbb
stos
xchg
pusha
adc
jge
sti
jmp
pop
repz
(bad)
fstp
add
sahf
icebp
pop
fiadd
pop
stos
rol
push
(bad)
icebp
jnp
jg
and
cmp
aas
cwde
stc
out
jl
cmc
mov
xchg
dec
jmp
push
aaa
leave
ret
sub
test
movs
mov
or
sub
mov
fild
jl
(bad)
fnstsw
lods
sahf
inc
rcl
lods
out
into
inc
mov
cmp
test
fsubr
shl
jmp
gs
icebp
push
pop
out
(bad)
call
sbb
dec
mov
popa
push
(bad)
int
popa
lahf
(bad)
(bad)
mov
scas
or
das
out
pop
mov
and
mov
mov
or
sbb
test
stc
test
or
jl
dec
add
add
sbb
jns
cmps
jle
jmp
cmp
sub
jns
mov
ins
addr16
pushf
aam
jnp
jo
adc
test
inc
mov
inc
adc
adc
push
xchg
add
pop
outs
pop
cs
in
or
retf
add
arpl
popa
add
dec
sbb
retf
mov
ret
stos
cmp
in
gs
in
pushf
xchg
scas
lds
add
fs
dec
lods
loope
xchg
scas
rcr
test
icebp
inc
push
icebp
adc
adc
mov
cmp
mov
movs
mov
loope
loop
cs
xchg
jbe
pusha
add
add
push
xchg
gs
sbb
or
fild
sbb
fist
jmp
dec
shl
outs
gs
fdivr
and
jno
mov
and
jmp
mov
les
mov
inc
test
lds
push
or
fnsave
inc
clc
adc
pop
aad
cmp
inc
(bad)
rcl
pop
inc
out
mov
lds
enter
and
fbld
out
and
(bad)
xchg
xchg
push
js
adc
int
std
shl
rcl
sahf
jecxz
push
fwait
mov
adc
mov
test
xchg
adc
in
test
inc
mov
(bad)
push
sahf
mov
int3
mov
or
int3
mul
cmc
repnz
pop
mov
add
pop
cmps
daa
pop
and
stos
mov
das
js
xchg
jb
add
scas
and
xchg
push
push
xchg
sub
sbb
daa
stos
pusha
gs
or
sbb
dec
cwde
imul
adc
add
inc
ss
repnz
lahf
cs
(bad)
adc
add
xor
retf
mov
fucom
test
add
das
jmp
xor
out
loop
mov
iret
repnz
arpl
cmp
(bad)
push
ins
fst
xor
test
jl
cmp
jae
call
jmp
sahf
into
ret
stos
sbb
mov
stc
inc
sbb
fwait
dec
mov
dec
(bad)
or
xchg
imul
xor
or
xor
sub
mov
inc
push
ins
(bad)
push
jbe
jae
loop
push
jmp
mov
enter
jle
inc
inc
outs
in
jmp
push
fnstcw
xor
outs
enter
cmp
inc
sbb
fidivr
stos
sbb
in
sub
adc
ret
js
lods
gs
push
in
push
mov
stos
pop
scas
adc
repz
jge
cdq
out
adc
adc
xor
push
xchg
ret
pop
rcl
pop
mov
mov
xchg
lds
adc
repnz
push
lods
cmc
pop
adc
(bad)
fst
nop
loop
mov
and
and
inc
jno
cmps
inc
add
test
das
mov
xchg
dec
mov
dec
in
dec
popf
pop
and
jg
sbb
mov
mov
inc
je
cdq
arpl
jmp
sbb
mov
xor
jne
out
mov
stc
sar
(bad)
ja
in
test
add
in
popa
xchg
mov
out
dec
jno
stc
sub
mov
in
xchg
fbld
aas
inc
out
sahf
mov
jo
dec
popa
mov
aad
(bad)
jns
pop
and
fbstp
sar
and
frstor
mov
mov
add
sbb
adc
data16
dec
add
push
iret
cwde
jb
inc
ret
adc
ins
dec
sbb
jbe
dec
fldenv
and
test
mov
xor
and
popf
scas
shl
mov
pop
iret
stos
int3
dec
add
jne
add
push
mov
xchg
or
div
mov
jmp
shr
push
test
loope
retf
pop
daa
xchg
mov
cmp
test
aam
jbe
push
pop
ins
mov
test
xchg
dec
sti
retf
in
push
mov
or
int
pop
mov
inc
rol
cwde
jo
je
call
inc
jne
dec
mov
sti
add
loopne
and
xchg
ficomp
icebp
xchg
xor
add
sub
push
fist
call
pop
mov
add
sar
fs
adc
data16
push
fs
and
and
pop
fidivr
push
jge
movs
and
fisttp
xor
movs
mov
ror
aad
popa
(bad)
fnstcw
ja
push
mov
(bad)
imul
retf
jne
pop
dec
idiv
inc
mov
adc
daa
loopne
push
pop
push
idiv
push
js
xchg
add
xor
pop
ins
mov
jl
mov
adc
jbe
pop
mov
or
les
push
xchg
sbb
inc
push
ins
jno
add
xor
ja
outs
or
or
ins
enter
push
mov
mov
push
int3
inc
mov
fild
xchg
fbstp
movs
xchg
jno
or
in
ret
mov
lods
call
xlat
pop
sti
ins
mov
(bad)
adc
mov
das
outs
sar
es
clc
or
outs
loop
out
inc
ds
mov
inc
out
mov
sub
arpl
pop
mov
lods
push
xchg
sbb
mov
sbb
not
je
mov
(bad)
push
jecxz
in
test
dec
test
xor
dec
lods
outs
sub
push
jmp
inc
sbb
aas
xchg
mov
xlat
movs
mov
add
ss
popa
pushf
dec
xor
inc
push
out
imul
push
or
push
mov
mov
into
les
add
fisub
mov
cmc
mov
(bad)
arpl
pop
sbb
cli
test
dec
lock
inc
(bad)
pop
inc
add
inc
xchg
sbb
xchg
and
pop
cmps
push
push
jmp
xchg
lea
push
xchg
cld
cmp
in
sbb
adc
loopne
pusha
xchg
xor
in
push
dec
adc
div
sub
rcr
inc
repz
push
gs
cmps
bound
adc
jo
sbb
leave
cmps
sub
sub
jb
sbb
fwait
xor
cmps
jbe
push
mov
push
mov
xchg
retf
push
inc
cmp
cs
adc
loopne
xchg
xor
(bad)
loop
test
push
ins
mov
retf
adc
(bad)
pop
dec
sti
mov
call
repnz
mov
pop
leave
mov
xchg
fst
xchg
xor
popa
add
scas
dec
pop
ins
in
dec
mov
pop
jmp
adc
sbb
dec
push
ins
mov
sub
or
test
(bad)
pop
mov
fisttp
fstp
pop
pop
int3
push
cmps
mov
push
adc
pushf
retf
inc
inc
xchg
pop
and
cli
cli
sbb
fild
mov
push
loope
cwde
xchg
gs
jmp
mov
lea
fwait
repz
jnp
mov
pop
cmc
cwde
(bad)
or
inc
mov
sub
or
adc
outs
das
lods
add
cdq
mov
xor
in
(bad)
adc
cdq
mov
or
push
pop
add
dec
add
hlt
lods
popf
mov
pushf
stos
fst
aad
popa
jbe
jb
aad
pop
sub
(bad)
ss
sbb
or
xor
adc
pushf
stc
adc
pop
or
test
test
daa
sbb
xor
dec
imul
mov
rcr
scas
fnstenv
xchg
sbb
popf
jmp
mov
into
jp
mov
mov
and
fmul
in
xor
sub
popa
push
lds
jecxz
jno
es
inc
sbb
xchg
(bad)
jmp
out
loop
call
nop
add
dec
or
sar
loopne
rcr
scas
dec
loope
in
dec
cmp
mov
jae
push
cwde
fidivr
mov
int
iret
(bad)
div
test
scas
cmp
fisttp
pop
stos
fsubrp
aad
dec
push
sbb
mov
cmps
add
popa
int
test
sbb
mov
cdq
push
(bad)
stc
lock
das
imul
fwait
leave
fsubr
push
dec
inc
add
push
xlat
aas
je
aad
aam
ret
in
out
dec
xor
xor
(bad)
out
sbb
push
inc
sub
inc
or
lock
jmp
lea
or
shl
cs
iret
inc
adc
jbe
xchg
and
cmp
adc
out
push
xchg
inc
jo
adc
xor
gs
dec
repz
int
pushf
adc
or
sub
mov
xor
jmp
mov
push
test
in
mov
sbb
mov
pop
rcr
or
pop
mov
call
fs
fdiv
xchg
pop
aam
cmp
fimul
push
mov
and
fwait
mov
jae
mov
mov
stc
mov
xchg
ins
outs
cmp
cmp
add
(bad)
jmp
fsub
push
xchg
dec
inc
test
add
scas
sub
add
pop
mov
call
fucomp
xor
sbb
inc
bound
loopne
inc
pop
loopne
push
shr
stos
inc
out
push
test
sub
sub
mov
retf
stos
loopne
pusha
mov
fwait
dec
dec
jbe
pop
add
add
xchg
fcomp
call
pushf
or
loopne
lods
loop
adc
ficom
inc
enter
pop
sti
lock
xchg
cs
mov
push
cmp
ds
xor
and
imul
jl
and
or
mov
push
cli
adc
xor
iret
js
int
sahf
push
in
mov
stc
xchg
bound
push
xchg
in
pop
or
lock
cmp
dec
shl
cwde
aas
enter
sti
adc
cwde
data16
test
out
lods
xor
mov
adc
and
idiv
xchg
add
pop
shr
mov
pop
push
jge
out
movs
xchg
test
sub
jns
or
jbe
fisub
data16
outs
xor
test
ficom
jmp
push
mov
or
sbb
bound
fistp
or
add
fisttp
xchg
and
repz
jmp
cli
mov
test
out
into
mov
pop
ret
(bad)
fdivr
fs
(bad)
ins
jae
xor
xchg
fidiv
cmp
push
and
adc
gs
pop
popf
adc
fstp
or
out
out
test
test
jae
repnz
jb
in
outs
(bad)
ja
and
dec
das
add
test
imul
sub
int
and
mov
mov
pop
and
retf
cmp
retf
mov
ins
iret
arpl
add
imul
mov
jmp
stos
cld
mov
cmp
aas
lods
jecxz
out
cwde
lods
add
inc
and
dec
retf
test
in
outs
leave
fs
das
push
test
aad
loope
ficom
sub
sti
push
cld
mov
sub
adc
mov
ds
jo
sti
aad
mul
repz
loope
push
outs
fmulp
mov
mov
lods
pop
mov
outs
in
xor
xlat
ss
cmp
loop
loopne
(bad)
in
es
cmp
xchg
daa
fs
xchg
test
jge
fld
jo
push
push
fmul
imul
sub
aas
call
dec
es
fucomp
ret
retf
push
dec
out
dec
xchg
dec
add
add
call
popa
xor
mov
inc
leave
mov
xorps
je
jns
jns
shl
arpl
jmp
fs
xchg
gs
mov
dec
sub
rcl
mov
jns
aad
cmp
daa
call
jae
inc
pop
sbb
push
ret
aaa
and
jmp
in
dec
test
cwde
clc
ins
jno
cmps
stos
sti
xchg
shl
jle
sub
hlt
mov
inc
xchg
dec
cdq
imul
mov
xchg
inc
sub
add
aam
rcr
iret
enter
rol
lahf
xchg
cdq
xchg
sbb
cmp
cmp
mov
sbb
sahf
mov
rcl
push
fdiv
loope
retf
(bad)
inc
dec
jno
cdq
fcmovne
mov
adc
out
fwait
mov
push
dec
mov
xchg
inc
jbe
das
dec
ins
dec
cmps
pushf
lahf
cld
jmp
add
cmp
shl
int
push
or
mov
dec
shr
(bad)
cmps
pushf
repnz
mov
mov
in
mov
cmp
mov
sbb
cmp
loope
ret
or
sbb
(bad)
lods
(bad)
bound
xor
push
push
mov
jae
jne
pop
(bad)
js
call
dec
pop
test
cmp
je
sti
hlt
push
jmp
clc
sub
push
ret
cmps
dec
sub
pop
cmp
sbb
adc
loope
imul
test
movs
mov
fldcw
test
push
jns
adc
mov
xchg
xchg
pop
inc
cmps
pop
das
fwait
enter
outs
scas
xchg
or
daa
cmp
dec
out
addr16
xor
or
sub
and
test
cmp
test
out
rol
movs
xor
jbe
pop
and
lock
retf
add
and
out
and
hlt
or
add
xor
(bad)
cmps
cmc
xlat
(bad)
(bad)
sbb
(bad)
pop
or
inc
shr
xchg
das
out
sbb
add
call
loopne
outs
xchg
out
adc
adc
sbb
xchg
push
xchg
inc
js
hlt
xor
adc
(bad)
pop
sbb
and
add
sub
sbb
jae
lds
and
adc
test
ja
repnz
in
push
and
int3
cmp
pop
push
dec
pop
daa
cmp
jle
push
mov
lods
and
arpl
add
xchg
nop
pop
push
jge
cmps
dec
div
jp
adc
mov
jbe
data16
es
ss
movs
jle
sti
cmp
pop
xor
mov
stos
int
mov
dec
add
inc
jl
pop
sbb
clc
sti
cmp
mov
jne
enter
(bad)
and
sbb
mov
das
mov
in
test
jmp
das
push
and
fisttp
jno
retf
inc
mov
push
test
jne
rep
xchg
mov
sbb
je
xor
pop
je
mov
sbb
mov
sub
mov
test
shl
inc
jb
in
(bad)
repnz
push
retf
jecxz
bound
(bad)
jmp
dec
cli
mov
xor
lahf
ror
test
fcom
int3
(bad)
fsub
push
inc
iret
xor
mov
sti
and
je
add
sub
sahf
mov
fdivr
xchg
jecxz
pop
loope
jge
nop
push
sbb
or
adc
(bad)
iret
pop
aaa
jge
stc
mov
pop
fisttp
xor
jnp
pop
mov
aam
sub
jmp
cmp
and
jmp
sub
(bad)
xchg
fild
add
ret
daa
outs
arpl
push
mov
add
mov
mov
arpl
arpl
pop
fst
inc
hlt
and
adc
hlt
das
jg
fist
fbld
push
loop
dec
cmc
rcl
enter
mov
xchg
add
fisub
pusha
jne
sahf
adc
jp
jmp
ss
cdq
fbstp
je
mov
dec
mov
pop
pop
out
fist
cmp
jb
loope
mov
adc
leave
sub
paddusb
hlt
push
and
add
repz
(bad)
fcom
mov
cmps
xor
cdq
xchg
out
or
pop
sbb
loope
dec
cmovbe
push
loope
test
sbb
fwait
aam
loope
frstor
push
xchg
gs
xchg
daa
lods
jmp
or
cmp
pushf
leave
loop
mov
std
inc
leave
dec
es
pop
dec
hlt
in
fs
sub
aas
push
fnstcw
mov
ss
cmp
lock
aas
mov
mov
mov
ffreep
inc
push
add
jle
adc
cmp
je
rcl
(bad)
fstp
stos
adc
lods
sub
test
cmps
sar
inc
jecxz
mov
ja
sbb
add
lock
rcl
sbb
jp
xor
jns
inc
cmp
ins
imul
xlat
std
jl
add
in
out
stos
mov
add
fnstsw
loop
test
into
cs
jne
in
jecxz
cdq
sbb
inc
xchg
and
pop
jbe
into
sub
lods
or
pop
(bad)
es
or
test
fist
dec
mov
or
aam
jecxz
lock
not
(bad)
pop
ret
sbb
mul
sbb
call
retf
icebp
dec
push
out
lock
call
leave
shl
pop
jns
and
add
js
std
push
pop
in
daa
fisttp
mov
ja
mov
push
cs
in
push
scas
adc
add
sbb
cwde
shl
pop
fs
mov
mov
xor
inc
test
xchg
in
jo
inc
cmp
das
mov
add
ficomp
cmps
add
das
aas
ja
ja
push
inc
retf
xchg
add
int3
add
and
das
cmp
mov
sahf
jo
ret
xchg
fadd
and
pushf
(bad)
cmp
pop
(bad)
cmp
sub
psraw
dec
fild
mov
jb
retf
test
push
jnp
jns
outs
pop
jl
push
iretw
mov
imul
lock
dec
mov
push
dec
inc
call
mov
push
bound
int
ret
jmp
ficomp
pop
lahf
aam
pusha
(bad)
loopne
mov
or
dec
shl
dec
pop
xchg
push
xchg
test
dec
inc
lods
xchg
ins
pusha
and
push
mov
pop
fwait
inc
push
xor
and
jne
xor
mov
sahf
push
je
mov
lahf
(bad)
sub
retf
mov
jecxz
push
jne
mov
xchg
sbb
das
sbb
in
outs
jge
jmp
dec
jnp
pop
add
scas
leave
stos
xchg
sbb
loope
retf
adc
xor
stos
xlat
jmp
mov
scas
or
pop
jnp
mov
retw
test
sub
loopne
pushf
mov
or
fidivr
push
scas
(bad)
sbb
ds
out
ja
xor
mov
js
test
scas
mov
cdq
cs
pop
ror
lahf
pop
mov
adc
je
jg
stos
jmp
mov
mov
cmp
stos
sar
aam
cmps
mov
les
les
adc
xchg
add
aad
imul
jmp
jns
inc
(bad)
cli
dec
mov
dec
or
jns
or
push
xor
sahf
mov
cmp
in
aas
mov
ficom
aad
nop
adc
adc
jg
(bad)
idiv
stos
pusha
mov
nop
push
push
aad
jge
adc
jae
pop
ja
dec
ror
(bad)
pop
pop
into
int3
push
popf
sti
daa
mov
popf
and
aam
inc
sbb
sar
fidiv
jle
and
clc
sub
mov
les
shr
ss
adc
stos
xchg
jg
mov
call
cmp
or
bound
ficom
cmc
mov
fisub
xor
xchg
ds
stc
adc
icebp
outs
fcomip
out
mul
xchg
call
mov
adc
inc
mul
movs
cwde
mov
es
dec
test
imul
cli
ret
mov
(bad)
call
mov
jl
jne
xchg
cmp
mov
xor
inc
(bad)
aas
sub
outs
jbe
aam
icebp
loopne
xor
inc
pusha
frstor
ins
call
mov
loope
cmp
sub
mov
(bad)
adc
mov
cmps
cmp
and
mov
shl
lahf
mov
jae
mov
outs
fiadd
sub
or
sbb
retf
inc
test
shl
leave
int
(bad)
call
neg
xor
loopne
(bad)
xchg
xchg
jae
mov
xlat
xchg
shr
dec
call
push
and
sbb
outs
pop
outs
mov
inc
mov
push
test
inc
and
daa
cmp
mov
mov
clc
mov
test
stc
test
pop
sub
dec
jmp
in
mov
mov
or
loopne
daa
jecxz
dec
cld
adc
push
es
lock
xchg
clc
dec
je
sub
push
cmp
jp
push
ds
inc
xchg
cmp
das
or
xchg
pop
pop
fmul
push
add
mov
ja
pop
adc
inc
stc
mov
mov
push
das
mov
push
cmp
or
xchg
f2xm1
ret
mov
jmp
push
clc
and
cmp
aam
mov
addr16
in
mov
mov
sahf
loopne
xor
sbb
ret
lods
push
ins
call
cli
push
pop
dec
mov
mov
(bad)
jmp
or
cmp
push
jg
xchg
repz
fldenv
jl
ins
jae
sub
cmp
adc
sub
xchg
mov
push
imul
lahf
inc
frstor
and
scas
loopne
jo
in
popa
sub
cwde
or
sub
jno
or
jne
fidivr
sbb
mov
(bad)
stos
lods
sbb
out
jns
movs
mov
or
out
add
stos
pop
enter
int
xchg
retf
adc
jae
xchg
and
jge
mov
push
dec
mov
cmps
dec
pop
jmp
pop
aas
lods
xor
xor
sub
cmp
push
not
jo
int
xor
sbb
ss
push
sub
test
movs
push
adc
dec
mov
sub
pop
push
add
leave
(bad)
hlt
pop
out
inc
dec
or
push
sub
lea
imul
dec
jne
jl
mov
in
fsubp
shl
outs
push
and
div
add
cmps
out
imul
xchg
jmp
sub
(bad)
cdq
pop
arpl
sar
or
inc
test
inc
mov
adc
xor
xchg
adc
mov
ret
push
cwde
or
adc
rol
push
mov
inc
add
leave
jb
retf
or
out
xchg
dec
pop
push
cs
int
loopne
sbb
shl
icebp
jle
jno
push
mov
xor
rcr
and
inc
cmp
sub
jns
lods
(bad)
ins
test
and
mov
out
add
mul
cmc
pop
jne
aad
dec
xor
idiv
mov
sub
adc
arpl
repz
jbe
add
test
xor
arpl
shr
pop
pop
int
xchg
enter
into
js
ss
pop
mov
inc
retf
jno
xor
ins
mov
shl
or
shr
nop
sbb
xchg
xchg
sbb
out
popa
dec
shl
ret
push
inc
sub
pop
fsub
pop
xchg
mov
jae
in
rcl
js
push
in
jns
pop
sbb
xchg
xor
(bad)
iret
in
daa
xchg
push
mov
xchg
addr16
and
jb
sbb
loop
cmp
or
pop
xor
jecxz
les
or
mov
addr16
loopne
push
shl
hlt
push
call
sbb
mov
dec
xchg
aam
push
pop
fs
pop
add
dec
mov
mov
test
(bad)
mov
jne
sbb
fld
fist
add
xor
das
mov
pop
out
pop
adc
data16
cmp
cdq
jge
jae
and
inc
adc
retf
pusha
jg
xchg
xchg
add
push
mov
ror
(bad)
sub
mov
and
outs
jnp
(bad)
lds
scas
mov
jb
repnz
mov
inc
test
in
add
add
jns
inc
loop
sub
in
fisttp
fdiv
xor
aaa
xor
mov
mov
jp
mov
mov
sub
fbstp
arpl
cld
add
sub
xor
or
popa
lods
sbb
inc
daa
dec
mov
(bad)
add
sub
icebp
mov
imul
adc
jg
mov
jno
std
sbb
cmp
pop
in
fbstp
mov
sbb
fwait
cld
dec
or
(bad)
(bad)
sar
jnp
push
or
bound
add
inc
hlt
cmp
sub
inc
xchg
popa
xor
xchg
pop
into
retf
and
pop
mov
movs
enter
jbe
jns
mov
setb
(bad)
adc
mov
inc
sti
clc
mov
mov
mov
bound
ret
xchg
out
mov
cld
jp
aam
pop
xchg
ds
push
lds
push
adc
and
imul
push
mov
and
rol
jo
xor
hlt
daa
ja
int
sub
js
neg
xor
in
jmp
ins
and
jecxz
stos
jae
dec
dec
repnz
cmp
leave
pop
pushf
aaa
dec
shl
bound
and
sub
dec
rol
xchg
sahf
pop
mov
push
shr
mov
or
popf
call
dec
jmp
mov
neg
or
mov
push
add
sbb
mov
pop
ret
out
jecxz
(bad)
xchg
jle
adc
jecxz
push
sbb
inc
jp
(bad)
xor
xor
jns
dec
xor
push
cmp
dec
fwait
jno
(bad)
ffree
mov
fstp
aaa
jns
sahf
xchg
movs
xchg
and
jno
cmp
pop
cmps
(bad)
fbstp
lods
cmps
mov
das
push
mov
lock
xlat
mov
or
xor
mov
cmp
cmp
dec
pop
add
imul
or
(bad)
std
ret
dec
xchg
add
jb
test
fdiv
les
or
lea
repnz
popf
jle
mov
in
in
add
movs
std
cs
pop
pop
call
shl
shl
test
aas
jg
dec
imul
mul
in
cmp
mov
sar
sbb
jecxz
(bad)
imul
fsubr
sub
mov
popf
in
push
into
push
pop
and
push
push
test
adc
cld
das
cmp
fcmove
pop
fidiv
inc
(bad)
mov
add
shl
cmc
enter
lods
push
adc
outs
mov
push
ret
mov
arpl
sbb
mov
inc
pusha
add
add
in
lods
ja
popf
call
test
clc
pop
jno
dec
inc
mov
imul
mov
and
pushf
sub
cmp
lahf
inc
in
(bad)
jmp
sti
imul
xor
dec
mul
fcmovu
pop
sbb
xchg
dec
cli
lahf
call
(bad)
imul
lea
gs
aas
xor
setnp
xor
sbb
pop
jae
ror
lea
xchg
movs
push
xchg
sub
ret
pop
sbb
shr
mov
cwde
sar
dec
or
xchg
and
add
in
test
push
sub
sahf
mov
jmp
xor
cmps
stos
cmp
sbb
ror
jbe
sbb
push
loopne
xchg
nop
push
aaa
adc
mov
ror
sbb
and
push
adc
fwait
mov
leave
(bad)
adc
or
mov
or
into
mov
sbb
add
dec
rep
fcomp
xor
mov
xchg
mov
mov
and
sbb
(bad)
ss
add
mov
jno
fadd
jecxz
xchg
pop
mov
mov
test
pop
fs
cmp
xchg
std
movs
in
arpl
int
add
mov
mov
add
loope
inc
call
ins
call
js
cmp
stos
dec
imul
scas
pop
sbb
addr16
aad
cmp
fcmovu
and
lea
jns
dec
sbb
adc
mov
stos
sub
dec
xchg
xchg
es
add
xchg
mov
jmp
dec
or
lods
mov
xor
push
pop
ins
cmp
fwait
retfw
pop
enter
xor
xchg
rol
push
push
loopne
sub
mov
(bad)
dec
cld
or
stos
jo
cwde
dec
add
pop
out
or
repz
mov
xchg
bound
(bad)
cmc
xchg
lods
cdq
lods
fscale
inc
ja
call
pop
cdq
lahf
daa
(bad)
mov
les
mov
call
push
adc
and
xchg
stos
or
dec
(bad)
jge
push
dec
retf
push
mov
pop
popf
sub
fcmovnbe
add
pusha
mov
js
push
xchg
stc
clc
push
nop
jl
in
ins
mov
mov
xchg
add
or
sbb
cmp
add
lods
sahf
repz
mov
scas
and
daa
retf
arpl
xor
mov
or
dec
pop
in
jecxz
movs
ret
iret
push
lods
mov
mov
jb
pop
fmul
ror
daa
mov
into
repz
dec
fcomp
call
inc
push
cmp
cmp
mov
aad
(bad)
mov
sub
nop
imul
ds
cmp
mov
(bad)
adc
dec
and
sbb
mov
in
xor
push
xchg
mov
ja
test
jecxz
add
push
and
dec
and
outs
mov
mov
pop
cmp
(bad)
mov
in
pop
adc
rol
out
mov
push
daa
js
retf
jb
in
call
rol
jo
sub
dec
outs
and
(bad)
xchg
(bad)
fidiv
lods
test
sahf
faddp
jmp
dec
sub
mov
add
sbb
pop
fucomip
push
adc
sbb
cmc
cdq
sbb
cs
adc
jl
into
mov
xchg
ja
inc
and
cmp
xor
cmp
pop
inc
jno
cmp
pop
fcom
ret
sub
mov
sub
inc
pop
inc
scas
fwait
pop
fidivr
out
in
es
sar
cld
out
mov
sar
jo
adc
sbb
xchg
cmp
fidiv
push
pop
adc
retf
test
in
dec
mov
fwait
movs
call
neg
sub
lods
and
mov
inc
rcr
out
mov
or
in
loop
and
in
sbb
loope
fwait
pop
fwait
xor
js
sub
test
loop
sbb
aas
mov
sbb
xchg
dec
and
fsubrp
stc
sbb
mov
scas
fdivr
push
ror
std
mov
inc
mov
jmp
shl
sub
(bad)
cwde
mov
jle
int
sub
aas
inc
retf
fcmovb
xchg
test
rol
mov
pop
mov
(bad)
es
cmc
out
or
sahf
fsub
mov
movs
push
sbb
stos
das
dec
out
retf
imul
mov
das
add
and
imul
add
and
mov
cmp
sahf
out
push
mov
in
add
adc
(bad)
dec
call
aaa
mov
loopne
jne
(bad)
aam
cli
add
mov
stos
cwde
iret
inc
bound
jbe
add
sub
add
jecxz
jns
mov
sbb
icebp
sub
(bad)
push
adc
imul
(bad)
cli
movs
add
cmp
mov
jge
setnp
pop
mov
adc
push
xchg
repnz
loopne
lea
ins
xor
loop
ss
jae
jno
xor
push
pop
cwde
stos
adc
hlt
xor
shl
sbb
gs
add
retf
mov
mov
dec
ja
push
fs
xchg
mov
repnz
sbb
xchg
imul
cld
shl
pop
jmp
in
test
in
xor
(bad)
je
push
mov
cmps
push
adc
arpl
icebp
sar
scas
fisttp
pusha
rcr
sbb
mov
sub
inc
ins
es
fldenv
sti
add
dec
movs
ret
dec
jnp
jno
outs
nop
xchg
pop
cdq
dec
clc
sub
jl
sbb
xchg
out
fldcw
daa
jg
jmp
aad
test
pushf
and
retf
adc
mov
or
push
jno
xor
sub
icebp
push
mov
add
std
scas
mov
xchg
jecxz
pop
or
adc
jecxz
push
xchg
arpl
push
je
test
jmp
daa
shl
bound
mov
push
inc
push
sub
xchg
jbe
inc
add
aad
sahf
mov
sbb
mov
nop
pop
push
xchg
mov
sub
pop
mov
dec
mov
ins
bound
cmp
pusha
das
stc
sahf
xchg
jo
and
(bad)
data16
imul
cmp
push
xlat
mov
dec
push
(bad)
pushf
fsub
mov
adc
daa
fist
push
lds
or
jl
std
sbb
imul
fucomi
mov
mov
aam
and
mov
rsm
sub
cmp
fdivr
fwait
test
cmp
cmp
ss
and
adc
rcr
(bad)
jb
mov
or
(bad)
adc
in
ins
jmp
xchg
(bad)
call
cmc
ja
or
sub
into
es
sbb
sbb
sub
sub
das
sub
sbb
call
je
add
ss
stos
ds
call
pop
lods
or
pop
rcr
ret
(bad)
mov
pushf
mov
cmp
cmp
sbb
call
xchg
jg
movs
outs
test
jnp
xchg
retf
sbb
sub
and
cmc
add
leave
jbe
scas
inc
test
push
push
mov
and
sbb
mov
jecxz
je
and
and
rcl
push
jge
fsub
es
repnz
ja
adc
daa
mov
inc
int
jne
int3
cmp
jb
push
mov
and
mov
inc
mov
jno
xor
int3
adc
ret
inc
pop
inc
pop
(bad)
sub
stc
stos
or
inc
inc
pushf
stos
enter
or
cmps
add
cmp
dec
js
xor
sbb
into
test
rcr
add
sub
mov
xchg
adc
(bad)
aaa
jge
ror
cli
adc
xchg
in
fcmovne
push
scas
sub
cmp
in
int3
pop
mov
jl
xchg
mov
inc
dec
push
outs
aaa
imul
cmp
sbb
gs
imul
(bad)
leave
fisttp
jbe
mov
cmp
and
inc
dec
(bad)
mov
cmc
aad
mov
aaa
imul
pushf
cdq
aas
call
push
shl
fild
mov
bound
sub
sub
add
lea
lods
std
inc
adc
inc
inc
loopne
fs
jmp
gs
fdivp
jg
aaa
sbb
fstp
jns
rol
push
loopne
mov
into
cmp
lea
jae
ret
pop
adc
in
or
inc
dec
cmp
popf
jp
push
or
outs
xchg
xlat
mov
xchg
and
xor
inc
fsubr
cmc
bound
xchg
add
daa
in
jbe
call
sub
xchg
xchg
jge
ror
add
cmp
inc
xor
push
pop
repnz
(bad)
mul
or
adc
xlat
dec
not
mov
test
lock
mov
or
(bad)
js
and
adc
(bad)
imul
or
cmp
mov
cmp
jnp
je
jb
inc
jnp
add
add
stos
inc
repz
clc
xchg
call
jp
inc
adc
or
jg
int
stos
adc
sbb
inc
and
xor
push
mov
lods
in
lahf
mov
fld
imul
adc
cmp
fld
mov
dec
xor
(bad)
fidivr
pop
(bad)
in
jle
sti
fwait
inc
jne
dec
jg
xchg
jl
add
mov
scas
cmp
rcr
mov
mov
cmp
lods
sbb
push
bound
jbe
push
cmp
mov
aam
mov
or
bound
je
daa
out
mov
xchg
and
ss
push
punpcklwd
sub
xchg
fdiv
pop
adc
mov
cmp
lds
push
add
mov
call
mov
popa
daa
neg
rcr
push
push
mov
mov
imul
nop
ret
fstp
loope
aad
pop
hlt
adc
in
aam
lods
movs
int3
outs
add
mov
mov
add
sbb
sbb
lock
xor
scas
adc
dec
push
stc
ds
push
mov
into
hlt
lods
fild
push
xchg
aaa
movs
neg
aad
addr16
fist
enter
lds
dec
jecxz
mov
and
pop
jmp
xor
mov
xchg
mov
mov
loopne
adc
fsubrp
cs
jns
dec
push
cmp
mov
add
bound
in
jnp
pushf
shl
push
pop
cwde
mov
popf
(bad)
xor
add
and
push
cmc
pop
ja
xor
xor
push
sbb
adc
inc
jns
test
dec
jno
int3
cmp
sbb
add
pop
xchg
xchg
fsub
push
jge
sahf
inc
bound
rol
push
sbb
shl
out
xor
ret
adc
adc
cmps
sbb
enter
jmp
test
inc
pop
inc
inc
rcl
(bad)
and
mov
inc
mov
push
ret
mov
adc
sbb
or
sub
pop
push
cmp
mov
rcr
iret
or
jnp
sbb
mov
ror
mov
adc
retf
push
js
inc
push
sub
jmp
dec
or
jmp
(bad)
cmp
retf
jp
jl
or
jno
scas
cmp
dec
fsubr
jge
and
fmul
je
fadd
mov
dec
dec
dec
es
aad
je
xor
nop
cmp
pop
sahf
sbb
shl
sti
jle
(bad)
jae
sahf
retf
stc
pop
adc
por
or
fisubr
fcomp
mov
in
mov
pop
adc
dec
cmp
mov
xlat
sti
dec
pusha
fnstcw
fild
dec
xchg
test
push
jmp
in
xlat
mov
cmc
fist
out
nop
inc
inc
hlt
push
add
das
loop
sub
out
xlat
imul
rcr
mov
cmp
adc
or
fucomi
jmp
add
fimul
pop
loop
fs
sti
or
dec
mov
mov
(bad)
xchg
xchg
jmp
sahf
out
retf
jmp
out
mov
push
mov
int
and
loopne
xor
or
sbb
dec
ficom
ret
int3
pop
lds
test
jne
xchg
jl
push
addr16
mov
cmps
mov
or
adc
inc
xchg
sbb
jge
cmp
xchg
mov
mov
mov
in
xchg
mov
jb
adc
popa
sbb
(bad)
cmc
sar
mov
scas
enter
sbb
jmp
or
jp
shr
into
jle
movs
jp
push
sbb
jmp
call
xchg
iret
mov
push
xchg
sub
adc
test
cmp
mov
pop
or
test
pop
or
stos
popa
(bad)
adc
jbe
ret
mov
jns
data16
push
inc
add
pop
lock
jae
loope
inc
push
push
add
ins
pushf
mov
mov
stc
rcr
xor
test
push
sub
push
ins
(bad)
jle
cmp
dec
xor
adc
jno
gs
pcmpeqd
les
imul
jp
in
jl
xchg
push
imul
push
add
pop
repnz
adc
pop
shl
sar
rol
xor
dec
sub
push
mov
(bad)
pop
(bad)
rol
sub
adc
das
shl
in
and
aam
jb
mov
in
mov
mov
jmp
jmp
push
repz
inc
and
test
mov
frstor
test
pop
and
mov
(bad)
pop
jge
lahf
jmp
imul
sbb
xchg
outs
mov
es
fwait
and
test
xor
in
iret
jecxz
sbb
sub
xchg
in
xchg
(bad)
cs
mov
repnz
push
ja
fist
or
mov
lds
hlt
pop
xchg
xor
dec
lea
xchg
xchg
jo
jp
cmps
or
pop
mov
xor
(bad)
stos
retf
adc
and
in
inc
jge
mov
sbb
mov
add
cmps
ret
repz
add
outs
ja
mov
in
pop
mov
adc
shl
es
js
xor
call
inc
aas
std
or
xor
dec
(bad)
cwde
mov
xor
repnz
jg
add
jne
dec
and
mov
dec
dec
pushf
sbb
adc
dec
sub
cmp
mov
xchg
sub
sbb
gs
xor
push
(bad)
aam
push
fwait
add
pop
lahf
cs
push
pavgw
pop
xchg
(bad)
retf
ficomp
jmp
dec
pusha
mov
mov
shl
icebp
sti
and
mov
sub
adc
out
pop
xchg
lahf
mov
lea
retf
das
jmp
mov
je
outs
push
or
sti
push
mov
or
xchg
retf
pop
sti
call
es
cs
shl
or
pop
iret
cmc
mov
into
addr16
loop
cmc
mov
mov
fld
imul
mov
ins
std
sahf
jnp
or
xor
mov
sbb
push
mov
jg
je
lea
cmp
cmp
ss
sub
and
pop
lahf
addr16
out
cmp
mov
dec
xchg
sbb
arpl
in
pop
cmp
pushf
or
sti
pushf
cmp
sti
xchg
ret
sbb
dec
jp
(bad)
popa
inc
iret
cmp
adc
inc
call
fisttp
xchg
es
jecxz
add
push
xchg
mov
push
test
nop
stc
jge
ror
xlat
sbb
icebp
jg
inc
jb
fisubr
mov
mov
imul
out
mov
stc
or
in
out
rol
test
pop
mov
inc
push
ja
das
cdq
cmp
push
add
cmp
xchg
inc
jge
(bad)
test
int
mov
loope
xchg
mov
add
not
cs
adc
stos
and
int
loop
cld
ror
test
and
bound
cmp
mov
and
hlt
pusha
adc
cli
lea
scas
xchg
inc
jmp
sub
mov
jnp
pop
pusha
mov
inc
sahf
mov
in
jnp
or
cdq
pop
scas
sub
loopne
jge
mov
inc
fdivp
xor
in
ret
pop
int
stos
xchg
jo
dec
mov
dec
fmul
inc
cdq
pop
popa
push
test
xchg
call
out
data16
add
jmp
mov
pop
int
mov
popf
pop
push
mov
ret
out
shl
shr
daa
ins
jmp
jp
mov
cmc
sbb
xchg
jns
int3
jae
add
mov
and
or
and
and
data16
xor
fs
mov
nop
xor
outs
outs
mov
inc
lods
add
sbb
rol
jns
les
fisttp
repnz
push
shr
cmp
in
int
test
sub
cpuid
test
pusha
adc
call
and
inc
pop
inc
cmp
mov
jmp
pop
aam
pop
inc
fild
xchg
stos
mov
fsub
fild
push
stc
xchg
inc
fcmovne
neg
je
xor
lock
scas
and
and
xor
into
dec
ror
fidivr
retf
fiadd
aaa
and
pop
mov
test
lods
lock
or
dec
(bad)
mov
jns
pop
mov
xor
ds
pop
stos
and
cdq
jmp
into
xchg
jmp
jbe
xor
or
pop
stos
int
jae
neg
adc
xor
clc
movs
dec
cmp
mov
pop
mov
(bad)
int
cld
stmxcsr
pop
add
push
leave
idiv
stc
pop
jmp
loope
repnz
enter
xchg
and
hlt
addr16
or
ss
stc
cmp
sub
adc
rcr
shr
fidiv
lods
jmp
loopne
push
adc
or
pushf
(bad)
mov
mov
jb
and
mov
movs
pop
aas
cmps
daa
ret
or
or
add
movs
sti
imul
dec
jno
lds
xor
into
das
sbb
pop
adc
(bad)
dec
jle
or
pusha
sahf
sbb
mov
idiv
mul
pop
and
pop
leave
scas
cmp
repnz
xchg
mov
dec
rcl
xor
dec
outs
lods
into
(bad)
in
cmps
dec
test
mov
frstor
stc
loope
rol
stos
stos
test
xchg
push
retf
mov
loope
jmp
ror
xor
(bad)
in
push
cmp
gs
(bad)
into
add
pop
sar
jmp
outs
loope
mov
xor
push
scas
pop
mov
xor
adc
inc
fs
popf
fstp
mov
lods
test
xchg
xchg
mov
ss
clc
or
mov
jae
popa
call
(bad)
mov
add
add
adc
pusha
cmc
xor
dec
sub
push
sub
dec
pop
mov
pop
clc
mov
pop
sbb
xchg
xchg
mov
sbb
and
std
leave
pop
nop
es
movs
hlt
jg
nop
mov
sbb
outs
loopne
sahf
loop
retf
add
test
pop
jl
inc
jl
mov
jge
popf
js
pop
or
aad
ins
pop
xchg
movs
or
cmp
les
add
jnp
call
mov
or
jo
mov
idiv
xor
sub
push
aad
sbb
and
jecxz
pushf
sub
mov
repnz
not
cmp
xor
aaa
pusha
mov
mov
out
jne
dec
into
outs
inc
stos
adc
popa
hlt
mov
inc
pop
xor
push
adc
mov
inc
sahf
inc
cmp
iret
dec
pop
pop
clc
jne
cmp
mov
xor
and
cmp
fstp
shr
ja
add
enter
mov
mov
dec
adc
test
(bad)
gs
sbb
cmp
rcl
retf
retf
(bad)
fs
push
stos
adc
test
cwde
jnp
imul
aad
adc
jle
mov
mov
mov
jl
out
add
mov
iret
inc
sub
fld
push
xor
adc
sar
pushf
dec
jp
and
call
xchg
sub
jle
sbb
push
mov
outs
cwde
add
pop
mov
pop
push
push
cmp
xchg
mov
add
retf
in
ror
jae
pushf
mov
clc
dec
push
push
mov
dec
jbe
int3
clc
aaa
(bad)
adc
rol
jecxz
pop
mov
dec
push
(bad)
xor
or
mov
dec
sbb
es
push
ret
stos
mov
sar
fdiv
repz
jns
dec
das
in
xchg
daa
outs
movs
dec
xchg
add
push
push
add
push
call
push
push
out
add
pop
dec
mov
and
movs
cmp
call
mov
push
(bad)
inc
mov
ja
push
(bad)
push
test
cmp
jmp
mov
ins
cmc
xlat
inc
bound
jmp
cdq
test
call
lods
sub
dec
and
lds
ins
mov
or
dec
dec
xchg
sub
pushf
cmp
shl
push
fild
cmps
jmp
stos
cmps
pop
sti
sbb
inc
scas
push
and
pop
aaa
call
bound
jae
pop
outs
add
mov
sub
mov
fldenv
and
mov
jns
sub
lds
inc
mov
ins
or
pop
and
mov
movs
in
cli
fld
xor
sub
add
dec
aaa
lods
jmp
xor
mov
je
mov
cmc
gs
dec
into
xor
mov
push
imul
push
push
aam
adc
and
nop
out
aas
enter
je
mov
jmp
int3
mov
xchg
aaa
jl
dec
cmp
cmps
dec
cmps
popa
call
mov
sbb
mov
and
push
leave
sub
add
(bad)
push
inc
push
adc
test
nop
test
popf
scas
retf
imul
leave
lds
and
cmps
xor
mov
jge
mov
das
fwait
xor
out
mov
pop
lock
bound
(bad)
movs
iret
add
stos
jnp
fs
(bad)
pop
push
mov
push
dec
sbb
out
neg
cs
sbb
js
aad
sub
ret
call
jbe
and
retf
xchg
push
lahf
(bad)
enter
fisub
sahf
sbb
jmp
dec
cmp
out
pop
adc
cmp
loop
mov
stc
out
sbb
sub
gs
rcr
jecxz
shr
sub
mov
pop
fidivr
hlt
pop
fisttp
pusha
pop
movs
fcomp
int3
dec
shr
imul
mov
leave
int
daa
stos
outs
mov
dec
scas
mov
xor
xor
mov
mov
aas
(bad)
in
dec
pushf
jne
outs
mov
jecxz
push
in
js
(bad)
fimul
pop
or
pop
xchg
jo
add
push
jnp
icebp
popa
pop
das
scas
push
loopne
dec
outs
add
jl
popa
sar
jo
inc
hlt
xor
cmps
mov
pop
xor
mov
clc
fsubr
outs
inc
scas
push
movs
cmps
addr16
ret
popf
imul
jmp
test
adc
nop
pop
ret
or
ins
aaa
out
test
cmp
add
cmp
out
fdiv
mov
jmp
push
or
jno
sbb
cmps
popa
xchg
imul
jg
dec
mov
push
movs
call
mov
push
leave
mov
imul
pop
ins
rcr
div
and
mov
call
sub
das
pop
mov
enter
mov
adc
adc
sbb
nop
push
xchg
mov
lods
mov
and
and
mov
lea
jne
xor
dec
fdivr
xchg
or
fs
aam
ficomp
stos
inc
shl
xchg
movs
push
aam
mov
jbe
pop
sahf
jp
movs
ins
das
xor
mov
ret
sbb
ja
push
xchg
jge
push
pusha
mov
iret
imul
test
cmp
add
ss
call
xchg
(bad)
in
or
out
test
jns
push
dec
jae
mov
(bad)
div
cdq
test
fcomp
test
mov
retf
aaa
push
inc
mov
jae
stc
sar
imul
xor
lock
ins
xchg
sbb
add
das
sub
(bad)
sbb
sub
mov
mov
adc
mov
sub
mov
adc
ja
add
fild
ja
fs
sbb
mov
and
cmp
jg
or
(bad)
stc
jmp
pop
aaa
in
test
mov
fistp
jb
(bad)
lock
sub
mov
outs
loopne
ds
es
sub
add
lods
icebp
dec
es
mov
pop
mov
push
jecxz
xchg
cmp
sbb
mov
std
mov
or
les
in
movs
bound
and
jb
out
inc
xchg
fisttp
pop
or
sahf
out
out
leave
out
or
push
jnp
ins
pop
cmp
push
xor
xor
and
retf
(bad)
jl
shr
frndint
jns
cmp
xor
sbb
cmps
inc
add
retf
push
xchg
pop
aaa
mov
idiv
xor
mov
mov
add
push
sub
jge
test
dec
stc
mov
pop
cli
push
mov
mov
or
in
outs
or
mov
and
shl
add
jne
mov
jmp
push
mov
sti
mov
and
push
pusha
dec
push
pusha
sub
test
lds
adc
mov
sar
inc
and
mul
fs
cld
pushf
or
xchg
test
aaa
repz
ficom
lea
adc
pop
or
mov
cmc
pop
loopne
xchg
(bad)
mov
repnz
stos
inc
imul
in
call
or
sub
addr16
mov
dec
fcomp
xchg
sub
pushf
fadd
xchg
push
jbe
scas
and
pop
sahf
push
loop
adc
xor
mov
scas
call
aaa
gs
cmp
out
adc
nop
daa
in
mov
ds
xor
and
and
popa
addr16
mov
frstor
ret
pop
pop
push
jnp
pop
jnp
shl
retf
sub
jae
repnz
cmps
xor
pop
(bad)
idiv
fnstsw
enter
leave
mov
mov
xchg
imul
add
or
add
inc
jbe
xchg
stc
push
mov
mov
cwde
pop
sub
sub
jg
arpl
mov
inc
xchg
out
clc
and
adc
loop
jecxz
xchg
xor
push
fisttp
js
cmp
xchg
pushf
jg
jl
ror
mov
test
xor
inc
imul
mov
aad
fdivr
push
fcom
ins
fadd
sbb
(bad)
xchg
(bad)
call
mov
or
popa
xor
or
in
cmp
inc
dec
dec
adc
cwde
add
jno
fst
rcl
mov
movs
or
psrld
cli
xlat
sti
mov
fld
fwait
mov
mov
push
je
pop
or
inc
jp
or
call
push
ja
aad
push
adc
inc
jae
xor
shl
(bad)
pop
loopne
and
es
shl
push
test
aaa
push
mov
sub
cmps
mov
jae
mov
sub
movs
push
rol
push
pop
add
pop
or
rcl
data16
push
sbb
cmp
add
and
das
shl
mov
push
(bad)
in
push
pop
pop
pop
aas
mov
dec
scas
in
mov
mov
ror
push
add
inc
push
mov
or
jle
cmp
cmps
sub
and
ja
and
xor
fist
lea
jg
mov
outs
pop
push
into
ins
imul
adc
and
mov
pop
cmp
dec
movs
adc
push
xchg
ret
add
(bad)
fld
mov
cli
adc
sub
push
jno
mov
and
outs
test
xchg
fild
dec
out
fnstcw
ficom
pop
xor
mov
add
ret
das
enter
nop
sub
(bad)
bound
cmps
pop
adc
xchg
imul
adc
mov
cmp
pop
lea
test
fsub
pop
inc
and
push
sbb
pop
pop
mov
cmp
gs
out
jno
push
xchg
nop
popf
in
xchg
or
ja
pop
jl
icebp
and
retf
(bad)
icebp
(bad)
icebp
pop
shr
mov
(bad)
push
sub
outs
popa
push
(bad)
xor
daa
push
scas
push
in
call
sub
es
imul
inc
cmps
scas
sbb
rol
dec
aaa
mov
push
adc
mov
mov
jmp
sbb
xrelease
fisttp
inc
sub
fwait
sub
mov
pop
pop
jbe
shr
fstp
shr
pop
test
outs
ss
repz
and
sbb
cmp
jge
xchg
ja
frstor
test
sub
mov
cwde
xchg
in
sub
or
cwde
adc
fs
imul
or
in
push
pop
jmp
sub
cmp
sahf
pop
and
stos
xchg
in
jmp
pop
lea
in
fdiv
(bad)
ss
lods
jnp
mov
inc
bswap
aam
pushf
xchg
outs
sbb
sub
addr16
aaa
out
sbb
ror
inc
jmp
dec
mov
ins
fnstcw
std
xchg
movs
sub
xor
jb
jb
shl
xor
xchg
test
push
mov
jb
sbb
and
inc
or
pop
sbb
sub
xchg
into
mov
sub
out
xlat
fld
adc
mov
mov
or
pushf
inc
inc
sbb
movs
bound
jp
retf
(bad)
jmp
ret
sbb
cmc
inc
add
shl
jne
mov
jmp
cli
pop
jno
and
xor
jmp
js
dec
(bad)
(bad)
fcmovnbe
outs
mov
pop
into
mov
pop
(bad)
xlat
mov
xor
pop
cmp
in
hlt
push
ds
test
mov
int3
pop
es
aaa
xchg
and
mov
mov
xchg
ss
and
inc
ins
mov
mov
iret
xchg
sub
sahf
add
xor
nop
xor
lea
and
xor
ror
push
jns
xchg
inc
dec
aam
fist
push
pop
mov
scas
lahf
dec
ror
rcr
mov
scas
cmps
sahf
pusha
fsub
cwde
mov
xchg
xchg
push
dec
jmp
mov
add
int3
xor
jb
fucomp
or
into
dec
xor
test
pop
mov
pop
test
hlt
push
ins
aam
test
dec
xchg
dec
inc
mov
scas
cmp
ss
popf
xor
jl
xlat
jnp
and
add
es
ins
jbe
pop
shr
ficomp
push
cld
bound
ret
pop
sub
and
jecxz
xor
in
sbb
sbb
xchg
cmps
loop
fisttp
sbb
push
outs
xchg
mov
test
scas
shl
inc
inc
daa
loopne
call
stc
fidiv
rcr
push
ret
stos
popf
je
(bad)
bnd
(bad)
push
arpl
mov
cwde
push
inc
mov
fstp
dec
inc
mov
dec
aad
jne
arpl
rol
inc
nop
dec
cmps
or
xor
or
movs
and
or
iret
xor
sbb
pop
push
nop
arpl
mov
aam
movs
mov
push
shr
lods
popa
sbb
popa
xor
movs
cmp
(bad)
xor
inc
loop
je
jbe
xor
and
pop
sub
sub
mov
imul
bound
pop
je
mov
dec
add
xor
mov
fs
in
daa
jl
and
mov
je
mov
xchg
jne
out
inc
mov
jbe
and
dec
jle
lods
sbb
out
test
mov
mov
xor
outs
inc
pop
add
fiadd
inc
sub
out
mov
sub
js
aad
dec
out
ficomp
sar
adc
in
sbb
jle
jo
test
inc
inc
jae
xor
cs
adc
mov
mov
mov
push
jg
mov
mov
jbe
cld
or
scas
add
cs
hlt
sub
push
ins
in
inc
sub
fsub
xor
mov
jnp
imul
jo
sbb
aad
inc
sub
pop
dec
hlt
mov
js
jb
cmp
lods
ins
in
dec
or
mov
pop
xchg
out
jle
push
inc
inc
xchg
(bad)
in
punpckhwd
sub
movs
cld
outs
push
pop
pop
in
or
bound
out
and
jl
iret
xchg
push
adc
stos
push
push
fst
and
jle
pushf
repz
cwde
lods
inc
int3
mov
das
jne
mov
rcr
push
scas
jmp
mov
test
outs
pushf
gs
mov
cmp
pop
ret
jmp
jp
out
sti
fincstp
mov
pop
loope
test
jg
pop
repnz
out
mov
icebp
rcl
stc
ds
or
jo
clc
std
jmp
mov
cmp
or
and
retf
ret
mov
or
std
and
fs
fs
std
cmp
test
jmp
aaa
mov
pop
push
lds
push
cli
xchg
aas
in
push
xchg
shr
add
stos
cmc
loope
jle
sbb
into
pop
nop
jae
movs
shr
call
push
test
cmp
sub
fisub
mov
or
cmp
mov
pusha
mov
sar
jae
(bad)
stc
mov
in
retf
test
jge
xchg
shr
push
cmp
dec
icebp
ret
shr
(bad)
add
ins
push
sbb
dec
ja
out
adc
push
sar
ins
push
leave
xor
aam
popf
sub
out
js
jne
mov
push
ret
(bad)
in
sar
jmp
movs
cmps
imul
push
pop
cmc
sbb
in
dec
xor
sub
in
adc
addr16
add
adc
inc
push
(bad)
ret
xlat
xchg
sub
jmp
ss
inc
xchg
lods
dec
out
(bad)
(bad)
rcr
test
mov
out
lahf
mov
mov
xor
mov
sbb
outs
stc
add
fsubp
sbb
repnz
arpl
pop
out
test
mov
xchg
aam
adc
mov
cmp
cmp
mov
push
jle
movs
outs
ss
in
jno
sbb
mov
dec
mov
push
add
and
jl
cmps
int3
add
retf
test
jmp
cmp
test
cmp
fwait
sub
aam
aad
sbb
push
sub
sub
into
mov
imul
pop
inc
xchg
push
cmp
inc
rcl
mov
in
mov
nop
xchg
int3
loope
lods
jne
and
call
push
test
adc
sub
(bad)
stos
fldenv
dec
dec
scas
fbld
mov
mov
pop
outs
xor
lods
cmps
xchg
push
adc
mov
repz
sub
sub
add
repnz
out
pop
mov
into
sbb
jmp
(bad)
push
cmc
adc
push
cmc
addr16
lods
pushf
or
mov
loopne
xor
arpl
ror
sbb
fst
push
inc
xor
jecxz
push
mov
clc
lahf
imul
imul
xchg
xor
cmps
in
push
movs
jg
mov
repz
jbe
cli
push
popf
mov
push
adc
xlat
sbb
test
fnsave
cmp
sub
popf
mov
(bad)
fsub
and
shr
sbb
es
into
inc
loopne
sub
inc
retf
in
out
xor
shl
xchg
ins
fsub
cmp
les
push
cmc
or
inc
adc
inc
sbb
jne
cmps
or
adc
xchg
movs
xchg
popf
mov
adc
jg
mov
mov
std
pop
out
dec
xor
mov
sbb
sbb
sbb
add
(bad)
dec
imul
pop
xchg
adc
std
pusha
std
ret
pop
and
je
dec
loop
jl
loop
mov
inc
push
dec
pop
sub
jle
loope
xchg
xchg
push
popf
adc
mov
imul
pop
(bad)
cld
sbb
push
or
adc
jae
xchg
pop
test
scas
dec
jnp
lods
xchg
add
push
jecxz
push
push
jle
pop
sub
shl
mul
xor
pop
mov
xor
mov
cmp
hlt
pop
jno
cmp
jge
pushf
sbb
aad
xchg
and
mov
adc
js
push
in
fmul
ss
jecxz
jl
popw
std
mov
scas
mov
add
outs
pushf
push
sbb
add
cmp
pop
cli
call
movs
mov
xor
and
sbb
inc
sub
adc
call
fbstp
data16
jmp
xor
adc
cmps
cmp
add
out
fs
std
and
or
call
push
(bad)
retf
cmp
test
fwait
mov
je
fisubr
stos
push
clc
mov
retf
popf
movs
je
lock
jmp
movs
enter
stc
mov
fnstsw
xchg
sahf
jb
add
push
jmp
and
mov
int3
add
sbb
xchg
outs
add
xchg
cmps
int
dec
xchg
cmps
pop
ret
mov
inc
cmp
mov
fnstenv
mov
movs
(bad)
jns
push
add
sti
loopne
movsx
iret
ins
loopne
movs
enter
jg
lods
imul
inc
add
test
or
sbb
repz
mov
sbb
pop
adc
jg
mov
int
shr
pop
push
lock
and
rol
in
out
fdivr
and
mov
push
fidiv
push
push
sub
(bad)
and
xlat
inc
jo
xor
out
mov
pop
adc
jae
mov
fist
popf
pop
inc
push
outs
repz
lock
add
add
sbb
not
dec
ret
out
lahf
repz
ins
sub
cs
add
in
cmp
mov
or
jecxz
test
test
data16
push
mov
cmp
arpl
push
sub
sub
sbb
shr
jmp
es
inc
ficomp
jg
dec
int3
dec
sbb
inc
xor
outs
add
cmp
fcom
sti
outs
sti
leave
mov
pop
jnp
dec
sbb
inc
inc
in
popa
stc
fdivr
lods
mov
cmp
mov
push
mov
xor
lea
in
add
addr16
in
test
in
xchg
(bad)
mov
xor
mov
jb
cli
pop
push
out
in
or
cmp
sub
fcmovbe
scas
shl
shl
push
xor
int
aaa
push
pop
xchg
scas
xor
test
pop
push
nop
xchg
sbb
repz
movs
cli
(bad)
out
clc
cmc
idiv
clc
inc
jmp
mov
xor
mov
mov
iret
jmp
mov
(bad)
std
pop
pop
rcr
fcmovu
dec
std
fucom
aad
add
in
push
int
sbb
std
xchg
inc
cld
sbb
imul
adc
hlt
xlat
pop
shl
cmp
add
aad
cs
rcl
sbb
(bad)
std
push
in
ss
dec
jnp
xchg
(bad)
fnstenv
loope
mov
iret
or
in
mov
inc
sub
mov
test
dec
xchg
inc
fdivr
(bad)
stos
and
push
mov
fild
pop
and
push
mov
pop
dec
jns
adc
addr16
ret
int
mov
xchg
jae
hlt
mov
mov
pop
pop
adc
sar
fldlg2
repz
dec
inc
jle
sbb
scas
adc
pop
push
xchg
add
ds
mov
dec
sbb
mov
jbe
ficom
aad
xor
inc
mov
lahf
sbb
xchg
sbb
gs
test
jp
fistp
hlt
stos
and
in
and
fadd
xor
clc
(bad)
sub
jmp
bound
mov
mov
pop
inc
jp
jnp
pop
mov
or
(bad)
jmp
test
es
jge
xor
mov
push
pusha
jge
jae
bound
iret
daa
xor
push
add
sub
retf
hlt
mov
adc
mov
jbe
cli
in
movs
add
mov
add
pusha
cmp
jg
int3
movs
aaa
movs
adc
cmc
jb
aam
pop
pop
sti
mov
aas
add
(bad)
stc
mov
retf
pop
adc
xchg
jo
push
adc
in
add
fmul
mov
fcmovnbe
inc
frstor
jae
loopne
jbe
inc
retf
fstp
das
cmp
mov
lea
(bad)
cmp
pop
xchg
jb
test
jns
pop
pop
adc
mov
xchg
sbb
popf
ins
jg
cmp
push
fnsave
jae
adc
and
xor
aas
xor
loop
imul
in
xor
and
cmp
push
(bad)
cmps
jbe
pop
repz
adc
and
in
inc
xor
xlat
and
stos
mov
sbb
push
dec
pusha
cmp
sbb
lea
lock
shl
xchg
jne
mov
xlat
sbb
psubw
pop
mov
inc
or
nop
or
jp
stc
and
sub
fnstsw
and
inc
sub
out
inc
xor
outs
out
dec
mov
mov
stc
sbb
pusha
(bad)
imul
scas
push
daa
or
repnz
(bad)
jo
jg
in
dec
mov
out
test
stos
ret
sub
xchg
jno
add
arpl
ja
dec
bound
xchg
mov
call
push
fimul
sar
arpl
mov
movs
pop
mov
stos
ins
in
pop
test
(bad)
gs
lods
retf
movs
call
push
into
pop
pop
sub
fidiv
inc
xor
pop
inc
jb
sub
add
mov
push
sub
mov
aaa
mov
fist
shr
fnstenv
ss
xor
pop
mov
ins
nop
adc
lea
call
outs
xchg
ins
shl
add
mov
mov
sub
inc
jp
push
mov
aam
mov
nop
shl
sbb
mov
mov
inc
outs
lock
addr16
or
push
or
cmps
mov
retf
(bad)
lods
shl
loopne
enter
imul
rol
lods
out
add
mov
in
push
pop
jle
arpl
pop
xchg
sub
inc
xchg
cmp
popf
cdq
jp
leave
jmp
push
loope
sahf
lahf
shr
jo
sbb
cmp
push
mov
pop
mov
out
pop
cdq
loope
cmp
jge
or
lods
loop
test
jl
aas
sbb
mov
ja
xchg
push
out
ins
mov
jmp
jae
jg
xchg
sub
push
inc
fisub
shl
or
mov
jnp
test
xor
icebp
mov
lods
mov
xchg
pop
into
add
dec
cmp
ret
(bad)
cmp
jno
push
rcr
jno
and
cmp
mul
fcom
mov
clc
pop
leave
gs
adc
add
push
aad
jg
stos
mov
jno
popf
test
cmp
int3
jle
int3
and
cmp
hlt
or
jbe
jb
scas
outs
cmp
mov
xchg
jle
cmp
jmp
cmp
and
div
inc
add
xor
sub
pushf
xor
or
sahf
arpl
scas
popa
jo
sub
pop
aas
xchg
popf
scas
ss
in
dec
push
retf
mov
or
push
arpl
test
sub
jo
add
loope
xor
fcom
clc
popf
xchg
lea
inc
das
jmp
outs
dec
sbb
xor
cmp
arpl
cmp
mov
in
out
mov
cs
cld
jns
inc
sub
jae
dec
mov
aam
out
lahf
jg
fisub
push
je
push
sub
add
xor
fnstcw
cmp
hlt
mov
xchg
mov
out
fisubr
out
ret
jne
xor
and
out
inc
into
stos
stc
inc
dec
xlat
addr16
dec
pop
stos
test
dec
mov
push
inc
adc
mov
out
cld
(bad)
sar
bound
jle
test
dec
cdq
dec
cmp
inc
retf
xbegin
test
lock
fist
sub
ret
pop
mov
(bad)
mov
dec
idiv
cmp
inc
ret
mov
adc
fcom
adc
push
push
xor
xlat
aaa
call
add
or
mov
mov
sbb
scas
xchg
call
in
inc
inc
pop
leave
xchg
bound
in
loop
xchg
fwait
mov
adc
movs
mov
xlat
jne
mov
pop
sub
ret
mov
test
test
call
adc
pop
dec
data16
das
pop
cli
in
push
or
(bad)
std
bound
pop
test
mov
cdq
(bad)
cld
cmp
push
push
dec
jno
into
pop
cmp
bnd
ds
test
or
ds
push
mov
and
imul
jle
jnp
xor
xor
xchg
push
push
and
imul
ins
cmp
clc
call
movd
ja
dec
push
mov
jb
aad
add
cmp
fidiv
mov
cmps
mov
je
(bad)
shr
fmul
test
mov
jno
push
or
popa
pop
mov
hlt
inc
pop
scas
inc
outs
xchg
rol
jg
jmp
test
(bad)
jo
neg
xor
bound
sub
inc
(bad)
cmps
cwde
cmps
fs
neg
mov
cmps
or
add
arpl
lods
sahf
in
cwde
lods
fnsave
sar
sbb
xlat
mov
lods
das
mov
or
push
mov
jbe
adc
aaa
sbb
push
dec
test
push
mov
data16
cwde
dec
pop
(bad)
push
(bad)
daa
test
out
pop
gs
adc
inc
pop
sub
pop
adc
shl
cwde
and
jae
retf
not
xchg
(bad)
adc
cmp
movs
das
sahf
jle
(bad)
pop
lea
int3
xchg
or
mov
sbb
cmp
xor
sbb
into
jg
fiadd
mov
jecxz
add
or
mov
fisubr
sar
jp
push
sbb
pusha
movs
imul
ror
call
cmc
xchg
push
add
or
inc
retf
mov
loopne
ret
push
clc
dec
es
scas
mov
cmp
xor
mov
test
inc
pop
cmp
leave
xor
or
sbb
(bad)
adc
push
fwait
add
pop
sub
sub
or
pop
xchg
jg
inc
cwde
ins
xchg
imul
sub
imul
fld
mov
push
mov
mov
das
mov
jmp
jb
cmp
pusha
fcompp
push
ror
nop
and
pop
in
xchg
pop
jle
ror
adc
xchg
out
sub
cmp
or
cld
ja
add
sbb
movs
push
sub
mov
push
push
xor
sti
call
mov
mov
add
fistp
movs
mov
adc
ss
cmp
test
mov
pusha
(bad)
push
sub
mov
jae
cld
test
ret
or
mov
retf
data16
adc
movs
mov
or
hlt
dec
xchg
mov
lock
sbb
mov
int3
iret
mov
gs
cmp
scas
mov
clc
loope
ret
(bad)
div
pop
sub
inc
sub
mov
in
mov
mov
push
ficomp
inc
jmp
jmp
and
aad
test
and
pop
mov
aad
movs
int3
cmp
fiadd
xor
adc
repnz
jmp
jecxz
fdivr
pop
or
and
scas
add
jno
pop
push
lahf
cwde
psrad
sbb
mov
or
pop
retf
dec
sbb
mov
jge
mov
adc
repz
ds
pusha
pop
nop
mov
fwait
add
and
(bad)
in
sbb
or
or
sub
daa
add
jno
add
mov
push
mov
call
push
cmp
fcomp
push
mov
loopne
jmp
xchg
pop
fild
inc
push
and
pop
aaa
dec
xchg
int
test
loopne
fnstenv
aas
dec
retf
adc
xchg
outs
fbstp
movs
and
dec
lock
test
push
inc
loopne
jb
dec
mov
sbb
add
xor
adc
les
ror
add
jbe
xor
ins
lea
pusha
jnp
outs
out
dec
mov
rol
in
and
jmp
xchg
jg
sbb
dec
lahf
and
fcom
fsub
test
jae
cmps
jmp
(bad)
enter
call
call
sbb
cmp
cmp
repz
loope
cmps
retf
sub
sbb
out
clc
or
enter
pop
(bad)
(bad)
pushf
adc
mov
xchg
lahf
mov
arpl
pusha
fimul
push
mov
out
and
pop
or
sbb
gs
in
xchg
cwde
ins
xchg
cwde
fcomp
lods
mov
dec
(bad)
and
(bad)
cld
add
mov
inc
push
inc
cmp
out
cdq
inc
xor
leave
into
xchg
imul
sar
ret
xchg
mov
inc
jmp
jno
mov
movs
fstp
sbb
ja
sub
mov
sar
push
and
xor
cmp
mov
test
or
test
add
adc
in
in
sub
loopne
stc
outs
lods
(bad)
mov
outs
jno
fsub
mov
pop
repz
daa
jecxz
sub
cwde
add
dec
int3
mov
inc
adc
test
pop
pop
lahf
pop
pop
ret
adc
in
out
fsubr
(bad)
aaa
push
pop
push
cmp
add
jne
pop
out
push
jne
movs
push
adc
ret
mov
imul
bound
gs
push
fldenv
in
xor
pop
and
int3
lods
mov
pop
dec
repnz
loopne
gs
sub
cmp
add
(bad)
sbb
sbb
jne
dec
jb
adc
sub
mov
sbb
shl
mov
lods
xchg
xchg
dec
adc
jo
repz
pusha
jnp
(bad)
dec
xor
jno
xor
xchg
in
dec
retf
stos
add
cmp
cld
jecxz
mov
scas
inc
jb
sub
mov
icebp
das
jmp
add
dec
sbb
sti
out
pop
popf
dec
fnsave
push
or
xchg
xchg
(bad)
gs
test
and
jo
(bad)
cmp
mov
cmp
dec
pop
lahf
jge
iret
jbe
dec
gs
in
clc
push
sub
inc
jno
or
mov
sbb
hlt
pop
mov
lahf
xchg
sahf
pop
dec
push
xchg
jge
pop
nop
push
push
xchg
jmp
shr
mov
add
hlt
push
outs
int3
rol
mov
or
aas
aad
stc
pop
repz
adc
mov
int
pop
cmp
xchg
mov
stc
ret
out
xchg
mov
mov
mov
out
adc
xchg
fwait
push
jmp
imul
pop
enter
movs
clc
dec
ret
test
sbb
loopne
(bad)
pushf
dec
dec
add
les
add
push
cdq
out
jmp
cmps
xor
xchg
pop
inc
jge
imul
movs
add
div
sbb
cdq
jne
mov
rol
ins
and
aas
rol
stos
pop
add
jae
in
hlt
mov
mov
push
(bad)
(bad)
or
xor
pop
push
enter
push
bound
mov
xor
jle
push
and
ss
lock
cld
push
js
in
cli
mov
push
ret
pusha
daa
pop
(bad)
aas
fbstp
aad
pop
cmps
jne
xchg
jmp
push
xor
jg
mul
in
out
sub
scas
cmp
jno
push
out
repz
add
jl
adc
add
sbb
sub
sar
inc
cmp
sbb
das
xchg
push
mov
add
ins
aaa
fcmove
ror
jns
jae
cmp
mov
aas
push
retf
cmp
mov
jbe
repnz
(bad)
hlt
or
scas
fsubr
pushf
sub
movs
mov
daa
fwait
xchg
rcr
icebp
push
pop
mov
cli
dec
jp
out
or
sahf
xchg
or
jmp
and
jns
sub
mov
fild
push
xchg
stc
enter
into
lds
xlat
add
repnz
popa
and
call
cmp
loope
cmp
call
in
pusha
ret
das
xchg
pop
adc
fstp
in
and
or
and
ja
pop
pop
and
pop
jb
mov
add
and
sub
imul
push
rcl
lods
call
pop
(bad)
fsub
jmp
enter
adc
sub
xchg
lods
ss
dec
neg
cli
inc
pop
hlt
lea
les
xchg
jecxz
pop
cdq
mov
loopne
push
jg
mov
in
js
or
cmps
retf
push
sub
or
dec
pop
mov
or
jle
mov
pusha
fisubr
cmc
mov
iret
lock
cmp
inc
or
inc
or
cmp
pop
sar
pop
inc
xchg
adc
stos
jge
mov
sbb
lods
mov
mov
aas
add
or
mul
jg
fadd
mov
leave
jae
pop
sahf
call
push
pusha
push
xchg
pop
push
inc
inc
lock
pop
pop
adc
shl
stc
add
outs
leave
or
cs
(bad)
ror
push
push
pop
rcl
inc
xchg
sbb
imul
gs
mov
cmp
mov
inc
(bad)
shl
call
aam
aad
jge
pop
xchg
int3
dec
dec
sub
sub
xor
enter
dec
pop
sub
cmp
call
and
lds
imul
js
inc
sub
fwait
inc
push
pop
xchg
add
aad
fcomp
ret
jbe
push
mov
adc
or
adc
call
mov
adc
mov
sub
mov
pop
test
ins
mov
jne
rcr
pop
retf
cmp
inc
jae
inc
xor
mov
test
daa
fsubr
pusha
rol
lock
add
jne
pop
(bad)
out
hlt
dec
xchg
and
inc
lods
fmul
sub
pop
call
sbb
xchg
cmp
rol
(bad)
jne
lea
sub
push
xchg
sub
shl
(bad)
mov
mov
shl
mov
shl
cdq
mov
sub
test
mov
mul
mov
cmp
dec
pop
or
lds
stc
dec
test
cmp
sahf
arpl
sbb
pop
dec
mov
cli
mov
or
dec
imul
das
test
sbb
ins
rcr
push
ret
sub
mov
dec
sahf
pusha
xchg
retf
(bad)
xor
in
in
repz
mov
popf
bound
lods
aaa
popa
into
mov
and
ret
fcmove
aam
out
imul
(bad)
ja
mov
lds
pop
out
mov
out
or
inc
pop
cmps
out
out
push
pop
sti
adc
imul
ja
jg
jns
test
clc
popf
mov
sbb
jmp
sbb
xchg
fwait
(bad)
scas
dec
push
inc
shl
jnp
fwait
js
into
ror
leave
add
push
lds
jae
mov
shl
cmp
daa
shl
or
rcl
cwde
inc
ss
sub
pop
jmp
inc
add
sub
xor
imul
cmp
mov
sub
jb
dec
adc
dec
sub
or
and
in
in
test
imul
retf
lods
outs
jo
xchg
ret
cmps
adc
int3
test
adc
and
ret
jno
sbb
stos
js
xchg
pop
arpl
sar
add
or
test
xchg
sbb
stos
add
div
lods
fs
add
cmc
jbe
mov
add
adc
(bad)
mov
sub
push
dec
movs
imul
cmp
ins
and
push
jl
cmps
mov
mov
sbb
outs
or
fild
xchg
mov
(bad)
xchg
stos
cs
mov
jg
add
fcom
mov
inc
xchg
adc
and
and
aad
jb
and
scas
inc
fdivrp
rol
push
ret
mov
and
pop
cmp
and
xchg
fs
(bad)
jb
adc
je
inc
cld
mov
arpl
or
test
in
cmc
sbb
mov
pop
cld
cld
xchg
jmp
call
cmp
cmps
loop
imul
aad
mov
cmp
xchg
aam
xlat
dec
and
inc
jl
jo
ins
loop
and
inc
aam
(bad)
xlat
je
push
out
mov
(bad)
outs
retf
nop
out
imul
push
mov
xchg
or
test
pusha
jbe
(bad)
retf
sub
xor
and
mov
out
inc
lock
cdq
in
xchg
cdq
sbb
test
mov
mov
jl
push
int
add
push
cld
fnstenv
adc
aas
pop
mov
lods
sub
push
push
pop
add
lahf
xchg
imul
pop
or
outs
and
inc
adc
and
sbb
sahf
pop
mov
or
or
xor
ficom
ins
jnp
inc
mov
retf
dec
jecxz
mov
sahf
popf
xor
sahf
or
inc
pushf
hlt
fcomp
cmp
pop
sysenter
lds
sub
fldcw
jmp
lods
movaps
jmp
in
inc
dec
imul
loopne
loope
pop
ret
cmp
push
cmp
sub
imul
jae
shl
xchg
or
lea
push
arpl
cmp
hlt
sub
add
clc
iret
pusha
loop
shr
jecxz
call
les
daa
and
pop
xor
inc
jecxz
mov
xchg
add
lods
fild
outs
push
push
or
into
in
and
push
add
adc
out
ret
scas
repz
add
fwait
sbb
jmp
pusha
mov
lds
popa
(bad)
movs
push
dec
repz
das
inc
pusha
add
and
push
mov
mov
mov
icebp
das
fldenv
movs
sbb
inc
push
ss
in
push
mov
and
pop
pop
lock
add
aaa
push
mov
pusha
jns
mov
jno
mov
mov
retf
bound
and
aas
xchg
lds
adc
fs
stos
pushf
xlat
outs
lahf
and
cmp
lahf
js
int3
push
cmp
ins
mov
push
push
mov
fld
fild
mov
call
inc
jp
lea
imul
or
ret
out
and
cwde
leave
jg
push
cld
in
sbb
loope
prefetch
out
xchg
xchg
sar
inc
sbb
xchg
pop
jg
inc
add
movs
ja
xchg
push
add
loop
xchg
(bad)
or
cmp
xchg
inc
push
mov
mov
or
in
(bad)
push
mov
xchg
and
stos
lahf
adc
jb
cmc
jmp
pop
fwait
nop
push
aas
adc
mov
mov
xchg
xor
add
icebp
and
push
dec
stos
outs
xchg
xchg
xchg
push
(bad)
rcr
(bad)
popa
hlt
sar
sahf
hlt
mov
scas
jge
pop
dec
pop
clc
xchg
push
jb
in
push
inc
xor
adc
adc
fiadd
mov
adc
inc
mov
loop
cmp
pushf
cdq
inc
mov
out
ins
mov
loop
sbb
out
js
jmp
or
pop
xchg
mov
and
sub
push
sbb
shl
xchg
dec
retf
into
cs
or
imul
or
out
bound
jg
xchg
out
movs
inc
ins
push
or
imul
call
outs
pop
in
push
pop
jg
lock
pop
lahf
call
data16
popa
pop
xchg
(bad)
sub
int3
sbb
addr16
jno
add
jae
ins
sbb
ds
pop
int3
sub
test
(bad)
jmp
dec
retf
pop
xor
jmp
push
fdiv
dec
mov
jne
loopne
dec
fnstsw
add
cdq
ret
cmp
push
jmp
pop
mov
and
idiv
jnp
out
mov
dec
sub
das
push
jns
iret
repz
push
lahf
jp
push
loop
mov
inc
inc
ret
fdivr
cmps
lods
pop
cmc
push
pop
(bad)
rol
jecxz
pop
test
xchg
rol
into
cmps
adc
data16
dec
xor
xor
shl
daa
out
xchg
cwde
add
jbe
push
inc
dec
data16
jp
sbb
or
loopne
push
fstp
mov
xor
mov
(bad)
xlat
inc
and
mov
sub
lods
dec
lds
dec
in
or
gs
push
retf
jno
pop
sub
cmp
ins
and
adc
loop
js
mov
icebp
xor
icebp
clc
dec
mov
sub
dec
stc
or
sub
out
leave
sub
dec
sub
jp
mov
pushf
jle
sahf
adc
int
loop
fimul
(bad)
cmps
fisttp
jmp
mov
in
mov
mov
xor
push
mov
push
mov
loop
and
jo
dec
mov
adc
pop
bound
jmp
pop
mov
mov
push
outs
stos
(bad)
xlat
(bad)
push
ror
or
scas
mov
std
dec
popa
cmp
aaa
push
cli
or
and
sbb
xchg
sbb
scas
rcr
dec
or
(bad)
jge
sub
(bad)
sub
xchg
add
mov
xchg
call
mov
or
jl
cld
nop
lods
push
ins
fwait
sub
jb
pusha
ins
push
mov
aas
aaa
and
pop
pop
mov
dec
ret
inc
push
pop
int3
adc
or
mov
dec
lock
std
(bad)
fstp
scas
push
mov
pop
ja
jp
fild
sbb
push
push
cmp
jnp
or
pop
stos
dec
fwait
mov
mov
xchg
rcl
fldcw
in
shr
mov
push
xchg
stc
xor
lods
xor
je
pusha
push
or
xlat
icebp
add
pusha
push
or
mov
sub
push
out
cmp
pop
mov
dec
shl
mov
outs
xor
test
push
jmp
inc
mov
xor
xchg
(bad)
imul
imul
sbb
pop
mov
out
addr16
jne
add
out
add
and
adc
adc
inc
lds
and
inc
cdq
mov
xor
sbb
test
into
sbb
scas
sub
sbb
fwait
out
add
pop
sub
dec
jmp
dec
or
arpl
or
aam
jno
gs
stos
cmp
test
sbb
xor
adc
cli
icebp
fidivr
test
mov
add
leave
or
sbb
mov
loope
sub
mov
sub
sahf
clc
sbb
xlat
mov
push
mov
ret
jne
fisub
mov
mov
sbb
adc
es
aaa
ret
mov
sbb
xor
mov
stos
(bad)
retf
jp
std
lods
loop
fisubr
mov
jno
adc
or
mov
xchg
mov
cli
xchg
bound
or
push
dec
xor
add
rcr
xchg
aad
loope
adc
loopne
ds
xor
dec
add
xchg
loopne
jbe
outs
push
test
cmp
jns
add
xor
je
inc
in
push
js
push
outs
outs
xor
push
pop
push
fmul
and
(bad)
mov
inc
out
clc
daa
pop
adc
cmp
inc
mov
arpl
xchg
inc
aad
push
stc
and
and
push
lods
mov
lods
enter
fnstcw
(bad)
rcl
je
mov
push
scas
xor
push
retf
dec
int
dec
add
mov
ja
enter
ror
jmp
push
(bad)
das
loopne
adc
sub
std
or
push
push
dec
dec
mov
retf
clc
adc
daa
sub
pop
movs
cmp
ret
pop
test
dec
scas
and
outs
daa
nop
fild
mov
mov
cwde
inc
aas
add
stc
imul
lds
in
adc
cmp
push
in
in
pop
adc
inc
mov
mov
mov
pop
mov
or
enter
es
addr16
pop
jmp
xchg
inc
clc
and
mov
add
lods
or
lods
aad
jno
call
dec
loope
adc
cdq
lds
aaa
mov
push
neg
adc
dec
les
pop
adc
add
inc
imul
test
jb
dec
adc
jbe
mov
add
dec
ret
mov
sti
test
sbb
mov
mov
imul
adc
and
shl
je
(bad)
je
sub
jbe
aad
dec
xchg
inc
scas
cmp
fsub
es
xchg
add
cs
dec
cmp
imul
xchg
enter
adc
movs
fnstsw
xor
and
fwait
inc
jbe
retf
test
sbb
or
sbb
jnp
fisubr
push
add
pusha
sub
sub
jge
idiv
inc
test
xchg
add
mov
loope
and
popa
add
test
mov
mov
dec
fstp
mov
cmps
aad
mov
xchg
out
popa
jo
test
sub
movs
inc
stos
cmc
sub
sbb
imul
jmp
ret
imul
dec
imul
xor
fsub
pop
xor
mov
jne
push
adc
dec
in
shl
push
lds
cmovno
jp
ins
cmp
cmp
jne
sub
or
pop
adc
or
pop
clc
std
push
mov
inc
pop
aad
xchg
cmp
imul
inc
mov
push
ror
push
add
sbb
fwait
rol
or
sub
xchg
aam
and
adc
jge
mov
pop
pop
xor
and
fild
sbb
jbe
call
stos
xchg
daa
rcl
(bad)
pop
adc
mov
jo
arpl
pop
lods
mov
push
xor
cwde
mov
xchg
scas
jne
mov
mov
pop
mov
or
loope
xchg
fcmovne
into
(bad)
xor
sti
pop
test
push
retf
inc
cmp
das
pop
cmc
sub
movs
cli
ins
out
int3
jl
jp
jb
mov
or
xchg
into
retf
(bad)
push
in
into
nop
and
add
push
pusha
push
(bad)
mov
adc
shr
xor
stos
or
outs
push
lods
xchg
mov
sahf
xchg
sahf
pusha
xchg
jl
inc
xor
or
mov
sub
pop
pop
add
dec
fcmovnu
xchg
cmp
push
out
cmp
xchg
mov
fnstsw
dec
es
sbb
bound
jb
mov
and
push
shl
xchg
(bad)
pop
jl
and
dec
(bad)
mov
xchg
sbb
pop
fadd
rcl
hlt
pushf
int
jo
mov
jb
xchg
or
xchg
div
js
xor
push
push
dec
sbb
outs
dec
loopne
cmps
sahf
movs
enter
add
mov
xchg
dec
cmp
adc
int
adc
das
stos
daa
cmp
or
repnz
pop
xchg
ret
mov
or
jne
dec
js
push
xchg
pop
movs
in
adc
sub
pop
les
imul
mov
push
xchg
sbb
outs
(bad)
fdiv
lock
inc
mov
arpl
fnstcw
push
push
popf
stc
test
imul
add
pop
sbb
pop
sub
mov
rcl
or
or
mul
cmps
ret
rcl
movs
and
xor
mov
mov
cmp
mov
stc
jae
pop
cmp
sub
sub
push
or
mov
cmp
pop
mov
aam
or
loope
mov
pusha
les
loope
xor
mov
or
or
gs
adc
jp
pusha
ror
pop
sub
cmp
pushf
pop
mov
xchg
js
xchg
xchg
ret
cmps
lock
jbe
ret
test
imul
jg
mov
jo
sahf
mov
data16
ins
div
lods
jbe
pop
mov
test
mov
dec
std
popf
pop
adc
mov
dec
mov
inc
nop
fldenv
mov
bound
sti
mov
ins
xor
imul
(bad)
jo
outs
adc
push
addr16
push
pop
rcl
add
mov
mov
and
mov
xlat
jmp
(bad)
int
xor
loopne
cmp
add
outs
push
add
icebp
sbb
pop
in
jb
mov
out
lahf
pop
outs
inc
cmp
mov
mov
je
in
mov
mov
mov
sub
jg
aam
(bad)
call
hlt
jmp
outs
xchg
das
rcr
or
jbe
or
test
aam
fld
mov
(bad)
pop
jl
jae
and
pop
mov
sub
imul
inc
mov
mov
dec
test
pop
retf
inc
(bad)
fistp
(bad)
mov
sbb
(bad)
or
std
dec
push
or
scas
cmp
loopne
lock
(bad)
adc
jecxz
and
fstp
stos
call
call
int3
retf
or
arpl
dec
xor
(bad)
jbe
mov
xchg
jo
repz
sahf
add
repz
inc
inc
leave
xchg
stos
adc
inc
fcmovnu
xchg
repnz
repz
sbb
jo
dec
jnp
leave
adc
daa
cmps
cmps
fld
pop
and
into
shl
xchg
push
les
mov
mov
inc
jb
cmp
lea
push
inc
push
je
or
fdivp
mov
mov
mov
mov
sbb
in
test
mov
popf
fnstenv
fild
test
rcr
xlat
add
aad
cs
aas
xchg
int3
lods
jl
xchg
sbb
ss
pop
test
cmp
mov
iret
sub
loop
sub
jne
or
xchg
sub
pop
jo
jmp
jp
add
rol
xor
out
sub
loope
xlat
and
shr
jge
sub
mov
xor
mov
fcomp
push
aam
sete
test
test
pop
mov
mov
mov
int3
push
dec
sub
repnz
into
sub
aad
mov
jb
scas
(bad)
iret
jecxz
stc
jmp
and
das
cmp
xor
repz
fwait
xor
lea
add
shr
shl
jl
sub
repnz
aad
mov
es
push
std
mov
and
xchg
pop
pop
lods
mov
jmp
xchg
call
ins
sti
daa
xor
jns
ret
cmps
retf
cmps
clc
stos
(bad)
pushf
cmps
or
add
out
push
pop
pop
xor
jg
mov
sub
dec
push
inc
sar
push
push
fsub
jl
out
push
pop
inc
dec
in
mov
lds
mov
or
inc
popf
sbb
jo
popa
call
mov
cld
mov
jp
dec
or
xlat
lock
jbe
es
int
adc
and
mov
daa
add
jb
jecxz
mov
fmul
je
adc
sub
mov
lods
(bad)
mov
push
out
xchg
out
std
repnz
cmp
les
xchg
mov
mov
mov
push
or
scas
popa
adc
ins
push
mov
jmp
or
jmp
mov
or
mov
push
xchg
xchg
push
jp
mov
add
jns
imul
push
pop
cdq
and
rcr
(bad)
cmps
(bad)
stc
or
jle
ret
jecxz
mov
xor
mov
push
das
adc
(bad)
mov
ret
cmp
adc
leave
or
adc
ss
aam
out
bound
mov
mov
ins
mov
ja
lods
jmp
test
jmp
es
data16
dec
aaa
mov
test
mov
rol
cmp
push
add
fst
sub
call
xor
daa
cmc
push
jmp
sti
scas
or
nop
cmp
mov
out
dec
fs
push
stos
mov
ror
xchg
icebp
movs
pop
icebp
pop
push
mov
add
adc
dec
pop
rcl
shr
mov
arpl
fiadd
jno
cmp
popf
shl
stos
movs
mov
jp
cmc
repnz
scas
arpl
mov
arpl
add
aas
xor
aaa
add
scas
ror
adc
cmp
lea
pop
aaa
aad
rcl
stos
movs
int
ds
mov
mov
adc
sbb
jbe
sbb
sbb
xlat
cmp
loop
mov
adc
mov
mov
cld
sub
js
jnp
lods
dec
lds
mov
jae
ja
xchg
mov
push
out
adc
mov
and
leave
ss
and
imul
jne
ret
scas
stc
mov
js
xchg
and
test
fistp
int3
cmp
push
or
mov
mov
xor
xchg
mov
fsub
(bad)
xchg
jle
mov
inc
mov
mov
jge
pop
sti
jmp
or
fwait
and
cmp
xchg
rcr
push
test
fisttp
sbb
repz
fbstp
sub
add
mov
fcomp
sbb
aas
ins
mov
es
xchg
adc
and
add
adc
push
inc
push
test
dec
mov
add
out
cdq
movs
add
fcom
mov
aaa
fsubr
sbb
push
setl
jne
into
jns
cmc
daa
mov
leave
jb
pop
sub
adc
cwde
ret
inc
sbb
sbb
loop
push
loopne
mov
jle
mul
das
push
int
fbld
jle
xor
aad
xor
sbb
test
mov
jae
or
xchg
add
out
scas
add
pop
pop
cmc
pop
push
into
xchg
sub
xchg
xchg
xor
jns
mov
loop
daa
cld
test
mov
cmp
and
add
add
sbb
add
fcom
arpl
adc
cmp
jb
idiv
mul
xchg
inc
pop
mov
jbe
push
adc
into
aas
and
sbb
pushf
fnstcw
loope
popa
mov
pop
cwde
dec
add
adc
retf
out
(bad)
push
jg
retf
pop
pop
mov
inc
test
sub
dec
jge
mov
(bad)
cld
retf
int3
or
dec
push
jmp
xchg
xor
mov
mov
pop
push
push
xor
jg
into
retf
push
jge
ret
add
stos
lahf
sub
jb
adc
pushf
cmp
or
or
rcr
ja
xchg
cmp
mov
lods
cmps
fisub
or
out
pushf
jae
popa
gs
stos
aad
ret
repz
fs
sti
aam
adc
test
adc
dec
cmp
jnp
rol
mov
xor
test
clc
test
cmc
out
inc
or
push
div
dec
push
xchg
push
mov
jbe
sbb
xor
(bad)
xchg
fucomi
mov
jmp
cs
pop
mov
sub
add
jae
or
(bad)
pop
repz
popa
dec
mov
xchg
je
mov
sti
mov
out
jmp
cmp
jl
rcl
push
pusha
aas
sub
outs
push
scas
pop
add
gs
fwait
sub
stos
pop
mov
out
inc
shl
and
dec
xchg
lods
pop
inc
mov
mov
lahf
and
retf
adc
mov
jbe
(bad)
xchg
in
stc
pop
fidivr
outs
or
mov
lods
pop
cwde
les
jns
adc
fldl2e
adc
jae
mov
imul
jns
sub
xor
push
(bad)
in
js
mov
loope
pop
mov
push
cmc
xor
cmps
cmp
cmps
test
mov
dec
ror
sbb
xor
push
es
fldenv
pop
ret
pop
stc
and
inc
fidivr
add
pop
pusha
adc
xchg
leave
out
xchg
int
arpl
test
xchg
mov
pop
lds
popf
out
mov
sahf
shl
mov
add
iret
cmp
and
loopne
inc
cmps
jno
(bad)
fmulp
ss
adc
adc
shl
cmps
or
jle
jle
cli
pop
popa
lods
fmul
dec
fdiv
push
(bad)
inc
jbe
xor
add
cmp
adc
call
sbb
ret
push
in
mov
or
jmp
pop
mul
sbb
es
or
xor
add
xchg
xchg
es
(bad)
jle
sub
xchg
std
jns
rol
mov
cmp
xchg
clc
mov
and
inc
pop
aad
movs
cmp
sub
lds
lock
mov
shl
cmc
adc
mov
mov
mov
push
scas
or
xor
inc
fidivr
call
imul
ret
mov
ror
scas
add
adc
outs
in
sbb
(bad)
pushf
sbb
repnz
cli
xchg
outs
xchg
mov
dec
test
popf
add
call
mov
push
cli
cmp
repz
xchg
pop
test
sbb
sbb
(bad)
loopne
fsub
mov
sbb
dec
ja
pop
adc
xchg
mov
scas
out
sub
push
xchg
xchg
push
xor
xchg
es
shr
xchg
sbb
std
xor
inc
jb
sub
adc
cmp
call
xchg
push
out
mov
jmp
fcmovnu
and
push
in
arpl
neg
sbb
jge
popf
jl
gs
out
mov
inc
mov
ins
dec
enter
inc
xchg
(bad)
mov
dec
adc
out
retf
or
retf
fs
pushf
pop
jbe
outs
push
push
and
mov
stos
push
dec
cmps
dec
jo
adc
inc
pop
jle
scas
xchg
mov
pop
les
std
fwait
adc
push
scas
bound
dec
lock
cwde
xor
in
add
test
iret
pop
gs
jae
fnstsw
stc
fild
aaa
jb
pop
sub
ror
shr
mov
or
adc
pop
ret
inc
lods
mov
jg
xlat
outs
xchg
sbb
test
ret
jb
enter
xchg
in
sar
ss
ss
inc
call
jnp
mov
je
ja
(bad)
fwait
inc
adc
lds
stc
jl
lea
leave
inc
sub
xlat
dec
mov
(bad)
jg
out
repz
mov
bound
push
push
mov
retf
dec
xchg
or
leave
in
add
add
aam
mov
push
jae
js
cmps
pop
mov
imul
sub
xor
popa
test
dec
pusha
xlat
rcl
popa
adc
fist
nop
icebp
cs
bound
push
in
jmp
sar
stos
idiv
leave
stc
jge
dec
cmp
retf
sbb
add
call
(bad)
clc
sub
idiv
cmc
mov
sub
loop
pop
sub
xchg
inc
adc
loope
mov
in
mov
pop
mov
mov
adc
(bad)
loopne
retf
inc
push
adc
xor
inc
sahf
(bad)
add
xchg
fistp
loop
mov
mov
repnz
outs
jl
mov
mov
push
call
mov
add
mov
xchg
mov
leave
imul
xchg
xor
aad
jnp
mov
das
jp
retf
popa
mov
or
adc
retf
cmp
adc
cmps
jo
nop
scas
dec
push
sbb
out
ja
xchg
cmp
push
in
dec
add
add
pushf
ds
call
popf
cli
xor
adc
aaa
mov
cmp
sbb
pop
jle
fcom
adc
jge
dec
jmp
scas
(bad)
or
jnp
mov
or
push
push
stos
test
outs
mov
pusha
push
cmps
mov
xchg
pop
mov
or
dec
cmps
push
mul
push
dec
push
mov
sar
mov
mov
push
mov
push
dec
dec
push
adc
pop
sti
lock
enter
fsubr
push
iret
out
adc
sub
call
jno
out
retf
pop
and
test
xor
mov
push
call
aam
lea
hlt
dec
pop
xor
xor
das
arpl
test
popa
gs
inc
repnz
or
push
adc
jg
popa
pushf
stos
cld
rol
fs
push
scas
iret
retf
fcmovbe
sbb
dec
scas
pop
pop
out
xor
jno
and
cmp
popa
pop
xor
mov
push
add
mov
inc
ja
mov
cdq
ret
xchg
pop
mov
mov
and
inc
cmps
mov
sti
test
dec
sbb
aam
push
mov
(bad)
cmp
mov
fcomp
out
fucomip
sbb
jecxz
jecxz
xchg
fs
in
or
adc
pop
aas
lock
mov
add
minps
sbb
xchg
xchg
dec
mov
jae
push
in
add
ret
mov
cmp
stc
mov
fs
sub
nop
aaa
(bad)
xor
mov
outs
outs
jae
sbb
retf
sub
jno
xor
repnz
das
sahf
push
out
push
fimul
xchg
adc
neg
in
xor
cs
push
pop
xor
es
in
sbb
into
sbb
mov
dec
cmps
cmp
xchg
fnstsw
retf
sub
mov
lds
inc
enter
mov
fcomp
cld
sub
rol
pop
mov
vunpcklps
shl
movs
mov
jmp
push
and
pop
push
shr
lahf
and
ds
repz
add
pop
and
mov
dec
jmp
aam
cmp
popf
adc
mov
es
or
jb
inc
dec
jp
or
ss
mov
and
neg
mov
or
jno
mov
dec
imul
aam
out
into
rcl
and
mov
xor
jbe
or
jl
ss
adc
mov
movzx
cmp
mov
(bad)
dec
jo
sub
push
(bad)
out
inc
cmps
sbb
jecxz
inc
aad
pop
and
retf
test
and
lea
mov
(bad)
push
ins
enter
dec
mov
jg
inc
fsubr
xchg
ja
jecxz
adc
ret
scas
fisubr
xlat
repnz
clc
sub
jle
xor
in
pop
stc
repz
js
push
push
inc
cmp
enter
xor
fisubr
xor
sbb
scas
ror
nop
call
mov
imul
push
sbb
(bad)
xchg
xlat
or
shr
jno
mov
out
out
push
repz
test
pop
lods
push
out
or
imul
je
xchg
paddsb
(bad)
(bad)
mov
js
clc
movs
push
in
mov
(bad)
ja
xchg
fsubrp
(bad)
movs
and
dec
jo
push
out
int
pushf
movs
in
rol
pop
pop
mov
adc
sbb
mov
inc
cmc
sbb
adc
pushf
dec
es
sub
xlat
jecxz
add
jb
stos
add
xchg
xchg
pop
ror
sar
daa
xor
mov
jmp
push
in
out
data16
jo
jmp
sub
lea
push
fsub
shr
cmps
add
and
(bad)
xchg
int3
pop
sub
dec
stos
or
sbb
xor
sar
mov
aas
aaa
rol
inc
cwde
sbb
out
fst
test
mov
lods
jp
push
mov
out
push
pop
fisttp
test
ja
scas
xlat
mov
mov
cmc
and
dec
jmp
sar
jecxz
aas
out
jo
xchg
adc
daa
pop
shl
jmp
dec
mov
jno
push
call
cli
jecxz
hlt
shl
jle
jle
push
iret
enter
test
adc
inc
jg
addr16
sbb
jge
or
adc
push
jbe
mov
call
cmps
mov
pushf
(bad)
ficomp
cld
dec
es
add
cmp
gs
sub
outs
xchg
cli
dec
push
pop
xor
add
and
inc
cli
das
mov
xlat
inc
repnz
mov
mov
xor
dec
cmp
or
pop
imul
jmp
cmps
sahf
xor
or
fnsave
mov
sbb
add
inc
cmp
jbe
xlat
pop
jnp
push
jo
push
ret
xor
pop
inc
mov
repz
adc
call
popa
fbld
pop
fdiv
cdq
outs
in
mov
push
inc
scas
mov
jmp
sub
inc
mov
icebp
addr16
idiv
lahf
adc
call
cmp
adc
push
jg
push
idiv
aad
icebp
adc
into
bound
imul
fsub
pop
mov
inc
stc
ror
movs
mov
mov
xchg
clc
into
xor
loope
adc
popa
xor
or
ret
pop
call
push
mov
jne
popf
xor
fisttp
jecxz
(bad)
jp
adc
or
test
sbb
inc
lods
sahf
iret
sahf
mov
jno
or
in
test
mov
inc
lea
add
xchg
dec
mov
or
or
sbb
jecxz
mov
jne
out
inc
fsub
rcr
lds
out
cwde
push
div
add
dec
rcr
js
repz
cdq
xor
dec
sub
mov
mov
int3
out
enter
das
xchg
adc
dec
or
sbb
dec
fbstp
test
xor
sahf
pop
pop
mov
cmps
icebp
sbb
clc
das
pop
fidiv
mov
xchg
and
mov
clc
or
jb
imul
push
inc
and
icebp
jge
test
loope
retf
xor
jg
mov
xor
push
cld
fmul
scas
in
aas
inc
and
push
call
aad
pusha
mov
or
and
ins
mov
not
inc
arpl
sbb
sbb
int
aaa
sub
sbb
(bad)
gs
adc
stos
xchg
cs
sub
call
sub
mov
add
lock
push
mov
xlat
or
outs
xchg
cmp
dec
faddp
(bad)
fstp
sub
sub
mov
or
ja
enter
push
popa
mov
daa
pop
dec
mov
fisub
cmp
jle
hlt
jb
cmp
push
mov
cmp
add
fadd
dec
dec
dec
inc
fmul
xchg
push
js
xchg
cs
ret
jg
push
pop
jecxz
xchg
in
add
push
aam
or
sbb
call
sbb
mov
lods
mov
sub
fsubr
cli
xlat
popa
xor
add
dec
inc
adc
sbb
mov
dec
jmp
dec
jge
add
nop
out
lock
icebp
adc
sbb
xlat
pop
push
mov
xchg
jp
into
pop
inc
int
jge
mov
mov
and
sbb
push
jmp
aaa
push
(bad)
push
lahf
adc
mov
mov
or
xor
add
adc
xchg
push
and
mov
pop
mov
push
lds
arpl
mov
mov
cmc
inc
mov
fist
add
mov
dec
test
stc
leave
mov
mov
cdq
mov
add
movs
out
mov
es
cmp
(bad)
ja
mov
or
jnp
cwde
data16
xor
inc
pop
xchg
pop
lods
jno
inc
je
or
sbb
dec
pusha
repz
sahf
inc
add
xchg
xchg
mov
cmps
aam
popa
inc
jp
pop
add
pop
dec
cmc
lahf
imul
in
or
js
jnp
lahf
push
cmc
(bad)
xchg
pop
jge
add
push
cmp
fabs
in
or
nop
and
arpl
hlt
xchg
pop
fxam
fstp
and
pop
adc
mov
push
inc
jge
jmp
push
add
add
inc
dec
pop
jp
call
sahf
sub
sar
in
xchg
cmp
push
dec
sbb
cmp
(bad)
out
add
loopne
adc
push
xlat
les
rol
std
int3
xor
or
popa
rol
mov
mov
cli
pop
adc
std
cmp
loopne
(bad)
fwait
(bad)
xchg
xor
pop
enter
clc
jl
mov
data16
fnstcw
push
cld
mov
mov
and
int
and
and
dec
and
not
in
pop
nop
ds
mov
xor
mov
mov
pop
dec
add
pop
jne
pusha
rol
inc
adc
ds
iret
mov
dec
cmp
dec
dec
movs
jns
movs
(bad)
sub
repz
pop
adc
dec
mov
jle
ja
imul
cld
inc
mov
sub
test
jno
retf
aam
lods
loope
jb
sbb
xchg
cmps
ja
pop
cmp
cli
mov
mov
aas
fcom
mov
jge
ins
sar
and
jmp
sub
dec
out
clc
mov
jo
stos
test
add
push
mov
cmps
inc
push
dec
fiadd
mov
add
push
add
in
xor
pop
mov
jno
or
pop
jbe
ins
repnz
or
gs
stos
pop
or
and
cld
or
jno
or
mov
cli
mov
mov
ins
mov
xor
push
test
(bad)
js
sbb
jle
cli
adc
push
les
pop
push
sbb
popf
cmp
jo
fild
sbb
stos
sbb
cdq
enter
and
adc
xor
push
outs
pop
les
cld
mov
out
pop
adc
sbb
das
call
xor
mov
(bad)
popf
repz
mov
dec
adc
sbb
pop
test
cs
test
lods
jb
loopne
push
inc
hlt
pop
cmp
xor
pop
pop
and
xor
popf
xchg
jecxz
sbb
shl
add
xor
ds
loopne
(bad)
cli
fst
out
pop
retf
add
mov
mov
loope
scas
add
adc
cmps
call
enter
js
arpl
xchg
les
stos
cmc
lock
jmp
(bad)
frstor
jp
xchg
(bad)
scas
mov
daa
lea
lds
sbb
push
fdivr
or
push
mov
push
and
mov
cwde
sub
dec
jbe
loop
xchg
add
rol
mov
inc
sub
pusha
pop
ins
(bad)
mov
addr16
movs
mov
mov
scas
sbb
fmul
pushf
cdq
inc
inc
cmp
sub
fidivr
dec
movs
mov
mov
inc
pop
xor
push
fsub
clc
add
outs
and
test
ins
out
cli
push
jl
mov
inc
lea
mov
inc
sti
sub
mov
and
rcr
cmps
outs
jl
sub
push
adc
adc
jl
pop
into
pop
jno
ret
loope
js
xchg
loop
in
mov
mov
xchg
mov
mov
adc
cmp
jbe
push
shl
js
mov
mov
nop
inc
jecxz
and
pavgw
jecxz
popa
in
pop
pusha
dec
sbb
fild
outs
ret
clc
push
ins
jmp
ins
leave
push
xor
cmp
call
mov
lods
retf
ins
loope
adc
sbb
fwait
unpckhps
loopne
inc
(bad)
sub
call
cmp
push
sti
xchg
ss
jmp
sub
dec
imul
jno
xor
mov
cdq
jle
mov
call
les
mov
fwait
xchg
inc
cmp
pop
inc
idiv
test
cs
out
jge
mov
in
sbb
stc
xchg
and
pop
push
push
jle
mov
test
push
xor
jecxz
(bad)
lods
and
sub
cmp
mov
and
int3
cli
xchg
lods
pop
or
jno
and
loope
mov
jne
pop
sti
jle
xchg
adc
mov
into
popf
push
xchg
mov
and
sbb
mov
xchg
jo
sub
lods
or
popa
or
cmp
push
ret
fisubr
sbb
loopne
and
push
mov
lea
pop
cmp
xor
outs
add
or
inc
sub
adc
cmp
pop
fstp
pusha
(bad)
loop
int3
or
pop
adc
add
outs
aam
add
and
ins
(bad)
xor
add
jbe
out
ins
shl
sub
inc
xchg
mov
and
jmp
mov
push
lock
inc
inc
into
ss
scas
cmp
add
imul
outs
retf
repz
ins
mov
xchg
mov
arpl
or
call
ret
pop
and
mov
jae
jp
cmp
mov
dec
scas
dec
dec
leave
adc
je
xchg
out
mov
cmp
xor
and
aaa
mov
jo
mov
fsubp
and
lods
or
or
icebp
arpl
shr
push
ss
dec
or
xor
sti
hlt
mov
or
xor
arpl
les
push
push
mov
mov
push
in
repz
outs
ss
cmp
xchg
add
outs
pop
mov
mov
loopne
stos
pop
sub
cli
jg
arpl
pop
jbe
xchg
xor
sub
lea
sbb
fdivp
and
push
inc
fs
test
enter
aas
sbb
sub
arpl
cmp
outs
inc
mov
mov
mov
xor
scas
icebp
inc
addps
jnp
dec
shl
fnstsw
mov
or
cmp
jle
sub
push
dec
rcl
dec
add
aas
test
jge
cmc
sub
test
mov
cmp
cmp
mov
and
jmp
es
inc
and
mov
loop
clc
or
push
cmp
jmp
mov
mov
push
and
jl
std
enter
adc
push
(bad)
inc
jge
sub
mov
inc
sub
ins
div
fs
mov
call
xchg
xchg
in
mov
inc
cmps
sti
mov
xchg
stos
cmp
sub
ja
xor
rcl
adc
sub
aaa
mov
push
mov
jno
nop
aam
adc
jge
push
rcl
add
push
daa
pop
xchg
mov
cli
xchg
fs
pop
xor
jns
adc
(bad)
icebp
adc
movs
xchg
addr16
mov
jb
mov
enter
ret
pop
dec
mov
lods
movs
mov
test
and
jne
sbb
repnz
int3
out
dec
add
xor
lahf
adc
jle
mov
jbe
jno
mov
pop
cmp
jl
cmp
fcomip
xor
jl
push
in
dec
add
and
mov
jp
test
jge
mov
popf
fmul
sbb
movs
mov
lock
fist
jl
pop
sbb
xchg
cmp
inc
enter
add
push
sbb
push
sub
sbb
adc
xor
xchg
lock
cmp
enter
loop
js
into
pop
jecxz
outs
pop
pop
push
mov
imul
or
loope
pop
test
test
mov
add
cld
(bad)
xor
das
xor
xor
xchg
pop
scas
sub
fnstsw
adc
cli
mov
and
mov
adc
xor
jecxz
sub
push
nop
push
pop
retf
cmp
aaa
loope
cmp
and
jmp
or
ret
ret
sbb
adc
or
jmp
push
and
ss
lds
adc
(bad)
int3
mov
jecxz
mov
sub
ins
add
sbb
xchg
cmp
test
sub
or
pop
xchg
or
or
repnz
fidiv
pop
mov
frstor
sbb
xor
repz
leave
lea
dec
xchg
out
adc
cs
xor
jnp
inc
pop
push
mov
and
cmp
pop
adc
xchg
mov
xchg
scas
xchg
aaa
cmc
out
test
ret
mov
mov
shl
(bad)
lds
dec
adc
in
int3
sbb
mov
bound
push
in
loop
push
cli
fsubr
push
sahf
xchg
mov
and
imul
loop
mov
mov
jmp
int3
mov
int
push
cli
push
dec
(bad)
js
mov
shl
inc
mov
mov
cdq
xchg
mov
sub
cmp
into
cmc
ja
xchg
cmp
add
sbb
pop
or
icebp
cli
sbb
dec
dec
fidiv
lds
cmp
xchg
or
and
dec
neg
test
psllq
sub
xchg
enter
cmp
psubd
out
inc
cmps
mov
push
mov
sar
jp
(bad)
and
mov
dec
mov
call
jns
mov
aam
in
mov
or
mov
sub
cmp
mov
push
fwait
pop
pop
xchg
les
cmp
out
jp
nop
mov
pop
xchg
fs
int3
xchg
inc
push
push
xchg
dec
mov
rcr
and
xor
bound
jmp
(bad)
push
lahf
adc
xlat
xor
push
pop
jmp
push
ja
(bad)
stc
sub
fmul
lea
and
adc
cmp
jno
(bad)
pushf
fs
pusha
dec
mov
fidivr
xor
pop
pop
ja
rep
outs
lods
adc
ss
mov
dec
outs
inc
in
ins
int3
sbb
stc
add
adc
xchg
iretw
xor
cmc
scas
xor
movs
loopne
pop
dec
stos
mov
ret
popa
dec
cmps
bound
pusha
fwait
in
fs
(bad)
lods
push
add
adc
pop
fsub
(bad)
ins
xor
mov
jmp
pop
inc
xor
pop
sbb
sbb
or
adc
cs
icebp
loope
dec
iret
push
lahf
jne
mov
or
xchg
add
int3
cld
sub
(bad)
clc
aaa
push
jae
add
jnp
js
pop
inc
std
inc
rcr
ja
pop
sub
test
cmc
iret
pop
lods
shl
jecxz
jb
cmp
scas
sbb
test
idiv
cdq
std
hlt
push
or
data16
popf
aam
mov
(bad)
sub
in
dec
inc
and
ror
add
mov
stc
cld
cmc
movd
movs
sbb
lahf
jmp
xchg
sub
lea
jno
and
and
adc
mov
dec
and
mov
hlt
leave
pop
dec
fcmovnbe
add
adc
test
push
cmp
pop
in
clc
push
fs
stos
inc
xchg
scas
sbb
and
inc
outs
dec
inc
stos
les
bound
and
inc
or
cld
adc
cmp
repz
xchg
sub
out
aam
inc
adc
mov
jecxz
cmp
push
mov
ja
inc
jnp
jmp
mov
clc
cmps
je
popf
ss
(bad)
mov
test
leave
outs
mov
gs
mov
fsub
or
push
sahf
push
mov
push
dec
icebp
and
dec
adc
je
(bad)
jmp
pop
shl
jl
adc
dec
sbb
lahf
jmp
sub
inc
sub
js
cdq
sub
or
test
add
cmp
scas
sub
movs
push
stos
loop
fwait
enter
xor
xchg
jns
lock
cdq
ret
mov
aam
sbb
or
dec
or
bound
and
sbb
add
mov
cmps
ja
ja
adc
dec
test
out
mov
clc
cmp
adc
shl
ds
and
mov
imul
and
pusha
mov
les
aas
and
call
and
call
pushf
mov
retf
mov
sub
repz
aaa
inc
imul
cmp
jl
adc
(bad)
ds
mov
aas
xchg
dec
jg
or
mov
(bad)
jb
into
and
arpl
inc
ins
jmp
jg
xor
in
xor
cmc
add
mov
sbb
mov
push
push
or
sub
fisubr
xor
xchg
mov
in
cwde
ds
leave
(bad)
inc
push
cmp
jmp
adc
push
xchg
cs
(bad)
bound
fsubr
loop
xor
mov
and
mov
(bad)
mov
jge
fs
push
dec
add
and
daa
pop
adc
adc
(bad)
cmp
fs
outs
inc
(bad)
rol
pop
loopne
stos
sub
fcom
fadd
add
inc
setae
xor
mov
jne
and
outs
(bad)
mov
mov
retf
sbb
imul
jne
int
xchg
sbb
or
sbb
xor
lds
repz
gs
loop
out
outs
jae
(bad)
aas
fs
dec
push
cmp
call
add
leave
icebp
jnp
std
xor
and
inc
or
mov
xchg
ret
and
or
or
sbb
dec
jge
ret
loop
arpl
(bad)
clc
adc
push
sbb
mov
cdq
outs
repz
xchg
pop
xlat
jbe
hlt
movs
mov
fnclex
mov
aam
das
into
mov
mov
lods
cmc
sbb
test
sub
xchg
nop
jbe
sti
cmp
fisttp
adc
fisttp
add
addr16
ss
out
xchg
push
rcr
sub
imul
out
mov
rol
pop
push
lods
test
fsubr
pushf
out
xor
movs
cmp
gs
es
sbb
xor
sbb
test
sbb
sbb
jl
jmp
mov
rcr
xchg
aam
sbb
jge
push
cmps
cld
mov
test
test
les
popa
lock
sub
xor
and
push
cmp
pop
enter
arpl
and
cwde
cmp
push
pop
cmp
ins
xchg
push
sub
lods
adc
xchg
outs
lods
mov
rcr
mov
jmp
sbb
mov
and
movs
cmp
fcmovu
cmp
sub
stos
ja
mov
imul
outs
pop
sti
aaa
dec
xor
push
mov
sbb
sub
jae
jmp
in
xchg
je
jns
enter
retf
mov
cmp
jb
push
fstp
addr16
aas
inc
sbb
les
fdivr
push
jmp
sub
inc
call
pop
jmp
test
js
jl
mov
xchg
(bad)
jns
aas
(bad)
out
and
pop
div
inc
mov
ja
ins
push
not
in
and
fisubr
lods
outs
push
idiv
cmp
icebp
ja
lods
dec
aad
popf
push
jle
jne
out
nop
sbb
ds
push
hlt
sub
mov
loope
and
pop
cmp
jae
pop
icebp
loopne
xor
clc
mov
xchg
fisub
adc
pop
cmp
(bad)
stos
sar
mov
lock
idiv
fidivr
or
shl
push
sti
or
and
movs
and
lods
xor
jnp
mov
mov
sbb
mov
popf
les
movs
sub
movs
mov
adc
(bad)
sbb
push
js
mov
(bad)
mov
lahf
sub
call
ins
mov
xchg
cmp
sub
out
in
in
cmc
push
in
bound
inc
scas
pushf
lock
sbb
or
or
sar
in
sbb
stos
aas
cmps
dec
(bad)
mov
inc
popf
add
pop
in
sbb
inc
jl
jnp
jns
pop
and
cmp
inc
leave
mov
scas
test
pop
xchg
cmp
mov
ss
ins
cli
iret
cmp
cs
mov
in
push
fwait
push
sar
adc
mov
xor
mov
in
add
xchg
test
shl
popa
adc
push
adc
out
pop
push
push
das
dec
ret
imul
jmp
or
adc
inc
pushf
dec
pop
mov
cmp
xlat
push
test
test
jnp
ss
lods
arpl
neg
xchg
sbb
jo
fcomp
sbb
mov
scas
stos
jg
or
pop
(bad)
cld
bound
push
arpl
lods
dec
ficom
(bad)
push
push
sub
sub
jecxz
push
pop
pop
movs
loope
fld
mov
lds
and
aas
ret
sub
pushf
test
xchg
or
cld
push
jbe
adc
push
retf
dec
xchg
ds
push
enter
xchg
jmp
and
dec
sbb
iret
dec
out
push
test
ret
inc
add
fwait
retf
dec
mov
mov
lahf
pop
push
lods
fadd
add
push
dec
or
mov
push
and
lock
adc
sar
movs
ret
aam
psllw
lds
pop
stc
mov
ficomp
push
nop
or
xor
xchg
xchg
mov
xor
pop
dec
jmp
dec
repnz
adc
lods
mov
mov
shl
gs
mov
adc
jg
sub
and
mov
push
xchg
add
adc
(bad)
arpl
inc
push
in
pop
and
nop
xor
sub
cmp
add
pop
inc
arpl
(bad)
cwde
cdq
ja
xor
sub
(bad)
ja
fisttp
scas
out
sti
sub
sub
popf
stc
into
cmp
ds
cs
stos
sbb
sbb
inc
aam
push
lds
or
int
out
nop
lock
test
shl
loop
lock
pop
mov
sbb
cdq
or
xor
and
retf
mov
je
fnstenv
push
fld
sbb
iret
clc
clc
push
ja
shr
out
out
push
aad
mov
int
mov
js
mov
jne
cli
sti
rol
(bad)
out
xchg
pop
in
xchg
test
(bad)
add
dec
and
cmps
imul
dec
into
inc
aad
ret
repz
xor
test
dec
xor
inc
add
xchg
imul
mov
or
call
pushf
mov
jno
sbb
xor
sahf
pop
xor
mov
in
in
sub
das
mov
sub
retf
dec
inc
call
add
out
repz
(bad)
mov
jb
adc
ret
push
jle
in
std
cmp
and
mov
movs
push
cli
sti
mov
add
ins
fcmovbe
sub
cmp
mov
pop
xor
dec
mov
sub
mov
ret
call
inc
mov
add
mov
(bad)
movs
into
into
mov
(bad)
retf
xchg
inc
mov
cwde
pushf
scas
xor
sti
mov
clc
outs
and
xchg
cmp
cmp
pop
cmp
mov
icebp
push
mov
icebp
test
pop
jbe
push
mov
lahf
aaa
mov
lea
call
fst
out
mov
nop
xchg
and
std
xchg
or
push
xor
in
add
repz
fisttp
test
fdiv
repz
add
loopne
sbb
mov
add
adc
mov
sbb
add
dec
pop
mov
iret
or
push
sbb
adc
(bad)
call
pop
add
pop
cmp
fild
out
repz
sti
and
clc
inc
xchg
dec
sub
ins
(bad)
(bad)
cmp
ja
inc
out
out
sub
pop
and
xor
nop
test
push
fidivr
jae
add
nop
mov
(bad)
outs
mov
xor
push
sub
push
sub
rol
in
mov
sahf
mov
xchg
push
add
ficom
jns
cmps
xor
out
leave
cmc
mov
fdivr
sub
push
shl
loope
and
add
push
call
ret
int
pop
call
fs
pop
stos
cwde
pop
cmp
or
or
jle
or
mov
popa
mov
inc
(bad)
ds
mov
call
ss
adc
fcomi
mov
nop
mov
inc
xchg
ins
dec
ret
sub
add
sub
mov
pop
ins
mov
xchg
xor
jo
mov
leave
and
shl
loop
dec
mov
xor
pop
loopne
repz
(bad)
imul
inc
sahf
mov
adc
(bad)
out
scas
push
mov
cmp
in
xchg
stos
cmps
jmp
das
pop
jmp
inc
aad
sub
push
sub
jbe
sub
push
jg
sub
addr16
push
outs
jl
add
retf
fist
out
sti
clc
shl
dec
cmp
arpl
repz
xor
loope
(bad)
jl
cmp
xor
lahf
jbe
mov
mov
sub
(bad)
xlat
cmp
sbb
hlt
stos
je
jbe
arpl
shl
dec
adc
push
add
mov
jno
leave
std
call
outs
bound
loop
cmps
leave
mov
je
loop
aas
inc
mov
adc
inc
ins
ficomp
push
mov
lahf
rcr
xlat
and
inc
jnp
popa
div
jb
sar
inc
dec
(bad)
retf
test
addr16
mov
arpl
cmps
jae
sub
call
push
add
mov
cmp
ja
fndisi(8087
loop
jae
mov
push
loopne
push
mov
adc
add
mov
jns
mov
jne
mov
ds
ret
cli
inc
mov
cld
pop
popf
adc
jg
add
xor
cmp
mov
pop
sbb
lds
aaa
pop
fcom
mov
add
mov
stos
aad
mov
jge
test
add
inc
cmps
outs
xchg
push
mov
test
push
cs
mov
cmp
add
jmp
cmp
adc
mov
or
mov
mov
fwait
loope
mov
adc
ins
fld
push
bound
call
leave
nop
jno
mov
stos
push
pushf
scas
js
ror
dec
jnp
jb
rcl
adc
or
fsub
jns
(bad)
leave
mov
cwde
sbb
xor
add
dec
and
add
movs
cmc
mov
mov
enter
xchg
adc
xor
ret
mov
imul
xor
daa
inc
mov
aas
mov
ja
sub
xor
imul
popa
dec
loopne
mov
adc
cli
stos
into
std
jle
push
nop
sub
pusha
push
jmp
inc
lock
jb
sbb
cmp
pop
arpl
xchg
sar
fcomi
out
xchg
(bad)
xor
xchg
mov
mov
rol
in
or
dec
pushf
jo
ret
sbb
fmul
js
and
inc
push
pop
or
frstor
adc
jns
mov
fwait
inc
sti
into
sahf
in
push
enter
mov
jb
mov
stos
push
test
or
shr
push
neg
les
pop
dec
cli
mov
shr
in
inc
mov
jl
mov
rep
rcl
cli
hlt
ins
push
nop
bound
sahf
les
clc
sahf
add
inc
xor
cmps
pop
inc
and
fld
sub
retf
push
in
outs
sub
fist
popa
add
jle
xor
xor
enter
ds
mov
movs
mov
ret
loopne
sbb
add
jmp
add
dec
in
jge
pop
xchg
add
sbb
cmp
mov
outs
fwait
jmp
adc
mov
push
mov
stc
inc
cmp
pop
hlt
mov
(bad)
call
pusha
and
sbb
jl
jle
xor
push
mov
pop
sub
iret
cwde
jne
mov
jae
mov
inc
cdq
mov
or
add
iret
outs
imul
xchg
dec
imul
pop
adc
adc
lds
jmp
fiadd
jmp
outs
ins
push
(bad)
cdq
inc
jne
shr
dec
xchg
addr16
xor
push
int
dec
pop
imul
cwde
adc
lock
or
daa
and
xchg
ja
pop
sbb
jbe
std
in
pop
pop
es
xor
inc
and
jno
cmp
pop
and
pop
jg
add
addr16
daa
xchg
outs
cld
push
jbe
jmp
dec
jp
dec
push
adc
xchg
in
xor
into
fs
je
mov
pop
sbb
push
cmps
jmp
in
push
mov
ss
mov
xor
jl
test
push
xor
push
mov
xor
dec
fld
xchg
or
mov
pusha
fsubr
pop
push
in
shl
stos
inc
(bad)
fild
loop
jg
sbb
cmps
xor
push
out
ret
pop
push
popf
push
push
mov
inc
sub
outs
cmp
jmp
dec
lods
mov
sub
hlt
fidiv
cmp
sub
mov
xchg
adc
rep
mov
add
cwde
clc
pop
sbb
inc
cs
test
jno
int
mov
sub
inc
jle
xchg
adc
test
inc
mov
lods
add
inc
mov
loop
cmp
lods
outs
data16
pushf
xor
cwde
mov
ja
out
sub
or
fadd
test
daa
push
mov
jnp
dec
sub
mov
aaa
sub
and
inc
ret
and
pop
addr16
fs
xor
sbb
and
mov
jmp
dec
jnp
loope
cmp
in
push
pop
cld
jg
cld
int3
out
push
jmp
mov
mov
jb
jg
outs
dec
lahf
movs
bound
out
icebp
xlat
push
and
sub
scas
jle
pushf
arpl
dec
mov
adc
cmp
inc
add
int
test
popf
(bad)
(bad)
(bad)
fild
stc
sar
xchg
or
dec
push
int
and
stos
pop
shl
mov
dec
outs
and
xor
push
and
and
dec
cmp
xchg
iret
popf
inc
mov
test
xchg
cmp
mov
imul
push
sbb
xchg
shr
rcr
pusha
inc
inc
or
mov
or
adc
pop
cmp
jmp
or
repnz
cmp
ret
push
ja
ins
out
cmp
(bad)
call
or
stos
ss
aaa
xchg
jmp
pop
lock
cwde
xchg
stos
into
and
push
cmp
loop
inc
xchg
mov
push
jle
test
mov
pop
lock
sbb
pop
inc
das
pop
sbb
or
mov
push
lods
xor
stc
pop
fidiv
push
cmp
pop
jo
sbb
les
pop
sbb
scas
fldcw
jmp
mov
sub
cmps
mov
sbb
xor
inc
adc
outs
jae
je
sbb
js
xchg
sub
push
add
sub
pop
xchg
lock
adc
inc
inc
inc
cs
add
mov
cmp
nop
jmp
shl
cwde
sub
jnp
jmp
cmps
test
repnz
and
sub
and
or
mov
add
adc
adc
jae
pop
add
dec
hlt
mov
and
das
sub
pop
nop
mov
outs
push
loopne
fmul
mov
ins
or
or
je
xchg
(bad)
mov
mov
push
inc
jle
leave
imul
(bad)
and
pop
out
stc
sbb
xchg
and
popf
gs
fwait
sbb
je
ins
loopne
lahf
gs
push
jb
sar
xchg
jle
fwait
dec
jo
enter
add
adc
paddusb
pop
push
(bad)
cli
addr16
leave
retf
pop
cmc
scas
jae
sbb
(bad)
push
sbb
jbe
mov
cmps
jbe
push
sbb
mov
jno
retf
aam
dec
dec
fmul
ds
cwde
mov
cmp
scas
mov
call
sbb
xchg
stos
into
jg
outs
(bad)
cli
lds
popf
repz
cmp
mov
pop
sbb
fxch
cmp
mov
xchg
or
(bad)
pop
and
not
mov
aam
or
fild
jp
cli
movs
ds
mov
aaa
pushf
mov
sub
ins
(bad)
jl
sbb
std
push
adc
jo
rcr
div
push
mov
movs
mov
push
fist
out
add
(bad)
lock
pop
add
push
push
add
fs
icebp
fs
adc
stc
xlat
repz
adc
jno
into
icebp
mov
fstp
jnp
cs
aaa
or
bound
(bad)
cmps
cli
jno
inc
sti
shl
lods
adc
xor
and
sub
mov
cld
inc
jb
cmp
push
ss
fild
mov
xchg
dec
addr16
ret
xlat
jmp
test
jmp
add
inc
mov
mov
stos
daa
addr16
lea
int3
xor
push
jbe
push
push
test
repnz
sbb
in
sub
(bad)
push
test
mov
mov
jp
retf
fcom
fnstsw
sub
dec
sub
int
xchg
inc
mov
pop
retf
sbb
out
(bad)
xor
leave
inc
mov
ret
jno
push
xor
sub
xchg
jb
sbb
adc
(bad)
pop
jge
sub
add
adc
in
sub
gs
ret
mov
mul
sysenter
cmp
push
inc
ins
jecxz
and
fucomip
sbb
cmp
stc
int3
push
or
jl
cld
push
add
jae
cld
jge
pop
ja
(bad)
pop
inc
adc
adc
add
jno
fs
outs
pop
mov
jecxz
xchg
pusha
pop
mov
fimul
out
pop
pop
int
mov
jp
cmp
cmp
mov
test
fcmovnb
out
add
je
push
xchg
mov
sub
(bad)
int
gs
inc
gs
inc
add
sub
xchg
and
in
stos
inc
jae
pop
sets
arpl
push
sub
loop
sahf
mov
fistp
or
int3
fsubr
push
xchg
push
push
xchg
and
(bad)
jp
and
clc
aaa
fild
jmp
mov
ins
jecxz
pop
test
aas
mov
sbb
cmp
xchg
pop
ror
and
stos
sbb
pusha
sar
inc
and
pop
out
sub
in
ror
lea
xchg
ror
push
cli
stos
lock
cmps
ins
cwde
xchg
xchg
xchg
retf
mov
jecxz
inc
lds
in
mov
movs
xchg
inc
test
cli
xor
mov
and
fild
adc
fild
push
pop
outs
and
pop
(bad)
mov
cmps
shr
int
jge
xchg
inc
push
fidiv
test
sbb
push
out
add
mov
jg
dec
lock
outs
push
arpl
mov
mov
mov
pop
adc
push
jmp
retf
sub
push
pushf
addr16
out
out
shl
lods
and
mov
mov
out
cmp
loope
sub
ins
arpl
sti
xchg
pop
pop
pop
retf
pop
jbe
dec
in
es
and
inc
mov
data16
test
rol
cmp
cwde
rcr
inc
shl
lock
cmps
cmps
sti
mov
scas
daa
cld
test
or
inc
cmp
dec
out
(bad)
pop
ins
retf
ins
pusha
fstp
das
push
mov
out
repz
ds
adc
jae
adc
cmp
jl
mov
cmp
in
mov
shr
loop
cmp
push
scas
add
xchg
xchg
fsubr
cmp
pop
in
enter
push
in
mov
ins
sbb
frstor
jne
lds
jmp
ltr
mov
sahf
popf
outs
jg
frstor
jb
mov
inc
pop
xchg
sbb
and
hlt
jp
dec
xchg
cdq
pusha
dec
bound
sub
sbb
mov
pop
and
xchg
aad
popa
mov
mov
adc
pop
mov
xchg
stos
and
iret
popf
test
push
test
push
jp
in
adc
in
pushf
into
xchg
sub
cmc
sub
jns
and
xor
or
repz
add
jp
scas
iret
mov
cmp
sti
pop
add
into
xchg
add
retf
popa
cmps
push
add
movs
mov
sub
sbb
push
ss
stc
movs
add
popf
lea
shl
or
xchg
mov
jecxz
adc
jg
ror
push
fwait
(bad)
and
push
mov
out
lahf
ds
mov
xlat
icebp
clc
jmp
inc
rol
aas
mov
pusha
(bad)
jmp
mov
ficom
movs
xchg
cmc
add
or
xchg
addr16
cli
cmc
mov
js
or
repnz
movs
pop
out
(bad)
mov
push
lahf
(bad)
pop
sti
cwde
scas
sub
adc
cmp
pop
adc
sub
adc
jbe
pop
pop
mov
lahf
fst
in
sbb
add
xor
mov
aam
in
test
xor
lds
ins
ins
or
addr16
pop
data16
cmps
push
aas
push
and
and
ds
gs
xor
mov
bound
(bad)
mov
mov
inc
div
dec
jne
and
adc
cwde
repz
call
cdq
and
adc
cmc
or
push
clc
je
xchg
rol
loopne
xlat
mov
jnp
sbb
or
fidiv
or
mov
pop
call
out
cmp
repz
in
out
sub
sub
xchg
sub
push
push
out
xchg
sbb
and
jno
ins
pushf
jmp
or
cmps
mov
cmp
adc
rcl
(bad)
shr
xchg
int
ss
or
sub
hlt
retf
je
xchg
(bad)
xchg
dec
adc
mov
cmp
call
and
or
xchg
dec
sbb
xchg
loop
pop
adc
push
mov
mov
dec
hlt
jg
mov
mov
push
pop
repz
popf
pop
xchg
mov
dec
sbb
(bad)
dec
daa
outs
leave
sub
mov
xchg
fcmovbe
inc
test
pop
icebp
mov
arpl
dec
and
add
ret
ret
fidivr
or
sbb
mov
into
jge
mov
(bad)
in
leave
(bad)
xor
dec
sbb
aaa
and
ss
ret
push
add
dec
fs
iret
jne
daa
inc
fisttp
mov
adc
aas
std
inc
dec
pop
xor
mov
gs
xor
loope
enter
lea
xchg
xor
or
push
scas
sbb
ret
xor
out
out
cmp
push
add
ror
test
push
jne
shr
(bad)
push
push
fdivr
sub
leave
xchg
loop
les
add
std
push
mul
mov
jp
jo
jno
fld
mov
mov
lods
adc
xchg
cmp
out
cmps
stc
fbstp
aaa
jae
fsub
imul
push
sbb
cmp
xor
arpl
stos
mov
in
outs
jae
into
jmp
pop
lock
and
jecxz
pop
mov
test
mov
cmps
jmp
test
(bad)
loopne
daa
pop
adc
mov
mov
cmova
loope
clc
lods
jge
xor
xchg
xchg
les
retf
push
pop
xor
in
cs
cmp
sbb
jge
int
and
enter
push
aaa
enter
(bad)
adc
mov
clc
clc
push
jl
pop
jl
sbb
push
jns
cdq
js
stos
pop
inc
jno
ins
dec
pop
jmp
lods
pop
cmc
xor
push
push
xchg
cmc
cmp
es
inc
sbb
pop
push
jb
push
ja
add
cmp
out
int
cmp
sub
push
fwait
je
lock
cli
(bad)
cmp
jmp
std
and
dec
imul
push
jo
or
outs
push
jbe
or
es
popf
mov
repz
cmps
cmp
and
or
jb
jmp
cdq
push
out
mov
push
mov
in
sar
or
jns
jmp
jp
dec
xor
test
push
popf
iret
pop
jecxz
int3
jno
cmp
test
jno
jmp
xchg
leave
mov
rcr
inc
adc
fwait
or
and
int
xor
test
shr
mov
sub
sbb
mov
cmp
jl
test
cmc
lds
(bad)
(bad)
pop
pop
data16
retf
xor
and
and
imul
movs
mov
div
xchg
test
pop
push
xlat
in
sub
jmp
inc
sub
sar
out
mov
js
dec
cld
jae
fs
jns
inc
fcmovnu
js
int
test
bound
xchg
in
inc
push
push
fisub
jg
add
aam
xchg
push
push
inc
dec
punpcklbw
call
xor
inc
adc
shr
fldenv
cmp
into
cwde
sub
cmc
les
arpl
add
ror
push
mov
jbe
cmps
mov
retf
jp
mov
mov
xchg
dec
adc
int3
dec
push
test
adc
mov
nop
das
retf
lahf
mov
aas
popf
loop
jb
add
jns
mov
retf
xor
cmc
or
dec
sbb
add
mov
inc
js
and
in
mov
sbb
push
xlat
and
test
sbb
fstp
stc
jle
pop
aaa
(bad)
leave
ins
fisttp
jge
sub
adc
push
cmp
cdq
inc
add
imul
adc
xchg
cdq
ret
xchg
cmp
xor
xor
dec
mov
or
(bad)
in
dec
retf
je
les
fdivr
sbb
call
mov
(bad)
lds
pop
cld
or
mov
hlt
inc
adc
test
sbb
adc
push
sub
inc
sub
push
popf
mov
xchg
iret
add
jg
sbb
sub
mov
rcl
adc
mov
jno
lods
(bad)
cmp
mov
and
das
call
pop
push
pop
push
mov
push
dec
adc
stc
ret
jne
push
dec
lods
call
lea
sub
push
ins
stc
pop
jnp
xor
dec
ror
pop
xor
push
add
jns
gs
xor
fisttp
popa
jecxz
out
and
sub
pusha
mov
jns
movs
lods
out
inc
mov
pop
shr
mov
xchg
mov
fld
in
add
data16
ss
hlt
and
idiv
mov
iret
xchg
dec
add
int
fwait
cmps
pop
jae
call
jne
jo
jno
or
das
scas
adc
rcr
mov
push
cld
or
mov
neg
iret
xchg
sahf
lahf
imul
out
fs
nop
pop
adc
push
xor
pop
mov
pop
gs
repz
and
push
jno
cs
sbb
repnz
loope
call
shr
into
xor
fst
das
lock
adc
and
dec
out
in
idiv
adc
in
gs
fdivr
(bad)
dec
jle
aaa
sub
test
aaa
jmp
mov
retf
mov
xor
into
fst
adc
xor
and
adc
or
push
xchg
inc
retf
fsubr
mov
leave
stos
cmc
loop
jl
movs
(bad)
loop
push
int3
push
loopne
stos
pop
gs
and
fnsave
jno
push
repz
mov
xchg
inc
shl
pop
pop
dec
jmp
push
cmp
pop
xchg
pushf
mov
jp
test
adc
mov
and
dec
jnp
lods
jl
ds
pusha
cmp
(bad)
push
fst
xchg
mov
sahf
hlt
inc
dec
and
mov
sbb
dec
retf
mov
sub
dec
jle
cdq
mov
mov
jmp
daa
xor
cld
push
mov
stos
mov
rol
push
sub
cld
ja
jmp
cdq
scas
push
xchg
imul
fmul
or
adc
std
mov
inc
outs
push
or
xor
sar
adc
out
iret
gs
mov
call
push
call
addr16
lahf
dec
bound
mov
jb
lahf
mov
xchg
ret
sahf
inc
and
fcomp
xor
and
push
jns
xor
mov
dec
mov
aam
mov
adc
test
mov
mov
jbe
pusha
leave
add
jnp
sub
and
cmp
dec
inc
out
add
gs
sbb
sub
dec
ror
mov
cdq
fsin
mov
adc
xchg
mov
stc
fbstp
out
push
je
iret
pop
cmp
and
fisub
ins
xor
outs
(bad)
pop
mov
sbb
call
or
fsubrp
sub
mov
pop
(bad)
idiv
rol
fwait
mov
mov
les
jbe
xchg
cwde
mov
and
stc
in
and
push
pop
push
xchg
sti
in
xor
pop
in
and
push
test
jno
aas
jle
mul
mov
push
inc
jl
or
ja
mov
clc
pop
mov
sbb
aam
arpl
push
mov
sub
shl
pop
call
cwde
es
dec
mov
clc
mov
adc
(bad)
push
xchg
and
mov
fidivr
es
outs
xor
jmp
cmps
mov
daa
xchg
loope
je
push
ret
pop
(bad)
loope
mov
and
pop
aam
sbb
adc
cmps
sar
fsub
loop
sub
outs
mov
fistp
sti
fdivr
(bad)
ja
daa
pop
jle
std
jmp
add
mov
and
inc
inc
adc
inc
dec
scas
movs
sbb
ins
push
test
mov
push
movs
loop
sahf
inc
in
pop
lahf
ss
das
(bad)
mov
sub
jb
xor
dec
pop
in
(bad)
movs
gs
push
aas
lods
sbb
(bad)
(bad)
hlt
cs
popa
or
adc
sbb
pop
test
stc
rol
fstp
clc
xor
inc
sub
add
not
movs
cmp
pop
das
xchg
inc
cmp
mov
and
data16
sti
dec
adc
loope
mov
inc
ins
ins
and
les
inc
jge
xlat
inc
push
dec
add
movs
dec
popa
dec
arpl
push
ror
sub
daa
mov
ss
test
cmc
cmps
aad
dec
aaa
push
fxch
sbb
dec
add
xchg
push
pusha
iret
mov
jecxz
pop
out
push
nop
ret
out
imul
test
or
jne
sub
icebp
es
push
repnz
outs
leave
inc
push
das
mov
xor
adc
sub
dec
or
add
push
jne
pop
mov
xor
push
or
(bad)
(bad)
data16
inc
sub
dec
jg
fnstcw
pop
jl
dec
cmps
repnz
dec
(bad)
mov
test
jo
outs
xchg
xchg
push
sbb
in
mov
adc
pop
mov
pop
std
aaa
jge
imul
sub
cmp
push
stc
jmp
xor
and
add
xchg
jnp
pop
loopne
mov
xor
xor
or
stc
test
mov
mov
cmp
or
push
mov
cwde
push
mov
int
xor
jbe
out
add
stos
pop
nop
test
cmp
out
sbb
mov
adc
pop
or
and
push
cmp
cmp
into
and
mov
jmp
icebp
ret
js
sbb
cmp
push
or
sti
bound
push
mov
shl
imul
jnp
(bad)
call
rcr
push
push
arpl
xor
mov
add
cmp
push
cmps
jmp
rep
mov
dec
mov
lods
jl
or
repz
addr16
cdq
fcomp
dec
jle
inc
push
mov
xchg
(bad)
lds
mov
push
sub
sub
ret
hlt
in
aaa
adc
jmp
mov
xor
sahf
bound
jecxz
sub
sbb
repnz
es
ins
jae
and
enter
xchg
xor
dec
shr
test
adc
pop
dec
mov
pop
xor
mov
jbe
jo
js
adc
jno
cdq
dec
adc
(bad)
in
in
inc
hlt
jmp
inc
ja
mov
push
jle
out
jge
sub
xchg
sti
rcr
aaa
scas
sti
and
sar
fisub
mov
in
adc
cli
sub
mov
ret
outs
adc
into
shr
hlt
adc
setbe
cmps
jmp
ins
jmp
fs
xchg
push
add
pop
jne
fist
adc
xchg
xlat
push
fmul
sbb
xor
xor
pop
hlt
or
cmc
push
pop
mov
sub
in
fst
sbb
add
js
loopne
cmp
lahf
push
por
(bad)
cdq
pop
dec
daa
ror
pop
ja
jo
cwde
sbb
test
aam
or
inc
sub
stos
push
pop
sub
repz
or
stos
arpl
mov
mov
sbb
cmp
popf
je
mov
cmps
inc
dec
repnz
mov
hlt
imul
movs
dec
xor
cmp
xor
enter
mov
sbb
stc
loope
les
mov
hlt
scas
std
outs
into
es
scas
bound
and
adc
add
or
mov
(bad)
xor
xor
out
in
dec
mov
or
pop
jb
ficomp
imul
rcr
xchg
or
addr16
into
call
loope
mov
rcr
xchg
aaa
mov
(bad)
imul
rcl
retf
ins
jg
clc
fs
aad
repnz
cmp
dec
xchg
cli
pop
test
add
js
xchg
push
add
ins
stc
cmc
pop
pushf
jmp
aam
push
add
push
stos
xchg
sub
mov
xor
or
xchg
jg
xor
ret
mov
jbe
mov
jg
pop
add
clc
fnstsw
add
(bad)
cs
(bad)
icebp
sub
xchg
or
xchg
cli
xor
das
pop
add
scas
jbe
or
or
dec
sti
or
xchg
mov
pop
rol
aam
pop
push
stos
cmp
mov
pop
cli
push
push
mov
dec
mov
fidiv
sub
sahf
add
out
xchg
dec
icebp
iret
int3
jbe
int3
iret
mov
inc
je
repnz
add
test
int3
push
out
cld
inc
or
and
adc
fcomp
sub
sbb
or
mov
loopne
dec
sahf
sbb
jp
nop
mov
mov
rcr
cmp
rol
dec
in
jne
or
adc
sbb
and
into
sbb
cwde
or
jns
jmp
xchg
popa
lea
and
mov
jle
push
mov
xchg
xchg
ins
call
xchg
jecxz
mov
les
dec
cdq
adc
cs
cmp
inc
push
pop
xchg
cmp
arpl
cmc
loope
push
push
or
sar
ror
test
int
or
fcomp
xchg
sar
loop
popf
sahf
mov
aam
xchg
ins
dec
mov
xor
jl
push
mov
inc
add
adc
or
fld
fcomip
fstp
cmp
fnstsw
and
sub
dec
push
add
push
pop
mov
repnz
test
sbb
js
add
mov
adc
sub
call
int3
mov
fisub
in
mov
dec
sub
inc
jnp
sub
jnp
mov
(bad)
enter
mov
sub
push
mov
mov
mov
inc
adc
push
push
xchg
aam
add
pop
xchg
push
push
dec
mov
add
ins
ins
xor
xor
mov
repz
retf
addr16
aam
mov
dec
lea
inc
push
(bad)
daa
adc
loope
mov
inc
pop
lods
xchg
rcr
adc
cdq
ins
fsubr
xor
cdq
pop
cmps
ja
iret
ret
shl
outs
inc
hlt
and
out
push
mov
ret
leave
stos
jnp
xchg
cli
fmul
das
jo
and
or
mov
sub
or
adc
xlat
call
rcl
int
mov
and
add
push
dec
jae
jb
(bad)
clc
adc
jg
xor
sbb
jmp
out
xor
int
pop
sahf
(bad)
adc
mov
imul
ret
lahf
mov
mov
and
add
stc
mov
cli
(bad)
cld
dec
xchg
bound
xlat
xchg
jmp
sub
xchg
mov
sub
cmp
arpl
sbb
dec
ret
or
mov
rcr
sub
and
adc
or
dec
xor
cmps
xchg
repz
fidivr
frstor
xor
inc
cmps
xchg
iret
add
adc
inc
mov
jnp
imul
je
mov
push
mov
mov
(bad)
std
jmp
je
sahf
xor
les
mul
sub
push
xchg
xor
or
fsub
push
(bad)
mov
aaa
inc
mov
outs
pop
mov
push
mov
out
jle
aam
cmc
shr
fcmovnu
mov
inc
xlat
xchg
das
mov
jp
push
not
add
jecxz
cmp
out
mov
fbld
(bad)
sbb
and
retf
sbb
jecxz
retf
jo
leave
shl
jge
pop
hlt
sbb
neg
sar
imul
shr
sti
adc
jns
addr16
jae
test
call
mov
daa
sub
cmp
pushf
sahf
sbb
sahf
dec
xchg
or
jno
ss
aaa
out
(bad)
cdq
pop
xor
(bad)
cdq
aam
sbb
sub
cwde
jmp
lods
inc
daa
xchg
mov
sti
sahf
dec
das
mov
sbb
scas
jne
mov
inc
mov
jmp
add
jge
stos
fsubr
aam
push
mov
(bad)
lock
pop
idiv
ds
push
hlt
mov
jmp
push
fnsave
mov
ss
jle
fistp
cmps
pop
scas
dec
inc
mov
neg
add
fcom
pop
sub
adc
sbb
stc
call
fisttp
mov
and
sbb
push
jb
xchg
adc
nop
and
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
jle
aaa
cld
aas
fst
xchg
cmc
cmp
fcom
mov
or
add
fdivr
add
jle
add
and
add
jle
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
