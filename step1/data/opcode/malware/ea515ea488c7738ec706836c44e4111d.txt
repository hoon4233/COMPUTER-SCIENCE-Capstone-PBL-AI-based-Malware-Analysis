int3
inc
add
add
add
dec
add
add
add
add
add
or
add
add
add
hlt
and
add
and
add
add
add
sub
jmp
or
outs
xor
neg
lods
xor
movs
fsubr
pop
movs
jnp
xchg
push
and
sub
sub
add
icebp
(bad)
jmp
sbb
scas
sbb
xchg
loope
cs
inc
test
pop
push
ret
add
and
push
push
addr16
call
test
xor
scas
push
push
icebp
xor
je
call
sub
mov
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
add
jle
add
add
xor
add
and
jb
outs
addr16
add
add
add
add
and
add
add
adc
add
and
dec
inc
add
add
add
add
inc
ins
outs
bound
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
(bad)
int3
add
add
add
aas
add
add
iret
add
add
add
ja
add
(bad)
rol
add
add
add
add
add
add
loop
add
test
add
add
add
sbb
add
js
add
add
add
push
add
add
add
add
add
test
add
in
inc
add
add
add
add
add
add
add
add
add
add
jnp
xor
cmp
cmp
sub
sub
sub
xor
xor
xor
jge
cmp
outs
fs
gs
jae
jb
jae
jne
arpl
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
arpl
jb
outs
je
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
je
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
jb
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
jb
ss
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
outs
gs
outs
jb
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
outs
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
jb
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
outs
jge
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
jne
je
imul
add
add
(bad)
xchg
jmp
sahf
test
mov
add
add
add
xchg
add
add
add
add
and
add
inc
xor
add
add
add
add
cwde
retf
repz
cwde
enter
pop
mov
dec
mov
xchg
and
(bad)
movs
test
jnp
sahf
out
sti
xchg
jns
jae
or
pop
mov
mov
retf
dec
cmps
cmps
sbb
dec
pusha
scas
push
xor
idiv
mov
call
jl
xchg
mov
arpl
popf
lods
cvtdq2ps
mov
(bad)
xor
mov
pop
mov
jnp
or
or
int3
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
inc
push
inc
inc
push
cld
xchg
and
add
add
add
add
add
add
jb
xor
bound
add
add
and
int3
add
repnz
clc
int3
push
sbb
sbb
(bad)
clc
jmp
cmp
ret
push
rcr
and
outs
jp
xchg
jae
cs
out
f2xm1
test
inc
in
(bad)
pusha
(bad)
add
sar
and
aaa
xchg
ds
out
mov
push
cmp
push
clc
mov
aaa
std
fist
lods
xchg
test
ret
aas
mov
pop
sbb
cmps
cmps
jnp
int
mov
or
mov
jnp
fwait
sub
lds
or
jl
jl
xchg
xchg
cli
mov
js
xchg
inc
stos
mov
pavgb
mov
jmp
adc
jmp
stos
call
sub
(bad)
sahf
pop
outs
sbb
sbb
lahf
pusha
xchg
mov
push
xor
retf
retf
mov
fwait
pop
cld
add
adc
mov
xchg
jmp
sti
outs
fmul
pop
add
sub
and
mov
sub
vpslld
les
jmp
test
rcr
mov
fild
imul
das
popf
xchg
in
iret
enter
push
dec
aas
loope
mov
sub
int3
jg
xchg
call
aaa
mov
retf
or
xchg
dec
ins
jmp
test
dec
sar
int
fdivr
or
data16
das
je
cs
jl
xor
and
dec
dec
xlat
or
adc
std
and
cli
hlt
sub
or
xor
shr
adc
out
and
in
loope
mov
std
mov
push
es
addr16
or
shl
das
bound
push
nop
out
pop
mov
mov
(bad)
xchg
outs
cmp
jns
and
mov
mov
mov
fcmovbe
and
int3
(bad)
movs
and
mov
mov
dec
pop
and
popf
push
repnz
sub
adc
lock
imul
inc
cmp
fldenv
jns
dec
mov
pop
and
call
std
xchg
lods
xchg
push
pop
retf
jmp
inc
pop
shl
jne
shr
lahf
cli
xchg
and
aad
arpl
add
push
mov
call
mov
stos
loopne
and
jmp
mov
push
xchg
mov
into
std
ds
mov
xchg
scas
ret
cli
inc
test
das
in
aaa
(bad)
ss
mov
and
aam
(bad)
in
adc
cdq
mov
lds
pop
adc
dec
stos
ins
add
mov
movs
sahf
xchg
test
std
pop
test
les
mov
or
ins
ins
push
cmps
mov
sbb
mov
jnp
mov
arpl
cmps
fst
adc
test
ins
inc
xor
imul
mov
sub
jp
scas
movs
(bad)
mov
and
lods
in
mov
ror
pusha
jge
scas
jae
inc
call
mov
cs
sbb
cdq
dec
cmp
push
add
jbe
je
mov
sub
fdiv
pop
fnsave
mov
outs
lahf
pop
out
retf
gs
mov
mov
sahf
dec
pop
cmc
clc
ficomp
iret
movs
add
pop
inc
leave
lods
shl
mov
cmps
pop
mov
or
xor
icebp
stos
stc
lds
test
pop
pop
mov
sbb
sbb
loope
pop
and
mov
jmp
iret
xchg
popa
das
test
xor
fmul
sbb
push
ss
xchg
movs
fld
inc
and
adc
inc
xchg
stos
xor
rcl
stc
nop
(bad)
mov
sahf
pop
sub
aam
inc
movs
pop
jno
daa
mov
xchg
mov
imul
and
inc
les
je
jmp
sub
in
aam
cli
outs
or
and
jcxz
add
xor
cdq
push
jo
cmp
(bad)
xor
push
mov
adc
ja
push
inc
and
lea
out
push
lea
fmul
cmp
adc
test
mov
daa
pop
mov
jne
pop
xor
add
pop
test
test
pushf
(bad)
inc
loopne
jge
jno
lods
lods
dec
das
xor
cmp
(bad)
int
out
push
jle
ds
out
adc
dec
mov
mov
mov
shl
stos
test
dec
js
or
movs
fild
ins
mov
add
ret
xchg
dec
not
lock
loopne
sbb
sbb
cs
ret
pusha
mov
emms
cld
cmps
or
adc
stos
dec
push
inc
sub
outs
mov
hlt
or
sbb
sahf
retf
ficom
call
jmp
movs
retf
push
inc
inc
or
outs
mov
mov
popf
(bad)
dec
adc
pop
aad
imul
(bad)
leave
scas
and
xchg
cmp
daa
call
gs
aaa
(bad)
add
rcr
cld
repz
jmp
movs
jmp
push
jge
movs
jmp
inc
dec
mov
stc
or
dec
lods
stc
jnp
loopne
lock
out
or
jae
jge
xor
mov
imul
mov
ss
mov
popa
es
(bad)
iret
sub
fstp
dec
jnp
popf
sti
popf
movs
jp
push
lods
sub
inc
fs
fdiv
pop
gs
mov
fisttp
mov
dec
in
lock
mov
xchg
push
inc
pop
std
es
sbb
(bad)
push
dec
ror
(bad)
movs
mov
aaa
and
cs
fld
and
xlat
mov
arpl
adc
imul
cmps
jmp
adc
ja
loope
fwait
ror
jle
cld
xor
mov
cmps
(bad)
xor
xchg
sbb
sub
pop
push
mov
push
imul
pop
inc
push
fsub
xchg
or
and
mov
pop
and
imul
sbb
add
cwde
xchg
cmp
xchg
jmp
cmp
dec
adc
call
adc
mov
leave
adc
jg
(bad)
aad
aas
rcl
(bad)
xlat
repnz
fcmovnb
adc
jnp
sub
mov
push
data16
pop
and
sub
adc
stc
int3
jmp
dec
cld
and
push
lock
fs
test
or
gs
outs
jnp
pop
out
aad
aad
dec
fisttp
test
adc
out
out
or
pop
(bad)
pop
cld
dec
inc
(bad)
xchg
pushf
outs
and
mov
sub
adc
outs
in
je
rcr
ficom
push
mov
shr
sbb
xchg
aaa
icebp
lahf
xchg
and
test
push
lahf
inc
jle
iret
pop
adc
bound
mov
call
repz
jg
jns
mov
cmp
retf
cmp
(bad)
sub
es
sbb
cmp
mov
aam
push
xor
cmp
pushf
jb
sbb
test
repz
dec
sbb
add
dec
mov
mov
add
push
xor
xchg
es
add
adc
jecxz
in
mov
enter
xchg
mov
xlat
cmp
xor
je
fbstp
push
jecxz
jmp
xor
push
cmc
jnp
dec
inc
shl
pop
rol
in
lods
pop
mov
(bad)
cmp
nop
inc
repz
sub
dec
inc
sbb
push
adc
outs
stos
mov
fcom
mov
mov
inc
fmulp
pop
dec
pop
pop
or
mov
lods
and
jmp
xchg
scas
push
mov
aam
push
dec
sbb
mov
sbb
sub
rcr
adc
nop
mov
jnp
leave
mov
mov
outs
add
ret
aaa
es
fucom
jecxz
iret
dec
popf
(bad)
imul
in
inc
and
jle
sub
adc
sub
adc
jl
das
aam
dec
inc
jmp
(bad)
call
sbb
xchg
sub
jp
sbb
inc
fmulp
dec
push
call
cmps
and
mov
push
aas
aam
popa
(bad)
cld
pop
into
enter
push
mov
ds
pop
mov
adc
adc
add
(bad)
jb
outs
(bad)
out
not
aad
jnp
neg
xor
outs
push
cmps
inc
fcom
mov
in
je
xchg
mov
jle
lods
imul
movs
mov
mov
pop
js
rol
pop
jge
int
int
call
les
jo
push
add
ins
xchg
jno
mov
mov
add
aam
retf
or
sbb
out
pop
in
mov
sbb
cmp
mov
int
push
jne
in
push
fnstsw
dec
mov
pop
and
aam
cmp
mov
(bad)
call
call
(bad)
push
mov
test
in
out
mov
mov
xor
cmc
xchg
lock
inc
ss
sub
ror
gs
cmc
xchg
pop
pushf
arpl
mov
sbb
cmp
cmp
rcr
or
push
aaa
sub
fld
ror
into
fidivr
jne
into
mov
nop
jne
(bad)
xor
xor
lods
es
jecxz
push
adc
xor
sar
cmp
pop
in
loope
inc
or
adc
(bad)
fsub
xchg
and
stos
out
ret
cmp
pop
test
jns
aas
addr16
data16
jle
sahf
xchg
lea
rep
mov
mov
cwde
dec
inc
pusha
or
pop
sub
imul
mov
test
(bad)
jl
and
lahf
inc
leave
mov
dec
fcomp
scas
push
jne
js
cwde
mov
xlat
sub
in
cmp
(bad)
fldcw
pop
test
lea
repnz
ss
inc
mov
jl
sahf
lods
lds
nop
mov
jbe
addr16
(bad)
daa
and
mov
sbb
push
xchg
cmp
inc
mov
out
inc
ins
out
push
push
push
mov
frstor
xor
jecxz
push
cli
add
jne
jmp
ins
or
out
xchg
lea
lods
adc
ins
data16
sub
addr16
jp
xchg
stos
mov
jno
popa
and
pop
int3
xor
sub
adc
mov
xor
pop
loopne
add
addr16
and
stos
xchg
dec
jne
mov
and
add
add
or
gs
cmovno
jmp
xchg
add
clc
out
inc
clc
cmp
push
loope
jne
stos
outs
mov
sub
pop
sbb
movs
or
push
je
cmc
mul
and
(bad)
out
(bad)
fs
sub
lock
jp
adc
xor
pop
into
jne
test
xchg
mov
mov
lahf
addr16
jo
lock
retf
or
xor
imul
ror
dec
jl
ret
xor
imul
mov
mov
cs
scas
xor
cmp
out
loope
mov
sub
mov
loopne
mov
pop
int3
movs
mov
lds
and
(bad)
lock
adc
dec
pushf
inc
dec
adc
xchg
mov
cdq
mov
mov
stos
out
fisttp
je
push
cld
inc
push
test
cmp
in
push
mov
adc
pop
loope
pop
xchg
jae
adc
pop
movs
js
stc
into
pushf
pop
loopne
lock
sar
test
jno
movs
adc
and
int
lods
shr
inc
fsub
mov
push
clc
imul
jl
add
pushf
sbb
int
not
sub
adc
ja
cmp
fucompp
call
cli
bound
inc
popa
jne
or
fsubp
(bad)
jns
mov
xchg
arpl
xchg
mov
test
test
adc
pop
mov
push
hlt
fwait
xor
cld
aam
lea
or
jmp
movs
mov
adc
sar
pop
mov
mov
fdivp
push
stos
jo
cmps
xchg
xor
loope
js
sbb
xor
jae
adc
popf
lahf
adc
and
dec
mov
(bad)
loop
pusha
lahf
add
loop
leave
mov
retf
and
xchg
cmp
ret
xor
aad
test
mov
jge
jmp
pop
pop
pushf
cmp
iret
cmp
mov
pusha
fldcw
mov
sbb
imul
dec
aaa
in
push
popf
std
in
movs
cdq
jp
icebp
xor
or
int3
sbb
and
out
jae
dec
(bad)
addr16
aas
sbb
add
cmp
xchg
das
stos
in
pop
mov
in
sub
jae
add
mov
dec
pop
loopne
cs
aad
mov
add
pop
add
ins
movs
push
fdivrp
int3
xchg
jle
leave
(bad)
xchg
(bad)
daa
sbb
ins
cmp
sbb
jmp
fiadd
loop
(bad)
mov
push
lods
mov
jmp
push
shr
jge
ror
and
movs
mov
mov
mov
add
or
cli
and
in
(bad)
push
xor
mov
cmps
pop
(bad)
(bad)
stos
pop
mov
pop
stos
jne
sub
iret
js
push
mov
cs
pushf
adc
dec
lahf
aas
pop
sar
rol
cmp
xchg
dec
dec
fimul
pop
mov
int3
sbb
jecxz
mov
ror
or
jns
ss
jmp
adc
adc
inc
dec
cmps
fbld
pop
adc
inc
(bad)
cwde
mov
aad
sti
outs
and
movs
test
sbb
push
enter
js
mov
jecxz
jbe
mov
push
les
add
or
(bad)
pop
or
data16
mov
mov
(bad)
push
mov
dec
enter
sbb
test
mov
inc
jo
mov
sub
sub
cmp
sub
sub
pop
enter
jmp
out
dec
movs
aam
mov
mov
mov
jmp
sub
jmp
push
dec
or
jl
push
fidiv
ins
cmp
js
push
bound
mov
or
das
pushf
xor
or
call
repz
inc
ss
jl
jnp
ss
push
pop
repnz
pop
jle
mov
dec
dec
push
int3
outs
xor
mov
mov
inc
popf
lahf
mov
ret
fiadd
push
add
xor
rcl
ficom
jae
inc
inc
pop
push
pushf
leave
cmps
pop
mov
mov
gs
arpl
out
mov
jge
dec
mov
mov
out
loop
mov
nop
xor
sub
cs
mov
stos
ltr
or
cdq
add
loop
cmp
and
dec
push
or
sub
pop
sti
sub
fdivr
(bad)
dec
add
test
es
inc
sub
ret
call
inc
cli
sub
test
(bad)
in
mov
adc
dec
aas
sbb
retf
jmp
cs
(bad)
outs
retf
(bad)
jle
add
and
rol
xchg
imul
mov
ret
pop
cmc
iret
jb
mov
into
shl
test
cdq
shl
test
adc
call
mov
mov
jno
jle
mov
xor
mov
xor
pop
shl
mov
je
ss
scas
cs
sbb
mov
es
mov
wbinvd
push
scas
adc
xchg
jns
les
or
(bad)
cmp
and
test
adc
pop
shl
sbb
dec
sub
xor
dec
fisub
(bad)
xchg
into
cld
dec
fbstp
stc
push
not
and
xor
aad
inc
add
aad
and
dec
(bad)
mov
xor
out
sahf
jo
gs
cmps
cmp
adc
ins
inc
push
push
dec
mov
jae
call
(bad)
std
int
cli
mov
ds
dec
push
mov
add
sbb
pop
ror
mov
mov
call
xor
fbld
jnp
mov
dec
mov
jle
fst
fadd
mov
inc
jl
push
adc
xchg
aad
push
mov
sub
movs
and
or
sbb
cmps
mov
scas
pop
jmp
mov
daa
add
nop
add
lea
cmps
lahf
mov
in
movs
cli
sub
into
retf
outs
mov
xchg
pop
rcr
ins
jle
inc
pop
sub
imul
cwde
mov
dec
ror
fnstcw
add
test
inc
pop
inc
pop
xor
mov
das
dec
push
pop
jp
(bad)
mov
dec
cmp
push
xlat
inc
sbb
jp
add
xchg
out
test
jp
xor
je
stos
in
rcr
sbb
sti
stos
cli
pop
std
mov
ss
retf
jecxz
and
pop
mov
xlat
jge
cmp
outs
push
(bad)
std
dec
fnsave
lock
mov
inc
push
pop
inc
repz
xor
pop
push
push
sbb
les
inc
lods
lods
shr
jmp
push
clc
xor
pop
mov
push
push
lods
out
mov
call
cmps
push
mov
in
mov
mov
leave
fsubr
inc
sbb
pop
mov
xchg
inc
lods
fdivr
lock
fwait
call
adc
jbe
rcr
cmps
sti
(bad)
std
xchg
stc
push
in
or
cmp
lds
push
rcl
je
push
je
cmp
mov
inc
cmp
mov
gs
lahf
pcmpeqd
pop
jmp
loope
fwait
std
push
(bad)
sti
mov
das
push
mov
xchg
js
ins
push
dec
add
in
leave
sub
mov
mov
xchg
jmp
cld
sbb
fdivr
sub
ret
jle
retf
and
mov
push
(bad)
dec
dec
outs
cs
add
int
xchg
pusha
adc
test
add
sub
icebp
pushf
cmp
iret
es
jle
out
xor
ins
enter
jne
lods
xchg
push
hlt
aas
jecxz
adc
sbb
ret
stc
cmp
xchg
jmp
cmp
ss
dec
mov
xchg
or
cmp
add
mov
cmp
jno
lods
and
pop
jecxz
pop
fnsave
(bad)
push
sahf
xor
jnp
jo
imul
clc
xchg
xchg
jae
mov
std
shl
mov
sub
nop
cmp
mov
xchg
mov
sbb
stos
jle
pop
sti
dec
loopne
int3
jb
cmps
jmp
dec
xchg
aas
icebp
(bad)
out
mov
arpl
xlat
ja
cmp
jge
outs
(bad)
mov
push
sar
lods
or
es
or
xchg
shr
les
fldcw
sub
outs
push
lahf
pop
dec
lds
xchg
pushf
je
jmp
push
sbb
cmp
sar
adc
dec
cmps
jle
or
jbe
add
xchg
dec
aad
pop
aaa
fst
mul
fsubr
stos
mov
cmc
into
mov
jl
pop
pop
ins
sbb
loope
adc
inc
or
sub
or
ja
ins
scas
bt
jl
mov
jns
and
popf
pusha
or
and
std
adc
adc
aad
cmc
add
loopne
and
cmp
lahf
jle
(bad)
xchg
mov
sbb
mov
loopne
retf
cmp
rcr
out
xchg
aas
mov
or
sbb
jge
loop
and
xor
xor
jo
dec
inc
push
fistp
nop
push
mov
jae
adc
add
mov
pop
sahf
inc
inc
lds
fadd
add
aaa
xor
fs
mov
fcmovb
fisubr
mov
or
push
inc
loope
fs
fist
int3
pusha
inc
out
in
aas
adc
sbb
arpl
sub
and
gs
add
jae
fsub
les
pop
lods
enter
push
jno
push
ja
mov
inc
rcl
mov
add
call
outs
adc
xor
out
fs
sar
out
sub
mov
adc
sar
dec
inc
pop
mov
lock
inc
and
fstp
leave
sub
dec
les
adc
(bad)
(bad)
mov
mov
dec
and
sbb
iret
mov
(bad)
jle
mov
mov
cmp
ror
sbb
mov
mov
into
test
loope
xchg
mov
mov
xchg
add
lods
jl
mov
mov
iret
bswap
push
mov
retf
jo
pop
push
mov
aaa
out
push
xchg
xchg
xor
sbb
(bad)
mov
icebp
mov
mov
or
cmp
adc
dec
loopne
sbb
mov
and
mov
or
jl
mov
xor
les
mov
retf
sub
movs
repz
mov
ficomp
test
jle
retf
loopne
icebp
in
jg
popf
push
je
or
cmps
adc
jmp
sub
pop
push
inc
icebp
fnstsw
enter
xlat
fistp
pop
(bad)
movs
and
cwde
mov
scas
dec
(bad)
fnstenv
out
retf
ins
jae
add
leave
mov
shr
add
mov
jnp
pop
scas
cli
mov
gs
mov
loope
(bad)
cmps
mov
loop
ins
xchg
jmp
call
cwde
leave
mov
cmp
pushf
jecxz
and
data16
push
into
data16
cmp
or
rcl
ds
cmp
jmp
aas
jo
cmp
repz
cmp
xchg
mov
arpl
fcmovnbe
inc
add
jg
sub
inc
retf
outs
jge
mov
mov
test
xchg
xor
jl
arpl
xchg
rcr
outs
ja
shl
inc
adc
clc
mov
repz
dec
and
out
inc
sbb
sbb
(bad)
shl
mov
xor
push
loop
bound
add
add
mov
sub
shl
mov
and
ret
fsub
lea
push
pop
mov
xchg
mov
inc
es
aaa
adc
iret
xlat
scas
cld
dec
loop
push
pop
sbb
stc
imul
loope
inc
xchg
pop
(bad)
clc
jp
push
(bad)
cli
push
cmp
dec
cmp
sub
mov
shl
icebp
xchg
repz
xor
or
int3
push
jno
adc
into
bound
and
adc
mov
mov
pop
and
sub
and
inc
shl
sbb
sbb
jp
xchg
fcomp
shr
not
leave
mov
pop
xor
sbb
lds
iret
clc
and
into
ds
js
ret
scas
jp
pop
pusha
xchg
and
lods
and
mov
or
jp
pop
push
dec
sub
and
sbb
jg
mov
imul
call
mov
cmps
pop
cmp
(bad)
sbb
add
(bad)
das
ja
mov
int
add
inc
rep
pop
ins
aas
call
test
mov
mov
(bad)
lods
lods
sub
neg
shl
addr16
outs
push
dec
das
out
mov
outs
das
sbb
lahf
scas
dec
sbb
test
adc
cwde
fwait
mov
cmp
xchg
fwait
pop
pop
test
jb
dec
iret
mov
pop
xchg
aas
inc
clc
pop
push
in
shr
push
aam
mov
call
pop
in
lahf
lock
jmp
pop
xchg
(bad)
mov
neg
or
push
pop
ret
cld
int3
rol
pop
xor
pop
movs
sub
ja
mov
das
mov
scas
cdq
imul
arpl
adc
push
jb
scas
mov
retf
into
shl
inc
xchg
sbb
xor
xchg
xlat
into
cmp
pop
pop
sti
ja
fidivr
adc
bound
push
push
test
(bad)
sub
dec
cmp
out
xchg
retf
cmp
rcr
add
xchg
push
cmp
repz
leave
adc
cwde
stos
outs
add
aad
outs
mov
dec
mov
pop
repz
addr16
int
xchg
lea
push
and
cmps
std
or
daa
mov
(bad)
sbb
out
pushf
cmps
or
test
outs
clc
out
idiv
jo
es
cmp
out
fwait
dec
adc
sahf
xor
call
jns
xchg
push
push
mov
xchg
cmp
adc
loop
adc
test
test
adc
jmp
xor
inc
adc
out
dec
repz
pop
sub
cld
xor
xchg
xor
and
ds
mov
outs
sub
adc
(bad)
leave
outs
dec
mov
lahf
mov
aaa
pop
out
push
cmc
sbb
ret
mov
push
leave
fwait
js
popf
adc
sbb
mov
cmp
mov
sahf
fmul
test
jnp
dec
ins
neg
fs
and
fs
(bad)
adc
push
inc
and
xchg
inc
enter
js
fist
xchg
call
(bad)
out
scas
out
add
pop
xchg
pop
and
cmp
mov
pop
dec
jae
das
push
sbb
cmps
lahf
int
sbb
pushf
pop
mov
inc
pop
es
sbb
cmp
inc
leave
mov
xchg
loopne
(bad)
gs
sti
sbb
jl
aad
xor
aad
test
jg
imul
mov
addr16
repz
mov
aad
(bad)
clc
push
js
mov
(bad)
cli
pop
test
or
mov
call
jmp
arpl
dec
mov
mov
out
call
adc
loopne
pop
mov
fstp
or
mov
jl
ret
mov
adc
in
shr
mov
mov
popa
cmps
rcr
(bad)
popa
push
mov
imul
sub
std
add
ss
xor
pop
mov
sbb
aas
das
repnz
test
jmp
iret
push
push
adc
fst
lock
ss
(bad)
call
jns
sbb
fbstp
in
call
mov
mov
inc
les
add
fistp
out
sub
mov
xchg
mov
xchg
shl
dec
mov
aaa
test
(bad)
cmps
mov
or
mov
dec
push
fild
test
xor
inc
outs
xchg
shl
repnz
adc
jl
mov
pop
rcr
retf
push
xchg
popa
out
adc
cld
jns
jmp
repnz
fmul
das
idiv
loopne
nop
sub
pop
adc
lods
jmp
clc
int3
daa
adc
int3
mov
push
and
pusha
add
xor
jge
sbb
sar
jo
inc
push
ins
popa
xchg
inc
les
fild
xlat
psrad
dec
js
mov
ja
sbb
sub
movs
popf
jecxz
add
push
mov
add
pop
mov
addr16
pop
ss
imul
cmp
mov
pop
push
cdq
cwde
jecxz
ja
inc
pop
inc
fld
sub
push
jle
scas
jmp
xor
lea
mov
fcomp
xor
mov
out
frstor
aam
mov
jb
cmp
data16
shr
push
(bad)
int3
xchg
push
cmp
in
fnsave
mov
ret
(bad)
popa
cmp
pop
daa
pop
inc
inc
xlat
or
test
(bad)
push
push
xor
mov
lea
inc
cmp
and
lods
imul
adc
adc
push
mov
js
repz
xor
sub
pop
inc
xchg
and
cli
lds
jb
shl
loope
fidivr
dec
ins
fild
mov
mov
add
loopne
push
pop
shr
sub
push
out
ret
adc
mov
ret
int
scas
mov
cmp
mov
loopne
int
mov
cmp
call
in
popf
pusha
push
loop
pop
pop
push
retf
aas
imul
jl
lea
rol
fcom
push
push
shl
lds
ja
inc
bound
outs
pop
call
xchg
mov
cmp
xor
ficom
fcom
hlt
add
jmp
loopne
push
icebp
adc
jns
xchg
enter
mov
ins
xchg
pusha
inc
std
mov
mov
cmp
scas
cwde
dec
jecxz
aaa
movs
sti
aaa
sahf
fwait
lods
out
outs
fnstsw
pop
scas
cmps
clc
in
js
mov
hlt
in
in
es
pop
and
pop
les
add
fcmovne
jbe
mov
mov
jmp
inc
push
pop
mov
add
shl
xor
mov
push
fiadd
and
cmp
push
dec
mov
(bad)
mov
shl
(bad)
mov
inc
dec
dec
movs
pop
fsubr
xchg
sub
add
mov
call
xchg
adc
mov
lods
loop
push
jo
adc
mov
lahf
mov
add
retf
fiadd
sbb
fwait
loop
pop
aad
xor
cmp
cmc
push
call
fstp
or
push
and
test
push
cmp
ret
int3
int3
adc
and
shl
psubd
xchg
mov
int
sbb
(bad)
call
(bad)
(bad)
ds
ins
jo
mov
cmp
adc
lgs
std
push
addr16
mov
jno
push
and
pusha
add
push
cmp
movs
cmp
and
adc
xor
call
jno
push
inc
push
jmp
mov
fldcw
loope
xchg
sbb
mov
push
adc
aad
inc
xchg
mov
fiadd
push
push
cmp
inc
jg
jge
(bad)
jb
push
jae
rcr
(bad)
shl
out
arpl
inc
stc
add
xor
xor
pop
mov
aaa
jne
mov
dec
mov
(bad)
loop
(bad)
hlt
add
pop
fbstp
(bad)
pop
mov
mov
xchg
pop
sar
cdq
in
add
mov
and
add
inc
fcom
retf
dec
jne
repnz
test
cmp
jmp
int
ins
push
or
fcom
dec
cmps
jge
cmc
call
js
cmp
sbb
out
inc
fadd
or
mov
imul
mov
jnp
or
shl
inc
cmp
in
inc
js
xchg
xor
sbb
shl
sti
pop
(bad)
jo
mov
movs
jp
adc
and
rcl
or
or
xchg
test
fadd
lea
push
mov
lea
ror
xchg
mov
ss
cs
mov
cmps
or
das
sbb
xor
pop
jmp
cmps
adc
cmp
data16
dec
mov
push
out
mov
jo
push
inc
mov
mov
xlat
pusha
inc
sbb
jb
xchg
xchg
call
push
fadd
and
ret
pop
imul
sub
movs
test
jne
shl
out
nop
and
or
fiadd
pop
ins
xor
adc
jmp
inc
xlat
mov
rcr
ret
das
xor
xchg
or
lea
scas
retf
repnz
or
sti
push
ror
xor
pop
fidivr
fldcw
fwait
sbb
push
stos
(bad)
mov
lds
sbb
es
dec
adc
xor
sub
outs
nop
adc
xchg
push
xor
push
jno
fsubr
jb
cmps
nop
sub
add
in
cld
and
push
stos
push
pop
xor
push
pop
scas
cdq
push
(bad)
mov
out
aaa
mov
jge
lods
and
out
int
or
mov
movs
das
xor
pop
jo
call
inc
add
and
xchg
scas
loopne
or
inc
push
sbb
cmp
cmps
add
mov
in
xor
loope
xchg
data16
aas
or
and
in
inc
pop
jmp
std
jae
lods
cdq
pop
mov
out
aas
cwde
aaa
mov
adc
jle
add
jne
sbb
pop
jg
xlat
mov
retf
add
sbb
dec
(bad)
mov
push
cmps
ins
adc
es
cdq
into
retf
rcl
cli
push
popf
sti
test
pushf
xchg
mov
dec
pop
cmc
out
lods
and
add
nop
les
adc
mov
push
shl
adc
pop
test
or
outs
adc
shl
loopne
mov
cmc
dec
(bad)
std
jnp
cmp
dec
jge
out
jge
mov
ss
mov
xchg
test
sbb
jo
add
mov
int3
add
pop
and
adc
(bad)
sbb
dec
enter
mov
retf
push
jmp
push
ins
and
mov
daa
rcl
add
jmp
dec
xchg
push
daa
mov
mov
sub
iret
cmp
pop
jecxz
xchg
sbb
pushf
imul
jecxz
pop
push
(bad)
xor
mov
cmp
in
inc
js
mov
adc
push
in
rcr
mov
ja
daa
inc
adc
xchg
pop
test
sbb
gs
sar
js
popa
movs
outs
(bad)
push
mov
jmp
sbb
push
jmp
movs
ss
(bad)
pusha
mul
adc
mov
mov
cwde
dec
pushf
sub
mov
loope
dec
jo
xor
mov
push
push
pop
shr
dec
dec
sbb
sub
and
pusha
imul
outs
into
sub
add
stos
mov
push
pop
out
jo
std
adc
pop
adc
xchg
pop
mov
shl
pushf
loope
push
jae
or
jp
mov
rcl
loop
sbb
jmp
cmps
les
inc
cdq
vmread
xchg
gs
sbb
xchg
(bad)
fsub
dec
scas
icebp
(bad)
jo
xchg
in
inc
sbb
ins
(bad)
mov
adc
mov
shl
sbb
out
aas
(bad)
mov
push
ja
dec
retf
in
cld
rol
call
mov
mov
pmuludq
rol
or
adc
stos
adc
jns
aam
jl
mov
mov
jb
fndisi(8087
seta
pusha
push
or
xchg
pop
mov
mov
mov
xor
ror
scas
push
int
adc
mov
mov
jnp
mov
mov
jnp
jns
call
inc
or
dec
sti
mov
and
es
popa
ss
inc
adc
xchg
out
cmp
rol
mov
and
jl
xchg
inc
std
adc
push
outs
dec
mov
push
mov
mov
xor
loopne
pop
movs
aam
push
sbb
imul
cmp
fld
add
xchg
xor
sub
dec
stos
cmp
mov
adc
pop
pop
mov
push
hlt
push
fcmovnb
fadd
add
adc
cwde
ret
rcl
(bad)
fbstp
inc
or
push
jmp
retf
cmp
imul
movs
jmp
fs
leave
ret
push
ins
cmp
dec
int3
xchg
les
pop
and
cdq
daa
lods
lds
adc
pop
add
aam
sti
or
add
jge
push
scas
or
or
(bad)
sbb
dec
in
mov
sbb
cwde
mov
lock
movs
mov
jae
lods
inc
xor
cli
pop
cmp
nop
and
or
add
xchg
test
add
and
fsub
mov
fadd
xor
imul
and
sahf
in
fcom
or
inc
hlt
fisttp
das
lods
in
mov
and
out
inc
adc
fisub
pusha
aad
sbb
and
fwait
jno
in
fwait
cmp
inc
mov
sahf
inc
cs
cli
mov
rcr
push
and
imul
cmc
hlt
xchg
lock
lock
repz
jge
into
adc
pop
add
daa
rcl
and
fst
pop
add
sti
cmp
inc
scas
addr16
outs
clc
add
cdq
adc
and
jge
add
cmps
xchg
and
(bad)
dec
push
in
xlat
inc
sbb
jns
aam
mov
dec
pop
mov
jo
loopne
and
leave
dec
fsubr
lahf
jns
or
test
imul
int
popa
shl
and
dec
or
(bad)
push
pop
dec
add
mov
and
jne
mov
in
fwait
out
stos
data16
shl
clc
fsub
bound
aam
je
cmp
aam
aaa
aas
push
cmp
cmp
sbb
add
xchg
jle
das
or
jmp
pop
cwde
push
xor
adc
movs
inc
movs
sub
arpl
and
adc
repnz
xchg
xor
pusha
mov
ss
jne
cmp
sbb
jle
ja
dec
out
lods
pop
aad
cs
pop
mov
sub
retf
outs
aas
dec
rcl
pop
fwait
adc
sbb
xchg
imul
(bad)
mov
(bad)
push
fisubr
fiadd
(bad)
xchg
sub
cmp
xor
pop
mov
mov
popa
xor
cwde
cld
ja
lock
aad
in
scas
mov
ret
hlt
xchg
(bad)
loope
jnp
adc
sub
mov
stc
cmps
mov
and
pop
push
lods
sbb
aam
cmp
add
repnz
fld
(bad)
iret
sbb
mov
cmp
fld
in
sub
pop
pop
mov
mov
cmp
dec
subps
movs
int
xor
push
pushf
cmp
pop
scas
push
div
mov
xor
dec
mov
sbb
icebp
sti
mov
out
and
cli
cmp
fmul
retf
shr
and
push
mov
add
push
inc
int3
mov
outs
into
jmp
int
jp
cld
mov
retf
push
adc
adc
push
out
xchg
ficom
out
xchg
pop
out
jp
mov
clc
loopne
popf
pop
jbe
cdq
pop
test
mov
xchg
xchg
pop
mov
mov
xor
sti
repnz
loop
in
pop
nop
mov
retf
test
dec
sub
(bad)
fldcw
xchg
cmp
gs
xchg
pop
dec
daa
mov
fwait
mov
or
inc
and
mov
adc
fdivr
sbb
sub
shr
pusha
add
jns
lds
pop
inc
div
pop
pushf
int3
test
push
xor
sbb
or
mov
or
and
push
std
in
call
push
push
mov
jo
cs
and
sbb
sub
out
xchg
jl
jge
push
mov
divps
aaa
rcl
iret
cld
aas
aad
cmps
popf
jb
loop
leave
mov
ret
loop
adc
rcl
int3
test
dec
push
xchg
xchg
add
jbe
lahf
dec
repz
icebp
push
test
test
xchg
xchg
loope
mov
push
mov
imul
iret
sub
mov
inc
mov
cmp
in
out
mov
mov
ret
bound
mov
addr16
and
fisub
pop
mov
cmp
lods
cmp
loope
push
jnp
leave
adc
vpshufd
sub
mov
fstp
push
call
cmc
mov
fsubr
pop
ret
fld
movs
cdq
xor
test
pop
fnsave
cmps
and
push
add
out
push
rcr
fwait
inc
pop
push
scas
sbb
loopne
ins
jge
push
xchg
jmp
xor
clc
push
or
and
es
and
xchg
(bad)
int
mov
xor
out
imul
clc
push
retf
mov
popa
int
pop
addr16
inc
jns
popa
jne
fwait
mov
mov
xchg
test
data16
stc
stos
adc
push
adc
mov
pop
pop
dec
in
jmp
(bad)
fdivr
xlat
push
and
cmp
jmp
jnp
mov
fnstsw
enter
jp
adc
(bad)
retf
sbb
or
mov
lahf
jno
test
cmp
out
pop
cdq
loopne
jmp
aam
sub
dec
rcr
mov
rcl
cmp
enter
inc
mov
dec
mov
outs
xlat
mov
retf
movs
inc
cmp
sub
gs
push
lods
jne
push
adc
ror
cmp
push
cmp
call
leave
xchg
loopne
jecxz
test
jb
fmul
xor
sbb
xchg
jmp
movs
fs
pushf
stc
xlat
nop
and
int3
rcl
jne
pusha
jle
(bad)
aad
dec
add
(bad)
loopne
pop
adc
or
xor
mov
pop
xlat
xchg
mov
xor
push
or
cli
clc
int
add
imul
inc
xchg
xchg
jne
fdivr
or
aas
jae
mov
adc
js
sbb
or
std
cli
mov
mov
mov
xor
(bad)
push
dec
mov
aas
add
out
rcl
mov
loope
iret
(bad)
cs
loope
mov
test
ss
imul
(bad)
cwde
popa
pop
or
test
ret
jae
push
dec
add
dec
stos
adc
or
and
xor
mov
clc
inc
jle
lock
repz
push
popa
add
and
dec
cwde
xchg
leave
fsub
pop
retf
add
data16
nop
add
(bad)
loop
jecxz
mov
daa
pop
xchg
or
pusha
and
xchg
pushf
fsubrp
sbb
jb
mov
jmp
push
mov
out
mov
sub
push
popf
imul
je
mov
and
or
mov
and
(bad)
or
mov
or
push
scas
pop
mov
inc
sar
fistp
sbb
mov
in
jns
mov
jno
pushf
scas
aaa
sbb
test
jno
mov
leave
not
inc
push
add
mov
sar
push
(bad)
jnp
cmp
pushf
ins
jnp
jge
out
or
(bad)
out
or
sub
pop
(bad)
push
jo
push
adc
lods
fs
retf
popa
outs
mov
(bad)
minsd
or
adc
adc
mov
sbb
sub
(bad)
mov
call
mov
add
jl
imul
imul
sbb
fnstenv
pop
scas
je
call
fadd
add
out
pop
pop
and
inc
sub
or
movups
ret
iret
and
or
shl
shl
popa
mov
sub
enter
in
xchg
addr16
mov
adc
and
push
cmc
icebp
rcr
add
das
pop
mov
xchg
pop
in
cmps
je
fstp
xchg
xchg
pop
out
push
jae
imul
cli
inc
sti
ins
jge
xchg
ja
adc
add
lahf
cwde
mov
bnd
push
inc
or
mov
clc
fxch
(bad)
pop
cmp
out
pop
cmp
(bad)
sub
adc
test
mov
mov
xchg
xor
imul
bound
outs
xor
adc
jbe
adc
aas
sub
movs
mov
lods
sub
xchg
jl
imul
loope
aam
sbb
xchg
je
push
dec
sub
jmp
and
mov
psubsb
inc
dec
push
sub
ror
stc
dec
or
outs
aad
adc
out
jbe
mov
and
fsubr
ret
cmp
mov
scas
popa
cli
lods
adc
test
sbb
or
sar
shr
lock
or
pop
jg
test
pop
fwait
xchg
pop
into
mov
xlat
cld
nop
ds
and
stc
fwait
xor
in
dec
pop
in
retf
stos
je
add
mov
jl
mov
dec
push
add
push
add
ss
xchg
fs
jecxz
inc
mov
pop
call
jmp
pop
mov
add
dec
mov
jns
adc
push
sahf
(bad)
neg
shl
ucomiss
and
adc
jmp
loope
out
leave
enter
dec
ja
mov
sbb
jne
fistp
repnz
cmp
xor
sbb
dec
and
mov
xchg
es
out
(bad)
xchg
push
jmp
sbb
cwde
retf
repnz
clc
movs
jecxz
loop
jg
fst
aas
cmc
test
xlat
rcr
xchg
dec
push
dec
inc
adc
in
push
test
jbe
fs
sub
xchg
and
inc
lahf
stc
add
cmp
(bad)
ror
mov
cmp
out
std
jbe
bound
xchg
push
mov
inc
or
fucomp
call
in
and
vsqrtpd
jns
mov
ret
mov
in
loopne
out
jmp
or
loope
jne
pop
cmp
mov
and
aam
les
sahf
add
inc
sbb
fcomp
test
gs
pop
xor
xchg
dec
pop
test
mov
in
add
add
add
sub
cmp
int
and
test
mov
pop
test
sbb
add
ret
(bad)
push
mov
rcl
test
test
std
and
pop
outs
mov
mov
rol
xchg
cmps
mov
cmp
mov
dec
sub
rcl
in
shl
cmp
ja
fld
push
or
int3
aas
sub
popf
rcr
jo
scas
or
add
dec
mov
push
lds
add
jno
in
clc
dec
leave
fs
pop
push
nop
les
mov
dec
pop
repz
repz
push
jnp
pushf
jmp
cs
xor
cs
jne
add
push
and
loope
mov
jle
test
xchg
imul
cwde
pop
addr16
xchg
pushf
mov
pop
popf
push
mov
cmp
je
push
push
dec
xchg
ss
adc
pop
out
mov
fdivr
or
mov
in
aad
sahf
std
cli
fsub
adc
adc
pushf
scas
sub
stc
std
adc
mov
fisubr
inc
push
cmp
std
mov
stc
xor
scas
push
loop
popa
shl
(bad)
retf
xchg
sub
scas
outs
jmp
sbb
adc
fsubr
sub
jae
in
test
test
out
jne
add
xor
(bad)
dec
jb
sbb
(bad)
mov
xchg
jmp
xchg
dec
pop
and
dec
dec
cdq
stos
int
stos
aad
ins
pop
mov
(bad)
in
jg
loop
and
shl
push
div
sti
popa
add
xchg
mov
mov
stos
popf
aas
xor
or
dec
cmp
xor
test
loopne
dec
test
rcl
sub
dec
in
lds
outs
mov
mov
cs
retf
popa
cwde
add
je
push
(bad)
addr16
or
and
fisub
stos
inc
pop
inc
loope
leave
push
dec
shr
mov
mov
out
xchg
add
pop
ins
lods
xchg
xchg
ficom
loopne
push
push
push
(bad)
movs
in
adc
xor
mov
leave
xor
pop
out
push
mov
push
je
(bad)
fisttp
fmulp
xor
xchg
jecxz
xchg
xchg
loopne
jmp
fld
sbb
inc
adc
add
and
lods
cmps
pop
mov
xchg
mov
or
mov
ficom
into
out
and
retf
in
mov
pop
outs
xor
or
fdivr
add
add
mov
std
fs
seta
test
les
cmp
push
xchg
jb
ds
and
pop
xchg
sbb
mov
mov
adc
cmps
xchg
cmp
mov
cmp
(bad)
fiadd
outs
add
pop
xor
jae
addr16
and
jl
icebp
sub
pop
jb
mov
add
jmp
cmp
jg
(bad)
and
sahf
popa
shl
out
scas
sahf
int3
imul
xor
sub
aaa
inc
ins
aam
mov
sbb
stc
sar
dec
pushf
inc
pop
mov
mov
jbe
sub
nop
imul
jle
daa
and
fcomip
ss
sar
cmp
inc
pusha
sbb
adc
and
sub
pop
and
add
imul
inc
xor
cmc
data16
fldenv
and
imul
sub
xchg
mov
movs
leave
xchg
mov
jge
mov
js
adc
jo
lea
cmp
add
aad
fsub
inc
out
call
ins
inc
dec
xchg
loope
lods
popa
add
aam
mov
sub
cwde
icebp
mov
push
add
in
arpl
dec
(bad)
push
lock
shl
enter
push
pop
outs
sub
xor
cmps
jp
dec
ins
push
and
in
call
pop
lods
jle
add
(bad)
sbb
call
sbb
cmps
mov
cmp
(bad)
cwde
or
movntq
jne
test
xchg
test
movs
mov
cmps
fsub
xchg
fidiv
dec
inc
fsubr
in
sub
adc
pop
mov
and
sahf
fucomip
jge
dec
in
pop
(bad)
push
fs
(bad)
aam
lock
cmc
(bad)
sahf
jno
mov
sar
jge
adc
loope
add
in
test
in
loopne
mov
icebp
into
mov
adc
leave
push
or
fs
dec
push
jmp
push
test
or
pushf
cmps
inc
adc
mov
pop
repnz
outs
inc
mov
xchg
pop
xor
sub
stos
cwde
jp
loop
cmps
jae
int3
addr16
xor
pop
sub
cmp
jge
xchg
mov
pop
sub
or
jno
push
xor
mov
fwait
out
adc
or
mov
imul
jg
leave
or
jae
xchg
fadd
pushf
add
inc
lahf
in
push
jmp
repnz
das
xchg
push
(bad)
es
cs
clc
inc
fsubr
xchg
xor
(bad)
xor
(bad)
test
ds
adc
jns
mov
or
sbb
cmp
mov
rcl
ins
push
sub
push
fst
leave
jp
sbb
js
inc
ss
mov
xchg
loope
push
dec
or
enter
mov
leave
xchg
pop
add
cmp
xchg
leave
sti
sti
dec
dec
enter
and
and
aad
mul
adc
pop
clc
ret
xchg
popf
sar
fisttp
mov
fld
ss
push
sub
jbe
out
shrd
dec
xchg
repnz
stc
adc
or
call
gs
ja
(bad)
lahf
arpl
je
cmps
add
or
movs
nop
jmp
add
pop
xchg
cmps
dec
push
daa
sub
jl
pop
(bad)
mov
mov
xrelease
rcr
mov
mov
sbb
sub
shr
cwde
mov
or
stc
neg
cmp
pop
jb
mov
jb
fcom
fimul
mov
ds
and
inc
pushf
push
enter
or
loope
into
test
les
adc
stc
pop
xchg
adc
adc
nop
pop
jnp
mov
cmp
mov
sub
xchg
mov
jmp
repz
fmul
hlt
push
fwait
push
inc
lea
mov
mov
fnstenv
push
ret
pop
mov
dec
(bad)
test
inc
push
js
arpl
int
push
or
jne
sub
xchg
scas
test
jns
xor
push
mov
loope
pop
cmp
mov
inc
pop
clc
xchg
sub
outs
jb
frstpm(287
sub
(bad)
push
mov
xor
sar
mov
push
mov
hlt
inc
mov
(bad)
or
add
xchg
mov
lea
mov
mov
dec
lods
push
test
and
mov
mov
retf
fdivr
aaa
jb
adc
fisub
xor
or
hlt
iret
inc
movs
std
dec
push
inc
dec
sbb
mul
and
or
aad
xchg
mov
inc
push
inc
jecxz
xchg
xchg
mov
shr
mov
xchg
(bad)
repz
jmp
pop
sub
stc
iret
fnstsw
adc
ret
adc
cwde
fwait
loopne
sbb
jae
sbb
rcr
push
lea
sbb
in
ds
add
inc
xchg
cmps
sub
stos
dec
sbb
std
sbb
stc
out
pusha
or
jae
xor
in
xor
mov
push
cli
or
test
loope
aad
jmp
push
fisttp
imul
loope
mov
mov
pop
xor
sub
jbe
sub
stos
sub
push
mov
arpl
sub
pushf
fwait
lock
inc
mov
and
cmp
inc
(bad)
scas
mov
je
mov
add
cmp
gs
(bad)
das
sbb
repz
xor
inc
pop
xor
xchg
ss
out
pop
int
jecxz
pop
sub
hlt
rol
jb
mov
dec
mov
hlt
push
into
not
mov
or
sub
mov
popf
mov
push
test
mov
jp
cld
sar
xlat
leave
xchg
mov
aam
imul
adc
adc
push
cmp
fild
in
jb
scas
or
scas
jo
push
icebp
faddp
mov
jmp
enter
adc
mov
adc
xor
jnp
or
addr16
cmp
aaa
jae
pop
cmp
or
inc
stc
adc
jbe
nop
add
call
mov
xor
std
push
jb
sbb
mov
xchg
xchg
jp
scas
leave
movs
(bad)
lock
fucomip
(bad)
mov
push
in
les
div
cmp
push
sub
mov
ret
addr16
(bad)
push
pop
leave
dec
xor
xchg
mov
and
sahf
lods
xlat
jbe
sahf
inc
(bad)
cdq
xlat
dec
ins
outs
add
xor
std
les
fcmovnbe
or
mov
xchg
les
dec
aaa
imul
or
iret
adc
bound
mov
mov
aaa
inc
pop
mov
dec
in
cmps
dec
ret
or
mov
mov
cmps
arpl
leave
aaa
jmp
inc
cmp
push
pop
mov
mov
xchg
and
push
je
(bad)
xor
push
or
lods
cdq
or
fwait
lea
hlt
mov
dec
and
gs
push
das
sub
fincstp
test
loope
mov
add
fld
adc
jp
xchg
bound
loopne
aad
mov
je
popa
inc
xor
mov
cmp
push
jns
(bad)
cmp
push
sbb
shr
pop
sub
add
jbe
push
dec
or
and
lahf
dec
icebp
hlt
xchg
iret
or
jmp
cwde
push
imul
jo
dec
or
les
jo
test
and
adc
xchg
pop
add
popa
gs
jp
push
jns
cli
das
movs
rcl
inc
jge
mov
fcmovu
sub
jns
clc
enter
stos
loopne
push
jnp
mov
popf
es
loope
mov
shr
fdivr
leave
pop
(bad)
sub
push
pop
movs
xchg
popa
mov
xor
or
stos
mov
inc
or
lahf
pop
popf
add
hlt
imul
and
push
(bad)
test
sbb
aam
repz
dec
fstp
clc
or
cmps
shl
repnz
cmp
in
mov
and
mov
jns
shr
sub
shl
sahf
or
addr16
jg
call
jp
xchg
pop
lds
jnp
xor
pushf
mov
push
mov
push
dec
jmp
inc
xor
pop
shl
and
stos
(bad)
dec
dec
sti
stos
ins
ja
int
jmp
dec
retf
sub
ja
sbb
pop
dec
ss
int3
add
mov
lahf
test
cwde
or
xchg
jnp
(bad)
out
mov
pop
dec
xor
xor
sub
in
rol
iret
in
xchg
bound
adc
sar
outs
pavgb
jmp
dec
pop
ins
lahf
xor
jns
jl
ret
ror
das
dec
lock
jle
push
rcl
or
neg
(bad)
mov
aam
(bad)
addr16
inc
(bad)
jmp
icebp
fs
pusha
lock
ins
fwait
hlt
ja
mov
mov
sti
sti
test
lock
lds
push
push
xor
fist
sbb
ds
mov
stos
outs
dec
std
mov
pop
(bad)
mov
mov
fsub
or
popa
(bad)
dec
pop
mov
imul
retf
mov
test
add
cmp
sub
dec
add
dec
pop
ss
out
pop
add
test
jnp
mov
out
jg
jge
inc
or
dec
and
aad
mov
test
ret
adc
dec
xchg
stos
inc
daa
scas
fadd
shl
in
ins
inc
loope
mov
cmps
inc
xchg
je
cmp
mov
(bad)
or
lahf
add
mov
shr
imul
out
aam
mov
jbe
in
add
push
icebp
cmp
lods
lods
jge
fwait
dec
cwde
cdq
lods
pop
jge
out
xor
or
sub
es
xchg
cli
jbe
mov
xor
xchg
fsubr
mov
mov
(bad)
or
and
adc
repz
into
jns
les
pop
jb
xlat
xor
cwde
in
sub
xor
mov
out
(bad)
imul
fcomp
outs
lea
and
ss
dec
add
push
jge
jl
outs
xor
fadd
xchg
dec
mov
mov
mov
cdq
xor
mov
arpl
mov
leave
pusha
cld
les
inc
call
imul
cmp
jnp
inc
lahf
adc
movs
xor
jge
iret
push
jno
pop
pop
push
jno
shl
nop
add
popa
cmp
ror
xor
or
les
sbb
adc
and
inc
ret
fldenv
pop
out
push
cmp
mov
push
mov
(bad)
rol
adc
sub
or
daa
in
push
pop
or
mov
enter
stos
invd
xchg
pop
sbb
movs
adc
outs
nop
or
pusha
add
xchg
adc
imul
adc
scas
mov
xchg
push
les
stos
jae
outs
sbb
sbb
lods
fisttp
js
sub
jecxz
push
fsubr
mov
mov
adc
outs
xor
in
ja
jecxz
mov
popf
mov
push
movs
fidivr
ds
pushf
icebp
sub
daa
jmp
dec
xor
outs
cmc
fisub
push
test
stc
inc
aad
dec
nop
dec
js
adc
mov
sbb
mov
jbe
xchg
paddusb
mov
lods
mov
pusha
test
fwait
pop
mov
cmp
cmc
ds
cmp
sub
icebp
out
mov
repz
jnp
xor
int
mov
xchg
test
xor
(bad)
mov
mov
sbb
ds
xor
sahf
cmp
imul
in
xlat
(bad)
jle
cvttps2pi
fstp
xchg
outs
lods
(bad)
sbb
movs
cmc
pop
sub
mov
inc
xor
or
xor
fnstsw
or
jne
add
ret
ror
test
xchg
mov
mov
fisubr
mov
test
xchg
xor
pop
dec
cmp
sub
push
xor
call
pop
loope
sbb
into
dec
sbb
test
add
int3
cld
iret
ds
aas
adc
pxor
dec
loop
sub
hlt
ins
pop
pop
mov
xchg
ins
xlat
iret
xlat
jno
xchg
repz
inc
mov
inc
mov
ins
inc
cmp
push
(bad)
(bad)
mov
xlat
je
mov
push
mov
fstp
cmc
dec
pop
lods
dec
xor
or
lods
and
out
stc
cmc
xlat
pop
fucom
and
and
lods
dec
mov
cmp
(bad)
dec
sub
ds
xor
xchg
popa
xor
or
cmp
in
stc
or
mov
stos
sub
add
pop
out
push
and
dec
mov
clc
fistp
movs
inc
cdq
mov
stc
pop
pop
daa
pop
add
sub
movs
std
into
stos
and
sbb
ret
sub
lds
cmp
out
or
mov
dec
push
pusha
adc
out
sti
lea
add
retf
sti
das
shl
xlat
mov
cwde
jge
xor
ds
cmps
fisttp
mov
pop
frstor
cld
mov
pop
pop
cwde
cdq
arpl
aaa
ins
jmp
outs
pop
loop
or
push
jo
or
jl
outs
xor
push
pop
jae
fcomp
data16
rcpps
sub
cmc
ins
add
cmp
rcr
adc
pop
or
mov
iret
mov
jg
sahf
mov
push
cmp
dec
xchg
ficomp
inc
xchg
fdivr
add
movs
add
or
and
mov
add
repz
clc
into
hlt
test
sub
pop
add
mov
cmps
adc
dec
hlt
out
add
dec
mov
fld1
xor
jge
retf
cmp
out
mov
xchg
ja
xor
and
repnz
adc
test
cmp
dec
aam
xor
mov
addr16
inc
mov
jb
sub
xchg
(bad)
cmp
pusha
sbb
jle
jmp
scas
call
rcl
int3
mov
ret
cwde
ins
pop
outs
xchg
fs
stos
scas
aas
gs
cmc
and
test
jg
cli
mov
lds
shr
ret
push
adc
push
push
mov
push
rcl
repnz
jmp
cmp
add
and
jae
push
adc
pop
inc
jns
inc
cmps
cmp
cld
fild
aas
push
or
es
scas
shl
mov
outs
xchg
or
stc
mov
ffree
fidiv
push
aad
fsubp
stos
mul
fs
repz
sub
jmp
pop
sahf
sahf
mov
jae
mov
clc
mov
push
in
push
leave
mov
in
cmp
adc
fsubr
sahf
or
xor
test
jmp
push
xchg
and
pushf
div
mov
mov
ret
scas
bswap
jae
es
sub
mov
jbe
cmp
and
out
int
or
cmp
ficom
mov
cmps
sub
adc
cmp
push
jmp
pop
cmp
clc
jmp
inc
pop
rcl
or
mov
outs
daa
sahf
imul
out
and
xor
xchg
inc
pop
adc
or
push
mov
enter
retf
cs
mov
push
loope
movs
mov
retf
xor
mov
mov
lock
jge
hlt
in
stos
add
cmp
or
add
cmp
int
pop
sbb
jbe
jae
sahf
fisttp
imul
and
outs
call
add
ret
call
mov
cli
in
icebp
icebp
sub
shl
test
(bad)
or
mov
or
and
jno
and
jmp
imul
fistp
gs
ds
fwait
xlat
sub
mov
cmp
mov
out
xchg
sub
xchg
(bad)
icebp
cli
pop
mov
ss
and
cmp
fcmovnu
(bad)
movs
inc
sar
sbb
sub
jl
add
les
loop
xchg
push
xchg
mov
ffree
add
fsub
sub
data16
xor
fisttp
and
das
xchg
sub
inc
daa
ins
mov
call
sub
ja
mov
or
cmp
and
scas
inc
cld
rep
loopne
ds
dec
sub
add
cdq
in
fisub
imul
cmps
adc
lock
adc
pop
pop
sbb
popa
mov
add
cmc
retf
lods
and
stc
xor
ss
or
test
fisttp
xchg
cmp
pop
mov
xchg
xor
(bad)
mov
inc
adc
fnstsw
ins
leave
aam
sbb
inc
and
bound
add
stos
addr16
mov
push
xbegin
test
les
jge
inc
(bad)
addr16
jae
test
dec
inc
add
push
lahf
sub
xchg
jae
cwde
xchg
inc
nop
adc
fistp
ss
adc
int3
in
jmp
xor
call
jno
pop
cli
div
sti
adc
mov
inc
xor
retf
ror
jecxz
loopne
xlat
cmps
add
mov
and
(bad)
mov
ja
pop
jp
es
dec
mov
push
ror
ror
cmp
mov
rcr
in
daa
jnp
movs
arpl
pushf
sar
arpl
and
out
lock
cmps
push
call
fmul
push
out
lods
xchg
and
mov
mov
add
xor
daa
add
ins
pushf
mov
cmp
push
mov
mov
push
cmovle
sub
mov
push
add
xor
(bad)
or
cmp
in
jbe
mov
jns
(bad)
into
push
jnp
imul
sbb
or
aam
retf
cmps
adc
fidiv
jge
test
pop
push
jae
jle
nop
cmp
or
push
inc
mov
fadd
ret
js
jnp
cwde
rcl
pop
leave
cmp
xchg
cmp
pop
pushf
sbb
sbb
mov
int3
mov
sub
push
pop
mov
adc
ins
pop
push
mov
push
jl
shl
in
out
mov
push
mov
dec
or
cmp
rcr
rcr
add
or
sbb
inc
adc
sub
and
xchg
fild
or
mov
xor
and
push
dec
mov
call
lea
mov
inc
sub
retf
jns
icebp
es
aam
in
stos
(bad)
gs
mov
adc
in
pop
xchg
jb
mov
xchg
dec
jnp
xchg
xlat
fdiv
add
test
loopne
or
xor
and
or
pop
rol
pop
mov
scas
and
push
or
ret
pop
sub
push
xchg
lods
jno
mov
pop
fadd
test
ret
push
mov
or
das
and
pop
dec
mov
jnp
mov
cmp
xor
sbb
xor
cmps
xchg
loopne
mov
adc
and
rcr
mov
ffree
dec
inc
inc
jnp
adc
sub
dec
pop
lock
pop
inc
in
les
stc
xlat
add
push
stos
dec
out
mov
and
jecxz
cwde
pop
mov
push
aas
test
js
ror
adc
call
shl
mov
pusha
cld
mov
sbb
sbb
lods
xchg
rcl
xchg
aaa
adc
nop
fcomi
fwait
hlt
fwait
mov
clc
and
in
mov
jns
mov
mov
dec
pop
out
int3
push
in
les
(bad)
push
cwde
imul
inc
jle
call
dec
push
jg
callw
jle
les
loopne
and
add
popa
je
ss
inc
adc
addr16
lds
mov
pop
mov
in
out
ins
mov
sbb
xor
movs
sbb
in
xchg
sti
cmp
or
mov
jae
lldt
ret
test
fnstsw
adc
push
(bad)
aad
stos
bound
ret
popf
fmul
das
retf
push
fwait
pop
and
adc
push
je
movs
icebp
sbb
push
jne
jno
fmul
aas
push
jg
fidivr
test
not
ret
mov
cmp
in
push
jb
repnz
dec
push
mov
psubw
call
loop
cmps
sbb
and
cmp
mov
rol
stc
call
jg
sub
or
lods
xchg
xchg
test
pusha
call
cwde
rol
inc
movs
and
add
jae
sar
jo
push
arpl
dec
or
repnz
cmp
adc
rcr
lahf
and
shr
mov
es
test
adc
stc
xchg
xor
rep
pop
adc
sahf
adc
(bad)
dec
mov
push
xchg
pop
sub
fdivr
jbe
pop
adc
int3
rcr
push
dec
stos
xchg
mov
adc
mov
xor
cmp
push
aad
dec
mov
push
outs
sbb
mov
int3
movs
push
cmp
cmp
jmp
mov
jnp
pop
in
xchg
xchg
fucomi
and
or
jmp
leave
cmp
fcom
ret
loopne
aas
cmc
xor
int3
outs
xchg
xchg
shr
xor
sub
pop
mov
or
in
xchg
xchg
out
pop
(bad)
mov
fistp
cmps
div
(bad)
stos
sub
sbb
movs
(bad)
push
mov
mov
fld
call
lea
xchg
jae
pop
fucomi
add
push
je
jmp
mov
cmp
xor
mov
mov
(bad)
out
sbb
or
adc
es
or
or
pop
jecxz
fidiv
aas
fidivr
repz
sub
(bad)
out
ret
les
gs
sub
ret
jne
std
xlat
jmp
cmp
cld
cmps
es
out
into
lods
in
mov
popf
push
inc
(bad)
pop
sbb
inc
inc
jnp
sub
jns
dec
dec
loop
in
aad
movs
mov
add
xor
sbb
cwde
outs
mov
mov
js
push
cli
leave
mov
xor
ins
lea
bound
dec
inc
cld
test
mov
enter
(bad)
jmp
push
jge
in
inc
cmp
mov
std
mov
jle
imul
xor
xchg
and
jp
mov
mov
push
mov
(bad)
pop
aad
jnp
adc
adc
mov
daa
call
out
repz
jae
in
icebp
mov
lock
aaa
in
mov
push
ja
xchg
inc
inc
data16
pop
outs
push
pusha
pop
in
sti
enter
mov
scas
or
push
add
popf
jle
sub
sahf
xchg
imul
jnp
cdq
jbe
test
xchg
inc
pop
repz
lods
in
rcr
int3
adc
cmp
pop
jb
outs
mov
loopne
lock
test
imul
movs
loope
cmp
cmp
mov
(bad)
adc
mov
and
pop
out
inc
pop
movaps
inc
pop
loopne
scas
arpl
adc
ret
test
xchg
mov
rcr
jp
pop
out
(bad)
mov
or
push
xchg
ds
hlt
cwde
imul
sub
(bad)
enter
mov
std
call
pop
in
dec
inc
mov
push
or
adc
mov
aaa
test
std
cmps
mov
cmc
sti
aas
rcr
lock
inc
mov
push
loope
jnp
fisttp
js
push
clc
hlt
xor
adc
call
lea
test
push
jb
ss
and
pop
repnz
adc
sub
outs
jns
mov
or
mov
xor
ret
repz
pusha
pop
jecxz
int
xor
movs
jbe
(bad)
fs
push
rcl
push
jge
cmp
cmp
out
cwde
jb
fld
push
dec
mov
mov
mov
in
in
adc
(bad)
gs
je
fadd
adc
mov
sub
pop
sbb
adc
cmp
bound
xor
fiadd
mov
out
adc
js
xor
fmul
or
dec
sub
mov
cwde
loopne
fldcw
je
lods
push
pop
not
(bad)
pop
in
stos
les
sub
sti
loop
imul
(bad)
call
in
mov
js
rol
ja
add
in
mov
fs
mov
add
fcomp
xor
xchg
pop
inc
pop
xor
cs
mov
mov
mov
dec
pop
and
or
inc
hlt
scas
dec
test
dec
out
push
fimul
push
popf
jbe
jle
mov
ins
sub
std
icebp
dec
sbb
jp
dec
xchg
aad
cwde
sub
dec
cmp
dec
sti
shl
mov
retf
leave
iret
mov
and
mov
lahf
adc
test
ret
inc
push
cmp
dec
(bad)
mov
in
movs
aad
das
(bad)
std
pop
movs
jns
scas
add
jo
sbb
xchg
adc
shl
sub
mov
data16
and
lds
mov
cmc
shr
xor
mov
sub
or
add
fimul
jo
xor
cli
lods
in
mov
test
rcr
inc
aas
repz
or
mov
stos
fldenv
test
mov
ss
mov
lds
sub
jp
or
mov
jmpw
pop
or
mov
movs
in
test
sub
mov
push
hlt
pop
mov
repnz
outs
sbb
clc
test
icebp
xor
fcomp
xchg
cdq
cdq
nop
pop
jo
pop
add
push
aas
dec
in
mov
cmp
inc
int
add
in
push
enter
es
and
in
hlt
jae
das
fidiv
fsub
push
fisub
aaa
rcr
pop
mov
ret
scas
and
xor
sti
mov
jg
push
mov
enter
js
mov
dec
mov
xor
or
mov
inc
xor
sbb
mov
aam
xor
repz
iret
mov
stos
cmp
stos
outs
xchg
push
les
xor
into
icebp
loopne
mov
dec
ss
pop
add
and
retf
bound
jae
and
inc
sub
adc
xchg
cmp
test
dec
sbb
outs
pop
call
loopne
push
pop
jecxz
repz
cmp
sbb
add
mov
push
call
dec
inc
ja
cwde
mov
ds
sub
sbb
cs
popa
ins
cmp
idiv
vmread
add
pop
mov
je
popf
or
sbb
stc
mov
fbstp
into
(bad)
retf
sbb
(bad)
test
in
and
test
lods
mov
inc
cmp
cdq
sbb
add
in
sbb
dec
ror
dec
fisubr
or
and
add
int3
das
or
jbe
xchg
jmp
jle
scas
popa
mov
jne
pop
es
psrld
cmp
and
sub
iret
xchg
adc
cmps
jle
out
imul
jnp
cs
lods
out
cmps
iret
mov
add
push
mov
test
and
lock
fistp
in
mov
cmps
or
or
in
mov
mov
cs
add
jne
loopne
sub
retf
jmp
cmp
aad
push
(bad)
lods
dec
cmp
test
(bad)
pop
jp
inc
push
sbb
and
dec
enter
xchg
(bad)
clc
pop
dec
inc
inc
xor
arpl
sahf
and
sbb
sbb
mov
fbld
popf
mov
sub
xor
int3
add
or
sub
or
pop
add
sbb
and
mov
mul
pop
jbe
ffreep
pi2fw
xchg
pop
stos
xor
pop
(bad)
cmp
push
and
xchg
fstp
(bad)
sub
sub
inc
mov
and
xchg
imul
mov
aam
jg
cld
rcr
push
addr16
xor
push
inc
bswap
dec
pop
mov
adc
and
sub
jmp
es
mov
push
jne
pop
(bad)
icebp
les
pop
mov
aam
lods
inc
mov
adc
and
std
icebp
sbb
rcl
push
or
xchg
adc
sbb
jmp
mul
fstp
or
ret
leave
push
sub
push
in
jecxz
shl
lds
jge
mov
es
cli
mov
movs
cli
scas
xchg
inc
psubsb
jp
scas
add
fmul
dec
jnp
lock
cld
movs
push
cmp
movs
ret
in
addr16
dec
mov
cmp
retf
adc
inc
sub
push
call
sub
xor
hlt
mov
mov
push
and
and
pop
popa
add
pop
mov
sbb
jmp
imul
push
push
pop
in
jg
mov
in
lods
and
ss
sti
idiv
imul
mov
test
lock
test
cdq
mov
jg
inc
popa
sub
fadd
lock
and
mov
loope
inc
ja
repnz
jl
pop
mov
mov
cmp
int3
addr16
fild
fucomp
mov
push
xchg
and
adc
cmp
pop
dec
loop
(bad)
mov
jge
sahf
mov
pop
or
retf
fsubr
ret
inc
push
call
jmp
mov
or
popf
cwde
lock
stos
fidiv
xchg
pop
push
aas
and
lods
imul
das
dec
mov
sub
jecxz
loopne
jne
int
or
icebp
retf
icebp
pop
leave
faddp
mov
adc
(bad)
sbb
call
enter
(bad)
xchg
mov
jne
push
adc
sbb
(bad)
int
adc
movs
mov
icebp
xlat
fwait
xor
out
mov
lock
xor
fwait
mov
ds
push
push
inc
or
lds
sar
xor
imul
mov
dec
cmp
sbb
mov
inc
jmp
push
pop
or
movs
dec
cmp
pop
(bad)
add
addr16
adc
cmp
in
jmp
mov
or
cld
pop
mov
xchg
push
(bad)
in
loopne
jmp
rcl
push
push
jmp
ja
sub
push
cmp
cmp
stos
mov
mov
ror
push
out
ror
sbb
or
ror
xchg
xchg
sbb
cmp
jns
xchg
rcl
mov
cmc
xchg
aaa
push
push
and
xor
pop
jno
pushf
pop
pushf
popa
call
stc
dec
mov
jb
xchg
retf
faddp
pop
push
mov
pop
iret
dec
call
and
jnp
inc
outs
sbb
shl
ja
retf
loope
fisub
outs
xor
mov
in
cmp
sahf
imul
xor
xor
jmp
xlat
in
inc
test
sub
cdq
push
call
push
dec
into
data16
fldcw
es
adc
mov
ficomp
aas
mov
dec
loop
xchg
stos
mov
sbb
int
fisttp
mov
xor
and
mov
xchg
and
pop
out
cmp
sub
sbb
mov
repz
sar
sbb
sbb
xchg
pop
dec
(bad)
xor
xor
inc
mov
xlat
imul
das
sub
xchg
out
pmaxsw
repz
mov
out
shl
mov
mov
or
cmps
cmp
jle
or
mov
fwait
and
dec
dec
cmps
ss
sub
push
dec
out
outs
or
imul
jb
inc
add
adc
mov
pop
sbb
out
fld
pop
jns
push
sub
and
out
dec
fisttp
test
(bad)
add
or
sbb
data16
(bad)
in
jno
pop
sbb
aad
inc
and
adc
retf
ret
rcr
push
lea
stos
and
sbb
and
or
jnp
add
idiv
fwait
sahf
aam
pop
mov
xchg
fisub
inc
inc
sub
push
(bad)
stos
sub
push
(bad)
dec
ficomp
jnp
sbb
rcl
jnp
fsubr
daa
lock
fs
ds
cmps
inc
sti
call
inc
jne
mov
cdq
jb
sub
mov
shl
mov
in
pop
pop
scas
sbb
pusha
out
ins
clc
push
movs
mov
jmp
aad
(bad)
lock
mov
sbb
lock
xlat
sbb
xchg
pop
xchg
in
push
lds
jb
ret
xor
movs
stc
mov
xor
fsubr
iret
sub
xlat
data16
push
sbb
mov
push
pop
mov
mov
clc
inc
fnstsw
lea
(bad)
out
pop
lods
or
mov
lock
repz
es
gs
fimul
mov
movs
mov
into
xor
sub
mov
loope
mov
in
inc
xchg
or
cmp
pop
mov
sbb
sub
lock
dec
sbb
lods
shl
ins
mov
pop
bound
in
fwait
inc
jo
and
add
in
jb
ins
or
std
mul
xchg
addr16
pop
xchg
imul
mov
(bad)
stos
cmp
xor
jns
sbb
(bad)
stos
ficomp
sbb
xchg
inc
scas
outs
ja
xor
mov
jne
pop
pop
sub
(bad)
adc
hlt
mov
ret
add
push
add
cdq
push
jns
jle
mov
xor
out
sub
fnsave
jno
cmp
sbb
arpl
push
mov
(bad)
mov
pop
sbb
stos
push
inc
adc
mov
arpl
jns
sub
sbb
sub
arpl
jb
daa
sub
pop
out
mov
xchg
inc
push
xor
lods
jp
ja
pop
cmp
xor
mov
pop
dec
out
pop
jbe
mov
cwde
mov
call
mov
sbb
mov
into
sbb
daa
sbb
(bad)
call
pop
enter
pop
xor
lock
in
nop
xor
mov
jmp
mov
(bad)
fild
int
adc
jmp
fcomp
in
outs
into
pop
pop
xor
enter
push
stos
ins
dec
nop
push
sub
pop
mov
loope
or
push
mov
or
fsub
or
pop
push
cs
inc
jg
es
retf
inc
imul
scas
xchg
sub
jae
ror
cmp
popa
pop
inc
cmps
mov
add
out
jno
das
and
pushf
jmp
iret
(bad)
jg
inc
mov
cmps
add
clc
out
lahf
dec
push
int3
movs
and
movs
lds
jmp
mov
int
or
fistp
lahf
mov
mov
outs
in
and
pop
test
repz
je
xchg
adc
imul
mov
outs
jge
cmp
jb
pop
jns
cmps
mov
cld
mov
mov
mov
jne
cld
ds
das
aaa
and
neg
int
mov
cmp
sbb
or
push
add
add
stos
into
pop
pop
lods
imul
clc
aam
add
and
in
push
call
aas
ss
ja
out
clc
push
aas
push
adc
mov
mov
jp
iret
nop
push
addr16
test
jns
ds
es
loop
lahf
ins
add
push
das
mov
ss
jecxz
push
enter
xor
and
lods
imul
int3
cmp
retf
wrmsr
js
xchg
test
sub
dec
ins
das
shl
cmp
aas
adc
popa
ret
dec
xchg
stc
sbb
jmp
mov
jl
xor
adc
mov
push
leave
or
pop
mov
and
add
lock
sub
adc
gs
mov
mov
fsubr
cli
repz
adc
lahf
sahf
adc
fiadd
add
and
push
cmps
sbb
cld
lahf
and
inc
aam
xchg
in
inc
call
and
sub
retf
mov
mov
or
xchg
scas
mov
sub
push
pop
mov
lods
sbb
arpl
mov
jmp
sub
les
in
add
out
xor
mov
inc
jg
arpl
rcr
(bad)
xlat
adc
adc
cmp
fsub
arpl
mov
push
lods
ret
dec
mov
adc
inc
lock
hlt
sub
mov
add
(bad)
add
and
in
push
fsub
dec
in
out
push
ficomp
cmps
les
in
add
push
and
xchg
leave
js
adc
cs
daa
imul
jmp
ins
shr
retf
enter
xchg
and
outs
inc
ins
icebp
or
xor
push
push
mov
push
xchg
mov
test
mov
add
and
push
mov
in
jns
int3
scas
or
test
sub
jmp
xor
mov
and
mov
or
adc
mov
mov
aam
mov
sub
outs
scas
add
pop
or
jno
nop
push
ret
mov
mov
in
cwde
xchg
sub
mov
adc
mov
int3
and
dec
and
imul
mov
imul
jecxz
or
clc
arpl
int
aam
sub
fldcw
(bad)
jecxz
(bad)
or
ins
shl
(bad)
in
les
loop
and
(bad)
jp
cmp
int3
outs
hlt
mov
imul
(bad)
addr16
mov
lock
or
adc
(bad)
pop
xchg
and
cld
mov
cmc
xchg
nop
jmp
sbb
out
out
mov
adc
(bad)
xor
and
adc
in
xchg
dec
jbe
jl
jmp
fst
fist
neg
jmp
in
jno
js
arpl
mov
sub
inc
scas
xchg
cmp
mov
pusha
add
gs
pop
cmp
inc
or
std
sbb
dec
divps
cmp
mov
scas
aam
fisttp
nop
sahf
and
imul
repz
xor
cmp
test
in
lds
sbb
pop
mov
dec
cdq
add
lock
cmc
hlt
push
jp
pop
daa
adc
test
ds
icebp
pop
cmp
in
jo
aaa
push
pop
sar
lods
addr16
dec
mov
out
mov
imul
lods
add
retf
mov
cmp
ja
mov
out
cld
loope
push
and
pop
mov
cmp
push
jae
jae
popf
jge
cdq
push
xchg
sahf
cmp
xor
test
ret
mov
pop
icebp
push
mov
xchg
lods
adc
jg
out
lea
mov
xchg
inc
jnp
rcr
repnz
xchg
out
xchg
loope
jnp
or
in
jbe
sub
mov
push
ins
push
loope
xchg
nop
or
lea
loop
ror
jmp
pusha
lods
(bad)
(bad)
(bad)
shr
mov
mov
adc
retf
lock
scas
mov
jnp
adc
idiv
inc
inc
xor
lock
out
xlat
lods
push
gs
and
call
push
call
mov
imul
pop
movs
int
loop
add
imul
push
sbb
std
push
mov
jnp
(bad)
mov
jmp
mov
and
cli
div
sbb
loopne
in
pop
nop
adc
(bad)
jb
movs
adc
add
cmp
xchg
jmp
bound
mov
or
or
sbb
sub
addr16
xchg
scas
hlt
dec
cmp
es
xor
lods
pop
bound
lods
int3
lods
cli
mov
pop
jnp
inc
xlat
cwde
inc
sti
pop
test
mov
std
push
mov
into
lea
mov
sbb
add
or
or
jbe
cmp
movs
into
lea
leave
into
call
push
push
into
mov
mov
mov
push
(bad)
nop
xor
aam
out
loope
adc
xor
jmp
iret
mov
mov
cwde
iret
or
sub
in
dec
iret
test
push
dec
jmp
in
adc
mov
jle
or
pop
dec
xor
adc
fcmovne
cmp
xor
hlt
(bad)
push
test
and
test
sar
mov
sub
into
push
dec
mov
leave
mov
and
cmp
(bad)
fcmovnu
lahf
mov
pop
mov
dec
aas
(bad)
add
jmp
test
popf
punpcklwd
jb
mov
pop
mov
cmovge
lahf
les
sbb
es
xor
fdiv
inc
call
dec
mov
(bad)
jmp
jns
adc
mov
and
xor
cmps
mov
scas
cmp
add
add
xchg
neg
je
out
call
ss
cmp
pushf
mov
int3
xchg
jmp
xor
dec
pop
inc
int3
and
sub
inc
inc
mov
call
xor
movs
stos
inc
ja
div
xchg
cmc
shl
xchg
and
aad
adc
inc
xor
ror
inc
fucomp
and
int
push
stos
lods
mov
jno
inc
imul
fiadd
inc
imul
xchg
test
arpl
iret
add
xchg
or
in
mov
xchg
nop
dec
into
jb
sub
jmp
or
cmps
shl
fucomi
jne
inc
aam
push
test
add
inc
cmp
mov
sub
cmc
xor
lock
adc
jmp
and
imul
sub
dec
retf
adc
add
cmc
push
dec
pop
sbb
pop
fs
jo
adc
imul
adc
push
gs
xchg
push
(bad)
jo
pusha
daa
cmp
je
add
mov
cmp
ret
cmc
pusha
ret
in
sub
lods
mov
adc
enter
(bad)
cmp
gs
in
stos
push
xchg
jp
mov
or
fadd
inc
mov
xor
jmp
dec
cmc
dec
ja
pcmpgtb
call
mov
retf
fwait
push
mov
lods
pop
rcl
push
sub
icebp
push
push
cmp
pop
inc
stos
mov
sti
xor
dec
adc
stos
cmps
mov
jo
mov
icebp
mov
cmc
jns
mov
dec
icebp
or
and
addr16
pop
sar
fs
xchg
cmps
in
fnstsw
or
pop
dec
mov
sbb
mov
and
scas
pop
mov
ret
in
imul
mov
mov
mov
ins
out
jle
jbe
add
test
shl
pop
sub
lds
sbb
mov
adc
aad
cdq
mov
mov
popf
repnz
cmps
shl
or
sbb
sub
dec
or
fadd
clc
cs
sbb
mov
or
outs
cs
mov
push
stos
mov
or
nop
dec
pusha
jne
mov
add
or
daa
mov
ds
or
inc
dec
jle
mov
sbb
xchg
xchg
inc
pop
add
dec
or
sahf
(bad)
out
xchg
or
jecxz
cmp
dec
push
or
clc
mov
sub
js
popa
retf
cmp
mul
out
sub
jge
xor
ins
pushf
or
jb
cmp
jo
iret
(bad)
int3
enter
mov
in
sbb
xlat
dec
dec
xchg
cmp
jmp
add
adc
rcl
xchg
sub
out
aam
jo
mov
push
mov
ds
jbe
(bad)
cmps
mov
in
psrld
cmp
imul
push
fld
ins
stos
scas
inc
cvtps2pi
retf
out
ret
mov
mov
(bad)
out
dec
mov
mov
cmp
or
test
add
add
iret
add
dec
xor
and
nop
jmp
inc
xchg
adc
ds
sar
inc
loop
xchg
mov
popf
loop
es
imul
mov
retf
cmps
pop
pop
daa
repnz
mul
retf
add
ffreep
je
xor
ja
xor
repz
add
sbb
adc
lock
loopne
shr
pop
xchg
xchg
push
pushf
or
mov
mov
retf
pop
mov
je
inc
retf
push
(bad)
or
mov
das
cmps
in
rcl
aam
xchg
daa
ja
fimul
test
jg
and
pushf
icebp
movs
push
push
aad
out
(bad)
inc
inc
dec
and
test
mov
pop
test
leave
mov
pop
in
leave
sub
int
mov
xor
cmp
fs
gs
test
mov
sub
sbb
push
pop
jo
xor
push
jle
mov
outs
jge
and
push
xchg
push
dec
mov
js
icebp
inc
stos
xchg
fild
js
icebp
add
int
shr
jbe
cmp
loop
xchg
add
mov
sahf
(bad)
out
push
into
(bad)
aam
cmps
mov
jmp
jle
adc
push
mov
adc
mov
dec
push
mov
cmp
out
test
inc
adc
js
sub
add
dec
test
call
pop
ins
sbb
pop
sbb
cli
xchg
mov
mov
clc
add
cli
pop
paddd
outs
lods
push
jge
call
(bad)
(bad)
and
sub
dec
mov
scas
aas
loope
mov
pop
push
jecxz
adc
movs
cmp
std
jae
xchg
js
mov
mov
inc
jg
xlat
pop
clc
retf
push
pop
rcr
cmc
fsub
lods
(bad)
je
call
mov
xor
dec
xor
es
xchg
pop
je
cmp
push
xor
sbb
lds
jnp
sbb
sbb
or
movs
aam
das
lock
repnz
xor
jb
test
rcl
or
mov
iret
inc
(bad)
mov
in
push
in
jecxz
push
xchg
scas
(bad)
xchg
out
push
nop
adc
xor
iret
sbb
daa
add
loope
push
mov
jecxz
xor
mov
nop
mov
inc
push
or
loop
cmp
int3
test
ins
lods
mov
fwait
outs
or
jg
jp
call
mov
ss
fidivr
mov
lock
pop
int3
outs
jmp
push
xor
aad
fld
pop
dec
mov
movs
gs
dec
mov
mov
adc
push
push
dec
rol
cmp
pop
pop
test
xor
fs
xor
cmps
push
(bad)
and
movs
add
inc
mov
xchg
and
(bad)
movs
rol
das
xchg
fcom
add
ja
mov
xchg
sbb
mov
ins
inc
sar
stos
pop
pop
jnp
pop
(bad)
idiv
loop
push
or
pop
jnp
call
test
xor
fisub
dec
std
or
inc
add
popf
dec
mov
test
jb
add
mov
das
ds
mov
aaa
mov
dec
cld
out
jo
aam
sub
pop
in
pop
into
icebp
inc
or
movs
dec
cs
sub
xor
sbb
aaa
(bad)
rcr
test
pop
xchg
sbb
call
cmp
dec
cmc
xchg
pop
cmp
je
and
in
cmp
adc
pop
sti
dec
es
daa
add
xchg
sbb
inc
pushf
xchg
push
(bad)
mov
add
hlt
sbb
or
daa
and
fcom
fidiv
xchg
in
stos
push
ds
adc
jg
sub
cwde
pop
lock
(bad)
dec
xchg
cmp
mov
scas
push
jo
jg
adc
(bad)
mov
lods
xchg
movs
mov
daa
mov
out
pusha
pop
mov
mov
or
push
test
push
pop
lods
outs
dec
bound
bnd
mov
nop
inc
lahf
cmps
test
mov
pop
stos
iret
push
jmp
adc
(bad)
in
add
vmulps
dec
jno
or
retf
jbe
das
lea
lock
mov
cmp
sbb
mov
cmp
out
repz
fwait
data16
jl
pop
cli
adc
mov
mov
scas
inc
ficom
mov
in
push
mov
not
pop
mov
push
cmc
hlt
dec
cmp
add
push
and
ss
ja
js
xor
cmps
pop
push
shr
cld
cmp
lods
xchg
shr
pop
cmp
hlt
sub
call
adc
mov
jb
test
adc
xchg
jg
into
aad
fisttp
fcmovu
sub
or
mov
xchg
push
cmp
aaa
daa
xor
xchg
sbb
stc
push
bound
xchg
pop
scas
lock
mov
jge
push
add
in
jno
in
dec
int3
mov
repz
sub
mov
dec
test
je
xchg
xor
add
nop
mov
mov
les
inc
retf
in
icebp
in
jl
js
cmp
(bad)
in
push
lock
(bad)
mov
stc
or
and
jge
inc
push
cmp
push
cmc
dec
xchg
loope
mov
bound
ffreep
xchg
mov
mov
ins
outs
lds
fs
inc
jmp
mov
in
fst
pop
push
mov
ds
sbb
out
clc
stc
jae
inc
mov
in
clc
mov
add
fdiv
movs
(bad)
pop
pop
mov
jo
mov
aad
(bad)
mov
cmps
fwait
lods
imul
fdivrp
push
pop
ret
jecxz
jmp
shl
je
mov
ret
inc
or
into
xor
ficomp
das
popf
mov
dec
scas
out
repnz
lds
inc
movs
inc
mov
xor
inc
neg
leave
dec
push
jl
je
mov
add
xlat
rcr
push
adc
adc
loope
out
xchg
jne
hlt
dec
imul
mov
(bad)
rol
mov
xor
and
jbe
xchg
cmp
leave
movs
test
sub
inc
and
in
mov
jbe
xchg
(bad)
test
push
out
mov
jae
mov
test
jge
outs
mov
retf
jae
lds
mov
test
sbb
rcl
cmp
mov
repz
mov
mov
adc
outs
dec
test
mov
pop
xchg
dec
std
shr
aas
enter
cli
iret
call
(bad)
mov
fsubr
cwde
sub
sub
retf
mov
aad
xchg
pop
frstor
out
fisub
(bad)
(bad)
in
adc
xchg
pop
mov
and
xor
push
gs
out
jae
loopne
cmp
fidivr
shl
cmc
(bad)
rcl
pop
dec
fucomi
inc
mov
cli
jne
mov
and
iret
sti
jecxz
dec
add
lods
ret
ret
xlat
leave
add
push
sbb
inc
into
sar
js
ins
adc
xchg
fcmovbe
out
pushf
and
(bad)
mov
ja
pop
lods
jbe
mov
add
add
jne
jmp
add
loope
cs
adc
test
into
fadd
xor
mov
out
push
hlt
jmp
cld
sub
mov
rcr
mov
ss
mov
retf
call
into
jmp
dec
sbb
ja
xlat
pop
push
and
jb
xchg
cmp
jge
imul
mov
(bad)
cmp
add
enter
fiadd
push
daa
add
nop
cmp
bound
cmp
test
xor
ficomp
sub
sbb
repz
cmp
lods
push
(bad)
lock
xchg
xor
test
mov
popa
cmp
xchg
out
hlt
ins
mov
icebp
cli
xor
dec
and
sar
mov
inc
neg
pushf
add
push
mov
out
out
push
mov
mov
mov
push
xlat
iret
in
dec
js
lahf
pop
in
test
inc
cli
dec
loop
adc
arpl
push
mov
mov
cmp
loope
add
cdq
dec
mov
mov
push
jge
add
leave
jo
jmp
mov
hlt
and
outs
and
add
and
in
xchg
add
les
(bad)
neg
(bad)
sbb
jmp
mov
arpl
cmp
or
sbb
cdq
xchg
test
mov
lock
jmp
test
mov
fwait
add
fs
ds
pop
test
mov
lahf
push
iret
out
inc
rcr
push
lahf
adc
pop
dec
test
(bad)
adc
dec
outs
dec
test
dec
sbb
into
sub
jmp
mov
iret
sti
push
jecxz
push
mov
mov
outs
pop
inc
mov
cmp
and
cld
lock
(bad)
mov
jns
dec
aam
add
add
mov
sub
or
test
or
mov
pop
xchg
fidivr
jae
jae
movs
shr
jns
addr16
fstp
dec
cmps
call
push
sub
xor
cmp
rcr
fist
fsub
cli
jno
fs
shr
ins
stc
and
xchg
retf
ja
xchg
xchg
fnstcw
out
xchg
mov
push
into
mov
cmp
stos
rcl
hlt
popa
sub
push
in
rcr
in
test
(bad)
loop
test
enter
adc
(bad)
(bad)
stc
in
xchg
cmp
push
cmp
(bad)
outs
adc
pop
and
jo
sar
inc
movs
push
popa
cwde
sub
es
xchg
les
pop
add
arpl
ja
jb
call
scas
jae
xor
fld
cli
sbb
inc
jbe
(bad)
stc
xor
mov
or
out
xchg
push
add
xchg
dec
lea
(bad)
hlt
xchg
popf
adc
or
push
cmp
fs
movs
ins
push
scas
pushf
iret
fsubr
adc
jp
jmp
mov
cmc
pushf
xchg
mov
ss
psrad
mov
test
sub
data16
jae
pop
call
jo
mov
ret
mov
out
pop
in
inc
call
push
(bad)
imul
ins
inc
mov
mov
pop
mov
xor
retf
adc
hlt
dec
push
mov
movs
repnz
pop
adc
(bad)
fdiv
inc
push
dec
add
cmps
mov
jne
cmp
cli
fs
cld
stc
pop
sbb
mov
and
dec
ret
retf
jmp
xor
mov
test
out
ror
(bad)
fst
ss
jne
push
clc
data16
mov
repnz
mov
push
jl
add
push
pop
jl
add
(bad)
fistp
cmp
loope
enter
(bad)
lods
(bad)
pop
mov
jo
mov
lahf
into
and
or
mov
outs
pop
retf
pop
outs
ins
fcomp
sub
pop
and
fdiv
repnz
or
outs
mov
pop
mov
cli
and
dec
iret
or
retf
sbb
adc
inc
ss
std
dec
xchg
mul
bound
mov
sbb
xchg
xor
add
arpl
jmp
loopne
fsub
push
sbb
inc
push
dec
jne
sbb
jle
inc
sub
(bad)
repnz
cmp
loopne
push
pop
xor
jle
cmp
sti
cld
sbb
das
adc
jl
and
addr16
pop
pop
lock
inc
mov
out
pop
lock
stc
inc
nop
hlt
mov
(bad)
je
ds
adc
push
mov
(bad)
mov
js
and
sub
lock
or
stos
in
dec
mov
jle
add
mov
(bad)
inc
inc
add
aas
fs
dec
push
repnz
jb
mov
cmp
jns
pop
rcl
ret
dec
push
adc
mov
rcr
test
adc
rcl
xor
inc
or
loope
cmp
adc
ror
xchg
sbb
adc
push
push
mov
movs
lea
leave
mov
xchg
xor
pop
out
daa
in
cmp
aas
push
xchg
push
pushf
or
jae
dec
pop
pushf
mov
push
fs
stc
mov
xchg
rcr
xor
dec
xchg
cmp
stos
and
cwde
addr16
jnp
cmp
jno
pop
std
lods
mov
ror
jmp
test
mov
pop
movs
mov
push
or
xor
pop
aaa
nop
pop
cld
sbb
xchg
cmc
sub
pop
pop
nop
xor
mov
pop
sbb
push
adc
sub
or
or
sbb
and
sub
xor
lahf
inc
and
jae
imul
movlhps
inc
mov
pop
inc
js
jo
adc
ret
mov
(bad)
movs
xchg
xor
adc
sar
ja
xor
shr
dec
xchg
mov
call
mov
jb
call
int3
test
jg
in
lahf
dec
add
popa
inc
aaa
das
scas
and
mov
bound
movs
and
xchg
adc
aas
and
loopne
push
rol
sub
(bad)
xchg
mov
test
ror
cmp
daa
cwde
jle
cli
pop
popa
sub
jg
enter
push
(bad)
je
mov
(bad)
adc
or
mov
jb
cld
add
adc
(bad)
les
test
aam
hlt
push
add
xor
lods
add
fild
retf
and
push
pusha
dec
cdq
retf
xor
outs
cmps
xchg
or
fcmovb
pop
or
loop
addr16
adc
js
stos
cmp
ret
or
fnsave
mov
scas
loopne
adc
mov
and
and
jg
movs
rcl
leave
and
inc
dec
pop
push
inc
shl
pop
mov
mov
pusha
dec
pop
repz
and
jne
cmp
es
scas
int3
push
sub
fist
push
mov
data16
pop
cmc
in
ficom
add
push
add
out
pop
out
mov
xchg
push
loopne
push
nop
out
lods
xor
adc
push
sar
jmp
stos
(bad)
test
(bad)
mov
adc
adc
cwde
push
mov
(bad)
adc
iret
loopne
adc
(bad)
mov
dec
out
dec
fidivr
imul
mov
pop
lahf
into
push
out
cwde
pop
cmp
cmp
or
in
ds
dec
retf
dec
push
mov
test
(bad)
in
aam
nop
(bad)
xor
mov
add
adc
cmp
pop
gs
push
ud0
cld
pushf
or
outs
sbb
call
in
mov
xchg
sbb
outs
call
(bad)
shl
mov
jg
add
call
push
fst
ds
mov
adc
mov
and
(bad)
lahf
in
jp
out
add
cmp
lods
aaa
(bad)
push
push
gs
inc
scas
cmps
inc
je
cmp
sbb
(bad)
mov
inc
call
add
or
jae
add
dec
cmc
pop
sub
gs
and
fs
push
and
scas
ret
lods
xchg
(bad)
outs
mov
jns
dec
ret
pop
jno
rcr
add
adc
sub
fstp
mov
in
rcr
jb
jge
mov
mov
jmp
push
nop
mov
mov
call
pop
adc
sbb
jb
iret
mov
lock
jle
lods
inc
in
ds
sub
mov
jmp
cmps
rcl
push
add
adc
push
loope
shr
dec
sbb
mov
sti
stc
in
mov
pop
jmp
bnd
pop
(bad)
fdiv
or
mov
mov
sub
int
imul
call
cwde
hlt
or
aam
xchg
pop
jp
pop
lds
idiv
sar
test
jp
mov
sbb
inc
cmp
inc
ins
xchg
xor
xor
fimul
or
pop
out
mov
sti
mov
xchg
icebp
stos
mov
push
inc
fcmovnbe
dec
dec
call
inc
sti
dec
dec
fcmovne
rcr
popa
dec
jp
aad
in
iret
sbb
add
or
adc
outs
xor
sbb
sar
rol
cmp
xchg
movs
pop
stos
jg
loopne
pushf
sub
dec
ja
and
(bad)
pop
loope
cmps
mov
mov
imul
jbe
ret
das
je
inc
adc
(bad)
call
in
movs
inc
xchg
ficom
hlt
push
cdq
xlat
ret
lea
xor
outs
mov
xor
shl
add
push
call
pop
dec
adc
je
aas
pop
data16
das
fwait
inc
test
aad
cmps
xchg
xchg
pop
in
repz
jp
test
movs
ret
repz
mov
push
pop
dec
lea
mov
inc
(bad)
xchg
das
pop
in
or
xor
mov
ins
cmp
dec
push
xchg
xlat
mov
xor
in
adc
stos
sub
lods
leave
pop
inc
sub
mov
mov
mov
jl
and
mov
add
rcr
push
mov
inc
pop
cmp
pop
scas
sbb
cmps
mov
sbb
inc
adc
adc
inc
add
and
push
daa
or
outs
adc
test
aaa
das
xor
test
mov
in
loopne
clc
mov
in
push
cld
and
or
sub
jl
push
jo
(bad)
(bad)
retf
retf
mov
cdq
push
inc
mov
xor
je
sti
pop
das
and
sub
add
movs
xchg
hlt
add
inc
sbb
jae
and
jno
pop
mov
push
fst
aaa
dec
das
mov
lfs
lods
jmp
pop
dec
lods
pop
fdivr
cmp
lods
push
push
(bad)
int3
jnp
push
adc
pop
in
push
mov
shr
xchg
imul
xchg
test
daa
test
sbb
or
add
inc
sbb
pushf
xchg
xchg
xor
sub
test
cvtdq2ps
lds
jle
repnz
lahf
pop
sbb
retf
movs
inc
pop
cmp
cld
mov
jae
push
add
gs
sub
int3
ret
mov
and
add
dec
sar
inc
jo
frstor
pop
add
js
inc
jb
push
popf
cmp
daa
enter
and
and
push
stc
sub
scas
out
retf
shl
stc
out
or
jns
cmp
ret
ja
pop
sub
xchg
add
cdq
dec
pop
loope
rol
sbb
lods
jmp
jp
dec
mov
cmp
stc
fcomp
call
xchg
shr
pop
jge
data16
xor
fcmovu
gs
loope
test
add
ss
call
pop
sbb
xlat
repz
(bad)
jne
pop
dec
imul
dec
push
pop
test
sub
sbb
push
mov
sbb
mov
cmp
jbe
loope
fs
(bad)
test
cmp
sbb
pop
cmp
dec
loop
xchg
out
jecxz
outs
daa
mov
fucomip
mov
push
inc
add
ss
xor
das
inc
dec
inc
or
int
and
push
jmp
xchg
mov
stos
or
inc
push
or
push
enter
in
push
jbe
push
and
enter
mov
int3
mov
lea
dec
dec
js
pop
pop
lock
cmp
pop
neg
ret
cmc
clc
fdiv
or
icebp
mov
or
add
inc
rcl
jmp
fs
xchg
sbb
das
repz
add
movs
loop
mov
mov
dec
clc
sbb
cwde
xchg
in
add
sbb
mov
mov
imul
jb
dec
mov
push
mov
jnp
(bad)
dec
mov
test
dec
loopne
sub
add
shr
rcr
xchg
int3
(bad)
adc
adc
out
or
adc
add
dec
sbb
(bad)
repz
sbb
mov
mov
in
sar
mov
xchg
add
in
hlt
enter
pop
pop
and
add
cwde
lds
repz
add
(bad)
ja
std
xor
mov
pusha
movs
pop
call
enter
adc
dec
mov
dec
sub
pop
(bad)
(bad)
or
cmp
mov
or
mov
mov
mov
cmp
dec
mov
and
jbe
jmp
and
add
pusha
call
dec
into
loope
lods
ins
xchg
xor
xchg
cmp
dec
arpl
dec
ss
mov
push
stc
cmp
mov
xlat
addr16
fs
xchg
call
adc
out
enter
fst
cmp
retf
pop
mov
imul
add
push
push
xor
outs
adc
or
sub
push
movs
jmp
arpl
mov
(bad)
in
shl
xchg
pushf
mov
xchg
jb
mov
jmp
sbb
les
pop
aad
xchg
or
std
jb
aas
fmul
dec
test
ins
stos
in
mov
and
je
mov
scas
pushf
cmp
ret
sbb
sbb
jle
cmp
push
add
jmp
push
rcl
in
pop
lock
dec
mov
test
dec
or
adc
sbb
out
lahf
hlt
jbe
push
shl
xlat
inc
or
push
test
adc
adc
sti
das
aas
inc
cli
fild
xor
sbb
pop
add
dec
inc
es
loope
xor
cli
jne
test
cmp
cs
cmp
mov
dec
sar
xchg
jo
push
fnstenv
sbb
test
jne
ins
stos
sahf
in
push
(bad)
fld
int3
cmp
mov
in
gs
mov
pop
jg
dec
data16
jno
mov
or
data16
shl
push
cld
xor
shl
xor
inc
loopne
jb
repnz
pop
call
sbb
inc
aas
scas
and
inc
xor
loopne
ja
cmp
ss
ds
loopne
test
add
nop
and
push
ss
idiv
fist
icebp
jmp
sub
xchg
sub
loopne
mov
idiv
mov
or
popf
sub
clc
fidivr
and
inc
cmp
push
push
mov
cdq
fst
xor
and
enter
cmps
data16
and
sub
ret
sub
lds
mov
test
es
outs
push
or
cmp
rcl
inc
and
popa
push
add
mov
cwde
test
stc
sbb
adc
sub
imul
or
push
inc
mov
fidiv
repnz
or
rcl
mov
jmp
jno
ror
dec
pop
cmps
pop
push
ret
outs
scas
sub
rcl
push
dec
dec
mov
xor
call
shl
test
loopne
inc
loope
nop
push
(bad)
aad
jmp
mov
pusha
data16
fld
pop
movs
cmp
cs
mov
daa
or
inc
mov
jnp
scas
in
pop
push
scas
or
mov
sub
jne
sub
sbb
scas
jno
sbb
cmp
pop
lea
inc
mov
fnstenv
dec
mov
jp
ret
mov
dec
mov
mov
push
lods
call
mov
movs
sub
jg
rcr
loop
std
or
(bad)
push
call
(bad)
fsub
push
out
push
(bad)
xlat
fstp
rcl
out
clc
clc
and
mov
out
movs
mov
je
cmp
out
imul
movs
lock
push
push
addr16
add
mov
popf
xchg
add
je
in
sbb
cld
(bad)
cmp
xlat
mov
mov
pusha
fcom
mov
call
add
outs
and
ret
outs
stos
mov
cmc
fmulp
or
adc
mov
mov
not
in
inc
xchg
mov
popa
retf
loope
add
push
sbb
mov
inc
cmp
scas
ins
dec
jbe
jbe
rol
or
dec
lods
retf
push
in
sub
(bad)
shr
aas
sti
xor
ins
nop
xor
lea
lods
push
lock
dec
leave
mov
cmp
mov
xor
mov
cmp
mov
mov
fild
and
das
dec
(bad)
cld
and
add
ins
jnp
jecxz
inc
out
ror
dec
add
lods
test
fstp
and
lds
sub
in
test
sar
call
sub
int3
pop
jae
movs
bound
dec
jo
loop
arpl
jne
and
fiadd
aad
dec
stos
sbb
dec
xchg
clc
add
mov
jl
call
ss
(bad)
mov
fdiv
mov
call
jb
jbe
add
add
mov
loope
push
lahf
inc
mov
jno
not
mov
xor
jl
pop
repnz
inc
mov
sub
shl
in
fidiv
fdiv
ret
ret
cmp
fs
mov
mov
jmp
jb
ins
mov
mov
jge
ret
cmc
into
hlt
retf
adc
jge
ss
cld
sahf
popf
add
jne
push
js
jno
mov
ins
sub
pop
jo
mov
daa
xchg
(bad)
cmp
retf
cld
sub
inc
xchg
push
cmps
clc
in
xchg
adc
(bad)
mov
aam
ins
mov
pop
scas
add
ror
inc
sbb
movs
das
sub
sbb
xchg
mov
cld
iret
add
dec
mov
stos
out
or
and
or
cmp
jmp
push
clc
push
jg
mov
inc
push
jmp
sbb
scas
int
or
ror
pushf
scas
xor
xchg
adc
out
and
fisub
xor
in
and
in
and
pop
movs
(bad)
jecxz
sub
call
addr16
inc
addr16
arpl
or
cmp
stos
cmp
inc
gs
pop
xchg
out
jg
xchg
jmp
(bad)
and
push
mov
push
mov
nop
inc
cmc
inc
out
cs
pop
(bad)
dec
(bad)
fsubr
ja
pop
sub
mov
test
xchg
dec
(bad)
test
arpl
je
leave
xchg
pusha
in
out
inc
inc
scas
sub
lods
jo
jp
push
(bad)
test
scas
ins
outs
cmp
or
and
test
inc
mov
xchg
dec
mov
sub
mov
mov
movs
cmps
pop
mov
(bad)
mov
idiv
pusha
int
mov
mov
cli
jbe
sti
sbb
ret
fsubr
dec
adc
xor
cmps
sahf
in
and
or
ja
outs
dec
gs
push
or
or
push
xchg
xchg
pop
cmp
sub
mov
pop
xchg
jp
in
mov
push
popa
adc
in
adc
fcom
ret
test
and
sbb
push
cmp
div
popf
into
sbb
test
sub
fstp
add
adc
xlat
or
cmp
sbb
pop
ins
test
(bad)
or
adc
push
inc
push
pop
retf
jnp
cwde
jns
add
std
je
pop
in
out
and
hlt
mov
aad
xchg
int3
shl
jbe
aaa
pop
mov
and
(bad)
mov
jne
pop
mov
fwait
push
or
icebp
fwait
push
push
xchg
stos
adc
xchg
int
mov
outs
sbb
or
je
mov
dec
pop
push
out
fsubrp
sub
mov
aas
aad
aam
in
daa
es
fistp
mov
mov
cmps
xor
sub
mov
int
xor
bound
stos
mov
movs
add
sbb
gs
inc
ins
ds
js
and
inc
sbb
pop
pop
cdq
out
and
jmp
dec
fld
inc
push
push
push
cs
fbstp
arpl
sbb
mov
sub
mov
movs
jns
repz
out
cld
(bad)
lahf
pop
fild
mov
(bad)
sbb
out
loop
int
mov
dec
(bad)
stos
xchg
mov
sub
cld
inc
adc
sbb
inc
sti
(bad)
or
adc
mov
loopne
stc
test
or
stos
ret
xchg
inc
in
xchg
cwde
mov
cmp
mov
mov
daa
add
inc
in
adc
mov
aam
call
jb
scas
icebp
sbb
imul
jns
or
ins
cmps
ins
mov
xchg
jae
dec
cmp
xor
imul
scas
push
sub
xchg
int3
not
loopne
push
(bad)
in
jge
sbb
jo
aas
push
jl
sbb
js
retf
lods
sub
push
add
mov
fst
jb
mov
aaa
mov
or
or
rol
inc
test
jb
push
and
je
xlat
(bad)
sbb
sbb
cmp
jle
xchg
cmp
cdq
mov
in
ret
fbld
pop
stc
sbb
cmp
dec
repz
cmp
dec
frstor
sar
xchg
inc
sbb
int
test
fwait
push
inc
arpl
dec
sub
ins
xchg
sar
inc
cs
and
mov
ret
(bad)
and
(bad)
imul
retf
addr16
inc
dec
jmp
movs
int
retf
lahf
loope
mov
mov
ror
dec
jno
push
add
inc
icebp
jmp
adc
jge
int3
es
dec
or
aam
and
jae
inc
out
test
loope
jp
fst
jmp
enter
dec
cmps
pop
mov
mov
imul
push
inc
pop
neg
mov
lods
jle
sbb
lock
xor
lods
stc
pusha
adc
inc
stos
mov
xor
scas
push
into
in
dec
gs
mov
aad
sub
jnp
xchg
push
mov
fsub
xor
je
mov
pop
and
cwde
push
push
or
jl
(bad)
or
cmp
jnp
dec
imul
cmp
stc
int
mov
ja
outs
loope
jbe
imul
jmp
add
shl
test
loopne
jge
aaa
adc
dec
retf
mov
sub
or
call
mov
and
jo
clc
mov
int3
mov
xor
leave
mov
mov
ins
(bad)
sub
and
rcl
inc
cmp
add
outs
jne
adc
cdq
out
ins
adc
xchg
ss
popf
pushf
(bad)
nop
loop
push
push
xchg
dec
inc
rcr
mov
push
rol
push
pop
mov
push
jnp
and
xchg
mov
gs
or
inc
xor
push
loope
xor
arpl
xchg
int
add
popa
pop
ret
ins
rcl
or
and
int3
cmp
xor
int
mov
cs
xchg
ror
push
mov
pop
cli
mov
or
sbb
in
ins
sub
mov
(bad)
gs
hlt
adc
fist
pop
(bad)
ja
mov
outs
and
ret
ficomp
out
stos
int
popa
js
push
(bad)
pop
xchg
dec
rol
or
cmps
aad
mov
jmp
stc
inc
add
arpl
std
ins
dec
push
sub
inc
enter
mov
cmp
clc
movs
pop
cdq
pop
sbb
(bad)
repz
repnz
je
jb
mov
dec
jae
add
movs
jmp
(bad)
push
hlt
cmc
xchg
dec
gs
fdivr
inc
jno
ja
jnp
call
add
mov
mov
mov
movs
jmp
xlat
mov
dec
std
jnp
test
outs
movs
repnz
rcl
test
dec
popa
cmps
fs
dec
push
xchg
imul
stc
adc
add
adc
out
mov
aaa
xor
cmp
aaa
adc
push
loopne
clc
jl
(bad)
call
push
addr16
cmp
or
repnz
or
inc
outs
sub
xchg
mov
pop
inc
lds
inc
add
sub
test
jno
jmp
jmp
mov
stos
pop
fadd
loopne
test
inc
inc
mov
rol
mov
ja
xor
push
dec
sub
push
mov
mov
add
xchg
push
pop
add
or
mov
xchg
inc
and
and
fcom
shl
jmp
sbb
mov
hlt
cmps
cmp
push
cwde
sar
sbb
push
fs
and
stos
movs
push
ror
pop
movs
dec
jge
daa
jmp
out
add
test
nop
sbb
nop
loop
xchg
div
repnz
dec
arpl
cmp
xor
nop
sbb
sbb
pop
aas
and
shr
push
fiadd
fimul
pusha
imul
bound
sub
ficomp
xor
sbb
mov
or
pop
cld
add
(bad)
jbe
ss
xchg
dec
jle
pop
cs
mov
mov
repz
jnp
retf
jge
dec
dec
outs
jb
or
dec
popa
xchg
popf
sub
fcom
xchg
or
sar
lods
(bad)
xchg
or
push
jb
jae
scas
and
push
jnp
je
jle
cmp
enter
ja
outs
ror
jle
sub
xchg
sahf
(bad)
inc
imul
outs
(bad)
daa
mov
ja
mov
push
sub
sar
mov
push
mov
push
xor
pop
xchg
sub
mov
shl
mov
xchg
or
lds
mov
sub
into
clc
(bad)
push
add
test
and
pop
adc
or
std
loope
(bad)
mov
pop
and
mov
sub
xchg
and
cmp
add
mov
jg
nop
push
jle
ins
jmp
cli
mov
mov
jbe
pop
push
dec
and
imul
aaa
cld
cmps
lds
imul
data16
stos
jno
mov
push
int3
pop
dec
popf
mov
xchg
int3
arpl
into
je
fmul
add
loop
out
sub
out
or
jge
push
not
add
ret
sahf
scas
(bad)
pop
shl
cs
or
push
and
in
inc
mov
or
clc
jbe
jnp
ins
add
mov
jns
mov
and
cmp
mov
data16
or
mov
xchg
je
ror
test
sbb
push
mov
push
(bad)
mov
pop
test
fistp
shr
adc
push
movd
mov
hlt
jo
(bad)
inc
cmp
popa
cmp
cli
movs
cwde
data16
cwde
dec
popa
lea
or
add
stos
(bad)
fwait
shl
adc
fdiv
clc
jge
inc
(bad)
fbld
cmp
call
call
fidivr
inc
xor
fdivr
outs
icebp
sbb
push
dec
fcom
sbb
(bad)
ror
mov
xchg
data16
popf
cmp
data16
mov
repnz
or
adc
stc
lea
aaa
lds
dec
xor
mov
int3
adc
mov
push
clc
icebp
fmul
and
iret
inc
or
dec
cmp
push
(bad)
sbb
es
jecxz
add
(bad)
into
jbe
jne
cli
xchg
test
add
mov
movs
push
push
inc
js
add
sar
call
jmp
fsubr
out
das
daa
jne
pusha
mov
mov
push
and
inc
jecxz
out
xchg
dec
or
in
mov
xlat
xor
popf
and
cmp
es
sbb
je
inc
ins
retf
mov
or
sub
dec
and
or
retf
adc
hlt
xor
outs
mov
push
push
jmp
cld
push
std
dec
in
or
loopne
cmp
or
add
mov
cmps
out
mov
jle
outs
imul
jle
test
dec
das
or
mov
je
sti
xor
jle
or
jno
jno
mov
mov
fs
fcomp
loope
adc
in
jbe
jecxz
mov
fwait
in
xchg
das
mov
test
jmp
add
mov
jo
(bad)
push
add
mov
cdq
lahf
lods
and
inc
push
mov
std
lds
addr16
mov
cli
jnp
pop
and
psllw
loope
retf
xor
xor
in
icebp
lods
push
outs
sbb
or
test
pop
sbb
mov
jmp
ds
(bad)
lods
push
jp
js
cwde
push
lea
jecxz
push
ins
loopne
(bad)
mov
push
sub
inc
paddusw
or
or
loop
test
push
and
cmp
or
or
adc
outs
cli
retf
pop
mov
fst
sti
cmc
or
cld
test
pop
mov
and
enter
repz
cwde
adc
std
je
idiv
int3
pop
ja
(bad)
mov
(bad)
mov
aaa
stc
adc
jbe
inc
lahf
test
mov
mov
int
inc
mov
mov
push
xchg
dec
cwde
arpl
jecxz
jecxz
cld
clc
rcr
sbb
test
or
repnz
idiv
cmp
xchg
icebp
ficomp
xchg
stc
sbb
pop
mov
es
xor
stos
inc
pop
jl
ror
jb
in
sar
mov
fdivr
add
or
mov
mov
out
fwait
pop
jmp
movs
pop
push
(bad)
jg
xchg
(bad)
push
ret
call
enter
inc
inc
jge
add
or
xchg
into
in
push
mul
into
adc
dec
dec
ret
hlt
lahf
aad
pusha
pop
sub
imul
sbb
jl
inc
pop
cmp
inc
(bad)
outs
cmps
push
pop
mov
cmp
cmp
mov
add
cmp
lock
jns
mov
push
jp
mov
jl
mov
outs
adc
lea
out
mov
inc
jno
xchg
push
push
into
sub
ss
push
push
repz
jmp
add
loopne
in
shr
lea
outs
or
test
pushf
push
mov
pop
or
xor
dec
mov
fild
mov
jne
cmp
cmps
xchg
sbb
arpl
push
fsub
mov
(bad)
ins
pushf
fcom
xor
out
xchg
xor
mov
movs
std
sub
xor
(bad)
nop
pop
scas
or
fcom
cmp
dec
call
int3
(bad)
jl
mov
(bad)
xchg
xchg
or
sahf
mov
xor
out
pop
mov
js
fucomip
cmps
cmp
lods
ffree
push
jg
push
jno
lock
jmp
out
inc
imul
(bad)
mov
aaa
cmp
fnstsw
or
cmp
test
in
aad
hlt
inc
(bad)
icebp
push
mov
lods
jae
pusha
mov
mov
sub
in
outs
add
adc
retf
inc
aad
enter
or
or
mov
or
imul
ror
sbb
movs
fisubr
push
pop
(bad)
fstp
ja
and
dec
sub
push
ficomp
cmp
mov
outs
mov
ds
jp
sub
cmp
retf
aas
imul
call
clc
sbb
cmps
sub
pop
sbb
pop
hlt
fisub
inc
dec
mov
jbe
push
jg
retf
leave
stos
jmp
xor
pop
pop
sub
add
sub
scas
adc
sbb
loop
out
mov
cmps
sbb
sbb
pmaxsw
mov
push
mov
test
ja
ss
or
dec
jg
popf
sahf
mov
mov
jbe
leave
fwait
jb
pusha
or
or
pop
jb
mov
sbb
push
or
bound
das
xlat
pop
int
leave
or
ins
pop
mov
xchg
adc
mov
dec
inc
pop
clc
aas
mov
mov
mov
(bad)
(bad)
adc
xchg
outs
sar
xor
adc
rcr
repz
mov
mov
cmps
mov
mov
mov
add
test
mov
icebp
retf
outs
pop
inc
pop
call
mov
adc
jns
mov
jle
jmp
out
out
addr16
mov
std
popf
int3
dec
into
xchg
mov
fst
movs
inc
and
cmp
bound
xor
dec
xchg
pop
or
cmp
pop
outs
mov
pop
mov
pusha
xor
sahf
popa
push
xor
int3
mov
dec
xor
mov
shl
push
or
jae
repz
jge
xchg
cwde
xchg
jmp
push
aas
int3
test
xchg
mov
lock
aas
jbe
lds
movs
add
int3
into
mov
xor
lock
sahf
xchg
pop
and
pcmpeqb
mov
dec
call
jmp
mov
ret
rcr
dec
movs
pop
pop
xor
or
dec
cmp
pop
sbb
stc
jae
daa
xchg
jecxz
rol
cmp
jns
or
stc
push
pop
add
in
dec
mov
fwait
sub
aam
mov
repnz
into
mov
jnp
xor
xchg
loopne
imul
sub
jmp
fwait
pop
enter
jne
cwde
jge
adc
or
js
test
imul
rcr
mov
cs
pop
xchg
pop
inc
cdq
inc
retf
aas
push
pop
push
(bad)
ds
jl
push
addr16
jg
push
ins
or
xchg
sub
inc
pop
punpckhwd
cmp
jg
std
call
cmc
cmp
jo
repz
rol
lahf
mov
repnz
aas
out
fwait
jb
cmp
pushf
sbb
inc
sahf
and
fidivr
push
jns
mov
(bad)
(bad)
jl
in
mov
fld
adc
or
pop
fs
cmp
push
add
imul
scas
(bad)
je
jno
aaa
les
sub
loop
jp
or
sbb
jo
jne
xchg
jb
mov
pop
loope
mov
jp
adc
dec
sub
jl
dec
inc
loop
jno
jl
test
mov
fadd
mov
push
dec
mov
fsub
mov
xor
mov
sbb
sbb
loop
fdivr
xor
push
ds
das
iret
and
(bad)
out
xor
jecxz
mov
push
push
into
pop
cwde
int
fnstenv
and
dec
les
jb
popa
(bad)
cld
add
mov
jg
and
clc
out
fld
dec
mov
icebp
push
icebp
dec
mov
(bad)
(bad)
loope
sub
mov
mov
mov
lods
push
sahf
or
das
xchg
jp
(bad)
push
xchg
inc
scas
imul
sub
loopne
xlat
cwde
dec
ss
lahf
jl
adc
les
inc
push
or
pop
stos
retf
cmp
gs
xor
cli
push
xchg
cs
lds
fwait
inc
pusha
pop
stc
adc
test
xchg
out
aas
cli
retf
mov
mov
push
outs
cld
call
push
cwde
adc
sub
jne
push
loopne
call
fld
sbb
ss
dec
leave
pop
jp
ins
iret
loope
fcmovnb
xlat
ins
ds
and
stc
dec
(bad)
inc
icebp
int
and
add
outs
arpl
sub
pop
mov
scas
inc
aad
jge
or
cmp
add
lods
into
shl
jl
fdivr
mov
cmp
mov
or
mov
mov
ret
pop
out
div
jmp
push
mov
out
aam
sub
mov
jge
nop
xchg
mov
and
(bad)
repnz
(bad)
sub
test
inc
clts
jo
jp
(bad)
call
mov
push
loop
(bad)
lods
pop
icebp
icebp
adc
or
pop
dec
push
mov
out
test
mov
test
aam
pop
mov
rcl
sub
mov
retf
pushf
(bad)
sbb
or
pop
jle
shl
xchg
jmp
or
outs
test
fidivr
pusha
lock
jb
jl
jp
and
add
repz
and
leave
stos
sbb
dec
xchg
clc
pop
psubusw
loopne
fld
mov
inc
dec
daa
inc
arpl
mov
int
or
jmp
fstp
jle
xchg
(bad)
loopne
jb
loope
sbb
xor
sbb
ret
jg
nop
inc
pop
clc
xor
sbb
cmp
push
add
test
ins
in
and
pop
rcl
lods
fisub
rep
push
int3
xchg
mov
loopne
xchg
jmp
in
les
in
in
daa
push
test
scas
inc
push
mov
aaa
bound
loop
aad
popf
stos
jae
pushf
sub
popa
cld
inc
and
and
clc
repnz
mov
iret
mov
mov
mov
lahf
xor
jb
daa
xchg
add
jmp
ins
push
fs
push
and
(bad)
out
adc
adc
or
jmp
and
xor
inc
pop
std
mov
sbb
das
jb
icebp
or
(bad)
ret
jbe
arpl
mov
loope
cli
inc
jo
mov
cwde
mov
ret
mov
cmp
in
inc
inc
mov
xchg
fcomip
pusha
test
xor
mov
retf
or
adc
push
test
sub
cmc
xor
and
(bad)
mov
aaa
(bad)
shr
into
icebp
inc
push
mov
inc
in
sbb
push
ins
and
xor
sub
push
lahf
inc
pop
inc
js
sbb
and
rcr
and
adc
mov
pop
call
or
sbb
out
aam
xchg
sbb
pop
dec
(bad)
jb
in
nop
bound
dec
rcl
mov
pusha
test
aaa
mov
jle
jp
idiv
jbe
push
xor
(bad)
cmps
stos
movs
imul
sub
mov
sub
jns
nop
pop
push
mov
test
xchg
out
retf
push
int3
sub
movs
repnz
in
jmp
pop
or
xchg
cs
(bad)
xchg
mov
pop
cmp
push
lea
adc
ss
arpl
repnz
sub
jmp
push
pop
mov
mov
add
fdivr
mov
mov
xchg
call
push
mov
push
in
ja
ror
dec
call
push
lock
add
ret
psrad
jecxz
das
daa
lock
push
adc
mov
mov
fcom
xchg
fidiv
jecxz
sbb
sbb
scas
int3
fist
je
movs
pop
outs
cmps
sub
jg
push
daa
fprem1
loopne
pusha
push
adc
gs
push
scas
shl
lock
push
adc
loope
stos
dec
mov
sub
xchg
jecxz
out
sbb
add
fwait
xchg
clc
fistp
xchg
add
in
inc
mov
mov
scas
mov
cmps
add
mov
adc
lods
push
xchg
ror
cmc
inc
xchg
out
xor
jmp
jmp
in
jnp
xchg
ror
les
push
mov
inc
cs
popf
dec
mov
stos
arpl
sbb
push
cld
jecxz
sti
mov
mov
fnstsw
movs
push
push
dec
aas
sbb
aas
ins
push
inc
out
jae
add
or
or
in
dec
(bad)
fnsave
cmp
inc
mov
outs
mov
fst
mov
repz
outs
xchg
add
inc
xchg
dec
rcl
jbe
mov
and
call
xchg
mov
mov
mov
pop
push
dec
xor
dec
dec
mov
xchg
push
fwait
mov
loopne
dec
loope
adc
ret
dec
jb
inc
fsub
shl
rcl
not
(bad)
stc
inc
jp
mov
cmps
or
push
jg
jne
addr16
mov
xchg
mov
loopne
pop
jae
jg
xor
pushf
sub
jl
in
inc
scas
xchg
inc
pushf
fwait
repz
fimul
inc
repz
sti
add
cmp
pusha
es
inc
(bad)
mov
nop
mov
pop
jne
mov
scas
dec
xchg
jnp
daa
and
fcmovnb
movs
xor
push
repnz
fmul
and
or
idiv
adc
js
jne
inc
loopne
mov
(bad)
in
sub
retf
pop
scas
fisub
in
call
sahf
in
sub
fisubr
aam
or
jae
jno
push
jnp
and
seto
(bad)
jmp
jp
enter
xchg
jge
test
pop
mov
xchg
and
enter
fcomp
inc
push
ins
rol
or
dec
lds
fst
push
inc
jmp
ins
into
pop
add
mov
addr16
mov
jae
sbb
ret
mov
sar
popf
outs
push
ins
pop
jb
cdq
(bad)
sub
mov
retf
mov
stc
and
aam
fdivp
scas
in
int3
dec
je
stos
pop
mov
pop
pop
lock
fcom
jg
cli
fbstp
or
xor
in
lock
leave
sbb
cmp
rcr
sbb
imul
dec
mov
or
neg
call
enter
pop
cmp
mov
ins
push
aam
aam
pop
or
dec
and
mov
sub
clc
sub
sar
loope
pop
adc
stc
pop
sbb
push
es
hlt
jno
out
(bad)
popa
jp
shl
or
inc
dec
mov
xor
xor
fisttp
inc
xchg
out
ins
lods
and
stos
lods
or
int
nop
stc
mov
push
adc
mov
mov
jp
mov
lea
adc
call
or
mov
cs
retf
and
lods
sbb
sub
pop
mov
ret
loop
fwait
push
fstp
xor
mov
js
rcr
inc
stos
xchg
aad
xor
add
(bad)
(bad)
sub
scas
nop
jle
fwait
mov
sbb
and
inc
int3
es
(bad)
mov
dec
cmp
sub
mov
fld
int
bound
out
repnz
aas
add
inc
push
es
pextrw
and
sar
in
adc
push
lock
test
pusha
sbb
cmp
imul
add
push
mov
push
mov
in
js
inc
out
dec
cwde
shr
mov
iret
jg
xchg
ins
adc
or
sub
nop
into
fsub
shr
add
sub
imul
add
retf
repz
ret
sbb
das
and
iret
ss
mov
(bad)
xchg
pop
pop
push
jne
(bad)
imul
push
cmp
popa
jge
test
xor
stos
fistp
nop
mov
std
dec
aaa
data16
fiadd
push
sbb
fdivr
xor
jne
sbb
cwde
inc
out
in
retf
ins
enter
jae
jae
and
inc
dec
stc
push
cmp
ds
je
jae
add
hlt
mov
push
and
mov
mov
jnp
xor
adc
inc
jle
and
add
adc
cmp
and
and
pop
adc
in
jmp
daa
or
sahf
or
and
out
(bad)
sbb
inc
int3
mov
call
not
pop
pop
mov
shl
or
je
ficomp
fcomip
hlt
(bad)
mov
or
mov
xor
icebp
add
das
cmp
cmp
jl
inc
xor
(bad)
aad
add
sbb
or
inc
scas
retf
aad
cdq
int
xlat
fidivr
dec
mov
xor
ds
pop
shl
xchg
dec
(bad)
pushf
mov
inc
nop
push
in
mov
pop
sbb
neg
(bad)
mov
bt
dec
cmp
test
mov
dec
pop
fld
shl
mov
pusha
pop
push
bound
xchg
add
arpl
iret
test
jp
push
ds
in
(bad)
lea
xor
adc
ret
mov
stc
dec
mov
add
add
sbb
pop
mov
sub
fs
add
ds
inc
js
xchg
cmps
cli
sub
push
xor
jecxz
popf
gs
mov
ins
fistp
fnstenv
sub
xor
mov
xlat
stos
mov
cmps
cmps
rol
sahf
out
mov
outs
mov
out
cli
inc
dec
or
jb
xchg
sahf
test
ror
jg
imul
cmps
sbb
outs
and
loope
dec
dec
mov
xchg
test
inc
jle
or
pop
add
cli
fcom
not
pop
cwde
call
pop
mov
lods
jmp
rol
test
and
add
xlat
cmp
rol
inc
neg
add
xor
mov
aaa
push
(bad)
es
sbb
nop
or
mov
dec
cmc
sti
call
mov
add
test
mul
inc
or
mov
adc
mov
stc
adc
stos
scas
mov
xor
popf
jecxz
mov
cwde
pop
retf
retf
pusha
xor
jb
(bad)
pop
or
cmc
scas
test
mov
in
scas
push
inc
cld
stc
shl
mov
ins
cmp
xchg
jp
sub
mov
push
sahf
in
(bad)
cmps
push
outs
pop
adc
jbe
test
sub
sbb
push
(bad)
(bad)
rcr
mov
daa
cmp
mov
pop
and
aam
jae
iret
inc
(bad)
dec
sgdtd
jno
int3
mov
fwait
push
test
das
lods
adc
div
pmulhw
sub
iret
xlat
stos
imul
daa
cmp
lock
or
scas
mov
enter
es
inc
movs
int
mov
and
popf
push
call
xchg
mov
loopne
inc
les
xchg
jns
jg
leave
out
cld
pop
inc
adc
test
mov
int
xchg
shl
lods
idiv
adc
jmp
stos
lds
retf
pusha
jbe
add
sbb
sub
dec
sbb
mov
lahf
loop
mov
imul
adc
jmp
bswap
push
pusha
out
xor
lock
xor
test
cmps
fild
dec
pop
popf
add
push
push
jb
pop
int3
hlt
jbe
cmps
out
mov
ret
std
sbb
in
jne
mov
or
add
and
pop
or
ja
xchg
push
sub
xor
inc
cdq
pop
mov
adc
inc
mov
push
sbb
xlat
cld
inc
shl
je
js
rol
stos
dec
sbb
ror
adc
mov
mov
shr
lods
mov
pop
fadd
add
jle
sbb
sub
out
repz
dec
retf
dec
test
je
cdq
add
xor
test
cmp
push
cmp
push
cmps
out
jmp
cwde
jg
cli
add
adc
push
jo
push
sbb
pop
cmc
scas
xchg
xchg
jno
(bad)
in
es
cld
and
fs
sub
aaa
fdivr
ror
pop
jecxz
dec
repnz
pop
and
dec
adc
xor
scas
daa
adc
dec
push
mov
sbb
jge
xchg
pop
loop
mov
cmp
hlt
test
fst
mov
sub
mov
fcomip
adc
dec
adc
inc
cvtps2pi
push
push
sti
je
aam
in
pop
lahf
rcr
inc
test
adc
mov
cmp
mov
mov
out
adc
in
popf
mov
or
sbb
and
test
pop
mov
stos
neg
push
mov
mov
mov
or
mov
or
dec
(bad)
fwait
cmps
mov
test
movs
mov
sbb
fcmovbe
bound
mov
lds
inc
cmp
loopne
dec
call
mov
sub
jg
mov
adc
or
push
pop
cmp
sar
in
or
sub
dec
mov
daa
adc
pushf
bound
ss
outs
push
jns
mov
jl
in
xchg
add
cwde
add
test
(bad)
mov
sub
movs
iret
lock
sub
sbb
in
mov
mov
mov
sub
cmps
cmp
jecxz
push
mov
mov
jmp
cmp
(bad)
mov
cld
lds
mov
jle
inc
cmp
dec
cld
or
fcomp
push
mov
pop
lods
icebp
sbb
xor
dec
cmp
dec
sbb
jo
les
sbb
or
inc
repz
xlat
call
push
and
out
and
fdivr
cli
(bad)
in
jecxz
fdivp
mov
push
mov
int3
add
sub
add
lods
jne
mov
call
aaa
fs
or
adc
sub
out
sbb
add
mov
idiv
call
mov
loopne
or
xchg
fnsave
out
xchg
push
js
add
jmp
xor
or
ficomp
mov
push
cwde
dec
dec
imul
ret
jmp
sbb
stos
inc
mov
jnp
or
jl
mov
call
cld
neg
retf
jp
sahf
shr
sub
cmp
dec
clc
(bad)
(bad)
sahf
jbe
add
pushf
adc
add
(bad)
call
or
push
loope
loope
arpl
adc
int
pop
push
jo
xchg
xchg
mov
mov
cmp
mov
pop
xor
xchg
sub
mov
sub
dec
xor
dec
sub
cmp
push
push
fldenv
mov
mov
sub
into
push
call
mov
popa
sti
mov
pop
dec
in
into
movs
retf
aaa
fcomp
cmps
dec
pop
pop
sbb
movs
ja
inc
ins
enter
in
aad
jle
xor
jmp
outs
retf
push
add
push
mov
xor
xchg
sub
fdivr
movs
stos
sar
xchg
cdq
(bad)
imul
or
push
jp
into
cmps
std
jmp
mov
add
lods
enter
(bad)
mov
inc
pop
stos
pop
or
stos
xor
pop
sbb
sahf
(bad)
lods
mov
or
sbb
imul
xor
pop
pop
add
mov
xor
jecxz
fisubr
xchg
mov
dec
mov
gs
cmp
cld
test
sbb
or
xchg
rcr
xor
add
pop
popf
cmps
pop
mov
add
sub
ja
imul
jo
in
adc
into
inc
call
pusha
fdiv
int
pop
pop
loop
sub
dec
jnp
jno
jmp
adc
bound
add
mov
sets
lock
adc
fld
sub
mov
std
repnz
jb
aad
dec
adc
int3
leave
mov
outs
xor
aaa
fwait
xchg
sub
jne
push
shl
xor
pop
pop
nop
pop
ja
lea
mov
push
sbb
or
xchg
loopne
push
or
ror
push
sub
int3
inc
add
data16
sbb
jg
lea
(bad)
jno
dec
(bad)
cmp
mov
fwait
lahf
xchg
scas
ins
add
jge
shr
jmp
ins
xlat
les
lahf
add
call
cdq
sbb
mov
das
mov
sbb
push
stos
iret
jne
push
iret
div
jle
push
mov
out
dec
push
sub
cmp
push
hlt
xor
jae
push
xchg
mov
nop
xchg
clc
mov
pop
lods
aam
mov
sub
xchg
mov
in
pusha
shl
or
movs
mov
(bad)
adc
lahf
repnz
or
mov
and
cmp
data16
or
inc
cmc
icebp
cmps
fld
iret
add
test
mov
outs
jns
inc
mul
jns
xor
cmp
cmp
sbb
cmps
pop
add
pop
jmp
dec
jmp
stos
(bad)
push
cmc
jmp
aas
rol
inc
ds
std
dec
pop
push
out
push
adc
out
jne
mov
sbb
jge
xlat
in
or
jae
fld
pop
gs
mov
addr16
sbb
loopne
cmps
frstor
push
or
hlt
not
sub
inc
jge
or
call
fistp
jmp
aas
xor
and
int
js
test
ins
cdq
aas
inc
lahf
fs
pop
or
aam
fist
mov
mov
adc
aad
jl
mov
leave
adc
lods
in
fist
in
icebp
outs
mul
ds
and
jne
not
xchg
sti
mov
fs
rol
cdq
inc
ds
inc
das
push
inc
je
(bad)
call
cwde
inc
(bad)
pop
and
mov
mov
loopne
xchg
push
imul
clc
jbe
icebp
adc
sbb
mov
adc
out
sbb
test
cmp
out
jecxz
add
add
add
es
adc
in
clc
jg
xchg
fwait
add
inc
inc
js
xlat
mov
mov
xor
and
and
pop
cmc
dec
dec
ins
loope
mov
inc
inc
inc
cmps
lahf
jmp
adc
pop
xchg
je
push
test
xchg
push
test
inc
mov
jg
xchg
xchg
sbb
dec
mov
icebp
je
and
ja
sub
(bad)
call
pop
fmul
or
dec
sbb
outs
mov
inc
retf
mov
add
add
dec
mov
lock
out
movs
inc
jle
in
mov
xchg
(bad)
pop
pop
push
sahf
sahf
mov
ficomp
imul
and
push
fs
xchg
pop
mov
mov
sub
cmps
stos
push
adc
or
cmp
dec
ret
dec
cdq
enter
mov
(bad)
in
mov
xor
addr16
sbb
daa
repnz
sbb
adc
pop
outs
rcr
push
lods
xchg
test
push
mov
repz
jge
stos
lods
test
xor
push
into
push
xlat
mov
hlt
cmp
sub
sub
int
pop
das
(bad)
rcl
xor
outs
loop
aaa
test
ret
xchg
fiadd
xor
aaa
mov
mov
pop
call
or
rcr
or
inc
mov
icebp
mov
or
call
(bad)
cmp
in
dec
data16
xlat
add
scas
cld
mov
mov
jmp
ja
xchg
sbb
mov
fs
aam
jae
mov
int3
cmp
and
or
adc
test
out
aad
movs
xor
fimul
push
test
mov
shl
in
stos
xchg
pop
xor
int
push
aaa
xchg
xor
sub
and
out
out
cmps
sub
repz
jo
das
sbb
rol
aas
sub
ret
jmp
inc
inc
aam
movs
mov
pop
and
cmp
jecxz
cwde
push
xchg
enter
sbb
xchg
popa
add
(bad)
stos
ja
mov
test
adc
std
sbb
and
pop
stc
loop
mov
adc
or
in
clc
std
out
xor
mov
mov
out
loope
or
icebp
xchg
pop
mov
mov
add
or
inc
and
rcr
jmp
or
jecxz
adc
mov
call
fcomp
jl
xchg
push
pop
jbe
dec
or
popa
mov
addr16
(bad)
jmp
dec
leave
cdq
hlt
mov
js
ret
retf
lahf
inc
and
scas
enter
into
dec
test
lock
xchg
and
jl
lahf
push
jge
(bad)
adc
cld
je
scas
adc
pop
mov
xchg
push
retf
js
call
loopne
and
outs
scas
packuswb
lods
jmp
mov
jl
(bad)
in
jb
xchg
scas
xlat
push
jbe
xchg
mov
es
inc
add
jo
mov
dec
test
adc
pusha
out
sbb
mov
sub
fsub
iret
pop
adc
sbb
or
xchg
inc
jbe
and
add
iret
sub
adc
xchg
sti
jb
adc
fdiv
and
repnz
dec
rol
xor
xchg
lds
xor
loop
xor
(bad)
sbb
jo
fsub
cli
adc
xchg
mov
shr
cwde
retf
ins
xor
das
in
xor
pop
push
adc
push
adc
sbb
mov
mov
(bad)
sub
inc
xor
add
shl
cmp
xor
ffree
mov
dec
sub
out
push
and
arpl
jg
push
inc
shl
ss
mov
addr16
add
cmp
sbb
dec
xlat
test
pop
xchg
daa
push
es
xchg
push
popa
mov
xchg
nop
and
dec
addr16
dec
or
or
sbb
ret
inc
inc
cmc
jle
mov
adc
jecxz
lahf
es
inc
jno
popa
dec
sbb
scas
scas
lods
inc
out
mov
mov
push
out
ss
xchg
add
xlat
jne
movs
sbb
test
fdivp
push
icebp
sbb
mov
gs
sub
ret
jecxz
lahf
mov
xor
sahf
xchg
mov
jge
lea
adc
cmc
dec
sbb
loop
xor
dec
mov
mov
dec
pop
push
fcomp
cdq
jg
xchg
cmp
fstp
retf
xor
xor
mov
add
push
aas
mov
pop
push
popa
inc
call
cmp
les
xchg
cmps
inc
inc
xor
gs
xchg
jno
cmp
mov
mov
inc
into
push
push
jne
fcomp
(bad)
aad
test
cmps
sahf
sar
and
mov
jmp
es
aad
icebp
add
xor
ss
outs
sbb
pop
sbb
lods
pushf
sar
or
daa
repnz
fimul
js
jb
dec
(bad)
shr
sti
jmp
xchg
push
add
and
dec
inc
es
push
dec
mov
scas
adc
cli
mov
pop
icebp
push
mov
loope
jp
mov
xchg
mov
xchg
(bad)
jl
cmp
xchg
lds
mov
imul
mov
pop
inc
xor
jecxz
cmp
ficomp
or
scas
xchg
test
lods
addr16
push
idiv
lods
ins
in
stc
enter
mov
jnp
add
shl
pop
daa
retf
lahf
mov
fsubr
adc
pop
rol
push
jecxz
pop
xchg
or
jge
jge
cmc
sub
sahf
jb
movs
or
int3
ss
pop
aad
xchg
dec
push
es
pop
pop
mov
fbstp
add
push
(bad)
enter
mov
(bad)
jno
push
out
cmp
xor
test
nop
jns
mov
sub
cmp
ja
push
add
mov
rol
mov
leave
sbb
retf
jo
fild
inc
xchg
inc
iret
rcl
loop
sbb
xor
adc
pop
outs
lods
push
xchg
pop
and
xor
lock
bound
sbb
movs
push
out
jecxz
push
mov
cmp
pop
sub
rol
xor
pop
dec
push
clc
lods
mov
push
int
out
int3
add
or
inc
icebp
ret
rol
mov
add
mov
cmp
sub
rcr
xor
stc
js
ret
ds
fild
pop
sbb
xor
or
out
push
(bad)
jnp
add
movs
fdiv
test
cmps
sahf
sti
les
in
leave
pop
into
adc
xchg
xchg
and
and
mov
ins
aas
lods
jne
sub
xchg
pop
sbb
jp
jle
scas
or
daa
mov
aam
xchg
inc
ja
pop
or
cmps
nop
int3
out
bound
mov
scas
rol
out
pop
ds
imul
dec
dec
call
mov
pushf
aaa
pop
and
rcl
movs
mov
aam
enter
mov
xchg
sbb
add
mov
add
dec
cwde
inc
fidiv
cmp
in
test
shl
cli
jo
mov
(bad)
pop
in
nop
(bad)
or
inc
or
and
jne
mov
ins
fistp
adc
fisttp
push
sbb
retf
mov
lock
xor
or
fbstp
dec
inc
les
xchg
dec
cs
fisttp
dec
repz
or
and
sbb
enter
add
pop
xchg
dec
mov
in
dec
clc
mov
mov
adc
fs
sub
addr16
cmps
jo
mov
mov
inc
push
icebp
ror
or
pop
push
mov
sub
jp
imul
sub
cmp
es
adc
cmp
jmp
mov
adc
pushf
or
or
test
add
pushf
jmp
outs
pop
scas
(bad)
sahf
pop
(bad)
sub
fsub
mov
ret
jmp
fcomp
lahf
dec
fisubr
(bad)
sbb
nop
push
loope
pop
adc
dec
cmp
push
add
and
mov
xchg
fsubr
pop
lods
je
out
or
jno
sub
fidivr
inc
repnz
lds
test
mov
call
pop
arpl
mov
cmps
jne
je
fwait
rcr
or
(bad)
mov
adc
mov
mov
rcl
push
mov
sbb
jp
(bad)
push
mov
sub
mov
ds
ds
jge
adc
mov
clc
pop
mov
jmp
xchg
sub
aaa
push
pop
dec
sti
aam
or
fisub
mov
pop
mov
dec
retf
pop
mov
pop
xor
out
aas
fs
repnz
inc
imul
xchg
jmp
ret
xchg
sub
xor
retf
cmps
fimul
lods
(bad)
mov
imul
loopne
mov
mov
mov
std
pop
jp
shl
(bad)
fwait
loop
mov
xchg
pusha
es
sbb
out
jmp
loopne
es
cli
mul
shr
mov
dec
push
(bad)
outs
inc
push
pop
xchg
and
push
cmp
or
test
inc
jb
movs
cmc
mov
(bad)
jge
lds
cwde
(bad)
loope
adc
test
pop
mov
sbb
cmps
push
pop
retf
ja
das
sbb
jno
jne
leave
mov
pushf
pop
push
jmp
test
mov
jp
push
in
dec
xor
stc
(bad)
addr16
adc
nop
jae
shl
jg
movs
jp
cdq
aas
(bad)
push
into
sub
dec
inc
cmp
cmp
inc
push
and
mov
mov
mov
pusha
xor
es
ror
scas
inc
or
mov
(bad)
dec
stc
in
mov
mov
add
ret
jbe
adc
push
inc
mov
cmp
outs
bound
mov
cmp
or
repnz
xchg
xchg
push
aas
sar
jns
in
jb
push
push
into
sbb
mov
cmp
add
jmp
lahf
mov
dec
fdiv
jae
xchg
inc
sub
vshufps
lahf
clc
add
mov
out
push
inc
pop
mov
mov
cwde
xchg
bound
js
inc
pop
jmp
ror
mov
les
and
fisttp
jae
cmp
adc
cmp
cwde
pop
mov
(bad)
pop
mov
mov
cmp
sub
or
push
test
cld
cmps
inc
sub
(bad)
cwde
pop
loop
cs
jg
mov
imul
sub
lahf
ret
xor
cmp
inc
cmp
lods
cli
inc
aad
pop
and
lea
aam
inc
push
pop
sub
add
aad
pop
outs
dec
aas
fcom
xor
push
test
int3
fdivr
stc
xchg
iret
mov
mov
sbb
mov
stos
ret
loope
cmp
scas
cmp
ret
xchg
sahf
fisttp
sbb
adc
out
out
mov
and
call
and
ss
adc
bound
or
inc
ja
sahf
cmc
fwait
inc
std
out
xor
inc
xchg
mov
sbb
mov
sbb
inc
push
or
jns
mov
data16
pop
sbb
cmp
fsubr
stc
test
sti
stc
inc
lea
add
inc
aas
popa
mov
stos
xor
or
lods
mov
hlt
iret
jnp
std
xor
imul
into
rol
cmp
dec
fiadd
mov
push
push
push
dec
fnstcw
je
pop
dec
or
cmps
push
mov
mov
bound
pop
cmp
rcr
jle
idiv
fisttp
(bad)
jo
add
mov
out
data16
and
xchg
sub
and
dec
cli
cli
dec
add
les
jbe
retf
xchg
dec
mov
popa
pop
out
xor
fsub
(bad)
mov
pop
mov
mov
xchg
sbb
pop
inc
scas
loope
mov
data16
fcomp
std
jae
pop
jle
inc
and
orps
in
xchg
dec
mov
pop
mov
inc
inc
add
aas
inc
push
sub
jmp
inc
xor
or
(bad)
xchg
push
or
movs
jle
push
sub
add
adc
test
push
push
push
mov
ins
int
push
movs
push
pop
retf
inc
dec
mov
in
ss
push
in
and
(bad)
mov
or
and
scas
aad
add
xlat
fsub
in
enter
xor
push
mov
movs
lods
fiadd
push
pop
movs
xlat
not
aam
iret
xor
sahf
and
mov
ss
jge
aaa
cmp
mov
jno
pushf
in
out
loope
add
add
int3
jmp
aad
popa
xchg
loopne
ins
fucomip
jle
ss
sbb
das
sub
dec
and
push
das
mov
xchg
push
xchg
mov
ja
jmp
iret
mov
xor
add
out
(bad)
sbb
push
sbb
push
retf
jmp
adc
add
or
not
addr16
ds
inc
fst
shr
add
outs
in
mov
hlt
sahf
pop
movs
xchg
jo
xchg
sti
shl
adc
fld
test
idiv
pop
movs
ror
jmp
sbb
push
aad
xchg
cmp
je
stos
inc
leave
aaa
mov
mov
xchg
pop
aaa
and
jg
cmp
hlt
push
cli
fidivr
pop
pop
pop
sbb
shl
fiadd
es
add
out
in
push
cmp
fwait
in
pop
mov
ret
jno
xchg
cwde
inc
xor
sti
push
call
dec
ja
mov
mov
popa
sbb
in
std
aaa
cmc
jecxz
mov
lods
xchg
ins
pop
fistp
sar
pop
push
pop
mov
in
jae
clc
and
fldl2t
out
outs
xor
mov
outs
xlat
fs
fisubr
adc
clc
mov
imul
mov
out
pop
or
cli
push
out
(bad)
popf
push
mov
call
pushf
ror
or
sub
jl
retf
xor
test
ret
out
jbe
dec
push
add
add
xchg
jne
mov
sbb
movs
jb
test
repnz
xchg
mov
in
or
xchg
mov
nop
jecxz
sub
retf
daa
bound
mov
out
mov
fbstp
es
test
pop
adc
adc
jmp
dec
not
(bad)
jp
enter
sub
repnz
and
mov
gs
sti
addr16
aaa
push
pop
dec
sub
ficom
int
push
cmp
sbb
pop
test
xchg
aaa
(bad)
fisub
arpl
cmp
nop
push
movs
or
stos
mov
or
mov
aad
shr
shr
adc
cmp
adc
loope
xchg
popf
jne
push
cmp
stos
add
std
ror
pop
xchg
(bad)
cmp
push
cmps
icebp
test
jo
pop
mov
pop
xchg
or
and
or
daa
je
aas
jle
adc
(bad)
mov
jno
push
add
lock
mov
jle
pop
icebp
inc
pop
push
imul
sbb
add
int
arpl
aaa
sbb
mov
retf
mov
adc
pop
pop
mov
call
int3
or
aam
inc
add
jl
xor
out
xor
mov
xor
sti
pusha
(bad)
mov
push
pop
inc
mov
mov
bndstx
(bad)
cmp
shl
adc
adc
bound
and
(bad)
and
dec
test
xor
xchg
inc
add
xlat
loop
sub
push
mov
jle
and
jo
fadd
aam
in
and
sub
inc
lock
sbb
xchg
mov
mov
push
sbb
mov
mov
loope
jge
ret
mov
add
mov
addr16
push
push
mov
sub
add
outs
jmp
pop
or
fdiv
mov
imul
push
cmp
shl
cli
loopne
mov
ret
cmp
push
shl
iret
fcmovb
rol
sbb
fs
ror
jno
shr
int3
in
push
cmps
xchg
and
aam
and
lods
jnp
dec
lods
imul
lods
pop
out
xchg
(bad)
cmp
shl
popa
inc
ins
bound
pop
pop
xchg
inc
dec
dec
and
in
cdq
cwde
sub
jb
mov
test
es
in
mov
push
cmps
popa
sub
mov
sbb
push
repnz
jb
jmp
movs
lock
jb
sbb
nop
and
mov
repnz
jne
enter
das
mov
xor
mov
or
jbe
dec
mov
repz
xchg
outs
inc
push
adc
fldcw
xchg
jp
xchg
clc
ror
jmp
cli
pop
xchg
aam
xchg
lods
sub
ds
mov
mov
xchg
mov
es
test
(bad)
mov
xchg
imul
mov
push
arpl
adc
cmp
out
js
sub
cwde
or
mov
cmps
pushf
sub
dec
dec
(bad)
cmps
xor
dec
jno
ins
ins
and
pushf
pop
and
dec
outs
sbb
dec
inc
sub
lahf
cmp
mov
sub
das
pop
and
movs
call
iret
mov
in
sbb
out
sahf
repz
xchg
jne
pop
xor
sbb
mov
test
mov
iret
imul
and
retf
in
dec
movs
mov
push
mov
das
gs
mov
je
cmc
movs
push
push
mov
ss
sbb
mov
push
add
push
data16
sbb
popf
xchg
adc
push
ror
fdivr
jl
(bad)
addr16
ret
mov
mov
xor
cs
mov
sub
(bad)
test
sub
pushf
dec
push
loope
xor
aas
out
das
or
retf
sti
icebp
adc
ins
and
pop
xchg
lods
arpl
mov
in
sbb
xor
mov
lods
leave
dec
mov
dec
jbe
ror
ret
cwde
sub
scas
and
clc
cmp
dec
cmp
adc
pop
sbb
xchg
rcl
jg
xor
retf
test
mov
sbb
cmp
ds
xchg
mov
jbe
dec
test
mov
mov
sbb
std
out
cmp
adc
cmp
sbb
push
in
in
dec
jno
xchg
jb
bound
out
mov
pop
daa
arpl
int
ins
aam
ins
push
sub
jae
sbb
xor
stos
shl
cld
or
pop
adc
pop
pop
jo
lds
stc
jmp
adc
push
les
je
(bad)
lock
fucomip
mov
cmp
mov
push
shr
sti
daa
outs
jne
xchg
aas
xor
cmp
mov
aad
lods
mov
leave
bound
iret
stos
sub
movs
out
loopne
js
pop
jmp
mov
jmp
movs
add
cmp
mov
cmp
sbb
sbb
mov
cli
call
out
enter
cmc
mov
test
add
sub
sbb
gs
aas
out
fld
aas
out
out
fnstenv
xlat
xor
stos
pop
inc
push
and
lea
stos
cmp
bound
rol
or
cmp
cdq
pop
call
pop
repz
(bad)
adc
push
dec
mov
inc
mov
shl
popf
xchg
(bad)
cmp
pop
clc
add
inc
(bad)
xlat
arpl
and
pop
mov
xor
xchg
sbb
inc
into
rol
in
add
sub
sub
cmp
aam
inc
add
das
cdq
outs
sub
inc
fisttp
adc
jns
not
hlt
adc
sar
loop
sahf
out
or
xor
loop
cmp
xlat
push
pop
shl
push
ds
mov
and
jle
push
jo
xchg
mov
jno
int
sub
adc
dec
inc
fwait
mov
dec
mov
ds
mov
icebp
adc
ficomp
popa
fcomp
dec
aas
les
repz
aaa
mov
clc
or
aam
(bad)
mov
retf
aaa
and
rol
nop
push
cdq
adc
push
aaa
jno
cmc
arpl
fs
lea
fcomp
inc
cmc
in
sbb
daa
pop
shl
jno
clc
ins
push
dec
mov
mov
fsubp
dec
inc
ja
add
dec
je
lock
aaa
sub
shl
test
pushf
mov
mov
cmp
pusha
ins
(bad)
fist
sub
push
xchg
ficomp
jno
pushf
in
(bad)
ficom
or
add
fisub
call
in
into
jno
ins
inc
dec
loope
cmp
inc
rcr
stos
push
or
sub
gs
aas
mov
adc
addr16
aas
sbb
mov
jns
ror
std
fdiv
ret
icebp
sbb
push
out
sbb
mov
pushf
shr
lahf
or
cmp
push
repz
xchg
outs
mov
add
mov
ins
(bad)
faddp
ss
sbb
sbb
xor
out
push
cld
nop
daa
adc
and
push
xor
and
in
retf
jae
xchg
sub
movs
push
fdiv
test
clc
(bad)
jmp
or
mov
fadd
xchg
mov
outs
not
inc
xchg
xchg
std
leave
sbb
cli
js
leave
dec
sbb
fstp
dec
ins
imul
mov
or
js
push
int
xchg
je
mov
inc
enter
std
cmps
pop
das
xchg
cmp
sub
aas
pop
stc
dec
xchg
(bad)
push
mov
cmp
out
pusha
and
retf
je
idiv
jmp
mov
fs
addr16
lds
inc
push
ins
mov
jnp
stos
adc
pop
outs
call
or
xchg
pop
and
push
mov
mov
aaa
mov
inc
mov
stc
int
and
aaa
into
cmovg
nop
and
sbb
push
xor
xchg
loopne
js
dec
jno
and
inc
mov
rcr
idiv
lahf
sahf
jmp
sub
dec
pop
paddsb
stos
mov
pop
push
rol
pop
adc
ror
mov
push
imul
xchg
fcmovu
lar
add
and
outs
test
xor
mov
pop
mov
in
aad
mov
cmp
or
shl
stc
dec
in
adc
sub
sbb
(bad)
cli
jb
fscale
inc
xchg
stc
sbb
cmps
jns
add
adc
mov
icebp
icebp
test
dec
jecxz
dec
jge
(bad)
jle
cwde
jae
cmp
sbb
add
out
sbb
aam
pop
cmps
pop
in
ficomp
cwde
push
fld
jns
jnp
js
(bad)
mov
mov
dec
dec
scas
adc
lock
push
cmp
ja
and
mov
or
xor
cmp
test
(bad)
in
pop
stos
xchg
lea
out
pop
cmps
pop
push
aad
cdq
jb
jl
addr16
lods
ret
pushf
jle
jo
and
push
pop
or
mov
sub
and
mov
xchg
in
push
imul
test
jb
sbb
aam
push
sbb
ds
fdivr
(bad)
inc
sbb
outs
call
mov
lods
mov
add
adc
mov
cmc
jae
cdq
(bad)
rol
sub
nop
outs
mov
add
mov
test
mov
cs
dec
fnstsw
and
repz
jmp
mov
je
inc
xor
dec
push
mov
sbb
xor
fwait
and
jns
lock
or
popf
cmps
es
dec
and
push
pop
and
jp
xor
scas
mov
movs
pop
xlat
out
jne
push
retf
mov
(bad)
push
mov
inc
and
rol
sub
sahf
neg
mov
or
and
pop
hlt
daa
lods
jnp
adc
in
icebp
push
xor
ss
retf
cmp
and
push
pushf
mov
and
pop
push
stos
ins
add
jno
cs
xchg
mov
dec
cdq
mov
cli
data16
push
es
std
repz
(bad)
setnp
leave
sbb
inc
je
pop
fstp
dec
je
xchg
push
stos
jnp
jno
mov
call
jbe
hlt
inc
sbb
mov
mov
(bad)
out
imul
jle
pop
stos
push
test
fild
push
or
rol
xchg
aaa
cmc
cmp
dec
repnz
js
push
cmp
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
scas
dec
inc
inc
push
js
mov
sbb
aam
dec
push
pop
pop
test
dec
push
call
cmp
pop
add
adc
int3
outs
inc
jo
dec
movs
loopne
(bad)
rcr
mov
push
and
cmp
(bad)
hlt
jecxz
js
not
neg
outs
lods
cs
fst
dec
and
jecxz
add
leave
mov
imul
imul
int3
sbb
add
add
imul
cli
fistp
or
out
and
sbb
cmp
add
repz
in
or
int
adc
lds
adc
jbe
pushf
cmp
sub
add
adc
lahf
or
pop
ret
mov
adc
out
fwait
sbb
mov
les
push
dec
fisttp
sbb
mov
and
add
pop
cmp
push
jmp
mov
rcl
adc
in
jecxz
stos
cmp
shl
sbb
add
xor
or
std
pop
pop
or
inc
add
dec
add
scas
mov
sbb
je
aas
mov
push
jbe
push
mov
retf
cmp
js
test
retf
clc
loopne
sbb
dec
lods
mov
test
movs
pop
test
add
push
inc
xchg
test
(bad)
cld
(bad)
hlt
inc
mov
ret
cmp
push
dec
sbb
in
scas
fisubr
ds
daa
jl
push
cmc
sar
or
retf
add
not
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
dec
inc
or
add
or
add
add
add
add
push
add
add
ret
dec
add
or
pop
jae
add
les
add
les
xchg
sub
sbb
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
daa
dec
inc
inc
push
js
movs
xchg
fild
inc
adc
mov
addr16
shl
movs
mov
jge
or
loopne
adc
jne
inc
add
mov
push
dec
jo
mov
mov
push
xchg
cmp
cli
test
mov
cld
jle
cli
push
add
adc
lahf
dec
or
sub
aad
fwait
mov
mov
mov
push
push
inc
fs
pop
pop
mov
add
pop
ins
loopne
nop
add
mov
sub
pop
push
call
or
push
or
or
jae
fldcw
add
cmp
cwde
ins
push
call
add
push
pop
or
cmps
xor
pop
aam
add
pop
stc
pop
es
fcomp
cwde
or
pop
mov
sbb
out
test
jo
mov
int
mov
lds
ins
in
test
psrld
imul
jg
jno
ret
mov
xchg
movs
sar
movs
pop
fwait
stos
stc
pop
popa
sub
cmp
mov
(bad)
nop
repz
pop
into
xchg
test
lods
outs
(bad)
enter
loop
or
mov
dec
popw
jno
imul
pusha
inc
gs
aad
sahf
in
push
fimul
mov
mov
pop
jno
popa
add
mov
jmp
les
mov
pop
cwde
xchg
bound
inc
add
inc
in
aad
mov
mov
shl
outs
in
addr16
js
pushf
and
aas
je
sti
daa
fcom
cmp
adc
rcl
jmp
sbb
cmp
xor
test
in
or
sbb
jecxz
popa
addr16
aam
push
mov
jmp
cld
mov
fwait
cwde
inc
dec
adc
and
dec
faddp
lods
out
ja
mov
pop
and
loope
cmp
retf
xor
mov
mov
cmp
daa
loope
jl
(bad)
dec
jecxz
shr
in
mov
(bad)
es
xchg
sti
imul
fsub
xlat
mov
addr16
call
cs
xchg
xor
aaa
retf
ja
mov
mov
dec
lods
push
cwde
mov
dec
out
xor
loope
(bad)
lds
bnd
xchg
call
cmp
sbb
or
mov
cdq
xchg
xor
and
cmp
outs
jl
push
sbb
sbb
sub
pop
or
push
or
mov
clc
pop
or
mov
scas
in
sahf
int3
add
ins
xor
ins
xchg
sbb
push
xor
out
sbb
dec
adc
stos
int3
add
xor
or
pop
add
mov
fcom
jmp
test
sahf
dec
push
mov
loop
popa
aad
push
cmp
aam
test
int3
adc
jb
sahf
push
addr16
lods
cs
xor
or
into
nop
ins
dec
or
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
xchg
dec
inc
inc
push
js
pop
xchg
out
outs
adc
(bad)
lahf
idiv
pop
jnp
mov
fimul
pop
out
dec
xor
mov
pop
inc
mov
or
mov
inc
add
mov
adc
and
mov
mov
fsubrp
jl
push
jns
cmp
daa
pop
repnz
push
in
jge
jbe
pop
push
inc
mov
es
enter
out
cmp
loope
es
or
out
push
jns
cmps
out
cmp
jb
push
xchg
js
push
jnp
call
pop
mov
(bad)
(bad)
ds
mov
icebp
test
sar
cmp
shr
dec
retf
lds
aaa
aaa
or
inc
xor
sbb
ins
adc
call
sub
push
sub
sub
inc
mov
nop
ins
jbe
xchg
or
out
jns
dec
movs
adc
sub
xlat
add
and
fdiv
js
mov
out
xchg
aas
fld
jl
mov
(bad)
fist
xor
pop
pop
mov
das
adc
lahf
fcmovu
sahf
and
cmps
cdq
repz
inc
adc
enter
outs
inc
adc
outs
dec
xchg
mov
mov
dec
pop
mov
les
sbb
repnz
dec
out
fnstsw
cs
xor
mov
out
mov
add
aaa
int3
xor
jbe
lahf
adc
add
(bad)
xchg
bound
lods
stos
jp
jmp
(bad)
daa
stc
cld
(bad)
fild
push
pusha
adc
xor
stos
aad
mov
jnp
cmp
sar
mov
cmp
xor
pop
jmp
xbegin
push
push
scas
pop
lods
push
cs
cmp
add
sbb
stos
aam
ja
sub
rcr
or
scas
and
xchg
aad
xchg
mov
js
mov
popf
fst
stc
aaa
jl
sub
xlat
add
adc
pop
xchg
sbb
stc
fadd
push
out
inc
sbb
jmp
stos
aad
cld
add
std
lds
push
xor
xor
add
mov
mov
xchg
sub
add
in
clc
icebp
movs
push
scas
jg
pushf
sahf
ds
adc
jne
mov
(bad)
ins
and
xor
xor
push
xlat
fldenv
add
push
lds
and
jecxz
xchg
dec
movs
push
out
imul
mov
add
inc
dec
mov
dec
mov
mov
mov
clc
jo
ss
inc
cmps
cmps
mov
ins
sbb
cmp
jecxz
jns
xlat
jmp
pop
(bad)
jecxz
out
in
inc
lahf
out
mov
cmp
jl
jle
pop
mov
sbb
nop
out
cmps
cmps
xor
inc
test
es
sub
cdq
mov
xchg
loope
iret
(bad)
pop
dec
es
mov
adc
pop
sub
mov
inc
imul
push
out
fcmovu
ficom
dec
and
pop
xor
dec
ret
loope
mov
popf
mov
gs
stos
jmp
mov
test
sar
nop
xchg
retf
outs
fild
push
aaa
stos
xchg
xor
into
add
pusha
pusha
nop
fnstenv
xchg
dec
in
scas
dec
mov
mov
mov
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
aad
inc
inc
push
js
lods
xchg
dec
dec
xchg
add
(bad)
jg
mov
mul
outs
mov
mov
and
or
shl
in
and
popf
and
test
dec
data16
btr
jae
mov
pop
jmp
out
lock
lahf
ret
repz
std
add
std
or
jo
mov
cli
mov
(bad)
adc
add
jmp
xor
push
or
dec
js
mov
inc
mov
add
loop
jbe
mov
mov
mov
test
repz
dec
pop
xchg
fxch
out
push
fs
cmc
jl
test
sub
pop
lahf
ja
add
jb
outs
ficomp
cmp
xchg
xchg
inc
cli
out
sub
enter
push
arpl
aas
dec
inc
jecxz
repnz
cmps
in
mov
cmps
call
outs
test
sbb
fsubr
mov
into
push
dec
or
mov
(bad)
mov
xchg
fwait
jge
pop
retf
enter
mov
and
outs
jle
add
jbe
push
cdq
xor
pop
mov
sbb
bound
push
xor
jmp
gs
daa
dec
into
mov
mov
mov
cmp
in
inc
push
xor
jnp
mov
out
cmps
push
sub
jae
xor
nop
pop
inc
push
sub
xor
ret
inc
dec
add
mov
inc
mov
cmp
xor
hlt
cmc
rcl
mov
ss
add
mov
fucomip
cmp
adc
ins
sub
jb
fistp
lahf
ds
dec
mov
sbb
mov
sbb
fs
aaa
pop
and
fmul
sub
hlt
cld
nop
gs
push
sub
mov
dec
dec
adc
add
jne
jno
(bad)
jge
push
or
inc
pop
outs
and
mov
fs
jmp
pop
and
or
(bad)
ror
sub
(bad)
mov
mov
xchg
test
sub
loope
in
iret
mov
in
push
sub
shl
add
cmps
fcmovnu
enter
jmp
push
xchg
ins
push
adc
add
push
out
inc
sub
rol
iret
dec
das
mov
sti
push
cmp
fisub
xchg
and
add
into
das
inc
inc
dec
inc
and
addr16
neg
jp
dec
icebp
jecxz
and
fcmovb
push
push
or
inc
call
(bad)
and
inc
xor
aaa
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
add
xchg
dec
inc
inc
push
js
in
popf
ja
fs
lahf
lahf
out
cmp
in
imul
leave
sub
and
mov
add
inc
and
mov
inc
mov
sbb
ins
(bad)
dec
fs
mov
sub
fs
mov
bound
xchg
xor
adc
xchg
mov
fstp
out
fsubr
jae
push
xor
cwde
add
xchg
sbb
aas
mov
fdivr
jns
out
cmp
sbb
adc
ds
shr
mov
fdivr
in
adc
pop
(bad)
jbe
mov
loope
ja
add
jg
stos
xchg
jp
mov
pop
pop
scas
cmp
test
mov
fdivp
(bad)
(bad)
in
arpl
js
dec
jl
sbb
dec
leave
and
sbb
mov
dec
sub
jbe
jmp
leave
repz
push
lods
dec
fldl2t
leave
pop
mov
or
in
retf
mov
push
pop
(bad)
jmp
push
lods
jge
sub
mov
int
fstp
adc
cmps
adc
arpl
repnz
(bad)
popf
adc
inc
cld
cmp
xchg
mov
jl
pop
test
movs
mov
sub
arpl
mov
div
imul
xchg
mov
mov
dec
mov
xlat
pop
ja
xor
or
dec
add
imul
sahf
fwait
js
mov
cmps
cmp
pop
loop
(bad)
(bad)
int
call
adc
sbb
repnz
std
mov
fcom
push
(bad)
(bad)
fsubr
jmp
fistp
cmp
sub
jge
idiv
adc
jecxz
xor
aas
pop
cwde
cdq
je
or
popf
cdq
repnz
stc
push
mov
sahf
pop
and
push
xor
cmp
xor
xor
pop
xchg
or
push
mov
mov
and
or
dec
cmp
out
cmp
jmp
fadd
not
mov
mov
(bad)
scas
mov
jb
and
(bad)
fs
je
mov
lods
push
ins
lods
xchg
cld
retf
mov
hlt
jg
xchg
add
cmp
mov
pushf
mov
dec
cmps
pushf
cmp
sub
cmp
js
push
repz
and
cmp
or
es
and
cmp
dec
inc
sbb
mov
push
fild
jmp
sub
js
pop
lds
mov
adc
sub
aaa
adc
pop
sbb
inc
sub
rol
sahf
(bad)
jmp
je
xchg
ins
sahf
pusha
imul
arpl
push
cmp
mov
and
xor
repz
mov
les
arpl
(bad)
xor
retf
xor
pop
jbe
fisttp
pop
and
cmp
sbb
sti
sti
jno
in
in
or
pusha
ret
ror
push
pop
pop
gs
stos
ds
js
jecxz
xchg
arpl
and
pop
movs
enter
aad
mov
hlt
add
push
nop
sbb
gs
push
and
test
sbb
dec
xchg
pop
cld
fsub
test
bnd
stos
mov
test
pop
sbb
xor
into
pop
cmp
aad
or
out
mov
sub
push
es
jge
cmp
pop
sub
bound
add
push
pusha
cld
push
add
push
push
in
dec
xchg
loop
sbb
call
repz
inc
pop
icebp
movs
clc
jbe
ja
cmp
xlat
xor
sbb
ret
inc
dec
jo
or
dec
mov
mov
sbb
loop
cli
ret
movs
mov
mov
fwait
adc
push
lock
stos
lock
out
pop
pop
pop
fbstp
fdivr
sbb
jmp
ja
sbb
jnp
je
fiadd
and
and
or
adc
bound
ins
mov
mov
jl
push
jno
gs
mov
dec
sbb
inc
pushf
popa
and
jmp
(bad)
push
pop
jg
jmp
mov
jl
ret
push
aas
ins
mov
loop
dec
hlt
mov
cmps
imul
mov
push
loopne
fdivr
sbb
ret
iret
js
add
nop
inc
sub
and
add
xor
add
add
push
sti
mov
push
dec
xchg
je
cmc
jp
sbb
test
repnz
pop
xchg
cli
add
jge
call
dec
cmps
dec
jecxz
mov
dec
lods
mov
push
mov
mov
js
retf
js
loope
mov
cmps
ror
in
or
push
stos
inc
mov
add
inc
sub
xor
jnp
stos
sub
loopne
xchg
sar
mov
fild
test
xor
cmp
daa
mov
sbb
mov
test
out
mov
xor
adc
or
call
jecxz
stos
inc
nop
adc
rcl
rol
inc
mov
or
and
inc
or
enter
mov
inc
aas
stos
dec
(bad)
xchg
mov
push
sub
fcom
pusha
lahf
mov
in
scas
sbb
pop
pop
xor
imul
das
repz
push
aas
inc
ins
daa
fmul
pushf
and
retf
jecxz
mov
jns
mov
cmps
call
xor
jmp
pop
mov
in
mov
std
rcr
in
(bad)
out
mov
sar
stos
aad
jecxz
adc
iret
iret
push
sub
mov
mov
inc
mov
xor
xor
imul
addr16
ror
or
adc
jns
add
push
jmp
jbe
or
mov
cli
(bad)
mov
fadd
jnp
add
mov
jle
and
mov
jo
inc
call
(bad)
div
adc
jp
aad
in
sub
(bad)
sbb
pop
mov
sub
retf
rol
retf
inc
dec
dec
sbb
ss
repnz
cmps
mov
imul
add
cli
pop
jl
shr
cmc
imul
fidivr
or
sahf
sahf
mov
gs
int
cmp
es
push
call
mov
popa
not
add
fstp
push
cmp
jno
mov
int3
test
pusha
mov
stos
fist
inc
cmp
rol
mov
into
cmp
xchg
adc
shl
in
pop
xor
iret
push
cmp
scas
fs
add
ins
test
sub
mov
sbb
mov
fs
loope
and
pusha
movs
lds
ret
bound
(bad)
xor
lods
cmp
in
or
int3
adc
outs
sbb
enter
jmp
inc
jg
ror
jns
xor
outs
loope
sbb
imul
mov
ret
xor
xor
loopne
cmp
mov
xor
arpl
mov
out
inc
and
mov
sbb
push
call
sub
pop
dec
sbb
and
ror
scas
loope
jb
frstor
ins
loope
movs
out
mov
and
cmp
cwde
pusha
rcl
bound
daa
mov
imul
fwait
adc
rol
(bad)
sbb
sbb
xor
xchg
xchg
sub
div
jne
arpl
push
shr
es
xchg
and
add
jae
jne
mov
sahf
jecxz
rcl
addr16
sahf
in
aad
hlt
jp
lods
mov
popa
dec
sbb
xor
push
fbstp
sbb
pop
ret
dec
add
mov
imul
pusha
sbb
ret
(bad)
mov
push
adc
mov
adc
popa
loop
push
add
std
inc
jp
sub
add
in
push
inc
mov
mov
movs
imul
movs
sub
lahf
lods
inc
retf
ror
cdq
cmps
fdiv
and
and
repz
arpl
es
push
jecxz
push
xlat
and
sbb
sbb
fisub
sbb
push
mov
pop
jle
sbb
loop
out
pop
in
idiv
jnp
cmc
hlt
int
or
dec
mov
jae
jecxz
iret
aas
(bad)
rol
xor
xor
xlat
inc
or
add
sub
shr
and
and
ds
sbb
jo
push
pop
pushf
sbb
mov
mov
sub
xchg
push
inc
mov
imul
cmp
cs
xor
dec
adc
push
retf
jb
sbb
xlat
test
shr
jge
mov
jecxz
mov
push
popf
mov
xchg
adc
sub
jne
imul
stos
int3
jo
ins
inc
xor
lods
xor
xchg
aam
ins
jo
(bad)
pop
loope
ins
pop
lods
scas
dec
out
pop
inc
in
jno
cmc
out
fist
cmp
xor
mov
call
and
(bad)
cwde
pop
jp
or
or
add
clc
push
test
loope
cmp
inc
xchg
ror
mov
push
ss
and
add
add
in
aad
pop
mov
iret
xchg
inc
sub
sbb
retf
inc
daa
scas
mov
mov
and
xchg
js
js
test
mov
jno
sub
retf
pop
push
and
inc
xchg
or
mov
sub
mov
push
push
xchg
sbb
push
adc
xor
adc
sbb
and
call
or
dec
hlt
mov
out
jo
xchg
push
fwait
jge
lahf
pop
jl
retf
inc
inc
cmc
xor
retf
jbe
xor
sti
sbb
test
sti
dec
dec
push
or
xchg
mov
nop
pusha
adc
jl
add
cmc
lea
retf
inc
loop
sub
and
xchg
mov
inc
and
ds
inc
lods
icebp
pop
dec
aaa
int
(bad)
jbe
xor
push
inc
mov
pop
repnz
mov
not
cli
add
loopne
pop
dec
mov
and
mov
test
cli
clc
scas
les
xor
call
or
pusha
xor
in
and
ins
shr
ror
mov
(bad)
das
jb
rol
mov
mov
aas
pop
fstp
pop
jbe
xchg
mov
adc
xchg
ret
jno
es
jge
cmp
push
pop
pop
test
adc
or
in
push
test
mov
cli
sti
xor
ret
cmp
add
aas
pop
or
or
dec
inc
and
add
imul
retf
(bad)
fs
rcl
fwait
push
retf
sti
push
shl
dec
pop
mov
fwait
cwde
push
or
ds
es
push
cmp
push
out
(bad)
imul
rcl
mov
jns
cdq
push
gs
out
jmp
ror
pop
dec
hlt
mov
mov
lds
sbb
mov
lods
ja
repz
dec
mov
sub
leave
mov
arpl
lods
mov
adc
retf
sbb
mov
gs
shl
jl
add
adc
ja
xor
leave
and
loop
call
int3
push
sti
dec
imul
and
sbb
inc
movs
rol
ja
cvtpi2ps
mov
mov
nop
jmp
xchg
jmp
xchg
xor
mov
in
jno
jecxz
pop
mov
mov
test
imul
or
mov
movs
call
(bad)
(bad)
rcl
pop
xchg
shl
xor
sub
and
rol
adc
lods
into
inc
iret
xchg
sub
mov
sub
cmps
xor
jl
mov
push
adc
loopne
and
sub
adc
scas
daa
mov
sbb
dec
or
sub
int3
test
retf
dec
cmp
adc
sbb
adc
xor
inc
sub
inc
add
enter
bound
retf
pop
(bad)
xor
jl
in
xor
or
xchg
xlat
fsubr
hlt
cwde
fidivr
(bad)
fdivrp
outs
adc
test
ror
inc
xchg
mov
test
mov
cmps
push
adc
dec
sub
movs
sbb
or
ins
cmps
adc
jno
pop
mov
push
adc
out
test
sbb
pop
add
cmc
cmps
les
mov
mov
stos
stc
hlt
mov
adc
fwait
adc
or
bound
ins
and
mov
and
add
mov
lods
mov
mov
outs
mov
sbb
adc
cmp
data16
std
shl
xchg
call
jmp
mov
cmp
repnz
test
pop
add
je
cmp
fwait
sub
not
inc
pushf
fwait
jmp
inc
push
mov
push
lea
and
ss
inc
xchg
inc
call
and
xchg
loopne
ds
pop
les
inc
cmp
(bad)
mov
sbb
scas
inc
dec
daa
jg
test
and
loopne
sub
(bad)
add
shr
es
xlat
retf
mov
and
add
push
test
shr
ins
xor
mov
movs
push
les
xchg
pusha
mov
dec
push
sub
adc
sbb
into
or
pusha
inc
mov
or
push
shl
in
(bad)
xchg
cwde
cdq
sahf
loopne
fst
mov
pushf
sub
cmp
xchg
dec
loope
dec
test
mov
out
fwait
inc
dec
or
dec
sub
rol
ins
xchg
retf
sahf
inc
shr
lods
xor
(bad)
shl
div
add
cmp
ret
lods
loopne
adc
(bad)
ins
xchg
(bad)
out
or
and
pop
dec
adc
pop
mov
inc
loopne
mov
xchg
sbb
add
call
adc
daa
push
jns
cmp
inc
(bad)
jne
mov
mov
push
jo
sbb
jecxz
and
jp
xchg
ret
push
(bad)
retf
mov
jecxz
push
sbb
adc
jnp
adc
pop
or
mov
mov
scas
mov
add
js
sub
or
aad
int3
inc
mov
aaa
std
mov
test
push
daa
enter
hlt
ins
xchg
adc
push
dec
imul
sbb
shr
sbb
sub
push
xchg
xchg
lea
loop
mov
push
nop
cs
add
jmp
arpl
jecxz
ja
jns
inc
into
leave
inc
idiv
mov
push
lock
xchg
and
adc
xor
jecxz
jge
daa
and
das
sbb
stos
fstp
scas
ret
cdq
in
pop
ss
xchg
test
mov
cmp
into
outs
mov
jno
popf
push
add
sbb
xor
dec
sub
js
and
std
and
mov
xchg
not
loope
mov
fidiv
pusha
add
add
shl
lods
xor
(bad)
test
in
test
lods
add
pop
test
adc
sbb
adc
inc
dec
mov
mov
rcr
mov
loopne
fbld
mov
push
mov
adc
sbb
sbb
xchg
cdq
push
add
adc
in
xchg
push
pop
cmps
adc
jmp
outs
aam
or
mov
xchg
mov
mov
inc
dec
test
pop
push
retf
inc
(bad)
bound
dec
faddp
sti
push
xor
popa
lods
ret
mov
add
rol
pop
and
sti
nop
mov
mov
retf
push
retf
and
or
xor
movs
aad
loope
push
neg
mov
cmc
bound
sub
adc
or
and
rcr
inc
mov
jnp
mov
pop
out
cmp
mov
cmp
push
jmp
cwde
adc
sbb
clc
mov
shl
ds
adc
stos
mov
mov
dec
inc
mov
sbb
inc
jl
test
gs
mov
call
xchg
add
push
es
fild
repnz
ret
dec
cmp
sub
sbb
add
movs
jne
and
mov
push
jecxz
into
and
nop
cli
call
xor
push
push
push
push
mov
jmp
and
mov
mov
pop
add
shl
and
jne
jne
aaa
mov
sbb
mov
mov
pop
fwait
mov
sbb
adc
cld
push
fwait
sub
push
or
lods
(bad)
sub
test
sub
and
data16
dec
mov
cmp
jecxz
jae
fstp
sbb
mov
inc
imul
or
push
jle
dec
pop
shr
popa
lock
or
pop
movs
loop
imul
sub
sbb
(bad)
fsub
bound
jb
stc
retf
cwde
icebp
adc
cmp
(bad)
or
mov
add
out
ret
xchg
repz
pop
xchg
push
push
shl
xor
mov
lods
xchg
mov
out
call
mov
mov
push
pop
xchg
push
add
mov
and
xor
pop
into
dec
arpl
lods
mov
test
jl
xchg
and
push
dec
xor
ret
sbb
and
jge
bound
ret
xor
adc
dec
popa
adc
or
fcomp
or
add
test
pop
test
aas
call
arpl
and
ja
test
add
(bad)
dec
xchg
test
mov
adc
test
or
adc
push
cmp
fnstenv
and
mov
in
inc
jns
stos
ins
outs
cmp
js
ins
ret
push
sbb
xor
int
cmp
jge
jo
test
and
dec
aam
adc
cmps
mov
push
shl
xor
fdiv
rcr
test
rcl
lds
dec
ds
gs
ss
(bad)
cmps
test
(bad)
nop
rol
(bad)
and
cmps
sub
pop
pusha
cmp
jns
out
fcmovu
ret
cmp
in
mov
xor
mov
and
test
jl
xchg
jp
imul
jge
add
inc
nop
movs
xor
or
enter
xor
mov
add
xchg
dec
sbb
jle
bound
add
fistp
scas
lea
fwait
popf
jae
out
test
and
and
xlat
pop
in
fwait
cmc
cmp
ret
adc
push
popa
mov
iret
pop
adc
ins
ss
and
and
sbb
loope
adc
adc
pop
xchg
pusha
mov
xchg
bound
nop
inc
jmp
and
jge
pop
dec
mov
inc
dec
shr
xchg
iret
movs
add
gs
or
jae
pushf
xchg
inc
or
pop
fisubr
adc
xor
es
sbb
add
test
cmp
adc
pop
sub
adc
and
cmps
pop
sub
fdiv
(bad)
mov
addr16
cmp
and
out
jno
popf
ja
and
rcl
inc
pop
cld
fdiv
mov
lds
mov
mov
(bad)
out
lods
push
(bad)
out
lock
push
and
cmp
shl
jecxz
push
out
mov
xchg
sbb
iret
int3
mov
xchg
lods
ins
xchg
hlt
js
sbb
outs
xchg
inc
leave
mov
(bad)
idiv
mov
jo
mov
cmp
push
jge
test
movs
and
ror
cmp
das
stos
mov
jne
or
jno
cmp
xlat
cmc
cwde
cwde
pushf
in
das
sub
dec
jo
xor
inc
dec
jp
inc
dec
adc
arpl
mov
cmp
jno
adc
repnz
shl
inc
adc
sbb
fmul
dec
popa
les
pop
imul
push
inc
adc
push
dec
and
cli
and
xchg
dec
cmp
enter
xor
cmp
lods
mov
out
xchg
mov
fwait
jg
sub
(bad)
aas
mov
pusha
icebp
das
pop
jle
cld
and
fdiv
pop
stc
retf
fidiv
retf
jae
pop
iret
jne
(bad)
mov
xchg
cmc
int
xlat
xor
mov
repz
ffreep
call
mov
aad
inc
jbe
and
cmp
sbb
sbb
jmp
mov
outs
lods
loopne
ins
ret
fdiv
sbb
and
inc
sub
jo
retf
xchg
das
mov
xor
push
pop
scas
sub
mov
iret
fild
add
add
pop
inc
and
retf
mov
push
dec
mov
jle
imul
mov
mov
xchg
push
sbb
int3
int3
jb
int3
sbb
push
cs
mov
mov
mov
cld
fisubr
inc
pop
jle
mov
into
nop
xlat
mov
movs
rcr
pop
jne
jge
aas
clc
mov
idiv
int
mov
in
cmp
sbb
add
sub
dec
dec
dec
push
lods
push
imul
push
mov
push
sbb
int3
dec
imul
mov
inc
add
mov
out
jnp
jnp
mov
mov
push
std
xor
pop
ret
imul
inc
mov
sub
dec
out
arpl
(bad)
scas
cs
outs
adc
mov
add
shr
cmp
shl
mov
mov
fs
call
jge
fisttp
mov
dec
ret
jne
lahf
cld
cli
xlat
(bad)
cmp
shl
in
push
scas
(bad)
scas
mov
mov
hlt
pusha
test
jo
cmc
scas
jg
ja
retf
gs
(bad)
retf
cmp
call
out
push
inc
fdivrp
(bad)
aaa
(bad)
cli
std
dec
mov
stc
add
push
(bad)
(bad)
pop
in
sahf
(bad)
(bad)
std
sti
jmp
cmps
fucomp
rcr
imul
pushf
jle
jns
movs
jb
cmp
mov
daa
or
ficomp
push
cmps
fnstsw
inc
dec
scas
pop
pop
dec
stos
mov
push
rol
pusha
xchg
mov
lock
(bad)
mov
out
push
sub
or
mov
sub
mov
push
les
ja
jbe
inc
jne
pushf
cli
(bad)
test
(bad)
fadd
or
or
sbb
daa
mov
jbe
ins
das
xchg
inc
movs
sbb
jmp
cld
mov
(bad)
pop
clc
lods
loope
add
shl
mov
imul
int3
mov
aad
mov
jp
aaa
push
pop
jp
sub
adc
cmps
jo
sbb
adc
jae
(bad)
cld
lock
retf
daa
dec
pushf
cmp
xchg
adc
jne
sub
pop
inc
push
jle
scas
xlat
retf
pop
and
push
mov
lea
adc
(bad)
xchg
shr
mov
and
ds
out
cmp
dec
sbb
lods
mov
sbb
clc
or
sub
addr16
iret
xchg
sbb
mov
push
iret
cmp
adc
cmp
cmps
and
inc
fcmovnb
out
jp
popf
cmp
pop
mov
test
jmp
out
push
stos
adc
xor
rcl
lahf
stc
(bad)
sti
jle
jecxz
pop
das
add
mov
mov
jo
int3
cdq
mov
in
sti
pop
(bad)
push
push
fisttp
out
fidivr
add
cmp
push
bound
aas
ds
call
pop
lods
push
jle
lods
leave
push
add
jb
sbb
fistp
cld
or
sbb
mov
pop
xor
in
aas
enter
pop
inc
sub
fidivr
lock
pop
cmps
(bad)
(bad)
lock
mov
das
adc
fstp
int
or
jb
loopne
mov
cmp
xor
or
dec
loop
test
and
mov
stc
call
lods
sbb
jge
jne
sbb
jge
push
sub
out
shld
push
inc
pusha
mov
stos
(bad)
cmp
pop
xchg
retf
aas
adc
fisub
dec
inc
mov
mov
out
pop
pop
pop
aas
aas
nop
mov
sbb
add
retf
xchg
inc
cdq
ja
push
mov
xchg
dec
dec
mov
mov
sub
call
scas
dec
mov
cmps
aad
inc
addr16
push
cwde
dec
xchg
es
add
lock
pop
das
xor
imul
call
cld
ret
lahf
mov
dec
mov
bound
in
repnz
and
mov
pop
out
loop
mov
xor
repz
ret
in
pop
xchg
xchg
into
pop
pop
je
cld
cli
shl
mov
call
xor
test
stos
loop
sar
stos
inc
aam
shr
cmps
xlat
outs
mov
push
pop
sub
ds
stos
arpl
inc
sub
mov
mov
shl
daa
dec
lock
mov
clc
clc
xchg
dec
lahf
jns
(bad)
mov
dec
add
js
xchg
push
repnz
mov
mov
repz
or
gs
and
iret
jae
pop
inc
out
mul
int3
int3
int3
in
mov
sbb
retf
cmp
in
lds
fild
mov
xor
sub
std
js
jno
sti
ret
stc
push
cmp
clc
xchg
retf
jecxz
jle
iret
jne
(bad)
shr
mov
(bad)
lds
pop
mov
imul
imul
(bad)
das
test
imul
jg
or
jmp
sti
fdivp
pop
fwait
out
mov
mov
rol
dec
sbb
pop
mov
jg
push
aas
hlt
mov
(bad)
pop
(bad)
stc
inc
push
mov
ret
pop
retf
nop
jmp
mul
imul
fistp
mov
xchg
repz
ja
adc
mov
das
jecxz
sti
fxch
ds
in
mov
or
and
sbb
shld
mov
out
mov
mov
mov
cmp
push
mov
push
sbb
outs
push
jnp
sub
push
jl
push
movs
mov
push
mov
push
out
mov
sbb
mov
lahf
jl
test
or
(bad)
lock
pop
frstor
ret
sbb
jmp
cld
out
(bad)
imul
neg
dec
add
hlt
mov
pop
pop
cmp
push
jmp
pop
xchg
in
(bad)
lea
shr
jbe
movq
ret
out
jns
fldenv
repz
rol
sar
(bad)
xor
jge
or
(bad)
mov
outs
jg
sbb
rcl
dec
mov
(bad)
call
jl
ins
xor
adc
adc
dec
sub
mov
cmps
xor
adc
repnz
jnp
jmp
and
cmp
jnp
repz
pop
mov
aam
aam
setbe
daa
ret
xor
mov
inc
in
cmc
jp
jmp
scas
or
(bad)
cld
mov
mov
jmp
cld
dec
and
mov
fistp
dec
les
jnp
int
ins
ss
xchg
jb
dec
mov
mov
out
sub
es
xor
outs
test
ret
mov
imul
cli
stos
iret
pop
out
std
iret
shl
movs
adc
out
jmp
test
add
retf
daa
aas
stc
leave
neg
jcxz
mov
pop
je
call
adc
rcr
sbb
dec
xchg
in
mov
in
fidivr
outs
(bad)
loope
add
inc
push
movs
pop
or
es
(bad)
or
mov
stos
xchg
push
sbb
pop
cmp
call
fdivr
enter
out
out
add
inc
push
arpl
add
add
dec
inc
scas
inc
pusha
cmp
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
jo
inc
inc
push
js
xchg
xchg
int
push
popa
adc
lahf
idiv
jmp
push
or
std
add
fisttp
aad
inc
inc
mov
lea
inc
nop
nop
push
fwait
mov
loope
inc
and
cdq
or
in
cmp
fdivr
out
cmp
mov
mov
cmp
cmp
jae
sbb
dec
push
les
out
jbe
sbb
or
stos
stos
inc
cmp
sub
inc
push
add
inc
lods
fiadd
pushf
cmp
imul
and
in
rol
pop
inc
inc
sbb
mov
cli
mov
push
fst
cwde
ret
fdivr
mov
add
mov
sub
mov
inc
mov
in
mov
mov
and
xor
rol
out
outs
pop
jns
(bad)
dec
jo
sbb
ror
bound
mov
add
adc
in
pop
adc
xor
dec
fstp
jbe
(bad)
jbe
or
(bad)
data16
mov
in
adc
inc
repz
inc
push
adc
sub
cmc
test
push
lods
fldenv
mov
pop
mov
out
cmp
gs
and
ins
or
or
sbb
or
mov
imul
add
hlt
jnp
jge
(bad)
mov
imul
inc
jnp
in
shl
stos
stc
scas
out
and
scas
fincstp
mov
je
lds
fsubr
cmps
pop
cmp
add
and
loope
dec
leave
or
popf
xor
jmp
add
cmps
sar
cmc
int
hlt
mov
inc
in
mov
repnz
out
mov
lods
add
scas
cwde
jbe
and
stos
mov
(bad)
mov
add
or
push
and
jmp
into
dec
sub
xor
mov
iret
stc
rcr
mov
mov
fimul
into
pop
nop
test
dec
imul
push
sbb
in
sub
mov
cld
pop
fsubr
ds
mov
push
fcmovnbe
sbb
add
push
xor
jb
cmp
dec
mov
shl
mov
sbb
sbb
stos
inc
sub
movs
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
add
or
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
call
js
pushf
xchg
xor
push
adc
jg
mov
xlat
cwde
not
xchg
push
cmp
cmp
jne
outs
inc
mov
aas
inc
mov
and
jle
push
sbb
sbb
mov
xchg
cwde
mov
imul
pop
hlt
emms
mov
pop
xchg
dec
push
cmps
sbb
imul
sar
scas
outs
iret
repz
imul
sub
clc
lea
in
dec
xor
loope
int
xchg
jo
adc
xchg
fcmovb
add
xor
jmp
inc
mov
pop
mov
hlt
cs
inc
or
mov
mov
add
imul
movs
sub
iret
daa
xchg
jnp
jl
sbb
loop
dec
mov
and
(bad)
push
xor
mov
cmp
ror
data16
arpl
fwait
push
add
xor
inc
loop
and
or
sbb
arpl
mov
ins
adc
pop
sub
dec
test
cli
pop
iret
dec
cmps
pop
sbb
pop
sbb
sbb
dec
jmp
push
sub
sub
test
jno
icebp
loopne
hlt
shl
iret
jp
aaa
or
je
daa
sub
mov
xchg
arpl
sbb
(bad)
pop
push
adc
jle
loope
clc
jle
das
sti
sub
ror
push
retf
stc
inc
xor
push
lods
lds
add
leave
mov
or
jns
call
pop
test
sbb
pop
adc
or
push
jge
adc
xchg
gs
sbb
push
mov
pusha
jns
xchg
(bad)
push
jle
jecxz
in
jo
and
(bad)
xchg
mov
push
add
popa
scas
xchg
jecxz
(bad)
xchg
gs
cmp
cmp
cs
movs
push
(bad)
cli
pop
cli
xor
xor
fwait
pusha
add
add
dec
inc
dec
inc
scas
inc
pusha
add
add
or
or
add
or
add
add
add
add
or
add
add
jp
add
add
pop
test
xchg
pop
push
dec
adc
aas
pop
inc
and
inc
add
or
and
sub
and
xchg
push
and
push
inc
(bad)
or
xchg
add
xor
add
xchg
and
test
nop
mov
pop
xchg
and
push
out
jae
into
sbb
lahf
retf
xor
push
jbe
imul
xchg
inc
scas
pop
dec
mov
(bad)
sbb
loopne
adc
adc
loopne
or
dec
xchg
daa
sbb
add
jmp
inc
pop
pop
xor
ficom
add
pop
test
adc
dec
and
mov
sub
(bad)
jb
and
test
cmc
ficomp
pop
pusha
cld
sbb
push
mov
add
sub
dec
in
jae
arpl
sbb
test
in
fimul
push
movs
dec
jecxz
or
(bad)
(bad)
rcr
cs
mov
add
repz
std
jno
int
mov
sar
ss
jns
mov
mov
loop
aaa
and
sbb
addr16
mov
mov
xor
jge
mov
add
jge
jmp
mov
mov
push
scas
scas
xor
int
add
jbe
retf
cmp
add
sub
mov
sbb
call
mov
shrd
pop
push
movs
push
sub
movs
dec
push
lods
xchg
jmp
int
scas
inc
and
ins
call
jmp
cmp
imul
pop
mov
std
inc
sub
add
pop
ret
fwait
out
xor
and
sub
mov
sub
call
xchg
xor
dec
cdq
rsqrtps
add
push
into
cmp
iret
jp
dec
and
retf
jle
hlt
test
pop
xor
ins
lods
ss
cmp
in
xchg
xor
retf
sub
lds
jmp
xlat
mov
dec
aad
in
pop
scas
cmp
test
jge
outs
push
push
push
pop
inc
inc
loope
jle
imul
retf
mov
imul
cmps
out
push
mov
aad
xchg
push
push
retf
pop
ret
scas
pop
or
push
inc
xchg
sbb
ret
nop
dec
sbb
std
stc
dec
mov
push
mov
lods
xchg
popf
xchg
sub
lahf
lahf
xchg
jmp
pop
cmp
cmp
jg
scas
push
add
rcr
add
popf
(bad)
(bad)
repnz
into
pop
div
pop
add
and
add
int3
jle
sbb
adc
mov
inc
cmp
xor
add
push
dec
and
dec
inc
dec
inc
scas
inc
pusha
sub
add
add
add
add
and
add
add
call
add
add
and
add
add
add
add
add
and
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
xchg
ja
ja
ja
ja
ja
ja
add
mov
mov
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
clc
clc
mov
clc
clc
(bad)
dec
add
jbe
xchg
clc
mov
add
ja
enter
(bad)
(bad)
(bad)
(bad)
clc
clc
test
ja
enter
mov
jg
enter
xchg
(bad)
(bad)
(bad)
clc
clc
test
ja
call
(bad)
(bad)
push
add
mov
clc
mov
add
js
mov
(bad)
(bad)
clc
push
add
mov
clc
mov
add
mov
(bad)
(bad)
(bad)
push
jg
add
js
js
call
(bad)
imul
test
call
(bad)
(bad)
(bad)
(bad)
jg
add
mov
mov
enter
mov
jg
mov
(bad)
(bad)
(bad)
(bad)
clc
out
test
call
mov
add
clc
vpmacssdd
(bad)
test
mov
mov
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
dec
(bad)
clc
test
mov
mov
jg
(bad)
clc
clc
vpmacssdql
ja
ja
ja
ja
ja
ja
js
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
inc
add
ja
add
jns
add
push
add
jge
add
test
mov
mov
mov
test
mov
ret
add
xchg
pop
add
mov
ret
add
mov
mov
lds
arpl
lds
arpl
retf
xchg
data16
cwde
gs
fwait
gs
xchg
imul
leave
xchg
push
add
cdq
ins
add
popf
outs
add
sahf
imul
(bad)
movs
push
aad
ins
add
scas
outs
add
mov
jne
fldcw
jno
fldcw
js
fnsave
jbe
fbstp
jns
in
mov
jo
loopne
je
in
jae
loopne
jp
in
js
in
jg
in
ret
hlt
sar
mov
add
mov
add
mov
mov
lods
add
mov
add
in
mov
jmp
add
ror
lock
mov
not
add
ret
out
xchg
add
les
add
leave
xchg
add
(bad)
cdq
add
leave
cdq
add
into
cwde
add
iret
popf
add
rcr
repnz
sahf
add
into
mov
add
aad
add
aam
add
(bad)
movs
add
fsub
add
fsubr
add
fsubr
add
fidiv
add
(bad)
add
in
add
loope
add
out
add
rol
retf
leave
mov
int3
retf
int
retf
xlat
rol
out
fadd
clc
out
add
jmp
iret
add
out
add
in
in
add
jmp
add
repnz
add
out
lock
lock
add
icebp
icebp
add
repz
add
hlt
repnz
repz
add
hlt
hlt
add
cmc
test
div
add
stc
test
idiv
add
idiv
add
clc
clc
add
cli
std
add
cld
inc
clc
clc
stc
add
cld
sti
add
sti
cld
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
outs
cmp
cmp
cmp
cmp
cmp
cmp
add
inc
test
inc
test
test
test
cmp
test
mov
test
xchg
xchg
cmp
test
js
jns
jns
js
xchg
jl
jns
jns
test
test
or
or
or
add
add
add
jo
jo
jo
xchg
jns
cmp
test
push
push
pi2fd
or
or
js
mov
mov
cmp
test
pop
pop
pop
pop
pop
pop
or
js
jo
jo
jo
xchg
cmp
test
and
sbb
sbb
or
mov
xchg
test
test
and
and
and
and
sbb
js
mov
mov
cmp
test
and
and
and
and
and
sbb
jo
jo
jo
test
cmp
test
sub
sub
sub
sub
sub
and
mov
test
add
sub
sub
sub
sub
sub
js
jo
jo
jo
test
cmp
test
cs
cs
das
cs
mov
mov
cmp
test
cs
xor
xor
xor
sub
jo
jo
jo
mov
add
cmp
inc
cmp
cmp
cmp
cmp
ss
mov
test
cmp
test
pop
pop
push
dec
inc
inc
inc
cmp
js
jo
jo
jo
mov
cmp
test
imul
push
dec
js
mov
mov
cmp
test
ins
imul
pop
dec
js
jo
jo
jo
mov
cmp
test
ins
ins
push
pop
dec
js
mov
mov
cmp
test
push
push
push
push
push
dec
dec
dec
dec
dec
test
jo
mov
add
inc
test
test
test
test
test
add
test
mov
mov
test
test
inc
outs
jo
outs
outs
jo
outs
outs
jo
jo
outs
outs
jo
jo
jo
jo
outs
outs
jo
outs
cmp
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
add
add
cmp
cmp
cmp
cmp
cmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
and
add
add
adc
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
jle
mov
dec
test
dec
test
dec
test
dec
test
dec
mov
dec
xchg
dec
test
dec
test
dec
jne
xchg
add
add
add
add
mov
(bad)
mov
lods
mov
(bad)
mov
stc
idiv
mov
lods
mov
(bad)
mov
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
out
(bad)
cld
cld
cld
(bad)
stc
std
(bad)
push
clc
cli
(bad)
cli
(bad)
(bad)
push
cld
(bad)
push
stc
cld
push
stc
sti
(bad)
clc
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
cli
(bad)
(bad)
(bad)
stc
(bad)
(bad)
push
sti
(bad)
push
div
push
idiv
push
idiv
push
div
push
cmc
hlt
push
repz
repnz
icebp
lock
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
repnz
sti
stc
idiv
mov
add
add
div
icebp
(bad)
sti
stc
idiv
cli
sti
cld
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
push
repz
push
idiv
push
clc
stc
push
idiv
push
div
push
hlt
hlt
push
repz
lock
in
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
clc
div
(bad)
sti
stc
idiv
mov
inc
(bad)
mov
jl
(bad)
mov
jnp
push
jns
push
js
push
jbe
push
out
hlt
cmc
idiv
retf
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
hlt
cmc
push
repnz
out
out
out
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
mov
mov
ror
(bad)
mov
mov
mov
xchg
xchg
mov
test
mov
out
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
cmc
cmc
(bad)
out
lock
(bad)
in
in
in
(bad)
in
out
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ror
ret
mov
ret
(bad)
inc
(bad)
fs
mov
mov
ret
lea
ret
mov
ret
inc
mov
rol
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
idiv
push
div
push
icebp
icebp
(bad)
out
out
out
(bad)
out
out
lock
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ret
lea
(bad)
xchg
imul
(bad)
xchg
imul
(bad)
xchg
push
inc
xchg
inc
xchg
gs
xchg
fs
xchg
arpl
les
out
hlt
div
push
div
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
div
push
repnz
lock
out
lock
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
lds
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cwde
imul
cwde
imul
cwde
push
leave
cwde
imul
(bad)
xchg
pop
jmp
out
push
idiv
push
idiv
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
leave
xchg
arpl
int
outs
dec
sahf
outs
dec
sahf
outs
dec
lahf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
ins
dec
popf
ins
dec
cwde
gs
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
into
fwait
gs
mov
jb
shl
jae
shl
jb
shl
jb
shl
jno
rcr
out
hlt
cmc
stc
(bad)
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
shl
jne
aad
jne
aad
jne
aad
jne
aad
jne
(bad)
test
call
test
call
test
call
test
call
test
call
movs
ins
jmp
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
mov
jle
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
xlat
cmps
imul
fisubr
ja
fldcw
js
fldcw
js
fldcw
ja
fldcw
jo
out
out
hlt
idiv
(bad)
clc
clc
clc
push
div
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
inc
nop
addr16
(bad)
gs
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
fsubr
jbe
fnsave
jns
fnsave
jp
fnsave
jp
fnsave
jp
fnsave
jb
out
out
repz
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
dec
cdq
imul
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
jecxz
mov
call
mov
jp
fbstp
jp
loopne
jp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
je
out
out
hlt
idiv
push
clc
stc
push
idiv
push
clc
clc
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
call
cmps
ins
call
movs
imul
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
hlt
(bad)
sti
stc
idiv
out
xchg
push
(bad)
(bad)
in
iret
mov
jmp
ret
mov
in
cmp
mov
cmp
mov
jg
in
js
out
out
cmc
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
(bad)
outs
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
std
(bad)
sti
stc
idiv
jmp
loopne
push
(bad)
push
fsubr
(bad)
out
shl
(bad)
in
int
(bad)
jmp
xchg
(bad)
jmp
jmp
out
push
idiv
push
clc
stc
push
clc
clc
push
clc
stc
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
jmp
mov
jo
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
jmp
push
loop
push
fbstp
push
fldcw
push
(bad)
movs
push
aam
(bad)
out
rcr
in
retf
out
out
hlt
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
in
ret
in
mov
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
in
into
mov
(bad)
cli
jmp
mov
push
fbstp
push
fld
push
(bad)
sahf
push
rcr
jmp
out
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
rol
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
sti
(bad)
sti
stc
idiv
loop
mov
out
cdq
jmp
lds
jmp
les
in
xchg
jmp
ret
xchg
jmp
ret
in
(bad)
jmp
ror
cli
sti
cld
(bad)
cli
sti
cld
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
sti
in
(bad)
sti
in
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
repz
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
clc
stc
push
clc
stc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
stc
cli
(bad)
sti
stc
idiv
mov
add
add
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
retf
int
retf
int3
retf
int3
retf
retf
leave
dec
retf
int3
retf
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
add
and
add
or
(bad)
(bad)
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
mov
push
add
add
xchg
mov
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
add
push
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
inc
add
fiadd
add
and
add
inc
add
add
add
add
pop
inc
outs
jb
ins
ins
dec
popa
imul
jb
gs
ins
add
and
